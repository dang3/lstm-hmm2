jmp
aam
outsb
hlt
insl
add
iret
xchg
test
lods
cmp
add
sbb
arpl
add
pop
subb
cmp
in
xor
xor
sub
sti
xlat
and
popf
xchg
xor
xor
decb
sbb
int
jle
in
into
sub
fsubl
push
mov
addb
clc
daa
sbb
out
mov
fistpll
mov
fdivrl
cmp
fstl
and
jl
negb
adc
xor
and
out
xchg
cmp
add
test
push
rolb
clc
jnp
mulb
idivb
push
icebp
xchg
shlb
stc
xor
xchg
pusha
add
div
sub
les
xchg
push
lds
clc
inc
rol
rcrb
mov
add
sbb
xlat
cmp
sub
outsl
in
sarb
clc
mov
jnp
add
dec
mov
xor
cmc
mov
mov
xorl
push
call
scas
insl
sbb
push
and
mov
sbb
push
sbb
aaa
repnz
jmp
mov
sar
repz
mov
shlb
in
repnz
scas
add
lea
xor
dec
xchg
icebp
adc
shlb
lods
cld
add
cmp
xor
addb
das
les
and
mov
inc
mov
xchg
and
loopne
fdivs
push
ljmp
sbb
dec
or
movsb
xlat
add
movsb
jne
mov
jo
aaa
movsl
xor
subb
push
push
rcll
sbb
pop
xchg
fistpl
jle
and
repnz
dec
pop
inc
out
push
dec
test
lock
adc
pop
pop
dec
push
add
call
add
xor
rcrl
and
xlat
fisubrs
imul
std
jne
sbb
fmuls
ljmp
fadd
mov
sarb
add
fistpl
add
inc
lcall
loop
scas
das
mov
hlt
nop
and
and
clc
es
test
push
test
sub
add
shl
dec
testb
aam
sub
cmpsb
fstl
ss
ja
and
sar
js
and
call
daa
cli
pop
jmp
fistpll
xorl
scas
nop
iret
cmp
or
cmp
cmp
sbb
inc
sub
fdivl
movsl
jmp
pop
imul
pop
aas
push
addr16
xchg
sub
ss
push
mov
jle
scas
mov
cmpsb
cmp
rolb
add
push
xor
fsub
cmp
sti
dec
iret
roll
jnp
and
adc
jno
fimuls
push
pop
out
ss
nop
xchg
pop
in
sti
sahf
dec
and
popf
cmp
xor
cmp
and
add
rolb
mov
inc
fimull
lahf
insl
adc
test
sbb
fimull
jnp
xor
arpl
xor
iret
fldcw
cwtl
mov
sbb
outsl
pop
js
and
insb
mov
mov
mov
les
aaa
sbb
mov
and
sub
mov
rorb
std
jbe
insb
lods
outsb
insl
push
loop
mov
sub
ret
rcr
mov
int
add
in
ja
add
stos
ds
adc
jmp
sarb
rcrb
mov
dec
les
cmp
inc
clc
adc
xchg
pop
mov
out
cltd
stc
test
push
repz
fwait
idivl
cltd
lods
sti
sahf
mov
lods
adc
v4fnmaddps
andb
jl
insb
push
push
cld
dec
fwait
dec
dec
pusha
cmp
mov
add
movsl
arpl
test
or
inc
sbbb
daa
xchg
icebp
test
or
adc
aas
mov
push
mov
lds
jae
mov
in
dec
cmpsb
lret
adc
xchg
lods
roll
jbe
push
or
cmp
xor
adc
jo
push
bound
sahf
aaa
out
cld
pop
dec
in
xor
xor
jne
adcl
mov
popa
add
loope
jo
clc
leave
std
sbb
stos
movsl
inc
shrl
sbb
rolb
cli
fsubrl
in
push
mov
out
sbb
test
loop
sub
mov
inc
pop
jo
enter
pop
mov
cs
into
and
rorl
push
pop
pop
adc
dec
dec
pop
test
xchg
cwtl
mov
loop
xor
into
and
xchg
out
movsb
fmuls
jne
add
inc
pop
mov
add
mov
mov
push
and
rcrb
pop
lahf
and
aaa
in
pushf
xchg
dec
repz
dec
mov
stos
out
iret
cli
or
xchg
test
adc
fstps
movsl
aas
repz
mov
pop
filds
inc
dec
mov
or
and
jmp
pop
sub
xlat
bound
inc
popf
fs
dec
jno
popf
sti
push
xchg
xchg
and
cmpsb
outsl
lret
xchg
popa
pop
pop
scas
out
and
das
and
mov
ljmp
in
jnp
pop
jl
xchg
or
pushf
xlat
les
les
xor
xor
cmp
insb
mov
into
xorb
out
jecxz
sub
dec
adc
frstor
xor
ret
xchg
scas
in
lods
sbbb
and
rolb
or
adc
sahf
data16
jecxz
push
subl
xchg
jmp
in
adc
mov
jbe
aas
xchg
dec
sub
and
dec
aad
mov
xorl
sub
xor
rolb
aaa
dec
out
mov
inc
bound
adc
xchg
and
ss
pop
lret
std
inc
inc
sbb
or
add
mov
ret
jae
dec
sbbl
lcall
pop
xchg
mov
inc
pop
ja
jmp
adc
inc
nop
lahf
enterw
addb
inc
test
or
push
sub
adc
adcb
mov
stos
push
testb
lea
add
pusha
repz
xchg
lds
mov
leave
mov
add
dec
adc
xor
mov
jge
pop
push
int
enter
mov
ds
fs
pushf
sub
aam
xor
sbb
icebp
ficompl
sub
jmp
jae
ss
dec
push
in
rorl
in
fnstsw
cli
je
add
lret
xchg
pop
or
add
andb
pop
push
stos
sbb
pop
mov
js
stos
aaa
xchg
cmp
icebp
daa
das
push
pop
add
cmpsb
pop
lock
add
mov
call
aas
mov
test
xchg
pop
in
lcall
es
push
out
push
stc
adc
inc
loop
mov
xchg
jg
and
outsl
cmpb
mov
bnd
aas
and
movsl
jmp
xlat
aaa
fiadds
mov
subl
push
js
stos
push
mov
in
mov
mov
adc
hlt
xchg
das
int
mov
mov
adc
jmp
jmp
pop
dec
je
cmovnp
xchg
push
ljmp
mov
dec
mov
test
pop
fcoms
jmp
fildl
inc
add
adc
sub
mov
shrb
enter
mov
push
hlt
pop
cmc
mov
jns
cmp
push
pop
lds
loope
in
adc
jne
fnstenv
shlb
lret
in
pop
call
lds
fs
lods
popf
and
pop
pop
mov
mov
inc
outsb
jl
cltd
sub
pop
les
mov
adc
pop
cltd
movb
xlat
fwait
test
jbe
aad
repz
ret
jne
add
loope
daa
mov
dec
jb
push
push
stc
enter
icebp
xchg
pop
mov
xchg
mov
stc
popf
movsb
inc
adc
jl
fnstenv
jnp
mov
mov
in
inc
sbb
xchg
les
insb
sarb
es
ds
lods
jg
sub
or
jle
push
push
add
pusha
and
pop
adc
gs
push
lock
sbbl
in
lock
pop
out
push
mov
dec
hlt
dec
test
xchg
icebp
aad
scas
push
adc
fwait
and
stos
xchg
js
ret
addr16
sub
and
lret
pushf
or
fsubr
jge
dec
pop
or
inc
out
fstps
or
mov
popa
rcr
xchg
pop
es
xchg
push
cmp
popa
or
fdivrl
test
dec
cmovle
push
push
ret
popa
aad
in
add
fs
xchg
sbb
mov
jmp
shrb
mov
lock
scas
xor
jle
int3
pop
fldt
inc
jo
arpl
je
cwtl
addr16
scas
rorl
dec
movsb
lock
ja
testb
cmp
shlb
orl
in
jp
xchg
push
mov
add
push
leave
xorl
sti
mov
das
or
push
shrl
inc
fisttps
dec
cmp
outsb
sbb
inc
pop
out
mov
xchg
inc
jo
ret
stos
lods
push
fildl
push
faddl
inc
ljmp
ret
pop
dec
and
insb
outsb
aaa
inc
cltd
cmp
jl
push
push
mov
push
ds
add
pop
adc
jno
lods
shrl
inc
xchg
mov
xchg
out
out
lods
jge
xchg
cmp
add
cld
sub
out
xchg
jg
nop
ret
and
mov
push
movups
pushf
xchg
pop
dec
sub
aaa
dec
sbb
sahf
clc
and
jl
adc
lds
jp
fstpl
xor
xchg
je
shll
aad
addr16
das
sbbb
sbb
adc
and
jge
mov
bound
xor
pushf
out
test
std
cmpsl
jae
js
shr
popa
cmp
cmp
sub
jb
jne
ror
stc
or
loopne
add
mov
fabs
out
pop
test
int
movsl
pop
movsl
mov
xor
inc
mov
fs
and
sahf
xchg
out
test
and
jb
rcll
and
data16
mov
into
movsl
pop
and
mov
loop
repz
aad
loopne
popa
mov
sahf
and
push
fs
ror
int
pop
testb
pop
js
fisttpll
stos
xchg
in
and
pop
insl
faddl
lods
push
lret
addr16
jmp
pop
int
fisubrl
jnp
jg
insl
sub
repz
insb
fistpll
add
push
test
dec
int
push
push
clc
mov
test
aas
lea
jae
dec
or
xchg
pop
outsb
mov
cmp
pusha
mov
enter
mov
cmp
push
pop
xchg
pop
rcll
rcll
stos
into
pushf
stos
adc
pushf
stos
jle
jg
push
arpl
call
sti
rclb
pop
adc
mov
xor
push
inc
ljmp
mov
test
jmp
test
cmp
popa
fwait
insb
nop
xchg
mov
out
push
inc
mov
xchg
xchg
xchg
jmp
and
aad
test
sub
mov
push
fst
cmpsb
dec
xor
and
fdivrl
xor
mov
pop
cmp
insb
mov
cwtl
push
or
in
movsl
fists
int
les
repnz
mov
out
fld
pop
mov
int
roll
mov
inc
xor
je
mov
mov
jmp
sub
clc
addr16
imul
not
lods
out
xchg
pop
jae
scas
and
fcompl
xchg
jb
mov
xchg
imul
addr16
and
push
in
xor
cmp
mov
sbb
movaps
xchg
xchg
push
or
jns
ja
addr16
je
xchg
mov
xor
mov
sub
mov
adc
nop
xlat
xchg
sub
sbb
xchg
aas
rolb
rorb
push
ljmp
das
ja
je
xor
mov
out
mov
add
dec
add
repz
dec
inc
and
movsb
adc
adc
dec
mov
mov
into
iret
arpl
mov
subb
scas
xchg
repnz
loop
adc
ja
push
fiadds
xchg
out
sbb
fisubs
cmp
jb
jnp
and
out
sahf
inc
int
add
mov
add
test
sbb
negl
xchg
inc
repnz
jo
ret
jecxz
jl
pop
sub
sbb
jno
ljmp
jl
ss
pop
test
test
or
mov
gs
cmpsb
xlat
lcall
ljmp
pop
adc
testl
mov
push
fdivl
xor
and
mov
or
insl
test
mov
jp
in
xchg
push
and
pop
or
test
mov
jno
js
mov
sbb
in
ljmp
xor
shlb
out
lea
xor
insl
xor
push
cs
pop
jo
add
push
mov
inc
pop
fimuls
mov
cmp
in
mov
cltd
cwtl
pop
inc
cwtl
fs
inc
int
push
shll
jl
cltd
push
cmp
push
xor
icebp
mov
rcl
push
fs
jne
push
xlat
push
pop
into
add
mov
into
pop
pop
xor
push
mov
sahf
jle
pop
out
inc
cmp
in
addr16
call
stos
rcrl
inc
rol
pop
inc
cmp
clc
std
add
loopne
icebp
pop
add
sbb
push
and
test
sarl
inc
filds
imul
sbb
test
int3
add
or
inc
lock
lcall
mov
inc
fbstp
adc
ljmp
push
repz
and
ds
cmp
sbb
sti
push
sub
loope
adc
inc
sbb
or
sbb
xchg
pop
jp
aas
inc
cld
test
scas
in
dec
dec
dec
xor
shr
or
push
mov
add
mov
jp
imul
dec
add
into
dec
mov
xchg
sub
mov
lods
sti
xchg
out
hlt
cmpsb
pop
ja
std
dec
push
jmp
scas
sub
adc
leave
add
cmp
notl
and
dec
addr16
dec
icebp
pop
cs
daa
xor
push
mov
jnp
or
repnz
add
mov
int3
ja
jg
mov
data16
pop
pushf
mov
dec
roll
aam
sbb
add
pop
jne
lods
jno
xor
xlat
sbb
mov
jne
cmp
fwait
fs
mov
and
xchg
or
loop
call
pushf
cwtl
loope
push
aad
jmp
xor
dec
dec
jp
mov
mov
fs
and
insl
in
iret
sub
xchg
mov
lret
adc
xlat
into
sti
cmpsl
xor
sbb
insl
fldenv
cmc
stos
sub
ficompl
jne
pop
mov
cmpsb
inc
insb
les
pop
mov
xor
jmp
mov
jno
iret
test
mov
pop
ds
mov
sbb
lahf
cltd
js
negb
in
sarb
mov
sti
mov
repz
shlb
xchg
lret
mov
cmc
push
inc
test
cmp
push
push
outsb
fistpl
cmc
lds
movsl
pop
sbb
or
mov
insb
lea
xor
movsb
hlt
sahf
fiadds
jae
and
mov
mov
mov
ficoml
jo
jnp
sbb
out
fnstcw
in
jecxz
das
shll
aas
filds
out
push
into
dec
lret
sbb
fsubrs
or
ror
pop
xchg
cmpsl
push
sub
rcrl
xchg
imul
sti
dec
pusha
pop
xchg
push
pop
add
lcall
lcall
mov
call
xchg
dec
add
in
movsl
lods
add
add
dec
and
inc
stc
test
inc
pop
fidivrs
inc
xchg
xchg
test
aaa
dec
mov
stos
xchg
decl
out
lret
mov
dec
xchg
ret
popf
jmp
in
aam
test
push
xchg
cmp
and
push
ret
sbb
rcr
andb
inc
pop
mov
mov
add
icebp
and
mov
pop
push
xchg
test
xor
clc
mov
cmp
fwait
adc
cmp
jle
mov
dec
cs
fnstcw
push
pushf
pusha
add
adc
fs
imul
rclb
pop
sbb
pop
adc
or
jle
mov
sbb
or
pusha
in
ljmp
rorl
mov
sbb
inc
mov
adc
inc
lods
push
das
pop
inc
cmp
sub
popf
cmp
int
jns
sti
xchg
iret
fwait
dec
add
sarl
aam
jae
pop
dec
xchg
or
pop
sarl
or
daa
adc
cli
mov
add
pop
aas
stc
or
clc
sub
addr16
daa
insb
or
aaa
mov
xorb
mov
cmpsl
jg
int
dec
aam
fsts
mov
xor
add
jg
test
sub
gs
repz
xlat
jecxz
or
mov
and
shrl
outsl
mov
mov
mull
out
fdiv
out
dec
and
fmuls
int3
mov
push
in
cld
pusha
repz
movsl
xchg
scas
lods
out
xchg
out
lret
dec
pop
call
ss
add
push
or
or
adc
or
aam
jmp
pop
mov
hlt
pushf
sub
xor
mov
fwait
jne
sub
ret
in
xchg
pop
push
xchg
outsl
inc
cmpsb
stos
jne
jne
imul
and
mov
xor
cmp
push
out
aam
sub
mov
sub
gs
into
dec
xor
mov
jb
lea
out
mov
adc
jp
or
dec
in
mov
and
into
pop
or
lahf
pop
adc
in
and
cmc
les
add
imul
xchg
dec
lahf
stos
xor
cmpsb
inc
test
test
scas
iret
xchg
fdivl
push
subl
jnp
jge
fsts
sub
int3
arpl
loop
sub
jecxz
neg
lock
push
mov
icebp
mov
and
mov
sub
incb
cli
sti
dec
dec
lock
gs
jnp
xor
sub
mov
add
jg,pn
daa
aam
push
test
sbb
dec
repz
push
in
mov
pop
dec
lds
cmp
push
dec
ljmp
mov
sbb
push
jne
push
test
pop
fistps
div
outsl
mov
stos
popa
daa
es
mov
outsl
adc
mov
or
bound
sti
out
repnz
leave
pop
or
and
lock
test
jecxz
adc
inc
jne
shll
inc
outsl
test
add
pop
xchg
cmp
rcll
call
inc
jecxz
cs
push
add
jae
push
cli
loope
mov
xor
mov
ret
es
flds
pop
mov
mov
fisttpll
cmp
jmp
shrb
shll
sub
sahf
push
pop
jl
subl
dec
nop
fistpll
add
scas
adc
push
mov
int
xchg
jbe
call
not
stos
loop
test
mov
ja
sbbb
insb
mov
inc
scas
sub
outsl
lahf
adc
scas
push
aas
mov
in
mov
jbe
test
div
adc
push
pop
pop
int3
inc
sub
fidivs
pop
ret
or
fwait
cmp
or
xlat
mov
sbb
cmp
clc
push
sti
or
xchg
and
rclb
push
xchg
ds
inc
int
xor
addr16
stos
stc
jmp
scas
cmp
fidivrs
or
mov
repnz
mov
outsb
sub
xchg
jp
enter
mov
xor
scas
sub
je
mov
cmp
adc
dec
xor
push
fbld
jge
and
es
xor
cmpsl
add
pop
inc
push
jno
sub
sbb
dec
xchg
cmp
insb
sbb
scas
into
in
and
loopne
pop
and
lret
push
fcomps
hlt
fmull
lret
dec
mov
call
cwtl
cmp
pop
dec
inc
cltd
popa
push
stc
xlat
xlat
ret
mov
pop
scas
int
mov
xor
mov
mov
out
rcll
gs
mov
mov
add
add
stos
call
paddb
sub
mov
sub
jp
sbb
sbb
shll
flds
fwait
movsb
bswap
jno
in
jmp
sahf
sarl
ds
sbb
inc
sub
sbb
inc
call
mov
lods
leave
pushf
daa
push
push
fcoms
jle
sbb
mov
and
fnsave
push
mov
pusha
push
popf
cmc
les
dec
adc
ret
and
outsb
sub
push
and
jbe
in
js
arpl
rcll
push
sbb
rcrb
mov
pusha
or
xchg
adc
in
leave
repnz
fwait
sarb
jp
sbb
insb
cs
inc
cs
mov
add
js
out
adc
jge
fisttpll
or
xlat
jns
xor
sbb
jbe
movsl
fwait
mov
aam
push
xor
jo
sbb
add
int3
xor
jecxz
mov
pushf
xchg
cmpsl
ret
mov
inc
sti
daa
inc
mov
jecxz
insb
lods
push
jo
pushw
and
xor
incl
sti
adc
mov
fcoms
xchg
adc
fcmovnu
data16
mov
jb
xor
inc
sbbb
and
mov
fdivrl
dec
fwait
push
notb
or
andl
mov
stc
hlt
mov
bound
out
repz
aaa
sbb
outsl
mov
cmp
arpl
dec
rolb
pushf
mov
dec
pusha
std
lock
inc
mov
roll
aad
and
jl
cmp
mov
adc
rcr
dec
movb
inc
sub
inc
xor
scas
enter
push
and
jno
adc
sbb
xchg
fbld
movsl
testl
mov
fisubl
mov
push
cmpsl
pop
hlt
dec
or
out
sub
sti
out
out
sub
test
or
mov
push
dec
mov
sar
lcall
dec
push
xor
ljmp
push
mov
jae
pop
inc
nop
aaa
mov
and
outsl
pop
insb
push
lods
mov
push
adc
filds
leave
movsl
sbb
insb
mov
inc
fimuls
xchg
inc
adc
dec
scas
pop
lods
leave
and
sub
sub
mov
fnstsw
test
inc
cmpsl
aaa
cmp
sahf
std
les
sub
inc
jne
gs
testl
and
sub
std
mov
popa
and
imul
daa
popf
rcll
movsl
pusha
cmp
mov
insb
mov
jp
mov
jge
or
lcall
daa
mov
xchg
call
addl
daa
ljmp
leave
std
add
popa
ss
push
mov
adc
stc
cmp
or
scas
pcmpgtw
adc
sub
stos
adc
shlb
enter
mov
repz
mov
sbbb
fimuls
mov
mov
lret
rclb
sahf
stos
dec
aaa
xchg
rorl
xchg
and
ss
pop
adc
mov
jno
push
cld
std
and
mov
cmp
stc
scas
mov
push
fisubrl
imul
mov
add
push
add
xor
rcl
fimuls
and
shlb
shl
stos
dec
xchg
dec
roll
cmp
xchg
add
push
bound
mov
push
or
data16
filds
pop
jmp
shlb
sub
filds
insb
adc
add
ljmp
or
loope
sub
or
xor
testb
push
cmp
imul
jmp
sbb
xchg
mov
loop
fisttps
daa
aas
call
fwait
sub
test
pop
mov
enter
lock
rolb
mov
sbb
push
mov
jl
ret
add
and
int
mov
pop
mov
pop
dec
or
xor
dec
dec
sbb
pop
pop
bnd
outsb
xchg
outsb
cmpsb
dec
mov
scas
hlt
loop
xchg
push
push
mov
sbb
leave
push
add
cmpsl
ds
jp
or
add
jmp
addr16
push
filds
in
sbbb
es
aaa
popa
adc
mov
movsl
divb
sub
or
insb
lret
aad
cwtl
jmp
addb
and
in
and
lahf
mov
pushf
adc
jne
notb
push
sbb
sbb
fimull
dec
cmpl
sbb
xchg
pusha
and
pop
cmp
repz
lods
mov
cwtl
jo
movsl
mov
mov
jmp
push
dec
lds
dec
adc
push
mov
enter
jg
xchg
or
or
movb
add
fnstsw
inc
aas
jl
popf
scas
outsb
jns
lds
jo
mov
and
stc
nop
ja
insb
dec
xor
mov
jno
loope
std
mov
pop
pop
mov
sbb
out
push
rcrl
fdivrl
mov
movsl
scas
sbb
jmp
fmull
movsb
movsb
pop
push
out
pop
jae
mov
stos
je
stos
loope,pn
cmp
jg
inc
je
inc
xor
lods
inc
fucomi
pop
rorl
mov
addr16
lods
cmp
mov
push
mov
call
or
sbb
pop
xchg
cmpsb
dec
sbbl
imul
sahf
mov
fs
push
aam
cmpl
jp
int
sbb
loop
popa
add
in
mov
test
dec
sub
push
dec
cmpsb
aam
sbb
subl
daa
pusha
or
jmp
or
sbb
aas
insb
inc
out
lcall
sub
xor
push
and
inc
imul
pop
lea
out
cmp
test
jae
movsb
lahf
out
test
xchg
int
aam
jnp
or
pop
xor
jmp
add
popf
pop
mov
jl
das
mov
popf
push
pop
pop
insl
push
dec
push
stos
iret
jge
ljmp
dec
es
cmp
movsl
pop
mov
nop
cltd
rclb
loope
rcrl
pop
push
lods
ret
pushf
out
mov
jo
adc
pop
or
adc
inc
out
inc
or
loopne
jb
adc
sbb
xor
jecxz
les
sahf
dec
ljmp
hlt
filds
pusha
xchg
or
or
mov
lret
fmull
pop
mov
mov
repnz
pop
pop
ret
xchg
dec
jae
jp
adc
add
out
inc
mulps
mov
addl
jae
sbb
mov
push
xchg
cmpb
xchg
lcall
mov
imul
fcompl
jnp
movsl
mov
orb
and
jp
outsb
lock
out
and
xor
out
push
push
aad
cmp
ret
adc
mov
fldenv
adc
xchg
ss
testl
cwtl
movsl
stos
push
nop
pop
pop
test
inc
sti
sbb
lcall
xor
ds
cs
mov
or
cwtl
xor
les
std
mov
jecxz
loope
std
outsl
adc
push
pop
or
inc
js,pt
xchg
mov
daa
push
mov
pop
mov
dec
lds
test
jne
xchg
cwtl
adc
cmp
mov
pusha
rorb
xchg
repz
sub
mov
fxch
xchg
pusha
mov
xchg
jge
pop
int3
cmp
push
lret
mov
lods
push
imul
xor
xor
push
jg
dec
daa
jae
adc
mov
icebp
js
mov
sbb
loopne
pop
push
addr16
pinsrw
aas
mov
popa
add
xchg
push
inc
pusha
cmp
mov
jmp
dec
sahf
mov
jae
cmp
mov
jns
sahf
fs
sbb
cmp
loopne
lcall
and
adc
mov
outsb
lods
sahf
or
add
cmc
imul
or
add
pop
in
push
mov
subl
jmp
inc
push
out
rorb
in
cmpsb
cltd
cs
push
popf
test
mov
imul
int
cltd
xchg
cwtl
stos
pop
or
and
sub
icebp
gs
rorb
nop
mov
std
inc
push
mov
mov
xchg
ja
mov
sbb
jnp
out
orl
scas
aam
rorl
inc
test
imull
push
xor
call
or
cmp
mov
int
into
bound
cmp
mov
test
ds
cmp
decb
xor
inc
adc
push
iret
ljmp
fs
std
inc
scas
jo
cmpsb
inc
stos
mov
xchg
sbb
xchg
mov
pop
sbb
fs
sbb
xchg
or
xchg
clc
mov
ret
jp
jge
gs
ret
int
xor
mov
fsubl
sbb
rcll
in
lock
test
xor
inc
cli
xor
lret
adc
cld
and
loope
push
nop
add
mov
fcmove
jo
jnp
lret
push
or
dec
std
int3
dec
inc
scas
fwait
push
popw
push
add
or
addb
test
jg
stc
cmpl
mov
pusha
hlt
insl
push
push
test
aad
mov
dec
lret
in
or
and
cmp
cmp
mov
arpl
cmc
sbbb
imul
or
fcomp
std
pop
cmp
and
jge
cltd
jns
out
mov
lods
mov
in
js
cs
push
or
in
xchg
cmp
fwait
or
fnsave
into
icebp
js
jnp
cmpb
mov
incl
xchg
cltd
mov
test
mov
cmp
inc
xchg
mov
out
cmpsl
test
jge
orl
xchg
dec
out
dec
pushf
mov
mov
shl
adc
xchg
enter
mov
and
push
push
jmp
xor
adc
xlat
roll
loop
mov
lea
dec
or
inc
jecxz
lret
jno
jg
popa
aaa
mov
lds
mov
pop
ljmp
adc
xchg
xor
xor
jge
mov
push
ljmp
std
sahf
pop
cmp
xor
xchg
aas
push
inc
xlat
mov
mov
cmc
inc
cmpsb
inc
add
ljmp
dec
jnp
vmread
sbb
mov
icebp
fnstsw
repnz
and
ffree
std
rorl
pop
sub
xor
mov
or
cmc
pop
mov
dec
in
push
cmpsl
movsl
sahf
es
dec
pop
arpl
movsb
movsb
mov
cwtl
inc
data16
sbb
imul
inc
dec
push
sarb
pusha
mov
jmp
pop
in
stos
adc
lcall
jo
fisttps
jns
mov
sub
je
and
mov
lcall
push
mov
shl
imul
jo
mov
pop
xlat
sub
leave
out
mov
out
sub
out
cmpsl
mov
cwtl
cli
mov
arpl
int3
sbb
jno
sbb
mov
testb
std
test
sbb
jmp
jecxz
inc
pop
inc
in
daa
js
add
cmp
mov
flds
ja
out
out
js
int
add
pop
cmp
jge
jb
aam
sti
bound
roll
pop
adc
dec
push
add
jnp
aad
xor
sbb
ja
xor
test
inc
pop
and
pop
hlt
add
outsb
mov
repnz
xchg
loop
aaa
mov
out
iret
mov
sbb
aad
inc
pop
mov
jmp
push
fld
js
mov
scas
cmp
mov
and
jae
adc
mov
mov
shll
popf
lret
lahf
sarl
shlb
hlt
fisubrs
mov
push
or
jne
nop
add
or
in
lds
shrb
sbb
es
or
inc
nop
out
dec
xchg
push
mov
and
cmp
cmp
loopne
xor
add
clc
out
jb
jns
shufps
ja
out
cs
fstpl
popf
or
push
pop
fisubl
pop
outsl
and
mov
insl
jnp
xchg
inc
test
dec
mov
test
jne
cwtl
movsl
adc
sub
icebp
lea
sub
dec
stos
add
ficompl
sbb
sarb
fmuls
mov
subl
add
pop
push
push
hlt
push
movsb
repz
imul
aad
xchg
ss
mov
xchg
xchg
jmp
add
xchg
sub
or
orl
call
sub
push
icebp
pop
xchg
xor
daa
push
xlat
jbe
popa
enter
mov
add
dec
xchg
jbe
xor
add
into
or
nop
adc
bound
cmp
xchg
and
sarl
or
push
lcall
cli
xchg
imul
mov
mov
je
jae
data16
je
inc
notb
pop
aam
enter
aas
out
mov
add
stc
out
jecxz
sub
in
mov
loop
and
mov
and
inc
filds
mov
and
data16
push
test
or
xchg
mov
or
jnp
fisttpll
outsl
jo
dec
js
mov
sti
lea
inc
outsb
sub
outsb
in
stos
sub
mov
mov
loope
push
outsb
jecxz
lds
mov
mov
iret
scas
loope
out
lea
push
das
enter
lret
or
insb
leave
jp
sbb
shlb
dec
xlat
int3
lea
cli
pop
sti
lock
fnstenv
es
sub
pop
and
repz
stos
jae
lock
test
xchg
daa
inc
cli
cmp
add
les
pop
sbb
data16
jp
dec
sub
dec
sti
xchg
or
pop
xlat
jecxz
jg
jle
ret
or
xchg
pop
and
roll
cli
hlt
inc
add
ja
or
and
lods
mov
mov
mov
cmp
cli
lret
aad
or
outsl
mov
cmp
repnz
dec
je
cmp
mov
mov
lahf
sbb
mov
jne
xlat
call
mov
ficomps
sbb
test
cmp
popf
scas
stc
lahf
stos
ds
mov
add
fisubrl
push
aam
popa
out
cld
sarb
push
in
mov
dec
test
in
or
xor
cld
loop
mov
sub
jnp
fwait
testb
dec
repz
movsb
cmpsb
insl
mov
inc
xchg
adc
jne
and
testb
repnz
dec
inc
fsubrs
stos
test
std
add
jge
stos
jecxz
mov
lahf
xchg
cmp
sub
out
pop
cmp
aaa
xor
dec
sbb
lret
sbbb
jmp
std
mov
cmp
data16
loope
mov
fstps
into
dec
leave
pusha
mov
fsubrs
imul
insb
cmpsl
mov
fcomps
dec
mov
mov
std
xchg
mov
mov
push
xor
xor
and
test
lahf
loop
inc
push
sub
test
icebp
jbe,pn
js
and
ds
cmpsb
mov
jae
fnstsw
pop
stos
xor
and
cmp
bound
inc
std
xor
xchg
stos
aam
mov
add
ds
add
loop
stos
les
push
and
ds
sub
dec
loopne
xor
mov
mov
push
mov
in
mov
sar
iret
aaa
cld
loope
int3
loope
jl
push
clc
andb
pop
fwait
rclb
int3
out
jg
xchg
lcall
push
test
inc
shll
int3
mov
jb
sbb
test
or
in
cmpsb
cmp
in
ljmp
adc
add
and
insb
sti
inc
das
aas
cli
and
sbb
dec
xor
scas
sar
les
test
jle
adc
adc
push
xor
insl
mov
or
repnz
sub
pushl
mov
cmc
and
lea
pop
ret
jp
jb
jno
je
lret
mov
mov
lods
xchg
pop
stos
cwtl
dec
sub
jmp
setge
push
xchg
pop
addr16
mov
xchg
add
or
les
adc
into
mov
jae
jmp
popf
mov
arpl
sahf
mov
mov
xlat
roll
repz
loope
lahf
dec
pop
push
daa
push
enter
fldt
lods
sub
jg
dec
filds
mov
enter
mov
jg
add
das
adcl
lock
jns
imul
mov
mov
or
shl
pop
xchg
mov
jecxz
leave
cmp
xchg
jg
mov
stc
mov
in
idivl
cmc
insl
mov
adc
hlt
call
out
arpl
pop
mov
pop
push
inc
fnstcw
cmpb
add
mov
popa
mov
push
xor
in
push
sub
mov
mov
jne
cmpsl
outsb
lret
xor
ds
pop
lea
push
insb
outsl
xor
shl
pusha
push
es
aam
test
pop
xlat
push
inc
bound
popf
aam
push
cs
pop
mov
lret
es
aaa
in
add
xchg
sub
insb
pop
or
add
incl
in
insb
out
lret
stc
lea
xor
outsb
loop
outsl
fildl
clc
fucom
or
sarb
sahf
pop
jno
pop
mov
mov
fs
sarb
jbe
add
cwtl
add
adc
rcl
insb
fdivrl
add
dec
push
and
mov
add
out
shr
outsb
xchg
sbb
ret
jo
inc
sbb
adc
shll
push
mov
mov
push
xchg
pusha
scas
inc
sub
push
das
lods
add
jb
add
pop
mov
pop
xor
mov
sti
addr16
or
popl
and
jbe,pt
aad
lahf
push
cmc
insl
cmp
iret
mov
inc
mov
repz
mov
jmp
out
jo
rorl
iret
out
dec
popf
adc
addr16
mov
fidivrs
cltd
jo
xor
dec
icebp
dec
mov
push
xor
lds
pop
gs
imul
into
scas
repz
mov
xor
xchg
movsl
pop
and
or
pop
cmp
ret
mov
ret
cmpb
jge
cs
out
pop
jbe
in
insl
stos
cmp
lds
outsb
add
mov
repz
loope
divb
jge
dec
dec
pop
mov
ljmp
inc
stos
pop
pop
sbb
xor
lds
xchg
enter
cmp
dec
test
dec
rclb
popf
negb
or
pop
mov
ljmp
inc
hlt
jo
mov
mov
dec
lret
jecxz
shll
jmp
imul
popf
push
mov
insb
or
aas
adcb
test
mov
jle
repz
pop
in
fcoml
mov
popa
fwait
mov
fadds
xchg
cli
jno
xor
mov
popf
sbb
or
arpl
jnp
jnp
mov
sub
push
push
test
je
out
cld
inc
andb
lods
push
sbb
add
negl
ficoml
jb
pop
sub
jae
add
popf
aas
jle
insb
scas
sbb
int
sub
fcmovbe
icebp
add
dec
pop
enter
push
subl
imul
push
sbb
les
stos
dec
notb
mov
jae
cwtl
aaa
push
bound
dec
daa
cld
xchg
js
inc
gs
arpl
add
cmp
push
test
push
int3
cmp
jno
push
push
jmp
and
mov
jecxz
gs
loopne
and
stos
mov
cmp
mov
xchg
sti
int
popa
stos
push
aas
push
or
mov
mov
imul
mov
mov
push
sub
xorb
ljmp
cwtl
mov
test
test
xor
inc
or
sub
aad
in
js
and
xorl
pushf
int3
cld
das
dec
mov
push
jge
xorb
fadd
negb
lea
jno
cmp
jo
outsb
mov
aaa
sbb
sahf
adcl
cli
inc
cs
or
leave
pushf
sbb
or
and
pop
push
jmp
or
mov
add
sbb
dec
int
inc
scas
fistl
xlat
es
pop
xorb
inc
push
pop
mov
decl
dec
cmp
mov
push
insl
cmpl
aad
into
cmpb
mov
add
or
mov
mov
int
cmp
aam
mov
pop
mov
cmpsl
fcoml
sbb
pand
inc
idivb
nop
ss
mov
pop
mov
cmpsl
inc
cld
cld
mov
popf
inc
lods
pop
and
fnclex
sub
bound
jno
dec
fbstp
fs
adc
and
cmc
jg
mov
inc
and
cmpl
movb
sbb
push
xchg
movsl
add
iret
test
cmpsb
lods
sbb
iret
lcall
dec
test
pop
insb
mov
sbb
push
inc
dec
push
in
cmp
cld
or
sub
sbb
add
lret
testl
mov
add
xchg
fdivrl
xchg
cmp
inc
mov
data16
adc
dec
dec
jl
pop
fstl
push
sub
inc
rolb
mov
xchg
jge
pop
cmp
fs
sbb
sub
dec
jl
out
mov
cmp
push
mov
pop
cli
call
repnz
mov
hlt
cmpsb
int
sbb
std
mov
mov
lahf
or
sbb
push
pop
int3
arpl
or
mov
jns
popa
pop
add
cmp
and
invd
ficoml
aam
jns
mov
ret
cmp
and
test
adc
mov
mov
xchg
sbb
pushf
xorl
lret
add
jno
sti
in
outsl
mov
in
and
sbb
lods
adc
ljmp
xor
sbb
mov
inc
push
lret
pop
push
outsb
rorl
shlb
in
adc
xchg
dec
mov
das
inc
xor
and
cli
je
inc
pop
sarb
leave
inc
mull
dec
adc
fistl
ja
ss
repz
adc
mov
dec
sub
adc
or
icebp
xlat
in
rorl
clc
arpl
test
data16
jp
aas
push
shrb
bound
add
pop
js
repz
gs
ljmp
leave
jae
inc
js
add
aad
push
out
hlt
clc
daa
ret
xor
pop
mov
jg
xchg
inc
dec
cmp
call
push
inc
call
dec
push
repnz
repz
nop
dec
add
test
sub
stos
outsl
jb
adc
out
add
scas
dec
clc
lcall
inc
mov
cmpsl
mov
out
xchg
jo
add
adc
js
fdivrl
pop
adc
sub
addr16
and
in
sub
xchg
adc
push
std
loope
lods
add
xchg
fildl
xlat
mov
jbe
cmp
mov
mov
xchg
fidivl
sub
stos
ss
rcrb
push
shr
shlb
daa
in
adc
pop
lds
or
pop
mov
dec
and
fisubs
mov
sbb
xor
sahf
cmp
aad
or
adc
sub
mov
mov
dec
dec
mov
hlt
mov
mov
cmpsl
and
aaa
test
push
cmc
push
add
lds
cltd
js
cmp
fldt
imul
jb
hlt
and
ficompl
lods
inc
add
xor
xor
ret
push
pop
pop
addr16
add
or
les
xchg
int3
mov
into
jl
stos
js
pushf
jmp
sub
xor
dec
mov
push
jge
jne
jmp
adc
ljmp
lock
in
jbe
insl
into
std
pop
xlat
mov
dec
stos
clc
scas
cmp
aas
jmp
xchg
movsb
aas
cmp
sub
inc
unpcklps
sahf
ret
xchg
fstps
dec
push
pop
data16
ret
repz
lds
lret
or
sti
test
jg
mov
lods
stos
pop
testb
push
push
push
mov
xor
sbb
int3
lcall
repnz
or
leave
test
inc
mov
sub
int3
inc
pop
pop
pop
cltd
add
inc
nop
inc
xor
or
and
or
std
cmpb
sub
jns
test
mov
frstor
aas
mov
lret
xchg
push
in
cmp
std
inc
or
ret
mov
ljmp
pop
and
pop
sbb
cli
ficomps
add
mov
sbb
dec
jecxz
push
addr16
test
cli
rolb
inc
pusha
xchg
cmp
outsb
fstl
fptan
jnp
aaa
and
gs
pop
lret
stos
xchg
fucomp
sti
sub
idivl
ss
cmp
cmp
inc
outsl
jbe
fstps
int3
inc
mov
hlt
or
xor
mov
fwait
mov
repnz
cmpsb
in
lea
mov
xchg
add
pop
cwtd
lods
add
xchg
insb
xor
popa
test
fwait
sbb
add
imul
out
sbb
incl
loope
inc
push
pop
loopne
shlb
loopne
cmp
ret
push
jmp
mov
insb
lahf
cmpl
cmp
adc
sub
dec
inc
in
in
pop
push
cmp
pop
mov
push
enter
mov
in
mov
fldcw
xchg
xor
sbb
cltd
fisttpll
pop
clc
lods
insb
in
addr16
xor
sahf
iret
push
cmp
fsubp
pop
das
xchg
dec
sbb
mov
lds
mov
mov
sub
pop
xor
mov
mov
push
shll
shll
add
cmp
into
xchg
jbe
lea
ss
dec
into
gs
inc
add
aas
sarl
ja
xor
pop
bound
push
push
clc
jp
mov
and
loopne
cwtl
sti
mov
sub
pop
leave
test
loopne
and
out
inc
iret
xchg
outsl
fnstsw
push
jge
lahf
lea
fcmovnbe
and
xchg
adc
pusha
and
pop
lods
jle
xchg
je
imul
das
cmp
push
movsb
popa
push
jle
add
mov
aam
jmp
ret
push
sub
leave
fmull
jbe
test
mov
pop
aaa
lock
pop
scas
pushf
and
imul
shl
and
loop
dec
and
sbb
movb
movl
dec
push
pand
loopne
addl
jns
jb
sbb
jne
jno
lods
xchg
push
cmpsl
sbb
mov
jmp
out
lock
cwtl
repnz
push
mov
mov
outsl
cmp
bound
push
ljmp
push
lret
out
call
in
sub
mov
xor
or
adc
in
and
dec
sub
adc
pop
xor
and
fs
mov
loopne
adc
cmp
and
pop
mov
xlat
popa
adc
popa
push
xchg
bound
mov
mov
xchg
ja
add
lcall
test
mov
insb
pop
xlat
les
scas
out
sbb
jns
jmp
enter
and
inc
inc
lcall
in
jle
jb
in
notl
dec
std
adc
imul
mov
or
lcall
in
test
test
mov
push
jo
pop
pop
and
lds
fsubs
add
mov
gs
push
daa
adc
or
jl
sbb
jns
addr16
aaa
fisubl
add
adc
arpl
cwtl
sub
adcl
cltd
ret
shlb
lds
mov
fs
sbb
add
xchg
movsb
mov
push
sub
mov
pop
test
imul
jb
daa
mov
sbb
mov
cmp
mov
jle
clc
adc
mov
and
aam
stos
in
movb
pusha
cltd
xchg
pop
sub
stos
mov
mov
lret
add
iret
seta
dec
xchg
scas
rolb
nop
jp
dec
mov
jb
cmp
ret
sub
gs
aam
mov
and
loope
sbb
sub
cmpsb
dec
adc
xor
cmpl
es
or
dec
add
adc
in
shll
jge
hlt
mov
outsb
imul
call
rcrl
mov
push
xor
dec
enter
mov
xor
sbb
loope
cmp
mov
cs
out
rorl
xor
jmp
aam
or
rorl
sbbb
popa
dec
xacquire
sub
mov
fwait
pop
xor
sbb
mov
mov
sub
test
sti
in
insl
in
rorl
popa
loopne
ds
popf
out
dec
es
in
addl
dec
lods
test
push
call
xchg
aad
test
testb
and
mov
pop
inc
shll
outsb
sub
dec
filds
jbe
fstpl
pusha
lret
jg
movsb
cmp
pop
xchg
pop
xlat
xor
dec
int3
pop
dec
cwtl
lret
lcall
mov
cld
sbb
in
cmc
dec
fnsave
xor
push
jle
sbb
adc
add
cmp
add
pusha
xchg
and
push
jl
adc
arpl
and
or
mov
mov
sahf
xchg
pop
fsubs
mov
negl
sub
jbe
add
arpl
or
sarb
dec
lods
sarl
mov
cmpsb
loope
ss
fnstcw
bound
je
mov
fsubp
addr16
dec
pop
lock
or
sub
add
imul
pop
xchg
in
xor
push
pushf
outsl
sub
adc
pop
test
xchg
ja
cmp
mov
imul
jno
subb
or
inc
out
xchg
nop
xchg
je
insb
xlat
call
cmp
pop
movsl
pop
fwait
dec
dec
decb
or
mov
sbb
arpl
mov
in
lea
dec
imul
add
pushf
idivb
es
sbb
xor
add
add
aam
shrl
xorl
adc
jp
adc
adc
jl
adc
ftst
mov
inc
arpl
dec
mov
push
xchg
inc
fcomip
ret
cmc
sub
aaa
push
pusha
xchg
xor
jmp
push
dec
or
enter
sub
daa
aam
cmpsb
mov
fimuls
loopne
iret
push
mov
das
inc
cwtl
pop
stc
out
cltd
inc
mov
stos
fisubrs
add
stos
das
fimuls
rcll
mov
mov
or
dec
mov
sti
inc
shll
mov
and
sti
stos
enter
push
lods
adc
sub
movsl
ja
xchg
test
cmp
filds
les
cmpsl
cwtl
ret
jns
test
out
mov
clc
call
mov
not
fstpl
mov
mov
cmp
ret
shrl
ljmp
loopne
outsl
mov
sub
add
mov
cs
jnp
es
je
lods
cmp
je
insl
not
lock
cs
idivb
hlt
gs
mov
scas
and
cmp
mov
dec
push
mov
pop
sbb
inc
mov
pop
rcr
movsl
inc
ja
push
cmp
push
test
mov
sub
xchg
insb
out
addr16
inc
xchg
mov
push
js
adc
adc
movsl
das
mov
cmpsl
lahf
adc
mov
jl
ret
add
shl
lahf
jge
out
mov
jle
fnsave
jp
push
mov
out
loopne
fcoml
push
aaa
jle
push
cmpsb
test
sub
adc
fadds
pextrw
js
push
cmpsl
pop
loope
daa
pop
sbb
lret
pslld
imul
xchg
orl
mov
pusha
lods
outsl
lret
idivl
mov
jecxz
jb
inc
cs
das
push
in
mov
sbb
lods
mov
pop
jae
sbbl
or
sahf
lret
mov
test
dec
jae
pushf
sub
cmc
inc
inc
mov
and
mov
pop
mov
jl
scas
imul
in
mov
cli
rclb
outsl
adc
mov
cmp
push
rol
jb
and
push
push
mov
jb
adc
out
mov
neg
mov
xorl
sub
jne
adc
testl
lahf
xchg
mov
sbb
dec
xchg
add
lds
inc
add
lea
test
popf
cwtl
xor
sub
cmovp
pop
cmpb
movsl
movsb
xchg
dec
out
mov
imul
xor
lret
sub
push
cmp
test
shlb
cli
pop
xchg
pop
addb
aam
mov
dec
push
adc
imul
scas
and
cld
sub
popa
daa
test
scas
pop
je
mov
into
cmp
testb
mov
and
mov
sub
ja
or
xor
cmp
pop
ds
push
cli
mov
adc
dec
je,pt
cmpsb
ja
outsl
hlt
or
gs
rol
push
inc
std
pop
pop
push
jmp
jg
xchg
shrl
xchg
push
mov
lock
jge
fidivrl
mov
aad
mov
add
xchg
xor
cmp
mov
inc
push
insb
cmp
push
jge
lcall
mov
outsl
xor
lods
pop
jae
cmp
shrb
or
scas
mov
popa
outsl
dec
jg
mov
mov
mov
cmp
mov
adcl
punpcklwd
cmp
jg
clc
rorl
outsl
jo
or
jo
cwtl
lods
icebp
repz
mov
clc
or
dec
xchg
xchg
cmpsb
es
inc
adc
call
adc
aas
mov
sub
ds
fwait
daa
shrb
fimuls
push
mov
shl
push
or
add
xor
test
fnstsw
pop
lret
mov
cmpsl
add
jecxz
add
lock
sarl
test
scas
sahf
arpl
jmp
inc
stos
push
lret
movsb
adcl
cmpsb
sbb
mov
jg
out
add
adc
adc
ret
cs
inc
ret
fiadds
jno
jle
inc
and
sbbl
lods
stos
mov
fsubl
arpl
clc
pop
pop
push
lock
andb
xorb
rcr
pop
je
dec
rorb
hlt
int3
or
mov
test
mov
lods
pop
and
lret
inc
and
std
inc
sbb
int
adc
bound
push
pop
mov
xor
cwtl
pop
and
xchg
testl
std
and
xor
or
call
lds
ljmp
lock
fdivp
pushf
in
mov
sbb
mov
in
rorb
lods
xchg
imul
imul
cmp
jle
xchg
xchg
loop
sti
adc
or
jnp
pusha
push
rcl
fisubs
xchg
xor
add
mov
mov
lret
sub
add
sub
loopne
jg
ljmp
pop
repnz
ljmp
iret
rolb
mov
lods
sub
pop
ljmp
rcrb
mov
dec
mov
into
add
push
or
ljmp
xchg
ret
dec
push
sbb
insb
mov
int3
mov
outsl
loopne
jno
movl
sub
ljmp
insb
jmp
cmp
fbstp
mov
cmp
adc
mov
gs
imul
jo
mov
jne
lcall
dec
test
mov
xor
je
xchg
mov
mov
cwtl
push
dec
jge
mov
or
cli
out
pop
ja
and
xor
arpl
and
std
push
stos
cli
shr
sub
pop
lret
dec
xor
sbb
push
mov
repnz
dec
xlat
jno
cmp
out
jge
add
aad
ret
insl
dec
std
or
mov
jo
adc
push
cmpsl
mov
pop
hlt
jnp
jecxz
push
fdivrs
adc
and
dec
or
jmp
in
sub
test
dec
and
cltd
dec
mov
fiaddl
pop
test
jge
data16
std
push
fistl
cmp
shlb
stos
adc
or
ljmp
cld
cmp
cmp
call
xchg
sub
and
in
add
cli
adc
out
inc
and
jb
mov
xor
repz
mov
jle
inc
ljmp
mov
xor
cmpsb
stos
xchg
mov
pop
out
and
or
xor
sbb
push
les
xchg
sub
loop
mov
or
mov
in
popf
jbe
adc
mov
aad
cmp
pop
in
fstpt
mov
inc
inc
stos
in
pushf
fistpl
es
xor
fisubrs
jmp
and
lret
ja
call
jg
test
jmp
xchg
cmp
dec
lret
imul
mov
sahf
stc
lock
jae
test
imul
push
es
xor
sub
hlt
or
jo
mov
pop
xor
cmpsl
shl
das
ror
subb
mov
add
imul
mov
js
dec
or
inc
lcall
push
dec
stc
xor
dec
pop
lds
movsl
jge
stos
fadd
add
test
sbb
popa
dec
cmpsl
sub
jae
jo
sbb
lcall
roll
sbb
push
std
add
ja,pn
jno
fs
pushf
out
les
enter
pop
add
jno
xchg
mov
lret
ja
outsb
daa
mov
xchg
aam
in
lret
repz
dec
clc
test
jnp
out
fbstp
push
sar
aad
mov
sarl
aas
repnz
sti
ffree
int
js
scas
pop
cmp
push
adc
faddl
dec
add
in
pop
clc
aas
mov
sahf
mov
popf
and
cmp
lods
loopne
adc
addr16
push
rclb
and
adc
shrl
fimuls
rcrb
xchg
xchg
push
mov
jns
cmp
dec
shll
jne
in
cli
cltd
xchg
mov
adc
lods
cmc
or
call
pop
xor
xor
aas
testl
das
jl
sbb
ds
test
pop
test
insb
inc
cmp
xchg
out
test
out
js
stos
fs
or
adc
pop
xchg
mov
ja
inc
xchg
imul
call
mov
xorl
ficoms
aas
jne
pop
ljmp
js
xor
mov
push
iret
fidivrl
jmp
xchg
aaa
loopne
pushf
loope
les
inc
xor
sub
pop
shlb
ljmp
es
or
jne
rcll
xchg
mov
orl
mov
add
cmp
cli
mov
icebp
psubusb
lock
lcall
and
ss
pop
xor
xchg
lods
cmp
das
mov
push
mov
jns
xor
cmp
mov
jl
dec
test
add
cmp
xlat
pop
xorb
xchg
stc
add
jle
pusha
aaa
dec
in
subb
dec
dec
in
mov
pop
ds
aas
in
push
mov
jnp
pop
imul
push
dec
xor
sub
cmp
dec
mov
dec
xchg
mov
dec
xlat
xor
ljmp
std
test
scas
in
adc
fildl
jnp
push
mov
mov
or
rcl
inc
daa
mov
mov
nop
inc
movsb
lahf
adc
cmpsb
lret
push
incl
adc
je
inc
test
shlb
out
std
mov
rcrb
fs
pop
xchg
xchg
xchg
pop
sbbb
push
mov
arpl
fwait
mov
sbb
or
bound
addr16
shl
call
sub
and
mov
sub
repz
xchg
dec
fwait
movl
rcl
fistl
push
paddb
cli
adc
add
in
jno
jl
out
cmp
xchg
repz
test
mov
cmp
push
dec
in
or
jae
dec
frstor
push
in
jge
and
inc
inc
inc
mov
call
jg
add
jecxz
arpl
js
sbb
pushf
pop
mov
jno
lods
icebp
mov
enter
dec
loope
std
fidivs
nop
sbb
test
stos
xor
lret
push
adc
cmc
insb
pop
aas
rcrl
loop
out
mov
xchg
and
loopne
xchg
xchg
jp
into
rcr
data16
mov
push
test
sub
xchg
arpl
or
lods
fdivr
sbb
arpl
ljmp
in
push
jg
sbb
lock
jbe
call
mov
sub
pop
adc
cltd
das
sub
shll
lds
enter
dec
cli
test
cmp
cmp
bound
in
mov
pushf
imull
and
push
lods
adc
mov
daa
scas
inc
imul
scas
inc
push
bound
xor
mov
fisubl
pop
loopne
xchg
pop
and
fisttpl
or
popf
les
ljmp
cmpsb
hlt
pop
mov
int
in
push
sub
dec
pop
jne
xor
adc
or
aas
xchg
nop
jle
dec
cwtl
lock
add
mov
jo
movsb
adc
iret
les
fstpt
mov
int
jge
sbb
rcll
sbb
ljmp
xchg
push
xor
movsb
lods
rcll
dec
sub
iret
and
sbb
sti
int
shl
mov
shll
dec
dec
test
nop
out
fsubp
xor
mov
xchg
cmp
loopne
mov
mov
xchg
iret
ret
dec
mov
xchg
sbb
mov
push
fbstp
outsl
xchg
adc
je
ds
jmp
pop
cltd
xchg
xchg
jo
test
mov
sbb
or
jmp
movsb
cltd
mov
sub
lret
and
in
mov
mov
jns
int3
dec
push
fmuls
fs
sbb
test
loope
xchg
adc
stos
push
jmp
movsb
stos
push
jl
out
inc
jg
pop
ret
push
test
cld
in
mov
cli
adc
and
xchg
icebp
pop
xchg
sbb
sub
cmpsw
lock
ffreep
mov
into
cmpsb
sahf
pop
adc
pusha
or
mov
orl
lret
std
adc
push
movsl
rol
mov
xchg
bound
sub
mov
cmp
adc
mov
test
xchg
scas
push
mov
inc
pop
cmp
and
lods
sbb
mov
fs
pop
jno
mov
xsha256
cmpsb
push
loop
xchg
sbb
add
mulb
xchg
lret
scas
mov
push
adc
gs
and
arpl
or
mov
or
loop
pop
push
xchg
fs
scas
bound
and
cli
sub
jge
mov
jmp
xor
push
sahf
div
js
dec
adc
test
lea
and
pusha
mov
adc
xchg
mov
push
cmp
and
fcompl
movsl
test
lret
in
loope
rcrb
dec
jbe
in
dec
cwtl
sub
jnp
mov
mov
or
nop
fsts
scas
orl
in
mov
inc
mov
adc
xchg
mov
hlt
add
fiadds
sahf
popa
add
mov
xchg
sub
mov
pusha
popf
mov
sbb
and
fldt
jg
out
or
sbb
cmp
fisttpl
out
adc
push
xlat
cmp
sbb
inc
scas
dec
and
es
and
push
mov
jp
mov
fs
and
popa
inc
mov
lcall
dec
mov
cmp
or
push
mov
negl
mov
mov
jmp
out
or
and
mov
inc
lds
pop
fisubrs
bound
push
push
rclb
fsubr
mov
fsubp
mov
push
push
lds
xor
out
andl
movsb
xor
xchg
cmp
cs
aam
cli
push
sahf
sub
js
jae
andb
xchg
sbb
movsl
sbb
xchg
push
fildl
sbb
xchg
fnstcw
adc
xchg
push
push
jo
cmp
iret
add
fisttps
dec
aas
xchg
cmc
aaa
dec
pop
fnsave
out
mov
dec
inc
test
xchg
adc
pop
and
clc
test
nop
jecxz
lahf
hlt
mov
pusha
dec
push
jmp
add
iret
or
xchg
call
push
sub
int3
lea
mov
xor
shlb
mov
jle
inc
adc
pop
lods
adc
ret
das
sti
sahf
push
repnz
mov
cmp
and
jbe
std
fnstsw
mov
jle
fldt
cld
stc
dec
test
imul
or
std
popf
das
cmp
loopne
hlt
sahf
or
out
nop
add
jo
test
xchg
xor
rolb
inc
cmp
mov
sub
ffreep
leave
in
ljmp
pop
sbb
or
jg
cwtl
aaa
sub
or
mov
inc
and
dec
in
push
outsl
pop
add
add
push
xor
test
xlat
jnp
pop
rol
xchg
cmpsl
push
sub
loope
enter
ss
mov
leave
test
xchg
or
leave
jge
cld
jo
cltd
rolb
push
cmpsb
adc
pop
cmc
ret
cmp
lea
hlt
ss
adc
cld
in
sbb
cmp
arpl
push
mov
sub
jno
stc
xchg
cmpsl
xchg
adc
call
mov
or
stc
inc
jae
mov
repz
adc
leave
sub
mov
sbb
mov
ret
lret
movsl
or
cmpsb
or
dec
shll
lahf
xchg
aas
inc
lahf
stos
gs
les
flds
popf
or
mov
out
mov
clc
sub
loopne
cmp
mov
xchg
push
mov
jle
push
sub
aaa
xchg
and
jnp
lods
jns,pt
pop
xlat
push
cwtl
mov
push
mov
fistl
xchg
pop
xchg
pop
mov
jp
icebp
in
mov
push
mov
jno
add
aam
loop
cmpsb
jnp
pop
push
and
mov
out
add
xor
sti
pusha
fs
sti
test
xchg
cmp
fcom
test
clc
aaa
and
lret
jp
shr
mov
dec
imul
adc
sbb
pop
sbb
mov
cwtl
sub
sar
inc
mov
sbb
mov
xor
dec
les
das
cld
cltd
inc
lcall
mov
and
ljmp
mov
ljmp
ja
in
xchg
ficoml
jns
cwtl
mov
pop
dec
jns
cmp
push
xchg
fmull
int3
push
iret
cmp
scas
mov
sti
aas
sbb
leave
sub
add
inc
dec
mov
fcmovbe
push
pop
cmp
out
cmc
cmc
add
mov
xor
ficoms
in
xchg
test
mov
stc
mov
das
in
imul
sti
cmc
pop
sarl
sahf
imul
lds
mov
fdivp
dec
test
loopne
jecxz
jl
lock
mov
mull
mov
popa
mov
mov
stos
xchg
dec
jl
dec
insb
add
fs
push
hlt
pop
pop
jp
mov
repnz
jae
push
sbb
imul
inc
scas
mov
jp
lahf
dec
sbb
push
in
cld
and
in
sub
jg
adc
sub
push
adc
pop
push
and
xchg
sub
repz
in
xchg
adc
fnstenv
ficompl
jp
inc
clc
xchg
inc
icebp
dec
in
add
mov
nop
mov
rcll
cmp
gs
cmpsb
mov
cltd
cli
jge
and
and
xchg
and
adc
popa
mov
push
push
daa
add
adc
mov
cmp
das
adc
push
mov
flds
push
jp
dec
dec
xor
int
cmp
mov
mulb
lds
jo
rorl
mov
dec
pop
jmp
popf
jmp
dec
jae
dec
push
sub
mov
test
jl
es
xor
cmp
sarb
test
loop
xor
es
mov
popa
push
xor
dec
and
loopne
rcl
test
xchg
add
into
push
lret
cmpb
xchg
aad
repnz
clc
or
dec
cmp
cmp
ss
adc
lea
insl
out
inc
mull
filds
jmp
or
repz
mov
push
fldl
sub
add
jp
adc
fimull
mov
in
xchg
ljmp
and
icebp
push
jmp
pop
push
pop
test
cmp
dec
mov
fwait
neg
call
out
sbb
aaa
pop
cwtl
mov
cmpsb
into
jnp
insl
test
iret
inc
stos
mov
sub
or
fcmovnb
push
adc
fidivl
jae
adc
in
repz
mov
ficoms
push
push
mov
cmp
mov
lret
adc
adc
mov
push
out
aam
pop
out
dec
push
sti
movsl
jo
pushf
cwtl
and
frstor
xor
fcomip
adc
test
aad
pop
sti
cmp
add
sbb
imul
push
cmp
push
lret
or
mov
pop
jecxz
in
or
push
xlat
pop
cwtl
andl
out
sbb
aam
dec
addr16
cmc
xchg
fbstp
mov
and
sahf
int
into
add
xchg
jecxz
sbb
das
pop
pop
loopne
in
xchg
xchg
push
lods
push
inc
cltd
xor
jnp
arpl
adc
add
or
mov
std
pop
add
xor
sbb
dec
or
mov
and
inc
xor
add
and
cs
xlat
addb
je
cwtl
popf
xchg
mov
mov
scas
dec
xchg
cs
push
aaa
aam
mov
mov
fwait
xchg
sbb
ss
pop
adc
int3
repz
xchg
jmp
adc
sub
mov
scas
jnp
ret
inc
lret
inc
xlat
jo
and
test
mov
lods
jge
sbbb
sub
out
cmp
push
ss
xchg
mov
or
jb
mov
fmull
adc
jecxz
mov
cltd
xchg
leave
sub
and
imul
xlat
mov
sbb
in
jge
mov
mov
xlat
mov
in
mov
add
in
aam
push
push
push
mov
pop
test
xor
cld
xchg
pop
mov
icebp
fistpl
in
movsb
clc
lret
flds
mov
lcall
and
xor
push
aam
daa
dec
inc
pushf
sbb
aam
sbb
push
adc
das
out
add
xlat
cld
iret
xor
dec
test
addr16
repnz
inc
mov
dec
sbbl
lods
cmp
rcr
aas
adc
and
push
sub
js
mov
sbb
fidivs
scas
fisubrs
mov
dec
jns
push
lahf
in
and
or
loop
push
pop
sub
xchg
icebp
sub
pop
les
jae
mov
xchg
leave
loope
roll
fwait
mov
outsb
test
stos
push
mov
bound
pop
xchg
cmc
jg
sahf
inc
aad
insb
leave
xchg
or
repz
and
inc
mov
addb
mov
jb
sub
mov
jae
mov
adc
int
loop
sbb
es
ds
sub
jge
push
xchg
dec
cmp
cmp
pushf
leave
lea
xchg
jo
fcompl
lea
xchg
mov
into
dec
hlt
pop
dec
push
sarl
insb
mov
ja
add
out
push
ljmp
push
sbb
mov
out
sbb
mov
out
in
iret
pusha
add
push
xchg
fs
mov
sub
hlt
pop
pushf
xchg
jg,pt
push
shrd
lods
ret
pop
push
mov
fucomp
test
pop
lods
movsb
cmc
fmull
mov
scas
mov
jle
repz
stos
sub
xor
popf
repnz
popf
mov
and
insl
lcall
decl
and
mov
inc
es
pop
mov
cs
jmp
andl
iret
jne
adc
movsl
in
ljmp
jo
hlt
sarb
fwait
call
adc
mov
in
pop
mov
insb
jbe
call
or
jbe
dec
xchg
jb
inc
cwtl
pmullw
cmp
sub
into
xchg
jae
add
loop
and
imul
adc
mov
cs
jmp
stc
inc
ds
cwtl
adc
js
loopne
cmpsb
repz
imul
out
push
fdivrs
loop
outsb
lret
cli
dec
filds
dec
jae
add
addr16
sbb
and
out
leave
std
pop
dec
adc
fidivl
jge
adc
mov
xor
sub
xchg
dec
loope
jne
loop
mov
mov
fildl
dec
mov
repz
add
scas
les
pusha
jmp
rorl
xchg
aas
ds
mov
movsl
xchg
add
jp
lret
mov
cmp
cltd
pop
mov
sbb
xor
mov
mov
cmp
sahf
push
jbe
and
push
mov
int3
aas
cmp
lret
dec
and
jns
ljmp
mov
out
cmp
hlt
mov
outsl
push
stos
push
jge
cmp
push
pop
stc
push
out
fwait
jnp
add
test
cli
lods
aam
push
add
cmp
jge
int
clc
fwait
add
sub
cmp
call
adc
cmp
sahf
dec
mov
js
daa
loopne
inc
push
xchg
inc
iret
dec
fcmovu
cli
cmpsb
inc
push
push
sbb
pop
xchg
dec
xchg
sub
add
and
aas
pop
mov
cmpsl
fcmovb
xchg
std
in
inc
push
in
mov
js
adc
pushf
sbb
dec
add
push
andl
ds
inc
mov
dec
repnz
or
sub
add
sbb
data16
or
jno
das
xchg
jne,pn
cltd
int3
call
mov
cld
pop
push
mov
push
xchg
jg
test
cwtl
push
insb
jnp
mov
cmpsl
sbb
mov
lcall
push
cltd
xor
mov
mov
popa
loope
inc
sbb
cld
mov
rcl
cmpl
mov
dec
pop
sub
test
ja
jge
xor
iret
mov
sub
xchg
dec
fistps
xchg
or
lods
add
cmpsb
shl
push
mov
loopne
loopne
ljmp
xchg
daa
les
jnp
adc
mov
push
pop
add
adc
adc
adc
mov
add
or
lret
popa
xchg
mov
mov
sub
out
aad
mov
or
mov
cld
repnz
inc
lods
out
and
inc
and
pop
jp
push
add
int3
repnz
adc
push
mov
lods
xchg
pop
insl
fs
iret
mov
enter
ljmp
mov
and
fidivs
push
or
add
inc
mov
sbb
sbb
cmp
sti
mov
int
dec
and
ds
fsubr
test
and
sub
repz
test
push
and
rep
aam
jmp
int3
loop
add
push
xor
cmpsl
sbb
mov
sub
aas
cld
mov
mov
push
and
mov
sub
or
pop
add
xchg
mov
pop
ret
into
mov
inc
ds
xor
push
divl
push
inc
cmc
add
jbe
or
xor
out
mov
sbb
stc
fsubl
lods
add
mov
in
aas
jle
js
cmp
fwait
das
pusha
xor
pop
inc
and
test
xchg
push
push
mov
insb
icebp
mov
in
cmp
and
and
icebp
rcrl
mov
dec
insl
sub
lahf
loop
neg
and
cltd
or
mov
cmp
mov
push
push
xchg
or
sahf
loop
and
lock
scas
loop
jns
repz
nop
xchg
test
mov
cmp
and
stos
movsb
cmpsl
push
test
xor
lret
scas
in
push
into
out
int
sub
lods
daa
or
stos
mov
xor
pop
fnstsw
loopne
add
pusha
lods
enter
scas
mov
int
mov
aam
push
xor
cmpsl
rcrb
pop
rcl
frstor
mov
movsb
ja
in
adc
inc
leave
xorl
fcomps
jge
mov
jae
leave
mov
mov
sbb
push
sahf
ret
jmp
or
sbbl
add
scas
inc
cs
outsl
push
and
imul
xchg
mov
xchg
call
popa
adc
mov
cli
add
in
testl
sbb
scas
dec
ljmp
outsb
enter
lea
je
push
rcrb
dec
adc
push
xor
or
dec
mov
cld
jo
std
mov
gs
lea
ret
incb
cmpl
cs
push
loope
sbb
and
mov
test
int
dec
jmp
arpl
ret
addr16
mov
fld
pop
ja
test
enter
test
mov
pushf
iret
aas
filds
icebp
sub
enter
dec
lock
push
dec
mov
in
jbe
cmp
loopne
cli
stc
in
jle
enter
stos
add
cmpsl
push
pop
int
inc
jno
ljmp
nop
inc
cs
pop
and
rcl
pusha
loope
cli
sbb
enter
adc
pop
xchg
aad
mov
pop
xlat
push
cmpsb
xchg
mov
daa
insl
test
mov
lret
inc
pushf
cs
xlat
push
adc
mov
and
int
fmul
fsubrl
daa
jge
enter
push
mov
and
out
adc
ss
add
adc
adc
divl
dec
cmp
xor
push
nop
out
or
popf
mov
cwtl
xor
add
jecxz
dec
subb
jne
cmp
jmp
aas
fs
jmp
sahf
test
mov
sub
inc
loop
arpl
insb
cmpsl
mov
dec
push
sbb
lods
lahf
pop
ret
les
or
setp
cmp
jo
sti
sub
or
xchg
repz
icebp
push
mov
add
fwait
push
or
xchg
or
ds
mov
pop
xchg
dec
aaa
ret
adc
or
es
mov
dec
add
stos
ljmp
dec
hlt
and
xchg
orl
jb
sub
pop
cmp
rclb
stos
cli
jl
xchg
jp
stc
cmc
dec
mov
adc
jae
mov
imul
in
fs
loop
push
mov
jae
jo
cmp
cltd
cmpsl
addr16
add
clc
mov
mov
pusha
das
sbb
fdivs
std
sbb
rcrb
cs
sub
sbb
imul
loop
or
std
popf
adc
xor
or
je
push
mov
cmp
jl
dec
lods
rol
loope
cli
pop
and
int3
sbb
fadds
movsb
in
je
ja
dec
jo
xchg
stos
dec
out
jecxz
xor
pop
xchg
sarl
mov
mov
adc
ja
inc
jge
fs
cmpsb
out
lret
sbb
cmpsb
or
dec
jb
pop
or
test
inc
adc
in
jl
andb
test
mov
das
mov
and
mov
and
push
sbb
xorl
or
pusha
mov
mov
sub
mov
xor
sub
jb,pn
jbe
jp
dec
popf
mov
cmp
jmp
jns
inc
in
into
scas
mov
mov
repz
insb
pop
xchg
mov
xor
push
fs
sub
sbb
lahf
adc
imull
jno
bound
xchg
stos
mov
fdivs
xor
cmpb
cwtl
pop
push
pop
das
fwait
sti
sarl
dec
xor
arpl
roll
inc
xor
enter
out
in
cmp
xor
shl
das
inc
adc
daa
add
lar
test
adc
loop
mov
std
popf
jb
into
inc
mov
lock
js
mov
xor
sbb
movsl
mov
pop
test
mov
es
fildll
mov
out
aad
into
cmp
cmp
or
stc
sar
cmp
push
inc
shll
or
repnz
push
ja
mov
cmc
js
fadds
arpl
es
loop
mov
or
mov
jo
pop
push
jnp
sub
xor
out
dec
jp
js
add
fmull
repnz
mov
aaa
les
int
ja
mov
and
push
sbb
push
in
cmpsl
or
out
xor
pop
outsb
repnz
inc
add
aam
scas
mov
or
adc
xchg
lret
lcall
imul
lcall
cwtl
cld
int3
cmc
cwtl
arpl
mov
sub
ds
add
je
jmp
pusha
mov
mov
jns
or
pushf
mov
xchg
int3
test
inc
push
adc
iret
cmp
sub
push
or
loope
cmp
std
mov
and
loopne
call
nop
push
jle
xchg
pop
xchg
lds
ret
sub
jg
jmp
lret
jl
xchg
xor
jns
and
adc
mov
lods
sbb
rcpps
fldcw
jb
mov
and
xor
sbb
mov
nop
test
add
xchg
mov
pusha
es
mov
jnp
lds
xor
adc
movsl
ficoms
cmp
dec
jbe
int
cwtl
mov
adc
loope
scas
sbb
mov
push
scas
inc
aaa
adc
dec
push
jecxz
push
push
dec
add
call
in
subl
adcl
out
popa
mov
andl
pop
sbbl
rorb
cmc
and
insb
xor
cmp
clc
push
cmpsl
push
leave
cs
lods
sbb
inc
sbb
cmp
jle
out
lods
push
and
fs
push
adc
fidivrl
push
sub
adc
pop
pop
pop
in
add
push
insb
jnp
daa
mov
stos
xchg
mov
daa
andl
mov
sbbl
sbb
push
mov
ficomps
std
dec
in
call
mov
lods
mov
gs
mov
fimull
mov
mov
lock
dec
mov
add
pop
or
mov
mov
stc
mov
add
add
dec
and
inc
dec
cmp
mov
lods
fmuls
addr16
popa
xor
push
push
jl
movsl
and
mov
mov
jp
jne
push
pop
xchg
inc
movsb
jnp
inc
or
xchg
sub
or
clc
das
mov
les
fcoml
mov
scas
cmc
jne
cmp
lcall
inc
mov
pop
sbb
movsb
and
hlt
mov
sbb
mov
mov
arpl
add
das
mov
lods
imul
aaa
and
std
sbb
test
stc
xlat
in
fildl
pop
int3
adc
pop
imull
movsb
popf
pop
pop
pop
xchg
xchg
mov
por
push
addb
imul
mov
jmp
cmpsl
fisubs
mov
iret
mov
mov
hlt
sbb
sbb
lds
xor
sub
cmp
pop
jno
out
inc
in
jmp
leave
fists
arpl
inc
loop
mov
addr16
sub
sbb
jmp
ds
fdivrl
push
push
inc
insb
push
push
in
shrb
jo
fildl
out
mov
lret
xchg
inc
or
mov
inc
adc
jle
mov
add
sbb
and
push
push
cmp
xor
push
dec
fimuls
sub
lds
sub
lds
push
ret
lods
mov
fucomip
and
test
inc
inc
jmp
and
mov
mov
loopne
jne
cld
mov
sub
mov
leave
rclb
shr
mov
mov
xor
iret
lret
lcall
cmc
inc
push
inc
push
inc
mov
push
cli
dec
inc
test
jecxz
daa
ljmp
xchg
xchg
sub
mov
cmc
mov
adcb
dec
jg
loope
insl
call
cmp
push
sbb
bound
rcrl
stc
lcall
jo
inc
bound
aaa
pop
popl
test
out
scas
inc
dec
pop
dec
mov
xor
popf
push
in
push
fwait
and
ja
adc
inc
dec
out
loop
add
and
mov
cld
popf
jp
mov
loope
imul
push
cli
ret
cmc
or
fidivl
xchg
sub
insb
xor
sub
push
adc
xor
mov
leave
jge
pop
or
dec
mov
das
or
jecxz
ficoml
add
shrb
in
mov
adc
imul
pop
pop
add
leave
push
jp
push
mov
jecxz
arpl
mov
and
adc
pop
or
decl
cmp
add
fwait
ds
addr16
cmp
rcl
cmpsl
jecxz
rcrl
push
dec
lods
mov
aam
inc
das
mov
lods
inc
sub
adc
inc
dec
xor
testl
mov
fidivrl
pop
lock
loop
xor
outsl
xor
movsl
add
inc
xor
xchg
outsb
lock
jl
push
jnp
add
pusha
cmpsl
std
bound
icebp
cmpsl
inc
pop
sbb
sub
xchg
enter
sbb
gs
pop
mov
jne
mov
sbb
mov
add
or
ror
push
leave
push
jg
ds
popa
push
cwtl
inc
inc
mov
gs
pusha
lea
mov
fidivrl
jg
mov
ja
pop
jno
dec
out
loopne
lcall
clc
cltd
outsb
fld
mov
mov
fwait
push
in
gs
xor
hlt
xor
stos
sbb
jp
jp
dec
pusha
mov
stos
cpuid
add
out
dec
add
fnstenv
dec
fidivrl
xchg
dec
popa
test
pusha
enter
cmp
jo
push
mov
aam
push
jo
xchg
mov
leave
clc
jns
cli
aas
test
mov
push
add
cmp
cmpsl
jp
adc
fstpl
mov
ja
es
ficoml
in
mov
into
pop
test
movsb
testl
out
mov
and
dec
xor
jns
test
xor
mov
iret
or
mov
xchg
inc
mov
jmp
inc
ja
sahf
cmpsb
loope
cmc
test
dec
push
xchg
xchg
pop
fwait
jmp
mov
pop
pusha
push
sahf
jo
pop
fcompl
mov
dec
dec
stos
add
xor
hlt
pop
mov
loope
gs
ficompl
pop
daa
scas
push
sub
arpl
xchg
aam
repnz
icebp
popa
call
cmp
xor
jl
lret
xlat
push
or
mov
adc
add
adc
mov
mov
push
cmp
and
adc
je
adc
arpl
leave
add
sbb
sub
xor
sbb
sahf
and
testl
dec
sub
stos
loopne
dec
push
std
cltd
leave
into
xchg
mov
call
nop
adc
inc
pop
add
adc
pushf
scas
push
jecxz
ljmp
mov
les
jecxz
mov
cmp
scas
cmp
int3
clc
inc
lahf
jo
ficoms
punpcklwd
daa
ror
xor
jl
test
lods
sub
sbb
leave
mov
ret
add
fs
enter
inc
aam
mov
mov
push
dec
lds
mov
xor
data16
cmp
jnp
xchg
and
push
shl
out
push
in
cmpsb
push
mov
shlb
std
or
loop
push
push
mov
jmp
mov
repnz
push
xlat
jns
mov
movsl
push
lods
daa
pop
add
movsb
out
cmc
mov
cmp
sub
mov
adcl
pusha
mov
jmp
test
sub
lds
outsl
xlat
mov
test
and
dec
jle
mov
inc
sub
sub
xchg
jnp
push
repz
and
cld
dec
enter
dec
into
mov
mov
mov
inc
imul
push
and
push
popa
insl
mov
lcall
in
test
out
dec
xlat
divb
aaa
cltd
leave
jmp
jecxz
mov
xor
mov
sub
xor
popa
fdivrp
push
xor
cs
or
nop
jg
fs
test
and
xchg
lea
cld
adc
cwtl
push
sub
add
movsb
mov
mov
cmpb
arpl
push
std
inc
inc
ret
imul
subl
loopne
rcll
lcall
lret
xor
pushf
or
sbb
mov
scas
ds
xchg
add
clc
mov
cli
mov
fs
cmp
push
outsl
data16
cmp
incl
mov
lods
push
mov
and
mov
pop
out
mov
jl
push
sbb
xchg
push
mov
test
les
and
lret
stc
or
mov
sbb
test
jne
xchg
inc
xchg
add
sbb
lret
adc
out
jne
aad
adc
xchg
push
insl
sub
movsb
fucomip
mov
inc
sub
lods
out
sbb
cmp
xchg
cli
mov
jecxz
fs
push
mov
inc
lods
mov
fldl
inc
out
jno
mov
cmp
ljmp
jle
push
leave
cmp
stc
and
mov
xlat
dec
test
js
or
call
cmp
lock
jge
mov
push
and
hlt
imul
fcoml
jecxz
mov
pop
pop
sub
push
bts
inc
hlt
adc
mov
push
mov
clc
packssdw
jno
std
cmp
fisttpl
std
xor
mov
adc
or
mov
cltd
fsubrs
lea
mov
sahf
imul
sbb
fsub
jp
mov
adc
lods
popa
fcmovnu
push
test
into
push
jmp
arpl
inc
mov
movsl
cmpsl
clc
mov
push
pusha
mov
jno
bound
cmp
push
pop
repnz
aam
cmp
push
std
jmp
das
mov
push
mov
cli
fimull
fdivr
sbb
lret
repz
fmull
mov
or
mov
xchg
scas
cmp
insb
les
paddq
push
push
mov
inc
inc
mov
in
into
and
or
mov
leave
jae
inc
xor
xchg
ret
mov
dec
test
jmp
aam
sub
pop
daa
jecxz
lods
rcrl
jmp
jge
xchg
push
les
lret
sbb
add
icebp
subb
xor
lret
add
cmpsl
cmc
or
sub
shll
dec
lods
inc
cmp
pop
cwtl
in
pusha
ja
rcll
xor
hlt
out
fwait
pop
push
clc
lret
sbb
and
add
outsl
fs
mov
xchg
int
xchg
push
test
push
jge
lcall
ss
sbbl
daa
imul
test
mov
jl
mov
movsb
push
pop
dec
dec
scas
icebp
sbb
dec
add
jnp
jae
imul
aad
cmc
iret
out
sbb
jecxz
movsb
into
xlat
subl
mov
aam
aam
pop
jne
loope
insb
mov
in
sub
or
shll
nop
and
call
sub
adc
shll
stc
dec
adc
gs
outsb
aad
clc
int
mov
add
dec
test
incl
add
lret
and
in
in
and
jno
rcrl
outsl
mov
cmpsl
pop
and
and
cltd
push
mov
inc
mov
pop
xchg
ljmp
loop
sti
dec
or
icebp
mov
test
sahf
adc
arpl
fs
xor
fxch
ljmp
iret
pop
cmp
push
push
jmp
jns
pop
fildl
outsb
sbb
sub
mov
sahf
xchg
or
xchg
adc
cli
mov
cmc
jne
inc
fisttpll
in
lcall
push
jne
pop
mov
bsf
scas
cmp
push
jns
pop
xchg
mov
negb
js
test
xchg
loop
pop
test
add
std
mov
cmp
xor
pop
aad
xchg
inc
nop
pop
sub
push
adc
outsl
dec
pop
mov
jmp
mov
xor
int3
rorb
cli
mov
mov
lea
push
dec
pop
std
jb
inc
mov
clc
cmp
loopne
mov
xor
fsubrp
ret
aaa
lds
or
ljmp
mov
sub
inc
mov
stos
and
insl
inc
insl
cmp
dec
fs
adc
jns
sahf
daa
jl
pop
mov
xchg
fdivl
jno
jo
pop
andb
jg
dec
push
inc
inc
pusha
jb
lock
dec
shrb
repnz
test
lret
sbb
int3
jp
dec
pop
loope
add
cmp
dec
movl
cwtl
adc
inc
add
and
cmp
xchg
out
mov
dec
mov
cmp
cld
test
and
jmp
and
cltd
pop
shrb
popa
jbe
mov
mov
push
outsb
imul
aas
mov
imul
and
pop
in
xor
cmpb
and
mov
jge
jb
dec
addr16
mov
dec
stos
and
je
and
adc
sbbb
push
fwait
push
clc
mov
xor
inc
mov
xchg
jecxz
lret
sbb
adc
fldenv
jmp
mov
mov
adc
jg
outsb
inc
addr16
pop
call
and
ss
in
cmpsb
dec
scas
push
push
je
cmp
clc
lods
dec
mov
mov
shrb
mov
jle
shl
addr16
int
hlt
and
notl
push
stos
mov
jns
flds
mov
movsl
mov
mov
test
adc
xrelease
popf
nop
inc
inc
mov
fimuls
fs
inc
xchg
stc
inc
idivl
in
sbb
and
inc
adc
sub
insl
js
mov
ds
add
xchg
lcall
xchg
jb
dec
fcompl
pushf
adc
xchg
pop
add
jo
xchg
and
pop
mov
jl
icebp
xor
jae
test
test
mov
cmp
adc
push
and
icebp
ds
cmp
in
std
mov
ror
nop
xor
add
or
lock
ret
cmpl
cmp
and
mov
mov
xchg
and
psubsb
mov
sbb
repz
enter
adc
fsubrs
sbbb
push
fsubrs
notb
jge
pushf
rcrb
dec
jne
cmpsb
push
fisttpll
mov
xor
lcall
inc
sbb
rorb
mov
pop
scas
jnp
les
or
jmp
xor
test
or
pop
cld
push
or
rcll
aad
jnp
dec
aam
in
mov
cmc
adc
adc
bound
or
pop
pop
aam
insl
or
outsl
fistpll
dec
xchg
dec
mov
or
pop
adcb
cltd
je
mov
orl
insl
inc
std
lret
cmpsl
nop
pop
jl
insb
imul
je
out
leave
jg
inc
jg
popf
mov
fldl
and
jg
enter
cmp
or
xchg
adc
xchg
lcall
inc
rcrb
mov
lds
dec
orb
sub
mov
pop
push
xchg
mov
repnz
rcrb
mov
pop
andl
push
sub
ja
movsb
fcmovne
or
xchg
jnp
jbe
inc
jge
add
repz
xor
sub
add
leave
loope
call
aaa
sbb
stos
push
jae
and
xchg
jmp
fwait
mov
enter
push
jns
xor
gs
sub
or
mov
stos
imul
rolb
mov
aam
je
xchg
subb
ds
adc
ja
xchg
push
sub
jne
rcrb
cltd
je
std
fwait
xor
iret
push
outsb
and
dec
or
and
iret
xor
pop
xor
adc
lahf
aaa
xlat
inc
jnp
lcall
mov
lock
or
int
xchg
mov
xchg
ja
and
out
daa
xor
call
jns
sbb
and
push
xchg
stos
mov
jl
jns
je
sti
stos
sub
gs
push
mov
sarb
lods
cmp
jnp
shlb
mov
mov
add
jg
mov
lea
rcrb
fprem
fisubrs
hlt
add
in
jnp
jle
mov
test
mov
push
fwait
repnz
je
out
std
xchg
push
push
mov
xchg
or
mov
pop
jns
loop
dec
and
xchg
insb
mov
in
imul
jae
arpl
call
pusha
out
cld
test
mov
jmp
fdivl
fcmovnb
daa
outsb
push
test
jo
jbe
lods
xor
or
stos
jecxz
xchg
clc
jl
popf
xchg
jne
sub
cmpsl
iret
pop
lret
inc
push
aaa
sbb
loop
mov
push
fdivr
loop
sti
rol
insl
dec
fcmovb
inc
xchg
xchg
popf
jae
jno
sub
ret
pop
jmp
add
fimull
push
lahf
adc
scas
iret
sbb
lods
ds
mov
mov
xor
fmulp
addb
stc
test
fwait
lods
xor
outsl
pop
mov
jo
out
sbb
and
sbb
inc
icebp
mov
imul
dec
xor
out
cld
pop
mov
mov
inc
stos
dec
data16
xor
fiaddl
addr16
popa
push
shl
stos
mov
xchg
dec
sub
test
enter
aam
repnz
add
aas
shlb
out
stc
mov
adc
sub
addl
xor
adc
or
pop
lods
gs
aam
lret
out
sub
add
jae
dec
out
mov
adc
cvttps2pi
lar
cmpsb
aaa
inc
das
into
adc
out
faddl
jmp
xchg
adc
add
mov
mov
arpl
sar
idiv
loope
fisttpl
push
push
xchg
repz
loopne
scas
movsb
jl
sub
xchg
jg
or
mov
inc
imul
loope
insb
insb
inc
mov
cmp
lods
push
loopne
loop
aam
std
dec
inc
mul
cmp
lea
xchg
or
cmp
clc
adc
add
ds
rolb
mov
cmp
std
jnp
push
mov
xchg
push
jo
lock
sbb
hlt
cltd
clc
setp
xchg
mov
cmp
push
in
push
mov
push
jno
pop
pop
test
addb
cwtl
repz
movsb
daa
or
mov
stc
iret
mov
call
sub
js
mov
insb
push
fs
mov
jnp
cmp
es
push
cli
sub
adcb
dec
cmp
or
movsb
mov
jecxz
icebp
or
jb
xchg
mov
xchg
pop
stos
xchg
push
std
out
mov
popf
out
adc
rcll
jb
out
mov
xchg
pop
fstpl
and
sub
fwait
push
add
xor
push
and
jbe
sub
xor
lods
ret
push
out
and
enter
dec
add
ret
and
pop
adc
test
jbe
outsl
std
cmpsb
inc
push
or
dec
pop
test
push
aaa
and
jecxz
mov
adc
int3
shr
out
mov
and
inc
lds
mov
mov
cmpsb
sub
fsubrl
cmc
outsb
mov
pop
jg
sbb
lock
mov
cld
push
in
lods
fidivs
cld
and
cmp
push
aas
push
inc
imul
scas
xchg
cmp
adc
sahf
andl
mov
imul
clc
sbb
mov
loop
test
lahf
iret
mov
mov
daa
loopne
jecxz
or
lcall
enter
sbb
out
dec
lret
add
or
out
sub
sbb
jno
push
out
cs
and
pop
mov
push
push
jne
xchg
test
gs
std
out
in
cmp
jl
pop
pop
cmp
icebp
ja
xor
push
or
xchg
pop
test
loope
sarb
xorb
xor
out
add
push
pop
clc
in
mov
stos
sub
mov
repz
sbb
mov
cmpsb
xor
int3
cmc
imul
negl
or
cld
mov
sbb
test
jge
pop
out
or
cld
stc
ss
lcall
mov
sub
xchg
aaa
imul
xchg
sub
xor
fcom
adc
addb
test
add
mov
or
dec
dec
rcll
and
push
cld
addb
movb
fstpl
mov
cltd
mov
sbb
cmp
test
ficompl
mov
dec
push
into
lea
push
cli
out
insb
movups
adc
insb
fidivl
fdivl
insb
or
outsb
int
mov
stc
mov
outsl
and
ret
and
push
and
into
xor
mov
mov
fmull
call
cld
and
loope
test
daa
icebp
es
pusha
jo
cltd
push
jns
aas
inc
mov
sbb
divb
mov
aaa
decl
enter
aam
xchg
sti
push
pushf
in
lea
test
push
sub
dec
insb
xor
add
rorb
shrl
xor
xchg
stc
ljmp
adc
push
push
test
dec
cmp
mov
outsb
jmp
inc
sub
pop
cmp
inc
out
and
jnp
rcrb
sbb
fwait
sub
jo
clc
cli
mov
cltd
mov
dec
or
mov
xor
cmpsb
push
bound
cmp
push
movsb
jl
xchg
call
rorl
cmp
leave
sahf
in
pop
mov
pop
lods
xor
sbb
add
imul
cmp
or
shl
aad
adc
fnstsw
cltd
loop
xchg
or
xor
jmp
adc
sub
enter
ljmp
jbe
outsb
jg
mov
adc
data16
fists
push
add
hlt
push
mov
scas
rolb
lds
and
out
cmp
sarl
stc
push
call
scas
repz
fs
dec
mov
or
pop
cmpsb
inc
cmp
cmc
popa
cltd
lea
add
xchg
mov
lods
xchg
iret
gs
add
je
call
jecxz
adc
push
imul
inc
mov
pop
and
ret
xor
iret
jbe
xor
dec
cmc
das
cmpsb
xchg
mov
jge
push
aad
imul
jb
dec
dec
xor
pop
pop
pop
sti
dec
loopne
jl
aas
lock
push
push
aad
and
cmp
mov
mov
dec
pop
fdivl
dec
jg
jne
jae
mov
sbb
clc
fxch
test
addr16
xor
lock
aad
jne
cmpsl
inc
icebp
xor
lret
jae
int3
sub
adcb
xchg
out
inc
sbb
int3
ds
pop
mov
jb
rcl
movsl
repnz
aad
adc
pusha
in
mov
imul
movsl
inc
push
popa
pop
push
clc
test
or
jns
scas
mov
mov
sti
push
sub
push
jle
fsubr
insb
mov
hlt
std
jne
popf
out
push
enter
dec
sbb
dec
stc
sbb
call
mov
cmp
dec
in
in
cld
jnp
nop
xor
ret
cld
add
das
incb
out
pop
push
rcrb
dec
and
insl
sbb
push
push
je
clc
ftst
push
lods
pusha
adc
push
inc
dec
out
cmp
add
jnp
dec
mov
pushf
inc
mov
cmp
add
loopne
mov
mov
pop
sub
and
ljmp
sbb
cmp
loopne
psubsw
jnp
xor
mov
lock
mov
or
pop
in
gs
xchg
pop
mov
bound
jl
pop
add
push
and
movsb
rcr
dec
pop
adc
int3
aad
fadd
lret
enter
mov
aam
adc
fildl
xchg
push
arpl
jp
js
addr16
jno,pt
adc
pop
push
imul
gs
sbb
fidivs
imul
xchg
pop
mov
xor
imul
test
inc
js
jp
sub
dec
jecxz
in
lock
mov
ss
stc
jmp
mov
pushl
mov
mov
sub
mov
nop
jno
cmp
xor
dec
hlt
mov
iret
hlt
fldcw
jno
addr16
enter
sbb
aaa
dec
mov
mov
fsts
xchg
push
push
nop
push
adc
js
loope
sbb
pop
add
add
das
hlt
pop
add
lods
or
push
insl
pop
sbb
mov
push
mov
daa
pop
bound
mov
cli
pushf
leave
jno
add
add
out
rcll
lcall
orb
jge
in
pop
sbb
adc
in
add
mov
mov
xchg
gs
dec
jbe
addr16
xorb
xor
movsl
es
xchg
test
push
hlt
addr16
pusha
testb
bound
cmpsl
xlat
inc
loopne
sbb
mov
push
xchg
imul
or
mov
pop
rcrb
xor
outsl
mov
sub
insl
daa
cmp
outsl
cltd
ret
sub
mov
shll
dec
jmp
cmp
cmpsb
inc
add
mov
push
fidivrs
dec
add
jo
pop
int
loop
les
add
sub
popl
filds
jns
pop
push
jb
dec
orb
hlt
pop
icebp
xchg
dec
mov
insl
mov
out
sti
sbb
add
jb
dec
sbb
mov
stos
dec
mov
aaa
pushf
add
sub
repnz
xor
into
repnz
and
mov
and
cmp
mov
lcall
cmp
loope
inc
adc
out
js
adc
xor
and
dec
dec
sahf
inc
and
xchg
ljmp
push
or
into
push
xor
cmp
outsb
out
gs
jmp
insl
or
mov
adc
cld
or
jb
faddl
or
sar
ss
cmc
sub
mov
hlt
lds
or
shll
sbb
out
jge
leave
outsb
out
fcomps
sub
fcomp
out
popf
insb
shrb
out
mov
adc
repz
aad
xor
mov
dec
dec
sahf
loope
lahf
in
xor
mov
hlt
pop
push
ja
test
jne
push
out
movsl
xchg
out
je
cwtl
loop
pushf
sbb
scas
lret
xor
dec
push
in
mov
cmp
sarb
cli
xchg
jo
ror
or
cmp
jae
push
pushf
pop
adc
popa
and
fdivl
cmp
sub
fisttpl
lret
ficoms
add
adc
test
cmpsb
and
mov
ret
dec
dec
cmp
jg
shrb
ficoml
sbb
mov
or
pop
add
mov
ljmp
ret
cld
jl
mov
arpl
faddl
hlt
xor
notb
scas
inc
push
mov
adc
enter
dec
xor
pop
xorl
push
lsl
jle
lock
js
testl
mov
fbld
inc
jg
inc
outsl
insl
and
inc
add
mulb
inc
push
push
and
mov
fildll
xchg
sub
jl
fdivs
and
std
mov
mov
pcmpeqb
loop
or
cltd
inc
pop
movsb
loope
jo
std
popf
in
push
fidivs
rcrb
lds
lahf
cmp
ljmp
sbb
mul
push
nop
decl
inc
mov
and
dec
lahf
sahf
jmp
nop
out
sbb
adc
mov
jge
shl
adc
les
xor
sub
mov
jmp
test
inc
lcall
popa
int3
pop
repnz
aaa
xchg
sub
push
inc
test
push
pop
inc
hlt
pop
ja
int3
xor
mov
or
mov
mov
add
decb
add
std
outsb
mov
add
mov
std
push
addr16
loopne
stos
aaa
fisubl
mov
mov
fdivrs
bound
mov
ss
mov
jno
xchg
aaa
xchg
jno
mov
outsl
jno
mov
fnstenv
aaa
cs
adc
aad
cwtl
xchg
dec
fcoms
and
adc
lret
pushf
ret
out
cmpsl
or
in
dec
fists
mov
xchg
xchg
cmp
or
jns
or
rcll
xor
lock
push
or
push
ja
pusha
xor
and
dec
insb
lea
sub
es
xor
das
jae
in
adc
and
or
pop
jmp
daa
fcoml
add
iret
cmp
and
adc
stos
imul
stc
filds
jmp
xor
ret
add
or
push
xor
lcall
or
jle
stos
mov
pop
js
fdivrl
lds
sub
pop
push
inc
add
adc
pop
sbb
ds
or
in
mov
push
push
mov
xchg
mov
mov
mov
pop
inc
xor
mov
mov
fdivrp
cs
fsubs
nop
inc
fs
jle
cmp
mov
ror
outsb
xchg
or
test
loope
jmp
clc
or
sbbl
mov
add
insb
ds
jo
push
or
jmp
mov
mov
in
inc
gs
jbe
sti
fstpt
sbb
mov
enter
movsl
data16
pop
je
and
movsb
mov
enter
lret
je
icebp
movsb
adc
push
stos
inc
cmp
mov
cmp
je
nop
or
out
dec
sahf
movsl
mov
mov
std
lods
fwait
movsl
shll
cmp
pop
adc
jle
test
inc
dec
out
call
and
or
xor
dec
mov
cli
in
mov
aad
pop
in
add
lds
mov
aas
shlb
out
mov
cltd
xor
mov
push
call
adc
mov
icebp
or
xchg
xorb
xchg
jno
and
jb
xchg
adc
sbb
push
add
jb
adc
cli
repnz
jle
out
ror
fcoml
testl
push
cmp
jecxz
test
xchg
and
aad
jno
mov
or
jb
ljmp
dec
sub
or
push
pop
aaa
rolb
or
movsl
les
cmpsb
cmp
xchg
xchg
enter
dec
cmp
jle
sbb
cwtl
adc
pop
jge
outsb
int
xchg
cs
shrb
fldl
cmc
xorl
jecxz
mov
fwait
cwtl
or
inc
lcall
jnp
push
andl
sub
and
cmc
cltd
aam
and
push
cmp
mov
je
scas
ret
sub
or
jmp
jne
negl
mov
push
outsb
rclb
mov
hlt
out
leave
xchg
push
mov
cmp
clc
mov
mov
fcomps
push
mov
xor
push
lock
repz
or
fsin
repz
sbb
int3
sbb
mov
pop
stc
pushf
pop
push
xchg
adc
mov
movsl
mov
add
xchg
adc
cmp
clc
mov
push
shrl
mov
cmp
sub
popf
sbb
rcl
push
adc
inc
inc
pop
ljmp
pop
inc
mov
and
push
jae
das
fs
jo
mov
imul
mov
popf
aad
jno
add
shlb
push
cmpsb
xchg
xchg
clc
lods
jb
or
fucomip
icebp
pop
les
jmp
testl
arpl
mov
subb
mov
stc
lea
sub
outsb
out
imul
das
and
jmp
and
adcl
adc
jno
add
and
sub
mov
aas
inc
pushf
rolb
jns
or
aad
mov
scas
scas
sbb
pop
inc
mov
pop
mov
cli
mov
cld
inc
push
stc
adc
and
imul
negb
das
jno
mov
insl
stc
fisubs
clc
aad
inc
jmp
arpl
cmpsb
inc
mov
shl
push
cmpsb
in
rorb
mov
ret
push
pop
insb
jge
push
push
mov
add
leave
cmp
jnp
cmp
cld
outsb
hlt
fmull
adc
jno
insl
pop
aas
xor
mov
push
add
test
inc
push
jmp
jno
leave
sbb
stc
add
and
add
sbb
int3
adc
ficoml
or
into
addb
subb
mov
shll
pusha
insl
adc
mov
das
mov
inc
inc
ret
and
scas
adc
rcrl
inc
fdivs
fildll
mov
mov
push
bound
sbbb
or
je
pop
lea
xchg
push
outsl
mov
add
sbb
test
mov
sbb
mov
jns
stc
mov
es
pusha
pop
int
les
data16
scas
xchg
into
mov
jne
mov
and
fs
dec
pop
mov
fwait
insl
push
stos
imul
push
jno
mov
mov
ja
loope
fadds
scas
mov
or
sub
out
pop
dec
inc
or
xor
int
dec
in
pop
je
inc
mov
jnp
xchg
fwait
push
mov
ja
in
mov
test
testl
pop
fs
sbb
mov
jo
cmp
scas
movsl
sub
and
js
fstpl
inc
pop
insl
adc
and
enter
ss
out
xchg
inc
sbb
jge
lock
repnz
jmp
xor
imul
push
stc
scas
push
and
xchg
and
push
mov
xor
ret
divb
leave
aam
and
aaa
rcrb
cs
mov
and
add
fsubrl
fwait
xor
mov
daa
cmp
xor
or
sub
mov
pop
mov
jo
xor
inc
or
mov
push
inc
aas
inc
int
xchg
xlat
in
add
fs
xchg
in
std
repnz
pop
or
mov
push
sub
stc
inc
push
jne
or
push
add
jae
stos
out
cltd
add
xchg
fisttpll
cli
cmpsb
insl
dec
fimull
push
push
pop
negb
stos
cmp
mov
je
cmpb
js
popa
or
mov
sarl
sahf
xchg
dec
test
dec
gs
clc
mov
mov
inc
add
lock
adc
push
test
dec
cli
out
inc
and
mov
and
pop
lret
sub
mov
lahf
lock
psllw
and
js
sub
mov
pop
lret
mov
mov
imul
mov
add
scas
mov
test
jmp
pop
jge
push
mov
jmp
cmp
stos
mov
and
dec
mov
mov
pop
inc
pop
cmpsb
retw
enter
adc
out
and
call
clc
jge
pusha
fnsave
fs
in
push
inc
dec
ret
pushf
aaa
dec
pusha
test
mov
ret
add
in
fwait
dec
push
push
add
push
int3
mov
js
push
stos
cmp
sbb
adcl
xchg
cltd
sbb
adc
sti
stos
outsl
les
shl
es
mov
mov
xlat
sub
int3
fiadds
push
out
shll
pop
mov
sbb
hlt
repnz
jl
push
jo
mov
mov
sub
imul
and
ficoml
or
dec
add
stos
je
dec
add
pushf
and
inc
pop
aaa
mov
add
dec
arpl
pop
arpl
loop
mov
mov
aaa
inc
inc
retw
jmp
mov
push
loope
mov
xorl
mov
mov
loopne
adc
stc
xor
sub
fxch
int3
aam
add
fistl
lcall
clc
jns
pop
daa
inc
in
shrb
loopne
cmp
pop
dec
scas
cmp
mov
lret
cmp
adcl
sbb
outsl
fisttps
addr16
xchg
fstpl
ror
lods
int3
xor
pushf
xchg
or
data16
push
jb
xor
test
inc
or
sub
xor
hlt
rcr
into
xor
sbb
and
pop
xlat
sti
inc
test
dec
scas
push
sub
nop
adc
jbe
mull
sub
shl
sti
sub
inc
je
xor
push
push
ficomps
sub
aas
cli
addb
pop
rclb
add
adc
jnp
xchg
lods
pop
shrl
push
scas
cwtl
dec
test
int3
adc
addr16
scas
loopne
and
test
ret
addr16
lea
pop
aad
test
or
int3
mov
and
inc
mov
movsl
in
inc
ret
fidivrs
add
lret
scas
xor
mov
push
mov
dec
loop
insb
inc
icebp
imul
push
mov
jns
inc
jge
lods
dec
inc
sub
and
hlt
bound
xchg
xchg
ljmp
sub
xor
dec
cmp
pop
fsubs
out
lods
or
mov
dec
sbb
pop
dec
ror
out
and
xchg
dec
fdivrl
dec
jg
ret
xorb
mov
daa
test
aad
xchg
or
ja
in
sub
inc
test
cmpsl
stc
shr
int3
pop
fsubrl
clc
mov
xchg
mov
or
push
lock
push
cmp
in
stos
jecxz
sbb
lods
push
pop
ret
add
mov
out
mov
inc
pusha
into
mov
in
cmp
aam
cmp
inc
dec
test
mov
lret
ljmp
stos
jo
shll
int
ret
inc
jmp
jnp
dec
out
push
imul
shlb
testl
inc
or
popa
xadd
dec
aam
push
lahf
push
or
hlt
out
fildll
int
lds
test
lock
and
stos
xchg
lock
push
pop
push
jne
adc
ss
and
pop
xchg
and
stc
cmp
cmp
and
cmp
out
cld
jecxz
dec
add
dec
ds
mov
jmp
mov
jecxz
cmp
out
push
out
push
push
cld
sub
daa
xchg
dec
cmc
inc
repz
in
popa
sub
cmpsl
sti
mov
addr16
int
and
popa
inc
dec
xor
jb
push
lret
imul
sub
out
xchg
add
scas
call
lods
xchg
and
xchg
aas
cld
add
shlb
div
out
cwtl
and
cmp
shll
int3
lock
int3
mov
ljmp
aas
jge
mov
pop
jle
mov
stos
cmp
pushf
stos
push
int3
push
push
inc
push
stos
xchg
js
scas
lock
push
xchg
jle
push
fs
or
dec
divl
les
cmpb
pop
pop
mov
push
jge
pop
add
js
mov
and
xor
sahf
scas
sbb
ss
fwait
xchg
movl
ficoml
into
xor
mov
jns
sbbl
mov
xchg
jecxz
arpl
push
pop
movsl
add
int3
clc
mov
call
add
ficoms
cmp
jbe
jg
xor
and
xchg
lret
cmp
lds
stos
xchg
and
stc
jnp
jnp
cli
xor
mov
add
sub
sahf
jns
pop
imul
stos
and
pop
mov
pop
or
jae
cmp
insl
js
lcall
je
or
hlt
leave
adc
int3
fbstp
jmp
sub
cmp
sahf
iret
add
gs
or
jl
and
and
cmp
aas
push
cmpsl
and
insl
pop
and
insb
push
pop
mov
aas
loop
xor
pop
pushf
das
cmc
push
in
dec
loope
repz
adc
mov
mov
out
mov
push
pop
dec
and
pop
cmp
mov
mov
mov
lcall
jge
xchg
lock
iret
mov
push
xchg
repz
adc
mov
mov
sub
lret
inc
mov
mov
sarb
pushf
in
out
loop
add
dec
jae
and
mov
fs
clc
fs
and
ret
inc
js
in
push
call
pop
pop
daa
jno
jle
outsb
int3
adc
in
dec
out
or
cmpsl
shlb
dec
sub
stc
xor
pop
inc
jg
xor
repnz
mov
mov
imul
push
add
xchg
dec
hlt
push
jecxz
cltd
mov
cwtl
sar
call
cwtl
sbb
push
push
jno
aad
in
mov
and
mov
sbbl
fistps
add
fistl
aas
push
adc
ljmp
mov
pop
jns
lock
xor
pop
in
pop
push
icebp
dec
cli
imul
inc
shrl
mov
fstl
adcl
mov
cmp
lcall
mov
inc
inc
loope
test
dec
in
push
add
inc
insl
jl
dec
inc
fdiv
lcall
pop
dec
rclb
addb
js
inc
pop
dec
cltd
ffree
popa
pop
add
xlat
jge
cmpsb
lock
lock
sub
das
or
jge
icebp
cltd
xchg
cvtps2pi
icebp
mov
fwait
outsb
mov
fisubs
cmpb
mov
sub
jno
test
test
jbe
lods
jbe
stc
ret
cmp
inc
loope
loope
in
iret
jp
dec
cltd
mov
xchg
add
jge
scas
clc
xchg
xchg
leave
or
clc
ret
insb
clc
into
mov
rcrb
push
ret
ret
add
cli
cmp
icebp
or
mov
jmp
mov
adc
nop
add
sbb
sub
in
shll
std
fldenv
imul
push
push
xchg
adc
nop
out
mov
ds
int3
fs
dec
arpl
sub
lods
xor
inc
shlb
push
cmp
jle
repnz
push
or
lahf
adc
cmp
mov
jne
dec
fnstcw
inc
jmp
pop
rorb
mov
push
sahf
push
push
lds
sahf
nop
clc
aaa
adc
pushf
mov
outsl
xor
sbb
scas
adc
push
cmp
mov
scas
mov
mov
xor
insb
in
mov
out
std
dec
xchg
and
jl
dec
sub
mov
out
fistpll
dec
cmpsb
mov
gs
in
je
xor
stos
pushf
lret
in
cmp
or
shr
call
ret
and
repz
scas
and
jmp
jne
imul
cmp
xchg
and
dec
sub
insb
lahf
pop
sbb
and
sbb
mov
push
inc
iret
lds
xor
shl
and
cmpsb
xor
mov
cmc
pop
and
dec
out
jmp
push
stc
and
jns
leave
stos
xor
push
pop
cmp
push
fadds
pusha
or
aaa
out
fldcw
sahf
adc
fs
fsubr
xchg
xor
fwait
push
lods
add
inc
test
mov
inc
lods
movsl
sahf
cmpsb
data16
push
push
movsl
cmp
cmp
inc
xlat
std
mov
inc
mov
mov
aad
pop
mov
adc
and
pop
cmp
sbb
jb
adc
jno
adc
test
jecxz
pop
pop
jb
fisubrs
or
movsl
sub
jns
jg
into
jp
test
and
imul
xor
push
ljmp
loopne
sbbl
addr16
sub
lret
aaa
mov
lahf
xor
push
adc
mov
mov
lcall
pop
mov
fstl
xlat
xchg
lds
xorl
mov
aas
cwtl
add
jno
das
icebp
inc
sub
orl
fs
or
xor
push
jecxz
bound
pushf
mov
lcall
incb
gs
aam
dec
aam
icebp
jmp
out
xchg
cwtl
ret
sbb
or
jecxz
les
in
cmpl
lods
je
stos
adc
in
xchg
and
lahf
fnsave
cmp
jmp
push
rolb
rcrb
in
popf
test
cmpsb
bound
inc
dec
ret
incb
imul
xchg
sub
out
cmp
out
cmc
sub
push
mov
test
les
repz
pusha
jl
flds
and
pop
std
mov
dec
movsl
dec
sarl
jg
xor
pop
fistps
add
dec
orl
scas
ret
out
enter
xor
imul
movsl
popf
ficoml
stos
mov
lods
jmp
data16
dec
or
mov
sub
das
sbb
lock
aaa
dec
out
xor
mov
mov
dec
cwtl
stc
inc
das
add
arpl
inc
lods
push
xchg
sbb
in
addr16
aaa
add
sbbl
push
cmp
rol
push
push
cmpsb
in
fdiv
insb
inc
shl
mov
and
bound
cmpsb
cmpsb
mov
mov
lock
dec
mov
add
pop
repnz
arpl
stos
sbb
sbb
stos
push
adc
mov
mov
shll
push
scas
pop
pop
pop
xor
std
xor
dec
or
mov
or
adc
test
scas
lods
xor
mov
xor
insb
sbb
pop
stc
jmp
mov
sbb
fwait
outsb
mov
inc
cmpps
sbb
add
les
dec
cmpl
loope
sub
in
movsl
or
jp
repz
pushf
leave
aas
fdivrl
mov
mov
pop
test
add
jg
mov
test
cmp
mov
cmp
inc
inc
cmp
lcall
fmull
add
cmpb
mov
mov
or
cs
std
or
negl
nop
mov
call
push
lock
arpl
push
push
sub
pushf
jae
sbb
jle
lods
mov
dec
inc
or
push
mov
mov
loopne
sbb
out
daa
sub
test
loop
ret
out
stc
jl
les
dec
loop
idivl
xlat
sarl
add
jnp
ud1
or
mov
popa
add
dec
popa
in
lea
imul
fimuls
jbe
mov
cltd
flds
stos
fstl
jg
cltd
jle
adc
stc
pop
push
mov
mov
sti
xor
jne
dec
jmp
call
clc
sbb
pushf
mov
sbb
mov
mov
mov
fcompl
outsb
lret
dec
dec
cwtl
pop
xchg
or
push
jge
and
xor
in
and
jl
cli
test
pop
sub
aas
cmp
adc
sbb
adc
repz
jns
insl
dec
repnz
push
cld
mull
add
out
mov
sub
sarb
adc
pop
lcall
pusha
lds
inc
dec
mov
test
add
mov
xchg
cld
xchg
adc
cs
in
stos
movsl
roll
mov
nop
mov
jb
mov
or
mov
or
dec
cmp
out
out
pop
ficoms
inc
das
es
sbb
outsb
mov
fs
jns
cltd
push
or
aas
pop
pop
jp
pusha
fdivrl
fcoms
shr
sbb
enter
imul
dec
scas
push
in
mov
adc
sub
scas
out
mov
pop
adcb
scas
mov
sahf
shl
mov
sbb
push
inc
inc
xchg
mov
and
mov
pop
inc
subb
jnp
push
dec
mov
dec
mov
mov
pop
mov
push
int
cwtl
lcall
clc
test
lods
mov
dec
pop
add
loopne
addb
push
aam
out
jecxz
test
test
cmp
jbe
outsl
cmp
mov
subb
cmp
mov
lods
ja
daa
push
adc
inc
ss
into
fstpl
lods
outsb
lods
pop
adc
push
pop
or
fiaddl
jle
adc
xchg
call
pusha
sbb
fbstp
push
sub
cmp
push
mov
adc
test
mov
ret
mov
cmp
rcll
inc
xor
adc
mov
fwait
jmp
xor
in
pop
mov
pop
aam
jmp
fiadds
cli
or
dec
mov
aaa
jbe
cli
out
cmc
loope
push
dec
mov
icebp
jg
int3
movsl
mov
icebp
dec
push
xchg
out
inc
mov
inc
lock
jno
xor
inc
scas
test
jbe
pusha
lcall
or
sbb
enter
repnz
pusha
ja
pop
or
sub
xchg
frstor
jnp
or
jb
push
mov
fstps
jae
cmp
mov
xor
adc
xor
xchg
ret
lock
jmp
in
push
das
into
adc
ret
pushf
pusha
sbb
imul
pop
stos
gs
inc
add
lods
cmpsb
sub
int3
fstps
jl
and
int
mov
jmp
fisttpl
aas
shr
xchg
sti
cmp
push
loope
xchg
xchg
fistpl
outsb
push
push
imul
mov
jge
ret
out
lea
jbe
repnz
mov
popa
arpl
aam
xchg
bound
jge
xor
pop
test
mov
negb
lret
dec
fdivrl
jp
loope
mov
lahf
ja
pop
imul
pop
imul
inc
or
pushf
incb
das
setns
push
jge
mov
fcomi
movsb
fmull
jne
mov
jnp
gs
xor
push
dec
es
and
mov
scas
lahf
out
mov
mov
movsb
pop
adc
mov
jb
stos
pop
pushf
xor
jne
sub
and
test
push
movsl
push
imul
je
js
adcb
gs
xor
fnstcw
jg
push
das
ja
sub
clc
fucom
jmp
xchg
lods
add
sub
sbb
ret
fidivl
push
xor
outsb
fwait
pushf
mov
mov
mov
out
jno
sbb
les
jge
int3
cltd
rcrb
or
repz
into
pop
aas
dec
inc
in
pop
out
xchg
test
popf
popa
fldcw
repz
sbb
xor
arpl
int3
hlt
add
lretw
sbbb
daa
not
ret
jb
mov
mov
or
outsb
pop
fisubl
jne
rcrl
fistl
lods
bnd
jp
scas
roll
out
or
gs
les
das
fisttps
cmp
mov
imulb
push
cltd
xor
ljmp
and
js
mov
loope
std
sub
fmulp
or
mov
fnsave
push
mov
jae
movsb
dec
fiaddl
repz
iret
enter
imul
ds
int
and
or
pushf
or
icebp
mov
cmpsb
cmpsb
aas
jge
mov
mov
test
adc
jl
loope
rorl
adc
outsb
in
gs
push
mov
psrlq
ret
aas
shrl
stc
repnz
adcb
adc
jns
jl
fmuls
jae
lock
jecxz
icebp
or
int
or
cmp
ds
adc
out
repnz
dec
mov
in
sub
push
pop
inc
mov
fldl
xlat
xchg
adc
sub
mov
push
sahf
test
mov
mov
cli
movsb
sbb
push
mov
das
mov
jnp
inc
decl
scas
cli
sbb
sub
fadd
and
add
lea
mov
jge
mov
mov
sbb
sbb
or
inc
mov
dec
pop
xor
xchg
lea
in
lods
sahf
dec
out
rolb
xchg
in
data16
sub
testb
out
mov
into
jo
popf
adc
inc
shrl
lret
add
mov
mov
test
test
sub
stc
incb
mov
fisttps
push
mov
sub
xchg
sbb
add
arpl
inc
shl
mov
push
mov
insl
pop
mov
dec
jb
int
xchg
imul
ljmp
out
jb
call
sbb
lock
in
into
jle
pop
and
push
cli
rorl
sbb
sub
pop
rcll
jbe
or
pop
push
inc
mov
insb
sub
pop
imul
jmp
mov
mov
pop
mov
aad
add
xor
andl
jle
test
nop
out
jp
mov
pop
ja
insb
inc
mov
orl
jnp
mov
addr16
xchg
sarb
negb
js
add
dec
mov
sub
and
imul
aad
cs
xchg
fcomps
mov
clc
out
mov
pop
loopne
and
insb
out
mov
lods
push
dec
cmc
lods
adc
adc
or
and
mov
iret
es
fidivrl
or
pop
pop
sahf
jo
jne
js
movsb
lock
lret
daa
out
jo
pop
insl
cmp
xchg
sbb
jno
mov
xchg
lock
leave
and
cmp
es
in
mov
push
xchg
cmp
jns
loopne
lret
adc
adc
pop
call
mov
fisubs
sbb
adc
vmwrite
mov
aam
lea
dec
outsb
aaa
mov
pop
cmp
inc
add
push
adc
push
lcall
jl
pop
mov
sub
iret
leave
popa
xchg
mov
adc
fistpl
dec
dec
jno
gs
testl
mov
out
jno
mov
sbb
inc
jno
std
xor
inc
adc
mov
sub
fadd
dec
mov
cmc
loope
jnp
nop
hlt
mov
in
out
xchg
std
pop
testl
cmp
jge
pop
inc
mov
pop
mov
outsb
aaa
enter
cmp
pop
ret
movzwl
cmpl
xchg
inc
aaa
inc
lods
push
js
xor
inc
lret
cmp
aam
in
mov
and
fcmovnb
insb
or
jmp
xchg
mov
pusha
les
xchg
dec
divb
arpl
test
mov
xor
cmp
and
mov
xor
xchg
mov
jl
mov
out
lea
jne
and
cmp
cmp
nop
cltd
mov
hlt
xchg
or
mov
xchg
xor
mov
in
test
test
cmp
outsl
jmp
fildl
cmpb
mov
test
jbe
cmp
xchg
mov
jge
decl
mov
sarb
push
test
mov
mov
sub
mov
push
mov
push
cmp
rclb
dec
or
mov
push
ds
sbb
fs
popf
pop
repz
push
in
dec
inc
jb
sbb
cltd
stc
mov
xor
xchg
mov
or
mov
notl
das
stc
jae
arpl
pop
sub
stc
movsb
icebp
jp
icebp
adc
mov
jl
jmp
add
imul
aad
or
loope
movsb
sbb
test
and
cmp
adc
mov
lahf
add
jle
push
sahf
xorb
fstpl
inc
add
shlb
dec
mov
inc
cmpsl
out
pop
inc
movsl
into
jmp
in
inc
push
xchg
sub
mov
out
clc
xchg
dec
ds
mov
clc
mov
cmp
enter
jmp
or
orl
push
lods
fldlg2
dec
fimuls
ss
mov
outsl
movsb
dec
sbb
std
out
sbb
arpl
cmpsb
mov
mov
into
stc
iret
mov
xchg
das
mov
leave
fcmovu
ds
jl
bnd
cmp
out
pop
push
pusha
dec
dec
jp
xor
cmp
and
jbe
add
sbb
inc
sahf
cltd
lret
mov
andl
mov
fbld
das
shl
and
pop
test
clc
lock
mov
adc
cmp
xchg
add
je
push
adc
inc
fcom
mov
mov
xorb
mov
push
call
cmpsl
fildl
mov
icebp
cmp
mov
pop
lock
mov
cmp
outsb
cli
mov
aam
lds
scas
jg
shll
adc
or
cmpsl
call
jbe
mov
jmp
jno
fldenv
mov
nop
bound
mov
pop
test
dec
push
jb
ds
dec
xchg
xor
repnz
jnp
pop
mov
xchg
dec
dec
ret
out
add
cmp
aaa
insb
push
sbb
pop
jecxz
push
into
dec
pop
fnstenv
jbe
jmp
pop
call
push
mov
hlt
xor
mov
mov
inc
add
sqrtps
inc
sub
jg
push
fidivrs
sbb
adc
gs
daa
jno
in
pop
push
clc
push
or
ljmp
push
mov
dec
int3
cld
ja
pop
popf
test
mov
sub
jle
adc
or
mov
sahf
test
rcl
leave
xchg
jg
fisttpll
and
sbb
dec
test
sub
ss
adc
sti
push
mov
imul
dec
call
push
lods
stos
fwait
pop
pop
pusha
aaa
pop
push
pop
pop
add
sbb
in
int
lock
cwtl
fldenv
lahf
shlb
lods
in
ret
push
fimull
das
xor
orps
inc
jl
and
inc
pop
xchg
pusha
loope
or
roll
outsb
pop
jle
mov
rcrl
cmp
popf
xchg
push
fwait
and
sbb
jne
sbb
push
xchg
ss
jg
inc
mov
dec
cltd
xor
cmp
ljmp
in
mov
jnp
jmp
adc
icebp
nop
mov
iret
ret
movsb
testb
mov
mov
scas
inc
xor
adc
pusha
loopne
dec
mov
mov
stc
lods
mov
jns
add
cmp
int3
lods
mov
dec
shl
aaa
sbb
out
mov
sbb
jae
xchg
mov
jge
push
pushf
dec
sub
mov
sub
lock
and
mov
es
mov
scas
pop
data16
mov
jp
cmp
and
in
xor
popf
jb
jge
add
daa
dec
or
push
sub
dec
outsl
out
mov
iret
cmp
add
jmp
cltd
push
push
decl
jge
cmp
mov
xchg
dec
or
pop
xlat
fwait
out
es
add
pusha
test
aad
cld
lods
dec
jne
inc
xchg
inc
and
fidivs
xchg
fidivrl
xchg
jl
fs
cltd
es
mov
push
fadd
or
jbe
shll
lea
mov
pop
int
lret
lock
cmpsl
push
jb
das
pop
pop
xor
mov
inc
jbe
pop
daa
sbbb
pop
inc
push
mov
insl
lret
call
movsb
mov
xchg
call
cltd
scas
mov
and
inc
lods
xchg
mov
popa
xor
pop
sub
jo
mov
jle
sbb
inc
mov
lret
pushf
fucomi
lds
loope
xchg
pop
xchg
popa
xor
movsl
or
and
add
push
movzwl
outsb
cmpsb
push
add
aas
pop
mov
add
dec
jne
jecxz
sbb
or
push
in
scas
push
mov
ljmp
xchg
sbb
ror
inc
pop
es
pop
push
sub
adc
stos
xchg
shlb
jb
jns
and
jae
push
add
rclb
mov
roll
into
cmp
testl
rcrl
cwtl
dec
xchg
lret
add
roll
pop
or
clc
fdivl
or
or
in
mov
jl
lds
xchg
mov
jb
dec
cmpsb
jl
cs
or
pop
cs
adc
lods
jb
movsb
pop
cmp
xchg
mov
in
fidivrs
push
add
mov
test
sub
mov
mov
lock
pop
dec
aas
cmpsb
sbbb
add
daa
mov
gs
push
adc
in
or
mov
fiadds
lss
sbb
clc
bound
xlat
cld
es
xlat
out
jo
adc
enter
mov
das
cmp
jecxz
mov
cmc
lcall
and
nop
sbb
out
cs
inc
and
scas
bound
neg
sub
mov
xchg
out
inc
sti
fst
faddl
sub
lahf
xlat
jo
inc
sub
filds
shl
lahf
or
addl
xorb
bound
popa
data16
pop
fildl
inc
mov
xor
adc
push
xchg
bound
sub
shl
int
sbbl
adc
mov
and
aaa
sbb
cmp
lcall
push
pop
xor
or
rolb
push
and
inc
push
cmpsb
das
adc
jp
cmpsb
jl
and
mov
lea
mov
push
fs
or
xchg
bswap
js
test
cld
dec
mov
or
jmp
mov
aaa
aad
loop
push
movsl
cmpsb
mov
movb
movl
cmp
adc
loope
jno
inc
enter
mov
arpl
add
arpl
inc
sub
xor
sub
das
mov
xlat
mov
lea
enter
inc
pop
rclb
test
rorb
xor
cmp
rolb
dec
fwait
pop
cmp
das
mov
std
aad
lock
mov
cmp
push
cmpsl
divl
pusha
out
lahf
jno
sub
mov
lds
sub
sar
ret
outsb
decb
mov
movsb
mov
push
and
sub
mov
xchg
and
jl
and
out
jbe
sub
fisttpl
lahf
jns
aaa
mov
mov
pop
frstor
pop
popf
loopne
je
mov
pop
loopne
dec
int3
bound
xor
dec
rolb
add
stos
movsl
mov
in
pop
pop
or
popa
je
cs
stc
adc
cmpsb
paddq
in
xor
leave
sub
mov
pop
sbb
pop
insl
or
mov
and
shlb
stc
inc
or
cwtl
sahf
add
ljmp
push
and
dec
rolb
push
or
pusha
lea
popa
fcmovbe
test
lock
scas
repz
and
xchg
or
xchg
imul
ret
inc
ret
mov
scas
add
es
in
mov
pusha
cld
push
jo
int3
cmp
push
popa
ror
fldcw
sbb
insl
mov
in
xchg
mov
lret
mov
jle
mov
jo
inc
xchg
in
xchg
out
in
xor
mov
push
rcrl
pushf
popf
shlb
stos
lods
lods
stos
inc
push
jb
mov
jbe
jne
sub
sbb
bound
adc
loopne
pop
iret
ja
mov
hlt
mov
push
push
mov
int
inc
cmp
fcomps
aam
and
movb
jne
inc
sub
popf
pusha
dec
fidivrl
sub
mov
add
pop
push
or
int3
or
int3
and
push
jbe
shlb
dec
aam
push
fnstsw
sti
ret
sbb
xor
sbb
hlt
dec
mov
andl
xchg
jecxz
pop
xchg
and
shlb
push
cwtl
jmp
popa
jl
xchg
cmp
fidivs
jns
pop
push
aad
movsl
and
mov
jg
push
bound
ret
jbe
lret
stc
cmp
mov
test
pop
mov
push
ja
dec
lock
js
xor
outsb
pop
lea
in
sbb
jle
add
xchg
pop
xchg
mov
mov
sbb
mov
jp
pand
mov
cmp
scas
cmp
jns
aas
add
jg
or
lea
clc
jbe
icebp
mov
sub
roll
mov
int3
movsb
sub
jno
mov
into
test
sti
clc
or
pop
pop
ret
insb
outsl
fldt
jmp
fdivl
xchg
aad
mov
inc
int3
push
je
jecxz
ss
popa
and
stc
out
clc
push
movsl
test
sahf
sbb
push
jp
adc
dec
add
push
or
jnp
and
sti
fidivrl
insb
or
cmp
pop
cmpsb
adc
mov
fisttps
jbe
repz
push
dec
or
imul
std
shll
lcall
popf
sbb
rclb
scas
pcmpgtd
xchg
mov
or
add
pusha
jne
mov
add
add
fisubrs
sar
mov
and
xor
sbb
xchg
fldcw
cmp
inc
pop
push
or
cmc
mov
cs
lahf
push
mov
iret
test
dec
mov
ror
iret
mov
pop
ja
add
jp
mov
pop
mov
enter
mov
lret
fwait
loop
loopne
inc
pop
inc
sub
arpl
push
pop
mov
lahf
adc
jno
xor
fldl
fnsave
repz
jle
xor
inc
enter
imul
adc
dec
out
fistps
add
imul
or
mov
inc
scas
fidivl
mov
cmp
add
dec
out
popa
pop
lods
adc
sbb
xchg
fcmovnb
movsb
jp
pop
inc
test
divb
movsb
out
jno
push
xchg
ss
ret
lret
and
pop
shll
outsb
popa
stc
bound
xchg
pop
les
out
lods
mov
imul
adc
je
sub
push
add
stos
in
lea
test
mov
mov
or
mov
add
andl
lcall
rcrb
adc
sti
outsl
rcl
addl
imulb
movl
incl
mov
sbb
jge
enter
mov
xlat
bound
mov
inc
stos
pop
nop
out
lret
cmp
xor
mov
test
popf
mov
mov
add
out
sbb
sub
sti
jae
or
insb
js
sub
inc
fs
rclb
pmuludq
dec
outsb
mov
and
mov
dec
pop
shll
stos
clc
xchg
or
push
push
in
cmp
push
movsb
push
mov
out
imul
xlat
push
xchg
mov
insl
out
imul
sub
inc
stos
xchg
or
cmp
out
pusha
jp
mov
sbb
outsl
xchg
mov
jnp
popf
test
sarl
pop
mov
inc
fwait
jno
cmp
or
int
sub
xchg
rcll
shrb
repz
loope
cmpsl
dec
cs
rclb
std
pushf
adc
sar
ret
into
sbb
cltd
mov
lock
or
xor
stc
mov
in
cmp
mov
sub
add
mov
dec
jnp
jl
dec
jbe
insl
xchg
into
leave
sahf
adc
ja
insl
in
xor
dec
ds
dec
test
pop
gs
pop
fildll
arpl
inc
xchg
lcall
jge
into
mov
loop
test
rcll
dec
xor
mov
dec
jmp
mov
subb
xchg
pop
xchg
fldcw
stos
ljmp
insb
out
aas
pop
iret
int
adc
lds
cmc
daa
xchg
inc
jne
jo
mov
pop
sar
fsubrl
mov
mov
inc
add
inc
repnz
cmp
xor
imul
dec
push
xchg
cmp
cltd
adc
mov
or
xorb
adc
jno
lahf
xchg
push
popa
sbbb
rol
test
sub
xchg
aad
cld
hlt
ret
mov
fldl
sub
sbb
outsb
cli
jecxz
test
push
mov
mov
sub
mov
movsb
outsl
cwtl
jg
popa
movsb
mov
fdivrl
cmp
or
pushf
rol
rorl
cmp
iret
xchg
divb
fisubs
sbb
pop
movsb
mov
pusha
adc
fwait
cmp
rclb
sub
icebp
insl
xchg
ret
mov
btc
out
adc
cli
imul
sbb
xchg
mov
inc
fsubrs
jnp
mov
inc
push
mov
enter
lcall
jecxz
dec
xor
xorl
push
dec
xlat
jle
dec
xchg
or
cmp
xlat
lods
les
std
xor
aas
sub
addr16
js
data16
nop
dec
dec
and
pop
adc
mov
lea
test
mov
rol
adc
push
xor
aas
inc
shl
push
fsin
sub
mov
or
cmp
das
xchg
sbb
ds
test
and
mov
sub
pop
jmp
inc
sub
inc
add
add
movsb
adc
mov
sbb
dec
shl
dec
aaa
adc
sub
ret
loopne
pop
inc
or
pop
push
bound
lods
fisubrs
jl
xchg
or
and
repz
or
inc
mov
mov
nop
inc
fisubrl
pop
inc
pop
xchg
outsb
mov
popa
cmp
mov
cltd
loope
mov
std
or
loope
outsb
xor
add
ficoml
cmp
ja
xor
repnz
sub
adc
test
pop
int3
jp
pop
ficoms
and
mov
lods
mov
cmpsb
inc
das
pop
shll
testl
cmp
push
inc
lcall
or
lret
and
insl
pop
xor
emms
adc
je
sar
cmp
lret
stos
sub
aas
int3
dec
rolb
push
push
sbb
fisttps
push
inc
in
test
jp
pop
fbstp
add
mov
rcrb
push
fwait
push
pushf
jo
daa
pop
cmp
arpl
scas
xchg
mov
add
pushf
dec
gs
mov
xchg
add
sbb
and
push
mov
jbe
lret
mov
mov
dec
push
dec
jb
cmp
inc
test
cmp
dec
aaa
jo
inc
jle
pop
jbe
rorb
mov
cmp
adcb
sbb
shlb
sbb
repnz
cmovl
aaa
testb
add
and
aad
je
ret
mov
pop
popa
mov
movsl
or
scas
stos
cmp
ret
mov
rorb
mov
mov
fwait
jge
in
lret
dec
ret
mov
dec
mov
or
js
pop
push
gs
fsts
nop
sbb
fistps
bound
mov
add
pop
push
mov
pop
fs
mov
test
repnz
mov
jle
jmp
push
jne
dec
jge
dec
xchg
or
fdivrs
xor
push
mov
data16
dec
repnz
sub
adcl
test
movsb
push
jo
mov
add
test
mov
xlat
push
xchg
insb
cmpb
sbb
pop
neg
loopne
jmp
loope
iret
lret
test
sbb
mov
push
out
cld
aas
mov
cli
inc
mov
and
iret
int3
sub
mov
mov
xchg
adc
mov
hlt
push
mov
loop
dec
hlt
xchg
lea
jmp
mov
sub
lret
cli
data16
fucomip
call
push
and
lret
xchg
pop
xor
insb
into
daa
mov
repz
pop
insl
out
inc
ret
in
dec
jne
push
pop
imul
inc
iret
and
repz
dec
pusha
and
jge
pop
out
test
jl
mov
pop
jp
fmull
andb
cmp
sbb
mov
cmp
imul
xor
notb
mov
sub
cs
nop
adc
mov
bound
gs
sub
pop
dec
dec
lea
mov
fbld
test
mov
into
jae
pusha
xchg
mov
pop
fidivs
adc
add
mov
sbb
mov
lcall
xor
xlat
pop
insl
mov
dec
or
cwtl
xor
xor
cmpsl
lahf
pop
insb
or
or
jmp
shll
addl
call
or
sahf
push
mov
lahf
xchg
jmp
pop
nop
xchg
jo
lods
loop
xor
ret
cwtl
sub
cmp
in
rcll
xlat
jecxz
cld
cmp
cmp
data16
inc
sarl
cmpsl
sbb
into
mov
sbb
fisttpl
test
ret
sahf
lods
popf
ret
stc
iret
lds
jne
inc
loop
mov
imul
clc
sbb
stc
cmp
lods
push
roll
xchg
or
out
inc
push
push
shlb
aad
lret
sub
cmp
loop
ret
add
jp
aas
dec
pop
in
push
jno
or
movsl
push
jne
cmp
or
dec
out
addb
pop
dec
ja
fs
sbb
add
into
movsb
shll
fmul
cmpb
andps
mov
subl
jns
jp
push
lods
aam
sbb
cmpsl
in
sbb
test
stos
mov
pop
mov
mov
adc
add
mov
mov
jle
pop
xchg
out
or
push
sub
xchg
sbb
inc
fwait
enter
rcll
xor
cmp
add
sbb
in
cwtl
sub
push
jp
adc
cmpsl
fdivl
xchg
imul
pop
ljmp
cwtl
mov
and
mov
int
push
lea
gs
cmp
jbe
sarb
lods
gs
hlt
pop
push
jne
aad
call
pop
fnstenv
inc
std
inc
ret
fcmovnu
xlat
mov
add
aad
loope
xchg
mov
int3
push
js
fs
insb
mov
push
add
aam
movsl
cmpsb
ror
lret
and
adc
shll
enter
and
mov
cld
and
loop
inc
stc
stc
cs
and
add
scas
cmpsb
ja
cmp
fs
outsl
mov
lea
xchg
cmp
call
call
or
stos
std
frstor
cmp
cvtps2pi
cmc
test
stos
mov
mov
sbb
push
ds
add
shrb
xlat
leave
xchg
jge
or
gs
and
mov
scas
pusha
out
jne
sub
lcall
mov
shrl
or
cmc
sbb
fistl
mov
cwtl
pushf
sarb
mov
and
jle
mov
repz
xlat
movsl
cmp
sbb
stos
stos
jno
movsl
int
or
mov
lea
daa
sbb
add
scas
addl
push
xchg
cmp
adc
sbb
fs
imul
and
repnz
out
fistl
mov
add
xchg
xor
sub
dec
or
mov
xchg
dec
cmp
push
add
push
xchg
pop
lds
sbb
cli
mov
dec
pop
or
mov
push
sbb
or
insl
pcmpgtw
pop
push
aas
iret
int
push
or
mov
mov
test
and
xlat
xor
inc
adc
aam
iret
in
pushf
xchg
in
inc
xor
insl
outsl
push
jl
and
or
pop
push
cmp
mov
xchg
dec
mov
rclb
inc
ds
cwtl
popf
and
adcl
pop
xchg
inc
sahf
pop
jae
das
pop
jo
cmp
insl
fadds
cmp
push
pop
aam
lods
je
ret
fisttpll
sub
mov
rcl
push
outsl
jnp
sub
cli
sahf
xchg
je
mov
pop
push
inc
loope
xchg
int
scas
sub
mov
je
dec
adc
push
pop
sbb
mov
add
aad
jmp
lcall
movsb
aad
les
loopne
dec
jno
jg
xchg
push
shll
dec
xchg
and
repz
stos
jne
push
rclb
jmp
pop
pop
or
pushf
mov
stos
jnp
xor
les
mov
xchg
addr16
in
lods
sti
lret
imul
jbe
ja
mov
loopne
push
push
xor
cwtl
scas
push
xor
push
mov
jb
xor
cmp
loop
xchg
jle
xor
push
mov
pusha
or
insl
and
or
fimuls
ds
popa
je
test
sbb
adc
dec
fucom
sub
mov
ds
fwait
mov
daa
out
push
aaa
xchg
mov
nop
hlt
xor
stos
pop
sbb
lcall
xchg
int3
daa
mov
sub
push
adc
out
xor
jle
dec
mov
dec
fsubp
sub
cmp
xchg
fnstsw
das
sbb
push
es
fidivl
add
jecxz
imul
xchg
jle
and
scas
mov
xchg
loopne
push
mov
mov
mov
xchg
aam
les
popa
int
push
popw
cwtl
pop
stos
test
add
lds
push
and
imul
mov
jbe
mov
or
dec
popa
stos
push
out
and
push
hlt
cltd
enter
jg
les
pop
inc
pop
xchg
inc
sbb
aaa
mov
xchg
sbb
push
imul
std
jge
mov
xor
in
sub
add
leave
push
dec
mov
mov
call
xchg
jnp
ds
loop
js
rclb
ja
cmp
xorb
jl
lea
bound
hlt
jge
bound
fcompl
dec
or
or
pop
xor
mov
mov
inc
jne
xchg
cmp
outsb
mov
and
imul
ds
scas
out
inc
jl
iret
xchg
mov
xchg
gs
mov
ds
mov
inc
neg
xchg
cmp
loope
add
stc
and
imul
imul
xchg
leave
push
aas
sbb
mov
ret
dec
fwait
dec
ror
dec
mov
mov
fsubrl
mov
mov
sub
jecxz
cmc
pop
sub
test
andb
test
out
push
sbb
fmul
cmp
ja
sahf
imul
push
movzwl
lret
call
mov
jp
pop
ja
dec
outsb
mov
hlt
jmp
and
outsl
add
or
shll
into
rorl
shll
into
pop
xor
sbb
enter
aad
cmpsl
or
jae
dec
in
fs
sbb
mov
add
movsb
movsl
stc
pop
jbe
xchg
mov
lcall
in
or
ljmp
aad
jmp
ljmp
aam
xor
ja
inc
int
xchg
or
fiaddl
mov
mov
lock
iret
les
pop
xchg
dec
push
pusha
stos
and
hlt
mov
fsubrp
sarb
jmp
and
sub
hlt
bound
push
sbb
cmpsl
fwait
enter
insb
mov
test
xor
cmp
pusha
idivb
lret
pop
sub
orb
xchg
mov
cltd
adc
enter
xchg
in
cmpl
imul
mov
scas
push
mov
and
out
aam
dec
sbb
jp
popa
lds
in
test
test
inc
push
and
push
sub
push
in
aad
repz
xchg
mov
inc
xchg
xorb
ja
repz
or
xlat
mov
mov
insl
push
fisubrl
leave
cwtl
test
pop
xchg
fwait
jno
stos
push
lret
sar
shll
pop
and
push
pop
or
pop
jo
push
xlat
pop
ds
mov
andb
sub
cltd
ret
pop
jl
cs
mov
add
sbb
out
push
cmp
test
neg
mov
mov
vpmacsdql
enter
mov
not
cli
pop
sub
mov
push
imul
push
dec
push
ljmp
out
sbb
pop
jp
aaa
dec
xchg
or
call
dec
dec
ds
mov
or
or
shlb
sbb
notb
test
int
imul
sbb
fldl
cmp
lret
lock
out
rcrb
sahf
cld
rol
hlt
shr
sub
outsl
mov
inc
idiv
jb
lods
jl
sbb
add
jle
push
fcoms
mov
sub
sub
sbb
sbb
mov
arpl
jne
filds
push
add
jbe
xchg
rclb
aam
outsl
inc
add
jb
pop
int
pop
or
inc
add
and
subl
mov
clc
fwait
cld
lahf
enter
sub
insl
int3
push
dec
pop
pop
ja
inc
jp
and
sub
pop
push
jecxz
nop
decl
push
iret
outsl
sub
cmp
and
mov
inc
fidivs
mov
add
test
test
sti
cli
push
sub
add
cs
add
jne
inc
push
lret
fdivrs
aaa
addr16
int3
aas
and
aaa
cmp
inc
xor
repz
movsl
mov
js
mov
adc
gs
push
dec
lcall
out
and
fisubl
mov
bound
std
enter
ljmp
insl
imul
adc
and
js
js
and
xchg
adc
sahf
in
cmc
cld
insl
xor
xor
stos
scas
cmp
dec
pop
loopne
mov
mov
sub
mov
inc
jne
rol
mov
inc
stos
inc
shlw
push
adc
xor
scas
test
push
or
shll
xor
cmp
xchg
jne
jnp
and
sub
jg
pop
lcall
mov
test
adc
ud1
js
adc
rolb
das
mov
adc
lock
repnz
lods
in
cmp
xor
sbb
inc
mov
mov
popa
ljmp
movsl
mov
int3
lods
mov
es
imul
in
mov
add
fisubs
test
mov
inc
xchg
stos
test
push
mov
push
cmc
cmpsl
pusha
ret
sbb
push
dec
movsb
cmpsl
into
sub
pop
or
and
xchg
cmovl
dec
call
mov
or
add
popf
cmp
enter
dec
dec
jle
xchg
and
mov
jae
movsl
mov
mov
cmc
int3
jae
cmpsl
in
imul
mov
xchg
xchg
aad
int3
mov
in
insl
xlat
add
mov
xchg
pusha
xchg
fcmove
pop
xchg
fdivs
jbe
xor
imul
xor
dec
xchg
jo
lret
lods
push
in
das
stos
push
mov
pop
stc
jno
jnp
dec
mov
xchg
cli
mov
dec
clc
leave
cpuid
inc
jns
test
inc
cmp
push
out
nop
cs
incb
push
clc
out
or
jo
or
shl
test
push
in
rclb
or
loope
dec
xor
popa
clc
das
outsb
cld
ret
mov
jecxz
and
sub
lret
scas
push
jp
mov
lahf
or
stos
jl
mov
test
daa
imul
out
test
aad
fisttps
imul
adc
cmpsl
cmp
clc
aaa
es
push
add
mov
jne
add
add
cmp
ret
push
int3
sahf
add
movsb
sahf
test
xchg
mov
pop
adc
test
cmp
ret
xchg
pop
mov
mov
and
cld
fldt
jp
push
dec
mov
add
sar
xorb
stc
xchg
adcb
inc
adc
pop
pop
hlt
ret
daa
fmulp
jbe
out
xchg
out
pop
icebp
mov
push
dec
jae
adc
in
mov
ljmp
sbb
movsb
loop
into
mov
mov
lds
clc
xchg
fcmovnbe
push
dec
enter
adc
sbb
xor
cmpsb
loopne
xor
sub
push
xlat
std
jo
xchg
repnz
inc
into
mov
dec
orb
addb
repz
leave
jns
push
jne
mov
xchg
les
push
cmc
mov
push
call
pushf
insb
cld
out
ss
mov
dec
xor
jle
std
outsb
mov
inc
push
mov
lds
pop
dec
jae
cmp
jg
rol
fwait
mov
in
fwait
and
lret
clc
push
xor
xchg
inc
jge
jp
and
lret
mov
lock
gs
jo
adc
lret
fldcw
into
repnz
fs
nop
xchg
mov
scas
inc
les
mov
cli
lea
dec
in
rclb
test
aas
adc
stos
sahf
cmc
mov
cmpsb
inc
dec
outsl
mov
iret
xor
shlb
inc
mov
mov
pslld
jle
dec
fstps
pop
push
fidivrl
mov
testb
inc
ja
shlb
pop
sbb
stos
sbb
pusha
aam
mov
dec
pop
mov
push
movsb
jl
movsb
js
and
in
popa
dec
adc
aad
test
dec
xchg
or
stc
push
std
jmp
out
sub
mov
out
add
lret
cmp
aaa
add
rorb
hlt
mov
sbb
lret
dec
xor
or
cmp
xor
and
jnp
loope
add
mov
fsts
sub
adc
loope
jge
inc
dec
add
pop
cmc
jo
mov
jp
adc
lods
ljmp
cmp
cmp
iret
test
cmp
bound
scas
mov
fisubl
mov
repz
repz
clc
mulb
stc
aad
imul
push
dec
andl
mov
sub
fnstsw
cwtl
in
das
jg
inc
xchg
cmp
pop
jg
std
stc
pop
push
mov
pop
jmp
jne
lds
lea
jecxz
and
or
inc
push
mov
repz
cld
sbb
lds
xlat
rorb
hlt
jge
adc
pop
xchg
leave
xor
add
jmp
sub
ds
fiaddl
ds
cmpsl
and
jns
or
sub
pop
xchg
sub
jg
aad
fldln2
aam
or
mov
mov
ret
icebp
popf
inc
aam
out
test
jg
mov
stos
loop
or
in
gs
cli
mov
mov
jl
sub
xchg
test
pop
stc
rcl
jge
sbb
jnp
jg
and
test
aam
mov
int
insb
popl
dec
lret
int
sarl
movsb
daa
cmp
pop
and
pusha
sbb
jl
aad
mov
xchg
xchg
ss
add
test
dec
jl
inc
fidivrl
fucom
pop
insb
es
xlat
mov
daa
stos
mov
add
call
dec
inc
dec
les
mov
push
out
add
out
mov
jmp
jbe
push
sub
mov
push
jae
ror
movsl
pop
rcrl
cmp
loop
stc
cld
out
push
adc
push
clc
push
movsl
leave
pop
jno
out
jle
stc
nop
aaa
repz
pusha
popa
fs
movsl
leave
scas
add
es
add
push
mov
sub
iret
hlt
mov
jg
and
fldcw
dec
leave
sbb
xor
cld
mov
push
push
adc
loopne
sbb
rcl
jns
insl
pop
sub
adc
imul
mov
or
js
xor
mov
dec
je
imull
and
es
in
out
cmp
aas
lock
int3
adc
rcll
std
adc
bound
jl
mov
dec
push
in
bound
cmp
shrb
xor
lods
pop
add
sbb
push
scas
sub
popa
mov
or
lret
rorb
cwtl
and
fildll
aaa
sahf
fidivs
out
bound
stc
push
ds
fwait
loopne
push
jne
sub
cmp
idivl
stos
int
dec
sub
icebp
js
rcll
mov
lock
mov
imul
test
inc
pop
or
call
add
jge
or
pop
loope
icebp
cmpl
sbb
das
fwait
in
ret
inc
mov
das
outsb
adc
xchg
lahf
js
sbb
lea
add
cli
sub
jns
ja
and
jae
mov
fimuls
fiadds
dec
and
cmp
pusha
sub
cmp
mov
xor
test
gs
adc
stos
lret
add
icebp
inc
pop
adc
mov
fsubrs
fmull
xor
test
and
lods
jb,pt
dec
sub
cwtl
xor
iret
data16
sbb
pop
sbb
shll
jbe
inc
icebp
test
lds
ja
sub
leave
in
mov
test
adc
xchg
pop
stos
aad
sbb
neg
xor
fisttpll
sbb
imul
lods
outsl
inc
mov
data16
cwtl
inc
cmp
pop
lock
mov
into
jno
push
dec
and
jg
cmp
insl
dec
ffreep
and
lret
fimuls
pop
loop
out
cli
mov
js
leave
lods
lret
or
mov
dec
jb
call
jmp
add
out
out
push
ret
inc
or
adc
push
stos
fiadds
mov
clc
push
in
or
aas
fs
je
sub
mov
mov
mov
xor
jae
insb
xchg
sub
inc
in
push
mov
insb
or
push
loope
nop
outsb
push
les
cli
add
dec
lea
sbb
das
add
pop
into
leave
push
inc
dec
adc
jns
adc
jae
sub
andl
fisubrl
lods
sub
dec
mov
jecxz
mov
test
sub
cmp
xchg
int3
or
and
xchg
clc
inc
jecxz
push
cltd
sub
dec
lfs
fwait
push
pop
dec
adc
gs
cwtl
pop
or
sar
mov
cmp
ret
pop
pop
fstl
cmpsb
inc
jp
subl
push
push
pop
xorl
shlb
aaa
imulb
and
fisttpl
mov
ss
imulb
pop
mov
aad
cmp
cmpsb
ja
ret
out
xlat
or
shrl
cmpsl
mov
out
add
aad
push
push
adc
push
dec
mov
pop
pop
aas
and
jns
push
shlb
bswap
push
lahf
pop
mov
xor
xor
fwait
cmp
repnz
and
jp
test
xchg
rcrl
adc
mov
dec
shll
test
push
sbb
data16
inc
ficoml
push
mov
mov
sbbl
jecxz
negb
push
sbb
lods
inc
insl
bound
xchg
mov
stc
jle
outsb
hlt
mov
sbb
xlat
imul
jle
movsb
int3
sub
mov
mov
rorb
fidivl
push
xchg
bound
into
aad
jp
dec
dec
ret
shll
into
icebp
fidivs
repnz
stc
push
inc
mov
loopne
push
push
xchg
fdiv
cld
or
or
ljmp
int3
inc
pusha
popa
adc
movsb
dec
adc
and
inc
mov
push
and
mov
mov
dec
daa
in
cwtl
cs
pop
pushf
pop
loopne
adc
pop
mov
mov
dec
xor
imul
push
cmpb
inc
int3
in
cmp
shr
out
mov
fwait
add
movsl
ss
outsb
add
out
cmp
pop
lock
mov
sahf
jecxz
leave
mov
aad
shll
jno
test
jo
int3
inc
or
rolb
int
push
ds
inc
lds
mov
pushf
lret
sahf
adc
sub
enter
loopne
mov
inc
and
movsb
sub
jge
in
imul
cwtl
or
mov
push
hlt
fsubr
test
push
negl
inc
cmp
into
mov
mov
bound
pop
xchg
xor
es
and
lret
mov
mov
push
pop
cmc
push
arpl
adc
mov
rolb
pusha
mov
mov
rcll
add
imul
test
mov
imul
mov
dec
dec
dec
adc
mov
push
leave
int3
mov
pop
repnz
fisubrl
or
sbb
test
fnstsw
dec
outsb
sti
jecxz
jae
mov
dec
and
jo
fcmovnbe
mov
push
push
pushf
insl
lcall
shl
adc
xor
push
pop
in
je
xchg
jno
add
adc
in
ds
stc
xchg
and
or
shlb
lods
loope
cltd
outsl
std
pusha
dec
ljmp
data16
mov
push
fisubs
mov
mov
popa
shll
adc
repz
shll
add
pop
mov
push
dec
xchg
inc
ss
jmp
mov
push
rcrl
aas
mov
scas
dec
mov
andl
xor
add
jecxz
fbstp
push
fdiv
movsl
pop
mov
adc
ret
je
incl
stos
mov
or
dec
push
dec
or
sbb
js
push
sbbl
adc
rcl
js
sarl
sbb
shll
xor
xor
and
dec
mov
sub
xchg
and
insl
test
fidivrl
xchg
push
stos
ret
sahf
hlt
test
daa
and
dec
pop
sub
mov
dec
add
inc
jo
push
idivb
lock
lret
ficoms
mov
sub
push
ljmp
mov
xor
idivl
xor
xchg
imul
imul
xlat
jge
and
push
xchg
aas
out
pop
ret
xor
xor
mov
adc
imul
and
inc
out
jne
repz
adc
mov
mov
adc
sub
mov
lret
loope
add
xrelease
sub
mov
hlt
mov
cmp
std
or
scas
mov
into
mov
and
test
jns
fdivrl
lods
loope
rorb
insb
arpl
cmc
icebp
test
scas
pop
inc
jl
sbb
inc
imul
daa
rcrl
jbe
push
xchg
shr
xor
cmp
push
pop
mov
cli
xor
fadds
jns
and
lret
dec
dec
jle
out
dec
shl
scas
bound
in
imul
and
addr16
jmp
dec
push
repnz
ljmp
lret
or
dec
inc
sbb
dec
movsl
mov
movsl
cmp
das
dec
aam
sbb
leave
pop
in
leave
jbe
pop
adc
pop
das
test
pop
cmp
aas
int
cs
or
pop
andb
movsb
and
xchg
sbb
testl
imul
sub
lds
push
sub
dec
adc
sarl
test
xchg
and
rcrl
xlat
shll
pop
jb
je
mov
loope
inc
pop
or
jbe
pop
jno
das
mov
sbb
insl
dec
sub
scas
dec
pop
or
enter
aas
xor
shr
aam
and
dec
je
dec
movsl
movsl
cmc
fisubrs
push
cwtl
jae
inc
and
pop
int3
daa
or
dec
mov
mov
shrb
insb
jnp
divl
adc
sbb
xchg
int
and
repnz
cmpsl
mov
mov
dec
dec
cmp
es
pop
insl
in
mov
popf
shlb
add
enter
sti
les
ficompl
aad
mov
dec
decb
inc
das
ret
sub
pop
mov
push
inc
lret
adc
sub
and
dec
mov
cmp
sub
aas
nop
repnz
ror
add
xchg
or
jmp
rclb
mov
sbbl
xor
bound
testl
or
and
lods
std
or
push
repnz
dec
enter
xchg
mov
inc
mov
icebp
dec
pop
icebp
test
gs
test
dec
xor
rorl
rclb
jnp
scas
pop
sbb
lret
cmp
fidivrl
shrb
push
out
adc
addr16
cmpsl
push
es
dec
xchg
scas
negb
loopne
add
jae,pn
and
xlat
jg
addr16
adc
push
lods
les
inc
inc
popa
jnp
jecxz
sub
out
lea
movsl
mov
std
dec
cmp
js
scas
popf
cld
call
xor
sbb
ljmp
push
repnz
cmp
jge
mov
ss
sub
add
adc
or
mov
aas
xor
lock
ret
push
push
jle
dec
fidivrs
sahf
cmpsb
cwtl
shr
arpl
mov
push
subb
jnp
imul
les
fsubs
hlt
into
jecxz
or
sarl
sub
lea
cmp
iret
adc
pop
xlat
es
xchg
lret
lret
mov
scas
clc
sbb
add
jnp
or
and
mov
xor
mov
or
aas
xor
aad
int3
stos
mov
jb
xchg
and
sbb
inc
jae
inc
nop
cmp
cwtl
in
xchg
gs
movsb
cli
leave
mov
inc
or
cli
flds
sub
stos
jge
cmp
std
cld
shll
push
cli
jae
fucomip
jmp
ficompl
dec
stc
leave
inc
ljmp
mov
pushf
jns
rcrl
dec
movsl
inc
push
mov
fldenv
jp
in
lcall
outsl
nop
jnp
data16
mov
movsl
cvtps2pd
dec
ljmp
or
inc
addr16
xor
push
adc
icebp
or
mov
jecxz
and
mov
popa
jl
xchg
outsl
jmp
adc
fucomip
mov
test
xchg
or
and
xor
ljmp
fldenv
imul
mov
movsl
adc
mov
jo
add
int
test
mov
bound
mov
sub
aas
or
repnz
adc
test
insb
daa
lods
jp
push
rclb
test
mov
outsl
adc
sub
push
inc
fwait
test
movsl
jmp
jecxz
mov
sub
daa
in
xchg
stc
addb
dec
lea
ret
xchg
xor
fwait
pop
xor
push
bound
push
ljmp
adc
repz
imul
popf
inc
or
push
loop
ds
and
subb
clc
cmc
add
iret
dec
and
dec
sub
iret
shlb
mov
add
dec
repz
dec
aam
and
xchg
iret
dec
test
inc
ljmp
cmp
jmp
outsb
aas
je
hlt
jecxz
xor
insl
sti
adc
push
imul
jg
dec
lahf
adc
mov
scas
outsb
outsl
adc
lods
mov
dec
xor
dec
mov
inc
test
or
test
jp
mov
fbld
clc
pusha
shll
je
jns
jge
idivb
lret
push
mov
mov
js
push
gs
movb
in
cs
mov
inc
cld
int
sbb
pop
pop
xchg
ja
loop
inc
repz
push
adc
ss
roll
fs
sub
pusha
popf
xor
dec
ret
push
push
aaa
dec
lret
dec
in
sub
sub
jae
mov
jecxz
es
xor
xchg
add
mov
jne
inc
xor
inc
xor
lahf
inc
out
sbb
cmpsl
aaa
xor
or
pop
add
inc
pop
and
pop
int3
stc
mov
pop
int3
mov
add
scas
out
std
pop
sub
enter
loopne
cmc
cmpsb
pop
jnp
fucomip
and
jnp
negl
sub
lods
inc
and
mov
inc
dec
nop
lods
fisttpl
sarl
push
add
cltd
jno
cmc
pop
roll
jno
dec
enter
or
jp
sub
or
in
out
pop
out
xchg
or
mov
cwtl
sbb
das
mov
movsb
mov
jnp
jno
addr16
not
adc
ret
or
sub
lcall
push
cltd
inc
xor
and
sub
push
mov
add
mov
xchg
xor
or
jb
xor
sti
sbb
stc
sbb
mov
int
xchg
scas
lea
cmp
mov
lcall
std
or
call
mov
movsbl
es
sbb
mov
mov
push
in
ljmp
in
cmpsl
lock
dec
pop
xchg
popa
icebp
adc
jno
sbb
jg
lods
int3
lods
insb
cmp
int3
subb
lock
mov
cwtl
loope
jl
clc
ljmp
sbb
into
push
mov
push
mov
xorl
fdivrl
out
imul
enter
and
xchg
lock
jae
pop
or
mov
cmpb
jg
cs
xchg
push
jno
push
jne
insb
xor
pop
xchg
adc
mov
inc
cmp
rcrb
mov
imul
out
lea
call
out
nop
adc
xchg
rolb
inc
inc
mov
cmpsl
into
imul
pop
adc
xchg
mov
push
dec
loope
nop
push
fldcw
jecxz
xlat
inc
jns
pop
mov
push
bound
inc
and
cwtl
pushf
and
mov
inc
and
xor
push
aaa
lret
lret
or
mov
jo
lret
sbb
imull
dec
pop
out
ja
iret
mov
mull
or
or
out
dec
xor
mov
lds
data16
imul
xor
mov
mov
rolb
cmp
lahf
xor
pop
cmp
scas
jo
dec
jnp
out
cmp
in
es
mov
insl
lahf
ret
sub
mov
xchg
adc
cmp
pop
imul
sub
stos
jp
arpl
pop
push
fs
imul
mov
pushl
mov
nop
dec
mov
sub
cmp
or
out
aaa
mov
jge
jns
mov
sti
inc
cmp
sarb
das
fistps
and
inc
cmp
jg
nop
int
sub
or
jle
mov
rcrl
inc
sbb
les
cwtl
data16
push
in
jecxz
out
xor
jbe
lret
in
mov
cmp
mov
roll
and
and
scas
push
xor
mov
inc
outsl
jmp
xor
in
sub
mul
hlt
add
fsts
sbb
test
inc
js
das
out
jg
lahf
lods
sub
mov
fbld
cmp
mov
mov
and
mov
inc
je
mov
jo
lea
sbb
dec
add
inc
and
jl
insb
cmp
loop
mov
xor
dec
mov
jmp
jge
test
test
test
ret
popa
imul
ss
sbb
sbbl
ffree
das
xor
daa
mov
fadd
cli
adc
movsb
pop
scas
call
cli
pop
dec
repz
cmp
pusha
sbbl
dec
inc
ret
les
sbb
mov
sarb
and
ret
scas
dec
push
mov
push
aas
mov
adc
cld
stos
mov
add
xchg
out
mov
pusha
pop
inc
xchg
dec
sbb
movups
add
push
jno
scas
xor
mov
int3
mov
pop
mov
mov
or
mov
sub
mov
rolb
fs
lea
cmp
sbb
rorl
pop
sub
cmp
and
in
incl
nop
ficoml
lret
frstor
mov
push
sbb
fdivr
mov
fsub
orb
aad
xchg
xor
mov
fs
jge
sbb
xchg
and
jecxz
pushf
mov
sub
inc
mov
stos
out
test
js
fsubrl
arpl
or
pop
roll
dec
add
mov
movsb
addr16
icebp
lret
sub
je
push
or
dec
sub
sti
test
adc
add
inc
pop
cli
repz
call
adc
hlt
jae
inc
adc
and
addr16
jae
out
cmpsl
jo
inc
lods
xor
hlt
mov
cmpsb
dec
and
cli
dec
jo
adc
cli
orb
xchg
push
jb
add
xlat
jg
arpl
pushl
sbbb
jb
iret
mov
addl
enter
inc
pmuludq
adc
pop
dec
pop
or
xchg
test
xchg
pop
fwait
add
pop
jmp
imul
push
push
ja
xchg
out
mov
mov
testb
or
ret
and
imul
ret
dec
insl
ret
add
bt
cmpsb
aaa
jnp
xor
popf
and
sbb
gs
sub
leave
sbb
cmp
xchg
push
mov
jns
mov
cli
scas
pop
clc
loopne
lods
lods
test
sti
pop
inc
and
xlat
dec
int
rcr
test
popf
out
stos
mov
push
shlb
scas
into
pop
pop
out
pop
mov
adc
and
jmp
sbb
mov
pop
xchg
xchg
adc
xchg
push
sbb
jns
enter
mov
xchg
repz
pop
cmpsl
pop
aas
lea
sub
jns
and
faddp
push
data16
sbb
mov
add
ds
popa
outsb
mov
xchg
or
or
mov
dec
lds
mov
lret
xchg
xor
or
js
lods
push
mov
loopne
push
icebp
out
out
or
dec
xlat
pop
mov
jp
jb
push
inc
dec
jmp
dec
sarb
mov
cmp
ds
xchg
mov
dec
dec
adc
ret
xchg
enter
mov
into
push
xor
jo
cmp
push
xor
xlat
mov
sbb
mov
fldcw
sbb
or
aas
or
scas
les
cmpsb
add
cld
iret
hlt
in
mov
push
shll
sahf
pushf
mov
out
jmp
jo
dec
xchg
cmpsl
clc
sub
or
lea
add
test
outsb
jmp
insb
jg
sbb
out
fistpl
pop
fs
pop
adc
and
out
pop
int3
ljmp
je
pop
int
sub
jnp
lea
push
jle
or
roll
and
ja
out
and
xchg
iret
imul
push
fsubl
adc
pop
mov
xlat
out
and
sarb
addb
cmp
mov
push
push
jne
imull
sbb
popa
cmp
stos
fs
int3
sub
shrb
jge
inc
xchg
jno
repz
jo
out
or
pop
repnz
shlb
cli
paddq
mov
sti
push
int3
mov
xlat
in
cmpsl
loope
xchg
sub
dec
xchg
fmulp
insb
mov
mov
jne
sub
sub
cmpsb
shl
dec
daa
divb
imul
pop
cmpsb
jle
lods
int3
push
andl
push
xchg
imul
addr16
addr16
cmpl
xor
fwait
mov
and
iret
imul
subb
cmp
daa
xlat
push
lret
aaa
pop
subb
ds
lds
out
sub
into
sub
int3
pop
dec
pop
inc
adc
cmp
and
inc
stos
push
mov
mov
daa
push
add
rclb
mov
stos
push
movsl
sbb
mov
inc
jle
dec
xchg
or
mov
std
pop
and
dec
loopne
jo
push
je
lcall
push
push
cmc
clc
ffreep
hlt
std
add
cmpsb
sbb
mov
mov
pop
mov
and
or
incb
add
loope
cmp
push
pop
test
jno
dec
out
mov
subl
mov
mov
xchg
xor
fldcw
xchg
popf
mov
in
testb
jge
or
and
sub
sti
popa
fcoml
jmp
dec
pop
cmpsb
stc
lcall
pop
dec
push
pop
and
or
repnz
cmp
mov
stos
loopne
das
jge
xchg
in
push
adc
or
jno
pop
pop
push
add
xchg
xor
or
pop
inc
sub
and
popf
adc
add
stc
push
in
jge
xchg
rcl
nop
ss
inc
mull
jle
call
sub
add
ficompl
arpl
lods
jp
or
es
or
and
int
pushf
adc
dec
xchg
push
scas
stos
push
out
jg
jne
cmp
lahf
jns
cmp
movsb
cwtl
sbb
outsb
popf
hlt
mov
sbb
mov
jmp
push
fld
scas
cmc
mov
movsb
xchg
std
dec
cmpsl
xchg
mov
outsl
icebp
movsl
call
pop
test
add
sar
imul
mov
movsb
adc
js
and
int
adc
dec
iret
arpl
rcrb
push
arpl
dec
arpl
leave
jecxz
ljmp
mov
adc
sub
push
lcall
cmp
push
cld
xor
cmp
shl
fdivrs
adc
xor
adc
imul
movsl
xorb
stos
xchg
lahf
ja
lcall
push
cmpsl
mov
xor
mov
xchg
push
cwtl
inc
or
or
jae
push
add
lahf
cmp
aaa
mov
adc
scas
leave
and
les
cmp
inc
outsl
inc
test
je
fisubrs
lret
mov
cmp
sbb
mov
out
jecxz
sbb
push
jmp
stos
push
push
mov
pop
adc
movsl
mov
xor
idiv
pop
into
sahf
idivl
dec
and
cmp
cmpsb
jae
inc
sub
test
repnz
jae
sub
ss
int
iret
repnz
repnz
mov
dec
cs
add
push
jge
fistps
out
fmulp
into
sbb
orb
cmp
rcrb
rolb
or
sub
add
adc
aam
push
bound
mov
js
mov
inc
pop
repnz
xchg
ficoms
stos
pop
insl
add
xchg
sahf
or
xchg
cmp
cs
pop
sti
or
pop
adc
mov
test
aam
jmp
ss
loope
push
cmc
cmp
sbb
inc
push
fdivs
jl
mov
add
mov
sbb
xchg
fs
repz
andl
inc
hlt
pop
in
xchg
test
push
lret
push
sahf
idiv
dec
andb
mov
fdivp
pop
jg
sti
mov
movsl
ja
ja
dec
outsl
arpl
cwtl
push
orb
push
sub
xor
and
inc
mov
ds
adc
lret
ljmp
int
or
daa
divl
aaa
cmp
rcl
push
xchg
push
sub
fs
xchg
ja
popa
adc
icebp
cltd
out
push
pop
lea
mov
or
adc
out
arpl
filds
add
pop
jnp
insb
sbb
fucomip
pop
pop
jae
push
add
or
sub
imul
arpl
mov
cmp
or
insl
pop
sub
mov
fsubl
mov
push
loopne
lds
jb
inc
stos
popa
cwtl
pop
aaa
add
push
les
movsl
fmull
dec
leave
icebp
out
inc
mov
lds
pop
sbb
ja
pop
cmp
dec
mov
mov
jge
xadd
call
dec
xor
xor
add
lret
out
jmp
inc
inc
hlt
xor
enter
popf
xchg
inc
out
test
adc
or
loopne,pt
mov
jae
call
ja
inc
lea
mov
xchg
jg,pt
ret
xchg
adc
inc
popf
divl
sbb
adc
mov
ret
sbb
or
mov
mov
addr16
pop
mov
imul
sub
push
movsl
loope
lret
add
push
idiv
or
adc
nop
sti
outsl
mov
fwait
push
shl
jnp
shll
jmp
pop
imul
mov
jmp
adc
cmp
lcall
fnsave
xor
stos
xchg
jmp
ljmp
stos
inc
aam
outsl
cmp
xor
inc
push
test
dec
movsb
dec
jns
or
dec
pop
xchg
inc
inc
xor
push
ja
sbb
dec
cmp
movsb
sbb
fimull
stos
jge
adc
lds
pop
clc
pop
mov
cld
xchg
add
jns
scas
cmp
scas
mov
sbb
fnstcw
xor
mov
push
sbb
xchg
mov
insl
lea
mov
mov
dec
repz
adcl
pop
push
mov
pop
arpl
and
int3
mov
mov
lahf
xor
test
gs
jmp
fists
xchg
ret
or
jbe
imul
repz
xlat
jge
xchg
mov
mov
push
cmc
mov
insb
cs
scas
in
les
out
sbb
lret
jg
or
push
or
aam
imul
aam
insl
inc
fistps
dec
daa
dec
cmp
pushf
inc
mov
aad
jbe
out
mul
pop
fmull
lret
lea
roll
mov
push
jl
loope
int
or
sbb
inc
jo
mov
hlt
add
mov
cmp
fisubl
lret
outsl
cmp
add
add
mov
imul
adc
test
rcr
lret
dec
inc
pushl
mov
lret
inc
bound
fdivl
jl
in
xlat
popf
push
jo
push
int
sbb
cld
and
cltd
mov
into
inc
and
push
into
int
push
jle
or
ret
mov
cmp
addr16
pop
xchg
shlb
pushl
sbb
movsb
mov
mov
dec
je
je
pop
fisttpll
jnp
xlat
mov
jmp
pop
sub
xor
mov
cmp
inc
sub
inc
lods
mov
leave
hlt
xor
or
subl
mov
inc
mov
mov
insl
mov
lret
sub
xor
popf
mov
mov
sbb
iret
ljmp
dec
or
cmp
aas
add
inc
lods
add
jns
lcall
mov
cmc
insb
xchg
imul
mov
icebp
in
enter
dec
and
pop
inc
dec
out
and
gs
clc
jbe
fisubs
pop
call
es
leave
pusha
shrb
jno
ret
or
dec
inc
fwait
mov
xchg
add
leave
push
test
jnp
jmp
in
cs
cmp
fsubl
mov
add
jae
rcr
int
aaa
add
adc
cmp
sbb
jg
sahf
or
f2xm1
mov
ss
out
mov
ret
and
sti
loopne
aaa
in
ret
mov
daa
je
mov
or
gs
add
stc
mov
xchg
inc
xor
and
xchg
pusha
out
mov
cltd
mov
jle
fnclex
push
inc
cmp
push
pop
mov
mov
or
dec
sub
pop
and
mov
loop
dec
xlat
pushf
lcall
or
sbb
mov
into
push
cmp
mov
mov
pop
mov
cmp
stos
push
loopne
mov
mov
mov
popf
loop
or
push
mov
mov
ss
int
push
jle
pop
push
sub
jl
mov
sbb
andl
fisttpll
cmpl
mov
push
xchg
sbb
push
pop
scas
add
je
dec
pop
adc
sbb
sub
xchg
imulb
lods
lret
shlb
notl
mov
in
mov
add
pusha
mov
inc
cld
das
test
ss
mov
or
jbe
dec
mov
lods
xchg
fldl
mov
mov
subb
push
sbb
inc
das
es
add
jae
test
sub
mov
in
fnstsw
adc
pushf
movsl
sahf
jnp
or
pop
ret
popf
mov
imul
or
mov
sub
push
fbld
fcompl
lret
pop
rorb
xor
jle
pop
xlat
outsb
xorb
dec
xor
pop
mov
aam
rcrl
sbb
cmp
in
or
pop
cmp
aad
jge
cmp
xor
jmp
jmp
scas
dec
jmp
sbb
aam
mov
push
add
inc
sbb
push
in
sub
mov
mov
or
ds
xor
xor
sbb
cwtl
jb
dec
adc
outsl
xor
shrb
stos
or
or
ljmp
jne
mov
js
adc
int3
lahf
xchg
pop
mov
addr16
pusha
sbb
lret
movsb
inc
addr16
mov
mov
loopne
mov
xor
pop
xorl
mov
jmp
sbb
fsts
mov
dec
or
pop
inc
in
mov
mov
stos
inc
pop
repz
xchg
push
mov
xorb
pop
pop
pop
icebp
pop
inc
cs
arpl
das
jl
jb
mov
push
or
sbb
sub
shlb
and
and
sti
push
or
push
sub
sahf
fcmovu
cmp
addr16
sub
insb
ja
push
xchg
sbb
lret
stc
push
xchg
iret
xlat
insl
outsl
cmp
push
dec
mov
jne
and
jne
pop
adc
shr
sub
imull
sbb
das
jmp
lret
out
sarb
xor
mov
or
sub
arpl
testl
mov
mov
xchg
outsl
cmpsl
aaa
mov
or
call
xor
cmpb
insb
call
xchg
std
push
fs
je
sub
add
xlat
mov
add
pop
mov
es
push
push
push
aas
push
mov
dec
loop
lds
jle
lods
cltd
dec
cmpb
sub
push
lret
push
jg
mov
or
and
adc
push
add
jmp
fldenv
mov
test
inc
mov
sub
lock
in
xor
jmp
xlat
push
test
mov
push
aam
adc
ss
stos
scas
aad
pop
aaa
andb
push
cmp
cmpsl
push
shrb
mov
dec
pop
mov
and
mov
mov
fdivrs
xor
pop
sub
shrl
into
mov
jne
stos
push
movsl
gs
out
jb
xor
inc
dec
sbbb
pop
fisttps
fldenv
jns
outsb
cmpsb
into
dec
dec
enter
nop
cmp
insl
cmp
imul
stos
pushf
xchg
in
pop
mov
jb
in
pusha
xor
mov
fldcw
neg
mov
daa
inc
dec
out
and
ficomps
push
cltd
out
sub
or
or
push
xor
xor
ret
movsb
dec
rcrb
cmp
ljmp
push
cli
cmp
pop
mov
pop
and
fdivrl
jg
adc
inc
subb
push
dec
inc
or
int3
mov
xchg
enter
repnz
test
jb
jb
aas
mov
out
sbb
pop
lret
mov
and
mov
sub
test
mov
push
js
into
mov
xor
push
imul
add
or
ljmp
enter
mov
scas
adc
in
dec
pop
js
das
jns
xchg
shlb
lcall
xchg
movsl
insl
or
pop
sub
icebp
and
lods
xchg
xor
in
aad
outsb
fcompp
bound
and
addr16
cmp
pusha
xor
add
push
sub
inc
lea
popf
insb
mov
jle
ss
outsb
push
sbb
mov
or
jb
and
xorb
xchg
cmpsl
pop
mov
mov
out
into
dec
add
push
and
jmp
cmc
jae
and
cmp
das
cmpsl
bound
sub
sub
sbb
jne
or
pop
jecxz
pop
lret
cs
mov
push
xchg
arpl
xor
xchg
pop
ljmp
xchg
xor
fiadds
jbe
in
mov
insl
adcb
mov
and
push
add
pop
aaa
fucom
mov
cmpsb
dec
je
xchg
push
xor
cwtl
sub
fisubs
int3
add
stos
cmc
icebp
sbb
jle
hlt
adc
jle
test
popf
pop
and
inc
repnz
or
push
xchg
jno
xchg
sub
push
add
hlt
es
cmp
jg
dec
pushf
ret
leave
adcb
inc
les
mov
rcll
or
cmpsb
pop
add
leave
imul
xchg
mov
repz
and
lahf
mov
aaa
mov
repz
mov
ror
test
in
push
sub
nop
mov
cmpb
mov
xor
arpl
out
out
xlat
cli
incb
aad
cmp
sub
push
adc
je
lds
test
out
cli
jno
ret
xchg
sub
inc
lock
sbb
test
movsl
mov
jecxz
push
ljmp
add
call
arpl
lret
pop
fsubp
sub
fstps
sar
lock
scas
lret
out
sbb
movsl
xor
cs
rcrl
xchg
and
pop
imul
pop
xor
pop
xchg
std
cltd
and
popf
and
movsb
jmp
mov
popa
xchg
faddp
std
out
out
test
sbb
fdivrp
dec
std
fwait
mov
xchg
jae
fsubrl
or
daa
out
add
jo
cmp
mov
aad
mov
cmp
fbld
add
daa
lahf
inc
cmp
push
int
lcall
xchg
cli
jmp
xor
inc
stc
xor
adc
out
js
mov
std
sub
adc
push
dec
sbb
add
cmp
and
addl
xchg
jnp
mov
pop
js
and
and
dec
mov
rcrb
bound
pop
cld
fcoml
std
je
adcb
cli
test
xor
mov
lcall
mov
mov
lods
xor
pop
ja
ljmp
inc
pusha
inc
or
or
push
adc
push
pusha
fisubl
dec
rclb
push
lock
sub
sub
mov
testl
mov
jae
sub
cmp
and
scas
sub
mov
test
sbb
cli
jae
insb
fdivrs
ds
imul
xchg
insb
movsb
stc
mov
xor
cmp
movsl
into
sbb
sub
mov
cmp
rolb
lcall
lahf
mov
push
cltd
fisubl
rol
pop
and
aam
lods
mov
sub
adc
into
and
adc
pop
dec
fcmove
pop
pop
aas
mov
ljmp
jnp
pop
nop
insb
sbb
test
out
cli
ljmp
sub
divb
mov
inc
rol
decl
xor
xchg
test
push
sub
jmp
mov
jecxz
out
push
cmpsl
jle
and
add
iret
adc
nop
js
popf
cld
ret
push
sub
outsl
rclb
xchg
stos
sbb
les
jge
jle
lret
pop
loopne
sub
test
sub
adc
nop
sub
adc
leave
xchg
jns
mov
inc
pop
stos
sub
daa
xchg
jbe
inc
xor
mov
jl
adc
jno
mov
sub
add
jnp
out
dec
add
je
sub
and
shrb
xlat
iret
inc
cmp
ret
jmp
out
notl
fisttpl
xor
out
jae
jbe
mov
sar
lret
adc
dec
test
lahf
frstor
push
sbbl
gs
pop
js
test
and
pop
xchg
mov
xlat
mov
sarl
std
shrl
fwait
cmp
jns
std
je
inc
jb
adc
adc
push
fstpt
mov
imul
jne
mov
mov
adc
sbb
addl
enter
imul
outsl
sarb
aad
jb
cmp
xchg
inc
push
pop
dec
or
mov
mov
sub
decb
dec
das
cwtl
les
mov
mov
push
mov
stc
cmp
outsb
mov
inc
ja
les
xor
or
iret
out
add
and
pushf
push
cmp
call
jle
popf
sbb
push
add
mov
push
aas
fildl
pop
xor
xchg
faddl
xchg
shlb
xchg
pop
dec
fisttpl
int
insb
adc
adc
pop
push
and
pop
push
stos
out
push
popf
xchg
ret
stc
or
test
dec
adc
pusha
idivl
int
cmp
push
je
add
xor
mov
sbb
or
mov
jg
sub
sub
imul
js
mov
scas
sub
repz
into
pop
jns
fwait
mov
add
xchg
inc
cmp
sub
cmpsb
pop
arpl
xchg
jbe
lret
push
jo
je
divb
mov
sub
ror
cli
lret
shl
in
sub
dec
pop
inc
lret
jne
repz
imul
adc
gs
ret
pop
scas
xchg
loope
xor
lds
sbb
xchg
push
cmp
xor
std
in
rorl
idivb
and
push
inc
ret
push
insl
pop
ret
imul
insl
lea
jecxz
and
pop
jmp
xchg
jb
in
test
or
xchg
bound
xchg
mov
xchg
pop
adcb
scas
mov
mov
and
dec
in
pop
xchg
sub
jle
mov
push
jge
sub
and
leave
out
push
mov
xor
jne
xchg
mov
ja
mov
mov
mov
xor
call
xor
test
push
rorb
or
xchg
dec
jle
xchg
xor
lods
inc
or
pop
xor
xor
adc
loope
movsl
push
push
mov
adc
or
ja
outsb
push
push
mov
lods
rcrb
xchg
iret
cmc
jno
lret
adc
push
add
icebp
sub
inc
lea
inc
ret
xchg
into
outsb
stos
setg
sub
adc
or
mov
ss
outsl
loopne
je
or
ss
sti
adc
mov
or
lret
in
xor
out
cmp
jbe
dec
cmpsb
mov
test
scas
xor
ss
pop
or
scas
idiv
push
pusha
inc
pushf
xchg
xchg
scas
leave
aas
fidivs
mov
adc
arpl
arpl
cltd
fwait
jl
call
sub
shlb
sbb
inc
fadds
mov
shrb
jmp
ljmp
or
adc
call
scas
fisubrl
iret
inc
daa
mov
cmp
xchg
nop
push
xorps
cmp
cmpsb
arpl
sarl
inc
insl
or
adc
mov
sbb
repz
inc
stos
jb
and
jge
mov
jae
or
xchg
or
mov
fisubl
mov
xchg
sbb
lret
pusha
jle
adc
call
sahf
sub
mov
push
shll
inc
mov
cmp
ret
pop
repnz
mov
scas
pop
inc
test
mov
sbb
push
jecxz
mov
push
mov
push
mov
int3
xor
jne
xchg
jbe
adc
ljmp
push
push
mov
in
into
ret
sbb
ja
imul
ljmp
mov
pop
mov
in
xchg
rcl
and
xor
mov
frstor
pop
fstl
sbb
pop
aad
fcomi
ljmp
add
inc
mov
icebp
adc
jecxz
es
mov
std
test
jae
pusha
or
icebp
test
movsb
mov
push
mov
jp
cmp
das
jnp
sbb
subb
neg
push
dec
add
mov
push
xchg
aam
shlb
fcoml
and
push
andl
add
imul
adcl
sub
mov
sahf
cli
jae
sbb
mov
rorb
xor
in
scas
int3
mov
cmp
cmpsb
lds
pop
call
pop
inc
and
imul
lret
xchg
leave
es
sbb
pop
je
ljmp
cwtl
popa
fistpl
push
mov
fisubs
mov
xorl
dec
xchg
and
lahf
movsb
sub
add
mov
xor
test
sbb
das
dec
stos
pop
adc
aas
jbe
inc
dec
jg
pop
hlt
cmp
into
or
sbb
stos
pop
div
pop
aad
lock
jbe
imul
lods
push
mov
cmpsb
sub
jge
sbb
pop
xor
scas
test
jg
je
push
jo
jb
xor
jge
or
and
scas
fadd
xchg
dec
leave
call
cmp
push
mov
ror
jae
loop
mov
jmp
fbstp
rolb
les
int
sti
sub
test
addr16
mov
sub
call
ret
push
jne
add
into
repz
xchg
and
shlb
aam
xchg
jmp
mov
push
pop
sub
cwtl
cli
lods
loope
test
pop
sub
jns
out
mov
xchg
call
adc
xchg
or
loop
push
sahf
mov
and
sub
lahf
pop
dec
ja
pop
mov
mov
stos
adc
or
fdiv
lea
jne
jg
aam
push
xchg
push
ret
daa
push
pop
lock
test
jmp
fmuls
or
adcb
cmc
mov
cmp
insl
cwtl
cltd
ds
rcll
or
mov
aas
lcall
push
inc
and
or
sub
test
pop
sub
adc
pushf
inc
push
add
rol
cmp
loopne
or
idivl
outsb
xor
out
clc
popa
or
dec
clc
and
xchg
sbb
icebp
stos
dec
popf
lock
push
push
or
scas
insb
pop
enter
pop
adc
pop
dec
lahf
xlat
mov
sub
mov
lcall
aad
lret
dec
test
jg
pop
adc
sarl
dec
adcb
push
pop
cmpsb
stc
imul
ss
mov
data16
aaa
add
adc
xchg
insb
leave
sub
and
fsubl
xor
xchg
add
inc
int3
ret
sub
les
mov
nop
or
push
call
mov
xchg
or
xor
fsub
cmp
or
xor
xchg
dec
xchg
push
or
in
jl
sahf
test
ret
mov
push
jge
sbbb
push
ja
icebp
dec
lahf
push
rcll
push
xchg
cltd
je
cs
inc
mov
add
popa
add
jo
jae
test
mov
aam
call
lret
cmp
jo
jg
clc
arpl
push
adc
mov
call
jo
sub
fsubp
adc
data16
mov
fisubs
cld
adcl
jne
jns
or
inc
js
cmp
push
or
roll
and
aaa
scas
iret
sti
mov
push
fsubp
and
imul
jno
adc
pop
call
pop
and
jbe
sub
push
dec
push
mov
enter
xor
adcb
xchg
dec
jns
mov
scas
xchg
repnz
cmp
push
testl
movsb
call
into
outsl
lea
js
loopne
outsl
outsl
aad
push
xor
or
jp
out
push
pop
jecxz
lcall
xchg
scas
roll
push
ljmp
add
and
idivb
imul
fistps
dec
imul
push
adc
cmp
adc
and
jmp
pop
mov
push
lods
imul
inc
fbld
adc
into
loop
shrb
dec
loope
add
and
add
icebp
and
mov
scas
pop
mov
lea
xchg
push
leave
inc
div
sahf
leave
les
andb
sub
sub
jbe
lock
test
insb
das
fisubl
jg
xor
popf
data16
and
sbb
adc
sub
dec
bnd
xchg
add
gs
inc
add
test
inc
mov
leave
and
sbb
dec
movsb
xor
arpl
mov
and
dec
xchg
mov
popa
sti
pop
into
arpl
pushf
lahf
fnclex
or
or
sub
outsl
cmp
or
movsl
sub
and
fs
mov
js
mov
jecxz
in
jge
aas
xchg
fucomip
mov
mov
mov
adc
test
test
push
mov
movsb
and
ja
mov
stc
and
sbb
loopne
cmp
push
popa
lds
mov
jbe
jnp
notl
nop
xor
cmp
xchg
cmp
dec
out
roll
arpl
loop
mov
mov
sbb
xor
sarb
int
mov
or
mov
ljmp
jge,pt
jb
sub
xor
icebp
nop
cli
jecxz
add
mov
sbb
daa
mov
call
jb
imul
into
xor
sbb
lret
pop
sub
sub
xor
pop
mov
cld
adc
cld
or
test
or
dec
mov
jmp
mov
aas
mov
xor
xor
or
negl
pop
push
add
sub
shlb
mov
out
mov
shrl
mov
leave
sub
push
fmull
inc
xor
pop
cmpsl
out
add
pop
ds
loope
push
imul
xor
jbe
push
xchg
call
and
out
ds
mov
mov
adc
xor
push
mov
repz
xlat
aad
sbb
sub
stos
pusha
adc
lret
mov
dec
in
or
es
je
stos
mov
loopne
dec
mov
test
inc
or
xor
pop
decb
jno
movsb
xchg
push
xor
lea
lea
mov
pop
sub
and
fsubp
inc
push
lret
cmpsl
popa
xlat
jl
popa
jno
ficomps
mov
mov
add
sub
push
insl
dec
sbb
les
dec
test
je
add
outsl
loopne
mov
mov
and
dec
test
fucom
jl
jle
push
loopne
jne
insl
sti
dec
dec
imul
in
inc
scas
je
sarl
or
enter
popf
mov
ret
jle
mov
mov
out
dec
sbbb
aas
pop
jo
idivb
stos
inc
out
mov
sub
bswap
cmp
es
or
dec
adc
stos
mov
jns
push
push
cltd
xor
mul
lea
arpl
push
stc
sub
cmp
push
or
cmc
adc
jo
mov
jno
pop
stos
jmp
mov
and
jae
imul
push
sbb
sbb
pop
dec
push
cmp
mov
stos
out
push
dec
je
lahf
dec
mov
fnstcw
push
ret
cmp
popf
sbb
cld
sub
cmc
push
lds
fwait
jo
inc
test
icebp
xchg
mov
ret
jp
loop
jmp
mov
xchg
push
incl
lds
in
mov
aas
push
mov
or
or
scas
aas
mov
ss
dec
imul
dec
xchg
ja
or
mov
popa
fidivl
mov
lahf
pop
xlat
mov
fisubrs
mov
mov
hlt
mov
add
or
push
cmpsl
xor
push
xchg
test
ja
std
pushf
pop
pop
outsl
test
lcall
mov
imul
mov
sti
mov
jmp
mov
aas
push
xor
jg
mov
ds
es
stos
xor
jnp
mulb
popa
xor
pop
lods
insb
jp
cmc
sbb
iret
or
das
mov
xchg
dec
ret
in
mov
lods
dec
int
jecxz
xor
daa
mov
adc
cwtl
jns
add
mov
pop
add
dec
push
fadds
mov
mov
push
rcrl
and
insb
pop
mov
cmpsl
int3
lret
int3
sub
mov
add
fwait
int3
stc
xor
imul
mov
sub
loop
gs
add
jns
xchg
push
data16
lahf
jno
mov
push
and
je
fimuls
cli
sub
pop
gs
xchg
shrb
jge
cmp
or
clc
daa
dec
or
jne
es
rorb
jmp
or
inc
push
cmp
stos
dec
jecxz
or
loopne
movsb
jnp
cmpsb
adc
int
popa
xchg
fildl
shlb
clc
dec
jo
outsl
and
fiadds
dec
and
aaa
mov
mov
mov
ficoms
out
in
lock
push
scas
xchg
in
negl
pop
adc
and
rcr
add
cmp
in
je
jmp
sti
fld
ja
cmpsb
je
xchg
pop
xlat
xchg
mov
clc
fsubp
movsl
movsb
jge
pop
add
imul
ud2
jle
mov
mov
stc
push
or
mov
xchg
dec
xchg
fmuls
sbb
fidivrs
dec
lahf
and
push
inc
dec
mov
or
or
xchg
ret
movl
cmp
imul
or
aam
dec
decb
inc
lahf
out
and
dec
imul
sub
dec
fstpt
inc
cmp
lea
sar
shll
repz
imul
pop
fists
or
add
cmp
repnz
push
push
cli
clc
jmp
sbb
adc
add
mov
cwtl
jno
inc
jp
or
mov
mov
into
mov
test
sub
subl
sbb
sub
pop
dec
addr16
xchg
shrl
shll
mov
test
jne
lret
hlt
lods
mov
enter
ja
sti
mov
jle
push
jg
fidivrs
mov
inc
pop
and
push
xor
add
jne
or
jp
shlb
jbe
vmovntdq
push
xorl
pop
mull
lret
inc
cld
repnz
jge
pop
dec
imul
add
mov
sub
mov
mov
mov
or
sti
je
push
adc
xchg
pop
cmp
pextrw
mov
jmp
dec
shrl
cmp
push
mov
cmp
jp
jns
adc
lret
inc
out
fdivrl
inc
adc
lcall
mov
push
mov
ja
in
incb
jl
scas
fwait
jle
loop
cli
jno
jmp
fisubs
jmp
pop
into
xchg
jo
addr16
addb
repnz
fisubl
fistl
pusha
clc
xchg
xchg
cmpsl
fwait
cmp
out
cld
xlat
ljmp
in
rcr
xor
std
and
test
fmul
aas
cwtl
or
xchg
push
pop
int3
clc
lret
ficomps
push
push
adc
lods
fcomps
jnp
push
jmp
push
sbb
dec
adc
mov
mov
fimuls
cmpsb
inc
aad
shrb
aad
adc
push
mov
mov
push
std
fimuls
pop
stos
xchg
pop
pop
sbb
adc
or
pop
push
xor
mov
cmp
add
xor
test
addr16
loop
pop
add
mov
sbb
stos
scas
enter
push
mov
fwait
mov
push
mov
cld
ret
loop
push
sub
sbb
jmp
iret
and
pop
movsb
pop
mov
sub
in
iret
jp
sub
insb
jecxz
mov
adc
pop
outsb
or
mov
jns
sub
fnstcw
cmp
ficoms
aaa
xor
jl
add
shlb
xchg
sub
pop
pushl
fnstcw
imul
xchg
jmp
in
stos
push
pop
sub
cli
insl
xorl
xor
fldcw
lcall
jb
andl
cmpsl
sbb
mulb
xchg
stos
sub
and
fwait
xchg
dec
loopne
fnsave
mov
push
ret
push
cmp
fst
in
cmp
in
cmp
data16
sarl
xchg
sbb
push
add
xchg
pushf
mov
mov
pusha
sub
rcrl
xchg
pusha
insb
popa
in
mov
add
inc
push
dec
ffree
mov
inc
mov
test
rolb
mov
outsl
mov
test
push
hlt
mov
xor
dec
lds
fdivrp
pop
xchg
or
cmp
test
mov
push
xchg
mov
pop
xor
push
adc
pop
and
hlt
je,pn
jno
fs
mov
aam
push
push
mov
pop
and
out
cmp
dec
neg
jp
cmp
cmc
fadd
insb
jecxz
cs
fwait
push
xchg
inc
adc
sbbb
sarb
lds
push
add
call
push
fisttpll
movsb
out
cmp
mov
add
add
sahf
jp
jnp
stos
cmp
push
sbb
adcb
cs
jge
jp
jp
lods
ljmp
insb
into
mov
out
repz
and
mov
das
out
ret
sub
pusha
sub
inc
xor
xor
fcoml
movsl
mov
jae
pop
lret
lret
nop
sbb
lods
jl
push
cwtl
cmp
or
push
std
sti
sub
adc
pushf
mov
es
xchg
cmp
popa
pop
mov
inc
cmp
cltd
or
xor
addl
stc
je
mov
ljmp
fcompl
push
fistl
inc
lods
adc
fld
pop
ss
pop
mov
aaa
fcoms
or
shrb
mov
or
pop
fmul
int3
cs
xor
adc
pop
fisttps
push
push
jle
pusha
leave
adcb
jno
cs
mov
xchg
popf
mov
popf
popa
lds
pusha
aad
jae
fstpt
cmp
sub
mov
xor
mov
mov
imul
pop
into
cli
pop
cmpsb
cmp
cmp
je
or
push
mov
mov
popa
cmc
fsts
push
lods
ss
mov
dec
pop
cmp
sbb
jns
sub
adc
iret
fcmovbe
ds
cmp
sbb
ret
or
fcomp
popf
and
xchg
add
cmp
out
stos
popf
je
shl
lods
pop
iret
pop
mov
add
aaa
ss
or
sbb
dec
fs
jl
dec
test
dec
push
sub
dec
mov
mov
and
jb
jge
add
cmp
loope
and
add
dec
repz
mov
test
sbb
and
cltd
ss
test
pop
sbb
shrb
push
xor
test
jp
lods
sbb
popa
mov
jle
xchg
mov
xor
jmp
cmp
stos
xor
sub
push
jle
roll
sub
in
xchg
cmp
aam
pop
pop
dec
inc
mov
aad
and
sbb
or
imul
pop
add
mov
icebp
inc
lea
and
repz
xor
or
sub
push
xchg
es
push
cmp
inc
push
jg
dec
mov
mov
push
and
xchg
fstl
xor
insl
cmc
push
push
push
rclb
xor
fs
les
or
xor
fisubrl
shll
inc
inc
imul
add
lds
sbb
rcl
add
pop
gs
mov
decl
lods
jns
push
xor
and
xor
inc
xchg
cmc
push
jo
out
jno
cltd
sbb
cmp
xchg
xor
or
sub
xchg
xlat
leave
xor
lcall
inc
pushf
popl
or
dec
iret
stc
cmc
les
push
dec
and
outsl
lcall
mov
fnstenv
not
lds
cmp
mov
addr16
jae
push
imul
push
ja
test
mov
fsubs
fs
subl
add
xor
ret
jp
leave
mov
sbb
mov
aaa
mov
sbb
popf
sti
hlt
mov
sub
add
pop
out
cmp
sarb
icebp
pop
mov
rorb
sub
inc
mov
pop
adc
movsb
nop
xchg
lcall
mov
fcmovb
inc
imul
lret
inc
jae
jns
sahf
cld
fisubl
fnstenv
shll
jl
mov
or
loop
orb
mov
sbb
fldt
out
xor
movsb
xor
push
push
out
push
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
decl
inc
adc
and
mov
and
inc
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
cmpsb
dec
adc
xor
ja
adc
add
inc
xor
shll
mov
and
popf
data16
xor
jb
adc
dec
adc
and
mov
fsubl
in
aas
adc
dec
inc
and
das
mov
jne,pn
xor
aam
jge
sbb
and
sub
jmp
lock
push
or
and
jns
in
aas
adc
dec
xor
subb
stc
cmp
js
sub
push
jns
sbb
push
pop
mov
mov
fldcw
incb
and
fsubl
mov
repz
dec
add
and
xchg
adc
inc
sbb
adc
xor
push
inc
adc
shlb
mov
repz
sbb
scas
and
xor
sbb
push
and
xor
sbb
adc
xor
sbb
adc
and
inc
sbb
adc
xor
sbb
add
xor
sbb
adc
xor
adc
es
and
inc
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
inc
scas
push
mov
clc
inc
sbb
adc
xor
pop
add
mov
roll
cmpsb
cmp
movsl
push
fistpll
push
mov
loop
and
jg
push
testl
and
data16
repnz
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
sbb
adc
xor
xor
xor
out
and
or
add
enter
lret
mov
maskmovq
mull
repz
arpl
jne
xchg
roll
pop
xchg
fsubr
mov
clc
ret
jo
je
mov
mov
xchg
pop
dec
pop
imul
je
out
or
jb
incb
cmpsl
in
pop
pop
lds
xor
mov
push
inc
xchg
dec
in
cld
pop
cli
imul
pushf
or
scas
or
fs
jl
mov
mov
pop
mov
outsl
cmp
inc
lods
movsb
cmp
mov
scas
dec
and
xchg
adc
sarb
repnz
test
xchg
sub
mov
in
and
scas
hlt
cwtl
in
sub
in
les
cltd
lret
mov
lods
add
or
pushf
sbb
or
jp
std
in
adc
stc
pop
xchg
repnz
mov
in
loop
mov
mov
or
fists
icebp
xlat
dec
out
mov
cmp
xchg
ficomps
ds
mov
sub
in
imul
test
out
mov
aas
jb
adc
pop
and
dec
mov
popa
loope
sub
adc
call
cmp
cmp
out
cmc
lret
aam
mov
cli
cmp
or
test
pop
jmp
std
iret
mov
sub
orl
lock
mov
inc
xchg
cld
mull
xor
or
lcall
mov
push
xchg
sub
fs
cmp
cmpl
and
inc
pop
push
orl
jecxz
and
lret
sbb
enter
daa
shl
mov
cli
jg
stc
out
rcl
mov
imul
xchg
adc
fistpl
testl
mull
mov
arpl
mov
shll
sbb
pop
or
cmp
or
sub
pop
movsb
pop
icebp
sbb
xchg
jb
mov
jle
insl
jae
cmpsl
and
out
daa
mov
sahf
adc
xlat
ja
jae
rorl
sub
or
call
jno
out
sbb
out
cltd
xchg
mov
inc
ds
push
cmp
ret
xor
sbb
dec
ret
js
push
insl
cmp
sub
inc
scas
mov
mov
ss
data16
lcall
ss
push
imul
shrl
sahf
cmp
inc
inc
aam
add
mov
push
or
or
and
adc
add
ficomps
xor
sbb
jnp
jbe
out
mov
movsl
lret
ds
sbb
pop
popf
arpl
push
bound
lds
pop
aaa
adc
xchg
imul
ja
test
aaa
cmpb
xor
sti
loop
adc
or
repnz
loopne
ret
ljmp
xchg
aas
test
js
mov
fidivrs
dec
leave
xchg
pop
pushf
push
leave
xor
out
mov
cs
nop
orb
mov
push
sahf
stos
int
fwait
lds
adc
fldt
xchg
ss
jnp
jns
xor
adc
mov
lcall
jge
lods
add
mov
das
or
mov
push
outsl
mov
ss
or
call
and
mov
push
je
sbb
sbb
sbb
scas
pop
inc
or
decl
fcmovnb
test
cwtl
xor
data16
push
cmp
dec
sub
jmp
hlt
cmp
and
cmp
sub
xor
pop
inc
xchg
test
jle
cmc
xchg
lret
aam
xchg
push
cli
loope
jmp
jge
adc
mov
push
sbb
out
bound
scas
mov
enter
scas
xchg
push
aam
jg
pop
in
jmp
jbe
jp
int
call
rorl
inc
imul
jge
cmp
push
pop
mov
add
fnop
inc
mov
xor
xchg
mov
out
mov
dec
add
jo
stos
lds
xchg
lret
inc
cmc
push
jns
mov
pop
add
sti
aam
out
jg
inc
or
inc
pop
push
insb
xchg
fs
test
sbb
xor
fstps
mov
call
jp
fdivl
arpl
jg
fisubrl
lcall
daa
sahf
fwait
mov
add
inc
mov
and
mov
adc
stos
rcr
lret
jecxz
and
xlat
pop
data16
mov
cmp
adc
adc
pusha
push
sbb
repnz
push
cmp
mov
scas
add
js
add
decl
xor
ja
cwtl
mov
data16
addr16
sbb
loope
bound
gs
pop
ljmp
fwait
xor
fwait
in
es
add
dec
aas
ret
cpuid
sub
repz
out
push
enter
add
jle
sub
mov
roll
and
add
lods
xchg
cmp
imul
cltd
insb
pop
cltd
pop
dec
xlat
cltd
iret
scas
mov
push
push
inc
dec
jbe
mov
int3
inc
jo
loopne
test
xchg
mov
sbb
mov
mov
lahf
je
adc
mov
sub
mov
cmc
dec
bound
das
jmp
aaa
ljmp
xlat
cmp
xchg
mov
dec
inc
lahf
xchg
fidivrl
les
and
iret
xor
push
sbb
scas
mov
inc
fsubs
mov
mov
cld
into
hlt
clc
ficompl
outsb
xor
idiv
lods
hlt
imul
push
cmp
call
jge
in
mov
rol
or
jge
push
sbb
sub
mov
xchg
and
loope
and
mov
sahf
filds
rcr
pop
adc
xchg
add
cld
xor
inc
movsb
and
mov
lea
mov
inc
jne
mov
sub
push
test
adc
mov
cli
dec
and
inc
fwait
iret
dec
cmc
push
mov
aas
ss
cs
das
nop
jle
adc
sub
in
hlt
xor
mov
mov
mov
dec
xor
sbbb
mov
test
mov
iret
or
or
mov
sbb
mov
addb
sbb
lds
jecxz
daa
sbb
sbb
das
sub
pop
arpl
mov
test
icebp
outsl
mov
inc
mov
rcrb
xlat
sahf
rcrb
mov
mov
push
rorb
mov
sub
ret
lret
and
push
dec
xchg
sarl
fstpt
stos
push
push
sub
scas
and
mov
dec
xchg
cmp
inc
push
mov
inc
sbb
mov
add
movsb
shr
out
pushf
cmpsb
push
aas
sbb
xlat
enter
add
or
xchg
fcmovnb
push
pushf
lds
xlat
xchg
xchg
jno
add
std
sbb
dec
sbb
aam
jle
ljmp
mov
movsb
xor
sbb
push
pop
iret
mov
add
mov
add
mov
adc
xor
dec
iret
xor
adc
inc
jne
push
cwtl
daa
pop
out
hlt
movsl
mov
movsl
lods
add
push
outsb
leave
cmp
sbb
bts
ficompl
lret
xchg
mov
dec
pop
int
popf
xchg
push
repz
pop
test
xor
gs
repz
sahf
push
imul
inc
in
and
and
imul
pop
dec
rcll
sub
jge
inc
pop
fnsave
sbb
scas
rcrl
outsl
inc
arpl
push
add
mov
pop
sbb
and
xor
adc
movsb
mov
xchg
mov
cmp
pop
add
ja
daa
daa
repz
mov
shll
aas
scas
mov
push
insl
arpl
stos
icebp
subl
cwtl
adc
mov
push
jo
pop
testb
sbb
push
sbb
fdivrl
push
lea
les
jne
xchg
test
fwait
cmpl
shrb
outsl
xchg
aam
mov
cmpsl
and
xlat
in
push
cld
dec
inc
lret
je
sahf
adc
ss
jecxz
xchg
push
add
sub
test
nop
xchg
out
push
clc
pop
mov
addr16
sub
das
pop
add
fnstcw
clc
rorl
sub
sbbl
gs
enter
lret
fisubl
mov
jns
push
add
jg
aaa
jnp
in
or
sub
ja
ret
push
dec
fiadds
pop
dec
sub
jg
mov
hlt
cmpsl
cmpsl
jo
lock
mov
mov
bound
in
and
ficomps
ds
int
jbe
mov
push
lahf
test
out
lret
cmpsl
cmc
jae
and
fwait
mov
lods
xlat
outsb
loopne
adc
add
out
sti
fldcw
sbbb
pop
mov
scas
xchg
sti
icebp
sub
and
jg
shlb
loop
lahf
test
dec
test
outsl
fsub
mov
xor
mov
enter
jle
mov
xor
jp
testl
dec
dec
inc
in
jmp
xor
xlat
jmp
sti
cmpsb
dec
sti
inc
clc
push
popa
mov
ret
cltd
sbb
push
mov
in
test
mov
jb
iret
mov
leave
dec
sub
scas
jl
ret
cmpb
inc
mov
icebp
mov
jmp
mov
fsubrs
xchg
testb
inc
add
jno
sbb
fcompp
lods
sahf
jo
inc
addb
jns
or
mov
pop
sub
dec
xchg
push
sti
cwtl
mov
jp
test
call
lods
loopne
xor
lahf
jge
call
push
fsubl
pop
mov
inc
mov
push
fiaddl
lcall
iret
cmp
sub
cwtl
pop
lea
bound
xchg
addl
xor
mov
dec
cmp
repnz
lret
xchg
cmp
enter
mov
stc
stos
aam
cs
test
push
paddusb
frstor
fildll
lcall
ss
pop
imul
xor
das
xchg
push
fnstcw
jp
sbb
loope
add
addr16
jno
repnz
test
xchg
adc
push
lcall
aas
test
push
out
lcall
shlb
sbb
jmp
push
aad
xor
inc
push
mov
test
fwait
mov
cmp
pop
adc
ljmp
call
daa
fimuls
pop
xchg
or
sbb
mov
fsub
cs
sub
lock
shll
addr16
pop
xchg
shr
lock
xor
xor
xchg
pop
mull
mov
aam
mov
mov
mov
daa
push
mov
xor
or
xor
arpl
dec
mov
test
mov
adc
aad
enter
in
cmp
mov
leave
inc
notb
dec
fldenv
ja
and
loope
popf
jle
xchg
jl
aam
les
jbe
insl
inc
int
lret
movsl
add
data16
bound
cld
js
and
lret
dec
xchg
stos
lcall
and
mov
sahf
lret
xchg
xchg
fimull
shlb
test
dec
adc
cmc
sahf
pusha
sbb
fwait
insl
mov
push
stos
sub
and
or
dec
inc
xor
sahf
add
cwtl
sti
lods
mov
mov
fistpl
mov
pop
mov
xchg
int3
add
aam
xor
mov
fmuls
add
jp
mov
dec
cwtl
sbb
jp
pop
pop
mov
inc
rolb
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
