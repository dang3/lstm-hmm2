sub
add
add
xor
add
add
mov
pop
add
dec
or
mov
add
xchg
inc
add
add
dec
inc
add
sub
add
in
sub
mov
add
mov
push
mov
mov
or
sub
push
mov
cmp
jne
cmp
jne
mov
mov
xor
sub
cmp
jne
sub
add
mov
xor
sub
and
cmp
je
add
sub
add
mov
mov
add
sub
sub
cmp
je
xor
push
or
cmp
jne
mov
xor
cmp
jne
cmp
je
mov
mov
cmp
je
mov
cmp
je
and
add
cmp
je
mov
and
mov
or
and
sub
cmp
jne
sub
sub
and
mov
mov
sub
and
add
or
call
mov
mov
cmp
jne
add
and
add
mov
sub
cmp
jne
add
add
and
cmp
jne
cmp
jne
add
cmp
je
mov
add
mov
test
je
sub
add
xor
add
cmp
je
sub
mov
add
mov
add
or
xor
and
sub
mov
xor
sub
and
sub
sub
test
je
mov
or
mov
add
and
add
and
add
sub
cmp
jne
mov
mov
add
add
add
cmp
jne
cmp
jne
mov
cmp
je
and
and
mov
mov
add
sub
cmp
jne
add
add
sub
mov
and
sub
mov
mov
add
sub
cmp
je
add
cmp
je
mov
test
jne
mov
sub
mov
sub
add
sub
call
or
cmp
jne
mov
mov
xor
mov
xor
add
sub
add
cmp
jne
or
mov
add
add
add
mov
add
and
mov
mov
cmp
je
and
add
mov
add
or
add
add
mov
xor
xor
or
sub
add
sub
and
mov
xor
sub
add
and
and
cmp
jne
cmp
jne
cmp
jne
sub
add
mov
cmp
jne
sub
mov
mov
cmp
je
sub
sub
add
test
je
add
mov
sub
test
je
mov
cmp
jne
xor
or
xor
mov
sub
add
add
sub
cmp
jne
cmp
jne
mov
add
cmp
je
mov
mov
xor
sub
cmp
je
cmp
je
test
jne
mov
add
and
add
mov
cmp
je
add
mov
sub
mov
cmp
je
mov
add
cmp
jne
mov
and
mov
or
sub
add
cmp
jne
mov
cmp
jne
sub
cmp
jne
mov
mov
cmp
jne
cmp
je
cmp
je
sub
sub
test
je
sub
mov
mov
sub
sub
and
cmp
je
sub
mov
sub
mov
test
je
cmp
je
mov
mov
cmp
je
mov
and
mov
add
add
cmp
je
add
mov
or
mov
sub
sub
or
or
cmp
je
mov
add
mov
cmp
je
add
mov
and
cmp
jne
cmp
je
add
cmp
je
cmp
jne
xor
and
xor
add
cmp
jne
add
sub
add
sub
mov
mov
sub
cmp
jne
test
jne
and
and
and
sub
cmp
je
mov
mov
cmp
je
xor
and
add
mov
or
cmp
jne
cmp
je
mov
mov
sub
and
and
sub
add
add
mov
lea
push
call
sub
and
cmp
jne
or
add
cmp
je
sub
add
mov
mov
or
cmp
je
sub
add
sub
mov
sub
mov
cmp
je
mov
cmp
je
mov
sub
mov
sub
sub
and
sub
mov
sub
sub
xor
xor
add
and
cmp
jne
mov
mov
cmp
jne
mov
mov
or
cmp
jne
mov
add
sub
cmp
jne
add
sub
sub
cmp
jne
mov
mov
add
sub
add
add
add
cmp
jne
add
cmp
je
xor
add
or
cmp
je
mov
cmp
jne
test
jne
mov
mov
add
cmp
jne
mov
mov
xor
or
mov
cmp
jne
xor
xor
mov
cmp
jne
sub
cmp
jne
and
add
mov
cmp
je
mov
add
xor
cmp
je
mov
xor
cmp
jne
add
add
mov
add
sub
cmp
je
cmp
je
add
mov
and
and
add
sub
cmp
je
and
and
cmp
je
mov
and
xor
add
and
cmp
jne
add
and
mov
add
mov
mov
cmp
jne
sub
mov
xor
or
mov
mov
cmp
je
mov
add
sub
sub
add
xor
cmp
je
or
cmp
jne
sub
add
sub
mov
add
xor
add
sub
add
sub
xor
sub
add
add
and
mov
sub
add
sub
sub
mov
add
mov
cmp
je
mov
mov
add
add
sub
cmp
jne
cmp
jne
mov
cmp
jne
and
add
add
mov
add
mov
add
add
sub
sub
cmp
je
cmp
jne
mov
sub
xor
add
test
jne
or
xor
xor
sub
add
and
cmp
jne
sub
sub
and
add
mov
mov
add
or
cmp
jne
mov
mov
sub
add
cmp
je
cmp
jne
xor
test
jne
sub
mov
sub
cmp
jne
test
je
add
add
sub
and
sub
add
add
mov
sub
sub
sub
mov
cmp
je
mov
test
jne
cmp
jne
sub
sub
mov
mov
sub
sub
mov
cmp
jne
mov
mov
sub
add
cmp
je
cmp
jne
cmp
jne
and
mov
add
mov
and
and
cmp
jne
and
and
mov
xor
or
and
add
cmp
je
mov
mov
sub
add
cmp
je
cmp
je
cmp
je
mov
sub
mov
sub
cmp
je
sub
mov
add
sub
add
add
mov
and
cmp
jne
sub
mov
and
add
cmp
je
mov
and
and
sub
mov
sub
sub
test
jne
cmp
je
mov
mov
mov
sub
mov
lea
mov
and
mov
and
cmp
jne
mov
mov
cmp
je
mov
mov
and
add
and
add
add
sub
sub
mov
mov
mov
add
cmp
je
mov
xor
or
mov
sub
and
push
mov
mov
push
xor
mov
add
cmp
je
mov
or
mov
and
sub
test
jne
cmp
je
cmp
je
mov
mov
add
add
sub
sub
add
mov
add
mov
add
add
sub
add
add
cmp
je
mov
xor
sub
add
cmp
je
cmp
jne
mov
add
mov
or
test
je
add
sub
cmp
jne
mov
mov
and
add
call
cmp
jne
mov
cmp
jne
mov
cmp
je
sub
xor
sub
add
cmp
jne
mov
and
or
and
mov
xor
add
and
add
mov
add
cmp
je
mov
or
cmp
je
xor
mov
test
jne
add
sub
mov
cmp
je
sub
mov
cmp
jne
and
mov
cmp
jne
sub
mov
and
xor
add
add
cmp
jne
mov
add
sub
mov
add
cmp
jne
cmp
jne
mov
or
xor
sub
add
and
sub
sub
or
add
add
shr
add
cmp
jne
add
cmp
je
sub
mov
or
mov
add
sub
sub
cmp
je
mov
mov
test
je
xor
mov
mov
add
add
cmp
jne
cmp
je
add
mov
add
sub
cmp
je
cmp
jne
mov
xor
cmp
jne
add
or
add
sub
mov
mov
mov
test
je
sub
sub
add
add
sub
and
sub
test
jne
add
sub
cmp
jne
mov
mov
add
add
cmp
jne
add
mov
cmp
je
and
mov
sub
mov
cmp
jne
mov
sub
mov
sub
add
cmp
je
cmp
jne
cmp
jne
sub
cmp
jne
add
and
add
test
je
mov
mov
add
and
sub
cmp
je
add
xor
mov
sub
sub
and
sub
add
add
mov
xor
and
sub
cmp
je
add
call
xor
mov
mov
mov
and
sub
mov
mov
mov
cmp
je
cmp
je
xor
add
add
mov
sub
or
sub
and
sub
cmp
je
mov
mov
or
xor
add
add
cmp
je
mov
mov
cmp
jne
add
add
mov
xor
xor
add
add
sub
cmp
jne
add
add
add
pushl
push
pushl
call
mov
and
and
addl
mov
mov
cmp
je
sub
call
sub
xor
sub
mov
mov
add
add
sub
and
mov
mov
add
and
sub
mov
cmp
je
cmp
jne
and
mov
cmp
jne
or
xor
add
mov
and
cmp
je
cmp
jne
mov
add
mov
add
test
je
cmp
je
add
and
xor
or
add
cmp
je
mov
sub
sub
add
mov
add
sub
add
cmp
je
mov
mov
or
add
add
add
add
add
add
cmp
je
mov
and
mov
cmp
je
mov
add
or
mov
sub
or
cmp
jne
cmp
jne
mov
add
cmp
jne
or
mov
sub
add
mov
add
sub
sub
sub
add
push
call
mov
mov
sub
sub
sub
and
mov
xor
pop
sub
pop
sub
sub
pop
cmp
je
add
mov
and
cmp
jne
cmp
je
cmp
je
test
je
xor
cmp
je
add
sub
and
mov
cmp
jne
xor
mov
cmp
je
sub
xor
mov
or
cmp
jne
add
sub
cmp
je
sub
cmp
je
cmp
jne
mov
mov
add
add
add
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
xor
add
and
and
mov
push
mov
mov
sub
mov
push
add
and
or
sub
sub
sub
push
add
add
sub
and
xor
sub
or
mov
cmp
je
or
mov
add
mov
cmp
jne
add
mov
xor
and
xor
cmp
je
add
sub
movl
mov
add
mov
and
add
sub
or
add
add
cmp
jne
mov
mov
sub
add
cmp
je
mov
mov
and
add
sub
add
and
test
jne
mov
or
add
add
test
jne
xor
mov
cmp
jne
cmp
je
cmp
jne
mov
and
sub
cmp
jne
or
mov
sub
cmp
jne
mov
sub
mov
add
cmp
jne
mov
mov
cmp
je
mov
cmp
jne
mov
and
sub
cmp
je
sub
xor
mov
sub
or
cmp
je
xor
sub
and
mov
cmp
je
cmp
jne
add
call
or
mov
mov
mov
or
sub
cmp
jne
xor
mov
cmp
je
cmp
jne
mov
and
or
or
mov
sub
sub
cmp
je
mov
sub
add
call
mov
mov
sub
add
cmp
jne
cmp
jne
mov
mov
mov
sub
cmp
jne
add
mov
mov
sub
add
sub
add
and
xor
cmp
jne
mov
cmp
jne
mov
sub
mov
add
sub
add
sub
add
add
add
cmp
jne
mov
mov
add
cmp
jne
mov
mov
add
cmp
je
mov
mov
mov
cmp
jne
cmp
je
mov
add
cmp
je
cmp
jne
mov
add
sub
add
add
sub
add
cmp
je
mov
mov
sub
and
sub
add
call
mov
add
cmp
je
add
addl
mov
sub
mov
cmp
je
mov
cmp
je
mov
mov
cmp
je
sub
xor
mov
add
add
sub
or
add
push
call
mov
add
mov
sub
cmp
je
add
mov
sub
mov
sub
add
or
je
xor
xor
sub
sub
and
cmp
je
mov
mov
cmp
jne
or
add
add
mov
mov
sub
sub
mov
add
and
cmp
je
cmp
je
mov
xor
or
cmp
jne
mov
add
mov
test
jne
mov
mov
add
add
sub
sub
cmp
jne
mov
and
mov
mov
cmp
jne
add
mov
mov
and
mov
mov
addl
mov
test
jne
add
lea
mov
cmp
jne
mov
add
mov
cmp
jne
cmp
je
mov
mov
add
add
mov
test
je
mov
mov
add
sub
cmp
je
mov
cmp
jne
add
or
mov
and
mov
cmp
jne
cmp
je
sub
mov
add
or
or
sub
sub
test
jne
cmp
je
mov
mov
cmp
je
and
mov
cmp
jne
add
and
cmp
je
mov
sub
cmp
jne
test
je
cmp
jne
test
jne
mov
cmp
je
and
xor
mov
cmp
jne
mov
mov
add
sub
sub
sub
cmp
je
cmp
jne
and
cmp
je
mov
sub
sub
cmp
jne
mov
sub
and
mov
cmp
jne
mov
add
mov
sub
add
add
cmp
jne
mov
add
cmp
je
mov
sub
or
cmp
jne
mov
cmp
jne
add
add
mov
mov
sub
cmp
jne
mov
add
xor
sub
add
add
add
cmp
je
mov
add
add
add
xor
or
cmp
jne
mov
mov
and
test
je
cmp
jne
and
cmp
je
mov
mov
test
jne
mov
sub
cmp
je
add
cmp
je
or
mov
test
jne
cmp
jne
mov
cmp
je
and
add
cmp
je
sub
add
and
mov
cmp
je
add
add
mov
sub
inc
xor
sub
add
and
mov
add
sub
cmp
je
mov
cmp
jne
mov
add
sub
mov
sub
cmp
je
mov
and
add
mov
mov
add
sub
cmp
je
mov
sub
or
cmp
je
cmp
jne
cmp
jne
mov
cmp
je
or
mov
mov
cmp
jne
test
jne
cmp
je
cmp
jne
add
add
cmp
je
add
sub
add
mov
mov
test
jne
test
je
mov
mov
or
add
add
and
add
sub
sub
sub
cmp
jne
mov
mov
cmp
je
mov
sub
cmp
je
cmp
je
mov
add
or
add
xor
mov
add
and
or
sub
mov
cmp
je
xor
sub
cmp
jne
sub
mov
cmp
je
add
add
add
sub
test
je
mov
cmp
jne
test
jne
mov
or
and
xor
add
sub
mov
xor
and
add
sub
sub
cmp
jne
or
mov
mov
or
sub
sub
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
mov
sub
sub
sub
mov
add
cmp
je
mov
cmp
je
or
mov
mov
sub
cmp
je
add
add
mov
mov
sub
and
sub
add
and
add
sub
add
add
test
je
or
add
sub
xor
mov
add
mov
mov
mov
cmp
je
mov
mov
xor
cmp
je
cmp
je
mov
mov
add
sub
sub
sub
sub
mov
cmp
jne
add
mov
cmp
je
add
sub
mov
test
jne
mov
xor
add
mov
add
pop
cmp
jne
or
mov
sub
cmp
jne
mov
sub
add
test
jne
cmp
je
mov
xor
mov
sub
mov
and
or
cmp
jne
and
mov
cmp
je
cmp
je
mov
mov
sub
and
cmp
jne
cmp
je
add
add
mov
sub
cmp
jne
cmp
jne
add
mov
sub
and
mov
add
add
pop
mov
sub
add
cmp
je
sub
mov
mov
cmp
je
sub
mov
mov
add
xor
add
add
cmp
jne
or
or
or
or
pop
cmp
je
and
sub
and
and
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
or
or
push
mov
mov
add
sub
cmp
jne
mov
mov
test
jne
mov
sub
mov
cmp
je
mov
mov
or
sub
add
cmp
je
add
add
add
sub
xor
push
mov
add
mov
add
sub
sub
sub
sub
mov
mov
add
sub
add
or
add
add
add
sub
add
add
sub
sub
sub
add
and
add
and
add
add
mov
mov
add
add
add
sub
sub
add
sub
cmp
jne
mov
mov
add
sub
sub
sub
test
je
add
mov
add
mov
test
je
add
or
sub
sub
cmp
je
xor
mov
mov
cmp
je
sub
and
add
cmp
je
mov
mov
add
cmp
je
or
mov
add
cmp
jne
mov
mov
cmp
je
add
cmp
jne
mov
mov
cmp
je
cmp
je
mov
cmp
je
mov
and
mov
add
add
sub
cmp
jne
sub
mov
mov
test
jne
mov
mov
add
add
mov
rdtsc
mov
mov
add
add
test
jne
mov
add
cmp
je
test
je
or
sub
mov
mov
add
sub
and
and
add
add
cmp
jne
mov
add
cmp
je
mov
cmp
je
and
cmp
je
sub
add
xor
cmp
je
add
sub
add
add
cmp
je
sub
cmp
je
mov
mov
add
or
cmp
je
mov
add
cmp
je
and
mov
add
mov
cmp
jne
mov
cmp
je
cmp
je
cmp
je
add
cmp
jne
add
mov
cmp
je
add
sub
mov
mov
sub
cmp
je
sub
mov
mov
add
cmp
jne
mov
sub
and
mov
sub
sub
cmp
jne
mov
mov
sub
test
je
and
xor
mov
xor
cmp
jne
mov
test
jne
mov
cmp
jne
or
add
cmp
jne
add
mov
test
je
mov
cmp
jne
sub
mov
test
je
mov
add
cmp
jne
cmp
jne
sub
and
add
mov
or
add
sub
add
and
sub
cmp
je
cmp
je
mov
mov
cmp
jne
mov
add
add
mov
cmp
jne
sub
mov
or
or
mov
sub
and
mov
test
jne
test
jne
mov
mov
add
mov
mov
add
sub
add
add
and
test
je
add
add
rdtsc
sub
mov
add
sub
mov
sub
cmp
jne
xor
cmp
je
mov
add
mov
add
mov
sub
add
or
sub
sub
add
add
and
cmp
jne
add
sub
cmp
jne
sub
xor
add
add
and
add
add
cmp
je
sub
sub
sub
cmp
jne
mov
and
xor
cmp
je
add
sub
mov
sub
xor
sub
cmp
je
sub
and
test
je
cmp
je
mov
and
sub
add
cmp
je
cmp
je
mov
test
jne
add
or
pop
mov
add
pop
sub
mov
xor
cmp
je
sub
or
and
cmp
je
cmp
je
and
mov
mov
add
add
or
add
add
sub
and
cmp
jne
sub
mov
sub
cmp
jne
mov
mov
add
sub
or
cmp
je
cmp
jne
mov
add
mov
sub
or
cmp
je
cmp
je
sub
mov
mov
cmp
je
sub
add
mov
add
xor
pop
xor
xor
add
test
je
mov
test
je
and
sub
sub
cmp
jne
cmp
je
and
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
cmp
je
mov
mov
add
add
sub
cmp
je
cmp
je
add
mov
test
je
xor
mov
cmp
jne
add
sub
mov
cmp
jne
xor
cmp
je
add
add
mov
mov
sub
add
add
sub
sub
add
push
cmp
jne
mov
mov
cmp
je
mov
sub
mov
add
cmp
jne
mov
mov
and
cmp
jne
mov
cmp
jne
add
mov
mov
cmp
je
cmp
jne
add
or
mov
mov
sub
add
cmp
je
add
mov
test
je
mov
mov
and
and
xor
add
push
add
mov
mov
add
cmp
je
mov
and
and
sub
cmp
jne
cmp
jne
mov
mov
sub
sub
cmp
jne
cmp
je
mov
mov
add
sub
sub
sub
add
mov
cmp
jne
cmp
je
mov
test
je
sub
mov
mov
sub
add
mov
sub
sub
add
test
jne
mov
mov
or
sub
sub
cmp
jne
mov
add
mov
and
sub
cmp
jne
mov
mov
cmp
jne
mov
add
mov
sub
sub
sub
cmp
jne
cmp
jne
cmp
je
mov
or
or
sub
sub
cmp
je
decl
sub
subl
xorl
roll
add
jmp
sub
mov
xor
or
mov
add
add
xor
mov
mov
add
add
sub
pop
add
and
mov
mov
cmp
je
add
mov
sub
cmp
je
add
mov
sub
mov
sub
add
cmp
je
mov
add
xor
add
add
cmp
jne
sub
add
add
add
or
sub
sub
pop
add
sub
pop
xor
add
sub
mov
sub
cmp
jne
mov
mov
add
add
add
cmp
jne
add
mov
sub
add
sub
mov
or
test
jne
mov
sub
sub
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
mov
add
and
push
add
push
mov
mov
sub
add
test
jne
mov
add
mov
add
and
cmp
je
mov
add
sub
add
xor
or
mov
sub
test
je
add
sub
add
mov
cmp
jne
and
mov
mov
add
and
add
test
je
sub
cmp
jne
sub
xor
sub
add
add
add
push
add
mov
mov
cmp
je
sub
mov
sub
sub
cmp
je
sub
cmp
jne
add
mov
mov
sub
sub
cmp
je
test
jne
cmp
jne
sub
cmp
je
add
mov
xor
mov
add
cmp
je
add
mov
test
je
test
je
cmp
jne
mov
xor
add
add
cmp
jne
and
mov
xor
cmp
je
sub
mov
sub
test
je
sub
mov
add
mov
add
add
sub
add
cmp
jne
mov
mov
add
add
sub
sub
test
jne
cmp
je
sub
cmp
je
mov
mov
sub
sub
sub
mov
cmp
jne
add
sub
mov
add
xor
sub
add
add
sub
add
add
cmp
je
mov
mov
cmp
je
add
mov
add
and
cmp
je
test
je
cmp
je
sub
mov
and
mov
cmp
je
mov
sub
sub
mov
add
and
sub
and
and
add
add
push
add
and
sub
mov
mov
cmp
jne
sub
sub
cmp
jne
mov
mov
add
add
sub
cmp
je
cmp
je
mov
cmp
jne
add
mov
mov
sub
sub
add
add
and
cmp
je
or
add
add
mov
test
je
add
mov
cmp
jne
mov
and
sub
mov
cmp
je
add
or
sub
cmp
jne
add
mov
sub
mov
add
cmp
je
add
mov
mov
or
add
cmp
jne
sub
mov
and
mov
add
or
sub
and
cmp
jne
sub
sub
push
sub
push
add
push
sub
mov
cmp
je
or
mov
mov
or
sub
sub
sub
mov
mov
sub
cmp
jne
test
je
mov
cmp
je
xor
sub
mov
add
add
add
sub
cmp
jne
sub
mov
sub
mov
cmp
je
sub
mov
or
sub
test
jne
xor
and
and
or
mov
mov
add
sub
call
sub
mov
add
mov
sub
sub
add
mov
mov
mov
add
cmp
jne
add
mov
mov
cmp
jne
sub
test
jne
and
add
mov
mov
add
sub
sub
test
je
sub
mov
mov
cmp
jne
and
mov
mov
add
add
mov
add
sub
add
cmp
jne
and
cmp
jne
mov
add
and
mov
add
test
je
and
sub
add
test
je
mov
cmp
je
sub
sub
mov
sub
mov
sub
cmp
je
mov
mov
add
add
sub
sub
add
add
sub
add
mov
mov
add
sub
sub
sub
add
cmp
je
cmp
jne
sub
mov
mov
cmp
jne
mov
and
mov
add
cmp
je
sub
mov
add
mov
mov
or
add
xor
or
cmp
jne
mov
add
cmp
je
mov
mov
sub
mov
or
sub
or
add
mov
mov
mov
test
je
cmp
je
sub
mov
cmp
jne
xor
or
cmp
je
mov
mov
mov
or
add
test
je
mov
mov
sub
sub
cmp
je
cmp
jne
or
mov
sub
or
sub
sub
add
sub
mov
mov
mov
and
add
cmp
je
cmp
je
sub
add
mov
add
add
mov
mov
add
or
je
add
cmp
jne
cmp
jne
cmp
jne
test
jne
sub
test
jne
test
je
or
cmp
je
test
jne
add
repnz
mov
add
sub
addl
mov
add
jmp
mov
mov
mov
add
add
sub
sub
add
mov
add
mov
sub
mov
mov
test
je
cmp
je
sub
pop
sub
mov
mov
and
cmp
je
cmp
jne
cmp
je
mov
mov
add
add
mov
cmp
je
cmp
jne
or
xor
mov
add
mov
add
sub
add
and
cmp
jne
add
and
mov
or
mov
cmp
jne
sub
add
pop
mov
cmp
jne
test
jne
mov
xor
mov
add
add
add
add
or
add
sub
and
pop
mov
mov
add
add
cmp
je
add
cmp
je
add
test
jne
add
cmp
je
mov
add
add
mov
cmp
jne
xor
add
or
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
add
sub
or
and
add
push
mov
sub
push
add
push
xor
mov
and
or
mov
cmp
je
and
mov
sub
sub
mov
mov
mov
and
or
add
add
or
mov
xor
and
xor
sub
cmp
jne
add
mov
add
mov
add
add
or
or
sub
and
cmp
je
cmp
jne
sub
mov
sub
cmp
jne
sub
mov
mov
sub
xor
or
sub
sub
add
sub
cmp
jne
mov
sub
cmp
je
mov
add
mov
sub
cmp
je
mov
cmp
je
xor
add
mov
add
sub
add
cmp
jne
sub
add
mov
or
sub
sub
mov
xor
or
cmp
je
add
sub
mov
or
mov
add
xor
and
test
je
add
mov
mov
add
add
cmp
jne
mov
add
mov
add
add
and
and
add
add
test
jne
add
mov
cmp
jne
test
jne
test
je
add
or
cmp
jne
mov
mov
mov
mov
add
mov
sub
test
jne
or
pop
sub
pop
mov
add
mov
cmp
jne
mov
mov
sub
sub
cmp
jne
cmp
je
cmp
je
mov
mov
or
cmp
jne
cmp
je
mov
add
add
mov
and
cmp
jne
xor
cmp
je
cmp
je
sub
add
mov
add
sub
sub
add
sub
add
test
je
mov
pop
mov
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
je
sub
push
mov
sub
mov
add
add
add
mov
push
mov
cmp
jne
mov
sub
test
jne
test
jne
mov
mov
xor
and
sub
cmp
jne
add
mov
or
mov
cmp
jne
or
mov
mov
xor
cmp
je
cmp
je
mov
cmp
jne
test
je
mov
mov
sub
cmp
je
sub
add
add
sub
sub
cmp
jne
mov
and
mov
sub
sub
cmp
jne
cmp
jne
mov
mov
cmp
jne
xor
add
cmp
je
sub
mov
test
je
mov
cmp
jne
mov
or
mov
cmp
je
sub
sub
add
cmp
je
sub
test
jne
xor
sub
mov
and
cmp
jne
cmp
jne
mov
mov
test
jne
sub
cmp
je
mov
cmp
je
mov
xor
mov
sub
sub
sub
add
sub
sub
add
sub
sub
add
cmp
je
sub
mov
sub
cmp
je
cmp
jne
cmp
je
add
add
pop
sub
pop
add
pop
xor
mov
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
or
sub
add
and
and
and
mov
push
add
add
xor
mov
sub
sub
add
push
or
push
and
add
mov
sub
xor
sub
mov
mov
add
and
and
mov
sub
add
sub
mov
add
sub
cmp
je
mov
mov
add
sub
add
pop
mov
and
xor
add
cmp
je
add
pop
add
pop
mov
mov
cmp
jne
add
mov
or
xor
add
sub
mov
sub
sub
and
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
push
sub
mov
xor
sub
sub
sub
push
sub
xor
xor
or
sub
or
sub
push
sub
sub
mov
add
mov
mov
sub
add
mov
add
and
sub
mov
test
je
mov
cmp
je
add
xor
mov
mov
sub
sub
sub
add
pop
mov
pop
and
pop
cmp
je
add
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
sub
cmp
je
mov
push
mov
mov
add
add
or
add
add
cmp
jne
mov
xor
mov
cmp
jne
cmp
jne
mov
test
jne
cmp
jne
xor
sub
mov
mov
or
sub
sub
cmp
jne
xor
mov
mov
cmp
jne
mov
or
mov
mov
add
sub
sub
add
sub
xor
cmp
je
sub
mov
mov
sub
add
cmp
jne
mov
mov
add
sub
or
sub
or
cmp
jne
mov
mov
sub
and
add
add
add
push
sub
or
mov
xor
sub
and
and
add
and
or
add
mov
add
cmp
jne
and
mov
pop
mov
and
xor
cmp
je
cmp
je
cmp
jne
add
sub
mov
and
mov
sub
or
add
xor
add
sub
cmp
je
sub
pop
xor
add
cmp
jne
xor
mov
cmp
je
add
mov
mov
sub
add
add
add
cmp
je
xor
mov
and
add
xor
add
test
jne
add
pop
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
push
sub
push
sub
mov
add
mov
add
sub
add
add
push
mov
or
mov
test
je
mov
mov
cmp
je
sub
sub
cmp
je
and
mov
add
and
mov
or
xor
or
sub
sub
xor
pop
mov
add
pop
sub
mov
mov
and
xor
cmp
je
mov
test
je
mov
add
add
add
test
je
add
and
add
mov
mov
and
add
mov
add
pop
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
sub
or
add
and
mov
push
mov
mov
cmp
je
mov
and
sub
sub
mov
sub
add
push
add
sub
add
push
cmp
je
and
mov
sub
mov
mov
test
je
mov
mov
sub
cmp
jne
sub
sub
xor
add
and
xor
sub
add
sub
add
and
test
jne
mov
xor
sub
cmp
je
add
and
sub
mov
mov
cmp
jne
xor
and
sub
mov
cmp
jne
mov
xor
cmp
je
mov
sub
mov
add
sub
sub
and
cmp
jne
sub
sub
mov
and
or
sub
or
pop
add
pop
add
add
xor
mov
add
xor
sub
cmp
je
sub
add
pop
mov
add
cmp
jne
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
add
add
or
add
push
add
push
sub
push
mov
sub
mov
add
add
cmp
jne
mov
mov
test
jne
mov
sub
sub
mov
add
sub
cmp
je
mov
and
sub
or
cmp
je
add
mov
mov
add
sub
add
and
and
test
je
mov
sub
sub
xor
mov
test
jne
mov
sub
mov
and
sub
add
add
cmp
je
mov
add
mov
mov
sub
sub
add
add
cmp
je
sub
cmp
je
and
xor
mov
add
test
je
sub
mov
mov
cmp
je
mov
cmp
je
mov
mov
sub
cmp
jne
mov
cmp
jne
add
and
mov
cmp
jne
cmp
je
add
add
sub
mov
sub
or
sub
sub
xor
mov
add
mov
and
add
cmp
jne
sub
pop
cmp
jne
mov
sub
and
add
mov
cmp
je
sub
sub
sub
pop
or
or
pop
mov
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
sub
sub
mov
push
mov
and
or
push
mov
mov
or
or
push
sub
and
and
mov
xor
sub
add
sub
sub
add
add
and
and
add
sub
mov
test
je
mov
or
cmp
je
add
mov
mov
sub
add
sub
pop
test
je
sub
and
mov
or
mov
sub
and
test
je
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
and
add
sub
mov
add
cmp
je
or
mov
cmp
je
add
cmp
je
sub
test
je
mov
mov
sub
cmp
je
mov
mov
sub
test
jne
or
sub
add
and
mov
mov
test
je
xor
and
mov
add
or
sub
add
sub
add
and
add
pop
xor
mov
add
add
cmp
jne
mov
xor
cmp
je
sub
mov
mov
sub
add
cmp
je
mov
add
mov
sub
add
sub
cmp
jne
mov
sub
add
add
sub
and
add
pop
cmp
jne
cmp
jne
cmp
je
cmp
jne
or
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
sub
mov
push
mov
mov
add
sub
and
and
add
sub
add
push
mov
mov
add
test
jne
mov
add
sub
xor
push
cmp
je
add
mov
mov
mov
sub
sub
add
mov
add
mov
mov
sub
add
cmp
jne
test
je
cmp
jne
cmp
jne
sub
pop
and
xor
mov
sub
sub
and
add
and
mov
pop
mov
sub
sub
mov
add
sub
sub
pop
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
sub
add
and
and
push
mov
mov
add
sub
push
mov
test
je
or
add
add
mov
sub
sub
test
je
mov
cmp
je
mov
mov
sub
test
jne
cmp
jne
mov
mov
add
add
add
and
add
cmp
je
mov
mov
mov
xor
add
mov
mov
add
or
sub
mov
mov
xor
add
add
and
sub
mov
add
mov
sub
cmp
je
mov
mov
add
or
mov
add
sub
xor
sub
mov
pop
mov
add
sub
sub
sub
add
xor
add
cmp
je
sub
mov
sub
mov
sub
and
sub
and
pop
sub
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
or
sub
and
mov
push
sub
push
sub
push
mov
sub
mov
mov
cmp
jne
add
mov
mov
sub
and
add
sub
sub
mov
mov
add
add
sub
or
add
add
add
sub
sub
pop
mov
mov
sub
add
sub
pop
sub
pop
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
xor
push
mov
add
sub
sub
mov
xor
cmp
je
add
cmp
je
mov
cmp
jne
add
mov
and
sub
mov
push
mov
add
or
and
mov
and
mov
add
add
mov
mov
sub
sub
add
mov
cmp
je
mov
sub
mov
test
jne
mov
and
and
add
cmp
jne
sub
sub
xor
add
and
mov
add
cmp
jne
cmp
jne
add
or
mov
mov
add
xor
add
test
je
mov
xor
add
mov
add
pop
cmp
je
add
add
sub
add
pop
mov
xor
add
or
cmp
je
or
mov
add
cmp
je
add
mov
mov
and
add
sub
add
sub
add
and
sub
add
pop
cmp
jne
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
sub
sub
or
and
push
mov
mov
and
add
add
push
sub
mov
mov
add
add
add
add
cmp
je
add
mov
add
mov
mov
add
sub
mov
xor
sub
or
add
cmp
jne
mov
sub
mov
sub
and
xor
sub
add
add
sub
mov
sub
xor
add
mov
add
sub
add
and
mov
and
sub
sub
cmp
je
sub
pop
cmp
jne
sub
pop
and
mov
add
add
or
add
add
test
je
test
jne
add
add
and
mov
xor
sub
or
add
sub
add
and
add
pop
cmp
jne
test
jne
mov
cmp
je
sub
mov
sub
mov
add
cmp
je
sub
xor
test
jne
cmp
jne
cmp
je
sub
mov
add
add
cmp
je
add
and
cmp
jne
mov
and
sub
mov
cmp
jne
add
mov
add
add
mov
or
cmp
je
add
and
add
leave
ret
add
shrl
pop
adc
pusha
or
subl
xchg
sbb
jns
pop
mov
lock
sub
inc
mov
fistps
in
std
gs
inc
xorb
and
inc
sub
cmp
xchg
shlb
sbb
pusha
cwtl
ds
loope
into
cmp
mov
mov
inc
rcll
fnsave
mov
fcoml
loope
shlb
mov
xor
jb
filds
daa
add
int3
icebp
popl
dec
imul
aad
pop
push
jmp
xchg
fs
push
adc
nop
sbb
push
xor
out
push
inc
fnstsw
loopne
mov
sti
cmpsl
clc
into
cmp
push
imul
jle
and
xchg
mov
andl
cmp
xchg
popf
pop
dec
mov
and
mov
jo
sub
out
mov
inc
jmp
push
inc
sbb
cmp
add
mov
cld
mov
mov
pop
cmp
stos
insl
inc
shl
into
mov
cmc
push
jmp
mov
ret
jp
sbb
dec
call
inc
xor
lea
shrb
dec
and
out
pop
test
dec
and
ret
xor
jmp
push
inc
insl
daa
xchg
repnz
nop
sbb
roll
xor
jl
cmpsb
shl
xchg
mov
lds
add
repnz
or
dec
sarl
push
cs
loopne
sub
and
repz
insb
xor
adc
clc
sbb
lock
inc
lock
dec
nop
sub
aaa
pop
cmp
lods
jle
pop
ret
pop
push
and
repnz
pushf
inc
scas
push
loopne
inc
and
lcall
add
jo,pt
cmp
ja
and
fildl
stos
jno
adcb
pop
and
loop
cmpsb
xchg
sub
pop
and
mov
lret
fdivrs
aas
inc
sbb
rcrl
loopne
pop
repz
cmpsb
andb
cltd
mov
and
shlb
add
popa
ds
pop
ss
mov
adc
mov
sahf
dec
adc
test
stos
push
stc
pop
movsb
ss
adc
shrb
sbb
lods
outsb
pushf
gs
jbe
ss
or
add
movsl
fisttpll
add
aas
cmc
cmp
dec
or
cmpsb
jle
ret
cmp
push
loopne
inc
adc
xorb
jnp
leave
lea
sub
int
push
push
aam
loopne
xchg
or
es
inc
loopne
mov
fldenv
mov
loopne
scas
cmp
std
sub
enter
cmp
sub
movsl
sarb
loopne
pop
jge
cmpsl
sbb
in
orl
mov
inc
push
sbbl
ret
loope
aad
lock
addb
add
xchg
mov
jmp
cmp
cmp
mov
push
imul
out
pop
and
out
add
xchg
add
xchg
fs
push
adc
nop
sbb
push
inc
aad
es
and
pop
and
outsl
fwait
xchg
js,pn
into
cmp
add
int
mov
mov
iret
cmp
imul
repz
loopne
fiadds
fdiv
mov
loopne,pt
fmull
frstpm(287
pop
fstp
xchg
mov
ds
or
fmulp
aam
loope
ficomps
inc
ja
cli
faddl
insl
repz
movb
rorb
pop
mov
cwtl
inc
sub
cmp
sbb
call
or
ret
repz
pop
cmc
xchg
pop
and
mov
dec
nop
cli
mov
loopne
int
lcall
test
fsub
mov
repz
in
push
mov
xor
stos
scas
dec
bound
in
xor
jbe
loopne
into
iret
pop
cmc
pop
and
mov
dec
nop
cli
jmp
loopne
es
adc
cmp
pop
push
std
ret
mov
jle
icebp
xor
fisttpl
repnz
outsl
int
sbb
aam
jp
cmpb
ljmp
loope
repz
pop
and
andl
gs
lret
loop
ljmp
xorb
dec
fildll
jae
add
imul
aas
inc
jae
adc
jo
push
mov
ficoms
pusha
ja
pop
bound
sub
adc
cltd
push
rorb
pushf
ret
push
add
xor
xchg
enter
xchg
lret
aas
adc
aad
xchg
inc
lea
mov
mov
inc
loopne
mov
xorl
push
fistpl
inc
pop
and
mov
jno
pop
mov
or
lea
fdivs
inc
inc
outsl
stos
inc
fildl
push
or
dec
sahf
xchg
loopne
test
lea
cs
sti
incl
faddl
cmp
adc
jae,pt
cmpl
jno
adc
fsubrl
test
pop
pop
inc
push
fidivl
into
cmp
repz
mov
add
or
fidivs
mov
rclb
ret
lea
loopne
push
mov
pop
jecxz
inc
fidivl
into
or
cli
fdivrs
loopne
shrl
jge
inc
add
mov
or
sub
pop
and
inc
into
mov
ds
sbb
push
mov
loope
lss
pop
mov
es
inc
mov
pop
iret
pop
jae
ret
shlb
cmp
cld
int
fidivs
shrb
push
into
lret
nop
cmp
inc
into
sub
sbb
sbbb
dec
test
pop
stc
testb
rol
icebp
mov
test
pop
or
xor
push
sub
push
push
mov
pop
dec
mov
mov
mov
cmp
add
int
add
scas
into
test
mov
push
pop
in
hlt
cli
sub
adc
cmp
rclb
lahf
into
ret
inc
mov
push
pop
sarl
pusha
jae
or
loopne
cwtl
incb
std
lock
push
dec
pop
mov
push
xchg
fstpl
xor
xchg
loop
call
lock
aam
sbb
out
mov
sub
movlps
je
jo,pn
xor
aas
and
mov
sbb
mov
dec
cmp
gs
mov
add
or
into
xchg
pusha
xchg
jb
out
jle
int3
dec
ret
push
cs
and
in
dec
addr16
scas
ljmp
mov
out
cmp
gs
pop
ds
inc
push
mov
mov
cmp
outsb
sbb
push
xor
fwait
lcall
subl
sub
mov
loopne
xor
mov
adc
dec
mov
into
and
movsl
inc
xor
ret
mov
jnp
mov
aad
popf
sar
adcb
clc
inc
cmpl
in
add
lret
cli
popf
js
sub
xlat
rcl
scas
push
push
or
jg
fsubrl
push
sub
jb
xchg
cmp
out
add
aas
jnp
orb
pop
or
clc
stc
test
mov
push
roll
pop
loope
mov
stos
lea
mov
loop
cltd
push
cmp
fldcw
out
or
aad
scas
pop
xor
xor
adcb
mov
filds
mov
negb
xor
aad
mov
nop
sahf
daa
adc
mov
fstpl
jge
outsb
and
xchg
inc
mov
div
shlb
jmp
lahf
pop
jnp
into
scas
cmp
js
cli
iret
lret
lret
mov
add
inc
sbb
ja
fptan
stos
mov
and
out
jg
jecxz
push
jmp
daa
cmp
adc
sahf
mov
xchg
inc
fisubrl
orl
cli
clc
or
cmp
pusha
hlt
icebp
mov
faddp
push
lods
or
outsl
sbb
cs
mov
das
nop
call
or
xchg
jp
outsl
push
out
cli
lahf
adc
rorl
out
sub
and
aad
sahf
adc
shll
int
out
push
xchg
cmp
jns
xchg
sub
ret
inc
mov
pop
xor
ficomps
setne
lret
fcmovne
jbe
cmp
jae
push
sub
scas
xor
idivb
inc
lcall
xor
outsl
xor
aad
mov
fwait
pop
add
dec
fcoml
inc
rolb
adc
pop
lea
test
adc
in
stos
pusha
push
add
cmp
in
dec
lock
mov
or
rcrb
push
enter
mov
xchg
sub
mov
call
je
out
inc
and
shlb
cltd
faddl
ret
es
sbb
adc
push
jbe
add
cwtl
gs
hlt
fisubs
push
stos
add
sbb
in
mov
outsb
mov
jno
popf
lods
loope
xor
fstpl
pop
push
js
add
dec
lock
sbb
mov
shrl
push
dec
xor
xchg
push
je
pop
imulb
js
mov
mov
xlat
orb
stc
xchg
jl
test
flds
sti
popa
jb
aas
mov
shr
hlt
adc
aaa
mov
adc
dec
lock
mov
xchg
cmp
add
je
movsl
dec
dec
data16
aad
xor
xchg
cmp
out
frstor
fisubs
jo
loop
es
lret
xchg
pop
and
dec
xorb
mov
dec
push
mov
adc
dec
pusha
fs
mov
adc
dec
js
inc
fldl
add
mov
jecxz
pop
mov
rolb
les
adc
out
insl
test
mov
pusha
fsubrs
aas
inc
pop
sbb
push
popf
mov
negb
pop
sub
orb
out
ror
dec
mov
inc
and
cmp
mov
jae
sub
mov
dec
and
jl
inc
stc
cli
outsl
sbb
insb
pop
sti
or
repnz
aam
sbb
sbb
fsubrp
xchg
pop
test
lea
push
inc
nop
mov
push
inc
les
mov
dec
pop
pop
cmc
pop
cld
scas
addl
push
push
scas
jl
sti
adc
mov
push
jg
stc
jb
pop
gs
cmp
mov
jg
repnz
mov
jnp
roll
inc
push
aam
inc
or
xor
in
xchg
push
inc
mov
inc
or
push
push
std
insl
dec
loope
out
and
loopne
mov
rorl
sti
jns
ret
or
sub
cs
add
cmpl
popa
fisubs
loopne
imul
rclb
hlt
fstps
push
ficomps
add
lock
jmp
and
ds
mov
rcll
rclb
jl
lcall
jmp
inc
loopne
testl
cmp
mov
mov
adc
shll
dec
pop
sub
nop
pop
push
push
cmpsb
repz
loop
lock
fistpl
sub
sti
lret
fstps
rcll
or
jle
mov
loopne
jl
sbb
lcall
add
and
xor
pop
jecxz
xchg
add
cmp
lods
mov
scas
icebp
xor
cwtl
bound
mov
dec
and
addl
xlat
push
inc
jge
mov
mov
popa
xchg
iret
stos
sti
push
xor
nop
push
cs
inc
cmp
out
xor
ljmp
adc
pop
cs
jg
shlb
push
in
and
hlt
or
out
pop
mov
lods
aam
out
inc
mov
mov
inc
xchg
jne
inc
ret
add
rcr
pop
call
and
mov
or
lcall
and
mov
lcall
mov
sub
imul
dec
or
add
mov
addr16
fildl
cmp
mov
pop
mov
push
cli
outsl
or
test
movsb
mov
mov
mov
jbe
sub
add
mov
and
loope
mov
xor
out
pushl
push
and
cmp
pop
pop
dec
pop
dec
lcall
xchg
pop
sbb
add
insl
sbb
mov
sar
jnp
push
add
orb
push
xor
lods
pop
pop
js
sub
push
cmc
push
and
jb
inc
mov
stos
loope
iret
cli
repz
sub
scas
push
mov
pop
push
pusha
inc
lds
aas
or
incb
xor
xor
std
aam
jp
jle
repnz
sub
jo
jnp
dec
clc
es
std
add
push
loopne
insl
sbb
mov
mov
and
push
repz
rcr
push
pop
adc
mov
push
out
fdivr
inc
xlat
dec
mov
outsb
add
cmp
push
je
sbb
pop
aam
movsb
pop
scas
pop
cmp
lcall
push
rol
test
iret
adc
sbb
cli
lret
and
mov
jmp
je
aam
dec
or
mov
adc
mov
aaa
fs
arpl
das
inc
enter
mov
hlt
shlb
enter
xchg
hlt
pop
testl
add
adc
push
shll
mov
lret
ljmp
or
fucom
arpl
aaa
sbb
cmc
dec
dec
jo
aaa
cmpsb
in
xor
sub
sub
mov
cmp
mov
push
in
inc
into
leave
xchg
sub
mov
sbb
pop
addr16
and
rcrl
bound
inc
loope
jnp
shrl
insl
icebp
mov
lods
push
outsl
movsb
jnp
testb
sub
hlt
shll
push
addl
mov
cltd
xor
iret
jb
ds
add
or
push
push
add
cmp
and
xchg
mov
mov
xor
ficoms
ja
push
orb
aas
adc
es
icebp
int
adc
and
dec
dec
sbb
cmc
push
shlb
xchg
fsubrl
inc
jecxz
arpl
or
pop
loopne
cmp
cwtl
testb
jge
inc
mov
icebp
test
xchg
aam
xchg
call
outsb
pop
loopne
mov
aad
loopne
xor
mov
mov
and
mov
int3
cmp
fstps
inc
adc
sti
jmp
lret
cld
inc
lcall
sub
adc
imul
imul
ja
inc
jle
jbe
ret
jnp
pop
into
cli
xor
into
sub
ret
dec
jno
inc
dec
int
mov
ds
add
out
push
repz
test
faddl
xor
mov
loop
xor
mov
push
push
xor
scas
push
push
sub
es
sarb
jp
clc
popa
mov
cmp
add
into
or
jno
push
jl
gs
cmp
or
and
push
mov
enter
add
jle
lea
add
mov
stc
lret
mov
mov
in
pop
add
mov
push
fildl
jno,pn
inc
sbb
sti
fwait
mov
aam
ljmp
popa
in
mov
xor
clc
pop
jno
fcom
cli
push
xchg
aam
mov
lods
dec
out
dec
in
push
aam
ds
ret
push
cmpsb
bound
test
lahf
xor
mov
loope
sti
call
adc
mul
push
adc
pop
xchg
js
sti
out
adc
stc
mov
jmp
lret
cmpsb
rorb
or
rcl
and
ds
push
inc
stos
dec
push
or
imul
adcb
inc
test
jb
push
in
testb
lods
and
lret
mov
ds
mov
pop
jge
xchg
cmpsl
jbe
cmpb
stos
cmp
int3
push
in
stos
dec
dec
mov
iret
rol
dec
outsl
into
dec
pop
lods
and
rolb
iret
pop
pushw
jmp
rcrl
xor
mov
inc
mov
mov
push
fbld
popa
xchg
ja
push
lea
scas
ds
pop
iret
stos
enter
pop
call
rcll
and
stc
std
fwait
jo
test
in
gs
sahf
aam
add
sbb
inc
or
cmp
ret
mov
push
sbb
xor
out
fcomps
sub
test
ret
inc
ja
incb
sbb
mov
xlat
je
out
movsb
fmuls
stos
lods
add
adc
imul
int
sub
rolb
sub
bound
aam
sbb
jo
jae
in
out
les
les
mov
sbb
cmc
jae
fisubl
cmpsb
cmpsl
and
repnz
adc
in
cmp
enter
jp
inc
dec
cmp
inc
lock
xlat
xor
jb
loope
js
jbe
dec
adc
cwtl
inc
lahf
cmp
dec
in
pushf
inc
jb,pt
push
outsl
sbb
or
push
sub
pop
add
dec
test
movb
mov
cmpsb
cmpsl
push
outsb
or
jg
stos
sub
dec
cmpsb
mov
adc
pop
mov
cmp
add
pop
shrb
mov
lret
pop
fldt
push
and
xlat
aas
nop
jg
in
in
jns
ss
je,pt
imul
sti
add
in
lods
jle
data16
test
in
notl
dec
cmpsb
mov
js
cli
es
mov
cmpl
xor
cmp
push
shlb
pop
out
push
fsubrl
daa
aam
mov
add
clc
test
sbb
stc
test
sub
and
neg
loop
lock
rclb
adc
hlt
ficoms
push
dec
xchg
enter
lods
fstp
cli
ds
jl
inc
xor
pop
and
shlb
xor
ss
add
testl
or
outsb
mov
mov
mov
into
sub
inc
arpl
call
adc
jg
inc
lock
cmp
add
adc
sub
sub
loope
jns
add
sbb
fisubs
pop
pusha
and
lds
cmp
subl
jae
add
or
gs
adc
xor
xchg
jle
bnd
pushf
fucompp
lods
fsubrs
mov
mov
adc
cmpb
test
paddb
xor
stos
jg
pusha
insl
or
dec
xchg
stc
or
push
aad
sub
insb
push
cmp
inc
enter
cmpsb
ror
js
push
inc
test
test
cs
xor
les
mov
fstl
es
es
inc
dec
or
lret
cmc
roll
mov
sbb
dec
movsb
sub
adc
mov
add
jg
sub
xor
sti
inc
pop
dec
xchg
jo
adc
mov
pop
shr
sbb
lret
jne
cwtl
fsubrs
hlt
xor
iret
ljmp
imul
push
loope
loopne
subb
dec
fsqrt
dec
sbb
sahf
scas
movsb
loop
pminub
repz
xchg
sub
dec
jb
insb
push
ret
lea
movsl
fildll
dec
into
mov
leave
mov
aam
arpl
mov
xor
mov
aaa
mov
cmp
imul
jbe
push
jg
pop
enter
loop
hlt
xchg
jnp
xchg
sahf
test
or
adc
cmpb
jae
xchg
das
and
sbb
sbb
rorb
mov
sub
notb
add
and
dec
fldt
lds
inc
adc
test
mov
jge
push
cltd
xchg
pop
mov
adc
rcrl
imulb
jmp
pop
outsl
inc
and
xchg
shr
jmp
es
in
movsl
loope
aam
out
inc
in
imul
lret
bound
lret
icebp
fidivl
filds
jmp
pop
stos
pop
movb
and
mov
or
adc
js
xlat
xor
xor
mov
lods
test
or
xor
add
mov
xor
popf
fildl
in
cli
loopne
dec
fcom
push
pop
int3
aam
aas
and
pop
int3
sahf
mov
and
fsubl
sti
leave
jbe
cmpsb
mov
pop
push
sbb
rclb
lods
jecxz
xor
daa
sbb
jo
add
sbb
into
fildl
sbb
jo
mov
jle
and
mov
mov
out
stos
sub
mov
mov
cli
sarb
mov
into
mov
cltd
aad
push
lock
and
bnd
leave
sub
jbe
outsb
sbb
or
and
mov
aas
mov
xor
out
cld
ret
push
xorb
ss
out
sahf
inc
pop
pop
fxch
jae
divb
rcl
clc
iret
lret
add
add
xchg
aas
xor
push
stc
jae
out
ss
inc
and
xchg
lcall
lds
mov
imul
mov
push
pop
add
push
flds
jo
insb
jge
mov
xorl
test
daa
paddd
in
lret
add
scas
outsl
mov
sahf
mov
sub
pop
push
pusha
push
or
sub
mov
sub
jg
movsl
and
xor
push
xor
cmp
sub
mov
sarb
dec
std
cmpsb
call
lret
loope
xchg
adc
movsl
out
push
xchg
std
fstps
jo
or
in
pop
loopne
pushf
js
enter
and
packsswb
ljmp
scas
mov
roll
mov
addr16
dec
out
orb
xor
inc
int3
add
mov
add
lea
mov
push
ds
dec
push
mov
leave
inc
mov
fiaddl
cld
repnz
jb
xchg
jecxz
add
xchg
pop
repz
in
loop
jl
movsl
pop
je
push
aas
and
dec
fsubl
popf
cld
int3
cli
mov
fistpll
jo
and
dec
loope
cmp
xchg
sti
arpl
testb
xor
inc
cmpsb
add
jo
ficoml
packuswb
xchg
xchg
sub
mov
inc
dec
orb
or
push
out
filds
cmpsl
ret
movsl
iret
sbbl
cld
iret
out
xchg
sbb
dec
add
cmpsb
scas
adc
xlat
inc
inc
addb
inc
xchg
mov
repz
and
mov
mov
repz
test
rorl
cli
lret
dec
xchg
ror
dec
nop
test
std
add
cmp
jns
sub
mov
push
shrb
insl
cmp
pop
outsl
sub
mov
ss
scas
lock
cmp
add
cmpsb
idiv
in
mov
add
push
imul
adc
sbb
jbe
xchg
aaa
jns
mov
daa
xor
into
insl
lret
testb
pusha
cli
push
dec
push
int
lcall
jnp
lock
es
int3
add
paddsw
fidivrs
ljmp
and
jb
sarb
nop
mov
pop
xor
setp
push
dec
in
dec
lock
xor
int
pop
subb
jb
cmpl
loopne
or
in
cmp
scas
or
std
sub
xchg
mov
popa
stos
out
mov
add
xlat
data16
dec
popa
xchg
aaa
and
rclb
mov
fnstenv
mov
scas
sti
xchg
add
std
stos
jnp
jne
cmp
pop
jmp
mov
lahf
adc
mov
clc
mov
mov
fs
notb
lret
dec
jecxz
scas
popa
cmp
movsl
jo
cmp
mov
ret
xchg
shlb
les
mov
mov
inc
rclb
fildl
pop
jo
lea
pop
aad
or
repnz
rorl
decl
ret
sbb
fcomp
aas
loopne
push
jmp
cmp
inc
or
sbb
mov
xor
push
mov
stos
fistl
push
fadds
leave
or
neg
sub
xor
lret
xor
je
xchg
test
jp
add
aam
jns
cld
js
iret
stos
hlt
jnp
push
inc
push
into
pop
aas
sti
mov
ja,pt
sub
sbb
sahf
add
mov
xchg
push
outsb
push
cmpsl
decl
mov
dec
adc
adc
add
lds
mov
mov
xchg
push
imul
xchg
mov
mov
enter
mov
movsl
push
dec
or
pusha
xchg
fisttpl
add
call
sbb
mov
push
fs
loopne
cmc
add
jecxz
mov
fucom
cli
ficomps
out
scas
jne
into
jp
jb
fdivl
sti
fs
icebp
stos
inc
insb
push
stc
and
xchg
or
sbb
dec
pop
mov
add
push
daa
push
rorb
enter
je
ds
shl
mov
add
push
inc
sarb
dec
jecxz
ds
enter
dec
mov
cmp
nop
sbb
and
xor
inc
xor
xchg
movsb
adc
sub
mov
mov
push
adc
inc
jns
push
jns
mov
jg
pop
cmp
test
mov
add
add
mov
sub
jecxz
cmp
int3
or
lods
data16
jae
sub
fisttpl
jp
push
imul
shrl
pop
cld
mov
in
into
jp
test
cmp
and
mov
mov
jb
out
aad
hlt
cmp
ds
fcom
ret
lods
adc
sub
cmp
movl
cmpsl
inc
lock
cwtl
dec
flds
cwtl
push
sbb
pop
push
xchg
movb
pop
dec
mov
fisttps
push
inc
sar
daa
shll
or
mov
mov
out
or
int3
xor
aad
or
aam
decl
sbbb
sahf
out
add
pusha
add
vinserti32x4
jne
cmp
sub
sbb
or
nop
pop
sbb
xchg
and
cli
or
mov
iret
jg
fnstsw
sar
xlat
ss
cli
sbb
jp
mov
stc
mov
dec
mull
test
adc
xlat
js
cli
cmp
pop
sub
xor
mov
cld
mov
je
es
and
pop
pop
cmpsl
or
jb
incl
addl
mov
dec
in
rcrb
mov
push
mov
test
addr16
sub
adc
inc
add
sub
lcall
sbb
rcr
dec
jns
or
rcrb
fcomps
flds
ret
mov
loop
and
outsl
aas
loop
xchg
movl
xor
outsb
add
mov
ret
lahf
repnz
push
ror
mov
cli
js
fdivrs
aas
add
outsb
inc
lahf
sar
jge
add
xchg
pop
mov
insb
dec
sbb
sbb
jbe
decl
in
push
in
cmp
out
div
pop
loopne
mov
dec
into
clc
pop
push
xchg
ret
cld
mov
cwtl
test
and
add
subb
inc
mov
daa
sar
pop
fistps
add
loope
lret
dec
stc
add
mov
movsl
cmpl
addb
sbb
add
std
mov
adc
scas
outsb
lea
in
cld
or
inc
repnz
sub
lcall
cs
adc
movsb
fisttpll
xlat
sbb
jmp
or
fst
cmp
sbbb
rcll
cmc
sub
pop
pop
test
or
andb
mov
cmc
jmp
jp
test
lret
dec
mov
sbb
js
and
push
jl
js
sub
xchg
in
ret
out
and
jo
push
cmp
rcrl
dec
sub
fsin
push
movsb
stc
dec
inc
rolb
stc
cmc
inc
into
inc
and
xor
inc
jo
int
insb
add
js
loop
push
push
mov
xlat
lcall
pop
sbb
and
or
cmp
fwait
xchg
loopne
dec
jbe
dec
stos
mov
lcall
mov
sub
out
fnsetpm(287
jo
fucom
scas
sbbb
rcl
xor
push
aad
mov
xchg
into
test
sub
sbb
std
inc
movsb
out
mov
push
cmp
repnz
cwtl
mov
cmpsb
lret
inc
loope
popf
test
fistpl
cmp
repz
xor
cmpsb
cmp
pop
es
sahf
add
dec
push
inc
shll
mov
adc
cmp
clc
dec
clc
out
je
cld
pop
push
or
sarl
xchg
pop
pop
in
inc
and
out
inc
insb
sub
xor
and
mov
mov
sub
jns
lods
inc
not
cmpsb
mov
cwtl
jbe
mov
pushf
push
cmp
jmp
pop
pop
fnstcw
fisttps
push
xor
loope
test
xor
jg
imul
jge
sbb
xchg
add
or
movl
sbb
mov
or
idivl
add
mov
aad
cmc
sbb
incb
sub
or
stos
lret
dec
xor
ljmp
dec
insl
outsb
sbb
ficomps
pop
push
xchg
sti
mov
rcrl
out
adc
adc
add
dec
push
andl
fidivl
aad
out
push
cli
shrl
orl
popa
xchg
addr16
std
pop
adc
fsubp
adcb
dec
cmpb
xchg
cld
aas
adc
cmc
out
adc
ret
dec
cmovae
outsb
imulb
je
and
push
or
jb
pushf
cwtl
inc
inc
jg
jb
jne
fldl
lods
xchg
dec
mov
jns
jns
aad
stos
stos
jbe
jmp
sbb
out
push
ss
fiadds
push
dec
ficompl
ret
test
jmp
mov
ljmp
add
or
xor
loope
test
outsl
jne
test
jns
sarb
mov
aaa
push
cmp
xor
or
int
fists
xor
mov
vprotw
jecxz
out
mov
mov
scas
into
shrb
and
xchg
xchg
jns
fld
shlb
cmp
das
sti
fiaddl
in
cmp
fistps
lds
inc
inc
cli
in
xor
sub
insb
fldl2e
enter
cmpsb
push
popf
cmp
sub
subl
movsl
popf
call
repz
mov
cltd
or
jno
stc
mov
xor
rcrl
sub
out
adc
stos
mov
mov
iret
lcall
int3
add
cli
lret
pop
cli
stc
ds
ds
or
mov
mov
cmc
out
test
xchg
jge
mov
push
imul
arpl
adc
lds
inc
shrb
aas
int
push
int
cmpb
lret
mov
std
test
xchg
aam
lcall
or
jl
movsb
fists
mov
dec
mov
xchg
inc
aam
loope
add
movsb
sub
aam
push
sbb
jp
ret
int
cmp
add
sahf
or
or
cmpl
into
and
cld
jmp
and
outsb
and
lds
jb
nop
pop
mov
push
rcll
sbb
sub
cmp
pop
push
iret
es
sub
pusha
in
rorb
movl
loop
pop
clc
ss
inc
idiv
lds
test
fldenv
sbb
out
je
insl
ds
jge
add
adc
push
jecxz
sti
push
enter
cmp
test
nop
jnp
adc
bound
cmp
lret
andb
sbbb
sbb
js
mov
inc
lock
lea
imul
mov
mov
loopne
fcmovbe
or
cmp
cmp
ficompl
adc
sbb
lock
fisubrs
adc
mov
dec
sarb
dec
jae
adc
inc
push
jno
sub
pop
adc
xchg
test
push
in
lods
jae
cltd
aaa
sti
mov
das
add
imul
add
insb
push
hlt
iret
mov
pop
or
pop
faddl
xchg
fidivrl
test
inc
cmpsb
push
dec
fdivrs
or
gs
cmp
cmc
jne
adcb
into
mov
cmp
jp
add
push
cmp
fsubrl
ds
mov
test
mov
fildl
repnz
fcompl
and
out
inc
mov
dec
jo
jle
xlat
loopne
or
fstps
adc
mov
fadds
outsb
xchg
add
jns
mov
mov
loopne
push
mov
mov
repnz
adc
cmpsb
out
lea
adc
ret
jecxz
mov
inc
mov
not
setl
ffreep
xlat
or
adc
xor
pop
leave
insl
arpl
fsts
push
mov
cmp
iret
mov
arpl
jb
mov
rcrl
shll
cmp
fcomi
das
stos
mov
stos
dec
jecxz
jb
add
test
inc
xor
push
cwtl
jle
inc
cmp
mov
out
stc
lock
dec
push
idivb
das
into
sbb
cmpsl
mov
push
sub
xchg
test
push
fisubs
add
lret
mov
jp
into
dec
or
cs
sbb
into
add
sahf
dec
in
add
xor
nop
into
aas
inc
sti
or
jle
sti
cmp
fwait
cmp
into
adc
sub
fistpll
inc
ljmp
fiaddl
inc
mov
aaa
add
notb
mov
ds
fwait
adc
scas
cmpsl
cmpsl
clc
add
pop
sbb
stos
in
xor
mov
sbb
add
out
pusha
xor
es
xchg
or
fstps
out
fsubrs
into
push
and
xlat
jle
gs
jo
xor
sbb
inc
gs
push
outsl
sbb
xchg
jb
aam
sbb
add
push
loop
adc
xchg
push
and
ja
mov
sbb
push
mov
aam
hlt
mov
xchg
nop
dec
pushf
sbb
lcall
dec
inc
loopne
enter
add
aad
sbb
add
cmpsl
loope
gs
fsubrs
out
hlt
hlt
push
addr16
lods
aam
jbe
cwtl
inc
cmpsb
fistpl
inc
mov
xchg
ss
addb
sbb
cli
fcomi
xor
notb
mov
inc
push
cs
cmc
jno
rolb
add
inc
ljmp
jb
push
inc
les
and
jmp
aad
mov
mov
popa
into
lahf
mov
in
aad
or
loope
mov
xchg
push
je
jns
xor
in
je
mov
popf
clc
bound
xchg
sbb
shll
daa
idiv
cmpsl
push
lcall
sub
mov
int3
bound
aam
sub
lods
or
xlat
sub
xchg
stos
mov
sar
clc
jo
mov
dec
xor
in
mov
jo
xchg
dec
lret
mov
add
adc
aad
inc
iret
push
jae
adc
icebp
push
icebp
pop
fcmovu
sub
stc
cwtl
push
iret
icebp
fldt
adc
jo
push
jno
xlat
jo
ds
push
testb
sbb
pop
es
mov
xchg
add
idivb
not
pop
jecxz
addr16
cld
mov
sbb
loop
and
mov
dec
jle
and
cmp
loop
push
out
and
lahf
ret
insl
lret
mov
scas
std
xchg
fistpll
nop
mov
mov
repnz
pop
mov
push
and
jo
fcmovbe
lods
sarl
push
pop
out
cmp
add
pop
inc
gs
lret
pop
cmp
cmp
pusha
in
lcall
jp
int3
inc
jno
fistps
movsb
pop
daa
stc
inc
adc
cmp
lcall
xor
jb
fsubrs
dec
cmp
cmc
rorl
rorl
inc
mov
call
jp
xchg
cld
cmc
dec
iret
sbbb
mov
jne
adcl
jp
imul
mov
int
lock
push
add
fsubs
ret
pop
mov
dec
std
sbb
xchg
fmull
in
push
ret
scas
sub
fbld
aam
push
es
fdivrs
outsl
mov
sbb
in
fcompl
and
rcr
adc
imul
into
mov
fcompp
mov
repnz
popf
or
mov
jns
push
adc
rcl
and
add
add
or
dec
sbb
add
ljmp
lret
lahf
mov
jbe
adc
rorl
xlat
sahf
mov
xchg
xor
mov
repz
pop
pop
das
inc
inc
fcom
mov
sub
test
stc
mov
add
leave
fildll
lea
xchg
ss
outsl
and
lcall
push
mov
xchg
sbb
push
testl
jb
lret
clc
mov
inc
mov
call
iret
mov
jp
jae
jb
adc
add
sbb
ljmp
or
and
xchg
lcall
push
sub
lods
sti
fidivl
loopne
dec
pop
clc
aaa
dec
cld
sahf
mov
cmc
sar
sub
out
jp
sbb
outsb
lahf
outsb
std
mov
in
lcall
fisttpll
push
addr16
inc
and
jmp
inc
icebp
mov
adc
sti
ja
daa
xchg
sub
push
loope
add
jl
orb
aas
pusha
movsb
add
jge
mov
xchg
iret
jno
adc
in
xchg
lods
dec
jo
in
das
or
aad
fldt
iret
in
jp
lret
into
adc
sub
frstor
sub
cli
add
xor
mov
movsb
sbb
lret
jbe
aas
orb
nop
dec
bound
mov
inc
out
push
or
fwait
ss
emms
repz
adc
pop
and
and
or
mov
cmp
push
cwtl
adc
inc
loopne
push
test
aad
xchg
jne
imul
mov
dec
sbb
sub
sti
cmpsl
jae
cs
jle
and
scas
and
fdivr
in
jne
pop
cltd
push
movsb
dec
call
bound
jns
push
mov
shlb
lahf
fucom
cwtl
lcall
vphsubwd
or
insb
jmp
out
loop
xor
and
mov
sbb
cmp
adc
fcmovb
ret
add
add
jp
lcall
xchg
imul
and
aaa
adc
rcl
jno
fmulp
idivb
mov
sbb
inc
jb
add
and
pop
pop
jp
jg
inc
hlt
xlat
inc
push
sbb
ret
mov
fnstsw
push
sub
in
mov
add
fmuls
and
or
rorb
sub
rcl
mov
jbe
or
into
inc
mov
or
rolb
adc
jmp
sub
and
ljmp
in
jne
pop
push
add
xchg
dec
mov
add
add
lcall
cli
jnp
dec
inc
lcall
das
push
push
add
insb
mov
push
jp
in
add
in
cmp
hlt
xchg
jp
adc
pop
movsb
fidivrs
cld
sbbb
jnp
push
push
sarb
mov
fstpt
jne
sub
dec
aas
dec
mov
arpl
pop
roll
mov
adcl
or
ret
inc
xor
and
pop
mov
icebp
cmp
data16
sub
mov
xor
ja
sbb
jb
ds
lock
fnstsw
cmp
jnp
nop
je
out
xchg
cmpsb
scas
aad
add
mov
in
or
inc
dec
cli
mov
cli
jge
ficompl
lods
jb
aaa
pop
xchg
inc
rolb
jns
sti
cld
sub
cmp
dec
lahf
adc
jmp
lcall
adc
sub
lock
push
add
cmp
outsl
jl
cmc
int
loopne
push
sbb
jge
adc
cmp
pop
das
add
mov
lret
fisubrs
sbb
dec
sbb
pusha
aaa
sbb
pusha
int3
dec
push
inc
test
sbb
sub
inc
jo
mov
or
jae
pop
into
icebp
fcoms
rolb
push
jno
sub
or
lods
cmpsb
inc
nop
ljmp
xor
loopne
cmpsl
std
xchg
push
cmp
stos
fisubrs
add
jp
fisttpl
out
test
shll
sub
push
ds
mov
pusha
mov
je
inc
mov
add
adc
cs
in
std
mov
in
dec
xchg
fcoms
cmp
or
and
jg
cmpsb
or
loopne,pt
mov
mov
push
or
imul
pop
and
and
clc
popa
pop
aam
sub
xchg
shll
mov
ret
xor
dec
jmp
pusha
push
lock
jns
rorb
mov
movsl
test
pop
out
movsb
lret
mov
xor
add
jmp
pop
sarb
xchg
mov
adc
sti
jg
and
cmp
or
xchg
add
fwait
lods
std
dec
lahf
pop
jns
jg
push
jne
jmp
sub
out
jo
sti
add
inc
pusha
mov
sahf
mov
jp
and
fucomp
pop
or
in
pop
jnp
pop
sub
decb
inc
mov
sub
pop
add
sti
cltd
cmpsl
aad
pop
iret
push
push
fistpll
cmpsb
jno
movb
xor
rclb
fwait
mov
mov
add
xchg
in
inc
push
js
stc
sub
cmpsl
neg
xor
subb
das
sbb
push
and
cmp
aas
jnp
dec
or
dec
mov
shl
imul
aam
push
sub
inc
adc
xchg
jmp
and
sbb
insl
and
out
shlb
std
lcall
push
addr16
xchg
sbb
inc
in
adc
out
push
nop
xchg
sub
jle
inc
pop
cmp
mov
inc
mov
cmp
cli
mov
mov
enter
movsl
inc
adc
sarb
mov
mov
inc
and
jns
les
pop
aad
inc
sbb
mov
mov
push
lds
ficoml
loopne
sub
pop
enter
in
xor
add
lcall
sbb
aad
fs
bound
push
push
ss
push
push
loop
dec
xchg
pop
aam
xchg
pop
andb
add
jo
dec
xor
loop
adc
lcall
ret
jge
stos
lods
std
mov
pop
adcl
inc
popa
add
rorl
pop
ja
cmp
jo
mov
std
fadd
push
pop
inc
stc
ljmp
fnstsw
arpl
inc
outsb
dec
fsub
arpl
nop
es
cli
push
add
in
mov
test
fcomi
mov
inc
loopne
popaw
cld
iret
into
mov
js
out
scas
xor
cmc
nop
xchg
push
je
push
mov
nop
xchg
fcoml
and
lcall
shrb
daa
mov
shl
pop
clc
sahf
es
add
cmc
adc
push
jmp
push
sarl
arpl
jle
ljmp
cmc
cmp
adc
ffree
out
xor
testb
inc
mov
out
mov
mov
or
mov
insb
addr16
int3
cmp
scas
xor
ret
mov
dec
sub
cmc
lahf
dec
jno
xchg
adc
mov
dec
dec
ds
add
inc
loopne
pushf
ds
mov
or
adc
jp
adc
xor
jmp
into
data16
lret
add
clc
dec
scas
mov
jle
push
mov
movl
mov
and
fdiv
rorb
rclb
loope
xor
or
inc
cmp
addb
dec
pop
cmp
sub
inc
rcr
fistl
push
test
ljmp
mov
inc
rcr
insb
stos
push
fs
pop
ret
sar
sahf
cli
sub
pop
rcrl
push
loop
pop
outsb
xor
jae
mov
addr16
jle
inc
clc
inc
mov
and
xor
xchg
ficoms
test
dec
inc
stc
push
outsb
js
mov
nop
cmp
daa
rcrl
fdivs
into
mov
cmp
inc
test
lret
scas
shrb
loope
fdivrl
movsl
sub
fsubl
pusha
sub
lea
cmpsb
cmpsl
fldcw
sub
push
movsl
pop
and
or
xor
outsb
movsl
ret
std
adc
aad
xchg
lods
cltd
dec
sti
rcll
jecxz
loop
inc
jb
into
add
ret
cmp
xchg
fadds
cmp
xchg
jecxz
aad
imul
shlb
xor
incl
jns
xchg
mov
or
lret
push
shlb
mov
lret
pop
cmp
and
lds
fidivl
scas
sahf
fildll
lods
movsl
fcmovne
mov
jmp
jne
jecxz
jo
imul
jae
mov
push
mov
sbb
inc
mov
into
fidivl
sbb
pop
cmp
add
lock
mov
dec
push
sub
ja
repnz
rcrb
add
jno
loop
decl
push
push
dec
cmp
add
repnz
sub
and
pop
shll
popf
jle
dec
sub
loope
pop
rcrb
xor
shrb
dec
shrl
jle
xlat
dec
idivl
sbb
and
rcll
ret
popa
mov
push
xor
imul
insb
jmp
xchg
out
push
xchg
ret
fisubs
orl
in
aad
and
clc
sbb
sahf
push
and
out
call
stc
mov
lds
fimull
dec
pop
inc
lds
loope
call
xchg
inc
pusha
clc
push
cmpsb
xchg
in
fistl
in
pop
insl
dec
jge
repz
subb
not
jb
cmp
cmp
in
clc
fcmovnbe
fisubs
sub
in
sub
jmp
pmullw
scas
test
adc
cmp
scas
aam
mov
and
sub
sahf
or
cwtl
rcr
popa
jp
dec
xor
jge
fdiv
stos
cmp
pop
sub
pop
mov
sbb
loope
jne
cli
sub
scas
leave
jg
jae
std
jno
pop
pop
rorl
sbb
roll
add
inc
add
xchg
enter
lcall
sbb
dec
mov
adc
mov
insb
js
push
jne
pushf
sarb
pop
pop
sbb
jp
sub
adc
sysenter
dec
xor
mov
push
jb
add
xor
roll
xchg
xchg
mov
iret
jne
popf
scas
sbb
hlt
jp,pt
ret
mov
jbe
cmp
ljmp
outsb
lods
mov
push
or
inc
lock
inc
push
cmp
dec
pop
sub
into
dec
arpl
cmp
fst
sbb
into
sarl
sbb
lcall
faddl
outsb
adc
pop
inc
mov
icebp
or
or
outsb
imul
jmp
mov
mov
cs
insb
insl
iret
push
loop
sbb
sub
jmp
loope
sbbb
clc
xlat
sahf
fcmovnbe
test
fmul
das
mov
js
lods
cmp
hlt
mov
and
mov
pop
adc
orb
and
xchg
sub
iret
gs
mov
mov
adc
into
or
and
repz
fwait
movsb
aam
and
es
xchg
jle
fdivrp
mov
rolb
into
addr16
shl
jg
sub
je
adc
or
in
or
jp
mov
popa
sub
jmp
stos
inc
dec
adc
test
insb
adc
dec
out
aaa
pusha
sub
lea
lret
in
lcall
ret
mov
pop
mov
mov
xchg
push
add
fs
dec
mov
cli
cmp
lds
xlat
addb
out
cmp
pop
mov
push
shlb
sbb
cs
std
fucomp
mov
sbb
int3
cmpsb
mov
add
push
je
jo
mov
aad
add
or
cld
mov
xor
xor
lret
xchg
into
or
pushf
movsb
roll
fldl
pop
test
sub
xchg
inc
add
int3
mov
repz
inc
sbbb
and
mov
mov
mov
push
mov
fs
imul
jmp
shrl
cmp
pop
fsubl
inc
sbb
ret
pusha
or
dec
out
jecxz
inc
adc
sbb
stos
dec
xchg
push
lret
les
pushf
xor
cmp
insl
fwait
sub
ss
popa
lea
cmp
mov
mov
push
lahf
add
inc
xor
mov
in
fstps
popl
jmp
outsb
xor
gs
or
outsb
fildll
cld
jno
fnstsw
bound
sbb
lds
mov
in
cmp
xorb
mov
inc
mov
cmp
mov
repnz
push
int3
lods
xor
rorb
cmp
aaa
fcoms
jns
aas
push
push
dec
xor
pop
test
pop
jp
scas
xor
sub
subb
int
add
stos
and
dec
aas
in
out
inc
fsubrs
stc
cs
aaa
sbb
jl
lock
jnp
pslld
or
inc
or
push
dec
std
out
call
mov
sti
jbe
jbe
mov
jo
push
js
int
cltd
in
dec
fs
fistpl
test
verr
mov
test
icebp
dec
testb
in
push
fisubrs
sti
jp
xchg
rcl
and
pop
rep
in
dec
cmp
ljmp
mov
pop
and
xchg
int3
mov
and
rcl
out
cmp
xor
mov
iret
xchg
outsl
pop
adc
xchg
xchg
mov
add
loopw
ret
scas
xor
fsubrs
fimull
sub
adc
js
es
jae
jle
mov
fbstp
pop
pop
out
notl
push
scas
xlat
add
jae
fstp
push
xorb
fwait
push
cmpsl
xchg
imul
enter
adc
and
push
pop
add
stos
dec
adc
jge
push
cmp
sti
inc
jb
adc
push
pop
mov
mov
jns
dec
xor
sbb
adc
mov
lods
iret
test
pop
fcoml
xchg
jmp
and
and
lock
sub
cmc
cmp
xchg
sbb
mov
stc
sbb
pop
mov
nop
mov
cltd
aam
dec
pop
sbb
insb
pop
stos
ds
and
pop
mov
push
aad
js
push
jle
roll
fucom
jp
cmp
xchg
icebp
aad
out
cmpsb
pop
dec
sub
insb
movsl
stos
test
es
and
aaa
jmp
cli
fsub
push
aad
push
jo
fidivl
or
push
subb
sub
sahf
inc
insl
cmp
cmp
add
dec
movaps
lret
ret
fs
push
sbb
mov
or
aad
lahf
xor
inc
lahf
addr16
mov
das
scas
cmp
push
nop
mov
arpl
fdivrl
leave
cld
imul
aam
dec
pop
gs
lcall
insl
mov
dec
add
pop
inc
ffree
or
xor
sbb
cmp
mov
or
es
xchg
jecxz
mov
outsl
add
fwait
iret
je
bnd
cmpsb
add
cli
iret
fsubs
ss
lret
pop
stos
xor
nop
jl
cmpl
dec
cmp
imul
loope
push
sbb
popf
and
scas
aam
push
inc
gs
out
cmp
popa
sbb
dec
xchg
shll
mov
sbb
sbb
push
mov
jo
fnstsw
or
or
fisubs
testl
lret
push
das
aaa
nop
pop
out
inc
inc
sub
mov
xchg
jle
dec
outsl
fdivrl
es
leave
cmpl
std
stc
fnsave
add
mov
jp
fwait
push
pusha
xchg
xor
or
jmp
xlat
icebp
test
insl
scas
lods
sbb
mov
dec
sub
icebp
fdivrl
fisttps
dec
pusha
fistl
or
lods
rcr
push
jecxz
popa
mov
fcomp
sarb
jp
gs
or
fmul
sub
rolb
dec
inc
mov
push
or
add
sbb
mov
cli
js
scas
xor
das
xor
out
pop
xor
test
shll
push
and
cmp
insb
sbb
mov
aad
pop
mov
sub
aam
mov
dec
jno
mov
outsb
dec
lock
adc
cs
mov
jns
cmpsl
lods
fmuls
std
dec
jl
push
stc
ss
sbb
std
xchg
cli
incl
sub
ss
inc
pusha
loop
pop
jo
fisttps
mov
sub
fs
aad
cmpsb
xchg
clc
push
push
adc
shr
or
or
lock
loop
lret
jo
in
es
mov
jns
outsb
cs
add
enter
aad
pop
cmp
mov
dec
adc
adc
cld
fildl
in
dec
inc
fdivr
fwait
in
test
inc
sahf
cmp
cld
cwtl
cmpsl
mov
push
add
stos
cs
mov
pop
and
xchg
imul
mov
into
or
push
jb
push
dec
add
into
mov
inc
add
mov
or
xlat
mov
jno
cmpxchg
jo
popl
fcoms
dec
pop
outsb
inc
add
inc
jne
add
mov
shll
pop
std
jge
aas
sbb
mov
cli
gs
mov
outsb
mov
jle
pusha
mov
sarb
into
rolb
xor
push
fstp
xorb
int
adcb
add
push
stc
add
pop
dec
sarl
outsl
in
inc
sbb
push
mov
ror
in
xchg
aam
ret
mov
sub
lock
xor
inc
cmp
cmp
xor
mov
xlat
pop
sub
dec
and
test
incl
loope
mov
dec
xlat
jmp
insl
mov
mov
dec
ret
pop
push
sub
test
mov
add
cli
jmp
push
pop
inc
shlb
pop
add
aaa
stc
mov
xor
pop
std
pop
cs
cld
mov
stos
mov
stos
pop
xchg
pop
outsb
adcb
jg
or
mov
xchg
je
or
push
test
lahf
shrl
js
sub
vpmovzxwq
pop
cwtl
out
mov
mulb
sub
jg
add
daa
clc
cmp
push
push
cmpsl
fmul
inc
lods
enter
test
ljmp
push
fld
mov
in
dec
sbb
fsubrs
mov
aas
jo
nop
test
ss
dec
imul
fists
cmp
inc
xor
test
fldl
push
push
lret
cld
jle
add
push
int3
jae
lds
push
es
cli
mov
adc
xlat
dec
sub
stc
fxch
push
pop
or
repnz
sub
sbb
sbb
inc
nop
fwait
dec
inc
arpl
mov
insl
mov
push
outsb
loope
lods
into
dec
mov
xor
and
ret
mov
cli
jmp
and
xchg
dec
cmp
ds
inc
cld
aam
jecxz
ja
sbbl
xor
shrl
xor
stc
push
push
stos
loop
popa
movsl
aaa
push
mov
mov
sub
fmuls
sbb
rcl
int
stos
and
push
cmc
or
out
xchg
lcall
jno
mov
xchg
jb
lock
jb
jno
js
sbb
mov
mov
sbb
pop
pop
sar
cmp
cs
imul
pop
push
jns
das
lods
jmp
mov
loop
jle
cltd
jp
stc
or
ficoml
lea
mov
mov
mov
dec
movl
pop
xchg
test
xor
notb
mov
xchg
add
add
jle
fcompl
cs
xchg
call
push
pop
jl
cli
js
mov
jmp
cmpsl
fstl
cmpsl
mov
mov
and
push
inc
inc
sub
xor
mov
test
rorl
mov
adc
adc
shlb
pop
pop
mov
test
fiadds
push
mov
push
arpl
fdivrp
in
fcoms
movsl
push
xor
dec
push
pop
xlat
stos
sub
sbb
cmpsb
or
aad
xor
decb
xor
test
int
movsb
js
mov
add
inc
aas
in
or
aad
xlat
dec
mov
nop
das
xchg
icebp
icebp
add
mov
stc
mov
mov
lods
fiaddl
inc
pop
dec
into
inc
push
popf
rcr
jno
mov
xor
loopne
leave
fistpl
push
lods
lcall
xor
add
inc
inc
outsl
imul
orl
out
add
rcrb
or
inc
mov
mov
inc
dec
mov
mov
ret
adc
scas
popa
cli
aam
popa
data16
jnp
ficompl
mov
stc
mov
cmp
pop
stos
and
aad
push
std
adc
ljmp
imul
and
jecxz
adc
rcll
into
cmp
cmpl
imul
dec
cmp
pop
iret
ja
fistpl
inc
out
mov
cmp
into
mov
or
or
xlat
jae
cmp
lods
repnz
mov
int
xchg
aas
mov
adc
cli
jae,pt
decl
lcall
lds
xchg
xor
test
mov
fstps
cmp
add
aam
sbbb
adc
imul
add
and
andl
enter
pop
cmp
cli
loop
cmp
fcomps
push
leave
lcall
and
imul
fcomp
enter
mov
xchg
ja
int
into
orl
fadds
das
lahf
fldenv
lret
fstpt
iret
pushf
lret
loopne
and
leave
fs
and
ljmp
sbb
inc
mov
push
pop
jmp
xor
ret
stos
inc
rorb
sti
push
das
dec
mov
mov
mov
push
jle
sbb
cmpsb
xlat
cmp
das
out
jns
ss
sub
xor
adc
inc
test
fndisi(8087
adc
mov
pop
xchg
adc
outsl
or
arpl
jge
pushf
outsl
cmp
dec
mov
push
xor
cli
loop
movsl
fistpl
and
sbb
sar
sub
xor
push
jg
xor
fidivl
or
xchg
sub
xlat
hlt
inc
ror
cmpsb
enter
sahf
lods
cmpl
mov
subb
sbb
cmp
cmp
mov
outsb
cmp
cltd
adc
mov
mov
mov
arpl
lahf
lods
pop
faddl
sub
out
enter
mov
loopne,pt
push
pop
dec
outsb
cltd
mov
adc
adc
jns
es
or
and
in
clc
into
jp
in
fdivrp
or
jo
mov
or
flds
inc
idivb
xor
mov
jo
popa
sahf
mov
push
lds
pop
stc
and
cld
movsl
add
and
pop
add
sub
dec
loop
jmp
fnstcw
xchg
call
nop
cs
shlb
xor
in
addr16
jg
add
push
lea
cld
gs
out
sbb
add
inc
mov
mov
aaa
cs
lahf
stc
ficompl
lds
inc
mov
or
mov
adc
xchg
cmp
cmp
adc
adc
imul
pop
aam
mov
sbb
aas
add
xchg
sub
lods
aad
push
aad
out
lods
loope
dec
fsubrp
dec
cli
in
inc
popf
rcl
notl
inc
sbb
jo
aaa
scas
xor
popf
js
imul
or
lcall
push
out
jb
mov
jg
mov
and
flds
mov
or
loop
popa
fsubp
mov
mov
inc
cmp
ret
cli
int
and
loop
jno
cs
cwtl
mov
imul
fldl2e
push
pop
fcoms
daa
inc
jle
lock
inc
pop
subb
std
and
sti
lods
mov
stos
cmp
mov
push
dec
jnp
sub
inc
add
movsb
mov
jns
mov
xchg
jns
ret
fiadds
sbb
repnz
xchg
mov
cmp
jb
push
xchg
dec
and
insb
jo
mov
rcr
xor
movsl
cld
jmp
mov
pop
movsb
inc
pusha
mov
lock
or
lret
cli
mov
movsl
cmp
jnp
sub
call
inc
call
cmp
fwait
sub
push
ljmp
mov
in
jbe
clc
mov
pop
in
in
push
insb
movsb
rcl
lods
imul
jmp
xor
in
jp
cmpb
or
fdivr
push
push
rclb
aas
leave
int
cmpsb
cld
fildl
decl
xchg
dec
pop
dec
cmp
inc
les
lods
sbb
jl
jp
jge
loop
scas
cmp
adc
fiaddl
lods
and
fnclex
add
lock
movsb
or
sbb
mov
imul
cmp
pop
sti
xchg
mov
sahf
mov
xchg
in
in
mov
sbb
sbb
call
stc
out
fcompl
scas
in
leave
scas
ret
fistps
or
add
xlat
sbb
xchg
lahf
aas
test
aaa
inc
mov
sub
in
sub
xor
ret
jno
jae
jb
push
mov
xor
and
or
stos
and
dec
out
dec
or
shr
push
push
lea
mov
ret
frstor
dec
pop
repz
xchg
sub
sti
aaa
xchg
jp
jp
sarb
lret
cmp
pop
out
dec
pop
clc
pop
lds
and
faddl
xor
orl
inc
pop
push
dec
je
scas
mov
adc
or
push
add
jae
and
sarb
sub
dec
and
fstpt
mov
pop
jo
sbb
sub
add
pusha
push
sbb
lahf
subb
notl
repz
jecxz
shrb
dec
push
ret
aad
shlb
push
pop
stos
inc
call
pusha
inc
or
gs
inc
jo
outsb
movsb
and
mov
mov
in
sub
subb
ljmp
mov
cmp
mov
and
stc
ret
cmc
out
ss
fwait
lcall
pop
rclb
incb
sub
mov
push
test
sub
daa
mov
xchg
push
cli
add
ret
outsb
fldcw
daa
sbb
add
lods
inc
aam
stos
cmp
cs
sub
loop
mov
jbe
cmpsb
mov
pop
leave
ficompl
xchg
mov
xor
stos
out
adc
sub
outsb
jae
inc
outsb
jo
outsb
in
xor
add
stos
loope
push
scas
lcall
xchg
cld
pop
and
jb
jle
pop
add
mov
xchg
or
and
cwtl
push
xor
sti
roll
pop
gs
out
or
mov
cmp
inc
push
shrl
push
jecxz
cmp
lock
pop
add
add
xor
jae
dec
xchg
incl
push
push
rcll
fs
cmp
mov
mov
mov
in
add
rcrb
push
je
dec
jo
call
mov
rolb
sahf
rcll
or
cli
dec
daa
xor
cltd
fmuls
sbb
iret
xlat
pop
in
cmp
cli
mov
add
and
imul
int3
cli
xchg
cli
imul
stc
inc
dec
aaa
pop
into
dec
add
jae
cmp
sbb
test
jbe
dec
inc
insb
inc
nop
dec
cmp
inc
mov
test
pop
iret
cltd
subl
push
mov
outsb
mov
mov
inc
insb
test
jg
lret
ljmp
leave
addr16
jge
cmp
mov
std
cmp
fcmovne
insb
sub
fcomip
cs
add
jl
jnp
mov
fbld
cs
push
idivl
jb
push
aam
dec
cmc
mov
shlb
loopne
loopne
mov
adcb
push
pop
jecxz
into
and
aam
add
pop
fidivl
sbb
add
cwtl
cmc
repz
rorl
dec
mov
cmp
cmc
insl
xchg
or
cmp
push
pop
mov
mov
les
inc
xor
xor
loope
mov
in
test
in
or
cmpl
cmp
out
fsubp
pop
mov
insl
fisttpll
sbb
pop
or
xor
popa
inc
fsts
add
leave
or
sub
dec
mov
dec
fmuls
cmp
movsl
dec
std
gs
scas
fbld
les
xor
xor
or
inc
hlt
into
sbb
rolb
sub
lret
xorb
out
xor
xchg
push
cmc
mov
fisttps
cld
sub
xor
mov
bound
ljmp
add
inc
mov
and
sahf
inc
add
insb
xchg
mov
imul
call
adc
xchg
sti
imul
inc
loopne
shrl
jns
mov
pop
add
mov
push
in
stos
add
test
test
loopne
xchg
decb
mov
mov
andl
add
data16
lods
mov
mov
in
cmp
inc
sub
adc
xor
repnz
cmp
sub
fadds
xchg
dec
negl
sar
xchg
sub
fwait
inc
xor
ja
fistl
cmc
jg
sarb
push
fdivrp
fdivr
jp
cmp
sub
mov
and
mov
xor
add
add
dec
fs
cld
adc
scas
jmp
std
pop
lcall
test
add
test
shl
sub
call
push
mulb
sub
ljmp
or
inc
add
mov
xchg
shlb
mov
insb
mov
and
and
sahf
or
cld
pop
push
mov
into
push
pop
ret
mov
cmovp
cs
dec
or
lock
sbbb
jle
out
add
mov
into
lret
pop
jg
mov
cmpsb
mov
cltd
dec
inc
fsubl
ret
xchg
cmpl
inc
dec
fisttps
inc
fidivl
pushf
mov
inc
lock
fstpt
in
fdiv
push
aas
mov
out
push
pusha
xorb
fstp
mov
jno
push
sbbb
push
rorl
mov
push
das
fdivl
sbb
sbb
lods
pushf
inc
mov
add
in
pusha
decl
ljmp
inc
std
push
push
xor
ficomps
cli
jge
insl
das
inc
cmp
subb
ficoms
aam
add
lods
pop
xchg
cmp
ret
mov
test
rclb
into
mov
cli
rorb
stc
lret
xor
inc
aas
or
in
ds
xchg
cmp
aad
jp
mov
sti
and
jp
loope
mov
xor
loop
push
mov
push
sbb
or
sarb
cmc
mov
scas
pop
ret
sbb
sarb
inc
mov
push
test
lahf
out
sbb
cwtl
movsb
das
jbe
scas
or
and
cmp
xchg
aam
pop
and
jne
push
pop
testl
mov
sub
mov
dec
xchg
popf
call
mov
lods
bound
xchg
jnp
cltd
rorb
xor
mov
inc
cmpsl
jae
inc
test
mov
repnz
test
fnclex
xchg
lret
sbb
xor
or
jb
not
mov
sbb
xor
fldenv
fadds
shlb
pop
int3
dec
in
cmp
rcrb
cltd
daa
testl
nop
shlb
cmp
push
int
sub
sbb
pop
cmp
jge
push
xlat
ret
mov
fwait
rcr
inc
out
mov
in
lds
cmp
je
dec
mov
imul
jo
adc
adc
push
scas
loope
xor
addr16
mov
and
dec
insb
jl
aad
inc
fstp
mov
pushf
add
mov
push
ret
daa
xchg
mov
add
test
scas
sahf
inc
rcrb
and
shll
push
fxch
xor
cmp
jp
push
sarl
mov
lret
iret
mov
outsb
xchg
imul
shr
push
rcr
out
loop,pt
xor
or
lods
aas
das
cmpsb
je
fdecstp
or
ret
daa
and
mov
inc
nop
add
xchg
sbb
call
rcl
sub
jecxz
adc
mov
cmp
sbb
add
add
dec
imul
int3
out
xchg
mov
push
jecxz
xchg
add
pop
aad
cld
cli
push
inc
jmp
inc
mov
lret
pop
sbb
repnz
add
inc
cmpsb
push
mov
adc
in
adc
fsubl
das
cli
pop
shrl
ds
sbb
mov
or
xor
sub
mov
sub
pop
out
mov
and
cmp
xor
inc
jge
push
mov
pop
cmc
mov
popa
outsb
out
jb
inc
jns
sub
outsb
sti
mov
xchg
add
mov
insb
mov
out
out
cmc
popa
enter
jecxz
mov
xor
aam
xlat
shll
out
sbb
or
jnp
pop
cmp
addr16
xor
repnz
dec
incl
or
cmp
imull
rcl
lret
add
ja
or
xchg
pushf
arpl
push
xchg
lods
std
dec
arpl
test
aas
adc
dec
adc
and
jge
sarl
jbe
dec
add
cld
rolb
sub
sbb
lock
cmpsb
push
insl
mov
mov
call
imul
lcall
inc
cwtl
fucomip
fsubrs
lcallw
jb
idivb
add
jecxz
shrb
and
fldt
loope
sub
mov
into
mov
jne
and
mov
fcoms
repnz
adc
lret
push
adc
mov
mov
dec
jns
xchg
lock
cmp
jge
mov
aas
cs
int
fdivl
xchg
add
lock
and
cmp
push
pop
pop
outsl
xchg
and
push
pop
add
inc
mov
adc
mov
adc
xlat
fimull
push
cs
and
out
sbb
shlb
cmp
movsl
adc
and
dec
std
shr
out
in
jo
hlt
jns
iret
testl
rol
rol
xchg
sbb
cli
sub
inc
mov
sub
into
push
lret
stos
xor
inc
aaa
xor
mov
jb
mov
lds
aaa
push
ds
hlt
mov
mov
aad
rcll
rclb
jno
mov
mov
mov
fninit
lcall
mov
add
into
scas
mov
aaa
xlat
cli
mov
cmp
dec
cmc
mov
jmp
mov
jb
jge
fsubrs
mov
push
dec
jae
pop
das
test
or
enter
lahf
mov
inc
lock
pop
loopne
in
fidivs
lcallw
mov
cmc
xor
dec
inc
jns
push
ficomps
mov
ds
inc
std
nop
data16
in
out
add
pop
mov
daa
sub
push
inc
mov
jecxz
out
out
lods
xor
xchg
in
loop
jl
inc
adc
cli
adc
jbe
outsb
imul
cli
test
mov
jb
lret
dec
int
repnz
and
sti
sahf
mov
jno
addl
scas
mov
xchg
pop
ss
xor
xorl
outsw
repz
rcll
aas
cs
mov
sbb
mov
inc
sbb
cmp
inc
mov
mov
mov
and
icebp
andl
nop
test
nop
int3
mov
sub
inc
loop
sti
lea
cmp
repnz
push
stc
inc
rcrb
mov
pop
cmp
sbb
jbe
lahf
dec
or
imul
rorb
cmp
pop
lret
loop
btc
rorb
rorb
mov
call
inc
mov
leave
push
and
int3
xchg
jo
and
dec
ja
movsl
out
sahf
arpl
add
pushf
imul
jp
fistps
cmc
imul
inc
std
mov
das
pop
pop
push
shll
dec
mov
sbb
mov
sbb
arpl
push
dec
mov
ljmp
xchg
rcr
sub
fnstenv
adc
lret
std
push
fld
or
push
les
mov
sub
or
scas
add
sbb
cld
xlat
stos
pop
movb
loopne
or
sbb
add
sbb
xchg
or
dec
xchg
fdivs
jmp
lahf
cltd
lahf
jns
into
xor
std
loopne
cmp
push
popl
rorl
clc
mov
fldl
nop
push
fs
clc
push
mov
jo
fldl
bswap
js
ds
mov
out
pusha
cmp
rcr
jb
mov
push
cli
or
lea
jle
sar
xchg
dec
lret
adc
mov
call
adc
mov
xor
aam
rol
sub
mov
fisubs
jbe
sbb
ret
lea
clc
pushf
scas
es
push
push
mov
dec
cmp
cli
mov
push
scas
pop
maskmovq
testl
adc
jge
pop
in
push
dec
into
data16
cld
add
mov
jo
daa
sbb
bound
mov
cmc
cmc
out
mov
sarb
fldl
inc
add
insb
clc
sbb
mov
fimull
sarb
fistpl
ret
add
mov
popf
sub
dec
mov
jmp
mov
ret
aam
sbb
sbb
movsb
lods
or
pop
testb
push
add
fildl
sbb
mov
inc
roll
data16
pop
sahf
clc
and
jp
mov
and
repnz
pusha
mov
inc
inc
dec
add
addr16
aad
fisubrl
repnz
jbe
inc
inc
or
adc
xchg
pop
popf
pop
xchg
fcompl
flds
xor
into
andb
xor
jp
nop
stos
imul
mov
mov
jne
add
rclb
mov
xchg
cmp
divb
inc
xorl
fadd
add
outsl
in
jle
out
insl
repz
inc
dec
stos
out
jg
add
aam
inc
pop
outsb
test
not
push
or
pop
dec
jae
push
mov
cli
rcl
std
xchg
ds
sub
ljmp
mov
xchg
cli
mov
add
in
es
mov
inc
dec
xlat
leave
out
push
ret
in
repnz
test
jp
fstps
xchg
push
filds
cmp
lods
pop
mov
insb
test
adc
icebp
sbb
inc
sahf
or
or
lret
push
inc
add
in
fdivl
dec
insb
push
push
stos
xchg
push
jge
adc
fcmove
xchg
repz
int
cmpl
pop
aad
xor
pop
sub
hlt
cmp
into
adc
xor
push
mov
dec
das
aad
push
cmp
mov
je
nop
add
jle
insb
jmp
out
inc
cltd
cmp
pop
ss
daa
mov
fcmovnb
inc
sahf
out
or
movsb
aad
call
lock
or
jne
sub
or
inc
shl
clc
stos
add
push
push
aas
inc
pop
fcomps
data16
fnstenv
jne
sub
in
imull
or
mov
scas
adc
or
das
and
shrb
aas
inc
adc
mov
or
cmpsb
jmp
pop
xchg
je
sahf
ljmp
mull
mov
aam
hlt
cmp
pop
and
jp
ret
pop
sahf
mov
pop
imul
shrb
lods
scas
loop
pop
mov
sti
fcompl
xchg
pop
arpl
pop
pop
inc
push
xchg
xlat
xchg
lods
rcll
orl
sbb
sbb
sub
dec
clc
test
adcl
inc
jge
loopne
mov
push
lock
leave
push
sub
xor
ds
add
adc
pop
gs
fnstenv
add
mov
int3
mov
dec
adc
add
add
or
mov
cmp
nop
in
pusha
dec
cmp
inc
adc
pop
mov
test
xor
cmpsl
mov
mov
bound
inc
ss
push
out
stos
sbb
xchg
mov
js
vpaddusw
sub
fwait
pop
es
stos
stos
mov
lods
sub
xchg
in
sahf
pop
rorb
or
pop
divb
xchg
sahf
mov
imulb
test
ret
xor
fmul
xchg
pop
test
subl
xchg
lods
mull
rdmsr
mov
hlt
lahf
ret
sahf
loope
add
repz
cmp
movsb
lret
cmp
into
pop
xor
loop
jp
push
fisubs
jbe
je
xchg
je
repnz
in
in
iret
jmp
mov
cmp
dec
clc
and
incb
add
cmp
out
mov
cmp
sbb
icebp
xor
mov
fsubp
outsl
lods
mov
mov
popf
ret
movsb
iret
add
adc
jb
shll
sahf
and
pop
inc
jmp
or
fwait
lret
outsl
stos
push
dec
inc
jbe
xor
aam
add
jl
xor
jno
cli
rcr
sahf
mov
push
aas
add
sub
jb
not
cmp
fcompl
sti
and
jp
cmp
cmp
ss
sub
pop
leave
nop
stos
rorl
mov
sbb
imulb
xchg
popa
sbb
aad
cmp
pop
js
fbld
mov
cmp
dec
repnz
ja
addr16
bound
filds
outsl
adc
test
pop
adc
fidivs
andb
mov
xchg
cmpps
and
loopne
fnstsw
add
sti
pop
inc
arpl
inc
push
fistl
adc
jb
cmpb
cld
jno
push
shrl
std
inc
and
int3
inc
inc
cmc
inc
xor
xchg
cltd
rorl
popl
movsl
add
adc
adc
adc
push
cltd
adc
clc
insl
inc
add
icebp
push
xchg
push
out
push
mov
push
ficoms
jb
pushf
call
movsl
fcmovbe
aam
jp
pop
xor
xchg
ffree
mov
sbb
cmp
xchg
xchg
arpl
cmc
and
jae
orl
push
rclb
ficoml
je
hlt
ffree
mov
mov
cmp
out
testb
sub
fadds
je
fsubs
ds
lods
cld
loopne
or
lahf
ljmp
out
inc
and
les
ret
adc
hlt
fbstp
dec
xor
stos
hlt
mov
push
add
mov
dec
mov
add
lods
jae
out
fcmovne
and
in
sbb
cmc
jge
movb
bound
test
stos
fidivs
scas
lret
int
sub
lods
test
jb
int3
repnz
enter
sub
jp
in
aaa
add
or
in
pop
aad
push
dec
sub
ds
pop
std
xchg
fwait
cwtl
jno
push
mov
sub
mov
mulb
fstp
call
loope
shlb
adc
enter
sub
cmp
sbb
mov
inc
adc
movsb
mov
dec
push
shll
mov
push
push
ja
mov
sti
sbb
dec
int
loop
xor
shl
mov
imul
xor
into
jbe,pt
push
dec
cmpb
stos
or
int3
popa
and
pop
pop
ficoms
addr16
mov
fdivrl
add
push
mov
dec
rorb
xor
cmp
pushf
lret
adc
stc
cmp
repnz
outsb
pusha
fcmovnb
sarl
xorl
loop
xor
stos
sbb
and
mov
daa
dec
les
adc
sarl
pop
dec
test
add
in
mov
ficomps
jg
sub
sub
js
xchg
mov
mov
daa
jg
out
std
add
pop
mov
cmp
loope
clc
leave
fldenv
dec
sarl
dec
adc
filds
cmp
add
decl
mov
outsb
pop
xor
xchg
lods
xlat
pop
and
imul
xchg
mov
dec
orb
popa
loop
call
popa
lahf
clc
ds
mov
mov
dec
lock
roll
add
sub
dec
mov
cmc
fcomp
mov
jne
inc
rolb
push
jecxz
jae
fs
rcrb
pop
and
adc
sub
fists
jle
mov
pop
xchg
jbe
inc
fcompl
jmp
xchg
je
sbb
add
insb
and
pop
xchg
imulb
xor
cld
add
aaa
push
js
mov
xchg
int3
scas
iret
or
push
in
and
inc
push
xchg
pop
pop
pop
scas
push
int
add
stc
mov
aaa
in
shrb
cli
pop
inc
cld
mov
js
and
mov
jl
sti
xor
lds
clc
inc
add
mov
cli
mov
cmp
and
mov
dec
cmp
jbe
mov
push
adc
add
arpl
stos
negb
or
test
fwait
rcrl
inc
cmpb
add
leave
test
imul
imul
mov
fldcw
pop
jne
cmc
inc
jl
lock
pop
fiaddl
repnz
adc
jne
xchg
cmp
ret
popf
pop
bnd
dec
mov
fidivl
lret
lock
mov
fs
mov
iret
cmp
xor
jp
jae
test
xchg
movsl
mov
ljmp
cmp
mov
dec
fcmovnbe
push
imul
lcall
dec
out
pop
dec
mov
stos
cwtl
or
jmp
stos
adc
mov
xor
fdiv
shll
mov
mov
jp
add
ret
pop
xchg
outsb
xchg
push
clc
pop
adc
add
js
cld
les
pop
nop
push
cmpsl
jns
cmp
js
stc
imul
dec
mov
hlt
and
decl
cs
mov
into
test
push
cmp
dec
shlb
dec
in
decl
aam
pop
sub
nop
test
pop
mov
mov
pusha
fs
int
out
jae
scas
jg
mov
xchg
rorl
fisubrl
arpl
adc
jne
sahf
mov
clc
lret
xchg
rol
daa
pop
mov
dec
mov
fwait
inc
push
aad
push
leave
and
ret
pushf
pop
in
insb
cmp
adc
insb
ljmp
mov
outsl
iret
inc
sarb
push
nop
or
xlat
loop
inc
add
or
or
mov
jno
dec
or
scas
insl
or
das
into
inc
fldcw
push
push
push
insb
sbb
jns
adc
rcrl
cmovnp
fldcw
frstor
std
mov
add
lret
push
or
fistpll
xchg
push
lret
jmp
sbb
inc
cmp
stos
jecxz
shrl
sbb
andl
out
std
jecxz
cmp
xor
xchg
fwait
in
lds
add
mov
jns
in
sbb
inc
inc
sub
sub
push
daa
jae
mov
push
nop
insl
jle
push
ja
addr16
dec
lock
fisubrl
in
enter
out
aam
fstpt
add
add
xor
mov
xlat
add
ss
mov
scas
and
js
test
inc
pop
cld
in
sarb
sub
pop
stc
sbb
repz
imull
mov
jno
ds
cmp
inc
in
shlb
inc
cmc
inc
mov
ljmp
or
test
out
fscale
or
pop
fisubrs
cmc
repnz
or
cli
push
push
lret
pop
mov
std
jnp
jge
fidivrl
mov
cmpb
in
jno
scas
in
repnz
icebp
pop
imul
sbb
fsubrp
xchg
cld
or
addr16
lret
out
sbb
adc
and
test
inc
inc
mov
jmp
notl
jnp
aas
inc
fdivrs
lcall
inc
inc
addb
xor
pop
jns
in
inc
fiaddl
inc
and
push
mov
and
out
fidivrs
dec
mov
sub
fs
lds
shlb
addl
xchg
push
push
inc
data16
xorl
das
mov
xor
pop
cld
xchg
mov
and
pop
xchg
lock
mov
push
pop
inc
add
cli
sbb
add
sbb
adc
scas
cli
cmpl
out
fistpll
divl
mov
int3
jo
mov
sahf
push
add
icebp
pusha
inc
cs
popa
and
scas
push
in
inc
pusha
lret
outsb
dec
jmp
xor
fiaddl
mov
pop
in
pop
repz
cmp
fucomi
push
outsb
jne
ficompl
dec
add
push
xchg
popf
testb
sbb
jmp
mov
add
negl
xchg
push
inc
mov
mov
and
mov
rolb
arpl
adc
jb
push
sbb
pop
sahf
rcrl
adc
sbb
cld
sbb
fwait
sub
cmpsl
jmp
ljmp
push
inc
or
jne
loop
dec
lods
dec
dec
lret
jle
mov
and
add
pop
ja
mov
and
mov
loope
pop
andl
mov
sub
fimull
scas
pop
aam
fisubl
jl
dec
sbb
testl
mov
jl
stos
sub
shl
xor
ljmp
ljmp
fimull
or
nop
pushf
stos
mov
jmp
jecxz
and
jecxz
arpl
subb
push
pop
pop
inc
sahf
sub
stc
shlb
push
fmuls
push
dec
test
xor
in
lcall
aas
cmpsl
mov
dec
dec
leave
mov
inc
pop
cmp
xor
aas
fwait
loopne
ret
lods
adc
int3
out
fcompl
stos
cli
das
out
cmp
neg
jp
mov
pop
sub
sbb
out
push
loopne
cs
xor
adc
sbb
sbb
sbb
pusha
mov
ds
adc
bound
hlt
dec
mov
rcll
repz
add
fisubl
mov
or
pop
lods
mov
lahf
sti
data16
iret
mov
xor
in
mov
fisttpll
adc
push
jge
loopne
shr
je
daa
sbb
jno
pop
movsb
ja
lret
cmp
inc
pop
or
push
jns
and
pop
jecxz
popa
or
dec
int
ret
sbb
fsubl
jmp
aad
mov
sbb
mov
incb
sahf
mov
jae
loope
lcall
hlt
adc
mov
push
sbb
and
lods
and
mov
fwait
xchg
pop
add
call
out
outsl
popa
cmp
mov
dec
sahf
in
mov
out
int3
push
pusha
jo
push
cmc
xchg
and
adc
fmull
in
insb
fisttpl
out
jge
imull
mov
das
inc
add
scas
xlat
fdiv
aad
or
cmp
scas
fsubr
dec
pop
dec
jg
or
testl
xchg
sbb
out
adc
add
out
rorb
imul
xchg
xor
mov
cli
and
mov
pop
xor
pop
insl
pop
jle
int
mov
icebp
mov
jg
fildll
fucomi
cmp
inc
jmp
dec
xlat
bound
movsl
or
lahf
push
lahf
xor
arpl
jle
sbb
hlt
fdivp
out
pop
rcr
mov
push
pop
mov
pop
jns
dec
pop
xor
and
fistl
dec
mov
xchg
inc
pusha
add
fsubrs
push
sbb
fdivrl
xor
outsl
test
imul
lcall
popf
or
stc
push
arpl
mov
popf
or
loop
imul
sarb
xor
stos
xor
mov
pop
mov
cmp
fsubr
scas
lds
jnp
dec
jo
and
scas
cli
lock
jb
jmp
jns
insb
mov
and
cltd
shl
xor
dec
loop
sbb
mov
mov
lret
ret
xlat
das
inc
lock
sub
pop
dec
push
aad
xor
rcrl
inc
imul
loope
xor
jne
adc
add
inc
jo
and
insb
mov
jb
imul
mov
mov
xor
sar
aam
push
sub
pop
data16
mov
pushf
sti
cltd
xchg
jmp
shl
arpl
jo
call
add
clc
enter
mov
push
sub
mov
sub
in
into
dec
roll
dec
push
mov
mov
adc
dec
scas
ficoml
das
and
cmp
push
jne
dec
movsb
xlat
and
movsl
pop
incl
into
and
adc
jg
fistpl
js
cmp
add
inc
jp
shlb
or
fildl
cmp
divl
aad
cmp
add
xchg
aaa
push
addr16
mov
xor
fmul
or
add
mov
popa
and
mov
out
cmc
mov
add
leave
das
inc
inc
addl
mov
pop
xor
inc
cmp
mov
adc
lods
inc
jnp
mov
pusha
inc
mov
xchg
mov
outsb
add
and
cs
rcrb
shl
mov
testl
mov
stc
and
out
pop
rcrl
inc
dec
push
enter
repnz
ret
dec
aad
and
cmp
add
push
stos
inc
outsb
mov
mov
pop
push
ror
imul
pushf
or
ljmp
mov
outsl
or
lcall
xchg
mov
es
je
mov
shlb
jg
add
cmpb
in
nop
aas
adc
nop
pop
test
adc
cmc
sub
aam
adc
adc
xchg
mov
sub
popf
mov
xor
lods
lods
add
loop
xor
icebp
cmp
shll
adc
mov
nop
pop
pop
mov
rcrl
mov
test
sub
mov
cmpsl
popa
sub
xlat
or
sbb
out
jecxz
pop
test
outsb
inc
jecxz
sbb
outsb
mov
cwtl
jp,pt
push
clc
push
rcl
mov
sub
add
shrb
out
das
ljmp
mov
lock
inc
iret
lock
scas
rcr
and
call
cmp
xor
pusha
and
push
add
jbe
or
out
inc
or
scas
cmp
or
repnz
pop
and
jne
mov
outsb
jge
add
add
in
into
sub
loopne
dec
inc
inc
inc
sti
mov
cmp
jle
aaa
dec
push
arpl
ds
dec
fcomi
mov
and
lods
pop
dec
adc
inc
shlb
dec
xchg
ss
fnstsw
add
mov
loope
mov
ds
int3
popf
mov
gs
das
movl
mov
fnstsw
lock
push
dec
scas
adc
arpl
add
xchg
inc
shlb
adc
bound
xchg
aaa
in
inc
adc
int3
push
scas
mov
pusha
test
add
xchg
test
mov
dec
outsl
fisttpll
popa
xor
mov
lock
fisttpll
pop
jmp
xor
mov
sbb
dec
faddl
xor
jp
rolb
mov
or
add
push
aaa
ljmp
mov
push
sar
mov
clc
sbb
sub
cmp
iret
pop
add
imul
adc
jge
or
push
mov
dec
xor
fisubs
aas
add
sbb
dec
repz
mov
push
leave
lea
cmpsl
cmp
ret
jecxz
jbe
cmp
adc
cmc
sbb
popl
jo
outsl
inc
sahf
adc
mov
pop
scas
cmpb
sbb
lods
pop
outsl
jae
xchg
inc
loopne
cmc
aam
push
cmp
sub
nop
daa
imul
jns
add
cmp
jns
lcall
push
mov
shr
in
fldt
push
mov
xor
pop
xchg
adc
sarb
out
cmpb
aam
data16
dec
and
sti
inc
rcl
adc
pop
xlat
inc
mov
rolb
addr16
and
idivb
cmp
ficoml
pop
mov
xor
int3
cmp
adc
jle
adc
lret
adc
mov
cwtl
mov
mov
mov
dec
cmp
loop
test
in
xchg
out
fisttpll
sub
sbb
pop
outsb
aad
scas
hlt
push
loopne
popf
loopne,pt
je
xor
adc
xchg
imul
add
loope
hlt
inc
sti
dec
mov
inc
pusha
arpl
aad
mov
mov
js
dec
add
or
iret
mov
lods
subl
or
mov
inc
fstpt
cmpsl
lds
xor
mov
cmp
sbb
rorb
nop
inc
cmp
mov
clc
cli
into
lcall
dec
inc
mov
or
sub
jl
dec
push
add
pusha
sbb
jnp
xchg
repnz
out
in
cmp
das
sbbb
mov
jne
mov
xor
aaa
std
or
cmp
std
jnp
pushf
ret
loopne
mov
rdmsr
push
add
mov
xlat
mov
mov
testb
cmp
add
xchg
xor
mov
ret
jb
cmpsb
pushw
ljmp
and
cmp
cmp
xchg
inc
push
mov
dec
or
mov
std
rcll
daa
shr
adc
pop
add
sbb
aaa
hlt
add
sbb
mov
mov
enter
shrb
jnp
dec
fwait
shrb
pop
cld
fdivs
inc
push
cmp
std
jle
rorb
dec
fs
sub
stos
rclb
mov
sbb
outsl
push
lret
dec
das
in
push
bound
mov
pushf
dec
xor
mov
add
cmp
aad
movsl
xchg
adc
push
loope
dec
jno
fstsw
ret
mov
dec
xchg
faddl
scas
xchg
stos
fiadds
icebp
jmp
inc
int
jp
ret
dec
xchg
nop
leave
loop
inc
xor
mov
arpl
push
mulb
cmp
cld
pop
cmp
cmc
out
push
dec
sbb
push
mov
ret
push
bound
fdivrl
pop
in
rcl
sti
loope
scas
lret
ret
gs
lret
sahf
sbb
xchg
jp
cmpb
pop
fiadds
or
dec
shrl
gs
loope
jg
movsb
popa
xchg
cmp
mov
add
fst
push
adc
clts
mov
push
call
add
push
push
cmp
mov
imul
and
lea
mov
movsb
in
enter
enter
xlat
repz
sbb
sub
sbb
imul
fldl
fcmovnb
mov
aaa
mov
cmpl
loopne
xchg
sbb
movsl
pop
fcomip
jl
je
cmp
jp
push
mov
faddp
or
int3
xor
xor
adc
cmpsl
mov
mov
cmc
loopne
test
movsl
push
push
jecxz
std
push
mov
test
sub
call
fs
cs
mov
xor
cmp
jne
int3
pop
ret
out
int
in
outsl
hlt
sar
xchg
push
outsb
sahf
add
jle
outsb
decb
mov
add
inc
std
xor
add
push
mov
mov
mov
in
mov
and
sbb
adc
push
pop
aas
jo
rcr
enter
fildl
inc
fs
into
dec
mov
xorl
mov
ds
dec
shlb
adc
nop
push
das
loop
cmp
out
sub
lods
push
sub
pop
pop
inc
insl
mov
sahf
aad
add
sahf
push
jecxz
lock
pusha
jp
in
xchg
test
orb
mov
adc
mov
cmpsl
cmpb
or
shrb
add
adc
rorb
mov
cmc
and
or
inc
and
mov
fbstp
and
pushf
mov
dec
not
cmc
inc
and
mov
push
call
into
mov
imul
das
test
jle
sarl
push
push
sbb
insb
lods
sub
nop
hlt
daa
into
or
push
rcr
mov
jmp
cmp
fisttps
sbb
insl
push
ss
sahf
dec
add
cli
xor
arpl
xorb
cmp
jnp
pop
rcl
mov
test
pop
fldenv
push
push
cmp
in
xor
movsl
sub
jo
test
stos
sub
cmpsb
test
adc
cmp
repz
add
addr16
cli
push
push
icebp
xor
ret
das
clc
push
lret
loopne
mov
mov
iret
mov
mov
cmp
push
sub
inc
push
int
or
sbb
rcrl
fcmove
ficompl
pop
dec
jle
push
add
mov
in
pop
mov
lods
call
xchg
aam
mov
int3
dec
jle
inc
add
rcl
aad
pop
fcom
aad
add
push
and
fstps
mov
ret
stc
arpl
stos
mov
movsl
add
lahf
call
test
in
adc
mov
les
bound
adc
jbe
fcompl
neg
inc
lock
cld
pop
lods
push
cmc
rcr
shrl
jg
sub
xor
sub
ret
push
ja
mov
and
add
orb
lcall
js
adc
mov
sbb
dec
ficomps
jmp
sub
cltd
fbstp
aas
and
push
out
xor
sar
mov
out
fidivl
add
dec
int
movsl
fdivr
sub
mov
shr
adc
bndldx
jno
dec
pusha
insl
mov
aas
pop
jl
inc
ficoms
rorb
loope
loope
xchg
mov
popa
shrb
je
push
xor
or
push
into
ret
mov
mov
lock
test
ss
mov
ds
div
add
or
cmp
or
movsb
xlat
fimull
xchg
sti
shl
inc
adc
dec
mov
bound
orb
data16
dec
cmp
pop
pop
imul
jno
pop
in
add
rolb
js
les
inc
into
aas
andl
rcrl
pop
cmp
pusha
and
aad
mov
jbe
xor
inc
mov
test
repz
lahf
dec
icebp
loop
lcall
jnp
mov
aad
push
adc
rol
arpl
jmp
ret
into
dec
loope
cltd
xor
or
cmp
push
jecxz
xchg
jp
ljmp
addb
fldenv
les
fcomps
xor
jle
stos
hlt
arpl
push
pop
aad
xchg
cmp
inc
add
test
ret
lret
add
in
xchg
mov
sti
fcmove
mov
loopne
jbe
jne
cmp
and
repnz
fwait
in
inc
cmp
pop
push
pop
divb
inc
push
mov
stos
mov
xchg
into
push
bswap
jmp
flds
movsl
sbb
jmp
addb
fidivl
fadd
repnz
push
push
xchg
lds
ret
popf
xlat
pop
sub
ds
outsl
dec
loopne,pn
mov
arpl
test
dec
fcmove
wrmsr
jp
or
mov
lea
gs
out
and
or
pop
pop
mov
js
andb
fs
out
into
movsb
xor
adcb
repnz
add
inc
jp
ljmp
andb
xor
lods
addr16
jnp
jbe
lahf
jg
pop
imul
into
lcall
gs
mov
push
mov
paddsw
out
push
sub
cltd
xchg
aaa
push
aad
xor
jp
mov
loop
or
pop
push
cmpb
jb
lcall
inc
aad
cmp
cs
or
and
lret
insb
mov
subb
xor
and
std
repnz
mov
cmc
test
nop
cmp
std
jne
iret
mov
gs
insl
cmp
sub
fcmovnbe
stos
in
into
arpl
jbe
cs
shl
and
fmull
xor
adc
jb
inc
add
pop
push
daa
and
fstps
fmul
mov
incb
mov
stc
fs
push
scas
or
inc
mov
and
out
pop
ficoms
pop
xlat
popa
aas
mov
xchg
push
lret
sahf
hlt
arpl
dec
inc
cmpb
xchg
fidivl
pop
pop
xor
ljmp
fsubrp
jmp
test
pusha
fucomi
js
add
roll
mov
sbb
or
loopne
push
and
rcll
cmp
dec
shl
xor
aaa
dec
xor
add
lods
jle
scas
sbbb
lock
int3
outsl
cld
inc
shrb
sub
rcrl
or
adc
cmp
xor
jmp
loope
mov
out
test
scas
pop
sub
mov
enter
mov
enter
out
lret
mov
xchg
sub
mov
xor
lret
and
sar
jecxz
xor
or
ss
lock
sbb
push
aam
dec
sbb
push
inc
and
in
insb
lret
shll
jecxz
ss
enter
ds
ljmp
push
push
stos
jmp
test
lock
push
jns
addl
xchg
les
pop
cmp
push
testb
scas
sub
pop
xchg
xor
mov
cmp
mov
popa
adc
sbb
xor
push
fcoms
or
fiaddl
ror
orl
int
add
loop
cmp
stos
ja
xchg
or
jnp
repz
scas
push
xchg
movsb
loope
xchg
ffree
mov
scas
fildl
js
ljmp
adc
jp
adc
aad
jecxz
mov
xor
fcmovu
popa
enter
ret
jo
stos
mov
adc
out
dec
mov
jae
jle
fadds
dec
fwait
or
ljmp
mov
stos
jo
aad
jo
fucomi
xor
push
arpl
xchg
fildl
mov
jnp
adc
test
aad
dec
aam
mov
inc
cmpsb
les
mov
stc
movsb
lret
imul
enter
rorb
or
loopne
sbb
inc
iret
xchg
imul
ljmp
jbe
js
pop
fdivr
mov
cwtl
mov
ret
mov
test
pop
sub
scas
cltd
outsl
push
fisttpl
ret
pop
jo
stc
fstl
pusha
sbb
int3
mov
or
sbb
mov
push
dec
xor
pop
ljmp
add
mov
mov
test
xor
xchg
scas
sbb
xchg
xchg
fcomps
mov
cli
imul
fstl
lods
and
insb
leave
cmc
push
push
and
stos
mov
dec
test
pop
push
aad
js
out
cltd
addr16
add
adc
test
sbb
mov
shlb
and
xchg
in
loop
ret
scas
cld
adc
stos
mov
add
mov
fcomps
xor
scas
cmp
loope
movsl
jb
cld
mov
iret
jmp
dec
aas
and
test
cmp
loop
ds
test
loopne
pop
add
into
sti
jae
cmpsl
stc
add
push
inc
leave
sbb
sub
or
cmp
fwait
xchg
loopne
xchg
outsb
push
push
fidivrl
pop
lahf
test
aad
mov
xchg
sub
fistpll
fnstsw
fcompl
addr16
mov
mov
or
xchg
daa
movd
out
cmp
add
je
jne
add
nop
js,pt
stos
mov
loopne
sbb
lret
shll
dec
jl
sub
or
cmc
inc
ja
shr
push
mov
dec
pop
xorl
mov
push
fimuls
lret
dec
std
xor
cmp
sbbb
into
jae
cwtl
rcr
push
lea
test
inc
fdivl
push
dec
sub
aas
icebp
mov
xor
imulb
inc
ror
mov
fdivrl
add
xor
lods
andb
and
xchg
push
pusha
rcl
pop
mov
dec
inc
les
icebp
sub
repnz
sahf
aad
mov
and
mov
sub
inc
loop
jmp
fcompl
mov
mov
lds
loop
push
lret
sbb
mov
pop
dec
push
stos
and
ret
ds
test
repz
stc
pop
mov
dec
xor
inc
push
sub
lcall
fstpt
mov
cmpsl
dec
fwait
xchg
sti
sarl
int3
ja
fincstp
inc
mov
push
jmp
fists
cmc
and
xor
inc
mov
jge
xor
pop
loopne
mov
jmp
fstp
adc
sbb
and
mov
mov
cli
int
fdivs
mov
xor
movsb
dec
inc
push
mov
lds
loop
push
cwtl
xchg
int3
gs
pop
jns
fdivl
loopne
cld
imul
mov
shll
fdivs
iret
clc
jle
in
or
push
mov
sbb
mov
push
push
fmull
pop
popf
jecxz
dec
mov
cli
decb
addb
es
hlt
stos
mov
test
push
in
and
je
je
ror
mov
outsl
std
movsl
popf
je
xorb
xlat
dec
lret
mov
mov
test
sbb
pushf
xor
inc
mov
xlat
ljmp
mov
scas
dec
adc
jb
inc
xor
jecxz
push
adc
pop
mov
xor
data16
pop
and
sub
mov
cmpl
scas
lods
adc
stc
or
fcomps
mov
fidivl
frstor
pop
and
scas
push
push
and
adcb
into
ljmp
or
pop
cmpsb
scas
inc
or
pop
mov
int
lcall
imul
pop
mov
dec
push
loope
push
lock
jle
decl
dec
in
sti
xlat
add
jp
mov
bswap
or
push
jp
pop
icebp
add
pop
popa
inc
ret
or
mov
inc
inc
xor
fisubl
sub
push
dec
xor
xchg
arpl
pop
push
cmp
fwait
das
mov
leave
mov
dec
add
inc
mov
cmp
cmpb
gs
mov
je
xor
and
repnz
xlat
or
jns
xchg
mov
mov
cmp
bound
js
push
sub
or
push
and
clc
aad
nop
stos
pop
scas
sbb
and
insl
aad
mov
mov
mov
jmp
adc
iret
cli
push
add
aas
shrb
sub
and
jo
in
jmp
or
fmull
repnz
into
leave
cmc
xor
sarl
inc
lock
adc
in
out
xor
mov
inc
xor
xchg
mov
or
add
mov
cli
xchg
sar
cmc
mov
stos
pop
add
xchg
orl
test
push
dec
pop
icebp
repnz
jb
ss
sbb
fidivrl
loopne
test
push
mov
stc
fld
call
bsf
pop
dec
cli
sbb
pusha
cmp
inc
or
xlat
loop
mov
cld
loope
ret
inc
inc
mov
repnz
push
fidivs
rcll
cmc
xchg
int
pusha
inc
mov
xor
xor
xlat
aam
push
push
sarb
enter
adc
adc
mov
xchg
cmp
xchg
and
fimuls
add
sbb
pop
mov
enter
adc
or
fisttpll
mov
fcomp
lret
sub
inc
enter
xor
mov
mov
std
xor
inc
sub
push
xchg
mov
mov
outsb
mov
xlat
daa
sub
addl
mov
adc
shlb
rcll
jge
movsb
jge,pt
push
pop
lock
rorb
je
aam
fdivrl
lret
test
inc
mov
sub
pusha
adc
ja
xlat
inc
call
movd
lods
mov
inc
adc
cmpsb
fsubs
gs
into
rclb
fcmove
mov
addr16
add
cmp
adc
or
mov
mov
dec
cmpsb
fildl
xchg
xchg
cltd
imul
out
sub
dec
xor
and
dec
nop
movsl
jnp
subb
ficoml
cs
cmpsb
lds
in
out
out
cld
dec
int3
dec
sahf
sbb
sub
pop
xchg
daa
cmp
add
mov
fisubrl
outsl
push
add
or
fwait
jbe
into
xor
mov
xlat
inc
cwtl
adc
pop
mov
jbe
or
out
call
push
fisttps
and
decl
mov
fistpl
and
int3
or
fildll
out
daa
cmc
push
nop
mov
dec
and
aaa
dec
cmpsb
out
jbe
ret
bound
outsl
xor
sub
add
xchg
fistpl
jno
jne,pn
add
push
jecxz
divl
xor
loopne
jnp
jb
and
div
lret
xor
dec
pop
inc
nop
push
push
loopne
adc
and
hlt
mov
hlt
aad
addb
stos
cwtl
push
outsb
fadds
adc
push
mov
mov
ds
lcall
jg
adcb
cmp
push
add
inc
sub
xor
bound
adc
test
and
sbb
scas
popa
pop
pusha
mov
inc
cmpsb
cmpsb
cld
mov
imul
cld
mov
mov
jnp
sbb
or
cmpsl
xor
lahf
ja
jg
sbb
scas
scas
fbstp
inc
cs
lods
fisttps
dec
jle
adc
test
loop
stc
icebp
jae
or
sti
cmpl
adc
out
scas
sub
in
mov
inc
mov
aas
mov
ret
ror
mov
ljmp
shrb
ret
cmpl
int3
clc
jae
stos
fcomps
addr16
insb
jnp
mov
cmp
pop
cmpsl
mov
xchg
pavgb
cmp
cmpsb
addb
sbb
out
fdivl
xchg
push
and
push
aam
xorb
je
dec
pop
outsb
mov
sti
les
insl
sbb
jmp
cmp
inc
ljmp
add
push
mov
inc
dec
pop
std
jne
jnp
dec
rcrl
fcomp
push
mov
bound
popa
clc
out
aam
xchg
stos
insl
inc
add
mov
bound
and
push
cwtl
pop
mov
sahf
push
mov
fcom
iret
cmp
dec
xchg
fiadds
add
pop
lret
aam
dec
test
fmul
xor
nop
push
lcall
ret
mov
aas
cmpb
stos
inc
adc
aam
xchg
mov
and
js
pop
repnz
mov
sub
adc
test
pop
sahf
loopne
xchg
inc
mov
xchg
outsb
loop
ja
aad
pop
push
rcll
andb
and
jnp
mov
ficompl
inc
adc
jb
and
aaa
push
shll
call
insl
out
popa
call
out
lods
faddl
add
sub
les
mov
xlat
xlat
jp
xchg
ljmp
adc
fdivl
cmp
fistl
mov
gs
inc
mov
in
pop
lods
fcompl
ds
xor
and
daa
aam
fcoml
push
sub
jno
ljmp
cltd
pop
mov
mov
es
lret
jle
cmp
popl
and
jge
vprotq
cmp
mov
stc
xchg
stc
or
pop
lret
in
mov
push
jb,pn
xchg
sar
cmpsl
xchg
jae,pt
add
subb
or
mov
and
push
push
jle
mov
pushf
mov
in
inc
dec
imull
inc
sub
ljmp
ret
mov
shlb
and
mov
rcrb
les
sahf
lods
fsubs
sub
stc
adc
popa
sar
mov
pop
and
subb
popf
test
mov
ror
adc
push
bound
movl
mov
and
repz
insl
loopne
fs
sahf
sti
cmp
or
jmp
push
xor
mov
push
or
push
cmpsb
out
jo
mov
or
into
into
ljmp
aas
sarl
add
cmp
test
sbb
adc
test
xor
scas
imul
xchg
push
arpl
and
jecxz
mov
xor
subl
sbb
lcall
loop
shlb
incb
sub
flds
push
adc
jae
andl
mov
jge
xor
pop
aam
hlt
aad
jns
mov
inc
mov
push
mov
std
in
or
pop
cmpsl
imul
mov
inc
loope
jl
jg
dec
insb
mov
adc
cs
idiv
mov
dec
insl
xor
mov
dec
sub
mov
nop
repnz
test
add
pop
push
lods
test
stos
pop
dec
adc
shll
cmp
jge
adc
lcall
lea
pusha
in
fucom
sub
leave
xchg
lret
shll
hlt
adc
rcrb
stc
cmpsb
jg
jno
inc
adc
inc
iret
cli
adc
cmp
add
jg
inc
sbb
sahf
adc
add
enter
sub
push
mov
fcmovne
jle
adc
pop
push
xchg
movsb
dec
daa
xlat
test
jle
int3
fsub
sti
out
sti
push
cmpsl
sbb
sar
jge
sub
leave
cmpb
in
les
push
push
cwtl
jno
into
mov
fmuls
out
lock
cmpl
cmpsb
pop
jle
fsubrl
jg
in
mov
arpl
pop
mov
mov
push
cld
pop
cli
push
cs
pop
inc
jbe,pn
pop
in
dec
lods
add
and
cmp
inc
push
stos
mov
nop
fnsave
xchg
iret
and
or
push
and
cld
jns
add
mov
inc
nop
mov
cmp
lods
popf
jbe
mov
outsb
leave
stc
iret
jge
sub
sub
dec
outsl
cmp
jnp
add
cmp
mov
pop
xchg
out
pop
insb
cld
fs
sbb
cmp
cmp
cs
lods
and
test
mov
jne
inc
rcl
mov
xchg
sub
ret
pushf
jp
mov
sbb
xchg
cmp
ffreep
xlat
inc
add
aam
xlat
add
das
pop
or
mov
adc
rolb
rcrl
push
incb
adc
cmp
lock
adc
lcall
lock
jg
fdivrs
inc
icebp
xor
add
test
mov
xor
push
mov
addr16
push
xor
cmp
popa
sub
sbb
scas
je
adc
mov
jg
imul
mov
cmp
je
xor
dec
pop
pop
xor
sub
lret
mov
adc
ja
cmp
rcll
repnz
dec
xlat
test
aas
pop
add
xchg
xor
int3
sub
add
pushf
fs
sub
cmpsl
jne
jge
pop
rol
xchg
ret
fidivrs
std
add
inc
jo
je
lds
mov
iret
jge
andb
loope
jns
mov
add
cmp
sbb
push
rcll
icebp
sub
pop
inc
and
pop
add
movsb
fmul
jp
sub
out
jae
popa
lcall
inc
add
xchg
fiaddl
out
dec
push
repz
data16
cwtl
mov
fisubs
arpl
iret
pop
pusha
cwtl
inc
test
nop
dec
mov
fistpl
repz
scas
ds
repnz
std
fsubl
sub
xchg
call
inc
xor
mov
into
push
imul
xchg
xchg
pop
dec
push
outsb
xor
add
out
dec
lds
lea
sbb
cltd
pop
shl
ret
dec
inc
sbb
in
sbb
sahf
into
push
sbb
jp
lcall
push
jl
fcmove
mov
fdivrs
jo
loop
and
fsts
mov
stc
outsl
push
fdivrl
pop
idivl
ret
inc
mov
lds
loopne
aad
inc
dec
nop
cmp
ficoms
out
push
outsb
jne
dec
xchg
fadd
loope
fsts
cmp
ds
jno
nop
mov
mov
mov
imull
fisubrl
call
mov
jmp
sahf
add
arpl
mov
daa
jg
fcmovne
sbb
mov
lret
mov
jb
push
push
dec
jo
cs
pop
xor
pop
aam
xor
xchg
fldt
and
es
pop
mov
cs
shrl
std
mov
cmp
ja
insl
loop
aas
mov
add
sub
les
cs
imul
rorl
aam
cs
sbb
sti
mov
xlat
cld
call
and
jg
cmpsb
and
xchg
xor
add
sub
shrb
dec
lea
repnz
out
cli
dec
dec
mov
dec
frstor
pop
mov
jne
inc
rcl
sub
jl
cmp
xchg
xchg
rorl
lret
lock
ljmp
dec
ret
lea
mov
jae
nop
cmp
mov
leave
scas
lods
mov
cmp
stos
orb
add
adc
inc
filds
clc
lds
ss
push
idivl
cli
cltd
outsl
pop
jmp
daa
fldl
cmp
add
insl
cmpsl
sbb
fcmovb
jle
pop
fnstcw
jne
or
mov
in
fistl
dec
daa
jo
inc
mov
clc
insb
andb
xor
loop
push
mov
movsb
sar
aas
or
add
dec
mov
push
mov
mov
sub
insl
cli
inc
pop
test
cmp
cmp
add
fs
nop
out
shr
in
clc
adc
in
adc
jnp
hlt
xor
or
mov
inc
nop
popf
cmp
fnstcw
and
and
or
stc
dec
pop
insl
or
imul
daa
roll
pop
dec
add
mov
fadds
and
add
push
hlt
add
cmp
and
stos
push
out
lcall
push
lahf
sub
inc
pushf
daa
or
jmp
loopne
xchg
in
mov
negl
lods
add
rcl
adc
xchg
mov
mov
stos
pop
sub
sub
out
out
pop
shr
jae
sbb
mov
push
inc
pop
push
lcall
dec
mov
adc
mov
xlat
mov
stos
jb
pop
lret
shlb
push
cmp
dec
mov
sarb
lahf
std
cmpsb
xchg
jo
push
lock
jecxz,pn
sti
in
mov
divb
push
insb
jge
sbb
jnp
outsb
inc
mov
popf
push
push
xor
mov
and
std
imul
xchg
repnz
lcall
das
mov
push
cmp
jne
fstps
ljmp
mov
push
mov
adc
dec
bound
xchg
cmp
aam
sbb
mov
lret
jle
iret
mov
aas
scas
cmp
fmulp
aaa
outsl
and
mov
jmp
ja
je
clc
test
rcll
jnp
repz
push
pop
sti
push
push
std
inc
mov
mov
enter
cmp
xor
scas
push
pop
cmpsl
loopne
sbb
mov
stos
mov
popa
fcoms
push
xchg
lds
inc
les
push
dec
popf
xor
repz
lret
sub
sbb
loop
mov
jp
xor
adc
scas
mov
add
lret
test
cmp
in
adc
lret
div
fucomip
std
or
jb
cltd
jno
push
mov
icebp
rol
xlat
lock
lock
push
lret
dec
lcall
fistpl
mov
dec
pop
xor
outsb
stos
into
imul
mov
cmp
hlt
adc
mov
xor
add
add
jnp
mov
sahf
adc
clc
outsl
xor
push
lahf
sbb
test
jge
and
ret
push
imul
stc
mov
jns
or
daa
inc
xchg
xor
mov
adc
aad
dec
arpl
decb
clc
iret
lock
sarb
iretw
sbb
dec
mov
fistpll
jns
mov
pop
incl
dec
add
pop
xchg
insl
aad
jecxz
iret
jns
push
xlat
ljmp
orb
or
daa
imul
fwait
or
iret
loop
in
addb
in
sbb
into
mov
pop
movsb
jle
and
add
sbb
icebp
inc
cmp
aaa
mov
cmp
mov
lods
inc
mov
and
jp
pop
adc
mov
sbb
imul
xchg
push
je
psubusw
rorb
adc
inc
push
mov
cmp
ss
popf
sub
andb
inc
pop
std
jle
jne
rorw
daa
xlat
repnz
in
icebp
popf
faddl
add
mov
cmp
and
mov
int
aam
cmovae
xchg
mov
clc
cld
push
pop
sbb
sub
gs
pushf
jmp
dec
rolb
xor
out
sub
inc
add
int3
pop
or
es
ss
sub
mov
or
xchg
mov
push
popf
adc
mov
mov
jne
nop
fcom
inc
xlat
push
cld
adc
adc
xor
jno
aas
dec
push
jns
loop
ret
repnz
fisubrs
mov
jo
xor
sbb
nop
cmp
rolb
shrb
addb
inc
pop
mov
in
mov
jp
leave
xchg
mov
pusha
xchg
lds
adc
dec
movsb
loop
outsb
cwtl
jecxz
xchg
out
cmp
push
in
sahf
cld
xchg
add
jmp
scas
femms
ficompl
push
mov
pop
fistpl
pop
insl
fsub
push
aad
push
sub
mov
dec
mov
mov
push
cmp
jo
xlat
jb
mov
xchg
pop
xor
popf
xchg
inc
mov
sbb
push
inc
icebp
cmp
mov
adc
adcb
dec
lods
pop
cmp
cld
stos
das
inc
nop
inc
adc
icebp
push
fsub
add
and
fiadds
repnz
imul
stos
jno
or
pop
xchg
sbb
pop
xchg
cmp
jnp
dec
data16
pop
adc
xchg
push
jbe
roll
idiv
fldenv
shrb
push
clc
pop
fs
cs
sub
and
fists
ret
sub
hlt
addr16
inc
fcoms
rclb
das
js
mov
ret
ljmp
sarb
cmc
popf
lods
add
aaa
loop
sbbb
arpl
xchg
iret
shrl
lods
lret
jmp
mov
xor
jno
and
rcrb
sbb
addl
fstpl
aas
and
fmul
das
outsb
cmp
jge
inc
adc
inc
sbb
xchg
cmpsl
cmp
cmpsb
rorl
pusha
jbe
add
jno
mov
jle
and
mov
lret
cmp
nop
hlt
add
push
mov
es
cmp
mov
cmp
ljmp
inc
bound
cmp
xor
sub
push
loop
add
push
lret
jl
fisttpll
adc
jp
mov
popa
aam
add
or
dec
jb
and
inc
xor
pop
mov
cmp
sbb
xchg
stc
add
inc
sbb
or
cmp
mov
mov
lock
dec
dec
pop
insl
inc
loopne
out
fs
addr16
mov
out
mov
jne
int3
push
jmp
xlat
mov
icebp
sub
xlat
outsb
cltd
push
cli
sub
test
sarl
ljmp
add
fcmovbe
push
cmp
stos
mull
add
xor
icebp
dec
dec
xchg
cmpsb
fsubl
add
and
dec
std
mov
push
mov
adc
scas
dec
lods
and
dec
shrb
mov
cmp
dec
es
mov
adc
inc
jge
lds
or
jp
or
loopne
lock
mov
stc
sbb
pop
xchg
shll
pop
gs
mov
xor
shr
je
decl
aam
js
cmc
insb
mov
jle
inc
lcall
dec
jno
push
fsin
iret
cmp
adcl
xor
adc
std
fwait
mov
jae
mov
dec
gs
mov
mov
idivb
ja
add
mov
dec
xor
stc
pop
sub
cs
jae
int
xchg
jbe
xorb
daa
notl
cmpl
flds
push
jo
mov
mov
out
es
pop
add
adc
and
decb
add
loope
rolb
fdivrs
adc
inc
lock
fldcw
in
rorb
sub
aam
inc
mov
aam
dec
xchg
inc
cld
inc
fmul
popa
cmpl
rolb
push
cmpsb
mov
jae
push
addl
push
out
mov
lahf
outsb
pop
xchg
and
data16
sbb
enter
fcmovbe
das
sub
hlt
and
cmpsl
mov
insl
pop
iret
popf
dec
inc
fdiv
mov
lret
mov
xchg
pushf
mov
mov
inc
lret
ljmp
add
push
dec
inc
dec
mov
or
jp
add
cmp
test
add
inc
jno
and
or
stc
mov
xchg
cltd
sub
lds
lahf
cli
vucomisd
out
and
jb
lea
jae
jl
xchg
xchg
sbbb
call
lock
fcmovb
push
cltd
mov
mov
sbb
cli
cs
out
mov
inc
fcmovnbe
add
mov
jns
pusha
add
mov
add
test
push
rcrl
xorl
bound
imul
mov
and
cmp
and
inc
ficomps
popa
negl
imul
lret
out
or
hlt
pop
ret
push
test
dec
mov
add
sbb
jo
es
shll
push
adc
fidivl
dec
or
adc
xlat
push
outsb
or
std
fucomip
pop
pop
cli
pop
push
mov
loop
into
andl
out
rorl
xchg
js
mov
cli
sahf
jl
jb
dec
jl
cli
adc
jnp
adc
jo
std
jle
test
xchg
jnp
xor
insb
out
add
inc
nop
into
sbb
ret
jns
fcoml
xorb
nop
es
add
std
cltd
or
outsb
add
add
dec
lret
inc
hlt
rcrb
push
and
mov
add
jg
jns
out
fdivl
loopne
orl
dec
jp
lret
in
fcmovb
fwait
and
mov
addb
lret
repnz
fwait
adc
std
int3
aas
frstor
xor
stc
into
cmp
cld
icebp
dec
cmp
stos
icebp
imull
add
ret
dec
insl
ret
pop
mov
sub
mov
dec
cli
and
mov
lods
cli
and
jb
mov
out
mov
and
aad
jl
xor
out
push
dec
lcall
sahf
xchg
sbb
xlat
fcompl
in
sbb
pop
scas
pop
cmp
scas
push
mov
les
sub
mov
xchg
adc
push
ja
rcl
sub
adc
lds
jge
jo
orb
addb
and
jle
or
mov
add
aas
adc
sbb
jnp
pop
xchg
push
and
int3
push
loope
cli
out
pop
push
add
jecxz
jle
les
notl
pop
cmp
adc
in
cmp
pushf
pavgb
mov
add
repz
mov
insb
cltd
xchg
mov
leave
inc
fs
sbbl
stos
test
jbe
sti
jmp
sbb
in
cmp
mov
jno
cmp
test
jmp
xchg
sbb
push
test
shll
ja
loop,pt
shll
xor
push
popa
arpl
inc
mov
pop
pop
flds
in
stc
aad
ret
push
aas
sub
jo
or
notl
push
idiv
push
cmp
jle
and
and
xor
push
nop
inc
and
dec
sub
std
in
push
sbb
and
pop
fwait
sahf
das
mov
loop
lock
adc
push
pop
fsts
xchg
pop
pop
lock
mov
xchg
mov
aam
fstp
retw
ss
push
xor
jmp
xchg
pop
mov
mov
cmp
test
iret
xchg
cli
push
out
rcl
fcmove
mov
push
xchg
ljmp
sbb
push
mov
push
das
scas
sub
insb
xchg
xchg
notb
iret
cmp
push
add
pushf
and
cmp
loope
pop
test
repz
and
es
dec
xchg
fiadds
push
clc
xor
xchg
fisubs
cmc
cwtl
repnz
outsb
or
mov
inc
aad
mov
sahf
leave
movsl
mov
loop
cmpsb
ljmp
fildll
in
pop
pop
mov
pop
into
xlat
out
push
insb
rcll
fsubrl
push
adc
loopne
test
add
bnd
cmp
pop
addb
and
lods
das
inc
nop
fucomi
pushf
roll
aad
jg
into
mov
loope
sbb
adc
add
mov
shrb
cli
cmpsb
lods
inc
jo
xchg
imul
dec
sbb
pop
decb
test
sub
mov
outsl
sbb
add
cmpsl
arpl
testb
lcall
push
fsts
dec
dec
fisubrl
pop
popf
jnp
mov
popa
aaa
dec
iret
mov
xor
add
insl
roll
xor
xor
cld
movsb
fisttpl
cmpsb
pop
cmpsb
sbb
loope
rclb
dec
add
rol
insl
inc
cmpsb
fptan
aad
out
sub
scas
xchg
mov
adc
lcall
jno
subb
cld
mov
push
loope
lahf
sub
mov
xor
jp
add
mov
lea
test
int
push
fimull
adc
push
cmp
dec
sbb
js
mov
and
in
push
incb
add
push
add
aad
stos
movsl
xlat
fstps
pop
and
pop
mov
fisubl
out
add
leave
mov
imul
cli
push
adc
call
js
sub
inc
xchg
outsl
push
mov
std
xchg
jp
hlt
shll
cli
push
stc
pop
repz
xor
dec
push
je
mov
rclb
fwait
leave
push
std
jp
or
lods
inc
cmp
xor
loopne
sarl
stc
sub
xor
xchg
inc
sahf
dec
adc
sbb
clc
xlat
cli
cmp
lock
xorl
jg
xor
adc
mov
push
aas
insb
fisttpl
jl
iret
loope
std
add
mov
dec
test
lea
sub
mov
lret
inc
xor
outsl
ret
pop
add
cmpsl
pop
mov
lret
orl
mov
and
and
inc
cmc
test
jp
lds
inc
hlt
lock
sub
scas
mov
bound
mov
fildll
ss
xchg
mov
sub
and
daa
jns
mov
shll
shrl
adc
sub
pop
push
scas
shl
mov
out
add
mov
sahf
ja
mov
sbb
mov
cmpl
outsb
mov
xor
add
pushf
dec
push
ds
cli
mov
cmp
ds
mov
dec
loopne
inc
hlt
popa
fs
push
jmp
fnstsw
je
add
fidivrs
or
hlt
jb
fisttpl
dec
mov
js
stc
popa
cmc
loope
aam
inc
or
aas
jge
pop
movsl
insl
ret
and
repz
cmp
lcall
ficoms
addr16
fs
cld
lea
shl
ljmp
cmp
push
pop
pop
testb
mov
add
es
jmp
sti
test
loopne
jl
rorl
inc
xchg
movsl
sub
xchg
inc
stc
jno
pop
mov
dec
dec
mov
icebp
in
cmc
sbb
adc
cs
inc
mov
xchg
jno
shl
cld
icebp
fucomi
aas
lods
cltd
insb
adc
addl
orl
pop
mulb
call
test
fnstsw
loopne
mov
punpcklbw
jne
lock
loope
icebp
ret
push
gs
mov
push
and
popa
neg
lret
inc
xchg
push
pop
test
loopne,pn
cltd
dec
or
sub
insb
leave
cmp
xor
dec
or
adc
popf
loopne,pt
cmp
push
cmp
cmp
sbb
xchg
inc
in
push
pop
jle
sbb
ja
push
loop
mov
or
mov
into
fdivl
xor
pop
pop
jl
aad
test
aam
int
leave
fldt
push
cmpsl
mov
fldenv
xor
lcall
addl
or
sti
sti
cwtl
inc
data16
inc
lods
shlb
or
and
jle
cltd
cld
mov
movsl
stos
ret
pop
mov
movsb
lock
jle
in
xchg
stc
frstor
and
push
xchg
push
push
out
imul
stos
jmp
xchg
mov
lods
jmp
in
ljmp
ficoml
js
outsb
int
add
rcrl
outsb
fdivrs
mov
jnp
addr16
sub
jg
or
mov
ficoml
iret
fisubrs
das
cwtl
dec
adc
sbb
jge
xor
inc
inc
sar
ljmp
and
mov
and
pop
mov
js
and
or
aam
adc
jb
inc
jle
dec
mov
mov
dec
clc
mov
pop
aaa
enter
lods
push
gs
inc
inc
aam
imul
sahf
fimull
das
loopne,pt
push
inc
push
push
stos
sbb
add
pusha
jns
scas
cld
shr
aam
inc
sbb
lods
cs
idivb
xchg
inc
stc
out
pusha
les
push
sbb
xor
xor
lahf
or
dec
je
ficoml
ds
sti
dec
int
pop
sub
in
mov
xchg
dec
cmpl
fnstcw
rolb
nop
sub
nop
movl
aad
pop
xchg
out
push
pop
rcr
dec
mov
push
rolb
and
fisubl
out
and
inc
out
push
xor
movsl
ret
push
jle
dec
and
ret
jmp
dec
out
data16
inc
sti
sahf
stc
and
inc
les
stos
out
fs
cmpsl
aad
jecxz
in
dec
sub
out
xor
push
fiaddl
inc
sarb
adc
inc
mov
loope
in
cmp
jl
push
insb
call
bound
or
or
or
ljmp
lcall
test
sbb
xor
jg
and
shll
pop
sti
aad
loopne
sbb
jno
jp
xor
dec
test
cmp
into
push
jb
cmpsb
leave
cmp
cs
mov
neg
mov
fsubrl
xchg
rol
fmuls
jmp
divb
ret
lahf
aam
push
and
fldcw
fs
sub
sub
push
call
sbb
addr16
loopne
mov
sub
lret
and
fists
imul
mov
xchg
mov
push
push
lret
lret
pop
add
xchg
out
fisttpl
leave
pop
les
leave
enter
sub
hlt
je
fisubs
enter
adc
push
ss
add
repnz
loope
rcr
xchg
hlt
popa
dec
and
or
testb
xor
pop
sbb
and
in
mov
out
cmpsl
adc
je
cmp
les
dec
lock
lcall
jl
adc
into
mov
mov
sbb
mov
mov
inc
lock
pop
mov
movl
bound
lods
jle
loop
xchg
sub
sarl
xor
pusha
and
shrl
dec
lret
mov
inc
daa
pop
lds
fneni(8087
xor
sbb
sarl
xchg
sbb
jge
pusha
jbe
jg
and
xchg
int
mov
jb
orb
and
ret
fs
fildl
or
stos
jae
push
mov
fcompl
rclb
pusha
loopne
cli
mov
lods
ja
mov
cmp
jb
dec
sub
hlt
and
sti
mov
in
mov
dec
and
sub
in
fdivs
mov
fucomip
jecxz
mov
popl
out
inc
arpl
fcomp
sahf
xlat
inc
sbb
push
mov
dec
fs
std
cmp
add
shlb
out
jb
inc
nop
sar
shl
bnd
mov
cmp
pop
xchg
pop
sar
call
and
dec
imul
scas
jp
enter
dec
cmp
cmpsl
mov
jbe
nop
pop
cmp
test
ret
and
lods
add
jns
stos
dec
xchg
stos
shrl
mov
add
sub
dec
push
inc
fistl
loop
pop
jb
sti
iret
sub
imul
mov
addr16
adc
and
dec
lret
add
inc
mov
fistpl
xor
testl
enter
or
clc
fnstcw
pusha
mov
sbb
es
aad
outsb
add
inc
lret
cld
movsl
dec
add
dec
inc
rorl
push
mov
imul
enter
adc
int
sub
imull
cld
xchg
out
or
loopne
sbb
jae
mov
inc
into
jmp
int
cmp
pop
pop
pop
lahf
out
xor
rolb
sbb
rcll
subb
push
loope
xchg
push
cmp
pmovmskb
ljmp
fbstp
pusha
dec
jbe
movsl
mov
or
orl
ljmp
add
or
add
out
bound
ds
jb
out
cli
mov
ss
pop
cwtl
adc
mov
xchg
mov
sbb
mov
push
imulb
testl
fstpl
xchg
push
jnp
and
ficompl
xchg
enter
cmp
mov
mov
pop
inc
mov
mov
mov
pop
dec
movsb
insl
cld
into
mov
inc
fsubrs
loopne
or
mov
sub
loope
or
std
mov
aas
stc
jae
mov
xlat
ljmp
cmp
sbb
shlb
cmp
call
and
mov
push
test
jns
pop
or
loope
cmp
jmp
out
and
xor
ja
mov
mov
shl
inc
adc
add
dec
dec
sahf
arpl
add
mov
orb
add
adc
sub
stos
xchg
pop
sbb
mov
sahf
cmp
mov
mov
add
dec
insb
rcrb
jl
lcall
or
xchg
push
popf
xchg
jo
sbb
sub
out
outsb
sbb
js
and
popa
popa
pop
mov
ja
mul
dec
pop
insl
mov
mov
imul
movsb
jl
fdivr
xor
sub
xchg
add
sbb
bound
lret
test
ret
repz
test
fmuls
cmp
out
mov
mov
ljmp
test
sarb
shll
mov
sbb
cmp
lods
push
jb
jle
adc
repnz
stos
daa
outsl
cmp
push
divl
jecxz
shr
out
fdivl
ss
fdivrl
cmc
inc
push
push
fsts
mov
xor
adc
out
push
nop
sbb
ret
subb
xchg
cmpsl
ret
inc
fistps
jg
dec
pop
or
shlb
pop
sahf
xchg
loopne
sub
lret
in
pop
cltd
pop
imul
lcall
pop
rorb
mov
popa
fs
fnstcw
in
and
inc
xor
es
or
xchg
cmpsl
inc
fbstp
mov
cli
adc
lret
outsl
out
and
xchg
mov
sub
sub
jo
divl
inc
std
inc
or
sti
shr
or
outsl
lret
push
out
adc
fisubs
incb
jl
lds
stc
ljmp
mov
mov
pop
ficoms
dec
out
sub
es
and
xchg
mov
push
mov
mov
add
fsubrp
mov
mov
aaa
mov
add
lock
pusha
cwtl
mov
jb
leave
into
fdivr
ret
push
sub
daa
adc
or
mov
adc
shlb
pop
pop
movsl
fstpl
je
test
shlb
rcrb
lahf
fs
aam
mov
in
mov
fcomi
add
and
mov
aas
adc
mov
mov
xor
and
jle
inc
pusha
mov
adc
ficomps
ret
jo
icebp
fdivl
adc
daa
imul
fdivrl
add
dec
jnp
iret
shlb
sub
testb
pop
rorl
or
test
inc
repz
aad
push
js
fst
cli
mov
and
xor
xor
mov
psrad
bound
iret
cmc
push
add
insl
push
push
inc
divb
xchg
loopne
int
es
mov
fisttpl
jb
pushf
lahf
les
xor
leave
jp
adc
pop
jle
and
dec
xchg
scas
ficoms
cld
ret
jnp
pop
xlat
or
outsb
repz
out
sub
mov
les
mov
std
scas
mov
fdivrs
push
or
push
cwtl
fadds
loop
sub
push
sub
inc
pop
pop
push
jo
cmp
std
mov
stos
jmp
xor
pushf
add
inc
out
pop
in
mov
push
pop
adc
fwait
pop
lret
sbb
jl
pop
sar
and
xchg
lret
cmp
cmp
or
jp
mov
or
xchg
mov
out
jg
les
inc
pop
mov
in
out
xor
nop
add
sub
fcmovnbe
inc
cmpsl
mov
fcoms
adc
aad
je
xchg
and
lahf
cs
mov
not
lea
repnz
fists
mov
or
repnz
mov
inc
xor
mov
xchg
lds
push
fcomip
sub
scas
test
pop
push
aaa
mov
mov
mov
aam
mov
add
rclb
lods
xor
sub
add
adc
push
xor
cmp
loopne
and
xorb
insb
negb
sub
shrb
and
adc
sar
cmp
cmp
jmp
mov
int3
fsubrs
jp
sbb
mov
dec
xchg
mov
sti
xchg
add
push
dec
push
push
out
and
sarb
and
pop
and
mov
lcall
pop
inc
lock
testl
xchg
inc
mov
iret
sahf
mov
aad
jno
jmp
xlat
loopne
pushf
mov
test
push
add
rcrb
ss
flds
jne
repnz
repz
scas
and
movsl
gs
and
icebp
inc
push
cmp
aas
and
jne
ljmp
test
and
into
mov
jbe
loop
popl
out
cltd
lret
pop
adc
push
push
mov
cmpsb
pop
ficomps
xchg
ret
mov
call
mull
inc
push
sbb
mov
loop
pop
loop
mov
pop
daa
mov
std
inc
lahf
fildll
jp
inc
pop
sbb
push
and
push
fisubs
cmp
mov
cmpsl
shrl
scas
fisttpl
aam
loop
and
pop
push
dec
insb
xchg
arpl
lret
movsb
push
xlat
jbe
jge
pop
ss
arpl
dec
mov
xor
jmp
add
pop
dec
pusha
jo
stos
mov
test
repz
push
add
xchg
jo
and
xor
in
jp
ficoms
pop
shlb
adc
mov
negl
sti
fdivl
xor
enter
movsb
imul
xor
sahf
repz
push
mov
xchg
cli
test
fisttps
arpl
pop
or
fbstp
test
dec
hlt
daa
fiaddl
fiaddl
daa
mov
mov
pusha
sbb
xor
sti
xchg
xchg
addr16
inc
add
mov
push
jb
dec
clc
xchg
dec
pop
das
into
aad
popf
xchg
pop
push
and
lods
addb
fistl
and
lea
inc
out
push
jns
loope
rcr
adc
sbb
adc
fldl
cmp
sbb
rclb
ret
out
xor
cmc
jno
adc
adc
out
aam
lahf
add
adc
rcrb
mov
fwait
or
shr
and
and
sar
cli
in
rcrl
dec
data16
fsub
gs
jmp
mov
pop
inc
iret
mov
xchg
xor
mov
inc
inc
lret
pop
push
push
shrl
mov
in
dec
jo
lock
jge
stos
loope
or
pop
mov
aad
or
lret
lds
fistpll
adc
int3
out
pop
or
data16
push
stc
shlb
xchg
ja
loop
test
shl
jecxz
loope
jbe
fnstenv
jmp
dec
xchg
inc
std
lret
and
lds
push
adc
fnstenv
popf
sbb
jp
mov
fnstcw
push
mov
aam
rolb
jl
iret
outsl
in
sub
add
iret
sahf
xchg
pushf
dec
jns
out
stc
stos
dec
arpl
cmp
stc
insl
jb
int
or
xchg
push
dec
nop
scas
mov
js
sub
jle
insl
sahf
loope
adc
and
fisttpll
mov
ds
icebp
dec
sub
inc
adc
nop
es
rcrb
fldcw
jae
cli
xor
imul
jbe
addb
sbb
add
push
mov
and
imul
add
push
jne
jmp
cmpl
movl
adc
icebp
dec
repnz
mov
cmp
inc
movsb
mov
imul
mov
mov
addb
and
ret
add
subb
xor
mov
mov
jbe
add
lock
shrl
int
dec
dec
nop
push
mov
ret
mov
dec
push
je
and
xor
std
dec
popa
aad
iret
lcall
push
inc
loopne
mov
cmpl
pusha
and
mov
push
sub
cmp
dec
push
fadds
and
mov
pusha
push
jo
sbb
enter
std
mov
movsl
imul
add
mov
jne
bound
out
inc
mov
jbe
lds
jae
xor
les
inc
mov
cli
adc
aaa
push
sarb
filds
ret
jmp
jb
mov
or
aam
sbb
leave
add
adc
leave
pusha
pushf
push
jg
sub
loopne
xor
dec
cmpsl
pusha
out
lahf
sbb
pop
rclb
xor
xlat
or
movsb
lret
adc
mov
js
pop
fidivs
ds
push
fidivrs
xchg
cmc
dec
sarb
dec
rol
mov
mov
mov
mov
add
push
jb
pop
bound
mov
lret
out
mov
push
pop
xchg
pop
rcl
xchg
movsl
inc
orb
xlat
ret
jle
inc
xchg
push
fstpl
xor
jo
lcall
push
or
adc
sub
out
jnp
cmp
pop
mov
pop
sub
inc
xor
inc
push
in
cs
cmp
jge
fisubl
int3
outsl
ds
fsubs
sti
mov
fs
mov
shll
jne
jo,pn
mov
fdivrp
xchg
adcb
punpckhwd
stc
sbb
sub
xchg
scas
mov
sbb
jno
ss
rclb
xchg
ds
daa
push
mov
cmc
ljmp
test
cld
aam
adc
pop
sub
mov
inc
fs
xchg
cmp
mov
add
or
jnp
aad
sbb
pop
xor
stos
fildll
imul
add
pop
pop
dec
fs
cmp
jle
xchg
cmc
xchg
stos
mov
iret
or
adc
outsl
add
or
repz
jno
cmpsb
stos
bound
sub
notb
xchg
inc
inc
pushf
add
lock
outsb
stos
jnp
lds
fsubrs
inc
rcrb
inc
jge
xlat
jb
arpl
popf
bound
into
push
jg
add
lret
pop
sbb
xchg
out
out
push
pop
pop
ficoms
repnz
adc
fldcw
test
sahf
mov
daa
dec
mov
divb
fsts
and
xchg
into
lds
push
and
mov
icebp
adc
or
subb
dec
cwtl
adc
and
out
xor
cs
scas
pop
pop
mov
xor
mov
stos
push
pop
fbstp
and
les
mov
lock
push
push
xor
mov
sub
jae
shll
inc
inc
push
mov
daa
or
xor
and
or
sbb
or
inc
mov
rol
lcall
mov
xchg
and
push
xlat
ljmp
mov
shrl
sbb
sti
xor
adc
xchg
or
pop
push
xchg
adc
adc
lock
fcomps
xchg
mov
insl
inc
xorb
addr16
cmp
in
lock
add
iret
jne
repnz
std
popa
int3
dec
fdivl
jle
popa
sub
repnz
mov
push
push
repnz
mov
sti
fmuls
pop
pushf
arpl
clc
lods
shll
push
fcmovb
ret
add
repnz
test
add
aam
cmp
iret
wrmsr
pop
sub
cmp
hlt
cmp
ja
xlat
inc
scas
mov
lcall
push
popf
lods
jne
sub
aam
std
call
jne
int3
inc
fwait
jg
inc
xor
pop
mov
push
add
adc
les
mov
adc
mov
stos
dec
int3
ljmp
adc
adc
inc
sbb
enter
pusha
adc
pushf
nop
dec
mov
mov
xchg
out
mov
fsubs
push
dec
cmp
cli
adc
fidivrl
adc
dec
jnp
inc
jo
cli
loop
and
ds
push
push
push
aam
mov
not
mov
xor
and
inc
dec
fidivrs
popf
into
clc
sub
sub
cltd
jle
pop
je
jns
scas
pop
dec
adc
sar
mov
lods
sbb
das
adc
pop
imul
fiaddl
adc
push
sarl
int
movsb
or
xchg
shr
shlb
movsb
cmp
fcmovb
jno
pop
adc
or
add
das
aas
xchg
add
dec
or
loope
jmp
ret
sarl
xor
arpl
stos
fldcw
pop
jmp
sbb
call
mov
cmp
xor
subl
add
loop
fwait
lods
sub
scas
mov
ret
ss
cmp
sub
shr
mov
inc
in
sti
dec
insl
cmp
add
inc
call
mov
pop
orb
scas
pushf
mov
jle
in
stos
pop
mov
into
js
xor
sbb
arpl
scas
jo
inc
mov
or
add
xor
lcall
sbb
inc
pop
lahf
clc
inc
adc
icebp
jg
sub
sbb
andb
mov
xchg
insl
inc
fnclex
fs
cmc
mov
push
and
cli
pop
lcall
nop
sbb
sarl
sub
mov
mov
sub
add
fdivs
cld
jmp
out
into
push
and
pop
sub
pcmpeqb
leave
xchg
inc
les
lods
in
sub
mov
cwtl
pop
rorb
lret
popf
cmp
jmp
mov
inc
in
test
or
sbb
decb
xchg
cmp
fidivl
or
in
pop
je
rcrl
out
into
sub
shlb
xor
fnstenv
sbb
jp
push
outsl
stos
lcallw
pop
jmp
mov
and
mov
inc
aas
aaa
not
jb
mov
mov
notl
xchg
sarb
cmpsb
jecxz
stc
inc
dec
push
inc
xorb
imul
adc
in
fs
sahf
push
call
andb
jae
mov
repnz
iret
repz
cmp
fidivs
sbb
push
mov
cltd
xlat
add
mov
les
out
sub
mov
aam
jae
inc
inc
test
testl
outsl
jecxz
fsubl
test
cld
cmp
mov
mov
lds
out
cmc
leave
popa
push
jle
pop
pop
or
add
pop
xlat
test
push
inc
es
pop
scas
or
and
push
ret
flds
scas
subl
into
xchg
jns
push
in
or
mov
outsb
es
inc
xchg
out
fisubrl
adc
std
cmp
mov
dec
aad
dec
mov
test
or
jns
fldcw
cmpsb
gs
sbb
loopne
fists
test
adc
out
mov
shl
or
and
and
cmpl
push
sahf
push
stc
mov
jmp
sarb
push
shlb
shl
fists
add
sarb
jle
loop
or
stc
loope
dec
adc
add
sbb
mov
push
pushf
inc
rcr
and
xchg
add
out
dec
decl
cmp
inc
inc
fsubr
mov
push
jg
fiadds
and
jbe
adc
and
jmp
ret
cmp
xchg
mov
ljmp
or
push
inc
shlb
add
mov
cli
lcall
bound
or
lods
cmp
sbb
ljmp
jno
into
xor
add
pushf
pop
push
outsl
sub
adc
adc
fstps
incl
or
nop
icebp
bound
jb
sarl
out
int3
add
cmpsb
mov
mov
shl
in
adc
jnp
pop
and
sti
add
fs
jp
jecxz
xor
lods
adc
loop
cmpsl
jae
mov
sti
test
sbb
jmp
out
aad
mov
cmpsb
or
xor
push
mov
aad
jbe
sub
std
add
mov
inc
inc
mov
pop
xor
and
mov
mov
adc
jne
fwait
imul
lock
pop
imul
repnz
loopne
mov
pop
inc
out
out
popa
adc
popa
mov
or
push
std
clc
sbb
rcll
mov
inc
es
fisttpll
pop
or
cmp
dec
pop
icebp
cmp
cmpsb
int
pop
jg
in
iret
test
filds
xchg
in
gs
sbb
mov
add
jo
and
push
mov
lods
mov
ljmp
push
inc
adc
mov
and
shl
push
loope
lahf
mulb
scas
jp
dec
and
ja
add
jp
and
roll
movsl
dec
xchg
pop
rcrl
fnclex
add
and
jp
push
adc
pusha
xor
and
inc
lods
jnp
xor
push
and
cltd
mov
add
mov
shll
sbb
mov
jo
push
std
insb
cwtl
hlt
cmp
add
add
add
ss
jnp
imul
inc
fstpl
imul
movsl
lods
cmp
inc
mov
xlat
jle
or
fisttps
icebp
sbb
sar
mov
mov
in
xchg
jmp
mov
aas
shrl
push
jae
pushf
mov
adc
loopne
fistps
daa
testl
dec
pop
sahf
out
cmpsb
or
into
cmp
inc
jo
pusha
jecxz
fdiv
shl
lea
add
mov
add
stos
mov
mov
cmp
and
sti
inc
outsb
cmp
jge
lods
pop
mov
repnz
push
cmp
gs
repnz
fnstcw
cwtl
pop
mov
lret
std
add
call
es
ds
pop
loope
dec
add
pop
mov
cmpb
pop
add
js
add
pop
clc
mov
imul
sbb
int
sarl
mov
pop
rolb
sar
sbbl
push
inc
ret
neg
andb
scas
add
adc
negb
aas
dec
cs
mov
push
popa
jmp
xor
mov
add
test
jb
mov
mov
mov
xor
gs
pusha
ds
popl
rclb
and
lahf
rorl
flds
inc
cltd
push
fists
int
pop
js
add
ret
xchg
ret
mov
push
jno
jmp
test
inc
lea
and
jg
add
fcomip
mov
mov
mov
hlt
shr
cmp
aaa
adc
jecxz
aas
pop
mov
rep
xacquire
or
gs
fidivrs
push
and
pop
lcall
fiadds
aaa
or
lcall
xor
mov
add
repz
jbe
cmpsb
mul
jle
ret
dec
call
mov
add
push
scas
nop
rcrb
mov
cmpsl
push
pusha
in
popf
push
dec
mov
int3
cli
add
mov
xchg
push
cmc
std
lcall
lock
stc
xor
fdivrp
sbb
mov
mov
sub
aam
lods
pop
ficomps
loope
xor
dec
push
inc
fwait
mov
jp
or
dec
aam
insb
pop
pusha
inc
lret
pop
faddl
sarl
shr
sbb
pop
add
jo
jb
je
cmp
push
mov
jge
inc
cs
push
or
jnp
and
mov
out
jp
outsb
pop
sbb
xor
scas
push
and
push
stc
jg
out
cmp
mov
lock
cmpsb
xchg
fildl
stc
movl
sbb
lods
iret
or
lcall
xchg
inc
xor
cltd
sub
inc
sbb
adc
pop
mov
inc
ret
into
or
cmc
pop
fiadds
pusha
fsubp
jle
xchg
mov
call
xchg
xchg
cld
insl
xchg
shll
adc
jp
dec
xchg
sahf
jo
call
fisttpl
ds
inc
loopne
push
add
mov
mov
push
ficompl
lds
inc
mov
xor
push
push
mov
and
stos
clc
test
and
inc
adc
xchg
stos
fsubrl
lcall
test
fs
adc
in
enter
clc
xchg
mov
sbb
repnz
roll
push
dec
mov
add
xor
loope
out
adc
xlat
xchg
jecxz
push
mov
fsubs
fcomps
loopne
shrl
inc
mov
inc
adc
ds
loope
arpl
mov
push
xchg
push
enter
stos
iret
out
dec
pusha
cmpsl
add
mov
pop
cmp
cs
adc
in
pop
roll
xor
outsb
lahf
push
jmp
sbb
cs
fucomp
xchg
jg
push
push
mov
dec
rorb
dec
mov
out
adc
cmp
pop
lahf
outsb
xor
sbb
mov
outsl
ds
mov
sar
push
adc
shrl
push
cli
aaa
jne
push
and
loop
mov
lods
adc
push
inc
fadd
test
add
movsb
fsubl
add
es
stos
sub
push
ds
enter
or
xchg
lret
and
sub
faddl
aaa
fnstsw
idivl
flds
cmp
jo
fdivl
enter
mov
lahf
jb
cs
clc
outsl
or
push
aad
jne
dec
stos
ds
int
pop
sub
cltd
jo
and
fdivrp
fistpll
ror
lret
cmc
stos
add
pop
jno
fldcw
mov
cli
lcall
std
negb
push
call
jb
cmpsb
lods
push
xor
mov
add
mov
js
dec
add
div
and
adc
dec
dec
xchg
sahf
mov
push
push
mov
je
hlt
popf
jg
push
pop
pop
mov
stc
mov
sbbl
push
int3
std
pop
jb
dec
xlat
mov
ja
push
xchg
cmc
movsb
cld
lods
ss
xchg
add
cmp
lcall
pop
inc
ss
jb
xchg
pop
std
out
cmpsl
nop
push
in
sbb
xchg
sbbl
clc
mov
addr16
adc
in
mov
pusha
or
in
in
lcall
mov
pop
sbb
sbb
sbb
std
cmp
lods
xor
mov
loope
xor
inc
cmp
inc
xor
mov
lock
push
jnp
shll
fcom
ficompl
sub
or
and
push
aad
in
fnstsw
and
in
mov
mov
inc
cmp
sbb
ljmp
jle
dec
add
jg
add
lret
push
movsb
and
lcall
pop
mov
xor
pop
fs
in
adc
inc
pusha
test
mov
xlat
xchg
push
push
mov
in
cmp
imulb
jp
lret
push
and
out
adc
repnz
add
dec
aam
xchg
in
and
rorb
test
add
shrl
in
es
out
shlb
data16
in
dec
pop
or
aam
dec
fwait
sbb
pop
mov
adc
inc
push
into
inc
in
dec
fcmovnb
jle
rol
lods
xchg
xor
divl
push
push
ss
and
dec
mov
add
insb
lods
mov
mov
xchg
fimull
iret
push
push
insb
loopne
jo
add
sub
ja
inc
inc
in
subb
int
pop
adc
cmp
movsl
fsubrs
call
adc
int
rorl
iret
fbld
inc
jo
cmovle
addb
dec
not
cmc
movsb
inc
in
aas
shlb
js
cmpsl
xor
les
mov
aaa
inc
push
into
aas
mov
cld
lret
mov
adc
repnz
push
mov
ljmp
fiaddl
jmp
gs
pusha
pop
xor
flds
push
addr16
fisubl
xchg
insl
pushf
testb
lea
cmp
pop
fdivrs
in
pop
cld
fwait
daa
roll
mov
aad
jle
test
pop
lcall
push
jmp
mov
inc
and
adc
cmp
mov
dec
pop
sbbb
iret
setb
mov
or
push
mov
lock
xor
movsb
cwtl
out
cmc
outsl
and
shlb
fsub
xchg
maxps
and
lret
scas
add
add
pop
fs
fisubl
test
test
mov
add
sti
pop
xor
and
sbb
mov
sbb
hlt
popf
lret
cmp
push
rcrb
push
std
sub
ljmp
roll
mov
fisttpll
jecxz
add
repnz
negl
push
inc
push
cmp
fstpl
fcomip
aas
repnz
inc
mov
call
xor
sarb
pusha
pop
mov
and
jmp
add
outsl
into
fcomps
fwait
xor
mov
sbb
mov
jb
std
ljmp
test
sbb
sub
add
pop
pop
stos
mov
fs
add
ret
adc
cmp
mov
movsl
push
xchg
or
push
fndisi(8087
xchg
loopne
xchg
enter
push
pop
xor
lahf
inc
cmp
cld
repz
js
sbb
fmulp
pop
fwait
mov
mov
ss
sahf
std
stos
sar
mov
add
fld
icebp
mov
inc
mov
leave
ffreep
inc
pop
aas
aam
rolb
repnz
inc
flds
mov
add
mov
cld
dec
sbb
sbb
mov
mov
mov
mov
mov
das
sti
mov
cltd
int
cmp
xor
ss
std
ret
push
inc
repz
add
cltd
pop
cmp
cmp
push
mov
inc
rorb
js
fwait
mov
arpl
xlat
outsb
push
popf
es
cmp
out
mov
and
sbb
shrl
enter
mov
mov
cld
mov
int3
xchg
loop
cltd
jo
push
bound
or
inc
mov
fstps
and
and
inc
and
outsb
call
mov
xor
push
gs
mov
testb
cmp
or
inc
pusha
mov
dec
ficoml
xor
mov
incl
sarb
and
mov
daa
cmp
mov
mov
jb
scas
lret
fsubl
sbb
dec
sti
pop
insl
lret
ljmp
iret
aas
jo
dec
cli
dec
rcrl
loopne
or
notl
stc
inc
popa
or
aas
bound
dec
cwtl
inc
cli
ret
lret
fsubrs
fistpl
mov
nop
mov
addb
cmpl
xor
dec
jg
mov
cmp
sbb
add
cwtl
jne
mov
mov
pop
cmp
dec
jnp
inc
adc
jno
jae
mov
flds
jge
add
jp
es
mov
int
mov
and
add
cmp
rorl
mov
enter
pop
rorb
mov
push
inc
xor
and
hlt
in
insl
inc
and
xor
shrl
adc
mov
stc
mov
or
int3
clc
mov
dec
into
adc
addr16
dec
jge
cmp
jae
push
xchg
aas
adc
jge
fcmovne
mov
jl
arpl
int
out
mov
fs
mov
fsubrs
inc
lock
fwait
cld
flds
jae
and
inc
jmp
sub
cmp
jo
aam
loopne
push
or
cmp
ficoms
in
pop
cmc
es
sti
ret
fidivrs
xchg
jbe
push
into
mov
loop
mov
fmul
ss
into
jns
cltd
cmpb
push
mov
adc
xor
pop
inc
negb
inc
sti
mov
fucomp
sarb
jmp
xchg
sub
dec
jnp
pop
push
adc
pop
jg
aad
mov
pop
leave
adc
orl
sar
subps
cmp
jmp
lea
xor
adc
enter
shll
sub
inc
cmp
xor
inc
enter
iret
jecxz
and
test
jb
mov
adc
lock
or
mov
push
dec
enter
jmp
ror
jb
jmp
xor
cwtl
cltd
xchg
nop
or
xchg
repz
jp
fcmovbe
cmpsl
lods
push
pop
in
scas
sbb
cmp
lcall
or
sub
jb
add
mov
jns
sti
push
cld
pop
mov
jmp
outsl
push
clc
sub
inc
xlat
mov
sub
in
inc
nop
and
je
das
push
jb
scas
decl
sbb
sbb
movsb
cmc
leave
ss
mov
xchg
fnstsw
in
sarb
jge
jmp
cmp
pop
xchg
mov
and
fisttpl
fcomp
inc
es
ljmp
cmc
add
rclb
inc
mov
and
cltd
push
bound
les
and
imulb
pop
repnz
adc
out
insl
cwtl
scas
stos
inc
out
dec
or
adc
jmp
sub
fldl
movsl
scas
in
out
fs
xchg
add
adc
or
das
xchg
mov
push
dec
lret
incb
inc
sbbb
scas
fcoml
push
inc
inc
addl
mov
add
vpavgw
inc
xor
cmp
data16
ja
push
into
dec
repnz
cmpsb
subl
dec
push
loope
stos
cltd
or
insl
pop
adc
add
lret
or
push
gs
pop
mov
in
int3
test
sahf
arpl
mov
push
pushf
jo
iret
dec
fimull
imul
push
movsl
xchg
mov
xor
xchg
xor
pop
iret
ljmp
rcr
and
mov
add
jo
xchg
clc
jb,pn
jb
add
in
xlat
push
pop
jnp
outsb
adc
inc
arpl
test
aas
or
push
ficomps
mov
pop
popf
shrb
fsubr
fsubl
adc
dec
mov
cmpsl
insl
or
andb
jge
mov
clc
mov
xor
adc
fcmovnb
mov
es
mov
add
loopne
inc
inc
inc
push
adc
add
das
adc
xchg
roll
popa
jp
inc
adc
push
lcall
sbb
call
out
sti
test
outsl
xor
mov
les
inc
add
data16
add
nop
leave
enter
jae
mov
addr16
mov
ds
insl
pushl
push
cmp
fnstsw
adc
sub
push
ds
adc
loop
stc
dec
sbb
jae
popf
mov
aas
xor
mov
aad
sbb
in
into
aaa
jo
gs
mov
imul
clc
fimull
pop
fdivs
sub
push
loopne
out
sarb
mov
test
jmp
inc
jo
pop
sub
stos
adc
cmp
into
push
mov
cwtl
xchg
cmc
xchg
sti
and
jo
mov
in
sbb
scas
fwait
push
clc
add
stos
add
rorb
mov
rolb
mov
pop
xor
or
pusha
mov
ljmp
cld
bswap
sub
lahf
xlat
mov
dec
mov
cmpsb
jae
push
push
mov
mov
loop
or
sbb
in
inc
inc
add
pushf
mov
inc
or
cld
jbe
or
xlat
shl
mov
sub
hlt
insl
mov
pushf
push
das
push
into
pop
stos
loopne
hlt
push
and
out
inc
add
mov
imul
jne
out
cli
xlat
repnz
sbbl
pusha
call
fcomps
ja
lret
pop
mov
or
or
add
push
xor
xor
scas
aad
aam
ss
cli
rol
adc
das
or
sub
add
pusha
lret
aad
out
sub
jle
notl
iret
lret
das
mov
shll
adc
cs
mov
cmpsb
add
dec
inc
jo
xor
scas
punpcklwd
adc
mov
jae
mov
mov
adc
jmp
fcmovbe
movsb
inc
pop
xor
xchg
fcomp
and
fdivrs
call
mov
popf
mov
inc
sbb
dec
sahf
mov
ljmp
loop
adc
stc
lods
xchg
push
hlt
cs
add
sarl
psrlw
mov
jp
sbb
nop
inc
sbb
loop
jp
lock
jb
std
push
xchg
in
push
and
xlat
jp
jne
cwtl
push
push
lea
sarb
and
ds
sar
sar
sbb
dec
loop
cmp
clc
scas
jo
xlat
bound
nop
cmp
xor
jmp
push
ljmp
xor
addl
cmpsb
mov
sbb
in
fisubl
mov
in
loope
xchg
lods
das
mov
repz
cld
stc
push
and
aam
inc
lods
mov
xchg
das
xchg
test
mov
cli
sbb
bound
mov
clts
mov
mov
xchg
dec
push
inc
inc
mov
dec
jo
bound
mov
mov
dec
movsl
sbb
aad
out
mov
sub
inc
jmp
ja
lea
mov
inc
test
pop
inc
inc
rcrl
faddl
daa
or
xchg
fcoml
lret
outsb
jns
rcl
andb
pop
sti
rolb
jle,pt
into
cli
out
testl
out
fwait
aaa
jbe
inc
jo
cmp
int3
ljmp
inc
mov
dec
shll
jb
jg
pusha
ret
mov
pusha
aas
or
adc
jmp
fwait
loopne
ja
movsl
inc
rcr
add
iret
mov
pop
dec
es
or
mov
lret
shll
mov
repz
push
popa
fstpl
cmp
sub
dec
fs
sub
loopne
ja
add
jl
loop
mov
dec
fbld
jl
mov
imul
fidivrl
xor
jo
fmulp
std
push
cli
and
incb
dec
cmp
push
mov
or
inc
inc
xor
and
rolb
dec
sbb
dec
fiaddl
outsl
push
out
inc
sbb
rorb
fsincos
sbb
jb
inc
push
inc
fsubrs
lock
pusha
roll
aad
inc
pusha
mov
imul
cmp
pop
mov
jg
inc
mov
xor
jne
int
xlat
ret
fidivrs
push
mov
pusha
mov
inc
mov
rclb
add
adc
cmp
push
xor
adc
inc
add
sub
mov
push
enter
lcall
dec
sarb
inc
push
cmp
fst
jp
cmp
mov
fiadds
and
fsubp
sbb
xchg
push
inc
push
dec
fldl
pop
jae
iret
mov
shl
inc
popf
dec
popf
inc
cmpsb
bound
push
icebp
cmp
lock
push
sub
and
ljmp
jl
nop
xor
leave
and
fidivs
js
sbb
sti
cwtl
adc
pop
jne
push
movsb
call
loope
andb
aam
loopne
aaa
jne
mov
faddl
orl
xchg
ljmp
aam
pop
mov
mov
mov
fcmovnbe
pop
jecxz
jle
add
mov
call
aas
or
lahf
faddl
jle
jno
mov
and
and
jbe
cs
lds
xor
sub
movsb
aam
je
lahf
mov
nop
sahf
xor
hlt
rclb
repnz
add
mov
mov
adc
jnp
mov
pop
js
adc
icebp
out
iret
adc
jp
shll
aam
scas
sbb
inc
adcb
repnz
add
sti
sbb
lock
iret
jp
fistpll
xchg
fdivrl
cltd
sbb
push
mov
pop
cmp
paddusb
adc
mov
xchg
add
popa
cmpsb
aam
pop
push
loop
lret
out
xchg
div
or
sub
decl
or
sub
pop
xchg
push
in
repnz
or
push
push
add
cli
and
pushf
and
scas
loope
adc
push
fnclex
shll
into
fidivrl
pop
ficompl
leave
repnz
push
in
mov
cmp
jl
sti
push
out
daa
sarb
pop
cmp
jb
call
pop
inc
push
xlat
adc
push
xor
aad
mov
decl
mov
insb
clc
das
inc
loopne
jae
mov
nop
lea
add
add
int3
xor
push
push
or
push
jo
mov
aaa
mov
add
test
faddl
push
lods
xor
imul
mov
fsubp
push
negl
cs
push
outsl
xor
fucompp
cwtl
xor
sub
jmp
sub
mov
insl
mov
sub
or
imul
pop
fdivs
sahf
in
flds
data16
insb
movl
insb
jmp
pop
mov
out
mov
cmp
daa
fidivl
imul
push
pop
out
es
dec
push
imul
bound
push
push
jl
out
mov
fmull
ljmp
cld
das
pop
jae
aad
push
imul
cmc
scas
jmp
push
shll
add
pop
test
xchg
and
pop
pusha
pushf
cs
and
or
mov
push
jg
dec
mov
adc
push
add
push
cwtl
mov
xchg
add
dec
popa
lret
add
mov
mov
add
mov
jmp
mov
ds
mov
ljmp
out
out
lcall
movsl
dec
cmp
rol
shrl
pusha
mov
nop
sbb
loop
cmc
lods
rol
stos
sarb
inc
fwait
xchg
loope
pop
cwtl
push
pusha
cwtl
std
imul
or
cmp
cmp
lods
stos
fcmovnbe
jge
cmpl
cli
mov
inc
not
lahf
dec
and
inc
mov
cmp
loop
add
lcall
sub
mov
popa
fnsave
jo,pt
mov
xchg
push
incb
xor
fdivrl
sub
rclb
movsl
scas
add
sbb
mov
push
dec
sbb
xchg
xlat
inc
sbb
lods
sub
xchg
or
inc
and
mov
fimuls
mov
mov
hlt
pusha
test
cmp
lret
inc
pop
mov
dec
dec
rclb
bound
pop
push
outsb
push
mov
loope
adc
sarl
in
in
pop
lea
and
test
ds
fiaddl
pop
or
in
or
add
jbe
outsb
aad
mov
dec
add
imul
aad
dec
mov
adc
push
cli
mov
dec
outsb
in
xchg
divb
xchg
cmc
jge
mov
pop
mov
js
xchg
and
xlat
iret
push
subb
xlat
dec
fmull
dec
jg
push
pop
jae
dec
loopne
xchg
sub
pop
sarb
pusha
or
pop
adcb
mov
jb
inc
mov
es
js
xchg
stos
dec
scas
leave
aad
cmpsl
mov
sbb
dec
push
lret
iret
sbb
xchg
fstpl
fwait
aaa
rcrb
xor
out
repnz
ljmp
shll
mov
jp
sbb
mov
sbb
pop
sahf
jecxz
inc
pusha
leave
inc
or
mov
add
cmpl
pop
pop
rorl
cmp
mov
hlt
fsubrs
push
imul
aaa
sub
andl
test
in
mov
mov
and
inc
ficoms
lret
aam
xlat
push
and
push
or
sbb
cmc
insb
mov
popa
jmp
add
mov
lods
popa
fdivs
out
push
mov
ror
cmp
xchg
push
pop
jb
lds
pushf
jg
fcmovu
mov
mov
shrl
pop
mov
push
mov
cmp
movsl
aad
xor
or
sub
mov
leave
push
nop
lahf
sub
cs
in
pminub
or
push
cmc
dec
dec
jge
cmpl
fiadds
aad
mov
aad
xchg
inc
push
andl
pop
fdivrs
icebp
mov
or
mov
sub
push
mov
xchg
jne
loopne
imul
mov
sbb
adc
mov
jecxz
fldt
jae
stos
mov
mov
pop
push
nop
dec
adc
dec
aas
mov
cmp
iret
pushf
inc
inc
hlt
cli
icebp
jae
into
aam
xor
cltd
movsl
cmp
xchg
std
pop
mov
adc
sarl
inc
mov
dec
xchg
mov
dec
dec
pusha
lret
mul
jo,pt
adc
pop
movsb
jne
pop
jp
lock
xchg
mov
pushl
add
shrb
mov
repz
shr
xchg
mov
in
mov
sbb
mov
add
ret
insl
push
mov
lea
cmp
aas
jmp
negb
fsubrl
fldcw
cmp
mov
lock
jmp
mov
fsubl
inc
stos
mov
lock
movl
fsubr
pusha
cmp
xlat
dec
sub
cmp
fisttpl
jae
mov
xor
mov
clc
les
adc
jecxz
inc
jb
jecxz
and
std
pop
hlt
lcall
sub
or
xchg
std
stos
xchg
in
addb
jns
push
aad
sahf
or
inc
insl
js
or
rclb
ja
lods
imul
sbbb
add
mov
fsubl
daa
roll
icebp
add
ficompl
xchg
insb
inc
nop
sbb
fistl
cmp
std
int
mov
push
or
sub
or
push
jno
fwait
dec
dec
decb
lahf
stc
push
fucomi
sub
cli
shl
jno
stc
stos
imul
test
adc
add
inc
adc
or
cmpsl
les
xor
jb
fdivp
pushf
jmp
push
push
fistl
xchg
mov
xchg
adc
jns
cld
lds
mov
add
adc
dec
xor
adc
add
popf
repz
mov
dec
pop
ret
adc
cld
inc
mov
pop
add
xor
es
aas
into
push
cli
xor
aas
lea
xor
push
adc
clc
push
mov
arpl
sbb
sarb
push
rcrb
inc
rolb
les
lret
test
push
pop
dec
inc
shrb
out
mov
cltd
cmp
test
dec
xor
fdivp
fnsave
out
mov
mov
call
out
push
sarb
or
clc
dec
pop
stos
inc
cs
inc
loopne
cmp
xchg
pop
mov
or
paddq
jne
ljmp
cmp
imul
inc
and
cltd
rcl
push
lods
mov
cmp
push
push
clc
clc
movsl
in
sarb
mov
je
push
xchg
movsl
jg
xchg
int3
push
loop
inc
loopne
imul
int
pop
pop
sbb
inc
stos
icebp
arpl
jle
inc
aad
rorb
pusha
cltd
mov
arpl
pop
cmp
mov
add
and
mov
and
mov
mov
loope
mov
std
lods
jns
jo
sti
jbe
call
fmull
or
out
push
orl
push
aam
adc
andl
test
mov
fisttpll
insl
jno
pop
xchg
data16
shl
dec
pop
push
aam
mov
adc
push
fsubl
push
pop
decl
or
mov
pusha
add
into
in
pop
add
sub
xchg
fistpl
and
mov
push
and
ja
leave
mov
lods
mov
xor
pushf
push
add
pop
inc
je
pop
push
pop
cmp
lret
inc
sub
cmpsl
adc
add
enter
negb
mov
mov
or
nop
xor
push
dec
rolb
mov
fcoms
jb
cmp
stc
push
ss
jnp
ja
push
inc
pop
jno
loopne
sub
push
sahf
push
adc
stc
xchg
xor
pop
pop
aas
fdiv
ljmp
push
xor
mov
outsb
fiaddl
xchg
cli
js
rcr
ret
popa
mov
xchg
jle
pop
cltd
pop
jecxz
sahf
idivb
jmp
ret
stos
fisttpl
add
sub
pushf
mov
cmp
adc
movsl
imul
dec
or
push
dec
mov
cld
rclb
xor
push
mov
dec
fdivrs
push
xchg
stos
gs
fdivrs
outsb
imul
add
sub
scas
sbb
fdivrl
inc
addr16
arpl
stos
sahf
fs
dec
pusha
in
pop
sti
ret
push
fsubl
cmc
or
mov
or
cmp
push
push
in
je
rclb
into
push
jmp
es
mov
fcmovbe
movsl
jo
pop
lds
mov
or
adc
mov
inc
inc
jmp
push
dec
mov
inc
adc
fistps
fbld
mov
cmp
mov
negb
inc
and
add
je
frstor
jmp
jae
lcall
add
jle
movsb
or
lret
lea
mov
shrb
fimull
sub
std
sar
fisttpll
mov
sub
lds
add
pusha
ret
loope
jne
popa
inc
inc
xchg
push
or
scas
mov
bound
add
add
into
mov
xor
bound
movsl
push
jae
aas
shrl
xor
pop
push
mov
inc
ret
push
mov
xor
sbb
mov
lret
les
sbb
fsubrs
mov
pop
jmp
or
ret
jmp
adc
dec
arpl
decl
pop
push
mov
sti
ret
int3
push
mov
fimull
pop
add
sub
mov
divl
adcb
rcrl
sbb
sub
mov
add
data16
pop
pop
addr16
test
cmp
sub
cs
push
repnz
push
inc
outsl
out
adc
sub
xchg
inc
sbb
fldenv
decl
pop
pop
dec
fadds
xchg
mov
shll
out
cmc
mov
aaa
loop
lret
fldl
pop
pop
push
movsb
rorl
push
cld
mov
rorl
test
add
or
mov
and
mov
add
imul
dec
or
inc
ds
xlat
and
fildl
adc
jp
mov
mov
bound
fsts
pop
aas
pusha
inc
das
aam
aas
jp
sbb
jmp
loope
data16
daa
outsb
aad
fimull
and
out
mov
push
aam
idiv
fadd
add
inc
nop
xchg
ljmp
and
enter
mov
nop
outsb
fimuls
sub
add
fisubs
or
xchg
and
inc
jmp
or
cmpsb
xor
inc
pop
cmp
add
sbb
imul
fsqrt
mov
push
jo
jmp
imul
jp
mov
push
cwtl
pushf
aaa
mov
sahf
iret
testb
inc
push
lods
or
dec
inc
add
push
fiadds
fcmovb
adc
out
idivl
adc
lret
and
test
jp
push
arpl
sarl
xor
cld
push
inc
mov
push
sub
imul
repz
mov
mov
nop
lahf
pop
push
inc
popf
dec
and
xchg
pop
loop
inc
push
cwtl
jmp
jle
add
mov
lock
ret
fcmove
imul
scas
insb
push
cmc
mov
push
xor
scas
stos
mov
mulb
fnstcw
cwtl
add
dec
sahf
shlb
stos
inc
cltd
jnp
inc
fmul
fisubs
inc
aam
test
jae
fsubrs
inc
mov
inc
dec
mov
cld
jmp
ret
sbb
push
mov
add
mov
mov
sub
cmpsl
mov
rolb
aaa
jge
mov
out
inc
fmuls
add
stos
sbb
jecxz
adc
fsub
mov
lret
inc
loopw
call
jns
leave
insl
aas
rcrl
push
push
adc
add
ds
mov
fldcw
in
pop
sub
out
dec
cmpb
loope
das
hlt
pop
cmpb
or
les
ss
and
daa
push
data16
out
fdiv
movsl
and
stos
sub
js
xchg
ds
adcl
mov
xchg
test
add
repz
cld
fldt
jns
inc
push
nop
in
inc
mov
jnp
pushf
xor
sbb
sbb
lock
push
dec
es
xchg
scas
cmp
out
std
and
inc
psubq
mov
mov
fwait
stos
mov
clc
push
fisubs
pushl
sub
lret
cmpsb
jb
jle
mov
cli
stos
lods
cs
aam
cmc
mov
lcall
inc
sub
outsb
nop
pusha
cli
lods
rorb
addr16
in
pop
mov
and
cmpsb
cs
push
sti
cmp
sbb
and
xor
mov
lea
adc
clc
out
mov
js
fsts
leave
push
push
imul
xchg
mov
mov
xchg
out
add
and
push
cmp
stos
cmp
das
mov
cmp
gs
mov
ret
add
out
sti
dec
loop
mov
mov
out
xchg
dec
fcoms
insb
mov
incb
popa
aas
jnp
iret
cmp
shll
ds
lea
aam
pop
or
rcrl
lret
jp
mov
pop
cmpsl
mov
xorl
scas
or
aad
outsl
xchg
loope
mov
out
push
out
lods
in
fstps
xlat
ret
repz
sbb
pop
jbe
divb
or
cli
mov
mov
inc
int
lcall
ds
stos
inc
jae
dec
bnd
sarb
in
loop
pop
xchg
dec
fldt
sub
cmovb
xchg
pusha
mov
mov
xchg
scas
clc
cli
push
lods
inc
clc
idivb
pop
xchg
push
aas
and
mov
sub
mov
add
cmp
loopne
dec
mov
inc
movl
dec
int3
fcmovb
pop
in
aam
out
cmp
dec
xor
rcrl
dec
inc
aad
les
jns
jbe
dec
ja
mov
cmp
push
insb
in
clc
stos
or
sbb
fdivrl
lock
test
subl
cld
ja
adc
inc
xor
scas
cmpl
test
ljmp
leave
imul
repnz
mov
sub
loop
and
fsubl
movsl
adc
cmp
lcall
cmp
sbb
xor
dec
outsb
dec
pop
aas
fistl
add
add
cmp
jne
or
out
or
fwait
cmc
fnstsw
xor
xlat
lcall
loop
lock
call
or
stos
adc
inc
jns
filds
mov
inc
push
inc
nop
mov
jb
mov
rcrl
inc
nop
mulb
mov
sub
in
push
pop
xchg
push
mov
pop
cmpsl
cmp
out
add
jmp
shrb
push
mov
les
addr16
adc
popa
inc
and
xlat
sbb
push
add
popa
mov
push
mov
aad
dec
jbe
fnstsw
xor
inc
pusha
test
jb
adc
aam
pop
mov
mov
xor
shl
mov
xlat
repnz
mov
and
add
pushf
lea
xor
pop
add
jecxz
mov
add
inc
pop
fisubs
stc
inc
and
adc
or
rcr
push
aaa
aad
jns
or
inc
jo
sub
sub
mov
lcall
sti
int
cmpsl
push
inc
aad
jae
xchg
pop
pushf
mov
inc
mov
insl
insl
sbb
in
mov
jle
mov
xchg
stos
adc
fwait
in
jbe
jp
rcrl
sbb
or
xor
int
mov
dec
inc
pop
dec
stos
or
dec
and
mov
popa
jnp
flds
mov
divb
insb
xor
inc
xor
test
add
rcr
negb
mov
push
xchg
or
sahf
data16
out
faddp
out
push
xor
push
cwtl
inc
cld
cmp
lea
sbb
enter
jns
dec
cmpl
inc
inc
bound
cli
not
aad
popa
sub
and
pop
jge
repnz
add
test
xorb
adc
std
jl
inc
loopne
lods
or
mov
inc
push
popa
cmp
pop
popa
pop
arpl
dec
cmp
daa
mov
push
mov
and
subl
add
jmp
lock
xchg
push
jle
xor
jp
sahf
pop
push
dec
in
loope
pop
add
add
dec
ret
dec
int
push
mov
cmpsl
inc
add
pop
in
into
xchg
in
fmul
mov
pop
dec
jno
adc
addr16
inc
into
push
mov
and
cmpb
lret
jge
xlat
and
into
cmovb
and
xor
aaa
fbstp
fisubl
xchg
fisubrl
leave
int
jns
mov
xor
popa
sahf
popa
mov
mov
or
bound
cmpsb
dec
xor
jle
mov
fisubl
mov
jl
xor
int3
pop
mov
sbb
cmp
shlb
lret
lret
rcrl
fidivrs
xchg
push
mov
or
mov
sti
xchg
das
loop
cmp
sahf
insl
cmp
inc
adc
pop
fnstenv
loopne
loopne
ljmp
sbb
loop
cmc
lret
int3
push
dec
pushf
dec
outsb
add
mov
cmp
and
test
cmc
mov
in
jmp
mov
test
mov
dec
jge
icebp
push
lahf
loope
xchg
leave
xlat
stos
mov
or
filds
and
jp
testb
mov
lock
test
rcl
in
sarb
cmp
mov
sub
or
das
aam
fisubl
mov
cmpsb
shlb
add
mov
rcl
sub
jp
or
cmp
ds
fcoms
mov
out
test
fstps
lds
test
addr16
and
movsl
mov
rcll
add
xchg
leave
inc
scas
pushf
cmp
sub
push
pop
scas
jl
sbb
repnz
ljmp
push
lock
scas
inc
inc
int
cwtl
fptan
mov
aam
add
call
push
mov
cmp
jge
cltd
jp
mulb
cmp
xchg
adcb
sete
subb
sub
scas
lcall
and
cli
testl
inc
fmul
adc
mov
cld
dec
inc
xor
outsl
shr
inc
fsubr
loopne
roll
cli
push
lcall
sbb
and
fcmovu
andb
arpl
mov
push
enter
stos
nop
inc
loop
pushf
cld
fcoml
cs
push
fcoml
xor
jle
iret
cld
cmp
and
jmp
cmp
lcall
cmpb
mov
popa
in
pusha
fidivs
cmc
roll
mov
pop
push
test
mov
mov
les
and
mov
pop
mov
add
mov
dec
inc
push
stos
sub
cmp
mov
and
xchg
frstor
adc
and
cmp
fildl
ret
add
fsubs
mov
or
insl
push
daa
ret
pop
and
fimuls
icebp
out
stos
jnp
inc
and
bound
push
jge
mulb
outsb
xor
cld
sti
sub
sub
sbb
lea
pop
bound
subl
fcomps
aad
fimull
clc
mov
xchg
xchg
rorl
mov
mov
cmp
daa
jbe
cmp
rcll
icebp
cmp
xchg
or
loop
out
adc
or
adc
and
in
mov
movsl
push
dec
aas
loopne
mov
sbb
es
xchg
sti
mov
dec
sub
xor
mov
push
jb
fsubl
fidivl
in
jne
aad
and
sub
stos
or
push
sarl
inc
rclb
lods
mov
mov
jne
jnp
into
sub
pop
mov
cmp
push
pop
add
or
mov
xor
mov
popf
add
fistl
and
xor
shll
mov
or
fdivs
scas
andb
in
or
outsl
or
sub
inc
or
scas
cld
sti
push
dec
fsubs
les
adc
push
dec
dec
sub
lret
gs
xchg
pop
sbb
push
sahf
adc
cmpsb
xlat
pop
ds
xchg
rorl
incb
or
gs
pop
and
repz
call
aam
inc
out
cmp
push
xchg
sub
loop
ret
fsts
std
cmpxchg
outsl
in
inc
inc
add
fsubp
adc
scas
ret
cld
nop
mov
jo
gs
and
mov
jl
add
dec
fcoms
xchg
sbb
lret
push
xlat
xor
in
lcall
mov
into
xchg
push
cwtl
xlat
mov
pop
sbb
and
ret
push
or
jmp
xor
aas
dec
pusha
bound
inc
push
lret
adc
pop
scas
loope
lock
stos
adc
jbe
fiaddl
scas
or
adc
loop
adc
aad
push
inc
das
dec
jbe
mov
in
in
aad
and
aad
lods
mov
imul
ja
movsl
add
xorb
adc
mov
gs
jp
mov
mov
push
push
dec
roll
or
sarb
mov
xor
sbb
cs
into
out
inc
leave
adc
ss
nop
xchg
lahf
sub
inc
adc
fisttps
ficoml
pop
mov
ljmp
aad
and
ja
call
scas
insb
notl
into
hlt
cmp
lret
xchg
mov
arpl
cmpsb
mov
shlb
ljmp
pop
sarb
sbb
shrl
loopne
cmpsl
lret
or
add
xor
add
out
cltd
jle
rcll
cmp
and
push
out
sar
jo
cwtl
mov
call
jle
xor
sub
imul
notb
shr
inc
jo
mov
xor
push
movsb
movsl
lds
xor
pop
rcr
imul
cmp
shrb
imul
xor
daa
push
notb
lods
ret
add
lds
repnz
add
push
jge
inc
lret
jle
add
jl
stos
bound
push
out
xchg
ret
push
inc
subl
jecxz
inc
cltd
add
out
mov
loop
mov
inc
sbb
fwait
inc
rcl
push
mov
xchg
adc
cmc
rcl
pop
add
stos
add
bound
test
sti
pop
or
stc
xchg
pop
sub
add
and
lahf
jmp
dec
jl
ret
imul
mov
fmuls
xor
jne
test
stos
push
mov
pop
pop
or
sub
dec
or
cmpl
sub
subb
sbb
out
jnp
enter
mov
fisubl
rorb
mov
xchg
loop
into
aas
mov
in
aam
dec
push
fdivs
ljmp
sub
shlb
cmp
and
xchg
push
mov
mov
or
dec
addr16
loop
fstp
rclb
pop
cs
fistl
jp
sub
test
and
mov
incl
push
mov
clc
dec
or
in
mov
mov
xchg
xor
dec
dec
push
cld
lret
mov
cmp
dec
adc
xchg
mov
mov
jmp
pusha
inc
sub
cmp
push
insl
jle
or
push
out
rcr
lock
and
stos
call
jns
dec
test
invd
pop
push
out
cmp
ss
mov
adc
insb
stc
mov
mov
out
lcall
stc
popa
scas
cltd
jo
mov
les
inc
pusha
sbb
mov
pop
jb
dec
pop
lcall
sbbb
aaa
xchg
and
lahf
fcomp
lea
out
cmpsl
jne
mov
testb
mov
sub
xchg
leave
push
imul
enter
sti
dec
pop
les
or
jge
mov
cmp
xchg
adc
adc
add
inc
shlb
lods
push
fdivrl
imul
pop
popf
icebp
imull
sbb
inc
stos
insb
mov
fmul
xchg
xor
pop
add
add
bound
inc
call
sbb
fdivr
test
ljmp
js
es
dec
insl
rorl
addb
inc
cmp
sub
mov
fstpt
fld
je
add
sub
cmp
jbe
outsb
movsl
loop
adc
fsubrl
out
pop
push
aam
mov
popf
push
dec
insl
push
adc
push
pusha
stc
adc
dec
out
cmp
adc
dec
fildl
inc
aaa
jns
mov
insl
cld
jle
add
addr16
mov
xor
jle
test
aam
movsb
cwtl
cltd
int3
bound
mov
popf
and
dec
mov
xchg
std
pop
mov
dec
fstpl
jp
icebp
ret
lahf
inc
shlb
pop
cs
fists
in
adc
pushf
aas
adc
add
dec
test
sti
sbb
divl
shlb
stc
jae
pop
inc
add
aad
sub
inc
pop
addr16
jo
sbb
test
test
mov
shl
fisttpll
hlt
xchg
dec
sbb
mov
sarb
lea
into
or
cmp
icebp
std
sub
xor
imul
and
mov
adc
inc
in
test
dec
fistl
imul
mov
iret
push
and
jp
outsb
inc
js
cmp
fsubr
cmc
sub
and
pop
pop
add
lock
movsl
aam
ljmp
xchg
sbb
jae
mov
cmp
ljmp
xlat
pop
inc
lods
dec
sub
rcr
clc
lods
cltd
jnp
and
dec
sti
sbb
addb
mov
loopne
mov
or
stos
lcall
mov
dec
addr16
fidivs
xlat
ret
adc
repz
fisubs
add
mov
fsts
stos
das
dec
lods
push
shl
negl
inc
pusha
lods
enter
fnstsw
lret
andb
fisubrs
cli
mov
sarb
inc
es
fs
ds
add
addl
and
sub
mov
push
lea
mov
test
sti
jmp
xlat
in
lods
mov
jns
fstps
mov
xor
andb
push
mov
mov
pusha
lahf
in
fbstp
test
mov
rorb
push
mov
fistps
mov
ret
jne
fsubs
mov
inc
jae
fs
test
pop
push
cmp
lcall
fsub
imul
push
xchg
outsl
jne
shll
jecxz
lock
jle
or
aam
cmp
jne
fldt
std
inc
data16
cmpsb
sub
pop
xchg
sahf
inc
add
jb
lahf
mov
inc
sub
push
call
imul
lcall
jno
repnz
movsb
mov
inc
sub
sub
jb
mov
inc
push
dec
repz
decb
outsl
push
shr
inc
mov
xor
imul
data16
add
fisttps
push
nop
and
out
jl
addr16
ficomps
xchg
xchg
jecxz
js
fistpll
fstl
and
test
fwait
xchg
jp
cmp
cwtl
pop
filds
lret
ficompl
dec
xchg
stos
test
mov
dec
loopne
mov
pop
and
jp
mov
sbb
popf
jae
dec
aaa
imul
popf
fnstenv
bound
jle
aaa
add
pop
lcall
shlb
les
mov
call
movsb
fnclex
mov
jp
and
push
test
dec
call
fdivp
ror
xchg
je
jg
mov
fadd
scas
ljmp
or
fistpll
mov
cmp
mov
mov
add
jns
incl
daa
mov
dec
test
rclb
fdivr
sbb
xchg
adc
into
scas
cli
cmp
or
pop
jns
push
rcl
push
fs
cmp
push
scas
sub
in
push
cmp
and
or
sub
in
out
mov
dec
push
mov
push
mov
pop
push
add
lret
inc
rcl
shlb
jp
xor
cltd
test
pop
mov
ljmp
pop
push
fimuls
push
mov
mov
sahf
stc
sbb
fcoms
test
jle
fisttpll
xor
inc
sarl
xchg
add
inc
cwtl
mov
lock
ss
lret
iret
fcmove
fwait
mov
inc
jo
jmp
daa
pop
int3
fcmovnbe
inc
mov
imul
lahf
pop
pop
add
insb
lods
inc
mov
loope
push
in
adc
pop
xchg
test
call
mov
dec
dec
inc
sbbl
sub
mov
imull
data16
fisubs
dec
jmp
fistpl
nop
mov
xlat
fnstsw
outsl
xor
mov
repz
enter
scas
inc
cli
mov
ljmp
jno
push
xchg
enter
mov
cmp
jmp
pop
xchg
dec
mov
mov
adcb
repz
scas
in
lods
inc
call
jno
sbb
mov
inc
xor
mov
fsubl
std
ljmp
aaa
adc
stc
or
enter
adc
std
in
fistl
sub
push
dec
fdivrs
inc
mov
pop
inc
loopne
aad
lds
jp
cmp
sub
mov
cmc
in
nop
jbe
pop
pop
push
mov
fisttps
adc
fs
inc
jle
aaa
in
fdivr
movsl
dec
and
insl
loop
popf
pop
das
jl
jmp
pop
mov
xchg
ja
call
mov
inc
and
orl
jmp
push
mov
hlt
mov
rcrl
adc
xor
lods
or
sub
in
jnp
xor
lods
cmp
mov
xor
mov
jl
call
dec
jmp
sbb
scas
mov
push
inc
out
sub
jecxz
push
mov
add
sub
jno
dec
mov
adc
loope
inc
mov
movsl
jge
loopne
push
jmp
aam
shll
or
xor
add
fwait
jecxz
fdivrs
and
and
ficoms
xor
mov
movl
sub
hlt
inc
cli
xchg
lods
cmpsl
jns
add
pop
aam
out
add
mov
push
int
pop
xlat
mov
dec
dec
fisubl
adc
add
push
fcomip
jae
or
loope
icebp
jno
adc
dec
aam
rol
sti
push
lea
inc
mov
inc
aas
mov
std
mov
mov
adc
inc
mov
rolb
xor
fcmovne
ret
loopne
and
jbe
cmp
cmp
and
jnp
sahf
mov
and
mov
rorl
test
addr16
sub
les
test
push
mov
lods
push
push
lret
std
xor
fsts
push
pop
lret
fisubs
lds
iret
movsb
mov
outsl
scas
sub
cmp
pop
ret
cmp
loop
ljmp
cmp
add
xchg
and
cmp
pop
decl
mov
mov
loop
mov
dec
dec
jle
insb
scas
hlt
xchg
in
test
les
add
xchg
xchg
data16
fisubl
lock
push
cwtl
das
aas
mov
decl
cmp
aas
push
fcom
jnp
test
cltd
jge
ret
sub
iret
shlb
pop
scas
cmp
pop
repnz
push
stos
scas
cmpsb
inc
pop
inc
pusha
pop
inc
cs
xchg
fsubrp
add
lret
dec
mov
mov
adc
shlb
fmulp
gs
mov
dec
push
daa
mov
call
stos
je
outsb
mov
cmc
and
push
sbb
xor
popa
movb
inc
lock
adc
ret
mov
ds
js
push
lret
rcr
ret
mov
mov
jl
rolb
or
ss
mov
fs
hlt
test
icebp
incb
mov
pop
nop
repz
shll
or
lcall
ret
cmp
pop
je
repnz
inc
test
push
dec
sahf
cmp
mov
or
inc
lret
aam
mov
adc
inc
mov
fstps
mov
or
dec
jo
inc
outsl
cmc
mov
cltd
fistpl
mov
adc
or
repnz
sbb
repz
in
jbe
inc
xor
push
add
inc
and
pop
cli
push
jo
leave
js
cwtl
into
adc
fbstp
test
or
cltd
jmp
jle
insb
and
call
test
jl
cld
aas
scas
ficompl
out
cmp
dec
subb
loope
repz
xchg
mov
aam
cmp
mov
test
lret
ljmp
jecxz
sub
stc
ds
add
jb
inc
cmp
inc
das
mov
add
or
xchg
lahf
push
jnp
scas
data16
lods
mov
lock
add
sbbb
pop
adc
fisubs
mov
cmp
pop
imul
adc
sti
add
outsl
fisttpll
scas
cmp
daa
sti
sti
fildl
leave
inc
inc
pop
lcall
data16
repnz
leave
fsubp
jp
push
inc
cld
rolb
fwait
aad
leave
call
xchg
pop
push
and
xlat
fbstp
testl
add
push
popf
cli
test
out
ljmp
inc
outsl
sbb
xorl
fisubrs
cmp
and
js
scas
jle
fmuls
or
arpl
add
cltd
cmpsb
dec
cwtl
jo
ja
inc
pusha
movsb
xchg
pop
push
int
cmp
ror
nop
movsl
cmp
inc
loope
fwait
inc
adc
mov
mov
repnz
sub
xchg
cmp
shll
repnz
jb
inc
and
adc
add
not
sub
xor
dec
jb
mov
push
test
lods
push
pop
loope
lret
rorl
sbb
loop
insl
dec
iret
jp
adc
fwait
mov
das
in
movsb
sub
add
pop
scas
mov
movsb
gs
add
mov
sub
adc
lcall
push
dec
sarb
cmp
pop
cltd
stc
cmpsl
or
and
xchg
sub
mov
aas
lcall
and
jns
cmp
xor
or
lods
mov
pusha
pop
lea
inc
test
mov
hlt
xchg
stc
cltd
decb
xlat
jle
rcll
push
jns
mov
ficoml
lcall
fimull
mov
insl
xchg
add
sar
cmp
ret
xor
jae
pusha
scas
fcmovnu
or
mov
push
sub
out
push
xchg
test
ret
lods
jae
fxtract
into
pop
mov
xorb
cmp
push
ror
dec
mov
aas
aas
add
pop
lds
and
push
or
xchg
pop
and
movl
pop
mov
out
sub
and
insb
pusha
sub
push
in
div
rorl
pop
sti
push
int3
pop
insb
xor
into
insl
daa
dec
enter
sbb
pop
sub
pop
cmp
cmp
arpl
movsb
push
sub
fcomps
loope
sub
into
lret
int
sbb
aas
adc
bound
imul
add
dec
sub
xor
ds
mov
inc
and
adc
fcoms
mov
jmp
fcomps
int
add
ud2
cs
and
cwtl
les
cmpsl
std
mov
sbb
cmp
mov
ljmp
loopne
mov
gs
jo
fmuls
movsb
push
fcomps
cli
jns
cmp
rorb
mov
or
jl
ss
push
inc
jne
push
test
inc
mov
dec
sbb
aam
jl
or
lods
std
js
test
out
aaa
addr16
pop
lock
lea
movsl
xorb
out
push
aam
cmp
push
dec
or
std
mov
mov
cwtl
fidivrs
mov
xchg
mov
xchg
cwtl
test
dec
int3
pop
sahf
jge
add
sbb
jmp
stos
cli
push
daa
dec
jne
pusha
loop
inc
cmp
insl
lods
mov
inc
in
push
out
and
dec
add
dec
or
jb
and
add
sbb
rolb
jnp
pusha
pushf
mov
mov
and
lods
notb
clc
cmpsb
ja
repz
gs
cmc
jg
jle
aas
inc
pushf
fisttps
insb
movsb
int
test
adc
mov
insb
cwtl
push
aam
adcb
mov
rorl
pop
call
fcompl
and
pop
fidivrl
leave
test
or
xor
shll
aaa
data16
scas
cmp
xor
dec
test
dec
dec
mov
jp
out
push
pop
xchg
pop
fisubrl
push
mov
mov
xchg
mov
xchg
or
cmp
lret
push
dec
stos
mov
sub
rorl
ja
cmpsl
ja
xchg
dec
shrb
popf
out
jb
push
push
cs
xchg
jb
ror
into
js
mov
shll
fistps
rol
aad
jg
cmp
pop
stc
loopne
fdiv
mov
cmovo
push
push
cmc
clc
cmp
or
mov
jge
lahf
das
mov
outsb
xor
jno
int3
add
xchg
sti
adc
roll
loopne
sub
fisttps
push
add
shrb
mov
imul
add
jge
stos
rcr
sti
push
lea
jns
add
sbb
xlat
jle
test
pusha
sahf
jnp
push
leave
test
cs
in
jp
fnstcw
cld
outsb
adc
adc
into
enter
aam
xchg
or
cwtl
ficomps
cld
sbb
adc
iret
cmp
mov
movb
push
push
xor
fistpl
popf
in
rol
into
sbb
subb
popf
clc
js
pop
aam
cli
call
clc
es
xor
adc
leave
call
pop
push
sub
cmp
push
lods
xor
setb
jmp
repnz
sbb
lea
cmpsb
push
cmc
lds
mov
push
shr
add
outsl
outsb
jno
clc
cld
sahf
inc
pop
bound
out
daa
insb
lret
inc
inc
push
mov
sbb
aam
dec
jo
insb
xchg
xchg
insb
cs
std
add
lods
dec
mov
mov
jns
and
cltd
mov
andb
sarl
cmp
gs
mov
jl
cli
sbb
and
rcrb
inc
push
test
push
add
sbb
fdivr
pop
fcmovnbe
imul
into
xchg
push
dec
lds
sbb
pop
out
push
or
sarb
mov
sti
adcb
ficomps
aas
pop
pop
xchg
cltd
sbb
or
into
orl
ret
cmp
mov
xchg
mov
int
jp
incl
shrl
mov
sbb
inc
loopne
rorl
mov
cmp
fisttps
mov
bound
test
std
ljmp
sti
std
pusha
dec
das
cmpsb
pop
push
out
jmp
imul
lock
dec
call
fistpll
mov
mov
add
push
fldt
mov
pop
pop
shr
jno
popf
into
test
sbb
and
push
outsb
adc
mov
lahf
fcmovnu
jmp
lcall
pop
dec
lret
and
enter
fs
jl
aam
sti
sub
add
scas
imul
pop
push
pop
aam
dec
insl
test
aad
pop
popa
imul
xchg
inc
inc
inc
adcl
push
ljmp
and
out
aad
in
movsl
or
inc
in
test
dec
sub
xor
bound
adc
lahf
mov
data16
into
mov
loopne
or
inc
pop
dec
lock
or
pop
push
push
pop
iret
push
cli
jns
xlat
fs
sbb
add
and
push
leave
jge
mov
fisttpl
shrl
and
repnz
loopne
int3
jnp
jne
sbb
fnstcw
arpl
mov
mov
push
shll
aam
jp
pop
mov
jnp
pop
rcrb
mov
iret
mov
pop
mov
lds
mov
pop
cmp
xchg
inc
bnd
add
nop
jbe
in
loop
pop
in
sbb
lcall
dec
adc
mov
add
repnz
stc
mov
out
ret
pushf
lock
fmull
movsb
dec
loopne
mov
push
mov
ret
jns,pn
pop
ret
sub
sbb
push
scas
sbb
cld
jg
mov
add
aad
cwtl
call
shlb
imul
dec
pop
jns
add
jge
cmp
lret
dec
dec
stc
mov
mov
xchg
outsb
and
adc
imul
insl
jge
lcall
cmp
rorl
xor
mov
leave
int3
pop
cltd
jp
pop
and
pop
test
dec
shrb
push
loope
sub
jo
push
outsb
xchg
fadds
sub
leave
and
xchg
cmpsl
ret
pop
pop
loope
xchg
mov
sbb
call
cld
xor
rorb
shrl
out
sub
outsb
xchg
xlat
jno
inc
in
mov
mov
xor
icebp
lahf
aad
outsb
es
cmp
loope
lods
es
sarb
stos
in
mov
loope
scas
daa
pop
ds
ss
xchg
test
mov
sarb
out
rcll
xchg
ds
in
test
dec
add
test
movsb
inc
and
jb
lock
sbb
inc
xchg
movsb
leave
cli
test
push
into
clc
pop
add
sub
jno
xlat
data16
and
cmpsl
inc
xor
jbe
lds
fistl
pop
inc
lock
addr16
aaa
js
push
xlat
jp
jmp
popl
adc
dec
add
pop
jne
lcall
pusha
inc
and
dec
insl
js
mov
lea
pop
inc
add
mov
arpl
lock
mov
pop
dec
and
sbb
xor
in
mov
orb
rcll
inc
adc
push
sub
dec
or
adc
addr16
insb
inc
xor
into
ss
in
jbe
sbb
inc
push
popa
sub
stc
ret
pusha
cmpsb
xchg
scas
clc
jl
mov
or
inc
xor
sub
cmp
mov
and
jmp
aad
data16
gs
cltd
jno
scas
cmpsb
loope
xor
out
sbb
fwait
xor
fadds
jge
ja
repz
pop
in
xlat
adc
pop
adc
mov
inc
mov
adc
cld
sti
dec
imul
xchg
lahf
inc
mov
push
dec
mov
mov
repnz
add
bound
push
ja
rcll
test
or
rorl
aad
mov
in
push
cmp
fsts
call
push
cmp
icebp
fsubr
jns
test
sub
mov
xchg
rol
daa
push
loop
bound
sbb
push
dec
ficomps
cld
adc
mov
pop
gs
out
out
push
cmp
jmp
fsubrs
lock
fs
dec
lock
mov
adc
fldenv
or
mov
lods
xor
jl
mov
push
int
add
into
push
cs
sub
insl
repz
xor
push
add
nop
cmc
sbb
aaa
jbe
jno
je
loope
pop
scas
sbb
pusha
popf
loopne
push
xchg
adc
or
push
bound
mov
pop
scas
popa
out
mov
clc
adc
or
lds
filds
outsl
inc
ret
inc
inc
and
ss
rorl
mov
rolb
in
push
mov
scas
inc
or
test
mov
cwtl
inc
and
xchg
nop
sbb
push
leave
loop
xor
test
cwtl
push
inc
add
in
fildll
push
xchg
jne
movsl
aad
rol
sahf
push
repz
add
jb
arpl
call
loop
not
dec
scas
jne
and
add
pop
dec
pop
jl
nop
js
adc
inc
sbb
xor
jne
xor
pop
aam
daa
inc
or
jecxz
outsb
loope
out
dec
shl
clc
aaa
enter
rcll
xchg
fs
movsb
adc
loop
adc
rcr
mov
clc
cmp
jne
fldt
inc
leave
ds
fstp
decl
or
sub
jp
jge
xchg
jecxz
es
out
cmp
negl
jecxz
sahf
inc
mov
xor
fldenv
mov
cmp
loopne
jnp
insb
loope
cli
mov
pop
pusha
push
jnp
ret
mov
cmp
mov
cltd
pop
adc
mul
inc
enter
push
cmp
rol
les
pop
mov
jl
or
cmc
cltd
dec
add
adc
rcl
aaa
inc
push
int
mov
loopne
or
and
rcr
rorl
js
mov
add
push
adc
xor
add
mov
js
push
mov
fs
dec
sbb
push
xchg
loopne
jnp
push
xor
in
inc
loopne
pop
ret
or
aas
shlb
adc
pop
insb
ss
jp
jb
data16
loop
push
push
aas
inc
insb
inc
fcmovbe
imul
scas
cmc
dec
dec
sbb
in
inc
nop
mov
inc
loope
loop
lock
dec
call
test
jg
lcall
mov
imul
mull
enter
je
fcmovbe
fldl
mov
xor
ret
xchg
push
jmp
ret
push
push
jne
ret
sahf
in
cmp
shrb
popf
fidivs
cs
adc
sub
pop
rorb
pop
cld
add
push
shll
scas
xchg
jne
inc
insl
jg
icebp
push
fidivrs
mov
loop
push
add
addr16
in
movsl
add
mov
bnd
outsl
fsubrl
mov
mov
mov
jmp
ret
fistl
mov
lcall
push
ss
scas
scas
idiv
adc
dec
mov
into
mov
movsb
dec
shrb
cmp
cmp
sahf
inc
dec
dec
sbb
inc
dec
hlt
rcr
ret
lret
pop
mov
inc
mov
mov
mov
inc
clc
in
and
repnz
cli
mov
add
push
mov
inc
add
fs
cli
je
clc
lods
lret
pop
cwtl
dec
dec
inc
shr
fwait
and
xchg
fadds
clc
repnz
inc
xchg
scas
mov
cmp
fcoms
sbb
lahf
add
imul
ret
xchg
fistpl
sub
xor
fmul
sbb
in
dec
outsb
xlat
loopne
or
in
in
aaa
mov
and
push
or
adc
dec
or
jb
aad
gs
or
push
mov
int3
out
xchg
or
jns
pushf
xchg
xor
bound
shlb
mov
adcb
cmpsl
scas
int3
adc
movsl
mov
inc
mov
ja
mov
fwait
mov
xchg
sbb
push
pop
into
xchg
testb
iret
divl
xlat
fistps
pushl
xchg
shr
adc
bound
nop
cld
lret
arpl
adc
aad
in
inc
test
shlb
ret
inc
cmp
call
arpl
lret
mov
ficomps
aas
xlat
fcmovu
in
es
subb
push
in
sub
lods
movsl
dec
bound
pushf
divb
aas
mov
sub
inc
gs
sti
cmp
jbe
out
aad
clc
repz
mov
sub
loope
sub
push
js
movsl
dec
aas
cld
push
push
sub
bound
call
imul
cmp
rolb
ret
pop
pop
xchg
jb
dec
push
sub
push
mov
sahf
push
or
lcall
nop
es
inc
les
fwait
inc
cmp
inc
jno
fsts
xchg
test
dec
add
adc
sbb
fcmovnbe
mov
enter
loope
in
jp
cld
xor
xor
push
pop
jne
sti
ror
push
fmul
dec
pop
aad
cmp
pop
and
push
mov
shlb
stos
aas
xor
inc
adc
data16
aas
jno
pop
mov
clc
pop
jnp
das
repz
inc
and
lea
rclb
leave
dec
mov
add
call
jl
hlt
jbe
arpl
mov
or
adc
nop
les
mov
jnp
es
push
mov
push
inc
xor
adc
ljmp
fmulp
mov
mov
add
iret
ficompl
ds
add
add
shrb
ret
xchg
adc
pop
inc
loopne
fdivp
cs
inc
push
mov
xor
sub
jmp
jno
inc
pop
or
cli
xchg
mov
aad
xchg
lea
pop
mov
adc
jle
mov
adc
iret
sbb
cltd
push
inc
fucom
orl
sub
test
mov
mov
hlt
jo
enter
or
jb
add
sbb
sub
and
test
shrl
out
ret
aad
popf
out
sub
roll
jae
aad
jmp
dec
shll
sub
jmp
out
pop
pop
cld
mov
jg
fcoml
iret
dec
jmp
out
in
add
jb
sar
or
out
test
push
pop
int
push
hlt
out
or
jp
xor
add
pop
sub
jno
xchg
xchg
insb
lahf
jle
jo
add
cmpsl
fmul
sub
cmp
mov
ljmp
mov
xchg
sbb
jle
add
daa
ret
adc
cmp
mov
dec
lock
je
push
xchg
imul
xchg
jbe
imul
clc
js
test
or
pop
xchg
sub
je
pop
cmpsl
mov
or
or
inc
mov
rcrb
add
stos
ljmp
or
std
or
loop
in
pop
sub
dec
loopne
sbb
pop
into
lret
pop
or
sbb
enter
xchg
repnz
imul
xchg
sahf
loope
pop
or
leave
in
jle
pop
cld
lods
out
mov
sti
movsb
in
xor
or
and
mov
ret
test
bswap
lds
dec
test
xor
mov
and
and
xor
fsubrp
mov
add
add
fs
es
adc
mov
outsl
decb
mov
inc
and
fsub
push
inc
lahf
imul
imul
xchg
pop
scas
push
push
push
sahf
gs
iret
repnz
pop
ficomps
push
rorl
and
pop
aam
adc
add
mov
add
aam
jp
fisubrl
push
jne
inc
cmp
pop
jl
adc
mov
xchg
in
mov
add
xor
aam
pop
push
icebp
arpl
outsl
outsb
dec
loopne
out
fmull
mul
or
cmp
cmp
mov
lds
outsb
scas
xor
add
mov
jg
outsl
subl
adc
push
rorl
xor
jge
subl
and
sbb
or
into
or
repz
cmp
mov
pop
sub
cmp
sbb
es
push
sub
mov
dec
dec
ret
and
push
stos
es
mov
fisubrl
rol
test
clc
push
outsl
js
add
push
fistpll
pop
add
jns
bnd
rcll
jg
jle
mov
mov
xor
arpl
jne
sti
mov
xchg
sbb
sbb
lcall
fildl
movsb
cmc
loop
pop
push
xor
lret
or
repnz
pop
gs
hlt
idivl
or
fldcw
dec
int3
mov
inc
rclb
mov
ss
shrl
cmpsb
sub
fwait
leave
push
repnz
pusha
jno
xchg
icebp
repnz
test
adc
fadd
jno
repnz
cmp
loopne
dec
lock
imul
adc
iret
sbb
dec
addb
das
inc
sub
dec
xor
sbb
loope
gs
pop
inc
cli
sahf
daa
push
xchg
loopne
mov
les
shll
dec
cmp
pop
fmul
rol
xlat
sbb
popf
addr16
mov
aas
mov
loopne
push
das
ljmp
and
icebp
fucomp
mov
xchg
add
xchg
divb
lret
cltd
addl
or
pop
test
push
mov
and
jg
test
out
sbb
mov
inc
and
inc
sub
jmp
dec
outsl
iret
fdivrs
sbb
les
addb
in
fldcw
hlt
xchg
jmp
fistps
mov
cltd
mov
dec
inc
adc
fists
xor
mov
xor
push
push
je
popa
rorb
cmp
pusha
jge
lahf
fsubl
sbb
aad
fistl
xchg
add
cmp
and
mov
dec
push
jae
inc
mov
xchg
inc
add
hlt
js
mov
dec
lret
and
mov
cmp
inc
and
pop
pop
addb
add
adc
sbb
lret
and
movsl
out
and
and
sub
and
es
and
xchg
and
cli
sub
je
jmp
aad
adc
jae
dec
js
stc
fcomps
push
cmpsl
adc
push
sub
cmp
mov
jb
xchg
mov
cltd
aam
pop
out
je
cld
sarb
cmp
cli
cmc
adc
sbb
jecxz
shlb
int3
in
sub
ficoml
mov
subl
inc
xor
inc
jns
mov
and
inc
pop
outsl
or
mov
test
and
fbstp
arpl
mov
pushl
add
mov
xchg
loopne
cmpsl
inc
inc
push
movsl
xor
inc
push
out
fadds
cmp
sub
lds
testl
lret
sbbl
fldl
das
leave
lahf
and
call
xor
popa
rcl
mov
popf
into
mov
ja
sbb
loopne
fs
jl
loop
mov
ljmp
aad
cmc
ja
stos
int3
jb
xlat
inc
add
call
scas
push
xor
push
inc
adc
fcmove
cmpsl
jle
xchg
and
int
adc
cmp
sbb
les
xor
xlat
lret
popf
dec
inc
sbb
or
addr16
addr16
push
mov
mov
push
xor
es
mov
sbb
xor
lcall
cs
ss
mov
and
pop
or
sub
call
cmc
mov
mov
popf
sub
mov
add
jmp
lds
repz
mov
lret
ja
xrelease
fisttpll
clc
and
inc
pop
js
inc
nop
insb
outsl
mov
call
lods
dec
jbe
mov
mov
neg
xor
jmp
cs
iret
test
add
add
pop
cmp
mov
sti
add
dec
sbb
stos
mov
sar
pusha
mov
add
mov
out
xor
jecxz
rcrb
fsubs
push
cli
xchg
pushf
mov
pop
push
jecxz
xchg
fwait
push
cmp
std
pop
xchg
sbb
push
scas
mov
and
fistl
inc
ret
inc
mov
and
rorb
imul
ficomps
test
pop
jo
push
sub
jb
cld
mov
mov
and
popf
ljmp
xor
fdivl
out
or
rclb
imul
repnz
lods
sbb
xor
gs
icebp
mov
int
lret
push
mov
xor
ljmp
lods
clc
sub
pop
testl
dec
xlat
cmpsl
push
ljmp
mov
dec
mov
mov
xchg
xchg
shll
out
int
push
mov
push
rorl
ror
sub
sub
stc
repnz
xor
or
sbb
jo
xor
in
into
fs
cli
stos
and
push
arpl
repnz
mov
loopne
mov
cmpsl
into
or
inc
sub
jb
sbb
dec
movsl
inc
loope
movsl
mov
pop
int
fisubl
sub
jecxz
mov
add
add
test
shl
data16
popf
divl
mov
push
mov
pop
pop
and
inc
jge
dec
or
insb
stos
add
mov
and
cmc
and
subl
not
mov
cmp
insl
sbb
scas
pop
push
lock
add
std
ret
sti
rorl
pop
stos
frstor
pusha
xchg
push
mov
pop
mov
into
or
pop
pop
daa
xchg
cld
cmp
pop
aad
inc
loope
and
mov
fwait
jne
fcoms
mov
filds
aad
aas
loop
mov
loop
lahf
xor
pop
add
add
das
push
loop
push
inc
mov
mov
xorb
adc
pop
test
mov
sbb
fidivs
loopne
xchg
jmp
sub
push
lods
imul
iret
fstpt
mov
jne
cld
fcompl
subl
pop
push
rcll
std
fmull
mov
mov
jg
add
leave
dec
jp
pop
dec
adc
sbb
cmc
mov
cmpsb
jmp
out
mov
dec
int
xor
jge
hlt
ss
jno
adc
pop
out
jnp
cld
test
stos
loop
pop
adc
enter
in
or
js
aad
imul
pop
hlt
loop
mov
mov
test
js
mov
pop
nop
outsb
inc
mov
mov
jg
pop
add
popa
les
mov
adc
ds
xchg
es
pushf
inc
and
shl
and
fisttpl
or
mov
push
xchg
cmp
and
mov
pop
std
rolb
ja
push
push
add
and
repnz
add
into
pop
jl
cmp
jmp
or
repz
push
inc
adc
jge
imul
out
xor
jne
push
mov
mov
sub
mov
sub
js
in
xor
cs
mov
daa
andl
pop
mov
ja
xor
add
dec
sub
nop
mov
sub
cmp
xor
inc
xor
dec
xchg
roll
sub
sarb
clc
cmpsl
decb
aam
clc
subb
repnz
jecxz
mov
inc
adcb
lock
ja
lcall
shlb
jle
and
adc
mov
mov
daa
inc
pushf
jl
orl
jb
popa
clc
pop
gs
and
in
cli
or
mov
das
add
ds
mov
movsl
jge
inc
nop
std
adc
xor
shlb
jno
aad
dec
mov
fisubs
jb
andb
scas
pop
fisttpl
data16
daa
inc
out
movsb
in
fsincos
ljmp
pop
pop
cmpb
mov
arpl
jmp
jno
mov
popa
xchg
repnz
ret
cmp
mov
fcomi
shl
inc
inc
mov
jns
mov
ret
inc
popf
pop
mov
imulb
and
and
imulb
cmp
adc
fsts
fidivl
test
pop
rolb
push
dec
mov
jne
aas
jo
insb
out
shll
mov
and
rol
mov
lea
shll
xor
pushf
fs
inc
inc
adc
inc
aad
movsl
movsl
stos
mov
inc
push
inc
jns
or
scas
subb
push
xor
dec
mov
cmp
in
in
push
shl
xchg
pop
add
add
dec
cmpsl
or
fldl2e
sub
ds
movsl
fwait
test
in
enter
lock
or
mov
outsb
or
sbb
jecxz
inc
adc
arpl
xchg
push
fiaddl
fidivrs
mov
popa
loop
lods
ret
dec
shr
sbbb
add
inc
mov
xor
dec
xor
mov
aad
jge
mov
jp
push
cmpsl
mov
adc
jmp
imul
xchg
rcll
int3
popl
cmp
test
fistl
stos
test
pop
xchg
into
jnp
xchg
int3
jo
dec
test
sub
notl
cli
pop
leave
adcb
outsb
push
xor
scas
sbb
jnp
in
addl
enter
sbb
add
sahf
pop
or
les
sbb
fs
jne
inc
push
popa
and
in
inc
cmpsl
sbb
inc
xor
mov
jge
dec
loopne
inc
rorb
sub
xchg
stc
sbb
xor
inc
jg
out
sbb
cmpsl
xlat
mov
jge
mov
xchg
sbb
fisubl
loopne
mov
push
mov
out
inc
fcom
scas
ja
test
pushf
xor
and
fs
pop
pop
jge
jnp
add
inc
loopne
aas
mov
inc
xor
arpl
repz
mov
dec
fcmovb
push
stc
movsb
leave
outsb
or
scas
cmp
cmp
rcll
pop
dec
push
decb
sbb
mov
jp
xor
movsb
out
dec
cmp
cwtl
and
push
bound
std
faddl
lods
leave
mov
out
aaa
jo
iret
out
outsb
mov
aam
xorb
mov
rcrb
adcb
inc
jo
repnz
int3
dec
xchg
jp
xchg
jg
xor
fcomps
pop
add
inc
lock
es
adc
inc
ret
cld
fimull
dec
or
xor
cmp
cmp
outsb
mov
pop
inc
hlt
mov
ljmp
xchg
and
mov
mov
in
lcall
lahf
cmp
addr16
pop
ret
adc
lcall
popa
pop
mov
shrb
mov
lret
dec
ss
dec
or
push
fildl
out
xor
out
fidivrs
inc
testb
rcrw
call
mov
push
aad
inc
in
or
repnz
int3
testb
xchg
adc
inc
and
jae
add
mov
hlt
add
subb
ficompl
mov
pop
repnz
dec
cmpb
popf
cmp
push
out
pop
and
fidivl
push
mov
add
jo
aas
outsl
sbb
out
shlb
add
jl
in
hlt
cld
mov
fneni(8087
lcall
mov
cli
sbb
pop
test
mov
inc
ficoml
jae
loop
push
dec
and
cmp
xchg
pop
into
nop
and
pop
xchg
cwtd
cmc
je
out
les
mov
or
inc
inc
mov
jo
and
pop
add
pop
lahf
int
sub
loope
scas
sbb
jnp
mov
ss
or
fisttpl
pop
lds
add
cmc
stos
sbb
loope
pop
addr16
cltd
jae
insl
mov
jo
fs
pushf
je
scas
leave
push
push
cmp
pop
fldcw
sub
jb
fidivrl
mov
leave
dec
sub
adc
je
jns
ret
sub
aad
dec
mov
sti
sub
nop
fwait
add
lods
test
loopne
mov
mov
push
mov
rcrb
jle
pop
call
orb
jle
jecxz
idivb
xchg
int
sbb
gs
pop
sti
test
sti
test
cmpsb
fisubl
mov
lods
test
fsubr
jo
scas
sub
inc
data16
cmp
sbb
sub
jns
je
fldl
cmp
xor
push
ss
fistpl
test
idivl
pop
popf
sahf
cmpsb
aad
int
out
and
fisttpll
int
mov
rorb
std
fiadds
sub
rorl
lds
adcb
add
in
cltd
ficompl
push
dec
dec
filds
repz
pminsw
das
pop
xor
ret
adc
adc
outsb
loopne
pop
lar
ficoml
mov
cmp
lods
into
js
add
ljmp
loope
mov
mov
xchg
push
pop
not
and
pop
test
icebp
sbb
inc
sbb
or
gs
lahf
mov
cmp
or
negl
enter
stos
movsb
pop
inc
fs
or
push
fmuls
icebp
ljmp
mov
mov
aas
sub
out
hlt
mov
push
fnstsw
dec
inc
add
in
insl
or
add
mov
dec
inc
outsb
jo
sbb
push
jg
push
xchg
jne
iret
outsb
mov
aas
or
add
clc
cmp
mov
aad
or
add
sub
push
inc
or
ss
stos
xchg
lods
or
or
push
dec
inc
push
cmp
adc
mov
fdivrs
int3
lods
outsl
add
adc
out
in
ret
jmp
mov
aam
xlat
pop
stos
shll
filds
fiaddl
jo
loopne
mov
ds
jp
ret
pop
mov
int
mov
sbb
xor
xchg
in
ljmp
or
pop
inc
es
adc
clc
lock
or
ss
mov
lock
daa
nop
lods
ret
test
or
cmpb
jge
arpl
xor
test
jbe
sub
pop
mov
inc
nop
lcall
fsts
push
and
or
xlat
sub
shll
jo
out
xchg
pop
pop
ljmp
fiaddl
rclb
repz
dec
fmul
xor
dec
mov
je
out
inc
and
jmp
int
andb
jge
inc
cmp
in
xor
gs
cmp
dec
and
mov
or
mov
jb
mov
dec
cmc
cmp
xchg
cld
mov
xchg
pusha
loop
gs
out
mov
sti
mul
mov
into
lret
cli
adc
das
rolb
adc
jb
fnstenv
adc
out
sbb
add
jecxz
sahf
xchg
mov
push
cmp
repz
mov
testb
stc
push
fisttpll
xchg
mov
dec
loopne
jecxz
sbb
or
cs
addr16
bound
rclb
add
into
push
inc
dec
add
fstpt
aad
hlt
xor
jp
ja
cli
mov
sub
cmc
lock
adc
cs
mov
push
pop
inc
mov
dec
ret
jecxz
stc
mov
ficompl
mov
ror
movsb
sti
add
aas
repnz
or
faddl
outsl
mov
pusha
and
adc
rorl
sbb
and
dec
loope
or
xlat
mov
out
rcrl
scas
divb
cmc
shr
shr
and
popa
fnsave
aas
inc
repz
mov
cmpl
cli
aam
or
icebp
js
popa
mov
ret
inc
jg
out
xlat
jb
xchg
dec
inc
inc
and
dec
cmp
jecxz
loopne
addr16
add
push
lea
clc
fstpt
subl
scas
pop
sub
push
out
mov
mov
leave
ret
rclb
repz
mov
mov
add
add
jb
xchg
jno
sub
bnd
addr16
xor
je
je
sahf
gs
fbstp
xorl
mov
add
mov
or
cmc
repz
push
sub
stos
pop
xor
out
shl
jno
jns
xlat
xchg
loope
push
or
push
pop
jp
lods
std
enter
and
xor
mov
sub
cmpsb
xor
jbe
gs
stos
cmp
mov
pop
lock
cld
xchg
push
add
loope
adc
test
cmp
aas
mov
inc
mov
loopne
aad
in
dec
jmp
mov
fwait
jns
push
sbb
popf
outsb
or
push
fiadds
xchg
jne
jno
lods
inc
ret
lret
cmp
ror
outsl
cs
cmc
icebp
not
mov
mov
xchg
out
mov
aas
pop
out
jbe
call
repz
mov
iret
cli
ss
leave
push
adc
cmp
stos
jno
sub
ret
xchg
in
lret
sti
cmp
fsubl
in
nop
rolb
cmp
mov
rol
pusha
dec
fisttpll
sbb
stos
push
pop
pusha
fstp
jmp
push
testl
inc
aas
and
dec
sbbb
mov
fmuls
dec
je
inc
in
sub
inc
loope
icebp
push
test
push
adc
sahf
insl
jmp
inc
inc
pop
aam
inc
aam
add
inc
add
data16
mov
pop
and
mov
loope
out
mov
jmp
fcoms
add
ss
fbld
jae
sbb
outsl
inc
lcall
adc
fmuls
xor
das
mov
cs
cmp
add
ret
or
ret
outsb
mov
push
nop
adc
dec
cld
add
and
je
lds
cmp
adc
test
adc
out
sarl
cmp
cmp
aas
dec
sbb
addr16
rcl
jns
shll
fmull
push
inc
cmp
push
mov
fs
mov
daa
mov
in
push
sbb
sahf
dec
dec
decl
ret
xor
cmpsl
push
xchg
arpl
loopne
aad
jb
mov
fcoml
mov
or
add
inc
rorl
lret
movb
and
les
fnstsw
loop
or
jg
sbb
push
loop
cmc
mov
es
fdivr
xchg
cmpsb
sub
aas
sarb
in
mov
xchg
mov
int3
mov
and
cmp
rorl
repnz
lea
out
out
sbb
scas
jo
and
push
call
pop
add
pusha
xchg
shl
sbb
std
xor
jb
insb
mov
adc
sub
into
and
loop
xor
or
mov
das
adc
cmp
hlt
mov
neg
xchg
mov
jbe
ficomps
pushf
mov
inc
rcrl
imul
inc
addr16
test
add
shll
adc
out
jg
pop
adc
dec
inc
cmp
sti
cmc
fimull
mov
sub
add
adc
add
dec
loop
outsl
cmpsl
jge
out
lds
pop
pop
pop
mov
push
lods
push
daa
mov
cmp
or
jp
outsb
rolb
aam
std
outsb
pushf
shlb
push
jecxz
test
xchg
or
cli
dec
add
inc
orb
jae
mov
cmp
inc
in
inc
mov
sbb
icebp
sbb
dec
inc
ds
jo
and
rcl
mov
repnz
inc
sbb
xor
imul
je
add
mov
sti
icebp
mov
mov
insb
pop
jno
fcomps
mov
scas
int
mov
sub
or
in
push
sbb
addr16
dec
rorb
add
mov
imul
or
std
push
fwait
mov
dec
xor
jle
inc
lock
out
cld
imul
out
cwtl
fsubrl
call
dec
xchg
or
add
push
jo
fstps
test
lds
lds
inc
adc
adc
sbb
out
pusha
mov
lret
leave
push
call
sbb
or
incb
and
inc
sar
push
cli
mov
adc
cmp
cmp
imul
je
dec
jnp
lock
aas
mov
sub
jmp
dec
push
roll
mov
add
jne
inc
pusha
into
sbb
jns
jmp
je
sub
stc
cmpb
int3
cmp
or
cmpsb
pusha
pop
xlat
and
push
and
add
mov
cli
push
shlb
inc
inc
jecxz
fildl
int
mov
mov
das
jmp
add
ja
dec
mov
repnz
ficomps
add
sub
test
xchg
cwtl
sti
pop
sub
or
lods
in
mov
outsl
sti
inc
jg
ror
lcall
jno
pusha
loope
jo
incl
and
and
scas
dec
pop
aam
jge
push
scas
lds
cmp
sub
mov
xchg
mov
aam
push
in
push
and
lods
xor
or
add
xchg
loopne
push
xor
and
fwait
mov
jmp
fld
mov
pop
test
dec
cmpsl
inc
movsb
loopne
push
aad
sti
xchg
lock
lods
stos
dec
shll
out
fisubl
jecxz
inc
push
sti
inc
and
jno
inc
enter
dec
pop
jecxz
cmp
sub
mov
push
int
bound
push
pop
decb
sbbl
fisttpl
adc
inc
inc
shlb
pop
xor
inc
outsb
test
lods
add
ds
rorl
lock
xchg
jne
fcoms
dec
adc
cmpsl
lock
fnsave
push
and
pop
movsb
mov
je
fistl
jmp
stos
dec
push
jbe
arpl
sub
notl
fsub
cmp
mov
lret
in
inc
filds
pop
sti
mov
mov
inc
loop
add
push
adc
jns
lcall
add
popa
inc
std
std
fcmovu
pop
or
es
push
adc
jp
dec
ficomps
shlb
push
mov
jne
cmp
xlat
pop
mov
incb
test
idivl
mov
fisttpl
sub
xor
mov
loopne
ss
leave
inc
jge
pop
sbb
cmp
mov
lret
out
pop
dec
frstor
jle
repnz
add
stc
or
into
mov
data16
movsl
push
jo
test
sub
mov
adc
shll
cli
xchg
bnd
popf
cli
jns
sahf
inc
iret
jae
adc
repnz
mov
mov
in
ficoml
nop
dec
inc
inc
imul
stos
enter
insb
add
popl
push
enter
push
mov
and
jo
cld
lods
adc
adc
jp
push
insl
or
cmp
loope
mov
push
movsb
aad
pop
inc
dec
popf
xor
inc
hlt
pop
lods
xlat
and
jg
inc
rclb
mov
jp
outsl
loope
divb
in
jecxz
mov
mov
or
imul
roll
mov
sbbb
sub
push
imul
repnz
roll
outsb
jp
cli
dec
cmpsl
pop
test
xchg
jle
test
sbb
imul
repz
ret
sbb
inc
and
add
cltd
jno
xchg
adc
sub
pop
inc
push
aam
ja
sahf
dec
ret
stos
pop
push
push
jne
insl
rcrl
ljmp
push
mov
inc
pop
push
mov
inc
iret
xor
push
lods
jo
lods
inc
inc
clc
dec
nop
jb
pop
cmp
pop
pop
inc
dec
add
je
test
aas
fmulp
aaa
xchg
mov
stc
sar
adc
ds
or
jl
push
loopne
sahf
idiv
jge
sub
out
inc
gs
xchg
clc
mov
fcmove
mov
xor
dec
xor
pop
ljmp
js
sbb
jno
rcl
push
mov
cmc
pushf
inc
inc
stc
jb
pushf
mov
je
into
lea
das
test
sbb
push
mov
or
sbb
andl
sub
aad
es
mov
or
add
jno
xchg
inc
adc
dec
fisubrl
pop
push
js
shlb
lret
loope
jge
ret
movsl
fstpl
jne
sbbb
mov
xor
int
xor
jns
fdivl
and
push
addr16
enter
clc
loope
mov
dec
or
jnp
add
fdivrl
push
aam
push
xor
xor
jae
cmp
cs
in
aad
clc
test
mov
jno
mov
fnsave
and
shlb
decb
out
cld
mulb
xchg
aas
jo
xchg
jae
sbb
test
jne
cmp
jb
jbe
add
fmul
xlat
shll
call
movb
adc
mov
cmpsl
insl
dec
jns
testl
xchg
pop
dec
jmp
aad
mov
pop
addb
ljmp
ror
add
lock
push
mov
dec
ds
and
loope
int3
imul
sub
mov
out
pop
push
jno
mov
push
dec
cs
add
fwait
inc
push
push
jne
dec
cs
dec
orl
mov
and
mov
add
nop
dec
add
out
call
shrb
mov
stc
movsl
xchg
mov
out
ret
cld
push
repz
mov
push
mov
std
jg
loopne
aaa
cmp
inc
jne
lods
cld
out
dec
and
sub
cmp
cmp
inc
dec
cmpsl
xor
pop
repz
mov
pop
js
lods
cmpsl
mov
push
jbe
js
ss
test
lods
out
int3
add
dec
pushf
clc
pop
pop
int
cld
cmp
cmp
cmp
mov
add
xchg
jmp
dec
iret
jns
fidivrs
add
stc
call
fildl
mov
mov
addb
pop
sahf
fidivrl
inc
jge
addr16
mov
inc
mov
mov
inc
mov
ljmp
dec
dec
push
sti
mov
movsl
xlat
cmp
cmp
lret
cmpl
and
mov
add
popa
xchg
popa
push
and
mov
popf
add
inc
int
xchg
outsb
dec
clc
add
mulb
cs
notb
xor
arpl
xchg
fmull
jecxz
sahf
pop
push
incb
test
mov
int
sti
mov
orb
mov
rcr
lret
imul
pop
inc
xor
xchg
cld
jns
cltd
jp
imul
cmp
loope
repz
push
push
outsb
mov
mov
push
nop
mov
clc
inc
imul
sbb
sub
xor
push
adc
repnz
aam
das
cmp
pop
repnz
std
movsl
dec
or
fadd
and
test
adc
adc
in
out
mov
fistl
and
shll
push
inc
lea
inc
add
dec
xchg
stc
mov
fsubrs
in
mov
inc
pop
lods
dec
mov
adc
push
push
sbb
and
bound
out
xor
dec
cli
mov
lcall
shlb
mov
push
lds
xor
inc
mov
mov
add
sub
mov
mov
in
decl
pop
pop
xor
shlb
push
or
inc
inc
inc
rolb
and
push
or
aaa
pop
inc
orb
enter
mov
jp
popa
sub
jb
loop
lods
xchg
pop
jl
clc
andl
shlb
enter
mov
cmpsl
fldt
push
je
add
jno
dec
loopne
hlt
outsb
outsl
lods
sub
leave
scas
fistl
jae
test
iret
pop
out
pop
push
jle
imulb
sti
jb
push
and
add
outsb
cld
dec
mulb
push
loop
fstpt
cmp
mov
aas
push
mov
cli
fabs
loopne
fbld
movsl
lret
dec
mov
xchg
movsb
sahf
inc
sub
aad
and
fnstsw
jp
cmc
xor
cwtl
adc
rep
xlat
mov
mov
fcomp
xor
sbb
pop
cmp
jbe
mov
push
add
mov
cwtl
push
clc
mov
pusha
jae
xlat
out
fisubrl
inc
ds
lret
pop
add
sub
xchg
mov
mov
push
push
aad
popf
sub
mov
mov
pop
pop
xor
sub
flds
loopne
xchg
cltd
rcr
call
and
shrl
scas
pop
out
cmpsl
lret
lahf
std
push
add
ror
outsl
push
xchg
or
bound
xchg
mov
sbb
adcb
ja
bnd
adc
push
push
push
dec
push
out
add
push
jl
fdivr
pop
ljmp
notb
loopne
dec
sti
adc
icebp
scas
mov
clc
mov
popa
fcmovb
jp
push
rolb
mov
lret
mov
adc
cmp
repz
or
mov
bnd
in
dec
jno
cmp
cli
xor
adc
loop
ret
test
cmp
adc
testl
insl
or
add
dec
mov
stos
shll
out
mov
scas
dec
mov
inc
mov
shlb
fsubr
xchg
mov
add
cmpsb
icebp
fsubr
rorl
sbb
in
pop
fsubr
sub
xor
add
and
sbb
ficoms
dec
aaa
inc
or
repz
xor
mov
inc
sub
or
femms
movsb
mov
adc
loop
pop
inc
lods
mov
mov
cli
andb
aad
push
push
fsubp
neg
cmp
dec
imul
imul
dec
mov
aas
xchg
fiadds
push
xchg
sub
xchg
dec
aad
cs
and
or
cmp
pop
jl
fs
dec
xchg
fisubl
adc
mov
test
std
sbb
fisttpll
inc
jb
cmp
dec
add
dec
pop
and
jb
pop
rol
mov
inc
mov
enter
add
shl
aam
data16
iret
xchg
js
test
jmp
mov
push
sub
adc
fmuls
fsqrt
mov
in
cld
insl
jle
xlat
clc
clc
and
mov
cmp
les
inc
adc
jge
out
add
xchg
mov
test
pusha
jne
jb
and
lock
imulb
popf
sbb
mov
ljmp
mov
jnp
dec
pusha
mov
ljmp
into
mov
scas
sbb
in
sub
sbb
repz
mov
testb
std
lcall
aas
lock
mov
xchg
into
loopne
pop
sarl
sbb
add
jno
inc
pop
xor
add
or
mov
sti
pop
inc
mov
shlb
xor
cmp
aas
mov
movsb
pusha
dec
pop
dec
push
pusha
add
lods
mov
rolb
adc
adc
jmp
pop
out
aaa
mov
stc
stc
nop
out
xor
fcmovbe
das
jo
aaa
inc
push
fsubs
cmpl
xchg
cmp
repnz
xor
scas
push
shl
xor
mov
and
inc
cmpsl
add
mov
inc
sub
push
inc
inc
insl
push
cmp
mov
mov
xlat
pop
and
int3
push
push
lods
mov
movsl
lock
bound
andb
rolb
cmp
and
bnd
adc
incb
clc
mov
cli
adc
dec
lahf
add
fs
dec
jno
cmp
inc
xor
cmp
test
jnp
fidivrl
lret
out
push
sbb
in
into
inc
imul
dec
roll
and
mov
in
adc
mov
mov
loopne
popf
inc
andl
mov
jbe
pop
mov
add
popa
mov
sub
mov
fs
insl
pop
mov
dec
pusha
sarb
cmc
scas
ss
fldt
aad
ss
xorb
fs
pop
push
loope
aad
or
pop
ret
ret
shrb
in
dec
ja
lods
sub
idivb
jge
jns
or
lahf
pop
roll
ss
sti
xchg
fsub
or
cmpsb
jnp
mov
add
push
xchg
ret
fstpl
xor
scas
push
push
add
arpl
shrb
jbe
jbe
and
push
mov
loop
push
clc
or
shlb
sbb
pop
and
pushf
stos
cmpsl
aad
mov
or
int3
fiadds
rorb
fcmovbe
in
sbb
push
popf
incb
sbb
push
mov
lcall
subb
ljmp
loop
cmp
add
jns
sar
sbb
mov
add
js
ljmp
sub
dec
leave
dec
or
ficomps
mov
cmpsb
inc
add
or
sbb
lcall
mov
pusha
rcll
and
cltd
jl
push
adc
mov
xchg
fstpt
aam
pop
int
mov
call
rcl
pop
lret
jl
aas
sahf
fwait
popa
inc
pusha
aam
xchg
insl
ja
adc
pop
jno
into
push
mov
addr16
jecxz
shll
fadd
loope
mov
call
cmp
add
cltd
lcall
icebp
pusha
cmc
ds
xchg
test
mulb
adc
cmpsl
sbb
outsb
incb
test
xlat
inc
cmp
mov
shll
cmpsb
imul
fisubl
jl
lret
pop
jp
xor
outsb
out
insb
jo
inc
sbbb
sbb
jb
push
jmp
in
cmp
sub
popf
push
outsb
mov
or
sbb
idivb
adc
hlt
adc
inc
fdivl
mov
adc
cmp
sub
cwtl
dec
ds
inc
pusha
inc
sbb
cmpsl
mov
add
rcl
pop
aad
inc
fisttpll
bound
sub
add
popf
loope
mov
ds
out
pop
popf
or
xlat
faddl
xor
push
xor
pop
cli
movsl
mov
jp
or
into
das
aas
femms
inc
loopne
sub
sbb
fsts
dec
adc
out
lock
scas
xchg
adc
mov
enter
hlt
mov
inc
in
jno
sbb
test
outsb
xlat
add
std
out
daa
dec
add
je
push
add
and
cmp
shr
pushf
lea
xorl
lds
shll
jge
aam
push
ret
addr16
leave
fcoml
xchg
ljmp
popf
ljmp
jle
add
xor
sub
cli
pop
mov
jnp
cmp
inc
rolb
jbe
aaa
push
mov
andb
xor
cmp
add
or
loop
mov
xchg
inc
fidivrl
jmp
jmp
pop
daa
add
inc
mov
aaa
scas
jae
loope
icebp
xor
xor
int
adc
inc
das
outsl
sysenter
and
int3
cmpsl
inc
mov
sarl
cltd
ret
sbb
add
mov
mov
add
repnz
cmp
adc
fcomp
repnz
repnz
aaa
dec
cmp
sti
adcl
sub
fimull
inc
push
test
stos
xor
sbb
dec
sbb
fistl
push
or
fldl
xor
idivl
loop
adc
fistpl
insb
jge
mov
dec
jp
adc
cmp
cmpsb
xor
adc
shrb
pop
xchg
push
pop
int
jmp
cs
paddw
mov
inc
dec
andb
dec
ja
jnp
ret
into
out
fucomp
and
enter
mov
clc
fwait
ss
dec
add
addr16
stos
add
bound
mov
inc
rcll
ficoms
loope
mov
orb
push
xor
aas
iret
add
ja
xor
fistpll
sbb
mov
mov
std
push
jp
jne
push
dec
fistpl
mov
mov
push
jmp
lds
push
sbb
jp
cmc
rcr
mov
dec
fldcw
ljmp
cmp
in
rorb
xlat
lcall
mov
add
out
dec
mov
cli
ds
jo
into
inc
pop
pop
xchg
out
add
test
iret
push
lods
out
xor
push
mov
mov
dec
lods
aad
jmp
lahf
pop
loopne
xchg
out
rcl
add
or
jmp
cmp
or
push
xchg
fwait
cmp
in
in
iret
lret
jle
jmp
insl
mov
inc
mov
repnz
fiaddl
in
fwait
mov
add
jp
sbb
ss
dec
push
jl
icebp
outsb
pop
jno
cld
push
stos
xor
popf
jp
and
popa
lret
out
add
fs
pop
add
stos
push
cs
shrb
loope
popa
and
xchg
lret
inc
push
xor
inc
mov
xchg
xor
push
ret
fwait
stc
mov
push
pop
out
sarl
fsubrs
inc
xor
lds
lock
pusha
setge
ret
mov
cs
pop
jbe
inc
cld
push
jns
dec
xchg
sbb
xor
adc
mov
test
mov
add
xor
loope
aas
inc
mov
loopne
fs
std
pop
add
decl
cmp
jl
mov
ljmp
mov
sub
mov
adc
insb
xor
xor
bound
cmp
sahf
dec
int3
mov
pop
out
sub
popa
pop
clc
inc
fsts
push
repnz
or
sbb
aam
nop
addr16
xor
fdivs
ljmp
jns
mov
inc
cs
cwtl
in
outsb
adcl
movb
out
cmpsl
loope
mov
cmp
mov
daa
jp
jne
inc
and
xor
ja
loope
cmp
test
xchg
sub
lcall
pop
cli
push
test
jecxz
cmpb
xor
cltd
aam
pushf
or
cld
subl
push
dec
inc
add
enter
cmp
sbb
push
mov
add
fmull
ja
faddp
jge
xor
pop
push
inc
add
ss
mov
add
inc
cs
rcrl
test
xchg
inc
arpl
push
adc
jae
out
mov
xor
jno
add
mov
pushl
lret
mov
gs
xchg
mov
aas
and
aam
es
js
and
rcrl
icebp
leave
mov
cmp
mov
ss
pusha
mov
adc
pop
pop
into
ficompl
in
adc
in
inc
inc
fidivrl
jmp
adc
and
dec
xorb
out
int3
fdivr
dec
insl
mov
fwait
sbb
and
aam
xor
and
sbb
rorl
inc
mov
mov
sbb
bound
mov
or
ret
jnp
aad
cli
int3
scas
xor
pusha
ficomps
xchg
ret
imul
stc
mov
test
add
icebp
xorl
add
xchg
add
ror
xor
loope
pop
mov
cmpsl
xchg
jg
mov
lock
les
xchg
aad
adc
jb
sbb
loope
shl
fidivs
cmp
dec
xchg
add
into
cltd
add
and
sbb
push
lret
sub
inc
pusha
insb
jmp
mov
push
push
fists
jl
pop
ds
adc
xor
push
xchg
loope
or
xlat
sbb
sarb
iret
sub
fistps
cmc
cli
cmpsl
cmpsb
mov
sahf
push
incb
dec
sbb
das
adc
fisubs
mov
loop
stc
incb
pop
cbtw
or
ficoml
loope
push
sbb
repnz
add
popa
lds
sub
popf
dec
and
sbb
ljmp
aas
test
inc
adc
in
sub
sbb
sub
xor
xor
movsb
adc
dec
push
push
ss
jge
testb
movsl
icebp
stos
ds
scas
cwtl
jmp
mov
xchg
push
fs
xchg
aam
add
cs
dec
insb
mov
inc
sub
fnstsw
sbb
scas
dec
ret
inc
xor
das
dec
jl
push
mov
sbb
outsb
push
shll
aam
testb
fsubl
xor
sarl
sti
lret
lcall
cmp
popa
aam
cmp
mov
mov
pop
imull
fdivr
lcall
cmc
ds
inc
add
pop
push
lret
mov
jo
xchg
mov
rorl
in
sub
stos
fsubs
into
subb
pop
jge
lret
push
inc
xchg
movsl
loopne
add
fdivrl
loopne
sub
int3
jge
mov
mov
mov
fdiv
fsubr
dec
movb
push
jecxz
and
hlt
ror
jle
pop
lock
pop
fistpll
test
lods
cmp
and
fildl
outsb
lret
lahf
pop
std
into
popa
fmull
cs
mov
pop
add
sub
iret
iret
dec
xchg
rcrl
lock
std
mov
inc
in
mov
ja
leave
jp
ljmp
daa
ja
sbb
jne
adc
sti
mov
xor
icebp
out
out
pop
jp
xchg
rcll
icebp
or
mov
adc
repz
sbb
daa
pusha
cmp
sbb
out
inc
fimull
lret
jo
popf
mov
cmp
lds
add
mov
jp
xchg
popa
loopne
mov
pop
movq
xchg
inc
clc
cld
mov
push
mov
rcrl
dec
jns
gs
inc
loopne
outsl
adc
pop
js
or
test
filds
ljmp
dec
push
xor
mov
in
cwtl
adc
xchg
dec
cmp
jae
jne
test
mov
jge
shl
xor
adc
pop
inc
or
sub
pop
int3
fisubl
dec
rolb
push
jnp
test
jp
fucomp
inc
mov
mov
and
incl
cmovl
inc
mov
aam
hlt
int
and
or
inc
pop
push
xchg
into
pushf
sahf
fistpl
icebp
cmp
jle
add
or
and
mov
loope
push
sub
out
xchg
dec
dec
std
sub
sub
push
stc
pop
ja
sub
cmp
out
loop
in
mov
fs
cmp
xchg
in
jno
cltd
mov
push
xor
mov
loope
and
scas
in
insb
stos
mov
aad
lahf
shrb
hlt
mov
inc
pop
std
leave
mov
push
loop
jmp
std
aam
out
pop
mov
into
push
pop
add
cmp
lea
je,pn
je
loopne
jo
jbe
jb
in
cmp
cwtl
lods
adc
popa
daa
rcll
or
fnstcw
push
pop
adc
mov
mov
or
test
ds
lock
and
cmp
push
inc
inc
push
inc
sbb
cmp
and
cld
or
aad
ret
out
pop
xchg
pushf
dec
xor
and
mov
cwtl
hlt
es
pusha
dec
jns
pop
push
push
out
push
pop
cwtl
loopne
jns
call
mov
cltd
mov
aam
push
cmc
mov
sbb
fcmovu
stc
jb
or
dec
mov
sub
scas
mov
inc
shrl
cmp
filds
inc
jbe
mov
pop
scas
mov
jp
scas
adc
dec
adc
pop
lret
into
stc
jl
pushf
xor
popf
rcrb
mov
sub
std
xchg
cmp
mov
dec
sahf
ror
test
adc
mov
push
cmc
sbb
sbb
js
add
mov
fwait
jge
cmp
push
push
in
cmpsl
cs
mov
xlat
loop
mov
cmp
gs
daa
push
push
mov
in
add
gs
aam
sbb
out
nop
xor
cmp
mov
xchg
xchg
cmp
imul
lds
dec
call
adc
push
jae
outsb
jmp
stc
fisubs
jge
fcmovnu
mov
push
push
add
mov
popa
push
in
fldl
sub
or
retw
lea
leave
inc
loopne
jae
je
ret
mov
insl
jecxz
testb
sbb
rorl
rorl
xor
cld
xor
jmp
xchg
mov
inc
aam
fucomp
and
lods
in
dec
scas
cmp
fs
loop
test
call
sarl
push
push
outsb
pop
movsl
cs
movsb
xchg
ds
add
and
inc
in
dec
fdivrs
rcr
iret
jns
jo
mov
lods
adc
rcll
shrl
es
inc
loopne
clc
popf
out
inc
push
loopne
cld
icebp
add
add
push
pop
xlat
test
push
repz
and
inc
lahf
inc
xchg
jno
xchg
scas
shll
std
lahf
dec
jl
and
sarb
xlat
jl
int
pop
and
xor
mov
mov
pusha
sub
xor
inc
mov
mov
adc
mov
fldenv
pop
es
xchg
cmp
nop
jno
jge,pt
xor
mov
pusha
xchg
inc
inc
add
cmp
pusha
in
faddl
xchg
mov
aad
lods
or
lret
pop
mov
pop
mov
sbb
inc
jne
xlat
jp
clc
orl
mov
inc
shl
rcl
sbb
jb
push
xchg
leave
xor
lods
jo
adc
fiadds
ds
cli
stos
in
sbb
fadds
jmp
fiaddl
xchg
sub
lods
ret
movsl
dec
or
cld
in
and
jge
jl
push
ret
out
aad
stos
mov
add
mov
push
inc
cld
into
mov
or
add
mov
xchg
nop
mov
js
out
das
inc
xor
cltd
add
xchg
lods
inc
sarb
outsl
add
adc
stc
mov
push
movb
and
push
cwtl
xchg
xlat
inc
adc
sbbb
fistpl
insl
imul
pop
in
ret
aaa
icebp
fisubrl
add
inc
sarb
loope
xchg
aaa
jne
sbb
ds
sahf
out
cmc
decl
enter
in
mov
dec
js
adc
add
ficompl
out
out
inc
adc
popf
insb
test
pusha
xlat
subb
scas
or
adc
andl
pop
imul
jae
mov
dec
test
add
sub
fcomps
dec
cmp
jae
test
inc
std
push
push
sub
ret
dec
dec
adc
xlat
pop
js
leave
adc
cld
push
addr16
mov
sbb
enter
mul
cmp
adc
aas
data16
shr
mov
in
ficoms
fdivrl
das
add
call
pop
jle
dec
add
add
and
rcrb
cli
sbb
inc
mov
outsl
stos
aaa
out
jb
or
add
xor
xchg
jmp
hlt
subb
lahf
push
mov
jno
push
aad
sbb
imul
mov
movsl
sub
scas
inc
push
fcmovu
xlat
cmp
insl
or
sub
jg
lock
inc
test
mov
jbe
lock
adc
dec
dec
je
pop
pop
sti
pop
cli
sub
add
lds
jmp
stos
cmp
rcrl
dec
fcmovu
cmp
mov
cs
js
sub
xchg
adc
inc
mov
test
out
jb
cld
shll
iret
iret
mov
pusha
pop
dec
inc
push
and
nop
decb
frstor
test
fsubrp
mov
inc
stos
ret
adc
and
lods
jl
fcmovb
test
or
loope
outsl
adc
mov
sub
rclb
shrb
lret
jmp
shlb
in
dec
outsb
or
scas
dec
pusha
push
add
loope
mov
adc
inc
js
jl
dec
decb
fdiv
movsb
mov
je
dec
inc
and
nop
push
pop
xor
shlb
push
ror
hlt
shll
xlat
and
lods
jle
push
ss
hlt
idivb
sar
add
push
xlat
stos
lahf
cld
sbb
or
rorb
and
ret
xchg
dec
sbb
dec
mov
push
mov
ficoml
mov
mov
jg
pop
or
add
push
cli
hlt
outsl
mov
rcl
fsubl
jae
cmp
pop
pop
mov
add
int
cli
insl
jne
ds
mov
into
jb
loopne
imul
jne
push
dec
and
adc
sub
or
mov
xor
mov
push
sbb
or
stc
lret
loop
dec
addl
cmp
enter
sbb
dec
inc
sub
mov
mov
fdiv
sub
sbb
lret
fisubs
fsubr
xchg
loop
sbb
pop
into
inc
jge
mov
mov
stos
inc
and
loopne
push
xchg
sar
jg
mov
sbb
das
add
mov
hlt
xchg
fsqrt
sbb
jae
inc
xor
dec
xor
fsubrs
or
lds
push
fwait
or
rolb
insl
adc
jecxz
lods
outsb
jnp
add
xor
cmpsb
push
loop
shll
inc
mov
loope
pusha
jecxz
cmp
jg
jp
xchg
cmp
inc
fsts
lret
outsb
push
pop
stc
in
and
jle
ds
adc
dec
ret
push
js
in
mov
orb
es
xor
sub
mov
mov
fistps
mov
nop
cld
arpl
adc
faddl
xchg
in
add
inc
lock
int
jbe
pop
rcl
sub
sub
xor
pop
scas
das
add
mov
mov
aas
inc
inc
test
fstpt
ljmp
ljmp
in
lahf
sub
mov
mov
pusha
and
movsb
enter
xchg
mov
dec
lock
subb
sbb
ja
mov
sahf
movntps
popf
sub
test
scas
mov
rorl
cltd
cli
call
push
and
cmp
add
pusha
mulb
cmp
mov
roll
fdivl
nop
repnz
stc
push
push
aad
push
ror
std
loop
jmp
fs
fcomp
adc
add
int
or
or
imul
jmp
mov
or
scas
inc
andb
mov
shrb
dec
stos
rolb
lods
fcompl
incb
jle
dec
shll
loopne
fsubrs
adc
cmp
pop
sbb
sub
jp
mov
sahf
mov
int
pop
sbb
push
mov
or
mov
or
vmulsd
cmpsb
shlb
push
inc
adc
add
fisttpll
cli
cs
add
stos
je
enter
adc
dec
cmpl
push
repz
gs
sti
les
aas
shl
push
fcompl
mov
stc
notl
stc
in
insl
lock
lcall
lods
ds
add
lret
ficoms
inc
repz
jb
cmp
and
mov
nop
repz
cmp
adc
jbe
loope
sbb
loopne
cmc
push
test
jbe
add
popa
mov
add
mov
pop
in
push
mov
insb
jp
xor
gs
push
push
inc
mov
dec
pop
pop
faddl
mov
daa
mov
je
imul
and
imul
xchg
in
mov
mov
shr
cli
jno
cmp
stc
mov
loop
push
xchg
xchg
add
dec
cmpsl
scas
fsubrs
mov
pop
dec
and
jns
leave
mov
fadds
nop
in
cmp
cmp
jp
bound
enter
push
dec
imul
push
shlb
inc
stos
mov
in
sbb
fnsave
inc
pusha
loop
dec
shlb
fidivrs
mov
into
iret
sub
insl
dec
lcall
fwait
or
hlt
xchg
dec
fcoms
push
xlat
ror
inc
pop
adc
addr16
jns
push
jg
dec
or
sarb
es
ja
cs
in
sbb
lods
push
xsaveopt
fsubrp
sub
mov
insl
shrb
xchg
add
fdivp
and
sub
cli
pop
inc
shrb
push
shll
lcall
in
xor
dec
adc
or
rol
aad
addb
mov
dec
dec
repz
mov
arpl
and
mov
loope
aam
cltd
mov
test
and
dec
lds
movsb
test
inc
gs
cmp
out
cmp
subb
aad
test
mov
xchg
outsb
out
negb
imul
repnz
int
orl
mov
lcall
jbe
mov
sbb
outsb
mov
insl
ds
push
shl
jp
adc
je
and
icebp
pop
adc
faddp
pop
dec
dec
push
mov
inc
xchg
dec
jbe
hlt
cli
aas
add
nop
xchg
loopne
cmp
xchg
into
insb
cmp
mov
jecxz
neg
sub
and
inc
or
ret
mov
shr
es
inc
sub
mov
xchg
cmp
std
cmp
cltd
mov
jp
scas
push
int3
jo
add
lock
xchg
ret
mov
addr16
mov
mov
cmpsl
jne
and
loope
cmp
adc
iret
bound
aas
into
sbb
movl
pop
mov
add
ss
cmp
rcrl
jl
imul
push
scas
jae
sti
cmpsb
outsb
push
loopne
int3
imul
inc
aam
and
inc
addb
cmpsl
insb
cltd
push
daa
fsubp
xchg
and
nop
sahf
mov
shll
mov
or
lock
pop
mov
popf
dec
add
mov
inc
mov
mov
sub
push
jp
sbb
in
in
adc
pop
fs
add
inc
fs
dec
fnstcw
jns
jb
inc
lds
adc
add
je
mov
shr
test
push
stc
out
rcrb
xor
and
and
aas
mov
add
popa
pop
js
aaa
test
sub
outsl
push
mov
nop
mov
es
xchg
inc
sarb
xor
jg
popf
faddl
xchg
lcall
adc
test
xchg
jmp
sub
xor
icebp
dec
inc
shl
out
int3
pop
sahf
lds
cmpsl
fcompl
aaa
lea
adc
xor
adc
out
inc
sbb
dec
sbb
std
xor
mov
inc
xor
mov
int
dec
sub
xchg
mov
push
lcall
inc
or
sub
testb
icebp
aad
sbbb
fs
mov
test
fldt
orb
ja
imul
and
push
sahf
pop
inc
dec
rorb
jmp
jmp
push
mov
repz
push
inc
push
in
in
adc
loope
fsubrp
imul
add
mov
push
fwait
sbb
leave
rcll
cmp
add
insb
add
push
testb
jecxz
mov
pop
sub
pop
inc
loopne
aas
xor
push
arpl
inc
movsb
lea
mov
movsl
jbe
xor
lea
out
addr16
flds
ljmp
jb
sub
sti
and
sbb
aad
sbb
pop
mov
mov
jg
into
inc
xchg
sub
and
xor
mov
test
ds
and
mov
stc
sbb
jb
sub
push
mov
sub
mov
mov
int
ficoml
xchg
das
cmpb
movsl
mov
jno
aam
sbbb
mov
icebp
add
fs
mov
cmpsb
jae
dec
jmp
sbb
push
in
jbe
clc
mov
lret
sbb
inc
mov
cmp
add
xchg
xchg
mov
icebp
call
stos
sub
out
pop
ljmp
mov
xor
adc
cmp
clc
mov
outsb
or
push
loop
jb
mov
fnstenv
icebp
adc
stc
scas
je
out
ds
xchg
popf
scas
cmp
xchg
add
idiv
mov
adc
in
add
adc
cli
loop
sub
mov
push
loope
pop
or
nop
lret
mov
int3
insl
add
push
and
and
add
inc
ja
push
push
mov
sub
dec
add
rcr
das
inc
push
inc
out
inc
inc
nop
test
push
pop
in
sbb
outsl
xchg
jbe
mov
sti
push
inc
push
mov
xor
cmpsb
push
fwait
cmp
testb
sbb
xchg
adc
aam
add
inc
sbb
fstp
into
xchg
shlb
inc
imul
push
loope
xlat
add
dec
mov
sub
int3
fisttpl
cmp
push
mov
mov
out
mov
into
sub
pop
push
lods
notb
pusha
repnz
into
ret
mov
dec
inc
pop
dec
lret
and
dec
out
jbe
pop
clc
fsub
jge
mov
jle
push
dec
ret
int
inc
outsb
and
xlat
pop
divl
or
insb
pop
inc
lock
icebp
jb
xor
push
mov
dec
inc
jns
lock
and
arpl
sahf
cld
sbb
push
aam
mov
fimull
mov
in
sbb
cmp
test
xchg
add
push
cmp
jle
push
loopne
mov
xor
xor
sbb
lcall
cmpsb
lods
mul
ret
cmc
movsl
popf
andps
mov
cld
sub
in
nop
and
push
in
fcmovnb
fcmove
push
sbbl
addl
inc
xchg
push
dec
fs
xor
mov
dec
jno
mov
inc
mov
fs
xchg
lods
xor
out
add
and
out
dec
and
in
jnp
sub
je
stc
dec
xchg
iret
mov
leave
sti
call
cltd
mov
push
fisubrl
jge
aas
add
xor
pop
gs
outsb
xlat
xor
add
shl
cmp
popa
adc
push
push
es
pop
fldl
cmc
aad
cmp
insb
push
int
sarl
mov
xchg
loope
mov
bound
inc
adc
fidivs
xor
iret
mov
mov
push
test
jmp
cwtl
or
jmp
sbb
push
gs
movl
gs
push
push
roll
jne
lret
dec
lock
pop
mov
mov
mov
js
mov
dec
mov
rol
cli
push
jns
mov
ficomps
mov
out
inc
add
mov
aam
dec
cmpsl
inc
orb
call
icebp
fmul
jae
pop
ss
sub
sti
ljmp
or
loopne
leave
roll
inc
push
shll
jle
cld
adc
jle
xchg
push
leave
mov
add
cs
iret
mov
lret
popa
ror
movsb
sbb
cld
fisubs
adc
pop
out
jge
out
mov
aam
cmovo
int3
dec
mov
jnp
pop
das
inc
adc
into
add
pop
and
mov
and
test
adc
mov
adc
mov
nop
ss
push
idiv
inc
std
cmc
flds
mov
divb
add
lds
push
sub
out
add
xchg
add
dec
push
mov
jmp
fcoms
shlb
xchg
scas
out
in
cli
fnstenv
ror
ja
push
aas
outsl
out
ret
int
xlat
sub
xor
int
mov
cmp
into
cmp
pusha
jle
dec
test
and
lock
xlat
cmpsl
ficoms
loopne
lea
inc
cwtl
stos
in
mov
shrl
inc
jp
fldt
out
outsl
jo
push
add
inc
push
fnstenv
inc
pusha
push
fsubrp
push
cmp
dec
loope
or
mov
push
ret
or
outsb
sahf
sbb
xor
cmpsb
sar
ret
sarb
daa
es
mov
pop
negl
dec
and
inc
mov
aad
out
mov
fstps
push
scas
in
mov
mov
ss
stc
add
mov
clc
out
add
hlt
pop
ret
mov
cmp
xor
mov
push
sbb
std
arpl
lahf
jmp
push
pusha
loopne
cmpsl
js
fidivl
dec
inc
cmp
xor
lods
jmp
dec
out
loopne
inc
push
cmc
in
cltd
adc
cwtl
fs
loopne
ljmp
ds
pop
add
aas
push
pop
sti
cwtl
or
rorb
sbb
xor
xchg
test
sahf
mov
dec
and
pop
xlat
out
jne
push
pop
lahf
and
jae
cli
rclb
popf
fmul
jle
mov
movsl
int3
out
xchg
mov
xor
jmp
mov
push
div
sub
sub
fucomp
icebp
add
outsl
jae
xchg
dec
jo
sub
and
pusha
adc
sbb
add
call
push
inc
rcl
mov
sbb
mov
xchg
push
rcl
inc
push
into
or
push
les
fldl2e
stos
add
daa
incb
ds
mov
xor
int3
xor
pop
stc
add
dec
lcall
stc
sub
and
lcall
cmp
mov
dec
les
cmp
adc
les
loopne
or
scas
adc
dec
pop
inc
ds
add
arpl
push
jecxz
xor
xchg
sbb
stos
jle
pop
cmp
pop
pop
rcr
fsubl
sbb
popf
pop
aas
mov
add
pop
in
cmc
sbb
mov
mov
or
decl
mov
aam
lods
adc
pushf
cmp
jbe
xor
scas
xor
add
nop
pop
cs
std
decl
push
jmp
cli
lret
insl
addr16
or
push
mov
xchg
jge
popw
lods
sbb
jnp
sbbb
push
jno
andl
or
push
sti
sbb
fsubrs
fisubrs
je
sbb
cmp
inc
inc
sub
loop
xor
push
sub
xchg
sahf
into
add
mov
adc
rcrl
je
sbb
stos
out
mov
mov
push
fdivrs
lds
cmpsl
add
and
pop
les
fcompl
lret
adc
aas
mov
sbb
mulb
rcl
adcb
int3
cmpsl
adc
int
fisubs
mov
inc
arpl
sub
add
jbe
push
add
fsubrp
sarb
nop
cmc
mov
mov
add
sub
sbb
shll
into
mov
lock
sbb
cvtpi2ps
pusha
popf
jle
mov
mov
ja
shll
das
push
nop
mov
pop
sub
cmp
aas
lds
repz
add
loop
hlt
jg
cli
cmpsb
movsb
dec
jge,pt
idiv
sub
sbb
dec
movsl
or
inc
loopne
dec
mov
lret
fdivl
mov
cli
lds
cmpsl
cli
arpl
sar
mov
xor
xchg
mov
loope
rcrb
mov
pop
xor
pop
push
mov
fisubrs
repnz
mov
ljmp
je
add
clc
js
lock
rcl
test
push
idivb
aam
mov
push
cmp
fbstp
mov
sbb
rcl
aam
xchg
fidivrs
pop
fldt
loope
sub
popf
aaa
fmul
add
mov
rcrb
sbb
idivl
dec
push
orl
inc
cmp
fld
adc
mov
cmpsb
popf
imul
pop
jno
fsubrs
dec
aas
jno
negb
add
lahf
iret
cli
leave
sbb
inc
and
mov
cmpb
dec
mov
data16
dec
inc
or
inc
mov
add
andb
int
out
repnz
hlt
ds
lcall
push
jmp
js
fisttpll
nop
les
xchg
cmp
es
dec
lret
cltd
mov
icebp
fisubl
sar
xchg
dec
mov
push
mov
popa
fnstsw
or
fidivs
outsb
xchg
sbb
inc
jo
loopne
or
mov
inc
sbb
sub
lahf
fidivl
sbb
int
out
cmpl
or
xor
push
xor
stos
pop
inc
adc
es
das
aad
adc
imul
daa
into
outsb
dec
inc
rcr
fstl
dec
pusha
sbb
sti
mov
or
jg
inc
roll
ds
lcall
sti
fldl2e
xor
pop
das
ja
pop
add
and
gs
mov
cmp
lods
pop
inc
jmp
lahf
popf
fwait
cmp
pop
dec
push
dec
rclb
data16
idiv
mov
lahf
out
aam
lcall
aaa
not
lcall
or
jb
les
inc
adc
fptan
jnp
or
jnp
nop
adc
dec
fsubl
push
imul
mov
jmp
adc
cmp
loopne
lds
testl
dec
scas
es
xchg
mov
movl
aam
stos
iret
aad
push
cmc
xchg
std
mov
cli
outsl
call
jnp
sub
and
cmpsl
or
rorl
add
jb
lds
scas
ror
pop
sub
and
aaa
xchg
pop
jp
fiadds
pushl
stc
lods
bnd
fsubs
sub
cmpsl
out
jl
dec
push
stos
xor
jb
jo
pop
sti
lret
inc
sbb
andb
fiadds
push
ljmp
pop
sub
loopne
or
mov
out
inc
mov
pop
mov
jmp
add
int
cmp
enter
jmp
das
stos
repnz
or
adc
jecxz
cli
add
jns
inc
xorb
xchg
push
out
pop
push
xlat
bnd
rclb
mov
pushf
sti
xchg
aad
push
or
xor
pusha
add
into
das
xchg
mov
xor
icebp
and
or
jb
leave
test
rcl
push
or
xchg
scas
rclb
aad
sti
enter
lock
sub
ficompl
inc
cmp
fstp
rcr
mov
and
pop
inc
sarb
call
call
adc
adc
movsb
xor
jp
inc
sahf
sub
push
outsl
clc
ljmp
gs
cmp
lcall
rolb
sbb
sub
jb
inc
xchg
inc
arpl
jbe
push
fdivs
push
std
mov
push
mov
pusha
sbb
inc
shlb
out
repnz
insl
mov
xchg
mov
aad
dec
arpl
sahf
out
sbb
aad
movsb
jb
loop
pop
mov
insb
sahf
add
xor
out
sub
push
adc
in
cmpl
fstps
mov
aas
loop
pop
aam
into
jbe
lcall
sub
adc
push
xchg
dec
inc
dec
test
into
out
gs
rolb
xchg
adc
aad
inc
dec
xchg
lret
fwait
rcrb
xchg
std
mov
insl
repz
mov
mov
mov
fptan
pop
push
js
adc
xchg
int3
sbb
ja
jp
push
jmp
cmp
sbb
fwait
cmpsb
mov
push
fldt
rorb
movsl
cmpsb
mov
out
pop
fcmovnb
inc
call
sarb
sub
mov
cs
ljmp
ds
fmull
out
adc
jbe
push
or
xlat
push
and
and
adc
imul
inc
pusha
xor
mov
roll
xchg
push
cmp
lret
popa
pusha
push
dec
xor
jecxz
orb
pusha
xor
scas
push
add
cmc
cs
and
cld
out
add
push
add
lahf
push
adc
lret
and
pop
nop
sti
inc
inc
bound
mov
or
xor
aaa
xor
mov
mov
push
cwtl
cmpsb
adc
cs
fstpt
xorb
mov
rcll
repnz
loope
hlt
into
mov
aam
push
into
mov
jge
mov
fcomps
push
into
aad
scas
cmp
xrelease
shll
movsl
xor
insl
mul
cmp
dec
sub
roll
in
dec
gs
sbb
rcll
pop
shlb
add
outsl
aad
mov
test
add
pop
stc
ret
sbb
ffreep
jle
mov
sahf
dec
dec
xor
xchg
adc
aaa
jmp
adc
insl
or
mov
rol
inc
sub
mov
jbe
popf
mov
pop
popa
stos
mov
pop
mov
leave
into
xlat
fstpl
rcrb
xlat
mov
test
jne
out
out
jnp
adc
xor
pop
mov
dec
xor
les
and
push
in
cmp
pop
and
push
xchg
mov
jle
lds
jp
jae
rclb
adc
pop
sbb
fdivs
mov
sbb
outsl
push
dec
xchg
adc
sahf
cs
ror
mov
xor
sbb
xor
jecxz
mov
decl
pop
shlb
jmp
shrb
out
mov
adc
add
cmp
add
call
iret
xchg
mov
push
jp
mov
sti
incl
cmp
mov
add
sarb
adc
xchg
mov
and
andb
jle
roll
jne
test
jae
mov
js
clc
ljmp
sti
nop
sti
sub
cmpl
add
ljmp
pusha
push
sub
mov
aaa
add
stos
mov
mov
pop
arpl
pop
fbstp
fidivrs
cld
pop
out
push
or
gs
cmp
cmp
aas
mov
ds
iret
ljmp
fisubl
cmp
loopne
fstl
mov
in
das
push
push
push
popa
inc
mov
dec
imul
push
cwtl
xor
sbbl
es
mov
in
sub
push
out
inc
sahf
lods
int
ret
push
xor
scas
xor
sub
std
cmp
dec
mov
xor
sub
sbb
cwtl
pop
std
sbb
inc
incl
add
or
lds
hlt
jo
test
clc
fmull
mov
jns
push
lea
add
inc
das
pop
mov
ljmp
fnstcw
mov
popa
inc
test
jae
push
call
ret
jbe
sarl
stos
sub
push
dec
rcl
jnp
mov
add
jmp
mov
xchg
stos
pop
outsb
cmp
lahf
into
sbb
outsb
lods
dec
xlat
fnstcw
add
push
int
cmp
add
test
inc
rcr
pop
push
fs
movups
push
into
mov
out
cmovbe
xchg
xchg
scas
pusha
add
shll
aam
movsb
and
pushf
pop
fldl
shlb
cmp
xor
inc
cmp
loop
dec
js
mov
loopne
sahf
xor
mov
xlat
pop
adc
adc
add
mov
and
push
movsl
sti
hlt
fdiv
ljmp
mov
stc
popa
mov
push
jecxz
fidivl
addl
add
and
push
fisubl
mov
cmpsb
sahf
mov
out
pop
mov
int3
inc
les
mov
orl
add
sbb
lods
mov
sarb
sbbb
test
enter
sbb
jns
add
mov
les
bound
add
cmp
inc
mov
sbb
jp
push
jb
or
cld
dec
fistpll
insl
into
push
pop
inc
sbb
loop
lea
and
out
test
loop
popa
jmp
sbb
jae
adc
clc
fcomps
push
inc
insl
push
inc
test
ds
ret
call
cmpsb
mov
xor
push
inc
jecxz
cli
es
add
push
icebp
shrb
xchg
push
nop
adc
loop
sahf
jp
xlat
dec
outsb
cmp
push
shr
mov
out
loope
or
adc
jns
sbb
imul
lock
xchg
cmp
in
mov
ret
jbe
and
cs
and
sahf
xlat
cmp
mov
ljmp
ds
xor
test
arpl
jg
mov
adc
hlt
dec
xor
icebp
ds
stos
outsb
jl
cld
inc
pusha
xchg
mov
and
adc
clc
pop
mov
loop
rclb
ljmp
fcmovnu
adc
or
pop
xchg
sub
cmp
mov
adc
ds
es
mov
adc
rcr
push
idivl
or
xor
dec
stos
pop
out
fmull
into
lea
loope
es
xchg
loop
dec
lret
cvtps2pi
pop
js
sbbb
shlb
lods
mov
stos
push
sub
inc
inc
aas
push
fldenv
daa
adc
movsb
cmpsl
mov
stc
sub
cli
stc
fwait
jnp
mov
lock
aaa
adc
inc
sar
out
xor
push
cmp
cld
dec
mov
aad
jmp
xor
es
scas
push
subb
inc
add
icebp
mov
es
lods
xor
lods
xchg
sahf
push
gs
mov
or
shl
xor
pop
repz
bound
cli
aad
inc
or
inc
ficoms
fwait
mov
jmp
push
mov
mov
mov
outsl
xchg
mov
inc
push
pushf
inc
in
sar
scas
adc
testl
enter
loopne
loop
mov
sbb
jnp
or
xor
or
outsb
add
icebp
adc
rcrb
mov
daa
inc
loopne
cli
mov
inc
cmpsb
inc
mov
mov
mov
sbb
sub
xlat
fs
dec
dec
push
push
xchg
iret
in
add
divl
xor
xor
mov
outsl
out
xor
popa
fwait
cld
xchg
out
out
aam
ret
push
mov
inc
adc
scas
and
jne
adc
inc
pop
mov
jle
cmp
or
shll
push
pop
ds
or
iret
or
lret
inc
jl
xchg
xor
xor
pushl
add
adc
adc
into
aam
dec
or
pusha
nop
mov
enter
stos
arpl
ljmp
fidivs
es
or
sahf
xchg
outsl
add
add
bound
clc
sub
fbstp
jbe
nop
push
jno
aam
jle
lods
shr
pop
cli
roll
push
sub
dec
xchg
out
dec
adc
push
popa
ffree
insl
pop
popl
mov
test
les
cmc
xor
out
loop
lock
xchg
fidivl
aas
loopne
pop
push
imul
xor
in
mov
xor
test
movsb
sbb
fsubrs
inc
inc
sti
adcb
mov
loopne
mov
ljmp
jbe
xchg
sti
js
cli
testl
gs
mov
xor
inc
loopne
aas
xchg
addr16
fadds
std
mov
dec
ds
insb
push
mov
or
clc
pop
push
xchg
loope
pop
inc
xorb
scas
aad
jl
cmpb
lahf
push
ds
cmpsb
mov
aas
jp
sub
cmp
pop
sub
rol
daa
arpl
and
push
out
pop
cli
mov
jp
mov
in
xchg
je
rclb
aas
test
ljmp
sbb
adc
inc
xor
mov
dec
xlat
mov
subb
cmp
shld
fistpll
fisubrl
sub
sarb
dec
push
cs
jno
xlat
jno
dec
sbb
movb
imul
cli
pushl
mov
aaa
iret
stos
adc
lea
inc
xchg
inc
adc
xor
fisubrs
fldl
xchg
or
pop
fsubs
xchg
leave
dec
cmp
insb
or
cmp
das
and
push
sahf
std
adc
push
xlat
rolb
or
mov
dec
sub
stos
enter
jg,pt
cmc
mov
cli
aaa
fnstcw
enter
push
xchg
ja
push
sarl
cmp
mov
cmp
sbb
gs
mov
inc
pushf
imul
aaa
cvttps2pi
push
jecxz
push
dec
pushf
xor
lds
inc
sbb
jle
rclb
inc
pop
out
orl
fiaddl
pop
repnz
orl
cld
mov
push
pop
adc
pop
aas
mov
or
mov
cltd
out
bound
pop
popf
cmpsb
mov
push
movl
and
mov
mov
fidivl
or
cmc
fldt
push
push
mov
mov
cmpsb
pop
mov
subb
push
sbb
imul
inc
sub
inc
dec
xor
mov
cmp
push
cmp
dec
inc
fsubrl
dec
add
xchg
add
repnz
ss
iret
or
push
dec
jnp
mov
adc
and
shrb
in
cmp
cmpl
pmaxub
jbe
fadds
ds
shrb
cli
pop
shll
cli
cmp
les
inc
adc
sub
adcb
and
or
mov
orl
sub
testl
aad
mov
arpl
or
push
jg
push
mov
stos
hlt
jae
popf
and
fbld
fucom
imul
add
mov
xchg
fcomps
or
pop
and
out
loopne
cmp
push
rolb
shrb
js
push
jge
dec
inc
sub
fldenv
scas
xchg
imul
cmc
int
xor
add
mov
in
add
jnp
jae
cli
or
outsb
testb
leave
add
test
pop
push
dec
push
mov
and
arpl
dec
jne
xchg
add
imul
lahf
call
mov
pcmpgtb
inc
jns
xor
pop
int3
mov
mov
call
sar
les
lret
dec
iret
push
push
mov
loop
dec
jb
das
pushf
mov
pushf
call
inc
xchg
ss
xchg
addr16
xchg
inc
mov
or
ret
imul
outsb
mov
inc
aaa
fimull
hlt
or
cltd
out
sarb
arpl
fldcw
push
inc
cmc
add
dec
out
push
aad
jmp
xor
dec
sbb
inc
ficoms
dec
ja
or
or
fimull
fadd
lcall
adc
jne
push
mov
dec
popf
test
js
mov
shrb
cs
mov
sar
push
stc
pop
dec
aaa
rcr
inc
test
and
aad
push
lock
fnsave
xchg
shr
out
repnz
cltd
dec
mov
jl
cld
mov
xchg
dec
lahf
pop
aad
lds
mov
mov
outsb
fwait
push
test
loopne
mov
pop
aad
imul
mov
ljmp
mov
mov
ds
mov
dec
imul
fisubs
iret
jae
inc
jb
mov
mov
dec
lock
adc
imul
and
imul
pop
in
sub
jne
xchg
mov
dec
inc
xor
sarl
imul
pop
inc
loopne
push
lods
shlb
filds
cmp
dec
in
cmp
add
mov
movsb
pop
mov
int3
mov
pop
aad
inc
stos
lock
fnsave
in
fdivl
imul
mov
sub
xchg
add
jno,pt
pop
popf
movsb
add
pop
mov
dec
faddl
push
je
adc
add
cs
jae
fisubrl
dec
lret
in
lret
sysret
hlt
call
roll
loope
dec
pop
sbb
ret
addb
mov
mov
cmp
and
and
mov
dec
adc
lock
lahf
in
fisttpll
test
xchg
sbb
ljmp
sub
lea
inc
shll
dec
or
js
ljmp
sub
mov
lea
inc
inc
add
push
cmc
test
cmp
cmpsb
ret
and
add
fsubrl
gs
out
mov
cld
in
aas
xlat
pop
xchg
mov
sahf
add
push
xchg
dec
rol
sbb
hlt
xor
lcall
mov
push
lea
mov
int
leave
jge
jmp
inc
xor
jo
sbb
ds
rorb
cmp
movsl
xchg
in
sbb
and
lock
jns
ss
xchg
je
inc
and
and
mov
scas
inc
jns
por
incb
fcoml
out
push
pop
mov
push
pusha
test
mov
sbb
sar
sbb
cmp
mov
mov
in
lret
icebp
f2xm1
inc
xor
aas
jmp
das
leave
jmp
mov
lock
cs
pushf
mov
xor
sub
sub
and
addr16
aas
enter
leave
outsl
cli
arpl
in
push
mov
clc
pusha
xchg
jns
xor
sub
pop
xchg
insl
dec
add
cmp
fistl
call
rol
ror
repz
sbb
mov
filds
dec
sbb
lods
sbb
pop
dec
jmp
popa
rorb
insl
xchg
jns
push
adc
fstl
notl
xor
add
aad
insb
push
adc
jmp
and
insb
sub
repnz
push
fwait
cltd
out
jo
call
leave
rcl
ljmp
test
data16
push
hlt
hlt
imul
mov
sbb
mov
push
or
sbb
clc
sti
cmpsl
faddp
imul
xchg
xor
sbb
data16
insl
imul
decb
mov
push
lods
fcomps
inc
out
nop
and
mov
push
lods
aas
rolb
aas
and
test
cli
jl
mov
std
scas
movq
or
fcoml
inc
nop
pushf
jle
int
sub
fnstenv
scas
sbb
lret
sub
jae
dec
fwait
iret
pop
cwtl
fimull
les
les
ja
imul
or
ds
fidivl
xor
hlt
cwtl
ds
jecxz
xchg
add
das
push
add
jp
sub
mov
scas
test
mov
hlt
pop
pop
frstor
cmpsb
push
testb
repz
js
inc
test
xchg
mov
pop
adc
pop
pop
divl
rcl
sub
mov
fcmovne
jo,pt
clc
add
inc
aaa
aam
inc
sbb
push
out
iret
inc
mov
push
fdivr
das
lret
in
or
loop
adc
je
fcoms
out
push
cmp
add
fdivrl
mov
dec
jg
cmp
decb
mov
sbb
loopne
or
insl
sub
fs
aas
and
jmp
stos
ja
mov
adc
dec
rolb
imul
add
xchg
xchg
fwait
mov
fsubrl
fs
jb
in
mov
es
mov
ficomps
pusha
dec
out
xor
pusha
lahf
dec
int3
dec
jmp
inc
and
cs
cli
add
xor
push
dec
mov
cmpsb
fdivrl
mov
jne
and
rorl
mov
add
bound
outsb
aas
xchg
xor
scas
iret
push
mov
cmp
aam
push
jl
cmp
mov
pop
lret
fsubrs
daa
aad
cmp
in
adc
aad
fimuls
lods
sti
imul
lds
das
xor
jg
xor
stc
mov
rcrl
sbb
rclb
icebp
push
imull
int
xlat
or
fcom
and
mov
ljmp
bound
push
push
popf
or
push
aas
int3
pop
cvtdq2ps
into
int
es
cmc
jmp
outsl
out
ret
pop
jle
into
mov
jo
mov
stos
pop
jne
lahf
stos
sarb
test
pop
xor
ret
stos
xor
and
testb
dec
out
movsl
inc
lret
lods
dec
nop
in
outsl
pop
dec
pop
sahf
mov
and
fimull
filds
inc
lods
inc
rclb
scas
lds
inc
jnp
enter
cli
aad
jns
and
dec
hlt
arpl
xor
loop
xlat
ret
lcall
outsb
mov
inc
inc
int3
dec
push
adc
loop
push
lret
cmpsl
dec
stos
xor
hlt
es
mov
fiaddl
mov
xchg
sub
outsl
xor
adc
push
aaa
mov
test
push
jle
lods
xor
fdivs
in
add
add
jb
cmp
dec
xchg
mov
hlt
orb
or
scas
xor
cmp
push
out
add
das
adc
mov
lea
and
xor
fistps
jmp
cmp
fisubrs
dec
sbb
into
push
dec
sub
xchg
aad
int3
jno
push
int
push
cmc
or
rorl
int3
repnz
fidivl
out
fnstsw
scas
add
jge
fnstsw
xor
ret
push
test
fwait
ret
sbb
jb
rorl
push
clc
pop
cld
push
jle
loope
pop
jbe
mov
push
jo
fsubs
test
add
mov
jecxz
adc
imul
gs
add
xlat
push
pop
or
repnz
clc
push
fsubrs
and
add
fdivs
inc
out
inc
lcall
xchg
cmp
not
inc
mov
jb
and
addr16
mov
aam
gs
in
cmc
into
out
popl
mov
push
lock
mov
jb
mov
adc
mov
jg
js
jmp
scas
cmp
sbb
je
jmp
and
aas
xor
out
xor
xor
xor
adc
pop
or
pop
sbb
mov
fistl
cmp
sbb
add
pop
lods
xor
scas
mov
fmul
fwait
push
pop
outsl
adc
ss
out
inc
imul
fcompl
or
imul
xor
xlat
mov
lock
pushf
push
inc
ljmp
pusha
mov
pop
dec
cs
cmc
mov
mov
popa
jnp
lret
ds
cwtl
cmc
mov
call
fsubrp
pop
addr16
push
or
je
push
aaa
mov
cmp
adc
clc
pop
lcall
inc
add
pusha
jne
lods
pop
repnz
cmovb
jne
xchg
pop
faddl
cld
sub
jg
xor
push
jge
inc
cs
push
rolb
mov
xor
loop
or
push
pop
jne
shl
fprem
push
pusha
or
ret
subl
into
adc
es
xchg
addr16
inc
int3
mov
je
lock
loop
mov
cmpps
aas
pop
dec
cwtl
push
push
push
incb
das
in
bound
into
fcomps
outsl
mov
jmp
sarb
mov
into
pushf
jb
cld
xlat
jp
aad
pop
dec
dec
ret
pop
das
push
adc
cmp
mov
fidivl
push
rolb
das
mov
mov
sarw
outsb
mov
pop
aad
pop
cltd
pop
mov
mov
je
or
inc
push
fabs
lcall
push
fs
testb
jge
sbb
roll
sahf
push
pop
add
fsubp
or
mov
mov
nop
jae
inc
inc
xorb
faddp
xor
mov
xor
jo
lcall
dec
sbb
fcmovnb
inc
rorb
pop
enter
mov
dec
push
pop
sti
fmul
out
aam
add
jo
insb
ret
mov
mov
shrb
or
cltd
mov
in
xlat
lret
or
jns
scas
popf
mov
adc
dec
mov
jno
gs
outsl
ret
and
iret
aas
push
bound
sbb
pop
mov
sub
mov
iret
cli
ja
mov
in
fistpl
pop
jle
pusha
mov
out
fsubl
adc
jns
cmp
in
cmp
fldl
inc
xor
neg
ret
mov
jne
insb
adc
xlat
fnsave
enter
shl
imul
cmp
inc
aaa
push
rorb
in
stc
dec
cmp
add
sbb
jl
sbb
jecxz
cmp
dec
add
mov
bound
fs
in
cld
ljmp
ds
jo
pop
sbb
into
ficompl
mov
pop
shlb
adc
ficoms
pushf
popa
in
adc
adc
scas
jnp
inc
gs
cwtl
and
enter
shrl
iret
jo
xchg
stos
cltd
fs
and
fwait
lea
dec
sub
mov
pop
les
outsb
pop
jns
cwtl
mov
pop
iret
fildl
push
repz
stos
xor
stos
into
in
and
je
aaa
jle
xchg
idivl
es
jns
in
cli
mov
xor
mov
mov
cmc
mov
add
aad
push
sbb
xchg
adc
add
movsl
gs
outsb
inc
and
lret
out
test
mov
stos
push
sahf
xor
jae
out
sbb
adc
std
arpl
xlat
pop
adc
sub
xchg
cmp
add
inc
in
push
jge
ficomps
sahf
jg
cmc
pop
cltd
ja
sti
lods
mov
adc
push
mov
cli
inc
scas
test
int
pop
dec
test
adc
fsubs
dec
das
mov
push
inc
inc
push
xor
orl
sub
decl
int3
call
adc
mov
sbb
adc
lcall
inc
lret
stos
jb
dec
cmp
mov
adc
mov
retw
mov
rcrl
clc
test
movsb
sub
jo
loope
xor
movsl
xor
jb
xor
fdivrl
loope
pop
mov
cld
ffree
mov
add
dec
xchg
xlat
cmp
in
outsb
loope
sub
loope
mov
or
mov
mov
mov
popa
jl
rcrb
pop
mov
push
in
mov
inc
aad
sbb
mov
cmc
add
push
xor
fnsave
aam
and
repnz
or
fs
and
sbb
push
mov
ficompl
push
shr
mov
mov
shlb
insl
jb
adc
movsb
ret
not
push
xchg
push
daa
test
inc
mov
inc
xor
int3
cwtl
repnz
dec
fbstp
shlb
ljmp
pop
lods
sub
call
repnz
mov
shll
aam
mov
jb
shll
and
and
js
data16
pusha
xchg
flds
or
sub
jl
sub
mov
lret
push
out
cmc
jle
popf
push
mov
cli
stos
rol
in
xor
pop
pop
sahf
mov
call
push
addr16
outsl
cmp
mov
adc
das
roll
inc
cld
daa
test
and
ds
jge
rol
cmp
push
dec
jmp
sti
sbb
mov
and
repz
lock
adc
or
mov
les
icebp
dec
jecxz
xchg
jg
adc
adc
leave
jecxz
neg
cli
stos
or
fisttps
cmp
xchg
repnz
fdivrs
mov
lea
jbe
adc
mov
push
ljmp
sbb
aam
xchg
inc
inc
aas
dec
ret
fs
jb
xchg
mov
jge
mov
int3
popa
mov
fisubl
fcomps
cmp
outsb
push
sub
and
mov
xor
stos
mov
shl
shll
loop
je
adc
add
and
fiaddl
cmp
sbb
call
into
xor
inc
fstpl
clc
in
addl
dec
or
mov
idivb
or
lahf
cmp
sbb
loop
pusha
dec
ljmp
xchg
inc
rclb
leave
sbb
xchg
sbb
cwtl
scas
fmuls
xlat
add
inc
mov
out
test
sbb
ret
push
cmpsb
fldenv
in
pop
or
idiv
stos
add
xor
bound
mov
add
jmp
or
jle
cld
xchg
add
inc
pop
arpl
add
aas
inc
lret
and
add
lds
jecxz
fcoms
les
outsb
pushf
subb
std
ds
mov
insl
inc
shlb
mov
fwait
and
mov
mov
lods
scas
adc
or
xlat
pop
idivb
out
stos
mov
mov
fs
fstps
add
fidivl
or
mov
jne
push
dec
imul
nop
ss
sbb
mov
lret
cmp
fucomp
ds
cmpsl
dec
stos
outsb
js
jb
fcmovb
cmpsl
aad
movl
mov
mov
vunpcklps
push
add
in
jmp
loope
mov
jmp
hlt
mov
rorl
sub
leave
xchg
xchg
xlat
mov
scas
lahf
cmp
mov
lock
fidivrs
or
pop
inc
pop
push
jmp
lods
cmpsb
sub
fldenv
aas
push
push
and
popf
add
mov
imul
xchg
nop
inc
iret
fbld
xchg
mov
ret
movsl
out
fstpl
loope
cld
mov
rol
mov
xchg
repz
rcrb
adc
fstl
pop
adc
lret
ds
or
push
faddl
add
cmpsl
cmp
jno
fildl
movsb
fsubl
test
jbe
adc
and
jecxz
sbb
inc
daa
paddsw
ret
popf
adc
nop
daa
mov
inc
inc
inc
add
stc
loopne
inc
mov
jecxz
shll
out
mov
out
rclb
movsl
mov
enter
xchg
jmp
rcll
ja
jp
jmp
shll
test
xor
xchg
icebp
fstp
stc
cmp
jle
jl
sbb
push
testl
in
std
fbstp
dec
loop
jmp
insb
fnstenv
mov
mov
negl
jle
aaa
mov
xchg
aad
outsb
out
push
mov
pop
inc
sarl
mov
mov
sub
xchg
pop
push
loope
repnz
mov
push
stos
stc
lret
aad
loope
sbb
mov
imul
xchg
bnd
jns
imul
aas
cmp
push
fnstcw
sarb
loope
or
out
hlt
inc
pop
shrb
int
dec
pop
insb
addr16
jo
mov
push
scas
repnz
stc
mov
adc
jnp
adc
push
mov
push
insl
test
xor
dec
inc
mov
test
loop
xchg
mov
xlat
sahf
leave
cmc
loope
xor
scas
or
inc
dec
testb
inc
rolb
jb
fiadds
aas
cwtl
mov
out
hlt
aas
cld
xchg
cmpsb
nop
dec
sub
or
mov
das
enter
push
aas
aad
mov
test
xchg
xchg
xchg
jb
lea
imul
jo
cmp
mov
or
xor
dec
outsl
dec
loopne
lds
std
lret
xchg
call
fcomp
jle
nop
mov
aam
inc
jnp
aam
test
sahf
xchg
loope
add
loope
or
lret
pop
push
add
sbb
xchg
mov
sbb
dec
jg
push
je
aaa
fdivrl
loope
mov
cmp
push
sbb
mov
and
sub
pop
push
clc
xor
xchg
fists
cld
sbb
loop
pop
lahf
push
xchg
xchg
lcall
enter
add
inc
fadd
fdivl
and
out
loop
xlat
push
dec
inc
pop
mov
inc
push
mov
fstpl
jg
fwait
out
jns
xchg
into
mov
mov
fldenv
adc
dec
lods
push
adc
das
lds
das
les
cmp
rorl
je
mov
lds
ja
xor
push
push
insb
pop
mov
sub
test
ljmp
jo
push
mov
imul
cmp
sbb
cmp
dec
and
fstps
cmp
ret
cs
hlt
addl
inc
gs
loop
hlt
movsl
push
cmc
cs
cli
cli
ljmp
hlt
mov
iret
or
and
repnz
imul
fnsave
movsl
push
inc
inc
lret
fs
ds
or
and
cmc
cld
add
dec
aam
jo
gs
push
add
inc
adc
dec
xchg
in
cmp
fnstenv
cli
cmp
or
pusha
cli
adc
cmpsb
ret
cmp
aad
pop
and
popa
sub
inc
mov
out
daa
hlt
sub
xlat
nop
fldcw
lods
mov
pushf
iret
loop
orb
lock
xor
cmpb
cli
pop
cmp
inc
push
cwtl
dec
testl
cmp
pop
aam
and
movsl
add
sahf
add
jae
pop
add
cwtl
aad
pop
in
sbb
sbb
push
sahf
mov
ds
mov
les
or
push
add
push
dec
xchg
mov
stos
mov
je
and
dec
jns
lret
cmp
jle
stc
shlb
jno
mov
jnp
push
test
lock
push
sarl
iret
mov
mov
xor
fnstsw
fisttpll
out
or
cmp
repnz
rorb
out
out
or
out
or
dec
adc
mov
ljmp
int
outsb
stos
lods
jb
xor
ja
aad
push
add
ret
xor
in
in
iret
outsb
add
out
cwtl
or
arpl
xchg
dec
push
pop
add
call
loopne
inc
dec
mov
inc
fiadds
test
mov
incb
test
in
jmp
push
pop
add
inc
mov
push
outsb
cmp
daa
pop
xor
outsl
dec
fdivs
push
stc
rorl
andl
pushl
and
adc
sbb
aad
aas
orl
xchg
loopne
ss
add
in
xchg
out
ret
fisubrs
fs
ljmp
jno
xor
and
cltd
pop
aad
mov
loop
mov
fstps
outsl
jnp
sub
out
xlat
or
and
call
sub
stos
sbb
push
push
pop
mov
push
mov
sub
mov
idiv
push
loop
add
pop
add
and
nop
and
jmp
and
data16
and
popa
sbb
or
lods
dec
loopne
or
fldcw
loopne
xor
jle
inc
ljmp
rolb
pop
lret
push
xchg
dec
fucom
test
sbb
dec
push
bound
loop
call
mov
push
mov
mov
add
cmp
rorl
bound
and
jecxz
jle
in
sbb
sti
and
fistpl
out
ja
rcr
pop
pop
push
and
stc
or
cli
fisttpll
dec
loope
xor
cmpsl
sbb
adc
rorl
mov
jo
arpl
es
sti
sbb
or
aam
or
jo
dec
xchg
xchg
add
lret
mov
inc
mov
push
xchg
shrl
out
push
pop
add
subb
ljmp
sbb
mov
movsl
frstor
cmp
icebp
stos
and
inc
out
aad
push
sbb
lret
xchg
pop
sub
push
xorb
and
ds
adc
jo
mov
or
jbe
mov
lock
xchg
repz
xor
pop
jl
ds
inc
adc
data16
mov
push
pop
push
arpl
inc
lock
into
lock
inc
cmp
mov
aaa
push
or
add
lret
xor
or
add
push
mov
test
das
push
sub
aam
mov
loop
and
add
ss
ljmp
push
pop
push
insb
ficoms
or
out
push
mov
pop
sub
xorb
out
push
jo,pt
in
inc
push
inc
sbb
fistl
xchg
add
xlat
int3
addl
divb
sbb
mov
arpl
rclb
das
mov
inc
pop
fbld
subb
test
sti
adc
pop
sbb
test
sbb
push
aas
jle
xchg
iret
fs
push
mov
push
dec
cmp
push
out
pop
adc
add
mov
cld
hlt
mov
cs
inc
mov
inc
ljmp
iret
pop
push
repnz
or
sub
mov
mov
paddw
aad
addb
dec
mov
out
jle
jg
faddl
sbb
sub
sbbl
xor
nop
mov
cmc
dec
imulb
jmp
xor
and
shll
fldl
arpl
insb
lret
scas
imull
cmpsb
in
popa
and
in
mov
xlat
push
mov
mov
xchg
mov
cli
out
inc
mov
cmp
mov
ror
xchg
inc
bound
add
mov
inc
nop
or
out
xor
movsb
loope
adc
in
scas
lods
test
inc
xchg
jne
mov
sbb
das
inc
shlb
mov
loope
xor
push
dec
sti
adc
jp
mov
ficoms
rorb
cmp
jns
sbb
pop
push
shrl
add
jne
mov
sub
jnp
aam
mov
outsl
lods
sub
jo
cld
enter
mov
jp
imul
mov
ljmp
fdivl
nop
sub
cmp
add
fsubrs
push
adcb
nop
movsl
sbb
xor
shlb
movsl
pop
xchg
loope
jl
cld
call
inc
sahf
mov
scas
push
sti
and
scas
imul
mov
mov
mov
shl
cmpsb
scas
cmp
leave
xor
loope
mov
mov
jge
cmp
lcall
push
or
sub
inc
je
jge
sbb
roll
lret
or
push
or
inc
mov
mov
test
movsl
ds
sbb
jmp
and
lods
lahf
push
cmpb
cli
in
fbld
inc
lahf
add
adc
std
test
adc
add
out
xlat
pop
adc
inc
fimuls
jle
sbb
and
outsb
loope
aam
test
inc
xchg
inc
mov
sub
jmp
mov
js
movsb
dec
push
fsubr
sar
mov
rol
inc
inc
and
pop
shrb
push
sbb
scas
mov
xlat
arpl
lcall
push
push
cmp
ret
gs
bound
into
or
jl
xor
sarl
add
xor
mov
mov
mov
inc
mov
xchg
hlt
inc
push
cli
fs
cmp
jge
enter
dec
sarb
mov
fsubs
inc
jle
int3
test
in
push
aam
add
out
orl
push
push
stc
fwait
xchg
fsubl
mov
and
scas
aam
or
shll
add
fwait
push
in
adc
into
movsl
cli
cld
call
flds
nop
movsb
sbb
adc
lock
lret
movsb
sbb
stos
dec
sub
cmpsl
stc
add
fmull
insl
cld
dec
fidivs
mov
pop
sbb
incb
in
fstpt
and
jg
rolb
shlb
loop
sbb
sbb
pop
sub
fisttpll
mov
or
cmp
scas
fsts
mov
pop
adc
enter
xor
cmp
jb
rclb
and
cmp
cmp
xchg
jnp
cmpsl
push
scas
mov
rcl
dec
xchg
pop
pushf
dec
scas
pop
ja
shlb
xor
push
inc
ret
mov
fmuls
loope
pusha
arpl
add
mov
xchg
inc
sub
dec
dec
push
push
or
lea
xlat
sub
leave
xor
hlt
mov
das
shlb
mov
cmp
push
adc
or
dec
add
aad
lds
or
push
ficoml
addl
cmp
repnz
xor
pop
or
popf
stc
ja
pop
outsl
push
negb
and
cs
push
or
inc
fs
mov
das
dec
dec
out
cld
dec
add
imul
out
sub
jb
mov
fistpll
and
into
jecxz
mov
mov
in
cld
mov
push
cwtl
mov
mov
sub
mov
ljmp
hlt
sbb
lcall
mov
push
movsl
add
sbb
shrl
or
mov
sbb
pop
sub
pop
sub
dec
push
and
xor
mov
outsb
push
jnp
jne
test
mov
ret
or
cmp
cli
inc
cwtl
add
push
imul
lahf
push
in
dec
mov
cltd
mov
pop
add
sub
adc
sbbb
cmp
dec
test
lods
loop
sti
test
ljmp
push
fnstsw
in
into
mov
and
mov
loopne
bound
or
subb
dec
pop
leave
std
add
or
push
xor
mov
mov
rcr
orb
mov
out
cmp
jbe
stos
cmpsl
pop
xor
cmp
call
mov
lret
adc
inc
sbb
sub
scas
in
dec
sub
jge
xchg
sub
aas
je
cs
into
mov
xchg
adc
in
mov
push
pusha
push
push
imul
scas
lcall
sbb
pop
xor
fiaddl
rcrb
pop
inc
xor
lret
add
fcmovnbe
andb
out
xchg
mov
sarb
sbbl
fdivrl
or
inc
jnp
and
inc
nop
cld
mov
push
out
sub
xchg
xlat
mov
push
cwtl
mov
adc
add
lods
push
pop
les
les
or
ret
shrl
sbb
add
cld
add
cmp
nop
or
fcomp
pop
or
sub
mov
lods
std
jo
loopne
cmpsb
adc
push
sarl
mov
andb
add
adc
xlat
push
sahf
mov
inc
negb
mov
mov
scas
scas
xchg
mov
scas
insl
sbb
fstpt
shlb
push
call
cld
cli
and
or
stc
mov
mov
out
inc
aaa
ror
add
mov
push
mov
pop
mov
cwtl
adc
fistpll
or
aaa
jmp
sahf
sbb
popa
lret
jns
inc
std
inc
xor
push
push
mov
mov
or
sub
push
fcompl
aad
ffreep
sbb
cmp
cwtl
fs
loope
aaa
sub
lods
movsl
aaa
es
test
cmp
fbld
daa
push
rcrb
jp
mov
xor
je
icebp
and
inc
dec
adcb
push
push
xor
outsl
ss
or
fisubl
bound
insb
push
xor
fcmovnbe
inc
test
sub
adc
movsb
xchg
mov
lret
sti
push
mov
out
repz
cmp
imul
rcll
insb
push
lret
addr16
in
stos
push
ja
inc
ljmp
enter
ss
pushf
or
frstor
mov
jb
out
inc
and
scas
cmp
push
mov
mov
ja
dec
or
fldenv
jb
into
cmp
scas
hlt
imul
sbb
inc
rolb
gs
dec
dec
sti
pop
ror
fnstenv
pop
sbb
dec
xor
out
or
ret
jo
jns
fwait
adc
rorb
jne
iret
dec
cmp
loop
xor
jb
cmp
add
cmpsb
in
loop
inc
dec
movd
test
aad
add
and
std
pushf
sti
sub
aam
or
cmp
outsb
xchg
inc
icebp
pop
cmp
and
outsl
rorl
add
imul
sbb
call
sti
sub
pop
and
stos
mov
jns
insb
push
nop
inc
repnz
sti
jl
cltd
pop
inc
std
mov
inc
aas
lock
adc
inc
or
push
push
fnsave
rcll
mov
cmp
repz
jnp
pop
dec
adc
push
push
shll
insl
bnd
sar
arpl
cltd
fistpl
mov
ja
mov
mov
nop
mov
sbbb
xor
sub
je
cmp
imul
xchg
loope
jmp
iret
sti
pop
rclb
xchg
loopne
and
lods
addr16
loop
pop
cmp
mov
daa
cmp
xlat
xchg
out
cmp
xor
sbb
add
mov
in
lock
or
divl
fnstcw
stos
push
les
or
fs
jnp
arpl
add
outsl
cli
test
imul
add
mov
mov
arpl
loop
addl
fnstcw
jo
pop
stos
fistps
cli
cmpl
add
insl
bound
and
mov
jno
add
jnp
sarl
inc
cmpsb
out
dec
cmp
es
xchg
insl
cmpb
jns
sub
push
fmull
push
je
inc
cmp
jle
repz
xchg
test
rcrb
add
push
stos
outsb
pop
repz
nop
dec
lods
popf
lret
pop
xchg
sbb
mov
leave
push
xchg
adc
lcallw
xor
addl
andb
lret
pop
enter
xor
mov
mov
pop
xchg
out
into
mov
xchg
ret
inc
leave
or
loop
movsl
sti
scas
fdiv
push
xor
jno
adcb
xchg
and
aaa
stos
sbb
fiaddl
enter
roll
fs
mov
add
rclb
data16
fwait
jp
or
dec
adc
adc
inc
push
fucomi
xor
sbb
mov
pop
xor
jnp
mov
lcall
into
dec
int
push
push
cli
js
cmp
inc
cmp
addb
fcmove
inc
stos
repnz
fmull
pushf
cmp
pushf
jbe
shlb
int
jp
out
pop
dec
mov
add
sbb
pop
movsl
mov
mov
push
cltd
pop
aaa
cmp
jle
shrl
loopne
push
subb
pop
lcall
add
inc
xor
cmp
cmp
imul
daa
lret
dec
jae
aam
fisubl
iret
cmp
and
inc
adc
mov
mov
stos
data16
inc
sahf
bound
movsl
and
ret
decb
fdivs
mov
sub
jg
stos
dec
daa
idiv
mov
adcl
mov
mov
pop
lods
add
xor
into
cli
xchg
cmp
aad
les
sbb
adc
je
pop
jnp
push
xchg
or
xchg
in
into
les
loope
and
mov
sub
mov
fnstsw
arpl
pop
pop
addr16
inc
push
and
and
stc
enter
enter
repz
push
mov
stc
mov
mov
adc
push
adc
jo
cs
push
inc
cmp
mov
add
inc
mov
sbb
cli
xor
xor
jb
push
pop
xor
rcl
mov
shl
lea
xchg
cltd
imull
dec
lcall
cmc
jge
mov
out
loop
lock
push
imulb
or
push
xchg
scas
decb
andl
negl
mov
dec
nop
shl
fcompl
xchg
mov
in
fs
sbb
or
inc
adc
insl
test
or
add
jbe
out
add
cmpb
inc
into
imul
mov
inc
inc
sti
jge
cmp
stos
out
inc
test
add
or
cmp
jns
in
stc
pop
ret
shll
push
enter
mov
outsl
jg
stos
xor
adc
adc
mov
pop
into
ficoml
mov
or
cmpsl
int3
mov
sar
pop
in
mov
lods
test
fs
mov
xchg
int3
add
mov
cli
lret
xor
jae
jp
mov
cltd
inc
lock
dec
mov
mov
loopne
inc
or
push
icebp
lret
push
mov
dec
shr
push
cmp
lret
sahf
imul
xlat
ljmp
lods
inc
loopne
or
adc
pop
aam
xor
fs
lahf
jg
or
insb
aaa
jmp
push
mov
mov
dec
loopne
dec
cmp
sti
mov
sbb
std
inc
loope
pop
cltd
adc
stc
xchg
movsb
push
mov
shll
jne
jge
push
cli
mov
dec
adcw
sub
stos
hlt
push
fmul
inc
fstpl
jae
dec
inc
fistpl
and
mov
imul
cmp
dec
xlat
pop
je
xlat
xor
mov
cmp
pop
xchg
es
faddl
inc
int
adc
fists
mov
shrb
int
dec
arpl
mov
mov
jmp
adc
popf
jle
ret
push
out
jge
ret
add
adc
add
call
fs
xor
jnp
addr16
sti
push
das
sub
mov
and
mov
out
sub
lret
mov
shlb
sti
inc
rolb
cmc
out
clc
jnp
imul
cwtl
cmp
in
pop
imul
mov
inc
je
shll
fcompl
rcrb
popa
add
outsb
mov
add
mov
aam
nop
rcrl
mov
jecxz
mov
lods
jb
adc
leave
adc
stos
ja
push
jae
pmulhuw
daa
cli
ret
push
mov
inc
stos
adc
push
jo
xchg
jne
fistps
mov
jge
push
or
adc
sbb
add
xlat
cmp
inc
ds
imul
enter
or
ja
aam
add
push
data16
lret
mov
adc
adc
push
fsubs
jmp
repz
push
daa
jnp
iret
jno
cmp
nop
xor
hlt
out
js
add
xor
or
stos
cmp
gs
cmc
sarb
push
jbe
xchg
adc
pop
adc
add
arpl
xchg
adc
dec
jnp
and
aad
out
mov
inc
addb
ffree
dec
stc
xor
in
mov
jle
xchg
jmp
or
push
aad
call
adc
lcall
pop
cmp
call
mov
xor
xchg
adc
jle
fsubl
cmp
xor
fadds
sbb
mov
outsb
and
lret
fs
jmp
or
sub
push
lds
call
iret
jns
xor
push
sub
mov
pushf
inc
decb
cwtl
jmp
sbb
inc
cmpb
int
rcrl
into
mov
and
stc
incb
dec
mov
xchg
jg
fcmovb
clc
arpl
jg
out
sub
ljmp
inc
xor
sbbl
push
push
add
pop
fwait
cwtl
call
aas
sarb
sbb
pop
adc
jg
push
cmp
cli
jns
mov
stc
mov
mov
adc
out
add
xor
push
lret
inc
aam
add
test
jg
or
stos
aad
adc
jge
out
cwtl
icebp
lret
cs
aas
adc
ss
pop
or
jb
fildl
add
sbb
pop
inc
ffree
cld
or
or
popa
cmpsb
int
lretw
cs
loope
aad
jmp
out
add
out
jecxz
fiadds
loop
inc
dec
popa
xchg
mov
mov
push
and
cmc
int3
imul
movsb
popa
gs
push
mov
dec
jns
nop
test
mov
mov
jne
or
and
xchg
cmpsb
aam
shll
sub
mov
sbb
imul
shrb
in
icebp
cltd
push
mov
mov
cwtl
fisubrs
inc
cli
jg
adc
jp
rcrl
mov
pusha
cwtl
pop
sub
je
loopne
test
cli
enter
idivb
std
sub
push
stc
cmc
in
dec
and
sub
test
rclb
loopne
sub
pop
push
push
ljmp
xchg
mov
popl
jo
into
jmp
scas
loop
cld
lret
jo
jb
mov
push
jmp
cltd
ljmp
sbb
cmpsb
fstp
mov
cli
sbb
xchg
push
data16
mov
xor
pop
mov
lahf
in
xchg
inc
repnz
push
ljmp
or
sarl
popf
cmp
push
loope
push
dec
movsb
nopl
push
xor
inc
pushf
adc
inc
cltd
inc
fcmovb
adc
mov
sub
cmp
mov
ds
movsl
scas
add
mov
push
cmp
jb
and
aas
push
ss
movsl
enter
sbb
in
adc
mov
cmp
fistpl
gs
push
arpl
fsts
and
sahf
sbbl
push
int
sahf
adc
sti
int
jb
aad
cltd
leave
test
testl
mov
fdiv
cli
imulb
ret
out
imul
sbb
and
loope
xor
push
and
dec
xchg
mov
out
fcmovb
mov
cmpsl
sahf
cmp
adc
out
fsubrs
inc
mov
inc
shlb
inc
aad
xchg
in
fistl
mov
outsl
push
cld
lcall
es
popf
jae
and
sbb
push
and
push
jp
sti
js
inc
lahf
ficomps
cmc
mov
lret
push
cs
out
gs
xchg
fisubrs
jecxz
insl
jns
testb
dec
sub
sub
mov
cs
shr
cwtl
fsubr
loopne
inc
bound
push
test
in
mov
adc
or
mov
add
mov
sbb
add
inc
sbb
or
ds
sub
dec
adcb
cmp
dec
out
adc
loop
int
ds
cmc
sbb
dec
stos
jp
std
in
pusha
shlb
inc
test
cmp
aas
pop
mov
cmp
sbb
cmp
stos
adcl
jno
cli
jnp
pusha
je
mov
nop
and
jb
and
ret
pop
out
dec
and
movsl
xor
ss
pop
mov
cmpsl
pop
pop
rcrl
dec
in
adc
sti
adc
dec
fs
cli
test
sub
jno
faddl
dec
add
sub
xlat
jo
stc
mov
outsl
dec
int
sub
in
mov
adc
add
div
fnstsw
popf
mov
push
loopne
sub
cmc
aad
movsl
js
lcall
mov
dec
push
fchs
enter
sbb
pop
dec
inc
push
les
mov
lods
test
jg
jae
mov
sar
cwtl
jno
sub
jmp
sub
xchg
stc
rorl
pop
iret
push
jae
test
sbb
cmp
nop
rcrb
mov
outsl
aam
dec
push
fmull
stc
sub
jge
js
pop
je
aad
mov
out
push
push
aam
fadds
or
dec
sub
cmp
in
adc
out
add
testl
jmp
sarb
cmp
fidivs
mov
sahf
ja
mov
push
cli
aad
mov
adc
push
cmp
out
cmp
scas
outsl
jae
nop
mov
fwait
stc
push
sbb
out
jo
fmuls
filds
xor
jle
push
cwtl
les
push
mov
rcr
inc
cs
aaa
jmp
xor
jo
xor
repnz
inc
push
dec
enter
push
js
das
dec
mov
stos
iret
jp
bound
bound
cmp
jl
mov
loope
iret
xchg
ffree
or
mov
or
imull
stos
jmp
adc
lret
fldt
inc
jo
xchg
test
inc
mov
js
insl
popa
sbb
into
cmpb
orb
rorb
je
and
cli
enter
fidivrl
and
push
lods
adc
and
loop
pop
lods
orl
and
pop
sbb
cmp
int3
call
mov
sti
dec
xchg
and
into
push
js
mov
mov
dec
nop
mov
rorb
in
inc
sbb
scas
fdivrp
jmp
add
pop
je
mov
or
mov
pop
lret
or
sub
add
or
xor
jne
pop
cmc
add
mov
repz
lret
out
aam
pop
aad
stos
inc
aad
loope
cwtl
sahf
cli
aad
dec
scas
cmp
rcrb
xor
ljmp
es
loopne
fisubrs
mulb
loope
fstp
pusha
fs
push
stos
mov
lea
adc
dec
sbb
out
push
test
dec
jo
out
lea
adc
clc
mov
outsb
ss
inc
fcoml
stos
pop
outsb
enter
xchg
sbb
loopne
add
dec
add
xor
lret
xor
pop
push
xchg
jl
add
xchg
into
sub
out
mov
subl
mov
mov
shrb
ret
inc
xor
push
add
shl
in
std
push
pop
cmp
jo
fdivrl
das
fsubrl
jg
mov
mov
data16
xor
inc
and
jns
cwtl
cwtl
sbb
xlat
ret
mov
push
mov
sub
cmp
add
insl
rcr
cmp
enter
push
repnz
popf
divb
dec
int
into
cld
adc
xor
lcall
iret
jb
movsl
or
mov
or
pop
mov
es
bound
or
sti
sti
rclb
mov
or
mov
daa
xor
push
jae
or
ficomps
insl
push
sbb
testl
enter
data16
fldl
cld
cwtl
mov
enter
je
das
fadds
fmuls
movl
jge
scas
loope
and
sub
stos
mov
xchg
ljmp
mov
jnp
sbb
out
scas
or
add
idivb
iret
cli
pop
xchg
and
inc
shlb
lret
stc
xchg
ljmp
dec
rep
leave
xchg
inc
jae
dec
iret
rcr
lds
jo
ret
jno
outsb
fs
sti
xor
repnz
mov
push
movsb
jp
mov
filds
cmp
stos
mov
daa
fcoms
pop
push
pop
cmp
popf
sub
loopne
inc
sbbl
cmpsb
pushf
push
jg
adc
xchg
fwait
and
mov
jne
lock
rcll
hlt
cmp
call
inc
lock
sub
out
fsubs
sub
pop
dec
mov
ss
std
mov
mov
subl
inc
test
lea
std
mov
shll
add
ficoml
cmpsb
cld
sbb
jl
addr16
ficoml
mov
aam
fwait
popf
imul
sub
popa
es
inc
and
ret
sub
into
pop
ret
inc
add
sub
add
xchg
xchg
push
pop
das
pop
mov
mov
or
data16
int
or
test
lods
loopne
inc
lock
mov
insb
pop
push
jmp
incl
or
add
or
test
fiadds
fists
lcall
or
arpl
pop
je
sahf
gs
add
nop
push
mov
scas
push
into
sti
inc
testl
ja
mov
xor
or
js
pop
out
adc
jmp
outsb
fdivp
sub
int3
dec
test
adc
loopne
xchg
orb
mov
ret
call
test
push
bound
lcall
mov
pop
inc
loope
cmp
xor
mov
fsubs
jbe
push
cmc
mov
push
mov
xor
xchg
pop
ja
jns
in
cld
fwait
push
sub
divb
leave
and
cmp
jle
ds
shl
mov
lret
sbb
xchg
fwait
mov
inc
loopne
mov
lret
adc
push
clc
fsub
mov
dec
xchg
sub
out
or
cmp
popl
loopne
ljmp
sub
in
jnp
and
shl
push
lea
and
decb
mov
stos
int3
das
cmp
fsubl
pop
mov
fs
xchg
and
pop
add
add
jge
push
imul
sbbl
iret
sti
aaa
imul
cmp
push
adc
sbb
cli
cmp
mov
scas
mov
inc
xor
mov
push
mov
in
mov
cmp
xchg
lcall
insb
iret
jp
mov
lret
pop
iret
xlat
sub
jge
adc
xchg
sub
cwtl
mov
addr16
pop
jle
mov
enter
sub
mov
test
scas
mov
aas
fxch
out
cld
pop
int3
push
out
cmc
push
sti
test
aad
adc
jg
cmp
push
xor
test
std
jne
cmp
loope
mov
int3
sub
loopne
dec
lock
jo
std
and
inc
inc
cmpsl
mov
dec
cmp
or
cli
xor
push
shrl
pop
and
mov
jp
mov
loopne
xor
popf
cmp
pusha
dec
mov
pop
or
repnz
rcr
xlat
cmp
mov
sub
out
cmp
dec
lods
pop
push
cltd
fcomps
aaa
and
cmp
mov
icebp
mov
popl
dec
sahf
bound
fs
mov
jns
dec
jle
mov
or
aaa
pushf
cmc
fsubrl
ss
inc
nop
dec
int
inc
pop
push
andl
dec
or
sbbb
daa
outsb
iret
lret
fildl
imul
sbb
popf
int
popf
sub
jg
movsl
aas
loopne
jge
cmp
fiaddl
or
jo
loop
xor
xlat
push
les
ljmp
mov
lock
cmc
push
jns
cmpsl
test
adc
ljmp
jae
cmp
pop
fwait
and
sti
inc
sub
mov
fisttpll
insl
mov
insb
add
mov
or
jmp
loope
cmp
pop
inc
stc
shll
test
fsubl
in
cli
dec
adc
cs
in
or
lcall
jo
enter
sbb
cmp
xor
dec
adc
sti
hlt
sbb
jo
jno
mov
jl
dec
xchg
add
sti
push
jg
add
outsb
inc
test
or
loopne
mov
xlat
int3
popf
gs
push
in
cmpsb
mov
stc
fidivrl
ss
shlb
sbb
nop
pop
popa
cmp
scas
out
rorl
push
cmp
xor
xorb
dec
leave
hlt
sahf
fidivl
push
add
ds
out
or
aaa
out
jmp
fcom
stos
stos
mov
pop
add
xor
fcomi
push
jp
mov
push
loopne
imull
lret
mov
lret
xor
bound
mov
and
jg
enter
sti
xlat
rol
fdivr
and
insl
mov
stos
fisubs
les
cmc
fisubrl
dec
aam
dec
adc
insb
lret
aam
sbbl
cmp
rcrl
ret
test
and
loopne
jae
mov
repnz
inc
call
ret
out
cltd
fcomp
push
sbb
je
mov
data16
stc
jmp
scas
packssdw
sets
and
or
push
popf
push
push
mov
rclb
push
test
rcll
stos
sbb
sub
ja
jg
adc
sarl
ss
fstpl
mov
mov
out
pop
jg
loopne
aad
sti
pop
xor
dec
adc
pop
dec
call
jl
mov
add
jmp
mov
sub
loop
loop
lahf
aas
divl
add
std
xor
sub
cli
test
test
xor
lret
daa
std
cs
xor
push
fsubrp
dec
sbb
ds
stc
mov
loopne
cmpsb
push
jge
cld
pop
mov
in
rcl
add
lods
dec
inc
ret
bound
outsb
or
add
add
push
or
lret
cmpsl
cs
fsubs
iret
in
rcrb
ffree
push
imul
fcoml
mov
xor
jb
mov
mov
cmp
les
into
add
xlat
ret
les
dec
call
mov
cli
dec
jecxz
cmpsb
rolb
outsb
mov
sbb
fsubrl
push
inc
jle
inc
lods
xor
push
addr16
and
mov
fdiv
pushf
push
xchg
int3
xchg
fbstp
lods
adcb
int
add
inc
add
into
out
roll
sub
sahf
sub
pop
mov
mov
mov
std
cmc
inc
jo
cs
cmp
adc
adcb
aas
shll
inc
shr
adc
into
sub
or
or
cltd
xchg
sbb
aam
pop
stos
and
dec
or
dec
adc
not
jb
fldcw
sbb
lahf
ficoml
push
dec
push
xchg
leave
es
lock
in
mov
sbb
sbb
shrl
xchg
dec
test
add
mov
stos
xchg
add
inc
pusha
inc
out
mov
fsubrp
push
mov
push
inc
es
mov
jecxz
mov
int
loop
enter
scas
mov
cmp
push
mov
hlt
dec
jbe
push
loop
hlt
std
fidivs
inc
jecxz
push
dec
mov
xor
push
sub
push
jecxz
pop
xor
add
sub
cmc
repz
incl
aad
je
mov
add
inc
sub
sahf
inc
das
mov
xchg
inc
mov
lods
sub
and
out
fbstp
and
dec
mov
cmp
cmp
cltd
mov
into
jne
or
sbb
cmpb
inc
pushf
shrb
das
je
aas
hlt
sub
mov
mov
xlat
insb
lret
mov
xchg
push
ret
adc
es
shlb
cmp
fisubs
adc
sub
sub
shr
pop
jbe
xlat
imul
mov
in
dec
xchg
or
xor
bound
jo
sub
out
or
rcpps
mov
ret
or
fldl
cmpsl
out
fsubl
adc
mov
cwtl
mov
pop
mov
sub
push
push
inc
iret
fiaddl
lods
fmul
clc
repz
test
mov
mov
push
test
pop
mov
fbld
stc
aad
adc
lods
pop
sbb
sub
out
push
xlat
mov
push
jne
cli
test
pop
and
mov
idivb
or
pop
push
or
cli
cmp
gs
test
fildll
push
cmpl
xlat
enter
mov
push
pop
lods
fisubrs
xchg
cmp
mov
cmp
xchg
out
incb
flds
testl
lea
aad
add
popa
lock
pop
popf
dec
fimull
stos
int3
inc
loopne
adc
mov
out
xlat
cmp
ljmp
mov
div
push
pop
or
and
stos
sahf
data16
lret
mov
xor
or
inc
scas
jne
push
add
xchg
lret
aad
pusha
inc
insb
pop
lock
sbb
pop
pop
or
sahf
repz
dec
jnp
aaa
sbb
faddl
andl
pop
cmp
push
rorb
out
and
sahf
pushf
stc
inc
inc
jo
jo
outsb
push
jg
xor
xor
inc
mov
inc
outsl
pop
adc
sbb
ret
pop
stos
adc
mov
sti
push
pusha
test
pop
jb
adc
xchg
arpl
fldl
jecxz
xchg
cmp
js
fisubrl
cmpsb
xlat
inc
mov
jle
push
test
loopne
insb
repnz
mov
lret
dec
and
dec
sbb
add
pop
test
dec
cmp
or
mov
cli
adc
enter
sbb
pushf
cmp
shr
jne
idivb
xor
mov
arpl
into
dec
inc
sub
fisttpl
mov
mov
pop
jecxz
test
inc
ja
incl
movsb
fistl
mov
int3
popf
jo
les
add
mov
loopne
aas
mov
pop
pop
push
cmc
clc
mov
ret
mov
adc
lret
rclb
dec
cs
notb
fst
cld
jo
sub
pop
pop
mov
xor
les
shl
clc
xchg
sub
roll
rcll
add
and
add
pop
in
stos
in
inc
push
rol
mov
insb
lea
push
xor
ficompl
add
scas
pop
mov
inc
add
lret
fcmovnbe
xchg
xchg
and
jae
loope
dec
inc
fwait
jecxz
pop
js
pop
push
cmp
loop
sub
cs
pop
sti
mov
jp
aam
add
inc
and
lret
mov
loope
loopne
addr16
in
cs
icebp
sub
mov
imul
inc
inc
mov
sub
push
out
fisubrs
test
cli
mov
mov
in
lds
mov
aas
scas
mull
mov
ret
movsl
inc
mov
or
add
jecxz
js
fidivl
jno
jb
loop
xlat
mov
lea
inc
fcmovb
cmc
repnz
pusha
jo
push
insl
mov
jge
jg
pusha
pop
push
stc
fstps
cmpb
cmp
pop
add
pop
dec
cwtl
addr16
adc
repnz
mov
dec
adc
rcr
andb
cli
aas
fcomp
scas
xor
sub
xor
push
mov
mov
xor
push
jb
stc
or
pop
mov
sub
aaa
rorb
std
inc
filds
repz
push
xchg
std
movsl
fnstenv
adc
inc
xchg
ds
and
push
sarb
and
popa
fstpt
js
mov
fs
movsl
jp
xchg
add
sub
ja
rcrl
inc
pusha
pop
rcrb
rorl
repz
out
push
add
cld
cs
aas
xor
or
lock
lock
push
lcall
fistpll
out
fldl
jg
xor
push
cmp
xchg
mov
cmpb
sbb
mov
dec
test
xchg
test
insb
cld
pusha
stos
pop
ror
ljmp
sti
hlt
cld
ss
mov
push
jno
repz
or
mov
lods
loop
popa
sahf
lcall
outsb
jmp
out
movsl
sbb
sub
and
or
add
loope
push
popa
or
cmovp
add
add
xchg
movsl
fistpl
fldcw
test
inc
inc
xchg
cmp
data16
lret
cmc
lcall
xor
adc
jl
jne
cld
scas
dec
ja
sarb
sub
xchg
xor
push
pop
and
popf
fincstp
xor
dec
fstpl
mov
js
and
add
cmpsb
xor
jae
mov
lods
in
in
mov
cmp
out
fwait
adc
out
aad
lods
loope
pop
mov
pop
arpl
cmc
sahf
ss
pop
jb
inc
shr
in
inc
stos
push
cltd
push
jo
popl
push
das
fisubrl
jne
dec
push
sub
push
add
xor
enter
jnp
jge
jo
loopne
mov
cmpsl
or
sti
pop
inc
addr16
adc
mov
pop
push
sub
jno
pop
popa
cmp
cmc
addr16
mov
loopne
aad
mov
push
clc
push
or
into
push
cmpsl
add
cmp
mov
outsl
movsb
adc
pop
out
mov
push
push
lahf
loope
cwtl
inc
sub
xor
xchg
adc
cmp
pop
ret
in
shl
jmp
cmc
mov
lcall
adc
pop
xchg
sbb
loop
sbb
loopne
imul
jb
and
mov
cmp
pop
xor
call
mov
mov
rcl
repnz
dec
push
insl
jmp
out
jo
ret
fdivr
and
stc
xor
add
aas
fstpt
cltd
mov
inc
lock
mov
sbb
xchg
loop
leave
aas
scas
repnz
push
lock
cmp
xchg
lret
pusha
mov
pop
sti
or
xchg
or
pop
loope
scas
imul
cmp
fdivs
mov
push
inc
add
nop
nop
cmpsb
xlat
mov
in
adc
cmp
sub
vpsubd
andl
sbb
pop
cltd
out
push
mov
outsl
fdivrl
lcall
inc
and
xchg
sub
dec
xor
stc
inc
cwtl
sti
shlb
sahf
adc
jb
inc
in
mov
jmp
or
mov
inc
insl
cli
ficompl
loope
ss
inc
xor
flds
inc
mov
xchg
rcrb
dec
xor
pushf
mov
dec
popa
mov
xchg
out
movsb
adc
mov
inc
dec
lock
inc
xor
and
sahf
push
and
inc
lds
fwait
sub
enter
ljmp
dec
adc
push
sbb
ss
fcomps
add
out
cs
scas
inc
inc
inc
jecxz
lds
jnp
add
cwtl
mov
ja
sti
aas
aad
add
add
jbe
cmp
inc
in
mov
mov
scas
fbstp
iret
inc
repz
in
orb
push
mov
loopne
dec
mov
rclb
add
in
pop
mov
in
fwait
lods
xor
outsl
fisubrl
lock
xchg
lds
xchg
in
xor
out
cld
add
adc
pop
sbbb
mov
mov
push
mov
and
addb
mov
cmp
add
push
popa
pop
rcr
lock
out
lahf
add
movsl
dec
inc
sbb
xchg
lods
shlb
shlb
xchg
sbb
jae
test
in
xor
xchg
mov
jp
dec
cmc
inc
pusha
daa
cmp
dec
mov
fcoms
loop
mov
push
lret
cs
jb
inc
ds
test
aam
sub
or
insb
stc
int3
out
stos
je
ficompl
sub
add
outsb
aad
out
pop
jns
das
ret
sbb
lret
ds
aad
xchg
lea
or
ds
sbb
lret
dec
fwait
lahf
mov
push
xchg
aas
push
adc
or
mov
jbe
ficoml
jge
test
into
cmp
out
add
add
lds
repz
and
pop
push
pop
scas
and
jo
jne
into
pop
sbb
dec
dec
mov
mov
std
xlat
inc
pop
or
pop
jno
call
nop
leave
sbbb
inc
in
fwait
dec
cmp
xchg
dec
mov
mov
scas
iret
fisubrl
push
jno
lock
hlt
in
hlt
jae
ja
mov
rcrl
pop
jmp
outsb
inc
fcoml
or
iret
dec
outsl
frstor
xor
mov
mov
aad
mov
call
int3
add
push
rcl
lret
out
mov
stc
dec
mov
sub
mov
mov
sbb
mov
mov
pop
and
test
cs
ds
and
out
loopne
mov
jnp,pn
decb
clc
and
cli
outsb
jmp
fistps
es
stos
aam
imul
dec
lret
dec
movsb
push
cmp
repz
add
mov
mov
cli
mov
push
out
cmp
insl
enter
xor
add
sub
mov
pop
cwtl
or
and
and
fimull
mov
das
int
icebp
dec
mov
scas
cmp
or
mov
dec
fimuls
or
jecxz
pop
add
std
fxch
cmp
cli
fwait
pop
repnz
repz
cmp
subb
int3
jmp
stos
pop
movsl
loope
sub
aas
test
push
mov
add
fdivrp
gs
jbe
xlat
push
out
sub
xchg
mov
or
and
jmp
in
and
int
shl
mov
bound
cld
loop
mov
xlat
sbb
add
mov
iret
loop
clc
jne
dec
push
sub
mov
les
adc
ret
int
ds
movsl
pop
pop
dec
inc
loope
int
mov
fidivrl
jo
out
add
cmpsb
cmp
sbb
xchg
push
add
dec
rclb
jno
adc
cwtl
popf
mov
xor
cmp
cmp
mov
cmpsb
adc
add
push
in
pop
mov
mov
and
leave
jns
add
ficompl
jmp
mov
enter
in
inc
xchg
sub
pcmpeqd
push
mov
xor
lret
imul
sub
out
aas
jb
dec
in
and
or
add
xchg
mov
shll
sbb
dec
pop
aam
sub
adc
adc
in
out
sbb
fcoms
lock
loop
insb
into
push
xor
aam
sahf
or
jle
outsb
inc
in
dec
arpl
je
sub
mov
mov
sbb
jb
je
pop
int3
lods
and
xchg
sub
add
sbb
jg
movsb
pop
add
rol
mov
push
mov
aad
or
sbb
fiaddl
mov
lods
push
cmovs
shrb
movsl
rcrl
pop
and
mov
lds
mov
xor
inc
cmp
jl
gs
scas
shrb
sbb
adc
pop
cwtl
lea
sub
ss
into
dec
leave
in
dec
vcvtss2sd
mov
pop
push
sub
cmp
add
mov
stos
loopne
fsub
mov
cmpsb
mov
aad
loope
cmp
lcall
lock
dec
imul
jmp
cmp
jnp
stos
jmp
xchg
test
repz
mov
repz
rorl
and
test
jp
xchg
push
sub
push
mull
les
int
fmuls
push
pop
push
push
push
test
pop
rcr
cmc
and
movsl
cmp
or
aad
aam
or
gs
jno
fsts
iret
aam
repnz
adc
pop
and
jl
xchg
imul
jne
scas
fwait
pop
fstp
dec
fwait
mov
inc
and
fwait
pop
jbe
in
lret
push
and
mov
mov
cli
add
test
jmp
das
push
pusha
cwtl
cmc
movsl
es
aad
cld
push
fwait
inc
pop
cltd
or
push
xchg
mov
fldl
iret
stos
sbb
add
sbb
mov
xchg
arpl
mov
xchg
and
mov
xchg
dec
idivl
pop
loop
cmp
test
incl
repnz
rclb
fidivrl
out
xor
nop
sub
pop
inc
xor
aad
scas
sbb
push
lods
pop
xorb
out
mov
inc
push
into
lret
jnp
xor
shlb
dec
or
or
faddl
mov
outsl
out
ljmp
or
loope
or
dec
add
lcall
fwait
xor
add
xchg
idiv
jne
add
out
mov
lret
pusha
jnp
adc
int3
mov
nop
mov
leave
push
dec
outsl
and
inc
loopne
insl
push
dec
mov
leave
int
mov
pop
and
mov
mov
xchg
out
dec
adc
lock
jo
pushf
and
ljmp
or
xchg
push
xchg
lods
add
daa
mov
add
les
add
rclb
ficompl
das
lds
std
push
cld
sub
stos
ljmp
mov
xchg
lcall
xchg
loop
push
add
inc
mov
repz
xor
inc
push
inc
pop
jnp
jl
sahf
sub
dec
shll
popf
rolb
imul
mov
mov
mov
pop
push
filds
mov
push
fimuls
sbb
std
stc
and
test
inc
push
fsubrl
sbb
push
mov
ret
mov
add
daa
sub
push
in
mov
in
cmp
push
or
and
enter
into
rcll
inc
addr16
adc
cmpsb
icebp
xor
xchg
sahf
cmp
popf
outsl
mov
mov
loopne
and
cmp
in
add
aam
andb
ljmp
mov
fisttpll
push
test
sbb
loopne
outsl
or
sbb
mov
sbb
int
shl
cmp
and
push
push
stos
jns
pop
and
and
add
cli
mov
lods
xchg
outsl
inc
sbb
jnp
cmp
xchg
popf
sti
mov
sub
addr16
xor
ss
das
adcl
testl
add
arpl
adc
mov
pop
mov
jns
push
dec
rolb
mov
push
stos
and
cmp
xchg
aam
fnstsw
pop
inc
clc
enter
shlb
fwait
cs
xor
pop
aad
cli
insb
iret
mov
jle
cmp
inc
xor
sub
in
push
add
rcll
push
addr16
pop
or
clc
rolb
jbe
sbb
lods
adc
mov
mov
call
mov
dec
cmpsl
xor
cmp
fdivrl
sbb
dec
adc
push
push
cli
and
jns
jb
fdivl
test
xchg
mov
cli
repnz
lods
paddusw
test
aad
pusha
adc
sbb
xchg
fwait
int3
sbbl
sub
mov
inc
sbb
pop
pusha
xchg
jge
pop
jb
jno
and
shr
fs
dec
sub
imulb
or
out
iret
adc
mov
jg
adc
push
popf
subl
sbbb
add
leave
or
cmp
arpl
jb
jecxz
iret
outsb
and
notb
xchg
scas
dec
fs
jo
adc
inc
mov
gs
jle
or
sub
aaa
adc
inc
mov
aaa
xchg
cmpxchg
mov
lods
std
movsl
jmp
ds
sbb
fidivs
out
sub
lahf
cmp
jle
and
mov
cmp
ret
scas
jno
ret
cmp
movsb
add
fcomps
mov
push
sarl
imul
xchg
sub
xor
cli
pop
mov
ds
js
inc
rcll
push
shrb
lods
fisubrs
stc
cli
lahf
push
jns
in
les
cmp
in
in
dec
ret
ja
fs
mov
in
and
pusha
std
dec
pop
out
addb
sarl
lcall
mov
push
leave
sub
jb
inc
dec
cmp
test
add
js
inc
out
sbb
sub
mov
repnz
pop
pop
xor
pop
insl
sahf
sahf
push
add
sub
lret
lds
aas
mov
cmpsb
bound
or
push
in
bound
lahf
out
jns
cmp
xchg
inc
push
cmp
subl
push
out
pusha
push
or
sub
aas
fmull
orb
xor
fs
inc
shlb
adc
lcall
push
sub
testb
push
and
repnz
aaa
jecxz
shl
dec
dec
and
and
mov
cmpsb
cmpsb
pop
sahf
stc
repz
scas
rorl
cmp
jmp
xorb
test
fcoms
mov
adc
addr16
popa
movsl
pop
pop
cmpsb
lcall
push
and
cmp
jb
dec
jecxz
int3
outsb
sub
sub
mov
test
jbe
nop
and
pop
into
mov
push
in
adc
cmp
and
sub
inc
mov
sbb
lret
add
mov
dec
push
or
sbb
std
fimuls
mov
cmpsl
leave
insb
jo
pop
clc
lea
sub
popf
add
outsb
ljmp
push
jno
or
add
mov
roll
or
shrb
es
dec
je
leave
sbb
nop
mov
scas
popf
jbe
cld
mov
jg
mov
in
mov
mov
xlat
mov
push
and
mov
add
push
lcall
jns
das
sarl
into
push
scas
xor
lods
das
in
mov
jno
idivb
sarl
or
xchg
pop
cmp
xor
in
add
mov
cmp
out
adc
sar
add
or
fiaddl
gs
pop
movsb
pop
xchg
cmpb
ret
cmp
aaa
hlt
in
fwait
cmpsb
pushf
aam
mov
dec
xor
sar
add
mov
cmp
jl
mov
dec
mov
cmp
push
add
jp
dec
scas
popa
adc
jge
cs
cld
mov
fsubl
mov
jnp
stos
mov
xorl
and
inc
add
mov
in
clc
loope
dec
rcr
lret
lds
add
push
push
das
fmull
frstor
xchg
fisubrl
stos
dec
mov
test
in
lret
fs
mov
mov
mov
mov
jp
cwtl
test
inc
push
xlat
dec
push
out
imull
fildl
data16
dec
outsb
cmp
xchg
mov
jns
sub
ds
movsl
adc
adc
jl
pop
int
adc
stc
repnz
jmp
pop
mov
inc
shrb
icebp
outsl
mov
mov
pop
fcoml
xchg
sub
pop
into
adc
stc
and
bound
xor
mov
inc
or
add
arpl
mov
test
imul
lret
adc
cmp
mov
stos
aaa
scas
xchg
fisubl
lahf
lds
movsb
cli
stc
or
pop
scas
sub
xchg
and
in
jo
dec
aas
add
or
add
pop
xchg
je
cmp
mov
dec
lds
jns
mov
mov
jb
or
xchg
frstor
ficompl
fwait
jno
cli
cld
pop
lea
jecxz
cli
imul
cmc
lret
dec
mov
lcall
rcrb
ds
fcmovnu
jg
out
pop
js
nop
addr16
mov
lret
push
lock
lret
pop
imul
or
decl
sahf
cs
adc
cmp
push
inc
add
gs
inc
xchg
into
sbb
cmpsb
and
push
std
gs
imul
cmp
dec
fldenv
pop
mov
mov
jle
dec
sub
dec
jl
sub
cmp
ret
mov
mov
add
cli
mov
cs
dec
imulb
flds
imul
notl
sahf
and
shl
cmc
lcall
ret
cmp
add
lock
cmpsl
es
jns
fisubs
cli
pop
cli
ret
dec
adc
fstpt
ja
push
xchg
add
out
not
rcrl
pop
lods
aad
lods
and
dec
scas
mov
xchg
pop
fwait
rcll
ficomps
dec
dec
xor
or
aam
test
jb
or
dec
mov
aad
ljmp
push
out
iret
or
jle
xor
or
push
jecxz
or
not
ret
xchg
sub
dec
dec
cli
roll
mov
ljmp
movsb
cmp
sbb
stc
xchg
hlt
out
pop
xor
and
ljmp
mov
xor
mov
push
fdivs
and
dec
adc
adc
sti
lock
out
and
xor
sahf
enter
aad
jg
loope
lret
mov
adc
loop
adc
mov
cmpsb
lods
push
push
ds
clc
fld
fstps
or
sbb
dec
mov
aas
mov
loope
inc
xor
push
dec
jbe
add
shrl
xchg
adc
mov
xchg
fdivr
out
stos
xchg
call
aam
lcall
push
rol
sbb
mov
sub
cmpsb
cmp
aaa
adc
stos
jb
xor
fucomp
lret
mov
cmc
jne
mov
sbb
mov
cwtl
popa
das
adc
cli
inc
cmp
xor
aad
inc
sbbl
fs
push
mov
cmp
sub
outsb
movsl
mov
cmpsl
jl
sbb
push
xchg
pop
jl
add
sbb
sub
mov
out
shlb
jecxz
sbb
inc
push
fistps
lcall
je
mov
xor
xchg
ds
std
sbb
pushf
cmp
sbb
pop
push
idivl
js
shll
stos
push
mov
js
sbb
pusha
mov
test
cli
and
dec
mov
jne
jecxz
ss
dec
lock
cld
insl
add
xchg
jb
mov
flds
mov
cli
mov
mov
test
pop
push
add
scas
ret
fisubl
push
pop
push
fidivl
in
sti
call
mov
mov
lods
mov
call
jb
sbb
sbb
nop
cmp
sar
pushf
aas
mov
mov
xchg
filds
in
jmp
loope
pop
dec
sub
jns
pop
push
leave
scas
cmp
dec
je
lahf
andl
adc
inc
pusha
icebp
xchg
adc
adc
cli
sbb
iret
ljmp
xchg
inc
hlt
add
jg
clc
push
sub
cld
push
mov
les
mov
fsubrl
decl
adc
loop
jecxz
fldcw
add
adcb
and
xchg
test
push
fimull
pop
loopne
cmp
outsb
push
mov
test
cld
arpl
inc
pushl
lcall
jp
mov
cmpsl
sub
push
push
das
mov
and
lcall
sub
mov
xchg
stc
mov
out
ficoml
push
scas
lret
repnz
inc
rclb
push
clc
cltd
cmc
add
cmpsb
cmp
mov
in
fildl
loope
dec
dec
aaa
push
push
pop
inc
imul
mov
jp
lods
or
imul
inc
and
xchg
mov
fiaddl
cmp
ficomps
sub
dec
ds
mov
jmp
roll
aad
cmp
pop
stos
push
pop
sub
mov
scas
call
or
in
pop
divl
pop
popa
lods
xlat
jp,pn
ficomps
mov
jmp
rclb
icebp
mov
push
loop
xorl
jns
mov
jns
adc
or
jmp
dec
mov
clc
int3
inc
ret
jnp
cs
test
add
pop
int
xchg
inc
mov
ja
fstpt
add
es
cld
add
les
cwtl
jmp
or
fmulp
xchg
adc
cmp
inc
inc
push
pop
mov
push
mov
stc
pop
cli
dec
in
adcl
aad
jge
and
sarb
lods
repnz
inc
in
aad
fisubl
pop
sub
xchg
jp
sbb
lea
jae
loop
fldt
mov
jl
lahf
fiadds
ret
mov
cmpsl
mov
inc
out
pop
cmp
push
int3
cmpsl
and
pop
negb
jbe
lock
mov
mov
loopne
mov
iret
negb
sub
lock
inc
push
cmp
jb
stc
push
inc
testl
push
jo
lock
adc
out
loopne
add
mov
jp
rol
pop
dec
ror
cmpsl
in
dec
outsb
stos
aad
xchg
mov
cmc
outsb
in
out
popf
mov
shrb
push
scas
shrb
xchg
leave
outsb
icebp
mul
arpl
test
mov
jle
add
notb
loop
dec
adc
fildl
cmc
jp
fmul
sarl
mov
lahf
add
fadd
sbb
fildll
sbb
mov
or
jo
cli
pop
xor
mov
or
ret
push
pop
cmc
sbb
cmp
xchg
add
repnz
imul
popa
xchg
jne
sar
xor
test
and
cli
cmp
mov
fmulp
loope
xor
std
lea
xor
jbe
sti
orl
xchg
adc
add
inc
loopne
jle
xorl
push
int3
xchg
mov
pop
insl
es
jbe
mov
pop
add
dec
std
scas
push
mov
cmc
push
out
es
push
dec
mov
sub
rcll
mov
in
fidivrs
push
pop
or
push
push
imul
test
hlt
leave
jg
sbb
pop
sub
not
jle
push
sub
sbb
xchg
mov
aam
or
lods
fnsave
push
hlt
sahf
sahf
mov
sbbl
adc
xchg
jecxz
jmp
mov
fsubrl
lock
ds
dec
pushf
jl
outsb
stos
leave
fldenv
leave
sahf
mov
jg
lret
clc
xchg
push
stos
hlt
or
jb
cmpsl
sub
mov
inc
push
pop
xor
rol
pop
mov
repz
pop
repnz
pop
add
inc
aam
xchg
lahf
test
fmuls
mov
cmp
xchg
dec
shl
imul
int3
mov
xchg
pop
push
lods
movsb
decl
and
sub
mov
imul
adc
or
xchg
cltd
lret
mov
addl
fidivrl
pop
call
jbe
call
jnp
sbb
xchg
ss
mov
bound
int
ficompl
test
pop
movb
add
jge
in
mov
ret
addb
pushf
fucomi
lahf
out
jbe
xor
jle
and
add
sbb
hlt
fsubrs
add
out
sub
testl
dec
add
loopne
and
or
mov
inc
lret
subl
push
popf
sahf
test
xor
out
mov
test
popa
mov
pop
sahf
sub
stc
fdivr
lods
mov
bound
test
jl
iret
cmp
dec
add
pop
cli
jo
dec
dec
and
pop
inc
adc
ds
scas
cmc
adc
mov
jmp
fcmovbe
stos
test
aam
xchg
mov
ljmp
lock
cmp
cmc
fsubs
or
or
ror
lcall
rorl
sarl
lret
push
inc
sbb
or
cs
push
rolb
aam
repz
lods
dec
mov
shl
cmp
addr16
adc
sbb
in
data16
dec
jmp
mov
jp
mov
fmull
push
sbb
scas
xchg
mov
loopne
xor
or
test
jge
adc
add
xchg
jl
sub
mov
mov
test
mov
inc
mov
jae
aad
or
cmc
shl
xchg
mov
mov
mov
stc
fwait
xor
cld
xchg
loop
sub
dec
or
mov
mov
jle
cmp
dec
mov
rcr
gs
test
cli
xchg
sub
test
cmpsl
dec
pop
and
ret
in
xchg
dec
add
xchg
pop
adc
jns
xchg
xchg
add
cmp
add
xlat
jns
xchg
inc
pusha
fistl
adc
xor
rcrl
std
mov
lods
notl
ljmp
aad
jge
mov
in
sti
jne
loopne
jmp
add
add
cli
jo
sbb
roll
xchg
inc
aad
pop
out
call
add
movsb
test
push
lret
xor
jo
fwait
pop
orb
mov
out
dec
jge
and
xchg
adc
push
es
insl
loope
jb
mov
lahf
out
sub
jns
mov
pop
int3
repnz
push
popa
mov
or
leave
ljmp
subb
lcall
outsl
leave
out
jo
jl
xor
shll
cmp
insl
sbb
insl
inc
and
scas
mov
mov
fisubrl
jns
cmp
fisubs
adc
iret
or
mov
push
scas
or
cld
xchg
sub
xchg
mov
pushl
and
fildll
or
xlat
cmp
xor
mov
pop
pop
adc
sbb
mov
ficoms
scas
mov
xchg
cli
xor
lret
mov
push
sbb
lock
daa
and
data16
fs
orb
push
mov
sub
fstp
cli
call
mov
leave
and
rcr
call
ja
xor
subb
outsb
aad
mov
push
lea
int
adc
push
test
add
ja
lret
sbb
xchg
pop
addl
push
aad
cmc
and
xor
push
int
adc
pop
and
out
fimull
ficoml
stos
in
js
mov
jecxz
sub
test
int3
pop
lcall
add
aad
jp
stc
bnd
pop
aas
lock
iret
orb
scas
loop
sub
cltd
shll
popf
or
push
lea
inc
or
adc
adc
inc
jle
out
pop
lock
sbb
scas
jo
mov
jle
idivb
adc
adc
dec
imul
call
pop
into
and
ffree
jnp
push
ds
pop
js
xor
stos
xchg
push
nop
sbb
std
outsb
and
push
lahf
sbb
or
shrl
jno
dec
rorb
repnz
iret
jp
aas
mov
mov
rolb
cmp
xor
and
div
cmpsb
sub
stc
xor
pusha
add
fstpl
aaa
mov
faddp
pop
movsb
inc
nop
addl
pop
js
fsubp
adc
popa
dec
and
xchg
cs
xchg
add
jge
aaa
fsubr
mov
leave
xchg
ret
sub
cmp
lds
jne
add
ret
rorb
mov
inc
int
pop
push
and
je
cmp
inc
je
insl
cltd
inc
out
fdivl
mov
lea
add
mov
add
lea
gs
inc
mov
push
arpl
lock
lock
xor
or
add
fwait
sti
push
fsubs
or
xor
sbb
std
sub
jp
mov
iret
es
adcb
ret
sub
jb
lret
test
cmp
gs
jnp
dec
nop
add
xchg
xlat
pop
cmp
aam
arpl
mov
push
rolb
test
mov
aas
and
imul
loopne
insb
cmp
imul
fldenv
popf
mov
out
or
and
enter
stos
cmp
aaa
mov
loope
pushf
rclb
mov
outsl
incl
inc
faddl
div
filds
mov
in
hlt
decb
movsl
dec
add
dec
loop
mov
fcmovne
jne
lock
push
in
clc
xchg
bound
mov
jle
shlb
ffreep
cmpsl
push
ljmp
std
stc
sbb
subb
imul
pop
cmpsl
scas
rolb
popf
lret
ret
add
fs
rcl
repz
mov
xor
add
aam
repnz
jp
mov
mov
lret
pop
push
arpl
pushf
mov
xlat
pop
dec
xor
cltd
pop
inc
add
in
adcb
sahf
jo
jmp
xor
and
js
jecxz
int3
nop
aam
cmp
inc
pushf
lods
mov
inc
xchg
lret
ja
sbb
xchg
sub
cmp
inc
inc
mov
jmp
in
adc
mov
xchg
mov
idiv
cmp
sbb
mull
xor
mov
into
cli
rcr
scas
addr16
icebp
test
in
inc
in
jbe
mov
ljmp
sub
inc
add
fsubrl
mov
stc
sub
sti
into
sbb
mov
pop
fistl
mov
push
cmp
fisttpll
lds
nop
mov
je
nop
lock
loop
adcl
xchg
stc
cmp
xor
pop
roll
movsl
dec
or
push
dec
lds
in
ds
or
sbb
push
xor
aas
jmp
xor
aad
xchg
arpl
sub
mov
add
push
cmpsb
iret
adc
sub
push
adc
lea
push
or
lcall
lahf
xor
dec
movsb
out
mov
mov
mov
stos
les
lock
pushf
mov
mov
xchg
mov
std
inc
xor
shll
fimull
cld
mov
sbb
aam
cmp
mov
aas
and
fidivs
aad
rcr
stos
add
pusha
add
dec
inc
leave
pop
fiadds
push
shrb
outsb
push
dec
movsb
inc
clc
jns
cmp
xchg
testb
push
cld
in
outsl
cmp
adcb
loop
and
inc
test
dec
outsb
jae
or
jnp
fcmovnb
mov
cltd
std
mov
sti
pop
out
ljmp
imul
add
out
fnstcw
cs
clc
test
rolb
cmp
addr16
pushf
push
mov
stos
push
xchg
pop
fiaddl
lock
add
pushf
xor
data16
mov
inc
add
sub
fists
jae
out
jmp
movd
inc
cmc
arpl
mov
xchg
std
adc
inc
add
repnz
jae
fmuls
or
sbbb
sbb
lods
sahf
jns
xor
xchg
push
int3
jmp
mov
pushf
ljmp
imul
int3
xchg
cmp
pushf
inc
add
lock
adc
push
pop
das
sub
sbb
mov
add
and
iret
jo
pop
mov
fadd
fs
adc
addb
pop
dec
mov
mov
inc
es
call
bound
rclb
call
mov
dec
mov
add
push
jg
ljmp
sub
movsl
xchg
gs
sub
imul
jo
out
aas
iret
or
dec
lock
ret
fdivl
in
inc
add
cmp
xchg
aam
xchg
aaa
inc
gs
out
mov
dec
cwtl
jb
xchg
jp
out
jae
add
mov
mov
jmp
pop
push
sub
inc
imul
and
into
loopne
repz
or
ror
jp
outsb
adc
inc
mov
mov
andps
inc
repz
subb
adc
es
mov
lock
pop
mov
and
xchg
loop
stos
xchg
sub
jp
or
cltd
and
mov
lea
loop
pop
sub
testl
out
or
aam
aad
cmp
xchg
add
pop
iret
int3
stos
fdivp
cs
sbb
or
sub
or
cwtl
adc
jge
cmp
mov
adc
cmp
insb
jbe
xor
das
incl
test
in
mov
inc
pushf
in
push
xor
movsb
mov
imul
push
or
ficoms
aas
das
pop
cmc
inc
jge
stc
pushf
fists
gs
inc
outsb
push
lret
iret
inc
rclb
xor
xor
iret
add
imul
mov
leave
push
rorb
pop
out
jnp
ficomps
sub
or
xor
mov
mov
mov
insl
jp
testl
or
push
in
xor
stos
lock
out
cmp
fisttpl
push
or
inc
nop
mov
out
stos
ret
pop
xchg
fildl
dec
pop
imul
nop
mov
adc
mov
add
aas
mov
xor
in
cmp
xchg
icebp
aaa
jecxz
mov
adc
xchg
out
ret
add
ljmp
push
or
jl
fisubrl
mov
inc
je
aaa
out
fistl
loopne
mov
pushf
jp
cmpsl
mov
insl
jae
mov
mov
aaa
adc
lcall
mov
fucom
cmpsl
cwtl
mov
add
mov
dec
push
add
adc
dec
std
mov
xor
or
push
cmp
mov
ja
xchg
mov
cmp
jl
loop
cmp
imul
mov
lahf
insl
and
inc
adc
inc
ja
sub
pop
jns
push
add
add
add
xchg
fsubrl
in
fdivl
sub
popf
push
scas
mov
pop
mov
test
cmpb
xor
aam
jnp
fcmovnu
stos
aam
adc
shl
mov
scas
out
rclb
cld
sub
insb
mov
std
lods
ljmp
cmp
push
std
fwait
jo
mov
inc
sbb
lods
add
sbb
add
or
test
dec
jmp
xor
jecxz
add
adc
or
lods
inc
adc
out
jmp
sbb
pop
fisttpll
or
ficoms
aaa
pop
inc
mov
pop
sbb
pushf
add
stc
das
xor
jbe
jns
fisubrs
push
movsl
mov
stos
pop
push
xchg
aaa
mov
xchg
cmpsb
repz
inc
out
int3
filds
lret
adc
dec
jge
pop
jle
jne
sbbb
add
xor
dec
ficompl
xchg
aad
xchg
repz
push
and
xchg
loope
fldln2
bound
dec
adc
xchg
rcrb
inc
imul
pusha
fcmovnb
ss
dec
jge
imul
jo
iret
aam
stos
cld
jne
iret
in
jno
pop
mov
push
fistpl
xchg
in
sahf
ds
xchg
xlat
call
clc
xchg
sahf
sub
xor
xorl
inc
outsb
mov
out
enter
arpl
std
adc
xor
push
stos
push
add
pop
je
stc
or
xchg
pop
xorl
sbb
idiv
push
sub
jb
movsl
in
mulb
xchg
cs
jbe
aad
nop
adc
loopne
cmp
add
sbb
mov
shlb
push
pop
jmp
neg
js
sti
cmp
pushf
adc
inc
loopne
jnp
js
jp
out
decb
stos
push
inc
subb
mov
push
jp
lods
inc
rclb
mov
sbb
jg
inc
movsb
dec
mov
aam
testb
inc
mov
dec
push
adc
sarb
fisubs
add
pop
add
mov
xor
iret
xchg
or
push
mov
mov
jne
scas
icebp
and
jle
adc
sbb
cmp
mov
into
std
cmpsb
and
ljmp
jbe
xlat
or
xor
aas
aad
repz
movsb
aad
or
adc
pop
test
leave
aam
push
aad
mov
out
pop
mov
lods
push
pop
fsts
cmp
sub
lds
dec
std
or
mov
adc
cltd
push
add
movsl
pop
fstps
adc
inc
push
push
rcrb
repnz
cli
xchg
adc
jge
stc
int3
sti
lahf
aad
adc
insl
aas
nop
pop
data16
ds
es
icebp
ljmp
pop
outsl
int3
push
dec
addb
ret
dec
out
leave
popf
daa
adc
cld
fbld
pusha
popw
int3
sbb
inc
in
mov
inc
mov
icebp
andl
mulb
push
push
dec
pop
lock
xor
cwtl
sub
inc
push
and
mov
cs
dec
loope
mov
push
push
iret
cs
xor
and
xchg
fsubl
sub
and
lret
inc
fbld
xor
test
pop
mov
add
jae
xor
ljmp
pop
xchg
daa
push
dec
jmp
cwtl
cld
add
sti
bound
inc
shlb
sub
xor
test
outsb
addb
fcompl
outsl
sahf
addl
outsb
imul
ficompl
push
arpl
aas
pop
sahf
inc
jo
cmp
push
jns
call
inc
inc
mov
and
push
daa
mov
mov
dec
cli
mov
cmpsl
and
inc
inc
ret
pop
repnz
jle
stos
sbb
je
sub
stc
pushf
mov
pop
cwtl
jno
sbb
outsl
pop
sbb
loopne
and
xchg
pop
lock
movsl
sbb
pop
mov
jle
or
mov
mov
mov
and
xchg
fistpl
xlat
mov
idiv
lret
mov
pop
faddl
xchg
and
fidivrs
inc
loopne
rcrb
fcoms
in
jle
push
pop
ljmp
cli
nop
xor
jg
pop
xchg
dec
xor
adc
lods
push
call
push
sub
shr
pop
mov
cmp
aam
and
mov
fsts
add
mov
jo
fldl
lods
jnp
loope
mov
sahf
or
repz
inc
dec
cmpsl
jns
addr16
lds
dec
fdivrl
jge
lcall
ds
push
sub
push
loop
pop
push
xor
dec
jae
imul
xor
fsts
idivl
lock
lret
and
push
popf
push
or
into
cmc
test
lret
aam
xchg
into
mov
jo,pt
gs
mov
xchg
insl
rorl
fsubrs
jmp
ljmp
orb
cmpb
mov
jno
jbe
jle
adc
inc
lcall
std
jmp
adc
push
jp
cld
jne
mov
iret
sub
cmp
pop
scas
inc
push
and
cmp
ds
push
push
xorl
loope
shl
inc
repnz
inc
rol
mov
into
sbb
push
outsl
pop
jo
rorb
shll
pop
push
add
pop
xor
sub
inc
mov
push
push
lea
and
or
sbb
adc
mov
stc
cmp
mov
jo
jl
imul
mov
jge
adc
mov
mov
cmp
mov
mov
ja
pop
and
sbb
add
movsb
add
sub
and
nop
shll
mov
xchg
pushf
cs
clc
insl
dec
bound
outsb
int3
shr
jle
push
cmc
sub
mov
les
cs
sti
inc
hlt
add
cmp
testl
mov
ret
mov
shrl
sub
test
mov
mov
xchg
mov
pop
daa
loop
add
rorb
adcb
out
cmpsl
sub
cmp
or
std
push
mov
adc
sbb
add
pop
cmp
int3
clc
rcrl
dec
or
ficoml
add
sub
loopne
popa
aad
mov
adc
add
lret
mov
inc
rolb
scas
repz
inc
push
negl
pushf
roll
stos
hlt
popf
nop
or
rcrl
scas
ja
cmp
jb
pop
mov
sahf
mov
sbbl
fdivrp
call
fadd
and
xor
cmpsb
pop
addr16
sub
scas
mov
les
arpl
enter
cmp
lds
inc
addb
jno
retw
cmp
jne
stos
push
push
xchg
inc
scas
outsb
fnstenv
push
arpl
mov
lret
mov
push
in
fdivrp
push
push
ret
stos
pop
mov
or
jl
jle
adc
scas
fdivs
fldl
sbb
rcll
testl
stos
xor
cld
test
scas
ja
mov
scas
jae
rolb
outsb
shll
mov
ds
es
pop
sub
add
pop
ja
stos
popa
sbb
lcall
rorl
add
rcll
xchg
lret
mov
cli
nop
into
add
repz
mov
gs
mov
fnstcw
cmpsb
data16
mov
push
int3
cmpsb
mov
pop
xchg
adcl
mov
fisubl
cmovae
out
mov
dec
test
lock
mov
iret
pop
sbb
push
nop
lods
test
loop
pop
lea
test
popa
cmp
mov
inc
and
call
adc
jge
mov
push
mov
xchg
dec
or
pop
mov
mov
mov
mov
andb
mov
repnz
out
insl
pop
and
stc
pop
push
pushf
loope
bound
shl
cmp
leave
pop
fsub
jne
mov
jmp
add
xchg
loop
mov
sahf
and
jmp
inc
loopne
xor
push
ficoml
fs
fsubp
push
test
das
bswap
sub
sub
lock
pusha
push
or
outsl
fsubl
push
ss
adc
mov
test
push
cltd
lds
dec
dec
adc
push
adc
sub
dec
test
out
xchg
fisttpl
aad
hlt
xor
scas
iret
pop
cltd
outsl
icebp
in
outsb
fwait
mov
dec
sarb
into
dec
add
shl
jno
pop
jp
adc
jne
inc
test
xor
stc
push
sub
xor
pop
push
pop
loopne
mov
push
rorl
mov
lods
mov
pop
aam
daa
pop
outsb
icebp
cmp
adc
icebp
xchg
sub
inc
rorb
clc
ret
mov
popa
add
pop
popa
mov
enter
aam
and
clc
push
rorl
pop
and
jl
flds
mov
and
and
movsl
add
call
in
inc
rcll
push
aad
adc
xlat
nop
and
xchg
cmpb
xchg
mov
out
sbb
jne
movsl
pop
add
leave
pop
inc
sar
into
sbb
nop
inc
lock
mov
or
add
mov
andl
push
call
sub
aam
push
pop
xchg
fsubl
inc
scas
rorb
mov
add
imul
adc
addw
lcall
jp
mov
insb
xchg
aaa
insl
call
das
sbb
arpl
and
test
jbe
shrb
pop
loop
mov
dec
mov
cmp
sbb
adc
fmull
inc
xlat
arpl
pusha
clc
xchg
dec
sbb
bound
rcrl
mov
add
cltd
in
mov
mov
shlb
call
js
sbb
outsl
and
cs
and
mov
dec
ret
iret
rcrl
nop
jns
enter
das
fisubl
js
fsubr
stc
push
inc
pop
in
push
pop
xor
dec
sbb
imul
out
stc
scas
test
mov
push
sub
stos
popf
fldcw
dec
pop
xchg
jbe
pop
xor
dec
shlb
in
movsl
mov
inc
aas
sahf
sub
add
fisubrs
pop
faddp
cmp
lods
call
jl
pop
das
add
dec
and
jns
cmpsb
movsb
les
or
jge
push
outsb
inc
push
jae
cli
sbb
push
mov
fcoms
fwait
jg
icebp
xlat
roll
mov
enter
mov
and
lds
std
xor
flds
sbb
sbb
aaa
xchg
lea
loope
imul
sub
je
inc
sub
sbb
in
aam
push
ret
cwtl
loopne
or
sbb
out
rorb
dec
mov
jp
std
ja
lods
cmp
mull
int
iret
pop
xchg
repnz
inc
mov
pop
or
dec
lcall
push
in
xlat
arpl
push
cltd
xchg
xlat
mov
mov
sub
dec
lock
mov
call
jo
or
loope
inc
and
ds
stos
pop
xchg
sar
jb
sub
push
and
adc
mov
fists
out
js
movaps
mov
xchg
and
std
or
aam
adc
jne
cmp
mov
insb
loope
jnp
and
ljmp
pop
aam
dec
mov
push
jl
ja
loopne
inc
and
inc
lock
incl
xor
add
mov
mov
adc
mov
loope
mov
mov
pop
rcrl
add
dec
mov
int3
xchg
xchg
fnstenv
pop
adc
aam
movsl
inc
outsb
roll
add
rorb
or
es
sbb
das
xlat
mov
mov
test
imull
xchg
pop
push
jnp
movsb
jge
arpl
mov
idivl
adc
cmp
dec
ficompl
jecxz
xor
test
mov
insb
fsubl
xchg
fisubl
fnsave
into
ds
pop
add
scas
cmp
push
pop
or
scas
jne
pop
mov
scas
addl
jo
mov
sahf
xchg
addb
mov
in
jle
in
enter
mov
insl
mov
scas
jp
xor
outsb
outsb
fs
sbb
test
adc
push
enter
fs
push
cmp
leave
push
loope
inc
sub
jge
lea
nop
xor
cmp
inc
popf
lcall
mov
cli
fstpt
mov
cmp
fbld
fdivp
cmp
cmp
mov
pop
cmp
push
jo
stc
inc
xchg
das
out
pusha
in
lcall
cmpsl
stos
stc
fdivs
xchg
jl
neg
pop
sub
push
sub
dec
popa
xchg
stc
shrb
push
iret
cli
fisttpll
dec
nop
insb
or
loope
mov
insb
push
mov
pop
and
dec
ret
mov
push
dec
rcrl
or
fdivl
dec
loopne
lds
stos
xchg
mov
icebp
rorb
sbb
daa
push
cli
push
cmp
jno
cld
test
aad
inc
rcrl
lcall
fnstcw
fcoms
pop
push
cmpsl
xchg
rcl
pop
mov
stc
sub
sbb
or
aas
mov
loop
inc
daa
int
fistps
enter
into
push
push
mov
cmp
add
loop
push
popf
push
icebp
xchg
jle
xor
inc
loopne
mov
xor
shr
movsl
mov
jb
xor
in
fistpl
shll
arpl
rorl
push
addl
stos
push
daa
jg
sarb
cmpsl
fldcw
mov
aam
jmp
ret
in
lods
mov
push
scas
mov
stos
lret
fdivrs
inc
and
insl
imul
arpl
mov
dec
rcrl
sub
lock
arpl
push
arpl
xchg
jp
int
xor
sub
std
sub
scas
ret
sub
test
cmp
es
push
ljmp
adc
cmpsl
fsubrs
inc
jbe
dec
add
subl
nop
sarl
leave
sub
sbb
inc
sub
rol
adc
lret
cmc
inc
lods
mov
or
sbb
adc
popf
mov
test
cmp
sbb
daa
fnsave
fs
or
push
jnp
rclb
inc
adc
fdivrl
pusha
movb
push
scas
push
test
xor
aam
in
popa
sbb
mov
mov
xlat
mov
shl
sub
pop
daa
mov
nop
or
and
mov
xlat
dec
adc
pop
and
das
fcomi
fcomps
add
hlt
leave
xchg
inc
test
xchg
test
sub
sarl
jne
leave
sub
jo
loopne
and
xchg
inc
cmp
mov
jge,pn
add
adc
sti
bound
lea
lods
xchg
push
mov
cmp
inc
adc
stos
cs
add
sbb
clc
imul
push
push
add
popa
or
inc
push
and
dec
jo
sbbb
inc
xor
mov
in
adc
into
xchg
loopne
jge
sbb
movl
sbb
out
push
and
push
fcmove
cmp
cli
dec
push
adc
shrl
sbb
push
mov
fnstenv
popa
mov
rcr
mov
sbbb
mov
inc
outsb
cwtl
pop
add
rcl
lret
cli
push
mov
shll
dec
mov
test
rcrl
mov
int3
push
outsl
jae
or
xor
dec
cli
ret
out
mov
add
outsb
mov
jae
sbb
xchg
dec
xor
lods
inc
jp
cmp
call
jmp
xor
das
orb
inc
xor
xor
push
ja
mov
push
adc
mov
jb
inc
inc
pusha
enter
cmp
mov
adc
mov
xor
mov
adc
in
xor
sub
add
or
sti
push
lods
fimuls
sti
push
inc
cmpsb
es
stos
es
jmp
cmp
dec
pusha
les
push
comiss
xchg
push
repz
ds
fdiv
sbb
mov
insl
jle
pop
mov
dec
cmp
push
dec
stos
mov
cmp
enter
out
sub
mov
push
je
push
pusha
push
dec
sub
dec
mov
shlb
andb
aas
mov
mov
sub
stc
sarl
fnsave
pop
or
jo
out
repnz
lahf
pop
cmpsb
ljmp
ret
xchg
push
or
and
imul
into
rorl
mov
sbb
aas
pop
loopne
mov
mov
mov
sbb
or
jo
mov
push
fists
pop
jae
inc
jg
and
xchg
cmp
jecxz
lret
pop
xchg
inc
pop
or
mov
pop
loop
repnz
dec
push
push
and
test
push
mov
gs
and
jo
mov
inc
mov
lods
iret
in
mov
orl
scas
pop
sbb
add
or
ds
frstor
push
pop
loope
pop
adc
and
repz
outsl
popa
clc
das
pop
fmul
dec
cmp
push
popa
cld
insb
stc
cli
rorb
mov
lods
in
mov
mov
bound
mov
sub
inc
hlt
mov
leave
rcll
and
inc
xchg
fwait
sub
rcrb
jb
push
loope
popf
jge
push
or
inc
inc
fxch
stc
lret
ficoml
pop
add
cmp
mov
ds
add
add
cwtl
loop
or
orb
outsl
icebp
repnz
cmp
sbb
push
fcoml
fiadds
pop
scas
lea
sarl
loope
cmp
ror
fidivrl
iret
mov
mov
aad
call
cmpl
mov
sbb
add
sbb
loope
pminub
js
xchg
push
scas
xchg
jns
push
sub
imul
dec
mov
repz
jmp
pop
filds
cmp
outsb
lods
and
push
push
dec
sub
movsl
xchg
cmp
cli
sarb
notb
xor
or
jo,pt
out
mov
aam
aam
and
test
jp
into
xor
cmc
mov
mov
aam
xchg
aas
divl
xor
lods
stos
jge
mov
rcrb
loope
sub
sbbb
test
lret
xor
inc
jae
or
cmpsb
mulps
push
pop
push
out
cmc
mov
mov
std
adc
add
cmp
fisubs
fimuls
mov
jo
dec
in
mov
push
cwtl
dec
mov
std
jae
push
jo
loop
pop
push
stos
in
les
add
xlat
add
arpl
ds
adc
in
test
nop
pop
ds
cmpsl
adc
sbb
lret
mov
adc
pop
mov
cmpsl
sahf
push
fmulp
out
xor
sahf
lcall
mov
and
and
inc
inc
push
pushf
jl
fndisi(8087
xlat
pop
ret
scas
jnp
jle
jo
jg
adc
mov
lcall
cs
cmc
mov
fwait
inc
cmovl
out
scas
xchg
ret
lock
pusha
cmp
loopne
xor
mov
cmc
inc
adc
dec
cld
sub
xor
pshufw
bound
push
jne
add
inc
insb
loopne
fisubl
int3
adc
inc
pop
mov
lcall
or
aad
sarl
push
xor
rorl
cmpsb
xchg
inc
pop
dec
mov
xor
xchg
aas
mov
repnz
stc
sbb
sbb
mov
mov
mov
roll
divb
push
mov
out
cld
jg
aad
arpl
mov
ds
push
mov
ret
add
into
pop
mov
adc
mov
sbb
dec
rorb
pushf
loope
lcall
fnsetpm(287
mov
imul
pop
pop
lock
js
data16
lods
mov
or
cmpsb
popf
inc
lret
inc
shll
js
inc
cmpb
mov
mov
push
pusha
pop
lcall
aad
decb
pop
dec
out
cwtl
filds
loop
pop
pop
or
fdivrp
js
add
stos
mov
sbb
arpl
xchg
in
lahf
and
cwtl
jae
dec
ret
and
rcrb
xchg
movb
cmp
faddl
xchg
aam
dec
adc
add
push
mov
sub
shl
sub
and
roll
decb
jo
jmp
std
sbb
cmc
sub
push
mov
mov
outsl
sbbl
jecxz
aam
pop
pop
pusha
adc
jg
ds
adc
mov
mov
roll
push
pop
stc
xacquire
or
cmp
mov
cmpsb
sbb
pop
bound
sahf
xor
mov
incb
jp
and
mov
daa
cmc
mov
fists
hlt
pop
inc
dec
repz
icebp
jl
out
mov
cwtl
lcall
jae
jo
pop
in
or
xorl
dec
iret
and
stos
jle
inc
dec
push
repz
lret
add
in
mov
mov
flds
mov
mov
xor
and
sarb
push
lock
mov
mov
sbb
aad
inc
mov
sbb
xor
sub
aaa
and
repz
push
bound
out
vrsqrtss
jbe
dec
imul
je
or
outsl
std
aad
iret
inc
cli
mov
xor
insl
inc
xor
and
rorl
fnstenv
pop
and
inc
nop
cwtl
push
fldenv
outsb
repnz
aaa
insl
hlt
not
cmc
dec
pusha
add
mov
adc
mov
test
hlt
in
push
or
pop
fnsave
outsl
xchg
sub
in
pop
or
adc
adc
push
ljmp
std
pop
inc
sar
pushf
into
xor
dec
push
leave
jg,pt
testl
and
pop
jae
rolb
cmp
add
xchg
dec
loope
fbstp
inc
stos
out
outsb
push
xchg
iret
xlat
ljmp
fucom
fsubr
scas
jmp
and
add
fs
sub
pusha
sub
cli
enter
lock
xor
xor
popa
xlat
push
bound
imul
loopne
int3
inc
dec
sarl
pop
inc
enter
mov
push
mov
xchg
and
popf
lcall
adc
out
jle
xor
adc
and
push
lock
add
dec
pop
xchg
sti
pop
cwtl
pop
push
rorb
mov
cmp
pop
xchg
add
pop
fcoms
sti
shlb
jb
pop
mov
shlb
insb
adc
xor
sbb
imul
lods
sbbb
das
bound
dec
andb
jb
mov
fildl
mov
scas
inc
outsb
xor
adc
xchg
and
push
scas
xchg
cli
pop
shlb
incb
mov
jge
popa
js
adc
popa
fidivrl
lds
jge
push
xchg
popf
pusha
frstor
fsubr
outsb
arpl
xchg
loope
stc
lods
adc
loop
xor
ficompl
popf
xor
fstl
ss
mov
xchg
gs
mov
call
mov
xor
and
xchg
mov
test
jne
sbb
sub
push
notl
jl
xor
jns
aad
les
adc
sahf
scas
push
lods
add
ljmp
pop
inc
add
or
sub
fsts
test
xchg
xchg
imul
add
dec
mov
inc
je
cmovns
je,pn
add
mov
fst
ljmp
xchg
dec
nop
xchg
sbb
imul
sub
xchg
call
sbb
xchg
outsb
in
js
or
xlat
sub
xlat
bound
push
gs
inc
vcvtss2si
add
jne
add
lock
negb
mov
mov
mov
push
out
jmp
xor
orl
rcrb
pop
cmp
aad
scas
push
mov
cmc
in
adc
aad
ret
insl
cmpsl
mov
cs
pop
cwtl
or
add
fisttpl
xchg
stos
inc
pusha
inc
cld
dec
pop
in
adc
fadds
jbe
mov
stc
negb
jp
jbe
inc
es
das
imul
mul
pop
mov
push
cmp
sti
xor
dec
scas
push
dec
mov
mull
jp
push
sub
das
xlat
into
repz
adc
fcmovbe
adc
das
popf
cmp
cmp
lret
insl
cltd
mov
fmul
push
mov
add
inc
and
inc
fmuls
sub
divl
rolb
xchg
les
loopne
shlb
inc
lcall
cmp
movsl
les
mov
mov
xor
xor
out
int
pop
les
cmp
mov
inc
ret
jl
mov
test
jne
test
into
xchg
sar
jno
jns
loopne
push
mov
clc
sbb
decb
cli
sti
jecxz
push
push
pop
push
add
nop
stc
movsb
loop
jge
ret
xchg
stc
shlb
test
and
xor
mov
dec
sahf
push
lock
test
add
or
mov
sbb
sti
cmp
jle
cwtl
imul
mov
into
stos
fmul
out
jae
loopne
pop
push
mov
and
fadds
xlat
xchg
test
cs
and
add
data16
lods
bound
adc
and
push
adc
sarb
pop
xor
or
hlt
jl
cli
and
sub
pop
pop
mov
ds
add
ficoms
fldcw
aas
or
inc
and
aam
ja
hlt
or
ds
mov
xor
rclb
sub
sbb
cmp
pop
stc
or
mov
out
xchg
add
adc
mov
mov
push
in
aam
adc
jae
mov
in
and
imul
je
data16
jp
lods
cmp
lgs
daa
dec
sbb
fnsave
enter
dec
insb
adc
mov
loopne
mov
sbb
aas
cld
ret
push
fmull
adcb
in
inc
adc
or
xchg
mov
xor
sbb
fstps
push
repnz
sbb
fldt
xor
shll
push
je
fists
ret
addr16
mov
divl
jp
and
inc
push
sbb
inc
cld
fists
loopne
sub
scas
in
imul
mov
xchg
dec
xlat
sahf
fsubl
xchg
jne
popa
pushf
ss
pop
mov
icebp
shr
notb
add
into
repz
cmc
int
jo
fdivrl
add
negl
mov
jl
jns
leave
pop
inc
sub
sbb
inc
lds
xlat
out
push
xlat
xor
imul
dec
movsb
hlt
shll
rcr
or
scas
lcall
adc
pop
jecxz
aaa
inc
fadds
inc
mov
pop
mov
cli
cld
add
mov
jo
cmp
mov
xchg
mov
xor
xor
adc
shl
push
mov
mov
push
or
aad
dec
lods
or
mov
pop
add
mov
shll
jp
adc
ljmp
leave
mov
imul
mov
insl
add
std
or
pop
dec
dec
dec
bound
movl
scas
in
cld
imul
mov
pop
popa
test
cmp
out
stc
inc
xor
lahf
lcall
add
cmp
pop
sub
dec
lret
sub
sbb
fsub
gs
xor
xchg
mov
dec
add
or
ret
subps
mov
loopne
push
ja
add
push
pop
popf
test
and
out
pusha
inc
push
mov
xchg
pop
and
dec
cmp
scas
push
bound
dec
iret
mov
xor
rcr
gs
dec
rcrb
dec
mov
iret
fs
sarl
rclb
sub
scas
cmp
add
jp
mov
push
ds
outsb
aam
and
pop
sbb
and
or
mov
adc
xlat
popa
jge
add
add
sarl
push
pop
push
xor
mov
dec
xor
popf
ret
bound
mov
outsb
jbe
jmp
cmp
jmp
add
mov
mov
jno
mov
aad
push
inc
xor
inc
hlt
jmp
sti
xor
popf
loopne
cmovo
insl
repnz
repz
push
jb
mov
daa
adc
cli
add
lods
pop
sub
ret
or
cmc
add
or
shl
fdivrs
loopne
in
xlat
das
or
outsb
ljmp
arpl
ljmp
ffree
outsl
cmp
inc
sti
dec
add
loop
mov
jne
shlb
data16
loope
xchg
in
stc
and
es
and
cli
adc
in
xlat
ljmp
sbb
shrb
jae
dec
jno
in
aam
cld
test
cmp
movl
repnz
and
fistpl
movsl
xor
adc
stos
pop
rcr
stos
popf
mov
xchg
lods
fstps
in
fsubrl
mov
daa
mov
mov
pop
pop
aam
mov
sbb
rcrl
movsl
shrl
pop
or
pusha
cmpsb
adc
ret
inc
xchg
dec
xchg
cld
fistl
mov
in
stos
inc
ss
adc
inc
ja
jp
test
dec
in
xchg
lret
cmpsl
add
test
add
jo
stos
lret
test
sub
push
sarl
jl
add
add
cmc
mov
push
mov
fidivl
push
xchg
ficomps
jns
jp
mov
lods
jbe
pop
jecxz
sti
and
jmp
test
dec
out
iret
cwtl
cltd
lds
mov
adc
push
pop
les
call
testb
clc
out
xor
mov
cmpsb
mov
pop
cli
js
mov
add
xor
leave
rcll
cmp
cs
rolb
mov
sahf
mov
lcall
stc
jo
shrl
aam
aam
hlt
add
mov
mov
mov
push
movsb
jnp
adc
xor
fstpl
outsb
test
cmp
add
pop
imul
fwait
js
jg
aas
pusha
cmp
inc
pop
ds
mov
orl
in
cmpsb
popa
mov
ret
test
cmpsl
sub
mov
out
mov
adc
popf
mov
ja
jo
inc
adc
sub
or
repnz
inc
inc
ret
and
mov
adc
sbb
in
stc
add
inc
cwtl
xor
pop
mov
test
stos
test
cmc
lret
nop
std
in
sbb
mov
out
scas
lods
pop
std
inc
dec
inc
cld
addr16
pop
ds
bnd
outsl
notl
mov
popa
or
insb
mov
cli
mov
fs
rclb
cmp
xchg
rclb
lea
xor
fnsave
jo
xor
cltd
xchg
cld
push
or
xchg
sub
aad
outsb
fimull
cmovb
dec
xor
mov
fistl
pushw
add
insb
mov
ffree
cltd
aas
add
xchg
es
xor
xchg
pop
lea
ljmp
mov
pop
out
xor
int
cld
aaa
mov
loope
fs
mov
imull
pop
push
dec
es
jbe
fnstsw
ss
cmp
addr16
add
aam
pop
mov
push
xchg
rorl
outsl
lret
test
or
sbb
imul
subl
into
lds
xlat
and
lods
push
or
ret
mov
sahf
rcrl
add
out
xchg
push
sub
cwtl
repz
clc
pop
adc
fdivr
sbb
stc
sub
movsb
jle
cli
push
gs
mov
stos
mov
stc
cs
fstps
std
dec
mov
add
pop
inc
nop
pop
insb
shll
pop
mov
ret
xchg
inc
outsb
xchg
das
testb
cmp
lret
cmp
dec
add
adc
and
lods
sti
push
adc
popf
xchg
push
xchg
mov
sub
daa
fldt
mov
sbb
push
outsb
movb
enter
jb
mov
insb
or
movsl
mov
pop
push
mov
cwtl
ljmp
sarl
mov
jl
call
popf
mov
fiaddl
lret
in
push
xchg
and
cmp
dec
jecxz
mov
fisubs
inc
jo
mov
fbld
iret
jbe
stos
lret
xor
movsb
jecxz
mov
mov
jo
sbb
push
add
push
pop
mov
sub
jg
loop
dec
mov
xor
lods
xor
shlb
adc
mov
xchg
loope
mov
xchg
jecxz
add
arpl
xchg
or
outsl
xor
fistpll
xor
sub
xlat
fwait
sub
pop
lret
imul
cmp
mov
add
lods
cmpsl
cmp
sbb
mov
fsubrs
mov
push
push
xchg
add
inc
xor
clc
inc
cmp
daa
xchg
out
push
lret
xchg
xchg
test
lahf
in
sub
xchg
dec
dec
cmp
cs
roll
fidivl
ja
mull
push
cmp
ret
dec
mov
push
sbb
mov
ret
in
movsl
loope
adc
and
ficoms
jle
je
rorl
pop
jnp
dec
sbb
int3
ljmp
push
rcr
mov
add
icebp
jmp
hlt
nop
mov
or
jno
into
and
and
add
pop
fsubs
out
loopne
mov
sbb
jno
rcr
mov
push
outsl
movnti
nop
call
sbb
cmp
ss
ds
icebp
inc
cmpb
pop
sub
jg
leave
inc
and
and
lock
jmp
xchg
adc
fdivr
xor
xchg
inc
nop
daa
bound
fcmovb
outsl
mov
loop
icebp
inc
imul
push
loopne
loope
xor
insb
sbb
daa
outsb
xor
jnp
dec
sub
jl
cmpsb
jbe
sbb
inc
mov
sbb
push
out
and
fadd
xchg
adc
jmp
dec
arpl
stos
xor
es
jo
xor
mov
sub
insl
daa
int3
xchg
stos
add
sub
fildll
mov
in
ds
insl
xchg
movsl
aam
xor
ret
mov
jge
sbb
aaa
push
xlat
lcall
aam
pusha
je
pop
jb
and
xlat
out
add
roll
inc
jae
jae
inc
ja
jae
xor
jno
sub
inc
adc
aad
test
jns
dec
sahf
add
or
mov
xchg
sbb
xor
cmp
jle
test
dec
fbld
call
cli
push
and
dec
sbb
data16
xlat
xchg
and
mov
sti
or
mov
or
and
js
aad
cwtl
xchg
mov
cmp
faddl
es
fcmovu
lods
inc
dec
pop
lcall
fdivr
inc
lret
xchg
cmpl
dec
jne
into
jl
pop
pop
push
xchg
xlat
lret
or
cmc
xor
inc
cmp
sbb
sti
cmp
cmpsb
cltd
shrb
scas
bound
cmp
aas
adc
mov
jns
ss
int3
inc
enter
cs
cld
fdivs
lock
and
shl
jns
shll
fucom
and
mov
sar
nop
xor
pusha
cmp
sub
sbb
mov
loopne
mov
lcall
mov
xor
cmp
imul
and
xor
jge
dec
outsl
das
cmc
xor
fcoml
leave
pop
jle
notl
lods
or
jle
xor
rolb
popa
cli
popa
add
pop
xlat
lret
cmpsl
xchg
or
cmp
pop
push
jbe
dec
fsubrs
sub
cmpsl
das
or
inc
loopne
repz
lcall
mov
push
pusha
inc
lahf
adc
and
stos
mov
xchg
cli
test
je
inc
sti
shrb
xchg
test
lret
dec
popa
fstp
leave
dec
shrb
fdivrs
adc
sbb
jp
push
push
enter
inc
shrb
test
ja
pop
sbb
int3
shlb
rolb
add
pop
iret
jo
fmull
fwait
ret
xor
aad
sarb
dec
mov
in
shrl
loopne
shrb
xchg
pop
pop
es
xor
mov
or
add
test
push
mov
scas
pop
mov
xor
fisubrl
fwait
and
pop
es
push
lock
out
ficoml
sbb
cmp
push
or
xlat
ret
popa
loop
push
popf
pusha
mov
or
rep
or
ljmp
and
xchg
sub
add
adc
and
inc
fdivl
sti
mov
inc
fs
mov
outsl
ret
xchg
test
rorl
push
ret
andb
in
or
cmpsb
gs
faddl
and
pusha
imul
fistps
movsb
dec
push
call
mov
movsl
repnz
out
aas
loopne
xor
rcll
inc
ret
shll
cmp
lret
fadds
jno
jae
jmp
cmp
mov
mov
bound
inc
and
lds
aas
dec
out
pop
cld
sub
fisttpll
lcall
push
inc
shl
repz
test
jle
insl
fcompl
push
jne
sub
inc
xor
bound
ja
jnp
loope
scas
inc
jl
arpl
push
inc
dec
mov
sbb
jno
pushf
and
mov
add
popa
mov
cmp
adc
fcom
pop
aas
popf
call
pop
filds
hlt
cwtl
add
add
lcall
subb
add
mov
insb
pop
add
inc
dec
shr
adc
mov
fidivl
xchg
inc
xor
fdivrs
int3
pop
movsl
cwtl
out
in
es
push
mov
frstor
push
push
jbe
pop
jb
mov
add
xchg
sti
ret
test
cwtl
pushf
cmp
rclb
cwtl
cmp
push
sbb
push
add
jle
jmp
pushf
lahf
mov
scas
test
outsb
lods
mov
lret
out
lods
mov
shrl
jl
add
shlb
mov
shll
jecxz
dec
mov
test
scas
xchg
fxch
daa
clc
jno
pushf
fs
scas
jo
inc
in
dec
mov
pop
arpl
scas
cmp
mov
xchg
notl
cmp
fisttpll
adc
mov
lods
out
lock
inc
cmp
cmc
mov
les
pop
sub
mov
sub
addl
fsubrl
test
leave
jg
sub
in
add
mov
imul
jmp
test
cld
js
insl
cmpsb
aad
daa
push
xor
shlb
shl
cmp
adcb
cs
in
test
arpl
enter
mov
dec
jns
int3
pop
pop
add
xlat
subb
and
mov
stos
cmp
pushf
and
in
jge
lcall
push
iret
lcall
lods
inc
xor
push
cmp
ret
fnstcw
fcomip
into
mov
cld
ss
cltd
xchg
jl
jp
ret
ficoms
mov
clc
outsl
push
movl
push
push
jo
xchg
add
gs
shlb
das
cmp
dec
stc
stc
lcall
dec
jmp
mov
fidivl
aas
pop
ret
loop
adc
mov
xor
test
dec
mov
jl
fs
push
fidivs
sub
pop
pop
mov
ja
and
loop
xor
push
xor
cli
mov
xor
jg
cwtl
xor
xadd
add
mov
jo
or
inc
and
ret
adc
scas
jne
inc
mov
mov
push
mov
clc
xor
add
xchg
inc
lret
mov
lods
sub
push
pop
push
sbb
push
lods
fmuls
bound
std
ljmp
and
inc
ret
cmp
mov
int
add
jb
repz
mov
insl
jo
aam
sbb
ljmp
call
mov
dec
add
sub
subb
das
fildl
popf
mov
mov
test
gs
outsb
inc
sub
repnz
sahf
cwtl
sahf
add
sub
xor
fiadds
push
pop
lds
into
sub
pop
jecxz
test
pusha
fcomps
nop
pop
in
ja
add
filds
outsb
pop
inc
sti
sub
push
and
fldl
mov
out
cmp
xchg
jae
scas
add
imul
mov
and
test
xchg
cmpsb
cmp
arpl
or
cmpl
movsl
mov
test
lcall
testl
and
sbb
cmp
fcmovnb
fidivs
popa
jne
sarb
pop
inc
mov
iret
stos
or
push
cmp
sahf
fldenv
fs
je
repnz
pop
repnz
sbb
sti
icebp
inc
dec
repnz
mov
cmpsl
test
stos
jns
add
mov
jae
popf
and
aam
in
sahf
bound
sti
add
addr16
hlt
jne
fistl
into
xor
out
and
pusha
into
cli
mov
mov
imul
and
jae
push
dec
mov
add
push
and
add
in
ficompl
pop
cmp
nop
ss
dec
ljmp
jmp
lock
icebp
cmc
repnz
fsubs
jp
and
faddp
add
add
jp
push
cmp
cmp
inc
lods
jns,pt
std
mov
cld
lcall
das
mov
fildl
xchg
shll
adc
dec
inc
push
ds
sarb
popa
add
dec
outsb
mov
jge
mov
fdivrp
fimull
sbb
adc
pop
enter
test
or
and
nop
orb
inc
or
sahf
and
mov
arpl
sbbb
and
dec
fimuls
fsts
int
out
or
ja
mov
inc
shlb
inc
lods
loopne
shl
inc
inc
cld
in
jmp
call
fldl
jne
add
dec
dec
test
nop
cmp
shrl
js
loop
inc
mov
cmp
cmpsb
fprem1
sbb
add
stos
jae
mov
adc
push
imul
xchg
aad
clc
into
cli
push
mov
fidivrs
inc
int
inc
mov
loopne
les
add
pusha
lock
leave
mov
js
push
sbb
cmp
fnstcw
inc
ss
xor
scas
mov
ljmp
mov
push
fsubl
aam
sarl
mov
aam
movl
iret
int
xchg
adc
adc
test
hlt
shll
out
mov
adc
test
cmpsl
mov
fnstenv
test
jnp
pop
outsb
jg
add
push
out
mov
in
jle
cmp
mov
popf
inc
cmp
out
adc
mov
fstp
and
and
mov
xlat
cli
sbb
inc
inc
add
imul
aas
pushf
sbb
bnd
jecxz
gs
ja
mov
jb
mov
in
adc
xchg
xlat
and
enter
push
into
movb
popf
mov
push
lret
xchg
out
cmp
push
sbb
ljmp
aas
fsubs
dec
inc
add
or
dec
hlt
and
xchg
loope,pt
adc
inc
out
pop
pop
inc
and
jae
xchg
pusha
out
xor
call
pop
dec
sub
dec
adc
ret
test
or
aaa
ljmp
cmc
loop
fbld
pop
jp
and
xchg
sbb
push
scas
int
ljmp
cld
sahf
pop
mov
mov
xchg
adc
mov
ds
daa
pop
pop
mov
lea
mov
mov
mov
jns
xchg
or
cmp
jo
repnz
mov
fdivp
jo
cwtl
and
into
mov
nop
lahf
rcrb
lahf
maskmovq
imull
pop
into
fdivp
add
mov
add
pop
cmpb
inc
xor
xchg
roll
fwait
mov
sbb
dec
xchg
cmc
in
gs
pop
cpuid
fdivl
cld
sarl
sbb
lret
test
imul
jne
ret
lock
cli
ficomps
push
negl
dec
xchg
mov
cmp
push
mov
cmp
mov
cld
ljmp
xor
and
std
xor
mov
xlat
lcall
push
pop
mov
mov
xchg
xor
cld
sbb
lret
push
repnz
lea
and
pop
pop
mov
sub
pusha
fisubrs
push
rcl
ljmp
les
pop
inc
inc
mov
dec
dec
hlt
dec
js
lods
pop
cmpsl
cmp
cmp
dec
bound
cli
les
pusha
fisubrs
aas
sahf
in
sbb
rcr
push
rcll
mov
pop
cld
add
jge
fcomp
stos
stc
inc
fisubrl
unpcklps
dec
decb
test
cmp
sub
xor
inc
xchg
scas
je
enter
push
cmp
daa
stos
mov
or
mov
pop
mov
inc
pop
mov
push
add
pop
sahf
insb
stc
test
pusha
adc
icebp
scas
loop
adc
roll
and
bound
and
dec
test
filds
test
in
inc
ficomps
jecxz
push
sbb
sahf
stos
stc
dec
adc
faddl
pop
cmp
popf
xchg
mov
out
push
xchg
cmc
out
sbb
stos
jae
fs
leave
xchg
inc
pop
loope
sbb
loopne
ret
cltd
pushf
fcoms
dec
dec
clc
cltd
mov
xor
jb
inc
pop
jmp
cmp
mov
outsb
mov
icebp
pop
in
sbb
add
f2xm1
pushf
stos
cmp
dec
adc
imul
jb
inc
xchg
mov
xlat
adc
pusha
jecxz
jb
pop
std
rolb
adc
loop
mov
pop
mov
fsubl
and
push
daa
cs
and
pop
lods
fsubrs
adc
mov
mov
stos
add
clc
cmp
divb
jne
and
call
data16
inc
mov
test
loop
mov
and
enter
push
cmp
push
fldcw
cmp
adc
rcrb
sbb
outsl
das
fisttpl
add
dec
movsl
scas
lock
adc
or
data16
adc
dec
pusha
or
mov
daa
dec
jl
insl
sbb
iret
in
in
jnp
movsb
repz
pop
and
mov
or
lods
sub
pushf
pop
nop
sahf
aaa
in
sti
rcrl
lds
push
icebp
in
call
dec
and
stos
lods
mov
adc
jb
xlat
fwait
notl
out
mov
push
xchg
test
mov
mov
imul
in
dec
jnp
pop
pop
jle
out
sub
pop
cltd
xor
pop
adc
sbb
ret
daa
sarl
ja
push
jo
imul
loope
fistpl
or
lret
mov
jns
popf
out
test
push
push
cli
and
jb
push
jnp
jecxz
stos
push
or
lods
pop
mov
xlat
loopne
lods
lds
add
fdivl
out
fisttpll
lods
push
xchg
mov
aam
or
adc
xchg
std
inc
push
push
push
mov
test
xor
cltd
or
jle
mov
lret
pop
xchg
jb
scas
fmulp
or
sbb
and
add
mov
pushf
and
lock
push
xor
inc
mulb
mov
dec
roll
ret
jecxz
lcall
ds
rcr
stos
push
enter
arpl
les
jmp
fsqrt
dec
scas
outsl
pushf
out
cmp
outsl
fcmovne
stos
add
inc
xor
and
fdivr
pusha
les
fmuls
arpl
add
mov
or
xchg
aas
sub
js
adc
fiaddl
lea
popa
ds
pop
push
jecxz
ljmp
data16
rcrb
sub
mov
cli
and
or
les
addr16
mov
das
scas
mov
add
and
test
mov
in
push
mov
lahf
in
cmp
pop
xchg
sbb
sahf
cmpl
outsb
mov
inc
jmp
adc
pop
ljmp
test
dec
fldt
dec
outsb
std
cmpl
es
aam
cmp
and
mov
rcl
pop
cli
aaa
xchg
iret
rolb
cmp
aam
fcomp
repnz
ljmp
or
std
test
inc
int
lret
cmp
dec
xchg
jecxz
int
inc
popl
inc
std
mov
xchg
push
jne
cs
idiv
xchg
pusha
jmp
lods
mov
adc
xchg
fadds
dec
je
adc
loope
cmp
adc
xchg
jae
sub
adc
inc
dec
pusha
subb
movsb
xor
lahf
xor
jp
pop
aas
pop
or
or
mov
mov
mov
cmp
adc
stos
mov
out
out
xorl
pushf
jns
mov
add
fwait
mov
popa
pop
cs
lret
js
loopne
movsl
mov
pop
cld
adc
cmp
pop
xchg
mov
repnz
stos
xor
punpckldq
outsb
mov
adc
jnp
ficomps
xchg
and
push
loop
sbb
lods
dec
les
rolb
push
test
rolb
mov
pop
mov
jns
xchg
push
cmc
scas
sarb
int
out
xor
jbe
fmulp
sar
aad
mov
bound
imul
jmp
aad
or
adc
jp
adc
pop
cmp
dec
loopne
lods
jbe
repnz
xchg
adc
loop
fsubl
stos
lret
and
inc
stos
add
cli
mov
rclb
aad
xor
mov
les
xchg
loopne
sti
cmp
xor
mov
xchg
lods
scas
xor
and
fwait
jle
mov
outsl
jg
xchg
jno
aam
and
add
adc
cld
popf
xor
iret
repz
outsl
sbb
int3
xor
inc
pusha
mov
push
imul
mov
and
ret
jg
sbb
inc
mov
xor
or
pop
push
mov
addl
mov
loop
or
sub
mov
stos
cmpsb
in
in
mov
test
add
stos
shl
add
dec
and
je
inc
and
push
push
sarl
fmull
push
rclb
push
iret
inc
clc
xchg
test
mov
cmpsb
xlat
jnp
aad
rolb
jmp
jmp
je
stc
and
xor
xor
lret
loop
dec
inc
rcr
into
add
stc
fsts
pop
jno
popa
and
fdivrl
pop
cli
clc
or
dec
inc
cmpb
ljmp
popf
pop
mov
sbb
ja
dec
jg
repz
shlb
jbe
mov
fiadds
push
ja
lret
sbb
mov
mov
loope
sti
cmp
ret
divb
jmp
sbbb
in
add
add
fstps
ret
and
jne
lret
sub
add
mov
mov
push
push
jmp
out
in
xchg
loop
jns
rorl
inc
adc
pusha
push
test
pushf
out
ds
fistps
scas
into
shrl
lods
insb
cmc
inc
stos
jecxz
or
andb
daa
in
jl
lock
pop
xor
int
int
iret
jp
fcompl
sbb
mov
dec
push
push
lahf
stos
or
xor
or
andl
sub
jb
das
inc
mov
outsb
insb
mov
ret
jmp
cmp
push
imulb
outsb
add
pusha
jmp
aam
cs
fcompl
and
clc
mov
cmp
shll
sbb
loop
rcl
out
mov
ret
xchg
nop
cmp
lods
dec
jo
ss
lahf
push
xchg
mov
adc
int
lock
insl
mov
rcr
xchg
cmp
out
push
out
inc
rolb
mov
ret
pop
idiv
mov
in
inc
pusha
loopne
add
adcb
lret
mov
push
imul
insl
loope
loope
fucomp
or
cmp
inc
sahf
xor
ds
dec
inc
fwait
cmp
push
fidivs
mov
and
sahf
or
jmp
dec
push
add
mov
jno
aad
add
outsb
fsubrl
cmp
add
in
or
and
dec
push
mov
cmp
adc
xchg
hlt
inc
std
pop
mov
insl
dec
jge
shl
jmp
lods
cmp
mov
mov
fcmovb
jp
lret
jbe
and
sbb
inc
imulb
ljmp
jbe
jg
cs
xor
in
or
enter
sbb
outsb
lret
iret
pop
mov
nop
mov
mov
xchg
imul
dec
cmp
xchg
push
lahf
int3
shll
pop
push
out
lds
out
inc
stc
pop
hlt
mov
jne
pop
aas
lea
mov
js
mov
aas
mov
sahf
xlat
ljmp
leave
mov
out
aam
sbb
hlt
int
add
mov
fcompl
call
sbb
lret
xchg
sti
xor
aad
jmp
jmp
pop
fimuls
repz
xlat
push
or
push
push
push
addb
mov
insl
and
add
out
pop
cmp
cmp
fsubrp
pop
push
dec
pop
in
in
je
rolb
pop
jnp
inc
lods
mov
rcr
inc
insl
iretw
lds
adc
std
inc
int3
push
adc
popa
iret
add
dec
jnp
test
cmp
pop
ss
cmp
push
inc
ficompl
jnp
sti
pop
inc
xor
push
xchg
pop
cmc
movsb
and
xchg
add
xor
mov
mov
std
jecxz
in
rcrb
mov
iret
test
roll
jae
pop
add
sub
add
mov
push
popf
mov
iret
mov
fcomps
mov
xchg
or
mov
mov
sub
lods
xorb
add
dec
sub
cmp
jl
idivb
subl
xchg
rorl
inc
adc
cli
pop
sti
fbstp
sarl
insb
sub
test
sub
insl
sti
fcomi
and
aad
mov
js
add
xchg
push
loop
jne
push
xchg
xchg
in
dec
inc
xor
out
sub
fcoml
xchg
insb
jo
scas
cmpsb
push
stc
add
dec
outsb
aas
imul
dec
test
repnz
xchg
sub
push
daa
add
cmp
adc
sub
out
out
push
pop
ja
mov
outsb
push
popa
fnstsw
cmc
fcoml
loope
mov
enter
sbb
bound
lock
cmp
arpl
fsubrp
std
sub
fisubrl
and
andl
push
popf
lcall
int
scas
push
test
mov
mov
lds
mov
clc
lds
jnp
dec
movsb
and
insb
out
inc
rclb
mov
dec
mov
xchg
lret
jns
dec
dec
add
xor
ficompl
loop
fidivl
push
sbb
dec
stc
mov
jbe
out
mov
les
push
andb
aam
push
jg
cs
loopne
clc
fwait
pop
loope
pop
movsb
sub
ffreep
or
cld
pop
negb
stos
fildl
or
mov
push
aaa
mov
scas
cmp
fcoml
sub
in
testb
loopne
scas
mov
rolb
int3
adcl
or
push
fildl
int3
out
lds
dec
fistpll
fidivrl
mov
adc
cltd
aaa
or
add
pop
adc
pushf
add
sub
cmp
inc
call
fcompl
stos
mov
jb
pop
fld
pop
xchg
jns
jp
lcall
xor
or
add
roll
lret
inc
push
pop
out
in
scas
jle
jo
cmp
inc
rcl
lods
inc
mov
loop
fdiv
jb
and
notb
arpl
loop
xchg
bsr
pop
cwtl
addb
test
add
or
cmpsb
jb
ret
ds
cs
cld
xchg
mov
adc
pop
mov
js
imul
cmp
sbb
stos
sbb
push
es
push
xchg
fwait
push
scas
pop
push
jge
stos
push
lahf
cmp
push
mulb
cmpsl
sbbl
in
sbb
stos
cmp
sbb
int
sbb
mov
mov
dec
std
xchg
inc
test
cli
lock
cld
sti
inc
cli
lret
cld
enter
push
sbb
mov
sbb
scas
mov
popa
pop
dec
outsb
mov
jle
ret
sarl
cmp
orb
xor
xor
pop
push
inc
jle
sbb
jecxz
rolb
or
xchg
movsb
sbb
movsl
xchg
orb
mov
cs
clc
ret
or
loop
jnp
mov
xchg
outsb
dec
loope
add
pop
sub
xor
lods
mov
push
mov
adc
pop
rol
pop
lahf
push
movsl
xchg
dec
leave
imull
test
aas
loopne
push
dec
push
out
test
pop
xchg
cwtl
adc
cmp
fadds
add
aas
mov
in
mov
loopne
and
push
outsb
jbe
pop
mov
inc
aam
add
fcmovnbe
loop
bound
rol
call
fisttpll
fildll
jle
mov
mov
push
scas
call
dec
rorb
sbb
jmp
stos
sub
push
cmpsl
add
mov
jmp
sti
push
add
sub
ja
inc
rcr
or
shl
mov
scas
jb
push
xchg
sbb
adc
pop
je
lcall
enter
cs
adc
lcall
add
les
outsl
sub
cmp
loopne
inc
adc
pop
dec
clc
pop
mov
add
fidivl
add
sarl
or
inc
or
inc
jge
or
pop
pop
and
ss
divb
rclb
push
iret
cmp
xchg
lds
jno
fistpl
mov
pop
dec
jbe
lret
cmp
scas
ja,pt
cli
push
inc
rcr
fisubrl
pop
xlat
dec
xor
rcr
or
pop
adc
add
dec
into
add
fucomip
fmul
or
fnstenv
in
sbb
mov
xchg
ds
add
in
imul
adc
icebp
js
mov
xchg
xor
mov
xchg
pop
and
xor
fst
aaa
dec
xchg
rcrl
adc
popf
xchg
xor
add
jbe,pn
jns
jg
adc
cld
gs
cmp
ret
pop
mov
jno
push
mov
or
adc
int3
mov
loopne
das
mov
mov
pop
dec
in
std
mov
fidivrl
sti
addr16
nop
inc
xchg
mov
fstl
les
push
xchg
jno
sbb
xchg
add
mov
inc
dec
mov
enter
xchg
sti
dec
jecxz
dec
cwtl
popa
xchg
fdivrs
lret
mov
mov
ljmp
clc
push
and
faddp
ficoms
sub
xor
add
and
dec
fcmovu
fdivrp
push
xchg
push
push
sbb
pop
add
jo
data16
scas
leave
mov
cmp
loop
nop
test
imul
je
mov
dec
mov
clc
aaa
cmp
cltd
rcr
sub
cmp
xor
idivb
pop
bnd
xchg
shll
mov
ret
and
mov
pop
flds
and
flds
negl
ja
in
cli
imul
adcb
sahf
sub
nop
addr16
jae
and
xor
fsub
add
divl
xorb
fcmovne
aas
jecxz
xor
cmovp
mov
inc
mov
jl
adc
pop
xor
jp
fdivrl
mov
leave
xchg
fwait
pusha
idiv
stc
sub
repz
mov
sbb
ds
mov
mov
fdivs
mov
and
shrb
adc
sub
lret
jbe
jo
pushf
jb
repz
in
sub
xchg
sti
inc
jecxz
aam
add
ficoms
enter
push
jmp
mov
mov
fucomp
mov
xchg
in
sarb
aam
dec
sub
aaa
add
add
daa
clc
pop
fimuls
dec
push
jno
ljmp
bound
inc
aad
inc
jge
or
xlat
inc
mov
pop
dec
fwait
and
push
clc
adc
jno
rorl
cld
movsb
jnp
xor
es
dec
jbe
cmpsb
mov
push
das
dec
fisubl
dec
out
dec
cmp
cmp
cld
ror
mov
dec
or
jge
push
inc
add
xchg
stos
mov
scas
sbb
adc
movsb
outsb
pop
jns
and
push
lret
cmp
or
ror
mov
es
lock
mov
out
dec
loope
das
sbb
dec
mov
mov
and
xchg
aam
insb
pop
inc
xchg
inc
cmp
int3
das
push
mov
jmp
cmp
fldt
int3
mov
popl
into
inc
push
push
stos
imul
mov
inc
xlat
out
xlat
pop
mov
add
mov
pop
into
nop
cmp
cs
mov
sbb
mov
mov
aam
movsl
dec
cli
fmuls
add
xor
dec
cmc
xor
jo
xchg
lock
aam
cltd
adc
push
popf
add
pop
fistpll
inc
enter
imul
cmp
xor
push
add
sub
nop
xchg
fnstenv
lods
xchg
sub
cld
or
test
inc
shrl
dec
mov
pop
into
mov
cmp
mov
jae
daa
mov
add
adc
jle
imul
add
inc
xchg
outsb
sub
add
stos
push
or
insl
and
jo
lahf
lahf
orl
xor
sub
rcll
jle
mov
mov
cmp
xchg
outsb
add
lds
mov
cmp
fnstcw
repz
inc
push
inc
mov
push
inc
js
loope
fidivs
int3
or
mov
stos
xor
out
inc
and
out
mov
mov
inc
adc
jle
or
cmp
mov
pop
aas
std
in
int
aam
cmp
cli
add
inc
leave
mov
mov
decb
mov
rorl
pop
mov
or
lock
imul
jl
outsb
sarb
lods
outsb
pop
lret
aam
arpl
push
bound
fs
pop
jbe
pop
fidivl
bound
mov
in
test
mov
repz
jp
add
push
and
add
addr16
pop
and
ds
call
sarb
and
mov
adc
jnp
mov
adc
les
mov
lods
cld
aas
sub
pusha
sbb
mov
jmp
repz
out
incl
push
daa
cli
loope
je
mov
lret
sbb
lret
not
mov
xor
mov
shl
popa
add
test
iret
addr16
adc
and
or
adcb
xor
jns
fimull
imul
sbb
scas
aam
scas
outsb
mov
xchg
test
sbb
inc
cmc
js
push
pusha
dec
filds
lock
and
sub
xchg
fmull
ficomps
fisttpl
fwait
sbb
mov
pop
mov
mov
fdivr
dec
inc
fmull
mov
push
ficoml
dec
push
inc
test
jb
adc
dec
shrl
cmc
fwait
aaa
or
js
push
cs
push
movsl
dec
pop
push
sbb
jb
mov
push
xchg
adc
inc
jo
fdivl
hlt
popf
cmpsb
popa
cld
push
adc
dec
fdiv
stos
dec
mov
pop
gs
repz
dec
shl
sarl
add
inc
ss
jbe
cmc
imul
movsb
ret
push
jmp
adc
orb
jae
loop
and
shlb
leave
movsb
inc
adc
sbb
daa
push
ror
inc
push
pop
xchg
lret
fadd
cmp
dec
adc
and
frstor
push
pop
insl
shl
add
and
cmp
add
dec
inc
int3
inc
and
jl
mov
mov
dec
je
and
int
scas
xorl
push
ror
xchg
sbb
and
xlat
inc
mov
xlat
pop
out
dec
sbb
add
add
and
loopne
or
push
or
jno
mov
scas
icebp
int3
pop
dec
inc
mov
out
dec
adc
jb
pop
jmp
call
fidivrl
jnp
xor
rorl
push
and
repnz
sub
mov
cli
bound
fsubrl
je
fsubrs
loope
or
dec
fsubp
aas
imul
sbb
jno
imul
xlat
adc
add
fstpt
xchg
aad
aas
pop
std
popa
cld
or
loopne
push
add
cmpsl
int3
sbb
push
mov
enter
adc
pop
cltd
dec
insl
in
pop
aam
scas
sahf
xlat
push
lret
and
pop
lahf
sub
inc
xchg
adc
sbbl
flds
cmp
push
mov
jno
dec
in
les
pop
mov
pop
stos
inc
nop
xor
lcall
cltd
enter
mov
into
sahf
repnz
out
insl
add
cmp
dec
mov
test
xlat
shll
rcrb
add
imul
mov
push
xor
xchg
test
mov
fimuls
xor
outsb
push
and
push
pop
ret
lock
add
out
jmp
sti
push
lock
push
fwait
add
jo
fbstp
sub
stos
push
fstps
pusha
dec
mov
or
int3
mov
add
cmpb
aad
clc
ds
xor
fdivs
and
cmp
test
cmp
shrb
jge
bound
sarl
mov
add
or
jl
or
jno
aas
and
aad
xchg
fwait
not
jo
ret
cmpb
cmc
ss
fisubrl
fildl
xchg
add
add
push
aas
jg
or
mov
mov
and
inc
out
dec
mov
sbb
aam
test
mov
pop
cmp
test
jp
mov
sbb
dec
pushf
add
jne
pushl
jmp
js
fcmovnb
xchg
stos
int
ret
mov
clc
mov
repz
pop
ss
mov
mov
insl
lods
lea
enter
xor
inc
xchg
notl
mov
dec
xor
adc
push
jmp
xchg
fidivrs
cmc
stos
push
ss
lret
les
pop
dec
push
js
int
negb
filds
fidivrl
in
imul
jb
mov
fiadds
adc
lret
daa
mov
cli
xchg
data16
inc
mov
xchg
int
xchg
js
dec
icebp
cmp
lcall
xor
mov
nop
mov
push
incl
sbb
mov
aad
arpl
adc
mov
dec
cmp
sub
pushf
add
ds
xchg
out
es
aam
stos
test
bound
nop
inc
add
cltd
inc
adc
xlat
sbb
je
inc
out
daa
popf
fsubrs
cmp
or
mov
cwtl
xlat
jg
jmp
and
cltd
and
push
jo
xor
dec
inc
stos
jmp
divl
das
ficoms
ja
xchg
inc
cmc
fiadds
adc
cli
es
imul
lret
pop
push
xchg
push
aam
ss
adc
stc
in
mov
les
stc
rcrl
pop
clc
in
and
out
pop
psubusw
pop
add
fdivr
mov
cltd
shrl
sub
or
mov
aad
sub
dec
pop
sbb
sbb
adc
cmp
and
xchg
rolb
mov
test
repz
pop
jo
xchg
jge
pop
jmp
rolb
arpl
in
out
mov
pop
push
mov
sarb
lret
mov
scas
mov
mov
jmp
test
xor
xor
cmpl
decb
das
cmc
push
and
mov
lock
mov
ficompl
daa
jge
cmpb
mov
ja
sub
ss
notb
addr16
outsb
je
xlat
mov
scas
fidivl
mul
int3
testb
decl
xor
fnstenv
int
cmp
adc
dec
lcall
xlat
loopne
out
inc
lahf
push
pop
push
stos
fsubrl
push
int
daa
outsl
aam
push
es
or
incb
xchg
hlt
push
rcrb
insb
stc
mov
adc
add
or
cli
push
loopne
fiadds
pop
rcr
xor
mov
into
add
push
cmp
sysenter
pop
fidivrl
dec
popa
out
xor
jge
inc
pop
add
add
sbb
into
xchg
cmc
test
xor
test
add
ret
xchg
or
mov
jo
movsb
push
mov
into
fiaddl
add
mov
mov
stos
xor
scas
mov
jl
rcll
cmp
aad
cmc
nop
mov
notl
jns
pop
push
addr16
bound
sub
test
adc
clc
les
dec
shrb
mov
es
mov
out
and
mov
push
xchg
push
neg
icebp
inc
sti
push
lret
jle
cmp
imul
ds
loope
fistpll
dec
nop
aam
inc
leave
rol
mov
icebp
xor
loopne
sbb
inc
clc
mov
push
mov
mov
loopne,pt
fs
and
shlb
ds
test
loop
adc
test
mov
sbb
mov
decl
push
fldenv
imul
fs
push
int
cmc
daa
jmp
jg
cmp
fistps
xor
pushf
dec
jae
cmp
fsub
in
shlb
cli
inc
or
in
sbb
clc
fs
jg
es
inc
into
pop
jmp
sti
sub
int3
leave
das
push
jo
fsts
sbb
test
push
decl
es
sbb
fnsave
mov
test
pushl
insb
sub
mov
pop
dec
sti
lret
addr16
das
and
and
pop
mov
testb
pushf
std
nop
ss
xor
bnd
mov
int3
leave
faddp
mov
push
mov
loop
cmpb
pop
jne
inc
outsb
shr
push
or
in
lret
cmp
dec
inc
lcall
push
mov
shr
in
xchg
leave
jp
ljmp
aaa
dec
mov
dec
pop
dec
cmp
dec
loope
data16
push
fcmovnb
out
mov
outsl
int3
repnz
in
inc
mov
out
mov
pop
idiv
push
rol
imul
add
sti
enter
sbb
sarb
sbb
pop
sub
xlat
dec
cmp
sbb
rol
or
outsl
mov
jbe
cmpb
sbb
inc
inc
hlt
loope
xchg
push
mov
mov
mov
pop
dec
popf
pop
in
dec
add
test
pop
mov
shrb
fnstenv
ds
loope
bound
push
arpl
and
rol
xchg
dec
jno
loope
shll
test
addl
cmp
or
pop
jns
cmp
popa
pushf
pop
cli
and
dec
mov
mov
sbb
xor
cwtl
sub
fldt
add
or
bound
push
inc
mov
in
jne
aas
rol
push
lods
sub
rcll
scas
rcl
js
mov
test
lcall
xlat
xor
fmul
jae
test
out
pop
add
bound
pop
jl
mov
add
pop
imul
mov
loope
fdivrl
ret
cltd
lods
sub
in
and
ror
mov
ljmp
mov
clc
lahf
in
ror
mov
pop
imul
dec
shlb
mov
call
inc
cmp
adc
xor
shll
fistpll
and
add
or
xchg
cmp
idiv
leave
mov
pushf
cmc
dec
xor
call
sbb
mov
sbb
mov
add
mov
test
cltd
jns
in
adc
stos
outsb
fcoml
sbb
shlb
add
idivb
movsl
hlt
movsl
sbbb
jl
mov
mov
iret
cmpsb
mov
fmull
cmpsl
std
std
jb
add
dec
ficoml
add
xchg
shll
adc
lret
imul
jp
lahf
pop
and
lcall
mov
into
adc
pop
push
cmc
aas
outsb
das
movsl
clc
orb
imul
jb
fnsave
fmull
faddl
push
adc
std
inc
adc
jnp
sbb
mov
mov
ror
stos
jp
inc
mov
pop
mov
cmpsb
push
jp
mov
mov
ds
jmp
sub
mov
cmp
cmp
jo
mov
push
enter
push
loopne
jae
rcr
sub
and
lods
push
cmp
movsb
fistpl
lret
lret
sahf
pop
add
cltd
xor
sub
repz
xlat
idivb
dec
mov
sbb
cmc
sbb
fiadds
insb
sbbl
add
out
pop
mov
cli
fcomp
inc
lods
addr16
push
fiaddl
jecxz
xor
icebp
lock
ret
mov
push
adc
lea
int
jae
js
push
fildl
out
leave
mov
and
pop
mov
repnz
roll
cs
sti
cmpsl
sbb
inc
fnstcw
mov
jp
lock
mov
test
stos
sbb
fmull
sarb
cmp
push
mov
outsb
imul
jae
lcall
mov
cmp
lcall
stos
cmp
mov
je
pusha
fidivrl
imul
or
sahf
sub
and
test
cmpsl
or
mov
xor
push
pushf
mov
aaa
fwait
push
sarb
stc
jbe
and
push
jg
jnp
test
xchg
or
imul
add
fiaddl
sub
cmp
cmp
lea
add
mov
imul
inc
inc
fsubs
fnstcw
outsb
cmp
sub
push
jne
fs
mov
test
lock
clc
and
sbb
add
iret
sbb
jnp
mov
dec
nop
aaa
pop
and
push
aad
aad
std
mov
lahf
adc
or
add
adc
aad
loop
daa
out
push
movsb
int
jo
cmp
insb
jg
cli
andl
ja
inc
cmp
jo
jo
sar
inc
nop
lods
test
ret
jno
and
stos
cwtl
popf
dec
lock
imul
inc
out
pop
rol
mov
push
mov
mov
push
stc
movsl
add
cltd
enter
jnp
loope
call
dec
and
pop
int
loop
sti
dec
rcr
cmp
movsb
aad
aas
loope
push
xor
adc
mov
fiaddl
jnp
mov
std
push
lret
enter
xchg
loop
in
add
push
mov
stos
ja
push
pop
jne
loopne
mov
and
testb
outsb
lret
je
sbb
mov
adc
add
jne
push
js
dec
lods
cmp
enter
std
adc
fistpll
dec
adc
add
loop
add
or
dec
mov
frstor
not
mov
jmp
push
lock
fstpt
fs
out
pushf
adcl
aaa
mov
push
aam
das
aas
cmp
icebp
es
out
in
cmp
dec
inc
cmp
sbb
xor
shr
sarl
sub
repnz
test
dec
jne
inc
mov
test
pop
aas
je,pn
mov
fs
push
outsl
jmp
dec
pusha
mov
jl
mov
dec
sbb
jns
je
in
ds
cmp
in
jbe
es
bswap
hlt
lcall
xchg
mov
cmp
cmp
or
inc
lock
pop
ret
cmpsl
stos
ret
aad
sarb
test
xchg
std
frstor
cmpsb
fstps
push
push
je
xor
repnz
or
sbb
test
push
imulb
lods
sbb
testb
clc
dec
lods
cmp
push
test
stos
xor
inc
pop
xchg
cmp
nop
scas
mov
add
xchg
divb
mov
rolb
out
neg
add
mov
push
sub
jl
add
push
jmp
dec
loop
rcl
push
xchg
push
sbb
mov
push
cmp
cmpsb
out
shrb
shlb
nop
cwtl
clc
push
sarl
ljmp
addr16
xchg
xor
call
mov
pop
aad
fildll
add
jg
mov
arpl
fisubs
mull
stos
insw
fwait
fs
outsl
inc
inc
dec
pop
sub
bound
cwtl
in
xor
xchg
hlt
jo
cmp
sarl
stc
cmp
and
sahf
and
mov
add
out
xchg
cmp
mov
ja
jl
cmp
adc
rorl
test
jne
inc
lret
push
stc
lods
add
push
adc
sub
nop
dec
add
mov
jbe
ret
cld
xchg
sti
icebp
mov
out
mov
sbb
je
pop
ljmp
test
loope
fidivl
lds
shl
lods
xor
jns
fdivr
or
pushf
add
jo
xchg
push
loop
and
and
iret
add
std
out
mov
xor
cmpl
int
push
in
add
xchg
push
popf
cli
adc
or
bound
int
outsb
inc
mov
and
fld
jne
cmp
mov
movsl
loope
sbb
and
fstpl
in
movsl
mov
dec
jge
popf
scas
negb
cmp
hlt
rcrb
lock
mov
cltd
dec
sub
dec
mov
jl
shr
clc
ss
dec
loopne
sbb
dec
fiadds
pop
and
sub
mov
push
xor
sub
aas
xor
pop
cmc
repz
ja
push
fldl
pop
sub
push
dec
pop
das
xchg
out
sub
aad
repz
sub
popf
cs
jno
add
ja
fisttps
push
jo
sbb
xchg
pop
data16
add
lock
pop
cmp
xor
sbb
or
notl
into
inc
adc
ss
push
es
loopne
subl
pop
lahf
ljmp
inc
sub
xor
adc
xchg
fistpll
mov
loop
push
mov
mov
pmovmskb
popf
dec
pushw
fst
mov
lods
push
ret
in
outsb
pop
leave
xchg
clc
les
or
out
mov
xchg
jg
icebp
gs
pop
mov
sarb
shlb
pop
mov
mov
call
dec
pop
dec
cwtl
inc
inc
mov
push
sbb
testl
push
mov
ja
add
dec
cmp
mov
imul
aad
mov
insl
ds
pop
std
rcrb
shlb
test
ja
inc
ds
push
mov
mov
jle
mov
xor
mov
xchg
scas
xchg
xchg
in
xor
test
lcall
mov
fisubrs
ret
xchg
pop
xchg
sahf
push
ficoml
jmp
xchg
cmpb
add
mov
xlat
lahf
cmpb
ds
dec
and
fisubrs
push
push
mov
ds
inc
sarw
loope
sub
cmc
inc
popa
push
jl
jg
add
mov
adc
inc
mov
lods
inc
push
dec
movsl
out
into
and
push
cmp
js
pusha
lret
adc
out
movsl
dec
mov
fdivl
mov
mov
dec
push
mov
mov
sub
aad
inc
cmp
mov
xor
cs
mov
int
movsl
inc
inc
scas
jecxz
and
cld
fucompp
fadd
add
jb
mov
sbb
dec
repz
add
add
xchg
into
int3
setb
push
sub
fcompl
sbb
adc
loop
lods
in
pop
add
scas
cmp
fstpt
jo
xor
push
repnz
mov
ret
xchg
sbb
jp
fdiv
add
and
inc
cmpsl
cmp
jb
jle
cmp
stos
mov
or
out
cmp
lea
loope
jmp
and
adc
pop
testl
ret
in
scas
mov
jae
or
mov
cmp
sti
icebp
js
or
jae
inc
jge
arpl
int3
cmp
sub
test
fsts
in
das
out
stos
gs
hlt
out
fistl
inc
shrb
movsl
inc
mov
insl
push
sahf
in
leave
cld
xchg
mov
stos
mov
cmp
out
clc
movsl
xchg
push
adc
fidivl
xchg
dec
dec
pop
cwtl
iret
fisubrl
icebp
push
popa
push
sub
and
cmp
aas
sub
mov
in
ljmp
daa
mov
pop
xor
popf
cmp
mov
lods
adc
inc
fucom
xchg
fisttpll
mov
jae
adc
dec
icebp
out
dec
idivb
out
sbb
push
fwait
or
ja
push
mov
insl
sub
inc
mov
shrb
outsl
lds
pop
aaa
adc
and
stc
test
movsl
mov
fsqrt
xlat
add
loop
shl
xlat
jp
enter
gs
pop
adc
xchg
sub
inc
push
test
nop
sahf
loopne
mov
xchg
testb
dec
lea
enter
xor
test
inc
loop
mov
daa
push
cmp
dec
mov
dec
cmp
mov
xor
push
adc
fmull
js
insl
mov
sarb
inc
push
in
jge
mov
inc
bound
rorb
add
sbb
mov
jp
push
into
inc
rolb
int3
sbb
ret
cmp
daa
mov
out
mov
push
sub
rcr
fcompl
stos
dec
xor
xor
leave
and
test
out
in
pop
mov
push
pop
pop
push
fbstp
ret
adc
jl
fimuls
ret
push
adc
jae
out
sub
nop
bound
aad
lcall
aas
and
lods
shll
push
filds
and
inc
test
mov
jnp
dec
popf
imul
test
dec
inc
or
call
jne
inc
adc
fs
sub
mov
subb
mov
cwtl
add
xor
loope
sarl
pop
add
pop
sbb
inc
nop
shl
sbbl
or
in
xor
inc
dec
test
cmpsl
mov
in
test
mov
mov
shrb
cmpsl
dec
test
cmpsb
out
inc
jl
je
sub
ds
shll
jle
and
push
adc
lock
inc
jmp
loop
sbb
pop
test
std
movb
lock
shl
jecxz
jns
mov
fimull
in
int
push
mov
out
syscall
inc
push
aad
lret
subb
loopne
into
pop
lods
aam
xor
inc
push
sti
push
cmpb
inc
inc
sbb
sbb
lcall
out
shll
fcmovnb
ss
jle
mov
aam
repnz
add
and
lret
js
aam
jle
int3
xor
jns
jns
and
popa
push
nop
mov
add
push
inc
pop
or
xchg
pop
das
mov
outsl
inc
inc
nop
addr16
xor
jb
ficompl
pop
sub
push
pop
out
shlb
lret
fimull
and
repz
inc
adc
fcmovbe
inc
lea
sbb
mov
or
nop
sahf
sub
std
jne
fimuls
or
push
xchg
mov
xor
jle
cmp
fldt
addl
pshufw
addb
push
jp
ret
pop
mov
pop
push
push
add
inc
loopne
das
inc
mov
jb
imul
icebp
push
scas
iret
ficompl
jbe
movsb
loope
in
das
inc
fstpt
xor
imul
pextrw
or
subb
mov
test
sub
cmc
shrb
iret
cmp
into
mov
test
mov
fdiv
in
sti
aas
xchg
sbb
cmp
insb
xor
mov
sbb
dec
movsb
dec
jmp
call
ret
popf
xlat
lahf
loopne
inc
lods
xchg
fimuls
xlat
shl
shlb
pavgb
fwait
out
add
pop
cmp
pushf
fnstcw
push
cs
push
add
dec
push
pop
pushf
jl
test
inc
mul
inc
fsubrs
cmp
dec
cmp
test
imul
push
aam
int
adc
insb
ds
xchg
and
fdivr
pop
ret
movsb
iretw
jmp
cs
cmp
stc
mov
mov
push
jno
js
jmp
pop
movsl
inc
aad
inc
fld
sti
fistl
test
mov
dec
cmp
jnp
mov
mov
adc
incb
inc
jb
bound
xlat
lcall
ret
dec
jmp
inc
mov
push
sbb
bound
test
test
out
notb
imul
mov
lret
clc
pop
xchg
dec
sarb
cmp
fcmovu
mov
mov
ds
and
aad
loope
jnp
mov
mov
push
ret
ja
out
addl
push
cmp
std
icebp
test
scas
mov
xlat
das
mov
test
rclb
cmpsb
inc
push
loopne
inc
mov
sbb
adc
cld
lcall
push
scas
decb
sub
test
jmp
pop
ds
dec
push
jno
cmc
lds
rorb
idivb
sbb
sub
push
xor
fcom
je
mov
jne
repz
cs
hlt
pop
dec
add
mov
outsl
sbb
mov
test
shll
std
hlt
or
in
es
cli
add
inc
arpl
dec
or
movl
out
mov
and
scas
push
lcall
shr
push
aam
outsb
jmp
aam
cmp
inc
push
xchg
xchg
ds
in
fiaddl
out
out
jns
out
mov
faddl
loope
cmp
or
faddl
mov
test
ds
add
sbb
lock
es
sar
pop
sub
jnp
outsb
push
stc
neg
mov
and
sbb
fimull
filds
jle
add
sbb
jmp
gs
neg
pop
nop
insb
dec
xchg
mov
popf
cmp
or
jecxz
es
test
out
sbb
and
add
icebp
div
sbb
jg
into
inc
jle
roll
jle
cwtl
sbb
rcl
repnz
insl
xchg
jl
xlat
adc
pop
pop
xlat
addr16
add
push
mov
jg
sub
cmp
out
add
sub
js
call
rolb
push
mov
cs
dec
push
fsubs
pushl
xor
leave
sbb
pop
mov
scas
or
es
adc
mov
xchg
sub
xchg
and
ror
mov
rcl
hlt
loope
cmpl
testl
repnz
xor
iret
cli
push
sub
fildll
test
loopne
leave
repnz
shl
inc
sahf
xlat
stos
jp
pop
jne,pt
dec
fstpl
jmp
rcrb
jmp
popa
or
dec
ret
mov
es
xchg
push
shrl
outsb
stos
jb
ret
ds
jo
cmp
or
inc
inc
out
ja
stos
stos
insl
cwtl
dec
jle
rorl
cmp
cwtl
cmp
or
or
mov
dec
nop
stos
les
sbb
fdiv
pop
dec
sbb
adc
jne
cmp
cmp
or
mov
jb
cmpxchg
mov
and
add
in
inc
test
inc
jp
arpl
andb
mov
pop
cmpsl
icebp
and
inc
or
out
fcomps
bound
dec
orl
imul
ja
les
adc
sti
add
xchg
xor
cld
decl
inc
mov
fisubrl
mov
jecxz
push
cmp
lcall
gs
jo
stc
inc
xchg
jns
xlat
mov
mov
xchg
cmpsb
adc
mov
cmp
imul
push
mov
ds
jge
dec
mov
or
shll
fsubrs
push
cmp
xor
rcrb
lock
pop
movsl
aam
nop
adc
jg
gs
and
pushf
stc
call
or
xor
ds
adc
clc
adc
cmp
mov
imul
loop
cmc
xchg
insl
testl
add
fadds
nop
mov
inc
arpl
popa
je
adcl
mov
bound
inc
aam
push
xchg
adc
xor
decb
cli
dec
fcmovnbe
jb
divb
fstpl
add
divb
scas
add
cltd
in
outsb
rclb
imul
cmp
or
aaa
push
cmc
shll
fmull
inc
and
sub
aam
aaa
inc
faddl
rorl
scas
icebp
scas
or
sub
adcb
add
into
into
inc
std
push
je
iret
or
xor
mov
ljmp
ss
adc
inc
imul
jnp
mov
xor
mov
repnz
xchg
ret
repz
rorb
and
add
xchg
inc
lret
fcomi
mov
jmp
sub
dec
call
jae
sbbb
sbb
fldenv
push
rolb
mov
adc
shrb
fcomi
je
mov
sub
add
in
mov
mov
cmpb
mov
fisubrs
cli
stos
xchg
push
sub
mov
push
scas
jne
ss
mov
scas
mov
daa
pop
lea
sarb
jae
mov
es
dec
fistl
fisubs
jg
mov
mov
push
cmc
push
jo
dec
or
push
loop
cmp
leave
sbb
into
stos
or
stos
add
ret
cmpsb
shll
out
enter
fstpt
hlt
cmp
call
pop
xchg
ja
push
mov
adc
push
add
jecxz
inc
jmp
int
jecxz
das
lock
clc
fmull
add
mov
nop
arpl
adc
test
jecxz
movhps
add
rorb
pop
or
sarb
xchg
pusha
inc
inc
jecxz
fldl
cltd
mov
je
adc
push
std
sub
mov
shlb
dec
push
mov
xor
testb
gs
xchg
cmpsl
mov
and
cli
ds
xorb
test
adc
in
xorb
mov
sarl
pop
mov
out
mov
aam
repnz
inc
sahf
inc
xlat
js
fnstsw
or
stc
xor
lahf
sub
pusha
or
aam
shrb
addr16
jbe
dec
dec
jae
sbb
fbstp
mov
movsb
dec
cmp
dec
into
dec
push
std
test
sbb
lcall
and
xor
pop
aas
lahf
movsl
inc
out
push
rcrl
push
add
or
jne
inc
sarb
inc
loop
mov
sti
push
daa
dec
fnsave
decl
std
push
xlat
push
xor
hlt
pop
out
inc
jo
shll
ds
enter
into
pop
sub
in
leave
sbb
mov
ret
jb
inc
clc
cmp
in
cmpsl
ss
mov
inc
lods
mov
pushf
xlat
out
loopne
push
je
cld
sbb
jp
pop
aam
mov
xchg
xchg
stos
aas
jge
gs
fldt
mov
stos
inc
inc
add
sub
lock
cs
fidivrl
test
stos
inc
pusha
xor
sub
inc
xchg
out
imul
fucomp
fsubrl
insl
dec
add
insb
pop
add
fistl
or
in
or
dec
mov
pop
inc
mov
mov
shrl
mov
mov
push
push
negb
int
rorb
mov
dec
pop
adc
aad
scas
mov
cmp
dec
lahf
pushf
dec
inc
pop
inc
adc
sub
inc
mov
cltd
in
jg
cld
lods
shrl
or
popa
fnstcw
aad
or
xchg
cmc
mov
stos
sbb
push
pop
insl
or
inc
fcomip
inc
mov
adc
mov
out
lock
cmc
int
aad
les
pop
rorb
pop
mov
cmpb
sub
cmp
notl
loope
iret
mov
mov
or
hlt
adc
mov
arpl
inc
sahf
aam
xchg
sub
mov
loop
fs
jno
jmp
push
stc
jno
push
mov
cmp
lock
pop
ret
js
cld
fnstsw
rcl
fcmovnb
fsubrl
fwait
clc
push
loopne
lret
lock
pop
push
iret
cli
sahf
scas
jle
in
popf
in
adc
gs
fnstcw
inc
cmc
cmpb
sub
pop
jbe
xchg
or
sub
and
int3
mov
fidivl
lds
mov
ds
lcall
repnz
cwtl
das
xlat
inc
inc
push
mov
inc
cmp
fldenv
xor
jecxz
cli
fstps
sahf
sbb
idiv
mov
adc
fstl
cltd
pusha
and
dec
aas
fdivrl
adc
pop
movsl
xlat
subb
jns
mov
mov
mov
mov
lret
push
mov
jbe
out
cwtl
mov
inc
incb
loop
push
outsl
lock
inc
insb
pop
loope
xor
ficoms
sbb
movsl
xor
cs
ficoms
fisttpll
dec
inc
out
push
popf
adc
enter
add
dec
adc
cli
adc
sub
loope
adc
xlat
mov
xlat
inc
test
mov
lock
xor
inc
js
adc
cmp
push
push
and
scas
mov
sti
inc
fiadds
dec
dec
std
sbb
pop
push
adc
xlat
fidivs
in
fwait
popa
xor
inc
sahf
mov
push
stc
into
adc
jnp
cmp
xchg
nop
or
aad
in
enter
add
das
shr
sbb
sbb
aad
fnsave
adc
inc
add
inc
sbb
add
jno
mov
dec
mov
mov
or
adc
push
cltd
hlt
cmp
dec
cmp
push
test
adc
adc
dec
loopne
loopne
loop
adc
in
xchg
jl
fucomi
cli
adc
out
das
and
xlat
rcr
cli
jnp
or
nop
lods
mov
lret
sub
dec
and
cmc
jnp
xlat
mov
dec
call
mov
outsb
clc
ret
stc
xor
fnstsw
ficoms
lcall
jns
mov
mov
xor
jno
sbb
mov
ja
sbb
outsb
stos
xchg
rcrb
jae
adc
out
outsb
sub
cmp
pusha
mov
and
imul
outsl
push
mov
out
cmpsl
test
int
pop
push
loopne
sbb
and
iret
push
mov
inc
xchg
stos
mov
or
add
shl
cld
stos
sti
pop
add
xor
dec
jo
decl
loop
mov
clc
iret
mov
add
ficoms
sub
rcl
pop
popf
jl
out
fscale
loop,pt
divl
pop
adc
ss
adc
inc
add
dec
or
mov
lret
or
jmp
int
es
mov
aas
adc
xchg
xorb
loopne
roll
or
lock
mov
xor
movsb
jecxz
loopne
inc
shrb
stos
sbb
out
mov
push
cwtl
inc
pushf
lea
test
dec
cmp
sbb
stos
stos
xor
inc
inc
mov
sar
xchg
dec
shrb
and
lods
fiadds
mov
fldt
jae
imulb
into
sub
das
inc
push
push
lods
push
out
pop
sub
insb
push
dec
jno
dec
mov
sbb
dec
ss
jp
or
je
aaa
xchg
jb
xchg
add
inc
adc
fyl2x
and
cmp
mov
ret
out
pusha
mov
sbb
adc
xor
cld
mov
jecxz
cs
aad
sub
inc
mov
or
test
aaa
cmc
pushl
fiadds
es
sub
cmpsb
inc
cmp
cmp
xchg
lds
or
mov
dec
inc
scas
fnstsw
ds
idiv
aaa
pop
aas
out
mov
rolb
adc
inc
jo
arpl
cmp
dec
pop
mov
sub
xor
xlat
fcmovb
scas
mov
ja
mov
xchg
out
ficoml
fisttpl
std
push
rolb
sbb
dec
xor
jmp
fsubrl
sbb
pusha
in
cwtl
push
in
mov
inc
inc
pusha
out
cli
enter
sub
dec
pop
pop
inc
xor
test
repnz
jecxz
mov
xchg
sub
scas
add
mov
xchg
sub
xchg
insb
xchg
adc
repnz
ja
test
pop
mov
add
ret
pop
lahf
int3
push
or
divb
or
ror
pop
sbb
push
jo
mov
dec
inc
cli
cmp
add
sarb
cmc
sub
loopne
enter
insb
inc
faddl
sbb
or
add
inc
leave
cmc
loope
and
aad
mov
add
add
loope
and
mov
data16
hlt
adc
cmp
cmp
fidivrs
testb
repnz
lds
adc
cmp
xchg
mov
pop
aad
xor
xchg
xor
inc
jb
pop
insb
mov
xchg
jne
cli
push
inc
int
loope
adcl
sub
aam
mov
xchg
sbb
ds
jp
add
adc
and
mov
pop
mov
sbb
fndisi(8087
data16
enter
push
cmp
jle
fwait
lods
inc
cs
std
or
test
ljmp
xor
mov
add
lds
mov
addr16
stos
adc
int
jecxz
aad
jnp
insl
dec
nop
outsb
inc
cmp
ja
mov
adc
xor
ljmp
fnstcw
dec
sub
dec
rol
sub
int3
jo
aad
dec
xchg
loopne
scas
pop
mov
inc
jle
ja
mov
mov
addr16
es
stc
mov
sbb
shll
or
enter
fdivl
dec
jns
mov
jmp
test
mov
fiaddl
stos
adc
rcrl
mov
adc
jle
cmp
dec
mov
inc
and
cli
ficomps
jne
loop
or
in
pop
adc
jne
insl
enter
cmp
lret
rep
clc
pop
and
mov
and
js
mov
ss
sahf
or
jg
imul
mov
insl
repz
lds
sarl
mov
pop
es
loop
xchg
enter
outsb
push
xchg
testb
pop
bound
arpl
dec
mov
mov
xchg
into
xlat
mov
jb
xchg
notb
jnp
sbb
addr16
out
or
pop
cmp
fstl
pop
cmc
ja
fdivp
enter
push
insb
jl
mov
add
jge
rol
fs
rcrb
jl
pusha
test
inc
push
gs
movl
and
fisttps
fisubrs
ds
aaa
lcall
js
push
and
sub
enter
in
fisttpl
mov
repnz
adc
xchg
xchg
add
mov
inc
cmp
test
stc
and
lret
mov
stos
jne
cld
ror
icebp
jb
loopne
push
mov
sub
push
in
test
mov
lea
jg
cmp
pop
add
cmp
sbb
ret
cs
fmull
shl
jle,pn
push
sub
ror
adc
push
lret
int
testl
pop
push
or
test
orb
xor
fnstsw
jecxz
pop
pop
fs
jo
into
dec
es
lea
loop
pop
mov
jo
inc
push
or
das
mov
popa
inc
outsb
pop
out
call
stos
pushf
mov
sbb
xor
into
and
data16
add
in
dec
into
cli
fsubl
push
mov
out
xor
test
push
push
loop
sbbb
push
push
push
lods
in
xchg
xchg
sar
or
and
aam
sbb
mov
clc
push
and
push
les
jle
cli
mov
into
je
inc
loope
xor
sti
movsb
jno
jp
pop
add
nop
inc
xor
in
push
lret
ljmp
jnp
inc
mov
dec
in
jmp
fiaddl
inc
and
inc
push
or
dec
fisubs
out
cmp
or
ds
out
movsl
hlt
pop
mov
cmp
cltd
popa
shrl
or
jp
mov
orb
cmpb
xchg
lret
push
data16
nop
add
push
cmp
xor
imul
out
and
mov
pusha
sahf
fucomp
push
repnz
push
push
add
or
mov
mov
les
arpl
outsl
jnp
jg
pop
es
sub
ljmp
sahf
popf
dec
xor
mov
and
in
xor
aam
mov
inc
movsl
jg
and
shll
test
jbe
ficompl
adc
xlat
enter
adc
loop
inc
ds
and
int3
push
loop
and
pushf
inc
xchg
inc
pop
push
inc
in
lret
aas
sarl
mov
sbb
sbbb
mov
push
outsb
inc
jae
add
call
scas
sub
cmp
loopne
adc
jne
shrl
imul
adc
popa
inc
les
cmp
push
sub
movsb
arpl
int3
clc
das
aas
push
sbb
shll
mov
inc
js
rolb
addb
cld
xchg
push
fcoml
and
xlat
dec
shr
mov
jmp
in
sbb
mov
add
jl
fadds
and
out
dec
cmp
xor
inc
loope
xchg
fnstsw
ficomps
and
xor
data16
clc
rcl
rorb
insl
add
ficoms
xor
sub
pop
add
xchg
dec
add
mov
pop
xor
jae
subb
lock
jmp
sbb
cmp
cmp
or
shll
outsb
push
sbbl
aas
in
dec
sub
stos
enter
push
push
pop
mov
ficoml
aaa
xchg
insb
loop
fidivs
decb
sti
in
in
repz
ficoml
mov
leave
std
in
sbb
inc
loopne
iret
sbb
das
daa
popa
push
dec
into
icebp
cmp
lret
test
add
loopne
mov
mov
aas
jle
inc
push
mov
fimull
and
inc
adc
negl
cli
lahf
jne
and
aas
adc
inc
mov
ds
lahf
dec
jo
fldenv
push
dec
xchg
mov
stc
cld
sbb
inc
iret
pop
add
loope
inc
notl
mov
in
and
xor
jecxz
inc
ja
mov
aas
loopne
stc
in
mov
arpl
inc
aas
push
push
stc
decl
add
sar
mov
jo
dec
xor
sti
aad
enter
lret
loopne
inc
xor
nop
or
jle
add
fsubrs
shrl
loopne
outsb
pop
push
inc
pop
lock
shll
jg
aad
jmp
lret
lret
sbb
jne
jo
xchg
mov
out
pop
or
jmp
sbb
add
and
loop
pushf
imul
xchg
lods
iret
xor
jno
sbb
xchg
call
jbe
dec
cmpsl
cli
cli
and
mov
mov
popf
mov
cwtl
fbstp
inc
testb
or
sbb
fldt
or
inc
loopne
mov
adc
inc
pop
mov
ds
and
lcall
repnz
insl
inc
rolb
mov
adc
push
adc
xor
dec
jl
mov
mov
nop
into
jno
pop
repz
mov
mov
push
cs
xchg
xchg
test
inc
pop
insb
pop
mov
cld
dec
sbb
push
xchg
inc
rol
adc
stos
and
or
rorl
jge
push
mov
jp
dec
insl
imul
jo,pt
lret
arpl
imul
hlt
dec
rcrl
push
scas
push
fwait
jmp
lods
xor
jle
jle
test
inc
mov
les
mov
mov
push
mov
lret
cli
xor
inc
idivl
push
psraw
ljmp
push
mov
mov
cmc
pop
dec
pusha
cmc
mov
lock
stos
jl
cli
or
es
test
mov
dec
inc
aad
lret
lret
inc
ljmp
ja,pn
lcall
fmulp
fistpl
adc
cli
or
mov
jbe
popf
je
dec
add
int3
lock
outsb
stos
sbb
mov
subb
sbb
incb
mov
mov
shlb
mov
sub
and
popf
or
adc
jo
xchg
add
pop
xchg
mov
popa
xchg
sub
or
icebp
cmp
pop
inc
add
out
test
mov
out
icebp
scas
push
stos
and
dec
rorb
aad
dec
add
loope
mov
mov
sarl
xchg
into
ljmp
in
adc
sub
push
rcr
stos
mov
push
cld
jmp
add
sbb
and
flds
cs
js
push
mov
xchg
adc
int3
xchg
cmpsb
and
andl
adc
not
fwait
jae
fdivrs
cli
prefetcht2
mov
dec
jnp
aad
xchg
ficoms
jbe
jbe
cld
jo
dec
dec
cmp
fdivrs
mov
fsubrl
sbb
push
std
inc
mov
sub
inc
pushf
int3
push
cli
inc
adc
adc
adc
cld
push
test
inc
xor
xchg
push
cmp
into
jb
sbb
fistps
xchg
scas
jb
les
adc
aaa
xor
iret
dec
xchg
mov
pop
pop
jne
cld
icebp
fsts
mov
ja
movsl
rcrl
stos
aad
test
mov
repz
stos
in
lret
roll
ficoms
add
add
push
xchg
sti
and
dec
cmpsl
mov
jge
insl
mov
adc
pop
dec
fnstsw
ret
add
outsb
rcl
xor
xchg
stos
adc
mov
or
or
mov
hlt
dec
arpl
ljmp
fists
int
loop
mov
movsl
imul
in
aad
rcrb
xchg
leave
insb
adc
sti
add
xor
pusha
out
mov
xchg
mov
jle
cmp
sti
fldt
insb
dec
and
sbb
clc
mov
push
idivb
rcrb
pusha
stc
jmp
div
notb
dec
frstor
int
ss
loopne
les
pop
jp
aad
jnp
push
push
shlb
push
jb
xchg
dec
fildll
movsb
subl
pop
out
sbb
int3
imul
pop
gs
cmp
loop
bound
pop
ss
jg
adc
add
push
loope
sti
jge
pop
adc
popf
iret
sti
xlat
into
fisttps
mov
aam
cld
push
movsb
dec
inc
insb
xchg
dec
add
test
pop
flds
cmp
ret
xor
adc
mov
pop
ja
dec
mov
xor
call
fdivs
or
mov
cmp
movsl
loop
in
adc
loopne
sbb
out
lcall
test
inc
pop
or
shl
sbb
xor
mov
fst
inc
push
or
cld
outsb
loope
jp
jbe
adcl
div
test
jp
flds
inc
sub
ljmp
cmp
clc
js
stos
out
outsb
inc
lock
xchg
ret
fmuls
pop
aam
cmp
cmpsb
mov
add
cmp
mov
insl
data16
mov
jns
rcrb
jb
gs
dec
gs
jl
stc
shlb
aam
iret
inc
aas
leave
mov
sub
insl
aas
mov
mov
fst
stos
sbb
xchg
rolb
fmulp
nop
repz
flds
inc
js
xchg
mov
ljmp
sbb
out
or
lcall
std
mov
xchg
daa
aad
aaa
sbb
call
inc
xchg
insl
std
xchg
mov
cs
mov
sbb
cli
inc
xor
cmpsl
shrl
in
test
mov
inc
rorb
jnp
adc
cld
out
xchg
ljmp
das
mov
cmp
sub
clc
movl
add
xchg
and
gs
pusha
cmp
test
loopne
cmpsl
dec
stos
out
out
outsb
jmp
imul
mov
or
stc
ret
dec
dec
adc
aad
cmp
enter
inc
into
add
mul
push
jmp
mov
pop
inc
xor
add
cmp
and
and
xchg
adc
jmp
fldl
xchg
rcl
test
ja
adc
push
insl
clc
push
sbb
inc
ljmp
sub
pop
out
sahf
daa
cwtl
imul
enter
jnp
cmp
icebp
icebp
dec
add
aaa
ficoml
ret
gs
push
mov
mov
bound
rcrb
loop
ss
cld
xchg
shrl
in
mov
rcll
xchg
shll
movsl
and
push
adc
fsubrs
dec
in
sub
mov
and
int3
add
lret
bound
sub
sub
bound
mov
loopne
push
lcall
icebp
aaa
cltd
and
rorl
add
lcall
mov
inc
loopne
cli
faddp
ret
add
mov
loopne
test
cld
insl
test
dec
lcall
int3
inc
cmc
pop
pop
jb
dec
xor
inc
push
or
xor
sub
movsl
sti
je
rorl
loop
sbb
dec
push
rolb
aaa
icebp
shll
or
insb
jae
xlat
icebp
or
xchg
mov
movsb
arpl
jne
shrd
xchg
adc
pop
xlat
sti
mov
add
push
sub
mov
sub
pop
mov
sbb
xor
and
inc
and
aad
add
ror
jp
mov
inc
inc
add
idiv
push
ret
repz
aad
and
adc
movsl
lds
mov
cmp
dec
jle
in
add
shrb
dec
lock
pusha
sbb
shll
int3
jb
sti
sahf
xchg
stc
cltd
leave
mov
fs
inc
repnz
cmp
push
cmp
divb
jg
fmul
clc
std
mov
cmp
or
sub
mov
fidivs
outsb
inc
or
pop
inc
mov
jbe
push
jbe
lods
repnz
inc
fwait
iret
fdivr
mov
dec
jno
add
adc
jb
das
ret
nop
aam
stos
call
outsb
fdivp
in
jb
inc
shrl
das
push
cli
scas
ss
pop
fdivr
mov
dec
aad
cmpsb
push
mov
inc
subb
js
xchg
push
fisubl
loope
sub
out
in
xlat
cmp
into
notl
shr
mov
inc
nop
iret
out
push
jb
add
dec
inc
and
pop
rclb
scas
cmp
stc
mov
mov
add
movsb
jbe
push
call
mov
push
test
pop
add
push
cmp
outsl
mov
add
sbb
mov
ja
cmc
leave
outsl
mov
cmp
sbb
lds
inc
sbb
xchg
ja
faddl
notl
lcall
neg
inc
call
testl
bound
test
in
insb
pop
inc
mov
movsb
imul
ss
loopne
inc
cld
mov
mov
cmc
add
mov
pop
das
lods
out
fmuls
lahf
ficoml
dec
sbb
fsubrs
bound
mov
pop
push
out
lcall
js,pt
nop
jns
aam
popa
shlb
call
push
mov
mov
jp
mov
adc
pop
mov
nop
and
in
shrb
icebp
sar
imul
cmc
jle
or
pop
fstpl
inc
in
movsb
repnz
jo
js
inc
lock
mov
call
adc
andl
notl
sub
mov
imul
repnz
xor
jmp
lds
dec
push
fadds
pop
sbb
mov
dec
xor
pop
ljmp
mov
jnp
mov
xor
fdivrl
add
test
rol
mov
push
jno
rcl
mov
pushl
xor
and
pushf
les
ja
push
cs
jge
mov
stos
sub
sub
in
push
adc
and
cwtl
fisubrl
cmpsb
fildl
pop
stc
add
ljmp
aam
loopne
inc
dec
iret
or
or
lds
push
cld
mov
cmp
leave
test
lret
in
pop
shlb
sbb
cmpb
add
dec
ret
mov
inc
inc
inc
push
push
lds
jbe
ficoml
cmc
enter
add
push
xchg
pushf
fstpt
cmp
push
xchg
pop
or
ja
out
fidivrs
ficomps
and
gs
mov
inc
pop
inc
and
das
frstor
sub
or
gs
loopne
outsb
mov
sbb
dec
push
add
inc
dec
shr
fstp
imull
rcl
pushf
andb
add
mov
pop
sub
fidivrs
jo
stos
mov
mov
push
sbbl
and
test
jne
test
pop
ljmp
dec
sbb
push
scas
cld
sbb
into
stos
fdivl
or
rcr
sbb
sbb
shlb
mov
out
repnz
push
into
dec
push
cmp
mov
and
xor
xor
sarb
out
in
fidivrl
std
add
loope
push
mov
add
xchg
or
ret
push
bound
jle
push
and
jge
iret
stos
mov
add
jp
popf
loopne,pt
in
aaa
adc
iret
aam
popf
shlb
mov
and
fcomp
fimuls
test
mov
mov
sbb
cli
add
mov
mov
popa
iret
fisttpll
mov
jno
xlat
shr
int
jl
fwait
cmpsb
push
inc
out
push
or
mov
pop
iret
add
pop
mov
stc
testb
scas
sub
in
fists
aam
mov
jnp
loopne
mov
mov
icebp
mov
add
aas
mov
es
jg
loope
push
rorl
and
fstps
bound
pop
inc
les
add
nop
ja
aam
pop
and
pop
push
cmpsl
jno
jno
rcrl
outsb
clc
inc
xchg
aad
nop
fsubr
xor
test
mov
mov
jmp
dec
lcall
rcr
loop
dec
loopne
sbb
jp
lahf
xchg
push
gs
loope
roll
mov
imul
push
jge
jmp
and
cmpb
mov
cmpl
aaa
mov
xchg
clc
adc
lds
jae
push
push
cli
push
jo
jmp
sub
fwait
pop
or
mov
xchg
movsl
call
add
fwait
rcr
adc
inc
int
sarl
xchg
fmul
adc
xor
add
sahf
push
sub
cmpsb
or
sbb
dec
in
inc
mull
mov
cmp
sub
mov
xor
ss
nop
mov
jne
nop
popa
pop
filds
insb
sbb
into
inc
addb
repz
cld
subl
fmuls
inc
sbb
sub
pop
sub
sarl
mov
fstl
rolb
fadds
or
pop
xchg
jp
xlat
xlat
ret
and
or
subl
jmp
jl
xchg
inc
xlat
je
test
rclb
xchg
rcrb
jg
loopne
inc
xor
pushf
mov
jle
popa
cmc
pusha
push
fisubrl
imul
cwtl
aas
and
push
lods
or
aad
cli
mov
xor
cmc
pusha
jb
add
inc
movsl
adc
xor
lds
cmp
add
mov
jmp
das
and
xlat
jb
xchg
stos
stc
xchg
xor
scas
call
negl
loop
jge
sub
adc
sbb
test
add
into
cli
push
mov
dec
jge
cmp
sarb
mov
out
fiaddl
adc
fadds
add
bound
sub
xchg
sahf
cmp
decl
cmp
mov
mov
jl
outsb
addb
fistpll
inc
mulb
notb
sub
rolb
pop
and
inc
inc
mov
pop
xchg
negb
outsl
xchg
stos
movsb
sahf
lahf
push
call
or
xorb
pop
inc
fsts
bound
mov
fidivrs
outsb
testb
sub
add
or
out
arpl
or
dec
loopne
pop
dec
divb
cmp
mov
fildl
loop
jle
push
fstpt
mov
jno
dec
jge
inc
rolb
call
test
mov
pop
mov
mov
movsb
push
jae
jo
xlat
jns
pop
pop
dec
adc
mov
div
fisubl
lock
and
push
xchg
pop
mov
popf
test
xchg
ds
sbb
mov
ds
inc
call
dec
jb
cld
rcrb
mov
xor
gs
daa
jp
cli
sti
dec
add
cmp
add
in
cmc
call
imul
addr16
stc
pop
pop
cltd
les
pusha
mov
addr16
push
out
pop
and
cmp
lds
sbb
rorl
imul
ds
adc
cmc
shlb
jmp
mov
mull
sarb
pop
out
push
xor
inc
sarl
mov
enter
loop
cmp
jmp
int3
ret
xchg
ljmp
adc
arpl
jp
imul
popa
push
rorl
aam
outsl
sbb
inc
out
mov
fldl
add
test
fstp
mov
or
and
jnp
test
in
sahf
adc
es
mov
xor
xchg
sbb
xchg
ja
pusha
xor
mov
xchg
and
mov
pop
push
inc
mov
lret
icebp
lock
sbb
inc
sbb
pop
inc
sub
xchg
mov
js
leave
jl
sub
mov
mov
xlat
sub
inc
test
cli
out
fstps
push
lahf
std
add
sbb
xchg
push
into
fiadds
push
pop
mov
mov
push
lea
cmp
sbb
movsl
faddl
in
outsb
fstl
loop
rorl
ret
pop
pop
mov
stos
fcmovne
je
jns
pop
das
mov
push
roll
mov
shl
dec
jle
cmp
lcall
lea
es
lds
inc
andb
or
pop
or
inc
fdiv
stos
pop
mov
addb
cltd
stos
out
jl
sbb
data16
out
xchg
fcmovbe
rorb
flds
cltd
mov
and
clc
inc
inc
mov
and
insb
inc
cmpsb
inc
out
sbb
push
lods
push
jg
push
dec
xchg
cmpsb
shr
mov
push
arpl
cmpsl
jp
aaa
jle
mov
push
mov
in
xchg
fsubr
push
mov
sbb
loopne
add
inc
hlt
fdivr
imul
cmp
push
and
rorb
and
add
ljmp
pop
inc
cltd
icebp
scas
push
stos
fimuls
nop
ja
lahf
ja
lods
jl
add
into
rcr
lret
movsl
lea
mov
ficoms
or
fimull
fldcw
lods
inc
or
sub
test
add
add
lods
aad
jo
mov
subl
jg
dec
int3
mov
xchg
mov
ficompl
lret
fwait
lods
in
sub
leave
or
fucomip
lock
imul
popa
mov
je
cmp
imul
insb
femms
mov
sub
dec
ret
loop
out
jecxz
cmpsb
inc
test
out
jge
sub
scas
fimuls
popa
fsubs
loop
pop
jp
sub
jp
push
add
enter
sbb
jne
mov
mov
test
loopne
fcmovu
jmp
hlt
shrb
int
dec
loope
adc
mov
jmp
xchg
cmp
lret
ja
mov
aad
pop
das
dec
add
mov
ja
cmc
dec
das
xchg
xchg
inc
mov
in
cld
xor
xchg
shl
push
int3
sbb
adc
les
popf
inc
out
and
or
iret
xlat
jo
sub
mov
pop
push
dec
jmp
xchg
int3
mov
push
cmp
xchg
add
adc
pop
ljmp
inc
je,pt
sti
pop
sbb
faddl
mov
nop
xchg
nop
mov
sub
enter
les
xchg
push
push
scas
out
sbb
inc
testb
sub
sub
jp
sub
fsubr
out
in
fmul
test
aaa
xor
sar
test
cmc
out
aaa
into
ret
dec
movsl
sub
pop
lods
imul
inc
lock
pop
xor
mov
shlb
jge
sbb
jns
ret
imul
push
lock
pop
rcrb
and
push
sarl
sub
clc
sub
xor
sub
hlt
adc
lods
or
cli
jns
idiv
dec
xchg
cmp
out
pop
aam
notl
jo
xchg
dec
test
inc
inc
mov
rcrl
inc
sbb
fwait
mov
fdivrs
mov
xchg
jp
xchg
fcomi
mov
adc
mulb
cmc
out
jns
inc
sub
adc
mov
and
mov
inc
rorb
lcall
xor
ffree
cld
ja
pop
jp
loopne
xchg
push
pop
cmp
lret
xor
mov
retw
adc
shll
rorb
and
out
out
sub
hlt
out
sar
aas
and
les
dec
bound
iret
push
xlat
loop
scas
cmpsb
loop
dec
mov
xor
shl
int
push
add
shll
xor
mov
adc
shlb
cmp
jae
inc
cs
fwait
test
mov
fidivrs
pusha
gs
jbe
cld
idivb
mov
mov
f2xm1
pop
or
test
jnp
enter
ret
sbb
sbb
outsb
jl
pop
cmpsl
push
sub
adc
mov
dec
fdivr
stos
inc
jo
mov
mov
dec
fcoms
dec
xor
mov
jp
pop
fsubrl
mov
idivb
inc
rclb
divb
xor
sarl
cmp
movsl
dec
and
mov
jb
inc
sbb
cmp
aam
rcrb
xorb
jmp
iret
jne
add
aaa
imul
sub
les
dec
into
lret
mov
dec
hlt
into
jp
lea
mov
clc
ss
jns
xor
shrb
int3
jb
cld
xchg
xor
mov
lock
mov
loope
addr16
add
gs
mov
outsl
pop
repnz
add
mov
adc
mov
or
aaa
adc
push
mov
inc
sti
adc
xchg
inc
outsl
fldenv
mov
jb
dec
lock
push
push
pop
jle
nop
fsub
fsubrs
mov
jp
sub
mov
xor
xchg
push
xor
fnstcw
xchg
jp
scas
jnp
cmp
incl
shll
xor
rolb
fisubrs
push
in
imul
or
pop
sub
sub
pop
inc
es
xchg
mov
push
loop
add
sbb
imul
lret
inc
maskmovq
imull
fiaddl
adc
test
lcall
push
xor
and
fnstcw
repnz
cmc
scas
sbb
pop
incl
adc
sti
xchg
xor
movsb
jnp
jb
mov
pusha
lods
jae
hlt
cs
xchg
loop
popa
xchg
popa
pop
rcl
cmc
add
fs
daa
push
test
mov
pop
outsb
mov
fcomps
fstpt
push
jno
cmp
es
lds
loop
xchg
mov
cmp
jmp
loopne
iret
ljmp
mov
iret
push
fs
adc
mov
or
jbe
sti
sahf
ficoms
pusha
lea
xlat
ljmp
sub
adc
sarb
sbb
fcoml
push
pop
fldz
dec
fdivr
fcompp
push
push
jp
in
pop
push
inc
xchg
pop
jne
mull
fisubl
xchg
adc
lretw
lock
sub
dec
js
hlt
fldt
sbb
rorl
aam
std
jne
sbb
fcompl
testl
jg
aad
cmp
push
jecxz
add
adcl
lret
mov
xor
jge
jbe
pop
and
enter
push
inc
xchg
cmpb
lret
mov
pop
inc
jo
dec
ljmp
lahf
lock
jb
mov
add
lret
sub
lock
cmp
mov
outsl
pop
jmp
inc
in
cli
pushf
push
rcrl
repz
lret
cmp
fidivrl
aaa
icebp
cmp
jl
scas
bound
mov
pop
jmp
incl
lret
cmc
jle
inc
sub
add
fcomp
sbb
mov
lods
ds
cmpsb
sbb
pop
xchg
stc
mov
pop
in
into
stos
stos
or
xchg
or
pusha
fimull
outsl
add
int
enter
adc
flds
test
push
test
rolb
les
dec
mov
cmp
mov
ret
inc
jo
popf
addl
xchg
mulb
add
pop
push
loopne
jmp
mov
orb
pop
sahf
dec
xor
or
ds
push
cmp
out
fdivl
lret
xor
jae,pn
or
and
ds
rcrb
pop
mov
dec
fcmovb
push
pop
fimuls
cmpsb
hlt
mov
dec
pop
pop
das
cmp
out
ret
adc
flds
repnz
aam
sbb
fnstsw
dec
cs
xor
mov
sub
adc
mov
stos
sti
jo
je
xlat
mov
xchg
xlat
jb
xchg
in
cmp
in
fiadds
push
sbb
sub
shlb
aaa
sub
aaa
cs
fcoml
das
ja
pop
jo
or
shll
outsl
scas
scas
je
sbb
add
xchg
sahf
mov
cmc
sbb
jp
into
icebp
addr16
mov
inc
mov
push
mov
jb
outsl
ss
push
sbbl
or
inc
fldcw
movsb
stos
xchg
push
push
jnp
mov
outsl
xchg
pop
and
ljmp
outsl
dec
notb
pusha
sub
out
mov
push
fmuls
repnz
adc
adc
cmp
xchg
mov
ss
xlat
lret
test
pusha
jns
outsb
jno,pn
rclb
repnz
xchg
cs
pop
cs
jae
dec
mov
mov
out
add
add
mov
fstpt
lcall
lret
aad
nop
mov
adc
xor
sbb
add
clc
bnd
insb
daa
lods
aad
fdivrl
std
sub
and
jge
repnz
nop
outsl
jnp
adc
fistl
stc
shrb
ret
jl
hlt
hlt
cmp
xor
addr16
push
sub
call
rolb
test
dec
imull
and
jp
lock
bound
xchg
inc
jp
sbb
imul
test
testb
stc
or
lock
jb
rclb
inc
jnp
cli
lock
int3
jmp
lret
addr16
mov
inc
jg
incb
xchg
add
sub
fbstp
or
cmp
mov
xchg
mov
lret
ficomps
mull
out
jecxz
mov
movsb
icebp
test
loop
mov
xchg
scas
and
mov
cld
cwtl
and
pop
jg
inc
lock
mov
adc
cmp
pop
bound
pop
jg
lcall
lahf
dec
nop
xor
out
leave
push
xchg
or
popa
add
dec
jo
push
jb
icebp
or
push
ret
or
out
jo
and
mov
jo
jb
ds
div
aam
insl
sub
cli
loop
jl
out
inc
pusha
jmp
popl
lds
js
iret
enter
mov
cld
aaa
into
jg
add
push
fsts
scas
jbe
in
sbbl
push
loopne
pop
scas
xchg
fnstsw
pop
cmp
mov
hlt
leave
fucompp
sbb
fmuls
push
add
pusha
test
push
in
inc
inc
sub
xor
inc
xchg
sub
jb
repnz
mov
pusha
mov
pop
nop
loopne
clc
bound
aad
pop
xor
dec
aas
clc
fwait
sar
es
push
inc
paddsb
test
pop
mov
jecxz
shlb
divb
xor
inc
add
cmp
shll
mov
enter
or
dec
dec
lcall
ffree
sbb
sub
push
mov
xor
in
adc
xlat
push
shll
xrelease
cmpsb
sub
fidivrl
sub
pop
push
clc
or
sub
push
add
push
push
test
adc
dec
mov
pop
inc
dec
jno
push
std
mov
inc
lods
mov
jbe
mov
cmp
maskmovq
testl
push
push
adc
jo
cld
xchg
popa
xchg
aam
jmp
divl
in
rcrl
add
add
adc
pop
ds
iret
ss
inc
iret
or
shrb
rolb
add
xchg
inc
nop
rcrl
lahf
jne
inc
xlat
adc
cld
mov
sub
in
mov
ljmp
lods
loope
rclb
xor
push
push
fisttps
inc
fiadds
jne
and
push
es
loopne,pn
rcll
mov
push
hlt
hlt
rclb
pop
icebp
or
rorl
xchg
jns
or
mov
mov
pop
adcl
in
cmp
inc
ficoms
enter
mov
jbe
mov
and
mov
shl
fisttpll
ja
dec
xchg
rol
push
cmp
repnz
mov
sbbl
sbb
leave
insb
inc
add
scas
and
or
mov
add
xchg
or
lcall
cs
push
xor
insl
mov
add
iret
add
add
jns
lea
mov
xchg
dec
lock
arpl
loope
or
mov
dec
xchg
dec
daa
jae
pop
icebp
cld
and
mov
loopne
movsl
mov
xchg
insb
xchg
fs
cmp
jmp
add
and
push
dec
out
es
mul
xchg
pop
mov
push
inc
push
out
add
sub
push
into
dec
ret
xor
inc
stos
mov
push
cmp
jle
je
push
push
fucomi
popa
enter
int3
mov
mov
add
mov
ret
lret
test
mov
or
pop
in
add
scas
ljmp
xchg
jnp
sub
xor
sub
push
ljmp
lock
mov
mov
xor
pop
push
xchg
rcr
mov
sub
jnp
mov
dec
and
sbb
cmp
lods
inc
push
lods
orb
popf
out
and
push
mov
dec
push
jecxz,pt
negl
addb
mov
jp
aaa
leave
sbb
repz
dec
mov
xor
cmp
leave
and
xchg
loopne
cmp
mov
inc
or
sbb
adc
rep
divb
rcr
cmp
sub
xchg
icebp
jle
inc
mov
xor
int3
orb
mov
pop
enter
xor
fisubrs
lods
mov
and
adc
adc
testl
pmulhuw
fld
in
mov
stc
subl
cli
fdivs
mov
lock
xchg
push
movsb
sbb
add
sahf
insl
dec
outsl
mov
leave
mov
mov
repnz
mov
shrl
pop
mov
mov
jo
cld
cmp
mov
bound
pop
mov
sbb
xchg
fnstenv
ret
data16
xor
fstps
push
int
xor
in
std
adc
add
je
fidivl
cmc
xchg
fldenv
add
adc
andb
loopne
pmuludq
mov
aam
add
push
iret
jno
stos
adc
orb
jmp
daa
arpl
into
je
cmc
movsb
jle
push
jg
push
scas
mov
jb
sbb
in
movsl
fmuls
jge
lds
sub
sub
jne
push
test
in
add
std
or
mov
dec
mov
mov
xchg
mov
rcrl
sub
and
inc
aam
lret
out
ret
xchg
ret
sbb
and
jg
addr16
xor
int3
xor
scas
out
subl
repz
fnstsw
insb
mov
aas
fsts
lock
pusha
push
inc
rcr
mov
mov
lret
test
loope
add
bound
dec
das
sub
call
rorb
push
fdivrp
outsl
je
sahf
jle
sti
add
test
sarb
imul
std
addl
sub
adc
xchg
lods
or
ret
push
inc
in
mov
add
mov
enter
sbb
fadd
movsl
cmp
addr16
xor
iret
scas
mov
into
lcall
pop
mov
push
jb
prefetch
or
add
xor
addl
in
xor
divps
push
pop
push
stc
call
mov
aaa
xor
mov
ror
jns
jge
dec
imul
clc
inc
mov
inc
aad
outsl
adc
inc
mov
lcall
scas
sti
icebp
out
jne
ljmp
jo
push
ret
push
test
out
adc
fnstsw
int3
lret
out
in
adc
sub
push
out
testb
addr16
jns
ja
pusha
push
popa
les
mov
cwtl
movsb
ds
push
iret
movsl
ljmp
fistpl
mov
ss
mov
fstpl
and
and
mov
sub
fiadds
rcll
inc
fisttpl
push
stc
add
jmp
mov
fsts
addr16
pop
test
inc
rcrb
arpl
fdiv
fisubl
in
dec
push
push
push
inc
testb
test
jns
nop
dec
aam
call
adc
jns
out
add
and
les
push
inc
in
sbb
xchg
sub
mov
mov
xor
fidivl
lcall
push
js
jecxz
pop
jp
rcr
push
add
mov
inc
in
lea
inc
cmp
es
adcb
cmc
ss
lds
jmp
rcll
inc
ret
test
add
je
ss
dec
sbb
fmuls
lcall
ficoms
fadd
pop
jge
outsl
dec
jmp
sbb
xor
inc
add
dec
rclb
cmc
sahf
inc
loopne
hlt
add
dec
dec
imul
push
insb
and
push
mov
fs
pop
add
movsb
fmuls
sub
xor
sahf
dec
push
mov
cld
icebp
rorb
jb
ljmp
rep
cmc
pop
push
mov
pop
add
pop
jecxz
aam
pop
and
popa
int3
or
clc
push
pop
mov
mov
aam
stos
adc
inc
testl
fwait
hlt
cmp
pop
addb
ret
movsl
push
sub
loope
xor
cld
dec
mov
shr
ljmp
pop
fdiv
mov
fdivl
jb
sbb
or
jb
cmp
leave
aaa
push
xchg
xlat
fstpl
pop
mov
ljmp
roll
sub
push
xchg
sahf
or
cli
dec
mov
out
or
mov
shlb
out
dec
push
mov
fstpt
mov
sarl
pop
cltd
sub
jge
sahf
dec
popa
std
mov
lret
xchg
ds
outsb
lret
adc
dec
cmp
add
sub
fucomip
jle
cmc
fcmovnu
arpl
xor
lsl
ficomps
sahf
shlb
ficoml
lret
sbb
pop
jne
xlat
pop
pop
rcrb
sti
ds
push
sub
cmc
inc
inc
rcrb
data16
cmp
lods
test
dec
outsl
inc
inc
cmpsl
inc
int
hlt
gs
jle
sbb
in
in
lcall
addl
sar
push
cmpsb
xor
inc
outsl
and
lret
xor
dec
mov
sbb
in
sub
aas
test
push
into
repz
cld
or
cmp
or
jge
out
shrb
jne
mov
inc
hlt
cmpsl
mov
out
scas
cmp
mov
cmp
sahf
pop
aaa
inc
mov
arpl
or
and
mov
js
rolb
aaa
std
call
inc
sbb
scas
pop
and
dec
in
mov
jg
push
cwtl
testl
pop
loop
cwtl
push
fwait
lock
inc
rcl
jb
jmp
bnd
cmp
insl
cmp
iret
sbbl
adcb
mov
mov
fisubrl
dec
and
sarl
out
repz
mov
lcall
aas
dec
loopne
jae
mov
ret
mulb
or
add
lcall
ja
pop
jnp
notl
cli
hlt
adc
gs
roll
decb
xor
test
aad
add
icebp
cmp
push
mov
fcomps
push
or
mov
jmp
ja
inc
or
loope
shll
into
fst
cmp
push
pushf
lret
aad
rorl
add
pop
sbb
repnz
xor
js
dec
xor
nop
mov
cmp
loope
jbe
inc
imul
dec
notl
lret
pop
inc
icebp
mov
mov
sbbb
cwtl
jmp
pop
fdivrp
in
cltd
shll
pop
cmp
dec
js
jmp
add
mov
inc
adc
scas
movsb
cli
mov
mov
dec
aas
dec
and
pusha
fmulp
pop
add
rcrl
sub
or
insb
pusha
inc
test
rclb
rcl
lods
test
rcr
xor
mov
out
rol
xchg
dec
jb
push
popl
fldt
jp
gs
out
mov
xor
imul
movsb
ror
inc
mov
fsubl
fwait
fwait
inc
sarb
sbb
jne
or
out
add
jl
jle
jnp
icebp
inc
jp
outsb
js
out
inc
and
ds
ja
and
add
or
inc
out
sti
outsb
test
jecxz
iret
jb
das
aas
add
imul
add
inc
hlt
into
in
pop
sub
mov
cld
movsb
ja
add
pushf
push
xor
std
jae
loopne
jle
jbe,pt
add
or
pop
test
adc
shl
shll
xchg
idivl
out
sbb
cli
ja
out
add
ds
cld
fisttpll
jmp
inc
mov
fimull
and
stos
cld
pop
adc
fcmovnbe
cmp
inc
mov
add
in
fldcw
xchg
sbb
or
sub
daa
pop
faddl
imul
adc
daa
mov
or
mov
or
fwait
loope
xorl
mov
push
std
mov
popa
mov
rorl
test
enter
sub
mov
sbb
addr16
nop
loop
push
cmp
fwait
insl
lea
dec
enter
lahf
jl
xchg
sbb
mov
fistl
lods
arpl
adc
and
stc
push
fldenv
popa
jge
loop
filds
xchg
out
mov
add
popa
ja
fucomp
xchg
cmp
paddusb
pop
mov
adc
test
xor
cld
rorl
mov
pop
xor
stos
fdivrl
push
xchg
shlb
movzwl
sbb
lcallw
aad
je
dec
and
jmp
sbb
adc
std
or
jo
lret
or
shll
test
in
push
push
mov
push
je
fcmovne
adc
mov
fistpl
aaa
jne
push
mov
repz
xlat
icebp
shrd
jp
je
mov
cmc
xchg
loopne
fmull
adc
xor
and
ja
lods
mov
lcall
or
lods
daa
rolb
or
push
pop
dec
stos
pushf
add
mov
rcl
cmpb
xchg
incl
mov
jge
cli
outsb
ja
pop
leave
sbb
or
jno
jp
ret
lret
ss
rcrl
pop
leave
sbb
fs
pop
andb
shrb
jp
out
pop
pop
scas
inc
shl
popa
in
mov
cmpsl
rcll
adc
add
daa
xchg
xchg
cs
push
out
xchg
xor
enter
xchg
orb
stc
daa
dec
repnz
aad
mov
idivl
inc
fnstsw
jbe
movsl
jmp
inc
cmp
nop
imul
lret
out
push
jg
push
ljmp
fcmovnb
in
jb
sub
mov
out
js
pop
pop
ljmp
testl
outsb
cltd
push
fdivrs
shlb
jg
dec
lock
sub
cs
inc
jb
sti
cmpb
pop
aas
sti
xor
jp
mov
dec
cmpsb
sahf
add
fstpt
add
and
sbb
and
sarb
jmp
or
fnclex
sbb
mov
cs
rcrb
push
inc
lods
popf
repnz
add
or
lods
cmpsl
andl
movsb
popa
ljmp
and
jb
fldcw
imul
inc
mov
push
addr16
mov
sbb
or
mov
fisttps
add
inc
imul
scas
out
rcll
sub
clc
fisubrs
dec
sub
adc
ror
lock
dec
stos
loope
daa
cmpb
out
inc
add
inc
add
das
xchg
push
cmpsb
je
mov
lret
sub
gs
xlat
nop
jmp
adc
cs
insb
ds
clc
into
aad
mov
jb
shrb
add
fiadds
push
fidivl
in
movsl
mov
mov
scas
sarb
out
addl
fld
xor
jbe
pushf
or
cld
adc
cmp
cmp
mov
inc
xchg
sti
xchg
jp
adc
in
xor
sbb
xchg
fcmovnb
pusha
into
outsb
lret
push
cmpsl
sti
adc
outsb
push
inc
and
cli
dec
jmp
mov
scas
jp
cmp
fs
mov
cmp
and
jnp
lea
test
and
aad
out
xor
out
pop
mov
fisubrs
add
sti
out
cmp
push
xor
lret
insl
jmp
sbb
jg
rcll
jl
jns
mov
bound
pop
popf
cs
add
add
dec
dec
mov
lret
xor
loop
cltd
clc
stos
enter
inc
gs
push
je
or
pop
xchg
and
faddl
clc
push
or
out
std
push
inc
jmp
pop
mov
xor
sbb
movsb
inc
int3
mov
jb
sub
imulb
mov
lret
iret
adc
sub
dec
mov
xor
inc
dec
mov
shll
cmp
push
jp
push
mov
mov
sarb
dec
cli
jge
jg
repnz
cmp
mov
popa
stc
xlat
mov
jb
ret
inc
rcll
test
adc
je
add
rcll
sbb
sbb
insb
nop
ret
std
outsb
or
aad
push
jge
adc
daa
or
mov
inc
mov
pop
push
inc
jo
fldl
shl
lcall
push
pop
inc
pop
mov
shll
push
jmp
inc
xchg
push
es
sub
repz
xor
movsl
je
or
enter
icebp
pop
cmp
cli
add
mov
or
rorb
push
aas
mov
lods
jl
push
cltd
frstor
inc
inc
adc
lcall
pop
nop
call
or
sub
fimull
sub
fmul
push
in
imul
cli
mov
movsb
aas
inc
mov
ret
repz
push
aad
inc
out
ret
pusha
jg
pand
or
mov
xchg
mov
xlat
add
fwait
or
popa
pop
sets
flds
addb
adc
mov
std
or
jne
lret
les
fsubrs
lods
mov
in
ficoml
inc
stc
mov
faddl
hlt
pop
jle
pop
add
cmp
fstps
push
in
imul
inc
add
dec
and
std
mov
loop
inc
sbb
ret
imul
jle
outsb
mov
push
js
repnz
xchg
nop
mov
mov
push
sbb
jp
ljmp
pop
jmp
cmp
cmp
dec
scas
or
push
xor
in
out
addr16
inc
push
dec
loopne
fidivl
je
pop
sub
pop
ret
adc
add
push
rorb
add
les
inc
mov
sbb
jmp
sti
mov
sub
xchg
sub
call
stc
pop
jbe
jg
cs
inc
scas
shrb
stos
stos
pop
xchg
jno
pop
jl
adc
in
aad
hlt
data16
adc
fidivrl
int
and
int3
add
cmp
and
mov
mov
cmpsb
dec
xchg
scas
decb
mov
or
stos
rclb
nop
cmpsl
cmpsb
mov
inc
addl
xor
hlt
mov
and
stc
push
repnz
fdivp
insl
xchg
roll
popf
les
cmp
dec
cli
rcr
xor
mov
or
roll
fcoml
xor
jae
xor
mov
insl
lods
inc
adc
ss
xorb
add
push
stc
xchg
jmp
sub
adc
stos
adc
push
scas
mov
jne
xlat
mov
push
loope
push
ret
fisubrs
clc
add
scas
fwait
and
mov
leave
push
out
xor
and
mov
icebp
repz
jmp
sbb
loopne
cmp
xchg
sub
testb
pop
loop
mov
out
outsl
imul
xchg
fstp
paddq
jmp
stc
loope
cmp
sbb
jbe
lock
inc
inc
mov
stc
hlt
cmpsb
inc
subl
mov
sub
dec
jle
push
aam
enter
insb
xor
xor
sub
bswap
ret
mov
xchg
sub
push
push
and
clc
jne
movsl
out
scas
scas
cmp
inc
jns
pop
adc
roll
xchg
push
cmp
clc
xchg
mov
dec
fisttpl
and
loop
insl
stos
idivb
pop
cmc
iret
not
xchg
jmp
cmp
mov
loopne
loop
arpl
pop
imul
xchg
pop
insb
cmpsb
jmp
cwtl
xorb
mov
xchg
push
ds
arpl
rclb
mov
imul
mov
es
ficomps
pop
sub
test
sahf
xchg
sbb
pop
or
pop
nop
push
stos
in
cwtl
test
mov
pushf
xor
in
cltd
sti
add
rcrb
xchg
sbb
shlb
pop
mov
push
and
sbbl
int3
add
mov
jmp
hlt
add
rcrb
shl
sbb
insb
cld
dec
rorb
push
enter
inc
mov
push
fistps
inc
ret
xchg
or
sub
inc
ret
into
mov
xlat
pop
ror
jecxz
jp
cmp
loop
ret
sar
in
sahf
cmpsl
or
add
xchg
sbb
int3
fmulp
aad
cmp
cld
scas
mov
lds
or
ror
xchg
sar
or
sub
aas
fists
test
shll
mov
testb
nop
fldt
cmpsl
aad
cmp
sbb
mov
mov
cmpsl
int3
jb
or
pop
push
int
rcr
popf
loopne
push
and
nop
cld
repnz
sbb
les
push
sub
cld
mov
popa
push
cmp
sbb
jb
mov
icebp
mov
scas
ljmp
pop
sub
shll
mov
push
mov
mov
ret
mov
inc
xor
in
js
adc
sti
repz
lcall
mov
hlt
jns
sub
pop
xor
inc
stc
and
jno
dec
inc
mov
arpl
jnp
lcall
inc
les
std
test
dec
mov
mov
inc
flds
into
jle
and
stos
rcrb
sbb
sbb
inc
xor
push
hlt
cmp
sub
xchg
push
jne
loopne,pt
jl
push
and
mov
stos
clc
imul
push
sar
add
or
orl
mov
pop
add
adc
dec
mov
dec
nop
lcall
fiadds
je
jmp
neg
cmp
enter
lahf
push
std
jecxz
jno
ss
inc
loopne
or
pop
sar
rorb
imull
movsb
leave
dec
inc
stos
repnz
cmpsb
mov
or
cmpsb
pop
sub
dec
pop
sub
jmp
iret
scas
push
js
and
rorl
mov
outsl
or
jl,pn
mov
fwait
mov
stos
xor
mov
mov
jnp
jns
mov
mov
push
push
je
jl
outsb
mov
add
jp
cwtl
xchg
mov
into
je
cltd
lret
mov
jp
mov
push
maskmovq
idivl
js
adc
rorb
push
lea
add
stc
fstps
out
test
imul
push
ljmp
ss
pop
outsl
cmp
mov
xor
fsubrp
leave
mov
loope
insl
push
and
sub
sbb
pusha
fnclex
adc
mov
popf
mov
adc
mov
mov
pop
xor
or
xchg
lret
cmp
cld
jno
incb
cmp
cmp
in
repz
js
ret
test
in
pop
push
nop
xchg
je
and
dec
add
pop
stos
out
cmp
loopne
inc
loop
jge
in
ds
push
cmp
sbb
add
or
lcall
outsl
int
fstps
sub
out
xor
aam
mov
icebp
das
or
adc
pop
inc
sub
and
jg
add
pushf
inc
push
bound
jo
fsubrl
mov
mov
shrl
mov
loopne
cmp
sti
xlat
fisttpl
lret
push
inc
mov
lock
or
push
jbe
pop
dec
cs
stc
dec
inc
jo
loop
mov
rol
cmp
insl
push
fidivrs
push
sbb
dec
into
roll
test
ficompl
mov
push
outsl
adc
push
push
sbb
sarl
pushf
pop
jb
sbb
or
aas
or
jno
push
lods
inc
scas
jo
mov
sub
dec
test
enter
sub
int
rcll
mov
idivb
popa
aas
adc
xor
enter
and
lods
jns
sti
add
dec
mov
adc
sub
test
popa
lret
mov
ja
shl
jbe
test
andl
lea
mov
mov
flds
cmp
add
inc
adc
or
mov
out
js
sbb
iret
jo
mov
mov
nop
test
jecxz
jnp
mov
dec
mov
insl
push
sahf
xor
xchg
ss
leave
rorl
test
mov
sbb
sar
pop
pop
push
xlat
push
push
hlt
movsb
push
mov
inc
fistl
inc
out
in
mov
sarb
mov
jno
pop
shl
xchg
cld
mov
jp
je
sub
je
inc
cmp
mov
push
les
std
sarl
cmp
xchg
mov
adc
xor
out
push
scas
push
loop
mov
and
mov
mov
addb
ds
fs
add
in
sub
ds
mov
cmp
rolb
rcll
push
adc
ret
aad
xor
pop
mov
bound
xchg
xchg
bnd
xchg
ficoml
rorb
lret
xor
add
adc
mov
xchg
mov
pop
pop
adc
je
addr16
cs
clc
adc
sarb
je
fcomp
lea
mov
mov
mov
outsl
push
jae
cld
aam
pop
jge
stos
ja
xchg
fs
cmp
loopne
aas
push
ljmp
inc
mov
es
mov
or
enter
inc
xor
add
xchg
loope
jg
leave
negl
pop
ret
stc
dec
or
imul
lock
negb
aam
mov
pop
or
xor
fstpt
cmp
cmp
inc
xor
cmpsb
and
enter
dec
adc
xchg
pop
aam
int
jb
jle
inc
xor
gs
clc
dec
sbb
ficoml
repnz
xchg
aam
lock
enter
mov
add
xchg
add
into
or
or
movsb
sbb
fsubr
add
fs
int3
aam
jle
xchg
or
ljmp
or
repnz
mov
xchg
push
popa
adc
sub
out
xchg
xchg
bound
push
andb
cs
mov
cmc
inc
add
xchg
cmp
dec
xorb
jl
mov
loope
pop
push
out
lcall
fbstp
dec
ds
cmp
xor
ljmp
in
movsl
insb
negb
pop
std
mov
cmp
inc
sub
hlt
loopne
orb
popl
adcb
jecxz
pop
loop
xchg
ds
xchg
xorb
mov
pushf
pop
aam
inc
mov
sti
and
fdivs
push
mov
pusha
mov
js
push
sarb
xor
inc
in
xchg
jae
into
jp
daa
cmpsl
test
lcall
loop
pusha
pop
inc
je
cli
pop
rcr
fsubl
inc
xorb
stos
test
outsb
daa
test
pop
into
pusha
iret
add
lahf
cld
inc
mov
ja
sbb
mov
add
jp
adc
adc
mov
push
loopne
jo
loop
out
add
pop
jmp
inc
sbb
ja
dec
push
fidivrs
mov
dec
enter
outsb
lret
std
ljmp
jge
push
push
inc
inc
jo
ss
out
inc
xor
adc
sbb
test
jne
lods
jg
cmp
sbb
int
cld
pop
or
subl
mov
ljmp
popf
push
push
pop
xlat
mov
imul
adc
sti
pop
or
in
add
sti
push
fld
mov
les
mov
mov
movsl
sub
xorb
sbb
lcall
inc
mov
adcb
cmp
pop
push
add
sub
loop
es
idiv
inc
jns
in
cmpsb
push
mov
jle
cli
and
lds
bound
js
std
pop
inc
frstor
lds
les
jle
dec
add
sbb
fdivr
dec
pop
mov
loope
or
push
jl,pn
and
loope
ret
add
ss
movsb
xor
mov
adcb
shlb
push
mov
xchg
sti
sbb
mov
cmp
mov
leave
pop
mov
jge
stc
out
rcr
fs
adc
xchg
das
xor
pop
xchg
insl
mov
push
inc
xor
lcall
push
sub
fisttpl
dec
sub
cmp
fs
fdivr
jg
mov
cmpsl
and
jne
sbb
out
das
shrb
data16
inc
out
mov
cmp
push
push
sub
loop
cs
int3
jnp
push
push
mov
dec
iret
or
sbb
int
rclb
xchg
cs
rorb
xchg
pop
push
sbb
aad
mov
outsb
and
or
or
pusha
inc
pusha
mov
fiadds
les
aam
inc
mov
push
push
xchg
incb
sysret
mov
fcompl
pop
sub
push
sub
add
mov
dec
jge
fdiv
call
mov
mov
inc
jo
ficoml
inc
xchg
xchg
hlt
aam
into
cwtl
push
or
fdiv
scas
cmp
data16
mov
inc
push
cmp
adc
push
ss
roll
ss
jno
adc
scas
jne
std
lock
pop
and
cwtl
cmp
xor
ror
loop
rcrb
insl
cmp
xor
inc
shrl
inc
and
dec
dec
dec
sub
sbb
inc
loope
aas
xor
inc
lahf
xor
push
jg
int3
mov
into
testb
adc
mov
cli
mov
mov
inc
and
lcall
cmp
dec
aam
or
xor
orl
and
aam
clc
lcall
mov
in
mov
xchg
xor
or
sbb
jl
stc
out
aaa
add
mov
or
mov
sbbl
int
or
bound
imulb
sbb
or
hlt
jb
mov
sarl
dec
fwait
test
scas
outsb
push
cmp
ja
adc
shr
jbe
aas
or
xlat
das
add
add
jg
in
out
or
jp
dec
nop
aam
and
dec
test
movsl
pop
insl
mov
mov
insl
xchg
cld
sbb
cli
cltd
mov
dec
fsubrp
rorb
popf
push
imul
test
sbb
jnp
inc
add
and
xor
popa
adc
adc
dec
mov
adc
es
iret
fcmovnu
adc
xchg
adc
add
aam
sub
mov
fcmovu
imull
sbb
mov
fsubrs
pop
fdivr
and
jp
lret
xor
cmp
cmp
xchg
jl
int3
out
xlat
xor
xor
imul
sahf
sub
mov
jns
sbb
jmp
xchg
mov
push
jns
push
scas
dec
jns
fiaddl
ja
cmpsb
repnz
lahf
gs
mov
mov
adc
inc
sub
loope
insl
faddl
dec
jl
and
dec
ds
enter
push
push
pushf
push
gs
pop
mov
fdivrp
jl
xchg
insb
dec
int3
test
into
jo
fucomip
push
adc
pop
jg
jp
adc
ljmp
or
scas
cmp
mov
pop
fidivrs
add
push
into
scas
inc
push
cld
popf
push
arpl
mov
cmpsb
xchg
sbb
inc
ds
push
jo
inc
nop
dec
xchg
pusha
sub
dec
lods
mov
in
loop
filds
clc
scas
rcll
fld1
dec
mov
sub
call
mov
mov
scas
fbstp
xchg
xchg
dec
xlat
add
push
and
std
mull
pop
xor
xor
add
dec
test
or
sbb
cmc
cmp
adc
in
and
jbe
mov
mov
loopne
repnz
add
pusha
add
cs
cli
nop
cmp
push
mov
add
and
xor
mov
faddl
iret
mov
xchg
idiv
inc
nop
mov
lods
mov
fstpt
scas
pop
adc
mov
ret
repnz
pop
movsl
sbb
adcb
and
pusha
ljmp
fs
dec
push
xchg
notb
loop
sbb
inc
jmp
sahf
and
rcll
mov
cmp
clc
dec
stos
addl
and
fnstenv
xchg
addr16
nop
rcrb
adc
xchg
mov
sbb
add
sub
fld
mov
pop
scas
add
std
fisubrl
dec
nop
orb
das
sar
sbb
mov
das
xor
push
int3
xlat
iret
adc
fabs
loop
adcl
inc
cs
stc
cmc
jl
fdivrs
call
in
push
cli
sbb
andb
hlt
inc
push
pop
imul
add
shlb
inc
mov
inc
std
in
cmp
xor
cmp
movl
movsl
and
outsl
or
rcrb
addb
cmc
xchg
add
test
or
cmc
or
fucomip
js
mov
xor
xor
jmp
cmpsb
into
mov
jl
rcr
les
mov
daa
test
cmp
mov
scas
adc
fcmovnbe
imul
add
adcl
mov
xchg
cmc
mov
inc
sub
jne
mov
add
pushf
in
pop
aas
pop
icebp
ja
inc
xchg
jo
sbb
test
cli
xor
push
lret
fwait
add
clc
dec
inc
cld
rolb
xchg
fidivs
jae
subl
mov
loopne
lds
mov
add
out
add
push
int3
hlt
pop
xchg
dec
clc
sub
mov
loop
xchg
jne
push
jmp
sub
cs
dec
aaa
adc
cmp
push
ret
out
ja
dec
scas
mov
sarb
test
xchg
pop
mov
imul
push
iret
out
mov
xor
pop
inc
adc
bound
lret
xlat
mov
int3
or
cmpsl
and
sub
in
xor
inc
add
jns
popa
mov
mov
loop
jp
in
adc
imul
or
push
fldcw
jae
sub
mov
addr16
and
cwtl
jo
mov
es
dec
lea
lret
bound
loopne
out
jmp
into
mov
idiv
mov
flds
mov
clc
into
fsubr
popf
nop
std
scas
clc
ss
dec
mov
sahf
rorb
subb
inc
arpl
push
stos
in
rcrb
insb
rcl
push
out
testl
ret
sti
inc
cli
jecxz
imul
push
sub
mov
in
push
inc
mov
adc
dec
inc
jo
test
sub
repnz
cmp
scas
daa
imul
aaa
inc
jp
or
mov
nop
xchg
imul
add
sbb
scas
and
mov
cli
push
leave
sar
aas
in
sarb
push
jnp
cmp
dec
xor
hlt
fistl
adc
stc
jp
pop
push
add
pop
and
rorb
pop
mov
pop
in
sbb
sbb
mov
stos
fisttpll
test
mov
das
cli
daa
dec
mov
dec
fptan
cmp
pop
pusha
shll
or
out
flds
cmc
setnp
pop
lahf
xchg
mov
fcoms
addr16
shrb
mov
lcall
sahf
jo
adc
xchg
subl
roll
std
add
sub
push
add
jb
ret
push
jns
add
or
mov
outsl
dec
fisttpll
lahf
jo
mov
jl
in
rcl
adc
lret
xchg
sbb
push
mov
sub
cmp
sbbb
sbb
xchg
nop
fistps
sub
ja
loop
loope
inc
push
and
pop
lret
insb
adc
fwait
adc
sub
loop
aad
into
sub
hlt
sub
cmp
sbb
pop
loopne
cmp
fisttps
rorl
push
push
jmp
add
movsb
popf
xor
cmp
imul
adc
in
inc
nop
test
inc
mov
push
imulb
push
sub
nop
es
lcall
ljmp
shrl
xchg
push
push
das
stos
push
lret
inc
lea
adc
ss
shlb
rorb
or
pop
add
scas
testb
les
adc
jne
push
fldl
add
ja
mov
inc
pusha
pop
inc
cmp
mov
lahf
call
call
mov
sti
fsubr
out
call
test
sub
or
fmull
jle
int
enter
jecxz
sub
inc
cmpb
outsl
push
xchg
mov
outsb
sbb
testb
jp
in
sub
jo
cwtl
in
rcrb
jge
and
xchg
add
mov
push
orb
xchg
in
pop
iret
sbb
sarb
mov
inc
sbb
pop
jmp
lret
adc
mov
xchg
fsub
repz
push
inc
sub
out
shl
xor
inc
pop
and
mov
cltd
push
popf
mov
fldt
pusha
and
daa
adc
mov
test
cmp
fadd
sub
stos
aad
inc
pushf
repnz
xchg
jo
cmp
iret
dec
sub
push
xchg
xlat
nop
dec
adc
cltd
push
out
iret
sub
lock
rcl
lret
dec
jecxz
test
pop
dec
repnz
add
mov
aas
shll
adc
cwtl
push
inc
insb
sti
lods
cmc
lahf
sub
and
lods
sbb
das
movsb
mov
push
mov
bound
cwtl
push
pop
push
loop
add
movsl
sbb
add
xor
inc
dec
mov
mov
std
jg
aam
xor
dec
inc
js
sub
imull
adc
aad
xor
xchg
les
adc
stc
and
xchg
jle
fsubrs
inc
negl
xchg
mov
pop
aad
adc
sti
add
ret
into
aad
rcll
and
stos
pusha
aam
adc
sub
add
adc
cltd
cltd
mov
aad
mov
shrb
gs
out
outsb
das
nop
pop
outsb
into
iret
cmp
fstl
xor
inc
pusha
imul
push
jnp
xor
in
movsl
inc
shrb
lock
popf
iret
mov
es
rcrb
cs
sbb
jnp
lods
movsl
shr
xor
ret
and
or
xchg
stos
jle
and
jnp
popa
mov
outsb
inc
jge
outsb
push
add
jecxz
jae
cmpsl
adc
inc
dec
dec
shlb
repnz
popa
bound
sarb
inc
adc
push
push
imul
and
dec
jae
mov
jp
mov
roll
sti
dec
inc
pop
jno
mov
loope
lods
cld
sub
inc
shlb
scas
mov
jg
push
cmp
gs
or
jp
jo
sti
mov
jp
xchg
dec
and
shrb
ret
inc
mov
stos
js
imul
push
dec
add
jbe
add
push
xchg
jo
cmpsb
mov
rcrl
andl
rol
xor
insl
and
test
aas
imul
sub
add
loop
sub
sub
pop
je
or
cli
push
or
mov
das
fildl
mov
frstor
insl
shrb
fisttps
xchg
repz
aad
lea
cmp
push
test
jg,pt
fmuls
mov
push
jbe
dec
add
xchg
cli
insl
lea
fstpt
leave
lret
push
pop
sub
jne
lret
jo
inc
mov
fisttpl
sbb
dec
dec
fxch
push
cltd
loopne
int
stc
xchg
mov
bound
adc
add
sbb
daa
loope
fxch
fsubr
push
push
mov
jae
scas
lods
cld
xor
cld
mov
sbb
sbb
cmpsb
mov
mov
idivb
inc
lahf
sbb
push
jmp
nop
adcl
mov
fiaddl
ss
into
adc
ficompl
push
push
jae
fpatan
xlat
dec
out
cwtl
fsubrs
adc
cmc
add
insb
inc
mov
pop
push
push
fsub
add
jb
xchg
cmp
push
jmp
in
push
and
fucomi
xor
or
fadds
inc
add
dec
jp
add
xor
faddl
loop
aad
cmp
fisubs
pusha
mov
xchg
in
addl
inc
inc
aas
xlat
loope
pop
out
push
outsl
imull
lods
cmp
cmp
lcall
sbb
mov
ret
or
fstpt
es
insb
jecxz
push
fcmovbe
or
add
in
jo
jmp
out
outsl
mov
fists
movsl
repnz
sub
into
fdivrl
loopne
fs
rolb
adc
adc
jmp
push
pop
pop
cmc
xchg
test
aad
rcll
dec
loop
jo
dec
popa
push
adc
sub
aam
add
xchg
xor
nop
scas
jno
cld
call
pop
cmp
xchg
push
mov
fistps
mov
mov
stc
push
dec
outsb
mov
ds
lods
test
pop
jle
mov
aaa
push
scas
enter
shl
sahf
inc
mov
movsb
inc
adc
scas
mov
jg
xchg
in
popf
jnp
push
sbb
mov
loope
push
push
stos
adc
stc
xchg
lahf
and
mov
dec
test
add
stos
es
mov
dec
fs
stc
stos
loopne
jo
test
add
xlat
xchg
xor
test
push
jg
fsubl
cmp
outsb
cmc
mov
add
dec
push
pop
and
and
test
rcrb
shlb
jbe
inc
rcr
jno
les
push
fwait
push
cmp
jl
rol
add
xor
pop
xchg
loope
mov
xlat
mov
sub
jno
shll
sbb
and
orl
scas
xorb
out
and
mov
xchg
movsl
rcr
xchg
addr16
lea
fstps
repz
cmp
push
adcl
stos
mov
add
repz
add
mov
int3
cmc
ss
test
xor
je,pn
gs
int3
dec
fsubl
mov
adc
outsl
or
push
into
lock
cmp
ficompl
outsl
add
inc
jo
out
repnz
mov
lea
gs
push
push
and
aam
jb
jo
jbe
sub
xor
adc
sub
xchg
mov
jmp
inc
nop
jne
cli
sbb
and
fisubl
pop
fcomps
rcrb
cltd
xor
cmpsl
sarl
test
and
sahf
sbb
xor
fisubl
cmp
loopne
sub
cmpl
jg
and
add
adc
daa
stc
cmp
mov
mov
icebp
mull
pop
cmp
mov
in
js
in
stc
rol
push
ret
pop
je
xchg
aam
aaa
sub
cltd
loopne
or
mov
cmp
add
push
cmp
decb
out
dec
inc
ja
inc
dec
das
dec
sahf
jecxz
int
aam
out
jl
stc
push
rcrl
jbe
daa
lds
and
push
jmp
lahf
adcl
gs
add
push
push
mov
xlat
add
idiv
test
repnz
sarb
push
jnp
push
inc
sub
shlb
lcall
pop
cmp
mov
sub
ret
cmp
out
push
fmuls
xor
jp
push
orb
mov
shll
fwait
push
popa
pop
mov
add
mov
int3
mov
xchg
sahf
sahf
aaa
mov
aas
hlt
fcomps
imul
aad
sti
sbb
cmp
jo
stos
pop
sbb
add
push
inc
mov
cmpsb
xchg
mov
add
rorl
adc
sbb
lret
mov
movsl
pop
dec
and
sbb
loop
xchg
mov
sahf
into
shrb
add
ja
inc
dec
aad
in
push
idivl
jmp
mov
cld
push
push
push
xor
sbb
outsb
mov
fsubrl
pop
jns
dec
dec
gs
xchg
in
adc
leave
xlat
push
ror
cmp
push
into
jg
pop
movsw
mov
add
add
xchg
xchg
mov
cmp
rorl
inc
enter
ficoml
adc
xor
push
mov
pop
std
lcall
std
mov
add
xor
jae
in
mov
jnp
out
pushf
fsubrp
arpl
cltd
push
loopne
pop
fmul
jge
pop
ja
lret
divl
stc
iret
fcmovu
pop
xor
inc
loopne
inc
mov
inc
dec
fsubs
sub
lret
push
fmuls
cmp
and
sahf
pop
mov
and
inc
lret
shr
testl
sub
ds
movsb
and
mov
xor
movsl
sahf
pop
stc
jl
sahf
pop
mov
push
cmp
ja
xlat
movsl
mov
push
xchg
push
jb
cmp
pop
pop
lods
addr16
cs
cmp
jnp
ret
shl
push
insl
fs
fdivrs
ret
xor
push
sbb
sub
into
rcl
adc
sub
and
mov
push
lahf
sbb
test
adc
hlt
push
add
rcrl
or
xchg
mov
cmp
outsl
cwtl
popa
lea
test
xchg
enter
push
loopne
adc
sub
mov
fucomip
aam
xchg
mov
pop
pop
faddp
mov
iret
fistpll
loope
setns
popf
std
fcoml
mov
pop
push
pop
cmp
bound
xor
and
aas
pop
adcb
out
jno
sbb
dec
jle
push
xor
nop
mov
pop
pop
insb
pushf
or
iret
push
pushf
mov
fbld
xchg
lds
push
outsb
pop
ret
sar
fidivl
repnz
xor
int
mov
fists
push
dec
jmp
cmp
jo
xchg
push
jne
cmc
and
dec
mov
out
in
mov
push
imul
psubb
and
insl
push
inc
dec
pop
incl
push
mov
xchg
aad
pop
les
popf
shll
push
and
jl
call
in
jo
cmp
into
adc
mov
dec
xor
mov
mov
jae
movsb
ds
jg
xor
scas
insl
cmp
inc
push
leave
fisttpl
repz
cmp
push
lods
inc
adc
jbe
mov
test
insl
cld
mov
iret
mov
fdivs
or
push
add
dec
push
jo
mov
lds
sbb
sub
sub
push
dec
inc
ret
sub
fidivl
das
pusha
lahf
lret
cmova
push
call
out
loope
inc
xchg
mov
and
aas
mov
xchg
cmp
xor
inc
inc
int3
lods
mov
pop
outsb
pop
addb
or
inc
fsubs
pushf
push
pop
scas
sahf
pop
negl
fdivs
xchg
or
and
push
insb
xlat
push
test
ret
xchg
lahf
js
div
inc
shrb
jbe
aam
cld
ret
mov
pop
pop
add
sub
shll
test
cli
push
dec
push
test
sbb
aaa
add
dec
into
loope
dec
stos
into
outsl
pop
mov
and
mov
or
les
stc
enter
dec
or
lret
push
pop
aam
daa
push
aad
pop
insb
inc
xchg
out
ret
ret
das
sub
repnz
inc
dec
xlat
popf
inc
push
jmp
adcl
cmp
scas
leave
dec
cmc
push
je
fs
ret
push
cmp
inc
test
orl
pop
pop
rcl
xchg
out
or
push
dec
leave
and
push
and
sbb
fstpl
fimull
loopne
hlt
cld
push
pop
jbe
mov
or
sahf
cmp
mov
fstpt
mov
push
or
add
jns
pop
ja
lahf
pusha
ss
jl
out
stos
inc
xchg
mov
loopne
add
ret
aad
in
scas
lcall
enter
pop
dec
incl
push
jo
fldl
adc
xor
push
and
mov
and
push
push
int3
jg
push
xor
inc
dec
imul
rorb
inc
test
adc
call
repz
lcall
sti
cmp
addps
add
inc
cmp
cmpsb
add
push
adc
out
fmull
pop
push
push
mov
ret
pop
jmp
jle
inc
push
or
push
les
lahf
mov
sahf
jp
xor
jne
sahf
leave
lea
dec
dec
lock
cmp
add
lret
pop
leave
mov
mov
dec
sti
add
cmp
push
jne
pushf
pop
fstl
and
pop
cmp
repnz
fimull
pop
fcmovb
and
xchg
sub
pop
loope
out
fldenv
pop
hlt
dec
fmul
or
ss
jno
aam
jo
jne
test
inc
and
aaa
ret
or
mov
dec
aas
in
cmp
xchg
xlat
hlt
pop
dec
paddsb
adc
push
fsubrl
nop
dec
popa
cmpsb
cs
cld
stc
pushf
jmp
cmpb
xchg
cli
cmp
ljmp
or
repz
daa
repnz
scas
cmp
cmp
mov
and
cmc
inc
jmp
and
push
ret
nop
jp
jno
test
xchg
mov
mov
sahf
int3
pop
scas
outsb
push
sub
pop
pop
and
fstpl
mov
cli
and
push
je
fs
mov
or
cmpsl
rol
movlps
or
pop
pop
addr16
inc
or
mov
ret
loop
inc
ficompl
outsb
jbe
nop
gs
lods
inc
jo
cltd
lea
inc
sbb
inc
leave
mov
insb
push
rcll
push
dec
aad
sarl
movsl
rcrb
je
add
mov
int3
xchg
xlat
jns
sti
lcall
fstl
xor
jb
pop
dec
pop
push
xorb
hlt
xor
pop
jns
ret
stos
into
insb
fisubl
pop
rcrl
pop
mul
xchg
jnp
inc
jno
cmpsb
jnp
stos
push
in
inc
push
adc
ja
jp
dec
pop
fisubrl
sbb
pop
test
imul
pop
dec
int3
cli
loop
mov
hlt
xchg
push
rcll
lahf
daa
fucomi
mov
rolb
cmovnp
pop
cs
clc
xor
jp
sub
jmp
push
mov
lds
aad
dec
mov
xchg
jle
bnd
or
xor
sbb
movsb
pop
cmp
rcrb
insb
and
cmp
aas
mov
mov
ss
mov
scas
xor
add
rorl
sbb
mov
dec
xlat
loop
add
pop
pop
xchg
data16
scas
rcl
mov
push
mov
shlb
stc
sub
pop
inc
push
cmp
cmp
xlat
xor
xchg
inc
lret
mov
lcall
fcmovbe
jp
adc
setnp
dec
mov
mov
add
rcrb
outsl
arpl
outsl
aam
add
in
add
ljmp
cld
scas
xor
stc
daa
popa
adc
into
jp
jge
repnz
push
cmp
clc
outsb
orps
dec
jne
mov
call
xchg
add
jb
add
pop
aaa
aaa
push
dec
lret
ret
dec
dec
add
out
inc
dec
push
lock
loopne
cmc
pop
scas
xor
pop
add
xor
add
cmp
cmpsb
pop
add
jne
incl
loop
les
push
fidivrs
pop
cmp
cmpsb
ret
dec
xor
lock
imul
ja
dec
jecxz
inc
xor
les
insl
sar
pop
subb
loope
cmp
dec
hlt
mov
mov
jg
xchg
jle
xchg
jle
cmp
sbb
xchg
movsb
inc
dec
fimull
movsb
mov
mov
enter
adc
bound
jns
push
push
and
cmc
lods
sarb
pop
adc
ljmp
es
push
iret
cli
push
dec
arpl
cmp
insb
mov
into
stos
data16
testl
jns
aam
dec
pop
ss
dec
pop
movsl
mov
push
cmc
movsb
cmpsb
in
js
sbb
es
mov
lods
dec
adc
and
and
pop
mov
and
ljmp
mov
repnz
or
add
mov
mov
mov
cmpsl
pop
dec
dec
mov
and
cmp
mov
sti
add
and
fdivrl
in
out
xor
push
in
jnp
push
xchg
cmp
adc
cltd
fimull
jae
lret
lahf
jo
test
and
shufps
mov
outsl
add
mov
adc
sub
mov
loopne
aas
decb
leave
aam
sbb
fldt
inc
cs
mov
ja
fiaddl
xor
mov
sarl
testl
lcall
sarl
xchg
rorb
out
sbb
stc
cmp
or
repz
or
arpl
inc
inc
jl
cmp
pop
clc
mov
cmpsl
mov
or
clc
fisubs
stc
sub
xchg
ss
sahf
dec
pop
add
or
mov
push
hlt
mov
loop
scas
push
dec
out
cmc
insl
aas
test
pop
je
cmpsb
sbb
push
fdivs
lock
call
and
mov
dec
in
mov
cltd
fstpl
mov
jno
cmp
scas
cmp
in
fists
push
push
pop
dec
fcmovu
pop
and
inc
movsl
lret
xor
push
xor
inc
jb
jle
sbb
mov
adc
in
fldl2e
std
fidivrs
pop
mov
inc
sahf
popa
fdivl
cltd
call
rcll
xor
rorl
inc
dec
sahf
inc
xor
imul
fadds
gs
sbb
arpl
push
cld
das
into
enter
jb
mov
hlt
pop
pop
test
movsl
lock
fwait
cmp
push
rorl
test
dec
pushl
pushf
pop
mov
jbe
lds
fst
stos
or
and
xor
pop
adc
pop
mov
pop
jg
inc
ficoml
iret
jp
test
inc
nop
pop
cmp
jg
shlb
sbb
cmp
inc
andb
sub
decl
or
xchg
adc
sbb
negl
leave
cli
jmp
iret
xor
mov
dec
das
push
inc
mov
mov
std
mov
arpl
scas
jns
ja
inc
lret
and
adc
or
inc
xor
jle
insb
add
iret
mov
scas
pop
loopne
cli
cld
popa
inc
fcom
sbb
mov
fiaddl
push
std
mov
inc
add
mov
pop
outsl
out
es
addr16
add
xchg
clc
jmp
icebp
setb
pop
mov
cmp
aas
shlb
push
loop
pop
dec
test
jnp
inc
insl
std
cld
fstl
test
pop
andl
in
adc
adc
jnp
xchg
jg
mulb
fsubs
dec
call
fsubrl
mov
rorb
sbb
rol
shl
pop
fldcw
push
data16
nop
cmp
dec
xchg
cmp
es
mov
scas
mov
pop
test
je
pop
into
pop
push
cmp
inc
call
aam
out
into
shl
pop
pop
sub
jg
mov
push
aam
icebp
sti
test
cmp
inc
adcb
push
pop
xchg
lahf
aam
inc
or
xchg
xor
and
dec
jbe
cwtl
and
mov
cli
cmp
lret
xor
mov
dec
inc
xchg
adc
icebp
mov
pop
add
scas
inc
stos
icebp
xchg
inc
in
mov
test
inc
xchg
fdivrl
lods
push
aas
pusha
xor
aas
leavew
xor
js
mov
adc
pop
lahf
inc
hlt
stos
or
sarb
jae
leave
inc
push
sub
adc
into
inc
ret
scas
rorl
sub
jo
push
mov
sub
cmp
push
mov
push
xchg
lahf
rorl
pop
inc
jl
js
xchg
adc
sub
in
call
lock
stos
arpl
pop
inc
push
cmc
or
jg
or
and
add
cs
xor
pop
divps
cmc
sbb
mov
out
mov
sub
mov
insl
push
pop
movsb
fnstsw
dec
sbb
dec
rcll
add
xchg
out
mov
push
out
addb
lcall
arpl
pushf
dec
scas
ret
sub
rclb
xorl
sarb
jb
jne
loopne
cmp
fs
push
orb
test
mov
cld
pop
xbegin
mov
and
or
push
push
push
or
and
push
adc
imull
out
enter
and
cmp
lahf
pop
mov
pusha
inc
mov
sti
mov
and
jns
push
inc
hlt
jnp
adc
aaa
rol
sbb
lcall
mov
ror
arpl
adc
mov
int
subb
jae
jb
imul
lods
shlb
inc
out
or
dec
push
test
inc
shrb
pop
enter
or
sbb
inc
fcompl
insb
shl
test
mov
sahf
push
or
mov
jnp
rcr
dec
stos
jo
mov
dec
sub
clc
jns
in
inc
sub
sarl
movsl
loope
xlat
or
repz
xlat
ret
pop
and
xlat
fisttpll
inc
mov
jl
jecxz
jmp
notb
stos
sub
add
cmp
pop
add
pop
ljmp
addr16
or
int3
lods
mov
lret
jns
fcomps
filds
adc
in
xchg
or
in
pusha
inc
mov
lret
cli
mov
push
fnstsw
jle
jp
ljmp
in
adc
and
aam
addr16
imul
or
pusha
ss
jge
or
je
add
nop
xchg
imul
shll
dec
jne
push
fidivrl
jle
add
les
repz
aas
inc
ror
mov
xchg
adc
jg
fsubrp
xlat
cmc
xchg
test
adc
loopne
dec
loop
ficomps
je
fldl
nop
cmpsb
andb
fs
inc
mov
aad
outsl
jae
mov
jno
popa
loopne
mov
into
inc
or
and
in
lock
sub
in
loop
in
add
and
jg
inc
xor
insl
out
fistl
add
or
int
scas
jmp
out
lods
enter
add
popf
cwtl
or
adc
shr
mov
in
mov
mov
cwtl
orb
cmp
mov
ret
aad
addr16
dec
pop
cmp
mov
mov
mov
dec
cmp
jns
fnstsw
mov
pop
push
mov
mov
dec
push
bswap
or
add
cmp
inc
dec
movsb
into
dec
nop
mov
xor
pop
or
aas
jbe
dec
fsubs
mov
hlt
pop
out
push
test
sub
imul
dec
fnsave
cmc
cmpsb
les
cmp
lret
negb
shl
xlat
insb
jp
sarl
shlb
hlt
mov
in
push
pusha
fcmovne
loopne
push
jg
fxch
lcall
test
int3
fs
or
lods
push
lret
shrb
stos
add
mov
jp
mov
out
loope
lret
jmp
pop
fdivl
mov
fidivs
stc
nop
add
stos
loope
inc
test
into
repnz
in
sub
add
ss
stos
dec
sbb
scas
push
fdivr
push
add
xchg
gs
ljmp
mov
cmp
fiaddl
fistps
scas
cli
fsubs
jb
pop
mov
cmp
mov
xor
int
mov
jo
dec
pop
sbb
add
cld
shlb
push
pop
dec
lret
outsb
into
cld
incl
movl
imul
fnstsw
add
add
and
pusha
adc
lcall
shl
pop
and
jg
int3
in
in
cmc
and
or
dec
mov
xor
xor
pushf
and
adc
add
iret
outsb
scas
xchg
jbe
and
cmp
paddsw
out
repz
sub
imul
or
es
fcoml
sbb
fcmovu
xor
enter
push
dec
test
and
pop
hlt
fisubs
fld
mov
ret
push
push
pop
loopne
movsl
fildl
shr
lock
jg
mov
insb
push
fcmovu
fmuls
jae
lock
mov
xchg
sub
dec
or
inc
mov
mov
mov
repnz
insl
in
les
movl
loopne
inc
sbb
cmp
xlat
mov
jmp
jp
sub
pop
fldt
xchg
jns
scas
mov
xchg
popa
movsl
fldt
mov
jp
mov
xor
adc
xor
inc
push
sub
and
in
sub
les
and
ds
scas
cmc
adc
mov
aam
adcl
test
andl
add
arpl
sbb
es
xchg
and
jns
arpl
incl
aad
fstl
fdivs
inc
pop
push
leave
test
mov
add
and
inc
fldl
cmp
dec
mov
in
mov
push
sti
add
sub
rolb
push
fidivrs
inc
cmp
push
or
cmp
rcl
popf
stos
scas
testl
cmp
enter
repz
call
jle
cli
ror
push
lods
xor
mov
dec
sahf
fcomps
lea
shlb
adc
icebp
dec
pop
bound
int
fwait
call
es
sbb
sub
adc
inc
adc
dec
aad
test
aad
data16
mov
mov
rorl
arpl
sbb
push
fwait
and
pusha
xor
hlt
sbb
pop
jae
mov
js
cld
pop
adc
imul
loope
shlb
xchg
xor
push
fs
pop
pop
push
and
notl
push
stos
sub
mov
and
out
mov
shlb
pop
loop
add
add
xor
leave
test
loop
call
push
sbb
push
gs
sti
jmp
outsl
inc
nop
push
and
add
add
xchg
ret
pop
ljmp
sbb
pushf
pop
aam
xlat
mov
pop
add
jle
subb
jb
xor
mov
out
adc
ficoml
mov
cmp
into
pop
sar
cs
outsl
xchg
rcrl
testb
inc
or
lcall
and
inc
nop
bound
bound
ret
repnz
movntps
into
jp
pop
push
jns
cmp
fcomps
pushf
sub
subb
scas
pop
adc
lods
dec
mov
fidivrl
dec
gs
jne
push
xlat
mov
mov
xchg
sbb
xorb
je
adc
out
call
rolb
jl
outsl
jg
fistl
shl
imull
ret
cmpl
mov
psllw
ret
repz
inc
insl
nop
or
jle
mov
scas
adc
scas
mov
sbb
inc
sarb
jle
loop
sub
add
cmp
mov
sbb
xchg
push
pushf
test
dec
jecxz
mov
or
mov
lret
ret
in
pop
popf
inc
mov
cmp
xor
mov
sbb
pop
jl
outsl
add
mov
lret
ds
cmp
lds
out
xchg
adc
shl
lcall
dec
xchg
out
leave
mov
daa
xchg
addr16
jne
sti
mov
pop
loop
das
add
sub
mov
lea
or
scas
mov
pop
or
out
or
fisttpl
push
push
mov
jbe
ret
jmp
mov
sub
sarb
insb
rolb
es
lea
push
pop
dec
mov
mov
and
add
push
fnsave
lahf
jae
fucomp
test
call
pop
rcl
xchg
inc
pop
push
adc
out
xchg
rolb
sub
cltd
or
fcmovnu
fdivrs
xlat
aad
enter
cmpsb
inc
mov
leave
ret
std
inc
add
popa
or
subb
jge
xchg
or
or
daa
mov
inc
lock
sbb
loopne
dec
into
loopne
xor
push
into
push
jo
out
insb
bnd
int3
out
loop
fwait
jb
ss
jbe
xchg
aam
out
in
lret
inc
insl
sti
into
fcmovb
fsubrl
ret
dec
lods
jle
sbb
cmp
sti
stc
or
sub
rcpps
addr16
out
fimuls
repnz
rorl
mov
int
mov
ss
cltd
mov
aad
test
xchg
pop
sti
test
xchg
into
fldt
jbe
lret
sahf
pushf
fnsave
outsb
and
jne
mov
pop
mov
add
adc
sar
dec
inc
rorb
lcall
out
xor
inc
sti
adc
mov
fdivrl
and
cltd
popa
rcll
sar
inc
test
adc
shr
adc
inc
xor
add
lret
push
pusha
outsb
xor
cmpb
xlat
dec
push
push
imul
repnz
insb
fisubrl
mov
xor
in
xor
or
push
iret
idivb
pop
mov
into
sbb
imulb
mov
jecxz
mul
orb
dec
fsubrl
gs
pop
inc
push
in
inc
fdiv
repz
clc
jo
sbb
cld
cs
clc
or
aam
rclb
repz
subb
push
inc
xlat
pop
out
aaa
jl
pusha
icebp
jle
int
pop
and
repnz
push
fldcw
mov
stos
pop
inc
adc
lea
xchg
testl
movsb
jge
aad
jp
sub
into
pop
sub
xchg
sbb
fldenv
push
mov
cltd
dec
fisttpll
scas
pop
pop
and
cmp
sub
imul
dec
inc
xchg
pop
cli
fidivs
inc
jmp
iret
jmp
fsubrl
mov
mov
pusha
test
inc
fcomip
leave
jecxz
add
sub
nop
movsl
dec
jo
jle
xchg
pop
fs
xor
push
stc
mov
test
jmp
mov
icebp
cmpsl
pop
xor
dec
lods
mov
dec
shll
aam
pop
fimull
or
sti
and
inc
mov
xor
xor
push
jl
stos
cmp
ficoms
pop
fnstenv
leave
cmpsb
in
jge
call
loop
add
mov
fildl
mov
xchg
sub
mov
add
jg
es
inc
xor
mov
std
push
and
stc
xchg
out
arpl
push
jae
outsb
cmp
lcall
lock
push
std
xor
es
lods
xor
xor
sbb
inc
popa
xchg
xchg
lahf
pop
iret
fcoms
lods
fs
cmpsb
xorl
cmp
out
lock
mov
ss
loope
pusha
aas
fdivrl
and
outsl
jl
jle
inc
adc
ret
ss
jae
imul
ud0
shll
movsl
push
add
push
jp
loop
arpl
sahf
out
and
cmpsb
call
ja
sarb
fisttpl
fisubl
aad
gs
xor
or
inc
aam
into
cld
mov
scas
add
add
mov
cmp
es
xor
mov
and
xchg
jb
add
roll
or
pop
insl
pop
ja
sbbb
mov
roll
cmp
and
es
jno
out
cs
jecxz
fwait
aaa
push
mov
inc
xor
jae
loop
jp
push
fmul
cmp
dec
sbb
push
popf
adc
pop
xor
jns
xchg
mov
stos
adc
roll
inc
push
dec
aam
cld
stos
add
cmpsl
xchg
pop
test
jmp
into
jl
outsb
mov
out
xor
mov
loop
add
jecxz
std
in
sub
adcb
popa
push
lret
cmp
push
fidivrl
jb
movsl
ljmp
out
lahf
out
push
or
xchg
roll
pop
mov
cld
xchg
outsl
inc
inc
sarb
and
pop
loope
xlat
adc
push
gs
sub
adc
pop
adc
ja
mov
divb
and
mov
lret
mov
xchg
sub
fxch
inc
lcall
popf
and
out
inc
data16
inc
mov
mov
ret
inc
xor
test
rcll
cmp
das
rcr
shrl
push
mov
idivb
out
ja
jno
inc
and
in
nop
lret
bound
cld
fsubrs
xchg
aam
and
mov
and
lahf
outsb
xor
cmc
cmpsb
ja
inc
iret
dec
cmp
mov
lret
adc
cmp
add
mov
cltd
jle
push
sbb
and
fs
movsl
rcrl
pop
or
sahf
and
lock
pusha
xchg
hlt
jne
push
test
aad
orl
jmp
insb
inc
fsub
add
mov
cmp
movsl
push
jmp
pushl
shr
das
adc
push
mov
cmpsl
cmp
data16
in
jmp
arpl
lock
popa
lret
push
add
dec
inc
jne
and
ljmp
in
jne
inc
clc
jnp
out
imul
and
mov
add
shlb
lods
insl
ljmp
shl
pop
rcrl
jnp
pop
ljmp
push
notl
loop
and
mov
push
add
cs
call
subb
loop
out
xor
mov
stos
add
jno
xchg
add
or
sbb
popf
cwtl
mov
dec
or
mov
js
pop
imul
jns
decl
pushf
stos
sub
lret
inc
or
push
stc
insb
pushf
sub
ficompl
push
cmp
clc
sbb
cmp
mulb
xor
imul
dec
js
mov
shlb
lret
call
sahf
adc
insl
loop
xchg
cmp
sbb
cld
xor
repnz
xor
shlb
fdivp
sub
sti
loop
and
mov
popa
lcall
mov
adc
imul
jns
fcmovne
test
xor
in
in
lret
imul
jmp
aas
pop
stc
out
adc
add
icebp
xchg
je
lret
xchg
xchg
das
std
cmp
pop
cmp
outsb
pop
sarl
sub
pop
xlat
inc
dec
and
dec
push
xchg
in
jge
and
cmp
cmp
inc
pusha
jg
loop
enter
sub
sub
and
clc
cmpsb
mov
mov
fmul
test
xor
movsb
mov
jo
or
cmc
jl
xlat
out
inc
pusha
les
push
fnsave
mov
pop
std
test
pop
and
iret
dec
adc
je
call
mov
gs
int
cli
cli
jle
lock
into
pop
gs
push
rcrb
insl
xlat
or
jecxz
xor
sub
nop
stos
dec
mov
frstor
xor
cmpsb
jno
lods
sbb
outsb
push
cs
stc
shl
lret
jbe
fwait
push
mov
adc
xor
lret
notl
fld
push
iret
lcall
push
inc
loopne
and
fldt
sbb
jmp
mov
repz
add
lea
das
inc
mov
imull
sbb
or
enter
push
lcall
repnz
mov
xor
clc
xor
push
mov
ret
enter
shl
lahf
mull
pop
test
fisubrl
add
cmc
mov
xchg
or
loop
push
or
pop
push
cmp
sbb
into
adc
push
push
daa
jge
icebp
lock
rolb
jno
adc
inc
mov
fcompp
dec
pop
xor
jae
shr
in
xchg
mov
inc
mov
aam
cld
mov
stc
and
adc
jae
add
ret
mov
fisttpl
cli
pop
mov
stos
xlat
fxch
mov
adc
aaa
pop
mov
into
push
cld
imul
push
push
jnp
dec
push
fnstenv
shrb
loope
in
add
inc
xchg
sub
ret
mov
shll
and
cs
fldt
pop
mov
sbb
in
das
pushf
adc
mov
mul
bound
or
sbb
jecxz
mov
xor
hlt
push
pop
loop
scas
test
xlat
jle
pop
out
mov
lock
call
out
roll
pop
jb
xor
outsb
push
lock
xlat
jb
popl
add
add
push
rcrb
jp
cli
sub
nop
pop
shll
adc
shlb
out
shrl
or
outsl
jmp
sub
mov
mov
pop
adc
aad
negl
pop
cmpsl
fstpt
jp
out
enter
mov
fs
dec
mov
jnp
jle
jg
std
xchg
pop
sub
scas
cld
shlb
add
push
push
sbb
ss
jbe
or
sar
lret
or
adc
and
sbb
aam
lcall
push
fistl
mov
push
mov
jg
rcrl
imul
insb
ficoml
into
shll
mov
adc
clc
jmp
mov
jge
pop
push
xlat
test
fcoms
jne
sub
xchg
fdivl
cltd
enter
dec
cmc
lds
xorb
out
dec
stos
sbb
aam
lds
cmpsb
cmp
clc
mov
jne
fsubp
jl
es
sar
push
fisubs
nop
xor
out
or
pop
and
loope
mov
xchg
cmp
jp
xchg
daa
xlat
test
aam
bound
std
mov
inc
push
ret
test
in
lret
rcl
out
jno
not
loope
leave
stc
int
out
into
sub
insb
int3
cmp
mov
add
in
repnz
dec
sub
jmp
dec
sarb
call
scas
cmp
sub
aas
jo
data16
adc
cmp
mov
into
push
jae
cwtl
pop
ss
push
fwait
adc
jae
pop
inc
orb
cmc
loope
data16
mov
rcll
add
outsb
push
mov
or
xchg
sbb
aad
and
ja
arpl
fildll
sbb
ret
sub
or
ret
rcr
mov
dec
adc
mov
sub
mov
loope
shrl
inc
and
loope
mov
stos
aad
inc
push
inc
pop
testl
fcmovu
mov
jge
rcr
jmp
in
stos
pop
add
cld
dec
mov
xor
adc
je
and
mov
sub
push
sahf
ret
add
sub
push
js
cmp
lahf
fstl
cmpsl
ret
fimuls
inc
push
jp
scas
cld
fstps
loop
mov
or
ds
inc
addr16
pop
addb
inc
int
cmpsl
int3
lahf
lret
fiadds
fs
xchg
sbb
fcmovnu
aam
ss
faddl
fdivl
jmp
jl
fcoml
dec
ficoms
iret
mov
lods
mov
out
scas
das
incl
jb
iret
or
jne
jg
je
adcb
pop
mov
adc
cmp
les
mov
dec
sarb
xor
fsubrp
dec
xchg
mov
mov
icebp
jge
inc
xchg
ljmp
bound
pop
mov
out
in
push
in
cld
push
cs
cmpsb
clc
fadds
mov
xlat
lcall
sub
cmp
xchg
lcall
xchg
lock
cli
push
jmp
add
sub
movsl
pop
out
jle
adc
addl
push
cmpsb
xor
mov
cmpsb
fdivs
and
in
inc
xor
popa
out
adc
iret
add
xor
fstl
adc
popa
fwait
cld
xor
jle
pushf
iret
push
aaa
mov
lds
cli
xor
pop
pop
push
mov
in
fistps
lcall
xchg
pop
inc
loopne
cmp
jl
stos
outsb
addr16
fsubr
inc
mov
fldcw
outsb
sub
and
sbb
int3
ljmp
and
gs
stos
ss
mov
loope
shlb
mov
adc
sbb
and
imul
cli
or
mov
fmulp
imul
sbb
movsl
loope
js
loopne
das
lahf
pop
mov
lret
lret
xor
mov
dec
out
lods
inc
nop
add
xor
and
xchg
cmpsl
aam
dec
adc
stos
js
cld
rcrl
mov
adc
and
outsl
dec
sahf
mov
les
frstor
pop
inc
inc
inc
mov
mov
in
shlb
pushl
mov
inc
inc
mulb
gs
cmp
popa
pop
dec
mov
nop
shl
or
mov
sahf
mov
test
jb
inc
lds
leave
xor
lods
adc
xchg
sub
mov
and
js
bound
clc
fs
sub
pop
shl
outsb
fmul
add
dec
dec
test
cld
lret
jb
sbb
xchg
sbb
fimull
mul
xlat
aas
lret
push
push
out
add
fwait
cmp
xor
mov
aam
repnz
sbb
sbb
mov
jecxz
cmpsb
flds
and
jmp
repnz
dec
inc
jo
nop
sub
dec
loop
and
adc
dec
xchg
shrl
lods
rcrb
push
pushf
adc
jo
mov
and
jle
jae
mov
mov
cmp
jmp
cmp
inc
outsb
add
lahf
inc
dec
pusha
add
sub
xor
shrb
cmp
push
into
sub
addl
pop
outsl
cmovne
inc
mov
test
pusha
adc
je
std
aaa
iret
adc
ds
repnz
push
ja
jnp
jmp
or
add
push
push
mov
jb
adcb
gs
sbb
add
push
imul
in
imul
rorb
loope
repnz
ret
shll
mov
in
sti
rolb
pop
push
imul
nop
mov
subb
aam
cmp
jae
jp
test
daa
dec
sub
test
xchg
mov
dec
in
xor
inc
cmpsb
push
sub
pop
push
imul
stos
inc
mov
aad
xchg
pop
push
pop
das
jle
push
sbb
cli
nop
mov
add
lods
sarb
cli
fnstsw
inc
and
cmp
xor
cmp
int3
out
lret
sbb
sbb
in
pop
outsl
xchg
xchg
cmp
sbb
inc
mov
subl
jno
push
fisubs
xchg
repnz
dec
insl
aam
sub
sti
enter
sarl
mov
cs
jo
xor
add
es
sbbl
mov
lock
mov
je
jne
aaa
xor
fisttpl
cwtl
pusha
int
mov
inc
mov
loopne
arpl
sti
aaa
jo
xchg
fstpt
inc
jle
fisubrs
or
aaa
sbb
jae
sahf
insb
stc
call
int3
or
jge
fstl
ret
cmp
std
into
lcall
mov
mov
cs
jb
hlt
filds
cld
dec
cmovno
xchg
rol
aaa
jnp
cltd
pop
mov
cli
adc
bound
lahf
xchg
das
ret
jcxz
jae
nop
loope
add
cltd
arpl
xor
inc
push
aad
and
pusha
sbb
xchg
mov
inc
aaa
pop
push
call
or
dec
jnp
out
mov
sbb
loope
push
dec
das
jg
test
add
or
xlat
xchg
aas
and
cmp
add
mov
ficoms
mov
cmp
push
movsb
adc
mov
sti
in
pop
cld
or
add
cmp
inc
outsb
lods
ds
ret
int
mov
xchg
jmp
lea
insl
loopne
push
out
fisttpll
and
arpl
das
cmp
jnp
mov
aas
test
fildll
xor
xchg
mov
cmp
loopne
mov
ret
mov
sbb
pop
push
add
or
rcr
mov
pop
flds
add
fiaddl
pushf
aam
cmp
fstpl
jnp
sub
scas
in
fxch
rcl
jbe
jl
lods
dec
push
out
ja
cwtl
pop
adc
cmp
outsl
stc
test
cld
mov
mov
clc
fdivrl
mov
push
test
loopne
aas
push
and
pop
fwait
xor
jp
fwait
mov
mov
sub
loope
out
ficoml
neg
stos
and
fidivrs
cmp
imulb
out
decl
stos
sub
dec
enter
lea
inc
mov
or
sub
into
adc
shll
lds
iret
xor
jl
fmuls
fdivp
mov
inc
or
sub
push
aam
or
push
or
fists
in
fs
jge
lcall
and
mov
dec
mov
jne
add
xlat
stc
inc
pmuludq
ss
loopne
in
popf
sbb
xor
stc
fimuls
dec
cmp
jbe
loopne
adc
sbb
call
jge
fadd
lcall
cmp
dec
push
fwait
xlat
loopne
inc
loopne
or
push
jo
notl
clc
loop
daa
in
xchg
or
and
push
push
xchg
xchg
icebp
in
adc
dec
xchg
add
mov
cmpb
movsb
sub
cmp
jb
lock
popf
ljmp
aad
in
dec
push
dec
xchg
fs
mov
call
xchg
mov
adc
jbe
inc
inc
lcall
imul
mov
inc
nop
lahf
mov
fdivs
or
inc
inc
and
cmc
jecxz
xchg
test
sbb
out
push
mov
add
popa
in
outsb
aad
test
mov
add
in
mov
adc
add
mov
pop
ret
pushw
cld
xorb
inc
xor
cwtl
or
sbb
and
pop
dec
xchg
dec
and
and
fimull
sbb
mov
mull
pusha
cli
inc
jl
cltd
pop
out
idivl
out
loope
adc
cmp
pop
lahf
xchg
cltd
dec
sub
ja
jno
or
sub
push
mov
jle
or
lock
insb
test
fimull
rclb
and
mov
sbb
mov
pop
insb
pushf
call
inc
pusha
cs
dec
mov
daa
aad
dec
xor
dec
out
jae
bound
or
rcrl
addr16
scas
fwait
pop
push
decl
push
fwait
sti
inc
data16
jecxz
out
sub
fcoms
push
add
mov
jnp
fisubl
add
shlb
mov
add
aad
xchg
loopne
jmp
xchg
adc
es
mov
jns
xchg
cmc
ficoml
in
lahf
add
dec
jo
and
cmc
xor
add
pop
lock
xchg
mov
inc
xchg
fdivrs
pop
push
push
out
sarb
inc
es
inc
jb
shlb
std
mov
or
xchg
jne
cmp
add
mov
dec
add
xor
mov
push
jbe
mov
das
or
mov
xchg
xchg
inc
mov
sub
fwait
lds
out
dec
push
add
or
aas
cmpsl
gs
dec
scas
out
push
mov
fs
pop
test
ss
push
pop
stos
cmpsb
jnp
mov
sbb
inc
jo
push
push
enter
aad
daa
xchg
xchg
pop
mov
push
imul
xor
xchg
dec
xchg
cmp
xor
pop
es
push
aaa
dec
rcr
fnstenv
jg
call
dec
add
or
mov
out
lea
pop
popf
sub
adc
mov
rcr
cmpb
mov
xor
adc
test
fcomps
mov
idivb
test
aam
insl
sti
loopne
addb
dec
iret
das
addb
xor
jp
mov
test
clc
aas
inc
or
xor
sub
sub
lret
jle
or
inc
hlt
inc
nop
popa
cli
dec
addb
repz
pop
mov
sub
add
mov
or
mov
out
loopne
inc
pusha
test
add
data16
jecxz
in
jl
sub
and
scas
xchg
imul
addr16
mov
sarl
and
or
inc
adc
notb
mov
out
push
loopne
or
andb
cld
pop
add
lret
push
push
mov
fstpt
mov
loopne
pop
in
cmpsl
rorl
jg
cmp
shl
mov
push
add
xorb
outsb
cs
xchg
inc
xor
xor
push
iret
add
dec
rcr
lcall
mov
add
pop
je
mov
loopne
or
xchg
dec
fmul
xor
stos
jbe
pusha
ljmp
cs
sub
mov
xchg
cmc
popf
decb
ja
lret
xchg
outsl
cmp
adc
xchg
fnstenv
int3
pop
jle
ljmp
pop
inc
sarb
repz
jb
jl
das
fimull
popf
push
push
or
hlt
mov
imul
inc
lahf
dec
out
push
add
add
add
lcall
lret
test
fs
outsb
add
xchg
loopne
or
lds
gs
push
inc
subb
lds
iret
aad
mov
and
sbb
scas
daa
mov
push
mov
mov
mov
jno
pop
jp
into
bound
cli
xchg
mov
xchg
aad
daa
mov
rolb
arpl
push
jnp
insb
xlat
mov
xlat
jp
and
xor
arpl
jp
stos
mov
shll
lea
inc
and
shll
sahf
rcrl
rcrl
out
cmp
pop
addl
lret
xchg
sub
or
mov
pop
or
mov
and
mov
pop
inc
cmc
out
push
pop
mov
xor
nop
aam
xor
dec
ljmp
pop
imul
aad
pushf
mov
cld
ja
clc
clc
jp
outsl
add
pushf
jno
ret
ds
or
cli
fsts
sbbb
fs
push
pop
inc
hlt
clc
inc
cld
cmp
push
shrl
and
mov
aas
mov
xor
ss
push
test
xchg
into
add
xchg
scas
jb
dec
jge
cmp
sbb
test
and
inc
into
add
cmp
nop
aas
or
out
push
addr16
dec
add
inc
xchg
popa
inc
fildll
lcall
in
inc
add
adc
push
or
ds
ds
pop
pop
mov
sbbl
xorl
fwait
mov
and
xlat
adc
pusha
mov
cmc
inc
mov
add
andl
into
pop
push
dec
fdivrp
lds
call
es
rorl
in
push
inc
mov
dec
mov
xor
jle
dec
idivl
or
adc
add
fisubs
sbb
aas
pushf
pop
in
jns
xor
test
pop
clc
mov
test
sbb
test
mov
sahf
out
xor
push
es
xor
xchg
cmp
int
jmp
and
jo
pop
pop
in
sbb
cs
add
cmp
in
aad
inc
shlb
lcall
mov
mov
jnp
pop
fs
pushl
mov
push
pop
lods
ljmp
inc
mov
aaa
xchg
pop
push
and
jle
mov
fcoml
sti
sub
and
cmp
sahf
or
xlat
sbb
push
dec
and
les
in
pop
fdivl
int3
cmp
sub
sbb
dec
rorl
sbb
pop
ja
hlt
or
xlat
das
mov
add
sub
fsubrp
mov
mov
stos
and
mov
testl
mov
sub
add
outsb
sub
push
dec
xchg
sub
mov
push
jns
iret
xchg
cmp
xor
rcl
add
ja
sub
cmp
xchg
cltd
xchg
in
cmp
clc
sar
arpl
mov
and
mov
inc
loopne
lods
test
fwait
pop
cltd
xlat
subb
mov
jle
jnp
or
mov
add
mov
or
dec
js
rcl
aad
stos
scas
push
mov
push
aad
cmp
jbe
jp
pushf
push
insb
sbb
sti
incb
push
dec
lret
xor
adc
push
add
rorb
jmp
cmc
cmp
ds
int
jae
fldt
shll
stc
xchg
pcmpgtd
icebp
xor
cmp
jecxz
outsb
mov
xor
pop
sbb
xlat
ret
arpl
fwait
or
scas
adc
cmc
les
aam
or
mov
mov
lret
scas
insl
xchg
out
adc
pusha
lret
mov
xor
jle
adc
pusha
sti
pop
inc
mov
sub
into
cli
sub
in
int
add
rolb
add
sar
adc
out
jo
pusha
mov
pop
out
stos
sub
xor
cmpsl
pusha
xor
mov
pop
mov
mov
mov
lock
mov
mov
ror
mov
jnp
mov
cld
test
clc
enter
arpl
fsubl
xor
outsb
lea
lods
cmc
mov
sbb
mov
in
xchg
mov
cmp
in
pop
repz
ret
ror
add
adc
jmp
and
loop
jge
sbb
xchg
mov
das
lods
add
ds
mov
adc
fdivrs
sbb
dec
mov
lea
mov
xchg
sti
add
jae
xchg
in
lcall
adc
push
mov
insb
xor
sub
loopne
pop
mov
push
outsb
int
lahf
adc
dec
mov
jbe
movsl
pop
mov
xchg
fs
ljmp
lcall
xor
pop
rcll
xor
aas
stos
mov
mov
insl
jno
mov
fisubs
roll
out
dec
out
push
in
cmc
mov
jnp
or
rcr
or
adc
xor
loopne
test
xorl
mul
aas
aad
icebp
jne
mov
nop
jae
ja
ds
mov
iret
inc
fbstp
cmp
push
mov
dec
add
cld
add
cli
mov
xchg
xchg
rolb
push
jmp
add
mov
xchg
xchg
outsb
push
scas
es
icebp
test
fldenv
jae
les
cli
xor
scas
pop
std
fsubl
jb
iret
pop
sub
aaa
in
push
rorl
in
pop
xor
sub
jbe
iret
or
cltd
pop
and
xchg
and
mov
in
outsb
xchg
jge
out
fidivrl
sar
insl
sbb
cmc
out
call
and
mov
push
je
sti
shll
lods
iret
outsl
jecxz
into
divl
call
xlat
jb
xchg
popf
ljmp
cwtl
clc
xor
mov
lret
inc
repnz
sarb
nop
push
jbe
test
cli
add
lock
ret
push
mov
dec
vmread
cwtl
add
es
push
dec
lret
or
inc
and
fidivrs
rorb
test
mov
rclb
dec
xchg
fnstsw
mov
dec
test
mov
adc
bound
test
sub
aas
mov
sub
lock
inc
call
push
sbb
rcr
in
mov
mov
mov
push
push
fidivs
xlat
sahf
ljmp
mov
les
xchg
push
push
mov
repnz
jecxz
pop
sbb
in
pop
fdivr
push
pop
jecxz
sbb
inc
inc
xor
adc
ljmp
int3
jb
loope
mov
cmp
push
adc
shl
shr
jnp
pop
test
lock
aam
out
dec
ret
inc
jbe
inc
mov
fsubl
loop
jbe
push
xchg
add
les
mov
sub
es
pop
add
rolb
mov
inc
xchg
lahf
push
lahf
loop
out
neg
xor
orb
cmc
ret
mov
xlat
aas
mov
testl
movsl
out
shll
mov
test
cmp
cmp
int3
mov
ret
mov
in
fwait
mov
addr16
cmp
mov
cli
imul
fsts
sbb
xor
jbe
jl
movzwl
sti
or
or
loopne
lods
mov
incb
lahf
mov
jl
ljmp
adc
xchg
rorb
fcom
clc
inc
jmp
fdiv
adc
mov
loopne
jmp
mov
pop
fistpl
inc
mov
outsl
add
inc
inc
jo
aas
pop
js,pn
mov
mov
mov
or
into
test
pushf
cli
xor
dec
mov
mov
jmp
sbb
pop
xor
lods
fwait
addr16
lods
movsl
pop
ficoms
pop
push
aad
sbb
outsb
cmp
add
in
cmp
mov
dec
and
test
add
sub
inc
shr
out
add
push
ret
and
pop
xchg
mov
pop
cwtl
addr16
and
xchg
orb
inc
adc
sub
xchg
xor
adc
pop
push
pop
aas
notb
and
and
in
xlat
sbb
mov
dec
sub
std
xchg
ret
lds
pop
int3
cmc
cmovge
push
paddd
or
out
frstor
sub
jnp
fadd
cmpsb
ret
ret
in
pop
xlat
lret
inc
into
push
mov
pusha
jns
insb
lret
xchg
in
enter
push
outsb
or
xlat
sbb
push
stos
dec
and
mov
in
pop
inc
imul
add
ljmp
divb
mov
clc
jae
and
aam
pop
out
mov
dec
test
cs
add
scas
imul
shrb
daa
das
nop
neg
lret
imul
int
mov
push
loop
loop
sbb
and
leave
inc
inc
push
inc
sbb
dec
ret
adc
ret
bound
je
js
sbb
add
mov
xchg
or
mov
jecxz
add
sarb
adc
add
inc
inc
dec
lret
sub
aam
subb
pop
mov
mov
subl
push
sarb
dec
rolb
aam
sub
nop
mov
shrb
addb
mov
test
in
xor
adc
rclb
repnz
mov
rol
push
stos
add
iret
or
lods
test
pusha
data16
and
repnz
xchg
push
leave
and
fnstcw
fisubl
enter
jge
imul
mov
lret
test
adc
ljmp
mov
adc
add
pop
push
ja
loop
shlb
mov
pop
push
imul
adc
stc
jge
jnp
in
sbb
pop
push
lds
cmpsb
xor
xor
cmp
pop
push
jecxz
stos
push
and
or
test
fcmovu
xor
addr16
cmc
ror
lods
xchg
int
jle
jecxz
xor
movsl
lret
ror
sub
pop
push
gs
pusha
rol
mov
aam
das
and
shrb
xor
fnstcw
push
lods
and
ret
or
mov
or
mov
call
pop
aaa
and
pop
sub
sahf
outsb
sarl
mov
loopne
cld
dec
xlat
loop
and
push
pop
into
in
cld
out
daa
cwtl
or
dec
lock
dec
xchg
cmp
xor
or
dec
scas
sub
xor
fisubrl
push
inc
pusha
adc
lods
add
fisubrl
hlt
fldl
std
cmp
movsb
mov
push
and
sahf
fcmovbe
divl
push
mov
movsl
add
pop
mov
sub
xor
dec
sbb
fsubs
add
mov
mov
repnz
sub
ret
and
push
jns
dec
ss
int
sub
mov
pop
sbb
sub
into
mov
mov
mov
fisttps
std
jo
dec
push
and
or
mov
arpl
popa
or
shlb
add
xor
jl
divl
mov
lea
mov
cmpb
aas
jne
sbbb
xchg
dec
jle
or
or
inc
add
adc
mov
inc
outsb
xchg
xorb
mov
outsl
sbb
sarl
aad
daa
cmp
pop
mov
xchg
gs
xchg
ret
stc
xor
cmpsl
mov
shll
pop
out
shrb
inc
adcb
dec
movsb
das
push
fcmovne
mov
into
jp
int3
mov
aad
sbb
pop
inc
fsubl
sahf
sbb
adc
mov
sarb
outsl
jbe
scas
jb
faddp
mov
push
mov
mov
sahf
loop
inc
enter
divl
mov
xlat
mov
leave
dec
in
dec
sub
orl
cs
mov
inc
sbb
es
pop
fs
add
stos
in
stos
js
inc
pop
pusha
xor
fisubs
xchg
pop
xchg
js
xchg
pop
mov
dec
inc
mov
testl
and
push
mov
mov
mov
xor
sbb
sbb
in
sub
int
ret
dec
inc
pop
or
cld
dec
ja
stos
pop
jne
sbb
xor
mov
mov
xchg
sub
pop
xchg
dec
mov
neg
dec
mov
cmp
aam
cld
mov
fisubs
cmp
test
lret
jmp
push
pushw
jne
mov
test
fs
pop
shrb
cmc
shlb
jns
cmp
push
push
mov
ljmp
arpl
mov
aam
enter
inc
in
rcrl
sbb
lods
in
bound
fwait
cmp
xchg
dec
lock
and
mov
inc
cmp
bound
adc
ja
fcoml
arpl
xor
rcr
sbb
pop
cmpsb
push
sub
lock
mov
and
shl
jmp
adc
push
cmpsb
into
bound
mov
pop
mov
gs
repnz
xor
rcr
stos
xchg
inc
gs
repnz
pusha
enter
loop
push
sbb
loop
test
loop
push
mov
lcall
dec
cmp
or
and
push
scas
addb
lcall
test
fimuls
cld
mov
sub
pop
xchg
and
int3
jge
ljmp
int
and
imul
mov
push
sbb
stos
sahf
mov
std
jg
or
dec
sub
lea
int3
sub
test
loope
in
ljmp
sub
push
inc
fimuls
pop
mov
jge
xor
xchg
daa
or
mov
cmp
and
jle
adc
jb
mov
rcrl
loop
loope,pn
fcomip
into
cli
cltd
add
xchg
or
cmc
pop
paddd
xor
aad
xchg
lcall
inc
inc
xchg
ljmp
mov
repz
xorl
jecxz
mov
fcomip
jb
mov
scas
sbb
imul
ja
ds
mov
mov
or
sub
fistpll
push
push
adc
adc
cmc
push
mov
pop
inc
cmc
or
popf
stc
loope
faddp
dec
fdivrs
jo
inc
mov
aad
mov
cmp
inc
test
test
adc
mov
xor
int3
cmp
dec
dec
ret
cmp
loop
mov
pop
mov
cwtl
push
push
popf
ror
push
pop
leave
xchg
ret
lods
popf
flds
xor
rolb
aam
sub
testl
cmpsb
jp
push
push
inc
jo
or
mov
out
aam
sti
jae
pop
dec
imull
jnp
mov
shlb
dec
fstl
fldcw
and
aas
pusha
fwait
adc
push
and
add
rorb
fs
adc
cmpb
rcrb
or
adc
push
cmp
jle
mov
iret
test
xchg
lcall
inc
adc
adc
fidivs
mov
adc
insb
lret
push
mov
and
adc
stc
pusha
stc
into
pop
dec
frstor
xor
xor
push
and
jmp
xchg
push
pop
push
lahf
arpl
popf
mov
dec
imul
mov
inc
lock
xchg
push
fdivp
repnz
add
icebp
sbb
outsb
cmp
cmc
jle
pop
dec
pop
xor
stos
repnz
test
lds
aas
jmp
mov
and
in
push
jecxz
call
cmc
or
mov
mov
nop
stc
cmpl
sub
add
aam
loop
loopne
jno
pop
add
add
cmpsl
fcoml
fidivrs
and
fdivp
cmc
cmp
sbb
rcll
mov
sub
imul
test
inc
add
and
fcmove
jmp
in
mov
test
cli
xchg
lds
inc
rcrl
in
sub
loope
and
or
mov
rcrb
shll
push
dec
shlb
adc
lret
in
repz
inc
jae
icebp
cmp
leave
movsl
nop
add
sbb
daa
mov
pop
cs
xchg
cli
enter
rorl
out
roll
sbb
dec
cmp
cmp
fucompp
mov
xchg
mov
inc
bound
push
subl
js
mov
pusha
pushf
add
dec
stc
or
xor
mov
fwait
orl
ficoml
frstor
or
shll
push
mov
testl
pop
aad
fsubrs
test
adc
scas
push
and
push
ret
fistl
add
xchg
xchg
xchg
cs
test
mull
mov
gs
jp
rclb
xor
popa
repnz
stos
int3
jb
lods
movb
pop
int3
and
inc
and
fcmovnu
aam
jle
mov
jnp
mov
cs
pop
lcall
mov
pop
dec
movsb
pop
xor
xor
aam
fadds
push
aas
leave
loop
lods
ds
cmp
or
cmp
out
push
stc
cmp
outsb
xor
push
sbb
imul
pusha
pop
pop
cmpsb
decb
ret
adc
pop
push
test
adc
inc
cmpsl
loopne
or
cmp
inc
jp
xchg
stos
les
lcall
jle
scas
cld
pusha
push
xchg
ds
jmp
push
push
mov
sar
sbb
mov
sub
xor
cmp
shr
mov
inc
rcrb
sbb
gs
les
pop
ljmp
fwait
and
out
cli
fcmovb
sbbb
stc
cmp
fisubl
cmp
in
xchg
adc
dec
push
and
stc
add
inc
jo
cltd
loop
out
ja
push
or
and
loopne
aaa
loope
loopne
enter
fisubl
xchg
pop
mov
mov
or
jp
add
pop
xor
xor
test
xor
popf
jl
dec
cmpb
jne
out
in
cmp
jno
mov
xor
mov
out
into
inc
nop
fadds
mov
adc
shl
add
cmp
fsubrl
ljmp
sarl
jle
adc
lods
push
jbe
mov
mov
mulb
jp
js
cmc
mov
jo
popf
mov
dec
pop
int3
fisubl
ss
in
scas
xchg
add
xor
push
fsubrs
add
rol
push
xor
mov
or
jle
rcr
pushf
stos
hlt
mov
sahf
fdiv
mov
sbbb
pop
dec
imul
add
fsts
sub
jle
mov
dec
mov
shll
cmc
or
sub
fadds
mov
ja
adcb
loopne
mov
jae
loop
xchg
jg
jnp
push
stos
imul
loope
sti
push
xchg
dec
stos
jbe
push
repz
mov
aam
nop
mov
iret
xor
jo
imul
loopne
jge
test
leave
je
orb
mov
xchg
movsb
fdivrp
jp
sbb
out
mov
mov
loopne
lods
jo
call
in
shl
testl
inc
pop
stos
add
dec
inc
sarb
bound
mulb
mov
push
add
rolb
je
ret
lods
jb
xchg
jp
and
popa
sbb
fiaddl
rcrb
test
xchg
shrb
lahf
out
fstl
jnp
pop
and
xchg
fisubl
leave
xchg
mov
subl
add
fiaddl
jmp
pop
mov
push
testb
std
cmpsb
inc
push
cmpsl
clc
je
lock
jb
loope
loopne
rcl
sub
hlt
pop
fidivrl
into
mul
loop
faddp
sbb
sbb
push
mov
push
cmp
test
fptan
loopne
and
inc
loopne
add
popa
xlat
xor
mov
sbb
test
sbb
ret
es
and
cs
pop
adc
test
add
outsb
or
cmp
sbb
and
push
pusha
arpl
movsb
push
xchg
mov
xchg
xchg
shrl
add
cmp
sub
pop
xor
inc
imul
sbb
imul
out
xlat
ljmp
aad
jo
sbb
ss
sbb
and
pop
sahf
mov
shrl
icebp
lret
test
into
rorl
jae
repnz
std
rol
mov
pop
pop
in
inc
imul
mov
scas
pop
in
stos
mov
repnz
mov
pop
pushf
out
cli
xchg
arpl
jo
sbb
dec
xlat
push
xor
add
sti
mov
cmp
xor
repnz
daa
jg
mov
jg
push
or
iret
ret
push
popf
lock
add
sbb
adc
add
add
stos
js
add
int
dec
mov
xchg
add
sbb
jg
jo
xor
cld
test
hlt
pop
aad
aam
sbb
shlb
ret
or
inc
mov
pop
addr16
fidivrl
jnp
xor
jl
mov
mov
mov
andb
in
fildll
stos
sub
dec
inc
enter
cmp
test
cmp
les
cmp
mov
add
stos
mov
aam
pop
test
xor
cmpsl
sahf
in
cmp
jg
jo
inc
push
xchg
and
jecxz
mov
lock
aad
xchg
idivb
or
shlb
mov
ljmp
or
es
mov
mov
stos
mov
jo
test
in
aam
lret
sti
insl
mov
push
popf
jl
adc
and
rcr
xchg
out
subl
popa
cmp
sub
mov
bnd
psubw
mov
cmp
sarb
push
inc
pop
and
cs
outsb
push
add
ja
inc
mov
call
dec
jle
cmpsl
stc
lods
in
add
cmp
cltd
stos
jmp
add
repz
inc
outsb
jne
pop
fcompl
pop
out
aaa
out
add
inc
add
and
std
lock
fsubrs
int
fadds
nop
push
lret
pop
mov
add
sbb
push
mov
mov
cmp
div
inc
stos
into
adc
ficoms
call
adc
sbb
lods
pop
shl
jne
dec
mov
adc
jp
or
cli
out
mov
mov
pop
jg
dec
mov
pop
cmp
push
loope
sbb
lds
lods
hlt
xchg
or
daa
outsb
dec
dec
cld
inc
icebp
lret
addr16
jne
dec
fstpl
cld
inc
pop
dec
lds
jnp
jge
dec
sbb
push
lods
xchg
sbb
sub
clc
jmp
mov
xor
sbb
add
ljmp
inc
nop
cld
dec
call
fldenv
mov
jg
ja
inc
dec
insb
mov
decl
enter
shr
es
mov
dec
shl
in
les
scas
xor
sbbb
pushf
push
fadd
enter
mov
cmpxchg
inc
mov
mov
xchg
or
push
rcrl
adc
outsl
mov
aam
mov
stc
push
out
shll
inc
adc
dec
das
fldt
mov
ficompl
xchg
stos
inc
test
push
xchg
arpl
add
add
inc
add
rcrl
mov
xchg
aad
andb
pop
repz
loope
cmp
std
mov
jb
adcb
fxam
xchg
adc
dec
push
cs
clc
test
mov
repnz
call
jo
cmc
sbb
mov
dec
shrb
enter
fistps
cwtl
jbe
jb
lahf
and
aad
loop
inc
shlb
push
adc
and
stos
pop
add
fucomip
fcmovnbe
sub
mov
lods
xor
or
cld
das
push
add
lret
test
mov
xchg
mov
xchg
cmpsb
pop
inc
add
lahf
pop
jmp
dec
lret
mov
add
inc
sbb
add
push
int3
mov
xchg
loopne
mov
cmpsb
fimuls
nopl
add
mov
and
dec
negl
into
stos
cld
sbb
xlat
push
pop
pop
or
xchg
es
xchg
mov
jae
popf
cmp
inc
pop
ljmp
mov
push
out
inc
mov
push
loopne
fwait
ja
pop
pop
adc
inc
dec
mov
popa
push
fisttpll
jle
xorl
cmpsb
flds
sbb
ss
stos
push
ss
in
test
xlat
push
mov
mov
mov
dec
aad
or
jecxz
dec
jns
and
push
ds
stc
in
cmp
inc
hlt
xchg
mov
rcll
iret
sbb
mov
loop
bound
push
adc
ficomps
dec
or
jae
mov
repnz
test
ror
fstl
mov
adc
xchg
mov
iret
cmp
jg
add
jnp
or
xor
insl
push
cmp
mov
faddp
mov
call
or
or
notb
imul
sbb
iret
mov
inc
inc
inc
rcr
imul
mov
cmpsl
out
les
sub
std
lods
pop
push
dec
lds
mov
mov
inc
insl
fistl
push
aad
prefetch
sbb
mov
gs
pop
outsl
add
pop
or
push
imul
shrb
jge
adc
aas
xor
fstpt
insl
mov
fistl
aam
call
mov
ds
aad
xchg
jo
imul
adc
out
daa
fmul
leave
mov
pop
jle
xlat
cli
les
add
and
bound
push
pop
push
sub
ret
pop
xchg
and
sti
sahf
sbb
fidivrl
fidivs
shrl
xor
incb
ficompl
test
cmp
cmpsb
scas
js
repnz
loope
sbb
jecxz
mov
je
ja
scas
dec
jle
addr16
add
adcb
push
or
push
loope
int
inc
xor
jecxz
add
outsl
addb
jg
push
add
cli
hlt
xchg
jno
aad
fs
push
int3
jl
mov
cmp
dec
cmp
push
aaa
mov
add
xchg
adc
sbb
add
fs
push
push
or
int
mov
adc
or
fcmovne
mov
adc
inc
xor
scas
xchg
ds
push
clc
jg
insl
aad
fwait
sbb
adc
imul
pop
push
push
cmp
or
xor
arpl
in
std
loopne
pop
add
pushf
sbb
adc
out
mov
xchg
cltd
add
mov
aaa
sahf
push
sub
fwait
arpl
movsl
lret
into
and
pop
cmp
ret
mov
fstl
dec
adc
xchg
call
dec
add
imul
xor
jmp
or
mov
mov
jb
add
cmpsb
lock
inc
loopne
mov
fstp
xor
cmp
mov
negl
dec
mov
inc
xor
add
dec
add
fdivrl
inc
subl
mov
jae
mov
dec
or
mov
loop
aad
cmc
cwtl
loope
rcll
mov
aam
inc
mov
and
push
pushf
jecxz
xchg
shl
stc
mov
push
int3
fstpt
cmpl
sub
aaa
shll
test
ret
and
outsb
adc
test
movsb
fstpt
test
jae
fnstcw
call
sub
xorb
inc
lahf
mov
in
dec
mov
in
pop
aad
mov
sbb
dec
out
iret
mov
or
ret
xlat
or
mov
sbb
int3
packsswb
dec
lds
out
push
fldcw
sbb
aad
add
in
or
movsl
nop
mov
push
shll
mov
inc
push
mov
adc
sub
leave
adc
mov
repnz
ja
push
nop
call
xor
sub
add
mov
and
outsb
std
movsb
dec
add
or
add
push
outsb
mov
stos
popf
das
sub
or
mov
imul
cmc
movsl
subb
mov
pop
cmp
dec
push
xchg
xor
fcomip
in
push
js
rorl
pop
or
push
adc
xchg
arpl
jle
scas
cli
dec
or
sbb
stos
mov
lahf
pop
cmp
adc
das
mov
nop
rolb
repnz
jle
shll
jmp
sbb
movsl
jmp
adc
ret
and
loope
sub
clc
aam
leave
and
push
mov
aad
int
pop
ljmp
adc
sahf
mov
fwait
xlat
sub
xor
sbb
gs
cmc
popf
imulb
test
hlt
cmp
call
pop
and
nop
aad
out
lahf
outsl
fsubs
rcl
loopne
add
mov
xchg
mov
pushf
ja
lea
int3
push
xor
dec
fsubl
dec
xlat
rdpmc
push
sub
js
and
sarl
dec
mov
dec
loopne
push
jbe
cmp
inc
cmp
pop
inc
movsl
in
xor
imul
fwait
add
add
mov
lret
sub
sub
sub
push
push
call
xor
movsb
jb
cmp
mov
imul
outsb
or
popl
mov
add
repnz
lret
mov
jbe
test
aam
adc
fldt
std
push
mul
mov
mov
cli
mov
addr16
and
out
pop
addr16
xchg
add
pop
or
test
jp
repz
adc
and
sbb
insl
sub
roll
inc
rorl
sub
adc
sbb
jns
sbb
enter
outsb
lea
mov
mov
push
bound
or
bound
mov
pop
sahf
lret
xor
clc
xchg
fucomi
pop
xchg
fnstcw
xor
inc
mov
and
inc
out
gs
scas
cmp
lret
or
loope
pop
scas
movsb
lods
sti
repnz
imul
iret
mov
ja
adc
pop
mov
lds
or
mov
test
nop
push
xchg
ss
ss
jbe
lds
jl
xchg
lret
cmc
lcall
loopne
test
lret
out
mov
jnp
jle
arpl
jl
scas
xchg
out
ret
sarb
add
test
adc
sub
fisubs
fldt
add
push
loop
out
inc
cmp
push
aad
inc
ret
mov
jg
jle
call
xor
ror
sti
daa
inc
sub
imul
aam
mov
jb
xchg
dec
shlb
rorb
jmp
inc
hlt
pushw
divb
repz
dec
jp
pop
mov
push
jge
lahf
mov
adc
call
jl
loopne
cmc
xchg
loope
mov
sahf
dec
mov
xchg
or
jno
aad
or
inc
inc
push
mov
mov
jnp
push
sbb
mov
shrb
inc
lods
sbb
fsubr
pop
fsubl
cmp
push
mov
mov
jl
inc
adc
sub
sbb
dec
or
jb
mov
add
or
add
mov
icebp
cmpsb
aas
lds
or
xchg
test
mov
rclb
dec
mov
mov
cmp
ret
mov
jp
add
test
mov
push
insl
cwtl
dec
fimuls
fcoml
out
ljmp
imul
push
imull
jl
jge
push
sarl
cmp
pop
adc
add
pop
push
mov
adc
cs
lret
xchg
stc
nopl
hlt
into
jne
jbe
push
jb
imul
es
sub
jnp
inc
not
sub
dec
shlb
mov
js
pop
rcrl
jns
out
mov
cmp
insb
or
add
aad
aas
push
inc
add
push
cmp
cs
mov
inc
shl
dec
in
sbb
cmpsb
mov
mov
push
fsubl
or
test
add
jo
ret
mov
mov
sbbl
inc
xchg
push
inc
xlat
mov
cwtl
es
pusha
adc
psubusw
ja
mov
cmpb
xchg
jnp,pn
add
iret
jge
fistl
pop
out
mov
lds
insb
out
or
cmpsb
shll
ficoms
nop
mov
stos
inc
test
lahf
mov
aas
int3
push
mov
pushf
arpl
fldt
popf
out
cli
repnz
push
lods
cwtl
sub
or
jp
in
xchg
cmp
ret
dec
aad
mov
cmp
add
dec
sub
add
adc
int3
mov
mov
jge
mov
sub
dec
push
pop
lret
fistpll
mov
sbb
cwtl
xor
inc
sbb
push
arpl
push
loope
lea
ret
das
rcrb
or
jp
outsb
pop
push
dec
je
scas
roll
cmp
sub
and
in
adc
mov
pop
fidivrl
sbb
cld
xor
imul
je
lea
adc
pop
loope
inc
inc
out
jle
add
ds
sarb
dec
xor
push
outsb
xchg
or
xlat
xchg
insl
lock
in
pushf
inc
or
gs
dec
xor
ja
inc
subb
inc
lret
cmpsb
adc
loop
pop
cmc
cltd
lods
bound
mov
cmp
aas
cmp
mov
mov
push
cmc
addr16
mov
aas
xchg
inc
arpl
stos
stc
decl
xor
pop
dec
shrb
test
inc
dec
jae
sar
enter
inc
pop
enter
sarb
outsb
lock
or
pop
lds
cmp
sti
incb
or
jp
xor
and
dec
cs
xor
cmc
fnstsw
fisttpll
and
pop
loope
aam
cmp
cli
cmp
adc
push
cmp
pop
rcll
mov
pushf
or
mov
aam
into
push
cmpsl
push
cmp
cmc
enter
xlat
mov
cmpl
push
jns
lcall
loop
sbb
pop
jle
mov
adc
daa
jge
push
iret
push
fisubs
movlps
pop
pop
faddl
and
pop
ss
push
adc
dec
fmul
aas
mov
mov
xchg
mov
jnp
bound
mov
data16
nop
xchg
adc
and
into
dec
js
lret
cmp
insl
jp
jmp
inc
and
inc
lret
push
push
add
imul
or
mov
lcall
fmull
pop
mov
inc
cmp
aam
adc
lods
jg
outsb
andb
fnstcw
xlat
sahf
adc
and
dec
push
fistps
mov
sahf
mov
push
mov
out
ja
jmp
dec
in
adc
int
or
xchg
inc
cmp
mov
dec
mov
sbb
push
mov
repnz
movsl
movsb
xchg
jmp
lret
adc
insl
cmpsb
in
cmp
or
dec
shll
bound
shl
cwtl
mov
sbb
push
fbstp
inc
subb
sub
bound
filds
rcrb
sbb
xchg
lret
jl
jne
shll
scas
cmpsb
mov
iret
aam
xor
inc
xor
fstps
mov
cmpsb
pop
jl
jo
push
adc
shrl
adc
rcll
jb
and
mov
dec
mov
pushf
cmp
lahf
cwtl
add
dec
ds
neg
inc
in
ljmp
das
in
mov
adc
adc
sbb
into
ljmp
add
ljmp
iret
mov
into
out
stos
pop
xor
sub
js
stc
or
push
dec
bound
lret
dec
mov
inc
dec
scas
and
lds
lcall
adcl
push
shrl
ljmp
pusha
mov
into
gs
and
lret
dec
add
testl
xchg
in
std
rorl
add
sarl
mov
adc
add
cli
dec
iret
mov
push
pop
or
cmpsb
adc
fsubrs
pop
rolb
out
and
into
fildll
push
cmp
cltd
lods
or
leave
test
jp
and
inc
add
pusha
mov
pop
jp
xor
leave
outsb
adc
push
fldcw
scas
cli
mov
xchg
aam
mov
add
shr
sbb
scas
xchg
lgs
ljmp
dec
repnz
js
dec
std
and
shr
fsubl
jo
lock
fsts
pop
jecxz
mov
sahf
jbe
push
dec
add
and
inc
sbb
call
cwtl
dec
pop
pop
add
mov
test
xlat
cmp
cmp
pushf
hlt
std
dec
lret
sbb
pusha
movsb
and
icebp
inc
inc
sub
mov
sbb
lret
pop
add
or
push
mov
movsl
xchg
pop
inc
sub
xchg
push
inc
ret
sbb
and
lods
loopne
aad
xchg
push
inc
adcl
jnp
xor
outsb
and
and
jecxz
push
fdivl
and
xor
pop
sbb
js
sbb
cltd
jbe
inc
shlb
inc
sbb
xor
xor
and
das
lock
push
push
pop
xor
jo
add
xrelease
aam
lahf
adc
xor
xlat
or
addr16
jg
mov
push
fcmovne
fistps
addr16
jle
out
stc
push
lcall
lods
mov
rolb
jge
fnstsw
mov
jo,pt
mov
call
loope
leave
addr16
xor
mov
xchg
lcall
insb
xchg
inc
outsl
mov
out
data16
push
cld
fstpt
je
mov
pop
push
repnz
cmp
adc
movsb
pop
xchg
push
sbb
cmp
inc
sbbb
push
lahf
mov
lock
data16
neg
stos
add
lods
call
mov
mov
adc
mov
or
add
mov
int
sar
dec
js
fwait
pushf
in
daa
and
push
into
test
sub
and
xlat
or
jb
hlt
ja
fidivl
subb
or
or
ffree
faddp
outsb
pop
cld
push
pusha
add
mov
push
jne
fcmovb
sbb
inc
inc
cmp
in
xor
inc
add
out
int
mov
ret
ljmp
jp
call
pop
std
mov
cmpsb
movb
dec
cmpsl
adc
push
cmpl
mov
add
mov
push
stos
inc
xor
addr16
pop
ret
gs
push
out
fwait
mov
xchg
fsubl
daa
push
add
cs
push
ror
ss
lods
mov
pop
scas
cmp
jmp
ficompl
cli
insb
add
out
push
pop
xor
sub
sahf
ja
and
or
outsl
aam
popa
dec
movsl
cmp
jno
pusha
push
imul
inc
sub
mov
scas
dec
loopne
or
rcrb
push
dec
cli
xchg
aad
sar
out
rcrl
in
mov
adc
jb
leavew
cmp
cmp
int
rcl
sbb
push
or
sbb
lcall
inc
xor
call
repnz
sbb
dec
mov
xchg
jle
aam
pusha
adc
into
imul
fisttpll
push
push
je
neg
xor
sarl
xchg
mov
inc
mov
sub
sbb
and
mov
cmp
or
out
stc
mov
jp
sbb
ret
cmp
cmp
adc
ficoms
int3
rcll
jecxz
adc
jnp
mov
sbb
jns
rcrb
lds
inc
jl
add
inc
sub
loope
cmp
add
add
and
sub
scas
add
dec
xor
fildll
pop
loop
insb
lret
je
rcrb
insl
add
movsl
push
xchg
loop
push
jnp
scas
mov
jne
or
add
mov
cs
mov
lcall
sti
test
pop
cld
xor
push
and
fstl
mov
ljmp
sbb
cmp
mov
mov
sub
adc
sbb
iret
mov
pushf
xor
loope
mov
push
hlt
mov
sub
in
lcall
push
and
mov
push
jmp
ud0
mov
mov
add
push
jg
xor
mov
call
adc
lock
pop
jge
cs
pop
lods
xchg
mov
pop
aaa
adc
mov
out
cmp
fnstsw
or
xchg
xor
sbb
mov
ds
int
stos
lods
push
sbb
fistpl
cmpsb
aam
pusha
imul
jge
sub
insb
xlat
mov
push
mov
in
mov
inc
xchg
rcr
sub
mov
inc
inc
ror
sub
and
movsb
sahf
in
mov
cmp
scas
adc
push
inc
lock
movsb
xchg
cmp
lret
bound
pop
scas
adc
sti
lret
mov
mov
pop
lret
ffreep
xchg
mov
and
jecxz
lods
mov
popf
add
mov
test
dec
ficomps
fs
std
adc
mov
push
stc
and
sbb
out
jle
pop
outsl
int3
xchg
xor
xchg
pop
into
xchg
movl
mulb
in
call
inc
add
dec
cmp
sahf
or
adc
iret
xor
daa
ljmp
out
adc
std
enter
fstps
push
add
cmp
or
cmp
pop
xlat
inc
aad
xchg
out
sbb
push
scas
sbb
jns
lcall
sti
inc
adc
fwait
sub
xor
mov
mov
outsb
into
and
add
mov
lcall
jl
lock
mov
push
sub
and
sarb
lahf
roll
imulb
add
ja
pop
cs
cltd
insl
mov
pushf
xor
jecxz
mov
inc
xor
xchg
dec
repz
xor
sbb
fstl
inc
xor
cmp
mov
pushf
fnstcw
mov
push
pop
adcb
loop
sbb
mov
dec
pop
adc
rorb
inc
les
daa
lret
gs
dec
xchg
std
jp
add
rorl
push
movsl
insl
jbe
inc
pop
dec
inc
jne
cwtl
jae
movb
pop
inc
aas
dec
jge
pusha
sbb
fildl
subb
scas
imul
fxch
lret
and
int3
adc
or
in
xchg
fwait
xor
dec
insl
pop
mov
and
push
insb
filds
push
fadds
sahf
pop
arpl
popa
fnstsw
fstp
adc
nop
adc
ficomps
lods
xchg
sete
test
ja
lds
xchg
mov
adc
loop
push
and
imul
out
repz
mov
into
es
sarb
test
ds
in
in
test
push
mov
int
pop
enter
jg
mov
rorl
pushf
shrb
and
pop
clc
es
cltd
lret
out
cs
aas
push
aaa
cmpsb
mov
dec
mov
ret
lock
add
xor
mov
xchg
stos
xchg
repz
out
sub
in
stos
jo
mov
das
cmp
jl
and
cmp
nop
xor
ret
xor
leave
or
int3
scas
iret
mov
pusha
outsl
cmpps
nop
or
bnd
sete
clc
std
int3
outsl
or
rorl
movsb
adc
mov
adc
sbb
out
xor
and
fwait
jno
pop
dec
xchg
jle
imull
inc
add
xor
sti
ss
mov
cmc
scas
xor
bound
fldl
ja
fldenv
jle
stc
adc
sbb
test
dec
mov
repnz
cmp
fnstcw
fidivrs
fsubl
or
aam
insl
sub
and
or
add
sti
inc
fwait
nop
dec
call
dec
mov
mov
inc
leave
cmp
fldcw
jge
jp
adc
dec
les
stc
stos
ljmp
jb
call
inc
adc
decb
add
sbb
inc
pop
mov
add
mov
aad
pop
out
rcrl
adc
cs
pusha
ds
stc
push
daa
pushf
add
sbb
insl
pop
lret
into
pop
lahf
mov
shlb
push
sub
xorb
xchg
js
inc
fadd
cltd
jecxz
lret
fucomip
int3
cltd
aad
mov
jle
lret
push
mov
xchg
outsl
mov
aas
loopne
jne
fldt
xchg
fucom
aam
cmp
shrb
int
inc
adc
fldl
xchg
xchg
and
push
and
int
mov
cmp
jne
inc
jo
push
mov
fidivl
jg
fiaddl
in
ficompl
loopne
xchg
mov
fld
adc
xor
xchg
adc
adc
addr16
jle
push
xor
icebp
dec
push
rorl
xchg
shl
xchg
mov
ret
scas
pushf
data16
pop
push
popa
ret
xor
inc
mov
mov
push
or
jb
jmp
aam
mov
sbb
cmp
daa
mov
mov
bound
adc
out
in
shll
mov
sub
dec
test
andb
pop
mov
inc
xchg
jl
rclb
loop
push
push
sahf
mov
es
inc
ds
add
cmc
add
lcall
xlat
jp
out
sbb
push
xlat
pop
roll
fnstenv
or
mov
jo
in
rcl
lds
sub
hlt
repnz
or
sub
fadd
fmulp
fldl
jne
cld
lret
cmpsl
dec
mov
xlat
push
inc
adc
addb
inc
div
lods
dec
jne
stc
aam
shrb
ljmp
nop
pop
mov
in
sbb
inc
ficoml
push
inc
push
mov
cmp
xor
and
call
ja
fdecstp
test
shlb
add
lahf
pop
add
aad
lret
sbb
aad
shl
dec
insb
out
adc
sbbb
scas
mov
ds
cmpsl
pop
in
outsb
mov
sti
pop
pop
testb
repz
mov
dec
cli
test
cmp
dec
bound
pop
pop
jnp
nop
mov
into
push
cmp
lds
xchg
mov
dec
adc
mov
cmp
loop
add
imul
mov
int3
dec
add
cli
jmp
cmp
mov
mov
jle
mov
push
lret
ds
das
sbb
mov
fcoms
cvtps2pi
push
adc
push
push
shl
clc
std
and
pop
jmp
xchg
mov
enter
stc
in
or
iret
or
or
inc
aam
aas
in
fmull
ss
inc
shr
cli
xor
adc
ljmp
xchg
fisttps
dec
push
add
ret
in
popf
inc
pusha
mov
div
stos
rorb
add
js
arpl
or
push
lcall
pop
sub
ds
loope
jno
mov
mov
movsb
fsubs
push
aam
jle
pop
pop
sahf
sbb
or
loope
es
aaa
lds
gs
in
and
cld
jecxz
push
or
stos
cmp
cltd
in
notl
sbb
inc
mov
dec
out
fisubrl
subl
add
and
mull
push
imul
pop
dec
inc
xor
lea
test
rcl
cmp
pusha
mov
mov
cmc
sub
sub
push
dec
push
shr
ljmp
push
xlat
lods
mov
idiv
cld
outsb
ljmp
outsb
clc
push
mov
mov
push
pusha
jno
int
mov
icebp
test
dec
shl
push
mov
ja
jle
jae
xlat
sub
dec
add
sbb
std
rcll
leave
cmp
mov
jp
les
aas
movsl
adc
shlb
dec
dec
push
mov
adc
fldl
mov
addl
stos
cmp
mov
cmp
out
insl
into
fst
xor
xlat
andb
sub
inc
add
ret
mov
mov
ds
and
in
rcrl
nopl
mov
dec
sub
test
sar
lret
stc
das
push
xchg
loop
lods
aam
js
pop
stc
cltd
aas
rolb
add
test
mov
inc
cmp
pop
and
and
sbb
xchg
ljmp
pop
in
ss
stos
mov
lods
aad
in
mov
inc
jo
pop
call
and
shll
rclb
and
mov
mov
jne
dec
mov
sbb
pop
pop
rclb
or
xor
fmull
rorl
mov
lds
xchg
inc
adc
xor
fdiv
cmp
sahf
dec
insl
add
xor
xor
lcall
mov
dec
ds
or
adc
xor
mov
cmpb
filds
leave
fsts
or
sbb
dec
mov
les
das
aam
mov
and
inc
arpl
lea
mov
rcrb
mov
imul
jns
or
das
and
mov
mov
mov
lods
dec
pusha
lock
repnz
das
and
lret
pop
lock
inc
stos
loopne
sbb
inc
mov
push
inc
dec
pop
cmp
jae
xor
jg
arpl
mov
xor
out
push
test
pop
ss
out
jp
mov
adc
popa
rorl
xchg
hlt
inc
rclb
in
xorb
cmpsl
xor
jle
inc
add
js
out
lret
les
push
sbb
addb
jb
mov
sub
sarb
adc
pop
pop
in
xchg
rorb
xor
ds
lock
mov
jne
jmp
jmp
push
or
stc
sti
and
push
pushf
negl
outsl
jle
inc
cmp
hlt
ret
aam
enter
and
dec
ror
in
imul
jmp
mov
and
mov
sbb
mov
dec
shrl
sub
lods
inc
lock
cmc
jnp
or
fcoms
push
mov
jle
push
jae
cmp
stos
or
mov
ss
xchg
mov
push
and
cmpsl
lock
mov
andl
out
sar
leave
xlat
cmp
inc
sarb
movsl
xchg
cmc
aam
sbb
icebp
xchg
add
movsb
adc
fidivs
cmp
mov
add
dec
and
cmp
loop
shl
mov
pushf
stos
xor
sbb
clc
jo
mov
shlb
push
iret
cmc
mov
pop
push
sbb
aam
nop
out
inc
inc
or
in
fcomps
adc
jae
push
cmpsb
pop
cltd
sub
cmp
jp
aad
jo
sbbb
dec
in
jo
cs
ret
pusha
sbb
mov
faddp
or
in
mov
or
cld
icebp
adc
test
xchg
mov
loop
imul
sub
dec
decb
imul
out
push
fistl
jb
mov
outsb
hlt
in
add
insl
sbb
push
lcall
and
pop
lret
inc
pop
cld
fsubs
adc
lods
sbb
cs
aas
std
push
out
loopne
lcall
sti
cmp
pop
dec
sahf
ljmp
adc
fptan
xchg
aaa
xchg
out
mov
sti
push
mov
jmp
cli
cltd
scas
add
xor
rorl
inc
mov
test
inc
jb
or
ret
daa
inc
jno
sbbb
add
sahf
pop
push
add
lds
cmpsl
test
repnz
sub
mov
push
dec
dec
jmp
iret
pop
pusha
sub
addr16
add
and
jmp
flds
popa
pop
push
lock
push
lods
es
inc
pop
mov
enter
xor
sub
adc
jns
mov
jb
aas
xchg
xchg
inc
pop
push
movsb
in
sub
enter
popa
mov
jge
cmp
cmpsb
loop
into
or
mov
jne
add
mov
inc
xchg
sbb
jnp
jne,pt
add
cmp
pop
data16
pop
sbb
cmp
loop
and
inc
add
xlat
cmp
rclb
mov
ret
test
add
cmpsb
jbe
cmp
cltd
movsb
push
arpl
in
push
pop
mov
rcl
jno
mov
dec
jns
data16
dec
aas
bound
fdivrs
cmp
es
popa
shrl
shll
loopne
adc
loop
jno
jge
pop
pop
sbb
out
jl
nop
out
inc
aad
mov
cwtl
aam
call
xor
cmp
aas
xor
jmp
mov
cs
pop
into
xor
cmc
loop
jns
mov
fidivl
sbb
clc
movsb
jb
inc
push
xor
add
pop
sub
fcoms
jmp
mov
fdivl
data16
pop
shl
fsubrs
jne
mov
fs
sub
mov
or
test
add
mov
sub
jp
jmp
xchg
cmp
pop
adc
hlt
add
dec
inc
int3
sbb
sub
mov
ja
push
outsl
imul
cli
mov
scas
in
mov
adc
add
inc
mov
add
aam
aam
xor
dec
jbe
stc
sub
cmp
mov
fwait
push
ffree
mov
pop
add
jns
sarl
movsb
das
lcall
sbb
dec
sbb
mov
xchg
fisubs
cmp
add
lret
andl
outsb
das
movsl
and
mov
push
xor
and
inc
ficompl
mov
or
lock
lcall
fsubp
inc
or
ljmp
shlb
jne
jle
mov
lret
ret
jmp
and
pop
mov
inc
fstl
bound
in
cmp
mov
inc
jle,pn
inc
pusha
dec
mov
mov
rcr
repnz
fs
loopne
lods
jle
cli
std
jl
ret
pop
lock
jo
inc
fistl
xchg
rolb
ret
popa
mov
fistpll
ljmp
outsb
adcl
mov
add
adc
jbe
jnp
test
push
sbbl
mov
out
push
jo
test
bound
loop
cld
mov
push
pop
cli
nop
jno
jg
lods
adc
add
sti
fmul
orl
and
loope
rcll
fidivrl
lea
sbb
pop
fstps
popf
fsubrs
mov
inc
inc
push
push
imul
add
frstor
ljmp
sti
sbb
mov
rcrl
xor
repnz
insl
inc
push
shrb
sbb
mov
adc
cmp
fsubrs
in
and
loopne
mov
movsb
push
xor
xchg
sub
mov
jno
xchg
ret
dec
fwait
repz
mov
shlb
fimull
pop
fsubl
jl
mov
das
sti
cmp
dec
sahf
sahf
add
in
movsb
cmp
adc
stos
insl
xor
jmp
mov
repz
add
xor
fmuls
add
stos
std
adc
xchg
lahf
pop
jmp
mov
outsb
out
cmp
xchg
dec
fsubrp
repnz
mov
dec
mov
in
repz
inc
rorl
imul
je
fistl
notl
pop
pop
pop
push
fsubp
or
lods
test
loop
jg
sbb
rcrb
scas
sbb
stos
fnstsw
dec
jae
mov
xchg
into
andb
rcll
add
aad
test
and
int
cwtl
movsl
adc
rcl
movsl
and
shlb
pop
mov
movsl
xchg
mov
sti
sub
lods
adcb
adcb
mov
push
pop
aad
inc
and
push
out
pusha
cs
mov
add
outsl
sbb
xor
add
mov
xchg
push
inc
cmp
or
ss
fisubs
jo,pt
pop
or
mov
pop
sahf
inc
mov
and
enter
ja
fstps
mov
repnz
lea
add
in
xor
mov
jo
push
dec
int
cmp
lret
mov
xlat
sub
out
cs
xchg
sub
fiaddl
cld
pop
cltd
jne
stos
repz
js
inc
lock
arpl
mov
fmull
cld
sahf
inc
dec
push
xchg
or
rcr
pushf
and
loop
inc
pop
repz
jbe
sbb
adc
jo
or
push
fst
cmp
pushf
faddl
dec
arpl
inc
imul
out
out
jmp
mov
stos
pop
int3
fwait
adc
xorb
add
sbb
xor
pusha
js
jne
push
or
pop
dec
lret
stos
jecxz
and
jg
mov
adc
js
lret
mov
ljmp
mov
push
cld
inc
push
add
push
icebp
lret
adc
dec
mov
insb
add
decl
sbb
not
inc
pop
fidivrs
insl
pop
fidivrl
cli
aaa
mov
cmp
roll
dec
push
stos
cmpl
outsb
imul
rolb
lret
mov
sar
mov
mov
mov
cmc
fimuls
loope
in
add
cmp
mov
mov
mov
fdivrl
lods
sub
and
stos
mov
xchg
ljmp
lret
inc
andb
adc
out
fstl
loop
xor
stc
xchg
ret
pop
mov
loop
leave
jmp
insb
cli
loopne
pop
mov
push
cld
data16
xchg
lods
cmc
sbb
fiaddl
jg
xlat
fnstcw
push
xchg
push
loopne
insl
fcomps
mov
hlt
pop
and
clc
into
adc
xchg
into
mov
or
or
add
dec
lret
or
fimull
sahf
xchg
push
test
dec
push
add
rorb
leave
js
pop
sub
jae
push
jg
mov
pop
fiadds
pop
stos
sbb
jns
sarb
lret
adcl
incl
cmp
repnz
fdivrs
popf
sub
mov
jb
fidivrl
mov
js
cmp
jp
repz
pop
jl
xorb
jae
andb
jmp
pop
sub
fistpll
or
xchg
mov
or
scas
xor
cli
adc
andb
nop
jb
je
lods
mov
ds
sbb
in
cli
jnp
outsl
aam
mov
mov
mov
xchg
xlat
mov
andl
adc
jnp
sbb
test
dec
cmpsb
add
mov
shl
int3
and
xor
aaa
stos
in
jbe
ret
push
in
aaa
push
add
aam
push
inc
aam
jnp
jae
lods
lods
test
adc
rcl
mov
lret
ss
pop
push
rorb
lods
ds
cli
mov
aad
adc
mov
jmp
push
pusha
xchg
sbbb
hlt
out
loopne
clc
pop
push
add
dec
cli
sbb
inc
in
sub
mov
nop
inc
and
insl
cmpsb
test
mov
adc
pop
ficoms
push
mov
mov
sbbb
mov
adc
add
prefetch
or
ret
jnp
inc
cmp
dec
dec
and
mov
rolb
in
subb
fcoms
and
pop
daa
bound
fsts
fidivl
push
cld
outsb
xchg
fmull
fmul
push
cmp
xchg
cmc
xchg
ret
cmp
sar
cmpsb
xor
and
inc
mov
hlt
mov
add
data16
cld
mov
sbb
fdivrs
popf
outsb
hlt
sbb
inc
adc
out
fwait
sub
mov
xchg
test
jg
in
inc
lcall
loop
mov
or
add
or
movsb
or
ret
cmp
mov
and
mov
pop
jl
and
push
cmp
int3
xor
mov
pusha
aam
frstor
mov
ljmp
das
xchg
lods
aad
mov
in
fmul
incl
cmp
mov
faddl
stos
dec
dec
std
and
pop
in
mov
fcompl
divb
es
cmp
popa
pop
adc
popl
imul
push
scas
out
mov
aad
fildll
dec
push
pop
cltd
rolb
cli
push
test
scas
pop
inc
mov
pop
leave
dec
jmp
jb
sti
test
mov
cmpsb
mov
loop
pushf
push
adc
std
imul
insl
arpl
rorb
popf
xor
ret
ret
iret
nop
push
add
insl
and
xchg
pop
scas
mov
out
ss
out
inc
dec
jne
push
fdivs
jne
mov
insl
push
inc
lea
mov
xchg
xchg
shlb
call
pop
adc
cwtl
adc
mov
std
xor
mov
xchg
ljmp
pusha
addl
addr16
mov
fstps
add
sahf
adc
xchg
dec
mov
data16
inc
ja
ss
fistps
push
es
outsl
pop
clc
data16
repnz
sbb
adc
mov
stos
mov
mov
test
sub
jmp
rcrl
movsl
xchg
and
mov
inc
ds
dec
jns
jne
outsb
cmpsb
pop
adc
aam
jno
ja
mov
scas
push
ds
xlat
dec
jge
fcompl
mov
popl
lea
mov
idiv
std
into
cli
mov
cmp
push
cmp
test
loopne
dec
loope
sub
jl
dec
imul
sub
std
cmc
in
js
xlat
addr16
fwait
pop
sarb
dec
popl
jno
adc
faddl
mov
push
in
or
cmp
mov
fistpll
dec
out
cs
mov
push
or
and
lcall
jl
bound
mov
mov
fisubrs
dec
push
shrl
mov
lea
jp
jle
jp
popf
cmpsl
divb
fidivl
jns
loope
fidivs
pop
shlb
mov
out
aam
jae
aad
mov
xchg
enter
push
adc
sahf
xor
fldenv
dec
mov
fs
mov
cmc
cmp
or
shr
shrb
lret
rorl
out
jmp
jg
in
pop
lods
leave
repz
cmpsb
sti
push
xchg
sti
push
sbb
fimull
cmp
xor
inc
mov
sub
jle
push
pop
lret
iret
push
sbb
inc
push
cmp
mov
sub
pop
dec
jmp
fstl
and
cmpl
popf
push
jp
add
jle
sub
out
popa
popa
jmp
mov
repnz
lret
shll
dec
outsl
imul
mov
mov
adc
lock
or
xor
mov
aad
xchg
lret
cmp
sbb
adc
repnz
and
mov
add
sub
push
cmpsb
or
cmpsl
aaa
test
cmp
movsl
rolb
sbb
mov
sbbb
cmp
fdivrl
sbb
inc
bound
mov
jbe
subb
js
lcall
mov
mov
lret
add
sub
stos
xchg
sti
or
cmpsl
cmp
test
adc
xchg
lcall
lcall
add
fstpt
sbb
fiaddl
add
call
push
sub
cld
push
outsb
loop
push
xor
add
cmp
mov
and
xor
and
sahf
jae
push
jmp
push
add
mov
and
jg
push
dec
inc
cmpb
adc
mov
leave
out
or
sbb
jo
push
icebp
ja
mov
mov
mov
push
xchg
and
clc
and
mov
filds
popf
inc
add
xchg
rclb
and
cmpsl
inc
xchg
insl
and
rcrb
add
lcall
cli
dec
jo
adc
xor
fdivl
cmpl
iret
pop
and
jecxz
fstpt
dec
out
sbb
ss
nop
lea
loope
sub
push
cmp
jnp
pop
testl
or
sti
fistl
mov
js
dec
lret
lahf
repnz
loop
mov
add
cmp
mov
sahf
fisubs
cld
fs
cmc
repnz
ljmp
cmp
xor
add
or
test
lcall
mov
in
cli
mov
push
ret
lods
lahf
mov
gs
pop
ror
xchg
out
inc
fxch
decl
mov
cmp
scas
xchg
push
inc
repz
inc
leave
add
push
mov
hlt
push
jmp
add
orb
add
ficoml
test
fsubrp
popf
js
mov
jle
lea
mov
test
mov
ljmp
arpl
or
fidivrs
cmp
ret
push
nop
dec
lcall
adc
mov
movsb
mov
mov
xlat
adc
push
sbb
sbb
sahf
imul
movsb
fsin
mov
lcall
jl
push
push
sbb
mov
fcmovbe
sarb
add
sahf
jg
sti
lret
xor
jno
push
icebp
mov
in
push
hlt
sbb
rorl
mov
test
psubd
xor
outsb
ficompl
movsl
addl
rcrb
dec
cmc
mov
or
rorl
xchg
loop
sub
adc
jg
push
jns
xlat
push
adc
aas
std
sub
pop
add
dec
mov
imul
maskmovq
divl
aas
nop
in
scas
xor
call
pop
mov
repnz
lret
xchg
outsb
inc
std
cmp
in
cwtl
push
and
and
leave
sub
lock
cmp
xchg
and
lret
jmp
mov
mov
xchg
xchg
push
push
dec
inc
xchg
cmpb
aam
aam
loope
aam
ss
mov
pop
lds
adc
jb
std
or
je
aam
jp
aam
dec
loopne
stos
fwait
cli
sahf
test
jno
mov
dec
pop
sub
ds
push
nop
cmp
leave
fsubl
pop
ret
dec
sbb
mov
mov
mov
incb
push
add
imul
jb
into
adcl
adc
xchg
mov
mov
sti
push
aad
incb
out
xor
out
xchg
popf
inc
fstps
rcll
sbb
adc
xchg
cmp
sbb
xor
fimuls
mov
rorl
fcomps
add
pop
pop
rclb
sarb
xchg
into
dec
fisubrs
test
inc
inc
inc
adc
sub
jecxz
pop
data16
dec
decl
outsb
mov
notb
xor
add
fiadds
lahf
xchg
dec
add
paddw
sub
shlb
cmp
gs
fdivp
pusha
mov
test
mov
xor
jae
push
jg
pop
dec
or
and
add
stc
jle
sar
inc
cmp
inc
jae
nop
dec
mov
idivb
cmc
xchg
fs
repnz
cmp
enter
shr
aad
data16
xor
and
jmp
xchg
jle
inc
fiaddl
mulb
sub
rorl
mov
fists
cmc
xchg
jbe
pop
inc
idivb
dec
fmull
add
sbb
pop
stos
mov
mov
add
outsb
mov
js
or
rcrl
mov
cld
jns
cmp
inc
inc
xor
pop
jb
push
ret
sbb
mov
addb
les
ds
push
or
movsl
das
rcl
popa
mov
xchg
xlat
ficoml
fdivl
fists
adc
stc
andb
mov
cmp
jae
cmpsb
and
dec
icebp
cmp
loopne
insl
mov
xor
mov
test
out
lea
mov
arpl
sub
clc
sub
and
or
cmp
pop
je
cmp
mov
sub
pcmpgtw
jl
pop
arpl
push
or
jb
adc
repz
ljmp
cmc
mov
aad
mov
add
push
outsb
adc
addb
xlat
loopne
push
mov
push
dec
addr16
into
fidivrs
mov
or
aam
call
ss
sub
inc
add
xor
lcall
fiadds
shll
enter
jle
adc
push
ficompl
enter
mov
outsb
pop
xchg
in
mov
int
scas
je
add
loop
rcl
scas
pop
test
dec
cmp
mov
repnz
fisubl
sub
mov
fmuls
lret
cmp
add
es
out
js
aas
scas
add
push
push
sub
ret
adc
cld
xor
jo
fbld
mov
adc
dec
icebp
insb
aam
inc
jmp
insl
loope
test
mov
stc
into
inc
mov
push
inc
dec
mov
call
pop
push
xchg
jge
sbb
jle
in
rcrl
mov
sbb
dec
jo
rcl
fs
mov
xchg
or
out
pop
xchg
aam
pop
sbb
push
insl
sub
scas
pop
pushf
cld
push
mov
xchg
dec
fnsave
js
mov
psrld
mov
mov
mov
pop
jl
add
ljmp
ret
leave
fmull
stos
icebp
movsl
pop
lods
lret
push
and
arpl
mov
add
ficoml
call
inc
mov
fcompl
loope
popa
and
pop
movsl
dec
rolb
scas
mov
enter
loopne
or
push
push
scas
mov
jnp
adc
cmp
aam
and
movsbl
into
mov
cli
mov
lret
loop
test
pop
and
lea
ficompl
test
fs
lock
adc
aam
or
jecxz
mov
sub
sbb
mov
pusha
and
aaa
xlat
sarb
xchg
sti
xchg
xor
dec
dec
mov
xlat
mov
mov
je
jnp
mov
dec
arpl
push
incl
adc
or
xor
add
fdivrs
add
andl
inc
inc
outsb
sub
pop
dec
fwait
fwait
imul
sbb
jb
jecxz
test
xlat
pop
mov
xchg
into
cmp
push
test
scas
dec
xor
inc
fstps
les
and
and
lahf
sbb
cmp
loop
lods
into
testb
mov
lret
ret
or
dec
in
mov
inc
clc
cmp
jo
mov
cmp
push
iret
push
cmp
add
sarb
lea
push
and
inc
jge
jo
hlt
jp
clc
pop
jns
cmp
scas
data16
add
cmpsb
adc
int
mov
enter
adc
xor
out
push
rolb
jbe
push
aam
test
or
rclb
std
cmp
popa
ss
out
and
xchg
fiadds
fadd
pop
pop
adc
cmp
int
cmp
sbb
adc
sub
fstp
lcall
adc
jno
jno
inc
inc
adc
not
icebp
jb
out
scas
shlb
mov
adc
scas
adc
out
rcrb
add
jb
inc
rolb
in
jge
int
jp
sbb
xchg
aas
fisubl
sbb
inc
sbb
mov
cltd
nop
rolb
fisttpl
sub
int
inc
and
sbb
aaa
pop
lret
hlt
mov
dec
pusha
ja
push
push
inc
movsl
and
mov
sub
and
mov
adc
int
flds
xchg
loop
insb
xor
lret
sub
pop
loopne
xchg
push
jg
stc
and
pop
aad
sub
popa
aad
mov
push
sub
loope
adc
incl
imul
ja
mov
dec
shl
or
addb
ret
aam
mov
fidivrs
sub
test
cld
aam
outsl
push
mov
aas
rclb
leave
xor
aas
daa
add
xchg
stc
lret
loop
and
sbb
shrl
xor
aad
lea
sar
or
push
inc
xorb
adc
xor
test
jecxz
repz
xchg
mov
fstl
dec
sub
mov
dec
into
inc
mov
or
fldt
cli
aas
shlb
fistpl
and
push
jno
out
cld
add
xchg
fbstp
push
mov
rcrb
cmp
adc
clc
shlb
ret
popa
imul
mov
jnp
sbb
scas
addl
div
sahf
pop
or
xor
inc
je
setl
loop
scas
xor
mov
popa
push
stc
in
and
push
sbb
push
in
nop
xchg
pop
aad
insl
fadd
into
je
mov
cmp
add
jp
rolb
mov
inc
mov
add
les
into
stos
ljmp
arpl
push
ja
shlb
cld
cmp
ret
out
out
fistpll
jle
sub
mov
mov
pop
loopne
aaa
jb
sti
out
inc
in
ds
add
rorl
fisubl
mov
jl
adc
cmp
or
mov
mov
out
mov
sti
jns
inc
and
mov
aam
push
loope
fadds
mov
mov
imul
sub
enter
fmull
jge
in
aaa
mov
adc
xchg
adc
fidivrl
sub
dec
pop
jae
cmp
pop
cltd
fdivp
push
outsb
xor
pop
fistpl
std
enter
cmp
filds
test
push
repnz
xchg
ret
int
shr
lret
jl
and
out
jno
jae
out
insb
cmp
inc
out
mov
jmp
mov
hlt
push
mov
jg
or
rcll
ljmp
or
push
and
add
xor
add
cmp
jae
add
jmp
add
sub
mov
jo,pt
cld
cmpl
add
js
jl
dec
mov
lock
stos
mov
std
add
push
cmpsl
mov
cmp
in
lock
fstp
inc
jnp
lods
jge
mov
outsb
icebp
xor
cmpb
mov
vpmacswd
push
pushf
mov
sbb
jg
pop
fnstcw
scas
mov
adc
add
popa
insl
into
cmc
pop
loope,pn
decl
inc
pushw
sti
push
jo
or
push
rol
nop
jmp
imul
orl
sbb
adcb
fidivrs
push
xchg
repnz
arpl
nop
cli
lods
adc
push
inc
cmp
jp
pop
dec
icebp
out
sub
inc
rcr
fisttps
fidivs
sar
fistl
inc
rolb
push
das
loopne
push
enter
jl
xor
rcl
fidivrs
pop
ds
mov
sub
xchg
popa
std
rolb
sbb
adc
popa
sub
ret
pop
dec
es
fdivs
cld
xchg
push
sbb
mov
sahf
mov
adc
add
dec
movsl
xor
ficomps
int
add
cmp
sub
ret
fsubrp
lret
xchg
imul
and
add
mov
sub
or
jne
int
mov
loop
movsb
aaa
mov
mov
std
shll
stos
mov
pop
imul
push
in
mov
addl
jp
mov
cmp
push
sub
nop
sti
scas
subb
mov
jnp
mov
int3
pushf
sub
push
cmp
lcall
js
dec
cltd
clc
inc
cmc
push
std
push
ret
inc
cmpsb
sub
in
dec
sarl
jmp
or
mov
sbb
in
and
jl
sub
fdivrs
inc
test
out
mov
xor
sbb
cmpsb
sub
mov
in
aas
mov
out
xchg
cld
call
xchg
add
mov
cmc
adc
pushf
pop
out
pop
sahf
fxch
lret
mov
outsl
lret
push
aad
mov
fnstcw
repnz
dec
cmp
fs
lods
and
push
iret
movb
and
and
mov
in
jle
and
push
setp
jo
sbb
mov
or
ret
xlat
jae
sbb
jg
stc
leave
adc
jmp
ja
cmp
adc
push
shlb
pushf
loop,pn
mov
inc
xchg
repz
dec
stos
cltd
shrb
das
sbbl
orl
jb
enter
inc
pop
neg
stc
adc
imul
adc
add
rcrb
stos
xor
stc
inc
jne
xchg
inc
iret
icebp
les
fistpll
outsl
and
fistps
cmp
mov
cmp
cmpsl
stos
test
xchg
pop
scas
in
sbb
inc
shl
cmp
pushf
xor
dec
stos
pushf
mov
scas
test
rorl
sti
xor
movsb
lcall
inc
push
jg
bound
add
ds
outsb
aam
pop
flds
popf
jp
daa
dec
or
sbb
sub
mov
jle
test
das
cmp
aam
xchg
outsl
int3
jbe
inc
cmp
push
dec
testb
lds
pop
jl
mov
clc
ret
push
loop
and
sbb
mov
loopne
loop
pop
or
fs
jle
enter
fmull
sbb
test
shr
mov
pop
push
mov
icebp
hlt
fldt
push
sbb
imul
mov
xchg
fsubs
push
inc
stos
inc
loop
xor
outsl
inc
sub
aad
jl
xchg
pop
aad
dec
call
xchg
decl
add
mov
push
loope
decl
ss
cltd
hlt
xchg
push
enterw
ret
test
cmp
adc
mov
lods
nop
cmp
fcomp
sbb
mov
fidivs
outsl
shll
shl
shll
clc
aas
cwtl
add
les
call
mov
cmp
into
and
cli
es
cmp
sub
scas
test
cmp
xchg
add
leave
mov
or
sbb
test
clc
cli
into
adc
hlt
popf
xchg
mov
rcrb
test
push
jb
sub
dec
pop
or
cmpsl
sub
xchg
lods
and
into
divl
or
imulb
xchg
push
pop
jb
cmp
das
and
punpckhbw
mov
xlat
jge
jl
xor
or
cmp
inc
jp
add
xchg
shlb
xor
fbstp
xlat
cmp
inc
dec
movsb
xor
mov
mov
and
jns
pop
aam
push
pop
and
lret
ljmp
repz
mov
mov
dec
jmp
nop
test
mov
push
ss
pop
fcomi
aam
aad
mov
or
fwait
and
lret
and
out
out
sbb
push
pop
push
cmp
xchg
or
inc
xor
test
mov
inc
daa
loopne
rol
or
mov
dec
dec
mov
cli
dec
pop
stc
adc
inc
popf
mov
inc
mov
ret
mov
bound
mov
pop
dec
sub
cmc
sbb
mov
mov
arpl
xchg
cmp
and
dec
out
rcrb
mov
xchg
or
aaa
fs
sti
lea
and
push
cmp
push
pop
jge
in
out
out
xor
pop
jns
push
cmc
shl
push
int3
js
cmp
ljmp
add
enter
mov
mov
je
movsl
dec
pushf
ret
insl
mov
mov
les
pop
fs
cli
jg
fidivrl
addr16
and
dec
lea
stos
in
mov
loopne
cli
div
mov
cli
cmp
push
mov
push
std
out
call
or
cli
sbb
jl
repnz
fimull
sub
pusha
lods
loop
jns
stos
pop
je
jl
xchg
add
je
idiv
inc
mov
nop
add
cmp
or
push
cmp
mov
xchg
mov
cltd
xchg
push
cmp
lock
mov
jl
fadds
gs
add
sbb
xor
lahf
aad
or
movsl
mov
sub
inc
pop
daa
sbb
std
das
gs
pop
and
and
push
arpl
inc
mov
popf
push
xor
and
add
mov
test
popf
es
pop
negb
sbb
inc
jns
loopne
fld
orb
inc
rep
pop
jp
aad
add
xchg
imul
test
mov
mov
sbb
sub
push
sbb
push
xor
push
dec
test
inc
cmp
das
insb
jnp
push
jp
fs
clc
aad
ffree
mov
sub
out
in
aad
jne
dec
sti
hlt
hlt
mov
cmp
jle
adc
testl
lret
mov
mov
rcr
stc
pop
jecxz
movsb
sub
fcompl
aam
call
add
es
sbbb
add
cs
lcall
or
pop
rcrl
adc
add
push
cmp
adc
cmp
inc
ljmp
mov
mov
add
mov
sbb
fstl
jbe
pop
fldcw
cmp
ret
cmp
std
cmp
aaa
testl
dec
leave
in
jl
and
sti
in
sub
dec
adc
cmp
stc
or
mov
ljmp
mov
xchg
xlat
cmp
sbb
add
stos
std
sbbb
adcb
inc
pop
add
ret
dec
push
pop
in
mov
push
stos
push
ja
add
and
ret
and
add
adc
mov
dec
icebp
mov
icebp
neg
push
cltd
sbb
xor
sub
xor
into
push
js
push
mov
cmp
lds
adcb
mov
xchg
cmp
xlat
imul
jg
xchg
inc
xchg
mov
sbb
fidivrl
fstps
stc
xchg
push
mov
std
mov
inc
xlat
arpl
addl
sub
stc
pop
jmp
iret
add
addr16
ljmp
inc
sarb
pop
cli
popa
xchg
jle
out
add
adc
inc
fstpt
add
xor
push
mov
pop
mov
and
cmp
mov
js
pop
or
nop
iret
jns
xchg
adc
movl
repnz
xor
insl
int3
lahf
testb
into
insb
mov
xchg
enter
fcmovnb
adc
pushf
add
or
shr
mov
movzwl
mov
and
idivb
bts
adc
imul
mov
lret
inc
push
mov
jnp
jnp
cwtl
xchg
mov
in
addr16
and
xchg
movsb
out
xchg
neg
push
stos
sbb
or
in
mov
and
jbe
data16
idivl
cmp
in
lods
xchg
jne
pop
adc
lcall
xchg
fadd
ljmp
stos
loopne
fsubp
sub
xchg
stos
lods
mov
sub
push
pop
lds
xor
js
inc
repz
lds
aas
leave
fs
cmc
adc
movsb
cmp
inc
sbb
iret
loopne
lods
mov
dec
pop
add
sub
out
mov
adc
mov
xor
incl
stos
adc
fldcw
add
inc
pop
lods
cli
and
or
and
jno
adc
clc
lahf
sbb
rclb
out
cmp
jecxz
inc
das
and
imul
and
repnz
mov
pop
es
dec
popa
push
rorb
sub
out
ds
repz
call
inc
outsb
pusha
fcoms
xchg
cpuid
sbb
pop
cmp
sub
mov
push
cmp
jge
xor
jl
sub
mov
pusha
mov
mov
add
xor
add
push
mov
xchg
inc
and
daa
adc
je
jae
mov
xlat
call
jecxz
pop
and
mov
fadd
jnp
and
cmpsl
jb
jb
in
je
add
adc
inc
cmp
ret
movsb
mov
mov
lods
shlb
push
ljmp
dec
rcl
mov
cli
jmp
ret
shrl
adc
in
ljmp
mov
xor
test
ret
jge
push
and
cmp
movsl
arpl
imul
mov
cmp
sbb
insb
push
lcall
inc
pop
mov
int
faddl
loopne
fldl
lahf
shrl
fidivrl
xchg
adc
xchg
dec
pop
cli
into
push
pop
in
lds
sub
test
sahf
push
stos
sbb
aad
dec
orl
fimuls
jmp
sbb
xchg
mov
cmp
mov
cmp
mov
jmp
mov
loopne
shll
sub
movsl
outsb
and
push
jge
sbb
int
adc
push
pusha
add
push
out
leave
cmc
mov
xchg
lret
fcoml
test
mov
cmp
jne
push
lret
inc
xchg
ret
setns
push
push
push
fcoml
adc
push
incb
sbb
push
inc
outsl
jbe
fcoml
jno
es
sub
cmp
dec
jnp
aaa
sahf
cmpsb
lret
add
jo
cli
push
push
mov
xor
adc
cmc
dec
data16
js
int3
push
adc
xlat
inc
fimuls
jmp
cmp
xchg
faddl
outsb
and
jne
fstpt
pop
xor
mov
fwait
push
sbbb
jle
clc
rolb
rcl
inc
mov
ss
daa
jnp
adc
neg
mov
stc
jmp
lds
or
scas
sub
repnz
mov
loop
sub
cmp
mov
jns
ret
xlat
inc
loope
jns
dec
or
pop
shrl
mov
and
or
lahf
jno
mov
sbb
je
pusha
cmc
push
das
subb
jno
push
jb
pushf
add
mov
push
xchg
xchg
dec
and
jnp
sbb
xchg
cltd
xchg
fistps
xlat
xchg
arpl
cld
psubsb
inc
pop
sub
test
pop
add
into
xor
mov
cld
pop
push
mov
ret
mov
call
push
inc
jae
mov
in
xor
lret
sub
iret
iret
mov
dec
xchg
jo
xchg
and
mov
push
mov
sqrtps
push
adc
repz
js
ds
loope
jl
cmp
aam
pop
push
mov
fstl
push
sbb
scas
jp
pop
xor
pop
mov
lock
lods
jne
jge
pop
orl
std
adc
mov
nop
js
fnstsw
mov
in
lea
sbb
add
shlb
add
cs
jb
jg
push
cmp
sti
pop
push
pop
mov
outsb
jge
loope
lea
cmpl
mov
jl
jge
loopne
ss
or
jg
xchg
addr16
pop
mov
add
inc
xchg
adc
jg
mov
cwtl
dec
inc
or
mov
cmp
and
or
ficomps
sbbb
sti
popf
lahf
xlat
push
sub
bound
push
sub
fidivrs
add
xchg
xchg
mov
lret
or
cmp
cmp
and
pop
in
xchg
in
mov
das
mov
repz
out
cld
cmp
hlt
das
adc
je
sbb
sbb
dec
mov
test
jecxz
inc
sbb
fnstsw
aad
pop
mov
mov
aaa
outsb
in
push
insl
testl
adc
sub
adc
int3
xor
int3
lahf
and
fcompl
loop
sub
xor
loop
cmp
mov
test
push
and
repnz
pop
mov
sbb
inc
in
int
movsl
aaa
cltd
dec
xchg
inc
sar
mov
pop
movsb
in
pop
out
xor
call
mov
test
pushf
mov
cmp
fstl
jmp
pop
push
mov
mov
popf
push
sub
adc
popa
jnp
mov
out
int3
js
iret
lcall
inc
mov
push
scas
or
push
add
push
frstor
dec
jg
fsts
or
xchg
mov
jns
out
outsb
xchg
mov
sbb
cmp
aad
cmp
outsb
inc
fbstp
sub
lock
xor
inc
adc
std
popa
push
lcall
mov
cmp
mov
shrl
test
cmp
adc
jge
inc
mov
jge
xor
fcompl
cmp
jl
sub
push
lret
push
pop
fimull
xchg
adc
js
xchg
dec
push
imul
push
leave
add
pop
cltd
adc
mov
mov
dec
push
rcrl
dec
fistpl
push
jg
mov
sub
pushf
push
sti
inc
and
shr
push
sahf
xor
addl
dec
cmp
push
mov
fiaddl
sbbl
lahf
cmp
sub
dec
rcrb
or
mov
xchg
add
sub
push
stc
add
jbe
lods
and
push
out
pop
lret
cwtl
pushf
add
inc
in
lahf
xor
mov
cltd
xchg
add
jp
pop
out
cld
sahf
mov
jmp
add
sahf
into
inc
das
xorb
fistps
test
pop
das
mov
xor
mov
es
int
into
lret
mov
aam
or
mov
pop
out
into
pop
and
inc
out
into
xchg
mov
sub
bound
iret
adc
dec
fbstp
ja
adc
sti
jmp
pop
jns
mov
arpl
lods
das
addb
pusha
mov
test
and
push
inc
push
cmp
sbb
mov
andl
mov
stos
jo
xchg
sub
arpl
and
mov
xlat
int3
mov
stos
cs
testl
add
push
out
add
fwait
aas
pop
or
pop
push
dec
shll
xorb
jle
out
aas
xor
aaa
daa
popa
pop
in
push
mov
inc
and
out
out
aam
inc
adc
cmp
in
orl
xor
cvtpi2ps
shrl
adc
xor
seta
das
xor
inc
push
jg
loop
inc
jl
gs
dec
std
mov
adc
aaa
or
dec
mov
sbb
inc
dec
stos
clc
aad
xor
adc
loop
test
fisubrs
in
mov
sbb
push
dec
das
mov
aas
add
out
outsb
cmp
push
add
add
mov
sti
ud0
out
repz
cltd
inc
mov
ss
shr
cmp
out
inc
clc
xchg
jbe
in
xchg
dec
or
shll
xor
rclb
sub
pop
sahf
sarb
cmp
inc
addr16
jae
popa
mov
aad
inc
rorb
xchg
sub
jo
in
pusha
dec
fs
mov
sub
leave
sub
bound
sti
add
enter
dec
lock
dec
std
dec
sub
cli
pop
xor
push
xor
loop
add
std
out
dec
cmp
sahf
adc
out
ret
add
mov
cmp
xchg
gs
outsl
stc
cmp
pop
ljmp
sub
mov
rcl
adc
int3
mov
cmc
ror
iret
lret
popa
test
dec
loopne
jle
arpl
lds
sub
pusha
cmp
outsl
mov
sbb
das
cmp
in
mov
cmp
xor
in
xchg
movsl
and
sbb
or
sub
jae
sti
mov
fstl
loope
ds
adc
loopne
mov
test
or
subl
add
fstps
push
pop
insl
pushf
gs
fidivrl
or
mov
add
lret
ret
fcmovnbe
inc
nop
lret
dec
lods
ss
adc
mov
xchg
outsl
pop
das
or
sbb
mov
leave
push
inc
add
cmc
imul
xor
mov
xchg
ds
test
mov
push
lods
jle
mov
mov
addl
mov
add
xlat
fsubs
fsubl
mov
pop
mov
pop
or
push
lcall
shll
push
sbb
inc
mov
movsb
lahf
push
mov
mov
mov
adc
dec
lahf
add
nop
popa
add
pop
cmc
xchg
int
add
rolb
dec
ret
cmpsb
fidivrl
popw
imul
sub
iret
pop
out
cmpsb
xchg
xchg
jle
arpl
sbbl
shll
mov
pop
mov
rclb
rclb
cmp
mov
adc
jle
ret
adc
push
pushf
in
psubusb
int3
ljmp
jnp
in
push
cld
movsl
push
lods
dec
xor
ja
shll
out
fcoml
xchg
fst
rorl
pop
imull
dec
adc
mov
xchg
push
jb
pop
inc
cmpsb
js
mov
scas
sbb
into
jp
mov
or
xor
divl
in
out
dec
not
fcmovb
jae
mov
xchg
mov
pusha
mov
xchg
in
and
xchg
out
nop
jp
sti
inc
nop
push
pop
flds
into
cmc
adc
sub
pop
mov
sbb
jne
iret
lcall
js
push
cli
addr16
ficomps
push
stc
and
and
sub
jbe
jne
sarb
or
cmp
fldl
std
addr16
mov
add
inc
andb
jns
inc
rorl
loop
inc
jge
stos
ret
test
cmp
lcall
or
aaa
stc
mov
shrl
inc
dec
jmp
lret
mov
idiv
jbe
xor
mov
fdivr
loopne
test
add
or
ds
sbb
ret
jne
or
bound
sub
or
pop
fwait
xor
rol
pusha
xorb
push
insl
leave
jno
inc
add
pop
xor
repnz
stos
cmpsl
ficomps
cwtl
cmpsb
add
stc
push
fstpt
pop
dec
push
sti
dec
sub
pop
inc
xchg
add
je
mov
shll
loop
inc
call
adc
test
dec
add
data16
in
dec
dec
fwait
push
dec
push
lahf
into
sti
fists
mov
inc
inc
dec
sbb
push
or
loopne
mov
mov
ds
lcall
ljmp
scas
mov
sbb
jb
adc
movsl
push
fwait
aad
sbb
or
jg
sahf
mov
rclb
jp,pt
bound
insl
in
jae
push
loope
xchg
das
dec
cmpsl
loopne
sbb
mov
ror
xchg
adcb
pusha
and
rclb
mov
xchg
bound
sbb
xchg
sbb
jnp
scas
test
push
pop
fldl
jmp
mov
inc
sub
pop
imul
lret
pop
dec
mov
xchg
cmp
rol
fiaddl
sub
push
loope
jge
rorl
jmp
negb
popa
fists
or
sbb
pop
mov
int
lret
lret
xchg
cltd
mov
sbb
addl
inc
mov
lret
mov
adc
les
ficoml
nop
push
push
jl
mov
rorb
pop
outsb
roll
ss
mov
inc
into
mov
xchg
dec
and
ror
fidivs
cli
jp
xchg
pop
push
xchg
rcrb
jg
fdivs
aad
loopne
mov
add
add
mov
fcmovne
mov
gs
sarb
jg
adc
lahf
rorl
xor
inc
fnstsw
outsl
into
inc
call
push
fwait
sti
jp
dec
pop
into
lret
add
sahf
or
mov
loop
xchg
cli
cmp
push
popa
dec
ds
xchg
inc
insl
add
loopne
mov
or
ds
jg
cmc
sarl
pop
inc
jns
mov
push
bound
push
add
enter
and
cmpb
iret
std
sti
js
cmp
icebp
fadds
fimuls
cmp
adc
mov
aas
xor
mov
mov
cli
mov
add
add
jae
fsubrl
push
cmp
cmc
dec
jmp
aad
adc
pusha
sahf
xor
adc
call
sti
xchg
sbb
push
into
or
or
push
pop
add
mov
pop
push
insb
sub
lcall
adc
sbb
pop
fdivrp
fdivr
movb
repnz
fiaddl
pop
push
repnz
push
lock
mov
rorl
and
mov
xchg
into
xor
add
dec
addl
mov
jl
xchg
pop
dec
test
jle
push
rcll
xchg
out
fbld
insl
sub
pop
fnstenv
fimull
hlt
cmp
repnz
ret
roll
inc
mov
ficomps
cmp
aaa
movsl
pop
dec
stos
inc
inc
leave
stos
sti
mov
inc
jns
cmc
or
fimull
adc
mov
sub
iret
push
pop
xor
setl
mov
add
ljmp
mov
shr
pop
bnd
std
fldpi
or
ret
add
cmp
js
mov
lods
mov
ds
xchg
mov
stos
push
enter
test
fwait
loopne
shlb
adcb
movsl
and
inc
adc
arpl
push
je
stos
and
jmp
mov
add
nop
jmp
roll
dec
pop
pop
xlat
mov
xchg
mov
and
and
ds
sub
mov
push
sub
imul
out
mov
dec
aad
fists
push
cmc
sbb
repnz
jno
cs
es
popf
xor
xchg
stc
push
repnz
jnp
xchg
xor
mov
sarb
sub
push
xor
gs
add
or
and
xchg
bound
jae
out
jne
cli
xor
inc
mov
aas
inc
add
cld
rolb
sbb
sub
aad
xchg
ror
cmp
lea
test
mov
pop
push
dec
nop
xchg
push
cmp
cmp
loop
aas
fnstenv
mov
in
sti
aad
mov
lods
insb
in
sbb
jp
jp
or
cmpsl
and
cmp
push
jo
cmp
inc
pop
jg
dec
fmull
jg
loopne
divl
nop
and
fnstsw
loop
inc
lea
jnp
pop
mov
xchg
cmp
or
add
pushf
pop
xor
push
push
je
mov
and
out
cmp
das
notl
ds
push
jmp
sbb
push
jge
cmc
cmp
sahf
fnstsw
scas
data16
add
dec
inc
aam
out
jb
imulb
insb
cmp
jle
rolb
mov
arpl
mov
cmp
call
push
dec
cmc
push
inc
mov
call
into
mov
fimull
sbb
mov
add
fstps
add
mov
push
sti
pop
sub
add
pop
jno
inc
rcr
mov
jb
xchg
int3
inc
inc
add
jb
push
or
dec
mov
add
fnstenv
orb
test
dec
add
and
fcoml
mov
mov
xchg
shlb
mov
inc
and
mov
mov
stos
add
daa
cmp
aas
add
xrelease
loop
jmp
push
rorb
jo
ficompl
cmp
jo
mov
mov
rol
cmp
mov
dec
push
sub
dec
shll
in
aad
test
into
pushf
mov
stos
xchg
dec
iret
stos
loop
jmp
xor
call
je
inc
or
fwait
in
mov
sahf
sub
inc
xor
scas
aam
or
insb
sub
aad
push
adc
jmp
jp
rcr
inc
inc
pop
push
outsb
add
cmp
pop
lea
arpl
scas
and
repz
mov
sub
push
pop
fdivs
push
jp
mov
outsb
fdivrs
stos
inc
iret
popa
add
ds
js
xchg
sti
outsb
cmc
lcall
pop
cld
negl
and
jg
sti
divb
mov
cwtl
fdivl
fcompl
lock
fcomi
test
scas
mov
inc
sub
cmp
dec
shlb
jl
adc
testl
call
movsl
in
xor
mov
cltd
fisttpll
pop
lret
sti
lds
inc
int3
pushf
fidivs
pop
jo
sahf
pop
add
or
sub
bound
incl
cmp
jge
das
dec
ljmp
sbb
mov
cmpsl
and
jne
hlt
sbb
shrb
mov
pop
dec
loopne
mov
pop
into
jecxz
mov
adc
fs
jge
adc
nop
cmp
add
cld
dec
sarl
rcl
mov
dec
hlt
jb
or
cmp
loopne
mov
fistpl
aas
push
adc
lret
lods
cld
pop
popa
pop
adc
sub
xor
std
pop
in
lea
ss
xchg
add
test
xchg
sub
sub
mov
cmpl
cmp
stos
int
dec
inc
ret
mov
push
fmul
pop
pop
jmp
sub
cli
aam
sub
mov
mull
pop
dec
sti
pop
cmc
imul
cmp
push
add
mov
xchg
testb
inc
sarb
imul
or
jmp
das
or
lock
call
ficoms
cmp
icebp
in
decl
xlat
dec
pop
mov
lds
adc
mov
shrl
add
xor
in
ljmp
adc
into
pop
icebp
mov
jbe
inc
inc
in
popf
cwtl
mov
pop
sub
into
dec
fsubr
inc
mov
xchg
add
cmp
mov
enter
jb
lock
pushf
testl
sti
mov
sub
enter
sahf
mov
out
cwtl
jnp
jl
add
shll
mov
push
jmp
inc
stc
faddl
int3
push
pushf
mov
subb
inc
or
sub
out
int
in
cmp
scas
mov
adc
inc
out
sub
cli
stc
outsl
inc
in
sub
sbb
out
sbb
lret
push
out
sbb
aam
jle
sbb
cmpsb
mov
mov
cs
inc
imul
jns
out
aas
test
rcrb
xchg
test
fnstcw
fldt
mov
push
imul
inc
mov
lea
xchg
sbbb
and
push
push
adc
sbbb
bswap
fiadds
xchg
jg
movl
jle
mov
push
add
jo,pn
adc
pushf
inc
scas
jg
negb
clc
push
push
mov
xchg
lret
out
subb
adc
mov
push
pop
loopne
ret
das
stos
dec
mov
pop
pop
mov
insl
stos
dec
pushf
mov
cmp
pop
jge
dec
xor
inc
outsl
out
rorb
loopne
notb
in
add
rclb
xchg
cmc
scas
das
fstpt
and
pop
iret
aaa
push
jo
mov
sbb
jecxz
jae
dec
inc
pop
jg
loop
xchg
scas
dec
sti
in
pop
inc
or
fcmovnb
aas
aaa
orl
mulb
jnp
addl
lds
mov
pop
push
xchg
mov
sahf
outsb
in
into
.byte
lods
dec
.byte
.byte
