push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
lea
push
push
call
test
je
mov
add
mov
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
lea
push
call
call
mov
push
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
popl
sbbl
insb
xchg
out
jo
fcomps
aas
loope
xlat
sbb
fnstsw
dec
int3
js
lock
sbb
das
sub
inc
pop
add
js
dec
arpl
test
xchg
push
hlt
adcb
cmp
pop
jne
fadds
xchg
ss
dec
jmp
xchg
cmp
pop
mov
cmp
pop
loop
jns
cmp
lea
ret
in
sti
xchg
out
ret
cmc
mov
pop
jmp
pop
cld
sub
dec
loope
into
jno
xor
loopne
or
add
push
add
ss
dec
mov
inc
pop
adc
add
push
cmpsb
popa
push
mov
mov
and
mov
out
mov
mov
inc
add
jmp
fcompl
nop
imul
and
mov
mov
mov
fwait
mov
sub
pushl
cmp
mov
pop
in
dec
fmull
inc
mov
sub
xor
jne
fistpll
movsb
push
and
out
fadds
xchg
adc
imul
cmp
push
ja
bnd
dec
sub
mov
push
cmpsl
mov
insb
mov
jle
mov
cmpsb
xchg
sub
test
js
xor
push
lods
push
out
movsl
push
cli
inc
cmpsl
adc
push
repz
call
jb
mov
mov
loope
dec
cmp
fimull
ss
jecxz
lock
pop
std
fmull
insl
roll
inc
fld
aam
shlb
stc
int3
dec
inc
mov
clc
mov
popf
adc
mov
loope
and
sbb
jb
ja
fcomp
jge
out
fistpll
icebp
adc
add
lods
ficomps
adcb
mov
xchg
xlat
loop
aam
xor
je
dec
pop
aam
divl
adc
ss
shlb
add
cwtl
orl
jle
dec
add
xchg
inc
jmp
jl
sub
insb
int3
pushf
xchg
je
jbe
popa
pop
mov
adc
mov
hlt
sub
pop
jno
in
fstl
mov
push
insb
sahf
ja
mov
dec
sbb
gs
sbb
dec
sbb
xchg
scas
sbb
stos
leave
add
sahf
imulb
movsl
pushf
mov
xor
lods
inc
push
pop
aad
ss
scas
xchg
cld
fidivrl
jo
jg
dec
push
xchg
cmp
mov
sbb
lret
xor
repnz
sub
out
or
sbb
pop
insl
cmp
push
sub
xchg
jns
nopl
sub
ret
dec
stos
pop
push
imul
dec
stos
xchg
insl
cmp
and
xchg
add
adc
int
inc
dec
dec
fisttps
ret
mov
popa
jmp
mov
arpl
add
std
gs
mov
pop
add
mov
shll
fidivrs
test
loop
icebp
ss
inc
mov
and
sbb
pop
lds
popf
inc
in
into
xor
cmp
mov
mov
add
push
jle
jl
xchg
dec
cmp
gs
push
subl
leave
xor
push
sub
pusha
mov
and
lea
mov
mov
outsb
shlb
popf
jmp
or
or
pushf
rclb
pop
scas
mov
outsl
fmull
inc
lds
xchg
call
fcompp
subb
hlt
mov
mov
fbstp
sbb
jns
push
mov
imull
lret
and
loopne
push
dec
or
call
test
mov
jle
pushf
add
xchg
gs
jns
mov
jno
lret
sbb
outsl
sub
sarl
adc
addr16
icebp
pushf
push
test
xchg
add
sti
push
cmp
outsl
cli
inc
pop
dec
dec
cmp
lock
xor
xchg
test
test
loop
pop
rorl
out
mov
cmp
je
cmp
popf
fsubrl
aam
rorb
push
jo
jno
dec
cmp
call
adc
insl
test
jne
jl
adc
xlat
inc
leave
inc
mov
mov
dec
aas
sub
inc
out
mov
test
jp
xor
mov
xchg
inc
inc
out
pop
push
mov
xchg
stc
mov
mov
push
jne
mov
xchg
in
xor
in
mov
xor
pop
pop
std
stos
jns
mov
mov
aam
jo
das
push
or
mov
hlt
push
mov
outsb
sub
call
push
or
xor
mov
jno
test
mov
iret
imul
mov
cs
xor
lock
cs
nop
mov
jns
jmp
ret
shlb
iret
std
mov
push
push
aaa
adc
xor
test
mov
push
das
imul
andl
in
inc
ss
add
pop
iret
xlat
jge
cltd
xor
daa
cltd
inc
cmpsb
sbb
pop
xchg
fnstcw
dec
nop
repnz
and
mov
scas
divl
mov
addl
ss
ficomps
imull
sbb
icebp
js
or
push
rcrl
add
push
sbb
cmp
sbb
fs
mov
clc
cwtl
xlat
shrb
pop
adc
push
fs
js
xor
scas
fisubrl
jp
add
pop
xchg
int3
mov
stos
test
loop
stos
xor
ds
mov
mov
sub
mov
lods
push
xchg
cmpsb
mov
iret
dec
nop
cmp
mov
xlat
sti
mov
in
test
push
cmpb
xor
cmpsb
cwtl
pop
popa
sbb
in
subl
adc
ret
mul
repnz
mov
movsl
mov
int3
andb
sbb
inc
lahf
cltd
or
xchg
mov
add
popa
aad
fisubs
lret
inc
cmp
lea
pop
push
js
dec
mov
jbe
jecxz
sbb
dec
xor
dec
aaa
mov
fisttps
aam
orl
test
pushf
pop
imul
aam
jmp
jecxz
dec
xor
popf
les
rorb
and
cmp
roll
dec
pop
out
pop
cltd
jmp
movsl
shl
out
inc
in
pop
xor
xchg
mov
add
or
cmp
popf
nop
fiadds
popl
push
cmpsl
je
int3
test
arpl
clc
rclb
out
cmp
and
sub
int3
repnz
adc
jg
adc
dec
xor
or
jae
lea
fwait
and
jnp
movsb
movsl
in
sub
ds
leave
pop
mul
jl
and
cmpsb
push
pop
mov
and
xchg
subl
or
fnstsw
outsb
push
popf
dec
dec
sub
popa
imul
ror
inc
pop
pop
add
fwait
mov
sbb
jge
cmc
loope
pop
push
cwtl
adc
call
sub
or
insl
ds
cli
adc
cli
lods
repnz
push
in
es
cmp
pop
shl
popa
mov
nop
rorl
fwait
jge
push
adc
outsl
fwait
xchg
lahf
cmc
mov
and
sti
mov
or
int
arpl
mov
or
lss
xor
sbb
dec
lret
cvtpi2ps
data16
mov
sub
cmp
rcrb
jae
clc
push
mov
dec
push
push
mov
adc
lods
sbb
lahf
xchg
or
ljmp
addr16
lret
push
repz
repz
gs
sarb
or
out
mov
add
imul
pop
jae
fwait
push
xchg
xchg
out
and
fildl
fistpl
nop
das
or
in
add
sbb
ficoms
imul
mov
push
orl
aad
ret
mov
enter
rorl
or
sbb
loope
std
adc
in
stc
int
imul
jmp
mov
sbb
sbb
adc
aam
in
addb
cli
push
mov
mov
mov
jg
cmp
cmc
mov
pop
sbb
push
iret
cmc
rcl
mov
ret
les
mov
mov
adc
sub
mov
test
aad
iret
cmp
mov
xchg
jg
shlb
mov
mov
cmpb
cltd
adc
movsb
mov
push
inc
add
mov
clc
and
cmp
rorb
ror
mov
pop
dec
ljmp
orl
jp
add
cs
imul
dec
push
or
pushf
outsb
cs
push
fld
not
jno
orl
popa
xor
inc
stos
loop
push
lret
mov
cmpsb
divl
sarl
jno
or
into
hlt
add
scas
sbb
mov
loop
and
sbb
jge
sbb
repz
dec
pop
add
hlt
mov
dec
stc
repz
pop
cs
xor
test
sbb
sub
call
push
popf
cmpsb
xor
pop
lretw
ret
xor
fistpl
push
and
cmpsl
push
xchg
cmpsb
mov
mov
or
jmp
stos
xchg
xchg
fmulp
enter
add
or
in
movsb
int
cmp
movsb
push
pop
loop
lods
adc
mov
jae
mov
mov
mov
fwait
xor
lret
dec
fwait
bnd
jle
int3
jge
sub
mov
pop
dec
loop
mov
jne
or
dec
jns
adc
mov
jnp
dec
jne
xor
les
scas
jnp
movsb
xchg
fcmovbe
add
ja
fwait
push
cmc
mov
mov
xchg
out
or
or
loop
nop
addb
add
jecxz
fnstsw
pusha
inc
mov
lahf
ss
jl
shlb
sub
cmpsl
fdivrl
loop
mov
fisubl
mov
and
int3
aam
sub
in
pop
xchg
fdivr
cmc
mov
bound
in
mov
test
mov
call
or
sahf
fwait
roll
outsb
iret
xchg
xchg
or
push
aam
lret
mov
mov
jmp
jecxz
or
sub
test
dec
js
mov
mov
dec
packuswb
in
sbb
mov
enter
or
es
dec
or
add
out
xchg
push
out
sub
mov
sub
jg
fstl
lock
xchg
mov
insb
and
pop
mov
out
cmp
pop
push
sub
adc
shll
inc
hlt
mov
mov
int
outsl
jnp
and
push
xor
jge
popf
imul
dec
lods
sahf
pop
frstor
add
push
outsb
daa
sbb
fiaddl
and
add
shll
sahf
push
cmp
jmp
ret
sahf
mov
fimuls
incb
pop
ljmp
adc
mov
test
ss
mov
xor
bswap
cmp
fs
imul
lret
std
loope
imul
out
jns
mov
data16
xchg
xchg
ret
lret
in
insl
ret
mov
mov
lods
leave
xlat
mov
clc
fdivrp
movsl
sbb
or
xchg
sub
jns
jp
ss
cmp
or
jns
shrb
push
ja
sbb
mov
pop
jecxz
loop
adc
sbb
pop
sbb
arpl
repnz
dec
cmp
xorb
pop
push
xchg
push
lret
ljmp
jge
nop
sbb
sub
mov
das
add
lods
shlb
jl
xchg
fstpt
xchg
hlt
adc
xchg
xchg
sub
test
leave
push
push
inc
push
mov
sub
stos
jnp
in
pusha
sub
mov
lahf
adc
pop
jae
cwtl
enter
xchg
jle
inc
hlt
lds
dec
jl,pt
push
push
mov
mov
dec
je
les
rcr
inc
out
int
dec
sbb
stos
mov
push
std
lea
mov
sti
cmp
cmp
leave
pop
clc
lahf
imull
cld
les
sbb
push
out
lock
jae
push
aas
jbe
xchg
ret
loop
sub
and
out
rorb
mov
lret
and
decl
or
inc
xor
fs
popa
in
mov
cmp
sbb
xorl
cmp
push
mov
or
mov
mov
scas
cmp
stos
push
dec
pop
in
aaa
fdivs
pop
push
mov
lock
dec
out
loope
sahf
push
lds
mov
shrb
xchg
xchg
and
mov
sahf
es
jp
mov
add
stos
sub
jb
sub
jg
ljmp
jbe
push
fisubrs
dec
xchg
mov
inc
das
iret
and
add
mov
mov
xlat
sahf
lret
cmp
mov
sbb
rcrl
lds
insb
fwait
xchg
mov
test
fwait
dec
jne
cmp
dec
testb
cltd
shlb
cs
bsf
xchg
cli
fs
sbb
js
mov
dec
jbe
xor
data16
adc
xchg
jno
adc
jne
daa
rorl
jmp
inc
cmp
inc
sub
push
pop
add
test
mov
imul
xchg
cld
test
xor
push
and
or
jge
mov
sub
mov
inc
leave
sbb
mov
jnp
sub
insl
jge
loope
fs
or
shlb
xlat
or
jae
xor
into
inc
pop
mov
xlat
mov
gs
stos
pop
orl
fiaddl
popa
hlt
mov
sub
jb
dec
add
lds
in
pop
and
scas
xchg
enter
dec
add
lret
inc
dec
fldcw
cwtl
jbe
sub
xchg
insl
push
stos
cmpsl
in
aam
bound
sbb
add
xchg
and
loopne
jl
mov
lods
imul
mov
xor
pop
andl
adc
sbb
fs
adc
jnp
mov
int3
push
xchg
hlt
insl
mov
ret
push
mov
icebp
bound
test
push
mov
loopne
sub
cmp
push
mov
addr16
jns
fcmovbe
scas
xor
gs
cmpsb
gs
pushf
mov
stc
lret
not
lret
and
add
lret
cmp
or
push
add
inc
dec
popa
es
rcrb
and
jge
sub
movsb
add
cmp
int3
addr16
or
push
jge
xor
xchg
jns
push
cli
cwtl
iret
pop
push
sbb
hlt
rcll
sub
and
sub
dec
adc
xchg
sbb
in
lds
mov
jno
sahf
outsl
dec
mov
lea
movsb
imul
xor
cld
ljmp
aaa
xor
xchg
movsb
inc
push
les
and
dec
inc
pushf
push
jg
sub
xchg
inc
dec
hlt
ss
add
pop
lods
fsubr
bound
adcl
aaa
movsb
cmp
add
std
mov
mov
int3
pop
sbb
mov
insb
movl
clc
test
out
cltd
orl
xchg
cli
insb
imul
ud1
rclb
cld
cmp
je
push
scas
ret
adc
repz
pushf
imul
arpl
popa
mov
mov
loopne
xor
adc
out
stc
inc
dec
mov
scas
and
bound
in
fnsave
ret
cmp
jns
aas
or
push
rcrb
movl
jge
mov
xorb
dec
sbbb
mov
sub
push
cmpsl
dec
sub
xor
ss
sub
jg
cmp
and
or
scas
push
ds
jg
add
roll
incl
std
adc
insb
pop
loope
lret
jmp
add
pop
inc
test
cmp
jle
xor
ljmp
jnp
push
fimuls
data16
inc
or
in
inc
test
xchg
cmp
aam
pop
cmc
imul
or
push
clc
fdivs
nop
sub
mov
mov
dec
call
ret
adc
mov
xchg
andb
int
enter
push
push
adc
stc
std
jmp
pushf
xor
inc
out
bound
sahf
loop
cmp
jmp
mov
in
push
shlb
add
xlat
rcrb
mov
loope
pop
test
sub
inc
test
loope
test
test
cwtl
movsb
inc
loope
sbb
inc
fdivl
int
in
insb
loope
enter
mov
or
jmp
cmpsl
cmp
test
cmpsb
outsb
jns
lahf
stc
lret
sbb
xchg
shrl
lds
fmuls
mov
push
movsl
mov
test
jb
inc
xchg
data16
xchg
pop
pop
rcr
mov
mov
sub
aam
push
mov
enter
enter
orb
lret
sub
sbb
ret
fidivl
fcoms
pop
or
xor
les
outsl
int3
jmp
cmp
in
cli
jo
jge
mov
cmp
pop
ljmp
xor
outsl
outsb
fisubl
and
daa
and
push
mov
loop
mov
inc
sti
pop
sbb
pop
adc
jmp
sub
dec
or
xor
cwtl
out
inc
inc
les
in
movsl
cmp
jmp
mov
ret
xorl
stos
les
idivl
test
jbe
sub
pop
stos
dec
adc
syscall
mov
sub
add
inc
or
icebp
ljmp
or
aas
pop
dec
mov
lahf
mov
and
sub
cld
lret
bound
inc
mov
lods
loop
sub
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
