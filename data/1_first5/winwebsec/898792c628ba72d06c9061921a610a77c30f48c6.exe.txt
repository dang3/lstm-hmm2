push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
push
sbb
mov
iret
enter
insb
pushf
iret
orb
stc
or
xor
mov
lret
daa
jae
outsl
into
fidivl
sbb
dec
jl
xchg
adc
xor
stc
je
adc
aad
sub
pop
add
les
push
mov
insl
jns
push
scas
ja
jl
sub
xchg
in
shll
fwait
add
cmpb
jp
mov
iret
or
stos
jbe
data16
inc
adc
outsb
push
pop
jle
inc
in
xor
pusha
sbb
jns
rolb
mov
jbe
adc
stc
mov
mov
cmp
and
mov
xchg
add
jnp
lock
lods
roll
pop
xchg
icebp
mov
inc
clc
cmp
mov
mov
and
mov
jbe
dec
bound
test
sbb
xor
out
fcomi
adc
testl
js
fdivrl
sbb
cltd
add
pop
sbbb
or
call
in
js
or
cmc
test
xlat
sub
pusha
int3
loop
push
mov
pop
sti
push
dec
outsl
lea
lock
hlt
nop
cmp
sub
dec
lods
mov
test
inc
ret
push
popa
push
pop
xchg
repnz
inc
add
out
in
and
int
and
jecxz
pop
cmp
pushf
push
xchg
and
hlt
xchg
popa
cmpsl
mov
scas
cmpsl
cwtl
inc
mov
jg
jae
mov
in
loope
pop
dec
fldcw
lds
pop
mov
xor
lods
pop
xchg
outsb
fcoml
push
addb
adcl
and
push
test
adc
loopne
pop
out
inc
mov
cmp
stc
mov
adc
or
xor
scas
test
notb
das
push
aaa
fsub
ret
mov
cmp
xor
xchg
not
stos
and
cmp
or
xchg
mov
sti
cmp
fmuls
pusha
pop
cmc
and
mov
or
test
sbb
cmc
ret
pop
mov
xlat
popa
mov
xor
jae
jecxz
js
fsubp
jg,pn
imul
dec
int3
or
test
test
mov
pop
rcrb
cmp
mov
sub
mov
jo
in
xor
mov
mov
xchg
sub
je
fs
aad
push
push
pop
out
inc
jp
mov
and
cmpl
sub
out
pop
mov
jle
mov
mov
in
addr16
jb
push
adc
xor
sub
inc
cmpsb
mov
pop
movsl
push
and
mov
popf
sbb
std
daa
leave
mov
lea
mov
js
stos
xlat
shlb
add
jle
and
ja
call
pop
and
lds
lds
cmpsl
movsb
jne
in
shrl
bnd
mov
cmpsl
pushf
push
imul
mov
jbe
test
sbbl
movsb
and
push
stos
jne
pop
sub
cmp
jbe
mov
dec
dec
movsl
mov
and
push
shlb
es
sub
cmp
mov
inc
out
cmpsl
je
out
in
dec
push
push
jnp
cwtl
sub
jno
mov
mov
mov
mov
sbb
clc
jl
nop
jp
push
dec
sti
rorl
in
imulb
test
stos
xchg
mov
pop
inc
stc
or
cld
shrl
inc
jnp
in
aas
xor
dec
fs
dec
xchg
imulb
dec
pop
data16
shrl
mov
mov
outsl
adc
rcrl
call
jno
lea
dec
sti
stc
dec
subb
dec
jo
xchg
dec
or
lds
das
sbb
cmpsl
aad
mov
jp
je
aam
pop
push
pop
inc
xchg
fcompl
gs
jge
lret
inc
sbb
dec
lock
xor
mov
lods
lods
movl
add
test
xor
xchg
sar
xchg
push
add
dec
cmpsb
jae
jo
pop
aas
adc
sbb
shlb
int
daa
mov
inc
cmp
mov
or
jg
mov
movsl
std
aad
push
shrb
les
push
jge
das
icebp
aad
icebp
icebp
sbb
gs
and
pop
sarb
cmc
xor
xchg
sub
xor
nop
fsubl
xor
lahf
push
sbb
cmp
int
pop
andb
cmp
out
fistpll
xchg
aad
or
sub
jno
popa
cmp
jle
rcl
fs
xchg
push
push
int3
scas
aad
mov
stos
pop
or
pop
lds
fs
test
insl
xor
pusha
call
out
mov
icebp
adc
sbb
lock
int
xchg
mov
add
adc
mov
mov
sahf
out
inc
xchg
cltd
fstp
dec
fldl
push
pop
jl
push
or
rcrl
push
out
in
ret
daa
rorb
aas
sahf
inc
sahf
movsl
imul
push
jae
cmpsl
mov
iret
mov
lahf
std
icebp
jne
iret
les
mov
inc
xchg
and
pop
cmp
push
adc
enter
xlat
xchg
cltd
ja
mov
pop
lods
xchg
and
psubusb
cmp
mov
clc
mov
mov
inc
shll
daa
push
mov
pop
inc
stos
int
mov
pop
leave
imul
leave
push
or
dec
add
in
in
pop
mov
cmp
out
fcmovnbe
xor
call
lods
test
and
fbstp
cmp
test
cmc
stc
sub
hlt
or
push
adc
mov
setnp
hlt
jbe
push
cmp
jns
lds
fs
sub
mov
nop
nop
sbb
sub
movsl
adcl
add
push
insl
mov
aas
jl
divb
sbb
lds
in
test
cmp
icebp
call
add
adc
cmp
cmp
aam
mov
pop
push
xor
out
mov
int3
or
add
mov
into
mov
jl
push
int
imul
adc
cmpsb
ljmp
lds
mov
mov
mov
lods
mov
and
cmpsl
lret
jge
xor
mov
cmp
cmp
cmpsb
pop
sti
fmuls
jl
mov
addr16
push
shlb
xor
cmpsl
sub
or
addb
ljmp
mov
dec
push
ljmp
popa
fwait
or
ljmp
and
cmp
inc
cmpsl
imulb
xor
addr16
fucom
enter
and
mov
scas
je
dec
push
lea
cmp
and
adc
pop
cmc
pop
aaa
ljmp
xchg
mov
push
add
aam
mov
test
std
push
add
inc
insl
pop
sbb
sbb
jns
pop
xor
mov
push
pmaxsw
dec
inc
mov
cmp
ss
cs
pop
inc
test
stos
and
test
xor
mov
andl
push
push
fildll
subl
lcall
fs
pop
push
push
mov
das
add
dec
push
pop
jl
adc
adc
imulb
sub
xchg
inc
mov
jb
push
cs
out
mov
cmpsb
push
pop
push
push
sbb
pop
xor
pop
scas
into
mov
push
xchg
pop
push
add
jb
loop
xor
add
jp
dec
mov
mov
and
and
mov
mov
call
sti
cmc
xlat
imul
into
testl
xor
cmp
jge
mov
insb
adc
adc
xchg
lods
aas
outsb
sub
mov
xchg
xchg
stos
repz
pop
mov
ja
mov
leave
bound
mov
add
imul
push
jnp
lcall
cmpsb
jo
incl
mov
or
mov
popf
stos
dec
mov
gs
ja
sbb
xor
mov
dec
mov
scas
push
mov
cmp
cmp
add
add
pop
stos
jecxz
bound
ret
adc
sub
mov
test
sbb
sub
jl
cmp
dec
fistps
cmpsl
test
outsl
cld
xchg
inc
jbe
fistpll
fstps
imul
lods
xor
repnz
in
imul
fcomip
loope
icebp
or
clc
test
call
add
pop
hlt
fsubl
mov
fdivrl
stc
insl
mov
or
std
and
dec
paddsw
and
cwtl
imul
ror
cld
stos
inc
cmp
adcl
and
mov
pushf
fwait
movntq
out
outsb
pop
adc
fidivl
fcmovbe
push
mov
fisttpll
test
mov
jo
aaa
inc
repz
pushf
inc
add
dec
adc
jne
push
mov
addr16
dec
add
or
popa
aad
mov
xchg
and
adc
xor
dec
popf
dec
xlat
mov
sub
outsl
xlat
and
or
cwtl
mov
sbb
ror
lods
pop
sub
movsl
fcos
pop
and
xor
sub
js
adc
fdivs
gs
in
nop
inc
ja
insb
insb
sub
out
ja
popf
sbb
xchg
inc
aad
inc
jmp
das
rcrl
popa
hlt
imul
test
repz
es
inc
out
fs
push
xchg
mov
cmp
cs
xlat
mov
sbb
out
dec
ret
test
imul
popf
fstps
adc
push
stc
scas
sbb
popa
dec
iret
and
jne
pop
add
shll
xchg
jg
fisubs
aaa
incl
lea
call
xchg
fwait
sbb
and
filds
les
cld
mov
or
or
add
ds
cmpsl
leave
shrl
jb
xor
fstp
sbb
test
xor
lret
insb
pusha
mov
push
sbb
outsb
orb
pop
push
sub
cwtl
shlb
lods
das
ror
push
push
sbb
or
stc
mov
add
xor
mov
sbb
mov
sub
in
sub
xchg
pop
call
ljmp
add
mov
cmpsl
call
insb
cmp
jmp
xchg
test
jmp
jno
pop
inc
or
mov
int3
andl
sahf
psubd
cmpsb
jp
xchg
mov
cs
sbb
jno
test
xor
pop
pop
sub
add
jnp
xchg
jb
flds
sub
mov
cwtl
out
inc
in
mov
imul
stc
xor
xor
push
je
aam
add
add
dec
or
mov
mulb
ljmp
pop
stos
push
push
cld
cltd
mov
rcll
shlb
and
cs
mov
or
pop
int
add
das
das
cmp
xor
ss
in
andl
push
imul
or
dec
ljmp
xchg
in
push
rorb
or
repnz
push
decb
insl
jo
mov
pop
cmpsb
mov
mov
mov
mov
or
mov
mov
push
call
aas
enter
mov
sarl
ficomps
icebp
fwait
mov
xchg
in
pop
aam
mov
mov
loop
pusha
push
sub
adc
fwait
in
push
mov
enter
int
roll
and
je
jo
mov
ret
cmp
mov
fistpl
xor
lea
orb
lahf
enter
dec
cwtl
jecxz
dec
int
js
rolb
or
mov
jnp,pn
dec
add
xchg
or
into
test
bound
fnstcw
jl
test
mov
inc
scas
cmp
push
mov
cmp
cli
sbb
test
imul
xor
add
mov
jb
sarl
sahf
ret
pop
add
inc
ss
jmp
scas
lcall
jle
shll
fistpl
sub
or
shl
mov
inc
negl
cmp
sbb
dec
or
stos
aas
jmp
sub
lds
jmp
out
pusha
dec
loope
xor
lock
mov
nop
mov
push
mov
fdivl
push
testl
lcall
inc
js
ss
aad
mov
dec
adc
fs
xor
int3
xor
aaa
mov
mov
imul
xor
out
int3
mov
mov
or
push
cltd
imul
mov
xor
dec
das
out
add
pop
das
or
jns
push
xor
xchg
xor
cmpsl
lret
and
outsb
or
sub
jg
pop
gs
lea
mov
xchg
xor
test
push
pop
dec
std
sub
sahf
stos
test
sarl
adc
jo
xor
out
cmp
adc
pop
add
cltd
or
pushf
testl
sbb
xchg
in
jne
mov
dec
xor
clc
icebp
lods
jno
mov
push
fcomps
cmc
cltd
sub
cmp
push
nop
add
xchg
das
sbb
inc
sbbl
push
aaa
adc
pop
testb
jmp
jno
xchg
call
jbe
repnz
mov
pop
mov
mov
sub
inc
cmp
and
out
jl
push
leave
pop
sub
sbb
inc
mov
inc
mov
push
js
aad
adc
cli
or
dec
cltd
in
in
or
add
orl
jbe
jle
movl
mov
jno
jnp
sub
push
aam
enter
mov
les
sbb
arpl
hlt
jnp
pop
jmp
fdivrl
cmp
clc
ret
in
push
lcall
sti
mov
dec
mov
sbb
ffreep
pop
mov
rolb
push
cmpsb
out
in
es
lcall
xchg
fmul
xchg
popa
push
dec
cmpsl
nop
arpl
cmp
jmp
xor
das
mov
clc
mov
sbb
lods
mov
stos
and
shrb
fnstenv
arpl
mov
cwtl
call
ja
cltd
cltd
mov
cmp
insl
and
pop
testl
stc
xor
rcrl
stc
sbb
js
pusha
fmul
or
lea
inc
dec
xchg
cmp
pusha
lea
xor
jg
lret
ret
nop
shlb
subb
jg
push
ja
gs
jae
call
iret
adc
mov
je
xchg
test
jp
and
sbb
push
icebp
pop
mov
test
fldt
fiadds
mov
into
jl
mov
xchg
je
mov
in
xchg
mov
sti
adc
stc
pop
or
pop
lret
xor
je
test
lds
sub
xor
xor
pushw
aas
jbe
jge
icebp
test
sbb
scas
cmc
imul
mov
inc
jnp
xor
or
mov
gs
sub
add
jns
sbbl
mov
repz
lea
xchg
hlt
xor
or
fists
stos
mov
jl
mov
sti
pop
clc
out
xor
dec
test
adcb
shr
push
sbbb
test
shlb
pop
adc
popa
cld
iret
pop
ja
outsl
add
scas
stos
dec
mov
sub
jb
hlt
inc
daa
mov
int3
mov
aad
ss
and
pop
rclb
jle
insw
pusha
jo
fcmovnbe
push
inc
push
fwait
mov
mov
pop
xchg
or
les
mov
pop
in
loop
or
push
mov
xchg
jnp
cld
or
orl
add
jnp
mov
xchg
sbb
loop
cmp
in
jmp
in
fwait
sbb
pusha
pop
ja
addr16
or
es
stos
and
push
sub
mov
pop
adc
mov
xor
inc
pushl
xchg
xlat
cld
mov
les
pop
pop
lods
shll
fwait
xlat
pop
outsb
pop
das
imul
cli
push
xchg
out
or
xchg
test
cmp
pop
rcrl
lods
repz
jge
xorl
arpl
or
pop
xchg
gs
movsl
adc
add
insb
xchg
push
sti
insl
xor
mov
icebp
cmp
pop
sbb
out
push
inc
xchg
mov
xor
pop
dec
xor
fwait
inc
sub
je
ljmp
into
fcoml
xchg
sbb
push
mov
lcall
pop
inc
xor
add
ss
call
xchg
sub
mov
push
in
inc
inc
gs
test
out
ret
add
bound
fs
arpl
xchg
dec
xor
cmp
xor
dec
and
mov
loopne
fisubs
mov
das
dec
fbstp
adc
aaa
loopne
sbb
mov
push
idivl
or
ss
aad
rol
jge
pop
pop
jo
mov
outsb
mov
or
shlb
push
fsubrl
pop
dec
cmc
xor
aad
inc
jne
and
aam
test
adc
std
cwtl
shrl
scas
cmpsl
or
lahf
dec
dec
cmp
xor
jno
nop
lock
test
mov
sbb
iret
test
sbb
cmpsl
jp
dec
into
rorl
mul
fs
cmpsl
inc
ss
cmp
fwait
add
push
out
and
or
inc
pop
add
push
aaa
jl
ret
cmp
cmp
rorb
dec
mov
adc
sbb
inc
mov
ljmp
push
dec
pinsrw
es
cwtl
mov
jp
hlt
stos
ds
outsb
dec
pusha
sahf
lods
ficoml
lret
sub
xchg
mov
lahf
stos
pop
dec
fwait
xchg
in
movsl
iret
cld
dec
shll
lock
fwait
out
jo
jo
jb
adc
les
mov
xor
mov
add
add
test
stos
inc
pop
mov
xor
movsl
or
inc
mov
movsl
inc
jmp
push
adc
fwait
loopne
pop
cmpsl
cs
xchg
imul
and
lock
das
pop
push
cmp
and
push
mov
movsl
mov
or
imull
imul
dec
cltd
dec
cvtps2pd
cs
pop
mov
outsl
add
idivb
daa
push
cmpsb
push
call
push
fucom
mov
imul
xor
sub
into
and
xor
jns
fnsave
out
mov
vcvtps2dq
gs
mov
sub
inc
fdivrs
je
js
pop
out
ffree
inc
mov
test
ret
fs
int3
mov
shrl
cwtl
lock
mov
cli
mov
mov
lea
lret
sbb
jo
shlb
jae
iret
stos
pop
cmp
outsl
jno
lcall
add
xor
fidivrl
push
sub
push
add
or
push
out
push
mov
lret
jl,pn
stos
add
xchg
push
push
mov
in
mov
sahf
jl
jle
repz
ss
push
unpckhps
clc
ret
insl
push
lcall
and
xchg
inc
int3
dec
into
daa
rolb
jbe
pop
fs
pop
add
mov
dec
clc
stc
fldl
cmpsb
ret
ret
xchg
inc
push
aaa
pusha
push
out
add
inc
add
mov
call
scas
loop
outsb
mov
jg
pop
mov
jge
xor
push
lods
lahf
lahf
daa
lret
dec
and
dec
jp
xor
mov
sti
mov
popf
repz
pop
fdivr
xchg
pop
fs
add
test
hlt
sub
int3
lods
jno
in
xor
fldl
out
mov
mov
aas
jns
stos
inc
cmp
pop
mov
xchg
repz
lods
cmp
lret
loopne
lahf
sub
push
xchg
sub
or
mov
js
std
jmp
bound
mov
cmp
xor
mov
pop
mov
sbb
idivb
add
inc
add
psubsw
pop
dec
mov
jae
sub
lcall
fdivrl
adc
pop
xor
stos
push
shrl
lock
hlt
mov
jmp
mov
das
push
jecxz
pop
hlt
inc
xchg
cmpsb
test
int
stos
test
and
jecxz
inc
mov
push
lea
sub
pusha
adc
popa
fcomps
shll
movsb
adc
and
sti
popf
bound
jp
sbbl
dec
dec
mov
icebp
imul
mov
push
daa
int
sub
xchg
push
jnp
movsl
loopne
scas
shrl
popa
cmp
mov
xchg
test
jo
xchg
stos
xchg
mov
dec
movsb
dec
lock
in
rcll
jae
icebp
jno
adc
sbb
les
ljmp
in
iret
hlt
loop
divl
sbbl
push
push
sbb
out
push
jmp
shll
in
xchg
js
clc
mov
jnp
inc
in
fsubs
sbb
test
add
jl
mov
and
push
cmp
lcall
out
xchg
lds
or
and
cmpsb
xchg
js
push
dec
in
stos
dec
arpl
mov
rcr
mov
lods
loopw
pop
add
xchg
pop
cmp
or
cmpsb
aas
bound
sbb
lea
mov
add
xor
std
inc
inc
je
xchg
inc
outsb
fwait
jmp
dec
adc
vpermpd
push
push
insl
stos
popa
xor
adc
mov
call
mov
movsb
shll
push
loopne
push
jae
and
or
inc
mov
sub
ljmp
fimull
jns
or
pop
mov
scas
sub
shlb
or
sub
xor
pop
stc
cmp
std
lahf
xchg
jnp
add
dec
daa
je
int3
mov
pop
cli
loopne
dec
jge
cmc
inc
or
sbb
es
movsl
cmp
xchg
push
ss
fnsave
out
inc
cs
jl
adc
pop
lret
daa
cltd
xchg
adc
imul
cmp
aam
popa
inc
scas
les
clc
movsb
jns
pusha
icebp
lods
pop
lea
sti
dec
faddl
xchg
and
pusha
mov
xor
pop
sbb
fwait
icebp
jnp
aam
lahf
addr16
xchg
jo
sub
dec
loope
mov
jge
sti
or
dec
pop
and
nop
rcl
and
ja
hlt
sbb
dec
mov
push
daa
mov
and
and
movsl
xor
movhps
movsb
pop
hlt
lahf
or
cld
mov
jno
push
push
jmp
pop
push
roll
xor
sahf
fsubl
lret
push
dec
mov
jnp
dec
add
inc
rcr
mov
jg
mov
in
jle
sub
mov
pop
test
xorl
ja
in
jmp
adc
js
inc
pop
inc
mov
call
lret
mov
sub
sbb
dec
lods
dec
test
outsl
mov
dec
cmp
xor
hlt
xor
xor
dec
jl
ss
xchg
push
inc
popl
mov
js
cli
scas
sbb
out
mov
jbe
and
sub
aam
lea
gs
sbbb
clc
jg
mov
stos
pop
push
shlb
xor
pop
jmp
xor
mov
addb
loopne
pop
and
xorl
ljmp
ds
pop
pop
xlat
mov
xchg
stos
push
ret
lahf
in
mov
jmp
arpl
or
lods
xor
gs
lea
xor
inc
cmc
xrelease
xor
mov
cmp
insl
adc
jb
cmp
shll
cmc
jmp
pusha
idivl
sbb
lret
adc
loopne
aaa
and
lock
xchg
cs
out
mov
or
pop
in
push
popa
scas
daa
fnstsw
outsb
sub
roll
call
aad
jno
inc
int
jecxz
shlb
ljmp
nop
or
dec
mov
mov
js
mov
add
cmpsl
pop
push
pop
mov
mull
xchg
push
insl
mov
int
jns
cmc
inc
pop
jmp
jb
mov
testb
cltd
rorl
je
adc
das
xchg
stos
push
js
mov
ljmp
or
scas
adc
xchg
imul
pop
xchg
jo
sbb
or
es
sub
mov
push
shrb
and
repnz
and
sbb
sbb
cmp
xor
movsb
push
lods
lds
int
pop
or
add
xor
je
in
idivl
push
bound
mull
jbe
int
movsl
push
icebp
gs
xchg
test
add
jae
pop
test
mov
mov
test
mov
loopne
cld
dec
sarl
jae
adc
repnz
das
repz
jno
lret
in
jno
lds
mov
jbe
sub
mov
aaa
testl
nop
mov
hlt
xor
sbb
inc
inc
jne
inc
add
ss
loopne
mov
adc
and
mov
lahf
or
xchg
mov
inc
cli
or
or
mov
lahf
add
inc
pop
add
jecxz
lods
mov
ja
loop
or
sub
or
add
or
in
test
and
jns
xchg
lock
xchg
test
add
adc
stc
repnz
cmp
hlt
xor
adc
sub
xchg
lods
or
and
into
sub
fs
int
push
push
sti
bound
lcall
int3
sbb
call
jno
add
ret
inc
stos
in
push
and
jno
push
cmp
mov
mul
and
repnz
clc
jp
rolb
lret
out
lds
lock
jne
out
shrl
andl
inc
leave
cwtl
jmp
lahf
nop
lcall
test
jmp
inc
adc
and
loop
jnp
stos
push
adc
movsb
pop
inc
ret
lahf
push
decb
lret
ficoml
out
ficoml
mov
stc
adc
adc
mov
jmp
jmp
cmp
sbb
cmpsl
add
adc
add
mov
push
sub
and
inc
cltd
inc
mov
fcoms
repnz
adc
movsb
mov
sub
push
arpl
fwait
ret
dec
mov
mov
jl
add
gs
cmp
cmpb
pop
cmpsl
dec
mov
xchg
cld
xchg
std
stos
cs
mov
jb
mov
fsts
add
out
dec
fidivl
fnstcw
pop
inc
add
add
fiadds
mov
scas
or
jecxz
loopne
inc
decl
dec
outsl
push
pop
shrl
mov
int
pop
mov
cmp
push
push
out
idiv
lock
adc
push
cmc
fisubs
sti
fistps
aad
add
sahf
mov
pop
jle
pop
sbb
sub
lods
ret
loop
cmp
push
shlb
pop
sub
and
jmp
dec
xor
test
mov
xchg
xorl
or
and
fsts
cmpsl
sti
push
mov
divl
cmpsb
xor
cmp
xchg
mov
add
sub
outsb
jae
push
adc
daa
dec
jo
andb
bound
out
add
and
xor
xor
xlat
test
push
dec
mov
sbb
in
cmp
addr16
cmp
mov
push
or
sub
out
fildl
pop
jecxz
rolb
add
mov
pusha
js
cltd
push
mov
into
dec
nop
xchg
test
mov
ljmp
pop
out
push
fisttpl
cld
int
xor
js
insl
scas
cmp
mov
pushf
cmp
or
and
dec
in
cli
mov
daa
dec
sub
out
mov
xor
fnstsw
daa
stos
cmpsl
dec
xchg
hlt
fistpl
xchg
push
mov
ss
inc
xchg
lods
dec
in
add
push
add
jno
mov
jae
sbb
in
fdivs
rorl
xchg
xor
sub
pushf
cmpsl
pop
mov
movb
sti
leave
xchg
sbb
fistpl
push
sbb
das
and
inc
sub
jo
outsb
fbld
ja
loopne
out
clc
movl
and
pop
dec
pop
out
movsb
mov
mov
lret
dec
shl
int3
pop
or
jae
repnz
rol
loope
cmpsl
xor
subb
jl
cmpsl
mov
dec
out
pusha
dec
mov
test
negl
hlt
lahf
cmc
sbb
xchg
pusha
and
inc
sub
stos
test
and
add
adc
mov
xchg
loop
fisttpl
dec
mov
subb
nop
inc
and
xchg
mov
pop
gs
xchg
pop
sahf
nop
mov
outsb
mulps
jb
and
lret
adc
push
sti
stc
or
loope
xchg
cmp
xor
std
jmp
mov
xor
and
lret
push
lret
push
lcall
xchg
inc
sbb
and
into
loopne
jmp
fwait
jmp
dec
mov
jns
in
lods
stc
jnp
mov
outsl
dec
inc
lcall
outsb
mov
mov
xchg
adc
push
loopne
dec
add
cmp
jl
push
dec
insb
and
std
mov
push
gs
in
inc
movd
cmp
fwait
jno
jns
mov
popa
push
movsl
fmull
pop
ljmp
fcom
popf
mov
or
cmp
jb
mov
push
sbb
xchg
insb
aas
test
inc
push
mov
xor
in
in
stos
popa
push
mov
sti
cs
adc
cwtl
dec
xchg
rorl
mov
pop
inc
leave
inc
ret
xor
mov
xchg
add
and
es
je
cmp
stc
daa
rorl
aaa
xor
adc
imul
adc
cli
mov
and
stos
xor
fdiv
push
js
mov
lret
lock
sub
out
movsb
push
pop
sar
xchg
mov
pop
out
pop
mov
mov
bound
gs
jl
mov
or
dec
hlt
dec
daa
add
test
or
sarl
fiaddl
jecxz
arpl
stos
or
ret
sub
sub
xchg
add
push
fnstcw
rcrb
mov
sub
imul
call
jge
into
xchg
mov
mov
data16
sarl
orb
ret
push
cwtl
sub
pop
xor
scas
sub
pop
ret
dec
rcrl
ficoml
mov
mov
pop
pushf
add
shrb
pusha
or
lcall
inc
in
pushf
lcall
cld
sbb
leave
dec
mov
sub
iret
std
inc
jge
loope
mul
and
sar
dec
dec
mov
rcll
mov
mov
arpl
add
xchg
loopne
stos
clc
mov
popf
mov
in
and
dec
adc
cmp
sbb
loop
cltd
push
cmp
inc
jle
pop
push
int3
mov
push
add
and
popa
jg
sahf
icebp
jle
mov
mov
in
popf
or
xor
mov
dec
aas
jne
cld
xchg
push
xor
xchg
jbe
jmp
cmp
pop
mov
jmp
jb
lret
or
cmpsb
add
jno
pusha
mov
adc
dec
xchg
dec
push
mov
gs
cli
hlt
lock
test
mov
popf
mov
mov
orl
push
sub
push
mov
cs
xchg
xchg
pushf
nop
lods
inc
aad
sub
shll
inc
add
call
and
ret
xchg
inc
cld
stos
es
orb
sub
inc
test
cmpsl
mov
cld
in
pop
pop
mov
in
dec
int
mov
jo
loop
enter
movsl
gs
sbb
dec
pop
jne
push
out
rcl
and
sahf
xchg
fcmovnu
nop
xor
rclb
iret
mov
mov
idivb
inc
pusha
xchg
xchg
divb
xor
jb
xor
and
mov
xchg
dec
int3
mov
sahf
imul
xchg
into
into
fwait
pusha
mov
cmp
cmp
rcrb
and
mov
push
ds
inc
shll
mov
or
fcom
push
mov
mov
inc
push
aas
mov
icebp
repnz
js
push
loope
testl
jbe
sbb
fs
nop
sub
aaa
cmp
sbb
stc
rcll
jge
jns
or
shrb
lcall
imul
fists
mov
jl
and
test
lds
adc
mov
jle
xor
xlat
sbb
sub
pushl
inc
mov
icebp
lock
push
sub
dec
insb
mov
sub
sub
inc
fisttpl
xchg
jmp
jmp
and
sbbl
into
insl
test
inc
and
test
mov
push
push
outsb
push
int
mov
aaa
jecxz
daa
mov
adc
lods
fs
xchg
or
push
popf
stos
pop
sub
mov
cmp
rcrl
push
xchg
fnstenv
cmp
mov
popl
movsl
jge
jo
jnp
cmpsb
mov
xchg
push
jns
mov
jp
icebp
dec
jne
or
insl
fidivs
cs
mov
fnstsw
push
int
mov
ds
xchg
push
jmp
lock
jnp
fistpll
test
pop
ret
adc
in
push
pop
and
push
xchg
sbb
test
or
sbb
add
sbb
cld
fs
jnp
fs
cwtl
and
and
data16
mov
xor
add
dec
in
xor
push
aam
xchg
dec
nop
push
scas
rcll
movsl
shll
lea
mov
lret
icebp
xor
cltd
fldl
lahf
addr16
dec
outsl
jmp
xchg
dec
ret
std
dec
jno
or
mov
sahf
inc
movsl
es
mov
and
int3
je
push
fcmovb
test
call
cmpsl
scas
pop
mov
sbb
pushf
mov
nop
insl
or
jmp
adc
jne
pop
loop
aaa
dec
pushfw
call
or
dec
pop
jle
jns
pop
adc
xor
das
sub
jmp
push
fmuls
push
lea
lea
mov
xor
mov
inc
jns
fsts
das
dec
sti
cmc
mov
es
mov
push
fisubl
sbb
sub
insb
pop
jmp
fdivr
repnz
or
stos
insb
xor
dec
push
stc
cmc
mov
add
xor
pushf
test
outsb
les
pop
dec
sbb
push
xor
cmp
push
daa
sbb
jno
roll
loopne
cmp
mov
bound
ja
stos
iret
aad
dec
cltd
out
icebp
movzbl
mov
sub
cwtl
sbb
sub
aas
jae
hlt
xorl
add
xchg
loope
iret
dec
dec
ds
aam
inc
lcall
xor
sbb
mov
cmp
inc
mov
mov
lahf
lea
fldl2t
pop
mov
out
dec
xchg
sbbl
xor
sub
fstps
int3
mov
es
mov
lret
xor
sub
jmp
and
stos
incb
add
jne
in
or
sub
add
xchg
mov
or
mov
mov
pop
movsl
outsb
xchg
dec
lahf
dec
lcall
pop
rcll
bound
out
stc
clc
sub
and
in
neg
scas
mov
stos
daa
fcompl
iret
loope
outsb
jbe
lock
enter
xor
bound
aaa
gs
dec
add
add
scas
test
mov
push
push
loopne
std
or
int
push
std
mov
std
add
hlt
arpl
or
pusha
pushf
js
test
adc
and
pop
lods
dec
cltd
repnz
add
daa
jmp
mov
and
mov
xor
sbb
and
shr
in
lret
icebp
aam
movsl
sarb
mov
xchg
xor
loopne
in
in
call
or
andb
xor
xchg
mov
mov
pop
cli
out
in
notb
add
cwtl
jl
push
imul
bound
gs
lods
xorb
nop
test
dec
cltd
dec
pop
adc
repz
adc
outsb
cwtl
je
aas
xchg
cltd
lods
scas
roll
fnsave
push
int
adc
fwait
pop
push
xchg
and
stos
sub
adc
sti
stos
int3
adc
std
int3
mov
stc
dec
insl
out
push
add
add
pop
jle
cltd
cld
mov
jge
repnz
or
add
movsb
dec
int
inc
adc
sbb
aaa
gs
inc
es
imul
mov
lods
inc
mov
jo
inc
cwtl
inc
lret
mov
popf
or
stos
dec
xor
push
loop
fnstcw
cmp
fs
shll
test
lcall
push
pop
orb
bound
out
iret
enter
lahf
lcall
sub
jmp
cmp
test
jg
cltd
test
or
lock
mov
movsb
mov
add
jmp
fucomi
in
and
dec
lds
inc
inc
or
shll
lret
loopne
int3
push
fistpll
push
out
xor
xor
cmp
jle
lock
or
jnp
xor
test
mov
xor
or
out
sub
rcrl
fwait
pop
pop
pusha
aas
pushf
jnp
lcall
xchg
xor
sti
push
fcoms
dec
sub
xchg
jnp
out
mov
loopne
sahf
insl
sti
xchg
cwtl
fstpl
push
jg
in
xchg
aad
sub
and
adc
mov
push
insl
cmp
stos
arpl
dec
push
rclb
or
gs
aam
cmp
pop
dec
ret
ljmp
sbbb
xor
mov
sbb
shrl
pushf
mov
sbb
xor
mov
ret
into
loopne
cli
push
leave
xchg
mov
push
push
enter
and
add
repz
movsb
cltd
lock
lds
or
dec
rcrl
xor
xor
lods
inc
stos
dec
inc
ror
test
xor
pop
sbb
mov
dec
fstpt
cmp
mov
shl
scas
sub
mov
jge
in
sbb
lahf
jbe
add
mov
sbb
inc
push
adc
mov
pop
cmp
xor
add
bound
jge
cs
divb
adc
pop
cltd
jnp
ljmp
ret
sbb
stos
inc
push
cmp
push
xchg
movsb
clc
ja
pusha
stc
lea
fsubrp
jecxz
sbb
push
mov
imul
sti
xchg
mov
xchg
lods
sbbl
fistps
and
scas
ja
pop
mov
mov
into
outsl
or
cmpsb
test
mov
test
movsl
dec
mov
cmp
lods
dec
cmp
lock
lock
or
mov
inc
sub
cmp
imul
pop
jle
push
pop
adc
lret
jge
cmpsb
in
pop
cmc
mov
mov
pusha
push
rol
push
and
imul
adc
subb
xchg
in
rcrl
mul
stc
cld
mov
shrl
sbb
and
dec
xchg
ja
inc
jp
repz
mov
pop
push
aam
fpatan
fwait
inc
lock
inc
xlat
mov
fistps
mov
fwait
popa
cli
movsl
xchg
lret
cmovl
cs
dec
std
inc
addr16
das
lret
mov
jb
imul
pusha
outsl
push
push
dec
lret
insb
or
imul
push
jg
xchg
mov
call
or
pop
dec
mov
hlt
insl
cmpl
mov
pop
adc
pop
inc
ficompl
lret
ljmp
bound
pop
mov
add
inc
xor
fnstsw
jg
rcll
xor
add
mov
sbbl
xor
stos
js
cmp
add
mov
cs
push
stc
mov
or
cli
push
sti
sbb
mov
shlb
mov
push
psrld
andb
or
push
sarb
adc
xor
add
xchg
push
mov
stos
es
adc
push
mov
fwait
mov
lods
push
cmp
cmp
aam
sub
mov
mov
cmp
in
or
fsubl
arpl
sbb
out
jnp
xchg
jecxz
fldenv
test
sub
frstor
sbb
mov
shrl
cli
fists
add
stos
cmp
test
call
nop
popa
std
ljmp
fcompl
mov
or
mov
xchg
add
popa
and
ja
mov
lock
mov
and
inc
lods
xrelease
adc
push
stc
jnp
cmpsl
jae
or
inc
sub
mov
cmpsl
xor
sbb
test
mov
test
iret
hlt
add
sub
jmp
pop
nop
sbb
rorb
adc
fldenv
add
fwait
outsl
les
aam
lret
sbb
jae
mov
xchg
push
dec
cmc
int
das
ret
dec
fcmovnbe
cmpsl
in
arpl
nop
mov
flds
push
pop
pop
mov
mov
into
sbb
cltd
push
aas
jae
push
imul
movntps
xchg
ficoml
dec
push
push
testb
stc
lcall
ret
test
scas
cmp
mov
adc
push
dec
lds
xchg
leave
inc
ljmp
xchg
xchg
jb
mov
add
pop
xchg
cmp
mov
cmp
leave
testb
ss
push
mov
pop
mov
pop
add
adc
push
sub
dec
mov
pop
in
sbb
sbb
cs
push
push
fldt
add
push
adcl
bound
jae
loope
adcb
aas
rcr
sbb
adc
adc
scas
xchg
scas
xchg
shrb
mov
sbb
incl
out
pop
or
jge
xchg
out
sysexit
xor
int
pop
lods
stos
mov
mov
stos
into
scas
stos
fisttpll
ljmp
orb
mov
sbb
add
xchg
jl
js
mov
jl
push
xchg
mov
addr16
pop
fisubrs
xchg
call
ss
les
ret
jbe
xchg
movl
bound
rclb
mov
inc
sbb
mov
insl
sbb
and
ret
cmp
xchg
push
jmp
xchg
idivb
dec
mov
mov
sbb
add
lahf
repnz
cmp
jno
dec
test
divl
xor
push
lcall
sub
out
andb
push
and
iret
pop
dec
push
and
out
dec
and
mov
xchg
add
mov
adc
xlat
bound
add
inc
arpl
xchg
iret
fst
xor
jl
inc
addb
push
les
push
std
out
mov
stos
jecxz
mov
pop
mov
shrb
mov
or
std
add
sub
xor
adc
push
jne
insb
jae
jge
pop
inc
jl
mov
push
imul
xchg
ficompl
adc
dec
pushf
cld
mov
mov
loopne
into
out
fisubs
push
push
ja
gs
cld
mov
push
add
dec
jp
cltd
add
mov
push
inc
test
inc
push
pop
daa
xor
cwtl
jns
dec
cmp
cmp
data16
fdivr
dec
test
xchg
and
scas
or
in
ret
adc
xor
xor
mov
jo
test
out
pop
popf
pop
sub
inc
cmp
in
insl
xchg
loop
addl
xchg
stos
pop
out
push
xchg
dec
lods
adc
dec
xchg
int3
fs
cld
mov
imul
sbb
inc
cwtl
inc
mov
mov
test
mov
movsl
aas
dec
clc
and
and
imul
repz
mov
andb
xchg
inc
mov
pop
shl
xor
or
and
aas
sahf
sti
in
add
in
addl
mov
sub
jb
xchg
push
xchg
das
addr16
push
cmp
jecxz
pop
icebp
nop
sub
cmc
sbb
inc
dec
dec
loope
in
into
push
mov
pop
cmp
pop
xchg
ficoml
push
in
int
push
loop
dec
negb
or
pusha
or
scas
jne
daa
mov
sub
inc
sbb
rcl
push
xor
mov
pop
mov
or
iret
int
jno
dec
test
stos
jp
mov
orl
punpcklwd
lahf
fbstp
dec
cli
sbb
inc
lock
mov
xor
jb
aas
daa
mov
lea
fwait
imul
ficompl
push
incl
insl
push
mov
enter
inc
mov
faddl
dec
ficoml
and
and
jge
imul
arpl
pop
and
out
test
xor
in
jno
xlat
pop
mov
mov
imul
les
inc
mov
popf
jp
gs
and
pop
dec
sbbl
ja
xor
aas
xor
in
rclb
pushf
mov
jecxz
mov
cld
ss
cmpsb
repnz
loope
ja
jge
jg
pushf
push
loop
ret
push
cwtl
mov
sbb
popw
je
sbb
dec
xchg
insb
xchg
mov
data16
fcoml
mov
shll
push
dec
and
cmp
hlt
pop
jbe
mov
add
frstor
in
ja
movl
pop
push
scas
imul
push
inc
mov
or
movsl
pushf
mov
dec
orl
add
mov
scas
stc
cmp
xchg
test
jmp
mov
lahf
iret
or
ret
jge
mov
lods
test
repnz
sahf
adc
stos
data16
ss
test
mov
or
inc
adc
inc
push
popf
push
adc
or
dec
xor
pop
test
inc
jecxz
imul
mov
mov
jmp
shlb
inc
adc
orl
or
xchg
out
imul
dec
outsb
dec
push
lock
addb
mov
rcrb
dec
int
clc
add
cltd
add
and
jl
cmp
xor
pop
sub
sbb
dec
repz
gs
nop
jae
sub
mov
mov
cltd
hlt
mov
push
xchg
cmc
negl
dec
push
test
scas
aad
xchg
jge
insb
movsl
repnz
out
sub
mov
scas
jle
cltd
adc
pop
mov
loop
repnz
pop
fimuls
and
idivb
jle
inc
mov
mov
push
mov
cs
pop
xchg
aaa
add
jge
adc
stos
or
mulb
lods
fistps
test
int3
add
sti
mov
cli
jo
sbb
and
cs
mov
or
ret
loope
cmp
addr16
popa
or
cld
add
into
jo
push
je
inc
sahf
mov
mov
xchg
in
sarb
push
adc
mov
stos
dec
int
imul
sbb
push
xchg
pop
pop
dec
int
js
mov
pusha
enter
jb
fistpll
popf
xor
imul
nop
mov
cs
in
lret
enter
leave
mov
ret
and
and
xchg
cmp
loop
bound
jl
daa
jns
clc
enter
in
dec
cltd
inc
divl
cmp
mov
and
jg
xor
jnp
fwait
mov
negb
jl
pop
enter
add
inc
fisubrl
xchg
and
test
mov
leave
pop
adc
icebp
lahf
scas
push
xchg
cmp
xor
pop
mov
jnp
mov
pop
jae
sbb
mov
jns
jno
scas
cld
push
jmp
in
pushf
cmp
pushf
out
loop
lret
aaa
xor
xor
xchg
cmp
or
push
pop
pop
cmp
fcoms
fidivs
adc
mov
pop
mov
ret
push
adc
inc
mov
adc
pop
repz
push
aad
pop
subb
fistpll
dec
sub
add
popa
push
add
mov
add
xchg
or
in
sbb
xchg
test
les
sbb
mov
fstpl
jmp
rol
mov
lds
loop
add
mov
mov
dec
lds
sbb
sahf
cmpxchg
xor
push
push
daa
dec
xchg
int
lock
imul
sbb
in
into
xor
push
repz
scas
out
cli
pop
jg
shll
pop
push
in
dec
sub
arpl
push
fwait
ss
sbb
in
cli
fbld
adc
fisttpl
out
cmp
das
mov
jle
inc
pop
mov
ljmp
imul
pop
or
enter
mov
aam
sti
insl
sbb
pop
sub
out
xchg
sub
nop
dec
jmp
out
mov
fs
pop
scas
insl
mov
mov
xchg
or
mov
lds
fcmovne
jns
mov
pop
sub
ds
mov
imul
xor
es
outsl
xlat
mov
add
insl
das
lds
lcall
aam
ds
sub
xor
jnp
loope
push
cmpsl
and
lods
mov
inc
xor
ficoml
mov
cwtl
push
pop
and
ss
jns
mov
int3
cmpsb
sbb
out
adc
push
inc
pop
leave
mov
jbe
lret
stos
test
lret
jecxz
mov
lahf
leave
pushf
mov
cmc
cltd
mov
sbb
xor
or
mov
icebp
inc
xchg
xor
adc
push
inc
xor
sar
pop
ret
push
movb
adc
xor
sub
popf
dec
outsl
stc
aad
mov
test
nop
push
jno
mov
or
stos
add
int
jns
jae
in
repz
ja
das
sub
or
or
xchg
repnz
test
in
dec
xchg
mov
loop
jnp
daa
sub
xchg
xchg
aas
outsl
out
mov
out
gs
mov
add
sbb
dec
lahf
je
fwait
mov
sbb
xchg
and
jno
mov
and
ss
das
lods
rorb
aas
push
and
dec
xchg
push
sbb
in
clc
lock
sub
push
das
dec
insl
fsubrs
add
sbb
fistl
add
adc
pop
paddd
cmp
dec
jecxz
lods
lods
cs
pop
mov
inc
sub
push
cmp
cmp
sub
mov
jb
xchg
or
stos
inc
in
lea
push
arpl
inc
jmp
test
popf
cmc
push
dec
iret
jne
pushf
test
addr16
and
xor
mov
movsb
push
push
mov
mov
push
add
push
jb
jae
jb
lret
pop
loopne
ret
scas
pushf
stos
mov
rol
push
shlb
jo
sarb
mov
or
push
outsb
sbb
mov
sub
cs
xchg
jne
cs
movsb
pop
mov
arpl
testl
pop
add
or
je
out
add
mov
out
fldl
dec
and
jae
xor
xchg
bound
cltd
push
addr16
and
or
loope
addb
je
or
stc
scas
pop
dec
jne
adcl
mov
add
fimuls
jp
scas
mov
sahf
add
loop
sbb
cmp
int3
pop
cmp
adc
in
adc
mov
stos
cmp
xlat
test
push
xchg
outsl
andl
daa
mov
mov
xchg
fwait
ret
adc
pop
ljmp
je
dec
in
lcall
push
lods
lcall
pop
sub
fisttpl
cwtl
int3
shlb
xlat
cmp
popf
push
mov
push
popa
mov
daa
adc
jg
xor
mov
test
inc
xlat
push
scas
ljmp
lahf
call
jno
popf
xchg
pop
pop
ss
arpl
sub
stc
inc
in
lock
fs
sahf
jg
xchg
xor
ficomps
xchg
mov
mov
in
sti
mov
push
shll
xor
dec
arpl
adc
jmp
inc
xchg
pop
das
test
push
jbe
leave
cs
mov
dec
dec
hlt
or
rorl
and
push
test
jne
sub
lahf
adc
fisubl
pop
cld
sbb
or
mov
adc
shl
fwait
add
popa
dec
jl
imul
mov
pop
into
fidivrs
mov
ja
mov
adc
mov
cmpsl
aad
aad
stos
lret
cmp
push
js
shrl
popf
mov
cmp
sbb
jecxz
push
in
cld
jecxz
sbb
inc
add
cli
push
mov
insl
fiadds
mov
sbb
cli
cmp
nop
push
in
adc
sbb
sbb
cmpsl
mov
mov
mov
xchg
xor
pop
xor
mov
mov
test
jo
ljmp
aad
and
pop
jno
push
out
scas
ljmp
mov
sti
scas
sti
imull
sub
hlt
lret
sub
enter
push
cmpsb
dec
mov
xor
push
pop
subb
into
lods
scas
or
stc
jns
lahf
and
cmp
subl
cmp
jbe
inc
cmpsb
fs
ds
mov
adc
add
adc
scas
sub
pop
adc
outsb
insb
mov
xor
mov
imul
mov
rorb
sti
imul
pushf
aam
mov
ss
gs
and
rcl
aad
fisubrs
fcomip
jmp
add
xor
stos
flds
mov
push
aas
sub
sbb
cld
mov
clc
iret
out
add
pop
add
cmp
into
jo
shl
jae
add
mov
jg
cmp
xchg
sbb
das
mov
stos
arpl
jne
sbb
lods
bnd
nop
sub
das
imul
movl
andb
mov
dec
movsl
pop
mov
jnp
repz
rcr
or
mov
mov
lea
dec
sbb
int3
int3
mov
insl
and
add
add
cmp
xchg
jae
loopne
imul
cltd
mov
sbb
repz
jg
or
call
mov
jg
dec
inc
in
sbb
jo
xor
aas
mov
sbb
aad
lcall
inc
and
aam
ret
addl
mov
scas
adc
sub
mov
adc
arpl
pusha
jnp
jb
push
or
dec
jg
push
push
sub
xlat
sbb
popf
pushf
dec
jl
ja
orl
mov
repz
dec
enter
mov
push
cmp
pop
or
in
pusha
addr16
inc
addb
cmc
fdivrl
in
push
fdivrs
sub
push
shll
adc
jmp
lods
cmc
cmp
fs
or
pop
dec
std
cmp
xchg
fs
xchg
add
adc
mov
outsb
ljmp
hlt
pop
dec
dec
and
sarl
cltd
inc
call
addr16
fiaddl
and
ret
inc
push
xchg
ret
bound
sbbl
sub
ljmp
jl
ja
rclb
pop
push
fsubrl
dec
popa
loope
fstps
out
pop
xor
enter
fisttps
jle
cmc
lret
xchg
sbbb
sbb
int
cmp
xor
dec
jmp
pop
pop
push
add
shlb
out
ret
xlat
ficompl
imul
fs
sbb
or
mov
and
aad
sbb
ja
mov
sub
mov
pop
pop
in
popa
idiv
lods
out
pop
imul
inc
in
jge
dec
scas
inc
and
xor
lret
cmp
imul
jbe
pusha
mov
sub
pop
aad
mov
jns
sub
ret
lods
ja
ret
scas
fadd
nop
mov
jb
xlat
push
call
aaa
pop
push
inc
ficompl
adc
inc
sub
movb
mov
push
out
imul
cld
hlt
in
fsubrs
insb
xlat
mov
mov
sub
pmullw
pop
push
pop
aaa
lret
mov
jp
xlat
call
rclb
push
dec
or
jnp
test
cmp
inc
cli
fmull
loope
aad
fcom
adc
icebp
cmp
rorl
sbb
add
les
dec
pop
cmpsl
lea
push
daa
cwtl
leave
insb
xor
inc
inc
fstps
into
sbb
out
sbb
dec
push
xor
into
out
xorl
cs
cltd
inc
mov
leave
xchg
cld
mov
lcall
ficoml
pop
lret
insl
imul
cli
sub
dec
das
icebp
icebp
sub
in
aaa
repnz
mov
fdivl
mov
mov
ja
data16
cmp
jmp
and
mov
xor
movsl
xchg
test
push
xchg
or
mov
dec
das
cli
push
outsb
in
mov
lret
jbe
decl
loop
test
bound
ljmp
dec
loopne
fdivrl
dec
xlat
adc
xchg
mov
mov
sbb
or
or
mov
dec
sti
das
add
shlb
stos
pop
sub
and
into
ljmp
mov
sub
loope
rorl
sarb
mov
cmp
aas
adc
sub
test
int3
je
in
stos
hlt
adc
mov
jne
imul
dec
and
push
inc
mul
cmp
jbe
les
xchg
cli
cli
iret
movsb
lods
int3
inc
sbb
jno
sbb
mov
lcall
lret
loope
pop
jns
pop
addr16
inc
adc
sbb
sbb
add
add
dec
sbb
add
fiadds
push
popf
xor
incb
cmp
outsl
mov
and
fcmovnu
in
aad
ds
mov
stos
mov
lock
add
mov
lock
dec
cmp
push
lea
dec
sub
sbb
shrl
icebp
les
repnz
adc
jge
lock
outsb
sub
aas
in
pop
stc
add
scas
mov
sahf
movl
loopne
hlt
cmp
add
ss
ss
in
pop
lcall
movsl
movsl
pop
aad
and
in
js
xor
int3
cmp
lock
inc
mov
dec
clc
std
ficoms
inc
xchg
in
add
pop
call
jae
sub
imul
enter
shlb
neg
lcall
xorl
lea
inc
xor
fdiv
xorb
jecxz
xor
xor
mov
hlt
xor
jbe
sbb
daa
aaa
cld
jecxz
dec
adcl
mov
iret
pop
fnstsw
scas
and
nop
sahf
mov
sahf
leave
jl
ret
cmp
je
cmc
pop
imul
add
mov
sub
sahf
lods
popf
mov
push
repz
xchg
cmp
insb
lods
or
jmp
movsl
pusha
repz
mov
sbb
in
push
adc
push
inc
jmp
inc
lret
mov
ja
xchg
js
ds
iret
push
jg
call
ret
test
dec
cmp
xor
mov
orl
bound
fs
test
test
sbbb
xor
fisubrs
mov
pop
push
add
into
fsts
jbe
inc
cs
jp
jno
lea
std
mov
push
mov
es
pop
mov
cltd
les
and
jle
mov
jbe
or
inc
mov
add
rcl
out
sub
and
inc
and
and
fwait
movb
fldcw
push
inc
and
test
mov
mov
xor
ja
pop
fiadds
cmp
dec
ja
int3
je
xor
jno
insb
push
je
enter
cmpsb
lds
dec
sub
rcrl
pop
inc
or
pop
pop
insl
scas
xlat
outsb
sbb
imul
mov
dec
mov
bound
pop
out
add
pop
outsl
scas
cli
add
push
xchg
int
outsl
inc
pushf
xchg
daa
dec
adc
fiadds
lret
xchg
dec
push
int3
xor
or
fstpl
push
sub
push
cs
subl
or
inc
push
arpl
dec
rol
mov
pushf
imul
jl
sub
leave
lods
aaa
repz
ret
mov
jbe
jns
leave
hlt
xchg
out
xor
mov
ja
pushf
int
mov
mov
mov
jg
push
and
addr16
mov
dec
sti
or
sbb
decl
mov
xor
addr16
roll
int
subl
push
lret
fidivs
clc
lds
mov
rcrl
dec
shrl
frstor
pop
repz
mov
jp
inc
inc
adc
aaa
out
jb
shl
fists
pop
inc
les
sarb
and
inc
dec
mov
fsub
xor
ljmp
aas
adcb
aas
jbe
cs
psubd
cmc
mov
arpl
mov
sub
ret
adc
add
outsl
pushf
inc
fisttps
pop
scas
out
insb
clc
push
xor
and
mov
lret
jno
sub
cmovae
inc
mov
aaa
adcb
push
rcrb
out
cmpsl
cmp
or
rorl
inc
lret
add
scas
dec
ret
pop
adc
mov
in
sbb
or
xchg
and
add
mov
xor
and
xor
das
mov
jp
push
push
xor
lods
adc
dec
mov
fsubs
call
test
cld
ja
sub
xor
mov
adc
lock
popf
inc
dec
push
inc
dec
fsts
or
dec
aaa
jae
sar
xor
jecxz
push
pushf
xchg
shll
inc
shll
xchg
movsl
pop
adc
ret
into
andl
push
test
cmp
or
sbb
jp
jecxz
cwtl
sahf
jmp
add
in
test
ds
pop
and
xchg
dec
cmp
and
lahf
xor
jmp
icebp
push
cmp
test
pusha
mov
lcall
pop
jo
cld
addb
div
call
stos
pop
add
fwait
out
imul
ret
xchg
or
ret
mov
hlt
pop
out
addl
out
lahf
daa
jo
fsubrl
and
inc
jge
scas
mov
outsb
imul
hlt
pushf
lret
and
mov
data16
stos
js
mov
loopne
outsb
aad
xchg
arpl
in
ret
cmc
in
sarb
mov
and
test
add
xor
sub
adc
xchg
rorb
push
cmpsb
inc
mov
lea
stos
xor
cmp
sub
std
jne
push
xor
add
inc
mov
and
ja
clc
pop
inc
adcl
pop
pop
xor
aam
pop
int
mov
adc
inc
stos
push
aaa
push
mov
add
sbb
je
insl
xchg
or
push
orl
push
outsb
cmp
cmp
or
fdivrp
mov
jmp
or
cmp
or
mov
or
jmp
inc
cmp
and
or
mov
addr16
out
adc
aam
aad
mov
push
mov
push
jmp
movsb
loop
jns
fiadds
and
mov
mov
add
inc
or
bound
mov
shlb
loop
test
sbb
pop
test
push
fsubrl
jae
pop
in
push
mov
addr16
sahf
dec
xor
cmp
cs
pop
int3
lds
xor
icebp
je
xchg
lret
testl
push
fidivrl
leave
cmp
pop
fs
and
fs
and
mov
mov
filds
aaa
aad
cld
add
mov
dec
mov
mov
adc
pop
aam
lretw
int
ret
and
shrl
ret
xchg
lods
popa
mov
jge
or
shll
pop
fdivs
test
xchg
push
push
xchg
cmpsl
adc
movsb
popf
lea
out
sub
xchg
enter
mov
jp
popa
out
inc
ret
inc
xchg
inc
xor
inc
or
andl
push
es
loope
xchg
add
sarb
adc
ret
iret
jg
fildl
cmp
ds
lods
pop
push
sbb
stc
mov
pop
sub
mov
dec
jne
add
jp
inc
incb
test
cmp
lods
pop
ret
push
lock
cs
aam
cld
imul
ja
dec
or
dec
jmp
jge
pop
idivb
je
cmp
jno
mov
orl
ljmp
xchg
dec
js
fnsave
jo
fcmovu
xchg
adc
or
dec
pushf
daa
pop
jnp
movsb
inc
sub
inc
je
leave
pusha
mov
clc
fildl
in
imul
pop
and
mov
mov
pop
adc
in
xlat
pop
sub
jecxz
pop
xchg
sub
mov
testl
xchg
movsl
pop
frstor
popa
sbb
in
ficompl
outsw
lret
add
mov
in
jo
mov
cs
sub
sar
fistpll
jecxz
xor
push
dec
out
test
xchg
sbb
pop
cli
subb
popa
lds
je
lds
adc
mov
cli
mov
xchg
pop
dec
les
daa
aad
fmulp
mov
jnp
lds
subb
in
jp
cltd
mov
cmp
and
fsub
jp
int3
jecxz
or
adc
pop
jne
push
jmp
jg
call
fcomps
jmp
sbb
jmp
lcall
sub
mov
jecxz
mov
jne
and
stc
add
pop
shlb
clc
jne
add
push
lods
jge
int3
push
dec
add
mov
mov
popf
out
xlat
imul
push
mov
jnp
push
call
jbe
cmpsl
sar
mov
divl
mov
loop
shr
into
dec
int
jnp
mov
sub
push
mov
push
push
cmp
and
cli
xor
ss
sti
push
jns
adc
cwtl
fcompl
popa
add
jne
adc
sarb
fldt
out
pop
sbb
xchg
xchg
mov
pop
daa
dec
data16
dec
xchg
aaa
mov
popa
mov
jbe
insl
jb
and
imul
out
les
xchg
out
xchg
mov
aaa
jge
addb
push
sub
mov
andl
push
jp
xchg
xor
jmp
pop
push
popa
jno
mov
scas
mov
fs
xchg
jo
aad
mov
hlt
leave
rorl
scas
push
add
add
adc
or
iret
fwait
sbb
add
scas
mov
inc
aad
dec
fcomps
sbb
test
or
iret
sbb
ds
mov
out
push
mov
jle
rclb
push
test
and
mov
addr16
lahf
adc
jmp
incl
aaa
into
leave
add
adc
pop
rcrb
fildl
jmp
imul
mov
imul
imulb
jne
dec
call
cmp
cld
add
js
arpl
dec
or
fwait
popa
das
and
call
lret
xlat
lock
ljmp
mov
popf
xchg
push
mov
mov
pop
jns
in
push
add
in
aas
adc
jbe
rorl
shl
mov
mov
sti
jae
jns
lret
pop
lahf
push
mov
testb
jle
xor
and
mov
mov
fsubrs
mov
push
mov
ret
xchg
jne
test
nop
mov
in
dec
xchg
loop
adc
test
jl
add
adc
out
cmpl
jge
xchg
mov
pop
sarb
and
push
imul
cwtl
call
sahf
adc
adc
xchg
dec
xor
jge
add
aaa
sarl
test
push
adc
xchg
shll
sbb
add
or
and
leave
or
jne
ja
mov
rcrl
lahf
mov
mov
imul
add
jle
dec
jne
or
push
cmpsl
shl
adc
cld
fisubrs
mov
jno
in
int3
js
dec
inc
in
dec
int
sbb
xchg
sbb
mov
mov
pop
lret
mov
bound
js
xchg
cwtl
inc
pop
mov
jb
imul
sbb
mov
jnp
pop
pop
insb
adc
jl
push
movsb
mov
mov
sbb
dec
xchg
and
add
sub
pop
xchg
push
cmpsl
lods
mov
jae
scas
jg
add
xor
dec
push
dec
cmpsb
gs
movsb
loope
lahf
adc
push
xorl
lock
push
out
outsl
or
mov
pop
dec
sub
add
lahf
jb
bndldx
pop
cmp
outsb
and
sbb
mov
gs
fwait
insl
xadd
jecxz
add
cmp
xchg
les
or
push
and
jae
fwait
out
add
in
add
add
int3
sub
xchg
and
inc
rclb
pusha
sub
sbb
clc
push
mov
das
add
lret
imull
sub
call
mov
aam
movsb
sti
add
leave
fdivs
scas
push
dec
movsb
repz
imull
push
roll
addr16
xchg
adc
cmp
icebp
sub
push
xor
sahf
fs
jb
hlt
push
lods
push
ss
and
pop
add
std
mov
ret
mov
aaa
daa
xchg
in
xchg
pop
jp
cmp
pop
dec
loopne
cmp
imul
test
mov
xchg
xchg
test
adc
lods
addr16
fcomip
mov
js
aaa
lea
movsl
mov
xchg
sti
cmpsb
dec
pop
or
xchg
sub
int3
add
mov
pushf
jg
or
sub
loopne
push
ss
mov
pop
pop
cli
pusha
cmp
push
lods
pop
pushf
cltd
je
sub
mov
pop
mov
das
mov
mov
lahf
loopne
xor
pushf
iret
xlat
xchg
xchg
adc
push
test
mov
sub
xchg
decb
jne
ss
dec
dec
fwait
ret
cli
xor
push
jecxz
stos
stc
repnz
jle
adc
fstl
jl
push
in
mov
lds
rclb
popf
movlps
into
nop
pop
cmp
mov
mov
adc
sub
jmp
cltd
adc
rorl
or
xor
stos
clc
int
cmp
mov
mov
and
mov
dec
sub
pop
cld
arpl
lret
pop
cld
mov
push
fmul
xchg
cmc
add
leave
xor
and
adc
inc
cmp
fdivrs
cmp
pop
dec
scas
xchg
pop
jg
cwtl
and
mov
adc
dec
test
sub
add
mov
jb
xchg
fmul
mov
in
aad
add
aad
call
data16
lds
outsb
pop
pop
out
jl
xor
es
dec
out
sub
fmuls
and
cwtl
jge
clc
test
or
movsl
in
jno
jne
in
scas
push
data16
mov
sbb
outsb
pop
inc
fildll
scas
cmpsl
stc
cli
pop
push
sbb
lret
or
push
inc
data16
inc
js
sub
xor
ds
sbb
mov
je
inc
negb
sahf
ret
push
and
jns
leave
imul
fs
repnz
repz
iret
stos
in
xchg
inc
test
or
clc
roll
hlt
out
xchg
aaa
fcoml
dec
xchg
inc
pushl
push
pushf
pop
mov
sbb
xchg
out
push
movsl
sbb
aam
aas
popf
popa
nop
mov
push
adc
mov
push
ret
mov
ret
pop
jle
inc
hlt
daa
movsl
out
shrb
cmp
je
loop
outsl
jecxz
push
fmull
clc
out
rcrb
sbb
pop
sar
sub
inc
enter
ljmp
rcrb
mov
sbb
cwtl
repnz
int3
jnp
mov
icebp
jmp
or
jecxz
shlb
adc
scas
lea
inc
mov
dec
cmc
xor
dec
jno
pop
std
ljmp
js
xchg
mov
mov
xchg
dec
jno
xchg
xchg
fildl
push
clc
mov
push
jo
hlt
mov
mov
lret
shll
shl
nop
push
jbe
push
dec
xchg
sub
mov
mov
pop
sub
lcall
std
mov
push
jo
std
mov
lods
mov
test
jbe
mov
inc
push
call
jecxz
xlat
lcall
pop
mov
push
push
cmp
inc
jb
ja
sub
out
popf
jl
lcall
pop
aad
orl
or
ds
add
imul
js
jo
pushf
neg
jo
cmp
shrl
mov
adc
ret
sub
sub
jbe
adc
add
and
dec
adc
out
xchg
out
arpl
dec
xchg
sub
add
jo
dec
jle
xchg
mov
lahf
inc
in
sbb
push
negl
test
fstpt
cmp
push
jecxz
adc
xor
lods
sarl
push
lcall
scas
aaa
adc
dec
jae
push
inc
jne
mov
inc
les
sar
dec
ret
stos
out
inc
loop
sub
pop
test
mov
pop
cwtl
mov
add
and
cmc
jne
cltd
loop
inc
mov
cmp
enter
test
pop
es
xchg
push
lahf
lock
sub
sub
cmp
clc
inc
cmp
sbb
pop
push
fldt
les
jno
mov
repnz
sbb
pop
pop
push
pop
in
and
addb
gs
rclb
flds
mov
test
xchg
shl
dec
mov
test
aaa
inc
aam
xlat
daa
das
popf
cmp
cli
fdivrs
and
and
sub
pop
leave
mov
fnstcw
xor
dec
lock
iret
add
add
sbb
inc
sbb
mull
test
loop
sub
mov
fmuls
xchg
shrb
or
cmpsb
pop
dec
lcall
fcoms
sbb
out
adc
inc
scas
cwtl
xchg
clc
push
data16
mov
sub
pop
aaa
xchg
aas
stos
scas
cmp
inc
mov
loopne
cmp
pop
addr16
iret
pusha
lahf
mov
fstp
in
dec
xor
ret
mov
gs
push
popa
jae
std
push
jns
aad
push
aad
mov
jl
enter
test
arpl
mov
adc
pop
or
js
shl
pop
es
dec
aaa
xchg
push
insb
ret
mov
xlat
mov
pusha
sbb
add
xor
cmpsb
clc
xlat
xor
and
xor
jbe
mov
icebp
aam
mov
sbb
in
enter
pop
xor
fs
dec
push
insl
adc
in
imul
push
sbb
aam
inc
int
clc
stc
mov
dec
pop
imul
incb
imul
mov
jnp
mov
shll
mov
fstpl
xchg
push
jnp
gs
adc
cmp
push
aad
test
add
icebp
in
sub
leave
jne
mov
xchg
cli
sub
xchg
aad
add
jg
test
arpl
clc
pop
xchg
add
cmp
sub
ret
popf
mov
das
jmp
add
orl
out
mov
cmp
jb
dec
call
jge
inc
pop
sbb
loope
inc
mov
mov
adc
pop
add
push
mov
loop
ror
insl
mov
mulb
and
data16
jge
adc
jo
adc
xchg
lods
addl
xchg
push
mov
pop
cli
gs
pop
dec
inc
fwait
insl
loope
mov
add
call
mov
imul
lods
dec
push
adc
mov
outsb
mov
mov
cmp
or
jge
cltd
sbb
aad
ja
jl
mov
aaa
fs
adc
push
or
sti
push
leave
ret
lcall
inc
jnp
jmp
mov
mov
add
pop
and
push
push
in
ror
adc
push
repnz
push
sub
fildll
ja
repz
cmp
andl
fnstenv
add
stos
inc
gs
inc
adc
mov
cmpsb
xor
sti
fcmovb
sub
int3
mov
imul
or
dec
mov
sub
mov
or
xchg
loope
or
xor
mov
and
loop
pop
push
scas
lcall
mov
xchg
add
pusha
aam
in
stc
push
loope
push
test
popa
mov
pop
loopne
inc
push
push
sti
mov
jp
push
adc
mov
hlt
xchg
into
xchg
jg
sub
insb
jecxz
adc
in
add
sbb
ja
outsl
lcall
jne
popf
add
adc
repz
jo
and
jo
sub
jbe
inc
je
fdivs
jmp
movsb
add
pop
dec
mov
movsb
inc
stos
out
push
xor
sti
sbb
out
push
jle
outsl
stc
mov
xor
and
stc
btcl
ret
iret
pop
mov
pop
cmp
scas
xor
mov
mov
add
cmp
adc
std
dec
mov
jmp
mov
mov
outsb
out
js
aad
cmp
sub
negb
jae
add
andl
jo
push
inc
pop
lods
ret
loop
adc
dec
loope
sbb
ss
jle
sbb
insb
andl
out
pop
cmc
fucom
roll
push
mov
sub
cmp
mov
jno
sub
lds
les
jecxz
lahf
lods
push
adc
call
adc
insl
pushf
movsl
add
repnz
fistl
test
xor
jnp
lcall
clc
repnz
js
shrl
test
xchg
in
ds
dec
lods
lea
push
mov
fistl
and
sti
repnz
icebp
add
inc
sub
mov
mov
in
nop
mov
enter
mov
jp
or
add
or
or
daa
xorb
dec
inc
pop
cmc
xor
and
sub
fdivr
adc
sahf
mov
imul
fcmovu
dec
in
pop
mov
adc
cmpsl
test
mov
xchg
scas
xor
pop
lods
xchg
cli
clc
push
sbb
dec
jg
fnstenv
push
sbbb
xor
dec
popf
xchg
aas
add
jnp
sbb
ret
mov
mov
out
in
mov
jb
scas
cmpsl
scas
mov
rclb
sub
lahf
xchg
cmc
sbb
pop
movsl
mov
cmp
xor
cs
cmc
les
int
cmc
iret
mov
mov
or
mov
bound
repz
aam
sti
mov
lret
imul
sub
fsubl
test
test
sbb
cs
loopne
mov
lret
cmp
lahf
call
out
popa
mov
sub
les
sbb
xchg
mov
out
cmp
push
movsb
cmc
fadd
ljmp
stos
leave
xor
and
xchg
cmp
lahf
ljmp
push
and
xor
in
and
inc
add
pusha
mov
xchg
xchg
xchg
cmc
pop
aad
ljmp
mov
xchg
add
ret
jl
mov
or
daa
push
sub
rcrb
nop
jnp
jge
mov
add
arpl
push
mov
or
out
cmp
dec
dec
mov
loop
ret
imul
mov
fs
pushf
pop
inc
adc
adc
mov
dec
out
push
testb
stos
sbb
je
clc
dec
push
or
mov
call
in
cmp
fistpll
jnp
in
jmp
fwait
sbbl
mov
repnz
mov
mov
xchg
stc
dec
push
and
cmp
out
lods
subb
cmpsl
fs
sub
lods
insb
lcall
ret
shll
pop
shll
mov
adc
mov
out
push
jmp
pop
roll
divl
sarl
and
lret
and
scas
cmp
es
jnp
ja
ja
stos
out
inc
pop
push
clc
ja
xor
jl
cmpb
test
shlb
push
fmull
pop
sbb
xchg
insl
je
push
pushf
and
xchg
xchg
jmp
in
cmpsl
jne
mov
orb
lret
mov
pop
jl
lret
lea
out
popa
add
aas
inc
mov
jno
jo
push
loopne
mov
add
repnz
sub
adc
mov
pop
and
cwtl
fldl
mov
movsl
mov
and
sub
aaa
lret
fsub
pop
mov
cmpsb
cmp
xchg
notb
pusha
repz
mov
inc
lods
xchg
mov
xor
ret
fdivs
lds
das
jmp
xchg
xchg
fmull
jp
cmp
repnz
xchg
outsb
cmpsl
push
jns
pop
cmp
xor
and
leave
stos
test
xchg
mov
adc
push
pop
aas
push
mov
dec
cwtl
cs
pop
loope
adc
arpl
lock
hlt
sbb
xchg
jecxz
fsubl
inc
mov
dec
scas
xchg
dec
mov
jl
adc
std
push
nop
mov
adc
adc
lods
fdiv
fiadds
mov
or
xor
dec
ss
stos
push
into
stos
dec
dec
idivl
in
xchg
push
subl
jne
inc
into
outsl
std
inc
sub
inc
adc
out
loop
push
lds
mov
or
cs
adc
mov
rcrb
cmp
imul
push
push
mov
fwait
lock
cltd
test
rorl
inc
add
lahf
push
xorb
mov
fadds
xchg
andb
es
ss
xlat
adc
inc
mov
mov
inc
shrl
popf
les
push
stos
icebp
hlt
aaa
call
cmp
jb
iret
pushf
mov
lock
mov
ret
shlb
mov
adc
xlat
lret
add
mov
mov
or
sub
or
push
cmp
lret
scas
aas
arpl
dec
mov
mov
in
push
dec
ds
rclb
es
mov
arpl
jp
pop
fildl
mov
les
mov
and
inc
jp
jge
leave
movsl
mov
jmp
ss
ficomps
mov
imul
xor
inc
lahf
lods
mov
push
std
push
mov
in
mov
inc
roll
dec
std
adc
push
aas
inc
les
mov
sbb
pop
mov
pop
mov
fnstenv
subl
push
cmp
lret
lods
mov
repz
lds
add
cli
jg
push
nop
xor
cmp
push
lret
movl
andb
xchg
inc
mov
cmp
sub
adc
pop
mov
push
ror
in
pop
jne
call
out
cs
add
nop
dec
lea
or
mov
dec
ljmp
mov
outsl
or
lret
pop
push
mov
cltd
stos
outsl
xor
movsb
out
rorb
jg
jge,pn
jmp
into
push
daa
lret
and
xchg
int3
xor
testl
hlt
inc
jmp
sbb
cmp
scas
add
loopne
and
pop
lcall
xor
mov
sbb
sarb
and
lret
leave
xchg
bound
sbb
ljmp
repnz
lret
popf
cmp
hlt
std
jb
jns
and
mov
mov
push
cmp
add
iret
pop
in
push
mov
xchg
add
xlat
mov
pop
test
leave
pop
in
hlt
fwait
ret
insl
int3
pop
and
push
fnstcw
add
bound
notb
mov
sub
in
out
lret
cmc
jmp
arpl
fisttps
jns
loope
and
xchg
or
out
cmpsb
flds
test
rcrb
jg
shll
dec
jne
mov
push
inc
xorb
cmpsb
sbbb
jne
fs
out
icebp
xchg
aaa
insb
jmp
mov
or
popa
stos
lret
mov
xchg
and
ja
insl
incb
leave
stos
jae
jno
inc
inc
jo
shlb
xchg
mov
mov
mov
pop
jo
cmp
mov
jmp
out
std
lret
fs
int
fwait
lea
icebp
mov
loope
push
testb
push
data16
push
int3
ja
shlb
inc
pop
cltd
push
mov
xchg
or
lea
pop
pop
cwtl
in
and
pop
cmp
popf
imul
sub
imul
xor
jbe
push
mul
add
in
ret
orl
pop
or
dec
pop
aad
mov
inc
sahf
js
cmc
pop
fiaddl
xchg
jl
ljmp
push
insb
xor
loope
lds
repnz
dec
imul
movsl
jbe
mov
push
nop
sbb
mov
negl
xchg
xchg
add
hlt
nop
ljmp
push
leave
jns
roll
and
pop
icebp
pop
in
sbb
sbb
ja
mov
testl
test
xor
cwtl
scas
ljmp
xchg
test
andb
cs
out
or
inc
stc
test
sub
xor
fidivrs
das
xor
inc
inc
je
push
dec
lods
push
leave
mov
mov
lret
into
xchg
push
lret
pop
int
jns
cltd
testb
bound
mov
mov
mov
popa
dec
out
loop
jmp
clc
lods
adc
ljmp
ficoms
pop
mov
inc
scas
mov
adc
inc
sahf
hlt
sbb
xorl
es
stc
sbb
js
lock
stos
pop
lret
ss
iret
sbb
cld
mov
pusha
push
scas
pop
ds
stc
pop
jp
cmpsl
or
xor
ljmp
adc
or
xchg
cmp
scas
cmp
rcr
dec
push
lods
mov
dec
mov
xor
out
adc
loope
pop
mov
jb
mov
dec
xchg
or
aas
cmp
sbb
dec
pushf
idivl
hlt
pop
and
xchg
clc
push
mov
sbb
aas
in
xor
enter
mov
int3
int3
dec
loopne
sahf
mov
adc
push
lret
cld
div
xchg
inc
stos
inc
xor
aaa
outsl
outsl
inc
test
inc
and
cli
xor
fdivl
fnsave
or
xor
clc
aaa
pop
xlat
push
pusha
movsl
int
or
jo
pop
lahf
clc
mov
je
adc
mov
mov
ret
push
dec
dec
push
mov
sub
mov
cmp
add
jno
mov
jmp
mov
je
mov
or
ds
fidivrs
lds
ds
mov
and
inc
xor
mov
jo
pusha
xor
cmovnp
mov
movsb
test
popf
call
add
mov
adc
xchg
pop
add
lahf
scas
fsubr
repnz
test
mov
jl
mov
sahf
sahf
sub
xchg
and
adc
mov
adc
scas
insb
lods
sahf
inc
xor
push
mov
test
pushf
fcoml
jp
clc
inc
cli
fcoml
stc
in
daa
fsts
lock
mov
or
xor
in
xor
and
nop
in
ja
loopne
dec
inc
aaa
stos
pop
lahf
repz
cwtl
push
jbe
adc
inc
cmp
mov
test
icebp
jl
sti
fbld
and
in
pop
pusha
pop
out
fwait
adcb
pop
popa
int
add
inc
jnp
mov
add
mov
pop
mov
mov
cltd
repnz
out
fsub
loop
push
ficoml
fldenv
and
add
mov
xor
pusha
scas
andl
jle
sahf
mov
mov
cmp
fldenv
and
dec
lds
orb
mov
mov
enter
add
xchg
aam
mov
inc
test
jno
imul
ror
xor
cmp
ss
dec
push
das
hlt
shl
xchg
xor
or
mov
mov
mov
fldl
out
aam
jno
icebp
adc
jecxz
add
pop
lds
sbb
xchg
repz
cmp
sub
mov
cmp
fisttpll
sbb
pop
pop
outsb
fwait
push
push
or
xor
push
rcrb
out
stos
int
cmpsb
xchg
push
pop
stc
mov
xchg
push
or
inc
outsl
adc
stos
adc
adc
out
xchg
push
das
push
pop
inc
rclb
dec
loop
cmc
arpl
push
lods
sub
jl
jp
jnp
out
jl
sub
scas
mov
fidivs
jmp
add
out
push
call
jns
inc
xchg
daa
and
sub
ret
inc
xchg
push
nop
in
pop
out
ret
sbb
mov
adc
jo
test
fiaddl
cltd
test
les
movsb
mov
dec
jnp
dec
fcomp
cs
ja
jge
xchg
push
mov
je
lahf
clc
cmp
adc
scas
and
and
loopne
mov
pop
fstpt
push
jg
aas
int3
shrw
in
xor
sub
jbe
push
adc
cmp
aam
ja
sub
repnz
jge
xchg
xor
jne
hlt
mov
cmpsl
roll
fmull
inc
cmp
stc
push
adc
cmp
int3
mov
add
mov
aas
cmp
push
inc
jb
pop
imulb
idiv
cmp
xchg
mov
cli
adc
push
popf
insl
mov
inc
in
cwtl
dec
es
xchg
sbb
add
add
sub
dec
xchg
cli
popa
mov
push
sub
mov
repz
dec
jle
dec
lods
scas
cmp
dec
and
cmp
xchg
scas
push
cmp
popl
movb
loopne
jmp
jne
xor
fs
rcll
in
into
orl
out
iret
mov
lods
cld
jmp
call
jne
dec
add
inc
lods
aaa
mov
mov
inc
fbld
sub
cmp
add
outsl
fcoms
push
test
daa
push
jbe
outsl
push
loopne
andl
push
xor
cmp
mov
push
mov
inc
push
aas
imul
pop
inc
jo
ljmp
mov
in
mov
mov
mov
mov
ljmp
aad
addl
push
mov
outsl
lahf
jle
sub
sbb
jb
popa
imul
or
adcb
xor
stos
inc
gs
mov
mov
dec
pushf
mov
fcoms
test
and
push
cld
add
in
sbb
and
jl
jge
push
rcrb
sbb
jle
cmpsb
pop
outsl
rcrl
adc
xchg
outsb
nop
xchg
mov
inc
xchg
loope
inc
dec
sti
imul
repz
mov
add
mov
ret
imul
xor
negb
dec
jp
out
je
xchg
dec
xchg
xchg
push
lods
push
jl
xchg
adc
xlat
cmp
insl
sbbb
mov
jo
insl
loope
xor
pop
lea
fs
and
cmpsb
popa
lea
add
rol
int
sub
inc
push
add
sbb
and
inc
roll
and
aas
xchg
mov
push
gs
dec
jns
popf
xchg
dec
out
mov
push
xor
ror
shrl
movsb
imul
xor
add
xor
mov
pusha
sbb
lret
jb
mov
adc
out
sub
aam
cwtl
and
lds
fildll
loope
pop
test
push
aad
pop
data16
mov
or
das
mov
repz
dec
pop
mov
insb
pop
test
outsb
dec
xor
loop
cmpsl
jg
and
push
cltd
in
cs
push
repnz
shrb
nop
ss
out
sub
mov
dec
push
data16
xor
sub
outsl
addl
loope
add
pop
sarb
aaa
jne,pt
pop
adcb
push
je
xlat
jbe
mov
mov
sbb
inc
test
es
fwait
mov
mov
daa
int
cld
les
cmpsl
inc
xchg
leave
inc
xchg
mov
add
lcall
dec
jns
xchg
mov
mov
pop
mov
jnp
movsb
iret
push
jp
arpl
cmp
in
clc
std
push
mov
icebp
outsl
movsl
enter
in
loop
jmp
mov
mov
into
push
pop
out
add
and
mov
andl
lock
sbb
or
jno
and
jg
xor
jle
push
sbb
mov
jle
or
adc
pop
cmp
mov
aas
mov
stc
sbb
cmovno
aad
jmp
sbb
xchg
cmp
arpl
push
push
cwtl
orl
dec
test
cli
loop
xchg
cmp
dec
push
adc
jns
clc
jg
fbstp
or
push
movsb
fcmovnbe
fsubr
jge
push
sbb
insb
cmc
ljmp
ds
mov
ret
add
rcr
mov
push
push
add
and
cmp
test
sub
dec
orb
cmp
cmp
mov
xor
sub
data16
xchg
xchg
and
dec
and
xchg
call
insl
loop
push
fld
mov
or
andl
or
pop
mov
pop
inc
inc
jo
or
out
mov
pop
sti
or
cmp
or
test
stos
aaa
add
jo
das
jne
in
cltd
rcrb
sub
sub
iret
fnsave
subl
mov
rcl
lds
rorl
pop
or
mov
xlat
inc
sub
fadds
mov
mov
ja
add
fldenv
shrl
push
out
loopne
stc
add
stos
sub
imul
inc
or
daa
pop
jo
fsubrl
test
dec
pop
mov
jle,pt
enter
imul
fsubrl
adc
rcll
push
out
clc
scas
out
fdivr
ret
push
and
sub
pop
cwtl
sbb
adc
jmp
adc
cmpb
cmp
out
or
out
mov
test
inc
loope
xchg
jg
cmpsb
xchg
shl
hlt
test
call
pop
movsb
xor
inc
dec
mov
nop
daa
fcomps
sbb
or
imul
scas
mov
jmp
orl
out
jmp
jae
fidivs
xor
hlt
scas
xchg
adc
push
scas
and
mov
or
adc
jmp
pop
pop
push
fstpt
in
push
sbb
lods
sub
mov
xchg
cmp
add
shlb
mov
ss
mov
cmpsl
or
jle
cs
shrl
pusha
xchg
popf
mov
jbe
insb
cmpsb
gs
sub
adc
sbb
sub
and
fistl
mov
in
gs
jmp
jg
fisubrl
adc
jle
std
adcl
pop
in
icebp
fdiv
mov
mov
cld
xor
addr16
bound
scas
mov
aam
not
es
sub
std
jle
sub
jb
rorl
dec
jnp
mov
jg
mov
adc
sahf
adc
jg
pop
lret
sarl
or
mov
inc
psubd
dec
xchg
loop
int3
push
imull
xor
hlt
cmp
inc
loop
arpl
andl
cli
mov
jne
inc
inc
aam
icebp
js
push
sub
je
out
ss
imul
push
cwtl
cmp
movsl
int3
mov
ljmp
ja
outsb
jns
xor
jb
cmc
sbb
cmp
psubq
pop
dec
in
jge
test
nop
and
mov
shrb
cmp
insb
mov
dec
dec
pop
xchg
xchg
sub
stc
jmp
push
roll
fsubr
nop
push
mov
enter
sbb
enter
lahf
sbb
out
clc
push
push
mov
outsb
add
jg
adc
jno
cmpsl
mov
in
and
push
fcoms
push
or
sub
test
push
add
cwtl
out
mov
sub
pop
insb
stos
ss
scas
into
imul
jge
inc
pop
push
pop
push
xor
mov
sbbb
mov
outsb
ret
inc
movsb
mov
outsl
sbbl
stos
gs
pop
cld
and
dec
sbb
inc
fidivrs
stc
jbe
icebp
jl
pusha
lock
jbe
scas
cmp
adcl
enter
mov
xchg
enter
imull
pop
aas
shrl
and
movsb
daa
inc
inc
dec
popa
mov
into
mov
mov
inc
or
jmp
push
outsl
inc
cwtl
add
add
add
sub
mov
push
fsubs
pop
and
mov
shrb
mov
xchg
cmc
ds
dec
sub
stos
mov
xor
xchg
in
leave
test
lods
cmp
adc
outsb
enter
pop
jp
rcl
addr16
dec
es
prefetchwt1
sub
out
or
adc
or
sahf
lods
out
inc
xor
aaa
mov
in
mov
clc
sahf
mov
cmc
sub
xchg
ja
out
sbb
xchg
aaa
or
jnp
add
sbb
sub
shll
xchg
sub
xchg
or
fisttpll
inc
sub
repz
sbb
dec
sub
std
cmp
pop
lods
or
imul
push
das
scas
jne
repz
aas
pop
fidivrs
pop
pop
es
out
sub
lods
cs
rcrl
leave
sub
movsb
xor
adc
pop
sbb
out
test
mov
rcrb
sbb
rclb
xchg
dec
mov
mov
mov
popf
xchg
mov
adcb
jl
imul
leave
or
or
inc
xor
neg
leave
lret
push
notb
dec
icebp
bound
aaa
loop
fidivl
popf
lds
mov
cmpsl
sub
mov
dec
mov
inc
mov
xor
fistpll
jmp
imul
subb
push
fisttpl
stos
pusha
cld
in
cmp
mov
inc
push
dec
cmc
dec
movsl
xchg
cli
jo
dec
inc
mov
aas
stos
inc
pusha
pop
sarb
mov
jo
jae
push
pusha
xor
xchg
lcall
pop
into
aad
lret
lret
pop
jne
int3
and
mov
fwait
outsl
pop
hlt
push
ds
loopne
pusha
call
cmpsb
xchg
jg
inc
ds
popf
pop
fimull
sahf
cmp
cmp
xor
mov
mulb
jae
popa
mov
cmp
nop
add
mov
or
add
repnz
loope
outsl
lods
std
cmp
in
mov
push
xor
or
popl
mov
fcoms
roll
mov
dec
push
out
fstps
cmp
aaa
sbb
mov
sarb
mov
push
fldenv
mov
cwtl
sub
xlat
nop
test
fwait
das
lret
pop
cmp
or
push
adc
bound
lahf
pop
je
ja
cmp
sub
and
cmpsl
cltd
sub
mov
lea
bound
mov
xchg
mulb
pop
not
pop
out
stc
fldl2e
bnd
push
adc
lods
fst
cmp
and
iret
dec
push
adc
out
push
ja
mov
add
mov
ss
stos
inc
in
push
mov
movb
xchg
jb
andl
je
shrl
fldl
sub
ds
aam
xchg
ja
push
test
das
fst
divl
rcrb
cltd
and
sbb
mov
cmpsl
ljmp
insl
cs
dec
fcompl
cmpb
push
ja
imul
sbb
add
pop
push
outsl
add
shld
rcr
pop
xchg
dec
lods
stos
xor
mov
xchg
test
jns
cmp
inc
test
jmp
pop
xor
jg
sub
mov
fwait
mov
push
cmp
std
jnp
mov
xorb
loope
cmp
icebp
mov
je
cmc
jecxz
jmp
fbld
enter
outsb
mov
lret
xor
mov
xor
or
push
movsb
enter
sbb
and
ja
lods
jmp
inc
and
std
xor
cmpsl
scas
lock
dec
pop
aam
fs
shlb
xor
mov
pop
shrl
imul
pop
pop
jmp
mulb
ror
fidivrl
shll
add
jge
lret
sub
aaa
mov
sub
das
mov
cmp
out
xchg
in
das
stos
lods
cmp
mov
fsubs
pop
push
adcb
adc
cmp
test
jbe
pop
sub
mov
daa
or
adc
cmpsl
mov
mov
ds
aad
insl
ror
sarb
outsl
add
pop
leave
shll
fstps
sbb
dec
loop
adc
fsubrl
adc
imul
jmp
loop
jo
fs
xor
and
mov
and
sub
pop
sbbb
sbb
or
cmp
cltd
dec
inc
jg
imul
mov
inc
dec
gs
movsl
jl
add
notb
lods
sahf
ret
jo
cmpl
fstl
dec
mov
loopne
mov
in
adc
push
loope
lret
xor
sub
jmp
rcrl
push
call
call
das
and
std
push
imul
mov
rcr
out
xor
cs
push
mov
inc
int
sub
sbb
imul
popf
cmp
pop
rcrb
jnp
jo
into
sub
shlb
sbb
mov
pop
fcompl
dec
dec
sub
and
lds
or
or
lock
xchg
adc
mov
sbb
inc
dec
xor
repz
test
bound
stc
inc
xor
lock
push
test
jg
mov
cli
dec
cmp
loop
jp
mov
inc
aad
push
push
mov
add
push
shrl
rcll
mov
sub
fsubrp
push
gs
ja
pop
mov
bound
pushf
gs
outsl
sti
inc
mov
or
adc
sbb
pop
out
cmp
arpl
lds
pop
mov
ret
cmpsb
pushf
insl
xor
fidivrl
xor
xor
push
test
sub
scas
push
movsb
gs
cmp
inc
push
mov
sbbl
dec
or
sbb
mov
cmp
pop
sbb
lds
mov
sbb
popa
scas
pop
je
cmc
jno
pushf
sbbb
jns
or
push
shlb
lods
push
lods
std
repz
adc
loopne
aad
mov
fidivrl
je
jg
lss
clc
cmpl
xlat
imul
bound
js,pn
ret
and
push
mov
and
lea
inc
loopne
daa
shl
cwtl
ja
mov
mov
or
sbb
sub
jne
addr16
dec
sbb
cmp
int3
pop
mov
jbe
sub
inc
jae
mov
xchg
lods
rcrb
sub
pop
push
dec
cmp
dec
inc
cmpsl
adc
push
jo
mov
push
sahf
fsubrl
mov
jg
pop
cmp
das
xor
jg
mov
rolb
and
insl
lea
and
jne
insb
mov
mov
cwtl
and
mov
jg
out
and
fcomps
fcoms
add
xchg
xchg
mov
xor
out
ret
jns
push
adc
clc
push
xchg
lods
xchg
push
inc
ja
xchg
push
movsl
sti
xlat
push
add
adc
ds
popf
ds
loopne
cmp
adc
dec
test
mov
popa
cwtl
or
test
out
fs
cmp
push
push
add
pop
imul
add
xchg
push
iret
out
out
cld
lret
pop
in
or
rcll
leave
push
mov
shrl
addl
divb
divb
adc
mov
fmull
sbb
jnp
mov
je
push
stos
push
jmp
std
out
adc
cmpsb
jecxz
out
cmp
or
jbe
push
repnz
rcr
xor
push
dec
movsb
insl
scas
cli
sbb
adc
negb
mov
ret
sbb
loop
addr16
jo
bound
arpl
pop
xchg
pop
repz
out
ret
js
lcall
jl
pop
sub
push
daa
add
xor
sti
addr16
inc
roll
insb
aad
arpl
iret
pop
fcmovu
xchg
pop
out
mov
jnp
push
lds
es
mov
and
movsl
dec
jo
pushf
pop
sub
negl
push
popf
mov
inc
insb
hlt
outsl
mov
add
sbb
fwait
mov
loopne
xor
mov
mov
test
pop
xchg
orb
push
sbb
jecxz
stos
or
test
dec
mov
cmc
dec
ljmp
pop
sbb
pop
addr16
xchg
mov
scas
scas
popa
jl
pop
mov
xchg
cld
xor
mov
loopne
es
pop
sarb
aas
cmp
xor
xlat
insb
imulb
xlat
jle
lods
test
push
cmpsb
pop
xor
push
imul
jbe
dec
xchg
sub
push
lcall
xchg
js
cltd
nop
add
popf
imull
fwait
jbe
pusha
xor
inc
adc
arpl
pop
jmp
int
mov
clc
dec
sbb
dec
ds
lret
lea
and
or
ret
xchg
cli
adc
vcvtdq2pd
xor
arpl
and
and
cmp
xchg
fcomp
fnsave
mov
fdivrs
or
aad
pop
shlb
outsl
mov
push
leave
test
pop
mul
sbbb
out
pop
int
es
push
pop
fsub
mov
push
ficompl
lret
xchg
fldenv
imul
gs
fnstsw
ja
push
pop
lcall
jb
cmpsl
push
xlat
cmp
mov
fnstcw
jg
push
int3
into
xchg
icebp
jne
mov
shrb
rol
jmp
int
sbb
adc
mov
leave
cvttps2pi
mov
lret
lods
mov
adc
inc
mov
dec
out
iret
jbe
sbb
mov
mov
xor
imul
add
or
in
pop
movsb
ret
repz
fistpl
shlb
subl
xor
outsl
arpl
or
inc
or
push
orb
lcall
cwtl
fisubl
bound
es
adc
setns
imul
mov
jb
das
or
jnp
dec
into
jp
mov
mov
icebp
outsb
out
add
adc
xchg
sbb
dec
and
pop
call
fcoms
loopne
stc
ror
xchg
lea
fidivl
ds
inc
test
loopne
push
repnz
inc
das
repz
aad
push
fwait
loop
jp
rorl
sbb
push
inc
testb
inc
es
jp
nop
in
sub
cmp
fwait
xchg
decb
subb
sbb
inc
lods
inc
cmpsl
xor
xchg
lcall
mov
dec
fimuls
data16
iret
ret
outsb
adcb
or
xchg
or
sbb
enter
sbb
xorb
jp
pop
sub
imul
mov
call
int3
std
add
inc
fs
jo
icebp
fistpll
jg
jp
jnp
getsec
push
xchg
adcb
rol
cmp
jae,pn
push
or
fwait
addr16
push
fmuls
cs
sub
out
fstl
or
xchg
xchg
jb
aas
mov
dec
ljmp
push
jb
and
sub
adc
and
js
push
jno
or
mov
fisttpll
mov
inc
pop
cltd
push
vprotb
out
add
add
std
mov
popf
in
xchg
push
out
inc
mov
pop
les
adc
jmp
jle
jns
sbb
ljmp
or
leave
mov
imulb
lea
jp
jg
push
lds
mov
mov
xor
shll
pop
jne
testl
mov
sub
or
jmp
dec
mov
inc
ss
lcall
out
xchg
aas
mov
jl
mov
jle
or
and
push
insl
lret
test
in
mov
jge
loop
sahf
lock
add
insl
add
adc
stos
aaa
fdivs
dec
xchg
shr
icebp
sahf
adc
and
xlat
call
sahf
mov
push
push
mov
cmp
out
sbb
xor
stos
mov
lods
inc
imul
jno
imulb
loopne
push
testl
aad
and
jp
iret
mov
ror
pop
movsl
scas
dec
hlt
cltd
popf
iret
or
sub
das
test
cs
imul
mov
mov
rcrl
repnz
sub
push
adc
mov
ja
ss
stos
jecxz
fstps
dec
nop
mov
mov
aas
inc
lret
sbbl
repz
lock
sub
inc
in
in
idivl
into
stos
inc
jne
pop
cs
cmp
sbb
pop
push
jbe
jl
sbb
sbb
lret
outsb
loop
push
cltd
aaa
or
outsb
mov
imul
aas
mov
add
fidivl
leave
xor
mov
pop
mov
or
mov
lcall
cmp
sub
inc
addr16
jns
aaa
pusha
nop
fcom
bound
mov
outsl
test
and
push
test
sbb
idivl
dec
fisubrs
push
ljmp
push
pop
int3
xchg
negb
imul
in
inc
add
sub
pop
leave
notb
scas
cmc
outsb
int
in
sbb
imul
and
ret
daa
jns
popa
push
xchg
int3
das
shrb
adc
and
enter
inc
es
mov
xchg
rcll
push
lock
push
xchg
fldt
bound
les
add
rcl
fmull
mov
dec
pop
and
sahf
push
aam
mov
jb
xor
repz
fwait
lret
dec
or
lods
fsubp
mov
out
fisubs
cltd
sar
in
repz
std
ljmp
or
mov
cmc
jo
sub
mov
loopne
mov
cmpsb
xchg
leave
test
pop
test
push
dec
aad
into
push
add
imul
pushf
not
mov
cmp
fistpl
sub
pop
fiaddl
icebp
xchg
mov
push
adc
insl
inc
adc
jmp
mov
shr
inc
xor
pushf
mov
ja
dec
inc
xor
in
xor
movsb
inc
rorl
or
xchg
adc
popa
jno
dec
addl
lret
push
aaa
xchg
testl
xchg
and
in
jb
sub
ljmp
test
pop
cmpb
inc
insl
mov
cmp
fsubrp
das
mov
inc
mov
pop
test
cmpsb
in
test
jb
test
dec
imul
dec
jmp
lds
adc
es
mov
inc
scas
repz
cmp
mov
out
mov
mov
pop
rclb
xor
add
sub
stc
out
jmp
leave
mov
mov
cmp
xchg
cld
add
faddl
adcb
adc
les
inc
fidivs
cmp
add
int
cmp
test
hlt
adc
sub
lds
arpl
mov
cmp
inc
push
loope
pop
stos
jno
int3
cmpsb
jns
psubusb
and
cmp
js
in
dec
mov
sti
push
sbb
les
pop
or
lods
xchg
fcompl
sbb
out
jge
cmp
repz
pop
mov
stos
andb
das
sbb
ds
jae
ds
les
cmc
dec
lods
sti
cmp
cmp
inc
push
or
bound
inc
add
iret
addr16
insl
inc
ss
push
loop
fbld
sbb
sub
mov
fcoml
push
pop
pop
mov
jb
xchg
lahf
mov
push
adc
mov
call
shrb
dec
push
cmp
dec
int
ffree
cs
movsl
call
mov
leave
mov
sbb
jmp
mov
test
jmp
out
mov
pushf
mov
inc
leave
inc
lods
cld
iret
pusha
cmp
pop
aaa
mov
loop
shl
mov
sbb
jnp
cld
and
cwtl
sub
jbe
fs
xchg
or
out
dec
jnp
mov
shll
icebp
xor
mov
adc
push
mov
out
mov
mov
and
rclb
jle
push
std
ljmp
mov
pop
daa
xchg
sub
push
movsb
jecxz
cmpsb
mov
test
mov
les
mov
mov
push
jecxz
pop
rcrb
pop
jmp
push
push
jge
mov
clc
xchg
or
jg
test
jecxz
mov
rcll
dec
sbb
fnstenv
dec
mov
dec
loope
leave
repnz
sar
hlt
push
mov
lcall
xor
mov
dec
mov
popf
jle
outsl
testb
sub
insb
fsts
paddb
movsl
push
and
pusha
mov
iret
imul
push
int3
pop
mov
adc
lods
push
test
mov
and
jle
or
jns
outsb
push
dec
sbb
jo
cmp
mov
rcrl
iret
or
jp
jo
stc
sbb
pop
ja
imul
mov
add
adc
lcall
dec
sub
pop
in
push
cld
adc
outsb
repnz
and
mov
push
pop
sbb
outsb
adc
or
mov
adc
fidivl
push
inc
sbb
lret
adc
or
sarl
xchg
scas
addr16
and
xor
dec
pop
push
mov
lods
lds
fwait
mov
out
pop
jp
cmc
push
test
sub
imul
loopne
pop
and
xchg
lret
xor
adc
jle
arpl
mov
jmp
pop
lret
xchg
repnz
add
or
insl
fnstenv
in
mov
pop
imul
cmpsb
and
in
fisubl
int
push
fistpl
adc
sub
jae
add
fdivp
inc
dec
pop
imul
inc
pop
dec
adc
nop
insl
pop
gs
repnz
pop
in
sub
push
scas
adc
shrl
enter
fbld
fucomp
sbb
add
scas
add
push
add
out
mov
push
lcall
setbe
mov
and
insb
xchg
leave
mov
mov
ljmp
inc
cmpsb
push
jp
sbb
inc
in
xor
adc
wrmsr
and
fiadds
inc
xchg
pop
lret
or
mov
lret
dec
cmpsl
loope,pt
jo
xchg
lock
pop
movsb
into
push
mov
and
mov
or
sbb
adcb
stc
pop
add
jo
adc
shrb
movsl
enter
in
push
xchg
pop
shll
pop
call
int3
sub
jae
jb
add
inc
and
sbb
xor
adcb
mov
inc
and
sub
fsubs
divl
ret
jl
push
inc
and
je
pop
sahf
push
test
ret
adc
ret
unpcklps
jp
call
inc
or
stos
sub
jno
iret
sub
dec
cmp
add
add
out
lods
addr16
btc
or
inc
and
pop
and
out
add
pop
nop
sbb
call
fstps
cmp
ret
aaa
xor
inc
lcall
nop
xchg
or
dec
popa
ficoms
lahf
mov
add
pop
lcall
mov
pop
xchg
mov
xor
adc
mov
iret
ret
loop
daa
add
inc
cli
xchg
sti
push
mov
inc
mov
sub
insl
testb
adc
xchg
sbb
int
je
flds
fidivl
fsubrs
movsb
ret
sahf
lods
shll
mov
out
jns
mov
sbb
sub
jo
fsub
or
sbb
jno
pusha
mov
push
aas
dec
dec
cmpsl
out
sbb
test
cmp
jmp
pop
jne
insb
mov
sbb
pop
lods
stc
loope
jbe
push
jo
push
inc
or
push
push
mov
vcmpss
fcompl
mov
nop
lret
mov
fldenv
sarb
lahf
mov
jg
call
jmp
xor
popa
jnp
push
rcll
std
jl
push
mov
pop
mov
sub
inc
mov
jo
ss
loopne
fbstp
mov
mull
pop
ret
xchg
arpl
ds
jb
lret
loop
stos
push
iret
pop
das
fdivl
fsubrp
push
xor
sbb
dec
or
sub
pop
imul
out
loop,pn
pop
shll
pop
mov
add
lods
sti
into
push
pusha
aad
scas
sbb
fldenv
mov
data16
pop
repz
iret
mov
push
jmp
jb
or
loop
loope
shrb
xor
into
int
in
bound
dec
fucom
pop
pop
lcall
fwait
cmp
jns
sahf
nop
fists
sub
ja
add
xor
push
lret
aad
test
xchg
push
shrb
fcompl
mov
icebp
xchg
and
js
daa
imul
mov
insl
stos
dec
cmp
xor
in
jmp
imul
mov
decl
inc
unpckhps
out
mov
mov
cmpsl
gs
sbb
xchg
pop
lret
or
jecxz
pop
inc
loopne
push
add
sbb
fs
leave
movsb
sub
fs
aad
jecxz
bound
test
pop
jo
or
inc
push
int
outsb
insl
push
and
notb
jno
and
in
test
sti
fs
mov
ret
movd
scas
lods
adc
pop
cwtl
mov
mov
mov
clc
roll
mov
nop
imul
sbb
fistpll
adc
jmp
clc
ljmp
cld
pop
sub
pop
or
mov
xchg
jns
out
and
and
dec
jecxz
mov
lods
out
daa
and
ret
dec
mov
mov
ljmp
dec
rcrb
push
jnp
rol
inc
dec
gs
pop
mov
sub
lods
dec
gs
pop
dec
pop
mov
aam
lods
xor
clc
and
inc
repnz
xor
iret
clc
aad
or
dec
das
jp
mov
push
add
mov
and
out
popa
xchg
pop
call
jl
out
cltd
fwait
lods
cmp
or
das
lods
in
mov
into
mov
dec
fbld
mov
ds
add
and
push
mov
pop
stos
movsb
push
repnz
cmpb
in
pop
cmp
cli
lods
fcmovnb
push
cmp
outsb
repz
mulb
cmp
or
mov
movsb
icebp
dec
fmulp
inc
fdivl
jmp
adc
mulb
sbb
outsl
cmp
pop
sbb
xorl
iret
scas
jns
xchg
mov
adc
outsb
lock
mov
lcall
inc
fs
imul
jmp
cmp
scas
imul
pop
std
rcr
xchg
pop
push
cwtl
cld
pop
lcall
dec
xor
in
dec
das
jae
mov
rclb
adcb
rclb
jg
pop
popa
movsl
lahf
jb
das
xor
ljmp
and
pop
lods
mov
popa
sbb
shrb
movsb
incl
cli
clc
push
xor
sbb
ret
inc
pop
lret
jo
sarb
imul
inc
sub
nop
mov
dec
jp
xor
add
test
push
fidivrl
daa
pop
mov
in
icebp
andb
test
movsb
lret
fidivrs
in
mov
rorb
cmp
mov
mov
test
or
pop
push
xchg
das
xchg
loopne
push
or
push
outsl
subl
jge
adc
sub
inc
scas
cmp
xor
push
call
mov
jo
pop
pop
push
in
movd
sbb
repz
imul
popa
push
push
mov
cmp
mov
movsb
popa
pop
in
fs
jmp
icebp
out
insb
jge
rorl
popf
mov
dec
test
mov
cmp
pop
pop
cwtl
fidivl
pop
imul
aas
and
and
daa
pop
sub
mov
addl
int
mov
cmp
mov
aad
jo
xchg
dec
dec
ja
cltd
shlb
mov
dec
dec
fwait
xlat
in
fnstsw
xor
ficoms
pop
sub
mov
lret
mov
shl
lret
dec
icebp
push
cmp
popf
movsb
mov
xchg
pop
push
sub
add
push
sti
jmp
leave
adc
jmp
or
adc
inc
mov
cltd
out
mov
repz
push
xchg
pop
xchg
mov
popf
es
imul
std
enter
inc
int3
pop
out
adc
lret
add
cwtl
fldpi
shrb
xchg
push
mov
push
aas
lock
scas
sub
scas
cltd
inc
cmp
ljmp
jp
push
int3
adc
ja
cmc
aam
mov
lock
iret
add
imul
and
jo
push
jg
xchg
ss
cltd
push
rol
jbe
jle
inc
xchg
push
in
cmpsb
jmp
push
inc
adc
push
test
cli
int
mov
jne
or
fwait
inc
notl
mov
xlat
fadd
push
les
xchg
movsb
jmp
das
stc
cmp
inc
xchg
jb
negl
imul
outsb
aaa
insl
rcrb
jae
adc
jge
add
and
jg
cwtl
inc
xchg
push
and
movsl
insl
mov
jp
cmc
pop
fcmovnu
mov
in
rclb
mov
or
jno
cltd
xchg
fldenv
mov
aad
je
mov
jae
push
decb
cmpsl
lret
mov
jb
dec
sub
sbb
shr
xchg
jecxz
jecxz
mov
sbb
test
and
ret
mov
adc
push
adc
out
loopne
es
mov
jle
icebp
xor
push
pop
inc
pushf
add
fists
sub
scas
push
dec
subb
test
iret
mov
xor
sub
sub
adc
mov
push
and
mov
lea
sbb
pop
sbb
dec
adc
inc
sbb
fcoml
cwtl
mov
mov
lret
add
sbb
push
loopne
mov
mov
xor
mov
mulb
or
ljmp
xor
outsb
or
xchg
adc
ljmp
sbb
ret
ficompl
push
je
cld
cmp
inc
sub
adc
add
mov
mov
cmp
hlt
imul
dec
movsl
push
sbb
fcom
xorb
xlat
insb
sbb
orb
jmp
mov
mov
bound
adc
out
in
repz
mov
xor
sub
mov
or
int
add
mov
pusha
and
push
xor
xor
xchg
sub
xor
inc
adc
push
movzwl
ret
repz
ficoml
or
movsb
pop
jp
fcompl
mov
lods
cmpsb
add
xor
cwtl
and
call
repnz
mov
adc
call
xor
lret
popf
popa
xchg
push
jne
int3
call
mov
xchg
or
sub
icebp
jmp
xchg
adc
aaa
sub
xor
sub
scas
jb
hlt
cmp
fcompl
xor
sub
pop
jle
mov
pop
sti
jo
pop
dec
push
and
mov
mov
push
bound
xchg
mov
sbbl
adc
sbb
rcrb
fimuls
test
jecxz
lods
mov
cmp
cs
lea
add
sub
xchg
xor
bound
mov
aaa
ret
ljmp
cmp
or
cmpsl
dec
mov
int3
dec
hlt
mov
dec
out
leave
mov
pop
jo
mov
push
scas
sub
pop
xchg
movsb
pusha
aam
ret
ret
shlb
mov
xchg
jle
mov
nop
shl
jl
mov
sbb
inc
inc
sbb
aas
mov
das
loopne
test
sub
dec
or
fcomp
nop
jne
xchg
add
insb
sub
outsb
ja
popa
data16
ljmp
mov
ja
insl
daa
xor
das
push
or
mov
mov
test
aad
pusha
adc
aad
mov
iret
popa
popa
daa
lret
push
dec
shll
lret
or
lea
out
cmp
mov
jle
cmp
fmuls
dec
mov
fsub
adc
xor
adc
imul
sub
add
sub
loopne
mov
mov
jb
loop
scas
mov
ret
mov
mov
jo
sub
push
cltd
lret
repz
aaa
imul
xchg
adc
pop
pop
cmp
dec
and
xor
dec
inc
cwtl
inc
xor
jmp
gs
mov
add
frstor
pushf
imull
cltd
xchg
dec
out
in
das
std
sub
mov
sub
add
inc
add
adcb
push
test
test
mov
pop
cwtl
mov
jg
sub
mov
addl
inc
jg
xor
pusha
adc
cld
xchg
mov
jo
arpl
dec
vcvttss2si
inc
push
jbe
jnp
or
push
outsb
pusha
sub
sahf
testl
and
adc
pop
dec
lods
and
jb
push
pop
xor
lock
int
sub
push
es
inc
jp
jp
loop
clc
xchg
cmp
pop
add
cmp
fwait
jl
mov
adc
mov
pop
sbb
dec
stos
lret
dec
pop
mov
jne
call
rcrb
mov
fldt
dec
jo
mov
and
mov
sub
add
dec
pushf
lret
movsl
fists
mov
jecxz
pop
hlt
jle
ret
loop
in
daa
lret
jg,pn
xchg
scas
iret
pop
jns
inc
xchg
in
insb
pop
mov
imul
dec
out
mov
adc
cmp
notb
push
pop
mov
sahf
inc
divl
sbb
xor
lods
scas
jmp
ficoml
aam
xor
mov
aaa
pop
jns
mov
jp
nop
bound
or
pop
fs
daa
in
jg
sti
mov
dec
push
std
aad
xor
or
add
lea
lret
sti
inc
jne
adc
push
mov
push
cwtl
scas
shlb
push
jo
daa
sarb
jl
sub
inc
pop
es
sub
inc
test
mov
xchg
mov
inc
mov
push
sahf
xchg
mov
inc
das
leave
hlt
inc
daa
jecxz
in
shlb
inc
stos
or
xchg
lods
cld
dec
sub
adc
pop
loope
jne
mov
imul
mov
adc
rcrb
dec
xor
dec
test
dec
rcrl
stos
pop
add
mov
loope
pop
sub
scas
sbbb
cmpsb
mov
add
cmc
js
sub
outsl
pop
loop
push
pop
push
ss
rcl
or
mov
fwait
jge
or
xor
jnp
pop
inc
jg
sub
xchg
fstpl
js
or
jecxz
mov
pop
pusha
mov
notl
pop
add
inc
daa
sub
loopne
lret
ja
jno
and
xchg
or
pop
mov
rolb
divb
cmpsb
sahf
insb
sub
push
mov
sub
js
sbb
adc
inc
cmp
pop
ret
stos
jp
or
daa
dec
and
sub
mov
sbb
imul
sbb
xchg
lds
arpl
pop
xchg
cli
scas
dec
cmp
mov
sub
sub
jo
cld
icebp
mov
xchg
sahf
fadd
fistpl
test
mov
ss
outsb
jae
jne
iret
ficoml
mov
aam
or
inc
or
sahf
cmc
add
incl
leave
push
rcl
push
dec
push
lret
adcl
adc
mov
add
push
icebp
enter
jo
shld
int3
sbbl
or
pop
push
push
pop
cmp
movsb
in
fsts
mov
insb
fidivs
jns
mov
adc
shrl
aam
pop
divl
fcmovbe
mov
outsl
xchg
adc
adc
cmp
push
iret
mov
call
mov
sbb
rcll
push
cmp
cltd
or
inc
cmp
adc
add
sbb
jecxz
mov
mov
test
iret
stos
inc
aam
imul
add
xchg
test
js
lods
xchg
xor
hlt
iret
ja
scas
subb
mov
cvtps2pd
jae
fcom
popa
in
xchg
int3
scas
jmp
jnp
add
adc
push
cmp
dec
ret
cli
mov
or
mov
js
cltd
scas
jne
rclb
xor
jb
call
int3
xchg
jno
inc
or
scas
inc
or
sbbb
out
adc
push
hlt
adc
imul
inc
lods
adc
mov
repz
xchg
stos
lea
adc
rcrb
push
jbe
add
cld
push
inc
add
jg
std
sbb
lcall
xchg
pop
mov
lret
rcrb
aad
es
push
jne
scas
xchg
xchg
dec
pushf
and
in
xorl
and
ljmp
mov
cmp
jle
mov
xor
adc
xchg
inc
cld
push
div
cmp
in
int3
in
mov
dec
es
imul
add
xchg
dec
aaa
dec
in
pusha
xchg
aad
ss
push
push
xor
pop
jae
jg
es
and
test
mov
or
or
mov
repnz
dec
js
std
or
sti
lahf
adc
dec
fstpl
sub
in
mov
cmp
outsb
dec
pop
pop
daa
add
cmp
add
das
fldcw
shlb
test
ret
orl
mov
pushf
mov
push
jb
xor
scas
xchg
mov
xlat
pop
inc
adc
cmpsl
adc
hlt
ss
mov
and
xlat
addr16
or
dec
mov
repnz
lock
les
into
adc
sarl
push
js
pop
push
call
andb
push
push
jae
lcall
add
add
out
cmp
pusha
add
sbb
sbb
dec
xor
mov
fdivrs
pop
in
pushf
mov
mov
xchg
cmc
mov
sub
mov
arpl
inc
and
fwait
push
int3
push
jle
dec
mov
inc
cmc
cwtl
pop
push
sbb
in
jecxz
subl
lcall
add
push
or
mov
mov
test
xchg
pop
lea
sbb
push
aam
push
outsb
pusha
xchg
pop
xor
mov
clc
out
or
dec
loop
fmuls
movsl
dec
inc
xor
mov
and
iret
jbe
xor
lret
cmpsl
jle
jge
ficoms
dec
xorl
out
repz
xchg
mov
leave
test
dec
je
aad
or
mov
icebp
imul
arpl
lods
mov
pop
jne
mov
mov
push
mov
lret
mov
outsb
rorb
scas
adc
sbb
xor
sub
add
inc
jg
es
push
mov
jns
in
cltd
fnsave
sbb
inc
int
in
gs
xor
dec
add
test
cmp
mov
xor
fldln2
jb
shll
rclb
mov
pusha
inc
mov
adc
jo
adc
in
jge
or
mov
jbe
xor
rcrl
aad
dec
dec
cld
dec
mov
movb
cmpsl
dec
data16
lahf
xor
xor
dec
arpl
enter
fdiv
xchg
push
jb
imul
and
or
jge
xchg
pop
rclb
pushf
inc
out
fs
fdivr
mov
push
popa
insl
inc
fucomp
and
das
mov
push
add
pop
mov
adc
jle
sbb
pusha
gs
subb
loope
pushf
shll
dec
fwait
dec
pop
lds
iret
fildll
and
jae
jnp
and
push
sahf
add
push
testl
pop
mov
jbe
jmp
setae
divl
clc
je
sub
and
xlat
addr16
pusha
mov
push
js
test
setge
ja
pop
mov
mov
jo
and
aaa
fstl
mov
cmpsb
stos
sub
sbb
sti
mov
enter
push
stc
cld
pop
mov
and
imul
mov
cmp
and
jmp
inc
loope
sbb
pop
mov
lret
iret
pop
xchg
fcoms
in
mov
nop
sub
push
aam
adc
loop
fwait
lea
js
ja
sahf
push
cmp
xchg
xchg
ja
pop
aas
pop
cmp
mov
xor
inc
cmp
jnp
pop
lods
mov
clc
cli
dec
fildll
popa
xor
push
fistl
jns
in
scas
lods
push
loop
jge
push
mov
das
in
inc
lea
and
adc
mov
in
cs
into
xor
scas
cmp
rclb
xchg
shl
pop
mov
push
and
xchg
fsubs
xchg
js
push
rcl
nop
mov
je
push
add
mov
popf
jg
outsl
scas
pop
rcl
rcl
jbe
and
icebp
das
or
pop
out
inc
popf
loope
ret
rorb
test
push
xlat
or
jl
or
gs
fsub
fmuls
andl
mov
push
mov
imulb
inc
fnsave
out
pop
test
subb
cmp
cwtl
push
idivl
fstpl
pop
mov
loopne
and
cmc
mov
test
dec
out
inc
fnstenv
push
sbb
rcll
sub
je
ud0
push
ss
push
mov
ret
bound
daa
into
push
adc
or
inc
mov
icebp
push
jmp
push
fcomip
and
mov
fsts
mov
mov
es
stos
jo
leave
mov
inc
pop
xor
dec
mulb
rolb
shl
test
pop
add
xchg
jo
mov
mov
lds
enter
sbbl
gs
fs
daa
pop
mov
rep
push
cltd
mov
xlat
lahf
sahf
add
cmpb
inc
add
mov
and
xlat
test
imul
aam
or
push
dec
ja
arpl
inc
push
lods
sbb
mov
scas
mov
outsl
sub
loope
jbe
dec
and
lret
ficoml
aaa
mov
dec
mov
xor
cmp
icebp
testl
pop
lahf
sbb
loop
xor
gs
mov
xchg
scas
sbb
sbb
mov
jne
mov
sbb
hlt
mov
sub
sbb
jbe
popf
test
imul
dec
sbb
mov
mov
xor
pextrw
mov
pop
mov
in
mov
fcmovnu
dec
push
loop
pop
xchg
add
mov
pop
push
mov
pop
jle
cltd
xor
and
pop
mov
ja
sub
sbb
cmp
sbb
push
cmp
sbb
xchg
data16
pop
sahf
xor
sbb
pusha
repz
xchg
shlb
daa
enter
lock
xchg
and
sbb
pop
loop
sti
add
pusha
pop
xchg
adcl
add
lret
mov
inc
pop
mov
sub
jbe
shrb
cli
enter
mov
popf
xorl
xchg
push
xor
cmp
aas
or
push
adc
imul
inc
mov
jp
jge
mov
daa
sbb
rcrb
xor
mov
cwtl
stc
shll
sub
sbb
inc
xor
test
add
jo
xor
push
or
aaa
xor
cmpsb
sub
mov
mov
shl
dec
shl
arpl
fdivrs
scas
pop
push
test
mov
js
test
mov
fs
test
sbb
out
lcall
cmp
aas
stc
daa
cmc
or
loop
data16
loopne
shlb
dec
cwtl
scas
jp
adc
push
sub
ljmp
xor
stos
jbe
out
les
add
jno
je
jl
mov
cwtl
stc
mov
scas
jl
aaa
movsl
cmc
rclb
in
adc
lahf
mov
sub
cld
sub
pop
xchg
andl
add
aad
loopne
insb
leave
iret
pop
outsl
and
mov
push
push
in
rolb
shrl
adc
and
gs
push
bound
xor
and
hlt
repnz
xor
inc
cmp
mov
mov
out
or
leave
cs
and
mov
push
pop
in
pop
and
stos
rcll
adc
pop
cwtl
xchg
enter
push
inc
test
addb
mov
jo
mov
dec
lret
in
div
sbb
mov
jnp
add
sbb
mov
aam
fs
mov
lret
jne
cwtl
mov
mulb
xchg
rcrl
je
dec
mov
xor
aam
or
add
xacquire
add
adc
adc
movsb
cltd
inc
out
je
xor
sti
arpl
int
mov
mov
into
in
mov
shll
lock
lea
nop
push
adc
sbb
or
dec
push
sbb
dec
std
dec
jno
sahf
xchg
popf
xchg
aam
adc
or
pop
push
pmaxsw
jb
sahf
mov
test
jp
pop
xor
sbb
lcall
push
test
cld
xor
cld
jo
jp
gs
dec
mov
in
adc
sub
cwtl
dec
aam
ss
lret
orb
mov
je
sahf
gs
mov
jo
lods
jl
lds
mov
ret
push
sbbl
daa
add
or
shl
pop
dec
fsub
stos
jae
adc
adc
scas
stos
xor
aam
jl
test
clc
add
inc
popa
jmp
in
mov
imul
pop
and
adc
out
sbb
sub
js
addb
sub
jge
mov
fs
cmpsb
push
outsb
inc
pop
call
pop
cli
xor
enter
or
mov
adcb
pop
or
hlt
ss
loopne
push
pop
jnp
cwtl
mov
arpl
inc
fwait
cmp
sub
pop
mov
add
or
pop
les
dec
out
rcrl
movsb
shl
lods
sub
push
sub
jb
or
outsb
add
mov
lds
addr16
cli
push
dec
mov
add
mov
in
in
call
push
lods
add
jae
pop
mov
jecxz
sti
sub
push
push
inc
add
jnp
pushf
mov
mov
and
repz
adc
cmpsl
or
fdivrs
mov
out
aaa
push
mov
call
dec
or
lcall
stos
test
sbb
inc
add
mov
inc
or
mov
push
cmp
and
cmp
ja
xor
xchg
mov
ljmp
adc
mov
ds
push
lods
ja
and
mov
jge
rcrl
dec
in
mov
repz
out
lahf
stos
fdivrp
sti
dec
mov
or
inc
pop
sti
into
out
mov
ja
add
ret
imul
xchg
lock
jmp
shlb
cld
xchg
cmp
sti
lds
cmp
lds
xor
add
mov
xchg
out
lea
jmp
bound
mov
scas
stc
ds
in
adc
mov
repz
das
cmp
ret
mulb
jmp
inc
scas
sub
std
jmp
mov
inc
cmc
out
fcoms
mov
sarb
mov
adc
add
loopne
pop
rcll
out
or
test
inc
xchg
divl
lea
dec
mov
pop
dec
das
push
xchg
push
int
or
mov
enter
xlat
fdivrl
inc
dec
bound
sbb
movsb
cmp
frstor
sub
mov
mov
add
xchg
jmp
or
jl
cmp
fstpl
and
insl
mov
cmp
stos
mov
dec
mov
call
sub
popf
scas
js
push
sub
push
cmp
inc
sbb
les
jecxz
xchg
ss
jbe
lods
adc
mov
or
push
movsb
idivl
stc
iret
inc
fisttpl
sub
loopne
in
rolb
lret
adc
ret
inc
or
inc
pop
jne
cmpl
jns
mov
or
mov
addb
stos
loopne
mov
mov
icebp
jle
loope
push
pop
xlat
xor
sbb
xchg
add
sbb
adc
dec
test
mov
lea
leave
rorl
je
push
jmp
jne
call
sbb
into
scas
and
mov
xor
fxch
pop
add
mov
stc
clc
and
movsb
icebp
fisttps
mov
pop
mov
ss
jecxz
sti
insb
call
mov
mov
xor
push
iret
das
inc
vcvttpd2dq
std
nop
adc
mov
outsl
dec
lds
andb
dec
pop
push
xor
inc
push
addr16
leave
xchg
bound
lret
mov
testb
pop
mov
xor
fs
fimuls
andl
xchg
push
test
sbb
pop
lahf
add
sub
les
and
out
clc
sbb
xchg
scas
dec
inc
jl
shlb
in
xor
pop
dec
xchg
insb
cmp
pushf
cli
push
jns
inc
pushf
shrl
add
testl
xchg
mov
lods
mov
aam
fmuls
int
popa
jecxz
sub
imul
fsubrp
xchg
fstpt
lea
in
fimull
ficoml
ret
ds
ficoml
dec
jnp
repnz
cmc
cltd
mov
mov
sbb
xor
push
mov
adcl
jno
fnclex
test
stos
pop
ds
pop
rolb
adc
dec
cmp
and
xor
idiv
cs
pop
movsb
andl
cli
test
idivl
push
aas
cmp
or
shll
adc
cmp
jmp
push
filds
pop
xlat
cwtl
push
adc
jp
mov
push
cmp
into
repnz
inc
or
shr
push
repz
push
out
jp
sbb
cwtl
cli
xchg
bound
xchg
push
push
in
mov
inc
dec
push
jae
mov
clc
pop
les
sarl
jecxz
sti
cld
pop
mov
or
repnz
cld
push
adc
test
scas
pusha
inc
sarl
push
js,pn
cmp
sub
and
sbb
cwtl
movsl
sub
dec
lret
mov
xchg
mov
xchg
push
cmc
jecxz
or
cmp
mov
pop
xor
push
inc
mov
outsb
add
ret
sti
repnz
cli
imul
jp
inc
popa
cmpsb
lret
pop
jb
fs
ss
jne
js
lock
addr16
xor
jb
lods
sbb
daa
xchg
cld
mov
mov
stos
dec
lea
int3
pushf
in
mov
lret
bound
test
arpl
push
xor
inc
lods
or
pop
pop
dec
or
fnstsw
jl
icebp
es
popa
dec
ret
pop
inc
inc
or
fidivrs
push
jno
adc
jle
mov
test
std
jle,pt
xchg
mov
fisubs
enter
push
lret
and
jge
sub
scas
jne
in
repz
mov
xor
dec
enter
xchg
mov
dec
pop
cmpsb
loope
popf
imul
mov
inc
adc
loopne
sbb
sub
popf
out
nop
xchg
rcrl
inc
in
jbe
pop
mov
stos
inc
dec
jecxz
xchg
mov
cmp
jb
in
test
pop
xor
ret
les
and
aad
mov
insl
stos
sbb
lock
push
push
jle
cmc
cmpsb
pop
cmpl
ja
ds
nop
popa
push
cld
hlt
sub
shrb
es
and
jmp
and
mov
push
fwait
push
lds
mov
adc
rcr
sub
adc
pop
test
fists
push
mov
imul
das
cmp
into
jb
jmp
nop
es
ja
mov
enter
aaa
sbb
add
mov
push
mov
or
sub
insb
test
cltd
loopne
out
mov
pop
cmc
add
inc
mov
adc
inc
leave
je
mov
ret
pop
faddp
dec
test
test
sub
xacquire
mov
xor
in
test
push
xchg
ret
pop
inc
sub
jg
and
xor
jns
fistps
out
addr16
mov
ds
mov
and
gs
pop
mov
pop
lea
bound
mov
jno
nop
jb
mov
pop
xchg
vrsqrtps
mov
mov
sbb
jg
test
and
stos
pop
mov
mov
mov
ret
js
and
imul
scas
dec
test
stc
xchg
sub
movsb
int
jae
rolb
das
imulb
and
xor
in
insb
jge
or
insb
insb
jecxz
lods
push
incb
jecxz
aad
push
adc
jge
or
sbb
jg
and
lret
cltd
jbe
addb
cmp
into
and
daa
out
fistpll
test
fsts
adc
pop
shrl
mov
pop
in
int
push
in
fiadds
push
add
fisubrl
push
mov
mov
es
xchg
fldcw
jecxz
push
jae
add
cmp
pop
ror
mov
mov
leave
push
adc
mov
xor
mov
lock
adc
mov
cli
xchg
adc
lret
push
adc
xor
cs
es
pop
jne
mov
mov
js
push
pop
xor
jo
pusha
lea
adc
mov
and
shrl
inc
cmp
in
push
add
aam
and
sbb
add
cs
in
inc
stos
ret
fidivs
sub
mov
push
xor
fdivl
cld
mov
lods
out
gs
notb
adc
out
push
and
cld
test
xor
aaa
push
shlb
dec
sbb
ss
roll
addb
filds
xchg
adc
sub
cmp
hlt
dec
pop
dec
or
mov
cmp
mov
cwtl
subl
shll
jecxz
lock
cld
sub
inc
add
dec
mov
add
or
cmp
fstpt
dec
xchg
xor
mov
test
mov
jecxz
push
and
stc
sahf
leave
pop
push
or
clc
jae
out
jb
adc
mov
lock
dec
pop
pushl
in
sbb
aam
imul
stos
enter
out
xchg
ds
and
inc
pop
mov
mov
lea
dec
in
ja
or
fwait
push
in
scas
test
popa
jl
xchg
sbb
push
int
mov
xchg
pop
xchg
mov
cmpsl
fildll
or
and
call
and
mov
dec
movsb
push
leave
cmp
inc
popa
outsb
not
jmp
arpl
outsb
lods
ror
and
mov
es
popa
cs
xor
adc
ret
or
jne
xor
aas
pop
out
pop
jge
pop
jge
inc
mov
mov
mov
stos
std
lret
add
mov
test
cmp
push
in
jmp
fdivrl
mov
pop
add
in
icebp
cmp
stos
hlt
push
adc
out
rcl
sub
pop
add
pop
jns
in
je
mov
pop
pop
daa
pushf
adc
dec
mov
inc
cwtl
outsb
mov
xchg
cmp
mov
fsubr
jmp
and
test
mov
add
mov
sar
xchg
adc
dec
les
jbe
xor
jg
inc
jle
push
lds
roll
mov
mov
xor
push
mov
scas
cmpsb
repz
lea
mov
lcall
ja
adc
cmp
or
pop
mov
sub
pop
out
les
and
mov
mov
pop
mov
push
jle
fs
fucom
cmpsl
cmc
dec
pusha
in
jnp
push
cmp
sar
scas
sbb
push
shl
pushf
lret
jmp
adcl
xorb
xchg
sahf
inc
mov
lret
jnp
loop
ficompl
push
jmp
dec
push
test
jle
or
push
cmp
jp
cli
cmp
adc
and
and
stc
xor
dec
pop
rclb
out
sti
loope
push
sub
loopne
leave
mov
movsl
or
inc
or
jge
push
js
orb
xor
pop
sarl
in
and
sub
push
fstps
dec
imul
xor
sub
sarl
rorl
pop
mov
xchg
pop
cmpsl
pushf
int3
out
and
ja
scas
pop
rclb
test
nop
test
cli
leave
popa
leave
xlat
out
push
adc
enter
jb
cld
lods
xchg
mov
mov
test
and
cmp
stc
xor
fdivrs
lods
hlt
fldcw
mov
lods
pop
or
jno
mul
mov
mov
dec
incb
imul
cmc
lea
outsb
fwait
sub
aaa
jle
xchg
scas
adc
jbe
hlt
adc
lahf
cld
outsl
adc
xor
out
loope
and
sahf
dec
leave
movl
fisttps
les
add
inc
sub
adc
addr16
mov
andl
push
xlat
movsb
clc
jle
mov
ja
cltd
push
lods
adc
pop
inc
pop
mov
mov
cmp
or
inc
add
jnp
clc
sarl
xorb
pop
mov
test
sub
dec
xchg
imull
dec
jg
mov
pop
push
aad
leave
fwait
or
xchg
stos
pop
cmp
sbb
jb
inc
ret
nop
out
cltd
push
icebp
inc
push
cmpsl
jae
hlt
push
pop
lods
outsb
scas
and
push
out
and
adc
lods
sub
mov
or
stos
repz
lods
mov
xchg
cs
movsl
loopne
js
dec
mov
sub
loope
rcrb
imul
push
pop
jle
insl
inc
dec
shlb
xor
jno
pop
jl
fldenv
inc
fmul
mov
add
jo
lret
sub
fwait
and
stos
lahf
ljmp
cmp
mov
sub
jg
mov
or
fdivrp
and
outsl
lds
jno
fcoml
ret
jl
dec
das
adc
mov
pop
and
push
cmp
jmp
aaa
adcb
and
push
add
pop
testb
pushf
inc
mov
xor
test
mov
push
pop
xor
lahf
fisubl
and
jl
or
xchg
imul
cmp
sbb
fdivrl
mov
inc
cli
std
pushf
jnp
gs
test
dec
pop
inc
pop
lea
mov
cmp
dec
xor
sub
xchg
mov
aam
lds
add
scas
or
mov
cs
sar
inc
xchg
fisttpll
push
add
pop
push
mov
inc
mov
rcl
push
jno
lock
jne
push
push
pop
js
fsubrl
inc
pop
add
dec
lock
loop
in
push
push
add
sub
dec
inc
loope
mov
into
loopne
cmp
push
mov
jns
addb
mov
inc
mov
mov
in
jne
pop
pop
jmp
push
mov
jmp
repnz
mov
aad
cmp
sub
pop
jns
lcall
cmc
or
mov
sub
and
mov
xchg
mov
ror
push
xorb
xor
inc
mov
or
or
cmp
mov
repz
flds
adc
add
pop
push
mov
push
es
adc
or
and
jge
fcoms
test
lock
jnp
sbb
lds
push
pop
lock
cwtl
xchg
push
push
imul
sbb
in
adcb
xchg
sti
jnp
in
mov
xchg
pop
sbb
nop
inc
pop
jo
pop
sub
data16
push
xor
pushf
cmp
mov
fimull
pop
test
pop
fdivr
sub
or
push
sub
sarb
jge
sub
mov
stos
xchg
xor
aam
mov
cs
sti
jg
mov
nop
scas
shl
lret
pop
cs
test
sub
loopne
pushl
popa
cmpb
aaa
jne
add
lods
mov
movsb
lcall
sahf
pop
jns
add
in
ja
sub
inc
mov
sub
out
mov
dec
stos
lcall
movsb
mov
xchg
fsubrl
cmp
jp
test
in
into
pop
ss
mov
call
das
loope
into
pushf
je
jecxz
mov
lods
test
into
arpl
leave
sub
jae
sub
mov
sub
ret
cmp
cmc
sub
dec
xor
inc
mov
mov
dec
ds
lcall
in
lods
mov
jns
pushw
in
and
xchg
cmp
iret
inc
inc
insb
mov
dec
add
pushf
cmpsl
jp
sti
or
cmp
mov
test
fwait
or
adc
idivl
in
sub
shrb
rolb
sbb
sub
cmp
jg
jge
sbb
or
inc
inc
or
and
inc
pusha
fs
into
sub
fimuls
icebp
insl
adc
xor
gs
cli
wbinvd
in
fidivl
jecxz
pop
jge
out
jp
loope
dec
inc
inc
mov
mov
mov
fcomps
mov
cltd
inc
push
jmp
cmp
and
iret
lcall
insl
mov
iret
xchg
scas
cmp
test
xchg
dec
xchg
pop
mov
and
push
pop
jns
dec
out
inc
fsubs
icebp
xchg
mov
push
aam
notb
add
inc
mov
jle
cmp
aad
ret
jecxz
in
jb
xchg
and
mov
addr16
add
je
adc
scas
mov
push
and
jmp
in
sti
sbb
fsubl
cmp
adc
pop
lahf
xchg
test
mov
and
repz
or
pop
aas
mov
cmp
data16
mov
movsl
lods
pop
pop
mov
adc
or
cwtl
std
jp
mov
js
xorps
pop
clc
push
pop
out
xchg
xor
cmp
sbb
lcall
dec
inc
das
mov
push
out
mov
loope
jnp
enter
mov
data16
jb
clc
sbb
icebp
cmp
repnz
jb
pop
lahf
cmp
icebp
pop
repnz
sarl
xchg
in
sub
pminsw
dec
xor
xor
xor
push
mov
or
stc
mov
inc
cs
repz
nop
das
out
mov
ja
ljmp
push
daa
rcr
lock
inc
xor
frstor
lds
ss
mov
cmp
scas
shll
push
in
xchg
push
pop
xchg
jecxz
push
ret
fwait
int3
sub
rorb
mov
xor
rorl
mov
cmpsb
mov
sbb
sbb
je
xchg
cwtl
lret
push
das
cmp
dec
scas
and
fdivrl
cwtl
jp
cmc
mov
cmp
aam
nop
test
imul
aaa
repnz
cld
mov
cmp
enter
cmp
and
ss
push
mov
and
out
popf
jp
mov
cmp
lds
mov
lods
shll
nop
jle
mov
push
fldl
push
sub
mov
jmp
mov
push
pushl
cmc
shl
outsl
jl
orl
mov
add
stc
lds
xor
subl
repnz
mov
inc
mov
mov
sub
subb
xor
cmpsl
xor
pop
ret
mov
lds
mov
xor
adc
xchg
pop
add
sarb
daa
out
mov
out
mov
sbb
repz
cmp
shlb
cltd
dec
cmp
fstps
repnz
sub
jae
jb
ret
mov
in
xor
gs
cs
out
ss
fs
jne
and
push
cmc
pop
sub
std
inc
xor
je
cmp
inc
clc
cmp
es
push
loopne
xchg
outsl
rcll
push
lcall
xor
div
mov
fmul
repz
nop
jg
out
jp
js
hlt
xchg
sbb
pop
sub
inc
xor
popa
fisubrs
xchg
rcrb
rcr
sbb
mov
sbb
pushf
adc
add
inc
test
sbb
lahf
sbb
and
push
pop
rol
cmp
dec
scas
add
mov
push
mov
mov
shrl
mov
pop
xchg
bound
xchg
out
fdivp
out
mov
sbb
cmpsl
cmpsl
cs
sub
jp
xor
mov
imul
pop
mov
scas
pop
mov
lahf
xchg
mov
and
sbb
inc
dec
pop
xchg
adc
mov
push
call
fsts
inc
push
and
push
pop
cld
je
or
xor
inc
add
sbb
ja
insl
out
fadd
fsubrs
adc
insl
ds
dec
addr16
sbb
shl
sub
dec
lcall
inc
pop
mov
aaa
ja
test
out
push
fnstenv
sbb
and
gs
pop
adc
cmp
fstp
inc
jb
add
inc
jo
test
or
and
push
lods
pop
in
mov
addb
cmovnp
xchg
sarb
lahf
xlat
mov
or
stos
mov
and
jge
mov
lods
push
loopne
push
dec
rcr
sbb
push
adc
test
mov
out
jbe
rcrl
push
loop
icebp
mov
ja
lea
xor
mov
imul
add
cmpsl
jbe
xor
or
loope
xor
add
js
inc
mov
cwtl
mov
push
sahf
sbb
cmp
mov
sub
or
sbb
sar
rcll
out
aaa
mov
mov
pop
pop
push
fisubrl
ljmp
jmp
pop
in
mov
div
mov
inc
cwtl
add
pushf
scas
and
jp
xorb
dec
shr
cmp
fiaddl
ljmp
mov
loop
lods
loope
loop
sub
fs
enter
mov
cmp
dec
inc
inc
into
mov
aad
cmp
cmpl
popf
or
out
adc
or
sub
or
es
push
hlt
mov
cmp
mov
inc
das
fadds
in
daa
adc
popa
push
adc
sub
scas
dec
xchg
fdivrs
push
jo
mov
jno
sbb
cmpsl
xchg
pop
lcall
bound
and
lret
fimuls
xor
push
ljmp
sub
les
cltd
inc
fadd
loope
add
xchg
addr16
jne
xor
push
ret
pop
loopne
jp,pt
mov
test
ret
into
pop
sbb
idivl
sbb
lds
xchg
xchg
icebp
call
jne
or
mov
cli
xor
xchg
add
add
push
ljmp
dec
dec
mov
aam
dec
inc
pusha
movsb
je
hlt
jle
inc
jge
mov
imul
push
sti
out
and
inc
in
lods
insl
aam
or
mov
js
xchg
pusha
je
xchg
aam
pop
dec
stc
loop
mov
stos
shlb
push
jae
out
stos
popf
sbb
xchg
ror
mov
ror
push
ss
mov
push
xchg
jle
data16
pop
hlt
add
test
cltd
ss
mov
cmp
cmpsl
xchg
add
inc
test
scas
mov
es
test
les
pop
inc
outsl
mov
enter
and
mov
cli
popf
leave
fcomps
or
in
push
fs
mov
lods
enter
inc
or
add
cmp
aaa
lds
or
and
push
idivb
movsl
pop
movsb
test
jg
fildl
sbb
xchg
test
pushf
ret
pop
push
adc
lcall
ja
jmp
pop
aas
pusha
ret
shrb
sahf
add
movsb
dec
mov
mov
mov
in
fisubl
cltd
lock
cmp
sbbb
dec
or
arpl
cmp
mov
sub
std
je
hlt
and
ficoms
pushf
fistl
es
cmp
mov
dec
fildll
test
jae
nop
cmpsl
into
push
les
pop
ljmp
fmuls
add
pop
jmp
cwtl
faddl
mov
mov
mov
pop
or
in
imul
mov
imul
stos
jl
pop
or
push
lahf
nop
arpl
iret
add
negb
aas
mov
iret
into
push
or
and
or
sbb
mov
jmp
mov
adc
mov
push
test
mov
lahf
lret
lret
mov
sub
int
mov
lock
pop
dec
repnz
cwtl
mov
aas
pop
push
pop
movsb
roll
sub
sbb
mov
add
pop
sbb
mov
xor
fsubrl
jnp
jge
jbe
xchg
push
ja
nop
jnp
fstl
pop
mov
mov
ljmp
mov
push
sub
mov
cltd
add
sbb
shrb
push
add
sarl
hlt
pop
stos
cmp
mov
add
jnp
inc
loopne
outsl
inc
pop
and
jb
push
mov
push
jo
int3
rcrl
push
mov
imul
arpl
loop
cs
mov
jne
out
push
adc
cld
push
mov
and
fildl
into
pop
movsl
sub
std
cld
sub
mov
mov
add
arpl
in
addl
xlat
jl
inc
mov
lock
push
jg
sbb
add
enter
orb
pop
dec
xor
sbb
test
sub
packssdw
jmp
cli
sbb
mov
testl
lret
mov
dec
mov
push
test
scas
push
xor
push
mov
xchg
call
jae
addr16
pop
sub
sub
or
dec
gs
clc
add
sbb
arpl
mov
cmp
arpl
mov
and
outsl
cmp
mov
push
xchg
dec
lahf
sbb
fimuls
cmpsl
mov
lret
insl
inc
jb
mov
jns
or
push
pop
or
cmp
test
fidivrs
mov
jo
mov
scas
sbb
test
inc
dec
mov
sub
movsl
or
shl
sub
sub
std
jnp
push
popa
fnstsw
push
mov
mov
dec
jecxz
cmpsl
cmp
test
jmp
ljmp
mov
jo
movsb
xor
xor
lock
mov
mov
cmp
int3
arpl
cmp
cmp
aad
jmp
mov
and
insb
fsubl
enter
fwait
aad
and
int3
imul
dec
test
mov
pop
sahf
in
inc
pop
push
mov
xchg
mov
mov
sbb
xor
out
outsb
popf
mul
jmp
mov
adc
mov
dec
idiv
and
ret
sub
cmp
das
paddsb
sbb
dec
shlb
je
xlat
mov
in
xchg
jns
mov
pop
ja
push
pop
mov
in
rcl
push
ds
jp
pop
inc
pop
mov
push
xchg
test
jp
jb
mov
cmp
fstp
scas
enter
into
sub
add
lret
mov
dec
hlt
cli
push
pop
shl
test
jle
fcoms
stos
into
jl
xchg
leave
cmp
push
rcll
sarl
cmp
lds
pop
push
js
dec
inc
cmp
mov
sub
rclb
lock
inc
pushl
ljmp
subl
xchg
mov
xor
jns
loopne
cmp
or
adc
data16
mov
pop
cwtl
mov
data16
push
mov
outsb
xchg
lds
imulb
test
cmp
jg
addb
js
add
jl
or
sbbb
cmp
rcrb
or
push
cmp
add
mov
fldenv
add
jne
mov
jns
shlb
push
cmp
bound
xlat
arpl
data16
pop
xchg
mov
repnz
inc
mov
xchg
rcll
cmpsb
lahf
in
mov
scas
dec
sub
dec
xlat
fwait
mov
cmp
call
aad
sar
dec
mov
push
cmp
add
clc
jle
fnstsw
sub
xor
xchg
icebp
inc
jb
in
cmp
out
not
outsb
lock
jp
rcl
js
xor
ret
shll
lret
sub
dec
cs
push
outsb
pop
dec
popf
lret
jl
push
cmpb
xchg
xor
dec
mov
pusha
sub
add
and
int
sbb
and
ljmp
mov
out
push
dec
fdivp
inc
jnp
mov
sbb
xor
and
sub
add
pop
xchg
cltd
xchg
jb
push
cwtl
sub
ds
clc
mov
fistpl
and
lds
and
les
or
imul
push
std
dec
xor
leave
cmpsb
mov
push
add
rcll
stc
cmp
xchg
sbb
sbb
adc
push
call
gs
jmp
into
lock
loopne
daa
sub
and
sbb
mov
xchg
dec
dec
sbb
cmp
lret
push
pop
cltd
mov
mov
add
das
sbb
mov
in
das
mov
xor
into
sbb
add
or
orl
xchg
adc
nop
or
leave
xchg
xlat
stc
inc
and
xchg
lret
pop
push
cld
lret
loope
fistpl
imul
in
inc
cmpsb
cld
cld
je
cli
out
not
xchg
orb
sbb
in
das
dec
stos
jbe
repz
mov
adc
cli
jmp
pop
movsb
incl
jle
je
shlb
lods
adc
mov
dec
ds
rep
pop
pop
scas
pop
inc
and
movsb
mov
pop
jbe
dec
rcr
lea
mov
rcll
cmp
push
dec
rcrb
cltd
and
push
mov
lahf
xchg
sbb
idivl
loop
push
movsb
pop
cmp
pushf
pop
mov
jns
jmp
loope
pop
imul
lock
mov
adc
loope
iret
decb
and
fcomps
mov
sub
repnz
inc
mov
stc
push
shll
mov
cs
mov
daa
mov
ret
dec
and
stos
mov
or
mov
pop
mov
les
xchg
inc
bnd
sbb
sub
inc
push
pop
test
mov
dec
and
jg
jns
push
mov
push
fs
xchg
mov
inc
cltd
fstps
pop
mov
push
sahf
mov
daa
enter
ljmp
adc
fistpll
add
pop
adc
push
push
stos
enter
aam
stos
ud1
dec
xchg
cld
daa
aad
cmp
decl
sbb
stos
adc
dec
mov
stc
pop
jb
movsl
inc
mov
nop
inc
arpl
and
je
or
inc
adc
xchg
nop
popa
pop
fldl
es
cmpsb
popf
dec
sti
sbb
sbb
cmpsl
sbb
ret
mov
and
inc
dec
pop
int3
es
out
xor
ret
nop
repz
mov
mov
or
inc
jne
call
fstpl
add
hlt
xchg
jno
dec
mov
imul
sarl
sub
cli
testl
sar
sub
ja
push
out
ror
mov
push
jns
int3
push
push
mov
ja
dec
xchg
pop
test
mov
les
stos
out
mov
dec
jge
sarb
fs
pop
loop
imul
ficoms
sarb
clc
sub
mov
adc
dec
rcll
cmp
dec
and
pop
mov
or
jne
inc
mov
fists
push
push
cmp
mov
jnp
mov
test
sub
es
dec
loope
jmp
push
stos
adc
ret
pusha
inc
jno
dec
dec
mov
leave
xchg
mov
cltd
sti
or
cmp
lret
icebp
adc
push
stos
mov
and
cmp
push
arpl
das
imul
jmp
and
cmp
shlb
sub
mov
fldl
dec
or
movsb
sub
inc
sti
lods
inc
mov
pop
mull
sbb
inc
sub
shr
pushf
sbbl
addr16
jo
cli
xor
aaa
lret
arpl
mov
sub
mov
ret
sbb
push
mov
jecxz
dec
add
mov
push
lea
inc
sbb
fsubl
int3
aam
in
cmpsl
or
cmpsl
xchg
push
hlt
jns
push
scas
sbb
idiv
repnz
xchg
stc
push
push
js
xor
pusha
mov
mov
stos
les
add
idivb
mov
cmp
rol
push
sbb
mov
and
xorl
ds
das
and
les
or
lcall
push
mov
mov
inc
daa
and
dec
pop
cltd
jnp
in
or
adc
aam
lods
je
xchg
fsub
jl
pushf
sbb
dec
jmp
jmp
sub
pop
sbb
fcom
xchg
jp
sbb
lea
or
cld
sub
gs
jbe
nop
pop
or
push
popl
sub
sub
jb
xor
sbb
popf
fbstp
int
adc
xchg
imul
out
pop
xchg
data16
and
outsl
popf
loop
push
pop
jo
and
xchg
or
xchg
adc
lock
push
sub
lret
not
daa
fistpll
std
mov
jge
xchg
loope
jbe
sub
push
jl
xchg
das
fsubrs
pop
adc
int
adc
xor
sub
clc
mov
dec
ret
fisubrs
adc
inc
mov
xchg
adc
fmuls
lret
xor
scas
or
xchg
xorl
mov
mov
arpl
mov
dec
adc
loop
xchg
les
test
and
sub
or
lret
mov
cmp
sub
test
stos
jl
mov
jo
pop
loop
xchg
add
mov
xchg
jp
aad
mov
shrb
mov
std
and
lcall
scas
pop
cmpsb
popa
inc
inc
cmp
xlat
jp
inc
or
inc
inc
xor
cmp
in
and
inc
mov
popa
adc
push
jl
jge
sub
xor
jne
outsb
int
xchg
mov
inc
sbb
repnz
mov
lcall
mov
adcb
idivb
mov
sub
lea
loop
inc
fld
es
cltd
sbb
dec
jae
sbb
into
inc
and
rcll
repz
xor
push
mov
loop
dec
stc
lea
mov
aam
jo
lret
fidivrs
xchg
jp
mov
shr
mov
xor
mov
mov
fistpll
ret
sahf
stos
std
jne
cmpsl
pop
cli
sub
add
test
fs
adcl
and
inc
cmp
lret
dec
das
and
addr16
and
sub
push
ss
mov
aas
pop
dec
addr16
mov
sbb
clc
xor
lret
sub
xchg
xchg
or
cmc
xor
js
dec
adc
dec
int3
clc
mov
mov
lock
in
mov
loop
or
ss
fisubrs
test
in
out
addb
neg
and
jb
jb
mov
cmpsl
cld
test
dec
sub
xchg
cmp
fistpl
xchg
sbb
cs
cmpsl
insl
out
out
stc
inc
mov
xor
and
in
rcrb
mov
orl
xchg
pop
xchg
dec
neg
cmp
dec
fwait
sbb
jg
inc
mov
loopne
mov
mov
sub
ffreep
dec
jb
cmc
xor
inc
cmp
mov
dec
mov
and
mov
xlat
fbstp
sub
sub
lds
xor
addb
test
aam
insl
mov
cwtl
xchg
das
jl
push
or
lahf
test
pop
inc
mov
movsb
mov
fiaddl
hlt
jno
loop
jge
xor
mov
in
xchg
mov
std
dec
out
aaa
pop
and
bound
icebp
dec
push
icebp
out
rcrb
in
sub
jg
mov
push
mov
mov
lret
mov
imul
std
jno
cmpsb
dec
daa
jp
jb
ljmp
push
imul
mov
mov
ficompl
inc
and
xor
cmp
mov
test
stos
iret
lret
xchg
outsb
inc
pop
mov
jg
scas
aam
popl
xchg
xchg
pop
and
out
ds
daa
std
movsl
sbb
aam
jne
aam
adc
aad
sahf
rclb
and
mov
lahf
and
sbb
jb
sahf
jns
adc
fdivs
sbb
imul
aaa
dec
cwtd
in
repnz
mov
into
pop
cmp
cli
aam
cmpsl
lods
testl
movsl
out
mov
stc
daa
mov
adc
mov
sub
dec
nop
test
repnz
cmpsb
cmp
add
cmpsb
cmp
jge
lret
xchg
int3
ja
lcall
or
ljmp
sub
mov
orb
fs
pop
mov
mov
adc
mov
adcl
cmp
adc
mov
aas
shl
hlt
js
sub
inc
and
in
mov
cmpl
jecxz
fs
cmpsl
ficoms
mov
cmpsl
mov
orl
popf
sub
hlt
stos
push
cwtl
mov
pop
mov
push
repnz
xor
xchg
loope
negl
cmp
jg
inc
int
nop
aas
gs
divb
test
sahf
aaa
lret
cld
push
push
jmp
pop
mov
sbb
lods
in
sbb
inc
rorl
pushf
daa
dec
cltd
sub
mov
jge
push
sbb
mov
push
add
bound
outsb
sbb
jo
bound
sbb
dec
push
fcoml
aam
mov
or
cld
fisubrl
or
cmp
nop
daa
mov
cld
xchg
jnp
push
bound
int3
pop
jl
or
insl
add
lret
lcall
inc
mov
scas
fildll
or
cmp
addb
push
fwait
xchg
sub
cmp
bound
ss
pushf
add
popf
sbb
sahf
daa
sub
push
rcrb
xchg
ret
mov
mov
cmc
les
scas
ds
imulb
iret
iret
cmc
lret
sbb
pop
int
inc
jmp
push
inc
insb
outsb
icebp
xlat
mov
fucompp
addr16
cli
fwait
jae
or
jae
push
aaa
push
enter
sahf
or
jl
add
ds
xchg
and
andb
callw
cltd
lcall
sbb
call
or
mov
xor
hlt
lds
jp
ljmp
dec
mov
fistl
fs
mov
mov
scas
pop
lcall
xor
fdivp
push
pop
pop
mov
lea
mov
xorl
shrb
pushf
ja
pop
sti
aam
and
sub
mov
push
inc
mov
push
mov
nop
cmp
je
aaa
inc
push
pop
repz
lcall
sbb
aam
arpl
clc
inc
sti
push
enter
fwait
cmp
mov
ja
fisttpll
lret
cld
mov
xchg
icebp
pop
jmp
rcll
sbb
xor
push
lock
jnp
cmpl
mov
iret
in
xchg
rcrl
movsl
mov
fisubl
daa
xchg
inc
popa
lea
repz
test
adc
adc
or
and
out
into
adc
or
fildll
xor
mov
insb
xchg
dec
sti
push
lds
dec
je
mov
fadd
sbb
ds
out
adc
and
dec
adc
pop
or
fstpl
into
je
bnd
div
mov
pop
xchg
mov
sar
mulb
mov
xor
sbb
je
xor
push
out
jmp
fdiv
sbb
mov
mov
cld
and
inc
pop
cmp
stos
jp
xchg
mov
mov
push
mov
arpl
mov
test
push
ds
dec
lods
pusha
imul
xchg
add
int3
fists
pop
or
push
cmpsb
adcb
jno
scas
fs
pop
sbb
pop
adcb
or
js
enter
adc
adc
cli
insb
mov
cmpsl
mov
les
fnstenv
decl
stos
sub
pop
add
jbe
aas
dec
sbb
cltd
repz
dec
pop
cltd
cmp
jb
pushf
and
and
stos
push
push
jg
or
lret
push
add
xor
je
clc
push
std
pop
jo
mov
mov
es
dec
cltd
dec
xlat
clc
mov
aas
fsubs
adc
das
imulb
xchg
and
jge
xlat
mov
mov
cs
sbb
fstpt
iret
add
xchg
mov
mov
lea
outsl
rclb
mov
xchg
or
in
insb
jb
mov
int3
repz
stos
cmpsb
rep
stos
jnp
shlb
aad
lea
fdivl
out
lods
xlat
mov
outsl
push
hlt
ljmp
test
xchg
fcomip
lods
aad
insl
add
jmp
dec
int3
or
xor
or
or
cwtl
lret
dec
fisttpl
pop
cmpsb
xor
add
mov
jp
xlat
jb
mov
dec
lods
sbb
cmpsl
cmp
leave
xor
adc
mov
scas
push
dec
xor
xchg
ja
add
in
cmp
fadds
mov
pop
sarb
sbb
data16
cmpsb
mov
sbb
jle
mov
fadd
jle
cmp
xchg
xchg
les
adc
fidivrl
test
cmp
mov
mov
cmp
insl
int
popa
and
jnp
cltd
xor
fistpl
ljmp
ds
xchg
inc
mov
fisubrs
mov
cmp
imul
and
xor
jb
adc
and
int3
push
movsb
hlt
sub
xor
mov
cmp
xorl
mov
std
scas
fistl
mov
cwtl
rcrb
pushf
inc
mov
dec
cmp
and
lock
cmc
inc
mov
daa
inc
or
mov
cltd
xor
arpl
xchg
cmp
shrb
push
divl
lock
aad
outsb
movsl
pop
add
adc
pop
or
lds
jae
add
inc
sarb
mov
cmpsl
fwait
dec
xchg
fcompl
jne
push
ds
cmp
xchg
outsb
xlat
adc
js
and
movsl
shlb
lods
cltd
addr16
imul
xor
into
shl
or
pop
mov
pop
inc
adc
lret
outsl
test
sub
enter
mov
xchg
xor
rcr
dec
sub
cmpsb
mov
cmp
nop
pop
out
stos
inc
sbbl
cmc
and
repnz
orl
mov
enter
sarb
pop
xor
inc
mov
push
fimuls
dec
movsl
lock
xor
fwait
mov
or
fldenv
popa
lret
js
mov
das
xchg
cmp
arpl
cmp
or
out
sti
sbb
stc
mov
jge
and
ror
cmp
xchg
pop
test
jnp
ficompl
dec
jmp
xchg
pop
jno
sbb
int
stc
adc
ror
adc
aas
inc
cli
mov
ja
roll
sub
add
xchg
ficompl
xchg
pop
and
mov
dec
shll
xchg
sub
pop
out
shl
jle
pop
sub
lcall
sbb
aas
test
enter
mov
adc
out
shll
insb
and
push
mov
pop
ret
fisttpll
test
std
loop
or
popa
divl
lock
out
leave
sti
adc
inc
add
cmp
dec
push
in
dec
ljmp
ja
test
out
sub
test
push
cmpsb
test
loop
hlt
addl
pop
scas
jne
adc
mov
jno
test
data16
aam
mov
pop
cmp
push
or
sub
jp
and
out
jg
stos
and
cld
jb
cmp
cli
sub
and
sbb
cmpsb
xor
sbb
adc
ror
rcll
pop
lds
and
arpl
pop
sarl
xchg
xchg
cli
mov
xor
lcall
gs
iret
shll
sbb
cmp
std
rcr
sub
lahf
out
pop
cs
mov
sbb
sti
inc
fstpt
jo
mov
add
mov
ds
pop
rcll
pop
ret
std
push
sub
or
test
mov
testl
loop
ljmp
mov
mov
sbb
pop
sbb
sbb
lods
in
xchg
loope
stos
cmpsb
sahf
sub
or
test
mov
jmp
mov
cld
dec
repnz
pop
adc
push
push
mov
iret
int3
mov
sub
push
popa
ds
jno
hlt
in
cmpsb
xor
sbb
mov
dec
xchg
push
loop
aam
lret
xlat
fsubl
flds
das
in
mov
pop
jge
into
jmp
div
sar
adc
loope
insl
ss
aas
add
adc
sbb
mov
lds
arpl
xchg
jge
clc
dec
cwtl
jbe
xorl
xor
cmp
jecxz
scas
movsl
push
pop
mov
dec
int
jnp
dec
push
fstl
pop
dec
rorl
add
lahf
dec
outsl
popf
cli
dec
dec
je
mov
test
add
push
lock
jp
sbb
xor
ljmp
jbe
insb
xchg
sbb
inc
push
jno
jb
lds
xor
xchg
inc
shl
fiaddl
push
cmp
or
mov
mov
jecxz
out
daa
xchg
jb
and
adc
sti
sub
xchg
test
add
mov
push
call
bound
cmpsl
jno
dec
push
ljmp
jecxz
xchg
mov
mov
jge
pop
inc
push
mov
test
jmp
push
adc
dec
and
sbb
jnp
mov
out
sti
mov
popl
test
push
imul
or
xchg
mov
adc
or
lds
xchg
mov
fdivl
in
dec
xor
xor
mov
xchg
enter
fstps
movsl
rorb
call
jmp
popf
fistpl
adc
jo
scas
cmp
test
dec
add
push
adc
mov
lods
push
ds
into
out
pop
test
imull
lea
push
stos
fiaddl
add
sarl
ficoms
push
repz
shrb
or
fbld
pusha
jmp
xchg
xchg
add
jle
fadds
aam
cmp
mov
xchg
stc
push
flds
addr16
in
cmp
cmpsb
adc
xlat
cltd
jge
popa
imull
adc
sbb
loop
rcrb
xchg
decl
popf
pop
in
push
aam
inc
in
fdivs
scas
mov
scas
mov
rcrl
jae
mov
fsubl
jecxz
leave
xchg
mov
aam
and
aad
lea
push
mov
aaa
adc
roll
popa
bnd
add
mov
fwait
xchg
mov
push
jg
or
or
in
leave
mov
cld
das
test
push
lds
push
jge
or
xchg
mov
push
add
mov
aas
pop
lret
sub
sub
sub
out
out
dec
lods
sbb
mov
xchg
bound
inc
lods
adc
ror
push
divb
stos
pop
fimuls
or
and
je
js
sub
loop
cli
stc
int3
adc
ret
sub
mov
insl
sub
dec
sbb
and
shlb
jnp
je
jle
xchg
lods
aam
out
dec
jns
sbb
mov
cmc
test
add
jmp
daa
aas
or
inc
rcl
in
add
mov
in
push
push
insb
movsb
mov
xor
xchg
testl
repz
push
inc
lds
les
or
mov
or
pushl
pusha
pushf
add
sti
or
sbbb
xor
push
lock
inc
pop
call
add
in
lahf
pop
cmp
push
push
xor
adc
sbb
ds
sub
and
mov
cmp
push
imul
data16
jnp
ds
jo
add
jge
fs
push
dec
pop
cmp
mov
xchg
sbb
xchg
xor
mov
ja
out
push
push
cmpsb
pop
cs
cmc
stos
aad
and
shll
dec
es
sub
inc
dec
lahf
cltd
mov
dec
jns
icebp
sahf
inc
mov
jno
xchg
push
mov
mov
pop
cmp
mov
mov
sbb
mov
jb
push
sub
mov
fcomps
sub
push
pop
mov
je
inc
add
pusha
cld
mov
mov
xchg
test
pop
dec
aad
xchg
pop
xor
call
mov
push
sbb
out
cli
and
js
or
repnz
sbb
adc
jl
cmp
sbb
xor
hlt
clc
jg
cwtl
mov
mov
lods
lret
mov
into
mov
stos
dec
inc
pop
mov
push
shll
imul
loop
jo
mov
stos
xor
arpl
aam
call
xchg
lods
sahf
add
xchg
lds
dec
repnz
inc
inc
faddl
mov
popa
clc
pop
mov
movsb
data16
jo
dec
adcb
jne
popa
ljmp
inc
push
xchg
shll
mov
addb
bound
inc
sti
es
fisubrl
pop
dec
push
push
pop
nop
std
subl
js
push
dec
mov
test
cld
dec
or
lret
or
pop
add
hlt
xor
scas
subb
bound
rorl
push
stc
sub
lods
stc
neg
imul
lret
das
pop
sbb
dec
ja
idivb
jle
cmp
cmp
lods
sub
loope
jbe
xor
mov
mov
hlt
int
or
mov
dec
cmp
sbb
aas
inc
lds
rcrb
out
stos
dec
xor
insl
xor
adc
mov
fcmovnu
fsubrs
or
sub
xchg
and
stos
push
stos
popa
stc
aas
rcr
std
nop
arpl
jp
cmp
mov
or
ret
sbb
or
push
jmp
xchg
inc
lahf
lret
mov
shrb
sti
invd
iret
adc
mov
pavgb
in
ficoml
ret
sbb
pop
pusha
pop
pmaxub
lcall
out
jmp
inc
ljmp
cmp
out
xor
push
insl
imul
sbb
inc
inc
adc
sub
sbb
stos
sub
dec
and
enter
out
cmp
inc
loop
popf
test
add
out
pop
das
jae
jge
mov
and
sub
add
mov
xlat
rolb
jp
and
add
insl
clc
std
push
push
popa
mov
clc
movsl
add
sub
cmp
xchg
pop
rcrl
lret
lcall
push
divb
mov
ljmp
adc
loop
nop
lock
pop
xor
outsb
dec
lods
push
fwait
push
sub
sub
int3
imul
stos
sbb
and
sbb
jae
push
or
dec
mov
push
add
inc
stos
in
xchg
sbb
outsb
dec
adc
into
popa
lock
xor
mov
xorb
testb
pop
push
call
and
fs
in
cs
cmp
int
mov
or
cmp
test
push
jecxz
push
pop
sub
lods
pop
mov
stos
cmpsl
scas
push
adc
jmp
out
das
or
jne
pop
ljmp
out
negl
gs
imul
in
movzbl
mov
lods
lret
sbb
movsl
and
rcrb
mov
mov
dec
enter
inc
and
pop
sti
cmpsb
cmpsb
dec
jne
adc
pop
cmp
pop
pop
sub
mov
or
test
imul
push
mov
mov
xor
scas
out
mov
push
add
cs
adc
insb
cmp
lret
jnp
aad
mov
jecxz
cmp
stc
lret
cld
and
cltd
xchg
jo
fistpl
std
push
shlb
xchg
insb
inc
gs
dec
div
leave
test
mov
stc
nop
adc
repnz
lret
sarl
mov
cmp
and
leave
loop
adc
inc
adc
push
dec
lods
lea
enter
inc
cli
mov
ds
xchg
lds
clc
inc
sbbb
cs
and
push
leave
pop
cmp
ficompl
mov
les
jle
add
enter
gs
in
fwait
xor
jno,pn
rcr
pop
in
movsl
mov
jg
lds
adc
xchg
aas
lahf
xor
jno
xchg
sbb
nop
adc
adc
into
fidivrs
cmp
push
cmp
mov
jnp
xor
das
add
popa
sbb
and
and
pop
aam
fs
inc
mov
and
cmp
int3
aaa
mov
sub
xor
es
es
je
sub
outsb
jge
xchg
or
mov
cmp
lds
inc
push
insb
enter
sub
sti
movsb
mov
xchg
aad
lahf
or
xchg
push
lahf
popf
in
dec
push
movsl
int3
test
fnsave
fwait
mov
pop
adc
inc
pop
cwtl
cmp
push
push
jno
add
cld
mov
jmp
xchg
xor
push
jne
xor
jno
xchg
xor
loopne
pusha
shrl
pop
hlt
adc
mov
popa
mov
mov
mov
les
lods
fwait
mov
imul
push
push
dec
in
fs
pusha
out
jge
pop
mov
fwait
imul
out
mov
data16
inc
xchg
loope
push
pop
xchg
mov
fldcw
fwait
sub
mov
jb
out
mov
cmc
jge
into
rcll
out
arpl
cwtl
sub
lea
or
sbbb
mov
and
and
out
xchg
mov
xor
sub
inc
call
cld
std
cmp
jae
cmp
jno
in
faddl
js
andb
cmp
adc
adc
sub
and
addr16
in
pop
ljmp
inc
ret
mov
push
push
mov
pop
fsubp
loop
pop
fwait
push
lock
xor
push
jo
pushf
xor
mov
mov
imul
into
test
loope
fs
inc
lahf
push
dec
fwait
es
jne
mov
xlat
mov
addr16
xchg
pop
shll
fdiv
loop
fisubl
sbb
out
scas
in
outsl
shrb
jle
sub
xor
xor
xorb
pop
outsb
stos
ret
movb
mov
xchg
cwtl
cmpl
shll
mov
adc
jns
push
lret
inc
inc
lahf
jbe
add
fisubrl
and
test
jns
inc
in
sar
fst
xlat
stos
inc
jbe
inc
adc
fwait
mov
arpl
shrl
subb
fdivp
aas
xchg
adc
out
lock
fs
inc
out
ljmp
shlb
es
mov
insb
pop
pop
out
or
cmp
fdiv
add
fdiv
push
jne
inc
mov
and
mov
push
in
and
sbb
and
js
inc
aam
scas
inc
xchg
jns
jne
arpl
jp
add
repnz
push
xor
clc
and
adc
loop
inc
sbb
icebp
gs
xchg
sbb
add
mov
ret
fwait
outsl
lcall
shld
xor
out
push
loope
pop
sbb
ret
mov
fsub
adc
into
cmpsb
incl
adc
mov
and
fcmovne
rolb
inc
shll
leave
and
jns
fwait
xchg
add
adc
out
call
cmp
add
or
add
pusha
repnz
xor
pop
xchg
mov
inc
cmc
or
sbb
fistl
sub
or
addr16
inc
incb
ss
std
jge
add
jnp
cmp
das
arpl
push
push
xchg
sub
pop
xchg
pusha
sbb
inc
fwait
inc
jno
in
pop
mov
cli
pop
xchg
daa
or
push
scas
xor
mov
mov
mov
pushf
shl
push
sbb
cmpl
shrb
enter
mov
sti
add
stos
inc
call
test
mov
mov
pop
icebp
scas
adc
lret
bound
sub
das
pop
pusha
jnp
out
xlat
arpl
dec
stc
lret
push
test
fildl
stc
mov
cld
xchg
int3
pop
mov
dec
push
jae
adc
cmp
enter
mov
jae
enter
inc
dec
push
imul
or
fwait
out
iret
sub
pop
sbb
jp
inc
push
imul
sub
shll
jmp
dec
sub
sub
xchg
mov
push
jns
addb
push
mov
xchg
sbb
je
inc
mov
pop
lods
adc
popf
xchg
aam
inc
push
in
insl
movsl
lods
out
and
mov
xchg
adcb
inc
popa
adc
mov
jg
cmp
scas
testb
xor
out
pop
push
sbb
cmp
gs
push
out
je
mov
cltd
aas
loope
sahf
fldl
sti
jns
stc
call
push
call
lea
daa
cmp
aaa
bsf
outsl
popa
cwtl
sub
aad
push
pop
cmpsb
imul
inc
dec
jmp
ja
mov
fiaddl
xchg
hlt
ret
jecxz
push
and
dec
jmp
adc
mov
jmp
divl
lock
jae
jnp
cmpsl
je
add
mov
fnstsw
mov
push
xor
mov
aad
and
decl
cmpsb
rcl
dec
andl
jae
cmp
fstpt
sbb
mov
aas
pushf
jo
jle
lret
cmc
mov
or
push
dec
ja
inc
inc
jb
lods
push
arpl
pop
adc
lret
pop
mov
in
sbb
cmp
xorb
jno
mov
and
std
test
mov
inc
inc
jl
pop
pop
pushf
adc
sbb
scas
dec
hlt
imul
or
out
jmp
jg
js
lahf
push
in
inc
sbbb
mov
jmp
adc
loope
jns
xchg
mov
jle
xor
popf
add
in
xor
and
stos
sub
movsl
int3
sbb
shlb
or
xor
xchg
mov
sbb
pushf
inc
cmc
sarl
inc
hlt
pop
loop
lds
mov
imul
loop
call
xlat
scas
jae
xor
jge
cmp
cld
dec
and
mov
xor
pop
pop
jmp
lods
or
jo
mov
push
and
jmp
pop
andb
pop
xor
pop
cmp
pop
jp
jnp
xchg
push
adc
xor
loop
aam
mov
loopne
mov
fisubrl
and
dec
je
xlat
test
jns
xor
pusha
in
sbb
add
sbb
dec
and
pop
xor
arpl
data16
lcall
push
adc
inc
cli
pop
xor
sbb
lds
sbb
xor
rcrb
insb
cltd
dec
icebp
inc
sahf
xchg
sahf
fs
xchg
fwait
mov
aas
inc
mov
mov
repnz
lahf
push
aas
push
shlb
dec
sub
scas
pop
xchg
push
xorl
mov
dec
xchg
jns
shlb
mov
add
xchg
and
jnp
sbb
fcmove
mov
cltd
stc
and
test
mov
in
cmp
insl
mov
dec
nop
ds
in
ror
in
nop
jns
ret
mov
mov
outsl
sub
add
dec
arpl
out
add
shl
push
mov
ss
inc
ja
ss
mov
addl
fcomp
jne
cld
sub
cmp
xor
sbb
nop
idiv
imulb
ds
jecxz
cmc
jp
shrb
push
dec
and
xor
aam
test
or
sbb
out
movsl
fsubs
add
cli
out
call
adc
xor
loop
psadbw
and
xchg
pop
mov
xor
data16
push
mov
nop
sti
cmp
lea
sub
sbb
inc
lock
cmc
add
repnz
xlat
addr16
icebp
pop
mov
push
cs
add
jp
or
es
mov
sbb
scas
lret
adc
push
adc
les
mov
shlb
cmp
in
push
jp
dec
jns
sti
ficompl
inc
mov
adc
push
or
dec
jae
mov
incb
int3
mov
push
test
fwait
in
enter
cmp
xchg
pop
xor
mov
xor
cmc
add
hlt
or
movsl
push
je
pop
jb
outsl
popf
xorl
fnstenv
scas
jl
popf
or
mov
cltd
jb
stc
xchg
push
sbb
inc
test
pop
or
out
mov
cs
inc
rcrb
mov
mov
ja
cmp
aam
xor
push
add
cmp
jg
sub
adcb
mov
xchg
into
enter
mov
leave
jne
mov
movsl
pop
or
pusha
stos
and
jge
mov
loope
sbb
loope
sti
mov
push
int
xchg
fwait
imul
add
cmp
shlb
pop
push
cli
add
mov
xorl
mov
mov
enter
mov
sub
sarb
cmp
xchg
push
mov
pop
sbb
sub
jmp
movsl
out
push
pop
out
je
xchg
daa
cmp
inc
cmpsb
inc
fwait
icebp
outsb
sarl
xchg
sarb
frstor
iret
xor
int
mov
shrb
addr16
arpl
jge
fistl
push
mov
sbb
dec
lahf
stos
popa
ds
push
leave
lock
xor
rcr
or
inc
in
cmpl
jmp
test
rclb
cmpsb
dec
cmp
sub
in
test
into
lcall
push
add
xlat
push
and
arpl
js
push
lods
mov
popf
or
xchg
shl
aam
aam
clc
push
inc
cmp
out
pop
add
and
and
or
pop
jb
mov
outsl
out
addb
inc
lods
jns
movsb
adc
out
mov
sub
fsubrp
xlat
adc
inc
inc
ret
dec
inc
mov
inc
cmp
pop
je
jae
fisttpl
mov
ret
add
jg
push
leave
mov
lahf
jb
loope
mov
sub
idivl
lret
shl
sub
xchg
sub
xor
pop
fs
mov
inc
cmpsl
mov
sbb
out
outsl
push
test
fs
les
xchg
adc
inc
sahf
dec
cmp
cmp
push
mov
add
xor
push
repnz
sahf
inc
mov
lds
cpuid
and
and
in
xchg
push
jns
jns
leave
ret
cmpl
jge
into
mov
adc
fisttps
icebp
xchg
je
test
andb
in
jb
pop
adc
mov
xor
pop
call
mov
cmp
mov
mov
sbb
popf
ss
daa
repz
mov
cmp
sbb
inc
in
mov
imul
xchg
and
cs
loop
push
out
xchg
mov
popa
or
test
xchg
stos
xchg
inc
lret
lahf
shll
test
les
jae
push
push
inc
es
jno
fimuls
jbe
fldcw
outsb
sarb
inc
test
cmp
sub
pop
inc
inc
xchg
xchg
cmpsl
jne
jmp
cmpsb
pop
mov
xchg
mov
or
jns
mov
outsb
jl
cmp
xchg
pop
cmp
inc
das
pop
std
aad
sub
push
pushf
mov
pop
sbb
and
mov
in
mov
inc
jns
int
or
push
jae
in
pop
push
xor
movsb
mov
bound
jle
daa
mov
test
pop
push
xchg
sbb
les
cwtl
xor
jg
mov
loope
xor
pusha
or
fwait
jge
inc
xor
fwait
jae
push
icebp
cmp
xchg
jge
iret
xlat
repnz
movsb
or
aaa
dec
das
aaa
out
xchg
pop
loopne
ljmp
lods
jnp
adc
fdivrs
sbb
cmp
adc
decl
jg
in
hlt
push
push
push
cli
cwtl
cmc
dec
mov
popa
pop
cmp
xor
mov
movb
movsb
dec
sti
adcl
jns
sarl
int
jae
leave
add
add
xchg
filds
das
out
xorb
insl
cmp
dec
jo
mov
xor
push
outsb
lret
mov
cmp
imul
jl
mov
test
dec
jp
jg
add
xorl
mov
lods
das
fwait
mov
mov
cmp
adc
or
xchg
sub
lock
insb
mov
add
lea
rcl
ret
jno
mov
cltd
mov
or
imul
movsb
repz
push
and
and
inc
sub
mov
adc
adc
rcrb
je
sub
mov
int3
mov
xchg
add
mov
insb
inc
addr16
inc
in
xor
add
popf
sub
jae
xorl
mov
mov
stos
ret
rclb
sub
push
jne
mov
popa
in
pop
adc
cmpsl
or
mov
cs
in
bswap
divb
outsb
xor
aam
mov
imul
insb
mov
cmpsl
mov
cld
lock
ret
xchg
xor
jg
inc
adc
adc
call
xchg
mov
inc
mov
pop
mov
mov
stos
cmc
cmpsb
scas
and
and
and
loopne
xor
add
sub
repnz
xor
pop
fdivr
jno
and
sbb
mov
clc
in
das
adc
shlb
inc
cmpsl
aad
pop
stos
shrl
js
cwtl
cli
popa
insb
sarb
scas
stos
loopne
lods
dec
das
fs
lock
jns
dec
sbb
negb
call
mov
out
push
rcl
pop
lret
cmp
mov
enter
jle
scas
xor
jge
pop
in
jb
es
call
cmp
cld
jne
imul
push
out
mov
pop
push
test
lods
xor
getsec
leave
std
aad
sub
insl
inc
mov
cmp
push
sub
xor
xchg
test
push
push
mov
cmp
sbb
cs
xor
or
xor
repnz
data16
test
xor
fsubrl
ret
mov
roll
lods
popa
push
ja
out
les
test
push
add
mov
loop
sbb
jns
mov
dec
dec
xchg
jge
shll
jne
add
pop
and
fcmovnb
pop
sbb
xor
les
pop
dec
mov
add
xlat
andl
xor
int3
pop
mov
push
lret
movsb
sub
sbb
fcmovb
or
adc
into
sbb
mov
mov
dec
fldcw
pop
lods
fldcw
mov
out
scas
dec
xor
adc
adcl
pop
cmp
adc
sbb
inc
push
cltd
mov
into
inc
xchg
dec
adc
std
sub
push
cmpsl
ljmp
sti
sti
daa
daa
rorb
cmp
jb
insb
and
mov
mov
sub
cwtl
popf
mov
jmp
pop
jno
and
push
aad
std
inc
sbb
or
xchg
outsb
call
mov
repz
dec
jae
adc
add
out
repnz
lods
sub
hlt
lahf
jb
mov
push
mov
jl
mov
faddl
sarb
test
insb
call
imul
arpl
pop
ret
lret
popl
cmp
and
ret
push
fdivs
sbb
mov
in
or
mov
xchg
inc
rcr
int
mov
xchg
popf
inc
adc
mov
outsl
jl
jg
scas
cmp
mov
cmp
sahf
pop
into
pop
pushf
mov
inc
mov
je
dec
mov
imul
sbb
testb
cmpsl
arpl
fcomip
fisubrl
adc
lds
xchg
dec
and
pop
xlat
aaa
push
adc
shll
addr16
outsb
adc
popf
lds
pop
gs
leave
push
push
mov
imull
dec
jns
xor
loopne
sarb
jmp
rclb
inc
lcall
xor
sti
xchg
jns
mov
mov
movsb
adc
mov
push
cmp
mov
xlat
sub
rclb
arpl
cmp
test
andb
push
dec
fldl
ficoml
push
dec
mov
pop
mov
or
lcall
test
xchg
xor
test
adc
adc
int3
pushf
add
cmpsb
and
cli
mov
test
xchg
out
lds
in
call
mov
lret
dec
imul
mov
mov
xchg
jg
adc
mov
jb
sbb
add
jmp
cmp
les
dec
mov
int
push
gs
dec
dec
popf
pop
xchg
sub
shrl
fwait
cmpsb
and
push
cmp
push
lahf
ret
pop
aaa
xchg
filds
mov
add
pop
in
cmpsb
mov
outsb
cwtl
repnz
in
adc
test
mov
sub
or
sub
and
adc
adc
mov
sbb
and
cmp
imul
movsl
xchg
pop
xchg
sub
mov
daa
cld
pop
mov
enter
jo
jae
mov
mov
and
fwait
xor
adc
imul
push
call
cld
lret
sbb
lds
out
je
mov
cmp
std
mov
aam
lds
and
sahf
dec
arpl
cmc
movsl
jno
icebp
rolb
scas
inc
loope
in
jno
imul
cs
push
les
and
mov
sub
insl
and
es
imul
and
jns
sbb
sub
and
sbb
pop
in
add
jl
jno
fcmovne
add
and
loopne
nop
xor
and
or
sbb
jnp
fs
xchg
and
mov
pushf
lds
subps
mov
mov
or
faddl
outsb
jo
xor
jmp
xor
sahf
lods
call
hlt
cs
add
mov
jns
sub
in
ljmp
jge
loop
cld
mov
lds
repnz
lds
xchg
lcall
cmp
dec
cmp
dec
mov
xor
int
test
aas
and
inc
lcall
xchg
jg
fidivrs
push
test
xchg
lret
add
mov
or
pop
les
jle
leave
push
loopne
dec
jmp
lods
lea
push
xor
cmc
xchg
pop
mov
pop
push
cmpsl
fwait
jg
cltd
push
jb
push
dec
int3
inc
dec
mov
pop
cwtl
test
sub
imul
stos
data16
sub
sbb
jno
mov
adc
sbb
jge
add
sarb
rclb
and
jno
push
aam
das
loop
xor
or
mov
fistpll
adc
jno
filds
test
loopne
jae
inc
or
or
pop
dec
mov
jne
lahf
pop
lds
outsl
lret
rcrb
adc
ljmp
sub
es
andb
cs
push
out
mov
xor
icebp
push
sub
iret
sub
dec
adc
mov
aam
mov
rorl
add
and
pop
and
mov
jecxz
dec
xor
mov
insl
pushf
jg
cmp
out
rdmsr
and
and
call
xchg
fmull
cmp
ret
inc
clc
jge
pop
mov
xor
ljmp
mov
xchg
mov
in
insb
dec
xchg
jle
scas
mov
mov
dec
mov
dec
pop
cmp
call
sbb
ret
nop
mov
sbb
das
push
in
add
xlat
inc
xor
je
mov
mov
into
loopne
jl
jnp
aad
test
jg
rolb
xlat
push
fsubl
xchg
sub
cmc
push
jne
loop
sbb
addl
adc
lds
jp
cli
push
fcoml
push
in
xchg
xor
sbb
pop
mov
icebp
mov
jmp
sti
std
lahf
das
lock
xor
outsl
iret
sahf
lret
mov
mov
mov
mov
mov
xchg
int
sarb
in
push
in
mov
in
jne
or
pop
xchg
jbe
mov
mov
ret
je
rorb
mov
inc
gs
bnd
push
aam
push
pushf
pusha
jmp
or
push
aaa
xor
cmpsl
outsl
pop
cmp
adc
popf
lret
xor
sbb
mov
jg
jmp
movsb
pop
mov
icebp
popa
sub
in
loope,pt
and
xor
sti
call
lock
or
lret
add
jmp
inc
dec
xchg
pop
inc
inc
fwait
jnp
jns
ret
mov
out
out
mov
pop
sbb
imul
mov
insl
push
lea
lds
push
fistpl
pop
xor
lcall
repz
push
jle
push
jmp
add
mov
pop
scas
pop
in
imul
xchg
push
adc
lea
in
aam
cs
mov
ret
clc
lret
scas
pop
shr
les
xchg
adc
xchg
lcall
stc
push
jne
jle
pop
xchg
negb
outsb
push
in
jecxz
jno
jne
xlat
jns
mov
lret
dec
ljmp
and
sub
andb
mov
dec
xchg
jb
ret
and
test
sbbl
push
mov
jns
jns
out
dec
leave
into
inc
pop
out
cmc
orb
fldl
lret
data16
dec
scas
idivb
xchg
add
sub
push
aas
and
in
rolb
daa
decl
mov
or
push
fdivl
and
push
push
jae
add
idivb
bound
lret
xchg
js
cmc
xchg
sbbb
pushf
xchg
out
ss
lds
inc
out
mov
shrl
mov
jge
shl
and
inc
testl
into
add
movsl
cmp
imul
mov
and
push
shl
mov
dec
imul
mov
push
cli
mov
sub
push
sbb
mov
popa
inc
loopne
pop
roll
jecxz
scas
adc
repnz
or
fildl
dec
cmp
mov
xor
mov
xchg
call
pop
jae
push
dec
jle
mov
push
hlt
pop
push
call
je
lock
xchg
ljmp
jb
dec
and
adc
mov
pushl
cmp
or
jae
rorl
test
aas
mov
cmp
out
js
pop
subl
pop
adc
mov
into
jp
or
jnp
pushf
pop
stos
in
lea
jecxz
xchg
or
fistpl
adc
or
mov
shrb
xor
fsubl
or
push
jecxz
xor
push
shrl
add
stc
sbbb
je
xchg
addl
inc
dec
mov
add
fstpt
jns
dec
mov
sub
mov
xchg
xchg
imul
aas
and
jmp
jns
push
lret
mov
sarb
sarb
icebp
xchg
je,pn
push
adc
cli
in
jnp
cli
lret
xchg
loop
sbb
test
cwtl
jno
pop
jecxz
sub
jmp
les
and
push
jmp
loope
and
subl
aad
addl
jae
movsb
xchg
gs
loopne
sbb
pop
push
mov
add
sbb
lock
mov
mov
int
pop
jle
xchg
cmp
and
xchg
add
sub
icebp
jle
idivl
in
mov
popf
jb
pop
sti
mov
lret
jecxz
xchg
cld
in
sbb
jg
add
data16
xchg
js
shll
xchg
jl
dec
cmp
dec
jp
mov
or
ljmp
mov
mov
xchg
mov
sub
popf
sbb
adc
les
xlat
repz
xchg
or
ss
mov
push
jl
jge
mov
insl
pop
fwait
loop
or
jbe
iret
adc
into
xchg
insb
icebp
mov
sti
xor
cmp
incb
jo
pusha
jg
aas
lea
sarl
sub
or
and
pop
aaa
lahf
pop
cmp
mov
jp
mov
push
pop
push
mov
dec
cltd
jb
jae
test
loope
repz
sub
cmp
pop
add
xor
mov
pop
stos
or
jbe
into
aad
loope
push
int3
clc
adc
ja
nop
popl
sub
call
push
xlat
sahf
mov
mov
ret
xlat
mov
sbb
or
mov
cwtl
ss
dec
int3
dec
mov
fldl
xor
movsb
mov
pop
push
hlt
cmp
fists
sbb
dec
fidivrl
sbb
sbb
xchg
and
push
jnp
mov
mov
sbb
push
push
add
dec
pop
sti
pop
cli
insl
push
jecxz
xchg
xchg
lret
cmovle
sub
negb
lods
bound
inc
es
dec
scas
mov
mov
jecxz
xlat
outsb
push
repz
jle
sti
push
scas
add
mov
pop
cwtl
jne
adc
neg
cmpsl
hlt
adcb
imul
aas
lret
ss
or
pop
popf
sub
dec
iret
in
mov
outsb
push
cmp
push
std
mov
xchg
gs
movsb
inc
jae,pt
add
xchg
iret
test
sbb
jge
jg
dec
jno
repnz
add
inc
jecxz
popa
outsl
std
jo
cmc
arpl
pop
push
inc
jmp
rorl
clc
into
shr
sbb
jns
inc
add
sbbb
sarb
mov
fst
hlt
mov
adc
int3
sbb
xchg
sbb
push
push
pcmpgtw
cmp
pop
inc
test
and
insl
bound
pop
push
fcoms
push
jmp
icebp
in
dec
shlb
popf
rcrl
loop
xchg
rcrl
cmpsb
call
add
cmp
dec
dec
fadds
out
fcmovne
add
or
lea
ljmp
jo
leave
xchg
add
fsubl
mov
shlb
mov
jle
sub
stc
shll
jno
push
ret
mov
sub
cmc
mov
adc
aas
mov
orb
mov
pop
cmp
xchg
lock
sub
jmp
ljmp
js
push
cmp
dec
in
in
fildl
and
xchg
jne
push
cli
sub
jae
ret
adc
or
mov
push
pop
cmp
mulb
cmp
cmpsb
inc
insl
sub
mov
into
insl
cmpsl
mov
cmc
adc
fadd
jae
jb
cmp
shlb
fdivrs
test
mov
pop
cmpsl
sbb
flds
aas
jmp
out
mov
popa
shll
in
xor
sub
daa
outsl
in
out
leave
sub
mov
push
addr16
cld
lods
sbb
add
xchg
mov
pop
test
pop
ja
push
daa
jns
mov
std
add
mov
imul
es
sarl
fisubrs
add
popa
loope
push
pop
fdivs
xchg
push
lret
cmpxchg
lea
push
lcall
xchg
xchg
jmp
jp
js
gs
mov
mov
mov
gs
inc
push
repnz
and
xchg
pop
lahf
sbb
call
js
je
jnp
jle
sahf
xchg
sub
outsb
inc
fcmovb
shrb
mov
or
aad
mov
lds
mov
xor
push
mov
push
js
push
xchg
add
rolb
repnz
xchg
cmp
loope
mov
popl
mov
js
out
leave
rcrl
js,pt
lahf
lods
lods
inc
fwait
icebp
test
mov
sbb
inc
lahf
orb
jae,pt
aas
mov
dec
fnsave
loop
addr16
in
pop
mov
or
mov
cld
test
je
mov
mov
aad
jns
scas
sbb
movsl
cmp
xchg
push
xchg
pop
xor
out
inc
cltd
mov
loop
data16
mov
std
fs
and
or
mov
inc
and
push
ja
fsubrs
push
scas
or
inc
loope
sbb
hlt
addl
stos
imul
mov
into
mov
pop
les
sbb
insb
ss
xchg
inc
adc
jae
push
xchg
mov
outsl
fbstp
adc
cmc
jno
push
aam
inc
push
cmp
cmc
movsl
fnstcw
cwtl
mov
sbb
dec
cmp
inc
jnp
test
std
pop
fmuls
out
std
mov
sbb
adcl
icebp
adc
adc
or
movsb
pop
gs
add
popf
sub
sahf
sbb
push
out
cmp
and
test
and
xchg
sub
aam
cli
pop
pop
pusha
or
fcom
sti
les
adc
adc
outsl
je
scas
sbb
sti
xchg
mov
shl
adc
push
or
inc
inc
pop
cmc
imul
jl
add
mov
clc
addr16
jo
lea
aam
mov
hlt
sti
dec
push
repnz
xchg
mov
jp
test
dec
xchg
pop
fdivrp
mov
pop
dec
mov
loope
cmpsb
sub
fbld
cmp
mov
xchg
mov
jae
push
xchg
xor
or
cmp
cmpsb
push
mov
push
orb
popf
xchg
daa
je
push
rcl
push
fdivrs
mov
lahf
jge
shrl
push
lds
xor
adc
popf
push
stos
stc
pop
jns
repnz
cs
mov
mov
cmp
jge
pop
lock
data16
or
repz
out
pop
pop
mov
mov
ss
and
fwait
test
sub
cmp
push
out
movsl
mov
or
clc
call
dec
cli
dec
test
bound
xchg
aaa
fbld
inc
popa
cmp
dec
xchg
movsl
mov
movd
and
hlt
in
sub
pop
popf
or
leave
in
cli
lds
dec
sbb
pop
jle
sbb
xor
mov
cwtl
adc
sbb
dec
jmp
addr16
sbb
and
sbb
pushf
insl
jae
mov
xor
pop
mov
rolb
cmp
subb
push
jo
push
out
jne
test
dec
dec
mov
jo
pop
test
xchg
lret
dec
or
mov
int
pop
std
mov
testb
jns
pop
fbstp
xchg
vmovaps
ljmp
jg
test
shlb
jp
rorb
lea
sbb
imull
push
movsb
push
or
loop
aas
neg
inc
inc
adc
pop
sub
lock
push
nop
xchg
pop
adc
push
pop
out
mov
shll
call
icebp
pop
out
jae
and
mov
adc
cs
push
mov
xchg
ffree
movsb
dec
out
and
inc
add
cmp
insl
das
and
jno
mov
jmp
jmp
mov
test
ror
sbb
loopne
adc
outsb
aam
jno
adc
dec
sub
das
jmp
xchg
inc
pop
loop
or
add
jle
pusha
xchg
out
out
notb
lret
jecxz
inc
push
xchg
pop
and
sbb
js
add
pop
das
nop
jns
adc
cltd
jg
add
leave
les
bound
push
mov
mov
fwait
mov
cmp
lea
pop
popa
mov
and
sub
dec
fnsave
out
xor
xchg
push
inc
je
fdivp
xor
outsl
mov
dec
dec
mov
mov
divl
jg
adc
lods
sbb
sbb
inc
cmpsl
pop
int
pop
in
daa
push
sub
jmp
js
adc
gs
sub
sbb
lock
outsb
aad
sub
sub
cwtl
decl
and
popf
xor
int
inc
into
jb
je
mov
notl
push
lahf
inc
or
jns
pop
jb
sbb
lahf
or
mov
push
xor
lret
mov
scas
dec
inc
lock
hlt
xor
cld
add
cmp
enter
dec
lds
psrlw
xchg
scas
es
scas
adc
inc
or
bound
cld
fidivrl
test
mov
pop
push
adc
xor
orl
dec
push
sub
daa
enter
popf
shlb
mov
cmp
in
leave
lret
call
bound
aaa
lock
dec
repnz
sbb
leave
mov
popa
into
and
fwait
gs
addr16
ds
les
add
addr16
lcall
daa
or
in
adc
xor
xchg
jno
adc
cmc
fimull
fisubs
or
ror
inc
lods
fisubs
ss
mov
push
pop
push
data16
mov
cld
adc
iret
cwtl
ja
mov
adc
popa
imul
xchg
les
lea
sahf
add
cld
lar
dec
mov
inc
das
test
mov
aad
mov
repz
shll
sbb
imul
out
mov
or
clc
inc
icebp
xchg
mov
ss
jl
ss
int3
jmp
fdiv
aad
mov
fidivrs
mov
mov
andl
fcoml
add
pop
aam
out
outsb
mov
hlt
cwtl
xor
xchg
daa
mov
xchg
in
imul
subl
gs
nop
out
imul
adc
push
pop
xchg
jecxz
in
icebp
test
rcl
ja
cmp
popf
add
lea
gs
ljmp
cli
aad
loope
push
mov
aam
and
lret
mov
sub
rcll
cmpsl
xchg
and
mov
inc
jg
pop
addr16
mov
icebp
sub
jge
cmc
xlat
stc
mov
ss
pop
pusha
lods
dec
and
call
xor
cmpsb
js
dec
adc
pop
test
add
fisubrs
ficoml
jmp
push
cmp
jns
cmp
push
mov
loop
arpl
nop
or
test
mov
mov
pop
dec
ljmp
je
test
mov
arpl
and
mov
clc
or
mov
xor
jmp
pop
jp
or
sbb
jnp
xchg
lods
cmp
pop
dec
dec
call
pushw
sarb
mov
dec
mov
leave
loop
push
sbbl
inc
mov
insl
jmp
adc
xor
sarb
jae
rcrb
cmp
ja
adc
mov
jae
xchg
jecxz
mov
mov
adc
cli
add
loop
in
stc
push
pop
or
xchg
mov
outsb
push
xlat
jl
xor
jo
ret
orl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
lea
push
call
test
je
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
call
movl
jmp
movb
movb
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
push
call
movb
mov
add
mov
mov
pushl
pop
mov
movl
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
movl
call
mov
push
mov
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
push
push
call
lea
push
call
push
call
cmpw
mov
push
je
call
push
call
add
jmp
push
push
push
call
pushl
aam
adc
addb
add
outsb
adc
addl
jmp
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
inc
pusha
test
frstor
hlt
or
push
test
movsb
fwait
jg
repz
push
sahf
fwait
add
clc
mov
bnd
fstl
mov
addr16
lock
aam
adc
add
push
add
mov
cli
jecxz
mov
adc
jnp
add
mov
and
adc
pop
jae
fs
outsl
inc
jecxz
int3
nop
mov
outsl
lock
xchg
fidivs
cli
loop
rclb
nop
inc
int3
js
jnp
lahf
push
mov
adc
mov
xor
fninit
push
mov
mov
sahf
xchg
sub
adc
add
stos
sub
dec
insl
arpl
std
cli
outsb
test
aam
adc
lock
test
shr
adc
addb
std
cli
outsl
adc
dec
addl
stc
adc
add
cli
outsl
test
aam
adc
addl
test
fucomip
adc
cmpb
xchg
push
jmp
adc
cli
outsb
mov
dec
addl
jmp
add
xchg
icebp
outsb
rcll
int
std
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
inc
fdiv
lods
popf
adc
and
cli
jle
xchg
aam
adc
addl
adc
add
cli
mov
dec
addl
jmp
cmp
std
cli
outsb
test
aam
adc
add
cli
outsb
dec
xchg
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
add
cli
outsb
test
aam
adc
in
jnp
aad
test
aam
cmp
pop
icebp
fs
fs
add
adc
jae
cmpsl
jmp
or
pusha
loope
ret
pop
out
ret
lret
adc
or
nop
push
pop
xchg
dec
rcrb
fisubl
add
clc
cs
sbb
jb
fs
into
popa
xchg
inc
nop
das
push
hlt
popf
mov
sub
out
fstp
mov
add
xchg
popf
mov
cmpsb
pop
inc
bound
jle
mov
push
lcall
lret
push
push
and
mov
stc
adc
stos
les
aas
stos
inc
mov
vgetexpps
xchg
arpl
push
in
mov
jae
mov
xchg
cs
lret
pushf
xchg
jl
mov
pushf
push
sahf
cmpsl
push
daa
and
jae
out
xchg
loopne
xchg
jns
push
push
add
mov
int3
inc
sub
fxch
mov
push
sbb
jne
add
xor
sub
iret
movsl
pop
push
cwtl
sub
ret
sbb
cmpl
in
cltd
sub
mov
sar
dec
sbb
xchg
test
in
cli
lods
fdivs
mov
std
cs
ds
xchg
inc
fcoml
ds
jle
daa
adc
ljmp
or
jp
sbb
test
xchg
dec
cmc
inc
pushf
data16
rclb
sbb
imul
rcrl
lcall
adc
cli
add
ja
dec
jo
movb
imul
mov
in
call
subl
out
jno
and
pop
mov
pop
push
fisttpll
pop
jp
fsubl
pushf
out
jne
in
xchg
movsl
and
jecxz
orl
sbb
inc
push
pop
inc
pusha
push
mov
shlb
inc
xchg
or
out
sbb
dec
mov
jmp
mov
shll
aas
outsb
test
hlt
jmp
inc
push
pop
aaa
ror
outsb
ljmp
jae
sbb
cmp
mov
lret
jmp
jmp
les
mov
dec
sbb
mov
push
mov
pop
mov
jb
pop
add
pop
sti
enter
xor
add
and
cmp
inc
xor
inc
mov
daa
nop
ret
push
sbbl
pop
sbb
aad
popa
imul
jl
lea
xor
fadd
push
fidivrl
cmp
movsl
jl
jmp
push
cmp
xor
xor
xchg
fwait
lcall
add
inc
push
ret
test
adc
inc
and
and
ja
imul
cmpsb
inc
mov
imul
jbe
pop
ret
in
pushf
sti
rolb
mov
fsubr
or
mov
push
xchg
mov
sarb
jge
xchg
ret
fmuls
push
stos
xchg
and
mov
js
pop
pop
fcmovnb
clc
mov
les
sbb
mov
notb
and
push
insb
and
repnz
loope
iret
repnz
add
dec
loopne
fnstsw
scas
sti
ss
or
ss
and
add
sbb
and
cld
into
idivb
or
and
mov
mov
mov
xchg
movsb
shr
mov
sti
out
pop
inc
jecxz
push
icebp
ljmp
clc
dec
fs
mov
gs
jle
add
scas
mov
mull
mov
lret
mov
add
addl
pop
sub
movsb
test
dec
push
addr16
enter
lcall
or
adc
dec
cli
mov
jb
push
add
adcb
xchg
out
or
pop
or
ja
push
movl
inc
insb
mov
or
pop
shll
outsb
cmp
int3
not
shrl
add
nop
jmp
pop
jno
jae,pn
sbb
fistpll
inc
out
ljmp
pop
mov
xchg
fs
hlt
xchg
stc
xchg
push
pop
and
cmpsb
fimuls
sti
rorb
fadds
repz
lcall
adc
and
xchg
adc
jne
movsb
mov
sub
repnz
dec
push
and
dec
in
jb
fadd
jp
and
lea
mov
cwtl
xchg
bound
ja
enter
fcmovnb
lds
jb
mov
dec
in
adc
scas
cli
xchg
adc
jg
dec
scas
mov
xchg
xchg
or
and
pop
into
aam
stos
mov
xorl
mov
enter
push
sti
arpl
dec
pop
push
stos
mov
cmpsl
xchg
in
js,pn
inc
sbb
ficoms
lret
ret
dec
inc
test
dec
and
call
sub
rcr
mov
push
and
mov
fimuls
xchg
mov
lret
fsubs
adcb
outsb
push
pop
inc
pop
std
les
mov
jno
loope
sub
xchg
and
adc
and
fbstp
jg
fcmovb
sbb
inc
lret
enter
fcmove
nop
lods
incb
adc
int3
popa
add
push
sbb
stos
icebp
mov
push
add
adc
push
test
mov
add
push
add
jge
cmp
mov
out
inc
jno
fistl
pop
jno
sahf
mov
mov
pop
shlb
sub
pop
adc
pop
hlt
negl
pop
push
inc
ja
mov
lahf
nop
subb
mov
sub
mov
mov
xchg
jbe
in
incb
fdivrs
sub
cmc
mov
pop
lahf
lods
in
pop
and
push
xchg
in
jge
test
fimull
push
inc
push
adc
pop
sbb
sub
cmp
mov
mov
aad
dec
add
lods
inc
arpl
push
inc
sbb
lock
fiadds
push
push
xchg
lret
push
dec
in
mov
fiadds
jnp
jae
dec
jbe
mov
dec
push
ds
push
enter
dec
mov
mov
popa
pop
and
cmp
xlat
gs
xchg
sbbb
push
andb
stos
in
insl
movsb
test
and
push
pop
pop
inc
lods
pop
push
ss
std
sbb
stos
push
xlat
xor
inc
cmc
jmp
mov
push
movsb
or
cltd
add
lock
in
or
cmc
imul
std
push
adc
aad
jb
or
outsb
push
outsb
in
sub
sbb
popa
mov
add
bound
xchg
mov
sub
mov
fdivs
divl
mov
mov
fidivl
loope
lock
jecxz
hlt
xchg
inc
push
int3
es
sub
push
leave
out
xor
xchg
jg,pn
push
mov
iret
icebp
pop
in
sti
xor
jno
adcl
sbb
sub
shlb
cmpsb
into
mov
arpl
aas
push
movsl
cwtl
fs
mov
lcall
mov
aam
out
fcoms
xor
or
leave
stos
into
xchg
jae
subb
mov
and
or
mov
in
nop
lods
cmp
addl
dec
jge
pop
sbb
mov
aad
movhps
negl
push
dec
xchg
jbe
or
adc
adc
mov
xchg
fcmovu
imul
sbbl
dec
std
jbe
out
mov
xlat
mov
in
shl
sub
xchg
clc
mov
jbe
lods
xchg
cmpsb
add
sub
ret
dec
pop
loop
cmp
mov
jae
or
fs
dec
xchg
data16
adc
sub
shlb
jnp
in
sbb
negl
cmp
pop
sbb
sub
and
add
mov
jmp
adc
in
movsb
push
sub
std
nop
js
push
imul
mov
dec
loopne
adc
adc
sub
daa
sub
xchg
cli
sti
mov
shrb
xchg
fcompl
sysexit
test
jg
lds
adc
sbb
rorb
cmp
adc
mov
add
mov
xorb
pop
fbstp
pop
inc
leave
js
sbb
add
mov
ss
mov
jg
jns
test
sti
pop
sub
pop
roll
sarb
je
mov
xchg
add
clc
ljmp
cmp
lret
adc
xor
aam
ds
popa
loopne
adc
arpl
jecxz
jp
fdiv
test
aam
cmp
subb
cmc
addr16
outsl
or
shrb
pop
orl
push
cmp
inc
bsf
enter
jecxz
mov
dec
jo
in
pop
lods
xor
push
repnz
insb
daa
loope
imul
add
mov
aam
adc
push
cmp
ss
or
jp
test
js
push
lods
das
add
jmp
sti
and
jle
dec
cmp
dec
data16
push
xor
shlb
pop
cmpsl
and
push
fildll
xor
lds
lods
xchg
sbb
mov
add
popl
dec
pop
xor
jns
cmp
or
jle
mov
dec
cmpsb
xchg
mov
enter
pop
lret
outsb
xchg
xor
jbe
sbb
rcrl
lock
aad
fucomp
mov
jne
jle
pop
je
shl
les
push
jo
fisubs
roll
sub
sub
mov
incb
mov
mov
cs
scas
cld
into
popa
pushf
scas
sub
ror
subb
aad
enter
gs
add
push
daa
loopne
push
ds
stc
stos
arpl
and
jmp
and
pop
stc
mov
xor
clc
out
sti
fmuls
and
cmpsb
xchg
dec
xor
fdiv
inc
les
xor
xchg
push
insb
cmp
fs
sub
test
jl
rorl
and
cmp
adc
dec
daa
pop
rorl
mov
sbb
push
mov
mov
test
xchg
pop
int
movsb
jg
push
pop
push
or
ja
jge
enter
sbb
mov
pop
inc
cmc
roll
mov
lret
push
mov
xchg
mov
cmc
adc
mov
pop
mov
mov
movsb
jno
sub
sub
cs
cltd
test
ss
ljmp
mov
mov
out
mov
sbb
mov
scas
push
clc
dec
mov
loop
cltd
mov
orl
jecxz
dec
imul
add
xchg
out
adc
inc
mov
xlat
ss
pushf
and
sbb
push
xor
enter
cmc
push
or
cmp
sub
cmova
popf
push
in
adc
mov
add
mov
jg
xor
xor
cmpsb
mov
arpl
add
sub
pop
mov
ja
xchg
cs
dec
add
jae
fisttpll
fldl
movsl
add
sub
push
mov
push
sbb
lahf
jge
xchg
mov
das
cmp
hlt
push
cli
cmp
mov
or
pop
inc
aas
adc
into
dec
fdiv
xor
out
inc
out
mov
xchg
cs
gs
cmpsb
das
push
out
jb
xchg
popa
ds
push
adcl
jnp
lods
out
jb
pop
sbb
imul
movsl
sub
pop
jae
mov
ret
mov
dec
jmp
daa
jne
cmp
mov
inc
jecxz
clc
movsl
movsl
rolb
and
adc
fwait
mov
out
outsl
fwait
jle
xor
mov
jge
pmulhuw
dec
aas
aas
push
daa
dec
je
out
pop
bound
or
xor
cltd
and
icebp
lahf
les
lret
mov
lahf
add
jle
cltd
jp
mov
jl
lret
iret
aas
inc
fs
inc
or
out
shll
inc
dec
pop
inc
mov
add
add
push
push
call
push
call
xor
pop
add
ret
nop
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
add
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
imul
test
inc
add
imul
mov
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubrl
add
imul
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
