addl
sbb
add
add
push
or
or
sbb
adc
add
add
dec
gs
adc
add
push
and
or
xchg
pusha
pusha
add
add
push
push
add
mov
and
and
add
add
add
cmpsb
dec
push
add
clc
js
and
adc
shll
xor
push
inc
add
addl
addb
adc
adc
add
inc
addb
movsl
add
jb
or
mov
push
add
add
sub
add
or
add
data16
xchg
inc
adc
xor
adc
rorb
add
dec
or
push
adc
lock
adc
add
and
inc
shlb
mov
and
fs
add
add
orl
leave
add
xlat
nop
xchg
adc
and
or
or
dec
movb
rorb
add
or
rolb
mov
add
push
xchg
add
add
mov
or
add
inc
add
adc
and
add
int
add
addb
or
adc
addb
and
addb
inc
adc
or
dec
sub
push
leave
and
adc
add
rolb
orb
adc
pop
xor
and
xor
push
test
or
xchg
pop
es
orl
sub
add
add
cmp
enter
add
add
cmp
add
add
sbb
and
add
and
sbbb
shlb
add
or
and
sbb
add
and
adcb
lds
add
push
or
adc
inc
inc
adc
or
dec
scas
inc
orl
inc
cwtl
and
or
or
adc
popa
mov
add
adcb
or
add
pusha
and
adc
add
rcrl
add
add
pusha
dec
or
xchg
or
pop
push
add
or
push
and
add
inc
push
sub
add
cwtl
sbb
sbb
push
add
fs
dec
or
inc
add
xchg
jnp
andb
and
mov
add
push
and
push
add
test
add
shlb
shll
or
push
add
and
add
or
inc
add
xchg
push
dec
addb
adc
push
add
orb
insb
and
add
add
add
mov
jl
adc
fs
sbb
add
add
add
orl
sbb
ja
and
or
push
add
add
inc
push
add
inc
lea
sub
mov
int3
add
add
dec
add
orb
add
add
add
push
test
or
xchg
adc
inc
xor
add
adc
and
and
add
add
or
add
or
and
add
add
jo
subb
andb
add
and
add
cmp
adc
adc
cmp
add
or
adc
add
xchg
les
adc
adc
pop
add
addb
add
add
sub
add
add
sub
inc
or
or
mov
adc
xorb
adc
sbb
cwtl
enter
orb
add
add
jmp
nop
or
sub
arpl
inc
adc
push
xchg
inc
add
or
add
orb
push
xor
inc
or
add
inc
nop
dec
add
add
add
addb
add
add
or
addb
add
dec
sbb
inc
add
pusha
mov
pushf
addb
xchg
add
jo
test
add
or
or
adc
sub
nop
and
xchg
pushf
and
sub
loop
add
or
popa
sbb
adc
int3
xchg
cmp
bound
xor
add
and
adc
dec
pop
adc
inc
and
and
mov
sub
loopne
and
and
dec
add
shlb
add
adc
and
ret
add
add
adc
and
or
inc
test
add
mov
inc
inc
and
adc
add
pusha
inc
add
or
rclb
or
push
add
mov
add
or
movl
test
add
inc
adc
add
ret
in
inc
dec
dec
inc
adc
inc
xchg
add
add
add
or
adc
sbb
lods
dec
adc
adc
inc
inc
and
and
add
push
adc
xchg
or
add
add
or
inc
add
nop
or
adc
adc
add
das
add
sbb
adc
add
xor
dec
sub
xor
adc
inc
add
add
adc
xor
mov
add
pushf
push
inc
or
dec
add
inc
add
or
or
push
add
mov
add
or
add
and
movb
and
add
inc
shrb
push
inc
dec
cmp
cmp
pop
sub
inc
xchg
xchg
addb
add
or
addb
adc
inc
sbb
addb
add
xchg
mov
or
add
push
add
mov
adcl
rolb
mov
dec
and
shlb
sbb
add
xor
pop
and
jl
xchg
xor
adc
add
add
or
adc
xor
add
nop
jb
add
es
add
or
enter
add
loopne
andb
pop
inc
or
and
sub
add
add
add
mov
push
pusha
add
and
add
and
or
repnz
inc
or
xor
add
add
inc
addb
xchg
add
adc
inc
and
add
and
rolb
add
add
or
inc
adc
xchg
addb
rolb
inc
add
or
add
inc
add
add
xchg
or
xchg
inc
sbb
add
adc
and
mov
add
adc
and
and
add
rolb
push
imul
rclb
sbb
and
adc
outsb
and
add
or
inc
add
mov
add
xchg
inc
sbb
mov
add
adc
sbb
and
add
adc
inc
add
sbb
inc
and
push
push
add
andb
inc
and
test
adc
inc
xor
sub
subb
adc
add
sbb
mov
add
inc
add
mov
add
and
arpl
jmp
mov
push
inc
mov
and
dec
xchg
sbbb
nop
sub
sub
inc
mov
test
pusha
xor
cmp
adc
adc
and
test
xchg
test
sbb
add
and
adcl
sub
subl
add
es
add
adc
mov
add
push
xchg
and
add
orb
and
push
inc
dec
inc
xor
adc
inc
push
sbb
add
add
push
adc
pop
add
or
sub
add
pusha
jb
rolb
or
ss
add
rolb
mov
mov
add
mov
add
or
adc
adc
sbb
add
in
add
loopne
inc
add
andb
push
add
add
in
addb
mov
adcb
sbbl
inc
nop
add
add
addb
mov
add
sub
xorb
jno
clc
or
adc
or
test
nop
adc
leave
nop
xor
add
push
xchg
add
rclb
sub
adc
ret
add
mov
sbb
or
xor
add
pop
add
add
orl
dec
out
pop
and
sbb
imul
dec
or
and
sub
orb
add
inc
sbb
adc
or
add
inc
add
add
add
or
addb
adc
sub
push
and
or
add
sub
add
add
push
add
test
add
faddl
xchg
add
add
add
add
orb
or
addb
test
add
adc
adcb
add
ds
push
add
mov
rolb
or
and
sub
push
or
pop
add
mov
and
add
push
or
add
or
add
mov
mov
add
or
and
add
adc
adc
nop
add
xchg
add
pusha
bound
lock
js
jo
and
andb
sbb
push
nop
adc
andb
rolb
add
adc
add
pop
test
sub
test
sbb
push
or
add
add
adc
dec
inc
inc
add
and
dec
mov
aas
or
or
push
add
add
mov
inc
add
inc
cmp
inc
test
mov
int
sub
pusha
adc
xchg
pusha
enter
inc
add
sub
inc
and
xchg
add
nop
adc
add
push
popa
add
push
add
inc
dec
cltd
movsb
adc
int3
or
or
or
pusha
and
xor
insl
and
pop
or
outsl
add
push
orb
push
add
add
and
mov
adc
leave
add
pusha
and
shl
sub
add
and
add
or
add
add
mov
or
mov
mov
and
or
and
in
andb
add
sub
addb
andb
inc
inc
and
sbb
xchg
add
push
add
loopne
and
add
and
add
add
and
xchg
nop
dec
adc
and
mov
enter
or
sbb
add
add
dec
and
add
cwtl
push
xchg
push
and
or
or
inc
or
mov
add
add
add
inc
jo
add
pusha
call
pusha
inc
mov
add
sbb
leave
mov
roll
and
xor
adc
sbb
add
or
addb
cmpsb
push
and
ret
add
inc
add
mov
add
sub
add
xor
adc
add
add
adc
mov
xorb
adc
inc
mov
or
push
adc
and
add
lahf
xor
adc
data16
adc
or
add
or
mov
push
add
inc
xchg
test
or
and
and
andl
add
or
and
inc
adc
imul
addl
adc
sbb
add
xor
inc
mov
add
or
inc
or
inc
adc
add
cmpb
sbb
and
dec
sub
andb
add
add
fisubl
push
add
add
inc
and
or
sbb
adcb
add
xor
pushf
mov
and
mov
and
dec
inc
adc
xor
outsb
mov
add
inc
add
adcb
mov
add
add
add
jno
ret
add
test
add
inc
and
popa
and
andb
test
and
cmp
sub
or
mov
push
inc
xor
mov
add
xor
inc
mov
inc
add
sbbb
or
add
add
adc
test
add
orb
sbbb
add
add
add
inc
sbb
cmp
add
enter
push
and
or
and
add
and
xorb
and
add
adc
or
add
add
xor
mov
add
inc
xor
and
stos
subb
xor
addb
pusha
addl
nop
and
add
add
sub
sbb
mov
dec
add
add
addl
lcall
add
inc
add
test
add
add
push
adc
or
jo
rcrb
or
inc
dec
mov
orl
inc
sub
xor
adc
jo
adc
and
sbb
and
sub
dec
adcl
pop
mov
add
sub
add
mov
add
addb
adc
and
push
and
add
add
mov
mov
inc
or
mov
roll
lea
inc
add
add
addb
push
or
scas
inc
add
loop
dec
xor
adc
addb
inc
or
add
test
inc
shrb
adc
add
adc
sub
adc
addb
pop
add
add
shrl
and
inc
add
adc
and
inc
push
add
movsl
push
test
inc
add
addb
add
or
add
rolb
and
cwtl
or
addb
add
inc
shrb
adc
add
or
add
cmpsb
lea
jno
add
push
sub
and
add
add
enter
mov
dec
and
orb
add
mov
add
add
test
inc
xor
xor
add
ret
add
push
xchg
inc
adc
cmp
push
mov
add
add
or
rolb
call
or
and
shrl
leave
add
inc
and
add
rolb
clc
xor
adc
add
popa
or
add
clc
sub
adc
inc
add
mov
push
xchg
adc
or
inc
mov
pusha
pusha
inc
add
orb
adc
and
push
cmp
add
inc
mov
jno
xchg
add
rolb
add
cmp
cs
and
inc
or
xchg
add
movb
adc
adc
and
add
xchg
add
add
add
add
or
add
mov
mov
push
test
jo
mov
add
add
mov
nop
add
sbb
adc
or
add
dec
inc
pop
push
add
and
inc
and
add
dec
xchg
stos
mov
add
add
add
xchg
add
pusha
xor
and
or
dec
adc
sub
xor
adcl
push
ret
add
inc
mov
adc
pusha
add
add
xor
ret
dec
adc
add
orb
addl
xor
add
inc
push
push
adc
add
add
movsl
inc
xchg
add
nop
push
add
add
mov
mov
xor
adc
add
mov
adc
adc
add
push
and
add
add
add
or
and
push
inc
and
lods
inc
mov
add
and
adc
and
mov
dec
adc
adc
test
add
cmp
sub
push
or
or
or
add
mov
or
add
add
pop
and
add
subb
dec
data16
adc
and
adc
and
add
xchg
push
add
cwtl
add
xchg
add
pop
sub
or
add
mov
add
andb
add
inc
adc
add
test
or
inc
push
adc
dec
or
inc
add
sub
sbb
loopne
sub
add
and
add
inc
andb
and
mov
add
and
add
pop
inc
pusha
adc
or
and
test
mov
insb
or
sbb
add
addb
add
or
sub
and
inc
or
add
and
push
mov
cmp
or
mov
cmp
adc
add
add
cmpsb
dec
and
or
adc
and
add
dec
or
inc
add
adc
add
or
movsb
add
es
mov
inc
nop
add
sbb
scas
xor
and
sub
xchg
addb
out
dec
rolb
or
or
dec
inc
pusha
adc
add
adcb
add
inc
bound
and
sub
xorb
in
xor
adc
add
and
int3
add
inc
xor
test
push
int3
and
adc
and
or
or
or
andl
or
add
and
addb
mov
andl
and
sbb
and
add
add
or
add
rorl
add
or
adc
add
scas
mov
or
sbb
and
shlb
add
pusha
lods
movsb
pop
add
adc
and
adcb
jno
inc
add
add
addb
dec
add
adc
push
pop
add
les
push
int3
jbe
xorb
add
dec
pusha
andb
dec
inc
adc
adc
lea
mov
or
add
inc
add
add
add
and
add
adc
and
pop
push
inc
adc
adc
insb
add
pusha
and
dec
add
inc
sub
or
or
and
or
adc
add
mov
adc
pusha
inc
pop
dec
adc
or
add
add
sarl
or
or
lds
pop
subb
add
pusha
sbb
xchg
addb
push
add
sbb
or
clc
add
add
or
xor
add
or
and
push
loopne
adc
adc
add
addb
jo
mov
mov
loopne
pop
adc
pusha
adc
int3
addb
inc
sub
add
add
mov
addb
inc
mov
adc
orb
push
adc
fwait
inc
enter
or
add
dec
outsb
add
jo
add
es
add
sub
or
mov
or
add
mov
add
loopne
or
add
and
and
push
add
rorb
addl
sahf
add
add
inc
pop
adc
les
adc
or
push
and
add
add
add
add
inc
or
push
push
adc
dec
add
xchg
adcb
add
or
push
adc
loop
or
and
adc
addl
sub
inc
inc
js
rcrl
and
push
inc
adcl
push
or
bound
xchg
sub
and
mov
adc
mov
mov
adc
sub
add
push
add
add
and
add
or
and
xorl
and
add
sbb
or
add
adc
add
push
xor
adc
adc
and
add
add
add
rclb
inc
scas
add
push
or
add
sub
xor
addb
add
xchg
loopne
add
add
or
or
add
and
add
xchg
add
inc
add
and
pop
cmp
and
dec
adc
nop
add
or
or
mov
xor
add
and
mov
rolb
lcall
and
add
or
test
mov
add
push
mov
push
add
push
enter
subl
movsl
adc
pusha
enter
inc
cmp
add
inc
lea
push
dec
adc
adc
add
add
and
add
or
data16
sub
xchg
or
and
pusha
andb
inc
and
and
popa
add
mov
inc
inc
xchg
pop
push
adc
add
add
add
mov
add
pop
test
pushf
adc
mov
ret
add
xorb
and
and
leave
cltd
or
andl
adc
inc
sub
inc
push
andb
xor
xor
inc
adc
add
add
adc
sbb
or
add
xor
push
xor
and
inc
and
add
mov
mov
mov
or
or
add
add
add
dec
add
movb
add
movsb
push
call
enter
add
mov
mov
add
add
mov
or
sub
or
add
mov
sub
or
add
sub
inc
mov
xor
sbb
and
add
inc
or
addl
add
adc
inc
inc
addl
loope
inc
add
test
mov
retw
or
push
add
cmp
and
add
add
sbb
cwtl
add
adc
inc
and
movsb
xor
and
pop
adc
add
cwtl
sbb
dec
push
push
or
add
or
sbb
adc
add
add
ds
push
inc
push
adc
add
adc
add
push
cltd
add
adc
in
and
push
mov
add
dec
add
inc
add
add
inc
inc
sub
pop
and
add
mov
sbbb
or
add
dec
nop
and
cmp
in
add
push
mov
add
or
ret
add
dec
test
or
or
push
inc
cmpsb
add
rolb
and
loop
dec
and
add
test
inc
add
add
and
andb
and
inc
mov
lcall
push
inc
sub
add
add
dec
dec
movsb
mov
add
add
add
adc
adc
and
push
mov
test
add
and
nop
inc
or
inc
adc
or
int3
add
imul
sub
lea
adc
or
sub
add
inc
add
addb
addb
jo
adc
adc
and
adc
shlb
and
or
es
add
and
or
adcl
sub
shrb
movsb
adcb
and
push
dec
mov
adc
add
and
add
rorb
add
add
mov
and
inc
inc
inc
inc
inc
inc
and
dec
add
mov
add
inc
add
add
sub
enter
mov
pusha
adc
adc
push
sub
addb
inc
and
test
adc
add
sbb
shlb
or
inc
add
and
add
add
adc
add
sub
pop
or
adc
inc
adcb
and
or
add
adc
sbb
add
add
bound
sub
add
add
addb
inc
or
add
adc
and
andb
sub
add
adc
or
push
add
add
and
and
add
add
or
mov
add
sub
and
add
add
inc
or
adc
or
add
add
shlb
pop
or
sub
mov
add
add
dec
dec
test
or
or
mov
adc
mov
test
jb
add
adcb
sub
adc
sub
add
add
push
imul
add
and
sbb
inc
add
adc
and
and
mov
and
sub
mov
add
cwtl
lea
scas
or
adc
inc
addl
sub
mov
adc
or
or
inc
shlb
xor
cmp
aam
addb
orb
and
and
sub
pusha
popa
inc
and
and
push
loope
lds
and
in
add
pusha
addb
add
inc
pop
sub
or
bound
test
inc
andb
sbb
jo
push
enter
inc
adc
add
add
add
adc
add
add
add
loopne
popa
or
add
inc
lcall
mov
test
xchg
or
subb
add
ss
jge
and
inc
and
xor
test
add
outsb
lds
mov
or
inc
bound
inc
add
inc
inc
or
jb
adc
jo
lret
inc
rclb
inc
add
mov
or
xchg
add
add
or
sub
rclb
inc
test
add
add
adc
orb
add
or
and
push
inc
or
xor
and
addl
add
or
inc
add
popa
subb
or
inc
sbb
and
andb
add
add
pusha
adc
addb
inc
and
xchg
arpl
test
dec
add
adc
add
xchg
ss
add
adc
add
nop
subl
push
rclb
add
xchg
cltd
mov
adcb
inc
and
sub
and
nop
dec
add
push
inc
push
or
adc
adc
xor
nop
mov
and
sbb
addb
add
sbb
sub
fwait
dec
addb
add
inc
and
add
push
mov
push
add
aam
sbbl
gs
add
dec
xchg
add
mov
add
popa
dec
or
pusha
sbb
adc
xor
pop
dec
add
add
add
add
or
adc
push
add
les
add
or
or
addb
mov
push
inc
rorb
dec
add
xor
add
and
enter
test
add
add
and
sub
fs
or
push
and
movsb
sbb
addb
addb
addl
and
and
add
inc
add
adcb
and
add
inc
dec
add
loop
inc
xor
and
insl
add
inc
adcb
adc
add
cmp
add
add
pop
inc
sbb
in
addb
and
enter
bound
popa
pusha
shlb
xchg
push
inc
and
add
andb
adc
sub
xchg
push
adcb
pop
dec
andb
add
mov
adc
and
enter
adc
xor
add
or
add
and
and
sbb
sbb
add
lret
mov
adc
add
mov
les
mov
inc
adcl
and
inc
pop
adc
sbb
dec
add
add
nop
addb
sbb
add
add
and
mov
mov
add
es
mov
inc
add
or
and
inc
addl
inc
inc
add
push
mov
add
dec
add
test
or
adcb
test
or
xchg
inc
adc
add
push
mov
mov
add
loopne
addb
inc
xor
adc
add
cmp
adc
orb
addb
adc
and
adc
inc
add
sbb
inc
add
mov
and
push
mov
rolb
or
mov
inc
add
add
inc
add
cwtl
add
adc
rclb
adc
add
xchg
and
add
sbb
add
bound
push
or
add
and
or
inc
les
add
add
add
xchg
addb
ret
add
and
xchg
dec
or
adc
mov
add
inc
or
push
or
loope
and
mov
rclb
and
inc
les
adc
adc
enter
pop
addb
and
inc
add
push
add
shlb
inc
mov
add
test
add
add
add
orb
push
xchg
ret
or
xchg
sbb
or
or
adc
and
loop
pop
sub
and
push
add
add
add
or
and
add
jmp
add
adc
sbb
mov
push
les
or
dec
add
and
and
inc
add
mov
dec
add
or
or
add
lock
add
test
add
sbb
xor
or
loopne
or
adc
and
cmpsb
int3
push
and
xor
or
adc
sub
sbb
or
adc
or
add
add
add
inc
push
leave
andb
xor
pop
orb
add
push
test
or
es
and
and
lcall
adc
push
add
add
addl
inc
add
inc
sub
daa
or
sub
addb
test
add
add
or
les
add
test
or
loopne
and
push
cmp
add
inc
inc
test
sbb
or
or
or
sbb
roll
add
push
inc
pusha
les
lods
addb
sbb
ret
add
inc
dec
or
sub
nop
sbb
sub
or
and
add
and
and
xchg
push
adc
in
add
sub
dec
adc
and
push
xor
and
les
and
mov
or
adc
and
adc
inc
inc
push
sbb
add
add
push
add
adc
xor
and
inc
and
cmpsb
push
add
add
add
adc
les
loope
add
inc
and
add
adc
shlb
rorl
ret
push
cmpsl
add
xor
and
xchg
add
and
push
add
push
mov
add
inc
nop
sbb
add
daa
inc
and
pusha
add
adc
inc
push
or
loopne
xor
clc
or
mov
or
add
add
add
mov
adc
pop
inc
and
and
mov
xor
cmp
xor
add
add
and
or
xor
and
push
add
and
add
and
add
rclb
inc
cltd
or
mov
pop
movb
and
add
dec
sbb
add
add
add
pop
pusha
or
inc
add
add
add
add
and
and
push
add
add
enter
dec
add
sbb
add
mov
mov
andb
and
push
xchg
js
shll
nop
and
or
add
inc
add
addb
add
nop
or
cmp
mov
sub
add
and
and
and
dec
imul
iret
clc
and
or
or
loopne
or
mov
dec
or
enter
add
add
inc
add
leave
dec
push
xor
les
lea
add
nop
add
add
pusha
dec
adc
sub
add
rorb
add
and
sbb
add
add
and
add
andb
jl
sub
add
inc
cmp
adc
xor
rcrl
mov
add
or
or
add
add
sub
mov
or
add
add
dec
daa
add
or
add
les
movsb
lea
adc
and
orb
mov
inc
xor
add
add
add
add
dec
sub
adc
push
or
add
cmp
or
add
and
or
adc
add
add
and
and
and
adc
xchg
push
or
adc
loopne
and
add
sub
ret
sub
or
inc
ror
sbb
add
or
mov
test
addb
inc
add
add
and
bound
and
mov
or
inc
sub
xchg
or
add
inc
sub
add
adc
andb
rclb
orb
add
inc
adc
test
push
add
add
push
and
adc
rorb
loop
add
and
sub
mov
add
or
dec
andb
xchg
mov
push
or
add
test
pusha
or
fmull
pusha
inc
add
or
dec
add
adc
adc
mov
gs
pop
adc
sbb
inc
inc
and
adc
jno
xchg
add
adc
adc
add
add
add
and
push
add
add
inc
add
adc
test
and
inc
inc
sbb
add
add
push
dec
inc
add
adc
or
mov
sub
add
adc
and
ret
stos
inc
add
inc
push
add
add
adc
mov
shlb
add
and
add
xchg
add
inc
popa
add
add
dec
add
orb
and
and
xchg
inc
push
add
add
sbb
inc
and
jge
pop
or
sub
add
push
or
and
inc
or
and
loop
adc
add
add
adc
add
inc
push
add
and
pop
sub
ret
and
dec
push
sbb
adc
adc
add
dec
sub
add
dec
and
inc
nop
lods
push
or
add
add
psubusb
and
or
nop
add
test
inc
add
add
and
or
and
add
add
and
add
mov
dec
or
and
js
loope
add
ret
int3
mov
test
or
jo
call
push
dec
rclb
inc
rolb
rolb
push
adc
add
and
add
sub
and
adc
and
mov
addb
and
push
call
xchg
inc
sbbb
push
push
adc
inc
bound
add
add
lret
xchg
adc
add
addb
or
add
mov
test
push
sbb
adc
xor
popa
add
add
shll
and
or
inc
adc
pop
sub
inc
add
test
addl
fs
or
add
andl
mov
adc
add
xchg
adc
inc
push
and
pop
mov
push
mov
or
or
je
add
add
and
adcb
add
rclb
or
add
add
add
and
dec
xor
push
insl
and
inc
add
adc
ret
inc
mov
add
add
and
adc
add
or
outsb
add
sbb
inc
add
add
push
orb
or
add
addb
xor
or
add
add
mov
add
rolb
add
add
add
sarb
xor
dec
add
leave
add
add
or
add
add
rcl
scas
add
add
and
cmp
insl
sub
or
addb
push
mov
add
popa
ret
les
pusha
adc
xchg
xor
add
inc
or
add
add
andl
jnp
push
and
sbb
addb
add
or
adc
orl
add
mov
push
add
addl
and
inc
mov
or
daa
and
push
mov
orb
add
xchg
inc
addb
cltd
sub
adc
or
push
mov
or
and
adc
add
and
inc
adc
adc
inc
xor
add
sbb
add
call
xchg
inc
or
mov
or
adc
add
add
inc
or
nop
inc
inc
inc
add
add
xchg
push
add
or
les
bound
loopne
aam
nop
or
add
add
sub
inc
mov
push
orl
add
push
mov
add
inc
and
or
xchg
mov
or
add
push
add
add
or
andl
lea
pop
or
or
add
dec
test
or
addb
and
or
and
and
add
inc
mov
enter
rcrb
les
and
and
and
and
add
or
sub
and
inc
add
leave
add
pop
inc
add
add
or
sub
or
cmp
add
andb
push
mov
adc
or
addb
and
xchg
add
dec
sub
rorb
and
test
loopne
adcl
js
or
test
mov
add
inc
orl
and
and
cmp
or
sbb
addb
add
add
sbb
or
dec
dec
dec
adc
inc
add
or
test
adc
enter
add
popa
add
add
push
add
add
inc
mov
add
add
add
add
or
push
addb
inc
xchg
rolb
movsl
addb
orb
outsb
rolb
sub
xor
adc
and
addb
addb
mov
xchg
add
sbb
adc
and
and
xor
in
pusha
nop
dec
subb
add
add
add
dec
inc
cmp
sbb
call
add
adc
iret
add
inc
adc
adc
xor
xor
add
and
and
sub
inc
add
adc
add
add
add
inc
add
sbb
cmp
rorb
add
addb
mov
xor
add
adc
rclb
mov
dec
add
xor
and
add
popa
add
and
movsb
add
jo
lcall
popa
add
inc
add
ret
xor
push
mov
or
add
mov
enter
adcl
add
push
sbb
or
sub
call
add
addb
add
xorl
xchg
ret
add
addl
pusha
or
adc
push
orb
xor
pusha
add
add
add
add
orb
or
jl
push
and
dec
or
adc
push
add
roll
add
call
test
inc
insb
dec
add
or
add
mov
inc
add
popa
add
and
ss
add
add
add
add
addb
add
sub
cmp
cwtl
bound
xor
xor
add
test
es
mov
xchg
stos
add
or
inc
call
add
adc
add
sbb
xor
sub
and
test
adc
add
inc
sub
inc
and
xor
add
call
pusha
ret
inc
dec
and
add
sbb
loopne
cmpsb
add
or
daa
xorb
add
and
add
and
mov
add
orb
or
inc
pusha
adc
cwtl
roll
and
lock
sbb
push
and
adc
or
or
dec
dec
pop
inc
and
and
roll
mov
add
fs
inc
add
add
mov
dec
addb
sbb
mov
and
cmp
adc
adc
add
push
or
addb
sbb
outsl
add
inc
addb
dec
mov
add
and
push
add
adc
or
inc
add
and
dec
nop
or
and
add
mov
xchg
and
mov
sbb
sbbb
inc
add
push
add
inc
pushw
adc
add
inc
andl
adcl
sub
add
add
repnz
andl
add
add
rcrb
add
aam
inc
adcb
add
push
add
xor
and
add
adcb
adc
dec
add
dec
add
mov
add
add
dec
call
xor
xor
adc
inc
add
inc
add
and
push
cmp
inc
or
shlb
stc
and
cwtl
mov
inc
jb
or
add
or
movsb
add
mov
orb
or
and
inc
add
pusha
or
add
mov
adc
adc
pushf
push
sub
rorb
mov
dec
add
xor
adc
and
add
add
add
add
or
addl
add
orb
cwtl
adc
sub
add
xor
dec
inc
or
addb
inc
inc
addb
addb
adc
add
sub
cmp
xchg
add
loopne
nop
and
test
pop
and
nop
add
inc
add
jo
lret
popa
sub
dec
sbb
addl
andb
inc
add
add
add
add
sub
nop
add
inc
add
xchg
sub
and
or
add
popa
pusha
add
nop
and
add
test
adc
adc
add
nop
mov
mov
add
add
dec
pusha
or
and
add
or
and
or
or
pop
adc
add
adcl
and
adc
mov
xor
add
shll
add
inc
push
adc
add
addb
add
sbb
adcb
add
test
adc
inc
or
and
add
and
adc
add
add
xor
jno
add
mov
mov
dec
add
nop
add
mov
add
inc
xchg
add
add
add
movsb
les
adc
fs
add
or
loope
and
or
orb
add
and
add
stos
add
or
add
add
add
or
xor
insl
or
and
and
pop
add
add
sbb
mov
adcb
add
or
fmull
and
or
inc
pusha
aad
adc
adc
sbb
inc
dec
aam
and
dec
push
shll
push
add
inc
dec
add
adc
pusha
xchg
or
sbbl
andb
add
scas
add
push
adc
inc
adcl
pusha
addb
push
push
or
or
inc
or
or
adc
jo
xor
mov
stos
bound
andb
add
inc
add
add
add
add
inc
cmp
les
dec
add
or
jo
add
cltd
add
adc
dec
addb
add
mov
mov
es
add
add
add
push
add
adc
dec
add
add
andb
add
bound
add
inc
adc
or
inc
mov
mov
add
and
xchg
add
push
add
add
add
add
or
sbb
inc
jno
cs
adc
sbb
xor
add
inc
add
mov
enter
pusha
movb
push
inc
daa
mov
sbb
pop
add
adc
popa
adc
pusha
add
mov
xchg
movsb
loop
mov
inc
adc
movsb
mov
add
inc
mov
or
add
pop
add
add
adc
xor
push
and
xchg
ss
adc
add
dec
and
or
sub
or
add
dec
je
or
add
or
mov
subl
les
sbb
pusha
push
mov
push
rclb
inc
add
xor
add
and
and
inc
rolb
cmp
lea
and
add
or
add
adc
mov
adc
push
ret
inc
jp
sub
or
xchg
rorb
sub
and
stos
xchg
or
lret
adc
sarl
add
sub
adc
adc
mov
sub
pushf
les
rclb
mov
or
add
add
add
xchg
push
orb
sbb
xor
mov
sub
mov
or
or
cmp
les
push
xor
and
add
xchg
int
and
sbb
subl
push
lock
leave
mov
add
es
push
mov
pusha
or
scas
sub
add
add
add
lret
jo
pop
push
add
rolb
sbb
push
ret
mov
cmp
dec
push
loopne
and
or
add
jo
adc
and
or
inc
xorb
add
orb
add
and
bound
enter
addl
inc
adc
ret
or
push
adc
dec
adc
add
or
push
mov
cmp
ret
bound
xorb
nop
pusha
sbb
test
and
or
and
push
add
mov
add
add
rolb
call
dec
add
add
adc
add
push
adc
movsl
lcall
inc
inc
mov
inc
inc
add
inc
inc
adc
mov
inc
adc
add
add
adc
and
push
add
test
add
orb
add
add
or
add
xchg
add
xchg
and
add
sub
or
or
inc
pop
pop
add
pusha
add
add
mov
add
nop
adc
inc
or
add
dec
xor
mov
add
add
ret
xor
cwtl
inc
add
sbb
add
add
and
inc
add
inc
daa
nop
xor
sbb
jb
inc
xor
or
add
adc
inc
dec
sbb
push
inc
inc
add
sub
add
pusha
sbb
adc
cmpsb
or
and
sub
pop
popa
inc
adc
sub
or
add
rclb
add
test
addl
add
adc
pusha
and
insb
rolb
inc
add
mov
sbb
adc
add
push
or
addb
adc
rorl
xchg
add
inc
xor
add
mov
inc
add
addl
inc
and
mov
sbb
add
xor
add
and
insb
adc
or
add
sbb
add
add
inc
add
add
test
add
adc
add
or
add
ret
dec
sbbb
xor
add
dec
dec
lods
les
add
or
add
add
sub
or
and
sbb
add
sub
and
fidivl
add
and
or
adc
inc
adc
add
or
sbb
adcl
dec
addl
orb
inc
adc
adc
and
mov
xor
inc
xor
add
js
add
or
xor
inc
or
push
mov
add
or
or
sub
add
and
xorl
add
add
add
and
pusha
adc
add
movsb
add
adc
add
add
adc
mov
mov
or
inc
inc
add
or
add
add
mov
xchg
add
push
dec
sub
xchg
or
add
add
add
inc
or
add
mov
add
add
cs
adc
addb
inc
add
movsb
add
imul
or
dec
add
pop
adc
add
adc
add
cmp
add
or
or
adc
add
rolb
mov
add
or
add
adc
pusha
add
add
or
xorb
add
inc
push
lret
mov
or
ret
add
add
mov
push
cmp
inc
and
inc
xchg
add
inc
add
add
sbbb
add
add
or
rolb
inc
inc
adc
add
add
adc
inc
inc
and
test
add
add
inc
inc
test
add
add
push
add
inc
les
or
xchg
add
add
adc
loopne
push
sbb
or
add
or
add
aaa
adc
stos
push
xchg
add
add
orb
and
inc
ret
xchg
adc
and
add
add
rolb
or
dec
test
add
add
add
adc
je
add
arpl
and
add
addb
mov
and
inc
add
int
add
add
or
inc
dec
adc
sub
add
inc
mov
or
add
dec
xor
add
xor
add
adc
add
add
mov
stos
mov
add
test
popf
inc
and
arpl
bound
add
add
sbb
add
add
dec
mov
pop
add
add
inc
add
shlb
add
and
inc
adc
adc
add
adc
and
cli
add
addb
inc
adc
push
add
add
add
adc
add
or
inc
and
add
add
sbbb
add
sub
inc
add
add
add
add
mov
nop
adc
add
add
add
push
sbb
or
push
sbb
add
add
add
aam
add
xchg
adc
or
test
add
xchg
roll
or
adc
add
push
sub
inc
add
adc
and
add
adc
add
adc
add
inc
addl
inc
add
sub
add
and
inc
inc
sahf
add
add
inc
push
inc
push
add
sbb
adc
sub
adc
inc
add
sub
push
and
add
and
or
inc
add
add
add
inc
add
push
sbb
add
add
or
inc
es
add
add
add
mov
push
inc
add
add
add
cmp
dec
add
add
and
xor
adc
add
add
adc
add
add
add
add
adc
add
ret
or
adc
loop
add
push
enter
mov
add
or
xchg
add
inc
add
add
inc
add
add
add
shlb
adc
dec
orl
or
sub
enter
and
orb
xchg
add
add
add
test
push
push
dec
dec
add
pusha
add
orb
adc
movsb
inc
and
andb
adc
add
addb
add
addb
shlb
sub
add
add
add
add
xor
add
sbb
orl
xor
and
add
and
addb
adc
cmpsb
mov
sub
mov
add
adc
adc
add
add
and
and
adc
and
aaa
rolb
inc
adc
outsb
and
add
or
inc
add
orb
inc
pop
mov
or
inc
add
add
inc
or
add
add
and
inc
add
add
addb
dec
or
mov
push
pop
inc
add
mov
mov
pusha
add
adc
add
nop
add
add
fsubrs
and
inc
addl
dec
and
add
mov
adc
add
add
call
add
add
adc
add
inc
mov
add
add
inc
add
add
and
inc
and
xor
add
adc
sub
push
xor
adc
xor
orb
add
add
rorb
dec
add
sub
inc
add
add
and
and
xchg
inc
and
push
andb
mov
add
inc
xchg
add
or
add
add
orb
pop
or
or
nop
add
andb
inc
add
cmpb
inc
inc
add
or
add
ret
sbb
test
push
add
inc
add
add
inc
mov
rorb
inc
add
aam
push
inc
or
and
add
and
sub
mov
or
inc
add
adc
sbb
add
add
arpl
add
addb
sub
add
push
call
inc
adcb
outsl
add
add
adc
adc
add
add
mov
push
and
ljmp
movsb
fs
add
sub
add
add
mov
add
or
lea
call
test
popa
add
sbb
or
add
adc
inc
add
adc
add
add
adc
add
add
inc
test
inc
add
add
or
add
mov
and
or
lret
adc
or
dec
add
inc
inc
adc
push
add
add
adc
shlb
add
add
or
cld
add
and
add
inc
sbb
addb
or
add
add
add
add
addl
inc
add
mov
add
pop
add
add
or
inc
add
dec
add
andb
addb
or
add
add
add
or
adc
adc
sbb
test
insb
adc
popa
push
ret
dec
adc
xchg
arpl
inc
xor
and
adc
add
and
add
push
and
and
add
and
adc
sub
add
add
add
and
mov
add
xchg
subb
add
add
pop
add
or
nop
add
add
add
adc
add
add
add
add
and
push
inc
and
adc
add
adc
and
orb
xchg
bound
add
and
sbb
roll
fadds
and
add
or
or
and
rclb
add
xor
add
inc
add
lods
add
add
inc
pusha
xchg
add
shlb
sbb
or
nop
bound
add
or
daa
mov
or
or
mov
add
and
adc
pusha
dec
rorl
inc
inc
adc
inc
inc
add
andl
inc
and
mov
add
sub
add
and
or
or
add
inc
addr16
add
mov
xor
sub
adc
inc
or
lret
inc
inc
mov
or
mov
add
add
add
roll
add
adc
xor
add
or
and
or
addb
add
addb
mov
add
and
push
add
add
add
add
test
or
or
add
add
add
and
andb
xchg
add
andb
subb
add
sbb
movsb
in
adc
sbb
add
inc
inc
fwait
andb
add
inc
and
add
and
or
add
add
add
rolb
inc
or
add
add
add
add
nop
or
or
adcb
jo
or
inc
mov
xor
cmp
inc
and
xchg
mov
and
add
add
and
add
add
inc
and
addb
adc
adc
add
inc
add
add
and
add
cltd
dec
and
add
faddl
or
and
add
add
add
dec
xchg
add
add
add
or
add
sub
push
sbb
test
inc
sbb
roll
add
sub
add
xchg
add
add
xchg
sbb
adc
bound
add
sbb
and
add
add
popa
enter
add
inc
add
xorb
add
adc
add
rolb
and
add
add
inc
sub
or
add
inc
add
inc
in
xor
inc
mov
addb
or
add
or
add
add
add
xorb
add
add
add
dec
push
mov
add
and
add
add
add
and
adc
add
add
add
inc
addb
addb
or
inc
add
add
add
add
pusha
or
add
addb
and
sbb
pusha
xor
sub
adc
roll
andb
andb
adc
or
add
or
add
add
add
adc
adc
add
add
adc
add
mov
movsl
mov
xchg
add
or
add
and
or
test
sbb
inc
dec
add
add
inc
mov
add
inc
or
gs
push
andl
or
orb
push
add
test
imul
add
and
push
add
loope
mov
adc
add
inc
or
add
out
add
or
roll
adc
test
add
mov
add
and
inc
sbb
add
jno
addb
add
add
adc
adc
addb
add
pushf
add
add
adc
shrl
add
orl
inc
movsb
push
and
add
add
inc
add
inc
inc
add
mov
or
add
mov
orb
rolb
inc
sub
and
inc
mov
sbbl
xorb
dec
test
add
add
dec
dec
xor
add
adc
and
and
add
add
add
or
or
add
mov
addl
and
or
adc
or
add
mov
add
add
or
add
add
add
add
add
test
inc
adc
push
add
and
add
mov
add
add
mov
push
or
xchg
xor
add
add
sub
add
and
add
or
add
and
push
add
sbb
or
push
add
mov
or
add
test
add
adc
cmp
add
add
inc
adc
add
inc
xor
test
inc
xorb
inc
or
fs
pop
movsb
add
inc
adc
add
and
xchg
add
add
push
add
rolb
add
add
and
and
add
sbb
or
add
adc
inc
addl
add
add
push
ret
and
add
or
push
and
mov
nop
add
js
or
add
data16
add
or
add
push
add
inc
add
and
or
add
add
add
add
roll
add
orb
add
add
add
add
add
sub
inc
add
and
or
or
es
sub
pop
xor
adc
adc
add
dec
add
or
or
cmp
add
inc
add
loopne
add
add
mov
lds
and
or
add
inc
dec
das
dec
add
and
loopne
add
adc
add
add
add
add
adc
inc
add
add
or
adc
add
push
adc
and
add
and
shlb
adc
or
add
andl
xor
add
add
add
inc
add
add
add
add
dec
add
bound
data16
pushw
add
addb
and
add
inc
add
add
xor
add
add
adc
sbb
add
adcl
xchg
add
or
add
add
add
add
add
add
add
adc
add
add
add
inc
add
adc
addb
adc
or
mov
adc
iret
add
and
dec
adc
add
sbb
enter
mov
add
inc
iret
andb
add
add
xorb
dec
and
std
jne
cs
xchg
das
fnstcw
adc
cmpsl
push
jns
call
xchg
sub
and
adc
cwtl
aas
mul
add
fbld
push
or
push
inc
or
loope
pop
lods
adc
mov
push
in
pop
outsb
sti
stos
orb
pop
data16
pop
push
pop
mov
pushf
fistpll
pop
leave
mov
out
sarb
testb
push
loope
sub
fsub
cmp
push
mov
push
xchg
and
lret
mov
insb
int
test
mov
inc
adc
sub
mov
cli
sbb
imul
jecxz
inc
adc
lods
leave
push
js
cmp
lods
insl
push
sbb
mov
pusha
dec
push
std
cld
xor
lods
loop
sti
outsl
xchg
jmp
lods
push
pop
xorb
and
addr16
inc
fbld
or
adc
jg
adc
lods
adc
jnp
in
xorb
add
sti
popa
rcr
sbb
sbb
stos
imul
jle
mov
mov
dec
and
xchg
cmp
inc
dec
stos
mov
adc
movsl
insl
add
sti
fdivs
adc
lods
jno
icebp
mov
add
and
xor
adc
jg
adc
sub
test
adcb
cmp
das
push
sub
loopne
cmp
imul
lock
push
inc
fsubs
mov
mov
push
lock
mov
pop
add
decb
push
cmp
inc
push
insl
lods
or
fistpll
adc
fwait
push
adcl
cli
popa
mov
pop
lods
lds
pop
lods
sbb
fistpl
insl
and
and
mov
ret
mov
mov
rcrl
dec
ret
out
mov
rcr
fsubl
cs
cmp
jecxz
bound
jmp
and
repz
mov
mov
inc
mov
sub
mov
pop
mov
xchg
jmp
cmp
xor
cmpb
lods
in
sub
int3
or
and
mov
aad
daa
cmc
cmpsl
add
fistps
ja
jmp
xor
push
add
or
fisubl
iret
adc
jmp
jo
push
lods
and
fnstcw
or
dec
and
adc
loope
repnz
popa
mov
mov
lcall
lods
mov
push
mov
jge
loopne
inc
mov
outsb
push
pop
adc
in
xchg
push
loopne
and
adc
cwtl
xor
or
adc
mov
add
dec
ja
outsb
jo
sbb
sbb
push
out
jge
inc
popa
pop
mov
gs
push
mov
test
lret
or
push
push
inc
jo
xor
jge
aad
pop
lds
leave
jle
cmp
adc
jecxz
adc
sbb
sub
mov
inc
adc
mov
jecxz
lods
int
sbb
push
test
test
iret
fildll
inc
pop
insl
pusha
pop
add
push
inc
pop
lods
gs
xchg
mov
jno
sti
fs
lods
aam
ljmp
leave
pop
mov
push
sub
andl
add
push
in
fs
add
ja
jno
aad
ljmp
push
fstps
sbbl
pop
mov
jbe
inc
leave
lods
pop
scas
pushf
jne
adc
push
bound
lods
rcll
jno
adc
lods
push
adcl
adc
pop
fsubl
and
jae
xchg
mov
insl
clc
xchg
push
loope
lods
push
add
mov
jo
mov
ror
movsl
sub
fisttps
adc
lods
shll
jno
adc
lods
push
mov
dec
lds
sbb
lods
jne
cmp
jg
mov
inc
repz
out
and
pop
cmp
adc
test
mov
inc
push
pop
je
and
mov
adc
xchg
lds
jmp
adc
repnz
lods
dec
fildl
adc
xlat
stc
pop
je
icebp
ss
jge
mov
sub
cmpsb
dec
xor
repnz
int3
daa
jnp
add
lcall
inc
xor
inc
or
xchg
adc
xorb
repz
dec
fistl
add
cmpsb
lahf
shrl
dec
or
jae
lock
pop
or
and
cmp
xchg
std
arpl
sbb
cmp
jnp
in
aas
cmp
push
pop
cmp
pop
loopew
ja
mov
jl
dec
and
adc
arpl
xor
loop
aam
inc
repz
lea
mov
jno
mov
in
dec
or
adc
sub
jae
mov
mov
adc
lahf
mov
movsb
jle
gs
mov
inc
add
loop
and
in
mov
sbb
pop
lods
gs
xchg
adc
inc
add
sub
aaa
xlat
fildl
jno
pop
lret
pop
dec
mov
loopne
rcll
int3
fs
adc
inc
add
sbb
loope
and
pop
and
dec
mov
xor
push
adc
stos
fs
dec
xor
mov
cmp
cmp
decb
inc
mov
pop
lods
popa
adc
push
int
dec
gs
fisubrs
adc
sub
lods
inc
push
jg
mov
iret
jl
dec
and
adc
lret
push
popf
pop
jns
movsl
aas
dec
fsubs
bound
scas
je
jmp
jmp
xchg
ljmp
cmp
out
xchg
popl
pop
loopne
mov
pop
xchg
jae
das
test
push
popf
add
rcrb
mov
sti
subb
sub
sbbb
mov
add
rcr
mov
pop
push
outsl
je
neg
push
clc
js
lret
aas
pusha
inc
or
fnsave
add
sub
icebp
lcall
popf
mov
and
pop
mov
cmp
sbb
xor
mov
pop
sbb
rcrl
jl
jmp
testb
ljmp
cmc
aas
dec
sbb
loope
inc
insl
js
xlat
cmp
jecxz
in
sbb
lods
mov
or
xor
aas
mov
and
sti
sub
fsts
cmp
xchg
fidivl
inc
and
or
jg
ret
xor
mov
paddusw
jmp
jo
cmp
cmpsl
imul
mov
xchg
cmp
fisubrs
addb
mov
push
enter
and
popf
sbb
or
lea
rcr
icebp
mov
add
pop
icebp
jb
mov
sub
pop
xchg
in
ja
clc
stos
add
ret
imul
mov
mov
add
leave
jno
mov
xchg
adc
mov
orb
hlt
int3
xor
xor
sbb
ret
dec
jp
dec
mov
push
xchg
adc
es
rcrb
mov
pop
adc
push
fwait
out
mov
dec
mov
adc
scas
aas
out
xor
mov
mov
jp
addr16
sahf
jae
sub
lock
sub
jnp
movsl
xchg
push
sub
into
fs
lods
mov
mov
nop
test
cs
fnstenv
push
xor
dec
je
cwtl
sub
daa
fsubp
jo
sub
imul
enter
push
std
mov
movaps
imul
push
cmpsb
lret
arpl
xchg
inc
insb
push
call
dec
loopne
pslld
lea
loop
sbb
and
imul
pop
inc
shrb
sbb
imul
cmp
push
mov
cmpsb
aaa
stos
insl
push
xchg
xchg
cmp
mov
push
insl
mov
dec
pop
cmp
popf
pop
push
mov
jmp
pop
call
jg
and
mov
or
test
cmp
les
dec
inc
out
stc
outsb
repz
and
or
lea
or
gs
int
xchg
sbb
push
inc
aaa
xlat
sub
mov
mov
xchg
sbb
inc
xor
lods
loope
sbb
jle
call
cmp
in
mov
aas
add
movsl
in
int
addl
sub
dec
out
push
lea
addb
xor
push
sbb
fwait
les
imul
ficompl
mov
std
decb
jg
or
xchg
in
dec
or
ljmp
pop
and
in
out
mov
jnp
sbb
push
push
mov
lods
sub
or
pop
and
repz
aaa
jno
or
add
jge
lods
sbb
pop
fs
jge
cmp
aad
push
call
push
and
sarl
fucom
std
push
cltd
in
adc
mov
sbb
lahf
stos
sub
sti
adc
sbb
mov
cmc
mov
sub
push
lods
bound
inc
movl
xor
pop
sbb
mov
or
dec
mov
mov
iret
std
add
icebp
je
cli
xchg
cmc
dec
pusha
cmp
xchg
loopne
call
icebp
es
fwait
inc
xor
push
fiadds
push
mov
inc
pop
push
movl
fimull
test
inc
jne
movsl
add
imul
push
int
dec
push
sub
dec
js
scas
stos
inc
cwtl
jnp
adc
repnz
insb
outsb
bound
in
or
mov
sub
std
pop
scas
mov
insb
sbb
push
aaa
add
pop
xor
sahf
mov
mov
inc
daa
adc
out
add
mov
xchg
lcall
outsb
rcll
sub
xor
jmp
out
xchg
aam
mov
out
mov
fisttps
je
std
lock
scas
inc
ret
lahf
cmp
or
int3
adc
out
insl
mov
sahf
arpl
adc
adc
cmp
stc
add
popf
movsl
das
rorl
sub
push
fnstenv
add
mov
dec
rorb
inc
out
fldcw
clc
int
mov
add
lock
adc
jo
dec
xchg
mov
rorb
lods
push
in
and
push
mov
jmp
popf
cmp
stos
stos
outsl
jge
les
jle
push
dec
sbb
sub
lods
shl
std
daa
pop
push
outsl
test
sbb
mov
mov
and
jo
push
adc
jno
fs
sub
iret
xchg
icebp
dec
push
push
fsub
pop
and
outsl
xchg
xor
in
xor
fs
int
pop
leave
and
iret
adc
mov
xchg
xor
sub
gs
out
xchg
add
ffreep
pop
inc
cs
arpl
arpl
pop
jbe
xchg
mov
out
cwtl
jnp
das
gs
ljmp
mov
fnstsw
enter
scas
xor
fs
sti
fsts
adc
adc
jmp
rep
popa
js
push
and
or
cmp
xchg
sti
sti
out
adc
sbb
push
mov
cmpsb
enter
cmpsl
cmp
lods
aaa
inc
fisubs
mov
dec
movsb
arpl
lock
roll
lods
ror
and
outsl
inc
insl
roll
cmp
cmc
ret
sbb
ret
in
adc
sbb
push
and
das
in
mov
add
dec
sahf
aad
mov
fidivrl
push
mov
lea
data16
inc
inc
aam
scas
in
push
dec
sub
mov
stos
xor
shr
scas
and
add
add
ud2
notl
mov
test
arpl
shll
adc
insb
sbb
cmpsb
fadds
sub
cmpsb
ljmp
out
out
stos
pop
pop
pushf
push
imul
cmc
mov
fdivp
mov
sahf
out
mov
pop
iret
add
ss
sub
dec
mov
test
jmp
mov
sub
xchg
pop
and
push
cmc
or
lock
lea
push
sbb
jg
arpl
jge
into
daa
inc
popa
pop
add
stos
dec
lods
ds
sbb
sbb
fwait
push
and
dec
stc
sub
pop
stc
push
pop
add
xchg
dec
cmp
jp
add
rol
sti
dec
hlt
cmp
xor
fs
pushf
dec
andl
pop
and
jge
inc
sbb
mov
push
lods
std
xchg
xor
std
cld
test
daa
aad
jo
push
mov
xor
imul
rcr
imul
mov
test
mov
lods
fwait
repnz
adc
fildll
clc
es
ljmp
outsb
movlps
sar
out
sbb
mov
flds
popf
xchg
cmp
lahf
addr16
or
mov
lret
lods
flds
jno
lahf
cld
push
adc
mov
addr16
stos
adcb
dec
test
mov
ret
fidivs
jle
daa
xor
out
add
fs
scas
xor
xchg
mov
add
or
xor
xor
xor
push
aad
sub
mov
in
and
mov
fcomps
popa
push
ja
lret
xchg
das
dec
test
loope
rorl
push
lods
fsts
rorb
cmpsb
hlt
add
inc
mov
and
jno
pop
push
sarb
clc
fs
push
jae
jmp
pop
imul
popf
lods
scas
and
cmp
sbb
sbb
lods
mov
or
mov
jo
popa
sbb
scas
in
xor
push
or
sbb
bound
mov
adc
stc
outsb
mov
je
xchg
ja
flds
xor
mov
fldl
sbb
outsl
dec
aad
dec
sbb
icebp
sbb
outsb
das
jo
nopl
or
cmp
jle
cvtdq2ps
and
or
sbb
jo
icebp
aaa
cmp
je
inc
dec
mov
fnstsw
fnstcw
shrl
push
pop
jns
lods
popf
jg
push
sub
xor
jbe
xchg
insb
mov
test
rcrb
pop
sub
sub
and
push
scas
jg
sub
fiadds
and
ss
ja
movsl
xor
ds
mov
loop
xchg
stos
cwtl
lods
inc
dec
fimull
out
cli
fldl
lret
arpl
or
lahf
shl
or
push
xchg
pushf
sti
lock
cs
stos
jmp
mov
cmp
sbb
pop
pop
lods
dec
aad
movsb
dec
or
sahf
popa
jp
pop
mov
mov
push
xchg
xchg
sbb
jo
fimuls
insl
lods
jmp
pop
es
loopne
jecxz
cltd
mov
push
fsubrl
inc
adc
sbb
or
pop
push
push
lock
push
addr16
adc
rol
mov
andb
jecxz
cmp
inc
and
stos
jnp
adc
adcb
cwtl
stc
and
jmp
lcall
pop
hlt
sbb
mov
jns
lret
xchg
inc
add
test
jno
out
mov
pop
stos
sub
imul
cmp
sbb
jb
xchg
nop
shrb
rorl
popf
jg
jge
repnz
push
and
insl
add
loopne
bound
mov
cld
mulb
hlt
sub
cmp
nop
lods
push
dec
mov
fs
adc
movsl
inc
data16
test
xchg
fs
icebp
sub
push
xchg
dec
imul
push
std
xchg
lret
cwtl
mov
sub
cmp
rorl
loope
sbb
mov
ds
bound
add
inc
dec
add
je
mul
subl
mov
mov
jge
pop
lea
repz
stos
aad
cld
lock
repnz
dec
out
in
sub
push
jmp
and
jns
pop
adc
cwtl
in
xor
cli
xchg
js
gs
out
test
mov
push
dec
xor
push
lcall
lods
stc
dec
bound
inc
call
test
aad
mov
xor
pop
add
jg
push
mov
pusha
aas
test
sub
mov
push
xchg
add
imul
lcall
cwtl
mov
fstpl
imul
jmp
mov
mov
cmp
xchg
cmpsb
adc
pop
fidivs
ficomps
dec
sub
or
push
leave
movsb
push
xchg
sarl
shl
mov
cmp
icebp
cmp
rorl
scas
popf
adc
push
sub
sbb
pop
and
test
pushf
sbb
xor
dec
js
nop
jbe,pt
push
shll
jae
dec
xchg
or
sahf
pop
jb
xor
adc
stc
nop
and
push
je
arpl
mov
pop
movsl
sub
lret
cmc
fsubl
lods
pop
push
dec
and
cmpsl
hlt
adc
sub
std
call
cmp
out
inc
jns
lahf
sub
or
in
push
add
out
sti
lret
std
nop
push
push
or
mov
jae
or
aas
sbb
mov
in
sbb
scas
push
and
ret
sbb
pop
xor
sti
fs
xlat
int3
lds
aam
push
in
push
sbb
pop
jns
int
mov
ss
in
es
jl
jmp
fiaddl
fstps
push
pushf
fldcw
adc
adc
mov
bound
int
cmp
push
push
inc
test
outsb
shrl
fcmovb
fstps
lds
adc
inc
mov
add
inc
ljmp
daa
adc
out
sbb
adc
adc
jne
in
sbb
ss
sub
sub
xchg
jnp
add
aad
jno
push
nop
lcall
sub
add
add
dec
fwait
loope
mov
punpckhwd
or
shll
mov
add
jg
loope
push
mov
fs
ret
aad
xor
add
sbb
xor
pop
push
repnz
aad
insl
inc
sub
ss
scas
popa
inc
pop
add
ja
dec
repnz
dec
fwait
add
cwtl
pop
inc
lahf
gs
xchg
pop
mov
ja
adc
lods
mov
pop
inc
cmp
stos
xchg
xor
mov
loope
test
adc
mov
push
cltd
aam
lahf
and
test
popf
rcrb
sbb
aaa
jl
mov
jbe
out
pop
or
ret
and
jo
test
mov
gs
stos
rolb
daa
fs
pop
adc
xchg
negl
stos
test
fs
inc
jecxz
cmpsb
add
sbb
inc
aas
or
test
inc
sub
psubsb
mov
mov
sub
outsl
out
dec
lahf
mov
scas
push
sub
jmp
cmc
pop
jne
bound
add
ss
and
sub
sbb
jns
xor
andl
filds
divl
or
jl
js
pop
bnd
cmc
jmp
xor
stos
leave
js
and
jecxz
ja
stc
dec
imul
stos
add
repnz
mov
pop
stos
add
pusha
dec
lods
popa
cwtl
pop
fnsave
push
push
cli
enter
in
test
arpl
push
sahf
sub
out
test
aam
sbb
xor
daa
cmp
aam
pop
pop
mov
push
lret
or
adc
fnsave
mov
push
mov
lods
adc
int
lcall
insl
and
test
sub
or
jo
cmp
pop
push
pop
pop
push
cwtl
dec
push
jmp
pop
leave
pushf
lds
xchg
jbe
test
adc
lea
pop
insb
and
xor
out
pop
pushf
push
or
fidivrs
les
je
push
cltd
negb
xor
or
push
cwtl
arpl
shrd
repnz
xor
inc
adc
call
sbbl
lock
cmp
dec
outsl
adcb
arpl
sti
dec
add
cmp
mov
leave
push
scas
outsl
lret
mov
shll
mov
jecxz
cmc
movsb
hlt
jbe
pop
popf
ret
add
lods
pop
je
inc
xchg
xor
push
mov
negb
mov
xchg
and
stc
in
inc
sub
push
negl
xchg
dec
cmp
aaa
out
xor
pop
adc
pop
xchg
xor
dec
shr
pop
mov
push
jge
xchg
nop
lret
fisubrl
popa
mov
jle
cmp
aas
sub
lods
icebp
xchg
jl
and
and
push
jnp
movsl
lret
dec
jge
or
iret
dec
loope
jp
stos
pop
inc
je
pusha
jne
cmp
scas
push
lods
jae
inc
lcall
out
fisubrl
data16
popf
pushf
pop
inc
pop
repz
sub
ret
cmpsl
out
pop
inc
aad
sub
lahf
xchg
pop
sbb
out
pop
faddl
adc
icebp
sub
push
aad
es
sbb
dec
or
imul
xchg
sbb
pop
push
mov
xchg
push
popa
mov
jbe
in
aam
pop
dec
jae
sbb
xlat
arpl
jno
leave
mov
ret
jecxz
mov
jnp
insb
mov
jecxz
inc
add
aad
enter
mov
pop
inc
int
push
adc
fwait
jno
movq
and
sbb
inc
jnp
and
push
xlat
inc
xchg
mov
add
inc
sbbb
mov
inc
jmp
aaa
pop
xor
mulb
xchg
daa
cmpsb
rorb
out
das
push
jo
loopne
or
ljmp
jl
stc
pop
cmp
movsl
popa
jge
mov
push
sub
fisttpll
pop
ja
lods
push
pop
lods
cld
dec
or
pop
sbb
cmp
out
pusha
addr16
lods
mov
fdivp
inc
sbb
add
jbe
lahf
sub
cld
mov
mov
sarb
loope,pt
pop
mov
mov
fnstenv
mov
stos
rcr
sub
pop
pop
jmp
fildl
les
cltd
xchg
jmp
mov
les
mov
fbld
push
movzbl
int3
sti
xor
shrb
inc
adc
mov
loopne
rorl
sbb
jbe
or
loope
or
aas
imul
mov
test
daa
repz
in
and
sub
push
xor
add
mov
pop
jmp
xlat
or
aad
mov
arpl
push
sbb
mov
or
adc
lcall
dec
mov
mov
or
fbld
test
add
pop
mov
mov
clc
jnp
or
addl
call
inc
lods
pop
popa
dec
movsb
mov
nop
iret
or
jo
xchg
xchg
loop
fs
or
int
pop
and
lods
pop
cmp
inc
xor
inc
xor
aas
jg
adcl
iret
test
dec
and
xadd
adc
into
jecxz
movsb
mov
scas
testl
addr16
xorl
mov
out
xor
mov
dec
out
mov
int
xchg
push
in
mov
jb
insb
stos
imul
pop
cmpsl
add
cwtl
roll
jns
jl
sub
test
inc
pop
mov
pop
popf
sti
das
inc
xor
add
adc
test
cmpsb
sbb
addl
pop
mov
int
cltd
insb
xlat
pop
push
dec
dec
sahf
xchg
sahf
pop
xor
das
clc
lahf
pop
loopne
movsl
push
outsl
cmp
add
inc
fisubrs
sub
pop
stos
mov
addr16
mov
adc
lds
aaa
test
sub
xor
cld
stc
or
jb
and
mov
aad
aad
mov
and
xorb
loope
mov
push
arpl
cmp
push
subl
cmp
shlb
fwait
add
xlat
fwait
stc
or
inc
movsb
mov
cmp
xchg
mov
or
mov
pop
xor
stos
mov
movsl
push
xchg
cmpsl
ljmp
pop
cmp
stos
mov
sub
jnp
sub
aad
mov
push
cmp
jns
stos
mov
push
mov
sub
mov
jmp
jmp
xchg
aaa
and
push
adc
sbb
jecxz
lods
punpcklwd
ds
add
sub
testb
pop
js
icebp
sub
push
sbb
push
scas
dec
es
sti
cmp
adc
adc
dec
fs
cwtl
lret
mov
sbbl
add
aas
ret
imul
dec
cmp
add
dec
scas
mov
stos
fwait
sub
and
xchg
outsl
sbb
inc
dec
inc
stos
adc
push
fcompl
inc
lret
ficoml
adc
popa
movsl
leave
adc
push
sbb
push
sysret
jge
rcrl
inc
xor
xchg
pop
sub
adc
stos
mov
lret
inc
shr
pop
aaa
cld
jle
jmp
mov
push
lea
push
dec
shrl
insl
cmc
arpl
sub
mov
bound
mov
jb
sub
cwtl
jle
and
adc
mov
insl
xchg
loope
cli
pushl
xor
sub
pop
adc
aam
pop
lods
sub
jge
insb
jae
inc
mov
cmc
jle
jb
adc
adc
and
nop
or
shll
inc
nop
xchg
arpl
je
and
out
mov
jmp
fwait
adc
ljmp
inc
loopne
cld
sub
mov
sbb
popf
mov
pop
pop
adc
sub
pop
xchg
lods
xor
jl
dec
stos
add
in
rorl
adc
mov
inc
pop
inc
dec
sub
std
shrl
les
or
sti
jne
or
mov
pushw
fildll
inc
and
inc
adc
lahf
js
rorl
repz
fcomps
imull
inc
sbb
cmp
test
mov
int
cmpsb
xchg
sbb
in
and
pop
lods
xor
and
clc
dec
lea
jns
shlb
xor
add
movlps
sbb
test
loop
fistpll
inc
mov
pop
arpl
ja
adc
lods
cmp
fildll
pop
cmpsb
sbb
fnstenv
mov
in
aaa
cli
iret
mov
test
mov
fs
fadd
inc
sbb
push
mov
pop
lods
mov
cwtl
movsb
and
int
in
cli
push
pusha
jne
xchg
scas
mov
inc
push
mov
leave
filds
mov
xchg
subl
movsb
mov
sbb
lret
orl
and
and
lcall
adc
lret
push
icebp
push
rorb
fisubl
cmp
das
adc
movsl
fs
cmp
hlt
pop
pushf
sbb
jne
push
dec
sahf
dec
lahf
or
test
daa
test
pop
pusha
rclb
jecxz
add
xor
sub
popa
test
pop
mov
xchg
fs
hlt
mov
loope
inc
push
in
sub
sahf
and
and
xor
xchg
stos
test
xchg
lret
es
cmpb
push
inc
or
sbb
adc
push
cmp
loopne
mov
cmc
sbb
ljmp
cmc
andl
lret
loop
jne
pop
stc
icebp
fidivs
lret
addr16
mov
sbb
shrl
sti
arpl
or
push
lahf
or
dec
pop
scas
stc
clc
popa
leave
out
cmc
jg
mov
inc
adc
push
and
fwait
cmp
pop
pushf
mov
sahf
int
mov
cmp
inc
int3
inc
sahf
decl
add
mov
xchg
sbb
dec
idiv
movsb
in
sbb
adc
setp
pand
cwtl
daa
push
mov
jg
stos
dec
push
testb
jecxz
test
aam
or
xchg
pop
sbb
add
jns
push
mov
adcl
in
xor
push
mov
lahf
pusha
cs
adc
push
orb
rolb
jge
add
std
xchg
arpl
hlt
fwait
sub
divl
add
shrb
mov
xor
xchg
das
or
jns
jmp
sbb
outsl
out
inc
jmp
ljmp
mov
jns
and
cmpsb
arpl
arpl
pop
in
xchg
orb
popa
std
and
xchg
fdivs
testb
pop
xchg
shlb
adc
add
hlt
add
fcmovu
pusha
pop
sbb
call
mov
cwtl
fldcw
add
jns
and
imul
sbb
cmp
inc
mov
rcll
int
sbb
mov
sub
add
mov
mov
xor
sub
pushf
jne
sbb
lock
push
addl
aad
pusha
add
mov
jo
xlat
loop
in
adc
and
je
dec
sub
pop
test
es
add
maskmovq
notl
or
mov
or
cmpl
mov
ja
inc
in
rcrb
mov
mov
and
fisubrl
pop
cmp
js
and
push
xlat
sbb
jg
aad
inc
ds
stos
dec
pop
lret
int
mov
inc
or
bound
call
icebp
jae
xchg
add
loopne
test
sbb
test
or
add
xor
stos
fildll
jne
pextrw
or
aam
cmc
lock
sti
addr16
cmp
fsubr
sbb
stos
sbb
rcrb
cmp
jge
mov
pop
adc
pop
xorb
fstps
frstor
adc
push
gs
jb
cmp
stos
mov
mul
pop
cmp
jle
mov
inc
outsb
insb
lcall
adc
ss
xchg
and
jns
pop
cmp
pop
fsubrs
inc
or
es
ret
lds
dec
stos
or
push
xor
in
mov
mov
test
loop
push
mov
aas
mov
bound
push
push
or
xchg
in
adc
sahf
sub
pop
addb
push
cmp
xor
in
or
mov
cmp
pusha
repz
pop
cmp
popf
xchg
push
lods
in
jl
adcl
xchg
sub
mov
mov
cmp
sbb
cld
mov
stos
icebp
aad
xchg
sub
shrb
pop
arpl
adc
cmpsb
scas
cwtl
pop
add
mov
push
cmp
rcrl
cmp
jnp
decb
jb
jo
sbb
xor
mov
inc
rclb
mov
sbb
xor
cmc
popa
rcrl
mov
fildll
jmp
bswap
or
inc
paddsw
adc
pop
stos
or
fxch
rcrb
dec
and
popa
fsincos
pop
pop
mov
push
cpuid
aad
xchg
test
jl
aad
inc
dec
jns
or
cmc
popf
lds
sbb
adc
dec
cmpsl
inc
test
dec
jmp
arpl
push
orl
popl
jae
adc
pop
mov
out
inc
test
mov
push
in
add
push
dec
movsl
push
cmp
adc
mov
xor
cmp
pusha
repz
mov
adc
xor
daa
sub
push
push
mov
mov
mov
insl
vpunpckldq
sbb
mov
arpl
dec
jnp
inc
sahf
andb
jno
mov
inc
mulb
gs
cltd
aas
jmp
je
pop
ret
popl
jno
test
aas
jae
ret
adc
mov
mov
mov
test
sbb
addr16
fs
pusha
inc
push
lods
stos
out
dec
sbb
lods
les
popa
add
mov
push
out
xchg
sysret
popa
inc
or
lea
push
jp
fsubr
cmp
xchg
outsl
sbb
push
sbb
test
jmp
out
shlb
or
jbe
xchg
cltd
dec
data16
xor
and
sub
jno
das
jno
in
lods
shll
pop
adc
push
sub
int
sbb
add
stos
fisttpll
mov
xchg
jbe
xchg
bound
scas
lock
in
push
bound
pop
mov
pop
les
ss
mov
cmp
pop
negl
out
adc
mov
test
sub
leave
lods
in
mov
lds
fisubl
popa
fs
dec
push
push
pop
movsl
andl
dec
fwait
lret
shrl
lods
sbb
test
inc
test
dec
or
jle
mov
jmp
push
xchg
andb
adc
in
jnp
mov
loop
fst
in
xor
popa
sbb
fisttpl
cld
mov
cmp
sbb
cltd
lods
inc
lods
stc
call
mov
ss
jmp
dec
inc
mov
mov
pop
xor
nop
insb
mov
scas
mov
fadds
out
rcrb
xchg
jns
pop
jle
fldt
cmp
dec
cmp
sub
xor
aam
or
out
add
int
scas
mov
int3
sbb
mov
jae
jns
enter
gs
push
cmp
jns
sbb
ds
xchg
repnz
das
in
jp
push
dec
fs
cli
xor
test
ljmp
sti
sbb
pop
adc
cmp
xchg
hlt
inc
movsb
test
add
mov
js
mov
adc
popa
mov
or
les
xchg
imul
testb
lods
lret
addr16
std
pop
ja
pop
or
insb
and
in
sub
dec
dec
fisubrs
daa
lahf
jne
or
loope,pt
pop
and
sbb
adc
shrb
fldenv
arpl
inc
bnd
test
xchg
xor
loop
inc
test
js
mov
mov
mov
mov
xlat
in
pop
cmp
pop
mov
aad
dec
outsb
jb
xor
sbb
inc
mov
add
iret
pop
add
mov
mov
push
into
les
andb
adc
jl
mov
daa
mov
push
dec
mov
or
xchg
arpl
std
push
loopne
jmp
dec
dec
lods
push
mov
jp
mov
xchg
les
add
sarb
sub
aas
mov
loope
movsb
sub
inc
xor
pop
mov
push
adc
shr
xor
ret
pop
in
popa
dec
nop
les
aaa
xor
ja
jae
popa
test
mov
dec
in
repnz
mov
loop
bound
xor
xorb
arpl
mov
mov
push
push
mov
xor
pop
sub
adc
fidivl
icebp
lds
cmp
test
dec
jb
out
in
add
jp
xlat
subl
adc
scas
call
jg
scas
cs
in
int3
jae
arpl
push
loop
add
sub
pop
mov
cmove
sub
mov
mov
ja
jo
ljmp
repz
dec
jb
popa
cmp
cmp
add
push
lds
xchg
push
mov
fcmovb
mov
insl
arpl
cmovno
add
mov
fbld
sub
sbb
loopne
je
test
nop
pop
mov
les
int
push
jg
popl
xchg
sbb
sbbb
inc
movsb
gs
mov
ds
scas
push
xor
and
push
mov
mov
sub
xor
sbb
jmp
cwtl
icebp
adc
or
orl
push
jg
inc
jmp
out
ljmp
cmp
js
loope
loop
loopne
mov
dec
imul
sub
sbb
mov
pop
mov
rorl
push
pop
sbb
mov
inc
dec
pop
push
cmc
mov
subb
adc
popf
inc
loope
out
add
and
sti
jmp
loope
arpl
pop
sbb
into
pop
fnsave
lret
imul
dec
xchg
mov
mov
lret
movsl
stos
sub
fbstp
imul
mov
jg
fildll
enter
xor
stos
pop
fnsave
push
ja
cltd
lods
es
pop
lds
out
inc
push
pop
loope
lods
add
lods
jno
scas
xor
mov
insb
jge
sbb
arpl
pop
and
sub
roll
push
dec
xchg
pop
lods
out
or
inc
js
ja
xor
scas
pop
in
or
scas
sub
bnd
push
inc
mov
popf
mov
jne
psrlw
lcall
push
pop
cmc
stos
cmp
jns
xchg
add
std
and
out
jle
cltd
mov
iret
add
jns
fdecstp
test
pop
das
mov
out
sbb
and
mov
adcl
test
mov
out
mov
sub
mov
xchg
ja
jns
scas
push
imul
cmc
push
insl
push
adc
popf
stos
popf
in
movsl
dec
dec
dec
adc
cmp
ja
mov
xchg
and
dec
dec
decl
in
sub
push
stos
ret
jecxz
cmp
scas
push
sbb
pop
lret
xchg
fsubrs
mov
inc
das
push
inc
fcoms
stos
ret
adc
cmp
pusha
push
ds
add
stos
ror
mov
adc
sbb
xchg
jmp
lea
stos
stos
test
sbb
jmp
out
nop
jnp
sahf
sbb
int3
xchg
gs
test
or
andb
pop
std
arpl
cmp
rcrb
or
fs
cmp
pusha
or
gs
xchg
fcoms
lods
jge
dec
pop
cmc
out
les
into
cwtl
and
loopne
jae
or
add
iret
addr16
arpl
mov
shrb
cmp
dec
pop
cmp
cmp
and
dec
pop
stc
jb
lods
fiaddl
xchg
sar
lods
lods
sub
jne
cwtl
mov
pusha
arpl
popl
sahf
push
decb
mov
jecxz
pop
lods
push
sbb
mov
jge
mov
add
pop
xchg
pop
inc
sti
jno
dec
sub
jmp
cmp
cli
adc
jle
lock
mov
into
das
and
add
pop
ljmp
sbb
xlat
in
stos
inc
ret
dec
addb
and
sarb
add
xor
sub
fnsave
insb
sub
arpl
xor
shlb
sbb
mov
xor
mov
stc
loopne
std
das
mov
lods
or
mov
sbb
into
stos
pop
dec
pop
push
inc
jb
pop
stc
xlat
xchg
xor
stos
mov
fs
mov
shlb
jle
test
jo
xchg
aas
orl
repnz
in
pop
xor
les
insl
out
add
adc
out
cmp
xor
out
data16
mov
shlb
mov
inc
movsl
popf
push
pop
insl
in
mov
xchg
push
jnp
ss
gs
adc
movaps
add
pop
movsb
jmp
lret
jno
shrd
lods
mov
sarl
pop
hlt
sub
jp
sub
out
sub
cmp
push
inc
mov
jnp
mov
dec
mov
roll
xor
arpl
cmpsb
mov
mov
jecxz
pop
cmp
add
mov
dec
in
inc
cwtl
and
mov
aad
mov
inc
cmp
cltd
psllw
popa
popf
pusha
mov
or
mov
cs
xor
movaps
mov
or
cld
lret
fcoml
js
mov
xchg
stos
add
addb
scas
pop
inc
fs
cmpsb
add
orb
sub
dec
fwait
bound
scas
fcoms
leave
sbb
divb
ljmp
jle
fnstsw
movsl
push
cmpsb
daa
dec
out
or
add
push
loop
mov
xlat
mov
xor
in
decl
sbb
gs
outsl
inc
push
xsavec
mov
inc
push
push
clc
and
jecxz
movsl
adc
cwtl
push
stos
subb
repz
insb
call
in
xor
push
arpl
cwtl
push
mov
movsl
jle
pop
xchg
sarb
add
in
add
sub
ja
mov
sbb
iret
sub
lods
addb
lret
adc
add
repz
pop
ds
pop
jno
aam
cld
div
sub
dec
cmp
mov
cmp
and
in
mov
push
call
cmp
imul
cmpsb
push
and
adc
not
test
or
dec
cmpsb
lods
test
fisttpll
popa
pop
sbb
mov
xor
or
dec
jne
dec
loopne
setnp
ret
sbb
mov
scas
outsb
adc
test
xchg
shrb
in
cmpb
sub
clc
imul
rcrl
push
pop
xchg
sbb
movsb
out
lahf
adc
sbbb
jb
popa
cmp
aad
dec
into
ret
jmp
jnp
pop
cmpsl
insl
out
push
popf
dec
add
test
inc
jg
movsl
insl
jno
imul
stos
mov
xchg
movd
or
jbe
pop
gs
ja
outsb
or
lods
pop
dec
mov
and
mov
fistl
or
xlat
pop
gs
xor
aad
loope
addr16
scas
jnp
sahf
pusha
push
js
sub
adc
and
insb
inc
push
inc
mov
shll
fwait
jae
cmp
icebp
inc
jecxz
dec
lret
pop
es
testb
mov
jle
bound
push
mov
test
mov
pop
add
ret
mov
or
mov
and
cmp
iret
mov
shrd
sub
inc
pop
jge
mov
jne
ljmp
dec
andb
mov
mov
dec
dec
cmp
sbb
push
sahf
jmp
cmp
popf
lods
fiaddl
push
mov
sub
cmpsb
icebp
cmp
sub
inc
push
sti
dec
jo
pop
gs
cmp
hlt
insb
movsl
stc
mov
pop
jbe
cld
add
sbb
sbbl
sub
push
test
leave
mov
and
popf
inc
add
std
jae
shlb
xchg
pop
cwtl
xchg
and
out
sbb
aaa
call
or
inc
push
lds
push
nop
stc
xlat
xchg
ret
cmp
std
sahf
xchg
xor
fcmovu
shr
adc
adc
inc
outsb
pop
and
xor
fists
pop
stos
in
clc
sbb
sti
inc
inc
sahf
push
packsswb
inc
pop
sub
test
dec
stos
cld
out
dec
faddl
jge
movsb
push
cmp
mov
loope
ja
jae
adc
mov
std
dec
loop
adcb
in
sbb
popa
hlt
xchg
sbb
aad
jno
test
outsl
les
lds
push
orb
jmp
stos
add
daa
pop
xchg
popf
mov
push
repnz
add
mov
sub
sahf
dec
push
pop
notb
fstpl
cmpsb
stos
leave
mov
pavgb
fstps
out
dec
push
lods
cli
xlat
iret
lcall
dec
cmp
shl
jecxz
decb
mov
fwait
mov
movsl
and
sub
add
cmp
ss
sbb
and
pop
jne
push
out
dec
add
rorb
fwait
xor
cmp
mov
push
call
xor
rcll
test
push
mov
and
xor
xchg
cmp
dec
lcall
dec
hlt
jg
in
dec
sub
scas
cwtl
sub
aaa
lds
popf
jbe
out
call
insl
les
je
cltd
pushf
sub
lcall
shrb
pop
jmp
add
xchg
mov
sbb
pop
nop
xchg
mov
push
push
jnp
cmp
popa
jo
inc
sub
lea
add
sub
mov
xchg
and
insl
jae
adc
gs
int
sbb
push
push
dec
test
dec
push
std
jns
xchg
addl
pop
movsl
shlb
imul
sub
loop
lcall
pop
mov
cmc
in
shlb
subl
mov
lea
sub
sbb
and
sub
xor
push
xchg
sti
jmp
sbb
mov
sub
sub
pop
pop
jg
jnp
adc
cmp
adc
lods
inc
jp
add
repnz
lods
ds
cltd
lret
inc
xchg
loopne
fs
bound
ficomps
xchg
test
std
pop
mov
adc
sub
mov
jmp
xchg
mov
push
ret
mov
mov
in
cwtl
sti
mov
inc
mov
pop
fwait
push
aas
lods
push
or
push
clc
adc
rep
aas
sbb
stos
aad
test
mov
adc
inc
shll
pop
mov
test
ret
pop
dec
pop
push
pop
in
adc
call
pop
leave
repz
inc
adc
jmp
fs
imul
adc
out
push
mov
out
xor
mov
bound
add
xchg
jl
imul
sub
lock
mov
lcall
cld
adc
mov
stos
sbb
sbb
out
mov
stos
mov
int
cltd
cmpsb
and
int
js
adc
lods
cmc
xchg
xor
push
sbb
dec
push
aam
sub
out
cltd
movsb
xor
mov
push
lret
stos
lds
dec
inc
lock
sbb
ror
loopne
add
loopne
cltd
test
pop
xchg
add
int3
push
adc
jbe
sbb
push
stos
fdivrl
dec
xchg
lods
mov
cmp
f2xm1
bound
sbb
test
jno
cmp
lcall
xor
addr16
push
nop
cltd
pop
test
aaa
push
call
push
pop
fnstsw
icebp
push
add
lods
fs
mov
xchg
popa
popf
inc
int3
lods
enter
mov
arpl
shll
add
sbb
jb
lret
or
gs
aas
out
adc
lret
out
shrb
sub
push
insl
cmc
jmp
mov
cld
andl
sub
add
and
push
pavgb
jmp
gs
xchg
cmpsb
andl
push
mov
push
push
or
mov
add
js
pop
sbb
pop
mov
adc
dec
xor
cld
testb
sub
mov
mov
cld
push
test
pop
pop
stos
imul
fsubs
pop
pop
lcall
sub
or
mov
pop
cmp
leave
mov
bound
sti
sbb
stos
cltd
pop
jge
fmul
andb
add
pop
mov
sub
pop
adcl
jns
in
add
fnstenv
dec
movsb
bound
push
cmc
add
cmp
xchg
add
aaa
mov
int3
out
sbb
out
or
notl
sti
pop
je
sbb
or
push
out
mov
divl
mov
adc
lods
mov
mov
sub
push
fs
xor
nop
inc
pop
pop
mov
cli
rcl
gs
dec
xchg
pop
pop
icebp
push
pop
sub
jp
insb
repnz
jle
bound
std
and
fidivl
add
mov
fisttpll
and
or
dec
leave
dec
jle
jo
xchg
daa
push
push
into
adc
cmp
jecxz
in
mov
dec
arpl
sbb
out
imul
stos
cmpb
mov
fldt
xor
in
data16
and
bound
cld
lea
inc
cwtl
ja
xchg
mov
jns
xlat
xchg
lcall
mov
test
fstpt
rclb
sbb
stos
in
loopne
clc
jo
les
lods
lret
aas
mov
jge
or
inc
xchg
or
sti
xor
lods
das
push
fs
test
lods
xor
lods
xchg
insl
mov
inc
mov
es
aas
push
rcl
mov
pop
fldenv
fisttpl
and
jns
cs
or
rorl
arpl
enter
inc
sbb
iret
sbb
div
jno
call
mov
sti
pop
aas
clc
jnp
mov
sbb
test
lahf
stc
xor
push
sbb
sti
mov
stos
icebp
mov
push
fsub
mov
push
cmp
out
add
mov
push
cmp
mov
or
jp
push
insb
out
xchg
popa
adc
xor
shrb
mov
cmp
lea
inc
ss
xchg
outsl
mov
paddsb
jl
jns
notl
loop
leave
cwtl
inc
daa
stos
jo
xor
cmp
loope
lret
sbb
insl
add
pop
test
jns
jge
mov
stos
stos
sbb
mov
adc
mov
aaa
prefetcht2
jmp
cmp
cmp
ficompl
cmp
sub
mov
pop
jo
cmp
pop
out
xor
sub
add
mov
mov
sub
jne
pop
stos
mov
mov
test
daa
jb
test
mov
xchg
subb
mov
xor
rcrl
arpl
adc
popa
xchg
xor
jns
stos
or
jns
push
mov
adc
cs
rcl
sahf
cld
and
ljmp
mov
sbb
jno
frstor
sbb
inc
mov
adc
sbb
cmp
aam
add
imul
cmpl
or
insl
jno
mov
xor
inc
aas
jne
cmpsl
mov
enter
pop
xor
pop
mov
pop
arpl
push
xor
repnz
jmp
cmpsl
or
stos
mov
loop
pop
lock
into
mov
dec
mov
popa
dec
or
push
dec
stos
sti
sub
outsb
mov
iret
pop
lods
test
lahf
mov
fimull
nop
adc
lock
sub
jmp
pop
std
std
xor
pop
and
and
xor
addl
inc
clc
sahf
out
lret
in
in
in
addr16
in
jl
add
sbb
cmp
sti
push
bound
enter
sbb
mov
sbb
mov
or
cli
andb
jno
mov
arpl
insl
out
out
inc
popf
or
add
cmp
clc
popa
xor
jl
pop
push
push
std
lahf
lods
shlb
int
jecxz
out
repnz
cltd
subl
sti
outsb
sbb
bound
mov
push
or
iret
ret
popf
iret
call
inc
insl
pop
mov
loopne
sub
in
and
loop
es
pushf
push
inc
stos
mov
cmp
cmpsb
cmp
jge
push
sub
movb
add
adc
scas
cld
je
mov
psubsw
sbbl
or
xor
punpckldq
and
call
jne
xchg
jns
inc
data16
push
cs
jno
mov
mov
fisttps
add
and
jg
movsl
lods
sub
rcrl
jge
mov
adcl
adc
pop
pusha
push
cmpsb
lcall
cwtl
inc
xchg
test
sub
aam
mov
stos
sbbb
imul
sbb
or
sbb
jp
adc
cltd
shrb
push
mov
xchg
movsl
mov
or
test
and
cmp
mov
xchg
das
iret
jg
adc
pusha
test
sti
pop
in
pop
sbb
cwtl
aaa
jl
adc
pop
jg
cmp
mov
jbe
psllq
xchg
and
fxch
mov
bound
mov
mov
xchg
sbb
jns
push
pop
sahf
test
sbb
push
xchg
pop
push
add
testb
inc
int3
repnz
sub
dec
in
repz
ret
xchg
dec
xor
xchg
fs
sbb
dec
in
or
sub
pop
cmp
sub
movsb
loope
sub
mov
adc
test
jg
hlt
aam
es
add
cmpsb
push
fadd
xor
mov
inc
dec
and
pop
sbb
mov
vmwrite
arpl
add
ljmp
ds
sbb
dec
mov
sub
sbb
popa
in
loop
xor
pop
mov
xchg
repz
fists
into
sbb
rolb
fildll
repnz
pop
dec
xor
mov
insl
stos
adc
inc
mov
inc
into
paddw
int3
xchg
sbb
fwait
cmp
cltd
lods
sbb
jbe
out
cmp
lds
das
push
pop
mov
mov
lods
xchg
inc
jecxz
dec
pop
icebp
dec
cld
stos
mulb
lods
aas
mov
leave
lret
and
adc
mov
ljmp
mov
xor
pop
dec
and
lods
orb
pop
frstor
push
ret
std
xor
in
dec
sbb
inc
or
mov
pushf
cmp
mov
sbb
pushf
sub
push
or
xor
dec
out
mov
test
es
and
jg
push
adc
pop
adc
mov
dec
aam
mov
xchg
add
sbb
or
mov
adc
mov
stos
fstps
enter
aad
orb
aad
or
mov
or
cmp
das
aaa
cmp
int3
loopne
jmp
arpl
ljmp
mov
lea
or
jg
mov
test
sbb
or
mov
push
jle
arpl
mov
bound
inc
jnp
or
push
inc
pop
sbb
inc
fisubrs
xchg
mov
cmp
js
fxch
loop
test
push
lods
or
imul
add
xchg
cmp
fstl
mov
jge
leave
decl
subl
and
aaa
xchg
bound
bound
cmp
dec
stos
imul
test
xor
dec
lahf
mov
push
mov
push
cltd
bound
jmp
dec
lahf
into
test
popa
push
pop
mov
and
repz
imull
fbld
sbb
jmp
adc
cwtl
pop
xchg
sbb
adc
outsl
jae
outsl
dec
jecxz
rcl
nop
jg
daa
mov
jge
push
aad
sub
add
sti
pop
stos
and
int
aas
add
dec
daa
dec
add
mov
lods
int
mov
pop
jne
aaa
cmp
cmp
sub
sub
test
jmp
pusha
and
xchg
loope
or
movsl
dec
and
fsubs
pop
pushl
or
in
lahf
inc
das
xor
jns
ret
insb
push
ret
sub
xchg
sub
hlt
scas
xchg
pop
or
or
ss
mov
mov
mov
sbb
mov
js
fs
adc
sbb
stos
movsl
outsl
adc
push
movl
cmp
stos
inc
ss
hlt
cld
and
adc
sarb
test
cmp
dec
adc
mov
pop
test
sbb
loop
lods
sub
and
xchg
loopne
imul
xor
ret
lahf
inc
sahf
cltd
dec
push
leave
das
mov
lea
dec
aas
mov
sub
jnp
xchg
push
xor
das
sbb
mov
pop
mov
mov
out
xchg
repz
bound
clc
sbb
sub
jp
sbb
stos
mov
ja
xor
iret
inc
pop
jo
hlt
dec
arpl
std
cmpb
scas
aaa
fwait
lods
pop
adc
mov
mov
sbb
dec
mov
pop
cli
rorb
fsubrl
arpl
mov
xor
getsec
cli
mov
fstl
test
lods
shrb
push
ret
pop
icebp
sti
rclb
jo
mov
and
shl
sbb
cmp
push
sub
and
sbb
test
cmp
cmp
pop
dec
subb
insb
lret
xor
mov
ja
rorb
inc
push
cmp
iret
jle
repz
cmp
pop
mov
cli
sbb
xchg
ret
clc
adc
lret
sar
stos
aas
add
pop
mov
jne
sbb
repz
imul
sbb
aas
cltd
xor
mov
ss
pusha
stc
call
jno
lock
adc
in
mov
pusha
xchg
lock
les
arpl
dec
fsts
aad
mov
test
lret
mov
mov
ret
pop
inc
je
out
sub
inc
jp
fisttpl
and
loopne
fs
xchg
ds
adc
popa
lret
lock
hlt
cmp
adc
adc
jnp
stos
pop
mov
mov
inc
push
adc
stc
add
xor
dec
xor
pushf
pop
adc
jmp
pop
or
sub
dec
cmp
into
adc
pop
jnp
sbb
inc
pop
inc
push
lods
or
pusha
xor
aad
pop
icebp
mov
ja
mov
dec
push
push
subl
push
int
pusha
jmp
ds
inc
sub
addb
add
xchg
ljmp
in
insl
xchg
mov
xchg
mov
inc
adc
push
std
pop
push
popa
enter
aas
jno
test
jge
pop
sahf
data16
fs
out
das
mov
lret
adc
fldenv
nop
out
lret
xchg
insl
jbe
sbb
mov
and
jle
mov
jecxz
ja
dec
jl
int
lret
nop
gs
fs
add
inc
int
cld
sbb
mov
jg
sbbl
mov
jae
jnp
add
mov
xchg
mov
jae
imul
inc
mov
sub
dec
pusha
int
mov
in
xchg
add
pop
jns
movsl
xchg
je
cmpsb
adc
pop
scas
xchg
push
push
inc
mov
jae
inc
jb
mov
cmp
jecxz
sbb
loopne,pn
xchg
pop
test
cmpsl
add
pop
jl
aad
xchg
dec
pushl
sub
scas
repnz
addb
popf
aad
pop
push
test
mov
clc
lods
and
pop
cli
and
pop
outsl
jne
popa
mov
add
imul
in
sti
das
mov
mov
adc
xchg
or
lods
jno
and
stos
mov
pop
mov
fisubrs
imul
insb
adc
test
repz
jl
gs
mov
xchg
push
sub
cmp
aam
aad
int
scas
dec
cld
cmp
cmpsl
sbb
addr16
incl
adc
and
lods
gs
add
jbe
movsl
mov
lods
xor
cmp
mov
mov
bound
shl
pop
xchg
lods
fmull
jns
xor
xor
or
fdivp
jbe
test
push
test
pusha
shll
imul
jb
mov
ret
mov
or
imul
pop
outsl
addr16
cvtpi2ps
rolb
cmpsb
scas
pop
lods
mov
xor
lcall
bound
add
mov
and
mov
xchg
cmp
arpl
ljmp
das
enter
icebp
jp
jmp
mov
and
push
mov
loope
pop
outsb
push
popf
in
mov
movsb
scas
js
jno
jb
sub
mov
dec
cwtl
inc
stos
inc
xchg
jmp
imul
xchg
lret
push
mov
mov
add
jne
icebp
or
ss
xor
loop
push
icebp
sbb
push
mov
int
sub
sbb
push
adc
or
andb
jle
mov
mov
pop
arpl
cmc
xchg
or
add
jle
lods
xchg
adc
sahf
xlat
xchg
aad
jb
jne
sbb
pop
jecxz
shl
fisttpll
mov
adc
jecxz
mov
fdiv
or
ret
dec
scas
adcl
push
dec
rorb
das
iret
and
pop
in
out
cmpsl
mov
scas
sbb
xchg
jns
jge
lods
cmp
mov
jbe
sub
dec
xchg
mov
addb
outsb
cmc
cmpsb
stos
stc
xchg
fs
loope
shrl
arpl
fwait
cmpsl
ljmp
shll
pop
adc
sub
outsl
jmp
cli
or
in
arpl
push
mov
push
mov
fs
addr16
add
icebp
scas
ljmp
or
inc
pop
sahf
popf
divl
adc
jmp
add
or
dec
cltd
cmp
stos
test
or
push
mov
imul
cs
add
stos
or
sbb
push
sarb
pusha
nop
or
push
inc
imull
sub
jle
clc
ljmp
add
pop
pushf
jmp
pop
ficoms
fnstcw
mov
ljmp
test
xor
cmc
jne
add
and
adc
mov
adc
popa
xor
mov
xlat
lahf
or
arpl
mov
sbb
cmpsl
ljmp
inc
lea
mov
sub
xor
push
gs
xchg
mov
mov
stos
testl
mov
sbb
ja
jbe
fs
fdivrl
lret
stos
jnp
adc
sub
mov
jecxz
xor
dec
cmp
arpl
xor
repnz
lret
dec
xlat
incl
add
rol
aaa
cmpb
jmp
shll
scas
aad
ds
adc
inc
xchg
jno
cmp
inc
insb
jg
test
popa
stos
add
movb
mov
dec
push
arpl
pop
jo
in
pusha
setns
xor
adc
push
fcomps
sub
sub
lods
pushf
adc
sub
cmp
xor
and
add
xchg
movsl
mov
push
test
mov
xchg
cmp
in
daa
xor
pop
jecxz
jmp
loope
add
movsl
sbb
lret
addr16
stos
adc
insl
mov
jo
sbb
insb
or
mov
sbbb
icebp
pop
mov
jb
divl
test
bnd
pop
adc
lods
out
test
outsb
insl
sbb
dec
jmp
push
mov
lret
fbstp
lahf
xchg
cmp
pop
call
and
inc
mov
add
stos
push
gs
ret
push
pop
pop
paddq
push
jge
movsl
loop
xor
fisttpl
add
jge
pop
mov
loope
lock
xor
pop
nop
xchg
dec
sub
cmp
mov
jge
test
pop
jmp
adc
and
jl
test
sbb
push
pusha
push
lret
loope
je
addr16
loope
roll
rcr
xchg
rcrb
inc
lahf
cmp
and
inc
lods
jp
fistpl
icebp
insb
imul
push
adc
adc
shlb
mov
into
nop
pop
stc
xchg
inc
movsl
test
push
dec
test
into
pop
sub
sub
jp
lcall
fistpll
mov
mov
addb
mov
inc
clc
jae
pop
adc
out
lds
frstor
mov
pop
cwtl
push
pop
or
fildll
mov
or
stos
or
jg
inc
push
xchg
adc
bndstx
test
jg
shll
fs
jmp
add
push
adc
cmp
push
leave
pushl
pop
lods
dec
out
addb
sbb
inc
xlat
call
xchg
cmpsb
mov
jns
fiaddl
lods
sub
jb
jmp
xchg
push
push
sub
lea
imul
fwait
scas
imul
mull
push
loope
jmp
shrb
ja
mov
fwait
arpl
xchg
inc
or
ret
and
arpl
sub
mov
mov
mov
fwait
mov
rolb
fcoms
pop
or
xlat
cmpsl
stos
in
int3
mov
iret
adc
push
jle
adc
std
insl
arpl
cmp
jp
inc
push
push
fs
mov
pop
orb
inc
mov
nop
arpl
push
adc
or
shrl
ss
or
in
mov
xchg
test
pop
loop
or
pop
xor
or
mov
xlat
xchg
pop
xchg
stc
xchg
js
mov
jbe
clc
jno
lods
popa
xor
and
xor
xor
push
in
or
test
pop
jne
arpl
mov
add
or
sbb
sbb
jbe
sahf
cmp
and
adc
mov
call
inc
inc
xchg
cmp
sub
xor
popa
inc
aas
lret
or
mov
cmp
dec
add
jae
inc
stc
push
aad
mov
repnz
jne
out
repz
add
fcomps
jno
lret
test
pusha
lret
in
mov
dec
or
outsb
cmp
stos
and
jb
in
fsubrp
ret
xor
dec
jno
test
imul
fstp
aas
sbb
stc
push
repz
pop
paddq
pop
mov
and
xchg
push
cmpsb
xlat
pop
xor
mov
add
push
mov
ds
mov
insl
mov
les
das
gs
fwait
mov
bound
pop
shlb
mov
sahf
inc
imul
in
std
aaa
sub
loope
std
es
pop
scas
inc
punpcklbw
mov
jl
pop
cmp
shrb
fsubrs
aad
test
rcll
scas
dec
sub
repz
xchg
inc
bound
cwtl
xchg
out
pop
mov
and
adc
andl
add
into
arpl
sbb
cmc
lds
or
fisttpl
ret
cmpsb
xor
aaa
shlb
sub
push
jge
lods
adc
pusha
int
mov
dec
int
mov
test
mov
mov
jecxz
idivb
mov
icebp
adc
mov
cmp
add
cmp
cld
xor
and
push
int
movsl
std
in
pop
xchg
dec
adc
addr16
cmp
stc
cmp
sub
out
xchg
sti
mov
or
add
fs
push
popa
dec
push
mov
nop
out
cli
rcrl
adcb
xlat
pop
adc
hlt
adcl
pop
jmp
jno
lret
add
add
dec
dec
cmp
rclb
push
scas
jl
push
pusha
pop
fnsave
jne
sub
jg
stos
popa
xchg
mov
gs
enter
or
pop
jne
outsl
add
mov
stos
mov
cmp
xchg
stos
jns
mov
adc
imulb
xchg
mov
mov
xlat
sub
or
fs
test
fbld
sbb
mov
adc
add
jecxz
pushf
scas
adc
add
fs
aad
add
movq
cmovo
gs
leave
ljmp
fidivrl
popf
mov
or
in
adc
repz
sub
mov
inc
sub
psubsb
cmp
add
push
inc
das
jge
sbb
cs
loopne
mull
mov
mov
dec
fldt
inc
aad
inc
out
jo
ljmp
dec
jmp
push
mov
pushf
mov
cmpsb
mov
aam
push
add
movaps
add
jno
pop
pusha
movsl
insb
push
or
arpl
gs
arpl
adc
popa
add
int3
lods
and
fiadds
cmp
in
and
notb
js
pop
jl
mov
shll
mov
push
hlt
adc
loop
or
int
addl
dec
xchg
jns
in
adc
jae
enter
out
repnz
movswl
pop
cmc
mov
dec
outsb
adc
xchg
mov
hlt
fistpl
mov
pop
cmpsb
es
int
sbb
repnz
mov
jg
stos
loope
sahf
scas
mov
add
popf
pop
mov
aaa
out
push
test
pop
inc
cmp
dec
adc
stos
inc
imul
pop
fisubl
rolb
jo
lret
mov
lods
int
push
je
mov
cmpsb
dec
arpl
out
cmp
add
adc
pop
xchg
test
js
jecxz
or
xchg
popa
adc
stos
popa
ds
daa
cli
movsl
es
lcall
in
loop
adc
in
xor
stos
xor
rcrl
xor
xor
add
jecxz
add
stos
and
into
and
dec
arpl
int
push
dec
push
shr
repz
pop
mov
adc
js
dec
inc
scas
stos
rcrl
insl
sahf
xor
jno
ror
leave
adc
adc
test
fnstsw
outsb
push
dec
or
lahf
fidivrl
dec
lods
mov
outsl
sub
pop
addr16
pop
lret
mov
imul
pushl
ret
xchg
and
jo
arpl
inc
fwait
or
pop
mov
xchg
sub
or
xor
xor
lret
pop
pop
andb
add
pop
sub
mov
stos
jmp
xchg
popf
xchg
push
add
arpl
xlat
rolb
mov
adc
adc
mov
int3
stos
lea
fsubrl
bound
fs
mov
hlt
stos
mov
pop
push
das
and
sahf
adc
mov
loopne
sbb
inc
lods
adc
mov
jne
leave
pop
js
int
fwait
rcrb
push
push
test
inc
mov
shlb
icebp
dec
gs
sbb
cmp
mov
mov
xchg
shl
xor
enter
or
shll
fstps
mov
lock
fsub
sub
or
mov
dec
lods
mov
in
sbb
and
adc
pushf
les
xlat
sahf
add
aam
gs
pop
pop
adc
inc
rcrl
lods
stc
push
mov
fmul
cli
sbb
or
rol
add
sarl
mov
cltd
ficomps
orl
loope
adc
arpl
pop
and
sbb
lods
xchg
sub
sbb
mov
shrb
xor
xor
dec
lea
mov
andl
xchg
fistpll
add
imul
xor
and
fdivrs
out
orl
and
cs
add
pop
xchg
movsb
stos
icebp
and
xor
and
daa
cltd
bound
adc
jge
push
stos
test
sbb
fwait
std
sti
cmpsb
stos
sub
xor
je
popa
je
push
std
test
mov
mov
popa
adc
mov
adc
pop
sbb
lods
jb
ss
xchg
pop
loop
aad
incb
loopne
rcrl
sbb
pop
jbe
arpl
jae
repnz
lahf
inc
cmp
outsl
sub
test
xor
outsb
dec
lock
xlat
jnp
adc
mov
or
sbb
into
dec
in
stos
sub
xor
and
imul
loopne
mov
lahf
add
bound
add
and
xchg
sbb
xchg
stc
or
enter
sbb
and
push
popa
daa
or
mov
daa
decl
mov
xor
sbb
sub
das
mov
leave
dec
test
aas
out
fs
or
pop
stc
arpl
lret
lds
jl
cs
ds
xchg
cs
push
pop
outsb
cmp
ds
mov
cmpsb
lds
cmpsl
add
daa
cltd
int3
lds
add
pop
mov
out
xchg
les
popf
jne
dec
dec
loop
test
bound
xor
push
xchg
or
rolb
cmp
pop
inc
sbb
add
mov
sbb
xchg
jmp
stos
push
sbb
lds
sbb
stc
sti
lahf
pop
cmp
test
pop
inc
pop
mov
pusha
inc
icebp
and
pop
and
shll
ret
fistps
jns
leave
lock
pop
jg
pop
inc
xor
into
incb
pop
leave
rep
aaa
icebp
popa
imul
fs
outsl
test
mov
int3
and
idivb
aad
stc
adc
sti
inc
je
mov
dec
lods
cmp
push
dec
es
mov
js
rcrb
mov
ss
cmp
sub
push
sub
pusha
leave
cmp
cmp
fnsave
xchg
sbb
mov
dec
in
push
or
xchg
orb
add
loopne
push
and
jnp
and
insl
inc
inc
xchg
xchg
pop
xchg
data16
pop
adc
popf
dec
mov
arpl
insl
mov
push
fcmovbe
xor
cmpsl
imul
sti
jnp
fwait
sbb
mov
sub
xchg
xorb
es
inc
bound
dec
mov
adc
push
cltd
sbb
ret
loop
mov
sub
test
ljmp
and
mov
popa
out
pop
lea
sub
push
lods
sbb
mov
imul
insl
adc
lret
push
mov
pusha
imul
dec
decb
cld
pop
sub
xor
aad
sub
cwtl
or
sub
aaa
ret
testl
test
xor
sbb
xchg
les
jnp
jae
xchg
adc
pop
mov
shll
inc
repz
lahf
imul
aaa
adc
xchg
repz
and
jecxz
mov
mov
popa
insb
sub
xor
stc
cmp
xor
rolb
sahf
xor
xchg
mov
inc
mov
in
js
jne
sub
lret
fsubrs
push
pop
sbb
or
mov
inc
andb
xor
xchg
dec
and
or
ret
pop
push
or
sbb
test
jne
test
sbb
xor
pop
push
inc
insl
cmp
pop
push
sbb
and
mov
andb
add
and
fcoml
daa
adc
add
xchg
sbb
ret
dec
dec
cs
and
xchg
and
adc
jne
mov
mov
movsl
sarl
dec
push
addl
pusha
mov
adc
arpl
pop
leave
sbb
cmp
push
xchg
sti
leave
push
mov
fmuls
in
adc
fisubrl
mov
in
popa
sbb
or
movsb
xchg
lods
add
mov
mov
adcb
insb
insl
push
lcall
and
pop
adc
sub
stos
add
repnz
mov
icebp
cmp
mov
dec
decb
fists
bound
rorb
sub
dec
cmp
pop
shlb
xchg
sub
fsubp
and
shrb
cmpsb
jno
inc
fdivl
insb
cltd
pop
roll
push
mov
jne
push
int
gs
aam
sbb
jnp
or
pop
pop
mov
idivb
das
xchg
dec
mov
test
cmp
cmp
lods
aad
lret
xchg
or
imul
sbb
cs
ret
xor
shlb
dec
cmp
loope
lret
inc
push
mov
dec
or
out
xor
es
lret
adc
or
shll
sbb
outsb
ja
adc
jns
or
jge
dec
call
lods
mov
mov
ret
and
sub
imul
jmp
mov
stc
sub
insb
mov
cmp
xchg
mov
ficompl
inc
sbb
jl
pop
roll
gs
inc
add
mov
lock
jo
jns
sub
jb
mov
xor
stc
test
arpl
out
jg
push
out
sub
and
push
pop
pushl
mov
push
sub
jl
sbb
inc
lock
int3
rorb
addr16
jne
fwait
pop
lcall
pop
pusha
jne
ss
enter
dec
test
iret
loop
cmp
cmp
leave
lock
and
jle
or
and
stos
cltd
add
cmpsb
fisttps
ljmp
scas
out
int3
pop
cmp
xchg
inc
adc
arpl
fwait
jecxz
jle
jle
nop
rcl
mov
fistl
mov
add
test
push
xor
bswap
ss
and
in
sub
lret
lds
dec
xor
jnp
mov
add
rcl
jno
sbb
imul
xor
pop
cmpsl
cmp
adc
testl
pop
ds
test
test
cs
ja
and
outsl
movb
cmp
or
push
das
arpl
int
or
mov
cmc
sbb
add
jae
popa
test
leave
lds
pop
fwait
loope
fistl
pop
gs
test
sub
call
jp
xor
push
negl
sbb
hlt
scas
rcrl
outsb
lds
les
xor
fstl
data16
stc
int
xchg
mov
sbb
orl
scas
daa
test
dec
push
and
dec
fdivl
subb
dec
inc
mov
int
cmp
inc
lea
add
dec
ret
or
imul
mov
les
jb
mov
insb
fwait
push
sub
fistpl
cmc
cltd
mov
fcomps
fld
aad
push
pop
mov
clc
push
adc
xchg
add
jmp
jne
in
cltd
inc
mov
lock
rorb
mov
mov
lds
lret
popa
stos
mov
lds
enter
dec
popf
add
push
dec
mov
cli
cmp
jae
add
dec
jbe
cmc
ret
cmp
adc
iret
push
cmp
add
icebp
jnp
sbb
add
test
adc
rcll
pop
sub
out
lcall
dec
movsl
push
out
or
hlt
inc
inc
scas
iret
mov
xchg
imul
lods
lret
bound
daa
mov
popa
push
movsl
cmp
sub
arpl
shrb
lret
lret
push
test
adc
xorb
and
mov
ret
repz
fs
sub
pusha
icebp
push
xor
movsl
aas
push
sbbl
xor
pop
sahf
paddusb
push
test
repz
jmp
mov
or
pop
push
insb
daa
dec
sub
or
sarb
and
popf
outsl
inc
pop
mov
in
cwtl
rcrl
push
or
xchg
push
cltd
dec
stos
push
cltd
fnstenv
in
push
mov
add
cmp
jge
jbe
icebp
jnp
pop
ljmp
stos
repz
or
sub
lods
xor
hlt
add
or
lea
ljmp
push
mov
pop
loope
insl
or
outsl
xor
push
pop
xchg
jle
out
push
push
cmp
sbb
fucom
add
cli
or
arpl
add
jge
or
adc
iret
test
sbb
jge
inc
pop
xor
mov
jle
cpuid
push
cmp
xchg
fstl
jp
cmpxchg
movsb
cld
adc
adc
adc
imul
nop
mov
add
sbb
xor
in
sbb
xchg
pop
and
sahf
jns
mov
mov
mov
enter
mov
lahf
push
and
mov
mov
and
aaa
mov
in
es
and
out
adc
repnz
sti
test
aas
or
and
push
nop
popa
jmp
movlps
xor
lods
xor
fs
xor
push
movsl
mov
sbb
sbb
pop
or
and
repz
or
or
insb
nop
popf
dec
xchg
cmp
cmpsb
insb
shll
push
mov
fdiv
stc
mov
jae
jbe
dec
mov
xchg
fs
or
js
sbb
jle
push
hlt
mov
inc
adc
mov
and
mov
inc
push
in
repz
in
js
pop
pop
pextrw
das
inc
sub
std
or
ljmp
and
pushf
adc
dec
das
cmc
xor
mov
popl
mov
das
sbb
shrl
call
lods
lods
paddd
ret
push
jne
jne
and
fs
and
cmp
fcompl
leave
pop
xchg
bound
cmp
pop
lea
push
push
or
xor
and
mov
pop
xor
mov
stc
arpl
adc
or
add
cmpsb
push
out
daa
daa
push
scas
shrb
pop
dec
inc
fs
icebp
pop
sahf
out
push
fwait
mov
jmp
fucomp
out
mov
adc
push
jmp
movsl
shl
and
stos
orl
mov
outsl
aaa
mov
xchg
mov
push
push
aaa
mov
scas
add
fildll
rorb
jno
sbb
xchg
or
loope
loop
mov
imul
inc
xor
mov
adc
call
into
push
sbbl
xor
adc
lds
test
mov
xchg
mov
lcall
pop
pop
pop
mov
mov
xor
lock
jle
lea
addl
cmp
sbb
cmp
pop
or
mov
test
jno
ljmp
arpl
rorl
push
loop
mov
ja
pop
jp
das
pop
pop
ret
inc
dec
mov
adc
decb
inc
movsl
fadd
lods
in
fdivs
inc
pop
adcl
lods
fdecstp
pushf
dec
and
fs
cmp
leave
cmp
addr16
jmp
pop
sti
xchg
or
popf
sbb
cmpsl
shll
mov
les
push
pop
mov
mov
aas
push
add
pop
aaa
ja
inc
pop
repnz
add
pusha
pop
test
inc
ret
pushl
mov
mov
bswap
rcrl
sub
stos
jns
leave
push
rcrl
sbb
add
fdivs
sbb
mov
xchg
pop
int3
test
out
or
jb
push
mov
pop
cmp
int3
pop
mov
out
xor
xchg
arpl
cs
xchg
xchg
aam
and
loop
and
rep
add
movsb
pop
mov
adc
and
mov
call
xor
cwtl
push
push
test
lds
push
addr16
adc
inc
movsb
xchg
sbb
and
mov
out
popa
sbb
idivb
xchg
cmpsl
jne
out
in
sbb
imul
inc
scas
inc
jbe
pop
pop
sbb
stc
test
cmp
loopne
arpl
sbb
insb
fcmovne
stos
jno
sbb
or
xchg
arpl
loope
les
mov
out
lahf
sbb
insb
mov
add
mov
sub
insb
inc
adc
push
imul
mov
fisttps
sbb
push
in
mov
sbb
out
sub
out
int
mov
out
sub
push
test
dec
xor
push
and
fucom
pop
leave
mov
subb
adc
jo
gs
scas
imul
lret
sti
pop
in
add
test
add
push
fisubl
in
mov
xchg
inc
push
sub
pop
roll
xor
sbb
dec
test
stos
imul
ficoms
jb
lahf
mov
add
lods
lret
loope
mov
popa
lds
jb
lea
shll
lods
mov
add
add
cmc
fs
faddp
movsl
sbb
aas
sbb
sbb
sahf
ret
adc
adc
bound
xchg
pop
dec
mov
pushf
push
push
loope
add
xchg
jb
fstl
sahf
pop
fdivl
out
ss
inc
mov
and
mov
mov
insl
mov
push
mov
ljmpw
jecxz
pop
pop
jo
ja,pt
adc
inc
imul
jno
dec
into
pop
cmp
cli
insl
scas
or
pop
cmp
imul
gs
pop
cmp
mov
cmc
xchg
cmp
ret
push
popa
xor
aaa
pushf
cmp
adc
inc
rcrl
and
or
bound
mov
jmp
jp
scas
jo
test
cmp
js
jg
sub
movsb
push
fists
enter
insl
lds
fisttpll
or
testl
adc
mov
ds
cmp
adc
into
pop
sbb
push
int3
adc
mov
inc
push
js
movsl
inc
mov
loop
int
gs
in
iret
pop
jae
lcall
xor
fs
push
fstl
popa
bnd
jmp
inc
leave
sar
jb
faddl
add
mov
stc
adc
in
ret
mov
jns
fwait
and
xchg
flds
push
in
in
pop
xchg
scas
lods
lods
jno
add
xlat
xchg
mov
xchg
std
ja
fs
aaa
cmp
lret
jnp
cmc
sub
scas
mov
inc
out
ja
adc
lds
pop
or
ljmp
mov
mov
xor
pop
mov
imul
sbb
xor
xchg
or
pop
rcrb
push
ficoml
pop
inc
and
aad
xchg
mov
push
test
pop
imul
cmpb
fldl
bound
sbb
mov
mov
jbe
addr16
xorb
dec
gs
sbb
loope
adc
sti
stos
cltd
xchg
jns
add
sbb
adc
pop
into
fsubrs
imul
mov
jb
adc
aas
leave
and
jnp
movsl
jae
and
in
cmpsl
addr16
dec
rcrl
pop
add
cmp
sbb
xchg
sbb
or
leave
inc
daa
xchg
jmp
fistpl
sub
dec
movsb
daa
imul
sub
fdiv
cli
enter
movsb
and
stos
int3
inc
push
outsb
repz
cwtl
sbb
sub
arpl
or
pop
push
shll
mov
stos
jmp
cmp
dec
mov
out
sbb
dec
fwait
mov
loop
sub
mov
into
aad
mov
gs
insl
mov
fs
inc
pop
or
mov
inc
pop
sbb
sbb
loopne
adc
and
ret
mov
ds
sbb
movsl
hlt
or
lea
lods
and
pop
sbb
or
lods
xchg
out
push
out
adc
pop
jmp
hlt
bound
insb
test
and
push
sbb
jbe
daa
aaa
inc
out
push
sbb
notl
les
and
cmc
jnp,pt
in
or
in
cmpsl
lods
adc
test
push
sub
inc
pop
cmpb
out
add
sub
sub
pop
mov
aam
adc
cmc
test
outsl
mov
loop
pop
jp
jp
pop
arpl
fs
imul
into
jnp
xchg
sbb
test
cmpb
jmp
sub
pop
push
xchg
mov
sti
add
adc
adc
mov
jle
pop
sahf
fs
fimull
mov
or
xchg
pop
cmc
xchg
mov
inc
lods
add
fstl
scas
aam
cld
arpl
dec
fs
std
push
lea
lcall
lcall
push
cmp
sub
fstl
stc
arpl
mov
add
lods
push
adc
mov
mov
sti
popf
popa
test
mov
sete
xchg
adc
jmp
clc
inc
mov
and
pop
jmp
adc
sbb
sahf
fwait
mov
std
test
jno
std
stos
sub
in
mov
scas
lock
sbb
mov
int
jnp
cmpsl
mov
push
sbb
out
sar
nop
dec
jno
outsl
arpl
out
or
fwait
jns
mov
js
pop
stos
setno
adc
add
iret
and
sub
xor
sub
inc
lock
or
rorb
xchg
or
pop
lea
imul
ss
pop
push
leave
jnp
or
cli
test
sub
out
dec
je
or
pop
mov
mov
pop
cmp
pop
dec
sbb
jo
insl
shlb
fidivs
cli
jbe
sub
cmpsb
stos
test
or
hlt
pop
mov
sub
loope
pusha
adcb
movsb
pop
mov
loop
sbb
sub
cmpsl
test
push
test
gs
dec
stos
fstps
pop
xor
xchg
mov
add
mov
sarl
les
ret
or
xor
pop
fmull
or
test
or
sub
loop
aas
dec
rorb
push
stos
dec
pop
sbb
inc
and
pop
scas
and
mov
mov
aam
jbe
mov
notb
repz
and
inc
shrb
pop
std
mull
xchg
popf
movsl
pusha
push
mov
dec
ljmp
gs
movsl
jnp
dec
pop
lret
aad
mov
push
inc
pop
jge
roll
pop
test
add
hlt
and
fxch
lods
fs
in
push
std
push
mov
sbb
gs
lods
icebp
lods
in
sub
orb
push
int
sbb
in
je
fadd
je
es
xor
sbbb
xor
nop
repz
lock
test
jecxz
push
sub
fcomip
pop
inc
cwtl
jns
int
jmp
and
jnp
cmp
test
frstor
pop
and
pop
xor
jbe
mov
lret
lret
arpl
push
inc
scas
sti
mov
fs
dec
mov
pop
cld
push
push
push
cmp
sarl
cmp
movsb
lea
addr16
mov
fisubrs
adc
bound
jmp
or
add
mov
push
jne
js
adc
inc
scas
jbe
push
popa
cmp
cmc
cwtl
pop
jge
insb
inc
stos
out
stos
cs
xchg
fstpl
dec
scas
in
and
adc
lahf
cltd
adc
mov
bound
movsb
mov
ljmp
in
shrb
mov
mov
es
lods
inc
dec
and
ss
lea
adc
hlt
adc
mov
inc
pop
rcr
dec
mov
xchg
lret
dec
push
lods
clc
cmp
cmc
addb
cltd
jne
in
fstpt
or
sbb
pop
orb
mov
cmp
fucom
xchg
sbb
jge
xchg
push
stos
ja
pop
add
inc
mov
sbb
sbb
mov
insl
imul
fs
pop
jmp
jmp
lcall
inc
sti
in
faddl
mov
lahf
iret
xor
gs
jecxz
cmp
mov
aam
das
bound
in
or
push
std
push
mov
imul
sub
sti
scas
shrb
sbb
inc
xor
sbb
ret
pop
dec
adc
add
add
out
cli
or
sahf
mov
lods
adc
inc
fistpl
inc
sbb
loopne
fdivrs
sub
sbb
lock
xchg
aaa
scas
adc
dec
dec
fists
adc
jo
and
mov
rcrb
pop
shrl
cmp
movsl
sti
test
sti
dec
pusha
ret
rolb
fs
insl
rclb
jne
psubw
xchg
sbb
fdivrl
stos
shlb
jmp
cwtl
jne
push
mov
daa
repnz
into
cmp
lods
ficoms
call
mov
movsl
add
push
lods
mov
rcl
lods
sub
pushf
mov
xlat
std
sbb
jnp
je
lret
pop
das
loopne
dec
sahf
jne
cmp
xor
xchg
hlt
or
inc
das
enter
jecxz
and
xor
inc
ljmp
jae
push
push
nop
test
jmp
sahf
mov
stos
je
mov
scas
jne
lds
in
lcall
std
arpl
sub
inc
dec
inc
inc
fcomps
shll
xlat
mov
xor
or
adc
pop
pop
std
push
xchg
ljmp
inc
rorl
sbb
popf
dec
mov
jmp
mov
lret
int
sub
sub
fldt
mov
or
shlb
lods
test
mov
dec
shlb
lods
ja
cltd
add
and
or
sbb
sti
sub
adc
int
jecxz
or
sbb
jl
xchg
dec
lahf
jp
orl
jle
dec
daa
lea
stos
inc
sbb
sub
repnz
ret
cmp
mov
and
stos
ret
push
and
out
add
roll
push
pop
stos
insb
lahf
dec
jns
lahf
cmp
popa
dec
aas
notb
pop
test
push
loopne
mov
dec
push
std
ja
push
leavew
mov
xchg
mov
xor
jg
js
push
pop
fdivrl
bound
and
sbb
bound
sarl
in
mov
popa
xor
mov
push
sti
jmp
xchg
or
mov
or
and
in
sbb
mov
arpl
cmp
pop
out
fcomip
add
push
popa
jecxz
test
int
fildll
adc
sahf
bound
mov
orb
push
add
cmp
lods
pop
stc
or
sbb
adc
je
stos
mov
jle
cli
aam
jnp
jmp
shll
dec
fistl
sbb
sub
fs
sub
or
pusha
xchg
jno
mov
mov
pop
pop
mov
pop
xlat
or
fxch
mov
xchg
popf
cli
mov
dec
test
call
lods
fldcw
xlat
cmpb
bound
inc
stc
int
enter
jl
add
jns
shlb
xchg
pop
sbb
dec
test
arpl
adc
in
push
ljmp
dec
out
insb
or
sbb
pusha
inc
pop
enter
mov
push
add
loope
ret
es
insb
test
sti
lods
dec
adc
inc
arpl
mov
arpl
mov
mov
lret
xlat
ss
cmp
int3
xor
jmp
fadds
dec
jle
xchg
lods
movsl
sub
xchg
inc
rcrb
sbb
fnstenv
xor
out
push
xor
push
aaa
xchg
lock
stos
addl
lea
mov
adc
or
cmp
aas
and
cmc
jne
mov
in
lods
push
mov
push
pop
pop
mov
clc
pop
lahf
mov
sub
xor
aas
push
imul
sahf
pop
icebp
sbb
pop
jns
dec
loopne
lods
cltd
test
pop
lahf
test
xor
cld
and
adc
sbb
lds
outsb
sbb
adc
sbbb
pop
sub
pop
xchg
mov
mov
lods
mov
dec
lds
aad
mov
cmp
ret
icebp
fwait
pop
rcll
xchg
mov
popa
push
int
jecxz
into
mov
or
in
mov
jne
jne
lret
hlt
and
test
mov
ret
aam
aam
shr
xchg
mov
dec
orpd
cmp
adc
xor
ficoml
aas
pop
test
mov
stos
test
cs
popl
inc
dec
mov
pop
int3
adc
push
add
cmp
add
nop
enter
movsb
inc
pop
cltd
push
mov
sbb
mov
sub
scas
inc
or
or
pop
inc
add
adc
sub
lret
jne
xchg
push
in
xchg
pop
cmp
push
mov
sarb
movsb
dec
lds
cmc
push
inc
and
ficompl
mov
push
insl
dec
dec
das
stos
scas
xchg
and
fldenv
push
xorl
shrb
clc
and
xor
xchg
mov
inc
jae
imul
andl
rcl
or
inc
xchg
add
subb
in
add
addl
fbld
pop
mov
popa
test
and
jnp
push
sbb
cmp
adc
sbb
sub
push
xchg
or
push
push
adcb
push
sbb
lcall
sti
stc
sbb
cmp
lahf
imul
repz
into
jb
repnz
call
push
xlat
push
pop
xchg
cmp
pushf
push
repnz
and
movsb
adc
gs
sbb
nop
jg
sub
xchg
inc
xchg
fists
gs
lahf
xor
dec
enter
jp
bound
xchg
pop
jge
lods
add
sbb
pop
xchg
out
cmp
inc
jg
fldenv
mov
inc
enter
mov
or
pusha
adc
push
jle,pn
gs
push
mov
repz
jns
stos
das
sbb
mov
push
pop
jo
ror
xchg
jecxz
xchg
or
add
out
mov
mov
push
sbb
mov
and
jno
sub
incl
ja
data16
out
aas
adc
dec
sub
push
fmull
inc
xchg
test
mov
movl
arpl
and
sbbl
lock
nop
lds
lods
or
mov
and
push
mov
sti
mov
xchg
fcomip
mov
or
push
dec
xchg
lea
bound
and
or
push
push
movsl
inc
xor
cli
outsl
dec
sub
int
xchg
subl
xchg
imul
arpl
mov
xchg
push
jge
loop
pop
hlt
in
jo
pop
fcmovb
fwait
or
add
fiaddl
cmpsb
or
and
fwait
decb
out
add
fldenv
xor
sub
mov
ja
lds
fsts
stos
ror
insl
bound
pop
sbb
bsf
ficomps
test
icebp
orl
mov
mov
out
jg
fs
jne
mulb
cmp
pusha
in
dec
gs
jno
stc
cmp
mov
addr16
add
dec
cmp
gs
mov
sbb
bound
push
add
mov
adc
insl
and
push
mov
and
dec
xchg
idivb
ljmp
outsb
xchg
fsqrt
loopne
or
gs
pop
in
test
inc
sub
test
add
mov
mov
or
mov
or
cmpsb
pop
iret
adc
xchg
or
dec
cmp
std
test
adc
adc
movsl
dec
sbb
jbe
stos
adc
add
push
popf
adc
cmc
xchg
sub
and
cmp
inc
add
inc
sub
arpl
mov
sub
arpl
or
imul
stos
pushf
out
mov
mov
je
jne
es
push
mov
leave
adc
and
sub
cmp
adc
into
repnz
call
inc
cmpsl
add
ja
sbb
pop
cs
stos
pusha
add
outsl
push
or
sbb
hlt
jecxz
in
imul
dec
jnp
sbb
test
lret
mov
shrb
dec
or
xchg
fmuls
inc
rorl
movsb
movsb
test
roll
gs
jnp
adc
divb
hlt
test
or
pop
adc
mov
mov
movsl
jo
es
sahf
sub
stc
adc
mov
fst
lods
inc
jecxz
mov
cmpsb
int3
test
cmpb
jae
jg
jge
out
out
mov
int
mov
sub
pop
in
or
pop
xchg
pop
rorl
lea
loopne
xchg
push
in
and
push
sbb
pusha
sti
mov
lods
adc
lahf
out
jmp
int
sti
lcall
pop
xor
fstpl
fnstenv
aaa
mov
cmp
cmp
inc
inc
xchg
xor
and
cli
push
mov
in
ljmp
nop
pop
sbb
push
in
stos
lret
inc
aad
lret
enter
dec
fs
into
mov
sbb
imull
sbb
sbb
shl
pop
xchg
xchg
das
jns
clc
push
out
gs
cmp
dec
inc
andl
inc
xor
lea
in
mov
lea
xor
daa
xchg
adc
lea
adc
out
subl
clc
sub
dec
sbb
cmpsb
stos
popf
add
inc
dec
cltd
sub
subl
mov
rorl
cmp
or
std
sub
cld
xchg
insb
dec
notb
icebp
stos
loope
imul
jnp
mov
gs
iret
pop
rorb
repnz
sbb
sub
pop
addr16
arpl
out
inc
pop
int
cmp
movsl
insl
xlat
mov
sub
pop
sbb
push
xchg
xchg
aaa
aaa
add
int
nop
xor
mov
mov
stos
imul
dec
lcall
pop
ds
cmp
fsubrp
adc
imul
mov
mov
loopne
pop
dec
lahf
dec
nop
sti
push
sbb
pop
int
adc
or
stos
popa
clc
ficoms
ret
repnz
and
xchg
test
nop
sti
ja
orb
cmpb
cltd
push
or
xchg
adc
dec
aam
dec
ret
ja
adc
cwtl
xor
dec
gs
out
mov
cmp
sbb
push
dec
fs
nop
arpl
jl
xor
lret
je
sbb
fmull
push
lahf
popa
dec
mov
mov
movl
cmp
jne
push
push
pop
imul
mov
adc
or
out
bound
or
xor
scas
add
mov
push
insl
mov
leave
outsb
dec
sub
add
mov
shlb
mov
mov
dec
sub
aaa
rorl
or
dec
rorl
jmp
jo
inc
int
pop
mov
sbb
mov
sbb
jge
xor
sbb
aas
lock
imul
pop
fmull
mov
xchg
xchg
cmpsb
loopne
dec
jmp
inc
add
inc
stos
jne
stos
pop
popa
or
push
mov
cmp
inc
divl
popa
jmp
adc
ds
mov
imul
cmp
loope
fmuls
adc
cmc
mov
jp
scas
add
lods
int
stos
and
push
add
add
xchg
pop
or
je
loop
xchg
rcll
pop
add
pop
add
ret
and
pop
push
rcrl
mov
dec
in
andl
xor
movb
iret
or
lcall
and
mov
movsl
lret
cmp
xor
test
or
roll
movb
pop
cmp
mov
bound
jbe
mov
push
inc
sbb
outsb
or
sbb
xor
mov
mov
repz
gs
call
gs
les
cmp
sub
mov
or
jns
jo
call
adc
arpl
xlat
dec
sub
sbb
sub
push
pop
xchg
jno
pop
dec
test
sbb
popa
ret
mov
jno
pop
lahf
out
xchg
add
cmp
rcrb
xchg
test
shlb
bswap
add
rcrl
and
xchg
into
stos
mov
xor
jno
push
cli
adc
aad
pop
icebp
in
ret
or
pop
mov
xor
xchg
xchg
into
sbb
mov
jne
xchg
pop
mov
and
adc
fistps
mov
mov
bound
mov
lahf
dec
lret
rolb
sbb
outsl
pop
wrmsr
adc
lods
cltd
jge
mov
fstpl
popa
adc
mov
ret
inc
sbb
sbb
or
add
jnp
mov
sahf
push
adc
loope
pop
mov
stos
push
and
xlat
sub
or
ret
dec
mov
arpl
xchg
aam
inc
aaa
mov
syscall
cwtl
xchg
push
pop
leave
sahf
sub
aam
jns
in
outsb
or
jp
xor
loope
mov
fisttpll
cmpsl
test
out
push
or
lods
mov
aaa
aaa
lcall
push
lods
clc
jle
fs
imul
push
mov
jno
icebp
fimull
out
mov
insb
sbb
dec
fs
inc
and
scas
mov
xor
cmp
popf
xchg
stos
int3
lods
imull
jns
stos
xor
add
outsl
mov
inc
loopne
dec
pushf
fidivrs
test
inc
shll
das
gs
lret
push
adc
jle
sub
aad
mov
mov
arpl
mov
cmp
in
hlt
adc
arpl
outsl
stos
leave
sbb
pop
mov
or
jle
sti
popa
sub
xlat
rorl
data16
xor
out
push
ret
xor
push
xor
dec
push
movsl
adc
pop
adcl
les
xor
loopne
insb
or
in
mov
ljmp
sbb
jmp
hlt
cli
das
push
cld
pop
daa
mov
and
movsb
lods
mov
sbb
lret
mov
push
push
rcr
cmp
inc
add
sbb
cmp
or
dec
sbb
mov
jno
push
jae
lock
sti
and
fcomps
fdivs
test
jl
std
sub
in
icebp
pop
aaa
popa
and
sub
push
out
stc
xchg
push
mov
mov
ss
icebp
stos
mov
add
lods
lahf
pop
and
addr16
test
imul
imul
fadds
pop
mov
cltd
cmc
iret
enter
adc
sbb
popa
lret
mov
scas
pop
pop
xor
movsb
or
std
lods
insb
fdivl
cltd
sbb
ficomps
dec
mov
rcll
insb
sbb
xor
jns
sbb
cmp
lcall
in
push
adc
dec
jmp
sarl
push
es
sbb
es
mov
ret
lods
popa
out
and
inc
xor
jne
jge
ja,pt
cmpsl
sub
aas
adc
bound
add
test
out
push
mov
sahf
ds
insl
mov
dec
daa
nop
rcrb
sti
mov
pop
scas
stos
push
sbb
push
push
mov
je
xor
je
xor
sbb
in
or
mov
mov
mov
and
sbb
dec
inc
cld
fsubrs
xorb
mov
or
or
clc
fwait
cmpsb
pop
sti
imul
call
pop
mov
popa
fcmovu
or
mov
mov
inc
inc
test
ficoml
fstpt
cmp
push
test
popf
aaa
bound
jno
dec
stos
ficoml
mov
lods
and
xchg
clc
adc
lods
inc
mov
shlb
adc
cmp
and
xchg
fs
xchg
stos
or
xorb
icebp
or
jmp
ja
out
inc
fdivs
aad
jne
sub
mov
lahf
test
mov
cmp
mov
jo
cli
sub
push
ficompl
pusha
xor
call
push
gs
cmp
dec
push
arpl
jbe
mov
sbb
out
cmp
jp
xchg
inc
jg
lock
cmp
mov
inc
xchg
repnz
mov
ja
inc
cmpsb
int3
xchg
daa
popf
popf
cmc
inc
unpckhps
inc
dec
cmp
popa
fcoms
jmp
xchg
fsubl
inc
dec
or
add
nop
loopne
pushf
ds
fwait
xchg
je
call
lcall
mov
rcl
adcb
sub
mov
gs
sub
mov
adc
and
pusha
es
pushf
mov
mov
pop
cmpsl
inc
dec
sbb
bound
pop
loope
xchg
imul
add
add
scas
js
push
push
mov
xlat
mov
sbb
sti
jnp
cs
and
adc
lods
cmpsb
jl
repnz
xor
xchg
addr16
or
popa
std
and
repz
sbb
rolb
xchg
dec
push
mov
jbe
out
sub
cmc
repnz
std
sahf
aaa
loop
adc
mov
sbb
pop
andl
mov
dec
test
inc
sbb
fcomi
push
fadd
cmp
pop
stos
or
mov
insl
mov
jg
pop
int
push
xchg
aas
push
fs
movsb
sbb
shlb
dec
test
movsl
pop
cmp
xchg
adc
mov
and
adc
xor
mov
pop
cmpsl
shl
addr16
jmp
inc
arpl
lods
and
addr16
xor
mov
lds
jae
cmp
testb
mov
sbb
lret
push
mov
ds
pop
mov
jns
lods
xlat
jl
push
inc
in
jbe
push
insl
imul
scas
dec
imul
or
rol
push
and
push
add
mov
add
dec
fisttps
andb
outsb
sbb
lods
mov
aas
int
cltd
cmpsb
cwtl
test
xchg
clc
or
dec
jg
arpl
mov
xor
adc
push
sbb
lcall
test
aas
clc
sahf
jns
je
loopne
in
mov
mov
sub
mov
shlb
and
push
xchg
mov
pop
or
jbe
rorl
movsb
ret
psrld
add
or
xchg
lea
int
dec
xor
xor
gs
sub
mov
lea
jne
add
ficompl
mov
decl
jb
fnstsw
clc
mov
test
loope
icebp
xor
das
push
add
mov
push
in
daa
test
lahf
fstpt
adc
add
test
sub
sub
sub
jno
ja
sahf
pop
jbe
push
jbe
fwait
das
jae
bound
ds
lds
dec
cwtl
cmpsl
push
add
mov
sub
cmp
sub
lods
cmovne
loopne
sbb
iret
mov
scas
scas
clc
mov
sbb
xor
pop
jge
int
insl
pop
cmpl
mov
and
aad
add
stos
pop
mov
std
jge
xor
andl
nop
sahf
mov
movsb
inc
loop
stos
fisttpl
sub
and
in
cwtl
sub
sub
aad
and
mov
jnp
fsubrs
lods
leave
push
lret
push
jb
and
xlat
lds
pop
fs
sub
cmp
pop
sti
mov
sbb
divb
jne
rcll
mov
test
daa
jecxz
pop
cmc
inc
xchg
adc
push
sbb
xchg
jl
push
sbb
ds
push
push
shll
inc
scas
cmp
mov
push
sub
and
xchg
cmpsl
xchg
jne
cmp
adc
sbb
adc
scas
sarb
jnp
lea
mov
xlat
xchg
insl
push
jp
xor
mov
or
int
add
test
fldl
cmp
and
shll
frstor
add
shll
push
in
adc
mov
aam
jno
pop
push
xchg
mov
or
in
mov
cs
mov
inc
sub
bound
cltd
mov
aaa
shlb
adc
jle
cmp
xchg
or
sbb
xlat
cmc
sbb
add
flds
push
xchg
pop
shll
popf
pop
lods
jo
mov
adc
dec
fst
jae
sub
jb
sbb
ljmp
add
xchg
jl,pt
cmc
inc
cmpsb
sbb
pop
in
jp
rep
inc
out
pushf
cmp
push
mov
sahf
ret
xchg
sbb
cmp
sub
icebp
shr
xor
lret
ja
jl
mov
mov
inc
adc
fs
mov
out
in
bound
cmp
sub
sub
sbb
ret
pushf
pusha
mov
sub
leave
insl
insb
dec
push
push
push
sti
mov
loop
mov
jnp
jb
sub
test
test
stos
lods
dec
lods
jmp
adc
sbb
mov
cmp
xor
and
pop
jmp
or
push
imul
dec
iret
call
test
fstps
dec
test
jg
jge
popa
mov
add
in
mov
mov
sbb
stos
fbld
mov
or
cltd
idivl
orl
pop
test
out
add
fsts
in
dec
gs
mov
mov
dec
mov
int
sbb
mov
jns
leave
bound
dec
jno
mov
shlb
subl
dec
movzbl
pop
ljmp
arpl
jae
sbb
mov
push
pop
test
mov
loope
enter
jmp
sub
lahf
icebp
mov
mov
adcl
push
sti
orl
cmp
int3
mov
sub
movsl
popw
xchg
mov
xchg
mov
popf
mov
in
xchg
stos
sbb
jno
fldenv
out
bound
mov
adc
xchg
mov
dec
cmp
adc
fcomps
sub
movb
xchg
data16
jne
aam
or
add
sbb
sahf
dec
dec
popf
push
cltd
popf
arpl
dec
stc
adc
cmp
sbbb
sbb
mov
inc
mov
or
clc
stc
dec
sub
mov
add
js
cmpsl
mov
shrl
fildll
sbb
push
mov
enter
jecxz
or
sub
push
dec
cld
fwait
and
adcl
out
inc
enter
pop
stos
movsl
push
cmc
push
adcl
loop
movsb
push
and
sbb
leave
dec
or
sub
sub
sbb
cli
or
stos
xor
imul
in
test
mov
pop
aad
xor
push
aaa
dec
in
iret
push
mov
or
test
in
in
add
popa
ljmp
stos
dec
sbb
fisttpll
adc
cli
fs
fstpl
sub
lahf
out
popf
push
jl
pushf
aaa
lcall
pop
and
loope
mov
sahf
frstor
cmp
fisttpll
add
or
loop
mov
add
in
int
push
xchg
mov
movsb
inc
neg
sbb
mov
and
enter
mov
dec
add
add
scas
sub
add
repz
xor
sbb
mov
ret
pop
outsb
out
bnd
pop
fchs
cmp
lret
xchg
jne
pop
popa
fisubrs
inc
movsb
inc
inc
mov
mov
mov
mov
sbb
mov
stos
or
sub
jb
movsb
push
and
sbb
enter
mov
lcall
cmp
out
dec
ja
mov
mov
ss
xor
push
jae
dec
and
xor
ljmp
popa
imul
test
rcrb
pop
movsl
movsl
testl
ljmp
push
in
pop
out
bound
pop
sub
and
sbb
xchg
imul
pop
cs
and
enter
sub
cmp
mov
ret
jmp
call
dec
push
push
mov
outsb
pop
lock
js
imul
pop
fsubrl
popa
roll
dec
jnp
xchg
and
movsl
mov
sub
dec
xor
clc
in
xchg
and
insb
in
bound
aaa
lea
sub
popf
push
sub
pop
mov
xlat
jo
sahf
adc
test
jl
jo
add
push
loop
inc
xor
cmpsl
lods
in
adcl
mov
popf
push
sub
enter
jmp
dec
cmp
push
cmp
push
test
gs
fldcw
add
and
in
sbb
or
xchg
cmp
pusha
gs
pop
jmp
sbb
arpl
stos
fcoml
inc
sbb
nop
cli
jo
mov
popa
nop
imul
insl
pop
push
jge
or
sub
jmp
add
data16
mov
sub
jb
fldenv
xor
cmp
lock
dec
das
repz
in
cltd
push
fsubrl
icebp
sub
pop
cld
test
icebp
insl
sbb
jo
pop
lods
cs
aas
int3
aaa
jecxz
xchg
cld
cli
test
repnz
add
jno
iret
mov
call
xchg
push
roll
bound
popf
add
mov
mov
adc
push
addr16
push
sar
clc
cmp
jg
cltd
dec
pusha
fadds
aad
bswap
jne
xchg
loopne
mov
ds
in
js
mov
out
mov
xchg
mov
sahf
ficompl
xchg
xchg
imul
or
adc
popf
xchg
stos
jmp
fiaddl
dec
adc
enter
call
jp
sub
cmp
aam
jecxz
jle
sahf
movsl
gs
or
add
jae
adc
push
movsl
lds
outsl
ror
mov
jno
inc
inc
mov
mov
fimuls
xlat
pushf
aad
mov
jl
jae
sbb
dec
sahf
lret
icebp
push
pushf
mov
leave
js
loopne
mov
pop
je
fdivp
add
jne
jae
pop
jmp
ror
insb
xchg
cmc
das
or
push
insl
shll
mov
pop
or
and
adc
stos
mov
push
sti
pop
add
jmp
test
inc
mov
les
imul
cmpsb
fidivrs
mov
jge
push
lds
enter
test
cltd
mov
repz
mov
fmull
int3
inc
push
ret
cmp
sub
fwait
mov
pop
xchg
in
sub
test
mov
popa
push
dec
js
sub
scas
xchg
dec
sub
lods
sti
int3
fs
pop
inc
sub
add
aas
aam
push
push
xchg
jno
or
pop
mov
sub
xchg
pop
lds
imul
loope
jp
mov
or
jmp
jbe
push
rorl
test
or
jne
call
out
ficompl
les
xchg
or
mov
test
or
out
into
or
dec
data16
pop
and
push
out
clc
or
mov
clc
jp
lods
movsl
aad
or
out
clc
or
ss
sbb
mov
mov
xchg
pop
push
fdivr
test
sub
pushf
shll
shrb
pop
push
arpl
xchg
std
jno
sbb
js
lret
sub
adc
outsb
inc
sub
sub
push
push
cmc
pop
mov
cmpsl
xchg
ljmp
mov
sbb
mov
into
jb
mov
cmpsl
inc
or
dec
pop
in
mov
push
mov
aaa
sahf
pop
pop
ds
inc
mov
sub
push
inc
imul
xchg
stos
movsl
pop
mov
xchg
mov
dec
lahf
sbb
cltd
jl
xchg
xchg
push
test
xor
pop
inc
bound
mov
adc
mov
scas
pop
adc
ds
lds
add
shrb
cwtl
adc
sbb
sbb
or
insl
lods
lods
clc
xor
xchg
sbb
jae
jno
leave
outsb
adcl
ds
leave
push
push
std
out
rol
xor
or
outsb
fidivrl
fs
and
int
push
loop
stc
sbb
lock
push
data16
pop
jle
and
jge
nop
or
in
fildl
pusha
inc
mov
lea
adc
hlt
jbe
or
xchg
scas
movsl
push
es
pop
fsubrl
adc
out
push
das
lods
mov
mov
mov
add
test
mov
stos
and
jl
jb
sub
or
out
push
xlat
test
pop
sub
lcall
aaa
jmp
cmpsb
xchg
push
pop
lock
dec
loopne
pop
lods
xchg
dec
insl
mov
imul
mov
out
xchg
and
movsl
iret
aam
jl
ja
push
data16
shr
nop
jge
arpl
jo
int
test
xor
imul
lods
popf
cwtl
inc
mov
dec
lds
push
inc
fscale
es
sub
loopne
mov
stos
add
jge
adc
test
mov
andl
pop
add
sahf
imul
lret
clc
mov
jl
enter
sti
fsubrs
ds
push
lcall
dec
pop
push
addr16
dec
in
sbb
adc
lret
mov
jg
adc
pop
roll
sub
sbb
fwait
popf
inc
pop
test
adc
in
insb
push
fwait
addb
or
push
aam
sahf
pop
popf
add
sbb
aad
mov
imul
loopne
int
clc
out
arpl
scas
or
add
jae
aam
dec
in
stos
adc
add
mov
out
push
pop
dec
dec
jns
stos
pop
dec
cwtl
in
les
rorl
aas
dec
mov
mov
in
mov
push
pmaxsw
sahf
jl
cmp
js
ret
outsl
outsl
pop
xor
jb
adc
adc
rcl
mov
stos
or
lahf
fs
mov
and
jno
es
jl
dec
pop
adc
loope
or
addr16
sbb
cli
mov
or
enter
insl
test
pushf
inc
and
lret
sbb
loopne
push
pop
xor
lods
pop
add
jp
in
imul
inc
mov
mov
outsb
inc
jb
loope
rolb
xchg
mov
cmpsb
fs
jo
loop
into
adc
xor
or
jae
call
adc
jg
pop
lret
lahf
ja
cmp
sbb
inc
hlt
iret
cmpsl
test
xchg
lret
push
flds
pop
loop
lds
stos
jne
mov
mov
push
in
sbb
out
pusha
mov
push
inc
dec
sub
and
sahf
add
adc
xchg
sub
std
mov
inc
vmovsd
pop
jns
jae
jno
jns
sub
sbb
xor
movsl
cwtl
add
or
sahf
sbb
loope
dec
movsl
fisubrl
mov
lea
mov
addr16
and
mov
jno
cmp
out
sti
test
pop
sbb
or
std
fs
adc
test
cld
std
mov
add
adc
pop
push
pop
adc
push
aam
push
daa
xadd
mov
add
bound
repz
cmp
sub
aas
xchg
test
mov
in
pop
cmc
jno
jl
jecxz
cmp
lods
add
mov
movsl
inc
cs
cmpl
imull
jg
movsb
lret
push
mov
fsubs
in
out
pop
jle
out
cmp
mov
enter
mov
pusha
and
shlb
movsl
jae
in
xchg
or
push
inc
inc
sarb
inc
lods
bound
das
leave
sbb
jl
push
call
mov
jns
pop
dec
int
mov
cmp
cmp
push
sbb
les
push
xor
push
mov
add
cmp
mov
jbe
cwtl
pop
adc
cmpsl
adc
ret
iret
push
jno
mov
cld
fs
fldcw
test
jns
cld
fldcw
aaa
push
fs
icebp
pop
jg
mov
movsl
or
jns
ds
in
cmp
movsb
pop
sub
pushf
mov
xorb
sbbl
pushf
loop
mov
popa
sub
mov
push
mov
movsl
push
push
addl
and
cltd
push
pop
pop
aad
cli
cmpsb
hlt
lea
hlt
imul
xor
mov
leave
dec
jnp
sub
hlt
pop
jo
add
add
mov
sahf
dec
mov
lea
std
cmp
sbb
sbb
das
in
pop
pop
cmp
je
inc
aam
push
rorl
lret
in
sbb
or
stos
mov
adc
add
bound
jecxz
stos
cmp
jbe
sbb
cltd
cmpxchg
aas
inc
xor
or
mov
sbb
arpl
aaa
pop
repnz
into
xchg
fidivrs
bound
scas
mov
or
jno
or
loope
test
jmp
popa
es
sub
pop
push
sub
lods
sub
pusha
push
popa
std
add
xchg
aam
mov
fbld
stos
xchg
cmpsl
aaa
jmp
xor
popa
mov
es
imul
stos
sahf
xlat
adc
int
lods
adc
xchg
jmp
push
adc
and
stos
dec
daa
mov
lods
pop
sbb
xchg
in
enter
pop
or
adc
add
add
xchg
push
pop
daa
sbb
mov
rorb
mov
aam
fs
push
push
lods
btr
dec
dec
iret
jg
popf
lret
insb
pop
cmp
lock
bnd
push
ficoms
mov
add
lret
scas
push
loop
hlt
cmp
push
lods
sub
sbb
pop
test
lea
sbb
rcrb
scas
inc
cmp
adc
fs
pop
lcall
insl
inc
fwait
push
xchg
fmuls
fiaddl
jmp
push
mov
cmp
fcomps
ffree
and
dec
sbb
push
gs
fistpl
add
push
daa
sub
xor
pop
dec
sbb
xchg
fwait
loope
xor
test
adc
scas
sub
dec
jns
fstl
pop
subl
adc
std
movsb
mov
or
xchg
mov
adc
mov
dec
and
bound
pop
inc
push
addr16
in
movsb
jl
aad
push
xchg
aad
cmp
pop
jns
in
pop
xchg
sbb
xchg
subb
testb
push
xor
popf
pop
lea
cmp
xor
fisubrs
mov
std
jbe
out
cmc
rcrl
jle
mov
mov
loopne
loopne
sub
inc
dec
gs
mov
inc
movl
ljmp
xchg
decl
inc
push
cmp
sub
add
loope
sbb
in
mov
aas
adc
dec
jle
aad
rol
push
add
dec
rorb
sub
push
dec
fistl
jae
pop
test
lods
xchg
int
mov
sbb
insb
out
cmp
test
jno
xor
cli
adc
fs
dec
jle
divl
into
arpl
and
sbb
push
sub
xor
xlat
nop
or
sbb
sbb
pusha
mov
lahf
mov
insl
mov
nop
mov
and
cld
push
push
jge
push
cmc
jg
push
lods
mov
lea
push
cmc
cmp
popf
popa
fdivs
fst
add
or
add
or
gs
fistpl
pop
inc
test
lahf
repz
sub
adc
rclb
out
bound
out
sub
inc
mov
lea
jmp
stos
movsl
add
rol
cmc
xchg
mov
jmp
mov
cmp
mov
gs
fisttps
jae
gs
xchg
test
and
and
xor
cwtl
loop
inc
ficoms
mov
push
andb
pop
inc
mov
fistpl
in
xor
bound
push
das
mov
adc
imul
xchg
pop
aad
push
cltd
lods
push
sahf
sbb
orl
nop
jnp
mov
mov
xlat
stos
mov
sub
mov
sahf
ja
jg
dec
xor
add
adc
pop
iret
cmp
fucomi
sub
and
jne
pop
adc
xor
pop
out
push
or
sub
xor
cltd
mov
mov
sahf
and
lock
mov
cmp
or
flds
sbb
sub
mov
cli
jae
and
scas
pop
sub
mov
push
andb
cmp
inc
mov
pop
sti
mov
test
xchg
or
pop
sub
les
popf
aad
pusha
gs
or
in
sub
adc
lds
std
in
add
and
lods
xchg
or
pop
adc
push
mov
int
ss
mov
push
jb
jle
shrl
shll
cmp
adc
out
or
inc
out
or
or
adc
lea
push
mov
pop
popa
rorb
lds
jo
pop
inc
inc
cli
xchg
mov
inc
addr16
jbe
call
mov
lods
in
push
shrl
add
cltd
arpl
stos
or
xor
repz
rcrl
iret
jl
arpl
ja
pop
push
ret
mov
or
sbb
fsubr
adc
inc
xor
xor
mov
popa
addr16
push
push
xchg
cli
and
sub
popa
push
inc
xor
ja
sti
push
rcll
mov
sbb
inc
scas
lods
add
stos
mov
mov
xchg
and
lret
sbb
stos
sub
xor
add
push
mov
pop
shrb
push
sti
insl
jae
mov
xchg
xor
loopne
sub
push
cltd
sub
push
pop
inc
shr
ja
lods
bnd
rol
mov
jno
sub
sbb
shr
ret
cltd
xchg
xchg
ja
pop
fildl
imul
xor
sbb
aam
mov
and
xor
xchg
push
sbb
pop
mov
xor
lahf
push
les
jne
jnp
sub
sub
adc
mov
add
aaa
xlat
in
fisttpl
dec
into
sbb
fmul
movsl
mov
jge
ficomps
push
int
leave
cmp
shll
loope
mov
mov
pushf
sub
shlb
push
aam
rol
loope
xchg
roll
add
sbb
addb
mov
sub
ja
cltd
lahf
mov
cwtl
mov
pushf
mov
bound
shll
aam
imul
scas
sbb
adc
pop
lret
xchg
data16
or
rorb
or
or
xchg
les
imul
xchg
pop
xchg
aaa
or
cmpsl
mov
xor
and
pop
dec
inc
ret
lret
stos
std
dec
mov
ss
ret
lock
pop
sub
adc
pmuludq
das
scas
decb
les
mov
adc
adc
lock
sub
cmpsb
sti
push
ja
cli
cmp
int3
pusha
xchg
popa
lods
stos
shrb
lret
or
js
sbb
imul
cmp
ss
daa
loope
pop
sti
adc
mov
mov
int3
pop
push
cmp
pop
pop
fistpll
enter
xchg
add
lods
jp
scas
and
hlt
or
loop
ret
lods
jmp
lcall
ffree
mov
fs
das
incb
mov
test
cmpsb
pop
adc
fwait
cld
lcall
cwtl
cmp
jecxz
fwait
mov
aas
clc
arpl
daa
dec
jmp
mov
lods
sub
nop
mov
push
lods
in
je
rcrl
or
orb
das
push
sbb
and
sub
mov
aas
ret
punpckldq
icebp
or
xchg
popf
add
fisubrs
pop
mov
xchg
adc
pop
pop
stos
inc
scas
fidivrs
cwtl
xchg
sbb
xor
pushf
pop
iret
aad
in
mov
jne
cmc
inc
insl
ret
popf
sahf
mov
mov
rcrb
inc
lods
jns
dec
add
jge
stc
sub
mul
or
bound
cltd
or
lds
dec
inc
mov
in
popf
dec
mov
loope
fs
mov
pusha
andb
jno
mov
movsb
repnz
movsl
mov
push
lahf
shrb
stos
jge
dec
xlat
loopne
jp
push
stos
imul
sbb
sti
or
dec
cmp
mov
rcr
xchg
lea
popa
jno
push
mov
sti
das
test
dec
dec
cli
xlat
sahf
sbb
or
adc
mov
paddd
aas
xchg
fnstenv
inc
ss
movsl
out
in
stos
or
add
jg
aaa
sub
push
or
sub
pop
adc
mov
inc
popa
inc
pop
add
mov
lods
or
gs
cltd
pusha
rorb
popa
out
jo
jge
cs
inc
es
fcmovnu
or
std
ja
lock
or
cmpsb
stos
leave
inc
cmp
xor
icebp
sub
ret
lahf
test
mov
xlat
pop
stos
jbe
add
pop
leave
mov
in
jmp
cmp
sbb
shrb
sahf
pop
aam
mov
insl
nop
std
aaa
mov
push
stos
and
push
and
bound
mov
arpl
push
or
push
enter
or
das
jae
lds
mov
in
clc
xor
jp
negb
arpl
add
and
adc
sub
clc
lock
call
cs
ljmp
loopne
jecxz
insb
test
sub
xor
push
inc
lods
ja
adc
pop
dec
pushf
test
adc
adc
bound
jnp
mov
adc
mov
pop
enter
das
add
iret
pop
xlat
mov
inc
push
mov
jb
in
das
int
xor
lods
inc
mov
lret
push
into
psubw
in
sbb
mov
or
stos
xchg
lds
imul
test
jnp
push
dec
clc
js
iret
inc
jecxz
aas
stos
or
jecxz
sbb
pop
fsubrs
scas
sbb
aaa
popf
lahf
pushf
cmp
jmp
cmp
in
or
popf
xlat
mov
fwait
dec
mov
sub
or
push
addb
sub
fs
mov
jp
lret
pop
or
jg
bound
jl
push
or
stos
push
imul
enter
fnstsw
insl
jb
lcall
popa
test
mov
push
mov
jg
jbe
and
and
mov
loopne
pushf
add
lea
mov
mov
inc
adc
clc
mov
roll
out
pop
addb
adc
test
hlt
adc
xchg
test
repnz
lods
pop
ret
jbe
outsb
mov
dec
test
pop
leave
inc
lretw
leave
mov
icebp
pop
and
fisttpl
and
xor
mov
pop
jg
popa
clc
mov
mov
insl
nopl
adc
fwait
adc
inc
ficompl
imul
outsb
popa
jbe
jg
in
addr16
gs
or
outsb
lods
sub
imul
lret
or
fisubl
shlb
push
push
daa
dec
mov
jecxz
xchg
subl
cmc
push
sub
aad
mov
clc
fsubrl
pop
lock
outsl
adc
mov
sarl
shll
leave
sbb
sbb
push
pop
or
mov
cltd
adcl
cmp
sub
sub
pop
outsb
popf
mov
jp
aas
ss
daa
in
and
lods
xor
pop
flds
sub
ret
stc
outsl
movsl
xchg
jo
adc
jmp
outsl
dec
fisubl
pop
cmp
insl
add
push
sub
inc
ss
fs
addr16
sub
cmpsl
mov
mov
inc
scas
fwait
test
popa
insl
incb
in
add
mov
shrb
repz
xchg
subb
jne
xchg
mov
mov
mov
into
pop
mov
aad
lcall
scas
mov
mov
inc
xchg
mov
dec
mov
push
xchg
sub
test
cpuid
add
mov
jle
scas
ss
sub
jae
test
fistps
jns
adc
mov
fucomip
fisubrl
push
mov
and
stos
dec
jnp
pop
in
arpl
fsubrs
jmp
outsl
lret
movsl
jmp
adc
sti
inc
inc
xchg
jg
add
aaa
insl
decb
aaa
js
cmp
gs
stos
mov
xor
or
cmpsl
sbb
cmc
pop
sbb
fdivrs
sub
inc
pop
xorl
xor
arpl
or
add
adc
jmp
mov
mov
xor
ljmp
stos
imul
aam
adc
arpl
mov
mov
push
inc
adc
sbb
repz
test
into
pop
mov
add
insb
sahf
nopl
push
fsubl
cmp
cmpl
and
mov
and
push
push
nop
data16
sub
stos
add
sbb
mov
or
push
test
sbb
lods
or
js
push
insb
stc
cmpsl
mov
mov
push
imul
push
adc
xchg
lds
mov
mov
inc
hlt
push
loope
push
jb
sbb
dec
sbb
stc
nop
and
cld
push
pop
push
rclb
pop
ds
lea
fbld
into
xor
xlat
aaa
inc
aam
pop
add
nop
popa
arpl
adc
arpl
push
mov
lods
int3
pop
inc
dec
add
pop
int3
ret
and
lea
or
out
mov
loope
dec
pop
popf
mov
pusha
jne
lret
mov
ja
icebp
xchg
mov
addr16
stos
or
mov
mov
inc
mov
add
lods
sbb
cmpsl
movq
lea
xchg
pop
jnp
dec
hlt
jmp
fnsave
pop
aam
in
inc
jo
cmp
scas
xchg
das
leave
xchg
dec
test
push
push
sbb
out
push
jge
xor
test
out
jbe
cli
lds
cltd
stos
cltd
mov
out
cli
clc
mov
cwtl
push
pop
icebp
outsl
or
lcall
lods
mov
mov
in
pop
push
call
shlb
int
lahf
ds
push
mov
hlt
inc
jge
rcll
xor
stos
mov
mov
sbb
imul
sbb
adc
cmpsb
mov
mov
stos
sbb
out
jge
test
push
xor
xor
jns
sub
adc
fstl
repnz
stos
jmp
test
fbstp
in
lret
push
cmp
cld
add
aas
cmp
lea
dec
cmp
pop
stc
push
stc
gs
arpl
sub
icebp
mov
testb
dec
cmp
cmp
jns
mov
test
mov
ret
fldt
arpl
stc
fldenv
stos
add
pop
loope
mov
xchg
gs
andl
and
sbb
ficomps
pop
mov
push
aas
pop
mov
leave
in
sbb
pushf
enter
pop
push
inc
psubusw
ret
mov
ret
lods
stc
add
mov
adc
cmc
int3
popa
scas
push
stos
mov
fadds
ja
cmpsb
into
iret
mov
xchg
jge
stos
cmp
push
add
aam
lods
aad
orl
call
sbb
sub
lods
pop
or
jle
scas
sub
and
pop
ret
inc
jne
jb
incl
sbb
out
sarb
cwtl
leave
sahf
sbb
mov
mov
add
mov
dec
jbe
ret
addr16
loope
add
sbb
mov
push
imul
sbb
mov
lea
sbb
imul
mov
pop
lahf
in
nop
lods
dec
fs
and
stos
pop
call
xchg
adc
or
mov
lahf
movsl
movsb
push
xor
data16
mov
repnz
and
call
je
cmp
add
icebp
push
xchg
pop
arpl
xchg
adc
jp
xchg
scas
sub
popa
lock
mov
test
jmp
sbb
mov
lahf
lret
mov
pusha
fsubrs
repnz
enter
in
xchg
sbb
jmp
sbb
popa
fldl2e
or
repz
test
stos
sub
xlat
test
and
push
xor
imul
cmp
test
rcl
pusha
mov
inc
pop
pusha
outsb
xchg
bound
aam
cs
lds
cmp
in
jle
pop
lea
lods
into
sti
cli
or
jno
stos
jne
pop
xchg
call
adcl
lds
popa
pop
xchg
fstpt
sbb
je
sbb
jno
mov
push
and
or
repnz
icebp
or
in
int3
or
imull
inc
adc
cmp
push
pusha
and
pop
sbb
xchg
fisubl
sarb
je
lret
jmp
inc
out
pop
add
out
mov
cmpsl
das
addl
out
pop
adc
sbb
jno
aad
jno
or
ds
mov
enter
in
inc
shll
push
cltd
push
sbb
enter
cmp
sbb
stos
mov
pop
insl
adc
mov
test
inc
nop
pop
mov
xor
lea
jmp
mov
psadbw
xchg
xor
mov
lock
push
dec
fmuls
in
jne
mov
stos
vmovsd
pusha
cmpsb
push
mov
mov
mov
and
gs
insl
push
mov
add
sub
cmp
andl
xor
jle
sub
bound
mov
inc
adcb
ljmp
dec
punpckhwd
inc
daa
inc
xchg
jmp
or
in
push
rol
ss
icebp
mov
mov
xchg
mov
inc
stc
adc
xchg
adc
ss
pushf
stos
ret
xor
subb
in
ret
inc
out
nop
jo
fs
les
imul
or
adc
jge
fdivp
popf
stos
ror
stos
cmc
sub
xchg
push
aas
fwait
ja
dec
stos
addr16
lahf
cltd
mov
jnp
lods
in
sbb
lods
sbb
fsubl
int
add
pop
and
mov
shll
das
cmpsl
arpl
lods
sbb
cmp
and
or
push
cmp
filds
lods
sbb
es
stos
insb
andl
out
andl
addr16
pop
inc
lret
cmpsl
push
bnd
dec
mov
pop
sbb
sbb
jg
cmpsl
adc
fstps
inc
adc
aad
and
das
sub
in
outsl
push
icebp
adc
push
mov
loope
mov
jmp
pop
leave
aad
adc
mov
cmc
and
pop
fs
stos
pop
jne
xchg
and
push
push
gs
cmpsl
cmpsl
icebp
jns
cmp
es
into
and
sub
push
mov
push
xchg
adc
jns
mov
iret
dec
jb
xor
sbb
sub
inc
pop
shll
ljmp
mov
add
fisttps
inc
cwtl
jl
sbb
dec
sarb
scas
outsb
test
inc
xor
arpl
je
mov
clc
inc
xchg
sbb
popf
adc
cmp
jmp
iret
stos
aad
jp
int3
in
mov
into
xchg
xchg
jmp
cmpsl
xor
inc
test
sbb
inc
add
cmpsl
push
jle
adc
daa
outsb
test
inc
mov
std
jbe
lret
mov
mov
cmpsl
inc
shlb
sbb
or
fsubrl
mov
scas
jne
arpl
pop
popa
or
std
imul
inc
rcll
adc
stos
adc
es
pop
dec
leave
pop
push
nop
lcall
sbb
and
push
sub
movsl
test
mov
jecxz
js
jge
cmp
add
mov
pushf
dec
dec
and
stos
xor
push
outsl
pop
jl
push
and
sbb
leave
cs
jg
and
cmp
nop
add
sbb
and
repz
cli
adc
inc
lods
fsubp
stos
das
inc
lret
sub
in
xchg
sahf
adc
pop
jo
and
push
andb
or
les
and
jl
jae
stc
shlb
mov
adc
or
add
jle
ja
shlb
adc
loopne
lods
outsb
iret
jmp
sbb
push
cmp
push
cmp
arpl
xlat
lods
cmc
fcomi
les
sbb
lahf
adc
imulb
bound
out
xor
movups
mov
hlt
mov
sahf
sti
into
stos
add
insb
out
sbb
xor
jns
das
jle
popf
mov
rol
push
rcr
mov
fwait
pop
push
icebp
idivl
scas
shrl
call
stos
or
and
jge
add
push
aaa
mov
bswap
jno
xlat
push
mov
mov
gs
and
fadd
add
in
mov
das
add
mov
leave
repz
bound
jecxz
lret
xchg
adc
or
lods
aad
xor
inc
ja
add
cli
xchg
add
imul
sub
aam
das
pop
fwait
lcall
pop
xor
lods
push
ret
mov
loope
pushf
fs
mov
xor
out
fcomps
cmp
xor
jb
ret
mov
repz
jne
push
fnstsw
out
mov
pop
mov
pop
inc
ret
xchg
adc
dec
mov
xchg
hlt
add
mov
cmpsb
call
pop
mov
fildll
call
push
or
pop
sbb
inc
or
cmp
ljmp
fmuls
pop
fldl
inc
mov
jno
dec
test
xchg
call
bound
rol
cmp
leave
push
es
dec
ficomps
fwait
lods
decb
xor
mov
sbb
jno
into
shll
test
xlat
clc
xchg
fwait
mov
xchg
call
into
gs
pop
cwtl
ja
pushf
inc
xchg
mov
inc
pop
in
ret
cmp
rorb
push
gs
push
mov
int3
movsb
lock
movsl
aas
sarb
inc
jp
sub
xchg
xchg
dec
gs
out
lret
push
and
arpl
lods
or
mov
fs
mov
insb
adc
jnp
or
pop
jl
inc
and
xor
or
insb
bound
jb
ja
sub
in
sbb
imul
xlat
loopne
jae
sub
add
jecxz
sub
jmp
lahf
xor
pop
stc
imul
sbb
push
std
mov
clc
lods
jne
xchg
adc
scas
mov
mov
lahf
jbe
loop
sarb
repnz
stc
sbb
pop
test
fstl
adc
sbbb
lock
mov
lods
push
in
add
movsb
dec
arpl
cmp
mov
inc
jnp
pop
lods
add
daa
lds
int
stos
in
aad
xor
mov
mov
xor
mov
out
dec
shll
ja
popf
jmp
outsb
psubq
jo
pop
ret
dec
xchg
fsubrl
or
xchg
adc
ds
and
enter
scas
add
xchg
imul
fsubr
push
cltd
mov
movsb
xor
ret
mov
mov
jno
dec
push
add
xchg
fadds
es
gs
test
sub
dec
push
xchg
inc
mov
push
cs
loopne
fldcw
xor
outsb
jne
add
and
jae
adc
ret
int
xor
fldt
stos
mov
inc
repz
out
push
popf
jno
cltd
adc
enter
loope
adc
inc
aaa
sbb
fucomp
nop
shrl
cmpsb
jbe
test
jne
push
mov
adc
shlb
jp
into
and
xchg
stos
pop
cmp
rolb
mov
cwtl
sahf
aaa
push
adc
icebp
or
push
push
cmc
fcoms
shrl
lods
lret
add
adc
xor
mov
or
jle
lret
xchg
data16
lock
test
lret
xor
sub
mov
xchg
rcr
inc
cli
mov
addr16
test
sahf
mov
add
mov
cltd
or
mov
pop
xchg
aaa
lret
loop
adc
mov
je
mov
ffreep
sub
dec
pop
xchg
add
lods
loop
in
lock
xorb
adc
sbb
jg
sbb
les
cmc
mov
add
pop
in
or
mov
pop
movl
lds
call
scas
insl
pushf
or
cmp
adc
test
xor
xor
sahf
sbb
std
add
stc
sbb
mov
push
xchg
xor
cmp
sbb
inc
testb
lock
xchg
into
or
cli
add
call
xor
or
int3
or
insl
sti
clc
mov
or
inc
out
push
xor
cmc
inc
lods
sbb
mov
test
arpl
leave
mov
or
xchg
cli
dec
test
sub
mov
test
dec
jle
push
dec
popa
adc
out
int3
lods
rcrb
lods
scas
pop
les
jle,pt
iret
stos
rcll
cmpsb
push
repz
jl
xor
out
jne
je
sub
xor
cmc
pushf
xchg
inc
addb
xchg
lea
lods
push
lock
jnp
jo
shlb
imul
xchg
std
js
cmpsl
in
pusha
cld
orb
sub
pop
sbb
cmpl
aad
shl
jl
or
sbb
fs
or
dec
dec
cli
sbb
mov
mov
adc
push
inc
add
gs
mov
adc
pop
int
sbb
mov
and
les
ljmp
cmpsb
pop
mov
cs
sar
loope
aad
mov
sub
push
add
es
jmp
out
call
jmp
add
ret
jb
dec
adc
out
push
mov
movsb
pop
pop
jp
fistl
popa
mov
outsl
dec
sub
mov
and
jne
add
lods
pop
lock
and
adc
cmp
and
addr16
xor
insb
xor
test
mov
mov
and
shrl
mov
sub
test
add
pop
sarb
inc
fimuls
in
test
bound
sub
mov
adc
and
pop
out
loopne
dec
xor
fsubrl
scas
fsubr
mov
repz
dec
pop
in
sbb
rcll
dec
ja
dec
adc
mov
popf
shll
lret
dec
sub
xor
popa
lcall
iret
lahf
jge
rcrb
jns
mov
pop
stos
jne
mov
pop
cmp
sbb
out
or
inc
jmp
stos
std
fstps
aam
sbb
insl
mov
dec
iret
mov
sub
int
sbb
adc
push
dec
xlat
xchg
les
fwait
jl
adc
aad
pop
add
das
mov
cmp
pusha
subb
or
das
adc
fs
jb
outsb
jp
gs
les
xchg
and
add
sbb
jg
adc
lcall
lea
es
leave
fildll
sahf
xor
push
push
insl
push
in
pop
rcr
jge
jbe
outsb
movsl
jmp
or
pop
dec
lds
arpl
es
outsl
dec
sbb
pop
fmull
loope
pushf
jae
sub
add
sub
push
mov
jl
mov
sti
inc
into
mov
mov
arpl
lock
xchg
cmpsl
sub
shrb
or
inc
jnp
xchg
push
dec
mov
push
xor
inc
pop
into
cmpsl
pop
test
cld
mov
jmp
mov
je
push
leave
dec
inc
clc
fmuls
lods
xor
cmc
pop
std
popf
cmpsl
popa
sub
xchg
mov
decb
js
xchg
in
pop
mov
outsl
sbb
lods
popf
repnz
nop
or
les
daa
outsb
adcb
xor
push
test
jno
adc
pop
ja
adc
cwtl
add
popa
movsb
add
mov
pop
bound
push
stos
lods
mov
pop
mov
stos
push
mov
gs
out
test
out
fcompl
out
mov
ja
and
push
andb
std
xchg
mov
sbb
dec
stos
sar
xchg
cmpsb
cmp
xor
lods
pop
stos
cmc
mov
sbb
lahf
adc
lds
inc
adc
lcall
xchg
lcall
cwtl
cltd
je
mov
xor
pop
in
inc
gs
mov
jbe
enter
jbe
adc
js
sbbl
jns
sbb
addr16
jle
lods
shl
sbb
push
rcrb
popa
cmp
push
pop
dec
test
lret
cmp
mov
fnstenv
in
or
ss
sbb
sub
aad
mov
pusha
mov
jae
out
rcll
push
and
dec
sbb
sbb
dec
sahf
out
rorl
sub
stos
rcrl
ss
into
jnp
es
shll
ljmp
dec
jae
add
cmp
mov
fists
jnp
push
xor
xchg
sbb
jp
mov
jo
enter
inc
push
cmp
mov
pop
mov
test
roll
insl
icebp
jbe
pop
jae
lea
test
pop
push
add
les
mov
fistl
aad
push
cmp
pop
jns
js
fdivrl
lods
or
sbb
pop
add
or
xorl
enter
cmpsl
and
and
ja
sahf
shlb
lahf
div
and
dec
ljmp
push
mov
add
sbb
pop
in
cld
jp
jno
pop
cld
or
je
fcmovnb
fstl
mov
jp
aam
pushf
jp
xchg
scas
stos
xchg
xor
mov
mov
xchg
imul
or
out
pop
mov
pop
out
cmpsb
loop
add
aas
pop
dec
xchg
mov
or
xor
push
repz
rorb
fcoms
rolb
sbb
das
pusha
cmp
mov
pushf
mov
jmp
inc
and
test
jg
std
cld
xor
fadd
stos
in
cmpsb
cmc
out
std
sbb
sub
and
outsb
and
bound
xchg
xor
xchg
lock
adc
leave
sub
sbb
lahf
adc
stc
jle
int
xchg
fcomps
lds
push
popa
test
pop
frstor
std
mov
xchg
inc
icebp
sub
pop
jne
and
sahf
stos
xchg
lock
outsl
outsl
mov
sub
inc
adc
into
jge
inc
or
lods
sub
lret
push
sub
aas
insl
test
stc
jmp
xor
les
ret
fbld
push
out
cld
mov
push
sbb
das
xchg
dec
push
testl
andl
sbb
lahf
mov
sbbl
push
push
and
ret
idivl
lea
std
outsb
imul
inc
jg
push
add
cmp
cwtl
repz
xchg
jb
popa
iret
popf
push
or
inc
test
push
int3
test
mov
repz
and
jno
push
lret
push
popf
xor
mov
sub
popf
leave
cld
adc
nop
popf
cmp
arpl
inc
daa
and
repnz
mov
xor
mov
out
scas
lcall
jnp
cmpsl
fidivl
adc
clc
stc
push
and
and
lods
movsl
imul
into
jge
bts
cld
fs
dec
dec
xor
mov
mov
sbb
fisttpl
sbb
stc
or
test
jmp
movsb
aaa
bound
dec
lods
xchg
xchg
jle
les
std
cmpsl
das
mov
xchg
rclb
fs
sbb
stos
std
fists
adc
std
rorb
jg
jns
cmpb
stos
cltd
sbb
jge
lds
ret
aam
fs
inc
dec
adc
inc
add
hlt
mov
cmc
sti
addr16
sbb
arpl
lea
lds
mov
cmc
pop
mov
cmpsb
sbb
gs
cmp
adc
and
xchg
dec
call
lahf
sti
cltd
jg
shll
icebp
imul
in
clc
daa
mov
or
jl
lea
or
repnz
jmp
pop
mov
or
push
fists
cmp
pusha
gs
xchg
xchg
add
dec
jle
and
mov
jmp
xor
test
mov
not
inc
sbb
test
jle
dec
lods
dec
scas
out
adc
loope
fstpt
shll
sub
push
test
lahf
and
dec
fadd
and
push
pop
mov
xchg
xchg
sarb
and
adc
push
pop
push
cmp
into
ds
lods
rcll
out
sub
sub
inc
mov
cli
dec
test
mov
ja
xchg
lret
bound
adc
cs
loope
mov
push
idivl
mov
mul
das
fs
test
xor
lds
adc
or
dec
es
pop
jmp
lea
negl
cmp
cmp
gs
mov
mov
jmp
jmp
inc
push
pop
fs
out
rcrb
stos
xor
mov
ficompl
outsb
cmp
inc
repz
adc
xchg
push
pop
arpl
ficompl
or
fiadds
push
test
jle
ret
les
lret
mov
adc
loope
lods
sbb
hlt
scas
jb
jo
push
xchg
push
push
jl
repz
sti
es
ja
adc
dec
sbb
mov
loop
inc
dec
sbb
pop
call
add
mov
sbb
mov
push
inc
hlt
fsts
pusha
js
cs
push
data16
lea
movsb
std
adc
inc
add
repnz
push
pop
prefetch
mov
std
lcall
push
enter
es
mov
lods
dec
pop
or
xchg
add
andl
dec
add
repz
mov
jp
fs
ret
out
mov
movsb
push
sbb
hlt
cmp
sbb
sbb
xchg
and
fisubrs
daa
ss
dec
cmp
mov
nop
mov
std
movhlps
sbb
inc
adc
imul
jno
div
xor
pop
jmp
xor
xchg
bound
adc
hlt
jg
aad
cmc
fwait
test
repnz
lea
scas
divl
lret
cmpsl
adc
mov
jne
push
xor
lret
cmp
adc
mov
scas
pop
adc
mov
loope
sbb
data16
add
imul
lods
jp
and
mov
or
add
or
das
lret
fimull
adc
in
add
stc
or
pusha
mov
mov
lock
sbb
push
mov
imul
icebp
cld
shl
in
jnp
or
in
xor
bound
cmpb
lcall
and
sbb
lret
inc
pop
sti
shrl
mov
bound
mov
add
cmp
imul
repz
repnz
test
mov
sub
in
cwtl
adc
and
call
lcall
jnp
push
adc
nop
or
orl
pop
cmp
add
movsl
bound
lock
vcvttss2si
rcrl
inc
negb
test
sub
inc
pop
pusha
add
mov
inc
mull
gs
std
xchg
ret
jbe
mov
stos
das
pop
xchg
jnp
test
mov
lods
sub
xchg
cmc
xor
imul
and
or
bound
stos
shll
jnp
push
les
in
test
push
lods
adc
outsl
mov
inc
xlat
xor
jne
cmc
jbe
ret
iret
in
push
push
stos
imul
dec
add
mov
adc
into
in
xchg
adc
es
mov
add
pop
push
in
fimull
push
jno
sub
mov
fwait
mov
mov
out
adc
movaps
xor
div
dec
xchg
data16
mov
gs
add
fisttpll
add
adc
xchg
jmp
movsl
adc
lcall
sbb
sub
pushf
lahf
pop
fistpll
clc
imul
in
add
mov
xchg
mov
adcb
jne
xor
test
inc
shrl
fidivs
jmp
mov
addl
xor
inc
movsl
int
push
int3
push
mov
fidivrl
sbb
frstor
ljmp
ljmp
in
roll
pop
in
iret
pop
in
or
lods
call
popf
xor
hlt
and
cmp
xchg
and
pop
jnp
pop
les
cmp
out
dec
sub
add
cld
adc
jge
int
push
roll
xlat
mov
dec
aaa
jo
pop
xchg
xchg
jbe
jge
dec
fscale
cmp
jae
sahf
push
lea
ljmp
bound
dec
arpl
adc
jl
sbb
pop
adc
arpl
fimuls
push
cld
mov
fiaddl
jnp
iret
lods
add
fiaddl
stos
bound
ja
fwait
adc
cli
icebp
and
test
lods
sbb
ljmp
shrl
mov
mov
inc
and
dec
stos
xchg
inc
je
jl
xchg
add
ljmp
jo
jne,pn
ret
sbb
frstor
jo
push
push
fsubr
fldenv
xor
and
mov
nop
cmc
jb
jns
push
hlt
lea
dec
pop
jle
outsb
mov
sbb
lock
or
cmp
daa
sbb
xchg
lcall
fstp
nop
mov
sub
pop
push
mov
rolb
lret
addr16
xor
pop
push
inc
adc
in
clc
divps
push
andl
dec
stos
lea
mov
lds
or
inc
in
fadds
inc
mov
mov
adc
pushf
xchg
mov
pop
loopne
cmp
idivb
in
stos
nop
aas
in
cs
aaa
xor
pop
push
or
inc
arpl
cmp
comiss
arpl
jae
add
mov
inc
mov
into
add
jae
aam
sti
pop
inc
cmp
loop
sbb
mov
add
sub
or
mov
data16
in
xor
lahf
add
sbbb
mov
push
loope
mov
xchg
fucomi
rdtsc
outsb
mov
inc
sbb
imul
ret
repnz
pop
push
loop
aam
adc
ja
pop
pinsrw
sbb
dec
fstpl
jmp
xchg
xchg
es
inc
cmp
or
and
movsb
movsb
pop
push
mov
mov
lds
add
inc
push
mov
push
dec
mov
push
dec
stos
icebp
xor
adc
add
add
push
js
lret
mov
xchg
sbb
and
adc
sbb
pop
pop
sahf
lods
in
fmull
call
sub
popf
sbb
lds
pop
add
mov
out
pop
testb
or
ja
js
adc
in
cmp
clc
icebp
fwait
andl
aaa
sbb
pop
pop
cmp
icebp
xchg
stos
jno
cmpsl
dec
dec
aas
jmp
and
andb
daa
mov
xor
sub
negl
lret
loope
inc
gs
in
lds
xlat
or
ret
fsts
sbb
in
aaa
sub
stos
push
pop
cmpsl
jl
mov
mov
push
push
and
lahf
dec
shlb
testl
push
clc
pop
mov
pushf
inc
dec
push
xchg
jl
pop
out
pop
dec
or
or
ret
xchg
ja
paddusw
imul
xor
popa
xor
test
ss
mov
loopne
dec
gs
dec
and
jecxz
pop
rcrb
ljmp
lock
lods
out
sbb
punpckhdq
testb
jb
sub
bound
stos
ret
pop
cwtl
repnz
aam
xor
fucom
bound
or
xor
push
lods
bound
or
adc
pop
out
sahf
xchg
dec
adc
ds
imul
or
jo
mov
jnp
cmp
fstps
lds
adc
jno
pop
in
mov
mov
adc
mull
sub
inc
pop
bound
and
arpl
cltd
movsb
test
dec
sbb
jae
fs
mov
push
jmp
test
dec
push
sub
jnp
cld
stos
jmp
into
out
pop
inc
dec
or
loope
daa
je
addr16
imul
mov
dec
ret
inc
insb
imul
lods
lods
in
or
pop
pop
fmuls
sbb
jg
xchg
jle
insb
mov
insl
push
in
cmp
cmpsl
xor
and
pop
mov
and
cmp
adc
ss
iret
pop
jmp
push
mov
test
leave
sbb
frstor
mov
or
divl
sub
aaa
int
sub
or
dec
fstps
movsl
push
sub
push
mov
sub
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
cmp
jne
mov
push
call
add
push
xor
push
push
push
push
push
call
add
mov
mov
push
push
call
add
call
mov
cmp
je
sub
mov
mov
and
cmp
je
push
call
add
push
push
push
push
push
call
add
cmp
je
or
xor
push
push
push
call
add
mov
sub
push
call
add
push
push
call
add
call
call
mov
push
call
add
push
push
push
call
add
xor
push
push
push
push
push
call
add
mov
and
sub
cmp
je
push
push
push
call
add
push
push
call
add
mov
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
call
mov
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
cmp
jne
sub
and
and
cmp
je
mov
push
push
push
push
call
add
sub
call
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
or
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
mov
mov
add
push
call
add
push
call
add
push
push
call
add
or
add
push
push
push
call
add
sub
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
add
mov
call
call
and
call
push
push
push
push
call
add
push
call
add
add
push
call
mov
add
sub
sub
or
and
cmp
je
cmp
jne
push
call
add
push
push
push
push
push
call
add
xor
sub
and
mov
mov
and
add
add
mov
add
add
xor
mov
and
add
mov
sub
mov
xor
sub
sub
mov
sub
mov
sub
mov
and
xor
and
add
add
add
mov
sub
cmp
jne
sub
mov
mov
add
add
add
and
or
and
test
jne
sub
and
cmp
jne
mov
mov
add
sub
add
cmp
jne
sub
sub
mov
test
jne
cmp
je
cmp
jne
cmp
je
sub
mov
mov
add
sub
sub
or
add
and
push
push
push
push
call
add
mov
add
push
push
push
push
push
call
add
call
or
and
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
push
push
call
add
call
sub
cmp
jne
add
mov
mov
add
cmp
jne
mov
mov
cmp
je
mov
mov
mov
sub
or
cmp
jne
sub
mov
xor
test
je
add
add
sub
mov
mov
and
sub
add
add
and
or
add
add
add
cmp
jne
cmp
jne
add
sub
sub
mov
push
push
push
push
call
add
call
push
call
add
push
call
add
push
push
call
add
sub
mov
cmp
je
call
push
push
push
call
add
mov
xor
mov
push
call
add
call
push
push
push
call
add
mov
xor
sub
push
push
push
push
call
add
mov
call
push
push
push
push
push
call
add
push
push
call
add
push
call
add
push
call
add
call
cmp
je
sub
sub
sub
cmp
jne
push
push
push
call
add
mov
sub
add
mov
mov
or
and
add
or
sub
cmp
je
mov
add
sub
cmp
jne
mov
sub
sub
add
mov
add
sub
cmp
jne
sub
sub
add
sub
mov
mov
and
mov
add
cmp
je
mov
mov
xor
add
add
add
mov
add
sub
sub
mov
sub
mov
and
and
add
sub
or
sub
cmp
je
mov
mov
add
mov
add
test
je
mov
or
sub
mov
sub
add
and
cmp
je
cmp
jne
mov
sub
mov
sub
and
sub
cmp
je
mov
or
cmp
jne
mov
cmp
je
sub
mov
test
je
add
mov
add
sub
xor
xor
mov
or
sub
cmp
je
cmp
je
mov
add
mov
xor
and
sub
test
jne
cmp
je
mov
add
or
add
add
add
push
push
push
push
call
add
sub
push
push
push
push
call
add
push
call
add
mov
call
call
push
call
add
push
call
add
sub
xor
add
call
or
mov
push
push
push
call
add
push
push
push
push
push
call
add
add
cmp
je
push
push
call
add
cmp
jne
mov
push
push
push
push
call
add
mov
push
push
push
call
add
push
push
call
add
push
push
push
call
add
add
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
call
add
add
push
push
push
push
call
add
call
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
sub
sub
add
mov
sub
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
cmp
jne
mov
push
call
add
mov
push
push
push
push
call
add
push
call
add
sub
mov
cmp
je
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
call
add
add
add
push
push
push
push
push
call
add
push
push
call
add
call
call
mov
mov
push
push
push
push
call
add
add
push
push
push
call
add
add
push
call
add
mov
push
push
push
push
call
add
push
push
push
call
add
sub
sub
xor
call
mov
push
call
add
cmp
jne
push
push
push
call
add
call
mov
mov
sub
cmp
je
sub
or
test
je
sub
push
push
call
add
push
push
push
call
add
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
lea
mov
xor
sub
add
xor
sub
push
push
push
call
add
push
push
push
call
add
push
call
call
call
push
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
mov
mov
add
xor
and
add
sub
and
cmp
jne
cmp
je
mov
test
je
mov
cmp
jne
mov
sub
mov
or
cmp
jne
cmp
jne
sub
xor
mov
sub
sub
cmp
je
mov
add
xor
add
sub
add
sub
add
cmp
je
add
mov
and
sub
add
mov
add
sub
add
sub
add
add
shr
sub
cmp
jne
sub
push
push
call
add
mov
mov
sub
sub
mov
cmp
jne
push
push
push
call
add
add
push
push
push
push
push
call
add
push
push
call
add
call
push
push
push
call
add
cmp
jne
push
push
push
push
call
add
mov
mov
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
add
push
push
push
push
call
add
test
je
push
push
call
add
add
push
push
call
add
call
mov
add
cmp
je
and
cmp
je
mov
mov
sub
test
jne
sub
sub
cmp
jne
mov
add
or
cmp
je
mov
cmp
je
add
cmp
je
mov
sub
mov
cmp
jne
mov
add
cmp
jne
mov
sub
add
sub
and
mov
or
and
or
cmp
je
test
jne
mov
sub
mov
or
add
cmp
je
sub
mov
test
je
push
push
call
add
push
push
push
call
add
mov
and
push
call
add
pushl
push
pushl
call
push
call
add
call
addl
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
mov
push
push
call
add
mov
push
call
add
call
cmp
je
add
xor
push
push
push
push
call
add
mov
push
push
call
add
add
push
push
push
call
add
push
push
call
add
or
call
push
push
push
call
add
sub
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
sub
mov
add
push
call
add
mov
sub
push
push
push
call
add
mov
push
push
push
push
call
add
add
cmp
jne
xor
mov
push
call
add
sub
push
push
call
add
test
je
add
cmp
je
cmp
jne
call
sub
mov
mov
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
call
add
sub
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
cmp
je
sub
push
push
call
add
mov
push
call
add
cmp
jne
sub
xor
cmp
jne
add
push
call
add
mov
mov
sub
push
push
call
add
call
and
push
call
add
add
pop
sub
push
push
push
call
add
push
push
push
push
call
add
add
mov
push
push
push
call
add
mov
test
je
add
and
push
push
call
add
mov
add
call
mov
add
push
call
add
add
cmp
jne
call
sub
add
pop
push
push
push
call
add
call
pop
push
push
push
call
add
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
call
push
mov
push
push
push
push
call
add
push
push
call
add
and
push
push
push
call
add
call
call
cmp
jne
or
call
xor
push
call
add
push
push
call
add
mov
cmp
je
mov
mov
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
and
cmp
je
and
and
push
push
call
add
cmp
je
mov
push
push
push
call
add
call
xor
push
call
add
add
push
call
add
push
push
push
call
add
mov
push
push
push
call
add
push
push
push
push
call
add
push
call
add
cmp
jne
push
call
add
add
push
push
push
push
push
call
add
call
and
push
push
push
call
add
push
call
add
push
call
add
mov
sub
push
push
push
push
call
add
mov
push
push
call
add
sub
add
call
sub
call
sub
mov
push
push
push
push
push
call
add
mov
call
push
push
push
push
call
add
push
push
call
add
sub
push
push
push
push
call
add
push
call
add
cmp
jne
cmp
je
push
push
call
add
and
call
push
push
push
call
add
mov
push
push
push
push
call
add
movl
cmp
je
cmp
jne
and
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
jne
sub
call
cmp
jne
mov
push
push
call
add
push
push
call
add
call
sub
xor
cmp
jne
mov
cmp
jne
mov
sub
cmp
je
mov
sub
mov
sub
or
and
cmp
jne
sub
mov
mov
cmp
jne
sub
sub
sub
mov
xor
sub
cmp
je
mov
mov
sub
and
add
or
cmp
jne
mov
mov
sub
sub
add
mov
add
and
or
xor
mov
add
add
mov
add
or
push
push
call
add
call
mov
mov
add
sub
mov
push
push
push
push
call
add
call
call
mov
sub
mov
add
add
cmp
je
sub
sub
mov
test
je
mov
mov
cmp
jne
mov
and
and
mov
cmp
jne
add
sub
mov
mov
sub
push
push
push
push
push
call
add
mov
and
add
mov
mov
sub
sub
sub
sub
test
je
mov
sub
cmp
jne
cmp
je
mov
mov
add
cmp
je
add
xor
mov
mov
add
and
add
add
add
cmp
je
or
cmp
jne
sub
cmp
je
add
mov
add
sub
test
jne
sub
sub
mov
sub
add
sub
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
add
sub
xor
add
mov
test
je
mov
mov
sub
cmp
jne
cmp
je
add
xor
or
add
sub
and
add
test
jne
xor
xor
mov
mov
cmp
je
sub
mov
or
mov
add
add
sub
and
sub
add
sub
mov
cmp
je
call
push
call
add
push
call
test
je
mov
mov
cmp
je
and
sub
mov
or
test
jne
sub
mov
mov
and
sub
cmp
jne
xor
mov
sub
test
jne
add
mov
cmp
jne
xor
and
sub
add
or
je
mov
mov
and
mov
addl
mov
add
lea
xor
push
push
call
add
call
sub
inc
push
push
call
add
push
call
add
mov
add
sub
push
push
call
add
cmp
jne
mov
mov
xor
cmp
je
sub
mov
call
sub
push
push
call
add
xor
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
and
push
call
add
or
push
push
push
push
push
call
add
and
push
push
call
add
mov
sub
mov
mov
add
test
jne
xor
sub
mov
add
add
cmp
je
or
add
mov
push
call
add
push
call
add
pop
push
push
call
add
pop
push
push
push
push
call
add
pop
cmp
jne
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
call
add
push
mov
push
push
call
add
push
call
add
push
push
push
call
add
push
mov
mov
mov
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
rdtsc
mov
sub
mov
sub
sub
sub
add
sub
sub
mov
sub
mov
and
xor
sub
pop
mov
add
mov
or
test
je
sub
cmp
je
mov
add
add
or
and
mov
cmp
jne
cmp
jne
cmp
je
sub
mov
mov
add
add
add
cmp
je
add
mov
cmp
jne
add
mov
sub
xor
add
sub
sub
xor
sub
xor
pop
xor
mov
sub
sub
sub
sub
add
pop
xor
mov
sub
cmp
jne
and
or
xor
and
add
and
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
call
add
push
push
push
push
call
add
push
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
mov
mov
xor
test
je
mov
or
sub
mov
cmp
je
xor
xor
mov
test
je
and
xor
or
add
mov
sub
sub
test
jne
mov
sub
add
cmp
je
cmp
je
mov
mov
cmp
jne
cmp
je
mov
mov
add
sub
add
add
add
decl
or
sub
sub
mov
sub
mov
and
cmp
jne
mov
or
sub
and
cmp
je
and
negl
cmp
je
mov
mov
test
jne
mov
add
sub
mov
and
sub
sub
sub
addl
add
rorl
sub
add
or
and
mov
add
or
sub
or
cmp
jne
add
cmp
jne
mov
and
add
cmp
je
xor
sub
jmp
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
call
add
mov
cmp
jne
mov
push
call
add
mov
and
push
push
call
add
test
jne
push
push
call
add
cmp
je
push
push
push
push
push
call
add
add
mov
call
sub
sub
sub
push
call
add
pop
xor
push
call
add
push
call
add
sub
cmp
jne
cmp
je
or
push
push
push
push
push
call
add
call
push
call
add
add
pop
mov
cmp
je
mov
xor
push
push
push
call
add
push
call
add
push
push
push
push
call
add
or
push
call
add
push
push
push
call
add
call
sub
push
push
call
add
add
sub
push
call
add
pop
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
call
push
mov
mov
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
mov
mov
mov
add
sub
push
call
add
push
add
mov
xor
add
sub
push
mov
push
push
push
push
push
call
add
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
push
call
add
mov
mov
and
cmp
jne
mov
xor
add
mov
cmp
jne
add
mov
mov
add
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
mov
sub
or
add
mov
cmp
jne
mov
or
mov
add
cmp
jne
mov
xor
sub
test
je
sub
or
mov
mov
sub
add
add
or
sub
mov
or
and
mov
cmp
je
sub
add
sub
and
sub
or
mov
cmp
je
add
mov
mov
and
cmp
jne
mov
add
add
mov
add
sub
test
je
and
add
add
cmp
je
xor
add
mov
cmp
je
mov
sub
xor
cmp
je
mov
mov
add
sub
cmp
je
cmp
je
mov
cmp
jne
mov
add
add
xor
cmp
jne
mov
add
mov
add
sub
mov
mov
cmp
je
add
call
mov
mov
add
xor
sub
mov
push
push
call
add
push
push
call
add
mov
and
add
sub
sub
add
mov
mov
add
cmp
je
and
add
add
mov
or
mov
sub
cmp
je
mov
and
or
mov
mov
sub
cmp
jne
mov
and
add
cmp
je
add
add
mov
and
mov
cmp
jne
cmp
je
xor
mov
sub
xor
add
sub
cmp
je
mov
add
add
and
or
cmp
je
xor
mov
add
cmp
jne
cmp
jne
cmp
je
mov
xor
mov
or
sub
mov
mov
add
xor
xor
sub
cmp
je
add
sub
and
mov
mov
sub
call
push
push
push
call
add
push
push
call
add
xor
mov
push
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
sub
add
push
call
add
mov
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
and
sub
add
and
mov
sub
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
je
add
test
je
add
and
cmp
jne
mov
xor
add
cmp
je
and
cmp
jne
cmp
jne
mov
add
and
xor
or
and
cmp
je
or
test
je
mov
add
add
test
jne
mov
mov
cmp
jne
mov
and
sub
cmp
jne
cmp
je
mov
mov
cmp
jne
or
add
or
sub
mov
sub
mov
sub
mov
cmp
jne
add
or
cmp
je
test
je
sub
mov
mov
sub
and
sub
cmp
jne
cmp
jne
mov
sub
sub
test
jne
and
mov
sub
add
sub
mov
and
mov
sub
test
je
cmp
je
cmp
je
add
add
add
mov
test
jne
add
add
add
mov
and
sub
sub
mov
or
je
mov
add
xor
repnz
push
push
push
push
push
call
add
addl
call
push
call
add
jmp
mov
or
push
push
call
add
push
push
call
add
push
push
push
push
call
add
mov
xor
sub
mov
sub
add
add
cmp
je
sub
or
add
pop
add
pop
mov
or
add
pop
add
mov
mov
cmp
jne
cmp
jne
add
cmp
je
cmp
je
mov
xor
add
sub
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
push
call
push
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
cmp
je
push
call
add
push
call
add
push
push
push
push
call
add
add
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
pop
mov
and
push
push
push
push
push
call
add
test
je
push
push
push
push
push
call
add
sub
sub
push
push
push
call
add
call
mov
pop
call
pop
push
push
push
push
call
add
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
call
push
cmp
jne
mov
push
mov
mov
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
test
je
mov
call
mov
push
push
call
add
test
je
push
call
add
call
push
push
push
call
add
xor
call
push
call
add
sub
push
push
push
push
push
call
add
add
call
xor
call
push
push
push
call
add
push
push
push
push
push
call
add
add
call
push
push
push
push
push
call
add
and
test
jne
xor
or
push
push
push
push
call
add
pop
push
push
call
add
push
call
add
pop
xor
mov
push
push
call
add
call
push
push
call
add
push
push
call
add
push
call
add
cmp
jne
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
call
add
call
cmp
jne
push
push
call
add
sub
test
jne
push
push
call
add
add
cmp
jne
add
push
push
push
call
add
pop
mov
add
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
mov
push
test
je
push
call
add
push
push
push
push
call
add
push
push
push
call
add
test
je
push
push
call
add
push
push
push
call
add
xor
add
mov
push
call
add
push
call
add
push
push
push
push
push
call
add
cmp
je
mov
sub
push
push
push
call
add
mov
add
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
sub
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
add
sub
push
push
push
push
push
call
add
pop
or
call
pop
mov
push
push
push
push
push
call
add
push
push
push
call
add
pop
cmp
jne
cmp
je
sub
push
push
push
push
call
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
call
push
cmp
je
mov
mov
push
push
push
push
push
call
add
push
call
add
push
add
mov
mov
mov
push
push
push
push
call
add
push
call
add
call
push
push
push
call
add
push
push
push
push
call
add
or
push
push
push
push
call
add
push
mov
xor
sub
push
push
call
add
push
push
push
push
push
call
add
or
call
push
call
add
call
and
call
cmp
jne
call
pop
sub
pop
mov
push
push
push
call
add
push
push
push
call
add
pop
call
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
call
add
push
cmp
jne
call
call
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
push
call
add
mov
pop
push
push
push
push
call
add
pop
push
push
push
push
call
add
push
push
push
push
call
add
pop
and
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
add
cmp
je
mov
push
push
push
push
push
call
add
push
cmp
je
test
je
push
push
call
add
push
push
push
push
call
add
push
call
add
cmp
jne
mov
mov
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
call
add
mov
push
call
add
pop
xor
test
je
push
push
push
call
add
push
push
push
push
push
call
add
pop
push
call
add
pop
push
push
push
push
call
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
call
push
push
push
call
add
push
push
push
call
add
push
push
call
add
mov
mov
mov
mov
push
push
push
push
push
call
add
pop
or
and
call
push
push
push
call
add
pop
and
call
pop
or
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
call
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
call
push
mov
xor
call
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
call
add
mov
push
push
call
add
push
push
push
push
call
add
add
push
push
push
call
add
push
push
push
push
push
call
add
or
sub
push
push
push
call
add
push
sub
push
push
call
add
cmp
je
push
call
add
sub
push
call
add
sub
mov
add
sub
push
push
push
call
add
push
push
push
push
call
add
mov
pop
call
pop
mov
add
mov
push
call
add
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
call
push
push
push
call
add
push
mov
mov
mov
add
sub
call
or
push
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
call
add
sub
push
call
add
mov
push
push
push
call
add
push
call
add
pop
mov
mov
test
jne
xor
push
push
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
or
push
push
push
call
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
call
push
mov
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
xor
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
cmp
je
xor
push
push
call
add
push
push
push
push
push
call
add
pop
push
call
add
pop
add
call
pop
push
push
push
push
call
add
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
je
sub
push
or
test
je
or
push
sub
add
mov
mov
sub
add
and
mov
mov
add
sub
cmp
jne
sub
xor
xor
add
mov
and
mov
add
pop
mov
sub
pop
sub
mov
sub
sub
pop
mov
mov
add
cmp
je
add
xor
add
cmp
jne
sub
sub
sub
mov
cmp
jne
mov
add
cmp
je
add
add
add
cmp
jne
xor
mov
add
add
sub
sub
cmp
je
mov
mov
and
cmp
jne
add
xor
mov
mov
sub
cmp
jne
cmp
je
mov
and
sub
add
cmp
je
xor
mov
mov
sub
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
xor
add
add
or
or
mov
push
add
sub
push
mov
mov
or
and
or
push
sub
mov
sub
sub
xor
mov
sub
add
add
add
mov
add
mov
sub
mov
sub
add
test
je
sub
mov
mov
add
pop
test
je
sub
pop
xor
mov
sub
add
mov
pop
add
sub
xor
mov
add
add
add
cmp
jne
xor
sub
cmp
jne
cmp
jne
sub
sub
add
or
xor
cmp
je
add
cmp
je
mov
cmp
jne
and
test
je
mov
mov
sub
sub
sub
or
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
sub
mov
push
sub
or
sub
mov
sub
sub
sub
or
mov
add
and
xor
push
mov
mov
and
and
sub
cmp
jne
or
test
jne
sub
mov
cmp
jne
mov
cmp
je
add
mov
sub
test
je
mov
mov
add
sub
cmp
je
mov
add
test
je
add
sub
xor
add
mov
sub
sub
sub
or
add
add
add
push
add
mov
cmp
je
xor
add
mov
xor
sub
add
add
cmp
jne
mov
or
add
add
test
jne
cmp
je
add
mov
mov
sub
or
cmp
jne
xor
cmp
jne
sub
mov
mov
sub
sub
add
or
add
sub
cmp
je
and
cmp
jne
test
jne
sub
sub
mov
cmp
je
cmp
jne
mov
and
add
xor
add
cmp
je
mov
mov
add
mov
or
sub
test
je
cmp
jne
mov
and
sub
mov
add
or
add
cmp
je
mov
add
add
add
add
mov
test
je
add
sub
mov
pop
mov
add
cmp
jne
mov
mov
cmp
jne
xor
sub
mov
sub
add
and
cmp
je
cmp
je
cmp
je
mov
xor
or
cmp
jne
mov
test
jne
add
sub
test
je
mov
cmp
jne
cmp
jne
mov
add
cmp
jne
mov
and
cmp
jne
xor
mov
sub
add
test
je
mov
add
mov
test
je
mov
add
cmp
jne
mov
cmp
jne
and
mov
sub
cmp
jne
mov
mov
sub
sub
test
je
sub
test
jne
cmp
jne
sub
pop
sub
mov
test
je
test
je
cmp
jne
add
sub
mov
cmp
je
add
and
sub
mov
sub
mov
add
test
je
and
mov
add
and
sub
cmp
je
add
mov
xor
xor
cmp
jne
test
jne
add
sub
mov
mov
cmp
jne
mov
cmp
je
add
mov
add
mov
mov
mov
sub
add
sub
pop
sub
leave
ret
