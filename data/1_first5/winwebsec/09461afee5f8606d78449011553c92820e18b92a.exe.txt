push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
aam
pusha
pusha
xor
push
push
cmp
mov
mov
mov
xor
sbb
test
mov
int3
notl
mov
xor
repz
sbb
leave
mov
mov
push
stc
aad
fmull
push
sub
or
xchg
adc
sbb
popf
mov
es
fidivrl
mov
or
xchg
in
roll
lods
adc
in
out
xor
pop
arpl
or
mov
sub
lods
push
or
mov
mov
ret
xor
adc
cmp
jp
jg
shll
fwait
cmp
push
icebp
mov
popa
stos
mov
sub
scas
or
jecxz
sbb
pop
mov
fcompl
mov
lods
cmp
mov
xor
cmp
dec
add
add
fs
xchg
or
cmp
jle
mov
xchg
jmp
aaa
fwait
hlt
xor
push
les
mov
rol
mov
xlat
daa
pop
pop
jbe
out
mov
ret
xorl
or
dec
mov
lds
cmpsb
mov
and
insb
outsl
sub
xlat
sub
rcll
pop
mov
cmp
inc
test
adc
in
int3
std
cs
scas
pop
pushf
cwtl
mov
mov
fnsave
cmpsb
aad
jae
out
pop
mov
pop
push
push
sub
cmp
stos
jmp
arpl
add
mov
cmp
or
adcl
mov
inc
imul
sub
roll
lods
clc
or
rcl
adc
pop
pop
rcll
scas
ret
mov
mov
push
cmp
scas
pop
xor
dec
shll
jecxz
loop
adc
ss
nop
cmp
in
stc
test
jl
jbe
push
in
inc
das
dec
rolb
sub
es
inc
int
pop
mov
xchg
push
mov
pop
in
cmc
cmp
mov
fstpt
ds
pop
mov
push
lods
rcll
fisttpl
out
out
xchg
push
jnp
and
push
daa
xor
fsubl
mov
sub
sub
xchg
daa
iret
cwtl
lock
cmp
sbb
or
lcall
push
sbb
rcrl
scas
shlb
fs
insl
enter
inc
xchg
outsb
pop
cltd
inc
nop
dec
mov
ja
test
insl
iret
js
mov
xchg
nop
ret
or
add
hlt
jmp
in
in
loop
flds
mov
sub
push
mov
das
shl
xchg
and
fists
lcall
sbb
mov
es
xor
mov
int3
jmp
mov
and
test
jle
cld
stos
in
aas
movsb
shrb
mov
pop
sbb
rcr
fcomps
and
rorl
pop
or
xor
mov
pmaddwd
ja
xor
xor
push
mov
push
mov
jb
mov
popf
sbbl
mov
jp
jne
int3
push
mov
cli
lahf
shl
movsl
add
mov
std
cmpsl
stc
lcall
sbb
shlb
out
fcomps
imul
inc
clc
xchg
dec
jne
inc
iret
adc
mov
out
nop
popf
adc
and
bound
insb
or
loopne
xor
and
sarl
test
xchg
icebp
xlat
mov
std
adc
fisttpll
pop
adc
pop
dec
in
cmp
rcll
mov
ret
mov
push
icebp
push
fidivrl
and
cs
xchg
mov
fidivs
pop
movzbl
adc
add
jnp
inc
jnp
pop
jmp
cwtl
ret
out
xorb
mov
cmc
adc
jno
push
nop
hlt
fadd
xchg
aad
and
sbb
insl
xchg
test
add
rorb
or
push
js
mov
aam
mov
les
mov
maxps
push
call
jp
xor
and
push
or
jnp
or
pusha
aaa
daa
fisttpll
push
push
jb
jmp
fistps
das
movsl
movsl
inc
xchg
xor
inc
and
js
mov
cmp
stos
aam
sub
add
and
jp
outsl
loope
fwait
hlt
sub
test
cs
test
stc
hlt
fwait
aad
xor
sti
test
push
jg
fbstp
notl
shl
out
inc
imul
fisttps
cmp
into
mov
mov
sbb
dec
test
adc
mov
lret
mov
pushf
mov
ds
mov
add
cmp
loop
adc
lret
mov
mov
dec
sbb
aaa
lock
aad
mov
loop
daa
arpl
daa
adc
test
test
mov
and
pop
mov
sbb
pop
cltd
lcall
fsts
in
jl
or
ds
jno
xchg
pop
xchg
in
mov
inc
ret
test
out
into
jle
aam
push
xchg
xchg
ss
aad
push
in
sub
inc
repz
add
pushf
sub
cmp
test
xor
lods
lods
loope
aas
sahf
sti
add
mov
outsb
pop
lcall
cmpsl
jmp
aad
xchg
wbinvd
push
inc
mov
xor
dec
mov
mov
adcb
cmp
add
xor
andb
mov
and
int
int3
js
cltd
jo
xlat
cmpsb
pop
cmp
jae
enter
mov
and
add
jae
int
insl
gs
inc
mov
and
mov
negb
inc
mov
inc
ds
cmp
out
add
ja
sub
cmp
xor
add
cmpsb
addl
sbb
in
xlat
andl
stc
test
pop
pop
cs
jb
sub
mov
call
in
pop
test
adc
jnp
pop
xlat
mov
pusha
int
cwtl
dec
mulb
ds
sbb
daa
dec
pop
xor
pop
sub
lahf
jne
movsb
cmp
lahf
or
in
pop
mov
fisubrs
out
js
aam
xor
call
clc
push
aas
jns
adc
sahf
xor
rdtsc
cmp
hlt
jns
inc
sub
add
jle
cmpsb
push
mov
std
or
jnp
rcr
xor
mov
push
lahf
cli
mov
fldcw
test
faddl
je
push
push
mov
scas
lock
dec
in
repnz
dec
push
xor
insb
sub
or
xchg
fiadds
mov
testl
sub
push
mov
xor
or
fiadds
icebp
aad
icebp
out
pop
les
push
mov
sti
pushf
jge
popf
jo
cs
xor
pop
adc
mulb
add
jle
xor
enter
cmpsl
sbbb
adc
mov
inc
inc
cld
popf
and
mov
or
dec
aaa
call
xchg
pop
sbb
inc
xchg
insl
pop
inc
jge
outsl
inc
inc
cwtl
sbb
jmp
cmp
pop
jb
repz
pop
loop
xor
or
test
stc
or
fwait
xorb
stos
add
ja
out
jecxz
std
hlt
outsb
sbb
xchg
rolb
clc
decl
mov
or
jl
std
or
or
cmp
or
mov
nop
movsl
or
pop
inc
stos
pop
leave
and
fwait
lret
movsb
outsb
add
std
aas
pusha
add
add
cmpsl
std
mov
cmpsb
jp
mov
pop
les
inc
add
fdivrs
sub
jb
test
sbb
and
fwait
push
dec
sbb
stos
adc
cmp
xchg
ljmp
mov
cltd
jbe
sub
nop
dec
aaa
lret
mov
sahf
adcb
mov
jnp
sub
jne
pop
ret
les
imul
ror
adc
stos
js
leave
call
push
int
or
pop
lock
adc
jae
mov
push
out
out
xchg
nop
or
aas
jmp
xor
inc
inc
dec
fidivrs
imul
cmp
cmp
sub
aas
andb
push
pusha
dec
and
jae
mov
arpl
mov
xchg
xchg
mov
sbb
sub
cmp
push
jle
xor
nop
lret
inc
pop
shrl
repnz
vaddps
insb
mov
mov
arpl
arpl
pop
mov
sahf
jl
leave
insl
pop
adcl
addr16
ljmp
daa
les
jno
lcall
ss
out
mov
hlt
in
or
xchg
jg
or
lea
dec
outsb
mov
or
mov
movsb
cmp
sti
cmp
out
jo
cmp
mov
cltd
pusha
pop
dec
sub
int
push
xchg
or
push
sbb
cmpsb
fprem
loope
movhps
mov
adc
inc
inc
stos
cmp
jns
out
loope
push
adc
xor
mov
jge
out
mov
push
push
inc
mov
aaa
jo
mov
inc
add
jp
jl
push
cmp
inc
lret
lods
fwait
cmpsb
int3
insb
lea
sbb
dec
mov
fisubl
dec
or
xchg
and
loope
fistps
jl
jns
xchg
test
push
sub
push
cmpsl
sub
push
outsl
stc
lods
mov
mov
mov
hlt
outsl
insb
cmpsb
add
sbb
sub
add
mov
xchg
stc
adc
push
in
pop
in
adc
pop
or
add
rolb
stos
daa
xor
mov
xor
js
out
push
ret
mov
push
mov
sbb
lret
sbb
inc
idivl
imul
negb
js
fmull
sbb
int
in
jns
or
xchg
and
out
sbb
outsb
push
in
sub
adc
xlat
testl
push
push
in
or
stc
loopne
push
mov
jb
in
test
mov
add
jae
xchg
dec
ljmp
clc
mov
cmp
pushf
mov
sub
pop
pop
test
data16
inc
push
les
imull
cmp
sbb
cwtl
add
or
mov
mov
mov
cmp
mov
test
add
add
jnp
xor
icebp
lret
aaa
xor
cmpsl
pop
mov
cmp
or
mov
ds
fwait
adc
jmp
outsb
mov
mov
pushf
cmp
dec
cmpsl
loop
clc
movsb
out
in
xor
call
jnp
xchg
push
loopne
jge
cmp
sbb
scas
adc
iret
lods
cltd
cmp
aad
mov
or
push
idiv
xchg
sbb
mov
call
ror
lds
imul
cli
push
scas
push
xchg
in
pop
cmpsb
mov
cltd
sbb
addps
stos
and
stos
je
cmp
lods
pop
test
xor
and
sub
sub
dec
jne,pn
mov
cwtl
stos
lock
mov
xor
or
fdivrl
sub
lods
pop
sub
jae
push
imul
xchg
xor
xor
xlat
xchg
or
jne
aas
adc
sub
test
xlat
ljmp
jnp
jp
jae
shlb
imul
adc
mov
push
xor
push
sbb
leave
and
in
dec
jne
cmp
jae
aam
test
mov
nop
das
lea
es
or
outsb
lret
sbb
push
adc
popf
sbb
jae
bound
mulb
pushw
sbb
mov
sbb
cmpsb
sahf
ret
cli
inc
pop
popa
ss
sub
out
scas
and
in
scas
hlt
mov
mov
jnp,pn
shl
mov
mov
xchg
jb
and
cmp
mov
jae
jp
arpl
mov
popf
stos
filds
adc
shl
xor
scas
xchg
test
mov
sub
lods
lods
push
lock
push
xchg
pop
shlb
inc
lods
dec
xlat
adc
je
inc
mov
push
hlt
xlat
add
sbb
xchg
lahf
xlat
and
and
inc
and
mov
push
mov
mov
mov
aam
mov
nop
pop
jno
xor
sub
sbb
sub
add
sub
mov
adc
sub
mov
aas
pop
repz
sub
xchg
rolb
das
mov
stc
push
dec
xchg
sub
out
xor
cmpsl
das
xor
add
mov
shrl
rcll
adc
aad
mov
cmp
addl
shlb
es
add
adc
mov
aaa
mov
aam
in
subb
jg
jbe
inc
xchg
icebp
push
jl
mov
lods
insb
push
xchg
mov
sbb
pop
decb
rcr
xchg
sbb
arpl
adc
jp
push
push
sbb
mov
sbb
leave
dec
mov
pop
xchg
lods
adc
jb
pop
sbb
jecxz
sub
mov
cmpsl
arpl
xor
adc
mov
dec
sbb
movsb
inc
inc
xlat
push
data16
idivb
loopne
dec
mov
pop
js
std
aad
pop
stos
ljmp
pop
mov
insl
or
push
jb
das
and
loop
out
inc
jl
and
inc
adc
xchg
adc
jno
cmp
into
arpl
adc
adc
rorl
jbe
lods
scas
orb
ret
adc
inc
dec
ds
mov
inc
pusha
mov
fs
jne
js
shl
lods
or
fisttps
das
loopne
jb
or
jb
popf
jle
stc
xor
cmp
cltd
xor
or
sub
mov
and
push
adc
and
fdivl
pushf
in
sahf
clc
stc
fmul
xchg
loop
pop
pop
mov
pusha
imul
push
mov
xchg
pop
out
xchg
jae
cmp
mov
fcoml
lahf
stos
jbe
enter
sbb
test
dec
cmpsl
mov
cmp
jo
lods
das
xor
xor
stos
jbe
repnz
daa
aad
jnp
jne
inc
inc
push
mov
cli
pusha
xlat
lods
dec
mov
ja
sub
fldcw
jl
or
leave
pop
aam
lods
shrl
mov
and
cmp
bound
adc
in
loop
mov
sub
dec
mov
insb
arpl
lahf
leave
mov
inc
aad
popf
or
adc
add
lret
lock
pop
adc
js
aas
mov
and
or
mov
or
fwait
aam
inc
cmp
outsb
adcb
jae,pt
cmpsl
aas
int3
jge
xor
push
dec
mov
mov
js
mov
sti
mov
add
mov
xchg
ffree
inc
push
mov
mov
pop
loopne
ret
inc
clc
and
xchg
bound
int
jno
lahf
sbb
push
cmp
mov
popa
loope
pop
std
xor
mov
push
jecxz
bound
out
mov
lea
adc
xor
lds
pop
jno
cltd
xchg
xor
add
pop
dec
ljmp
push
mov
mov
fimull
out
sti
or
or
outsl
in
or
test
mov
movsl
and
fisubrl
jle
add
mov
test
ds
adc
cs
adc
pop
lods
cmp
loop
enter
cmp
out
mov
sbb
lahf
sbb
dec
test
jno
xor
xor
out
scas
lahf
gs
rcl
add
shl
dec
pop
sbb
sub
aaa
int
frstor
cmp
dec
pop
out
push
push
fsts
mov
push
and
adc
jecxz
js
aad
lods
int
sahf
lock
fistpll
mov
xor
stos
repnz
mov
ja
ret
pop
mov
pop
fadds
inc
pop
inc
and
xchg
cmp
imul
pop
mov
lret
data16
mov
cltd
out
fldenv
fcompl
jle
dec
or
cmp
and
mov
push
mov
stos
nop
dec
jge
movsl
jb
dec
push
cmp
cmp
adcl
mov
cwtl
insb
pushf
ja
mov
fistpll
mov
cmp
daa
xchg
xor
jae
xchg
cli
xchg
push
jbe
leave
rcll
insl
cwtl
mov
add
inc
movsb
lds
jmp
in
sbb
scas
fisubs
lods
stc
sub
mov
cmp
xchg
mov
scas
xchg
test
pop
mov
xor
add
xchg
in
dec
shrl
xor
xor
fwait
sbb
add
add
pop
jnp
test
push
in
call
xor
out
dec
clc
leave
push
aam
push
divb
lea
jle
pop
rol
adc
in
sti
inc
cmp
rcr
dec
nop
push
mov
dec
push
lcall
pop
divl
sbb
push
loop
int3
adc
inc
loop
pop
imull
mov
lret
pop
in
push
sub
pop
leave
sbb
mov
lock
xor
pop
inc
stc
mov
in
mov
fimuls
lret
xchg
or
or
repz
fisttpll
cmp
sub
ja
adc
lcall
ja
mov
xchg
push
lods
mov
stos
mov
fs
jmp
push
outsl
lds
in
sbb
shrl
outsl
daa
pushf
cmp
add
xchg
imul
out
mov
or
lods
ret
fcoms
xchg
cmp
or
outsb
mov
xchg
fdivrl
mov
pop
push
xchg
pop
xchg
stos
pop
pusha
fucomip
push
stos
xchg
faddl
xchg
dec
in
mov
pop
cli
icebp
sub
xlat
popf
mov
lcall
push
shrl
add
mov
pop
sbb
add
push
push
jp
xor
sub
aam
xor
js
xor
outsl
push
jae
and
mov
push
mov
push
adc
enter
les
mov
jp
lret
lcall
mov
adc
xchg
out
pop
xchg
icebp
iret
or
pop
imul
xchg
call
aas
mov
mov
push
stos
xor
nop
dec
jmp
cmp
dec
xchg
in
jbe
mov
push
addr16
push
arpl
pop
dec
dec
jnp
arpl
loope
push
aad
imull
js
int
and
sub
pop
aam
add
push
lock
xchg
and
sub
std
adc
fs
xchg
inc
ds
fstl
jne
or
mov
fcmovnb
adc
push
lret
mov
mov
or
idivb
xor
jns
std
cmp
push
push
je
mov
adc
pop
cld
jecxz
mov
movsl
mov
pop
inc
gs
and
pop
pop
push
cltd
lcallw
xchg
nop
adc
int
mull
iret
outsl
int3
add
push
inc
sub
inc
stc
mov
data16
cs
adc
adc
dec
test
mov
enter
popf
or
scas
mov
cmp
out
clc
std
movsl
push
out
pop
sub
adc
arpl
movsl
outsb
xor
or
inc
fsubl
hlt
leave
pushf
dec
add
or
xchg
fldl
sbb
sbb
icebp
imul
mov
leave
iret
pop
xchg
call
adc
lahf
jp
jb
pop
cmp
repz
xchg
jmp
adc
cmp
xlat
xcrypt-ecb
cmpsl
iret
loop
cli
add
cld
cmp
mov
mov
xlat
shlb
xor
aas
mov
adc
inc
in
stos
repnz
mov
out
int3
and
inc
fcoml
sbb
bound
dec
fisubrs
js
lcall
fiadds
xchg
fisubrl
jp
sbb
or
cmp
cmp
mov
mov
aaa
inc
push
fcoml
xchg
mov
xor
in
cltd
xchg
out
inc
mov
adc
jle
fwait
and
das
cmp
pop
dec
das
fsubs
xchg
dec
cmp
dec
xchg
adc
in
movsb
call
pop
out
jns
aad
add
repnz
pop
mov
sub
and
mov
icebp
in
pop
adc
pusha
loope
jns
loopne
cmp
es
xchg
je
sahf
insb
and
mov
and
xchg
repz
dec
xor
dec
jmp
orb
in
xor
mov
sbb
mov
inc
inc
mov
outsl
cwtl
clc
in
addb
jo
je
mov
ret
fstpl
cmp
fcmovnu
adc
push
jo
xchg
test
hlt
push
mov
jnp
cmp
fnstsw
fcmove
stos
adc
shl
pop
or
out
addb
roll
lods
mov
jle
and
mov
xor
stc
mov
cmpl
sub
mov
test
cmp
add
shl
je
push
int
xor
popf
dec
ja
pop
sti
in
xchg
fwait
xchg
pop
xchg
shl
js
dec
dec
xchg
xchg
jo
pop
divb
pop
imul
adc
roll
inc
int
mov
loope
sub
jmp
pushf
jecxz
inc
icebp
push
cwtl
mov
mov
pop
xchg
rcr
scas
ljmp
sub
sub
inc
out
les
xor
out
sbb
pushf
jo
jnp
sub
adcb
cmp
adc
lahf
sti
xchg
jg
sub
push
sbb
xor
aas
lods
mov
push
addr16
or
push
arpl
mov
jg
and
ja
bound
loop
pop
xor
sar
cmp
aaa
jnp
mov
stos
in
pop
sub
sti
pop
jp
sbb
cmp
pop
testb
push
jmp
scas
sti
add
mov
inc
fwait
jge
xlat
test
sub
mov
lahf
jo
xchg
pop
lea
dec
hlt
scas
jecxz
scas
fwait
cmp
ss
ss
call
jg
mov
dec
stos
movsb
shll
inc
pop
fcmovnb
popf
cmp
fists
shl
mov
dec
xor
mov
lds
cmpsl
push
jle
icebp
and
outsl
ret
loope
mov
fbld
js
jg
ss
lods
ljmp
or
mov
push
mov
cmp
and
or
xchg
addr16
rcll
pushl
pop
ss
xor
inc
lds
and
scas
in
cs
inc
xchg
call
andl
inc
test
lods
insl
or
xlat
sub
lahf
lock
xchg
pop
cli
inc
data16
scas
mov
and
add
into
adc
in
add
int
pop
sti
sti
sub
mov
adc
cmp
movsl
scas
in
mov
jbe
icebp
pop
outsb
pop
sbbl
mov
pop
dec
repz
mov
mov
cmpl
stos
adc
cld
gs
or
out
jbe
mov
mov
andb
sti
add
cmp
js
test
cmc
sub
add
je
cmp
mov
mov
sub
cwtl
aaa
push
aaa
jl
xchg
cmp
out
inc
orl
add
sub
outsb
cmpsb
int3
dec
push
dec
test
rcll
mov
js
arpl
lock
pop
pop
jecxz
mov
sti
in
jmp
pop
addr16
dec
sbb
xor
xlat
in
out
loop
fcmove
mov
ja
jg
jmp
and
repz
fmuls
shlb
push
in
sbb
cmp
sbb
shll
je
fnstcw
aaa
push
das
jae
mov
sub
push
adc
or
add
fisttps
es
out
flds
push
xlat
ror
mov
das
repz
jae
push
mov
cmpsl
mov
je
cmp
mov
dec
addr16
hlt
adc
sub
enter
pop
cld
adc
dec
das
cmp
push
mov
mov
sbb
sbb
inc
jae
iret
scas
mov
inc
mov
jbe
bound
cmpsl
fs
jle
sub
orl
mov
ret
jno
pop
pop
lock
pop
jp
jo
add
es
repz
fstpl
repnz
je
addr16
sahf
in
cmpsb
xlat
cmp
push
inc
cld
cmp
sarb
mov
jle
fdiv
pop
and
jo
outsb
lretw
in
loop
rolb
jo,pn
stos
loopne
xchg
repz
sbb
fucomip
in
ja
jg
dec
pop
cmp
sbb
movsl
js
in
xor
fisubl
inc
dec
aam
aad
lods
cmpsb
jnp
dec
aam
or
lods
adc
mov
mov
mov
nop
cmp
bound
xchg
and
sahf
cmp
xlat
adc
pop
add
rclb
shrb
rolb
push
xlat
fsubs
sub
cmp
jg
sub
mov
hlt
imul
cltd
jmp
repz
mov
push
sub
and
or
dec
in
out
mov
stc
call
sub
mov
pushf
aas
mov
mov
xor
sub
lcall
cmpsl
and
sub
adc
loopne
push
cmp
iret
jg
xchg
mov
ret
mov
and
sbb
mov
dec
mov
xchg
mov
loope
decb
stc
ljmp
push
and
nop
push
fnsaves
adcl
into
cmpsl
mov
call
fdivp
icebp
notl
addb
mov
mov
aam
shl
or
daa
pop
fimull
ja
scas
mov
decl
xchg
cmp
fucomip
or
mov
mov
hlt
push
or
pop
dec
push
ret
push
adc
dec
jle
jle
push
push
rorb
call
jb
mov
sbb
pusha
js
cmp
enter
scas
notb
fdiv
int3
outsb
jp
add
mov
in
add
mov
test
stos
add
aam
daa
inc
repnz
and
pop
rcrb
popa
mov
pop
xorl
call
mov
pusha
and
icebp
adcb
push
sbb
push
mov
ret
lahf
enter
pop
pusha
cli
xor
call
lret
repz
inc
lea
jle
xor
add
xor
ja
inc
push
repz
cltd
cwtl
xchg
push
and
data16
aas
dec
dec
cmpsl
inc
adc
push
gs
inc
adc
fidivl
lea
lds
add
cltd
das
test
mov
xchg
push
cwtl
add
and
ret
mov
fbld
pop
jo
and
pushf
jg
and
pusha
rolb
pusha
ret
inc
shll
repnz
enter
das
mov
mulb
fsubrl
xor
out
in
lods
mov
add
pop
pop
sub
pop
addr16
imul
repnz
xchg
clc
ficompl
sbb
lods
mov
mov
outsb
xor
negb
nop
outsb
sti
or
mov
pop
shll
or
ja
scas
and
cwtl
inc
sub
mov
nop
mov
subl
inc
dec
mov
adc
jae
pop
mov
push
push
test
les
insl
sbb
fisubrs
imul
aaa
pusha
push
xor
leave
daa
add
mov
sbb
fists
out
xor
sbb
fisubl
add
stc
adc
mov
mov
or
cmp
mov
xor
cmpsb
sub
leave
sti
movsb
dec
cmp
adc
or
inc
cltd
xlat
insl
sti
sti
cmpsb
pop
or
mov
xor
imul
bound
xor
push
popf
push
push
gs
stos
pushf
sti
fidivl
or
mov
inc
dec
test
add
push
sbb
popf
mov
mov
jg
pop
movsl
dec
pop
mov
mov
xchg
in
jge
sbb
icebp
pop
mov
pop
imul
call
loop
fstps
mov
idivl
lock
dec
sbb
cmp
es
or
mov
fdivl
and
pop
or
pop
mov
test
pushf
or
pop
sub
outsl
cltd
cmp
js
int
dec
push
fdiv
pop
lods
jecxz
add
repnz
push
xor
sbb
cmc
xlat
loop
cmpsl
push
mov
mov
stos
add
mov
in
cli
ljmp
leave
cs
or
lcall
icebp
add
clc
int3
inc
dec
scas
and
pop
fstpl
sub
loop
fnstsw
sbb
jmp
sti
hlt
ja
mov
imul
or
inc
scas
in
cmp
inc
and
jno
addr16
add
mov
lahf
cmp
dec
jmp
insl
push
cli
imulb
addr16
inc
push
mov
sahf
jae
xchg
sbb
cmp
sbb
pop
ret
roll
pop
dec
jl
aam
pop
iret
ret
pop
cmp
jge
aam
sti
js
xchg
sbb
pop
xchg
dec
faddp
or
test
aad
lds
scas
rcrb
and
sub
mov
xchg
add
mov
call
mov
cmpsl
out
fstpt
sbb
std
sbb
jmp
hlt
imul
add
add
and
adc
into
sbb
call
xchg
dec
lock
dec
pop
inc
dec
and
sbb
pop
inc
push
rol
stos
js
loopne
ret
cs
xor
in
jb
iret
jmp
pop
dec
mov
out
inc
cmpsl
sbb
pop
and
insl
sbb
mov
mov
xchg
les
lods
push
insb
xchg
nopl
sub
mov
stos
repnz
imul
lret
dec
push
cmp
fldcw
add
out
adc
xchg
push
fwait
push
jno
fstl
test
xor
adc
ror
add
add
aad
adc
rolb
adc
insb
lds
stc
cmpsl
add
jmp
or
push
mov
push
adc
sub
xor
and
repnz
inc
aas
or
fnstcw
adc
stos
sub
js
in
mov
data16
outsl
inc
addb
jno
shll
xor
or
aam
jmp
push
outsl
nop
orb
jmpw
add
mov
call
mov
xchg
push
mov
dec
and
push
mov
add
adc
cltd
dec
iret
cmpsl
push
shlb
sbb
xchg
rclb
pop
mov
push
fs
lods
mov
fiaddl
mov
ja
popf
test
mov
ljmp
mov
dec
push
sbb
push
push
lock
cmp
push
jmp
mov
cs
xchg
outsb
xchg
lea
loope
push
call
xor
cmp
mov
add
mov
cld
add
adc
scas
push
mov
and
mov
push
daa
jg
data16
or
cltd
or
push
jae
sarl
stc
ret
or
das
lea
popf
mov
js
push
inc
mov
pop
fsubr
jge
pusha
adc
sub
daa
pop
push
gs
ljmp
rol
sar
fnstenv
cmc
cmp
xchg
inc
add
xchg
leave
inc
sbb
subb
xor
mov
xchg
mov
xchg
xlat
ljmp
es
out
bound
stos
push
cld
xchg
in
mov
popf
xor
in
movsl
out
cwtl
test
sti
lcall
js
insb
ljmp
rol
js
pop
clc
sub
movb
pop
scas
xor
and
dec
fcompl
fisttps
insb
pop
lds
call
cld
fnstsw
jge
sub
adc
xchg
addr16
ret
dec
cmpsb
icebp
and
cmpsl
test
nop
and
in
push
jle
cmc
jo
mov
xchg
or
daa
jne
ror
ret
pop
popa
fildll
loop
mov
pop
std
popf
cmp
mov
fidivrl
sub
rol
in
jmp
push
icebp
jne
pmovmskb
cmc
cs
stos
fsubp
sbb
lock
out
test
les
jnp
sbb
jge
pop
fstps
hlt
fstps
int3
cmp
and
fidivrl
iret
rorl
clc
stc
ficoms
dec
shr
mov
sub
mov
imul
and
sub
jb
lret
aas
bound
repnz
push
fsubl
mov
pusha
or
cmp
int
ret
adc
in
mov
outsb
xchg
je
jne
mov
stos
mov
mov
inc
sbb
mov
jne
popa
lahf
lods
arpl
loop
out
mov
mov
and
or
push
sbb
cmpsl
test
out
push
lods
fwait
adc
movsl
ret
xchg
xchg
scas
ret
jl
or
incl
cmc
ret
jae
inc
cmpsl
shl
cs
adc
and
dec
pop
jmp
data16
xchg
xchg
nop
xchg
dec
mov
xchg
shr
loope
push
repnz
xor
mov
sbb
mov
mov
fstps
or
dec
insb
arpl
mov
flds
outsl
push
xchg
jle
push
or
or
pushf
repnz
jb
push
es
fdivl
sarl
jne
loope
jmp
icebp
cwtl
push
or
sub
adc
cltd
push
cmp
jbe
gs
mov
std
cmc
in
push
in
jne
gs
add
adcb
js
icebp
jae
subl
sbb
adc
mov
fcmovu
inc
repnz
pcmpgtw
ret
rcl
dec
xchg
add
leave
mov
fwait
adcb
cs
lea
loope
jge
lea
adc
lds
and
cmp
push
test
sub
mov
ja
pusha
xchg
fiaddl
adc
mov
andb
popa
test
mov
cwtl
adc
push
popf
es
xchg
mov
inc
jecxz
std
or
pusha
int3
cltd
and
xor
inc
test
outsb
sub
sub
lock
xchg
mov
out
add
pop
cmc
mov
lcall
xor
int
xchg
lret
dec
and
fimull
stc
pop
lret
test
fdivrl
lods
int3
addl
adc
imul
stos
andb
or
into
fdivrl
lock
jmp
outsb
mov
jp
sub
aad
scas
cmp
lock
call
jae
inc
int
addb
loopne
arpl
cmp
out
add
stc
shr
pop
adc
enter
kmovw
fld1
loope
mov
sub
ds
cwtl
imul
adc
add
xchg
pusha
cltd
push
mov
aad
rorb
sahf
std
mov
adc
jb
aaa
lods
xchg
sbb
push
pop
bound
out
jbe
pop
lods
or
nop
or
clc
pop
lods
lret
sub
add
scas
shll
push
test
orl
xlat
jnp
fsubrl
and
cmp
aad
mov
sbb
movsb
pop
out
pop
cmp
ret
xorb
loopne
add
enter
call
adc
cmp
adc
xor
cmp
cmp
push
sbb
sub
mov
in
out
sbb
sti
test
movnti
sub
in
mov
mov
and
mov
cmpsb
add
scas
fldcw
and
jb
mov
cmp
adc
and
ret
pop
pop
xor
sti
jae
movsl
test
sub
orb
mov
bound
pop
or
cmp
cmc
loope
cmp
or
or
aaa
das
fwait
dec
rclb
cmp
rcll
sti
xchg
mov
ds
fs
cltd
mov
cmp
fcmovnbe
call
aam
std
je
ljmp
dec
pushf
mov
jb
jle
fs
aas
or
roll
fmull
movsl
mov
pusha
pop
jmp
sub
aas
pop
lret
mov
dec
jno
movb
mov
pop
cli
addl
jae
mov
dec
out
icebp
nop
jle
sbb
clc
adc
push
or
xchg
imul
je
or
ss
and
ficoml
in
jecxz
push
inc
mov
push
je
xor
icebp
jmp
mov
insb
sub
cld
movsl
and
inc
sbb
xor
cmpb
or
mov
add
jns
sbbb
mov
fs
arpl
add
cmp
mov
loop
sub
sub
decl
std
push
mov
andb
call
lret
cltd
and
inc
cli
test
jecxz
mov
dec
out
pop
sub
dec
out
inc
mov
lea
and
mov
cmp
test
push
rclb
adc
mov
xchg
out
xor
sbb
mov
gs
testb
push
xor
mov
mov
popf
mov
push
pop
mov
mov
insl
shl
add
mov
lret
cmp
push
xchg
loop
push
outsb
or
fwait
call
mov
xchg
pop
mov
mov
pop
cld
adc
mov
leave
mov
xchg
shrl
inc
or
push
out
lret
mov
add
sub
das
xchg
aas
ljmp
adc
insb
fimull
cli
inc
or
push
push
sbb
cld
push
cmp
jle
popf
mov
mov
jne
and
imul
decl
inc
in
shl
sti
jmp
push
std
enter
out
in
jle
repz
bound
xchg
js
neg
or
xchg
add
mov
ret
pop
pop
mov
mov
icebp
add
and
adc
jl
shr
pop
add
cmp
push
inc
adc
adc
repz
shlb
or
lock
lcall
out
pusha
dec
dec
xor
xchg
push
mov
jne
lret
cmp
and
jb
fs
jp
pop
mov
xchg
fldt
xchg
lea
mov
repz
in
cltd
pusha
insb
je
and
cmpsb
pop
push
insl
loope
adc
sub
movsb
ficoms
add
mov
cld
inc
das
pop
mov
xchg
lds
loope
push
push
mov
js
jg
cwtl
shll
sbb
loope
adc
pusha
mov
jbe
pop
and
sub
adc
mov
sub
sbb
push
inc
push
rolb
mov
xchg
jmp
repnz
push
dec
hlt
fstpt
idiv
inc
push
aad
cmp
xor
push
inc
mov
outsb
xchg
fwait
inc
rorl
adc
js
sbb
adc
fisubs
mov
sub
orl
inc
test
movsb
imul
cmpsb
mov
movsl
je
pop
jle
clc
repnz
add
repz
jno
xchg
push
push
jl
jo
xor
cmp
nop
fdivrl
loop
in
jg
jge
cmovg
inc
inc
sub
enter
fs
clc
int3
sbbb
mov
dec
les
shrb
mov
mov
fcompl
scas
addr16
xor
jo
sbb
inc
mov
sub
xchg
ret
addb
outsl
and
dec
andb
inc
fidivl
pushf
gs
aad
jecxz
mov
sub
sbb
adc
mov
fs
pushf
push
das
lock
shll
jae
add
jg
xor
sub
movsl
ss
inc
jns
js
aas
add
push
lds
insl
xchg
sbb
leave
and
add
push
jae
mov
rcl
insl
mov
icebp
inc
sbb
ljmp
sbb
mov
xchg
fsubrl
cmp
mov
mov
pop
pop
iret
out
std
lahf
out
es
inc
imul
add
out
push
jp
enter
shrl
mov
mov
xor
subb
aaa
adc
push
mov
dec
ljmp
insb
int3
lea
inc
jge
pusha
leave
jne
xchg
mov
adc
jmp
push
fstl
add
push
cmp
call
xchg
jnp
outsl
add
out
pop
sub
push
mov
adcl
fistl
mov
sub
out
mov
jle
jg
and
push
test
xchg
push
jecxz
daa
clc
mov
xor
std
sarb
sar
hlt
out
xor
lret
popf
mov
pop
bound
and
insl
movsb
jmp
pop
jbe
pop
popa
stos
mov
and
sbb
sti
mov
cmp
aad
and
cmp
and
xor
sbb
stc
leave
dec
fists
xchg
mov
jmp
sub
test
and
sarb
dec
mov
clc
sub
inc
jno
in
aam
das
sub
je
push
outsl
nop
mov
out
sbb
xchg
xchg
movsl
add
call
lock
dec
movsb
paddsw
shlb
jns
ds
or
in
jmp
sub
pop
pop
and
pop
stc
dec
jge
sub
shll
push
sbb
push
mov
outsl
popf
mov
cmp
popf
test
sti
js
les
int
pop
popa
clc
add
pop
pop
testb
popa
push
lods
or
mov
rcrb
or
addb
out
sub
sbb
stos
cmc
int
mov
outsl
out
lea
xchg
cmp
jbe
and
push
xor
call
sub
es
clc
aam
das
inc
xchg
insb
imul
dec
dec
mov
addb
addr16
lcall
jl
test
mov
cltd
dec
subb
xor
sbb
cli
negb
ret
adc
fistps
mov
dec
jp
scas
xor
xor
mov
mov
pop
xchg
ds
sbb
push
adc
push
inc
out
xchg
inc
shlb
xchg
push
sbb
xchg
fistps
mov
inc
adc
iret
xor
push
stc
int
mov
cmp
mov
pop
cltd
mov
loope
xchg
xchg
xchg
icebp
jmp
push
inc
fidivs
pop
inc
sub
push
insb
push
cld
or
pop
lods
jno
ret
adc
xchg
lret
stos
addr16
cmpl
data16
mov
dec
mov
mov
push
inc
ljmp
clc
xor
aad
test
sbb
cmp
in
fimull
inc
add
mov
cmp
das
mov
or
and
mov
leave
stc
add
sbb
xchg
mov
jns
fadds
and
ja
les
xchg
shl
aas
aad
test
lods
pushf
add
pop
add
dec
dec
add
cmp
int
das
int3
ds
and
stos
cwtl
xor
mov
loop
pop
xor
mov
aad
in
mov
pop
pop
jle
popf
pop
mov
jp
mov
lea
aam
pop
jb
mov
push
xchg
xchg
into
mov
mov
shlb
jg
jo
out
out
mov
scas
sbb
hlt
cmc
add
cmp
out
les
and
xor
test
jle
inc
add
cli
inc
xor
ret
faddl
aaa
dec
jge
push
ret
cmp
lds
mov
dec
jb
repnz
adc
xorb
mov
mov
stos
lock
ss
or
orb
xchg
fcomps
movsl
push
fldt
hlt
test
in
mov
xor
or
fnsave
mov
pop
pop
or
js
xor
sub
scas
into
in
mov
js
gs
cmp
dec
or
jns
mov
movsl
mov
xlat
das
jmp
cmp
mov
aaa
mov
outsb
add
xchg
add
xchg
rclb
fistl
inc
mov
ja
inc
cmp
add
sahf
mov
push
sahf
dec
fidivl
lret
lods
xchg
mov
es
mov
test
jo
loop
xor
sub
xchg
xchg
mov
out
sbb
dec
and
ret
das
fbstp
jp
mov
lea
push
sbb
and
daa
test
daa
inc
cltd
bnd
int3
or
notl
outsl
jns
in
inc
andb
and
fs
cwtl
mov
pop
cmp
push
lock
adcl
mov
sub
xchg
xchg
push
call
mov
push
aas
in
roll
cmp
js
mov
imul
mov
push
mov
bound
test
stos
imul
push
xor
mov
sbb
jno
mov
das
sub
mov
lds
sbb
push
mov
mov
fnstenv
lock
add
jl
mov
sbb
in
js
ja
mov
insb
in
jbe
jp
pop
mov
and
cmp
push
cmpsl
xchg
shr
into
ds
iret
jbe
test
pop
and
lods
mov
push
lret
lds
xchg
jnp
mov
inc
push
jb
gs
ficoml
popl
inc
xor
lea
xchg
test
jg
inc
mov
fs
gs
inc
pop
adc
test
popa
loop
push
add
xchg
sbb
and
inc
nop
aas
inc
or
movsb
lret
jmp
and
insb
push
into
and
movsl
and
pop
xchg
push
cwtl
and
adc
ds
sbb
xor
fidivrs
les
out
xchg
jno
or
stc
testl
loop
jmp
xor
sbb
xchg
cmp
sarb
outsb
pop
inc
lahf
jbe
out
fs
sar
jnp
cmp
mov
push
pop
dec
xor
cli
dec
movsl
je
cmp
out
setbe
mov
jno
mov
pop
fcomps
sti
sub
mov
adc
lods
adc
adc
push
aaa
pop
lods
dec
cld
insl
icebp
or
mov
xchg
dec
xlat
xor
pop
in
into
je
imul
jp
stos
imul
cmp
fcoml
iret
movsl
pop
push
subl
inc
popf
or
jo
faddl
dec
xchg
out
insl
xor
repnz
aas
inc
xchg
cmp
cmp
pop
stos
sbb
adc
in
rcll
jns
rcr
inc
stos
push
outsl
ret
repnz
or
stos
imulb
fscale
dec
outsb
or
dec
dec
test
lret
jne
mov
inc
test
lds
cwtl
dec
or
cli
push
aaa
lcall
xor
pmuludq
pop
pushf
insb
clc
cltd
popa
mov
pop
cs
xchg
or
cmpsl
in
pop
cli
cmp
es
les
and
pop
mov
mov
fcoms
fnstsw
lock
std
pop
pop
vpmacsww
jg
xlat
sub
hlt
aaa
mov
addl
fnsave
cmp
push
into
xchg
roll
sarl
xchg
xchg
andb
lahf
xchg
jl
xchg
inc
movsl
lret
pushf
cli
cmpsl
mov
and
xchg
push
and
or
es
mov
outsl
mov
loope
pop
mov
add
and
push
loopne
clc
xchg
dec
das
fsubs
or
sbb
adc
sub
pop
sub
mov
mov
mul
addl
sbb
and
jo
pop
dec
scas
mov
leave
addr16
dec
es
test
lcall
je
clc
cmp
test
mov
mov
outsb
dec
jecxz
out
add
pop
mov
dec
push
fistpll
aas
sub
enter
icebp
fisubrs
sbb
inc
sub
dec
jns
adc
cmp
insb
pop
and
xor
test
sub
jp
mov
mov
ss
stos
xor
add
mov
jae
inc
call
xchg
mov
sub
cmp
mov
inc
leave
pop
mov
xor
dec
inc
ljmp
das
cmp
push
jp
scas
out
ss
jnp
in
jg
lcall
jae
lret
aas
mov
xchg
adc
jmp
push
sub
sti
add
stos
fwait
xchg
adc
sbb
inc
aas
repz
push
hlt
test
mov
gs
jge
js
loopne
aaa
mov
jle
sbb
add
mov
pop
xor
inc
adc
pop
ret
int3
outsl
mov
adc
repz
pop
inc
insb
sbb
pusha
sti
mov
popa
xchg
ret
dec
adcb
mov
mov
xchg
jmp
sub
clc
pop
rclb
lahf
jecxz
push
or
and
or
xchg
mov
inc
xor
out
call
dec
inc
sub
daa
jle
add
add
outsb
xchg
insb
and
insl
xchg
cs
ret
push
stos
lahf
jbe
int3
mov
enter
out
mov
mov
shrl
cmc
or
scas
pop
call
sub
mov
lock
pop
mov
xchg
mov
xchg
std
shrb
pop
std
push
rclb
cli
sbb
sahf
addr16
movsb
mov
jne
hlt
mov
pop
sub
out
outsl
ficoml
and
adcb
cmp
xchg
mov
mov
push
push
and
xor
dec
sub
dec
xor
fidivs
bnd
jg
mov
js
xchg
pop
clc
add
bound
jnp
add
xor
popf
lcall
mov
mov
mov
inc
mov
jle
xchg
push
loopne
add
xchg
push
sbb
out
ret
mov
out
inc
inc
pop
mov
cltd
daa
sbb
ret
les
out
mov
out
lret
jp
lea
inc
imul
frstor
mov
lods
imul
and
dec
xor
pop
fimuls
sbb
les
xor
in
shrb
mov
mov
jle
into
aad
out
js
sub
mov
or
fisttps
into
push
rcrl
mov
gs
fnsave
mov
pop
dec
sahf
dec
cmp
aam
xor
cmp
mov
and
dec
mov
adc
mov
inc
sub
nop
int3
inc
jo
repnz
add
andl
psraw
loop
repz
movsl
add
aad
jg
movb
push
xchg
js
adc
addb
add
jle
cmp
dec
rorb
mov
stos
mov
lret
or
andb
popl
cmp
repz
or
inc
clc
mov
shufps
pop
shl
xchg
jle
into
ja
or
fstl
adcb
mov
movl
lahf
mov
repnz
ret
xchg
and
lret
xchg
dec
mov
cltd
fldcw
aam
or
stos
jg
xchg
pushf
pushf
mov
fildl
add
push
scas
jmp
daa
dec
lret
scas
adc
inc
cmp
std
dec
and
xor
adc
cli
jnp
shl
repnz
fadds
xchg
sbb
shlb
jb
fwait
int
imul
fdivl
iret
cmc
test
jge
mov
jecxz
mov
imul
sarb
jnp
mov
xor
not
leave
ss
decl
sar
cmc
icebp
and
lret
mov
sub
xlat
inc
lret
ljmp
aam
cld
sbbb
sarl
pop
jmp
dec
call
ret
sahf
ret
mov
out
xchg
or
gs
cbtw
shl
or
sub
data16
cmc
xor
inc
mov
pop
into
push
imul
mov
out
sbb
sarl
aas
ret
push
adc
icebp
dec
xlat
mov
dec
adc
mov
push
pop
les
mov
dec
jmp
das
or
lods
fmuls
and
std
and
mov
repz
inc
stc
xchg
sub
xor
mov
pop
and
push
sarl
repz
in
insb
adc
mov
sub
add
adc
inc
add
sbb
jg
push
mov
bnd
adc
outsb
xchg
pop
pop
lods
cli
in
notb
divb
in
adc
mov
popa
and
js
shl
in
pop
cmp
push
adc
ret
inc
cmp
sbb
inc
stos
mov
xchg
test
movsb
sbb
mov
pusha
jge
xor
fcompl
shlb
int
int
ret
xor
push
mov
xor
xor
std
stos
in
nop
sub
andl
mov
pop
adc
jo
sub
pop
outsl
ja
inc
jge
sbb
hlt
jge
mov
ret
scas
cmp
push
mov
repnz
push
xor
sub
std
jmp
ss
sbb
pop
rcll
xor
mov
mov
adc
cmc
pusha
lahf
in
adc
adc
clc
adc
adc
push
add
es
push
aam
push
cli
test
sub
pop
std
jecxz
adc
fdivrp
in
out
and
mov
mov
jb
fidivl
mov
shlb
sbbb
cmp
ja
add
jp
and
fisttps
ds
cmp
inc
lock
cmp
data16
add
mov
mov
jl
out
inc
lret
or
pushf
test
adc
adc
and
xlat
filds
mov
or
fimull
and
dec
leave
inc
add
pop
in
or
mov
dec
push
xchg
jmp
mov
cmp
or
mov
pop
mov
jecxz
inc
inc
fcomi
fs
mov
test
dec
or
insl
pop
push
push
pop
xor
js
call
repnz
cmc
enter
jne
out
xchg
lcall
cmp
pop
dec
jbe
mov
mov
lret
xchg
lods
insb
sbb
movsl
mov
mov
sbb
add
cmpsb
and
inc
addr16
js
sarl
test
icebp
lahf
push
add
popf
orl
or
sub
mov
inc
or
dec
rcr
mov
inc
mov
or
sub
xlat
in
or
jle
rcrb
xchg
mov
mov
cmp
data16
xchg
shr
mov
daa
es
lcall
gs
push
jge
mov
es
sahf
cmpl
inc
push
gs
cwtl
das
std
mov
ja
add
call
sbb
xlat
sub
es
xor
lds
xchg
mov
inc
in
dec
or
sbb
pop
fwait
js
adc
stc
repnz
mov
roll
stc
xchg
cmp
mov
jae
fdivp
or
sti
mov
pause
push
lret
pop
mov
xor
mov
jo
jno
lcall
xor
dec
test
ror
or
mov
mov
int3
mov
inc
enter
or
mov
add
loop
pop
pop
cmp
test
push
xor
adc
jb
add
add
movsl
push
rclb
sub
nop
cmc
aaa
or
add
jo
mov
xor
stos
jo
pop
xor
mov
shlb
ss
add
lods
out
xor
push
jmp
hlt
mov
cmpsl
adc
fisubrs
fildl
icebp
push
push
mov
xor
stos
std
popa
stos
sarb
xchg
mov
lods
ret
ret
xor
pop
jmp
sbb
icebp
je
andb
jl
dec
mov
mov
lock
sbb
mov
outsl
add
test
movl
call
cmp
in
sbb
mov
cmpsl
repz
cld
xchg
jl
mov
push
test
xor
sub
pop
insl
negl
push
lret
sbb
cmp
add
mov
dec
icebp
inc
stos
je
mov
xchg
push
loopne
add
fnsave
ret
out
js
ljmp
jns
imul
out
das
and
mov
fstps
mov
scas
jb
push
sti
shlb
dec
aaa
push
cwtl
jp
cmpsb
or
xchg
pop
add
fldl
enter
data16
inc
dec
push
aam
adc
xor
insl
sub
and
cmp
sub
int
out
flds
arpl
pop
and
xchg
push
in
mov
outsb
pop
push
push
inc
dec
das
adc
fldt
jl
clc
push
pop
mov
fiadds
mov
addr16
or
cmpsb
jmp
daa
fiaddl
push
or
mov
adc
bound
hlt
mov
push
hlt
cmpsb
xchg
test
or
scas
std
cs
inc
and
mov
movsl
mov
mov
sarl
add
je
cli
cmp
cwtl
pop
addr16
adc
push
adc
aaa
jno
mull
loopne
mov
mov
into
jg
jae
dec
mov
mov
pop
or
cltd
sar
icebp
pusha
xchg
scas
add
xlat
movsb
mov
inc
cmc
jle
repz
sub
cmp
jns
jmp
xchg
jo
cmp
jae
int3
clc
js
pop
test
mov
cmpsb
fimull
or
out
movsl
sub
inc
sub
fiaddl
xor
xchg
cwtl
ljmp
sahf
ljmp
fisubrl
mov
push
in
or
out
mov
sbb
and
out
jecxz
aad
mov
shll
push
in
arpl
mov
sbb
pop
mov
inc
push
and
out
push
dec
dec
int
testl
push
lds
sbb
addr16
pop
stc
int
mov
rolb
movsl
sub
in
sbb
inc
sarb
pop
scas
mov
mov
xchg
or
fildl
sbb
sub
aaa
call
fwait
sub
pop
into
push
pusha
inc
and
popa
fwait
scas
repz
js
xor
in
adc
pop
push
fcoml
leave
xchg
rorl
fnsave
cmp
mov
sbb
repz
sub
in
sbb
jl
ljmp
test
or
mov
enter
sbb
mov
pushf
dec
mov
adc
or
cmp
sub
jae
sarb
push
xchg
bound
mov
and
jl
jge
lret
aas
stc
sarb
subl
inc
out
inc
jo
inc
pusha
dec
pop
repnz
pop
mov
pop
push
cld
add
adc
call
push
in
dec
imul
fs
in
lret
ffreep
loopne
and
pop
push
rclb
pusha
mov
lret
sub
movsl
leave
xchg
dec
dec
mov
sbb
dec
cli
shlb
adc
fwait
xlat
mov
mov
lods
and
daa
lahf
sub
dec
in
or
mov
xlat
dec
push
sub
pop
lret
mov
test
in
loopne
pop
adc
stos
pop
adc
cwtl
push
xor
int
adc
sbb
lcall
mov
sub
dec
pop
jo
stos
xchg
shll
mov
fists
rcll
lds
cld
js
test
mov
mov
push
out
mov
std
ja
out
pop
data16
bnd
sbb
out
sub
fyl2xp1
dec
jo
mov
dec
aad
mov
fmull
out
loop
enter
push
cmp
stc
xor
pop
repnz
add
out
ss
outsl
add
insb
mov
push
push
jbe
mov
mov
inc
sbb
adc
push
mul
and
or
ret
inc
ljmp
in
imul
sbb
insl
fidivl
push
mov
out
aaa
lret
out
scas
cmp
aaa
scas
push
outsl
repnz
mov
cs
mov
std
add
repz
arpl
adc
sub
xchg
adc
out
jl
mov
das
hlt
inc
nop
mov
fdivrs
mov
cltd
cmp
jmp
jae
pop
jmp
inc
adc
dec
inc
jecxz
push
adc
es
fsubl
sbb
sti
out
fwait
aad
cmpsl
imul
add
add
jmp
mov
xchg
jbe
rolb
push
out
dec
or
sbb
add
cmp
inc
std
cmp
out
pushf
insb
das
add
lock
cmc
out
repnz
push
jno
cmpsb
jne
sti
jne
addr16
lods
inc
pop
xchg
xor
inc
mul
in
fwait
andl
rcr
inc
pop
lahf
jno
mov
dec
int
pop
addb
or
lods
add
aas
jbe
mov
dec
push
mov
mov
mov
dec
adc
add
fimuls
enter
adc
leave
ss
sub
divb
arpl
testb
mov
fucomi
or
mov
inc
fstl
out
fstpl
mov
jge
xor
jge
xor
add
fmul
mov
cmp
out
or
mov
xlat
dec
and
fdivl
int3
cld
jns
mov
jecxz
mov
imul
and
loope
repz
xchg
jae
mov
pop
mov
into
ljmp
xchg
xchg
outsl
sti
movsl
mov
pop
push
cmp
xor
mov
dec
and
jae
scas
mov
cmp
inc
insb
adc
into
push
push
mov
decb
imull
int
arpl
mov
ja
xor
and
inc
fs
or
mov
or
adc
push
loope
clc
ja
ds
lds
mov
mov
bound
mov
push
xabort
in
or
mov
mov
mov
jae
or
lret
hlt
add
cmp
dec
scas
sub
outsl
rcrb
dec
outsb
mov
and
mov
xchg
sbb
lds
xchg
sti
sbb
pop
js
xlat
jbe
inc
mov
adc
pop
or
mov
xor
stos
mov
js
mov
mov
sbb
pusha
std
insl
xor
push
je
sti
orb
std
and
sub
shrb
or
iret
cmpsl
push
adc
sbb
pusha
push
jo
je
cwtl
mov
xor
inc
dec
in
shll
sbb
sbb
ret
pop
outsb
dec
fiadds
arpl
xchg
adc
sub
movsb
push
jecxz
xchg
bound
mov
fmull
mov
es
jb
sub
popf
popf
rep
add
add
in
push
mov
lret
mov
push
fildl
shrl
or
or
lret
fisttps
imul
inc
cmp
fldenv
aaa
popf
pop
scas
das
imul
and
add
int3
fs
popf
fwait
jae
ja
test
xor
sti
imul
inc
sbb
jle
mov
adc
and
add
lahf
xchg
mov
adc
imul
imul
inc
mov
add
sub
in
add
or
mov
ret
xchg
mov
subb
sbb
cmp
adcb
xchg
loopne
xchg
jbe
push
cmp
and
jno
fucompp
sbb
xchg
js
xchg
or
repnz
pop
jecxz
shrb
pushf
ljmp
shlb
push
loope
lcall
adcb
jmp
es
pop
and
pop
adc
inc
insb
sub
in
lea
pushl
or
dec
mov
mov
sub
aaa
and
loope
inc
cmpsb
ljmp
sub
push
cwtl
or
pop
jmp
faddl
inc
lcall
outsb
inc
pop
in
std
cs
stos
push
mov
mov
aaa
pop
or
repnz
rorb
mov
adc
movsb
adc
inc
adc
mov
outsl
pop
xchg
lds
cmp
test
pop
pop
cmp
adc
imul
enter
sub
cmc
adc
es
pop
aaa
test
or
hlt
aas
jle
sarb
push
imul
mov
add
mov
das
in
sub
add
jp
jo
adc
enter
push
ss
xchg
aas
pop
stc
pop
mov
pop
insl
scas
fucomip
xor
sub
in
adc
sbb
ret
out
add
cli
inc
fsubs
sbb
leave
lds
xor
testb
loopne
sbb
ret
test
jp
adc
jg
out
cmp
stc
divb
test
add
push
xor
pop
lods
ss
cli
mov
lock
loopne
fiadds
cmpsl
and
jl
add
pop
jle
test
stos
add
jae
daa
jbe
lods
xchg
push
xchg
sbb
cs
xchg
mov
sub
clc
inc
or
lret
or
xchg
fisubrl
ljmp
xchg
lret
xchg
add
mov
arpl
outsb
cmp
mov
gs
hlt
subb
aad
lret
aas
leave
dec
ror
imull
push
stos
jmp
pop
cmp
push
ret
ja
sub
pop
push
adc
and
ja
sub
inc
fcmovne
cmp
fcoms
xor
inc
ds
mov
lret
adc
pop
dec
mov
push
pop
lods
xchg
in
jns
leave
jne
xchg
mov
sbb
dec
js
mov
aaa
aam
cmp
and
and
add
jle
pop
aas
and
cmovs
testl
push
add
test
xchg
jmp
xor
popf
xlat
mov
push
sbb
mov
pop
push
mov
xor
incl
and
pop
nop
jno
jmp
cmc
push
mov
xchg
xacquire
pop
pop
or
cmpsl
sub
and
jg
stos
push
push
mov
shrb
insl
std
push
insl
pop
notl
rcll
push
jecxz
neg
fldl
ja
cld
cltd
mov
xor
shll
mov
push
outsl
loopne
jnp
mov
mov
xor
xchg
insb
cli
xchg
mov
les
in
sbb
popf
repnz
movsl
scas
lock
xor
adc
mov
sub
out
aad
mul
ds
cmp
xchg
lret
xor
popf
jmp
int3
sub
push
call
movsl
push
xor
rolb
hlt
jno
dec
addb
mov
inc
mov
cmpsl
andb
lds
mov
enter
xchg
dec
rcrl
loop
pop
mov
cmp
sbb
xor
popf
dec
jge
insl
cmp
inc
push
cmp
inc
outsl
insl
out
in
test
lcall
mov
cwtl
mov
xlat
cltd
jae
and
xchg
sbb
sub
cmp
pop
flds
cmp
div
cld
cmp
loop
arpl
lcall
js
daa
popa
xor
pop
pop
jno
andb
mov
push
mov
leave
push
jg
data16
loopne
std
rcrb
fldcw
cmp
das
sub
es
mov
stos
test
stc
idivl
push
mov
sbb
cmpsb
repnz
dec
lcall
cwtl
leave
pusha
jmp
xchg
adc
cwtl
lahf
sbb
jp
imul
movsb
jp
int3
dec
pop
adc
pop
mov
and
xchg
cli
ret
arpl
xchg
call
aam
inc
iret
in
shlb
sbb
sbb
divl
jmp
cmp
cmpb
jmp
pop
cmpsl
cmp
cwtl
mov
push
cli
popf
call
repnz
mov
and
xchg
sahf
add
cld
arpl
out
loop
out
pop
xchg
outsl
outsb
and
dec
test
and
xchg
and
pusha
xor
jecxz
daa
sbb
orl
xchg
addr16
fsubs
jecxz
push
sbb
int
jae
sub
lret
ja
shl
xor
lahf
outsl
gs
sub
pop
das
inc
scas
insl
ja
jnp
pusha
test
jne
or
sub
xor
scas
lcall
dec
inc
shl
and
bound
imul
lock
jo
das
jb
fdivrs
iret
rep
icebp
arpl
cwtl
cmpsl
jne
and
push
fidivrl
xchg
lea
inc
sbb
sti
imull
mov
xor
sbb
xor
jmp
xor
or
or
fmull
inc
xor
andb
dec
xchg
adc
inc
sub
imul
xchg
adc
and
jbe,pt
aam
icebp
stos
inc
pop
sbb
pusha
movsb
fwait
mov
mov
fcomps
and
gs
pop
loope
xchg
xchg
sbb
shr
mov
sub
std
and
loop
or
cmpsl
adc
es
or
dec
mov
or
test
and
pop
jb
insb
cmp
idivl
int
mov
dec
mov
push
pop
mov
mov
add
sub
cmc
icebp
sbb
lods
cwtl
shrl
leave
mull
jecxz
mov
pop
add
cli
lahf
mov
addr16
inc
in
js
cs
fistpl
mov
jge
adc
mov
and
outsb
mov
mov
lret
movsl
fucom
cld
push
popf
repnz
xchg
popa
add
rorb
lcall
push
pop
fcoml
int3
mov
jge
and
jae
movsl
fmul
daa
cltd
insl
fistps
in
mov
jae
and
jae
lods
pop
std
cs
mov
enter
jb
mov
int3
inc
cmp
cmp
sti
das
lret
int3
mov
cmpsb
test
in
fsubrl
std
outsl
lods
cli
add
sbb
shll
dec
xchg
pushf
sbb
mov
nop
mov
inc
outsb
filds
inc
pushaw
arpl
ja
or
test
idiv
repz
scas
into
nop
mov
inc
adc
repz
push
cmp
pop
cld
loopne
out
aam
dec
js
jge
movb
cmpsl
ret
insb
push
jp
mov
pushf
jmp
cwtl
sbb
sub
dec
dec
aam
xchg
mov
shlb
cmp
roll
int3
dec
outsb
push
rcll
ficompl
jne
aas
adc
push
mov
fldenv
sbb
bnd
out
lods
mov
imul
loope
fwait
mov
stos
xchg
pop
in
xchg
lret
cmp
ss
sub
jge
cmp
ja
dec
sub
mulb
es
push
pushf
pop
dec
bound
int
push
dec
pop
jb
lea
pusha
jbe
sbb
ret
jp
pushf
jb
pop
adc
jb
or
or
push
rcr
sub
lds
xor
cmp
mov
or
or
lcall
or
leave
pop
and
jne
sub
lret
jmp
xchg
jp
fwait
lret
mov
cmp
push
xor
add
xchg
jae
std
jo
divl
outsb
and
fmuls
cmp
mov
jmp
mov
js
pop
mov
test
sub
fidivrs
xlat
push
ja
pop
aad
and
and
pop
pop
daa
push
in
movsb
mov
or
inc
aad
clc
rcr
insb
push
jns
push
stos
mov
xchg
mov
adc
into
mov
sahf
jae
pop
icebp
movsl
clc
outsb
mov
or
sub
dec
push
repz
out
cwtl
daa
mov
subb
arpl
lcall
jno
sbb
int3
sbb
mov
xor
aam
shrb
out
ret
fimull
mov
jo
sub
jmp
pop
sbb
sbb
mov
movsl
mov
fcomps
sub
mov
int
ret
mov
pop
adc
jae
shr
push
inc
pop
arpl
xchg
ja
stc
fs
xchg
mov
xchg
sub
dec
lret
xchg
iret
rcll
test
lcall
aas
fiadds
cmp
test
jnp
xlat
nop
mov
jbe
fidivrs
neg
xlat
lea
xchg
cwtl
mov
push
out
fstpt
scas
stc
mov
adc
inc
sahf
sub
cwtl
int3
dec
lret
rolb
sub
shrl
je
mov
inc
out
jecxz
out
jne
jno
or
cmp
test
es
rcl
ss
psubq
dec
xchg
ret
mov
pop
jns
lock
out
and
sub
push
in
push
aad
and
lods
aad
cltd
stos
lock
jb
popa
nop
mov
jbe
andb
bound
in
xor
aaa
fldl
mov
sarb
inc
and
adc
xchg
in
or
xor
stos
mull
daa
or
mov
xchg
repnz
add
leave
sbb
cli
inc
out
loope
and
je
clc
and
dec
mov
icebp
cmpsb
add
addb
aas
sub
adc
mov
ss
orb
inc
xor
or
mov
xchg
inc
mov
add
jecxz
ds
or
rcl
call
push
pop
pop
outsl
sti
pop
lret
clc
push
cmp
mov
int
arpl
ret
and
es
test
and
test
movsb
sub
out
arpl
adc
dec
loopne
pop
popa
or
jmp
movsl
xor
lcall
aaa
adc
sbb
dec
add
jns
sbb
sub
bound
fs
dec
adc
imul
hlt
pop
addr16
data16
popa
int
mov
ja
mov
inc
in
int
push
mov
loopne
jmp
push
pop
fildl
out
sbb
cli
mov
add
inc
pop
addr16
mov
adc
scas
jns
mov
popa
outsl
jle
test
or
mov
cmp
stos
jecxz
in
and
icebp
sbb
jge
pusha
cmpsb
in
jo
inc
xor
xchg
xor
or
fcompl
popf
fldcw
xor
out
sahf
xchg
fs
and
mov
fsubs
and
pop
pop
cmp
jo
lahf
mulb
dec
push
xlat
jne
fsubs
push
sbb
sbb
sub
test
sbb
rclb
incb
mov
adc
fcmovu
fldt
inc
imul
inc
mov
cmp
out
xlat
pop
ja
out
mov
mov
pop
mov
inc
rcl
dec
fbld
bound
adc
push
call
and
out
add
jle
pop
jbe
cmp
jno
iret
mov
ret
lock
test
int
dec
jl
pop
testb
adc
leave
xor
push
std
call
fisttpll
mov
movsb
je
push
int3
lods
push
lret
inc
andb
dec
mov
adc
sbb
and
lods
int3
add
fbld
lcall
scas
pop
sub
mov
ja
mull
cld
mov
rcrb
mov
xchg
iret
iret
imul
fimull
out
sbb
loop
add
push
movsb
cwtl
out
ret
addr16
repnz
push
mov
insl
mov
frstor
shll
lea
das
inc
out
leave
and
cs
aam
add
sub
movsl
cmpsb
inc
je
outsb
inc
add
loop
sahf
cmp
inc
lock
fwait
inc
je
ja
dec
inc
dec
sub
push
or
lds
cltd
outsl
clc
imul
dec
and
loopne
add
sub
out
add
pop
inc
mov
pop
idivb
mov
or
pop
xchg
rcrb
movsb
jo
pushf
and
out
jbe
es
cmp
and
dec
aas
pop
adc
lea
add
sahf
pop
loop
or
aad
arpl
aaa
mov
xlat
cmp
adc
ret
ret
jae
jno
lods
inc
inc
cmp
lods
insb
jp
in
scas
test
jmp
out
pop
pop
mov
xchg
add
fldl
in
mov
cmc
movsl
lret
aam
xchg
push
call
and
or
pushl
add
imul
push
subw
fs
mov
push
ret
sbb
test
test
aam
sbb
xchg
xor
xchg
xchg
lods
mov
jns
es
sbb
mov
adc
sti
dec
xchg
push
sahf
cmp
push
enter
adc
popl
or
mov
mov
xlat
jne
ret
cmpsl
outsb
pop
int
and
aad
mov
repnz
and
push
insb
das
hlt
in
inc
dec
pop
push
mov
outsb
sub
xchg
mov
xchg
and
add
mov
dec
mov
les
pop
sbb
inc
add
movsb
icebp
dec
push
adc
in
dec
iret
push
mov
sub
mov
inc
xor
adc
adc
test
sub
orb
push
leave
mov
in
lcall
cmpsb
lahf
push
fsubrs
dec
xchg
mov
xor
lea
fwait
out
lods
add
add
lods
cmp
jl
mov
jge
cmpsb
add
mov
xchg
mov
ss
in
je
jmp
xchg
pusha
stos
jae
out
push
xchg
std
rorb
mov
sahf
mov
ret
aaa
int
sub
sub
fsubs
sbb
xchg
xor
xchg
ljmp
call
aaa
inc
aaa
in
inc
cld
and
add
pop
imul
jb
mov
jl
cmp
cmc
pop
movsl
lock
fwait
cmp
adc
sbb
jb
clc
fcomi
daa
mov
cmp
pop
cmp
arpl
addb
scas
xor
sbb
pop
into
in
repnz
adcl
inc
push
xor
ljmp
dec
mov
jae
push
lahf
add
stc
mov
adc
imul
ljmp
cmc
icebp
or
cmp
fsubrl
pop
jae
pushf
mov
push
push
jge
cmp
jne
add
mov
mov
adc
xor
cmp
imul
pop
mov
mov
in
mov
arpl
xlat
lret
inc
sbb
shrl
int3
lahf
outsb
push
pop
rcrb
fcmovne
jg
add
out
rol
shrl
and
inc
or
jno
lret
call
jmp
loopne
adc
imul
fldcw
xchg
test
gs
incl
cs
push
stos
mov
rcrl
mov
fwait
mov
add
in
addb
and
adc
bnd
gs
jo
subb
inc
cmpsl
jmp
adc
popf
add
std
xchg
imul
lods
loope
and
sarl
inc
jbe
data16
mov
sub
add
daa
push
orl
sbb
xlat
sub
add
inc
insl
mov
inc
fstpt
cmc
getsec
push
notb
jle
repnz
jp
cld
iret
inc
cmp
adc
or
ret
and
and
test
cmp
aaa
push
cli
aaa
ja
bound
cmc
pop
sub
popa
rol
sub
out
or
and
and
add
lods
insl
sub
lods
fldl
shll
pop
xchg
mov
leave
adc
adc
adc
std
adc
push
out
aad
dec
shll
out
loopne
sub
lahf
in
cmpsb
insl
xor
out
ret
pop
pusha
sbb
out
int
hlt
ss
cmc
jle
mov
or
adc
lret
pop
jmp
adc
cli
pop
adc
mov
out
jle
lock
sub
ljmp
pop
adc
leave
mov
mov
fnsave
pop
stos
aaa
outsb
pop
repnz
pop
push
xor
mov
cwtl
fwait
xchg
push
orl
rcrl
pop
add
mov
jge
mov
fadds
aad
jge
nop
adc
add
enter
jno
or
xchg
pusha
mov
mov
cmc
lods
data16
jmp
repnz
xchg
add
shrl
test
pop
inc
cmp
mov
in
shll
cmpsl
add
int
pop
inc
push
stos
ret
ud0
push
push
incl
push
mov
fisttps
sahf
ldmxcsr
push
xor
fwait
outsl
xchg
outsb
ret
inc
in
mov
push
das
dec
mov
xor
cmp
lock
sub
outsl
adc
das
inc
pop
add
mov
mov
jnp
and
pusha
mov
mov
jno
jmp
outsl
cmp
jo
pop
enter
jmp
insl
es
cltd
outsb
bound
into
mov
decl
pop
popf
mov
cmp
insl
jbe
adc
jmp
loope
mov
cli
test
mov
dec
loope
jmp
push
xchg
adc
add
push
shr
jge
fs
mov
es
test
and
lds
or
dec
sbb
push
dec
mov
dec
jne
pop
sahf
cmp
jl
cltd
mov
repnz
bound
incb
inc
mov
or
aad
push
pop
scas
lds
cli
jae
jne
or
sbb
mov
mov
or
pop
pushf
jb
int
xchg
jmp
popa
lods
and
xchg
fwait
jge
outsb
mov
lcall
mov
jnp
sbb
cmc
in
adc
in
xchg
mov
fxch
adc
cmp
xor
and
xrelease
mov
rcrb
das
pop
and
int3
jb
xchg
outsl
je
test
pop
iret
and
xor
or
movb
scas
mov
jmp
mov
xor
mov
push
int3
das
and
add
repnz
in
mov
jo
xchg
movsb
pop
imul
adc
jmp
popa
ss
pop
xor
imul
int3
inc
imul
push
test
lods
cwtl
out
shlb
xor
xchg
jne
sub
call
fsubrl
fadd
dec
jcxz
jno
lcall
jnp
in
ljmp
addb
jmp
mov
xchg
or
mov
stos
lea
pop
pop
dec
sbb
andb
mov
or
stos
adc
movsl
push
ret
sub
aam
aas
inc
loop
jmp
ss
mov
rcrb
mov
jp
sub
clc
sub
cwtl
repz
scas
les
push
icebp
imul
or
adc
jns
sub
mov
push
adc
lea
add
cmp
mov
and
fsubrl
inc
fmull
push
adc
adc
mov
fbld
mov
js
mov
insl
push
call
push
test
mov
push
cmp
mov
push
out
inc
inc
loopne
jne
push
cmp
sub
fcomps
bound
popf
xchg
lock
jp
jg
sub
arpl
dec
sub
frndint
std
jl
lahf
xlat
daa
lods
loop
jnp
repz
jg
rorl
cwtl
ja
jb
out
jo
cmpsb
repnz
xchg
addl
push
cmp
imul
loopne
addr16
lods
xor
xchg
push
sbb
cmp
push
cmovl
push
leave
rorb
cli
repz
mov
mov
pushl
or
call
dec
fnstsw
cwtl
aam
and
jecxz
xor
pop
xchg
cmp
inc
jbe
sti
scas
push
fsubrs
mov
and
mov
sub
cmp
fisubrl
call
mov
ficoml
aad
negl
cmpsb
mov
rorb
aaa
jg
pop
lahf
cmp
and
mov
adc
inc
mov
and
call
mov
sbb
out
push
sbb
push
pop
lea
call
pushf
dec
jno
fwait
and
xor
push
sbb
fidivrs
pop
out
repnz
push
test
push
adc
mov
cmp
push
xor
add
or
mov
lds
cld
out
mov
xorb
pop
adc
push
sahf
sbbb
xchg
gs
jl
int
bnd
jp
rolb
mov
adcl
push
test
mov
jne
repz
ret
aaa
in
negl
push
xchg
push
in
insb
pop
ficoml
cld
jmp
imulb
dec
test
mov
jne
xchg
pop
icebp
inc
bound
mov
cwtl
sbb
call
mov
mov
push
mov
xchg
jnp
cmpsb
or
mulb
sbb
sub
in
pop
jg
mov
pop
inc
ret
jo
and
out
mov
xor
in
es
rorl
inc
mov
xorb
dec
pop
lahf
or
stos
and
adcb
idivl
out
inc
push
xchg
out
mov
lret
lock
in
insb
sub
adc
sarl
push
je
hlt
movl
push
mov
fimuls
enter
dec
aaa
cwtl
sub
std
xor
fimull
sub
dec
fstl
lods
push
fsubrs
outsb
loopnew
inc
xchg
pop
mov
mov
clc
lea
out
mov
sbb
into
test
xor
stos
jbe
fucom
add
mov
cmpsb
sbb
push
nop
mov
leave
aad
icebp
or
push
imul
sbb
mov
mov
mov
xor
mov
mov
sbb
imulb
mov
push
pop
data16
lds
fstp
mov
or
xor
and
inc
mov
sub
fcmovnb
lds
push
addb
push
rcrl
les
pop
xchg
lods
jb
mov
pushf
push
lcall
jo
cld
mov
and
ljmp
jle
movsl
mov
mov
not
inc
xchg
out
loope
xlat
push
xchg
xor
mov
push
mov
inc
add
xchg
rcr
xor
aas
shrb
pop
ljmp
lock
shll
imul
dec
sub
sar
imul
ret
and
hlt
in
jnp
sarb
mov
or
leave
and
inc
lret
mov
dec
test
popf
dec
outsl
lret
out
inc
mov
push
call
dec
xchg
in
mov
pop
cld
into
nop
cmp
mov
int3
shl
jo
sbb
sahf
icebp
in
daa
cmpb
inc
jl
cmp
sbb
arpl
sub
add
xrelease
jnp
test
orl
xor
std
push
fisubrs
nop
inc
cmp
mov
cld
clc
inc
and
cmp
pop
dec
or
cmp
out
out
lcall
dec
imul
shl
mov
fisttpll
lcall
js
sarl
movsl
in
mov
hlt
cmp
push
test
addr16
adc
add
jae
lods
adc
out
mov
xchg
add
nop
fisubs
push
lcall
sub
or
pop
sahf
sub
repnz
vphsubwd
scas
lea
ret
cmpb
inc
test
add
icebp
pop
imul
cmp
sub
jae
pusha
pop
clc
clc
inc
pop
sub
arpl
stc
xor
dec
xor
idivl
inc
mov
loopne
out
lcall
aad
out
fldl
popl
xchg
add
test
xchg
shr
or
cmpsb
sti
xchg
xor
arpl
fst
je
mov
xor
fisttpll
rolb
fsts
loope
mov
rorb
call
inc
mov
mov
jecxz
adc
sbb
push
inc
cmc
dec
fcmovnbe
bound
xchg
adc
mov
or
cmpsl
mov
icebp
lahf
mov
scas
xor
pop
push
bound
les
mov
mov
imul
or
adc
inc
jae
js
incb
or
test
leave
mov
or
outsl
movsl
fsubrl
jnp
std
fisttpll
jmp
iret
jp
imul
lea
push
pop
jge
inc
push
out
in
ja
rolb
pop
loop
adc
pop
sbb
fnstsw
cmp
push
mov
das
or
mov
dec
lock
inc
out
lock
aas
call
dec
xchg
ja
mov
xchg
inc
test
cld
or
mov
mov
sbb
dec
pop
mov
fmull
add
push
outsb
add
pop
cld
rclb
add
cli
mov
lret
and
pop
xor
ja
addr16
insb
scas
divb
rclb
cmpsb
dec
mov
push
mov
nop
out
pop
mov
xchg
jge
loopne
or
sarl
ficoms
shrl
cltd
inc
lds
mov
dec
push
fbld
push
fstps
loopne
aaa
push
push
or
mulb
xchg
hlt
sub
jne
outsb
sbb
sbb
jb
aad
cmp
cld
daa
fucomip
jecxz
dec
mov
test
jae
fdivs
stos
inc
push
pop
cmpsl
test
ret
jne
adc
dec
rcrl
into
aam
add
arpl
cmp
insb
push
in
inc
fwait
or
imul
bound
jne
jae
push
stos
jle
or
jp
enter
xlat
sub
dec
mov
adc
ss
ret
mov
js
fisubs
mov
xchg
jmp
cmp
div
sub
jge
add
and
sbb
push
movsl
mov
pop
lcall
cli
addr16
adc
lds
ret
sahf
lods
insl
push
lock
xor
mov
pop
dec
mov
jecxz
cmpsb
out
stos
mov
repnz
jb,pt
dec
or
leave
or
mul
lds
in
mov
jp
testl
dec
ja
jae
mov
cmpsb
adc
cli
xor
iret
jmp
fcomi
repnz
mov
xor
add
add
stc
lret
pop
ljmp
dec
sbb
xchg
or
imulb
pop
icebp
sub
mov
dec
insb
lahf
fildll
jp
cli
jmp
js
fists
push
adc
pop
mov
es
les
mov
push
sbb
sbb
adcb
or
xchg
mov
mov
dec
and
ja
sub
cwtl
aam
push
mov
hlt
add
lock
xor
stos
fwait
adc
idiv
int
pop
mov
push
out
xchg
lar
jno
int3
push
cmp
mov
in
cmp
hlt
push
lahf
fwait
add
ljmp
jmp
cmp
and
xchg
movsb
imul
int3
and
inc
and
jge
das
and
movsl
dec
add
out
pop
cmpsl
shrl
dec
xor
clc
into
xchg
fwait
fwait
xor
sub
cs
sbb
xor
pop
pop
jp
sub
popf
push
mov
aam
out
sbb
add
lret
mov
xchg
add
inc
es
sub
das
dec
jmp
cltd
dec
mov
int3
sub
mov
adcb
sub
stos
mov
sub
stos
cmpsb
pop
mov
scas
sub
sahf
stc
jnp
pushf
mov
xchg
push
rcl
sbb
adcl
pop
addr16
ret
adc
test
and
out
cmpsb
in
shr
jbe
xchg
sahf
adc
dec
pushf
fmul
aas
andl
bound
cmp
cmpsl
pop
loop
and
push
mov
jecxz
push
aam
insl
xor
std
add
sbb
loop
aam
outsb
mov
pop
push
loopne
movsb
or
sub
sub
sarb
cmp
aam
and
shrb
arpl
mov
add
outsl
fstl
xor
mov
fists
mov
in
mov
inc
push
pop
jg
int3
int3
mov
mov
movsb
mov
fs
sbb
jbe
in
mov
pop
adc
sbb
adcl
insl
xlat
push
popf
mov
aaa
fwait
hlt
rolb
popf
aam
inc
into
inc
sub
sti
cs
cld
leave
add
lds
and
enter
insl
mov
loop
loopne
pushf
pop
sbb
scas
mov
movsb
call
test
mov
jp
and
lret
loop
and
emms
inc
xchg
mov
adc
inc
jne
xorb
imul
into
sbb
imul
xchg
test
popf
xor
sub
fs
popf
insb
xor
and
lods
dec
fidivrl
je
cld
iret
pop
pop
rolb
or
dec
addr16
popa
sbb
inc
xchg
std
pop
mul
in
neg
lock
pop
ficompl
mov
mov
dec
jnp
or
sarl
movb
mov
cli
aas
or
and
pop
adc
outsl
lea
outsb
dec
cli
out
mov
add
bound
and
lret
loope
add
into
mov
mov
out
mov
ret
inc
or
lock
repnz
arpl
sub
ds
mov
push
test
ss
ret
or
ret
mov
loope
mov
dec
aam
sub
and
push
pop
add
push
jg
adc
sub
or
arpl
rolb
movsl
ljmp
pop
mov
loope
out
sbb
or
inc
clc
addl
jb
fucom
sti
movsl
shrb
shl
testl
cmpsl
cltd
negb
add
fcmovnbe
imulb
es
repz
xchg
scas
sub
xor
ret
sbb
mov
mov
imul
sbbl
fldcw
push
dec
and
pop
scas
loop
sbb
jge
jg
pop
lods
push
shll
loope
xchg
push
mov
js
outsb
movsl
ficoms
fmul
stc
jns
pusha
sbb
mov
stos
ja
sbb
test
test
pop
in
pop
mov
pop
sub
mov
fisubrl
pop
xchg
out
dec
jno
stos
push
cmp
xchg
fdivl
fstl
loop
mov
mov
ret
pop
ljmp
push
cmc
mov
jle
movsl
sub
sub
push
xchg
subb
sbb
lahf
mov
mov
dec
inc
mov
push
sbb
and
fnstsw
or
rorl
je
test
jg
popf
or
es
test
icebp
daa
sub
and
test
cs
add
pop
jl
sub
xor
add
mov
push
dec
cltd
inc
sub
ficoms
jae,pt
lret
sarb
in
aam
pop
jmp
std
cs
icebp
insl
imulb
sub
mov
mov
adc
jns
jl
xchg
in
and
sbb
and
cmp
arpl
dec
mov
test
fsts
push
pop
inc
sub
lcall
push
or
loopne
cmc
add
enter
andl
orb
out
sub
fnsave
jb
aaa
fidivrl
inc
call
push
repnz
xor
mov
pop
adcb
or
jge
lds
xor
je
push
imul
jae
sub
xchg
dec
jnp
insb
repnz
ja
gs
inc
aam
xchg
test
ljmp
jl
xchg
jecxz
cltd
xchg
mov
fmul
or
mov
sti
hlt
push
subb
stos
call
aam
jg
push
in
and
xchg
sbb
lcall
scas
stos
push
fstl
negl
lcall
mov
mov
shlb
je
pop
fucom
xchg
inc
xor
stos
mov
out
cmp
mov
lret
jg
push
ror
xchg
sub
inc
cmp
cmp
add
fisubs
pop
shll
pop
pop
xchg
mov
aad
xchg
cmp
subl
stc
stos
push
les
ret
mov
xchg
sbb
stos
adc
in
and
stc
inc
sub
sbb
inc
mov
in
fidivrs
cmc
mov
fldcw
sub
adc
sbb
scas
fdivs
fcoms
ds
clc
xchg
dec
or
rcrb
sub
imul
dec
sbbb
ret
inc
fsts
lea
xlat
cmp
xorb
pop
out
and
jg
inc
xor
push
cmp
sbb
sbb
jbe
xchg
add
xchg
or
jl
jno
setno
repnz
sub
outsl
push
mov
mov
sub
mov
sbb
mov
jg
daa
punpckldq
mov
fldt
fiadds
fcomip
aam
nop
xchg
pop
out
daa
mov
in
dec
pop
imul
mov
lock
mov
xchg
stos
frstor
sbb
icebp
adc
mov
push
bound
fbstp
and
xchg
jg
jne
mov
push
xlat
add
loope
es
jg
pop
mov
dec
adc
jns
popf
daa
push
mov
subb
mov
inc
cmpsl
xchg
dec
inc
jmp
add
dec
xor
cmp
adc
mov
sahf
xchg
mov
popa
ffree
inc
lcall
bnd
aaa
dec
lahf
jo
pop
or
add
out
bound
xchg
lock
pop
loope
mov
add
das
data16
pminsw
repz
ret
aas
inc
leave
push
adc
xor
lcall
int
test
xchg
xchg
push
mov
push
sub
shlb
dec
lds
imul
test
pop
dec
mov
mov
jmp
clc
icebp
icebp
scas
and
jge
mov
aaa
lock
pop
imul
xchg
stc
cs
daa
cmpsl
add
arpl
ret
push
out
push
jg
flds
sbb
fnsave
jnp
inc
ss
pop
popf
rcrl
imul
std
ljmp
clc
pop
inc
inc
jmp
loope
mov
jb
aad
jg
cmp
cmc
js
test
mov
jecxz
xchg
lcall
lods
loope
pusha
aad
lock
mov
ds
dec
and
scas
leave
push
adc
inc
addb
mov
movsb
xchg
repnz
std
fwait
rorb
mov
stos
scas
pusha
xchg
repz
mov
lock
stos
jae
add
xchg
or
leave
jle
popa
mov
ret
punpckhbw
lods
dec
mov
mov
cwtl
outsb
and
jno
inc
iret
ja
or
or
mov
lret
std
xchg
lcall
mov
jne
add
bound
mov
add
xchg
sub
jle
jg
addb
jg
loopne
cmpsl
cmp
loopne
mov
or
aas
cmp
outsl
and
call
lods
and
cld
dec
xor
mov
sti
sbb
jnp
notb
xor
aaa
addb
loopne
cli
add
dec
cltd
sbb
cltd
out
inc
pop
data16
adc
add
xchg
jg
sub
add
fyl2xp1
jae
adc
pop
testb
test
rclb
mov
subb
cld
cli
cmp
or
inc
mov
or
jg
jae
test
sbb
stos
jge
out
es
cltd
jge
push
fimuls
mov
mov
dec
test
push
andl
addb
xor
outsb
xchg
bound
sub
sbb
push
or
andb
jb
lds
test
push
rolb
xor
orb
push
sub
aam
xchg
inc
jle
mov
mov
mov
mov
or
cltd
imul
cmp
jge
ds
xor
adc
adc
in
xor
int
dec
test
push
fldenv
cld
ss
lods
cbtw
fimuls
adc
jge
test
jb
scas
hlt
inc
insb
stc
test
rorb
cmp
add
ljmp
in
mov
ds
xor
pop
sub
ret
fisttps
mov
and
jg
ljmp
mov
xchg
xor
adc
or
adc
out
sbb
sti
lds
cmp
popf
fidivrl
dec
lcall
inc
and
adc
sbb
cmp
jl
xchg
cs
xor
and
cmp
xchg
mov
jmp
sbb
jnp
or
loope
shlb
pop
ficoml
hlt
inc
mov
and
call
out
adc
aad
lret
mov
enter
jg
inc
insl
int3
leave
scas
or
std
in
fcompl
mov
sub
sub
outsl
mov
sub
sarb
mov
lds
xor
and
ret
mov
jecxz
sub
jl
mov
jl
push
in
cmp
add
sbb
mov
out
pusha
in
cmp
jp
xchg
out
popf
divb
ss
inc
pop
mov
mov
shll
mov
or
sub
sbb
pop
insb
test
ret
push
mov
lods
mov
lcall
push
lret
dec
movl
mov
adc
popa
cmp
sarl
cmp
cmp
or
dec
repnz
sbb
pusha
dec
xor
or
mov
xor
imul
sbb
cmp
aam
and
pusha
mov
daa
push
mov
ficoml
cld
jg
and
mov
shl
aad
or
scas
mov
pop
mov
lahf
scas
shl
es
push
mov
mov
fldt
enter
icebp
push
inc
jbe
pop
fistps
pop
mov
cmpb
leave
xorl
subl
push
inc
add
fnstcw
jnp
in
mov
xor
mov
xor
adc
mov
in
shlb
das
or
popa
jmp
xor
sbb
cwtl
hlt
cmp
call
and
outsb
pop
fisubrl
ljmp
push
mov
pop
sbb
lods
sub
sti
mov
jns
js
das
pop
sbb
out
mov
jbe
ljmp
das
inc
stc
cmpsb
je
loop
shll
fnstcw
int3
lods
dec
or
xchg
adc
inc
ja
jae
rorl
inc
jo
fsts
ret
fidivrs
imul
adc
jo
add
add
mov
test
out
xchg
testl
ret
pop
sbb
addb
dec
pushf
jns
sarb
push
jbe
pop
in
icebp
dec
cs
cwtl
addr16
mov
ljmp
das
sbb
adc
cmp
sub
das
test
pusha
push
inc
imul
aam
shlb
xor
shrb
push
xor
fnsave
iret
leave
push
jae
push
repz
in
out
push
mov
fsubl
dec
add
scas
inc
dec
aaa
add
mov
mov
push
sti
mov
or
pop
pop
xchg
jno
stos
icebp
fidivs
dec
push
sub
out
push
push
or
fxch
mov
dec
add
mov
lea
jb
sbb
rorl
das
inc
std
jnp
ficompl
lea
xchg
repz
repz
rcrl
or
push
ljmp
enter
mov
out
inc
cmp
imul
xorb
adc
pop
lods
pop
dec
fisubl
and
cli
incl
sbb
iret
jle
sbb
movsb
mov
int3
andl
mov
xchg
test
xlat
mov
fbstp
int
lret
in
jb
js
scas
js
into
test
jne
dec
and
ja
sub
add
jmp
add
cltd
imul
push
sub
andb
mov
push
ljmp
pop
mov
xchg
adc
jnp
pop
icebp
fsubl
sti
ret
sbb
push
movsl
test
shll
es
fimull
mov
mov
fistps
aaa
and
add
aas
cltd
jne
jns
mov
sub
or
nop
lods
add
or
shl
pop
stos
xchg
and
scas
les
sbb
arpl
xchg
addl
insl
or
movl
fwait
test
xchg
inc
push
lock
shl
sbb
fsub
cmp
dec
mov
repnz
xchg
out
enter
adc
addl
lods
addr16
lods
testl
jmp
dec
adc
mov
sub
adc
adcl
inc
xor
es
movsl
es
add
sahf
adc
and
push
test
adc
in
add
cmp
mov
jbe
dec
sahf
push
fnstsw
movsl
sbb
sub
sub
jno
lcall
pushf
gs
test
dec
sub
inc
cmp
push
xorl
in
sarl
clc
test
jae
jmp
lcall
mov
dec
cmp
xlat
cmp
jbe
add
add
lret
xchg
adc
loopne
stos
repnz
or
pusha
lds
ror
dec
or
jns
cmpsl
jbe
mov
sub
mov
mov
cmp
rcll
dec
enter
ja
addr16
inc
ds
push
inc
out
and
mov
or
add
pop
dec
and
push
dec
sub
mov
sti
push
and
movsl
and
and
dec
std
cmp
sahf
mov
ds
push
mov
add
mov
push
sub
sarl
push
and
andb
adc
hlt
ficoml
push
lahf
mov
orl
std
cmp
shll
aas
imul
mov
pop
in
fcmove
pop
jb
add
push
mov
sbb
or
sti
mov
in
xlat
dec
push
sub
lret
or
jg
inc
sbb
inc
xchg
mov
shrl
xchg
adc
push
xor
rcrb
pop
insb
ss
sbb
dec
clc
mov
pop
push
mov
and
addr16
push
pop
inc
push
mov
push
popa
sub
mov
mov
mov
addl
xor
out
test
leave
bound
add
aas
sahf
adcb
jno
scas
dec
sbb
jl
out
xor
xor
jno
jae
inc
pop
xchg
outsl
cwtl
lea
iret
xlat
jbe
sbb
xlat
jne
out
mov
fsubl
bound
or
mov
das
bound
subb
scas
int
xchg
xor
imulb
mov
insb
xchg
insl
pop
push
cmp
mov
enter
pusha
in
sbb
into
es
pushf
add
mov
xor
lods
icebp
test
jo
push
enter
xchg
xor
jae
inc
pop
xor
int3
push
out
and
js
pop
insl
cmc
xchg
int3
ljmp
push
jge
pop
mov
testl
into
testl
rolb
into
cmp
mov
scas
pushf
popf
aam
sti
out
in
mov
add
sti
lds
xor
adc
clc
dec
in
sahf
dec
adc
jge
sub
rcrb
jge
iret
adc
pushf
jb
sti
sbb
xor
rclb
es
and
subl
std
jbe
enter
fstpt
xor
inc
in
jp
jns
mov
inc
in
movsb
push
jl
add
andb
pop
imul
pop
cli
cmp
test
dec
stc
mov
mov
or
push
mov
addr16
xchg
push
sub
insl
fistps
mov
jae
insl
adc
mov
js
jle
orl
movsb
push
or
xchg
mov
imul
imul
inc
inc
jne
inc
sub
dec
mov
jo
jle
fwait
add
pushf
mov
stos
addl
in
jnp
decl
bnd
test
jno
in
pop
fs
push
minps
scas
jo
dec
xchg
lcall
add
adc
repz
ret
and
jo
out
xchg
sub
addr16
mov
negb
jmp
mov
test
in
fisttps
into
dec
and
stos
iret
arpl
mov
mov
cltd
stos
mov
cmp
mov
iret
fldenv
enter
xchg
and
push
mulb
or
inc
ds
je
xor
arpl
lret
data16
jae
std
mov
jb
mov
gs
fcoml
pop
or
shl
dec
push
imulb
add
adc
arpl
loope
adc
aam
xchg
cld
pop
sarb
push
repnz
insb
fadd
mov
push
out
or
mov
mov
or
std
inc
push
aas
ljmp
dec
or
gs
nop
jb
jnp
fsubp
movsl
cmp
mov
push
cmp
pusha
jae
sbb
daa
addb
cmp
je
and
andl
inc
mov
into
jns
outsl
jo
xor
cmp
push
sbb
mov
mov
daa
pusha
sub
or
mov
inc
xchg
aad
xchg
inc
fsubrl
push
rolb
jmp
mov
pop
and
lea
cmp
cwtl
and
sbb
stos
cmp
sbbl
in
out
cltd
xor
ds
rcll
jp
cltd
popf
pop
sbb
in
mov
push
jg
xchg
push
les
movsb
add
enter
cld
jmp
stc
fsubs
xorl
lods
icebp
jl
mov
push
xchg
adc
in
push
data16
sub
or
cmp
dec
pop
add
aam
sub
imul
adc
sub
mov
and
inc
mov
cmpl
ret
inc
inc
fst
std
push
sbb
shlb
out
jb
inc
in
shl
cltd
inc
push
sbb
mov
mov
xlat
loop
out
dec
adc
popa
adc
int3
repz
cs
int3
shl
sub
xchg
ja
sbb
or
or
pop
pop
shrb
pop
clc
cmp
dec
iret
cmp
fsts
popa
adc
shll
jo
in
jge
es
out
into
stc
inc
mov
lcall
and
xchg
sahf
stos
cmpsb
xchg
jb
popa
mov
sub
pushl
cmp
loopne
stc
ds
push
mov
rcl
pop
aam
sbbb
and
or
test
insl
and
xor
lea
push
xor
pop
jg
jo
loop
hlt
jl
mov
cmp
in
mov
call
bound
fiaddl
lahf
push
or
push
adc
adc
mov
adc
imul
pop
cmp
adc
test
adc
add
add
or
mov
fisubrs
imul
inc
sub
loope
inc
cli
inc
fsubrl
jl,pn
in
imul
fsubs
or
js
jmp
loop
dec
fdivrl
ljmp
jae
add
iret
imul
iret
loop
neg
jle
in
loop
fsts
adc
test
mov
lock
daa
xchg
mov
out
das
into
sub
bound
xchg
mov
outsb
lods
push
ds
adc
imul
mov
or
and
int3
outsb
into
in
js
cld
dec
outsb
lret
or
mov
ljmp
les
das
ja
push
pop
jge
adc
add
roll
mov
sub
or
in
ljmp
in
cmp
mov
or
push
add
int
rorb
lret
mov
dec
out
cwtl
jmp
or
loope
push
mov
inc
das
js
cltd
add
sub
sub
mov
js
jb
dec
shll
pusha
testb
xlat
call
sub
jecxz
daa
mov
scas
aas
add
mov
jae
push
or
lret
mov
insb
mov
pop
mov
and
adc
shrb
addr16
in
lret
js
mov
fiaddl
fsubs
push
xchg
shrl
test
dec
pop
mov
and
cs
sti
subb
sub
mov
xchg
xchg
sub
jg
mov
je
mov
add
and
adc
sbb
cmp
test
pop
add
and
jle
xchg
pop
iret
mov
mov
in
cmc
xor
sub
cli
lock
cmp
inc
pop
in
jp
xor
cmp
jp
loope
call
add
xor
jns
or
push
dec
mov
jecxz
out
xor
ss
bound
jge
pop
pusha
fs
call
jne
push
push
pop
or
mov
clc
int
leave
xor
out
ficoms
loopne
dec
fsubrl
outsl
push
bound
push
popa
fdiv
inc
jo
fimull
cmpsl
xchg
pushf
insb
cmp
decl
lods
adc
pop
xchg
jg
cltd
dec
jb
dec
neg
lret
cld
dec
stos
mov
or
daa
out
fildl
push
std
xchg
fwait
jmp
stos
fmul
das
push
jo
xor
xchg
cltd
leave
pop
push
ljmp
mov
stos
pop
pop
daa
xor
lds
in
aad
addr16
fcoms
lds
repz
cmp
mov
pusha
pop
adc
pushf
aas
clc
shr
int
push
add
mov
jp
pop
das
dec
pop
pop
xor
mov
insb
lods
mov
pop
lahf
pop
psubsw
loope
pop
test
jo
cmp
mov
sub
xchg
jg,pn
sbb
pop
arpl
push
lret
and
int3
pusha
lahf
fisubrl
sub
insl
cmpsb
fldl
mov
stos
sub
dec
mov
mov
mov
fbstp
sarl
movsb
mul
adc
rcrb
xor
mov
xlat
xchg
mov
js
inc
mov
cmp
jg
or
mov
fbstp
test
pop
mov
sub
push
or
jecxz
mov
dec
rclb
leave
rolb
popa
lds
ret
ret
push
and
lock
push
out
push
xchg
xor
int3
out
in
inc
js
out
xor
daa
push
fiaddl
mov
cmp
add
movsl
sbb
movsl
pop
shll
mov
cltd
xchg
ret
dec
stc
jecxz
xor
mov
push
out
inc
cli
mov
gs
lahf
sub
pop
rorl
fwait
pop
dec
jns
adc
mov
xor
mov
add
sub
test
std
je
jne
pextrw
inc
aas
adc
push
jne
pop
shlb
pop
out
mov
adc
nop
outsl
xor
mov
pop
jno
and
and
addr16
enter
xchg
mov
xor
pop
out
push
jbe
movsb
mov
out
jmp
orb
lcall
fisttpll
ss
test
cs
push
cmp
and
sarl
dec
rcrb
stc
push
movsl
sbb
mov
xchg
stc
imul
push
scas
cwtl
inc
cmp
shrl
ret
sbb
mov
add
add
lods
repnz
push
jle
lods
jp
mov
adc
mov
pop
cmp
push
and
hlt
xor
push
sbb
or
arpl
jle
sarl
jl
push
fucomip
cli
repz
cld
and
adc
xor
sahf
out
ljmp
jne
mov
push
pop
xchg
addl
push
pop
cmp
stc
add
push
mov
mov
ficoms
mov
push
adc
cwtl
or
inc
pop
adc
xor
push
sub
es
sub
dec
mov
jnp
push
push
sbb
aad
stc
mov
dec
dec
popf
jne
ds
loopne
call
sbb
pop
pop
addr16
bndstx
jp
add
loopne
ss
mov
stos
clc
add
xlat
mov
sti
cld
cmp
add
daa
les
adcb
out
aaa
mov
xor
add
inc
hlt
arpl
jp
inc
jecxz
xchg
clc
dec
xchg
test
add
outsb
cmp
mov
cmp
shll
jbe
mov
enter
fistps
decl
shrl
cmp
pop
in
pop
mov
pop
mov
xchg
xchg
pop
push
jecxz
xchg
aam
pop
push
test
sub
pusha
mov
pop
std
mov
cltd
andl
xor
xchg
ljmp
mov
mov
sbb
ficoml
mov
sbb
sub
mov
cli
in
shl
inc
out
inc
scas
mov
adc
and
add
sub
fbld
xchg
lock
sub
or
clc
mov
mov
or
adc
scas
subl
in
movsb
fidivrl
mov
xchg
xchg
mov
sub
in
mov
les
push
pop
lcall
push
lahf
fidivrl
pop
sahf
push
movsb
mov
outsb
sbb
rcrb
aaa
mov
add
mov
ja
fcoms
pushw
inc
call
mov
lods
test
lea
lods
iret
add
sub
xlat
lock
jo
leave
cmp
aas
lock
xchg
int
dec
jb
cmc
aas
dec
xor
test
xchg
dec
clc
mov
mov
jne
cmp
popa
adc
or
inc
xor
adc
popf
dec
add
cmc
adc
ljmp
mov
mov
aam
mov
mov
repnz
jecxz
adc
mov
lea
mov
dec
push
jne
inc
fsubl
test
call
lds
les
pop
addl
or
adc
cmp
xchg
jp
inc
adc
jg
mov
inc
ljmp
inc
es
aaa
adc
mov
mov
mov
pop
cmp
in
inc
dec
jmp
jnp
inc
xchg
xor
leave
adc
mov
cmpsl
fs
pop
push
pop
push
mov
lock
out
loopne
cltd
fcompl
push
push
popf
mov
jl
div
out
and
mov
xlat
lcall
gs
sub
imul
push
lcall
mov
xchg
sub
mov
sub
mov
add
pop
outsb
xchg
xchg
mov
push
mov
mov
cmp
cmp
nop
jns
lock
dec
test
xchg
and
repnz
test
fcompl
xor
push
mov
ret
inc
push
aaa
pop
cmp
pop
out
lock
divb
mov
rcr
iret
xchg
xor
mov
pop
jae
sbb
pop
add
mov
mov
lret
cmp
and
into
xchg
ljmp
nop
and
add
shlb
enter
jne
fdivl
sub
daa
or
sub
out
jne
repnz
out
int3
jg
sub
mov
mov
push
mov
push
dec
inc
insb
fstp
add
add
pop
repnz
mov
push
subb
inc
sti
fdivrl
lods
cmpsb
nop
rcr
xchg
push
adc
xor
dec
push
cwtl
inc
jg
xchg
sub
fistps
call
jb
jae
dec
sahf
insb
cmovg
rorb
push
xor
fmulp
push
mov
push
iret
call
in
out
jno
rcl
jne
filds
cmp
sar
jecxz
adc
jne
out
pop
and
adc
mov
out
and
xchg
mov
leave
fsub
pop
and
lret
cltd
ss
hlt
inc
mov
call
and
cmp
adc
mov
gs
movsb
out
pop
incb
mov
sbb
sbb
add
out
inc
adc
cmc
arpl
mov
add
jo
mov
and
adc
popl
arpl
inc
gs
jle
test
test
mov
loop
je
push
mov
xorl
aam
lahf
sub
xchg
xor
test
push
out
add
out
lea
stos
clc
shll
addr16
inc
test
mov
dec
mov
shrb
mov
jmp
mov
inc
mov
loope
movsb
stos
leave
jnp
add
push
dec
popa
cmp
mov
cld
dec
sbbl
aas
or
das
mov
hlt
push
pop
push
stos
sbb
jno
js
push
and
xchg
sbb
xor
sub
fisttps
cli
push
sbbb
adc
cltd
sahf
push
sbb
pushf
nop
inc
adc
push
push
cwtl
jmp
push
xor
pop
adc
jl
xchg
mov
jp
in
xor
push
or
sub
or
ja
into
xor
lds
dec
and
pusha
push
pop
mov
orl
in
jle
lock
sahf
leave
pop
int3
mov
arpl
mov
mov
popf
or
mov
data16
aas
inc
lods
lock
outsb
cld
outsl
sarb
aam
or
add
loope
scas
in
sbbl
out
pushf
inc
cmp
jns
lcall
pop
js
mov
stos
jmp
and
fnsave
dec
aas
fcoms
in
cmp
outsl
and
mov
mov
lret
test
mov
jmp
push
jl
ret
or
xchg
js
and
pusha
jecxz
cmp
sti
repz
pop
lret
sbb
or
push
jne
push
mov
fisubs
jno
popa
xchg
push
adc
inc
fwait
das
add
mov
xchg
fisttps
and
insb
or
insb
loope
jl
and
dec
inc
ja
push
adc
jmp
pop
sub
pop
xor
adc
and
push
inc
jo
push
pop
insb
into
test
xor
in
sarb
lret
rcll
mov
loope
js
cmpsl
andl
sub
adc
sahf
jle
loop
stos
mov
xor
fdivrs
int3
scas
lock
clc
mov
idivl
pop
xor
cmp
and
jl
out
orl
stc
fnsave
repnz
shll
testb
pop
je
outsb
or
add
adc
mov
nop
xor
jbe
les
pop
mov
xor
dec
cmp
mov
xor
add
mov
lcall
xor
arpl
mov
stc
into
cmp
leave
mov
push
xlat
loope
xor
push
mov
cmpsb
subl
es
cwtl
lods
push
pop
je
ds
fiaddl
imul
in
xor
jno
cwtl
scas
sub
add
ret
scas
pop
pop
ret
fwait
aad
push
xor
adc
sti
iret
jge
push
addr16
ret
xor
lds
adc
stos
dec
insl
out
sar
mov
and
test
sub
stos
xor
popf
iret
outsb
cmc
dec
aaa
xchg
in
das
push
test
mov
mov
or
and
mov
push
cmp
rcrl
dec
mov
in
cltd
imul
adc
out
push
mov
xchg
cmp
cmp
repnz
xorl
mov
scas
popf
pop
pusha
pop
mov
lds
movsl
cwtl
in
jg
sub
aad
lret
mov
push
je
cmp
xor
inc
sub
ss
pop
shl
jl
and
ja
fwait
mov
push
cmp
test
lods
mov
add
push
gs
rorl
loop
mov
and
sbb
adcb
arpl
jl
dec
or
xorl
out
sbb
arpl
out
push
push
mov
mov
and
stc
out
or
loope
xlat
out
lahf
pop
popa
and
int
call
and
cwtl
test
call
fwait
addr16
cmp
sub
cltd
dec
jbe
filds
xor
outsl
xchg
or
xor
or
push
jle
bound
push
pop
add
push
movsb
xchg
popa
and
mov
stc
sbb
jbe
inc
lods
loopne
dec
arpl
iret
in
sbbb
addb
push
push
cmp
test
push
test
lods
jno
popa
sbb
shlb
imul
jecxz
xor
push
jg
mulb
pop
ret
push
aaa
roll
xor
add
roll
fwait
dec
pop
cmp
fnstcw
push
sub
mov
dec
xor
hlt
jmp
imul
jle
xchg
pop
or
pop
lods
into
mov
jmp
out
dec
jne
xor
jo
scas
dec
lcall
jno
xchg
jge
subl
dec
dec
mov
pop
pop
jp
in
jno
cltd
sub
xor
push
pop
mov
sbb
mov
xchg
add
pop
cmc
lcall
mov
jae
xchg
jno
int
iret
sub
xor
adc
leave
stos
repnz
gs
mov
jp
insb
lcall
clc
inc
fsubrl
fxch
and
and
pop
lds
xchg
or
pop
mov
fisubs
push
repnz
gs
fsubrs
cs
adc
xlat
rcl
xchg
sub
fidivl
xchg
lcall
loop
mov
dec
lods
mov
inc
xchg
jp
lea
pop
jbe
cltd
jle
negb
cmp
mov
test
cmpsb
jns
lcall
pop
xor
jne
push
inc
mov
xor
std
stc
add
das
cmpsl
int3
int3
pop
add
mov
mov
cmp
xchg
mov
sub
inc
pop
mov
and
lock
sub
les
adc
frstor
fadds
jbe
imul
sahf
xor
cmp
sub
mov
add
dec
dec
push
and
jge
and
jae
sar
int3
or
or
pop
jmp
jo
push
sbb
xor
out
lods
outsb
xchg
jg
mov
inc
aam
mov
popf
roll
test
in
and
sub
test
das
jmp
cmp
xchg
mov
mov
cmpsb
lods
push
shrb
cmp
sbb
pop
clc
xchg
movsl
scas
setb
pop
ja
test
cmp
stos
and
sub
pop
rorb
gs
lahf
data16
aaa
gs
int3
test
pop
cmp
cmp
mov
sbbl
xchg
lret
mov
cmp
cmpsl
rcrb
inc
aas
enter
lahf
xor
insb
pop
sub
lret
movsb
insb
and
stos
fidivrl
mov
cmpl
pop
in
inc
pop
adc
div
fdivl
or
inc
jg
fldl
xor
push
push
cltd
push
add
xor
push
fiaddl
push
push
scas
les
mov
pusha
pop
lods
std
mov
in
jo
shlb
aam
jmp
sbb
testb
rcll
jp
sbbl
sub
je
int
mov
add
out
pop
jns
xchg
mov
jo
and
pop
dec
cwtl
test
mov
sbb
pop
aam
lret
cwtl
lret
nop
sub
mov
shl
inc
jge
push
fisubrl
dec
xor
add
sbb
xchg
fidivl
pop
testb
or
in
sarb
stc
lret
jge
push
dec
fadds
ret
mov
xchg
xchg
add
and
xor
xchg
je
xchg
jo
mov
push
jmp
mov
cmpsb
clc
mov
xchg
pop
mov
inc
xchg
xor
and
pop
stc
imul
push
mov
insl
mov
mov
ljmp
clc
sbbb
cwtl
pop
mov
jecxz
pop
lds
test
mov
pop
and
loopne
and
push
mov
hlt
inc
pop
mov
cltd
xor
out
adc
int
sbb
and
mov
jmp
dec
mov
out
outsl
sub
mov
adc
sbb
iret
inc
jae
mov
or
mov
repnz
mov
push
mov
call
lret
or
sub
cmp
pop
out
imul
or
mov
leave
lods
outsl
push
sbb
xor
cltd
sbb
xor
add
mov
fmull
add
lea
mov
out
sbb
dec
movsb
outsb
or
fisubl
rorb
xor
nop
dec
and
stc
lcall
data16
test
mov
cmp
js
repnz
fs
jle
and
bound
out
lods
xchg
jns
push
pushf
cwtl
pop
aas
iret
xchg
and
xchg
mov
mov
xchg
mov
sbbb
inc
outsb
and
out
sbb
mov
mov
ds
sbb
xlat
inc
std
mov
rorb
add
cmp
xchg
test
mov
test
jecxz
xchg
cmp
dec
mov
sub
jge
rclb
cmp
jge
push
sbbl
je
popa
pop
clc
xlat
jge
inc
add
push
iret
inc
mulb
xchg
pop
cltd
jecxz,pn
mov
lods
add
jnp
lock
imul
push
mov
push
lods
sub
cmp
aas
jmp
xor
and
fdivr
rol
xor
sarb
test
mov
mov
out
add
ds
or
adc
mov
sahf
jne
mov
adcl
push
xor
and
aaa
and
push
add
clc
xor
push
and
out
mov
add
sub
data16
cwtl
out
add
fmulp
jecxz
mov
dec
jl
jge
dec
or
fsubrl
shll
mov
pop
testb
inc
sub
nop
fbstp
hlt
shll
cmp
xlat
mov
test
push
in
es
dec
jg
out
cwtl
cltd
and
pop
mov
xor
jmp
dec
pop
xor
xlat
pop
and
jb
inc
xor
fsubs
adc
adc
push
repz
sub
dec
or
mov
mov
push
cmpsb
imul
cmp
or
fistpll
cmp
push
xor
loope
test
test
jns
jp
mov
jnp
rcl
jge
jle
test
popf
stos
inc
push
add
xlat
adc
or
fidivrs
ja
movsl
add
lahf
shlb
add
mov
inc
sbb
sbb
adc
cltd
sbb
inc
out
pop
test
out
arpl
mov
jbe
cltd
lret
or
mov
icebp
dec
mov
les
loop
out
je
scas
or
stos
cmpsb
inc
insb
mov
push
inc
fidivrl
aam
push
lock
out
jl
xor
or
je
sub
testl
out
or
push
jae
xchg
add
push
in
cmp
outsl
cs
cmp
cmp
imul
jl
ljmp
inc
push
sub
clc
push
adc
sbb
or
jb
movl
lods
sub
or
and
and
test
insb
xor
stos
arpl
lds
out
mov
js
push
loopne
pop
incl
push
dec
ja
or
fisubrl
aaa
addr16
cmp
xchg
mov
mov
mov
or
leave
push
or
jns
shlb
or
fs
leave
lcall
dec
pop
mov
pop
mov
decb
std
mov
xchg
xchg
mov
repnz
rcrb
in
cmp
int3
out
test
cmp
hlt
or
loopne
rolb
out
pop
pop
out
gs
stc
rclb
int3
sbb
ret
imulb
jge
rcrl
sbb
and
iret
pop
or
pop
sti
dec
mov
mov
test
and
leave
shlb
and
fistpl
js
sub
dec
inc
fwait
adc
orb
sbbb
aad
mov
cmp
jbe
nop
mov
std
dec
push
or
shrb
cld
movsl
mov
mov
mov
clc
jp
xor
lret
fcoml
insb
sbb
scas
movsb
mov
mov
push
je
int
jl
aam
xor
dec
bound
jne
push
or
sub
les
out
or
sarl
popa
inc
std
sbb
sti
sub
leave
or
pop
fnsave
in
jnp
lock
mov
test
push
mov
popf
adc
ret
lcall
mov
pop
das
xchg
or
das
mov
mov
jbe
shll
sbb
fmull
cmpsl
push
jae
cmpb
xor
mov
aas
xor
xchg
jbe
push
push
dec
add
add
push
mov
fisubrl
ret
sub
fstpl
jl
jbe
test
mov
jge
scas
and
dec
scas
jb
jnp
add
aas
mov
mov
inc
sub
leave
pushf
outsb
add
jno
xor
cli
inc
lods
fcomps
aam
sahf
enter
push
js
ja
mov
dec
xchg
sbb
lea
and
decl
mov
and
repz
out
jecxz
or
scas
and
in
cmp
xchg
mov
lds
daa
xor
out
das
lock
adc
ljmp
jno
lods
xchg
fstpl
mov
add
rcrl
mov
rorb
enter
pop
imul
and
xor
mov
xchg
decb
xor
dec
inc
stos
mov
cmp
inc
xchg
rcr
popf
and
mov
subl
cmp
cmp
shlb
dec
outsl
pop
pop
jp
js
cmp
sbb
jns
cmp
xor
push
mov
in
ficoms
pop
sti
inc
fidivrl
shrl
mov
cmp
hlt
inc
dec
fiadds
pushf
jae
es
stc
mull
pop
hlt
jecxz
jmp
cs
pop
cmp
adc
cwtl
inc
aaa
movzbl
stc
arpl
mov
je
and
and
mov
push
sbb
fisttps
sbb
inc
iret
push
mov
mov
inc
arpl
popf
adc
movsb
repz
mov
xchg
xlat
jecxz
inc
adc
xchg
push
push
jmp
adc
mov
jg
out
or
pop
pop
bound
fistpl
jge
leave
loope
cmp
negl
loopne
sbb
xchg
in
mov
jle
js
es
dec
in
add
pusha
in
cmc
nop
add
inc
and
popa
fs
out
das
test
outsl
fisubs
pop
fdivs
sub
arpl
inc
rcr
or
jg
icebp
and
adcb
jae
jp
stos
aam
rol
fucomip
push
repz
outsl
fcoms
cmpsl
inc
lods
mov
push
rcll
mov
fnstenv
ffreep
push
jb
addb
add
daa
mov
inc
add
fldcw
scas
idivl
lods
inc
mov
or
in
jno
div
roll
push
push
cmp
jbe
rcll
stos
out
jmp
pop
je
cld
adc
xor
adc
xor
cmp
mov
scas
jne
mov
mov
repnz
jbe
fnstsw
inc
call
dec
pop
jmp
ja
sub
popf
hlt
in
mov
xchg
lock
stc
subl
mov
insb
and
orb
mov
pop
xchg
icebp
incl
pop
lret
das
or
call
into
pop
bnd
mov
jnp
mov
push
jecxz
sbb
pop
mov
push
dec
ficoms
inc
or
mov
or
sub
jnp
sbb
add
mov
out
jns
pusha
outsl
lahf
pop
cmp
scas
pop
cli
xlat
daa
test
mov
and
pop
xlat
inc
dec
sbb
out
data16
sahf
lcall
imul
lock
imul
inc
cli
test
adc
fistl
testb
sbb
sub
mov
cmpl
xor
adc
ret
inc
sarl
cmp
and
xor
jne
xorl
inc
fisubl
rol
mov
js
ss
fcom
outsl
push
in
cmp
inc
and
in
mov
adc
fiadds
cmp
sbb
push
rolb
inc
or
shlb
negl
lds
in
jns
push
in
jge
cmp
jo
outsb
xor
sqrtps
fldcw
dec
inc
data16
xchg
pushf
mov
lahf
or
xchg
sbb
rorb
ljmp
lock
iret
xchg
fbld
cwtl
adc
jae
mov
mov
mov
clc
cmp
push
jo
mov
out
sahf
and
jns
add
mov
loop
pusha
mov
movsl
mov
add
inc
sahf
imul
pop
ljmp
sbb
mov
loope
push
mov
pop
cli
test
xchg
dec
xor
fldl
xchg
push
in
pop
fsts
std
push
or
cld
ret
sbb
jp
xor
jnp
xchg
ds
int
pop
pop
add
push
nop
jp
js
andb
mov
aad
push
aaa
cmp
jne
lahf
bound
fcomi
mov
stos
movsl
lods
test
or
cmc
jmp
and
ds
xchg
cwtl
hlt
out
cmc
cmp
lods
fstps
aam
dec
aaa
pushf
std
sarl
out
pop
addr16
and
test
xlat
loop
jne
inc
xchg
mov
sahf
cs
sti
add
push
xchg
jno
das
negl
push
jno
jns
push
sub
dec
sti
pop
jp
jno
lods
xchg
test
inc
inc
imull
lret
fdivl
pop
xor
enter
mov
adc
sbb
push
jecxz,pn
aam
cmp
jne
mov
loop
push
mov
out
pop
sub
loopne
inc
inc
pop
or
mov
and
sahf
cs
out
xchg
pop
cmp
inc
fsubrl
je
es
lahf
lock
cld
mov
lret
add
cli
dec
inc
loope
movsl
lds
mov
push
xor
test
pop
cld
mov
pop
mov
inc
jmp
fs
testb
cmp
push
stos
sub
popf
filds
test
sti
mov
rcr
pop
repz
andl
imull
clc
jbe
mov
pop
lret
or
into
xchg
std
inc
jge
leave
mov
dec
cs
scas
ja
add
jno
push
mov
stos
fsts
mov
jp
xlat
call
and
lods
adc
inc
xchg
iret
aaa
call
xor
in
inc
xchg
sub
mov
in
jae
or
pop
fldl
cli
dec
loop
cltd
cmp
cwtl
adc
stos
jl
pop
dec
mov
jno
pop
pop
inc
int3
pusha
insb
repz
xchg
pusha
jge
pushf
test
adc
mov
jb
scas
mov
xor
test
mov
xchg
mov
roll
or
jle
cmpsl
mov
aas
stc
les
inc
push
cmp
add
jl
push
cmp
jae
xchg
mov
ds
ja
bound
sbb
pop
popf
jne
cmpsl
scas
cld
cmpsb
xor
add
ds
mov
rcrb
jmp
mov
faddl
cld
std
insb
inc
xchg
daa
jbe
or
mov
outsb
push
sahf
fmulp
cwtl
enterw
mov
ret
in
and
cltd
andl
mov
jge
loope
movsb
repz
xor
push
dec
sub
pop
mov
mov
inc
mov
mov
ljmp
sbb
xchg
outsb
pop
orl
ds
xchg
mov
add
xor
add
jnp
lea
push
repz
stos
outsl
or
fadds
or
add
cmp
push
cmp
loopne
hlt
push
fcoml
inc
ds
pop
fstpt
dec
dec
xor
jl
sbb
std
lret
xchg
push
add
dec
pop
ret
mov
push
in
repz
sub
adc
xor
xchg
mov
xor
sub
lcall
cmp
jge
pop
les
sub
pop
lds
xchg
pop
lcall
jbe
push
push
push
adc
xorb
mov
push
shll
sub
pop
scas
mov
mov
push
call
outsb
inc
mov
sahf
adc
pushf
or
inc
cltd
mov
pop
test
sub
in
dec
pop
das
sbbl
and
mov
add
jmp
adc
push
push
cmpsl
xchg
push
ljmp
cmp
icebp
adc
imul
inc
leave
jge
add
insb
mov
add
adc
fldenv
xor
inc
and
push
imul
push
ja
aas
ret
cmp
fwait
push
mov
repnz
add
mov
xchg
sbb
jne
es
push
dec
mov
vcvtsi2sdl
rcrb
out
jo
cmc
scas
repz
xchg
jb
jne
xchg
sbb
pop
loope
dec
sahf
pushf
sub
sub
mov
lret
test
inc
int3
test
bswap
inc
iret
jo
jbe
lret
test
adc
int3
xchg
pop
iret
in
scas
sub
sbb
mov
sub
or
xchg
cmp
shll
neg
lock
notl
mov
inc
frstor
lds
cmp
xchg
add
and
push
jge
lcall
dec
inc
xor
mov
test
inc
and
and
jecxz
cmp
loopne
div
and
mov
push
jbe
stos
scas
pop
ljmp
stos
nop
or
loopne
stos
push
adc
add
cmp
sbb
jmp
cmc
mov
or
stc
inc
push
lret
cs
or
fists
add
into
cmc
shll
rcr
inc
addr16
js
in
xor
push
ss
mov
adc
pushf
fdivl
iret
ja
fmull
pop
movsb
rorb
fcmove
jae
xchg
or
popa
cmpsb
dec
add
and
sub
test
loopne
jge
andb
push
in
cmp
gs
mov
xchg
xor
lds
push
arpl
cmp
je
push
xchg
nop
and
push
fiaddl
mov
pushf
cld
lret
test
ret
repz
andb
sub
mov
lods
subl
into
and
outsb
fs
xor
mov
cltd
insl
push
adc
jbe
iret
adc
imul
mov
stos
repnz
jnp
cmp
test
inc
call
ror
shlb
lds
push
push
jmp
cmc
xor
ds
mov
mov
jg
cmp
jns
fcomps
cmpsb
and
cli
ficoms
hlt
xor
inc
and
mov
inc
cwtl
jle
aas
mov
cmp
add
into
loop
sub
ds
push
lods
jecxz
mov
popa
jmp
xor
or
cli
popa
mov
stos
mov
stc
jo
inc
cmc
jmp
xchg
popa
popf
mov
mov
out
hlt
dec
xor
jbe,pn
sbb
sub
add
sbb
xchg
dec
addr16
repnz
jo
cmp
or
or
sar
xor
add
sub
and
out
fstpl
getsec
lret
mov
pop
sub
add
pushf
mov
add
xor
jne
cmp
jb
dec
pop
sub
sbb
cmp
sub
outsb
pusha
or
iret
pushf
call
loop
cmp
js
cmp
out
cmpsb
sbb
mov
dec
mov
mov
jo
ljmp
adc
ret
push
pop
adc
xlat
jns
mov
inc
pop
mov
rolb
add
sbb
lret
js
push
in
jnp
xor
cmp
xchg
lret
add
push
lods
mov
mov
mov
mov
fbstp
xchg
pop
movsb
pop
dec
jmp
out
or
mov
jmp
xor
adc
sti
lcall
pop
addr16
mov
ljmp
je
sbb
add
inc
xor
mov
mov
int3
inc
jge
mov
sbb
mov
push
pushf
sub
xor
je
xor
mov
je
arpl
movl
sbb
and
mov
fnsave
stc
ljmp
lret
sbb
xchg
mov
iret
and
mov
in
in
loop
in
rorb
and
cmc
jae
inc
popf
mov
pop
mov
into
repz
sub
or
test
sbb
cli
mov
sbb
pop
cmp
xor
aas
je
std
push
dec
inc
mov
jg
lods
lods
fsubr
out
es
repz
push
jns
lock
add
pop
gs
or
in
push
push
clc
ret
cmp
fs
cld
adcb
loop
mov
jno
and
shll
mov
cmc
sar
in
sub
lods
dec
imul
andl
sti
sti
pop
fisubrl
shrl
popf
xchg
stc
push
std
xchg
mov
lahf
and
call
inc
pop
rclb
jns
push
pushf
and
add
enter
inc
dec
xchg
push
jg
hlt
sbb
mov
push
bnd
jbe
sbb
inc
cli
mov
mov
add
or
jp
test
pop
xchg
xor
loop
cmp
xor
mov
mov
mov
push
mov
ds
cli
add
jp
call
dec
sub
lock
lea
lods
sbb
insb
jno
nop
icebp
inc
add
dec
ret
xchg
mov
push
mov
scas
jbe
cld
pop
adc
aaa
cltd
dec
xlat
xchg
pop
and
dec
lret
adc
dec
jecxz
sub
mov
in
jg
cltd
movsl
mov
aad
leave
dec
cmc
out
adc
popa
pop
inc
mov
mov
leave
add
sub
lock
or
and
repz
mov
sbb
leave
aad
pop
or
pop
leave
bound
xchg
inc
and
sub
pop
stc
sub
mov
lcall
shlb
movl
xchg
fcmovb
mov
add
mov
xchg
fnstsw
mov
shr
xlat
sbb
pop
loop
sub
push
cmp
pop
inc
mov
adc
jp
popa
inc
aaa
int
outsl
mov
mov
out
pop
xlat
loope
mov
sub
xor
fsubrl
lods
xchg
stos
fsubl
mov
lds
pop
sub
in
out
mov
shll
cmp
ss
add
lcall
test
mov
jge
jle
mov
and
cltd
pop
jle
daa
ss
imul
pop
mov
mov
mov
fmuls
mov
sbb
pusha
push
inc
decl
test
add
pop
insl
cmp
cmpsl
xchg
pop
cmc
xchg
xchg
subb
inc
insb
push
xorb
xchg
mov
scas
loopne
fnstsw
fs
in
jb
xlat
pop
inc
pop
dec
gs
sub
mov
inc
mov
adc
fcomp
mov
imul
dec
xor
fldcw
mov
jo
fucom
dec
subb
xchg
sub
ficoms
jle
icebp
cmp
lahf
rcr
mov
add
dec
stos
das
mul
lret
das
call
cmp
fcoms
cmc
movsl
mov
mov
adc
insb
xchg
pop
repnz
ret
pop
xor
cmp
xor
imul
gs
mov
mov
testl
inc
imul
lods
mov
jo
adc
roll
lcall
adc
shufps
xchg
xchg
sbb
cmp
pushf
xadd
lret
test
mov
ljmp
and
bound
dec
jge
dec
dec
sub
mov
lcall
dec
jg
ror
aam
fs
loop
out
rclb
gs
sub
scas
mov
xchg
cltd
dec
cs
test
pop
and
dec
jmp
test
xor
jnp
aam
roll
idivb
cmp
fdivrp
imul
dec
cmp
push
mov
fcmovu
xor
shr
in
int
pop
out
or
scas
decb
cmpsl
lret
adc
into
and
adc
ds
pop
xchg
xor
or
aam
cld
cmp
stos
mov
out
popf
mov
popa
fmul
outsl
dec
push
xor
xor
shl
cmp
xchg
xchg
mov
push
ljmp
mov
cmp
mov
push
and
cs
adc
adc
xlat
cli
adc
jno
mov
sti
stos
push
jnp
pop
mov
jnp
imul
jp
ret
outsl
test
jmp
cmp
shl
xor
cmpsb
roll
cmpsb
cwtl
arpl
xchg
imul
or
add
js
add
sti
addr16
pop
cli
in
add
inc
mov
push
jecxz
enter
sub
push
mov
jge
push
shl
cltd
xchg
mov
std
adc
or
fmulp
cmp
mov
sbb
iret
mov
mov
pop
out
popa
std
sub
ja
rcll
mov
int
ror
add
xchg
test
pusha
or
sbb
out
pop
jp
int
fcompp
mov
dec
stos
push
es
popf
mov
cmp
mov
cmp
add
stc
lods
movsl
xchg
fmull
push
aam
shlb
cmp
cmc
push
cmp
flds
ja
fildll
add
andb
fsubrl
and
mov
mov
jmp
push
mov
mov
sub
xchg
sahf
movsb
int
sti
cmpsb
dec
int3
and
inc
dec
test
push
dec
add
lret
and
pusha
push
divb
dec
push
daa
sub
adc
es
push
sar
daa
rcrb
je
call
fs
ficoml
xlat
stc
push
cs
pop
xchg
pop
add
dec
lret
pop
dec
arpl
negb
cmp
and
stc
jne
mov
sahf
test
inc
xor
cmp
and
pop
jg
cmp
push
or
jecxz
push
xlat
imul
sbb
imul
lret
cltd
mov
push
mov
sarb
std
ret
inc
sbb
adc
push
mov
out
insb
out
and
mov
mov
out
mov
shrl
sbb
or
orl
inc
stos
jl
cld
mov
imul
out
out
scas
into
int
push
jo
jle
dec
les
shll
inc
jns
inc
push
es
pop
lock
xchg
mov
mov
in
xlat
add
mov
mov
mov
add
pop
adc
xchg
dec
inc
shll
push
jle
addr16
lds
push
adc
xor
ljmp
daa
fiaddl
or
stos
lds
jg
dec
pop
push
or
jg
push
pop
xor
push
and
dec
insb
xor
adc
lahf
jl
addb
and
mov
xor
pushf
xchg
dec
mov
dec
test
fnstcw
inc
clc
imul
adc
push
or
outsl
lea
outsl
jmp
xchg
aaa
xor
out
repz
cmpsl
dec
adc
jbe
stc
mov
cwtl
mov
mov
pop
push
mov
sahf
dec
out
or
xchg
mov
es
mov
js
mov
aam
pop
mov
sbb
gs
xor
pop
and
ret
aad
push
mov
sbb
lds
xchg
pushf
in
stos
mov
xchg
sub
mov
mov
cmp
jge
rorl
pushf
loopne
dec
fmul
mov
and
jns
out
les
sub
and
add
xor
aad
sub
cmp
out
outsb
cmp
pop
mov
xchg
jae
fldcw
lcall
aaa
ja
pop
and
pop
fiadds
cwtl
imul
das
xchg
or
pop
mov
ret
shl
cwtl
push
push
rorl
int3
jbe
cmp
fwait
mov
jp
xchg
push
arpl
iret
mov
mov
xchg
inc
jo
mov
push
sbb
cld
lcall
enter
aaa
fs
les
xchg
data16
jp
adc
push
mov
je
mov
lds
in
cmp
sarl
sub
xchg
mov
movsl
popa
and
inc
mov
and
lret
std
mov
push
mov
xlat
dec
insb
aad
and
gs
inc
loope
push
jg
stc
push
sub
nop
or
or
push
adcl
test
test
xchg
ret
xchg
insb
je
pop
pop
add
cmp
pushf
dec
loope
and
mov
ret
mov
jecxz
pushf
mov
cmp
shlb
outsb
xor
aam
test
mov
xchg
sub
push
leave
aam
into
pop
xchg
aam
adcl
mov
inc
inc
xchg
lcall
addr16
lods
lea
and
fs
push
inc
fs
xor
js
stc
push
test
cmp
dec
loope
mov
push
insb
leave
cmp
sbb
cwtl
lret
xchg
sub
jbe
jmp
pushf
pushf
inc
aaa
mov
mov
jb
icebp
add
iret
pop
addr16
lock
cs
xor
test
jns
cli
out
shrl
dec
jns
or
shll
cwtl
stos
vucomiss
sbb
add
inc
fwait
pop
jge
repz
mov
adc
sub
scas
pop
and
std
and
push
dec
sbb
push
andb
cmc
sbb
mov
add
adc
fdivl
cmc
cld
data16
fs
repnz
xor
sub
rcll
inc
jns
push
lods
pop
ss
cmp
out
aaa
push
daa
int3
imul
outsl
je
data16
mov
or
data16
cmp
mov
jo
rorb
aam
mov
xchg
cld
adc
adc
xchg
or
shrl
test
mov
cmp
aaa
mov
aaa
pop
scas
fmul
incb
je
mov
jo
cli
adcl
data16
icebp
enter
dec
repz
push
adcl
aaa
sti
pusha
dec
push
call
ss
fmull
movsb
fcomi
push
dec
loop
inc
repz
sbb
out
mov
nop
xor
fs
loope
cmp
pop
xor
aad
xor
ror
xchg
adc
imul
out
clc
pop
aaa
imul
movsl
cld
sub
adc
pop
sub
inc
sbb
cmp
cmp
xor
xchg
mov
ss
lcall
bt
xchg
fisubrl
mov
movl
sarl
bound
xlat
fisubl
je
lahf
popa
jp
je
xchg
adc
mov
lahf
into
fbld
orb
xchg
inc
jnp
and
mov
dec
mov
mov
add
shl
and
in
dec
je
add
push
sbb
addr16
xor
pop
mov
fsubp
cltd
mov
scas
mov
cmp
lods
mov
inc
mov
push
out
hlt
test
jmp
sbb
repz
addl
xchg
int
cli
xor
mov
in
clc
cmp
cld
mov
cmpl
test
data16
xchg
fadd
pop
or
pushf
sbb
jb
mov
cmp
ret
inc
test
sub
std
mov
cmp
mov
aas
and
repnz
jno
jae
mov
mov
mov
mov
es
lods
cmp
sub
pop
dec
shl
jne
xor
frstor
aad
jne
push
cmc
mov
pop
test
ljmp
out
cmpsl
cmp
fadd
xchg
and
adcb
mov
mov
inc
adc
adc
ljmp
xorl
test
push
push
add
dec
jno
es
push
icebp
sub
flds
jbe
mov
pushf
cmp
pusha
cmp
fwait
addr16
xor
subl
mov
cld
int
popf
outsl
mov
arpl
and
ret
push
shlb
and
sbb
xchg
repnz
mov
inc
test
int
pop
mov
les
sbb
push
fwait
test
fdivrs
sahf
aam
mov
or
popa
movsl
cmp
sbb
jne
mov
cmpsb
mov
shll
mov
and
mov
aaa
sbb
dec
das
adc
pop
in
pop
ljmp
fwait
cmp
fwait
cmp
ss
imul
jg
sbb
jno
out
lret
daa
lock
lret
stos
std
stos
push
out
cmp
bound
cmp
dec
mov
in
sbb
jns
adc
repz
data16
dec
movsb
out
sub
push
or
lods
mov
xor
into
lock
xor
pop
leave
ret
daa
imul
mov
cmc
xchg
je
xor
inc
inc
cmpsb
orl
adc
scas
mov
aas
cmp
pop
dec
adc
icebp
leave
fldcw
fwait
out
or
add
pop
adc
gs
jb
cmp
repz
in
mov
movsl
push
lods
divb
lret
cmp
lcall
loopne
stc
xor
cmpsb
fs
push
sbb
mov
sub
cmpsb
and
outsl
out
pop
pop
mov
adc
pop
sub
ficoml
add
mov
rorb
or
les
jl
clc
pop
ds
sub
pop
sub
clc
jnp
fsub
ss
fldpi
add
xchg
jns
sahf
in
enter
adc
lods
jmp
clc
pop
xchg
pop
into
rol
outsl
or
mov
jl
push
mov
stos
cmpsl
mov
xor
sbb
mov
adc
pushf
loop
sub
icebp
xchg
or
and
xor
or
mov
sbb
outsb
mov
mov
or
cmp
pop
add
inc
lea
xchg
std
pop
xchg
popa
cmp
stos
mov
sti
jo
jle
inc
xchg
adc
push
or
mov
lods
ljmp
out
daa
add
sub
cs
jle
aaa
shr
cmp
or
cmp
mov
jg
movsl
cmpsb
movsb
xor
outsl
ds
in
jg
mov
shl
pop
leave
add
filds
cltd
inc
fwait
push
aad
xchg
push
xchg
addr16
inc
push
int
xlat
es
stos
or
shr
inc
pop
out
dec
xchg
imul
xor
mov
das
mov
outsl
push
loopne
mov
push
push
and
lret
ja
addr16
xlat
inc
loop
or
icebp
icebp
cmp
inc
sbb
push
cmp
loopne
or
lds
negl
cmp
es
pop
mov
pushf
lock
fdivl
lods
and
dec
jecxz
sti
jbe
rorb
pop
mov
fistpl
or
fidivs
xchg
push
cmc
clc
and
loopne
scas
stos
pushf
mov
mov
ret
lret
outsb
insb
scas
pop
or
mov
dec
ss
cmp
ds
les
mov
pusha
mov
adc
xorl
lret
rolb
fidivl
call
popa
test
es
into
push
insl
je
xchg
xor
xor
dec
cwtl
ljmp
cltd
idivb
sbb
jno
add
ss
flds
jmp
pop
es
imul
shlb
mov
clc
orb
outsl
mov
add
jecxz
loopne
repnz
ja
movsb
por
dec
mov
jnp
mov
mov
pop
cmpsb
neg
fs
das
js
cmp
dec
popa
orb
ret
aad
cmp
int
outsb
fdivrs
filds
cmp
in
mov
sbb
and
push
mov
adc
dec
push
out
jns
in
cmp
lock
mov
adc
repz
jae
aad
cmpsb
out
xchg
fnsave
hlt
push
add
mov
out
fcmovnbe
aad
sub
cmpsl
sub
rcr
sbb
fdivr
pop
int3
scas
jecxz
outsb
or
not
lds
dec
insl
push
push
mov
cld
xor
sahf
pop
fldt
jmp
sbb
sub
lret
test
fwait
and
mov
enter
mov
fst
cmp
int
add
and
push
mov
push
pop
movsb
int3
test
xor
mov
fisubrs
push
cmp
pushf
es
loopne
mov
stos
mov
shrl
mov
shlb
mov
jmp
push
jae
sub
int
pop
test
and
push
fdivs
mov
jae
xchg
mov
fdivrs
mov
or
mov
js
pop
into
jbe
inc
adcl
add
sbb
jne
popa
das
jmp
xchg
popf
pop
push
ss
bnd
mov
push
sub
fdivr
movsb
mov
or
mov
inc
in
cmp
and
cwtl
lods
icebp
ret
push
shr
insl
jg
pop
rorl
out
arpl
sbb
xchg
jns
je
jno
mov
or
dec
adcl
and
mov
popf
test
sub
test
xchg
repz
ljmp
pop
fcomps
pop
sbb
mov
push
rcll
mov
xor
push
or
in
ret
jae
ljmp
dec
mov
sub
xorb
lahf
aam
outsb
stos
insl
in
bound
inc
jnp
pop
test
es
dec
mov
add
cld
aaa
ds
inc
lods
jne
sbb
or
sub
push
xchg
loopne
push
adc
mov
ficoml
test
loopne
pop
pop
mov
pop
push
lret
pushf
fistpl
push
scas
dec
pusha
cltd
repnz
jns
adc
cmc
pushf
mov
and
adcb
and
stos
add
movsl
jge
push
pop
stos
jle
push
xchg
and
pop
das
shlb
mov
jp
xchg
jl
xor
or
hlt
test
sub
push
paddusb
int3
sbb
mov
roll
lods
rolb
in
iret
sub
add
aam
popa
push
add
and
sub
movsl
dec
aad
out
shl
sbb
call
inc
leave
mov
adc
mov
push
push
lock
mov
pop
mov
repz
insl
movsb
and
sub
lret
sbb
pop
cmp
sub
xchg
sub
mov
aas
adc
je
xchg
or
mov
out
adc
mov
test
xlat
in
jle
inc
test
movsl
cltd
jns
xchg
repnz
push
sti
dec
sbb
xor
in
das
xchg
in
add
stos
je
movsl
and
mov
sbb
in
out
filds
jmp
push
sub
fdiv
movsl
fadds
push
mov
leave
movsl
out
pop
xchg
cmp
add
scas
lahf
mov
enter
rcrl
imul
xchg
or
and
dec
mov
pushf
cld
or
jmp
gs
movzwl
imul
push
cmp
in
cmp
fsubrs
nop
xchg
call
inc
lea
adc
push
and
push
xchg
add
dec
rolb
xor
fidivrs
out
arpl
pop
call
mov
xor
mov
ficompl
cld
test
sbb
ja
jb
test
scas
lcall
and
enter
or
loop
movlhps
and
ret
cmp
ds
pusha
rcrb
js
pop
lret
in
pop
dec
jl
das
arpl
sub
xor
pop
fnstcw
fsubs
or
fs
imul
lods
mov
xchg
js
outsl
mov
dec
push
mov
into
sbb
imul
sub
xchg
push
mov
or
jg
mov
les
fs
adcl
push
movsb
cwtl
push
inc
int
cwtl
dec
sub
decb
loopne
adc
mov
aad
bound
dec
xor
or
rol
sti
es
aad
stos
inc
nop
loop
dec
addb
or
imul
or
sub
push
jno
das
pop
cli
dec
xchg
adc
test
mov
and
sub
call
mov
aas
sub
add
mov
mov
imul
pop
adc
stos
test
jae
mov
sbb
inc
push
dec
push
test
arpl
adc
jmp
cli
hlt
mov
popa
push
lds
dec
push
aad
and
int
xor
push
rcl
add
out
adc
sub
push
aas
mov
jp
pop
mov
ds
or
lds
and
inc
scas
ja
xchg
aaa
add
add
jl
sub
mov
pop
jnp
sub
adc
arpl
xchg
rcll
push
lahf
inc
xchg
sbbl
pop
sbb
pop
out
mov
lods
out
fs
shlb
pop
xor
jg
ret
jle
cmpsl
cltd
jl
sub
cmp
cmp
mov
inc
fildl
jp
and
fdiv
push
mov
sbbl
lahf
push
sbb
adc
adc
filds
int
nop
int
or
test
adc
or
cwtl
and
inc
neg
xchg
pop
xor
jno
xor
sbb
test
mov
adcl
sub
pop
and
sub
sub
sbb
xchg
add
and
test
or
push
dec
pop
jno
and
rorb
push
mov
lock
movsl
loope
sbb
mov
movsl
insl
aaa
jecxz
stos
sbb
ds
adc
bswap
cmp
imul
or
sub
sub
pusha
dec
mov
push
add
aas
ljmp
addr16
and
mov
ret
in
xchg
push
add
repz
pop
test
or
xchg
push
aaa
insb
hlt
jnp
xor
popf
cwtl
sub
push
pop
dec
xchg
xchg
pop
outsl
mov
jno
out
xlat
cmp
push
mov
jnp
xorb
sub
add
imul
fadds
jo
xchg
dec
jp
aad
dec
fmuls
jecxz
push
push
mov
jne
flds
pop
out
cmp
pushf
xor
stos
jno
mov
mov
sbb
test
cmp
outsb
adc
daa
pop
test
add
sub
int
push
adc
mov
or
fldcw
call
stos
mov
loop
imul
dec
xor
mov
ss
xor
dec
addr16
jo
and
stc
test
sbb
lcall
lea
inc
adc
aad
divl
fsubrl
iret
movsb
pop
aas
push
decb
push
pop
mulb
push
cmp
push
pop
or
sub
cs
dec
cmp
insb
mov
mov
or
add
mov
inc
out
popa
movsb
sahf
xchg
jmp
push
icebp
sbb
outsl
inc
nop
cmp
mov
mov
cmp
sbb
xor
sbb
mov
pop
jg
mov
sub
inc
std
mov
daa
cli
scas
lods
ret
rcrb
fisubs
addr16
jmp
cmp
push
mov
push
xchg
push
push
or
pusha
cmp
insb
adc
xor
mov
inc
mov
inc
lods
pop
imul
and
mov
sub
scas
jl
fwait
lcall
mov
xchg
adc
subb
lds
pushl
ss
es
mov
jbe
add
jmp
cmpsl
fdivrl
mov
ds
iret
mov
mov
gs
push
lods
inc
jle
rcl
cmp
aad
mov
inc
sbb
xchg
push
xor
cmp
sahf
mov
cmp
loope
dec
pop
js
andl
fwait
add
add
fs
sbb
mov
data16
add
jno
fsubr
sbb
xchg
fstp
cmp
nop
lds
ljmp
fiaddl
xor
add
lahf
and
mov
and
testl
push
jns
loopne
pcmpgtb
xchg
addr16
pop
aad
adc
pop
mov
inc
jb
mov
shll
clc
shll
xchg
cmp
sub
mov
loope
js
out
loope
xchg
popa
iret
jecxz
xchg
and
je
jo
rcrl
rorl
fisttpll
lea
lcall
jmp
scas
push
jmp
cmp
cmp
sub
idivl
adc
push
mov
loop
aas
roll
add
adc
call
and
and
mov
jbe
fsubs
shll
jne
decl
inc
out
fxch
push
xchg
push
and
cmpl
std
aas
cmpl
sti
xchg
jge
sbb
pop
cs
adcl
scas
jns
pop
nop
call
js
aaa
daa
aad
roll
cld
mov
fcoml
push
and
cwtl
jl
add
cmpsl
push
xor
mov
mov
loope
mov
imul
cmpsb
mov
sub
cmp
xor
push
mov
in
adc
lret
adc
jmp
test
push
xchg
lret
xchg
testl
stos
cmp
pop
fsin
aas
jl
jo
ror
ds
mov
jle
add
imul
xor
shlb
sub
xchg
cmp
mov
fsubrs
cmp
xchg
mov
lods
or
inc
xchg
dec
inc
xchg
xchg
pop
jae
jo
push
in
dec
rdtsc
jmp
imul
pop
push
mov
fcom
push
dec
insl
jecxz
jmp
and
xor
scas
push
in
mov
cmp
sub
jmp
pop
out
pushf
aam
add
out
dec
and
dec
sub
daa
pop
out
mov
icebp
jp
dec
lahf
xchg
js
fisubs
imul
cld
repz
insl
aad
mov
ja
mov
dec
mov
popa
rorl
inc
jge
fcompl
addr16
mov
mov
out
clc
sbb
inc
stc
inc
lea
loop
jle
pop
daa
jo
xchg
add
xchg
pop
or
cmp
lahf
adc
aas
into
iret
roll
cs
mov
mov
add
popf
bound
and
call
push
pop
loopne
xor
and
pop
int3
and
sti
or
or
outsb
imul
test
insl
xor
inc
cli
jb
mov
lock
into
hlt
fldl
ja
fwait
add
add
push
push
or
and
shrl
bound
xor
iret
xlat
or
push
sub
mov
aas
xor
test
add
or
mov
daa
out
mov
add
sbb
cmp
stos
jmp
sti
mov
arpl
push
ret
xor
or
xchg
jp
movsl
mov
sbb
icebp
and
and
aas
adc
xor
je
mov
adc
cli
shlb
pop
in
xchg
add
xchg
pop
int
sub
pop
push
and
or
daa
int
mov
inc
mov
and
movsb
push
dec
jne
testb
leave
and
xchg
fidivrl
jo
mov
and
jp
leave
rorb
jl
jmp
push
adc
xchg
xchg
mov
inc
add
in
int
and
mov
mov
push
nop
adc
push
cli
testb
out
and
into
add
loopne
test
lods
popa
jmp
cmpl
cmpsb
lods
xchg
jle
fs
jmp
or
out
or
or
stc
icebp
mov
dec
add
into
push
ds
adc
cmpsb
mov
pop
les
jb
inc
xor
cmpsb
cmpsb
cmc
pushf
push
in
xchg
popa
push
jl
in
aad
insl
rclb
bound
mov
mov
push
lret
sti
or
adc
enter
dec
push
aad
sub
dec
mov
adc
xor
mov
in
jge
sub
xchg
and
inc
scas
orl
xlat
cli
and
rcrl
inc
add
or
sub
xor
dec
lock
or
popf
jbe
or
dec
jmp
rorl
sub
test
xor
or
xlat
and
push
pop
mov
lods
iret
lret
popa
fistpl
popa
and
jne
and
imul
lds
push
jno
mov
mov
or
das
out
test
jnp
pop
mov
test
sarl
scas
xchg
push
mov
dec
mov
pop
movsl
shrl
ret
mov
cmp
push
pushf
xor
aas
dec
cmp
pop
data16
push
fs
orb
movsb
ret
repz
sti
arpl
sti
lcall
das
push
faddp
fiaddl
es
push
ret
mov
add
imul
inc
xchg
cld
sbb
jle
out
lock
cld
sub
pop
das
fisubs
add
les
aas
pop
lahf
enter
jmp
pop
adc
xchg
aad
dec
pop
and
or
adc
push
mov
leave
inc
imul
cmp
ror
stc
roll
mov
inc
sbb
dec
jle
jb
adc
cmp
cmp
gs
inc
sub
mov
nop
inc
mov
cmp
cltd
xchg
rorl
jle
jne
shll
into
xor
and
aam
mov
mov
cmp
mov
push
lcall
out
sbb
stc
fldl
inc
rolb
loope
xor
mov
mov
repz
ss
dec
jbe
out
cmp
or
sub
pusha
aam
idiv
lea
jg
test
rorl
and
adc
nop
adc
xchg
test
adc
xchg
mov
std
mov
shll
iret
xchg
mov
lret
adc
mov
fcomip
daa
inc
inc
ds
andb
movq
mov
rcrl
aad
push
push
pop
stos
mov
lret
lret
mov
fsubr
jp
adc
test
outsb
and
bound
mov
mov
not
mov
xlat
xor
mov
sbb
int3
adcl
dec
lret
or
arpl
adc
scas
rcpps
pop
rep
dec
sub
and
repz
cwtl
mov
jg
test
push
mov
cmc
mov
inc
xchg
jg
fidivrl
and
xlat
dec
jno
lret
or
mov
cmpsl
cmp
pop
pop
pushf
les
jg
dec
ljmp
sub
jb
jnp
sbb
int3
mov
lret
adc
xor
ljmp
in
xchg
xchg
fs
jg
push
adc
icebp
mov
push
cmp
mov
sbb
xchg
ja
sarl
test
jmp
lds
insb
inc
test
cmpsb
push
mov
stos
aas
dec
inc
andl
mov
dec
decl
or
scas
daa
jecxz
shrl
bound
loope
mov
out
pop
add
or
jecxz
faddl
cmp
ss
ss
imul
xchg
dec
ret
das
mov
jno
into
iret
addb
pushf
jl
dec
ja
stos
mov
lods
cmp
scas
pop
sub
mov
fisttpll
ficompl
sub
mov
rolb
rorb
push
lahf
stc
cli
loopne
xor
sarb
mov
cmpb
out
pop
lret
jp
sbb
sbbb
iret
loop
push
and
inc
es
mov
ss
xchg
popf
fimull
lret
lahf
fistpl
xor
test
or
jnp
push
fmull
mov
sbb
sbb
dec
jnp
aaa
je
pushf
xor
mov
or
adc
sub
enter
stos
mov
fistpl
imul
mov
mov
push
jp
add
pop
shll
sub
xchg
push
mov
pop
jge
leave
test
in
or
push
mov
cmp
cwtl
pop
test
ficoms
shll
cmp
xchg
shrb
pop
stos
out
ffreep
lods
pop
xchg
pop
lock
xor
test
sub
data16
and
lcall
ja
and
or
in
xchg
or
aam
adc
inc
aad
or
or
imul
adc
loope
mov
shll
xchg
or
outsl
shr
sbbb
mov
test
sub
ja
ret
jae
movsl
pushf
rolb
jne
jne
jecxz
test
rol
sar
scas
xor
popa
dec
sahf
lahf
out
jne
jns
ret
into
lock
cmp
jge
mov
or
jp
leave
and
cwtl
jle
cmp
add
dec
test
add
pushf
outsb
jbe
es
pop
jnp
movsb
mov
sub
push
insb
xor
xor
and
gs
gs
sahf
push
into
inc
out
stos
ja
int3
xchg
pop
jle
dec
push
cmp
stos
mov
and
adc
test
test
mov
sub
mov
mov
push
or
stc
pop
divl
push
ja
inc
cmc
add
fs
mov
das
jecxz
cmc
insl
xor
xchg
aam
jne
idivl
xorl
mov
imulb
lods
sub
inc
in
lds
test
dec
cmc
mov
push
mov
adc
mov
sbb
pushf
mov
dec
add
into
dec
rolb
inc
sbb
mov
lret
xchg
jecxz
aam
ret
xor
sub
leave
enter
cmp
popa
xor
cmc
lods
add
sbbb
inc
mov
pop
es
test
or
pop
negl
xlat
stc
push
jnp
dec
inc
movsb
xor
pop
mov
inc
iret
mov
inc
mov
outsl
push
std
testb
popf
or
push
aad
bnd
xor
jge
cmpb
lods
out
adc
dec
sarb
popf
inc
add
sbb
mov
lahf
pop
xchg
mov
je
shrl
fildll
sbb
es
mov
dec
sbb
add
pusha
dec
outsb
pop
mov
mov
cmp
das
mov
sti
sub
sbb
xchg
aam
popa
pop
rorb
xchg
mov
sbb
pop
pop
and
mov
sub
std
out
cli
mov
popf
cmpl
mov
dec
mov
les
push
repnz
imul
icebp
scas
adc
imul
mov
scas
out
mov
daa
nop
lret
sub
rolb
test
or
repnz
andb
pop
pop
ss
mov
pop
dec
adc
or
lahf
pop
sub
test
fldln2
lret
pop
imul
push
xchg
push
flds
or
adc
dec
inc
fcoml
pushf
mov
or
push
sahf
into
lds
pop
push
jge
loope
or
jae
sbbl
nop
loop
mov
cmp
pop
mov
xor
sbbb
jns
fidivrl
fcmove
fildll
outsb
or
mov
je
aas
sbb
xlat
xor
jmp
lds
mov
fwait
sub
shlb
jne
nop
shlb
push
adcb
xchg
push
pusha
dec
xchg
dec
mov
dec
mov
jg
in
push
pop
push
add
xor
adcl
dec
adc
xlat
loopne
xchg
je
repnz
fwait
add
sahf
add
enter
jns
pop
rorb
aam
rclb
sub
fnstcw
pop
xchg
lds
inc
cwtl
mov
cld
pop
test
pop
push
rcrb
mov
jb
xchg
imul
push
rclb
jmp
fwait
in
xchg
xchg
movl
sub
inc
insl
insl
cmp
jno
rcr
mov
fcmovnb
and
ss
into
mov
or
popf
ljmp
jmp
xchg
and
call
xorb
dec
jae
inc
fmulp
or
cmp
test
test
sbb
lahf
popf
in
fistps
push
adc
ja
mov
xchg
jle
xor
add
fnstsw
inc
mov
adc
sbb
push
and
out
sti
fwait
push
push
fld
or
mov
imul
inc
inc
adc
pop
cmpsb
adc
popf
outsl
jmp
daa
mov
bound
cwtl
push
xchg
dec
hlt
add
loop
dec
rorb
cmp
xchg
xchg
stos
and
add
lds
stc
imul
mov
fcoms
mov
lea
mov
push
mov
mov
roll
aad
mov
shll
sti
dec
loop
rcrb
aaa
lret
inc
loopne
push
cmc
out
out
test
inc
jnp
outsl
daa
push
repnz
inc
ss
or
xchg
add
pop
mov
aas
out
es
leave
xchg
lret
pop
subb
mov
mov
sbb
dec
xchg
pop
mov
push
fistl
insl
jae
jo
pop
rcr
test
pushf
and
mov
xor
mov
jbe
mov
xchg
jo
imul
mov
xchg
inc
bnd
push
or
call
jp
push
test
jnp
xor
mov
or
adc
mov
sbb
cmp
outsl
ja
cli
cltd
inc
mov
jbe
or
sti
inc
int
bnd
pop
and
push
cmp
das
adc
jecxz
enter
push
add
loopne
cmp
popa
std
fisttpll
jl
out
lds
andb
add
cmc
or
xor
inc
outsb
out
push
popf
shlb
mov
les
jnp
pop
mov
shr
add
movsb
jmp
push
es
shl
and
mov
loope
popa
sub
sub
inc
in
fdivrl
xor
cwtl
repnz
cmp
pop
cmpsl
jo
cmpl
arpl
sbb
mov
scas
push
jae
cmpsb
loop
repz
adc
outsb
sbb
rcll
sub
mov
aad
mov
cmpsl
xlat
or
jbe
cmp
or
pop
sub
enter
gs
and
sbb
lret
imul
mov
xor
daa
cmpsb
or
sbb
pop
inc
push
dec
mov
or
mov
push
ja
lods
cmpl
mov
repnz
mov
and
lds
pop
cmp
out
pop
nop
xchg
movsb
nop
jmp
inc
push
push
ret
inc
mov
sbb
filds
int
int
jo
jbe
pop
test
or
cmpsl
int3
adc
xor
dec
pop
push
lahf
push
sahf
loopne
not
repnz
movsl
lods
insb
in
outsl
xchg
nop
mov
clc
int
inc
ret
mov
mov
lahf
dec
into
cmp
mov
jae
fwait
and
fistpll
negb
outsb
inc
push
cli
es
mov
std
outsb
scas
repz
mov
jne
jmp
out
out
add
movsb
cld
outsb
push
inc
jno
scas
push
aaa
jmp
dec
dec
movb
dec
repnz
into
mov
or
jmp
negl
cli
addl
push
dec
fldenv
shr
and
test
mov
jae
sbb
cmp
imul
cmp
jbe
lods
loop
or
or
or
add
sub
inc
mov
ja
das
pop
mov
enter
xchg
mov
dec
push
adc
dec
test
shr
jp
int3
add
movsb
ret
addb
fcompl
in
push
pop
xchg
jne
push
push
pop
fiadds
jae
dec
push
enter
xchg
mov
sbb
push
adcl
push
fisubrl
sarl
ja
add
lock
lea
enter
fs
xorb
sbb
adc
dec
aaa
sbbl
pcmpeqw
rolb
mov
add
in
pop
mov
cmpsb
lea
inc
sbb
ficomps
arpl
pop
and
shll
lcall
mov
push
mov
mov
dec
aaa
outsl
push
imul
xchg
or
jg
sbbb
and
sub
in
stos
xchg
insl
lods
loope
cltd
cs
out
cmp
addr16
out
cmp
pop
hlt
xor
cmp
mov
mov
fxch
stos
mov
scas
adc
dec
aaa
out
dec
push
xor
add
scas
dec
jg
aaa
cmp
daa
xor
out
fcmove
insb
mov
or
or
insb
xchg
adc
mov
and
sbb
mov
addr16
test
cwtl
push
imul
dec
mov
movsl
idivl
shl
add
push
add
sti
xchg
repz
int
jnp
jmp
cltd
punpcklbw
mov
xchg
xor
xor
mov
xchg
push
dec
fs
adc
mov
popf
js
push
lret
icebp
xchg
mov
mov
adc
pop
ret
imul
xchg
sub
jmp
dec
cmp
out
out
jno
sbbb
incb
dec
adc
and
scas
sbb
daa
or
incl
in
inc
cvtps2pi
int3
mov
sbb
ljmp
mov
icebp
pop
nop
shl
jbe
xchg
xchg
lods
movsb
sub
xchg
xor
mov
jb
adc
out
cwtl
xchg
jnp
jge
lret
lods
push
aad
push
jp
xor
and
out
rcrl
out
push
jg
pusha
xor
mov
out
mov
lods
cmp
sub
xor
xor
in
lahf
neg
ret
sbb
out
sub
jo
inc
lds
add
loope
incl
das
fildl
dec
sbb
out
int3
mov
orl
jnp
repnz
mov
or
repnz
decl
dec
mov
jle,pn
mov
ds
rolb
ret
and
aaa
jnp
xor
jnp
stos
cmpb
stc
sarb
jg
in
cwtl
or
stc
push
inc
and
xchg
jle
and
cmp
loopne
jp
add
pop
lret
mov
pop
mov
js
stos
ds
adc
stos
int
push
mov
dec
stos
jno
mov
adc
xchg
xor
dec
sub
cmp
test
icebp
dec
leave
cmc
and
jg
outsb
mov
mov
push
cmpxchg
adc
xchg
xor
xor
cwtl
inc
add
lcall
or
xchg
pop
xor
out
test
lcall
dec
sub
mov
sub
or
jl
xchg
xlat
pop
sarl
mov
xor
push
icebp
aam
into
dec
out
shll
ret
or
idiv
scas
jl
dec
arpl
mov
shl
fsubl
mov
scas
jnp
lahf
adc
sub
call
pop
ret
xchg
jbe
enter
xchg
enter
lods
cmp
jecxz
mov
jmp
push
mov
mov
xchg
lahf
test
adc
pop
je
cmp
movsl
rorl
mov
fstpl
sub
mov
push
bound
mov
test
stc
lret
xchg
mov
and
cmp
mov
clc
out
nop
pop
rcll
pop
adc
gs
sarl
inc
cwtl
rclb
aaa
xchg
in
scas
movsl
cld
test
mov
insb
bound
mov
fsubrp
movsb
fcmovnbe
sti
insb
les
adcl
pop
dec
jo
arpl
dec
pop
das
xchg
out
push
int3
inc
cmp
cli
push
sub
subb
pop
add
inc
cld
movsb
inc
jl
push
and
push
stos
sub
fcompl
xchg
cmpsb
mov
mov
aad
rcll
sub
sub
jp
inc
mov
xchg
pop
cmp
cli
push
int3
dec
in
add
sbb
mov
movsl
inc
aas
cmp
insb
in
leave
insl
jbe
div
mov
mov
xchg
adc
push
cltd
and
mov
mov
pushf
xor
xor
icebp
iret
mov
repnz
movsl
xchg
scas
sti
mov
push
movsb
or
arpl
lock
mov
ds
aas
in
outsl
fs
ds
push
enter
shl
jge
in
xlat
push
popf
out
xchg
daa
mov
faddl
pop
sbb
sbb
jmp
jecxz
daa
popf
inc
push
cmp
cmp
clc
mov
or
rcr
mov
fldl
nop
ja
jge
xor
adc
pop
push
fsubrp
arpl
lods
stc
cmp
sub
and
adc
xchg
pushf
push
adc
in
push
iret
or
mov
rclb
gs
imul
mov
cwtl
mov
test
subb
scas
jmp
xchg
insb
sahf
mov
mov
shl
pop
xchg
mov
pusha
stos
push
jae
and
dec
or
int3
int3
or
leave
push
int3
pmuludq
iret
sbb
jecxz
push
jne
pop
fbld
mov
xor
out
cmp
sbb
dec
movsl
push
cwtl
xchg
lcall
inc
sarb
insb
xchg
xor
mov
aas
cmp
mov
sti
stos
lcall
mov
jno
nop
cmc
cltd
or
subb
cmp
in
in
xor
mov
mov
cmp
aad
dec
lds
pop
cmp
xchg
xor
rorl
sbb
jb
cld
call
ret
jae
cwtl
gs
and
rorb
es
jnp
fisubrs
mov
pop
add
movsl
imul
daa
push
jb
fiadds
mov
dec
loopne
aad
mov
lret
xor
fsubrl
test
cld
mov
cmp
out
rcrl
shrb
fcomps
outsl
loope
jmp
dec
mov
jb
jns
loop
js
fwait
lcall
or
mul
mov
mov
rorb
push
inc
jb
push
jecxz
shll
dec
out
insl
incl
scas
xor
cmp
stos
lcall
jge
mov
test
fsts
fcoms
ds
imul
sahf
sub
sub
fwait
ljmp
adc
sub
cmp
cwtl
sub
sti
adc
push
dec
dec
sub
xchg
xor
cmp
mov
mov
adc
xor
lods
jge
mov
mov
mov
xchg
adc
push
pop
aad
outsl
xchg
mov
and
inc
mov
lods
and
lahf
inc
or
stc
iret
stc
enter
outsb
mov
les
sbb
mov
adc
out
adc
or
cmp
or
sub
je
push
stos
lahf
inc
cmc
xchg
dec
dec
popf
or
fmuls
jp
mov
rorl
xor
inc
pop
inc
mov
lahf
les
in
sar
push
lret
jno
pop
pushl
jg
dec
cli
push
dec
clc
xor
add
push
mov
test
decb
push
bound
ss
fbld
mov
push
sbb
test
cmpl
push
cmpsl
push
jge
imull
mov
push
cmc
pop
addl
mov
mov
mov
jno
js
and
idivl
imul
adc
ret
shll
sub
mov
imul
in
ss
aaa
lcall
or
ja
xchg
outsl
dec
fdivrl
xchg
mov
or
cmp
or
in
xchg
mov
ljmp
inc
pop
pop
xor
test
dec
cld
mov
test
push
push
ja
jo
xchg
jge
sub
addl
cmp
ja
jnp
mov
xchg
adc
adc
push
rcll
mov
inc
sbb
shlb
sbb
inc
dec
mov
lock
pop
shl
loop
mov
or
imul
mov
cmp
xchg
xchg
pushf
stos
clc
data16
mov
movsb
add
fidivrs
mov
inc
mov
in
mov
mov
jg
sub
daa
mov
pop
mov
or
pop
psubusb
movsl
fldl
les
mull
mov
jmp
mull
jnp
pop
jo
loope
mov
push
out
or
inc
call
fistpl
jge
sub
rorl
mov
lret
lret
jnp
out
mov
outsl
jnp
out
jmp
pushf
sbb
push
and
bound
sbb
cs
mov
xor
je
cmp
mov
adc
sti
mov
xchg
cld
or
divl
xchg
in
test
inc
icebp
jno
mov
sbb
out
loopne
xchg
jge
idivb
loopne
push
sti
outsl
fwait
lea
popf
subl
push
jecxz
ret
test
fcompl
inc
cmpsl
jne
xchg
cmp
insl
sub
test
or
lock
xor
mov
or
lahf
push
in
call
dec
dec
dec
shr
push
push
movsb
mov
pop
add
stos
mov
adc
dec
fs
push
jl
ret
testb
xchg
sbb
fwait
mov
cwtl
xor
xlat
xchg
cmp
ret
push
xor
inc
mov
cmp
cmpsb
mov
int3
mov
gs
lods
ds
or
jle
cmpsb
pop
sbb
lods
xchg
inc
insl
jno
push
add
or
jp
dec
js
shll
shufps
mov
dec
push
std
cli
arpl
mov
and
push
lods
lds
push
subb
or
xchg
cmp
dec
rclb
fcompl
or
xor
adc
fcos
mov
xor
imulb
push
xlat
lcall
and
ror
mov
pop
sarb
and
mov
pop
mov
mov
cmp
sbb
mov
inc
inc
sub
pop
sahf
or
aas
jbe
lds
mov
sub
mov
mov
dec
mov
dec
xchg
jle
push
jg
in
call
push
add
mov
cwtl
test
mov
rorl
xlat
or
add
or
jb
mov
pop
add
sbb
mov
pop
lds
jnp
insb
cmp
mov
lods
adc
dec
sbb
outsl
cmp
cwtl
and
aas
xor
or
outsb
cmp
adc
sub
enter
and
int
aas
jo
dec
xor
pop
cmp
test
aaa
xor
test
and
out
gs
or
sar
inc
mov
cmp
fimuls
fistpl
dec
push
imul
fstpl
sub
sbb
lret
sbb
bound
pop
xchg
lea
jnp
inc
jle
sahf
iret
addr16
insb
or
test
fiadds
inc
add
repz
xrelease
mov
and
mov
rcrl
or
insl
fs
mov
lods
jb
cld
mov
xor
icebp
dec
xchg
and
push
rorl
cs
cmpl
push
jecxz
rep
cs
sbbl
push
add
imul
clc
dec
icebp
roll
mov
sub
sub
das
dec
and
and
xlat
movsl
mov
xor
loope
dec
or
or
or
movsb
or
add
xchg
mov
rorb
adc
ja
rsm
sub
sbb
clc
int3
fnstenv
mov
data16
stc
sti
jp
jbe
cmp
cwtl
insb
cli
js
icebp
insb
aad
cltd
inc
rcl
push
test
outsl
adc
dec
mov
or
push
xchg
enter
and
adc
xor
popf
loopne
jae
jecxz
outsl
pop
subl
xor
xor
jnp
mov
cltd
movsl
push
ror
inc
jp
in
or
and
fstpl
and
mov
xchg
push
pusha
jg
mov
icebp
bswap
cmp
jb
in
sub
jp
sub
repz
ja
fiaddl
in
test
xlat
pop
shrb
mov
lds
andb
cmc
and
add
faddl
mov
fldln2
jnp
add
pop
or
cli
test
mov
repnz
fimull
dec
lcall
jne
inc
mov
pop
ds
repz
push
sub
pop
test
scas
and
jae
fs
ss
jp
pop
aas
cmc
lds
push
out
mov
repz
fcoms
pop
idivl
mov
in
mov
repz
es
ss
fildll
pop
rcl
test
in
out
cmpb
dec
and
jg
jmp
pushf
addl
mov
mov
add
cmp
xchg
rcl
mov
mov
push
or
pop
adc
test
mov
inc
or
dec
ret
outsb
lahf
test
jnp
jne
fdivr
and
xor
xor
mov
popa
cmp
mov
jp
shlb
mov
test
mov
mov
popa
cltd
sub
dec
jo
push
and
lock
and
jmp
clc
cmc
or
pop
pop
mov
push
in
mov
rolb
sahf
lret
ror
adc
test
imul
mov
mov
xlat
addr16
dec
sbb
mov
sbb
push
sbb
addr16
dec
or
aaa
rol
mov
imul
es
in
addb
sar
test
or
lea
fwait
dec
addl
jle
lret
dec
lods
call
in
sbb
sti
shrl
or
inc
pop
out
stc
mov
push
sbb
pusha
jno
cmc
call
cli
and
jg
mov
sbb
movsb
loop
aad
xchg
or
movsb
adc
mov
lods
and
xchg
xchg
movsl
mov
xchg
adc
aas
mov
call
xchg
notb
test
mov
pusha
fldl
sub
push
jge
inc
mov
adc
hlt
shll
sarl
dec
lds
loope
mov
insl
xor
jmp
das
loope
ss
pop
sbb
mov
mov
jg
adc
push
push
sti
cmp
push
pop
je
outsb
insb
push
mov
jp
cs
mov
push
sub
xorb
mov
ds
enter
imul
inc
repz
jo
mov
fistpl
icebp
sbb
mov
loope
dec
xchg
jp
mov
enter
aam
rorb
mov
dec
adc
mov
ss
mov
fcompl
mov
push
xor
insl
pop
fs
sbb
negl
insl
ljmp
jne
test
mov
xor
xor
add
cmp
inc
mov
outsl
and
les
xor
jnp
and
add
xor
rolb
bound
movsb
enter
fsubr
xchg
cmp
push
fidivs
test
cmp
in
xchg
out
lock
add
inc
push
dec
fincstp
cmp
cmpsl
fimull
sti
dec
fcompl
call
in
cmc
push
out
mov
aas
cmp
test
insl
orb
aam
daa
jge
mov
imul
aam
cld
dec
shll
sbb
scas
xchg
test
js
inc
and
adc
inc
sub
clc
sbb
xchg
gs
inc
aam
in
cmp
inc
mov
mov
out
divl
xor
add
push
das
or
arpl
test
xchg
push
bnd
dec
sub
loopne
sbb
cmp
jp
cs
add
xchg
rorb
sarl
subl
test
dec
std
mov
jp
xchg
inc
outsb
movsb
push
notb
pushf
push
push
mov
dec
jae
shrl
andb
sti
repnz
sarl
notb
adc
dec
push
cmp
dec
sbb
push
jecxz
mov
and
cmpb
jno
fisubrs
cmc
pop
insb
mov
cmp
movsb
jl
sbb
add
sbb
or
out
mov
gs
dec
cmp
inc
dec
aad
jl
xchg
mov
jmp
sub
cltd
jecxz
hlt
jne
out
cmc
jp
stos
inc
pop
jmp
lcall
push
push
xor
iret
sub
inc
js
cmp
cmp
mov
and
adc
cmp
out
adc
bound
pop
xchg
xor
adc
fstl
das
roll
daa
cld
jge
mov
cmp
lahf
dec
aam
lods
stos
dec
push
push
mov
aas
mov
sub
shll
outsb
adc
pop
mov
ret
stc
or
je
adcl
sub
sub
mov
push
sub
in
ret
push
xchg
jl
outsl
mov
xlat
adc
push
xchg
inc
repz
or
scas
cld
mov
incl
movsb
jle
sbb
add
rcrl
mov
je
dec
cmpsb
sti
xor
adc
jecxz
iret
aas
rorl
jno
daa
mov
loopne
int3
jno
push
clc
shlb
dec
xor
xchg
das
inc
jmp
adc
aaa
aad
es
dec
pop
js
jp
cmp
pop
jl
adc
outsb
bound
add
movsl
pushf
rol
repz
inc
lcall
cmp
dec
push
push
mov
ds
ja
xor
stc
hlt
scas
je
jl
cli
sbb
sbbb
pop
in
int
jnp
xor
cmpsl
shrb
xchg
fimull
inc
mov
mov
into
stos
mov
out
push
ss
incl
js
mov
loopne
aad
out
sub
cmp
xchg
or
pop
jb
jmp
cmpsl
pop
push
dec
lock
rol
cmp
xchg
cmp
sbb
cmpl
xchg
sbb
mov
sbb
and
or
aad
mov
lods
dec
xor
jnp
pop
jbe
sub
jle
mov
clc
mov
scas
mov
mov
mov
pop
jb
ret
sub
ljmp
bound
jbe
in
pop
jl
jns
pop
xchg
add
sub
dec
mov
xor
jno
sbb
mov
mov
xor
mov
pop
push
loop
cmc
push
jmp
mov
pusha
in
dec
jmp
inc
data16
in
xor
shl
pop
jge
test
cmp
es
ds
xchg
inc
dec
mov
push
mov
xchg
popa
push
xor
movsb
add
inc
mov
or
push
adcb
sbb
pop
cmp
lods
rcr
ljmp
int3
in
push
loop
shrb
xchg
fnstsw
popl
std
lea
xor
push
lret
ja
imul
cmpsl
mov
dec
aam
test
sbbl
jp
push
imul
cwtl
push
lods
movsb
lret
xor
cmpsb
lret
push
and
inc
jecxz
dec
cmp
in
push
popf
mov
pushl
insb
push
cmp
nop
cmc
arpl
in
lods
jne
inc
jp
mov
push
push
outsb
int3
ja
outsl
fsubrl
hlt
sbb
nop
shlb
inc
push
mov
pop
fimuls
scas
popf
xor
loop
bound
jns
and
pop
jecxz
sti
ficoms
cmp
pop
xor
gs
cwtl
cmp
mov
dec
jne
mov
adc
mov
subl
dec
rcrl
mov
mov
inc
std
cmp
stc
adc
pop
pop
stc
outsb
call
cmpsl
mov
aas
cmp
lahf
andb
jl
loope
cmpsl
pop
inc
sbb
loop
push
mov
sbb
mov
bound
test
push
shrl
in
dec
es
fistps
lret
sub
jne
arpl
outsb
xor
add
lods
push
insb
push
push
sbb
dec
insb
gs
pshufw
xor
pop
mov
push
or
sbb
adc
push
jmp
sbb
cmp
shll
push
sti
pop
mov
xor
stc
int3
adc
mov
fnstenv
xchg
jb
popa
mov
test
pushl
out
imul
adc
jbe
sub
jl
cmc
xchg
mov
out
hlt
add
and
call
dec
mov
mov
mov
jge
movsl
rol
icebp
xchg
fidivrl
outsb
push
pop
pushf
les
add
dec
outsb
dec
mov
movsl
jmp
ja
mov
jno
push
lods
cmpsb
lret
mov
repz
jbe
mov
int3
repnz
or
mov
mov
push
rclb
xchg
xor
out
inc
sti
inc
stos
std
and
dec
shrb
hlt
inc
inc
mov
addr16
pop
xor
cmp
cmc
push
cmpsl
nop
mov
sbb
std
dec
inc
or
ret
mov
cmp
negl
xor
xor
pusha
clc
inc
test
das
dec
fcoml
xor
sbb
inc
mov
sbb
mov
stos
xlat
mov
adc
test
repz
xlat
adc
inc
pop
ds
daa
fmuls
pop
jl
xchg
ret
jp
scas
test
push
pusha
gs
lock
fbstp
fwait
mov
jle
fiadds
add
lret
loop
sbb
aam
add
lods
adc
xlat
jo
dec
out
cmp
mov
loope
fmull
rolb
imul
jp
cmp
imul
scas
xor
std
jns
idivb
push
out
dec
pop
push
cmp
add
iret
inc
cli
roll
iret
test
test
rcrb
ret
adc
inc
mov
sbbb
jne
inc
sarl
adc
inc
jnp
outsb
jmp
xchg
xor
jns
pop
movsb
xor
adc
es
fidivrl
out
sub
sub
xor
jp
adc
jae
dec
xor
cmpsb
js
inc
or
cmp
filds
push
fsubrs
cld
roll
sub
addb
sbb
hlt
in
outsl
stos
scas
xor
xor
mov
adc
sub
imul
xlat
negl
in
sub
and
in
pop
cmp
add
mov
cmpsl
test
stc
mov
push
scas
ja
nop
scas
and
jl
ja
test
cmpsb
scas
mov
or
push
mov
gs
xchg
int
filds
inc
aad
stos
inc
movsb
xor
insb
ret
sub
mov
mov
shrb
mov
out
inc
mov
or
jae
sarb
or
mov
fwait
fwait
rolb
fdivl
int
inc
fiadds
pop
dec
cmp
stos
dec
xor
inc
mov
mov
pop
push
sub
pushf
pop
das
pushl
cli
dec
addl
cmp
fwait
or
in
or
scas
into
ja
jge
enter
mov
lock
xchg
cmp
mov
and
dec
adc
cmp
std
mov
pop
aam
jmp
aas
sub
xor
cmp
mov
dec
lret
ja
mov
les
imull
je
add
xchg
pop
push
xlat
sub
sub
aad
jmp
fwait
or
cmpsb
ficomps
mov
inc
add
cmpsb
xor
adc
inc
das
mov
cmp
gs
mov
push
aam
mov
jge
ret
push
inc
lcall
dec
jmp
dec
cmp
or
mov
fcoml
xor
imul
popa
decl
xchg
mov
jle
repz
pop
enter
sub
cmpsl
cmpsl
adc
lods
dec
xor
mov
out
pop
xchg
outsl
add
lret
xor
jnp
out
or
cmpsl
bound
sahf
dec
sti
std
into
xchg
ss
mov
loop
daa
in
mov
arpl
sarb
sub
dec
sti
xor
inc
popf
pusha
push
loop
cld
and
insl
cmpsl
mov
fstl
jecxz
push
orl
adc
mov
push
mov
in
js
into
xchg
ffree
repnz
dec
jmp
ret
arpl
pop
in
pop
push
xor
idivb
push
dec
mov
fmul
ret
adc
dec
mov
aad
bound
lcall
js
stc
fcmovnb
pusha
push
cmpsb
and
stos
ret
daa
adc
mov
adc
int
mov
test
adc
inc
movsb
cmp
jecxz
add
mov
add
outsl
icebp
push
sbb
cmp
std
insl
movsb
test
mov
add
dec
test
fisubrl
xacquire
cwtl
mov
dec
fucom
ss
push
adc
add
call
sub
rcrb
dec
xlat
adc
xor
aaa
inc
clc
xchg
push
test
int3
lar
pop
jns
popf
fwait
pop
mov
cmpsb
jbe
movsl
add
jno
jne
inc
inc
mov
xchg
movsl
movsl
cmp
adc
push
add
and
cwtl
ljmp
mov
inc
mov
movsl
dec
or
test
or
movsb
push
lods
and
jp
and
sub
mov
mov
call
ss
imul
lahf
adc
lods
cmpsl
test
das
jge
test
cs
scas
in
jae
ss
xchg
das
adc
inc
sahf
cmp
loopne
add
test
inc
mov
orb
xor
and
inc
cs
mov
loopne
xchg
mov
mov
xor
in
dec
jp
lods
insl
jne
xchg
dec
sub
bound
jnp
test
lds
push
mov
insl
sbb
stos
mov
shl
dec
mov
movsb
push
cmp
pop
xlat
das
push
sbb
pop
sahf
test
popa
out
movsb
int3
cmpsb
sbb
bound
call
rcrl
inc
iret
inc
mov
mov
cmp
dec
negl
lock
stos
cld
push
jno
insb
or
mov
cmp
dec
lods
addr16
cs
fdivrl
mov
mov
sbbl
inc
cmp
out
cli
jp
mov
pop
rclb
rcrl
addr16
inc
pop
rcrl
cmp
or
dec
mov
sbb
je
dec
aad
scas
and
sub
xor
add
mov
jnp
stc
or
sarl
and
les
das
push
shlb
push
mov
mov
les
sbb
shl
mov
inc
ret
lcall
mov
imul
sbb
sbb
pop
fsubrs
jge
fwait
in
xchg
sbb
mov
pop
inc
stos
mov
cmp
sahf
cmc
sar
mov
ja
arpl
push
ret
dec
lds
lretw
das
orl
outsl
jns
je
lahf
cltd
pop
ljmp
sbb
xchg
push
lcall
xchg
jae
imul
out
dec
lret
xchg
inc
or
cmpsl
xor
cltd
mov
shlb
dec
lahf
inc
or
or
cmp
test
lock
fnstsw
dec
ficompl
test
hlt
mov
icebp
xchg
movsl
aad
in
pop
or
pop
pop
aam
jle
outsl
arpl
dec
leave
xchg
icebp
mov
adc
shl
pusha
dec
sbb
inc
orb
inc
sub
mov
ret
jb
popf
pop
or
mov
add
cmp
sub
fldt
jns
dec
dec
xchg
sarb
or
test
xchg
jbe,pn
lret
mov
decb
push
cld
pop
lods
and
leave
addl
fsubs
int
daa
outsb
lods
sti
push
mov
sbb
jmp
inc
mov
adc
xor
pop
push
cmpsb
insl
ficomps
stos
aad
push
mov
fcoms
pop
scas
adcl
add
adc
xchg
add
daa
mov
mov
frstor
cwtl
aaa
sti
fildll
and
mov
loope
mov
cwtl
mov
cli
lret
mov
xor
fsubs
mov
mov
es
push
and
sahf
in
movsl
stos
notb
or
adc
ja
sbb
xchg
cmp
mov
push
add
adc
sbb
fsts
inc
adc
shlb
cs
cmp
icebp
sub
int
sbb
dec
push
and
out
jbe
jns
lahf
aam
push
daa
and
sbb
loop
std
push
xlat
int
sbb
mov
shlb
sub
int
xchg
cmp
pop
xor
call
add
xor
imul
push
pop
fistpl
xor
in
inc
stc
popa
jns
out
leave
sub
xchg
popf
aas
dec
pop
test
les
out
and
add
cmpsl
push
cmpsb
fnstsw
mov
rcrb
outsb
mov
fistps
int3
mov
adc
dec
cmpb
je
pop
jnp
push
rcr
sbb
cltd
push
jmp
lock
xor
cmp
xor
aad
out
jp
adc
mov
in
enter
and
sar
aaa
sbb
lret
test
dec
xor
leave
jle
mov
out
jp
sub
or
into
popa
dec
arpl
xor
rcr
test
cmp
mov
ds
jb
mov
inc
dec
popf
jae
inc
xchg
dec
mov
mov
lds
pop
movsb
pop
inc
pushf
or
movsb
punpckhwd
pop
push
adc
sbb
jge
daa
fs
lods
xchg
cmc
mov
xor
jns
cmp
out
repz
clc
andl
mov
pop
sbb
lret
outsb
imul
daa
lahf
enter
rcrl
outsb
gs
and
push
test
push
fcmovnu
test
ds
loope
into
lds
cmp
push
adc
fidivs
int
lret
xor
mov
std
imul
sub
dec
rcrl
subl
push
repnz
lods
cmp
jns
leave
cld
push
xchg
inc
loop
jb
lret
in
adc
cmp
lods
mov
pop
push
mov
jno
adc
inc
xorb
outsl
cmpsb
fdivrs
ss
fcomps
jmp
push
xor
out
mov
push
and
fldln2
jle
pop
mov
xor
adc
int3
mov
inc
test
addr16
enter
mov
ljmp
jne
sbb
ja
xor
inc
mov
and
sbb
call
jmp
insl
xchg
fistps
enter
xor
mov
cmpl
jb
fwait
cmp
push
insb
sub
test
loope
jno
mov
xor
aas
dec
out
loop
test
aad
in
in
sub
inc
test
les
push
mov
cmp
sub
push
cmp
popf
xchg
enter
push
imul
out
clc
icebp
pop
mov
or
dec
mov
and
push
fbstp
jg
lods
arpl
movsl
push
mov
xor
std
loop
lret
sbb
push
sub
in
subb
jecxz
inc
fnsave
addr16
loop
cmp
inc
rcl
sbb
mov
mov
fbstp
cmp
pop
daa
aas
or
jecxz
xchg
dec
mov
push
cwtl
repnz
stos
stos
push
mov
in
pop
mov
xchg
xor
test
mov
sbb
or
add
dec
std
fcmovbe
pop
mov
mov
xor
fcomps
fs
jb
test
dec
out
ja
fs
xor
hlt
data16
es
push
add
outsl
jb
xchg
and
lret
xor
mov
scas
pop
dec
scas
popa
jmp
lret
insb
ja
mov
jp
sub
add
mov
jbe
outsb
push
stos
jns
inc
jbe
sbb
and
push
int
sub
addr16
cld
pop
rol
sahf
in
int
lret
push
popa
push
push
xchg
inc
push
jo
aaa
xor
mov
push
dec
sahf
jb
pop
push
nop
push
pop
jb
mov
push
aad
dec
inc
js
lret
sahf
mov
mov
ss
repz
fs
and
inc
test
lea
adc
stos
inc
enter
sbb
test
add
mov
lahf
cmp
mov
imul
cwtl
sub
inc
pop
in
mov
in
xchg
and
pop
mov
sar
jl
outsl
mov
jo
pushf
xor
pop
sbb
mov
or
inc
ret
scas
and
or
adc
push
incb
andb
fs
jg
xchg
call
xchg
mov
out
loope
jmp
loope
iret
xchg
push
pop
movsb
jp
bound
inc
cmp
sub
popf
in
in
mov
mov
push
aad
cltd
mov
imul
sbb
sbbb
mov
int
stc
fnstenvs
ljmp
clc
pop
sbb
movsb
xchg
mov
fimuls
adc
adcb
sub
aas
sti
sub
lahf
stc
add
pop
xchg
mov
ja
add
sti
lea
lds
xchg
pop
mov
pop
mov
cwtl
jle
in
loope
jmp
rolb
mov
lcall
jb
ss
addb
lds
scas
inc
pop
jmp
adc
iret
shrl
jno
add
cmpb
add
in
inc
in
push
jo
sbb
popl
push
add
mov
push
pop
cmp
outsb
sti
fwait
cs
mov
dec
mov
push
inc
dec
in
pop
lods
xchg
mov
inc
pop
stos
push
jecxz
out
mov
cmpsb
fldt
xor
mov
cmc
or
jge
mov
jecxz
ja
adc
cmp
fwait
adc
dec
dec
bound
andl
lret
xchg
xor
push
popa
dec
jae
sub
clc
cmp
subl
and
cmp
imul
pop
inc
cld
jb
dec
cmp
jb
and
in
pop
gs
aam
sti
in
sub
push
mov
imul
test
pop
xchg
pop
mov
cmp
mov
pop
sbb
nop
aaa
pop
das
mov
loopne
jle
mov
pop
je
in
or
push
push
pop
jecxz
mov
bnd
and
add
call
xchg
mov
in
mov
jmp
mov
mov
pop
cmpsb
or
ficoms
ss
xchg
mov
jp
dec
addl
dec
popf
insb
sarl
aaa
xchg
pushw
push
fstps
mov
test
clc
lds
popf
and
cld
add
push
aaa
dec
je
jp
adc
mov
jmp
sub
push
mov
rcll
int3
jae
aad
inc
ret
xchg
out
in
xchg
jmp
repz
mov
push
xchg
rolb
imul
out
jle
and
ja
sbb
test
xchg
clc
mov
dec
aam
cmp
cmpb
fistpl
call
xor
imull
sub
mov
push
les
xchg
xchg
cmp
push
ja
mov
out
push
mov
gs
loop,pn
push
or
mov
mov
xchg
mov
lret
dec
lcall
add
popf
xor
cld
push
or
mov
gs
repnz
cmp
pop
test
rcrb
ss
xor
pop
add
decl
out
clc
lods
pop
adc
and
pop
jg
dec
inc
bound
sub
push
nop
shrl
mov
arpl
xor
jge
js
fwait
inc
mov
xor
cmp
fmulp
repz
mov
rorb
fdivrs
out
jmp
mov
xor
out
mov
addb
aas
cmpl
dec
pop
and
jmp
xor
and
std
addr16
push
insb
sub
pop
push
push
gs
jle
and
ds
adc
sbb
dec
push
notl
cmp
jecxz
insl
insl
dec
dec
mov
ljmp
push
loopne
js
test
popa
pop
mov
pusha
lods
jmp
in
push
addr16
xchg
mov
mov
mov
stc
mov
cmp
adc
insb
sbb
rcr
mov
mov
adc
addr16
or
imul
dec
jns
mov
and
jb
jg
andb
sbb
xchg
addl
dec
fiaddl
sub
repnz
std
dec
inc
xor
lods
sahf
adc
aas
or
pop
mov
iret
test
push
mov
sbb
cmpsl
stos
clc
std
add
adc
or
push
sbb
cmpb
mov
or
ljmp
add
int
pop
xchg
dec
push
pop
adc
cmp
leave
cmp
bswap
mov
mov
jmp
mov
mov
xor
in
pushf
in
std
mov
fs
push
jne
inc
lret
push
adc
cmpsl
adc
pop
stc
push
mov
fistps
leave
lcall
xor
and
sub
jae
push
sbb
jg
int3
movsb
xor
xchg
xchg
mov
cmp
push
jbe
dec
pop
addb
mov
ficomps
insb
jmp
push
sbb
inc
inc
mov
ret
cmp
mov
push
inc
jbe
mov
test
imul
sahf
and
fcmovu
or
sub
pop
xor
clc
mov
lods
lcall
mov
mov
movb
hlt
sbb
mov
inc
outsb
mov
scas
xor
sub
fs
nop
imul
dec
xchg
repz
or
cmp
push
cmp
xchg
jp
mov
lods
stc
lock
in
pop
pop
dec
push
in
popf
dec
sub
insl
mov
fmull
nop
fldenv
mov
fs
push
je
aas
testb
fsubrl
and
movsl
inc
mov
fcoms
stos
mov
xchg
adc
xor
mov
jnp
mov
cwtl
adc
or
jle
lcall
repz
outsl
sub
fwait
push
mov
mov
inc
ljmp
lret
and
mov
call
xsaveopt
loope
adc
and
xor
add
add
mov
imul
xchg
dec
jo
xchg
scas
push
das
mov
cmc
sub
dec
cmp
jnp
js
addr16
ds
call
out
sub
ss
pop
pop
sarb
lss
mov
xor
jecxz
jle
jno
xor
inc
mov
ror
sbb
ret
mov
ljmp
hlt
mov
ficoml
or
ficoml
mov
ljmp
mov
adc
mov
outsl
jb
pop
jmp
mov
cmpsb
and
faddl
loope
insl
cmpsl
dec
stc
cmp
popa
sahf
loopne
push
push
enter
pop
scas
or
popf
mov
jnp
out
or
mov
in
jnp
scas
adc
and
push
lods
popa
movsb
sbb
shll
mov
fwait
test
sub
movsb
shlb
xchg
lods
stc
mov
scas
addb
sahf
sub
mov
mov
cmp
mov
mov
xor
decl
dec
add
jb
push
and
loop
test
fstpl
pop
loope
pushl
jae
pop
mov
dec
mov
in
mov
xor
fsubrs
push
andb
ret
xchg
push
push
xchg
add
pop
dec
je
fidivrl
mov
jecxz
adc
mov
stos
jl
push
push
mov
outsl
adc
mov
push
cmp
inc
push
mov
inc
add
and
outsl
stc
dec
push
adc
mov
jo
lods
add
mov
lret
pop
sti
movsl
mov
aam
addr16
fcmovbe
mov
les
or
decl
sub
popf
nop
dec
push
xor
sbb
xchg
fildl
into
dec
xchg
out
xchg
or
push
pop
jge
xorb
pop
mov
cli
mov
enter
jmp
cmpb
inc
mov
inc
imul
and
out
fisubl
jae
fldt
jp
lea
or
inc
mov
xchg
jge
daa
sub
cmpsl
jne
test
or
and
icebp
pop
aas
cmp
mov
daa
pop
arpl
ds
jo
aaa
mov
inc
insl
jb
jns
hlt
pop
pushf
push
movb
mov
adc
xor
mov
sbb
jno
jbe
inc
lahf
popf
xchg
sbb
jle
les
addl
mov
int3
sbb
insb
mov
pushf
fwait
aad
pop
and
fcomps
adc
bound
cmc
stos
adc
int3
aas
lods
mov
mov
fbstp
dec
xor
push
sub
and
inc
dec
sbb
push
xchg
scas
xor
xor
xorl
xor
lahf
out
jge
out
jae
es
adc
xchg
mov
sahf
out
xchg
cmp
cmp
pop
int
cld
sbb
repz
fwait
mov
loopne
arpl
out
xchg
push
and
cwtl
scas
aas
mov
inc
ljmp
sub
pop
ror
nop
ss
push
adc
sbb
xlat
and
xchg
outsl
enter
repz
loop
mov
xchg
div
push
scas
imul
fs
std
or
xor
xchg
push
dec
sbb
js
cmpb
ja
pop
mov
lea
xchg
lahf
fs
and
push
sbb
fwait
hlt
in
xchg
mov
ret
xor
ljmp
jnp
mov
fcomip
pop
aad
adc
rcl
fstp
lds
dec
inc
push
jge
xchg
insb
cmp
popa
sub
lcall
dec
out
mov
insb
fsubrp
push
test
repz
mov
cld
jae
aam
mulb
lods
inc
iret
and
xor
sub
add
aaa
enter
aaa
popf
rcll
mov
js
inc
es
push
sbb
pop
xchg
jnp
dec
stc
inc
add
lock
dec
mov
push
movsb
ficoml
push
push
sbb
outsl
xor
mov
mov
jnp
mov
cli
inc
ret
bound
inc
mov
into
xchg
add
add
mov
dec
push
mov
int
ja
dec
mov
test
dec
push
lock
sbb
mov
push
xor
addr16
divl
and
push
or
add
mov
imul
cmp
js
lods
dec
shlb
xchg
es
mov
cmc
insl
jecxz
dec
push
rcll
mov
add
add
xchg
loopne
adc
lea
push
pop
push
pop
add
mov
mov
xchg
mov
xor
cmp
cmp
push
xor
pop
mov
shll
jp
cmc
shr
push
xor
in
mov
idivl
sbb
push
dec
xor
scas
in
inc
das
hlt
loop
rcll
int
jbe
cmp
rorl
jge
jmp
ja
lock
fildll
jecxz
mov
and
shrb
bound
add
xchg
aad
inc
and
push
cmpsb
arpl
cmp
pop
in
inc
mov
fcmovnbe
lret
mov
sub
lret
sub
jns
push
aas
pop
xor
int
jo
out
or
ljmp
js
cmp
insl
push
hlt
out
adc
std
push
fwait
lahf
jmp
mov
mov
adc
push
paddusw
sbb
sub
sbbl
adcb
gs
lahf
pop
jmp
in
outsb
mov
insl
mov
xchg
out
and
insb
jmp
sbb
notb
sbb
xchg
cmpsb
jne
cmp
dec
push
jp
mov
pushf
icebp
stos
cmp
adcb
nop
xchg
pop
sub
into
jo
les
mov
in
dec
jae
lahf
sub
mov
adc
cmp
out
jge
sbb
dec
xchg
mov
daa
mov
and
loop
jae
leave
push
pop
aad
dec
xchg
sahf
add
hlt
aad
xchg
and
sahf
adc
loop
rorb
sbb
fadd
fsubr
sub
stos
sbb
cmc
lea
lcall
stos
jbe
or
out
mov
stos
out
scas
jge
pop
and
jg
xchg
mov
pop
jle
jl
cltd
and
cs
add
push
push
or
xchg
add
xor
or
ljmp
mov
std
in
es
push
loopne
cmc
jb
adc
mov
lret
les
out
push
push
rclb
cmp
jmp
jge
popa
out
adc
icebp
ret
nop
pop
movsb
add
dec
xor
inc
lcall
ja
jb
ret
lahf
sti
push
mov
enter
cmpsb
mov
outsb
mov
movsb
mov
std
lret
push
push
push
pop
out
int
stc
pusha
pop
jp
test
dec
jg
fsubrs
dec
sti
mov
outsb
fs
out
fldenv
xchg
aam
aam
into
scas
xchg
sahf
inc
roll
fdivr
push
add
int3
sub
imul
inc
xor
fst
es
or
stos
push
xchg
mov
add
je
jbe
lock
mov
inc
lds
push
jo
lret
adc
push
stos
cmp
repz
popa
repz
or
scas
ds
shld
mov
and
or
cmp
inc
push
adc
leave
sbb
scas
push
out
adc
imul
out
es
dec
cld
jecxz
xlat
mov
push
sub
arpl
aam
das
adc
int
xor
sti
and
nop
xchg
fidivs
mov
in
adc
je
add
lcall
add
je
sub
or
rclb
fldl
push
mov
xchg
lahf
roll
add
fstpt
lcall
jne
mov
mov
mov
pop
xchg
adc
xchg
sub
out
dec
pop
sbb
shrb
cmp
nop
pop
sbb
sub
jns
sti
ja
and
test
sbb
adc
mov
loope
cmp
sbbb
mov
push
and
icebp
pop
cwtl
imul
adc
aam
jg
es
or
movsl
inc
movsb
jnp
dec
in
pop
sub
push
dec
ja
xor
shlb
out
mov
cmp
ljmp
sub
mov
popa
pop
sbb
pop
add
into
pusha
push
inc
sbb
mov
test
and
cmc
sub
mov
mov
pop
scas
inc
inc
sub
jo
or
inc
mov
or
repz
lods
inc
ret
push
sbb
inc
aas
aaa
push
xor
adc
lods
xchg
sti
lock
push
ret
and
jno
dec
pop
mov
xchg
setp
call
repnz
outsl
dec
pop
or
cwtl
insb
sbb
in
jle
and
push
jmp
and
adc
jns
fmulp
in
jg
and
cmp
inc
movl
popa
popf
mov
not
das
inc
movsb
push
fdiv
xchg
rorb
sub
clc
pop
stos
lods
push
inc
push
ja
dec
cs
fs
inc
inc
add
jle
enter
mov
cmp
xor
add
mov
faddl
sub
pop
rcll
jne
cmp
or
jle
inc
push
movsl
adc
inc
cmp
push
xor
aad
or
mov
push
dec
pushf
xchg
shrl
flds
sbb
fstpl
cmp
add
mov
and
cmp
xchg
fsts
adc
lods
test
pop
jb
xor
pop
push
mov
xchg
ja
sub
xchg
cmpsl
fcoms
daa
nop
lds
cmp
int3
sbb
sub
ljmp
push
inc
rcrb
adc
sub
cli
adc
mov
je
fucom
imul
and
sbb
daa
jae
pop
data16
mov
lret
xchg
mov
pop
mov
mov
jb
mov
xor
push
rclb
mov
cmp
lock
xchg
call
imul
hlt
mov
and
jae
enter
mov
push
adc
sbb
xchg
xchg
movsl
adc
loop
inc
cmp
sub
xlat
sub
sbb
mov
aam
jnp
xchg
inc
or
rorb
inc
add
subb
xor
push
leave
test
xchg
adc
or
or
in
sub
int3
lahf
into
out
shll
cli
jge
rclb
insb
lcall
sub
fldt
je
or
adc
and
adc
decb
repz
sub
out
cltd
cwtl
push
push
or
daa
or
and
cmp
mov
xchg
addb
ret
out
pop
add
xor
cmpsb
and
int
jge
negl
dec
xor
pop
cmp
jp
stos
movsb
rcl
or
fsubl
sub
rclb
pop
push
sbb
ljmp
and
adc
xchg
rcr
push
dec
imul
fdivrl
lcall
ret
popf
pop
mov
idiv
xor
fs
cli
test
sub
loope
js
int
dec
out
ret
mov
bound
jno
jg
pop
dec
xchg
push
mov
xchg
pop
ja
sahf
gs
xchg
jae
fninit
jg
lods
fbstp
mov
scas
adc
imul
sub
mov
jbe
test
fmull
push
jnp
and
rcl
xchg
mov
ret
rep
rcrl
ljmp
popf
cmp
ficomps
lahf
int
insb
push
mov
inc
pop
jae
scas
shrl
xor
gs
dec
push
ffree
pop
jo
int
iret
arpl
push
xor
mov
adc
sub
mov
test
mov
les
push
hlt
cmp
add
cmp
xcrypt-ecb
cmpsl
int
nop
mov
clc
cmpsl
mov
lock
jnp
sbb
add
add
adc
mov
sbb
pop
xor
in
leave
in
inc
mov
mov
add
aad
or
cmpsb
iret
ljmp
mov
inc
dec
inc
dec
mov
inc
out
nop
les
lods
test
pop
push
lcall
fimull
sub
cmp
stos
fnstsw
int
push
movsb
sub
fildl
mov
push
test
sbb
adc
into
ja
and
inc
mov
cs
sbb
les
rolb
movsl
leave
sub
leave
mov
sub
dec
outsb
loop
pushf
in
gs
pop
rorl
dec
lret
lock
jp
aaa
sahf
out
cmpsb
inc
sbb
rol
jp
adc
icebp
jg
pop
mov
rorb
clc
push
lea
je
push
rolb
in
or
es
or
mov
xchg
scas
sbb
out
inc
cmp
movsl
mov
xchg
lret
fisubl
xchg
out
out
jns
xchg
decl
repz
sub
insb
pop
fnsave
push
jnp
mov
icebp
inc
mov
push
and
pop
lahf
fisttps
mov
cmp
ljmp
loope
fldpi
neg
jg
dec
xchg
divb
hlt
in
xor
aam
out
repz
clc
lret
clc
cwtl
outsl
pop
hlt
call
mov
adc
clc
dec
adc
faddl
notb
loope
ror
fidivs
cmc
cmp
mov
mov
jnp
mov
or
addr16
sub
cs
cli
les
pop
lods
or
inc
push
imul
je
clc
scas
sub
cmp
loop
outsb
stos
xorb
aam
inc
mulb
rcl
lahf
mov
lahf
push
pop
fwait
pusha
jmp
stos
lea
cwtl
push
jb
subl
movsl
push
imul
push
pop
mov
rcrb
aad
hlt
cld
insb
mov
xlat
mov
or
jbe
cmpsb
sahf
stos
xor
adc
xlat
mov
push
lret
faddl
jl
or
dec
mov
dec
lods
lahf
dec
aas
xchg
ja
loopne
mov
push
mov
sbbb
sahf
jecxz
cmp
pop
test
dec
jns
repz
add
xchg
fisubs
clc
test
mov
cmpb
sbb
enter
mov
pop
fcmovu
test
xor
loope
stos
inc
ljmp
lret
adc
add
jno
adc
inc
jns
out
add
je
pop
xlat
out
xchg
scas
ja
repnz
or
mov
inc
mov
shrb
dec
jge
js
push
jae
pop
in
fisttps
and
arpl
inc
or
data16
daa
int3
inc
and
outsb
clc
mov
push
jp
cmp
cmp
popa
aam
xor
loopne
jns
sbb
inc
jo
cli
sahf
mov
pop
add
inc
adc
pop
push
sbb
mov
and
ds
int
inc
jmp
lahf
cltd
loopne
push
push
jnp
mov
sbb
xor
out
enter
xchg
lods
into
test
dec
jne
or
mov
push
jo
mov
xor
xchg
dec
xor
stc
jg
ljmp
lds
out
es
and
sbb
lds
in
movhps
lods
xchg
arpl
and
call
pop
mov
jle
inc
ljmp
mov
push
shl
push
testl
testb
adc
dec
dec
and
xor
sub
and
add
adc
movsb
mov
adc
test
sub
cld
into
cmp
cs
incb
mov
mov
push
movb
andl
addr16
xlat
clc
pop
in
sub
and
and
sbb
inc
cld
mov
cmpsl
int
sbb
add
in
push
cmpsb
xor
push
cli
pop
aad
adc
mov
das
cmp
cli
insl
lret
lret
inc
cmp
mov
cmpsb
mov
inc
and
or
push
mov
out
clc
inc
imull
cmp
pcmpeqb
adc
movsb
shrb
push
sub
stos
pop
ret
mov
test
std
flds
pop
xor
mov
xchg
gs
push
and
mov
inc
clc
fidivs
jl
mov
sbb
fsts
call
and
or
xor
loopne
out
pop
lds
mov
adc
add
ffree
data16
loop
aam
fcom
cli
mov
fs
cmpsb
sarb
aas
adc
inc
fmull
sar
mov
xchg
sahf
and
and
pop
xchg
cs
add
or
add
in
mov
idivl
test
and
add
ss
add
scas
sti
pusha
mov
out
jge
int
push
inc
cmp
sub
mov
aas
popa
rcll
scas
repz
push
dec
mov
pop
or
cmp
add
jns
movsl
out
cmp
jecxz
popa
add
jo
mov
and
mov
stc
xor
stos
mov
inc
and
add
lds
sbb
sbb
mov
jmp
stos
pushf
mov
xchg
dec
sub
mov
hlt
es
sbb
repnz
pop
sbb
adc
mov
jge,pn
push
jge
dec
into
jne
gs
out
or
sbb
out
aad
daa
push
aas
dec
mov
sub
out
add
add
push
pop
lahf
ret
mov
sbb
stc
mov
inc
int3
xchg
nop
cmp
push
mov
lds
das
lret
pusha
push
pop
fs
ljmp
stc
adc
scas
adc
cmp
jge
jecxz
xchg
in
cmpsl
dec
std
cld
xor
or
adc
popa
push
sarb
jecxz
aas
ret
cmpsb
lcall
mulb
sbb
xlat
push
rcll
mov
test
lcall
or
and
push
in
cmp
xor
sub
negb
xlat
pop
out
loope
sub
mov
sbb
notb
dec
dec
xor
cmpsb
in
fstl
fwait
mov
icebp
jge
or
in
in
push
insl
dec
jbe
push
je
pop
clc
xor
mov
fcoms
nop
jns
jnp
lcall
jp
ret
inc
cli
or
in
dec
cmp
pop
pop
fistpll
dec
out
pop
shll
or
insb
icebp
in
mov
popa
add
inc
out
cmp
mov
xchg
loopne
and
mov
dec
mov
mov
jl
fwait
fwait
mov
and
lret
or
xor
pushf
dec
xor
push
fbld
mov
mov
subl
test
adc
int3
stos
ss
jl
push
mov
jmp
shrl
sbb
pop
inc
sub
pop
push
in
push
pop
loopne
fs
inc
cmp
adc
stos
inc
mov
leave
add
jmp
xchg
movsl
sbb
sbb
mov
push
mov
fldcw
inc
lcall
pusha
jecxz
icebp
fs
out
and
mov
lds
or
and
xor
mov
das
jmp
jmp
inc
mov
mov
pushf
mov
jge
push
cmp
mov
in
xor
popa
pop
mov
icebp
pop
call
dec
or
sbb
adc
jmp
fwait
push
cmp
lahf
aam
jl
xchg
xchg
call
inc
popa
daa
mov
and
insl
aad
sbb
push
loopne
out
lahf
in
jbe
xor
fdivrp
popf
adc
dec
add
bound
and
jge
rcll
fcom
movl
adc
mov
adc
psubd
mov
fidivrs
in
fstpl
dec
outsl
xchg
nop
imul
cmp
dec
sbb
aas
dec
std
adc
imul
add
cmp
cmpsl
out
imul
mov
pop
rcrb
hlt
in
mov
mov
sti
sahf
mov
aam
pusha
and
movsl
pop
insb
je
in
jnp
or
pop
jne
cmp
arpl
sbb
jecxz
mov
pop
and
or
das
xchg
push
sub
into
lods
test
pop
xchg
dec
test
cmovs
scas
sub
sti
xchg
mov
scas
insl
xorb
sahf
ljmp
testb
fwait
rcl
fidivs
xor
test
or
push
and
test
and
filds
push
xlat
lds
inc
sbb
test
in
out
lods
repnz
fstps
fcom
addb
cltd
sbb
inc
movsb
arpl
push
push
outsl
cmp
cwtl
adc
xchg
outsl
add
fwait
lea
fs
pop
fs
push
ret
sarl
mov
ret
mov
xlat
lods
inc
fisttpll
leave
into
cmc
push
adc
sbb
lods
and
mov
jnp
mov
pop
bound
pop
sub
das
sub
pop
clc
dec
imul
fisttpl
push
dec
jns
out
xchg
and
insl
insl
in
and
pushf
outsb
xorl
shr
lds
fsts
sbb
mov
int3
lock
mov
add
sbb
xlat
lea
add
cld
inc
lretw
sahf
cmpl
push
int3
movsb
inc
int
or
es
sbb
push
repnz
push
dec
mov
fsubs
adc
insb
or
jmp
loope
adc
xchg
inc
sub
dec
dec
cmp
stos
shlb
cmp
rolb
mov
lcall
dec
rol
dec
mov
mov
jno
cmp
inc
jg
shl
jae
mov
push
adc
lods
inc
mov
and
xor
or
aaa
add
mov
inc
outsl
pop
mov
nop
pop
mov
xor
pop
jle
int3
mov
lds
lds
mov
or
xlat
xchg
xchg
out
cmp
dec
andl
out
scas
or
pop
test
aad
fwait
xchg
cmp
clc
jge
push
xchg
cmp
rcll
int3
mov
int3
dec
add
xchg
cmp
mov
pop
xor
cwtl
repz
jle
fisubl
mov
jnp
jne
mov
cmp
popa
xchg
ret
dec
cmp
in
ret
ds
sbb
inc
aas
sub
mov
out
adc
dec
mov
add
push
pop
xchg
sub
sub
dec
loop
xchg
fs
cld
pop
push
addr16
xor
add
das
mov
into
xor
scas
popl
cmp
sub
sbb
and
xchg
test
mov
cmp
test
mov
ja
insb
cmp
mov
popf
push
jb
cmp
or
push
fistpll
subl
cmp
mov
sub
and
ret
imul
rcrl
jmp
jb
shrl
dec
lea
lods
mov
inc
outsl
into
out
movsl
mov
jne
lahf
jb
cwtl
jl
in
add
frstor
cltd
mov
jmp
mov
push
inc
lods
pushf
inc
sub
or
jge
repz
test
repnz
mov
dec
mov
or
mov
sub
xlat
push
shl
decb
sbbl
dec
dec
scas
std
mov
stc
fisubrl
rorb
xor
push
shll
stc
add
mov
xor
mov
add
and
das
les
data16
idivb
hlt
pop
xor
xor
jb
cmp
lahf
or
mov
dec
outsl
mov
add
das
bound
and
sbb
sub
test
jecxz
pop
xor
mov
fcoml
or
jl
movsb
xchg
jge
sbb
lods
sbbb
add
rcll
and
inc
fimull
lret
adc
dec
sbb
shlb
pop
in
sbb
jo
fcoml
stos
dec
lods
xchg
inc
or
dec
push
push
pop
dec
push
inc
and
inc
loop
lea
xor
js
cmpsb
cmp
addb
repz
xor
pop
xor
loop
adc
pop
jno
cli
xchg
int3
xor
mov
faddl
insl
add
adc
mov
jno
mov
inc
jp
push
xchg
sub
incb
xor
insl
jmp
inc
xchg
jp
xlat
lret
idivl
loope
scas
aad
push
scas
jl
shrl
rorl
rolb
rol
je
mov
inc
je
adc
or
jo
pop
dec
loope
mov
imul
fsubs
sub
insb
inc
sarl
out
and
cmp
out
outsl
out
cmp
aaa
pop
std
dec
xchg
je
inc
subb
scas
mov
push
cmpsb
loopne
movsb
ficoms
jne
addr16
rol
and
adc
cmp
jo
rcpps
sbb
push
popa
mov
aaa
mov
stos
cltd
mov
in
add
and
movsb
lcall
pop
xchg
or
push
sub
xchg
push
push
sub
sbb
into
iret
add
cli
outsl
in
addr16
mov
cld
push
mov
loopne
pop
dec
cmpsb
mov
sbb
push
push
ja
cmp
or
push
and
jl
test
pop
insl
fists
xchg
cmp
clc
xor
inc
movsl
pusha
loop
cmp
xor
pop
dec
loopne
push
add
xchg
jno
rorb
xchg
add
jnp
imul
aas
jp
mov
xchg
push
cli
pop
sahf
andl
mov
in
adc
rorl
dec
mov
outsb
jle
dec
call
fmuls
sbb
dec
dec
ss
cld
sti
pushf
jecxz
movsl
hlt
xchg
inc
js
popa
fwait
add
es
cmc
aam
sahf
sub
mov
xor
xor
adc
xorb
sbb
stos
sub
out
jmp
and
jg
jle
aas
push
push
lcall
pop
pop
hlt
rorb
orl
sbb
mov
mov
aam
pop
nop
sahf
aaa
jb
insl
push
jmp
aaa
cmpb
push
aaa
out
test
repnz
cmpsb
jge
lcall
ljmp
dec
pop
cmp
jnp
lret
mov
sub
pop
cmp
xor
xchg
dec
cmc
dec
adc
mov
rorl
mov
push
test
aaa
ds
gs
ret
or
mov
and
in
fnstenv
pop
stc
pop
jno
jp
out
in
adc
out
test
sub
outsb
cmp
xor
xchg
pushf
xlat
jae
das
xor
hlt
sub
ret
xor
clc
sbb
mov
adc
shr
and
xor
imul
dec
jp
bound
adc
incb
dec
and
jne
in
push
and
sub
and
xchg
inc
int3
je
adc
xor
addr16
xchg
mov
or
adc
push
xchg
jno
push
mov
or
sub
mov
leave
sbb
mov
ror
ds
imul
sbb
jle
xchg
add
jl
gs
xor
imul
sbbb
fwait
push
jbe
jle
sbb
sbb
roll
das
dec
mov
iret
bound
fcompl
mov
push
repnz
mov
sub
push
cmp
inc
leave
cli
cs
push
dec
dec
sbb
pop
imul
adc
in
test
movsl
xchg
pop
int3
dec
cmp
mov
sti
icebp
hlt
adc
dec
test
sbb
pop
push
jl
mov
sbb
ret
aaa
pop
mov
adc
rcl
in
cmp
mov
pusha
fdivr
sub
test
inc
pop
lods
mov
pushf
fldenv
rcrb
pop
xor
nop
std
sub
flds
fbstp
rorb
faddp
pushf
or
xchg
in
into
mov
inc
mul
cs
sub
dec
adc
cmpsb
dec
sbb
das
in
jecxz
inc
xchg
push
mov
xor
punpckhdq
mov
inc
iret
mov
inc
mov
insl
mov
imul
or
pusha
xor
mov
adc
daa
loop
int
shll
add
push
xor
nop
push
dec
negb
mov
inc
popf
and
sub
aam
fnsave
jp
fdivrs
sbb
jbe
push
or
sub
popf
and
cs
cs
sub
dec
mov
jg
add
shrl
jmp
popa
xchg
and
jb,pn
cmp
xorb
lods
mov
mov
icebp
xchg
testb
xor
clc
xchg
stos
icebp
adc
dec
shll
dec
jns
mov
adc
add
arpl
jae
jae
mov
sub
mov
movsl
rcl
add
insl
mov
faddl
in
popl
xchg
sbb
pop
sub
cmp
push
dec
push
fidivrs
neg
adc
mov
ret
js
sub
into
xor
inc
sub
das
jb
pmullw
mov
lock
sub
sbb
in
inc
bound
cmp
loopne
lock
inc
cmpsb
out
inc
mov
mov
addr16
mov
orl
sahf
out
lds
jae
arpl
push
arpl
mov
stc
shll
mov
jmp
inc
aas
hlt
pop
push
cltd
xchg
ret
arpl
test
push
loope
out
fbstp
leave
sub
mov
lds
push
add
inc
in
jae
mov
lret
jo
xchg
sbb
in
pop
mov
push
fsub
out
sub
push
stos
pusha
gs
js
es
andb
adc
cmc
fwait
mov
lcall
jae
movsb
data16
mov
mov
xchg
push
sbb
push
aas
jmp
add
shl
pop
cmp
in
pop
xor
loope
mov
movhps
loopne
ret
sbb
fiadds
mov
xchg
xchg
rolb
ss
jmp
or
push
mov
scas
pop
decl
fistl
loopne
dec
pop
push
xchg
jns
adc
loope
sahf
pop
fisubrl
xor
jbe
xor
sub
and
es
and
repnz
xor
lret
das
and
data16
sahf
push
fstpl
test
icebp
mov
jne
xchg
int3
jge
and
imul
cmp
shlb
xor
repz
pop
dec
mov
pop
mov
cmpsl
inc
fstpl
xchg
jns
daa
mov
mov
imul
dec
mov
out
aas
leave
popa
mov
lret
call
lret
int
adc
mov
adc
aas
add
in
insb
negb
xor
lret
jae
hlt
enter
adc
cmp
sub
fs
sahf
pusha
and
fstl
sub
jmp
test
mov
adc
cmp
imul
fistl
inc
pop
insb
adc
loopne
les
lds
mov
inc
xchg
in
sub
xchg
inc
frstor
or
ds
stos
pop
js
cmp
das
add
insb
add
mul
rcl
cmp
insl
outsb
sbb
push
xchg
add
dec
icebp
pop
lret
out
addl
xor
add
xor
sar
stc
mov
xchg
data16
fisttps
insb
adc
xorb
mov
pop
sub
arpl
shll
movsb
out
aam
or
mov
jmp
stos
jecxz
test
and
cmp
js
and
fstl
xchg
sub
pop
insl
xlat
stc
push
push
adc
outsb
ja
test
mov
push
adc
cld
xchg
rcrb
push
jo
pushf
pop
xchg
shrb
adc
xor
jmp
fcoml
sub
cmc
lods
mov
sbb
outsl
lods
or
icebp
js
movsl
pusha
sub
aad
loopne
sub
add
sub
xchg
pop
sbb
into
faddl
jb
loopne
imull
xchg
les
mov
mov
lock
mov
insl
cli
push
xchg
or
add
xchg
sub
push
jbe
sub
push
movsb
jecxz
hlt
xchg
testl
pushf
xorl
in
out
es
xor
xchg
dec
push
jl
scas
xchg
test
nop
out
pushf
and
or
popf
leave
ljmp
or
mov
std
bound
popf
mov
mov
xlat
jmp
mov
jb
out
insl
in
jecxz
lcall
push
push
cmp
sahf
xchg
dec
and
jo
and
gs
rorb
or
orl
out
add
sub
cmp
sbb
mov
ds
outsl
ss
and
mov
sub
jg
and
or
mov
push
xlat
mov
add
int
push
push
xor
jns
or
shll
push
or
mov
push
rcrb
stos
fs
xlat
mov
mov
sub
mov
jmp
mov
xchg
and
xor
sbbb
sbb
fs
movsl
mov
push
add
outsl
pop
neg
xor
int
fs
orl
push
pop
test
mov
icebp
and
push
mov
and
test
mov
pop
adc
aam
and
bound
stos
sbb
pop
adc
dec
sahf
insb
jo
mov
mov
andl
pop
pop
and
out
xchg
pop
fildll
arpl
pop
dec
aaa
loope
push
jecxz
test
add
mov
mov
leave
sbb
add
add
push
pushf
and
dec
call
fs
sub
mov
outsb
xchg
in
in
mov
dec
scas
nopl
mov
or
mov
push
push
pop
xor
fadds
push
pop
and
subb
iret
cltd
xchg
pop
jle
xchg
hlt
movl
or
cmc
add
pop
add
cli
mov
std
sub
cmp
or
cmpsl
cmp
xchg
je
insb
fs
adc
loope
fwait
push
mov
outsl
ds
mov
mov
dec
jp
stos
mov
sbb
xchg
and
sub
or
adc
cltd
cmp
leave
pop
xchg
and
mov
or
pop
repnz
cli
in
data16
test
out
jo
adc
loope
jne
and
lods
pop
push
push
cld
in
ret
mov
mov
call
pop
cpuid
jns
inc
push
imul
das
cmp
adc
lret
jl
dec
sbb
and
push
push
leave
and
jg
lods
jg
cmpsl
popf
lret
dec
cmp
std
dec
and
sbb
lds
adc
push
pusha
pop
pop
stos
sub
addl
and
adc
test
in
cltd
ljmp
cmp
mov
cmpsb
fsubrp
push
inc
fisubs
sti
sub
xchg
dec
inc
fmuls
adc
lock
das
pop
xlat
jmp
sub
sbb
cltd
cmp
sti
sti
imul
sub
aam
in
sbb
xchg
push
inc
push
xchg
mov
cmp
xor
jnp
xlat
cmp
jge
insl
sub
lcall
nop
or
repnz
ds
xchg
decl
mov
and
adc
lods
jno
mov
out
dec
add
inc
fistpl
scas
mov
je
lds
sbb
sub
and
cmp
rcrb
fdivs
sub
jle
in
mov
leave
adc
xor
or
cmpsb
mov
stos
and
mov
les
add
adc
mov
aad
jae
lahf
ret
iret
pop
or
mov
je
call
jo
jl
mov
lods
arpl
inc
jmp
lods
mov
mov
divl
stos
dec
xor
dec
cmpl
push
jg
iret
insl
lods
lods
jne
dec
movsl
inc
lods
jmp
jae
into
jns
sub
cmp
movsb
pop
jg
dec
push
inc
pop
sub
mov
push
push
imul
inc
cltd
cli
stc
mov
dec
sub
add
pop
loop
jns
add
daa
ds
rcl
mov
cmp
jmp
pop
sub
jl
or
push
pushf
xorl
ret
jl
decl
out
cmp
rcll
and
jmp
mov
adc
in
daa
fwait
hlt
push
enter
lea
into
mov
cld
sbb
jp
popf
repz
or
std
sbb
cltd
inc
mov
push
sbb
lret
or
ss
add
scas
cmpsl
pop
hlt
pop
leave
xchg
adc
xchg
and
jge
pop
or
jecxz
xchg
int3
lea
push
inc
dec
test
sbb
cld
inc
push
jp
and
push
je
jl
mov
mov
neg
sbb
cld
mov
pop
push
xchg
imul
loopne
push
sub
add
and
push
pop
mov
xchg
and
mov
pop
jae
ja
cmp
adc
ljmp
sbb
xlat
sbb
fwait
imul
outsb
and
pop
ror
jle
mov
sub
sbb
std
and
pop
cmp
movsl
addr16
sbb
lcall
mov
pop
mov
in
jbe
xchg
mov
out
cmp
ror
lcall
add
lds
cmp
pop
ljmp
pop
xchg
push
push
int3
jno
push
fsub
outsb
mov
pop
dec
lds
or
and
cmp
addr16
pop
push
mov
std
or
sbb
in
cmp
mov
jne
push
adc
nop
cmpsl
popa
arpl
fidivrl
dec
lea
js
shrl
dec
jb
mov
and
jno
push
sti
cmp
test
push
pop
dec
or
cmp
mov
fsubl
in
movsl
dec
lahf
pop
bnd
adc
xor
push
jl
mov
mov
adc
ret
dec
or
jb
inc
sub
fnstcw
cs
add
push
movsl
popa
xchg
shlb
and
int
mov
dec
rcrb
sbb
lret
mov
fidivrl
in
xchg
xchg
xchg
cli
pusha
dec
test
sbb
and
pop
divl
sbb
pop
xchg
and
rorl
cmp
push
pop
lret
out
das
jns
jo
push
ljmp
fpatan
sar
pushf
scas
mov
mov
in
daa
pusha
imul
push
push
in
xor
xchg
xchg
out
ljmp
xchg
iret
je
adc
mov
int3
std
lahf
out
pop
pop
call
imul
xchg
push
jne
jge
mov
jbe
fisubrl
pop
repz
mov
aaa
pop
insb
jb
call
mov
push
test
push
sahf
js
mov
sub
jp
dec
mov
adc
icebp
mov
jl
scas
test
cwtl
mov
mulb
ds
out
push
and
insb
and
add
sub
or
push
je
daa
jmp
and
pop
inc
rcll
je
and
adc
xorl
les
jge
add
xorb
pop
sahf
push
add
or
out
or
mov
dec
lret
push
mov
push
test
xor
adcl
rclb
mov
mov
cmp
and
sub
mov
scas
ja
loope
mov
add
pusha
fsts
aad
sbb
aas
outsl
add
xor
push
test
lods
mov
in
lcall
mov
adc
add
pop
pop
add
sub
mov
neg
inc
fnstenv
cmp
enter
xlat
je
jmp
adc
push
clc
stos
enter
call
cwtl
pop
xchg
test
les
cmp
call
ret
xor
push
jp
push
xorl
jge
int
push
lods
xchg
adc
stos
push
bound
xchg
mov
std
jns
mov
or
xor
das
pop
xchg
pop
adc
mov
sbb
inc
inc
dec
mov
or
pop
or
les
loope
bound
arpl
scas
cmpsl
mov
fdivs
into
loope
sbb
inc
sub
dec
jo
arpl
fs
dec
cmp
dec
mov
push
fwait
cld
xor
mov
negb
sahf
xchg
fimuls
jno
xlat
sub
or
jnp
sete
fcomp
and
rorb
sarl
pop
lock
mov
dec
xor
mov
push
xor
loop
sar
and
aad
inc
sbb
xchg
adc
frndint
test
cmpb
or
outsb
push
fiadds
aaa
xor
fstpt
cmpb
popa
sbb
mov
jle
xchg
pop
pop
cltd
sbb
aas
mov
or
loope
mov
clc
lcall
icebp
jnp
jge
cmp
movsb
ret
adc
pop
insb
xchg
push
xor
jmp
jg
mov
add
dec
jns
jno
and
fwait
mov
and
sti
add
call
adc
sub
sarl
jg
jmp
in
or
push
cmp
xor
repz
iret
outsb
cmp
loope
not
test
call
in
cli
adc
or
jge
out
xchg
idivb
shrb
pusha
js
ljmp
hlt
xor
subps
shl
mov
pushf
dec
hlt
int
out
call
pop
mov
mov
xor
cmpsl
pop
mov
push
or
inc
or
pop
faddl
mov
pop
sahf
rcl
enter
pop
ret
movsb
dec
mov
mov
push
push
push
ja
repnz
sbb
jae
sub
cld
icebp
jb
jp
hlt
adc
cmpsl
cld
arpl
testl
adc
popa
xlat
scas
lods
sbb
arpl
and
mov
cmpsl
add
filds
sub
add
pop
inc
jl
stos
xchg
fnsave
adcb
shrl
jg
pop
cmp
mov
inc
sub
lahf
ret
cmc
rcll
das
pop
pop
dec
sbb
mov
bound
js
out
and
xchg
enter
es
mov
adc
insl
mov
dec
push
movsl
and
pop
out
fmull
push
sti
orl
insb
push
outsb
into
aam
jmp
int3
xchg
pop
inc
pusha
sti
and
push
jecxz
scas
cmp
test
push
mov
add
decb
push
push
jge
xchg
pop
dec
add
repz
in
jnp
push
xor
add
adcl
mov
xor
fsts
call
add
out
and
bound
in
int3
or
sbb
and
add
push
cmp
lret
mov
sbb
movsb
fisubl
jb
lret
shrl
cmp
cs
idivb
std
lahf
inc
dec
pop
loopne
mov
insb
pop
rcr
sub
adc
imul
push
int
mov
cli
mov
add
sarb
aam
subb
xchg
decb
fninit
jge
and
pop
jecxz
inc
jns
add
adc
inc
pop
outsl
or
std
mov
ljmp
js
sbb
or
xchg
in
xchg
ljmp
stc
push
fdivl
sub
pop
jecxz
and
adc
adc
mov
fists
inc
js
mov
test
xchg
lahf
inc
xor
mov
jnp
or
iret
xchg
in
jmp
cmp
mov
xor
push
xchg
dec
cmp
cmp
insl
jo
lock
int
fiadds
xchg
daa
dec
inc
add
inc
dec
leave
cmpsl
mov
lea
lods
repz
addr16
rcrl
jge
and
or
xrelease
inc
jne
sub
push
xor
movsl
aad
int3
cwtl
or
ja
jbe,pt
cld
jae
cmp
jmp
mov
ljmp
and
or
cmp
dec
pop
clc
int3
sub
test
xor
mov
xchg
mov
sarb
ret
sbb
adc
insb
cmpsl
cmpb
xchg
mov
imulb
int3
mov
adc
fsubs
call
xor
ljmp
in
test
and
leave
dec
mov
sbb
popf
sub
xchg
stos
pop
adc
mov
and
pushf
inc
inc
dec
int
lock
sbb
rolb
je
and
jl
push
xchg
inc
int3
call
jl
lods
fnstsw
inc
cmpl
mov
inc
xlat
mov
movsl
and
mov
insl
push
ss
leave
enter
lret
mov
cmc
lods
pop
mov
pop
ljmp
lret
shrl
lret
scas
pop
jg
in
mov
les
js
data16
insl
mov
hlt
test
mov
imul
test
gs
fisttpll
add
dec
test
ljmp
push
les
loopne
sbb
popa
icebp
dec
add
aas
dec
lock
jae
lods
sbb
std
gs
mov
jmp
pop
mov
repnz
mov
stos
mov
inc
dec
faddp
sbb
ja
stos
mov
out
ja
je
cltd
cmpb
jae
sbbl
lods
mov
adc
lret
jo
popf
or
out
mov
inc
jno
mov
fildl
scas
fdivrs
cmc
daa
out
lcall
and
mov
insl
aaa
cmp
jmp
sub
insl
shl
add
ljmp
mov
incb
or
pop
inc
adc
push
xchg
testl
fnsave
lahf
ds
imul
testl
jno
mov
sbb
xor
jmp
push
fs
push
and
notl
rol
stos
xlat
dec
mov
cmp
cmc
js
mov
inc
xor
fisubrs
es
cmc
mov
pop
mov
ficompl
lcall
push
cwtl
leave
push
xchg
push
mov
mov
repnz
jb
push
pop
xchg
pop
and
pop
mov
inc
int3
enter
xor
dec
repnz
jae
xchg
in
shrb
adcl
sub
pop
dec
jle
scas
dec
fs
shll
add
mov
xchg
adc
and
int3
outsl
dec
lret
add
pop
xor
int
sub
fndisi(8087
shlb
push
pop
jb
pop
jg
cmp
sbb
jl
hlt
xchg
jno
xchg
push
popa
imul
int3
jle
rol
jg
aas
sub
out
lea
cmp
mov
lock
bound
loopne
pop
lcall
sub
inc
xchg
addr16
pushl
je
pop
and
add
fcoms
add
fmull
dec
xor
lret
push
aaa
lcall
mov
cld
pushf
lds
subps
jge
jno
rcrb
xchg
pop
loop
out
mov
mov
jecxz
adc
ja
xchg
mov
push
mov
push
push
out
fs
add
push
or
fs
cmp
fcmovnbe
xchg
sub
xchg
jg
push
cs
cmpsb
push
hlt
mov
stos
bound
inc
mov
jecxz
xor
not
mov
adc
movb
rcrb
js
push
mov
lcall
les
and
ss
and
fcmovb
mov
mov
xchg
rorl
loop
ficompl
movsb
xchg
mov
pushf
sbb
add
mov
pop
mov
insl
and
inc
leave
xor
pop
test
inc
std
cs
push
shr
pop
into
pop
push
xchg
insb
or
mov
pushf
test
push
aaa
shl
jae
or
jns
sahf
sub
ljmp
xrstors
lcall
mov
mov
xor
adc
int
xor
aam
cmpl
sti
outsl
xor
dec
iret
aas
pop
xchg
aaa
and
or
sbb
mov
cmpsb
aaa
movsl
mov
daa
loope
adc
and
pop
aas
dec
imul
int
mov
pushf
fisubs
sbb
cmpsl
adc
and
call
or
and
xchg
mov
sbb
test
call
shlb
xchg
nop
mov
dec
inc
dec
dec
ret
testl
cmp
fpatan
pusha
and
and
and
adc
mov
mov
adc
or
ljmp
or
insb
lock
pop
mov
pop
sar
xchg
push
out
popf
mov
push
adc
and
ret
xchg
shr
es
sub
out
inc
xor
fcomip
inc
inc
sub
lret
push
cmp
sub
repnz
cld
shl
jo
cmp
cld
mov
pop
dec
dec
pop
pcmpgtw
push
and
mov
ljmp
pop
cli
sahf
push
mov
sbb
cmp
mov
xor
fmuls
pop
push
jg
rol
xor
hlt
sahf
pop
and
rcll
mov
ss
push
or
adc
xor
sbb
out
movsl
xchg
pushf
arpl
mov
sarb
data16
and
sub
arpl
fnsave
cmp
les
test
nop
cmp
lods
xchg
dec
pusha
xchg
fadd
cmp
pop
pop
idivl
sub
es
xchg
call
leave
js
push
xor
add
mov
or
and
sub
xchg
jo
scas
push
mov
rep
mov
mov
jecxz
lret
ljmp
aad
mov
jbe
mov
andb
divl
sbb
pop
imul
or
sbb
xor
mov
test
test
and
push
mov
in
rcrb
cwtl
testb
jb
das
loop
add
sbb
mov
cmp
push
outsb
loop
mov
jns
add
mov
imul
push
add
into
nop
aas
dec
inc
cs
pop
mov
stos
inc
mov
out
repnz
inc
call
scas
cmpsb
rolb
imul
sbb
pop
xor
fsubr
lahf
out
outsb
xchg
les
mov
and
jno
aas
and
sub
sbb
inc
mov
xlat
inc
imul
addr16
aam
popa
aas
cmpl
cmpsl
jbe
ror
test
or
and
fwait
pop
cmpsb
jp
aam
enter
ficomps
mov
adc
sti
fistps
popa
testb
stos
cmpsb
cld
or
jle
in
ds
stos
adcb
cld
add
mov
pop
adc
jnp
adc
lock
fbstp
fdivl
scas
mov
outsl
ds
mov
mov
sbb
mov
aam
pop
adc
jmp
xchg
out
push
aaa
addl
imul
mov
lods
aam
mov
int3
cmpsb
dec
lods
inc
sbb
mov
push
out
pop
mov
dec
adc
xchg
imulb
lods
arpl
loopne
les
push
push
pushf
push
and
cs
mov
adc
mov
mov
repz
nop
add
and
in
push
pop
push
add
push
or
jecxz
mov
repz
mov
cltd
cmp
pop
sarb
adc
mov
es
mov
out
dec
pop
scas
enter
cli
inc
test
je
or
or
xchg
stos
rcrb
aas
pop
repz
push
sti
or
sbb
outsb
popa
les
scas
dec
lahf
orps
inc
fidivrs
icebp
lret
and
lods
sub
jecxz
fmuls
inc
and
je
and
jno
sub
inc
pop
push
jns
xor
dec
lcall
loope
fdiv
pop
pop
out
push
sbb
divl
push
arpl
insb
outsb
mov
cmp
mov
addr16
mov
test
sahf
add
mov
push
sub
add
lods
aaa
fadd
xchg
xchg
mov
sbb
dec
pop
jecxz
sub
jle
add
pop
inc
imul
adc
ds
mov
rsm
fldcw
and
sbb
mov
loope
cmp
mov
pop
int
sub
into
push
add
or
add
lods
dec
ljmp
mov
cmp
fsubp
mov
dec
jl
push
and
mov
call
sub
stc
sti
insb
push
pop
ret
popa
div
jnp
inc
test
mov
sbb
sbb
sbb
cmp
sahf
adc
xchg
inc
lods
sub
jecxz
scas
outsb
pop
mov
aam
jg
adc
cmc
in
xor
push
cmp
inc
adc
cwtl
adc
xchg
push
test
or
test
cmpsb
nop
das
stos
jo
push
je
inc
xor
movsb
out
sbb
fwait
arpl
push
orb
lods
pop
sbb
stos
out
dec
pop
sti
loop
adc
adc
andl
push
jge
subl
into
int
cs
aam
fimull
or
scas
sbb
jb
or
out
in
das
int3
adc
cmp
jge
aas
andl
mov
popf
mov
lret
movsl
rcll
and
fcoml
xchg
dec
push
dec
std
lock
data16
and
mov
xor
bound
fcoms
push
lods
cld
and
jp
aaa
ret
push
imul
push
jge
clc
inc
mov
or
pop
mov
out
pop
mov
mov
lahf
cs
jo
inc
bnd
sub
lods
inc
mov
sbbl
xchg
xchg
jl
hlt
dec
int3
and
cmp
mov
push
dec
cs
mov
adc
fwait
xchg
imul
clc
pop
pop
out
and
add
jmp
mov
push
jl
sub
sub
jp
gs
xchg
cltd
mov
inc
xchg
jle
int3
push
dec
mov
push
push
clc
inc
aad
sti
push
jno
lea
nop
jnp
cmpsl
out
nop
cmpsb
xor
rep
int3
int
repz
xlat
cmp
sahf
cmp
fsub
and
and
sbb
pop
pop
lcall
leave
mov
testb
cmc
cmc
inc
fcoml
ja
mov
nop
fnstcw
dec
push
insb
sub
push
jo
out
pop
out
loop
es
in
lahf
lea
pop
xchg
adc
sbb
pop
push
mov
incl
stos
stc
lfs
test
iret
divl
mov
dec
add
fwait
shll
in
mov
fildll
adc
loope
js
int3
mov
popf
mov
pop
dec
popa
dec
dec
xchg
push
rcrl
inc
push
xchg
jbe
mov
or
lahf
in
jb
mov
pop
mov
cmc
lods
daa
add
lea
jns
clc
push
cmp
js
and
cmpsb
mov
or
push
neg
in
adc
xor
push
mov
mov
inc
cld
int3
fstl
icebp
mov
ds
fnstenv
add
sub
fcmovbe
out
mov
into
pop
or
push
push
xor
inc
or
dec
popf
push
sub
pop
sbb
mov
lds
mov
out
jno
and
xchg
pusha
cltd
das
sahf
pop
daa
ret
popa
mov
cmpsb
adc
jbe
jnp
inc
or
xchg
jg
adc
in
or
sbb
or
push
cmc
in
xchg
mov
push
fwait
out
and
or
stos
or
xchg
inc
mov
inc
add
mov
push
xchg
adc
stos
xchg
data16
inc
and
jno
jge
xchg
mov
lret
inc
add
dec
hlt
in
adc
mov
pusha
stc
lods
lock
xor
push
fcmove
dec
rol
rcrl
sub
frstor
lcall
orl
ds
dec
xor
popa
mov
leave
arpl
add
icebp
inc
ficoml
mov
add
sbb
xor
ficoms
jbe
xlat
add
in
pop
loopne
or
jne
xchg
inc
aaa
mov
cld
xchg
xor
mov
arpl
push
mov
push
mov
jecxz
xchg
das
lods
pushf
jne
aaa
dec
pop
fwait
xor
inc
inc
xor
je
add
cmp
xor
imul
cmp
inc
mov
movsb
lcall
dec
mov
xchg
imul
dec
cmp
out
lcall
sub
jg
mov
jmp
jns
cmp
push
movb
addb
in
or
inc
in
adc
call
sbb
shll
add
sarb
mov
cmp
les
inc
nop
lock
sub
xor
and
and
sub
mov
in
fldl
in
cld
mov
pop
ds
push
inc
std
xor
jecxz
rolb
push
std
push
jae
or
or
adc
mov
jb
sbb
mov
pushf
es
adc
add
push
std
rol
mov
out
testl
out
cmpsl
pop
scas
fwait
sbb
in
mov
pop
clc
aad
dec
bound
push
mov
jo
add
xor
jle
xor
mov
mov
push
xchg
pcmpgtd
or
jl
xor
nop
jno
sub
push
sbb
dec
and
push
sbbl
mov
mov
scas
aaa
push
sbb
push
stos
hlt
add
adc
mov
add
shlb
std
xor
sbb
push
fbstp
negb
aam
iret
dec
mov
add
sbb
dec
cmp
loopne
fcmovnu
int3
xor
fmulp
pop
inc
fdivl
jle
xchg
adc
daa
cltd
inc
dec
mov
movsb
adc
out
dec
ret
cli
bound
dec
and
ss
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
or
das
or
push
stos
movsl
test
push
nop
sarl
push
stos
movsl
lods
int
shrb
inc
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
movsb
int3
push
nop
and
mov
xor
data16
pop
pop
unpckhps
jg
outsb
fxch
lret
mov
imul
out
push
leave
in
and
inc
popa
arpl
sub
push
clc
test
mov
pop
mov
sbbb
movsl
lods
int
ljmp
ret
xchg
or
adc
push
pushf
das
mov
pop
cmp
fnsave
pusha
inc
repz
movsb
shll
arpl
dec
jg
fldenv
data16
jp
mov
fisubrl
mov
aam
insl
ds
pushf
inc
adc
and
call
sar
mov
js
mov
adc
jb
sub
mov
ret
bound
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
loopne
push
nop
dec
cmova
or
push
stos
movsl
lods
int
jo
inc
or
test
push
adc
inc
or
movsl
lods
int
nop
cs
or
movsl
lods
fstl
cs
or
movsl
lods
int
xchg
cs
or
xchg
mov
inc
add
sbbb
sub
inc
sbb
movsl
lods
fstl
cs
or
movsl
lods
int
nop
cs
or
cmpsb
lods
int
push
and
sbbb
movsl
lods
int
nop
cs
or
movsl
lods
in
pop
nop
ss
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
rcl
push
nop
cs
mov
stos
movsl
lods
stos
push
nop
cs
or
icebp
jecxz
push
nop
cs
or
xlat
fistpll
or
or
push
imul
inc
pusha
mov
movsl
lods
int
nop
cs
or
mov
test
decl
or
test
inc
or
or
int
nop
cs
or
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
nop
cs
or
movsl
lods
int
fisubs
nop
push
stos
push
pop
daa
sub
aaa
mov
test
popa
repnz
aaa
imul
test
imul
push
jge
adc
sub
es
or
push
xor
cli
je
mov
or
push
xchg
dec
cmpsb
mov
addr16
pop
xchg
cmpsl
dec
sahf
mov
xchg
scas
ja
pop
aaa
ljmp
mov
cs
sahf
fs
fidivs
shll
repz
xlat
cmpsl
mov
push
mov
sub
xlat
fs
push
add
jle
mov
jns
sbb
pusha
mov
add
cvtpi2ps
jge
push
sbb
pop
mov
shlb
jmp
pop
mov
mov
imul
add
rcrl
mov
and
sarb
push
cmp
cmpsl
daa
pusha
cmp
cmp
inc
push
lods
jg
out
sbb
sbb
pause
in
lods
xor
push
jno
loope
ds
nop
xchg
aam
fchs
pop
push
sub
or
outsb
gs
pop
push
std
push
into
lret
and
jmp
jl
out
push
xchg
sub
out
call
xor
pop
push
inc
shl
and
in
cltd
xchg
and
shll
inc
je
addr16
xor
js
rcrl
dec
test
lock
rorl
enter
out
mov
pop
popf
arpl
mov
shlb
into
adc
nop
inc
jl
inc
mov
sub
pmuludq
pusha
sub
dec
push
outsb
mov
out
mov
stos
dec
mov
push
lds
rolb
rolb
rcrb
push
loopne
repz
cli
pop
cwtl
mov
jb
mov
fadds
jo
cli
hlt
stos
pusha
adcb
ret
fdivrl
jle
push
movhlps
xchg
lret
pop
jp
push
sub
stc
ja
outsb
mov
js
sbb
cwtl
fst
pop
fcomi
movsb
inc
out
jb
dec
into
ror
ja
ror
lock
cmp
shrb
imul
xchg
cmp
jmp
pop
movsb
jecxz
jl
call
nop
mov
icebp
jl
pop
mov
push
int
pop
cmc
inc
aad
repnz
jecxz
sbb
push
add
mov
adc
dec
jp
lahf
sarb
faddl
jle
andl
push
cmpsl
mov
mov
loopne
xchg
scas
mov
push
andl
gs
stos
js
fcoml
dec
dec
shll
xchg
jmp
push
icebp
ljmp
sub
dec
hlt
jbe
decl
xor
jno
imul
push
lret
xchg
xor
mov
cmp
xor
and
add
loop
xchg
push
test
js
adc
jmp
clc
loope
xor
loop
jne
xchg
pop
aam
ficompl
mov
pop
out
push
mov
lret
cmpsb
dec
cmc
jg
lahf
xadd
xor
ret
cmp
push
cmc
and
lret
and
fldenv
jle
jnp
lods
mov
mov
jae
pop
sti
popa
imul
data16
mov
loop
pop
int
adc
insb
stc
and
mov
cmp
fnstcw
mov
push
mov
les
add
add
dec
and
outsl
and
sarl
sub
fwait
nop
mov
fnsave
inc
icebp
insl
mov
lock
mov
sahf
jbe
pop
add
pop
subl
adc
fldt
lods
lods
and
fnsave
dec
in
xor
imul
push
cld
loopne
js
stos
aad
dec
rcll
test
inc
notl
popa
mov
dec
jl
int
xor
mov
add
push
out
sub
adcl
pushl
cmpsl
call
cs
jge
cmp
repnz
or
int3
scas
add
mov
jmp
pop
mov
push
iret
pop
ror
insl
jle
mov
mov
jmp
mov
gs
gs
cli
sahf
mov
xchg
mov
call
mov
pusha
iret
cmc
cmp
popa
mov
xor
lret
adc
cs
pop
lods
sbb
movsl
enter
xor
xchg
fidivl
je
adc
ret
dec
dec
adc
fnstenv
shl
mov
jae
xchg
insb
sbb
out
or
shrb
xor
mov
jecxz
stos
cmp
into
mov
stos
xor
pop
xor
inc
mov
xchg
movsb
push
mov
cmpsb
movb
and
jno
sbb
and
scas
bound
dec
fisubl
rol
and
fimull
sti
pop
mov
push
ffree
test
fnstcw
popf
sub
pop
cmp
pushf
fnstenv
dec
bound
add
es
js
cmp
and
lahf
jb
jge
in
iret
sub
lret
cmp
cmp
fcomps
jle
cmc
dec
push
mov
negl
lock
mov
cwtl
pop
leave
pop
sub
sbb
fs
jmp
xchg
xchg
sar
jbe
clc
popa
outsb
mov
mov
adc
mov
xor
mov
dec
int3
jg
jg
les
and
mov
jp
dec
push
pusha
xor
jne
dec
movaps
pop
mov
jne
push
push
enter
mov
ljmp
outsb
mov
adc
lock
test
jo
movsl
mov
pop
daa
ret
mov
loop
movsl
jl
fcoml
shlb
into
mov
sti
and
repnz
out
xor
sub
stc
fnsave
adc
testb
sarl
fcoms
daa
movsb
xor
sti
out
hlt
nop
jo
test
lahf
or
enter
xchg
ret
dec
orl
loopne
insl
pop
enter
fldt
std
in
sbb
lds
adc
jl
mov
call
push
sbbb
cwtd
pop
cmp
int3
test
jbe
das
cmp
cli
sarl
cmc
mov
inc
icebp
aas
sbb
mov
xchg
fsts
imul
mov
rcrl
je
insb
call
cmp
dec
lcall
cli
mov
iret
push
je
loop
xor
dec
inc
stc
arpl
negb
push
jge
cmp
adc
and
rorb
push
sbb
jmp
in
xor
xor
or
mov
mov
addr16
popf
or
add
daa
and
ljmp
js
inc
jmp
nop
jnp
mov
ds
leave
cmp
repz
pop
push
insb
mov
xchg
push
hlt
cs
movb
inc
jle
ret
push
dec
idivl
mov
fs
shlb
pop
ja
jno
ffree
je
push
aaa
inc
cltd
mov
in
mov
sahf
xchg
int
iret
inc
loope
cmove
sbb
es
push
fwait
adc
lret
add
dec
pop
inc
mov
rolb
sbb
lds
jp
ss
jg
jl
inc
mov
stos
test
fldt
fisttps
push
popa
cmp
popf
or
cmp
iret
mov
movsb
mov
add
test
dec
dec
dec
sub
jp
imul
movsl
pop
into
xchg
inc
sbb
outsb
add
jae
dec
xchg
leave
and
xchg
mov
stos
subl
shlb
addr16
lds
lret
push
adc
sub
and
sahf
lods
sar
xchg
cmpsb
cmc
pop
js
aas
popa
mov
stos
add
scas
jnp
jg
add
mov
mov
and
sub
jle
in
lds
fldt
sub
pop
stos
jbe
mov
lahf
jns
inc
repz
sbb
cmpsl
add
cmp
daa
jb
xlat
gs
out
sahf
ds
mov
fsubs
mov
mov
xchg
stos
fbld
add
sti
xchg
and
cmp
xor
mov
mov
xor
add
or
out
mov
jne
das
xor
jbe
popf
in
cmc
setno
cmc
rclb
push
sub
pop
fdivrl
outsb
sbb
xchg
mov
ud0
rcrl
inc
mov
jle
fnstcw
mov
adc
sbb
pop
pop
xchg
data16
adc
insb
cmp
scas
mov
loope
jp
cmpsb
mov
pop
shrb
cli
mov
or
insb
sub
movsl
and
adc
mov
or
jo
push
mov
and
xor
testb
adc
ret
adc
cld
aaa
sbb
cmpsb
fdivp
sti
imul
dec
mov
dec
sbb
adc
and
stos
push
xchg
cli
dec
mov
aas
data16
cmovg
outsl
xor
lret
cmpl
mov
rcrl
data16
ret
and
pop
inc
jmp
dec
cmpsb
mov
ja
jecxz
add
popa
cmpsb
mov
in
outsb
clc
or
repnz
das
mov
sub
add
cli
xlat
push
mov
dec
mov
idivl
xchg
dec
inc
test
mov
inc
icebp
enter
sarb
lods
push
xchg
pop
mov
add
jb
aas
fcoml
push
cmpsl
repz
mov
or
out
jecxz
mov
jnp
jg
in
idivl
hlt
out
add
mov
mov
push
inc
mov
xchg
addr16
and
adc
push
mov
push
mov
mov
mov
push
pushf
loope
sbb
shrl
mov
aad
push
stos
cmp
ja
and
xlat
addr16
icebp
enter
outsb
mov
mov
mov
mov
add
jle
jno
inc
shlb
jp
aam
test
insl
subl
and
ja
test
lea
push
push
addl
mov
mov
sbb
sub
unpckhps
or
ds
push
sub
fcmovnu
lahf
cs
inc
push
in
outsl
or
mov
pop
jp
dec
pop
xor
daa
es
outsb
inc
lea
in
cmc
xchg
lock
cmp
xchg
mov
xchg
data16
into
fildl
xchg
pop
aas
iret
gs
add
mov
pop
and
aam
xchg
pop
mov
in
enter
jl
test
icebp
shll
lods
sub
loop
ficoms
adcl
add
add
jge
ret
and
scas
filds
or
sub
nop
loop
add
cmovs
sbb
daa
out
cld
mov
roll
mov
dec
cmp
je
push
mov
test
jb
cmp
ljmp
add
testl
add
hlt
fcompl
sbb
add
test
leave
or
call
pop
mov
or
aad
jb
push
lret
cmpsb
insl
pop
popf
daa
je
jns
dec
ja
push
rclb
push
jp
in
arpl
and
out
mov
adc
xchg
sub
ja
sbb
mov
xchg
cmp
inc
inc
lea
cs
out
pop
mov
imul
arpl
out
mov
jl
mov
test
pop
cmp
adc
add
pusha
add
add
ds
xlat
push
mov
lahf
inc
jo
dec
pushf
cmp
movsb
ja
and
cwtl
jns
dec
add
clc
jae
lret
push
testl
jp
mov
decb
stc
in
pop
or
loopne
rcl
call
xor
mov
aas
loop
sbb
popf
ljmp
ja
jns
cld
mov
dec
xor
shlb
rcll
mov
idivl
jmp
push
js
data16
in
and
or
loopne
dec
sub
sti
in
xlat
cld
mov
repz
mov
add
push
repnz
outsl
mov
js
jge
sahf
mov
inc
mov
xchg
das
pop
shlb
adc
xchg
mov
arpl
mov
cmp
xchg
push
inc
jp
sti
xor
push
xchg
mov
lea
mov
gs
ja
mov
push
rcrb
push
mov
inc
lcall
test
sub
scas
mov
jno
pop
mov
xor
cld
daa
sub
cmp
cmp
push
mov
mov
pop
inc
dec
mov
insb
lods
sti
cmp
sub
fdivl
sahf
les
add
mov
dec
negb
inc
mov
mov
mov
jnp
out
mov
in
sbbl
inc
dec
xchg
cs
and
inc
add
ljmp
adc
jl
cltd
loopne
sub
iret
pop
emms
aam
scas
jle
jno
sbb
in
outsl
sbb
jns
clc
pop
test
out
stos
xchg
pop
out
test
mov
push
shll
js
cwtl
or
or
jno
in
jbe
sbb
mov
sarl
push
xchg
or
sub
mov
addr16
test
sahf
fwait
movsl
data16
cmp
ja
xchg
inc
fcompl
stos
ret
cmpb
push
es
mov
adc
das
push
sbb
cmp
mov
cmp
lcall
jecxz
cld
in
or
roll
cli
add
pop
xchg
lock
inc
ficoml
sahf
divl
inc
inc
jae
adc
fadds
push
mov
xor
in
faddl
sub
sbb
cs
mov
or
cmpsb
pop
loop
inc
inc
dec
sub
adc
mov
xchg
push
add
in
dec
es
fildll
addr16
popa
sub
fs
push
lea
ficomps
dec
push
das
enter
lods
sarb
pop
cs
mov
inc
gs
fdivrs
int3
push
sbb
mov
lahf
xchg
or
sub
shlb
mov
xchg
push
add
adc
jle
mov
icebp
aas
and
pusha
or
js
fcoml
ret
add
je
sbb
push
sbb
xor
hlt
sub
std
inc
mov
mov
or
stc
inc
inc
sub
dec
lock
mov
and
cld
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
