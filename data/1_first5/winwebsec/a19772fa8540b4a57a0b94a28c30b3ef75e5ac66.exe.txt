push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
mov
lret
jae
mov
movsl
adc
rcrb
icebp
out
push
sti
orl
xchg
lcall
jnp
mov
lea
xchg
aas
subl
and
mov
sbbb
lcall
das
out
pop
push
outsl
test
sub
fstps
push
xchg
xchg
in
mov
inc
push
roll
mov
sti
daa
lock
mov
pop
or
ret
inc
loop
adc
and
and
xchg
lea
jmp
adc
popa
movb
add
test
cmp
pop
fmul
mov
test
addr16
adcb
push
test
xchg
mov
out
insb
xchg
xor
inc
iret
mov
push
repnz
ljmp
orl
push
std
xchg
lods
and
ret
mov
xor
sub
jns
arpl
inc
and
bound
clc
jl
cli
sbb
iret
int
mov
insl
pushf
or
je
push
inc
and
pushf
jge
mov
xor
sbb
lahf
mov
mov
xchg
insl
mov
hlt
bound
clc
int3
jbe
fiaddl
into
movsb
in
inc
dec
mov
leave
cmp
jp
mov
shlb
dec
pop
stos
mov
mov
aaa
pusha
pop
test
out
pusha
test
xchg
push
push
fldenv
adc
sbb
sahf
sbb
xchg
pushf
dec
jns
cmp
push
cmp
imull
mov
fxch
pushf
pusha
js
ret
pusha
mov
leave
subb
add
cmp
pop
test
sub
in
int3
and
cmp
ljmp
aas
dec
lcall
enter
adc
mov
into
loope
xor
dec
push
daa
jnp
cmp
lods
cmpsl
xchg
das
mov
pop
mov
cmpsb
push
mov
xor
into
in
push
aam
sub
aam
or
loope
gs
xchg
or
sbb
outsb
jo
cmpsb
test
and
imul
push
pop
xor
in
add
arpl
adc
cmp
leave
push
test
int3
pop
rclb
adc
adc
dec
sbb
sarl
mov
mov
cmp
adc
inc
push
xor
jecxz
stos
mov
jne
fldenv
inc
sub
call
xchg
sub
mov
mov
inc
cmpsl
dec
xor
scas
inc
pop
fldl
mov
add
adc
cmp
push
test
and
mov
ret
das
push
adc
dec
dec
adc
pusha
sbb
add
lahf
xor
scas
push
mov
imul
ljmp
add
popf
and
or
dec
xchg
into
add
fsubrs
xchg
idivb
xor
mov
and
stos
or
int
add
fs
aam
repz
dec
cmp
lret
fsubs
leave
jno
mov
inc
shrl
rep
or
sub
into
cltd
dec
and
das
in
fmuls
sbb
lahf
mov
push
fsubl
inc
cltd
add
dec
les
lods
arpl
icebp
aad
mov
push
push
dec
jmp
aad
push
pushw
test
out
xlat
fwait
imul
lcall
testb
rsm
or
or
cmp
xchg
mov
and
stc
mov
loopne
dec
xor
adc
inc
test
inc
mov
add
gs
inc
rcr
insb
add
xchg
mov
arpl
mov
lret
test
icebp
pop
daa
mov
jle
add
in
aas
xchg
or
mov
aas
or
imul
or
std
repnz
popf
or
or
xchg
mov
mov
pop
jg
stos
inc
push
mov
fildll
sub
inc
xchg
into
add
movsb
jmp
subb
xor
cmp
or
jge
mov
jge
stos
lret
js
push
sbb
dec
adc
jle
sub
lds
nop
in
std
jnp
xor
lahf
add
mov
cwtl
dec
adc
mov
lock
inc
xor
movsl
clc
push
jecxz
lret
es
sarb
sarb
fsubp
jl
leave
scas
loope
mov
aam
sbb
cmp
mov
adc
je
mov
pop
insb
test
jecxz
iret
loope
orl
clflush
out
pop
fcomps
cmp
lods
jl
mov
arpl
push
pop
pusha
add
sbb
je
adc
pcmpeqw
scas
pusha
cmp
lea
fs
clc
dec
jg
jae
and
hlt
pop
pop
lret
xchg
push
enter
sbb
and
push
push
fabs
cmp
cmpsl
cmp
pop
ret
jge
and
xchg
sbb
pop
test
pop
xlat
shlb
mov
aam
lcall
dec
or
aam
adc
popa
fstp
sub
lock
mov
dec
mov
cld
push
arpl
push
sub
mov
sub
in
dec
ljmp
iret
xor
imul
mov
rep
and
sub
push
jae
sbb
cltd
mov
outsl
mov
xchg
inc
sub
push
pusha
pop
insb
xchg
xchg
push
xchg
loope
icebp
into
xchg
pop
movsl
xchg
xor
jnp
outsl
or
xchg
subl
cmc
lea
xor
out
pop
out
pop
xor
push
mov
in
mov
inc
lock
insb
imul
out
and
sbb
xchg
cmp
mov
or
mov
call
and
or
push
inc
jo
loope
lret
ds
mov
fimuls
dec
xchg
jns
xchg
in
repz
cmp
inc
xchg
das
mov
mov
mov
or
mov
cwtl
imul
mov
pushf
mov
and
stc
sub
mov
mov
push
clc
ss
popa
rcll
push
shrb
inc
or
jmp
xor
jo
inc
lcall
dec
push
scas
jo
xor
test
sbb
inc
lret
sti
iret
xchg
cmp
lds
push
and
sub
cmp
pop
sbb
test
xchg
daa
lock
out
js
popf
cmp
cmp
or
cltd
nop
sbb
scas
into
mov
scas
mov
mov
lea
cld
ds
stc
xchg
xchg
in
push
imul
movsl
push
sub
cld
sbb
lcall
popa
dec
dec
jb
pushf
cmp
addr16
rorb
xor
aaa
pop
mov
lret
inc
out
mov
sbb
movsb
mov
das
jo
cmp
pop
adc
xchg
mov
enter
xchg
cmpsl
mov
test
jno
int
adc
jg
rcrl
sarl
and
cmp
cld
je
jbe
and
test
jmp
cmpsb
add
aaa
push
jmp
bound
cmp
jae
mov
cs
repz
jecxz
mov
or
cwtl
jecxz
daa
testl
rclb
push
aaa
or
std
popa
xchg
adc
rclb
stos
repnz
in
jnp
into
push
icebp
call
ja
fcmovbe
mov
lods
imul
push
mov
push
repnz
jo
loopne
cmpsl
push
pop
cmpsb
adc
and
test
loope
add
mov
pop
fbld
idivl
sbb
jle
dec
out
or
ret
inc
or
jnp
arpl
dec
and
popa
sub
jle
inc
sahf
nop
adc
ds
cmc
fisttps
js
jg
mov
mov
mov
mov
push
ljmp
jnp
clc
push
xchg
outsb
lea
test
push
repnz
addr16
int
cmp
pop
or
push
call
push
inc
lahf
inc
mov
cmpsb
aas
inc
or
add
and
pop
aam
add
sti
in
lock
shl
inc
mov
lcall
aaa
pop
adcb
hlt
push
insl
sub
add
adc
lret
mov
xchg
xchg
mov
push
mov
andl
leave
mov
test
cltd
cmc
clc
hlt
int3
xor
ret
andl
sub
mov
push
rcrb
pop
dec
mov
outsb
out
jae
and
fdivrs
and
xlat
in
jae
in
push
repz
ret
xchg
sub
lret
dec
dec
in
rol
nop
jno
test
aam
daa
rolb
pushf
or
mov
pop
adc
enter
ja
fsubl
je
gs
pop
mov
cmp
popa
ljmp
jp
jp
sub
sub
jecxz
push
dec
cmp
add
cmp
mov
xchg
xchg
sub
insb
push
fwait
xchg
jbe
sub
nop
fsts
int3
js
push
xchg
hlt
lcall
stc
fsubrl
popf
pop
jl
in
loop
lret
fisubrl
dec
mov
std
push
xor
pop
xchg
cli
mov
aam
dec
sub
add
aaa
loop
sub
or
adc
stc
mov
mov
test
lret
hlt
lret
hlt
jo
fistpl
nop
jb
mov
dec
push
movsl
add
dec
or
ja
add
xchg
movl
sti
xchg
xchg
mov
xlat
xchg
add
xchg
hlt
cmp
adc
add
iret
ficompl
ret
cld
enter
in
cmpsb
and
or
or
and
or
sahf
jns
fcompl
shlb
test
cmpsl
and
push
sub
push
ret
fwait
aaa
aam
jnp
aas
push
push
shrb
mov
mov
mov
rorl
lret
fcoml
cmp
pop
in
xor
ja
in
pusha
clc
push
es
repnz
and
mov
inc
pop
and
cs
dec
imulb
daa
add
mov
testl
testl
jecxz
xor
push
insb
stc
mov
adc
cmp
ja
fidivrs
jecxz
cmp
sbb
dec
jo
inc
out
cmp
sub
inc
out
lret
add
xchg
cmp
sti
lret
dec
jae
std
outsl
int
or
std
mov
shlb
jge
mov
lods
push
and
shl
arpl
cmpsb
pop
sbb
movsl
mov
mov
and
iret
cs
adc
sbb
ds
jmp
in
es
xlat
dec
mov
dec
les
fdiv
pop
ss
out
mov
dec
inc
mov
xor
or
jmp
and
xchg
iret
dec
jle
inc
adcl
push
das
mull
push
adc
pop
and
sub
out
add
lret
loop
cmpsl
pop
stc
mov
adc
mov
in
push
insb
test
or
pop
loopne
js
and
push
add
push
in
or
std
push
jns
and
sbb
mov
int
xchg
cmp
rorb
jne
xor
cs
mov
or
movsb
adc
jmp
adc
mov
loopne
mov
es
add
xchg
mov
mov
cmp
scas
lcall
jmp
mov
lcall
out
lahf
packsswb
ja
xor
inc
sub
fwait
sbb
cmp
lods
in
xchg
sbb
hlt
lcall
inc
mov
pop
ret
ss
inc
inc
sub
jmp
hlt
push
push
add
sahf
push
cmp
adc
sbb
add
cmpb
cmp
cwtl
xor
sub
pop
sbb
adc
sbb
arpl
xchg
imul
dec
pop
call
sahf
lds
pushf
mov
inc
xchg
adc
shlb
popf
ljmp
arpl
adc
in
fs
xchg
xchg
sbb
imul
mov
or
xor
mov
and
jb
pop
imul
gs
xor
sbb
ja
out
xor
xlat
cvtdq2ps
enter
push
int3
push
and
pusha
add
push
nop
hlt
dec
popf
out
nop
lea
add
cmp
out
lret
push
mov
mov
hlt
outsl
pop
mov
pop
jno
daa
mov
fdiv
shll
mov
mov
or
test
cmova
fimuls
push
adc
cmp
adc
out
xor
ja
pop
lea
pop
lret
pop
xor
enter
lcall
cmp
mov
sbb
push
jnp
or
push
test
jmp
cmp
jecxz
popf
and
cli
test
repz
push
sub
jae
mov
mov
repz
lock
jecxz
aad
aas
push
sahf
jb
les
inc
gs
aam
mov
cmpsb
mov
out
inc
and
outsb
test
hlt
mov
ror
mov
aas
cmp
xor
test
stos
and
xchg
xchg
add
scas
sbb
sub
loop
gs
lds
pop
mov
and
test
dec
inc
subl
addl
sbb
js
enter
cmp
rcr
push
int
imul
or
shrl
adc
pop
push
out
hlt
inc
jg
dec
dec
insb
push
ret
inc
test
cwtl
loopne
xchg
jg
aaa
dec
push
jp
bound
enter
and
sbb
inc
push
in
sahf
dec
dec
ljmp
xchg
gs
push
push
test
cmp
mov
shrl
nop
sbb
mov
mov
push
repnz
sub
je
jo
xchg
mov
xchg
mov
add
sub
inc
mov
xchg
nop
add
imulb
push
fistpll
xchg
cld
mov
in
xchg
into
xchg
lret
into
lods
fsubr
push
enter
movsb
mov
cmp
xor
fadds
into
scas
aam
xor
arpl
mov
stos
and
pop
shrb
xor
std
addb
aad
adc
aaa
negl
push
or
cmp
jg
je
pop
es
fnstenv
mov
mov
icebp
sbb
call
fcompl
loopne
pushf
repnz
or
jmp
dec
cmp
in
or
mov
mov
pushf
xor
inc
fdivrl
pop
cmp
gs
jb
repz
mov
jp
add
push
pop
xor
pop
aam
and
fsubl
loop
sub
and
lret
push
lods
cmp
fidivrl
aas
mov
add
jge
mov
sbb
fcmove
fs
idivl
and
sbb
loopne
or
jae
frstor
dec
lret
in
push
pusha
insl
sti
or
or
inc
lahf
ret
and
inc
mov
jno
pushf
outsl
imul
test
xlat
sti
popa
ja
pushf
and
pusha
or
std
movsb
roll
int3
push
shlb
or
cs
sub
inc
lahf
ljmp
xor
lret
mov
cli
fdivl
aas
fcomp
pop
jmp
xor
fadd
js
adc
in
xchg
bnd
iret
mov
ss
inc
mov
aas
cmc
add
lock
and
push
mov
mov
adc
mov
out
xor
push
xchg
add
push
mov
scas
inc
sbb
sub
enter
aad
pop
test
imul
ja
add
bound
cmp
pop
les
mov
insl
xor
jg
pop
sub
inc
scas
inc
loope
lock
cmpsb
xchg
adc
es
loop
movsl
cli
test
and
popf
imul
aad
dec
out
lahf
mov
rorl
movsl
test
sub
add
mov
mov
mov
mov
mov
and
scas
xor
cmp
enter
ljmp
inc
or
inc
mov
mov
in
dec
xchg
insl
decl
mov
stos
push
aaa
fsts
decb
and
ss
sub
cli
lock
lret
add
pop
or
pusha
testb
fmull
aad
fsubrl
jo
cs
adc
cmp
push
fs
pop
xchg
nop
fiaddl
dec
mov
ss
sarb
mov
xor
stos
test
xchg
sahf
ret
ret
lahf
lods
jcxz
mov
cmpsl
push
mov
inc
push
dec
xor
xor
xor
mov
sbbb
xchg
imul
lahf
orl
mov
fsubl
pop
rcll
mov
inc
fisttpll
mov
or
adc
push
inc
stos
test
cld
xchg
cmpsl
push
dec
jno
scas
mov
in
pop
mov
mov
cmpsl
adc
sub
lcall
xor
inc
movsb
mov
sub
cmc
or
cmp
pusha
enter
mov
inc
or
out
fnstenv
ss
insb
adc
inc
push
repz
or
call
sbb
sub
jae
rorl
push
add
mov
mov
scas
jnp
adc
enter
bound
sbb
push
imul
fcompl
jp
adc
adc
cmpsb
inc
dec
lds
std
cmp
aad
aam
leave
mov
pop
cs
cmpsl
test
sbb
push
icebp
and
xchg
push
push
lea
enter
mov
stc
add
test
outsb
pop
adc
int3
cwtl
lds
sbb
xlat
cmpsl
in
lahf
daa
or
in
lret
pop
add
inc
daa
mov
mov
pop
sbb
mov
daa
loope
xchg
dec
mov
clc
popa
rorl
sub
and
data16
test
mov
inc
add
inc
ljmp
inc
mov
sbb
fimull
and
daa
lcall
sub
dec
jae
lahf
add
xchg
dec
add
jg
das
test
jo
sbb
and
fwait
or
lods
dec
add
jo
or
dec
in
subl
ret
scas
sti
mov
ss
mov
je
es
push
jle
out
push
push
and
sbb
in
jne
jo
sub
aad
fstpt
dec
decb
fiadds
cmp
mov
rorl
mov
adc
push
cmpsb
dec
es
data16
inc
loopne
push
loop
sub
push
pop
sub
repnz
int
dec
mov
jae
dec
leave
scas
and
inc
mov
inc
sbb
stc
and
in
movsb
lret
mov
popf
iret
enter
movsb
mov
push
test
clc
lahf
loop
adc
loopne
fisubs
push
fdiv
jmp
xor
mov
add
leave
xchg
jne
xchg
pop
inc
push
mov
push
fcmovne
ret
add
loop
xchg
mov
mov
mov
sub
xor
jns
jle
aam
add
add
clc
push
stos
jg
mov
gs
jbe
fwait
cltd
push
stos
ljmp
popw
dec
xor
in
adc
or
xchg
in
dec
cmpl
ss
mov
lret
cmp
outsl
pop
lds
pop
sbb
xchg
inc
mov
ret
cmp
dec
stc
lea
ja
call
push
shlb
mov
mov
cld
sbb
mov
dec
jb
or
mov
imul
push
sbbl
test
and
sahf
inc
mov
loop
ret
mov
out
dec
daa
pusha
jno
icebp
insl
js
jno
sub
and
cs
jge
sbb
jne
insb
aam
mov
dec
daa
and
iret
or
pop
push
sar
jbe
lds
and
out
pop
xchg
mov
sbb
pop
pop
fdivr
jo
xchg
fldenv
inc
mov
mov
inc
pushf
push
pop
dec
mov
xor
movsb
xor
imul
call
or
imul
mov
sub
out
cmp
sub
pop
xchg
jnp
rcrb
scas
jl
sbb
or
or
insb
sub
xchg
daa
jecxz
clc
mov
ror
scas
divb
sti
aad
aad
mov
icebp
or
arpl
sti
aas
mov
push
in
mov
stos
jg
mov
loope
mov
cmp
movaps
out
mov
adc
xchg
jbe
pop
mov
sbb
lea
hlt
iret
insl
arpl
pop
inc
inc
mov
rcl
arpl
sti
jb
aad
arpl
cmp
and
aaa
cmpsl
dec
jecxz
daa
mov
es
cmp
xor
add
js
mov
push
int3
push
test
and
pop
stos
out
xor
lcall
mov
ret
push
pushf
popf
in
ret
push
sarl
mov
jecxz
enter
xor
shrb
sbb
pop
push
pop
pop
ficoms
push
sub
pop
int
mov
arpl
mov
popf
inc
test
testb
ds
sub
mov
ud2
jnp
rclb
loopne
pop
jo
sbb
shrb
ret
push
mull
arpl
bound
out
movb
inc
push
mov
roll
sub
cmp
pop
adc
jge
pop
push
in
ret
and
addr16
ss
je
jecxz
aad
adc
mov
enter
dec
xchg
mov
imul
inc
nop
daa
xchg
sub
jp
mov
add
in
aas
aaa
push
test
cmp
sahf
jp
insl
xor
jg
rcl
js
xor
orb
ds
bound
jle
push
sub
mov
int3
mov
mov
int3
je
mov
cmp
and
jo
lcall
cmp
andl
insb
cld
ret
scas
jl
dec
pop
repnz
leave
shrl
cmc
int3
jge
test
and
loope
aas
push
mov
notb
mov
dec
mov
mov
imulb
adc
nop
xchg
mov
mov
mov
cmpsl
or
lods
fcmovnb
push
daa
mov
repnz
dec
sbb
jno
movb
dec
jl
enter
into
mov
aaa
mov
push
stos
arpl
lods
and
pusha
outsb
mov
movsb
inc
mov
jmp
cld
lea
bswap
mov
insl
cmp
mov
cmpsl
xchg
shll
mov
mov
into
push
addl
cmp
mov
in
jns
outsb
pop
das
std
xchg
push
lea
js
add
shll
cld
lods
adc
mov
push
pop
cs
nop
mov
rcrl
xchg
movsl
and
inc
dec
and
or
sbb
in
in
in
fcomp
or
inc
inc
xchg
xor
vshufps
sti
sti
xor
outsl
sbbb
sbb
pop
mov
dec
mov
shrl
das
cltd
and
dec
jmp
xchg
ret
ret
jnp
xchg
jo
inc
pop
add
pop
mov
enter
in
in
in
out
in
lock
push
xor
lret
jg
push
movsb
xlat
add
add
adc
insb
jb
jno
sub
mov
cld
jecxz
lahf
mov
jge
xchg
dec
stc
cmp
push
pop
pop
test
xchg
pop
daa
sub
push
fwait
lods
lods
inc
imul
movsl
jle
les
test
push
push
fistpl
iret
mov
inc
mov
or
lret
fisubs
xchg
push
imul
push
es
je
dec
and
sbb
je
clc
jne
mov
push
cmp
sbb
push
xchg
gs
sbb
mov
push
stos
test
insb
xchg
imul
xchg
jno
pop
sub
jecxz
lret
enter
jmp
leave
bound
orb
mov
pop
lret
jb
addr16
xchg
out
movsb
fistps
pop
mov
mov
int3
ds
test
adc
cli
dec
pop
xor
mov
int3
int
push
movsb
xor
andl
cmc
xlat
lcall
call
test
fs
and
or
sbb
push
ret
jg
cmp
lret
ror
loope
jne
dec
outsb
adc
out
loopne
jmp
add
jmp
push
repz
sbb
fdivl
or
stc
sub
jecxz
cmp
jecxz
jns
bound
inc
lods
in
lock
int3
xchg
ret
inc
out
insl
xor
cli
ja
add
in
pushf
inc
xor
push
sub
push
add
push
mov
int
push
stos
sysexit
or
sub
mov
mov
inc
jmp
pop
je
push
inc
icebp
lds
and
xchg
mov
pop
dec
pop
cmpsb
xchg
jmp
inc
repnz
faddl
push
int3
lea
mov
pop
add
pop
pusha
clc
dec
and
jg
xchg
mov
hlt
dec
outsb
fldt
mov
std
popf
lea
outsl
idiv
out
je
xchg
mov
pusha
sub
mov
outsl
and
and
mov
and
mov
in
inc
idivb
outsl
xor
sub
cmc
or
out
or
into
or
cmp
icebp
insl
cmc
outsl
test
sub
hlt
leave
add
adc
lahf
cmp
imul
and
adc
mov
fmull
xor
sub
or
pusha
push
sahf
xor
add
adc
adc
stc
cmpb
fidivrs
lods
mov
adc
jle
xchg
xor
sbb
sbb
out
or
xor
ja
in
cmp
test
jl
adc
repnz
jle
mov
lock
out
out
les
push
jl
scas
sub
cld
xor
add
push
sbb
add
pop
inc
divl
push
dec
cwtl
addr16
pop
rcr
imul
and
leave
in
aad
int
mov
sbb
enter
lret
ds
inc
inc
sbb
sbb
mov
ror
lahf
lock
adc
ficomps
and
mov
push
push
xchg
and
stos
push
jle
push
loop
adc
in
loop
dec
pop
rcr
es
out
adc
jae
out
xchg
je
xor
adc
sub
inc
xor
mov
adc
mov
outsb
jno
and
push
test
xlat
adc
push
sbb
and
xchg
push
std
and
sbb
mov
sbb
outsl
mov
div
lods
jo
cmp
insl
jae
jne
jno
icebp
in
or
aad
xor
shrl
shl
lock
dec
and
add
rcll
or
and
pop
push
cmp
ljmp
stc
faddl
jo
add
aaa
mov
mov
jae
jbe
ret
cld
lret
aaa
xchg
fildll
repz
mov
ss
cmp
rcrb
mov
inc
mov
shl
add
mov
mov
fmul
add
pop
test
rcrl
jp
mov
rcll
ret
adc
fmuls
shrl
out
xor
jg
dec
es
xchg
movsl
xchg
cmpl
cwtl
repz
lret
jnp
pop
lock
mov
cmp
xchg
subb
inc
adc
ror
xchg
stos
shrl
int
iret
in
sahf
pop
sti
filds
inc
lahf
inc
lret
push
mov
repnz
or
shll
punpckldq
and
out
dec
sar
test
insl
xor
pushf
cs
sub
fnsave
ja
dec
jne
sub
jno
inc
popf
stos
jp
test
mov
or
in
dec
xor
sub
xor
add
or
sti
xor
or
xchg
jo
scas
cltd
sahf
xor
sti
jo
xchg
icebp
gs
xchg
sbb
stos
add
pop
daa
or
xchg
xchg
push
fcoms
or
push
loopne
call
mov
push
lcall
pop
leave
pop
xchg
mov
mov
inc
enter
hlt
out
ret
sbb
mov
add
adc
call
and
jae
rcr
sbb
jb
mov
adc
fidivs
out
sbb
mov
outsb
lods
mov
cmc
loop
loope
or
cs
mov
rorb
jb
cmp
push
dec
jb
test
in
jge
adcb
test
xor
mov
out
cmp
subl
test
roll
popf
mov
insl
loope
roll
jns
mov
icebp
cmp
test
stos
shlb
pop
popf
or
push
cmc
sbb
repnz
clc
xlat
insl
pusha
fisttps
dec
push
inc
loop
fistpll
ficoml
mov
sbb
les
adc
loope
mov
push
cmp
ljmp
data16
shll
dec
xchg
loop
out
insb
rorb
dec
aad
pusha
jg
sub
mov
cltd
sbb
arpl
and
movsl
sbb
loop
ja
addr16
jp
out
mov
dec
ss
mov
es
fnstenv
rolb
imul
or
dec
test
inc
lcall
mov
push
imul
cmc
call
push
cmp
int
mov
ja
and
xchg
mov
das
cmp
insl
jecxz
mov
jnp
pusha
icebp
or
jbe
mov
push
inc
sti
bound
scas
roll
inc
xchg
or
or
out
push
push
xlat
or
imul
adc
mov
mov
push
fldcw
xor
ss
test
mov
or
loopne
pop
sbb
movsb
shrl
push
fidivl
ja
pop
add
pop
jle
ds
out
mov
cmp
outsl
dec
add
js
popa
pop
dec
sub
xchg
movb
add
lods
ret
dec
out
dec
test
test
pop
add
imul
inc
emms
xlat
xor
cltd
icebp
fwait
sub
mov
xchg
sahf
dec
mov
pop
xchg
leave
fnstcw
cmpsl
mov
outsb
popa
sub
cltd
or
sahf
std
sbb
jno
rcl
jne
jle
addr16
mov
cli
adc
js
inc
xor
adc
fisubl
in
sub
nop
rorl
dec
scas
xchg
pop
sti
pop
iret
test
xchg
mov
dec
cmp
fcomi
lods
lods
loope
lcall
xchg
add
ss
ret
stos
stos
xchg
mov
push
rcr
movsb
std
push
pop
out
sbb
add
les
adcl
mov
fcmovu
stc
loope
insl
jbe
jne
les
adc
repz
scas
std
divl
push
add
mov
ds
fwait
or
popf
push
mov
push
dec
xor
arpl
lods
cmp
ret
gs
add
xlat
mov
fwait
mov
pop
xor
dec
mov
xor
mov
mov
xor
sbb
insb
mov
sub
mov
jb
add
shll
fcos
pop
adc
ljmp
dec
ja
movsl
or
aam
xchg
bnd
xor
loop
mov
mov
push
inc
sahf
sbb
movnti
dec
loop
loop
int3
xor
movsb
pusha
mov
js
mov
dec
loop
dec
xchg
sbb
outsl
mov
pushf
cmp
and
inc
scas
arpl
xchg
dec
xchg
out
sbb
and
test
out
negb
mov
add
jb
push
or
out
cmp
pop
cmp
jp
mov
daa
js
xchg
js
xchg
sbb
fisubrl
ljmp
jg
daa
cli
or
ljmp
fistpl
xchg
push
iret
fstl
push
ljmp
or
dec
lahf
or
movsl
jmp
sbb
jp
sti
xor
aas
sub
xor
sarb
seta
jnp
insl
push
scas
jmp
mov
pop
popf
popf
and
dec
pop
sarb
enter
stc
loop
mov
sub
into
repnz
sarl
sarl
mov
jmp
out
jecxz
xchg
in
inc
cmpsl
mov
out
sub
or
call
adc
pusha
sub
xchg
pusha
incl
push
cmp
mov
inc
pop
and
jo
mov
pop
cwtd
cmp
cli
fstps
mov
pop
or
fstpl
sti
add
mov
jb
cld
push
xor
adc
pop
lcall
inc
je
dec
lods
dec
and
xchg
or
sub
loop
mov
add
add
pop
outsb
or
sbb
pop
cmp
xor
shl
inc
popf
and
sub
aad
xchg
mov
cmp
jne
push
mov
sub
pop
pop
push
stc
imul
xor
push
outsb
pop
call
pop
or
or
fcompl
out
jp
fildl
mov
das
fdivrs
outsl
or
loope
repnz
fsubrs
jns
dec
mov
cmp
mov
pop
jmp
dec
mov
adc
sti
xchg
sbb
bound
mov
aaa
dec
shl
dec
or
dec
xor
aaa
das
clc
loop
lds
dec
shlb
mov
pushf
movsb
or
mov
xchg
subb
pop
add
jg
sub
mov
sti
or
xorb
ja
daa
inc
mov
sbb
pusha
cmpsb
sub
fbld
cmp
popf
pop
cmp
adc
dec
incb
push
adc
orl
mov
cli
push
bound
mov
mov
mov
push
mov
ss
rclb
addb
add
shl
adc
lret
adc
idivl
jnp
push
jns
scas
cs
cmp
or
aad
subb
push
leave
mov
in
sahf
mov
addl
mov
sub
outsl
inc
insb
clc
mov
and
mov
ljmp
flds
stos
or
sti
cltd
mov
pop
pop
test
pushf
divl
mov
dec
ds
xor
arpl
sbb
xor
shlb
testl
lret
xchg
pop
fistpl
sub
inc
jbe
jne
sar
xchg
cmp
or
xor
into
shll
add
push
ficompl
xor
loop
push
stos
jo
dec
int3
aam
sub
mov
push
jne
dec
pushf
out
pop
push
jp
mov
or
jno
cmp
stc
jno
shlb
jno
pxor
xchg
iret
jns
and
jle
les
mov
clc
mov
cmp
iret
jnp
insl
hlt
call
add
push
jge
xor
inc
dec
imul
jne
out
mov
dec
lcall
bswap
or
add
ds
iret
ja
divb
push
into
inc
ja
arpl
sahf
mov
int
int
adc
inc
test
sti
hlt
xor
shrl
addr16
jae
rcrl
fisubrl
adc
data16
or
fnstenv
push
or
sarl
sbb
in
loop
sub
imul
inc
mov
xor
inc
or
mov
test
loop
push
pop
push
jo
aad
push
insl
out
mov
nop
and
loopne
loopne
lret
xor
in
push
test
jecxz
mov
arpl
leave
pop
lods
push
iret
mov
outsl
dec
or
or
push
into
mov
icebp
jecxz
das
xchg
mov
xchg
xor
adc
jne
add
xor
mov
mov
call
lcall
push
insb
pop
popf
cmp
cmpb
dec
mov
fsts
loope
movsl
das
mov
mov
jmp
pushf
fwait
adc
adc
pop
dec
sbb
xlat
cli
movsl
or
popf
int3
xchg
mov
shll
dec
pop
or
xor
dec
fisttpll
or
push
packsswb
lods
js
adc
sbb
cmp
cmpsl
push
add
aam
mov
dec
mov
lds
or
pop
xor
enter
cmpsb
jns
pushf
and
sub
fstps
mov
mov
xor
imul
and
or
pop
lea
add
dec
pop
push
clc
ja
in
sbb
repz
shl
les
shrl
pop
sub
jnp
xchg
mov
bound
jl
mov
push
fs
test
pop
cmpl
repz
sbb
sbb
xchg
xchg
pop
jmp
push
shll
jo
dec
lcall
mov
push
lcall
adc
aad
mov
lea
arpl
or
mov
jae
out
push
sub
scas
fsubrs
dec
shrb
inc
movsb
fadds
inc
in
jecxz
rorb
sub
jne
fnstenv
repz
into
es
aad
scas
mov
sbb
xchg
push
cmp
repnz
cs
rcll
sbb
mov
sbb
mov
and
aad
xchg
lcall
loopne
or
xchg
pusha
mov
pop
jecxz
dec
or
lret
insl
adc
jl
out
sub
and
jmp
jne
push
lret
mov
aas
mov
cld
jb
pop
mov
rorb
inc
mov
aaa
fs
inc
inc
addl
inc
add
bound
test
dec
iret
out
cmp
add
sbb
xor
inc
lcall
stc
repz
push
or
mov
mov
test
xchg
arpl
aad
inc
loopne
push
cmpsb
mov
call
and
ljmp
adc
sbb
mov
adc
adc
mov
cmp
xchg
dec
or
shlb
fldl
mov
sar
sbb
gs
mov
jl
add
push
jmp
xlat
xchg
pushf
xchg
stos
push
cwtl
mov
jp
arpl
jge
inc
fwait
cmc
push
jns
mov
loope
push
cld
andl
shl
mov
jecxz
mov
in
sbb
push
push
rcll
xor
loopne
dec
xchg
fs
scas
out
pusha
pop
outsl
and
pop
fs
sbb
bound
test
xor
push
pop
cmp
xchg
jecxz
sbb
add
cwtl
std
sub
aam
or
arpl
cmp
test
stc
out
push
repnz
jge
pusha
imul
adc
pop
fldt
icebp
outsb
mov
mov
mov
push
sbb
adc
push
fs
arpl
int3
mov
add
pop
adc
mov
inc
insb
dec
add
sbb
inc
popa
shl
add
js
mov
xchg
bnd
notb
mov
push
push
pop
aaa
es
mov
mov
int3
push
sbb
fmuls
pop
xchg
sub
std
cmc
xchg
scas
imul
out
jbe
push
xchg
testb
jg
enter
dec
inc
movsl
cltd
imul
cmpsb
ficoml
inc
dec
jmp
xor
push
out
ror
ja
in
mov
mov
pushf
lcall
push
cmp
pop
or
mov
cmc
mov
xchg
mov
xor
cmovs
fistl
jb
subb
iret
popw
in
pop
daa
enter
ror
pop
mov
sbb
and
sbb
out
pop
daa
mov
mov
test
jle
jecxz
xchg
pop
dec
inc
push
dec
fdivs
out
shrl
fisubrl
dec
ja
insl
xchg
pop
lods
ja
jbe
movsl
mov
sbb
divl
dec
dec
mov
das
popf
dec
test
sub
shll
fwait
xor
mov
pushf
mov
inc
imull
jbe
mov
jp
or
jns
cltd
in
add
dec
add
and
mov
stos
xchg
fnstsw
jle
mov
mov
inc
adc
adc
stos
std
in
sbb
out
lahf
loope
push
add
popa
or
cltd
nop
mov
xchg
cltd
movsb
xor
aam
fstps
lock
xchg
push
push
das
mov
sub
cmp
fwait
je
inc
mov
shll
jge
pop
mov
pop
mov
xor
loopne
mov
cmpl
or
push
adc
mov
jg
cmpsb
dec
jb
push
mov
and
mov
outsb
add
incb
and
push
sub
mov
or
les
sub
mov
sahf
jp
jp
fidivl
jnp
pushf
out
leave
sub
pop
jle
dec
mov
cwtl
popa
sub
and
adc
mov
jne
mov
je
aad
and
arpl
scas
and
dec
ret
adc
xchg
inc
add
shll
adc
fadd
adc
and
lods
mov
push
mov
pop
jb
fisttpll
cmp
jmp
lret
inc
gs
cmp
cmpsb
jnp
mov
inc
jne
in
xchg
test
lods
jle
push
push
int3
cmp
lock
in
iret
mov
adc
sti
mov
iret
mov
fcomip
es
mov
testl
jge
inc
jge
dec
mov
icebp
enter
push
jnp
push
hlt
inc
clc
cmp
pop
mov
and
dec
and
call
add
and
test
hlt
mov
test
inc
or
sarb
stos
neg
iret
fimuls
jo
roll
jo
jne
fimull
adc
cmc
add
pusha
jo
xorb
lods
cs
lods
lds
cmp
jne
dec
test
mov
loope
jmp
cmp
aas
aad
cltd
jl,pn
push
pop
sbb
dec
lds
cmpsl
sahf
xor
lods
sub
xor
push
icebp
das
sub
inc
xchg
jmp
sti
lods
insl
xor
mov
jb
cmp
and
std
push
mov
push
cli
frndint
or
sbb
add
mov
or
cmc
out
mov
sub
sub
pop
mov
mov
sub
enter
imul
outsb
sarb
sti
push
ficoml
fdivrs
push
je
xor
pop
lret
loope
and
adc
xchg
sub
leave
rcrb
test
in
jg
imul
dec
insl
fiadds
lock
pop
imul
sub
aad
mov
mov
xor
cmpsb
stos
or
inc
add
daa
sahf
int3
popf
dec
iret
mov
mov
stos
mov
fildll
insl
mov
testb
mov
pop
repnz
pop
mov
stos
in
xchg
dec
or
ss
incb
in
movsb
ffree
adc
hlt
sub
stos
fildll
stc
xchg
out
scas
icebp
mov
and
dec
or
jge
je
bound
mov
jbe
daa
mov
xor
lods
jo
add
sub
jbe
adc
popf
fidivl
es
lret
scas
adc
xor
dec
xor
inc
mov
repnz
aad
and
dec
adc
dec
imulb
pop
or
loope
mov
jp
or
jno
outsb
mov
jnp,pn
pop
lds
adc
js
iret
cmpsl
fidivrl
popa
or
xor
cmp
pop
sub
pop
push
mov
pusha
mov
pop
inc
shll
iret
push
cmp
pop
jo
mov
sbb
sarl
push
mov
lock
imul
push
fstl
lahf
shrb
sub
jb
in
pop
or
lods
out
mov
rorb
push
adc
cmp
in
addr16
pop
xor
adc
dec
jge
xor
push
dec
mov
jle
push
jecxz
mov
dec
mov
les
pop
addr16
push
test
ret
cmpsl
mov
inc
call
mov
xor
push
repnz
or
inc
push
pop
pop
push
xchg
xor
stos
jecxz
cld
or
sbb
sub
xchg
push
inc
stos
inc
sarb
pop
stos
stc
push
ja
inc
jno
mov
inc
hlt
es
sub
add
fucom
mov
fsubrp
add
fucomi
int3
or
fwait
scas
in
inc
add
addr16
pop
xchg
sub
fs
mov
sub
addr16
das
movsb
ds
ljmp
mov
imul
stc
insl
mov
mov
lods
jecxz
add
rcrl
aad
add
sbb
mov
inc
inc
cmpb
cwtl
lcall
rorl
in
add
lods
pusha
mov
sub
nopl
jmp
add
mov
pop
fwait
fs
imull
cmp
and
test
mov
add
jae
fbld
pusha
stos
sahf
insl
cmpl
out
inc
jmp
inc
cmp
mov
outsl
repnz
mov
repnz
loope
lret
fidivrs
sti
sub
jl
cmp
insl
mov
or
in
repz
xchg
popf
mov
cmc
and
loop
adc
pop
sub
or
sub
or
aas
jae
mov
in
jb
movsl
in
fwait
andl
pop
ds
mov
add
lahf
loopne
pop
inc
push
sbb
movsb
inc
scas
mov
sub
in
xchg
xchg
push
or
add
je
add
cwtl
icebp
xchg
cld
mov
rcl
lock
hlt
xchg
inc
decb
cmp
notb
ss
xchg
sahf
mov
pop
push
clc
je
daa
jnp
out
test
mov
int
mov
and
pusha
or
mov
xlat
ffreep
dec
mov
pop
sbbl
into
test
aad
les
rolb
dec
xchg
mov
loopne
jb
hlt
and
cld
lds
cltd
sbb
repz
test
daa
sub
cmp
mov
sub
jbe
push
mov
and
xchg
sub
leave
xor
sbb
cmp
scas
into
jb
pop
pop
mov
aam
sbbb
mov
mov
outsl
outsl
js
add
popf
fs
insb
cmp
rcrl
fmuls
mov
sbb
sarl
dec
leave
pop
movsl
add
in
call
addl
adc
dec
aas
sub
inc
dec
addr16
jmp
or
cltd
push
jno
mov
mov
lods
andl
and
loopne
pusha
std
mov
pop
scas
fisttpll
mov
push
and
sub
punpckldq
mov
sub
into
mov
and
add
push
and
jmp
movsb
cmp
gs
xor
shrb
pop
mov
add
or
js
xor
xor
clc
mov
enter
sahf
cmp
dec
bound
jnp
mov
adc
cld
cld
adc
mov
mov
dec
ret
es
clc
jl
jbe
add
outsb
sbb
sbb
pop
inc
mov
inc
int3
cmpsb
pop
inc
cmp
jae
mov
jb,pn
inc
into
imul
and
gs
xor
mov
adc
pop
ret
aaa
jg
sbb
and
daa
es
orb
push
push
or
pop
mov
pusha
rorl
test
mov
inc
mov
lret
sub
push
call
movsb
xor
scas
mov
mov
jae
and
pop
mov
imul
ret
sarb
jno
ss
add
in
jb
test
dec
andl
stc
adc
or
sub
inc
add
xor
jmp
cmpsb
mov
fscale
out
movb
sub
mov
inc
iret
jno
in
xor
fildll
mov
fs
hlt
sbb
and
mov
mov
mov
xor
jae
pusha
pop
cltd
movl
dec
lret
mov
mov
cli
cmpsb
vmwrite
das
lret
call
fisttps
mov
into
mov
xor
cld
clc
stos
loop
scas
idivl
faddp
sub
jmp
push
ficompl
das
js
xor
ret
jne
inc
es
mov
jb
adc
adc
adc
outsl
ljmp
fmuls
add
imul
cmp
and
cmpsl
xor
cs
pushf
adc
push
xchg
push
bound
dec
or
mov
push
es
add
and
movsb
mov
xor
mov
adc
aas
adc
cmp
and
es
sub
in
imul
hlt
idivb
mov
int3
cld
pop
jae
fwait
sahf
fwait
pop
mov
out
xchg
push
shrl
fcomp
push
and
fisubrl
repnz
ret
sbb
into
pop
xchg
fsubs
addr16
inc
sti
mov
push
sbb
add
testb
xor
lock
sbb
lar
mov
xchg
sbb
in
xchg
pusha
loop
dec
ds
jg
dec
insb
in
repz
xchg
dec
inc
cmp
lret
inc
jecxz
sub
pop
rcr
fwait
xchg
loop
jnp
jmp
push
jecxz
shrb
out
mov
jecxz
arpl
das
push
adc
lcall
dec
sbbl
push
ret
pop
cmp
adc
sub
mov
cli
std
popa
xor
dec
test
push
jno
sbb
ljmp
xchg
in
sub
pop
xor
add
push
push
mov
dec
test
dec
push
in
dec
dec
outsl
imul
push
test
lods
mov
ret
jnp
jge
dec
push
push
cmp
dec
int3
cli
ja
lcall
ret
scas
rcrb
bound
mov
xor
cmp
adc
lods
div
sub
mov
out
or
mov
cwtl
aad
jecxz
es
insl
xchg
outsb
dec
xor
mov
sbb
inc
mov
jns,pn
xchg
nop
jae
popf
in
arpl
incl
call
rorb
popa
shll
sbb
push
push
xor
ja
lea
test
jnp
cmp
daa
negl
cwtl
sti
out
int
cmpl
repz
add
jbe
push
sub
pusha
dec
sbbb
lret
mov
dec
test
ret
adc
pop
fstl
xchg
out
push
dec
ret
sbb
dec
dec
xor
inc
fidivrs
into
cmpsb
aaa
test
sub
dec
or
mov
push
sub
mov
into
sti
xor
pop
xchg
sub
fimull
rolb
std
sub
popf
jecxz
stc
sbb
mov
lods
dec
mov
dec
fs
mov
or
xlat
gs
pop
out
stos
jne
test
mov
sub
mov
cmc
xor
fnstsw
not
icebp
jl
testb
mov
fdivp
ss
movsb
sbb
shll
jmp
mov
out
pop
mov
add
mov
jmp
sub
movsb
lods
ljmp
sbb
or
xor
xchg
push
adc
fs
pop
cltd
aaa
push
and
inc
xor
dec
int
sub
outsl
inc
sub
clc
xor
cli
cmp
push
popa
or
adc
repnz
int
jo
sub
xchg
ljmp
lea
inc
ljmp
data16
and
cli
iret
movsl
ficoms
jle
cmp
mov
in
jg
adc
je
push
call
cltd
icebp
and
adc
xor
dec
jmp
push
loopne
adc
ja
lahf
dec
sbb
mov
daa
std
ljmp
cwtl
dec
adc
loop
cmp
sub
push
xchg
scas
lds
jae
pop
or
pop
ss
out
fwait
les
cmp
mov
inc
xchg
ret
and
nopl
lods
std
jl
and
imul
sarb
testl
jne
dec
das
out
rcr
inc
pop
std
call
cltd
clc
jne
push
or
imul
pop
pop
daa
int3
addr16
leave
mov
iret
ret
adc
out
mov
cmpsl
mov
sub
int
pop
dec
jb
mul
or
jb
loop
adc
out
adc
sub
mov
cmc
sub
sub
add
bound
xor
icebp
je
xchg
sahf
fsubs
mov
push
lret
push
jnp
xchg
cmp
rorl
movsl
mov
fs
pop
push
aad
jl
push
push
or
dec
cmp
lods
xlat
popf
xor
adc
mov
inc
sub
sub
loope
and
jnp
cwtl
and
repnz
popf
fwait
stos
movsl
xor
imul
sbb
ljmp
jmp
push
shll
insb
scas
aaa
adc
js
xchg
mov
inc
inc
adc
leave
mov
and
jge
mov
mov
mov
fsubl
ficoms
push
test
adc
gs
sub
push
stos
xchg
scas
mov
dec
icebp
or
jns
repz
cltd
fcmovb
insl
xchg
jmp
sub
jns
ss
fdiv
add
imulb
aas
out
into
inc
stc
xchg
loopne
fwait
inc
dec
sub
fildll
mov
mov
pusha
repz
pop
lret
hlt
or
mov
test
cli
aas
dec
dec
jle
add
mov
pop
fnsetpm(287
mov
mov
repnz
outsb
pop
mov
fcoms
mov
out
inc
mov
dec
add
inc
jo
inc
adc
in
mov
fistpl
cli
stos
movsb
test
daa
lea
mov
lods
out
inc
add
cmp
popf
lock
sbb
push
pop
stc
std
insl
insb
inc
movsb
dec
jne
xorl
pop
out
lods
nop
iret
int3
fiadds
pushf
mov
jae
movsb
push
mov
mov
xchg
adc
packsswb
and
sub
sub
test
in
rcl
mov
adc
xchg
mov
repnz
out
imul
mov
fsubrl
push
sub
xor
adc
stos
pop
andl
adc
mov
out
push
lcall
inc
and
cmc
js
mov
enter
in
imul
push
lret
xchg
flds
ja
inc
fwait
imul
imulb
lret
cmpb
mov
cmp
je
iret
stc
enter
mov
xchg
and
lret
jle
sub
test
cmp
test
clc
sti
push
test
test
pushf
mov
rorb
mov
cmp
sahf
js
cltd
rcr
xchg
xlat
push
sub
xchg
pop
cwtl
inc
and
adc
xchg
dec
gs
outsl
fsubrp
int
out
cmpsl
pop
aas
sub
adc
sub
adc
xor
mov
mov
or
add
xchg
jnp
lcall
pop
repz
loope
xor
loopne
lret
arpl
push
iret
into
dec
fldcw
pop
cltd
mov
cwtl
mov
add
mov
sub
push
dec
or
add
insb
cmpsb
stc
fldln2
push
mov
mov
daa
or
add
dec
sub
into
mov
jecxz
cmpsl
cltd
scas
lea
push
pop
jl
fs
sbb
sti
mov
mov
daa
fstps
and
mov
pop
es
ds
js
pop
add
add
les
sub
loope
jl
jb
sub
nop
into
addr16
cmp
xchg
push
lods
sahf
mov
mov
iret
ds
push
btc
adc
mov
pop
ficomps
mov
push
clc
fidivrs
xchg
stos
cmpsb
lcall
inc
and
cwtl
mov
sbb
jle
sub
cmpsl
shll
fmuls
jo
test
mov
jne
or
mov
fs
lds
mov
pop
lahf
xchg
xchg
cli
stos
popa
divl
fwait
je,pt
jmp
sub
push
jb
push
xchg
push
sahf
dec
je
pop
in
pop
roll
fldt
push
ret
icebp
ret
pop
and
pop
xchg
ja
xchg
pop
xchg
outsl
das
leave
pop
xor
xchg
insl
jl
dec
ss
push
fs
testl
push
xchg
mov
push
idiv
pop
xorb
addb
jmp
cmp
mov
pop
mov
loopne
pop
test
mov
cltd
ret
xchg
cmp
sahf
scas
cmc
rorb
aad
mov
inc
xchg
add
repz
inc
fmuls
popa
pop
dec
sub
xor
cld
push
fs
enter
aas
mov
loope
in
nopl
cmp
mov
imul
insl
ret
pop
test
mov
pop
es
adc
push
shll
mov
sti
lds
out
push
shlb
je
or
out
mov
jmp
scas
sbb
movsl
in
sahf
and
xor
sbb
cmp
sbb
jns
rorb
sbb
mov
sbb
mov
mov
xor
mov
cmpsl
pop
xchg
rcl
int3
out
dec
mov
sbb
addb
dec
mov
sub
push
pop
loopne
or
pslld
dec
cmpsb
insl
lcall
mov
adc
pop
push
in
mov
xor
pop
lret
ljmp
pop
loopne
mov
iret
xor
xchg
xor
xchg
inc
push
pop
xor
imul
scas
mov
addb
and
xchg
test
aad
xchg
cli
lods
sub
andl
inc
idiv
and
es
rcll
decb
mov
cmpsb
jnp
cltd
jg
lret
xchg
and
mov
icebp
push
mov
roll
repnz
xorl
ds
lcall
imul
sub
push
pusha
cmp
cmp
mov
cmp
fxch
push
xchg
cwtl
sub
dec
push
dec
sbb
addr16
dec
in
cli
arpl
xchg
or
or
adc
pop
rcll
fcomps
mov
incb
dec
lds
add
cmpl
dec
ja
cmp
fmulp
shrb
or
adc
scas
add
loop
add
mov
xchg
mov
add
sub
int
xor
int
or
dec
or
mov
call
call
xchg
lret
insb
push
hlt
stos
inc
ss
mov
enter
add
mov
jne
cld
sti
cs
push
and
push
jno
ret
loopne
and
or
aaa
pop
xor
pop
xor
sarb
cmp
mov
or
cmp
mov
ja
ret
lret
mov
ret
mov
add
mov
push
fsubrl
ret
ljmp
pop
push
orl
pop
jp
inc
pop
iret
cmp
jns
sbb
sub
push
mov
cmp
push
xchg
addr16
mov
push
sti
std
push
cmp
pop
rorb
fs
mov
jecxz
hlt
push
sbb
pop
movsl
decb
jmp
scas
stc
call
inc
mov
cwtl
mov
je
and
push
xor
xor
jne
pop
dec
push
das
repz
adc
xor
mov
jnp
mov
mov
xchg
push
cmpsl
jno
stos
mov
dec
test
fdivrs
fcompl
dec
mov
loope
in
ds
cs
mov
es
loopne
int3
sti
int
popf
pop
fmull
ret
imul
iret
sub
sbb
je
call
and
addb
xlat
pop
xor
insb
enter
pop
lcall
aaa
xor
cmp
int3
cmpsl
scas
sbb
das
xchg
sbb
or
out
or
das
add
mov
scas
push
cmp
inc
sub
mov
push
arpl
mov
testl
mov
pavgw
cmp
lds
inc
mov
aad
cvttps2pi
dec
mov
int
add
and
pop
mov
sbb
lahf
shrl
jecxz
xor
ljmp
bound
pusha
and
shlb
int3
mov
addl
dec
add
xchg
mov
test
and
pop
push
and
cmp
push
rclb
cltd
or
scas
addr16
pmovmskb
add
xor
mov
xchg
lock
leave
addb
jmp
aaa
out
mov
cmc
sub
xchg
enter
cmpsb
shl
push
jle
out
add
pop
jae
pop
push
pop
out
add
sub
int3
cmp
push
jbe
mov
imul
and
jmp
jb
pop
mov
popa
sub
push
mov
mov
add
aam
loopne
mov
int
stos
mov
addr16
adc
jae
data16
adc
push
outsb
cld
mov
ret
cmp
in
mov
jmp
push
sub
lret
das
sub
add
push
imul
or
inc
lods
je
and
mul
mov
scas
dec
enter
outsb
adc
mov
call
push
clc
jp
dec
imul
mov
sub
arpl
xchg
adc
push
mov
mov
xchg
jmp
xchg
inc
xchg
jns
sbb
and
pop
adc
fistpl
shr
cmpsl
notb
adcb
and
xchg
add
pop
mov
nop
lret
mov
adc
mov
mov
mov
mov
roll
inc
and
arpl
jae
xchg
ss
mov
ret
jae
adc
jle
test
push
push
lock
sbb
pop
insl
aad
mov
jp
shll
test
push
sbb
iret
orl
adc
icebp
cwtl
mov
lds
aad
adc
mov
repnz
fistpll
sub
out
mov
lds
mov
roll
push
std
and
fs
sbb
cs
jne
sub
movsl
sub
cmp
mov
push
inc
push
stc
jmp
mov
mov
jecxz
add
shr
stos
sub
and
xor
xor
xchg
pop
pop
xchg
inc
push
iret
inc
fdivp
sbb
pushf
jne
lds
das
and
jmp
aam
cmp
bswap
fwait
aam
cwtl
sub
ficoml
mov
jl
mov
stc
mov
add
dec
arpl
mov
jns
leave
xor
xchg
repnz
inc
xor
iret
mov
pop
les
aas
rclb
das
icebp
adc
pushf
loopne
sti
fsub
call
scas
fnsave
and
mov
add
popa
cli
ret
inc
xor
jle
test
out
pop
in
inc
int
outsb
lcall
jecxz
fs
call
clc
loopne
adc
or
push
sbb
xchg
das
subl
in
ss
push
repz
lods
out
mov
sub
addr16
movsb
mov
inc
std
aam
xlat
xchg
nop
sbb
aam
add
push
pop
shlb
xchg
lods
fcomps
xor
leave
sub
jmp
imul
inc
data16
adc
scas
add
nop
push
rcll
sti
pusha
mov
nop
dec
mov
ss
dec
inc
mov
in
cmpsb
push
je
pop
fucom
test
outsb
xor
lods
or
or
adc
add
insl
aaa
out
inc
and
mov
sbbb
fwait
sti
dec
add
jle
icebp
add
xchg
xor
lahf
pop
test
cli
sbb
rorl
jbe
pop
or
dec
rclb
cmp
lret
ss
pusha
je
pop
psrlq
mov
pop
outsl
push
ds
dec
inc
subl
in
add
lds
mov
inc
xchg
xor
iret
xchg
lea
orb
mov
mov
pop
push
data16
clc
mov
sub
loope
push
pop
lods
lds
cmpb
in
icebp
imul
fldenv
or
cmpsl
or
fisttps
lds
movsl
sbb
stc
cmp
jl
jle
lods
cmp
in
outsl
mov
jl
xchg
les
pop
imul
mov
pop
sub
movsl
jns
sahf
mov
int
rcrb
test
mov
test
icebp
push
push
sbb
std
xchg
cmpsb
rcr
outsb
sbb
aaa
les
ja,pt
mov
mov
mov
inc
cwtl
out
add
add
orb
inc
mov
lods
push
mov
jmp
cmc
jnp
sub
jl
sub
popf
cmp
dec
mov
imulb
dec
cmp
in
arpl
popa
or
gs
movsb
call
mov
cmp
sub
sub
xchg
mov
xor
jno
mov
aas
and
cmc
test
and
jne
in
lret
and
jge
push
fbstp
fistps
add
lcall
outsb
sbb
jae
dec
xor
adc
xchg
mov
lret
mov
icebp
xchg
aas
mov
and
bound
sahf
or
sub
sub
fs
les
mov
mov
sbb
ss
push
jl
popf
jmp
cmpsb
push
adc
pop
mov
cwtl
sbb
cmp
repz
xchg
push
fmuls
pop
fldcw
nop
ja
stos
mov
imul
sub
sbb
sbb
and
ja
xor
jo
mov
in
jbe
cwtl
mov
in
cld
pop
dec
out
jecxz
lds
mov
add
sbb
movsb
push
js
pop
jae
xchg
inc
mov
xchg
and
fmul
iret
fcompl
jecxz
jmp
fcompl
pushf
mov
push
and
fbstp
imul
ds
xor
mov
icebp
xor
stos
jne
popf
push
and
xchg
mov
cwtl
adc
in
stos
call
jo
data16
inc
shrb
lock
bound
mov
cwtl
out
or
loope
cmp
ja
jo
cwtl
or
sub
lds
cmp
icebp
shrb
jae
andl
xchg
fdivr
adc
test
sbb
movsl
lret
les
mov
mov
daa
sbb
sbb
pop
xchg
lds
aad
outsl
jecxz
adc
das
cmp
jnp
lds
sub
nop
lret
xor
std
or
inc
lds
pushw
pusha
std
jle
ja
xor
mov
into
les
jnp
cmpb
adc
cwtl
fadds
mov
sbbl
dec
pop
cmp
jp
add
pop
push
or
push
mov
js
cmc
add
pop
lahf
int
push
fnstcw
sbb
push
mov
sbb
or
insb
bound
int
lret
push
or
jnp
lahf
arpl
imul
mov
movsb
cmc
aas
dec
stos
push
push
test
dec
movsb
test
mov
jns
repnz
xchg
imul
gs
cmp
mov
daa
das
mov
ret
mov
cmpb
adc
jecxz
clc
xlat
shlb
or
aam
xchg
loopne
jle
sahf
scas
mov
ja
jns
mov
pop
add
adc
cmp
std
js
insl
add
cld
mov
pop
fimuls
xor
cmpsb
cmp
lret
ds
movsl
or
adc
xchg
cltd
pop
adc
sbb
clc
pusha
aam
ret
inc
ds
cmc
bound
add
sub
pusha
stos
cmp
and
imul
shl
test
xchg
mov
inc
mov
aas
and
lcall
pop
out
jo
cmpsl
xchg
dec
rcr
out
push
movsb
or
pop
dec
and
and
pop
aad
cmc
imul
xlat
xchg
lods
adc
xchg
hlt
cmpsb
dec
in
add
mov
loope
pop
push
xchg
outsb
cmpsl
jle
mov
mov
fs
mov
shlb
mov
enter
mov
stc
xchg
pop
lods
cmp
jp,pt
mov
fsubs
ds
xchg
jbe
pop
pop
sub
icebp
sbb
les
loope
orl
popf
jbe
xchg
jb
out
imul
push
testb
xchg
push
dec
jnp
xchg
adc
mov
aad
jg
mov
mov
mov
lods
and
pop
pop
cmp
insl
cmc
insl
jmp
cli
add
ds
cld
daa
lcall
push
les
scas
mov
xchg
mov
xchg
lds
je
fidivl
mov
mov
fdivrs
lret
mov
popf
pop
popf
popa
add
pop
inc
mov
jp
inc
push
jge
add
xchg
aam
inc
xchg
ljmp
sbb
jge
in
lods
outsb
loop
mov
sbb
int3
mov
mov
adc
arpl
jl
pop
mov
or
xor
push
push
ret
stos
fsubl
pop
lahf
ljmp
jns
pop
in
call
push
ja
push
mov
imul
into
jle
dec
mov
xchg
ljmp
push
mov
mov
das
sub
dec
aaa
pop
je
mov
rolb
jno
adc
das
push
xchg
dec
lods
pop
test
jp
xchg
out
out
shl
mov
shlb
std
arpl
imul
pusha
loopne
sub
negb
dec
mov
jmp
ror
stc
add
fsubs
xchg
push
and
sbb
pop
popf
scas
pop
sub
stos
push
out
mov
testl
test
jmp
ret
repz
xor
push
push
out
dec
xchg
sbb
mov
mov
xor
and
mov
scas
pop
dec
inc
push
stos
sub
dec
outsl
and
adc
xchg
imul
inc
lea
mov
aas
jbe
int3
hlt
iret
adc
sub
push
pop
jbe
adc
int3
outsb
sub
insl
adcb
push
cmp
and
add
fdivrs
jo
inc
stos
leave
pop
xchg
iret
insb
out
outsl
sub
lock
inc
push
cwtl
push
and
jns
xchg
push
cmp
dec
dec
lret
lret
cmp
outsl
jge
pop
cmc
jbe
loopne
roll
pushf
mov
add
imul
inc
lcall
mov
pop
adc
mov
add
add
jecxz
lods
or
mov
bound
pop
push
sub
mov
sub
mov
shll
xchg
andb
popf
in
fisttpll
add
mul
dec
inc
loop
xchg
aas
jg
ljmp
andl
test
and
nop
fisttps
out
lock
cmp
xor
bswap
scas
imul
pop
dec
int3
rolb
cmp
sub
or
add
xchg
and
cmp
xor
adc
inc
mov
pusha
das
fidivl
mov
mov
jecxz
push
lock
repz
cmpsb
inc
nop
in
cmpsb
jmp
mov
jge
xchg
leave
push
jo
repz
inc
loopne
icebp
xchg
or
ja
mov
lcall
sbb
add
pop
adc
push
fdivrs
dec
cmp
cmp
pop
dec
pop
jno
push
hlt
insl
nop
loop
xchg
fidivs
jnp
ficompl
fcomi
push
icebp
dec
or
xchg
fimull
std
orl
sti
xor
movsl
es
movsl
push
or
cmp
mov
enter
cmp
cld
jae
hlt
je
cltd
push
lret
mov
push
or
sbb
lock
push
rorb
rcrb
push
int
xchg
cmp
push
and
ljmp
movsl
hlt
cmp
gs
mov
add
inc
cli
sub
fidivrs
mov
mov
or
loope
jnp
add
inc
pop
dec
mov
push
popf
mov
mov
and
aam
test
js
add
cmp
fwait
sarl
scas
ss
mov
loopne
mov
mov
addr16
pop
leave
or
cmpsb
ja
ror
jge
fildl
or
gs
cmp
cmpsb
or
mov
mov
xchg
mov
sbb
inc
repz
mov
lea
pop
inc
add
jb
mov
mov
inc
inc
js
inc
stc
push
repnz
rcll
insl
lods
push
in
push
cmpb
popa
gs
cmp
je
cmpsb
aas
daa
adc
test
inc
imul
arpl
pop
push
int3
sbb
add
adcl
test
xor
das
push
jno
out
lea
jbe
inc
cmp
sbb
lods
scas
ss
jns
cmp
pusha
jle
dec
outsb
cmp
shrb
call
test
mov
imul
cli
push
ficoml
xor
sarl
stos
ret
test
icebp
jp
ss
mov
push
ljmp
cmp
aam
ss
mov
orl
outsb
adc
xor
shll
inc
and
dec
pop
pusha
sbb
fdivs
insb
push
xchg
les
dec
into
add
mov
xorb
push
pop
shrb
jne
add
int3
lahf
orl
loopne
xor
mov
out
push
test
std
fdivr
movsl
push
mov
stos
sbb
or
jecxz
jg
sub
push
sub
xchg
sub
xorb
jmp
jne
std
and
rcl
cmc
adc
dec
in
pop
push
sahf
imul
xor
orl
fcoms
mov
lock
enter
into
mov
hlt
fninit
icebp
loopne
mov
xchg
cmpsb
neg
xchg
push
sbb
mov
shl
inc
and
loopne
out
push
aad
lods
in
or
cmp
cli
mov
rcll
push
pushf
adc
push
es
divb
mov
setbe
scas
sub
movsb
sbb
add
push
movsl
sbb
insb
jo
dec
inc
test
movsb
outsl
test
jp
push
mov
inc
ficomps
push
add
mov
mov
or
xchg
mov
outsb
cwtl
lret
push
in
scas
dec
cmpsb
dec
outsb
mov
enter
mov
call
scas
jae
insl
sahf
stos
dec
ret
push
or
insb
xchg
ret
cwtl
sub
cwtl
test
cmp
jp
fs
addr16
subb
ss
mov
mov
mov
dec
xchg
out
xchg
cmc
mov
enter
and
pop
aaa
inc
sbb
sub
jno
mov
out
popa
lret
inc
arpl
loopne
inc
addb
sbb
xorl
in
add
dec
jp
notb
int
scas
and
push
dec
inc
adc
inc
lcall
inc
ret
mov
add
aad
out
jno
clc
sti
mull
sub
ds
out
sbb
push
lret
enter
movsb
dec
cmp
addl
lahf
mov
gs
or
idivb
xor
shll
andl
jmp
adc
cmp
gs
enter
roll
inc
or
xchg
mov
and
int3
movb
push
cmp
and
add
push
movsb
jecxz
testb
jne
in
mov
std
pop
pop
and
cltd
sahf
cld
xor
mov
nop
fisubrl
jge
mov
sub
ror
inc
jl
dec
nop
shll
push
xchg
scas
test
insl
ds
repnz
push
in
insl
movsl
xor
cld
xor
dec
mov
arpl
fcomps
xor
jo
push
mov
mul
cmpsb
pop
shl
push
sbb
aad
sub
cli
adcb
sbb
inc
pop
and
adc
jg
mov
sub
sbbl
insl
dec
add
out
scas
std
and
xchg
test
dec
xor
push
sbb
addl
adc
xchg
sbb
mov
push
mov
gs
push
ficoms
add
stc
mov
jg
outsb
je
mov
pop
nop
adc
jge
push
cs
les
inc
int3
sbb
rcl
mov
lea
cmpsb
popf
pop
cld
out
in
in
xchg
stc
jmp
adc
mov
test
mov
adc
rolb
rcl
cld
push
jo
stc
je
lahf
imul
inc
pop
pop
lods
sbb
pusha
fists
hlt
pop
or
shll
scas
xor
add
mov
in
lahf
jo
movsb
out
push
jo
jmp
cltd
dec
mov
ljmp
mov
fcompl
andl
test
or
sahf
pop
sbb
add
shl
addr16
aas
xor
sbbl
clc
in
xor
ljmp
sbb
sbb
or
fildl
jo
lahf
popa
loopne
cmp
inc
scas
mov
xor
outsl
mov
outsb
je
inc
dec
mov
inc
lds
ss
adc
mov
or
pusha
mov
xchg
adc
mov
ljmp
pushf
movl
in
mov
mov
jns
pop
mov
pop
aas
and
add
adc
loope
jecxz
xor
push
jb
ds
xor
mov
push
mov
mov
gs
arpl
pop
cmpsl
subb
jno
pushf
jae
insb
gs
shrb
or
push
mov
jle
adc
arpl
mov
pop
hlt
adc
mov
icebp
sub
cmp
pop
inc
sti
out
push
jmp
add
sub
out
daa
out
cmp
xchg
add
xchg
pop
xor
lods
mov
add
pop
dec
paddsw
xchg
scas
inc
test
addb
and
mov
push
dec
or
adc
mov
rcrb
adc
adc
popl
fwait
push
loop
xchg
lret
inc
jnp
adcl
movsb
fidivrl
push
jo
cwtl
insb
jno
mov
scas
icebp
test
jo
loopne
js
xchg
mov
cmpsl
ret
mov
les
inc
into
jae
outsl
jne
mov
xchg
xor
test
pop
inc
xchg
out
hlt
outsl
popa
push
pop
loope
lods
daa
in
mov
xchg
cwtl
xchg
mov
nop
out
lret
jns
sbb
mov
adc
sbb
imul
and
iret
pop
push
jg
mov
dec
je
pusha
cmc
lahf
shlb
test
inc
push
push
cs
pusha
push
pop
jge
fmul
cmp
xor
or
imul
rolb
and
jno
sbb
jecxz
cmp
add
fucom
and
imulb
negb
jbe
xchg
fistpll
pushf
fimuls
js
mov
adc
mov
notl
push
mov
add
fistpll
ss
dec
xchg
dec
push
push
sub
add
adc
add
push
test
test
adc
int
inc
sahf
mov
pop
xchg
push
movl
cltd
xor
mov
and
mov
je,pt
push
sub
dec
adc
std
inc
mov
mov
fldln2
stc
loope
pusha
call
mov
adc
and
xchg
xchg
inc
iret
cmp
push
sarb
fldenv
js
push
and
fnstsw
mov
adcb
mov
cltd
add
adc
fdivl
and
imul
adc
dec
dec
xor
jmp
push
int3
repnz
and
mov
pinsrw
imul
hlt
scas
dec
pop
and
scas
jns
adc
mov
test
mov
addr16
add
sbb
sub
imul
mov
fcomps
push
iret
cmp
rolb
mov
mov
jmp
out
das
rolb
loope
int
jbe
insl
xor
fwait
cltd
cs
mov
addl
test
jle
lock
and
jne
push
out
push
jl
sbb
andb
push
ljmp
push
ljmp
test
stos
jae
push
pop
dec
push
jns
inc
and
adcl
sbb
mov
in
or
loopne
ret
into
add
dec
jg
jmp
cltd
repz
mov
mov
jb
adc
xor
shlb
repnz
insb
bound
push
das
jbe
dec
aam
and
or
into
dec
insl
mov
and
push
fstp
pop
into
and
or
cmp
cltd
ss
repz
in
adc
out
aam
jg
out
repz
sub
and
push
push
icebp
jbe
jp
leave
push
adc
sbb
cmp
adc
sub
push
ljmp
mov
or
aam
sub
cmpsl
cmp
lea
fs
sar
cmp
les
xchg
sub
stc
ds
mov
movsl
sub
add
testb
mov
imul
push
fcompl
dec
bound
xor
adc
dec
push
mov
fmuls
lock
mov
sub
popf
sub
mov
inc
icebp
inc
fwait
or
pop
xor
and
ret
je
pushf
shl
in
mov
xchg
je
adc
rcl
jne
or
js
xchg
popa
jecxz
sbb
lret
push
ljmp
fxch
mov
aas
push
jmp
pop
cwtl
inc
sbb
xchg
xchg
dec
repz
outsb
fcmove
push
ret
test
jne
xor
pop
add
rcll
movsb
stos
push
mov
cmp
cli
outsb
xchg
cmc
sti
test
test
scas
stc
and
mov
cmp
stc
jbe
aas
sbb
mov
fsubrs
push
mov
mov
push
movsl
hlt
cld
cwtl
mov
and
sti
xor
jnp
dec
popf
dec
pop
inc
fsubl
data16
push
pop
push
jmp
scas
xchg
rcr
jmp
orb
mov
repnz
pop
fstl
jg
das
mov
mov
movsl
lahf
int
adc
add
insl
arpl
lahf
lods
push
outsb
test
mov
pop
test
dec
jmp
or
inc
andl
icebp
pop
pop
jmp
push
negl
sbb
inc
inc
out
mov
sbb
mov
imul
fisttpl
test
clc
push
je
or
fcoms
push
jl
inc
pusha
dec
mov
cli
xor
xor
jmp
jmp
imul
adc
jne
sbbl
in
out
cmpsl
sub
cmp
mov
ret
jns
int
adc
sub
aam
loope
imul
mov
mov
mov
mov
outsl
sub
idivb
adc
adc
sub
cmp
cld
push
cmp
je
imull
neg
cmpsb
xor
in
ret
bnd
ljmp
cli
lret
call
fcoml
or
sbb
jmp
enter
jo
into
ret
or
dec
cld
dec
mov
cld
in
loop
mov
testl
in
xchg
repz
sub
lods
popa
loope
cmp
es
inc
pushf
popa
lods
test
cmpsl
add
in
mov
nop
test
pop
xchg
lcall
fbstp
xlat
or
je
lods
repnz
pop
xchg
or
sbb
scas
xchg
test
xchg
or
gs
jnp
in
filds
jmp
sbb
inc
mov
lret
jne
mov
sti
outsl
ja
jp
pusha
imul
outsl
inc
sti
stos
xchg
jmp
jmp
inc
js
xchg
dec
and
fnsave
and
or
int3
movsb
loopne
mov
cli
cmp
jmp
sbb
add
add
dec
pushf
nop
jl
pop
das
into
inc
out
repnz
sarl
scas
xchg
mov
loope
push
jae
iret
std
adc
fs
jge
outsl
popf
dec
scas
jb
jmp
pop
cltd
orl
nop
and
fsubrs
repz
xlat
lcall
cmc
test
sbb
and
ss
jg
push
lret
inc
pop
out
scas
ds
popl
stos
mov
test
out
es
fisubrs
pop
jne
jp
pop
xor
pop
ret
push
nop
stc
aas
mov
cltd
insl
aam
inc
in
pop
jo
stos
inc
in
mov
les
sub
push
bound
cltd
imul
out
sbb
aad
fidivs
aad
jns
jg
inc
ficoms
xchg
push
push
mov
pop
cmpsb
sbbl
sub
pop
push
cltd
mov
pop
int3
fiadds
and
lods
cld
cmpsl
push
pushf
xchg
test
lds
mov
sbb
sub
jp
fbld
xchg
lods
mov
push
sub
xchg
mov
aam
cmp
repz
lret
dec
lea
inc
popa
adc
stos
call
scas
stc
testl
and
mov
jno
test
xchg
add
mov
jmp
push
or
push
fs
in
fldcw
ret
push
inc
in
insb
loopne
pushf
stos
js
into
xchg
inc
clc
adc
ljmp
cli
mov
sub
lds
std
sbb
dec
cmpsl
roll
and
mov
sub
jae
push
orl
cmp
inc
inc
pop
aam
out
scas
cltd
jae
cmp
dec
lahf
outsl
aad
imul
xchg
xorb
into
add
mov
cltd
lret
jmp
daa
enter
adc
dec
xor
rcrl
js
cmp
scas
fsubl
dec
inc
jbe
dec
mov
rorb
mov
adc
cmp
jge
adc
in
pop
mov
aas
push
fiadds
cmp
aaa
fldenv
jo
pop
jg
ja
cltd
cli
jg
inc
daa
push
lret
mov
insb
in
bound
fdiv
aad
in
push
cs
mov
ds
popf
pand
mov
xchg
lods
mov
mov
bound
lods
or
mov
scas
mov
push
mov
shl
ret
or
and
lods
cli
and
sahf
adc
das
out
movsl
fldt
ss
add
enter
out
sarl
dec
cli
mov
in
nop
lods
sbbl
jno
mov
inc
out
daa
adc
pusha
cmp
adc
inc
test
xchg
negl
aaa
dec
xor
stos
repz
mov
inc
sbb
jg
mov
dec
inc
data16
push
ds
pop
pop
adc
mov
loope
and
and
sbb
ret
ret
mov
jo
or
or
pop
out
fimull
mov
or
sbb
scas
jg
mov
pop
or
xor
mov
dec
gs
aas
cmp
pop
mov
out
xchg
inc
mov
add
pop
das
call
out
jnp
xlat
repz
push
adc
jne
jno
fs
push
out
inc
lea
test
xchg
adcb
aad
dec
js
mov
cmp
add
frstor
aas
xor
pop
aad
stc
xchg
cmpsl
dec
mov
mov
sbb
xchg
sti
ror
movsb
imul
stc
or
or
inc
dec
xchg
frstor
notb
scas
lea
stos
sbb
dec
jg
cmp
jp
mov
cmp
cld
out
in
ret
into
adc
cmc
aas
lcall
jnp
ret
pop
jb
mov
pushf
push
lcall
mov
push
insb
pop
fldcw
lods
jl
ficomps
jecxz
ret
sub
mov
hlt
lods
push
loopne
sbb
outsl
in
xor
int
cmp
add
push
mov
xor
hlt
adc
xchg
int
cs
fcoml
inc
insl
cwtl
cmp
test
inc
xor
mov
mov
loop
pop
xor
clc
sbb
je
sub
repz
mov
mov
ds
loope
adc
popf
pop
xor
jae
cs
inc
inc
xchg
daa
mov
cmp
push
cmp
sbb
mov
mov
inc
mov
jae
sub
jbe
rcl
lds
pop
add
xchg
shlb
call
dec
xchg
jl
js
push
mov
sbb
and
push
lret
mov
jns
pop
lret
and
jl
mov
cltd
iret
imul
test
jmp
xchg
push
inc
loopne
pop
sub
stos
stos
loopne
outsl
scas
pop
cltd
mov
imul
dec
xor
dec
push
mov
cmp
int
int3
add
scas
sbb
imul
mov
dec
cmp
pop
sti
xchg
push
inc
inc
mov
shrl
push
and
cmp
jne
std
mov
leave
dec
cmp
pop
or
sahf
dec
mov
adc
inc
mov
inc
mov
mov
repnz
mov
fdivl
or
loopne
cli
subl
push
mov
out
notb
push
repnz
cmp
dec
mov
popf
inc
hlt
xorb
mov
jns
lea
lret
stos
mov
subl
subb
fldcw
sbbl
cmpsl
xlat
mov
adc
mov
fadds
inc
ljmp
push
xchg
jnp
jl
sarb
add
arpl
mov
out
loop
pop
in
mov
inc
dec
jg
mov
daa
mov
sbb
es
ds
mov
rcll
sub
adc
xchg
test
mov
movsl
stc
xchg
adc
cmc
nop
inc
xor
in
in
xchg
xorb
fdivrp
mov
cmpl
cmpsl
std
and
mov
add
xor
ss
icebp
sub
imul
add
loope
push
rep
js
push
stos
es
jne
and
ljmp
outsl
push
add
dec
es
imul
mov
enter
pop
call
sbb
jns
mov
imul
xor
outsl
es
aas
dec
int
sub
lea
repz
mov
mov
inc
roll
dec
push
cmpsb
test
lret
xchg
mov
out
inc
pop
pop
cmc
lods
xchg
icebp
mov
sti
mov
mov
addr16
or
movsl
mov
sbb
mov
push
ret
jae
negl
into
cmp
sbb
mov
add
inc
inc
add
push
push
dec
xlat
or
adc
cmpsl
jmp
jne
add
pop
mov
xchg
clc
ljmp
cmpsb
xchg
out
pop
popa
push
imul
sub
testb
jle
mov
dec
sahf
fists
daa
mov
into
mov
push
lock
outsl
outsl
jp
add
push
add
mov
cmp
mov
fs
psubsb
add
cmp
xor
adc
shl
lret
mov
testb
lods
imul
rcll
ljmp
ljmp
cmp
imul
xchg
push
pop
cmp
out
pop
jl
dec
or
out
mov
dec
xor
test
jmp
movsb
dec
int3
mov
daa
fistpll
fcoml
mov
imulb
and
adc
jmp
pop
mov
push
xchg
adc
inc
mov
push
push
test
and
sub
add
lcall
bound
popf
subl
orb
xor
repz
js
mov
push
das
mov
movsb
sar
pop
and
cmp
and
and
push
push
pushf
ds
shll
xchg
inc
inc
mov
sahf
add
inc
jmp
mov
sub
cmp
xchg
push
loopne
xchg
fnstenv
sbb
cmp
xchg
js
mov
lcall
add
push
and
fwait
out
ja
mov
mov
fildl
xchg
cmpsl
out
inc
je
xorb
decb
stos
xchg
jl
adcl
fisttpl
bound
cld
push
cmp
xor
adc
sbb
xchg
movsl
mov
push
jne
imul
fwait
cmp
push
push
xor
cmp
gs
mov
xor
call
or
lods
les
adc
cmp
jge
pop
mov
mov
pop
mov
fisttps
push
rcrb
aas
in
inc
mov
fistpl
add
mov
cmp
outsb
and
push
xchg
ljmp
mov
mov
inc
mov
je
adc
dec
popa
cs
cltd
mov
ss
push
loopne
pop
jl
sbb
jno
sarl
adc
push
inc
mov
in
mov
stc
fs
arpl
adc
notl
mov
notb
dec
cmp
mov
je
decl
dec
cmpb
out
insl
mov
push
mull
out
add
jae
vmread
pop
outsb
js
aas
and
cmp
push
ret
add
lds
mov
stos
jo,pn
jl
pop
mov
cli
or
inc
fstpt
and
mov
pop
sbb
and
pop
inc
fildll
mov
fsubrl
js
mov
push
ljmp
or
cmp
enter
pop
inc
or
adc
aam
mov
mov
pop
pop
pop
lds
push
cltd
fnstcw
xchg
xchg
das
ret
aam
jbe
lods
dec
cwtl
pop
mov
push
inc
mov
hlt
xchg
ret
mov
mov
inc
mov
push
xor
cmp
jle
roll
cmp
cmp
push
gs
mov
inc
test
and
push
jl
adcb
fdivrl
fdivrl
ret
je
inc
cmp
cs
sub
arpl
mov
fisubrs
outsl
mov
jp
adc
jmp
in
scas
jl
cmc
aam
sbb
xor
or
xor
leave
shufps
pop
bound
mov
int3
mov
and
fsubrs
xor
sahf
inc
lea
outsb
sbb
icebp
xchg
pop
push
xor
pop
loop
incl
fimuls
and
sub
jge
in
std
fs
aaa
sti
std
sub
adc
xchg
mov
jo
dec
in
sub
cmp
cmp
iret
aad
and
aaa
orb
cmp
xor
test
push
jno
xchg
fstl
shll
xchg
cltd
movsb
mov
sub
mov
xor
cmp
fadds
inc
or
adc
or
or
fmull
pop
popa
adcb
mov
push
pop
inc
lret
adc
dec
mov
loope
pop
jecxz
push
mov
jae
mov
bound
sbb
sub
mov
int
verr
add
imul
mov
clc
enter
and
test
pop
xor
scas
js
xchg
adc
and
stc
cltd
cwtl
mov
inc
insb
xchg
jae
push
xchg
and
aas
or
push
and
call
inc
xor
sub
sahf
push
ja
daa
mov
loop
jae
sub
cli
movlps
adc
ret
stc
jg
and
je
inc
adc
cmpb
xor
pop
out
ret
sbb
mov
fs
cli
aad
pushf
data16
inc
pusha
psllq
push
rcrl
scas
push
addl
data16
fcomps
cmc
out
fcmovnu
dec
stc
or
and
pop
icebp
shrb
ror
add
cmp
insb
inc
jge
cmp
insl
push
xchg
xchg
sti
fistl
out
idivl
cmpl
stos
cmp
mov
scas
fstpl
mov
inc
inc
loope
push
push
mov
or
cmp
push
sbb
or
cmpsb
mov
out
test
scas
aam
dec
add
add
inc
lds
jns
clc
in
mov
jmp
cmp
sbb
jb
mov
in
mul
pop
push
cmp
fidivrl
nop
mov
push
sarb
fwait
jle
lea
cs
aad
or
in
mov
imull
fcmovnbe
outsl
mull
nop
dec
in
out
sbb
sbb
mov
or
xchg
xor
ret
xor
inc
dec
xor
aad
lcall
rorb
lret
adc
insb
xor
sub
xchg
xchg
push
lock
mov
aaa
in
repnz
xchg
mov
outsl
xchg
mov
out
test
mov
jbe
cmp
dec
scas
and
loop
xor
loop
int3
add
mov
jmp
jne
popa
lea
add
stc
and
inc
and
lahf
test
ljmp
push
call
mov
cmp
jmp
push
stos
clc
mov
int3
daa
repnz
aas
push
sbb
test
aas
xchg
push
movsb
das
xchg
sub
sbb
lods
jl
inc
pop
pop
mov
push
xchg
pop
xlat
or
cmpsl
mov
jb
dec
push
and
mov
mov
pop
and
imul
push
push
in
fiadds
cld
cmpsl
fistl
sbb
inc
or
add
cmp
mov
mov
cmpsl
std
and
outsb
popa
pushl
mov
pop
sub
lcall
push
ljmp
aaa
cld
xchg
jns
pop
stos
imull
imul
pop
push
jnp
mov
jno
mov
pop
lods
mov
cmp
lock
inc
sti
ret
insb
xchg
add
aam
js
mov
inc
repz
sbb
mov
xor
dec
xchg
pop
stos
pop
adc
dec
or
fisubs
jns
imul
imul
mov
test
outsb
and
xorb
into
jno
dec
mov
test
xchg
jb
pop
inc
cmp
or
add
scas
dec
insb
fdivl
cli
scas
dec
or
push
adc
jle
ds
fs
popl
cmp
insl
mov
jl
or
lds
inc
daa
lret
xchg
bound
jg
cmpsl
xor
xor
lods
jae
loop
mov
xorb
inc
push
lret
mov
add
roll
xchg
jo
sub
or
cmp
ret
dec
mov
push
jmp
pop
mov
or
pop
sti
imul
cwtl
lcall
into
stc
or
pop
ret
and
inc
mov
and
mov
lods
xchg
ret
cmc
dec
icebp
adc
pop
rolb
test
dec
adc
fmull
xchg
testb
andl
jp
addl
cmp
lods
jno
pusha
aam
jne
in
push
mov
push
aas
xor
fistpl
scas
mov
add
shrl
outsb
adc
xor
insl
pop
fsub
cmc
cld
xchg
adc
fadds
cs
sub
loopne
pop
sub
adc
call
pop
loope
and
add
fbld
imull
sti
xchg
jns
cltd
mov
jecxz
or
lret
lahf
xchg
dec
sarl
mov
pop
xor
stc
divl
or
das
inc
mov
cli
loopne
jns
pop
mov
sbb
in
leave
mov
inc
cmp
inc
loop
das
leave
cltd
inc
or
clc
adc
es
loopne
in
xchg
and
jmp
mov
jl
dec
out
mov
xchg
adc
rorl
xchg
or
psubsb
std
ja
in
dec
cmp
pushf
mov
cwtl
mov
out
xchg
mov
mov
iret
les
mov
jge
xor
inc
add
dec
adc
jl
pop
mov
and
sub
dec
das
mov
and
shr
popa
je
sbb
out
divb
or
into
enter
dec
adc
cltd
or
ss
pop
dec
push
les
sbbb
pushl
imul
shrb
int
xchg
loop
in
out
loop
dec
add
inc
or
nop
mov
addb
out
sbb
std
sbb
andb
adcl
or
mov
push
push
aad
mov
sbb
xor
cld
cmp
lock
dec
mov
cmp
pop
test
test
dec
lret
xor
sub
mov
int3
pop
lcall
sti
mov
mov
push
sub
sub
pop
test
cwtl
leave
out
pop
mov
xor
and
inc
dec
mov
inc
adc
bound
jae
adc
inc
iret
sbb
test
out
mov
xchg
cwtl
add
adc
cmpl
loop
and
sti
dec
stos
fcom
lds
mov
fdivrp
popa
data16
pop
outsl
add
js
mov
jne
in
add
icebp
jp
mov
mov
shll
mov
imul
jmp
test
lcall
xor
sub
cmp
mov
jg
mov
sub
insb
push
sub
push
out
lahf
sbb
mov
mov
in
pop
mov
loopne
mov
std
out
xchg
adc
addr16
and
movsl
mov
faddp
hlt
jg
orb
and
mov
shrb
cmp
mov
movsb
out
out
mov
cld
lcall
iret
dec
xchg
xchg
push
add
cmpsb
imul
popa
rep
in
icebp
test
jecxz
gs
hlt
cmp
imul
insb
dec
mov
pusha
lods
pop
mov
jb
sbb
icebp
lods
or
cmp
push
insb
shrl
popf
out
shl
mov
jo
in
clc
xchg
push
call
popa
aam
in
xchg
add
inc
pop
data16
shll
push
dec
fwait
sub
cmc
sbb
pushf
ja
or
int
dec
rcrl
push
jbe
mov
cmp
lds
xor
shlb
pop
pop
fs
mov
cwtl
rcrl
jp
adc
outsb
dec
ja
ret
or
mov
jb
lea
imul
lea
pop
push
mov
mov
or
sub
xchg
sub
adc
cmpsb
cli
push
in
sub
lret
add
add
scas
sahf
lret
xchg
aad
mov
pusha
clc
sti
jns
arpl
or
dec
ret
jno
test
sbb
jnp
push
notb
hlt
jecxz
repz
sti
cli
dec
xchg
int
adc
or
dec
dec
xchg
outsl
js
lret
out
cmp
aad
push
mov
cmpsb
sub
xor
add
ljmp
cmp
cmp
and
aam
pop
sbb
rcrb
ret
and
aaa
ret
mov
pop
jo
pop
cmpb
pop
add
sbb
dec
mov
negl
outsl
sub
mov
or
leave
adc
jl
mov
push
loopne
rcrl
adc
mov
orps
inc
aas
sbb
sub
xor
sti
inc
dec
and
and
loop
rcl
fsub
pop
mov
int
adc
push
ljmp
cld
mov
mov
out
cmp
aaa
leave
or
or
lea
pop
pop
sbb
fiadds
mul
bswap
rolb
mov
cmpsb
sub
dec
sub
xchg
push
into
out
in
xor
hlt
loope
or
js
jmp
cmp
cmpsl
add
add
insl
mov
scas
gs
icebp
inc
pop
xchg
fisubl
pop
shr
and
shlb
sti
clc
je
popa
hlt
xchg
cmpsb
ret
jno
add
lods
mov
pop
add
ds
ljmp
xor
add
xor
mov
ss
xchg
and
sub
aam
lods
dec
mov
jo
test
sub
loop
cmpsb
adc
cmp
adc
pusha
xchg
movsb
out
and
jno
push
sahf
mov
stos
jle
fwait
pop
jbe
push
aad
roll
cmc
add
loope
mov
daa
dec
shl
sbb
out
sub
lcall
push
mov
insb
xchg
fistps
out
std
mov
out
sub
iret
pop
aaa
test
gs
clc
cs
nop
insl
outsl
sub
xchg
and
xchg
push
add
scas
adc
mov
dec
push
fldl
inc
sbb
scas
fs
push
jb
and
daa
fildll
call
aas
sub
cmp
pushf
fstl
xchg
call
pop
sbb
xchg
xchg
dec
add
mov
hlt
cmpsb
stos
cmpsl
and
sarb
bound
or
xchg
add
and
or
jo
addr16
pop
clc
in
mov
dec
int
xor
lods
xchg
dec
out
xor
mull
push
xchg
int
in
and
out
dec
pop
pushl
inc
and
cmp
mull
adc
xlat
push
fadd
cwtl
jmp
mov
jo
fsts
mov
sbb
popa
mov
mov
xor
jae
xchg
cmp
inc
cli
adcb
push
pop
outsl
xor
and
or
rcl
lds
mov
lret
adc
xchg
in
cmc
cmp
int
adc
pop
sahf
xchg
test
int3
push
dec
jae
jno
int3
xchg
mov
sarl
std
jle
movsb
pop
inc
ror
jmp
jnp
outsb
push
js
in
jmp
xor
jmp
movsb
hlt
inc
push
ja
in
inc
scas
sub
adc
in
nop
xchg
inc
stc
aas
adc
push
xchg
inc
adc
sbb
popf
mov
add
jno
sbb
cmpsb
mov
lea
inc
mov
dec
xor
xor
sbb
cmpl
and
cmpsb
sub
inc
cmp
test
cmpsl
cltd
sbb
rorb
shlb
incl
adc
loopne
or
jae
dec
xor
mov
movsb
mov
mov
pop
xchg
mov
add
movsl
lahf
add
or
je
or
pop
or
dec
movsb
es
int
mov
and
mov
test
xorl
popa
and
sahf
ret
cmp
adc
lods
loopne
cmpsl
cmc
push
aas
imul
in
daa
xor
and
dec
lea
bound
mov
jb
pusha
scas
stos
bound
repz
mov
scas
sub
sub
dec
dec
lret
and
cmpsb
mov
dec
into
lret
xor
data16
scas
add
rcll
int
mov
test
push
dec
xor
test
cltd
mov
jge
sbb
or
mov
add
lea
xor
sub
jae
mov
insb
mov
pop
push
in
xor
mov
xchg
adcb
addb
pop
stc
fadds
adc
sbb
sbb
mov
cli
jo
push
stc
adc
in
loopne
je
mov
ss
cmp
xor
push
scas
ror
rep
int3
insb
push
mov
data16
cwtl
jle
jne
movsb
push
out
pmuludq
mov
push
jbe
insb
jmp
inc
sub
je
jle
xchg
jecxz
adc
push
jb
mov
mov
repnz
imul
xchg
rcrl
jb
icebp
push
gs
inc
push
mov
pcmpgtw
push
sbb
mov
dec
jecxz
sub
or
mov
daa
movsb
ret
loop
in
mov
lcall
fnstenv
repz
adc
lcall
xchg
jle
fcoml
mov
jne
mov
aad
xchg
cmp
jecxz
loop
out
test
xchg
repnz
iret
adc
pusha
loopne
mov
jmp
xchg
lds
push
jecxz
mov
jb
dec
inc
xchg
mov
sbb
into
push
je
inc
adc
push
mov
imul
sbb
jle
mov
loopne
mov
icebp
neg
mov
and
sbb
mov
sbb
mov
out
mov
push
cltd
add
mov
sbb
lds
out
jnp
and
ret
movl
test
cmp
or
repz
in
call
jne
dec
inc
jb
jno
mov
jp
inc
fnstsw
mov
pusha
outsb
xchg
test
jne
gs
xchg
outsb
loope
push
mov
dec
pop
out
jge
test
lahf
lret
ret
pushf
test
or
enter
sti
mov
dec
jb
or
popa
repnz
cli
mov
std
js
inc
popf
dec
stos
lret
xorb
mov
test
daa
mov
pop
xchg
pop
repz
out
pop
ljmp
push
fists
adc
bound
pop
lahf
test
out
mov
and
lods
outsl
dec
idivb
sub
pop
xchg
jl
mov
scas
in
mov
call
int
lahf
push
pushf
scas
cld
cmp
sbb
mov
mov
inc
lret
dec
sarb
lret
test
add
pop
outsb
mov
aam
aam
sbb
sub
inc
jnp
push
leave
push
xor
cwtl
fistpll
pop
xor
or
cmp
daa
aad
rcr
push
or
test
sub
test
or
cwtl
xor
adc
into
gs
or
xlat
inc
rorl
sub
aas
mov
push
mov
out
stos
outsb
pop
sub
das
jns
add
out
das
imul
jno
ret
in
sbb
jbe
mov
xchg
imul
cltd
aad
inc
lods
mov
in
sub
mov
cmp
pop
and
dec
enter
cmpsb
jmp
jmp
lods
add
aam
mov
inc
iret
sahf
leave
mov
sbb
inc
cmp
and
idivl
inc
sbb
xchg
mov
sub
imul
add
pop
or
jmp
xor
adc
cmpsb
test
fiadds
xchg
and
out
inc
pop
outsb
cmp
call
jnp
dec
fucomi
or
notb
cli
or
cwtl
xchg
loope
in
pop
xor
insl
xchg
mov
aas
outsb
cmp
gs
mov
je
mov
dec
popa
jge
fistl
mov
and
push
jge
lcall
scas
movsb
adc
inc
mov
sub
mov
adc
inc
stc
aaa
jb
arpl
addr16
dec
cltd
push
enter
lock
cmp
inc
cmpsb
test
enter
jb
push
mov
insb
mov
sub
xchg
addl
push
mov
lods
jp
jns
mov
cmp
in
adc
xor
push
dec
pusha
push
cmc
in
mov
jae
cs
push
pop
and
mov
sub
mov
cli
fsub
rolb
clc
inc
bound
ror
push
fistps
pop
js
bound
aam
icebp
cltd
insb
add
sub
or
stc
sub
int3
xor
lret
xacquire
mov
es
das
enter
lcall
mov
xchg
push
loope
je
mov
and
pop
iret
and
sbb
inc
push
jbe
jle
ret
sbb
pop
in
or
sub
xchg
lret
pop
or
sub
int
jb
pop
daa
in
std
sti
jecxz
hlt
in
push
lret
loopne
mov
adc
jns
add
popf
push
imul
sub
cs
addr16
cwtl
push
xchg
rorl
push
mov
mov
sti
je
out
or
int
mov
sub
fadds
sub
ret
push
daa
and
inc
ss
sbbb
pop
push
xchg
cmpsl
cmp
mov
add
xor
xor
lock
int3
or
int
rorl
pop
pop
aas
mov
sbb
pop
out
scas
stc
enter
inc
jne
xchg
jge
jmp
lea
xlat
xchg
mov
js
mov
mov
arpl
xchg
daa
xor
mov
shrl
hlt
lds
sub
je
jge
imul
push
incl
lcall
mov
or
in
mov
cmp
fnstenv
pop
decb
je
movsl
push
xchg
jne
mov
sub
mov
cltd
insl
das
mov
xor
out
es
mov
cmp
mov
push
ret
jg
pushw
cmp
or
mov
jae
inc
lods
xor
ja
mov
jb
lods
std
jle
mov
out
add
sbb
xor
cmpsb
jg
cmp
push
sbb
scas
bound
pushf
outsl
xor
out
pop
repz
jo
repnz
jno
pop
scas
cmc
outsb
sub
push
inc
out
outsl
daa
jnp
arpl
add
or
in
nop
sbb
add
adc
cltd
dec
sub
sub
imul
leave
adc
dec
sahf
push
xor
sbb
sub
movsb
xchg
bound
in
xchg
and
inc
sbb
push
inc
xor
arpl
addps
mov
inc
test
pushf
and
outsl
loop
jl
stc
les
insb
outsb
int
jo
das
add
sbb
and
mov
push
ss
xlat
mov
int
test
test
jmp
xchg
push
push
jne
pop
pop
sub
sbb
std
jle
in
in
push
push
andl
cmp
mov
xlat
mov
dec
mov
jle
pop
outsl
pop
lcall
aad
lret
and
into
mov
sbb
movsb
enter
mov
ret
sti
out
jmp
int
xchg
adc
ja
and
jg
mov
clc
xchg
sub
fidivrl
xor
rcrl
pop
inc
lods
add
clc
push
mov
std
stc
andb
inc
xchg
mov
fcomps
jns
push
lock
jne
les
adc
pop
inc
add
lods
xor
out
pop
aas
jmp
sbb
dec
arpl
and
or
cmpsb
xor
jns
cmp
adc
mov
insl
push
and
stos
cs
mov
dec
lret
inc
sub
aaa
or
add
fs
jne
inc
mov
loope
inc
push
dec
xorb
mov
jae
loop
call
or
popf
outsl
adc
shl
push
cltd
out
call
sbbl
cmp
cmpsb
enter
or
add
xor
ficoml
sbb
xchg
and
xlat
cli
dec
xor
inc
cmp
pop
imulb
push
xchg
pop
cmp
mov
and
rorb
xchg
sub
dec
int3
ja
pop
ja
repnz
mov
inc
jnp
insl
pop
sub
cs
mov
sbbb
in
pop
push
mov
lods
xor
in
push
nop
shll
xor
push
jge
aas
xor
ds
mov
pop
in
sub
dec
sbb
sub
outsl
mov
rcll
adc
sub
push
sti
pusha
jecxz
xor
sub
out
mov
scas
or
mov
xchg
js
add
inc
adc
enter
loop
dec
xchg
jb
popa
mov
sbb
pop
xchg
mov
cli
adc
push
push
outsl
shll
lock
mov
clc
dec
adc
mov
xchg
pop
mov
pushf
xor
jbe
movsb
lods
ja
dec
add
sbb
jae
xor
inc
xchg
into
mov
loopne
scas
fistpl
ljmp
mov
jbe
cmp
movsb
dec
rcl
inc
mov
mov
shl
mov
jecxz
sub
outsb
jp
test
sub
test
cli
out
xchg
adc
rcll
imul
adc
cmpsb
arpl
enter
mov
addl
lea
leave
push
test
cmp
std
imul
repz
inc
adc
sbb
lds
push
and
xchg
aaa
xor
add
aas
push
and
in
shrd
jbe
loopne
dec
lods
frstor
push
dec
mov
je
rcr
clc
adc
bound
inc
jne
arpl
mov
sahf
cs
mov
es
push
lret
inc
or
lea
push
pop
inc
ficomps
mov
dec
movsl
into
enter
dec
arpl
rcrl
scas
ret
in
jo
xchg
loopne
cmc
sub
inc
jnp
dec
mov
js
fcmove
cmp
mov
setle
mov
add
sti
add
jecxz
outsb
mov
call
adc
cmpsb
push
or
or
shrb
xchg
cmp
std
pop
iret
pop
jns
mov
cmp
cmp
jns
scas
test
leave
orb
jge
aaa
aaa
in
push
movsl
pop
pop
das
lret
popf
mov
add
mov
movsb
clc
mov
sub
dec
dec
js
fwait
je
jno
testl
imull
jmp
or
mov
xchg
jle
cmpsb
adc
es
push
jae
cmp
xchg
mov
in
inc
dec
dec
xor
fidivs
mov
adc
pop
shl
push
lret
sahf
in
inc
fsubl
ljmp
aad
xor
sub
fldcw
jae
flds
mov
lea
sub
jnp
out
std
insb
fisubrs
pop
dec
and
mov
daa
rcrb
roll
adc
popf
in
dec
incb
leave
sbb
outsb
inc
movsl
jo
in
inc
leave
adc
sub
dec
push
subb
in
mov
cmc
mov
mov
daa
jmp
rcrl
dec
adc
daa
sub
icebp
mov
fdivs
cmpsb
mov
xlat
mov
mov
jae
fucomip
mov
mov
js
ffree
lcall
and
jnp
enter
dec
shl
stos
or
cltd
out
movb
hlt
pop
test
and
jns
mov
jmp
cli
aam
cmp
data16
shll
sbb
out
out
push
movsl
loopne
dec
fucomip
cmp
sbb
aam
adc
mov
mov
push
cmp
outsl
xorl
sub
mov
in
fsubs
xchg
xchg
ss
xor
int
mov
iret
mov
push
out
iret
sbb
lahf
popf
sub
push
icebp
push
jns
jno
cmp
aaa
inc
inc
mov
jne
dec
xlat
pop
lret
rorl
xor
xor
pop
aad
cmp
jo
in
movsl
pop
push
clc
int3
sbb
popa
sub
je
inc
movsl
outsl
and
sbb
xor
inc
inc
lret
or
xor
xor
shll
jo
ljmp
adc
in
adc
sbb
pop
or
jae
mov
sbb
sarb
out
push
lods
inc
push
push
cmc
adc
inc
push
push
mov
xor
push
mov
and
lods
cmp
xor
push
cmp
push
add
push
dec
mov
dec
xor
pop
fisttps
cltd
lahf
mov
mov
nop
pop
sbb
sub
movups
data16
jo
xchg
pop
xchg
arpl
mov
cmc
dec
cs
into
lahf
test
mov
rcll
adcl
sbb
mov
inc
xor
sahf
jmp
add
xchg
in
inc
cmpsb
and
mov
xchg
sbb
and
scas
pop
fucomip
loope
es
xor
roll
sub
push
dec
shrb
fwait
shll
sbb
push
inc
jp
bound
sub
das
and
sub
outsb
sbb
sub
push
call
lret
or
add
mov
ljmp
lods
stos
adc
sbb
push
adcl
push
lret
cmc
je
dec
or
mov
and
push
adc
lret
clc
mov
in
imul
hlt
add
mov
mov
mov
movsl
push
inc
popf
cmpsb
adc
mov
repnz
jge
add
hlt
sbb
cmp
sub
mov
lods
jo
or
int3
popa
push
std
clc
fstps
sub
dec
clc
cmp
ljmp
cld
sbb
xor
pop
mov
and
adc
pop
jge
pop
subb
inc
lret
sarl
aas
aad
dec
outsb
add
mov
xlat
clc
imul
pop
sub
or
sub
lds
push
jecxz
dec
bound
andb
dec
lret
movsb
icebp
cmpsb
clc
pop
fs
or
push
inc
mov
add
jns
leave
push
adc
jnp
mov
pop
movsl
out
cltd
in
or
nop
std
xor
es
mov
lret
mull
scas
mov
inc
leave
lcall
jbe
outsl
outsb
and
add
int
addl
cltd
inc
movsl
and
and
inc
dec
and
jecxz
sub
sub
pop
jmp
insb
dec
int3
or
shlb
xor
ljmp
ss
xchg
adc
mov
sub
loop
cmp
pop
jno
dec
pop
sbb
ljmp
dec
mov
mov
aad
pop
pushf
lret
outsb
and
movsl
sub
mov
or
pop
mov
push
push
add
push
push
mull
mov
test
inc
fisubs
xchg
lret
cmp
je
xchg
repz
ja
in
test
movsb
sbb
mov
pop
jle
mov
dec
jne
adc
xchg
push
pop
pop
aaa
pop
test
andb
js
sbb
xchg
mov
xchg
js
cld
jp
pop
nop
jbe
jnp
cs
inc
jmp
cmp
mov
mov
iret
inc
dec
in
inc
jne
mov
mov
or
jo
out
mov
push
sub
icebp
inc
and
std
lret
mov
jbe
xchg
sbbl
repnz
aam
aad
adc
incl
cmpl
les
insb
mov
mov
sub
jb
ja
sub
andl
dec
fwait
or
loopne
pop
dec
xchg
adcb
int3
mov
adc
ret
sub
fxam
lret
out
sbb
or
mov
je
mov
ss
in
aad
adc
cmp
dec
cltd
sahf
sub
xchg
std
sbb
loop
stos
jns
sar
imul
addb
popf
add
addb
aas
pop
rcr
dec
sub
xlat
push
ficompl
les
int
ljmp
pop
push
ret
mov
or
mov
sub
rcll
or
cmp
and
pop
push
shrd
sbb
jno
sbb
out
addl
popf
jg
or
lea
push
xor
stos
popa
inc
movsl
push
add
aas
xchg
add
push
mov
mov
pop
leave
cmp
jle
adc
inc
push
addr16
leave
int3
push
orl
lock
gs
sahf
jmp
shlb
mov
rol
sbb
lods
repz
pop
xchg
das
arpl
dec
iret
add
repz
push
test
dec
mov
mov
dec
dec
and
dec
jg
gs
jno
dec
cmpsl
add
pop
sbbb
or
adc
cmp
ss
cmp
push
mov
jmp
outsl
cmpsl
mov
xchg
pop
add
cmp
cmp
jle
mov
addr16
sub
pop
dec
mov
lock
push
imul
fsubs
mov
inc
test
mov
clc
mov
mov
jnp
int
adc
cld
lods
lcall
test
xor
stos
fdivr
pop
rcr
nop
jae
arpl
divl
testl
daa
ret
inc
inc
cmc
std
ret
jns
stc
cmp
cwtl
dec
cld
arpl
divl
push
and
lock
mov
sti
adc
mov
orl
lds
out
js
ror
in
outsl
push
cmpsl
mov
arpl
xor
outsl
push
imul
cmp
sbb
cmp
insl
insl
adc
mov
nop
pop
cld
jne
cmpsl
jecxz
scas
push
das
lret
jae
or
inc
push
mov
adc
mov
ljmp
push
jnp
sbb
pop
push
pop
mov
fwait
in
and
jnp
out
fs
arpl
stc
insb
int
mov
xor
dec
sub
push
xchg
push
fcmovu
dec
stos
push
int3
dec
test
mov
lea
mov
and
or
jl
lods
mov
ljmp
stc
in
imul
jns
dec
dec
cld
dec
scas
push
pop
je
aas
sbb
ljmp
dec
arpl
cmpsl
imul
xlat
std
bnd
or
adc
dec
inc
jbe
lret
push
das
cltd
out
lock
fs
jecxz
sbb
test
mov
jnp
dec
sub
dec
into
jne
fcomp
mov
inc
lahf
xlat
leave
repz
push
aad
xchg
cltd
ret
push
jmp
rcll
push
sub
push
and
push
add
fmuls
sysret
xlat
stos
add
divl
xchg
ss
mov
sub
cmp
xor
sub
cmp
lret
jmp
fstl
inc
cmp
insb
gs
imul
xchg
jno
pop
pushf
pop
jg
insl
fisttpl
icebp
in
dec
pop
inc
fdecstp
xor
pop
push
jnp
outsl
inc
push
out
out
in
dec
aaa
je
faddl
movsl
mov
cltd
fcmovb
mov
xor
cmp
pop
dec
cmp
mov
ja
adc
ficomps
divl
adc
or
scas
push
icebp
adc
xor
imul
icebp
mov
ficompl
mov
inc
aam
mov
cmc
push
in
daa
hlt
jle
scas
mov
mov
xchg
pop
lcall
movsl
jns
sarl
bnd
cmp
mov
lret
fimuls
fwait
dec
sub
and
cmpsl
adc
rorl
cltd
jno
repz
mov
popf
xor
ja
nop
jns
and
sbb
adc
and
iret
mov
jne
add
popa
lds
mov
push
push
dec
mov
mov
add
cmpsl
push
pop
cmpsl
cmp
mov
pop
pop
inc
dec
add
aad
xor
dec
mov
cmp
mov
fmul
orw
jl
or
lods
ror
lahf
sub
fdivp
mov
aad
out
popf
cmp
ret
mov
pop
cmpsb
push
pop
mov
lcall
sub
push
out
or
lret
lret
adc
jp
mov
add
jb
daa
jg
fwait
shrl
xchg
push
icebp
cmp
call
xor
mov
sub
adc
xchg
out
push
adc
fiaddl
out
sti
in
pop
ficompl
mov
inc
stos
and
sti
clc
mov
pop
push
loope
mov
pop
imul
push
mov
sahf
cmp
call
cld
aaa
mov
or
notl
sbb
mov
int
cmp
outsl
jmp
ss
cmp
sbb
sbb
xor
shrb
loopne
inc
sbb
mov
stos
outsb
rcl
sti
push
cmp
cmp
or
into
test
pop
push
js
jbe
in
fdivrl
popf
pusha
pop
mov
xlat
inc
xor
push
add
add
lcall
cwtl
loope
xor
inc
addps
xor
add
and
inc
ds
adc
fldenv
pop
push
js
push
or
jmp
cmpsb
fstpl
iret
das
lds
cli
sub
fcompl
ljmp
hlt
jmp
insb
push
and
adcl
add
in
mov
insb
sbb
cmpsl
stc
cmp
dec
jl
cwtl
scas
outsl
and
pop
das
push
dec
sbb
out
testl
sti
mov
movsb
cli
test
icebp
inc
xlat
or
add
pop
fildl
addl
lods
aam
mov
out
leave
push
mov
jne
inc
sbb
loopne
sti
cmp
int3
cmp
mov
mov
mov
or
les
dec
dec
mov
inc
inc
movsb
fsubrs
int
gs
leave
jge
cmpsl
push
test
call
andps
jl
popf
jbe
adc
xchg
mov
mov
fsubr
or
mov
pop
out
imul
lret
xchg
xchg
adc
pushf
cmp
push
cmp
leave
and
ret
jae
or
je
mov
jnp
xor
leave
push
inc
dec
xchg
lahf
movsl
mov
xchg
sbb
imul
leave
test
bound
or
int3
ja
fstpl
stc
int3
shlb
mov
adc
inc
cmp
stos
rorl
sub
call
mov
mov
rcrl
enter
out
repnz
mov
inc
sbb
jl
mov
xchg
popf
lahf
test
jns
jns
pop
push
sahf
xchg
ret
stos
sbb
pop
mov
mov
sub
mov
pop
lock
cmpsb
aam
out
sbb
jmp
cmp
jo
push
ljmp
fstps
mov
in
sbbb
jmp
sub
subb
jmp
rolb
jae
lahf
and
std
outsb
pusha
ret
outsb
adc
mov
mov
faddl
xor
inc
or
sub
add
push
mov
stc
add
sub
xchg
aad
aam
jnp
xor
pop
dec
iret
push
and
sbb
popf
sub
ret
dec
xor
jge
mov
jp
int3
rorb
mov
je
cmpsl
fadds
jmp
sbb
faddl
orb
jnp
inc
repz
push
xor
push
add
pop
inc
jns
stc
pop
fwait
adc
lahf
mov
inc
fmul
fnsave
je
mov
sahf
xor
xchg
adc
xchg
xor
pop
sbb
enter
lds
std
or
xor
push
inc
into
scas
adc
in
mov
das
and
mov
daa
jg
iret
out
out
je
nop
and
scas
jl
lds
inc
cld
rolb
mov
loope
int
push
mov
cmpsl
jo
jae
push
into
and
arpl
jbe
dec
or
jl
lret
push
imul
sub
xchg
std
push
lea
jb
add
xchg
xchg
arpl
xor
dec
ja
fadds
lret
push
sub
cmp
dec
lret
loope
fildl
dec
jo
mov
pop
jnp
mov
push
js
out
scas
mov
sahf
add
shll
jecxz
cmpsb
roll
jmp
cli
push
cs
jecxz
push
insb
push
aad
outsl
pop
les
sbb
scas
adc
or
sbb
jbe
ffree
fbstp
mov
sub
pop
xchg
cmpsl
push
inc
outsl
and
inc
jp
pop
or
dec
sbb
jge
push
dec
mov
movsl
enter
fisttpll
test
or
or
mov
xorl
mov
pushf
inc
and
ja
and
lahf
lock
mov
jmp
nop
daa
out
add
pusha
out
xor
pop
cli
inc
push
push
mov
imul
das
cmpsb
inc
and
and
and
into
lea
add
rclb
dec
jns
in
out
jb
dec
in
loope
rorl
testl
pushf
je
mov
mov
or
inc
xchg
adc
xchg
mov
imul
jmp
in
pop
testb
xchg
iret
mov
mov
movsbl
call
nop
pusha
scas
repz
fwait
xlat
or
jo
and
cli
nop
jno
push
pop
lods
int3
aas
loopne
int
daa
cmp
push
mov
mov
cltd
cmpsl
out
dec
push
mov
clc
xchg
test
or
jns
stc
cwtl
add
inc
mov
aad
int
push
incb
int
inc
lret
cmp
scas
inc
lds
sub
scas
sub
shll
int3
rcl
insl
cmpsb
decb
xchg
in
loope,pt
xor
inc
mov
lea
pop
movsl
icebp
add
cmpsb
outsl
fsubs
jp
outsl
inc
lret
cmpsb
mov
fnstsw
call
mov
xchg
mov
push
mov
push
add
out
push
scas
pop
ficomps
cs
cmp
fisubrl
mov
cltd
or
loope
sbb
fldcw
adc
push
ds
gs
inc
push
add
xchg
dec
cli
xor
inc
cmp
aad
jb
lcall
push
push
iret
inc
mov
pop
int3
bound
aad
xchg
xchg
jo
mov
xlat
adc
add
sahf
movsb
sub
xchg
mov
lds
xchg
add
pop
mov
add
sub
fs
jns
fsts
and
sub
outsb
cmp
cli
popf
or
iret
or
cwtl
jecxz
or
xor
loopne
mov
addl
lds
sbb
mov
jns
scas
stc
dec
popf
xchg
and
loopne
mov
sub
inc
aam
push
ret
loope
gs
sub
push
addr16
les
das
pushf
pushl
jp
pop
pop
scas
xchg
dec
hlt
imul
das
jle
fcmovu
out
outsl
mov
and
add
push
inc
fwait
push
into
out
arpl
xlat
subb
pop
test
pop
aam
icebp
jle
ljmp
inc
lcall
cmp
ds
cli
adc
sbb
dec
movsl
std
rolb
cmpsl
fimuls
inc
std
ret
mov
es
pop
popf
pop
aas
push
aam
aas
out
rclb
jo
dec
jl
repz
stos
aas
push
and
int3
rorb
xchg
push
push
popa
js
and
aam
and
jp
and
nop
lods
add
test
mov
push
and
pop
add
mov
dec
sar
pusha
movsb
stos
add
jg
xor
shrb
jmp
jmp
mov
xor
out
mov
mov
rcl
mov
ret
movsl
sub
test
pop
jp
sbb
xchg
hlt
mov
push
push
mov
push
fwait
mov
movsl
out
xchg
int
sbb
cmpsl
sub
inc
push
cli
lcall
lock
xchg
and
lock
or
pop
std
mov
adc
gs
std
sbbl
hlt
mov
jno
mov
push
pushf
out
xor
mov
dec
in
subb
pop
push
jnp
pop
xchg
pop
pusha
mov
fldt
rdtsc
fisttpll
daa
mov
test
out
int
movsb
call
test
jmp
or
loope
inc
cmp
int
sbb
mov
adcb
jecxz
call
icebp
in
cmp
inc
pop
mov
pop
addr16
mov
xchg
imul
sbb
inc
adc
pushf
lcall
sbb
xor
loope
or
fcoms
and
cmp
mov
cmp
outsl
xor
dec
jne
cwtl
jnp
xlat
jo
dec
inc
adc
lock
xor
in
inc
inc
or
pop
push
pushl
cmp
shl
adc
jbe
lods
jae
icebp
mov
rcrb
ja
mov
mov
push
cmp
sub
inc
cmpl
push
icebp
stc
add
dec
or
dec
dec
lret
clc
int3
adc
repz
pop
add
in
loopne
or
cmpsb
xchg
inc
dec
test
xor
mov
jnp
cmp
mov
jnp
mov
repz
dec
mov
sbb
ss
and
or
lahf
sub
push
xchg
sub
dec
loopne
aam
ss
jmp
xor
mov
mov
sbb
dec
outsb
arpl
loope
outsb
pop
mov
inc
jne
sbb
cmpsb
fstpl
jb
and
lds
rorb
mov
mov
sbb
lret
xor
dec
std
pop
pop
cld
outsl
in
xchg
in
notb
or
xor
in
enter
pushf
nop
lock
int3
adcb
add
out
cmp
loopne
test
es
dec
sub
cmp
jle
fdivr
cmp
xchg
sbb
cmp
enter
faddl
cmc
cli
cmc
js
aam
out
aas
stc
addr16
mov
test
xor
roll
out
adc
fcmovnbe
test
xlat
icebp
adc
aas
jnp
push
and
pusha
out
or
sbb
jae
lret
jb
mov
mov
fldl
push
popf
adc
test
push
imul
cmp
fadds
das
imul
xchg
xchg
lds
shll
out
jb
jne
jns
repz
push
lret
mov
jno
imul
out
mov
sbb
nop
xchg
jg
jle
or
cmp
in
push
jge
mov
jmp
ret
or
cli
movsl
mov
add
mov
push
mov
cmp
xor
pop
cmp
mov
pusha
sbb
xchg
dec
leave
mov
js
stc
xlat
incb
addb
or
add
mov
add
mov
sub
push
inc
push
ja
pop
or
dec
add
cmp
push
mov
mov
xor
stos
sbb
out
dec
test
dec
cmp
andl
xchg
adc
adc
mov
xchg
add
aaa
int3
push
scas
out
pop
lea
pop
adc
je
jge
fsub
push
mulb
xor
cmp
les
cmp
gs
lock
or
xchg
fs
xchg
in
lret
std
jp
jle
pop
mov
adc
add
pop
cmpsb
pop
sub
cmpsb
sub
and
or
push
xchg
xchg
mov
add
pop
cli
cmpsl
mov
cmpsb
sbb
adc
pushf
rcrl
xor
rolb
arpl
mov
mov
dec
add
dec
aas
xor
test
shr
mov
call
jle
xchg
push
imul
aam
dec
mov
inc
sbb
ficompl
in
push
adc
mov
push
test
sbb
pusha
sub
cmp
mov
add
movsl
pop
int
addb
mov
fsub
test
scas
and
shll
xor
jae
xor
jae
sbbb
shll
pop
stc
cmp
dec
addr16
add
or
mov
std
mov
push
jg
lods
jmp
fchs
xor
scas
bound
mov
lock
mov
hlt
inc
mov
pop
mov
jecxz
in
adc
notl
clc
pop
and
out
push
mov
int3
lock
sub
shr
sbb
mov
rorb
add
bswap
mov
inc
xchg
test
imul
repnz
jmp
arpl
lds
xor
popf
shlb
xor
arpl
mov
push
in
faddl
aas
mov
iret
gs
or
push
jne
dec
mov
cmp
jp
mov
cmp
mov
mov
lea
or
out
pop
sbb
and
push
ret
insl
mulb
jle
mov
lret
jg
loopne
xchg
jb
es
icebp
xor
dec
push
inc
shlb
xchg
int
loopne
add
mov
push
in
stc
ja
les
mov
test
addr16
lret
es
lahf
add
cmpsb
mov
mov
pop
cmp
loope
pop
ljmp
fnstenv
sbb
lds
shlb
inc
or
mov
dec
mov
pop
push
leave
das
or
inc
icebp
pop
repnz
jge
inc
fwait
test
jne
es
hlt
push
fbld
push
push
jmp
fwait
inc
xorl
or
mov
sub
dec
fwait
shll
push
jecxz
xor
cmp
insb
stos
sbb
sbb
xchg
pop
or
jb
pop
and
inc
jb
in
mov
fldl
push
daa
inc
int3
in
jmp
or
lea
adc
or
int
inc
add
cmp
cwtl
cmp
and
bswap
xchg
cmpsl
xchg
dec
mov
xor
loopne
inc
xchg
in
mov
in
sub
fcom
xlat
out
mov
mov
and
sub
movsb
sbb
sbb
cmp
add
cld
je
ss
cwtl
fsubrl
mov
hlt
xchg
jbe
andb
lcall
adc
add
cld
pusha
xchg
mov
in
mov
lea
lahf
imulb
insl
lcall
cmp
pop
sbb
cmp
xor
adc
xchg
pop
push
mov
add
sub
repz
fwait
insl
sbb
or
xor
mov
and
dec
fisttps
shll
adc
pop
mov
push
js
leave
les
fwait
scas
mov
or
mov
or
shll
in
sbb
jmp
pop
fidivs
inc
dec
scas
in
ljmp
push
cmp
dec
xchg
dec
or
sarl
cvttps2pi
cmp
loop
inc
movsb
cli
inc
lret
pop
stos
shrb
gs
cs
cmp
xor
cwtl
clc
mov
mov
int
roll
testb
adc
jb
mulb
add
push
ds
cmp
inc
mov
loopne
aas
dec
repnz
je
dec
mov
nop
lock
mov
adc
jbe
xor
jns
sbb
dec
mov
mov
popa
repz
push
mov
movsb
fldl
dec
sahf
cmp
lret
cmp
pusha
lods
push
test
jne
jle
out
xchg
jbe
mov
imul
js
loop
mov
mov
push
push
jnp
rol
pop
mov
lahf
shll
lea
adc
cmp
cmp
adc
leave
out
aam
aaa
loopne
mov
jmp
and
int3
dec
xlat
sub
push
jno
arpl
jo
mov
in
xchg
mov
cwtl
sbb
movsl
mov
sti
ja
pop
or
std
mov
sub
sbb
xchg
pop
mov
ja
popf
xor
popa
pusha
push
sub
pop
sbb
dec
sbb
sub
add
shrl
add
sub
cwtl
gs
cmp
jb
jg
jne
insb
mov
out
push
fistpll
repnz
inc
gs
pop
pop
in
in
xchg
sbb
sbb
cs
jae
jge
push
push
sub
idiv
pop
out
int3
shll
ucomiss
test
sub
ds
movsb
lahf
xor
pop
mov
mov
xor
or
add
test
xor
pop
lea
sbb
push
ja
cltd
dec
or
lods
push
cltd
fisubrs
mov
test
ret
xchg
lcall
movsb
dec
adc
fstps
sbb
xor
adc
in
mov
in
xchg
inc
es
fstl
fs
pop
sahf
ret
cmp
movsl
pop
push
fsubs
cltd
aas
xor
jnp
adc
pop
scas
mov
aas
mov
arpl
xor
push
sub
shll
inc
stos
or
fistpll
fsin
inc
int3
mov
out
or
pop
lods
scas
xor
in
push
xchg
outsb
and
into
push
lock
mov
lea
jbe
adc
idivb
into
ljmp
cs
xchg
push
lds
mov
shrb
or
mov
inc
mov
inc
cmpsb
sub
jge
add
mov
push
cmp
pop
cmc
fimuls
xor
mov
sub
cmc
jb
into
pop
cmp
cmc
cmc
clc
lea
in
stos
dec
push
dec
dec
shrb
test
and
and
pop
push
aas
mov
pop
pop
sbb
sti
lret
jge
cmpsb
clc
pop
sub
dec
out
mov
xchg
mov
lods
shr
pop
pop
and
xchg
or
cmp
into
jae
js
sbb
mov
add
test
call
mov
mov
rcrl
push
je
jae
push
xchg
int3
xchg
cltd
jns
enter
pcmpgtw
iret
pop
mov
mov
mov
mov
jne
cmp
ss
cmp
push
lods
jns
outsl
adc
jecxz
dec
jo
int
pushf
mov
leave
pop
sbb
pop
push
jp
imul
sbb
jl
inc
call
in
rcrl
les
dec
sub
push
jns
pop
jp
test
inc
and
inc
lods
pop
fwait
sub
mov
jp
mov
inc
ds
sbb
hlt
xchg
mov
add
js
insb
fadd
das
rol
push
lea
jmp
jae
fstl
pop
xchg
dec
jmp
pop
dec
pop
xor
sub
lock
jge
mov
pushf
xor
ja
movsl
push
jb
jo
negb
adc
and
rcl
sub
sahf
mov
cs
mov
adc
jmp
stc
mov
icebp
jno
add
adc
test
shlb
in
mov
lods
lds
cld
push
subb
sub
std
pop
jmp
imul
jge
mov
and
push
mov
das
add
mov
cmp
out
testb
xor
pop
icebp
inc
pop
and
fdivl
or
ja
loop
xor
cld
xlat
ret
and
cmp
out
jnp
outsl
mov
jge
fsubl
xor
js
cmpsb
outsl
push
sub
push
es
data16
inc
mov
mov
or
mov
aam
jne
push
out
arpl
xor
mov
inc
push
aas
mov
jne
scas
sbb
pushl
adc
and
aad
xlat
fwait
jnp
xchg
and
std
mov
jmp
jg
out
jmp
cmp
imull
push
test
pop
mov
sbb
rorb
adc
es
lods
inc
mov
jp
jmp
inc
or
jge
addr16
loopne
sbb
cli
pop
sbb
dec
sbb
sbb
sbb
icebp
aaa
arpl
mov
sbb
pop
es
adcb
push
les
dec
xchg
add
imul
andps
adc
pushf
mov
in
popa
push
aad
test
lahf
and
nop
inc
adc
mov
pop
sub
dec
lea
sbb
cli
add
out
out
shll
mov
mov
ret
in
mov
into
sub
lods
xchg
add
mov
lock
push
cmp
jb
cs
scas
sub
test
xchg
inc
xchg
jle
sbb
xlat
lods
push
js
subb
das
adc
repz
mov
cmc
getsec
cmpb
cmp
sahf
ds
add
loope
popa
fsubrs
inc
aad
add
test
roll
mov
scas
icebp
inc
xchg
mov
mov
inc
sbb
fwait
mov
pop
lods
push
xor
loopne
mov
push
test
fidivrs
stos
dec
cs
inc
jne
loopne
sti
scas
sub
cmp
popf
xchg
rcr
pop
sbb
mov
ja
fdivrs
jg
mov
mov
div
addr16
pop
jo
adc
add
pop
insl
stc
mov
jmp
cmp
sbb
fs
sbb
divb
loopne
dec
cwtl
inc
fists
ss
jmp
std
push
mov
divb
ja
xchg
and
fwait
subl
rcll
or
jnp
imull
repz
ds
les
ljmp
or
mov
loop
mov
shlb
push
pop
ss
ret
or
pop
rolb
mov
aaa
scas
inc
in
lret
push
adc
pop
jae
inc
sub
pop
dec
mov
mov
popa
daa
repnz
sbbb
push
jmp
test
ret
lret
stc
adc
repnz
push
jp
data16
frstor
stos
nop
push
sub
sbb
les
sbb
scas
inc
movsb
sbb
push
movsl
movsb
mov
mov
jno
mov
jb
sub
fidivs
idivb
pop
movsl
div
loope
sarl
push
movsl
pop
mov
aad
iret
mov
mov
or
adc
test
das
mov
cs
into
push
int
shlb
fldl
xchg
push
add
add
jecxz
push
jno
test
mov
xor
or
imul
std
aam
das
orb
mov
mov
add
test
in
cli
mov
scas
cmp
cmpsb
pushf
mov
cmpl
push
leave
lret
mov
out
imul
into
fs
scas
cwtl
pop
jbe
lret
shrl
das
out
das
out
inc
iret
pop
pushf
in
jle
lods
mov
cs
out
mov
dec
and
mov
mov
roll
dec
xor
push
mov
push
cmp
sbb
bnd
scas
rcrb
pushf
and
popa
daa
inc
mov
ljmp
jnp
and
xor
jb
das
cwtl
negb
add
adc
nop
jp
pop
pop
jb
xchg
mov
fdiv
in
push
mov
mov
pushf
cmp
ss
inc
push
movsl
dec
lcall
test
cli
pop
fmuls
scas
bound
popf
pop
out
cmp
cmp
dec
loope
sub
push
mov
sub
cli
outsl
ja
js
jae
dec
xor
imul
out
test
lcall
sar
inc
imul
push
cli
fbld
mov
lods
sbb
addr16
shlb
mov
xor
xor
popa
mov
fwait
rcrl
mov
clc
push
shrb
loope
inc
repz
test
lret
imul
sub
jo
sub
pop
jp
push
pop
and
add
js
adc
cli
push
fldt
arpl
shrl
fs
dec
setne
and
icebp
and
jmp
xchg
mov
shll
jnp
enter
xor
dec
lret
and
or
xor
cltd
adc
sub
sti
xchg
aas
rorb
inc
mov
or
insb
loopne
pop
sub
mov
mov
or
lret
das
mov
or
int
xor
mov
fldl
lret
inc
mov
mov
cltd
xor
decl
aam
scas
aas
jmp
fdivl
push
fs
cmp
enter
sbb
pusha
or
jecxz
pop
inc
or
imul
inc
dec
sub
push
iret
outsb
movsl
lods
cwtl
mov
aas
inc
jbe
mov
lcall
xchg
dec
xchg
pop
hlt
xchg
sbb
fsubr
dec
jae
insb
leave
mov
pushf
negl
and
add
das
or
dec
bound
pusha
push
movsl
in
enter
out
cmpsl
cmp
enter
pop
es
mov
mov
jp
pushf
enter
icebp
out
or
cld
xor
aad
pop
ret
std
sbb
js
push
data16
lock
lea
jle
popa
mov
les
mov
mov
mov
jecxz
push
dec
test
aaa
jecxz
call
lds
cwtl
int
mov
pmullw
repnz
or
cmp
call
je
inc
sub
mov
mov
sub
cmp
mov
mov
roll
ret
adc
test
pop
dec
inc
popf
insl
pop
sub
arpl
mov
ror
lods
cli
test
pop
cs
jae
inc
cmpsb
xlat
push
scas
adc
push
lcall
mov
jle
jge
aaa
mov
jbe
or
pop
add
notb
sub
sti
pop
mov
push
mov
pushf
sbb
mov
mov
fimuls
mov
shlb
adc
mov
dec
pusha
mov
mov
mov
dec
jnp
loopne
icebp
pop
in
sub
lods
lock
stos
mov
sub
fs
rol
xlat
add
aas
into
xor
mov
cmpsl
dec
cmpsb
mov
push
movsl
lock
fcomi
jns
imul
xor
mov
mov
or
pop
fsubr
jle
insb
jge
and
lret
push
jp
or
mov
and
lret
je
imul
je
popa
jge
sub
hlt
jns
ret
shrb
inc
rcr
imul
pop
mov
subl
dec
cwtl
in
and
sub
sbb
cmp
mov
enter
xor
scas
setne
xor
enter
xchg
hlt
xor
stos
add
js
jmp
xor
inc
ja
subb
pop
and
sbb
addl
and
in
sub
sbb
push
push
outsb
aad
dec
loopne
and
adc
int3
or
cmc
movsb
pusha
mov
push
push
lds
fwait
outsl
dec
ds
push
mov
push
ljmp
dec
add
imul
push
imul
xor
icebp
outsb
lds
pusha
and
xchg
mov
sub
or
xor
sbbb
cmpsl
popa
mov
aam
out
mov
add
sbb
mov
sbb
mov
and
ret
cmp
sub
les
jp
dec
outsb
sub
cmc
xor
and
xchg
fsts
adc
arpl
dec
inc
dec
and
lods
and
jae
cmp
and
iret
pmulhw
cmp
sub
popf
push
cmc
cmp
pop
cwtl
jecxz
popa
mov
call
hlt
xor
jge
dec
popf
mov
mov
arpl
rorl
mov
aas
sub
lea
adc
mov
mov
leave
push
add
aaa
ljmp
mov
mov
inc
xchg
inc
cld
mov
pusha
or
mov
fmulp
repnz
int3
push
jp
mov
loop
adc
inc
movsb
sbbb
jmpw
push
pop
mov
jg
push
ret
xchg
dec
mov
mov
test
jbe
test
ss
leave
aas
test
pop
sbb
addr16
out
stos
lds
mov
mov
enter
into
push
dec
in
xchg
repz
or
mov
cmp
pop
pop
out
push
rcrl
out
fwait
stos
stos
int
xor
push
movb
sub
push
jmp
shrl
pop
data16
addr16
jne
int
mov
xchg
mov
ret
jmp
or
aam
mov
xor
mov
test
stc
push
inc
call
repnz
or
dec
add
pop
pop
arpl
dec
scas
or
lock
or
imul
jecxz
arpl
loope
js
inc
mull
sbb
daa
mov
mov
movsb
popa
rorl
sahf
mov
dec
mov
fstpl
popa
xor
not
add
jae
mov
or
in
mov
addr16
mov
jg
mov
and
outsl
mov
sbb
jb
out
push
js
jne
pop
pop
xor
push
xchg
xchg
insl
rolb
mov
cli
sub
cmpb
fsubl
mov
ret
outsl
push
cld
push
je
rorl
inc
mov
out
xchg
movsb
stos
test
rclb
lods
jmp
mov
inc
dec
out
inc
xchg
inc
pop
xor
outsl
jne
or
mov
dec
jno
sbb
ja
jl
mov
and
add
adc
outsl
pop
scas
add
sub
and
ficomps
mov
data16
arpl
ljmp
sbb
add
jl
daa
pusha
fimull
fs
imul
aas
sbb
mov
mov
sub
dec
dec
sahf
pop
mov
fmull
dec
dec
cmp
sub
test
iret
sti
xor
cmp
adc
fcompl
push
fcoms
daa
iret
dec
popa
in
sub
test
pop
and
pop
out
pop
leave
xchg
aad
adc
sbb
mov
mov
mov
xor
testb
cltd
cli
pushf
loope
lods
adc
out
call
arpl
sub
addr16
sbb
out
jmp
in
loope
fwait
cmp
jo
xor
leave
fdivrs
loop
add
es
or
fs
adc
lods
rcr
addr16
pop
pop
push
xchg
mov
aaa
inc
outsl
imul
mov
sbb
inc
fdivrl
xor
sbb
pusha
cs
push
inc
pop
xor
jl
add
data16
xchg
out
fidivrl
push
xor
xchg
and
pop
push
cmc
mov
xchg
jae
push
adc
sbbl
or
jl
and
repnz
mov
lcall
hlt
sti
leave
cmpsb
aad
nop
cld
mov
xor
push
jg
xchg
cmp
and
out
inc
inc
add
test
outsb
mov
push
jp
push
sbb
sbb
mov
mov
jmp
fs
and
test
xor
cmp
jge
insl
insl
stos
push
add
ljmp
xor
jae
mull
mov
sbb
test
jmp
ljmp
out
out
in
push
push
mov
gs
stos
mov
and
adc
lcall
sahf
das
sbb
mov
dec
inc
push
imull
mov
or
adc
push
cmp
sti
mov
enter
enter
cmp
mov
popf
aas
insb
push
xchg
xchg
sub
inc
cmpsl
stc
out
xchg
scas
add
cmpsb
arpl
sarb
dec
bound
cmpsl
mov
roll
ds
andps
into
pop
int3
push
faddp
jb
loopne
sbbl
in
sahf
mov
loop
ss
jb
ds
or
ret
loopne
arpl
mov
and
test
jns
and
je
cmp
nop/reserved
mov
pop
sbb
popf
popf
mov
push
gs
sbb
jbe
je
cs
sbb
dec
fbld
cltd
icebp
xchg
ds
jecxz
aas
push
arpl
sti
mov
fcmovnbe
into
sbb
mov
mov
fimuls
push
movsb
outsl
in
cmpsb
nop
hlt
iret
xchg
push
mov
roll
xchg
jl
pop
xlat
xor
cwtl
clc
popf
scas
mov
cli
adc
adc
call
pop
jg
addr16
jb
test
xchg
add
leave
sub
call
dec
data16
aaa
out
rcrl
dec
nop
jns
jno
adcb
lret
inc
arpl
push
mov
sub
xor
mov
push
es
sbb
in
mov
sbb
push
insb
and
jnp
adc
in
clc
incl
ficoml
inc
xor
dec
mov
sub
add
mov
cmpsb
and
into
data16
cmpsb
sbb
sub
stos
and
dec
jne
push
xchg
lods
push
xchg
sbb
and
mull
and
sub
arpl
push
arpl
ss
ret
jg
push
pop
loop
jl
sbb
pop
incl
add
int3
fisubrs
jge
outsl
jbe
push
lds
ret
push
jl
mov
add
mov
ja
cmp
fsubl
push
andb
gs
mov
inc
subb
dec
push
xor
insl
rorb
adc
jecxz
movsl
imul
scas
lods
jle
aam
in
int
clc
push
cmpl
mov
cmp
sub
jmp
pop
dec
stos
decb
and
mov
in
sbb
jb
insl
cmp
dec
add
jmp
lahf
lds
jg
lock
cmpsb
into
jnp
aaa
jmp
dec
test
lods
repnz
mov
or
mov
push
or
cltd
adc
cmp
pop
push
push
insl
es
sahf
and
test
aas
or
js
lret
leave
ret
jg
sub
pop
inc
arpl
adc
inc
movsl
fsubl
loope
int3
mov
sub
scas
insb
stc
jecxz
push
push
dec
inc
jle
pop
test
mov
mov
fsub
fistpll
jge
and
das
xchg
lds
jno
dec
movsl
lock
mov
push
stc
cmp
movsl
mov
jb
loop
rol
mov
in
mov
aad
test
lea
mov
cmpsl
orb
or
prefetch
or
mov
sub
mov
and
das
rcrb
ret
jle
jge
jecxz
add
xor
sbb
into
popf
ss
adc
movsl
push
and
adc
sbb
out
mov
fsubr
popa
jne
cltd
pushaw
lock
cmpsb
push
inc
repz
je
mov
or
adc
mull
xorb
fucomip
mov
and
out
inc
adcl
pop
pop
js
mov
push
xchg
sti
movsl
add
add
imul
jp
stos
pop
dec
cmp
dec
push
cmp
int
leave
fsubrs
insb
jne
loopne
cmp
mov
lds
pusha
adc
sub
pop
pop
aas
notb
test
inc
mov
ret
test
mov
and
jb
stc
fwait
sub
int3
sti
pop
loopne
dec
xor
push
jns
push
mov
xorb
outsb
fcoms
mov
pop
out
cmp
jbe
frstor
ret
inc
fsubrp
push
inc
out
pop
mov
push
and
cmpsb
addr16
call
movsl
lret
dec
bound
mov
mov
xor
mov
imul
test
mov
xchg
sub
sbb
cmp
adc
daa
sbb
dec
ret
mov
dec
lock
pop
scas
mov
sbb
outsl
xor
xor
das
movsb
in
bound
mov
or
int
lods
out
dec
mov
in
mov
add
outsl
adcl
push
repz
js
jno
push
int
sahf
mov
inc
in
xor
sarl
lods
inc
jl
mov
push
popa
pushf
sub
xor
rorl
cmp
test
call
cwtl
inc
push
test
aad
stos
sbb
subl
das
or
pop
mov
or
ja
mov
cmpsb
push
push
jb
cmp
cwtl
xor
sbb
dec
ja
xor
sub
adc
fisubs
je
xor
mov
fst
pop
aaa
out
and
jbe
cmp
jns
mov
xchg
xor
mov
jl
xchg
push
mov
lret
mov
pop
enter
inc
fsubrl
mov
pushf
adc
sbb
aad
test
cmp
adc
adc
pop
dec
sub
fimull
sahf
push
lods
cmp
jnp
push
pop
xlat
push
out
call
inc
push
je
or
push
inc
lock
arpl
out
dec
je
popa
cmp
jle
dec
and
push
adc
outsl
and
mov
xchg
fs
lods
pop
sub
xchg
jbe
add
sbb
stc
data16
test
out
mov
jns
add
and
mov
out
cmpsb
mov
les
insb
xchg
jno
sahf
ret
dec
or
popf
mov
mov
rclb
stos
cmp
sarl
and
cmpsb
loope
push
repnz
outsb
aam
bnd
pop
mov
mov
dec
push
fisubrl
adc
cmp
push
clc
add
lcall
sbb
aad
pop
das
xchg
or
es
mov
loop
cmc
xchg
in
jmp
sbb
mov
insl
lcall
daa
ret
dec
inc
and
mov
rcrl
dec
cld
test
leave
xchg
xor
dec
roll
lret
mov
mov
cli
ja
sub
pop
xor
sub
cltd
mov
mov
push
mov
out
in
adc
mov
shrb
mov
arpl
imul
pop
push
mov
adc
sub
xchg
mov
and
cli
ret
sbb
mov
add
lcall
lahf
adc
or
inc
adc
or
add
or
fldt
lods
mov
add
jno
test
cwtl
and
test
scas
jns
mov
shlb
xchg
mov
idivl
enter
in
pop
lea
int3
into
cmp
fcom
rep
adc
scas
sbb
add
out
mov
sbb
mov
pop
stc
or
xchg
dec
or
lahf
cmp
jbe
xchg
and
ljmp
ljmp
das
sahf
cmpl
xchg
mov
cmp
xchg
inc
dec
js
inc
and
xor
mov
mov
or
cld
sbb
inc
mov
loop
sbb
push
aaa
or
push
pop
fmul
jmp
fnstenv
mov
lds
aad
push
insb
sbb
pop
cwtl
ffreep
cmp
xchg
in
pop
das
rclb
scas
or
cmp
cmpsb
add
push
sti
aam
xchg
push
jmp
mov
fstpt
jae
adc
mov
in
sarb
push
sub
mov
mov
jbe
push
mov
test
jb
sbb
mov
shll
pusha
and
push
ret
xor
in
je
xchg
ret
call
jl
cli
fwait
ss
sub
add
xchg
push
add
enter
sbb
and
push
push
cmp
or
sbb
lock
cmpsl
pop
aad
out
xchg
and
push
movsb
sbb
push
push
lret
inc
pop
inc
testl
out
mov
in
scas
arpl
fistpll
dec
lahf
cmp
cmp
js
mov
bound
into
les
dec
sarb
fldenv
gs
pushf
stos
ret
mov
into
call
std
ljmp
pop
cmpsb
addr16
iret
fisubrs
jp
std
push
mov
mov
inc
ror
sub
or
outsb
mov
jg
cmp
sbb
dec
sbb
repz
mov
or
jno
xor
rolb
xchg
in
xchg
int3
iret
sbb
dec
fwait
mov
jmp
jae
out
push
mov
lcall
lcall
sub
into
clc
jae
pop
mov
scas
sub
mov
adc
push
lods
outsl
pop
cs
aad
pushw
test
test
in
daa
or
scas
jns
jno
das
pop
mov
mov
cmp
xlat
inc
xchg
std
adc
cmpsl
sbb
sub
jg
insb
test
addb
lds
push
mov
lods
in
push
mov
mov
mov
fs
jae
pop
in
jnp
push
shrb
and
add
add
repz
sbb
test
mov
ljmp
cltd
shll
xchg
pop
sbb
bswap
es
cs
into
inc
mov
repnz
pop
lret
fsubrl
mov
popa
mov
inc
mov
lcall
popa
test
mov
lock
push
and
loop
mov
scas
sub
fistps
outsb
pop
inc
sub
mov
jne
rcr
loop
int
or
fs
push
out
adc
cmp
stos
sub
or
xchg
mov
ljmp
out
lret
cmp
pushf
add
sbb
xor
fwait
mov
in
scas
jl
pushf
add
fimuls
mov
mov
lods
arpl
push
fistps
xlat
int3
cmpsl
xchg
or
mov
push
fisttpll
ret
xchg
in
sub
sbb
add
pop
scas
adc
xchg
push
add
cmpsl
aad
call
mov
jl
mull
lods
insb
inc
cmp
ret
sub
lea
jl
cmp
lods
ret
mov
jns
mov
out
push
jae
popa
push
sub
insl
cli
mov
js
cld
rolb
xchg
xor
rcrl
clc
fisubl
add
cmp
xchg
jp
shl
gs
sbb
push
movsb
fisubrs
sub
sub
mov
jae
and
ja
aam
shll
rcrl
push
sub
ret
jmp
inc
sub
loope
and
push
fistpl
mov
lcall
inc
jmp
loope
cmpsb
mov
mov
sub
xor
aas
jnp
jl
scas
int
and
and
ljmp
mov
lods
jmp
arpl
repz
sbb
ss
shlb
sub
das
divl
push
and
mov
fmull
call
int3
inc
inc
cmpsb
imul
mov
pop
out
imull
mov
arpl
cmp
xchg
and
arpl
add
cmp
cmp
lret
mov
icebp
xor
je
outsl
mov
shl
sarl
repnz
popa
cli
fwait
pop
into
mov
xchg
xchg
mov
push
sbb
dec
pop
pop
lret
cs
dec
jmp
dec
out
push
cmpsb
jecxz
jp
and
inc
jl
adc
je
insb
or
stos
fmull
cs
imul
mov
outsl
pop
dec
mov
add
sbb
and
mov
and
mov
sbb
xor
adc
sub
xor
mov
inc
pop
int
imul
mov
add
cmp
roll
jge
cs
xor
dec
cwtl
or
sub
inc
push
jecxz
fcomps
push
xchg
pop
ret
xor
jne
push
imul
cmp
outsl
movsb
fneni(8087
in
fdivs
xor
inc
jbe
lea
cmp
movswl
mov
or
jae
push
aad
stos
lret
test
cmp
loope
cld
pusha
dec
je
es
mov
jecxz
lcall
cmp
jb
scas
sbb
add
and
jge
xorl
out
xchg
pop
fs
vlddqu
mov
fdivs
into
dec
push
xor
lds
icebp
sub
enter
arpl
dec
jg
test
ret
sbb
sbb
dec
inc
and
inc
lods
xchg
push
hlt
pop
xchg
aam
adc
xor
xchg
test
cmp
pushf
cltd
mov
das
in
lods
mov
rcl
inc
cmp
pop
js
pop
mov
lea
sub
stos
leave
shrb
orl
fildll
and
push
jae,pt
dec
lret
inc
gs
lods
mov
jb
nop
shlb
inc
mov
push
fldcw
shr
xor
call
push
in
in
daa
decl
adc
push
rol
sbb
mov
or
add
add
mov
mov
clc
mov
lret
lahf
outsb
addr16
pusha
push
pop
stc
jno
ljmp
fisubl
mov
scas
mov
sub
hlt
pop
add
adc
mov
push
add
dec
out
ljmp
fs
sbb
lock
imul
outsl
fidivrl
mov
mov
sub
dec
das
jbe
adc
and
dec
jo
mov
lods
scas
dec
dec
or
jno
mov
ret
inc
pop
pusha
inc
adc
xchg
neg
bound
inc
xchg
enter
mov
out
sub
ja
xchg
jmp
pop
jae
insl
jecxz
imul
mov
arpl
je
adc
pcmpeqb
int
mov
push
mov
movsl
jnp
scas
pop
les
xor
jl
lods
movsb
mov
pop
loop
adc
cmpsl
les
and
jg
xchg
mov
movsl
sbb
cmpsw
sub
mov
jecxz
mov
repz
xor
pop
adc
mov
mov
push
or
pop
mov
jnp,pt
add
mov
xor
mul
pop
test
ds
fldl
hlt
mov
rol
sbb
xlat
pop
inc
rcrl
sbb
cmp
cmp
pop
xor
sbb
testb
xor
xlat
out
stos
dec
jecxz
cmp
icebp
scas
negl
pop
cmp
or
and
rorb
add
cmp
fmulp
mov
mov
cmp
xor
push
nop
jge
out
aas
mov
mov
sub
sarb
enter
data16
ficoms
xchg
mov
je
repnz
xchg
int3
lcall
sbb
cmp
jle
stos
mov
cmpsb
repnz
and
dec
test
xor
out
pop
and
xchg
push
xchg
icebp
pop
std
mov
int
shll
aaa
stos
out
hlt
cli
sbb
inc
xor
jns
out
cwtl
pop
mov
sub
jmp
cmp
stos
js
jns
aad
sub
xchg
cltd
jg
hlt
xchg
push
pop
xor
mov
pop
ret
add
sahf
fildl
lcall
push
xor
xchg
fsts
mov
into
or
mov
icebp
or
dec
cmpsl
and
into
jmp
sbb
sub
mov
cmp
push
loop
fcom
sti
pop
dec
ds
and
sub
int
jb
mov
imul
test
aam
test
lret
ds
xchg
add
push
pop
in
xchg
jae
adc
ljmp
mov
iret
push
into
das
jns
xor
and
es
dec
in
sub
inc
aad
xchg
jle
sti
js
jb
in
enter
cmp
lock
les
push
test
adc
int3
mov
xor
aad
and
and
mov
addr16
mov
dec
sarl
mov
push
jl
loop
clc
mov
jecxz
imul
fstl
or
das
mov
sub
pop
in
gs
enter
push
ds
xchg
xchg
inc
stc
mov
jb
iret
aam
jo
leave
pusha
adc
jnp
add
inc
mov
push
sub
mov
int
pop
jl
dec
add
add
lods
dec
cmp
pop
fsubrl
fcmove
popl
mov
and
je
clc
inc
imul
add
xchg
ljmp
in
mov
imul
xor
outsl
das
notb
dec
out
xor
popa
sub
loope
test
lds
ljmp
int3
xchg
dec
movsb
dec
sbb
dec
popa
xchg
adc
xlat
aam
imul
ss
rcrl
ret
xchg
ret
ja
pop
sub
clc
insl
mov
jmp
adc
scas
dec
lret
inc
mov
icebp
lds
ds
daa
stc
xorl
sub
jp
and
fnstsw
and
repz
adc
inc
add
out
dec
xor
hlt
mov
sarl
and
into
pop
add
mov
repz
in
adc
and
cmc
or
mov
mov
push
stos
lock
cmp
rep
scas
push
stc
dec
add
sub
add
js
mov
push
jge
cld
pop
xchg
jg
jmp
pop
mov
std
gs
push
outsb
push
mov
pop
xchg
add
rcrl
adc
xchg
sti
push
gs
xor
mov
mov
fidivrl
imul
scas
xor
inc
les
sub
mov
hlt
ret
xchg
push
mov
test
in
and
fistps
sub
popf
popa
or
sub
in
sahf
sbb
pop
mov
lods
pushf
sbb
jle
movsb
adcl
dec
leave
les
je
imul
insb
cmp
ret
dec
xorl
fisubrs
jno
icebp
lahf
cld
call
cmpsb
pop
in
or
popf
jle
mov
xchg
add
mov
push
push
sti
xor
dec
aam
and
jle
mov
jle
xchg
inc
sahf
cmpsl
aas
pop
mov
cmp
xor
das
cmpsl
adc
in
aam
mov
shrl
ss
push
dec
push
mov
inc
dec
dec
sbb
pushf
into
push
sub
sbbb
xchg
add
mov
add
push
jne
popa
jge
jno
cmc
pop
out
test
jns
jns
cmp
std
test
mov
sbb
hlt
jne
mov
hlt
hlt
mov
in
mov
fidivrs
inc
sbb
ja
js
aad
jl
rolb
xor
ficompl
fcoml
mov
and
sbb
arpl
fimull
xchg
fisttpll
sub
mov
test
mov
mov
mov
xor
pop
xor
imul
nop
mov
push
xor
ret
xorb
jg
adc
aaa
lahf
stos
fcomps
jmp
xchg
xor
pushf
push
dec
stos
mov
add
adc
repz
inc
sbb
cmp
dec
mov
add
xchg
mov
stc
shl
fs
mov
cmp
sub
cltd
lock
inc
cmc
rcrb
lahf
cmp
cmp
ds
popa
int
popa
dec
or
sub
idivl
fcoml
or
sbb
jl
pusha
movsb
mov
push
pop
pop
std
push
sahf
cltd
cmp
mov
cmp
jne
outsl
mov
ret
dec
pushf
or
push
imul
test
xor
das
mov
xor
fwait
cs
jae
and
mov
dec
jbe
xor
call
and
js
pushf
cmpsl
mov
fs
cmp
push
leave
push
test
jecxz
in
inc
xchg
mov
dec
lea
jl
call
inc
jnp
dec
cmp
int
xor
and
mov
clc
loopne
mov
pop
int
icebp
dec
imulb
into
mov
xor
rclb
mov
lret
cs
or
sbb
push
lods
pop
dec
dec
sbbl
xchg
out
call
and
in
jmp
mov
into
mov
data16
ja
jge
movsb
push
push
outsl
imul
add
push
iret
mov
push
movsl
add
aad
lret
std
fstpt
push
jmp
iret
scas
xchg
jecxz
dec
enter
mov
xor
cwtl
dec
neg
aas
hlt
es
adc
lock
mov
sarb
mov
cmp
daa
int
cld
sub
push
mov
ljmp
fisubl
mov
mov
mov
popf
cmp
fs
jns
push
in
scas
mov
sub
add
jnp
cli
mov
rcl
out
imul
xchg
push
xor
stc
lea
iret
ds
xchg
inc
mov
inc
daa
add
add
inc
ss
inc
fs
mov
mov
pop
and
mov
jb
ret
sub
xor
lods
sub
cmpsl
popf
push
dec
inc
xchg
pusha
out
stos
mov
inc
xlat
mov
loope
jge
lods
lock
mov
inc
mov
cmp
out
lcall
clc
sub
aaa
fcmovnu
mov
jge
cli
push
std
mov
mov
hlt
cmpsl
ret
mov
jle
mov
mov
cld
sbbl
pop
and
int
mov
nop
inc
sbb
test
cmpsb
test
adc
bound
movsl
inc
inc
leave
dec
cmp
xchg
repz
lahf
fsubrs
imul
lret
scas
xchg
leave
nop
xorl
jno
xchg
lret
pop
dec
lea
jae
inc
jno
pop
inc
sbb
out
cmp
les
push
popf
xchg
leave
push
mov
es
sub
adc
and
filds
test
adc
sti
imul
fsubrl
nop
jle
lods
dec
sbb
cwtl
movsl
clc
outsl
sbb
push
popa
out
jmp
mov
scas
push
jbe
pusha
daa
xorl
sub
and
xor
out
push
pop
int
mov
pop
js
or
xor
sbb
push
lock
test
and
mov
push
dec
add
sub
push
or
shl
and
adc
fwait
or
xchg
jecxz
movsl
int
shll
pop
jg
mov
stos
mov
push
outsb
cld
lret
push
popa
into
push
call
leave
mov
jl
call
sbb
daa
out
out
dec
shrl
xchg
insb
adc
pop
sub
out
mov
jg
lahf
out
xor
je
pop
stc
cmc
out
add
loop
lcall
dec
std
enter
push
fwait
popa
jge
push
pop
sub
cmp
xor
sub
mov
lock
pop
rcrb
mov
out
js
mov
cmp
inc
jne
loop
ja
push
mov
std
lcall
mov
cmp
popl
out
xchg
push
lahf
dec
loop
aaa
popa
pop
push
repz
xchg
pushf
xchg
push
cli
or
fld
mov
lret
hlt
jecxz
and
sub
ja
cmp
add
mov
adc
inc
push
hlt
ret
mov
push
adc
jp
aas
ljmp
and
mov
out
cmp
pop
cltd
sbb
dec
mov
pop
jg
in
lahf
xlat
push
lds
loopne
mov
das
in
cmpsb
pop
ja
mov
loopne
mov
xor
mov
fldl
cmp
shrb
int
daa
notl
mov
push
jns
or
or
int
and
enter
sub
xor
out
sbb
inc
mov
test
in
aas
mov
and
filds
jnp
adc
movsb
push
sub
mov
adc
xor
mov
imul
add
jg
sbb
cmpsb
cltd
fs
lods
push
dec
les
aad
jg
or
ds
add
fdivrl
xor
cmp
jns
lods
in
sbb
repz
xor
push
mov
add
ret
pop
fnstsw
fs
cld
call
movsl
pop
sub
or
pop
cmp
ja
sbb
cwtl
mov
pop
gs
mov
xor
add
shrl
clc
mov
in
gs
mov
loop
add
pop
inc
add
fidivrs
scas
negb
sub
cli
out
dec
adc
xor
int
movsb
sarb
mov
pop
adc
cmp
sbb
fcmovnbe
cmp
inc
inc
xor
inc
in
pop
shlb
inc
jb
and
jle
push
mov
data16
mov
test
sbb
ficoms
stos
jne
adc
pop
add
lret
jae
cmp
pop
repz
rcpps
aam
push
lret
push
lcall
iret
mov
imul
movsl
ror
ret
dec
enter
xchg
push
in
cmp
and
dec
push
movsl
bswap
daa
mov
sbb
jb
js
mov
or
insl
popa
out
push
jg
cmp
mov
jg
cmp
xchg
lret
add
int3
out
call
leave
dec
mov
push
in
sub
lahf
pop
pop
jo
or
push
mov
jge
and
push
xchg
rcrb
and
jge
jecxz
in
lea
mov
xor
xchg
mov
inc
cmc
lcall
pop
dec
push
adc
outsb
jmp
sub
or
in
sbb
ja
test
add
add
push
ret
imul
pop
negl
mov
adcb
jg
jbe
loop
inc
mov
bnd
cmp
lods
adc
jle
popf
mov
int
and
outsl
mov
fincstp
mov
sub
imul
popfw
mov
mov
mov
aas
sbb
sbb
pop
pop
mov
dec
call
sub
push
int3
jnp
lret
add
inc
leavew
mov
mov
xchg
cld
shll
out
sub
jns
sbb
cmp
mov
addr16
adc
out
das
cs
cmpb
addr16
repnz
repnz
jge
lds
jbe
sub
insl
adc
sbb
or
lahf
lcall
mov
and
scas
mov
int
test
outsl
hlt
sbb
inc
int3
mov
sbb
mov
jb
and
jl
mov
test
jge
test
insb
shll
dec
cmpsb
dec
xchg
mov
lods
inc
daa
push
mov
pop
insb
ljmp
sub
mov
int3
push
stos
push
aam
xchg
xchg
xchg
movsl
das
jb
pop
lock
xor
inc
shr
push
int
js
pop
push
adc
mov
mov
movq
cmp
lahf
outsb
cmp
jmp
xchg
lret
sub
repz
call
icebp
push
int
push
cmp
jmp
push
mov
jmp
fbld
mov
mov
push
xchg
mov
mov
insb
stos
mov
sbb
insb
call
push
mov
xchg
sti
sub
cmc
and
aad
aad
in
mov
scas
jg
js
arpl
cmp
add
pop
push
inc
stc
ja
in
std
dec
ja
sub
pushf
jl
jmp
out
data16
gs
ss
inc
jns
cs
lret
cmp
sbbl
sub
and
push
sbb
cmpsl
mov
pop
je
mov
iret
push
cli
fmull
data16
sbb
arpl
ret
aad
cs
insl
push
sahf
jecxz
push
jnp
pop
pop
mov
clc
setns
xor
pushf
cs
cmp
repnz
pop
inc
pusha
jg
lds
lds
arpl
cmp
mov
popf
xor
adc
adc
pop
jg
xchg
mov
test
pop
mov
jmp
ja
dec
out
mov
mov
inc
pushf
divl
repz
pop
gs
popa
inc
jbe
aad
mov
sti
pop
or
dec
fs
stc
aam
xor
iret
sub
rcr
xchg
jne
flds
pop
lods
je
jae
fisttpll
mov
xchg
xchg
mov
pop
ss
hlt
sti
adc
mov
push
mov
dec
cmp
aaa
ja
cmp
jnp
cmc
adc
xchg
xchg
pop
daa
adc
jo
xor
jae
mov
out
cltd
call
add
adc
adc
fisubrs
cmp
outsl
add
pop
in
outsb
or
xchg
sarl
mov
lcallw
lock
dec
mov
mov
add
xchg
test
dec
mov
stc
imul
test
js
or
mov
hlt
out
mov
mov
or
jae
cmp
inc
push
fildll
sbb
stos
orb
cmpsb
aam
fiaddl
or
inc
xor
hlt
xchg
loopne
and
sarb
aad
adc
push
sbb
xchg
mov
push
and
cli
loope
jg
mov
mov
jecxz
lods
andl
mov
lds
lea
mov
les
gs
scas
sub
push
jp
dec
xchg
loop
fwait
inc
popf
sub
aad
arpl
inc
add
insl
jge
sbb
mov
push
cmp
cltd
pop
or
hlt
cmpsl
in
clc
cmc
pop
xor
pusha
mov
leave
push
fistpll
jge,pt
adc
and
lods
mov
mov
xchg
jl
xlat
fildll
dec
insb
push
stos
push
orb
lahf
mov
mov
movsb
mov
fsubl
je
sub
mov
xchg
imul
pop
inc
fildll
mov
lcall
dec
subb
and
bts
dec
jo
xor
aaa
dec
imul
dec
lret
jge
insl
or
ficomps
xor
sbb
push
dec
in
insb
into
xlat
push
in
lods
inc
pop
dec
cld
mov
xchg
gs
inc
popl
mov
dec
push
jge
dec
imul
xor
pmaxub
jl
fwait
and
rcl
mulb
jmp
in
sbb
stos
xor
in
mov
cmp
scas
mov
inc
mov
push
test
out
mov
inc
dec
cmpsl
sbb
inc
aas
insl
inc
pop
add
push
push
mov
xchg
into
push
cmp
das
enter
cmp
je
stos
bound
stos
call
add
mov
or
pushf
cld
xor
xor
xor
sti
int
sub
fwait
jb
dec
ja
cld
mov
jg
push
jp
add
pop
lea
ljmp
out
jnp
mov
jmp
ds
jg
xor
jbe
unpckhps
pop
xchg
sub
shll
cs
mov
mov
addr16
jge
adc
es
mov
sub
scas
mov
andnps
movsl
adc
cwtl
pop
js
test
adc
in
aas
in
push
push
andb
mov
fldcw
pop
leave
push
daa
mov
mov
sbb
call
roll
pop
pop
mov
sbbb
lcall
jo
sbb
mov
test
dec
mov
mov
xchg
dec
dec
ja
jmp
sub
ds
fistpl
mov
aaa
sbb
stos
pop
sbb
xchg
add
loope
inc
push
cmpsl
mov
sti
add
fs
xlat
pop
xchg
ljmp
in
shlb
push
std
push
adc
mov
pop
push
int
add
cmpsl
pop
imul
pop
test
mov
adc
mov
mov
xor
mov
int
gs
dec
dec
cmp
jnp
mov
ficoml
jns
add
xor
insb
mov
jecxz
icebp
sbb
xor
movsl
sahf
push
or
arpl
in
inc
outsb
add
mov
psubw
jb
js
fisttpl
out
add
in
lds
cltd
cwtl
pop
adc
xor
mov
mov
cmp
je
icebp
mov
test
inc
std
jmp
sub
insb
imul
add
imull
fidivs
sbb
dec
insb
rcrl
call
sub
movsl
hlt
loope
push
movsb
add
or
add
iret
int
icebp
pushf
pop
fst
test
mov
dec
aam
arpl
pop
mov
popf
rorb
jmp
frstor
adc
push
mov
xor
xchg
jecxz
js
add
cmp
adcl
or
leave
out
and
rcr
push
les
and
xchg
adc
push
fistps
enter
fxam
lock
daa
pop
lea
push
sub
sbb
push
test
cmp
jns
cltd
imul
sub
dec
lea
jmp
movsl
adc
cld
popf
out
popf
pop
stos
or
rcr
inc
mov
aaa
push
and
lret
cltd
sbb
add
pop
aad
bound
lret
pop
inc
jge
ret
adc
mov
fmull
arpl
jle
in
loopne
clc
cmpsb
aaa
mov
sbb
out
rolb
das
aam
mov
xor
lret
enter
adc
mov
xor
sub
inc
xchg
sub
xor
sub
xchg
comiss
in
fisubrl
sahf
out
or
mov
mov
xchg
mov
mov
add
inc
pushl
pop
jge
dec
sub
xorb
jp
cmp
arpl
adc
mov
and
cmpsl
sbb
push
mov
mov
in
cmp
and
adc
into
mov
xor
adc
nop
push
mov
cld
xchg
shlb
mov
dec
enter
sbb
roll
mov
sub
and
mov
xor
add
or
sbb
push
test
inc
int
int3
adc
xchg
dec
cs
cmp
mov
test
push
fstps
jae
bound
cmp
pop
push
inc
js
cltd
aad
dec
test
push
adc
les
pop
aam
push
jp
mov
dec
in
mov
push
movsbl
data16
push
ja
and
loop
jno
out
mov
jns
inc
nop
jmp
sbb
jl
sahf
xor
mov
addr16
roll
pop
or
adc
les
xchg
jne
jno
nop
sbbb
or
mov
fmul
hlt
mov
sbb
mov
xchg
jne
repnz
hlt
xor
inc
jp
push
lock
in
fiaddl
into
mov
insb
lods
mov
mov
cld
cmp
pop
adc
cs
push
mov
push
mov
jecxz
jae
adc
leave
xor
ficomps
jmp
sbb
in
push
in
sub
xchg
adc
int
lahf
xchg
inc
gs
xchg
in
fwait
and
and
pop
cmpb
fcmovne
push
adc
and
dec
subl
rclb
pop
rorb
xchg
enter
xchg
sarl
fisttps
xor
push
rcr
cmp
push
pop
fistpll
jo
addr16
inc
mov
cmp
pop
cmp
repz
dec
pop
lock
cmp
inc
xorb
dec
scas
lock
push
lahf
sub
dec
popf
push
pop
add
and
jnp
mov
pop
jle
adcb
inc
js
adc
mov
and
pop
clc
xchg
fsub
cmp
in
enter
out
loope
xlat
rcrb
fldt
hlt
cld
je
xchg
cli
xor
loope
sub
inc
data16
fists
sbb
inc
scas
in
jecxz
lea
aas
jp
mov
or
cmp
ds
mov
ljmp
cmp
jmp
mov
xor
cwtl
fisubrs
jno,pt
shlb
sar
lods
shrl
out
loopne
dec
mov
loopne
mov
stos
out
dec
pop
fs
adc
pop
pusha
and
in
inc
mov
ds
or
imul
xchg
jp
add
mov
xor
push
test
cmc
jmp
xchg
inc
lock
fcoms
pop
mov
sub
cmp
sbb
push
nop
cmpsb
pop
div
fsubrs
jp
inc
mov
leave
mov
inc
mov
stc
insb
xor
push
in
lret
pop
pop
in
in
or
cmp
out
addr16
mov
fnstenv
push
dec
mov
imul
push
ficoml
lods
ret
jne
mov
pop
cmp
lea
test
xor
xchg
xchg
call
popa
push
jecxz
jg
xor
push
sub
adc
jg
jne
cmp
clc
jl
push
jl
faddl
push
mov
push
lods
mov
and
divl
dec
sub
add
out
sub
xor
aaa
push
jmp
dec
test
movsb
sbb
jnp
ss
in
sub
imul
jnp
push
and
adc
mov
jne
xor
inc
out
loopne
dec
dec
fnstcw
leave
leave
aad
iret
mov
std
add
xchg
push
leave
cmp
pop
jns
pop
je
mov
es
repnz
push
fsts
test
enter
sbb
hlt
cmp
mov
fdivrl
repnz
inc
xor
mov
sbb
inc
loope
dec
arpl
sbb
xchg
pop
lahf
mov
stos
fimuls
xor
mov
cs
and
mov
and
cmp
pop
psrlq
stos
lods
lret
push
pop
and
mov
sbb
scas
sub
xor
dec
mov
loopne
addb
pop
jg
rol
push
std
ljmp
push
lods
gs
test
mov
and
sub
fcomip
das
and
and
cmp
jae
mov
cmpsb
stos
mov
or
sub
out
add
jle
mov
cmp
xchg
push
or
xchg
inc
push
fildl
jl
jbe
add
fsubl
pop
das
sub
mov
jbe
loopne
in
ds
testb
fldenv
or
cmp
xchg
pop
mov
mov
aad
pushf
push
jg
inc
inc
fbstp
enter
mov
and
xchg
scas
out
gs
sub
idivl
dec
add
push
ja
loope
mov
pop
enter
popa
cwtl
insb
add
mov
leave
leave
call
scas
jae
mov
outsl
adc
add
cmp
mov
push
addl
ljmp
cmp
loop
pop
jns
test
dec
push
imul
test
xchg
mov
dec
test
loop
and
pop
aad
push
dec
xchg
out
push
popf
subb
icebp
testb
mov
scas
dec
jb
mov
mov
out
jg
push
fistps
mov
loope
ret
jl
mov
addr16
and
scas
xor
lods
shlb
sub
xchg
mov
ds
inc
sub
mov
gs
mov
mov
stc
out
dec
add
jge
adc
dec
pushf
out
mov
jno
sub
fdivrl
stc
out
nop
xchg
add
fwait
lret
enter
inc
inc
fidivrs
clc
xchg
jo
add
lret
pop
sbb
mov
jle
roll
in
cmpsb
add
out
mov
pop
outsb
lea
pop
sub
or
gs
shll
xchg
lds
cmp
ss
pop
xor
mov
cld
rcr
adc
rcrb
in
fcompl
lcall
in
js
sub
in
sbb
fwait
xor
inc
test
or
stos
mov
push
pop
pop
xor
xor
and
shrb
push
mov
and
nop
or
adcl
fdecstp
out
cmp
scas
or
cmp
inc
popf
pushf
sahf
sub
adc
loop
into
add
add
push
xchg
adc
mov
fnsave
push
pop
xchg
pop
sbb
pop
xchg
mov
outsb
and
xor
gs
testl
sbb
adcl
pop
mov
arpl
or
imul
fiadds
mov
iret
mov
ret
xor
cwtl
movsl
mov
iret
and
fisubs
subl
push
rclb
xor
cmpsl
outsl
loope
fcmovb
mov
mov
outsl
ja
xchg
cmp
ret
filds
ljmp
jecxz
dec
movsl
movb
inc
lods
jle
mov
and
add
and
jle
cwtl
fsts
sahf
push
test
and
and
out
loope
es
je
inc
out
mov
add
mov
sar
pop
jle
popf
mov
sub
enter
ret
xchg
add
dec
sbb
adc
cli
rcll
xor
adc
out
cmp
jbe
dec
and
mov
movl
testl
ljmp
jge
mov
mov
adc
lods
hlt
int3
mov
push
cmp
outsl
xchg
push
inc
mov
sbb
push
xchg
dec
xchg
mov
pop
cmp
cmpsl
push
sbb
das
jno
or
mov
sub
sbb
sub
cmpsb
xchg
dec
cmp
push
jne
scas
das
mov
lock
mov
and
insb
and
mov
xchg
sar
dec
and
clc
jns
in
dec
and
adc
inc
test
and
in
xor
sub
pop
xor
ret
jbe
hlt
test
jnp
push
mov
pop
loope
jg
xor
notb
dec
gs
aas
pop
in
addl
rcll
mov
addr16
imul
loopne
lock
dec
jge
stc
or
or
jle
sbb
std
sub
shll
mov
mov
adc
out
cmp
mov
imul
fsubs
inc
xor
mov
sub
pop
adc
cmp
mov
imul
stc
jg
out
fstps
iret
cs
jmp
fdivrp
pop
push
and
test
les
mov
lret
sbb
push
clc
lahf
and
inc
bound
out
fwait
leave
gs
and
cmp
mov
lods
and
adc
hlt
dec
daa
cld
mov
movsb
cmp
inc
lahf
imul
cmpsb
sub
iret
les
mov
mov
push
cmp
repnz
push
cmp
movsl
loopne
xchg
mov
sti
in
into
int
daa
negl
sub
daa
mov
into
enter
xor
adc
mov
mov
loopne
and
stos
push
push
imull
mov
pop
mov
dec
popa
js
scas
inc
mov
xchg
stos
cwtl
call
dec
call
outsl
xchg
inc
adc
add
divb
adc
clc
lret
sbb
xchg
jb,pt
lea
jge
pop
daa
pop
adc
shr
mov
out
xor
or
add
lds
xchg
lahf
add
mov
and
inc
js
cmp
push
or
inc
mov
lods
cmp
mov
jmp
jg
mov
sub
or
inc
xor
lahf
or
outsb
mov
lret
xchg
insb
pop
test
lahf
mov
fbld
leave
in
lock
repnz
pop
sub
in
popf
shll
push
cld
in
popa
test
push
enter
addl
stc
xchg
jnp
outsb
pop
repz
push
or
mov
lock
pushf
sbbb
adc
jecxz
mov
and
add
dec
lret
pop
orl
adc
hlt
mov
adc
jp
push
xchg
xlat
sub
insl
jns
xor
lcall
ja
add
cmpsb
fadds
outsb
push
out
aam
mov
das
lcall
mov
mov
adc
push
jle
cltd
jg
mov
repz
xor
std
in
shrb
mov
cwtl
and
xchg
imul
xlat
imul
es
push
sub
mov
mov
repnz
imul
imul
insb
mov
dec
mov
arpl
aad
pop
decl
xchg
mov
add
jnp,pn
lock
push
sub
sarb
or
dec
sub
jge
scas
in
xor
mov
xor
sub
test
shll
jno
cmp
test
inc
scas
ret
jae
jae
add
stc
test
jne
xor
xchg
ss
jmp
faddp
je
push
jge
stc
sti
pop
shlb
pop
sub
xchg
xor
movsl
mov
inc
imul
bnd
int
lods
dec
and
lret
lret
and
jno
sbb
sub
add
pop
iret
cmp
pop
fsts
inc
ja
adc
ja
or
cli
mov
cld
imul
cmpsb
lea
push
pop
lret
out
cmp
inc
jne
pop
mov
jb
jae
sti
jp
cmp
push
xor
or
push
jmp
data16
or
xchg
das
sub
rcrb
test
faddl
dec
mov
icebp
dec
push
dec
js
inc
adc
fnstsw
jns
lds
dec
imul
or
insb
push
mov
loop
orl
add
lahf
pop
adc
push
in
mov
xchg
pop
faddl
jle
cmpsl
ja
mov
adc
fdivr
mov
imul
fnsave
rorb
cli
loope
std
xchg
aaa
or
jae
iret
pop
xchg
dec
xor
fidivrs
aas
cmp
inc
add
push
and
sbb
hlt
pop
jnp
lods
aad
leave
dec
sbb
loopne
pop
stc
fucompp
dec
mov
fistl
test
aam
lds
rcl
mov
arpl
sarl
jne
xor
sub
sub
movsb
enter
lea
adc
mov
ret
xchg
push
cmpb
jle
fstpl
add
shl
sti
push
cmp
or
sbb
rcr
inc
and
inc
out
xor
sbbl
mov
popa
push
jns
shl
jle
sub
sub
pop
push
out
in
push
mov
jne
pop
jmp
andb
jp
clc
out
ljmp
test
cwtl
data16
lods
push
out
cwtl
jle
mov
insl
gs
adc
enter
fcompl
pusha
mov
in
cmc
fdivr
sbb
mov
in
mov
pop
scas
xchg
jl
jge
ret
lea
movsl
mov
cmp
loop
xor
xchg
not
fimuls
sbb
xchg
dec
jne
lods
xchg
inc
sbb
pop
jnp
push
outsl
loope
jne
mov
push
test
push
in
push
mov
push
in
in
repz
pop
out
sbb
push
sub
add
shrb
lds
ret
mov
dec
movsl
mov
movsb
adc
lods
sbb
jg
addb
test
jno
ret
xor
push
xchg
xor
insb
xchg
pop
cli
inc
xorb
push
addb
mov
inc
pop
xchg
mov
in
mov
push
sbb
js
xchg
mov
repz
push
out
leave
repz
and
bound
add
cmpl
cld
push
fdivp
ret
jnp
add
mov
adc
pop
or
je
aaa
stos
pop
dec
or
fldl
mov
jnp
imulb
inc
hlt
scas
je
pop
es
cmp
inc
and
mov
mov
subl
mov
pop
xchg
nop
pop
push
iret
xor
enter
add
sbb
cltd
icebp
sub
jbe
fs
or
adc
dec
dec
into
cmp
je
pusha
jle
and
gs
imul
dec
ret
add
sbb
pop
aaa
ljmp
scas
lds
push
mov
jle
test
sbb
sub
mov
add
test
or
repz
lahf
lahf
jo
pop
mov
mov
xchg
jp
into
lds
in
cmp
jne
xchg
lahf
fs
loop
sbb
rol
dec
xchg
or
cbtw
jmp
aas
fsts
inc
push
loop
push
jle
xor
cmp
insl
mov
mov
out
jae
sub
aaa
out
mov
push
xchg
insl
cmpb
xchg
mov
cwtl
mov
mov
out
cli
mov
popf
ljmp
add
jp
pop
mov
xchg
js
in
loop
jl
mov
lds
cmc
pop
pushf
pop
test
cmpsl
loop
sub
xor
notb
xor
push
fdivrl
lock
mov
jne
loopne
fcoms
mov
negb
cmp
enter
or
jge
dec
sbb
and
fistpll
repz
sub
in
add
xchg
punpcklwd
popf
or
sbb
sarb
mov
ds
jns
lret
sbbb
xor
jl
jp
jae
sti
push
das
shll
out
jae
fdiv
or
cmp
frstor
inc
pushf
fldl
pop
sti
xorl
jbe
xchg
repz
push
imull
sbb
test
imul
add
aad
test
mov
fsubrs
pushf
dec
sahf
int
test
out
jno
sub
pop
dec
lret
push
mov
or
out
int
loop
and
sti
repz
mov
mov
popf
int
loope
mov
scas
movsb
popa
mov
mov
cwtl
cmp
inc
pop
nop
fidivrs
jmp
dec
rclb
fiadds
divps
jns
fistpl
inc
mov
ds
shrl
mov
imul
cmpsb
clc
aaa
jge
sub
mov
xor
sub
or
cmp
bound
add
mov
mull
test
lret
xchg
cwtl
inc
fidivl
lea
push
mov
or
addr16
push
stos
inc
xchg
sub
dec
bound
or
ds
add
mov
stos
jnp
adc
int
xchg
mov
cld
cmpsb
sbb
loope
pop
roll
push
repz
lahf
leave
arpl
sbb
outsl
mov
sub
cmovo
mov
jns
adc
ja
fs
mov
inc
jmp
and
pop
mov
push
mov
jmp
jmp
scas
aaa
mov
push
movsb
xor
movb
jmp
scas
mov
popa
movq
repz
xor
inc
fimull
out
cmp
incl
stos
pop
add
fs
repnz
js
cmp
add
or
mov
sahf
movsl
jmp
leave
clc
dec
and
mov
inc
xchg
cltd
push
pop
pop
jne
loopne
mov
in
sub
cmp
cmpsb
mov
xor
fs
mov
xor
mov
mov
aas
lods
cmp
cld
cld
mov
rolb
cmp
or
aad
sbb
fwait
stos
insl
xchg
mov
movsl
mov
jl
movsb
or
push
cs
mov
pop
scas
mov
test
push
mov
and
mov
test
inc
sbb
cs
jo
mov
rol
aaa
test
sbb
out
jb
mov
jg
lahf
mov
arpl
in
addr16
scas
or
cli
inc
ret
cmp
xor
cmpsb
clc
and
in
enter
imul
loop
adc
sub
pop
je,pn
xchg
mulb
ljmp
mov
and
aam
inc
push
jecxz
scas
inc
arpl
push
adc
dec
and
repnz
mov
test
xchg
out
push
inc
pusha
loopne
shl
mov
push
fwait
jg
mov
fucom
and
push
sbb
push
mov
mov
test
mov
shll
adc
hlt
lods
sub
arpl
aam
test
enter
mov
lcall
inc
jnp
mov
inc
rcrb
or
push
add
pop
outsl
sub
popa
xchg
dec
stc
loop
ss
cmc
ja
loopne
xor
mov
inc
fucomp
icebp
dec
or
js
movsl
xor
push
adc
jne
jne
scas
cmc
inc
mov
vmovaps
jp
ficoml
in
mov
sbb
pusha
lock
repz
adc
fists
repnz
xor
sbb
in
in
in
jo
pop
mov
xchg
pop
mov
sub
fnsave
lcall
loopne
insl
imul
stos
mov
outsl
fildll
and
push
mov
jb
adc
xor
inc
pusha
pop
mov
or
pop
std
mov
push
ud0
push
pop
ljmp
xchg
inc
shrl
fnstenv
mov
pop
mov
ja
je
xchg
sbb
mov
jo
test
mov
dec
add
mov
jmp
or
sub
adc
or
int
cmpsl
int3
imul
push
push
shll
out
lret
and
push
adc
mov
pop
xor
push
fldenv
jnp
jne
xchg
cmpsl
xor
sub
std
test
xchg
in
dec
not
shlb
leave
push
cli
imul
push
mov
rcr
out
add
fsubs
rorb
push
loop
or
add
insl
mov
jle
jmp
mov
mov
jnp
fs
inc
push
cmp
xchg
mov
or
pop
addr16
in
das
int
daa
cmpsl
mov
out
jno
test
dec
loopne
dec
xchg
sbb
shlb
into
jns
jp
cli
into
dec
mov
gs
in
pop
dec
int3
imul
mov
cli
cmpsb
je
inc
call
and
flds
loopne
mov
jge
xchg
xor
fyl2xp1
push
xchg
pop
nop
push
lahf
jl
addr16
pop
jl
cwtl
adc
xchg
loopne
clc
jno
or
pushf
and
inc
xchg
ret
in
mov
push
iret
jns
out
mov
popa
add
js
sti
xor
sahf
or
ficoml
cmp
sar
iret
jg
dec
pushf
jbe
into
lds
ja
insl
ds
out
imul
cmp
jae
mov
arpl
out
stos
js
scas
and
loope
jno
pop
push
or
mov
outsb
sbb
icebp
jnp
mov
push
leave
ror
mov
lret
push
movsl
xor
aas
sarl
pop
ror
repz
inc
push
sbb
sahf
push
pop
or
jo
cmp
imul
daa
mov
adc
jecxz
cmp
cmp
mov
mov
sbb
sbb
lcall
fwait
pop
fsts
fcoml
mov
adc
xchg
mov
and
jecxz
rclb
testb
adc
lahf
out
sub
test
shl
aam
ljmp
inc
les
scas
std
daa
jo
mov
cld
jbe
mov
call
je
je
lods
push
std
mov
dec
arpl
nop
scas
andl
sahf
shr
rep
insb
ss
sub
xchg
sub
lea
out
sbb
inc
jo
mov
insb
pop
mov
or
xchg
mov
adc
lcall
imul
jl
test
xchg
dec
dec
outsl
jne
addr16
jae
xor
ret
lret
mov
fstps
mov
add
insl
dec
pop
stc
pusha
ds
aaa
sbb
mov
mov
sarl
sub
xchg
mov
pop
pop
jne
movsb
jo
stos
mov
mov
test
repnz
fnstcw
and
pop
ds
or
ds
adc
add
mov
xchg
addb
cmp
icebp
lock
cmp
or
dec
pop
mov
push
popf
lea
mov
fnsave
mov
sti
inc
and
insl
inc
shrl
lea
jl
insl
sub
pop
pop
hlt
ret
int
sti
fs
addb
mov
in
push
xchg
xchg
cmp
sub
dec
and
pop
lock
mov
push
in
cmp
ficomps
les
xchg
jnp
add
incl
xorb
ret
aas
testb
jbe
jmp
jnp
mov
repnz
sub
sbb
in
test
adc
pop
pop
push
das
aam
cmc
nop
jp
fbld
pusha
xlat
lea
cltd
lds
xchg
insl
popa
nop
or
cmpsb
lods
shlb
and
dec
add
inc
jbe
mov
adc
bound
or
dec
xor
mov
mov
jge
push
add
ret
mov
vpslld
xchg
dec
lret
push
imul
push
xchg
lds
andps
shr
xor
sbb
pop
push
lods
mov
shlb
xor
shrb
xchg
iret
repnz
push
mov
data16
sbb
leave
mov
pop
loop
cmp
inc
ds
mov
lods
sbb
aam
jae
cmc
bswap
dec
sbbb
stos
cmp
mov
xlat
lock
adc
push
std
enter
ret
xchg
in
add
cld
adc
ror
jb
mov
aas
leave
add
jp
loop
stc
rol
xchg
xchg
push
mov
test
loopne
mov
push
fisttps
inc
dec
or
xchg
fldenv
fs
jo
imul
mov
in
push
sub
mov
js
sub
jae
scas
out
mov
lods
xor
xor
in
jno
imul
inc
or
notb
adc
dec
cs
sbb
or
mov
inc
xlat
mov
jne
lret
pop
xor
hlt
mov
movsb
out
test
sub
cmp
cltd
leave
push
and
push
sahf
xchg
push
divb
push
or
dec
mov
jmp
cmp
es
insb
mov
mov
jb
adc
out
mov
sbbb
sahf
sbb
cld
icebp
leave
push
in
mov
std
mov
and
xchg
mov
push
push
sub
mov
adc
dec
mov
mov
mov
mov
nop
fcmovnu
push
es
stc
out
div
or
loop
xor
jg
lock
pop
dec
pop
sub
sub
xor
mov
repnz
in
and
out
sahf
mov
aaa
stos
insb
loop
adc
subl
adc
cmp
pusha
inc
cmpb
lods
jp,pn
fldl
push
adcl
pop
test
mov
mov
mov
push
pop
arpl
test
mov
enter
adc
and
mov
lahf
cld
das
pop
xor
jae
stc
pop
sbb
lock
jge
sub
stos
xor
scas
xor
fisttps
lahf
in
xchg
ret
and
jge
ds
push
mov
mov
in
outsl
add
add
dec
mov
daa
popf
dec
lahf
cld
xchg
and
lret
adc
loope
in
cs
mov
mov
fs
ljmp
sbb
insb
test
pop
test
in
arpl
movsl
cmp
js
dec
hlt
inc
mov
lds
push
jmp
push
add
pop
cmp
cmp
add
mov
and
clc
mov
dec
repz
xor
or
iret
inc
aad
imul
jge
inc
shrb
sbb
lods
pusha
fdivs
int3
mov
jb
cmp
je
outsb
jnp
inc
sbbb
aam
xor
and
sbb
and
push
cmpsl
cli
inc
divb
pushf
and
test
data16
test
clc
cmp
cmp
inc
jae
push
cmc
lods
mov
pop
xchg
fisttps
push
pop
inc
lock
jns
push
stc
sub
sbb
push
mov
mov
pop
inc
int3
mov
mov
mov
adc
adc
pop
mov
xchg
mov
push
ret
je
jle
mov
orl
add
sub
mov
or
jo
ret
call
movsl
cmpl
push
popf
inc
in
push
or
je
mov
sbb
mov
fcompl
and
aaa
test
js
jmp
scas
push
add
mov
mov
jmp
push
mov
ss
out
sub
out
cs
inc
xlat
mov
and
cmp
outsl
dec
leave
pop
sbb
and
jb
rorb
mov
std
js
inc
sbb
fildl
lcall
shrb
adc
inc
mov
mov
nop
mov
add
push
lret
cmp
lcall
daa
jae
cmpsb
pop
cltd
int3
xchg
sbb
divl
jns
dec
mov
insl
dec
and
mov
jnp
inc
popf
hlt
insb
xchg
fildll
movsb
push
xor
push
or
mov
shrb
movsb
loope
xor
addr16
inc
dec
sub
aas
sub
mov
push
xchg
aam
push
lds
xlat
or
clc
cwtl
pop
or
fidivs
int
push
mov
shll
and
ds
dec
dec
test
push
sub
mov
jp
xor
fists
inc
mov
out
lods
loope
cli
bound
jmp
pusha
pop
into
dec
xchg
jae
push
test
or
cmc
movsb
rol
mov
mov
mov
sbb
xchg
xor
xlat
xor
pop
cmpsb
adc
pop
hlt
jle
push
fadds
jbe
add
aas
and
jmp
ret
ljmp
cmc
sbb
and
cmp
and
mov
outsb
ss
push
mov
sbbl
push
lods
aas
jbe
lods
mov
dec
mov
andb
lahf
xchg
fcoms
jmp
lret
outsl
mull
aaa
pop
sbb
sub
mov
imul
add
xor
inc
xor
in
stos
push
pop
pop
shrl
push
push
push
dec
sub
sbb
dec
jmp
pop
loopne
out
lea
outsl
or
sbb
outsb
jnp
mov
adc
daa
pop
pop
or
cmc
pop
cmpsb
mov
adc
push
pop
cs
inc
and
cmpsl
or
sbb
adc
or
jg
pop
jge
stos
xlat
inc
jmp
sbb
mov
mov
mov
insl
std
cmp
sbb
mov
xor
xchg
push
push
test
dec
loop
mov
ljmp
xor
xor
ficomps
or
iret
pop
test
fucomp
in
push
mov
arpl
popa
sbb
mov
xor
test
aam
jp
mov
loopne
leave
dec
inc
inc
adc
loop
mov
mov
sub
int3
push
daa
dec
in
insb
ror
sbb
xchg
cmp
lea
scas
push
jle
adc
pusha
dec
cmc
fst
xchg
sub
popf
cmp
pop
adc
adc
push
fnstsw
jp
cli
dec
scas
dec
mov
cmp
in
pop
xor
insl
cmp
fs
in
loope
jle
aad
inc
lods
lcall
popa
add
cmp
or
push
je
fwait
clc
lahf
and
aam
je
into
shrl
dec
push
and
pusha
push
add
mov
pop
bound
sbb
lcall
filds
mov
outsl
sarl
in
cld
add
stos
jle
mov
push
or
adc
ss
movsb
dec
sbbl
movsb
xor
adcb
addl
sti
imul
es
mov
test
inc
push
or
lret
fs
aad
out
jae
cmpsl
push
and
sbb
jb
xchg
mov
pushf
out
sbb
sti
push
addl
je
mov
mov
in
mov
stc
in
aaa
push
inc
lock
xorb
pusha
push
and
mov
out
mov
add
inc
jns
cmp
js
not
in
cmp
mov
insl
xor
inc
ss
mov
xlat
imul
scas
lock
and
sbb
jmp
ficompl
and
fnstsw
or
or
ljmp
xchg
stos
loope
fst
add
or
stos
pcmpeqb
jo
clc
pop
loopne
sbb
adc
insb
jb
repnz
mov
fiadds
or
or
mov
rclb
push
out
pop
jg
inc
repnz
out
pop
sub
repz
pop
inc
dec
lods
stos
xchg
shl
xchg
cmc
add
sub
xchg
jl
jmp
sub
std
test
icebp
inc
loopne
scas
notl
rcr
pop
daa
adc
pop
sub
int3
mov
lds
rcll
mov
popf
adc
les
jle
inc
or
popa
sub
sbb
leave
jo
aaa
add
pop
xchg
fwait
sti
pop
sbb
add
xor
lods
int3
xchg
add
stc
idivl
jp
ss
push
dec
movsl
lock
lcall
xor
pop
dec
push
clc
pop
xchg
int
dec
cs
iret
fs
sti
add
or
jmp
in
push
jge
inc
mov
lods
negl
add
mov
sub
inc
mov
outsb
lds
outsb
repnz
mov
mov
dec
sub
adc
in
fiaddl
mov
mov
mov
sub
push
jmp
and
and
dec
sub
mov
insl
pushf
es
in
jmp
mov
dec
outsb
inc
pop
enter
adc
ja
arpl
sub
mov
lahf
clc
adc
xorb
sub
mov
shr
sub
loop
fisttps
orl
lahf
lods
xor
inc
mov
and
pop
jne
and
push
rcll
jnp
shlb
mov
xchg
in
xchg
in
and
fisttpll
mov
push
mov
call
int3
push
and
or
or
xor
push
lcall
mov
jne
leave
mov
js
xchg
cmp
inc
imul
out
rorb
pop
loopne
adc
dec
cmc
jne
sub
movb
fdivrl
pop
and
js
push
add
push
cltd
loop
pslld
lcall
dec
fistps
fnstsw
sub
ret
lock
mov
les
loop
adc
out
mov
add
and
lods
sti
and
adc
mov
jge
lret
add
or
inc
xchg
fcmovbe
lock
cmpl
xor
sub
mov
data16
stos
inc
aam
or
sub
rcrl
xchg
enter
mov
ret
fdiv
stos
jecxz
mov
or
loop
sbb
call
push
and
mov
int3
popf
mov
inc
inc
shrb
or
mov
inc
leave
rclb
test
push
push
iret
bound
test
mov
inc
ret
in
push
int3
sarl
dec
xor
scas
jo
leave
lcall
jns
cld
lock
xchg
mov
ss
std
mov
xchg
xor
pusha
out
pop
add
cmp
repz
xchg
popf
sbb
adc
mov
inc
cmp
in
cmpsl
mov
jle
cmp
cwtl
cmp
shll
adc
lods
and
repnz
push
push
dec
lock
pop
cmpsb
movsb
push
clc
push
xor
popa
scas
in
mov
mov
iret
mov
adc
jg
aas
enter
ja
imul
push
fnsave
push
gs
out
scas
jecxz
push
pop
push
scas
into
cmc
push
cli
xchg
out
push
fildll
push
imul
jecxz
hlt
or
mull
inc
mov
jb
nop
xor
mov
leave
imulb
inc
add
cmc
push
adc
daa
jge
jmp
adc
mov
loopne,pn
inc
mov
mov
int
push
in
sub
fildl
pop
adc
mov
in
ja
xor
rorb
jg
lea
shld
xchg
push
sub
push
mov
movsl
sbb
jns
xor
jns
jecxz
test
jne
jg
sbbb
or
jno,pt
jle
sbb
sub
aaa
sti
in
mov
js
lods
push
sbb
xchg
insb
outsl
cmp
jae
rcll
add
mov
xor
in
push
rclb
pop
mov
push
pop
pop
ficompl
xchg
aad
mov
dec
leave
leave
xchg
sti
mov
jo
mov
xchg
mov
sbb
push
cmp
add
xchg
and
dec
pop
loop
std
jnp
cmpl
aad
adc
neg
mov
dec
lods
jmp
xchg
sbbl
mov
sbb
mov
push
out
and
sbb
out
stc
inc
lea
test
or
clc
out
out
jne
ds
sbb
xchg
mov
aas
fwait
and
pop
icebp
xchg
aaa
pushl
add
leave
xchg
push
mov
sbb
mov
int3
push
ds
ds
out
or
inc
ret
mov
ss
inc
sysenter
ja
jle
js
insb
sbb
dec
loopne
dec
mov
ret
sbb
fsts
sbb
xor
mov
mov
pop
sahf
jbe
movsb
in
pop
int
inc
jne
jg
test
jb
cmp
jbe
jbe
aas
mov
inc
popf
push
push
test
add
mov
pop
data16
jl
test
adc
mov
mov
ds
jns
pop
pop
popf
psrld
and
cwtl
cmp
pop
call
inc
andl
mov
and
mov
je
mull
pop
sbb
scas
test
cmpsl
pop
cmp
jbe
loopne
cwtl
cmp
jl
cmc
stos
in
xor
ret
movntq
mov
xchg
fdivp
mov
adc
adcl
es
push
xor
jns
mov
lock
mov
adc
inc
push
aam
push
adc
push
test
push
mov
orb
lcall
dec
stos
out
stos
lods
push
popa
xor
negb
jns
mov
sub
mov
and
je
sarl
inc
movsl
xchg
lods
mov
cmp
jnp
cmp
xchg
inc
and
scas
cld
jg
lea
call
gs
scas
pop
inc
cltd
mov
insl
mov
icebp
cmc
push
cmc
cli
fistpll
leave
insb
js
add
addr16
pop
push
mov
ja
lods
add
sub
and
fistps
call
daa
dec
fs
les
jae
stos
mov
add
es
icebp
incb
stos
jns
push
fcmovbe
xor
aas
sub
push
mov
adc
lds
mov
xor
add
mov
mov
ljmp
ret
ljmp
test
mov
leave
cltd
mov
push
inc
out
clc
lret
pop
lods
pop
ror
jo
mov
scas
jp
fbld
rol
adc
out
adc
scas
adc
in
sbb
push
mov
addr16
fcomi
dec
xchg
jae
push
fidivrl
dec
repnz
add
add
daa
js
add
add
pop
ja
out
fwait
jp
test
or
jnp
cmpsb
sbb
add
jl
out
je
call
mov
mov
movsl
jne
xor
test
dec
or
or
jmp
xchg
aad
imul
pop
orb
fadd
imul
outsl
add
arpl
pop
imul
lea
mov
inc
sahf
sbb
jmp
sub
loop
inc
adc
xor
test
dec
pop
rcrb
ljmp
inc
mov
lea
or
leave
daa
mov
jae
inc
outsb
iret
scas
test
mov
dec
add
out
push
xor
adc
mov
js
sbb
pop
insb
mov
mov
pop
and
int
insb
out
jae
cmpsb
and
dec
xor
xlat
gs
add
push
sub
and
xor
or
test
adc
aaa
int3
dec
arpl
push
js
push
repz
scas
or
lahf
mov
das
sub
pusha
add
jp
jae
pop
shll
call
push
cltd
inc
sub
mov
add
sub
ljmp
rorl
out
and
mov
or
mov
aam
mov
sbb
lock
pop
lock
push
out
lcall
out
fsts
xlat
gs
add
mov
jnp
repz
cwtl
mov
sub
cmpsb
jno
xchg
mov
cmp
jmp
pushf
pop
jp
arpl
pop
lahf
rorl
shr
sbb
andb
jmp
insl
ss
push
mov
lds
out
repz
in
or
idivb
jl
out
popf
jmp
fstpl
xchg
cmp
movsb
in
movsb
loope
inc
cltd
jne
subl
ja
sbb
and
fwait
out
pop
cmp
add
imull
mov
mov
push
mov
das
clc
sbb
inc
dec
mov
hlt
js
mov
repz
pop
int
pop
mov
inc
xchg
and
add
xor
jno
in
outsb
xor
mov
lahf
lock
outsl
lcall
add
jmp
mov
ds
mov
test
dec
andl
rcll
sub
dec
adc
outsl
test
iret
adc
and
popa
leave
mov
imul
inc
call
jecxz
jge
add
shlb
rcr
jnp
adc
xchg
dec
hlt
sub
mov
sub
cmp
cmc
or
hlt
inc
ljmp
lret
adc
scas
cli
xlat
and
mov
lods
pop
and
scas
adc
insl
add
outsl
shll
jo
push
fdivrs
cmp
lds
xchg
mov
adc
loop
cmp
cwtl
neg
xchg
outsb
jb
xor
ret
and
lahf
sbb
cltd
mov
mov
adc
cmp
inc
jecxz
fstp
cmp
into
pop
jle
mov
or
pop
int3
jg
xor
adc
push
inc
or
mov
cltd
xchg
adc
adc
cmp
jno
xchg
mov
ja
dec
cmpb
jmp
dec
xchg
and
mov
cmp
adc
insb
pop
xchg
xchg
jnp
roll
jmp
aas
call
inc
mov
in
in
in
sbb
mov
and
sub
lcall
xchg
fwait
mov
and
shrl
and
daa
pop
jo
cltd
lods
pop
js
aam
sub
daa
das
mov
ss
mov
xlat
push
out
scas
jmp
sub
dec
popf
sahf
dec
insl
push
rolb
mov
outsl
push
repz
jecxz
fistpl
lret
shrb
fistps
out
xchg
pop
or
repz
lods
add
and
mov
insb
pop
pop
ficoml
rcll
movsl
adc
lret
push
xchg
xor
stos
mov
mov
add
test
out
cmpsl
insl
sarl
or
jge
push
int3
rcrl
inc
into
mov
ret
lock
scas
jg
xchg
fstpl
stos
movsl
ss
aas
out
mov
test
mov
dec
rorb
or
adc
leave
arpl
dec
fstp
cmpsl
sub
and
imul
add
push
pop
enter
ss
adc
sbb
inc
jmp
mov
gs
popa
ds
test
xchg
in
jp
hlt
rolb
ficompl
cwtl
enter
scas
loop
adc
sub
int3
outsl
jl
sbb
or
jmp
js
dec
sub
push
insl
mov
xor
mov
gs
push
scas
clc
push
fistl
fisubs
or
in
mov
lahf
pop
aam
xchg
scas
icebp
fnstsw
shl
xchg
pop
adc
jle,pn
push
inc
aam
jmp
sub
sti
fucompp
push
jl
mov
stos
xchg
call
sbb
pop
xchg
leave
shl
stc
dec
push
jp
cltd
fbld
stos
sbb
icebp
xor
sar
or
mov
jne
xchg
xor
sahf
add
mov
push
sahf
adc
lds
enter
ja
adc
add
xor
iret
fidivl
jle
xchg
xchg
xchg
add
xor
popa
xchg
push
sub
or
scas
mov
lea
lret
xchg
out
rcll
stos
es
xchg
cmp
sti
aaa
cmp
popf
outsb
addb
xlat
stc
and
outsl
out
and
mov
sub
sub
insb
aad
cmp
ret
push
or
pop
and
stc
or
iret
movsl
out
jp
pop
inc
mov
adc
dec
rol
add
inc
fistpll
negl
and
loop
jecxz
arpl
dec
adc
adc
xor
call
xchg
iret
inc
fnsetpm(287
mov
scas
pop
jno
mov
cmp
les
jns
aas
mov
sub
push
push
fnstcw
out
cmc
adc
mov
mov
bound
add
stc
inc
push
repz
pop
mov
nop
cmp
push
sbb
subps
lcall
pop
adc
in
jg
ja
aad
in
adc
aam
xor
mov
and
ret
xchg
out
lock
xchg
push
sub
pop
add
scas
loop
orl
xlat
push
or
sub
test
data16
xor
fwait
sbb
pop
and
sbb
pop
rcl
stc
xchg
icebp
push
or
dec
fiadds
in
mov
fistpl
jnp
and
imulb
pop
sbb
and
in
adc
lret
test
cld
in
out
jecxz
bound
scas
mov
fcoml
jp
std
roll
mov
xor
stc
mov
jg
bound
pusha
rolb
dec
mov
repnz
cmp
clc
dec
mov
jp
stos
xchg
inc
push
xchg
ss
roll
rclb
sbb
in
test
mov
fstpt
outsl
leave
repnz
lret
pusha
insl
scas
pushf
xchg
dec
negl
mov
push
mov
popa
sbb
clc
aad
cmp
fistpll
ja
cmp
pop
das
bound
fldt
in
dec
cmp
movsb
jne
lea
cmc
je
inc
sub
lds
repz
in
adcl
loope
ret
push
or
aas
xor
inc
popa
push
pop
sbb
ss
adc
push
push
outsb
les
fidivrl
rcrb
adc
mov
pop
cs
pop
int3
push
cwtl
flds
jb
cmp
jo
stos
mov
in
sbb
in
sub
or
jae
adc
sarb
push
sbb
push
pop
and
inc
bound
insb
sarb
sbb
lods
and
inc
push
xor
movsl
xchg
xchg
mov
mov
imul
jo
lock
push
imul
jecxz
adc
xchg
jmp
out
stc
pop
out
std
mov
xchg
push
push
js
jl
push
loopne
insl
je
lds
pop
sub
fisubrl
jne
shll
shrl
ror
je
add
mov
mov
cmp
outsl
scas
pop
xchg
daa
xchg
mov
xchg
push
insb
pop
dec
outsb
pop
gs
push
mov
mov
call
test
dec
pop
mov
inc
fnsave
out
test
cmp
test
sbb
pop
sbb
js
fcmovb
xchg
notb
xchg
dec
popa
jbe
mov
jno
aam
int3
jle
std
ss
cmc
fwait
jns
test
mov
or
mov
pop
mov
sub
mov
cli
shlb
cmpsb
mov
popa
cmp
mov
mov
xor
adc
cmpsb
xchg
xchg
bound
push
sbb
dec
cmpsb
cmc
push
sbb
pop
and
push
jge
imul
mov
push
mov
dec
lods
jp
arpl
mov
pop
ljmp
cmp
daa
inc
sbb
add
cmp
ja
loop
xchg
inc
push
icebp
arpl
cmp
aaa
dec
mov
jb
mov
addr16
bound
sub
insl
mov
pusha
stos
test
ja
imul
mov
cmc
mov
pop
fisubs
sar
cltd
imul
inc
sub
mov
cli
cmp
push
ljmp
dec
sbb
dec
sbb
stc
in
leave
leave
in
or
pop
into
ss
mov
call
loopne
sub
out
stos
sarb
dec
lds
insl
or
out
pop
xchg
pusha
jnp
adc
pop
ljmp
dec
push
dec
dec
in
lock
repz
loopne
sub
or
bound
add
scas
mov
sbb
xor
in
adc
lret
adc
xchg
popa
hlt
lods
scas
mov
ljmp
or
xchg
cwtl
xchg
insl
adc
rcll
pop
jg
outsb
adc
pop
sub
mov
bound
xchg
dec
inc
fmul
jne
sbb
jbe
in
addr16
loop
into
and
sbb
dec
int3
in
pusha
gs
sbb
lret
rclb
sbb
fisubl
xchg
test
dec
divb
dec
jno
int
test
movsb
pushf
jl
daa
push
fnstsw
outsb
sub
mov
dec
cmc
sbb
xor
mov
sbb
bound
inc
mov
and
inc
rolb
ds
xchg
mov
inc
hlt
cmp
mov
push
lods
mov
xchg
call
in
fidivrl
shll
mov
jne
inc
addr16
xchg
xor
test
dec
inc
pop
cmp
add
sub
xor
mov
push
arpl
dec
notb
push
mov
xchg
inc
out
movsl
add
xor
shr
addb
pop
iret
insb
mov
test
inc
lods
or
shl
bound
imull
or
imul
es
addl
sub
insl
enter
pop
mov
adc
inc
xor
xchg
push
les
mov
ss
daa
imul
cltd
outsb
into
test
jo
dec
and
imul
ds
lea
push
and
adc
das
add
inc
sub
dec
xor
fcomps
jo
xor
and
pop
mov
repz
movb
mov
aam
cltd
fwait
sbb
adc
icebp
femms
mov
pop
adc
ljmp
ds
icebp
movsb
test
imul
cmp
sub
inc
mov
fdivl
mov
or
xchg
lahf
push
std
adc
push
repnz
sub
in
popa
lock
mov
in
push
sub
insl
sub
lods
lcall
add
xor
cld
mov
xor
imul
ss
xchg
test
pop
lea
pop
es
sub
loop
push
stc
out
inc
inc
dec
or
mov
pushf
arpl
ja
cli
aaa
test
xchg
loopne
xor
and
xchg
mov
dec
fwait
lods
push
inc
cltd
mov
mov
pop
jle
push
in
mov
mov
lea
icebp
cmc
xor
dec
cmp
movsb
add
mov
leave
loope
fnstsw
pop
pop
les
sub
xor
jmp
insb
std
dec
jl
dec
aad
leave
inc
incb
push
or
loopne
mov
push
ds
mov
enter
inc
cld
xchg
xor
cmpsb
pop
xor
fcmovnbe
add
int3
mov
jge
inc
inc
cltd
fsubl
dec
imul
rcll
mov
xchg
into
inc
test
dec
imul
push
mov
mov
pop
xor
jg
daa
dec
rcrl
xor
jns
into
adc
xchg
push
xor
inc
idiv
roll
jmp
fmul
outsb
ss
mov
addr16
es
pop
mov
clc
addr16
popf
ss
fdivrs
mov
jmp
je
or
and
imul
addb
inc
mov
in
cld
js
cmp
leave
mov
pop
mov
loope
jnp
and
jno
mov
xlat
lcall
fimull
xchg
mov
das
cmp
es
hlt
inc
sahf
add
push
loope
push
sbb
xor
push
fisubrs
mov
pop
hlt
jbe
sub
sbb
cmp
repz
and
sbbb
test
cmpsl
in
adc
dec
xchg
decb
testb
mov
out
pop
sub
sbb
bound
pop
test
xchg
scas
sbb
cmp
dec
fistps
dec
mov
bound
faddl
inc
and
dec
stc
movsb
mov
jmp
sti
es
push
mov
cmp
push
jmp
bound
sub
cli
shrl
dec
out
stos
mov
fnstsw
fstp
cmp
ss
pop
inc
pop
nop
mov
sti
push
cmp
fildl
sti
mov
jns
inc
std
lock
add
fs
out
pushf
inc
xchg
cmpsb
fsubl
outsl
inc
vmwrite
mov
sub
xor
pop
andl
out
aad
dec
addl
fcmovnu
fs
rol
push
inc
out
lea
inc
and
cmp
pop
cmp
or
push
add
jbe
mov
aas
nop
add
aam
adc
sbb
pop
push
or
aad
xchg
mov
ret
adc
mov
js
pop
xchg
fdiv
test
loopne
test
jle
adc
xor
add
dec
or
dec
jae
leave
aaa
pop
mov
dec
or
sarl
mov
dec
mov
movsb
sbb
idivb
pusha
cmc
push
push
fwait
into
sti
clc
out
sbb
int
aaa
jns
addb
dec
or
mov
cmp
mov
fadds
push
xor
ljmp
stc
adc
sbb
jecxz
xchg
icebp
mov
data16
fmul
nop
vucomiss
ja
jne
cmpsl
shll
outsl
aas
test
mov
int
jo
cmp
and
pop
out
ffree
and
mov
lock
repz
test
push
inc
test
cltd
dec
jmp
xor
js,pt
testb
cmpsl
fucomp
loope
cmp
push
or
daa
lock
ds
test
sbb
mov
sub
pusha
hlt
or
sahf
add
mov
xchg
dec
inc
adcl
cmpsb
ja
adc
add
test
ror
fimull
cmp
pop
cmpl
mov
push
ret
xchg
jg
out
scas
pop
outsl
leave
mov
fmul
cmp
mov
lret
outsb
stos
add
idivl
inc
daa
push
lcall
cwtl
mov
cmp
bound
bsf
add
nop
repz
imul
push
call
mov
rclb
sub
and
xorl
sbb
outsl
add
cltd
and
filds
push
add
in
adc
out
fdivrp
add
jmp
add
sub
inc
or
dec
ret
jnp
sbb
jo
dec
pushf
sub
pop
push
fs
mov
jne
jg
aad
cld
ss
call
push
mov
pop
test
inc
es
stos
mov
mov
imul
and
out
out
pop
stc
das
jecxz
stc
fsubrs
in
cmp
fdivrl
cmpsl
lcall
push
inc
dec
push
push
mov
sub
out
dec
xchg
push
lock
icebp
ja
xchg
pusha
in
add
push
out
ss
sub
enter
iret
sub
sbb
adc
inc
mov
sti
aaa
les
xchg
push
jne
xor
loopne
inc
aam
ljmp
ret
imul
sbb
in
cld
fbld
mov
jne
loope
mov
imulb
cmc
and
pop
mov
outsl
xchg
mov
push
pop
inc
dec
pop
sbbl
pop
lret
xchg
cmp
push
or
ja
loope
push
sbbb
dec
jno
or
dec
lahf
ret
xor
mov
clc
xor
iret
sbb
sbb
xor
push
dec
scas
outsl
outsb
xor
and
int
pxor
xor
test
jp
pop
ds
clc
in
rorb
pop
mov
adc
and
lods
fwait
fs
fmul
sbb
jecxz
imul
test
adc
ret
popa
inc
not
sub
je
adc
pop
jb
aam
movsl
insl
cmp
or
das
test
aad
mov
push
mov
fidivrs
lea
pushf
rcrl
and
sub
jb
xor
jno
ljmp
xlat
incl
test
or
pop
dec
inc
mov
shl
pop
into
add
ds
fwait
push
push
add
jnp
push
mov
push
mov
out
dec
push
mov
imul
and
mov
mov
push
js
scas
xchg
fcomps
dec
dec
in
iret
cs
cmpsb
je
jae
sub
add
sub
xchg
xchg
mov
gs
lods
cmp
imul
lcall
loopne
stos
jns
xor
mov
pop
inc
sti
les
jmp
lock
add
sahf
adc
ret
int3
adc
xor
cs
dec
mov
jne
cli
sub
cmpb
insl
xchg
mov
mov
jp
jae
jle
movsl
ret
not
xor
push
push
pop
xlat
pop
push
cmp
shr
loope
enter
in
mov
call
cmp
ljmp
stos
sbb
jg
pushw
and
push
xor
or
or
shll
test
jge
lock
jno
push
push
ss
or
sub
cld
adc
adc
sbb
pop
xchg
dec
rcll
pop
push
lahf
inc
cmc
data16
pusha
call
sbb
xor
push
lock
inc
mov
pop
adc
shl
inc
add
arpl
sbb
cmp
sbbl
dec
das
negl
mov
imul
jne
or
popa
out
cld
inc
and
lcall
xchg
inc
lcall
es
gs
add
sub
jmp
into
inc
jg
mov
jg
inc
push
xchg
push
sbb
std
into
mov
ret
or
cwtl
aad
and
aam
adc
lret
jp
loop
cmp
lret
adc
xchg
cmp
xor
fdivp
es
xor
push
out
mov
sub
shll
int
xor
sti
xchg
pop
iret
mov
rcl
push
adc
xorb
inc
js
addr16
aas
in
xor
call
test
test
sub
dec
in
je
sti
imul
inc
adc
jecxz
sub
cs
int
sbb
lcall
pushf
movsl
daa
sbb
adc
loope
ljmp
ror
mov
inc
push
inc
cmp
dec
or
gs
std
aas
test
repz
mov
cmpsb
imulb
jo
sub
pop
dec
push
jl
shl
and
hlt
inc
add
xor
xchg
push
mov
idivb
test
filds
int3
push
dec
filds
mov
js
jns
cmovbe
dec
shl
into
mov
shlb
xchg
out
nop
xlat
inc
pop
popf
dec
aas
lea
aas
pop
shll
loope
jle
mov
push
jne
inc
test
xor
mov
or
and
hlt
xor
mov
int3
cmc
pop
push
ret
pop
sbb
adc
insl
adcl
dec
scas
out
mov
sub
mov
sbb
pop
pusha
fs
call
dec
push
sbb
inc
pop
aad
in
jl
repz
ljmp
into
and
ds
and
in
sti
inc
xchg
cmpsb
jb
push
jb
and
adc
mov
pusha
fmull
in
mov
and
xchg
mov
dec
scas
in
pop
mov
xor
outsl
cmp
mov
call
inc
mov
dec
and
jg
fistl
call
stc
fadds
mov
mov
lods
lret
jge
xor
xchg
and
call
test
lods
popf
xor
mov
test
push
cmp
or
imul
lods
negb
int
jg
out
or
gs
out
pusha
pop
sbb
imul
pop
in
cwtl
out
mov
cmpsb
lahf
ret
dec
subb
jmp
or
jmp
mov
nop
mov
or
stc
orb
sbb
ljmp
cli
dec
dec
out
clc
pop
xor
inc
jne
es
in
pop
aam
jns
mov
jmp
push
mov
push
cli
add
pop
imul
fs
scas
or
lock
jno
shrl
dec
pop
push
jne
add
mov
or
insl
ret
mov
add
push
or
scas
movsb
jp
icebp
jne
adc
aam
push
mov
xchg
add
roll
or
xlat
in
cmpl
push
sub
out
and
push
mov
mov
pushf
sahf
shll
lods
fs
int3
test
add
xchg
imul
rcrl
xchg
rcll
ror
or
push
xchg
stc
mov
aas
daa
jmp
and
bound
std
sbb
sahf
sbb
push
xor
loopne
and
fcoms
cwtl
daa
xor
jp
inc
stos
lds
rclb
testb
cld
sub
xor
pop
xchg
aaa
sbb
or
in
test
mov
fdivrs
gs
adc
mov
jge
push
insb
sbb
test
xchg
jo
and
movsb
xchg
add
and
lock
jle
roll
sub
loop
es
std
mov
xlat
xchg
dec
lret
cs
cmp
or
in
sub
scas
lahf
mov
stos
lods
xchg
int
addr16
mov
stos
cmp
mov
and
aaa
and
inc
lods
fistl
popl
mov
std
sbb
stc
daa
mov
or
shlb
sbb
stos
adc
xchg
sub
sub
std
outsb
rolb
stos
mov
sbb
adc
pushf
aas
test
push
jecxz
std
jecxz
jns
in
and
jecxz
gs
mov
fwait
push
push
push
in
lods
repnz
xchg
or
xchg
xor
push
test
adc
orb
xchg
test
cs
out
movsb
test
ss
imul
xchg
mov
out
iret
loop
lahf
std
icebp
add
out
mov
ds
push
cmp
ss
fnstcw
dec
push
push
sarl
insl
adc
fists
jecxz
leave
dec
out
adc
mov
out
mov
out
add
inc
push
nop
fcompl
push
movsb
mov
ret
insl
jmp
fcomps
rclb
lret
enter
inc
or
sub
cmp
stc
out
lcall
sar
jne
mov
sub
xchg
xchg
int3
loope
mov
dec
cmp
outsb
xor
in
xchg
pop
movsb
daa
test
test
push
out
adc
std
sbb
jle
pop
cli
inc
call
or
or
cmp
ret
dec
dec
sub
out
insb
lea
pop
sar
mov
push
leave
dec
mov
push
jns
addr16
outsl
sbbb
add
insl
idivl
movsb
cmp
out
push
xor
adc
mov
ljmp
xor
xchg
jl
fcomip
mov
inc
mulb
fldl
ja
xlat
pusha
test
add
movsl
mov
adc
xor
or
into
and
repnz
dec
mov
pop
dec
test
arpl
and
mov
jne
and
cmc
fwait
sti
jnp
xor
push
or
mov
daa
test
test
mov
jg
sub
xor
fdiv
cld
or
les
sub
mov
inc
add
in
xor
jmp
int
inc
dec
notb
inc
loopne
xor
test
andb
addl
cmp
mov
cmc
iret
cli
xorb
cs
aad
jo
in
mov
inc
outsb
out
stos
rcll
jmp
jecxz
loope
int3
adc
cmp
mov
push
cmp
dec
add
xor
lods
mov
notb
outsl
xchg
test
cmpsb
mov
cmp
shlb
lods
sbb
loopew,pt
xchg
test
mov
jns
mov
or
dec
mov
pop
divb
pop
rolb
or
mov
mov
xchg
sbbl
xchg
lods
adc
pusha
mov
popa
pop
jle
outsl
cmc
stos
lret
cld
adc
adc
ss
mov
fnstenv
jo
pop
mov
clc
mov
cli
add
imul
sbb
mov
outsb
xchg
mov
or
fwait
dec
or
mov
sub
lods
loopne
jmp
xor
inc
stos
inc
mov
lods
jle
push
pop
mov
insl
jp
inc
and
sbb
ds
arpl
sbb
pusha
stos
and
pop
sarl
jo
add
lds
in
and
pop
mov
cmp
cmp
dec
xchg
imull
cli
adc
push
cs
jne
shlb
lods
dec
push
xlat
xchg
and
addr16
fldl2e
mov
xor
dec
ljmp
out
mov
jno
jmp
mov
jg
inc
bound
pushf
inc
test
xor
jmp
xchg
stos
inc
mov
or
out
out
repz
xchg
andb
das
mov
rcrl
push
mov
sub
push
outsb
out
xchg
xor
bound
push
mov
or
aam
xchg
addr16
xchg
fxch
xchg
push
xor
inc
insl
je
out
fwait
test
cmc
test
dec
sub
mov
ret
enter
cmpb
push
cltd
cmp
xor
fistl
sub
filds
fisubrl
shrl
mov
outsb
mov
cmp
and
sbb
jns
pop
movsb
sti
mov
mov
add
mov
fwait
mov
inc
jecxz
sbb
popf
adc
cli
fisttpl
or
dec
outsb
in
add
int3
inc
mov
cmp
lea
or
dec
sbb
add
iret
aad
iret
movsb
test
bound
push
or
cmp
inc
dec
lahf
rcr
pop
adc
fsubrp
test
inc
mov
or
leave
jb
and
sti
insb
push
push
lods
dec
mov
daa
sub
daa
add
ss
test
xchg
test
je
repnz
and
sbb
sub
shlb
test
adc
push
rcr
ror
and
sub
mov
push
jle
add
xor
shll
pop
cmp
gs
gs
ljmp
mov
inc
push
sbb
lea
push
mov
jle
mov
or
cmp
fistl
pop
xchg
loopne
adc
ljmp
mov
cmp
fstps
mov
pushf
jmp
sbb
jmp
sbb
dec
mov
cs
jmp
mov
ret
inc
mov
lahf
jnp
lret
inc
shll
mov
mov
jnp
jno
das
imul
xor
pop
outsb
ret
sbb
hlt
adc
pop
aas
repnz
repnz
ror
mov
stc
into
or
pop
setle
imul
pop
test
scas
lods
adc
out
mov
adc
inc
cmp
xchg
aaa
insb
sbb
fists
aad
add
xlat
cmp
lock
cmpsb
or
and
lods
outsb
addr16
mov
nop
out
jbe
push
xor
test
das
push
xchg
dec
outsl
adc
call
xor
imul
pop
nop
loopne
mov
jecxz
or
sbb
test
lret
out
xorl
adc
adc
add
sub
ret
add
insl
mov
push
ljmp
test
loop
mov
sbb
inc
rcr
inc
je
push
jge
pop
sub
pop
popa
cmpsb
jno
std
jae
fiadds
je
jle
inc
fs
xor
xlat
cli
ja
mov
xor
je
push
test
or
daa
inc
loopne
push
push
mov
cmp
jae
cmp
les
mov
call
mov
not
dec
dec
adc
add
push
cmp
dec
lcall
pop
mov
mov
insb
push
out
les
popf
clc
mov
ss
pop
dec
rclb
lahf
cli
cmp
sub
or
xor
daa
inc
mov
pop
jle
push
cmp
add
repz
outsb
out
inc
and
daa
mov
jnp
jg
scas
jns
and
push
and
sub
jo
in
lret
adc
xchg
adc
inc
jae
jecxz
les
aaa
mov
sbbl
inc
popl
cli
xchg
lods
push
inc
inc
sbb
inc
and
add
pop
dec
xchg
stos
lahf
test
xchg
add
xlat
adc
sub
out
push
scas
int3
pusha
pop
mov
stos
rcl
insb
scas
cmp
jmp
mov
decb
jae
sub
cmp
xor
add
in
dec
nop
xchg
mov
inc
loope
mov
mov
xor
loope
mov
loope
hlt
cmpsb
sbb
xchg
mov
jcxz
or
cmp
mov
mov
jmp
gs
sti
xchg
in
mov
repz
lret
scas
arpl
ds
rcrb
add
add
popa
xchg
sub
dec
mov
popa
xor
pop
into
pusha
nop
or
or
std
cwtl
sbb
push
jge
cmp
filds
sti
movsl
jb
pop
inc
adc
jbe
or
pop
gs
fnsave
xchg
inc
xchg
cli
fisttpl
hlt
mov
jno
xor
scas
and
loop
pop
test
dec
shl
ljmp
jo
sahf
lcall
arpl
pusha
ret
jp
mov
xchg
add
push
popa
in
or
sbb
and
fldt
outsb
xor
xchg
jl
rcpps
or
fprem
pusha
jecxz
and
inc
cmp
stos
js
push
push
dec
mov
jo
fcomps
sbb
push
push
inc
mov
lea
push
aas
mov
pusha
adc
scas
push
arpl
lock
fcoml
lcall
pop
shll
mov
sti
mov
mov
lret
in
xchg
jno
jle
xor
outsb
scas
lea
mov
notb
scas
scas
mov
xchg
movsb
sahf
dec
push
and
insl
jmp
mov
inc
inc
enter
je
pop
ret
inc
fldl
ficoml
call
in
jns
popf
popa
cmpb
hlt
pop
cmp
mov
fcoms
repnz
mov
cli
cmpsb
or
sub
ljmp
or
adc
pusha
mov
cmpsl
cmp
nop
mov
ficomps
pop
jp
lods
in
rorl
xchg
or
inc
movsb
shlb
dec
lods
ds
pop
movb
pop
sbb
pushf
out
scas
test
repnz
inc
adc
mov
lods
fimuls
mov
mov
cmpsb
stc
dec
pop
enter
movsl
test
cmc
xchg
fsts
clc
xor
lret
inc
cs
dec
loop
mov
inc
inc
data16
push
cmpsb
and
mov
loope
call
add
cmpl
loopne
add
mov
inc
cmp
xchg
stos
insl
or
idivb
test
sub
xor
sub
add
jb
jmp
sbb
cs
popf
cwtl
inc
mov
pushf
lds
lods
stc
jmp
ds
fstpt
sbbb
mov
pop
pop
jb
inc
add
pusha
hlt
sti
pop
cmp
in
hlt
xchg
fisubrs
cmp
bound
xor
mov
sarb
test
out
cmp
or
in
call
into
int3
adc
xchg
mov
dec
mov
sbb
stc
mov
es
decb
dec
xchg
sarl
hlt
inc
xor
in
xor
add
cwtl
pop
xchg
nop
cld
dec
movsb
xchg
lahf
cs
jg
mov
hlt
dec
aam
sbb
and
sub
test
cwtl
out
fldl
lahf
pop
mov
pop
loop
jbe
inc
iret
iret
sbb
mov
jne
xor
outsl
push
cwtl
sub
fwait
pop
lret
xchg
jae
lock
adc
jo
jmp
jecxz
jg
sbb
inc
movsb
lods
out
ret
loope
jecxz
push
inc
mov
in
aaa
das
adc
add
inc
in
repz
ret
ja
jle
pop
pop
rcrl
sti
sub
inc
jmp
daa
sub
xor
sahf
mov
mov
mov
cltd
add
mul
fcmovnbe
adc
mov
cmp
push
push
xor
imull
cmp
cli
mov
cmpsl
adc
inc
cmpsl
negl
adc
jo
push
jbe
cwtl
pop
add
pop
dec
outsl
xchg
int3
sub
pusha
aaa
pop
fdivrl
pushf
incl
pop
clc
test
pop
sbb
xchg
rcll
add
inc
sub
xchg
outsb
aad
xchg
in
mov
jns
sti
jno
dec
imul
push
and
adc
mov
pusha
or
in
inc
rcr
in
inc
jo
adc
jp
popf
out
mov
and
or
xor
mov
push
ds
jp
cmpsl
in
les
cmp
incl
fmul
imul
push
mov
lods
insl
ret
dec
pop
insb
test
aas
bnd
fldt
and
sbb
pop
out
xor
mov
lahf
lods
push
mov
xchg
bound
cmp
mov
add
jae
bound
add
jecxz
jp
add
jo
inc
daa
mov
lods
or
lret
jno
imul
push
dec
hlt
lock
out
cmc
aam
dec
frstor
and
fldt
inc
sbb
jecxz
hlt
push
cs
pop
mov
sbb
xchg
out
xchg
jb
fisttps
aam
cmp
rcr
mov
xchg
push
fmuls
inc
cli
xchg
push
inc
inc
mov
faddl
adc
xchg
cmp
int
loop
es
pop
ss
and
sub
push
lahf
cwtl
cmpsl
dec
pop
push
cmc
js
outsb
mov
rcrl
lahf
sbb
loop
push
sbb
out
or
inc
or
fstpt
pop
dec
rcr
test
loop
cli
hlt
push
lret
jmp
mov
cmc
outsl
and
pop
outsb
mov
loopne
fnsave
jne
sub
cwtl
mov
pop
mov
pop
push
outsl
js
aaa
aaa
xchg
sahf
mov
fwait
lods
sbb
push
add
or
gs
dec
filds
add
mov
mov
je
pop
push
push
fadd
sbb
daa
outsl
pop
mov
sar
cmp
adc
shl
movsl
lcall
es
add
pop
imul
mov
and
push
inc
or
addb
sarl
and
das
popa
mov
pop
xor
popa
jmp
js
or
xchg
out
out
cmp
fstl
jo
xchg
add
cmp
in
in
jns
shl
andb
adc
je
sbb
stc
bnd
loop
data16
sub
mov
dec
aas
push
and
ds
cmp
ret
and
jno
and
test
xchg
cmp
adc
cli
in
test
and
movsl
insl
fld
paddb
push
cmp
sub
push
test
jl
dec
aad
es
in
das
stos
loope
mov
mov
inc
cld
call
gs
je
call
push
mov
ds
cmc
roll
mov
cmp
cli
mov
xor
push
cmp
jg
ficoml
pop
xchg
mov
aad
pop
outsb
xchg
jnp
pop
cmp
ljmp
scas
data16
jo
movsb
outsb
cmp
aas
cmp
inc
fisttpll
jge
scas
inc
test
shl
jne
lret
aam
adc
mov
pop
fst
outsl
inc
mov
mov
bound
sbb
dec
data16
adc
jnp
jno
pop
xchg
push
or
test
push
lret
dec
movsl
mov
mov
and
dec
mov
or
icebp
add
xor
rcrl
daa
mov
pop
and
and
xchg
cmp
das
arpl
mov
daa
call
lock
lds
nop
dec
pop
mov
in
repnz
push
mov
mov
adc
adc
cmp
shrb
add
xlat
xor
popf
cmp
or
mov
xchg
ljmp
pop
mov
and
ljmp
xor
sahf
cmp
xchg
jno
dec
mov
pop
loop
pop
lock
in
orl
lods
lea
into
inc
js
in
and
jo
ds
adcl
int
mov
adc
ret
mov
sbb
icebp
add
out
and
movl
nop
add
outsl
dec
sbb
call
fmull
sti
xchg
dec
or
add
or
push
pop
ja
push
pop
sbb
in
or
or
adc
in
mov
addr16
hlt
sahf
jns
mov
mov
dec
add
jle
inc
xor
ret
call
out
pop
push
cld
mov
sbb
cmp
mov
adc
addr16
push
hlt
std
add
jns
movsb
lcall
push
xlat
jns
out
mov
mov
mov
cli
pop
jno
mov
lods
addr16
mov
mov
jge
pop
pop
inc
xchg
cmp
pop
and
stos
mov
inc
cltd
ss
sub
push
add
addr16
fwait
inc
jae
ljmp
rclb
inc
cmpsb
popa
stos
data16
pcmpeqd
jo
lds
dec
es
aas
cmp
sbb
mov
lcall
pop
ds
gs
pop
loope
sti
mov
pop
andb
gs
add
ffreep
sub
xor
aaa
inc
movsb
mov
or
in
add
loope
mov
add
roll
cmpsb
cs
lea
int3
jbe
inc
stos
hlt
jge
mov
push
sbb
aaa
jp
pop
and
insb
cld
pop
pop
inc
loopne
lahf
test
ljmp
insb
sahf
das
outsb
pop
pusha
jg
adc
fisubrs
loopne
fsubr
push
in
sub
dec
mov
cmp
adc
and
push
adc
ljmp
xchg
out
pop
insb
leave
gs
cmp
or
out
adcl
fmull
push
sub
and
lcall
sub
cli
out
inc
xchg
out
inc
or
jmp
mov
test
cmp
adc
aam
mov
ret
test
or
or
mov
cmp
lret
xchg
in
inc
lea
data16
loope
or
cmp
dec
add
push
xchg
sub
addr16
or
jmp
fprem
jbe
and
fwait
icebp
insb
dec
jne
push
xchg
add
fistpl
xchg
nop
cmpsb
sahf
sub
jmp
mov
sbb
or
lock
scas
mov
jg
mov
and
in
mov
cmc
inc
inc
sti
pop
stos
mov
add
lret
sub
lods
js
sarb
std
cmp
jb
fs
divb
outsb
fimull
xchg
inc
lahf
inc
jo
repz
mov
outsl
enter
xchg
sbb
jo
jmp
push
fwait
jae
sub
push
lods
divb
ds
xor
ja
push
mov
mov
in
cltd
mulb
std
inc
mov
scas
pop
aas
lahf
and
dec
out
cmpsl
and
sub
adc
cwtl
test
lea
push
call
loop
pop
out
cmp
add
imul
push
leave
inc
mov
in
jo
pop
loope
arpl
pop
and
dec
scas
jecxz
roll
xchg
xchg
test
inc
aam
push
lods
aam
sbb
dec
cmpsb
xorb
or
jmp
je
cwtl
or
out
xchg
jnp
jae
aas
adcl
cmp
mov
xlat
mov
inc
cmpsl
insl
cmpxchg
pop
inc
leave
push
dec
push
pop
cld
insl
imul
inc
pop
lahf
add
inc
inc
loope
push
sbb
shrb
repz
fisttpll
loopne
arpl
arpl
sub
lock
xchg
dec
add
inc
int
popf
loopne
adcb
xor
in
imul
int
pop
lock
in
mov
dec
int3
or
arpl
jo
shrb
mov
xor
cmp
mov
add
mov
fldl
out
into
ret
push
adcl
sbbl
fwait
jl
pop
cli
loope
scas
fbld
xor
cmp
or
in
pop
add
icebp
pop
pop
jbe
cmp
movsl
sahf
sbb
call
dec
std
pushf
aam
clc
mov
lds
enter
jno
daa
ret
mov
aaa
cmp
xor
jmp
mov
add
jle
push
add
jbe
cmp
aas
mov
push
inc
outsb
push
add
xchg
popfw
cwtl
push
or
push
test
inc
popf
adc
inc
push
sbb
push
pop
lcall
xor
frstor
mov
int
leave
adc
or
push
sub
push
push
inc
jb
jb
jge
push
inc
cs
mov
stos
mov
dec
and
mov
test
mov
js
rcrb
mov
inc
mov
push
aad
push
jg
ret
fs
xor
es
mov
pop
add
jl
stos
insl
cli
mov
nop
mov
sahf
cmp
jb
push
test
lret
push
inc
cmp
xchg
mov
pop
jecxz
or
add
inc
je
or
sub
sbb
fisttpll
jnp
sub
repz
mov
cli
aam
test
out
pop
jmp
mov
imul
xor
inc
add
fdivrp
jnp
mov
dec
push
test
outsl
jae
push
sbb
push
jbe
stos
repnz
or
arpl
xor
arpl
fs
aaa
gs
and
sbb
fcomps
pop
popa
pop
sub
mov
js
lahf
dec
dec
arpl
sub
scas
mov
shl
dec
dec
in
in
push
add
ss
push
push
lods
inc
add
mov
jnp
lfs
add
movsb
mov
lcall
into
loop
jbe
inc
ljmp
enter
test
pop
mov
jecxz
mov
ja
mov
in
das
stos
or
or
popa
decb
jns
loop
push
aad
xlat
rcrb
jo
pop
pushf
mov
mov
push
sub
into
iret
or
jae
pop
sub
arpl
mov
test
fsubl
outsb
je
stos
in
jnp
jmp
xor
jmp
ret
dec
test
xorl
fwait
jmp
xchg
ret
scas
sub
nop
repnz
pushf
stc
fcmovb
ss
dec
push
lock
cmp
cmp
mov
movl
dec
je
jae
outsb
dec
stos
pop
pop
je
inc
jmp
or
xchg
aas
test
push
stc
jmp
loop
mov
pop
arpl
mov
pop
jo
aas
xchg
int
sbb
cli
mov
lahf
orl
cmp
push
and
dec
mov
les
cmpb
hlt
rcr
mov
pop
dec
mov
shrb
lock
sub
mov
mov
jl
mov
fldcw
push
ds
xor
pop
mov
and
mov
push
fs
fidivrl
adc
mov
cld
cmp
hlt
or
scas
jns
mov
loop
jge
js
inc
jle
mov
and
mov
xchg
xchg
ds
hlt
inc
xor
popf
xor
push
cmp
adc
mulb
sbb
addr16
jmp
jbe
pop
test
repz
cmp
shll
les
aaa
xchg
dec
cmp
mov
cwtl
inc
xor
xchg
stc
jbe
adc
lahf
add
mov
mov
test
pop
cmpsl
lock
pop
mov
sbb
int3
mov
stos
stos
mov
decl
inc
xorb
push
inc
jge
cwtl
test
xchg
hlt
jns
aad
xor
pop
push
scas
js
push
dec
mov
dec
inc
lea
mov
jb
and
add
loope
ljmp
cmp
lods
inc
dec
push
inc
scas
cmp
mov
loope
or
add
xchg
cwtl
mov
sbb
or
movsl
sub
jge
xor
xor
gs
es
mov
popf
xchg
push
sti
or
call
jecxz
arpl
or
notb
repz
adc
ret
jl
cld
mov
and
mov
sbb
cmpsb
jo
dec
mov
push
insl
dec
push
icebp
jp
mov
std
push
fildl
jb
stos
addr16
out
fistpll
dec
mov
adc
pop
mov
test
xor
leave
loope
dec
or
or
push
inc
int3
aad
sbb
scas
scas
sub
enter
inc
scas
sub
rclb
or
and
imul
cmp
lods
test
cmp
pop
inc
pop
adc
loope
out
dec
bound
cmp
decl
in
pop
mov
pusha
mov
jns
dec
and
cmp
shrl
shlb
loop
lret
jae
add
rcrb
mov
and
lds
mov
insl
addr16
inc
and
mov
push
stos
ret
mov
jmp
pop
iret
outsl
repnz
dec
xor
mov
mov
faddp
aas
int
mov
hlt
fldcw
inc
aad
cwtl
add
test
pop
mov
cmp
dec
mov
cwtl
inc
frstor
andl
popl
pop
shl
lret
jecxz,pn
pop
jo
dec
fs
rcll
adc
sub
add
jmp
sbb
data16
subb
jo
loope
jae
cs
mov
aas
cld
lret
sub
mov
lea
push
xor
lock
mov
fcmovnbe
lds
daa
in
adc
hlt
mov
fdivs
push
inc
dec
fwait
mov
dec
lret
inc
mov
sub
pop
sarl
mov
push
sub
cmc
fsubrl
iret
pop
stc
int
pusha
dec
adc
jns
hlt
xchg
leave
lods
int3
xor
in
inc
mov
xchg
outsl
jmp
cmpsl
hlt
hlt
adc
lds
ss
shlb
or
fnstcw
insl
fldt
xor
leave
into
int
dec
cwtl
std
mov
fistpl
das
or
add
imul
mov
cmp
scas
xor
insb
jl
dec
mov
rclb
es
roll
popf
inc
mov
idivl
repnz
mov
mov
iret
push
fmull
jns
das
loope
cltd
roll
or
ljmp
lahf
cli
mov
std
fnstenv
fnstcw
neg
jp
jecxz
ret
pop
or
mov
add
and
test
in
cmp
push
add
xchg
jno
dec
xchg
xchg
je
std
add
pop
int3
std
gs
outsb
inc
xor
mov
insl
aad
or
je
aas
sub
rclb
mov
addr16
lahf
cmc
push
dec
sub
arpl
sbb
or
jecxz
addr16
sbb
popf
clc
imul
call
cmpsb
ds
push
push
sbb
es
std
jnp
lcall
stc
fists
push
imul
fdivrs
mov
repz
or
ljmp
dec
aaa
scas
inc
pop
and
into
repnz
ret
mov
pop
gs
sbbb
inc
stc
xlat
sub
dec
enter
orl
push
cli
mov
inc
dec
addr16
lahf
add
jnp
daa
mov
fcompl
movsl
hlt
sub
or
in
insl
pushf
mov
mov
inc
mov
dec
pop
inc
add
add
std
and
inc
ja
pop
aas
int
hlt
mov
clc
push
sub
fmul
stos
mov
jl
mov
cwtl
jb
in
mov
insb
imul
fidivs
mov
jl
imul
and
stos
sub
loop
or
mov
fnstsw
icebp
repnz
in
push
push
subb
xchg
xor
cmpb
gs
jmp
mov
fwait
decl
add
int3
sub
imul
inc
aas
mulb
hlt
push
or
and
icebp
lret
ret
sub
movsb
jmp
stc
mov
mov
int3
jae
arpl
bound
ret
push
inc
sub
cmpsb
in
sbb
nop
daa
lea
mov
push
fdiv
inc
mov
adc
inc
or
div
ljmp
std
orl
and
push
xor
cmp
inc
jmp
push
fwait
mov
mov
dec
js
xor
out
xor
jge
lods
adc
pop
insb
pop
cmpsl
cmp
cmpl
jo
jne
and
mov
and
fsubs
sub
js
jnp
jnp
popf
or
icebp
cmp
pop
push
mov
mov
pop
xor
sub
js
inc
cmpl
ljmp
xchg
sub
pop
ss
mov
or
gs
inc
maskmovq
mull
loope
and
aam
aad
sbb
mov
in
cld
movsl
movsl
je
ss
push
aad
stos
test
ljmp
inc
lods
cwtl
aas
xchg
lcall
pop
push
pop
push
xchg
in
push
pushf
cmp
and
comiss
push
fwait
jae
xchg
mov
pop
xchg
daa
push
cld
andb
jg
adc
or
jbe
mov
cmp
and
and
dec
inc
or
andl
pop
jo
jne
push
push
enter
sub
movl
jmp
or
sahf
dec
in
pop
addr16
and
push
test
clc
mov
insb
push
pop
sbb
cmp
lock
movsb
dec
inc
xchg
jg
pop
test
pop
sbb
jno
adc
fs
movsb
adc
jne
cmp
pop
adc
mov
jl
lahf
mov
shll
out
jmp
and
retw
pop
mov
mov
in
sbb
aad
jns
out
jg
repnz
div
and
lcall
push
fcom
dec
mov
mov
sbb
xor
and
jbe
fs
addb
pop
fildll
fldl
clc
ja
pop
les
cmpl
orl
and
mov
dec
out
rcrb
jg
mov
pop
xchg
aas
sbb
loope
adc
mov
push
dec
add
jl
stos
mov
xchg
cmp
ja
repz
in
aas
cwtl
shl
aas
inc
aam
out
loop
fwait
repnz
ja
sub
ljmp
inc
movsl
out
dec
test
xchg
mov
xor
in
push
mov
jbe
xchg
and
scas
sub
adc
push
mov
scas
dec
add
inc
fildl
scas
lcall
xchg
mov
sbb
push
movsl
cmpsb
inc
or
popf
add
sub
test
inc
test
sub
cmp
fadds
in
mov
mov
push
push
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
push
xor
dec
pop
ret
dec
movsb
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
push
ret
movsb
sub
daa
push
out
out
call
dec
aam
das
pop
and
mov
inc
xchg
cmp
dec
leave
cld
sub
sub
loop
pop
fnstsw
dec
xchg
adc
xor
sub
pop
ret
jl
out
or
adcb
lret
xchg
dec
jge
xor
in
pop
jp
insb
clc
xchg
dec
insb
fdiv
loop
mov
idivb
jns
sbb
js
push
in
pop
lcall
dec
popf
movsl
and
jle
cmc
jp
icebp
push
xchg
jp
inc
testl
mov
add
jmp
sub
ret
mov
imul
dec
pop
ret
mov
imul
dec
adc
cmpsl
sub
adc
pop
sub
ret
mov
push
sub
mov
imul
dec
pop
ret
mov
imul
dec
pop
shlb
mov
pop
ret
mov
imul
jnp
ret
mov
arpl
mov
faddp
movsb
cmp
xchg
pop
cmp
shlb
mov
pop
sub
ret
mov
imul
dec
pop
ret
mov
xchg
pop
sub
ret
mov
imul
dec
pop
loop
sub
xchg
pop
sub
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
cs
mov
sub
xchg
dec
sub
movsb
mov
and
sbb
pop
adc
movsb
sub
xchg
mov
sub
xchg
pop
jmp
pop
ret
mov
add
cmpsl
xchg
pop
sub
ret
mov
imul
gs
pop
imul
imul
sub
xchg
pop
sub
ret
mov
imul
mov
movsb
sub
xchg
pop
sub
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
imul
dec
pop
ret
mov
sbbl
std
sbb
xchg
cld
push
mov
fstps
std
fldt
jp
pushf
jp
mov
gs
mov
out
xor
lock
out
cmp
jle
xchg
test
adc
xchg
push
addr16
cmp
scas
nop
lret
mov
dec
not
or
mov
int3
mov
cmp
or
orb
adc
repnz
push
sbb
mov
adc
dec
add
inc
and
push
out
ret
loope
or
insl
cmp
sub
pop
lods
adc
dec
fcos
pop
xchg
in
cmc
or
incl
scas
fwait
add
aaa
jbe
cmpsl
cmp
clc
adcl
and
jp
mov
repnz
xchg
push
mov
and
lods
push
mov
insb
or
out
xlat
ret
xchg
frstor
sub
sbb
in
iret
xchg
inc
std
xchg
inc
jp
out
pop
pop
lds
xchg
lahf
mov
popf
daa
add
jns
movsl
xor
adc
leave
xchg
or
repz
rol
sahf
add
push
pop
or
jge
cmp
pop
mov
push
jg
pop
xchg
jae
pop
mov
jae
mov
sbb
dec
test
cs
call
jae
rorb
push
xor
repz
mov
addl
mov
push
jbe
cwtl
je
aam
xchg
xchg
mov
aas
mov
movb
lods
xchg
xchg
repz
nop
inc
into
ds
mov
out
int
and
and
int3
fcmovnu
clc
dec
sbb
cwtl
mov
mov
stc
aam
pop
int
shlb
movsl
mov
pop
cli
aas
addl
cld
pop
sbb
mov
mov
stos
and
xchg
inc
in
fcmovnbe
jno
sbb
mov
jae
pop
xor
or
pop
ja
and
mov
xchg
or
dec
mov
sbb
adc
lds
ja
mov
mov
sbb
xor
out
mov
cmp
jno
orl
xchg
flds
fsub
lods
ret
divb
xchg
aas
sub
or
xchg
lods
sbb
sarb
dec
xchg
sub
addr16
rcll
out
pop
jmp
cmp
dec
xchg
loope
arpl
ljmp
dec
test
decb
add
in
shlb
add
popf
test
scas
jo
enter
jae
push
jno
push
icebp
push
les
repz
adc
and
xor
iret
or
ret
xor
inc
cltd
dec
outsl
push
inc
mov
or
int
bound
push
rcrb
mov
cmpsl
aaa
cmp
mov
mov
and
int3
pushf
xchg
cmp
xchg
test
mov
in
lret
mov
in
pop
jbe
xchg
jae
popl
lret
push
inc
jge
pusha
shll
fmull
ret
leave
and
mov
sbb
iret
mov
pop
pushf
psubd
cld
cmp
lret
dec
mov
je
and
sbb
rcr
in
aam
lods
sub
mov
data16
ret
pop
dec
ds
popl
popf
push
mov
mov
lock
xor
lret
ret
iret
sub
inc
pop
cmp
mov
sarb
into
xchg
incb
add
dec
cmp
mov
add
js
pushf
sub
jnp
das
mov
and
adc
sbb
inc
cs
pop
jle
cmp
sub
pop
cmp
lea
xchg
adc
xor
mov
xor
aam
mov
sub
xor
jne
mov
leave
xchg
outsb
add
scas
pxor
xchg
rcl
and
mov
xchg
pop
cmp
xchg
xchg
mov
hlt
addl
mov
xchg
in
cmp
sbb
repz
push
cmp
rcrl
sbb
push
nop
addr16
in
xchg
in
sbb
out
sti
or
mov
jp
daa
mov
lret
xchg
shlb
cmp
es
and
and
pop
xor
xchg
scas
test
push
leave
sub
jmp
or
inc
cwtl
inc
shll
jge
mov
pop
outsl
xor
and
add
iret
loope
push
sbb
enter
shlb
fld
mov
pop
cmpsb
mov
stos
test
inc
ja
cmpsl
cmp
rolb
lds
mov
ljmp
jo
stos
out
sbb
lods
in
test
dec
mov
aas
cld
dec
jne
push
inc
adc
enter
decl
sbb
sub
and
add
cmp
insb
xchg
push
sub
imul
inc
xor
mov
mov
and
roll
aad
cwtl
ret
or
cli
cmc
sub
imul
stos
lcall
cltd
cmp
mov
pop
lea
pop
aad
sub
mov
fadds
mov
cmp
sub
add
lcall
xlat
push
aas
notl
mov
adc
fistpl
in
inc
in
outsl
out
nop
aas
repnz
aas
jle
cltd
inc
pusha
sbb
addl
mov
insb
insb
gs
mov
test
xor
fisubs
mov
rcrb
fisubs
mov
insb
or
lods
aaa
aaa
aad
adc
push
or
cs
call
fs
xchg
call
cmc
insb
movsb
add
rcll
imul
mov
jae
loop
xorl
mov
outsl
popf
rclb
js
aaa
fisubrl
mov
in
bound
mov
mov
inc
cmp
aam
outsl
fists
dec
and
pand
push
addr16
scas
mov
jbe
dec
adc
movsb
ret
mov
jnp
pop
lahf
xchg
xor
cwtl
lea
push
addl
out
loop
sahf
push
aas
push
xor
mov
dec
adc
adc
dec
test
pop
cmp
mov
or
mov
pop
xchg
xchg
stos
cmp
into
aaa
add
xor
pop
stos
or
push
test
mov
inc
push
addr16
cs
mov
and
jae
test
fs
inc
arpl
jmp
mov
gs
pop
pop
fcmovnu
pop
and
es
scas
xchg
test
cmp
jecxz
shr
in
xor
xorps
fldenv
mov
daa
xor
xlat
idiv
or
je
insl
ret
mov
shrl
daa
int
sub
mov
cmpsb
inc
or
int
addb
xchg
or
je
push
jae
cmpl
pop
cmp
addr16
sub
sbb
orb
ljmp
xchg
insl
sub
in
push
push
xor
outsb
adc
enter
xchg
xor
cmp
fisttpl
shrl
mov
cmpsl
cmp
or
dec
mov
jmp
pop
or
push
and
mov
push
xchg
pop
test
xchg
out
push
pop
adc
fisubrs
pop
xor
cmp
jne
mov
xor
xlat
push
add
imul
cmp
insb
loopne
add
cld
and
call
ja
xchg
and
mov
ljmp
sub
jecxz
cmp
cwtl
pop
in
cmp
or
or
lret
fildll
or
pusha
adc
xchg
cmp
imul
jb
fists
and
inc
push
fadd
jp
fidivrs
daa
in
push
adc
shll
lret
or
andl
test
add
push
sbb
ret
pop
pop
mov
shl
pop
rcr
movsl
aaa
insb
mov
in
inc
mov
mov
push
aad
jb
in
lcall
dec
jl
cmpsb
xchg
mov
stc
mov
arpl
pop
xor
test
sbb
mov
sub
jmp
cmp
lods
cmp
xor
dec
pop
push
stos
sti
dec
arpl
jns
cli
and
lahf
pop
jns
daa
jo
insb
or
sbb
jecxz
dec
fs
adc
repz
movsb
in
sub
aas
outsl
das
lcall
cmp
add
dec
mov
clc
shll
std
push
sub
aaa
push
add
test
icebp
jbe
mov
loopne
push
push
pushf
add
inc
inc
fcoms
jmp
popf
lds
stc
and
cltd
ds
cmp
out
stos
jg
iret
jbe
idivb
and
mov
cld
mov
sub
cmp
cmpsb
in
jmp
ss
add
and
sbb
push
jecxz
jno
les
pop
mov
pop
push
xchg
mov
adc
xchg
lds
add
lcall
test
rorl
cmp
mov
out
xor
mov
rorb
sbb
stos
pop
pop
sbb
aas
addr16
push
mov
pop
jl
mov
push
sbb
in
dec
lea
sbb
xor
in
pushf
inc
or
cmpsl
outsb
insl
or
xchg
dec
in
icebp
aam
xchg
fstpl
push
mov
loop
in
sub
int3
cwtl
xor
rcrl
cmpsl
insl
lahf
faddl
inc
std
mov
in
inc
and
adc
dec
pop
mov
mov
jge
jb
adc
cmc
fildll
loopne
adcl
scas
cld
into
test
mov
jmp
add
mov
cwtl
int3
ja
sbb
into
orl
push
xchg
lock
test
sbb
add
mov
pavgw
pusha
xchg
push
cmpsb
adc
adc
cmp
lahf
ficompl
mov
or
fs
out
xlat
or
out
enter
iret
pop
mov
fstl
out
mov
and
sbb
sub
cmpl
and
or
jle
out
leave
adc
push
cmp
es
adc
push
stos
iret
cld
sbb
cmc
xorb
xchg
inc
pop
faddl
jo
fisubrs
push
repnz
rcll
push
cmc
fwait
cmp
int3
fistpll
pop
ljmp
pop
jmp
stos
sub
nop
mov
jo
adc
js
popf
scas
test
cwtl
cltd
and
push
aad
sub
out
jg
xchg
out
stos
mov
xchg
mov
push
cwtl
mov
in
ja
push
jnp
test
sub
in
stos
push
jg
mov
ja
pop
and
mov
into
shll
in
rclb
adc
cmpsl
scas
insl
mov
push
mull
push
out
push
xorl
cmc
mov
nop
loope
xchg
inc
outsb
test
mov
xchg
aaa
lods
inc
xor
sub
aam
add
rcrb
sub
sbb
pop
sub
push
addr16
jne
cmp
push
lahf
out
and
test
pop
xor
gs
cmp
int
adc
stc
mul
inc
push
pop
adcl
mov
scas
mov
mov
push
inc
cmp
add
add
mul
cld
sbb
icebp
xchg
inc
ret
push
pop
and
lea
and
or
jae
fs
daa
ja
lea
xchg
pop
jp
fdivp
pop
mov
addr16
loope
pop
mov
inc
or
sbb
pop
ja
test
and
mov
jae
std
jl
cli
fdivrs
fisubs
aaa
outsb
insb
pushf
sub
addb
jecxz
and
push
bswap
jnp
jmp
or
mov
sbb
jbe
jle
mov
cmp
incl
cmpsb
incb
ja
adc
and
into
loopne
push
movsl
pop
mov
push
add
into
frstor
mov
or
outsl
push
push
imul
es
popa
in
cmp
dec
iret
bound
sbb
addb
mov
das
cmc
jge
pop
imul
add
or
fisttpll
fiadds
mov
jge
sbb
and
jmp
cld
sbb
call
enter
jb
and
into
fisubl
xor
stos
jns
push
daa
cwtl
mov
fstps
insl
jmp
loope
fxtract
jge
rcll
cmpsb
dec
data16
sub
push
seto
lcall
xchg
dec
pop
push
ss
insl
iret
lret
lods
lcall
dec
movsb
sbbb
cmp
idivb
push
xor
jns
leave
aaa
pusha
pop
daa
add
and
lea
mov
or
es
aaa
cmp
jo
ja
mov
pushf
push
or
or
dec
push
push
mov
ja
jg
jbe
out
test
outsl
cmp
cmc
daa
mov
push
jne
mov
in
unpckhps
jl
lock
adc
lret
jae
and
dec
lret
sbb
pop
cltd
xor
sti
adc
loopne
scas
cwtl
mov
push
dec
vminss
cld
out
xor
in
vandps
leave
adc
rorl
mov
cmp
jmp
or
pop
fimuls
push
mov
mov
jge
dec
cltd
xchg
xlat
mov
and
jl
pop
nop
into
ss
jns
shrl
xchg
xchg
inc
int3
add
ret
mov
ss
mov
xchg
in
out
sbb
mov
or
scas
dec
xchg
into
mov
pop
mov
push
dec
out
fs
test
shll
shll
mov
inc
ret
cmp
mov
dec
js
add
les
je
mov
inc
test
gs
inc
xchg
push
fcomi
loop
stos
jb
fistpl
andl
mov
sbb
gs
ret
clc
jle
in
pop
push
filds
lods
popl
adc
bound
pop
xor
cs
jge
cld
test
inc
in
cltd
adc
inc
add
int
fistpl
stc
pop
iret
int3
aas
xorb
in
xchg
js
lods
xchg
cmpsl
in
mov
loopne
or
dec
mov
sbb
add
sti
lret
daa
and
shr
ss
les
sbb
js
mov
lret
push
aam
dec
std
adc
dec
jmp
das
pop
add
pop
sbb
cwtl
jecxz
sub
and
cld
mov
imul
mov
ret
jno
mov
sti
pushf
fs
and
mov
push
mov
fs
inc
test
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
