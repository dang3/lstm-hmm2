orl
xor
dec
add
add
int3
adc
xor
sub
adc
and
aas
negb
movsl
gs
adc
jae
mov
mov
push
sahf
xor
popa
outsl
mov
mov
push
fcomps
xchg
jg
xlat
pop
fstl
mov
push
mov
inc
dec
xor
jge
fsts
loope
adc
pop
ljmp
shlb
mov
lods
mov
jl
add
jp
mov
mov
pop
jecxz
xchg
jns
out
scas
pushf
push
aaa
dec
cs
lret
gs
movsb
push
out
mov
jmp
sti
stos
incb
cmp
mov
ja
sti
push
sbb
nop
test
out
mov
sarb
push
mov
mov
xor
mov
cltd
div
cmp
jb
insb
mov
iret
dec
call
enter
in
xor
xchg
pop
dec
lods
adc
xchg
cmp
and
xor
rcr
rorb
int
aam
or
pop
mov
imul
fimull
add
test
shlb
arpl
jge
movb
jmp
hlt
dec
and
iret
push
pop
and
xlat
les
jp
jb
inc
and
adcl
inc
fstp
pop
imull
xlat
enter
clc
outsb
add
out
int3
mov
xchg
sbb
out
int3
outsb
hlt
sub
cmpsl
fwait
cmpsb
pushf
jno
cwtl
push
mov
loopne
xor
lret
push
push
stc
add
outsl
jl
pop
cwtl
inc
xchg
pop
jbe
or
popa
mov
jno
sarl
dec
dec
sub
stos
dec
out
fnstcw
push
stc
mov
add
insb
repnz
xchg
mov
mulb
xor
mov
mov
xchg
mov
adc
push
sub
xor
mul
pop
int
mov
dec
or
xchg
pop
movsb
xchg
pop
scas
das
jnp
add
cltd
inc
jne
xchg
jg
int
in
aaa
push
ja
ss
into
sub
in
rorl
cmp
mov
xchg
das
mov
xchg
in
cmp
pusha
add
sahf
outsb
or
sub
lcall
xor
ror
outsb
xchg
imul
push
jns
inc
pop
in
pop
adc
je
add
add
fildl
lcall
jno
cmp
mov
jle
push
into
pushf
movsb
mov
pop
cmp
or
jg
int
and
push
push
addr16
xchg
movsl
push
dec
rorb
incb
xchg
out
movl
jbe
lcall
cmc
add
jg
cwtl
test
in
mov
cmpl
arpl
leave
xchg
andb
nop
fs
dec
scas
fistpl
jae
cmpsb
sbb
popf
test
mov
dec
outsl
aam
jle
insl
dec
mov
pop
push
dec
ficomps
aad
sti
xor
sbb
xchg
in
rolb
enter
aas
mov
pop
mov
and
lret
lds
int3
fmul
mov
push
add
test
pop
loopne
out
cltd
sbb
aam
jg
subb
call
and
test
pop
push
aaa
inc
xor
or
int3
cld
or
cmpsb
ss
mov
xor
sub
mov
mov
mov
pop
mov
imul
movsb
leave
es
fiaddl
call
cmp
sbb
mov
push
lods
sub
out
lods
or
mov
or
and
mov
mov
push
sbb
ret
in
in
or
jne
dec
mov
mov
fucomp
ficoms
dec
imulb
lret
es
inc
cltd
pop
mulb
clc
lahf
mov
iret
or
and
push
mov
insb
and
xchg
fimuls
mov
add
jno
mov
inc
je
inc
jmp
cmp
mov
sbb
lods
out
test
ret
sarl
jmp
jne
jecxz
add
call
pop
lss
pop
sbb
jg
cmp
sbbb
push
mov
sarb
stos
xor
jecxz
lret
mov
stc
sub
jbe
adc
lcall
mov
jle
jno
xchg
arpl
leave
jg
leave
shr
std
shl
loopne
sub
mov
add
xchg
jo
stos
lods
gs
fldl
mov
nop
sbb
fiadds
and
sahf
aas
nop
sbb
and
mov
lret
andb
xor
sbb
mov
dec
scas
lret
imul
mov
sahf
std
xchg
popf
in
fwait
stos
in
test
adc
hlt
sub
dec
mov
pop
cmp
jle
sub
lock
xchg
je
inc
ljmp
faddl
xchg
add
cmp
loop
add
mov
adc
dec
jnp
xchg
dec
and
sti
cmp
mov
sti
repz
movsl
dec
stos
lds
inc
cli
mov
adc
shll
pusha
pop
lret
fidivl
bound
out
dec
mov
push
leave
sbb
stos
xchg
inc
xor
cmpsb
dec
dec
pop
mov
stc
pop
cmp
imul
es
add
enter
stc
stc
and
fsts
xor
dec
sbb
in
lahf
cltd
repz
sahf
mov
sbb
pop
in
mov
repnz
std
cmpsl
adc
cmp
mov
in
jle
nop
imull
hlt
bound
xchg
les
in
shlb
mov
mov
and
xor
mov
lea
cmp
sbb
popf
or
sarb
int
fildl
in
xchg
dec
lcall
inc
xchg
lds
cmp
cmp
rcl
cli
xor
mov
push
clc
imulb
lods
popa
mov
adc
push
clc
mov
cwtl
out
ja
mov
cmp
jno
jae
imull
and
push
lock
int3
cmpb
jecxz
pop
shrl
and
test
push
mov
and
in
sbb
js
push
push
cmpsl
loop,pt
and
xor
xor
push
cmp
xchg
mov
lcall
frstor
adc
or
and
mov
add
int
ret
dec
jmp
leave
vpminud
movsl
les
repz
imul
mov
movsb
dec
add
sbb
fsubrs
sbb
xchg
xchg
cltd
sahf
pop
or
push
cmp
or
lods
jno
inc
lock
stos
popa
test
pop
das
leave
xlat
mov
sub
mov
cmp
jp
push
sub
icebp
cmp
jge
mov
aas
xchg
test
icebp
dec
push
sbb
sub
aaa
lret
mov
pop
sarb
sahf
sub
push
cmp
arpl
out
dec
idivb
dec
inc
sbb
dec
enter
sbb
mov
jmp
sbb
cmc
mov
mov
mov
arpl
pop
cmp
dec
xchg
push
xor
or
and
cmp
sbb
daa
loopne
push
sub
lcall
icebp
and
lods
dec
add
outsl
testb
rclb
out
and
sbb
push
ss
cmp
scas
xchg
in
mov
cwtl
stos
icebp
bound
mov
insb
mov
dec
outsb
mov
xor
xor
fisttpl
or
sbb
adc
popf
outsb
jmp
in
jo
jge
movsb
mov
andl
mov
sbb
xchg
loope
data16
repnz
gs
sahf
pop
imulb
add
and
pop
cmp
sub
pop
scas
xor
and
fstpl
test
insb
sbb
stos
adc
test
das
push
jp
cmc
leavew
popf
stos
push
or
mov
lds
mov
movsb
scas
faddl
lods
bnd
sbb
jmp
mov
jecxz
mov
pop
pop
mov
xor
lock
imul
scas
xor
add
mov
gs
je
int3
out
xchg
mov
or
divl
sbb
ds
stc
and
shrl
xor
sarl
mov
add
ds
test
loopne
scas
or
fmul
jb
cmp
in
mov
aaa
roll
xchg
and
leave
aaa
pop
xchg
scas
ja
xchg
dec
imul
dec
xchg
dec
push
add
dec
ja
cs
mov
fsts
mov
cmp
jp
popf
data16
stos
loop
inc
inc
push
ljmp
iret
aam
mov
and
push
xor
lods
movsb
std
pop
scas
or
sbb
addb
lcall
add
xchg
sbb
jbe
sti
push
insl
adc
mov
lock
push
stc
sub
stc
ja
and
jo
jns
dec
mov
adc
xlat
fcomps
mov
cmp
push
stc
bound
out
jne
adc
cmp
add
es
pop
inc
ljmp
mov
in
adc
test
inc
aaa
fwait
mov
roll
fdiv
test
ret
out
in
aaa
jns
pop
mov
dec
jb
xor
xchg
mov
daa
jg
or
mov
or
aaa
dec
icebp
aas
sub
test
and
push
or
xlat
sub
loop
ret
mov
mov
jns
test
push
int
fwait
outsl
mov
xchg
fstpl
mov
pop
mov
sub
cmp
lock
mov
sub
rorb
or
adc
repz
lods
mov
mov
aad
mov
mov
xor
push
aam
xchg
sbb
out
hlt
in
and
pop
adc
mov
xor
xor
cmp
stc
mov
xor
cmpsl
xor
dec
stc
sub
sub
sbb
mov
jg
mov
add
arpl
inc
dec
jl
test
fcompl
outsb
adc
out
cmp
gs
popf
xchg
xor
in
loopne
out
xchg
lret
inc
or
mov
and
push
in
pop
outsb
cmp
scas
popa
rcll
ja
xchg
sahf
xchg
mov
test
jg
outsl
imull
inc
xchg
jo
fisttps
nop
jmp
rcr
imul
inc
fisubrs
and
or
cmp
clc
repnz
pusha
push
mov
loope
subb
pop
int3
add
and
ret
jg
test
orl
push
xchg
mov
mov
lret
pop
clc
fsubl
ja
mov
insl
pop
dec
add
lock
shrl
or
outsb
lea
and
cmc
add
sbb
dec
xor
testl
sub
shl
cmp
data16
mov
sub
add
push
in
cltd
outsl
cmp
movsl
data16
xchg
and
pop
fst
add
mov
mov
push
adc
jnp
push
ljmp
cmp
and
mov
dec
xor
out
push
andb
pusha
scas
mov
mov
lret
jo
xchg
mov
dec
jle
ja
dec
pop
push
data16
push
outsl
cmp
lea
out
push
in
mov
dec
xlat
rcr
cmp
loope
fwait
lods
in
mov
xor
pop
cmpb
stc
call
mov
adc
mov
mov
mov
loopne
push
mov
xor
es
repnz
inc
pop
sub
jmp
ret
jb
jmp
fdecstp
call
mov
adc
gs
mov
and
xchg
mov
fcmovnbe
in
xchg
cltd
push
repz
sub
icebp
pop
sub
nop
add
pusha
rorl
fmul
je
mov
pop
or
sbb
mov
dec
pop
add
fcomps
and
jecxz
push
and
cmp
push
cmpsb
cmp
inc
add
out
adc
aam
dec
cmc
inc
nop
ja
fidivrl
pop
add
push
shlb
xorb
xchg
inc
mov
fcompl
int
jl
in
add
cmp
fs
cmp
mov
idivb
jbe
mov
popa
adc
repnz
dec
out
push
sarb
nop
roll
outsb
cmp
and
imul
pop
mov
xchg
mov
arpl
movsb
loope
scas
pushf
and
inc
loop
je
test
xor
inc
sub
and
into
cli
sub
es
jle
mov
loopne
jb
and
shld
ss
ljmp
adcb
or
movsb
cmpsl
addr16
add
out
lcall
sbb
clc
mov
sti
mov
mov
fldcw
or
sbb
cltd
ljmp
push
cmp
cli
cli
shrb
ss
mov
xchg
bound
mov
pop
jne
insb
iret
adc
dec
loopne
sbbb
ret
pusha
push
js
sub
test
loopne
dec
xor
mov
pop
gs
inc
cmp
std
push
mov
iret
mov
and
mov
pop
push
and
ror
sbb
test
xchg
jne
arpl
sahf
mov
and
je
int3
jl
add
cmp
cmpsl
xchg
rorb
or
adc
xor
data16
mov
xchg
in
adc
insb
clc
sub
cmp
pop
lods
call
sbb
std
sub
aaa
bt
nop
add
mov
gs
icebp
fcompl
ret
xor
inc
dec
outsl
ret
mov
iret
in
mov
xchg
cmp
inc
pop
xchg
jae
std
mov
dec
cmp
pop
sbb
xchg
outsb
rcll
scas
push
lods
popa
repnz
sbb
hlt
push
or
push
sub
fnsave
or
daa
jb
sub
mov
pop
je
sub
loop
push
adc
add
or
cmp
adc
jmp
cmp
mov
push
jns
add
mov
jns
xchg
mov
adc
dec
stos
out
xor
movsl
cmpb
popf
stos
xchg
rolb
mov
pop
inc
jp
sbb
jo
add
xchg
or
sub
shrb
sbb
add
sarb
mov
push
in
test
ja
cmc
sbb
cwtl
sbb
add
fisubrl
add
out
pop
outsl
cmp
movsb
cli
or
add
and
movsl
fnsave
and
xor
xchg
jo
jno
ss
adc
push
aad
cld
lret
sub
popa
jle
in
std
call
notl
arpl
cmpsb
xchg
leave
xor
test
mov
jle
or
mov
sahf
lcall
shrb
loopne
and
sti
dec
add
xchg
cs
jae
ficomps
inc
push
fstpl
daa
mov
outsb
int3
push
or
lods
xchg
add
mov
fstp
xor
clc
fsqrt
cmp
xchg
movsl
ja
and
jb
sub
jns
xlat
int3
loope
cmc
ljmp
rclb
xchg
repz
scas
shl
mov
or
pushf
sbb
pop
cld
lea
popa
sub
call
in
shr
pop
rolb
daa
call
pop
inc
lds
test
push
xor
in
mov
jl
faddl
xor
repz
mov
adc
jg
insl
popf
dec
push
call
fdivrl
xlat
ljmp
inc
leave
pop
jmp
mov
sbb
and
sub
pop
sub
ljmp
mov
add
push
mov
lret
inc
iret
aas
push
or
push
lock
lds
in
pop
ror
xor
in
in
out
dec
call
loope
mov
sbb
fwait
cmp
jne
mov
dec
addb
arpl
xchg
xlat
xchg
mov
adcl
mov
lock
jo
pop
daa
push
sbb
cmp
in
iret
adc
decb
sub
iret
aam
andb
out
addr16
pop
sbb
jbe
int
add
rorl
jl
inc
hlt
pop
int
mov
inc
xchg
int
inc
insb
les
int
pop
sbb
xchg
inc
jb
jae
xor
nop
jecxz
mov
enter
int3
xchg
sti
pop
jp
mov
adc
movsb
mov
fadds
fmulp
push
fbstp
cmp
movsl
cmp
ret
push
xor
ja
jge
or
hlt
adc
inc
xchg
xor
or
jl
mov
sbb
aaa
mov
mov
fadds
dec
test
sbb
push
lahf
and
jne
out
mov
adc
scas
push
push
cmpsl
jns
xchg
mov
pop
mov
mov
ss
push
and
push
aam
sub
call
mov
lock
sarl
dec
dec
jmp
cmp
sbb
ss
jns
out
cmp
fs
xchg
dec
jae
fmull
push
sub
sbb
sub
imul
data16
out
sub
sub
nop
pop
mov
cmp
mov
repz
es
movsb
or
shrb
test
cmp
push
xchg
dec
inc
jle
add
in
iret
cmp
into
data16
mull
lahf
pop
mov
mov
and
add
aam
mov
jecxz
cwtl
or
addr16
mov
inc
adc
js
mov
and
ss
jle
aas
movsb
cld
cmpl
stc
cld
sbb
stc
xchg
pop
jb
xchg
mov
add
insb
pusha
cltd
dec
dec
inc
add
cmp
dec
and
inc
xchg
mov
fs
outsl
mov
inc
hlt
das
lods
and
push
test
xchg
mov
ret
xor
push
leave
pop
pushf
or
roll
notl
xchg
mov
sbbl
push
popl
and
xchg
das
inc
pushf
ret
sbb
pop
sbb
inc
push
mov
out
jmp
jo
jbe
lods
mov
add
pop
cmp
adc
xchg
inc
sbb
imul
push
in
ljmp
fidivrs
mov
jp
sbb
nop
mov
sub
mov
mov
adc
loop
mov
adc
lcall
jecxz
adc
adc
repz
andb
mov
stos
pop
and
les
lahf
hlt
std
pop
or
mov
icebp
cmp
adc
mov
mov
sub
lods
lods
mov
cmp
push
jne
lcall
imul
mov
adc
sarb
adc
push
xlat
mov
jecxz
sub
mov
out
std
cld
xchg
stos
mov
inc
cmp
out
cmpsl
into
pop
jg
pop
in
lahf
clc
inc
lds
in
push
mov
popa
sbb
loop
lret
in
sub
movl
inc
xor
mov
push
push
mov
sbb
inc
jo
mov
lods
jle
xchg
inc
add
xchg
push
mov
sbb
outsl
or
clc
fsqrt
mov
cmpb
cltd
or
xchg
sbb
pop
xchg
push
loop
cmp
cs
testb
stos
adc
mov
dec
enter
and
inc
inc
xchg
push
pop
cltd
rcrl
cwtl
inc
fs
scas
sahf
sub
aam
movsb
mov
inc
and
cmpsl
popf
pushf
sbb
in
push
jns
lds
or
js
dec
loope
xor
or
cmp
push
lods
lods
inc
lds
adc
out
sub
orl
push
or
test
stc
add
call
in
rcll
xchg
dec
sti
push
lock
out
test
bnd
loop
lea
sub
inc
inc
pop
fimuls
mov
shrb
imul
dec
pop
push
and
aaa
insb
das
lret
sub
shl
push
inc
mov
pop
xlat
mov
dec
cltd
ds
mov
pushf
popa
pop
dec
das
add
cmp
xchg
jg
pop
jecxz
int
cli
out
dec
lds
adc
call
pusha
imul
cmpsl
fsubl
andb
pop
aam
mov
jle
popf
jns
data16
pop
mov
cmpb
adc
aad
inc
jo
sub
cwtl
dec
mov
add
fstl
je
jge
xchg
adc
dec
push
in
popa
imull
add
test
add
subl
push
xor
mov
out
das
xchg
mov
stc
fisttpl
push
add
or
loop
jl
rcll
cmp
shll
cwtl
or
mov
lahf
imulb
repnz
out
mov
loopne
dec
mov
js
test
inc
sub
pusha
fiaddl
outsl
sbb
mov
sub
sbb
push
jne
in
add
mov
xchg
and
cmpsl
mov
les
leave
mov
pop
push
pop
sahf
cltd
jo
inc
ja
mov
mov
jmp
dec
adc
icebp
das
lock
movsb
xchg
sahf
add
inc
mov
jo
scas
inc
insb
push
adc
pop
dec
loope
push
ljmp
push
cli
aam
dec
loop
push
call
jp
popf
out
mov
test
std
pop
adc
mov
mov
xchg
pop
inc
testl
loope
pop
movsb
add
mov
sbb
add
adc
sbb
push
or
and
mov
test
mov
cmp
out
sbb
xchg
fstps
mov
add
fbstp
cli
int3
xlat
call
push
sub
inc
pop
lret
adc
sub
jno
fs
hlt
test
dec
std
test
sbb
pop
xchg
je
cmc
aad
push
cltd
pop
daa
ja
bound
and
add
fldenv
sub
outsb
out
fildll
std
sub
fcomps
pop
out
ffree
ficomps
or
ret
fnsave
xchg
data16
mov
pop
iret
dec
pop
push
outsl
adc
ss
es
push
mov
xchg
stos
aam
aas
xor
fidivs
xchg
movsb
inc
cmp
lods
mov
hlt
fs
sbb
pop
mov
int
sbb
sub
ret
ss
ja
into
sub
dec
mov
mov
or
or
ja
aad
arpl
ds
dec
js
imul
mov
mov
aaa
int3
cmpsb
repnz
cmp
pop
xor
dec
jnp
sub
pop
ror
dec
out
pop
mov
pop
cmpsb
cmp
insb
fisttpl
xchg
jbe
loop
mov
sbb
lea
dec
cld
in
and
fidivs
cmpsb
std
bound
iret
stc
loopne
arpl
mov
es
fists
mov
mov
xor
test
push
outsb
iret
pushl
std
je
bound
shl
jns
inc
push
sbb
lret
idivb
rcrb
lret
jmp
test
push
lea
xchg
pop
and
inc
mov
pop
cmpsb
xor
or
push
loopne
fistps
test
cld
push
jl
add
lea
xlat
shl
xor
push
fisttpll
loopne
mov
xor
dec
dec
in
xor
int3
cmp
or
popf
das
inc
dec
repz
jns
fadd
std
enter
or
daa
ret
adc
pusha
jns
sub
mov
push
xchg
lret
aad
push
fidivl
aaa
or
xor
push
notl
sahf
dec
daa
gs
pushf
in
mov
pop
aad
jmp
rcrl
dec
outsb
add
mov
cld
aam
aad
sbb
pop
sbb
test
and
fucom
push
and
cmp
popa
pop
loop
setne
add
jle
rorb
aad
or
pop
add
jmp
in
aad
ds
jb
push
rcr
mov
data16
inc
pop
sub
jne
xor
adc
jbe
and
pusha
fs
sub
inc
jle
xchg
into
lahf
push
xor
xchg
ret
gs
lock
adc
loope
aaa
aas
or
sbb
mov
ret
es
call
das
sbb
stos
loope
unpckhps
sbb
cmpsl
jecxz
cmp
lahf
dec
sub
aas
rclb
jmp
jae
inc
cwtl
inc
mov
sub
inc
enter
movsb
scas
fstpl
pusha
adc
push
or
packuswb
jo
pop
pushf
push
mov
inc
outsl
push
mov
mov
mov
in
jno
rep
mov
outsl
ret
or
lods
in
shrl
imul
pop
out
pop
dec
scas
in
cmp
xchg
mov
pop
stos
loopne
dec
push
lock
mov
push
xchg
loopne
test
push
imul
mov
scas
shrb
push
sahf
cmp
into
paddb
stos
push
cmc
dec
aad
ds
adc
je
jmp
mov
lock
push
lods
inc
stc
or
movsl
rol
in
inc
cmpl
loope
jb
aaa
mov
sarb
add
in
push
push
lods
mov
adc
dec
add
adc
stc
insb
call
cmpl
rcrl
inc
jbe
lahf
jno
pop
incl
xchg
imul
aam
aam
add
fwait
sahf
sbb
adc
outsb
out
lods
and
jg
mov
cmpsb
int3
sbbl
mov
and
rorl
sub
adc
dec
and
jae
jle
pushf
dec
push
movsb
jb
mov
and
ficoms
dec
jmp
orb
aam
cmp
ror
xor
add
and
mov
aaa
repnz
mov
ret
test
mov
adcl
ljmp
xor
in
aaa
xchg
scas
mov
in
ds
sahf
mov
jno
mov
fdivl
pshufw
les
cld
dec
shlb
cmp
jne
mov
idivb
dec
cwtl
add
cwtl
ret
and
fcoms
mov
fidivl
jnp
dec
fiaddl
repnz
sbb
pop
jp
dec
cs
mov
jne
push
loop
dec
divb
adc
mov
fs
int
xor
adc
adc
push
int3
jns
pop
inc
xchg
mov
in
popa
xchg
stos
or
and
in
jle
jns
jae
into
cmpsb
loopne
pop
jl
aas
sub
arpl
jle
jle
sbbb
pushf
sahf
dec
js
pop
lods
mov
out
fisttpll
in
fldcw
jb
rorl
shlb
outsb
cmp
sub
mov
mov
loope
and
mov
jl
mov
aas
sahf
sub
push
fdiv
das
mov
scas
jmp
fbld
cmp
fsts
jns
pop
movsl
pop
mov
aas
rcr
sbb
ljmp
dec
xchg
add
loope
xchg
add
jecxz
inc
mov
sahf
popa
les
adc
enter
popa
and
adc
call
jae
jle
cmp
dec
sbbb
push
insl
cli
sub
xor
pop
mov
sub
jl
inc
loop
sub
mov
fstpl
dec
sti
ret
in
ds
leave
adcb
and
aaa
cld
add
push
xchg
xor
js
lea
dec
les
ljmp
xor
ljmp
mov
sahf
jno
lahf
hlt
dec
in
in
ljmp
mov
leave
insb
insl
dec
mov
inc
mov
cld
mov
add
add
xor
inc
arpl
mov
int
dec
adc
pusha
psubd
dec
xor
mov
push
das
lods
adc
adc
cld
push
xor
pop
ljmp
ljmp
lock
ja
imul
mov
fcmovnu
outsb
scas
andb
cmp
jnp
xor
jns
data16
mov
push
enter
mulb
lcall
mov
andb
add
jge
shlb
mov
mov
fildll
out
sahf
iret
cmpsl
jne
fstpl
cmpsl
cmp
imul
inc
shl
xor
push
jae
mov
pushl
push
loopne
std
bound
loop
les
and
addr16
dec
enter
pop
idivb
sti
add
sahf
adc
sub
inc
add
faddl
icebp
adc
popf
insb
xchg
xor
cmp
pop
es
psubusb
push
adc
sbb
add
mov
aad
rorb
cmove
push
mov
sti
stc
orl
jg
and
mov
jno
pop
sbb
shl
rcrl
test
pop
gs
leave
xchg
add
dec
cmc
dec
sbb
div
lock
pop
cmpsl
pop
push
lds
add
jns
ljmp
pop
test
xchg
xlat
call
xorl
hlt
out
pop
jl
cmpsl
dec
lea
in
loopne
push
push
lock
hlt
js
test
repnz
std
pusha
inc
icebp
ret
fs
cmp
andl
cmp
push
stos
ficoml
es
adc
mov
jns
add
push
out
stc
add
and
int
jecxz
pop
inc
in
sbb
call
movsl
aad
inc
subb
ja
fisttpl
inc
cs
movsb
aas
fs
int3
fildll
jae
pop
js
bound
jecxz
mov
push
xor
add
fisubl
pop
mov
rorb
movsl
repz
mov
pop
xor
sub
xchg
sbb
xchg
add
push
add
lods
add
pop
jne
inc
in
inc
repz
xor
adc
sub
mov
xor
adc
fnstenv
mov
loopne
movsl
mov
in
jmp
mov
jns
test
scas
mov
pop
mov
push
push
adc
inc
imul
popf
push
fimuls
push
mov
sbb
pop
mov
int3
jmp
mov
mov
push
pop
sub
jns
xchg
repz
sub
pop
pop
es
cmp
push
mov
push
int3
ljmp
into
xor
clc
ret
jle
ret
scas
shlb
sub
cmp
pop
sbb
cmp
mov
xchg
ret
cmc
cld
sarl
bound
inc
cli
sub
xor
xchg
rclb
sbb
pop
shlb
ds
sbb
stos
fisubl
cmp
dec
icebp
cmp
psubd
adc
in
fwait
fwait
add
mov
adc
xchg
adcb
inc
push
test
loop
push
dec
testb
xchg
dec
movsl
dec
xchg
sub
sbb
int3
int
andl
shlb
imul
cmpsl
or
lret
loope
dec
adc
inc
and
mov
or
lcall
pusha
sbb
jl
mov
cwtl
sbb
in
cs
sbb
dec
imul
xor
leave
mov
lods
jl
outsb
add
push
loopne
jns
aaa
xlat
xchg
and
mov
xor
popf
pop
fcomps
subb
push
pop
outsl
mov
mov
hlt
mov
test
push
sbb
mov
sbb
ljmp
je
hlt
sarl
out
lahf
iret
dec
insb
rcrb
fdiv
pop
clc
or
jo
xor
jnp
daa
inc
pop
mov
sar
mov
js
push
ljmp
dec
icebp
out
rcll
lcall
test
xor
and
lods
mov
adc
and
cmp
pop
loope
dec
sbb
mov
repnz
testb
sub
call
and
lods
lret
jns
jne
ja
fistps
shl
clc
ret
and
push
xchg
int3
jb
xor
pushf
loope
in
dec
addb
push
jle
lds
xchg
and
ja
push
cmpl
and
dec
mov
jno
mov
fcoml
cmp
cmc
cmpsb
push
pushf
test
test
sub
sar
mov
lods
inc
jle
sarl
or
push
mov
movsb
jns
shrb
cmp
icebp
inc
lods
cmp
movsb
inc
push
mov
jge
call
addr16
sahf
aas
je
lret
add
or
mov
add
jne
pop
jp
sub
loop
aas
daa
test
cltd
or
iret
test
rcr
aas
sbb
je
xchg
jecxz
and
lret
out
ss
test
mov
xor
aad
push
lret
adc
enter
jg
mov
mov
sahf
insl
data16
sti
shlb
jae
aam
cs
loop
mov
in
xor
pop
push
pop
aam
test
test
lret
jg
xchg
call
inc
pop
adc
movsb
dec
sub
lods
insl
pop
xor
int
fisubrl
jnp
cs
xchg
xor
xor
xchg
sarb
push
jns
aas
cwtl
or
stos
insl
mov
sub
push
pushaw
lods
and
ljmp
cmp
in
ret
push
mov
jle
cmp
xor
test
mov
or
xchg
mov
pop
jg
pop
test
int
pop
call
xchg
popa
das
cmp
cmp
fidivrl
les
mov
dec
pop
mov
push
dec
pop
mov
ds
mov
out
push
dec
jge
mov
std
scas
cli
and
andb
adc
inc
pop
cli
imul
pop
push
mov
in
pop
lret
add
push
or
fwait
mov
lea
clc
fucomp
xor
shll
sub
call
fcomps
dec
pop
push
jp
test
lods
jg
pop
adc
and
jp
flds
arpl
or
fs
adc
cmp
mov
int3
enter
jmp
pop
cmp
dec
mov
sbb
imul
jge
xchg
mov
in
shll
addb
push
xor
mov
jb
sbb
pop
out
dec
int3
sub
fmull
jo
fnstcw
in
fbld
push
fsubs
bound
xor
imul
and
push
dec
jecxz
fcomps
push
nop
testl
ret
cwtl
inc
sbbl
aad
aas
add
mov
stc
or
and
push
iret
xchg
lds
fxch
add
out
jle
jae
fcoms
xchg
mov
jl
out
or
sbb
inc
stos
pop
fcomp
insb
orb
in
xchg
rcrb
cmc
mov
dec
int
jl
int
mov
insb
cmp
sahf
jo
inc
jb
sub
cltd
outsb
loop
jmp
cs
mov
sub
push
scas
pop
add
fldcw
pushf
outsb
jno
push
sub
push
sbb
xchg
jne
sbb
pop
cmp
pop
in
and
repnz
pop
dec
scas
les
in
jp
test
lds
mov
out
mov
cmp
aaa
inc
pmulhuw
or
adc
out
imul
test
popa
sub
pop
popf
or
mov
jno
pop
push
in
jp
sarb
xchg
stc
aad
aaa
jne
xchg
xchg
cltd
dec
sub
fstp
rcrb
push
shlb
or
and
vpinsrw
fldenv
sti
call
dec
and
lea
outsl
cmp
imulb
enter
xor
inc
cmp
mov
xchg
faddl
repz
sub
push
mov
ja
xor
icebp
or
pop
mov
outsw
sub
sub
arpl
lds
sbb
add
inc
push
sub
xchg
and
fadds
push
bound
push
jb
scas
inc
shl
call
cmpsb
add
mov
aaa
pop
mov
out
pop
and
nop
dec
call
jp
js
mov
push
xchg
xlat
divl
insl
pushf
sub
ss
addr16
mov
pop
test
fnstcw
sbb
aam
inc
movsl
xor
lcall
sub
je
test
xchg
push
pusha
test
push
push
arpl
imul
fyl2xp1
jmp
xchg
cld
inc
jp
pop
xor
xor
sub
ljmp
jnp
ds
orl
mov
test
xchg
inc
lret
mov
mov
pop
fcoml
cmpsl
insl
xchg
cmpsl
pushf
movsb
mov
push
push
inc
jecxz
inc
and
or
sbb
imulb
inc
mov
add
setbe
popa
fisttpl
xchg
mov
cmpsb
movsb
test
js
insb
mov
cmpsb
lsl
int3
lcall
mov
and
sub
jne
fs
adc
mov
and
loop
loope
lahf
fildl
sub
das
cmp
ss
leave
dec
cwtl
les
push
fldenv
bound
test
icebp
subb
stc
in
bound
add
pop
out
mov
test
lahf
sub
mov
jp
addr16
or
iret
aad
dec
xor
stos
adc
mov
jnp
jbe
js
dec
clc
gs
add
mov
jno
call
fndisi(8087
or
lret
loopne
sub
xchg
push
out
or
in
push
inc
add
in
fildl
push
call
dec
jmp
adc
pop
cmp
dec
xchg
lock
das
out
mov
pop
push
inc
shl
sbb
push
and
nop
mov
push
in
in
pop
pop
dec
insl
push
sar
leave
add
fdivl
sbb
movsb
fcompl
out
mov
mov
or
or
cmp
ret
sbb
js
lods
inc
test
cli
shrb
out
call
lea
addr16
adc
sbb
ret
pop
sbb
pop
outsb
scas
dec
push
sbb
jbe
dec
mov
push
sbb
int3
sbb
ret
or
movsl
sub
ja
push
mov
in
jmp
push
xchg
cmp
bound
insl
je
test
nop
cltd
inc
xor
mov
xor
push
mov
lock
push
push
cld
or
inc
pop
ljmp
cmp
ljmp
insl
arpl
xchg
outsb
stos
hlt
sbb
push
fidivl
cld
clc
stc
mov
xchg
jge
aam
jg
mov
mov
xor
mov
iret
data16
xor
call
dec
lock
ljmp
mov
ret
test
lahf
gs
and
fs
mov
dec
out
adc
mov
aam
inc
es
pop
xchg
int
shl
js
or
lcall
pushf
or
fcmovne
mov
sbb
xchg
add
sarb
daa
movsb
sbb
pop
or
inc
aad
dec
gs
push
xor
push
xorb
mov
call
cltd
outsl
cmpsl
insb
inc
clc
scas
xorb
addb
push
dec
push
sub
call
stos
cmpsb
ljmp
movsbl
and
mov
js
sbb
inc
or
xlat
mov
mov
out
ds
loopne
insb
mov
inc
push
dec
sub
or
xor
mov
mov
sbb
int3
aaa
es
xchg
xchg
adc
enter
ret
sbb
add
cltd
fsubl
jb
mov
push
cmp
or
push
jae
inc
and
or
add
ss
scas
iret
jns
ss
mov
push
inc
popl
enter
push
xor
jge
imull
cmp
or
lds
fidivrs
adc
jmp
in
test
fistpll
js
add
cld
subb
mov
ret
jne
mov
ret
push
jae
cmp
pop
mov
sbb
loope
test
jne
mov
jbe
mov
mov
xchg
xchg
fld
xchg
mov
jmp
inc
lea
aas
mov
loope
cltd
ss
mov
aad
pop
inc
call
mov
insb
adc
and
cli
ljmp
rorb
jmp
mov
sub
lea
insb
cmpsl
adc
push
mov
scas
mov
push
mov
aam
inc
jno
int
push
lock
repz
jl
mov
sbb
arpl
ss
cmpsb
int3
and
sub
shl
cmp
push
sub
lret
mov
and
stos
and
xchg
mov
mov
loope
adc
aas
mov
mov
mov
nop
or
sar
fdivr
enter
fists
sub
call
add
xchg
xchg
or
and
adc
sub
lods
dec
mov
ds
aas
xchg
inc
sbb
xor
dec
pop
fisttpl
cwtl
xor
test
push
xchg
sub
mov
shll
repz
mov
lock
scas
je
adc
jnp
subb
es
mov
pop
adc
out
ret
jo
and
scas
add
mov
gs
sbb
push
call
sub
test
loope
hlt
xchg
xchg
mov
das
jg
aaa
cmp
push
cli
rclb
push
pusha
sti
nop
jnp
cs
fs
pop
add
push
lock
and
mov
fisttps
inc
das
popf
out
test
lods
mov
sbb
mov
inc
ds
dec
xchg
jg
bound
mov
cwtl
cmc
movsl
mov
xor
jge
mov
int
inc
or
xchg
mov
out
clc
lcall
sub
repz
jp
sub
pushf
xchg
jno
rcrl
mov
addb
in
jge
ret
lds
adc
test
xor
cmp
addr16
int
lds
and
push
stc
add
cmp
xor
jnp
mov
cld
sahf
push
jns
icebp
cmp
push
cmpsb
xchg
dec
into
clc
cmp
mov
mov
lahf
int
mov
pushf
xchg
inc
idivl
aas
arpl
add
push
fwait
sahf
jno
jg
outsb
xchg
sbb
xchg
ss
inc
push
ret
cli
pop
adc
dec
push
stos
cmpsb
js
insl
outsl
mov
mov
stos
out
xor
xchg
aad
pop
rorl
mov
into
mov
push
aas
aaa
sub
add
subb
mov
jne
out
testb
outsb
je
fimull
lret
lods
scas
cmc
movsl
sub
dec
xchg
jns
insl
out
mov
int3
and
out
dec
push
push
mov
bound
pop
cli
stos
xchg
lock
add
jnp
outsb
inc
xor
jbe
jmp
xor
xchg
pop
adc
imul
cmp
adc
ljmp
adc
es
stc
lods
mov
mov
xor
inc
into
inc
or
pop
lcall
and
sub
pop
es
mov
imul
dec
arpl
addr16
insb
lock
adc
mov
inc
imul
xlat
push
mov
rcr
add
jecxz
aas
xor
loopne
fs
aad
adc
add
cld
stos
pop
mov
pusha
cmp
or
loopne
xor
mov
jg
cmp
pop
lods
lea
cli
sbb
sbb
into
mov
mov
pushf
movq
les
lcall
rol
cmp
cmp
ss
mov
dec
ja
idivb
aas
mov
popa
pusha
or
cltd
pop
add
jecxz
push
jp
and
mov
mov
loopne
push
jbe
pop
stos
cmp
js
test
xchg
cmovno
dec
popa
xchg
jb
pushf
lahf
jp
jno
inc
mov
xor
sbb
mov
pop
sbb
push
pop
inc
adc
mov
stc
jo
dec
push
xchg
movl
hlt
sbb
pop
fcomp
or
ret
fdivrs
adc
xchg
jmp
mov
fsubrs
addr16
pop
lahf
shlb
clc
in
mov
shlb
pop
je
sbb
cmp
or
sarb
dec
adc
cmp
push
orl
inc
enter
cltd
xchg
xor
mov
xor
fimuls
scas
addr16
out
jnp
in
mov
pop
std
scas
pop
out
in
fimull
addr16
sub
pop
mov
lea
xor
push
out
outsl
out
push
gs
xchg
push
jns
cmc
add
inc
gs
mov
shrl
xor
sbb
jecxz
xor
ret
test
jle
popa
jecxz
int3
jbe
es
scas
sub
ret
ror
mov
ds
push
sbb
repz
xor
jp
mov
es
mov
adc
mov
dec
popl
cmpxchg
dec
xlat
cmp
inc
out
adc
arpl
xchg
pop
add
and
cmp
lret
cwtl
cltd
es
mov
push
mov
lock
inc
mov
mov
into
xchg
inc
insb
daa
daa
push
and
mov
fs
repz
lods
mov
stc
testb
andb
pop
sbbl
loope
jbe
hlt
jb
lcall
ret
inc
push
cltd
sti
lods
aas
jle
les
xor
lock
add
pop
bound
lock
ja
movb
fsts
lcall
push
mov
es
jo
sub
mov
pop
jge
mov
dec
mov
addr16
and
mov
aad
mov
movsl
adc
bound
xchg
les
aad
lods
stc
sbb
xchg
mov
or
xor
pop
arpl
xchg
sub
popa
bnd
dec
test
call
je
adc
lret
jp
jge
lcall
jnp
add
int
scas
out
add
push
pop
gs
ja
ja
sar
cltd
scas
fsubp
sub
imul
sub
sub
mov
repz
xchg
add
push
xchg
subl
popf
into
scas
inc
stc
call
push
sahf
mov
cltd
mov
shrb
sbb
xor
mov
mov
arpl
rcrb
outsl
adc
cmovle
push
mov
and
test
bound
int
test
xchg
leave
push
test
and
loope
fs
xorl
mov
mov
pop
mov
clc
push
cs
xchg
mov
imul
pusha
test
inc
popa
ljmp
xchg
mov
jnp
adc
mov
adc
pushf
int3
adc
mov
jns
aas
stos
inc
and
sbb
xchg
icebp
sub
sbb
aaa
fcoms
jb
or
lcall
jns
mov
jle
or
xchg
lret
and
daa
testb
xchg
sub
and
or
fisubrl
push
test
stc
xor
xchg
test
sub
push
incl
fnstsw
cmpsb
stc
adcl
testl
push
adc
jae
pop
mov
mov
pusha
das
dec
sahf
dec
jns
jle
mov
cli
clc
jbe
adc
jle
pop
stos
lods
cs
int
xor
mov
fisttps
ret
jnp
subl
scas
mov
clc
push
mov
dec
addr16
ret
jl
in
ret
cmc
lods
pusha
sub
cmp
sar
push
cli
mov
sbbl
pop
pop
push
sbb
inc
push
push
imul
in
mov
add
into
repz
adc
call
popa
inc
fs
sarl
addr16
ja
ss
out
mov
dec
fnstsw
and
push
dec
sub
scas
lret
lret
adc
cmp
push
ds
mov
mov
aad
cli
mov
xor
jmp
imul
adc
xlat
fucom
or
in
cmp
push
mov
das
push
and
popf
jne
loop
pop
inc
dec
and
es
add
scas
pushf
int3
fcomps
fs
addr16
stc
fwait
mov
adc
add
mov
push
and
jle
and
or
imul
je
and
xchg
lret
add
dec
addl
mov
mov
dec
push
jno
int3
xchg
sbb
jge
fisttpl
popa
push
mov
jge
mov
and
cmp
lods
sub
sbb
mov
push
push
sbbl
xor
mov
popf
mov
enter
mov
push
sub
movb
adc
push
jnp
push
adc
cltd
lods
push
fwait
subb
mov
scas
adc
cmp
insb
pop
inc
rcr
je
cmp
clc
xchg
sbbl
lods
xor
jo
xchg
popfw
sti
jmp
mov
push
icebp
std
mov
mov
jl
les
inc
clc
pop
cmc
cltd
sbb
cmc
rolb
inc
pop
pusha
mov
jecxz
sbb
je
pop
jnp
outsb
je
xchg
fimuls
sbb
adc
fsubs
sbb
cmpsb
mov
fdivrl
jg
jge
inc
and
inc
add
lock
xchg
mov
imul
in
stos
pop
cmp
mov
repz
sub
mov
test
xchg
adc
repnz
out
into
mov
aas
mov
sahf
stos
jle
cmc
outsl
jae
fs
xchg
or
jne
or
shll
push
fdivrs
repz
jns
aad
cwtl
movsb
sbb
clc
lock
sahf
ljmp
enter
stos
cmpsl
ror
jmp
mov
ret
aaa
and
xor
js
addr16
mov
movsl
mov
roll
stos
cld
hlt
push
push
pusha
mov
dec
push
or
sbb
push
lahf
test
cwtl
sbb
dec
loope
push
jmp
push
pop
aaa
das
pop
and
mov
sbb
daa
xchg
rol
jecxz
cmpsb
repnz
and
and
in
xchg
mov
mov
arpl
xor
cs
mov
stc
lahf
jns
fildl
xor
nop
mov
mov
mov
cs
popf
loopne
fwait
icebp
adc
xchg
gs
mov
int
fwait
pop
xchg
jbe
rcrl
cmpsb
jbe
push
sub
fs
pop
jns
rolb
sub
jno
jecxz
mov
lods
or
scas
clc
fcompl
sbb
aas
popa
dec
sti
sub
dec
pop
add
pop
push
cmp
jge
xchg
xchg
xlat
push
in
sub
inc
inc
ljmp
jge
lods
rolb
test
xchg
cmp
and
out
mulb
push
xor
bound
sbb
xchg
arpl
cmpsb
fldcw
cmp
jecxz
lds
insl
sub
xchg
xlat
les
jp
out
testb
lods
or
sarb
or
orb
jecxz
push
inc
test
jg
shlb
jp
jge
fcom
lret
cwtl
jmp
dec
pop
iret
lcall
sub
dec
push
lock
loopne
fisttps
addr16
movsb
stos
cmp
rclb
or
sub
add
int3
pop
sub
xchg
inc
iret
fsts
mov
dec
sub
cmpsl
xor
lret
push
pushf
jp
cmp
jp
fsts
push
mov
scas
inc
xor
sub
pop
and
fs
in
icebp
mov
pop
mov
mov
fidivl
shlb
pop
sahf
std
test
test
arpl
and
insb
xchg
add
inc
js
lret
arpl
orb
aaa
sub
push
xchg
loop
mov
dec
movsl
dec
cltd
out
adc
loopne
and
pushf
adc
add
ss
aam
adc
pusha
scas
xchg
das
stc
sbb
je
into
mov
add
push
add
pop
jl
ss
daa
or
lcall
xor
fucomip
jecxz
mov
movsl
add
sbb
popf
fbstp
jb
shlb
sub
pop
int3
aaa
dec
fsubr
fcmovnu
xchg
adc
mov
aas
mov
repnz
lock
dec
ja
ds
int
fstpt
rol
adc
leave
jl
jnp
roll
iret
lcall
fs
mov
rcr
xor
pop
jbe
xchg
test
pop
stos
mov
dec
dec
xor
jb
aam
stos
or
stos
lock
jae
mov
pop
ficoms
adc
mov
dec
jb
or
xor
repnz
cltd
rol
es
xor
call
pusha
dec
push
lds
push
out
loop
or
cmc
popf
jo
nop
adc
adc
sub
xlat
test
mov
shll
mov
xchg
loopne
incl
stc
inc
repnz
fldt
cli
sbb
ret
aad
std
pop
sub
adc
push
mov
fbld
aam
cmp
jecxz
xchg
imul
repnz
rcrb
notb
dec
in
sub
and
ja
int3
jae
xchg
out
cli
dec
adc
cmp
sbb
mov
leave
jnp
pop
sub
push
ja
imul
insl
jmp
sbb
rorb
shll
xchg
mov
mov
ret
pop
fnstenv
adc
lret
divb
roll
sbb
test
lods
cmp
or
sub
xor
and
xchg
add
cmp
fldenv
fnstsw
and
pop
leave
or
cli
sbb
shrb
icebp
fmuls
les
xchg
into
sbb
xchg
xchg
xor
hlt
shlb
aam
hlt
loopne
mov
cltd
mov
out
xor
jmp
fldenv
int3
fidivl
cmp
pop
and
cmp
pusha
or
cmp
dec
push
inc
mull
dec
scas
mov
daa
rolb
xor
sahf
lock
mov
mov
cmc
add
clc
pop
insl
xor
cmp
lods
adc
xchg
pop
out
arpl
mov
mov
pop
in
movsl
mov
jns
cld
fdivs
popf
aam
pop
je
inc
arpl
sub
addr16
lock
sub
xchg
out
dec
lods
inc
lds
lret
sub
sahf
mov
cltd
shll
inc
aad
add
hlt
loop
jmp
pop
movsb
xchg
push
jmp
ds
lahf
clts
ljmp
dec
pop
shrb
rcrb
lcall
adc
mov
jg
cmpb
or
push
aam
push
jo
cmpsl
push
inc
rorb
mov
push
ja
in
mov
jae
hlt
fmull
pop
or
inc
ljmp
movb
loopne
jl
pop
test
cltd
stc
insl
xor
in
push
dec
mov
dec
dec
pop
cli
sbb
jl
out
rorl
and
push
fcmovu
iret
jmp
mov
lahf
popf
imul
lahf
jno
mov
mov
mov
es
jle
cmp
in
scas
xor
jns
cli
cmp
sti
lods
cmp
cltd
mov
mov
and
pop
orb
add
xor
push
test
mov
lret
push
in
adc
arpl
out
sbb
in
shll
inc
push
lahf
push
in
xor
or
inc
sbb
xchg
sbb
add
pop
dec
inc
popa
cmp
ret
notl
push
test
and
sub
inc
dec
pop
stos
popl
add
aas
mov
cli
cs
mov
add
jecxz
subl
and
test
mov
cmc
and
xor
jne
or
js
fucomip
push
adc
lret
movhps
dec
aad
fidivrl
sub
cs
dec
mov
and
pop
test
pop
add
sub
dec
xchg
ljmp
sbbb
jns
cmpsl
or
enter
mov
inc
inc
add
out
jge
sub
subl
ret
cmp
cmp
hlt
mov
pop
mov
mov
pop
mov
in
aas
mov
xor
movsl
popf
push
arpl
push
mov
cmp
ret
jno
mov
ret
loop
mov
leave
stc
pushf
out
dec
cmp
mov
cmp
stos
sbb
push
sbbl
incl
dec
pop
mov
mov
enter
test
cwtl
xlat
icebp
pop
ja
xor
popf
imull
pop
add
dec
xchg
lcall
pop
mov
fsubr
fbld
and
or
int3
mov
push
dec
pop
fistpll
loopne
ja
jne
inc
pop
fcomi
push
xchg
mov
xor
orb
inc
pop
insl
pop
push
stos
sbb
push
xchg
test
enter
int3
aad
imul
dec
shlb
ss
dec
push
push
test
inc
and
clc
mov
add
xorb
dec
out
in
jmp
add
sub
mov
stos
xchg
xor
lahf
dec
loope
push
test
xor
inc
repz
sbb
imul
nop
fwait
repz
out
push
sarb
jl
movb
lret
mov
push
xor
insb
out
or
add
aas
addr16
fldl
fimuls
add
repnz
jne
test
scas
cmpsl
jecxz
ljmp
mov
push
mov
fwait
mov
xchg
lds
mov
and
adc
out
pushf
or
inc
pop
sbb
xchg
inc
inc
add
mov
mov
lret
adc
cld
popa
and
iret
aam
ds
xor
shlb
iret
sub
pop
dec
cmpsb
jne
jnp
xor
nop
mov
std
sarl
test
and
add
push
adc
and
mov
jne
cs
mov
fnstcw
jb
xorb
in
jno
fstpt
pusha
xchg
add
push
xchg
addl
push
dec
xor
push
push
ljmp
or
and
sbb
fimuls
enter
mov
scas
out
xchg
sahf
xchg
xor
push
mov
mov
jnp
nop
pop
dec
daa
xchg
gs
sbb
sub
sub
subb
dec
sub
das
mov
rdmsr
push
call
adc
sub
in
test
jmp
test
pop
sub
loope
into
ficoms
and
sahf
or
push
push
loop
rep
aam
mov
dec
push
std
sbb
mov
sub
push
call
cmp
push
lods
or
lods
gs
aas
jno
mov
int3
mov
les
adc
repz
aad
adc
cmp
sbb
ret
xor
mov
pop
scas
movsb
jmp
call
cmp
mov
mov
loope
stos
push
cmova
adc
call
jnp
roll
subb
mov
cmp
pop
in
inc
insl
andl
jl
std
imulb
fidivrs
jne
je
cwtl
call
and
xchg
ficomps
adc
sub
xchg
jmp
iret
imul
adc
movsb
jmp
loope
push
xchg
pop
mov
inc
mov
sbb
xor
pop
pop
adc
ret
or
gs
addb
shll
mov
sar
ret
jbe
mov
loopne
sub
dec
iret
ja
pop
imul
ret
sbb
push
lahf
sub
and
mov
and
inc
xor
dec
in
ljmp
mov
push
popf
mov
adc
jns
ret
or
mov
lock
mov
lock
xchg
xor
lods
arpl
lcall
mov
push
dec
dec
push
shrb
fs
mov
pop
pop
daa
addb
dec
add
fs
jmp
outsl
sub
sub
inc
aaa
cmp
fmull
rorb
cs
rcll
cli
push
adc
in
mov
js
xchg
mov
dec
es
mov
jo
sarl
jnp
lods
sbb
xchg
data16
xchg
xchg
cs
dec
fcompl
or
shlb
pop
mov
stc
mov
or
add
fildll
shrb
mov
lahf
xlat
and
filds
inc
leave
cmp
xlat
pop
and
bnd
stc
inc
lock
or
jle
ffree
in
cmp
scas
fcompl
push
jp
cmp
test
cli
or
cmp
out
pop
movsb
fs
scas
jo
pop
push
lods
fiaddl
lods
fmull
push
test
xor
dec
adc
fsts
test
gs
int
jns
pop
push
jmp
lahf
mov
or
icebp
or
sub
mov
out
cld
pushl
cwtl
ret
push
mov
lea
sti
out
inc
fisttps
mov
xchg
loope
pop
ljmp
add
or
or
in
rorl
das
addr16
jne
mov
xchg
xchg
addr16
das
or
and
cmp
mov
aas
pop
pushf
out
mov
mov
adc
push
mov
fcmovnb
xchg
scas
les
push
jmp
sarb
adc
inc
es
mov
in
dec
jge
jp
inc
sbbl
push
movsb
jmp
jl
insb
jnp
repnz
mov
add
cmc
add
cmpsb
sahf
enter
xchg
addr16
and
mov
xchg
cmp
cmp
mov
negl
adc
adc
xor
popa
dec
push
mov
jle
rcrl
jmp
test
and
leave
cmpsl
xor
and
inc
push
xchg
rol
push
xor
fisubrl
mov
inc
mov
es
arpl
mov
pop
xchg
sbb
jnp
mov
arpl
cmp
lock
xchg
aam
xchg
pop
bound
je
cwtl
mov
push
push
inc
or
jp
jns
push
jmp
fnstenv
sbb
gs
mov
nop
arpl
sub
push
push
dec
mov
add
scas
fistpll
inc
push
jg
adc
pop
or
mov
jp
shlb
mov
stc
pop
loop
rolb
popa
add
xor
push
cltd
and
mov
adcb
jns
out
ret
inc
mov
dec
inc
pop
push
mov
mov
je
jnp
fs
bound
pop
fld
sarl
insb
mov
jle
hlt
fistpll
or
rol
xchg
roll
mov
cmpsl
sti
insb
into
add
insl
sub
cmp
rcrl
pop
jl
cwtl
stos
aam
dec
mov
push
xor
push
push
xlat
mov
je
jmp
push
testl
jmp
or
fwait
push
sub
sarl
out
xchg
ret
rorl
pop
lea
rcr
stos
add
xor
pushf
lea
in
pusha
cmpsl
xchg
decb
je
add
mov
ss
sti
incb
stos
mov
xchg
mov
jnp
or
aaa
pop
fdivrs
icebp
dec
addl
movsb
or
out
push
push
fiadds
jmp
lods
ja
movsl
inc
push
rcl
pop
fidivrl
stos
repnz
out
xchg
fsts
xchg
mov
jo
jmp
lds
and
shlb
sbb
in
inc
stos
inc
mov
scas
iret
push
addb
cmp
cmpsl
iret
mov
inc
xchg
jle
cs
nop
negb
mov
xchg
mov
cmc
sub
xchg
and
xlat
and
mov
mov
mov
fbld
das
fwait
scas
push
mov
or
jg
fsubrl
fadds
sub
scas
shr
or
pop
adc
sbb
inc
lods
hlt
lahf
xchg
insb
xchg
jecxz
pop
lods
movsb
jb
pop
xlat
push
jg
pop
and
rorl
imul
cmpsl
aaa
sub
lahf
dec
or
cmp
mov
mov
ds
out
jl
mov
push
lods
add
cld
mov
mov
jne
vphadduwd
dec
push
scas
sbb
insl
pop
popa
cmpl
dec
mov
and
les
pop
pop
sbb
mov
ret
stc
cli
in
cmp
mov
inc
test
cmpb
jl
js
mov
sbb
push
push
scas
in
pop
jbe
outsl
inc
jmp
pop
lock
sbb
or
je
pop
bound
mov
mov
and
push
mov
gs
dec
fstp
jae
sbb
les
mov
jmp
xchg
xchg
je
popa
les
aam
xlat
jo
add
xchg
dec
shrl
cmpsl
and
and
mov
sub
inc
sub
hlt
inc
nop
adc
or
xchg
pop
inc
adc
dec
mov
push
mov
sub
jmp
rol
cmc
fs
es
ficoms
movsb
xchg
nop
sbb
outsb
pop
adc
or
rcrb
mov
out
inc
jnp
mov
sub
or
stc
nop
xlat
push
repnz
out
xor
mov
sub
in
cmp
into
and
int
es
fdivl
sub
pop
sub
or
or
sbb
shrb
in
lahf
out
addr16
mov
and
xchg
out
pusha
lock
sbb
adc
or
lahf
inc
rcll
int
and
test
ljmp
pop
cltd
fsubrl
loope
mov
jmp
or
sub
int3
mov
sahf
jns
pushf
test
js
in
imul
ss
repz
lret
icebp
cmp
xor
ds
popf
push
clc
jnp
add
out
mov
repnz
sub
orb
test
out
and
and
adc
inc
push
inc
mov
shll
dec
dec
jb
add
push
dec
ret
pop
mov
push
push
and
ljmp
xchg
sti
sub
mov
in
lods
outsb
ja
and
dec
incb
out
cmp
aaa
addr16
dec
and
dec
xchg
mov
add
mov
hlt
lret
adc
arpl
fs
push
inc
xchg
mov
jbe
mov
jns
aad
and
mov
jbe
xchg
enter
scas
out
cmc
add
xchg
lods
in
lods
push
xorb
push
clc
mov
enter
mulb
adc
mov
jb
jl
pop
adc
test
daa
popf
das
aam
xor
lcall
inc
jp
xor
test
sub
or
mov
mov
popa
imulb
sbb
push
nop
loop
or
stos
or
in
sbb
and
push
addr16
enter
outsl
inc
lret
inc
jnp
cmp
cwtl
push
inc
notl
push
aas
jecxz
xchg
xchg
int3
and
andb
rcll
dec
xor
orb
scas
mov
in
push
popf
aas
outsb
xchg
mov
inc
push
cmpsl
lock
or
inc
inc
into
lea
jg
test
int3
pop
or
pop
movsb
test
or
in
add
fdivl
add
mov
xrstor
mov
jecxz
sahf
std
mov
sub
pop
je
ja
and
pop
jecxz
or
shlb
xchg
mov
in
repnz
push
push
cmpsb
cld
mov
fidivrs
mov
cmpsl
cltd
movsl
pop
dec
adc
aaa
sti
inc
xor
das
imul
or
add
sbb
mov
lods
push
or
or
lcall
nop
mov
lahf
xor
sti
mov
dec
dec
or
jae
mov
aam
xlat
xor
mov
rcrl
pop
push
xchg
or
push
push
sub
push
out
imul
or
cmp
add
lods
xor
cld
test
enter
lods
cmp
rclb
cltd
movsb
jnp
pop
push
fidivrs
bound
outsb
push
nop
or
lret
mov
leave
push
jle
test
mov
mov
mov
jl
jl
mov
pcmpgtw
pop
scas
jp
lock
xchg
push
mov
outsb
fwait
mull
pop
outsl
adc
lds
inc
rolb
dec
aaa
xchg
mov
nop
push
xbegin
pop
add
imul
fs
inc
pop
jmp
pop
cmp
push
sbb
jge
jns
push
loope
cmp
lods
mov
dec
dec
sti
fwait
push
dec
inc
aaa
xor
pop
call
clc
pushf
loope
sbb
mov
mov
xchg
mov
inc
push
mov
add
and
xorl
xor
mov
divl
aam
xchg
outsb
sub
lds
leave
pop
shlb
rcll
pop
imul
jae
or
and
xchg
out
in
mov
xor
or
sarl
xchg
jnp
lds
sbb
jnp
jae
or
or
or
in
les
fucomip
jae
adc
sbb
add
inc
mov
fisttps
add
pushf
xor
push
push
jnp
xchg
in
jecxz
scas
sahf
ficompl
mov
in
or
in
push
mov
push
bnd
inc
and
pop
dec
push
jg
mov
repz
test
scas
out
adc
loopnew
push
or
xchg
ja
icebp
shll
mov
pop
xchg
adc
sti
sub
mov
dec
iret
test
sub
pushf
imul
movsl
movsl
pop
sahf
sub
adc
lods
push
jns
fisubs
push
pop
clts
cmpsl
cli
out
mov
stos
outsl
push
insl
call
mov
cmp
xor
int
popa
push
jbe
sub
mov
ja
mov
and
call
pop
cmp
mov
ss
dec
jnp
inc
jp
inc
or
lret
push
inc
test
sarb
xchg
jl
xchg
leave
push
push
leave
fisubs
in
dec
insl
push
ljmp
xlat
sub
cmp
icebp
pop
fbstp
stc
inc
sub
pop
inc
imul
jae
xor
addr16
repnz
ficoml
and
jge
cltd
sub
inc
into
lock
jecxz
jb
sahf
es
out
inc
ret
mov
push
inc
sbb
sbb
scas
movsl
ds
cltd
ret
loope
sbb
inc
add
inc
push
sahf
pop
les
jge
push
dec
stc
subb
or
jecxz
aas
cmp
lahf
out
stos
cmpsb
sub
call
jp
jnp
or
jbe
popa
sub
push
fwait
adc
mov
xor
jne
ljmp
lock
roll
xchg
nop
dec
fldt
cmp
sbb
mov
lock
push
in
mov
add
push
xchg
fsubl
into
sbb
cmpsl
mov
scas
and
sbb
scas
inc
or
mov
jno
dec
push
push
dec
dec
mov
daa
cmp
shrb
icebp
dec
lahf
js
dec
or
xor
mov
xchg
push
and
add
add
xchg
insl
and
xor
xchg
daa
movsl
xchg
insl
mov
test
lret
call
mov
mov
mov
jmp
pop
sbb
arpl
push
add
incb
mov
call
imul
nop
cmp
dec
sti
mov
jle
mov
jecxz
lea
sbb
call
out
daa
mov
jbe
test
int3
mov
mov
mov
lds
cltd
adcb
out
xor
imul
decb
sar
add
in
jl
xchg
jg
mov
sahf
or
in
arpl
cmp
xchg
push
mov
stc
lahf
popa
dec
xlat
jae
fwait
or
mov
add
loopne
hlt
scas
imul
mov
sub
fstp
bound
jmp
push
sahf
xchg
lods
xchg
ss
push
iret
xchg
cmpsb
adc
lods
push
push
or
lahf
in
push
add
ret
sbb
aaa
aaa
pop
loop
inc
push
adc
rolb
pop
call
imul
xchg
pop
scas
subb
push
mov
mov
and
into
push
mov
popa
xadd
mov
jne
sub
pusha
inc
sub
push
into
das
bound
fldenv
mov
add
push
lret
lods
inc
outsb
sub
aam
aam
mov
xchg
xor
add
inc
push
mov
in
mov
lret
cmpsl
inc
dec
pop
mov
int3
mov
es
jle
icebp
mov
cmp
fstpt
push
lods
dec
adc
jge
ficompl
repz
push
jmp
adc
xchg
or
ss
ret
jne
into
lock
push
imul
mov
cs
add
scas
push
or
push
sub
jns
jne
xor
fiaddl
push
fstpt
xchg
test
add
xchg
push
je
jp
xor
aam
push
mov
sub
jbe
cld
inc
xchg
xor
pop
ljmp
lret
cmpb
xchg
lret
xchg
lret
adc
fistpl
sti
mov
xchg
xchg
or
inc
pop
lcall
mov
fdivs
mov
mov
loope
sarb
loop
fdivs
pop
jno
rcrb
inc
fldl
iret
fadd
out
adc
imul
fs
stc
sub
scas
rcrb
mov
and
pop
loope
sub
jno
adc
ds
aaa
addl
inc
rcrb
fcomps
jne
jg
push
jo
js
inc
test
and
add
pusha
or
inc
adcl
or
inc
or
jbe
lea
movsl
xor
stc
push
pop
xchg
mov
mov
lds
sub
inc
jno
add
xor
xchg
stc
insl
repz
push
or
lds
testl
mov
inc
dec
in
xor
push
arpl
mov
leave
pop
dec
lods
fisttpll
fbstp
and
scas
test
fs
add
cs
sub
aad
lods
fwait
xor
ljmp
pop
add
pop
icebp
jns
xchg
push
xchg
xlat
inc
aad
sahf
pushf
mov
dec
pop
push
dec
inc
inc
jb
adc
sbb
dec
push
in
int
ljmp
jmp
sbb
mov
jb
repnz
lea
fcmovnb
add
xor
jo
mov
andb
adc
or
mov
fwait
sti
xchg
push
adc
xchg
dec
push
and
add
add
add
leave
int
pop
clc
sub
stc
ss
push
cmp
loop
pop
jmp
inc
mov
fldt
scas
test
xor
add
push
iret
daa
out
popa
bound
add
in
lods
push
loopne
mov
push
mov
jle
ljmp
popf
cwtl
inc
pusha
lahf
jl
pop
dec
insl
push
mov
sub
pop
out
cli
mov
dec
lret
sbb
cmpsl
rcll
jnp
test
cmp
sbb
xor
xor
insl
das
test
push
cmp
mov
or
dec
pop
cmp
mov
stos
cmpsb
or
nop
inc
sub
or
sbb
popf
or
xchg
icebp
xor
cmp
inc
leave
sbb
call
cltd
cmpsb
cmpsl
pusha
adc
add
addr16
gs
dec
repnz
pop
adc
ffree
and
jnp
nop
hlt
push
shll
or
cli
pop
fldenv
cmp
or
sub
lcall
fwait
js
jo
cltd
leave
push
ret
push
das
aaa
mov
fsub
mov
sarl
sar
leave
jg
fisubrl
in
test
lods
hlt
dec
mov
mov
or
mov
cmp
nop
hlt
xchg
mov
add
fadds
cs
or
mov
push
sub
outsb
cwtl
jbe
mov
sub
dec
cmc
cmpsl
inc
add
lahf
les
shlb
or
push
aad
js
fistpll
jge,pt
jno
mov
in
cmp
imul
roll
jae
movd
arpl
mov
inc
jbe
clc
aam
in
mov
lret
sti
cltd
js
xchg
push
lock
dec
into
cmp
sbb
movsb
mov
dec
xchg
push
and
dec
mov
pop
movsl
jecxz
sub
aaa
jge
add
div
jl
and
lods
stos
shlb
dec
add
xchg
addr16
pop
xchg
xchg
push
inc
scas
stc
sub
mov
ljmp
fadds
adc
ficoms
jmp
dec
adc
push
pop
sub
gs
loop
add
cmpsl
icebp
jl
xchg
sub
jnp
testl
mov
into
xchg
mov
ja
push
sbb
cmp
pop
decb
std
add
jge
dec
inc
fidivrs
push
sub
or
stc
stc
mov
scas
mov
fdivrl
test
mov
mov
dec
hlt
scas
mov
xlat
xor
mov
cmpl
add
fstps
xor
popa
mov
push
lcall
imul
stc
sbb
inc
es
clc
push
pop
mov
add
dec
xchg
adc
adc
aam
or
lods
adc
inc
cmpsb
mov
jae
test
push
pop
inc
jno
popf
popa
xor
pop
cmp
pop
ja
int3
inc
dec
mov
or
lock
mov
push
outsb
shlb
cltd
pop
and
movsb
inc
add
jg
mov
ret
mov
push
in
aad
roll
fstpl
push
movsl
xchg
or
outsl
mov
push
mov
dec
rcpps
ret
xchg
inc
ljmp
iret
arpl
movsl
cs
mov
loope
out
orps
mov
jbe
mov
orl
sbb
jae
inc
shl
daa
push
cmpsl
iret
mov
in
lahf
mov
movsb
inc
push
ljmp
out
imul
push
outsb
in
ds
stc
in
cmp
pushf
adc
dec
test
inc
daa
aad
ror
lcall
and
outsl
add
data16
cld
jnp
dec
leave
jge
cltd
xchg
inc
cwtl
out
mov
sub
push
hlt
popf
sub
bound
mov
lds
push
cwtl
adc
adc
movsb
or
arpl
rcrb
mov
cmpsb
pop
pop
icebp
sbb
dec
pop
or
stc
mov
adc
mov
imul
push
pop
or
push
cmc
sub
out
insb
push
imul
adc
repnz
out
out
inc
outsb
adc
mov
nop
sub
sti
mov
mov
test
xchg
iret
jae
sub
dec
or
push
and
pop
dec
test
cs
fwait
push
fwait
cmp
mov
fiadds
adc
daa
stc
mov
push
fucom
daa
mov
xor
in
inc
frstor
lea
shlb
data16
adc
cmpsl
push
sub
cwtl
ret
and
add
and
adc
dec
insl
loopne
dec
mov
sub
push
test
lds
jle
bound
mov
das
and
xor
xchg
sbb
sahf
cmp
fwait
imul
fwait
inc
cwtl
insl
enter
push
int
and
test
fisubl
cli
sub
popa
imul
add
loopne
pushf
or
inc
push
mov
dec
ljmp
add
rcl
cld
or
jbe
fcompl
addb
xlat
cmpb
lods
rol
inc
fnstsw
push
shl
cmp
js
out
jnp
popa
iret
lods
push
jno
and
gs
lods
and
inc
testb
xchg
push
mov
mov
adc
xchg
test
adc
adc
adc
sub
mov
arpl
pop
jmp
xchg
insl
outsl
nop
push
or
sub
jg
mov
mov
iret
ja
scas
jnp
inc
sbb
push
sbb
sbb
lods
cmp
lds
cmpsl
jl
mov
inc
cmp
das
repz
add
loopne
shrb
div
or
scas
push
adc
cwtl
outsl
mov
inc
add
cli
ret
jb
in
xor
and
add
popa
adcb
lods
das
pop
and
fdivl
stc
mov
push
ret
mov
lock
jp
cmpsl
cwtl
imul
lret
ds
ja
daa
jo
js
je
test
and
adc
add
jno
rcrb
push
iret
cld
or
mov
out
mov
mov
mov
inc
fisubs
fadds
mov
out
in
andb
push
push
add
dec
fdivs
mov
cmp
sti
sbb
push
icebp
sbb
sub
lahf
rolb
je
ds
mov
mov
adc
inc
xorb
icebp
push
sbb
push
or
out
lea
mov
xor
adc
dec
out
xchg
add
shlb
mov
shlb
into
add
cwtl
adc
inc
fs
jns
clc
and
mov
out
int
inc
cmpsl
push
push
push
mov
into
mov
mov
enter
and
and
lret
push
in
cmp
pushf
lock
cmpsb
push
inc
push
mov
cltd
cltd
dec
jmp
cmpsb
pusha
int3
insl
mov
push
dec
lea
fnstenv
fbstp
mov
push
fists
out
mov
mov
rorl
push
jnp
aad
adc
seta
fldcw
cld
aaa
icebp
cmc
shll
loop
repnz
cmp
in
jb
or
daa
jecxz
lods
ja
nopl
loop
pop
add
add
xchg
cli
fdivp
daa
ss
jg
adc
into
sbb
cmp
push
repnz
mov
cmp
adc
lea
int
push
cmpsb
adc
mov
push
or
das
mov
outsl
int
flds
and
dec
adc
xchg
mov
lcall
pop
xchg
and
fists
push
rolb
xchg
adc
mov
addr16
adc
mov
xor
and
int
fwait
sti
stc
adc
cmp
xchg
notl
lret
pop
out
push
and
rorb
add
add
iret
inc
stos
push
aaa
lock
sbb
jae
inc
mov
sbb
insb
inc
fistpll
xchg
xchg
out
cwtl
sub
divl
scas
sbb
in
testb
insb
sti
lcall
push
lods
jae
jl
push
je
daa
cmp
sub
in
outsb
repz
xchg
xor
sub
lods
arpl
in
mov
jae
gs
jge
shrl
add
adc
sti
pushf
dec
gs
mov
inc
sar
jne
mov
popf
push
cmp
outsl
xor
mov
out
and
sbb
popf
int
jge,pn
imul
cmp
inc
xchg
inc
fldt
addr16
into
mov
int3
xchg
and
mov
fldenv
push
mov
or
adc
insl
fildll
out
and
cli
cwtl
dec
xlat
xor
imul
daa
std
out
lahf
pop
sub
cbtw
fcmovne
jmp
mov
adc
pop
sbb
cmp
xor
lods
in
ja
xchg
scas
pop
cs
push
mov
mov
push
xor
inc
aas
mov
les
shll
in
push
aam
jg
xor
inc
incb
call
inc
icebp
mov
es
int
lods
lret
mov
mov
lods
out
push
jmp
in
and
bound
aas
in
fidivs
sbb
mov
mov
inc
ljmp
leave
popf
fstl
into
xchg
fcompl
pop
out
xor
sarl
call
cwtl
xchg
inc
jg
test
clc
fildll
sub
dec
xor
adc
mov
cmp
ljmp
int
pusha
mov
push
mov
stos
pusha
mov
fstl
add
dec
add
daa
lret
das
lods
pusha
fcoml
jno
fdivrl
and
add
loopne
fdivrs
xor
or
sub
hlt
mov
cmp
outsb
add
add
aas
jmp
adc
mov
mov
inc
adc
int
push
andb
ud0
test
ljmp
and
xchg
or
ret
nop
xor
dec
mov
cmpsb
aam
jno
iret
jge
mov
lret
xchg
mov
xor
mov
sbb
sub
jno
fwait
lcall
shll
sub
cmpsb
callw
dec
aas
clc
data16
mov
repz
aam
bound
push
push
cmp
xor
mov
ret
cmp
jmp
pop
pop
sub
and
pushf
adcb
xlat
sub
dec
int
arpl
xchg
enter
jno
out
repz
pusha
loopne
fsubs
sarb
push
fistps
lret
xchg
sbbl
xchg
push
sub
mov
xchg
cwtl
shll
fisubrs
repz
mov
rcrl
scas
mov
inc
mov
popf
inc
add
es
in
insl
hlt
cmp
sti
shll
dec
repz
sbb
mulb
mov
shlb
mov
lds
rolb
push
addr16
adc
xchg
xlat
xlat
mov
fisttpl
sub
jmp
pop
push
sbb
mov
test
pop
jns
sub
fs
add
inc
jns
jnp
pop
in
lods
icebp
mov
cmpsl
loope
jecxz
push
rcrb
into
or
lret
add
pop
or
adc
arpl
mov
adc
insl
jmp
aaa
in
sub
popa
imul
sbb
mov
stos
scas
stos
and
sar
sub
push
mov
ret
and
test
lcall
push
js
xchg
lret
pop
sbb
fbstp
testb
sbb
pop
stos
fidivs
fdivl
xchg
lret
mov
inc
aaa
push
aaa
cmp
movsb
jge
mov
jecxz
ss
xor
inc
or
das
addr16
or
pop
or
shlb
jbe
mov
mov
decb
in
lods
pusha
pop
mov
test
int
jne
insb
cmp
add
mov
xchg
stc
push
cmpsb
dec
sarl
and
xchg
cs
sub
rcll
jns
push
idivl
adc
mov
mov
insb
dec
pop
mov
inc
call
cmp
push
adc
mov
mov
mov
and
inc
test
sub
mov
pop
sbb
mov
cwtl
mov
xchg
aas
mov
jecxz
push
xchg
mov
jne
shll
nop
mov
cld
push
test
cmp
sbb
ja
mov
lret
mov
dec
mov
mov
test
push
jl
shrb
ljmp
shlb
xchg
movsl
lock
inc
fwait
es
sbb
test
jmp
nop
mov
inc
lods
int
rcrb
push
and
sar
mov
rorb
pause
push
repnz
mov
sbb
insl
xchg
jl
jbe
mov
push
test
fsts
shr
cmp
inc
inc
imul
add
aad
mov
pop
notw
fsts
dec
xlat
mov
repnz
xchg
fwait
adc
mov
xchg
pop
push
shrl
pop
fwait
xorb
jns
test
dec
adc
cli
bndstx
add
fs
push
pop
dec
xlat
adcl
cmpsl
sbb
xor
push
jg
roll
out
cmp
daa
aas
inc
adc
add
cmp
adc
out
pop
mov
lret
sbb
and
mov
imul
test
mov
sbb
mov
repz
inc
and
ret
out
or
pushf
popa
pop
call
mov
mov
popw
shlb
lcall
push
and
rolb
fwait
add
jne
stc
ret
xor
stos
or
adc
pusha
movsl
mov
add
jnp
jg
push
data16
dec
sub
mov
cmpsb
pop
cmp
sbb
xchg
xchg
add
fcmovnu
jne
add
jno
or
out
rol
and
cmpsl
mov
lock
sub
popf
jnp
icebp
test
push
aas
fistpll
lea
pop
test
push
int3
insl
lock
stos
lods
or
cltd
cmc
fstl
cltd
sahf
jg
push
or
sbb
or
sbb
inc
jo
push
fst
mov
ljmp
es
sarb
xlat
add
jp
fnsave
ss
adc
or
xchg
ficomps
sub
cmpsb
es
sarl
fwait
jmp
cmp
test
mov
adc
shrl
xor
mov
sub
test
decb
aam
xchg
jnp
enter
icebp
fs
inc
pop
jecxz
fistpll
mov
jo
xlat
gs
fldt
mov
xchg
push
sbb
xchg
mov
jl
dec
jne
dec
dec
hlt
mov
fnstenv
clc
sti
insb
cmc
sbb
pop
jae
sbb
ret
lret
inc
jnp
movsb
test
inc
cmp
add
mov
imul
aam
inc
and
push
inc
popl
arpl
test
sbbl
mov
pushf
lods
xchg
shrb
and
cmc
inc
ret
sbb
daa
dec
mov
mov
jbe
cmp
push
xchg
xchg
mov
xor
test
xor
push
aam
ljmp
pop
xor
mov
jbe
loop
jbe
leave
shr
add
xor
dec
cli
xor
or
sub
pop
xor
or
les
xor
imul
inc
movsb
shrl
push
ret
push
xor
out
mov
ret
jbe
ffreep
insl
movsb
es
dec
or
sbb
scas
jnp
adc
cmpsw
or
and
or
addb
lock
jne
rcl
xchg
stc
xchg
aas
les
inc
or
in
sbb
and
jae
mov
insb
fcmovnb
push
fcompl
mov
mov
repnz
mov
arpl
pop
and
mov
imul
push
imul
aad
jbe
xchg
xchg
or
push
push
xchg
mov
pop
cmp
test
not
add
inc
jns
testb
xchg
cmp
in
jl
arpl
jle
jp
jo
add
in
shll
or
rorb
pusha
jae
test
inc
test
mov
mov
pop
mov
xchg
lods
pshufw
inc
sahf
outsb
rcrb
clc
test
xchg
cli
stc
mov
jp
mov
dec
sub
pop
test
repz
sbb
test
jmp
stos
inc
pusha
cmp
mov
movsb
in
andb
push
pop
ljmp
xor
cmova
arpl
jl
mov
sbb
pop
mov
pop
subb
in
add
roll
sbb
ficomps
xor
jg
sub
mov
mov
pop
jae
in
and
in
pop
insb
scas
adc
out
add
push
dec
mov
repz
sub
push
sub
fs
outsl
xchg
fcoml
stos
in
mov
sbb
fsubr
rcrl
rclb
daa
pop
sub
pop
lret
arpl
cli
inc
inc
push
fcomi
rcll
mov
inc
lahf
into
pushf
add
dec
imul
pop
fnsave
or
inc
dec
cld
addr16
out
xor
sub
xchg
and
sti
push
in
sbb
aas
lret
push
jne
and
mov
mov
ficoml
fwait
adc
push
ret
mov
testb
fs
mov
dec
lcall
cmp
ret
mov
leave
out
mov
inc
sub
pop
pop
testb
dec
inc
flds
and
pop
popa
into
jb
xchg
das
inc
leave
inc
add
aam
inc
cmp
inc
push
pusha
hlt
add
movsb
or
dec
ret
dec
scas
loop
out
or
sub
cli
and
clc
icebp
dec
out
inc
js
orb
sub
out
movsl
fs
add
addr16
sahf
cwtl
pop
xor
push
sub
fcmovnb
adc
sbb
dec
inc
ljmp
ljmp
cmp
cwtl
aam
mov
inc
mov
fs
jb
sub
into
xor
mov
pop
push
loope
mov
jl
pushf
insl
hlt
lret
xchg
mov
mov
sarb
adc
xor
je
lahf
call
xchg
mov
cwtl
std
cltd
jecxz
adc
popa
ret
pop
and
sbb
mov
inc
lcall
cmp
rcl
sub
fmul
dec
push
jno
adc
out
rcrl
xor
add
repnz
push
or
int
loope
fldl
mov
jno
xor
pushw
aas
popa
clc
test
cmp
int
lods
into
dec
xor
roll
add
stos
mov
test
jnp
mov
ret
sbb
repz
mov
pop
mov
cld
out
inc
pop
jne
cmpsb
fadds
push
adc
jp
jecxz
cli
sub
push
pop
arpl
dec
xchg
popf
clc
cli
sbb
lahf
inc
inc
jecxz
jbe
or
daa
call
repz
stos
test
leave
xchg
pop
in
cld
push
repnz
mov
xchg
xor
aam
xchg
shlb
pop
es
stc
xor
movsl
push
scas
pop
shll
call
popf
push
mov
sub
and
cld
adcl
xor
pop
pop
jle
aas
xor
add
shrl
xor
cmp
testb
pop
sub
cmp
jnp
js
mov
loopne
and
mov
mov
mov
cwtl
inc
test
push
sub
xchg
out
mov
sbb
adc
stos
push
dec
mov
cwtl
or
fistpll
sbb
inc
stc
add
xor
movsl
cmp
add
popf
mov
sub
inc
mov
int3
ss
sbb
stos
ljmp
push
mov
outsl
aaa
pop
cld
pushf
xchg
jg
push
int3
jl
nop
aas
stos
setne
add
mov
outsl
clc
xchg
popa
faddl
sbb
stos
fldl
test
sti
xchg
rcrl
lods
jl
shlb
aaa
add
sahf
mov
lcall
pop
in
sbb
cmp
or
or
push
sub
mov
cmpsl
ja
ds
xor
mov
pop
cltd
into
mov
and
loope
adc
movsb
adc
cwtl
pop
xchg
sub
mov
test
jae
clc
out
loop
loopne
jne
fsubr
and
sub
dec
rcrl
pop
dec
mov
not
dec
push
mov
inc
mov
inc
adc
aaa
xchg
fs
mov
popa
jo
lea
sub
dec
inc
pusha
or
jno
dec
loop
out
rcrl
cltd
popl
lds
sub
ret
xchg
inc
push
dec
mov
ss
frstor
mov
sgdtl
dec
jge
in
sbb
and
call
std
mov
mov
aaa
loopne
and
imul
mov
movsb
xchg
dec
fidivl
push
push
push
dec
sub
js
dec
sub
jnp
repz
push
scas
mov
loope
adc
ror
popa
fidivl
lcall
xchg
cmpsb
mov
mov
dec
cmpsb
lock
cli
lea
pop
mov
add
pop
cwtl
movsb
out
aas
or
in
push
pop
ljmp
loopne
jmp
loop
rcrl
sub
jb
int3
icebp
cmp
cmp
cmp
pop
mov
sbb
pop
sbb
add
mov
and
lods
lock
mov
loopne
mov
imul
cmp
scas
add
dec
leave
inc
xchg
ret
lods
stos
dec
leave
adc
push
add
cmpsb
sahf
clc
int
test
lds
sub
mov
inc
adc
mov
mov
sub
xchg
subl
xor
out
add
loopne
testl
aas
pop
sar
aaa
mov
xchg
mov
mov
adc
and
stos
pop
movl
jb
gs
iret
cmp
test
inc
push
dec
xor
andl
fimuls
dec
jae
jecxz
leave
and
xor
js
xchg
je
push
add
pop
pusha
aaa
adc
ret
mov
out
clc
sub
dec
pop
dec
movsl
icebp
jmp
das
and
repz
fldt
cwtl
jb
les
sahf
cmpsl
ja
jns
or
adc
mov
out
loopne
out
int
ljmp
popa
mov
mov
sbb
les
aam
mov
dec
lea
xchg
sbb
push
imul
push
sbb
inc
mov
insl
cmp
adc
sarl
xor
out
xchg
add
movsl
jb
pop
xlat
xor
jnp
fisttpl
jp
lret
xlat
mov
pop
addr16
add
daa
or
adc
inc
in
and
mov
mov
xor
dec
pop
pop
xchg
push
fsubrs
pop
pop
jo
jb
sub
xchg
mov
mov
sub
dec
adc
mov
es
in
ss
sbb
dec
add
dec
lcall
dec
inc
sbb
mov
sub
outsl
cmc
and
cld
mov
jge
mov
stos
xor
fwait
imul
call
mov
jg
adc
jne
mov
addr16
push
sahf
mov
add
jg
inc
test
push
imull
xor
shr
jmp
aaa
jbe
das
mov
fidivrs
stc
sub
insl
ss
ja
xchg
cmpsb
pushf
jmp
adc
das
dec
jo
push
mov
loopne
fsubp
jne
dec
je
sahf
das
scas
mov
cmpsl
jmp
jns
add
scas
rorl
ds
icebp
mov
fimull
aam
sar
iret
xor
xlat
outsb
ret
inc
imul
movsb
fmul
in
inc
mov
movsl
mov
or
add
bswap
stc
xor
cwtl
call
jp
add
mov
sbb
jl
cmp
dec
inc
xchg
cmpb
test
mov
mov
push
arpl
mov
imul
test
subl
shlb
lds
cmpl
les
incb
imulb
ret
sub
pop
sbb
je
out
sbb
pop
test
test
sbb
popf
adc
loop
jno
out
jo
ss
negl
jle
xchg
jmp
mov
pop
dec
push
sub
jp
fldl
fnsave
pop
nop
or
xor
imull
push
jb
pop
repz
inc
inc
push
fs
mov
push
test
mov
mov
in
adc
ja
cmp
testb
pop
and
push
mov
scas
ja
jns
mov
cld
aad
into
movsl
out
popf
push
pop
es
stc
adc
mov
inc
pop
push
loopne
cmc
mov
pop
push
adc
mov
lret
in
sar
outsb
ds
dec
jmp
or
je
les
pusha
in
das
jnp
push
ret
in
cld
jb
lods
cmp
cs
jnp
cmp
shr
push
sbb
ret
cmp
push
pop
cmc
pop
cmp
addl
adc
adc
lcall
sbb
mov
ficoms
scas
dec
mov
xchg
jg
loop
lea
mov
cmp
lea
xor
test
test
ja
sub
xchg
mov
and
pop
fcom
fcoml
add
or
sbb
pop
aas
data16
add
xchg
and
mov
fisttpll
add
push
sar
addr16
mov
or
arpl
push
ljmp
pushf
inc
cmp
outsl
jmp
jno
andl
xor
sbb
or
sub
ret
ss
loop
or
fdivp
shll
xlat
in
add
loopne
xor
cmp
jae
mov
pop
loope
jmp
fsubrs
pop
mov
mov
xlat
mov
xchg
shll
cmc
nop
roll
inc
bound
push
stc
repnz
xor
in
adc
insl
push
cmp
test
pushf
sbb
mov
mov
gs
push
mov
push
rcrb
xor
jnp
fsubrs
orl
daa
xorl
fstpl
or
push
aas
ret
aam
das
cmpl
pop
rorl
stc
inc
lods
stc
push
imul
test
cs
and
xchg
pop
fsub
rep
inc
test
push
or
fisubs
into
inc
xchg
dec
sub
sbb
cs
cltd
aas
test
jle
les
mov
mov
daa
fldt
in
aam
test
fwait
addr16
out
push
mov
inc
mov
rcl
xchg
add
cmpsl
inc
cmpsl
mov
mov
jg
cld
stos
xor
cmp
mov
stc
push
test
fwait
enter
popf
pop
daa
mov
cmp
add
dec
ljmp
xlat
test
daa
rcrb
jns
pop
mov
jne
mov
jno
adc
cmpsb
shl
call
ror
push
testb
push
testl
outsl
jmp
adc
pop
pop
mov
call
enter
cmpsb
les
adc
repz
addr16
je
fsubr
sbb
pop
cmp
scas
xor
mov
xchg
fimull
and
xor
jae
fs
sub
sbb
pop
and
and
scas
add
inc
int3
arpl
jle
pop
xchg
xor
sbb
mov
sub
pop
jle
lahf
pop
jmp
and
imul
add
mov
dec
push
sahf
add
fimuls
xlat
inc
and
xor
fs
fsubs
xchg
jbe
dec
push
das
loop
nop
int
push
dec
jmp
sub
lcall
sbb
dec
test
pop
sbb
xor
cld
mov
mov
pop
iret
sub
pop
nop
dec
inc
pop
fwait
ret
shl
cmovb
or
push
imull
inc
movl
dec
dec
xor
in
add
sub
fidivrl
xchg
rcr
sahf
xchg
rcrb
jne
enter
xchg
shll
out
add
jno
jg
mov
mov
stos
shlb
test
mov
js
stc
js
mov
pop
inc
mov
out
fstl
xchg
mov
cmpsl
pop
rclb
jno
in
push
rcrl
daa
mov
sbb
cmp
cmp
dec
xor
in
jge
lods
insb
loop
imul
into
jmp
cmp
add
lcall
in
sti
xchg
and
scas
push
pop
fistpl
out
fnop
fnstcw
cmp
dec
je
and
pop
cltd
inc
movsb
jmp
cmp
add
test
inc
enter
test
cmp
ret
loope
testl
add
cmc
mov
ret
mov
dec
fiaddl
sbb
fisttps
gs
push
xchg
loope
mov
jae
mov
dec
loopne
aad
add
fsubr
sub
dec
cld
les
add
enter
pop
xor
sub
mov
cli
mov
in
pop
aam
xor
push
xchg
or
mov
int
dec
into
mov
fbld
mov
insl
inc
mov
test
es
loopne
dec
cmpsb
out
mov
iret
fidivl
xchg
push
ret
adc
xchg
mov
jle
adcl
jle
sub
shr
cmp
lret
jns
mov
add
mov
cwtl
mov
enter
in
mov
mov
push
push
dec
in
jmp
mov
cmp
mov
aam
or
fwait
lret
lods
rclb
sub
fbld
fcoms
stos
xchg
sbb
ret
push
stos
cmc
loop
insl
add
leave
mov
mov
mov
aad
push
jne
inc
dec
mov
nop
or
push
inc
sub
cmova
sti
xchg
call
mov
lea
rorl
add
in
mov
jmp
popa
imul
xchg
jmp
pop
testb
inc
jmp
sub
arpl
inc
outsb
ret
jmp
xchg
call
add
sbb
sub
adc
lods
push
mov
push
jge
mov
js
add
lods
xor
aad
sbb
jb
ja
mov
pop
pop
adc
outsl
sub
iret
or
lock
adc
dec
adc
dec
fst
lock
mov
mov
loopne
es
sbb
mov
mov
stos
mov
icebp
sbb
addr16
mov
std
testl
mov
iret
fwait
mov
testb
adc
add
sahf
sbb
dec
mov
movsl
ja
pop
adc
into
and
bswap
enter
sbb
iret
in
jecxz
cmpb
adc
in
inc
dec
push
lret
js
inc
fnstsw
addr16
adc
jae
mov
lds
out
popf
xlat
pop
xchg
and
aas
lret
movsb
lret
mov
mov
mov
dec
cmp
dec
push
loop
add
int3
loop
cmp
mov
ja
bound
arpl
rorb
movsl
dec
jo
cmpsl
inc
xor
and
fwait
int3
loope
icebp
fnstcw
std
popa
xchg
inc
jbe
outsl
or
mov
jge
sbb
mov
stc
push
aad
sub
jno
fwait
xor
cmp
in
adc
add
sub
xor
adc
insl
add
mov
pop
div
sbb
pop
rcrb
and
jp
xor
out
cmpl
pop
stc
es
cmp
lahf
bound
mov
rcrb
jbe
lahf
cli
jecxz
fwait
aam
icebp
sub
pop
sti
fidivrl
leave
xchg
and
pusha
xchg
mov
or
loopne
les
xchg
push
adcl
gs
nop
scas
ficomps
movsl
hlt
lods
sbb
push
icebp
imul
test
or
pop
dec
xor
sbb
push
adc
inc
sub
loope
bound
jno
add
inc
pop
mov
ja
push
outsb
mov
add
fistpll
mov
inc
lods
mov
jb
sbb
andb
scas
fnstenv
cmc
popa
cli
xchg
insb
fisttpl
jns
rcl
stos
sub
lahf
inc
jle
fwait
aas
popf
mov
cmp
fiadds
adc
xlat
or
jae
jl
arpl
pusha
sbb
std
orl
pop
jge
repz
addr16
mov
popf
in
cld
shll
jecxz
in
mov
pop
fisubl
sub
sbb
or
mov
push
cmc
out
repnz
mov
lcall
loop
or
push
arpl
pop
sbb
loopne
fldt
mov
fxtract
fldcw
dec
in
xorb
sub
in
xor
jp
mov
stos
mov
stc
or
clc
push
ja
mov
mov
push
push
pop
sbb
jne
hlt
inc
adc
and
icebp
mov
sbb
fwait
mov
dec
insl
lea
ds
cs
lea
jmp
lods
dec
cmp
sbb
push
fiaddl
mov
int
add
xchg
shr
cmp
ret
cli
subb
mov
jp
lahf
push
adc
xor
xor
mov
pop
fcomip
add
xchg
xlat
lea
stc
scas
test
ret
dec
jnp
stos
xor
xchg
mov
mov
mov
xor
lcall
push
and
movsb
inc
and
gs
out
jecxz
insl
aas
aam
add
in
dec
orl
inc
es
xor
dec
outsl
lock
mov
inc
out
xor
loop
lahf
jo
daa
test
add
or
and
and
lcall
nop
dec
js
mov
loop
adc
xor
cmp
shlb
inc
jg
cld
dec
gs
sbb
mov
pop
mov
in
pop
sub
xchg
andl
adc
repnz
hlt
lcall
int3
rorl
push
jl
jl
loope
stos
jecxz
arpl
sarl
pop
fnstenv
and
jne
pop
lahf
lods
cmp
cltd
hlt
stc
nop
repz
dec
mov
lret
test
jl
test
orb
xchg
mov
pop
insb
fdivr
lds
mov
jle
repnz
cwtl
jl
hlt
test
cwtl
mov
push
call
call
inc
mov
mov
jno
add
and
xchg
mov
repz
pushf
pop
mov
orl
sbb
mov
lods
subb
rcr
add
pop
gs
dec
outsl
push
int
jge
xor
mov
push
test
loopne
movsb
mov
pop
popf
cmc
int
xor
or
shll
push
mov
outsb
mov
dec
bound
mov
adcb
jns
vunpcklps
inc
xchg
rol
stos
scas
or
xor
loopne
xchg
gs
js
cmp
mov
jl
mov
sub
scas
adc
cltd
sbb
lahf
and
inc
inc
cld
mov
sti
pop
xor
scas
jp
jne
fisubrs
dec
mov
ljmp
push
shrb
movsl
push
sub
bt
jecxz
sub
stc
sub
and
sahf
cmpsb
xchg
fsts
mov
in
mov
shlb
add
stc
fwait
xor
lea
inc
mov
mov
mov
dec
push
andl
pop
inc
xor
inc
or
clc
dec
xor
sbb
inc
repz
int3
inc
ficoml
mov
es
out
rclb
xor
inc
repnz
rolb
stos
xchg
imul
push
lods
insb
popl
jno
push
mov
push
stos
pusha
out
or
mov
cmpb
shrb
leave
xlat
jge
mov
xchg
push
add
mov
and
or
mov
gs
dec
in
sub
hlt
adc
adc
pop
mov
jne
pop
mov
ret
rorb
cmp
mov
es
and
rcrb
inc
mov
and
push
jecxz
sub
or
add
cmp
mov
rclb
inc
lods
jg
lret
add
aas
dec
dec
cmp
inc
adc
popa
push
pop
daa
sbb
mov
and
test
in
jg
and
mov
mov
sahf
mov
out
xchg
inc
loopne
into
lret
outsl
push
lret
in
les
fisubs
lods
ds
pop
mov
push
std
imul
inc
in
stos
mov
out
hlt
cli
push
lea
adc
lea
insb
xchg
enter
mull
xor
cmp
add
ret
and
pop
or
mov
mov
mov
ja
outsl
fidivl
shll
push
pop
dec
jle
cmp
leave
cltd
push
cmp
out
repnz
xor
inc
add
repz
bound
shrl
lret
sbb
xchg
lret
movsb
jne
stc
jmp
or
xchg
test
sub
add
lret
ret
ret
add
sub
dec
pushl
lds
or
adc
mov
inc
in
imul
in
subl
xor
les
idivl
jecxz
into
and
or
push
jne
sub
jbe,pt
mov
cmpsb
mov
lahf
xchg
sub
jae
adc
out
in
sbb
test
loope
jb
movsb
lahf
insl
inc
aaa
pop
leave
fsubrp
xchg
mov
mov
sti
mov
in
iret
repnz
mov
int3
lcall
rcrl
mov
lret
pop
ficomps
btr
out
and
in
sub
pop
fistpl
push
jb
mov
mov
cmp
test
sbb
rcrl
adc
out
aas
jle
push
jg
jp
fnstsw
xor
sbb
xor
aaa
loopne
es
jge
mov
pop
inc
lock
sub
ljmp
adc
cli
orb
loopne
clc
or
insl
sbb
push
or
xchg
fwait
cmpl
cmpsl
mov
arpl
push
or
adc
dec
daa
add
dec
inc
adc
ffree
mov
stos
movsl
mov
mov
imul
mov
stos
sbb
shrl
and
icebp
outsl
sub
mov
or
cmp
aad
or
lahf
mov
leave
mov
les
subb
sarl
fbld
imul
insb
cltd
in
xor
arpl
add
shrl
int
and
sbb
xlat
repz
pop
sbb
jb
mov
sti
stc
call
rep
jae
out
sahf
mov
push
test
pop
push
pop
push
nop
or
inc
mov
pop
mov
push
and
mov
mov
pop
jnp
cmc
sti
movsb
or
inc
es
movsl
cmp
sub
push
sbbb
jmp
sub
outsl
cwtl
sbb
cltd
dec
cmp
test
xlat
scas
jge
push
or
cmc
gs
into
nop
sar
jnp
xor
ljmp
mov
div
mov
test
push
or
testb
aam
mov
mov
lret
mov
mov
sub
ljmp
insl
and
aam
mov
stos
xor
mov
jl
mov
test
mov
sahf
push
rclb
jl
mov
ja
cmp
xor
jnp
testl
jp
mov
lds
cmp
loop
adc
mov
push
inc
fdivrl
jecxz
jns
mov
mov
or
jno
adc
push
psubusb
inc
in
jg
jno
scas
and
pop
ljmp
imul
in
das
jbe
pop
sbb
push
mov
test
dec
mov
pop
and
lret
mov
dec
mov
imul
xorb
sub
enter
pop
dec
inc
dec
fiaddl
mov
inc
xchg
sub
fnstcw
fmull
mov
cwtl
jle
mov
mov
mov
ret
or
mov
push
mov
lods
int3
lret
iret
test
sahf
fs
dec
leave
jns
and
jns
stc
mov
fimuls
out
inc
dec
mov
out
es
ljmp
inc
sarb
aad
jne
lock
rorb
or
xor
push
add
xor
es
shrl
ds
sbbl
test
mov
mov
or
sbb
loope
mov
push
xchg
pop
lret
lret
mov
mov
adc
and
loopne
enter
int
aam
add
or
adc
push
jno
std
fsubl
rorb
dec
sub
push
jo
mov
repnz
add
mov
mov
jbe
insl
cmp
sub
out
and
and
insb
mov
mov
sbb
jl
mov
sahf
lret
mov
cmpb
sarl
imul
cmpsl
mov
push
movsl
dec
mov
jl
inc
xchg
mov
ds
insl
inc
cmc
aas
bound
mov
jge
dec
push
or
xlat
sub
mov
xchg
mov
data16
mov
mov
inc
sbb
cwtl
frstor
mov
sbb
mov
dec
lret
cmp
cli
mov
test
xchg
cs
mov
out
test
inc
ss
fs
push
scas
push
out
add
shrl
jb
cmp
sub
mov
aas
dec
nop
shrb
rorb
jg
fistps
and
adc
setns
xchg
pop
fs
sbbl
cmp
inc
leave
jl
gs
fistpll
ja
jmp
leave
shlb
inc
sub
lahf
and
fs
xchg
sub
cmp
fisubs
inc
sub
sahf
inc
mov
add
lods
bound
call
insb
cmp
repz
xlat
xchg
rorb
mov
inc
fwait
adc
inc
dec
add
insl
push
adc
xor
out
inc
mov
pushf
fwait
mov
js
push
loope
lock
fwait
popa
xor
test
push
mov
fldcw
sbb
xchg
in
in
xor
xchg
mov
dec
pop
cmp
jbe
fadds
sti
fidivrl
into
mov
sub
out
xor
adc
inc
and
pop
sbb
fisttpll
push
popf
push
jno
or
jg
fistps
into
dec
xchg
adc
jne
mov
cmp
clc
sub
mov
xlat
jecxz
aad
movsl
mov
dec
sbb
jge
xor
add
or
lea
sub
bound
das
ror
sub
outsb
add
sbb
mov
mov
mov
fidivrs
mov
mov
and
rcll
cli
or
rorb
js
adc
cmp
mov
pop
xorl
xlat
outsb
test
sub
movsl
inc
or
jne
fstl
jae
or
xchg
setnp
or
xchg
in
daa
dec
ss
shll
pop
fistpll
mov
jae
mov
addr16
into
xchg
pop
adc
inc
mov
xchg
inc
or
movsb
jle
jnp
xchg
or
and
movsb
lods
movsl
popf
int
jne
sti
icebp
xor
mov
nop
hlt
loopne
inc
ljmp
popl
dec
dec
mov
push
fwait
sarb
mov
sub
sub
ljmp
push
sub
hlt
inc
js
cmp
lock
and
loopne
sahf
and
jb
pop
xchg
dec
rol
or
push
ja
and
pop
push
jns
dec
dec
fcoml
and
lods
adc
rclb
jmp
sbb
add
dec
dec
push
mov
mov
xchg
inc
mov
pop
popa
pusha
mov
pushf
jae
push
adc
cwtl
jmp
pop
subl
mov
push
sahf
aam
jle
dec
mov
xchg
cltd
lods
sub
ss
adc
bound
and
and
dec
xor
pusha
mov
lock
arpl
lods
cli
in
mov
mulb
test
pmullw
int3
adc
mov
lock
xchg
in
mov
cmp
fisubs
cmp
push
jmp
adc
jbe
xor
mov
test
push
test
push
je
jge
lea
pusha
adc
adc
dec
push
xchg
dec
pop
fnstsw
shll
add
cmc
cs
out
mov
sub
jae
dec
sub
cmp
mov
repnz
fs
inc
adc
adc
repz
add
mov
stos
popa
test
and
cltd
pop
stc
js
cmpsb
inc
test
sahf
mov
add
test
dec
cs
cltd
jbe
cmp
scas
push
cmp
dec
sti
lock
iret
repz
out
stos
out
adc
hlt
jns
mov
mulb
cmp
call
pushf
call
mov
mov
push
pop
mull
addl
xor
cmc
adcb
out
sub
out
sbb
jp
test
jo
sub
inc
add
arpl
cmpsb
jbe
mov
arpl
xchg
xor
mov
int3
xorl
cmpsb
lahf
cwtl
jmp
sbb
fwait
popa
push
ds
xchg
jo
arpl
in
or
rorb
dec
cmpsl
xchg
mov
shr
sbb
xchg
jnp
insb
mov
mov
lea
push
incb
jbe
popf
cmp
add
mov
test
xchg
push
and
add
jnp
nop
dec
add
hlt
mov
mov
fsubl
xchg
gs
jecxz
lds
pop
fbstp
lret
fs
daa
lcall
mov
inc
incb
pop
jle
pop
test
add
xchg
jnp
cld
inc
rcl
or
xor
inc
adc
loope
inc
mov
jo
iret
mov
movsl
jecxz
push
lret
mov
jp
jno
adc
fsubs
es
outsl
jmp
fcompl
pop
inc
nop
and
icebp
sub
cs
dec
rclb
cli
jge
outsb
repz
push
imul
mov
leave
add
in
es
xchg
mov
mov
adc
push
or
or
test
push
xchg
cmpsl
mov
cmp
nop
enter
push
push
add
mov
xor
sbb
xor
sbb
inc
inc
mov
es
and
xchg
push
and
mov
lock
jno
sub
mov
insb
popa
sub
aaa
addr16
lahf
add
aas
aas
pop
cmp
and
cwtl
in
daa
test
push
or
jns
push
push
add
pushf
adc
inc
xlat
jne
mov
jg
shl
insb
test
fimull
mov
out
fcoms
jp
es
arpl
shl
daa
sbb
inc
pop
pop
rcll
inc
and
cmp
mov
add
movsb
inc
sbb
fwait
negl
mov
data16
movsl
push
test
mov
push
test
mov
loop
dec
dec
sbb
out
lds
int
int
in
pop
popa
pop
loop
pop
mov
aam
jecxz
inc
or
or
push
sub
jge
in
add
dec
dec
push
pop
and
or
dec
aad
xchg
adc
sub
popf
mov
sbb
or
mov
jle
in
pop
adc
pop
fldt
mov
push
scas
pop
ret
nop
or
ds
int
and
inc
mov
gs
mov
imul
dec
arpl
inc
loope
pop
add
add
test
jae
arpl
mov
push
in
orb
sbb
mov
lret
adc
ret
ja
fcomps
jo
pop
cld
fldenv
clc
hlt
dec
push
sahf
fsubrl
cmp
dec
pop
outsb
sti
aaa
bound
in
push
cmpsb
fbstp
jns
int
movsl
mov
jl
loopne
iret
push
mov
adc
lret
cmp
push
sbb
push
jb
ret
jb
inc
mov
fwait
jl
pop
loopne
addl
in
sub
mov
dec
inc
mov
out
sahf
jmp
sub
lret
mov
cli
cmpsl
stos
inc
push
and
pop
bound
test
jge
or
pop
in
imul
mov
pop
push
xchg
lret
push
or
call
push
jecxz
and
mov
or
pushf
lea
xchg
pop
outsl
mov
imul
and
xor
xor
cmp
xchg
sbb
scas
inc
repnz
pop
add
stos
adc
loop
dec
fsts
std
test
xor
push
xchg
scas
sbb
lods
js
gs
or
rdtsc
xor
add
or
pop
cmp
lds
pop
pusha
cmc
add
or
xchg
movsb
jg
pop
mov
lods
fs
clc
stc
mov
dec
sbb
xchg
dec
jl
std
dec
push
aaa
mov
cmp
loopne
daa
and
cmp
leave
or
rorl
rcrb
lcall
push
popa
pop
adc
cld
adc
out
mov
ret
jno
gs
enter
xlat
outsl
andb
mov
fsubrs
pop
mov
adcl
in
add
in
or
lret
std
test
add
cwtl
stc
dec
sub
adc
mov
rclb
shrl
imul
mov
or
fst
out
ficoml
test
js
dec
into
outsb
push
stc
subb
lahf
cwtl
insl
mov
test
dec
pop
add
or
aad
pop
inc
sarl
hlt
aad
and
adc
mov
lock
aad
cmc
or
dec
and
sbb
int3
movsb
sub
fldcw
mov
ret
in
sub
fisubrs
add
inc
inc
mov
pop
sbb
and
inc
and
push
sub
inc
jge
stos
push
test
sti
rclb
aas
jg
cmp
mov
test
sbb
flds
jo
movsl
add
xchg
dec
gs
pop
add
jmp
sarl
xchg
aas
dec
sub
mov
pop
data16
icebp
or
hlt
shrb
std
jg
add
loop
mov
sbb
push
xor
xchg
jl
push
push
adc
sbb
out
add
stos
jle
fidivs
repz
lods
adc
loopne
dec
pop
sbb
inc
cmp
jbe
mov
push
dec
test
push
mov
popa
xchg
mov
jge
inc
into
mov
jmp
and
push
sub
adc
rclb
es
mov
mov
push
es
cwtl
or
ljmp
pop
cltd
lahf
pushf
push
mov
loopne
cmp
mov
test
leave
dec
jle
pop
loope
jmp
pop
ds
push
adc
sub
adc
lock
lods
out
sbbb
sub
sahf
pop
mov
insb
bnd
mov
jge
push
mov
movsb
pop
sarl
idiv
daa
sub
xchg
push
stc
jmp
jno
push
pop
pop
xchg
dec
push
pushl
mov
mov
fdiv
fwait
xchg
repz
push
sbb
mov
jecxz
ja
pop
xacquire
pop
cmc
les
cmpsl
push
push
push
mov
insb
push
pop
pop
jno
add
out
push
or
ds
jmp
mov
dec
mov
jnp
sbb
lahf
hlt
addr16
das
inc
mov
out
in
dec
and
pop
out
jns
sub
sub
movsb
aam
xchg
out
stos
jmp
aaa
leave
xchg
rcll
push
push
in
inc
pop
xor
push
cmp
pop
adc
pop
insb
nop
imulb
jp
cli
xchg
aam
adc
push
ret
inc
clc
movb
mov
xor
mov
ficomps
pop
cmp
cmpsb
call
inc
popa
pop
imul
pop
mov
cmpsl
subl
lahf
sbb
mov
js
push
stos
mov
daa
stos
stos
mov
sub
rolb
and
movsb
bound
sub
std
or
adc
sarb
test
and
sahf
and
mov
jns
mov
es
notb
ljmp
sbb
sub
test
rclb
out
lods
xchg
std
addl
and
das
jge
mov
imul
or
insb
inc
push
in
es
mov
pusha
test
xor
daa
sbb
int
and
jno
xor
xchg
mov
mov
int3
repnz
scas
and
lcall
push
aaa
or
pop
cmp
pop
test
xchg
fmul
in
jge
enter
mov
out
jb
cmp
push
cmp
cli
call
clc
in
dec
add
jmp
in
clc
jmp
pushf
fidivs
bound
push
popa
adc
test
out
pop
ds
call
fdivs
std
in
hlt
and
jbe
add
fdivl
xlat
shrl
test
cmp
bnd
scas
seta
aas
ljmp
jno
cmp
enter
xor
sub
pop
mov
shlb
or
or
pop
out
push
in
mov
ds
fistpl
mov
pop
cmp
insl
and
fildll
dec
insb
push
into
es
xchg
pop
pop
cmp
gs
bound
nop
or
inc
mov
adc
mov
xchg
out
cmp
mov
les
jle
sub
cmpsb
sbb
cld
jl
and
mov
dec
xor
xor
jmp
pop
movsl
jg
and
inc
push
and
jge
roll
fwait
adc
pop
out
pop
bound
out
aam
shlb
sbb
sbb
daa
idiv
pop
idivb
cmp
repnz
ret
add
mov
cwtl
mov
xor
adc
inc
aas
mov
mov
jnp
daa
xchg
bound
aaa
inc
ficoml
sarb
lretw
cmp
push
pop
icebp
sbb
leave
push
jmp
add
xchg
aam
lods
xorb
fucomi
sbb
in
pop
xchg
add
push
lret
fxch
mov
add
add
loopne
add
pop
mov
mov
and
call
popf
xchg
imulb
push
cmp
adc
out
testl
jge
adc
jmp
outsb
sub
out
sar
mov
mov
mov
rcl
adc
in
cmp
sbb
addb
loop
xchg
pop
cwtl
sbb
push
cmc
loopne
shl
sub
imul
loope
jle
popa
in
testl
add
hlt
lea
jl
divl
mov
push
fsubr
push
lea
cs
jg
or
hlt
cmc
dec
cs
inc
mov
sub
test
aaa
mov
cmp
in
sbb
ljmp
ljmp
in
push
fstl
fmuls
mov
pushf
sbb
jae
mov
dec
data16
push
fcmovnbe
xchg
push
sahf
mov
ja
popf
pop
ffreep
int3
or
xor
mov
das
outsb
sub
sub
inc
ja
xchg
push
push
dec
mov
sub
shll
or
dec
cmp
cmp
jns
dec
dec
push
jp
push
sub
fiaddl
dec
cpuid
ret
outsb
cmpsl
incb
test
sbb
inc
pop
sarb
xor
sub
sub
cwtl
lds
adc
addr16
in
mov
lea
into
scas
std
int3
or
jbe
inc
mov
outsb
ja
dec
jecxz
inc
rsm
mov
loop
mov
mov
hlt
cs
test
push
push
in
jbe
in
mov
seta
in
ret
in
cld
sub
pop
arpl
cld
mov
sbb
inc
daa
jb
pop
arpl
es
out
jmp
inc
push
aam
repz
aam
in
lcall
pop
stos
pop
ljmp
dec
inc
adc
and
xchg
shr
jo
arpl
int
mov
aam
push
inc
or
loop
push
lock
xchg
testl
xchg
mov
push
cmp
leave
pop
adc
ror
xchg
inc
fwait
repz
les
mov
jo
jle
ja
mov
inc
mov
test
test
fsubrs
push
sub
sub
xor
xor
fimull
cmp
dec
subb
mov
mov
mov
outsl
fucomi
cmp
dec
lret
sbb
mov
pusha
xchg
inc
sbb
inc
in
and
sbb
add
xchg
test
hlt
xor
jg
stos
pushf
cli
sti
sbb
pop
mov
js
das
pop
aad
sbb
xchg
loope
xorl
cli
adc
pop
dec
ljmp
iret
pop
inc
xchg
mov
jae
add
rcrl
mov
test
lods
ja
cs
xor
pop
inc
out
mov
mov
orb
mov
xchg
ror
and
pop
addr16
out
inc
push
dec
adc
mov
arpl
pop
out
dec
arpl
aas
in
insl
std
xchg
pop
cltd
fs
dec
mov
imul
cmp
fists
mov
dec
or
std
cmp
mov
dec
imul
adc
jg
neg
popa
adc
xchg
mov
mov
jmp
loopne
pop
jb
iret
xlat
icebp
add
ds
movsb
xor
in
out
mov
lods
mov
push
lret
xchg
int
mov
test
popa
fmulp
and
sub
sub
int
add
adc
out
push
mov
fildll
mov
xor
xchg
cltd
pop
cmc
cmpsb
mov
sahf
repnz
lret
je
sbb
and
sub
xchg
incb
jae
stos
push
outsl
arpl
and
aam
je
aaa
sub
daa
mov
inc
outsb
jg
cltd
and
mov
outsb
mov
roll
sahf
push
lret
push
or
and
ljmp
jge
sub
movsb
mov
stos
add
std
arpl
add
jno
fidivrl
or
dec
and
dec
jbe
sahf
jnp
int3
pop
enter
sub
ret
cmp
mov
add
scas
pop
nop
xor
jp
cmc
mov
aad
dec
and
or
stc
and
xor
shlb
test
sub
and
inc
pop
push
push
test
jo
mov
stc
xor
sbb
jns
bnd
xlat
nop
pop
repz
jo
clc
or
lock
push
int
je
scas
inc
cmc
test
xor
mov
pop
fbstp
into
and
inc
jo
dec
cmc
jnp
data16
mov
icebp
das
pusha
lods
dec
call
insb
jnp
testb
or
and
jo
xor
cmpl
push
pop
jge
pushf
dec
out
movsl
shrl
dec
test
mov
mov
je,pn
lock
popf
sbb
mov
imull
xchg
sbb
sbb
outsl
mov
cmp
cmp
cmp
test
jmp
pushf
add
test
popf
into
repz
or
add
add
xor
and
mov
es
cld
loope
push
dec
inc
das
leave
lahf
mov
dec
divl
in
insl
cmp
adcl
sbb
dec
dec
fwait
stc
fsubl
test
rcr
popa
movsb
aas
mov
pop
jmp
and
insb
jo
dec
mov
adc
push
mov
repz
push
push
les
lcall
lods
fwait
push
jne
add
add
scas
insl
jp
shlb
sub
imul
aas
mov
sbb
sbb
xor
imul
jae
mov
jg
xrstor
insb
xchg
push
push
xchg
jge
add
xchg
push
pop
xor
pop
aas
mov
push
or
push
cmp
int3
incl
push
aas
and
mov
rolb
cmp
mov
mov
xchg
dec
icebp
loopne
sbb
sbb
mov
mov
ja
pusha
mov
ds
adc
es
mov
jmp
cltd
dec
call
sub
add
push
pop
jp
xor
leave
loope
pop
adc
divb
aad
test
fsubr
xor
xchg
jnp
mov
or
rorb
out
jnp
outsb
cmpb
insb
bound
inc
mov
cmc
inc
inc
and
mov
outsb
cmc
pushf
or
jmp
cmp
out
xchg
lahf
lcall
sub
bound
mov
sub
insb
ds
je
cmp
adc
dec
out
out
in
pop
test
stos
mov
lret
and
mov
outsb
loopne
mov
out
popf
pop
or
add
lret
mov
jo
pop
mov
inc
fcmovb
scas
push
sub
out
jecxz
mov
sbb
test
je
push
ds
lret
cli
inc
sbb
sbbl
dec
jle
mov
push
adc
pusha
shrb
cmp
idivb
stos
addr16
add
jns
aaa
sbb
mov
rcl
fadds
jg
lahf
mov
ljmp
cmpsb
aad
les
jno
mov
and
cmpsl
sub
lea
mov
dec
das
mov
and
mov
cmp
jp
popa
mov
hlt
and
pop
push
add
lret
inc
cltd
sbb
push
lds
sbb
inc
addr16
call
je
punpcklbw
adc
jmp
std
xchg
fwait
in
fistl
dec
idiv
cmp
movsl
jg
test
pop
mov
lds
pushf
loope
xor
ljmp
add
rorl
imulb
xchg
pop
roll
and
adc
sub
dec
loop
lret
and
or
call
mov
add
mov
or
add
dec
dec
xor
mov
dec
outsl
add
outsb
popf
xchg
insb
pop
sub
adc
sarb
pop
popa
pop
andb
test
divb
cs
mov
sub
cmp
sbb
out
int3
add
pop
cs
fsubp
popf
pop
xlat
and
pop
mov
add
push
repnz
add
xor
push
or
cmpsl
cmpl
mov
std
xchg
push
pop
fists
xchg
cmpsl
lea
mov
pusha
mov
fs
outsb
loopne
sbb
push
aaa
les
movsl
jp
ret
sub
rcrb
sbb
mov
dec
ja
test
insb
jp
push
mov
scas
ret
pop
add
test
or
sarb
addr16
push
or
sahf
lcall
mov
jl
inc
popf
clc
push
aaa
shll
jbe
xor
jbe
arpl
addr16
sub
aad
test
jl
in
or
loope
aas
cltd
dec
aad
push
repnz
or
mov
mov
roll
lahf
out
inc
sub
out
mov
mov
mov
hlt
mov
dec
sti
es
repnz
sarl
mov
and
pop
inc
jge
mov
mull
jb
cmpb
scas
cmp
sub
mov
sub
js
xor
jp
sbb
fsubl
jbe
scas
ljmp
or
jns
imulb
rorl
cmp
enter
or
cmp
xor
faddl
loope
in
sbb
mov
ret
mov
call
cld
add
roll
and
adcl
repnz
or
out
fnstsw
jg
lock
js
push
sub
sbb
mov
adc
pop
cmpsb
push
dec
push
cmp
into
push
mov
cld
push
ja
dec
mov
adc
xchg
and
xor
mov
adc
mov
xchg
xchg
loopne
sti
sbb
stos
lods
sub
std
pop
add
loopne
pop
sbb
ficoml
int
fcompl
push
mov
mov
popf
mov
fcoms
sbb
jecxz
data16
rorl
sarl
aam
adc
dec
add
xchg
cli
mov
mov
loop
cmc
jns
cli
dec
cwtl
jp
les
iret
mov
push
xchg
push
das
adc
cmp
outsb
inc
loopne
cltd
in
loope
std
pushf
cmpl
enter
pop
lods
push
iret
es
je
sbb
fs
pop
das
cwtl
cmpsb
bound
and
push
add
es
fiaddl
loopne
cmp
movsb
repz
sbb
dec
jecxz
repnz
xchg
mov
out
or
cmpl
pop
mov
push
daa
je
sub
aas
and
imul
mov
cmpsb
loopw
iret
mov
sub
out
mov
das
unpcklps
cmc
mov
mov
cmpsl
jb
fildll
add
lret
ss
and
ljmp
mov
dec
jno
inc
pop
and
js
popa
pop
or
nop
sub
jnp
and
test
xor
adc
and
and
scas
data16
cwtl
mov
stos
inc
je
mov
imul
inc
inc
add
push
dec
push
out
ja
push
lods
adc
push
pop
sbb
lcall
cmpsl
and
push
push
hlt
popf
call
adc
mov
pop
inc
imul
pop
ret
pushw
or
and
andb
pushf
mov
lret
out
or
js
je
int
xor
jp
mov
mov
ljmp
popa
adc
xchg
loopne
mov
popa
sti
xor
push
add
fsubrl
jmp
push
data16
aam
stos
into
insb
xchg
dec
xor
lock
lret
shl
loope
sbb
stos
pop
push
loopne
xchg
xor
jg
mov
in
xchg
sbb
loope
stos
cmp
fisttps
cmp
sahf
fld
frstor
ret
fs
shll
cltd
xchg
dec
sbb
arpl
ljmp
add
add
mov
enter
mov
and
cmp
in
hlt
adc
cmc
jne
fldcw
hlt
scas
push
rcll
dec
dec
insb
xor
cltd
xor
mov
lods
pop
dec
sub
adc
ja
popa
and
pop
pop
movsl
out
imul
popf
adc
cmpsb
bound
and
push
out
movsl
cvttps2pi
addr16
dec
int
enter
jbe
cmp
jne
mov
in
or
mov
icebp
jo
push
test
dec
pop
and
out
test
cli
pop
sbb
in
dec
cld
incl
cmp
out
vminps
jg
out
stc
clc
shlb
aam
mov
popa
and
mov
fists
pmullw
je
call
cmpsl
xchg
lock
inc
icebp
jge
pusha
repnz
and
dec
dec
js
push
imul
in
pop
pop
xchg
and
xchg
mov
cmp
hlt
mov
shlb
notb
sbb
pop
cmpsl
mov
test
hlt
pushf
insl
fisttps
rol
in
jns
nop
mov
jecxz
mov
mov
lahf
dec
adc
decb
jp
fs
mov
lret
es
push
repnz
sbb
and
push
fstl
cmp
scas
loopne
imul
add
cmp
ret
lods
ja
and
ss
notb
jbe
sbb
enter
insb
mov
mov
ficoms
add
stos
add
cltd
addb
repnz
lods
or
stos
test
xchg
jle
in
cmp
cli
leave
mov
sbb
inc
mov
jl
cmp
jno
jl
mov
jne
jne
sbb
add
dec
push
decl
jbe,pn
gs
mov
sub
jl
mov
outsb
jno
daa
aam
rolb
out
xchg
jl
cmp
jmp
inc
jl
mov
mov
sbb
dec
mov
movsb
ret
pushw
fisubs
addr16
lret
jge
sbbb
mov
outsl
sub
fdiv
mov
pop
sub
inc
inc
pop
xlat
dec
pop
fldcw
add
jne
shlb
jecxz
pop
loop
xchg
out
aas
insb
repnz
cli
dec
cwtl
popf
jbe
test
mov
adc
or
lcall
nop
mov
jno
ret
push
mov
fwait
adc
pop
jle
rclb
sar
fldt
in
pop
or
roll
inc
push
das
lret
jg
cmp
cltd
das
add
outsl
stc
je
sbb
insl
and
push
cmp
fdivl
push
adcl
cmp
or
and
int
push
stos
movsb
mov
movsl
adc
push
int
jae
cmp
add
cmpsl
mov
cld
inc
add
movsl
mov
icebp
or
and
into
inc
addl
inc
test
out
push
cmp
xchg
cmp
adc
cmc
push
call
xchg
cld
stc
leave
je
js
idivl
sbb
push
push
push
rcll
push
test
mov
pop
cmpb
or
mov
sbb
outsl
push
lods
or
jle
sub
and
adc
push
xchg
call
movsb
addr16
arpl
xchg
loopne
fdiv
mov
lcall
in
xchg
cmp
cltd
mov
mov
jno
xchg
sbb
xchg
lock
movsl
sub
sbb
xor
jo
enter
jbe
fs
lret
out
hlt
cs
inc
push
mov
mov
fld
std
stos
xor
stos
xor
lret
enter
or
imul
dec
dec
pop
xlat
mov
test
push
mov
enter
pop
jne
test
and
loope
test
mov
and
in
xchg
mov
pop
pop
icebp
cmp
mov
fs
sub
dec
int3
repnz
call
int3
sbb
inc
push
sbb
je
sub
jle
sbb
lret
pop
adc
lock
jns
aas
adc
mov
cmp
cltd
or
mov
je
into
icebp
add
lret
push
std
sbb
cwtl
sbb
sub
xor
loopne
mov
insl
sar
mov
jge
push
ret
add
data16
out
add
mov
mov
add
sbb
add
sbb
mov
mov
sti
adc
and
nop
dec
call
and
mov
cltd
pop
jecxz
or
outsl
pop
sub
xchg
jp
and
push
sbb
fisubs
jbe
mov
xor
mov
xchg
in
inc
dec
mov
cld
push
push
xor
pop
stc
mov
aaa
into
mov
sbb
lds
out
mov
daa
mov
test
mov
xchg
jl
in
push
movsb
mov
imul
rcl
repnz
mov
mov
into
in
frstor
dec
leave
std
jge
xchg
xchg
xchg
gs
mov
stc
imul
inc
insl
popf
mov
push
mov
xchg
shrb
dec
cmp
lods
cmpsl
call
adc
pop
jne
add
pmaddwd
insl
pusha
mov
test
jecxz
subl
es
pusha
shlb
aaa
out
es
icebp
mov
rcl
outsw
push
adc
cmp
adc
sbb
and
pop
rorl
or
or
push
jno
data16
xor
jg
cli
sbb
filds
sar
xor
jne
add
aas
je
ret
dec
lea
inc
sbb
outsl
pop
dec
rclb
notb
pushf
mov
or
jno
decl
fmulp
data16
dec
nop
xor
stos
clc
in
std
xor
aam
bsf
jnp
subb
insb
mov
inc
ret
mov
mov
les
insl
add
cs
jno
dec
out
or
pop
imul
sbb
imul
push
popa
sti
rcll
sarb
push
jno
stc
jl
inc
sub
sub
dec
mov
call
loopne
mov
pop
ficompl
repz
in
rolb
sbbl
int3
cmp
xlat
jns
add
fsubl
mov
outsb
xchg
push
sub
push
lock
jne
mov
push
loopne
pop
arpl
rorl
cmc
insb
mov
adc
pop
movl
dec
mov
sbb
test
sbb
sub
pop
mov
push
add
pop
and
in
in
jb
out
xlat
xchg
dec
in
aad
add
or
pop
jb
inc
popf
int3
pand
inc
xchg
cmp
mov
jg
popa
call
movsb
ss
cmp
into
sbb
hlt
lret
xchg
scas
out
popa
filds
test
mov
mov
push
andl
jle
push
iret
popf
shl
sub
adc
sub
scas
lret
std
xor
xor
mov
in
add
fcmovnu
adc
dec
addb
cmp
xlat
fidivrs
push
das
lock
lods
gs
jbe
bound
aad
sub
addb
push
loopne
add
push
int3
in
push
jmp
xor
mov
add
into
sti
mov
repnz
int
popf
push
mov
mov
and
movsb
pop
mov
lock
int
scas
inc
aas
aad
xchg
lock
jns
sub
dec
push
pop
jns
or
jbe
pop
ljmp
and
sbb
fbstp
adc
mov
lcall
adc
jle
sub
ss
ret
xchg
imul
mov
mov
iret
mov
jne
lea
cltd
stos
movsb
les
je
jae
jmp
repz
mov
jo
hlt
loop
hlt
adc
or
aaa
aam
bound
popf
ds
xor
push
xchg
les
adc
in
sbb
inc
add
ljmp
sub
cltd
pop
jb
sahf
rclb
scas
mov
stos
and
xchg
lahf
mov
movsl
out
fs
int3
ds
xor
ss
inc
xchg
int3
mov
jae
dec
arpl
pinsrw
mov
dec
sub
fsubrl
addr16
arpl
fisubs
push
in
jl
stos
fsubrl
test
xor
cs
movsb
ljmp
sub
or
mov
sti
shll
cmc
push
or
xchg
dec
addb
nop
movsb
dec
movsl
aas
mov
inc
sahf
das
xor
test
fldenv
test
test
sub
mov
mov
clc
daa
iret
push
shll
scas
fnstenv
add
inc
aad
pop
push
fiaddl
rcrb
stos
push
mov
fbstp
add
sbb
stc
aad
aam
loope
inc
sbbb
dec
sahf
dec
adc
ljmp
and
fs
imul
sub
call
fists
dec
push
loope
pop
push
and
pop
xor
hlt
cli
cltd
fsubr
divb
xor
and
inc
mov
mov
es
dec
addr16
push
mov
mov
jns
xchg
mov
ss
rcl
push
out
in
ljmp
inc
mov
in
gs
lret
dec
mov
dec
cmp
js
sbb
aas
lcall
out
fnsave
sarl
jle
pop
in
mov
xor
sbb
lds
outsb
movsb
xchg
divl
pusha
mov
fstpl
dec
push
iret
or
xor
repnz
loopne
lds
icebp
cmp
jno
in
ds
dec
ficompl
dec
test
mov
clc
gs
pop
rcrb
lret
xchg
ja
jo
std
call
inc
fucomi
nop
stc
decl
jg
pop
adc
push
push
out
pop
xor
lret
sbb
nop
int3
push
xor
ss
ljmp
ficompl
add
movsb
ret
dec
cmp
adc
or
push
push
dec
cmpsb
mov
mov
cmp
cltd
loope
jnp
daa
icebp
jb
out
mov
xchg
push
lcall
orb
aaa
push
or
bound
movb
in
cmpl
push
adc
arpl
insl
pusha
clc
xor
pop
sub
dec
sub
push
xor
cmp
jp
movsb
mov
test
rcr
cld
dec
jp
xor
jmp
das
and
inc
xchg
out
adc
insb
ljmp
sub
addr16
xor
mov
movsl
enter
pop
rcrb
int
mov
pop
inc
jp
cltd
push
cmp
cmp
jmp
aas
mov
xchg
ret
imul
adc
mov
mov
sbb
push
add
jg
std
es
int3
sub
rolb
imul
sub
push
sahf
jmp
xchg
dec
sahf
loopne
mov
test
push
cmp
xchg
or
in
mov
outsb
fdivrl
push
je
push
fcmovb
mov
mov
fwait
mov
and
xlat
pushf
mov
popf
pushl
andb
test
dec
push
out
popa
cmp
in
lahf
cmp
out
and
xchg
jo
sbb
push
inc
daa
mov
mov
test
mov
ficompl
leave
inc
pop
inc
js
repz
mov
dec
xchg
xorb
or
lcall
or
jle
out
mov
jmp
mov
add
test
lock
add
int3
pushf
jno
dec
cwtl
imul
daa
orl
xor
cmp
jb
mov
insb
scas
mov
inc
outsl
push
or
aas
push
sub
mov
pusha
mulb
sub
cmp
es
stos
inc
dec
sub
or
inc
add
mov
jmp
sahf
out
scas
mov
jo
cmp
push
test
lcall
inc
lcall
sahf
push
push
mov
dec
add
push
dec
push
bound
sbb
jmp
movsb
ds
js
arpl
inc
shll
sti
push
sahf
sub
test
sub
sbb
in
les
cmp
push
pop
adc
push
inc
stos
mull
jo
sub
jns
inc
xor
add
add
inc
imul
das
aaa
jmp
je
fistl
movsb
or
or
mov
push
bound
fwait
xchg
and
xor
sbb
cmp
in
xlat
or
ds
jae
inc
scas
jl
or
push
popa
mov
xor
stc
adcl
movsl
jecxz
jecxz
aas
andl
xor
mov
xor
in
push
int3
mov
insb
mov
xchg
jmp
dec
js
push
inc
inc
sbb
lds
jle
aas
jne
cli
or
leave
or
movsl
fldenv
inc
outsl
adc
push
mov
add
sbb
leave
pop
lock
gs
cli
orb
test
inc
je
out
es
std
push
bound
in
hlt
mov
xor
in
sub
in
out
fsubs
cmp
add
xor
js
popf
sub
mov
es
mov
cmpsl
cli
das
hlt
ds
pop
jnp
cmp
jmp
xor
xor
daa
jnp
jecxz
sub
imul
jp
outsl
xchg
pop
clc
scas
or
or
cmp
adc
fisttpl
fldenv
test
mov
test
mov
cld
pop
cmpsb
pop
and
fistpll
xor
xchg
ja
loopne
push
sbb
daa
repnz
arpl
jae
cmpsl
pop
add
lds
sbb
jno
aas
cmpsl
mov
mov
cmp
repz
jecxz
fsub
js
leave
mov
lret
iret
pop
mov
call
popa
push
add
mov
lcall
cwtl
xlat
aaa
or
or
cmp
mov
imul
mov
adc
mov
or
fcmovu
push
mov
test
test
cmpsb
pusha
jne
xchg
mov
adc
mov
xchg
pop
dec
sbb
push
into
adc
jne
xchg
sahf
jmp
loope
or
cmp
int
add
xchg
push
xchg
dec
aam
cmp
das
pop
pop
jg
xchg
add
dec
xchg
stc
icebp
fadds
arpl
addr16
insl
addr16
std
cmp
ljmp
fisttpl
std
xchg
lret
pusha
mov
lahf
and
inc
fstpl
and
in
mov
idivb
push
in
cmp
adc
pushf
pop
adc
in
aaa
add
lds
fiaddl
and
xor
dec
mov
hlt
jecxz
adc
pop
sub
xchg
stc
jle
test
stc
ss
and
stos
nop
or
in
sbb
sub
mov
scas
div
scas
mov
ficoml
xor
cld
push
xchg
insb
xchg
xlat
test
cltd
imul
les
lods
and
mov
sahf
cmc
jmp
pop
xor
push
cmc
loop
jecxz
add
jo
jnp
adc
xchg
jg
test
jecxz
xchg
in
or
push
outsb
mov
xor
mov
popa
push
pop
test
mov
sbb
fwait
mov
aad
cltd
sub
jle
call
jae
hlt
movd
call
lea
mov
add
xchg
hlt
out
out
nop
addr16
jmp
shrl
lret
lds
cmp
icebp
cs
cmpsb
repz
sub
test
and
out
out
out
pop
andb
push
nop
mov
push
imul
xorb
mov
loope
es
repnz
call
pop
stos
dec
lock
jb
jp
dec
aam
and
out
mov
cmp
inc
lock
cmp
test
fwait
jo
xor
jae
movb
call
mov
pop
shll
sbb
pop
xchg
mov
adcb
or
cmp
sbb
add
cmpsl
int
jmp
stc
cli
stc
cld
test
mov
cs
outsb
lcall
rolb
lock
push
fadd
mov
lods
dec
dec
add
cmp
in
ror
scas
mov
ljmp
push
sbb
adc
sbb
jp
jecxz
dec
dec
jb
xchg
adc
outsb
out
sbb
cmp
pop
xor
sbb
lods
roll
negb
push
sub
xchg
mov
pop
jne
rcl
pop
cli
inc
loopne
into
pusha
xchg
aam
andl
pushl
add
mov
xlat
stos
out
stc
jge
push
xor
pop
jo
mov
xchg
mov
divb
shll
jbe
pop
lea
aad
or
inc
iret
sub
pop
cli
fimull
add
xlat
jo
push
push
nop
fpatan
int
add
cmp
push
xchg
dec
xchg
shl
mov
cld
mov
fsts
scas
cmc
lret
inc
in
lret
dec
in
ja
cmp
and
lahf
sub
fstpl
push
jle
aad
lods
sub
inc
sub
hlt
xchg
stc
push
imul
pop
je
dec
cmp
popf
sub
inc
adc
xchg
decb
sbb
push
inc
sub
xchg
into
call
out
fwait
jge
add
shr
xlat
add
add
in
mov
shr
sub
or
pop
mov
add
fbld
iret
dec
xor
xor
pop
pop
xor
sbb
cmp
pop
pop
xor
iret
stc
sbb
jb
movsb
out
fcmove
sub
and
xchg
push
jp
inc
mov
mov
pop
addl
mov
repz
pop
loopne
ficomps
push
jbe
push
mov
add
lret
cmpsl
js
or
and
xchg
cmp
loop
loop
and
cwtl
loope
popf
pop
jmp
pop
je
lods
mov
mov
mov
je
test
pop
lcall
repz
or
lds
jns
stc
arpl
push
stos
aas
jp
sbb
mov
popw
faddl
lcall
test
sbb
push
cmc
ror
cmpl
cmc
pusha
daa
push
int
cmp
sbb
das
aaa
cmc
out
inc
cmpsb
data16
push
scas
jg
jae
mov
mov
push
jle
fnsave
jecxz
mov
cld
mov
pop
sub
xchg
and
sub
shll
xor
into
out
test
sub
fistpll
rcr
adc
mov
sub
dec
stos
pop
jo
xchg
jg
sbb
jmp
stc
outsb
nop
gs
sbb
push
add
pop
lahf
xchg
test
out
fiadds
fnstenv
or
insb
adcl
jge
lods
cmpsb
pop
lds
or
push
notl
jns
call
aam
lods
and
cld
pop
lcall
mov
xchg
add
int
out
scas
cmp
push
ret
push
in
rcrb
mov
jbe
and
and
adc
jne
hlt
jo
push
sub
jle
xchg
or
fnsave
xor
cmpsb
lcall
add
jecxz
out
hlt
adc
push
jl
insl
js
xchg
mov
push
xor
bound
shl
and
sbb
addl
add
inc
or
stos
pop
mov
aad
mov
jg
lret
jo
mov
or
inc
out
repnz
and
fsubs
xor
sbb
stos
cli
lock
in
test
adc
add
sahf
stc
push
fcmovne
cmp
fdivrs
arpl
lcall
shl
lods
and
mov
iret
mov
jb
lahf
ss
aaa
cmp
dec
pop
xor
ljmp
or
and
push
push
icebp
xchg
sbb
movd
in
int
xor
lcall
cwtl
cmp
push
bound
sub
or
aas
adc
aaa
or
jecxz
xchg
pop
push
cltd
es
stos
xor
xchg
iret
mov
push
clc
inc
lds
mov
add
jne
test
sahf
sbb
dec
jp
in
or
push
call
nop
xor
and
or
sub
xor
jge
bound
out
in
popl
cmp
jbe
pop
rcl
mov
lahf
arpl
fs
jns
push
xchg
cmpsb
in
adc
lahf
popa
aam
js
out
mov
mov
xor
ljmp
mov
xchg
pop
insb
dec
clc
popf
sbb
repz
ss
add
cmp
cltd
lahf
out
negb
fsubrl
mov
lods
in
cmpsb
std
hlt
xchg
test
inc
cli
add
and
push
in
ret
push
mov
fwait
jno
pop
sbb
jl
mov
lret
aad
xchg
dec
outsb
push
push
mov
inc
pop
xchg
in
mov
nop
cmpsl
mov
jb
enter
int
mov
cltd
dec
lret
and
aam
xor
fisttpl
adc
mov
mov
cmc
sahf
mov
iret
fdiv
cwtl
inc
leave
and
xchg
movsl
mov
jno
jnp
add
adc
outsb
stos
sub
xorl
lret
incb
dec
sti
loope
subb
mov
mov
pop
roll
jge
outsl
bndstx
adc
out
mov
ja
test
roll
mov
push
loope
subl
movsl
inc
loopne
lret
mov
jbe
cmpsl
mov
popf
repz
ss
lods
shll
shlb
les
push
sbb
cld
fs
add
lret
mov
adc
or
dec
ljmp
cmp
lds
lds
push
lea
push
push
jmp
inc
cmpsl
push
enter
popa
add
cs
in
push
loopne
loop
aad
jb
daa
pop
cwtl
mov
inc
cmp
add
shrb
inc
jmp
out
jecxz
gs
movsb
into
and
aad
sub
loop
dec
out
lock
jl
fs
inc
and
or
aad
inc
cmp
adc
xor
xor
fimuls
xor
mov
adc
fisubrs
repz
add
mov
pop
mov
lea
inc
mov
cmp
into
add
loopne
hlt
push
cli
push
sahf
jp
mov
inc
in
adc
aas
fs
push
push
or
movsl
imul
add
push
adc
ss
jle
xchg
ror
dec
sarl
int3
testl
cmp
mov
adc
lods
lea
mov
xchg
cmp
fnsave
aas
test
test
out
push
or
add
mov
lret
lock
aaa
ret
lcall
cmpsl
daa
sbb
inc
jg
pop
cmc
inc
sahf
inc
mov
or
sub
cmp
daa
fsubrl
dec
fwait
jecxz
ret
inc
dec
push
cmp
cmp
mov
or
sbb
nop
fistpll
mov
pushw
sbb
and
or
xchg
xor
js
lea
pop
mov
or
lret
jmp
inc
int3
inc
aaa
mov
andb
scas
mov
and
push
fwait
inc
mov
sbb
inc
xchg
jnp
mov
jg
jecxz
adc
and
addr16
or
pop
inc
les
mov
imul
out
xor
and
sub
iret
out
jp
cmp
je
jns
xchg
imull
or
sub
test
fnstsw
mov
dec
hlt
dec
sbb
jne
add
mov
sbb
pop
out
loop
dec
or
in
jge
xchg
in
lods
dec
scas
inc
pop
shlb
out
test
add
add
fs
repz
dec
mov
adc
adc
popf
mov
test
jbe
xor
xchg
in
loope
ret
rolb
inc
or
stos
adc
scas
or
call
out
lods
mov
fmuls
jecxz
mov
std
aad
and
test
dec
cmpsb
mov
jns
jmp
shll
movsb
cs
mov
insl
jbe
xor
dec
push
nop
repnz
dec
aas
imul
or
cmp
mov
cmp
or
lock
das
xchg
add
inc
addr16
xlat
leave
cmp
fnstenv
fwait
test
mov
jb
fsubr
mov
and
push
lcall
lds
dec
inc
mov
gs
fwait
test
popf
jecxz
out
jl
hlt
adc
xor
jecxz
or
insb
stos
hlt
icebp
aad
dec
pop
repz
adc
jp
lds
loop
fnsave
test
xor
adc
stos
fnstcw
pop
pop
imul
nop
xlat
xchg
push
adc
dec
adc
movsb
loope
mov
jae
or
xchg
add
shrb
cmp
pop
mov
push
mov
out
xchg
or
adc
dec
clc
aas
sbb
adc
xlat
cltd
ljmp
stc
adc
cmpsl
adc
pop
inc
push
vpmaxsw
or
jp
out
aam
out
pop
test
out
or
icebp
adc
pop
in
ss
fs
add
in
das
cmpsl
dec
leave
clc
push
fisttpl
ss
arpl
inc
jbe
cmp
cmpsl
jg
xchg
sub
sub
push
jno,pt
movsb
xor
xchg
push
pop
je
lret
xor
dec
out
adc
test
cwtl
movsb
xlat
fcom
clc
in
mov
lods
stos
enter
sub
adc
cmc
inc
dec
loope
xor
and
dec
cmpsl
rcrl
cmp
in
xor
sbb
xchg
mov
loope
mov
ss
jg
cli
ss
jg
popf
leave
dec
mov
mov
lcall
dec
rcrb
testb
mov
int
sub
push
outsl
push
jb
mov
rcrb
add
std
mov
or
mov
lahf
sub
add
adc
icebp
lret
and
imul
jae
aas
inc
xor
push
mov
test
xor
arpl
fnsave
ret
ja
stos
leave
sbb
inc
test
outsl
sbb
lea
xchg
adc
mov
cli
xchg
dec
int
sahf
iret
jbe
mov
push
xchg
jae
jnp
aad
test
cltd
adc
shll
ss
jae
into
rcll
sub
dec
scas
in
fiaddl
jmp
loop
fcomi
and
das
clc
push
mov
mov
sub
icebp
leave
lret
inc
mov
loopne
je
addr16
lods
mov
mov
mov
adc
adc
daa
add
in
dec
mov
daa
dec
dec
mov
sub
jns
repnz
cmp
cmp
push
idivb
roll
mov
fadds
push
xchg
mov
xchg
cmpl
loop
shrl
dec
mov
pop
rolb
lret
pop
mov
or
stos
je
iret
stos
xchg
cmp
jmp
ret
rclb
lret
aam
sbb
hlt
push
sti
and
movb
xor
mov
mov
lret
popa
shl
mov
inc
rorl
sti
jge
push
push
cmpsl
les
sbb
fmull
push
mov
loop
xor
dec
leave
rcrb
lea
icebp
inc
popa
mov
push
add
loop
mov
pusha
sarl
and
leave
sbb
dec
xor
pop
leave
scas
jg
pop
fsub
mov
xor
or
pop
xchg
inc
fs
mov
pop
int
cmp
orl
push
sub
repnz
push
fisubrl
sarb
scas
cmpxchg
adc
hlt
aas
test
add
push
rcrb
or
outsb
enter
movups
insb
push
fbld
stos
outsb
fnsave
ja
cmc
push
inc
das
movsb
fidivs
jnp
add
cmp
jmp
dec
lds
sub
subb
mov
frstor
jns
into
xchg
cmpsb
das
iret
pusha
cmp
jg
mov
mov
enter
mov
out
xor
xor
mov
add
xchg
mov
cmp
ds
jns
in
loopne
and
lret
adc
clc
loop
push
andl
pusha
leave
xchg
mov
and
dec
and
call
test
rcll
mov
cmp
xchg
fiadds
imul
sub
pop
jmp
mov
popa
jp
dec
or
shlb
mov
test
sahf
loopne
inc
push
jl
push
mov
xor
rclb
enter
pop
mov
cld
mov
fcoml
pusha
popf
dec
stos
push
outsb
scas
and
sub
mov
jae
mov
mov
in
shrl
push
jecxz
testb
sub
fcmovb
mov
enter
cli
cli
mov
xchg
or
jp
mov
nop
jb
and
sbb
mov
cmp
ficoml
popa
cmp
sbb
daa
in
mov
pop
stos
add
or
and
out
mov
hlt
sbb
stc
jge
out
data16
fldcw
pop
lret
and
xor
addr16
aad
loope
loop
xchg
das
ror
cmpb
pop
lret
dec
xor
jle
int
xchg
mov
pop
cmpsl
pop
insb
cmpsb
mov
divb
lret
idiv
jbe
xorl
aaa
mov
xchg
leave
hlt
test
jl
xor
lock
sub
mov
sub
cs
mov
mov
flds
push
pop
sbb
dec
lret
mov
gs
repz
into
add
push
negb
shll
popa
add
xchg
bound
sub
sub
inc
lds
inc
xchg
bound
vpshaq
inc
lret
fwait
xchg
push
js
jbe
shll
xor
mov
jl
mov
in
sarb
dec
repz
pusha
and
sub
push
call
or
mov
or
idiv
jp
dec
ja
or
cmc
cmp
sbb
and
mov
pusha
call
rorl
push
call
seta
ret
outsl
jecxz
mov
in
stos
jl
lock
cmpsl
sbb
push
push
les
pop
loopne
data16
mov
mov
sub
movsb
mov
movsb
test
dec
dec
pop
and
stos
pop
adc
cmp
add
pop
fcoml
xor
outsb
jb
lea
and
xchg
into
in
xor
std
or
mov
insb
in
xchg
inc
sub
inc
sar
mov
mov
xor
popa
bnd
jb
rcll
movsb
inc
fisubrl
out
and
and
sbb
mov
pop
dec
mov
nop
popa
jnp
lahf
popf
sub
jge
gs
inc
mov
int
pop
test
pop
dec
es
adcb
inc
gs
mov
popl
jno
cmc
cmp
xlat
dec
lcall
push
into
in
leave
cwtl
jbe
movsb
roll
dec
lea
insl
inc
sub
call
dec
mov
das
mov
faddl
pop
or
push
ss
xor
push
sahf
jnp
xor
xchg
inc
add
sbb
roll
inc
insb
mov
movsb
mov
adcl
jb
pop
addr16
dec
mov
repz
int3
push
sbb
fidivl
sbb
mov
adc
mov
mov
jae
or
and
out
cwtl
lods
pop
cmp
scas
cmp
mov
dec
xchg
lahf
out
fsubrl
add
inc
mov
gs
xchg
pop
xor
clc
sub
outsb
das
sub
inc
mov
lds
jno
xor
adc
xor
call
sub
lret
or
fs
das
or
movsb
dec
stos
dec
xchg
inc
pop
sub
jns
mov
adc
xchg
sahf
int
jmp
es
int
outsb
scas
cmpsl
inc
nop
mov
lret
add
add
rcrl
inc
aad
js
rcr
mov
xor
add
mov
lahf
shr
lods
loopne
jne
nop
aam
push
lahf
andl
out
popa
xchg
fnstenv
scas
push
xchg
adc
fiaddl
jle
sbb
stos
clc
inc
je
dec
adc
jge
in
ret
ljmp
sbb
lods
xchg
and
test
fbld
inc
mov
xchg
pop
adc
das
push
mov
jne
cli
popf
in
lahf
icebp
xchg
test
clc
dec
mov
fidivl
add
je
dec
jge
sbb
jbe
fdivp
pop
scas
daa
lcall
icebp
pop
cmp
add
test
popa
sub
lds
adc
cmp
lds
mov
lods
lcall
fs
int
sbb
cmp
jp
inc
jecxz
pop
test
and
bound
dec
xchg
or
popa
xor
xchg
cs
jae
hlt
cltd
adc
push
dec
test
cli
stos
mov
pop
push
bound
cmp
fdivrl
leave
and
fstp
rol
inc
movsl
cmp
inc
sbb
adc
fucomi
lods
pop
adc
sti
push
pop
cs
mov
push
outsb
in
mov
js
adc
imul
mov
lret
jns
xlat
pushf
cwtl
dec
movsb
loope
shlb
cmpsl
mov
mov
jp
or
pop
cmp
sbb
push
addl
jb
xchg
mov
push
xor
dec
jne
cwtl
rcr
xor
jnp
in
inc
and
in
rorl
adc
and
jnp
or
lret
mov
jmp
lea
rorb
pop
mov
dec
inc
cmp
lret
popa
mov
push
adc
repnz
clc
stos
sbb
mov
rolb
or
mov
mov
cli
rolb
mov
or
fs
lods
data16
imulb
stos
cmp
push
cmp
mov
test
pop
cmpsb
rcrb
push
push
test
test
xor
scas
ljmp
shrb
fdivs
add
std
sub
jno
inc
add
and
mov
das
scas
out
fs
sub
pusha
add
rorb
data16
daa
xchg
fadd
and
icebp
xor
mov
add
ret
test
int
jbe
cmpsl
js
test
jl
mov
mov
in
dec
lret
or
aas
xor
mov
sahf
dec
out
mov
add
int
or
lea
dec
out
insb
add
mov
das
jo
ficoms
sub
popa
push
shr
shrw
bound
loop
push
lret
mov
shlb
adc
pop
or
cmc
lock
mov
lods
mov
add
push
push
sahf
flds
xor
mov
cmp
jmp
mov
adc
jns
add
pusha
mov
sub
xor
push
mov
jge
fwait
push
pop
push
pop
aad
and
jle
out
lods
test
aad
sti
xchg
ds
fsubr
and
test
mov
pop
push
push
loop
inc
mov
cmp
repz
out
pop
aas
jge
jmp
incl
and
nop
leave
icebp
aaa
sub
imul
inc
or
mov
lahf
outsb
lcall
mov
xor
inc
std
cmp
out
pop
insb
scas
std
xchg
xor
mov
xchg
ret
mov
mov
or
enter
jae
or
mov
cli
cli
repz
jl
sarb
jle
adc
or
cltd
and
cld
mov
loopne
popf
movswl
jno
add
push
clc
cmpsb
sbbl
mov
enter
inc
test
and
add
dec
jo
loop
and
pop
and
popa
mov
in
lds
xchg
mov
out
inc
jne
dec
ss
mov
and
mov
add
in
lods
pop
shll
out
insl
dec
cmp
mov
push
jg
cltd
jb
lret
or
repnz
andl
pop
dec
or
ret
push
icebp
aam
add
cwtl
dec
test
xchg
shr
jno
les
and
lods
sbb
test
mov
ds
out
iret
adc
cld
dec
ja
dec
adc
je
xlat
lods
jno
ret
push
push
pushf
cmp
jg
hlt
mov
add
or
in
loop
insl
shll
in
cli
fdivp
dec
sbb
and
jmp
dec
xlat
mov
dec
dec
rcll
mov
inc
or
mov
adc
sub
add
adc
mov
push
fcoms
mov
fists
hlt
cmc
cmpb
cmpl
or
call
sbb
scas
dec
test
and
lock
cmp
and
icebp
pusha
add
dec
and
stos
add
mov
cld
daa
aaa
sub
fistpl
fiaddl
ficoms
lods
or
stos
inc
mov
in
inc
aaa
xor
sub
xor
div
jbe
mov
pushf
mov
test
data16
cmp
scas
xchg
stos
movsb
cmc
sbb
in
cli
aas
xchg
jne
push
push
enter
lock
jp
adc
icebp
in
sbb
xchg
icebp
sub
add
pop
leave
and
dec
iret
test
loop
inc
int
test
movsl
test
sub
push
fsubl
xchg
pop
cltd
add
ss
out
je
dec
xchg
call
add
int3
sbb
mov
out
adc
mov
dec
pusha
ljmp
insl
ss
push
jae
and
mov
cmpsl
add
xor
jb
jo
add
fisttpl
ficoms
pop
idivb
out
pop
test
loope
add
sarb
not
les
fisttpl
lahf
cmp
xor
mov
sahf
pop
lock
mov
insb
out
outsl
aam
or
inc
mov
or
sbb
adc
int
jge
cs
cmp
jmp
pushl
push
aad
sbb
jns
mov
in
and
scas
dec
push
hlt
adc
adc
rcl
dec
cmp
pop
sub
repnz
mov
cmpsl
clc
decl
cmpsb
mov
repz
jecxz
fstpt
clc
mov
call
adc
mov
sbb
mov
inc
xchg
mov
dec
test
sub
push
pop
movsl
popf
mov
cld
enter
addr16
mul
pop
pop
mov
rcll
cmp
cs
sbb
sbb
daa
shlb
pop
push
ret
lcall
sub
sub
negl
jge
pop
int
sbb
arpl
ret
xchg
mov
jecxz
daa
mov
xchg
push
mov
ret
je
pop
pop
dec
mov
ror
ret
ret
mov
pmaxsw
xchg
xchg
insl
inc
cltd
insb
jne
or
je
out
lret
inc
pop
jo
aad
lret
inc
hlt
idiv
add
push
xchg
cmp
sbb
in
lock
call
mov
icebp
sti
or
imul
cmp
bound
into
push
mov
loopne
jb
xchg
or
cld
dec
jp
dec
std
in
dec
loopne
popa
dec
dec
leave
sub
mov
lahf
clc
ss
mov
xchg
push
cmp
pop
leave
mov
sti
pop
adc
jmp
push
cmp
push
adc
mov
inc
cld
sbb
test
and
push
push
mov
pop
pop
sub
lahf
or
pop
push
jle
ds
testb
push
xchg
shl
mov
xchg
rcrb
aam
inc
mov
sub
out
out
xchg
mov
ja
mov
lcall
sub
insb
push
cmp
or
adc
das
pushf
xor
lea
or
je
or
insl
and
in
jb
inc
mov
bound
add
jge
sub
and
leave
cmp
lods
dec
jns
dec
cwtl
push
mov
ljmp
mov
inc
ret
das
stos
mov
fsubr
inc
stc
outsl
mov
jle
andl
cltd
mov
loope
popf
cmp
insb
lods
mov
mov
rcll
in
or
jne
mov
ds
pop
xor
jnp
sbb
es
hlt
sub
pop
dec
call
xor
fistpl
lcall
test
pop
inc
push
or
addr16
mov
aad
fiadds
stos
out
cmpsl
dec
cltd
jo
popa
add
xchg
and
scas
mov
mov
lea
jge
adc
xchg
cmp
shl
mov
adc
jecxz
movsb
sub
inc
pop
dec
jnp
xlat
loopne
std
ffreep
xor
jle
sbb
push
mov
fcoml
test
cltd
pusha
adc
push
or
iret
add
adc
add
sub
cmp
loopne
and
jnp
push
xchg
add
test
jle
jp
and
mov
mov
shr
test
out
shll
and
jmp
push
cs
inc
inc
or
xchg
cmp
jge
repz
mov
mov
add
adc
call
push
add
and
test
lds
in
jne
pop
inc
scas
jp
push
in
das
or
enter
scas
loop
xchg
pop
mov
push
pop
mov
out
push
or
jp
stos
cmp
mov
lret
xchg
xor
xchg
or
push
sbb
inc
jmp
inc
jg
in
jno
push
sbb
inc
mov
and
jb
cmc
xchg
testl
cmp
mov
or
add
outsb
push
iret
pop
sbbl
sub
mov
dec
dec
inc
xlat
inc
mov
into
inc
ret
and
ja
push
je
inc
dec
js
pusha
fcompl
dec
dec
mov
test
and
insb
add
cmp
inc
xchg
mov
test
aam
cmpsb
jecxz
fsubs
push
aas
mov
and
push
idivl
or
nop
or
pop
mov
jecxz
test
dec
jo
cmp
inc
cmovnp
xor
or
mov
ja
fnstcw
mov
fdivl
cli
dec
data16
test
ss
mov
mov
lret
loopne
sub
loope
jg
xor
fwait
lea
sbb
aaa
bswap
jle
add
mov
popa
stc
ljmp
test
inc
std
xor
jns
push
popf
mov
ds
fisttpl
or
mov
cs
jge
push
inc
jg
loopne
data16
push
pop
sub
jb
jp
pop
pop
push
mov
fwait
xchg
xchg
popf
cld
xchg
inc
daa
mov
shr
add
and
sub
mov
inc
inc
push
jl
dec
hlt
in
cmpsb
or
jbe
cmc
imul
mov
into
call
add
ss
outsl
not
icebp
int3
xorb
orl
addl
imul
ret
jae
mov
jno
or
xlat
cmp
add
addr16
xchg
sub
sti
add
xor
lds
jnp
popa
cmpl
sub
jle
fdivr
flds
xlat
mov
mov
ret
mov
gs
and
std
push
push
bound
imul
and
insl
mov
ret
xchg
cmpsl
push
test
mov
push
mulw
mov
inc
imul
jmp
ljmp
mov
lret
add
xchg
or
orb
jle
and
add
scas
jle
mov
repnz
aaa
rcrb
and
repnz
add
out
add
ds
shr
pop
fwait
cwtl
push
in
pusha
in
cmp
cmp
mov
mov
fildl
data16
sub
sbb
enter
xor
mov
adc
push
jno
decb
and
out
sub
jno
push
mov
ret
and
test
std
ror
imul
mov
push
cmp
roll
add
mov
xor
outsb
push
std
xor
add
addr16
push
call
and
call
sub
movsb
add
outsl
sub
sbb
pop
loope
push
pop
jg
pop
movsl
push
xor
mov
loopne
push
add
ja
xchg
jle,pt
and
lds
or
mov
mov
mov
push
rcl
pusha
push
inc
gs
imul
mov
fs
test
cmc
insl
test
mov
inc
in
xor
mov
and
mov
adc
call
pop
jle
leave
xchg
cmp
inc
out
push
repz
jle
fsubs
sub
js
cmc
mov
sbb
cmpsl
mov
pop
adc
push
mov
mov
enter
ja
sub
mov
push
incb
jb
fwait
xor
rclb
sub
push
movsl
cmp
cmp
mov
or
test
mov
stos
std
adc
sub
sub
adc
pxor
test
pop
bound
sub
jno
mov
cmp
xchg
movsl
cmpsb
test
push
aaa
push
jns
enter
jo
inc
ja
add
push
rolb
xor
jmp
lods
push
or
push
xorl
add
les
or
fsubrs
adc
sahf
loope
sub
xchg
iret
adc
pop
imul
in
andb
fnsave
rcrl
inc
mov
fsts
scas
push
mov
adc
in
shlb
inc
pushf
jmp
sahf
mov
lods
popf
mov
mov
shl
xor
loop
dec
mov
test
xor
adc
or
imul
pop
xchg
in
dec
pop
aad
pop
pop
call
cmp
add
repz
sbb
xchg
adc
jns
pop
shll
sar
add
into
lea
pusha
or
test
sub
aas
rorb
dec
mov
jae
push
mov
add
fnstsw
add
fdivs
mov
jl
adc
xlat
enter
daa
fisttps
insl
scas
aam
test
rcrb
adc
test
xchg
inc
shll
popa
xchg
leave
push
lahf
push
data16
sarl
dec
push
xor
inc
pop
mov
inc
sbb
pop
mov
fsubrs
jae
mov
filds
dec
inc
int
fidivs
bts
pop
sub
sub
xchg
cmp
lods
push
movsb
mov
lock
mov
push
dec
mov
add
xchg
add
mov
les
mov
sbbl
xchg
and
or
imul
jl
inc
iret
sub
popa
jne,pn
pop
xchg
ret
fnstcw
clc
push
in
add
pop
fistpl
popa
jae
push
lahf
xchg
adc
pop
pusha
pop
sub
aaa
add
out
cmp
jb
mov
jae
sub
push
xchg
jae
jno
jo
jecxz
push
xor
movsbl
jae
sub
scas
cmp
in
adc
xchg
cmp
jae
pop
int3
mov
arpl
dec
sbb
fs
orl
sub
sarb
nop
mov
mov
add
or
add
arpl
xor
imul
lods
lods
cmp
jge
idivb
and
mov
mov
in
je
addr16
cmc
mov
les
iret
sbb
or
push
js
mov
cmp
sbb
and
jmp
pop
je
ss
hlt
into
add
xchg
cli
ds
divb
xchg
inc
push
out
jp
mov
push
iret
add
add
fimuls
jle
push
out
inc
dec
fldenv
dec
imul
jno
inc
icebp
loopne
push
loop
sbb
xor
je
inc
jmp
fstpt
aas
nop
or
rcrl
sbb
xor
inc
jge
or
and
outsb
xor
sub
mov
lea
decb
sub
addr16
arpl
dec
adc
addr16
mov
out
jle
cmpl
xchg
xchg
and
xchg
bound
shrb
fsts
mov
sub
inc
lds
mov
test
sub
jnp
cmc
or
fmull
add
sahf
mov
add
inc
in
xchg
mov
inc
push
add
test
xchg
int
cmc
mov
mov
das
aam
stc
scas
pusha
cltd
inc
int3
push
jmp
mov
roll
pusha
or
jb
sub
push
fidivl
movsb
pusha
aaa
pop
cld
enter
sub
push
sub
inc
rcrl
add
xor
sti
test
pop
leave
movsb
cltd
lock
cmp
lods
ret
pushf
xchg
imul
cmp
sub
ret
adc
fs
mov
pop
cmpsl
pusha
enter
lret
scas
mov
jge
pop
cmp
xlat
push
cld
pop
packuswb
outsb
dec
fnstsw
rorl
lret
icebp
lcall
push
aad
jge
xor
push
fnstsw
add
addl
fwait
cmp
clc
lret
mov
les
pop
mov
mov
cmp
sub
xchg
repz
mov
mov
mov
das
xchg
dec
sahf
inc
cmp
dec
xchg
sub
nop
xchg
into
sbb
lods
lods
push
mov
sti
scas
loope
sub
xchg
or
mov
out
dec
lcall
xlat
mov
iret
or
mov
add
mov
out
jl
mov
roll
das
call
push
adc
jae
mov
xchg
leave
lea
adc
shlb
in
bound
popa
adc
daa
jbe
mov
std
insb
dec
inc
out
test
push
mov
loope
bound
jmp
or
adc
inc
push
dec
sbb
cmc
sarb
cmpsb
pusha
mov
repnz
inc
inc
mov
loopne
sub
ret
outsl
out
lock
ja
stos
push
movb
xorb
mov
test
test
and
or
mov
repnz
pushf
jnp
push
hlt
popa
stos
mov
imul
roll
stc
outsl
in
rcrl
or
call
into
cmp
inc
sub
sub
aad
mov
jae
cmp
mov
fst
pop
and
push
inc
imul
mov
xlat
inc
push
pop
aad
repnz
add
rcl
inc
or
testb
adc
cli
shlb
mov
pop
dec
cwtl
sub
pop
adc
mov
scas
adc
pop
jp
cli
pop
xor
stos
insl
inc
mov
sub
out
cwtl
pop
stc
popf
pop
cmp
push
fisttps
pop
xchg
lret
imul
test
xorl
mov
test
jecxz
stos
sbbl
ret
lods
ret
add
repz
push
xchg
mov
in
call
inc
cmp
mov
cmp
cwtl
mov
cld
shl
adc
push
stos
hlt
cmp
xchg
jns
hlt
cmp
lret
push
daa
daa
xor
pop
rol
mov
dec
sbb
outsb
xchg
in
bound
mov
dec
mov
ret
inc
outsl
mov
addl
push
sti
fwait
pop
js
and
test
jle
lcall
xor
inc
ss
scas
add
test
pop
push
inc
push
rol
or
es
pop
in
mov
mov
outsl
mov
pop
dec
jg
inc
repnz
xchg
or
or
mov
jmp
push
notl
ret
dec
das
sub
inc
add
lret
ds
jae
mov
pop
addl
cmp
dec
adc
adc
inc
mov
mov
add
mov
or
ret
iret
stos
arpl
lahf
clc
or
arpl
sahf
push
lahf
mov
push
mov
jge
out
xor
jns
xchg
stos
mov
mov
mov
mov
push
inc
pop
jae
and
and
pop
pusha
imul
sub
or
xchg
fidivl
push
fwait
mov
inc
and
je
adc
xchg
mov
dec
mov
adc
cli
xor
mov
mov
gs
dec
mov
cs
das
ret
daa
loop
xor
mov
mov
cld
fcmovbe
cwtl
xlat
jbe
movsb
jne
push
and
sub
dec
jno
mov
add
into
out
loope
or
and
jns
cmpl
das
movsl
repnz
sbbb
add
sbb
add
mov
lods
je
ficompl
mov
mov
inc
test
aad
cs
int
aas
cmpsb
insl
out
and
and
mov
and
pop
adc
cmp
jbe
mov
xorl
mov
cmp
xchg
in
cmc
int
daa
push
sbb
scas
cmpsl
das
testl
mov
daa
pop
pop
pop
repz
lea
int3
push
clc
stc
dec
adcb
jp
cltd
sti
mov
lods
adc
ffree
pop
jns
add
hlt
jo
in
icebp
call
xor
int
jmp
imul
fisubrl
fdiv
dec
xor
or
cs
xchg
mov
roll
popf
daa
fldcw
pushf
sbb
test
or
leave
inc
push
sbb
xor
xrelease
movsb
xchg
push
jp
cmpsl
jo
add
sub
inc
cmp
ds
dec
jg
cmpb
push
push
dec
pop
stos
test
cltd
pop
sub
jg
mov
mov
xchg
push
cmp
in
cmp
stc
xor
jbe
fs
std
or
push
cmp
mov
data16
adc
sub
jb
mov
push
imul
jp
sbb
scas
mov
cmp
adc
stc
decl
ds
fbstp
xor
mov
sbb
sar
mov
insl
sub
aad
inc
dec
push
aas
out
fwait
mov
fldt
lods
arpl
jne
inc
cli
inc
cmp
stos
rclb
mov
and
arpl
mov
popa
test
das
leave
mov
lods
add
xchg
nop
aad
arpl
jl
xchg
pop
dec
rcrl
test
pop
subb
imul
mov
ds
outsl
jmp
sub
jecxz
and
rcl
mov
sbb
inc
lret
pop
push
xchg
notl
lret
in
daa
cltd
adc
push
cli
aas
pusha
pop
jl
js
jo
hlt
and
mov
jae
je
mov
mov
mov
out
adc
push
std
outsl
test
aas
xchg
clc
cli
pop
imul
adcl
cmp
outsl
rolb
pusha
xlat
imulb
mov
out
aam
cmpsb
sbb
aaa
push
push
or
add
inc
lahf
xchg
inc
pop
pop
add
pop
or
repnz
mov
dec
loopne
dec
sahf
inc
lods
xchg
lret
ds
push
pop
mov
stc
int
dec
inc
sbb
mov
sbb
push
mov
adc
insl
dec
js
jmp
lret
out
xor
dec
jmp
inc
fcmovu
sbb
movsb
jp
subb
add
push
icebp
inc
mov
mov
shrb
ret
adc
adc
fwait
test
mov
dec
and
or
lods
or
push
push
xor
pushf
loop
ret
xchg
xchg
into
adc
push
dec
mov
movsl
lret
aam
xor
icebp
xlat
push
into
sbb
imul
cmpl
inc
pushf
inc
lea
pop
cmpsl
cmp
cld
jge
test
inc
xchg
test
pop
scas
push
jmp
popf
dec
mov
and
sub
pop
mov
add
push
jo
inc
les
jns
ficomps
sub
push
pop
pop
movsb
mov
mov
cs
xchg
jecxz
jge
clc
mov
out
sbb
addb
out
mov
jecxz
fstl
jno
push
pop
inc
cmp
and
pop
fbstp
adc
add
inc
lret
jb
cwtl
adc
ds
test
cmp
lock
dec
outsl
inc
fistl
mov
dec
incl
stc
iret
mov
rorb
xlat
test
lods
push
and
xchg
pop
addr16
push
fsubrl
inc
mov
push
adc
adcl
int
cmp
cld
repnz
call
movsl
dec
cmp
mov
jae
mov
or
les
iret
imul
cwtl
cmc
std
test
lock
sub
xor
imul
push
mov
xchg
jnp
add
out
into
cld
dec
pop
aaa
adc
lcall
sub
add
and
or
sub
in
mov
jo
lods
loop
mov
es
inc
add
sbb
mov
dec
xor
sbb
ljmp
leave
rolb
xor
adc
cmpsl
aam
stos
sahf
push
pop
lea
loope
out
fldl
movsl
int3
inc
and
cmpsl
jae
jmp
pop
pop
jmp
sti
fcoms
fmull
mov
xor
das
xchg
jl
push
fwait
xor
scas
out
cltd
rcrb
mov
sbb
loopne
push
cmp
roll
movsl
cmp
xchg
sub
inc
ret
and
push
push
push
mov
fsubl
movsl
test
jbe
leave
mov
movsl
mov
sbb
mov
and
rcrl
enter
dec
dec
cmp
loopne,pn
push
xorl
test
adcb
ret
jne
xchg
pop
jns
and
ds
enter
mov
fisttpll
xchg
xor
lods
xchg
fiaddl
mov
outsl
inc
mov
sbb
pop
sbb
in
mov
bound
add
sub
push
cmp
les
or
pop
mov
orps
mov
test
add
aam
shr
leave
dec
sbb
pop
pushl
or
push
incb
scas
xchg
jnp
and
mov
test
out
jbe
fldenv
std
mov
and
dec
adcb
adc
mov
jl
xchg
fisttpll
jo
and
sbb
and
mov
call
mov
js,pt
xchg
cld
dec
cli
scas
inc
fsubrs
jmp
es
idivb
fisubrs
jg
adc
hlt
insl
daa
sarb
int
sub
push
xor
call
inc
lret
inc
das
and
sub
shrb
into
imul
jb
pop
outsb
je
aas
add
dec
mov
and
addr16
xchg
dec
push
shl
mov
scas
dec
push
vpmacsdql
xchg
gs
sub
mov
push
sub
arpl
and
dec
jo
cld
je
xchg
dec
jge
lock
aad
mov
push
xchg
inc
scas
or
or
xor
lds
jae
jp
shrb
dec
outsb
stos
mov
repz
int
mov
sub
inc
jae
popf
adc
dec
and
movl
xchg
xor
pushf
es
xchg
xor
test
sarl
test
or
out
push
les
rcll
sbb
or
ret
dec
and
adc
stc
stos
mov
ret
in
and
out
popa
sub
ds
xchg
push
nop
leave
push
and
adc
dec
mov
rol
add
mov
cmp
filds
outsb
mov
movsl
out
out
and
push
inc
adc
jae
adcl
mov
mov
mov
jecxz
outsb
ljmp
push
sub
mov
sub
bnd
test
and
out
sbb
pusha
sbb
pop
pop
jmp
mov
je
movsb
aas
mov
sub
xorl
inc
ss
sub
outsb
loope
add
test
rorl
mov
rcrb
and
fsubs
roll
cmp
scas
daa
cmp
mov
dec
iret
mov
xlat
js
inc
push
pop
jecxz
xchg
sub
cmp
jno
xor
ljmp
fbstp
inc
repz
das
dec
sbb
add
mul
pop
gs
cmp
jb
or
or
inc
outsb
sub
data16
jno
xor
call
pushw
xchg
dec
test
jo
pop
orl
mov
inc
add
shrl
shll
in
xor
aad
int
data16
test
test
mov
lahf
inc
adc
das
push
repnz
mov
xchg
movsb
cmp
lock
and
dec
ljmp
cld
jmp
fucompp
movb
das
sub
into
mov
mov
ds
lret
push
or
sbb
pushf
fistps
cmpsb
mov
push
mov
aaa
out
mov
adc
and
fisubrl
sbbb
wbinvd
in
add
dec
lret
test
sub
and
das
sti
nop
ljmp
push
mov
mov
mov
mulb
adc
jge
inc
je
pusha
mov
cli
jno
stos
jl
adc
sti
push
int
in
stc
pop
addb
imul
iret
outsb
dec
insb
and
xor
outsb
fbld
test
fildl
push
mov
mov
mov
bound
inc
jl
add
test
and
dec
sub
dec
xchg
fs
mov
push
mov
push
or
add
xor
aam
flds
cmpsl
xchg
lock
outsb
push
das
fwait
iret
icebp
mov
cmp
adc
aam
cmp
add
mov
inc
mov
pop
test
cmp
and
inc
xor
mov
xor
lods
dec
lods
dec
and
mov
xchg
into
push
insl
outsb
fcomp
push
cltd
popa
test
mov
jb
inc
scas
pop
sub
sti
pop
push
or
mov
mov
inc
push
sub
vmovmskpd
xchg
and
sbb
sub
aad
enter
adc
adc
cwtl
pop
mov
sub
xchg
push
sub
stos
sbb
fisubs
inc
add
and
adc
loop
mov
mov
jo
shrb
pop
rclb
out
push
mov
sub
sarl
sbb
xchg
xor
ss
sbb
stc
fmuls
xchg
mov
push
loopne
sub
xor
jo
mov
mov
cmp
sub
cmpsb
cltd
jge
add
mov
out
jle
cli
pop
out
pushf
add
cmp
sub
and
xlat
mov
sub
mov
sti
lods
out
outsl
pop
push
and
aas
rcrl
into
push
dec
mov
cmpsl
sub
fstps
add
stos
jecxz
mov
dec
pop
fbld
pop
inc
pushf
int3
xchg
lods
nop
pushf
bound
mov
sti
pushf
pop
inc
dec
aaa
hlt
xchg
lahf
and
out
jg
rcrb
and
mov
push
or
imul
loope
mov
rorl
stc
inc
mulb
test
lcall
xor
mov
xchg
test
fmull
stc
adc
shrb
adc
push
aam
mov
mov
shll
lods
rorb
loopne
push
cli
hlt
movsb
and
inc
cwtl
lret
arpl
and
lret
aam
cmp
test
out
rcrb
mov
sub
movsb
hlt
in
test
mov
inc
addb
sbb
outsb
inc
lcall
es
inc
adc
push
std
sbb
mov
adc
mov
xor
push
mov
arpl
mov
xchg
jno
out
mov
out
popa
std
iret
add
repz
xchg
add
xor
xor
mov
sbb
int
push
ror
jmp
fisubrs
mov
pop
in
data16
pop
inc
pop
jae
sub
inc
add
lock
pop
mov
movsb
adc
lods
cld
andl
jnp
js
cli
lods
jle
xor
adc
inc
xor
leave
and
pop
cmp
inc
mov
jecxz
mov
outsb
test
add
mov
lea
stos
cs
pop
sub
xor
sbb
stos
mov
xchg
sub
sub
aam
jnp
jno
mov
adc
mov
inc
stc
mov
push
mov
addr16
cwtl
adc
xor
fldcw
pop
push
hlt
jne
insb
cs
add
dec
mov
dec
inc
enter
stos
test
jecxz
add
cmc
xor
bound
sbb
lock
jp
inc
fisttps
ja
sbb
or
ror
es
pop
mov
ja
cmc
xor
jae
enter
out
push
pusha
mov
cmpsl
pop
mov
inc
pop
aaa
addr16
inc
adc
xchg
ficoml
and
cltd
fsubrl
rclb
nop
dec
or
and
xchg
jecxz
xchg
in
sbb
push
inc
sub
jp
shlb
lods
sub
es
sbb
imul
in
movsb
jns
jecxz
add
ret
daa
aam
loop
mov
adc
adc
ljmp
xor
cmp
mov
lahf
and
xchg
pop
mov
inc
sahf
ja
cmp
lcall
ret
lods
lea
mov
fnstsw
in
and
jae
shl
shll
lods
cmc
sub
dec
inc
lea
add
fs
scas
and
outsb
cmc
mov
mov
dec
pop
xor
push
mov
idiv
inc
xchg
mov
mov
movsb
sub
jae
cmp
fcoms
stos
cli
and
cmp
adc
cld
sub
icebp
lcall
test
fnsave
jmp
in
mov
dec
loop
fimull
or
pop
bound
les
inc
dec
dec
xor
test
xchg
xchg
mov
and
leave
sub
stos
pop
cwtl
xchg
call
mov
lret
stos
lods
shrd
adc
das
lods
icebp
in
xor
inc
pop
movsl
leave
mov
or
jo
sbb
clc
mov
xchg
scas
sahf
inc
xor
adc
mov
cmpsb
popa
xchg
test
mov
push
ljmp
sbb
cwtl
addr16
and
repz
push
push
test
xor
lret
lods
lret
dec
add
mov
nop
dec
sub
nop
adc
mov
sub
push
xor
mov
jg
push
jnp
add
push
sti
xchg
mov
shl
fwait
xchg
and
push
test
leave
ja
jns
pop
repz
cld
pop
fnsave
es
jge
repnz
or
push
testl
loopne
xchg
xor
and
or
ret
ljmp
push
pop
xchg
xor
jne
lock
mov
mov
cmp
xor
sub
adcl
jmp
out
jae
pop
out
mov
int
std
sbb
adc
cmp
cmpb
jns
jbe
dec
sub
jmp
int3
jl
stc
out
in
mov
loopne
ffreep
into
pusha
push
push
add
mov
mov
sbb
jmp
imull
pushl
sbb
fsubrl
mov
sub
sbb
add
add
or
inc
xor
test
lahf
mov
std
add
sub
sbb
push
repnz
rclb
stc
adc
call
sahf
jo
mov
popa
sbb
mov
push
mov
xor
mov
inc
mov
dec
hlt
push
xchg
xor
arpl
mov
mov
fistl
mov
mov
into
mov
xchg
lahf
pop
out
cs
stos
pop
mov
sub
cmpsl
push
jecxz
movsl
call
dec
shl
lret
stc
aad
cmp
lahf
imul
loop
mov
sbb
xlat
push
push
dec
or
ds
adc
jbe
sbb
mov
test
fwait
jns
cmp
inc
lock
clc
out
push
shlb
rorl
ror
testl
repz
mov
cmovge
loope
sub
jge
mov
adc
loopne
cmp
cmp
xchg
jle
je
mov
cmp
into
inc
dec
in
jg
or
shll
iret
les
jns
mov
bnd
sbb
pop
insl
cmp
dec
int
mov
lods
cmp
call
xchg
dec
mov
das
out
sub
testb
jg
pop
out
sub
xchg
xlat
xchg
aad
jp
xchg
push
mull
cmp
bound
lret
fsubr
aam
lods
testb
insb
cwtl
mov
mov
out
add
cmpsb
adc
xchg
jmp
cltd
lods
les
mov
iret
lds
sti
fnstsw
mov
rcr
das
pop
jmp
jb
fidivs
daa
mov
shlb
mov
sub
iret
bound
ficoms
out
push
nop
rcll
daa
mov
and
xor
mov
and
and
cmp
stos
data16
or
mov
adc
out
in
xor
and
fsubrl
fstp
pop
mov
mov
and
insl
sar
fdivl
in
push
ficompl
orl
sbb
test
cwtl
push
pop
scas
sbb
adc
lods
sub
adcl
adc
add
xchg
mov
jmp
dec
adc
cmp
push
std
faddl
and
jecxz
jle
pusha
mov
mov
mov
lock
dec
aam
push
mov
into
push
cmp
adc
mov
aas
ja
sti
mov
cmp
mov
pop
aam
pop
lds
ror
sub
imull
add
arpl
arpl
ja
lods
inc
push
xchg
test
mov
pop
in
popf
shlb
hlt
mov
movsl
ljmp
or
sbb
cmpsl
mov
sbb
xchg
fsubs
je
mov
pop
cmpl
je
ds
lds
mov
xchg
lock
cmpb
sub
shlb
cltd
pusha
xor
popa
or
andb
test
pushf
or
dec
das
cld
cmp
xor
jecxz
aaa
dec
orb
xchg
inc
into
daa
and
jb
push
pop
pop
je
or
or
sbb
dec
dec
lahf
jb
jne
loopne
push
sub
icebp
mov
cmp
lret
fwait
or
lret
fstp
cwtl
adc
lods
mov
cmc
cltd
cwtl
fsubl
and
ret
into
add
sbb
sbb
add
lret
lahf
inc
jl
jmp
or
dec
or
push
int3
ret
push
or
cld
or
in
imul
push
push
insl
dec
test
cli
in
jmp
cltd
rcpps
loopne
lret
xchg
fldcw
sbb
popa
in
adc
cmc
in
daa
cmp
aad
call
inc
cmp
mov
and
pusha
jl
movsl
lret
add
ljmp
pop
and
add
fwait
outsl
xchg
xchg
fildl
daa
lahf
scas
sbb
cli
sahf
mulb
mov
nop
jl
icebp
push
inc
jb
xor
mov
jp
xchg
std
scas
shll
ret
push
mov
xchg
out
stos
sbb
ret
push
sub
in
stos
sahf
lods
out
cmp
dec
pop
insb
and
jno
mov
pop
sub
test
in
xor
clc
xlat
shr
inc
imul
scas
jbe
sub
repnz
es
cmp
cmp
xchg
sub
icebp
push
ss
shr
xchg
and
mov
cmpsl
pop
xor
jo
hlt
add
mov
dec
popa
lods
test
out
es
add
mov
inc
mov
imul
les
mov
rcrb
dec
insl
xor
out
cmc
cmc
subl
xor
mov
aam
stos
or
movsb
dec
cli
bound
mov
aas
pop
outsl
ja
leave
popf
negl
pop
mov
std
subps
dec
add
fstl
ljmp
push
fbld
or
cmp
mov
push
fs
int
rcl
ret
push
sub
fwait
or
and
add
out
or
adc
or
jmp
enter
int3
pushf
int3
das
pop
loopne
push
movsb
mov
ss
mov
test
arpl
test
sub
mov
aad
mov
and
movsl
lods
jo
and
pop
add
pusha
out
fsubrl
push
push
push
or
adcb
mov
cmp
test
lret
mov
cmpsb
ror
dec
loopne
inc
popf
sub
inc
loope
dec
mov
cmp
or
and
cltd
mov
jbe
imul
adc
gs
xchg
sbb
lock
in
les
insb
cmp
or
or
sub
xor
in
sbb
ret
nop
hlt
mov
mov
and
out
pop
or
inc
jle
je
ss
lods
imul
adc
pop
mov
movsb
mov
mov
fidivrl
pop
pop
rcll
dec
mov
add
push
dec
fcompl
xchg
fsubl
aaa
jo
gs
mov
mov
xchg
dec
outsl
insl
xorb
dec
adcl
xor
ja
push
rcrl
sahf
mov
jo
mov
mov
add
jecxz
in
lahf
clts
loop
in
and
shlb
fstps
cmp
or
jnp
push
notl
xchg
xor
sbb
push
cmp
cmpsl
int3
or
xor
pusha
push
dec
mov
repnz
pop
sub
mov
push
jl
nop
xchg
sbbb
pop
mov
dec
jle
repz
lods
insl
call
xchg
stos
cs
outsb
cmp
cmp
addr16
fdivl
inc
fwait
iret
and
out
fs
or
inc
cmp
xchg
or
mov
inc
inc
pop
dec
mov
loop
jle
push
cwtl
rorb
mov
test
out
xchg
mov
cld
mov
stos
cli
sbbl
sbb
out
xor
cmp
inc
cmp
sub
je
or
clc
mov
cmpsl
popf
xor
lret
inc
jle
mov
daa
sub
lahf
xchg
mov
aas
nop
mov
and
mov
int3
test
mov
xchg
pop
lahf
push
andb
dec
cld
std
add
cmpl
pusha
cli
hlt
inc
fdivr
jmp
add
xor
shl
push
stos
imul
jne
and
cltd
push
fwait
pop
outsb
cmpsl
mov
shl
inc
sub
push
xchg
je
jne
lock
nop
fwait
les
pushl
adc
fcoml
push
inc
enter
mov
aam
test
pushf
inc
adc
jg
rolb
in
inc
in
push
lock
push
sbb
cmp
aad
dec
dec
repz
adc
add
iret
xor
mov
mov
lea
jno
addr16
lahf
in
test
ret
out
insb
pop
fists
mov
jle
in
sbb
xchg
popf
js
lret
ljmp
inc
lods
mov
pop
add
movsb
sub
daa
sub
dec
and
jnp
push
pop
push
pop
sub
into
lea
mov
mov
or
pop
pop
outsb
push
push
and
adc
push
dec
int3
add
cmp
or
xorb
and
scas
cmp
pop
aas
dec
jg
ret
or
pop
int3
arpl
mov
data16
lcall
cld
pop
movsl
mov
inc
add
inc
fwait
lods
xchg
push
adc
pushw
es
mov
dec
pop
cld
loopne
xor
lea
mov
dec
cs
lea
mov
pop
and
test
pop
mov
mov
adc
test
and
xor
mov
std
cmpsl
add
sbb
call
xchg
jnp
mov
add
and
cli
dec
fistpl
adc
aam
xorb
xchg
or
imul
faddl
pusha
dec
ficoml
sbb
jae
out
xor
test
mov
gs
sub
push
lret
inc
push
pushl
add
testb
test
loope
jmp
lret
loope
xor
mov
ja
mov
mov
scas
and
cltd
call
jmp
jmp
loopne
ds
xor
rclb
jnp
mov
sti
dec
push
sub
loope
pushf
xchg
fists
mov
xchg
dec
push
mov
pop
mov
dec
mov
dec
aas
mov
or
faddl
sub
lcall
cld
adc
mov
imul
ja
mov
aas
fldt
je
ja
lahf
adc
lahf
addr16
jnp
das
pop
xchg
repz
adc
popf
mov
xchg
xor
adc
and
or
nop
add
and
repz
jmp
push
lds
jle
xlat
emms
leave
sub
cld
lret
idivl
adc
das
adc
fmul
sbb
mov
cwtl
test
movsb
cmpsb
xor
ja
sub
jmp
out
fsub
xlat
mov
notb
roll
popa
jg
repz
mov
mov
mov
mov
push
in
je
std
pop
ljmp
aas
xchg
xchg
jo
adc
cmp
cs
or
xor
pop
inc
shll
das
jmp
into
mov
in
push
vshufpd
imul
xchg
in
jb
outsl
inc
xor
fucomip
sbb
fs
out
add
or
xorl
mov
je
push
int3
mov
pop
lahf
or
fucompp
mov
xorl
or
xlat
ret
push
mov
ret
or
int
push
dec
outsl
or
iret
jle
and
lea
xor
cmp
pop
int
jge
addr16
xchg
fstp
mov
out
movsl
imul
aad
dec
mov
pusha
xor
or
je
mov
sahf
lods
andb
push
xlat
aam
mov
rep
add
sti
int3
or
push
add
mull
insl
pop
push
mov
sub
sub
jnp
mov
lahf
out
dec
int3
popa
or
popf
jp
push
jnp
cltd
push
sub
push
arpl
inc
dec
and
jle
ret
jbe
sub
cmp
or
ds
add
sub
xchg
inc
mov
es
sbb
xchg
sub
es
push
js
out
sbb
add
pusha
fsubl
dec
and
int3
leave
sub
cld
jmp
in
mov
dec
mov
mov
adc
dec
dec
pop
cli
push
pop
shlb
inc
jbe
test
dec
push
jae
sbb
sbb
mov
fisubs
imul
dec
hlt
out
cwtl
push
test
add
movsl
mov
aad
dec
or
loopne
or
mov
js
lds
in
or
push
hlt
and
pusha
pop
inc
cwtl
mov
call
jnp
popa
mov
insb
je
std
xor
std
dec
sahf
test
mov
aad
enter
outsl
data16
xor
divl
cmpl
inc
jmp
aaa
mov
testb
jmp
fwait
movsb
push
ja
jle
or
adc
xchg
inc
cli
dec
iret
test
mov
dec
shll
cmpsl
shrl
inc
sub
dec
pop
or
mov
inc
pop
call
inc
jg
sbb
shrb
jle
aad
pop
mov
aaa
or
or
xchg
orl
jecxz
repz
stos
cmpsb
cmp
jae
sub
aam
inc
aam
cmp
lods
jg
fldt
imul
xor
in
mov
int3
sub
loop
mov
imul
inc
xlat
xorl
lcall
pop
idivl
cs
adc
insb
cmc
xchg
mov
inc
sub
sahf
shrb
jmp
out
mov
test
lods
xchg
push
cli
cmp
mov
dec
hlt
int
mov
or
test
xchg
les
enter
lret
jno
stc
xor
push
pop
in
pop
sahf
aad
loop
and
mov
in
mov
sub
jge
add
sbb
enter
and
dec
sti
xchg
mov
pop
sub
dec
outsl
jl
mov
loope
lahf
push
cmp
dec
iret
fwait
jb
pushl
rclb
xor
dec
pop
cmp
jecxz
add
iret
pop
or
fdivrl
pop
mov
gs
cmp
cmpsb
cmc
add
xchg
xchg
clc
ret
and
leave
xchg
xchg
cmp
sub
xchg
mov
ja
pop
dec
jle
pop
out
mov
inc
xor
mov
lds
jo
xlat
mov
sbb
mov
gs
sti
imul
cmp
adc
jp
sub
les
mov
sbb
int
popf
lds
and
ret
hlt
fimull
dec
lcall
xchg
les
inc
cmp
mov
dec
adc
icebp
pop
gs
imul
jge
mov
test
dec
mul
test
jl
push
mov
rclb
mov
popf
sub
int3
push
je
lret
mov
or
lods
adc
dec
ja
sahf
test
xlat
xchg
adc
push
push
test
jne
mov
adc
cmp
ja
subb
jbe
jo
in
pop
inc
test
vpandn
dec
in
and
mov
adc
sub
test
cmpsb
aad
xor
cmp
stc
push
pop
xchg
and
les
jns
fisubl
xchg
and
stos
mov
int3
jno
or
cltd
push
dec
xchg
sbb
mov
jecxz
sbb
inc
lock
pusha
mov
insb
outsl
mov
movsl
jne
mov
dec
xchg
addr16
mov
cmp
dec
push
mov
push
sbb
in
sub
cmc
inc
movsb
icebp
std
jmp
cmpl
sbb
inc
push
xchg
cmc
iret
jb
in
scas
pop
and
sar
sbb
cmp
jecxz
cltd
adc
movsl
jge
arpl
add
jbe
aas
cs
sub
outsl
adc
imul
add
mov
pop
aaa
lock
sub
and
dec
iret
pusha
mov
addr16
lods
clc
out
jo
js
insl
push
hlt
mov
adc
xchg
lds
repnz
add
mov
pop
in
std
push
xchg
or
mov
cli
jmp
xor
xlat
sub
push
lcall
cmp
je
pop
dec
lea
mov
lcall
cmpsb
std
movsb
int3
and
push
ds
jle
adc
fldcw
lahf
adc
movsl
sub
dec
jmp
scas
xchg
cmpsl
xor
and
cltd
cwtl
dec
push
fcomip
inc
fwait
adc
stc
xchg
cli
adc
push
xor
xchg
jecxz
sar
push
movsl
cmpsb
jecxz
mov
dec
push
ret
cmp
inc
mov
outsb
xchg
pop
and
sub
add
fisttps
mov
outsb
sub
xchg
clc
sbb
sahf
and
mov
inc
cmp
xor
scas
adc
or
nop
test
jae
ret
aaa
adc
xor
and
ljmp
data16
outsb
ljmp
cld
jb
push
pop
sub
cwtl
ret
add
inc
inc
xor
inc
push
or
das
jge
loopne
jo
mov
inc
push
repz
stc
mov
mov
and
imul
sub
adc
xchg
inc
mov
into
xchg
arpl
jne
cmp
scas
pop
adc
call
sub
push
je
cmpb
adc
iret
mov
loopne
roll
xor
clc
mov
orb
sti
in
scas
data16
pop
iret
adc
inc
or
je
cmpsb
jmp
and
out
out
or
leave
push
out
mov
xor
frstor
dec
xor
lcall
mov
sub
or
dec
xchg
add
and
pop
push
jne
imul
sbb
movsl
mov
scas
pop
xchg
sbb
pop
je
xor
mov
cmp
sbb
faddl
ret
ljmp
jbe
jmp
loop
out
inc
gs
int
fwait
into
sti
sbb
sbb
ss
inc
push
add
popa
es
dec
cmp
jmp
mov
out
push
add
xchg
push
jmp
jg
or
pop
sub
xchg
cmp
imull
pop
negb
jnp
and
ljmp
ror
rorb
push
dec
inc
leave
jmp
xchg
xchg
shl
jnp
sbb
inc
pop
pop
pushf
sub
roll
fnstcw
rclb
or
pushf
xlat
mov
subb
aas
push
rclb
or
mov
lret
adc
cs
push
imul
movsl
jge
cmp
stc
or
fstl
add
cmp
hlt
sbb
scas
bound
sti
pop
push
icebp
out
subb
je
ficoms
jno
xchg
or
inc
clc
sub
xchg
aas
repz
jno
pushf
cwtl
mov
jne
gs
push
jnp
dec
pop
in
enter
clts
test
pop
push
iret
fistpl
sub
hlt
sub
jbe
imul
aas
fwait
popf
mov
xor
rcrb
dec
testb
test
dec
lods
pop
dec
cmpxchg
mov
adc
mov
cmp
push
es
inc
xor
push
cmp
mov
pop
aam
dec
cmpsb
or
mov
clc
cmp
repz
cltd
sub
lcall
test
pop
popf
aam
iret
jbe
dec
filds
fcmovb
movsl
rorl
cli
call
pusha
pop
test
test
ror
sbb
pop
bound
aas
add
mov
enter
leave
ret
movsl
push
insl
mov
sbb
xchg
lock
xor
cld
subl
out
mov
mov
leave
loopnew
mov
inc
loopne
in
sti
lods
js
ljmp
and
sub
dec
dec
cmp
roll
int
xor
push
pop
push
shr
mov
push
mov
lahf
jno
les
lret
das
daa
adc
cmp
leave
xor
xor
adc
or
fcmovb
sahf
in
push
xorl
icebp
add
ss
mov
mov
mov
xor
ret
xlat
inc
cltd
ret
int3
or
mov
insb
das
cmp
lret
loopne
lahf
movl
cmc
fwait
pop
pop
insl
in
hlt
lret
add
ret
xchg
inc
ret
test
cmc
les
shrb
lret
xor
outsl
inc
sbbl
fisubl
sub
mov
adc
pusha
enter
divb
jnp
setne
popl
cwtl
xchg
jne
sbb
shrb
dec
iret
ficoml
push
jbe
push
loop
lds
cmp
pop
pop
pusha
cmpb
xchg
in
test
and
call
cwtl
fimuls
nop
insl
push
or
ret
mov
int
ret
add
push
and
hlt
jge
sub
sti
repnz
inc
out
cmp
or
or
jnp
mov
adc
xchg
pusha
cmp
mov
pop
into
xchg
call
lods
imul
inc
incb
shl
cltd
add
add
ret
pop
dec
jge
lret
aas
dec
mov
pop
pop
jb
jge
repnz
in
das
dec
adcb
sbbb
mov
cmp
mov
sub
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
jmp
repz
fsubrs
cld
adc
cs
repz
fsubrl
int
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
and
out
lea
sar
and
and
sbbl
and
xchg
in
mov
lret
push
inc
jbe
mov
mov
sub
repz
fsubrl
mov
hlt
stc
lods
ja
lods
jne
loope
dec
pop
insb
lods
pop
sbb
or
lahf
mov
test
pop
and
sahf
popa
in
pop
jg
sti
jns
fs
addr16
mov
dec
lods
jne
loope
xlat
les
and
pop
or
or
test
out
inc
adc
and
add
in
and
in
push
scas
hlt
stc
out
fsubrl
lea
jmp
imul
out
fmul
aas
out
jmp
cs
repz
cmp
in
mov
ljmp
pusha
push
addr16
jmp
repz
lahf
fsubrl
lea
jmp
cs
repz
add
addr16
push
repz
fldcw
lea
jmp
cs
ss
out
fsubrs
mov
out
addr16
data16
int3
outsb
out
popf
add
addr16
repz
add
addr16
repz
fsubrl
not
imul
gs
sub
out
ret
addr16
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
add
add
out
insl
or
addr16
repz
add
mov
out
lea
jmp
into
js
sbbb
arpl
cmpsb
insl
repz
aad
outsb
out
push
pop
jmp
cs
repz
fsubrl
lea
lret
addr16
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
lea
jmp
cs
repz
fsubrl
and
push
jbe
out
movsl
jle
sahf
jmp
stc
test
pushf
push
mov
lahf
loope
sahf
or
xchg
aam
sbb
sti
leave
fcoms
into
sbb
mov
mov
ss
cmp
add
cld
int
jl
and
aaa
mov
ds
sub
in
test
sahf
mov
arpl
add
jecxz
hlt
shlb
dec
mov
jo
pop
and
or
lds
dec
stc
stos
dec
dec
daa
pusha
mov
jle
scas
imul
push
repz
stc
sub
cmc
push
pushf
and
mov
jp
add
in
jnp
mov
xchg
sahf
push
aad
insl
dec
ficomps
sar
and
mov
pop
fcomps
pop
dec
pushf
push
ret
push
sbb
push
loope
popf
cmp
push
lds
das
push
scas
mov
mov
enter
add
jp
pop
loope
dec
sub
dec
and
mov
sbb
xchg
outsl
insl
rcll
cmpsb
push
mov
mov
xchg
or
mov
sub
popf
pop
or
scas
loop
mov
lcall
sbb
mov
jg
les
mov
push
mov
cltd
cmpsl
inc
lret
lea
cld
mov
fwait
ja
fadds
or
or
cmpsb
sub
and
aaa
xchg
cmp
mov
int3
and
mov
sbb
sbb
xchg
push
test
lds
push
insb
imul
jne
jo
iret
xchg
popa
aad
sub
les
in
stos
andl
jmp
cmpsb
xchg
sbb
pusha
mov
adc
mov
fldl
aaa
aad
fwait
outsb
adc
sahf
lahf
std
sub
inc
scas
lods
xchg
movsl
loope
mov
std
push
push
addr16
clc
shrb
sbb
adc
dec
cmp
int
xchg
loopne
pusha
xor
inc
std
pushf
lods
movsl
and
mov
cmpxchg
xlat
xchg
push
das
push
out
ja
out
sbb
into
sub
nop
shrb
ss
mull
lret
jmp
stos
ja
aas
lea
repnz
mov
adc
or
xchg
push
inc
pop
or
cmpsl
and
add
push
stos
fidivl
push
cltd
mov
adc
jg
xchg
mov
xchg
ret
je
or
jecxz
cs
pop
cwtl
add
inc
add
mov
mov
fbld
sbb
cmp
and
call
add
aaa
cmpsl
out
fs
cld
inc
mov
dec
sub
sub
and
js
dec
inc
popa
sbb
imul
xchg
das
gs
adc
cmp
mov
mov
ds
lock
mov
sbb
jo
lods
cmc
mov
xorl
xor
ja
addr16
popa
ret
mov
pop
mov
jo
cmp
enter
push
fisubs
xor
js
pusha
push
leave
sbb
mov
dec
std
pushf
repnz
pop
das
gs
sti
cltd
jmp
addr16
loopne
icebp
in
es
sarb
pushw
pop
sbb
and
pop
mov
mov
in
mov
mov
sbb
jne
mov
fidivrl
shl
mov
mov
ret
gs
rorb
lds
nop
add
mov
pop
sar
adc
scas
jne
gs
test
mov
mov
fisttpll
stos
and
sbb
xchg
out
pop
pop
das
shrl
pop
aam
out
add
ficoml
sbb
or
in
loopne
dec
mov
stc
xor
xchg
lret
ja
ror
xchg
push
adc
imul
lds
lcall
mov
sub
in
std
lock
cltd
cmpsb
xor
jecxz
decb
sbb
xor
into
adc
rcl
jno
mov
jns
or
cltd
jns
jno
mov
or
cmc
xlat
sub
xchg
scas
nop
lahf
pop
shll
js
push
leave
call
mov
sub
jb
sbb
addb
rclb
adc
and
pop
xor
mov
add
or
adc
mov
xor
sbb
adcb
jp
clc
add
xor
ret
clc
fdivs
sbb
add
jecxz
imul
shlb
shll
iret
fildl
jne
jno
pop
ss
cli
lods
jp
inc
xchg
cmp
mov
mov
fnstenv
test
and
gs
cmp
cli
sub
lods
cmp
sub
add
loop
cli
jns
jnp
mov
out
nop
incb
fcmovnu
ror
mov
sbbb
imul
sti
out
or
call
inc
loopne
sub
mov
mov
cmp
mov
mov
mov
xchg
xor
push
xchg
lahf
inc
lea
jge
test
cmp
arpl
jnp
sub
into
aas
les
push
pushf
dec
pop
mov
ljmp
addr16
and
push
shll
lcall
inc
jp
pop
maxps
jno
dec
cmp
sub
jg
ret
jp
jo
xchg
xchg
xor
add
or
inc
fdivrp
mov
shl
dec
je
jge
sbb
adc
mov
pop
jp
lret
push
imul
push
dec
jle
fstps
stc
fnstenv
xor
lcall
es
loope
andl
addr16
scas
mov
xchg
addr16
adc
bnd
or
in
sbb
inc
mov
stos
xor
fs
inc
in
stos
cmpsl
adc
std
les
dec
mov
push
jns
adc
jnp
mov
repz
in
jns
pop
jo
mov
fiadds
push
dec
pop
cmp
mov
push
fwait
xor
vpor
mov
mov
and
repz
bound
push
cld
add
cwtl
push
sbb
sub
cwtl
es
pusha
incb
adc
xchg
daa
cmp
jnp
or
imul
fidivrs
shlb
mov
imul
push
lret
fildll
push
push
push
insb
and
ret
vpunpckhwd
hlt
out
shrb
sti
ja
icebp
fisubs
adc
cmp
arpl
decl
fwait
call
jmp
inc
jp
jbe
icebp
and
jmp
cwtl
sub
cmc
xlat
adc
daa
or
pushf
xchg
mov
orl
nop
push
insl
mov
and
in
mov
scas
inc
out
adc
mov
outsl
pop
sub
addl
gs
inc
sbbb
ja
cwtl
aam
fdivs
out
pop
sti
andb
and
sub
xchg
inc
and
xlat
int3
xchg
scas
lret
push
xchg
mull
and
enter
pop
or
repz
cld
lahf
test
testb
in
dec
or
movsb
cmpsb
mov
adc
dec
scas
insb
sbb
sub
adc
outsl
mov
and
push
lret
int
sub
pushf
ljmp
cmp
jo
std
popf
and
push
jns
or
loop,pn
push
out
and
pushf
fsubrs
lea
ja
xchg
or
mov
cltd
jp
stc
and
daa
movsl
int3
fidivs
jo
pop
and
pop
jp
cmp
xlat
cmp
into
shl
push
sub
add
dec
jp
adc
neg
out
xchg
sub
movsl
test
and
enter
or
dec
in
push
jecxz
test
mov
stos
ret
xchg
test
or
push
xchg
xchg
ds
mov
dec
xor
pop
inc
inc
pushf
fs
sub
sti
mov
int3
in
jmp
lods
scas
iret
pop
xchg
movsb
inc
in
push
cmp
enter
mov
xchg
hlt
outsb
sbb
pop
iret
add
fnstsw
xchg
rclb
loope
push
jo
pop
repnz
imul
pop
mov
nop
inc
lahf
out
cs
insb
cmpsl
adc
dec
lahf
aas
mov
mov
lea
pop
clc
aad
mov
add
pop
jne
imul
push
cmp
shl
inc
jae
lret
mov
fnsave
aaa
add
cld
jp
dec
into
sub
and
in
mov
dec
fstl
mov
mov
repz
les
mov
stos
fs
mov
push
leave
popa
fcmovnu
loope
insl
out
enter
xchg
jmp
fbstp
and
les
fs
jae
mov
popf
std
inc
pop
or
xchg
outsl
adc
negl
mov
add
stc
mov
cld
sbb
pop
out
shrl
hlt
mov
or
adc
add
cmp
movsl
imul
shrb
or
mov
mov
sbb
int3
fiaddl
gs
pop
xchg
xchg
popf
out
and
add
aas
sub
imul
rcr
aas
pop
push
jp
pop
and
push
mov
adc
adc
push
aad
pop
inc
xlat
adc
mov
fistpl
imul
lahf
inc
adc
and
push
pop
scas
fistps
xor
scas
into
xor
jecxz
push
inc
or
xor
xor
push
jge
lock
xor
jno
out
cmc
add
es
xchg
or
xchg
xor
mov
and
mov
xchg
test
repz
jle
dec
dec
fsubrl
pushf
in
fsubl
mov
cmpsb
jmp
sub
mov
or
fidivl
mov
push
xchg
cmp
push
sbb
xor
fnsave
xor
jecxz
movsb
adc
clc
jae
push
and
inc
inc
or
arpl
xchg
inc
pop
inc
jl
or
xchg
outsl
add
jae
inc
cmc
popa
sub
test
shlb
mov
fwait
push
push
aam
jns
cwtl
push
outsb
jle,pn
sub
sbb
fcmovnb
adc
xor
fistl
or
cmp
push
insl
repz
inc
adc
lds
sbb
adc
call
jne
sahf
sub
sub
or
pusha
lcall
aad
insl
daa
mov
js
mov
loope
fs
inc
enter
dec
ds
cmp
fists
scas
int3
jb
enter
sub
dec
jg
mov
or
fildll
aas
js
dec
xor
fs
or
adc
inc
clc
adc
dec
pop
or
mov
jecxz
loope
js
pop
pusha
icebp
xor
imul
cmp
enter
sahf
setae
cmp
pop
sub
negb
pop
adc
in
out
jmp
adc
dec
dec
and
in
shll
sbb
jo
fdivrs
sub
mov
cli
setae
adc
sub
inc
push
psraw
int
adc
jge
lret
repnz
sbb
sub
in
xchg
xchg
insb
inc
and
es
xchg
pop
lcall
inc
add
icebp
test
test
mov
push
call
daa
popf
out
sub
sub
adc
dec
gs
cmp
mov
ja
jnp
sbb
clc
add
xchg
mov
movsl
xchg
or
pop
or
mov
xchg
shr
mov
mov
sbbl
push
stc
mov
sub
hlt
xor
sub
popf
fisubl
cmp
dec
adc
fnsave
sub
fiadds
jg
gs
pcmpeqb
inc
mov
and
add
fsubrs
pop
pop
jno
sbb
adc
cmpsb
xchg
orb
fbstp
xchg
mov
iret
xchg
xchg
in
rclb
pop
imul
inc
jge
dec
inc
rorb
aas
cld
and
fcompl
mov
std
add
stc
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
