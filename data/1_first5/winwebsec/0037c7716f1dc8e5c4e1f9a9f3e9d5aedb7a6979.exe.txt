push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
lret
and
push
mov
lds
push
jle
mov
push
xchg
pusha
xor
dec
sub
pop
fimuls
sub
imul
dec
add
pop
test
xchg
jmp
shl
or
and
arpl
adc
pushf
dec
fcoml
adc
cld
jecxz
pop
fwait
add
jnp
stc
inc
inc
js
das
mov
sahf
mov
out
shl
mov
sarb
sbb
mov
inc
jp
je
lds
cmp
sbb
mov
cmp
sbbb
push
dec
mov
jns
test
push
cmp
aas
mov
and
mov
sbb
jg
bound
lret
inc
sbb
adc
loope
leave
mov
pop
stos
fdivrl
adc
nop
enter
mov
jl
xchg
mov
jae
sti
lret
and
jb
xor
jae
xor
andl
orl
pusha
and
arpl
mov
adc
add
jns
lods
push
rcr
out
mov
adc
ljmp
inc
cltd
cmc
mov
lock
or
or
int3
mov
pop
cmpb
xchg
push
pop
or
cmp
xor
jmp
push
and
fnstsw
add
fistpll
cmpsl
dec
loop
or
xor
mov
insb
sbb
imul
push
pop
dec
lcall
movsb
test
aas
fwait
test
inc
scas
add
fwait
adc
in
and
test
pop
cmp
jmp
mov
stc
inc
into
out
cmp
mov
mov
cltd
inc
andb
andl
stos
mov
sbb
or
repnz
adc
or
lretw
cmpsl
pop
lds
xor
outsb
into
jmp
fiadds
xchg
cltd
push
jnp
jb
sbbb
add
xchg
xor
sbb
in
je
ja
jge
inc
test
push
or
pop
pop
addl
int3
mov
jae
das
mov
ds
mov
add
int
sbb
test
cmp
ja
add
mov
pop
inc
test
fucomi
or
inc
ja
and
sbbb
mov
lahf
inc
mov
or
and
xor
in
andb
add
adc
mov
push
mov
ljmp
pushf
sub
pop
imul
push
shll
sub
mov
and
movsl
add
les
nop
or
stc
push
leave
loopne
les
jne
push
jg
sub
xchg
and
mov
cmp
or
enter
daa
mov
cld
jo
or
inc
add
inc
aad
cmp
inc
jg
adc
sub
sbb
repz
and
scas
adc
iret
movsb
enter
adcb
ss
xchg
insb
inc
lret
fildl
jns
jne
cmp
gs
in
ja
hlt
jbe
push
cwtl
stc
mov
mov
mov
repnz
jne
hlt
mov
sub
jle
fucomp
push
cmp
aas
push
sub
dec
loop
aam
cmp
cwtl
cmp
xor
mov
pop
mov
in
jle
push
mov
ja
pop
test
fidivl
fcomps
dec
lods
or
outsb
mov
in
repz
add
pop
mov
mov
mov
dec
lcall
popa
addl
fistps
std
xchg
mov
rcr
jmp
neg
mov
dec
shll
flds
push
bnd
test
cmpsl
test
cld
test
pop
push
adc
pop
xor
test
into
dec
hlt
adc
mov
push
les
mov
sarl
nop
push
or
rorl
cmp
mov
jne
jge
xchg
mov
arpl
sahf
sub
lret
cs
popa
mov
popa
sbb
jge
xchg
and
jmp
add
jae
mov
lock
add
lcall
stc
test
lea
cmpb
outsl
jge
jecxz
jmp
and
or
adc
mov
mov
out
pop
scas
or
or
lcall
mov
pop
clc
sbb
push
test
std
sub
mov
mov
jecxz
xor
lods
sub
cmp
mov
inc
fldt
mov
lds
arpl
fld
push
mov
cld
test
aad
fstl
test
and
and
adc
ret
lret
test
jo
mov
sub
mov
adc
mul
or
stc
mov
and
pusha
mov
push
inc
pop
jmp
pusha
mov
lret
sbb
iret
gs
call
dec
dec
imul
push
adc
or
mov
push
mov
jne
add
push
inc
mov
jl
push
dec
push
xor
dec
pop
xchg
add
dec
push
lods
sbb
dec
in
int3
or
pop
push
push
jo
jg
fsubl
adc
stos
cmp
shll
mov
lea
fadd
mov
fisttps
cmp
mov
xor
mov
mov
out
adc
jle
fmull
push
jge
add
out
inc
sahf
call
pop
shlb
xor
push
cmp
mov
sub
aaa
xor
stc
jge
mov
aad
or
mov
jno
sarb
aam
ljmp
mov
fnstsw
push
cmp
outsl
sub
stos
lods
data16
orb
push
jns
and
insl
push
push
mov
out
jbe
cli
mov
push
push
mov
dec
and
in
js
push
sarl
lea
adc
lcall
adc
outsb
stc
sub
dec
mov
mov
mov
sub
dec
pushf
into
sbb
lret
sub
add
fucomp
repz
fdivr
xchg
jns
fwait
jbe
sbb
ljmp
pop
lahf
shll
pop
std
sti
js
xor
and
mov
cmp
test
xor
mov
lret
sub
cmp
ret
mov
mov
sbb
ss
testb
jle
ja
jle
iret
xchg
jb
dec
inc
inc
jg
sti
add
movsb
sbbb
cmp
cmpl
sbb
out
les
fs
cmp
iret
das
popa
xor
pop
xor
adc
jo
jae
mov
jg
fs
push
mov
faddl
rclb
mov
sbb
rol
in
lods
out
ljmp
shr
add
adcb
mov
add
in
mov
idivl
mov
xchg
add
loop
jecxz
sbb
stc
xchg
rorb
jb
rorb
nop
inc
movsl
sub
xchg
rorl
xchg
mov
int
xchg
repnz
and
lcall
insl
lcall
inc
jbe
incb
ret
jns
jp
leave
pop
inc
je
out
inc
add
fsubl
inc
pop
sbb
jl
shr
insb
test
cmc
xor
sar
sahf
cmp
arpl
add
mov
dec
adc
push
shrb
cltd
push
arpl
call
or
lods
jmp
and
push
sbbb
aad
shlb
push
inc
inc
and
cmpsb
pop
fcmovbe
mov
add
lret
xor
mov
add
cmp
inc
jns
mov
mov
lock
out
or
lret
jmp
mov
roll
std
push
jae
mov
aad
in
out
pop
push
cwtl
scas
inc
scas
imul
pop
sbb
inc
bound
and
sbb
cmp
loope
mov
in
sbb
in
inc
sub
addb
inc
add
jl
repnz
cli
xchg
xor
or
add
jg
sahf
add
daa
adc
push
dec
popa
jbe
cmp
cmc
mov
stos
push
inc
adc
stos
mov
sub
and
js
aaa
mov
hlt
xchg
xchg
mov
adc
mov
add
jbe
cmp
test
icebp
jae
repz
inc
fnstenv
fucomip
cmp
add
push
scas
idivb
pop
dec
jmp
dec
stc
scas
adc
repnz
pop
cmp
adc
clc
mov
push
cmp
es
in
dec
jb
push
jge
mov
fiadds
xchg
sub
and
leave
cmpsl
xchg
mov
mov
add
mov
add
gs
xor
dec
mov
sbb
out
jge
mov
and
dec
aad
mov
aas
aam
mov
dec
pop
mov
mov
ljmp
enter
jno
jmp
jbe
jno
repnz
xchg
jno
mov
add
pop
dec
aam
mov
jnp
es
inc
xchg
ds
and
cmp
adc
inc
std
ds
dec
clc
sub
mov
sarb
mov
sub
mov
int3
test
cltd
data16
ud1
das
imul
cmpsb
jb
iret
jbe
mov
push
dec
dec
jge
lock
push
repz
pop
push
mov
rep
cli
cli
out
test
imul
push
fcmovnu
cmp
fs
pusha
cmp
fmul
mov
pop
mov
xchg
aaa
pop
in
xor
imul
imul
xchg
sbb
icebp
pop
mov
add
in
cmp
cli
sbb
sbb
stos
jno
sbb
sbb
or
jns
test
call
mov
mov
icebp
xor
dec
in
pop
dec
or
jle
pop
mov
ljmp
push
push
cld
mov
ljmp
jns
sti
lods
scas
incl
iret
and
es
pop
bound
mov
ret
cmc
pushf
jmp
ja
data16
cmp
into
or
or
inc
fiadds
cs
rorb
addr16
cmp
int3
fcompl
mov
imul
jbe
shll
xor
out
sahf
cwtl
pop
and
or
mov
clc
cmpsl
lea
mov
push
fst
mov
fmuls
cmp
dec
pop
and
sbb
mov
add
push
mov
xchg
ljmp
lahf
mov
push
lret
xor
int3
jnp
dec
push
dec
mov
jecxz
mov
or
das
ret
push
fcmovb
cmp
and
xor
jl
xor
pop
sub
or
ret
outsl
andb
cmp
or
add
mov
add
loopne
sbb
jecxz
jle
xchg
push
xchg
fwait
sbb
inc
mov
dec
cmp
and
cltd
les
arpl
mov
adc
mov
add
cli
push
repz
mov
add
mov
push
mov
mov
xor
mov
es
push
fidivrs
jg
lods
in
push
push
shlb
notb
dec
lods
repz
mov
mov
inc
pop
lock
lods
mov
cmpsb
xchg
or
in
or
xchg
push
mov
fdivs
addb
xor
and
addb
fwait
pop
out
shrl
xchg
and
jl
fidivs
cld
push
stc
jmp
xchg
rcr
cld
adc
movsb
xor
aad
pushf
sub
xor
cmpsl
xor
shll
mov
ja
xchg
xchg
sub
sub
imul
xchg
in
lret
mov
movsl
aas
fwait
icebp
cmc
fsts
rcr
pop
loop
stc
pop
test
xchg
mov
push
out
pushf
mov
mov
rorl
test
jl
ret
mov
xor
mov
dec
out
mov
jnp
inc
lret
jnp
cmp
in
rcrb
xchg
int
mov
js
lds
bound
aam
fucom
aam
outsb
shr
out
xchg
jecxz
cmpsl
ret
adc
es
out
outsb
scas
lret
lds
dec
je
mov
outsb
cli
jmp
mull
inc
into
pop
jle
push
daa
in
mov
sbb
stos
outsb
and
mov
adc
cmpsb
pop
xor
jge
in
test
mov
ljmp
popf
lds
or
jl
sbb
pop
mov
scas
into
iret
stc
aad
lods
push
outsl
pop
mov
std
aam
repnz
or
add
adc
adc
pop
movsl
in
sti
xchg
call
lcall
inc
or
movsl
or
mov
sbb
push
out
jl
add
jb
cli
jl
cmp
or
inc
push
mov
pop
add
je
jb
into
inc
jbe
push
addr16
sti
ja
mov
out
inc
test
lcall
add
loope
movsl
and
in
std
cmpsl
push
iret
add
push
loop
mov
mov
add
dec
jb
nop
cmp
or
stc
fwait
enter
hlt
mov
add
nop
aam
fidivl
icebp
push
in
and
jle
ljmp
lret
icebp
mov
push
adc
je
fldt
dec
loopne
mov
aas
sbb
aam
cmp
jle
jge
pop
mov
out
psrlw
mov
mov
popa
mov
xor
ret
adc
fbld
out
sub
outsl
adc
or
push
cmp
cwtl
test
jnp
push
push
mov
out
or
jbe
cmp
lea
pop
adc
clc
mov
aad
cmp
pop
pop
subb
aad
hlt
test
ds
lods
loope
in
cmpb
ss
mov
aaa
jl
into
jecxz
sar
stos
int3
xorl
insb
mov
movl
movsl
fadds
push
inc
inc
push
mov
lcall
test
sub
or
fistpl
cmp
ja
cmp
rorb
dec
mov
cmpsl
cmp
inc
insb
cmc
imul
dec
test
insl
mov
stc
cmpsl
test
ds
js
add
jne
cltd
push
xor
fdivs
dec
fstpl
aaa
hlt
xchg
in
mov
cltd
out
jne
fwait
pop
cltd
loopne
push
inc
notl
mov
and
pop
sahf
aaa
dec
sub
vmovshdup
loope
pop
mov
mov
cmp
sub
or
push
fnstcw
testb
push
adc
int3
jae
gs
cmp
lcall
push
mov
inc
mov
aam
call
test
pop
xchg
lds
outsl
icebp
xchg
sar
jo
lret
push
mov
xchg
sti
sbb
jle
ja
mov
idivl
add
and
jo
stos
inc
aam
and
cmc
jnp,pn
out
sar
test
lds
push
dec
sub
fwait
in
ss
aaa
shlb
int
xor
jge
sbb
scas
movsb
or
imul
ffreep
push
lea
mov
sub
fdivp
jp
lret
mov
lahf
cld
sub
sub
jne
jb
pusha
popf
testl
imul
decl
add
sbb
out
pop
stos
in
lock
aad
clc
mov
push
xor
push
sbb
cmp
lret
push
jmp
ja
mov
push
xchg
push
dec
movsl
dec
sbb
inc
xor
sarb
jmp
mov
push
jl
push
call
mov
movsl
lock
dec
sub
or
imul
in
inc
add
pop
jo
pop
lcall
fwait
add
fucompp
in
nop
inc
adc
xchg
adc
jle
fimuls
pop
movsl
leave
jecxz
cmc
mov
scas
popf
clc
xor
rolb
pop
imul
jle
mov
adc
jle
jmp
mov
jae
dec
mov
mov
or
flds
and
fisubrs
lock
shrl
jg
insb
out
loopne
bound
add
sti
dec
movsl
lds
mov
xorb
dec
adc
push
jne
adc
scas
mov
ret
push
das
cmp
dec
pushf
cmp
jge
xor
push
jbe
stos
jb
sub
out
push
in
xchg
lcall
dec
jns
and
push
mov
repnz
scas
movsl
adc
shll
add
xor
push
in
mov
outsb
sub
inc
jg
or
xlat
and
add
fimull
mov
xchg
int3
cmp
into
lea
push
jns
sbb
leave
movsb
add
test
xchg
stos
mov
push
dec
dec
adc
adc
iret
sar
ret
loope
inc
and
shll
adc
add
jge
jmp
inc
sub
call
in
test
pop
cltd
mov
pop
loope
dec
sbb
ja
iret
in
jl
or
fscale
rclb
sub
sahf
inc
mov
repnz
jl
int
jecxz
and
in
inc
and
leave
inc
iret
rclb
jb
ret
or
cmp
inc
dec
repnz
inc
mov
loope
pop
adc
dec
gs
xchg
fcoms
bound
xor
ss
dec
cmpsb
sbb
push
add
lods
int
jae
shr
sub
loope
arpl
cli
mov
scas
fwait
push
inc
js
lods
push
nop
mov
int
mov
dec
xchg
movsb
adc
jge
push
add
pop
sbb
int
mov
jecxz
mov
lret
popf
lahf
cmp
sbb
lock
jae
or
outsl
roll
shl
xchg
cli
add
cmc
negl
pushf
aaa
dec
pop
mov
out
arpl
push
fidivrs
mov
sub
dec
les
add
shl
in
int
outsl
test
cld
mov
adc
pushf
adc
jle
fucom
scas
mov
and
xchg
stos
xor
mov
std
lcall
lahf
jo
mov
outsb
mov
mov
les
mov
xchg
in
aas
add
push
sbb
jle
pop
lcall
fists
clc
xchg
imul
push
mov
push
imul
jle
jp
or
lahf
jge
aad
insb
test
dec
sub
imul
lcall
ja
and
mov
pop
data16
inc
mov
fadds
inc
push
fisubs
cmp
rcrl
sub
and
and
pop
out
mov
mull
mov
cmpsl
in
cs
ret
sub
lods
inc
popf
pop
sub
mov
fwait
lods
inc
pop
xlat
fstl
in
pushf
xchg
cmpsb
pop
pop
mov
add
inc
daa
adc
mov
fbstp
ret
js
lods
pop
sbb
xchg
pop
push
dec
scas
or
shlb
xchg
mov
repz
mov
out
lcall
cwtl
jo
scas
fsubl
xor
lret
addr16
sti
inc
out
clc
xchg
hlt
push
xchg
call
mov
and
or
in
and
lea
push
xor
fnstsw
and
xor
jmp
cld
sti
dec
popf
mov
xor
push
pop
lahf
js
xor
repnz
inc
imul
lock
inc
pop
and
test
int3
xorb
mov
ret
stos
push
push
sarb
push
and
push
int3
cwtl
mov
mov
fistpl
fisubs
mov
stos
sbbb
test
jo
js
fwait
push
fwait
inc
enter
and
jns
inc
cld
xchg
mov
lcall
sbb
adc
pop
lea
fdivrl
xchg
test
sub
pop
int
into
loopne
cli
jge
xor
jbe
in
push
mov
xor
lret
or
sbb
pop
in
inc
imul
inc
jp
adc
push
pop
mov
insl
fldt
rcrb
xchg
data16
mov
fs
sti
mov
or
out
adc
add
in
or
jns
mov
cmp
scas
mov
fldl
jo
mov
sub
sub
daa
jmp
stc
dec
cmc
sti
inc
mov
pop
push
stos
dec
mov
imul
loop
int3
sub
and
packssdw
mov
mov
push
ficoml
or
or
push
rcll
xchg
push
je
stos
clc
orl
dec
pop
std
push
ss
mov
add
jno
push
sub
xchg
cmp
xor
andl
and
out
mov
lea
inc
in
rclb
aad
jecxz
inc
int3
ret
jne
loop
mov
ljmp
add
pop
dec
mov
xchg
pop
or
jnp
imul
xor
stos
jb
enter
je
mov
cmpsl
jo
pop
loop
dec
cld
xor
jbe
ret
and
and
jno
fdivrs
and
mov
sti
dec
ljmp
jns
sbb
pop
mull
cmp
and
adc
jge
sbb
push
aad
clc
sbb
xchg
faddl
fs
jl
push
lods
stos
cs
or
arpl
mov
adcl
es
jno
pop
les
cmp
sub
add
sub
mov
mov
bound
insb
mov
stc
cmpl
and
pop
cmpsl
inc
aaa
arpl
xchg
or
movsl
lods
jmp
or
jecxz
outsb
scas
fidivl
push
pop
add
mov
in
xchg
fdivs
xchg
pop
mov
ja
pushf
mov
sub
xor
mov
mov
xor
ret
xchg
mov
testb
aaa
roll
xor
dec
je
fldt
loopne
cltd
cmp
rorl
data16
add
fisttpl
sub
mov
cs
or
jmp
pop
cli
xchg
call
mov
lea
sbb
mov
pop
imul
decl
in
dec
sbb
inc
out
push
fs
stos
out
adc
pop
stos
sub
jne
push
imul
daa
push
test
and
pop
jne
imul
or
leave
gs
adc
or
inc
add
pushf
lds
clc
adc
jbe
add
pop
add
mov
popa
pop
cmp
jecxz
adc
lea
shll
fs
ds
or
cmp
mov
in
mov
or
cld
jbe
mov
xor
push
mov
cmc
imul
sub
out
cs
pop
fs
push
in
lea
aam
dec
lcall
xorb
jmp
jge
addr16
cmp
mov
or
movsb
nop
lret
mov
dec
xchg
add
mov
mov
out
ret
in
shlb
mov
les
sahf
lea
xlat
lods
xchg
mov
orl
stos
inc
mov
dec
stos
lea
stos
mov
clc
push
pushf
bound
sbb
push
sub
xor
xor
cmp
adc
or
ret
test
adc
and
aaa
fldenv
es
or
test
jmp
pop
out
aam
or
movsl
stc
addl
mov
js
ss
inc
sub
imul
lea
in
sahf
jae
jb
icebp
and
daa
adc
or
aam
dec
fsubl
mov
call
les
sub
and
bound
pop
or
xchg
or
push
jnp
add
lahf
inc
dec
add
jne
lret
sbb
push
push
adc
mov
pop
loop
xor
jno
pop
inc
or
dec
out
mov
adc
ret
cwtl
xchg
sbb
icebp
lret
jmp
in
jp
lods
xor
xchg
push
cmp
fwait
imul
xchg
sarl
imul
and
cmc
mov
sbb
pop
and
loop
cltd
shrb
lock
add
cwtl
sti
imul
mov
mov
adc
popf
jb
mov
mov
adc
sbb
pop
xor
loope
aaa
fimuls
cmp
test
push
mov
repz
pop
fs
inc
imul
push
push
xor
fisttps
mov
add
lock
out
scas
fsubr
mov
jne
rcr
leave
loope
pop
cmp
sub
jno
ja
call
ret
or
aaa
aaa
dec
adc
inc
lahf
jecxz
rorb
sub
shll
repnz
cli
enter
dec
loop
jge
adc
mov
jo
je
addl
in
pop
js
push
mov
sub
call
repnz
push
nop
inc
mov
aaa
or
testl
dec
je
mov
pushf
push
adc
enter
xlat
fdivs
mov
orb
out
pop
and
cmp
sub
cli
xchg
adc
shl
inc
hlt
fidivrl
loop
inc
mov
mov
test
pop
dec
push
sbb
int
outsl
mov
loope
mov
in
fwait
pop
jge
scas
and
cmc
lods
repnz
out
and
and
xchg
in
jbe
orb
dec
in
push
mov
aaa
cmpsb
adcl
imul
clc
ret
enter
out
or
stc
adc
pushf
rolb
data16
repz
mov
push
push
jb
mov
mov
xchg
and
adc
cmp
rclb
popa
cli
mov
in
lahf
or
jle
sub
inc
jmp
or
adc
sbb
adc
inc
pop
cmp
scas
jb
test
mov
xor
loop
sub
outsb
aaa
fcoml
aaa
mulb
clc
push
sbb
lahf
in
pop
mov
mov
andl
cmp
in
fnstcw
rorb
stc
in
fnstenv
hlt
cmpsl
mov
mov
lods
cld
mov
clc
push
add
adc
push
jle
inc
and
sbb
out
or
pop
bsr
cmp
js
push
mov
lcall
push
and
or
xor
jne
jecxz
ds
inc
mov
push
jp
stos
lea
inc
int
popf
pop
pop
push
jmp
insb
bound
lret
mov
scas
and
or
in
stc
inc
std
pop
or
xchg
sbb
fwait
jmp
hlt
ret
add
cmp
pop
imul
aad
jp
mov
push
adc
in
stc
lock
dec
sub
pop
push
or
xlat
or
repnz
filds
jmp
mov
in
das
into
mov
lcall
lret
jnp
test
xor
jo
jbe
push
dec
jb
mov
or
popa
mov
jb
jp
in
jg
dec
imul
adc
or
push
xor
loop
sarl
lds
xchg
lcall
outsl
push
nop
cwtl
xchg
lods
jae
mov
leave
test
fnsave
shlb
add
loop
mov
add
push
sti
mov
rorb
cmp
sbbl
dec
ja
in
notl
lcall
test
push
add
mov
fisubl
xor
aas
test
xor
mov
nop
mov
aas
aam
add
orl
push
in
pop
mov
dec
in
push
stos
in
add
adc
mov
jge
dec
fidivrs
jp
mov
test
enter
add
daa
sbb
xor
je
fsubl
les
jns
dec
lods
mov
mov
xor
aas
cmp
inc
out
mov
aam
or
cmpsl
inc
fisubs
loop
lcall
jp
in
sub
pop
add
pop
xchg
mov
mov
into
sbb
iret
iret
jb
or
rcrl
pop
cltd
test
sbb
or
cld
pushf
sbb
mov
cmpsl
mov
ljmp
mov
scas
out
out
mov
mov
pop
cmp
pop
pop
jbe
mov
addr16
cmp
outsl
arpl
aaa
mov
or
mov
popf
imul
or
adc
jbe
nop
or
ja
push
rclb
subl
xor
mov
adc
cmp
sub
mov
sahf
dec
jbe
pop
dec
cltd
pop
xchg
lods
and
fldcw
mov
lcall
push
push
mov
outsl
jo
mov
jl
xor
cld
incb
lea
sti
jmp
outsl
rcrb
lret
scas
outsl
push
fprem1
push
repz
lret
pop
sbb
lock
ja
ljmp
adc
mov
addl
jmp
pop
dec
jmp
push
out
xor
mov
movsl
push
mov
jo
mov
out
push
data16
shll
mov
xlat
fstp
and
dec
or
fs
mov
ss
sbb
lods
mov
pusha
xchg
pop
pop
js
pop
adc
jle
ret
stc
dec
call
iret
outsl
or
sbbl
lock
cld
xor
jb
das
dec
jae
addr16
add
add
shlb
sub
aad
dec
push
pop
push
ret
lcall
push
push
dec
adc
fdivrs
daa
icebp
xor
into
mov
mov
pop
addr16
jge
in
cld
xor
repz
sub
inc
mov
in
adc
xchg
mov
stos
push
decb
loopne
sbb
xor
mov
push
fidivs
mov
jmp
je
jbe
lds
pop
and
out
std
inc
jo
lods
and
notb
xchg
in
inc
aas
lret
outsb
data16
dec
mov
cmp
popf
repnz
push
pop
pop
imul
pop
dec
je
cmp
outsl
mov
aaa
addr16
inc
add
inc
dec
mov
cmp
ficoml
pop
xchg
push
inc
cli
xor
out
rcll
pop
mov
mov
cld
cmp
stos
cs
adc
nop
mov
xchg
sub
les
mov
fimuls
div
mov
cmpsl
in
adc
xor
cmp
sub
and
mov
in
push
les
std
scas
mov
xchg
scas
ljmp
adc
je
sub
subb
xor
sbb
push
xor
xor
inc
sub
aaa
popf
mov
sbb
xor
mov
push
mov
adc
cmpsb
pop
sub
xor
rorb
daa
nop
aas
mov
mov
dec
arpl
sbb
cmpsl
nop
loope
sbb
sahf
in
ret
sbb
in
and
cltd
xchg
lret
mov
jmp
inc
negl
mov
dec
sbb
and
scas
jge
adc
outsb
sub
ss
fwait
imul
inc
push
ret
mov
mov
std
pop
pop
enter
inc
cld
jne
mov
pusha
mov
jle
xorb
or
imul
mov
out
lods
js
adc
sub
jns
loope
cmp
or
lea
sub
push
or
mov
fcomp
mov
clc
out
in
push
loope
out
cld
pop
stos
test
xchg
aad
movsl
inc
pop
rol
mov
mov
xchg
mov
das
js
imul
js
cmp
imul
std
out
stos
xchg
lcall
adc
dec
movsb
cmp
mov
movsl
mov
xchg
into
xor
mov
mov
or
cmp
mov
pop
cs
rcll
imul
adc
lea
out
adc
jno
lods
notl
mov
push
add
roll
sbb
loopne
shll
dec
lock
int3
or
mov
ret
subl
in
stc
mov
xchg
or
mov
inc
loopne
test
pusha
and
pop
fcoml
shll
outsb
das
dec
out
push
jmp
mov
dec
rolb
shll
decl
jmp
lahf
sbb
sub
dec
pushf
fyl2x
mov
cli
pusha
add
icebp
push
dec
sbb
pop
cmp
jne
cwtl
scas
mov
push
sar
loopne
into
add
mov
jno
add
out
add
imul
nop
xchg
inc
insb
ja
xor
pop
cmp
sbb
jns
sbb
ret
dec
jae
dec
icebp
fidivl
xchg
cmpsb
dec
lods
or
lock
out
stos
outsb
mov
ret
mov
loopne
es
mov
jge
daa
jp
mov
jae
and
popf
pop
fadds
sbb
ret
fistl
mov
mov
xchg
lods
and
xor
int
data16
mov
test
adc
mov
push
aaa
push
push
fs
orl
mov
mov
imulb
test
ds
and
iret
cli
dec
imul
orl
add
xchg
in
push
lret
cmp
imul
es
aad
jp
xor
in
pop
adc
adc
mov
mov
inc
pop
adc
jg
mov
mov
cmp
cmpsb
ror
mov
mov
inc
fcomp
mov
or
lods
pop
xchg
push
jo
in
mov
adc
lret
orl
mov
mov
cmpsl
sub
mov
lahf
or
or
sub
lods
mov
or
aaa
shll
sbb
pop
and
add
adcb
sub
repz
aaa
jge
inc
push
pop
push
pusha
jg
lds
inc
pop
fld
sbb
sbb
inc
and
mov
xchg
inc
add
push
pop
hlt
aas
out
ja
jno
dec
sbb
sbb
insl
jmp
push
inc
mov
mov
cmp
inc
or
pop
pop
les
add
shlb
mov
inc
lcall
dec
lcall
and
mov
and
lahf
stc
test
sbb
lcall
decl
dec
addr16
pop
jne
mov
cmp
pop
fnstcw
in
adc
push
scas
dec
xchg
xor
dec
push
jo
mov
inc
iret
mov
sbb
inc
sbb
popf
mov
sbb
inc
inc
stos
mov
fnsave
dec
fs
sahf
push
cmp
add
push
or
call
push
mov
movsl
add
xchg
stos
shll
mov
pop
js
in
sub
ret
jecxz
adc
cmp
push
cli
xorb
pop
lods
movsb
add
sar
mov
mov
sub
cmpsl
mov
xchg
fcoml
imul
aaa
mov
inc
repz
ljmp
fcmovnu
das
imul
bound
lcall
in
mov
aas
xor
jg
aaa
xchg
sbb
subl
pop
scas
add
test
inc
pop
dec
inc
mov
xchg
pushf
cmc
ljmp
or
mov
or
sbb
cli
cwtl
and
xchg
jne
rcl
sarl
loopne
xchg
sub
sub
push
lds
pop
jp
ljmp
jns
jns
dec
movsb
in
adc
data16
sar
mov
ljmp
xor
jno
inc
lods
outsb
sbb
in
icebp
adc
push
push
inc
icebp
shl
xchg
and
jae
push
mov
fcmovnbe
mov
aaa
inc
cs
std
add
orb
jp
mov
xchg
mov
mov
dec
push
dec
dec
mov
rcr
imul
mov
ja
lahf
test
inc
outsl
dec
push
stos
fistl
xorl
mov
imull
cmp
mov
stos
loopne
or
popa
gs
idivl
stos
xchg
sti
push
cli
or
addb
lcall
hlt
mov
push
mov
pop
push
in
xchg
data16
arpl
adc
lret
and
dec
inc
xchg
xchg
daa
lea
repnz
outsl
push
shlb
call
test
sar
stos
nop
xor
cmp
decl
clc
jns
mov
test
les
mov
enter
mov
xor
movsl
scas
pop
or
and
nop
or
pop
out
mov
repnz
pushf
popf
add
adc
cmp
pop
pop
sub
sbb
inc
repnz
push
sbb
movl
and
leave
pushf
shrb
pop
call
and
mov
lods
inc
sbb
or
xorb
push
push
sahf
pop
or
mov
nop
mov
mov
sub
mov
xchg
push
xor
je
data16
imul
inc
inc
aad
sahf
lea
pop
dec
push
adc
fs
lcall
or
sub
mov
loope
push
dec
icebp
roll
orb
lods
stos
jge
pop
mov
lcall
pop
jae
xlat
xor
enter
xchg
add
repnz
pop
xor
mov
movsb
sbb
xchg
jns
addb
aaa
xor
imul
movsl
inc
cmp
mov
clc
and
ss
or
mov
sub
xchg
aaa
test
adc
add
sub
or
dec
test
out
xchg
je
pop
in
je
xlat
pop
stos
stc
or
or
mov
pop
mov
pop
and
icebp
fwait
lahf
lret
mov
sub
cmp
inc
popa
dec
aam
lahf
push
outsl
bound
cmpl
movsl
sbb
movsl
outsb
and
rorl
pop
mov
inc
call
add
js
out
cmp
inc
xor
sub
aaa
or
fsts
fwait
xchg
inc
bound
in
or
add
and
fwait
jae
inc
mov
popf
jge
mov
jge
std
jge
cmp
dec
pop
mov
mov
cmp
xchg
test
or
mull
loope
pop
out
fsubrs
ljmp
clc
in
jmp
add
cmpsb
movsl
push
push
push
rolb
shl
sub
add
pop
mov
or
dec
mov
icebp
sub
out
test
mov
mov
sbb
add
rorb
fadd
dec
sti
test
es
jmp
mov
adc
nop
popa
or
stos
or
dec
test
aad
mov
xorl
ljmp
movsb
and
sahf
rcrb
sbb
dec
pop
or
add
std
mov
jae
fstps
pusha
idivb
pop
cmp
int
test
xchg
pop
push
dec
loop
leave
popa
jb
dec
xor
out
scas
jns
jmp
insl
sarl
and
into
mov
sub
pop
mov
pop
adc
shrl
scas
adc
cmp
fwait
jmp
cs
sub
data16
xchg
rolb
nop
cli
xchg
aad
push
cmp
push
int
popf
clc
es
jnp
in
and
mov
aad
inc
cmpsl
fidivrl
insb
addr16
std
jno
xchg
xlat
push
shlb
adc
mov
jnp
push
popf
loopne
and
lods
into
orl
sbb
test
inc
sti
xor
pushf
dec
xor
movsl
push
sub
mov
adc
pushw
stos
rcll
sbb
push
insl
fsubrl
mov
enter
enter
mov
lcall
xchg
pop
push
nop
or
repz
andl
leave
jae
call
outsb
std
lret
push
fsubr
jns
add
repz
lods
inc
sub
fwait
xchg
dec
mov
jae
pop
loopne
roll
sbb
stos
insb
dec
pop
or
lahf
jle
orb
faddp
outsl
das
jo
rorb
repz
sub
push
aas
pop
ds
dec
les
mov
sahf
bound
xor
lock
imul
out
add
testb
xchg
mov
movsb
push
xchg
inc
mov
test
and
rol
aaa
xchg
mov
fisubs
negl
add
pop
mov
xor
jno
ret
dec
fdivs
fnsave
inc
xchg
xchg
xchg
xor
xor
pop
pusha
xchg
push
rcrb
add
inc
addb
lea
cmpsl
into
jnp
ja
jecxz
fs
cli
pop
aaa
mov
xchg
cwtl
mov
mov
in
push
es
sub
test
std
mov
ret
sbb
lahf
mov
fildll
fwait
cmp
xchg
xor
xchg
divb
andb
sub
outsl
test
fidivl
mov
mov
sub
test
dec
loope
outsb
out
sub
pop
fwait
cmp
xor
stc
lret
lret
mov
mov
inc
daa
lds
in
mov
adc
adc
pop
rclb
cmp
mov
xchg
insb
cltd
fcomi
mov
mov
mov
xchg
stc
cli
test
int3
daa
scas
das
test
push
insl
sti
pop
xchg
jae
dec
sub
mov
imul
and
in
repz
mov
or
and
push
jl
cld
aas
cs
adc
std
inc
sbb
mov
mov
pop
arpl
and
shlb
lcall
add
sahf
add
rorb
lods
out
movsl
dec
pop
js
inc
sar
xor
loope
aam
dec
cmp
sbb
fs
test
dec
int3
int
jecxz
enter
lret
add
test
xor
or
stc
lcall
mov
sahf
mov
enter
mov
mov
sbb
xchg
cld
fmulp
jmp
dec
add
mov
mov
mov
int3
and
push
cmpsb
mov
subb
jno
push
sbb
ja
or
popa
mov
cli
adc
push
pop
fisttps
int
adc
inc
stc
add
pop
jno
leave
out
sub
sti
push
rcrl
pusha
push
insb
scas
add
test
je
and
rcll
adc
dec
jbe
js
xchg
dec
cwtl
push
add
mov
adc
sub
inc
add
cmp
adc
jl
add
adcb
mov
jecxz
arpl
and
inc
imul
jae
sub
cmp
fistpll
sarb
jno
jo
jle
cmpsl
push
inc
in
filds
and
imul
scas
dec
jp
in
jp
mov
and
cmpsb
mov
or
mov
mov
sub
stos
xchg
fstpl
into
jo
test
popf
insl
test
cli
mov
das
int3
push
push
cmp
inc
aam
sub
xchg
mov
je
mov
ret
cmp
cmp
into
fistps
jne
js
lods
in
sarl
orb
adc
scas
sub
dec
jmp
pusha
mov
sarl
imul
xchg
pop
sub
rol
les
jo
dec
inc
push
pop
bound
cmp
mov
aam
icebp
and
push
adc
lahf
mov
jle
xchg
adcb
loopne
pop
sub
inc
dec
push
ret
repz
negl
mov
sbb
lea
mov
jne
cmpsl
jo
add
xchg
cmp
dec
in
aas
mov
xlat
xor
adc
test
or
into
mov
sbb
or
jecxz
clc
fcoms
les
sbb
sbb
mov
jecxz
js
pusha
push
mov
jmp
shlb
jbe
gs
adc
orb
jl
stos
add
subb
je
push
cmp
lcall
inc
fpatan
push
push
adc
or
mov
sub
ljmp
shll
mov
jl
sbb
fwait
pop
jno
cmpsb
push
or
mov
push
push
push
dec
dec
cltd
jnp
mov
mov
stos
inc
push
mov
lea
rorl
aaa
push
xlat
pop
mov
push
mov
mov
xchg
mov
jbe
jno
jno
cmp
sbb
jg
cli
adc
mov
jecxz
push
lahf
dec
pop
stc
out
imull
fdivrs
arpl
fwait
out
jle
push
fistpll
ficompl
adc
addr16
xchg
jo
inc
hlt
add
les
pop
push
xor
mov
testl
mov
in
lods
mov
xor
inc
shr
test
inc
inc
push
xchg
outsl
pop
pop
stc
sbb
addr16
cmp
jo
lret
push
or
mov
test
test
push
jne
add
cmp
dec
dec
or
scas
cmp
mov
add
pop
sbb
andb
fsts
jns
icebp
push
and
sub
push
test
jmp
sub
sub
ret
xchg
push
and
and
shl
mov
mov
xor
hlt
jb
xor
inc
daa
jecxz
imul
or
orb
sbbb
sbb
testl
movsb
sahf
add
test
sub
mov
fcoms
or
stc
sbb
data16
cmpsb
fbld
add
jmp
js
hlt
cmpb
ds
out
push
pushf
mov
vaddss
push
and
or
xchg
push
push
jecxz
add
mov
push
add
mov
ja
jae
push
push
pop
pop
dec
and
jno
and
fld
xchg
and
jle
dec
sti
xchg
cmc
ficoml
sti
pop
les
mov
and
mov
cmp
rclb
pop
jb
ds
ja
imul
jb
mov
sub
sub
pop
jmp
test
jnp
pushf
add
pop
hlt
mov
cwtl
fnstcw
and
gs
jne
cmp
mov
bound
cmpsl
mov
jmp
pushf
mov
fstpt
sarl
sub
push
repz
and
xchg
cwtl
out
pop
push
push
out
xchg
lret
in
dec
cmp
xor
std
lock
xchg
std
push
inc
xchg
and
sbb
dec
add
aaa
dec
rolb
add
scas
or
mov
jnp
inc
dec
jnp
cmp
mov
adc
sti
inc
jb
outsl
jp
add
fdivs
xor
mov
sbb
push
sbb
out
cmp
add
mov
cmp
inc
es
cmpsl
mov
mov
lods
mov
scas
cmp
push
dec
test
inc
push
mov
pop
inc
fcmovbe
cmp
mov
test
mov
out
mov
xor
inc
sub
int
and
sbb
aad
sub
scas
cmp
pushf
es
sbb
fsubp
and
xchg
mov
es
mov
jge
iret
ljmp
and
jl
xor
ret
sub
pusha
das
cmp
gs
iret
insb
push
mov
pop
inc
sarl
sbb
sbb
ljmp
outsl
repz
dec
out
xchg
test
mov
enter
stc
and
std
jbe
sbb
das
fwait
shrb
pop
sub
pop
pop
sbb
dec
or
popa
lods
fsts
mov
aas
and
mov
add
adc
pop
jns
adc
loop
and
push
pop
cwtl
clc
int3
mov
lods
mov
sbb
mov
icebp
or
cld
daa
xchg
stos
movsl
sbb
cvtpi2ps
movsl
lea
leave
fwait
sbb
popa
ss
adc
adc
push
je
push
and
shll
mov
jl
add
inc
clc
lea
jo
div
mov
lods
nop
inc
stc
testb
mov
iret
orl
imul
jb
pushf
sti
jo
pop
rorl
adc
jle
dec
es
arpl
insb
arpl
das
inc
sti
push
loope
lret
cltd
adc
aas
repnz
mulb
lock
out
dec
test
idivl
pop
bound
mov
push
call
in
adc
add
xchg
jmp
inc
imulb
aam
jecxz
in
sub
dec
lret
lret
xchg
mov
rcrl
add
lahf
jae
cld
inc
jecxz
fs
js
jge
mov
leave
or
ror
imul
aaa
xor
inc
fcoms
inc
add
subb
repz
lods
push
jne
scas
lods
lahf
mov
cmc
and
jbe
sub
loop
or
pop
out
jb
jl
cmc
pop
popa
cmp
and
push
ds
inc
mov
pusha
gs
fdivr
xchg
jne
rclb
pusha
les
mov
lret
adc
stos
iret
stos
orb
loop
imul
scas
cltd
ret
cwtl
stos
fidivl
fcmovu
xor
sbb
xchg
sub
dec
sub
inc
pop
sub
mov
mov
xchg
shlb
inc
stos
shl
sub
mov
orl
inc
iret
ret
clc
stos
hlt
lret
lret
mov
jnp
sbb
mov
xor
or
repnz
es
push
and
push
add
fcomps
scas
mov
stos
scas
dec
test
adc
xor
bound
mov
loopne
cli
mov
cmp
pop
xchg
sub
outsb
sub
add
push
aas
inc
push
leave
cli
inc
cli
adc
les
xor
adc
add
lods
repnz
aam
aaa
and
pop
icebp
cmp
out
pop
arpl
ljmp
aaa
scas
pop
inc
xchg
les
sub
dec
mov
jmp
or
mov
sub
inc
iret
fnstsw
fs
cmp
movsb
pusha
fcomp
pop
mov
xchg
lahf
divb
sbb
in
sbb
sbb
shlb
jne
adc
cmp
stc
mov
push
call
test
ja
xor
and
jnp
sub
ja
jns
insl
or
fs
cld
shll
mov
cwtl
add
xor
dec
jne
pop
jne
popf
push
imul
cs
in
and
nop
sbb
lods
addl
cltd
mov
movsl
mov
add
adc
sbb
inc
js
cli
cmp
xchg
or
fstl
cmp
xchg
iret
shlb
adc
mov
out
das
inc
out
jg
dec
and
lods
pushf
inc
in
pop
pop
in
xor
pop
js
gs
call
cmp
adc
outsl
fisttpll
in
and
sub
lret
lret
scas
xchg
lea
in
adc
mov
xor
fdivrl
sbb
fs
out
repnz
in
pop
pop
fldl
cltd
xchg
and
jecxz
adc
sbb
jle
scas
or
push
rorb
adc
and
xlat
xchg
in
or
mov
or
nop
cmp
adc
stos
call
int
leave
xchg
jle
hlt
xor
inc
cli
aad
pop
fdivrs
je
or
enterw
add
pop
pop
pop
mov
fisubl
call
ret
xor
jns
sub
call
cmp
outsb
cmp
into
adc
dec
mov
dec
leave
fstps
fsubr
and
push
in
adc
les
cmp
jl
push
mov
clc
jb
fildl
push
sbb
adc
pop
jp
out
das
repz
aaa
jno
push
mov
fwait
sub
cmovp
push
xchg
pop
xchg
test
std
shrl
lahf
cld
sbb
mov
fsubrl
or
pushf
daa
es
add
addr16
lret
rcr
repnz
aad
or
and
add
insl
or
xor
adc
dec
xchg
sbb
cmp
dec
sti
inc
movsb
mov
lock
xor
lret
pop
push
test
or
cmpsl
cs
incb
cltd
pop
stos
cld
adc
das
xor
loope
dec
lret
inc
shlb
call
mov
push
fwait
mov
hlt
pushf
inc
popf
daa
add
add
movl
aaa
fcompl
xor
or
fisubs
push
xor
cmc
pop
insb
sub
outsl
call
shl
cmp
stc
lea
movsl
inc
fisttpl
or
loope
pushf
push
or
cmp
cmpsl
inc
call
or
cmp
imul
sar
sbb
mov
pusha
cmp
or
xor
dec
push
sbb
stos
dec
sbb
mov
pop
bound
inc
xchg
xor
ds
xor
lock
sub
push
pop
mov
shrl
js
int3
jnp
xor
repz
xchg
dec
push
xchg
ljmp
add
cmp
and
scas
lods
and
push
pop
xchg
popa
pusha
sub
cmp
std
and
iret
loopne
mov
fiaddl
outsl
adc
rcl
cwtl
lcall
mov
dec
movsl
movl
cmp
xor
pop
mov
mov
fcom
xor
loop
xchg
sbb
je
jle
xor
shl
inc
mov
and
sub
xor
sti
shrb
ss
cwtl
jno
sub
jns
sti
mov
cli
push
inc
mov
xchg
shrb
dec
pop
mov
pop
test
out
push
repnz
dec
mov
adc
jne
and
fimuls
out
pop
sub
out
pop
and
or
pop
cmc
or
inc
xor
and
and
xor
aaa
or
stos
cmp
int
jne
bound
testb
jne
arpl
jo
pop
mov
mov
into
xchg
mov
arpl
sub
arpl
mov
inc
sbb
and
mov
jno
dec
inc
sbb
or
xor
je
cmp
dec
xchg
je
insl
scas
stos
lcall
popa
imul
push
inc
loop
dec
sbb
outsb
push
xor
adc
test
insl
in
adc
stos
out
xchg
scas
pop
daa
mov
push
in
mov
or
cmp
pushf
or
cs
jb
lcall
lahf
mov
fnsave
add
xor
ficompl
jle
sbb
jl
xchg
ss
cld
jmp
xlat
mov
adc
push
rcrb
and
lds
cmp
rolb
test
call
aam
aad
adc
inc
sbb
jae
jae
jg
ds
mov
leave
xchg
pop
mov
pop
add
es
js
xchg
clc
xchg
mov
les
pushf
jecxz
sbb
add
cmp
add
xchg
ss
arpl
sahf
cmpsl
in
movsl
jno
bound
pop
loopne
inc
push
sbb
idivb
sub
ljmp
out
inc
das
mov
cmpsl
fwait
dec
jbe
test
add
or
lret
lahf
imul
pop
dec
sbb
test
inc
xor
mull
aad
movsl
lock
test
jl
mov
rcll
addr16
addr16
jg
xor
jle
clc
cmp
xchg
xor
mov
rcll
ja
adc
xor
push
xchg
jno
cmp
pop
mov
sahf
pop
mov
mov
lods
les
xchg
loopne
decl
fildll
dec
add
xchg
sbb
stos
arpl
xchg
lret
push
inc
jp
sbb
and
sti
enter
and
call
cwtl
jno
outsb
mov
leave
je
mov
adc
out
mov
jae
leave
push
test
push
push
es
inc
xor
mov
mov
pop
outsl
popa
in
push
cmp
pop
mov
stos
ds
sub
aaa
lret
add
push
adc
mov
loope
outsl
cmp
mov
mov
inc
fistpl
cld
popa
adc
mov
mov
jp
in
and
outsb
pop
jno
jo
lcall
and
inc
out
mov
inc
scas
ret
adc
cld
push
push
shr
sub
sbb
cmp
rcrl
clc
outsb
add
fnsave
scas
sub
xlat
mov
inc
inc
push
stos
push
icebp
repz
mov
leave
bound
cli
or
cmp
adc
or
add
add
inc
int3
fmuls
shr
sti
js
sbb
mov
sub
fdivp
sti
mov
or
out
mov
add
dec
ja
push
das
pushf
imul
jecxz
setne
xor
pop
push
mov
cmp
ds
jmp
or
and
cld
push
cmp
pop
push
pop
insb
test
jo
jmp
push
jecxz
mov
jecxz
and
jo
testb
adc
cmpsb
pop
subb
fimuls
mov
jo
dec
lods
add
inc
mov
jnp
adc
fisubrl
lock
or
pusha
outsl
sub
jne
ret
ret
iret
jne
rolb
inc
jnp
not
test
lods
loop
test
cwtl
or
pop
sbb
xor
jo
mov
lea
fwait
xor
mov
adc
inc
jecxz
xchg
out
call
and
cltd
js
negb
pop
dec
pop
xor
divl
movsb
repz
pusha
fdivs
loope
sbb
in
imul
and
ss
jbe
jp
int
sbb
sbb
push
adcl
repnz
push
xor
or
lods
jge
or
push
mov
or
out
fdiv
out
dec
cmp
inc
push
popf
das
sti
ficomps
orl
sub
in
push
mov
into
push
mov
rolb
sub
icebp
jl
sub
daa
daa
adc
inc
lods
xchg
mov
lods
sub
adc
mov
movsl
lret
fsubl
fwait
aad
cmp
mov
mov
mov
call
cmpsb
jg
rcrl
lahf
mov
outsb
outsb
mov
ret
js
mov
fisttpl
dec
push
lock
mov
push
movl
sbb
pop
stos
jno
icebp
mov
adc
imul
add
sbb
or
aaa
dec
call
dec
dec
ret
adc
movsb
adc
das
clc
and
lds
mov
lret
jnp
mov
jge
adc
andb
lods
jle
je
xchg
subb
cs
or
lock
add
lods
add
in
mov
push
cmp
popf
inc
test
jge
mov
fidivl
arpl
data16
cmp
mov
or
cmp
sub
jb
xchg
cmp
add
fisubrl
in
cmp
repnz
cmpsb
movl
and
xchg
xchg
dec
xor
gs
xor
sub
out
mov
jbe
sbb
lods
fidivl
leave
imul
inc
fistps
mov
rcr
xchg
xchg
lcall
shl
in
add
mov
mov
dec
jns
cmpsl
and
xchg
pop
insb
jge
cs
out
jnp
mov
rclb
and
sub
mov
jnp
negb
xor
iret
call
mov
aas
sbb
and
or
insl
pop
lret
das
test
xchg
mov
mov
insb
adc
xchg
cld
lods
mov
test
push
stos
mov
test
movsb
push
les
movsb
int
xchg
or
pop
add
adc
gs
movaps
adc
sub
lods
scas
or
mov
mov
scas
out
add
dec
aaa
pop
mov
cbtw
mov
inc
fs
out
cmpsb
imul
stos
jmp
mov
aad
daa
lcall
mov
or
daa
data16
fdivs
sub
out
nop
cmp
insb
xchg
stc
stos
sbb
ret
adc
xchg
cmp
xchg
jmp
mov
jns
roll
loop
xor
popf
dec
xlat
nop
imul
push
es
push
pop
je
push
dec
lods
jl
xchg
xor
imul
mov
sbb
inc
daa
sbb
pop
fcmovnu
aam
mov
ds
gs
lret
insb
jg
and
adc
jbe
and
cmp
sarl
jg
leave
mov
out
mov
dec
test
incb
fs
call
test
ret
mov
mov
loope
cltd
sub
les
push
inc
lock
fnstenv
lea
jmp
mov
stos
out
ret
sub
pop
loop
xchg
jmp
mov
adc
mov
push
mov
scas
icebp
inc
loop
aas
pop
std
out
shrl
mov
mov
iret
mov
xchg
test
and
pop
jecxz
xchg
cmp
and
hlt
in
gs
push
notl
stc
mov
inc
mov
add
inc
push
test
jge
pop
mov
je
jmp
out
cmp
inc
mov
lahf
jge
stc
cmpsl
mov
cmp
pop
sahf
das
pavgb
idivl
xlat
aas
ror
push
stc
call
sbb
adc
pushf
cmp
imul
xchg
sbbb
imul
jmp
mov
pop
rcll
dec
add
jnp
cld
shll
pusha
aad
out
in
lret
push
sti
xor
imul
inc
mov
out
adc
or
pushf
pusha
xor
xchg
sahf
aam
scas
cld
cmc
loopne
xlat
xor
add
pop
dec
into
cmp
add
mov
test
cs
mov
addl
mov
in
ss
pop
mov
imul
inc
sbb
mov
lods
mov
addr16
mov
xchg
jg
sbb
cltd
and
loop
adc
xor
daa
and
cwtl
in
lock
adc
nop
mov
mov
dec
or
dec
jge
add
add
aaa
xchg
cmp
ret
pop
adc
lret
jg
push
fcom
ljmp
stc
cli
cs
test
rcll
sub
inc
inc
sbb
in
movsl
jb
loop,pn
inc
jge
lret
mov
mov
sub
dec
cmp
push
xor
pop
leave
neg
aad
mov
mov
adc
in
out
popf
mov
lods
daa
inc
jp
popa
cmpsl
mov
sbb
popa
sbb
enter
loop
adc
push
adcl
mov
push
add
push
inc
lret
stos
jbe
fcoml
pop
jecxz
ja
jge
pusha
and
ja
inc
mov
pop
adc
mov
or
mov
lret
lods
mov
icebp
xchg
repnz
aas
xor
in
jp
mov
lcall
xchg
gs
sub
lds
loope
push
lret
dec
test
mov
push
ficomps
cltd
jle
adc
daa
cmpsb
mov
std
stos
shl
out
ret
pop
xchg
popf
ljmp
xor
ret
lahf
dec
call
adc
iret
ja
jb
mov
jle
jecxz
push
xlat
aad
inc
dec
pop
push
pop
push
aad
das
repnz
icebp
pop
gs
rcrb
scas
aad
push
add
fwait
mov
xchg
jl
outsb
mov
cmpsb
pop
aas
pop
in
jb
pop
dec
lods
dec
dec
cmp
mov
imul
pop
push
cli
rcl
popf
and
adc
or
ja
je
mov
cmp
test
clc
sbb
add
movsl
mov
repnz
aam
pop
pmulhuw
jecxz
cmp
not
jb
ret
adc
aaa
or
inc
add
sub
mov
rol
xchg
xor
lods
push
jno
imul
das
pop
scas
sbb
ljmp
or
fcompl
mov
out
addl
int
cmp
mov
push
outsb
fidivl
sub
mov
cmp
popa
out
movzwl
loope
add
in
sub
inc
outsb
std
int3
es
into
dec
sbbb
push
and
cmpsb
dec
les
leave
jecxz
dec
xor
data16
pop
pop
ret
fisubrs
mov
leave
jl
cmp
mov
dec
or
inc
xchg
dec
ds
cmc
andb
cmp
push
repnz
cmp
ds
sarb
sti
xorl
mov
in
dec
xchg
jo
xchg
cld
mov
xor
add
xlat
xchg
cwtl
ljmp
push
sar
sub
adc
aad
insb
xor
pop
lcall
push
and
cmp
pop
jecxz
out
jae
mov
aam
test
aas
hlt
cmp
ds
hlt
lret
pusha
hlt
jmp
ret
test
xchg
ret
popa
add
mov
loopne
jg
xor
or
andl
sub
jg
rol
aaa
mov
xchg
cmp
pop
out
scas
adc
test
mov
cmp
inc
stc
add
sub
mov
iret
into
cmpl
add
cmpsw
mov
fcoml
je
popf
sub
sub
xor
lcall
mov
mov
adc
dec
sbb
add
not
sahf
mov
int3
adc
addr16
call
enter
mov
cmc
dec
mov
ret
fcoms
lahf
xchg
repnz
and
xor
adc
loopne
sub
jg
cmc
push
les
fxch
hlt
mov
lods
enter
mov
add
jno
dec
inc
cli
inc
rorb
ja
sbb
add
or
into
in
popf
push
pop
cmp
adc
lods
mov
mov
sti
mov
enter
ret
sbbl
pusha
adc
aad
ret
dec
dec
mov
mov
out
test
mov
scas
lock
xorl
ja
gs
int3
mov
cmp
ret
jne
jo
cmp
mov
dec
push
nop
adc
call
push
into
adc
dec
adc
mov
pop
pop
cmpsl
sub
pushf
rorb
adc
mov
jo
insb
cld
loop
mov
daa
mov
int
outsb
jg
out
jge
and
loopne
xlat
or
sbb
sbb
outsb
mov
addr16
js
out
addr16
es
popa
fbld
or
test
popa
dec
xchg
sub
jl
loope
bound
aaa
mov
aam
mov
mov
mov
pop
jno
call
jno
sub
xor
or
push
fsubrl
push
fnstsw
test
or
sti
adc
stos
pop
test
shr
mov
pop
movsb
pushf
fsubl
mov
and
dec
loop
iret
jmp
add
aad
and
stc
add
loop
mov
popf
sub
inc
daa
add
lds
adc
inc
pushl
pop
daa
pop
and
sbb
out
movl
shlb
xchg
and
mov
sub
lahf
jmp
adcb
mov
jne
out
gs
jnp
dec
icebp
repz
shl
mov
loope
gs
icebp
lcall
cltd
lcall
stc
adc
outsl
dec
mov
add
iret
out
xorl
push
fwait
aaa
cmp
mulb
sub
loop
add
dec
cmpsl
out
sarb
add
or
shrb
negl
out
stc
adc
scas
pop
mov
imul
decb
outsb
or
sub
xchg
les
jbe
xchg
jnp
gs
mov
shr
inc
ficompl
scas
inc
jnp
jne
addr16
dec
mov
sub
mov
cmp
xchg
dec
cmp
daa
pop
cmp
pop
pop
test
mov
aaa
push
int
mov
sbb
xchg
inc
jg
sbb
test
test
sbb
sub
shr
mov
and
jae
das
sbb
xchg
sbb
fwait
sub
in
sub
lret
in
sbb
mov
out
cli
fnsave
inc
aad
popa
scas
inc
jl
dec
xchg
push
arpl
jb
pop
or
imul
jecxz
mov
jl
into
mov
add
popf
mov
xor
mov
mov
xchg
cmp
imul
inc
insl
stos
mov
jl
xorl
es
push
fwait
sub
mov
ficomps
in
clc
insb
fdivp
inc
adc
mov
stos
nop
fabs
xchg
cmp
insl
addb
test
pop
inc
ret
leave
inc
gs
mov
pop
cmp
shll
or
hlt
call
jl
arpl
loope
aas
mull
pop
fiadds
mov
ret
leave
pop
jle
mov
xchg
sub
popa
jns
sub
imul
xchg
cmc
mov
cmpsb
or
in
push
jle
mov
mov
jae
inc
cs
mov
imul
loope
not
popa
sub
loop
out
js
adc
dec
test
xchg
mov
std
dec
inc
int3
jns
lods
imul
imul
out
or
iret
sub
data16
pop
std
popf
sbb
fisttpl
mov
push
aad
jecxz
lock
mov
insl
mov
popa
leave
mov
jge
ret
push
and
push
push
cmp
in
lods
imul
clc
adc
jo
inc
mov
jne
loope
jns
add
sti
lcall
inc
outsb
imul
popl
add
mov
and
mov
add
dec
loop
push
or
xchg
mov
xor
sahf
outsl
cmp
mov
ret
mov
lds
in
stc
xor
inc
popf
and
sub
cmp
add
jg
jne
shlb
scas
sub
fsubl
jmp
int3
mov
hlt
aaa
mov
js
add
push
and
test
arpl
jg
pop
or
pop
mov
iret
mov
adcb
push
popa
mov
mov
in
popaw
sub
mov
jmp
jp,pn
xchg
out
dec
aas
dec
imull
or
arpl
pop
cltd
enter
adc
int
sub
sbb
add
mov
add
mov
lahf
sbb
stc
pusha
mov
in
xchg
push
mov
out
mov
das
pop
fimuls
lret
xchg
xor
dec
out
add
jo
popa
mov
jns
push
xchg
pop
xlat
push
out
es
je
pop
sub
inc
dec
jge
jp
fdivr
aam
mov
jge
outsb
cmp
cltd
sbb
push
adc
test
das
stos
mov
ret
in
aam
pop
lar
mov
int3
or
xchg
rsm
das
dec
cmc
aas
push
push
test
test
insb
outsb
sub
movsb
xlat
cmc
adc
mov
cmc
outsb
push
xchg
push
cli
inc
cmp
movsl
ret
xor
pop
push
cmp
popa
fwait
cmc
pop
push
or
fdivrp
outsb
stc
cmp
test
or
inc
push
insl
stos
adc
leave
cmpsb
scas
lds
jp
stc
lahf
or
sahf
dec
mov
iret
inc
add
out
lret
mov
mov
add
dec
cmp
cmpl
dec
xchg
shlb
jnp
lahf
mov
mov
gs
push
out
and
mov
lcall
dec
lds
pusha
insl
cs
stos
out
fs
mov
shlb
mov
xchg
and
pop
mov
call
jp
or
push
xchg
fs
mov
ds
or
mov
movsl
or
jbe
and
jg
mov
stos
test
or
sbb
mov
or
inc
mov
sbb
cmp
out
mov
aad
ret
cltd
adc
mov
data16
pop
das
out
mov
mov
fcoml
lods
andl
cltd
inc
orl
enter
outsb
bound
or
push
aaa
call
loopne
sbb
das
iret
push
lret
aas
push
aas
outsl
xor
add
lret
or
cmpsb
push
xchg
sahf
mov
xlat
popa
push
lar
in
push
adc
mul
adc
inc
stos
sbb
cmpsl
je
lcall
push
cwtl
je
xor
sub
jl
das
xchg
sbb
out
inc
pop
inc
cmp
orl
push
out
call
test
or
mov
sbb
pop
dec
mov
fdivr
inc
stos
pop
inc
test
jmp
ret
or
test
fwait
jge
adc
stc
push
adc
cli
jae
cmp
fcmovnb
test
cld
cmp
mov
mov
inc
jecxz
push
cs
push
leave
aad
inc
cwtl
and
iret
mov
stos
xchg
sbb
out
push
push
and
inc
popa
push
nop
in
inc
icebp
xor
lea
and
pop
cmpsl
ret
add
enter
repz
mov
sti
sub
sbb
aaa
imull
ret
xor
fildll
sahf
insl
xor
cmc
lods
fsubrs
loop
cld
jns
sub
std
insb
pushf
or
pop
mov
cmp
xor
push
inc
repnz
dec
das
dec
sti
xchg
xchg
jbe
mov
jnp
push
cmp
cmc
testb
sbb
dec
dec
xchg
push
dec
pop
adc
adc
outsb
cltd
adc
xchg
nop
dec
adc
inc
dec
xlat
outsl
imul
xchg
jb
cmpb
xchg
lahf
cmp
add
mov
inc
icebp
ja
pop
mov
test
popf
mov
mov
cs
cmp
fs
jp
lret
nop
popf
mov
mov
mov
jno
jo
pop
add
sbb
out
int3
mov
xchg
push
or
jne
gs
mov
daa
mov
mov
mov
popa
xor
pop
stos
sti
push
stos
dec
and
cwtl
sbb
test
or
sbb
mov
cmp
rol
push
shll
sbb
pop
push
call
and
lcall
mov
cli
cmp
dec
outsb
jo
xor
leave
pop
vpcmpeqd
ret
repnz
mov
je
and
lret
fidivrl
xchg
xchg
push
cs
xchg
adc
xor
addr16
jl
mov
cwtl
mov
ds
imul
ljmp
add
pop
jae
add
cmp
out
enter
cli
out
dec
clc
push
addr16
xor
ljmp
adc
fidivl
inc
dec
popa
adc
push
mov
mov
sub
jge
lcall
jae
inc
cmc
test
jno
incl
push
pop
push
ret
test
pand
push
push
lock
dec
push
jo
test
test
mov
ljmp
into
adc
leave
mov
mov
inc
movsl
cmpsl
pop
hlt
stc
push
sbb
in
je
lds
sahf
cmpsb
loopne
dec
out
lahf
fnstcw
jmp
or
mov
and
shl
nop
scas
xlat
inc
mov
fs
enter
and
dec
or
cmc
mov
jno
cltd
mov
or
out
lods
int3
inc
jecxz
dec
inc
sub
insl
or
push
adc
inc
aaa
push
mov
ret
xor
add
cwtl
cltd
mov
push
mov
xchg
mull
sar
and
cld
inc
iret
mov
popa
pop
pop
lret
movsb
push
lods
inc
sbb
and
je
add
mov
je
fstpt
cmp
dec
repnz
mov
test
sarl
add
fiadds
sub
mov
add
inc
xchg
addb
and
pop
aas
cld
dec
jb
sub
outsl
mov
add
inc
push
jnp
xchg
and
popa
mov
sbb
pushf
add
or
push
in
je
add
cmp
ja
cmp
inc
andl
stc
fdivrs
dec
shll
mov
es
push
sbb
jle
leave
shll
sub
fldenv
test
ja
push
cmpsb
mov
adc
in
pop
into
shll
test
jp
jecxz
in
mov
sub
xchg
fdivs
mov
scas
mov
adc
in
pop
xor
mov
std
pop
dec
inc
pusha
test
and
sbb
fsubrs
sub
add
stos
xchg
daa
jle
push
mov
shl
mov
xor
add
movsl
stos
fsubl
add
leave
jbe
adc
fmuls
ljmp
xchg
and
sub
sbb
or
out
xchg
pop
mov
fistps
cmp
lahf
mov
push
and
scas
cmpsl
call
sub
inc
cmp
jb
adc
movl
inc
jbe
dec
jnp
jb
mov
xchg
dec
xor
mov
sub
std
popf
inc
incb
sub
jecxz
xchg
dec
test
fcompl
jmp
mov
cmc
aam
cmp
fstl
or
adc
lds
idivl
push
and
scas
movsb
les
dec
cmp
hlt
xor
push
addr16
das
mov
jns
jbe
xchg
add
dec
cwtl
sbb
sub
in
sub
pop
mov
fnsave
cmp
dec
shr
adc
mov
je
inc
add
jle
adc
xchg
push
mov
stos
mov
push
jge
insb
mov
mov
scas
lods
ror
jg
sahf
fisubrs
shlb
in
repnz
nop
mov
sarl
dec
mul
and
adc
call
loopne
insb
outsb
je
mov
mov
mov
mov
lret
sub
pop
xchg
pop
inc
xchg
enter
push
or
iret
push
fs
sbb
data16
nop
lea
iret
int
push
push
int
mov
dec
xchg
xchg
loope
shlb
dec
repz
jo
out
test
push
mov
pop
lret
lret
loope
rcrl
cmpsl
xchg
or
or
fs
inc
mov
push
push
in
xor
sbb
jge
loop
xchg
pop
mov
push
or
and
sbb
rcrb
adc
push
adc
fucomp
subps
cld
inc
popf
sub
jmp
mov
xor
dec
sub
ss
rolb
pop
xchg
mov
mov
loop
fistpl
insb
jb
or
test
cs
scas
push
hlt
inc
arpl
loope
pushf
int
repz
loopnew
mov
push
ss
inc
adc
jle
sbbb
mov
pop
pop
outsl
fdivp
mul
adcl
sub
sbb
shlb
mov
adc
jns
push
aad
push
mov
xchg
xor
push
cltd
lods
leave
bound
push
jo
cmp
or
aad
or
outsb
in
dec
mov
jmp
mov
push
js
cmp
dec
out
in
jl
pushf
jmp
rcr
mov
and
xchg
int
xor
cltd
mov
lcall
xor
jmp
movsl
inc
sub
mov
jb
pop
dec
pop
mov
xor
shlb
pop
add
push
movsl
add
fisttpll
out
or
daa
sub
rolb
aad
push
push
test
fadds
daa
rorb
aad
adc
cmpsl
rcr
roll
test
xor
adcb
test
loop
icebp
clc
or
jb
adc
jl
cmp
push
rcrb
clc
xchg
repz
jl
cs
loop
adc
lret
push
gs
and
int
mov
test
pop
lahf
pop
ss
lcall
rcrb
ja
out
je
jnp
inc
sub
and
push
jnp
loop
fcmovu
loop
addr16
js
cltd
and
push
dec
sub
roll
mov
movsl
mov
std
fistl
ja
mov
fcompp
je
and
lods
fcoml
mov
ret
jnp
mov
mov
mov
cs
xchg
adc
imul
mov
sbb
jp
lds
int3
neg
clc
inc
pop
aaa
or
or
cmp
push
mov
pop
mov
pop
pop
jl
aam
sub
call
adc
push
daa
adc
xchg
out
xchg
ret
cmp
jns
xor
xor
jne
and
sbb
mov
and
sbb
jns
in
jno
outsb
dec
punpcklbw
mov
ja
sti
mov
enter
add
dec
lret
push
fadds
or
cmp
lea
mov
call
test
in
xorb
loope
mov
test
mov
sub
stc
push
adc
sub
imul
or
push
imul
and
cs
lea
mov
repz
adc
mov
test
pop
fbld
mov
fiadds
cmp
lahf
es
rorb
sub
push
xchg
mov
sub
loopne
cmp
aad
xor
dec
and
push
xor
fnop
icebp
adc
mov
push
dec
push
and
xchg
or
lea
lcall
test
out
cmc
adc
pushf
sub
ret
sar
mov
aad
xchg
rclb
rorb
out
jae
jne
lahf
movsb
and
test
xchg
scas
mov
sbb
js
adc
ss
scas
lods
lock
inc
or
adc
xchg
push
nop
gs
cmp
xchg
push
mov
rcrb
out
xchg
test
pop
and
shll
adc
arpl
repnz
in
sbb
push
fnop
inc
mov
aas
cmp
aas
cs
je
push
add
inc
test
lret
test
dec
fisubs
push
cmp
pop
bound
dec
lcall
lods
data16
in
test
pop
mov
adc
and
mov
loope
or
or
jecxz
lds
inc
arpl
and
int3
add
jns
sub
cmpsl
xor
push
push
scas
jno
push
repz
xchg
pop
js
and
mov
mov
lret
out
pop
and
add
adc
mull
lock
xor
push
inc
sahf
and
cmp
into
je
mov
pop
mov
mov
dec
leave
or
pop
outsb
clc
es
jl
test
cmpsl
insb
jge
jp
mov
in
sub
ficoml
push
adc
fs
cwtl
sbb
push
pushf
scas
pusha
xchg
sti
hlt
push
cmp
mov
outsb
mov
sbb
dec
mov
idivl
cmp
lahf
adc
andb
je
push
mov
hlt
lods
jg
jns
or
sub
jp
mov
jmp
mov
dec
push
cltd
cmp
dec
ss
jg
sbb
push
bound
pop
add
jmp
inc
mov
stos
testb
jne
cld
jecxz
in
pop
mov
fcomps
add
mov
loope
xor
clc
cli
jae
js
out
pop
fsub
mov
lock
lret
cwtl
ret
insl
adc
sub
mov
fs
sbb
xchg
ja
daa
xchg
jmp
push
data16
pop
inc
iret
jno
fwait
nop
pop
dec
mov
mov
subl
fldcw
ljmp
cmp
imul
adc
inc
insl
push
pop
stos
add
cmpsb
mov
xchg
xchg
fldl2t
cmc
int3
xor
xchg
insb
cld
jmp
jno
hlt
mov
data16
lret
adc
ret
xchg
dec
vpsrad
int3
and
insl
jg
rcr
insb
lods
pushf
lods
xchg
xchg
push
lahf
data16
add
aam
cmp
xchg
or
lcall
xor
adc
sub
xchg
mov
icebp
mov
mov
mov
cwtl
pop
adc
out
and
xchg
in
add
jne
lahf
pop
mov
mov
rorb
mov
loope
mov
icebp
push
jmp
xchg
setg
sahf
xor
fs
sub
enter
sub
mov
test
and
and
add
fbstp
mov
icebp
movsl
sti
mov
sub
xor
and
push
sub
int
push
in
testl
adc
adc
cld
testb
fldt
or
not
lcall
scas
xchg
aaa
scas
andl
das
mov
dec
mov
inc
sbb
add
xchg
inc
clc
int
jae
jae
nop
cmpsl
adc
sub
adc
loopne
and
push
rorb
cmp
add
loop
jmp
loope
sbb
movsl
in
push
cwtl
mov
addl
fs
icebp
mov
dec
pop
jb
inc
jl
adc
mov
insl
mov
lock
inc
push
aad
xor
movsb
inc
dec
sbb
mov
addb
int3
and
in
mov
and
cltd
mov
mov
adc
mov
xchg
mov
aas
data16
push
dec
mov
fs
add
mov
hlt
cmp
sbb
int
pop
push
lcall
test
pop
sub
rcr
mov
inc
pop
bnd
adc
or
xchg
xchg
ret
shlb
inc
xchg
sub
adc
into
mov
lea
imul
mov
rclb
js
sarb
sub
mov
push
xor
in
adc
mov
pop
mov
mov
push
loope
mov
orl
adc
leave
int3
bound
cmp
xlat
imul
fimull
movsl
mov
or
cmpsb
jge
add
sub
sbb
push
testb
lea
dec
outsl
ret
imul
mov
push
pop
push
call
pop
push
jo
lcall
dec
pop
int
ds
sub
mov
and
xor
movsb
pop
test
mov
pushf
lahf
cmpsl
dec
xor
mov
mov
jmp
ret
repnz
xchg
pop
mov
ret
popa
in
movsl
push
mov
and
mov
push
mov
cld
insl
sub
dec
ds
mov
into
ret
out
movsb
daa
mov
sahf
push
push
stos
add
stos
sbbl
test
mov
in
stos
aad
mov
inc
lods
fwait
and
jns
pop
pop
dec
and
std
lret
sbb
out
xchg
mov
inc
clc
inc
cmp
push
insb
scas
in
call
sbb
sti
scas
repnz
ljmp
mov
adcb
dec
cld
xchg
test
orb
xor
lock
adc
push
lcall
push
movb
call
adc
mov
xor
push
iret
or
loope
adc
pushf
enter
insb
sub
cmovl
mov
fidivs
scas
nop
scas
pop
or
stos
pop
outsb
lahf
xor
jecxz
aas
hlt
popf
cmp
imul
adc
in
jb
push
cmpsb
das
dec
adc
inc
sbb
pop
ss
jno
scas
sbb
pop
pop
inc
cmpsl
js
cmp
out
cs
add
js
ljmp
into
jl
mov
ret
jae
xor
daa
or
push
int3
mov
or
mov
and
call
push
add
add
xchg
ret
fnstsw
sti
int
lret
outsb
xchg
rcll
repz
xchg
lcall
repnz
imul
cwtl
dec
or
int3
clc
in
in
xchg
fwait
mov
std
bound
outsl
pop
addr16
xor
loopne
pop
mov
xor
vpmacssdd
dec
adcl
gs
mov
xorl
fbstp
loop
jmp
and
fiadds
push
xchg
and
lock
bound
pop
pop
fwait
test
pusha
adc
sub
ror
cld
int
mov
mov
jae
out
sub
pop
loop
and
fs
inc
mov
dec
repz
rcrl
mov
cmpsb
testl
or
push
mov
inc
std
sbb
mov
or
js
cmp
xchg
test
jbe
jecxz
push
negb
jbe
clc
int3
xchg
sub
mov
pop
sub
xchg
cli
out
faddl
jae
sbb
or
pop
dec
cmc
paddd
mov
mov
push
mov
dec
xchg
mov
loop
adc
pop
inc
lds
dec
jle
jne
and
sbb
adc
push
aad
lock
out
xlat
jnp
sbb
outsl
cmp
aam
jle
sub
dec
ss
cwtl
dec
out
sbb
int3
into
sub
inc
mov
cmp
jl
dec
das
pop
sub
add
out
or
scas
jle
xchg
mov
and
icebp
pusha
adc
push
mov
stc
int3
loop
jno
or
dec
fs
mov
shll
pusha
hlt
add
inc
xor
push
popa
ljmp
enter
fs
and
jecxz
fsubs
ljmp
popf
add
jae
sub
adc
jo
sub
stos
popa
pop
cs
rolb
dec
loop
out
xchg
cmp
das
jo
nop
bound
cmp
out
mov
inc
lahf
sub
out
fs
inc
or
movsl
or
push
shlb
dec
cs
out
push
incb
inc
into
aam
movsb
call
testb
xor
sub
ret
mov
dec
xor
xlat
repnz
inc
int3
sub
loopne
insb
mov
jnp
iret
push
popa
js
xor
xor
add
xor
adc
lahf
sti
imul
and
and
lret
mov
xchg
shl
inc
and
ss
scas
dec
inc
cmp
sub
and
xchg
sub
cli
sbb
mov
xchg
mov
sub
and
dec
sub
mov
aam
dec
in
mov
rolb
or
mov
mov
adc
mov
and
ret
cs
jl
mov
sub
pop
jno
data16
jg
pushf
sarb
sub
lock
stos
add
mov
lea
adc
outsb
sub
add
nop
pop
push
pop
adc
add
dec
jo
sbb
xlat
inc
inc
in
sbb
movl
add
push
inc
dec
mov
test
mov
clc
cmp
sbb
pusha
cmpsl
mov
call
sbbl
and
lods
sub
popf
and
adc
push
or
lret
add
lods
dec
jne
jle
cltd
int
dec
dec
sub
mov
pop
nop
scas
lea
sbb
dec
pop
mov
dec
jne
icebp
inc
cmp
mov
rclb
mov
xchg
cmp
aaa
xchg
inc
or
or
test
xlat
jle
scas
adc
jp
xchg
or
cmpsb
cld
call
push
adc
pop
jl
cmp
pop
pop
aaa
sarl
adc
push
aas
adc
cmpsl
lods
lock
enter
adc
into
dec
cmp
imul
mov
jne
int3
and
inc
mov
mov
dec
stc
jl
xchg
jle
inc
outsb
jae
push
fs
int
sub
jp
clc
pop
in
addr16
jns
mov
sbb
push
mov
push
ficoms
std
adc
sbb
adc
or
xchg
imul
or
inc
ficoml
int3
cmpsl
xor
andb
jne
js
enter
dec
push
sub
fsubs
inc
add
aas
daa
adc
out
ret
sub
mov
mov
mul
pop
cld
pushw
jae
mov
add
call
jno
and
jmp
cmp
cmpsb
mov
sub
pop
and
jno
hlt
jmp
fstpl
mov
insl
pushl
call
call
and
mov
inc
and
popf
punpckhdq
jmp
jae
pop
pop
or
scas
inc
dec
divl
push
sbb
in
sub
pop
test
icebp
shlb
clc
sti
jp
adc
mov
jae
loopne
stos
or
sub
pop
mov
jl
push
mov
xlat
jp
dec
std
bound
mov
mov
lock
sub
jmp
fisttpll
dec
sbb
lds
sbb
popa
stos
pop
lret
in
xchg
add
cmp
add
mov
enter
or
jo
out
js
add
xor
ret
mov
add
jnp
jle
mov
push
icebp
clc
mov
mov
popf
test
lea
rcll
insl
icebp
sti
insl
jecxz
cld
cmp
cli
popf
imul
lock
pop
std
pop
push
add
pushf
repz
test
mov
sbb
mov
in
mov
mov
repz
out
clc
popf
cmp
jbe
popa
cmp
inc
adc
out
xchg
mov
std
inc
xchg
mov
push
pop
mov
mov
mov
loope
dec
dec
enter
pop
xor
mov
inc
notb
rcrb
fdivl
dec
mov
out
mov
lcall
call
ficoms
cld
sbb
dec
fsubrl
jge
pop
test
mov
addr16
lahf
divl
movsl
aad
lret
lds
loope
mov
dec
inc
movb
lret
or
and
insl
loop
mov
and
ss
mov
ret
mov
jecxz
xor
adc
fbstp
mov
cmp
mov
popf
or
leave
addr16
enter
icebp
out
inc
ljmp
xchg
mov
inc
inc
mov
mov
imul
insb
adc
lea
jecxz
leave
pop
test
in
cmp
shlb
aas
sub
add
sub
and
out
ja
xor
xor
out
scas
repnz
aam
ret
jp
aaa
das
filds
fistpl
cmp
push
mov
adc
mov
rcl
and
outsl
fidivs
test
xlat
pop
insb
std
mov
loopne
mov
or
scas
imul
fwait
mov
mov
mov
add
mov
sbb
adcl
pushf
lret
les
gs
enter
cmpsb
push
sub
out
dec
addr16
les
lods
cmp
dec
pop
int3
or
call
cltd
leave
jl
mov
cwtl
addr16
jb
and
mov
shl
pop
lods
inc
dec
clc
lret
mov
shll
ja
popf
and
stos
aas
cmp
mov
mov
xchg
add
rcll
aad
bound
stos
hlt
adc
dec
push
mov
hlt
push
call
in
adc
sub
or
and
mov
lods
pop
adc
ja
outsl
dec
inc
cld
push
flds
mov
aas
in
sbb
sti
pop
ds
fiaddl
xor
sub
inc
cmp
test
das
xchg
jnp
xor
loop
add
jp
xchg
ret
das
sahf
inc
insl
jae
push
push
push
and
das
arpl
sbb
push
stc
cmp
and
mul
int
scas
and
test
xchg
imul
rolb
pop
mov
cwtl
rolb
cmp
js
pop
push
ds
mov
nop
mov
jb
cmpsl
test
xchg
mov
pop
fistps
jnp
sub
dec
cmp
rolb
mov
das
das
sbb
nop
mov
imul
and
mov
sub
adc
adc
cmp
push
rcrl
mulb
flds
ja
jne
fcoms
mov
clc
movsb
cmpsb
push
cli
pop
push
cmp
mov
mov
test
inc
aaa
jle
stos
bound
leave
lahf
adc
test
push
cmp
mov
push
mov
sti
cmp
dec
int3
adc
movsb
lock
js
movsb
or
mov
mull
xchg
xor
stos
rcrb
xchg
sbb
push
add
mov
dec
pop
sbb
sub
mov
daa
push
xor
xchg
aaa
scas
test
sub
mov
mov
dec
inc
adc
outsl
arpl
mov
ret
jle
mov
jae
push
arpl
cmp
rolb
dec
in
fcompl
xlat
loop
mov
cmp
fdivrl
jbe
jmp
push
cmp
cltd
lcall
cli
mov
je
rol
and
loope
pop
mov
ret
lahf
cmpsw
pop
ja
movsb
ja
lds
scas
jae
inc
mov
jns
out
jo
movsl
negl
int3
jp
mov
out
dec
loope
push
popf
js,pn
int3
mov
dec
jno
movsb
pop
adc
mov
mov
scas
bound
pop
jle
push
jmp
mov
mov
xchg
xchg
inc
lds
push
sarb
fs
cmpsl
aad
fwait
in
cmpsb
stos
fnsave
cld
jl
mov
or
cli
mov
pop
pop
pop
test
or
inc
pop
rcrb
xchg
outsb
sub
pop
sub
leave
sbb
add
inc
lcall
push
pusha
cmp
test
fsub
dec
cmpsl
push
adc
dec
jbe
es
adc
jmp
xchg
out
xor
inc
sub
jmp
xchg
rcrl
pop
imulb
imul
add
mov
iret
mov
stos
mov
xchg
xchg
xor
mov
cmpsb
les
loope
cmc
xor
mov
cmp
mov
cli
or
sbb
aam
mov
fs
in
mov
shrb
mov
sub
pop
adc
and
cltd
mov
sti
lret
push
push
sub
scas
inc
add
adc
mov
gs
xchg
shr
jle
lret
mov
push
jmp
mov
insb
add
push
and
outsb
cmp
je
or
negl
mov
xlat
test
or
aaa
or
sbb
mov
int
sub
loopne
je
and
add
test
int3
in
mov
push
mov
js
jns
std
cld
cld
imul
cmp
mov
inc
clc
adc
mov
mov
jmp
push
inc
aad
mov
nop
adc
fs
lds
push
xadd
mov
fldcw
push
cs
daa
sbb
enter
mov
xchg
mov
daa
cmp
add
cli
dec
inc
xor
notl
push
add
icebp
je
subl
xchg
cmp
mov
push
rclb
cwtl
xor
scas
push
ss
and
add
mov
or
cwtl
lahf
out
jnp
add
sbb
and
mov
or
daa
jns
sti
repnz
or
xor
mov
pop
jmp
in
lock
jl
ret
xlat
test
std
dec
outsl
mov
pop
ljmp
shlb
xchg
dec
pusha
push
cmp
loopne
dec
mov
add
into
inc
lea
fs
and
mov
jno
inc
jp
xor
cmc
sbb
push
movsb
xchg
adc
jge
fdivl
jae
xchg
cmp
mov
push
ljmp
test
jae
jae
cld
and
push
enter
mov
ds
add
in
and
jg
lock
and
sub
jo
in
movsl
mov
lods
mov
nop
sbb
pop
inc
sbb
ss
add
leave
sbb
pop
xor
in
xor
inc
jns
mov
shl
jns
or
and
rcrl
pop
adc
leave
cmp
sarb
xchg
rolb
adc
cmc
adc
sub
out
addr16
and
adc
nop
iret
sub
test
dec
js
or
add
popa
sub
shrb
push
lahf
jae
and
scas
and
sub
into
push
outsl
adc
mov
je
cmp
pusha
addr16
fsin
iret
xchg
popf
xor
out
insb
mov
imul
test
inc
adc
pop
xchg
mov
movl
loop
movsl
outsl
dec
mov
ret
in
leave
outsb
push
shl
and
add
xor
xchg
test
iret
fstps
mov
fadds
jle
jae
scas
lea
leave
and
cli
jp
es
insb
loop
insb
push
adc
rolb
iret
out
jno
push
lcall
mov
xchg
mov
inc
jb
es
inc
jg
sbb
pop
cltd
gs
fld
mov
repz
xchg
and
and
mov
cld
and
pushl
push
leave
mov
xchg
adc
ret
mov
pusha
andl
ds
mov
shlb
pop
ss
mov
rolb
cmpsl
cmp
cmc
adc
les
lcall
pop
xor
sbb
fadd
call
imul
jno
mov
or
imul
mov
xor
mov
lahf
xchg
dec
jmp
stos
shl
jae
cs
jo
fldl
das
sbb
movsb
popf
sbb
pop
aaa
dec
fdiv
pop
sbb
xor
shll
mov
jbe
subb
and
xor
dec
mov
ljmp
sub
mov
mov
cmpb
add
mov
jb
xchg
or
insb
les
and
xor
adc
stos
divb
mov
jmp
fldl
cmp
js
dec
js
roll
movsl
into
pop
pop
cld
mov
iret
xlat
push
es
push
loope
or
scas
fimuls
jg
pop
js,pt
xchg
add
adc
test
imul
cmc
orl
sub
rcrl
scas
add
sub
cmpsb
cld
cltd
and
int
loope,pt
ret
fwait
sbb
jnp
stos
push
xor
loopne
pusha
adc
pop
sbb
pushf
push
test
jbe
jns
xlat
shrb
lock
adc
cs
push
addr16
jge
sub
jo
aam
pop
rolb
cmpsl
push
cmp
dec
sub
jae
loop
inc
cmp
loope
add
pop
outsl
scas
mov
pop
les
xor
jle
aam
push
add
lods
mov
addr16
in
lea
jnp
add
pop
icebp
mov
xchg
mov
repz
sbb
loop
orb
mov
popa
loop
adc
mov
mov
inc
mov
es
orl
outsl
cmpsl
jmp
idivl
icebp
add
imul
jl
pop
inc
lds
cmp
pop
insb
arpl
pop
call
popa
scas
test
iret
es
add
out
test
jns
lret
jp
jae
or
lods
mov
cs
sub
jl
push
and
add
and
fmul
push
ss
fdivs
sbb
lcall
int
xorb
jno
lea
sbb
and
loope
shll
add
cmp
dec
cmc
cmp
clc
shll
insl
addb
inc
sub
repz
rol
shll
imul
xlat
out
adc
or
insl
insb
mov
cmpb
fsubl
xor
pop
test
mov
push
and
and
fidivrs
pop
and
push
lret
movsl
test
enter
in
mov
inc
mov
mov
pop
inc
sbb
int
xchg
subl
xor
dec
jbe
mov
xchg
ljmp
xchg
mov
jbe
push
clc
pop
fwait
push
push
roll
enter
push
xor
iret
pop
xor
pop
hlt
mov
shlb
sbb
dec
cmp
jle
dec
sti
or
pop
push
fstp
outsl
dec
dec
dec
inc
fwait
in
sub
pop
sub
mov
pop
inc
hlt
iret
js
push
setge
test
or
or
subl
push
sahf
xor
sbb
lods
pop
xchg
sub
insb
add
cmpb
fcoms
nop
and
aad
push
fsubrs
in
sbb
inc
pop
std
cmp
add
icebp
data16
jge
push
sahf
loop
jge
jnp
mov
or
movsl
jmp
mov
mov
mov
imul
int
push
subl
pop
rol
sub
push
fsubrs
out
das
rcr
mov
mov
cmp
cmp
and
les
aad
fisubs
inc
in
inc
xchg
pop
mov
je
mov
and
xchg
sarl
loopne
mov
movntq
out
or
xchg
cmp
mov
xchg
stos
push
adcl
pusha
sub
fcoml
cwtl
mov
mov
aam
mov
mov
stc
jecxz
dec
ret
push
out
push
fbstp
movl
push
jge
aam
fs
rcll
out
sbb
enter
cld
shl
roll
in
fisttps
xchg
xchg
jmp
adcb
mov
xor
pop
or
lcall
lods
mov
push
sub
sbb
popl
loop
js
and
std
pushf
je
pop
mov
movsl
adc
jbe
loope
cmpsb
jae
fisubl
sub
lods
lods
adcl
or
lcall
xorl
test
push
dec
leave
out
sbb
mov
cmp
outsl
push
push
fsubr
add
mov
jne
icebp
popf
stos
aaa
daa
test
dec
xchg
and
frstor
lret
mov
leave
in
imul
and
adc
push
imul
cmpsb
sub
test
push
jecxz
das
adc
or
mov
mov
add
nop
fbld
cmp
sahf
jne
pop
pop
out
push
sub
test
ljmp
xchg
jg
pop
cmpsl
lods
lea
pop
insb
push
lret
scas
adc
cltd
movsl
or
test
out
lcall
imul
sbb
fcoml
jp
les
mov
test
pop
pop
aas
mov
lret
fisubl
inc
jb
mov
loope
mov
and
xchg
sub
sbb
fdivrl
xor
cmp
mov
mov
or
sbb
add
mov
cmpb
jnp
cmc
push
push
adc
cmp
xchg
push
out
subl
lds
xchg
xor
mov
add
inc
out
out
cmp
jp
and
popa
arpl
inc
orb
shrl
negb
adc
adc
mov
xor
cmpsl
ss
xchg
adc
imul
dec
ret
testl
add
cmp
push
dec
lcall
lahf
mov
sub
or
jns
fmuls
xchg
mov
in
or
pop
mov
jns
xchg
or
jae
shll
pop
inc
lcall
out
dec
jmp
fimuls
test
mov
jbe
adc
jp
jno
mov
dec
test
aas
imul
out
cmp
out
jle
pusha
loope
mov
xchg
outsl
add
cmp
push
dec
orb
insb
lcall
or
add
lret
pop
or
jb
pusha
arpl
cmp
in
cmp
or
dec
outsl
addl
jl
sbb
xlat
in
cwtl
jmp
mov
adc
pop
adc
std
sbb
and
fcom
sbb
cld
ss
and
ret
les
push
cld
inc
and
or
pushf
push
push
xchg
pop
js
dec
pop
inc
cmp
testl
add
push
pop
imul
fimull
andl
out
divl
mov
inc
jmp
mov
push
push
rcrb
mov
aas
xlat
push
mov
sub
mov
mov
mov
jl
sar
jo,pt
cs
pop
stc
mov
roll
int
shrl
outsb
je
lea
mov
inc
xorb
movsl
sub
mov
fsubl
fnstenv
push
jb
sbb
clc
repnz
repnz
mov
xchg
mov
xor
mov
adc
xchg
mov
sub
adc
xchg
inc
sbb
shl
aas
lds
pop
stc
xrelease
in
int
mov
push
fistpll
mov
cmpsb
imul
in
or
xor
shl
mov
push
inc
lods
or
jns
mov
push
aas
sub
cmp
fstl
inc
dec
lahf
mov
mov
repnz
paddusw
mov
outsb
mov
dec
out
loop
push
xchg
or
xchg
jno
lock
inc
mov
or
les
imul
push
xchg
mov
fldcw
add
bound
shlb
lahf
fildl
cmp
fimuls
push
pop
cmp
enter
or
mov
pop
lods
daa
fisttps
arpl
fwait
lds
add
push
jb
and
fldcw
cmp
lret
cmpsb
loop
aaa
and
fdivr
ds
mov
mov
clc
xchg
mov
dec
in
jne
lds
dec
jns
mov
sti
mov
push
jecxz
push
cmp
stc
cmp
jp
adc
pusha
subl
xor
lea
rcrl
lock
add
pop
out
out
loope
pop
jae
lcall
xchg
adc
mov
test
pop
fisttpll
fildll
test
out
dec
fadds
xor
mov
jl
add
adc
jo
or
sub
xor
jnp
loope
fmuls
les
inc
gs
inc
inc
loope
fnsave
cld
in
stc
xlat
add
cld
jae
jmp
les
xor
js
inc
test
jp
xchg
jg
in
test
mov
in
mov
ljmp
mov
xorl
fistpl
fwait
les
or
mov
xchg
jbe
call
cltd
sub
cmp
lret
stc
mov
insl
add
push
mov
ret
jmp
mov
jbe
or
sbb
out
dec
sub
adc
mov
mov
pop
dec
cmp
fcmovnbe
jo
sarl
mov
mov
xor
cmc
popa
push
imull
push
lret
loopne
leave
or
sahf
out
cmpsb
sub
stos
xchg
push
mov
stos
cmp
ljmp
mov
loop
and
sarb
lcall
and
lcall
cmpsl
or
sbb
lcall
pop
push
or
popa
pop
or
push
mov
push
mov
out
xor
xchg
push
cmpsb
sbbb
xor
lds
mov
jae
cmp
das
pop
shll
repz
fistl
jge
imul
insl
jns
or
mov
inc
xor
lahf
jns
aas
clc
sbb
ds
adc
add
cs
in
data16
outsb
mov
or
aaa
jb
mov
push
pop
push
mov
popf
mov
mov
mov
ljmp
out
push
scas
jns
mov
lods
test
pop
add
inc
or
push
push
fs
push
mov
mov
push
cmpsl
sub
mov
out
and
or
xchg
or
test
push
mov
add
adc
es
test
push
inc
cmp
lods
outsb
jp
subl
inc
ss
inc
arpl
orb
sub
rol
jl
lahf
mov
test
insl
jns
dec
loopne
push
mov
insb
or
xchg
sbb
jle
jp
pop
loope
clc
xor
or
dec
xchg
xchg
arpl
stos
orb
cmp
push
sbb
mov
mov
cld
fucom
lea
and
mov
scas
roll
adc
push
pop
int
repz
insl
mov
out
lods
lret
mov
insb
gs
sbb
sarl
sub
je
lods
das
adc
int
dec
and
sbb
or
push
jg
dec
pop
add
loop
in
jb
popf
fidivs
jg
in
setg
jecxz
mov
pop
popa
lods
add
lods
out
mov
gs
dec
icebp
imul
mov
push
std
sub
lds
lock
xchg
loopne
lds
js
lcall
and
daa
out
les
add
xchg
mov
scas
adc
stos
movsl
movsb
data16
insl
xchg
cmp
sub
lret
lret
fiadds
jmp
inc
sub
xchg
test
movsl
mov
sbbl
pop
js
neg
fcmovnb
pop
xchg
mov
pop
xchg
lds
in
std
lahf
movsb
or
push
sub
pop
or
or
nop
pop
mov
push
outsb
lcall
mov
pop
mov
popf
jbe
sti
cmpsl
out
jno
aad
icebp
or
out
cmp
sahf
andb
dec
sub
push
sahf
lods
mov
mov
sub
in
adc
jno
cld
ja
fildll
mov
mul
in
insl
in
fstl
fwait
sub
dec
scas
sbb
cld
mov
cwtl
dec
arpl
setne
sbb
ljmp
int
jno
add
leave
mov
push
rcrl
lcall
mov
into
inc
in
leave
lods
push
sarl
shlb
lret
mov
inc
adc
mov
in
in
js
enter
xor
mov
jnp
or
and
xor
mov
xor
jns
xchg
pop
aaa
outsb
andb
push
add
add
pop
add
mov
mov
lret
pop
outsb
divl
dec
cmp
sbb
test
push
adc
pushf
lods
cmc
sbb
mov
call
xchg
xchg
shl
div
sub
sahf
pop
mulb
mov
jle
or
xor
sbb
inc
insl
dec
stos
bound
lret
adc
mov
sub
outsl
xchg
mov
arpl
sub
xchg
pop
or
push
dec
or
push
outsl
xor
loope
or
lcall
xor
stc
xchg
adc
mov
jb
pop
sti
mov
int
repz
adc
lock
ror
repnz
out
mov
out
or
imul
and
cmp
je
pop
nop
xor
mov
out
in
inc
cmpsl
dec
fld
mov
imul
subb
xlat
mov
rcrl
arpl
inc
add
sub
mov
ljmp
in
lods
pop
sbb
lcall
push
push
cmp
jns
dec
mov
mov
pushf
call
add
adc
movntps
vpmaxub
mov
mov
adc
push
cs
sub
or
loope
icebp
mov
push
shrb
loopne
pop
jecxz
jecxz
xor
sahf
ds
mulb
pusha
in
cltd
inc
arpl
cmp
fstpl
clc
push
movsl
pop
call
mov
lret
cwtl
adc
cmp
test
push
shl
adc
sub
mull
and
cmpsb
mov
push
pushf
lods
or
incl
push
and
xor
aad
insb
lret
repz
push
test
scas
sbb
mov
clc
mov
icebp
repz
sub
jne
push
andb
dec
js
aas
lea
popw
and
xor
cwtl
outsb
dec
in
dec
arpl
xor
shr
xchg
mov
pop
imul
mov
mov
sti
mov
ljmp
or
mov
cmpb
push
and
jnp
test
dec
lock
sbb
add
push
mov
cli
xor
adc
push
ret
sub
popf
xor
loopne
int3
push
adc
cmp
repnz
push
insl
loop
cmpsb
fadds
xor
rep
pop
lcall
pop
sub
rclb
filds
mov
adc
bound
fnsave
dec
icebp
inc
adc
xor
dec
lods
and
mov
add
ds
into
mov
sarb
pop
jb
sbb
pop
inc
negl
test
ds
bound
push
pusha
inc
jnp
xchg
inc
addr16
pop
and
out
inc
arpl
fnstsw
aad
stos
xchg
mov
sub
icebp
push
mov
mov
cmp
sbb
mov
and
rep
dec
xchg
mov
add
jae
pop
and
aas
in
pop
xchg
shl
or
outsl
in
and
inc
test
lock
ret
jmp
in
jo
dec
adc
ss
dec
jno
sbb
pop
dec
xchg
ds
add
mov
or
rclb
out
xlat
mov
int
rolb
mov
push
xchg
mov
sarb
hlt
fcomi
mov
mov
adcl
test
clc
test
in
jno
mov
or
cwtl
das
js
or
xchg
mov
sbb
aaa
out
adc
mov
mov
pop
xchg
cmpsb
jnp
je
rcrl
add
inc
sbb
cmp
pop
dec
loope
add
fists
test
or
sub
ss
repnz
cmp
jnp
and
mov
enter
jbe
into
jae
movsl
in
push
adc
je
pop
push
pop
ja
insl
shll
and
sbb
test
insl
mov
add
shlb
in
cwtl
je
add
loopne
xchg
testl
sub
pop
fidivl
xlat
gs
pop
push
negl
jmp
sar
sti
in
mov
xchg
pop
aad
mov
movsb
mov
jge
jl
mov
testb
add
pop
cmp
xchg
mov
arpl
mov
sub
mov
mov
pop
pop
jecxz
inc
loope
mov
cmc
in
imul
inc
or
xchg
and
mov
loope
cmc
push
test
cmpsb
imul
inc
mov
or
punpcklwd
mov
enter
sub
lock
shlb
cmp
sub
lret
movsl
dec
jae
mov
imul
jmp
xchg
cmp
lcall
lods
test
adc
mov
in
sbb
clc
push
cmp
ljmp
pop
fcoml
pop
not
sub
cs
loopne
add
insl
sub
nop
fimuls
push
imul
cli
fs
popa
sub
dec
out
pusha
adc
push
push
addr16
push
jecxz
adc
decl
mov
int3
lods
dec
sub
xor
fldcw
test
jae
jae
les
ficomps
inc
push
lret
xchg
stos
add
into
movsl
add
ljmp
ficomps
xchg
inc
dec
jnp
arpl
cvtpi2ps
and
pop
jp
push
imul
sti
xor
sbb
or
test
xor
mulb
mov
sbb
aad
mov
mov
and
mov
cltd
rcrl
add
push
xchg
iret
cmpsl
lret
fsubrs
cmpsl
nop
mov
into
in
sarb
pusha
push
dec
mull
aad
nop
inc
leave
push
and
dec
cmpl
jno
xor
rcll
mov
out
mov
data16
je
mov
in
mov
mov
imulb
dec
in
orl
adc
and
fwait
cmp
add
dec
int
dec
fcompl
mov
mov
xchg
arpl
das
movsb
arpl
leavew
or
sub
mov
push
out
leave
cmc
out
pop
and
cltd
ss
sbb
daa
in
out
fcomps
sahf
xchg
out
cmp
bnd
mov
cmp
test
or
xor
jle
ljmp
cld
out
dec
jo
movsb
fistpl
stc
xor
mov
mov
ja
mov
sbb
lods
rcrl
adc
int3
xor
jb
loop
jne
jnp
fadd
ljmp
pusha
dec
std
outsb
add
stc
jnp
test
fmuls
inc
mov
in
sets
shll
jne
push
loop
jb
testl
std
dec
jl
jbe
mov
pushf
push
sbb
xor
fisttpl
push
or
pop
leave
xlat
aam
daa
and
cli
adc
lret
add
add
xor
xor
xchg
lds
scas
jns
lds
inc
or
pop
mov
je
repnz
and
shrl
aam
push
dec
cmp
xchg
enter
scas
lods
xchg
inc
add
push
lods
mov
addr16
mov
push
int3
fistpl
push
iret
fcomps
stos
xorl
pop
push
add
je
popf
push
jmp
mov
subl
leave
cmp
xor
aas
mov
roll
sbb
test
xchg
jno
xchg
jae
or
clc
pop
out
mov
in
push
fadd
subl
aam
dec
add
jecxz
bound
ljmp
enter
cmpl
cmp
sbb
scas
stos
adc
adc
cwtl
icebp
les
shrl
dec
movsl
fcomp
in
push
hlt
jnp
inc
stc
sub
out
dec
pop
adc
sub
dec
or
sbb
push
xor
jns
icebp
cld
pop
xchg
mov
mov
and
mov
adc
mov
movsl
dec
add
pop
stos
sbb
test
lods
pop
and
xchg
popf
and
xchg
loop
test
std
mov
sub
movsb
dec
ljmp
out
or
xor
cmp
mov
icebp
shr
mov
jb
dec
mov
and
out
mov
cmc
push
in
dec
ret
cmp
mov
xor
orb
ja
sbb
inc
push
fdiv
push
xchg
test
and
mov
sub
cmpsl
jmp
js
imul
lret
adc
cmp
mov
mov
xchg
loope
aas
ljmp
pop
clc
pop
push
pop
jae
jne
int3
outsl
xor
adc
xchg
out
jne
and
adc
jno
cmpsl
sub
lods
dec
mov
push
push
push
mov
popf
pushf
jecxz
dec
mov
ljmp
jbe
outsb
fdivr
jns
mov
in
addb
out
fidivs
lret
xor
loop
add
xchg
pushl
and
in
rcll
add
es
sar
and
sub
in
jle
mov
loope
push
dec
mov
flds
gs
stos
xchg
cltd
fadd
mov
and
jmp
aas
fisubrl
popf
jmp
jo
sub
inc
sahf
dec
fsubl
xchg
test
cs
sub
xor
stos
int
push
mov
add
fcmovnb
es
dec
sahf
test
mov
jecxz
lret
pop
testb
push
pushf
gs
test
mov
loopne
rclb
sbb
push
push
dec
xor
enter
shl
sbb
sub
dec
pop
pop
xor
xchg
daa
mov
pop
adc
rep
int3
inc
sbbb
rorb
mov
lock
xchg
cmp
jae
cmp
call
push
sbb
sahf
mov
push
aad
mov
je
add
int
stos
cli
pushf
stos
repnz
jnp
mov
nop
sub
inc
cmpsb
pop
out
add
mov
inc
add
push
xchg
jne
cld
insl
inc
lfs
xor
sarb
and
test
repz
fldt
mov
mov
mov
mov
filds
insl
fldt
movl
loop
cmp
js
sub
es
mov
lock
dec
xor
xchg
xchg
add
notb
loopne,pt
shr
mov
or
repnz
mov
popl
add
dec
cmp
adc
lds
mov
or
lods
xadd
outsl
jge
dec
sbb
sub
sbb
in
enter
fbld
out
sub
add
jnp
xchg
sub
nop
sarl
cs
cmpsl
test
xor
mov
mov
scas
ds
mov
sub
add
cltd
add
orb
sub
lock
push
sbb
add
push
decb
push
mov
ficoms
stc
add
dec
sub
imul
mov
push
mov
int3
fstps
mov
ret
aaa
stos
adc
cmp
pop
push
addb
xchg
push
push
push
sbb
mov
sub
jg
inc
aas
push
into
adc
js
mov
inc
dec
movsb
cmp
lock
pop
lock
cltd
loopne
sbb
fadds
out
inc
add
push
lahf
mov
mov
sbb
inc
mov
dec
daa
pop
and
clc
aas
sub
mov
pop
and
outsb
jb
test
rcrl
pusha
push
arpl
subl
sbb
xor
pop
add
pop
fstl
adcl
pop
pop
fisubrs
or
push
in
arpl
cltd
sub
jg
jno
xor
sahf
mov
aaa
rcrl
adc
sub
mov
dec
push
lret
fnsave
shll
xlat
mov
jno
xchg
jno
int3
mov
ret
sarb
xchg
xor
jnp
das
xlat
lea
adc
aaa
jge
jns
fdivrl
mov
mov
fbstp
dec
lods
sub
sbb
dec
fwait
xchg
xor
inc
add
insl
sbbl
and
pop
sub
out
and
add
insb
aaa
insl
aas
xchg
jno
sarl
loope
cld
out
lods
in
inc
cltd
clc
sub
cwtl
or
ret
fdivl
mov
enter
xor
inc
sbb
sub
bt
add
adc
and
inc
dec
add
inc
mov
sub
scas
mov
shl
mov
xchg
cld
outsl
ss
insb
mov
push
push
lret
mov
popf
pusha
test
dec
mov
mov
pop
aaa
push
inc
hlt
or
xor
stos
xorl
rcrb
push
xchg
adcl
fst
data16
lret
push
std
xor
outsb
and
inc
or
movsl
or
pop
or
idivl
inc
pop
and
addr16
sub
mov
pushf
je
jecxz
shll
push
and
les
jo
adcb
mov
xchg
push
mov
adc
inc
insb
pushf
out
lea
mov
into
or
scas
mov
ja
pop
mov
fists
cmpsl
add
lods
ret
das
mov
pop
cs
fcomp
adc
fwait
mov
lds
add
icebp
std
mov
pop
dec
sbb
cwtl
adc
jecxz
pushf
int3
mov
sti
incb
push
xor
shlb
pushf
xor
sub
push
imul
stos
jecxz
adc
add
sub
xlat
je
insl
test
sahf
fstpl
mov
sahf
stc
sub
push
aas
cmp
jne
and
rolb
stc
cmp
scas
dec
mov
lods
mov
dec
roll
lods
repz
enter
psrlw
mov
xchg
jne
mov
adc
es
call
mov
sti
ficoms
cmpsb
pop
sbb
mov
mov
pop
imul
mov
orl
test
repz
jle
daa
out
add
push
mulb
mov
cmpsb
inc
je
mov
call
dec
mov
fisubl
sbb
add
push
mov
mov
pop
sahf
adc
push
arpl
push
lods
jno
push
addl
rclb
adc
call
aad
pop
fisttpll
push
sar
and
dec
push
mov
stos
xchg
sbb
pop
xchg
movsl
loope
aaa
cmp
jle
sub
mov
mov
stos
push
jmp
js
fmull
jbe
mov
test
pop
inc
inc
adc
sbb
mov
repz
sub
test
jmp
mov
mov
lods
pop
sbb
ja
sti
addr16
xor
cli
sub
xchg
pop
cmpsb
lret
inc
push
jne
mov
dec
les
and
in
imul
jg
daa
mov
ss
fdivs
popf
mov
add
pushf
adc
out
mov
xor
into
mov
popf
arpl
mov
adc
or
xchg
push
push
pop
movsb
pop
test
sbb
inc
sub
jo
jmp
inc
dec
loopne,pn
stc
xor
addr16
ja
aam
xor
push
orl
ds
xchg
push
iret
pop
lock
push
mov
push
lock
mov
movsl
in
push
shl
daa
fsubrl
mov
incl
cmp
cmc
mov
mov
mov
inc
jne
in
inc
rol
stos
popf
pop
rorb
jnp
xor
sbb
xlat
aad
test
jecxz
xchg
stos
jg
sbb
mov
adc
xchg
in
jnp
pop
dec
testl
adc
outsl
jl
sub
movsl
arpl
lret
lods
in
xorb
pop
jne
adc
ljmp
push
xchg
test
scas
mov
in
lods
sub
mov
inc
or
das
mov
pushf
fldt
xchg
pop
push
into
or
push
repnz
es
or
out
pop
dec
pushf
inc
loop
dec
jecxz
inc
cmp
fdivrl
cld
stos
insl
insb
fwait
mov
imulb
sbb
mov
or
mov
jge
pop
push
adc
pop
add
sbb
pop
and
ja
mov
pop
add
nop
add
addr16
ret
pop
fiaddl
mov
mov
enter
jp
xchg
repnz
cmp
pushl
loop
dec
inc
shl
stc
mov
or
dec
dec
and
xchg
addr16
mov
das
es
xor
push
sbb
iret
dec
outsl
add
mov
mov
dec
outsb
leave
dec
add
sub
xchg
mov
xchg
sub
out
enter
lret
push
fldt
bnd
mov
jmp
or
loop
or
xchg
pop
add
push
lahf
inc
leave
inc
mov
jno
test
dec
lock
mov
xchg
stos
ret
std
dec
outsl
mulw
push
xchg
jmp
and
add
rcll
add
xor
mov
aam
mov
cmpsl
and
sbbb
mov
mov
push
inc
fnsave
fsts
lret
lock
fucomi
jns
ret
pop
mov
repz
and
pushl
dec
movsl
mov
cwtl
cmp
fcmovbe
dec
adc
pop
pop
add
mov
sbb
pusha
mov
es
mov
and
stos
movsl
clc
xor
and
sbb
mov
jae
adc
pop
sbb
push
mov
pop
sub
or
insl
test
sbb
sbb
xchg
orb
cli
adc
push
xchg
jnp
inc
adc
xor
mov
mov
xchg
mov
aad
enter
mov
pop
cmp
out
inc
rclb
xchg
mov
cmp
xor
mov
push
xor
inc
xor
ss
jne
cmp
dec
lea
in
les
push
jge
je
push
test
ja
fwait
movhlps
ljmp
pop
loop
mov
aam
testl
lods
popf
ja
sub
dec
outsl
sbb
es
xchg
imul
xor
cs
pop
xor
xchg
adc
mov
or
call
inc
dec
mov
repz
adc
shr
daa
lcall
jg
mov
and
pop
and
xor
mov
nop
adcl
jo
dec
adc
scas
xlat
lods
xchg
ds
pop
sub
mov
sar
xor
xor
lahf
pop
ja
and
jbe
lea
dec
jae
sub
aam
mov
push
sub
divl
stos
filds
jg
icebp
iret
adc
pop
jns
sbbl
cmp
xchg
pop
jecxz
pop
cmp
and
xor
loope
arpl
pop
lods
mov
and
pop
fmull
mov
sbb
xchg
shlb
repnz
clc
ret
pop
dec
mov
sub
aaa
add
gs
mov
clc
cmp
popa
mov
lret
in
sub
or
mov
cmp
xor
jl
imul
loopne
stc
fs
adc
fwait
int3
xor
mov
out
push
in
pop
xchg
inc
or
add
daa
fimull
push
insb
push
or
outsb
sbb
ret
lea
idivb
mov
imul
add
insl
in
jne
jmp
cmp
mov
mov
enter
int
cmp
mov
int
mov
mov
pop
jbe
push
pop
sbb
aam
popf
pusha
mov
data16
xor
or
pop
jg
sub
add
or
or
cltd
dec
cld
fistpll
mov
or
add
adc
inc
iret
daa
sbb
fnsave
cmpsb
inc
test
dec
out
testl
ljmp
fnstcw
dec
dec
incb
insl
jns
notl
out
xor
in
jle
sahf
mov
pop
dec
pop
in
call
inc
sub
pop
repnz
int3
aam
jle
inc
les
pop
pop
imul
xor
mov
outsl
cmpsl
mov
jns
inc
dec
xchg
add
ljmp
mov
bound
push
cmc
jnp
inc
ss
loopne,pt
cmp
xchg
aaa
sbb
xchg
push
cli
mov
rol
scas
repnz
push
lret
xchg
and
jle
stc
faddp
pop
repnz
or
pop
mov
fsubl
push
inc
inc
jge
pop
pushaw
stos
ret
call
jbe
xor
fildl
mov
rcrb
dec
scas
incl
imulb
fs
mov
cmpsb
push
mov
cmp
outsl
mov
cwtl
imul
cmc
daa
xorb
push
or
out
push
add
sub
insl
popa
cmp
xchg
aad
clc
mov
inc
fmull
dec
popa
dec
pusha
imul
out
mov
rcrl
stc
xor
sbb
pop
mov
aad
nop
in
pop
dec
aad
cld
and
ds
xor
jmp
dec
mov
and
mov
dec
test
cmp
jecxz
add
scas
jge
das
ljmp
sbb
js
dec
push
xor
jmp
mov
js
fists
jo
mov
xchg
in
sbb
lods
adc
mov
sbb
mov
sub
xchg
stos
sbb
test
and
pop
fdivl
gs
lret
sbb
movsl
pop
cmp
andb
mov
cmp
iret
mov
xchg
std
sarl
push
cmova
aam
fldenv
sarb
test
pop
popf
fadds
mov
pop
push
fldt
mov
inc
ret
sub
jo
jae
sub
loop
scas
loop
ljmp
mov
xchg
hlt
pop
xor
pushf
xchg
imul
imul
cli
jbe
mov
jmp
out
push
mov
add
mov
mov
cwtl
ljmp
mov
out
cmp
or
out
xor
mov
je,pn
inc
pop
leave
inc
inc
jnp
and
push
sub
daa
scas
dec
mov
jle
push
cmp
mov
lea
movb
inc
test
pusha
fmuls
jge
or
or
ss
lock
call
adc
movsl
popf
jmp
test
cld
lahf
call
mov
shlb
sbbb
xor
mov
popf
clc
inc
pop
testb
pushf
push
out
lock
push
cmpsl
cmpb
daa
fnstenv
ret
pop
xor
rclb
subl
out
lods
xor
jp
outsl
inc
push
jae
jmp
scas
and
or
cmp
iret
imul
xchg
shll
fs
addr16
jb
cmpsl
jmp
push
shlb
adc
ja
inc
xchg
loopne
cmp
aam
rcl
sbb
mov
xchg
or
sbb
stc
dec
mov
shl
subb
insl
insl
or
xorl
out
cli
es
pop
pop
inc
ja
jl
sbb
mov
clc
stc
sub
out
daa
push
jl
iret
pop
sub
mov
pop
jbe
mov
xchg
cltd
pop
pop
mov
call
pusha
jnp
icebp
dec
out
test
cmpsl
ret
mov
cmc
and
add
push
js
lcall
xchg
mov
push
sub
jge
pusha
cmpb
repnz
addb
xchg
filds
xor
iret
mov
fwait
xor
daa
inc
sub
or
xor
call
xchg
dec
addr16
sub
arpl
ret
mov
xor
mov
adc
mov
dec
out
sub
leave
jbe
push
int
outsw
push
loop
insl
outsb
inc
add
cmpl
hlt
xlat
cli
cmp
lods
sbb
add
test
es
rorl
cli
mov
insl
adc
add
mov
add
adc
mov
rclb
jae
or
cs
mov
ret
divb
pop
out
or
andl
sbb
lret
xchg
inc
cld
push
ds
outsl
push
inc
dec
ss
enter
int3
fldpi
mov
inc
mov
rol
xchg
dec
push
xor
xchg
lret
cmp
xor
sbb
mov
and
jnp
lahf
adc
pop
mov
mov
fimuls
sub
subl
sbb
inc
rcrl
dec
inc
xor
mov
shr
cli
aaa
adc
pop
loopne
bound
insb
out
nop
and
dec
outsb
mov
lods
aaa
leave
sahf
les
pushf
popf
das
jb
gs
call
push
push
cmc
subb
stos
int
int3
addl
scas
je
and
or
in
cmp
mov
ja
shrb
negl
stos
dec
xchg
jge
push
pop
std
jnp
push
nop
orb
out
sahf
mov
mov
mov
xchg
xchg
lret
add
mov
daa
add
call
outsb
xor
jle
mov
sbb
je
push
jge
mov
mov
das
sub
mov
testb
jno
jbe
sub
clc
iret
jns
xchg
adc
xor
xor
test
out
fildll
inc
push
es
cli
sub
das
inc
repz
js
add
and
mov
or
rorl
imul
xor
cld
xchg
popf
test
test
pop
mov
enter
dec
sub
std
pop
push
xchg
mov
ror
push
out
sbb
cmpl
xchg
das
mov
mov
mov
push
dec
push
jmp
pop
sub
adcb
fsincos
shll
mov
lods
inc
add
mov
pop
and
movsb
movsl
ss
pop
jg
pop
sub
or
adc
pusha
fadds
clc
out
mov
xor
pop
nop
ja
sub
dec
mov
test
mov
jle
sub
or
clc
bnd
out
jbe
push
dec
andl
mov
rorl
mov
inc
mov
lret
push
test
lcall
adc
jnp
ss
cld
adc
push
jecxz
mov
xor
ds
mul
scas
jg
std
ret
loopne
and
insl
stc
inc
inc
push
lods
mov
test
sbb
std
call
insb
pushf
lret
sbb
mov
mov
aam
fsubl
push
js
in
das
insb
daa
fsubr
cltd
inc
rcrb
or
test
xor
scas
dec
je
cmp
jno
lret
adc
clc
aas
sub
clc
or
or
sub
jb
cli
and
sub
or
jno
test
jg
pop
push
mov
mov
push
adcb
dec
sub
dec
lret
cld
mov
or
repz
aad
out
ret
sbb
rol
and
mov
icebp
xor
hlt
jg
adc
dec
lods
ficoms
sbbl
rolb
rolb
stc
out
addr16
dec
fisubs
jmp
sbb
fisubl
adc
xchg
mov
jne
dec
imulb
mov
mov
lods
leave
xchg
adc
out
cmp
cs
pop
xchg
aas
fwait
clc
jge
cld
sub
stos
sub
outsl
aas
cmpsb
fst
mov
test
push
cmc
pop
jbe
cmp
xor
cwtl
pop
pop
std
mov
inc
add
imul
xchg
add
adc
mov
push
or
sbb
mov
lret
mov
or
cmp
popa
xchg
cmpsb
cld
mov
addb
cmp
movsl
sti
imul
adc
jg
rcll
mov
pushf
mov
jo
adc
sub
jg
lods
cs
mov
sub
into
bswap
int3
flds
ss
push
ret
adc
mov
sub
test
cs
orb
adc
scas
xor
jl
out
mov
adc
ror
das
sahf
push
push
adc
lods
jae
sti
fs
sbb
xcrypt-cbc
cmpsl
push
aad
xchg
lcall
es
sbb
insl
add
cmp
das
push
xchg
ljmp
push
pop
mov
pop
ret
les
movsl
adc
aad
scas
enter
jns
nopl
test
test
aad
aaa
pop
dec
lcall
pop
daa
lret
add
or
jb
dec
xor
sar
jbe
imul
repnz
xchg
or
xlat
push
mov
pushf
jmp
mov
xchg
lea
add
out
movsl
je
mov
add
sbb
popa
shll
incb
xor
insb
cltd
scas
stos
jns
frstor
xchg
fidivs
inc
inc
push
loopne
jne
mov
mov
inc
xor
jmp
loope
adc
push
cs
pop
jecxz
or
icebp
add
xor
pop
mov
insb
popa
jmp
mov
clc
cmp
pusha
mov
out
fistpl
xor
sub
in
add
jne
adc
ja
or
aad
xchg
add
push
inc
mov
add
gs
add
test
sub
pusha
sbb
lds
test
mov
sbb
lea
aaa
arpl
pop
mov
sbb
dec
in
add
cmpsl
mov
mov
jns
call
fwait
aam
inc
push
mov
ja
fwait
andl
cmp
adcl
mov
lret
xor
xor
movsb
pop
cmp
pusha
mov
sub
mov
or
jecxz
xor
xchg
cs
dec
cs
int
xchg
jns
orl
or
js
es
adc
lods
inc
popa
xor
add
mov
push
mov
sub
inc
loop
mov
lock
mov
aam
add
xchg
loopne
shlb
adc
scas
jns
cvttps2pi
aas
mov
add
lcall
ret
lock
fisttpll
xor
icebp
mov
push
mov
jp
loope
popf
push
jmp
dec
addb
stos
dec
out
popa
push
pop
ds
pop
add
dec
test
adc
ljmp
or
sub
pop
int
lods
out
pop
daa
jmp
mov
pop
adc
imul
and
dec
cmc
sarb
fidivrl
push
outsl
mov
mov
loope
jno
mov
scas
les
xchg
cmp
mov
mov
mov
or
fsubrl
jno
lea
popf
dec
add
mov
cld
cmc
mov
mov
in
pop
mov
outsl
sbb
pop
lahf
pop
mov
mov
clc
clc
push
jl
sbb
push
lret
jmp
mov
jo
ret
mov
js
xchg
nop
xchg
jmp
ficomps
insb
imul
fildl
orl
nop
mov
arpl
push
dec
xchg
mov
rcrl
idivb
sbb
test
inc
inc
out
jnp
adc
nop
sar
mov
je
inc
mov
enter
cwtl
mov
jg
dec
jae
lea
sub
test
fdivl
or
jg
std
aaa
cltd
mov
enter
or
imul
std
movups
pop
decb
mov
jae
xchg
subl
cmp
jae
cmp
cld
fistpll
adc
mov
adc
out
dec
cli
xchg
ja
stos
test
je
es
sub
xorl
jmp
movsb
lock
adcb
mov
push
push
fmull
sbb
sub
clc
add
jp
movsl
rorl
sbb
loop
test
adc
mov
push
or
lret
mov
cmp
dec
push
push
shl
mov
push
fld
push
aas
cmp
xchg
out
iret
jns
ret
xchg
xor
js
arpl
inc
jb
and
mov
orb
daa
xorb
imul
jp
pop
sbb
or
or
and
jecxz,pt
jp
inc
call
loopne,pt
in
adc
add
jns
ficomps
je
pushf
pushf
sub
pushf
add
xor
test
dec
clc
dec
bound
imul
cmp
inc
out
and
repnz
fiaddl
mov
aam
jp
shr
ret
push
stos
cmp
mov
insb
in
jb
test
or
cmova
push
mov
push
dec
enter
cmpsl
in
and
jbe
pop
inc
sub
jmp
pop
and
lock
clc
mov
mov
fs
xor
stc
jae
roll
mov
loopne
lods
add
or
test
jns
mov
int
sub
pop
pop
or
cld
ljmp
ficoml
push
dec
out
or
push
aas
mov
inc
mov
leave
int
pusha
int3
add
inc
ret
xor
jnp
out
mov
es
jno
sar
jecxz
sahf
pop
sbb
fnstcw
setbe
dec
jae
in
idivb
inc
faddl
adc
and
jnp
outsb
in
out
cmp
mul
or
xchg
xorb
fists
mov
cmc
das
aam
std
xchg
iret
and
jae
insb
pop
out
repnz
insl
sbb
push
mov
mov
shll
shl
icebp
mov
push
add
pop
stos
roll
jae
lds
sbb
in
and
ljmp
call
jne
ret
xor
outsl
lds
adc
or
adc
in
fldt
push
flds
mov
mov
dec
ss
enter
testl
test
mov
insb
jno
icebp
push
movsl
cmp
data16
cmp
fimull
test
inc
js
push
push
sbb
cltd
mov
scas
addb
rcr
inc
mov
inc
lea
mov
rcrl
mov
mov
sbb
and
push
sub
dec
xlat
test
aam
dec
into
push
call
dec
pop
jnp
inc
mov
sbb
dec
lcall
cmpsb
pop
adc
mov
and
repz
jns
scas
leave
stc
adc
popf
test
jmp
adc
adc
lahf
push
and
repz
bound
sarl
fs
insb
xchg
pop
out
add
insb
mov
and
cmpsb
ret
sub
push
add
pop
or
cmp
clc
inc
sub
pop
dec
aaa
test
aas
and
popf
sbb
mov
xchg
lock
cmpsb
xchg
notl
mov
in
sbb
sub
das
push
jmp
test
or
push
push
push
and
rclb
inc
lcall
and
cmpsb
sbb
xor
daa
mov
xchg
inc
test
push
insb
mov
or
mov
mov
and
lods
pop
cmp
xor
xchg
xor
jo
adc
mov
sbb
mov
lahf
in
test
cltd
mov
gs
push
and
loope
mov
cltd
iret
insb
fnstcw
mov
stos
dec
out
lds
mov
and
and
enter
or
es
jne
adc
xor
pop
lods
adc
sti
and
and
imulb
out
jmp
js
ficoml
push
adc
mov
pop
mov
sub
aad
std
js
xor
popf
orl
int
mov
dec
push
out
dec
lahf
pusha
lcall
loop
sub
adc
aas
ret
repz
ret
and
lods
jo
repz
scas
and
dec
pop
jp
mov
fs
xchg
mov
cmp
cltd
pop
es
sbb
lret
cmp
inc
push
popf
or
cmp
pop
cmpsl
jno
mov
bound
add
pusha
jno
int3
loop
sarl
jnp
call
int3
mov
mov
dec
cmc
jp
inc
push
fwait
add
fbstp
inc
shl
or
push
push
mov
and
pop
sub
jbe
gs
shlb
mov
mov
lods
test
xor
arpl
xchg
les
mov
mov
push
add
dec
jo
xchg
dec
call
and
std
lea
int3
sbb
mov
pop
test
stos
jl
mov
lidtl
jp
sub
movsb
inc
jg
je
mov
mov
jle
stos
cmpsb
bound
bound
adc
scas
into
sub
push
mov
push
stc
mov
mov
push
sub
frstor
testb
xor
sbb
mov
pop
repz
clc
sbb
movsb
and
notb
inc
sub
bound
mov
sbb
shr
jge
rcll
pushf
mov
ficomps
mov
and
out
pop
js
into
mov
xchg
movsb
ja
cmpsb
mov
cmp
sub
int
lock
push
scas
int
inc
test
ffree
add
shlb
int
add
scas
add
push
adc
dec
dec
sub
lds
xchg
cmp
cmp
jle
sub
inc
mov
jae
push
sti
loope
inc
in
ror
jb
loopne
mov
pushf
dec
sub
push
and
fisubs
xchg
add
aam
std
movsb
mov
or
and
in
jl
add
enter
inc
mov
jnp
sub
scas
mov
push
loopne
out
add
push
ja
aam
xor
lahf
lcall
int3
ja
fst
fimull
xchg
scas
das
call
enter
xor
sub
xlat
stos
das
lock
xchg
lret
inc
inc
sarl
mov
sub
add
xor
pop
mov
jg
push
push
mov
adc
inc
cld
push
out
add
mov
out
movb
int
xchg
mov
dec
test
gs
xor
rorb
insb
daa
test
test
js
rcrl
cmp
jb
add
popa
arpl
in
les
push
mov
loopne
je
cli
sbb
cmp
cmp
leave
push
jns
xchg
inc
push
mov
fwait
mov
movsl
pop
dec
nop
movsb
inc
mov
iret
insl
js
dec
inc
addr16
call
xchg
imul
imul
inc
or
mov
mov
adc
xor
adc
xorb
into
inc
lds
adc
andl
ljmp
ljmp
leave
xor
mov
int3
mov
rol
or
ror
test
stc
lods
xor
sbb
insl
xchg
mov
test
inc
scas
and
cmp
lods
movsl
adc
mov
mov
cmpsb
out
sbb
mov
aas
loop
out
jo
adc
push
adc
imul
inc
mov
xor
sub
jl
xlat
add
sub
popa
pushf
pop
fisubl
fwait
mov
mov
push
cmpsl
dec
cwtl
or
insb
xchg
xchg
mov
mov
dec
ret
sbb
lret
inc
cld
cs
inc
mov
xor
sbb
sbb
les
mov
mov
cli
dec
mov
hlt
dec
mov
sub
and
push
jbe
lds
mov
mov
inc
movsb
sub
jne
add
push
in
pop
cwtl
push
inc
daa
arpl
shrl
xor
jg
mov
add
inc
pop
imul
jns
stos
sbb
popl
sarl
ret
sar
out
pop
mov
jmp
decl
gs
xchg
add
jbe
pop
cwtl
cltd
push
aam
rcrl
mov
mov
pop
inc
sub
imul
xchg
leave
dec
stos
popa
imul
sbb
je
test
adc
sahf
in
sbbb
les
loope
ret
jg
fwait
rorl
adc
dec
lcall
je
xchg
adc
xchg
pusha
or
and
aas
movsb
sbb
outsl
cwtl
xchg
or
aas
sarl
negb
out
jne
dec
aaa
rcrl
test
arpl
xor
sub
mov
int3
lods
popa
add
ja
pop
push
jne
sub
test
push
mov
cmp
pop
push
and
and
and
call
and
xchg
cmp
sub
shlb
and
sub
sub
iret
fistpl
cwtl
pop
push
inc
ret
std
int
stos
pop
jne
lret
xchg
push
scas
xlat
icebp
sbbb
or
aam
fiaddl
jecxz
dec
mov
mov
mov
adc
popl
add
ds
cmp
cmp
xchg
xchg
push
push
cmp
fs
push
cmp
hlt
adc
loop
aaa
pushf
rcrb
fildl
into
aaa
cmp
sahf
cmp
test
mov
push
sar
pop
pop
out
mov
stc
loopne
cmp
hlt
xchg
loop
and
out
movsl
jg
in
shrb
decl
sub
jl
call
pop
jl
inc
jae
popf
fbld
inc
mov
rolb
or
dec
inc
or
in
inc
gs
sti
popf
cmp
fsubrl
add
and
in
subl
inc
mov
sahf
push
xor
inc
jbe
enter
mov
repz
jb
and
cmpsb
ja
call
sub
mov
sub
or
xor
shlw
jecxz
mov
fadd
pop
scas
jb
push
pop
pushf
sub
stc
les
and
mov
movsb
inc
cmp
pop
mov
xor
jo
xor
cs
pop
xchg
push
enter
mov
mov
add
scas
test
std
loopne
lret
sbb
addr16
sbbb
or
mov
sub
pop
add
ret
xchg
jno
mov
stos
and
inc
add
loop
mov
mov
inc
mov
and
fs
lea
popa
pusha
aad
nop
or
mov
sbb
sub
push
inc
jecxz
push
test
stos
sar
int
xchg
sub
sti
pop
incl
loope
fsts
sti
add
and
sub
fldcw
and
lods
leave
or
lret
stos
cmp
shll
mov
icebp
imul
bound
in
adc
pop
jnp
adc
sbb
and
inc
jne
loop
insb
dec
lahf
sub
insb
push
popf
mov
dec
sbb
sub
imull
cmp
pop
or
pop
xlat
aas
jb
adc
jecxz
aaa
cmp
call
cmpsb
mov
mov
mov
sub
pushf
fwait
and
cmc
mov
add
pop
out
or
jns
leave
imul
add
fnstenv
cmp
dec
cmp
aaa
fisubl
subb
mov
push
push
faddl
jecxz
sub
lcall
scas
xchg
pushl
mov
jl
icebp
add
lret
mov
pushf
adc
jb
jge
in
jp
repz
mov
dec
push
mov
xorl
jg
mov
es
jo
loopne
flds
and
or
or
cmp
adc
int
outsl
mov
adc
sub
mov
fcompl
fisubl
sub
sbb
mov
cmpb
or
adc
and
mov
popf
jp
mov
adcl
aas
imul
inc
rcr
inc
xor
out
test
pop
pop
lods
lods
repz
sub
xchg
xor
or
dec
inc
testb
enter
add
add
ja
push
mov
push
mov
pop
out
in
and
xor
jg
bound
gs
xor
jae
stc
cmp
mov
cmp
sub
mov
in
sbb
int3
ja
ret
imul
test
lcall
pop
mov
cmpsl
and
and
incl
lock
push
fnstsw
ret
loope
test
jmp
lea
out
aas
test
pop
filds
jge
fimuls
cwtl
lods
mov
orb
aad
lods
lea
outsb
cltd
inc
xor
dec
adc
adc
add
xchg
jecxz
movsb
pop
adc
xchg
xor
push
sub
test
adc
mov
pusha
pop
xlat
jb
xor
aad
inc
leave
in
mov
mov
cwtl
pop
and
test
sahf
jne
std
lret
popa
mov
aad
pop
nop
inc
scas
mov
and
insb
or
inc
js
imul
dec
mov
call
aas
mov
fldcw
test
mov
popf
ret
jge
push
jmp
out
bound
das
fstps
bound
sub
es
xor
out
pop
lock
loope
xchg
dec
xchg
into
clc
adc
loope
cmc
sub
inc
cltd
ja
icebp
fldt
mov
inc
loopne
push
mov
idivl
and
sysret
inc
sbb
outsb
mov
aas
out
movsl
dec
xchg
and
adc
mov
pop
nop
cmp
ficompl
lahf
cmpsb
xchg
add
lret
sub
dec
gs
pusha
mov
mov
lret
cmp
shl
inc
lahf
xor
lods
out
jge
loope
insb
fsubrp
inc
cmp
dec
loopne
mov
lret
int
sub
push
ds
inc
jmp
jae
push
cmp
mov
xor
daa
enter
pop
loope
les
stc
ds
jno
repnz
and
ficompl
xorb
and
js
sbbl
lods
and
or
adc
push
out
and
das
jnp
cmp
add
out
jbe
sbb
jge
xchg
xchg
push
jle
popa
imul
pushf
adc
mov
or
jecxz
imul
adc
cld
mov
scas
mov
shll
cld
mov
lret
sub
int3
cltd
pop
xor
das
out
int3
cmp
imulb
je
jecxz
or
pop
mov
test
into
pop
rol
insb
cmpsb
sahf
movsb
ljmp
cs
inc
push
inc
out
and
push
out
cwtl
mov
repz
in
cmp
call
in
pop
sub
pop
addr16
add
data16
xchg
insb
repnz
mov
stos
aas
loop
jp
mov
enter
dec
stc
std
inc
mov
xor
or
lret
and
lods
and
mov
mov
cmpsb
repnz
and
xor
outsb
mov
mov
or
orb
andb
dec
dec
xlat
stos
cmp
jl
bound
pusha
adc
push
fwait
insb
jl
bound
xchg
inc
cmp
out
push
popf
jb
cmp
mov
inc
outsl
dec
mov
arpl
lret
rorb
fwait
lods
outsb
fwait
or
aad
cmc
sbb
mov
jbe
add
outsl
leave
call
push
mov
mov
push
sbb
lock
jle
and
cmp
enter
xchg
les
in
fs
out
adc
push
lahf
mov
push
ds
add
mov
shll
lret
test
clc
loop
adcl
pop
nop
mov
and
inc
and
sbb
and
add
insl
jge
loope
ds
lock
sub
adc
jae
or
out
mov
test
lock
cmp
js
cmp
xlat
mov
push
inc
dec
mov
jmp
adcb
jns
or
mov
cs
jns
in
push
push
or
cwtl
out
imul
or
mov
and
enter
mov
lods
ja
sub
push
xor
lahf
inc
mov
jb
xor
cli
idivl
out
add
js
mov
movd
insb
popa
cmc
mov
cmpsl
sbb
pop
outsl
shl
jns
xlat
xor
dec
loop
xchg
out
mov
sub
lock
aam
scas
add
or
in
loope
or
sbb
pop
mov
aaa
ljmp
ja
mov
mov
lret
adc
sar
jp
push
lahf
fisubrs
out
xor
es
mov
ret
pop
add
adc
mov
stos
loope
popf
and
pop
fwait
mov
add
xor
fisubl
mov
dec
addl
mov
cmp
jbe
imul
add
fwait
adc
decb
pop
std
add
lock
mov
loop
or
cs
loope
loopne
daa
inc
cmp
cld
sbb
xor
popa
mov
jnp
scas
dec
imul
xchg
xchg
add
cmpsl
enter
cmc
clc
pop
lods
xor
push
aad
stos
sti
outsb
ljmp
mov
adc
cmpsl
dec
or
sarb
jge
sarl
xchg
ret
movsl
lock
or
xor
pop
xchg
aad
jl
ds
inc
sti
sbb
sbb
fs
jg
and
inc
cs
mov
adc
pop
decb
lock
stos
repnz
lahf
jbe
bnd
add
xor
popf
and
test
mov
mov
fbstp
out
arpl
jle
mov
inc
cmpsb
cmc
popa
imul
mov
in
push
jns
xorl
movsb
pop
and
push
and
jae
sub
and
dec
and
aad
fisttpl
scas
rorl
sub
stos
int3
shlb
aaa
mov
test
jmp
dec
sbb
mov
ds
in
insl
xchg
das
mov
call
or
adcb
inc
pop
movsb
mov
cmpsl
vorpd
loopne
int
xor
or
ja
int3
icebp
xor
dec
inc
xor
out
mov
jp
mov
icebp
jg
ja
mov
ss
data16
lods
ljmp
pop
lock
xchg
enter
jp
xor
adc
rolb
xor
adc
imull
push
cmpsl
repz
addr16
pushl
adc
sbb
jg
pop
iret
rcll
add
or
aam
stos
xchg
mov
pop
inc
cmpsl
test
inc
stos
push
stc
repz
popf
mov
xchg
adc
call
sub
push
mov
cmp
or
sub
mov
add
dec
push
or
int
cmp
scas
cmp
sub
lods
sbb
cmp
into
inc
or
fadd
repz
movb
ficoml
lods
adc
pop
out
repnz
mov
xchg
arpl
jl
lock
lahf
lock
lahf
sbb
in
push
xchg
sbb
mov
mov
enter
inc
loopne
imul
mov
cmp
xchg
pop
sub
jle
shll
cwtl
lods
xchg
inc
push
nop
adc
or
mov
insb
or
rolb
movsb
stos
mov
push
mov
xchg
push
mov
cwtl
fsubp
sub
pop
sub
push
test
lods
push
sbb
xor
push
je
jo
mov
cmp
or
in
mov
sub
and
jne
outsb
lods
rcrb
jp
or
or
in
fwait
xchg
push
adc
insl
sbb
mov
ds
add
push
sbb
xchg
sti
test
mov
not
imul
test
add
xchg
scas
imul
fidivl
repnz
data16
repz
push
adc
data16
popa
dec
pop
fnsave
mov
pop
out
xchg
jp
push
inc
push
in
pop
dec
fidivrl
adcl
inc
rcll
xchg
test
ljmp
and
lahf
mov
insb
in
stos
outsl
and
cmpsl
push
popf
pop
in
mov
fists
test
dec
rorl
subl
ror
pop
ljmp
std
adcl
jge
insb
sahf
fsubl
data16
lahf
fists
jg
cli
shll
ret
dec
or
dec
pop
loope
fbld
pop
enter
mov
pushf
sbb
xlat
jo
subb
sub
xchg
cmp
mov
dec
adcl
call
push
sar
xor
push
pop
pop
or
mov
push
jno
pop
mov
cld
cmp
dec
push
sbb
or
cmp
xchg
fnsave
in
lret
push
pop
pop
loop
and
mov
and
aas
xchg
push
push
push
xchg
inc
repz
rolb
mov
cmp
scas
sub
xchg
pop
adc
cmp
sub
add
xchg
add
movsb
ljmp
mov
popa
addr16
mov
lret
frstor
aad
pop
push
mov
inc
mov
enter
fs
ficompl
mov
mov
or
inc
filds
stc
cmpsb
jmp
pop
cmp
fld
jo
inc
cwtl
and
xor
xchg
mov
inc
mov
cmp
push
sub
add
fmulp
lds
sbb
cmpsb
imul
jb
outsb
cld
mov
sbb
lcall
mov
inc
cmp
pop
cmp
int
or
lea
add
outsl
ja
xchg
rsqrtps
fsubrp
jnp
xchg
fists
and
ja
dec
and
lds
cltd
into
out
mov
cmp
insl
adc
pop
test
cmp
jne
mov
jno
cmpsb
inc
aas
fidivl
decb
leave
outsl
cmp
cwtl
inc
popf
push
es
dec
lods
pop
repz
xchg
inc
lods
fistpll
je
sub
mov
popa
push
fnsave
mov
inc
loopne
bound
outsb
test
sarl
lret
pop
jle
jb
je
nop
xchg
arpl
icebp
outsb
aaa
add
adc
lea
ds
in
into
shl
ret
push
inc
or
cmp
inc
push
lret
mov
popa
mov
pop
inc
ret
test
inc
andl
adc
xchg
pop
inc
add
fsubrl
sbb
lret
push
in
cld
fs
and
hlt
mov
sbb
out
stos
mov
mov
dec
icebp
pop
or
jns
sub
add
jno
loope
in
sub
nop
shrb
test
notb
das
xor
jl
idivb
lds
lret
adc
or
dec
mov
cmp
shrl
sbb
push
mov
stc
fwait
sti
pop
add
and
push
in
push
push
mov
out
mov
mov
jl
test
adc
divl
nop
adc
out
push
sub
lea
xchg
mov
int3
jp
sbbl
jmp
jp
cmp
jecxz
movsb
xlat
outsb
push
notl
mov
sarl
sub
out
and
das
inc
add
cmp
daa
test
out
ja
shlb
idivl
inc
or
jp
mov
pop
psraw
outsb
cmp
sbb
sub
add
hlt
inc
xchg
and
loopne
dec
ss
dec
jae
push
xchg
inc
mov
pushf
mov
faddl
pop
xor
in
sub
fsubr
in
shll
lock
mov
mov
xor
inc
loopne
dec
out
pop
repnz
add
mov
adcl
je
jbe
jp
pop
mov
lock
mov
out
cld
repnz
ret
or
push
arpl
enter
mov
jb
mov
pop
mov
push
pop
rclb
in
jge
testb
sub
add
cmc
mov
movsl
shl
push
mov
pop
iret
adc
insb
sub
or
xchg
add
pop
nop
push
cmp
xor
out
inc
mov
mov
or
adc
pop
mov
dec
sub
mov
mov
and
and
sub
cld
dec
and
inc
fs
lods
mulb
adc
test
rcr
icebp
outsb
and
into
dec
pop
dec
xchg
add
sbb
inc
cmpsb
xor
xchg
xor
add
mov
mov
sub
mov
push
push
ror
xchg
in
dec
rcll
jle
jl
lods
xor
rolb
sub
je
or
jecxz
adc
pop
jb
andb
lea
inc
push
push
mov
fmull
add
ret
inc
sbb
push
or
cwtl
jle
push
bt
dec
clc
fdivrs
ret
pop
cmp
not
adc
and
dec
adcl
je
mov
pop
mov
rclb
jae
push
xor
inc
test
fwait
test
adc
lods
out
mov
imul
and
rorb
cmp
push
fwait
xchg
fildll
adc
jmp
inc
hlt
pop
inc
pop
mov
push
fistps
shll
insb
rclb
and
pop
aam
ret
mov
lret
xchg
mov
imul
sbb
mov
lea
push
xor
inc
leave
inc
mov
cmp
inc
cmp
push
xchg
adc
pop
pusha
mov
sbb
cs
xor
call
fidivrs
outsl
fs
dec
cltd
mov
leave
dec
push
ret
fisttpl
insb
stc
xchg
loop
hlt
jbe
sub
cwtl
shll
outsl
adc
repz
js
adc
test
addl
xchg
sbb
rcl
jmp
jo
add
pop
cmp
jbe
fs
clc
dec
cmp
cmc
dec
mov
pop
cld
out
inc
sti
pop
in
test
ret
mov
jb
notl
jmp
add
xchg
sahf
sbb
xor
lcall
sbb
mov
mov
cmc
shlb
movsl
add
mov
push
pusha
xchg
pop
jno
call
sub
mov
jo
pop
cmp
mov
push
int
push
sti
add
mov
sub
dec
popf
pushf
dec
adc
fiaddl
aaa
mov
mov
int3
dec
adcl
movsb
loop
lret
add
hlt
test
ljmp
ss
mov
mov
xchg
popa
loop
cmpsl
loope
jbe
mov
inc
add
and
daa
xor
sbb
insb
adc
jecxz
jno
insb
add
or
xor
and
push
mov
movsl
or
jle
adc
insb
dec
xchg
inc
mov
push
jg
mov
dec
mov
loop
jnp
sarb
xor
imul
dec
jbe
mov
gs
or
loope
std
xchg
cmpsl
dec
movsl
push
ja
icebp
inc
inc
bound
xlat
into
mov
cmp
pushf
xor
jge
mov
mov
mov
ds
push
shrl
mov
sbb
inc
into
xchg
push
adc
cmc
mov
hlt
mov
fmul
mov
xor
xor
pop
or
cmp
xor
in
icebp
push
lret
clc
cwtl
movsb
sar
rorb
stos
clc
into
or
xchg
lret
fcomps
push
jnp
mov
fmuls
aam
aam
out
jb
mov
cmp
fsub
mov
dec
pop
mov
push
mov
xchg
mov
in
cli
mov
cmpsl
pop
cs
arpl
push
pop
sbb
mov
jle
push
mov
or
sbb
mov
mov
pop
mov
fidivrl
cld
cmpsl
jne
push
jp
cmp
add
out
fwait
sti
loopne
jo
les
je
mov
movsb
and
and
dec
mov
adc
xor
shll
dec
pop
push
popa
lock
fdivrs
and
dec
or
jno
add
push
mov
dec
pushf
in
inc
lock
sbb
sub
pop
ja
std
dec
pop
and
cs
or
xchg
and
js
or
andl
gs
lods
stos
jae
inc
mov
push
sbb
ds
cmp
call
or
jecxz
mov
xchg
push
dec
daa
lea
lret
mov
and
outsl
int3
cs
xor
sbb
out
pop
iret
fistpl
xor
loopne
lret
clc
lcall
or
stc
adcl
xchg
dec
jb
sub
pusha
jb
loopne
inc
mov
xchg
mov
in
push
fcmovnb
push
xor
sub
ss
adc
sub
jns
cmp
inc
pop
pop
xchg
sub
fisubl
mov
mov
scas
and
dec
sbb
mov
test
push
mov
mov
mov
aaa
xor
int3
clc
clc
adc
in
adc
jle
ss
pop
sbb
or
jno
sub
imul
sub
sahf
repnz
pop
or
inc
mov
lds
sar
ficomps
dec
enter
jo
xchg
cmpsb
int
sbb
test
pusha
cmpsb
xor
dec
push
fimuls
rolb
stc
cmpl
add
add
mov
xchg
sub
and
and
out
notl
xor
mov
ljmp
out
xor
or
push
mov
dec
add
outsb
std
add
in
sbb
test
jle
subb
inc
sbb
adc
adc
pop
dec
or
mov
sbb
mov
in
push
lcall
xor
movsb
xchg
mov
popf
addb
xchg
inc
and
lcall
scas
jle
das
mov
mov
inc
or
pop
fwait
scas
xorb
dec
rorl
pop
rorl
or
push
daa
adc
push
dec
xchg
mov
jecxz
subb
push
pop
sbb
add
and
ljmp
or
fwait
out
cmp
sbb
mov
xor
cmp
sbb
xor
cmp
dec
xchg
mov
leave
ret
stos
ret
sub
adc
adcb
mov
lret
lds
pop
mov
orb
mov
dec
sub
sub
nop
jb
xchg
not
into
fbstp
aam
sub
out
and
arpl
out
rcrb
aaa
outsb
aam
or
fstpt
scas
inc
add
data16
push
pop
jae
xor
inc
mov
cld
cld
pop
sbb
xchg
dec
dec
mov
xor
les
cmp
out
mov
mov
mov
pushf
jnp
inc
in
popf
xchg
lock
mov
adc
pop
dec
dec
fsubl
rclb
adc
mov
add
imul
push
add
stc
lcall
movsl
in
aaa
stc
push
cs
cmp
iret
pop
or
fsubl
leave
or
mov
push
ja
bound
stc
and
inc
adc
jmp
sub
jl
jae
adc
mov
out
mov
sbb
xor
clc
mov
fs
mov
incb
test
aad
sbb
mov
adc
mov
ret
test
cltd
mov
ret
sbb
shr
dec
fistl
sbb
push
sti
pushf
pop
adc
xchg
and
pop
sti
jecxz
int
add
stc
insl
mov
cmpsl
push
pop
dec
call
test
or
jg,pn
arpl
xchg
adc
pusha
and
sbb
repnz
jne
popf
pop
xorl
rorl
nop
push
sbb
adc
sbb
push
adc
js
inc
mov
dec
icebp
sub
dec
dec
les
mov
push
movsl
jecxz
cmc
xchg
pop
les
test
and
int3
fbstp
mov
xchg
nop
sub
cld
repnz
mov
jae
mov
jno
add
mov
pop
jns
lret
ret
add
jbe
roll
ss
sub
nop
gs
mov
push
loopne
sti
rol
js
cmp
mov
xchg
insl
mov
out
and
jbe
aam
mov
jbe
fmuls
int3
mov
clc
jbe
adc
sbb
test
roll
into
and
mov
or
sahf
fiadds
imul
in
pushf
add
int3
in
jbe
rorl
mov
xchg
out
jge
and
adc
push
xchg
inc
movsl
popa
sti
xchg
cmp
mov
push
lret
mov
clc
mov
push
mov
ljmp
jl
fidivs
scas
xor
add
fwait
add
mov
mov
xor
arpl
and
sbb
mov
sbb
jb
cltd
push
sbb
mov
test
push
in
loopne
popf
xchg
js
nop
movaps
and
mov
adc
and
inc
ret
iret
out
pop
int
lods
std
enter
les
mov
ja
lds
inc
test
mov
dec
cmpsb
inc
or
lcall
outsl
insl
jmp
mov
mov
sub
rcrb
aad
cltd
and
push
dec
sahf
mov
push
jp
adc
sub
imul
popa
xchg
enter
call
int3
lret
push
stos
repz
dec
dec
sbb
shlb
mov
repnz
cmp
xchg
aad
xor
pusha
xor
mov
popa
mov
popf
adcl
push
xchg
data16
cmp
or
or
fidivrs
mov
sbb
sti
popa
add
mov
in
cmp
cwtl
test
or
inc
pop
scas
outsb
mov
rorl
ljmp
mov
mov
xchg
sub
sbb
rcrl
dec
dec
jbe
mov
cmp
mov
scas
or
pop
xor
push
fcmove
push
or
movl
fiadds
js
xchg
nop
xchg
bound
cmp
jmp
mov
orl
loop
nop
rorb
xlat
push
mov
shl
dec
or
inc
shrb
mov
dec
inc
pusha
int3
mov
pop
push
addb
sbb
int3
shll
xor
ficomps
fimull
mov
pusha
lcall
cmp
pop
or
pop
lods
sbb
mov
jmp
sub
jg
out
adc
iret
mov
fsubr
outsl
inc
in
sahf
aas
mov
mov
pop
mov
push
xchg
mov
pop
cmp
popf
mov
xchg
lods
jae
sub
or
inc
loopne
xor
push
mov
out
add
ja
mov
xor
xor
adc
insb
movb
fs
inc
loope
dec
push
push
std
icebp
fsubl
sbb
push
sub
or
fwait
mov
outsb
imul
test
dec
aad
fs
push
shrl
and
or
movsb
and
inc
and
mov
mov
out
mov
jns
rcl
mov
pop
add
pop
add
popa
push
loop
sub
jl
pusha
push
dec
inc
lods
cltd
adc
insl
xor
and
addr16
cmp
mov
inc
push
or
leave
insl
xchg
cmc
in
jnp
xor
nop
rclb
stos
arpl
mov
andl
testl
repnz
mov
roll
cmpsb
xchg
mov
in
add
lahf
xchg
gs
push
cmp
pop
ljmp
mov
adc
dec
dec
mov
push
imul
in
xor
push
jg
cmpsb
jp
and
je
xor
shrl
hlt
dec
mov
or
les
add
clc
ljmp
jo
adc
cmpsl
cmpsl
pop
scas
shll
lock
out
out
mov
push
pop
inc
test
lock
sub
or
ret
jle
idiv
pop
mov
out
pop
jg
push
jmp
push
test
add
add
jnp
push
cmp
xchg
mov
and
fsubl
sub
ret
imul
insl
lods
mov
sbb
fcmovne
lods
test
loope
sbb
insb
pop
aaa
std
cli
xor
lret
cwtl
fwait
pop
adc
sub
cmp
or
sahf
outsl
mov
jbe
mov
xchg
daa
xchg
mov
sub
rcrl
enter
rorb
dec
out
pop
std
call
mov
sarb
dec
jnp
sbb
or
daa
or
in
xchg
in
loopne
add
sub
xchg
xchg
pop
lea
jecxz
jg
jmp
adc
aad
icebp
sub
mov
sub
mov
jno
jnp
push
jge
sub
pushf
dec
stc
outsl
icebp
mov
pop
or
and
out
cs
test
cmp
lds
push
repz
xchg
jnp
cwtl
mov
sub
inc
add
adc
mov
mov
ja
jnp
int3
jb
shrl
ljmp
arpl
loopne
out
scas
mov
mov
jbe
push
mov
jle
stc
adc
cmc
aad
aaa
pop
lret
lea
push
imul
inc
lock
sub
pop
ficompl
cmp
inc
rol
enter
jne
jae
xchg
aam
lock
rcrl
sahf
cltd
imul
int3
imul
enter
jo
adc
add
ds
test
shrb
out
stos
outsl
add
sbb
or
pusha
gs
sbb
mov
loope
sbb
enter
lods
popf
and
jns
imul
cli
cmp
mov
in
mov
jge
pop
cli
jnp
xchg
mov
pop
aaa
sub
aam
adc
adc
test
sti
cmc
cmp
and
jg
test
xchg
jns
mov
lret
pusha
rolb
stc
fists
xchg
cmpsb
mov
add
dec
sub
dec
cmpsb
insb
inc
sahf
lea
imul
dec
dec
dec
hlt
cmp
inc
cmovp
shll
nop
sbb
rcll
xchg
imul
or
out
aaa
push
inc
popa
andl
shrb
je
or
sbb
nop
pop
aad
xor
inc
repz
stos
xchg
sub
push
int3
mov
fs
mov
push
outsl
and
push
lcall
xchg
lret
clc
inc
js
arpl
push
jle
xchg
lret
les
rorl
jnp
shl
cmp
negl
out
sbb
mov
dec
rcrl
xor
push
push
aam
push
inc
ds
icebp
mov
mov
cmc
jecxz
loopne
fidivs
dec
dec
xchg
add
aad
stc
push
sbbb
in
adc
cmp
scas
sbb
mov
inc
andl
xor
cmp
inc
sbb
adc
inc
push
cmp
mov
popa
std
out
notb
jnp
cmp
mov
push
mov
cmp
dec
out
data16
xchg
dec
jnp
sub
push
pop
add
mov
aaa
mov
mov
cmpsl
or
xor
jge
xor
or
ljmp
lods
mov
mov
lock
test
mov
test
and
stos
fcmovnb
sub
adc
jmp
push
fcompl
mov
std
fstpl
fcmovb
dec
xchg
stos
stos
adc
jne
shll
push
addl
mov
sub
mov
jmp
jp
fisubl
add
adc
or
stos
inc
add
jp
add
faddp
roll
arpl
int
or
mov
jo
sub
movsl
out
mov
or
cld
inc
movsb
mov
popa
aam
sub
mov
mov
test
in
dec
push
sub
das
ss
mov
fnstcw
div
scas
out
icebp
or
inc
aam
scas
mov
add
shr
sub
adc
movsb
lret
mov
mov
ja
test
mov
aaa
popa
outsl
pop
cmp
sahf
mov
sarb
pop
sbb
test
xchg
aam
pop
sahf
loopne
mov
jns
inc
ljmp
stc
inc
jne
sub
movsl
or
mov
mov
lods
ficoms
dec
adc
dec
pop
into
ret
les
mov
pop
inc
sbb
dec
ljmp
imul
sbb
shll
nop
icebp
xchg
jne
sub
dec
fwait
dec
dec
roll
sub
jne
out
pop
popf
out
add
rcrb
push
inc
orl
xchg
jnp
push
out
jo
and
add
push
jl
mov
mov
cmp
adc
out
xor
pop
or
adc
aas
xchg
sti
sbb
and
and
jecxz
jecxz
cs
mov
popf
jnp
xor
popa
in
addr16
sbb
sub
xchg
out
loopne
inc
shr
adc
pop
icebp
jae
mul
sub
call
jg
sub
sbb
ret
outsb
sbb
jns
mov
out
dec
xchg
test
mov
xor
mov
add
stos
cli
add
jnp
js
rorb
cmp
enter
cmp
lret
insb
in
xor
pop
div
adc
mov
hlt
or
dec
mov
or
mov
popa
ja
pushf
test
push
pop
and
or
dec
sbb
push
and
and
or
lret
mov
mov
cltd
loop
jg
fucom
int
sub
add
fs
jbe
mov
add
and
popa
or
add
jp
lea
adc
add
sarl
jecxz
nop
jb
mov
mov
adc
repz
lea
fdivrl
jle
lods
or
cmp
or
xchg
add
mov
inc
lods
cvtps2pi
push
std
aas
ret
cmp
sub
lods
dec
mov
xchg
outsl
inc
or
imul
and
mov
cltd
and
test
test
popf
loopne
push
test
fcomp
mov
dec
xchg
mov
arpl
shll
ret
xchg
xchg
adc
icebp
cmc
mov
das
ror
in
jge
adc
mov
les
out
jle
mov
push
bnd
jne
xor
add
cltd
repnz
sti
not
jns
push
addr16
and
and
scas
cmp
push
inc
xorb
stc
jbe
mov
loope
mov
lods
add
jge
les
testb
add
cmp
dec
das
lds
fisubs
mov
dec
inc
mov
adc
es
lods
bound
or
icebp
dec
iret
outsl
mulb
pop
sbb
jno
aam
mov
out
or
test
repnz
pusha
std
cmc
adc
cmp
fadd
clc
sub
in
xorl
jae
shl
and
jmp
and
mov
adc
in
enter
lods
lock
and
rcll
notl
mov
stos
repnz
or
pushf
shl
sub
vmovaps
ds
dec
mov
lret
mov
or
or
ja
pop
or
push
xor
js
sub
xor
scas
sti
sub
fisubrs
rolb
jg
dec
adc
mov
inc
and
mov
jns
add
add
popf
pop
or
add
add
sbb
mov
fcoml
pop
imul
aaa
mov
test
aas
jmp
inc
lret
inc
push
iret
mov
push
push
insb
arpl
lret
lock
je
imul
andl
and
loop
cmp
xor
pop
cmpl
push
adc
ss
and
jns
inc
cwtl
rclb
cltd
mov
popl
mov
lea
mov
mov
cltd
in
addl
stos
pop
addb
insb
pop
lahf
insb
test
ret
in
testl
jbe
scas
lahf
popa
pop
sbb
ljmp
and
mov
nop
push
mov
mov
xorl
xor
xor
arpl
fsubs
inc
je
sbb
dec
xor
in
arpl
icebp
mov
aaa
push
stos
sub
mov
mov
shrl
movsb
cld
mov
jmp
idivl
mov
mov
lods
lcall
fisubrs
in
lock
orb
bound
xchg
xchg
cmp
scas
repnz
mov
pop
shlb
xchg
lds
or
dec
pushf
mov
mov
inc
aaa
lcall
mov
inc
test
mov
int
je
sbb
sbb
jno
das
dec
shll
sub
push
fdivrl
aad
xchg
sti
or
push
popf
and
adc
outsl
imul
adc
lods
dec
xlat
push
movsl
sbb
push
inc
add
std
ljmp
jge
lret
inc
in
test
jp
mov
fmuls
mov
inc
mulb
fisubrs
jo
insb
cmp
pop
mov
cld
xor
pop
lds
xchg
mov
dec
push
adc
cmp
leave
imul
pop
sub
xor
jnp
dec
je
mov
or
in
mov
xor
gs
std
add
jbe
and
adc
xchg
jmp
out
imul
xor
std
mov
push
inc
fcoml
je
sub
inc
mov
aad
jne
loop
pop
sbb
adc
mov
nop
xor
xor
int3
adc
test
or
cmp
insb
jmp
cmp
fldt
int3
stc
fldl
jb
add
jecxz
inc
fcoml
loope
inc
movsb
call
into
imul
test
out
out
push
shrb
pop
jne
popf
adc
jle
push
xchg
lahf
leave
xor
mul
out
stc
fists
push
idivb
xchg
stos
xor
push
sub
int
scas
adc
sbb
dec
hlt
jae
jp
aam
fnstsw
stc
push
loope
divb
ja
jge
inc
ljmp
mov
out
cmpb
or
pop
fwait
jno
mov
pop
and
add
lahf
rolb
adc
sub
sti
mov
clc
hlt
enter
inc
xchg
orb
test
jnp
push
repnz
pop
call
pusha
shlb
xor
dec
dec
pop
xchg
hlt
jb
mov
add
sbb
mov
push
out
push
inc
and
fucomi
enter
addr16
test
nop
mov
ret
jmp
mov
sbb
cmp
das
add
sbb
std
inc
xchg
repnz
mov
mov
enter
fisubl
and
stc
push
mov
inc
dec
call
push
rorl
bound
lahf
cmp
jae
cmp
pop
or
xor
push
loopne
adc
add
sub
add
fs
jmp
aaa
adc
or
mull
jp
dec
leave
gs
sub
mov
mov
jnp
pop
mov
ja
jp
fiadds
int
or
popf
sbb
repnz
cmp
shlb
push
les
lods
popf
push
push
sub
in
loop
xchg
jmp
cs
jb
fstpl
stos
inc
mov
adc
pop
std
mov
arpl
jne
and
xlat
icebp
adc
mov
cmpsl
xor
clc
xchg
adc
dec
aas
add
fadd
shll
push
adc
jge
into
dec
push
imul
rorl
in
je
adc
jge
adc
lcall
jb
pcmpeqb
dec
xor
cld
aam
or
xor
cmpsl
cmp
and
inc
add
loope
fldcw
sbb
fcom
insb
adc
test
cmp
iret
insl
push
aas
cwtl
push
add
fcoml
rclb
pusha
les
jns
cmp
jne
adc
cmp
cld
or
push
mov
icebp
stos
push
lock
insl
adcb
cmp
sub
fnstcw
mov
add
pop
popa
lea
sbb
or
push
in
push
add
pop
fst
hlt
ja
std
out
lret
jecxz
adc
fcomps
sub
push
dec
mov
rclb
lods
out
loop
or
adc
dec
push
les
mov
cltd
jno
jp
jno
pop
out
in
jnp
xchg
adc
pop
call
and
xlat
xor
pop
add
inc
sbb
inc
ficomps
mov
loope
xor
into
push
aad
xchg
push
popf
cmp
iret
dec
mov
push
jbe
icebp
adc
aad
pop
int3
sbb
push
stos
pushf
out
pop
xchg
in
aad
shll
sub
or
aad
add
xchg
mov
test
enter
push
mov
xor
mov
pusha
scas
xor
pop
jmp
jo
rcrb
adc
mov
sbb
mov
xor
loopne
lods
cwtl
push
test
push
cmp
test
ret
test
cmp
inc
inc
clc
cwtl
xor
mov
pop
stc
out
sti
lds
adc
pop
out
lods
cmpsb
inc
lea
and
mov
jge
mov
xchg
pop
mov
mov
jecxz
out
bound
or
idiv
or
sub
imul
outsl
movsb
mov
repnz
sub
adc
xor
pusha
lods
andnps
jl
js
pop
icebp
mov
call
mov
inc
das
cmpsl
or
jp
or
into
xor
sub
jecxz
pop
idivb
int3
rorb
cmp
sub
cmpsb
out
rcr
inc
adc
adc
push
dec
xor
pop
arpl
in
xchg
mov
mov
ffree
mov
add
inc
pop
dec
or
fcomps
lret
cmp
adc
iret
in
sbb
test
addl
xorb
mov
orb
int3
xor
pusha
push
into
lret
shl
jmp
out
mov
stos
test
popa
mov
in
xchg
jmp
mov
add
bound
shll
jl
shrb
nop
arpl
jne
xor
fcmovu
pop
sub
jo
jl
add
sub
ds
jo
outsb
xchg
imul
into
mov
mov
hlt
sbb
insl
sub
push
addr16
xlat
cli
mov
stos
mov
mov
pusha
imul
and
xchg
lcall
jecxz
inc
icebp
push
xchg
inc
push
scas
xlat
jns
mov
jp
les
jge
and
or
cmp
cld
outsl
ljmp
push
inc
mov
sbb
cmp
dec
fmul
add
movsb
fstps
in
jb
pop
mov
repnz
std
neg
gs
add
dec
adcl
aaa
fiadds
inc
test
push
mov
and
clc
je
mov
shrb
mov
in
stos
inc
dec
inc
jg
mov
insl
jne
add
ja
lret
gs
cmc
out
fwait
ds
sub
enter
ds
rcll
insb
adc
je
sbb
adc
add
pop
sub
scas
popa
mov
add
fstpl
rolb
dec
in
out
mov
subb
shrb
add
sub
add
adc
add
adc
pusha
sbb
lods
inc
jne
in
add
scas
inc
aam
out
in
cmpsl
xchg
jmp
cld
jp
test
int
gs
inc
scas
push
mov
inc
outsb
inc
push
add
mov
movsb
imul
out
fistpll
pop
scas
xchg
pusha
cmpsl
push
dec
fdivs
in
or
dec
sbb
mov
pushl
sar
lea
mov
dec
loope
xchg
mov
push
sub
pop
xor
or
rcrl
mov
shr
pop
ja
lret
and
and
rcrl
sbb
inc
call
jo
loope
xlat
xor
xor
int
jmp
insb
mov
push
sbb
mov
jmp
inc
enter
mov
cmc
les
icebp
xchg
rorl
call
pop
sti
jae
pop
jns
repz
and
loop
sbb
mov
jge
adc
fmuls
ds
sub
sbb
lret
sub
adc
jl
popf
push
dec
in
adc
leave
jge
adcb
out
dec
arpl
adc
nopl
cmp
mov
lcall
fbld
imul
rcll
xchg
pusha
scas
sahf
rcrl
scas
add
sub
mov
fbstp
jne
cwtl
push
ss
ss
int
mov
fldt
sbb
int
push
pop
int3
xor
and
sub
mov
adc
mov
loope
cmp
aaa
pop
popa
jge
stc
xchg
and
or
sbb
clc
adc
xor
adc
xchg
mov
gs
and
lret
pop
jae
xor
jg
cmc
ja
mov
jl
in
loop
sub
test
int
mov
mov
ret
mov
dec
mov
outsb
mov
add
xor
mov
jl
jg
cmpsl
pop
testb
js
int
push
cmp
loope
xchg
sahf
jo
das
jp
xor
inc
push
lods
cmc
sti
xor
idivl
rcll
cmp
sub
ficomps
sbb
ljmp
pop
inc
add
sbb
inc
fisubl
mov
fcomps
fldenv
aaa
push
mov
dec
xchg
sub
ret
dec
test
sbbb
mov
mov
mov
ss
aam
stc
or
ret
cwtl
sub
popa
leave
bound
lock
ret
enter
mov
sti
jns
or
into
popf
movsl
jg
data16
movsl
bound
xchg
adc
jb
add
ja
or
mov
imul
addl
xor
call
mov
cmp
inc
shlb
imul
jp
int
mov
dec
orl
fs
or
movsb
dec
xchg
loop
and
leave
pop
xor
cmpsb
sbb
jae
xchg
dec
aas
sub
and
mov
xchg
popa
test
push
test
leave
jne
fsubl
pop
repz
outsb
and
pop
push
add
cltd
les
movsb
pop
adc
ss
cmpsb
testl
in
pop
lods
imul
fcoml
dec
inc
das
scas
ficoms
pop
adc
shll
orb
fnstsw
xchg
sbb
push
inc
adc
je
bound
xor
jns
xor
push
iret
data16
stos
xor
out
jp
and
push
xchg
rcr
or
stos
les
add
inc
iret
pop
xlat
pop
sbb
pop
cltd
pop
push
and
sarl
daa
popa
mull
lret
fimull
and
sbbb
add
add
fiadds
xchg
mov
repz
sub
cmp
in
cmp
lea
dec
mov
in
jecxz
xor
test
inc
hlt
aad
enter
adc
fsubs
mov
jb
inc
movsb
mov
in
addl
cs
rorb
shlb
adc
orl
sbb
push
shl
jno
loope
into
mov
jg
mov
and
mov
pop
mov
in
das
pop
inc
or
jnp
cmpsl
add
fldt
iret
cmpsl
loopne
add
lcall
sub
cmpsb
xor
add
xor
movsl
mov
clc
add
das
cltd
imul
leave
testb
push
cmp
mov
cs
dec
pop
dec
cli
lret
jno
cs
jp
lds
cmpsl
xchg
ret
out
les
mov
pusha
jnp
int3
cmp
add
xchg
mov
cmc
addr16
lock
lock
loopne
xor
xchg
ljmp
dec
jecxz
push
scas
xchg
push
inc
ss
into
add
pop
cmc
sahf
xchg
jmp
sub
cmp
sti
inc
pop
test
into
and
xchg
xor
push
inc
fs
dec
xor
mov
mov
sti
inc
sub
mov
and
ljmp
rcll
mov
or
nop
mov
adc
pop
or
ljmp
in
movsb
lock
and
repnz
data16
mov
xlat
stos
xchg
adc
lcall
in
rorb
sbbl
lret
sbb
push
cmc
cmp
out
mov
cli
adc
push
adc
loope
jo
add
addr16
lods
sbb
mov
push
inc
mov
adc
repnz
sub
mov
scas
cmp
dec
cmc
pop
in
mov
arpl
jecxz
enter
mov
std
and
sub
cmp
test
jno
pop
jns
push
hlt
xchg
pop
int3
aas
jbe
or
pop
pop
insl
and
cmpsl
mov
insb
fimull
pop
data16
bound
addl
dec
mov
mov
cmp
lods
imul
jp
or
mov
rcrb
adc
pop
xor
and
jo
jb
rorb
fsts
aas
pop
jbe
xor
cld
divb
add
adc
or
loope
push
mov
or
sub
sti
cmp
cwtl
cmp
xchg
lds
ss
xchg
sub
and
add
mov
jns
mov
lea
lock
je
cli
loope
add
push
rol
sbb
fsubr
cmpsl
pop
rorl
push
cld
jle
mov
daa
nop
rorb
jg
jb
dec
aad
es
and
les
mov
mov
jb
outsl
fsubrl
inc
mov
lods
shll
repnz
pusha
cmp
and
call
xor
mov
dec
dec
mov
ss
out
lds
ret
cli
add
xchg
cmp
sbb
mulb
lahf
lcall
stos
fcoms
stos
outsb
cmp
les
ret
or
cmp
xchg
incl
out
xor
scas
into
sbb
sub
cmpsb
push
call
test
push
pop
push
and
pop
out
xchg
cmp
push
jecxz
dec
jo
mov
or
pop
inc
add
xor
mov
insl
and
jno
cs
cmp
mov
jecxz
lock
shlb
push
jp
jg
xchg
into
in
pop
adcl
sub
pop
push
ja
loopne
jb
xchg
pop
stos
dec
movsb
pop
xor
cmp
push
ret
cmpsb
movsl
and
outsl
push
add
jmp
mov
inc
cltd
paddq
enter
jae
in
dec
stos
mov
add
sbb
js
cmpsb
icebp
mov
sub
push
push
lods
sbb
mov
pop
or
add
push
lods
inc
inc
adc
dec
pop
subb
mov
mov
out
ficompl
hlt
lods
push
leave
push
jge
add
ljmp
movsl
dec
daa
pop
imul
ds
jns
pop
js
std
mov
shlb
neg
mov
xchg
jne
or
dec
adc
insb
add
sub
sar
aas
mov
ret
int
push
dec
in
and
inc
jle
mov
jg
mov
and
push
sub
jnp
mov
mov
jl
jg
inc
push
cwtl
fdivl
lods
xchg
pop
popf
cmp
sbb
and
inc
xlat
popf
mov
xchg
push
loop
repnz
dec
in
adc
idiv
popf
ret
cmpl
psubsb
jo
loope
jg
cli
in
insl
cli
fdivs
xor
lret
ds
lret
out
bnd
in
xor
lahf
test
jmp
dec
push
aaa
mov
fisubl
push
inc
pop
cli
aas
sbb
popa
xor
jecxz
dec
lock
inc
cmp
cwtl
inc
test
mov
xor
sub
ljmp
insl
cli
sub
pop
std
dec
call
fs
jae
mov
in
adc
sbb
adc
negb
mov
icebp
in
sub
mov
popa
push
xchg
dec
push
int3
pslld
or
aad
loop
andb
scas
push
int3
dec
xlat
pusha
mov
enter
dec
lahf
pop
jae
inc
mov
mov
pop
sub
fldt
fmull
ja
dec
sbb
lods
jle
call
mov
sahf
adc
cmp
out
sub
or
out
arpl
and
stc
loope
push
jl
cltd
adc
pop
add
jmp
mov
mov
cltd
jmp
jbe
jnp
mov
jnp
dec
push
orl
inc
and
xor
fwait
shrb
mov
xor
mov
dec
lea
int3
out
fstpt
das
xor
fisubrl
repz
inc
ss
or
lds
andl
inc
mov
mov
pop
mov
sub
push
and
icebp
aaa
jae
pop
jno
rclb
cmpsl
pop
mov
mov
xlat
mov
mulb
lods
in
pop
pop
mov
out
hlt
xor
gs
xchg
xor
das
addl
clc
leave
inc
xchg
pop
jns
sub
sub
mov
jns
xchg
and
push
adc
call
and
or
jge
pushl
sbb
xchg
add
xor
hlt
mov
insb
ss
xor
mov
xchg
ja
mov
sub
cmc
push
mov
gs
out
movsb
test
jle
dec
and
aas
push
xchg
mov
jns
mov
test
cs
xor
frstor
lcall
pusha
gs
shrb
jecxz
mov
sarl
mov
stc
ficoms
jnp
sub
sub
sbb
push
inc
dec
adc
sbb
pop
add
mul
fs
jnp
jg
jge
xchg
lods
roll
mov
bnd
xchg
push
popf
sub
xchg
push
test
or
les
xor
jbe
xchg
xor
scas
cld
cmp
insl
adc
add
pop
push
fnstenv
fistl
leave
add
cmp
bound
ds
mov
je
push
mov
mov
or
inc
push
std
loopnew
out
or
cmp
dec
adc
pop
sbb
fdivs
push
inc
aad
dec
cmp
aaa
scas
sbb
fs
push
rcrl
out
clc
jb
jg
nop
idivb
bound
xchg
pop
popa
ljmp
xor
add
insl
stc
adc
jbe
mov
cmp
out
enter
pop
aas
sahf
mov
inc
outsb
movsb
jnp
outsb
call
cvtps2pd
xchg
call
or
push
mov
pushf
addr16
mov
cmp
or
movb
aam
mov
pop
push
push
pop
xor
mov
push
jl
in
mov
jns
cmpb
mov
mov
pop
push
mulb
inc
es
and
rcr
mov
dec
jns
push
or
cmp
aas
das
jo
lret
push
jns
shll
sarb
ljmp
xchg
xchg
xor
pop
daa
aam
movsl
movsl
xchg
stos
aas
dec
ss
fwait
and
xor
sub
js
sbb
addr16
test
scas
mov
adc
fisttps
mov
in
in
dec
insl
and
sbb
imul
lods
jle
xor
xchg
in
push
mov
stc
cli
cs
fwait
stc
jl
jns
xor
out
push
es
pop
in
lahf
test
pop
sub
movups
or
inc
leave
mov
in
sub
xor
mov
es
cmp
jge
mov
cmc
xchg
add
sbb
cwtl
mov
adc
lahf
or
xor
es
jb
cmpsl
xchg
movsb
ljmp
pop
cltd
push
lods
sub
mov
jl
sub
stos
mov
add
aaa
add
add
jns
std
in
in
mov
cmp
sub
out
cmp
push
lahf
ljmp
sarl
xor
push
mov
lods
sbb
jg
mov
test
sub
lret
out
adc
and
sti
ret
mov
pand
inc
lret
sub
in
push
pop
mov
dec
rolb
pop
ds
imul
inc
mov
incb
sub
int
inc
adc
xchg
into
jb
mov
lods
dec
push
es
jle
mov
or
adc
add
mov
iret
inc
lcall
adc
sbb
cmp
mov
sbb
insl
xchg
mov
jge
mov
aam
out
jbe
mov
test
adc
xchg
adc
inc
push
test
jb
jmp
iret
lret
jmp
rcrb
loop
test
pop
sub
sahf
rcrb
rcll
movsb
or
add
sub
adcb
mov
aas
lahf
xchg
xchg
jle
sub
push
mov
in
divl
sub
movsl
stc
jle
push
rcrb
jmp
pop
mov
jnp
xor
lcall
fiadds
inc
outsb
dec
or
mov
pusha
jae
enter
sub
sbb
in
test
imul
adc
mov
icebp
push
aaa
aas
das
repnz
aas
lret
popf
inc
pop
mov
mov
popf
movsb
imul
test
pop
test
repnz
cmp
jl
dec
inc
lock
in
inc
add
hlt
imul
jl
popa
and
aam
xchg
dec
or
jo
pop
enter
rcll
inc
jbe
outsb
imul
rclb
mov
js
adc
popf
push
cs
out
and
push
ds
fsubrl
and
mov
jecxz
push
adc
pop
mov
and
pop
and
xchg
movsb
cmp
sti
jne
fistpl
dec
and
and
in
leave
and
cmp
clc
ret
push
dec
dec
jae
lcall
mov
imul
shlb
in
pop
sti
cmpl
inc
xor
mov
lds
mov
mov
loop
cmp
and
lock
mov
inc
js
pushf
rcrl
test
inc
lock
mov
adc
sbb
ds
jne
xor
leave
pop
cltd
lret
fwait
rolb
inc
pop
mov
jmp
sbb
dec
repnz
into
repz
mov
jmp
inc
mov
addr16
jecxz
or
jmp
push
aam
fdiv
neg
cli
shl
and
inc
aaa
stos
mov
pop
inc
sbbb
ret
div
mov
mov
jge
adc
and
and
sbb
cmpsl
mov
add
test
stc
scas
loop
test
mov
addb
popf
mov
mov
gs
pop
notb
arpl
push
movsb
xor
pop
cmpl
jge
mov
ss
fwait
rol
shll
insb
push
ja
dec
out
fs
js
or
pop
push
call
iret
scas
ret
cmp
out
fisttps
movsl
sbb
vorpd
dec
cmp
cmc
push
or
add
or
sub
mov
jmp
out
push
enter
push
mov
mov
pop
cltd
shrl
mov
decl
sti
adc
lods
xor
dec
in
and
sub
jge
add
jecxz
mov
in
xor
stos
xchg
aam
pop
sbb
lret
imul
mov
xor
pop
out
fwait
out
pop
in
jle
xor
insl
and
mov
and
hlt
mov
ficoms
pop
cmpl
outsl
lcall
cli
mov
xchg
movsl
jmp
filds
aam
mov
mov
mov
aam
add
fsubl
or
and
lods
push
jo
pushw
push
add
inc
imul
jle
movsb
cmp
xchg
scas
xchg
dec
add
fsincos
shrb
mov
mov
inc
pushf
test
fwait
jo
cltd
jnp
rclb
sahf
sub
fld
pop
pushf
xor
cmp
dec
js
and
das
jecxz
sub
icebp
lret
xor
or
inc
pop
cmpl
xor
cmpsl
inc
iret
and
mov
mov
imul
js
ds
pushf
dec
mov
call
insl
xlat
lret
fwait
ss
jmp
adc
inc
jb
add
mov
stc
call
fst
aas
es
daa
sar
loope
ficoml
dec
std
xchg
ret
or
stc
inc
daa
jno
imul
movsb
inc
aad
mov
mov
xor
sbb
je
and
cmpsl
ds
jo
hlt
lods
push
int
sbb
pop
jne
xchg
inc
das
in
imul
add
ljmp
xchg
push
push
cld
jmp
fstps
inc
pop
pushf
push
mov
dec
addr16
pop
shl
adc
push
adc
jae
movsb
lret
mov
mov
add
jns
push
fcmovne
js
push
ret
mov
dec
out
mov
addr16
shrl
shrb
adc
mov
push
popa
pop
sub
mov
lret
push
lcall
repnz
inc
dec
push
daa
xchg
cmp
jp
loopne
imul
dec
lret
push
inc
mov
sbb
cs
push
sti
add
xor
divl
aad
sarl
pop
rorb
inc
enter
loopne
cld
push
inc
inc
cmp
mov
fadds
jae
leave
repnz
cmp
dec
push
and
sahf
inc
dec
pop
adc
ret
hlt
test
addr16
sbb
sahf
xorb
ja
lcall
out
sbb
bound
repnz
mov
lcall
repnz
jae
push
shlb
rcr
lret
inc
popa
mov
xchg
and
scas
cmpsl
cmc
mov
dec
sbb
add
loopne
xor
pop
dec
std
add
scas
inc
jns
inc
test
mov
add
or
movsl
cmpsb
test
notl
pop
mov
dec
xchg
push
lahf
test
mov
imulb
aam
lds
xchg
inc
pusha
xchg
cmp
leave
gs
xchg
or
or
xor
cmpsl
push
push
cmp
lret
ja
out
and
dec
jo
push
popf
out
call
jl
cmp
loope
ds
testl
push
fbld
aas
cmp
imul
enter
push
test
dec
cmp
xchg
cmc
test
daa
cmpb
daa
cli
jecxz
fs
je
arpl
int3
dec
mov
popa
adc
pusha
daa
jl
mov
pop
pop
inc
mov
lret
mov
call
and
adcb
subb
mov
cmpsb
cmp
and
nop
mov
mov
insb
stos
add
add
imul
xor
popf
xor
cmp
arpl
jmp
pop
loopne
and
aad
jbe
or
inc
in
sbb
mov
pop
and
pop
or
xchg
sbb
iret
inc
test
sbbb
cmpb
ja
sub
mov
fwait
les
jne
lret
jb
rolb
mov
clc
sbb
sub
xor
stos
push
sbb
push
lretw
push
and
jb
test
addb
out
ss
add
jbe
jge
jo
rcr
popf
add
adc
push
sub
inc
test
aad
out
mov
lret
lret
subl
fmul
repnz
insl
lret
loop
mov
fistps
nop
icebp
mov
jle
inc
cmp
mov
mov
jg
movsb
xchg
repz
not
xchg
xchg
inc
push
lahf
pop
add
xchg
push
mov
fwait
pop
xor
fs
jmp
and
cmp
in
hlt
cmp
push
jmp
sbb
and
sub
arpl
fidivrl
fwait
push
pop
push
xchg
sub
adc
popa
adc
in
mov
sbb
int3
mov
cmp
cmpsl
stos
xor
and
push
or
out
mov
popa
mov
sbb
jmp
loopne
mov
test
and
cli
push
fdivrl
subl
dec
sub
xchg
or
xchg
adc
xchg
dec
jbe
mov
inc
inc
dec
sub
jne
int3
dec
xchg
xchg
imul
jecxz
cmpsl
inc
in
call
or
jecxz
enter
dec
lea
stc
loope
fs
addr16
mov
inc
xor
test
mov
scas
insb
mov
fisubs
mov
ds
jp
pop
sbb
testb
jo
pop
cmp
sbb
out
jl
ud0
xlat
int3
push
imul
popa
inc
mov
mov
outsb
jmp
test
dec
mov
add
aas
add
dec
aaa
mov
add
imul
ret
xor
mov
adc
add
cmpl
cs
rolb
mov
dec
push
sub
rorb
leave
and
add
outsb
dec
pop
cmc
jg
enter
mov
imul
jle
xor
jne
scas
sub
lahf
out
fdecstp
leave
aam
mov
imul
icebp
push
push
inc
xor
mov
lret
stos
aaa
dec
movb
ret
jnp
sbb
sti
or
adc
fwait
fs
inc
or
xchg
jl
orb
mov
pop
mov
pop
pop
mov
das
imul
push
es
xchg
sti
push
bound
fiaddl
frstor
and
leave
call
and
adc
cmp
push
in
jbe
jb
lods
xchg
xor
lret
aam
imul
jmp
jno
adc
xor
xchg
xor
xor
cmpsb
addl
xchg
sbb
mov
ficoml
notb
mov
jne
jns
or
jne
jp
pop
das
inc
pop
cltd
xchg
pop
and
jne
pop
add
mov
rcrl
shll
adc
in
xchg
sahf
mov
add
mov
lcall
add
or
jae
adc
daa
cwtl
adc
or
out
pop
pop
dec
add
inc
pop
add
dec
xchg
pop
movsb
adc
jno
push
adc
push
push
xor
std
loope
aam
xor
gs
push
stc
jne
pop
mov
mov
adc
fwait
shrl
jo
cmp
xor
add
jns
cltd
je
lret
mov
subb
adc
fwait
sbb
jb
pop
sbb
notb
hlt
or
or
jns
outsl
add
std
or
cs
push
loop
in
jmp
xchg
jg
dec
pop
cmp
pop
mov
outsb
clc
pop
bound
fidivrl
nop
das
adc
js
movsb
xor
adc
mov
icebp
fistl
les
cmovne
das
mov
dec
cmp
cld
jb
subps
loopne
rorl
push
pop
testb
jl
dec
out
jns
pop
mov
fadds
add
inc
shrb
inc
rorl
shll
and
or
jmp
push
inc
insl
sti
test
int
loopne
aaa
repz
lahf
lds
mov
add
dec
addr16
pop
loope
gs
pusha
dec
cmp
hlt
pushf
jl
lock
inc
ret
outsl
addb
pusha
lds
arpl
loope,pn
das
pop
xchg
stos
or
frstor
push
push
inc
add
popf
mov
mov
push
xchg
sub
cs
and
add
cwtl
pop
mov
jecxz
inc
xor
cmp
jne
mov
push
sti
stc
lea
imul
jp
daa
loopne
mov
sub
shl
adc
mov
int3
jmp
popa
subb
sub
and
into
aam
push
push
lods
cmpsl
das
fsub
pop
dec
stos
sub
sarb
jp
test
pusha
jae
lods
xlat
cmp
pop
jmp
push
add
fs
jno
in
adcw
dec
fsub
shrl
sahf
fistpll
pop
lret
pop
pop
test
cmp
out
mov
xchg
les
dec
mov
ret
dec
jl
out
add
insl
jns
inc
mov
xor
jle
push
leave
xchg
dec
rorl
mov
mov
repz
pop
or
cs
inc
stc
ja
adc
fdiv
xor
push
stos
lea
xor
hlt
sbbb
mov
test
sbbb
sbb
aas
cmp
xchg
add
leave
cmovle
movsb
addr16
mov
test
push
shll
lret
sbb
movsl
mov
frstor
xlat
roll
mov
mov
out
xlat
into
dec
xchg
adc
sbb
adc
inc
adc
icebp
jbe
adcl
ss
push
jb
inc
loope
xchg
rcrb
es
popf
ja
jae
stos
pop
mov
inc
sub
test
iret
test
adc
adc
or
xchg
enter
add
filds
xor
outsl
cmpb
cmp
call
ljmp
push
sub
fneni(8087
out
cmp
xchg
daa
inc
pop
dec
je
mov
dec
add
das
daa
ficompl
ret
jnp
adc
in
loopne
jno
mov
dec
jl
notb
sbb
ud1
mov
fisubrl
mov
mov
xor
int3
cltd
in
mov
shlb
iret
lock
scas
sbb
test
stos
or
shl
int3
xchg
lahf
sahf
clc
pop
loopne
ds
lock
and
scas
sub
sub
repnz
ficompl
paddd
mov
push
jg
cmp
ja
jns
ss
cmp
jnp
dec
aad
into
mull
add
or
out
dec
sub
jae
insl
pop
into
sub
xrelease
iret
filds
mov
sahf
pusha
mov
mov
jo
and
adc
sarb
pop
call
xchg
and
cmp
pop
mov
lock
inc
dec
pop
dec
or
mov
pop
adc
shll
lods
popa
fcompl
lods
insl
xor
lcall
inc
sbb
xchg
mov
repnz
addr16
pop
les
ja
sahf
mov
pusha
xchg
mov
pop
pop
xor
dec
push
xchg
or
mov
insb
pop
jl
lods
mov
cwtl
jne
mov
pop
aaa
mov
cmpsb
sbb
ljmp
dec
dec
or
pop
fbstp
sub
xadd
xlat
add
in
sbb
jo
push
bound
pop
movsb
or
lods
mov
pop
pop
push
popf
xchg
popa
das
aam
sbb
ret
daa
dec
aam
jo
pop
scas
in
aad
fmulp
add
mov
ja
insb
fsubl
ss
sub
mov
sbb
es
jmp
cmp
mov
lret
pusha
add
jecxz
jne
dec
sbb
mov
lret
mov
push
lahf
push
fistpl
jge
ds
sbb
popa
stos
loopne
pop
imul
cmp
fs
dec
sub
rcll
cs
out
stos
cmp
add
das
inc
out
jnp
imul
cwtl
xor
nop
fdivl
mov
into
fstl
mov
scas
push
ss
jle
inc
loopne
or
jecxz
push
mov
xchg
mov
push
scas
push
movsl
cmpsl
mov
out
fadds
enter
mov
adc
outsb
push
jp
xchg
jmp
mov
andl
outsb
int3
pop
sub
xor
sar
icebp
and
cs
inc
pop
mov
inc
jmp
lea
xchg
mov
lcall
jns
hlt
jp
sub
mov
rol
jno
fsub
jbe
lahf
mov
mov
xchg
jle
mov
inc
lcall
mov
cmpsl
rolb
insl
push
repz
fisubrs
xchg
or
mov
push
cmpsb
loop
cmp
out
mov
and
ljmp
mov
add
cmc
xor
xchg
mov
subl
insb
dec
fiadds
pop
lods
js
xchg
movsl
cmp
popa
cmp
or
repnz
add
addl
inc
lock
push
mov
cltd
or
movsb
push
inc
cmp
outsl
out
or
or
adc
and
add
mov
lods
stos
out
push
das
lods
dec
ss
insb
lret
mov
lods
or
iret
add
scas
xor
jecxz
mov
nop
push
xorb
shl
xor
in
leave
jns
inc
cmp
push
or
sti
mov
pop
mov
lods
dec
in
dec
test
ror
jne
xchg
push
iret
movsl
mov
into
mov
incl
xchg
pusha
into
vpsrlq
jnp
stos
outsl
jg
ljmp
xchg
clc
lods
nop
sbb
data16
add
test
xchg
outsb
xor
or
sti
push
or
and
xor
mov
pushf
jnp
fistpl
push
cmp
in
lock
dec
and
sti
sub
popa
push
in
lods
lret
cmpsb
mov
cmpsb
out
mov
xor
cmp
mov
push
mov
std
adc
out
push
es
gs
movsl
cmc
cmp
lret
mov
ret
lea
cwtl
inc
mov
jno
mov
test
mov
addr16
or
sbb
mov
inc
cmp
in
dec
mov
mov
fldt
fdivp
adc
lds
adc
pop
rcrb
fs
inc
pop
imul
es
adc
lsl
pop
xchg
lcall
pop
or
inc
divb
and
jle
clc
test
cmc
jge
mov
lret
push
std
in
adc
sbb
xor
sar
sbb
push
lret
cmp
jnp
jecxz
lds
addr16
dec
lock
fmul
aad
ja
adc
pop
adc
call
xchg
repnz
test
xchg
adc
in
sub
icebp
adc
ret
rcrb
add
mov
in
scas
iret
stos
daa
xor
push
testb
fsubrs
js
xchg
pop
lret
adc
push
ficoms
sub
cmc
inc
jnp
pop
sbb
cvtdq2ps
mov
or
cltd
cmp
fmull
ret
adc
repz
jo
into
pop
sbbb
dec
jge
fldt
in
cmp
sbbl
pop
pop
jns
mov
fst
add
jp
jbe
ljmp
aas
repz
lds
jns
cld
pop
popa
in
arpl
sub
push
push
inc
stos
or
mov
jb
cmp
xor
bound
lahf
fisttpl
xor
jp
push
fnstcw
sub
das
cmp
jmp
pop
cmpl
cmp
sbb
movsl
xchg
lods
fisubl
push
jmp
and
movsb
fwait
xor
pop
mov
sbb
add
mov
jae
fwait
shrl
int
ljmp
jl
in
in
scas
jns
rcll
fbstp
movsl
aad
dec
and
cmp
cmpsb
inc
hlt
jmp
sub
pop
ljmp
dec
movl
jnp
jle
je
inc
icebp
inc
mov
out
push
rclb
xor
jnp
inc
xchg
sub
push
sbb
hlt
sub
cmp
cmc
mov
fiaddl
rorb
mov
adc
cmp
outsb
push
add
pop
aad
jp
repnz
or
repnz
in
insb
xlat
sub
add
movsl
in
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
jmp
aam
faddl
mov
das
hlt
adc
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
fdivr
mov
xchg
cli
lods
sbb
jne
mov
mov
movsb
lret
iret
pop
adc
ret
cwtl
mov
or
lcall
rclb
sbb
mov
mov
jbe
push
cmp
sti
and
mov
cmpb
xchg
mov
pmulhw
inc
out
xlat
data16
divb
in
shll
ljmp
jl
adc
scas
fsubp
and
mov
cmpb
or
pop
mov
out
dec
leave
cmpsb
cmpsb
sub
pop
fdivrs
scas
adc
sub
fidivrs
js
in
jg
lods
scas
cwtl
mov
daa
mov
scas
aam
fsub
mov
and
mov
js
in
das
cmc
adc
mov
das
hlt
in
scas
aam
faddl
call
aam
faddl
mov
das
hlt
lods
fistpll
das
imulb
mov
das
hlt
mov
add
std
das
hlt
lods
scas
aam
faddl
andl
lods
aam
fdivl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
fcmovu
lret
lods
int3
faddl
in
das
in
scas
aam
fadds
mov
fwait
mov
js
in
das
adc
fsubl
jbe
mov
movsl
aam
mov
in
das
hlt
lods
scas
aam
faddl
int
hlt
dec
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
das
hlt
lods
scas
aam
faddl
in
add
lods
mov
addr16
push
adc
mov
cld
inc
loop
iret
mov
adc
imul
jnp
sbb
push
jecxz
ret
lcall
addb
mov
add
jg
push
inc
inc
or
je
push
gs
inc
shl
enter
cmp
shrl
cld
jne
adc
add
and
adc
add
pop
fstl
mov
dec
jns
fldt
outsb
cmpsb
pop
mov
sbb
or
mov
jg
mov
bound
std
mov
pop
and
cld
pop
test
es
fld
stos
cs
andl
pop
movsl
jnp
sbb
imul
nop
lcall
lcall
stc
sub
push
sub
mov
dec
hlt
mov
cmc
inc
jl
notl
je
call
and
xchg
out
mov
out
arpl
cmp
jp
add
xchg
xchg
pop
sub
cmp
mov
cld
push
pop
lret
xor
clc
and
aam
and
int
in
orl
pop
mov
arpl
jp
daa
inc
mov
les
nop
cmp
dec
ljmp
pushf
outsl
inc
movsl
out
cltd
scas
xchg
jb
leave
add
ret
pop
daa
dec
jb
ror
out
jmp
lods
xor
cmp
mov
pop
adc
pop
insl
adc
mov
push
clc
cwtl
out
ja
cmp
push
in
sbb
pop
movb
popf
dec
fildl
pusha
jp
adc
ss
mull
jbe
pushf
and
jns
mov
fisubrl
rclb
jp
sub
out
adc
xlat
roll
adc
gs
movsb
jb
mov
sub
push
aas
aas
dec
inc
enter
jno
fsts
aaa
xchg
add
loop
dec
pop
dec
jl
test
gs
sbb
jmp
ja
ds
or
mov
inc
loop
push
fists
adc
rcrb
mov
cwtl
adc
dec
cmp
inc
gs
or
dec
mov
insl
orl
orl
addr16
dec
les
loopne
pop
pushf
xor
xchg
sbbb
js
mov
int
test
sub
shlb
aam
add
lret
outsl
fwait
jl
and
and
and
addr16
push
dec
cmp
adc
and
test
in
mov
dec
rorl
adc
mov
mov
sar
mov
leave
pop
xchg
test
xchg
popf
repz
add
pop
mov
stc
adc
loopne
sub
in
das
inc
std
setb
stos
cmp
shrb
pop
pop
pop
jne
insb
adc
sbb
mov
xchg
div
pop
iret
xor
mov
xor
fiadds
imul
mov
pop
dec
xor
in
sbb
lods
add
xor
lcall
rcrb
adc
jae
in
fcompl
out
inc
jb
sti
mov
sub
and
xorl
pop
and
push
inc
dec
jp
mov
jle
sahf
loop
int
aad
loope
test
dec
int3
push
lea
sub
cs
movsl
daa
push
loop
add
xchg
dec
inc
or
sbb
out
xor
and
rorb
cltd
dec
or
xor
or
ja
cltd
mov
test
lcall
jge
cld
mov
and
cwtl
inc
sbb
and
xchg
test
jno
aad
or
out
icebp
pop
and
js
in
fucomi
shll
andb
les
jl
lods
fs
into
pop
addl
sbb
imul
repnz
adc
jbe
stos
push
pop
mov
mov
subl
in
adc
rclb
out
imul
cmp
mov
cmpl
test
cwtl
iret
and
dec
mov
cmp
sub
sub
or
adc
pop
or
mov
ret
mov
leave
lret
ja
aaa
scas
scas
fisubrs
mov
loope
xchg
mov
addr16
adc
mov
xchg
xchg
mov
jno
mov
int3
cmp
dec
fdivs
loopne
outsb
xchg
jno
pop
mov
negb
lock
mov
fiadds
cmc
cmp
sbb
dec
jno
mov
cmp
pop
fistpll
idivl
sub
mov
or
fisttpll
or
aas
lret
lods
xchg
xchg
inc
cli
mov
and
test
fnstsw
push
adc
push
movsl
fdiv
das
jg,pn
push
mov
mov
push
int3
adc
les
subl
xor
incb
inc
xor
inc
leave
into
scas
enter
or
les
lds
rclb
icebp
movsb
fwait
mov
jbe
and
es
out
test
cmp
popa
adc
popa
xchg
inc
xchg
and
enter
push
in
xchg
push
das
nop
mov
or
jecxz
push
and
adcl
mov
push
xchg
in
dec
xchg
into
pop
lret
xchg
inc
xor
push
xor
xchg
pop
ss
inc
scas
shrb
ret
pop
mov
pusha
dec
orl
sub
and
jne
test
lcall
add
pop
xor
sbb
les
mov
enter
bnd
mov
jmp
jns
scas
arpl
jnp
push
xor
pushf
lock
jns
int3
lcall
int
push
mov
push
cmp
movsb
cmp
ret
pop
mov
add
aam
ds
int
popf
and
cli
mov
loop
dec
lock
dec
sti
imul
jmp
pop
sub
decl
dec
sub
sarl
mov
pop
popf
push
pop
insb
rorb
adc
aaa
jne
adc
popaw
mov
mov
mov
arpl
pusha
mov
push
dec
sbb
das
js
icebp
push
jb
sbb
pop
jnp
push
rorl
xchg
lds
cwtl
das
repnz
stc
cmp
les
test
cmp
inc
xor
daa
adc
out
xchg
or
or
mov
fisttpll
movsb
mov
out
or
mov
push
ss
lret
mov
sbb
lret
adc
jp
repnz
mov
pop
cmp
repz
and
lret
jae
popa
sbb
testl
nop
das
ret
aas
pushf
pop
push
xchg
inc
jmp
movsb
mov
push
mov
inc
lods
call
lds
repnz
rol
pop
dec
xlat
mov
ficoms
ja
cmp
inc
or
not
mov
je
scas
lcall
test
inc
add
in
aam
cmp
xor
stos
xor
jle
movsb
xor
data16
xchg
subl
sbb
js
in
inc
lret
aad
in
mov
jnp
mov
dec
ficoms
pop
jg
clc
neg
out
mov
incl
dec
addr16
mov
jo
mov
jae
nop
outsl
mov
add
fistpl
push
cmp
cwtl
jo
xchg
movsl
inc
lcall
nop
imul
test
mov
cs
loope
inc
pop
mov
xchg
push
adc
push
pop
loop
mov
add
in
cmc
lcall
xor
das
shl
sahf
add
hlt
imul
into
jno
andb
mov
lods
or
push
xchg
lds
xor
mov
pop
and
adc
push
xor
cwtl
push
cmp
adc
dec
xchg
dec
iret
mov
cmp
mov
stos
lds
xor
icebp
cmp
insb
xchg
adc
push
repnz
lods
push
mov
jmp
popa
jmp
mov
or
aas
testl
adc
sbb
adc
sbb
lcall
fcmovnbe
adc
sub
dec
into
pop
pop
inc
mov
test
dec
icebp
pop
inc
xor
das
pop
shrb
sbb
dec
addr16
mov
xor
jb
movsl
add
inc
pop
mov
ja
cmc
imul
dec
or
push
gs
xchg
lahf
xor
orb
xchg
push
fisubl
icebp
mov
push
sahf
negl
in
or
pop
insl
add
ret
push
and
xchg
mov
int
or
add
adc
push
jg
xor
out
push
pop
push
inc
dec
push
popa
mov
ja
cs
mov
je
into
mov
pop
inc
cld
dec
in
aam
cmp
jmp
push
jmp
cmpsb
test
lods
ret
push
inc
bound
add
inc
or
stos
inc
jne
jns
icebp
cwtl
push
ja
std
stos
movsl
out
cmp
addr16
arpl
cmp
int3
xchg
adc
xchg
adcb
pushl
and
push
popa
outsb
insb
call
mov
subl
clc
loopne
or
xchg
mov
or
js
arpl
jg
xor
cmp
cmp
mov
mov
xor
bound
daa
mov
sbb
icebp
lea
testb
bnd
imull
mov
xchg
mov
fwait
push
xor
sti
and
iret
dec
and
int
subb
repnz
mov
movb
aam
add
xchg
in
movsb
test
push
das
push
mov
adc
dec
sar
xor
insb
les
adc
push
xchg
out
push
pop
addb
iret
out
xlat
push
popa
js
pop
inc
shlb
mov
push
add
test
adc
xchg
jne
push
loope
sbb
dec
mov
fsub
push
cltd
mov
xor
sub
int3
adc
data16
loop
add
bound
lea
movsb
and
test
fstps
pop
pop
enter
rol
pop
dec
push
out
std
scas
popf
add
push
inc
xchg
cmp
xlat
mov
scas
cmpb
xor
dec
fistps
pop
insl
adc
dec
and
mov
dec
push
stos
mov
sub
addr16
push
cmp
jle
jge
sub
inc
repz
mov
ret
es
sbb
test
icebp
nop
xchg
addr16
pop
cld
movsl
mov
push
push
cmp
jle
cmp
mov
push
cmpb
xor
cmp
cli
cmc
fcompl
sahf
into
bound
xchg
cltd
inc
divb
mov
fsubr
aam
mov
and
psrlq
ss
aas
mov
lret
mov
out
scas
mov
xchg
popw
andl
je
rolb
fisubrs
jb
jne
mov
mov
stc
xchg
je
mov
scas
fcomps
stc
cld
jae
push
fists
scas
iret
xchg
inc
testb
lds
xlat
jae
mov
fiaddl
inc
mov
xor
jmp
pop
lods
cmp
lret
ds
mov
jns
rcrb
pop
repz
bound
push
in
pop
lods
sub
xor
ds
aaa
mov
test
or
andb
cmp
mov
test
test
push
mov
push
jp
adc
insl
mov
lahf
lods
and
cld
cmpsb
testl
mov
roll
enter
clc
outsl
mov
dec
mov
repz
cmp
sbb
cmpb
subb
adc
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
