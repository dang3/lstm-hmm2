sbb
stos
mov
mov
popf
loopne
pop
in
adc
xorl
or
pop
notl
popf
mov
imul
les
add
and
enter
jge
cmc
pop
fwait
xlat
or
and
das
xor
in
xchg
mov
lcall
xchg
or
dec
pop
cld
jae
icebp
decl
inc
inc
mov
or
lds
daa
je
adc
loope
out
setge
test
jo
addl
test
hlt
push
shll
adc
xchg
sarl
out
add
in
out
push
lds
arpl
stos
mov
arpl
mov
add
push
push
mov
jb
mov
xchg
dec
out
idivl
inc
int
cmp
dec
mov
in
dec
test
xchg
add
ss
add
pop
and
popf
adc
testl
push
sub
lahf
mov
xchg
in
and
cmp
addps
mov
sahf
xchg
push
test
iret
es
xor
inc
ret
and
test
inc
jl
out
repz
loop
sbb
jns
mov
shrb
mov
lock
roll
adc
xor
xor
lea
mull
lret
lock
inc
jae
push
stos
scas
addr16
push
mov
or
push
sahf
shr
scas
or
push
xlat
pushl
fbstp
xchg
lahf
or
repz
pusha
data16
dec
xor
xchg
sahf
cmpb
push
mov
ja
scas
mov
hlt
sbb
insb
lret
push
aad
in
and
lea
movsl
and
stos
xchg
hlt
in
sub
xchg
mov
sbb
or
add
xchg
jmp
pop
repnz
push
aaa
fdivrp
mov
and
xor
in
stos
mov
inc
lahf
cld
cmp
or
sahf
fdivl
jbe
inc
test
cs
insb
ret
xor
bound
jns
pop
mov
add
xchg
xchg
aad
inc
hlt
fucomp
adc
and
mov
sbb
and
lods
mov
sbb
mov
cmpsb
xchg
adc
ret
push
push
xor
adc
and
icebp
mov
daa
and
xchg
and
popa
mov
into
xchg
filds
pop
adc
outsl
stos
out
icebp
aas
repnz
daa
inc
test
jbe
inc
imul
pop
outsb
jo
or
fstps
ljmp
dec
ss
and
sub
les
outsl
fistps
mov
adc
push
gs
into
out
xchg
or
outsb
imul
jae
icebp
add
loopne
xchg
hlt
push
cwtl
outsb
mov
andl
and
push
jmp
mov
outsb
dec
jb
sbbl
inc
sub
cmp
mov
pop
loopne
add
cltd
scas
mov
test
sbb
das
pop
push
mov
js
js
fcmovnbe
push
push
cmp
cmc
mov
in
adc
xchg
ret
das
popf
clc
insb
clc
or
xor
pop
mov
hlt
sub
sbb
mov
mov
push
dec
dec
psubw
rorl
call
rcrl
cmc
jl
sub
xchg
push
mov
sbb
nop
cmpsb
xchg
cmpsb
push
jge
xor
xchg
andl
mov
jmp
push
clc
subb
popa
push
mov
loop
xor
push
mov
mov
mov
sub
test
cmp
test
fmuls
inc
lea
cld
inc
loope
stos
pop
lea
cmp
popa
aam
orb
xchg
xchg
rcrl
mov
ficompl
or
lea
mov
test
dec
xor
lahf
stc
or
jns
push
adc
iret
or
shll
arpl
lret
insb
out
loopne
jne
jg
popa
jg
enter
dec
push
lds
xchg
mov
mov
xchg
push
lcall
mov
mov
gs
push
xchg
jecxz
mov
inc
mov
fwait
jg
add
jle
sub
arpl
fmull
jmp
loopne
or
sub
clc
add
iret
jno
in
out
inc
push
popa
inc
inc
mov
lahf
or
mov
adc
gs
dec
aam
xor
mov
jb
gs
xchg
add
mov
mov
mov
out
cmp
test
pushf
test
xor
in
jnp
nop
cmp
push
mov
dec
pop
mov
aam
fstps
cmp
mov
push
and
mov
rorl
in
mov
pop
lock
mov
stos
push
mov
pop
in
sbb
cld
lds
pusha
js
jmp
mov
mov
nop
mov
roll
cmp
xor
mov
lods
es
ret
cli
jne
cmp
mov
jp
arpl
fstl
mov
es
or
ljmp
jns
xor
sarb
shll
cmp
cs
ficoml
jnp
xchg
add
sahf
and
inc
sbb
outsb
push
add
enter
stc
std
add
jo
cmpsb
xchg
add
adc
mov
push
ljmp
dec
mov
addr16
mov
out
out
cli
add
cmp
test
add
idivl
xor
pop
add
pusha
popa
xor
pop
sbb
aas
int
push
or
je
pop
mov
rcrb
pop
mov
sub
inc
aas
fcoml
fcompl
pop
or
std
mov
ret
movsb
fiaddl
add
cmpsb
ret
addr16
jle
inc
jp
mov
dec
sbb
mov
stos
repnz
lods
xor
in
mov
jb,pn
fisttpll
add
imull
aas
or
xor
xor
mov
or
mov
jg
lock
add
sub
inc
add
in
fisttps
outsl
inc
mov
pop
sub
test
cld
jae
mov
fldt
ds
dec
in
cmp
addb
cmc
inc
int3
xchg
mov
mov
pop
gs
jge
inc
push
mov
xor
push
xor
imul
sysret
gs
jle
lahf
sub
inc
int3
js
cmp
movsb
ss
jle
jl
outsb
shl
jmp
sbb
push
mov
lods
cmpsb
add
imul
std
stc
pop
xor
cmp
aaa
or
xlat
cs
std
cmp
jg
test
int3
inc
cmp
sti
xlat
push
sbb
gs
cmpb
sarb
mov
sub
inc
or
lds
gs
xor
popa
dec
sub
ret
inc
or
sub
test
jmp
insl
mov
rcll
mov
js
mov
mov
adc
fwait
inc
adc
cmp
movsb
addl
lret
push
insb
insl
xchg
push
out
cmpb
lods
push
int
lds
lods
cmpsl
cmp
scas
and
pop
rep
jns
inc
mov
mov
rorb
mov
cmp
insb
insb
fcmovnbe
mov
pop
cmp
stos
fisttps
mov
dec
std
or
cmp
jle
js
jp
idivl
cmp
out
insb
add
lock
sub
inc
ficoml
fs
aaa
lods
repz
jno
mov
int
jne
cltd
pop
mov
jno
testl
cltd
cltd
dec
mov
adc
jge
aaa
rcll
adc
test
fwait
mov
dec
pop
jo
ljmp
lret
fists
lret
sbb
xor
popa
mov
mov
in
aaa
xor
into
mov
mov
mov
jne
sub
aas
push
pop
fisttps
pop
cli
push
pop
add
pop
fbstp
push
and
insb
sub
in
cmpsl
mov
sub
inc
cmpsb
movsl
xlat
dec
lea
add
and
and
pop
roll
cwtl
mov
cmp
sbb
push
scas
dec
nop
inc
xchg
add
movsl
enter
cmpsl
cmpsl
les
pop
adc
sbb
push
xor
pop
push
or
fnstcw
and
inc
roll
add
jge
cltd
pop
mov
aad
stos
push
ja
leave
outsb
pop
dec
xor
jecxz
mov
and
test
add
lea
stos
lret
mov
int
popa
xor
lods
push
and
popf
add
jno
push
arpl
movsl
int
ss
sbb
sbb
push
xchg
jmp
mov
sbb
nop
dec
mov
addl
jae
mov
xchg
sbb
or
stos
adc
dec
test
mov
adc
cld
cmp
fisubrs
push
test
mov
adc
pop
in
adc
adc
out
fiadds
shlb
and
enter
jmp
bnd
sbb
clc
pop
mov
dec
cmp
sub
sarl
add
call
mov
es
inc
pushf
push
xchg
pop
pushf
rcrl
rcll
xor
aas
stc
inc
pop
jo
daa
cld
or
adc
jbe
mov
test
scas
faddl
lret
int
xor
roll
xor
mov
enter
das
xchg
sub
sub
jb
mov
sbb
xor
lds
push
in
push
cs
ss
mov
ficoms
jbe
test
lods
mov
push
cs
or
je
lods
mov
cwtl
das
in
add
cmpsl
out
stc
insl
and
jae
lods
pop
xchg
insb
test
adc
out
fldl
arpl
fsubrl
stos
cwtl
jmp
les
sbb
nop
push
push
scas
or
push
shrd
dec
mov
scas
xchg
int
adc
mov
sub
rcrl
add
jg
pop
add
cmp
sub
jnp
movsb
ret
mov
inc
xchg
and
xor
pop
ss
pop
stc
daa
mov
repnz
inc
mov
sub
and
sub
adc
les
out
cmp
xchg
jmp
dec
lods
and
xor
cli
mov
shl
into
insb
mov
test
and
or
insb
sbb
cltd
mov
loopne
je
iret
xchg
mov
insb
cmpsl
xor
or
ss
sub
xor
cltd
int3
mov
imul
push
xlat
add
aas
mov
gs
movl
xchg
sbb
push
pop
jnp
jmp
sarl
out
or
lds
dec
icebp
mov
xchg
mov
mov
rcrb
sub
lcall
push
ja
in
ret
mov
les
jbe,pt
stos
out
repz
cmp
mov
rcl
arpl
lcall
aad
daa
add
push
lret
out
and
stc
pop
dec
xchg
icebp
stc
xlat
jmp
cs
inc
mov
mov
mov
lret
mov
loopne
fldl
fbstp
mov
cltd
test
inc
out
mov
aaa
cmpsl
in
add
stc
stos
cmp
rclb
add
dec
scas
daa
cltd
jnp
pop
ret
xchg
sub
aam
mov
jecxz
lret
mov
lods
shl
jnp
cmp
xchg
xchg
into
pushf
sub
mov
xlat
lds
sbb
pop
test
in
mov
das
mov
or
test
push
ficoml
add
xor
xor
movsl
xchg
push
mov
nop
divb
je
ljmp
repnz
cmp
je
stos
stos
divl
out
mov
and
cmp
push
popf
lcall
das
divb
ficoms
pop
loopne
decb
mov
shr
shrl
mov
dec
jmp
daa
int
mov
push
xchg
dec
push
fists
cmpsb
cs
in
mov
mov
push
pop
std
cmp
lret
gs
stc
in
out
popa
cmc
inc
call
xor
out
sbb
mov
lret
or
mov
adc
or
mov
fiadds
mov
dec
mov
and
ljmp
xchg
and
jb
icebp
cmc
loope
add
pop
or
das
movsb
testb
mov
add
add
out
xrelease
mov
mov
pop
ficoml
outsb
push
push
and
mov
adc
fidivs
or
jg
bnd
jbe
mov
lahf
insl
jle
cmc
push
mov
int
fidivl
test
mov
mov
cmpb
icebp
lods
cmc
pushf
arpl
push
aam
ja
test
ljmp
xor
in
adc
aas
push
aam
sahf
aaa
dec
dec
mov
fistl
add
lahf
insl
jp
xchg
inc
add
sbb
cmp
xor
mov
sub
subl
push
jl
cmp
lods
js
stos
fxch
mov
jo
push
imul
mov
adc
mov
jmp
pop
stc
pop
fldt
inc
and
mov
dec
mov
adc
lock
xor
inc
mov
inc
aad
mov
jbe
lock
xor
stos
je
jmp
push
adcb
in
std
repnz
das
or
lods
cmp
sarl
xor
add
cmp
scas
loopne
pop
popa
fwait
aaa
pusha
out
ljmp
lods
popf
mov
jne
sub
pop
or
int3
mov
fcompl
js
add
insl
dec
out
insb
inc
popa
mov
push
jno
mov
add
adc
cmp
mov
test
clc
repz
in
int
xchg
bound
cmp
std
pop
iret
dec
cs
cmp
mov
inc
test
fistl
rorl
inc
mov
jb
mov
repnz
push
loopne
push
mov
outsl
add
test
push
and
cli
mov
pushf
adc
ljmp
sub
sbb
sbb
jns
cmpsb
xchg
aas
in
aad
mov
mov
inc
dec
or
ds
inc
lock
pop
push
scas
push
mov
mov
jne
mov
inc
cmp
enter
or
cmp
xor
jp
xchg
sub
jae
and
das
pushf
adc
stos
test
or
fdivrp
into
mov
xchg
pushf
pop
push
lret
wbinvd
cmc
xor
cs
pop
dec
ljmp
xor
pop
xor
push
nopl
ret
mov
test
shll
das
stc
adc
cmp
es
mov
inc
loop
push
pusha
testl
mov
fisttps
xlat
ret
repz
inc
inc
das
push
rorl
inc
cmp
mov
mov
mov
jl
push
mov
jns
mov
jne
int
shl
or
ss
leave
and
xchg
in
jno
in
cld
repnz
data16
ficoms
mov
push
sbb
aaa
pop
inc
mov
out
inc
mov
cmp
pop
mov
cmp
flds
out
push
ror
dec
sbb
jge
xor
test
icebp
xchg
mov
sub
jp
adc
mov
push
cmpsl
sbb
stc
mov
mov
ja
mov
scas
fmuls
inc
adc
push
fmuls
popf
out
cmp
xor
jmp
lahf
and
enter
mov
pop
in
cmpsb
into
mov
xor
cld
sbb
pop
mov
stos
cmp
inc
xlat
mov
fwait
in
out
xor
sub
push
test
mov
test
movsb
outsb
jae
ja
enter
push
or
mov
sarb
jecxz
lds
call
nop
cmpsl
lret
in
mov
jmp
sub
mov
mov
xchg
shll
fisubl
fwait
sbb
into
cmpsb
dec
pop
inc
add
mov
adc
scas
dec
push
aaa
mov
pop
outsl
adc
out
sub
pop
pop
dec
testl
int3
call
lret
enter
roll
stc
dec
in
xchg
sub
dec
push
lahf
pusha
cmc
dec
jmp
fsts
mov
jge
mov
test
mov
sub
testb
mov
pop
fs
mov
popf
nop
aam
xor
push
jl
dec
lahf
call
popf
adc
cli
mov
rolb
outsb
imul
loopne
xlat
stc
cmpsl
mov
jnp
pushf
mov
xchg
or
sbb
pop
jmp
jle
inc
cmpsb
aad
jmp
rcrl
mov
imul
xchg
test
push
pop
adc
inc
jns
sbbl
sbb
cmpsl
stos
cs
push
add
lea
std
int
sarb
or
in
insl
js
and
mov
push
inc
dec
fs
loop
dec
mov
push
nop
test
in
in
loope
inc
adc
mov
adc
gs
mov
dec
enter
movsl
hlt
ret
mov
scas
scas
mov
fwait
mov
sub
dec
outsb
add
pop
rcl
imulb
movsb
ljmp
scas
fidivrs
mov
sbb
aam
push
test
dec
cmc
repnz
stos
add
and
mov
jns
jb
or
int
mov
xor
stos
test
sarb
cmp
rorb
inc
xor
push
or
xchg
jno
aas
loope
and
cli
repz
mov
jg
inc
mov
sbb
adc
xchg
scas
sbb
addr16
jle
mov
les
mov
push
fnstsw
arpl
test
stc
mov
add
pop
inc
test
cmp
sahf
push
sahf
lret
push
inc
add
mov
mov
xor
in
pop
xor
xorl
mov
aas
sbb
cmp
out
jle
int
sahf
mov
push
jb
sti
sti
sbb
fstpl
call
inc
or
pop
movsl
xchg
ja
adc
lea
cmp
lret
add
in
movsl
and
imul
into
insb
add
clc
dec
pop
dec
mov
or
mov
icebp
out
push
cmp
out
or
mov
leave
mov
inc
jo
push
outsb
mov
and
andl
aad
xor
fnstenv
pushf
int
mov
sbb
dec
and
jae
jns
mov
mov
mov
jne
pop
mov
imul
int
or
mov
and
mov
arpl
dec
jge
cwtl
ret
or
dec
push
push
mov
xchg
test
sub
jbe
and
pushw
mov
sub
loope
ret
leave
xchg
push
and
xchg
mov
mov
xor
xchg
lea
es
cld
adc
xlat
jg
pop
adc
popf
es
dec
push
in
rcll
je
scas
push
push
sub
xor
jmp
jp
ror
xor
daa
in
inc
xor
and
jmp
push
insb
xor
rcll
mov
mov
and
cli
cmp
movsb
imul
rcrb
dec
pusha
pushf
cmp
xlat
dec
push
loop
testl
mov
movb
cli
cltd
sub
jmp
lock
inc
testb
inc
ret
test
scas
fcompl
jge
fcoms
and
mov
loope
ss
push
mov
cs
leave
popf
mov
push
es
xchg
int3
mov
hlt
inc
aad
adc
add
jp
scas
cltd
or
add
and
repnz
repnz
movsl
lock
jg
cmp
inc
cltd
mov
lock
xlat
pusha
jle
fcoms
cmc
fisttpll
mov
add
inc
inc
push
fnsave
fsubs
push
inc
dec
and
mov
jle
xchg
sub
ljmp
dec
xlat
psubusb
test
pop
xor
adcb
push
stc
jnp
sbb
dec
mov
xor
xchg
aas
scas
enter
mov
xor
and
pop
hlt
je
push
insb
aam
lret
mov
xchg
xchg
jae
mov
fstpl
mov
mov
ret
and
mov
jmp
sbb
cmpsb
jmp
cmpb
aad
inc
push
mov
add
or
cmpsl
fdivrs
pop
fisubs
sub
fucomi
test
sub
xor
dec
jae
shr
jle
sub
jne
addr16
repnz
lea
sbb
scas
cmp
out
out
xor
dec
xchg
xchg
xchg
xchg
pop
cmp
adc
adc
movsb
mov
inc
je
inc
out
pushf
ficompl
add
or
xor
ds
mov
dec
xor
xchg
xchg
xchg
inc
cmpsb
fldcw
mov
pusha
pop
xchg
sbbb
sub
shll
inc
je
sbb
lcall
pop
cld
dec
repnz
xchg
sub
in
add
push
jo
es
out
mov
push
dec
push
mov
fcoml
cmpsl
add
clc
xlat
and
xor
jnp
push
fidivrs
pop
adc
fisttpll
and
or
push
inc
pop
arpl
and
push
call
mov
lea
cmp
outsb
movsb
aam
scas
hlt
daa
adc
mov
in
shll
push
loope
add
pop
movsb
or
test
mov
fisubl
inc
mov
pushf
ja
sbb
int
daa
xchg
jge
sub
mov
pop
add
xchg
lock
mov
xchg
sub
mov
in
lea
xchg
out
leave
inc
mov
lods
cmpsb
mov
scas
xchg
xor
adc
and
jbe
clc
adcb
adc
sub
in
mov
enter
push
pop
movsl
aas
mov
or
daa
mov
cwtl
sti
fdivrs
xor
xchg
aad
pop
xor
ss
mov
ljmp
shrl
cmc
pop
mov
data16
ljmp
insl
fcomi
in
fisubl
dec
shlb
pop
sub
pushf
dec
add
sub
sbb
scas
ds
fcompl
imul
lds
loop
sbb
nop
push
push
mov
sub
dec
scas
sub
loop
adc
out
repz
ja,pt
pop
mov
mov
repnz
add
xlat
shrb
inc
sub
xlat
inc
adc
jno
stos
mov
or
dec
sub
dec
jnp
in
sub
jo
sarb
jno
std
clc
idiv
jb
jp
stos
sbb
lea
xchg
jmp
inc
add
fmuls
shlb
insl
mov
xor
sub
sbb
mov
pop
sub
sub
sub
loop
push
cli
and
js
daa
push
test
cmpsl
mov
push
jl
in
jbe
fidivrl
inc
clc
lea
bound
sub
stos
lods
cmpb
scas
jge
and
imul
repnz
push
adc
fistpl
shlb
je
loop
or
inc
push
mull
push
in
xor
push
icebp
jno
and
cmpsb
pop
mov
scas
jnp
int
and
subl
and
cmpsl
stos
push
out
pop
mov
daa
sbb
mov
push
pop
movsl
cwtl
cmp
and
sub
rcr
popf
adc
orl
aaa
mov
and
out
mov
bound
mov
cwtl
pop
jle
adc
cmp
cmp
pop
mov
ret
xor
add
inc
dec
lea
mov
add
xchg
jo
lret
fstps
cmp
and
cmp
adc
in
addr16
sub
jle
movsl
lods
test
pop
lods
loop
popa
cmc
addr16
mov
movsl
clc
jno
push
and
push
iret
dec
mov
and
dec
sub
cmp
push
imulb
sbb
dec
int
adc
inc
clc
and
push
xor
sub
mov
pop
cld
lock
jo
jae
test
jecxz
ds
mov
mov
pop
jp
jns
stc
mov
adc
mov
mov
cwtl
xchg
mov
mov
cltd
and
pop
adc
scas
xchg
dec
xor
inc
fs
and
mov
call
fxch
andl
xor
cmc
nop
outsb
inc
lcall
aam
push
arpl
repz
movsl
movsb
aas
lea
leave
in
dec
cmp
movl
and
loope
mov
push
repz
mov
mov
std
pop
push
mov
dec
cmp
mov
mov
adc
jle
mov
imul
or
mov
movsb
dec
ret
push
add
jne
pop
adc
inc
fdivp
jae
xchg
fnsave
fwait
mov
pusha
xorl
dec
cmpsb
mov
mov
xor
push
out
jnp
movups
sbb
aad
pop
outsl
aaa
jg
and
push
stos
xor
or
in
push
stos
push
cmpsl
insb
jg
xchg
jl
pop
xor
jb
sarl
outsb
pop
mull
cli
mov
fdivrs
lock
es
xchg
mov
fisubrl
pusha
sub
ret
push
ret
out
mov
in
test
fcomp
mov
stos
dec
in
cmp
js
hlt
jecxz
clc
cmpsl
mov
out
cmp
inc
pop
jo
mov
cli
sahf
mov
in
loopne
mov
jmp
push
out
sbb
push
js
aaa
sbb
insl
and
fstl
add
ror
loop
and
adc
pop
fnstsw
stc
dec
add
imul
test
in
into
cmp
fistpll
repnz
sti
add
lods
dec
pop
aas
movsl
mov
jne
mov
xor
out
mov
data16
test
mov
pop
fnstenv
jne
sbb
jbe
imul
rclb
pop
repnz
jnp
jecxz
inc
lret
aas
cmp
loope
dec
cmp
dec
sbb
mov
in
mov
and
arpl
scas
mov
stc
lret
or
arpl
incb
inc
mov
or
fidivrl
inc
push
xor
int3
fwait
out
add
inc
mov
xor
jg
aam
dec
lret
cmpsb
popa
int
jns
in
lret
inc
jns
aaa
cwtl
sbb
std
movsl
lcall
out
cmpsb
mov
or
inc
sub
jp
in
popa
add
or
sbb
inc
mov
cmp
jbe
popf
mov
fidivl
sub
aaa
les
mov
or
je
dec
aad
cmp
orl
push
or
cmpsl
sbb
inc
dec
imul
cmp
dec
popa
pop
enter
dec
ss
enter
cs
ret
arpl
jne
mov
out
or
push
mov
rcll
mov
fmull
push
push
imul
mov
adc
xchg
xor
and
fs
into
inc
dec
inc
sub
sub
push
pop
fcmovnbe
int3
pop
pop
mov
mov
lock
pushf
xchg
inc
cmp
cwtl
mov
xchg
jle
mov
pop
add
xor
shl
int3
mov
inc
xchg
cld
aad
jecxz
xchg
jae
sahf
xchg
sahf
fdiv
mov
std
aad
xchg
out
dec
test
add
mov
cltd
adc
mov
pop
aad
int
mov
mov
arpl
adc
aad
inc
insb
lcall
int
lods
leave
das
out
stos
adc
cli
fbstp
fs
mov
into
out
mov
jl
popa
pop
push
mov
xchg
movsl
mov
mov
daa
pop
pop
ret
cmc
adc
in
xchg
cmp
push
add
fcmove
xor
mov
das
mov
insb
mov
or
jae
dec
dec
jo
orl
out
rcl
call
movsb
addr16
sub
test
lret
push
std
into
nop
or
cmpsl
outsb
mov
jno
test
ljmp
xchg
xorb
or
sbb
pop
mov
or
inc
cmpsb
pop
cli
cs
push
arpl
sbb
mov
push
mov
mov
call
dec
sub
scas
ret
dec
add
mov
jmp
or
add
fidivrs
out
das
add
leave
jnp
mov
or
cmp
mov
adc
out
push
scas
call
dec
dec
or
push
insb
add
xchg
mov
and
in
or
das
ds
sahf
shll
jle
icebp
sub
psraw
lds
imul
adc
mov
bound
mov
popf
lods
or
mov
inc
fimuls
push
pop
push
cmc
mov
fs
and
data16
fidivrs
cli
pop
xchg
mov
repz
fwait
mov
mov
xor
dec
cmpsb
js,pt
insl
push
xor
js
sti
ret
stc
pushf
pop
or
fisubs
std
loope
jmp
aaa
xor
jbe
pusha
jno
xor
jae
ficomps
adc
xor
mov
ret
sub
push
out
mov
and
repnz
jb
cmp
outsl
andl
ss
pop
xor
mov
cmp
xor
sbb
lret
fwait
inc
pop
rorl
mov
xchg
sbb
pusha
pop
shrb
push
add
or
roll
shll
xchg
sbb
repz
add
jmp
dec
aas
lock
sbb
mov
push
clc
inc
cmp
sarl
ds
push
xchg
mov
and
cld
push
leave
inc
jbe
shll
jbe
mov
leave
test
imul
out
into
ret
movsb
pop
shll
test
sub
jecxz
fistps
sub
and
aaa
mov
ss
pop
inc
push
cmp
push
ja
mov
and
enter
movsl
in
leave
xor
sub
clc
dec
js
fstl
adc
call
sbb
test
lods
add
dec
mov
xchg
jp
pop
das
sub
mov
and
test
cmp
imul
jge
out
lea
iret
std
loop
dec
or
and
xor
scas
out
push
out
sahf
xor
das
aaa
ja
repnz
add
mov
mov
jns
jo
cmp
sahf
cmpsb
jp
adc
push
stc
cmc
and
mov
push
adc
ficomps
nop
lods
gs
mov
arpl
xor
mov
cmp
cmp
test
pushf
cmpsl
xchg
je
lds
aam
cmp
push
insl
xor
and
in
inc
mov
jge
sbb
arpl
pop
xor
mov
push
inc
shlb
lock
idivl
pusha
mov
sbb
scas
mov
mov
sub
push
or
and
mov
fnstenv
mov
cmp
aam
push
sub
fiaddl
mov
adc
and
push
addl
mov
cmp
adc
out
cmp
mov
pop
xchg
sbb
xchg
adc
shlb
dec
mov
in
sub
add
mov
jbe
in
sub
mov
mov
dec
in
out
sbb
fldt
jg
popa
lret
and
fwait
outsb
lcall
lret
inc
cmp
push
xchg
ret
ret
xor
adc
jmp
scas
mov
cmp
loopne
mov
pushf
std
xor
or
jne
mov
mov
in
fists
aad
cltd
inc
adc
outsb
fsubp
mov
push
mov
mov
insl
call
jbe
shr
ss
mov
jl
sbb
add
xchg
xor
push
cmp
fmul
ret
inc
aam
in
lea
inc
xchg
shr
mov
inc
stos
in
sarb
mov
or
jge
and
stos
add
nop
dec
loope
pop
lods
inc
lret
pop
ret
jg
jo
fildll
mov
adc
pop
push
mov
fs
out
mov
xchg
sbb
jae
add
call
imul
lret
mov
repnz
jmp
int
mov
pop
cli
mov
xor
push
out
es
jle
and
ret
cs
sar
aaa
cmp
enter
repz
mov
fisubl
jo
jmp
cwtl
and
mov
xor
mov
fmull
js
push
popa
imul
or
cwtl
and
jo
pop
inc
and
fnstsw
sbb
daa
pushf
lret
pop
xchg
xchg
sub
jle
ret
jno
and
pop
lods
ficoml
add
push
frstor
jns
jb
mov
cwtl
mov
push
mov
mov
fwait
test
jne
cmpsb
or
mov
mov
mov
push
outsb
pusha
xchg
mull
jne
scas
and
les
es
scas
movsb
xor
ret
mov
call
mov
aam
mov
inc
jl
push
mov
mov
adc
sbb
adc
stos
adc
pop
jae
pop
outsl
mov
xchg
jmp
aam
xchg
fidivrl
push
push
test
inc
inc
mov
enter
lea
out
bound
push
mov
punpckhwd
pop
lahf
out
cmp
mov
test
jge
cmpsl
fsubrp
stos
lods
test
bound
test
sub
inc
or
dec
and
mov
jp
inc
cmp
aad
scas
jb
push
mov
mov
fdivr
fisttps
js
addr16
loop
shlb
in
pop
rcl
cmp
ja
add
cmp
cmp
and
mov
mov
cmp
push
inc
and
jns
scas
inc
or
out
push
cwtl
push
ss
adc
inc
mov
inc
shll
insb
mov
repz
scas
or
clc
mov
movsb
xchg
arpl
fcoms
xchg
iret
cld
sbb
aaa
dec
shrl
jns
push
cmpsl
fistpll
fstl
push
clc
out
shll
adc
dec
fbld
sbb
mov
pop
lcall
adc
sub
jle
outsb
das
mov
adc
or
mov
push
andl
dec
mov
xchg
test
insb
aad
jne
ljmp
cmp
notl
dec
jb
shrl
jne
je
add
pop
lds
pop
out
xor
ss
mov
popf
insb
ja
mov
fbstp
cli
repnz
fists
lock
adcl
in
mov
loope
xchg
jne
notb
not
mov
inc
pusha
xchg
rcrb
adc
add
mull
into
mov
push
jo
inc
test
push
insb
out
aas
mov
push
jp
push
push
stos
mov
lahf
outsb
movsl
lods
pop
aam
sarb
mov
inc
bound
mov
jecxz
jo
jl
dec
data16
mov
pop
insl
lcall
cmp
xchg
movsl
pop
and
pop
bound
sti
push
adc
aam
filds
add
xor
test
ds
inc
lret
adc
jg
aam
lods
icebp
int3
lods
xor
scas
sbb
jb
int3
pop
test
gs
pop
mov
mov
out
fnsave
lret
test
sbb
sub
xlat
pop
and
out
mov
lahf
xlat
pushf
testl
dec
pop
icebp
hlt
mov
mov
sub
cmp
jmp
xchg
xor
imul
adc
rcrl
pop
int3
iret
add
dec
repz
adc
xor
mov
fs
loop
cmp
cmp
xor
jmp
dec
add
repz
push
das
cmpsb
xchg
test
imul
shlb
cmp
cltd
addr16
fistpl
aaa
mov
sub
dec
ss
fs
shlb
div
mov
stos
ss
fwait
mov
arpl
mov
adc
pop
aaa
xchg
adc
dec
pop
dec
push
stc
cli
inc
or
fcoms
cs
shll
mov
adc
imul
adcl
xor
push
fldt
jns
pop
popa
push
pop
out
mov
pop
sbb
lods
aaa
ret
push
inc
mov
push
push
mov
pushf
inc
imul
pop
outsb
outsb
cmp
scas
mov
lds
lods
insb
jmp
jmp
scas
cmpsb
adc
mov
pop
das
jmp
xor
mov
ja
fnstsw
inc
gs
popa
ret
cwtl
lods
xchg
cmpb
shr
out
xor
inc
or
add
pop
movsl
xorb
ljmp
repz
dec
add
stos
adc
mov
xchg
or
sbbl
sub
jmp
and
nop
jae
xchg
mov
or
mov
sbb
adc
or
std
cltd
das
dec
loopne
fwait
add
out
ds
and
sarb
and
push
inc
sbb
lods
je
rcr
bound
fisubs
fdivl
dec
lret
mov
std
mov
aaa
out
incl
outsl
test
test
ret
xor
int
cmp
cs
movsb
inc
outsl
aas
dec
inc
sahf
lret
pop
pop
stos
push
pop
jecxz
ds
daa
sbb
mov
subb
push
sub
and
in
frstor
dec
int
xchg
ret
pop
dec
sub
adc
xlat
mov
orb
cmc
ja
inc
rol
cli
fildll
push
out
std
insb
mov
dec
push
dec
loope
loop
stc
aam
lds
mov
stos
cmp
cwtl
mov
hlt
xor
out
add
in
rcrb
dec
adc
pop
sub
sbbb
arpl
repz
call
jb
jb
xchg
jns
jmp
pop
inc
stos
push
lret
sarb
jg
sti
hlt
ret
repnz
or
push
push
mov
lods
mov
test
cs
lret
mov
adc
loop
add
mov
xchg
and
fsubrp
js
sbb
js
cmpsl
rclb
stos
jle
rolb
aas
jo
adc
in
add
ss
rcr
jle
add
popf
inc
mov
loopne
lcall
or
sub
sub
aad
dec
gs
out
cmpsl
sub
sub
rclb
std
push
mov
pop
mov
push
cmc
popf
call
jl
jb
dec
jge
jo
imul
aas
inc
xchg
inc
jae
jne
jg
push
cwtl
mov
sbb
lock
in
mov
add
stos
mov
lods
js
fxch
add
rcrb
sti
adc
lea
cmp
ljmp
add
test
xchg
jb
sbb
cmp
loopne
pushf
dec
repnz
aaa
sti
idivl
js
scas
pop
rcrl
xchg
push
rcrb
js
sub
jo
shr
arpl
sub
lret
in
dec
xchg
pushl
ret
and
cwtl
dec
pop
ljmp
sbb
je
addr16
sbb
xor
popf
jecxz
or
test
nop
test
insl
ds
xor
pop
push
fisttpll
sbb
jb
pop
cmp
sbb
mov
jecxz
orb
adc
dec
or
popa
scas
pop
adc
and
aas
subl
and
pop
jno
dec
mov
cmp
or
popf
pop
jae
aas
push
push
add
sbb
push
scas
dec
or
fxch
sbb
adc
add
and
lods
ret
add
push
sarl
ja
xor
xchg
mov
rcrb
std
sbb
cmc
arpl
inc
and
fs
sbb
fsubs
lret
xor
pushf
push
pmullw
jmp
jle
pop
xchg
in
adc
xchg
insb
stos
sub
fimuls
push
pop
stos
pushf
mov
imull
out
rol
mov
mov
ljmp
lret
movsb
jp
cmp
mov
mov
mov
xchg
sbb
ds
filds
leave
fsubrs
movsb
cmp
sub
icebp
mov
sub
jbe
aas
mov
test
cwtl
push
stos
sub
inc
pop
push
pop
imull
fisubs
cwtl
ds
int3
andb
enter
dec
mov
stos
push
cwtl
stos
in
cmp
pop
pop
jl
jae
je
and
sahf
lret
mov
fnstcw
xor
ffree
mov
or
mov
outsb
dec
inc
movl
imulb
hlt
or
pop
pop
xor
mov
and
push
inc
add
mov
mov
add
dec
fsts
arpl
cmp
fwait
push
dec
dec
js
es
stos
mov
push
lcall
or
and
add
mov
pop
imul
lret
mov
les
cli
rorb
mov
out
mov
ret
sub
inc
fistps
adc
inc
cmp
popf
xor
popf
rcr
lock
std
test
aas
dec
cmc
pop
mov
push
scas
cmc
push
adc
dec
jns
xchg
mov
mov
lret
int
dec
jmp
xor
aaa
mov
sub
mov
cmp
mov
xor
negb
fnstenv
les
daa
shl
divl
push
imulb
and
aas
test
dec
idivb
xor
rcrl
scas
jle
dec
cwtl
lret
inc
add
lds
insl
mov
cli
xchg
push
jge
ficomps
adc
aad
cli
sub
pop
mov
outsb
and
out
adc
lret
fdivs
mov
add
int3
addr16
inc
dec
stc
lods
pop
add
scas
cmp
pop
mov
jb
xchg
dec
add
cld
xor
mov
insl
icebp
cmp
sarl
jge
xor
loope
mov
in
sbb
icebp
xchg
scas
push
repz
jae
aad
adc
xor
cmp
dec
jge
inc
xchg
or
push
lods
into
lcall
lahf
pop
ret
mov
or
lods
push
push
iret
mov
jnp
bound
pop
add
into
adc
mov
loope
sbbl
repnz
or
jno
in
aam
cmc
das
or
inc
mov
out
in
lods
aaa
add
rorl
push
insl
mov
push
inc
mov
push
inc
out
rol
enter
add
push
jp
lretw
or
and
fcompl
jnp
imul
enter
imul
inc
js
or
add
push
int
push
cmpsb
pop
pop
cld
jne
xchg
scas
lods
cmp
lds
or
sbb
scas
and
int3
sbb
cmpsl
dec
and
jle
movsb
mov
scas
add
je
inc
add
call
add
or
mov
call
aad
adc
fsubrp
fldl
cs
mov
pop
pop
js
cli
out
clc
stos
jnp
xor
pop
adc
xlat
jae
dec
cwtl
icebp
pop
cmp
mov
data16
jns
pushf
mov
cli
jno
cmp
addb
or
pop
push
adc
test
inc
cld
stc
mov
push
mov
mov
xchg
push
je
dec
lods
test
sahf
mov
sbb
int
fnstenv
sub
fs
xor
sub
push
pop
ss
movl
subb
inc
jae
cld
jle
dec
imul
xchg
pop
add
and
or
aad
test
fisubrs
add
jl
es
ds
adc
loopne
cmc
test
push
pop
jo
outsl
inc
movsl
movsb
loop
fldenv
je
cmp
gs
loopne
das
push
mov
xchg
loope
test
mov
jge
mov
movsb
test
lea
pop
cmpsl
xor
cmc
repnz
pop
std
sub
movl
in
data16
jp
jae
jno
not
add
inc
dec
xor
inc
js
mov
mov
sub
inc
popf
pop
mov
rcr
rorl
push
popf
and
cwtl
sub
mov
mov
xor
enter
das
mov
stos
das
sbb
mov
mov
mov
and
adc
aad
adc
adc
bound
fwait
in
xor
outsb
in
mov
ljmp
inc
cs
test
cmp
jae
mov
loope
pop
pop
rcrb
xchg
les
or
lret
xchg
cltd
push
inc
loop
test
cmc
sbb
dec
sub
lock
icebp
pop
push
lret
pop
sbb
xchg
dec
cmp
arpl
scas
xor
cmp
aad
push
nop
call
adc
inc
stos
pop
jbe
sub
stc
loope
in
test
scas
jp
adc
je
cmp
loopne
movl
adc
adc
aaa
negb
out
loopne
into
icebp
jnp
lea
clc
and
jle
ljmp
and
cmpl
dec
cmp
int3
fld
aam
fdivl
mov
and
imul
imul
and
daa
push
and
shl
dec
cld
ss
shlb
xorl
cs
das
mov
dec
and
mov
inc
jo
push
push
pop
adc
cltd
decl
cli
push
call
outsb
mov
lods
inc
sbb
divl
popl
cmp
push
hlt
dec
cli
pop
pop
or
adc
fwait
test
gs
adc
cmpsb
mov
out
test
xlat
imul
push
leave
jne
mov
mov
repnz
inc
ror
ret
icebp
push
aam
flds
cmp
pusha
or
arpl
mov
call
inc
imul
sahf
andl
cmp
in
jno
stos
mov
adc
or
xchg
dec
adc
pop
orl
mov
sahf
daa
divb
imul
rcl
and
pop
sahf
test
lahf
imul
add
xchg
fcmovbe
imul
arpl
ja
mov
sub
mov
xor
adc
or
add
mov
sbb
inc
and
pop
std
or
or
outsb
ret
call
cmp
bound
cmpsl
mov
stos
insb
sub
or
jmp
fisttps
mov
adc
mov
push
adc
or
jae
movsl
insb
xchg
and
std
mov
add
movsb
roll
xchg
fldcw
push
arpl
and
popa
loop
adc
pop
loope
jmp
cmp
nop
out
dec
pop
sbb
mov
mov
push
jae
xchg
gs
mov
xchg
frstor
xchg
lods
mov
test
push
arpl
in
movsl
pop
sbb
jae
add
xchg
sub
cmp
mov
jno
movsl
pop
and
inc
hlt
rdmsr
sub
clc
cwtl
push
push
addr16
push
xchg
movsl
rcr
in
sahf
push
cmp
aaa
hlt
imul
jg
xchg
and
cmpsb
inc
mov
and
repnz
sbb
pop
jmp
lods
mov
xchg
jnp
pop
dec
lods
mov
cltd
mov
dec
push
push
adc
adc
inc
push
sbbl
mov
inc
aam
cwtl
inc
mov
sub
imul
cmp
jo
repnz
xchg
sub
xchg
sbb
pop
or
pop
inc
mov
ss
push
mov
into
push
cltd
jmp
push
in
call
ljmp
sbb
dec
mov
fwait
xchg
addr16
testl
fildll
scas
rcl
add
sti
mov
inc
lret
repnz
lret
int
loope
and
sub
push
pop
or
pop
rcl
mov
jle
pop
adc
scas
out
inc
push
popf
mov
cmc
mov
xor
pop
hlt
loope
out
sbb
pop
ja
call
pushf
popf
push
scas
in
pop
cmpsb
jmp
push
in
fildll
rol
adc
sarb
push
or
sbb
dec
pop
out
jns
ficoml
repnz
adc
jl
pop
mov
stc
push
lock
sbb
mov
push
gs
fidivrs
or
enter
xlat
movsl
fs
jmp
aaa
adcb
inc
test
adc
inc
ja
sbb
call
mov
cmc
bound
push
or
hlt
cmp
stc
rorl
clc
xchg
mov
adc
lcall
addr16
mov
cli
mov
jg
imul
cmpsb
sub
and
mov
jp
mov
sub
ljmp
adc
pushf
push
rcl
pop
cltd
dec
add
stos
rdpmc
pminsw
mov
pop
decl
push
mov
push
int3
xor
ret
stos
out
dec
fcompl
sub
stos
mov
shr
aam
lret
sub
pop
sahf
leave
xchg
lock
push
xlat
push
mov
xchg
fstps
push
mov
jl
cs
cmp
aaa
leave
push
lret
pop
jge
lock
add
addr16
sbb
addl
test
push
cmp
xchg
xor
add
bound
outsb
and
ret
ss
aam
adc
loopne
inc
pop
mov
movsl
inc
aas
add
int
mov
push
pop
push
leave
sti
sub
lahf
sti
cmpb
outsb
mov
xchg
test
mov
cmp
sub
shll
mov
inc
mov
add
jl
divb
setae
mov
fisubl
mov
lds
in
insb
stos
xorl
xchg
shrl
cmp
fstps
dec
lret
cli
push
aam
cmc
pop
pop
inc
mov
fisubrs
or
sbb
xchg
mov
rcrl
imul
jmp
mov
add
ljmp
xchg
insb
mov
shr
mov
or
jmp
loope
or
pushf
aam
pop
add
xchg
lods
fwait
dec
xor
in
jge
mov
push
mov
fst
pop
mov
neg
mov
dec
xchg
scas
in
xchg
insl
mov
or
mov
pop
or
dec
push
xchg
cmp
push
out
das
cmp
pop
inc
mov
xor
dec
pop
addb
mov
push
aas
inc
xor
xor
testb
dec
push
fadds
inc
push
div
imulb
cld
pop
inc
xchg
fdivs
jae
ljmp
and
dec
lret
and
sti
faddl
jl
xor
mov
xchg
mov
cwtl
jl
scas
insl
mov
xchg
insb
xor
mov
inc
out
subb
fidivs
sarb
lods
ljmp
pop
inc
jp
add
xor
pop
bound
movsl
or
sbb
mov
ror
mov
mov
jl
inc
sahf
push
cs
push
cmp
sub
pop
pop
js
jne,pt
sub
and
fldenv
mov
and
pop
sahf
pop
mov
dec
lret
jb
cmp
cmpl
mov
add
cltd
add
fucomp
adc
add
es
adc
inc
xlat
cmp
and
sbb
addb
ljmp
fisubrl
loope
gs
jmp
dec
test
xchg
scas
cltd
sbb
loop
push
loope
xchg
pushf
xchg
aas
cmc
push
push
jnp
jne
pop
jnp
ja
negb
jmp
fstpl
cmp
pop
sahf
pop
sbb
lods
mov
sbb
into
out
add
xchg
outsl
aas
pop
inc
xor
xchg
cmpsb
data16
aad
dec
ret
mov
test
mov
lods
cli
add
icebp
rolb
test
orl
stos
shr
cmp
stos
and
lret
and
pop
inc
cltd
insb
xor
sub
push
in
pop
mov
iret
ljmp
inc
ja
inc
mov
sub
and
dec
mov
mov
xchg
icebp
dec
movsb
aaa
scas
test
imul
int3
fidivrl
cwtl
std
shlb
clc
push
dec
xchg
jnp
ret
jno
fisubl
out
xor
lds
or
mov
loopne
push
mov
aas
push
inc
cli
jb
sub
sbb
aaa
leave
lods
dec
mov
outsb
jp
mov
cli
jne
add
inc
pop
in
sbb
imul
rorb
test
jle
dec
cmp
cmp
dec
push
xor
adcb
inc
ss
aad
pop
out
push
pop
aad
sbb
enter
inc
add
add
jne
dec
mov
in
shl
dec
xor
fcoms
insl
push
mov
push
je
test
cmpl
push
xor
jne
sub
in
push
stc
enter
fnstsw
or
fwait
push
xor
out
push
repnz
and
add
pop
cmp
push
or
push
dec
loope
or
insb
imul
rcrl
pop
fcompl
add
mov
xor
adc
jne
out
mov
sub
or
or
pop
or
movb
jns
jae
xchg
mov
insb
cmp
adc
inc
insl
fidivrs
cmp
dec
loop
outsl
scas
ret
mov
cmp
lods
ret
out
pop
nop
sti
jae
rclb
int3
fcompl
mov
ret
ds
push
cs
mov
inc
push
pop
dec
mov
inc
ret
xor
clc
dec
or
dec
mov
sbb
ljmp
popa
jae
test
add
mov
std
insb
sbb
ljmp
mov
cmp
xor
dec
popf
leave
xchg
or
stc
mov
sub
popf
cs
lods
or
aaa
out
push
push
repz
incl
xor
mov
push
jmp
mov
movsl
inc
xor
push
fadds
and
sbb
sub
int3
lods
jae
ljmp
pop
aaa
cmp
js
cmpb
pop
jecxz
dec
pop
cmpsl
addl
mov
lcall
gs
add
icebp
and
or
pop
icebp
add
repz
push
jle
jmp
ret
test
lcall
insb
ret
sbbb
movsb
scas
lea
loopne
xchg
jb
cmc
nop
cltd
shrb
mov
fldenv
adc
jns
movsl
loope
sti
inc
dec
mov
and
jp
test
rolb
dec
movsl
jge
pop
jae
mov
cmc
inc
or
mov
pushf
mov
ficompl
inc
mov
xlat
dec
mov
xor
jp
dec
lret
rcrl
test
push
cmp
inc
push
mov
shll
or
pop
and
add
inc
mov
outsb
movsb
mov
sarl
sub
outsl
pop
scas
add
pushf
push
insb
inc
sub
test
lods
lret
and
fwait
xchg
mov
aas
int3
fiaddl
jge
push
cmp
mov
sbb
in
and
and
je
cld
lahf
ja
movsb
jbe
nop
jle
pop
loop
push
dec
das
movsl
pop
sar
push
sbb
sbb
cmp
jle
push
mov
pusha
push
call
insb
int3
popa
hlt
lods
jge
cwtl
cs
test
push
xchg
pop
sahf
mov
ret
xchg
icebp
lods
scas
mov
push
repnz
imul
mov
push
inc
xchg
xchg
jne
insl
into
aaa
mov
imul
lcall
sahf
xrelease
or
inc
imul
shrb
xchg
lahf
jmp
es
adc
lds
das
sub
mov
lock
push
out
xor
push
jns
and
xor
or
sbb
into
xchg
sarb
bswap
addr16
insl
insb
jne
test
adcb
mov
sub
scas
out
sub
and
cmpsl
test
or
jecxz
adc
shl
ret
cmpb
sbb
push
cmp
mov
and
lahf
scas
out
lcall
cmc
mov
sub
int3
xchg
nop
pop
sub
inc
in
repnz
xchg
neg
push
leave
imulb
jg
out
idivb
jae
xchg
icebp
xchg
mov
push
inc
fnstenv
fcomps
mov
dec
jl
add
xchg
jnp
dec
mov
stos
mov
pop
fs
mov
loop
push
data16
iret
lds
add
mov
cmp
pop
mov
push
sbb
mov
arpl
test
hlt
adcb
and
into
xor
add
pop
and
icebp
fdivs
and
cwtl
adc
jo
lods
cmp
jle
repz
push
dec
repnz
bound
cli
mov
fbstp
xchg
jae
mov
das
jb
and
scas
pop
repnz
inc
xorb
xchg
mov
fwait
add
imul
xchg
in
mov
push
icebp
xchg
cmp
jg
sub
push
dec
call
ss
addr16
fmull
xor
sbb
roll
rcrl
fstp
clc
xor
or
rolb
push
push
je
jnp
mov
or
ror
pop
sub
pop
pop
adc
mov
or
out
inc
jle
out
mov
sub
ds
cs
fadds
test
mov
shlb
fucomip
ss
icebp
hlt
leave
loopne
rorl
imul
movb
push
lret
jnp
in
or
push
cmp
mov
cltd
lret
and
ret
sub
iret
and
stc
mov
lods
mov
jne
out
mov
push
leave
mov
sbb
inc
push
and
mov
inc
jg
das
out
mov
pop
pop
fwait
and
xor
push
xlat
cmpsb
jnp
sti
sub
or
popa
adc
stos
mov
dec
mov
lods
sahf
loope
xchg
stc
fwait
adc
je
insb
ljmp
int3
jbe
aam
cltd
lret
loope
in
dec
enter
aam
repnz
cmp
or
mov
lods
aam
xchg
jge
sub
or
ljmp
or
jne
addl
fsub
add
or
shr
mov
dec
sub
cmp
sub
adc
fsubp
fsts
bound
mov
push
mov
iret
imul
hlt
xor
sub
in
add
sub
ret
fstps
mov
test
lcall
testb
cmpl
sub
push
add
mov
dec
push
mov
aad
xchg
mov
jmp
mov
or
xor
adc
int3
aam
push
std
pop
pop
jno
out
xor
insl
idiv
add
push
insl
mov
popa
outsl
jle
push
and
loop
sti
scas
in
mov
sub
cmp
or
sar
and
dec
mov
cmc
inc
xor
pop
xchg
and
jmp
inc
mov
pop
jmp
cmp
into
aad
sub
mov
adc
adc
sahf
jp
js
pop
xor
rolb
outsl
shl
inc
mov
push
inc
dec
imul
fs
stos
faddl
jne
lods
or
rcrb
pop
sbb
xor
adc
and
sbb
fiaddl
cmpsl
xor
xor
aam
mov
pop
fdivl
mov
std
xor
addr16
push
cmpsl
xchg
jle
jge
in
xchg
pop
jns
dec
pop
pusha
outsb
jle
mov
push
mov
insl
jge
subl
out
les
push
xchg
add
mov
mov
stos
sbb
fnsave
push
sti
ret
inc
add
push
shr
in
adc
aas
out
and
and
adc
adc
inc
pop
nop
hlt
shl
push
xor
push
push
clc
mov
sbb
pop
in
arpl
addb
inc
loope
push
ja
cmc
shll
dec
es
mov
mov
push
mov
mov
adc
je
push
pop
push
fiaddl
inc
stos
xor
das
int
daa
fldenv
in
push
jns
movsb
sbb
int3
mov
sbb
iret
mov
scas
ja
out
pushf
xchg
mov
xor
fdivrp
outsb
lcall
push
pop
mov
push
mov
xchg
inc
xor
js
mov
or
sub
mov
jbe
add
inc
ds
mov
fdivrp
and
imul
sahf
or
test
cmpsb
dec
test
dec
faddp
lds
pop
mov
out
lock
js
dec
mov
pop
cltd
mov
fcoml
mov
cmpsb
popa
movsb
mov
mov
adc
add
mov
adc
shrl
je
dec
add
jg
pop
andb
in
or
in
std
aaa
or
aaa
dec
pop
xor
rorb
mov
testl
xchg
aam
or
ret
dec
rclb
into
mov
lret
or
adc
cmc
pushl
cmp
pusha
mov
xchg
sbb
add
push
pop
cmpsl
mov
notb
pop
lods
cmp
fimuls
divl
sbb
sbb
xchg
sub
mov
popf
inc
lret
in
xchg
dec
cmp
loop
outsb
test
push
pop
mov
pop
mov
mov
sbb
out
ficomps
outsb
dec
repnz
mov
push
std
rolb
in
or
addb
and
adc
or
jmp
nop
push
and
pop
add
xchg
sub
ret
dec
add
jae
inc
inc
inc
arpl
mov
mov
mov
shlb
ja
es
inc
in
sub
inc
jmp
sbb
jne
fwait
stos
mov
dec
stos
or
adc
mov
mov
xor
xchg
icebp
push
dec
mov
sub
and
mov
ret
into
jmp
lahf
adc
cmpsb
test
pop
out
mov
jns
je
lret
and
push
ret
stos
les
add
roll
or
mull
data16
ja
and
out
sub
xor
addl
xchg
rcr
scas
mov
jbe
rorl
and
mov
jge
adc
leave
xor
mov
testb
fldt
inc
mov
shll
xchg
push
sahf
cwtl
lahf
adc
xchg
cwtl
data16
jne
add
negl
clc
rorl
or
mull
int
cmp
add
ja,pn
fsubl
punpckhwd
into
cld
pop
mov
fmul
jno
stos
push
jmp
xor
sbb
fwait
jp
or
xor
xchg
jg
cwtl
hlt
sbb
jnp
and
test
jnp
mov
jl
ss
or
pop
test
lret
mov
outsb
cmp
mov
sub
mov
inc
ret
or
and
mov
stc
ret
xchg
xlat
inc
stos
push
fdivl
sbb
mov
data16
mov
sbb
mov
sbb
push
cmc
cmp
ret
fwait
decb
aad
dec
push
or
loop
lret
cs
xor
cmpsl
jmp
sti
jne
xor
jle
push
dec
js
cmp
pusha
lret
mov
lods
mov
aaa
aad
pop
addr16
fwait
inc
es
push
adc
sub
push
mov
or
add
xor
out
pop
cmp
mov
dec
je
lods
daa
mov
add
push
xchg
jge
xchg
lcall
jl
inc
sub
push
les
divl
cmpsb
adc
dec
cwtl
push
pushf
pop
call
mov
stos
fnsave
popa
sub
mov
cmp
mov
sub
add
jno
sbb
lret
mov
test
cmp
movsl
fimull
subb
jnp
push
and
push
cwtl
cltd
in
dec
ja
jne
jle
mov
pop
into
movsl
xor
push
add
inc
das
xor
cmpb
aad
inc
push
inc
mov
dec
lcall
xchg
popa
sbb
mov
cmp
subb
mov
fcompl
xorl
mov
jno
mov
sbb
add
pop
xor
xor
test
pop
les
fcompl
fld
mov
ja
int
mov
and
icebp
sahf
cmc
andl
xor
dec
in
outsl
push
ficoms
aas
sbb
xchg
pop
out
cmpsl
push
jb
mov
fwait
jb
enter
cwtl
outsl
jae
bound
sub
stos
mov
lret
lcall
dec
jae
lods
scas
cmpps
std
lock
xor
dec
or
and
stos
lds
pop
insl
add
mov
xor
nop
jae
aaa
cmpl
scas
or
jo
lahf
inc
and
incl
cld
fs
mov
or
xchg
aam
mov
xlat
mov
out
xor
scas
mov
movb
mov
cld
mov
ret
xchg
xor
pop
stc
popf
bound
inc
into
or
ds
call
and
inc
dec
or
mov
in
loop
and
dec
sub
jo
dec
stc
sub
or
mov
push
cmc
aaa
outsl
dec
lahf
popf
sahf
mov
sbb
pop
or
pop
icebp
xchg
aam
push
test
mov
jno
mov
adc
sbb
fidivrs
mov
and
mov
add
das
or
movsb
adc
loope
pop
sbb
lret
test
xor
mov
pop
jp
xor
mov
xchg
andb
adc
mov
cmp
outsl
sub
pop
aam
ret
mov
fnstenv
popa
shll
sahf
push
lock
ja
fisttpl
add
mov
fcomps
xchg
ficoms
lret
jl
cld
mov
imul
icebp
cmp
lahf
outsb
rolb
bound
push
dec
xor
in
test
adc
xchg
jmp
jb
push
push
dec
roll
pop
xchg
adc
mov
je
or
xor
mov
mov
jns
imulb
sti
sbb
xchg
xchg
mov
rorb
mov
daa
pop
fstpl
pop
sarl
adc
out
dec
pop
mov
mov
hlt
jmp
dec
pop
mov
sti
push
addb
jg
push
mov
inc
movl
jns
push
inc
xchg
test
repnz
roll
stos
or
push
mov
pop
or
mov
rcrl
repnz
jl
sti
arpl
rcrb
inc
pop
xor
inc
int
xchg
xchg
daa
stos
stc
sbb
sub
iret
lock
sub
movsb
sti
fimuls
es
flds
xchg
adc
pusha
cmp
lcall
sub
scas
andl
cltd
pop
stos
lods
or
out
mov
in
or
mov
adc
rol
mov
popa
dec
stos
aas
pop
popa
fildll
ret
jl,pt
mov
outsl
ljmp
cmp
inc
lret
das
jbe
mov
sub
lret
rcrb
inc
inc
adc
mov
inc
daa
popa
pop
rorl
mov
cmpsl
cld
movsb
out
sbb
and
xor
jl
nop
inc
testl
push
add
fstpl
push
mov
imul
xchg
rdmsr
jae
int
int
lret
cs
sahf
lcall
xchg
sbb
adc
data16
xor
sub
xchg
add
fisttpll
out
loopne
adc
insl
bound
in
les
pop
cmpsl
or
inc
aas
ret
cmp
fnstsw
adc
xchg
add
loopne
fsubr
fs
shll
shl
push
mov
in
jnp
mov
lds
push
sub
outsl
dec
and
or
dec
lods
cmp
dec
mov
sbb
out
add
out
test
popf
int
clc
add
dec
and
pop
inc
lret
loopne
enter
xor
inc
sbb
ss
adc
xchg
pushf
mov
mov
insl
cmpsl
jg
cmp
mov
or
repnz
sub
scas
cmp
jnp
outsb
dec
cmp
fldcw
inc
add
mov
sub
call
inc
lea
pxor
loop
push
mov
arpl
movsb
inc
jns
cmpsl
mov
fdiv
push
mov
push
fmuls
mov
and
cmc
bound
out
imul
stos
sbb
pop
lahf
test
jb
dec
dec
mov
lahf
ja
mov
fwait
in
ljmp
jns
setl
je
cmpsb
clc
dec
imul
pop
sbb
arpl
xchg
adc
cltd
fwait
out
pop
movsb
clc
cli
iret
cwtl
call
adc
pushf
jae
loop
test
pop
lret
add
lahf
sbbl
call
xlat
iret
jmp
cmp
call
xor
sub
dec
mov
xor
adc
fisttps
xchg
xchg
xlat
fnstsw
dec
mov
iret
stc
xor
jb
pusha
das
mov
jns
ficoms
ljmp
mov
aam
leave
push
push
inc
ljmp
roll
xlat
pop
xchg
aam
test
and
sub
adc
dec
clc
jge
push
add
push
mov
aam
xchg
pop
sti
adc
stc
daa
int
cmc
hlt
adcl
adc
inc
cmpsb
push
xorl
mov
pop
jmp
scas
jno
or
and
mov
paddq
fistl
jns
cmp
or
cld
dec
jno
lret
add
cmc
cld
dec
and
push
mov
cmc
call
add
into
xchg
jge
mov
popf
mov
lahf
add
push
lods
mov
jg
sub
cs
scas
in
dec
rorl
pop
xor
sarb
arpl
cmp
bound
rcll
es
adc
xchg
jle
jns
adc
xlat
add
add
fsubrl
insl
out
pop
orl
mov
inc
xor
cmc
jno
xchg
fimull
outsb
jbe
mov
cmp
or
clc
filds
fcmove
out
iret
push
call
popa
insb
out
jmp
and
aam
ret
jbe
mov
andb
push
or
cmp
inc
jg
iret
cld
gs
cmp
jbe
inc
jnp
mov
jae
jno
sub
pop
push
cmpsb
lock
sub
jnp
xor
fistl
shrl
ja
js
sarl
pop
mov
pop
les
movsl
insb
test
rorl
cmp
cs
stc
ds
mov
enter
adc
xor
push
inc
cmp
xchg
jl
hlt
adc
fisttpll
aas
ljmp
mov
aam
in
scas
sub
aad
out
and
inc
ret
mov
add
jp
and
imul
mov
aas
mov
sub
lcall
es
xchg
push
repz
out
xlat
cld
mov
test
pop
or
jae
jnp
adc
in
dec
pop
mov
test
mov
sub
xor
mov
je
test
movsl
loopne
sahf
mov
fwait
movsl
stos
out
cwtl
es
and
push
cmc
mov
pop
lock
sbb
adc
mov
ljmpw
lret
cld
xchg
mov
testl
aam
jnp
les
inc
xchg
push
imul
je
popf
popf
cli
adc
lcall
sti
cltd
pushf
lock
dec
imul
push
sub
ror
stc
push
les
outsb
mov
lods
out
or
cmp
stc
mov
push
mov
cmp
jb
stos
sarb
frstor
or
enter
xor
cwtl
std
adc
pop
xorb
jle
mov
jbe
pop
jge
xchg
imul
jno
mov
mov
ss
dec
and
and
push
sbbl
xor
bound
cmpsl
xchg
jno
int
hlt
jg
pop
es
sti
jmp
pop
ja
js
out
xchg
aaa
leave
xchg
scas
and
lods
addr16
repz
and
lret
jg
stos
or
dec
in
xchg
popf
bound
es
sbb
xor
aam
shl
div
jl
or
add
outsl
popa
adc
int3
inc
insb
cmp
aad
xchg
pop
hlt
pop
dec
mov
or
mov
xchg
cmpsb
das
gs
mov
xlat
add
gs
mov
push
sub
jmp
pop
inc
cmpsl
stos
cmp
aaa
lahf
jns
sbb
fdivr
jecxz
xchg
dec
or
inc
lret
loopne
cmp
insl
cmp
cltd
dec
fs
pusha
jnp
mov
and
and
lods
jl
and
inc
insb
hlt
das
out
out
sub
dec
pusha
sbb
ja
cmp
mov
mov
push
mov
adc
iret
mov
xchg
movsb
mov
aaa
lods
cmc
push
jp
cli
adc
add
adc
inc
sbb
mov
mov
fistpll
popf
out
pop
jp
jbe
out
adc
and
jg
popa
add
rolb
or
dec
dec
aam
jno
mov
sub
roll
imull
dec
and
arpl
mov
adc
add
mov
cmpsb
les
sub
mov
cld
fs
xor
leave
cli
add
inc
in
lods
dec
cmp
mov
cmp
ret
popf
adc
sbb
pop
mov
popa
push
int3
cmp
loopne
lahf
xor
and
mov
mov
add
in
cmp
loop
push
xor
mov
int
in
sub
gs
pop
cmp
popa
repz
fildll
push
push
out
mov
push
loopne
push
mov
rolb
push
dec
jecxz
push
cmp
setnp
shll
xor
dec
push
mov
xchg
xorl
pop
nop
adc
xchg
ficoml
and
mov
jecxz
call
pop
pop
cmpsl
js
and
lret
and
mov
fidivs
clc
imul
lcall
in
cwtl
cmpsb
mov
pop
dec
push
inc
ja
mov
inc
xchg
shl
sub
mov
mov
lahf
mov
push
sbb
push
add
std
jo
ret
push
in
push
leave
cmp
and
sysenter
push
jo
and
outsl
out
insl
push
imul
or
inc
pop
push
jl
or
xchg
fwait
push
nop
lcall
pop
dec
popf
in
hlt
fwait
lret
push
mov
stos
data16
push
aaa
cmp
ljmp
sti
out
fdivs
iret
test
shrb
je
loope
cmpsl
xchg
and
insl
add
push
mov
fildl
sbb
push
pop
shll
inc
stos
mov
add
in
outsl
add
in
and
xchg
fmul
out
xchg
mov
gs
xor
and
data16
dec
loopne
pop
std
mov
cmp
push
stc
adc
nop
mov
xchg
inc
dec
pop
lds
cmp
clc
xorb
jle
sbb
jno
in
pop
push
repnz
and
arpl
dec
shrb
in
nop
inc
add
dec
pop
lods
dec
hlt
mov
lret
daa
mov
cpuid
call
push
aaa
push
inc
fsubrs
cs
lods
cmpsb
in
xchg
pop
stc
in
pop
mov
cmp
loop
ljmp
aad
rcr
cld
cli
inc
cs
xor
cmp
xchg
outsb
test
inc
fs
mov
xchg
or
aad
sti
les
mov
cmc
xchg
push
sub
int
in
scas
push
xor
cmc
scas
lcall
cmp
mov
mov
int3
jbe
cmp
jae
mov
pop
mov
movsb
mov
lret
arpl
push
add
mov
sbb
test
pop
stos
into
jge
mov
dec
fdivr
insb
mov
push
in
mov
push
cli
mov
xor
or
mov
cmp
movsb
cmp
test
ja
leave
pop
jne
add
iret
mov
scas
inc
lods
stc
mov
push
lea
push
mov
xor
inc
loop
jmp
sbb
cmp
das
fsubrl
lret
pop
rcl
in
out
jne
fsubs
repnz
insl
insb
inc
notb
push
sub
xor
jge
push
outsl
push
insb
fstpt
rcl
bound
in
cwtl
ret
adc
xor
adc
in
arpl
sbb
or
in
and
rcrb
imul
lock
rorl
fimuls
xor
iret
lock
sub
adc
push
jae
or
out
das
adc
xor
cmpsb
mov
mov
sub
pop
data16
repnz
dec
sbb
push
pop
hlt
jle
call
dec
adc
negb
xor
imul
xchg
xor
popa
cs
lods
pop
sub
out
data16
adc
stos
aas
dec
rol
sbb
mov
icebp
xchg
xor
cmp
lcall
and
push
pop
dec
push
push
xor
adc
jp
cmc
movsl
lea
test
imul
push
pop
cmpsb
rcl
fnstsw
orl
mov
pop
xchg
cs
aam
cmp
push
mov
cld
pop
mov
push
mov
fwait
mov
ss
lea
cwtl
jbe
or
and
ret
xchg
fxtract
jp
mov
pop
scas
push
pop
cmp
shll
aad
and
or
sbb
adc
shll
inc
mov
movsl
pop
mov
xchg
pop
lods
ficoms
mov
pushf
fcomps
dec
cmp
es
scas
repz
jmp
divl
lahf
pop
daa
xor
jmp
pop
push
dec
shrl
stos
xor
cmp
and
xor
mov
xor
sar
push
outsl
test
cmp
sub
mov
jno
jnp
cmp
sbb
cmp
pop
adc
cltd
adc
xor
xchg
jno
mov
pushf
jne
dec
pop
dec
call
pop
jb
roll
jae
mov
add
push
mov
cmp
lods
xchg
xor
fdivr
pop
or
xlat
cwtl
xchg
jne
lcall
mov
jmp
call
sbb
jl
pop
lods
adc
adc
sahf
neg
lods
sarl
pop
xchg
divb
fstpt
xor
cmp
mov
jle
fdivr
bound
ljmp
adc
mov
dec
pop
sbb
sbb
sbb
dec
test
aas
jl
sbb
lods
ss
daa
mov
xor
aas
test
icebp
xor
repz
pop
ficompl
adc
dec
sub
xorw
pop
mov
xor
movsb
out
push
roll
xorl
stos
js
out
int
dec
sarb
aaa
stos
out
xchg
int
int3
dec
pusha
sahf
call
add
jbe
lret
lock
loopne
add
mov
pop
aad
sbb
ret
popa
mov
in
inc
xchg
loopne
add
sub
cmp
gs
repz
xor
test
jl
cmp
xor
inc
push
out
lahf
rcll
shr
sbb
imul
mov
sbb
cmp
adc
cs
mov
xchg
fisttpll
das
les
push
jnp
push
mov
leave
nop
or
sbb
xorl
or
and
pop
enter
test
jecxz
pop
call
cmp
lcall
clc
loop
push
mov
mov
jg
aas
fistl
xor
add
sbb
jns
test
les
call
add
adc
push
mov
xchg
push
mov
arpl
loope
mov
call
xor
cmp
es
jmp
push
push
jl
testl
mov
pop
jno
push
insl
scas
jbe
fsts
dec
clc
mov
xchg
jg
popf
mov
sahf
popf
enter
dec
xchg
jno
mov
orl
aam
stos
cmp
inc
adc
gs
cmp
addr16
fldcw
mov
cmp
mov
fs
gs
fcomps
gs
test
dec
xor
nop
or
sub
test
not
jp
mov
pop
enter
ss
arpl
jo
jp
mov
cmc
jmp
fs
std
cmp
call
jecxz
out
cmp
jecxz
mov
nop
and
insl
mov
icebp
out
xor
push
mov
add
and
lahf
or
rcrb
gs
fcmovbe
sbb
mov
lret
and
dec
and
add
push
ret
rcrb
mov
rcrb
dec
mov
cld
lods
pop
cmp
push
xor
es
into
pop
cmp
test
push
das
cmp
dec
repnz
add
pop
rclb
lds
mov
ds
sbb
mov
pop
push
fisttpll
loop
jbe
js
jb
xor
mov
mov
mov
fwait
aas
aad
fwait
mov
sbb
push
sub
clc
mov
xchg
test
pop
push
jno
pop
sbb
sbb
sahf
add
orb
sub
aad
inc
xlat
roll
pop
lock
mov
testb
outsl
mov
dec
neg
jecxz
sub
rorl
aad
push
loope
sub
mov
pop
pop
dec
mov
lcall
mov
adcl
repnz
das
leave
or
cmpsb
mov
rol
fisubs
add
sub
add
sbb
out
imul
test
dec
jg
rcrl
push
fwait
stc
test
out
sbb
bound
aaa
mov
ret
aad
imul
add
scas
popa
add
clc
xchg
xchg
lahf
or
in
inc
lods
jmp
je
inc
loopne
lret
fsubr
outsb
jnp
js
repnz
lcall
mov
jmp
out
jo
mov
outsl
in
outsl
ds
enter
fnstsw
dec
outsb
add
and
push
lods
sub
and
push
inc
push
mov
loopne
jecxz
pop
fimuls
negb
sbb
ljmp
pop
popf
fmuls
inc
shlb
and
lret
fdivp
jno
and
mov
push
in
xchg
jle
mov
mov
fsts
in
mov
data16
lock
aas
mov
cmp
mov
gs
dec
mov
call
pop
les
jp
test
jno
push
push
ficompl
movsl
dec
data16
aaa
lds
fcoml
pop
mov
jp
and
inc
add
jg
lret
loope
jge
je
scas
aad
xor
mov
xchg
cmp
aas
mov
inc
les
insl
push
mov
jp
cmp
pop
jge
jbe
add
repz
outsb
inc
enter
mov
mov
cwtl
or
out
mov
stos
fisubrs
test
cmpsl
rcll
divb
and
icebp
sbb
inc
cmpsl
mov
mov
stos
hlt
leave
xor
popf
and
ss
sub
inc
xor
stos
cwtl
sbb
adc
pop
mov
mov
xchg
add
xchg
into
shlb
hlt
lods
xor
cmp
test
clc
and
pop
mov
sub
sbb
leave
sbbb
pop
push
adc
and
mov
mov
adc
jbe
jle
gs
fs
xchg
pop
xor
fcmovbe
int3
out
sbb
gs
xor
cmp
cltd
out
cs
xchg
cmc
xchg
aaa
cmp
dec
add
xor
push
mov
callw
lret
mov
aas
mov
test
jl
mov
test
cmp
fcompl
shrl
xor
iret
test
jl
add
add
nop
aam
movsb
lods
inc
xchg
jp
lret
sbb
inc
popa
cmp
aas
cmpsb
mov
pop
repz
xor
mov
shll
xor
rcrl
inc
je
ljmp
xor
test
dec
jle
pop
lret
and
dec
imul
into
sub
mov
das
lcall
xor
mov
in
adc
stc
xor
jnp
cmp
push
outsl
push
hlt
repnz
popf
xchg
xchg
aam
dec
mov
and
mov
std
mov
dec
jae
push
push
xchg
loope
aas
sbb
push
dec
cmp
mov
test
and
sub
shrl
push
aam
popf
or
stc
out
push
fmul
cli
mov
arpl
iret
sub
inc
stos
imul
sbb
adc
and
push
jns
ret
fwait
popa
dec
mov
sbbl
xchg
xchg
sbb
push
pop
push
mov
nop
dec
push
xor
dec
scas
das
jp
mov
cmp
jge
scas
in
cmpsl
test
icebp
cmp
jp
jnp
stc
fwait
dec
insb
test
outsb
jns
xchg
mov
clc
das
push
shl
add
pusha
inc
lea
jno
jbe
scas
and
into
and
mov
fldcw
stos
pop
and
push
dec
daa
or
xchg
cld
rcr
mov
xchg
and
aas
sar
fistpl
idivb
mov
pusha
adc
and
mov
jo
scas
popf
cli
rcrb
mov
inc
ja
repnz
push
pushf
push
sub
bound
bound
out
sub
xor
push
mov
mov
in
lahf
scas
cmpsb
fisubs
jb
incb
js
aas
push
add
cltd
in
mov
cld
jmp
or
flds
int
cld
pop
stos
cmp
or
inc
ror
sbb
mov
dec
dec
repnz
add
mov
in
imul
inc
mulb
scas
sbb
mov
sbb
enter
mov
pop
ljmp
fstpl
rclb
sub
bound
push
push
or
cld
scas
cmp
outsb
add
rorl
adc
cmp
insl
adc
cmpb
sar
xchg
ss
mov
cmp
adc
shlb
jae
loopne
mov
aaa
pop
lret
pop
cmpsl
repz
cmp
fldl
add
pop
mov
cmp
sub
out
xchg
lock
mov
je
mov
loope
jb
cmp
mov
test
daa
mov
mov
fstpt
dec
iret
xor
add
push
jns
dec
arpl
mov
jbe
test
fdivs
jo
push
cwtl
push
int
popf
push
call
decb
add
mov
push
test
shll
les
addb
pop
mov
jne
sbb
enter
adc
sti
lcall
adc
xor
and
in
outsb
dec
leave
mov
pop
in
test
push
cmp
ss
mov
gs
cmpsb
sbb
loope
lea
inc
jnp
mov
imul
into
out
pop
inc
jecxz
add
out
sub
out
test
adc
es
push
jae
rcrb
test
pop
cmp
xchg
pushf
lods
add
out
roll
jb
mov
sbb
add
mov
adc
mov
push
cmp
sbb
xchg
xorb
movsl
cmp
repz
stos
cli
cmp
dec
lcall
push
sahf
ja
xchg
and
pop
push
in
test
push
ret
dec
jne
popa
jns
mov
icebp
sbb
pop
fs
fmuls
lods
cld
stos
or
popf
ljmp
hlt
add
fcoml
scas
xchg
sbb
dec
movsb
sbb
filds
fwait
bound
xchg
jno
testb
emms
push
cmp
and
fs
mov
cmp
dec
mov
fists
dec
lds
and
push
cltd
out
pop
or
les
loop
inc
and
add
arpl
pusha
fnstcw
sahf
push
mov
aam
lea
push
pop
mov
sti
ds
xor
addr16
mov
xor
xchg
je
out
inc
push
push
test
sub
mov
daa
push
lret
int3
jp
out
fwait
out
sub
dec
mov
mov
test
xor
lea
jmp
mov
xchg
mov
pop
and
mov
mov
mov
push
cmp
popa
push
outsb
sbb
pop
xchg
xor
inc
loop
or
push
mov
and
iret
or
or
push
mov
filds
bound
jbe
mov
out
loop
push
lds
or
pop
insb
imul
cmp
popf
jg
rol
add
daa
lcall
scas
sbb
adc
and
popf
push
test
push
mov
fldcw
cmp
test
stc
in
sub
lret
or
adc
nop
push
push
call
jecxz
sub
xchg
fwait
pop
lds
jl
outsb
lock
in
repz
nop
xchg
movl
sbb
sarb
leave
sahf
jp
dec
imul
cmpl
aas
repz
lea
das
cmc
ss
push
repz
sub
cli
xor
jg
ds
inc
insb
lret
mov
pop
das
mov
pop
mov
imul
push
mov
lcall
xchg
inc
cmp
rcll
pop
adc
xor
das
int
ret
cwtl
lock
nop
imul
lahf
dec
pop
roll
repz
imul
lds
pop
cmp
stos
leave
adc
dec
arpl
arpl
or
push
daa
ds
dec
test
dec
lea
and
sub
ljmp
enter
out
rcll
cmc
out
mov
fwait
sahf
xchg
cltd
jbe
mull
push
movsl
mov
sbb
or
cmc
pop
xchg
mov
add
pop
xchg
push
xor
arpl
mov
mov
mov
jl
xchg
and
jns
mov
aad
pop
mov
inc
jae
dec
add
mov
mov
adc
and
dec
iret
cmp
imul
and
xor
pop
insb
dec
roll
nop
mov
sbbl
cmp
pop
jg
and
subb
jecxz
mov
push
jb
bound
out
lret
jle
ja
lock
pop
lds
fwait
clc
fidivs
addr16
dec
aam
test
fmul
xchg
ljmp
lea
mov
sbb
mov
or
push
xchg
cmp
cmp
add
inc
jnp
js
push
jne
inc
mov
mov
mov
popa
mov
and
lods
sahf
and
push
in
outsb
or
or
sbb
popf
jnp
lods
adc
pop
mov
add
in
shrl
out
mov
mov
int
xor
or
fwait
mov
push
jmp
mov
sbb
inc
adcl
gs
fdivrl
xor
push
mov
or
xor
inc
dec
sub
notl
xlat
xor
jmp
aam
clc
sti
cwtl
ret
stos
pushf
popf
sub
sub
jne
rorl
jne
sub
das
rcrl
mov
mov
adc
sub
push
mov
fstl
fs
int
enter
outsl
mov
lds
nop
ds
xor
out
ss
orb
or
and
mov
lods
and
data16
sahf
test
push
clc
or
pop
inc
jle
test
or
data16
or
pop
subl
push
pusha
cmp
imul
cmpsb
mov
push
ret
pop
jnp
movsb
sub
add
les
dec
call
or
clc
sbb
xchg
pop
jne
scas
pop
test
into
shl
dec
negb
inc
imull
and
enter
daa
or
sbb
push
xor
andl
dec
test
popf
negl
cwtl
sbb
cltd
mov
rclb
cmc
mov
aaa
loope
imul
adc
cmp
push
outsb
pop
cmpsl
push
inc
ljmp
lret
divb
addr16
cli
sbb
inc
imul
fs
fnstsw
icebp
hlt
mov
inc
push
jnp
lcall
fnsave
into
out
iret
pop
pop
cbtw
mov
push
ficomps
test
and
repz
adc
sbb
cmp
push
push
dec
dec
iret
loop
inc
ret
ja
and
jns
addr16
cmp
mov
mov
into
repz
inc
push
iret
push
mov
aaa
mov
xchg
pop
out
mov
sub
jl
ror
jl
dec
test
lea
push
movsb
mov
pop
shrb
cmpb
sub
add
sub
push
aas
fwait
stos
int
inc
in
inc
pop
dec
jl
lahf
adc
or
or
mov
js
xor
bound
movsb
push
push
cmpsl
sub
movsl
insl
arpl
test
popa
add
lock
pop
push
xchg
loop
aas
cmp
iret
imul
pop
pop
push
sar
por
adcl
pop
std
fisubrs
or
adc
jl
cmp
insl
dec
fst
gs
mov
dec
enter
adc
add
aam
adc
cmp
bound
fcomps
test
insl
push
sub
push
inc
dec
popa
dec
and
inc
in
pop
mov
in
xor
or
ljmp
mov
inc
xchg
add
sti
fsubrs
inc
mov
dec
mov
pop
leave
xor
mov
mov
jp
in
sbb
jo
pop
cmp
inc
pop
shrd
faddl
jno
aas
shl
ja
nop
adc
lods
mov
enter
pop
jb
cmp
pop
jmp
dec
jno
adc
jl
mov
pop
push
and
jmp
jmp
lods
push
xor
sub
sahf
sbb
or
and
pop
cmp
icebp
push
adcl
xor
insb
mov
cmp
or
dec
push
cmp
out
xchg
andb
jae
dec
icebp
aad
ficoms
sbb
xchg
cwtl
sub
add
daa
mov
shll
fisttps
add
adc
jmp
push
icebp
xor
xor
sbb
cmp
inc
mov
sub
ljmp
popf
xchg
cmp
test
outsb
aad
sbb
js
push
out
cli
xor
cmpsl
ss
mov
jns
fstpl
xorb
cmpb
aas
std
outsl
rcrl
clc
lea
mov
in
mov
ja
out
mov
push
dec
popa
sti
pop
iret
push
pop
lahf
in
jae
jne
aaa
add
in
fwait
jo
addb
aam
scas
fcoml
push
fst
fildll
in
sbb
pop
cmp
jmp
xor
or
xchg
sbb
sub
pop
roll
jne
pop
mov
mov
xor
rorl
rorb
xchg
ret
fucom
push
lret
les
xlat
xor
inc
sarl
pop
mov
mov
out
clc
cltd
adc
cmp
pop
lret
xor
mov
shr
mov
outsb
or
shlb
xchg
js
sbb
adc
sbb
or
test
cmp
cmp
cmp
and
xorl
inc
xchg
and
push
dec
pop
ficomps
out
xchg
cld
pop
sbb
icebp
adc
cmp
cmpsb
mov
or
mov
or
data16
inc
pop
jg
push
loopne
ds
clc
sti
xor
cmpsl
faddp
cmp
int3
push
xor
xchg
mov
fadds
insl
mov
xrelease
je
inc
pop
aad
inc
push
hlt
scas
mov
adc
dec
cmpsl
hlt
int3
scas
outsb
xchg
call
arpl
or
pop
dec
repz
lret
sub
pop
fdivl
xor
jg
mov
ror
scas
fmul
call
clc
push
dec
jp
cs
mov
mov
dec
and
ds
mov
int3
outsl
sub
xchg
sub
es
xchg
cmp
mov
icebp
sbb
xchg
scas
and
xor
sahf
dec
and
mov
notb
or
addr16
push
pop
fsubs
inc
sub
adc
sti
hlt
js
sub
mov
cmpsl
cwtl
outsl
out
xlat
cmp
xchg
jb
jns
scas
mov
xchg
cmpb
inc
push
in
push
movsb
roll
or
popa
sbb
xchg
sub
psubd
and
daa
jb
movsl
sti
dec
push
jge
cltd
dec
push
pop
loope
push
and
js
insl
dec
dec
out
pop
push
mov
sbb
in
dec
mov
adc
adc
add
aas
inc
add
xchg
addr16
fdivs
mov
cmp
nop
shr
inc
mov
lret
xchg
mov
add
and
jl
jge
push
test
xchg
cs
mov
mov
rorl
cmp
enter
sub
or
mov
mov
pop
aaa
jne
dec
dec
adc
testb
shll
mov
rcr
jo
out
jno
xlat
in
jb
xchg
xlat
pop
and
mov
mov
or
or
clc
iret
rcll
xchg
jo
push
in
jno
out
mov
mov
testl
lods
arpl
xor
push
jno
data16
mov
jg
popa
call
dec
sbb
jno
mov
repnz
insl
inc
test
adc
push
clc
cwtl
aas
dec
aam
cmp
xchg
and
imul
inc
jae
cmp
repnz
sub
adc
ljmp
cltd
push
cld
mull
mov
ficompl
enter
repz
pop
mov
mov
pop
ss
movsl
xor
daa
mov
jp
push
add
and
test
dec
pop
fadds
shlb
cwtl
sbb
pop
inc
ja
push
dec
jp
inc
inc
arpl
das
sbb
xor
add
dec
pop
xchg
dec
div
mov
cmpsl
test
stos
nop
and
xchg
mov
pop
lods
out
out
aam
lods
roll
mov
push
in
lea
xchg
lea
add
test
xchg
arpl
out
ret
test
sbb
sub
rolb
dec
jno
cmpb
fadd
sbb
loopne
inc
xor
jmp
popa
cld
push
sti
pop
sub
xchg
dec
dec
les
sbb
xor
ja
or
outsb
xor
popf
or
mov
mov
mov
js
pusha
out
mov
sbb
movsl
cmc
aad
mov
sub
jg,pn
push
mov
dec
inc
pop
cmpsl
pop
or
or
lods
push
jnp
or
shlb
mov
data16
or
mov
hlt
add
lret
dec
jmp
insl
mov
mov
aas
mov
enter
aam
adc
xchg
cmpsl
insb
icebp
outsb
imul
dec
or
ficoml
push
fistps
pop
loopne
mov
movsb
pop
imul
jp
jo
pop
stos
test
stos
cwtl
popa
outsb
out
pop
push
out
push
adc
cmp
add
inc
stc
dec
cs
insb
cltd
mov
xchg
inc
pop
imul
dec
mov
push
mov
pop
popf
lret
push
add
pop
aas
insb
xchg
mov
or
leave
and
inc
lock
push
repz
movsl
out
popf
mov
dec
les
pusha
sub
ja
outsl
cld
xor
outsl
inc
mov
cmpsl
lahf
out
in
insl
jns
in
insl
dec
rol
fcomps
push
xor
test
lahf
rcrl
mov
cmp
mov
je
in
jge
idivb
xchg
push
ljmp
push
jnp
cmpl
mov
pop
push
sub
sbb
out
mov
push
rep
bound
inc
cli
mov
push
push
xlat
push
push
inc
sahf
aas
lea
sarl
lcall
shrb
ss
mov
stos
mov
mov
xor
jle
xor
sbbl
jne
adc
inc
stos
jle
shlb
sahf
cmp
nop
aas
data16
rolb
mov
hlt
fiaddl
xor
out
fisubl
data16
cld
movsl
cwtl
hlt
clc
fldenv
inc
stos
xchg
add
push
and
or
cmp
mov
sbbb
adcb
lea
jecxz
mov
dec
iret
inc
jp
push
call
daa
push
shlb
pop
pop
shl
das
shlb
push
dec
mov
and
ja
lcall
jge
mov
cmc
inc
xor
stos
sub
ja
mov
dec
cmp
push
inc
sub
xor
pop
xor
push
or
sub
ja
cmpsl
and
jne
push
jl
pop
push
sub
and
lock
mov
sarb
rcrl
adc
popl
cmp
test
mov
dec
sub
popa
out
and
adc
adc
fsubrp
jl
stc
or
push
jns
sbb
xlat
idivb
test
add
push
add
idivl
or
mov
scas
pop
test
loope
fistps
icebp
sub
push
inc
cmpl
cs
and
sbb
adc
sub
cmp
jmp
fstpt
and
dec
mov
out
dec
jne
inc
ret
or
mov
cltd
pop
inc
xor
cmp
scas
push
xchg
loope
pop
je
ret
inc
aad
cmp
pop
pushf
pop
and
pusha
in
mov
push
pop
in
sub
lods
lock
fninit
mov
ja
push
mov
jb
popa
push
fwait
xor
push
pop
cs
xchg
cltd
aam
mov
xor
fidivrs
adc
and
or
mov
rol
hlt
cs
jbe
and
jne
cmp
mov
scas
data16
enter
testb
mov
inc
jne
pop
lods
xor
fisubrl
mov
lahf
jae
add
mov
pop
outsl
mov
roll
aad
pop
rcl
and
jae
fwait
daa
mov
out
pusha
inc
cld
push
mull
xor
push
sub
mov
aas
lret
push
cmp
or
int
jno
pop
and
xchg
push
shll
or
jmp
stc
xchg
data16
dec
nop
outsl
mov
adc
addr16
mov
jae
mov
in
xchg
mov
mov
mov
and
or
shlb
xchg
icebp
cmp
out
or
jnp
cmp
or
mov
loop
movsl
clc
das
dec
cmp
pop
jb
sub
cltd
add
test
sbb
cmpsb
xchg
jnp
dec
iret
insb
dec
push
jae
mov
ds
dec
adc
mov
fists
push
and
adc
pop
mov
inc
mov
jb
stos
shld
lcall
int3
movsb
jg
and
and
popa
lret
leave
aam
cwtl
aam
ss
lret
mov
inc
int
sbb
test
mov
xchg
lods
addr16
ss
add
jnp
jbe
in
pop
je
rol
add
ds
out
or
enter
loop
icebp
je
mov
cmc
xor
fnop
mov
jl
or
in
ljmp
insb
ficomps
mov
imul
jle
dec
jns
lret
push
sub
aad
sub
xchg
ret
ret
stc
movsb
and
imul
mov
adc
mov
sub
je
sbbl
jne
sub
repz
xchg
xor
dec
repnz
outsb
aam
iret
scas
imul
mov
push
push
in
fmul
dec
sarb
jecxz
popl
sqrtps
jo
repz
jb
js
dec
lahf
rolb
jns
jns
xchg
or
sbb
mov
adc
cli
sub
mov
incl
cwtl
add
push
mov
pop
mov
repnz
fdivrs
rcrb
xchg
das
dec
xor
push
or
add
jl
dec
pop
sti
ficompl
mov
movsb
inc
push
dec
aas
jb
popa
adc
xchg
sub
push
pop
pop
cmp
insl
pop
ja
stos
aaa
cltd
xor
rorl
mov
inc
xorb
jmp
jecxz
iret
xor
adc
cmp
bound
cli
roll
cltd
jge
repnz
mov
jg
push
pop
es
xorl
pop
int
lahf
pop
in
push
bound
pop
nop
jne
pop
mov
and
dec
pusha
and
loopne
cmp
pushf
leave
mov
movb
add
or
dec
in
lea
fdivrs
inc
xchg
mov
fdivrs
sti
or
in
xor
popa
sub
fisttps
push
notb
addr16
mov
cli
add
incl
jns
sub
in
test
mov
popa
push
int
or
jno
and
insb
jns
aam
jns
inc
cwtl
xchg
testb
andl
xchg
pop
pop
jne
push
lea
push
pop
aam
mov
test
repnz
repz
mov
sbb
xlat
lcall
cwtl
enter
out
out
pop
movsl
and
or
xor
test
pop
call
mov
cmp
mov
add
mov
aaa
jmp
xor
cmpsl
or
int3
outsb
cli
dec
mov
cli
and
push
loop
inc
ret
loope
loop
ret
jg
jmp
pop
mov
sbb
xor
test
adc
and
repnz
and
rolb
data16
lods
dec
cmp
mov
xchg
sub
faddl
cmp
xor
dec
push
leave
lret
jb
jnp
shrl
imul
sbb
in
jecxz
imul
sub
scas
jb
repnz
add
lea
ror
scas
xchg
fdivrs
mov
lcall
out
ja
push
ja
mov
sbb
pop
lret
pop
jnp
mov
xor
jno
les
dec
gs
xchg
pop
scas
je
mov
loopne
mov
xchg
ret
repnz
aad
jnp
clc
lret
cmp
dec
fcmovu
adc
repz
leave
or
mov
lcall
and
push
mov
xchg
cs
das
jg
in
nop
and
sbb
add
xchg
fiaddl
xchg
loope
xchg
and
pop
daa
jmp
cmp
loope
mov
fisubs
in
iret
xchg
fidivs
stos
in
pusha
test
test
out
jge
test
aaa
xor
lahf
shrb
and
add
iret
lea
js
xor
add
adc
mov
or
xchg
push
rcrl
sbb
cmp
mov
mov
imul
adc
test
in
ja
adc
inc
std
push
mov
inc
aaa
movsl
shll
push
fwait
adc
cmp
push
mov
ja
test
shll
cmp
in
push
dec
add
dec
jae
pop
int3
mov
dec
call
fdivrl
dec
sbb
lcall
out
ficoml
test
or
icebp
jl
out
push
jnp
and
pop
mov
pop
mov
lods
mov
mov
jp
pop
jmp
pop
cwtl
inc
pop
or
lahf
addb
mov
test
push
push
out
or
mov
lds
aas
jbe
ljmp
iret
lock
lods
pushf
jle
out
push
and
mov
daa
sub
cld
and
test
out
mov
adc
mov
out
mov
cld
hlt
das
xchg
faddl
pop
gs
pop
xchg
sbb
in
sti
add
push
in
mov
pop
and
ds
ja
sub
and
pop
jge
into
sbb
xor
movsb
cld
dec
clc
jp
cmp
add
cmp
xchg
andb
sarb
lods
arpl
push
push
stc
push
aaa
ja
inc
jne
mov
add
and
mov
push
add
or
add
psraw
jecxz
test
sarb
pop
or
or
fcmove
xor
je
fs
in
out
xor
xchg
repz
ret
icebp
xor
push
fldenv
std
pushf
js
adc
ss
decb
pushf
fldcw
arpl
aas
jmp
add
ret
stc
pop
adc
pop
add
sbb
sub
xchg
cli
lcall
mov
and
out
xlat
xchg
sub
sahf
pop
mov
sar
cmp
rcrl
and
pop
push
mov
cmc
pushf
xor
and
dec
lock
and
sub
jnp
push
cmp
insl
les
adc
fnstenv
mov
cmc
inc
sbb
call
mov
xor
jnp
rolb
pusha
js
inc
sub
rolb
ret
jo
mov
inc
out
add
out
add
mov
and
fildl
mov
out
dec
jno
xchg
cmp
gs
pop
pop
sub
in
stc
scas
cmp
push
mov
push
push
mov
jle
aaa
arpl
add
sbb
sbb
dec
test
jb
mov
mov
call
pop
xchg
nop
jnp
mov
xchg
pop
sbb
mov
sub
fprem
add
add
mov
aas
jp
xchg
mov
iret
ds
push
mov
xchg
repz
adc
pop
sbb
xchg
dec
imul
or
push
test
lds
or
adc
scas
iret
popa
mov
inc
fisttpll
push
out
lea
push
cld
jp
sub
popa
inc
je
insb
nop
mov
xchg
dec
idivl
cmpsb
push
pop
iret
leave
out
inc
or
repz
movl
push
and
pop
stc
sarb
mov
data16
push
mov
mov
fwait
sub
jecxz
inc
cmpsb
das
test
cmc
sarb
dec
cmp
mov
in
data16
rcll
fstpl
notb
jae
mov
and
cmpsl
lock
sbb
xor
pop
mov
cmc
dec
or
mov
mov
add
dec
dec
jmp
les
mov
ret
xchg
push
inc
test
into
lahf
js
inc
icebp
ja
sub
xchg
js
bswap
jg
mov
cmp
mov
push
shll
push
cmc
mov
jbe
out
ds
fcompl
push
adc
and
ds
add
jbe
jg
mov
pusha
lcall
mov
dec
ja
rclb
jo
cld
sbb
xchg
xchg
ss
movzbl
pop
pop
dec
mov
push
fucom
jg
outsb
jl
sbb
fistps
xchg
movl
daa
out
bound
les
movsl
outsl
mov
mov
iret
pop
shll
push
enter
dec
cmp
outsb
cmp
stos
addr16
shlb
add
repz
add
pusha
push
or
pop
ja
popf
push
shll
cwtl
dec
fstpl
mov
mov
repnz
in
not
mov
fnclex
and
aaa
xchg
adc
aad
in
push
mov
inc
cmpsb
ljmp
add
out
xchg
ja
jmp
push
or
adc
loope
or
lds
loope
out
pop
ja
jmp
and
inc
and
mov
sub
bound
imul
mov
mov
mov
dec
jnp
mov
test
xor
mov
push
mov
push
imul
in
xchg
cmpsb
je
mov
das
in
rcll
popf
ret
cmpsb
add
out
or
sbb
cmp
sub
or
jp
dec
pop
in
push
dec
adc
popf
push
and
dec
mov
aad
loope
out
popf
and
call
call
sub
mov
cmpsl
adc
std
jno
adc
dec
sbb
mov
test
adc
dec
pusha
and
xchg
lods
cmpsl
xchg
imul
jmp
xorb
sahf
add
cmp
jp
data16
or
jl
pop
out
cli
sbb
cli
cwtl
out
push
dec
sbbb
mov
sar
inc
pop
sbbl
xchg
inc
pop
and
lods
orl
dec
inc
xchg
jge
or
mov
cmp
rorl
push
inc
cmpsl
repz
inc
ja
jmp
ss
insl
push
pop
loopne
jmp
cltd
push
push
lret
pop
mov
or
fidivrl
cld
sbb
push
push
dec
fldt
dec
sub
repnz
or
nop
fcomps
xchg
insl
cwtl
cmp
add
xchg
add
mov
or
outsl
inc
stos
sar
mov
test
cld
dec
call
xor
nop
sbb
xchg
dec
jno
out
in
mov
jb
inc
mov
arpl
adc
test
movsb
insl
sbb
add
add
sub
mov
divl
sbb
sbb
loope
push
mov
push
repnz
xor
jbe
inc
jo
mov
shrl
cwtl
fst
pop
mov
mov
jge
sbb
in
push
movsb
pop
test
sbb
js
mov
testl
out
adc
mov
jb
mov
ljmp
mov
jmp
xor
fsubr
push
call
repnz
enter
jmp
pop
enter
out
int
dec
movsl
jmp
or
fidivl
and
lds
sub
inc
xchg
and
jmp
push
hlt
cs
imul
stc
lahf
aad
std
sbb
adc
push
adc
push
in
test
sbb
addr16
adc
mov
and
cmc
sbb
cmp
cmp
add
fdivs
xchg
daa
sub
sub
jnp
adc
mov
call
in
mov
insl
iret
test
aad
pop
int
mov
jg
mov
shlb
push
lret
test
xchg
lahf
inc
in
lods
sti
adc
scas
addb
jmp
insl
dec
sub
adc
mov
cmpl
push
inc
rcl
ljmp
mov
pop
xlat
mov
sub
out
aad
xchg
cs
sti
adc
hlt
bnd
stos
cmp
lret
dec
repnz
dec
add
stc
push
das
sub
fsubl
push
sub
lea
ljmp
hlt
stos
movsb
add
insb
xorl
cmp
out
cmp
add
inc
sbb
pusha
jno
mov
cs
shrl
dec
idivb
lret
jl
mov
shrl
rorb
mov
pop
inc
sub
jbe
xchg
sub
adc
jle
test
xchg
push
cs
dec
xchg
pop
mov
scas
outsb
mov
jp
scas
jne
mov
jnp
add
inc
out
cmp
mov
cmp
jae
sub
imul
fs
jb
jg
mov
jae
stos
imul
jae
ret
test
sub
pop
dec
pop
sub
sbb
xchg
dec
dec
mov
push
stc
shlb
lret
mov
push
adc
stc
add
push
daa
decl
ds
mov
inc
mov
dec
icebp
push
rolb
and
sub
ljmp
hlt
mov
inc
cmp
jbe
sub
mov
mov
in
push
adc
inc
test
into
cmpb
int3
inc
cmpsl
pop
lods
xor
xchg
sbbl
sbb
jbe
lahf
popf
and
inc
pop
fcoms
add
aam
popa
sbb
jl
xchg
icebp
add
pop
in
jecxz
mov
sub
dec
int3
imul
xchg
in
sahf
cmp
daa
adcb
add
inc
sbb
cmp
and
mov
jbe
and
xor
inc
testb
inc
adc
inc
jg
sbb
mov
movsb
inc
scas
pop
sbb
in
ljmp
testb
mov
aaa
dec
xchg
lahf
inc
jns
call
jno
dec
mov
pusha
pop
inc
std
mov
cltd
fcmovnb
push
call
sarl
and
out
xchg
stc
rol
leave
test
hlt
cmovb
ss
xchg
jl
and
sub
pop
adc
xlat
cmp
cmpl
ret
insl
inc
cld
mov
and
mov
test
flds
and
insl
pop
add
lcall
push
shll
rcll
fidivs
sub
mov
leave
call
xor
incb
imul
dec
movsb
inc
add
mov
sti
mov
lock
je
mov
imul
or
aam
jae
adc
mov
rorb
pop
xor
imul
cmp
repnz
mov
lea
pop
aas
push
xchg
mov
mov
insb
int
dec
shr
data16
xor
dec
in
cltd
lret
dec
out
xchg
or
pop
idivb
ds
jge
into
loop
pop
setnp
push
roll
loop
or
push
lret
hlt
sbb
xchg
and
push
incb
sub
xor
pushl
or
je
xor
jns
sbb
cs
dec
and
jmp
or
shll
pop
aaa
push
or
loope
adc
push
std
lahf
sbb
adc
sub
mov
add
push
dec
xlat
ret
xchg
cld
mov
gs
mov
lcall
jae
jb
mov
mov
mov
mov
mov
fisubrl
or
sbb
imul
lcall
jb
push
lea
mov
mov
aam
fs
cmp
fwait
add
sub
or
daa
jmp
jbe
adc
scas
or
test
lret
mov
jge
sub
sub
repz
jg
xchg
jg
pushl
cltd
pushf
or
loop
out
add
add
cwtl
sub
into
adc
js
shlb
std
mov
mov
mov
inc
pushf
enter
lock
jno
pop
sarl
fdivrs
and
cwtl
cmpb
arpl
in
mov
das
xchg
add
into
decl
repz
sbb
out
repnz
stos
xor
xchg
cltd
or
cli
jo
roll
push
and
cmpb
repnz
pop
inc
or
fsubrs
cli
popa
mov
popa
pop
mov
push
popl
pop
xor
sbb
push
push
pop
inc
and
loope
or
inc
inc
scas
nop
jmp
int
aaa
clc
rolb
mov
scas
push
rorb
je
xor
xor
fs
pushf
and
out
inc
repz
pop
outsb
mov
mov
sub
and
int
fistps
ror
mov
roll
adc
movsl
orb
jmp
lret
jnp
and
cltd
mov
ret
cmpl
mov
dec
scas
push
addr16
jg
add
jae
or
ljmp
inc
mov
insb
xchg
pop
icebp
adc
xor
repz
mov
std
subl
inc
cmpsl
inc
pop
dec
enter
push
clc
dec
cmp
pop
mov
push
mov
cmc
mov
sub
imul
sub
add
or
pop
int
in
sbb
fldenv
and
pop
imul
repnz
dec
repnz
loopne
pop
sub
mov
sbb
push
into
xchg
jmp
inc
daa
push
jge
pop
outsb
pushf
loop
pop
bnd
jne
sarb
lock
push
loopne
cmp
pop
or
pop
mov
jg
fsts
cmc
cmpsl
jo
xlat
in
cli
jecxz
mov
lea
mov
into
push
shll
xor
clc
sub
ret
adc
in
push
ret
xchg
xchg
mov
cmp
aaa
aad
sub
add
inc
test
sbb
pop
insl
mov
push
sbb
shlb
mov
test
and
lahf
ret
jmp
imul
mov
fstpt
pop
and
iret
fbld
dec
mov
cmp
mov
xchg
bnd
in
test
push
stos
into
nop
mov
and
fs
jp
mov
lods
fstpl
xor
lock
mov
jae
pop
sbb
in
leave
mov
das
js
cmpsb
fldt
xor
scas
xchg
and
pop
popf
movsb
or
mov
mov
mov
std
mov
test
xor
int
jno
cmp
push
test
jmp
aam
xchg
xchg
das
fadd
mov
sbb
arpl
aad
cwtl
popf
add
push
sbb
push
push
xchg
fiaddl
or
jae
cld
cmp
mov
sbb
or
pop
pop
pop
ljmp
bnd
ds
pusha
jmp
rcll
cmp
dec
aam
insb
xchg
mov
insl
pop
aaa
dec
push
jbe
adc
adc
inc
outsb
sarl
cwtl
or
and
xlat
mov
add
pop
jp
stos
cmc
loope
popf
xor
iret
sub
add
xchg
cmpsl
jae
and
ret
xor
enter
pop
push
aam
hlt
mov
hlt
cmp
sbb
pop
fxtract
aas
fdivrp
jne
pop
hlt
in
pop
or
push
lahf
fbld
push
mov
dec
shl
scas
add
mov
mov
cmp
jb
fnstsw
add
pop
mov
lahf
dec
or
insl
scas
nop
sbb
loop
loopne
push
in
or
adc
out
movsl
jae
sbb
call
out
push
add
orb
iret
xorb
scas
fistl
arpl
das
lahf
mov
dec
push
pop
jne
and
rorb
ds
dec
cwtl
orb
jg
std
xor
iret
int
jl
and
out
mov
sub
out
aad
xchg
dec
mov
inc
sbb
lock
std
test
sbb
shll
lods
movsb
and
int
xchg
gs
inc
int
ficompl
fisubl
outsb
shrb
cwtl
fwait
push
xchg
or
cwtl
xchg
bound
mov
test
jmp
jb
orb
lock
test
mov
mov
sub
stc
cmp
xchg
fnstenv
fldcw
jb
icebp
mov
in
std
inc
mov
outsb
or
lcall
test
ret
and
add
or
roll
xor
les
out
xor
push
mov
lods
ljmp
lock
jo
out
mov
push
int3
cmp
lea
cmp
sub
add
lahf
dec
call
nop
cmp
push
mov
cmp
pusha
adc
mov
mov
movsl
icebp
pop
mov
dec
push
mov
rolb
cmp
imul
add
jne
mov
hlt
mov
sbb
inc
ror
and
fidivrl
inc
cmpsl
mov
testl
xchg
cmp
mov
mov
or
xchg
push
test
sub
push
arpl
mov
jle
dec
sti
repnz
lock
or
dec
fucomip
sbb
dec
cmpsl
xchg
daa
ret
jae
dec
xor
shll
div
lea
add
out
pop
in
subl
sbb
cmp
pop
jns
dec
pop
push
xor
fwait
mov
xchg
and
inc
inc
ja
mov
cli
inc
popf
bound
add
sbb
push
inc
jo
push
or
inc
vlddqu
pop
lahf
pop
repnz
ja
ret
les
int
mov
out
aam
dec
int3
pop
dec
lods
fs
out
arpl
dec
xor
mov
pop
or
jge
adc
les
add
mov
imulb
fmull
pop
mov
fwait
outsb
js
mov
mov
aaa
pop
in
out
fmull
add
push
xor
cs
fildll
fbld
outsb
push
mov
sub
pop
fidivl
mov
pop
outsb
xchg
mov
pop
xchg
je
cmp
push
js
in
call
fsubrl
test
loopne
enter
hlt
mov
jnp
pop
dec
jmp
lcall
repnz
lods
cmp
fwait
add
ret
sbb
sbb
fwait
aas
jns
jmp
sbb
aad
les
pop
mov
loopne
jge
pop
sbb
in
enter
pushf
lahf
and
fcoml
mov
xchg
xchg
daa
rcll
lret
and
cmp
int3
insb
in
sub
pop
dec
dec
inc
je
sbb
mov
mov
cmp
leave
mov
mov
pop
push
and
rorb
push
inc
push
lds
mulb
or
adc
push
xchg
xchg
pop
mov
inc
and
push
pop
es
lret
aad
xchg
insb
pop
movl
push
rcl
push
lea
sub
inc
dec
scas
negl
rorl
cmc
scas
adc
fsubrl
popf
xchg
mov
stos
andl
fiaddl
sbb
push
jp
fwait
fs
jge
je
or
insb
sbb
scas
push
mov
pop
rorb
sub
jge
ret
lods
adc
jns
pop
xlat
mov
xchg
incb
push
and
dec
into
std
adc
mov
jle
xor
pop
sahf
sub
pop
pop
dec
mov
rcll
push
lret
push
movsb
bound
xor
mov
sub
fidivrs
push
jbe
imul
les
cmp
jge
and
test
cmp
jl
xchg
and
call
xor
cmp
mov
or
sbb
mov
adc
jae
push
adc
sar
pop
sahf
divb
loopne
cmp
inc
int3
gs
xchg
sub
enter
push
ficompl
shll
mov
sub
hlt
add
dec
add
add
cmpsb
inc
nop
mov
fidivrs
cmpsb
ljmp
ss
dec
lock
daa
outsl
jle
rcl
xor
xchg
add
sub
fldt
notb
imul
call
fsubrs
outsb
daa
aaa
je
inc
aam
sub
fwait
xchg
mov
adc
inc
jle
xchg
out
test
sbb
inc
xchg
ror
push
xchg
rclb
outsl
dec
scas
cmp
stc
push
mov
dec
jmp
mov
divl
jnp
outsl
sub
loopne
imulb
mov
mov
jge
xor
and
pop
cmp
cmp
push
loope
fisubrs
or
and
adc
cli
in
lcall
test
leave
mov
xchg
push
negl
jo
push
xlat
inc
test
in
stc
sub
gs
shll
mov
xor
sbb
ret
fistpll
xor
lods
into
test
cld
mov
mov
nop
and
arpl
and
push
push
jbe
negb
add
pop
shlb
insb
mov
xor
into
sahf
mov
fsubl
push
ss
sbb
pushl
shlb
ljmp
lcall
sahf
jbe
aad
cmp
iret
dec
out
jae
inc
dec
les
cmc
mov
rorb
jecxz
jb
push
mov
inc
fnstsw
pop
pop
push
stc
or
xchg
mov
cmpsb
xor
fdiv
fs
rcll
xor
stc
and
sarl
xchg
shl
dec
aas
fs
jne
shr
in
jmp
jo
mov
push
xchg
cmpsb
fildll
pop
aad
cmp
ffree
push
mov
sub
addb
test
mov
push
out
xchg
adc
cs
sub
jmp
aas
cltd
pushf
xor
add
xor
into
lds
cs
mov
aad
mov
sub
jnp
add
loop
push
fs
mov
frstor
xchg
mov
inc
cmp
ss
push
cli
mov
push
mov
push
lock
jge
int3
or
xchg
imul
and
cmp
imul
loope
add
test
repnz
mov
lds
movsb
out
jecxz
push
ss
pop
ret
xchg
xor
mov
je
jmp
enter
inc
cmp
pushf
and
sub
adc
scas
scas
xor
add
jge
mov
mov
sub
cltd
fs
sub
jecxz
cmp
or
stos
dec
movsl
add
mov
mov
push
pushf
loop
jmp
add
jnp
jno
push
pop
hlt
mov
jmp
ja
lcall
sbb
lcall
shll
xchg
xor
adc
popa
adc
jbe
out
inc
subb
fsubrp
xor
orl
jp
stos
lret
dec
cmp
fwait
shrl
jmp
adc
cmp
mov
dec
mov
mov
fcomp
sub
mov
nop
mov
sarb
inc
aam
mov
enter
into
or
xchg
aas
pushf
push
push
push
dec
pushf
mov
xchg
loop
test
xchg
mov
adc
push
call
sub
popf
rcrb
sbb
fdivrl
int3
mov
out
push
sbb
xchg
in
dec
push
jbe
lods
sub
jae
mov
arpl
cs
inc
jae
mov
in
lods
dec
sub
xor
cmp
enter
shrb
sub
iret
ret
xchg
or
inc
fsubp
icebp
dec
xor
fwait
xor
ret
enter
repz
mov
sbb
or
dec
ret
and
mov
inc
movsb
arpl
or
mov
in
xchg
outsl
push
sbb
outsl
sbb
ficompl
dec
in
mov
int3
sahf
xor
test
mov
aam
and
repnz
insb
pop
aaa
fidivl
nop
mov
adc
cmpsl
out
mov
mov
cmp
cmp
mov
orl
cmpsb
jnp
adc
sahf
gs
jno
shlb
lret
call
dec
push
dec
jns
sarb
outsl
cli
cli
inc
pop
sub
stc
dec
and
jge
hlt
pop
lcall
mov
inc
xchg
pop
cmp
sub
mov
cmc
xlat
sbb
add
mov
aad
push
xor
and
mov
lcall
shll
dec
xlat
push
nop
sbb
andl
into
fdiv
rorl
lea
stos
push
jp
push
inc
xchg
or
push
ljmp
and
imul
push
pop
loopne
jle
out
sbb
ret
sbb
sbb
sbb
leave
push
mov
mov
popf
adc
xchg
jp
mov
movsl
mov
pop
movsl
xchg
lds
mov
cltd
mov
pop
fisttpll
lds
and
fwait
mov
int
mov
jle
pusha
sub
inc
or
arpl
sub
notl
jnp
push
jmp
pop
aad
pusha
push
scas
pop
test
mov
jge
stos
shlb
inc
mov
fs
mov
repnz
push
adc
inc
xorl
pop
adc
dec
insb
xchg
imul
jnp
sub
lahf
insb
cmp
orb
ds
xchg
repz
jmp
cmp
sbb
dec
push
push
mov
xor
loop
cs
inc
sahf
cmp
push
stc
xchg
gs
daa
xchg
shl
in
mov
sub
in
flds
and
js
xchg
call
pop
sbb
xchg
lcall
pop
test
mov
cmp
das
xor
mov
jae,pt
lcall
xchg
loop
jns
push
stos
push
adc
fnstsw
jnp
repnz
ret
popa
or
and
xchg
inc
lcall
xlat
in
push
sub
and
jmp
mov
and
mov
mov
loope
mov
das
dec
add
jo
inc
push
out
out
jo
cs
push
adc
pop
mov
mov
xchg
jecxz
jmp
aas
movsl
cltd
cmpsl
jbe
push
popf
sub
sti
test
ss
pop
sub
repnz
xchg
mov
pop
or
and
dec
nop
push
jb
push
pop
jbe
les
lret
stos
push
imul
movsb
jae
outsb
int3
add
loopne
pop
test
aad
inc
call
cmp
pushf
adc
rclb
add
aaa
fmuls
inc
imul
loop
mov
pop
adc
gs
icebp
inc
call
add
popf
cmp
sbb
fnsave
jl
fnstcw
shrl
dec
dec
add
push
in
jl
or
loop
into
inc
clc
mov
popa
adc
lret
adc
cmp
rcl
hlt
sub
dec
add
in
js
mov
mov
and
lahf
stos
ja
enter
clc
cmp
outsb
push
aaa
jge
xor
mov
jp
jecxz
cmp
xchg
out
xchg
push
ja,pt
test
sbb
adc
mov
std
mov
ficoms
pop
imul
xor
lods
movsl
bnd
and
ljmp
push
outsl
sub
sub
in
fsubrl
mov
or
rcrb
mov
out
inc
out
mov
in
lahf
pop
and
jo
mov
xor
das
adc
cmp
inc
xor
shlb
out
jl
jns
sbb
or
lds
fldt
repz
inc
xchg
notb
mov
or
ficompl
clc
xchg
and
sahf
inc
fdivrs
test
mov
shrl
sub
js
dec
loop
loopne
ljmp
ret
jge
jbe
add
adcb
cmp
orl
ret
xchg
dec
scas
pop
and
repz
cwtl
jp
mov
or
sub
sti
mov
pop
pop
mov
mov
and
push
sub
add
pop
jb
nop
jecxz
clc
rcrb
mov
push
or
mov
dec
loopne
shrb
fs
out
popf
xor
fmul
add
cmp
mov
enter
repnz
xchg
adc
lret
lods
pop
mov
sub
xchg
lcall
jle
test
ret
insb
jo
icebp
ret
enter
adc
add
push
mov
lds
ror
fldt
iret
jno
mov
push
pop
add
mov
popa
stos
out
jle
jnp
shll
dec
mov
dec
pop
xchg
mov
dec
daa
jo
jl
jp
bound
out
push
movsl
daa
xchg
sti
lahf
xchg
enter
sub
test
insl
outsb
mov
jb
lock
in
sub
out
lock
aad
mov
xchg
mov
fisubrs
xchg
adc
xlat
inc
clc
dec
xchg
sub
and
adc
ret
mov
dec
add
mov
repz
es
clc
test
stos
sbb
mov
mov
in
bound
and
push
xchg
pop
push
in
mov
ret
inc
and
jle
add
xor
mov
imul
mov
push
xor
lret
out
xlat
sbb
adc
fcmovb
repz
sbb
jnp
outsb
sub
movb
cmpsb
push
stc
ja
dec
mov
mov
pop
pop
adc
jnp
pop
inc
jecxz
out
fwait
es
and
adc
and
dec
mov
mov
dec
rcr
shlb
pop
dec
dec
rolb
mov
aaa
jmp
cmp
repnz
jecxz
sahf
push
pop
lret
jne
or
push
cmp
test
xor
loop
arpl
push
cmp
pusha
insl
xlat
mov
insl
add
fucom
cwtl
xorl
loop
into
lret
or
inc
pop
ds
hlt
es
jge
bound
data16
add
xchg
push
inc
cltd
mov
jae
stc
jo
push
dec
mov
mov
xchg
jnp
aaa
aaa
mov
lcall
pop
push
loope
mov
xlat
stos
aas
xchg
cmp
rorl
pop
aad
xor
aam
cmp
cmp
cmp
cmpsl
mulb
lret
outsl
cld
mov
loopne
push
xor
dec
dec
and
aas
dec
pop
pop
jnp
les
xchg
lret
pop
dec
dec
mov
dec
imulb
push
pop
out
sti
mov
test
stos
mov
in
jl
adc
dec
xchg
or
sti
ja
leave
fdivl
ret
in
and
fmull
pop
in
int3
pop
repz
xor
add
shrd
and
imul
pop
cltd
movsl
mov
adc
sub
inc
daa
fsubrs
jno
mov
adc
loope
adc
outsl
cmp
push
xchg
daa
sub
lods
clc
lret
push
jae
mov
mov
xchg
jae
in
repnz
das
int3
ret
test
cmp
sub
or
dec
and
mov
fsubp
pop
in
imul
add
mov
hlt
inc
cmp
scas
xchg
lea
inc
ret
nop
pop
orb
movsb
subl
test
mov
xlat
shrl
loop
inc
pop
out
adc
dec
mov
jmp
xchg
inc
into
outsb
inc
cwtl
fstl
mov
pop
xchg
mov
movb
xchg
popa
jae
sub
add
lds
in
loope
lods
test
fs
or
mov
cwtl
or
sbb
jmp
out
mov
adc
jg
or
fs
mov
ret
ret
dec
sub
out
and
mov
andl
adc
lcall
ljmp
inc
xor
lret
out
leave
jbe
lock
jmp
add
es
dec
stc
jns
mov
shl
and
test
xchg
adc
and
xor
cmp
fistps
sbb
push
jns
data16
scas
pushf
pop
push
aad
inc
dec
std
adc
test
nopl
xorb
xor
add
js
sti
lds
add
fsubl
mov
adc
shll
or
or
inc
push
or
sub
aas
pop
and
dec
daa
gs
xchg
es
outsb
popf
imul
jne
push
xchg
dec
add
nop
xlat
jge
mov
xchg
cmpb
stos
ja
sbbb
jp
mov
xchg
mov
rclb
mov
add
dec
clc
dec
push
fs
pop
dec
in
push
push
jo
dec
bound
shlb
cmp
ds
rolb
mov
inc
cmp
xlat
add
inc
push
addr16
dec
push
popa
sbb
inc
pop
popf
jmp
sarb
pop
ret
lods
fimuls
mov
add
sbb
pop
enter
mov
dec
sub
mov
fwait
je
sbb
out
in
jbe
ret
jl
fcomps
push
dec
or
inc
dec
mov
pop
sub
cmp
mov
jg
out
movsl
mov
mov
jecxz
xchg
adc
fimull
push
mov
stos
enter
cmp
aas
in
pop
jmp
mov
in
xchg
rcr
add
and
aas
iret
stos
xchg
gs
mov
in
test
jmp
sbb
inc
fildll
mov
ret
mov
pop
jge
imul
call
push
rep
xchg
push
mov
inc
call
lea
pop
leave
jle
sub
jl
fwait
mov
inc
loop
jle
xor
rcrb
icebp
or
test
and
pop
pop
sbb
xor
insl
jmp
sbb
mull
pop
aad
lahf
add
mov
sbb
cmp
jo
mov
mov
outsb
jns
and
ret
ret
inc
ds
lcall
sbb
movsl
push
in
sbbb
insb
notl
inc
in
imul
pop
scas
sbb
sub
out
pop
add
outsb
jl
sarl
add
xchg
jb
add
dec
lcall
jecxz
push
fs
sahf
ljmp
xlat
dec
xchg
negl
mov
mov
add
dec
or
pusha
cltd
insl
mov
stc
cmp
scas
adc
adc
stos
mov
stc
cld
arpl
lods
xchg
shr
fnstsw
dec
out
add
cmp
repnz
adc
cltd
lcall
stos
popf
movsl
stc
loope
fs
pop
call
stc
jl
aam
xlat
push
add
aam
ja
std
add
out
mov
add
adcb
mov
jno
pop
jnp
in
sub
mov
and
sahf
push
shll
xchg
push
dec
push
mov
lock
ret
push
aad
aam
adc
std
in
mov
xor
lock
fistpl
push
popa
in
push
add
sub
loopne
mov
in
xchg
pop
in
sahf
inc
add
mov
call
in
cmp
jl
jae
lret
pop
incb
inc
xchg
fidivrl
push
ret
inc
mov
shll
shrl
movsl
and
cmc
jmp
jle
xchg
scas
stos
cmc
push
loop
xor
push
aas
mov
into
nop
repz
push
clc
dec
pop
fs
inc
pushf
mov
js
mov
das
push
out
add
test
sbb
sub
mov
inc
insb
mov
test
push
pop
rcrb
mov
push
addb
dec
xor
adc
mov
test
push
ss
jo
xor
lods
lcall
mov
out
pop
pusha
mov
pop
push
in
inc
push
aas
inc
ds
push
andb
mov
sbb
lret
cmp
imul
mov
sysexit
xchg
fbstp
sbb
push
push
rclb
pop
popf
inc
xchg
mov
push
add
push
inc
in
ss
stc
push
jmp
je
outsl
clc
addb
icebp
iret
icebp
mov
sub
or
cmp
dec
mov
push
mov
es
sbb
add
jo
push
into
xor
mov
mov
add
addr16
cltd
sbb
and
pusha
mov
test
or
cwtl
sarb
xchg
sahf
xchg
xor
cld
add
lret
loope
mov
jmp
push
pop
mov
sub
shl
popa
in
inc
fidivs
jnp
ds
int3
jmp
test
pop
outsl
xchg
add
or
pop
add
push
xchg
xchg
stos
and
out
popf
js
or
mov
jb
sub
sbb
mov
xchg
shll
xchg
jmp
scas
pop
imul
push
fsubs
ret
bound
mov
push
xorl
fadd
cmc
sub
xor
daa
pop
pusha
in
in
inc
popa
loopne
fprem
xor
inc
scas
daa
jo
rcrb
test
dec
and
stos
dec
push
test
cs
dec
mov
pushf
xchg
add
or
fwait
pop
lea
icebp
adc
and
ret
cmpsl
mov
cwtl
dec
inc
jno
fsubr
or
movhps
pop
outsb
inc
xorl
xchg
mov
ds
jp
call
in
or
lcall
icebp
pop
sub
mov
loop
pop
cmpsl
sbb
xchg
jbe
dec
and
jae
mov
pop
xor
cs
cmp
roll
push
xor
fcoml
clc
sub
mov
lahf
and
pop
sahf
fs
jl
mov
loope
int
fcmovu
adcl
mov
ret
popf
pushf
xchg
or
lret
rorl
and
jge
ss
repnz
loope
les
arpl
inc
aam
dec
clc
cltd
fdivrl
jl
lods
aad
movsb
rolb
pop
xor
aaa
jb
ss
fisttpl
and
arpl
pop
hlt
sbb
mov
cmp
jmp
popa
dec
insb
inc
fstl
add
insl
loopne
mov
cmpsl
xlat
ss
test
mov
loop
dec
in
push
test
ss
lcall
cs
es
and
enter
push
mov
sub
outsb
xchg
xchg
imul
add
push
mov
xchg
popa
movsb
mov
cmp
movsl
gs
mov
movsb
cmp
cmpsb
or
mov
mov
and
mov
inc
mov
xlat
jo
dec
jnp
cmp
cmc
addl
lahf
add
xor
or
fs
xchg
rcll
xor
mov
or
fsub
int
fcomi
daa
pop
mov
and
mov
push
inc
loope
mov
dec
mov
imul
push
jb
cmp
scas
dec
lods
mov
inc
xor
jne
jmp
lcall
stos
mov
dec
mov
or
stc
cmp
imul
cmpl
ret
sbb
iret
push
jmp
imul
mov
dec
movsl
fisubs
add
push
aas
add
adc
icebp
inc
or
in
dec
push
push
adcb
push
cmp
int3
cmc
ret
insl
into
and
or
mov
scas
loop
or
ficoml
lahf
jnp
push
call
xchg
adc
adcb
sub
mov
ljmp
and
out
and
add
out
cmpsb
xor
insb
cmp
pop
dec
call
int
mov
jge
out
and
roll
cmp
jno
mov
dec
js
loopne
mov
shl
and
pop
mov
nop
cld
and
sti
scas
cmc
cmc
xchg
xor
sub
je
ret
movsl
cmp
jp
lret
movsb
or
cmpsb
movsl
ja
mov
sbb
jmp
scas
pop
mov
mov
movsl
mov
iret
loopne
pop
sbb
mov
pushf
mov
rcll
lret
inc
in
clc
cmpsl
or
fisubs
cmp
clc
pop
pushf
out
lret
das
clc
dec
data16
cmp
mov
xor
xchg
push
aas
fidivs
sbb
push
pop
dec
lods
pop
mov
add
sub
jno
hlt
sti
push
insb
movsb
add
stos
xor
pop
lods
pop
sub
test
adc
add
and
scas
adc
xchg
push
cmp
aaa
fwait
mov
idivb
cmpsb
mov
sahf
sbb
fmul
icebp
xchg
cmc
inc
ret
test
pop
fstp
sbb
xchg
cwtl
jmp
outsl
xlat
sub
shrl
test
and
das
and
sbb
add
out
xlat
sub
jmp
push
addr16
aas
jno
sub
pushf
add
insl
scas
pusha
scas
xchg
lret
mov
mov
sarl
adc
ja
xchg
fs
or
pop
add
test
scas
dec
inc
fptan
add
and
ss
pop
je
mov
pop
stc
imul
stos
mov
call
fistpll
add
test
loop
inc
xchg
loop
mov
ret
sub
xor
dec
gs
add
cmp
call
mov
pushf
mov
sub
jmp
mov
stos
jl
push
test
pop
js
insl
or
fiadds
test
cmpsb
rcll
dec
sarl
fdivrl
push
mov
fisttps
cld
and
push
sbb
jmp
outsl
fistps
push
dec
lret
add
out
and
push
imul
push
jmp
dec
mov
xchg
scas
and
jns
jg
sub
adc
popa
iret
and
jge
or
pushf
sbb
mov
mov
jmp
icebp
cmp
ss
dec
xor
jle
jecxz
addr16
xchg
jl
int
mov
push
popl
pop
stc
xchg
outsb
pop
mov
mov
test
mov
addl
mov
jbe
aas
call
dec
cmc
or
mov
test
mov
adc
mov
sub
pop
cmpsl
ds
push
mov
cmp
mov
adc
subl
out
xor
xor
iret
aas
push
clc
testb
xor
pop
sbb
mov
fmull
aaa
xor
es
and
lods
addl
arpl
push
dec
addr16
outsl
add
lret
adc
rorb
xchg
loopne
mov
lahf
pop
stos
inc
cs
gs
adc
jns
sub
and
cmp
push
vpsrld
outsb
inc
push
stos
mov
hlt
pushf
pop
pop
push
aaa
cwtl
jae
push
inc
cmp
loop
adc
sub
imul
xchg
push
xchg
add
into
cmc
inc
int3
cmp
ret
pushf
pop
pop
out
pop
push
mov
push
push
scas
xorl
sbb
sahf
mov
arpl
orb
sub
or
pop
jne
mov
xchg
test
out
inc
in
out
outsl
and
adcl
or
push
int
or
filds
push
lods
pop
cld
jmp
xor
cmp
mov
push
xchg
mov
cwtl
cmp
sbb
lods
dec
loop
mov
jp
jle
dec
das
ja
orl
mov
clc
jmp
or
xchg
inc
mov
arpl
dec
sbb
xchg
test
sub
pop
pushf
mov
mov
inc
sbb
std
mov
aas
mov
jne
sub
rcll
ret
mov
sub
iret
lods
add
test
sbb
xor
adc
pop
int3
fwait
test
dec
adc
cmpsl
push
mov
sub
ficomps
and
push
sarb
fwait
ljmp
in
inc
inc
jle
and
add
adc
cwtl
sbb
push
sub
out
push
movb
cmpl
lret
push
bsr
pop
mov
popf
daa
shl
push
nop
lods
sub
push
popf
sbb
outsl
mov
or
shrb
push
mov
es
aam
stos
mov
mov
cmc
mov
fistpll
mov
data16
ss
pop
cs
leave
cmp
add
push
sub
cld
mov
into
mov
aad
into
mov
mov
push
loope
add
push
inc
clc
xchg
cmpsl
mov
lret
lret
fsqrt
outsb
jo
mov
mov
pop
pushf
mov
gs
addr16
adc
push
shll
add
pop
inc
push
add
dec
scas
mov
xchg
or
mov
stos
sub
mov
sub
dec
lods
mov
sub
mov
push
jp
sub
fcmovb
lea
xchg
lds
mov
pop
inc
orl
sahf
cmc
ja
inc
mov
aad
vshufps
cmp
movsb
lock
movsl
pusha
or
es
jnp
in
out
inc
xchg
or
repz
adc
add
loop
adc
cmp
pop
je
and
push
xchg
popf
cmpsl
dec
mov
mov
xchg
bound
gs
push
sub
andb
in
pusha
inc
movsb
fucomp
cmpb
in
push
adc
or
jp
je
pop
adcl
test
ljmp
inc
cmp
sbb
xor
aad
in
push
pop
pop
xor
xchg
repz
push
sub
pop
xchg
xchg
xchg
add
xchg
jl
mov
or
pop
pushf
test
xor
ficomps
daa
pop
and
cli
fistps
mov
dec
or
and
imul
jne
mov
rcrl
cld
mov
xchg
jecxz
call
std
mov
cmp
ret
push
sub
adc
in
cmp
dec
cli
dec
xchg
jnp
lods
xchg
fbstp
mov
sbb
pop
xor
xchg
scas
sahf
adc
repnz
mov
jno
bound
sub
adc
pcmpgtd
mov
mov
jnp
rcrb
mov
mov
jmp
std
nop
mov
cmp
aas
sti
mov
cmp
push
cmpsb
push
outsb
andl
out
mov
dec
inc
mov
sbb
xchg
dec
dec
in
pop
sub
ja
push
xchg
xchg
xor
negl
push
sbbb
fucomi
daa
jge
pushf
ss
cmp
pop
add
in
pop
dec
push
cmp
ja
push
mov
lahf
mov
or
je
fisubrl
call
xor
scas
inc
cmpsb
cs
sub
test
cltd
jg
out
sub
or
stos
jno
rcll
aam
push
inc
ds
xchg
loope
push
fidivrl
stos
cs
dec
mov
movsl
cmc
pop
mov
psrlq
xchg
mov
mov
push
mov
jp
and
int3
enter
mov
mov
mov
jmp
or
and
cmp
and
mov
inc
into
inc
test
dec
mov
fwait
test
jge
xor
fisubs
js
mov
add
cmpsb
sbb
xchg
xchg
imul
mov
pop
jne
in
sub
jae
icebp
mov
push
into
mov
xlat
pop
dec
ja
les
fwait
pop
in
das
jp
pop
pop
dec
lea
ss
fwait
sub
xchg
test
xlat
in
aas
dec
mov
outsl
imul
add
cmp
adc
addb
sub
adc
dec
test
imul
jne
push
in
add
addr16
cld
cmp
arpl
jecxz
lcall
pushf
popf
test
repz
adc
ret
sbb
mov
sbb
add
ja
dec
dec
into
mov
push
jmp
fwait
jecxz
push
xlat
dec
cmpsl
xchg
ret
xchg
inc
sub
cwtl
out
cwtl
sub
cltd
lods
mov
pop
movsb
add
stc
jle
xchg
lcall
rorb
outsl
insb
fildll
rorb
cmp
test
mov
je
cli
lahf
rolb
cmc
fs
fcomp
xchg
or
or
push
mov
xchg
and
jle
shr
mov
ret
lcall
push
lds
or
into
mov
loope
mov
ret
lea
ficoms
adc
jg
test
and
or
jne
xchg
sarb
movsb
or
push
cmc
jns
cltd
push
in
push
les
out
insl
and
cli
xor
or
adc
test
push
adc
dec
movsb
lahf
movl
lea
int3
movsl
notb
test
jno,pt
clc
repz
fdivp
test
gs
add
xchg
inc
mov
rol
dec
adc
xchg
cli
repz
test
js
inc
loopne
inc
sar
xchg
lock
jns
in
sub
and
gs
int
push
mov
cmpsl
jmp
mov
leave
xchg
repz
pop
clc
pop
mov
movsb
pop
nop
sti
in
add
arpl
jbe
pop
sub
or
and
das
addb
mov
mov
or
daa
aaa
inc
aas
xor
mov
icebp
mov
adc
daa
out
rcrb
std
mov
mov
mov
or
sub
inc
jl
jb,pt
aaa
sti
push
mov
scas
aad
pop
loope
bound
into
inc
out
xor
mov
out
jns
lods
cli
adc
or
ljmp
cmp
scas
in
sahf
stc
in
or
imul
mov
shr
xchg
cmp
xlat
dec
xor
jae
pop
in
push
jb
inc
mov
lods
pop
and
push
fists
inc
cmp
jp
es
rcl
cld
jl
sub
xor
clc
mov
jo
enter
dec
jmp
add
negb
xor
ja
sub
pop
lods
mov
adc
adc
xchg
cmp
fisubl
xchg
adc
sub
fnstenv
jecxz
test
mov
inc
or
push
and
jo
xchg
repz
mov
aam
push
mov
pop
dec
movsl
in
mov
cmc
fists
sub
icebp
push
push
hlt
pop
fisttpll
jo
push
adc
mov
push
mov
xor
loop
push
rol
and
les
test
lds
and
fldcw
mov
mov
mov
push
aad
cld
inc
dec
inc
sub
movsl
fisubl
arpl
mov
and
jae
jmp
mov
fldcw
repnz
dec
fists
add
mov
arpl
mov
mov
movsl
dec
or
mov
mov
cmp
xor
push
test
adc
push
mov
pushf
add
in
pop
loope
adc
sbb
jns
inc
rclb
imul
mov
icebp
test
and
jns
pushf
scas
je
adc
dec
test
or
lret
jl
stos
mov
or
mov
dec
dec
sbb
mov
sub
bound
xor
dec
jg
xchg
sub
and
lock
test
shlb
add
fbstp
cmp
jecxz
jns
push
push
addr16
push
push
xchg
mov
adc
inc
jne
imul
rcrl
imul
lret
add
add
dec
movsb
add
js
sarb
mov
shrl
mov
mov
icebp
ret
cmpb
es
or
jecxz
test
icebp
andb
xchg
and
mov
and
fnstenv
in
js
jp
and
mov
rcrb
cmpsb
daa
mov
mov
testl
push
outsb
push
xchg
cmc
and
xchg
mov
mov
and
test
shll
cwtl
les
out
jb
movsb
adc
mov
dec
xchg
arpl
hlt
sbb
jo
dec
divb
lock
mov
test
cmp
enter
add
sti
stc
movsl
fwait
movsb
rcll
dec
mov
mov
mov
scas
jmp
mov
mov
inc
adc
jge
fmuls
les
inc
mov
xor
outsl
jp
movl
xchg
leave
cld
daa
rcr
jbe
or
pop
xchg
xchg
cld
xor
aas
outsb
jmp
mov
pop
ret
inc
pop
loop
enter
jle
xchg
sbb
in
xchg
in
lcall
inc
dec
inc
push
dec
adc
scas
xchg
jns
movsb
icebp
sub
pop
hlt
cli
or
js
lahf
mov
xchg
cmc
sbb
repz
sbb
lea
mov
out
or
sbb
jle
inc
xchg
ljmp
add
xchg
fisttpl
test
enter
inc
push
cmp
pop
sub
pop
cli
clc
outsb
mov
inc
sti
dec
repnz
lods
loop
lods
xchg
loope
and
sbb
jbe
lahf
pusha
sbb
sub
mov
ret
faddl
inc
lcall
insb
mov
cmp
int3
jmp
mull
sahf
jmp
xor
dec
inc
add
mov
inc
pop
outsl
aad
xchg
cmc
repz
loopne
ret
out
adc
jbe
stc
mov
xchg
loop
jo
push
mov
popf
mov
imul
and
xor
out
inc
mull
pop
js
lock
jecxz
cmc
dec
mulb
xor
loop,pn
push
adc
dec
mov
lds
or
stc
add
xor
negl
mov
jmp
mov
mov
enter
and
ljmp
fsubs
lret
rcrl
inc
pop
jl
push
into
dec
inc
lds
push
mov
or
sbb
push
sbb
dec
iret
push
inc
adc
add
addb
leave
xchg
popa
dec
popa
test
test
or
jmp
or
mov
adc
test
fs
dec
dec
cwtl
mov
push
or
push
repz
mov
push
add
mov
sbb
cmova
lcall
out
ljmp
pop
jae
aad
add
iret
out
mov
mov
and
pop
sti
push
pop
inc
shl
cmp
fs
int
in
dec
xor
and
bound
xor
into
add
fwait
je
dec
jb
aam
movsl
ds
rorl
lret
mov
pop
xlat
jns
and
pop
sub
je
insl
add
int
pop
mov
xor
cmp
push
push
ret
fsubrs
lahf
jbe
pop
pop
js
cmp
fs
ljmp
lcall
inc
das
aaa
pop
mov
xchg
sbb
dec
sbb
push
inc
sti
add
xor
jp
adc
in
data16
cmp
xor
cmp
or
jg
pop
add
aad
pop
ret
fiadds
bnd
cli
xor
stc
mov
and
xlat
cmp
ret
fidivrl
push
imul
int3
sub
inc
je
xchg
cltd
jne
clc
test
and
sub
adc
cmp
pop
stc
push
out
notl
enter
push
mov
inc
ds
jle
hlt
mov
pop
add
jnp
mov
insl
repnz
push
add
test
mov
xor
es
xlat
xchg
mov
xchg
fstp
push
in
or
fistps
add
sub
sub
fwait
cwtl
pop
push
aaa
mov
arpl
aad
ljmp
in
sub
jno
mov
mov
cli
jl
mov
loopne
sub
add
dec
xor
cld
jno
std
mov
lret
stc
cli
in
cmp
mov
out
icebp
nop
mov
mov
mov
repz
loopne
push
call
adc
in
arpl
mov
out
insl
mov
out
clc
sbb
xchg
roll
sbb
icebp
pop
jne
cmp
rclb
pop
pop
inc
movsl
lret
decb
adc
pop
adc
lahf
out
cwtl
push
jnp
out
hlt
sub
push
addr16
rclb
xor
xchg
popa
sbb
xchg
pop
xorb
es
hlt
cltd
pop
std
sub
sbb
sbb
mov
out
lock
jecxz
jb
jbe
mov
pop
and
cmp
pop
sti
stc
lret
cmpsl
push
fsub
in
jmp
adc
add
shlb
push
into
sbbl
dec
pop
testl
add
jg
imul
xor
popa
push
dec
adc
fidivs
out
inc
mov
clc
fildll
sub
mov
movsl
mov
fiaddl
jne
clc
sti
pmaxub
out
push
pop
push
sbb
jl
jo
pop
inc
jg
xchg
mov
ds
add
insb
scas
loope
sbb
xor
jb
push
lret
mov
pop
movsb
add
icebp
fstp
lods
lods
scas
sub
into
mov
jg
or
scas
or
cmp
jbe
sbb
inc
pop
jl
mov
icebp
jl
shl
stos
pop
dec
subl
jo
dec
leave
in
lods
retw
out
pop
hlt
mov
xchg
call
fs
and
and
dec
dec
lret
stos
jle
mov
and
jge
stc
inc
cmpsl
aam
mov
fldenv
and
pop
xchg
sbb
sbb
lock
xor
fists
sbb
in
fldl
aas
and
seto
lds
iret
fs
add
fsub
mov
ffree
dec
hlt
enter
mov
loope
lret
push
xor
lds
in
cmp
scas
or
adc
adc
loopew
lcall
pop
je
call
inc
fcmovb
cmc
aam
jo
popa
pop
sub
xchg
jg
xchg
dec
repnz
pop
add
or
iret
popf
pop
lods
ret
clc
outsl
in
fmuls
lcall
test
leave
pushf
xor
js
dec
aad
mov
int3
cmc
pop
adc
mov
aad
mov
cmp
mov
jge
lock
dec
in
mov
jb
mov
mov
imull
lahf
xchg
lcall
xchg
gs
push
dec
stos
push
std
dec
lret
repz
scas
mov
outsb
je
sarb
xor
mov
cli
scas
lds
mov
and
pop
dec
inc
insl
pop
jmp
inc
mov
daa
adc
sub
jle
mov
lret
insl
fistpl
in
orb
fldenv
jp
scas
in
cmp
loope
out
js
mov
dec
jnp
lods
test
ret
xor
cld
dec
lock
test
sub
mov
scas
cmp
sub
add
and
jl
jo
push
ret
add
js
push
cwtl
lea
int
nop
xor
xor
shl
jge
mov
pop
dec
fidivs
stc
sbb
jg
test
mov
and
fstl
lret
dec
push
jmp
xchg
cmp
int
mov
aam
in
popa
andb
push
lcall
sahf
and
test
shll
fs
subb
fwait
sbb
and
xchg
insb
inc
push
sub
mov
push
scas
dec
das
pop
adc
sub
sbb
push
adc
loop
aaa
iret
push
xchg
nop
cmc
shlb
aas
mov
pop
inc
push
mov
xchg
ds
fucomp
push
push
jne
addb
push
rolb
mov
int3
push
ja
sub
popf
orb
cmp
outsl
loope
xor
mov
shlb
mov
cwtl
ud2
ss
or
adc
sbb
clc
or
in
dec
into
jnp
cmp
xchg
mov
mov
lret
popf
jl
dec
fdivrp
or
aad
xchg
dec
jb
call
repnz
cmp
and
cmp
fs
out
test
sbb
xchg
xchg
inc
jmp
sahf
mov
loop
mov
pop
fdivs
sti
push
lds
in
js
in
pop
inc
xorb
push
sub
jnp
mov
leave
xchg
sbb
sbb
sub
outsb
cwtl
int3
ror
jl
push
xchg
dec
out
test
adc
test
fs
mov
xchg
push
leave
lret
pop
mov
scas
loope
in
sahf
roll
cli
xor
mov
mov
ss
pop
insb
add
popa
icebp
movsl
inc
inc
popa
shrb
pop
mov
iret
and
ljmp
xor
adc
push
pop
pop
into
pop
xchg
bound
fists
jp
push
cmp
sbb
and
jmp
mov
xor
xor
loopne
xchg
xchg
xor
jmp
push
movl
data16
push
sbb
or
inc
mov
cmp
les
stos
rolb
in
rol
mov
cli
sahf
scas
lea
jecxz
mov
dec
or
pop
dec
out
dec
ret
data16
pop
or
sbb
pop
aaa
repnz
inc
rol
call
push
and
je
imul
in
leave
jecxz
jp
enter
repnz
outsl
or
imul
xor
mov
sbb
ljmp
add
pop
fidivrs
int
sbb
mov
mov
frstor
in
shrl
mov
mov
int3
and
fsubrs
add
int3
repz
and
subl
mov
jae
inc
add
cmp
lcall
cwtl
sub
xor
into
and
clc
popa
sub
mov
lret
mov
and
bswap
and
movsb
push
roll
mov
inc
mov
ss
fstl
xchg
or
push
or
movsb
lds
sahf
pop
mov
sti
roll
sub
fnstenv
or
adc
xlat
lock
mov
dec
sub
mov
mov
mov
dec
jbe
inc
mov
pop
das
mov
cmp
loope
fcomps
mov
pop
stc
stos
scas
adc
mov
mov
fs
push
test
inc
push
dec
outsb
into
xchg
lea
jmp
cmp
xor
mov
pop
scas
shrl
lea
jo
gs
loop
inc
dec
add
sbb
sub
mov
xor
xchg
jle
and
fabs
loope
adc
aaa
repnz
hlt
xor
xor
scas
cltd
mov
loope
into
into
pop
xor
mov
in
cmpb
out
imulb
mov
push
daa
xor
sbb
sahf
popf
or
cmc
sbb
or
jns
scas
jb
adc
das
add
adc
ds
test
notb
push
sub
je
jmp
sbb
sbb
popf
inc
out
cmpsb
mov
cmp
pop
js
mov
cld
stos
and
imul
mov
pop
xorl
pop
mov
adc
popa
lea
pop
lds
sti
inc
jmpw
ror
jle
and
mov
lcall
xlat
fucomip
es
sbb
in
rol
loopne
adcl
lret
pop
insb
xchg
mov
pop
lahf
jg
repz
pop
mulb
repz
shll
fistpll
test
xor
push
jle
inc
jecxz
loope
enter
push
ret
loop
adc
out
cld
shl
inc
fsubrs
fcoms
mov
sub
xchg
test
pop
scas
loopne
and
mov
dec
adc
out
inc
jb
sub
sarb
push
xchg
jmp
push
mov
inc
sbb
out
jg
mov
push
outsl
hlt
inc
mov
lods
jno
flds
icebp
in
cmp
out
jg
add
and
sbb
push
mov
stc
add
sti
mov
sbb
ftst
mov
jmp
aas
int
aas
sbb
out
pushf
aam
or
sbb
mov
pop
in
pop
jge
nop
imul
lret
fadds
lods
outsb
lahf
mov
cs
and
test
dec
xchg
sub
sub
sarl
je
add
jbe
inc
cli
push
cld
push
movsb
mov
notl
adc
cwtl
out
xchg
inc
dec
and
mov
mov
add
cltd
jae
inc
scas
inc
mov
jno
add
push
fwait
or
or
mov
pushf
cmp
xchg
mov
scas
fwait
aam
out
mov
rorl
xor
xor
jbe
inc
sub
push
dec
adc
mov
in
jbe
imulb
cli
test
mov
cmp
popf
mov
loop
in
iret
stc
ja
adc
dec
les
ret
pop
outsb
dec
inc
cmp
adc
jp
test
push
xrelease
lea
mov
jne
test
test
xchg
or
pusha
loopne
or
or
into
cwtl
dec
adc
dec
or
xchg
xor
decl
or
mov
adc
or
daa
adc
sbb
jno
pop
leave
or
rcrb
push
pop
cmp
shl
in
sub
mov
in
add
int3
ja
jmp
adc
jns
fisttpl
sahf
mov
jle
je
jb
push
inc
mov
xor
mov
insb
dec
cmc
push
loopne
andb
movsb
mov
sub
xor
jge
mov
mov
loopne
mov
repz
add
addr16
imul
arpl
jne
inc
push
pop
mov
lods
mov
jnp
jle
cwtl
into
fdiv
lock
push
sub
and
popa
cmpsb
push
jo
adc
in
mov
dec
mov
jae
pop
rorl
out
inc
lcall
jns
add
jecxz
pop
adc
hlt
cs
cltd
leave
xchg
jmp
ret
loopne
addl
dec
cmp
pop
nop
shrb
jge
sar
fs
orb
mov
shl
mov
enter
jmp
divl
sbb
push
pop
or
add
lret
push
outsl
pushf
xlat
insl
jns
inc
and
xchg
aaa
pop
xchg
xchg
xchg
aad
xchg
pop
imul
mov
or
pop
xor
enter
cmp
lahf
insl
rol
cmp
iret
cmpsb
push
aaa
dec
mov
jb
push
es
cmp
sbb
leave
lds
mov
lret
loop
mov
mov
pop
mov
inc
jle
xchg
push
outsb
aam
outsl
into
and
jg
mov
cld
mov
or
cmovnp
sbb
cld
addl
aaa
mov
dec
fs
xchg
cmp
int3
cltd
imul
test
add
sbb
sbb
pop
mov
cmpsb
ja
or
lock
stos
jmp
jae
sti
xor
ss
ljmp
jno
adc
add
xlat
jp
pop
push
sbb
repz
fidivs
and
xorb
inc
pop
sub
mov
mov
and
pop
popf
cmp
out
fwait
cltd
pop
jne
add
cmc
call
ret
mov
inc
adc
and
xor
mov
repnz
icebp
or
push
pusha
pop
mov
pop
jae
sub
test
push
mov
and
mov
sbb
lcall
clc
xchg
jmp
sbb
jg
jb
loope
rcrl
ja
inc
adc
into
and
jecxz
dec
mov
cmp
sub
sbb
repnz
dec
push
mov
mov
inc
repnz
lahf
repnz
and
mov
cli
andb
xchg
jne
mov
cmp
pop
cmp
xor
popa
xchg
jo
inc
xchg
sub
cmp
pop
stos
pop
orps
fwait
loope
scas
sbb
or
lock
cmp
mov
data16
movhps
idivb
ss
xlat
inc
dec
push
mov
sarl
xor
pop
mov
repz
adc
fldl
in
cmp
into
clc
push
sbb
pop
ja
mov
inc
loop
sub
das
jae
cmp
dec
shll
cmp
es
scas
sub
mov
sbb
imul
cltd
ja
jge
mov
pop
xor
rorl
jb
lds
pop
xchg
pushf
and
pusha
test
push
lods
out
mov
and
dec
stc
lock
adc
gs
xchg
push
fwait
jmp
pop
imul
adc
out
cmc
push
out
les
inc
adc
daa
xchg
mov
push
mul
ror
popa
js
lods
aad
jns
rorl
arpl
sbb
pop
dec
mov
dec
out
or
jo
out
inc
push
pusha
jne
pop
arpl
xchg
xor
push
pop
lcall
iret
repz
adc
push
notl
sbb
ljmp
insb
test
nop
sub
fbstp
cmp
out
in
test
ds
pop
or
movl
jnp
xchg
test
popa
cmp
fnstsw
lret
sar
jge
inc
daa
mov
cmpsl
cmpsl
divl
jecxz
sbb
xchg
das
stc
icebp
lret
inc
iret
and
shrb
and
jmp
out
mov
lcall
cmp
sub
cmp
jg
push
out
mov
pushf
mov
dec
mov
mov
adc
daa
mov
aas
fistps
jecxz
sub
in
notl
testl
mov
sti
test
cmp
push
fldenv
or
mov
dec
mov
imul
cmpb
jno
mov
push
out
icebp
fdivl
lahf
out
insb
mov
jge
lods
icebp
cli
sbb
mov
push
fdivrl
adc
shrl
jl
push
dec
xchg
popa
and
fisubrs
lcall
loop
cli
inc
lcall
cmpsb
pop
aad
scas
testb
imul
scas
fcomps
fs
pop
mov
or
push
fs
out
or
pop
sar
mov
test
push
jnp
xchg
push
pop
out
or
sbb
add
scas
je
or
pop
lock
and
std
jg
cmp
loop
xchg
nop
test
push
es
jns
shl
aas
and
cwtl
daa
jne
jbe
scas
xchg
xor
and
jmp
insl
jp
sbb
sub
mov
insl
push
gs
or
cmpsl
adc
cli
test
mov
push
fmull
xchg
adc
inc
push
pop
jge
push
xor
mov
dec
mov
out
push
out
test
inc
or
xchg
xor
or
dec
cltd
sbb
loop
outsl
orl
hlt
ja
inc
mov
push
mov
sbb
loop
mov
dec
ret
fucomi
dec
xlat
xor
jl
mov
jmp
outsb
sub
mov
pop
mov
cmc
xchg
xchg
aad
mov
add
add
sbb
sarl
in
push
mov
cs
or
clc
enter
cmp
pop
ljmp
jg
xchg
sti
mov
aas
push
movl
xchg
int
lea
les
xchg
and
inc
pop
push
push
cwtl
fcom
call
cmc
mov
stos
mov
cltd
ret
lods
flds
mov
push
fildl
push
insb
jnp
lcall
clc
and
pop
stos
das
mov
jb
push
es
mov
mov
push
test
add
and
scas
fnstsw
repz
mov
mov
inc
cmp
or
push
lcall
inc
xorps
adc
mov
ds
cltd
jns
call
cmp
loope
scas
iret
mov
push
mov
orb
xchg
movsl
jecxz
push
in
or
push
sbb
iret
inc
testl
jl
push
cwtl
enter
mov
in
inc
fisubrs
add
or
mov
jmp
mov
push
lret
mov
mov
ss
je
aas
aas
lret
dec
cld
xor
xchg
pop
pop
sbb
and
cld
jb
push
xor
imul
xor
shrb
inc
cmp
enter
dec
enter
loope
into
and
sbb
addr16
loopne
out
or
fisttps
das
or
and
push
xlat
xchg
or
add
fistpll
int
mov
out
arpl
sub
aad
cmc
addr16
scas
mov
aaa
sbb
xor
flds
ja
pop
push
mov
test
clc
xor
sbb
stos
ficoml
out
mov
mov
lock
cmp
jne
testl
popa
sub
inc
mov
int3
jecxz
xchg
push
jne
push
dec
std
jbe
iret
adc
into
inc
add
aam
dec
test
inc
out
xchg
add
mov
sbb
cmp
sub
and
fsubs
inc
adc
push
mov
fcomps
faddl
aad
outsl
jmp
insl
idivl
dec
nop
or
xlat
rol
mov
dec
iret
dec
xchg
sbb
mov
roll
cs
das
add
mov
jmp
mov
je
add
int3
xchg
mov
and
dec
fadds
in
loopne
push
adc
dec
or
out
mov
movsb
jb
mov
adcb
xor
mov
test
pop
xchg
sti
dec
inc
stos
mov
fdivrs
mov
stos
sahf
sbb
in
jmp
cmpsl
mov
fsubrp
ja
lret
or
xchg
add
ss
or
repz
sarb
jns
add
adcl
fadds
xor
out
fs
in
popf
xchg
mov
in
rclb
xchg
push
mov
les
lods
mov
ljmp
xor
sub
inc
mov
dec
lea
add
xchg
imul
xor
gs
movsb
shlb
or
cmp
dec
add
push
push
lock
sub
pusha
pmulhw
aaa
sar
ja
xor
in
cmp
fmuls
test
mov
add
shrb
adc
xchg
lcall
icebp
xchg
dec
and
int3
jbe
cwtl
mov
ljmp
xlat
cs
and
lods
pop
adc
mov
mov
imul
mov
or
add
cmp
stos
dec
cli
daa
push
cwtl
or
addr16
pop
repz
mov
push
jmp
imul
pop
xchg
sub
test
dec
dec
inc
lret
inc
test
cmpsb
test
loop
dec
mov
int3
nop
cmp
int3
dec
jp
addr16
lahf
aad
push
in
pop
outsl
dec
or
jecxz
mov
fcoml
enter
and
in
fs
and
mov
sarb
mov
xchg
push
not
dec
cld
jge
scas
std
ficoml
pop
push
or
jns
stc
stos
leavew
adc
jg
shlb
push
xor
filds
sahf
adc
xchg
xor
hlt
mov
adc
cmp
dec
push
pop
fwait
cmp
lea
cmc
in
pop
aas
andb
test
in
cmp
aam
ss
aad
jbe
jge
sarb
lret
sbb
mov
cmpsb
pusha
mov
and
push
dec
and
mov
daa
add
ret
add
sub
cmp
inc
iret
out
or
push
subb
xor
lods
pop
inc
and
dec
sbb
ret
push
popa
mov
adc
pop
scas
xchg
loop
inc
push
cli
lret
mov
push
jb
cmp
outsb
pop
leave
add
xchg
insb
cld
aad
test
mov
dec
roll
fwait
mov
scas
dec
leave
in
shlb
cmp
dec
je
fiaddl
cld
add
or
lahf
dec
arpl
shrl
jno
decb
shlb
pop
xor
pop
or
and
scas
mov
fnstenv
sub
mov
xor
xchg
out
fcmovu
cmp
mov
imul
jle
cli
adc
inc
push
je
les
xchg
jb
xor
and
or
inc
pushf
fucomi
loopne
hlt
scas
sub
push
mov
sbb
jecxz
dec
in
jno,pn
dec
jl
jecxz
jge
inc
in
adc
push
lods
push
cli
cmc
scas
in
xor
es
xor
push
or
test
push
lock
jmp
fcoms
and
icebp
xchg
imul
fmulp
neg
rcrb
fcoml
inc
sub
movsl
pop
daa
xlat
push
pop
xchg
aas
push
subl
mov
and
stos
js
js
cmp
dec
push
fimull
xor
lods
je
jbe
insl
mov
mov
fildl
test
mov
popf
xor
add
mov
xchg
pop
jg
cmp
mov
stos
js
ret
in
insb
in
cmp
cmp
lock
leave
jecxz
sub
mov
cmp
sbb
subb
push
xchg
inc
fsts
cmc
lret
inc
mov
pop
inc
push
mov
fidivrl
sub
jns
push
push
xchg
or
notl
andb
sbb
adc
sbb
fwait
adc
sahf
subl
das
dec
sarl
es
rolb
je
or
and
addr16
scas
lock
int
stc
clc
mov
das
repnz
ljmp
jbe
cmp
push
cmc
mov
enter
adc
cmp
inc
mov
orl
test
inc
fsubs
enter
lret
insb
popf
sbb
loopne
xor
push
popf
sub
xchg
lods
imul
fs
out
pop
push
adc
dec
jne
mov
push
sbb
sti
call
sub
add
dec
xchg
xor
sbb
scas
ret
js
sub
movnti
jp
jmp
enter
outsb
xorb
pop
subl
sets
stc
mov
mov
or
jle
ret
std
add
mov
mov
pop
and
sbb
call
xor
inc
dec
lcall
movsb
arpl
sbb
aaa
in
cmpsl
mov
add
or
mov
inc
and
clc
mov
lret
lods
sti
jge
jno
sahf
scas
in
sub
in
jne
imul
out
popa
imul
jnp
popa
ss
sbb
ror
jecxz
imul
cmp
fldlg2
sbb
rclb
aam
push
in
lcall
sbb
xchg
jbe
push
fstps
out
dec
roll
pop
int3
outsb
inc
mov
sub
cltd
rcrb
xor
fisttps
aad
pop
jno
sti
gs
xchg
adc
xor
pushf
inc
mov
cmpsl
rcrl
stc
insl
scas
aas
fdivs
lahf
sub
fs
and
push
jle
das
daa
pop
out
xor
shll
cld
cmp
dec
daa
xchg
aaa
rdmsr
add
push
mov
arpl
dec
jo
lcall
adc
push
in
pusha
mov
enter
jns
jae
lds
in
or
lahf
xor
and
pushf
test
scas
popa
cmpsb
or
pop
fnstsw
xchg
xchg
rorb
lods
imul
filds
js
sbb
push
mov
dec
jno
pop
outsl
xchg
sti
test
xor
arpl
sbb
leave
je
adc
in
xlat
or
mov
dec
pop
in
outsb
and
mov
ret
shr
dec
mov
xchg
and
adc
jne
inc
lret
js
js
fyl2x
dec
std
xor
sarl
mov
sbb
aaa
pop
insb
not
jbe
mov
push
cmp
clc
mov
je
push
loop
pop
dec
call
cmp
test
test
ret
inc
repnz
inc
sbb
leave
nop
adc
jg
jne
xlat
inc
stos
sub
jle
mov
popf
sbb
mov
lods
sbb
sub
adc
jae
pop
nop
loope
mov
mov
into
sbb
jnp
gs
pushf
sbb
in
fiadds
mov
mov
and
ja
jp
adc
movsb
das
jmp
in
cmc
cmp
jp
jge
mov
jno
sub
dec
inc
cmp
pop
das
fwait
inc
lods
stos
push
stos
push
mov
push
and
cld
inc
icebp
dec
xchg
ja
mov
xor
cmp
ds
dec
jl
fwait
sarb
scas
fwait
lods
push
pop
inc
in
xchg
push
test
lods
les
stc
loopne
adc
sbb
loopne
inc
cmpsl
notl
cmp
cmp
or
and
xor
jmp
aaa
xchg
dec
cmp
xor
aam
nop
scas
push
hlt
pop
push
pop
sar
xchg
lds
mov
mov
xor
popf
xchg
mov
sbb
dec
arpl
push
in
lahf
fdivs
popf
popl
lock
xchg
and
fwait
outsl
repz
cmp
stos
js
cmp
mov
mov
stc
or
mov
popf
add
or
cmpsl
pop
inc
xlat
aaa
push
dec
insl
jne
shrl
cmp
jg
cmovnp
and
shl
or
mov
adc
dec
dec
dec
test
mov
jno
js
int
sub
push
mov
xchg
xchg
or
add
or
fidivrs
mov
and
enter
xor
aas
jmp
push
mov
mov
lret
inc
enter
lods
int3
rorl
out
cmp
popa
nop
clc
sbb
fcomi
sub
cs
mov
cmp
lcall
test
addr16
fildl
inc
and
dec
test
sbb
shlb
sub
hlt
cmpsb
pop
mov
jbe
sub
sbb
cmp
xchg
int
adc
and
pop
pushf
sub
add
cs
fisubl
pop
pop
xchg
imul
in
insl
aam
add
push
lock
pushf
fstpl
adcb
gs
mov
push
sub
stc
sti
jae
movsb
mov
add
out
inc
out
sub
dec
daa
outsl
fprem1
imul
jns
jnp
cwtl
mov
js
dec
cmpsb
sbb
sbbl
pop
jns
mov
shrb
add
sub
dec
pop
sub
xor
or
push
scas
in
aas
cmc
mov
adc
xchg
xor
insb
sbb
inc
mov
jmp
xchg
adc
mov
into
sahf
jb
repz
inc
ret
jge
iret
pop
outsl
and
loope
xchg
jnp
xorb
push
dec
out
dec
jge
add
cmp
ret
outsb
mov
or
add
pop
jmp
repz
dec
mov
les
inc
icebp
in
or
add
popf
jnp
sbb
pop
or
pop
mov
nop
xor
aas
mov
push
shlb
pop
dec
jg
enter
pop
in
movsl
out
je
push
sub
mov
ret
xchg
aaa
mov
xor
dec
outsl
push
pop
or
mov
rcr
jle
adc
adc
or
or
inc
outsl
cmp
mov
nop
mov
mov
jge
in
rclb
std
incb
std
add
pop
dec
pop
mov
ret
shrb
mov
jp
mov
adc
fcmovnb
jg
push
push
fcoms
ljmp
sub
cmp
lret
mov
jp
adc
shlb
push
test
out
adc
xor
cmp
sub
fyl2xp1
dec
push
out
xchg
jb
dec
aaa
push
dec
push
fimuls
xlat
and
leave
jbe
imul
dec
push
ss
sbb
fistps
int3
xor
out
mov
std
cld
dec
mov
xchg
sarl
adc
add
out
xchg
xchg
lcall
cmpsl
popa
outsl
loope
mov
nop
adc
and
daa
pop
cltd
sub
call
pop
pop
push
or
mov
loope
adc
ss
jno
jecxz
pop
add
ret
popf
inc
divb
mov
and
jb
push
mov
data16
adc
lds
cmp
mov
loope
sub
inc
lcall
mov
sbb
loop
daa
fcomps
in
pop
fwait
ja
xlat
jmp
cmpsb
push
fnstcw
insb
push
inc
lret
lahf
mov
xor
xor
loopne
push
es
jecxz
sahf
mov
hlt
jl
sbb
sbb
gs
mov
mov
push
shll
and
inc
inc
push
cmp
jo
push
sub
lea
pop
pop
lods
pop
dec
subl
xor
fsubrl
cli
leave
pop
add
lds
lea
test
push
xchg
mov
pop
xor
stos
test
or
push
mov
jnp
mov
daa
iret
test
scas
jle
add
lret
ret
mov
mov
push
cmp
xor
fstpt
fistpll
push
pop
mov
jnp
hlt
and
xor
jbe
mov
int
xor
pop
lock
mov
fadds
test
jp
pop
ljmp
xchg
cmpl
fs
mov
xchg
jae
out
push
inc
out
mov
push
inc
stos
xchg
sbb
xor
call
mov
mov
adc
mov
shrb
jg
sahf
sbb
lret
push
dec
insb
sbb
daa
add
jo
hlt
push
ds
cltd
mov
mov
adc
cmpb
sti
dec
cwtl
sbbb
and
ds
test
fmuls
xorb
daa
xchg
sti
je
adc
sti
rolb
add
push
lret
mov
pop
push
xchg
sub
xchg
cmp
lret
sub
ret
imull
sbb
sbb
dec
imul
movsl
push
cwtl
sub
xor
mov
pusha
les
outsb
mov
cmp
jno
insb
lret
xchg
arpl
addr16
fsubrs
and
daa
cld
jg
push
inc
cmc
sbb
test
cmpsb
push
sbb
xlat
sub
cmp
stos
and
push
aam
cltd
add
dec
aad
insb
mov
and
pop
and
lea
xchg
clc
dec
push
push
rol
lret
pusha
pop
fs
mov
imul
inc
in
xchg
or
or
dec
adcl
cmpsb
dec
mov
xchg
jns
pusha
dec
push
pop
lret
jp
mov
test
insl
cld
mov
mov
movsb
rcll
inc
inc
lcall
jp
cmp
or
ds
iret
imul
adcl
or
xabort
cmp
or
inc
shl
imul
loop,pn
sbb
sub
scas
jb
jg,pt
and
jmp
mov
js
xor
push
lods
adc
loope
jge
test
or
pop
andb
cld
je
outsl
scas
outsl
cmpsl
mov
out
add
mov
push
jns
cmp
or
ss
cmp
shll
mov
ds
jmp
mov
fmul
addr16
cltd
imul
js
imul
sbb
sbb
sbb
jbe
movl
out
inc
xchg
out
fdivl
inc
sti
jmp
push
movsl
cmp
cmp
dec
add
pop
adc
sahf
jnp
in
in
pop
mov
mov
leave
jb
add
call
add
loopne
pop
mov
add
daa
pop
dec
cwtl
push
cmp
popa
sbbb
add
fidivrl
fs
shr
je
lea
popf
stos
dec
loope
sub
xchg
xchg
sub
mov
setg
jg
rclb
dec
xorl
dec
ja
fstpl
push
insl
out
cmp
push
sbb
stc
jg
ljmp
movsb
push
and
mov
sbb
sarb
pop
or
push
jne
xor
dec
cmpsl
add
adc
inc
sub
add
cmpsl
les
xchg
or
int
mov
sub
incb
push
mov
in
out
pop
mov
cmpsb
out
js
stos
ljmp
add
push
xchg
ret
or
ret
jecxz
filds
pusha
dec
mov
push
or
shlb
insb
jns
adc
les
sub
and
nop
add
int
pushf
mov
cli
ja
dec
cmp
push
pushf
mov
pop
and
add
pop
dec
or
adc
aad
divb
push
inc
cmc
rcrb
pop
mov
mov
lea
dec
repz
test
js
dec
add
pop
push
cmpsb
lock
mov
push
adc
xchg
mov
sub
push
movsb
xchg
repz
xchg
sbb
mov
sbb
es
dec
add
in
pop
aam
insl
scas
nop
jne
mov
jecxz
xor
ds
xchg
and
data16
pop
shll
xchg
sbb
push
leave
inc
lds
add
dec
inc
or
and
shl
arpl
sahf
pushf
cs
sbb
icebp
clc
test
mov
mov
mov
sub
fbstp
cmp
notb
sub
scas
mov
and
lods
imul
les
je
out
xor
push
or
sub
push
cs
jl
and
mov
sub
ret
mov
mov
enter
add
das
sbb
mov
insl
cmp
pop
jnp
jb
out
imul
sub
mov
imull
adc
mov
inc
jo
movsl
lcall
iret
int3
scas
xchg
cmpsb
jae
outsl
jle
jmp
daa
cmp
adc
mov
shrl
pop
add
call
out
dec
xchg
shl
and
add
frstor
in
mov
test
outsl
sbb
cld
hlt
mov
inc
fidivl
rcrl
and
insb
nop
aad
mov
int3
xor
mov
fistps
xor
pop
out
lock
jmp
fsubr
and
pop
mov
cmp
fsubrl
fistps
mov
mov
sub
loope
lret
in
divl
lretw
xor
dec
or
inc
call
adc
mov
stc
push
mov
shl
pop
cli
mov
adc
adc
fcoml
shl
mov
adc
pop
push
jne
or
xlat
pop
jns
xchg
push
jecxz
and
es
icebp
out
movsb
mov
mov
test
dec
and
pop
mov
xor
sub
xor
mov
icebp
dec
dec
js
push
pop
jmp
fsubrs
sub
mov
shlb
lret
int
xor
jns,pt
fmuls
es
imul
sbb
cmc
inc
sbbl
test
or
ret
ja
xor
cmp
cmc
push
int
repnz
mov
xor
cmpsl
mov
mov
push
or
fwait
dec
sbb
cmc
xor
xorb
outsl
jb
mov
test
inc
pop
dec
scas
cld
dec
ss
mov
je
imul
pusha
push
imull
pop
push
inc
push
jnp
ficoml
test
into
push
or
and
pop
xchg
in
mov
andl
mov
bnd
testl
fsubl
dec
mov
xchg
jo
cmp
mov
in
outsl
push
mov
adc
fsts
popf
xor
push
inc
sbb
mov
daa
mov
fstps
fidivrl
mov
insl
or
inc
loope
das
es
pop
add
or
xor
mov
and
xor
inc
mov
adc
into
jnp
xlat
repz
int
imul
jmp
out
int3
xchg
lahf
out
sbb
stc
mov
jmp
fistl
pusha
clc
xor
xchg
sbb
xchg
out
rcrl
in
decb
adc
inc
jge
cmp
inc
sbb
stc
dec
xor
xor
std
aad
ds
lods
cmp
pop
push
fidivs
dec
xorb
outsb
stos
push
arpl
outsl
mov
xchg
pop
inc
inc
shl
fldcw
or
sbb
arpl
stc
test
int
add
inc
sub
push
sub
mov
adc
int
iret
lahf
ja
popf
jl
cmc
push
adc
fnsaves
mov
lret
stos
jecxz
pop
jmp
mov
test
pushf
or
add
ss
and
pop
lea
jp
stc
ja
pop
sub
and
sub
cltd
outsl
pop
imul
mov
cwtl
sti
movsb
inc
lcall
jle
lds
nop
push
or
mov
push
xchg
push
mov
fimull
push
sahf
push
lret
sbb
es
bnd
aaa
daa
cmp
or
xor
call
cmp
hlt
cld
mov
frstor
test
xor
push
mov
icebp
sbb
push
seta
mov
push
fimull
sub
lds
and
scas
jg
sub
cmp
data16
leave
mov
push
sarb
adc
aad
mov
fmulp
popf
pop
shll
std
xlat
nop
jecxz
jl
and
lds
iret
test
insl
inc
jb
xchg
into
inc
xchg
xchg
popf
loop
daa
jne
in
out
add
sbbl
outsl
pop
notl
arpl
shl
insb
es
cs
xor
stos
or
inc
rolb
outsl
mov
push
out
jle
sbb
mov
mov
inc
fs
mov
mov
cmpsb
mov
in
or
sti
push
test
pop
fsts
pushf
push
mov
sahf
mov
movsl
test
cmp
imul
mov
xor
int3
js
xor
xchg
cmovg
cs
shll
daa
dec
add
dec
ret
aas
sub
xchg
add
inc
mov
inc
mov
nop
repnz
jno
dec
sub
insl
pop
pop
outsb
inc
jns
das
daa
out
xor
cwtl
inc
mov
sbb
aaa
sub
cld
movsb
rcrl
mov
cli
popa
dec
push
call
pushl
aaa
arpl
loop
mov
imul
aam
shll
dec
push
ret
arpl
lds
movsl
add
imul
sub
fcmovnbe
ljmp
mov
dec
and
fcomi
jo
into
inc
inc
aad
cmp
sub
pop
les
sar
stc
adc
fistps
push
adc
in
xchg
jne
jle
pop
std
fwait
jb
lret
stc
scas
push
jl
mov
pushl
xchg
ret
adc
jb
fwait
ja
mov
jne
je
pop
negb
mov
lcall
jne
add
mov
mov
sub
aad
lods
test
push
in
cmp
mov
cmpb
fs
mov
fstl
cmp
lahf
sub
je
mov
xchg
sub
cmp
mov
push
repnz
mov
dec
cwtl
js
hlt
add
loopne
push
jnp
leave
fbstp
fwait
repnz
jno
or
std
dec
xchg
shlb
je
pop
pop
int
mov
fwait
or
xchg
out
mov
jne
test
dec
loope
mov
mov
push
fwait
inc
aam
adc
icebp
cmp
mov
pop
inc
mov
push
dec
push
jbe
std
inc
aaa
sahf
mov
jg
das
js
ss
lahf
or
addb
clc
jg
hlt
xchg
in
shl
aad
lds
and
in
cmp
jg
jg
das
sub
jg,pn
sbb
add
mov
test
clc
retw
pop
adc
bound
xor
imul
sub
ja
push
jo
inc
pushf
cmpsb
dec
fsubrl
xor
and
sbb
movsb
jg
push
mov
mov
inc
stos
lds
shl
or
xchg
cmp
lds
push
gs
push
cmp
jmp
xchg
mov
pop
push
sub
insb
dec
mov
sbb
and
pop
mov
int
push
movsb
mov
out
mov
dec
and
sbb
aaa
push
push
test
jns
ds
or
in
add
add
fs
inc
lds
testl
fldenv
loop
jmp
sbb
enter
sub
jne
mov
push
es
les
shrb
ret
cmp
push
lds
cmp
add
xchg
add
push
outsl
xor
or
std
push
lds
dec
fwait
jg
mov
cmc
or
clc
inc
add
clc
mov
mov
and
mov
dec
and
and
es
mov
add
inc
repz
pop
xor
push
push
mov
pop
xchg
mul
xor
push
pusha
add
mov
imull
inc
addr16
pop
sub
mov
loope
jns
inc
cmp
out
xchg
clc
aaa
daa
sbb
iret
jp
sub
insb
and
dec
inc
ljmp
shlb
xor
sub
inc
push
arpl
insb
fwait
xchg
add
jae
jae
in
nop
sbb
adc
xor
loopne
rolb
cmpsl
cs
mov
shll
sub
and
add
andl
jecxz
xor
aam
push
fldl
cmp
add
bts
insl
add
inc
scas
lods
ror
mov
push
pop
shr
ficoms
repnz
push
mov
scas
ret
cli
nop
adc
imull
cli
imul
pop
call
mov
mov
sbb
sbb
inc
jnp
jl
add
inc
xchg
and
cmp
sti
push
mov
stos
sub
xlat
adc
fiadds
adc
cs
inc
add
negb
leave
dec
pop
push
or
lcall
shll
pop
lods
pop
inc
and
pop
or
inc
outsl
por
pop
push
lahf
mov
cli
xchg
dec
pop
daa
aaa
cld
negb
or
mov
andl
fwait
xchg
sub
addl
or
add
dec
cwtl
mov
dec
pop
push
jns
mov
popf
jle
in
or
push
mov
add
dec
aam
pop
cmpsb
jne
cltd
shrl
ljmp
push
inc
ret
pop
rcll
call
loope
stos
dec
pop
scas
pop
out
add
aam
das
mov
xor
mov
ss
mov
ds
inc
cwtl
dec
adc
mov
sbb
mov
out
xor
in
dec
xor
icebp
mov
pop
adc
inc
imul
mov
cmpsb
jg
jo
loop
push
ret
inc
pop
jecxz
sbb
or
cmp
pushf
pop
push
lock
scas
out
lret
test
adc
xor
rorl
insl
jp
pop
insl
cmovg
and
outsl
mov
movsb
xor
out
jg
or
ljmp
in
lods
push
test
sbb
push
push
sbb
jno
xchg
cmp
xor
jae
xlat
push
sbb
aad
aam
and
sub
incb
dec
lahf
cmp
loope
rorl
adc
cmc
nop
imul
or
push
jecxz
shrb
sbb
inc
mov
cmp
mov
pop
cmp
sbb
xor
cmpsb
or
loope
or
adc
arpl
fldenv
or
add
and
fwait
or
mov
push
das
push
jge
adc
cltd
xchg
pop
out
sub
dec
push
popf
sub
sti
and
leave
stos
rcrl
jb
push
sub
sbb
pop
mov
lea
push
adc
adc
mov
cmp
outsb
push
int
push
dec
into
pop
repz
pop
sbb
imul
out
push
hlt
fnstenv
xchg
repnz
xor
dec
aaa
test
popa
jo
inc
adc
push
cld
cmp
ja
shlb
jp
loop
xchg
rcrl
push
loopne
mov
icebp
mul
sub
repz
and
push
icebp
mov
dec
or
xor
movsb
cli
addl
xchg
daa
dec
push
fmuls
icebp
mov
mov
jmp
lahf
mov
pop
mov
push
cs
shll
xchg
jecxz
aad
and
mov
add
cmp
and
mov
aam
sbb
repz
loope
or
popa
mov
test
out
loope
mov
add
cwtl
das
inc
mov
or
lods
aaa
cmp
jno
jp
aad
xor
iret
das
flds
lret
jp
insb
shll
sbb
stos
repz
cltd
mov
mov
leave
jno
arpl
pop
lret
push
mov
lods
test
stos
sub
sahf
gs
mov
push
xchg
xor
mov
or
iret
push
or
xchg
sub
cmpsl
cmp
sbb
frstpm(287
add
fldlg2
fcomps
daa
rep
insl
stc
push
sbb
and
xchg
sub
xchg
je
or
mov
sub
push
leave
inc
push
scas
cmp
fwait
lods
sti
out
jge
out
hlt
mov
data16
sbb
fildll
cli
das
ljmp
stos
jns
or
ret
push
or
int3
js
jle
loop
lock
mov
cwtl
cmpsl
mov
xor
mul
jmp
adc
jp
mov
enter
nop
jbe
cmpsb
mov
std
sub
mov
mov
cmp
aam
ljmp
movsb
pop
gs
mov
or
mov
adc
adc
mov
loope
jl
dec
xor
mov
movsl
and
ret
or
aad
xchg
mov
push
jno
jnp
push
push
js
into
xchg
xor
test
ss
into
mov
pop
das
jnp
int3
imul
inc
adc
fsubrs
push
sub
mov
loopne
sbb
mov
outsb
mov
iret
and
push
jmp
inc
and
popa
nop
or
mov
gs
ljmp
mov
mov
lahf
add
popf
push
sub
cmpsl
fwait
mov
add
sub
fisttpll
popa
leave
test
jecxz
stc
pop
iret
or
mov
adc
leave
xor
adc
push
add
jb
inc
mov
les
mov
jnp
adc
mov
jle
jo
mov
nop
bound
sub
inc
bound
mov
push
dec
les
rcrb
in
pop
lock
mov
shl
arpl
xchg
sarb
inc
mov
in
sbb
ret
call
imull
cmp
aaa
enter
jle
das
push
or
and
push
add
xchg
dec
sbbb
orb
dec
or
mov
push
movsl
pop
divl
and
call
sarl
lret
and
cmp
sub
test
xrelease
pop
andl
mov
push
or
push
sub
dec
adc
ljmp
outsb
and
mov
mov
bswap
out
xchg
jecxz
fcmovnb
jnp
aad
nop
mov
loop
sbbb
call
push
rcll
push
mov
clc
pop
nop
xchg
fsubl
mov
or
sub
outsl
shlb
out
mov
mov
mov
mov
pusha
mov
sahf
aaa
inc
jne
mov
out
dec
cli
sahf
ljmp
adc
into
stc
imul
insl
pop
push
lret
sbb
xorb
mov
jmp
jae
jb
sahf
movsl
pop
pushf
aad
aas
dec
pop
mov
push
call
movsb
pop
loope
cmp
push
lods
bound
movsl
xor
nop
jle
cmp
and
neg
push
cwtl
out
cwtl
movsl
lret
es
fs
dec
test
in
xchg
xchg
xor
xchg
cs
into
and
hlt
stos
inc
mov
scas
ret
dec
repz
xchg
mov
mov
push
jg
mov
adc
xchg
ss
cmp
fcomp
cmp
jmp
sub
jbe
sub
mov
and
cmpsb
fbld
inc
mov
stos
loop
push
cs
enter
inc
mov
cmp
test
loop
jge
adc
jbe
push
popf
push
out
mov
aas
dec
dec
mov
jl
inc
push
inc
das
repz
adc
dec
cmp
jne
movsb
stos
cmp
pop
cmpsb
clc
add
mov
mov
jne
fwait
mov
mov
and
vxorpd
and
jns
icebp
mov
mov
jbe
subb
sub
xchg
cmpsb
mov
faddp
fnstcw
mov
sub
inc
pop
dec
aaa
enter
or
sbb
addr16
call
fistpl
ficompl
jae
loope
mov
jp
outsb
aaa
adc
cmp
jp
dec
cwtl
fisubl
cmp
stos
jns
jne
mov
mov
dec
dec
les
cmp
jg
es
sbb
jge
pop
das
jnp
cmp
loope
into
stos
xor
mov
sub
out
scas
mov
sbb
out
es
hlt
adc
xor
sbb
stos
cld
out
lock
cmp
bound
loope
dec
rdpmc
pop
fdivrl
xorl
test
cmc
and
cmp
andb
sub
inc
ret
rcrb
dec
xor
leave
jno
fs
jge
dec
lcall
cld
mov
push
pushf
cwtl
adc
into
cs
xchg
lcall
movsb
lods
xchg
sbb
sub
arpl
mov
incl
mov
sbb
repnz
clc
push
arpl
out
hlt
pop
lret
pop
push
nop
pop
int
lret
repnz
lcall
pop
pop
repnz
sbb
add
loop
adc
push
cmp
sbb
test
xchg
inc
roll
sub
les
lret
and
imul
stos
fwait
mov
lret
test
dec
arpl
rcrl
mov
fisubrl
dec
jg
inc
ja
jbe
xor
xor
popf
adc
mov
cmpsb
adc
test
loop
or
mov
ret
push
lock
xchg
cmpsb
push
mov
outsb
dec
jnp
pop
lods
out
repnz
push
push
fs
push
in
rcrl
fs
and
fnstcw
pop
dec
fcompl
lock
es
xor
lahf
mov
aam
add
xchg
test
div
sbb
and
enter
inc
mov
adc
xor
addr16
dec
movhps
dec
inc
jmp
dec
add
mov
test
scas
mov
fwait
sub
mov
xor
in
mov
in
arpl
mov
jb
or
stc
in
sub
es
addr16
inc
imul
adc
addr16
pop
xor
inc
pushf
dec
xor
cmp
cltd
movsl
out
jge
stos
push
fucomp
leave
mov
xchg
fcomip
bound
mov
and
in
and
push
fs
js
jle
mov
inc
mov
fdivr
or
adc
push
mov
bound
xchg
sahf
ret
lcall
in
or
push
sub
je
xchg
ja
jmp
cmpsb
rcrl
xchg
cwtl
fmull
mov
push
jae
insb
dec
dec
mov
stc
jle
pop
mov
data16
test
adc
icebp
push
push
mov
pop
scas
and
xchg
repnz
cli
dec
aaa
insl
bound
movsb
popa
lret
inc
stos
hlt
in
sbb
sahf
jge
daa
xorb
out
dec
lret
jbe
mov
jmp
lret
insb
adc
mov
mov
pop
xchg
mov
xor
mov
mov
jb
sbb
add
mul
push
shlb
out
and
cwtl
cmp
inc
mov
pop
cmpsb
mov
mov
and
lea
sbb
sub
int3
gs
into
not
pop
xor
scas
inc
addr16
push
xchg
in
xchg
fucomi
ret
js
leave
push
push
out
sub
push
cwtl
fcomi
or
fwait
je
sub
jl
rol
jb
imul
pop
inc
mov
dec
lds
mov
shll
popa
jo
mov
roll
inc
and
add
jl
inc
add
sbb
cmpb
test
sbb
icebp
imul
loop
sbb
xchg
out
rolb
push
icebp
adc
jb
neg
dec
ret
mov
mov
xchg
or
clc
pop
lret
pop
enter
imul
mov
loop
xchg
imul
fstps
imul
ljmp
pop
jmp
icebp
push
cmp
add
push
mov
test
add
pop
roll
push
out
pop
jb
xchg
pop
push
and
mov
mov
hlt
fwait
mov
mov
pop
out
in
cmp
into
push
test
popa
jg
add
jle
icebp
jnp
dec
push
negl
adc
arpl
stos
add
add
dec
cld
out
jle
cs
jmp
xor
cmp
mov
lahf
adc
xchg
xchg
pop
xor
pop
mov
subl
push
pop
and
in
gs
imul
sub
push
pop
and
aaa
lret
pop
mov
mov
push
mov
inc
push
jl,pn
push
divl
cmp
es
enter
incl
push
movsb
sub
push
jbe
jbe
sbb
adc
int
pop
bound
cmc
je
mov
stos
xchg
icebp
sbb
test
mov
jge
push
cmpsb
push
roll
push
test
fs
mov
push
out
outsl
movsl
clc
xor
fstp
lods
inc
addr16
add
jl
aaa
adc
hlt
xchg
outsl
dec
mov
addb
push
out
arpl
adc
or
test
or
lret
fnstcw
ret
aam
stos
push
push
push
loop
hlt
cmpsl
xchg
mov
pop
xor
sub
push
sti
pop
add
repnz
add
dec
adc
push
ja
mov
bound
fsubl
cmc
fs
or
lea
xor
and
push
adc
push
daa
xchg
lea
sub
insb
adc
stc
sahf
stos
rcll
repnz
sbb
xor
dec
aad
loopne
mov
mov
push
mov
push
mov
inc
loopne
jg
push
add
xchg
aas
mov
lds
xchg
jl
or
call
mov
push
les
pusha
adc
imul
sti
shll
dec
xchg
insb
mov
xor
cmp
in
out
enter
jne
mov
mov
jo
mov
es
out
std
push
cmp
ljmp
add
shll
and
popf
jb
cmp
lock
lods
int
add
xchg
sub
popf
and
in
adc
clc
pop
jp
jns
scas
pushf
loope
lea
jno
push
push
mov
mov
and
pop
cmc
into
cmpsb
into
jns
shll
scas
pusha
jo
fcoml
daa
push
pop
rorb
imul
mov
enter
cli
sub
scas
push
shlb
in
dec
cmp
rorl
shr
and
and
psraw
stos
popa
stos
out
mov
rolb
mov
xor
out
popf
cmc
or
jb
adc
sarl
mov
movsl
pop
xor
fwait
les
jne
pop
out
into
shrb
push
fsubs
mov
sbb
cmp
les
cmp
aam
push
xor
mov
bound
xchg
rorl
popa
addl
gs
mov
insb
rcrb
icebp
mov
test
cmp
pop
push
inc
imul
jb
mov
arpl
push
mov
or
lea
xchg
fnstenv
jmp
int3
xchg
pusha
xchg
loope
fxam
cmpsb
jbe
cmpsb
xchg
xor
push
cmc
rcrl
dec
lahf
into
xor
sub
cmp
dec
or
inc
lret
repnz
sub
dec
aad
push
sub
leave
je
cwtl
ds
andl
mov
push
mov
std
mov
and
push
lahf
daa
cmp
and
jl
mov
mov
pop
mov
xlat
popl
iret
lret
into
cli
pop
lock
dec
mov
jb
jno
sbb
and
push
push
test
loop
push
jno
pop
iret
inc
or
mov
ljmp
push
dec
sarl
dec
lds
loopne
fcmovbe
sub
dec
dec
aas
lods
or
push
adc
xchg
dec
adc
call
mov
js
jo
cmpsl
repz
xchg
inc
or
xor
jo
pop
cmpsl
loop
icebp
xchg
sbb
cmpb
pop
aam
out
pop
dec
sub
xchg
lods
cmp
jp
cmp
cmp
jmp
mov
lcall
nop
aad
jb
push
push
and
fdivl
jns
decb
ja
and
mov
sbb
sbb
nop
add
fildl
xor
and
adcl
adc
ljmp
xchg
push
test
loop
sub
push
mov
lret
popf
int3
mov
mov
cmc
sub
les
addr16
dec
push
add
lods
notb
cmp
cmpsb
jge
out
mov
mov
out
adc
stc
add
fidivl
sbb
test
mov
nop
cmp
adc
js
iret
dec
sbb
in
rclb
lcall
and
incb
mov
pusha
push
mov
sub
addb
mov
stc
jae
rcll
mov
fs
mov
cmp
mov
shl
testb
adcb
inc
xlat
lret
push
mov
mov
sub
mov
addr16
mov
add
cli
mov
popf
mov
repz
push
icebp
push
lods
es
dec
test
outsb
aas
call
icebp
xlat
push
sub
xor
pop
loope
lahf
adc
pop
movsl
xchg
aas
mov
and
or
in
sub
and
jle
mov
mulb
orb
push
and
fwait
or
mov
sbb
push
inc
mov
iret
sub
movsb
out
bound
or
imul
mov
insb
std
lahf
cltd
mov
pop
pop
jns
call
je
push
jbe
nop
add
inc
test
jle
xor
enter
xor
mov
jmp
and
or
cmpsb
jae
rcll
xchg
and
dec
add
in
mov
mov
mov
dec
aaa
aad
mov
mov
mov
inc
nop
xor
add
repz
ljmp
ja
loope
or
sub
pop
pop
shll
pop
add
arpl
aam
jmp
sub
dec
fbstp
add
repz
pop
or
iret
pop
notl
and
dec
std
and
xor
mov
repz
cmp
outsl
xchg
movl
jno
xchg
adc
mov
inc
mov
enter
dec
movsl
popf
adc
xor
stos
or
sbb
aaa
mov
mov
sarb
mov
stc
std
add
jp
jne
or
mov
xor
fcompl
add
mov
pusha
and
decb
cld
cmp
mov
sub
cmp
xor
pop
orl
mov
adc
sub
ljmp
adcb
loope
lock
adc
ret
scas
repz
arpl
int3
mov
xor
flds
js
xchg
iret
lock
and
mulb
add
or
popf
aam
bound
dec
in
test
scas
cld
sbb
test
ret
cmovle
loope
inc
inc
int3
mov
xchg
xorb
mov
and
pop
inc
mov
mov
adc
and
je
rolb
jp
cs
sub
ljmp
clc
scas
add
sbb
push
mov
mov
test
ret
inc
inc
adc
jne
lods
add
mov
insb
mov
mov
inc
pop
pop
mov
in
add
imul
cltd
scas
push
cmp
pop
shlb
xlat
dec
xchg
pop
mov
jns
insb
fistl
xchg
ret
and
ss
rcrb
sub
imul
pop
sub
dec
test
xchg
into
outsl
mov
popa
scas
in
lcall
scas
inc
jmp
xor
push
rcrb
dec
inc
addr16
inc
loope
sub
or
push
push
adc
sub
jb
inc
and
les
or
add
in
es
cmp
and
shll
cmc
push
icebp
inc
lahf
xorl
sti
lds
jp
pushf
pushw
subb
adcb
into
sbb
add
mov
mov
pop
or
xchg
in
cmp
gs
push
jns
aas
aad
ljmp
xor
dec
push
cld
mov
lahf
cmp
sbb
aad
in
les
push
lret
sbb
pop
cmpsl
dec
add
inc
add
adcb
imul
shlb
mov
push
ret
sahf
inc
push
imul
stos
bound
call
loopne
stos
nop
cmp
subb
cwtl
arpl
mov
and
frstor
push
loop
and
inc
dec
adc
mov
dec
pop
cmp
xchg
inc
das
out
cli
add
sub
and
mov
rcl
sbb
clc
adc
mov
iret
xchg
out
inc
xchg
test
pop
mov
repz
cmpsb
scas
iret
add
loop
fwait
repz
push
popf
lock
adc
sub
hlt
inc
and
cmc
or
loope
rorl
icebp
or
inc
sub
xor
push
sbb
bound
mov
sbb
cltd
subl
jp
xchg
bound
sbb
mov
pop
int3
je
lock
inc
xchg
daa
cmp
mov
imul
cmp
sbbb
imul
les
mov
insl
scas
cmpsl
xlat
bound
push
or
adc
jae
scas
clc
adc
insb
cld
push
ljmp
adc
pop
clc
sbb
xor
lahf
filds
sbb
push
mov
lods
loop
xchg
and
pop
aad
add
out
mov
inc
push
xchg
xor
pop
add
loop
loop
icebp
into
addr16
ljmp
pop
test
xor
sub
add
insb
pop
dec
push
loope
faddl
sbb
dec
cs
pop
lcall
cmpsl
pop
cmc
push
mov
pop
pop
shl
adc
testl
out
inc
test
inc
sub
and
movsb
imul
sbb
adc
mov
out
jo
or
fdivl
and
fdivr
aaa
mov
icebp
adc
push
mov
lret
dec
sbb
lcall
dec
movsb
scas
inc
dec
mov
fsts
inc
shrb
inc
jbe
into
jno
adcl
jb
ret
pop
and
not
mov
add
mov
cmp
mov
addr16
cmpsb
pop
jecxz
int3
add
call
sbb
and
ror
lretw
jge
sbb
xorb
imul
mulb
cmp
push
jo
xchg
add
dec
push
test
les
jbe
xchg
jno
shl
test
xor
in
and
jno
fstpl
das
sbb
mov
cld
jecxz
ret
enter
mov
in
test
xchg
push
jmp
pop
sbb
pop
xlat
xchg
mov
or
lahf
mov
stc
dec
jecxz
push
cmp
push
rcrb
xor
sub
lcall
jae
sbb
shl
imul
scas
mov
in
out
std
mov
rolb
fimuls
aaa
dec
fcmovne
jno
or
push
std
cmp
add
pop
xlat
pop
hlt
jo
add
jp
sub
pusha
cmp
and
sub
lds
push
out
pop
in
fsubrl
push
push
sbb
loopne
lds
pop
push
jmp
ds
or
dec
xchg
adc
adcb
push
pop
sarl
cltd
test
leave
pop
push
dec
adc
aaa
mov
outsl
lretw
jbe
xchg
mov
test
js
add
pop
xchg
xor
cmpsl
ss
mov
cltd
pop
sub
jb
inc
inc
add
mov
xchg
shlb
adc
mov
push
fcmovnu
and
pushf
adc
jmp
adc
adc
fsubl
cmpl
fimull
adc
mov
or
int3
cwtl
enter
outsl
lea
outsl
pusha
js
js
popl
pop
loop
adc
jne
daa
inc
and
jl,pn
test
jg
mov
push
pop
fnstsw
pop
repnz
jge
jae
sbb
or
pop
pop
xchg
std
lcall
insb
or
incb
inc
jbe
jne
jae
mov
scas
mov
dec
movups
sub
sbb
addr16
std
add
dec
cli
xchg
fldl
add
cmc
scas
std
ret
je
cltd
loopne
push
popa
mov
xchg
xor
enter
jo
push
in
inc
inc
push
xor
fwait
jbe
lods
hlt
andb
pusha
ds
mov
jno
sub
xor
in
aam
inc
stos
bound
popf
mov
scas
push
inc
out
notb
push
adc
mov
in
aas
mov
hlt
repnz
shrl
les
je,pt
pushf
repnz
jmp
dec
jb
rclb
push
out
cmp
ss
jo
outsb
in
inc
aaa
or
or
and
addb
sub
cmc
prefetch
cmpsb
jbe
xchg
jl
imul
les
mov
sub
sbb
lock
lods
mov
mov
ss
xchg
cmp
sub
and
cmp
lea
push
stos
cmp
cmpsl
repnz
sbbb
jnp
imul
sub
mov
adc
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
mov
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
jecxz
sbb
loope
repnz
mov
dec
loopne
sti
fsubrl
cmp
scas
shl
fsub
push
fwait
out
xchg
inc
out
xchg
mov
ret
adc
icebp
cmp
push
fists
ret
sbb
dec
push
loope
jo
lret
and
dec
mov
enter
sub
test
inc
mov
insl
cmp
clc
inc
pop
fsubrp
cmp
push
fists
mov
push
sbb
insb
inc
loope
in
mov
stos
decl
enter
sub
lcall
pop
jne
nop
repnz
cmp
adc
test
jmp
lds
lcall
or
push
es
repnz
mov
clc
shlb
shl
mov
shr
sbb
mov
push
aam
ret
pop
daa
shl
mov
push
aam
ret
adc
shl
mov
inc
fdivs
and
lcall
sti
sbb
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
adc
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
pushf
mov
lods
rol
sbb
mov
jmp
adc
shlb
mov
jmp
adc
push
in
cmpsl
mov
mov
sbb
sbb
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
adc
mov
push
aam
ret
jp
lret
repz
ret
mov
dec
shlb
add
xchg
sti
loop
rcrl
jae
inc
test
mov
cmp
int3
mov
xchg
ret
popf
jb
sahf
xor
mov
mov
pop
popf
cmp
mov
test
jp
lods
xor
inc
test
out
es
lods
mov
mov
mov
fmull
mov
fisubrl
fsts
jg
fdivp
push
jle
lcall
push
mov
jg
call
sub
stos
push
or
enter
cmp
mov
push
jg
loop
xchg
in
inc
mov
cmp
mov
mov
adc
pusha
mov
mov
lock
pop
xor
or
jnp
pop
shl
or
mov
or
mov
into
out
xchg
fs
sbb
fcompl
sub
jno
in
cwtl
xchg
mov
mov
ret
fstpl
inc
mov
repz
pop
jb
stos
imul
sbb
jp
push
out
pusha
imul
and
push
clc
fsub
adc
push
or
add
mov
jmp
lods
add
jb
jg
fwait
add
mov
mov
mov
dec
inc
or
jp
das
sahf
mov
imul
add
fwait
push
jecxz
loopne
int
incl
imul
addr16
es
push
rcl
iret
push
ja
icebp
int3
pop
pop
mov
and
das
int3
xor
sbb
and
mov
int3
mov
scas
fwait
and
sub
cwtl
scas
out
xchg
mov
imul
insb
mov
ja
dec
fadds
popf
jmp
lret
daa
adc
add
xor
jle
ss
outsl
mov
or
negb
test
scas
je
repz
fs
stos
inc
mov
adc
sar
pop
ret
cmp
aaa
lret
pop
arpl
mov
nop
mov
add
aad
push
out
test
push
xchg
hlt
lock
sarb
outsb
int
outsl
sub
lds
pop
mov
sbb
into
ds
xchg
and
xor
push
aam
bound
and
mov
ja
pop
test
push
clc
inc
movsb
add
or
jg
jle
dec
icebp
xchg
pop
sbbl
popf
setno
cmpl
jae
cmp
sub
ret
jb
movsl
jp
fwait
sahf
cmpl
mov
xor
ret
pusha
lret
adc
xor
out
jge
xor
inc
jae
into
adc
jb
stos
xchg
leave
stos
mov
repnz
add
push
mul
ret
sub
jmp
adc
ljmp
pushf
pop
cmpsl
out
cmp
mov
popf
mov
in
sbb
push
sti
sbb
xchg
jne
push
adc
arpl
add
jns
stc
adc
in
jge
dec
outsl
jmp
adc
xchg
xor
loopne
sbb
sbb
in
mov
sti
add
sub
cltd
push
popa
xchg
sahf
mov
in
bound
sahf
out
pop
in
dec
je
and
jg
pusha
enter
int
pop
push
popf
dec
notb
loop
inc
cmp
nop
dec
das
jp
out
lods
outsb
inc
out
xchg
popa
mov
xrelease
loope
outsb
adc
pop
cmp
mov
repz
sbb
sbb
mov
and
adc
fdivr
add
js
lea
in
xchg
repnz
push
sbb
add
ds
test
add
subl
dec
out
bound
add
inc
stos
push
jns
jl
pop
xor
mov
mov
jmp
cwtl
pop
dec
jg
mov
cmp
cmp
out
fildll
add
jge
imul
lock
stos
mov
or
out
dec
push
stc
xchg
add
adcl
ljmp
sub
iret
xorb
mov
dec
dec
mov
ljmp
in
out
pop
es
fistps
pop
add
int3
add
pop
jp
aam
inc
dec
mov
lret
inc
mov
clc
mov
mov
lret
inc
mov
mov
xor
ret
ja
add
ret
addb
cmp
push
outsb
pop
gs
seta
push
ret
xchg
xchg
xchg
mov
xor
cmpxchg
inc
lods
xchg
adc
fstps
sub
fdivl
enter
push
xlat
cltd
iret
sub
xchg
pushl
cmp
ror
mov
cwtl
or
pop
shrb
jg
mov
xorl
prefetcht0
xchg
addr16
mov
addr16
jns
and
adcl
fildll
lods
mov
mov
push
clc
mov
popa
ror
sti
aaa
mov
xchg
cmp
adc
pop
or
and
add
push
and
int
inc
mov
xor
in
cmp
pop
pop
and
mov
push
sahf
jne
add
push
adcl
cmp
or
mov
or
jb
popf
loope
xchg
lret
std
movsl
imul
push
shll
fcomps
push
inc
mov
into
lds
fwait
imul
aaa
sub
lret
mov
cmpsb
cld
dec
inc
push
test
fstpl
add
sub
ss
pop
data16
push
fcomi
and
andb
mov
fstpt
shll
cmpsb
mov
mov
pop
mov
bound
dec
out
dec
rorb
arpl
pop
pop
pop
push
inc
in
dec
loope
sti
sbb
sbb
repz
xchg
or
pop
mov
mov
jmp
xchg
inc
pushf
dec
cmp
std
cwtl
shlb
add
dec
scas
push
mov
mov
xor
add
pop
or
mov
and
fsubl
dec
mov
aam
mov
stos
xor
out
add
aas
imul
mov
and
push
push
lret
push
stc
xchg
mov
test
daa
popf
sbb
roll
xchg
push
jmp
cmp
mov
imul
lea
aas
sub
mov
mov
push
test
and
popf
gs
sub
mov
jge
add
ficoml
sti
arpl
sub
dec
mull
rol
mov
and
mov
mov
stos
inc
fs
popf
mov
mov
addl
inc
notb
push
or
ds
xor
call
in
lods
xor
lret
push
cmp
mov
ljmp
in
loope
sub
fucomip
or
rclb
dec
push
adc
add
inc
mov
jmp
pusha
or
push
or
mov
sbb
jp
les
pop
xlat
in
lahf
lea
jle
xchg
mov
xor
xor
and
cmp
lret
pop
lds
scas
sbb
inc
or
mov
mov
iret
and
inc
rcrl
int
xchg
ficomps
and
mov
fstpt
sub
pop
rcl
sbb
push
sub
mov
neg
cmp
icebp
sub
jmp
aam
adc
scas
xchg
mov
fwait
cmp
shr
pop
add
dec
mov
xchg
das
push
pop
or
js
dec
mov
jnp
std
lods
popa
psrlw
loop
xor
popa
add
push
inc
inc
fwait
pop
ja
lods
push
out
add
xor
sub
jecxz
xchg
insb
lods
test
movsl
imul
bts
mov
push
pop
popf
int3
push
loope
mov
adc
scas
fdivrl
loopne
nop
sbb
jne
pop
test
sbb
inc
stos
idivl
adc
popa
sub
ret
jge
daa
push
daa
pop
lds
ret
jge
sub
adc
imul
es
lds
cmp
mov
jno
stos
shl
pop
push
cmp
push
pop
push
push
mov
inc
mov
sarb
and
popa
jp
dec
adcb
dec
sub
and
mov
push
rcr
and
cli
int3
mov
mov
sbb
dec
mov
insb
incb
sub
lea
ds
adc
push
xor
push
test
pop
xchg
and
push
imulb
movsb
hlt
js
dec
sbb
xlat
int
pop
push
mov
repnz
adc
sbb
jns
push
add
orb
popf
adc
dec
cmp
cmp
xchg
cmp
loop
rolb
jae
fisttpll
das
push
adc
in
cwtl
fbstp
dec
dec
aaa
jnp
js,pn
xor
push
inc
clc
adc
xchg
push
inc
out
xorl
ret
pop
pop
loop
imul
out
jo
inc
push
inc
dec
dec
stos
lds
jg
stc
fs
gs
or
outsb
shll
or
mov
insl
bound
outsb
repnz
jne
out
fldcw
mov
pop
mov
mov
push
jae
loopne
sub
jne
fxch
mov
dec
aam
scas
out
enter
xchg
lret
push
xchg
xor
lock
lcall
cmp
mov
or
loopne
je
sti
mov
jmp
pop
jge
repz
add
pushf
sti
jnp
mov
mov
repz
mov
aam
mov
pop
pop
dec
inc
xchg
roll
in
mov
sbb
or
cmp
adc
out
pop
adc
lods
shl
and
pop
xor
mov
loopne
pop
mov
dec
fdivs
mov
psubq
aaa
bswap
jmp
adc
clc
insb
shl
jle
xchg
dec
sub
in
pop
mov
lahf
andb
xor
jle
pop
and
dec
and
pop
jno
jmp
loopne
cmpsb
aas
aam
mov
dec
xor
mov
call
in
dec
inc
dec
setp
in
fists
xor
and
jae
push
pop
xlat
mov
ljmp
sbb
cmpsb
lahf
xchg
jl
mov
out
and
pop
push
shr
mov
xor
sbb
shrl
or
push
jns
adc
mov
out
loopne
mov
std
icebp
mov
int
inc
push
jg
enter
mov
hlt
adcl
xchg
xor
in
dec
pop
subb
aad
bound
outsb
icebp
fisttps
mov
popf
sub
xchg
lcall
sbb
fwait
adc
fwait
mov
mov
inc
push
push
xchg
xchg
subb
test
popa
mov
or
shrb
cltd
es
jmp
rol
call
jbe
xor
jmp
pop
sbb
mov
inc
or
mov
insl
mov
test
addr16
dec
sbb
adc
ds
xorb
ret
test
cli
in
push
xor
and
mov
mov
mov
ss
cwtl
imul
fld
add
pop
fistl
mov
jp
pop
lea
lret
es
pop
scas
gs
add
mov
pop
lret
or
mov
shrl
sub
pop
sub
dec
push
pop
mov
es
lock
out
out
xchg
cmpsl
push
faddl
push
cmp
xor
out
add
jae
and
loopne
data16
jl
dec
pushf
xchg
repz
pop
leave
cwtl
lock
pop
and
out
mov
add
ret
and
arpl
inc
xchg
js
xor
add
cmpsb
mulb
cld
in
mov
or
repz
ja
add
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
