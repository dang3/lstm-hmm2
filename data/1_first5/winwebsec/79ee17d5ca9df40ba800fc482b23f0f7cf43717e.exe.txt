push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
adc
cwtl
mov
and
or
std
hlt
xor
pop
or
insb
inc
jge
outsl
push
mov
scas
pop
stc
xchg
dec
mov
mov
xor
cmc
and
and
or
arpl
sub
addb
add
sub
and
mov
insb
push
jb
adc
or
xchg
mov
pushl
xor
jae
in
sub
mov
inc
mov
xchg
adc
dec
inc
inc
jle
into
es
pop
cmp
sbb
fstp
mov
shrl
push
stos
adc
add
cmc
fs
xchg
sbb
xlat
and
pop
xchg
imul
mov
cltd
dec
js
xor
add
dec
lods
divb
outsl
lds
fisubl
inc
xor
ret
mov
pop
xorb
fildl
rcr
pop
imul
xorb
mov
and
fwait
adc
mov
stc
xchg
cltd
add
jne
xchg
into
out
scas
imul
leave
pushf
daa
test
inc
push
fsin
mov
roll
cmp
fs
jb
fs
out
push
dec
mov
push
push
jge
mov
mov
shrl
std
sbb
std
ret
jle
out
mov
xchg
adc
dec
lods
adc
imul
sbb
mov
sbb
xlat
lock
mov
fisttpll
gs
push
daa
add
sub
sbb
xchg
pusha
pop
xchg
adc
jbe
ret
mov
mov
daa
jno
enter
mov
mov
outsb
les
out
or
jns
in
mov
pop
add
testl
mov
scas
mov
out
ret
sub
movsl
or
push
addr16
dec
sub
jmp
test
ret
mov
dec
outsl
or
jbe
negl
stos
pop
cmp
orl
push
je
sub
mov
cmp
in
mov
add
lea
mov
cmpsb
das
fwait
add
xor
xchg
loop
cmp
fistpl
push
lcall
fiaddl
xchg
mov
jo
adc
mov
xchg
jp
jle
jmp
dec
or
lods
xchg
jge
pop
push
repnz
push
inc
out
mov
lods
aam
mov
dec
push
imul
into
aaa
adc
push
jbe
mov
push
jb
sarl
popl
test
pop
test
sti
push
arpl
sahf
cld
and
add
cmp
jne
out
mov
push
mov
mov
lea
ret
je
enter
pop
cwtl
pop
cmp
call
fcoms
xchg
shr
loopne
push
in
ss
addb
mov
sbb
in
movsl
xor
aas
inc
fucom
mov
dec
and
lods
jl
je
rcrl
mov
xchg
bound
jg
jmp
xchg
jmp
sub
jg
imul
sub
out
sbb
sahf
dec
mov
movsl
adc
jnp
jp
jo
cmpsb
sub
inc
movsb
inc
push
cltd
jle
aam
and
jl
xlat
popa
repz
sar
pop
lea
pushf
dec
push
dec
out
in
adc
cmp
dec
sbb
sbb
jbe
ljmp
aaa
lret
lock
sti
mov
scas
lods
pushf
fwait
clc
mov
cmp
xlat
xor
leave
xor
dec
sub
jge,pt
imul
ja
xor
push
jecxz
dec
sbb
fidivrl
stos
pushl
dec
sbb
fildl
add
cmp
into
mov
aaa
mov
lret
ftst
sbb
xor
sub
jae
xor
pop
xchg
nop
out
out
mov
mov
in
cmp
nop
mov
mov
in
fcmovnb
and
sbb
push
repnz
call
xchg
jle
inc
lods
ja
icebp
ja
movsb
dec
or
jo
cli
xchg
in
cmp
lret
lahf
movsl
gs
xchg
cmp
pop
in
push
rol
xor
insl
or
aad
ljmp
sbb
inc
mov
pop
cmpsl
mov
dec
push
loopne
xor
jnp
jae
xchg
jb
ljmpw
mov
push
gs
in
push
ljmp
fistl
sbb
inc
or
loop
retw
jl
nop
into
gs
push
inc
jbe
aad
fisubrl
xorb
sub
aam
xchg
push
pusha
in
and
cmpsb
mov
sar
lods
nop
mov
addb
fbstp
adc
sbb
cmp
push
mov
in
data16
push
push
fsubl
pop
test
add
andl
and
inc
testl
jecxz
cmp
ds
mov
arpl
mov
mov
cmc
jle
daa
pop
mov
faddl
jle
xchg
and
lahf
mov
mov
add
mov
pop
hlt
fcmovnb
mov
xorl
dec
mov
test
cmpb
lret
lret
mov
scas
rclb
fwait
inc
enter
test
je
fildl
inc
push
and
out
mov
fisubl
and
lret
subb
xchg
enter
rcrb
fwait
and
aam
and
xchg
das
xchg
xchg
add
dec
add
xchg
xor
ret
jp
movsb
mov
and
adc
mov
into
inc
mov
lret
pop
pop
xchg
push
fmull
cltd
mov
jns
dec
rcrl
aas
dec
inc
push
xchg
cmp
inc
stos
insl
imul
and
sbb
inc
les
outsl
stc
sub
testl
rcrl
dec
adc
push
add
mov
addr16
jg
mov
push
pop
xchg
pushf
fadd
cmp
dec
out
mov
pop
frstor
fisubl
pop
xchg
mov
shll
mov
and
push
or
and
push
xchg
push
imul
addr16
push
loope
popa
jno
clc
add
std
sub
movsb
lock
mov
stc
cmp
lock
fst
inc
cmp
enter
mov
and
lret
xchg
cmpsb
xchg
or
pop
enter
repnz
int3
sbb
cmp
bound
push
shll
loopne
rclb
cmp
and
push
add
arpl
test
push
and
sbb
push
stc
psubd
xor
adc
inc
outsl
imul
mov
mov
shlb
jp
lods
in
and
mov
out
sbb
dec
cmp
sbb
pop
iret
sub
lea
push
xor
enter
xchg
jb
shl
and
xor
push
mov
negb
mov
jge
loop
or
mov
sbb
mov
scas
pop
cltd
shrb
push
push
lds
xlat
xor
xor
shrb
scas
sar
jecxz
test
loop
leave
in
push
arpl
pop
or
js
adc
push
cmp
rcll
and
sub
js
fiadds
mov
js
or
mov
push
sbbb
movsb
cmp
jmp
in
cmp
xor
rorb
cwtl
xor
insl
add
add
cmc
xchg
bound
movsl
pop
repnz
push
adc
lret
nop
stc
sub
stc
int
push
jecxz
les
mov
repz
call
stc
fucomi
lahf
into
mov
imul
addr16
cmc
mov
mov
test
add
cmp
not
dec
adc
xchg
fmuls
imul
leave
mov
aam
add
ret
movsl
pop
fwait
push
clc
mov
sbb
sub
xor
jnp
insl
ficoms
jae
and
jge
inc
outsb
add
shll
inc
and
shlb
popf
lcall
addr16
cmp
cltd
aaa
je
roll
sub
dec
mov
pop
jno
xor
jg
inc
addr16
cs
push
mov
scas
imul
movsb
mov
pop
repnz
aas
cli
mov
sub
add
shl
pop
cmp
add
mov
or
imul
stos
mov
xchg
push
cli
inc
jae
inc
scas
adc
sbb
aad
jae
sub
xor
and
lcall
cwtl
in
es
cmp
inc
jg
xor
std
mov
lcall
mov
sbb
shll
mov
pop
int3
push
xor
dec
movsl
repz
sbb
das
clc
push
mov
xchg
mov
pop
jmp
enter
sbb
and
cmc
pop
mov
jo
in
inc
ljmp
pop
and
icebp
test
pop
cmp
les
and
pop
mov
pop
sbb
sub
rcrb
push
xchg
lods
scas
or
or
mov
ss
mov
sbbl
mov
and
call
jno
mov
lahf
in
lcall
movb
mov
jbe
cld
pop
in
aas
fwait
or
pop
imul
cmp
andps
xor
mov
repnz
outsb
xchg
repnz
pop
enter
xchg
enter
lock
rcrl
push
fnsave
ss
sub
shl
cmp
xchg
xchg
add
fwait
dec
sbb
leave
xchg
loope
cmp
icebp
cltd
fadds
scas
inc
pushf
test
jl
xor
push
adc
por
fs
jo
xor
scas
pushf
dec
pop
add
sbb
cmc
push
mov
cld
insb
dec
fincstp
scas
outsl
jbe
test
jmp
sub
js
repz
dec
imul
jno,pn
push
mov
js
push
or
dec
das
insl
out
unpckhps
int
cli
fs
mov
or
or
jmp
mov
mov
stos
add
or
gs
sbb
sub
pop
lea
sbb
jnp
cld
sti
fmuls
lahf
push
push
pop
cmp
mov
push
lcall
jns
movsb
into
xor
add
xchg
cmpsb
cmpsb
add
int3
and
or
pop
mov
jge
cmpsb
imul
shrb
call
or
push
repz
aas
cmp
out
sbb
es
popa
xor
sub
jns
das
and
xor
sbb
dec
leave
lcall
fcomp
xor
jmp
fstpl
xor
xchg
sbb
inc
gs
sahf
mov
dec
xchg
xchg
xchg
jbe
xchg
add
inc
leave
rorl
ja
pop
mov
xor
shrl
mov
mov
movsb
insb
push
leave
cmp
decl
xlat
xchg
aaa
sarb
icebp
xlat
into
jp
mov
add
pop
lahf
or
and
int
insb
out
push
sbb
mov
imul
les
hlt
inc
push
xor
hlt
int
pop
int3
out
push
cwtl
xor
bound
jge
mov
inc
push
add
loopne
push
mov
fbstp
mov
ficoms
sub
pop
xor
ss
xchg
jae
shlb
stos
sti
pop
xor
mov
mov
lahf
sbb
mov
xchg
cmpsb
aad
loop
pop
testl
daa
push
dec
aad
add
popf
clc
xor
jle
sub
in
adc
sti
jecxz
fsubl
sub
or
mov
lcall
jmp
vsubss
cmp
out
dec
add
fdivrl
adc
xor
inc
add
fdiv
negb
cmp
cmpsb
or
cmp
loop
mov
in
decb
pop
lods
es
sbb
xchg
mov
push
std
sub
notb
mov
cmp
popf
cmpsl
pusha
pop
rcrl
lea
movsl
inc
mov
mov
movsl
scas
test
out
dec
adc
pop
jae
push
sub
xchg
orl
out
cmpb
mov
mov
mov
imul
adc
cmp
push
imul
mov
imul
test
call
lods
or
inc
pop
push
inc
xchg
test
sarl
mov
in
push
dec
ret
jge
mov
or
cltd
in
vfmaddpd
jnp
fld
jnp
sahf
popf
sahf
clc
jmp
adc
rcl
xchg
xorl
xchg
mov
inc
fisubrs
push
and
int3
in
xor
imul
mov
shrb
in
js
adc
mov
je
mov
andl
fldcw
and
add
shlb
xor
aam
mov
in
xlat
loopne
jg
adc
clc
or
nop
mov
out
jne
icebp
jmp
jl
cmp
xchg
pop
sbb
xlat
fcompl
je
inc
out
jp
dec
xor
jmp
push
jp
push
lock
fwait
push
push
sbb
stos
mov
fadds
or
cmp
das
xchg
sbb
mov
movlps
in
lahf
out
mov
movsb
mov
pop
loopew
sbb
cmpsl
xchg
push
into
sti
lret
les
cltd
orl
dec
lock
pusha
cs
cmpsb
data16
mov
xorb
shrl
sbb
out
stc
add
mov
fwait
mov
push
sti
decl
jnp
adc
pop
push
imul
ficoml
mov
arpl
or
or
mov
pop
in
lock
pop
imul
dec
mov
dec
fdivrs
dec
jp
lcall
or
or
negb
xor
lret
sbb
mov
outsb
fldt
punpcklbw
push
sub
cmp
push
cmp
inc
cmpsb
or
scas
out
mov
push
outsl
dec
sti
clc
shrb
mov
jl
mov
cmp
inc
and
jo
pop
test
sbb
cmp
sub
daa
mov
das
mov
sbbb
loope
out
xlat
lock
add
std
fmul
push
andb
divb
insb
pop
pop
into
mov
cmp
push
sbb
out
sub
jecxz
and
in
test
push
inc
dec
push
rcr
jecxz
ljmp
xchg
jo
cld
inc
pusha
mov
push
lahf
or
xor
jecxz
arpl
push
xchg
repnz
adc
stc
dec
jno
lahf
xchg
xchg
aas
jno
std
roll
pop
jmp
adc
cwtl
ret
imul
jae
add
std
enter
pop
mov
aas
addr16
shr
out
and
jnp
sbb
adc
ret
adc
sti
hlt
xchg
adc
pop
mov
pop
sbb
mov
enter
push
or
sbb
fsubrl
jns
adc
pop
sub
sbb
cmp
sbb
mov
xchg
adc
xchg
xchg
pop
push
or
adc
addr16
pop
in
stos
out
dec
dec
pop
addb
mov
push
add
adc
cmpsl
fs
int3
dec
out
in
mov
jbe
ljmp
inc
shlb
ds
mov
mov
std
adc
popa
and
mov
pushf
pop
scas
and
ss
jecxz
cltd
jb
fwait
into
xchg
dec
or
pop
out
jp
aam
jmp
jae
adc
mov
fincstp
aaa
les
jp
jns
inc
dec
aad
xchg
pop
adc
or
dec
popf
movsl
xor
jl
hlt
jb
pop
xchg
push
cmpsb
add
into
enter
mov
fdivrs
imul
mov
shlb
jle
cld
int
ja
and
cld
mov
mov
es
fcomps
in
insb
jmp
fimull
mov
lret
xorb
mov
cmp
call
mov
mov
add
cmp
sbb
stos
or
lock
jb
test
out
lret
fstpl
pop
mov
or
scas
fsin
sbb
aas
mov
jmp
daa
data16
jecxz
xlat
sbb
repnz
fs
lret
pop
in
jne
add
push
and
addr16
add
push
js
push
scas
test
into
out
push
ljmp
xchg
lcall
inc
jecxz
movsb
push
mov
pushw
imul
fnsetpm(287
pop
push
icebp
lds
jge
dec
mov
adc
lret
rcrl
fcmovne
ret
pusha
mov
cmp
ret
lret
test
and
or
fsubrs
jecxz
sahf
cld
lock
mov
sbbb
or
inc
inc
jg
ja
push
addr16
leave
repnz
mov
cmp
pop
out
loope
mov
ljmp
cli
push
aaa
sbb
pushf
mov
sbb
mov
jne
sbb
mov
inc
lock
or
mov
mov
repnz
aad
insl
fptan
mov
fcmovb
pop
insb
insb
xchg
xor
or
iret
ficoms
xor
movsb
test
fnstsw
jns
xor
fdecstp
scas
mov
icebp
imul
int3
cmp
xor
jge
adc
shl
mov
call
hlt
mov
popa
fimull
jl
mov
popa
cmp
push
daa
mov
mov
xchg
jecxz
data16
test
sbb
sbb
es
add
sub
adc
testb
inc
adc
lcall
sub
and
cmpsb
mov
roll
jecxz
push
movsb
or
loop
mov
scas
jbe
cs
xor
loopne
jle
cltd
insl
and
es
adc
bnd
inc
insl
roll
aad
stos
adc
push
ds
jl
sub
test
mov
jecxz
ds
repnz
sbb
sbb
mov
ss
pop
dec
lock
and
sbb
lret
or
add
mov
xchg
ret
sbb
jns
inc
leave
sub
push
cmpsl
hlt
out
sbb
pop
and
adc
jbe
inc
aaa
push
rcl
fistps
pop
mov
mov
in
xor
pop
lods
cmpsl
lea
test
sub
in
out
and
aas
cltd
cmp
jae
nop
mov
in
mov
movsl
out
nop
loop
mov
cmp
hlt
out
adcl
cmpl
sbb
lahf
push
fwait
cli
adc
mov
into
jg
mov
mov
jnp
ja
stc
daa
fdivl
daa
xlat
sub
loope
jg
insb
popf
jge
addr16
leave
pause
inc
sub
mov
movsl
outsl
jno
ret
fadds
pop
rol
inc
xlat
lock
jbe
jp
xor
fidivl
add
mov
fisubrs
jo
int
ret
cs
xor
inc
dec
cmp
xor
out
adc
sbb
pop
push
int
mov
ds
out
dec
rclb
sub
iret
push
gs
fstp
je
xchg
sbb
enter
aad
add
stos
cmc
and
add
jo
adcl
lea
sbb
loopne
fcoms
sub
fld
fimull
and
add
loope
mov
jae
iret
cmp
push
or
and
outsb
gs
rcrb
push
push
jb
push
sbb
fcompp
ficomps
adc
xor
adc
push
dec
mov
pop
stc
js
fistps
repnz
cmp
bnd
filds
xchg
movsb
test
sbb
mov
jg
inc
sub
xor
xlat
fbstp
xchg
inc
add
jle
daa
popa
cli
mov
ret
int
rclb
inc
pop
shll
sub
mov
stc
flds
jg
pop
pop
aad
jmp
push
dec
mov
call
movb
ret
push
lods
pop
sbb
incl
cwtl
push
add
fs
dec
addr16
sbb
rorb
pusha
dec
call
cmp
dec
push
jg
addl
movsl
mov
mov
stos
xor
xchg
hlt
popa
sbb
adc
pop
mov
out
enter
std
push
imul
in
daa
mov
or
pop
mov
clc
xchg
mov
inc
sbb
add
xor
jecxz
enter
mov
orl
pop
xor
inc
nop
mov
jnp
or
repz
sti
mov
les
push
adc
push
inc
pop
mov
jl
paddsw
push
jg
adc
inc
loope
bound
outsb
cmp
xchg
loope
cmp
mov
movsl
data16
push
mov
shrl
adc
dec
adc
jge
mov
test
pop
lahf
pop
je
sub
inc
into
dec
xchg
cmp
loopne
mul
push
mov
or
mov
sarl
jge
popf
pop
xchg
adc
cmp
inc
xchg
pushf
int3
or
ljmp
test
sub
dec
jmp
daa
and
lret
and
addr16
xor
mov
fisttps
push
jmp
fadds
inc
sub
out
neg
and
jnp
sub
addb
fisttps
stc
push
push
sub
sub
adc
push
andps
sarl
sahf
adc
sbb
rep
mov
jp
xchg
push
and
or
or
xor
mov
das
inc
mov
lods
adc
or
xchg
scas
jb
lahf
cmpsl
nop
jl
call
lret
add
push
punpckldq
scas
or
or
repnz
push
loopne
adc
ja
cmc
cs
pushf
nop
mov
or
pop
inc
or
popf
in
mov
push
xadd
daa
pop
mov
jbe
in
dec
inc
and
addr16
cmp
fstpt
in
fnstsw
xchg
daa
into
call
nop
fdivrp
ret
mov
repnz
mov
jnp
fnstsw
pushf
adc
jno
push
sub
loope
mov
mov
test
inc
stos
jmp
or
cmp
pop
aaa
push
jl
push
decb
add
lahf
out
loopne
clc
dec
inc
sub
xor
bswap
shl
lcall
rcr
mov
adc
jo
insl
pop
sub
pop
add
sub
jp
shlb
fisttpll
mov
sbb
sbb
jg
xlat
inc
pop
xchg
xchg
mov
cmp
bound
fidivs
xchg
fdivrl
pop
or
addb
sub
xor
aam
loope
push
bnd
jl
xchg
cmp
clc
in
dec
mov
cwtl
fsubrl
add
xor
mov
pop
js
imul
arpl
ja
test
fsubrs
pop
ffree
xor
aad
mov
adc
mov
mov
iret
mov
or
fistps
adc
dec
pop
movsb
fstpl
sbb
int3
cmpsb
test
notb
aad
lods
inc
lret
jp
mov
add
mov
jg
lock
inc
mov
pop
imul
mov
cmpsb
mov
sbb
jge
mov
test
pop
popf
aad
mov
xor
mov
sahf
pop
sbb
cmp
test
jbe
xor
mov
add
cmp
out
movsb
xchg
out
inc
addr16
xor
outsb
in
inc
dec
test
xchg
sbb
sub
dec
int
pusha
mov
sbb
repnz
mov
inc
xchg
xor
push
cmp
dec
scas
mov
sub
lret
daa
pop
pop
dec
and
sub
xor
lock
rolb
sbb
nop
lods
rcrb
mov
or
or
mov
mov
insl
inc
sarb
dec
mov
rcl
pop
sbb
sub
scas
dec
adcl
dec
cmpsb
push
ljmp
outsb
push
data16
shl
xchg
add
arpl
aaa
mov
xchg
lock
or
sub
loope
aaa
stos
popf
mov
rcrl
enter
lock
fcoms
sarb
xor
mov
xor
movsl
or
ja
dec
bndldx
or
pop
sbb
jecxz
cmp
loopne
das
iret
mov
mov
fiaddl
lahf
dec
xchg
leave
xlat
xlat
fwait
mul
mov
loop
inc
push
pop
mov
popf
pop
push
push
jns
xchg
cmpsl
outsl
out
and
scas
addl
scas
lods
xchg
pop
xchg
inc
pop
push
mov
mov
adc
stos
or
lahf
inc
sbb
repnz
jbe
add
cmpsl
jecxz
rol
lret
jns
dec
lods
sub
sub
mov
dec
push
inc
leave
test
int
push
jmp
lret
fs
sarl
push
call
adc
rcll
rorb
xchg
dec
rolb
adc
sbb
loopne
das
stos
dec
or
out
jg
pop
mulb
or
jo
mov
dec
mov
test
cmpsb
dec
push
aad
xchg
pop
jle
and
ljmp
push
cmp
das
addl
movsb
cwtl
sub
inc
xor
inc
lret
xor
xor
cmpsl
lcall
push
mov
xlat
sbb
jg
fisubl
ds
dec
lock
aam
mov
sbb
sbb
ja
bound
out
dec
mov
ret
push
add
pop
clc
fistl
js
sahf
mov
push
cmp
scas
lret
imul
mov
test
push
out
push
in
cmpsb
xchg
pop
cmp
push
ljmp
fnstsw
and
es
scas
subb
and
push
dec
or
test
and
loopne
xor
inc
pop
outsl
xlat
loop
sbb
orb
dec
ss
jg
push
dec
lods
imul
ds
inc
adc
das
mov
fists
add
jae
cmp
rcrb
adc
adc
out
scas
in
inc
sti
xor
jnp
sbb
xorb
mov
xorl
movsb
mov
or
inc
xchg
xchg
out
cmp
pop
sbb
jo
sbb
dec
int3
jno
roll
mov
jae
in
xor
faddp
scas
repz
lret
mov
jge
ljmp
ljmp
push
shl
mov
imul
dec
add
imul
aad
movsb
cmp
sbb
or
insl
adc
xchg
mov
jbe
push
and
mov
mov
jge
adc
inc
scas
fisubl
repz
jmp
mov
js
xchg
scas
lds
cli
or
stos
js
outsl
inc
das
xchg
insb
or
ret
mov
popa
sub
std
out
leave
icebp
andl
mov
mov
mov
sub
dec
popf
fdiv
test
enter
std
add
lahf
ja
lret
adc
daa
stos
movsl
fdivs
push
push
cmp
cmp
push
in
add
and
sbb
push
es
shrl
cmp
pop
xchg
lock
mov
ret
mov
repnz
popf
fadds
pop
lds
or
dec
inc
cmpb
xchg
sarl
jl
mov
lret
insb
sti
test
push
into
and
pop
pop
xchg
pop
lods
xor
test
hlt
adc
in
mov
cli
call
jo
add
mov
ss
fnstcw
cwtl
mov
jno
int
loop
inc
rorb
mov
inc
imul
jge
movsl
mov
cmp
mov
dec
lods
lcall
add
andl
repz
aaa
dec
std
repnz
xchg
stc
clc
jp
jns
loopne
cmp
mov
pop
adc
cs
jmp
inc
ljmp
aad
adc
and
pop
imul
adc
xor
mov
jbe
test
clc
adc
dec
pop
out
adc
or
icebp
mov
mov
fs
xchg
cmpsl
sarb
es
cld
xchg
loope
jnp
cs
jo
lret
stc
gs
jp
shlb
das
shrb
call
add
push
test
or
iret
xlat
or
dec
mov
test
ret
mulb
sti
jl
push
subl
push
mov
push
cmp
xchg
dec
xchg
pop
das
mov
mov
mov
sarb
lds
mov
pop
jno
into
test
in
xchg
cmc
dec
scas
inc
jg
push
and
or
sub
mov
loop
gs
repz
xor
fsub
sti
pop
inc
out
cmp
mov
cs
and
fcoml
jle
mov
dec
imul
or
test
sub
fdivrl
sub
aad
xorb
sub
dec
jle
add
or
daa
sbb
xor
cltd
cmpsb
je
cmc
cmpsl
xchg
std
nop
inc
cli
test
or
inc
sbb
sbbb
add
fpatan
inc
cwtl
addr16
nop
mov
sbb
xchg
sub
mov
in
lret
addr16
ds
xor
bound
mov
lcall
xor
mov
in
daa
push
lcall
cmp
xchg
adc
sbb
iret
out
pop
jb
int
push
or
out
icebp
fdivs
add
jle
fisttpl
ret
cli
dec
add
and
or
xor
cmp
sub
outsb
pusha
iret
dec
syscall
sub
jbe
jmp
cs
inc
stc
jnp
jp
ss
or
adc
lods
imul
pop
ret
rcrb
sub
out
inc
jmp
sbb
mov
sbb
sbb
dec
add
imul
jecxz
adc
shlb
shll
cltd
mov
rorb
fcmovbe
mov
cs
repz
int3
xorb
mov
jns
and
mov
outsb
movsl
push
ds
outsl
call
movsb
cmp
movaps
orl
sbb
in
xor
mov
mov
pop
rolb
push
and
xor
pop
add
mov
dec
in
xor
jno
test
jl
stos
sbb
std
leave
and
mov
dec
test
xchg
push
mov
sub
or
jl
jmp
ret
out
adc
lahf
test
sbb
enter
pop
loop
orl
test
sub
movsl
inc
daa
test
mov
mov
fdivp
xor
cld
cmc
mov
sub
push
adc
sub
std
sbb
stos
sbb
push
adc
xchg
stos
xchg
push
xor
xorb
sub
xchg
ja
push
pop
sub
cltd
orl
cmp
or
dec
cs
cmpsb
push
cmpsb
je
adc
cmp
xchg
popa
das
jl
cwtl
inc
stos
xchg
rcrb
push
xlat
inc
int3
lds
and
stos
aam
insb
or
pusha
orb
icebp
pop
call
xchg
and
inc
aas
adc
aas
mov
sbb
xchg
xor
cltd
hlt
aaa
and
xchg
call
das
inc
test
icebp
into
fsubrs
imul
or
imul
push
sbb
sbbl
sbb
xor
clc
pop
aad
shr
inc
mov
loop
mov
and
mov
jmp
adc
push
mov
push
aam
cwtl
jmp
cld
lcall
mov
push
mov
cwtl
cmpsl
test
fwait
xor
sub
popf
repz
lret
xlat
dec
ret
push
les
fnstenv
outsb
push
loopne
cltd
mov
js
xchg
inc
aam
xchg
push
int
sub
dec
pop
sbb
rclb
pusha
test
hlt
out
pop
pop
sbb
and
cmpsl
xorb
std
cmp
push
push
jl
sub
icebp
push
pop
mov
pusha
dec
nop
pop
mov
jle
jmp
mov
negl
xchg
push
cmp
bound
dec
sti
pusha
mov
push
fldenv
cmp
sub
mov
lds
lret
inc
mov
test
mov
jp
inc
leave
arpl
pop
ret
popl
lret
scas
in
aam
popf
pop
stc
stos
cltd
clc
stc
mov
pop
jae
scas
push
lret
mov
push
data16
pop
ljmp
out
imul
lods
jae
das
mov
data16
scas
cmc
jmp
outsb
dec
sbb
sub
cmpsb
and
add
mov
pusha
jbe
push
outsb
mov
mov
jb
jle
rcrl
sub
addr16
sub
dec
xor
aam
stos
cmp
or
sbb
dec
pop
mov
movsb
cs
out
lods
cmpsb
pop
test
mov
cmp
leave
les
lahf
addb
mov
cmp
mov
loop
add
and
sbb
popf
xchg
pop
mov
rolb
mov
mov
data16
push
jecxz
fisttpl
in
inc
mov
das
les
ret
xorb
adcl
add
add
mov
push
xor
out
mov
mov
push
mov
jne
ds
scas
push
jae
mov
out
iret
sub
negl
imul
sbb
xchg
xchg
push
sub
jmp
repnz
mov
cld
and
rcrb
fisttps
into
adc
ds
scas
sub
sbb
negl
mov
paddsb
xchg
outsl
cmp
inc
outsl
mov
push
mov
scas
pushf
and
mov
mov
sub
pop
scas
cmp
fisttpll
imul
das
cld
inc
pop
push
dec
inc
xchg
mov
sub
mov
ret
out
loop
mov
mov
rolb
push
push
jmp
subl
xlat
or
divb
nop
pop
mov
cmp
cltd
or
cmp
sahf
xchg
pop
test
xor
push
cmc
aaa
jb
rclb
pop
stos
mov
sub
movsl
bound
pop
xchg
push
inc
sbb
shr
xor
push
jae
xchg
xor
pop
idivl
inc
sti
std
push
adc
mov
rclb
mov
sbb
pop
pop
into
sarb
xchg
in
cmc
inc
mov
lea
cmp
xchg
popf
mov
mov
sbb
addl
xlat
mov
xor
mov
xor
cs
pusha
add
sbb
in
out
loop
test
test
imul
xchg
adc
mull
cmp
adc
mov
jb
out
jo
sbb
sbb
pop
fidivrl
pop
in
outsb
mov
mov
or
mov
je
nop
mov
adc
add
insl
mul
add
xor
push
push
xor
test
cli
loope
ja
popf
bound
ss
dec
push
cmp
lret
push
fstps
shlb
stos
mov
add
cld
fbstp
pop
xlat
dec
jmp
aad
mov
cmp
mov
loope
icebp
cwtl
repnz
sarl
add
clc
inc
xchg
inc
sub
cmp
icebp
pop
sahf
enter
pop
pop
in
repnz
daa
jae
pusha
cmpsl
sub
dec
dec
jle
pop
inc
pop
cmp
ficompl
mov
orb
int3
jg
ficoms
xchg
es
in
int3
orl
repz
jge
xor
and
mov
jg
ret
cmp
xlat
pop
psubb
rol
lods
add
cli
fstpt
fwait
test
movsl
lahf
fcompl
pusha
fadd
jle
mov
dec
ret
std
in
and
daa
jns
fdivrs
fs
xchg
push
loope
adc
dec
xchg
test
ss
lea
xorb
cmp
sahf
xor
es
fcmovb
sub
hlt
sarl
sbb
mov
rcrl
imul
and
cmp
sub
mov
sbb
lret
lds
rorl
leave
std
cmp
repz
pop
xchg
and
xchg
mov
out
inc
cmp
lea
pop
imul
dec
nop
adcb
and
xlat
icebp
mov
out
dec
test
test
inc
push
rcr
gs
into
xchg
or
jle
ret
es
fsts
push
pop
ret
lds
mov
gs
fdivs
out
aad
cmpsb
pop
and
jne
xor
push
es
rcrl
lret
pop
xor
jns
jnp
loopne
dec
adc
addb
mov
frstor
mov
add
xor
jbe
adc
mov
scas
bound
cmp
fwait
sub
cmp
pop
cld
stos
lods
and
das
jo
test
lahf
push
aas
test
lret
popa
pusha
mov
mov
mov
mov
inc
aam
push
ss
out
or
jle
stc
push
mov
push
repnz
jbe
cmpsl
mov
lret
push
ljmp
dec
pop
dec
repz
push
rcrb
lret
shlb
pop
and
les
ds
scas
nop
sbb
pop
mov
ss
mov
fisubrs
cmp
push
test
fists
insl
daa
pop
mov
mov
push
in
sub
mov
cs
in
sbb
fdivrp
inc
out
dec
cmpsl
pop
pop
and
enter
sti
test
lea
or
lods
xchg
add
jo
cmpsl
rcrb
mov
push
jae
pushf
arpl
jp
pop
add
or
ror
cmpb
adcb
jne
lahf
iret
xchg
add
in
adc
mov
pop
ret
aam
sbb
insl
xor
push
push
jnp
nop
out
mov
pop
ret
in
in
fucom
inc
je
dec
push
xchg
cmp
fmul
xchg
inc
enter
adc
mov
xchg
push
and
mov
roll
insb
xor
jecxz
cmp
test
out
xchg
add
jge
cmp
fcomps
mov
pop
push
xchg
and
cmp
int
ds
cmp
addr16
xlat
lcall
movsb
fcmovnb
test
aaa
scas
stc
inc
push
addr16
rcrl
popf
fcmove
ret
adc
das
pop
rcrl
out
imul
mov
popf
movsl
dec
je
dec
push
aad
xchg
pop
sub
push
pop
xorl
popf
adc
arpl
cltd
mov
jnp
shll
popf
sbb
iret
jg
cmp
leave
enter
mov
dec
iret
mov
gs
inc
add
and
inc
jno
rorb
xor
jmp
cmp
cmp
cmpsb
inc
out
into
sahf
rol
icebp
iret
rorl
lret
mov
rolb
jbe
mov
lock
mov
mov
jl
ss
cmc
pop
mov
out
daa
rclb
jbe
add
test
sub
test
js
sbb
jge
mov
pop
xchg
xor
xchg
and
out
xor
call
or
jne
stc
icebp
dec
mov
mov
inc
mov
ret
pop
sub
insl
out
in
clc
push
faddl
adc
sub
jne
repnz
push
mov
adc
addr16
push
lods
mov
sahf
jmp
in
fsubs
jl
xor
shlb
icebp
mov
or
addr16
add
sar
aam
dec
cltd
mov
or
in
pushf
xchg
mov
mov
rcll
mov
pushf
ss
mov
or
cmp
pusha
xchg
bsr
lret
xchg
sub
xchg
dec
add
imul
push
sub
mov
add
sub
sahf
mov
jmp
test
pop
fstpl
pop
lcall
cld
dec
subl
jno
movl
xchg
pop
repnz
dec
inc
jo
sub
push
jnp
mov
xor
add
xor
test
pop
and
mov
xchg
xchg
repz
push
cmp
movsb
and
pop
sub
dec
cmpsl
stos
push
jno
push
mov
fstpl
inc
lret
add
lods
mov
mov
cmp
pop
std
pusha
out
push
add
mov
aam
cmp
out
xchg
mov
stc
xchg
push
in
cmp
cmp
xor
clc
scas
jne
sub
mov
mov
out
cmpsl
pop
insl
mov
sarb
jp
gs
cmp
adc
xchg
pop
dec
and
fdivrl
dec
bound
mov
inc
inc
jns
xor
dec
nop
ss
ja
data16
jl
addr16
fidivl
mov
mov
xchg
and
mov
pop
pop
mov
jp
jno
xchg
sub
les
dec
mov
jp
out
dec
out
jge
sbb
sbb
lods
movsb
test
lea
mov
push
jns
jae
push
testb
mov
fs
in
sub
jg
push
xchg
int3
je
insl
jge
out
dec
je
push
clc
out
pop
fisttpll
popa
pop
pop
mov
loop
stos
jmp
movsl
sub
dec
push
jcxz
rorl
mov
stos
pop
push
in
jno
adc
rorb
lea
or
movsb
loop
inc
cwtl
xor
add
loop
push
push
and
daa
scas
sub
or
adc
jge
sub
inc
lcall
test
cmp
and
in
sbb
aam
sar
data16
mov
lret
lock
aas
pop
and
pop
out
test
jecxz
rorb
sub
push
lahf
xchg
dec
push
das
insb
dec
jno
bound
arpl
cwtl
je
adc
adc
lods
divps
outsl
ret
push
add
jp
in
xchg
sub
xchg
imul
mov
sbb
xchg
pop
and
out
adc
ljmp
ja
fnsave
arpl
or
insb
std
dec
mov
jns
cmp
cmp
iret
mov
dec
xchg
cs
in
push
and
dec
test
in
nop
sbb
aam
adc
mov
pop
lret
or
jmp
adc
hlt
mov
aaa
push
orl
cmp
jno
stos
enter
cmpsl
bound
pop
jno
pop
stc
nop
add
sub
inc
inc
jae
ja
and
arpl
add
lret
pop
pop
and
or
inc
insb
pop
xchg
test
mov
stos
pop
aaa
or
nop
pop
not
cmp
xchg
negl
mov
aaa
sbb
add
ret
std
fcoms
outsb
inc
popa
mov
jb
loopne
jmp
xor
inc
mov
or
and
int
sbb
mov
dec
cmp
pop
insl
cmpb
jp
pop
dec
mov
mov
out
dec
dec
jmp
cltd
adc
xor
js
dec
int3
stos
sub
jp
dec
xchg
mov
xchg
push
hlt
rolb
fldcw
pop
or
jno
or
dec
insl
aad
fbld
stc
inc
aam
jle
in
cmpsb
dec
jo
jne
roll
stc
popf
out
in
mov
cmpsb
jmp
push
outsl
pop
jle
mov
arpl
popf
pusha
mov
inc
sbb
pusha
cmp
es
jae
insb
sbb
dec
pop
daa
mov
mov
adc
sub
jae
pop
icebp
test
ljmp
mov
icebp
imulb
outsl
or
test
cmc
sub
pop
ret
sub
bound
adc
sbb
xchg
add
cs
lret
lahf
jge
std
in
mov
lahf
enter
jecxz
pop
aam
adc
mov
bound
out
clc
add
insl
inc
pusha
pop
insl
lods
andb
push
cmp
cmpsl
xchg
sbb
movb
jg
call
clc
pop
pop
mov
ret
pop
sub
aaa
stos
fwait
test
out
imul
cmp
fmull
js
or
mov
ljmp
ret
sub
and
xchg
sbb
mov
pop
aad
es
rorb
inc
sub
dec
sub
xchg
xchg
lahf
or
push
sar
ljmp
pop
popf
cmp
push
scas
and
jb
sahf
outsl
cmc
icebp
gs
or
test
int3
mov
pushf
inc
jns
xor
fstpt
daa
mov
fmull
movb
cmp
pushf
adc
mov
push
shl
dec
jmp
btr
pusha
push
cltd
add
add
adc
in
gs
bound
and
xchg
jmp
adc
mov
out
insl
sub
inc
js
es
imul
test
push
push
into
mov
clc
test
push
cmp
gs
sub
call
xchg
xchg
clc
pusha
jns
pop
jl
mov
outsl
out
xchg
sub
xor
out
data16
xchg
cmp
test
movsb
int
mov
iret
pop
or
cmp
jnp
mov
push
adc
or
sub
push
mov
sti
leave
cltd
or
inc
sub
lock
xchg
inc
add
xor
mov
mov
mov
aad
cld
es
iret
mulb
sahf
xor
cmpsb
push
jge
inc
inc
lret
cwtl
cmp
pop
push
addl
pop
iret
test
jnp
or
in
push
aas
push
in
jle
comiss
pushf
jnp
data16
out
dec
test
out
flds
and
ds
call
sbbb
mov
xchg
dec
scas
mov
inc
daa
loop
sub
pop
ret
adc
sarb
pop
test
xchg
inc
lds
int
movsl
pop
and
inc
das
pop
xchg
xchg
rcr
lods
rorl
xchg
mov
stos
enter
mov
and
add
inc
cld
or
add
stos
pop
lea
loope
test
nop
ds
mov
push
pushf
movsl
push
lds
pop
aad
test
push
js
loopne
fdivl
jne
mov
loopne
and
jbe
outsl
push
xchg
fstpt
fwait
je
dec
scas
or
ja
bswap
pop
stc
xor
sub
cmp
adc
inc
cmp
sbb
push
or
stc
sahf
push
and
sbb
daa
sub
xchg
repnz
xor
outsb
test
cmpsl
sub
mov
jb
lods
mov
xchg
cmpsl
filds
inc
mov
scas
adc
hlt
data16
imull
cli
lds
inc
adc
mov
push
or
pop
fwait
aaa
jge
cmp
sub
xorb
xchg
out
dec
aad
add
das
gs
mov
outsb
pop
insl
push
test
dec
nop
imul
push
dec
pop
ret
xchg
mov
mov
aas
outsl
xchg
add
and
movsb
mov
inc
adc
sbb
inc
clc
test
push
fsubl
into
icebp
pop
int3
mov
jecxz
mov
aas
push
jl
jne
in
mov
lds
mov
mov
rcll
push
or
mov
pop
repz
test
cld
sbb
fs
mov
in
insb
mov
lds
sbbb
fdivrp
pusha
out
push
xchg
outsb
dec
jge
ja
gs
lds
pop
and
pop
cmp
add
mov
jne
enter
cmp
cmpsl
and
and
xchg
push
arpl
daa
hlt
jne
in
cwtl
sub
test
call
ja
mov
sbb
mov
out
fucompp
add
sbbb
pop
pusha
in
sbb
pop
xor
mov
test
push
pop
fcoms
jns
int3
ror
mov
add
jg
cmp
push
push
out
pop
xor
add
adc
mov
insl
xor
push
pushf
sub
mov
adc
and
xcrypt-ecb
cmpsl
push
lcall
cwtl
roll
leave
sbb
ss
push
lock
xchg
daa
xchg
inc
clc
leave
scas
icebp
lahf
mov
sub
aam
sub
pop
imul
adc
lods
loope
lea
movsl
or
lahf
xchg
xchg
mov
mov
out
jns
pop
repz
mov
enter
pushl
or
lods
and
pusha
repnz
jno
cmp
hlt
cld
dec
in
ja
rclb
inc
or
xchg
cmpsl
aam
jno
enter
sti
lcall
jecxz
stc
mov
pop
cli
add
xor
imul
insl
cltd
int3
lahf
push
fnstsw
dec
in
repnz
xlat
ljmp
adc
push
in
mov
scas
cmc
inc
dec
push
cmp
push
gs
add
inc
fcomip
or
sub
jnp
into
xchg
gs
popf
vmovaps
lea
jge
mov
sub
pop
mov
pop
xor
xchg
mov
in
popa
adc
inc
pop
pop
inc
adc
out
std
lods
push
sbb
push
rorl
jno
xchg
sbb
ret
pop
mov
xor
aas
lahf
imul
daa
inc
jmp
mov
dec
imul
pop
add
and
pop
enter
fsubs
insl
ja
or
test
cmp
xor
popf
add
xchg
pop
subb
adc
push
inc
sub
jl,pt
push
in
loope
sub
movsl
sti
push
dec
mov
jne
jge
lds
inc
jp
sub
mov
xchg
push
cmp
iret
lret
call
cmc
ds
repz
push
push
ljmp
pusha
shrl
cmpb
rcrb
mov
faddl
adc
adc
or
pop
outsl
rcl
fisubs
jbe
sbb
cli
int
push
xchg
mov
and
jg
add
bound
cwtl
subl
cltd
enter
in
mov
mov
gs
or
shll
pushf
inc
cltd
out
cmpsb
enter
jecxz
mov
mov
inc
rcll
aam
mov
xchg
lock
mov
jecxz
push
pop
call
das
push
arpl
mov
jo
ljmp
stos
mov
sub
sub
push
add
xlat
cmp
sahf
lock
adc
pop
pop
mov
fistpl
lahf
je
cmp
orb
cmc
dec
cmpsb
mov
lret
add
movsl
mov
cmp
push
addr16
inc
add
inc
cmp
and
inc
mov
out
loope
out
or
or
sbb
sbbl
decl
stos
or
or
sub
test
sbb
sbb
movsl
or
adcb
jmp
xchg
out
sub
adc
cmpsb
lds
xor
cld
mov
daa
bound
push
mov
xchg
ror
ja
popf
mov
xor
dec
sahf
xchg
inc
cs
adc
cld
clc
mov
lock
aam
ret
sahf
mov
push
jne
and
jno
push
add
int3
pop
mov
add
stc
stos
testl
inc
dec
icebp
rorl
fs
xchg
mov
push
ret
mov
add
jl
insl
sbb
or
dec
or
loopne
cmp
xor
movsl
cmpsb
in
insl
stc
aam
mov
stc
shll
ret
jl
test
ret
hlt
xchg
repnz
in
push
dec
mov
xchg
and
jns
movsb
fistpl
ljmp
sbb
into
xchg
jg
push
xchg
add
std
scas
inc
pop
lret
mov
cmp
sti
pop
adc
xor
mov
pop
leave
std
loop
mov
mov
jp
dec
dec
fisubl
lcall
jecxz
or
xor
inc
sub
xor
and
pop
push
data16
and
lods
mov
and
adc
jo
iret
mov
dec
js
push
xchg
ret
icebp
imul
out
mov
add
lea
jecxz
hlt
xchg
fwait
icebp
jnp
cmp
push
loopne
pop
dec
dec
sbb
in
mov
mov
loop
pop
pop
loope
mov
xchg
js
mov
jo
adc
inc
in
pop
imul
add
adc
movsl
lahf
jecxz
js
push
xchg
pop
mov
inc
xchg
popf
pop
lods
xchg
or
stos
mov
jnp
cmc
mov
daa
fcomi
les
mov
mov
xor
pop
or
fs
jo
mov
lahf
xor
rolb
cmp
pusha
cmc
imul
mov
dec
shrl
adc
pop
pop
or
xor
inc
std
repz
jge
add
movsb
lret
int
popf
mov
jbe
xchg
insl
jns
aaa
mov
movsb
int
es
mov
ficoms
and
push
ror
or
mov
xchg
test
int
in
jecxz
mov
popf
stc
out
mov
xor
add
jnp
stc
sbb
cmp
mov
fcmovne
push
out
in
out
mov
lsl
outsl
cmp
pusha
pop
sub
push
jbe
neg
pop
test
dec
out
shlb
addr16
sub
xor
lcall
jl
stos
ds
mov
inc
std
nop
pusha
test
roll
jns
xor
imul
ror
cmpsl
imul
push
mov
scas
aad
mov
nop
adcl
inc
ret
stos
cli
fimuls
mov
sbb
incl
mov
out
in
adc
pop
sar
in
push
pop
or
cmp
dec
fwait
out
nop
outsb
mov
cltd
mov
outsb
xchg
shlb
jg
es
inc
jne
nop
and
scas
popf
jns
push
mov
stos
cmpl
nop
out
lds
pop
fnstenv
test
sti
pop
outsb
sbb
mov
cld
out
ret
popa
dec
addr16
xor
cmp
mov
fcmovb
push
push
jl
call
pushf
adc
xchg
xchg
gs
push
cltd
xor
popf
ds
andl
aad
clc
xor
lods
pop
inc
shll
fcoml
loopne
fdivrs
sti
xchg
pop
test
fisttps
fimuls
fsts
dec
or
jne
mov
das
popf
xchg
lret
icebp
adc
daa
test
cmp
fistl
out
out
imul
sub
mov
pop
rclb
adc
in
mov
adc
xlat
jne
movsb
icebp
mov
flds
inc
movsl
mov
add
in
xor
jo
int3
loopne
sbb
push
dec
call
ja
or
cs
mov
xchg
test
inc
push
and
insl
add
mov
mov
lret
xchg
push
fwait
sbb
cltd
sti
orl
mov
das
jle
out
and
or
data16
xorb
and
and
leave
push
movsl
mov
mov
call
lods
mov
insl
int3
gs
dec
mov
jne
jp
cmp
and
jle
mov
jo
cld
in
lret
aam
or
mov
sub
fwait
gs
adc
xchg
loopne
dec
xlat
pusha
add
outsl
popf
sub
mov
mov
and
pop
in
xor
or
cmp
jo
insb
cmp
fildl
sbb
push
mov
dec
fsubr
jo
mov
sub
scas
jmp
movsb
aam
nop
push
and
jecxz
in
cmpsb
mov
mov
push
or
mov
fsub
in
cwtl
xchg
vxorps
lods
lods
mov
adc
mov
in
fiaddl
and
dec
stos
xor
fdivrs
mov
xchg
mov
ret
jbe
mov
fdivl
inc
pop
xchg
push
jnp
sbb
nop
push
push
or
mov
xchg
push
out
repz
lock
push
sti
adc
xchg
pop
cmp
test
and
mov
pop
add
pop
mov
inc
add
xchg
mov
ljmp
ljmp
xor
shrl
ds
mov
mov
push
cmpsb
adc
push
imul
scas
sub
pop
or
rcr
mov
cmp
aas
stos
ret
jbe
adc
xchg
inc
mov
mov
push
test
mov
stos
sti
cmp
nop
mov
dec
pop
xor
mov
cmp
in
scas
fmulp
push
rorb
mov
pop
push
mov
imul
divb
aaa
test
hlt
cmc
push
shl
ret
sub
ljmp
adc
push
test
enter
inc
xor
ss
xchg
xor
insl
mov
push
and
lcall
out
mov
ret
pop
or
mov
gs
cltd
add
loop
aam
add
std
jge
out
xor
fildl
mov
dec
dec
notl
mov
movb
jns
or
jae
notl
and
lods
lcall
nop
mov
jle
lahf
adcl
or
fdivl
hlt
inc
xchg
adc
insl
sbb
mov
cmp
aad
movsl
popa
mov
mov
data16
jg
mov
cmc
jnp
andb
and
push
sub
fsub
jnp
sub
sub
sub
inc
mov
dec
push
stc
aaa
and
push
inc
das
xchg
jmp
addl
sbb
stos
xchg
shll
ret
xchg
fcompl
nop
pop
inc
shlb
out
test
sub
out
test
push
ret
mov
mov
adc
subps
fisubs
rorl
shlb
lahf
jmp
push
or
scas
cltd
cs
mov
shlb
out
mov
into
jne
push
addr16
scas
clc
jge
loop
push
xchg
arpl
test
mov
or
xor
jo
insb
jo
or
sub
or
cs
clc
mov
cmc
in
das
mov
sbb
xchg
add
bound
into
dec
out
cmp
outsl
mov
xchg
pop
into
scas
inc
lahf
xorl
dec
mov
fs
add
les
das
flds
inc
dec
cmp
dec
xchg
shll
mov
ret
test
push
or
push
data16
pop
cmovbe
inc
add
rol
sti
add
and
ja
lea
mov
shr
jnp
cwtl
mov
insl
outsb
and
test
mov
nop
jns
dec
add
shl
sbb
sahf
test
xchg
aad
push
mov
jl
jl
push
sbb
xor
cmp
push
mov
mov
movsl
lahf
movsb
testb
fwait
jmp
push
ret
jge
and
dec
das
cli
lret
inc
dec
xor
lods
lods
cli
mov
and
cmp
cmc
mov
fistpll
add
testb
in
sub
adc
sahf
mov
fdivl
fisubrs
adc
jns
xchg
lods
cmpl
and
dec
ret
push
je
outsl
pop
outsb
xchg
jl
inc
pop
das
mov
xchg
mov
pop
jle
or
mov
loopne
aam
mulb
and
imul
mov
outsl
fstpl
jns
push
and
push
pop
js
mov
loope
aam
push
rolw
repnz
repz
jmp
mov
lret
mov
in
cmc
repz
ljmp
hlt
sub
movb
push
cmpsl
popa
mov
jb
aad
or
shll
addl
iret
mov
and
add
lret
cltd
outsb
push
inc
je
and
mov
mov
mov
in
out
cmp
adc
mov
mov
mov
push
rcrl
xor
add
mov
xchg
xchg
xor
inc
xor
in
and
xor
sahf
mov
stc
mov
push
cmpsb
adc
movsl
stos
in
iret
cltd
mov
jp
mov
mov
test
mov
or
cmp
xor
adc
movsl
call
xchg
aas
fdivl
test
loop
xor
dec
push
jmp
loop
fpatan
repnz
leave
ss
mov
mov
mov
fsubrs
loopne
lods
test
or
test
std
cmc
pushf
cwtl
mov
or
push
sub
add
or
js
mov
iret
ror
pop
aas
in
add
hlt
into
pop
stos
lcall
xchg
dec
jo
xlat
mov
mov
xor
push
add
sahf
sbb
lcall
fistpll
mov
pop
sub
push
scas
pop
add
imul
and
cmc
shrb
add
insb
xchg
shl
cld
sub
xchg
ret
stc
fbld
push
fstps
sub
es
int3
arpl
push
and
lods
loopne
xor
frstor
movsl
pcmpeqw
inc
jg
mov
cmp
test
push
or
cmpsl
adc
mov
pop
sarl
loope
aaa
lods
loopne
xchg
sti
mov
dec
push
int3
mov
in
xchg
stos
out
iret
mov
push
imul
inc
outsl
pop
iret
add
pop
imul
adcl
movsb
divl
aam
push
mov
adc
or
adc
mov
notb
sub
and
in
xchg
jae
mov
insl
jns
cs
add
shl
xchg
jle
bound
pop
lret
lcall
repz
jl
outsl
push
mov
loope
jp
cld
and
adc
dec
daa
push
push
push
xchg
push
sbb
mov
xchg
int
and
mov
popf
pop
aad
sbb
sbb
test
test
lcall
mov
sub
lea
cmpsl
aas
fisubl
das
data16
stos
cli
dec
mov
xor
imul
pop
mov
out
lods
in
arpl
mov
sub
cli
cmp
mov
repz
mov
jl
mov
mov
cmpsl
xor
adc
scas
mov
xlat
push
in
sub
pop
dec
mov
jb
shll
push
mov
repz
and
sub
push
jle
adc
dec
imul
test
add
addr16
out
mov
mov
sbb
int3
push
ljmp
sbb
sub
dec
xchg
push
jo
push
aaa
mov
arpl
or
inc
mov
lea
lock
push
mov
mov
cld
jb
push
push
fidivs
mov
xor
inc
and
ja
cli
add
loope
hlt
mov
jno
lods
decb
ss
dec
aaa
dec
push
adc
loopne
test
ds
icebp
pop
out
mov
out
scas
sbb
int3
lea
lret
adc
ret
sti
aad
push
scas
inc
call
orl
outsb
repnz
mov
push
leave
loop
adc
mov
and
xor
xor
jg
jecxz
and
push
mov
mov
adc
xor
nop
add
jo
rcr
daa
ret
adc
clc
sub
mov
push
push
push
sub
in
jg
fs
mov
cmp
stc
jnp
lea
sbb
jp
ficompl
andl
loope
push
pusha
add
movsl
sub
movsl
xchg
inc
sub
outsl
and
push
inc
xchg
jne
hlt
inc
fdiv
movsl
or
sub
push
imul
pop
fs
ds
imul
ds
mov
pusha
mov
mov
or
and
mov
mov
xchg
bound
pop
test
push
xor
xor
or
scas
call
xchg
or
movsl
lret
sbb
xor
push
orb
pusha
ja
lods
test
loope
mov
stos
sbb
sti
mov
mov
pop
sub
ficomps
test
pop
or
out
enter
push
imul
fistpll
sbb
mov
push
fdivs
inc
ja
loop
sbb
cmp
sbb
jle
adc
stos
fs
pop
xchg
and
addr16
rcll
lahf
adc
jbe
int
je
push
cli
mov
push
shlb
mov
data16
xchg
mov
add
mov
dec
mov
sub
addr16
pop
nop
insb
clc
in
add
adc
insl
icebp
adc
jnp
push
dec
mov
out
cmpsl
mov
sti
pop
addl
cmp
mov
jno,pn
or
stos
int3
into
clc
ret
inc
mov
mov
xchg
xlat
pushf
pushf
xchg
fdivs
add
mov
loope
mov
inc
in
and
in
clc
push
imul
clc
mov
cmp
test
sarl
jo
add
mov
leave
mov
out
cli
lea
dec
cmp
aaa
cs
inc
and
neg
sbb
cmp
xor
lea
push
jnp
mov
pop
push
push
cmp
mov
cli
mov
stos
insl
or
fsubrs
outsb
rcll
stc
fcmovnb
icebp
jnp
ss
popaw
outsl
je
clc
test
stos
insl
js
into
mov
inc
sbb
dec
aad
mov
inc
jno
rol
lcall
pop
xor
subb
pop
cmp
pop
mov
lds
dec
movsb
cs
pop
nop
inc
mov
pop
sbb
mov
dec
addr16
movsb
xchg
add
inc
shl
dec
dec
push
fsubs
sub
xor
lcall
and
aaa
mov
xor
jne
es
mov
push
pop
hlt
cmp
cmp
jnp
insb
decb
aad
stos
jge
add
sbb
xchg
adc
movsl
stos
aam
add
insl
fmull
push
add
out
sbb
or
xchg
adc
and
mov
jp
push
dec
out
hlt
cmpsl
bnd
lods
ret
ret
jmp
rclb
mov
in
or
lcall
cmp
insl
gs
mov
cli
lods
fistpl
push
mov
aas
bound
mov
ss
pop
dec
sbbl
popa
lods
push
pop
iret
int
or
dec
cmp
xchg
fs
in
fwait
inc
cmp
inc
pop
clc
mov
in
int3
repz
push
aam
push
movsl
lret
mov
jl
mov
test
adc
rorl
adc
jne
outsb
add
fsubs
rcll
loope
dec
jmp
jmp
mov
insb
adc
jno
push
add
aas
ljmp
mov
sub
xor
sub
pop
mov
call
jmp
sub
in
add
inc
add
mov
stos
xor
lea
xchg
mov
out
cmp
mov
cmp
xchg
repz
sbb
xor
dec
fdivrl
push
dec
in
inc
les
aas
mov
push
xchg
mov
add
fwait
cmpsb
lock
in
movsb
cmp
arpl
sarl
sub
pusha
jecxz
cmp
pop
sbbb
nop
cli
insl
jl
pop
scas
pop
xor
pushf
imul
pop
jle
sub
cmpsl
loope
out
out
cmp
add
test
mov
cmp
sbb
jl
cmp
xchg
daa
xchg
mov
cltd
sbbb
pop
cmpsb
in
pop
js
and
dec
xor
sahf
int3
xchg
aaa
pop
xor
std
std
add
mov
ljmp
movhlps
inc
outsl
mov
mov
mov
adc
push
fs
hlt
mov
xor
and
in
dec
pop
push
add
mov
test
adc
xchg
inc
data16
pop
sub
xor
xchg
push
out
mov
lea
cvtps2pd
xor
das
mov
lret
insl
mov
ja
jae
pusha
cli
adc
imul
shl
mov
fdivr
sbb
gs
jmp
cmp
aas
dec
pop
pop
scas
push
mov
push
push
shl
rcrb
stc
aas
pop
mov
enter
and
cwtd
add
ret
xchg
bound
adc
push
xchg
data16
icebp
out
out
ret
xchg
pushf
shll
and
xchg
jle
jge
push
cmp
adc
jns
into
enter
sbbl
shll
mov
rcrb
hlt
mov
insl
mov
xor
cmp
pop
push
jge
pop
addl
jne
out
mov
insb
jg
loop
inc
inc
pop
aad
dec
xlat
sbb
iret
shll
rolb
cwtl
sub
mov
add
stos
and
sti
dec
jae
lea
mov
loopne
daa
mov
jno
lods
sbb
ret
or
cmpsb
mov
jmp
inc
pop
out
push
jl
add
jns
jge
scas
fcoms
push
fldl
mov
pop
push
dec
mov
insb
inc
iret
add
xchg
lcall
jae
fldl
sahf
or
icebp
arpl
dec
fsubrp
stc
adc
enter
mov
repnz
adc
iret
notb
flds
mov
add
xor
bound
or
in
push
lret
adc
int
sbb
aas
sbb
mov
inc
out
aas
lret
or
pop
xor
mov
mov
sahf
in
add
cmp
aad
rorb
cmp
or
orb
push
xchg
add
jmp
pop
ret
in
or
movsb
scas
stc
jnp
neg
mov
aaa
xchg
scas
call
movsb
xor
mov
scas
pop
or
fs
popf
enter
enter
and
mov
sbb
mov
insb
stos
idivb
pushw
mov
pop
or
orb
xor
aam
clc
out
std
shll
inc
or
mov
popa
inc
push
dec
xor
mov
clc
ss
pop
sub
cmpb
add
imul
out
ss
jecxz
fnstcw
xchg
scas
inc
aad
cwtl
adc
std
cmp
sbb
xor
adc
imul
into
mov
and
call
or
fcompl
and
dec
fisttps
pusha
sub
int3
sub
clc
push
mov
dec
jecxz
cmp
stos
test
sbb
pop
push
pop
xchg
in
popa
jle
fbstp
ret
adc
mov
inc
ds
add
lods
add
lcall
insl
or
xchg
xor
stos
aaa
and
pop
pop
jg
test
in
add
testb
test
dec
or
ss
add
pop
insl
or
lahf
dec
add
leave
mov
pop
cld
movsb
stos
out
adc
inc
cmp
cs
rorb
int3
int3
sbb
add
mov
orb
mov
mov
stos
insb
mov
repnz
inc
mov
pop
cli
push
push
inc
dec
lcall
stc
pop
shll
data16
xadd
imul
or
enter
xchg
xor
testl
pop
mov
and
xchg
mov
xchg
add
lods
mov
and
add
ljmp
sub
stc
mov
push
jno
adc
and
or
loop
cmp
scas
sub
jo
out
inc
xchg
test
cltd
mov
cmpb
roll
stos
jb
lret
cmp
xor
stos
test
pop
in
adc
mov
push
stc
pop
pushf
aaa
sub
sub
lock
stc
popf
daa
fmulp
mov
dec
std
push
sub
pop
shlb
testb
mov
xchg
inc
lea
rorl
pop
and
data16
xor
add
stos
imul
mov
xlat
mov
out
cmp
dec
cmp
xchg
fnsave
jge
xor
fimuls
icebp
adc
or
fisttpll
dec
mov
cmp
pop
jb
mov
hlt
xor
xor
pop
inc
leave
and
ds
mov
out
cmp
stc
popa
data16
divb
dec
inc
inc
in
xor
sbb
notb
movsl
push
fwait
dec
fwait
mov
lods
xor
out
xlat
pop
jmp
and
icebp
mov
or
xchg
mov
jg
mov
mov
lahf
lds
sbb
push
gs
js,pt
sub
mov
fisubrl
ljmp
inc
adc
imul
out
jl
daa
repz
inc
mov
mov
ds
push
xchg
fwait
lds
fdivrs
lcall
mov
dec
cmpsl
enter
call
cli
add
movsl
fisubrl
fbld
pusha
push
shlb
jg
daa
adc
sahf
out
scas
mov
push
cs
dec
jnp
loopne
xchg
loop
pop
adc
adc
insl
mov
fistpll
xchg
jecxz
and
pop
sbb
pushf
pop
insl
fisubrl
call
pop
pushf
inc
js
jl
subb
fs
cli
insb
lcall
sahf
push
in
jnp
loop
call
aad
pop
shlb
cmp
pop
scas
testl
cmp
lahf
mov
int3
dec
jp
pop
and
sub
sbb
mov
cltd
or
cmpsb
loop
out
xor
movsl
fldl
mov
repnz
add
xchg
lcall
idivb
xor
mov
adc
pop
cmpl
mov
mov
nop
lahf
push
loop
adc
addl
shl
fucomp
call
cli
adcl
scas
mov
mov
push
mov
inc
push
adc
mov
es
cmp
and
lret
fdiv
sbb
lret
sti
adc
bound
inc
jle
adc
lods
xchg
test
mov
cmpb
lods
mov
mov
popf
sub
popa
enter
ja
xor
fiaddl
in
pause
aaa
insl
mov
lds
cwtl
es
aas
fwait
notl
enter
out
push
dec
movsl
xchg
test
mov
xchg
les
fwait
cmp
xchg
outsb
adc
idivl
imul
mov
loop
ret
lods
xchg
daa
mov
in
lcall
repz
out
push
xor
ret
arpl
add
sarb
add
add
mov
cmp
adcb
movsl
mov
mov
scas
gs
pusha
fdivrs
aaa
bswap
lds
mov
gs
test
enter
adcb
xchg
mov
inc
aam
ljmp
out
aam
insl
xlat
movaps
xchg
adc
movsl
sbb
xchg
pushf
cmp
pop
ljmp
inc
or
jp
mov
outsl
aad
in
cmpb
sahf
sarb
shlb
and
lock
data16
xchg
mov
push
push
cmpb
inc
bound
and
icebp
or
mov
das
add
sbb
fstl
jg
lahf
jge
push
push
cmp
sub
mov
xchg
mov
inc
or
and
int3
ds
add
inc
push
lods
cmp
into
pop
push
insb
mov
mov
iret
test
clc
push
pop
bound
or
add
jb
push
enter
cmc
sub
pop
in
cmp
bound
xor
or
jo
loope
mov
jns
les
sbb
push
int
fildll
jecxz
mov
inc
imul
hlt
mov
dec
loope
mov
inc
cmpsl
dec
popf
in
add
add
lahf
repnz
dec
cmp
jg
jnp
loop
and
es
mov
stos
rcrl
out
pop
aaa
xchg
dec
aam
movb
fldl
ljmp
lods
add
out
inc
inc
test
xlat
test
xlat
or
xor
adc
push
jle
mov
xchg
popf
xchg
fs
or
sub
test
dec
into
xlat
add
lret
lcall
std
cwtl
or
popa
push
and
and
mov
jnp
inc
das
pop
mov
xor
cs
xor
shrb
jl
in
pop
mov
mov
xor
sub
sbb
and
insb
imul
mov
scas
inc
ds
push
enter
pop
pusha
rcll
mov
leave
daa
mov
xchg
cmp
mov
jp
icebp
xor
call
push
pop
pop
jl
in
dec
xchg
hlt
and
xor
mov
xchg
shl
dec
inc
flds
js
cli
into
mov
push
cmpsl
inc
xchg
lcall
lock
jne
add
jl
nop
sub
push
data16
mov
push
jle
xchg
addr16
add
mul
push
mov
test
insl
cmp
lcall
xlat
mov
push
push
xor
iret
adc
sahf
neg
mov
dec
mov
or
stc
sub
mov
inc
mov
mov
daa
movsl
mov
outsb
xchg
fsubs
push
or
hlt
lock
jge
repnz
jns
and
sub
enter
loopne
xchg
pop
adc
out
inc
pop
fwait
call
packssdw
push
fs
jmp
jbe
pop
hlt
sbb
data16
cwtl
jle
jmp
rolb
loop
inc
xchg
inc
loope
pop
dec
mov
cld
imul
in
jb
jle
xor
nop
xor
or
in
push
cltd
mov
in
insb
sub
adc
gs
movups
lea
dec
mov
push
nop
mov
call
xlat
jb
pop
insb
push
dec
pop
mov
test
jo
scas
mov
adc
ja
movsb
rcll
repz
mov
dec
outsl
je
mov
jnp
xchg
mov
lret
aas
pop
pop
and
mov
cli
fstpt
push
stos
into
lahf
sub
xchg
cli
out
fmuls
mov
mov
mov
cli
xorl
js
adc
int
fistl
loope
mov
in
test
mov
scas
cltd
insl
js
sub
mov
arpl
bound
mov
sub
insb
push
enter
notb
nop
adc
xchg
fmul
xchg
ret
mov
sub
mov
popf
in
sbb
inc
jg
lahf
mov
mov
imul
mov
subps
clc
xchg
pop
movsl
jae
or
push
arpl
hlt
mov
dec
int
je
lods
push
daa
pushf
mov
xor
aad
test
lret
dec
enter
test
cmpsl
divl
cmpb
mov
pop
bound
lock
mov
dec
add
add
cltd
sbb
sahf
push
add
in
ja
cltd
sbbl
outsb
arpl
jg
outsb
jbe
fstpt
imul
mov
insb
xchg
sbb
sarl
sub
pop
movsb
loop
xor
dec
mov
ret
and
xor
loop
mov
sub
jmp
mov
mov
sub
pop
push
leave
add
or
mov
enter
pushf
aas
dec
xor
mov
mov
fstpl
jg
inc
popf
mov
scas
fidivrl
xchg
movsb
fldt
cld
jmp
movsl
sbb
mov
push
pop
sub
jmp
jp
cmp
pop
cmp
es
jo
jae
pop
out
fldl2t
dec
cmpsb
cmp
bound
test
adc
jle
sbb
in
bound
addl
pop
xchg
cmp
push
jo
testl
cmpsb
repnz
sarb
lcall
ss
sbb
shll
inc
into
cmpsl
inc
jmp
call
mov
sbb
out
in
mov
adc
sub
and
and
jnp
ud1
push
mov
and
pushf
mov
lret
xchg
dec
das
push
cmp
fimull
fsubs
sub
sahf
lods
jmp
adc
sbb
fcmovne
fcoml
mov
pop
mov
adc
gs
mov
cmp
add
and
es
gs
test
dec
test
mov
push
sub
rclb
or
bnd
xor
adc
and
add
fldcw
mov
std
or
les
mov
push
call
cmp
iret
push
movsl
pop
adc
inc
int3
test
arpl
loop
popa
jle
stos
popa
jb
pop
mov
inc
in
jp
mov
inc
ja
pop
xorl
jo
xor
or
mov
push
lds
sahf
sub
jno
out
movsb
imulb
or
and
flds
icebp
idivb
pop
cmp
bnd
lock
mov
scas
orb
shr
mov
adc
mov
inc
movsl
cmpsl
cltd
pop
add
ror
and
fs
xchg
add
inc
push
xchg
out
data16
cmp
in
jp
pop
ds
push
roll
and
lcall
fstpt
mov
out
ja
push
push
test
or
mov
jne
in
js
adc
xchg
aaa
imul
loop
leave
cmp
sbb
or
cmc
test
jnp
out
push
ja
neg
enter
and
bt
fldl
add
mov
xchg
add
xchg
shl
push
es
xchg
mov
or
loopne
push
jge
adc
lods
ljmp
cwtl
aam
jne
pop
sbb
push
and
fisubl
pop
stos
lea
fxch
pop
and
leave
pop
add
pushf
imull
push
jbe
push
fs
cltd
fldt
out
adc
pop
ret
push
sbb
sbb
mov
cmp
adc
push
dec
xchg
cmp
inc
push
mov
ja
xlat
iret
nop
push
pop
ds
nop
idivb
outsb
push
dec
std
fwait
or
loopne
xchg
mov
push
push
sbb
mov
lods
or
add
push
cmp
sbb
mov
out
dec
ds
add
mov
in
push
or
mov
lock
push
sub
jmp
sub
cmp
dec
mov
inc
push
hlt
jmp
xor
mov
inc
pop
aaa
andl
icebp
dec
sbb
mov
xchg
cs
loope
mov
fwait
pop
adc
in
xor
dec
data16
jge
fiadds
mov
jne
icebp
jne
cmp
push
fcomps
mov
loope
pusha
enter
out
pusha
popa
sub
ljmp
push
jo
int3
loopne
movsb
sbb
or
or
and
aaa
inc
jmp
mov
lods
lock
loope
mov
sbbl
cmp
mov
ds
xchg
dec
and
push
mov
outsb
sub
xchg
jae
orl
scas
inc
out
popl
push
lock
push
cvtpi2ps
insb
in
xor
xor
jmp
test
fwait
jns
pop
ret
sub
in
push
andb
test
xchg
mov
and
add
ja
scas
xor
mov
pop
adc
ret
sub
jnp
cli
or
xchg
lcall
mov
iret
into
scas
jmp
icebp
lret
jno
rolb
mov
mov
mov
popa
cmc
push
iret
xchg
inc
mov
imul
sbbb
std
ja
push
imul
mov
jge
mov
xchg
insl
lods
cmp
dec
and
adc
addr16
jmp
pop
mov
xor
bound
mov
mov
imul
xchg
push
fstps
movsl
cmp
and
fs
add
add
das
dec
add
inc
mov
xor
iret
sbbb
jo
fidivrs
pop
out
faddl
pop
jo
aas
stos
loope
jbe
int
movsl
fldcw
fdivp
fistl
jmp
in
imul
jne
lods
sub
add
jle
sbb
mov
icebp
xor
jge
nop
iret
adc
push
or
dec
jns
add
aam
jbe,pn
push
loop
dec
push
aaa
and
or
mov
rorl
and
out
test
jl
mov
in
push
add
xchg
sbb
sbb
imul
or
cmpsb
call
jl
pop
mov
imul
rcrb
pop
ljmp
mov
out
sbb
ds
and
mov
mov
mov
sarb
iret
fnsave
insb
mov
jp
gs
mov
mov
push
ds
xchg
sub
dec
sti
sub
or
in
sub
lds
sti
inc
out
inc
push
sbb
negb
or
sub
bound
fidivrl
cmp
mov
cltd
imul
icebp
push
clc
or
das
xor
out
sub
pop
adc
mov
popa
rcll
pushl
sbb
xor
dec
lcall
pop
data16
xchg
aas
xchg
js
ficoms
inc
fistps
cmc
mov
xchg
cmpsl
push
call
and
and
or
iret
dec
lahf
mov
out
clc
rorl
shrl
and
aas
in
and
ficoms
mov
sbb
adc
sbb
insb
cmpsb
ret
fists
cld
jp
in
adc
lret
push
mov
fnstsw
ljmp
mov
fwait
push
sbb
sub
inc
aaa
xor
sarl
dec
leave
xchg
nop
inc
jmp
pop
jnp
lods
mov
int3
fcmove
mov
dec
mov
push
call
andl
cmp
mov
cmp
inc
shr
jnp
xor
xchg
push
cli
add
insl
loope
fsub
testl
cwtl
jbe
lea
sub
ss
adc
insl
inc
test
imul
ss
lret
pop
repnz
push
lods
out
pop
push
sbb
cmpl
insl
and
ret
dec
ljmp
dec
fs
add
out
or
add
insl
jo
orps
mov
mov
xchg
push
outsl
cmc
lahf
std
xchg
pop
fstl
call
mov
clc
push
sub
or
fcoms
loopne
xlat
sarl
xchg
cli
mov
stos
adc
dec
test
adc
shlb
mov
push
movsb
sbb
or
insb
call
push
mov
fildll
sbb
dec
cmp
jo
and
adc
jno
cmp
fs
int
mov
sbb
pop
mov
xor
pop
imul
push
outsb
mov
jge
sbb
sub
inc
pushf
xor
cmp
add
sub
mov
cld
lds
sub
push
mov
int
mov
ja
add
repz
cmp
jmp
cmp
sti
in
std
add
lods
xchg
loope
scas
jp
push
cmp
add
xchg
push
fidivs
inc
sub
sub
add
flds
sarb
xor
popa
fstl
pop
cmp
cmp
popf
jl
mov
mov
int3
loope
xor
pop
xor
mov
push
pusha
lea
mov
mov
dec
pop
xchg
ss
fsubrl
lea
pop
xchg
xchg
scas
and
xchg
push
sbb
sub
xchg
jmp
mov
test
mov
add
xchg
or
pop
xor
rol
pop
lret
rcrl
jmp
push
mov
pusha
and
pop
xlat
lret
loope
inc
jae
loope
jns
adc
adcb
inc
fdivs
xor
jnp
out
movsb
mov
push
jge
inc
int3
fisubrl
mov
pushf
xchg
and
movsb
testl
jns
mov
in
pop
dec
rorb
enter
scas
nop
jno
inc
arpl
int3
cmp
ss
mov
clc
loopne
mov
test
inc
mov
in
in
xchg
addr16
hlt
and
mov
clc
lds
dec
adc
ja
insl
in
sub
js
jbe
sub
cmp
mov
pop
lods
adc
push
inc
xor
arpl
jl
cmp
pushf
sbb
inc
mov
jae
ds
cmpsl
iret
lret
and
loopne
daa
sbb
pop
mov
push
ficoms
out
and
clc
mov
fistps
test
mov
cmpsl
add
mov
inc
in
enter
fbld
es
push
and
insb
lea
xor
and
ret
and
ret
and
testl
test
dec
mov
or
sbb
xor
xor
incl
ret
imul
jbe
into
popf
rol
sbb
out
pop
in
rcrb
sahf
mov
and
ss
std
add
mov
xchg
push
push
bound
jnp
cmp
xor
mov
fcmovnb
mov
test
es
lods
sti
je
test
cmp
jo
fistps
lcall
dec
sbb
jmp
cmpsb
je
insl
loope
add
jns
sahf
jge
subl
xor
xchg
shl
inc
xor
aas
push
pop
add
add
or
pop
cld
mov
movsl
mov
fiadds
or
outsb
or
les
inc
dec
call
jno
icebp
sti
jl
sub
and
xor
cwtl
push
stos
push
jge
pop
test
jbe
arpl
shll
and
push
adc
cmp
mov
stc
xchg
adc
adc
cmp
out
lods
jbe
mov
and
mov
and
mov
mov
mov
lret
or
adc
mov
leave
aad
cld
xchg
mov
in
pop
in
dec
icebp
xchg
cmpsb
sub
fucom
sub
xchg
jnp
pop
lea
testb
or
int3
jns
cld
or
aas
mov
pop
cmpsb
cltd
add
movups
pusha
or
push
sub
sub
mov
mov
stc
add
clc
cld
iret
movb
dec
xchg
push
aad
adc
rcrl
lret
sub
and
fbld
movsb
movsb
sbb
fildl
cwtl
or
mov
push
loopne
sbb
pop
jmp
add
pop
jno
cmp
push
sahf
ja
sub
cwtl
push
cld
mov
xlat
lret
ficoml
and
adc
push
pop
loope
in
cmp
push
movsb
push
sub
fwait
ljmp
mov
push
cmp
mov
sub
and
popfw
xchg
push
xor
lcall
cltd
dec
in
popf
mov
popf
arpl
mov
xchg
cmp
add
mov
in
xor
jne
loope
push
imul
mov
ret
adc
aam
jecxz
push
sbb
cltd
sqrtps
jne
int3
xchg
mov
inc
xchg
stos
mov
lret
roll
in
nop
stc
jb
pop
loopne
push
or
mov
aam
and
dec
pop
pop
pop
inc
xor
loope
jp
mov
cmpsl
sub
push
sahf
mov
stos
scas
pop
aad
lret
scas
mov
shll
addr16
outsb
cmp
jno
pop
mov
imul
mov
lds
cld
or
lods
stc
stc
fwait
jmp
push
inc
jg
jle
cwtl
and
lahf
sub
dec
stos
cmp
push
pop
mov
jns
enter
int
mov
clc
lock
repnz
cmp
out
or
pop
mov
rol
sub
imul
testl
sub
movsl
test
int
mov
jo
out
in
jp
and
cmp
sbb
outsb
jp
push
cld
push
adc
dec
fistpl
cs
cmpsl
cmpsl
stos
pop
push
mov
out
cmp
sub
add
xchg
lret
cmp
fisubs
or
aad
jns
xorl
out
xor
int
scas
pop
sub
and
dec
in
jne
dec
xchg
shlb
insb
mov
pop
xor
push
shlb
out
outsl
mov
or
push
or
arpl
xor
lar
jbe
push
fdivrl
lcall
test
mov
ret
jne
dec
push
mov
stos
push
sbb
leave
dec
stos
aam
jge
loopne
insb
sub
pop
dec
adc
and
lods
sub
mov
std
aad
hlt
cmp
xor
push
mov
test
jg
pop
and
mov
mov
and
clc
lods
xchg
jmp
scas
mov
dec
xor
jecxz
cmp
loopne
fdivrp
xchg
mov
div
xor
fstpl
cwtl
stc
xchg
clc
dec
lahf
dec
xlat
int3
out
mov
sbb
mov
mov
repnz
fwait
rolb
out
adc
add
fstp
mov
lods
fcoml
les
push
xchg
inc
out
jnp
xchg
hlt
jmp
fisttpll
dec
dec
stos
or
mov
jge
inc
mov
mov
lcall
mov
sbb
ret
mov
pop
cmp
sub
jmp
add
das
shlb
and
int
xchg
dec
jg
mov
sub
sbb
adcl
xor
addb
aas
pop
xor
xor
mov
xor
fidivs
ljmp
cmpsl
je
and
std
cmp
hlt
mov
pop
int3
sahf
jmp
jo
cltd
mov
xchg
pop
stos
adc
aas
mov
cmpl
stc
mov
dec
mov
ret
dec
test
cltd
icebp
repz
jp
mov
lret
int3
mov
dec
add
cmp
popa
into
jb
mov
inc
mov
xlat
iret
or
pop
push
frndint
mov
mov
inc
lds
dec
dec
add
mov
movsb
and
rcll
push
fiadds
xchg
ret
fbstp
in
mov
clc
clc
cld
xchg
mov
cmp
jp
pop
flds
addb
outsb
push
lea
sbb
rorl
or
mov
pop
lods
orb
mov
in
add
rclb
dec
mov
push
lods
jns
inc
cld
jp
dec
pop
pusha
xor
inc
sti
aad
iret
loop
push
dec
xor
aad
shr
sub
es
and
xor
mov
xchg
xor
out
mov
push
pop
cmp
inc
or
fs
lods
dec
mov
mov
mov
mov
and
std
inc
sub
iret
ficoml
fcomps
and
das
push
test
sub
xchg
fidivrs
movsl
jmp
mov
or
push
mov
sub
cwtl
add
jo
adc
sbb
pop
add
les
aaa
int3
push
movsb
mov
stos
jp
xchg
mov
mov
imul
jl
add
cli
movsl
inc
pop
lret
inc
test
std
and
aaa
xchg
ja
dec
jge
inc
xorl
test
lds
subb
iret
cmc
popa
pop
sbb
divb
xchg
daa
dec
dec
rcl
pop
push
dec
out
outsl
sbb
ljmp
push
cmp
dec
mov
and
dec
add
adc
cmp
sub
movsb
pop
loope
push
push
outsl
dec
inc
test
lods
xor
hlt
adc
repz
xchg
inc
stc
shll
int
cmpl
cmp
loopne
xchg
sub
push
fwait
cltd
out
and
dec
dec
inc
mov
fstp
lret
mov
fisubl
jle
inc
mov
loop
lock
pop
sarb
addb
mov
icebp
sub
add
clc
movsl
movsb
and
push
mov
pushl
fiaddl
mov
ret
inc
iret
loop
or
data16
mov
or
adc
dec
jb
push
jge
sub
mov
sbb
dec
mov
jno
jl
pushf
es
sahf
push
mov
mov
into
jmp
pop
push
idivl
fiaddl
mov
ret
subb
cmp
sub
shr
repz
adc
pop
cmp
inc
ljmp
pop
imul
or
xor
rorb
lock
inc
and
sub
sarb
je
add
cmpsb
cmpsl
pop
mov
gs
clc
hlt
int3
jl
xor
inc
fnstsw
mov
add
test
jnp
add
pop
in
lock
call
test
icebp
addb
jmp
dec
pop
adc
out
dec
pusha
outsb
popa
test
push
outsl
std
cltd
jp
movsb
mov
dec
jg
bound
repz
jae
shl
push
js
and
jecxz
ret
out
xor
enter
or
imul
xor
scas
and
mov
xchg
scas
hlt
adc
jne
hlt
fwait
into
xchg
dec
sub
xchg
jne
cmp
loope
rcrb
push
into
dec
or
adc
arpl
push
fcompl
mov
mov
sbb
or
push
imul
cmp
fmulp
js
jg
stos
sbb
inc
sub
jno
rdtsc
cld
adcb
push
addr16
std
je
push
mov
push
aas
test
dec
adc
clc
pop
in
popa
in
pop
mov
insb
loopne
stos
and
jnp
into
stc
hlt
dec
xorb
mov
mov
push
mov
mov
mov
add
leave
cmp
jp
mov
jae
cltd
lods
pop
cs
insl
leave
cmc
lret
dec
xchg
or
sti
rclb
mov
dec
pop
inc
and
xor
jns
pushf
jno
xchg
sub
hlt
mov
jae
out
jp
sub
adc
in
cmpb
pop
push
sar
or
mov
push
jae
icebp
xlat
jo
repz
or
and
mov
mov
imul
out
into
into
sbb
scas
xchg
outsl
xor
xchg
movsb
decl
lret
cltd
mov
es
mov
js
xchg
mov
dec
xchg
push
inc
add
adc
xchg
jp
inc
or
in
pushf
sbb
ss
and
mov
dec
dec
jne
or
shrb
or
repnz
mov
ret
out
mov
out
jl
cmpsb
das
or
push
neg
sub
cmpb
aam
xor
or
mov
outsl
jbe
push
mov
pushf
jmp
fwait
test
xchg
xor
int3
add
dec
cmp
aaa
push
adc
sarb
mov
lcall
dec
stos
inc
lcall
lcall
repz
jmp
inc
xor
jge
in
or
push
inc
outsl
scas
add
pushf
scas
add
sbb
pop
cmp
and
sarl
enter
mov
dec
adc
push
pop
xor
cmpsl
inc
add
mov
test
fstl
adc
lea
fwait
sub
dec
fwait
mov
out
mov
mov
mov
dec
mov
lea
push
inc
lods
mov
cmp
and
and
loopne
pop
or
mov
xchg
inc
jle
push
int3
sub
jnp
rcrb
mov
jp
pause
mov
rcrl
dec
mov
enter
push
fisttpl
add
arpl
mov
ss
add
pxor
mov
outsl
bound
cltd
dec
pusha
fwait
and
jnp
adc
loopne
push
and
and
lods
fmull
jl
xchg
jp
xchg
call
movsl
or
push
mov
push
rcrb
mull
aaa
scas
push
mov
pop
int
js
out
shrl
pop
aam
popa
adc
jl
lods
pushf
pop
pop
dec
add
icebp
xchg
out
add
add
pop
cmp
adc
inc
push
iret
inc
mov
mov
sahf
inc
pop
mov
cltd
mov
mov
cmp
imul
push
sub
inc
inc
mov
das
std
sub
int
cli
jecxz
cmpsl
loop
jbe
scas
imul
loopne
sub
adc
or
xchg
push
enter
inc
pop
aad
mov
hlt
xchg
rcrb
cmp
pop
lods
arpl
push
hlt
gs
push
pop
mov
add
cmp
mov
and
add
push
jne
lcall
add
push
popf
stos
repnz
loopne
leave
pop
sub
xor
movsl
jp
mov
xchg
es
out
inc
xor
mov
movsl
dec
inc
lods
mov
cmpl
sahf
jo
loope
icebp
imul
adc
pushl
jbe
add
inc
ficomps
adc
imulb
sub
sti
or
dec
scas
inc
xchg
enter
arpl
mov
jecxz
movl
sub
sbb
or
pop
sbb
mov
mov
dec
inc
push
jns
push
add
mov
xor
cmp
into
hlt
sahf
in
fld
stos
rorl
es
push
enter
xor
test
push
fidivl
ret
dec
out
or
in
flds
popa
pop
jmp
cs
popf
int
mov
jns
mov
xor
and
int
shrb
dec
xor
mov
sub
rcrl
sahf
out
push
aam
pop
mov
cmp
mov
lds
sbb
xchg
mov
int3
sub
ret
push
dec
lods
inc
xchg
sub
pop
sub
jp
aaa
sub
jmp
push
and
popa
rcll
mov
xchg
push
ficoml
mov
movsb
ret
xor
notb
mov
shll
stc
mov
add
xlat
mov
icebp
adcb
dec
ja
mov
xor
mul
adc
sub
push
scas
and
loope
int
lods
out
push
test
out
lcall
in
fldcw
cli
stc
or
bound
int3
es
adcl
call
inc
push
xor
mov
inc
pop
test
lcall
pop
dec
push
mov
mov
push
out
or
test
xchg
lods
mov
jl
jnp
outsb
es
fmull
call
shl
mov
add
mov
pop
cmp
pop
out
test
jbe
mov
xor
jl
call
pop
testb
dec
cltd
mov
mov
pop
inc
sti
movsl
add
cwtl
jno
shll
inc
bound
daa
sbb
mov
mov
je
or
cmpsb
add
pop
push
int
fwait
jno
mov
mulb
dec
or
std
fidivrl
dec
repnz
popa
fcoms
xchg
scas
jg
cltd
jecxz
loopne
lock
cmpsb
mov
adc
loopne
das
mov
enter
and
dec
jb
in
mov
lea
sub
lcall
lods
cwtl
push
fldcw
in
adc
mov
or
cmp
or
repz
in
jg
aas
lds
mov
rcll
test
clc
fldcw
repnz
xchg
dec
std
out
sub
into
sub
sbb
inc
ljmp
mov
jmp
fmul
fcmove
test
out
loope
sub
mov
ja
pop
scas
pop
and
push
jl
lods
inc
rorl
xchg
and
mov
xchg
pop
mov
in
lret
add
lds
sahf
add
out
out
dec
mov
pop
push
imul
data16
shlb
cmp
je
ja
mov
add
xchg
repnz
cmp
ss
out
adcl
sub
mov
loopne
add
rorl
sub
or
shll
add
mov
add
pop
sarb
mov
sbb
rol
xchg
enter
sub
cwtl
sub
push
mov
xchg
inc
test
stc
jo
icebp
pop
outsb
popf
sub
cwtl
notb
stos
or
out
ljmp
fs
push
sti
clc
stos
xor
push
popf
xlat
adc
push
add
ja
repz
lods
es
sub
sbb
adc
cltd
daa
fsubrs
negb
mov
adc
sub
fwait
adc
lahf
sbb
cld
jno
add
enter
aad
sub
leave
sub
stos
pushf
sbb
jo
cmpsl
cmp
fistl
xor
mov
xchg
sbb
insb
or
sbb
push
mov
aaa
mov
cwtl
popf
jmp
out
mov
nop
aaa
cmc
mov
scas
sub
shlb
enter
xchg
lahf
sbb
push
pop
xor
aad
fists
mov
movsb
mov
xchg
insb
repnz
sbb
jno
jno
inc
iret
into
aam
mov
mov
insb
push
jno
lods
popa
nop
jp
loopne
xlat
test
adc
sub
cwtl
inc
mov
lods
icebp
jecxz
insl
mov
lea
cmpb
fwait
stos
xor
stos
sub
out
jp
call
sti
push
pop
rorl
sbb
lds
arpl
or
mov
push
mov
ret
ljmp
test
push
in
inc
int
stos
jae
mov
jl
and
enter
lahf
mov
cld
xor
int
ljmp
and
cld
cmp
mov
dec
push
cltd
lea
mov
call
push
out
pop
les
sub
adc
popa
push
repz
sbb
and
mov
rolb
cmc
int3
push
in
cmp
js
mov
out
cmp
xor
push
dec
and
mov
ja
out
jge
loop
bound
dec
xchg
push
push
add
push
mov
scas
sbb
and
es
ljmp
cltd
dec
jl
and
dec
add
pop
xor
lret
inc
sbb
divb
mov
outsl
int
xor
into
push
and
push
test
dec
jp
dec
jmp
and
or
inc
fcompl
inc
push
xchg
push
hlt
in
pop
clc
fsubl
cmpsb
adc
push
jnp
popf
xchg
movsb
dec
inc
dec
int3
popa
popf
jl
sub
mov
cmpb
add
rorl
subl
or
pusha
sbb
xchg
lea
lret
aam
push
addr16
lock
inc
icebp
int3
xchg
frstor
jge
sbb
push
mov
dec
nop
push
neg
scas
xor
je
ljmp
xor
int
mov
xchg
ret
pop
mov
aad
insb
push
iret
pushf
movsb
push
int3
sti
f2xm1
es
inc
insb
out
lret
mov
aad
push
jno
in
pop
test
bound
jl
inc
bound
mov
xor
xchg
xor
aas
jbe
sub
push
push
add
dec
aad
daa
test
orb
inc
outsb
xor
outsb
xlat
clc
dec
fwait
dec
pop
fldcw
data16
rcrb
test
lahf
insl
in
mov
pop
adc
xor
addr16
movsl
add
lds
adc
inc
test
pop
out
push
in
and
xchg
addl
insb
jmp
add
in
sub
add
shr
leave
fildl
add
insl
mov
lds
ja
xor
sbbl
inc
js
jecxz
jnp
xchg
inc
or
clc
repnz
fmuls
fsubrp
push
dec
push
gs
pop
mov
xchg
insl
and
out
cmpsl
subb
jns
and
sbb
loop
arpl
adc
xchg
out
dec
dec
loopne
ds
popf
imul
mov
fdivrl
mov
mov
loop
xchg
dec
dec
sbb
outsl
pushf
sub
popf
sahf
cld
scas
into
outsb
xchg
call
insl
sahf
dec
cmp
xchg
arpl
mov
int
lahf
sbb
xchg
inc
push
je
pop
shr
rcll
cmp
aam
ss
pushf
adc
cmp
mov
cmp
adc
pop
push
icebp
push
testb
jbe
xchg
imul
aaa
mov
or
dec
jmp
testl
ljmp
xor
add
and
mov
mov
mov
repz
aaa
xchg
and
fsubr
in
xchg
jle
popf
aam
cld
lcall
xor
rorb
es
sbb
fldenv
push
popa
sub
das
xchg
inc
movsb
mov
pop
push
sbb
adc
arpl
fst
pop
int
jge
cwtl
sub
or
mov
lea
daa
inc
lret
leave
jb
test
mov
push
data16
inc
mov
pop
shll
lret
sub
nop
xlat
ffreep
sbb
sub
out
jb
xor
movsb
dec
iret
lods
ss
bsr
nop
mov
dec
dec
add
movsb
mov
pop
jae
fistpll
sub
or
leave
aad
ficomps
ret
pushf
dec
pusha
sahf
adc
push
jnp
movsb
jmp
xchg
ret
subb
stc
popa
cltd
repnz
cmp
sub
lds
add
insl
popf
nop
push
xor
out
or
popf
jp
addb
aas
sub
fists
mov
mov
rcll
sub
ret
fdivr
mov
and
cmpps
xlat
fcoms
int3
sbb
rcl
sbb
call
inc
pop
add
push
push
gs
push
xor
push
inc
jle
mov
cli
cwtl
jmp
divb
mov
jne
lds
popa
add
or
pop
jge
mov
mov
ja
cmc
inc
adc
pop
das
mov
lahf
sbb
cmpsb
jno
popa
inc
adc
mov
mov
xor
xchg
inc
add
xor
pmullw
pop
dec
xorl
jnp
mov
bound
mov
push
jmp
sbb
fs
sub
pop
loope
cmp
sub
and
mov
or
inc
xchg
or
mov
mov
pop
in
pop
stos
sbb
add
fadds
push
pop
js
xchg
dec
out
aas
xchg
or
and
mov
icebp
repz
sahf
and
inc
or
fnstcw
xor
mov
arpl
jbe
dec
cmpsl
and
stc
cli
out
and
aas
adc
push
xchg
rorb
ret
sub
push
addr16
dec
pop
imul
not
jl
repz
ja
dec
mov
js
repnz
xchg
shrb
cmpl
mov
adc
or
xor
lock
shl
push
lock
sahf
mov
sub
iret
inc
and
lret
mov
cld
nop
inc
ds
sbb
pop
orb
out
push
push
push
cmc
xor
jns
inc
or
js
icebp
in
jl
lcall
push
add
dec
sbb
mov
cmp
and
cmp
inc
mov
mov
jg
sbb
cld
jecxz
and
and
and
dec
cmpsb
push
jge
out
cmpsb
movl
lret
push
add
divl
ja
out
mov
inc
dec
ja
fs
aas
nop
les
mov
cli
jmp
insl
lock
sbb
cmpsl
adc
adc
adc
andb
cmc
fwait
and
clc
outsl
aam
jp
mov
cld
add
addr16
adc
pop
push
push
ret
int
cwtl
lds
cmp
or
pop
jne
shrl
mov
mov
addr16
mov
push
outsb
jecxz
adc
xchg
cmpsb
cmc
add
sbb
dec
cmp
adc
xor
pop
cltd
xor
pop
pop
add
push
jne
push
imul
ficompl
jnp
jb
fcomp
inc
cmp
aam
pop
mov
icebp
cwtl
push
inc
loopne
sub
mov
repz
jbe
insl
mov
mov
dec
int
fsubrs
cmpb
addl
adc
add
stos
xchg
inc
mov
adc
in
cld
mov
loop
cmpsb
repz
addr16
mov
adc
call
in
push
lret
pop
in
cmp
push
mov
mov
pcmpeqb
xchg
mov
mov
or
rorb
jg
xchg
mov
pushf
and
in
pusha
shll
push
push
push
xchg
jecxz
pcmpeqb
data16
mov
das
add
xchg
stos
inc
and
mov
pop
shrl
ret
scas
lcall
repz
mov
jg
jne
daa
jecxz
lods
mov
jne
jnp
jae
daa
ljmp
and
push
clc
and
jp
xchg
aaa
xor
into
out
lret
inc
stos
pop
lods
jne
cmp
ds
pop
pop
mov
addr16
fwait
mov
inc
sti
sub
jp
fcmovnbe
mov
sbb
sbb
xor
lret
xor
and
inc
leave
cmp
rorl
clc
pop
movsl
stc
add
adc
cs
dec
outsb
push
or
aam
aad
inc
add
cld
pop
xor
int3
adc
sarb
xor
mov
mov
cmp
incb
xor
cs
mov
cmpsb
adc
mov
aam
cltd
loop
pop
pop
cmp
fistpll
push
mov
xchg
mov
push
inc
pushf
in
pop
xor
fstpt
jnp
out
loopne
jb
nop
adc
dec
inc
jl
iret
jae
jg
ljmp
pop
pop
sub
into
cmp
mov
jns
sub
mov
lods
and
les
dec
xchg
icebp
adc
jns
mov
ret
lret
jecxz
popa
mov
fildl
mov
inc
mov
jne
xor
inc
push
je
add
fcoms
adc
dec
cs
repnz
mov
popa
cmp
mov
es
repz
xchg
jae
ja
dec
or
imul
stos
mov
iret
mov
out
mov
xchg
mov
xchg
xchg
add
loop
fwait
lods
imul
cmpb
mov
clc
stos
fcmovnbe
scas
test
add
push
pop
call
adc
and
lret
lret
jns
out
sub
lahf
lds
mov
aaa
jg
lcall
mov
xchg
frstor
xlat
scas
fwait
shr
push
std
jbe
sbb
inc
cmp
xor
dec
xchg
sbbl
into
sbb
xchg
and
sub
cmpl
test
sub
push
mov
cmp
jl
cmp
add
mov
pinsrw
out
pop
fcoml
cs
loope
jbe
lds
mov
iret
mov
sub
loopne
inc
loope
rolb
imul
pop
sbb
mov
movsb
cs
push
aam
repz
cmp
leave
bnd
pop
xor
movsb
mov
clc
in
jp
xor
mov
call
jge
jmp
sahf
sbb
les
mov
xor
xchg
dec
push
pusha
mov
cmp
fcmovu
adc
mov
stc
pop
cs
mov
gs
sbb
inc
mov
jbe
xor
mov
ret
fwait
dec
movsl
lds
add
in
dec
aad
cwtl
sbb
nop
movsl
add
bswap
popf
nop
jne
inc
insb
cmc
lods
aaa
mov
aaa
sub
mov
pop
jb
sti
roll
inc
lret
or
and
mov
out
push
out
mov
sbbl
popf
add
lds
iret
insb
mov
jne
cmp
mov
mov
in
insl
jmp
fldl
jmp
sub
fsubrl
repnz
xor
adc
call
pop
mov
fstpt
push
leave
mov
jo,pt
sub
pop
iret
in
pop
pop
int3
in
fcoms
insl
adc
mov
or
imul
inc
dec
ds
pushf
xchg
cmc
pushf
sub
pop
sbb
cmp
inc
repnz
loop
insl
sub
jo
lcall
cli
adc
dec
aam
lret
pop
jno
sar
adc
shll
aas
xlat
add
test
xchg
xchg
and
mov
clc
loope
inc
adc
test
addb
jmp
or
xchg
subb
dec
lods
sbb
mov
pop
test
inc
jp
xchg
inc
movsl
test
inc
in
popa
lcall
notl
jo
cld
mov
push
insb
xor
add
sub
cmpl
pop
push
mov
enter
xchg
push
mov
movsl
aad
ret
jl
xor
mov
test
rcr
leave
sahf
sub
mov
or
and
psrlw
push
loope
mov
sbb
pusha
cmpsl
arpl
movsb
xchg
das
pusha
in
xorl
adc
and
pop
popf
add
sub
into
dec
add
mov
ja
movsl
cli
pop
mov
dec
loopne
dec
dec
cs
pop
or
lods
push
fstpt
in
xlat
inc
push
xchg
into
fs
xchg
add
lods
mov
lock
shl
stos
xchg
and
add
sbb
shll
sbb
fnstcw
pop
jo
shrl
dec
daa
ljmp
add
lcall
xchg
xor
pop
sbb
push
sub
cmp
mul
ret
es
push
pop
addr16
div
lock
mov
xlat
cmpsb
repz
add
out
mov
sti
jecxz
das
push
mov
cmp
cmpsb
clc
pop
and
add
cmp
adc
enter
incl
test
into
fisttps
jge
or
sarl
inc
add
gs
icebp
dec
cmp
pop
mov
fistpll
or
mov
in
idivl
jmp
fsubrl
xlat
and
ret
or
rcl
jge
jecxz
or
add
mov
mov
sbb
xchg
fildl
add
ds
sti
xchg
sub
sub
pop
mov
xchg
movsl
in
into
mov
cld
or
lret
or
mov
imul
dec
loope
inc
or
and
ret
das
push
dec
mov
ja
jg
bound
fidivrs
ffreep
adc
mov
push
aad
mov
int
imul
imul
xor
lods
repnz
lahf
sbb
nop
bound
inc
cmp
mov
lods
sbb
and
inc
dec
xchg
aam
sub
test
sub
mov
lods
psraw
mov
adc
bnd
push
jno
test
xchg
mov
test
cli
hlt
mov
addr16
movsl
clc
imul
cmp
rorb
fcomps
sbb
cmp
in
cmp
aam
fsubrl
mov
mov
dec
push
repz
push
cmpsb
lea
cli
in
jbe
loop
add
std
push
jle
out
and
ljmp
jg
xchg
mov
out
idivb
fucomi
or
jb
lds
gs
divl
jnp
daa
xor
mov
cmpsl
sbb
mov
ds
sub
shll
data16
sahf
sub
test
test
cmp
rcrb
sub
mov
andb
lea
test
movsl
xchg
push
mov
leave
pop
ss
push
in
popf
sti
dec
pusha
lods
loop
std
lock
lahf
push
push
sub
ret
add
mov
lahf
in
xor
cmpsb
cmp
push
adc
clc
sti
loope
and
in
cli
dec
mov
jns
movsl
icebp
push
and
xchg
ja
stos
sbb
pop
pop
jmp
gs
inc
add
jl
pop
and
mov
shl
dec
sbb
pmovmskb
mov
push
js
sbb
cmp
inc
jns
jo
in
fwait
jns
mov
mov
fimull
mov
inc
outsb
jo
out
aam
jecxz
lods
aas
pop
sbb
mov
cmp
fwait
and
mov
inc
and
sub
test
addr16
add
jae
pop
mov
imull
cmc
fisubrl
insb
js
mov
faddp
pop
addr16
push
shll
add
outsb
xchg
popf
inc
xchg
jb
add
and
ret
addl
add
shr
push
jecxz
cmp
jns
dec
orl
lock
push
sbb
xor
add
mov
mov
push
add
shlb
xchg
leave
or
jbe
pop
jmp
popf
jmp
pop
inc
mov
and
andl
or
sahf
scas
enter
push
add
and
scas
jmp
bound
mov
jmp
gs
adc
js
addb
loopne
pop
cmp
sub
shll
or
pop
into
xor
push
leave
hlt
adc
addr16
out
cmp
mov
iret
and
cmp
sbb
movsl
push
push
ja
push
push
gs
jb
mov
cmpsl
dec
jmp
test
into
or
cmpsl
mov
adc
scas
xchg
or
inc
xor
push
xchg
mov
stc
xor
stos
pop
pop
addb
ds
ficoml
es
jp
xchg
xchg
les
fidivrs
and
adc
ss
adc
push
add
aaa
dec
gs
divl
and
aaa
jbe
call
rcl
inc
inc
sub
pusha
sti
jl,pt
push
mov
dec
lret
ss
push
popf
fs
addr16
addr16
mov
shlb
setp
sti
or
fldt
xor
cmpl
aam
scas
outsl
sub
andb
sbb
add
popa
xlat
fldt
and
xor
add
das
das
inc
jg
repnz
xchg
xor
popf
fistps
aam
push
sarb
jne
dec
sbb
cmp
push
shll
jno
cltd
cmp
hlt
mov
rcrl
push
out
je
addb
repnz
mov
jmp
jmp
jns
les
aad
aaa
in
out
out
sub
adc
sahf
add
outsb
shrl
adcl
inc
xor
clc
cld
es
lods
push
inc
stos
inc
inc
fyl2x
ds
in
clc
inc
in
repnz
xchg
or
lods
jecxz
loope
sbb
xor
and
bound
cmp
adc
ja
xchg
push
outsb
nop
mov
jnp
pop
es
sahf
add
push
in
fcompl
cmp
outsl
cmp
rclb
popf
out
jmp
in
movsb
cmp
add
out
fbstp
fdivr
enter
daa
lods
push
test
jae
iret
sahf
adc
mov
pop
mov
push
xchg
fisttpl
stc
adc
es
lret
cmpsb
push
add
sbb
sbb
xchg
inc
mov
xchg
add
xchg
sub
leave
mov
sahf
fwait
push
xor
movupd
add
xchg
in
xchg
pop
and
enter
stc
dec
test
adc
cmpsb
xchg
adc
mov
add
sbb
js
push
dec
add
movsb
out
push
outsl
jbe
push
iret
sub
add
jl
into
insl
test
jne
or
pop
mov
fs
out
or
rcrl
xchg
js
lahf
scas
mov
fstpt
adcb
adcb
enter
inc
xor
inc
mov
fiadds
pop
dec
mov
and
mov
sbb
mov
fildll
xor
xchg
mov
mov
adc
push
push
pop
mov
xchg
xchg
xlat
or
jb
mov
mov
inc
jnp
adc
repz
fwait
jbe
jae
movsl
lret
jbe
adc
aad
jne
adc
pop
daa
sbb
pop
lcall
sub
and
je
loopne
jp
loope
pusha
add
dec
jl
inc
push
in
xor
ret
xlat
clc
xchg
jae
or
shlb
les
add
jp
or
pop
mov
int
mov
jl
dec
mov
mov
cmp
xchg
sub
add
xor
mov
stos
hlt
add
xlat
sarl
test
es
pushf
push
fdivl
cli
sbb
cli
inc
pop
sar
daa
jg
push
aas
into
sub
sub
out
add
push
fnsave
sbb
pop
inc
enter
push
cmp
enter
cmp
mov
mov
jmp
filds
test
rolb
mov
push
cltd
pop
or
pop
sbb
aam
sub
dec
and
sbb
aam
xor
jno,pn
adc
mov
push
clc
sub
push
shl
out
xchg
ljmp
mov
mov
dec
sar
daa
pop
movsl
inc
out
aaa
cs
mov
sbb
divl
adc
inc
add
add
sub
pusha
inc
dec
mov
pop
xchg
push
and
out
aam
add
lahf
pmulhuw
cmp
sub
into
add
mov
add
mov
mov
sub
stos
roll
clc
arpl
pop
insl
or
clc
jbe
testl
push
sbb
or
jb
push
cmp
or
inc
ljmp
shr
mov
js
xchg
in
test
inc
jns
sbbb
shrb
aas
jg
loope
sub
dec
fnsave
xor
cmp
push
jbe
shrb
leave
mov
inc
int
add
mov
xlat
out
jns
fidivrs
push
inc
mov
outsb
bound
xor
out
pop
or
push
sub
enter
sbb
mov
adcl
stc
pushf
fs
enter
mov
outsb
xor
or
inc
cmp
mov
inc
mov
ljmp
xlat
into
test
popa
mov
mov
aam
sub
adc
daa
outsl
rolb
xchg
dec
inc
hlt
jb
shlb
nop
cmp
mov
xlat
pop
das
loopne
sub
aam
xor
mov
xor
xchg
and
adc
xchg
or
out
push
test
cmp
pop
hlt
fisubrs
jl
ljmp
jmp
mov
ret
sarl
sbb
in
pop
repz
lods
jecxz
pop
lods
lret
inc
fisubl
inc
pop
bound
xchg
mov
pop
ljmp
xor
sbb
xlat
imul
xor
mov
pop
loop
ds
icebp
sub
mov
sbb
loope
and
fnstcw
push
adc
movsl
cs
jg
pop
int3
pop
xor
cmp
sbbb
sub
pushf
pop
rorb
cmp
pop
testl
call
inc
and
repnz
or
and
mov
mov
js
xchg
jno
popf
popa
popa
cmpsl
adc
mov
leave
rolb
sarl
mov
sbb
jge
sahf
jmp
iret
mov
bound
inc
add
pop
or
xlat
das
xchg
cmp
jecxz
fldt
sbb
and
cwtl
xchg
int3
jg
adc
inc
push
icebp
hlt
shlb
jb
sbb
daa
lahf
add
cmp
pop
sahf
xor
jmp
or
or
jp
setnp
push
rolb
loop
sbb
jg
dec
lret
lret
dec
add
repz
or
movsb
shrb
pop
cmc
fdivrs
or
test
mov
xchg
testb
and
mov
inc
imul
dec
popf
iret
je
add
test
fisubrs
cld
mov
pusha
inc
mov
dec
in
sbb
adc
movsb
std
int
fwait
dec
test
push
add
scas
mov
outsl
cmp
xchg
push
lcall
sbb
aaa
cmpsb
xor
lahf
sub
dec
int
imul
xchg
and
mov
or
mov
aad
idivl
das
std
cltd
add
mov
pop
gs
addr16
and
shlb
imul
sbb
pop
mov
push
or
js
jecxz
mov
push
mov
shrb
mov
cltd
adcl
loop
sub
addl
insl
mov
adc
icebp
cmp
mov
jno
sti
out
out
mov
mov
cli
test
test
aas
pop
fwait
and
jno
mov
in
faddl
sarl
lcall
mov
pop
lcall
mov
mov
pop
mov
push
ret
and
insb
mov
and
xor
stc
inc
mov
lea
or
xor
push
fwait
jp
inc
scas
cmc
addr16
xor
in
test
or
lret
push
and
mov
sbb
flds
test
test
int3
sub
in
cltd
mov
leave
cwtl
insl
sarl
mov
mov
mov
imulb
sbb
or
shll
cmp
mov
sbb
or
dec
or
mov
fcmovu
adc
pop
mov
in
mov
mov
dec
jo
sub
insb
int3
sub
aam
fistpll
mov
out
mov
cmpsl
movsl
outsb
lock
enter
add
les
movsb
ljmp
mov
subb
ss
gs
mov
pop
test
mov
test
in
popf
les
sub
cwtl
xchg
or
rcrl
and
sti
js
pop
out
js
vmovaps
jae
insl
mov
add
pop
mov
mov
mov
jnp
lret
sub
jae
out
mov
inc
push
hlt
dec
ret
mov
mov
inc
cmp
push
sbb
ret
sbb
setns
sbb
cmc
subl
mov
inc
add
mov
mov
push
aad
jle
adc
adc
xlat
cmp
inc
enter
pop
sbb
rcr
pop
sbb
retw
jg
mov
and
daa
gs
jnp
and
stc
jo
outsb
push
sub
or
jb
cmp
sar
add
in
clc
dec
cmp
inc
or
aas
push
sti
sbb
test
in
jmp
dec
in
and
mov
mov
and
stos
jecxz
xchg
or
mov
popf
mov
cmp
lods
and
or
add
in
add
pop
dec
xor
mov
ret
dec
ss
in
xor
rorb
sbb
out
rcll
xchg
fs
sti
out
shrb
dec
xor
sub
daa
add
push
xor
sub
xor
jecxz
inc
push
pop
push
adc
mov
push
fdivs
add
xchg
or
loope
shrl
fs
or
mov
dec
add
inc
aas
mov
ret
pop
mov
jnp
cmp
pop
mov
mov
sbb
pop
fdivrl
push
xor
pop
nop
or
mov
add
jecxz
gs
pop
daa
mov
les
add
push
lods
movsl
and
stc
pop
xor
orb
xor
fisubl
jp
push
fldcw
jb
test
sbb
add
lock
pop
jae
loope
fcoml
xorb
js
pop
cmpsb
inc
daa
aaa
sbb
int
xchg
dec
lcall
imul
push
je
enter
push
outsl
inc
std
dec
pop
or
jbe
aaa
add
push
cs
xchg
fs
mov
jge
add
jo
mov
or
jp
mov
lock
jg
out
lock
sbbl
lock
inc
dec
xchg
flds
imul
fisttpl
lods
frstor
movsb
jl
push
test
fwait
mov
add
jecxz
aam
ja
ljmp
out
mov
cs
sti
popf
and
adc
ja
or
sub
test
mov
popa
sub
lcall
fldt
and
int
adcb
fstpt
mov
scas
loopne
mov
add
outsb
icebp
dec
or
cwtl
mov
mov
push
xorl
cmp
cmp
mov
lcall
stos
push
std
push
push
idivb
pusha
repnz
xor
fisttpll
ljmp
ret
mov
mov
leave
add
enter
mov
cmp
mov
sub
fmull
cld
aam
negl
sbb
add
cld
inc
or
xor
icebp
test
inc
and
leave
xor
pop
test
stos
xor
lods
loop
hlt
xchg
pop
lret
xchg
scas
fidivrs
add
jp
jle
jnp
outsl
in
push
out
into
std
pop
fsubs
jns
hlt
and
mov
mov
push
and
xchg
dec
push
fs
cmp
rcll
mov
leave
mov
in
das
adc
jns
imul
pop
mov
psubusw
jns
jecxz
mov
pushf
pop
outsb
jne
out
inc
mov
or
cld
cmpsl
push
pop
pusha
jbe
outsb
or
repnz
mov
xor
pop
mov
ss
xor
addb
jbe
movsb
pusha
outsl
jl
cltd
mov
mov
dec
adc
lahf
cs
add
popl
inc
pop
adc
fnstcw
xor
mov
leave
pop
sub
and
mov
jp
push
das
dec
pop
xor
xchg
jno
scas
icebp
mov
into
cmp
test
and
ds
pop
dec
scas
outsl
enter
cmp
inc
xchg
add
or
arpl
mov
lcall
push
aas
out
sub
or
imul
sarl
xchg
loopne
out
ret
inc
and
xchg
add
ja
sub
dec
mov
sub
xlat
test
dec
jno
pushf
dec
dec
adc
or
mov
mov
pop
jg
clc
stc
fwait
inc
mulb
pusha
dec
inc
mov
adc
cli
cmp
xor
jl
out
xchg
jp
cli
mov
shlb
int3
sub
lods
dec
fistpll
lcall
mov
add
stc
add
ret
fstpt
in
fucomip
jle
test
or
lea
out
xor
and
sub
inc
bound
insb
jae
push
cmpsb
add
repz
ss
daa
lea
divl
cmpsl
data16
in
fwait
lret
pusha
inc
dec
call
bnd
loop
adcl
xor
xchg
outsb
inc
sbb
xor
sbb
mov
je
xor
lret
push
sub
xchg
sub
mov
ficoml
or
pusha
cmpb
add
cli
in
jnp
mov
cs
pusha
or
in
pop
adc
into
jae
hlt
pushf
and
jecxz
cld
inc
imul
scas
mov
testb
sub
outsl
or
sbb
lcall
icebp
pop
loope
loope
popf
repnz
and
scas
or
push
and
out
fldl
ret
ret
pushf
cwtl
jne
hlt
xor
or
and
jl
sbb
mov
pop
xor
iret
sbbl
scas
pop
lcall
jo
mov
fnstenv
ret
or
aad
xor
mov
fisubl
lahf
and
nop
pop
es
push
ds
insl
mov
xchg
lock
sub
scas
push
arpl
xchg
subb
sub
add
push
mov
jmp
popa
pop
shr
sub
out
jg
pop
iret
das
pop
pop
jne
iret
or
cmp
gs
push
rcl
cmp
xchg
and
xchg
xor
ret
fistps
das
add
testl
push
fwait
gs
or
sbb
lret
xchg
jecxz
cltd
mov
cmp
xor
clc
addb
or
loop
dec
sbbl
sbb
notl
xchg
cmp
sub
lock
or
in
xor
jo
xchg
mov
or
clc
leave
mov
mov
inc
sbb
mov
insl
icebp
imul
xchg
adc
inc
bound
pusha
lret
xchg
fidivrl
mov
jge
adc
xchg
int
mov
push
push
into
je
push
les
xchg
mov
push
sarl
dec
fnstsw
pop
dec
repnz
push
add
bound
or
xchg
adc
push
pop
je
mov
xlat
call
or
inc
movsb
out
mov
add
jecxz
sub
out
out
leave
mov
pop
test
loopne
cmp
inc
repz
ds
or
les
jno
dec
cmpsb
push
pop
in
int
mov
pop
adc
repz
or
xchg
sub
rolb
lea
mov
je
mov
cmp
xchg
scas
xor
and
add
jbe
jns
cli
cld
xor
bound
in
dec
pusha
jnp
dec
shll
movsl
sub
rcr
mov
adc
test
sbb
outsb
sahf
out
mov
mov
lock
cltd
xlat
push
ss
cmp
mov
xor
jle
inc
pop
adc
mov
jno
into
dec
fsubrs
roll
fidivl
mov
adc
pop
jnp
flds
jne
icebp
addr16
mov
push
mov
iret
test
inc
cmpsb
bound
or
das
pop
mov
loop
sbb
pop
inc
add
dec
andl
cli
clc
jae
rclb
fs
mov
ds
int
push
inc
jg
add
inc
sub
hlt
lcall
pop
xchg
or
inc
ret
sub
les
adc
push
push
xorb
data16
ret
and
rsm
leave
jno
add
jp
std
xchg
pop
mov
aam
jnp
mov
pushf
sub
popa
repnz
dec
push
cmp
dec
ja
sahf
lods
mov
cltd
jno
minps
fldcw
dec
mov
or
mov
mov
jno
and
movl
and
jg
inc
sahf
testb
fistl
sahf
insl
scas
xchg
dec
dec
cmpsb
mov
cltd
movsb
notl
add
pusha
in
mov
in
sti
outsb
pushf
ds
jl
or
or
cwtl
hlt
js
jno
pop
fwait
push
outsl
mov
inc
and
shl
test
ret
jmp
popa
mov
aad
inc
filds
add
fmulp
jae
fcomp
out
shll
adc
cmp
inc
xchg
fwait
mov
xlat
jl
lret
pop
rcll
les
xchg
lret
out
add
cmc
or
jnp
test
add
push
loop
xchg
mov
stc
ss
into
movsb
popf
mov
shll
sub
lahf
push
testb
cmp
jb
pop
adc
xor
pushl
test
xchg
dec
pop
sub
inc
push
jns
pop
jg
cltd
bound
pusha
or
add
sbb
xor
cmp
mov
sub
aaa
sar
or
fisubrl
push
or
adc
bnd
pusha
sahf
fdivl
and
or
sbb
int3
cmp
sub
jle
cmp
dec
mov
push
mov
or
or
mov
repz
sub
pop
testl
lods
xor
add
push
cmp
imul
ficompl
lock
ss
cmpl
loopne
adc
or
push
pop
xor
lods
js
push
xor
cmpsb
rol
out
adc
cmp
sbb
xchg
stc
mov
push
xor
or
pop
cmp
nop
mov
lods
jnp
inc
ffree
xor
sbb
inc
inc
adc
cmp
data16
insb
mov
inc
or
xchg
or
sbb
loop
scas
iret
jb
in
mov
idivb
pop
adc
mov
rorl
out
mov
adc
cmpsl
cs
xchg
jge
ja
xor
push
daa
loop
dec
mov
dec
frstor
xchg
or
lret
stc
xchg
pop
cmpsb
in
cmpsb
mov
and
in
sub
out
popf
inc
clc
xchg
lret
leave
mov
shll
jp
incl
xor
xorl
leave
out
das
icebp
mov
inc
test
dec
fbld
mov
imul
mov
repnz
mov
addr16
bound
push
pusha
idivb
xor
and
jns
mov
push
jbe
dec
push
mov
iret
in
cli
int
pusha
push
int
lods
sbb
clc
popl
and
mov
fisubl
and
andl
mov
pushf
and
inc
mov
stos
pusha
dec
nop
stc
aam
xchg
adc
movl
jge
into
js
sub
push
jne
shlb
xchg
fs
fstl
mov
jmp
mov
jle
inc
adc
xchg
mov
mov
and
imul
test
sbb
scas
dec
xchg
stc
insl
fstpt
mov
clc
lea
add
and
add
loopne
test
xchg
xchg
out
jns
lods
sar
shrb
push
jo
pop
xchg
dec
adc
push
cmpsb
pop
insb
add
in
pop
pop
adc
loopne
sub
insl
pop
je
add
dec
fisubrl
popf
inc
leave
add
xor
pop
sub
fnstenv
ljmp
cwtl
mov
repz
and
into
sub
mov
jecxz
xchg
fistps
ljmp
std
mov
xchg
rcrb
imul
mov
xlat
xor
jmp
in
pop
gs
fisubrs
and
clc
aas
test
sarl
repnz
sub
ljmp
mov
sub
cwtl
adc
cli
cmc
enter
dec
daa
rcr
dec
inc
lds
fs
xor
or
dec
jg
popf
imul
loopne
jecxz
mov
cmp
push
push
jae
fcoms
cmp
aaa
jne
xor
mov
pop
xchg
dec
outsb
adc
into
dec
ret
in
popf
pop
sub
shll
clc
negb
stos
xchg
xor
sub
add
lock
dec
xchg
stos
repnz
aas
cmc
inc
mov
out
pop
test
call
shll
ja
incb
push
fnstenv
icebp
sbbb
jo
sbb
xor
and
push
cmp
mov
push
dec
mov
pop
ljmpw
jp
or
loopne
decb
xor
popf
nop
clc
into
xchg
or
lret
call
adc
jnp
sbb
out
fwait
ja
push
xor
adc
hlt
std
mov
pusha
ss
and
shl
and
fs
mov
sarb
pusha
in
out
sub
jbe
ljmp
aam
sbb
insb
dec
push
jbe
mov
icebp
aad
lods
sbb
shll
iret
xchg
imul
std
add
inc
fisubs
insl
sarl
loop
sub
or
das
xchg
icebp
adc
movsl
cld
pushf
adc
aam
or
push
pop
loopne
cli
xchg
cmpsb
ret
xchg
or
cli
loopne
push
mov
repnz
leave
mov
rorb
stos
inc
pusha
dec
fmull
cmc
adc
fs
cwtl
lods
xlat
imul
loop
xor
stos
dec
mov
mov
adc
lods
loop
hlt
push
push
stos
xchg
cmp
and
pop
push
cmp
lods
mov
movsl
rcrl
xchg
sti
mov
jle
pop
mov
out
pop
xchg
pop
clc
push
xor
add
sbb
dec
lods
shll
out
mov
cmp
mov
repz
push
and
jecxz
jg
cltd
mov
fs
in
cmpsl
sbb
mov
nop
cmp
fsub
lods
dec
js
popf
mov
cmpsb
push
test
in
cmc
inc
xchg
push
mov
pop
imul
call
inc
icebp
pusha
ret
add
adc
dec
stc
scas
jns
jmp
pop
push
es
stos
in
mov
lcall
and
aad
lret
and
ds
fsubrs
cmp
popf
add
dec
xchg
jno
into
rcll
sbb
xchg
repz
ficompl
fwait
adc
in
dec
push
repnz
sti
jmp
rol
pop
orl
mov
or
push
xlat
int3
sub
fs
xor
int
jns
fisttpl
inc
push
jle
sub
pop
and
int3
push
lahf
rep
ss
inc
xlat
clc
adc
es
insb
pop
inc
dec
daa
jnp
mov
mov
add
out
push
inc
fstpt
ds
subl
jb
js
xchg
push
dec
test
sbb
cwtl
popf
js
data16
call
punpckhdq
mov
cld
repz
outsl
push
xchg
neg
incb
fwait
xchg
fwait
jmp
sbb
add
mov
adc
rclb
inc
dec
lret
mov
push
xor
adc
movl
xor
pop
mov
pop
lret
push
gs
je
jmp
or
and
and
cltd
lds
jne
jae
xor
xchg
inc
jae
pop
jne
shrb
nop
and
shrb
js
aam
call
add
sbb
sbb
sbb
fwait
ret
outsl
xor
rcrl
xlat
cltd
clc
popa
mov
jl
mov
add
push
pushf
fcmovne
int
imul
pushf
scas
loop
int3
ljmp
xchg
or
out
and
cmp
sarl
decb
inc
sub
and
repz
insb
test
pop
ljmp
dec
sub
icebp
cmp
pop
cmp
out
sub
in
adc
xor
mov
or
mov
or
shl
pop
push
popa
jbe
addr16
jne
mov
stos
call
mov
jae
xchg
and
out
orb
xor
mov
jnp
ficompl
iret
insl
fstpl
orb
negb
mov
dec
jns
fucom
add
adc
adcl
push
ja
sbb
dec
out
scas
add
push
pusha
mov
in
mov
inc
adc
imul
sahf
mov
imul
leave
sbb
mov
in
inc
adc
stc
arpl
jns
xchg
out
cmp
shll
lods
mov
imul
test
jbe
out
push
pop
jno
jmp
xor
andb
xor
out
popa
int
lret
and
scas
gs
pop
repz
nop
int
mov
sub
mov
jne
fs
add
out
pushf
sbb
sbb
or
mov
push
pop
fnstsw
cwtl
fidivrl
pop
dec
dec
inc
cmp
xlat
in
ss
xlat
jns
sub
jg
lods
dec
jp
dec
ljmp
pop
dec
and
xchg
divb
cs
push
xor
inc
jb
xlat
dec
sub
push
repnz
inc
cltd
jmp
or
out
das
std
and
fidivl
cmp
mov
stos
add
push
jo
and
cmc
mov
or
sub
mov
cmp
inc
jmp
test
or
xor
decl
in
stos
fisubs
push
dec
fnstsw
mov
cmpsl
mov
inc
mov
in
and
inc
or
dec
lret
mov
cmp
mov
fwait
pop
adc
jg
jae
nop
pop
into
mov
xchg
ror
ds
cmpsb
jb
push
data16
mov
dec
cmp
mov
sub
addr16
arpl
fwait
xchg
mov
les
dec
adc
mov
pop
adc
adc
test
push
into
pop
cmpsl
sbb
cmp
repnz
cmpsl
sbb
push
rcrl
cltd
repnz
test
cmpb
inc
aam
insw
adc
aad
scas
es
imul
data16
and
repnz
or
cwtl
sbb
mov
add
push
dec
jl
add
xchg
dec
cmp
or
icebp
sub
xor
inc
sbb
mov
ds
mov
adc
push
loopne
sti
insb
insl
mov
add
test
movsl
sahf
fistpll
out
jae
sti
adc
loope
out
and
mov
lret
insl
and
loopne
pop
test
pop
mov
jle
call
mov
sub
jl
push
ret
push
push
in
int
xchg
push
movsl
or
adc
jl
mov
adcb
sbb
pop
mov
ret
sti
outsb
scas
sbb
fdivs
sub
sub
enter
push
mov
sti
or
inc
push
fisubl
pop
mov
add
mov
sti
inc
jns
mov
sbb
lahf
int
out
hlt
or
cmp
loopne
fimull
mov
mov
shl
outsb
insl
and
loope
add
outsb
pushf
sbb
leave
fwait
mov
lahf
dec
fs
lock
jb
int3
cs
lock
cmp
out
add
out
ljmp
push
pusha
inc
loope
imul
cmc
push
jmp
mov
sar
scas
addr16
xchg
adc
scas
jo
clc
orl
subl
pop
addr16
fstpl
outsl
imul
test
mov
test
mov
jle
jo
dec
add
xchg
sbb
push
sub
imul
cltd
je
dec
push
inc
daa
sbb
test
push
imul
mulb
insl
loopne
push
or
add
nop
aas
jmp
inc
call
aad
xchg
cli
add
mov
and
shrl
pushf
mov
mov
sbb
addr16
and
jns
sbb
mov
imul
dec
cld
ss
inc
enter
mull
out
outsl
dec
jnp
jmp
in
mov
testl
out
jl
or
sub
xor
xchg
rcll
nop
sbb
nop
xchg
cltd
sbb
scas
stc
cld
shl
xchg
cli
xchg
jmp
int
inc
xor
pushf
imul
cmpsb
je
imul
in
shll
adc
xchg
pop
dec
cltd
out
stos
push
imul
rclb
adc
lods
xor
sbb
jp
roll
aad
call
xor
push
xlat
mov
or
mov
jnp
aad
fadds
inc
xchg
xchg
cmp
pop
adc
stc
adc
mov
and
jno
and
dec
mull
rorl
sbb
mov
add
shlb
daa
ja
or
xor
rcr
lds
jecxz
pop
jne
addl
pop
rcr
mov
cmp
mov
mov
loopne
aaa
mov
fbld
dec
cmp
adc
xor
inc
cmp
lret
pop
cwtl
or
fisubl
fistpll
clc
ret
cmp
jl
sbb
adc
lock
testl
mov
out
sbb
or
sub
jmp
adc
inc
pop
popf
push
sbb
ret
shll
pop
rcrb
mov
gs
dec
cltd
pop
mov
out
xchg
mov
cwtl
or
imul
xchg
jle
adc
push
pop
xor
pop
and
aad
sbb
shrb
sub
das
jmp
or
push
push
test
dec
inc
mov
xor
xlat
sbb
jge
enter
xor
ror
push
mov
pop
mov
add
imul
cs
mov
jnp
in
mov
push
mov
mov
lods
sbb
iret
mov
ja
les
iret
cmp
test
jns
imull
jg
push
mov
outsb
inc
jae
test
adc
sbb
mov
pop
jle
iret
push
pop
adc
or
pop
sahf
add
aaa
ljmp
dec
cmp
scas
xor
and
xlat
mov
xchg
pop
sbb
xchg
push
or
fwait
xchg
adc
ljmp
xor
test
in
arpl
test
add
and
sti
int
leave
xchg
das
sub
fdivrp
jbe
ljmp
jp
xor
xlat
cs
mov
push
rcll
stos
sahf
dec
ret
jns
ja
push
nop
inc
stos
mov
and
add
jmp
leave
xchg
pop
xchg
sbb
movsl
adc
sub
push
std
sub
sahf
and
mov
pusha
movsl
mov
mov
out
divl
sbb
pop
gs
hlt
out
sub
dec
pusha
cld
push
xor
fidivs
in
xchg
pushf
cmp
popa
fistpl
xchg
js
inc
outsl
jbe
mov
mov
or
mov
jne
mov
push
push
xchg
sub
cs
and
inc
cltd
and
xchg
ljmp
popf
cltd
jge
inc
jbe
sbb
mov
xchg
movsl
mov
pop
mov
mov
adc
add
lahf
jecxz
fcmove
int
jle
test
ss
gs
xchg
xlat
loopne
inc
and
fst
cmp
jmp
adc
mov
filds
vpunpckhbw
jne
test
inc
push
xor
stos
add
cmp
cmp
sbb
jmp
mov
in
and
jno
ret
dec
xchg
jle
out
adc
shlb
scas
insb
out
cwtl
mov
rolb
sbb
or
hlt
adc
pop
sub
in
inc
push
xor
dec
pushf
inc
cmp
leave
push
push
sub
das
dec
push
pop
jp
lea
stc
imul
jmp
clc
dec
cmpsb
addr16
inc
sbb
xchg
lret
mov
nop
mov
mov
mov
mov
ss
or
gs
mov
in
negl
orl
sub
jno
movsl
and
inc
out
push
sarb
inc
lods
outsb
test
cld
cli
out
imul
mov
jl
xor
leave
and
sbb
sbb
movsb
sub
mov
outsl
fsubrs
in
xor
mov
xor
and
xor
jns
outsb
imul
push
sbb
repnz
ja
dec
or
out
pavgb
addr16
mov
data16
push
adc
mov
inc
jge
cltd
ss
call
aam
inc
xchg
stc
and
and
cmp
push
adc
nop
cmp
lret
loope
cmp
pop
mov
mov
push
inc
pop
cmp
xchg
out
loop
test
push
ljmp
sub
test
addl
dec
and
push
pop
in
jecxz
jno
dec
pop
stc
testl
loop,pn
negl
dec
cmp
sbb
xchg
pop
jnp
and
int
push
xlat
sbb
sbb
fldl
shll
mov
fisubrl
mov
lods
fmuls
fnstenv
test
jne
out
add
scas
test
mov
stc
cmp
mov
jnp
int3
cmc
dec
cmp
fcomps
imul
test
sbb
inc
test
lods
push
and
movsb
push
add
fdivrl
mov
movsb
leave
iret
push
lcall
jne
or
lahf
mov
lods
dec
xchg
dec
into
cmp
cltd
fldl
movsl
dec
cmp
xchg
sbb
mov
int
lods
mov
mov
mov
add
pop
into
aaa
cld
les
dec
xorl
fcomp
push
in
xor
int
out
test
jns
data16
and
inc
and
fisttpl
int3
inc
xchg
dec
testb
mov
pop
and
push
ret
sbb
ja
or
mov
mov
xchg
pop
cltd
xchg
arpl
xchg
scas
addl
aaa
loope
xchg
dec
aaa
adc
xchg
dec
popf
fildl
and
in
add
cmp
shrl
filds
scas
mov
arpl
push
loope
les
ss
sub
sbb
js
push
cli
loope
movsl
imul
das
rcr
cmpsl
lcall
fcos
mov
inc
jno
insb
loope
push
dec
call
jns
xor
push
cmpsl
ds
sbb
dec
arpl
fadds
dec
insl
imull
xchg
ret
rclb
inc
sbb
out
sarl
dec
cmp
xchg
xchg
xchg
mov
hlt
cmpsb
fimull
and
lods
subl
mul
adc
cli
or
rcrb
in
loop
loopne
loope
call
pop
jecxz
subb
mov
call
xchg
out
mov
and
pop
sub
mov
xchg
rcr
pop
cmp
dec
aas
mov
push
or
aam
mov
pushf
dec
out
repnz
pop
fstpt
dec
mov
gs
jns
lahf
lods
sub
jg
stos
pop
adc
rcrl
xchg
insb
mov
cmp
add
jle
js
notb
pop
xor
xchg
and
pushf
push
push
pop
movb
mov
sbb
ret
sbb
push
ljmp
mov
int
push
add
stc
push
clc
and
pusha
rcr
fisttps
pop
cmp
or
loope
jecxz
dec
je
dec
jle
pushf
pop
mov
ja
xorb
cmp
add
pop
bnd
inc
xchg
cmp
or
fnstcw
fsubr
imul
and
lds
push
pop
pop
inc
inc
or
sahf
lock
inc
insb
pop
popa
adc
sub
imul
iret
cmp
pop
pop
ljmp
cmpsl
inc
int
add
cmp
adc
adc
sbb
imul
insl
pushf
stc
add
out
mov
mov
or
cli
cmp
or
cmpsb
or
cli
scas
and
hlt
mov
clc
xor
pop
sarb
add
notl
dec
jle
flds
or
xor
mov
dec
inc
icebp
or
fnstenv
out
pop
test
in
xlat
rorb
mov
sti
dec
daa
lods
pop
sti
aam
or
imull
adc
loope
sub
cmpsl
mov
insb
jno
xor
jbe
xor
and
pop
clc
or
jo
dec
xchg
inc
and
loop
push
mov
jo
fs
adc
imul
nop
lahf
leave
ret
jge
scas
adc
mov
shll
addr16
xor
dec
fstpl
lret
push
sti
shll
inc
cwtl
xchg
sub
xchg
ss
loop
push
pop
cmp
shl
rcll
jmp
mov
or
pop
lock
ss
movsl
in
push
xchg
daa
xchg
and
into
inc
pop
lds
push
adc
fnsave
sbb
pop
movsl
jbe
sarb
repz
cwtl
sbb
inc
xchg
bound
cs
fcoml
dec
bound
mov
xchg
jecxz
iret
dec
cmp
cmp
mov
cli
ret
add
data16
aad
les
in
sarl
sub
bnd
mov
nop
jno
bound
cmp
xchg
xchg
loop
imul
pushf
xor
mov
sbb
or
xchg
mov
insb
mov
sub
stos
mov
cmp
mov
xlat
loopne
mov
loopne
or
jb
adc
ret
cld
dec
imul
mov
sarb
sbb
pop
sub
pop
add
push
imul
or
pop
insb
inc
add
inc
lret
dec
into
push
fmuls
loop
and
cwtl
popf
pop
dec
add
ret
lret
sbb
sub
inc
je
js
fistpl
subb
xchg
scas
jle
xor
rcr
popa
testl
lods
dec
jnp
imul
cltd
adc
popa
and
mov
xchg
add
dec
sub
cld
shll
push
sub
add
loop
adc
sbb
mov
sti
mov
mov
sub
adc
ret
push
enter
mov
fisubrs
aam
dec
push
rcl
push
xor
outsl
mov
adcb
adcb
jae
cmp
add
call
mov
fwait
pop
jbe
mov
orl
pop
cwtl
fldl
mov
mov
ficompl
dec
test
stc
mov
or
test
cmc
sub
add
xor
daa
enter
jecxz
xchg
sbb
cmp
cmp
fldcw
je
pop
mov
mov
int
jg
xor
lea
les
insb
enter
dec
add
inc
ja
es
xchg
out
sbb
pop
mov
popf
and
rclb
and
dec
lret
mov
xor
cmpsb
push
inc
aaa
dec
arpl
push
ljmp
shl
or
out
dec
fwait
aas
push
int
mov
dec
xchg
fisttpl
xchg
imul
xchg
ljmp
repnz
jecxz
inc
std
dec
data16
int
mov
and
push
addr16
fimull
mov
jns
jbe
imul
add
pop
ret
xchg
push
pusha
push
popa
sub
loopne
or
or
xchg
pop
mov
test
sbb
or
mov
cmp
or
mov
and
popf
mov
dec
lock
scas
loopne
gs
mov
imul
dec
adc
mov
pop
in
fisttps
arpl
mov
fistl
xchg
xchg
sti
mov
adc
adc
rcrb
jae
adc
push
or
fcmovnbe
mov
lcall
and
sub
lret
jb
lock
lahf
jo
lea
push
iret
xchg
popa
push
shl
leave
xor
jb
cmpsl
daa
xchg
sbb
xorl
sub
pop
pop
mov
mov
cs
sbb
or
jge
mov
mov
mov
sbb
and
enter
or
mov
in
adc
insb
ljmp
xor
push
jl
inc
or
sub
test
in
pop
stos
dec
addr16
aad
pop
or
lret
lods
lock
ja
ljmp
scas
lret
shl
fldl2e
lcall
test
ror
sub
shrb
jmp
nop
mov
jbe
movsb
in
sbb
dec
cmp
test
adc
and
add
cmc
rclb
aad
movb
das
ljmp
scas
adc
jge
scas
out
jp
loope
jg
adc
add
jle
pushf
out
rclb
ljmp
pop
inc
xchg
inc
dec
adc
call
out
adc
sbb
sbb
lcall
cmp
jecxz
push
or
jg
jp
cmp
rcrl
push
rcrl
xor
pop
cmp
push
jmp
iret
ss
add
xor
cmp
cmc
std
mov
loop
xor
sub
insb
jle
or
mov
inc
xor
in
mov
pop
in
popf
xchg
test
loope
pusha
mov
insb
test
pop
jle
mov
mov
sub
insb
outsb
cmc
mov
mov
sub
mov
mov
into
in
sar
repnz
pop
repz
sahf
dec
jge
mov
add
jg
popf
jmp
or
sub
mov
xor
psrld
lods
or
sub
ret
rcrl
xor
pop
in
dec
fiadds
and
aaa
jbe
fsts
lahf
pusha
mov
jge
repz
jge
mov
and
pop
into
mov
js
add
cmpsl
xlat
mov
push
icebp
mov
enter
lcall
cmpsl
hlt
inc
ljmp
fistpl
xlat
in
adc
xor
test
int3
and
fdivr
mov
cld
push
sub
xor
aaa
ds
cmpsb
pop
mov
and
cmp
int3
jo
adc
lods
dec
pop
and
sub
adc
scas
cmp
mov
adc
fsubl
out
sub
jno
dec
ds
dec
jle
jp
cmp
aam
jg
and
sahf
jmp
lcall
scas
push
sbb
in
lahf
inc
inc
xchg
mov
imul
cwtl
mov
sub
jmp
jb
arpl
xor
xchg
add
in
mov
popf
push
out
jl
mov
mov
icebp
sti
shl
arpl
fsubl
and
pop
cltd
sbbl
pop
popf
and
and
leave
push
jmp
xlat
mov
xchg
aas
mov
mov
cmpsb
xor
sahf
dec
mov
cmpsb
xor
push
or
aad
lock
cmpsl
cmc
inc
out
xchg
jecxz
cltd
ss
sarb
adc
mov
popf
aas
repnz
fwait
js
test
aaa
xchg
decb
aam
jmp
aad
adc
rcrl
push
popf
sub
mov
sub
sub
jmp
mov
cs
cmp
add
dec
sbb
push
ret
imul
clc
cmp
das
xor
cmp
jb
cmp
dec
xchg
or
mov
mov
sub
and
xchg
testl
movsb
std
stc
push
int
stos
repnz
mov
repz
mov
mov
inc
mov
xchg
lods
mov
bound
jne
movsl
sbb
test
mov
mov
cs
ud1
cltd
jae
xor
push
sti
test
sbb
pusha
shll
cltd
push
fsubl
pop
or
fwait
lret
add
xchg
mov
cs
jbe
lcall
hlt
mov
stos
sub
mov
frstor
sbb
lahf
cli
xor
mov
add
cmp
pushf
jmp
aas
mov
jno
scas
out
in
adc
mov
int3
arpl
and
and
cli
stos
cltd
lea
data16
in
and
dec
adc
or
push
kmovw
lea
lret
cld
decl
sub
xor
adc
push
dec
or
and
insb
inc
mov
push
mov
jns
inc
jnp
xchg
inc
pop
jp
rorl
lds
mov
cwtl
shrb
mov
jns
jle
fidivrl
jp
mov
inc
push
sbb
gs
cmp
cld
out
mov
loopne
fcompl
fisubrs
mov
call
je
jl
cwtl
rcl
ret
mov
fiaddl
push
fcomps
pop
cli
mov
jg
mov
sub
mov
cmp
cmp
push
xor
lret
dec
in
ret
loopnew
xor
add
pop
jnp
shlb
jp
out
or
into
jge
je
repnz
mov
lcall
push
es
nop
jns
daa
pop
imul
add
xor
rcll
sbb
stc
cltd
xchg
clc
lahf
mov
jb
fwait
enter
out
push
mov
mov
std
pushf
mov
cwtl
sbb
push
scas
xchg
adc
jae
lods
mov
sub
or
xchg
add
lods
popa
cli
mov
cmc
push
or
or
stos
into
dec
out
or
and
mov
pop
loop
add
push
pop
sub
ljmp
jnp
andl
inc
pop
push
in
rcl
addb
addb
jns
cmc
rcrl
adc
add
ja
or
push
popf
mov
dec
sbb
jbe
mov
repz
fwait
insb
push
sahf
mov
xor
cwtl
imul
in
jle
mov
pop
jp
fimuls
xchg
movl
scas
imul
out
pop
pop
mov
insl
imul
rcr
xor
icebp
lret
in
mov
aad
pop
fistps
icebp
int
bound
insb
clc
repz
mov
sbb
outsl
sbb
dec
ret
arpl
gs
nop
or
pop
cld
hlt
insb
pushf
add
add
inc
cmpsb
sbb
int
cli
xchg
and
jl
sarb
loopne
adc
sub
or
fistps
xchg
mov
sub
dec
in
cmp
jb
es
sti
sbb
insl
push
dec
xor
dec
lahf
movsb
popf
popl
insl
out
dec
and
adc
push
inc
hlt
test
fs
cmc
ljmp
cld
xor
sti
mov
arpl
ljmp
gs
cs
mov
data16
jmp
shrl
mov
jb
out
stos
mov
jb
scas
add
mov
adc
mov
je
mov
ljmp
lret
cmc
jle
arpl
and
xchg
xchg
lods
aaa
repnz
movsb
jl
push
adc
jl
pop
jle
add
in
dec
sahf
sbb
mov
fistpl
rcrb
mov
mov
fmul
imul
ss
and
test
push
adc
push
jge
das
inc
or
jo
cmp
adc
fiadds
test
lahf
out
data16
bound
in
loopne
dec
aam
sbb
scas
push
std
dec
mov
ret
pop
mov
negb
xchg
xchg
add
cld
stc
xchg
inc
jnp
push
adc
out
mov
ss
mov
sbb
call
or
adc
jg
fisubs
push
mov
shr
shll
lds
insl
movsl
stc
sub
scas
mov
dec
pop
mov
jmp
mov
mov
dec
ljmp
add
loopne
outsl
addb
cmpsb
mov
cs
push
cmpsl
lods
mov
cltd
inc
sahf
repnz
push
jle
mov
je
push
mov
pop
shrb
mov
pop
pushf
ret
pop
loope
es
and
in
outsl
adc
cld
ror
push
sbb
icebp
jg
push
adc
inc
xchg
dec
add
push
xor
insb
in
or
outsl
pop
popf
cltd
loope
cmpsl
outsb
mov
jle
jmp
clc
inc
add
shl
push
jae
mov
dec
mov
test
mov
pop
mov
inc
gs
jle
addb
push
xor
clc
add
add
mov
mov
jne
repnz
and
lods
inc
gs
adc
sbb
outsb
sbb
scas
add
sahf
push
fcoms
mov
jo
sub
test
mov
ljmp
inc
insl
cltd
loopne
in
out
aaa
mov
cmpsl
sbb
adcb
sub
lds
icebp
movsl
shr
sub
adc
cmp
inc
das
lret
xor
int3
xchg
adc
pop
subl
jmp
rorl
cmp
ret
decl
adc
jae
and
sbb
sub
jl
jae
in
xorb
push
jg
test
pop
shl
pop
imull
dec
cmpl
xchg
rcl
xor
sub
adc
cmpsb
mov
sub
mov
push
mov
jmp
sbb
inc
and
ficomps
xchg
inc
add
lods
xor
jle
xchg
insl
push
cmpsl
je
mov
push
jne
rol
xchg
add
cltd
adc
push
sbb
pop
lods
filds
xchg
das
jnp
adc
mov
mov
xor
shll
mov
and
pusha
addr16
cmp
test
or
lock
mov
pop
mov
or
repz
push
and
shr
jo
xchg
inc
ds
clts
inc
fldcw
xchg
sub
dec
insb
bound
cmc
dec
adc
mov
cmp
and
or
push
xchg
jle
popa
jnp
inc
or
in
test
push
into
movsb
pop
sub
lcall
mov
xchg
ja
dec
or
stc
and
outsb
cmc
ja
push
sub
jne
neg
js
pop
mov
das
ret
jmp
test
pusha
repz
jne
ds
jp
lock
in
daa
mov
rorl
sub
cs
pop
cmp
dec
aad
mov
push
in
movsl
fbld
das
adc
adc
pop
pop
inc
aas
sti
mov
adc
push
adc
test
stos
and
mov
jg
and
rolb
scas
jl
cmp
ds
fisttpl
and
outsl
jecxz
icebp
cmp
add
and
scas
pop
lods
fs
jo
sub
pushf
dec
out
mov
lahf
rcr
xor
lret
push
ss
mov
outsb
int
pusha
sbb
shlb
lret
xor
scas
inc
xchg
out
mov
mov
std
rol
add
repz
jle
adc
xlat
mov
das
shld
gs
cmp
jno
adc
xor
mov
int3
cmc
outsl
add
insb
pop
js
xchg
sbb
push
pop
xor
ret
sti
pop
mov
pusha
xor
mov
and
jnp
fdecstp
inc
test
iret
in
push
sbb
and
fnstsw
lret
fs
daa
cmpsb
fisubrs
fistps
cmp
enter
call
ret
lods
movsb
imul
xchg
fistpll
inc
sub
mov
cmc
pop
aad
in
incb
stos
iret
pop
cmp
sbb
add
test
jnp
dec
xchg
movsl
jge
inc
xchg
cmp
mov
push
in
popa
xor
inc
sbb
stos
add
sti
mov
fnstenv
int
dec
mov
adc
adc
insb
sub
negl
add
sbb
mov
add
sbb
iret
or
nop
push
and
fs
xchg
int
test
out
lahf
mov
xor
pushf
push
inc
repz
test
xchg
inc
mov
sub
sub
xchg
mul
mov
inc
mov
sub
cmp
jbe
adc
notl
pusha
add
adc
das
ret
mov
lea
cmp
adc
push
sbb
or
fstpl
lahf
es
outsb
jb
popf
cmpsl
xchg
mov
mov
cmc
xor
push
xchg
andl
les
inc
inc
mov
ret
mov
pop
mov
mov
sbb
dec
loopne
inc
sarl
push
sub
in
xlat
or
sub
outsl
data16
inc
mov
pop
aas
je
in
xchg
mov
add
xor
jno
pop
sarb
xchg
jecxz
xlat
and
imul
sbb
jg
jp
cmp
daa
and
pop
daa
shrb
and
or
push
sub
xchg
pushf
fldcw
iret
movsb
cs
lods
stos
mov
add
sbb
add
dec
cwtl
es
and
aaa
repnz
js
or
pop
lret
push
mov
inc
fwait
and
fildl
jle
pop
daa
in
add
sti
test
cwtl
push
test
outsb
cmp
js
in
mov
mov
outsl
mov
repnz
lahf
aaa
xchg
xor
hlt
lcall
push
mov
push
or
icebp
cmp
aam
stc
dec
std
mov
mov
push
inc
clc
roll
jle
sbb
out
inc
mov
in
ret
jbe
std
mov
mov
or
and
daa
push
mov
ja
iret
dec
ss
pop
movsb
cmp
pop
mov
clc
xor
dec
pop
jnp
mov
ret
or
sub
movsb
ds
jg
pop
mov
iret
mov
jne
stc
mov
cmp
sbb
push
daa
ret
je
sub
add
or
lods
test
loope
out
pop
sub
lcall
sub
outsl
fucomi
mov
out
mov
jg
sbb
sub
addb
xchg
jnp
loop
addr16
enter
addl
fldcw
xchg
pop
mov
inc
scas
out
or
mov
iret
lcall
imul
xor
pusha
xor
sbb
inc
xor
inc
daa
icebp
ljmp
sbbb
aas
mov
aaa
repnz
repnz
mov
pop
xor
jmp
push
sub
jb
enter
scas
cmp
adc
iret
add
inc
pop
aad
push
popl
xor
int
mov
sbb
cmp
js
scas
inc
lcall
and
daa
shll
fistl
pop
inc
dec
mov
and
test
jno
mov
outsl
xchg
xor
mov
sub
sbb
in
jnp
pop
dec
pop
push
ss
cmc
mov
adc
inc
jno
cwtl
out
pop
xchg
add
and
mov
scas
mov
xlat
aad
lods
into
mov
sbb
mov
jbe
stc
push
mov
clc
ds
stos
mov
sbb
inc
dec
or
test
mov
loope
xchg
rclb
or
pop
fsts
push
ret
pop
pop
sahf
aam
lahf
jmp
out
xlat
out
lret
push
and
cmpsl
rol
push
mov
sbb
test
push
inc
and
push
pop
mul
scas
or
iret
xchg
adc
mov
cli
popf
inc
sub
pushf
add
into
popf
sub
push
js
jl
jne
xchg
or
mov
xchg
out
movsl
test
aaa
divl
sbb
push
pop
nop
xor
jle
dec
ds
lods
pusha
divps
lods
push
sub
mov
imul
xchg
imul
cmp
js
mov
test
loope
cmp
jge
das
sti
mov
cmp
push
adc
icebp
or
sub
adc
fistl
mov
mov
aam
mov
popa
jp
add
push
cmc
inc
pcmpgtb
pop
mov
lock
clc
push
sbb
xor
ret
cld
out
mov
push
scas
xchg
stos
push
adc
test
sub
mov
imul
jne
push
test
mov
adc
in
lcall
dec
in
push
scas
clc
sbb
adc
jp
push
popa
std
cld
daa
data16
inc
insl
pusha
xchg
imul
inc
xchg
repz
outsb
xorl
push
outsl
add
push
insl
add
jmp
rcr
cli
cmp
mov
and
pop
rclb
adc
add
int
dec
add
mov
mov
push
dec
pop
cmc
js
jmp
pop
into
inc
in
enter
push
dec
bnd
data16
mulb
loop
popa
aaa
cmp
pop
mov
fwait
sub
mov
sbb
mov
repnz
outsb
mov
xor
dec
mov
mov
mov
xor
mov
aam
jae
dec
mulb
pop
lar
in
pop
push
sbb
cltd
dec
fstps
int3
push
gs
inc
lods
cmp
sbb
lahf
push
pop
jns
test
inc
pop
inc
ror
mov
dec
sub
mov
jmp
inc
loop
mov
sbb
negb
out
dec
sbb
push
cld
flds
sbbb
or
cld
popf
pop
mov
cmp
push
xchg
in
int
rorw
mov
add
mov
push
dec
mov
insb
faddl
jb
js
push
sub
fcmovnb
fdivl
enter
sbb
and
adc
enter
inc
loopne
dec
xorl
test
pop
pop
aad
fstps
icebp
sbb
rcrl
loopne
insl
js
and
sub
arpl
movb
int3
and
arpl
enter
jne
sbb
mov
icebp
scas
add
sahf
cltd
mov
lods
test
rorb
in
jp
dec
stos
arpl
jle
negb
xchg
cmpsl
xchg
cmp
clc
xchg
mov
xchg
js
cmpsl
pop
add
sub
cld
sbb
xchg
mov
icebp
jae
cmpsb
fadd
mov
cltd
jle
ret
dec
leave
sbbl
mov
sti
push
jb
add
inc
jne
out
decb
xor
push
imul
push
mov
jne
adc
sbb
or
cmpsb
daa
popa
dec
ja
les
shlb
inc
lods
rcll
mov
cld
daa
mov
lds
jg
mov
bound
jae
sub
inc
repnz
jmp
jecxz
xchg
sub
shll
test
mov
sbb
inc
jge
push
cmp
fildl
inc
xor
sbb
mov
mov
dec
imul
shrl
sbb
or
jg
jb
lods
je
fildll
sbb
sbb
mov
sbb
fptan
shll
shl
test
fsubrs
cmp
mov
inc
mov
test
dec
das
cmp
imul
mov
dec
add
xchg
pop
jno
and
in
cmp
fstpt
gs
pop
sub
arpl
movsb
mov
jg
cwtl
jg
fst
test
data16
and
int3
in
pushf
aaa
mov
imul
fistl
xor
out
jmp
movsl
dec
xor
cmpsl
shlb
lods
or
shr
xor
imul
lcall
inc
loopne
xchg
adc
jae
lahf
dec
adc
jbe
stos
je
mov
ficoml
call
sbb
inc
aad
loope
bnd
push
inc
push
xchg
xor
in
add
push
test
cmp
mov
je
cmp
andl
lea
call
sub
adc
aam
cld
lret
fwait
sub
stc
popf
ljmp
mov
cmpsb
and
lret
ljmp
in
and
mov
pusha
and
sbb
pop
mov
push
mov
cmpsl
test
push
xchg
mov
mov
inc
or
sub
clc
add
test
cmp
xchg
pop
in
push
pushf
push
xchg
subl
out
pop
mov
popf
std
in
dec
stc
sbb
inc
sbb
ljmp
sub
subl
or
jnp
sub
pop
mov
jge
xchg
mov
loope
push
jae
mov
mov
and
and
xchg
mov
push
stc
test
push
sub
cwtl
xor
inc
cmpsl
fdivrs
das
and
scas
stos
sub
sahf
xor
and
cmp
ss
in
and
cmc
cmpsl
cs
fsubs
jecxz
push
adc
adc
xor
jbe
lretw
dec
scas
mov
dec
dec
ret
adc
inc
and
xor
les
pop
mov
xchg
scas
pusha
cs
aad
imul
dec
or
lret
cmpsl
repz
icebp
add
push
int3
fldl
sub
je
mov
adc
scas
jp
add
fs
sub
dec
shl
dec
rorb
lds
gs
icebp
ud1
loopne
mov
sbb
movsl
sti
orb
push
and
add
out
loope
add
and
sub
stc
and
sbb
sarb
fs
divl
sahf
mov
shr
or
rcrl
pushf
rcll
fcmove
pop
int3
and
cwtl
and
pop
out
lods
fcomp
scas
mov
xchg
psubusb
test
int
mov
mov
fisttpl
pop
inc
and
fisttpl
cmpl
sbb
test
lods
adc
jo
mov
pop
leave
adc
cli
gs
fnsave
pusha
pop
outsb
nop
stc
xchg
sbb
adcb
movsl
xlat
ficompl
aam
das
in
pusha
cltd
popf
pop
jp
lods
jno
je
lcall
mov
fiadds
cltd
sub
mov
adc
mov
sarl
sub
xchg
mov
arpl
cwtl
lods
dec
xor
call
js
cmp
js
insb
jge
stos
mov
inc
pop
adcb
sub
push
dec
data16
adc
insb
aam
je
adc
test
std
repz
aas
nop
fistps
push
mov
add
xchg
sub
into
cmp
popf
xchg
dec
les
push
adc
xchg
push
mov
xor
stc
leave
mov
or
jae
aas
test
fs
insl
sbb
int
push
or
lock
js
mov
dec
pusha
stos
push
xchg
mov
out
ret
pop
mov
ret
js
jle
add
jo
mov
xor
add
jmp
xchg
in
add
fsubs
lahf
mov
stos
popf
insl
test
mov
mov
faddl
imul
clc
xchg
pop
dec
aam
inc
mov
cmp
into
push
scas
ljmp
sahf
adc
push
and
roll
mov
nop
jmp
sub
cmp
ret
or
inc
aas
cmp
bswap
xchg
mov
fistps
mov
sti
out
orl
pop
xchg
inc
mov
aam
out
sbb
aaa
or
notb
xchg
daa
cmp
icebp
paddd
call
xchg
stc
or
ja
xor
ljmp
loop
sbb
mov
dec
popa
add
cmp
inc
mov
cmp
lcall
sahf
iret
push
inc
add
insb
pop
ret
lds
divb
push
inc
jl
pop
sbb
stos
xchg
push
push
into
or
idivb
pop
aaa
cmp
addr16
outsb
fcom
lahf
or
popf
mov
mov
mov
mov
pop
cmovo
xchg
leave
inc
das
outsl
push
cmc
or
out
pop
in
aam
inc
into
dec
mov
std
arpl
pushf
int
aam
and
fsubs
outsb
cwtl
xchg
adcl
push
out
repnz
mov
sbb
mov
dec
shlb
aam
push
gs
xchg
add
or
and
mov
sbb
adc
add
mov
push
lds
clc
lea
data16
sub
push
mov
or
cmp
negb
outsb
loop
mov
jbe
cmp
sub
push
mov
lods
call
sub
cmp
and
pop
das
pop
mov
out
decb
push
cmp
sbb
and
mov
cwtl
pop
sbb
pop
xchg
rep
xchg
sub
pop
clc
mov
inc
dec
cmpsl
sub
in
push
mov
mov
mov
cmp
ror
push
and
ja
in
int3
pop
jnp
push
push
dec
cmp
mov
shll
add
out
clc
pop
cmp
rorl
std
mov
xor
pop
jne
mul
lock
or
shrb
push
pop
jnp
test
out
outsl
stc
push
pop
pop
add
dec
cwtl
jp
pop
test
mov
popf
xchg
scas
stos
lahf
pop
insl
xchg
aad
sbb
pop
pop
mov
hlt
int
adc
adc
jae
mov
in
jl
cmp
syscall
jle
and
mov
sub
jp
ret
mov
mov
ja
pop
cmp
fsubr
mov
mov
sarl
xor
sub
into
xchg
or
xchg
int
cmc
sbb
xlat
lret
shlb
jae
sti
inc
xor
nop
mov
cmp
push
arpl
dec
xchg
arpl
out
xchg
movsb
sti
movsb
push
fwait
or
push
mov
or
aad
mov
adc
insb
inc
xchg
push
pop
pop
mov
cli
adc
dec
mov
test
xchg
lret
fnstcw
aas
lds
mov
sub
cli
idivl
imul
movsl
push
std
je
icebp
icebp
out
and
adc
mov
xor
mov
add
jne
dec
aad
cltd
sarl
mov
jo
mov
and
add
xlat
int3
out
mov
mov
inc
xor
jle
out
popa
aad
cmp
fcmovbe
or
ljmp
das
leave
mov
scas
mov
mov
xchg
imul
iret
mov
aad
cmp
dec
lock
add
dec
inc
cmp
lds
xlat
into
loopne
sbb
push
or
repz
dec
cltd
and
dec
ss
jle
dec
or
arpl
mov
fldenv
rcrb
ds
shlb
adc
xor
jne
inc
mov
insl
pop
mov
dec
sbb
xor
jnp
pushf
andb
nop
stos
push
addr16
jnp
das
sbb
mov
decb
das
mov
add
cli
mov
addr16
xor
arpl
je
push
push
mov
inc
in
inc
inc
push
inc
ja
cmpsb
loopne
rcl
out
jl
es
shll
xchg
stos
shll
shll
inc
dec
or
adc
cmp
cmpsl
cmc
out
bound
jb
ja
in
sbb
push
fstps
fs
sahf
or
dec
cltd
lds
adc
xor
add
mov
push
inc
pop
fcoml
insl
cmp
pop
mov
dec
xchg
mov
inc
mov
icebp
mov
sti
gs
jmp
shll
insl
dec
add
jmp
loope
mov
pop
cmpsb
cmp
push
cs
sub
jo
aam
jne
je
mov
dec
mov
pop
adc
push
rorl
pushf
xchg
xchg
pop
ja
insl
cld
out
scas
addl
add
out
pusha
mov
sahf
push
daa
mov
pop
into
xchg
popf
push
imul
and
pusha
mov
pop
push
jp
mov
cmp
cmp
jnp
mov
xchg
jbe
xor
add
jg
inc
jb
xchg
test
sbb
fdivrl
leave
inc
jg
in
xchg
ret
mov
xor
sbb
loop
dec
test
cmp
jl
fdivl
xchg
mov
lahf
ljmp
and
mov
into
lcall
jge
mov
inc
lods
add
and
pop
xchg
mov
ficoms
cmpsb
fidivrs
sti
mov
out
mov
and
fadds
sub
inc
cs
and
xchg
sti
push
jo
mov
int
das
and
push
xchg
jb
cli
subb
ror
sahf
fimull
pop
sbb
in
clc
or
jno
xchg
xchg
xchg
mov
mov
cmp
mov
mov
add
jecxz
mov
popf
and
orl
sar
leave
adcb
push
add
mov
pop
and
addb
xor
cwtl
cld
into
arpl
test
enter
sub
dec
add
jp
clc
cltd
cmp
dec
jnp
and
ret
add
jne
nop
aam
mov
ret
push
rcrb
xor
xchg
adc
sub
inc
sbb
or
or
int3
sbb
add
imul
add
mov
outsl
cmpsb
iret
sub
clc
dec
inc
std
mov
repnz
js
mov
fadd
cmc
sbb
cltd
divb
lods
subb
sub
lahf
lahf
ret
add
adc
jns
rorl
inc
jnp
cmp
mov
sbb
cmp
out
sbb
push
jmp
add
jnp
mov
insb
lods
cmpsb
inc
int3
shlb
les
shlb
or
fcompl
mov
pushf
out
out
lahf
in
sub
into
insb
push
cmp
icebp
mov
lcall
add
sub
mov
lret
cmp
mov
pusha
loopne
mov
add
int3
pusha
xor
cmp
sbb
rclb
std
xchg
aad
or
outsl
mov
jnp
movsb
test
cld
adc
lret
lahf
adc
outsl
test
jmp
cltd
add
sbb
dec
daa
dec
adc
cmp
mov
push
sbbl
inc
jae
sahf
pusha
popf
lea
daa
mov
lcall
pop
jg
cltd
imul
sbb
dec
popa
sahf
outsl
xchg
movsl
push
leave
scas
cli
into
jo
js
cli
ret
flds
loope,pn
and
sbb
jbe
mov
sbb
mov
les
xchg
push
dec
push
mov
in
mov
and
mov
nop
lea
xor
jge
xlat
mov
mov
xor
fstpl
jle
xor
lods
cmp
les
sub
fldl
rorb
test
sbb
testl
mov
or
pop
rolb
push
scas
sarb
sbbb
pop
and
int3
addr16
add
push
mov
mov
loope
adc
pop
xor
std
inc
leave
insb
mov
out
jp
pop
mov
call
inc
repnz
fwait
aaa
sub
ret
xchg
push
adc
add
enter
cltd
insb
jg
xchg
jbe
mov
adc
lcall
out
cmp
or
pop
jne
jb
in
iret
xor
int3
pop
xor
cmpsl
bound
cmc
inc
mov
pmaxsw
cmp
addr16
pushf
add
lea
sbb
add
into
jg
lahf
push
mov
mov
stc
scas
orb
cli
adc
lcall
sbb
mov
imul
testb
faddp
js
cmpsl
outsl
add
jg
dec
andl
xor
scas
jecxz
sbb
fsubrl
inc
and
movsb
daa
imulb
dec
mov
add
js
jmp
mov
xchg
inc
scas
sub
clc
inc
orl
daa
sub
jo
sub
out
add
bound
push
push
repnz
inc
in
push
fdivp
aad
or
stc
je
fists
and
push
add
xor
mov
aam
mov
mov
ror
out
dec
scas
push
je
mov
daa
cltd
enter
sti
mov
mov
je
test
push
jl
pushf
stc
loopne,pn
pop
movsl
add
adc
mov
xor
adc
cmpsb
hlt
out
test
dec
add
dec
mov
cmp
jns
scas
adcl
nop
in
subb
cwtl
icebp
xor
test
jl
arpl
lret
push
and
fcmovnb
arpl
pop
push
push
andl
push
leave
sub
jns
xchg
cmp
push
dec
xchg
xor
xor
xlat
push
sub
xlat
and
loop
sbb
ds
es
dec
stos
outsl
repz
mov
jmp
add
add
inc
xchg
lock
xchg
test
xchg
xchg
cmp
cmc
aas
cmp
testl
mov
cltd
pop
add
push
ret
mov
cwtl
fildll
cmp
pop
repz
ja
fstps
pop
sahf
mov
addr16
imul
ret
test
scas
adc
cltd
and
xchg
and
sbb
xchg
sub
dec
sbb
add
nop
jno
or
pusha
stos
rclb
sbb
iret
enter
mov
ret
mov
arpl
sub
xor
call
clc
or
cwtl
repnz
mov
fstpl
sub
pop
outsb
and
lret
call
mov
add
sub
or
pop
adc
xor
aad
xorl
mov
or
add
loope
jno
push
jmp
out
jno
or
and
vmovdqu
mov
jp
xchg
jno
pop
mov
loopne
dec
and
bound
popf
xchg
dec
jp,pt
jecxz
sub
and
jb
insl
repnz
xchg
les
pusha
xor
ret
fdivrp
std
ret
sbb
insb
mov
out
dec
ror
mov
mov
mov
movsl
cli
cwtl
in
sub
std
lcall
push
stc
pop
dec
and
pop
stos
xchg
popa
pop
cmp
ljmp
subl
fimull
and
cmpsb
pop
adc
pop
push
cltd
dec
mov
mov
sub
daa
pminub
xchg
mov
mov
cld
and
test
sub
in
sub
push
flds
in
decb
sbb
sub
cwtl
add
imul
stos
bound
inc
sti
lds
cmp
jecxz
aam
subl
in
inc
movsl
mov
jge
push
aad
call
pop
jo
jmp
sar
xchg
xchg
out
in
xor
jnp
outsb
dec
outsb
repnz
ja
jge
xchg
push
push
mov
cwtl
xchg
sub
mov
sub
sbb
mov
out
xor
adc
xlat
fbld
cmc
dec
push
add
fiaddl
das
addl
jno
mov
or
jnp
push
das
das
aaa
sbb
jns
insl
add
mov
imul
loop
push
add
addr16
jg
ret
iret
test
addr16
push
mov
push
iret
jle
sbb
or
mov
push
mov
gs
pop
mov
inc
inc
les
jmp
sub
loope
inc
sub
jnp
and
mov
jae
in
lock
cs
lret
inc
mov
adc
add
mov
jb
shll
sbb
orb
jns
loop
je
xchg
sti
lahf
es
or
int3
popa
sbb
fldcw
sub
or
sahf
test
ret
xor
adc
pop
fidivs
add
out
mov
push
push
inc
pusha
pushf
mov
cmc
or
push
test
add
dec
mov
or
push
sbb
lods
ds
mov
push
outsb
push
fld
int
sti
xchg
push
cmp
repz
bound
inc
ja
inc
addb
enter
push
lret
mov
add
es
and
mov
jno
dec
xchg
fadds
movsb
test
adc
pop
dec
je
cmp
xlat
loop
cmpsb
dec
and
int
stc
push
adc
sbb
fwait
test
stc
sbb
jmp
andl
push
adcl
jo
adc
jge
fldenv
aaa
daa
push
addr16
and
cmp
cmp
jmp
rclb
sbb
fst
ret
scas
mov
mov
fsubrl
pop
ret
insl
push
sbb
push
mov
xor
xor
sub
or
push
cmp
mov
or
pop
mov
jecxz
cwtl
sahf
jns
cmp
in
lds
mov
fsubr
or
dec
inc
loop
shrl
mov
mov
cmp
mov
into
data16
clc
jl
and
xchg
add
lahf
pop
lret
nop
fnstsw
loope
mov
pop
and
adc
dec
add
mov
mov
sub
outsl
and
push
jl
xor
addr16
dec
mulb
out
fcomip
inc
cli
inc
push
cmp
cmpsb
leave
adc
inc
mov
inc
adc
sub
push
aam
movsb
mov
or
or
out
popf
cmp
sbb
cmp
xor
adc
or
and
aam
cmc
xchg
mov
cld
push
pop
pop
xor
adc
movsb
push
adc
sbb
mov
shl
mov
imul
test
cmp
aam
mov
lock
repz
and
in
mov
das
cmp
loope
push
movsl
outsl
and
pusha
in
fildl
inc
rorl
cmp
jge,pn
mov
jbe
rorb
scas
push
sub
cltd
xor
js
loopne
cmp
push
lods
jl
shr
shl
leave
mov
add
in
or
lods
add
mov
sahf
clc
xchg
cmp
rorl
lret
int
bound
repnz
add
push
movsl
lods
cli
sbb
dec
lret
mov
add
in
mov
push
pop
adc
pop
clc
adc
es
leave
shl
lcall
jle
dec
pop
std
xor
push
cmp
xchg
or
mov
popa
pop
push
jge
adc
cld
inc
shlb
imul
lcall
movsl
jbe
sbb
fdivrl
or
sbb
icebp
sbb
add
cmp
mov
ljmp
ds
jns
pop
push
rcrl
jg
mov
outsb
xor
hlt
jmp
popf
aad
aas
aam
mov
jnp
xchg
push
subl
shl
sbb
or
cmpsl
dec
mov
sub
and
cmp
mov
push
mov
cwtl
mov
out
pop
out
dec
loop
subb
lds
xchg
pop
pop
dec
cli
mov
sub
test
push
aaa
test
ret
mov
popf
int
or
mov
mov
xchg
movb
sub
lahf
and
and
jbe
pop
scas
andl
xchg
push
es
and
mov
shl
dec
dec
mov
cmp
in
cmp
test
mov
je
push
push
aam
mov
push
push
ss
fs
cld
loop
test
dec
cmp
in
xchg
nop
mov
jns
sbb
out
mov
xchg
push
cmpsl
iret
test
and
enter
xor
js
push
xor
push
jp
les
mov
inc
shr
lds
icebp
adc
push
sbb
mov
mov
fstpl
sbb
inc
lret
jno
sub
lea
jns
into
loopne
icebp
divb
sub
subl
mov
fildll
add
jg
and
pop
clc
push
out
into
out
jo
or
xchg
cmp
test
lcall
pushf
pop
push
mov
arpl
std
jg
adc
adc
cmp
jno
int3
inc
std
pop
cmp
jle
mov
inc
loopne
xchg
cld
sbb
xchg
lret
fs
es
hlt
setnp
mov
cltd
jecxz
insl
in
cmp
fisubrl
mov
jmp
adc
cwtl
cli
shrb
add
inc
push
aam
pop
das
mov
push
jb
adc
fidivs
sbb
rcll
fwait
xchg
call
fsubr
mov
nop
adc
insb
das
inc
into
jg
ret
or
adcb
xor
out
aas
cmp
or
and
js
insl
mov
or
pop
scas
add
cmpsb
in
stos
inc
lret
jecxz
fsubrp
pop
jecxz
aam
fdivl
mov
lahf
and
push
push
cmp
pop
cmp
adc
insb
pop
ds
movsb
enter
add
and
imul
mov
mov
hlt
in
aaa
sarl
in
mov
andl
out
xor
jp
imul
sub
out
and
add
insb
pop
cld
sub
into
iret
push
pop
gs
pop
adc
xlat
jo
mov
ret
mov
imul
lret
mov
xlat
insl
addr16
rcrb
adc
rclb
jge
push
xchg
dec
and
or
cmp
lcall
in
enter
jno
cmp
push
jns
aam
ror
int
or
das
fs
mov
addr16
je
iret
mov
ja
cld
lods
dec
sbb
mov
push
test
lds
pop
add
enter
adc
cmp
outsb
rolb
stc
xchg
movsb
sub
test
jo
push
fsubr
and
sbb
cwtl
pop
adc
icebp
aas
sub
add
js
sbb
xor
sahf
push
add
je
sbbl
clc
mov
mov
mov
mov
dec
pop
leave
xchg
das
dec
movsl
pushl
add
stos
dec
aad
les
fstpt
leave
mul
adc
stos
adc
sub
push
pop
cmp
cli
cli
mov
sbb
sub
dec
pop
jle
lds
and
lcall
imulb
inc
mov
movsb
lods
ja
shll
stos
push
mov
dec
repnz
xchg
or
shrl
and
jns
mov
lea
pop
add
test
push
out
mov
and
std
jmp
pop
inc
aaa
stc
sbb
sub
sbb
nop
xor
clc
stc
test
ljmp
push
mov
jns
cmova
xchg
pop
cmpsl
mov
data16
addb
jg
push
mov
dec
aas
mov
jne
jb
cmp
inc
out
xchg
jnp
aam
push
lret
add
test
lea
push
sbb
fucom
push
adc
xchg
scas
repz
imul
aaa
fsubrs
test
pop
scas
dec
inc
jae
into
add
test
es
sbb
push
mov
stc
adc
push
sub
pop
xchg
in
sbb
lods
sbb
subl
lock
sbb
shlb
dec
jp
in
jns
mov
jl
inc
test
stc
jecxz
add
dec
or
iret
shrb
cmc
leave
adc
sarl
imul
pop
or
mov
pop
adc
cmp
sub
test
shll
jl
jbe
inc
jbe
dec
add
ficompl
inc
add
or
data16
jmp
dec
cmc
imul
fs
shrb
aaa
repnz
imul
jns
iret
cmc
add
pop
ret
fmulp
jne
nop
jb
xor
jb
lock
xchg
mov
ds
and
adc
adc
out
pop
mov
ds
call
xchg
mov
mov
or
icebp
idiv
mov
xor
fisubl
jb
push
mov
cmp
out
cli
inc
push
mov
and
jo
and
xor
stc
sub
insb
push
pop
cmpsb
add
push
sub
ljmp
dec
pop
loopne
rol
add
push
xor
dec
gs
xor
mov
mov
jp
xor
popa
iret
test
out
mov
cld
or
int3
lcall
adc
mov
jge
loop
orb
out
gs
daa
mov
inc
outsb
inc
movsb
imul
daa
xchg
ja
mov
cmp
aaa
or
pop
loopne
xchg
jbe
mov
mov
repz
and
scas
push
mov
sahf
fiaddl
push
and
and
aas
shrl
hlt
rclb
cs
xor
aam
mov
les
xchg
dec
int
ret
popf
outsl
test
push
pop
leave
add
bound
imul
mov
pop
pop
scas
mov
test
xor
aas
or
mov
hlt
mov
push
jle
and
insb
scas
adc
sbb
inc
outsl
cmp
movsl
sti
movsb
jnp
mov
cmp
ret
inc
mov
push
sarb
loop
cmp
dec
mov
test
jb
nop
mov
mov
dec
add
aas
xor
add
jo
sbb
sub
xlat
test
leave
js
cmc
xchg
push
sbb
pop
lods
dec
or
xchg
inc
das
cmpsb
mov
adcb
loop
in
jno
leave
inc
jb
dec
sbbl
mov
mov
mov
data16
hlt
subb
push
xchg
loopne
sbbl
daa
rol
dec
sbb
mov
cmc
fildl
adc
inc
sub
lea
out
xchg
mov
xor
sahf
adc
out
dec
cmpsl
lcall
mov
jo
negl
jnp
bound
xorb
cltd
ljmp
sbb
movsb
jbe
jl
cmc
push
mov
lcall
dec
out
scas
inc
cs
jle
cmpsl
cld
cmpl
and
cwtl
xor
dec
sbb
loop
pop
stos
repz
jg
daa
add
mov
xchg
push
fwait
aad
xchg
lcall
ljmp
sub
xchg
pop
mov
aad
push
gs
shl
adc
insl
cs
movsl
test
orb
add
jmp
mov
cmp
dec
stc
inc
lock
push
xlat
jecxz
flds
mov
fdivrs
movsl
xor
cmpsl
xchg
cmp
cltd
imul
xchg
sbb
mov
adc
push
test
lahf
sbb
stos
xchg
sub
insb
or
lds
add
movsl
add
jp
and
sbb
aaa
cltd
rcll
push
pop
cmc
mov
add
xchg
adc
push
jb
ljmp
in
push
inc
enter
jmp
mov
push
mov
mov
loope
pop
mov
mov
scas
push
xchg
gs
cmpsl
rcrl
test
lcall
scas
leave
adc
sahf
mov
out
cli
xchg
pop
dec
jecxz
jmp
pop
jo
cmp
addb
movsl
scas
sti
xchg
push
rcrl
insl
enter
and
cmpsl
xchg
add
dec
dec
les
icebp
out
pop
push
or
cmc
sub
xchg
xchg
hlt
cmp
rol
inc
adc
fwait
shll
push
aaa
push
sbb
call
push
pop
imul
xor
lahf
stos
add
sti
daa
rol
into
ja
in
add
cli
xchg
xor
out
ret
lret
sbb
pop
and
jg
loopne
clc
jl
repnz
mov
lret
jb
rolb
incb
inc
xchg
inc
adc
mov
mov
cs
push
scas
test
jne
lea
stos
cmp
lret
sbb
pop
jns
mov
fsubs
push
int3
or
adc
call
pop
sub
mov
mov
pop
dec
rdmsr
dec
cmc
and
push
jp
ficompl
xchg
push
div
ljmp
mov
imul
cmc
pop
imul
lret
sahf
cltd
mov
dec
je
cwtl
inc
aaa
mov
cld
cmp
push
mov
xchg
dec
dec
cwtl
fmull
outsb
call
les
xlat
clc
jbe
pop
cmpsl
stos
mov
and
fmul
das
xor
mov
cmc
sub
cmpsb
push
aad
in
imul
dec
mov
xchg
xchg
lcall
movsb
pop
aas
cmp
inc
xor
pusha
inc
and
or
cmp
mul
idivb
lahf
testl
xor
cmp
outsl
shl
into
data16
ret
sbbl
bound
pop
sub
pop
jge
adc
test
int3
sbb
mov
imul
cwtl
sub
sub
nop
rorb
jnp
out
mov
fcmovu
push
repz
icebp
jmp
inc
jle
out
decl
and
pop
mov
insl
pop
or
dec
lods
aam
mov
or
aas
jae
inc
add
dec
roll
lea
jae
mov
and
and
sbb
xchg
jge
scas
mov
add
gs
add
pushf
out
mov
dec
in
mov
xchg
cmp
push
cmp
adc
iret
nop
popf
lods
jno
scas
mov
xor
and
cmp
movsb
jae
push
add
repz
mov
leave
lahf
mov
gs
adc
aad
lods
in
es
dec
jnp
sbb
push
pop
pop
push
movsb
aaa
outsl
sbb
repz
push
xor
pushf
pop
fs
mov
leave
sub
lods
inc
mov
stos
xchg
jl
push
jge
jbe
out
mulb
sarl
ss
cmp
sbb
outsl
xchg
push
aaa
loop
ja
inc
iret
addr16
sbb
mov
dec
lcall
outsl
or
sbb
mov
jle
mov
sub
and
arpl
mov
repz
sbb
loop
xor
xchg
sbb
test
loope
int3
sbb
pop
sub
xadd
cmp
les
std
mov
fld
mov
cmc
test
into
mov
andl
bound
leave
psrlw
stos
mov
lods
or
xor
xor
or
testb
daa
mov
rol
out
pop
cltd
dec
arpl
jle
pop
enter
dec
fildl
sub
cli
jns
pop
pop
ret
mov
in
mov
or
inc
pop
push
push
pop
das
lods
fiaddl
mov
sar
xchg
call
adc
addr16
jecxz
enter
andb
fnstenv
loopne
inc
pop
xchg
ss
ljmp
cld
push
outsb
jne
mov
pushf
xchg
int
pushf
push
pop
mov
int
mov
aad
aas
or
push
test
push
jns
push
nop
jecxz
cmpsl
fistpl
mov
out
outsl
fdivl
bnd
push
inc
movsb
arpl
mov
sbbb
cpuid
push
movsb
jge
cmp
or
shr
mov
hlt
and
push
shll
mov
cmpsb
and
shll
daa
push
lods
pop
jl
aam
push
jbe
repnz
push
jg
pop
mov
mov
xchg
out
hlt
dec
loope
aas
loop
out
rclb
repz
test
jbe
mov
stos
rclb
imul
mov
jle
xchg
nop
pop
sub
inc
or
pop
aaa
mov
jbe
into
add
pop
push
pushf
ja
sti
in
jbe
push
sub
negb
dec
inc
push
in
push
arpl
add
shlb
xchg
stos
jns
cmp
or
sbb
dec
inc
sahf
or
or
cltd
cmpsb
adc
push
subl
mov
and
clc
addr16
mov
pop
jp
pop
push
jmp
fidivrl
jb
gs
pop
sub
scas
jnp
ret
push
ja
jg
xor
popa
fcoml
hlt
mov
and
scas
xchg
rcr
xorl
xchg
xchg
adc
das
outsb
pop
push
sbb
ficoms
inc
sbb
mov
add
add
rorl
mov
dec
push
pop
cmp
cld
dec
cmp
scas
mov
cmp
sbb
mov
pushf
push
cltd
pusha
push
test
mov
or
xlat
popf
jnp
jne
push
xor
xchg
adc
inc
mov
ja
inc
add
lock
sahf
pop
cmpsl
idivl
decl
jle
or
lret
mov
jno
lret
mov
jbe
and
cmp
daa
dec
xchg
adc
addr16
clc
xchg
rolb
sbbb
mov
add
cmp
arpl
mov
les
aaa
push
push
add
aaa
jae
repz
lock
fadds
dec
adc
movsl
push
lock
js
dec
sbb
mov
fmuls
fisubrs
cmpsl
jbe
mov
sbb
iret
push
push
int3
nop
jle
and
mov
pop
push
dec
sub
pop
cmp
enter
cmp
sbb
cli
out
mov
pop
rcrl
adc
ja
cmp
shlb
sub
inc
shlb
bound
dec
test
frstpm(287
shll
add
mov
cmpsl
jb
std
leave
cmpsb
mov
fdivrs
push
mov
xlat
mov
mov
sub
mov
sbb
sbb
pop
inc
mov
daa
jo
inc
lret
pop
mov
popf
lret
xchg
inc
lods
ss
cld
pusha
jo
jge
andl
cs
movsl
lock
xor
pop
mov
add
add
jae
xor
mov
out
aad
lret
and
repnz
nop
jne
inc
cmp
adc
xchg
mov
std
mov
push
inc
cmp
hlt
xlat
dec
popa
addl
bound
sbb
call
add
sahf
std
aaa
sbb
ds
dec
arpl
inc
cmp
mov
mov
je
mov
mov
sbb
aas
fdivp
ljmp
jge
js
jno
into
cmp
iret
xchg
jae
daa
orl
push
pop
imul
pop
mov
clc
fsubrl
dec
push
loopne
inc
enter
jbe
pop
dec
jle
int3
fisubrs
pushf
or
shl
mov
lret
pushf
mov
out
gs
ljmp
pop
pop
cmpsb
pop
sbb
test
dec
inc
movsl
dec
pop
cmp
shr
sbb
mov
insl
adc
mov
xor
xor
mov
repnz
and
cmp
pop
lret
lods
insl
jp
lret
outsl
stos
jge
or
adc
mov
addl
and
pop
ds
xor
and
shrl
lret
xor
inc
ret
fptan
ret
push
stc
fidivrl
cmp
repnz
sub
iret
or
jno
xchg
jne
repz
jbe
subl
inc
or
les
dec
ljmp
jecxz
inc
testb
lds
dec
fldenv
enter
stos
gs
pusha
add
dec
or
scas
pushl
in
cmp
inc
sahf
insl
mov
repz
dec
adc
mov
gs
cli
inc
sub
adc
inc
mov
dec
repnz
cmp
or
leave
inc
jmp
dec
cli
loope
subb
mov
sub
clc
cmpsb
inc
scas
stos
push
push
sbb
and
pop
test
push
dec
pusha
or
xchg
aam
repnz
add
adc
push
inc
enter
mov
out
add
decl
rol
xchg
gs
test
dec
mov
and
mov
and
dec
mov
dec
cltd
rcr
adc
bound
mov
cmp
cmc
fwait
or
xlat
fcompl
pop
es
mov
dec
push
pop
and
or
cltd
push
jno
orb
xchg
xchg
dec
lods
shl
hlt
arpl
adc
std
repnz
jecxz
ret
mov
cmc
mov
cmc
stc
pop
push
add
cmp
roll
cwtl
mov
clc
out
outsb
jne
addb
scas
sbb
imul
add
push
mov
fisubrs
sbb
ret
aad
testb
adc
stos
cmp
and
cmp
pop
mov
xchg
push
lcall
adc
test
mov
xchg
cwtl
sbb
push
adc
in
in
cs
out
sub
dec
mov
adc
and
mov
sbb
push
cmp
insl
or
mov
jge
loop
mov
dec
inc
cs
int3
xor
es
and
outsl
fs
add
adc
nop
popf
dec
inc
add
sub
in
push
cmp
or
leave
pop
out
push
pop
jecxz
inc
lret
jmp
jge
roll
push
loope
lods
nop
sti
mov
ss
pop
dec
bound
mov
nop
iret
adc
or
cmc
aad
cs
xchg
out
push
lds
cld
and
arpl
cmp
andl
testl
out
jae
jnp
out
xchg
push
add
lcall
pop
adc
or
or
sbb
xor
adc
jns
mov
mov
xor
jno
scas
mov
mov
push
loopne,pt
mov
mov
or
mov
mov
js
in
push
adcl
adc
xor
jnp
dec
pusha
lock
jge
adc
xor
pop
imul
xor
out
nop
jl
rorl
dec
and
pop
ljmp
popa
sbb
sbb
jno
pusha
xchg
fldcw
je
cmpsl
call
mov
dec
dec
cs
push
adc
jg
xchg
dec
popf
mov
xchg
lahf
fstl
xor
sarb
fildl
imul
loope
push
push
or
jae
imul
push
pop
adcb
push
push
loop
sub
outsb
jecxz
cmp
or
sub
mov
push
dec
jnp
fwait
xorl
enter
ljmp
mov
repnz
call
out
sbb
jnp
sub
mov
mov
pushf
das
fwait
add
pop
fisubrl
add
iret
sti
or
cmp
mov
out
mov
lret
jbe
sub
jge
loopne
sbb
fwait
stos
stos
stos
std
shlb
scas
jno
push
cmc
outsb
adc
outsb
and
sub
ret
inc
mov
lcall
jb
lods
jmp
fisubrl
xchg
rcll
jecxz
fsts
das
rcrb
negl
int
xor
aam
sub
xchg
xor
jo
jp
insb
adc
mov
aas
adc
scas
cmpsl
jne
popf
xchg
and
and
jl
add
push
sbb
xchg
xchg
jmp
mov
jne
mov
cmp
ret
fwait
adcl
mov
rcr
mov
add
dec
jmp
lods
rcr
xchg
lea
pop
in
mov
cs
add
pop
jno
xchg
jo
or
ja
sub
sbbl
inc
or
sub
pop
je
neg
jmp
out
and
mov
mov
and
dec
jb
push
dec
xor
add
lret
cmp
cli
jp
mov
add
outsl
or
outsl
push
cs
sub
dec
xchg
out
or
divps
mov
xchg
adc
out
mov
in
test
push
push
pushf
dec
and
cmp
adc
inc
in
stc
adcb
ret
lret
mov
or
popf
sahf
pop
or
dec
mov
imul
mov
push
nop
sbb
ljmp
fs
xchg
call
fsubrl
fimull
aam
sbb
divl
mov
stc
dec
loopne
xor
loopne
icebp
push
or
movsb
xor
int3
push
mov
addr16
bound
mov
inc
rcl
cs
or
repz
cltd
roll
scas
push
es
and
lcall
rorb
inc
ror
or
and
stos
fstpt
js
lock
mov
jmp
pop
mov
jb
add
sbb
in
stos
add
test
push
lods
int3
mov
push
xor
inc
outsl
pop
mov
adc
xor
int3
or
adcl
test
xlat
pop
popa
xchg
fbstp
inc
xor
mov
lret
xchg
push
sti
gs
movsb
popf
adc
xlat
int3
lret
sub
rcrl
pushl
xor
sbb
push
mov
popa
insb
ss
cltd
jno
mov
ror
lret
fsts
jmp
loope
hlt
scas
shlb
jg,pt
pop
sub
cld
loope
movsb
bsr
sub
pop
cmp
push
xchg
cs
inc
das
cwtl
inc
xorl
pop
add
xor
dec
stc
dec
shrb
idivb
jmp
jo
arpl
pusha
stc
in
loopne
and
sub
dec
push
lods
mov
lods
dec
sti
sbb
fldl
ret
sti
or
test
mov
mov
div
jbe
mov
mov
cmp
mov
sub
xor
xchg
dec
xor
ja
movb
lds
test
sbb
imul
stc
call
es
mov
xor
xchg
repnz
ds
jp
jl
sbb
cwtl
jnp
icebp
scas
cmpsb
inc
dec
aam
test
dec
out
or
leave
dec
dec
pop
iret
mov
cmpsl
sbb
stos
ret
addl
cwtd
bound
jns
in
fwait
adc
push
mov
dec
cmp
shlb
mov
push
or
mov
test
xor
push
cmpsb
call
addr16
insb
sub
push
sub
daa
mov
ror
shlb
mov
inc
xlat
sbb
add
and
inc
imul
mov
mov
mov
push
xor
movsb
mov
nop
and
cmc
or
fs
or
or
fsubl
ficompl
das
aas
test
jge
cmp
add
xchg
icebp
mov
jecxz
xor
ret
les
push
shrl
std
inc
out
inc
inc
out
ds
cmp
out
rorl
sbb
scas
and
call
jl
mov
mov
mov
cwtl
add
ret
shll
rolb
dec
rcr
out
and
stos
pusha
repz
jb
orb
mulb
popa
mov
dec
mov
imulb
rcrb
gs
mov
stos
xor
loopne
fsubrl
out
jo
dec
mov
mov
hlt
sbb
cmp
lock
mov
pop
sti
sub
mov
std
push
or
pusha
mov
mov
mov
fidivrs
ja
hlt
lds
gs
test
sub
sub
pop
xor
popf
fsub
xchg
inc
fwait
jbe
sbb
das
pop
jne
mov
push
lahf
test
or
push
xchg
inc
jle
jmp
in
push
fisttpl
mov
aam
iret
loop
rcr
sbb
mov
stc
gs
inc
inc
stos
mov
pop
cmp
adc
sahf
cmp
out
pusha
pop
outsl
inc
mov
test
cmpsl
fstpt
lret
shll
insl
test
mov
xor
sahf
fbstp
ljmp
xchg
xor
inc
iret
sbb
fwait
sub
jp
inc
xchg
pop
out
hlt
mov
jmp
ret
sbb
fldt
jno
cwtl
xor
testb
mov
jbe
bound
jl
imull
fucomi
lcall
inc
data16
jnp
aaa
dec
sbb
jo
sub
js
lret
jecxz
pop
scas
push
pop
call
insb
sbb
push
test
leave
xchg
inc
mov
inc
sbb
push
call
insb
inc
xchg
movsl
adc
leave
repz
sub
xchg
addr16
mov
loope
test
jo
add
xlat
push
mov
or
jge
sti
out
sbb
pop
sahf
inc
xor
dec
dec
pop
jl
adc
xor
test
pop
or
add
mov
mov
repz
sti
add
add
jg
sbb
stos
add
aaa
add
pop
add
iret
rorb
xor
mov
push
mov
ret
lret
xchg
mov
dec
cli
xchg
add
mov
and
lahf
mov
stos
jb
sbb
lahf
xchg
pop
les
jno
std
mov
adc
xlat
add
sbb
add
fsubr
sub
movsl
orb
cmp
jns
pushf
push
inc
ss
pop
fwait
mov
lret
frstor
shlb
lods
sbb
and
add
ja
or
imul
xchg
scas
in
cmp
mov
cmc
jmp
dec
inc
out
jne
js
adc
mov
lods
aaa
ficoml
jmp
jnp
ret
out
and
cmp
fstps
xlat
outsl
xor
add
or
add
jb
push
cmpsl
push
mov
fiaddl
popf
popf
sbb
push
jmp
imul
jge
xor
into
iret
push
mov
xchg
ret
aas
add
loop
scas
mov
addl
mov
ret
fs
mov
int3
xchg
insl
add
adc
cmp
loopne
orl
outsb
std
lock
iret
imul
lret
sarl
andb
sbb
pop
xchg
mov
dec
test
push
pushf
push
imul
iret
jns
push
in
dec
lods
sub
imul
imul
divb
pop
arpl
mulb
cmp
das
enter
sub
push
cltd
dec
pop
jo
xor
and
lods
das
cmpb
lock
mov
addr16
add
add
mov
xchg
scas
jnp
lahf
mov
and
xchg
aad
inc
in
xor
jp
lds
out
push
xchg
xchg
out
pop
loopne
lret
xchg
push
arpl
xchg
jbe
add
imul
mov
sahf
ret
pop
add
mov
cmp
xchg
xlat
orl
sbb
adc
ja
es
push
addb
and
add
popa
cmp
mov
xlat
popf
in
loope
or
xor
fidivl
repnz
out
movsb
orl
jge
xchg
inc
cmp
xor
xchg
negl
and
outsl
mov
push
push
sub
aad
sbb
clc
and
mov
iret
mov
outsb
ror
cmp
stc
jl
das
jbe
push
or
aas
mov
or
xor
mov
aam
jno
mov
lock
and
pop
pop
test
jae
lret
pushf
push
ja
xchg
jae
inc
and
mov
sbb
lcall
sbb
push
ror
push
popf
pop
cmp
int
les
add
insl
js
or
mov
xchg
fwait
aam
push
adc
xor
jg
shl
mov
int3
or
jp
add
repnz
or
cmp
aam
cmp
scas
leave
inc
ss
push
subb
ret
movsb
push
insb
push
dec
jle
push
shlb
inc
mov
stc
xchg
inc
stc
dec
mov
lock
in
and
aaa
cwtl
xchg
xor
pop
jno
rcr
mov
add
mov
cmpsl
pop
loop
repz
adc
mov
adc
xchg
jl
ljmp
jne
sti
xchg
add
notb
scas
das
xchg
in
push
into
daa
fs
or
xchg
call
mov
dec
add
push
shl
int3
cli
xor
dec
sarb
iret
mov
pop
adc
xor
iret
cmp
xchg
les
test
ficoml
cmc
loope
push
cli
pusha
out
mov
and
into
sbb
pop
dec
mov
jmp
adc
ljmp
sbb
out
scas
xchg
fdivl
jae
sarl
xchg
push
lcall
popf
shl
dec
pop
and
push
push
cwtl
push
into
dec
mov
outsb
lods
fldcw
mov
gs
pop
pop
or
mov
pop
or
jnp
orl
xchg
ljmp
pusha
xchg
lea
lahf
mov
hlt
mov
rcll
loop
fcmovb
mov
inc
les
xchg
arpl
cmp
sbb
jno
es
xor
cmp
inc
clc
jns
jae
dec
icebp
stos
add
xchg
adc
fs
mov
dec
and
shll
adc
cmp
adc
arpl
gs
or
das
push
sbb
push
iret
jo
rolb
iret
sbb
sti
lods
or
lds
xchg
daa
scas
pop
cmpl
mov
lahf
es
out
cmp
ja
lcall
pop
adcl
add
mov
jne
scas
sarb
xchg
inc
dec
lahf
std
mov
lock
test
xor
mov
xchg
adc
mov
int3
jl,pn
in
out
cld
mov
xchg
xor
aam
lods
inc
or
dec
adc
es
add
lahf
and
inc
nop
inc
leave
adc
xor
adc
roll
imul
xor
gs
test
mov
in
das
dec
pop
push
push
fcoms
sti
pop
shll
push
mov
xlat
into
cmp
js
add
stos
and
test
mov
stos
imul
js
rorl
cld
scas
push
jns
pushf
aas
enter
and
or
inc
imul
cmc
repz
insl
stc
xchg
mov
sbb
dec
adc
and
loop
in
adc
daa
fdivrs
mov
lods
mov
sub
fcom
inc
push
xor
pop
adc
test
sub
mov
stos
mov
cld
jno
mov
mov
mov
mov
pop
in
iret
mov
mov
pop
insl
ficomps
scas
shll
ficomps
cwtl
jb
sbb
insl
mov
loop
or
outsb
jne
popf
call
stos
mov
push
arpl
leave
adc
daa
or
out
clc
jae
sub
bound
popl
and
add
adc
je
jle
xchg
fwait
arpl
cmpsb
test
mov
sub
mov
mov
call
adc
xchg
aad
mov
add
pop
jg
in
push
mov
clc
std
cltd
cli
into
pop
xchg
inc
jmp
test
sbb
mov
jp
jo
test
or
das
lret
sahf
call
sbb
push
outsl
test
pop
stos
jns
subl
pop
jmp
fcmovne
clc
incl
mov
mov
mov
ds
ljmp
xor
push
aam
dec
testl
lahf
cmpsb
mov
inc
pushf
addr16
data16
adc
push
popa
fnstsw
les
push
jnp
jb
xchg
dec
cld
outsl
push
inc
or
aad
inc
rcrb
jl
js
push
lret
jg
pop
lcall
int
pop
dec
or
add
leave
jne
pop
pop
iret
and
mov
sbb
sbb
js
outsl
jnp
sbb
pop
lea
mov
add
and
and
cmp
notb
inc
pop
mov
xchg
push
shl
mov
push
push
mov
push
and
imul
data16
arpl
sbb
aaa
sub
mov
jbe
bound
repz
cmp
in
aas
icebp
es
mov
mov
ret
add
stc
outsl
mov
loope
cmp
jp
inc
in
inc
outsl
mov
in
repz
out
pop
pop
repz
mov
sub
xor
gs
sbbl
iret
mov
in
int3
mov
data16
mov
mov
sbbl
clc
xchg
xchg
popf
outsl
pop
repz
in
add
push
sbb
sbb
out
test
add
es
dec
and
adc
js
or
jb
pop
fwait
sbb
stos
scas
movsl
lret
test
push
pop
icebp
pop
pop
js
push
jno
cmp
ret
push
cmp
sbb
pop
sti
cmp
jecxz
stos
add
jbe
fdivrl
dec
pop
mov
cli
in
aad
repnz
mov
pop
mov
xor
adc
or
js
mov
daa
push
fidivrl
sti
addl
icebp
popa
lds
push
sahf
jbe
and
repz
jnp
cmpsb
adc
lods
shlb
jge
clc
popf
xchg
and
mov
mov
mov
xor
mov
lcall
ja
cmpsl
sbb
sti
mov
movsl
arpl
das
fstps
test
cli
mov
std
aas
mov
lret
ds
push
repz
push
lock
mov
push
aad
dec
jl
push
stos
mov
lock
rol
push
mov
test
pop
mov
mov
and
sbb
sbbb
mov
cmp
aam
cld
push
add
and
movsb
sbb
in
sub
jle
iret
fdivrs
dec
insb
aad
popf
shl
pop
jl
dec
jae
or
and
jle
insl
imul
lock
push
fidivrl
push
cmpb
mov
cmpsl
hlt
aas
inc
and
lock
jb
pushf
mov
mov
mov
sub
mov
pop
cmp
cmp
insl
or
push
mov
lret
sub
loope
jae
adc
add
outsb
fptan
pop
dec
cmp
and
dec
sbb
sbb
mov
bound
xor
sub
jge
inc
add
mov
insb
testl
shl
daa
and
clc
popf
cmp
adc
sub
inc
mov
or
arpl
imul
mov
adc
jb
push
jp
out
jnp
in
xchg
fcmove
push
add
adc
ljmp
push
mov
mov
cli
cmpsb
sub
in
pop
imul
lds
and
cmp
sarb
mov
cmp
add
imul
stos
pop
lods
adc
push
cmp
mov
jle
mov
imul
lea
cmpsb
jno
nop
jl
decb
and
test
imull
popf
jge
icebp
lret
jge
in
faddl
dec
aas
mov
test
aaa
incl
push
cmc
imull
and
imul
or
inc
cld
xchg
mov
les
mov
add
test
lret
pop
ficomps
aaa
cmpsl
dec
mov
shrb
movsl
cmp
cmp
out
push
imul
sahf
cmp
jmp
nop
mov
hlt
and
add
cmp
xchg
jo
out
xor
xchg
pop
pop
aam
push
test
lods
add
or
andl
ret
adcb
addb
lods
daa
jecxz
add
in
clc
iret
pop
out
sbb
pop
stos
cmp
out
test
xchg
pop
pop
insl
mov
fstl
gs
in
inc
orb
loopne
or
hlt
or
mov
sbb
loop
mulb
push
ljmp
aas
aad
lret
add
cmp
lods
xchg
xorb
jecxz
xchg
out
and
fmuls
cmpsb
and
jbe
ljmp
sub
fs
sbb
or
insb
push
jo
icebp
inc
xchg
fdivrs
pusha
mov
stos
cmp
into
ds
iret
stos
lret
jmp
rcrl
fnsave
cld
mov
mov
lock
push
aad
xchg
inc
mov
jns
andb
inc
test
negb
push
shr
repz
mov
and
jno
cmp
iret
xchg
and
pushf
int
add
popf
sahf
rorb
fs
jo
jle
repnz
push
jae
gs
imul
pop
adc
add
mov
addr16
pop
jo
nop
xor
xor
dec
mov
daa
out
mov
mov
stc
das
shll
xchg
cmp
dec
loop
repz
xor
ds
mov
in
jnp
lods
mov
push
in
iret
test
or
xor
jg
iret
insl
je
push
sahf
mov
cmp
and
add
popa
or
mov
xchg
add
mov
push
ja
ljmp
xchg
mov
out
jne
mov
into
sub
mov
outsl
dec
out
or
mov
or
int
cmp
cmp
xchg
std
add
inc
dec
pop
mov
add
into
lcall
xchg
mov
mov
dec
in
jge
pop
jns
push
mov
add
ja
mov
out
arpl
insb
xor
inc
xchg
movsb
mov
je
push
mov
out
fimull
cwtl
cs
mull
sbb
xchg
aas
fsubp
cs
add
add
jp
push
jl
mov
mov
cwtl
inc
xchg
add
das
adc
in
aaa
pop
push
xlat
ret
mov
mov
mov
hlt
jge
dec
daa
push
stos
mov
jmp
outsb
jne
daa
mov
int3
repz
sub
cs
dec
jge
and
lds
jmp
std
fs
xchg
xchg
inc
bound
sbb
mov
call
cmpsb
jle
xlat
mov
push
rorb
jns
fldcw
dec
outsb
in
out
jp
icebp
push
jo
cli
or
sub
push
roll
push
or
mov
das
xchg
add
jnp
pop
icebp
mov
ss
out
iret
xlat
xchg
out
loope
push
cld
ja
lahf
je
sub
cmp
aaa
xor
das
das
push
pop
xor
repnz
ja
dec
popf
mov
js
sub
arpl
fnstsw
cltd
sub
dec
cli
mov
stc
popa
fsubrs
fldlg2
es
lods
mov
push
data16
popl
rorl
idivb
cwtl
imul
fsts
cs
push
popa
adc
adc
cmp
and
loope
aam
jmp
jg
dec
std
std
push
mov
dec
rcl
inc
sti
psubusw
and
jno
or
adc
sbb
mov
sahf
sub
pop
pop
out
jp
popa
lds
imul
or
cltd
xor
jecxz
xchg
arpl
movsb
sarb
aaa
sub
out
cmp
sub
gs
sbb
jnp
lds
test
mov
ds
into
mov
mov
or
inc
stos
xchg
mov
push
dec
cmpb
pmullw
sub
mov
jb
cmpsb
mov
push
mov
loope
aas
adc
sub
fwait
aam
pop
imul
mov
filds
xchg
pusha
mov
inc
jo
mov
xchg
arpl
outsb
in
mov
in
cmp
divb
fiaddl
mov
stc
adc
insb
sbb
test
outsb
inc
imul
cli
pop
and
push
cmp
in
cmp
push
aas
aad
test
lds
cmpsb
cs
rep
and
in
jmp
lods
pop
adc
sub
mov
dec
sub
aaa
cmp
aas
sub
je,pt
sub
mov
push
shlb
into
dec
lods
mov
jle
sbbb
dec
arpl
pusha
and
and
test
inc
mov
ljmp
pop
mov
add
mov
adc
leave
cmp
xorl
cmp
mov
movsb
xchg
ljmp
orb
xor
movsb
sbb
int3
mov
lahf
mov
cltd
add
loop
add
enter
dec
icebp
mov
mov
jge
stc
jno
pop
jo
dec
mov
cmp
rcrl
xor
xlat
mov
js
xchg
cmp
add
or
xchg
scas
lcall
cmp
incl
ss
and
adc
sbb
mov
aas
sbb
push
cmp
sti
push
movsb
or
jmp
sar
scas
cli
xor
sub
jno
lea
inc
push
mov
fisubrs
and
clc
jne
mov
cmc
les
cmp
daa
xchg
xchg
push
scas
in
mov
or
mov
repnz
dec
ret
lods
jae
in
mov
aaa
adc
test
fnstsw
xor
inc
test
mov
pop
push
cwtl
cwtl
js
test
add
xchg
lods
arpl
lret
and
push
ret
add
dec
pop
sub
and
es
mov
out
inc
mov
popa
mov
cmp
adc
add
inc
jnp
ja
inc
pop
adc
outsb
stc
shl
mov
arpl
xchg
les
mov
ja
push
lds
out
fidivrs
mov
fcmovne
fmull
jp
icebp
pop
pop
scas
xchg
sub
das
lods
fisubrs
aam
jnp
stos
call
mov
pop
xchg
sbb
add
pop
out
jecxz
mov
or
push
push
testl
mov
add
jg
push
data16
mov
sbb
fidivrl
cmpsl
ret
mov
cmpsl
inc
test
xor
ret
clc
xor
sub
int3
jae
scas
into
and
rcr
or
aaa
sub
xchg
pop
popa
insb
jb
push
test
xchg
mov
add
pusha
clc
std
and
or
jnp
data16
and
or
cmpsl
testb
mov
sub
pop
mov
xchg
push
lret
mov
and
nop
mov
fucomp
mov
loop
sbb
insb
cmpb
clc
addr16
mov
loop
pop
stos
int
xchg
cli
add
inc
fwait
test
mov
ljmp
push
mov
push
rdpmc
pop
push
cmpsb
xor
push
cmpb
or
pop
sub
and
pop
dec
es
negb
cltd
je
add
jge
inc
mov
mov
jno
and
sbb
fdivl
pop
mov
sub
adc
lea
push
or
ret
or
addl
push
jecxz
xor
movsl
enter
sub
mov
rclb
addr16
addr16
fldt
mov
inc
dec
jl
jae
xchg
pop
pop
cmp
fidivrs
and
or
jns
and
outsb
cmp
mov
inc
aam
ja
js
sub
mov
jne
pop
xchg
test
xchg
mov
dec
stos
mov
xchg
ret
sbb
lcall
addr16
test
cltd
jmp
inc
push
test
dec
shll
mov
insb
cmpsl
icebp
in
mov
add
mov
or
test
aad
into
loope
adc
fldl2e
test
xchg
in
adc
dec
jno
mov
xchg
fs
dec
xlat
adc
gs
data16
cmp
int3
loope
hlt
mov
cs
loope
pop
push
xor
popa
and
pusha
test
out
inc
adc
add
aad
test
lret
fsubrl
cmpsb
lcall
in
sub
or
les
cmp
mov
jae
xor
push
cli
stc
test
das
scas
jo
cwtl
adc
jp
repz
movsb
xchg
popa
sub
loop
mov
lock
add
nopl
rcrl
aas
mov
adc
mov
cmpsb
sub
fstpt
outsl
pop
out
in
int3
lret
test
xchg
in
insl
iret
inc
bound
out
neg
jnp
ljmp
jns
andl
lock
xchg
mov
add
jle
mov
sub
adc
cmp
push
stos
lea
lret
push
movsl
fstpl
dec
in
pusha
fidivs
fisttpll
in
cmp
dec
cmp
mov
pop
jae
mov
cmp
inc
jle
add
xchg
out
iret
out
xlat
xchg
aaa
cld
lock
in
imul
addb
pop
pop
cmp
lcall
push
call
out
movsl
push
lret
cmp
aas
xchg
cli
inc
pop
movsl
mov
adc
push
mov
cmpsb
outsb
xor
icebp
pushf
mov
xchg
or
cmpsb
lods
mov
clc
lret
inc
mov
movb
add
mov
inc
dec
pop
sbb
jmp
das
lods
sub
or
leave
jns
xor
mov
jle
mov
out
imul
mov
lods
pop
cmp
loope
das
cmpsl
dec
fxch
cwtl
mov
xlat
ret
insl
or
mov
sub
jge
dec
mov
adc
fwait
js
mov
addb
mov
mov
inc
xchg
and
aad
xlat
mov
sub
add
add
push
loope
xchg
inc
jge
mov
loop
dec
adc
inc
arpl
aaa
inc
imul
inc
popa
or
mov
jo
cmpsb
loop
arpl
dec
lods
inc
inc
and
cmp
sub
push
mov
or
sub
lock
xor
popf
int
push
pop
sar
cmc
rolb
in
push
cmpsb
mov
addr16
and
ds
ljmp
jno
jge
lods
add
into
int3
call
xor
jecxz
adc
xchg
adc
mov
mov
stc
int
loope
pusha
xor
sbb
dec
iret
pop
xchg
jno
and
les
push
xor
pushf
out
push
dec
cmc
adc
mov
pop
jmp
push
cmpsl
mov
lahf
pop
sbb
mov
ja
mov
sbb
push
sbb
sar
jg
jg
loopne
xor
test
xorl
xchg
push
test
popa
cmpsl
mov
cmp
notl
adc
sub
orb
enter
jno
xor
mov
pop
mov
mov
lods
loopne
sahf
clc
mov
mov
rorl
out
adc
add
iret
inc
movsb
cmpsl
adc
ret
push
jno
and
jno
pop
rcll
dec
outsb
mov
ss
jle,pn
xor
lds
sahf
idivb
mov
xacquire
push
dec
sbb
js
cld
jecxz
push
mov
inc
cmpsl
or
addr16
sar
cwtl
jmp
lds
repnz
not
popf
xchg
fmuls
fdivrl
out
mov
sbb
daa
lods
push
fmul
inc
push
adc
push
sub
sbb
dec
mov
cmp
adc
sahf
mov
or
mov
xor
test
insl
jmp
cs
ss
pop
add
xchg
and
mov
cmc
push
sub
cld
xchg
arpl
sbb
insb
int
dec
jg
rcrb
ja
stc
ret
dec
mov
popa
popw
cmp
pop
cmpsl
push
mov
out
sbb
adc
mov
mov
sbb
in
add
sub
jmp
sbb
xchg
das
push
lods
pop
add
add
xor
xchg
sub
push
lds
push
fsub
pop
aaa
out
xchg
mov
inc
push
sbb
lock
cli
lea
xchg
mov
xchg
inc
dec
xchg
cmpsb
into
push
fs
pop
enter
ficomps
adc
movsb
push
in
mov
mov
cmc
test
sub
xor
or
movb
movsl
aad
mov
mov
jle
stc
gs
jg
xchg
sbb
repz
jmp
aas
mov
test
ljmp
cmp
shr
push
icebp
daa
orl
inc
jbe
or
lods
mov
sbb
leave
cs
stc
mov
ss
and
scas
sub
mov
cmp
push
push
roll
mov
test
mov
jne
sub
jns
hlt
test
xchg
pop
xchg
aas
ret
jmp
inc
arpl
mov
inc
xchg
test
js
cmpsb
dec
sbb
cmpsb
add
cmp
mov
cmp
jecxz
in
out
fcmovnbe
icebp
icebp
pushf
repz
add
jb
dec
xchg
inc
inc
mov
or
add
mov
adc
push
adc
xlat
and
fists
popf
or
jmp
jae
fsubr
mov
ja
inc
in
jo
add
leave
mov
rorl
mov
std
mov
jge
push
and
xchg
es
jne
pop
dec
fiaddl
pushf
mov
sbb
xchg
mov
dec
push
cmp
xorl
lods
mov
fsubrl
orl
add
push
in
mov
xchg
jnp
or
loope
add
jle
ds
stos
sbb
neg
mov
push
push
pop
jecxz
mov
sti
lds
mov
loopne
aaa
push
lods
outsb
cs
outsb
inc
push
xor
xor
dec
push
test
cmpsb
fldcw
fcoms
xchg
lcall
add
adc
ja
imul
push
push
stc
test
adc
cli
dec
mov
mov
add
scas
push
fucom
pop
repz
and
dec
mov
insb
add
std
add
clc
stos
stos
xor
sbb
in
cwtl
in
div
fimull
daa
lock
mov
test
in
pop
icebp
and
mov
adc
ret
pop
ret
push
add
ds
sub
inc
addb
ss
ja
ljmp
cltd
jns
loop
mov
adc
aaa
and
div
das
mov
clc
and
dec
adc
cmpsl
xchg
sub
pop
data16
loopne
mov
add
arpl
movsb
lds
xor
out
popa
rorl
pop
xor
cli
adc
adc
adc
loop
mov
sub
mov
sbb
xchg
lret
lock
insl
xchg
test
popf
mov
imul
iret
fbld
or
xchg
movb
lahf
aaa
or
mov
loopne
insl
and
loope
aaa
aam
test
push
pop
lcall
mov
pop
adc
dec
jnp
push
pop
dec
adc
push
xchg
jp,pn
scas
aas
xchg
mov
sbb
negl
xchg
in
shlb
add
or
arpl
adc
lods
ljmp
stos
mov
loop
xchg
add
lods
xchg
xchg
fmull
popf
dec
cmc
xchg
mov
dec
dec
add
inc
popa
mov
jns
xor
stc
jecxz
jns
lea
in
inc
mov
cmp
shlb
fsubrl
xor
pop
loopne
pop
xchg
movsl
mov
adc
inc
leave
pop
loopne
cmc
test
ja
adc
push
adc
pop
shlb
xchg
or
cltd
cmp
sub
lret
daa
sub
and
jmp
inc
les
scas
pop
mov
loopne
jb
push
jb
or
pop
fcmovnu
sbb
enter
test
negl
pushl
nop
or
jmp
pop
test
dec
aas
js
push
or
std
cmp
sbb
mov
popf
cmc
std
jns
mov
jnp
in
leave
in
add
and
adc
mov
mov
add
jae
mov
je
arpl
ret
push
iret
sbb
mov
cmpsl
pushf
xchg
lds
mov
jo
mov
push
cmp
imull
xchg
push
mov
xor
aad
pop
lcall
cmp
adc
repz
imul
add
ret
sbb
mov
and
shl
push
and
addr16
push
rolb
fstpl
mov
in
mov
mov
or
xor
inc
and
insb
pop
mov
mov
cmpsl
push
aas
mov
and
jg
lcall
stc
pusha
jo
dec
gs
dec
dec
sbb
ret
dec
lret
sub
in
fdivrl
xchg
aaa
sub
sub
cmp
ss
push
push
push
push
psrld
add
inc
in
in
jb
add
jmp
aad
xor
pop
mulb
aaa
fwait
dec
mov
mov
test
dec
push
addr16
stc
popa
and
jp
push
pop
int
cmp
cmp
pusha
jns
out
rcrb
mov
xor
mov
insl
imul
ret
jne
mov
inc
mov
aas
cmp
cmp
ret
or
enter
pushf
out
and
add
out
xor
in
sub
mov
cmp
adc
rclb
mov
lcall
mov
xchg
in
push
xchg
lret
push
and
sub
subl
cmp
scas
xor
adc
fidivs
sahf
mov
scas
push
cwtl
lock
lcall
mov
jp
or
pminsw
lods
inc
mov
sub
add
mov
fldl
pop
pushf
sbb
gs
inc
jle
dec
insl
jle
jg
add
pop
cmp
mov
pusha
rclb
xor
pop
cmp
sarb
jo
adc
inc
and
pop
jecxz
imulb
xor
mov
jle
adc
mov
xchg
int
xor
pop
test
mov
dec
xor
sub
mov
sbb
out
mov
add
jle
add
dec
add
rcll
dec
sti
in
cmpsl
cwtl
cmp
xchg
mov
test
or
xchg
inc
xor
dec
mov
les
push
clc
jns
adc
xchg
push
mov
out
and
inc
mov
and
mov
fidivs
lds
popf
movsb
cmp
add
mov
js
mov
cmp
fwait
daa
fcomps
xor
or
add
cld
arpl
cwtl
pop
int
aad
shrb
aad
dec
movsb
hlt
dec
add
jbe
sub
mov
jl
adc
push
sub
mov
adc
pop
loop
dec
push
dec
ds
push
popa
jp
sub
push
out
out
adc
leave
and
test
dec
or
aaa
jmp
cld
cli
mov
mov
jbe
pop
mov
test
movsbl
out
sbb
mov
push
sub
cmc
in
pop
cmc
mov
es
mov
sarb
ret
cmp
imul
inc
ffreep
ror
jns,pn
dec
lahf
lret
rclb
or
mov
dec
lock
test
jae
add
ss
pushl
arpl
in
test
in
sbb
pushf
pop
inc
sbb
cld
adc
adc
je
jp
fbstp
cltd
aas
adc
pushf
outsb
jle
push
and
iret
pop
inc
ret
sub
cltd
jo
pop
jnp
add
mov
cmc
push
xor
push
jne
xchg
rcrl
sub
mov
cmp
xchg
or
repz
aad
mov
jmp
mov
lock
jns
cli
lcall
jge
mov
imul
lods
mov
mov
sbb
add
scas
dec
imul
outsl
stos
sbb
xor
sub
out
repz
aaa
lods
adc
xor
pusha
es
roll
mov
or
movsl
ret
sbb
inc
sub
mov
mov
nop
lea
sub
fisubrs
cmp
xchg
int3
pop
sub
or
or
frstor
mov
lret
jge
out
mov
lret
inc
mov
mov
push
jge
sti
inc
jmp
cmp
dec
jl
movsb
sub
repz
mov
in
in
sbb
push
pushf
jecxz
adc
aaa
imul
call
test
pop
add
ret
or
add
and
sbb
xchg
sbb
movsb
sub
mov
mov
mov
shrl
mov
mov
sti
xchg
pusha
fisubs
mov
lds
cltd
fucomip
or
mull
xchg
outsl
mov
mov
lret
push
out
inc
pop
ss
fdivrl
push
shl
dec
push
js
loope
jecxz
push
mulb
xchg
mov
push
cltd
addl
sti
out
inc
jbe
mov
adc
pop
inc
dec
push
sbb
clc
inc
popl
inc
mov
sub
loope
inc
push
mov
incb
addr16
add
mov
out
xchg
fisubl
inc
inc
jge
int3
or
adc
sar
jno
mov
pop
clc
xchg
dec
rolb
sbb
jo
cld
adc
repz
push
test
xchg
jno
and
lcall
lea
out
mov
repnz
mov
into
xor
push
leave
aad
xchg
or
mov
cwtl
rcr
out
aad
mov
push
loope
inc
push
loopne
inc
aas
cmpsb
fdivp
pop
sub
stos
scas
cmp
dec
xchg
rcrl
xchg
mov
push
and
jl
sbb
in
jl
movsl
jg
test
and
mov
xchg
leave
mov
cmc
scas
fsubr
jbe
jmp
in
jns
orl
adc
adc
fistpl
inc
outsl
cmp
ret
mov
scas
push
int
push
push
mov
cmpsb
fwait
jnp
cmp
sub
sbb
sub
and
lret
addb
je
cmp
out
push
loopne
and
mov
jo
mov
aad
cli
adc
dec
ja
bswap
xor
and
mov
mov
adc
gs
inc
xor
test
sub
scas
gs
addl
xchg
mov
lret
movsb
loop
js
dec
xchg
cwtl
inc
popa
ret
pop
nop
mov
push
xchg
xor
bound
cmpsb
push
sub
into
popf
sub
lods
push
adc
lcall
sub
out
in
lret
dec
dec
daa
inc
push
cltd
outsl
pop
and
frstor
icebp
outsl
xchg
xchg
cmpsb
test
lods
xor
mov
inc
test
cmp
clc
aaa
je
inc
xor
jge
pop
lods
xor
lods
add
in
adc
inc
arpl
stc
mov
aad
inc
arpl
fidivrs
xchg
fwait
sbb
jp
cmp
or
int3
cld
mov
push
in
xor
cwtl
loope
leave
ret
jp
cmpsl
push
pop
jle
xchg
mov
iret
leave
xlat
test
add
notl
cmpsl
sbb
stos
test
sbb
pop
xor
mov
loop
fildl
leave
xlat
das
cmpsb
mov
xlat
popa
int3
stos
fdivrp
add
outsl
jo
cmp
scas
dec
pop
ja
ss
mov
gs
jb
mov
jb
and
stc
fcomps
daa
in
mov
shll
or
xchg
cmpsl
arpl
addl
das
int3
test
std
add
dec
mov
jo
popa
stos
push
push
stc
mov
into
mov
sarb
sub
cs
mov
movsl
mov
adc
mov
fnsave
pop
sbb
fldcw
mov
add
cmc
fiadds
jecxz
sub
popf
das
fnstenv
inc
sbb
sbb
daa
enter
push
inc
xchg
shll
cmpsb
jne
push
push
mov
mov
jbe
sahf
mov
lock
mov
push
in
mov
add
dec
cltd
cltd
ret
lea
shll
sub
andl
and
lea
idivl
mov
pop
popa
out
lea
lret
fdivs
ljmp
mov
addr16
sti
imul
inc
mov
xorb
sbb
adc
fdivs
mov
aad
mov
adc
test
arpl
cmp
fistpl
push
mov
pop
test
pop
pop
jns
inc
xchg
xor
std
pusha
mov
push
aad
cld
mov
stos
rorl
out
xor
arpl
lcall
shrl
jp
mulb
rcl
pusha
test
mov
aam
movsl
dec
std
push
int3
negb
push
dec
mov
mov
sbb
call
xchg
sub
pop
push
push
gs
ss
ds
cs
pop
pop
mov
cmp
pop
mov
add
jnp
push
je
and
test
or
pop
dec
in
pop
pop
iret
lock
xor
sti
adc
add
pop
or
and
pop
cld
fdivrp
mov
call
jne
daa
and
hlt
fldl2e
pop
dec
or
imul
add
xchg
push
int3
xchg
int3
fistl
pushf
jl
mov
jae
and
push
mov
sub
mov
dec
ficompl
adc
pop
mov
fcmovbe
sbb
lods
insb
mov
hlt
jae
dec
mulb
sahf
mov
or
xor
lods
or
adc
cmpsb
pop
jno
scas
mov
adc
fwait
test
mov
das
cld
testl
test
inc
es
sti
scas
or
stos
ljmp
data16
loope
hlt
mov
push
loopne
loop
xor
push
mov
int3
xlat
lods
jl
sbb
insb
mov
out
sbb
mov
fstp
lds
jmp
mov
out
movsb
imul
mov
idivb
add
cmp
imul
rorb
dec
ljmp
fwait
scas
mov
clc
sbb
and
hlt
push
pop
pop
cmp
aam
xchg
aad
mov
stos
aad
push
mov
mov
push
xchg
xor
out
pop
jbe
das
mov
or
mov
fdivrl
cs
outsb
push
xchg
out
push
mov
fistl
sbb
aad
bound
inc
ret
arpl
and
outsb
push
into
into
sub
mov
adc
out
orl
add
lret
aas
loopne
leave
push
sbb
loopne
mov
lds
sub
rcl
cld
shll
jns
int3
push
mov
pop
xor
fistpll
sub
pushf
add
ds
sub
fsubrs
dec
sbb
sub
and
ret
dec
dec
pop
imul
addr16
and
pushf
push
push
test
scas
shll
sbb
inc
pop
outsb
out
flds
mov
pushf
jmp
aas
ds
xor
xlat
aaa
dec
fsub
cltd
pop
sub
mov
cmp
in
imul
repz
sahf
and
hlt
pop
in
push
sarb
fsts
or
dec
sarb
daa
and
imul
lret
mov
lods
in
divb
stos
sub
sbb
pop
in
fmuls
std
jnp
lock
aad
sbb
sarb
mov
test
jg
lret
stc
mov
xlat
test
pop
les
xor
sbb
in
fsubs
jbe
or
ret
loop
scas
test
push
add
ret
push
insb
add
add
pop
pop
add
mov
adc
test
pop
dec
pop
pop
pusha
loop
push
mov
mov
lods
dec
xchg
sbb
xchg
fadds
and
add
push
mov
jne
mov
nop
sarb
sahf
lock
sbb
dec
out
cmc
dec
stos
jecxz
mov
add
mov
std
push
lcall
lea
cltd
pop
das
jne
cli
pop
pop
or
and
lcall
hlt
sub
mov
push
pushf
aas
push
xchg
xchg
dec
inc
std
add
pushl
sahf
xchg
idivb
pop
dec
ds
jo
test
inc
lret
xor
xor
cmpl
add
rcll
mov
adc
incb
out
fmul
scas
mov
lock
in
push
xor
pop
loope
sahf
xor
inc
cltd
enter
aad
out
jge
jb
lcall
out
xor
imul
push
fsubs
mov
pop
xor
cmp
aam
scas
idivb
xchg
loopne
lods
pop
mov
jb
sub
icebp
mov
mov
xorl
xor
mov
jg
mov
imulb
nop
gs
out
add
inc
fs
xchg
xor
xchg
xor
sub
dec
imul
fimull
adc
aam
sbb
push
jmp
pop
jle
ret
imul
pusha
jmp
int
xor
sbb
call
xchg
cmp
inc
movsb
jecxz
mov
sarb
popf
pop
push
sbb
inc
xchg
sbbb
add
sbb
inc
into
lcall
cmpsb
out
in
and
inc
adc
sbb
leave
push
incl
data16
repnz
ficoml
jp
sub
fdivp
mov
dec
pop
add
lcall
inc
les
and
and
jno
cmp
insb
cwtl
ljmp
xchg
int
mov
stc
jne
sub
inc
mov
mov
xchg
test
add
inc
push
cmp
scas
push
pusha
fwait
sub
loope
dec
add
mov
xorl
inc
lock
or
add
inc
in
fs
dec
xchg
mov
pop
sub
inc
call
pop
or
jge
and
cmp
pop
dec
pop
sbb
mov
jl
jnp
and
xchg
or
inc
inc
add
xchg
sbb
ljmp
sub
xor
sbb
dec
out
mov
jb
pop
jbe
push
adc
sbb
fimull
arpl
mov
inc
int3
popf
push
jns
mov
xchg
ja
lahf
dec
movsl
loopne
in
lahf
jp,pn
xlat
inc
loopne
sahf
pop
jl
cmp
adc
add
nop
inc
push
aas
pop
pop
test
add
mov
or
dec
bound
nop
lret
pop
push
clc
add
pop
es
sub
cmp
cmp
mov
xlat
orb
or
out
cmpsl
sub
add
out
popf
jle
mov
rorl
add
sub
inc
jno
aaa
andl
fdivrs
data16
mov
and
mov
aas
mov
xor
pop
cld
mov
ja
clc
cmp
or
lea
sbb
fldenv
mov
inc
jns
mov
sub
jg
ja
cltd
jbe
mov
dec
daa
jb
lret
das
cmpsb
mov
sbb
dec
xchg
jo
fiadds
and
cmpb
and
data16
inc
sti
mov
mov
test
inc
mov
jnp
sub
andb
adc
cmp
add
mov
cmp
adc
jl
scas
or
mov
es
pop
jl
call
outsb
lock
mov
jb
inc
shl
mov
mov
in
orb
cltd
adc
pop
jmp
push
mov
mov
fdivp
in
inc
test
lea
aam
add
rcrl
mov
int3
testl
lcall
insl
sar
mov
mov
js
icebp
mov
stos
jbe
lahf
inc
testl
pop
mov
fs
mov
arpl
fsts
std
push
lock
add
jno
push
nop
mov
xchg
or
xchg
gs
mov
and
mov
mov
aad
dec
add
enter
pusha
dec
add
imul
loope
xor
or
ljmp
mov
push
dec
sub
jb
adcb
mov
leave
adc
imul
repz
scas
mov
and
add
aam
mov
in
fsts
test
jo
mov
in
push
mov
out
pop
test
test
jo
daa
aas
les
jne
inc
jno
mov
xor
add
subl
xchg
in
mov
dec
inc
hlt
lea
pop
lods
sbb
test
arpl
fcmovnu
jnp
scas
xor
xchg
jp
jp
adc
fmull
out
xchg
sbb
push
dec
mov
icebp
inc
cmp
mov
jo
xchg
pop
dec
cmc
bound
sbb
inc
or
pop
cmp
adc
pop
cmp
sahf
scas
inc
das
out
insb
lret
cmp
ffreep
out
loope
jbe
pop
pusha
and
mov
int3
and
push
cmp
cmpsb
jo
pop
push
andb
push
lods
pop
mov
imul
icebp
xchg
mov
shrl
insb
xchg
iret
add
clc
xor
mov
jne
lcall
dec
push
fs
shlb
dec
ja
mov
xchg
or
pop
mov
jns
jl
sbb
daa
stos
in
in
pop
shl
sarb
orb
imul
xor
in
cltd
mov
out
or
dec
sub
xchg
sbb
cmc
mov
popa
sbb
incl
jge
jl
inc
push
or
jb
inc
repz
sbb
ficoml
outsl
out
lret
cmp
pop
mov
inc
push
lds
mov
mov
mov
fdivr
push
imulb
in
dec
aaa
xor
or
bound
mov
xorl
mov
jns
mov
cltd
cmp
sbb
pusha
sub
cmp
cli
test
and
fnstenv
mov
outsl
fisttps
test
ds
repnz
out
xadd
movsb
sahf
cmp
out
pop
xor
rcll
add
insl
xorl
cmp
rorb
xor
mov
xor
sub
mov
outsl
es
push
test
mov
cwtl
pop
push
xchg
fdivs
mov
adc
fs
sbb
inc
add
cmpsb
cmp
lock
adc
sub
push
sub
mov
add
push
lahf
cwtl
out
iret
and
mov
cmp
jmp
sahf
xchg
sbb
hlt
xchg
pop
xor
add
loopne
pop
jo
pop
jg
fldcw
out
stos
push
lods
data16
js
xor
mov
sbb
test
clc
repz
push
je
add
pusha
add
add
loopne
add
or
rorb
inc
test
in
dec
add
sahf
sub
movsb
pop
or
in
push
cmp
rclb
and
hlt
sbb
mov
arpl
mov
inc
scas
or
xchg
xchg
xchg
push
decl
jo
mov
jb
xlat
out
fstpl
push
cmp
mov
inc
dec
icebp
iret
mov
sbb
mov
aaa
push
es
jl
cmp
add
test
loop
fdiv
fs
or
mov
xor
outsb
insb
test
je
sub
or
push
push
scas
lcall
sub
in
cmp
les
and
faddl
out
xchg
inc
fucomip
in
arpl
sbb
push
pop
push
stc
and
add
imul
jl
and
icebp
jl
add
pop
orb
adc
pop
or
aad
out
xor
dec
test
pushf
icebp
mov
mov
and
hlt
sbb
dec
in
pop
jg
pop
int3
repz
fdivrl
mov
mov
mov
lea
sbb
lcall
xchg
lret
insb
sbb
mov
pop
lds
int
push
arpl
test
cmpsl
jae
arpl
testb
popf
loopne
sbb
jg
mov
pusha
mov
jne
test
jne
movsl
cmp
xchg
je
test
scas
lret
mov
lahf
jae
mov
jb
imull
mov
leave
and
sbb
shrl
add
xchg
daa
mov
sti
mov
mov
push
hlt
pop
fisubl
and
or
jle
sbb
cltd
dec
cltd
pusha
dec
jns
adc
in
xor
negb
sub
inc
jle
mov
out
push
pop
and
sbbl
adc
aam
lret
fldt
push
inc
push
jmp
cld
xor
stc
xorl
shll
jnp
test
xchg
addr16
lret
dec
test
push
pushf
mov
push
mov
sbb
scas
dec
ljmp
push
push
repz
std
pop
pmulhuw
mov
jmp
push
mov
or
mov
je
dec
cmp
pop
movsb
mov
pushf
test
mov
sbb
xchg
jg
or
cmp
jle
jmp
push
andl
pushf
fdiv
cltd
insl
cltd
lock
mov
inc
in
inc
and
sti
jo
rcll
cmp
jns
or
push
sub
or
adc
xchg
aas
out
lcall
sbb
cwtl
mov
jb
jae
cs
jb
cmp
sti
mov
jb
popf
xchg
pop
adc
ja
out
push
lret
enter
fwait
pop
popf
movsb
fcos
out
sbb
sub
xor
xor
jp
mov
xchg
push
xchg
cmc
jns
ret
test
hlt
xor
jnp
lock
mov
inc
cmovg
out
roll
jmp
sti
mov
cmp
xchg
call
std
push
push
push
lea
fcoml
push
xchg
lods
or
cwtl
pop
xor
jae
insl
into
inc
jecxz
and
jl
outsl
dec
or
inc
test
jae
and
add
mov
sbb
mov
sbb
push
mov
inc
or
lods
fs
es
lcall
sarl
jle
sub
fbld
push
jecxz
rorl
fistps
inc
shlb
xchg
lods
jns
xchg
mov
dec
jp
add
neg
insb
lret
cmpsb
jo
adc
dec
enter
insl
shlb
jae
int3
push
sbb
lea
das
adc
popa
xchg
mov
int3
repz
inc
or
shlb
outsb
call
scas
jns
inc
lods
push
push
dec
sarb
adc
shl
adc
mov
inc
xor
pusha
out
cmc
dec
inc
mov
or
mov
imul
adc
sti
mov
je
jae
hlt
cmp
hlt
shll
push
dec
aam
bound
repnz
lahf
test
popf
dec
dec
mov
mov
push
adc
adc
add
dec
je
nop
aas
fxch
fisttpll
jg
mov
std
and
out
jmp
rcr
fadd
movsl
int3
imull
lcall
jl
loope
sahf
cmpl
scas
lds
insl
push
mov
cli
inc
pushf
push
dec
movsb
stc
cmpsl
xchg
sub
sti
ret
add
daa
cli
call
cmp
mov
cmp
cwtl
and
fists
xor
adc
dec
adc
arpl
pop
mov
xor
cmpsb
dec
cmp
fmull
ss
mov
int3
sbb
sbb
sahf
ret
dec
fnstsw
leave
addl
aam
push
imul
mov
arpl
sbb
mov
cltd
or
pushf
cmpsl
jecxz
adc
mov
sbb
mov
xchg
mov
lods
fistpll
mov
xchg
cmp
pop
xchg
aaa
addl
cmp
and
pusha
pop
lods
mov
jg
test
es
js
or
sbb
jp
jnp
mov
mov
movsb
out
ret
insl
rcrb
xor
dec
aaa
mov
mov
push
jecxz
pushf
add
cmpsb
rcl
rolb
mov
mov
or
mov
fsts
or
sbb
aam
xchg
or
and
loope
mov
movsl
adc
jb
aas
jg
in
mov
jnp
ret
stos
dec
add
gs
adc
cmp
clc
jns
clc
enter
lss
fnsave
cld
and
adc
sub
insl
into
inc
out
jbe
int3
push
test
add
loop
mov
inc
popa
fists
outsb
mov
mov
enter
arpl
sub
lock
add
mov
rdtsc
pop
xor
ljmp
test
sub
fnsave
xor
test
ljmp
mov
mov
jl
sub
sub
lret
shrl
xor
test
outsl
jle
pop
fdivl
mov
xchg
or
scas
xchg
imul
test
cwtl
rorl
ss
lods
mov
sub
iret
stos
mov
mov
fstl
push
pop
xlat
sub
jmp
and
std
popa
add
mov
fadds
sub
js
adc
cmc
out
mov
cmp
hlt
mov
mov
inc
fdivs
dec
sub
outsl
sub
mulb
mov
jmp
out
sub
aad
push
fsubrl
push
hlt
fbstp
jo
ret
ja
pop
and
sub
nop
jecxz
ror
lret
pop
dec
mov
lods
fistpll
and
dec
clc
add
dec
mov
push
flds
sar
pop
inc
sbb
jb
call
mov
push
mov
int
mul
xor
jecxz
xlat
push
mov
stos
xchg
adc
push
bound
popa
sbb
subl
std
popf
cs
sbb
and
mov
mov
xchg
imul
cmpb
loopne
xchg
xlat
lods
stc
jp
dec
jge
enter
subl
or
jno
pop
out
aam
push
ret
or
test
mov
mov
push
mov
in
push
dec
imul
int
mov
sti
test
cmp
push
lock
ficoms
or
jp
jo
lea
xor
push
stc
inc
mov
sub
hlt
loop
mov
push
andb
in
js
mov
loopne
jno
mov
clc
xor
jnp
sbb
pop
aaa
lods
inc
jg
push
fadds
inc
xchg
lcall
cmp
lcall
loop
add
ljmp
icebp
fstpt
mov
mov
inc
pop
mov
out
jp
mov
je
sbb
jl
inc
add
push
push
out
and
pop
jle
jmp
call
popa
out
ljmp
ret
filds
inc
ljmp
mov
push
inc
jecxz
push
or
in
out
pop
shr
jne
dec
mov
xchg
jg
lds
push
pop
push
sti
push
out
push
sarl
das
imul
enter
test
enter
leave
neg
fwait
insl
mov
push
dec
add
enter
push
mul
cmc
cmp
and
inc
cmp
jae
mull
xor
imul
cmp
mov
fldcw
mov
add
lods
adc
adc
xor
or
out
cmpsb
mov
or
mov
cwtl
push
push
or
sub
jecxz
or
cli
leave
inc
out
jns
mov
addr16
sbb
popf
add
add
xchg
push
xchg
xlat
je
jmp
sub
mov
jge
jmp
ja
mov
test
fadds
sbb
imul
into
or
mov
add
loopne
add
xchg
mov
mov
cmp
ret
fistl
push
xor
sbb
arpl
mov
fs
inc
lods
add
inc
shlb
mov
cs
push
cmp
cmpsl
out
ja
mov
out
fistl
pop
shl
sub
mov
and
bound
std
sub
dec
pop
lret
cmp
sub
dec
loopne
shrl
push
mov
pop
iret
lods
mov
imulb
push
xchg
lret
pop
mov
gs
and
in
call
jnp
push
pop
dec
fistpll
sbb
icebp
jecxz
test
ficompl
inc
dec
out
iret
fs
mov
cmp
add
daa
repnz
sub
mov
xor
cld
loop
push
ja
jae
ja
and
cmp
sti
sub
pop
cmc
loop
adc
outsl
jns
pop
rorb
int
addl
data16
into
sub
push
pop
psubq
in
mov
pop
xchg
and
fdivl
jb
mov
mov
dec
aam
or
insb
out
iret
lods
mov
xchg
repz
inc
sub
mov
cmpsb
or
movsl
dec
or
jnp
test
add
jle
loopne
lods
lea
aad
mov
mov
imul
enter
xchg
bound
mov
pop
jnp
and
and
jle
or
stos
mov
cmp
fbstp
sub
das
and
push
mov
add
or
ret
mov
in
jmp
rclb
sarb
mov
insb
int
cmpsl
push
loope
outsb
dec
push
sub
in
adc
shll
xchg
mov
mov
xlat
into
sbb
xor
unpckhps
xor
mov
cmp
je
and
clc
outsl
push
push
fwait
cmp
pop
js
sbb
add
dec
scas
stos
push
pushl
xlat
push
mov
and
adc
outsl
stos
xlat
cmp
mov
div
mov
push
sub
inc
fdivl
lret
sahf
dec
lret
out
insb
in
xchg
pop
inc
stos
xor
lret
in
cwtl
and
sahf
pop
and
ljmp
and
aas
mov
dec
movsl
push
test
je
cmp
dec
mov
lret
push
in
add
ss
mov
inc
fimull
hlt
pop
test
lea
or
dec
enter
ljmp
add
imul
fildll
sbb
jecxz
mov
in
stos
pop
mov
jl
add
stc
fnstenv
in
mov
xor
adc
sub
jl
mov
out
xor
inc
or
rcll
mov
xchg
dec
sbb
leave
pop
outsl
out
push
lret
dec
cmpl
rolb
ror
sbb
push
sbb
xor
cltd
jbe
ds
jns
xchg
jmp
add
arpl
jae
je
rclb
adc
or
jnp
shrl
or
out
add
outsl
jecxz
mov
jno
es
jns
push
mov
imul
lock
adc
outsb
roll
and
ret
cmp
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
ficoml
add
pop
mov
loope
push
jl
lret
pop
mov
mov
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
push
mov
loope
mov
aaa
push
jne
ljmp
mov
jb
ds
sub
stos
sbbb
and
gs
adcb
xor
xor
sti
test
loop
add
pop
mov
fwait
les
mov
mov
fst
aas
pop
scas
mov
xchg
lods
xor
sub
ljmp
out
pop
dec
sbb
or
add
cld
dec
inc
movsl
out
push
fabs
or
mov
inc
dec
aas
mov
xor
ljmp
jge
xor
mov
adc
cltd
test
mov
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
mov
add
adc
flds
add
pop
mov
add
xchg
lret
call
mov
gs
loop
mov
loope
xchg
lret
jmp
loop
inc
lret
pop
cmpsl
lahf
loope
xchg
lret
out
xor
jge
lret
pop
mov
in
xchg
lret
out
aaa
loop
add
push
mov
in
xchg
rcll
loop
add
or
jl
lret
pop
cmpsl
lahf
loope
xchg
lret
out
daa
loop
add
pop
mov
loope
xchg
lret
ljmp
mov
and
xchg
sahf
shll
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
xchg
xchg
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
je
and
lahf
loope
xchg
jnp
aaa
loop
add
pop
rcrl
out
cmpsl
aas
xor
or
pushf
cs
or
jl
rcrb
loope
xchg
mov
add
pop
mov
loope
xchg
lret
out
pop
loop
loopne
sub
repz
lret
out
xor
push
mov
jecxz
xchg
lret
push
xor
jl
lret
pop
mov
loope
xchg
lret
out
aaa
mov
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
loope
xchg
lret
out
aaa
loop
add
pop
mov
scas
add
jl
loope
insl
jmp
inc
movsb
fld
or
xchg
mov
pop
inc
adc
and
test
mov
jne
scas
pushf
leave
adc
ja
adc
jo
xchg
fsubr
adcl
adc
fildl
adc
fdiv
pop
rcll
pop
test
xchg
fcom
test
sub
pop
shrd
xor
test
push
mov
scas
mov
push
out
mov
push
or
pop
pop
pusha
sbb
nop
sbb
popf
xor
cmpsb
subb
pop
js
sub
stos
pusha
stos
iret
adc
jmp
iret
cmp
jns
xor
lret
mov
sub
add
adcl
pop
rcr
test
cli
push
or
mov
aas
aam
mov
or
dec
mov
pop
repnz
jnp
imul
test
jbe
hlt
call
outsl
xchg
jno
push
add
shll
pop
ss
les
sub
fsubr
fucom
mov
aas
loope
mov
xor
repnz
mov
adc
stc
inc
cwtl
ja
mov
aas
je
cmp
fwait
shrl
sbb
push
sub
in
dec
xchg
sbb
dec
popf
sbbb
sub
in
cmp
je
cmpsb
lcall
inc
or
gs
lret
in
dec
inc
insb
jg
mov
mov
pop
or
sbb
lods
xorl
out
pop
in
scas
sbb
mov
sub
subb
cmp
and
xorl
xchg
outsl
mov
ret
and
rolb
push
mov
cmpsb
aaa
in
rolb
popf
cmpsl
adcb
mov
into
sbb
mov
cwtl
xchg
add
jne
cmp
sub
pop
xchg
out
add
cmp
les
xor
setge
pop
das
mov
push
fmuls
jno
add
dec
sbb
sub
xchg
comiss
or
es
scas
sarb
cmp
mov
xchg
or
insl
pop
scas
pop
loope
pop
xchg
fsubs
adc
and
adc
jge
push
lds
jge
addl
daa
push
pop
test
xchg
popl
lods
dec
into
jmp
stc
fisttpl
jo
in
jecxz
je
ds
test
sbb
in
adc
sarl
lock
mov
or
xchg
enter
push
dec
sbb
sti
inc
pusha
sarl
lods
call
push
iret
adc
push
daa
xor
add
pop
lods
jge
ds
les
pop
out
mov
nop
dec
es
fdivrl
orb
fsubp
jae
xchg
xor
jne
mov
les
repnz
fnstenv
scas
stos
jns
outsb
loope
cmp
jmp
fidivl
sbb
ds
les
jo
or
add
lods
push
xor
lods
int3
test
test
or
add
add
or
dec
sbb
or
mov
sub
fidivs
js
mov
nop
push
repz
aad
dec
cmp
repnz
mov
ret
sbb
adcl
loopne
xor
jle
jo
mov
add
xor
dec
arpl
mov
jae
mov
add
push
lcall
insl
adc
insl
push
or
loop
adc
xadd
pop
sub
xor
adc
lods
jle
das
movsb
clc
mov
inc
ja
mov
loop
mov
dec
dec
sbb
int3
leave
fldt
lcall
jb
cmc
psubusw
sti
hlt
into
pushf
movsl
pop
jl
ret
xchg
aas
cmp
mov
mov
cltd
aam
push
arpl
movsl
sbb
push
jbe
cmp
or
mov
pushf
dec
and
ret
adc
je
mov
pushf
cld
fwait
rol
jns
mov
push
popf
repz
pop
jb
hlt
pop
sahf
rcll
and
in
mov
addr16
rcrl
mov
int3
lods
mov
fdivs
ja
xchg
push
dec
xor
cwtl
cld
and
in
jl
int
fisttps
pop
pop
sbb
mov
call
push
outsb
sub
or
jo
repnz
mov
pusha
insl
or
fs
cmp
xorb
mov
icebp
jl
mov
sbb
test
ret
add
push
cmp
sub
cmp
xor
cmp
roll
pushf
xchg
push
dec
add
gs
sbb
rorb
inc
and
jns
test
popa
hlt
cld
out
or
push
aam
cltd
dec
inc
insb
add
stos
and
out
jle
cmpsl
mov
jg
stos
insl
stc
cmp
cwtl
out
add
into
loop
or
clc
jp
mov
loopne
and
mov
cmpsl
mov
adcl
sbb
les
inc
mov
xchg
pop
movsl
cmpb
adc
and
sbb
xchg
xchg
imull
xor
lds
mov
pop
jns
loop
gs
cltd
imul
mov
lret
mov
or
movsb
in
pop
mov
pop
or
mov
cli
rol
jl
and
icebp
aaa
pop
fcom
int
pusha
pop
sub
negl
inc
out
shrl
inc
inc
mov
loop
and
sub
in
and
dec
and
pushf
fsubrp
mov
movsl
dec
inc
roll
jne
into
imul
cmp
mov
stos
xor
shll
push
cmp
inc
sbb
or
js
es
iret
dec
aas
push
push
int
xor
adc
ror
sarb
out
dec
xlat
adc
fimuls
xchg
bound
and
pop
and
jbe
sbb
shll
push
lea
add
mov
pop
xchg
mov
cmpsb
test
adc
or
cwtl
and
inc
xor
sub
call
dec
add
insb
inc
xor
jecxz
dec
inc
into
or
cs
into
xchg
ss
hlt
stos
lret
fisubrl
mov
ds
cwtl
add
mov
shlb
adc
in
push
add
orl
mov
mov
inc
and
jnp
xchg
outsb
sub
xchg
sbb
sahf
push
fcoms
rorb
das
mov
sbb
mov
cmc
lods
mov
mov
sbb
and
imul
clc
jae
mov
pop
inc
sbb
or
into
pop
inc
js
or
int3
xor
inc
xor
jnp
leave
add
and
dec
lods
or
or
add
int3
push
mov
fidivrs
pop
mov
push
jmp
std
insl
and
leave
movsb
sub
sub
loopne
pusha
sub
pop
shll
or
or
pop
stc
mov
jns
or
sarl
and
mov
dec
mov
cltd
sahf
repz
out
nop
lock
add
ljmp
mov
pop
rcr
outsl
add
out
icebp
and
fsubl
adcb
cmc
sub
or
loope
or
xor
mov
addb
mov
and
cmpsl
jle
mov
sub
inc
and
int3
xor
fcmovnb
mov
rolb
rcll
sbb
mov
fisttps
shufps
imul
icebp
repz
adc
fsts
rorb
sub
inc
sti
add
sti
or
out
mov
lock
inc
jl
in
add
mov
addr16
push
jns
outsb
pop
fnstcw
iret
mov
je
clc
or
imul
mov
cltd
inc
and
es
mov
sbb
outsb
mov
gs
icebp
mov
mov
inc
mov
or
pushf
jle
add
mov
in
pop
test
lahf
popf
xor
add
or
cmp
clc
les
orl
call
fstl
dec
iret
loope
sbb
cli
push
mov
cmpl
mov
std
dec
mov
loop
enter
inc
push
imul
in
add
xchg
test
mov
pusha
pop
shlb
popf
cvtps2pi
rcrl
adc
mov
pop
ljmp
pop
add
push
gs
add
mul
rclb
shrb
daa
roll
and
addr16
lock
sarb
jle
js
repnz
pop
sbb
addr16
filds
mov
lods
push
dec
jo
stos
jo
ret
insb
movb
insl
push
and
adc
cltd
leave
xor
push
shll
dec
aad
orl
stos
push
pop
icebp
jo
jg
test
ret
add
ss
mov
mull
in
pop
enter
cmpsl
or
inc
cmp
repz
sub
and
sub
dec
ss
cltd
cs
adc
sbb
insl
or
push
les
sti
sub
ret
imul
jmp
or
aad
inc
dec
outsb
insb
lcall
imul
cs
mov
pop
and
mov
and
add
in
js
stos
iret
sub
mov
addr16
cltd
test
nop
mov
xchg
into
clc
inc
push
fimull
frstor
or
into
add
cmpsb
sbbl
int3
dec
test
xchg
call
int
mov
push
inc
cmpsb
iret
sbb
push
insb
dec
lcall
add
jo
xorb
in
pop
dec
sub
test
and
ficompl
sbb
adc
xor
js
push
rcrb
data16
pop
inc
ret
pop
stos
outsb
into
add
add
adc
dec
and
int3
lcall
rorl
mov
lods
in
and
jns
and
js
fnstsw
jno
xchg
pop
mov
add
push
fst
jnp
orl
dec
adc
pop
stos
xchg
adc
out
jnp
mov
test
sub
popf
dec
faddp
filds
aas
ror
mov
icebp
out
push
and
hlt
cmp
jnp
jecxz
es
add
or
in
jb
loopne
pop
adc
clc
sbb
mov
push
mov
test
ret
dec
and
call
cmpsl
mov
sti
lods
shrb
ss
sub
xlat
insl
jno
cmp
or
mov
push
pop
inc
mov
add
jae
shlb
sub
mov
daa
outsb
fdivrp
xchg
std
lods
aaa
fimuls
pop
and
scas
sub
adc
mov
pop
inc
imul
test
out
clc
faddl
addr16
imul
mov
neg
or
es
lcall
cld
icebp
mov
cmp
in
dec
xor
mov
addr16
andl
mov
xor
fldl
rcr
addr16
fiadds
dec
addr16
incl
cs
test
adc
adc
xor
jmp
jmp
leave
nop
in
mov
int3
jl
test
pop
ret
dec
add
inc
cmp
inc
mov
imul
out
pop
test
adc
mov
mov
pop
mov
push
scas
xchg
ret
cmp
push
dec
adc
push
std
inc
fnsave
es
out
kmovb
add
jns
mov
cmc
rcrl
leave
in
arpl
dec
inc
sbb
fidivrs
sbb
cmc
jnp
add
sbb
je
xchg
loope
jecxz
dec
jle
out
mov
mov
in
fdivl
out
ss
and
dec
pop
movsb
fiaddl
inc
mov
mov
pusha
xchg
cwtl
mov
out
imul
mov
lock
rolb
int3
lods
push
sbb
fistl
xor
jecxz
xchg
in
aaa
lea
xchg
dec
xchg
jns
jecxz
mov
sub
or
add
xor
in
sahf
shl
mov
mov
gs
popa
aas
imul
movsl
je
jmp
aas
or
pop
xchg
out
pushf
add
mov
fisubl
sbb
xor
jnp
std
cwtl
icebp
adc
in
out
adc
sbb
clc
mov
in
or
add
or
xchg
add
push
jle
xchg
gs
cmp
test
or
adc
add
ja
cwtl
dec
cmp
outsl
idivb
aad
dec
mov
ficoms
int
xchg
ljmp
push
iret
inc
pop
xchg
lahf
int
pop
mov
mov
pusha
mov
xlat
sub
fwait
arpl
aaa
out
mov
lahf
sti
cwtl
pop
pextrw
mov
mov
jbe
xor
jbe
mov
pop
ljmp
icebp
dec
push
arpl
dec
mov
xchg
in
imul
adc
in
pop
push
mov
sub
ret
test
aas
push
sub
xchg
cli
test
add
sub
pop
add
push
shr
lds
cmp
sbb
scas
xor
pop
es
ret
fisubl
jg
cmp
in
sbb
pop
sub
xor
pushf
out
aam
notb
jno
mov
inc
cmp
mov
add
xor
jns
adc
fs
jo
cmpsb
insl
cmpsb
xchg
cmc
mov
xor
mov
mov
xchg
add
cmpsb
push
stos
sub
mov
sbb
std
sub
dec
into
ret
mov
xchg
call
mov
in
test
out
jns
sbb
inc
mov
repnz
or
adc
xor
cmc
js
mov
push
xchg
loopne
test
mov
pop
cmpb
iret
int3
push
and
sbb
int3
dec
sbb
nop
js
push
popa
rcrb
pop
repz
shll
push
loopne
cmp
out
xchg
test
adc
xlat
jnp
fcoml
das
dec
lock
in
adc
lock
xchg
movsb
ror
mov
sub
pop
cs
xor
lahf
addr16
push
sti
iret
mov
adc
js
jns
mov
or
jl
pop
xchg
sub
rcl
test
and
stos
jge
mov
cmp
loop
and
cmpsb
cmpsb
mov
cmc
stc
push
imul
sbb
es
xchg
dec
push
mov
pop
xchg
mov
cmp
out
in
push
xchg
mov
ja
ljmp
xchg
mov
shrl
or
pusha
in
push
add
mov
push
fcoml
xchg
jle
jl
inc
push
stc
dec
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
