push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
fnsave
fs
sbb
out
dec
adc
jne
or
rcl
imul
or
stos
pushf
xchg
and
push
stc
inc
mov
mov
repnz
into
sbb
rol
jmp
pop
ret
int
stos
xchg
mov
dec
mov
mov
sub
in
lods
mov
sti
push
mov
push
lea
cmp
cmc
lds
repz
in
or
mov
pop
cmp
divl
imul
mov
lds
jno
sbbb
pop
inc
jl
aaa
or
adcl
jne
push
sbb
dec
dec
mov
subl
stos
pop
ja
xchg
repz
xchg
outsb
mov
das
js
sub
icebp
pop
pop
push
cmp
stc
jae
call
je
push
add
jno
out
push
je
imulb
test
sbb
cmpb
sub
test
adc
push
lds
ljmp
loopne
lods
dec
cmpsl
mov
out
pusha
xchg
mov
call
cmp
fldt
mov
cmp
pop
mov
mov
notb
inc
lcall
pop
lret
popa
pop
in
fdivrs
pushf
cmpb
push
xor
ja
adc
mov
aad
test
icebp
xor
addl
xchg
aam
add
dec
into
xor
push
dec
fldt
mov
jg
jae
dec
and
cmpsb
add
cld
or
in
outsb
push
outsl
jmp
add
dec
add
ja
pusha
pusha
clc
out
ret
fnstsw
inc
mov
adc
add
cs
xor
sbb
cmp
inc
cmc
repnz
daa
fdivp
push
pop
fbld
shl
fidivrl
int
lcall
jbe
jmp
shl
mov
aas
add
add
ss
push
push
lahf
pop
mov
in
into
dec
sahf
je
fcoml
and
mov
jmp
dec
ss
negb
rcll
cmp
call
shlb
push
outsl
jae
sbb
mov
out
pop
mov
test
jne
jns
mov
rolb
ret
daa
mov
dec
sbb
in
push
leave
lock
mov
or
xchg
cltd
repnz
test
movsl
sbb
sarl
arpl
push
mov
add
push
xchg
loop
nop
outsb
sub
ds
cmp
ljmp
sub
es
ja
sbb
std
jle
sti
jnp
packuswb
daa
sahf
fwait
insl
std
or
lret
sub
add
shrb
es
mov
mov
dec
pop
rcrl
cli
or
repz
sub
sbb
or
push
ja
lahf
mov
push
and
ljmp
and
dec
xlat
aas
lods
xchg
push
sub
negl
cmpl
fldenv
mov
and
xor
push
cld
rol
jnp
jnp
cli
ss
imul
ljmp
mov
nop
mov
insl
pop
and
cwtl
mov
or
aaa
rcl
test
orl
repnz
and
mov
test
dec
inc
scas
pop
pop
xchg
mov
std
stos
decb
jb
data16
jp
dec
data16
std
fstps
sub
out
punpckhbw
les
mov
mov
sub
mov
or
mov
out
mov
mov
inc
mov
dec
pop
push
cmp
leave
lcall
ficompl
mov
mov
mov
repz
inc
inc
fisttps
xor
inc
insb
gs
xchg
mul
xor
push
lret
mov
in
xchg
clc
aam
xchg
inc
call
push
lcall
pushf
loopne
addr16
mov
imul
pop
push
bound
cmpsb
imul
push
and
rcl
sbb
cmp
add
adc
push
push
rcll
fwait
inc
mov
mov
cmp
or
pop
sub
ds
mov
mov
pop
scas
imulb
mov
lods
xchg
xchg
mov
test
dec
cmpsl
idivl
cmpsb
push
fs
pusha
sarb
sub
sbb
iret
xor
sbb
jns
or
movsl
mov
ja
jae
les
ja
or
jl
jge
inc
pusha
loope
pop
mov
and
mov
call
mov
decb
xchg
inc
xchg
or
inc
leave
mov
mov
mov
cwtl
stos
pop
jge
push
das
mov
mov
in
xchg
lret
mov
pop
lock
adc
ret
cmp
aas
sub
and
ret
data16
in
cwtl
mov
add
pop
cmp
and
ss
inc
int3
dec
xor
add
push
pop
fsts
add
test
xchg
repz
fisubrl
std
add
in
add
push
loop
mov
bound
xchg
movl
mov
and
mov
pop
mov
repnz
outsb
pop
xor
je
or
add
mov
adc
in
jmp
mov
decb
cmp
jno
in
sbb
inc
xchg
and
xchg
and
or
jne
xchg
sbb
lds
cmp
loope
xchg
lea
mov
xchg
dec
and
mov
sti
cmpsb
fcompl
xor
jmp
inc
adc
mov
mov
ss
cmp
inc
mov
cmp
pusha
fdivr
js
jbe
lds
jbe
js
add
jle
add
adc
pusha
mov
outsb
mov
insl
pop
testb
insb
pop
push
mov
pop
jp
pop
in
adc
aam
xchg
cmp
ljmp
jae
pop
or
inc
stos
push
jae
pusha
cltd
ja
xlat
cmp
daa
lcall
xchg
fnstcw
push
out
dec
jne
in
pushf
jnp
ss
lahf
dec
popf
test
in
fs
dec
ficompl
or
dec
popf
adc
mov
aas
data16
mov
jp
or
jno
shll
mov
mull
sbb
rcrb
pop
push
mov
push
stos
jmp
mov
inc
enter
fld1
jbe
dec
int
shl
sarb
pop
cmpsl
dec
stc
inc
mov
fistps
mov
in
sub
loop
xor
jge
test
movsb
ret
ja
fldcw
js
lret
fbld
pop
and
fisubl
pop
add
repz
sbb
add
loope
lea
stc
cmpsb
jmp
adc
mov
push
pushf
dec
insb
cmp
cmp
jbe
rcr
jl
fnstsw
mov
int3
in
scas
cli
mov
aaa
stos
and
sub
imul
sbb
inc
stc
sub
and
cwtl
aas
int
out
insb
fnstsw
test
mov
bound
or
inc
dec
daa
sub
xchg
lret
test
xor
mov
test
divb
das
sbb
sub
fidivs
mov
int
cmp
scas
shl
mov
test
or
sahf
and
xor
out
notl
adc
mov
and
add
inc
xor
pop
jp
aam
add
aas
into
aam
sbb
mov
js
aaa
stos
xchg
shll
xchg
scas
popf
and
push
sub
shl
ret
inc
mov
lock
or
int
gs
sbb
mov
pusha
test
push
pop
push
roll
push
mov
popa
and
jge
mov
sub
push
xchg
xchg
jmp
stos
cmp
ss
sbb
sub
jmp
xor
ljmp
fwait
lsl
jge
cli
out
push
int
push
xchg
fimuls
out
jg
mov
std
cmp
sub
sbb
test
inc
xor
inc
in
mov
in
fiaddl
ss
cmp
push
add
sub
in
scas
rcrb
iret
mov
and
jl
xchg
pop
mov
lods
mov
push
bound
arpl
jecxz
push
xor
out
sub
mov
jno
mov
inc
push
cmp
lock
frstor
add
push
lret
add
std
stc
cmp
adc
xchg
fimull
mov
stos
jae
xchg
outsb
cld
adc
jmp
enter
pop
out
jle
sbb
push
add
add
mulb
gs
fcomp
jge
xor
pop
scas
add
cmp
cmp
jnp
xchg
mov
cmc
sar
inc
cld
add
orl
ja
rclb
jnp
stos
je
push
lcall
arpl
jmp
mov
push
inc
mov
cmp
cmpsb
lds
sub
jp
pop
jg
add
out
enter
dec
das
jb
pop
lods
fiaddl
xchg
inc
enter
and
lahf
push
inc
and
push
xor
mov
pop
stos
inc
jge
dec
xchg
nop
das
pop
fisttps
lret
sbb
xor
push
orb
popa
push
dec
jb
and
movsl
lahf
inc
adc
addl
rorl
dec
out
cmp
inc
xor
pop
std
push
sarl
cltd
jbe
cs
mov
ret
sbb
or
jmp
cmp
stos
test
mov
add
pushf
testb
mov
ss
xor
sbb
test
xor
outsl
loopne
mov
sub
mov
ret
ljmp
xor
rcll
setge
mov
fsubl
mov
rcll
inc
cmp
mov
enter
lods
ja
push
icebp
cmp
dec
inc
adc
scas
jbe
jae
sbb
mov
inc
sarb
jge
and
rorl
sub
sarl
cmp
ljmp
pop
mov
or
inc
clc
push
xchg
sahf
cmp
add
mov
mov
push
rcll
sbb
out
cmp
cmp
xchg
jns
cmp
in
lahf
insl
in
popf
mov
pop
dec
cli
stos
std
or
add
jmp
adc
push
mov
xchg
aas
test
enter
pop
out
cltd
xchg
sahf
mov
pop
and
push
gs
push
mov
mov
pushf
mov
cmp
inc
enter
lods
push
jge
mov
cmc
leave
mov
cmp
std
mov
lods
jns
arpl
jb
aad
pop
pop
adc
adc
sub
mov
nop
cmp
jne
fiadds
shr
mov
jp
aaa
jp
xor
jbe
and
scas
pop
icebp
pusha
cmp
inc
pop
loope
outsl
fists
es
mov
std
fildl
fwait
mov
sbb
xchg
ror
rol
dec
loope
add
pop
inc
or
xchg
fucomip
sub
xchg
push
adc
cmp
xlat
das
js
cmpsl
add
repz
fwait
iret
cwtl
push
sti
jnp
sti
add
push
jmp
pop
mov
sbb
aam
outsl
or
push
fsubl
dec
and
xor
or
std
cwtl
js
dec
fldl
in
dec
aad
lds
mov
sub
cltd
lret
lock
sbb
dec
lds
insl
es
mov
sbb
mov
movsl
push
dec
dec
mov
test
pushaw
add
enter
mov
push
inc
push
inc
insl
bound
mov
xor
mov
clc
lods
sub
mov
es
push
pop
cli
into
mov
frndint
inc
inc
mov
insl
jnp
loope
mov
lods
push
addr16
cmpsl
mov
mov
dec
fstl
lret
pop
call
repz
das
inc
and
xchg
ja
pop
aas
stos
aaa
cwtl
mov
push
xor
movsl
jo
lcall
pop
mov
popa
insb
bound
dec
loopne
int3
fisttps
push
or
outsl
subl
loope
and
mov
fidivrl
int3
jns
test
aaa
add
mov
adc
pop
insl
xor
jo
prefetcht1
lret
das
pushf
dec
xchg
scas
out
aad
leave
fsubr
xor
adcl
push
sahf
mov
movsb
popf
andl
jne
js
mov
cmp
mov
jnp
sub
std
jg
leave
pop
adc
cmp
ds
or
push
jecxz
mov
repnz
int3
cltd
adc
sbb
pop
cwtl
inc
stc
aam
sbb
fdivrs
aam
push
icebp
add
xor
sub
inc
pop
cmpsb
cltd
jle
add
xchg
pop
sar
mov
shll
out
out
movups
sbb
pop
add
outsl
cwtl
gs
mov
dec
dec
dec
xchg
in
xor
mov
loopne
sbb
mov
and
mov
and
popf
dec
sbb
addr16
adc
jns
xchg
outsb
jp
jmp
jp
lret
xor
inc
daa
aas
pop
test
pop
dec
stos
addr16
xchg
and
cmp
xchg
xchg
push
aam
xlat
adc
jne
sti
fbld
adc
jle
inc
sahf
adc
inc
jl
icebp
push
add
je
in
inc
rcrl
cmp
mov
push
pushf
popa
bound
jnp
inc
outsl
fimull
and
movsb
mov
xor
mov
sbb
or
xchg
cmc
outsb
xchg
jb
xor
cmp
dec
hlt
cwtl
adc
mov
in
inc
sti
jge
mov
xor
lea
pusha
and
and
outsl
shl
pop
lods
pop
adc
sti
adc
movsb
mov
mov
jmp
cmp
nop
loopne
mov
hlt
enter
mov
mov
test
mov
into
pop
pop
xor
movsb
inc
push
nop
nop
sub
xchg
sbb
test
xlat
imul
dec
pop
xor
adc
or
rorb
mov
ret
fs
icebp
stc
mov
sbb
mov
mov
pop
stc
jle
jecxz
push
cld
push
push
or
cli
add
int
repnz
mov
mov
cmp
or
out
mov
mov
adcb
or
pop
dec
cli
xchg
xchg
lods
addr16
and
jae
and
jns
hlt
stos
mov
lret
add
out
pop
pop
aam
call
dec
test
mull
inc
jl
cmp
push
mov
lds
dec
add
mov
test
xor
stos
or
aad
jae
lret
int3
jle
xor
ret
xchg
pop
push
jbe
xor
add
lret
ss
cwtl
pop
ljmp
push
sub
or
mov
inc
pop
adc
sahf
dec
inc
jle
nop
stos
mov
in
mov
xchg
mov
sbb
fadds
sbbl
lcall
jecxz
nop
mov
xchg
stc
sbb
stc
shrb
xchg
in
mov
fcmovne
cmc
xlat
hlt
ds
cltd
sbb
mov
cmp
imul
rorb
mov
mov
lret
pop
lods
pop
dec
loop
scas
movsl
repz
in
shr
sbb
mov
push
loopne
lock
lcall
mov
in
mov
mov
data16
jns
cmp
outsl
cwtl
mov
cmc
popf
enter
pop
clc
lcall
sub
sahf
jbe
xchg
or
push
ljmp
fnstcw
mov
les
aas
lret
pusha
lods
dec
mov
sti
subl
jns
dec
clc
lods
mov
add
out
cmc
popa
cltd
jg
iret
mov
add
out
add
lock
js
lods
out
inc
pop
dec
inc
insb
and
fmull
std
mov
cmpsb
sbb
lret
into
fs
paddsw
lea
idivb
je
cmp
mov
sub
stc
movb
xchg
stos
jo
scas
shlb
and
ffree
dec
and
mov
or
pop
sub
cmp
inc
and
fbld
mulps
icebp
xchg
add
xchg
shrb
adc
scas
pop
out
ret
cltd
sbbl
lds
mov
push
ja
sbbl
mov
sub
mov
fildll
aad
jno
jge
jo
xchg
inc
mov
bnd
inc
push
mov
xchg
or
filds
jb
jno
jo
pop
xchg
cmpsb
adc
out
fwait
adc
sahf
pop
test
sbb
push
lret
fildl
xchg
ja
jg
mov
sbb
add
or
dec
scas
inc
movsl
push
outsl
jo
pop
or
or
ror
mov
push
sbb
shr
in
ja
mov
fwait
cmp
jnp
icebp
add
xchg
js
scas
or
mov
lcall
xor
jle
pminsw
jae
pop
nop
jae
pop
into
lods
rorl
loope
insb
stos
inc
inc
xchg
cmp
scas
clc
fimull
divb
pop
aaa
dec
out
clc
xchg
stos
repnz
loop
fisttpl
mov
cmc
les
xor
test
cmp
dec
cld
leave
and
hlt
adc
scas
pusha
lock
loop
dec
sahf
jl
lret
cltd
fdivr
jnp
test
jle
aas
mov
fsts
mov
adc
sbb
or
adc
push
and
push
int3
xchg
lahf
ljmp
jmp
ljmp
push
jne
cvtpi2ps
mov
data16
and
and
sub
in
js
sub
int3
pop
or
js
sbb
pushf
push
imul
test
loop
cs
mov
push
in
fsubs
xor
xchg
mov
loop
pusha
inc
pop
cld
stos
lahf
adc
ja
xlat
into
push
and
mov
addr16
push
jl
cltd
push
shrb
and
addr16
popf
mov
in
cli
scas
clc
inc
jle
dec
jp
xchg
xchg
push
inc
insl
mov
sahf
xor
adc
push
out
cmpsb
mov
xor
aam
lahf
gs
loop
adc
cmp
mov
mov
ss
movsl
rsqrtps
rcl
jle
cmp
mov
je
decl
xchg
xor
push
cmpsl
insl
push
popf
cmc
dec
mov
lcall
mov
lods
arpl
insb
lock
insl
mov
inc
push
xchg
add
mov
inc
xor
adc
mov
push
stos
push
ljmp
and
and
xor
add
das
jecxz
lret
int
mov
mov
das
jle
outsb
clc
mov
hlt
jge
mov
test
adc
sub
data16
jle
negl
sbb
xchg
loope
jne
push
and
insb
fnstsw
jge
and
cwtl
sub
int
mov
xor
or
or
out
pop
or
cld
rcll
xchg
subb
sbb
xchg
clc
pop
cmp
dec
in
cli
test
loope
pop
out
mov
pop
sub
lahf
fisubs
aaa
fstpl
scas
lret
lret
inc
sarl
pop
dec
or
icebp
xchg
aas
and
cmp
scas
push
orb
push
mull
mov
push
js
ffree
mov
jns
xchg
jecxz
push
push
cmp
jo
adc
rclb
or
cli
in
jnp
stos
sbb
je
jl
movsb
ja
int
and
push
xchg
adc
jmp
mov
pop
ljmp
mov
pop
mov
fwait
lret
mov
ret
xor
roll
fidivrl
subl
or
push
dec
and
dec
test
dec
xchg
testb
cmc
in
xchg
sahf
pop
pop
sbb
and
shl
push
dec
mov
stc
and
cmp
xor
arpl
inc
lds
adc
insb
out
xor
je
jmp
cmp
mov
les
or
imul
sub
pop
xchg
dec
jp
scas
lret
std
and
or
movsl
or
sub
and
sub
loopne
pop
movsl
push
dec
shrb
adc
xchg
loopne
jae
adc
mov
roll
int
out
cltd
dec
dec
dec
movsb
or
aaa
out
pop
cmp
inc
cmc
sahf
insb
xchg
push
xchg
adc
sub
push
in
jne
or
sbb
cltd
fmull
pop
xchg
mov
aaa
ss
adc
push
xchg
shrl
in
imul
jl
mov
pop
jb
push
mov
mov
fcmovnb
add
sub
out
push
push
add
or
cmp
mov
repz
repnz
lods
cmp
add
push
adc
xchg
rclb
lock
movsl
iret
jg
aas
ret
pop
subb
jg
jg
bound
out
sub
pop
mov
aas
push
dec
pop
adc
mov
sbb
outsb
add
push
pop
inc
fwait
aad
xor
pop
repz
xchg
mov
lods
jp
iret
sbb
xchg
xlat
mov
lock
in
loop
jmp
mov
out
inc
mov
jmp
push
mov
clc
mov
sbb
adc
mov
push
push
adc
mov
pop
xor
pop
sbb
and
jl
lds
sarl
and
pusha
mov
sbb
or
dec
or
cltd
mov
mov
fwait
mov
jo
xor
xlat
jecxz
mov
xchg
setno
sbb
loop
clc
test
xor
fsubs
scas
mov
subl
jmp
rolb
jp
incl
adc
test
cmp
xchg
js
lock
in
sbb
pop
movsb
sub
sub
cmc
mov
sbb
stos
adc
push
xlat
das
outsb
fidivs
gs
jb
lds
bound
test
cmp
lret
mov
inc
repz
xchg
or
mov
push
pop
dec
inc
outsl
mov
or
adc
out
dec
pop
pop
aaa
fisubs
fldenv
repnz
stos
push
shrb
cli
cli
jecxz
lea
fsubrl
dec
popf
sahf
int
pop
mov
pusha
setl
xchg
sbb
inc
dec
or
xor
mov
pop
jb
out
mov
mov
rcrb
mov
inc
add
jae
push
in
sub
out
dec
xchg
imul
inc
rorb
mov
mov
mov
add
cmc
ret
ja
sub
inc
jae
outsb
mov
fildll
adc
fcmovnb
xchg
jl
imul
mov
cli
insb
out
mov
sub
jmp
sub
sub
fildll
gs
outsl
jnp
loop
mov
imul
cmpb
fsubrs
xchg
cmpsb
clc
xchg
popa
pusha
pop
data16
fbld
loopne
dec
data16
test
arpl
ja
sarl
mov
xchg
movl
xchg
or
adc
arpl
decl
jns
aam
je
inc
mov
lret
and
ds
js
pop
outsl
pop
push
lods
mov
sub
add
add
push
sbb
movsl
lea
loopne
andl
mov
ljmp
daa
rclb
and
leave
adc
jb
mov
mov
xchg
add
jecxz
ja
mov
fcompl
add
addl
ss
xchg
enter
mov
sbb
sub
add
mov
add
jge
push
sbb
jle
adc
or
adc
rcll
ror
push
xlat
jnp
repz
aad
and
mov
or
cwtl
xchg
inc
bound
pop
inc
cltd
mov
adc
xor
shll
sbb
jno
push
pop
aad
adcl
cmp
cmpsb
add
pushf
out
jecxz
inc
xchg
fwait
mov
mov
push
dec
push
cli
roll
dec
mov
ljmp
lds
mov
jbe
dec
orb
xorb
dec
pop
mull
roll
fsubr
jmp
subb
movsl
dec
sub
adc
add
adc
gs
pusha
sub
scas
mov
inc
sub
or
and
mov
sub
dec
inc
lods
pop
or
sub
faddl
cmp
fidivs
or
xor
pop
add
and
out
movsb
pop
shll
adc
push
es
and
xchg
inc
ficompl
cmp
dec
xchg
sbb
push
sub
test
iret
enter
inc
repnz
fdivl
xor
push
out
fnstsw
add
sbb
outsl
xchg
jnp
push
jae
pop
iret
push
scas
sbb
dec
xchg
int
and
scas
mov
pop
std
out
lret
mov
mov
jne
add
push
scas
js
xor
add
mov
push
xchg
sahf
pop
push
pushf
xor
push
inc
shrb
pop
mov
and
fistpl
outsb
lcall
inc
scas
pop
das
lods
fldenv
clc
jg
inc
or
or
ja
inc
orl
andb
push
shll
pop
ljmp
push
imul
and
xlat
mov
add
sbb
inc
outsb
xchg
or
cmp
dec
pop
sbb
inc
and
adc
jg
lods
cwtl
pop
xchg
and
and
mov
leave
pop
aam
cld
repnz
dec
jmp
jbe
jmp
mov
lcall
sbb
or
fidivrs
lret
loopne
fidivrs
les
pop
pushf
and
push
in
sbb
les
add
mov
mov
arpl
jle
repnz
sbb
mov
jbe
rcrl
stc
mov
sbb
sub
pop
mov
mov
sub
lret
dec
sub
add
xchg
xchg
aaa
stos
rcl
adc
dec
adc
xor
pop
dec
and
jmp
xor
xor
repnz
sarb
jle
nop
inc
jnp
enter
iret
cmp
or
cmp
cmp
cmp
in
cmpsl
lret
shrb
push
in
outsb
mov
jae
jno
iret
stos
push
pop
sub
rol
xchg
dec
loopne
aaa
push
or
call
iret
jnp
jl
or
into
lret
cs
or
hlt
xor
loop
int3
daa
popa
push
push
lods
sub
mov
sub
aaa
xorb
aaa
push
push
in
popf
and
das
cwtl
sub
fnstsw
sbb
cli
outsl
mov
mov
cmp
cld
les
cwtl
xchg
pop
or
cmpsb
shl
mov
lods
add
pop
jmp
daa
inc
sbb
adc
mov
out
loopne
dec
daa
xor
dec
sub
pusha
into
rcrb
push
pusha
dec
mov
in
mov
clc
sub
outsb
movsl
neg
push
push
xor
insb
fwait
pop
popf
and
enter
movsl
imulb
lea
sbb
xor
or
mov
rclb
mov
ss
xor
mov
in
dec
testb
xchg
jp
test
lods
adc
mov
dec
inc
fwait
imul
sbb
call
lods
and
mov
dec
mov
xor
cmp
and
inc
xchg
sbb
repz
adc
jmp
cmpsb
arpl
cmp
repnz
sub
jbe
in
mov
lods
insb
adc
or
mov
loopne
adc
inc
pop
js
xchg
stos
stc
popa
xlat
xchg
aas
xor
pop
std
sti
and
fiadds
out
ret
adc
sbb
jb
xlat
jle
xor
sbb
jp
nop
sarb
pop
lcall
inc
xchg
frstor
into
enter
xor
xchg
mov
push
sbb
sti
inc
mov
mov
push
das
test
jmp
in
mov
shll
mov
cli
dec
sub
test
roll
sub
inc
rorb
xor
dec
shl
push
push
xorb
repnz
add
or
lods
add
into
inc
test
push
adc
and
xor
in
jmp
cmpsb
movsl
jo
sub
pusha
pusha
mov
xor
mov
sti
fwait
lds
inc
and
in
cmp
inc
jmp
jb
aaa
jmp
ljmp
xor
add
push
xor
push
adc
lods
xchg
xchg
repnz
push
outsl
mov
xchg
mov
jmp
ja
pop
pop
xchg
mov
jmp
inc
cs
pop
and
cltd
dec
sti
mov
xor
dec
cmp
movsb
cmpsl
insb
cmpsl
insb
test
cld
pop
addr16
inc
out
gs
out
out
ror
mov
call
cmp
lahf
adc
aam
mov
es
ss
mov
inc
inc
cld
push
mov
in
nop
jae
mov
sub
outsb
xor
dec
pop
mov
push
sbb
cli
in
xchg
rorl
sub
lahf
sub
add
pop
mov
imul
adc
cld
push
cltd
push
pusha
andb
popf
xor
push
test
mov
jmp
push
fdivl
loop
imul
scas
insl
loopne
inc
pop
inc
data16
xor
mov
push
dec
out
pop
sub
and
xchg
aam
shr
lcall
xchg
inc
daa
adc
push
mov
lret
add
push
pusha
imul
popa
lret
insl
cmp
mov
testb
jmp
clc
loopne
cmp
ja
stc
xor
jae
and
mov
cmp
and
sbb
cmpsb
mov
insl
scas
push
adc
or
mov
mov
lods
insb
inc
dec
adc
in
inc
decb
fisubl
jl
jns
adc
or
das
and
sub
mov
ret
sti
out
cmp
xchg
clc
jne
pop
dec
dec
cwtl
lret
leave
insl
inc
sbb
clc
in
leave
mov
push
or
cmpsb
cli
xchg
jmp
dec
push
xor
jecxz
jno
movsl
rcr
xor
mov
fidivl
pop
xchg
mov
jge
push
xor
shrb
xlat
in
lahf
lods
cs
push
insl
enter
loopne
stos
pushf
idivb
subb
mov
inc
insl
pop
mov
lret
adc
mov
jge
into
daa
js
mov
popa
push
jmp
outsb
dec
loop
xchg
fadd
popa
sbb
ljmp
pop
push
add
or
arpl
fld
jecxz
inc
icebp
aad
les
cmp
or
iret
call
mov
jnp
stc
roll
mov
inc
and
dec
inc
mov
pop
in
jge
xlat
push
lods
pusha
ss
outsb
ljmp
inc
loop
scas
jp
push
fucomp
aas
mov
mov
into
rorb
adcb
xchg
or
js
in
or
xchg
inc
add
and
std
xchg
mov
sub
mov
xchg
daa
cmpsl
dec
mov
sub
jbe
cwtl
movsl
mov
cmpsb
sbbl
aaa
xor
mov
cmp
test
jecxz
sbb
lcall
insl
lahf
mov
outsb
inc
cmp
pop
mov
ss
sbb
bound
mov
cmp
jnp
lock
adc
dec
dec
and
fwait
out
ja
jno
xadd
fists
leave
je
pop
cs
nop
fmuls
rorb
xor
sbb
or
cmpsb
push
ds
imull
and
inc
addr16
or
fsubrs
mov
test
add
hlt
out
cld
mov
mov
jb
or
mov
push
inc
movsb
int
leave
cmpl
and
mov
dec
jae
fcoml
repz
into
int
outsb
xchg
in
aad
jns
inc
in
cwtl
andb
xchg
lahf
movsl
sarb
rcr
inc
das
push
adc
scas
push
in
cwtl
push
outsl
jns
xchg
jg
jnp
mov
adc
adc
sub
jle
enter
jg
mov
cwtl
sub
mov
jecxz
and
rcr
xchg
add
cmp
nop
mov
push
lcall
out
xchg
pop
or
sbb
loop
test
dec
je
inc
mov
shrb
adcb
push
inc
sbb
icebp
lods
or
dec
xchg
insl
jg
and
xlat
scas
gs
mov
mov
call
insb
sub
push
jno
pop
movsb
fistl
mov
jp
jb
xchg
cmpsb
pop
ja
sahf
hlt
pop
sub
sub
leave
mov
jne
and
imul
xor
and
cmpl
xlat
adc
aaa
insb
xchg
sarb
add
in
mov
jmp
pop
inc
hlt
repz
jne
fucomip
pop
adc
sbb
jae
xor
and
push
pusha
std
cs
mov
xor
mov
push
or
push
or
rorl
gs
mov
lods
sbb
call
mov
mov
xor
sbb
cltd
mov
cmp
pop
pop
sub
and
mov
leave
mov
or
jae
fwait
scas
fisubrl
insb
fmulp
adc
jg
lods
jg
out
xlat
in
add
sahf
inc
or
fs
add
mov
cmp
outsb
scas
enter
fldt
inc
jl
push
adc
popf
lea
jbe
jmp
enter
mov
shrl
fnstenv
ret
ss
xchg
inc
jl
push
adc
enter
mov
sti
sahf
loopne
inc
out
jecxz
cmc
jge
lret
lcall
pop
negb
xchg
mov
cmp
fstpl
jno
test
or
idivl
or
lret
addr16
xor
dec
pop
push
and
pop
fcoml
push
pop
adc
or
adc
xchg
dec
jne
adc
inc
jnp
loopne
mov
in
test
shlb
fwait
xchg
ret
nop
push
add
imul
int3
pop
lods
push
stc
sub
jge
sub
std
cmpl
in
test
xor
stc
sub
xchg
pusha
into
das
mov
pop
aad
pop
lea
mov
das
mov
pop
enter
shl
pop
je
in
mov
adc
adc
pinsrw
fs
lds
cmpl
std
fbld
ja
and
inc
fsts
test
adc
cmc
mov
sub
jecxz
fisubrs
jmp
loopne
clc
loopne
sub
inc
xor
jp
sbb
push
lcall
push
push
xor
sub
test
inc
loopne
iret
sub
sahf
mov
js
outsl
ret
mov
insl
add
jne
sub
xchg
outsl
aaa
mov
mov
push
call
add
xchg
test
bound
add
and
dec
xchg
shll
out
aam
adc
xor
js
add
push
int
sbb
cmp
xchg
push
pop
adc
adc
mov
loope
hlt
xor
xor
and
shl
icebp
xchg
jne
push
jns
or
mov
fnstcw
mov
rcll
into
mov
jmp
mull
test
cwtl
pop
loopne
mov
js
imul
mov
test
xor
cmpsl
aad
in
sbb
jg
xor
loope
fldpi
aas
inc
mov
lret
jne
iret
shll
add
or
inc
xchg
push
sarb
xlat
jle
pop
dec
mov
adc
inc
pop
jnp
jmp
pop
push
aam
cmp
out
jns
xchg
int3
sbb
dec
js
push
jge
jl
push
fs
and
fwait
iret
aad
xchg
loopne
mov
mov
in
xchg
ror
shll
hlt
inc
dec
pop
xor
inc
loopne
in
cmp
mov
hlt
mov
push
jns
cmp
or
mov
mov
jne
stos
adc
inc
push
es
pop
scas
pop
xor
clc
xchg
jae
inc
loopne
mov
inc
lahf
insb
push
sub
fwait
stos
mov
fcmovu
je
shll
jns
adc
or
xor
ljmpw
sarl
inc
pop
fs
shl
adc
push
jb
leave
insl
pop
nop
add
shll
cmp
mov
sti
roll
in
aad
jnp
scas
pop
xchg
outsl
scas
push
imul
mov
clc
outsl
sbb
adc
or
xchg
insl
out
pop
mov
int
sbb
pop
repnz
ss
test
sbb
fstl
cmp
pusha
lcall
or
sub
mov
push
popf
lahf
mov
test
fbld
dec
inc
mov
aad
sbbl
push
clc
call
adc
sub
or
inc
loope
add
xchg
mov
pusha
test
adc
cltd
push
mov
adc
push
jmp
or
daa
pusha
insb
inc
stc
std
dec
xchg
std
popf
pop
pop
nop
enter
das
cli
adc
ds
hlt
pop
les
cld
xchg
sub
push
repnz
add
dec
mov
xchg
fs
rcrb
pushf
lods
cmp
inc
lret
test
stc
dec
push
and
cmp
test
push
sbb
cmc
dec
mov
cli
daa
imul
out
fimuls
cmp
repz
dec
pop
out
cmp
mov
jle
push
enter
sub
xor
push
and
inc
call
sub
jno
dec
xchg
xchg
jns
sub
jle
lock
nop
jae
sub
roll
jmp
bswap
ficomps
cmpsb
mov
ret
xchg
and
aam
xchg
cmp
fcomp
mov
mov
ret
fidivrs
scas
or
mov
popa
add
push
arpl
fimull
xchg
es
mov
pusha
repz
inc
sub
jns
stos
iret
les
clc
out
pop
mov
test
out
lods
dec
or
push
cmp
push
jg
pop
sahf
sti
xchg
addr16
loop
insb
xchg
aad
mov
test
push
cmp
sbb
loop
add
xorb
iret
test
pop
repnz
cli
push
inc
lahf
pusha
sbb
xchg
shr
mov
daa
push
repz
pop
int
mov
ss
jb
ret
mov
imul
loop
lods
push
mov
sub
cld
outsl
data16
scas
adc
mov
sbb
xlat
mov
and
clc
push
jge
cwtl
in
inc
sub
aad
loopne
outsb
push
xchg
adc
in
push
xor
jae
xor
std
cmp
popf
rolb
xchg
icebp
dec
add
outsl
xor
jmp
out
int
jl
push
mov
sub
mov
call
mov
xchg
pop
sar
and
imul
or
pop
lret
xchg
xchg
mov
jmp
and
mov
scas
sbb
jg
mov
outsb
adc
mov
test
sub
cmc
mov
cld
push
outsl
dec
gs
jecxz
clc
std
andl
movsl
jno
iret
push
jmp
push
lock
jno
mov
dec
aam
cmp
cmp
xlat
jb
pop
mov
pushf
cmp
mov
inc
push
scas
dec
cmp
lahf
cs
adc
call
cmp
movb
xor
scas
adc
cwtl
movl
loopne
pop
scas
loope
sub
mov
xchg
pop
lahf
scas
cmpb
sbb
inc
ficompl
mov
pop
nop
fnstenv
jne
inc
cmp
sbb
dec
lock
adc
mov
dec
bound
psubw
pop
lods
sbb
mov
inc
jae
cmpsb
dec
adc
pusha
test
insb
int
das
cld
and
sub
xchg
mov
jl
movsl
js
jecxz
jp
jbe
daa
jns
data16
imul
mov
xchg
hlt
push
or
imul
ljmp
sbb
pop
inc
push
and
mov
js
mov
inc
push
push
jnp
mov
inc
shll
mov
xor
or
dec
dec
xlat
xchg
add
imul
push
or
test
inc
cmp
or
arpl
fnstsw
xlat
sbb
pop
add
div
mov
ds
mov
in
pop
fstl
scas
mov
mov
cmp
cmp
loopne
jae
sbb
mov
fucomi
inc
jmp
loopne
incb
or
dec
dec
lret
sub
inc
arpl
sub
fs
sbb
push
sub
mov
xchg
add
iret
mov
mov
dec
fucomip
into
inc
mov
adc
scas
and
jecxz
int3
stos
jmp
sbb
cmc
mov
fcom
xchg
rcrb
mov
popf
in
inc
arpl
push
insl
and
jmp
fbld
cs
sbb
mov
adc
test
mov
jne
ret
cmp
xor
dec
out
or
hlt
sbbl
outsb
test
adc
lods
and
or
outsb
pusha
xchg
mov
add
cs
sub
jbe
loope
mov
scas
sarl
ss
pop
dec
inc
ljmp
fisttpl
dec
gs
add
ficoml
and
and
jne
js
xchg
rcrl
dec
add
cmp
jae
mov
dec
push
leave
movsl
cmp
and
mov
cltd
add
pop
and
push
leave
mov
neg
xlat
xorb
dec
testb
sbb
push
push
push
int
mov
ret
and
jno
or
loope
jbe
das
xchg
fstpl
dec
pop
lahf
push
bound
lock
scas
fists
or
cmp
mov
cmc
pop
mov
xchg
unpckhps
cs
jnp
in
inc
pop
pop
push
add
inc
ljmp
sbb
push
ja
sar
mov
fsts
popf
loope
inc
mov
adc
push
stos
hlt
call
cmp
mov
mov
mov
mov
dec
sub
gs
cmp
cmp
in
jle
aad
xor
rol
jb
jmp
inc
adc
mov
ja
inc
int
data16
add
push
mov
stos
adc
cmp
mov
mov
or
xchg
das
daa
mov
xlat
pop
into
mov
jns
out
scas
rcl
mov
ret
cmp
rcll
jae
ja
lcall
inc
dec
lcall
loope
popa
mov
push
sti
inc
push
sarb
and
jb
mov
mov
jmp
cmp
mov
mov
dec
cmp
jle
xchg
lahf
aam
or
or
mov
jbe
rcrl
push
fwait
arpl
aad
jle
outsl
fldl
dec
cltd
fistpll
in
lods
loop
fnsetpm(287
mov
mov
cmp
test
sub
out
flds
jle
nop
ds
push
sti
xor
aad
dec
orb
rcrb
and
aam
xchg
into
pop
pop
jno
push
jecxz
call
rcll
dec
and
in
repnz
sub
das
dec
lock
in
imul
cmp
or
xor
into
jns
xchg
rcr
icebp
or
add
mov
sahf
icebp
lods
inc
inc
xlat
pop
jae
mov
pop
mov
mov
iret
pop
ret
xchg
jge
lcall
mov
scas
pushf
mov
lcall
sbb
pop
xor
dec
xor
out
lahf
iret
jmp
in
lcall
cmp
fists
ljmp
push
push
add
aas
adc
inc
adc
mov
lods
out
add
jg
cmpl
mov
test
ret
sbb
xor
enter
ror
pop
int3
sub
arpl
pop
into
in
sti
lods
xchg
insb
mov
fists
push
or
cmpsb
test
test
add
lret
push
js
aad
test
mov
pop
lods
xchg
loope
cmpsl
insl
pop
mov
lea
pop
insl
xor
nop
in
mov
and
pop
movsb
in
sbb
aad
jnp
xor
add
push
push
shll
ljmp
mov
mov
fidivrs
cmp
and
jnp
xor
aaa
in
jns
inc
push
inc
sbb
ja
mov
leave
push
cltd
push
loopne
dec
ja
mov
jne
inc
je
addr16
in
in
xor
fistps
ljmp
iret
inc
loop
inc
dec
xchg
pop
and
cmp
ja
cmp
in
lods
fnstenv
pop
je
xchg
je
sbb
lock
movsb
mov
adc
jle
sarl
xchg
fucomi
pop
outsb
repnz
frstor
mov
add
out
fcomps
test
je
adc
inc
pop
inc
mov
insb
enter
and
inc
mov
bound
sub
or
mov
popa
std
mov
jmp
jp
sub
nop
cmp
arpl
arpl
adc
xlat
add
subl
and
pop
jg
add
add
xchg
imull
stc
xchg
fs
jnp
xor
out
mov
ret
std
dec
pushf
nop
pusha
dec
inc
loopne
sahf
and
inc
cmp
pop
cmpsb
aam
pop
dec
jle
es
adc
les
jge
hlt
pop
ds
mov
dec
scas
sub
in
and
pusha
mov
pusha
mov
xchg
test
or
dec
and
push
adc
xor
pushf
fs
push
adc
test
jne
dec
mov
incb
inc
cmp
out
add
fcmovnu
dec
insl
cli
add
leave
jg
add
mov
inc
dec
int
xor
cmp
shr
cmp
cmp
bound
dec
sbb
pop
pushf
loopne
push
mov
outsb
sbb
inc
inc
sub
mov
adc
in
shlb
out
push
test
scas
rclb
out
cwtl
adc
inc
lret
pop
mov
cmpsb
in
cli
int3
push
mov
cs
pop
lods
jg
test
loopne
push
adc
push
xchg
sbb
lret
jmp
popa
inc
popf
iret
jno
cwtl
test
mov
dec
add
mov
insb
movl
sbb
mov
sbb
divb
mov
push
movb
and
rcrb
popa
lea
cs
sbb
push
in
sbb
and
popa
gs
icebp
notb
and
lahf
or
in
dec
push
push
cmovno
mov
rcll
ficoml
mov
cld
mov
sbb
cmp
add
test
inc
andb
dec
lods
aam
mov
jns
sbb
test
adc
inc
cmpb
xor
daa
orl
mov
mov
outsb
cmp
adc
gs
data16
dec
cmp
jae
aam
stos
fsts
mov
pop
cmp
lds
pusha
sub
rcrb
push
nop
out
lcall
jne
cmc
add
or
leave
xchg
sub
fnstenv
pop
pop
xor
dec
out
push
lea
mov
out
ror
push
testl
loopne,pn
lahf
jmp
or
pop
push
cmpsl
mov
pushf
sub
pop
fisttps
jp
pop
jle
test
adc
shll
adc
push
mov
leave
sbb
jns
pop
and
cmp
mov
push
fildl
xchg
mov
outsb
xor
repnz
jno
push
mov
xor
pop
pop
jp
xor
stos
mov
jne
mov
pcmpeqd
mov
push
xlat
push
addr16
fisttpl
mov
scas
sbb
fisttps
mov
mov
jne
jmp
push
jae
cltd
pop
ja
sub
mov
fmul
push
and
and
jne
xor
bound
int3
insl
fcoml
xor
nop
addr16
aam
aad
leave
jo
aas
lock
xor
mov
orb
sarl
mov
cmp
inc
jns
jne
xchg
aas
js
loopne
stos
dec
sub
mov
sbb
add
in
mov
cmpsb
lods
push
inc
aaa
outsb
push
xor
jmp
xchg
nop
mov
jae
add
loopne
lods
mov
sub
xor
sahf
in
push
sub
ja
sbb
sub
xchg
dec
mov
xchg
or
movsb
jecxz
xor
sub
add
cli
stos
sub
adc
str
loop
aaa
xor
sahf
test
add
ds
xor
test
adc
jae
or
or
out
lahf
push
test
fdivs
add
lret
cmpb
test
or
xor
adc
xchg
push
roll
negb
jecxz
pop
mov
push
popa
xchg
sahf
jmp
cs
cmc
fstpt
das
les
jb
idivl
inc
fisubrl
mov
jne
and
xchg
fldcw
push
scas
in
xchg
daa
lret
movsb
hlt
dec
mov
cmp
push
pop
inc
scas
cmp
adc
push
jnp
cld
fs
push
xchg
fwait
mov
loope
jae
call
out
or
jmp
or
andl
or
enter
cmp
jns
jne
mov
inc
xor
xor
sbb
mov
aaa
es
jae
call
movsl
loop
fldcw
xchg
mov
in
cmp
sub
sbb
jg
lea
fs
sahf
mov
mov
and
les
int3
adc
xchg
mov
jmp
xor
adc
pop
mov
dec
popf
push
and
mov
cmp
dec
inc
jne
dec
cltd
or
dec
adc
rcr
aam
lock
and
pop
mov
mov
mov
test
jmp
xor
mov
addb
jle
or
jne
cmp
adc
sbb
pop
outsl
js
mov
cld
les
dec
push
xchg
aam
cmp
outsb
lcall
aaa
idivb
imull
clc
into
mov
add
push
sub
in
jp
and
sbb
dec
mov
inc
jne
ljmp
push
sbb
jbe
sub
aaa
add
sub
xor
stos
dec
aam
lcall
nop
jge
push
test
and
insb
mov
xchg
out
add
out
mov
lods
in
jb
stc
mov
dec
mov
jmp
xor
mov
cld
and
inc
cmc
cmpsb
les
repnz
mov
mov
arpl
adc
xchg
js
ret
repnz
xchg
xor
adc
rolb
ja
push
in
xor
sub
mov
xchg
jge
sub
clc
cmp
pusha
addr16
out
call
std
jno
mov
jb
imul
jno
and
dec
inc
add
andl
loopne
mov
int3
daa
scas
insl
dec
xchg
js
int
and
inc
add
push
mov
test
ret
inc
pop
cwtl
cmp
faddp
fsubl
loop
loop
es
jb
mov
lds
test
xchg
lock
cwtl
scas
in
call
je
adc
inc
xor
xchg
mov
inc
and
sarb
fidivs
addr16
aad
lahf
push
cmc
imul
cmp
dec
mov
mov
inc
jmp
push
mov
mov
pop
fdivp
jbe
mov
pop
inc
adc
mov
les
pop
pop
xchg
or
inc
mov
jle
mov
stos
cmp
stos
xchg
std
lret
out
addr16
add
int3
mov
sub
push
lds
push
inc
sti
mov
lea
inc
je
aad
jno
push
push
scas
inc
mov
aas
cltd
fdivrs
jp
push
fnsave
icebp
inc
or
popf
clc
jns
mov
sub
ret
xchg
fisttps
xlat
pop
ret
xchg
les
cwtl
mov
adcb
mov
lcall
xor
xchg
div
mov
push
rcrb
outsl
inc
movsl
punpckhwd
enter
pop
inc
js
repz
ja
push
mov
jns
std
xor
imul
fisubl
cmp
shll
jmp
pop
xlat
mov
movsb
mov
and
inc
mov
and
cli
arpl
pop
push
mov
test
push
ljmp
pop
sbb
jb
sub
int
mov
sub
test
or
push
jne
cwtl
outsl
out
push
xor
movsb
pusha
filds
push
sbb
adc
and
fisttps
ja
add
or
scas
or
fldt
xchg
dec
ja
in
pop
mov
dec
push
mov
fldt
arpl
lcall
js
loopne
dec
sarb
jbe
ljmp
sysexit
inc
sub
cmp
enter
loope
push
jbe
movb
dec
mov
dec
sarb
mov
sbb
xor
mov
sbb
ja
fcoml
dec
jno
and
mov
mov
adc
imull
pop
cmp
popf
aad
push
cmp
gs
and
and
or
cmp
fadd
push
leave
fnsave
jg
mov
ffreep
add
cltd
pusha
aas
mov
and
lret
roll
inc
and
fwait
pop
insl
xor
lret
call
or
cmp
mov
scas
imul
das
stos
mov
cmpb
inc
sbb
idivb
dec
iret
int3
test
push
jl
hlt
fisttpll
mov
js
imul
add
dec
add
insb
mov
out
mov
sub
cli
test
subb
sub
add
push
pusha
mov
mov
xchg
or
mov
imul
add
insb
cmpsb
push
cmp
loop
dec
repnz
pusha
jge
iret
inc
sarl
inc
lods
xchg
inc
fistpll
subl
movsb
xchg
popa
ja
sub
dec
lea
mov
ja
pop
pop
into
inc
subb
push
sub
mov
mov
scas
movsl
sbb
icebp
push
jle
rcll
fisttpl
pusha
into
xchg
inc
push
cmp
fnsave
inc
or
insl
das
data16
std
sub
xchg
repz
outsb
lods
scas
add
lods
cs
jle
daa
jg
push
imul
add
adc
and
jmp
dec
insl
adc
xchg
xor
xor
mov
push
jp
xchg
jle
sbb
enter
push
sahf
jg
xor
inc
cmp
adc
add
sti
jp
pushf
mov
pusha
mov
and
stc
repnz
inc
sbb
mov
movsb
and
cltd
sbb
insl
out
adc
lcall
or
add
inc
push
xor
inc
repnz
cmpsb
mov
mov
sbb
mov
dec
push
fdivrl
test
adcl
mov
push
mov
mov
cmp
repnz
jae,pt
xor
sti
push
sub
pop
xchg
into
sbb
inc
scas
shl
sti
addb
add
jns
into
js
int
ret
push
cmc
das
divl
sub
mov
pop
sbb
dec
push
sbb
push
loope
dec
add
hlt
inc
jns
lret
sbb
ror
push
push
cmc
and
das
or
cmp
insb
lea
shl
jb
jbe
incl
adc
popf
ja
addb
mov
sub
enter
cld
bound
xor
or
flds
push
dec
xlat
xacquire
xchg
stos
push
arpl
addb
imul
mov
add
xlat
adc
sbb
fcoms
dec
test
cmpl
arpl
icebp
cmc
call
cmp
and
aad
push
nop
cltd
sbb
jbe
mov
jp
mov
pop
repnz
cmp
popa
or
push
lods
mov
out
cmp
sahf
push
aam
fimuls
jns
xor
fisubs
sbbb
out
push
xorl
sub
mov
outsl
adc
out
xchg
adc
sbbb
rclb
popf
cmpsb
xor
jae
decb
cmp
mov
and
pop
push
cmp
cmp
xchg
hlt
inc
and
sbb
lods
sahf
int3
out
mov
and
aad
test
enter
sti
dec
je
int3
insb
fnstsw
and
push
bound
pop
xchg
in
inc
pop
mov
inc
xor
in
and
lock
cs
dec
adc
notb
loope
mov
and
fsubrl
aad
sub
mov
push
mov
xchg
or
js
mov
inc
jmp
sub
xor
push
ret
dec
jns
mov
je
loop
outsb
push
or
jl
sbb
jge
addr16
push
push
cs
iret
out
jno
lcall
jne
push
or
test
cltd
add
ljmp
jg
adc
pop
mov
clc
mov
or
dec
mov
loope
lret
insl
push
divl
int3
xchg
jae
push
loope
ss
jne
mov
cld
adcl
sbb
inc
pop
ret
mov
or
inc
push
mov
fstpl
dec
loop
xchg
push
sbb
xchg
xorl
mov
jecxz
adc
and
mov
enter
cli
xchg
mov
pop
jbe
cmp
push
rcll
lock
outsl
pop
mov
sbb
lods
lea
adc
nop
mov
and
dec
push
or
test
dec
insl
in
push
jle
mov
das
icebp
push
lods
and
int3
pop
pop
adc
pop
sbb
gs
pop
jbe
inc
xchg
popf
inc
nop
pop
fcomi
addr16
and
xlat
or
sub
jno
es
xor
pop
out
inc
incl
push
dec
pop
leave
lods
popa
int
cmp
mov
cmp
out
or
jg
stc
xchg
lahf
sub
adc
sbb
sbb
cmp
sub
insl
push
dec
fadds
hlt
jae
mov
addl
add
inc
leave
ljmp
sbb
push
add
add
icebp
inc
xchg
test
es
mov
mov
add
add
iret
push
jb
mov
int
loopne
fwait
dec
cmp
xor
cmp
mov
stos
dec
jle
rcr
inc
ljmp
and
xchg
bound
adc
sahf
jp
sbb
cmp
xor
sbb
or
or
xor
daa
cs
cwtl
push
cmp
scas
or
dec
cltd
les
xor
sbb
popa
cmp
push
stos
xchg
adc
pop
lock
mov
mov
int
ljmp
fs
lret
lods
pop
rcrb
or
enter
loopne
xchg
ret
mov
scas
in
or
mov
jo
adcl
jb
mov
lea
out
pop
lock
pop
inc
sahf
xchg
leave
les
jne
add
test
push
mov
jmp
adc
movsb
subl
mov
cmpb
movsb
daa
pop
mov
and
dec
loop
pop
insb
insl
mov
inc
mov
add
push
jge
xlat
cwtl
test
testb
imul
daa
hlt
cld
pop
sarl
push
ret
cltd
mov
daa
push
int3
adc
rcrl
pop
jns
mov
xchg
cmp
mov
aaa
xorl
add
pop
add
int
test
gs
cmpsl
in
adc
pop
imul
scas
aaa
cmc
mov
repz
sbb
dec
pusha
sbb
sbb
leave
mov
outsb
imul
xor
jnp
sahf
pop
adc
xchg
in
pop
fnstcw
sbb
lahf
mov
aaa
jl
movsb
aaa
loop
pop
pop
sbbl
adc
iret
ret
popf
fdivrs
nop
sub
imul
and
jnp
xor
outsl
sbb
mov
insb
inc
and
popf
rolb
ljmp
dec
inc
inc
sahf
pop
lds
in
gs
shrl
movsl
adc
dec
push
mov
push
cmp
adc
lds
sub
xor
mov
adc
push
fisubl
jne
repnz
mov
movsl
dec
sbb
cmp
jno
or
je
pop
push
adc
ror
sbb
adc
adc
sub
icebp
inc
inc
movsl
pop
aam
test
test
fdivr
or
push
out
subl
xlat
ja
fsub
out
mov
cmp
jp
mov
sub
or
out
aaa
inc
scas
mov
leave
fwait
nop
sub
or
je
fsubp
stos
out
or
pop
fisttpll
mov
sub
pushf
xchg
loope
orl
lret
mov
scas
jp
cmp
stos
cltd
js
xor
mov
hlt
in
cmp
ja
adc
lahf
xchg
pop
cmp
sbb
and
int
inc
sub
cltd
fisttpll
cmpb
ljmp
pop
rorb
xchg
sub
mov
ja
push
test
add
push
mov
xor
inc
iret
stos
cmc
xchg
sbb
sar
add
cwtl
xchg
data16
jg
xchg
jbe
sbb
xchg
and
leave
sti
inc
adc
icebp
lcall
int
stc
cmp
lret
aam
mov
pushf
lock
inc
fadd
lret
lcall
lods
mov
mov
scas
loop
inc
rcpps
jb
loopne
dec
inc
in
fcoml
push
out
push
popa
xchg
lret
cli
mov
xchg
movsl
ret
add
cmp
or
sub
jo
notl
adcl
dec
lret
sbb
addr16
cwtl
rcll
push
mov
leavew
leave
adc
cmp
pop
roll
into
mov
test
scas
and
je
xchg
push
pop
cmc
scas
mov
sub
mov
gs
test
les
mov
mov
dec
sub
pop
pinsrw
scas
jb
cltd
in
add
cmp
mov
add
or
cli
add
insl
pushf
cltd
mov
sbbb
pop
mov
scas
xchg
rcrb
dec
jg
pop
mov
add
mov
xchg
dec
sbb
aas
pushf
pop
arpl
in
jmp
das
or
inc
ds
xor
and
in
test
pop
sub
fndisi(8087
dec
fsts
jae
les
xchg
fistpll
lods
mov
ja
repnz
cmp
shlb
dec
icebp
ds
mov
mov
or
enter
pop
rclb
sbb
push
sub
inc
sbb
jae
insb
cmp
sbb
adc
mov
je
mov
mov
call
mov
mov
xor
insb
push
dec
js
movsb
jl
dec
hlt
and
xor
js
rclb
push
ss
mov
aas
les
sub
sbb
ficoml
inc
icebp
adc
jb
ret
xor
pop
jl
sete
push
subl
fwait
mov
test
pusha
test
adc
mov
mov
mov
aaa
fcmovbe
inc
mov
lea
sbb
notl
in
movsl
sbb
js
scas
pop
sti
dec
mov
fstl
and
sub
int3
jmp
repz
sub
add
dec
flds
cs
jnp
pop
gs
jge
stos
pop
aas
pop
pusha
dec
imul
mov
movsb
mov
roll
sub
jecxz
xchg
bound
jp
dec
dec
jp
and
push
push
pop
ss
push
adcl
sti
pushf
jecxz
jb
dec
aam
loop
and
scas
pop
jo
mov
jb
call
push
cwtl
push
adcb
xor
fcomps
fsubrp
cmp
inc
leave
mov
out
push
movsl
out
or
fsubrs
mov
pop
mov
outsl
push
mov
push
clc
aas
jl
scas
out
arpl
adc
pop
and
fldcw
rclb
bound
or
sub
push
sub
shrl
js
pop
in
arpl
xor
mov
add
arpl
fstp
add
add
pop
sbb
ds
pop
adc
into
sub
push
xchg
stos
shll
mov
inc
adc
mov
push
pop
outsl
sahf
dec
xlat
xor
jno
popa
ja
popa
hlt
arpl
fwait
pop
xchg
and
cmc
es
je
in
mov
addb
int3
hlt
inc
dec
pop
xor
pushf
dec
xor
cmp
out
inc
repz
push
icebp
or
ficompl
sbb
fdiv
or
pop
cmp
fs
xor
aam
pop
mov
fcoms
adc
pusha
xchg
test
jno
cmp
loop
jbe
mov
dec
pusha
lret
std
push
out
mov
notl
fwait
out
dec
call
mov
in
inc
xor
sbb
cmp
loope
insb
es
mov
in
test
sub
pop
cmovp
xchg
enter
cmpsb
and
inc
pop
cmpsb
ret
pop
nop
add
sarb
push
insb
sbb
jge
and
insb
aam
jp
and
gs
roll
clc
cmp
gs
cmpsl
les
pusha
into
xor
pop
sub
and
jge
adcb
cli
dec
xchg
jnp
add
cmp
push
into
cltd
xchg
dec
iret
ret
fcomp
rorb
fisttpll
xor
xor
cmp
clc
inc
or
rcll
xor
arpl
mov
push
xchg
jo
enter
xor
jmp
xorb
mov
rorl
fwait
arpl
shlb
outsw
cld
jg
stos
shll
adc
mov
sbb
mov
cmpsb
pop
or
cmp
movaps
xorb
mov
pop
push
cmpsl
lods
movsl
sti
in
out
adc
inc
add
xlat
jo
inc
mov
cmp
xor
add
inc
ds
dec
sarb
scas
xchg
mov
inc
xor
jae
jecxz
fwait
pop
sbb
outsl
gs
sub
push
stos
push
xor
add
mov
je
xchg
scas
sub
dec
push
mov
push
sti
lods
lretw
mull
movsb
out
dec
mov
lock
cli
les
ds
adc
dec
mov
ja
cmpb
lea
push
enter
jae
pop
sti
pop
pop
cmc
popa
leave
jo
lea
sarb
call
dec
imull
mov
pop
out
and
xchg
push
scas
pop
fs
push
push
xchg
mov
inc
or
lea
and
mov
pop
aaa
xor
fs
and
and
test
data16
aad
mov
mov
adc
clc
enter
jno
mov
mov
sbb
cmp
enter
insb
xchg
dec
xchg
inc
push
les
cmpsl
dec
dec
rorb
movsb
int3
dec
into
and
inc
repnz
into
js
sahf
fwait
jp
and
test
jg
push
and
loope
jae
repz
jmp
int
pusha
insl
pusha
aaa
push
inc
ljmp
test
cltd
icebp
xor
mov
pop
xchg
mov
adc
mov
push
ja
call
dec
xchg
ds
stos
jecxz
lret
test
outsl
jo
xlat
fisubl
jns
xchg
outsb
or
push
cmc
stos
mov
pop
outsb
and
leave
daa
loopne
inc
push
in
push
aam
jne
xchg
mov
inc
dec
jp
mov
sbb
mov
es
jns
push
and
loopne
sbb
scas
cmp
adc
mov
adc
dec
dec
jno
out
sbb
add
pop
stos
pushf
xor
push
sarl
sbb
xor
inc
rorb
xorl
pop
push
pop
rcrb
jae
aad
sbb
in
imul
jmp
dec
mov
and
fs
pop
popf
pop
shll
inc
repz
mov
pop
jae
cld
movsl
in
pop
mov
shrb
lahf
mov
movsb
into
fstpl
sub
das
and
loopne
fwait
mov
test
test
mov
mov
xorl
incl
sub
lods
mov
movsb
out
mov
movsb
sbb
outsl
nop
and
pushf
sarl
mov
and
inc
rcl
pushf
xchg
cltd
sbb
mov
mov
jo
xchg
sub
ja
les
outsl
sub
lds
adc
daa
test
sub
shr
pop
aam
cmp
mov
popa
shll
push
pop
push
sbb
ret
lret
mov
mov
call
fcomip
scas
mov
dec
int3
aad
mov
add
and
pop
and
mov
test
inc
sub
rorl
loopne
mov
adc
cmpsb
xorb
int
push
aad
inc
cmp
inc
push
cmpsb
push
clc
push
push
sbb
mov
and
cmpsb
fstps
push
icebp
lds
jge
dec
sub
sbb
mov
dec
popa
out
add
mov
jne
dec
pusha
pop
pushf
push
call
adc
inc
xchg
lahf
ljmp
les
nop
rolb
pop
ficomps
lods
cltd
dec
gs
push
push
jmp
sbb
jl
outsb
rcrb
js
movsb
mov
push
jo
cmpsl
fistl
movsl
cwtl
scas
inc
call
ficoms
in
pusha
test
pushf
das
or
and
or
mov
lock
inc
lds
xor
scas
mulb
xor
movsb
aas
mov
cmp
jmp
sbb
mov
jns
inc
jnp
push
cmpsl
sarb
inc
mov
push
sbb
testl
xchg
out
pop
mov
adc
and
pop
popa
pop
setg
mov
rolb
decl
hlt
inc
insb
test
adc
leave
ret
call
gs
inc
dec
in
sbb
loopne
lock
push
ret
das
sbb
inc
sub
mov
and
push
xor
xlat
aas
dec
and
insl
ret
rcrl
movsl
push
mov
xchg
sbb
push
cmp
repz
iret
xchg
mov
in
in
xlat
push
or
inc
test
test
sbb
test
movl
mov
push
push
inc
jne
ds
lods
lock
aas
movsl
sahf
pop
push
les
add
lret
push
loopne
and
jbe
add
mov
sahf
mov
mov
xchg
xor
pop
push
les
jns
fists
imul
out
jmp
mov
dec
es
fdivr
stos
pop
rorb
dec
ret
inc
pop
dec
add
mov
and
fnstsw
adc
pop
stos
xchg
in
jnp
or
jb
stos
daa
in
jecxz
lock
test
xchg
in
imul
fst
sbb
out
pop
popf
xchg
fdivrp
sar
out
fcmove
into
and
mov
sahf
or
ficomps
cmpl
jg
fidivs
pusha
pop
outsl
mov
cltd
xor
in
ljmp
xlat
int3
xchg
inc
lret
lods
dec
outsl
arpl
sbb
std
pushf
xor
ja
dec
sub
mov
pop
and
rorl
inc
aaa
rcrl
jp
cld
inc
cmp
mov
and
call
dec
push
ja
sbb
movsb
xchg
sub
pop
inc
mov
ficompl
mov
ds
adc
fisttpll
sub
and
add
cmpsb
pop
fcoml
or
in
jecxz
rcrb
rcll
mov
or
push
mov
adc
jmp
cmpsl
mov
xchg
das
ret
clc
out
sbb
cld
ds
outsb
sub
push
addr16
and
test
icebp
int
jbe
and
mov
cmp
push
mov
arpl
jg
mov
cwtl
mul
sub
fwait
das
clc
or
push
stos
xor
lret
mov
cmpl
lods
les
mov
push
enter
mov
subb
add
ss
fisubs
lods
xchg
mov
add
call
jmp
mov
jmp
cmp
jo
xchg
jl
mov
mov
jp
leave
xchg
mulb
jb
add
mov
icebp
push
push
push
adc
push
in
xchg
jo
out
ret
js
sti
pop
and
fists
mull
hlt
lock
push
mov
xor
movsb
inc
push
add
test
icebp
aas
stc
iret
jne
lcall
or
adc
adc
addr16
push
xchg
adc
pop
in
pop
cs
cld
stos
pushf
pusha
fcoml
rorl
ss
bound
push
pop
sti
xor
loopne
jae
stc
js
int
push
lods
sbb
push
imul
test
test
out
jg
ret
jg
mov
push
notl
sete
in
inc
aaa
jle
xchg
adc
testb
fsubrp
pop
rclb
rep
in
jns
cmpsl
das
mov
add
mov
sbb
adc
stc
aad
stos
scas
sbb
std
in
mov
sub
xor
cmc
and
out
movsl
cmp
mov
imul
lcall
push
rcl
fdivp
inc
jmp
xchg
or
push
jne
sub
cwtl
and
jns
pop
pusha
jb
cs
ds
in
or
sub
stc
and
sbb
add
or
bound
add
mov
cmp
jnp
cmp
or
sub
sub
jb
sbb
ds
es
iret
jmp
icebp
cmp
lods
mov
xchg
jmp
sbb
mov
popf
dec
orl
neg
movsl
xor
das
outsb
cmpsb
scas
ret
dec
xchg
mov
lret
inc
pop
nop
pop
aad
mov
imulb
pop
call
jae
out
mov
adc
jecxz
icebp
lods
gs
fcmovnbe
add
fidivrs
inc
jb
aam
pop
inc
test
and
xor
lahf
mov
and
xor
and
dec
mov
stc
out
or
negl
push
rcll
and
mov
dec
aam
movsl
xchg
nop
ljmp
gs
leave
mov
imul
jno
cmp
mov
xchg
arpl
xchg
or
mov
dec
lea
cmp
imul
nop
clc
sbb
inc
xchg
ss
push
mov
scas
cmpl
inc
inc
or
fbld
inc
cmp
movsb
sub
adc
divb
jp
jmp
push
xorl
push
xor
dec
jnp
adc
shr
pop
aad
cltd
aas
xor
ret
je
pop
lds
inc
sub
loope
and
hlt
cmc
fstl
imul
cwtl
pop
std
jo
out
mov
sub
lock
in
push
mov
add
addb
sbb
sub
sbb
xor
xor
push
movsl
jecxz
push
inc
mov
outsb
and
jg
scas
out
and
xchg
mov
cmp
ss
xchg
mov
mov
mov
loope
add
lcall
adc
mov
rcll
inc
nop
adc
das
fwait
daa
push
das
dec
lea
insb
dec
jmp
mov
mov
adc
push
adc
and
outsl
icebp
and
jns
imul
mov
and
je
mov
or
xchg
mov
test
sub
fdivrs
mov
or
outsl
mov
cmp
xchg
fimuls
dec
arpl
pop
cmpsb
push
push
dec
dec
push
mov
pop
pop
shrb
orl
mov
das
shl
xchg
je
push
in
aas
ffree
dec
jecxz
pop
mov
movsb
test
push
je
or
pop
stc
pop
push
cli
into
jne
adc
cli
add
jl
dec
out
dec
mov
dec
loop
cmp
fwait
mov
ss
xchg
orl
mov
pop
jge
mov
bound
push
int3
adc
jmp
test
inc
cs
push
push
insl
lahf
mov
adc
jno
in
dec
and
pop
jmp
stos
inc
test
jp
pop
dec
mov
sbb
pop
out
aaa
pop
mov
scas
mov
addl
pop
int
into
add
or
and
outsb
push
mov
ja
sbb
stos
mov
movsb
adc
lret
leave
fstps
adc
je
add
enter
cmp
fsts
ss
push
loop
shlb
popf
adc
add
cmpsb
lret
lds
add
lock
nop
stc
jmp
cmpsl
inc
inc
jbe
dec
int3
lcall
das
scas
sbb
mov
pop
xlat
jecxz
out
sub
or
push
stos
add
dec
stos
in
xchg
lds
rol
cmp
jb
mov
add
test
icebp
sbb
fcoms
ds
lret
cmpl
adc
mov
in
out
cwtl
mov
mov
sub
push
pop
loope
out
cmp
mov
ja
cmpsb
imul
nop
daa
shrl
or
xchg
sbb
dec
dec
out
inc
jg
imul
mov
pop
pop
into
fwait
dec
jge,pn
xchg
ljmp
pusha
xchg
dec
sbb
lods
xchg
adc
cmp
mov
xor
imul
sub
cltd
cmpsb
mov
mov
pop
jmp
in
les
mov
jb
test
sbb
pop
fimull
sarl
cmp
push
ss
dec
inc
jl
out
sbb
sub
dec
sbb
nop
mov
inc
xor
aaa
mov
inc
inc
adcl
mov
movsl
dec
mov
scas
into
xchg
sub
mov
pop
jnp
outsb
inc
inc
pushf
push
stos
negl
fcmovnb
push
or
loop
stc
sub
leave
fistpl
sbb
dec
lret
sub
cmpsb
inc
mov
mov
cmpsl
cld
jns
lret
in
inc
mov
sbb
and
insl
ljmp
push
call
setbe
dec
ret
es
cltd
rolb
and
loop
mov
jb,pt
pop
pop
aas
mov
popa
ljmp
repnz
out
inc
dec
lcall
in
jbe
pop
cmp
sub
cmpsb
jg
stos
push
dec
test
test
pop
das
mov
je
ljmp
and
loope
mov
test
inc
push
or
loopne
mov
push
sbb
push
lods
mov
jb
mov
jl
push
inc
dec
mov
mov
xchg
out
lods
ljmp
push
imul
jecxz
push
clc
daa
sbb
inc
xchg
dec
sub
sub
lret
cmc
pusha
cmpsl
xor
push
cmp
lcall
push
out
testl
cmc
por
pusha
and
mov
lock
cmp
fldenv
sub
xor
pop
sbbb
push
inc
es
cmp
dec
aas
sub
adc
push
fsts
loopne
add
repz
ret
xchg
clc
repnz
insl
sbb
stos
pop
daa
adcb
xor
xchg
aam
lcall
push
xor
mov
cmp
push
xlat
add
nop
mov
and
xchg
mov
and
lss
sbb
stos
jl
push
lock
pop
inc
popl
cwtl
cmp
jg
lcall
rcll
and
or
cmp
insl
lahf
mov
xor
sbb
rolb
popa
jns
add
push
popf
movsb
mov
bound
jecxz
jns
std
jae
lahf
sti
cs
mov
leave
jnp
or
lods
leave
je
inc
jmp
add
sub
or
or
dec
mov
das
mov
cs
cltd
pusha
cmp
jno
mov
inc
xor
inc
jg
push
push
mov
rorb
mov
mov
aas
enter
into
lretw
les
jns
lods
aad
or
pusha
aas
or
movsb
fidivl
inc
stos
iret
cwtl
xchg
call
mov
hlt
test
hlt
mov
xchg
loop
adc
xchg
js
repnz
xor
xor
adc
insl
xor
mov
stc
out
inc
adc
repnz
pop
xchg
gs
enter
popf
fstpl
fnsave
cmp
test
pusha
push
push
inc
sahf
lods
das
popf
adc
xchg
mov
rcrb
mov
xchg
ret
pop
shlb
popf
jge
je
dec
nop
popa
pop
push
jmp
push
cmp
call
mov
incl
les
cmpsb
cltd
mov
cltd
and
mov
xor
mov
addr16
jae
or
std
or
add
or
jb
push
mov
and
ds
sti
addr16
fstl
fistps
pop
scas
repnz
dec
adc
xchg
pop
std
pop
pop
scas
clc
enter
loopne
shl
or
xor
int3
movsl
cld
xchg
push
and
dec
dec
or
sbb
scas
repnz
mov
loop
jnp
pop
daa
imul
pmaxub
subl
icebp
into
insl
shl
fadd
or
add
insb
mov
loopne
or
lods
fcmove
lock
mov
in
xlat
jae
sub
jno
shr
pop
push
and
xchg
fcomip
and
ds
add
fisttpll
mov
mov
inc
xchg
sti
adc
cmp
dec
sbb
stos
xchg
xorb
xchg
inc
or
mov
jge
fisubl
std
lock
mov
fwait
nop
dec
and
ret
call
sub
sbb
adc
ficoml
dec
decb
mov
jecxz
lods
inc
mov
sar
fstl
jecxz
pop
mov
les
jp
enter
in
push
mov
sub
or
jecxz
daa
movsl
or
daa
outsl
pusha
cmp
jae
jge
jo
xor
adc
add
jo
scas
outsb
shll
inc
dec
mov
adc
pusha
jo
mov
jne
jg
or
push
icebp
addr16
sub
iret
add
movsl
rorl
in
jbe
mulb
rorb
push
fsubr
inc
xchg
ret
repnz
lahf
xchg
int
bound
in
pushf
inc
rcrb
lcall
jne
aas
lret
add
mov
jle
cs
inc
xchg
int
mov
jg
popf
jl
jp
cwtl
stos
lea
pop
lods
inc
fsts
out
pop
mov
mov
mov
xor
add
mov
std
or
test
pop
jne
dec
test
pop
and
push
sub
pop
gs
xchg
xchg
leave
xchg
push
add
lret
jae
inc
lods
sbb
insb
add
push
movsb
je
popa
and
rcrb
lds
popf
bound
xlat
push
aad
jecxz
cmpsl
xchg
add
les
shlb
xor
and
lods
push
mov
pop
push
pop
add
and
test
jle
repnz
cmp
xchg
cmp
loope
or
fsubrp
or
iret
jecxz
pop
xor
repz
js
test
xchg
push
rclb
cli
pop
jae
sahf
fs
inc
bound
xor
mov
adc
inc
adc
std
jmp
test
or
lds
pop
lcall
hlt
xchg
fs
dec
cmp
pop
sub
or
in
or
xchg
lcall
daa
xor
push
mov
xor
sbb
mov
testl
lahf
lret
sub
stc
pop
and
push
sbb
in
leave
inc
push
adc
fcoml
adc
icebp
ja
data16
cmp
mov
sub
aad
dec
notb
ljmp
push
mov
xchg
cmp
cltd
push
mov
divl
pop
push
rorb
jmp
lods
aam
xchg
hlt
and
mov
das
test
xchg
stos
and
rcll
xlat
xchg
jge
fadd
sub
pusha
movsb
loop,pn
and
stc
xchg
movsb
aam
or
insb
shrb
cmp
rcrb
daa
ds
mov
test
into
aam
popf
clc
cmc
dec
push
xor
jge
jns
pop
inc
add
insl
mov
mov
aaa
or
mov
test
lock
cwtl
add
icebp
add
test
mov
and
in
sbb
mov
mov
fucomip
nop
or
pop
imul
sub
xchg
incb
icebp
bound
test
and
into
jae
ss
dec
sub
fisttpll
arpl
fldl
fistpll
lret
adc
das
jo
push
shlb
fwait
pop
and
mov
rolb
sub
data16
mov
jge
jmp
mov
pop
mov
and
and
pop
out
inc
sub
ret
add
jbe
jne
xor
dec
push
mov
pop
and
mov
adcl
lea
dec
mov
cmp
mov
mov
call
pop
sbb
xchg
sub
das
and
sbb
test
bound
pop
jns
mov
jnp
mov
stos
adc
jnp
arpl
iret
add
out
sbb
fcoml
scas
cmpsl
mov
lock
cld
sbb
mulb
pop
adc
dec
push
test
adc
xor
add
lods
xorl
jo
mov
or
pushf
lret
mov
ss
mov
out
xor
adc
cmpsl
push
scas
cmp
repnz
mov
inc
mov
mov
jb
jge
dec
sub
mov
test
add
cmp
aaa
push
stos
lret
mov
adc
sahf
test
pop
imul
jl
xlat
enter
addr16
cmpsb
xor
push
jnp
sbb
and
rcll
in
loope
jo
outsb
dec
jp
adc
out
scas
and
je
xor
adc
das
push
in
nop
cmp
or
jl
pushf
xlat
stos
push
jns
fbld
push
jo
sbb
mov
pop
mov
add
ljmp
push
rcr
or
sti
test
dec
addb
stc
rcr
mov
push
sub
xchg
and
not
jge
add
test
add
and
shll
push
cmp
repnz
dec
add
dec
ret
lea
push
fildl
sbb
jbe
or
xchg
jmp
into
cmc
push
push
mov
mov
xchg
xor
mov
dec
les
xchg
dec
inc
and
inc
test
in
clc
fcompl
adc
adc
js
mov
insl
push
jmp
xchg
lds
adc
in
int3
xor
pushf
into
dec
gs
cmp
rcrl
pop
xchg
fs
int3
imul
ds
sub
cmp
xor
scas
jp
icebp
or
ja
lock
mov
xor
jno
shll
push
inc
push
bound
mov
jne
jge
int3
inc
and
jns
loopne
mov
xchg
and
add
mov
inc
hlt
cmp
fimull
fwait
jns
lods
push
sbb
bnd
into
sub
out
pop
xlat
movsl
or
cld
xchg
pop
dec
mov
rorl
pop
xchg
lods
shl
push
shlb
loopne
mov
add
jl
imul
adc
shlb
push
and
mov
push
adc
nop
movsb
jl
inc
or
inc
mov
jg
pop
xchg
xchg
stos
sbb
lds
mov
int
jle
mov
mov
cmp
shlb
out
ds
andl
mov
sub
pop
xchg
leave
aam
cld
cld
or
jg
ljmp
movsl
fcomps
mov
js
fistps
mov
mov
scas
out
ret
idivl
jl
jne
cmp
pop
sub
sub
mov
push
jb
sahf
ret
ret
jmp
movsb
pop
test
cmp
mov
mov
pop
adc
das
lret
xor
adc
icebp
mov
cmp
cmp
enter
mov
imul
stos
rolb
sub
ljmp
jmp
loopne
pop
and
subb
arpl
add
in
adc
iret
insl
repnz
jnp
not
cwtl
bound
roll
in
into
ss
sahf
jle
jle
adc
fidivrs
fcmovu
inc
test
jbe
pop
jmp
int
mov
loope
mov
fildll
stos
je
mov
sahf
movsb
jmp
pop
mov
jl
in
rolb
xor
pop
jg
out
jl
hlt
test
aad
mov
sub
fs
loop
lods
daa
xchg
rcll
fxtract
out
pop
rep
push
les
and
popf
in
adc
aad
pushf
xchg
hlt
negb
fisttps
cli
mov
inc
pop
int
adc
sbb
xor
out
inc
pop
jbe
sbb
lds
movsl
push
cmpsl
iret
popf
push
pop
sbb
mov
cmpsb
sar
xor
imul
adc
add
test
dec
int
fdivs
jmp
or
dec
aas
lret
ljmp
fistl
sbb
dec
push
js
lret
sub
cmp
mov
notb
xchg
push
and
sub
xchg
cli
orb
sub
jne
es
mov
inc
cmp
cli
push
bound
sub
in
lahf
mov
test
adc
jne
insl
inc
pop
adc
cwtl
push
cmp
ljmp
pop
adc
repz
jae
pop
pop
std
xchg
lret
xor
ds
lea
cmp
clc
in
fimull
cs
nop
repnz
gs
pop
loope
dec
adc
cmp
and
scas
je
mov
testl
out
outsb
sbb
dec
rcrl
das
ret
insl
les
adc
loop
add
mov
jnp
addr16
and
popf
adc
imul
cmp
and
sub
fwait
bound
xchg
int
xor
jnp
aaa
js
jmp
cs
aad
cmp
out
and
push
fwait
sbb
std
ja
cs
mov
or
imul
shlb
ret
inc
jb
adc
clc
cmp
in
testb
lods
jbe
int
sahf
out
push
shlb
mulb
xor
or
jl
test
push
and
enter
jo
gs
pop
mov
cmpsl
pop
call
sahf
sbb
arpl
shll
cld
xor
out
daa
pop
cmp
lock
pop
dec
adc
jmp
jbe
enter
xor
out
xchg
int3
push
loopne
adc
popf
pop
insl
mov
mov
mov
data16
xchg
lea
scas
mov
xchg
dec
or
ja
mov
out
xchg
stos
in
call
adc
push
aam
das
in
jbe
lret
arpl
and
push
add
add
fistl
mov
and
loopne
gs
rcll
adc
rorl
add
mov
fcomip
lods
fcoml
xchg
mov
push
cltd
and
icebp
scas
stos
mov
mov
jbe
jg
xchg
add
in
jle
jecxz
pop
out
ds
les
fnstenv
inc
or
fwait
roll
sub
lret
mov
cli
add
jnp
out
mov
xchg
pop
pop
enter
imul
mov
mov
hlt
push
inc
shll
in
into
jle
inc
pop
je
fwait
push
andb
fisttpl
push
xor
pop
sub
add
pushf
push
cmpsl
sbb
lods
mov
mov
into
adc
fcoml
movsl
arpl
and
daa
or
mov
in
push
pop
pop
fwait
mov
rorb
in
enter
jp
loop
push
out
mov
mov
mov
scas
mov
into
shll
xchg
and
outsb
out
fiadds
xor
pop
adc
pop
pop
icebp
ss
jp
lea
sub
xchg
in
cld
into
sbb
loope
popf
mov
lcall
jo
scas
xlat
mov
fwait
sub
xchg
push
pop
sbb
dec
mov
cmp
mov
outsl
push
out
xor
cli
test
and
bndstx
pop
mov
xchg
ret
inc
nop
shlb
mov
dec
shl
adc
add
test
in
sbb
jle
jmp
mov
addr16
dec
and
sbb
bnd
hlt
and
jne
rorl
mov
push
test
jge,pt
cmp
mov
xor
add
xchg
in
andb
jecxz
mov
sbb
pop
inc
jle,pn
call
shr
mov
mov
mov
rcrl
fisttps
arpl
push
sahf
xchg
sub
push
repz
sbb
jo
cmp
xor
push
sub
sbb
pop
add
mov
stc
pop
mov
add
mov
mov
insl
xchg
repz
fldl
test
lret
add
fcompl
xor
arpl
rep
cli
int3
mov
ds
arpl
stos
dec
cmp
js
mov
shl
outsl
test
rolb
ret
and
pop
jle
jle
cmp
sbbb
lods
xchg
unpcklps
movsb
shll
pop
call
sbb
add
ficompl
les
bound
movsl
push
jp
mov
imul
push
inc
mull
mov
sbb
add
movsl
mov
arpl
cmp
dec
out
xchg
lds
repnz
fwait
mov
lahf
int
mov
repnz
xorl
cs
pushf
xchg
push
push
sbb
cmp
adc
pop
pushf
pusha
mov
hlt
call
js
frstpm(287
push
jbe
sub
pop
shrb
mov
add
insb
lods
inc
scas
sbb
lcall
lods
xchg
jmp
jne
mov
addr16
mov
xor
and
xchg
pop
adc
mov
xor
aaa
push
xchg
push
addr16
xabort
outsb
lods
or
lahf
ja
push
add
stc
jg
mov
cmp
add
xchg
lcall
test
ret
pop
lret
jl
xchg
xchg
and
and
push
in
test
dec
pop
fidivrl
mov
arpl
mov
pop
push
cmp
push
jno
call
or
sar
mov
fsubrl
sub
loop
movsb
sbb
repnz
dec
add
or
pop
dec
mov
lods
pusha
mov
sbb
jae
jl
data16
jg
movsb
sbb
test
daa
test
or
or
test
push
pop
inc
insb
sub
cmp
clc
and
adc
sbb
mov
jl
int
inc
cmp
insb
shlb
mov
out
push
add
cltd
xchg
xchg
daa
lcall
mov
and
pop
int
popa
in
or
pop
scas
int3
pop
test
lahf
sbb
cmp
push
cmp
or
adc
pop
notl
mov
add
out
test
test
mov
fdiv
adc
dec
mov
xchg
dec
fadds
cwtl
xor
inc
push
push
pop
jnp
jo
jg
outsl
adc
call
call
aas
cmpsl
push
or
push
cli
add
nop
ffreep
ja
lock
popa
test
hlt
mov
jl
push
pop
mov
mov
push
inc
rol
cmp
adc
fnstsw
cmp
and
or
pusha
outsl
outsb
in
mov
fstl
jp
add
push
sub
mov
inc
out
mov
or
and
adc
adc
sbb
cmp
test
jle
mov
es
mov
sbb
test
cmc
cmp
sub
push
xchg
pop
push
push
scas
repnz
cmpsl
inc
push
shl
xor
adc
cmpsl
test
pushf
xor
insl
dec
repnz
mov
es
fsubrp
enter
std
fisttpl
into
lret
je
sub
cmp
aad
leave
mov
stos
push
mov
popf
stc
mov
lea
fdivs
sub
fisttpll
data16
popa
in
lods
adc
nop
rcll
movsb
adc
pop
cmp
das
fidivrs
fcmovnbe
pop
adc
xor
mov
in
je
aas
iret
cld
adc
xchg
sarl
sbb
loop
sub
loope
cmp
inc
repnz
adc
movsl
jl
adc
test
lea
mov
jge
insb
jb
rorl
sub
jne
xor
aas
gs
loope
sub
push
fwait
inc
push
lcall
out
mov
mov
ret
outsl
out
into
mov
dec
mov
popf
jge
pop
xchg
xor
sbb
xor
clc
shl
test
or
in
pop
out
clc
cltd
dec
lods
enter
xor
loop
roll
jecxz
aad
out
js
mov
xor
aam
loope
jns
pop
mov
sarl
stc
test
xor
iret
sbb
pop
mov
cmp
xor
ficomps
cmp
dec
stos
xorl
popa
lods
test
jle
cld
das
mov
pop
popl
stos
xor
rolb
adc
and
aas
loopne
leave
push
in
inc
mov
packuswb
mov
aaa
fadd
ret
cmp
ss
xchg
pop
cmp
or
fdiv
out
inc
rorb
adc
int
outsb
push
movsl
mov
or
cmp
data16
and
inc
dec
xor
jecxz
les
sbb
stos
fbld
daa
stc
sub
int3
jae
inc
xor
popa
pop
inc
movsb
negb
sbb
push
js
sub
dec
test
rclb
jbe
out
add
je
or
pop
mul
adc
sbb
dec
hlt
jecxz
pop
jae
dec
fstps
test
movsb
add
cmp
arpl
jbe
inc
jns
push
mov
movsb
std
mov
jg
push
ljmp
shrb
pushf
out
mov
lock
mov
aas
aad
lods
dec
jmp
push
xor
xchg
aas
and
imul
dec
ds
mov
mov
xchg
scas
xor
jge
rclb
add
test
pop
cmp
cmp
lret
fistpll
data16
mov
xchg
jnp
add
insl
xchg
loope
ds
jne
sbb
stos
xchg
dec
cmp
jg
xchg
loopne
ja
bound
sub
pop
cld
daa
insl
lods
incl
adc
push
jl
jg
mov
stc
in
call
adc
lea
outsb
mov
mov
inc
push
mov
or
in
imul
in
xchg
or
xchg
notl
popf
mov
push
mov
test
in
push
and
fadds
je
lds
sbb
mov
add
adcb
adc
dec
insl
mov
iret
xorb
lods
adc
mov
loopne
sbb
fisttps
add
cmpsl
dec
jp
fldcw
inc
lods
jbe
adc
lahf
fbld
or
cmp
xor
or
into
lret
ret
test
xor
mov
cmpsb
loop
add
inc
add
repz
inc
jne
movsl
ss
mov
dec
push
in
xor
scas
push
int
fsts
int
aad
int
shl
nop
xor
mov
add
xchg
je
push
out
rolb
inc
cmpsb
outsb
mov
mov
adc
inc
inc
sub
les
cmp
aas
ljmp
push
pop
push
lea
push
mov
dec
call
push
ss
out
cmp
stos
cmp
xchg
test
sbb
sbb
mov
loope
dec
movsl
es
dec
cmp
push
imul
stos
mov
repnz
lods
sbbl
movsb
inc
popf
xchg
movl
push
sbb
hlt
xchg
adc
cwtl
sti
nop
sub
jbe
pop
ss
popf
mov
jp
pop
out
mov
test
out
insb
push
mov
sub
mov
push
xchg
out
xchg
push
data16
in
shll
mov
lahf
mov
push
and
das
mov
cmp
pop
cld
mov
sti
xor
ret
loopne
dec
adc
adc
push
mov
andb
push
jne
xchg
lds
pop
les
test
push
sub
daa
sbb
in
repnz
dec
sub
lcall
xchg
test
ds
pop
ficoms
jge
mov
in
loope
push
xor
ret
sbb
js
xchg
scas
add
in
lods
mov
clc
js
popa
mov
adc
inc
ficoms
sub
mov
bound
in
test
in
mov
daa
mov
loopne
fwait
or
pop
insb
mov
fldenv
js
dec
dec
cmc
sub
clc
push
testl
int3
xor
int3
sbb
lock
pop
inc
out
repnz
testl
lea
xor
mov
out
hlt
mov
enter
lcall
aad
fdivrl
dec
push
ret
jle
enter
mov
jne
mov
movsb
dec
jb
inc
adc
mov
rol
inc
cmp
icebp
cmpsb
push
fidivrl
es
cmpb
das
inc
add
js
and
sbb
aaa
push
loop
outsl
aad
pop
out
imul
gs
cmpsl
sarl
aam
xor
pushf
lock
push
popl
cwtl
popf
stos
and
adc
fst
sub
add
adc
insl
pop
lea
lcall
clc
ds
jbe
pop
loopne
js
sub
loop
arpl
daa
inc
push
xchg
rcll
and
xor
das
shrb
mov
leave
mov
add
cmp
xchg
jl
mov
mov
sbb
mov
adc
xor
testb
aam
fisubs
pushf
and
push
mov
outsb
fstpt
xchg
jp
fsubrp
jle
mov
xchg
sub
clc
dec
dec
fidivrl
push
dec
push
imul
int
jae
cmp
push
mov
andl
aas
dec
or
sti
sbb
inc
xor
jo
mov
push
shlb
add
out
push
mov
sbb
fildl
inc
mov
push
sbb
sub
mov
push
jb
mov
rcr
imul
mov
ja
mov
adc
jnp
inc
fstpt
ss
cmp
push
dec
cld
shrl
sub
mov
daa
imul
adc
popf
push
shlb
xchg
std
pop
mov
mov
sub
push
scas
test
add
cmp
and
dec
xchg
sub
add
fcoml
out
jbe
lea
sbb
mov
lea
stc
xor
imul
stos
lret
cltd
icebp
out
sub
cltd
adc
lret
jne
pop
psubusw
test
clc
jge
imul
adc
gs
and
lea
pop
jp
cmp
test
addl
cmpsl
pop
jo
sbb
mov
jmp
rolb
pop
sub
pop
adc
movsl
add
test
dec
jp
pop
jbe
in
mov
cmp
push
mov
mov
out
push
aaa
jmp
ds
aaa
cmp
ja
xor
bound
shll
hlt
cwtl
cld
in
xor
fisttpl
or
xor
pop
mov
xor
mov
outsl
and
sub
adc
pop
bound
cltd
leave
mov
jns
jp
push
xor
jmp
jb
das
xor
jne
ljmp
sub
ds
jmp
mov
outsb
pop
jge
stos
fwait
xchg
mov
xor
lret
xchg
sub
std
sbb
xor
data16
sub
pop
adc
jmp
jp
out
out
insl
xor
lahf
in
xchg
pop
dec
mov
or
inc
shll
insl
outsl
js
lock
cmp
hlt
sahf
jb
and
imul
cmp
dec
mov
cmc
sbb
data16
fwait
test
ds
lds
dec
ret
and
add
stos
push
fs
or
adc
mov
divl
mov
mov
int3
insb
loope,pn
ss
ds
sbb
add
push
popa
xchg
dec
add
mov
arpl
repz
or
pop
xor
andl
xchg
les
sti
and
scas
pop
mov
cs
inc
mov
das
fs
dec
mov
incb
cltd
jnp
jecxz
inc
adc
aas
outsl
sbb
xor
cmpsb
pop
jecxz
or
xchg
movsl
inc
add
or
mov
dec
adc
pushf
stos
inc
test
pusha
sahf
jbe
mov
adc
in
dec
jle
pop
shr
fs
ja
inc
jns
dec
test
and
scas
mov
bound
addl
sub
mov
inc
add
imul
mov
sub
mov
push
mov
icebp
xchg
push
sbb
cs
test
aad
gs
mov
scas
dec
aas
sub
jmp
aad
outsb
mov
insl
push
add
pusha
inc
cmp
je
pusha
popf
das
push
imul
mov
xor
in
movsl
jb
mov
imul
dec
jns
and
push
mov
dec
add
aad
lods
inc
cmp
ss
dec
or
orl
mov
and
mov
pop
mov
insl
int
out
xchg
out
sbb
pop
imul
dec
dec
or
adc
mov
mov
sti
add
cmp
cli
mov
pop
cwtl
jbe
jle
cwtl
js
loop
lret
xchg
scas
std
xchg
sub
into
fwait
cld
popa
imul
jecxz
into
lahf
nop
pop
adc
test
mov
pop
adc
jge
xchg
mov
cmp
or
mov
inc
ret
repz
inc
and
mov
ret
add
iret
or
imul
inc
in
leave
test
pop
cli
lods
jb
mov
lret
adc
sub
dec
pop
dec
and
stos
jge
sahf
pop
fdivl
inc
enter
push
lcall
cmp
fwait
pop
mov
test
ret
addr16
ss
imul
dec
pushf
fisubrl
jle
mov
dec
int
rclb
inc
push
jmp
sub
xor
test
mov
fstpl
js
stos
jl
fdiv
bound
cmpl
movups
jg
dec
and
xchg
in
adc
mov
mov
jl
cwtl
loope
xlat
pusha
dec
adc
mov
nop
imul
sub
sbb
mov
cmp
pusha
sbbb
mov
push
cmp
ret
jo
std
inc
xchg
flds
mov
inc
test
and
cld
iret
jmp
or
lret
lea
sti
mov
mov
lea
insb
sbb
and
loope
inc
pop
scas
jl
inc
fistpl
xor
sub
clc
adc
sbb
jo
inc
arpl
ret
and
nop
mov
push
dec
shll
in
ds
sbb
pushl
mov
mov
rorb
inc
fs
sbb
out
mov
loope
xor
in
adc
mov
push
das
out
shrb
pop
mov
leave
cmp
push
mov
mov
subb
adc
push
iret
ret
pop
adc
pop
xor
sbb
jmp
arpl
and
cmpb
mov
test
lret
push
mov
jo
leave
or
test
imul
es
loop
enter
sbb
adc
xchg
fs
in
out
outsb
lock
add
mov
not
in
je
cli
aaa
cmp
mov
push
or
inc
push
nop
ds
out
pop
mov
ds
cli
and
sbb
pop
mov
cmp
dec
daa
int3
mov
rcr
ret
andb
adc
aas
dec
mov
sbb
imul
push
dec
xor
cmpsl
dec
push
xor
xchg
mov
out
out
ljmp
fdivrl
jno
into
xor
sub
mov
xor
in
mov
pop
inc
frstpm(287
fdivrp
cmp
mov
and
cld
xor
cwtl
movsl
mov
fadds
sub
cmc
fstl
or
daa
icebp
push
in
sbb
inc
push
adc
xor
shrb
lods
in
adc
popf
xchg
imul
fdivl
sub
andb
mov
sbb
inc
cmpsl
fwait
and
push
sbb
pop
pop
icebp
xor
mov
mov
shlb
movsb
mov
sub
loopne
add
pusha
loop
std
add
mov
pop
sbbb
push
sbb
scas
mov
mov
es
lahf
sbb
cli
lods
sarb
and
in
shlb
xor
fs
imull
mov
mov
and
add
out
lods
sub
push
int
inc
push
or
pop
enter
mov
and
adc
push
inc
add
cmpsl
lcall
lret
inc
fdivl
ror
sbb
and
je
call
adc
in
in
jecxz
les
popa
lds
les
adc
push
push
adc
mov
cli
add
mov
cmp
dec
lret
xchg
push
out
in
pop
ljmp
das
add
sarb
ljmp
into
cmp
add
or
push
jb
push
xor
jae
out
pop
jle
dec
iret
xchg
adc
pop
fdivl
dec
xor
in
cmp
shlb
sbb
aas
sti
xchg
aam
fs
aas
addr16
sbb
push
mov
outsb
inc
inc
mov
inc
jnp
test
js
stc
icebp
mov
xor
and
add
mov
and
sbb
push
shll
cltd
addl
xchg
pop
bound
data16
push
mov
xchg
push
lret
jnp
cmp
xor
pop
mov
rolb
outsl
shlb
add
xor
add
out
fwait
jge
hlt
shlb
flds
jno
mov
imul
inc
jge
out
roll
scas
push
out
iret
and
sbb
jae
mov
or
inc
aad
repnz
lds
dec
arpl
lods
ror
push
cmp
lret
ret
cmp
xchg
sahf
arpl
jae
push
push
fidivs
xor
or
popa
mov
xor
adc
sub
jecxz
jl
and
in
cmp
adc
notl
lock
mov
idivb
bound
das
lods
mov
pop
adc
mov
sub
pop
js
stc
fwait
sahf
loope
xchg
add
rorl
cmpl
add
lcall
and
in
loop
add
test
dec
popa
popa
cli
scas
into
in
push
xchg
incb
rorb
jno
hlt
mov
das
or
xlat
dec
andb
sbb
test
dec
cmp
xchg
stos
inc
mov
es
je
lods
dec
jne
stc
push
mov
pop
scas
lret
in
jb
frstor
dec
mov
out
negl
mov
push
xchg
rorb
cmp
jp
sub
dec
lds
pop
and
insb
sbb
test
or
dec
ss
fistpl
xchg
in
enter
enter
inc
sbb
clc
push
jmp
pop
push
lret
pop
pop
mov
das
hlt
mov
gs
out
dec
push
lret
sbb
arpl
data16
fcoms
fldenv
mov
mov
mov
sub
inc
cld
add
mulb
mov
pop
stos
xchg
movsb
dec
roll
xchg
xor
dec
bound
cwtl
loop
ljmp
into
repz
or
sbb
pusha
add
jg
imul
les
xchg
shrb
rclb
sbb
adc
sub
mov
adc
sbb
mull
add
mov
je
add
mov
mov
jbe
ljmp
popf
xchg
insl
outsl
xlat
or
or
iret
into
lcall
push
ret
clc
lea
cmp
jge
lret
popf
test
dec
push
inc
icebp
adc
and
dec
jp
inc
arpl
mov
pop
push
sbb
cs
xchg
ja
scas
pop
clc
je
fs
popf
jo
imul
xchg
inc
mov
call
inc
aaa
ljmp
sbb
pop
call
popa
and
loope
call
jae
and
rcr
adc
jge
sarl
xchg
and
outsl
out
mov
popa
sub
jb
xlat
ficompl
jae
mov
les
mov
dec
aad
sub
scas
mov
lahf
mov
mov
cmp
pop
stos
arpl
pop
mov
outsl
jnp
xor
xchg
test
push
sub
push
icebp
add
rol
mov
sub
aad
xor
inc
mov
or
inc
xadd
icebp
sub
cmpsl
mov
xchg
fs
js
mov
jns
xorb
mov
sub
popf
xor
mov
stc
add
aad
enter
jl
icebp
popf
xchg
icebp
mov
cs
call
pusha
das
repnz
lcall
jecxz
stos
into
mov
movsl
sahf
jbe
lret
add
das
add
push
cmp
pop
enter
imul
jp
or
daa
popa
nop
push
jmp
stc
lds
mov
ret
shl
dec
mov
or
aam
call
and
outsl
xchg
int
cmpb
push
sbb
pop
jecxz
push
sub
sbb
sbb
and
mov
loopne
fistpll
rcll
lock
mov
sti
movsl
dec
jne
add
hlt
or
ja
push
arpl
adc
ret
mov
dec
adcl
pop
inc
dec
pop
mov
pushf
jl
push
loopne
andb
push
data16
cltd
dec
jg
gs
sar
das
cmp
out
in
ja
jl
lret
sub
cmc
inc
pop
idivl
push
js
adcl
lahf
sbb
jp
aad
int
out
test
loopne
movsl
xor
cltd
pop
in
fisubrs
push
je
test
sbb
ss
sarl
sbb
push
jns
mov
mov
xchg
push
popf
sbb
jae
divb
sbb
xor
fwait
add
push
mov
ret
pop
inc
pop
ret
mov
adc
shrl
cwtl
jae
adc
or
popl
in
jbe
aad
addr16
lahf
in
cmp
jecxz
sbbl
clc
daa
xchg
fmulp
mov
push
sub
icebp
and
jns
fdivs
jb
jp
push
addb
jns
popa
notl
aas
sbb
out
jae
jns
es
std
cmp
mov
leave
pop
adc
mov
js
mov
mov
pop
cli
push
mov
push
sbb
stc
mov
pop
mov
cltd
insl
ds
pop
jns
inc
inc
xor
ja
fcomps
pop
sahf
rcrl
mov
in
mov
mov
push
mov
fdivs
popa
mov
outsb
insb
enter
fdivl
dec
out
inc
xchg
nop
pushl
pop
aaa
cmp
js
clc
jnp
fidivrl
stc
xlat
push
mov
and
out
or
pop
cmp
pop
sbb
in
sbb
cltd
adc
lahf
xor
cmpsb
cli
int
mov
pop
fstpl
addr16
aam
jmp
int3
fadds
push
inc
inc
pushf
pusha
mov
or
adc
mov
sub
shrl
adc
test
insl
cltd
push
xchg
lret
loope
stos
std
scas
or
daa
idivl
int3
pop
imul
push
mov
cltd
in
das
adc
add
clc
js
adc
push
cwtl
mov
jle
sub
add
push
jecxz
cli
mov
aas
adc
sbb
ljmp
ret
add
imul
aas
and
test
fidivrs
mov
gs
mov
jae
inc
fildll
jns
incb
push
adc
js
stos
and
inc
mov
lds
aas
test
mov
add
shlb
or
fisubl
daa
pop
and
pop
les
sarb
mov
cmp
lahf
into
addr16
and
add
jns
xchg
aam
int3
les
push
mov
ljmp
xor
cmp
xchg
into
int
int
add
and
xor
pop
pushf
out
nop
inc
movlps
jnp
enter
push
shrb
jns
mov
popa
idivb
xchg
movsb
or
dec
clc
xlat
jns
into
sub
and
out
mov
fadds
mov
adc
call
lods
ljmp
xchg
mov
mov
arpl
out
aas
jno
or
lea
shl
jle
adc
and
adc
in
mov
mov
aad
sbbl
stos
xchg
dec
jmp
pushl
add
fwait
out
cmpsb
ret
pop
enter
fstps
add
mov
xor
in
jne
leave
mov
adc
hlt
xchg
pop
scas
insb
leave
cmc
scas
and
jno
ds
popf
cmpl
call
cmp
outsl
repnz
jae
xchg
lcall
cmc
push
xchg
scas
bound
and
les
xor
mov
dec
xor
mov
mul
in
and
and
pop
mov
push
add
adc
sbb
mov
repz
lret
lods
inc
shll
mov
push
ljmp
sub
xor
enter
fcoml
pop
mov
ja
lock
sub
stc
xor
jle
push
rcrb
sbb
mov
daa
jbe
cmp
sbb
dec
nop
xchg
popa
push
scas
jmp
loope
movsb
and
pop
inc
lock
ret
adc
icebp
dec
inc
in
push
push
dec
push
ja
das
push
loope
sub
mov
fistl
insb
les
cld
arpl
add
lods
adc
and
pusha
push
leave
xchg
cmp
or
sbb
jp
dec
outsb
call
mov
xchg
shll
inc
leave
jmp
cmp
into
cmpsb
mov
iret
mov
mov
loope
cmp
mov
shll
mov
lds
inc
and
ret
dec
sub
js
lret
das
sbb
sahf
in
xor
mov
inc
push
push
add
mov
and
fcmovnb
loop
shrl
stc
sbb
call
push
data16
js
lods
or
out
xor
mov
lcall
or
in
enter
mov
int
call
mov
lds
test
fs
test
daa
lods
or
mov
into
sub
adc
inc
or
shrl
sti
pop
int3
out
sbb
dec
or
jae
rcrl
inc
cmp
out
pop
aad
xchg
pop
dec
shll
pop
out
push
sbb
into
xor
jnp,pt
rorl
cmpsl
out
loop
pop
pop
add
pop
imul
mov
jno
mov
addr16
mov
fisubrl
shrl
jl
sub
sub
mov
mov
jbe
rcrl
or
mov
push
mov
outsl
in
dec
in
inc
mov
insb
rclb
inc
aas
jge
test
aad
jnp
pop
xor
filds
roll
jbe
push
pop
mov
or
sahf
stc
jmp
sub
into
sti
outsl
test
inc
jae
dec
jno
sbb
dec
jg
dec
cmp
out
pop
jae
inc
sbb
aas
xchg
nop
fsub
push
aam
mov
faddp
js
jmp
cmpsb
xchg
mov
ja
cli
insl
xor
clc
push
mov
xor
push
cmp
push
mov
xchg
int3
xchg
sbb
in
push
shlb
cmpsb
jl
or
xor
jnp
cmp
lcall
inc
stos
out
add
sbb
mov
aas
lret
sub
jno
fnsave
jb
aas
add
adc
jae
out
inc
mov
and
stos
in
fwait
mov
push
in
jns
fisubs
jp
lcall
jno
int3
push
push
push
sbb
jle
dec
xchg
xor
sub
hlt
mov
loopne
xchg
lret
mov
nop
out
jbe
outsl
ficoms
sbb
fnstcw
mov
sbb
sub
cwtl
jo
or
cmc
scas
push
push
push
add
stc
cmp
repnz
jne
jmp
add
out
pop
adc
and
stc
fisubrs
add
jle
insl
sbb
aaa
call
mov
scas
jne
loope
sti
mov
jmp
inc
stos
jae
daa
and
das
mov
bound
push
ret
rcll
sub
inc
outsl
addr16
add
into
pop
pop
mov
adc
add
movsl
mov
lods
push
xchg
stos
push
sub
lret
xchg
or
ss
xor
dec
es
jb
push
xor
cwtl
add
mov
jbe
nop
dec
je
mov
push
ss
sub
mov
add
in
mov
mov
repz
insl
inc
pop
stos
aaa
inc
mov
inc
ljmp
jne
daa
nop
xchg
mov
xchg
push
inc
mov
cmp
mov
jecxz
call
test
cmpsl
pusha
popa
cs
mov
fwait
xchg
hlt
clc
repz
mov
jbe
cmp
and
jno
arpl
sub
popf
or
enter
jno
inc
pop
push
int
negb
add
ret
mov
fdivrs
xor
stos
push
push
and
push
push
ret
dec
popa
pop
roll
test
je
push
imul
mov
in
int
out
mov
jmp
repz
jb
jnp
sbb
lret
divl
les
jge
adc
and
add
inc
ror
cmp
ret
test
mov
orl
fadds
inc
push
add
pop
mov
fwait
clc
aam
fistpll
pop
clc
pop
cmp
push
fidivl
cmp
and
std
mov
and
clc
add
shl
pop
xchg
push
sti
cs
popf
cli
xor
sub
rcrb
mul
mov
popa
jbe
inc
enter
fadd
add
js
pop
push
or
push
rcl
dec
jge
jnp
insb
stos
mov
fwait
in
bnd
and
mov
xor
stos
sbb
push
cmc
arpl
jg
das
pop
cmp
sbb
outsb
adc
aaa
mov
dec
scas
enter
test
pop
cmp
xor
mov
mov
and
leave
es
push
std
fwait
adc
jae
cwtl
fstl
or
or
xor
sub
loopne
xchg
jns
adc
sbb
fildl
cmp
xlat
faddl
cltd
pop
lods
insl
aaa
jmp
xchg
cld
dec
xor
mov
aas
lock
rorl
int
rorb
xor
ss
stos
call
sub
sub
popf
pop
cmp
pop
dec
enter
aam
add
jnp
inc
and
mov
out
sahf
clc
out
add
dec
mov
je
clc
adc
fsubr
pop
ret
jne
mov
shll
sub
out
aam
push
mov
rclb
popf
lret
test
mov
inc
pop
daa
mov
subb
pop
cld
sub
and
int
inc
mov
ret
or
and
cld
gs
sub
arpl
rclb
jle
jno
inc
enter
dec
push
cmpsb
dec
pop
pushf
jp
push
test
dec
sbb
int3
mov
sub
sbb
push
add
push
xor
or
mov
clc
je
dec
in
sbb
xchg
addl
push
ss
mov
sub
adc
pop
cmp
lret
xchg
cmpsl
add
and
sub
jno
cmpsb
les
sub
outsl
sbb
sub
test
sub
arpl
lret
mov
in
fwait
lret
mov
test
aaa
mov
scas
iret
comiss
and
ds
clc
inc
pop
jbe
popf
add
cwtl
xlat
and
lods
repnz
pop
sahf
xchg
inc
shlb
push
xchg
push
push
insl
test
cmp
mov
and
mov
jmp
cmc
mov
jno
jno
dec
lahf
mov
les
lcall
outsl
mov
push
sbb
jle
mov
das
jp
xchg
pop
add
adc
and
and
xchg
dec
push
test
loop
pop
rorl
rcrb
stos
rclb
jo
mov
dec
clc
adc
cmp
and
or
outsl
push
sub
pop
pop
add
xlat
add
fs
pop
dec
inc
loop
test
and
add
and
imul
cmpsb
jbe
loope
adc
sub
in
lcall
jmp
mov
imul
inc
movsl
mov
jle
and
mov
loope
fsubrp
fimuls
add
cltd
bound
les
in
insl
mov
test
bound
xchg
xor
pop
aam
fst
sbb
mov
and
pop
jmp
cmp
jecxz
cwtl
lods
mul
into
inc
mov
movsl
xchg
cs
push
iret
fdivrs
push
push
dec
lahf
iret
add
and
and
sbb
fadd
repz
addl
push
pop
pop
mov
and
xlat
out
std
add
lock
mov
mov
pop
iret
in
jge
push
push
xchg
shll
movsb
and
add
fdivrl
in
jecxz
push
add
test
loope
stos
add
jle
loop
push
push
mov
fldt
ficoml
sub
out
shll
push
mov
arpl
mov
aad
and
gs
test
and
cmp
jl
mov
push
adc
bound
or
lahf
jle
loop
inc
leave
fcmovnb
jne
xchg
leave
addb
mov
mov
mov
mov
cltd
loopne
cmp
push
loopne
test
push
in
enter
or
fnstsw
flds
cli
rolb
jecxz
xor
cmpb
xchg
std
mov
imul
faddl
out
inc
faddp
roll
lea
test
lret
daa
add
lock
dec
and
xorl
mov
imul
xorl
inc
int3
inc
cmp
adc
lret
pushf
add
imul
jg
and
mov
in
cmp
sub
sbb
sub
and
dec
push
ljmp
in
cmpsb
movl
loop
icebp
movsl
cmpsb
or
adc
sub
fcomps
sbb
xor
adc
in
icebp
adc
pop
jg
loopne
xchg
push
out
push
or
sbb
movsb
xor
xchg
xchg
mov
movsl
mov
jg
lods
out
xchg
xchg
adc
rorb
push
mov
imul
jp
mov
fldenv
sub
add
outsl
mov
mov
inc
xor
dec
fadd
xor
push
xlat
rcrl
ds
jmp
dec
fdiv
xor
add
cs
sbb
fisttps
lcall
inc
jae
sbb
not
fdivrs
or
stc
mov
lock
push
stos
mov
js
mov
insl
mov
jae
pop
inc
or
mov
push
cmp
mov
cmpsl
jmp
and
adcl
push
dec
add
sbbl
test
fnstsw
add
bound
fwait
nop
jns
mov
ja
sbb
movsl
sarl
mov
cs
loopne
mov
cmp
aas
loopne
pusha
enter
loop
rorl
dec
and
cmpsb
mov
in
mov
loop
stos
add
pop
outsl
popf
popa
mov
sti
jns
mov
es
sbb
lret
jae
xchg
dec
inc
jo
repnz
sbb
sbb
mov
sub
out
xchg
gs
push
daa
jg
push
lret
aas
inc
lds
push
push
lcall
aad
xor
icebp
mov
sbb
test
mov
sub
dec
bound
push
les
sub
js
pop
pushl
sbb
insl
fs
cli
inc
arpl
pop
sbb
jecxz
jp
aaa
jbe
aaa
mov
push
pop
add
ret
sbb
sub
mov
jbe
mov
out
cli
mov
adc
xor
jg
push
xlat
mov
shlb
adcb
sbb
sbb
repnz
clc
jl
sub
push
xchg
fbld
jl
jge
sub
cld
ror
jo
xor
xchg
sbb
cmp
pop
clc
push
cmpsb
arpl
cmpsb
aad
loop
cli
mov
test
sub
and
lcall
dec
test
cmp
int3
popf
pop
mov
pop
shrl
test
push
pop
and
les
in
outsl
mov
subl
popf
xor
push
cld
jb
push
aaa
pop
sub
cmc
lea
jp
inc
insb
mov
insl
mov
push
rol
clc
loop
aaa
or
in
sarl
jl
cmp
fisttpl
loop
fs
orl
cmp
dec
loopne
sub
lods
jb
cmpsb
ficompl
inc
sbbb
insb
divb
insl
mov
pop
cwtl
mov
aas
or
xlat
jno
rorb
jle
out
sub
addb
pushf
das
je
xor
or
xchg
outsl
or
mov
cli
jge
pop
cltd
or
inc
arpl
nop
mov
adc
jle
inc
sbb
arpl
lcall
insl
stos
add
fs
out
outsl
push
and
shrl
loopne
xchg
test
hlt
cmc
aaa
les
jno
mov
cli
repz
jb
cmpl
add
adcl
xchg
out
pop
mov
lea
daa
ret
ja
ss
adc
pushf
mov
push
pop
and
fstps
xchg
jl
out
lods
out
push
xchg
popa
ss
out
fwait
pop
dec
cmc
cmpsl
cltd
jge
dec
pop
jge
cwtl
jbe
movsl
ljmp
hlt
adc
roll
lahf
pop
into
dec
cmp
jbe
mov
lcall
jne
xchg
cld
sub
adc
or
xchg
xchg
inc
and
adc
mov
jns
mov
sbb
fnstcw
fdivrl
inc
std
mov
loop
inc
test
rolb
fxch
xchg
lea
test
sub
cwtl
xor
in
adcb
fdivrl
jno
stos
lea
jbe
addr16
sub
ja
movl
mov
pop
dec
nop
pop
pop
mov
clc
dec
xchg
dec
and
les
jb
mov
sub
mov
dec
cmp
mov
sbb
xchg
pop
jle
inc
add
negb
sbb
pop
xchg
sub
insl
xchg
push
mov
ret
ja
mov
fimull
adc
mov
sub
addr16
pop
sbb
stos
adc
rclb
push
xchg
lcall
ja
sbb
aad
daa
pop
cmp
push
cmp
imul
leave
bound
inc
loopne
sub
push
aam
fistpll
mov
pusha
adc
nop
cltd
lret
fldl2e
mov
mov
jp
dec
mov
pop
mov
lahf
mov
sbb
in
test
repnz
and
sub
fstps
daa
insb
mov
popf
jge
adc
lea
fs
sub
mov
or
adc
inc
adc
xchg
adc
testb
mov
imul
xor
jb
cwtl
gs
pop
iret
jno
imul
mov
je
sub
adc
push
add
mov
test
bound
insb
xor
jl
loope
fadd
xor
xchg
cmpl
es
or
jnp
daa
jnp
fcompl
sbb
pop
mov
jnp
sarb
test
out
int
inc
xchg
adc
cmpsb
push
out
sahf
add
cs
push
leave
cs
sbb
mov
fcmovnbe
shlb
xor
clc
mov
jbe
sarl
xor
into
cld
icebp
mov
pop
repz
dec
loop
add
in
push
mov
xor
cmp
hlt
sti
mov
push
mov
pusha
fistl
push
and
jae
jae
sbb
add
ret
push
loop
cmp
sbb
nop
call
out
lods
rol
and
or
movsb
mov
mov
mov
std
mov
dec
jns
imul
push
jge
pop
enter
add
movsb
push
jp
inc
push
das
and
inc
scas
test
rorl
insl
push
iret
bnd
or
xchg
dec
arpl
shll
rorb
xchg
adc
and
les
fists
push
loope
lods
out
ds
outsb
das
ret
enter
pop
ss
inc
nop
test
out
jmp
mov
pop
sub
ret
inc
mov
subb
cltd
adc
jns
cmp
push
dec
dec
jns
je
mov
mov
aam
cmc
imulb
jmp
icebp
and
mov
add
cmp
mov
sub
push
out
sub
fisttpl
add
xor
xchg
imul
push
lret
add
les
jmp
adc
std
fs
fbstp
out
mov
pop
ret
or
sbb
pop
jns
fiadds
mov
mov
pop
fildl
jge
pop
jnp
lock
add
sar
or
loop
repnz
mov
ss
in
sub
pop
addr16
and
jbe
mov
xlat
sub
les
lret
int3
imul
jl
loope
pop
inc
fnstenv
jno
fcmovnb
push
jp
fstpl
in
addb
clc
mov
add
cwtl
mov
movsb
xor
cmp
das
xchg
jbe
inc
dec
dec
pop
test
mov
out
lahf
cmp
inc
sbb
adc
lret
push
inc
xchg
jns
paddsw
scas
popa
xor
push
test
insb
mov
sbb
fiaddl
lahf
xor
movsl
je
mov
mov
push
in
icebp
fimuls
or
jno
int3
push
cmp
in
xchg
pop
adc
cmc
jo
or
mov
push
and
sub
or
xor
imul
xor
xchg
jo
test
xor
sub
into
sarb
dec
jecxz
xor
fstl
nop
xor
pop
jnp
push
sub
adc
push
xchg
mov
mov
mov
fld
adc
dec
jae
popa
jae
lcall
push
adc
dec
mov
add
add
pop
xor
test
add
jae
out
mov
jne
jnp
lods
lea
stc
jne,pn
lret
push
jge
pop
inc
push
xchg
inc
je
or
lret
leave
sub
loop
mov
dec
call
inc
sbb
loop
mov
cmp
loopne
stos
xchg
insb
adc
negl
push
sub
xor
add
xchg
or
adc
push
pop
mov
ret
int
scas
int
fcoms
iret
pop
pop
sub
xchg
sub
push
pop
xor
mov
xlat
or
cmp
mov
es
add
dec
and
push
test
push
dec
xor
push
test
xchg
xchg
incl
inc
imul
shlb
test
mov
in
mov
xchg
cwtl
pop
and
sub
push
clc
ss
mov
lea
dec
mov
jae
sbb
push
out
hlt
fisttpl
mov
sub
cmc
mov
mov
jno
aas
out
hlt
mov
sub
xchg
dec
sub
jnp
xchg
push
push
pop
arpl
fcoms
jb
mov
cmpsb
and
xor
jb
push
inc
ljmp
loope
rcrb
dec
mov
arpl
mov
pop
lret
mov
mov
cwtl
fucomi
xor
mov
inc
lods
xchg
in
andb
call
pop
inc
inc
cmp
mov
push
cld
aad
jl
pop
mov
jl
lods
shlb
gs
loopne
cmp
outsl
in
and
adc
shr
mov
cli
mov
lret
lds
inc
jo
push
jle
pusha
jne
push
adc
data16
fnsave
aas
pop
movsl
adc
lret
jno
std
negl
mov
jle
lret
pop
mov
inc
sub
inc
adc
rolb
adc
dec
nop
jl
mov
hlt
mov
push
sub
icebp
aam
and
xchg
mov
cld
mov
rcll
enter
and
jp
xchg
inc
notb
and
push
push
pop
jbe
mov
aam
js
ljmp
inc
and
xor
rcrl
xlat
mov
adc
stos
lahf
sbb
dec
mov
push
xchg
mov
jge
fs
inc
jl
rcrl
push
xchg
mov
mov
dec
mov
xor
jae
mov
jge
xor
add
mov
push
stos
jmp
add
ret
sbb
repnz
fdivl
cmp
cmp
mov
dec
lcall
jle
sbb
ljmp
xor
sbb
xor
xor
adc
cs
cmpps
mul
inc
or
jne
clc
cmp
mov
ljmp
movsb
mov
xor
test
clc
push
mov
in
push
lret
imul
add
xchg
lods
adc
xchg
ljmp
jmp
imul
out
out
dec
jg
mov
in
dec
sbb
and
sti
cltd
je
ja
jb
push
pusha
sar
lock
xchg
pop
arpl
stos
movsb
int3
aas
push
int3
dec
inc
aam
movsb
mov
add
mov
aas
mov
mov
adc
repz
pop
fwait
mov
ficompl
into
fwait
sub
inc
adc
inc
adc
inc
insl
stos
sbb
push
jecxz
push
push
xlat
lcall
orl
pop
mov
cmp
ss
sub
xchg
pop
fsubl
inc
adc
sub
movsl
mov
dec
cmp
inc
inc
push
cs
imul
lret
outsl
pop
leave
rorl
cmp
ficomps
sti
xchg
jp
ss
dec
pop
cmp
xchg
bound
lds
mov
dec
hlt
dec
das
sbb
push
adc
jge
ds
cmp
lret
or
push
inc
cmpb
and
sbbl
dec
sbb
push
stc
aam
ja
sbb
mov
sahf
pop
lods
fdivrl
lahf
mov
and
fmul
dec
fldcw
adc
cmc
mov
in
je
ficoms
or
dec
in
dec
pop
shll
cmp
pop
rcr
mov
mov
iret
and
sub
test
call
mov
int
cmc
pop
or
sbb
mov
insl
cmp
xchg
pop
or
xor
imul
stc
enter
mov
mov
jg
xor
xor
mov
push
into
xor
mov
cmp
notl
dec
shl
pop
aad
pop
mov
ds
jae
mov
sub
jnp
cmp
mov
add
mov
xchg
dec
jb
push
or
xor
arpl
inc
ret
popf
jle
jmp
pushf
ficoml
xor
aaa
and
rorl
outsb
cmp
xor
fwait
ja
mov
int3
out
inc
addr16
sub
aam
and
push
aad
sub
inc
xchg
mov
lods
out
push
pop
pop
mov
mov
pop
leave
or
push
or
stc
hlt
mov
jg
sub
test
bound
jbe
adc
aam
jge
test
lret
cwtl
xchg
in
rcl
mov
lods
xor
stc
inc
cwtl
in
in
dec
dec
sar
std
sbb
movb
jl
bound
out
sbb
sub
lahf
xchg
pusha
mov
lock
sub
jge
mov
and
sbb
in
loop
outsl
mov
and
jge
xor
jno
jecxz
fmull
xor
aam
or
call
sahf
jge
rolb
ret
stos
aad
shrl
cld
push
mov
icebp
aaa
add
fwait
nop
xchg
push
cmp
mov
mov
cli
or
cmpsl
push
dec
sub
push
lahf
jb
jp
pop
mov
mov
stos
shlb
jg
loope
test
in
mov
xchg
popa
jae
jb
adc
out
lret
lahf
pusha
fistpl
rcr
xor
cmp
mov
pop
lahf
fnsave
call
dec
pushf
repnz
dec
jae
sub
lret
popf
lret
imul
data16
mov
jo
loop
mov
das
leave
cmpsb
mov
cs
mov
sti
sbb
mov
ds
cmp
pop
leave
std
xchg
mov
mov
aam
stos
lds
xchg
insl
push
inc
dec
pop
xor
and
test
cmpsb
push
cltd
mov
in
repnz
pop
pop
sbb
xchg
add
sub
inc
adcl
mov
mov
jg
xor
popa
scas
jne
push
into
leave
cmp
pop
pop
xchg
mov
out
loopne
add
jbe
inc
je
shlb
inc
in
fmull
mov
dec
arpl
daa
test
mov
aad
pop
imul
outsb
fiadds
subb
stc
outsb
cmpsl
shld
pop
pop
xor
movsb
daa
cmpsl
xchg
push
aad
xchg
aam
add
jns
das
xchg
mov
scas
and
shrl
inc
addb
add
test
pop
cmpsl
adc
dec
xor
gs
sbb
xchg
in
cmp
sbb
mov
xchg
cmpsb
pushf
insl
fstpl
mov
xchg
inc
jl
ret
jb
mov
push
loopne
adc
int
xchg
arpl
sub
or
jg
push
test
dec
or
mov
jl
and
push
lret
mov
mov
iret
test
hlt
sar
call
xchg
lahf
mov
cld
sbb
mov
scas
incb
js
dec
mov
sarb
ljmp
mov
stos
xchg
push
cmp
xchg
loopne
ja
sub
add
push
out
pop
pushf
jno
or
or
sbb
xchg
outsb
pop
cmp
push
xor
sbb
cmpsb
sbb
ret
inc
adc
push
push
rcr
cmp
lahf
or
xor
jge
ss
push
leave
pop
adc
pop
leave
adc
sbb
aas
imul
aas
jg
cmpl
rep
adc
roll
push
mov
out
adc
xchg
add
mov
jae
lods
inc
jl
lea
scas
adc
cmpsl
fists
pusha
xor
xlat
pop
scas
add
inc
in
xchg
or
push
loop
lahf
mov
dec
scas
cs
jle
dec
test
dec
pushf
sahf
mov
fstpt
fnstsw
negb
imul
cmp
cs
and
scas
lret
iret
ss
or
mov
pushf
mov
mov
fsts
pushf
sbb
adcl
into
test
flds
outsb
rolb
xchg
movsl
lock
rolb
fnstsw
rclb
mov
movsb
add
rcll
cmp
xchg
push
aam
xchg
pop
shll
or
stos
pop
pop
jae
sarl
test
cld
jmp
in
aam
jp
push
mulb
xchg
enter
add
xor
adc
inc
inc
sti
mov
lds
jb
xor
push
pop
xchg
aad
jns
ss
mov
jmp
lret
ja
sti
xchg
outsl
adc
mov
dec
test
pop
pop
sub
and
fs
scas
mov
lret
das
out
gs
int3
mov
sbb
jg
mov
xchg
xchg
js
cmp
mov
push
xorb
pop
jmp
in
cld
aam
and
dec
sub
or
mov
test
xchg
or
iret
into
cmpsb
add
test
inc
leave
jns
out
push
jle
mov
rorb
addr16
jb
mov
xchg
sti
dec
lret
icebp
aas
mov
stos
jns
test
aad
mov
add
mov
cmp
lret
mov
push
jb
sub
mov
mov
push
mov
dec
jmp
cmpsb
out
lods
sbb
pop
jbe
rclb
hlt
rcrl
add
ss
pop
aam
and
inc
mov
popa
cmove
or
cmpsl
dec
push
mov
lahf
adc
mov
icebp
pop
inc
sub
pushf
cltd
dec
xor
int3
scas
sub
dec
loope
push
mov
lahf
mov
and
jb
outsb
mov
xchg
hlt
sbb
add
hlt
add
insb
jge
add
ljmp
dec
in
xlat
sbb
mov
xor
iret
inc
negb
testb
push
pop
je
andl
sbb
lods
adc
negb
push
and
push
jb
cmpsb
in
pop
shrb
in
stc
mov
loopne
mov
scas
xlat
fsts
mov
mov
mov
add
mov
xorb
les
sbb
sbb
xchg
lret
dec
repz
pop
inc
pop
orl
jno
and
jbe
bnd
cmc
adc
pop
inc
sbb
test
lcall
xor
push
push
jle
dec
movsl
add
jg
mov
loope
mov
ret
mov
leave
lcall
lret
xor
mov
lcall
hlt
mov
adc
popf
data16
js
inc
dec
mov
dec
pop
push
out
pop
ljmp
inc
push
xor
xor
cmc
popf
jl
scas
push
mov
push
popf
arpl
sti
dec
sbb
stos
js
outsl
mov
les
jg
inc
mov
lcall
inc
pop
xchg
adcb
adc
and
dec
mov
cmp
fadds
jnp
mov
loopne
popf
push
rcl
jl
fbld
mov
lahf
mov
push
sbb
cmp
dec
pusha
ficoms
mov
mov
mov
test
inc
dec
jp
bound
rcll
aaa
adc
or
lds
fsubp
mov
and
lods
int3
mov
outsl
fscale
test
push
lcall
int3
pop
inc
push
inc
lods
cmpb
cld
mov
imul
lret
xchg
adc
shl
mov
loopne
std
push
mov
test
ljmp
sub
mov
pop
and
icebp
jle
lds
rcrb
data16
int
jae
and
shlb
stc
daa
xchg
scas
dec
jne
in
imulb
dec
in
repz
sbb
mov
adc
mull
je
push
and
aam
jo
mov
push
cmp
lds
xchg
and
xchg
xchg
stc
jge
dec
sbb
ds
mov
fnsave
pusha
pop
nop
mov
divl
incl
sub
xchg
les
xchg
sub
cmp
shrb
sbb
dec
push
adc
lds
push
mov
xchg
and
jecxz
sbb
mov
cmp
add
es
rorl
xchg
add
loope
iret
xlat
insl
cmovge
cmpl
push
aas
inc
cmp
lcall
push
dec
out
pop
or
inc
repnz
lret
dec
in
loop
mov
scas
wrmsr
rcr
jae
lcall
mov
add
bound
jle
repz
push
jmp
push
dec
jl
jge
jb
in
push
push
loope
mov
fptan
mov
dec
push
stos
mov
icebp
push
mov
or
fsubl
sti
enter
std
sahf
sbb
loope
adc
sub
push
sti
pop
pop
rcl
int3
lods
shrb
int
or
call
bound
cs
ja
insb
adc
ljmp
ljmp
add
inc
xchg
sbb
sub
flds
sahf
pop
loope
push
mov
and
dec
and
adc
jmp
sub
dec
inc
test
xor
sahf
scas
js,pt
fdivr
addr16
mov
pop
cmp
inc
call
out
insl
pop
inc
xadd
lahf
inc
pushl
mov
jp
pop
sbb
dec
mov
mov
dec
mov
or
mov
cli
popl
inc
aam
lret
sbb
mov
imul
arpl
out
mov
es
pop
rorb
push
iret
xchg
jnp
or
nop
psllq
dec
outsb
rolb
shll
mov
out
scas
in
xor
cmp
adc
cmp
push
std
or
push
test
mov
shll
cmp
fstps
ror
lcall
sbb
std
and
aad
gs
scas
mov
cli
inc
fsub
add
sub
push
jle
adc
pop
gs
mov
incb
jno
or
and
sbb
inc
fcoml
adc
and
sbb
ljmp
mov
fstl
xor
pop
enter
popa
call
mov
arpl
loop
mov
inc
xchg
rorl
push
outsl
lret
fldenv
pop
in
push
jnp
adc
lods
orb
jmp
pop
push
sub
in
push
dec
das
lods
push
jns
sub
sub
insl
mov
add
das
pop
lock
push
popl
jnp
xchg
mov
mov
repz
bnd
mov
mov
adc
repz
and
add
and
push
cmp
inc
jmp
adc
shl
nop
jmp
lahf
push
add
xchg
fwait
jle
cmp
int3
sti
jg
lcall
aaa
or
mov
mov
push
sti
lods
sbb
test
sbb
add
mov
mov
mov
imulb
add
stos
mov
jb
in
outsb
mov
lods
imul
push
sub
movsb
nop
mov
sub
ja
sub
mov
push
call
inc
cmpsb
xorl
cmpsb
push
mov
cmp
or
dec
aad
and
fisubs
aam
cmp
insl
rcrb
adc
xchg
or
dec
loop
insb
sbb
jg
imul
mov
daa
jle
je
outsl
xchg
xor
test
movsb
insl
ret
out
js
mov
imul
insl
aam
int3
mov
inc
aaa
mov
insl
mov
pop
pop
scas
cmp
rolb
insb
xlat
dec
xchg
and
dec
mov
push
sbb
movsb
pop
mov
fadds
add
fldcw
sbb
cmpsb
jns
cltd
mov
and
rcll
pop
jp
inc
dec
and
test
jns
js
dec
dec
cmpsb
shll
xor
xchg
adc
push
imul
mov
and
pop
testb
mov
ss
ja
data16
push
pop
imul
jge
mov
in
sarl
dec
mov
pop
stc
scas
outsb
push
and
and
out
lods
mov
aas
cmp
into
mov
ss
repnz
mov
lret
pop
xchg
subb
rcrb
jns
jmp
int
jb
hlt
fwait
xor
jo
cmp
mov
lods
adc
cli
sarl
and
imull
adc
mov
ds
dec
bound
test
adc
stos
cwtl
mov
scas
outsb
outsb
out
repnz
ds
dec
mov
xor
idivb
cmp
jbe
and
aad
or
and
adc
jle
or
dec
xor
push
mov
mov
cmp
out
outsl
sub
addr16
xchg
sbb
jns
int3
movsb
sbb
push
dec
mov
push
pop
sbb
int3
das
out
jae
iret
aaa
jg
test
push
lods
notl
andb
add
xor
imul
sbb
cmp
pop
or
fisttps
loopne
push
add
sbb
dec
sbb
cmpl
mov
loope
scas
or
cmp
popa
mov
xor
bound
jne
jo
mov
mov
push
inc
loope
mov
dec
lock
nop
cmp
cld
inc
into
mov
push
jmp
imul
sti
repz
js
ljmp
rclb
testl
mov
lock
int3
loopne
popa
add
cmpsb
mov
sub
movsb
or
cmpsb
mov
and
push
iret
inc
or
insl
mov
mul
cltd
insl
dec
int3
add
dec
sub
cmpsl
sbb
inc
sbb
cmp
cmp
cltd
divl
pop
inc
testl
bound
sarl
or
shll
inc
cmpsb
xor
xchg
das
cmpb
add
mov
daa
cmpsl
cltd
cltd
out
in
shl
or
test
xorb
sub
aas
aad
stc
orl
and
pop
fisubl
cmpsl
adc
addr16
ss
cmp
mov
push
hlt
mov
adc
lods
mov
out
lods
nop
add
icebp
mov
rclb
dec
sbb
jl
pop
test
mov
test
mov
xor
inc
mov
add
loop
push
or
out
test
fs
jae
adc
add
icebp
push
subb
pop
sub
xchg
cltd
adc
mov
sbbl
push
inc
fidivrs
ds
in
sub
mov
add
mov
dec
test
and
mov
sbbb
xor
out
xor
and
and
cmpsl
push
sbb
cmpsb
pop
lea
mov
insl
fwait
pop
pushf
mov
cmpsb
imul
test
sbb
sbb
cmp
popa
lock
clc
cld
sub
xchg
sarl
cld
popa
mov
xlat
or
addr16
faddl
movsl
imul
nop
and
adc
imul
bnd
cld
xorb
ss
out
cltd
stc
mov
lahf
ret
repz
sbb
jge
add
xchg
movsl
daa
imul
icebp
sarl
cmp
cli
nop
ret
pop
cmpb
sbb
aas
jbe
lods
mov
sub
inc
xor
sub
pusha
pop
pop
ret
and
and
pusha
pop
mov
lret
aad
mov
mov
jge
sbb
add
std
sbbl
ds
adc
xchg
andl
dec
push
icebp
cmp
stos
dec
out
add
lods
and
mov
and
shrl
inc
xchg
je
inc
test
sub
pop
sbb
cmp
push
xlat
lods
out
xor
scas
pop
jp
movsl
in
test
fcoms
ret
add
aad
jnp
dec
ret
clc
cmp
mov
ret
push
mov
mov
dec
cmpsb
lret
push
addr16
aas
inc
clc
data16
mov
add
cmc
mov
dec
mov
and
mov
stos
inc
and
pusha
shll
outsb
cmp
fnstcw
stos
fadds
push
lock
cwtl
xchg
mov
jbe
add
cli
xchg
fistpl
aam
add
or
xor
jp
test
xchg
pop
lock
pop
adc
and
btc
sbb
add
add
push
scas
xchg
mov
sub
and
xchg
out
inc
orl
ja
sub
xor
jl
dec
aad
add
ja
add
lods
aaa
int3
xor
push
adc
call
mov
cltd
in
mov
push
inc
push
ss
addb
mov
jo
mov
lret
dec
sbb
dec
push
add
mov
movl
xchg
pop
test
inc
mov
dec
add
sbb
cmpsl
sub
cltd
sahf
or
dec
sub
xor
mov
cld
fld
mov
push
in
loopne
cmp
pop
jl
mov
add
adc
popf
test
xchg
cmpsb
addr16
push
lea
scas
out
mov
adc
jo
push
sbb
int3
xchg
cltd
jnp
cli
sbb
addl
movsb
dec
inc
inc
fwait
cmpsb
jmp
sub
mov
shrl
mov
sbb
subb
adc
repz
ret
enter
push
int
cmpsl
jb
lret
mov
mov
and
and
lock
xorl
dec
mov
dec
adc
xchg
shl
mov
dec
sbb
das
and
pop
out
sahf
inc
loop
and
push
cltd
inc
out
cmpsl
pop
push
aas
cmp
leave
sbb
mov
pop
cmovno
in
cmp
es
xchg
dec
jno
cmp
repz
std
movsl
pop
cmp
jp
push
or
mov
and
fmull
xchg
test
stos
shl
inc
sti
pop
sub
and
sbb
push
insl
sbb
stos
jno
in
xchg
mov
dec
inc
mov
jle
loop
mov
into
pushf
or
cwtl
in
xor
pop
in
iret
mov
and
test
dec
fnsave
and
lahf
adc
ror
iret
aam
push
cmc
and
vmwrite
bswap
hlt
ja
mov
xor
lret
add
pop
data16
cltd
hlt
mov
fcoml
add
insb
rcr
pop
and
jns
lret
movsb
adc
push
hlt
sbb
xchg
cwtl
or
xchg
jp
aad
andl
fiadds
popa
roll
push
icebp
dec
inc
loope
pusha
xor
shll
stc
adc
cmp
adc
xor
enter
adc
mov
iret
mov
xor
jae
mov
clc
fidivs
out
js
cwtl
cmc
add
inc
xor
jp
jne
imul
sbb
push
repz
insl
and
nop
push
repz
inc
push
mov
aas
jg
sbb
stos
mov
sub
aas
lret
push
in
xchg
scas
loopne
cld
les
sbb
sub
add
xor
push
mov
iret
ds
cli
xchg
mov
inc
xchg
push
or
sti
test
xor
negb
int
in
pop
and
call
jae
pop
stc
sub
jmp
dec
push
mov
cwtl
inc
pop
add
test
cwtl
pop
push
hlt
rol
in
mov
iret
dec
pusha
rol
or
mov
in
daa
inc
es
fnsave
cmp
in
mov
cmp
iret
nop
sbb
sub
aam
inc
mov
into
sahf
push
inc
and
adc
sub
xchg
or
add
lret
cli
test
mov
jo
xchg
out
pop
mov
mov
testl
mov
hlt
xchg
xor
mov
inc
cld
jbe
arpl
lods
mov
mov
movsl
push
jle
out
test
stos
sahf
fisubrl
sub
mov
pop
imul
mov
insb
js
mov
sub
sub
enter
jns
adc
pop
mov
fstps
mov
xchg
sahf
push
xchg
adc
mov
mov
lods
ret
sub
jge
or
sub
push
or
inc
out
je
push
fnstenv
and
mov
out
mov
hlt
xchg
into
out
pop
es
xchg
pop
addr16
shrb
lcall
inc
data16
aam
dec
orl
cwtl
sub
dec
popf
cmpsl
inc
pop
insl
fstl
pop
iret
stc
fildl
mov
push
inc
mov
mov
rsm
sahf
jae
gs
dec
mov
pop
jecxz
pop
xor
imul
cmpsl
mov
fistpl
xlat
ss
faddp
xchg
cltd
pop
in
sub
pop
test
lock
mov
mull
inc
ret
arpl
mov
pop
and
movsl
dec
mov
jmp
test
jae
idivl
ljmp
jnp
out
xchg
mov
push
inc
add
add
add
fs
sub
jle
repz
sbb
cmp
add
push
out
xor
xchg
int3
test
xchg
pusha
lods
mov
sbb
cmp
push
pop
adc
lock
pushf
mov
repz
fcoms
push
cmp
mov
mov
ja
pushf
pop
int
jo
xor
imul
rcl
adc
xor
fadd
dec
xchg
lret
call
or
bound
call
xchg
cwtl
outsb
repnz
jb
jne
cmp
clc
mov
repz
xchg
arpl
sub
inc
and
sbb
dec
sub
popf
mov
push
xchg
fstps
aad
mov
mov
cmp
xorb
mov
mov
loop
lcall
adc
test
fsubrs
ret
jge
clc
cmpsb
sarb
cmc
mov
aam
orl
out
ret
jge
arpl
shr
push
xchg
daa
push
clc
std
outsl
aaa
les
jmp
test
sbb
pop
imul
gs
and
push
pushf
mov
in
dec
lock
imul
mov
out
cmp
imul
xchg
loopne
imul
push
adc
jo
enter
je
add
mov
scas
dec
testb
pop
fnsave
adc
fistl
out
jbe
mov
pushf
test
mov
add
daa
add
call
incb
adc
dec
push
addr16
adc
pop
or
jno
fs
jnp
and
cmp
shll
push
mov
add
pop
adc
mov
call
mov
or
pop
add
popf
movsl
mov
mov
pop
rorl
loope
lret
mov
xchg
add
dec
rorl
mov
aam
adc
sbb
in
adc
clc
cmpsl
or
andl
xchg
in
aad
mov
dec
xchg
repz
out
orl
sub
leave
push
cli
sbb
mov
push
push
inc
insb
fadd
cwtl
cmp
lahf
decl
and
cmp
jmp
sub
sbb
fidivrs
mov
mov
movsb
cmp
sub
dec
lcall
push
jne
adc
sbb
sbb
dec
pop
lock
xor
adc
push
fidivrl
mov
mov
mov
lea
das
daa
leave
sub
ds
sbb
aas
xorl
test
mov
aas
jb
cmp
or
cli
push
std
mov
or
repnz
sub
out
mov
sar
outsb
dec
sub
in
call
popa
test
mov
push
adc
mov
mov
cwtl
mov
pop
bound
aaa
push
mov
lret
int
sbb
xor
sbb
rol
lock
pop
int
add
test
inc
jo
loope
insb
or
scas
adc
add
inc
lret
mov
mov
jl
pop
dec
xchg
mov
lcall
cmpsl
fs
mov
pushf
cs
mov
je
xor
fldenv
sbb
pop
notb
daa
push
xor
push
insb
scas
inc
pusha
cmpsl
shlb
mov
mov
shlb
pushl
xchg
jbe
inc
mov
es
pop
aas
arpl
adc
or
lret
jbe
lahf
in
aaa
xchg
jno
cmpsl
pushf
mov
lret
and
xor
fistpll
mov
icebp
mov
test
orb
push
pushf
jne
ljmp
call
rorl
fnstenv
cmpb
jbe
not
mov
push
xor
ret
push
daa
stos
ret
stc
loop
ret
cmp
mov
orl
mov
into
mov
sub
into
scas
jno
mov
jge
mov
jo
cmp
mov
ljmp
or
rolb
push
xchg
shll
lret
push
sub
jecxz
mov
test
mov
jmp
dec
out
cmpb
jo
mov
add
aam
lret
mov
or
fs
insb
out
daa
cmp
sbb
dec
adc
ljmp
jl
into
out
mov
mov
daa
jle
lret
and
addb
jge
divl
sub
sub
cmp
pop
and
mov
sbb
scas
jno
inc
in
adc
add
imul
push
fbstp
imul
adc
xchg
outsl
mov
mov
or
cmp
divl
xlat
sbb
mov
push
inc
pop
sarb
mov
adc
test
xor
and
mov
mov
xchg
mov
pop
sbb
mov
xlat
call
jo
fldenv
test
jle
push
jns
mov
mov
push
xchg
mov
sub
mov
lea
jo
jmp
lds
pop
sub
inc
out
lods
call
push
mov
cmp
daa
add
aas
xlat
inc
je
and
mov
mov
xchg
mov
ret
orw
mov
dec
je
cmp
test
sahf
aaa
addr16
fisttps
icebp
icebp
rcrb
movsb
and
nop
inc
lods
dec
std
into
stos
xor
insb
lret
in
adc
ljmp
mov
fistl
and
and
push
out
lods
js
inc
pop
ret
lahf
mov
fwait
lahf
out
aad
les
xor
imul
pop
add
push
addb
mov
mov
xor
es
call
jg
dec
mov
adc
sub
cwtl
or
xchg
xchg
data16
xchg
ds
cmc
jo
sbb
pushl
nop
hlt
mov
lahf
xor
into
sbb
jge
inc
push
addl
pop
jle
mov
stc
adc
push
les
pop
arpl
and
shlb
lea
addr16
pusha
fmull
push
push
push
repnz
push
push
ja
add
jb
std
or
loope
pop
add
loopne
and
pop
icebp
loopne
push
divl
test
subb
pop
leave
orl
lea
lret
jge
sti
sub
mov
sub
notb
cmp
xchg
ret
repz
pop
jmp
sbb
mov
dec
mov
aad
inc
mov
xchg
sbb
xorb
push
add
or
cltd
mov
adc
arpl
mov
fs
xor
sbb
jnp
dec
dec
pop
xlat
push
inc
cmp
dec
jg
push
repz
mov
mov
xchg
dec
xlat
enter
outsb
pop
dec
mov
xorb
pop
popa
or
pop
dec
test
or
sbb
int3
pop
loope
cmp
push
aad
adc
das
and
lock
flds
inc
ret
and
xchg
and
sub
repz
cmc
jmp
jle
loopne
add
test
pop
pop
cmpsl
mov
clc
test
stc
adcl
imul
push
cld
in
push
rcrb
add
push
dec
test
sub
mov
or
mov
mov
and
sub
jle
pop
ss
mov
mov
and
and
jle
in
lret
cs
stos
cmp
ret
dec
loopne
inc
jo
jo
cmpsb
fisttps
push
mov
dec
lret
add
push
test
repz
pusha
add
out
fcoml
repz
dec
popf
adc
int
mov
adc
xchg
push
jle
xor
or
inc
scas
push
mov
or
push
cmpsb
pusha
fwait
xchg
sbb
xor
cltd
aam
jge
cli
xor
xor
stc
dec
dec
gs
scas
in
jb
call
pop
xor
leave
out
dec
mov
rol
mov
xchg
inc
xor
cmp
fwait
jecxz
nop
dec
sub
and
or
mov
lahf
and
or
xor
mov
xchg
and
cmpsb
or
push
cmp
mov
sub
jmp
dec
outsb
sub
and
jg
dec
inc
notb
out
aas
mov
xor
cld
cmpsl
int3
fs
sarb
bnd
xor
and
adc
lret
icebp
or
pop
loope
pop
dec
xor
ljmp
test
ret
iret
addr16
leave
mov
popf
xchg
test
loopne
loopne
or
xchg
test
sbb
cli
mov
fwait
jecxz
iret
adcl
pop
mov
lret
sarb
sub
imul
pop
imul
and
jp
scas
mov
fmuls
loope
lock
inc
sub
imull
adc
dec
mov
sbb
sbb
or
sub
xchg
mov
jmp
adc
add
adc
lcall
cld
test
or
dec
js
fwait
shr
jecxz
mov
or
repz
in
lock
jmp
add
test
insl
sub
mov
imul
mov
sbb
ret
shrl
fdivr
dec
int3
sub
pushf
and
les
loope
xor
dec
push
add
jno
out
mov
ja
jae
bound
xor
dec
mov
cmp
push
and
push
xchg
idivl
sbb
repnz
adc
push
or
ret
or
jo
add
mov
ja
orb
mov
adc
cmpb
in
popf
dec
stos
fnstcw
rcrb
pusha
addl
ljmp
mov
aas
push
and
bound
add
cmp
jle
lods
push
mov
fwait
nop
add
jne
jmp
inc
dec
mov
and
lds
in
aaa
adc
pop
or
cmp
xor
out
sarl
cmp
jne
addb
ss
sbb
mov
fcmovne
daa
shlb
pop
push
and
cmp
stos
xlat
std
aam
sub
fstps
int3
jbe
dec
aaa
lret
hlt
cmc
mov
adc
and
and
add
pushf
jmp
mov
and
movsb
and
data16
xor
sub
rorb
and
jl,pt
cmp
or
movsl
mov
ja
mov
mov
imul
rcll
lods
imul
xchg
add
popf
ja
lcall
jg
lret
add
loopne
add
outsb
push
addb
into
fcoms
and
insb
pop
and
sbb
xchg
call
mov
cmpsl
or
dec
cmp
cmp
cmpsb
je
fadd
mov
xor
orb
mov
in
out
xchg
fisttpll
push
cmpsl
sbb
mov
lret
pop
and
fiadds
push
ja
pop
lahf
jmp
lcall
popa
out
fdivl
pop
outsb
mov
lds
mov
repnz
hlt
adc
add
push
jle
mov
pop
rolb
sti
pop
adc
pop
int3
adc
icebp
ror
jno
push
stc
mov
mov
mov
mov
ja
ss
dec
sbb
mov
popa
mov
mov
push
adc
out
mov
out
enter
adc
sti
lret
icebp
and
inc
aam
mov
call
hlt
stc
or
loopne
loope
push
fsubr
sub
ds
out
lds
push
inc
aas
inc
and
divl
lcall
or
mov
in
test
push
add
rcr
lock
inc
mov
push
mov
outsb
imul
std
loope
fcomps
sub
xchg
lods
lods
imul
mov
das
js
jmp
out
sbb
cmp
into
fs
imul
daa
xchg
jmp
jnp
popa
aam
in
add
int
jno
xorl
loopne
rcrb
bound
xchg
bound
jo
jmp
and
xorb
or
mov
sahf
sub
or
lock
dec
mov
dec
xor
cld
inc
and
test
push
add
jge
std
push
jle
xchg
pop
pop
hlt
mov
divb
dec
jecxz
push
lcall
push
mov
pop
hlt
or
mov
xchg
mov
pop
stc
pushf
cmp
rcrl
fidivrs
mov
test
jnp
icebp
xchg
cmp
adc
arpl
add
add
add
and
cs
bound
inc
mov
fsts
sbb
fnsave
cmc
out
add
or
pusha
adc
mov
fdivrl
inc
push
mov
adc
pop
add
aam
jns
int
cmpsb
pop
and
pop
in
dec
shrl
ljmpw
xchg
pop
fstpt
jbe
xor
aaa
sbb
sub
outsl
sub
mov
pop
adc
cmpsb
jbe
mov
fists
repnz
jnp
sbb
push
es
ficomps
lahf
imul
add
pop
sti
jle
sahf
mov
jl
outsl
sahf
push
out
aaa
shlb
cmc
sti
cld
pminsw
leave
int
xchg
mov
movsb
xor
xchg
mov
insl
push
outsb
pop
xor
jbe
cmpsb
pop
test
push
arpl
mov
ds
push
loopne
lahf
lahf
pop
daa
push
test
and
into
jbe
popa
pop
leave
mov
xor
dec
mov
shrb
jns
mov
pop
jns
enter
xor
pop
add
stos
dec
sti
loop
dec
aas
mov
ror
lds
xor
scas
scas
adc
cmp
sub
mov
pop
dec
lahf
cmp
push
subl
xchg
push
daa
xchg
scas
mov
outsb
sahf
lret
outsl
push
cli
ret
popf
aaa
lcall
sbb
jns
add
lret
push
int3
mov
adc
adc
xchg
outsl
xchg
into
clc
cmc
les
data16
mov
test
pop
pop
arpl
outsb
xchg
push
xchg
in
pop
outsl
xor
stos
push
push
fdivp
add
out
test
mull
pop
repz
scas
fldcw
loopne
das
jmp
and
dec
out
dec
adc
pop
pop
and
sbb
xchg
sub
sarb
mov
inc
and
loop
les
jb
and
pop
jp
lret
cmp
jge
test
adc
leave
jmp
into
sub
arpl
nop
stos
fcompl
lahf
pop
cmpsl
xchg
mov
mov
pop
popf
adc
mov
mov
xlat
pop
push
mov
dec
fdivrl
pop
into
sub
addr16
rcrl
mov
jnp
mov
inc
fiadds
push
adc
jnp
xchg
jg
jno
pusha
dec
insb
xlat
xor
add
je
push
test
cmpsb
push
adc
popf
lock
xor
pop
bound
cmovg
movsl
loopne
jbe
aaa
dec
or
or
sbb
mov
out
inc
xor
jecxz
das
jle
lea
aaa
nop
jg
dec
lret
add
lock
mov
xor
das
gs
xchg
jmp
icebp
and
std
cmpsl
dec
sbb
pop
cmp
fldenv
outsl
int3
mov
ret
push
jo
movl
fisubl
sub
pop
lret
in
subl
pop
sti
popf
sti
test
sub
inc
ljmp
hlt
fiaddl
jne
and
cmp
cwtl
js
mov
sub
stos
scas
push
mov
pop
xor
jnp
cltd
enter
adc
pop
and
push
lret
and
aad
xor
and
aaa
push
cs
and
or
push
es
mull
adc
jae,pn
push
mov
and
addb
mov
inc
jns
ds
out
sub
std
lcall
cwtl
mov
cmc
inc
xchg
roll
xor
mov
int3
xor
push
imul
mov
or
mov
add
or
adc
and
cmp
iret
adc
loop
mov
add
jnp
and
out
dec
cmp
icebp
aad
jmp
scas
int3
cmpsl
sbb
adc
fstpl
mov
out
jmp
push
push
ds
aas
sbb
jb
xchg
lods
mov
or
enter
std
scas
dec
jg
adc
inc
out
in
mov
nop
outsl
and
pop
mov
mov
and
fldt
jl
xor
fs
jmp
es
jnp
sub
cmp
mov
pop
jl
pusha
pop
ret
icebp
push
inc
enter
fcomi
cs
cmpsl
lods
or
push
adc
cmpsb
loop
xlat
sbb
leave
aaa
xor
mov
push
adcb
fnsave
cmpsb
rcrb
lahf
xchg
call
out
xlat
inc
nop
mov
dec
fimull
xor
push
jmp
sbb
and
fdivs
pop
jne
add
stos
xor
stos
or
jge
or
adc
adc
imul
sub
mov
data16
cmp
fwait
and
sub
nop
add
or
int
loope
repz
test
mov
inc
fbstp
addl
jge
aas
cmp
cmp
out
jle
es
pop
cld
aas
adc
sbb
pop
popf
cltd
xchg
xchg
adc
ja
les
add
lds
jg
and
jp
loop
mov
das
cmpsb
inc
inc
mov
scas
mov
iret
jl
nop
pop
push
mov
add
inc
popf
cmp
lods
add
es
push
push
call
jl
loopne
add
bound
adc
sbb
sar
mov
jnp
les
je
add
jge
sarl
shr
scas
out
pop
bound
dec
mov
xor
mov
cmp
lds
jg
in
popa
adc
mov
mov
dec
sub
int
mov
nop
rcll
jb
nop
nop
test
repnz
inc
xchg
loop
dec
xchg
adc
lea
dec
test
sbb
loopne
aam
nop
mov
repnz
push
push
cmp
add
mov
out
jle
les
fsts
and
jns
std
inc
divb
in
mov
sarl
dec
jnp
push
subb
cmpsl
inc
shrb
adc
rcl
xor
cwtl
test
cmp
insb
movsl
call
mov
dec
repnz
pop
push
testl
out
cld
jb
inc
jne
jmp
xchg
fnsave
jp
repnz
mov
sahf
ljmp
push
jge
xor
outsl
scas
imul
dec
jp
mov
jmp
mov
inc
push
inc
mov
je
stos
lret
cld
inc
jno
popa
dec
test
mov
into
inc
push
scas
scas
xor
ja
push
push
and
pop
les
mov
fcomps
dec
lcall
je
push
pop
es
or
mov
repz
pushf
lret
cs
sub
adc
adc
xor
cmp
push
mov
lods
popf
mov
mov
xchg
rorb
push
pushf
jae
push
jmp
xchg
cmp
pop
insb
filds
call
mov
lcall
push
repnz
rcrb
test
clc
sbb
out
dec
fcompl
ret
pop
fcmovnbe
cmp
mov
mov
push
ljmp
sbb
mov
repnz
lea
jp
pop
xchg
ss
scas
sub
aam
push
das
adc
cmp
dec
and
adc
adc
jns
mov
ja
add
adc
fstps
in
pop
clc
mov
and
xchg
inc
aas
pop
leave
add
out
pop
popf
sub
movsb
scas
xor
mov
loopne
xor
shll
sbb
jge
jno
outsl
je
in
ss
push
mov
sbb
cmpsl
enter
mov
and
pushf
outsl
adc
push
push
ret
leave
cmc
inc
ds
jg
test
ljmp
in
xchg
popf
jle
aaa
dec
movl
cli
jbe
mov
pushw
outsl
insw
jne
jo
inc
je
adc
mov
leave
fsubs
push
jmp
cltd
xor
cmp
call
push
into
pushf
dec
push
insb
imul
push
mov
cmp
mov
inc
xchg
jp
cli
cmpsb
das
push
std
cwtl
dec
int3
mov
jae
cmp
lods
lods
jmp
ss
inc
or
or
sub
out
in
sti
fmul
mov
cld
and
push
xor
pop
fwait
jne
mov
int3
icebp
and
in
daa
jo
lock
test
int
push
inc
add
outsb
jnp
push
xchg
xchg
in
dec
out
sub
clc
notl
push
xor
dec
lods
loop
sub
ret
push
inc
jle
mov
sub
mov
xor
rcl
pop
mov
xor
inc
mov
shll
and
js
test
je
push
iret
sar
lods
pusha
pop
xchg
aad
mov
test
xor
aas
icebp
jbe
mov
stos
pop
xchg
sub
and
nop
fsubrs
jl
lea
in
insl
jns
xchg
mov
adc
stos
mov
xlat
fidivs
pusha
iret
call
sub
dec
cwtl
or
shlb
jns
popf
pop
in
inc
jp
inc
or
mov
nop
roll
and
ja
fimull
xchg
mov
xchg
jns
mov
or
ja
das
xor
ja
inc
push
or
jbe
add
fs
jne
pop
jge
rcrb
insb
dec
shrl
imul
nop
cmpsb
jb
lahf
jne
mov
fs
js
mov
mov
mov
dec
or
movsl
xchg
mov
jl
mov
xor
push
int3
pop
ret
fstpt
or
jo
int
cld
and
pop
jmp
fistpl
loopne
ret
stos
xor
mov
mov
fldt
enter
testb
and
lds
and
ja
dec
rcl
xchg
and
je
inc
sbb
fisubrl
inc
outsl
add
shld
pop
mov
ror
cmp
push
hlt
push
or
xor
pop
shufps
enter
mov
repz
test
pop
sahf
pusha
ja
jp
xor
pop
jae
arpl
push
mov
fldenv
lea
rcrl
sub
gs
and
sbb
stos
and
dec
mov
add
fisttpll
ds
push
andl
shll
into
sbb
adc
es
push
ret
pushf
xor
scas
xchg
ret
cli
mov
icebp
inc
icebp
push
jmp
out
daa
js
fadd
cmp
arpl
mov
dec
cmc
mov
ljmp
icebp
mov
andb
repnz
gs
add
push
dec
leave
pcmpgtb
loope
addr16
push
std
clc
ss
sahf
xlat
arpl
ficoml
inc
sbbb
mov
mov
pop
mov
add
in
insl
dec
or
mov
lods
test
xchg
icebp
addr16
cmpsb
les
rcrl
mov
and
pop
ljmp
daa
fnstenv
mov
outsl
sub
sarl
dec
out
mov
inc
jp
jnp
pop
mov
cmpsb
cwtl
sub
and
sbb
into
iret
int
mov
rol
jle
push
jb
mov
push
jl
jae
ret
stc
mov
mov
mov
loop
das
idivl
pusha
ret
jp
adc
int
aam
pusha
imul
sub
cmpsl
outsl
and
ret
lock
xor
pusha
bound
mov
cmp
jb
inc
push
sub
sub
daa
outsl
cmp
lods
out
clc
iret
std
outsb
mov
into
ds
js
outsl
in
cmp
push
mov
sarb
iret
test
movzwl
mov
push
fdivr
cmp
pop
psubw
push
sub
jo
cmp
mov
pushf
pusha
jl
in
in
imul
loope
mov
mov
dec
push
pavgw
add
mov
jg
cmpsb
jbe
and
jge
leave
mov
mov
fwait
movsl
xor
cmp
dec
push
dec
or
mov
pop
mov
loop
ret
cmpsb
aas
pop
cmc
mov
lret
mov
in
lds
ret
sti
jns
dec
mov
pop
iret
add
ficompl
adc
aam
jecxz
mov
mov
fdivs
mov
sub
and
mov
sahf
insl
ds
mov
push
enter
fimull
jbe
dec
add
adc
pop
ret
mov
icebp
daa
gs
dec
sub
or
in
das
mov
dec
fnstcw
push
popf
sbb
sbb
cmpsb
sub
popf
xor
mov
call
clc
call
pop
dec
daa
sub
ds
in
repnz
das
cmpsb
sar
insl
enter
imul
push
mov
pop
add
pop
xchg
jbe
or
jno
testb
jbe
lea
sub
ja
cmp
aas
and
cmp
push
arpl
push
lcall
aad
xchg
jne
fwait
push
test
inc
mov
iret
movsl
int3
dec
push
fs
cld
loopne
mov
pusha
lret
rcl
dec
cmpsl
test
out
in
aas
daa
cmpsl
ret
dec
les
and
mov
adc
in
mov
int3
enter
sahf
mov
inc
std
jl
out
stc
stc
xor
aad
push
mov
dec
jne
shrb
mov
test
out
leave
lods
addr16
pop
or
lret
test
mov
mov
pusha
push
fdivrs
popa
rorl
and
pop
loopne
cmp
and
test
test
cmpsb
loopne
xchg
jg
add
seta
mulb
imul
sub
sub
mov
pop
jmp
or
cld
pop
les
pop
outsl
dec
cmp
into
xchg
subb
daa
xor
shl
ljmp
imul
and
scas
ret
pop
sbb
out
xorl
popf
jb
xor
rcl
push
push
fisubl
cmp
insl
mov
add
jae
jg
clc
es
in
arpl
and
ljmp
or
fdivrl
jg
shlb
shll
mov
add
jb
xchg
test
sarb
adc
sub
xchg
fstps
jo
das
jg
fiaddl
mulb
dec
push
jne
aam
xchg
and
jge
jp
adc
jns
jl
cmp
cltd
scas
mov
cmp
popa
xor
out
add
adc
and
sub
cmpsb
mov
push
jo
int
jg
pop
jno
sahf
aas
adc
mov
mov
pusha
pop
mov
inc
pop
dec
mov
insl
or
lods
push
lcall
push
or
jb
jecxz
and
jbe
addb
repnz
ficoml
pusha
xor
out
in
jecxz
pop
dec
xchg
jmp
aam
jle
push
dec
push
inc
pop
cwtl
inc
xchg
mov
xchg
fwait
mov
jg
fwait
in
int3
pop
in
neg
dec
sbb
cmc
lahf
push
fadds
enter
pop
test
jae
jno,pn
rolb
int3
out
jle
push
out
fwait
mul
cwtl
iret
adc
mov
shl
out
bound
mov
push
inc
jle
scas
push
or
push
jne
push
jecxz
ror
mov
mov
enter
jno
jbe
jo
mov
rorl
push
mov
add
lods
mov
xor
mov
sbb
jle
add
std
sahf
push
std
xchg
inc
out
inc
jp
mov
jp
cli
cld
mov
ret
lret
push
clc
mov
and
push
jb
call
lods
les
lcall
std
pop
and
je
mov
push
xorb
jne
xor
orb
ss
loope
dec
push
pcmpgtb
rclb
mov
rolb
ss
and
dec
push
add
cld
cmc
pop
iret
stc
sbb
iret
jbe
aam
cmc
mov
or
lods
outsb
cmp
cmpsb
rcll
cltd
in
or
pop
in
mov
sub
pop
sub
jle
addr16
push
inc
rol
out
pop
add
jl
int3
jmp
shrb
das
sub
xchg
pop
inc
shlb
push
push
fwait
js
add
repz
test
cmp
mov
mov
pop
rcrb
xor
and
add
shll
cwtl
fcom
xchg
out
aaa
sbb
call
jbe
jno
push
not
or
lods
cmp
aad
in
lds
adc
jbe
mov
dec
fdivl
enter
sub
jo
sub
stos
mov
pop
test
xor
les
test
xor
int3
fldl
xchg
cmp
in
lds
add
cld
mov
ret
sub
inc
ret
lahf
pushf
and
test
xorb
addr16
pop
jp
in
jno
sbb
push
dec
ret
into
inc
inc
nop
shl
test
mov
and
cmpb
mov
jns
pushf
pop
or
adc
mov
mov
lret
xchg
adc
inc
mov
lahf
xchg
mov
sub
and
adc
adc
out
xlat
adc
xorl
xor
dec
add
testl
pop
call
aaa
out
cltd
inc
inc
loope
push
insl
test
leave
sbb
neg
lods
loopne
adc
and
push
scas
jnp
into
add
jae
push
or
in
das
orl
lock
pop
mov
lock
sub
pop
mov
cld
add
xchg
mov
add
mov
nop
dec
inc
jmp
cld
outsl
push
in
add
inc
push
imul
aam
xchg
or
add
fidivrs
out
cld
push
jmp
jns
sbb
pop
add
pop
add
mov
push
sub
sbb
aad
shll
fnstcw
fcompl
and
scas
lret
cltd
mov
cltd
and
adc
lods
cwtl
imul
add
test
sbb
xchg
push
std
mov
push
insb
lahf
iret
push
jno
adc
cmp
xor
mov
cli
inc
jae
and
ret
aam
xor
xor
aam
rorl
jne,pt
pushf
push
ficoml
das
add
push
sub
scas
mov
inc
add
sbb
push
cmp
out
mov
sbb
dec
ret
push
cld
push
outsb
mov
loop
repz
in
or
out
cmp
cwtl
pop
adc
cmp
inc
test
push
dec
in
mov
mov
pop
add
cmp
sbb
add
mov
dec
int
push
std
lret
pop
cmc
aam
movsl
cs
jnp
or
pminub
aaa
fidivs
mov
pcmpgtb
inc
int3
pop
popa
mov
dec
mov
lahf
rcrb
cmpsl
xor
scas
cmp
adc
adc
stos
xor
mov
xor
pusha
mov
icebp
add
pop
jecxz
xchg
jns
pop
adc
leave
in
mov
out
movsb
pop
lcall
fwait
push
sbb
jae
sub
out
jl
adcl
sbb
sbb
xchg
pop
mov
cld
adc
mov
dec
push
into
xchg
test
scas
push
inc
or
mov
push
pop
xchg
arpl
movsl
push
xor
xchg
test
xor
out
jmp
dec
sbb
mov
jno
inc
mov
fnsave
ret
xchg
jmp
dec
push
icebp
out
sbb
push
ja
push
inc
jge
imul
lds
and
outsl
or
ficoms
aas
arpl
inc
aas
pop
jmp
pusha
std
cmp
pop
mov
and
add
test
dec
aas
hlt
mov
xchg
xchg
adcl
shll
mov
push
mov
push
sbb
out
idivl
addr16
nop
outsb
jecxz
aad
push
out
xor
cmp
ss
sub
lods
paddsb
int3
and
add
in
scas
ror
push
into
sub
jmp
hlt
sbb
xlat
stos
shll
lods
fwait
cmp
jmp
lahf
xchg
and
xchg
inc
or
jno
lock
mov
roll
roll
dec
cmpsb
ds
leave
pop
jo
inc
mov
icebp
pushf
cmpl
push
and
fwait
push
push
cmp
mov
mov
inc
fidivrs
inc
xchg
and
cmp
out
jb
nop
and
pop
in
pop
sti
loop
jecxz
out
fisubl
xchg
push
shrl
cli
adc
or
add
dec
or
in
mov
cltd
add
pop
ljmp
and
out
jae
mov
sbb
flds
popf
mov
icebp
inc
add
clc
cmp
lea
ret
pop
les
push
dec
scas
push
adc
sub
out
js
ret
imul
mov
lea
mov
ret
cmp
mov
pop
in
cmp
movsb
or
mov
push
add
mov
xorl
adc
sub
xor
loopne
pushf
add
fcoml
roll
lret
jle
add
pop
adcl
jbe
adc
mov
adc
gs
pop
xor
push
mov
adc
ljmp
sbb
inc
arpl
mov
mul
out
jns
adc
shr
gs
inc
xchg
movsl
add
jns
push
out
jecxz
outsl
mov
in
or
cmp
adc
aam
add
xor
pop
sbb
out
cmc
pop
sbb
daa
inc
popf
imul
test
aaa
and
lea
mov
sar
div
inc
cmp
rcrl
push
maxps
test
add
sub
inc
cmp
adc
add
lea
jne
xchg
out
adcl
jp
int
xchg
or
icebp
sbb
pushf
mov
mov
push
xchg
test
sbb
jb
in
adc
fwait
mov
xchg
shlb
in
mov
imul
xchg
xor
test
pop
repnz
mov
jg
repnz
test
scas
jnp
ljmp
jmp
test
mov
push
lods
push
dec
mov
fst
in
notb
and
pop
dec
xor
jb
add
int
push
scas
inc
push
add
imul
fadds
jae
hlt
xchg
fwait
aad
cmp
dec
xor
les
dec
and
pop
enter
cmp
push
adc
gs
pop
stos
adc
add
lret
out
shll
test
int
xlat
sub
testb
and
movsb
jmp
add
jae
jo
inc
jmp
mov
or
mov
in
scas
mov
ds
repz
inc
outsb
or
cmpsb
rcrl
in
iret
fstpl
ja
mov
popf
add
shl
nop
pop
test
outsb
dec
adcl
add
mov
aad
pop
pop
push
pop
int3
sahf
cmpl
push
sub
pushf
xor
add
and
sbb
sbb
mov
xchg
in
mull
testb
xor
insl
ja
rcrb
push
pop
cmp
arpl
xor
loope
mov
int
in
fdivl
scas
daa
dec
and
mov
fdivr
insl
dec
rolb
lcall
or
aaa
add
mov
adc
add
cli
flds
std
mov
jmp
jo
lea
pop
movsl
fisttpl
lret
xchg
push
sbb
mov
xchg
sbb
jae
or
jb
in
ret
mov
mov
call
int3
fimuls
sti
add
ja
mov
adc
cs
ss
jae
shlb
outsb
cmpsl
cs
mov
add
jp
pushf
mov
aas
sub
cmp
sbb
cld
lea
jmp
lcall
jns
xchg
enter
jl
outsl
popa
out
mov
jbe
push
inc
mov
sbbb
dec
mov
sub
popa
push
loopne
adc
leave
push
xor
jb
xchg
jbe
leave
mov
mov
push
xchg
xchg
push
mov
lret
inc
cs
inc
xor
test
je
sbb
or
or
in
mov
add
xchg
shrl
jecxz
in
xor
sbb
adc
xor
push
sbb
outsl
xchg
xchg
push
negl
fimull
lret
mov
dec
push
pop
lods
or
sub
adc
jle
mov
cld
inc
insl
push
cmp
cli
fsubl
pop
roll
pop
loop
cmp
stc
dec
dec
fsubl
fwait
adc
mov
leave
adc
icebp
imul
loope
out
dec
dec
lds
pushf
call
sub
xchg
mov
or
push
dec
sti
mov
adc
mov
mov
mov
outsb
movsb
jnp
pop
popf
pushf
lods
lahf
mov
dec
and
mov
gs
aaa
add
push
dec
cmpsb
adc
pop
lret
loopne
inc
dec
lcall
je
mov
and
sub
lretw
sbb
or
loop
mov
xor
jo
gs
jns
shlb
push
or
xchg
mov
or
addl
out
inc
lock
mov
mov
mov
scas
mov
mov
dec
stc
xchg
and
jl
mov
jo
mov
lods
insb
mov
mov
sub
js
insb
inc
push
iret
and
in
xchg
loopne
pop
pop
add
dec
shll
add
das
add
mov
in
xor
xor
in
cmp
mov
out
jp
xchg
das
mov
sub
fmuls
pushf
inc
jne
aas
call
lods
push
xchg
outsb
in
mov
mov
xchg
sahf
sbb
mov
mov
and
outsl
mov
repz
into
pop
sub
lods
gs
inc
sub
ret
mov
add
movsb
jecxz
clc
loopne
clc
test
xchg
scas
cltd
lcall
adc
or
ljmp
mov
or
lcall
mov
cmp
sub
xchg
imul
sbb
scas
ud2
jnp
cmp
lea
jle
xchg
stos
pusha
andl
cs
clc
or
adc
inc
xlat
loopne
adc
sbb
and
jp
mov
adc
xlat
mov
insb
jno
mov
sub
cltd
jle
inc
mov
add
outsb
sbb
rcll
cmp
or
cmc
sub
push
or
rcrb
add
inc
flds
pusha
popa
shr
xor
fildl
movb
xor
aam
int
mov
sbb
xchg
loopne
mov
cs
stc
xlat
and
mov
test
jno
lret
adc
jno
test
adcb
mov
cmp
clc
outsl
cwtl
movsl
les
insb
jl
lret
out
arpl
pop
shll
push
roll
xchg
dec
hlt
stc
dec
or
int3
in
dec
sbb
data16
mov
mov
inc
jns
xchg
push
sub
iret
push
xor
xchg
pop
movsb
sub
xchg
adc
push
inc
mov
jno
sbb
pop
subb
mov
sub
shr
fcmovne
mov
cwtl
pop
cmp
or
add
cs
cmpsb
icebp
cmpsl
push
or
mov
bound
mov
pop
push
mov
xchg
ja
mov
sbb
xor
jp
and
adc
or
lcall
xchg
int
and
dec
rolb
xchg
mov
iret
cs
cs
pop
mov
jmp
or
into
mov
inc
ljmp
test
sbb
ret
into
movhlps
jb
push
in
mov
adc
std
lcall
xchg
clc
push
dec
dec
shl
sbb
int3
xchg
add
sarl
test
call
inc
dec
push
es
jae
push
fnstsw
add
outsl
cmp
aas
inc
push
stos
push
mov
xor
std
cli
ja
sub
lret
mov
sbb
rorb
movsb
inc
mov
les
dec
ficoml
jmp
mov
sbb
mov
and
push
add
xor
cmp
xorl
and
jl
cwtl
dec
mov
and
lea
cli
loope
cmp
sub
xchg
push
jne
jle
and
leave
pop
inc
mov
pop
stos
mov
pushf
xor
outsb
dec
mov
dec
add
sarl
pushaw
mov
push
movsl
xor
int3
add
imul
test
les
and
jbe
shl
cmp
outsb
xlat
adc
pop
imul
into
push
cmpsl
std
push
ret
out
inc
adc
mov
xor
mov
stc
mov
xor
cmp
vpshad
insb
cmp
daa
and
lcall
xor
jnp
fldl
jmp
bts
leave
scas
pop
fcom
outsb
cld
insl
dec
and
mov
inc
fidivrs
clc
sahf
movsb
xlat
push
sub
addb
cltd
fsts
pause
or
nop
lds
and
ljmp
xor
repz
cmp
sbb
or
jp
mov
jo
mov
adc
and
xchg
inc
and
or
test
ds
shlb
xor
les
add
ja
rol
int
jb
dec
or
scas
add
call
adc
divl
sub
jns
mov
shlw
test
pop
push
xchg
divl
and
mov
mov
decb
mov
nop
outsb
jns
push
test
test
addr16
xchg
inc
push
lds
sub
pusha
cmp
inc
ljmp
popf
mov
mov
in
mov
fucom
xlat
les
dec
mov
or
xchg
mov
push
add
testl
repz
scas
faddp
or
xor
add
aam
cld
sahf
mov
xchg
les
xlat
fwait
and
lods
mov
push
setnp
dec
out
inc
or
cmpsl
mov
aam
push
push
clc
or
mov
rep
or
jne
leave
fiadds
dec
cmpl
or
rcrb
icebp
and
jno
or
xor
and
subb
sub
shll
adc
aad
mov
jb
sbb
mov
xor
jbe
cmp
dec
pop
mov
mov
jo
insb
fsubl
push
jbe
inc
loopne
cmp
add
or
pop
nop
and
adc
add
fwait
mov
scas
dec
dec
repnz
enterw
pusha
shlb
push
pop
scas
mov
pop
or
add
sbb
mov
cmp
mov
add
adc
xchg
push
call
lcall
aaa
add
int
ret
aas
dec
outsl
outsl
in
aas
ja
and
leave
inc
jo
dec
mov
dec
lea
mov
push
ret
mov
fisttpll
add
mov
jns
xor
or
fistps
dec
mov
push
mov
cmp
sbb
mov
cmp
out
mov
jecxz
adc
xchg
rclb
xor
and
orb
inc
pop
mov
insb
xchg
ds
mov
jb
cmp
xor
jne
movsb
jb
jge
cmp
pop
or
dec
enter
shrb
ja
xor
js
lods
in
insl
mov
sbb
adc
pop
cmp
js
jl
pop
repz
lret
ss
jae
sti
cvtps2pd
push
mov
push
and
sub
dec
scas
adc
daa
mov
jae
insb
pop
adc
or
les
fimuls
cmc
movsl
scas
int
je
repnz
jge
movl
lahf
push
andl
dec
jle
arpl
or
mov
outsl
push
jne
les
or
fs
inc
lea
inc
popa
es
insb
cmp
mov
hlt
jns
push
push
sahf
in
push
scas
and
dec
test
mov
test
pop
mov
mov
or
mov
inc
jge
or
add
bound
or
fiadds
rcrb
test
std
daa
popa
pop
push
dec
pop
xchg
sysenter
push
pop
in
sbb
mov
cmc
pop
xchg
pop
inc
inc
in
decb
xchg
out
pushf
sbb
outsb
adc
xlat
pushf
dec
and
lods
cmpsb
fisttpll
fmuls
enter
jno
jmp
lcall
test
xchg
sahf
shll
add
dec
lret
fistpl
sbb
loop
dec
inc
pushf
int
jg
daa
push
call
insl
frstpm(287
stos
pop
mov
pop
in
xchg
test
pop
sbb
mov
das
jnp
jae
sbb
lods
std
xchg
mov
inc
movsl
xchg
stos
popa
filds
push
mov
pop
jne
push
cmc
dec
data16
adc
fisttpll
push
adc
mov
lcall
xchg
test
mov
pop
inc
outsl
add
enter
aaa
cmp
test
inc
xchg
jg
mov
int3
insb
addr16
jae
push
push
stc
and
aaa
les
mov
inc
adc
cs
fisttpll
fs
sahf
out
stc
sti
test
adc
dec
ds
jno
jg
aad
pop
mov
cwtl
lcall
inc
aad
jge
sbb
push
stc
pop
push
ja
iret
and
fistl
jno
addb
adc
imul
stos
ret
movsb
or
add
out
mov
notl
icebp
and
in
cmp
int3
cs
and
dec
mov
and
sbb
push
sub
and
push
mov
jae
push
xchg
adc
fwait
mov
xor
nop
inc
xchg
sbb
sbb
stmxcsr
aam
pop
imul
fildl
mov
inc
pop
add
xchg
pop
inc
or
cmpsl
xchg
les
arpl
inc
int
cmp
dec
ret
loop
ficomps
or
push
inc
rol
push
mov
jge
add
hlt
dec
sahf
jecxz
push
xchg
adc
shlb
mov
clc
adc
lahf
in
pop
push
test
orb
fs
xchg
les
jb
jecxz
push
mov
mov
divb
jne
mov
jmp
in
pop
mov
inc
out
cmp
fs
push
stos
pushf
in
or
leave
cmc
or
mov
sti
call
int
pop
out
mov
out
fs
fs
sbb
loopne
in
test
push
mov
in
es
aad
fsubrp
pop
popf
mov
xchg
or
jmp
lea
cmp
cmp
stos
in
fwait
and
dec
xchg
cmpsl
lea
mov
jecxz
cld
jg
btr
test
jl
es
ljmp
in
loope
lahf
data16
push
or
sbb
in
mov
sub
xor
push
in
popf
lcall
pop
les
mov
pop
scas
xchg
insb
jne
push
aam
lods
xor
and
xlat
ja
push
adc
jge
fcoml
xchg
jne
shll
push
add
cli
loopne
divb
jmp
xor
cmp
lods
or
pop
lcall
mov
icebp
loopne
imul
imul
stos
cmp
jle
or
daa
jne
cwtl
push
jmp
xor
outsl
sbb
sub
xchg
hlt
jne
mov
pop
mov
pop
pop
in
shrl
jnp
add
mov
sbb
cmpsb
cmp
outsb
fldenv
and
pop
inc
jbe
aaa
cmp
and
adc
loopne
mov
mov
mov
cs
out
js
fsubl
pop
daa
sub
in
sbb
inc
push
test
icebp
aam
add
arpl
push
ja
xchg
out
in
push
dec
inc
dec
pop
shl
int
jne
imul
inc
inc
cmpsl
cmp
jle
cld
loopne
sub
cmpsb
mov
shlb
jns
jl
mov
mov
out
sub
or
or
jl
ljmp
outsl
scas
push
call
jae
mov
data16
cs
int3
in
or
sub
mov
xlat
sub
aaa
sbb
cmp
in
pop
push
cmp
ljmp
sahf
mov
mov
mov
or
xchg
xchg
stc
cltd
addl
lcall
pop
adc
frstor
pop
lods
lods
outsl
inc
jmp
dec
cmp
pop
fnstenv
test
mov
push
mov
jg
push
dec
xchg
or
adc
lods
push
idivb
pushf
dec
jmp
mov
in
and
out
or
add
mov
and
push
jae
call
mov
test
add
add
out
push
aam
pushl
mov
fidivrl
dec
popf
sub
fidivrl
cmpsb
mov
test
jl
push
in
dec
lock
cmp
aaa
aaa
int3
jns
or
lcall
sub
movsb
and
pushl
cmc
jne
xchg
into
jo
cmp
cltd
dec
mov
xchg
mov
push
gs
cltd
ljmp
out
or
ja
mov
inc
test
xchg
ret
mov
mov
out
and
cmp
adc
into
pop
aaa
movsl
jp
lea
mov
scas
les
or
push
aas
mov
hlt
jp
jnp
pop
push
pop
lea
sti
imul
imul
pop
jecxz
dec
push
push
mov
or
clc
xchg
shlb
das
cmpb
push
cld
movsb
or
imulb
fcoms
pop
push
call
cmpsl
pop
pop
jge
pop
iret
arpl
test
dec
cmpsl
in
loop
push
cmpsb
or
gs
out
stc
bound
mov
iret
push
mov
aaa
or
and
jb
lods
aaa
sbbl
xchg
int
jg
repz
push
leave
dec
fs
les
imul
or
jne,pn
push
fimull
inc
mov
mov
xchg
xchg
gs
cmp
xor
les
pop
xchg
pop
inc
or
outsb
aam
mov
cmp
sti
movsl
sbb
pop
add
scas
sbb
push
cld
pop
lret
andb
push
arpl
in
nop
int3
inc
pop
pop
inc
insl
jo
rcrl
mov
sahf
les
xor
jecxz
mov
jb
cmp
add
ret
push
nop
xor
push
add
rcrb
xor
imul
outsl
aam
iret
addr16
dec
clc
sar
pop
ljmp
xchg
mov
mov
outsl
jae
sub
in
cmp
xor
addl
insl
mov
sub
bound
test
mov
lret
cli
inc
popf
fsts
or
cli
cltd
dec
mov
xchg
in
test
push
mov
stos
jle
leave
mov
sahf
lock
dec
or
mov
cmpsl
pushf
or
call
add
jno
or
lods
add
mov
jns
sub
cmp
or
dec
xchg
lcall
pop
jl
jg
xor
bound
insb
mov
fmuls
mov
fdiv
add
push
scas
mov
mov
sbb
movsb
fstps
pop
push
fstpl
and
jg
enter
mov
push
and
add
mov
gs
movsl
cmp
and
lds
jmp
pop
aam
fwait
imul
enter
loope
and
jbe
push
dec
fcoml
sahf
sbb
cmp
jne
mov
cs
inc
xchg
in
icebp
inc
jmp
iret
pop
mov
aaa
jb
mov
lods
fucomp
roll
call
or
pop
mov
lds
ss
mov
xor
pop
popa
sub
data16
dec
les
push
loop
scas
and
cmpsb
or
bound
repz
adc
push
aaa
jl
adc
and
jmp
and
cld
cmpsl
cmp
adc
ja
loopne
or
aas
shll
push
inc
movsl
cs
mov
mov
adc
xchg
rclb
fbstp
or
enter
jg
dec
fwait
lahf
adc
mov
pop
mov
sahf
cltd
jg
sbb
shrl
adc
out
cmp
cltd
hlt
scas
mov
arpl
rorl
in
pop
cmp
call
mov
mov
data16
popf
nop
jae
dec
jmp
push
jbe
xchg
jno
stos
bound
xchg
lret
out
push
mov
lahf
or
outsl
sbb
xchg
jmp
push
sbb
mov
imul
mov
test
mov
js
and
pop
pop
push
and
std
add
mov
lea
inc
outsb
sub
pop
pop
push
dec
mov
push
sub
jp
pusha
stos
mov
repnz
bound
mov
push
into
sub
inc
jo
nop
cmc
gs
cmp
add
and
lret
ret
fists
test
inc
clc
mov
sbb
dec
scas
inc
jg
repnz
ja
sbb
pop
mov
fnsave
xchg
aas
push
fcoms
push
test
stc
add
jno
cmpsb
sub
mov
adc
xchg
cltd
sti
div
test
pop
mov
inc
nop
adc
dec
push
ret
int3
scas
inc
outsl
jb
push
test
icebp
mov
cli
stos
inc
dec
sahf
mov
leave
mov
push
jmp
fwait
xchg
loopne
push
pop
movsl
inc
xchg
inc
bound
xchg
dec
or
dec
test
pop
sarl
call
push
sub
andb
xor
imul
xor
out
addr16
xor
js
push
and
and
out
dec
pop
adc
adc
push
pop
push
mov
sbb
or
pop
data16
leave
pop
or
iret
push
fsub
dec
stc
rcrl
fisttpll
or
adc
pop
sbb
mov
dec
pop
mov
pushf
jp
int
add
loope
lea
mov
pop
mov
fs
in
insl
cmpsl
in
lds
jno
or
loop
scas
into
arpl
sbb
call
aas
add
in
insb
enter
and
out
scas
es
jmp
lock
lahf
je
jmp
or
sub
mov
and
cld
and
rcrb
xor
or
stos
sbb
mov
push
flds
pop
jns
fistpl
movsb
xchg
adc
shlb
out
loope
mov
push
ret
push
and
cmc
fs
bound
add
pop
rcrb
cmp
mov
and
rcrl
or
ja
mov
dec
push
xor
push
pop
inc
lds
and
mov
fldcw
jmp
mov
xchg
inc
test
push
sbb
mov
jbe
xlat
pop
cmp
repnz
cmp
shrb
cmc
mov
test
data16
jl
lret
stos
in
mov
popf
pop
push
jl
pop
lret
jne
inc
inc
hlt
shl
pusha
and
leave
pusha
mov
jle
movsb
hlt
and
fiadds
sbb
pop
loopne,pt
nop
cmpsb
stos
cli
cmp
xchg
pop
jmp
dec
bound
cmp
mov
push
ljmp
cwtl
cs
xchg
call
scas
paddd
mov
mov
mov
xchg
cmc
daa
xchg
notb
mov
call
add
push
js
and
mov
mov
push
mov
lods
mov
out
lods
mov
dec
or
addr16
shll
out
pop
mov
and
and
add
daa
jb
jle
fs
pop
pop
cltd
adc
dec
ds
std
xchg
dec
negb
add
adc
cmp
stos
movaps
cli
sub
shrl
mov
push
mulb
dec
cwtl
loop
data16
sub
shr
divl
lret
mul
jp
adc
fdivrl
lods
cpuid
cmp
dec
push
jae
jge
cmpsb
rcrl
ficomps
cld
or
jg
inc
jg
xor
dec
jle
call
rolb
imul
js
mov
inc
gs
call
push
sub
jecxz
adc
pop
add
inc
cltd
xchg
mov
mov
dec
mov
adc
inc
fimuls
aas
inc
test
out
add
sar
aam
aaa
mov
adc
mov
sub
mov
push
pop
push
gs
lods
xchg
sub
mov
test
sarb
cld
neg
orb
ret
mov
icebp
or
movsb
fs
repnz
sti
fs
push
arpl
loope
cmpsb
test
pop
andl
mov
ficoml
jae
adc
xor
adc
mov
int3
mov
or
cmpsb
outsl
test
xlat
test
outsb
bound
add
push
int3
clc
mov
sub
cmp
adc
ficoms
cmp
lret
xchg
jl
jl
aas
pop
mov
hlt
xchg
xchg
cmc
or
cmp
arpl
jne
out
inc
sarb
jno
or
ds
and
push
iret
adc
sub
testb
ret
int3
jl
mov
xchg
push
xchg
add
std
and
push
call
test
push
ds
imul
pop
test
push
fiadds
insl
sbb
sbb
push
cli
mov
das
dec
inc
lock
dec
in
adc
leave
repnz
add
or
out
sarl
std
cmp
cmpsl
testb
cli
aad
fidivs
mov
jnp
or
popa
sub
in
pop
cmp
sub
inc
int3
and
mov
cmp
mov
mulb
push
inc
sbb
adc
inc
mov
repnz
and
dec
call
lret
adc
jg
mov
fcomip
in
cltd
mov
sti
cwtl
cmpb
ret
fcompl
imul
adc
add
lods
push
filds
lds
push
mov
xchg
pop
dec
ja
add
subl
popa
and
push
pop
jmp
inc
ds
pop
stos
nop
pop
sub
inc
push
pop
insb
cs
jg
inc
cmp
cmpsb
lret
clc
aaa
movsl
fnstcw
xor
mov
push
xor
pop
in
sbb
xchg
push
dec
pop
or
addr16
pop
mov
or
shll
push
call
loopne
pusha
int3
rclb
or
mov
shlb
adc
aaa
mov
rcrl
into
xor
mov
cltd
loope
mov
jns
into
mov
addb
sbb
push
push
fidivs
xchg
jne
dec
push
mov
sbb
cmp
insb
sub
lods
std
loop
popa
movl
lahf
aas
mov
cmpsb
mov
push
icebp
pop
stc
out
push
adc
out
add
addr16
jnp
xor
xlat
imul
adc
imull
cmp
stc
aas
je
xchg
fmull
ja
leave
push
adc
sub
cmpsl
push
or
repnz
bound
xor
pop
imul
ficompl
add
inc
out
repnz
sub
push
adc
dec
xchg
sbb
pop
fwait
lret
sbb
call
xchg
in
pop
xor
pop
dec
fstpt
insb
adcl
bound
shr
adc
jne
cmp
mov
lods
and
inc
lcall
sbb
add
popl
mov
arpl
pop
sbb
clc
and
xor
popf
push
pop
cld
shrl
xchg
stc
mov
mov
push
in
and
imul
dec
mov
int
sbb
ret
bound
mov
dec
cld
in
sahf
mov
stc
lret
cld
ficomps
scas
pop
ds
adc
or
out
push
orl
add
inc
push
ds
cmp
cmp
stos
cli
aad
dec
or
jbe
jno
add
push
test
xchg
mov
cmp
xchg
cld
lahf
js
inc
or
fwait
rcl
loope
addr16
dec
test
mov
jns
stc
sub
insb
dec
push
push
adc
xor
pop
pop
mov
or
lahf
jne
nop
mov
dec
rorb
stos
imul
mov
xor
mov
into
jo
xor
cmpl
movsb
pushf
inc
cli
mov
mov
push
cmp
cmpsl
fwait
pop
gs
mov
fcmovnb
or
mov
cld
pop
sbb
je
std
jecxz
xor
lds
fdivrl
std
outsb
hlt
push
and
push
xorb
pop
ja
or
fs
rcrl
not
outsb
push
fidivrl
jmp
and
das
popa
pop
mov
out
popw
insl
xlat
cltd
clc
sub
nop
mov
jecxz
sbb
pop
and
jle
sub
cmc
cs
flds
or
in
push
lods
or
testl
cmp
add
aas
jae
push
mov
add
imul
iret
std
repnz
adc
shrb
sub
and
jae
outsl
xor
test
out
dec
fwait
mov
out
flds
movsb
iret
pop
pusha
sbb
outsb
xchg
cmp
test
sub
xchg
imul
test
inc
shlb
fisttps
jno
loop
lret
fstpt
mov
mov
jb
adc
mov
sub
xor
lods
jge
mov
popf
mov
in
lret
stos
add
cmpsl
mov
xchg
xchg
inc
adc
mov
es
push
and
pop
sub
mov
pushl
sbb
gs
negl
lret
pop
add
mov
imul
dec
stc
jno
idiv
push
js
sbb
sbb
mov
sbb
push
je
xchg
cli
sbb
dec
cmp
xchg
sbb
inc
xchg
dec
scas
and
nop
in
xchg
jle
xor
js
daa
out
push
xor
jo
and
dec
jbe
mov
popf
xor
dec
ficoml
xor
cmp
cmc
rclb
into
movsl
mov
aam
cli
dec
sbb
lret
insl
pop
sub
lds
out
cmp
repnz
push
cmp
xchg
push
jne
cmp
test
stc
and
cltd
or
or
cmp
insb
lret
mov
push
das
mov
testb
mov
pop
enter
movsb
jns
xchg
repnz
adc
std
add
pop
rolb
push
icebp
adc
jecxz
les
jns
and
cltd
sbb
rclb
inc
sub
data16
mov
pop
adc
loope
popf
hlt
std
loop
stos
sbb
dec
or
or
jp
jg
shrb
rorb
mov
into
scas
dec
je
inc
js
lds
fadds
addb
js
xchg
mov
aas
div
mov
pusha
add
xchg
sub
mov
fsubrs
ja
cmp
jns
xchg
dec
cmpsb
stos
fstps
jno
pop
test
popf
push
mov
nop
add
lret
add
bound
xor
addr16
jb
cld
dec
test
iret
xchg
icebp
dec
adc
mov
push
movsl
shlb
lret
inc
xorb
ret
fisttpll
xlat
xor
inc
mov
or
shl
lret
popf
xor
mov
in
loope
fs
pusha
js
dec
mov
mov
xor
push
not
mov
and
call
cs
mov
cmpsb
repz
bound
rcl
out
int3
add
and
jp
jmp
push
push
in
add
mov
mov
rorl
popl
fld
push
popf
mov
mov
adc
shll
push
mov
stos
and
das
add
adc
rcrb
outsb
add
lods
inc
add
or
dec
sahf
pop
mov
scas
outsb
push
xchg
mov
push
adc
sbb
mov
movhps
cli
ja
fistpll
adc
fdiv
push
pop
fistps
adc
fildll
cld
pop
push
nop
xchg
dec
pop
push
inc
sub
mov
pop
jno
jp
fistpl
loopne
sub
push
mov
mov
add
cmp
or
and
sub
bnd
push
jl
hlt
scas
xchg
push
pop
lret
push
push
sub
subb
outsl
cmp
loop
rcr
pop
gs
mov
imul
imul
lret
pop
loop
icebp
mov
or
je
mov
mov
mov
adc
jmp
out
fstps
mov
sub
iret
sub
dec
and
scas
cld
imul
repnz
ret
xchg
lods
outsb
loop
test
sub
mov
xchg
xlat
lock
mov
rolb
pop
inc
and
jne
or
push
mov
cld
popf
cs
fwait
cmp
add
aas
jge
jmp
sub
xchg
ds
and
pop
pop
pop
xor
sbb
jns
adc
rorl
jg
je
lret
lds
rcrb
aam
mov
popf
inc
flds
adc
test
stos
mov
js
push
stc
imul
xor
hlt
jmp
pop
cli
xor
dec
mov
pop
cmpsl
and
mov
lret
ret
dec
loope
add
in
xchg
lret
outsb
cmp
arpl
jg
or
in
add
insl
mov
xchg
adc
divb
jle
lock
xchg
lods
ljmp
jne
arpl
adc
add
pop
jbe
cmp
int
adcb
out
negb
aad
cmpb
icebp
mov
mov
cmp
sarl
arpl
push
xor
or
lret
popf
push
pop
dec
inc
cli
push
xchg
push
dec
cmpsl
enter
add
cld
jl
mov
xlat
sti
movsb
mov
aaa
add
lret
ret
mov
mov
cli
xor
ficomps
push
shlb
mov
mov
xlat
repz
popf
lods
gs
cmp
cld
leave
data16
push
cmpl
sub
loopne
inc
pushf
mov
mov
nop
sahf
cmpsl
mov
push
lret
dec
out
xlat
leave
mov
test
push
imul
xor
xor
mov
scas
test
xor
clc
sarb
imul
int3
mov
mov
sbb
je
mov
fiadds
rcrl
nop
or
stos
int3
fs
dec
sti
or
jecxz
xchg
and
sarb
fs
pop
xor
xor
cmc
aas
scas
and
int
xchg
outsb
jecxz
jge
fidivrl
pop
jmp
cmpsb
mov
dec
jmp
and
inc
fstpl
repz
push
mov
or
mov
mov
dec
repz
icebp
mov
outsb
enter
ret
add
pop
inc
into
or
pop
and
push
sbb
rol
adc
push
push
enter
test
ja
mov
or
ror
jle
adc
cwtl
das
cmp
cld
jl
ds
jno
jo
js
xchg
or
sub
cmp
jp
push
ds
jge
jg
pop
repnz
mov
and
mov
jne
mov
and
adc
mov
pop
pop
shr
lret
out
imul
add
cmp
or
push
lahf
int
or
popa
jno
rcr
pop
popa
sahf
movb
lock
fsubl
push
scas
mov
aad
lret
arpl
int3
lret
clc
cld
dec
xor
dec
test
fcmovne
ds
insl
dec
pop
pop
leave
das
in
in
lahf
sub
inc
fprem
pushf
mov
jl
mov
pop
outsb
xor
imul
mov
shlb
sbb
xor
jno
push
in
sbb
lcall
lds
dec
mov
enter
push
andl
pop
sbb
std
mov
or
push
shl
jb
and
push
nop
mov
andl
loop
add
inc
pop
sarb
push
pop
pop
cmpsl
inc
cmp
dec
addb
push
inc
pop
jmp
int3
ja
jno
push
rcll
push
pop
xor
dec
cmp
fstl
cmp
fwait
add
xorb
pop
dec
lods
fdivrs
xorb
jl
call
sub
adc
daa
push
sub
push
cmc
hlt
add
pop
mov
data16
leave
xchg
inc
in
imul
stos
and
sbb
mov
push
cwtl
sahf
jae
cld
lods
into
and
mov
shrl
push
mov
adc
arpl
dec
sahf
xchg
mov
sarb
stos
adc
call
stos
mov
test
aam
jmp
pushf
push
test
jg
popf
jmp
mov
and
pop
dec
aam
loop
mov
mov
pop
inc
out
aam
adc
rcl
dec
jne
lds
push
pop
push
enter
mov
fcompl
xlat
pop
sbb
dec
mov
lcall
push
mov
xchg
mov
addb
test
mov
cmpsl
mov
jl
in
inc
jge
jge
int
pop
sar
cld
xchg
movsb
jnp
mov
push
cmp
repnz
add
test
push
push
mov
notb
shlb
shl
sub
xor
lcall
in
addl
jmp
test
jno
and
cmp
mov
in
ja
testb
les
fiadds
xchg
daa
fs
mov
push
or
outsb
jmp
cmp
push
mov
jne
fisttpl
dec
dec
adc
pop
shr
add
mov
jbe
mov
pop
testl
mov
cmp
jns
pop
fst
sub
pop
mov
xchg
add
add
in
enter
push
jb
loop
pop
bound
lods
xor
test
cmpsb
int
inc
rcll
rcr
jbe
mul
sub
shll
mov
gs
aad
test
int
shrb
popa
cltd
fsubl
push
jle
dec
jns
sbb
dec
push
add
fldenv
mov
sub
lcall
out
pop
mov
xorl
test
divb
jnp
pop
mov
stos
or
jbe
xchg
sbb
popf
push
test
cmp
int
mov
sbb
cmp
ss
inc
adc
es
js
add
out
out
sbb
frstor
es
pushf
pop
lods
and
mov
xchg
sub
xchg
enter
lds
fldcw
js
pop
pushf
lsl
pop
ret
mov
sti
shl
jno
jl
stos
push
dec
and
out
inc
or
sahf
push
mov
dec
xor
lods
add
mov
pop
or
cmp
inc
sub
mov
repz
popf
xor
fcmove
mov
jae
add
add
mov
adc
pop
fs
add
rorb
bound
stos
jns
jbe
push
dec
cli
lahf
push
xchg
or
ret
cld
or
inc
or
shr
ss
mov
pop
lcall
addr16
clc
movsb
in
outsb
pop
or
xor
push
push
js
clc
pop
jl
inc
dec
je
lahf
xchg
gs
rorb
imul
pusha
mov
and
or
dec
pop
movsb
inc
pop
mov
dec
mov
sti
dec
iret
jmp
push
mov
cltd
push
jns
xor
push
shrl
jp
adc
add
ss
jl
push
cmc
sub
jmp
mov
xchg
xchg
fcomps
push
push
add
and
dec
int
xchg
loope
dec
push
cmp
mov
fucomip
jmp
or
fstps
inc
mov
ja
xchg
addr16
inc
xchg
or
cs
ret
scas
in
clc
lahf
mov
ror
xchg
cmpsb
jne
in
push
frstor
pop
fstpl
adc
daa
jmp
mov
push
jno
lcall
add
jg
dec
jo
aas
data16
cmp
pop
xor
in
fisttpl
mov
in
pop
pop
fs
js
cltd
iret
shlb
popf
xor
loopne
jmp
mov
pop
mov
cmp
push
mov
fs
xor
lods
or
xchg
mov
xchg
push
jl
cmp
repz
aaa
scas
fisttps
mov
sbb
stos
sbb
xor
mov
jbe
xchg
push
test
add
mov
out
jo
pop
add
cmp
mov
sarb
xchg
clc
dec
pop
push
fadds
ljmp
xchg
pop
imul
xchg
cmp
inc
mov
mov
data16
je
xadd
fsubs
mov
pop
in
scas
cmp
ss
push
dec
xor
push
or
mov
mov
xlat
in
and
adc
pushf
fs
in
out
idivb
cwtl
aad
add
mov
and
dec
ljmp
movsl
idivb
jmp
xlat
adc
pop
jl
and
push
fcmovnbe
nop
gs
test
jae
dec
add
rolb
sub
test
mov
push
push
ss
push
dec
stos
in
icebp
test
les
mov
rcrb
mov
inc
test
or
call
adc
mov
mov
add
sub
nop
xor
testb
sbb
outsl
jbe
repz
shrb
cmp
ss
jle
push
adc
lret
pushf
mov
ficomps
mov
inc
sbb
popf
gs
adc
or
outsb
mov
fisubrs
fcompl
pop
pop
mov
or
aas
add
jle
loope
xchg
scas
movsl
xchg
bswap
lock
push
push
lret
mov
and
es
mov
inc
fs
addb
mov
xor
lahf
test
incb
int3
xor
lret
lea
sub
sahf
inc
lahf
jge
xchg
xchg
test
sbb
es
pop
cli
sbb
pop
add
push
mov
movsl
xchg
ljmp
push
int
scas
jo
cs
test
jbe
mov
and
cwtl
mov
fwait
adc
incb
fstpt
loop
or
mov
cmp
dec
push
jae
mov
emms
mov
pop
lods
test
ficoms
divl
or
or
mov
ja
popf
inc
mov
shrb
data16
test
pop
jl
lcall
sub
xchg
xor
shr
and
je
mov
rcr
cmpsb
shrb
js
daa
add
pop
adc
cmp
mov
and
fucom
mov
jle
push
xchg
lcall
popf
addb
mov
jns
fwait
mov
out
xchg
push
lods
push
ror
test
ja
popa
sub
mov
push
cmpsb
clc
or
mov
aaa
gs
stc
or
or
mov
repz
inc
xor
testb
ljmp
scas
or
in
mov
js
aam
sub
mov
pop
or
lods
xor
mov
sub
and
pop
xchg
mov
popa
jo
loop
es
and
das
test
xor
into
sti
imul
adc
imul
xor
out
mov
les
cmp
jbe
cmp
and
dec
xor
push
repnz
sub
repnz
push
movsl
divb
or
icebp
add
pop
rclb
icebp
adc
loop
adc
dec
and
aas
mov
fimuls
rol
and
ret
jecxz
xlat
or
das
imull
jno,pn
or
mov
cmp
decl
mov
mov
jl
mov
xchg
movsl
pop
pop
push
xchg
popa
adc
cwtl
insb
in
jp
jmp
rorl
je
jno
mov
mov
pop
add
xchg
loopne
rorb
mov
cmpsl
fwait
fwait
imul
xor
mov
cmp
mov
cwtl
cs
push
push
arpl
cltd
scas
ret
fmul
add
add
mov
test
inc
pushf
sbb
xorb
push
outsl
aaa
xor
adcl
jg
test
dec
add
ret
sti
mov
enter
sbbb
gs
add
and
jmp
pop
repnz
es
pusha
mov
mov
psllw
shll
scas
stc
mov
jl
out
jnp
cltd
je
outsb
jo
mov
dec
mov
jbe
fstps
mov
test
std
cmpsl
sub
push
pop
mov
mov
mov
clc
mov
cmp
jmp
or
dec
pop
jg
lods
ss
ljmp
std
aaa
push
jmp
add
dec
fdivrs
mov
cmp
cwtl
test
cmp
repnz
mov
rorb
push
hlt
add
aad
pop
and
dec
push
cmp
inc
or
dec
adcl
add
push
jmp
loopne
push
shl
cmpl
adc
cwtl
into
scas
jae
addl
ret
xchg
aaa
fmull
es
pop
jg
fmull
arpl
repnz
mov
add
scas
out
mov
int
scas
loop
xor
pop
loope
and
popf
xor
fdivrl
cmpsb
shl
xchg
adc
mov
mov
dec
jg
inc
pusha
je
mov
mov
leave
xchg
ja
ja
out
xchg
imul
addr16
pop
pushf
dec
mov
rcll
mov
lods
inc
dec
arpl
int3
bound
sub
add
les
jmp
mov
addl
adcb
cmp
js
push
mov
ljmp
push
cmc
lods
aam
mov
mov
or
test
dec
sbb
dec
dec
xor
mov
inc
xchg
push
jbe
fstps
hlt
mov
jae
push
jbe
inc
and
fldcw
jno
pop
inc
fisttpl
int
sti
ljmp
adc
popa
addb
cld
jo
mov
sbb
rorb
mov
adc
jmp
call
call
dec
ljmp
cmpl
sbb
jl
mov
insb
js
cld
loopne
in
rorl
scas
ds
sbb
push
fwait
idivb
fucomp
xchg
xchg
nop
lea
jg
adc
inc
push
ljmp
in
insl
je
sub
lahf
mov
xorl
popf
xor
fdivrs
jge
fucomi
out
fidivl
dec
cmpsb
int
xor
mov
adc
or
xor
xchg
js
jp
mov
mov
ret
fcompl
inc
lods
xor
lock
mov
lret
pop
sbb
and
subl
loope
out
adc
pop
inc
jp
pusha
stc
cmp
xor
loope
add
dec
xchg
negb
cmc
repz
mov
push
push
xchg
xchg
sbb
in
movsb
sbb
in
je
repnz
push
or
inc
fldl
or
push
test
mov
xor
mov
jns
pop
xchg
repnz
dec
in
lcallw
sbb
sbb
mov
outsl
jl
mov
sbb
pop
out
and
fisubrl
sbb
and
fsts
addr16
xchg
lds
xchg
dec
inc
jne
addb
mov
fwait
mov
sbb
mov
rclb
adc
jno
jmp
mov
or
stos
sbb
pusha
je
push
stos
cli
icebp
push
xchg
ret
sbb
repz
xchg
shlb
in
inc
nop
ljmp
mov
or
mov
fistps
cmpsb
mov
int
hlt
push
aaa
ljmp
cmp
faddl
rolb
fnop
dec
push
cmp
loopne
jns
mov
popf
pop
pop
xor
jno
pop
ljmp
and
and
incl
divl
dec
and
mov
jo
adc
pop
out
fucom
out
nop
stos
cs
stc
ja
shlb
lea
sbb
mov
inc
cmp
fs
mov
fmull
mov
das
xchg
lret
mov
lcall
jno
sbb
adc
jmp
mov
xlat
call
xchg
cs
sbb
and
std
push
sbb
and
aad
inc
mov
andl
jecxz
adc
and
adc
icebp
sub
je
adc
xchg
lret
cmp
mov
xor
lret
int3
mov
adc
jle
pop
ret
rorl
scas
test
xor
dec
shl
popf
pop
add
xor
loop
or
mov
mov
repz
mov
inc
pop
fwait
pop
xchg
notb
fs
jo
mov
sub
cs
dec
loop
pushf
inc
in
dec
dec
lret
aam
pop
mov
jns
mov
jecxz
add
sbb
pop
cmp
sbb
shll
jnp
dec
xchg
dec
mov
jmp
mov
lods
pushf
inc
adc
icebp
cmpsl
aam
sub
dec
stos
movsl
ret
add
pusha
pushf
push
dec
insl
pop
push
popf
out
insl
nop
les
scas
cwtl
dec
sarl
mov
push
jmp
xor
dec
mov
cmpsl
cwtl
xchg
and
adc
aam
inc
cmp
inc
std
cmpsl
and
and
mov
gs
adc
es
sbb
xor
leave
jmp
addr16
push
data16
or
test
in
inc
rep
inc
jl
pop
lahf
call
sbb
add
add
pushf
add
les
mov
enter
test
test
dec
sub
cmp
and
dec
sub
dec
mov
inc
or
loopne
jo
hlt
and
xchg
cmp
sahf
xor
ficompl
dec
jbe
xchg
ret
mov
out
or
xchg
mov
and
mov
sub
out
aas
sub
aad
out
sbb
push
fcmovnb
xchg
cltd
adc
cmp
inc
cs
repz
in
jge
cmp
jecxz
jmp
xchg
fsts
lret
mov
xor
pop
mov
pop
aas
or
mov
out
sub
mov
sub
insl
push
cmp
add
push
aaa
sub
adc
add
aam
jnp
mov
mov
mov
lcall
clc
xor
xor
push
mov
jo
mov
enterw
in
mov
adc
ljmp
jne
dec
rorl
sbb
xchg
in
dec
pop
outsb
pop
mov
xchg
xchg
ss
mov
sbb
dec
inc
and
or
lods
dec
pop
fs
inc
push
adc
push
cmpsb
sbb
les
adcb
mov
inc
nop
inc
aaa
mov
jp
mov
mov
push
inc
ljmp
testb
pop
mov
fstl
fidivrs
stc
xchg
fwait
data16
add
sbb
mov
aaa
iret
and
xlat
movsb
push
arpl
jb
out
xchg
push
add
sub
mov
cmp
push
test
flds
jecxz
mov
in
out
jo
push
and
cmp
cwtl
sub
ret
dec
push
cmpsb
and
pop
or
xor
das
lcall
in
push
sbb
fsts
or
mov
lea
imul
sbb
ret
xchg
pop
fdivrs
sbb
mov
mov
int3
push
add
xor
into
ss
push
lea
mov
push
fs
pusha
dec
inc
lock
add
sub
mov
mov
leave
in
mov
ffree
dec
leave
rcll
mov
adcb
pavgb
stos
repnz
repnz
aas
daa
and
cmpsl
imul
popa
loopne
adc
sbb
push
sbb
shl
adc
xor
insl
jae
jmp
pusha
mov
iret
jae
cmp
cli
xlat
push
push
or
push
sbb
mov
outsl
dec
sub
loopne
in
mov
out
pop
out
mov
roll
xlat
push
nop
loope
cmp
rep
test
dec
xor
push
xchg
pop
mov
idivl
add
mov
fsubrl
sub
jle
mov
inc
cwtl
lock
push
jp
or
aam
mov
cli
inc
pcmpgtw
mov
iret
fimull
es
stos
xchg
ret
fiaddl
mov
inc
int3
pop
cmp
cs
mov
arpl
mov
jmp
icebp
xor
insl
ficompl
adc
jae
sub
test
scas
out
movsl
mov
fsubr
in
cwtl
sub
dec
aam
inc
push
mov
adc
sub
ss
stc
and
xchg
fwait
jo
jp
xchg
inc
aas
adc
cmc
fisttpl
inc
push
loop
cli
mov
sbb
bound
sub
pusha
xor
inc
jge
imul
fstps
xor
mov
dec
fidivrl
fwait
jnp
pusha
sar
and
in
imul
mov
dec
fmulp
xchg
out
ds
cmp
push
mov
fs
xlat
in
lock
adc
adcb
pop
addr16
xor
or
out
imul
add
dec
dec
adc
ja
mov
mov
sub
fimull
out
inc
xchg
mov
imul
push
add
arpl
cmc
sbb
call
pop
add
cmpsb
cli
cmp
aaa
fisubl
adc
shr
mov
insl
pop
mov
loopne
dec
pop
cmp
and
movsb
sarl
adc
adc
fsts
mov
test
pop
xchg
andl
mov
push
neg
lahf
in
push
xor
jmp
lcall
int3
xchg
mov
sbb
rol
mov
jb
inc
inc
les
leave
lds
add
loop
mov
addb
jg
push
or
dec
pop
cmp
ss
push
mov
adcl
pop
lea
rorb
mov
push
ficompl
sbb
sahf
nop
loopne
and
imul
xchg
adc
andl
iret
adc
clc
aaa
je
and
addr16
or
xor
ljmp
mov
nop
ret
cs
inc
test
repnz
add
lahf
or
movsb
loopne
jae
dec
loopne
add
aas
in
and
jbe
add
outsl
movl
aaa
or
in
mov
je
pusha
iret
cld
sbb
les
mov
push
push
xor
and
pop
cmp
cs
aam
adc
int3
test
mov
mov
mov
sbb
mov
stos
and
nop/reserved
push
and
in
fsubrs
lods
pushf
std
mov
pop
cmc
inc
daa
mov
pop
scas
mov
sti
adc
jns
xor
outsb
popf
mov
icebp
jg
dec
cmp
in
mov
ret
sbb
cmp
sbb
cmpsb
or
nop
pop
sbb
inc
mov
xchg
push
or
adc
mov
je
movsb
imul
push
xor
push
pop
jns
dec
cmp
addr16
push
jb
mov
sti
pop
lret
or
sub
jns
testb
std
out
cmp
xchg
leave
in
nop
adc
push
das
mov
push
ds
cmp
xchg
add
adc
movsb
jae
dec
jp
xchg
pop
cmpsb
xor
stos
inc
mov
std
divb
movsb
inc
aam
movl
sahf
adc
push
cmp
push
adc
sbb
fmull
xor
jne
aaa
push
jle
mov
shlb
mov
test
in
push
js
xchg
call
ds
inc
dec
sbb
xchg
out
push
mov
sub
es
negb
and
test
ficoms
leave
jp
hlt
sbb
sahf
nop
rcr
aas
and
fmull
cmp
pop
rclb
or
test
loope
sbb
lods
roll
and
pop
push
add
mov
out
xor
push
xor
loop
std
test
xchg
scas
jecxz
mov
push
inc
mov
cmp
fdiv
leave
sbb
and
fwait
mov
fbld
and
test
lock
inc
add
out
mov
xor
dec
jb
aas
pop
outsb
add
add
mov
mov
and
mov
mov
js
xor
into
jo
push
mov
mov
dec
dec
mov
fsts
or
push
sbb
int
stos
js
jbe
mov
xchg
nop
mov
test
mov
cmp
xchg
or
or
pop
cwtl
jge
gs
add
adc
lcall
insb
mov
mov
outsb
pusha
jle
int
notl
movsb
jbe
cmpsb
imul
cmp
cmp
xchg
mov
dec
cmpsl
mov
js
add
mov
and
jnp
push
push
pop
data16
ljmp
cmp
push
stos
shll
pop
mov
mov
push
cmpsl
jg
leave
icebp
push
pop
mov
xor
cmp
repz
mov
inc
mov
aaa
inc
push
cltd
mov
fisttpl
xor
pop
push
dec
or
mov
xchg
imul
test
xchg
sbb
mov
mov
data16
js
sub
out
sub
push
xchg
xchg
mov
or
add
pop
sbb
push
adc
xor
aaa
sub
push
inc
mov
dec
sahf
pop
mov
xor
and
arpl
in
rcrb
lds
xor
push
jnp
cwtl
push
shlb
and
test
and
dec
loop
mov
aad
out
xchg
pop
pop
outsl
popf
inc
jge
and
pop
sub
push
outsl
sbb
pop
pop
xor
fisttpl
push
lea
cmc
pop
pop
dec
out
stc
pop
inc
mov
jae
and
pop
push
push
jns
clc
mov
add
fwait
popl
pop
xchg
lcall
lret
cs
mov
pop
out
outsl
jl
jl
dec
push
pushf
ss
mov
div
leave
sti
jnp
or
pop
push
mov
test
sub
test
jnp
adc
test
movsl
fidivrl
add
popa
mov
jecxz
jo
dec
ficompl
lods
test
les
out
loope
loopne
addl
scas
pusha
xchg
dec
insb
cld
mov
loop
test
xchg
jge
out
dec
add
lds
pop
sub
pop
std
lcall
dec
insb
sub
sbb
aad
stc
push
add
sahf
push
test
int3
icebp
loop
add
aas
lret
push
hlt
inc
jne
push
mov
imulb
aas
cmp
data16
add
outsw
or
test
mulb
cmp
sahf
xor
je
mov
jg
sub
or
addb
mov
xchg
cld
shll
xchg
jle
sahf
or
inc
inc
sti
les
aas
push
add
pop
sub
xchg
loope
iret
jb
lock
movsl
or
cmp
pop
shr
lcall
mov
sub
in
in
pop
and
cli
imul
cmpb
ljmp
sbb
or
cmp
pop
repnz
sbb
lret
sub
lcall
push
pop
fsts
sbb
push
jecxz
adcl
scas
daa
mov
jb
pusha
fstps
pop
ss
or
sbb
mov
in
jl
or
mov
and
outsb
fimuls
stos
cmpsb
xorb
ds
and
mov
sbb
dec
outsb
shlb
movb
jecxz
sbb
inc
push
test
je
outsb
int3
imul
sub
arpl
sub
cmc
pop
mov
testl
subb
mov
mov
add
mov
dec
inc
push
pushf
ficomps
sahf
adc
mov
aas
jmp
push
dec
push
mov
stos
cmp
sub
sbb
mov
sub
xor
dec
pushf
and
aaa
std
pop
aad
sub
ds
sti
adc
pop
xor
dec
sub
xchg
movl
rorb
lods
adc
cmp
jae
std
mov
sbb
sbb
push
rclb
push
loope
xor
push
cs
scas
stos
push
pusha
aas
sti
adc
sbb
jno
ds
pop
out
into
push
inc
mov
inc
push
hlt
sub
cmp
flds
xor
in
mov
dec
push
mov
and
cmp
mov
int
sahf
pop
aas
push
scas
out
mov
test
arpl
clc
icebp
sub
xor
adcl
stos
mov
push
out
sub
je
pop
mov
iret
jnp
movsb
enter
xchg
sbb
daa
fnstsw
mov
and
or
cmp
cmp
xor
sbb
or
mov
xor
aas
inc
iret
xor
sub
mov
xor
cs
out
loop
mov
jecxz
cmp
jmp
cld
push
ljmp
lcall
jp
mov
cmp
mov
aam
mov
push
and
mov
mov
adc
and
dec
sti
jo
jge
push
mov
loopne
pop
cmpsl
lret
dec
push
into
sub
jp
cmp
sub
or
jl
notb
cmpsl
out
pop
cmp
jno
and
js
inc
push
lods
imul
sahf
or
add
and
inc
nop
sti
lds
fistl
mov
add
addr16
das
sbbl
insl
inc
pop
mov
imul
mov
jo
sub
jecxz
sub
or
xchg
enter
and
cmc
into
push
or
jge
xor
clc
in
or
push
inc
enter
xor
xchg
shlb
and
add
push
push
jae
cwtl
jo
mov
popf
sub
notb
pop
shrb
jne
cli
xchg
js
mov
pop
js
popa
mov
stc
xchg
ljmp
shll
jno
push
ljmp
dec
sbb
or
pusha
aaa
mov
adc
or
gs
jecxz
es
push
lret
dec
movsb
inc
out
int
fmull
in
lds
cmc
in
inc
pop
jne
mov
jl
jnp
gs
jle
cmp
or
addb
xor
dec
xchg
ljmp
xor
popf
out
sub
fsubrs
das
icebp
dec
xchg
stos
bound
enter
ret
mov
aaa
insl
pushf
ja
test
daa
movsl
shll
xchg
dec
push
hlt
arpl
rorl
mov
inc
repnz
mov
sbb
sub
cltd
stos
sbb
dec
jmp
int
pusha
mov
and
inc
or
mov
out
xchg
mov
push
adc
xor
sub
push
outsl
push
dec
in
pushf
push
aad
mov
sub
push
xchg
fdivrp
cmp
testb
movq
frstor
inc
add
cmpsl
inc
repnz
mov
jmp
push
out
fisttps
jecxz
mov
cmpsb
adc
int3
mov
dec
pop
xchg
cmp
adc
sarb
lahf
cmpsb
sub
add
sub
sbb
loope
cs
xor
clc
in
fcomps
aad
mov
gs
ljmp
mov
dec
inc
setp
popa
hlt
loopne
xchg
push
or
pushf
mov
ljmp
mov
popf
dec
dec
iret
cmp
dec
enter
enter
inc
imul
jo
data16
or
mov
jns
mov
repnz
shr
inc
mov
mov
lcall
mov
out
push
aaa
mov
mov
mov
mov
add
and
jns
ds
into
sbb
lods
cmp
sbb
push
lds
ljmp
insl
pop
add
scas
mov
mov
mov
imul
pushf
paddd
inc
fs
xor
cmp
outsl
lods
movsb
test
call
pop
add
loope
mov
test
mov
mov
adc
leave
pop
xchg
push
inc
pusha
aaa
lock
stc
lods
shrl
push
push
popa
cmp
sbb
stos
icebp
in
xor
sub
test
idivl
cmp
icebp
stos
mov
adc
dec
cmp
movsl
add
inc
pop
and
sub
sbb
mov
jge
pop
lds
pop
sub
and
dec
lds
rolb
mov
mov
sbb
jbe
loopne
gs
aaa
mov
leave
movsl
sbb
add
inc
jecxz
adc
inc
jnp
sub
add
xchg
bound
mov
mov
outsl
addr16
or
xor
xchg
add
lcall
shl
xor
mov
add
lock
out
ret
dec
ss
jg
test
and
in
test
out
jb
inc
and
adc
aam
outsb
movsl
jo
sub
sbb
jno
popa
mulb
sub
test
or
inc
mov
push
popa
push
ret
addr16
xchg
movsb
xor
in
and
scas
loop
movsb
bound
push
sbb
repnz
sbb
add
jge
mov
jne
out
outsb
jmp
nop
cmpsl
arpl
call
xlat
movsb
popa
jnp
mov
test
xor
pop
and
out
xor
mov
xchg
mov
adc
frstor
sub
mov
int3
adc
ja
les
das
cmp
cwtl
out
inc
fildll
jle
cmc
and
xchg
push
aas
mov
and
lea
xor
pushf
out
pop
xchg
testb
mov
xor
sub
loop
sbb
pop
push
aas
adc
movsl
fcomp
inc
ret
jp
adc
push
sbb
out
inc
js
loop
adcl
dec
leave
push
jne
dec
jne
xchg
mov
add
mov
sbb
fstpl
cmp
fs
inc
outsb
xor
iret
stos
outsb
jge
movsl
and
je
inc
xchg
and
mov
and
pop
fstl
lret
xchg
cmp
fdivrl
addr16
test
cmpsl
lds
pushf
cmp
pop
ljmp
jnp
sbb
test
xor
aaa
je
jl
push
cmp
add
add
mov
mov
dec
mov
cltd
or
inc
mov
and
cmp
xor
fnsave
loopne
out
lret
enter
cmp
adc
in
and
mov
call
repz
xchg
sbb
test
std
cmp
push
loope
pusha
leave
call
cmp
outsb
outsl
jbe
sbb
outsb
mov
fwait
jnp
adc
or
pop
negl
fiadds
subb
test
mov
fsubs
rorb
jns
sub
pop
dec
rorb
jl
xchg
cli
loope
or
fildl
pop
mov
jp
loope
mov
mov
jb,pn
push
out
and
jae
sbbl
adc
outsb
mov
pop
mov
and
push
dec
pushf
lcall
mov
cmp
add
scas
mov
mov
dec
fsubp
fsts
testb
cmp
cmp
sbbb
mov
mov
subb
in
stos
push
cmp
jg
sub
in
and
dec
sbb
xchg
mov
jp
push
dec
sub
sbb
or
adc
or
push
xor
sub
sub
sbb
push
jno
iret
pushf
adc
inc
or
adc
in
cmpsb
mov
data16
adc
mov
jnp
push
cli
out
push
inc
mov
mov
xlat
fs
dec
cmpsl
nop
xchg
pusha
les
xchg
jne
xchg
repnz
pushf
or
cmp
cmp
imul
add
arpl
sahf
iret
dec
mov
inc
push
mov
aas
test
sbb
mov
loop
fcomps
testl
or
add
in
xchg
pushf
sarb
adc
test
pop
xchg
cmp
and
inc
fdivs
sbb
and
ja
andl
mov
pop
rolb
mov
add
push
icebp
adc
fistps
pop
popa
mov
mov
aad
and
jge
push
mov
xchg
pop
call
push
enter
mov
std
mov
jp
sbb
pusha
ret
mov
outsl
sarb
call
jo
movsl
subl
push
xlat
pop
push
inc
mov
inc
ss
inc
jp
jp
and
pop
repz
mov
js
outsb
cmc
push
xchg
mov
cmovs
sub
cmc
daa
sarb
and
lahf
in
pop
push
xchg
daa
sub
jbe
cmp
js
ljmp
in
sbb
xor
lret
test
or
aam
fcmovnbe
jle
dec
cmp
add
test
mov
or
mov
imul
loope
aad
sub
adc
mov
leave
cmpsl
sbb
sbb
shr
sub
data16
mov
outsb
out
add
pop
sub
dec
add
mov
loop
lret
xlat
shrb
jno
inc
cmp
inc
inc
aad
cmc
shrl
inc
adcb
push
cmp
sub
shl
daa
cmp
mov
adc
pop
cmp
movsl
lret
mov
push
stos
adc
pop
dec
jg
push
jp
pop
jp
mov
cmp
mov
testl
push
sbb
ret
mov
jge
dec
int3
aaa
sarb
lret
push
xchg
insb
hlt
movl
dec
mov
roll
and
xchg
shlb
sti
cmp
mov
call
das
nop
imul
push
xchg
push
cmc
add
rcll
lods
cmp
jno
push
mov
pop
mov
in
stc
dec
jg
sbb
jmp
decb
sub
mov
push
pop
xor
inc
mov
mov
mov
in
mov
inc
mov
sbb
out
imul
lods
push
leave
inc
add
adc
daa
addb
inc
fldt
addr16
xor
out
pop
iret
test
rorb
mov
repnz
cs
aam
inc
pop
popa
dec
fimull
cmc
stos
sbb
or
mov
dec
add
pop
aas
shlb
mov
imul
sub
jmp
or
pop
int
or
jg
std
cmp
out
xorb
inc
int
add
push
sub
pop
int3
add
fstpt
mov
in
add
push
jg
iret
repz
cmc
jl
leave
movsl
pop
mov
mov
out
push
push
lcall
fistpl
out
mov
jb
loope
fiaddl
cmp
out
aas
enter
cltd
xchg
addr16
insb
out
pop
popf
jl
jb
sub
stos
jmp
popf
and
pop
andb
loop
push
mov
add
xchg
testb
push
rcr
into
push
out
sti
mov
push
xlat
jl
cltd
push
nop
lcall
in
sahf
xchg
mov
mov
inc
jo
dec
sub
jecxz
xchg
jmp
and
sub
int
aad
in
xchg
repz
inc
jmp
test
jmp
jbe
sub
jbe
ds
dec
push
jae
sahf
flds
stos
ret
add
xchg
je
mov
jg
pop
push
pop
adc
sbb
cli
mov
nop
xor
or
mov
out
mov
mov
and
pop
test
cmpsl
dec
or
rorl
ja
mov
arpl
dec
int3
inc
inc
lea
pop
in
loop
jecxz
imul
pushf
aad
dec
mov
xor
push
inc
adc
ror
cmpsl
cs
jae
scas
testb
aad
outsb
mov
into
dec
cld
lds
pop
push
les
test
or
movsl
incb
and
loopne
in
sbb
ret
mov
dec
popa
mov
out
cwtl
fidivs
test
stos
xor
scas
mov
inc
mov
es
fnclex
jge
sbb
jnp
add
sub
fldcw
cmp
pop
sbb
jle
inc
addr16
arpl
add
js
arpl
add
scas
test
xchg
movl
adc
test
pop
mov
stc
jb
mov
jle
jbe
test
push
xor
and
cmp
jle
or
jge
lret
mov
jle
lret
jl
std
and
sub
xchg
or
jb
out
push
xchg
popf
stos
add
das
sub
test
divb
imul
and
int3
imul
cmp
cs
cltd
movsb
rol
mov
or
add
loop
bound
sbb
push
loop
lahf
jb
daa
xlat
mov
out
dec
inc
or
aad
mov
test
ss
jle
xor
mov
insb
sub
adc
out
out
jns
movsb
fwait
shl
sti
jge
inc
dec
jg
xchg
xor
lods
scas
and
test
dec
mov
decl
jl
inc
adc
inc
cmp
inc
jne
test
sbb
cwtl
adc
movsl
cwtl
sbb
push
sbb
sub
and
adc
adc
enter
fcoms
fsts
cld
and
sub
cmp
std
add
add
mov
cmpb
cs
sbb
ss
les
sub
push
test
mov
dec
aad
add
xchg
aad
xor
fbld
shl
aad
jns
ja
insb
popa
jns
or
mov
enter
repnz
lods
jecxz
push
sub
fmull
out
fcompl
dec
pop
imul
inc
ds
ficompl
hlt
pop
dec
xor
rolb
in
jg
aam
dec
adc
pop
push
call
int
in
inc
aas
mov
xor
fldt
sbb
xlat
and
gs
out
lret
outsl
jmp
jmp
add
stos
xchg
xchg
outsl
mov
xchg
testb
and
jns
adc
sub
idivb
cmp
adc
inc
xchg
lcall
push
rcr
inc
pusha
movsb
sti
daa
movsl
xor
xor
orb
int3
ljmp
je
jp
xor
scas
xorl
mov
pop
push
dec
adc
pop
movsb
push
mov
cmp
inc
push
dec
js
xor
push
mov
aad
dec
iret
pusha
pop
lcall
mov
mov
sbb
mov
jbe
das
je
int3
movsl
mov
add
pop
movb
scas
xchg
sbb
adc
mov
jbe
push
pop
adc
mov
jmp
mov
mov
cmp
jl
jo
fstpl
push
or
test
lds
repz
fisubl
pop
add
cs
inc
or
clc
mov
and
rolb
dec
and
int3
and
mov
shrb
jl
dec
test
rorl
jbe
xchg
mov
fisubs
cwtl
add
mov
in
add
stc
xor
shll
iret
sub
jmp
add
jge
dec
lock
dec
dec
mov
sti
insl
shl
jecxz
leave
pop
jo
std
insb
mov
push
sub
jbe
in
jge
sub
stos
aad
jbe
fninit
jp
mov
icebp
cmpsb
mov
dec
fbstp
add
sti
xchg
push
in
mov
rolb
mov
leave
xchg
fidivrl
out
divl
xchg
test
mov
out
xchg
bswap
shrb
or
xchg
dec
cmp
mov
cmp
sub
fldenv
movsl
dec
les
inc
mov
iret
arpl
fimuls
ret
xchg
fs
in
cmpsb
aam
jge
or
into
dec
leave
mov
inc
mov
cmc
mov
outsl
inc
cmp
or
call
push
dec
lcall
loopne
wbinvd
dec
andb
ret
dec
mov
movsl
xchg
adc
adc
insb
or
movsb
jl
int3
dec
jae
cld
rcrb
mov
sbb
shlb
fsubp
stos
jmp
enter
pop
scas
negb
daa
cmp
xlat
jle
pop
push
jle
fidivrl
cli
in
jbe
xchg
gs
sbb
sub
fisubs
pop
pusha
cmp
in
dec
jne
jmp
jle
mov
shlb
adc
mov
cmp
in
iret
movsb
sbb
aas
or
insl
in
ja
pop
pop
add
daa
aaa
dec
cmpsb
pushf
mov
rorb
mov
and
cmc
hlt
dec
pusha
orl
mov
mov
scas
addl
shrb
icebp
cmpsb
aad
lahf
mov
or
test
aas
sbb
movsb
scas
push
add
cmp
lds
ss
mov
jmp
push
jne
ret
sti
ret
stos
iret
push
insl
push
push
in
popf
mov
or
add
push
fmul
cmp
inc
inc
push
sbb
cmp
in
lds
movsl
hlt
push
fbstp
lods
xchg
jae
add
xchg
xchg
xlat
sub
jg
push
imul
cmp
sarl
hlt
mov
adc
daa
fnstsw
dec
sarl
mov
pop
push
cld
cmp
repz
pop
pop
xchg
pop
jg
mov
push
ds
shlb
mov
insl
and
pop
imul
sbb
cltd
pop
add
pop
cs
pop
pusha
mov
inc
jmp
enter
out
mov
scas
cmp
push
fcomip
push
and
icebp
test
aad
lea
outsb
aad
mov
lret
sahf
xor
and
shl
int
popa
sbb
cmpsl
push
loop
dec
mov
mov
les
aaa
mov
mov
add
xor
mov
or
mov
mov
cmp
dec
notb
sahf
jp
shl
sub
and
push
in
add
in
call
jnp
xchg
into
and
jns
push
mov
cmc
sbb
jb
add
scas
adc
test
sbb
ret
fstp
adc
and
mov
mov
push
sub
dec
mov
and
pop
ss
push
or
xor
xchg
int
mov
sub
and
stos
insb
xchg
cli
fnsave
cmpsl
fistpll
pop
fildl
lret
pop
cmp
daa
int
jmp
pop
dec
add
jbe
fisttpll
in
jb
subb
orb
subl
mov
xchg
jle
xchg
sahf
inc
cli
mov
dec
inc
sbb
push
rcrl
notl
jge
mov
adc
xchg
push
xorl
add
push
adc
ds
xchg
fcmovne
add
icebp
std
mov
xor
ret
cltd
or
xor
jp
pushf
push
inc
fsqrt
hlt
ss
mov
xor
pusha
addl
xor
mov
and
insb
enter
stos
sbb
into
jmp
jle
push
mov
sahf
xchg
sbb
pop
mov
movzbl
or
mov
call
bound
lea
pop
clc
arpl
cwtl
dec
jle
push
jne
inc
testl
test
xor
lds
sbb
jns
jle
mov
int
out
xchg
not
jne
rcrl
jnp
or
inc
xchg
icebp
mov
repnz
sbb
inc
adc
push
mov
dec
lcall
lahf
mov
outsb
ljmp
cmp
aam
push
dec
xor
hlt
xorl
test
xchg
into
or
dec
sti
jecxz
outsw
pop
cmpl
dec
lahf
add
clc
pop
lret
rorb
es
fdiv
movsl
fdivl
pop
fidivrs
jae
jle
xor
rolb
cmp
mov
add
popa
push
cmp
stc
popf
and
aad
inc
addr16
xchg
mov
aas
and
scas
je
xchg
cli
and
mov
cmp
sub
test
mov
imul
cmp
out
sub
sub
mov
movsb
pop
stc
dec
or
clc
xlat
cmp
aas
stos
in
lods
into
aaa
std
cmpsl
int
xchg
jmp
cli
jle
inc
jbe
pop
nop
mov
loop
cli
pop
mov
mov
push
and
or
mov
push
mov
pop
and
lods
pop
pop
in
pushf
das
push
scas
mov
push
xchg
subl
xchg
and
mov
stos
shr
clc
fildll
arpl
out
clc
jo
imul
cmc
pop
xlat
lea
in
loopne
fs
lock
out
int
jp
push
bound
dec
cmp
pushf
out
push
in
iret
jle
pusha
pslld
repnz
push
incb
mov
lea
xor
insb
jo
repz
lahf
js
jo
push
jge
icebp
inc
nop
int3
in
das
mov
js
jle
add
or
cmpsb
xor
xchg
lock
pmaxub
jge
cs
inc
or
mov
movsb
popa
addr16
daa
lcall
add
and
inc
fimull
out
jg
lock
bound
dec
leave
and
rcl
lcall
stc
sbb
jmp
add
std
shl
int3
mov
and
jg
ret
pop
cmp
test
push
leave
icebp
aad
and
dec
mov
es
dec
push
mov
sahf
test
add
xchg
cltd
imul
pop
cmpl
cs
out
pop
sbb
xor
aad
mov
jl
jbe
lahf
jae
nop
or
leave
test
or
cld
jb
adc
das
into
jae
out
cmpsl
insl
dec
es
out
out
sub
push
clc
mov
mull
mov
mov
push
insb
ret
xor
pop
in
xchg
add
cmp
js
push
fstps
xor
mov
scas
sbbl
jge
pop
push
pop
je
jle
movsl
jbe
pop
dec
jge
ja
sahf
push
pop
mov
cvtpi2ps
dec
rolb
cmp
pusha
test
mov
mov
cld
fidivs
pop
mov
xchg
jmp
lcall
fbstp
das
jle
add
call
sub
adc
iret
test
aaa
inc
mov
test
add
and
push
pusha
lock
push
pop
pusha
notl
test
roll
inc
xlat
xchg
jno
cld
cmpsl
dec
xor
push
mov
sbb
out
pop
mov
jecxz
adc
and
imul
pop
mov
orb
mov
rorb
push
sahf
aas
enter
clc
ds
rorb
sub
xlat
std
iret
lret
insb
test
pop
in
push
sbb
pushf
sbb
jmp
push
push
push
adc
das
cmp
es
lret
mov
mov
inc
insl
add
xchg
mov
lock
and
loopne
cwtl
fsubrl
dec
aas
gs
addr16
cmp
dec
imul
clc
lds
add
cmp
mov
test
push
push
mov
lods
cmpl
xchg
lret
xchg
sbb
push
mov
mov
cmc
adc
mov
repz
push
mov
in
sub
scas
es
and
and
add
repz
jmp
push
xchg
das
data16
out
dec
sub
fucom
dec
ss
ja
mov
xor
jae
mov
inc
mov
out
jp
inc
lcall
movsl
lea
dec
adc
sarb
dec
and
mov
xor
mov
mov
cmp
loope
das
rcrb
cmp
fcmove
dec
adc
div
xor
xor
movsl
lcall
das
movsb
adc
jno
cmp
aas
getsec
and
hlt
aas
xor
mov
xchg
push
inc
nop
stc
into
fwait
in
mov
daa
dec
sahf
pop
dec
pop
and
push
fmuls
mov
daa
push
out
shrb
mov
shll
jl
sub
xor
rcl
sub
pop
add
stos
mov
adc
sbb
cli
push
repz
out
fwait
inc
mov
sbb
jbe
xchg
sti
movsb
outsb
shl
loope
add
sub
ds
mov
add
mov
mov
inc
lret
notl
jo
mov
inc
and
xchg
shrb
or
cmpsl
jp
testb
dec
xlat
addr16
mov
and
imul
ror
jle
scas
jae
sbb
mov
mov
xor
xor
icebp
or
pop
es
jo
add
cltd
lds
jb
in
fwait
dec
jmp
mov
xchg
stos
dec
sbb
jmp
pop
adc
push
idivl
pop
clc
mov
sub
ret
lcall
cmp
or
xlat
sub
loopne
xor
ss
sub
iret
cmp
ja
jno
es
dec
mov
mov
xor
or
sti
cmpsl
daa
or
jnp
xchg
movsl
fnstcw
push
sbb
dec
add
pop
lret
xor
hlt
in
lahf
push
inc
andl
jl
stos
out
fnstcw
imul
ljmp
add
xor
lods
sub
inc
pusha
in
jge
inc
dec
ss
add
cs
and
pmaxub
adc
adc
pop
leave
jnp
filds
jne
inc
scas
test
dec
jb
js
test
dec
pop
push
xor
les
test
lods
sahf
dec
xorb
repnz
call
mov
mov
cmpsl
jns
mov
adc
push
ljmp
in
push
sbb
cmp
aam
sub
enter
data16
push
push
leave
or
adc
mov
jbe
clc
mov
sbb
ret
nop
add
mov
fimull
repz
and
jno
loopne
jmp
fnsetpm(287
adc
xor
cmpb
adc
shl
inc
xor
jns
mov
cmc
mov
inc
lcall
rcrl
test
cmpsb
test
inc
push
xchg
inc
mov
add
or
dec
pop
cmp
nop
and
cld
mov
adc
and
ds
mov
cmovno
jae
sbb
xchg
sub
jnp
jmp
clc
inc
mov
and
popa
inc
xchg
dec
aad
jg
lret
fidivrs
sbb
int3
mov
push
lret
insb
mov
mov
pop
aaa
nop
fcmovnu
add
dec
jmp
add
out
in
sbbl
fdivrs
loopne
cmpl
in
in
pusha
cmp
scas
add
std
popf
es
or
mov
fsubr
sarb
js
rcr
jle
xchg
jb
nop
xchg
out
jae
mov
ret
ljmp
and
rcr
or
icebp
xor
test
out
add
test
push
cmp
loope
xor
mov
xchg
mov
sub
lods
xlat
inc
andb
scas
dec
sahf
xchg
int3
jno
hlt
fwait
xor
or
cmp
xchg
fs
inc
leave
out
sub
pushf
push
test
bound
mov
out
mov
pop
and
clc
push
negb
and
out
xor
dec
outsl
out
xor
lods
xchg
loope
fisttpll
cltd
ret
ret
sub
and
ss
mov
ljmp
mov
sbb
mov
dec
mov
mov
and
lea
sarl
or
inc
inc
mov
add
and
repz
mov
sub
shr
xchg
and
rol
stos
sub
add
and
repz
mov
push
jl
in
mov
xor
pop
inc
imulb
insb
scas
inc
mov
xor
jno
cmc
imul
mov
cmp
push
cmpsl
hlt
cld
or
jno
out
inc
aaa
jnp
pusha
inc
lret
aam
loope
push
or
cltd
cmp
adc
add
fwait
jno
pop
dec
sar
pop
ss
shrl
pop
insl
in
test
cmp
lahf
push
push
popf
out
sarl
pop
cmp
pop
mov
fucomp
test
push
sub
push
cmp
mov
ss
sbb
sub
mov
les
loopne
out
movsb
dec
pop
sbb
lock
pop
inc
loopne
xlat
pusha
dec
jns
inc
icebp
push
aaa
dec
data16
repnz
jmp
test
push
out
insl
xlat
mov
sbb
fdivp
and
and
lret
shl
push
cmpb
mov
jp
cmpsb
cld
cld
cltd
leave
xchg
sbb
mov
xor
bswap
mov
jbe
mov
push
cmpsb
jb
arpl
jecxz
jp
push
jno
mov
or
xchg
xchg
lret
push
lcall
cmpsb
xchg
sahf
es
mov
popa
movsl
xor
jle
cwtl
or
cmp
and
cmp
sbb
or
fisttps
faddl
jno
loop
movsl
jl
adc
das
xchg
pusha
in
push
mov
je
sub
sub
mov
mov
xchg
shlb
inc
cmp
inc
aaa
and
int
repnz
mov
dec
cmp
in
xchg
test
lret
pop
jo
pop
and
cli
lcall
xchg
cmpsl
fidivl
mov
mov
add
loop
shr
mov
sub
push
fadds
lods
push
rolb
adc
mov
add
lds
out
mov
mov
sbbb
gs
mov
add
je
jo
jnp
jo
mov
cwtl
in
jge
or
or
lahf
or
popf
jle
mov
mov
xchg
fimull
xchg
ja
cltd
mov
punpckhdq
push
xchg
pop
jl
rcr
test
sahf
rcrb
inc
mov
add
sub
shrl
or
inc
add
or
cmp
repz
in
popa
sbb
sbb
jecxz
cmp
lods
inc
mov
add
movsb
and
push
push
sti
sti
cmpsl
subb
gs
jne
pop
aas
mov
inc
add
sbb
xchg
or
mov
inc
pop
mov
jge
aaa
mov
mov
mov
pop
push
jp
cmp
fildll
adc
pusha
lret
jle
les
mov
ficoms
jmp
push
lret
gs
fldenv
arpl
and
loopne
sti
cmpl
and
orl
int3
sub
test
lahf
fs
into
sarb
push
js
sar
aas
inc
inc
add
js
or
test
outsb
and
lret
movsl
divl
into
jl
adc
xor
fidivrs
fildll
sarb
add
bound
and
imul
inc
pop
or
jecxz
stos
mov
jp
clc
mov
cli
pop
in
lods
and
sub
mov
push
adc
push
movsl
movsb
add
push
or
mov
lcall
repnz
cmp
int3
mov
mov
or
jmp
pop
mov
mov
repnz
into
pop
jle
fidivrs
daa
out
pop
xor
and
jns
push
dec
pop
push
gs
clc
in
insb
lret
xchg
xchg
lods
fisubrl
pop
jbe
and
ret
sub
mov
fwait
pop
and
jbe
fidivrl
mov
jne
testb
dec
loopne
lret
jae
sbb
ljmp
pop
mov
scas
fidivrs
xor
or
pop
adc
mov
in
out
aad
jl
mov
jns
jp
xchg
call
gs
cmp
jo
out
fwait
aas
das
aaa
test
sbb
inc
bound
popf
dec
xchg
mov
inc
or
call
or
mov
dec
stos
pop
cmc
insl
aam
int
inc
jne
inc
loop
push
stos
add
lret
push
xchg
sbb
outsl
and
add
mov
in
inc
test
test
xchg
mov
dec
pop
lock
leave
addl
shrb
ss
sub
push
adc
mov
sbb
dec
mov
rolb
das
add
pop
and
push
into
pop
aam
jae
outsl
push
cld
movsl
inc
and
mov
in
xchg
cli
stos
sub
lock
push
in
mov
adc
icebp
adc
ret
js
inc
jmp
push
and
iret
and
push
inc
loopne
psadbw
xor
es
pop
mov
inc
cs
cld
fnsave
xlat
mov
shrb
add
lea
mov
cltd
in
ret
jge
push
add
inc
cmp
sub
jp
fistpl
out
lds
xor
addl
xlat
push
sbb
mov
adc
jge
push
repz
or
xchg
shl
mov
dec
mov
push
and
mov
xor
icebp
pushf
xchg
imul
push
mov
out
outsb
outsl
repnz
cmp
pop
cs
lods
jp
xchg
divb
lret
ljmp
js
jo,pn
adc
outsb
ja
fsubr
in
in
mov
mov
cs
push
push
aaa
test
mov
aam
push
xchg
or
inc
int
mov
lock
addr16
sub
sub
gs
movsl
add
push
or
xchg
cmp
out
add
jmp
fldcw
or
fbld
jae
sub
pop
aad
sub
dec
ret
xchg
xor
repz
mov
cs
cwtl
xchg
cmp
fistpll
mov
mov
repnz
roll
mov
ret
testb
and
jp
dec
pop
ds
pop
push
pusha
dec
jl
ljmp
xchg
xor
cmp
movsb
push
mov
push
xlat
cs
arpl
pushf
push
adc
and
pop
stc
push
xlat
mov
jmp
roll
or
rcr
inc
test
gs
std
push
and
add
out
dec
mov
icebp
test
loope
mov
or
mov
xor
dec
andb
cmc
insb
mov
sub
pop
dec
sbb
movsb
fcoml
push
jns
lock
lock
stos
lcall
dec
sub
xchg
mov
or
fmull
pop
mov
mov
pop
sbb
mov
mov
loopne
sti
sub
dec
lods
mov
ds
jbe
cmp
jns
pop
rolb
push
push
xchg
jb
sbb
hlt
cmp
test
mov
arpl
jnp
dec
jno
mov
sub
loop
sar
pusha
fisubrs
aaa
or
pop
or
mov
dec
dec
fs
xlat
nop
out
sbb
and
gs
pop
pushf
mov
inc
aad
pop
push
movsb
cs
out
adc
push
dec
lahf
jb
lcall
dec
xor
stos
xor
inc
push
shlb
jge
push
cmpl
cli
sub
lret
ljmp
sbbl
and
adc
or
mov
cmp
adc
adc
xchg
sub
sbb
test
pop
daa
sbb
pop
in
mov
jmp
repz
lret
int3
andb
jecxz
jmp
ret
push
cmp
into
clc
mov
sbb
sbb
popf
dec
in
mov
jbe
subl
iret
push
push
insb
and
es
adc
sub
jno
inc
lcall
les
gs
cli
shlb
in
jg
jmp
xor
mov
xacquire
in
jns
ds
repz
mov
add
repz
jecxz
sbb
in
push
fdivrp
insl
rcll
xor
mov
push
cmp
cmp
mov
or
inc
dec
xchg
lock
int3
xchg
lds
rcrl
pop
call
lcall
adc
jo
div
gs
add
sbb
rcrb
mov
add
pop
hlt
inc
cmp
mov
leave
in
js
imul
in
dec
add
sbb
jmp
push
cmp
inc
lcall
and
imul
cmc
test
imul
dec
sbb
js
xor
nop
subb
mov
mov
pcmpgtw
pop
jne
ds
pusha
test
sbb
inc
push
sub
adc
cmp
js
xor
xor
lcall
sbb
cmp
mov
popf
loop
mov
int
xchg
flds
or
sarb
pop
fcomps
fildll
lret
fwait
jl
inc
and
ficoml
stos
bound
pop
mov
loope
pop
jb
sub
mov
mov
or
lods
imul
pop
sub
daa
inc
andl
ret
fs
sub
fisttpll
ret
inc
xchg
add
aas
jle
sbb
sub
fbld
cs
pop
stc
sbb
fstpt
das
loope
dec
rcl
xor
pand
xchg
lcall
scas
cwtl
jge
cs
out
sbb
mov
mov
pop
pop
jo
gs
or
lock
jae
or
stc
push
ret
cmpxchg
xchg
jmp
outsl
push
movsl
adc
or
add
bound
test
mov
or
movsl
xor
inc
idivb
jmp
xor
pop
jo
add
scas
xlat
jmp
shld
mov
sbb
pop
and
test
std
mov
je
and
mov
pop
mov
bound
leave
dec
push
mov
lea
mov
or
add
mov
lahf
loop
mov
push
jae
in
pop
mov
test
sub
cs
inc
ret
mov
faddp
adc
sbb
add
mov
movl
in
xchg
int3
shrb
lods
push
mov
dec
sub
jae
inc
stos
sarb
jecxz
and
lods
daa
popl
pop
loopne
mov
out
es
mov
push
adc
mov
cltd
loop
ja
xor
stos
mov
and
push
and
fcoms
test
jbe
cwtl
jne
mov
aam
inc
pushf
jp
push
fisttpll
mov
pop
movsl
mov
xchg
scas
mov
ljmp
sbb
or
lret
mov
loopne
push
or
xchg
xchg
push
push
fists
add
adc
mov
push
fcmove
test
or
cmp
mov
scas
call
xlat
scas
ss
cltd
add
xchg
scas
ljmp
sub
data16
icebp
ja
inc
mov
repz
fldt
gs
inc
dec
or
xor
cli
mov
lods
js
in
int
mov
test
sahf
mov
test
mov
pop
sbb
pop
shl
mov
scas
adc
rcrb
or
xor
out
fldl
lret
testb
adc
mov
push
sub
bnd
xor
sti
jo
jb
cmc
ret
mov
shrb
pop
scas
mov
mov
mov
cwtl
mov
push
sub
in
pusha
loope
xchg
and
mov
cmp
scas
leave
push
pop
ficomps
and
arpl
pop
push
xor
ds
out
add
addr16
cld
sbb
adc
inc
or
in
imul
fstl
push
loopne
pop
fs
test
cmp
pushf
mov
lock
lea
leave
insb
add
push
psrld
hlt
push
mov
mov
and
mov
loopne
leave
jl
dec
xchg
sub
xchg
inc
pop
ja
aam
dec
shlb
mov
lcall
xor
ficompl
sbb
jl
inc
lock
mov
mov
and
mov
movsb
imull
lea
or
adcb
mov
mov
xor
outsb
cmpb
clc
xchg
cld
enter
mov
sbb
rol
add
mov
add
sub
sti
stos
and
add
or
and
pusha
aam
ljmp
loope
gs
mov
scas
sbb
push
imul
jecxz
lods
into
push
in
insl
ds
rolb
sahf
xchg
xchg
or
aam
xchg
scas
daa
sub
sbb
jle
adc
jmp
xchg
cmp
pop
mov
mov
push
jb
jecxz
cld
into
push
cmp
adc
xchg
push
add
rcrl
in
mov
add
jecxz
aad
inc
mov
dec
xor
lds
xlat
push
cwtl
lds
fsts
pop
fcomip
fwait
add
push
adc
in
sub
or
sbb
xor
jb
rolb
xor
push
hlt
mov
xchg
jnp
decl
cli
add
sub
push
xor
adc
icebp
fstp
loopne
or
imul
sbb
and
cmp
push
addr16
or
xchg
push
xchg
mov
cmpsb
mov
test
cmp
call
add
test
mov
cs
push
xchg
inc
imul
sarb
mov
sub
dec
fcoms
cld
pop
pop
aad
movsb
cmp
out
jae
jge
in
out
ret
daa
mov
mov
pop
jg
mov
lahf
or
mov
out
inc
push
inc
mov
push
data16
push
test
addr16
push
test
xor
cmp
lods
aam
inc
or
xchg
mov
push
sub
lods
dec
or
in
mov
fcompl
stos
fnstsw
in
cmp
sbb
loopne
cmp
leave
rclb
in
mov
je
enter
mov
out
ja
into
je
rcl
std
dec
push
int
xchg
push
sub
dec
cwtl
adc
xor
mov
mov
int3
add
out
mov
arpl
sahf
add
add
and
rorb
mov
movsb
ret
adc
out
and
scas
aam
movsl
inc
add
pop
xchg
lds
aad
inc
fmulp
cld
lret
inc
out
in
cmpsb
out
daa
adcb
push
pushf
in
cltd
enter
dec
leave
imul
dec
lods
cld
add
mov
out
pop
xchg
inc
dec
clc
push
pop
xor
ss
jmp
jl
sbb
imul
jae
roll
cmp
xchg
outsl
mov
or
jne
mov
movsb
lea
push
jge
jle
xlat
jb
ds
jp
mov
movsb
pop
adc
and
jns
stc
pop
jp
adcb
sbb
add
out
mov
ljmp
decl
jmp
adc
les
fs
mov
and
or
sub
cmp
lret
popa
ljmp
xchg
xor
sbb
xor
inc
xchg
jae
sub
jp
pop
jno
movsb
or
pop
sbb
fcoml
ret
pusha
xchg
jnp
jl
mov
sbb
cld
pusha
out
repz
fsubrs
and
cmp
cmp
cld
jno
cltd
mov
dec
xorl
push
inc
jne
ljmp
adc
xchg
lcall
aaa
mov
movsl
addb
aas
stos
sub
imulb
das
push
cmp
push
popa
movsb
jae
loop
addr16
in
out
rorl
xchg
push
add
insb
insb
xchg
cltd
insb
arpl
mov
outsb
rcl
aaa
pop
mov
mov
add
jg
out
aam
mov
sbb
js
insl
popf
test
std
mov
inc
sar
sbb
sar
cmpsl
scas
push
lret
xchg
cltd
lret
cwtl
dec
sub
mov
jae
ljmp
and
gs
out
cmp
hlt
xchg
cmc
sbb
push
fcomp
mov
inc
or
xor
dec
cli
inc
mov
adc
mov
push
add
xchg
adc
and
insl
xor
jno
jmp
ss
out
mov
lahf
sbb
xchg
aad
inc
lods
clc
sbb
lret
cmpsl
mov
movsb
das
sahf
jno
dec
fs
fdiv
clc
imul
pop
sbb
gs
cmp
and
ret
push
dec
jge
imul
testb
ljmp
xchg
mov
rcr
inc
xchg
sub
stc
xor
jns
iret
mov
arpl
cli
mov
decl
jno
ffreep
lahf
and
and
or
push
popf
xor
test
outsb
push
sbb
stos
mov
lret
inc
jnp
mov
mov
divb
push
ret
jbe
out
mov
lea
jg
out
in
jl
or
lock
dec
add
shl
inc
cmp
xchg
dec
pop
pop
inc
mov
lahf
or
aas
push
aad
or
iret
incb
mov
adc
push
iret
fsubrs
outsb
cmc
ret
in
add
push
adc
fucompp
lods
inc
xor
dec
mov
into
sbb
aad
jl
test
int3
loop
fnstsw
test
in
movl
hlt
mov
jo
mov
rclb
cmp
jmp
in
xor
test
sti
hlt
push
mov
lock
in
pop
push
sub
cltd
sarb
dec
ljmp
lahf
arpl
std
jb
nop
lock
jb
adc
dec
scas
jp
xor
ret
lret
lods
orl
pop
and
xor
mov
or
mov
cmp
stos
mov
shrb
pop
inc
aam
or
ljmp
cltd
fsubrs
test
cmpsl
into
jecxz
ret
sbb
lock
int
jbe
ljmp
ss
cld
inc
mov
xchg
ret
push
add
loop
dec
inc
rclb
sbb
xor
loope
mov
cmp
push
mov
sarl
sbb
mov
popf
fiadds
loopne
dec
jns
fidivrl
jmp
inc
xchg
icebp
sbb
nop
out
xchg
out
add
sti
cmp
cmp
arpl
or
popa
add
pop
std
sbb
fists
xchg
icebp
bound
xchg
insb
pop
lods
test
push
ljmp
ss
fs
popf
inc
jns
and
jno
xchg
pop
lahf
lods
jbe
imul
orb
cmp
jnp
push
outsb
pop
push
les
ja
add
sbb
jle
cs
jne
add
xrelease
mov
pushf
mov
mov
inc
mov
or
enter
sub
rcll
addr16
in
or
adc
mov
popf
sub
cmp
sbb
inc
aad
enter
cmpsl
push
cmp
aad
daa
fwait
lods
cmp
jg
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
sub
jae
push
leave
or
xor
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
sarb
jae
pop
add
mov
xor
add
adc
sbb
popa
cmp
lea
clc
push
lcall
imul
leave
or
add
int3
ffree
mov
mov
mov
rcll
cmp
sub
fldt
sbb
adc
shrb
dec
adc
adc
shl
lods
iret
pusha
sbb
lds
jl
dec
push
mov
dec
pop
or
inc
fldcw
filds
scas
shlb
sub
das
push
mov
xor
pop
imul
les
clc
into
fs
jae
push
leave
or
into
fs
jae
adc
or
test
dec
mov
or
into
data16
jb
push
leave
out
add
jno
enter
jae
adc
sbb
into
fs
jae
push
mov
into
add
jbe
push
leave
or
into
gs
jae
push
leave
cmp
into
or
mov
sbb
into
fs
jae
push
into
fs
arpl
jno
into
fs
jae
push
nop
push
add
jno
lds
jae
push
leave
or
into
fs
jae
push
leave
or
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
jg
push
into
fs
jae
inc
leave
or
into
pusha
add
and
adc
pop
dec
sbb
into
fs
jae
mov
jg
imul
into
add
push
add
and
into
fs
or
into
fs
push
mov
jl
xchg
lods
fs
jno
push
leave
sub
into
add
mov
sbb
into
fs
jae
push
leave
int
sbb
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
into
fs
jae
push
leave
or
lds
jae
push
leave
daa
cmpsb
ret
add
mov
sub
adc
adc
dec
jne
mov
xor
cmp
mov
cmp
icebp
inc
in
rcpps
pop
test
inc
test
fiadds
dec
push
sub
flds
mov
push
out
repz
call
inc
in
push
pushf
jae
jle
or
fs
insb
out
daa
shl
pop
lret
sbb
hlt
test
out
into
aaa
out
pop
lcall
int
es
in
test
and
sub
push
scas
xlat
popf
sub
outsb
adcl
aam
pop
mov
popa
push
cmpsl
loop
jle
adc
popa
stc
adc
dec
lret
imul
mov
cmp
es
bound
push
fldenv
shrl
sub
pop
mov
push
add
cs
mov
sti
lret
adc
cltd
mov
cld
sar
add
iret
loope
lret
sbb
cmpsb
dec
cs
jo
frstor
fcoml
test
fld
xchg
imul
sub
pop
lahf
sti
popw
add
and
add
mov
jb
and
pop
gs
inc
inc
fistpl
adc
jp
xchg
and
mov
mov
jns
xchg
push
nop
xchg
sarl
inc
out
xor
inc
mov
mov
jns
leave
ljmp
rep
mov
and
scas
sub
ljmp
xor
mov
dec
xor
jnp
add
addb
pushf
fs
pop
sarl
repz
fwait
sub
push
pushf
push
sbb
push
jle
out
rcrb
adc
dec
and
popf
addr16
jg,pn
push
jnp
repz
or
mov
je
mov
shl
jmp
xchg
or
out
in
out
aaa
repz
push
mov
repnz
je
popf
fdivrl
adc
lods
mov
lahf
push
inc
cmpsb
push
and
cmc
sarb
std
orb
pop
stos
bound
into
decl
push
sub
js
mov
inc
jmp
int3
out
lcall
ljmp
jo
mov
scas
sub
popa
mov
jne
mov
out
and
into
sbb
adc
loop
xchg
cltd
jl
lock
dec
pop
xor
test
lods
add
addr16
mov
sub
cmpsl
dec
pop
xchg
clc
cvtpi2ps
stc
jb
sti
icebp
pop
and
jne
inc
pop
movsb
int3
cli
shr
int
mov
mov
ret
andl
ds
fnstsw
movsl
cmpsb
mov
push
mov
or
add
insb
out
sbb
loop
mov
arpl
xchg
ja
add
jle
int
enter
addb
scas
test
lea
jno
js
shrb
xchg
pop
nop
add
cmp
call
add
mov
or
and
or
cmc
ret
repz
jbe
sbb
and
jg
enter
pop
xor
push
je
sar
imul
mov
andl
xor
inc
pusha
adc
sub
js
push
xchg
pop
push
mov
dec
xchg
dec
pop
and
and
xchg
sub
movsl
cld
movsb
push
fnstcw
fs
cs
adc
out
imul
cmc
lcall
adc
jno
enter
add
adc
push
in
ficompl
inc
adc
jae
lock
ss
or
int3
sbb
mov
dec
mov
push
mov
inc
loopne
add
mov
jnp
les
fadd
pop
stc
mov
xor
mov
mov
es
cmp
icebp
cwtl
push
leavew
aaa
in
scas
pop
daa
or
daa
aas
mov
test
mov
hlt
mov
fwait
cmpsl
jmp
adc
fdivl
lret
pushf
cvtps2pd
mov
stos
lret
inc
xor
imull
mov
addr16
repz
icebp
dec
dec
xchg
adc
or
inc
jp
lcall
push
movsb
subl
shr
test
inc
xchg
add
aam
xchg
imul
lcall
or
ret
sbb
push
jb
mov
and
xchg
mov
sarl
jns
loope
inc
scas
mov
jae
xchg
out
ljmp
and
in
std
mov
mov
and
pxor
sub
sub
push
adc
add
or
lods
or
dec
dec
adc
or
out
incl
call
outsb
jmp
out
dec
adc
xchg
pop
inc
int3
lret
push
inc
adc
repnz
mov
not
cmp
fdivrl
and
sti
repz
lret
in
inc
xchg
sub
dec
push
js
push
jns
jecxz
jnp
xor
outsl
or
add
mov
pop
addr16
rorb
addr16
mov
add
or
mov
xor
add
cmovnp
lods
xor
dec
pop
pop
xor
mov
inc
int
out
stos
sub
and
push
dec
pop
inc
mov
mov
push
push
shrb
pop
sbb
adc
mov
fs
fdivr
cltd
test
cmp
inc
add
jmp
in
add
insb
dec
mov
dec
rcrb
xchg
cmp
jbe
dec
and
mov
mov
or
pop
sub
add
sbbb
pop
pop
or
repz
xor
int
arpl
jge
jns
lret
jns
ficompl
mov
clc
bound
loop
stc
or
and
outsl
mov
in
push
addr16
add
loopne
lods
cwtl
pop
dec
andb
mov
xchg
aam
addr16
xchg
in
lret
cwtl
mov
fisttpl
cltd
inc
pop
inc
push
pop
dec
push
xchg
outsl
inc
pusha
push
xchg
jne
inc
into
jno
scas
add
or
mov
lods
lret
push
push
mov
adc
or
jo
imul
sbb
xchg
cmp
xchg
pop
add
test
inc
repnz
nop
rcll
and
inc
lahf
sahf
mov
sti
mov
xor
xchg
mov
jge
cmp
ljmp
jmp
sub
cmp
aas
rep
sbb
cmp
dec
sbb
test
add
lret
sti
aad
sbb
dec
xor
int3
cmp
dec
repnz
sarl
mov
dec
mov
push
jg
inc
pop
inc
cmc
lds
xchg
jb
add
repnz
aad
rol
add
cmpsl
or
and
ret
cltd
cmp
add
popa
ljmp
adc
adc
cmpl
mov
mov
sub
push
mov
fidivl
mov
outsl
mov
mov
mov
mov
loope
push
mov
jecxz
icebp
pop
insl
cmp
xor
ret
pop
ss
add
cmp
pusha
call
jle
add
jbe
fldt
repz
fwait
std
ret
xor
dec
add
loop
and
shr
and
cmpsl
fisubrs
outsb
pop
lcall
in
das
sbb
lea
aam
out
fwait
inc
ja
scas
cmp
shll
mov
jne
movsl
dec
test
repnz
fistpll
jnp
lds
inc
add
pusha
ret
fdivl
push
inc
jl
fidivrl
and
lcall
mov
outsb
negl
dec
jle
inc
inc
push
add
pop
fnstenv
iret
adc
loopne
hlt
mov
pop
xchg
pop
or
mov
jecxz
push
cmp
test
push
xchg
and
xor
aad
or
int3
jge
and
ss
push
test
mov
mov
ja
push
fcomi
xor
ja
fwait
push
stos
adc
add
jl
stos
rcl
sbb
pop
test
dec
in
sbb
pop
aad
mov
sub
sti
stc
xchg
xor
aam
sub
stos
imul
pop
mov
aas
incl
adc
xorl
jecxz
jbe
cmpl
pop
das
lock
adc
or
or
xor
mov
adc
and
ja
mov
into
mov
ja
cltd
sbb
and
jns
hlt
dec
add
dec
in
fisttpll
pop
or
xchg
imulb
outsl
push
mov
sub
push
adc
stos
sub
xor
and
dec
sub
out
pop
sbb
ret
cmp
xchg
cmpb
jp
aad
or
repz
add
xor
mov
mov
and
lods
jge
lea
xor
sub
test
pop
sti
sub
cmp
pop
sahf
ja
cmc
push
popf
lret
pop
add
push
jecxz
mov
adc
fdivrl
je
xor
imul
pop
xchg
dec
mov
sbb
faddl
dec
pop
stos
push
ret
arpl
sbb
mov
sahf
mov
inc
mov
imul
aaa
mov
popf
cmp
jg
jp
movsl
push
jmp
gs
push
push
popl
or
and
adc
pop
iret
popf
jp
das
sbb
cmpsl
stos
popf
fdivrs
mov
in
jnp
lahf
cltd
fwait
add
mov
fwait
pop
aam
repz
cmp
xchg
jmp
adc
dec
dec
jo
adc
push
dec
inc
sub
pop
push
push
sub
cli
sub
insl
sub
lds
xchg
scas
addr16
add
sbb
sub
push
insb
xchg
sub
fadd
xlat
nop
xchg
xchg
mov
rcrl
xchg
xor
mov
sub
fimuls
pop
jae
std
pop
jmp
cmpsl
aas
xchg
sbb
dec
mov
cmp
adc
sub
cmp
sbb
jg
mov
cltd
sub
xor
popa
adc
mov
add
arpl
mov
fucomi
or
add
pcmpgtw
and
and
push
dec
enter
ljmp
sub
cld
mov
and
rcll
rcrl
jo
xchg
pop
orb
mov
jecxz
dec
cli
out
add
sub
adc
or
mov
daa
out
das
mov
jl
cmp
cli
es
mov
cmp
rcrl
fdivrl
xchg
sbb
ds
inc
jp
das
inc
repnz
cmc
addl
mov
stc
cltd
add
lock
movl
movsb
jae
stos
sub
shrl
std
ljmp
xlat
add
xor
or
push
and
xor
cmp
xchg
popa
xor
push
dec
mov
mov
insl
lea
mov
add
ja
jne
mov
and
xchg
fldl
sbb
jae
push
mov
ficoml
inc
xchg
sbb
jle
jo
std
ds
push
pop
mov
and
ret
mov
mov
icebp
jecxz
in
fimuls
mov
sub
popf
fcomip
adc
xor
push
das
scas
sub
enter
fcmove
jb
pop
mov
push
push
xor
pop
subl
add
jle
pop
clc
cwtl
sar
add
inc
pop
push
fwait
push
inc
mov
nop
sbb
loopne
sub
mov
dec
xor
xor
mov
jmp
xchg
ja
clc
inc
mov
push
and
adc
pop
cltd
sub
cmc
xchg
inc
sub
push
popa
sbb
popa
mov
push
mov
sub
sahf
and
mull
add
fidivl
push
lds
add
movsb
cmpsb
out
aad
sbb
out
subl
int3
out
and
sub
mov
and
imul
sbb
das
pop
jb
or
icebp
mov
xchg
into
jl
jge
movsb
or
dec
rorl
fsubp
adc
mov
sahf
sub
or
cli
repz
jle
fnstenv
dec
leave
sahf
mov
and
ss
fisttpl
movsb
adc
lds
pop
sbb
xchg
and
sub
out
rorl
mov
cmovl
lods
popa
daa
int3
mov
jnp
push
rclb
jp
pop
icebp
mov
out
std
dec
aas
xchg
mov
mov
mov
inc
mov
clc
ds
nop
pop
add
pop
jnp
sub
dec
js
insl
movsb
mov
sarl
out
xchg
fs
inc
repnz
cmp
push
nop
ljmpw
push
jns
sub
ljmp
xor
mov
sahf
int
or
cmp
xchg
xchg
in
mov
pop
ds
icebp
cmpsl
shlb
push
ret
push
out
dec
hlt
pop
or
dec
fwait
xchg
push
ss
lods
bound
test
dec
and
xchg
mov
push
lcall
add
mov
push
negl
stos
or
xor
xchg
daa
pop
addl
pop
xchg
xchg
loope
aam
sub
rcll
in
stos
sub
jecxz
mov
lods
faddp
nop
test
icebp
add
and
iret
repz
outsb
add
sahf
les
bound
cmpsb
dec
je
jo
in
jo
xchg
sbb
mov
push
ret
test
cmp
outsb
pop
cli
inc
mov
jnp
pop
xlat
imul
rcrl
cmp
outsb
lcall
clc
jae
and
mov
jmp
xor
aas
jmp
stos
sub
aam
int
outsl
fnsave
das
push
mov
rcrb
dec
mov
rorb
dec
sbb
jmp
inc
or
adc
in
add
mov
shll
sahf
sbb
test
push
mov
mov
push
mov
les
or
cmp
and
stos
cmp
psubusb
mov
int
pop
daa
mov
enter
mov
adc
cmp
cmp
orl
shlb
daa
rclb
outsb
daa
sbb
loope
lret
je
cmc
ja
cmp
out
inc
push
sub
push
dec
push
inc
ret
dec
ds
sbb
mov
decl
shl
mov
jl
mov
push
lock
and
in
ss
dec
cmp
dec
sarl
xchg
outsb
mov
lods
insl
mov
add
js
pop
lea
jg
lcall
adc
and
sub
adc
xchg
into
fdivrl
sub
sbb
jns
enter
jmp
cmp
lock
xor
cs
sbb
gs
jno
mov
and
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
