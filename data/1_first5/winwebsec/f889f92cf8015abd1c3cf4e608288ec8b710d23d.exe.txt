push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
aaa
dec
xor
test
mov
aam
inc
push
mov
cli
dec
popf
popa
add
push
andl
paddusw
pushf
shl
dec
jbe
push
sarl
cmp
outsl
adc
xor
dec
jg
mov
dec
inc
add
mov
mov
call
or
dec
movl
fcmovnb
mov
cmc
leave
bound
xchg
es
sub
xor
jno
cmp
mov
ss
xorl
mov
add
sahf
or
push
xor
dec
mov
jecxz
shrl
in
mov
jl
fsubr
repnz
inc
testl
cmpl
or
inc
test
mov
test
xor
clc
push
popa
dec
iret
insb
push
lea
jp
xchg
mov
rolb
xchg
ss
bound
cs
cmp
std
aaa
out
cli
mov
inc
ds
pop
in
sahf
imul
es
mov
pop
cwtl
xor
push
or
fdivrs
mov
mov
pop
dec
lret
and
or
imul
mov
inc
loop
sbb
add
rcll
cmpsl
lods
in
jae
into
sub
adc
jae
into
and
jno
pop
lea
mov
or
rcr
push
mov
fadds
pop
sbb
outsl
mov
cwtl
addl
daa
je
xchg
test
or
imul
jns
inc
fmull
push
rcl
outsl
imul
push
add
dec
hlt
test
inc
sbb
jmp
adcb
adc
std
dec
cltd
mov
pushf
fwait
jbe
adc
pusha
pop
dec
lods
out
inc
mov
shr
cmp
pop
fcomip
lcall
out
call
mov
call
es
out
es
xchg
cwtl
lret
inc
mulb
out
inc
cmova
aad
push
fnstenv
sub
sub
xor
or
mov
pop
lea
stos
mov
mov
cli
sub
imul
lahf
lods
js
ret
in
or
inc
fs
cld
pop
xchg
jne
mov
push
outsl
ss
mov
loop
lods
xor
dec
sarl
cmpl
pushl
or
sub
mov
push
aam
stos
rcrb
and
add
pop
jo
push
insb
mov
sti
out
lods
shll
push
lea
bound
movsl
mov
ljmp
xchg
xchg
pop
outsb
xor
repz
daa
insl
xchg
ljmp
cmc
aaa
fistpll
cwtl
push
and
mov
dec
enter
aas
xor
aas
dec
aad
cmpsl
cwtl
mov
lock
dec
fidivl
push
mov
dec
sub
or
movsb
enter
ljmp
or
mov
mov
adc
and
or
mov
push
pop
xchg
push
cld
aas
jecxz
lret
sub
xchg
loopne
adc
das
addr16
dec
mov
test
mov
fsubr
in
into
icebp
add
and
cli
loope
aas
lds
stc
inc
lret
mov
push
rcl
loop
ja
das
lock
cwtl
inc
mov
dec
lcall
rorl
cmp
dec
mov
mov
test
call
lret
ja
push
cmpsl
dec
adc
adc
push
leave
jge
mov
stos
fcmovb
pop
or
cltd
push
es
push
test
dec
pop
xchg
loopne
stc
mov
add
hlt
xchg
fwait
add
pop
scas
or
daa
es
sbb
pop
xchg
mov
mov
pop
or
dec
add
call
sub
outsb
mov
fcompl
add
lahf
push
mov
dec
popa
jle
cmp
sub
int3
fldl
les
dec
fwait
in
ss
sub
leave
adc
sbb
or
es
mov
jnp
ret
out
inc
inc
push
and
add
outsb
subl
fwait
xor
cmp
andb
cs
jns
fsub
inc
or
xchg
stos
sbb
dec
xor
addr16
enter
dec
add
inc
push
nop
sub
cmp
jg
inc
mov
sub
popa
mov
lds
adc
add
cltd
sbb
scas
inc
loop
cmp
adc
scas
sbb
sub
mov
xor
pop
gs
cmp
int3
arpl
rclb
rcr
xor
fwait
pop
ret
inc
sbb
out
push
sbb
xor
push
adc
das
lret
mov
cmpsl
ds
mov
inc
ret
ja
sahf
add
mov
cwtl
xor
pushf
xor
xchg
pop
bsr
sbb
fidivs
jmp
iret
pop
xchg
fistpll
outsl
dec
lcall
xchg
test
dec
mov
shlb
dec
cltd
sbb
pop
pop
hlt
or
and
fists
test
cmp
xchg
roll
sbb
clc
push
cld
call
xor
subb
icebp
mov
fstp
adc
shl
repnz
idivb
in
push
adc
ljmp
in
mov
lods
mov
lods
cmpsl
lods
mov
jb
shll
add
rol
sub
int3
int3
mov
bound
stc
repnz
add
mov
add
enter
fildl
sbb
cld
aas
or
sti
pop
lods
fsubl
addr16
dec
pushw
iret
icebp
xor
ret
insb
sub
cwtl
push
cmp
stos
fwait
xor
cmp
mov
lahf
outsl
mov
popf
fstps
jo
test
jle
lods
add
mov
stc
addr16
pop
jo
rolb
push
idiv
addr16
es
stc
out
mov
mov
jno
sub
inc
mov
mov
lahf
push
loopne
imull
pop
mov
imul
cmc
loope
test
pop
ret
sub
sbb
jp
repz
lcall
js
movsl
out
dec
sbb
pop
jae
mov
mov
mov
outsl
xchg
cmp
enter
sbb
xchg
das
mov
cmp
or
xchg
sub
mov
pop
insl
out
mov
das
xchg
test
and
pop
add
mov
or
cld
mov
fimuls
mov
daa
cld
pop
scas
push
xchg
add
jmp
jno
ja
jp
out
std
ret
pop
mov
ljmp
mov
inc
aas
aas
mov
gs
jo
push
xchg
loopne
add
pop
dec
jno
pop
mov
lret
push
push
mov
sahf
fisubrl
xchg
and
inc
inc
lds
scas
xchg
imul
leave
mov
xchg
push
mov
loopne
enter
scas
fwait
sbb
pop
jae
icebp
movl
or
test
int3
daa
jnp
addr16
jl
jmp
xlat
lods
sti
insl
je
push
xor
add
xlat
cli
andb
dec
nop
mov
out
aad
jecxz
add
and
dec
aad
leave
adc
jge
shll
rcl
dec
jb
lret
xor
arpl
push
xor
pusha
cmp
arpl
dec
adc
cwtl
or
pushf
rolb
push
dec
arpl
into
mov
jg
insl
roll
jb
sbbb
cli
rol
leave
sbb
arpl
imul
lock
sub
inc
fsubp
stos
imul
bound
popf
add
call
xor
push
bound
mov
jo
pop
fwait
jmp
inc
ja
fbld
mov
and
cmp
jge
stc
and
or
icebp
adc
push
nop
ror
cmpsb
aas
mov
notl
stc
sbb
sbb
sub
int3
push
fmull
sub
mov
sbb
xchg
out
push
mov
out
xchg
cmp
dec
fsub
pop
xchg
out
adc
cmc
enter
je
jge
sub
sti
add
mov
fiaddl
daa
xchg
out
stos
jmp
lock
loopne
mov
popa
bound
add
rorb
imul
std
jge
cmp
and
xor
sti
jnp
xor
or
out
or
add
call
and
notl
xchg
mov
adc
fdivl
push
outsl
ds
int3
push
fwait
cmp
loope
iret
mov
scas
sub
dec
movsb
test
add
fstl
ret
out
fbld
push
shlb
idivb
orb
lock
cmpl
subb
and
mov
xor
mov
cmpsb
incl
rorl
xchg
push
inc
adc
vpcomq
hlt
incb
add
sti
inc
and
fstpl
pusha
leave
dec
push
dec
and
sahf
pop
pand
fwait
cmp
xchg
pandn
fadds
add
dec
fldt
subb
jb
adc
pop
arpl
pop
cltd
push
mov
imul
pop
inc
xchg
sub
out
fcom
dec
mov
popf
mov
pop
movsb
arpl
and
sub
jle
push
int3
aas
xchg
pop
sarl
push
or
and
pop
out
push
mov
lds
pusha
pop
stos
fildll
inc
dec
and
in
mov
ss
je
nop
jg
repz
cltd
mov
into
orb
inc
and
mov
lods
mov
add
cmpsl
sbb
push
push
mov
mov
mov
stos
icebp
scas
arpl
dec
cmpsl
dec
pop
jb
sti
add
dec
mov
or
mov
jnp
or
push
dec
sbb
icebp
cmp
daa
mov
out
jae
pop
in
pop
mov
xchg
pop
cmp
sub
test
sub
dec
push
or
rorb
or
into
cmp
pushf
xor
dec
cld
lahf
inc
inc
mov
xchg
cltd
test
inc
lret
subl
inc
ret
aad
sbb
xor
popf
pop
sti
dec
cmp
imul
idivl
mov
mov
and
mov
mov
nop
and
fs
add
mov
cmc
and
mov
pop
push
lock
pop
mov
in
adc
xchg
leave
sahf
sbb
sub
sbb
test
pop
sbb
sbb
inc
cmp
push
out
rcl
int
pusha
es
xor
in
insb
out
and
cli
je
fisubrl
lret
add
inc
xor
ds
enter
mov
mov
sub
lock
xchg
xor
lods
stc
mov
fstpl
jo
xor
fcmovnb
imul
cltd
inc
lods
cmp
and
mov
cli
repz
inc
lret
mov
sub
std
popf
dec
dec
adc
fs
mov
sbb
mov
nop
adc
pop
cltd
cmpsl
mov
fldl
mov
jmp
rep
cmp
ljmp
inc
inc
ljmp
movd
ficompl
mov
and
movsl
or
call
cmc
fstpl
jg
in
aam
imul
mov
inc
xlat
add
sbb
and
sahf
jp
push
inc
mov
and
push
mov
scas
shl
out
test
mov
xchg
pop
gs
lea
sbb
ficompl
jecxz
popf
fdivs
inc
fcoms
aam
stos
adc
push
into
iret
pop
jae
dec
testb
jge
popa
sbb
dec
push
xchg
cmp
sub
xchg
hlt
inc
ds
mov
sbb
cltd
dec
icebp
cmp
xchg
leave
movsl
and
stc
pop
sbb
cwtl
pop
mov
jno
bound
add
mov
fwait
test
fistpll
dec
and
xchg
xchg
push
scas
orb
stos
pop
xor
loopne
pop
sarl
xor
int
lahf
mov
orl
icebp
enter
adc
push
or
pop
fisttpll
push
push
leave
inc
sbb
scas
loop
xchg
sbbl
pop
adc
scas
cmpsb
xchg
sub
xlat
ja
aam
mov
mov
scas
insb
adc
fistl
mov
pushf
repnz
sqrtps
popa
cmpsl
xor
jecxz
inc
ds
arpl
pusha
jmp
jo
out
adc
lcall
inc
or
xor
jmp
jnp
outsb
dec
or
xor
xchg
test
mov
sbbb
xchg
les
pop
ss
jnp
out
xchg
jnp
lock
cmp
aas
sbb
jnp
dec
scas
sub
or
lret
in
loope
lahf
bound
pop
aam
test
insl
in
jns
inc
arpl
xor
fwait
mov
call
outsb
pop
pop
ljmp
push
adcl
aad
push
je
pop
loop
inc
inc
sbb
push
pop
orl
inc
or
mov
cmpsb
stos
sbb
pop
xchg
shl
test
ljmp
lahf
movsb
mov
or
jecxz
dec
dec
fistpl
mov
jp
mov
mov
push
mov
pusha
ds
and
enter
pop
ja
pop
addr16
dec
and
sub
mov
dec
jne
mov
fadds
aas
xchg
push
sub
bound
pop
sub
dec
inc
jl
push
dec
pop
adc
add
lock
mov
sub
adc
jp
lods
sub
ja
std
or
clc
shll
jp
xlat
mov
dec
cmp
cmp
and
inc
dec
pop
xchg
loopne
push
and
xor
test
repnz
and
xor
arpl
cmp
cmc
lret
adcl
pop
xchg
jg
push
xor
pop
lods
pop
mov
sbb
mov
fcoml
scas
mov
jbe
shl
add
cld
mov
jge
pop
dec
push
sarl
pop
div
xor
jne
loop
call
sub
xchg
and
push
jno
sub
jne
fsubr
fcomi
add
adc
out
push
jnp
pop
inc
nop
test
and
scas
sbb
out
adc
test
xchg
jl,pn
cmp
pop
repz
test
jg
sahf
ljmp
adc
mov
add
xor
rorl
and
jnp
pop
mov
inc
lds
jle
gs
lea
cwtl
and
jl
xor
mov
rcl
xchg
mov
test
or
call
ror
test
xor
pop
std
loop
pop
dec
mov
aad
loopne
lds
mov
imul
sub
mov
xor
sti
or
arpl
push
pop
icebp
enter
aam
adc
push
push
inc
mov
ficoml
dec
aas
or
add
mov
push
mov
addr16
cmp
push
mov
out
pop
dec
jmp
jo
mov
sbb
or
mov
ds
loopne
pop
or
mov
shll
or
sbb
jbe
aas
hlt
sbb
pusha
cmpsb
mov
dec
int3
insb
mov
sub
mov
lds
in
rorl
iret
popf
fbld
inc
mov
int3
jp
ja
dec
mov
ret
in
sbb
enter
ss
cli
xchg
mov
pushf
push
int
mov
mov
jb
push
cmp
data16
in
dec
adc
push
inc
in
adc
and
jo
jne
push
jns
rcr
dec
pop
cmpl
cmp
xchg
xchg
xchg
adc
mov
out
sbb
mov
push
orb
mov
lcall
dec
addb
aas
sbb
cmp
mov
pop
fdivrl
les
in
add
sar
sub
mov
mov
into
lods
pop
dec
imul
mov
inc
pop
cmp
in
inc
mov
push
sbb
lods
jecxz
cmp
push
xor
out
add
in
xchg
and
mov
pop
and
push
sub
pop
imul
cmp
dec
push
inc
lcallw
orb
push
aad
mov
ljmp
xchg
xchg
leave
ljmp
mov
jbe
popa
outsl
incl
push
xor
mov
mov
lods
cs
ja
bound
mov
push
ja
jge
sub
push
repnz
jg
aaa
and
pop
xor
aas
mov
pop
lds
xchg
cmp
pop
pushf
add
push
test
mov
adc
pop
add
push
mov
mov
ja
xchg
divb
ds
cmpsb
jg
nop
adc
outsl
je
fdivrs
loope
pop
add
mulb
push
jmp
arpl
pop
jno
jb
sbb
dec
repz
xor
cwtl
mov
popf
loope
enter
scas
sub
mov
cmp
pushf
lea
iret
pop
sbb
dec
scas
pop
inc
push
mov
call
dec
xor
loope
xchg
popa
js
push
xor
loope
je
rcrl
pop
push
sub
movsl
mov
enter
mov
xchg
das
out
xor
sbb
cmp
cmp
pop
add
stos
push
jb
xor
add
sub
push
into
push
lret
or
insl
push
mov
cmp
out
imul
xor
jg
ror
aam
je
negb
inc
dec
mov
sub
popa
adc
cmp
pusha
into
sbb
dec
out
cmpsl
jecxz
ljmp
or
xchg
data16
shll
daa
das
js
gs
bswap
sbb
xchg
lea
in
xchg
and
lods
add
add
inc
movsl
mov
sbb
mov
loopne
cld
xorb
sub
jp
jmp
inc
mov
mov
daa
insl
mov
popa
movsl
fildll
das
adcl
pusha
std
leave
push
iret
mov
into
repz
push
cmp
mov
jne
stos
clc
out
xchg
ss
jae
xchg
loop
push
mov
sbb
pop
movb
loope
and
add
push
and
cmp
mov
or
jb
cld
outsb
and
outsb
scas
test
cs
loopne
je
jb
ljmp
sbb
sbb
jl
out
inc
add
or
test
pop
adc
loope
jne
in
mov
mov
adc
add
aad
and
xchg
mov
jo
insb
divb
lods
sub
cmc
sbb
shrb
jl
mov
test
cltd
fnstenv
sub
sub
ljmp
leave
out
outsb
mov
mov
or
test
negl
xchg
xor
fwait
mov
in
mov
mov
pop
test
in
lcall
or
inc
ret
hlt
add
xchg
jns
aad
cli
jg
insb
sub
stc
lret
pop
fwait
mov
inc
push
arpl
rcll
mov
adc
clc
dec
sub
jg
adc
jb
sbb
je
loope
jg
jns
inc
sbb
xchg
lods
out
stos
imull
cmp
das
stc
jmp
nop
loop
jo
leave
inc
repz
loop
sbb
sub
lret
loop
cmpsl
push
xor
cmp
and
xchg
sbbb
adc
lret
sbb
leave
faddl
mov
shrl
xchg
mov
mov
pop
xchg
data16
inc
movl
cmp
push
lods
es
xlat
cmp
push
mov
mov
jmp
lret
jmp
lock
dec
xchg
test
data16
jne,pn
test
cmp
mov
pop
mov
dec
adc
mov
shll
push
call
add
lods
mov
lock
fs
lahf
in
jnp
and
ror
and
mov
cmp
call
xchg
adc
mov
cmpsb
jmp
aaa
xchg
pop
fstpl
movsl
or
es
sahf
into
adcl
jne
lods
push
xchg
aam
movsl
insl
dec
or
daa
les
cltd
sub
cmpsb
jmp
sub
push
sbb
add
lret
fwait
sbb
lods
mov
fs
jecxz
out
mov
xchg
push
hlt
or
cmp
add
data16
mov
mov
fistps
xor
mov
jno
sti
dec
add
pop
jnp
add
xchg
mov
add
call
sbb
lds
imul
add
xor
push
jnp
adc
cmpsl
push
cmpsl
jnp
push
adc
and
sti
data16
jb
gs
xor
mov
pop
jbe
stc
cmp
test
in
in
xchg
test
xor
in
mov
fldenv
pop
pop
pop
je
div
xor
dec
std
cmpb
fldpi
push
out
out
and
icebp
push
mov
ret
ss
nop
in
add
xchg
movsb
mov
imul
mov
mov
mov
pop
punpckhdq
fwait
stos
xchg
aad
mov
imulb
loop
out
clc
cmp
xchg
or
sbb
shll
and
or
stc
ja
add
add
push
andl
popf
push
ja
addr16
sub
movsl
sbb
mov
mov
xor
pop
cmpsl
imulb
mov
xor
mov
lret
fidivrs
lods
push
dec
pop
add
pop
negl
jmp
xchg
xor
sbb
or
mov
outsl
push
and
add
fldt
mov
repz
fwait
inc
inc
and
fimull
sub
push
jno
inc
jnp
insl
pop
xchg
cmc
jmp
call
lret
addr16
aas
mov
je,pt
dec
lret
aaa
aam
lcall
cmp
cli
dec
daa
sbb
adc
dec
push
jge
mov
loope
scas
shrl
fcoms
ret
xor
inc
in
scas
in
jg
pop
push
jnp
shrl
loope
addr16
or
and
mov
test
sub
out
inc
dec
sti
add
jle
mov
jnp
sub
jns
ret
cmp
cwtl
inc
add
add
jecxz
data16
push
aad
xor
add
mov
pop
inc
adcl
and
mov
add
mov
fnclex
cmpsl
aas
pop
xor
aaa
or
insl
lcall
mov
jl
repnz
cmp
repnz
pop
daa
xchg
bswap
pop
jo
rclb
and
xchg
jae
sbb
push
inc
add
push
xchg
mov
std
sub
dec
mov
cmpsb
add
int3
adc
xchg
stc
dec
popf
fcmove
mov
or
loop
test
out
inc
neg
insb
shl
mov
sub
imul
or
and
ss
mov
cmp
add
shlb
inc
adc
mov
mov
sbb
nop
add
or
sub
mov
cwtl
stc
jo
mov
push
cmp
sbb
in
imul
popa
jae
fs
jb
lahf
dec
add
aad
shl
cmp
sbb
into
daa
loopne
stos
mov
xchg
xlat
jge
cli
inc
sub
sub
jmp
es
add
pop
adc
push
loope
mov
and
ja
dec
test
add
pop
es
into
int
nop
je
ds
mov
mov
dec
and
stos
mov
xchg
push
mov
stos
rol
add
stos
test
sahf
je
pop
xchg
in
gs
dec
adc
mov
pusha
inc
lret
clc
add
jmp
xchg
push
lea
jg
jg
sbb
push
popa
inc
and
inc
xchg
ficoml
inc
dec
adcb
in
daa
mov
out
pop
xchg
pusha
mov
jb
or
mov
sub
outsb
xchg
sbb
mov
adc
cmp
xor
fsubs
arpl
mov
push
movsb
lock
ljmp
sbb
ror
test
mov
outsb
fbld
fs
sub
inc
mov
dec
and
lret
add
idiv
xor
push
cmpsl
xor
mov
lods
popa
push
notb
pop
sbbl
nop
in
add
sbb
in
mov
nop
movsl
daa
mov
aam
and
les
sub
add
mov
adc
inc
add
add
cmp
scas
bound
lret
xchg
aad
imulb
outsb
jbe
pop
arpl
jmp
xor
add
pushf
aas
xor
inc
and
mov
dec
lock
gs
call
mov
and
sub
xor
mov
sar
jecxz
leave
sub
fldl
add
pushf
xor
xbegin
sbb
outsl
dec
outsb
stc
inc
and
int
sahf
and
cmpsb
jo
push
rcll
adc
xchg
mov
loop
in
in
push
lds
pop
ret
sub
loop
ja
mov
movsl
jl
mov
mov
xchg
or
decl
cmpsb
sub
loopne
add
shll
out
mov
testl
dec
mov
dec
or
js
add
xor
mov
sbb
adc
dec
mov
cli
mov
sub
mov
lods
pushf
les
rolb
dec
out
cmc
sbb
and
mov
in
jo
pop
ret
loope
insb
das
pop
fs
loop
lods
imul
lock
xchg
jne
jno
xchg
stos
movsl
test
mov
pop
push
aad
add
sub
pushf
or
inc
mov
adc
dec
xchg
data16
pop
inc
jb
jmp
ljmp
jno
push
lods
xor
pushf
aaa
pop
je
push
lret
add
cld
cld
xor
stos
xchg
cmp
arpl
movsl
push
pop
inc
push
dec
aaa
add
insl
out
xor
xchg
inc
hlt
dec
xor
mov
mov
and
lea
adc
clc
mov
inc
icebp
cmp
aad
lret
decl
popa
dec
pop
loopne
das
cltd
dec
rcrl
insb
mov
push
push
xor
notl
into
jbe
mov
aaa
dec
repnz
pop
cmpsl
fmuls
cltd
in
mov
jns
neg
stc
test
mov
clc
xor
cmp
pop
rclb
push
fsubl
sbb
out
imul
dec
pop
jmp
dec
ljmp
roll
dec
add
ret
sub
mov
aaa
jmp
cli
imul
dec
shll
cmp
sub
cmpsb
jnp
sar
xchg
cmp
cmpsl
jns
rcrl
pop
loope
jb
mov
out
push
imul
pop
inc
gs
pop
cli
dec
mov
add
or
ret
jl
cmp
sbb
sbb
mov
adc
test
pushf
and
mov
je
xchg
push
cmc
push
cwtl
mov
cld
aad
inc
rep
push
dec
test
movsl
cmpsb
or
adc
aad
les
iret
adc
push
fidivrs
imul
leave
cmp
dec
ds
mov
clc
fildll
mov
test
xchg
add
add
push
pushf
in
aaa
call
lret
lods
mov
mov
fmull
lahf
cmp
dec
lds
xchg
adc
fdivrl
jns
push
mov
cmc
inc
scas
aad
add
into
sbb
mov
push
mov
push
add
cmpb
mov
push
push
xchg
arpl
push
mov
lcall
daa
add
mov
imul
fwait
pop
adc
out
insb
ljmp
cld
inc
xlat
and
or
inc
loopne
cmpsl
push
mov
cmpsb
xor
loope
subl
mov
into
lods
fdiv
push
sub
inc
in
push
mov
cltd
jb
sbb
or
call
shr
adc
ds
add
pop
inc
fsubrl
dec
pop
nop
dec
dec
stos
popf
fnstcw
add
test
clc
into
push
adc
outsb
inc
mov
push
lock
popf
test
or
js
xchg
jmp
add
dec
lock
icebp
clc
push
mov
and
sbb
aaa
pop
fidivs
mov
mov
sbb
hlt
mov
adcb
mov
in
sbb
fstl
xchg
fadds
xchg
das
mov
dec
push
mov
mov
mov
rolb
es
loopne
add
andb
or
call
adc
dec
cmpsb
xchg
cmc
ret
jae
push
push
in
test
mov
or
sub
pop
lea
pop
mov
xchg
cmpl
repnz
outsl
popa
call
sub
js
inc
in
hlt
fmulp
cwtl
xchg
lret
xlat
xlat
mov
gs
arpl
adc
mov
je
mov
bound
cwtl
scas
pop
sub
ja
loope
mov
add
jmp
in
push
push
adc
xchg
repz
aaa
mov
sbb
rcl
insl
dec
ds
cmpsl
pop
orb
adc
out
out
stc
add
or
stos
daa
mov
enter
imul
ljmp
gs
outsb
push
cwtl
dec
aas
jecxz
aad
testl
adc
xor
mov
ja
imul
add
mov
dec
hlt
cmpsb
sub
mov
out
jne
mov
out
stos
pop
push
sbb
mov
scas
dec
mov
push
iret
cwtl
arpl
scas
sbb
mov
sbb
cmp
add
rcl
daa
pop
push
push
and
pop
jge
shll
cwtl
aaa
push
stos
gs
stos
leave
fidivs
mov
jb
sub
hlt
dec
xchg
or
into
rclb
sbb
cmc
sub
pop
xor
cmp
loop
dec
lcall
repnz
stos
int
dec
mov
outsb
or
shll
dec
cld
rorl
adc
jg
cld
adc
std
xor
add
cmp
jmp
cmc
fnstenv
jns
aam
or
daa
ja
or
mov
lret
in
jno
sub
cmpsl
or
sbb
cmp
dec
mov
insb
xlat
mov
sub
cmpsb
in
arpl
lods
mov
lods
adc
mov
sub
in
add
jp
fwait
imul
adc
adc
loop
enter
mov
pop
jbe
shrl
pushf
jmp
enter
test
xor
mov
and
clc
aaa
ret
mov
lahf
cmp
neg
aaa
and
sbb
sbb
sahf
dec
cmp
mov
mov
scas
inc
lahf
sbb
adc
testb
dec
ret
icebp
icebp
push
movsb
push
test
mull
jmp
xchg
mov
add
xor
xchg
lret
jno
icebp
repnz
inc
lahf
cmpsl
pop
test
cmpsb
pop
fstp
sbb
xor
js
notb
test
lahf
faddl
mov
pop
mov
mov
inc
xchg
int3
mov
dec
mov
out
or
jecxz
mov
lods
cmp
outsl
add
imul
pop
lods
xlat
xchg
mov
pushf
imul
out
leave
push
clc
clc
stc
push
sahf
das
fnstcw
insl
scas
sbb
es
fisubrl
adc
or
cld
sbb
and
adc
bound
imul
inc
lods
inc
add
mov
lret
mov
imul
mov
pop
pop
pushl
add
or
dec
sbb
out
mov
mov
and
add
loop
pushf
pop
bound
mov
inc
dec
and
mov
cmp
call
mov
rclb
inc
data16
scas
call
mul
mov
xchg
cmpsb
jecxz
add
inc
sbb
arpl
xor
scas
call
lret
cwtl
notb
fiadds
ds
add
pusha
pop
mov
add
es
pushf
add
clc
loop
test
lock
out
pop
clc
jne
stc
jl
xchg
test
sbb
lcall
inc
cmp
sbb
pop
xorl
in
inc
adc
xchg
push
inc
cli
in
cmc
ljmp
call
mov
shlb
xchg
rclb
fidivs
mov
add
and
imul
fmuls
mov
mov
aad
jne
je
adc
je
mov
dec
or
testb
push
inc
pop
mov
pop
mov
loopne
xchg
imul
test
push
es
mov
loope
sbb
jge
pminsw
inc
jge
lahf
insb
pop
pop
and
aam
xchg
pusha
dec
sbb
sbb
xchg
jb
fcmovu
xor
jne
aam
loopne
ret
push
not
insl
push
daa
clc
push
xchg
add
pop
mov
fsubl
jl
mov
mov
lds
inc
leave
cmp
inc
xchg
imul
in
in
sub
sbb
fdivl
in
push
repnz
xor
mov
push
mov
mov
je
subb
lret
pop
insb
add
inc
fwait
jno
icebp
or
mov
xor
int
out
adc
add
je
mov
jmp
xchg
icebp
mov
cmp
push
pop
jecxz
and
xlat
rorb
and
pop
sbb
mov
xor
movsb
es
adc
mov
mov
inc
mov
in
sbb
mov
mov
or
imul
xor
jmp
stos
ror
popf
mov
ja
or
jo
inc
jle
in
rdmsr
out
dec
cmpsb
popf
cmp
cmp
mov
mov
or
mov
or
push
outsb
mov
nop
dec
or
loopne
lods
fcompl
mov
negb
int
sub
mov
leave
pushl
into
cs
cmp
bound
movsb
frstor
sbb
push
negb
push
xchg
and
lret
je
ljmp
jbe
xchg
sub
add
repz
stos
add
add
mov
mov
push
test
or
lods
cmpsl
mov
scas
out
cmp
enter
sahf
adc
push
mov
mov
pop
testl
ljmp
cmpsl
lret
pushf
test
pop
hlt
daa
cmp
sub
dec
fisttps
sbb
cld
adcl
sub
mov
pop
js
jno
adc
jmp
pop
fbld
or
sbb
push
push
add
sbb
jle
jne
pop
fnstcw
imul
jp
mov
mov
jl
lcall
shll
sti
notb
cli
scas
dec
lods
mov
fs
cmp
cmpsb
pop
jmp
mov
rorl
lods
and
mov
mov
out
mov
dec
test
mov
ret
mov
mov
jg
sbb
inc
sub
pop
cmc
pop
loope
loopne
aaa
mov
cmpsb
push
jo
inc
adcb
cmpsb
fxch
addr16
sub
test
aad
sbb
int3
repnz
dec
hlt
jbe
cld
fcmovbe
pop
pop
or
dec
or
sub
es
mov
sbb
push
stc
roll
mov
mov
sub
cwtl
stos
enter
inc
lods
negb
shlb
movb
sbb
dec
je
adcl
jecxz
test
iret
cli
mov
cld
mov
sub
lahf
aad
dec
aaa
dec
pop
push
nop
pop
fisttps
xchg
ds
pop
dec
std
lods
xchg
xchg
fstpt
add
pop
jmp
aaa
into
inc
rorl
push
stos
dec
rolb
addr16
ret
rcrl
mov
inc
jne
insb
pusha
mov
inc
test
dec
and
fstpl
xchg
mov
rorl
pop
daa
cmpsb
jle
jnp
pop
pop
xor
test
jns
xor
mov
push
pushf
or
xchg
call
mov
pop
mov
mov
mov
and
lock
sbb
add
xlat
xor
inc
loope
clc
test
xchg
lods
sarl
inc
sub
adc
xlat
sub
cmp
arpl
pop
mov
pop
aad
inc
imul
push
or
and
test
jge
scas
popf
bound
out
sub
jl
xchg
push
inc
dec
aaa
orb
lahf
pop
fsub
inc
shll
je
ret
jg
mov
lea
sbb
inc
xlat
pop
hlt
cmp
mov
std
pushf
adc
and
cmpsl
div
and
mov
sub
popa
ret
inc
lret
out
cmc
jl
jp
lret
aad
sahf
mov
loopne
loop
push
lcall
pop
push
mov
push
xorb
movb
mov
and
cmpsb
add
mov
fildl
mov
bts
lret
adc
cltd
mov
aas
pop
or
sbb
outsb
dec
and
cmc
mov
test
mov
sbb
jmp
test
ds
add
js
icebp
pusha
in
mov
and
jae
sbb
mov
push
and
pop
pop
stos
lods
jl
push
mov
idivb
fistpl
mov
cmp
and
cwtl
xchg
mov
div
cmp
sbb
das
and
mov
sarb
and
das
sub
fnstsw
icebp
rcrb
lret
sbb
mov
hlt
dec
imul
inc
mov
mov
pop
or
fildll
adc
add
push
test
pop
lahf
mov
jbe
pop
das
mov
dec
or
push
arpl
sar
adc
jmp
push
pusha
mov
lcall
dec
pop
addr16
das
mov
dec
xchg
js
jg
sub
orb
movsl
movl
fs
add
pop
insl
shlb
or
stos
xchg
cmp
shlb
es
ja
sar
mov
lods
ja
mov
sarl
xor
adc
pop
mov
mov
sbb
xor
push
in
dec
lods
cmp
pushf
sbb
loopne
int
dec
cmp
fmulp
lahf
mov
cmp
adc
sub
stos
aam
mov
ja
jge
xlat
lcall
cmpsb
out
subb
clc
push
and
lret
in
push
cmp
xor
xchg
out
fists
or
add
lret
push
jg
adc
push
std
daa
mov
add
jnp
mov
into
test
in
or
das
pop
add
loopne
pushf
loopne
fisubrs
add
mov
out
lods
inc
ja
icebp
push
ja
push
push
jmp
pop
push
inc
test
in
lret
sbb
adc
idivl
xor
adc
mov
inc
dec
sbb
fnstcw
xor
push
pop
sti
and
test
ret
push
loope
aas
fdivr
imul
pop
mov
lods
movsl
push
and
mov
cmp
and
push
adc
sti
scas
sti
xchg
mov
popa
or
lods
sub
dec
arpl
in
mov
cltd
sub
jnp
sarl
out
es
out
mov
mov
dec
mov
fwait
push
jge
inc
mov
shrl
push
inc
push
push
jne
repz
mov
imul
stc
bound
pop
shrl
in
dec
pop
push
sub
stc
pusha
mov
aad
jl
loop
cmpsl
sbb
test
imul
xor
in
jg
out
xchg
jns
clc
mov
and
dec
add
rolb
mull
xor
push
rcrb
pop
or
into
dec
lahf
xchg
into
pop
mov
jb
pop
aam
shlb
adc
sti
sbb
daa
popf
lock
and
sbb
or
jmp
cmp
and
inc
enter
push
ds
sbb
adc
mov
jmp
adc
sbb
cmc
jbe
xor
mov
rcrb
dec
xchg
addr16
lods
fnstcw
cmp
mov
sbb
popl
mov
pop
out
pop
cmp
lock
dec
fbld
ret
lea
test
enter
lds
ljmp
imul
xor
rep
sbb
insb
pop
inc
mov
mov
orb
out
dec
add
pusha
lock
adcl
mov
inc
xor
out
nop
sbb
xchg
jp
mov
xor
das
add
dec
jecxz
push
outsb
lcall
sub
push
inc
shlb
or
xchg
sbb
cld
xor
pop
jg
lea
inc
pop
stos
mov
fcmove
inc
cmp
out
mov
jg
in
lds
dec
fdivrl
sub
push
xor
mov
fnstcw
xor
imul
sub
mov
and
cmp
jbe
enter
mov
ds
xchg
xor
mov
subb
cmp
mov
jmp
mov
mov
ret
sub
es
mov
mov
scas
inc
mov
jmp
add
mov
mov
sbb
xchg
lods
addr16
test
ror
es
iret
sahf
repnz
ds
sub
stos
into
mov
jl
xchg
xchg
dec
push
mov
push
dec
mov
adc
mov
xchg
arpl
cltd
sti
jne
pusha
mov
xlat
push
xor
insl
and
pop
jmp
xor
sub
fcoms
jecxz
mov
rcl
popa
lahf
and
std
adc
xchg
jo
das
or
add
mov
push
and
cmp
les
sarl
dec
mov
ret
and
shr
xor
dec
and
test
loopne
mov
sbb
cmp
inc
push
test
loopne
dec
and
mov
xlat
mov
fmull
fidivrl
arpl
imul
mov
mov
out
call
adc
and
cmp
fsubp
inc
push
rcrb
adc
in
insb
outsl
imul
xchg
mov
sbb
jp
or
fisubrl
xor
sub
stos
pop
icebp
jae
push
jp
or
push
sahf
pop
ret
ja
sbb
jns
xor
notl
int3
sub
sarb
push
in
sbb
add
sbb
sbb
sbb
iret
jae
inc
pop
cld
mov
add
cld
loop
xor
imul
dec
sete
mov
sub
mov
in
mov
jl
lods
pop
cmp
scas
push
sbb
mov
jl
jae
stos
lahf
push
inc
sub
sbb
jge
push
mov
jnp
and
and
divb
inc
push
test
xchg
push
mov
andl
and
pop
mov
in
cs
faddl
add
cs
and
jno
fnstcw
mov
mov
jns
in
pop
aam
icebp
les
sti
movsl
push
or
ds
pop
rcl
add
and
adc
fsubl
fsubrl
ja
stos
data16
out
insl
mov
adc
sub
or
push
pop
ds
mov
jge
jb
les
mull
in
sbb
int3
bound
jbe
xchg
cwtl
inc
and
sldt
mov
inc
xchg
mov
xchg
fs
inc
add
subb
add
cmp
outsb
mov
call
cli
test
repnz
dec
shrl
or
push
or
xchg
adc
shlb
jle
cmp
shrb
fcomip
cmp
popl
rcl
stos
insb
adc
sti
test
jb
das
sbb
mov
add
scas
nop
inc
pop
insl
or
aad
cmp
cs
pop
fbld
mull
insb
xor
inc
ret
push
adc
or
jbe
cmpsl
and
sub
ss
push
jnp
xchg
insb
and
and
jmp
xchg
sub
cmp
mov
cmp
jmp
mov
test
bnd
sub
xor
into
insb
push
mov
or
or
hlt
push
cmp
clc
push
lds
lcall
jg
in
xor
push
loop
jo
inc
lock
push
stos
xor
fs
jb
aaa
add
test
lcall
cwtl
mov
cld
test
in
fcmovne
into
hlt
pop
push
sti
fs
xor
jno
jmp
pushf
sub
xor
ljmp
fstcw
fs
push
into
push
push
cld
jmp
sub
test
pop
test
stos
gs
stos
in
lret
inc
imul
mov
jb
dec
cmp
adc
pop
les
pop
xchg
decl
js
shr
fidivrs
sbb
add
lahf
jbe
mov
pop
sbb
scas
rol
mov
lds
push
test
fdivs
stos
pop
cltd
push
lret
pop
and
fucomip
inc
popa
iret
leave
and
xchg
or
mov
fcmovnbe
cs
cwtl
adc
sbb
out
pop
outsl
jmp
test
mov
lods
fnstenv
pop
dec
xor
out
xchg
xor
cmc
imull
or
cmp
movsl
repz
cmpsb
jl
mov
lds
cmp
mov
mov
jbe
inc
mov
sub
lods
mov
jno
xchg
in
mov
xchg
or
mov
xchg
daa
push
or
xor
aad
mov
push
and
out
xor
loop
jo
xchg
mov
scas
inc
xor
adcl
hlt
adc
sub
scas
jae
add
adc
adc
push
jle
xor
and
dec
into
mov
add
aaa
jnp
bound
dec
stos
mov
call
mov
and
mov
insl
sti
cmp
sub
add
inc
jb
push
pushf
cwtl
xchg
xlat
stos
mov
outsb
clc
lds
fcomip
pop
aaa
cmpsb
push
cmp
xor
call
lret
mov
lods
es
xlat
pop
ss
fisubrs
ret
daa
popf
bound
sarb
and
mov
call
enter
je
xchg
xor
xlat
push
add
sub
test
sbb
jecxz
jecxz
add
mov
xchg
daa
add
sbb
ljmp
pop
call
icebp
push
adcl
mov
aad
fisttpll
test
dec
iret
bound
cltd
int3
lahf
jle
xchg
jne
test
dec
sbb
jge
inc
xchg
stos
dec
push
icebp
insb
aaa
jp
xor
fcomps
mov
lods
xor
inc
cmp
push
ret
jo
fstpt
push
and
insl
dec
hlt
sbb
ret
lcall
lahf
xor
adcl
pop
packsswb
xlat
adc
cmp
out
lock
pop
lcall
add
outsl
push
mov
shl
pop
hlt
mov
adc
xchg
cmp
sbb
xor
dec
jecxz
sbb
fidivs
xor
js
fs
pop
repz
push
pop
pusha
push
xor
in
dec
jns
mov
xchg
in
jle
xchg
or
stos
dec
cmp
lods
aad
rcll
int
out
ss
lods
xchg
mov
popa
xchg
mov
xchg
in
outsb
mov
cmp
pop
pop
cli
cmp
xchg
movsb
pop
cmpsl
mov
aas
out
adc
pop
jbe
jmp
xchg
shrb
rorl
cmp
xor
mov
aad
int3
test
enter
jl
dec
pop
mov
fisttpll
lea
push
pop
stos
adc
popf
add
in
sahf
test
mov
sub
test
das
out
adcb
fwait
ds
cmpsl
lcall
pop
xchg
out
mov
push
pop
add
scas
and
push
aad
sbbl
in
popa
mov
cld
jmp
pushf
in
jae
out
shll
lret
sub
dec
nop
sbb
pop
rcrl
jb
mov
xchg
mov
xchg
cmp
sahf
in
ja
pop
adc
test
test
jmp
je
cwtl
call
mov
inc
push
insb
inc
lock
test
cmp
jbe
sti
mov
js
pop
pop
flds
jp
in
movsb
xor
bound
sbb
add
stc
in
xor
filds
rcrb
jmp
arpl
push
enter
add
loop
int3
push
adc
jecxz
jo
enter
jp
fnstenv
into
iret
add
jp
data16
push
xchg
jo
outsl
add
add
sub
jecxz
int3
loope
sbb
out
sti
insl
mov
pop
mov
push
xchg
andb
push
outsl
sub
or
xlat
mov
aas
mov
lock
sbb
xor
mov
jg
addl
icebp
sub
lcall
loope
sub
cmp
aaa
push
nop
dec
bound
push
gs
cmp
pop
ror
adc
mov
fs
or
insl
push
lods
push
and
ds
pop
out
mov
ret
inc
lds
pushf
in
faddl
aas
inc
pop
imul
or
rorl
ja
mov
or
adc
sbb
xlat
out
mov
cmpsb
ja
scas
jbe
fdivl
int
fsubs
or
scas
adc
int3
mov
mov
push
mov
xor
inc
or
lret
sbb
and
not
add
outsb
jg
jge
scas
sar
dec
dec
mov
bound
mov
or
cltd
jo
dec
mov
popa
mov
fwait
gs
fdivr
jmp
xchg
fdivl
add
dec
fldt
lret
lock
call
nop
mov
popl
sub
cltd
lds
inc
inc
lds
pop
adc
push
loope
inc
dec
lret
jns
mov
scas
clc
mov
sub
sub
imulb
in
hlt
mov
xchg
push
dec
pushf
jno
ja
jne
xchg
jmp
and
sub
jmp
fs
xchg
dec
mov
jbe
pop
test
icebp
cmp
or
or
sub
mov
pusha
add
ja
arpl
out
dec
push
cmp
out
pop
xchg
xor
xchg
or
mov
int3
cld
cmpsb
dec
dec
aam
faddl
cmpl
clc
pushf
xor
push
push
adc
stc
xchg
mov
int3
jo
push
push
ret
jno
pop
xchg
test
mov
ret
sub
lods
mulb
push
fisttps
mov
sub
push
lea
push
pop
gs
dec
inc
bound
mov
pop
int
push
cmp
dec
lret
adc
lds
loop
bound
leave
pop
dec
xor
mov
jmp
xor
dec
ret
jno
mov
sahf
adc
subb
xchg
ret
push
daa
mov
loopne
cmpsl
stc
jno
fdecstp
sahf
mov
popa
push
jge
stc
mov
pop
inc
xor
jle
les
mov
inc
pop
mov
adc
cwtl
iret
sbb
jg
jo
imul
jg
xchg
sub
xor
dec
outsb
pusha
mov
push
dec
jecxz
cmp
mov
mov
xchg
dec
stc
push
imul
lock
lock
adc
push
in
sub
pop
sbb
sbb
dec
cmpsl
sahf
aas
jnp
fs
lret
ljmp
jle
and
xchg
dec
or
fdivs
imul
mov
shlb
ret
rorl
arpl
xor
cmpsb
fs
add
out
xchg
xor
xchg
push
mov
imul
gs
add
scas
cmp
push
ficoml
adc
js
popf
mov
fcoms
test
fidivl
and
cmp
push
das
push
pop
mov
inc
push
sbb
fsub
sbb
inc
adc
call
jnp
jmp
jmp
jns
dec
nop
pop
mov
mov
fwait
std
dec
mov
push
cmp
cmpsl
inc
add
mov
inc
aad
inc
xchg
ret
mov
dec
fs
cmp
testl
jns
jne
cmc
jnp
adc
scas
dec
enter
pop
or
xor
adc
ret
loope
push
es
add
inc
push
xchg
mov
out
clc
iret
jecxz
xchg
movsb
and
cli
imul
insl
rclb
dec
jne
stos
mov
push
pop
mov
ss
loopne
pop
cwtl
and
call
insb
mov
jnp
mov
inc
mov
xchg
ss
add
mov
cld
sbb
pop
add
fdivr
dec
imul
int3
adc
lret
idivl
fwait
pop
sub
fwait
iret
leave
lods
fidivl
lods
sbb
xor
je
pop
dec
fiaddl
jge
xor
jnp
lret
sbb
inc
pop
push
add
movsl
lods
jne
cli
cmp
test
scas
mov
test
push
or
sub
pop
add
ja
loope
imul
mov
gs
mov
rolb
std
push
fbld
orb
pop
into
lods
cmp
loopne
push
in
and
outsb
dec
and
out
shrl
xchg
mov
loope
push
push
or
cmp
out
jo
xor
pushf
xor
push
xor
mov
stos
sbb
sub
dec
add
dec
and
addr16
mov
push
decl
rcrl
dec
dec
pop
mov
aad
lret
insl
pop
cmp
jnp
cmp
ds
adc
sbb
mov
cmp
les
push
in
push
out
test
iret
push
in
lods
push
adc
insb
fcmovnu
jb
cmp
lods
fildll
jo
mov
cmp
sbb
scas
mov
dec
int3
cmp
stc
jle
xlat
xchg
fbstp
jns
arpl
inc
inc
xchg
pop
mov
adcb
dec
or
ds
js
sub
mov
rcpps
pop
mov
lods
jnp
lcall
push
add
and
nop
decl
xchg
movsl
xchg
rclb
sbb
ret
xchg
imull
cmpsl
add
jns
das
and
xchg
cmp
fwait
mov
sub
cmp
ja
leave
jmp
push
dec
fstps
and
pusha
xor
fistps
or
leave
jl
pop
xor
shll
add
imul
dec
jne
jle
jo
loope
popf
sub
adc
rcr
cmp
push
dec
cmpsl
test
xchg
call
fdivl
or
stos
mov
add
ss
stc
jns
cltd
imul
scas
cld
mulb
sahf
xchg
mov
xor
xchg
bound
arpl
test
pop
and
ret
sub
xlat
jg
push
pop
loop
inc
jo
mov
mov
nop
lock
test
jb
movsb
push
xor
push
push
ljmp
pop
ret
cltd
repz
ret
cmc
js
ret
push
cmpsl
ljmp
or
sub
outsb
fs
push
lock
xlat
je
push
and
cli
scas
das
mov
xor
ror
popf
loope
mov
xorb
xor
push
sbb
stos
sbb
adc
jno
ret
push
inc
and
mov
hlt
es
add
movsl
js
xchg
xchg
iret
jnp
xlat
mov
mov
sbb
in
sbb
enter
jno
and
jmp
out
sub
sub
adc
mov
lods
push
pop
sbb
cmp
or
dec
cld
fiadds
hlt
repnz
in
leave
push
xor
adc
sub
xor
sbb
mov
in
and
idivb
push
mov
lds
inc
testl
xor
hlt
sbb
or
cmp
js
into
cmpsl
sub
nop
rolb
xchg
inc
xor
sti
lcall
bnd
insb
jmp
outsb
shlb
inc
dec
mov
hlt
ret
shlb
xchg
jne
scas
push
frstor
stos
inc
fldl
aaa
cld
xchg
or
add
inc
stc
pop
jmp
fdiv
shrl
inc
xchg
dec
sbb
mov
pop
mov
out
add
bound
aaa
pop
jp
jge
sub
xor
inc
xchg
xchg
inc
cmp
xchg
push
inc
add
xchg
adc
jnp
cwtl
int
dec
xlat
negl
or
push
rcr
cwtl
rolb
jl
push
cwtl
imul
push
inc
popa
movd
jo
or
in
pop
pop
pushf
sub
lahf
lcall
rorb
shrl
mov
xchg
xchg
or
stos
imul
push
inc
jl
imul
inc
loop
test
mov
adc
scas
mov
xor
stos
xchg
mov
lock
add
outsl
lods
insb
xchg
movsb
fwait
rcrb
lods
jbe
imul
aas
mov
and
xchg
sbb
movsb
push
popf
test
mov
mov
mov
es
add
xchg
xchg
mov
push
push
sbb
stc
rclb
imul
xchg
pop
mov
movsb
jg
jne
pop
push
mov
mov
ret
or
jecxz
or
xor
aas
sub
insb
repz
adc
jg
or
mov
dec
lret
push
jo
lret
cmpsl
mov
aaa
sub
or
add
mov
or
add
popf
cmp
xorl
int
or
xor
fbld
fiadds
and
sbb
faddl
dec
popa
lcall
pop
or
sbb
cld
pop
test
sbb
shrb
jecxz
sbb
and
pop
repz
mov
test
in
aad
in
adc
inc
inc
adc
in
dec
sub
in
lcall
mov
or
gs
or
push
lea
arpl
pop
aas
out
mov
lods
and
lcall
cmp
cmp
xor
shlb
in
push
rol
xorl
inc
xchg
inc
jbe
stos
pop
or
scas
dec
and
mov
shll
cwtl
pop
inc
cmpsl
add
leave
lea
xchg
icebp
inc
mov
mov
mov
mov
push
push
sbb
cmp
call
sbb
xor
cs
ds
fnstcw
out
es
sbb
mov
out
cmp
insl
inc
inc
mov
ja
stos
cld
ss
test
or
outsl
inc
inc
movsb
sti
mov
mov
nop
jns
mov
inc
out
lret
mov
aam
push
jbe
jne
push
insb
out
test
mov
mov
push
pop
pop
cld
gs
lcall
addr16
pop
mov
les
jne
mov
aaa
sarb
scas
mov
pop
push
pop
scas
jnp
and
push
mov
leave
std
push
mov
rorb
popf
sub
push
or
mov
cld
insl
add
cmp
jnp
test
jnp
enter
enter
pusha
dec
sahf
jne
fildll
out
and
clc
ds
bound
jb
xor
iret
popf
sub
int3
fistpl
mov
mov
ss
popa
shl
mov
je
lcall
or
cmpl
movsb
adc
xor
out
xchg
pop
xor
mov
pop
cmpsl
mov
aas
push
push
mov
xchg
lcall
mov
outsb
cmp
push
adc
add
int3
mov
adc
xor
lock
idiv
gs
ds
popa
mov
jo
mov
jcxz
cmc
dec
push
adc
lods
mov
mov
sbb
fs
adc
xor
dec
sbb
cmp
sbbb
fidivs
sbb
push
inc
out
xlat
cmc
fdivrs
or
in
xorl
fdivrs
dec
popa
iret
out
xor
out
push
hlt
scas
push
xchg
push
sbb
mov
out
loope
lret
out
pop
or
cmc
push
ja
jg
add
cmp
stc
cmp
sbb
ja
cmp
xor
das
dec
xor
pop
or
jb
inc
into
mov
js
cltd
out
lret
fisubrs
xlat
push
sbb
cs
jge
cmc
push
sub
insb
arpl
and
sub
or
jg
icebp
sbb
mov
pop
leave
inc
mov
cmpsb
aaa
adc
sbb
dec
xor
stos
out
mov
fdivs
mov
ret
push
je
push
je
fsubr
dec
movsl
test
pop
add
mov
lock
jo
push
mov
sub
repnz
dec
aad
xchg
jmp
push
mov
mov
movsb
or
mov
jbe
ds
imul
cli
pop
add
dec
shl
and
push
ret
loop
adc
sub
cmp
dec
adc
subb
nop
pop
mov
aam
nop
in
in
ret
jecxz
mov
xor
xchg
xchg
ljmp
inc
je
mov
std
pop
cmp
inc
fs
rcr
hlt
movsl
cmp
out
sub
xor
push
ret
jb
or
jle
scas
or
int3
sarb
mov
and
xor
aaa
aam
in
stc
out
add
iret
or
xor
test
cmp
mov
dec
push
ret
repnz
push
std
pusha
das
and
or
jo
mov
and
je
and
xchg
mov
cmp
outsl
or
les
mov
pop
mov
jo
jb
pop
leave
and
jg
inc
lcall
cli
or
and
mov
flds
pop
ss
loopne
sub
das
fildl
mov
cmpsb
in
push
push
cli
les
fiaddl
icebp
mov
loop
adc
test
gs
repz
xchg
ret
out
jnp
mov
add
fs
scas
fimuls
mov
fmull
dec
loopne
jecxz
push
and
stc
loopne
sub
sub
xchg
xchg
fisttpl
pusha
ja
mov
jecxz
mov
fs
nop
push
icebp
mov
or
dec
mov
shll
xchg
mov
xchg
add
pop
sbb
dec
add
js
cmpsb
xor
test
xchg
les
into
mov
test
dec
pop
ret
jns
jne
sahf
popa
pop
lock
pop
xchg
negb
push
and
out
lcall
nop
jp
cmp
xchg
or
daa
xchg
in
xchg
xor
in
and
psubw
push
lea
lds
xor
inc
sbb
or
push
ja
mov
rol
cltd
movsl
fucom
pusha
shll
dec
fnstcw
cltd
adc
stos
fbstp
inc
and
sub
pop
adc
sub
and
sbb
ss
push
lea
int3
icebp
mov
xorb
pop
add
inc
xchg
jl
out
pop
lahf
mov
lret
fdivrs
inc
mov
rcrb
cwtl
or
fdivrl
outsl
add
jle
jp
rcr
jg
popf
or
out
in
adc
inc
iret
jecxz
loopne
jge
push
hlt
insb
push
das
mov
out
xchg
lods
int
sbb
dec
cs
and
pusha
add
xor
inc
xchg
loope
pop
jns
sub
shl
cmpsl
mov
test
jl
ds
lods
add
mov
mov
das
fwait
lods
inc
rcr
das
pop
int
mov
jbe
daa
push
inc
jecxz
push
loope
outsl
imul
in
mov
aam
popa
mov
insl
pushf
sub
push
aas
lcall
and
or
sub
enter
xchg
repnz
xchg
data16
and
sub
cmp
negb
cmp
lock
inc
out
pop
test
imul
mov
mov
pushf
sbb
ja
test
roll
inc
shrl
out
inc
dec
movsl
nop
xchg
xchg
not
clc
pop
sub
test
int3
lahf
adc
std
insb
add
icebp
js
fcmove
lcall
enter
mov
adc
mov
xor
sub
pop
jno
sbb
adc
push
mov
rclb
mov
mov
dec
pop
adc
sub
fsts
js
in
cmp
filds
and
dec
js
call
sbb
pop
jae
push
outsl
call
pop
pop
cwtl
dec
out
iret
add
ds
fwait
mov
dec
ja
mov
stos
movsb
cli
std
dec
shrl
xor
add
xlat
hlt
pop
out
and
fisubrs
in
and
pop
int3
out
and
shll
sub
adc
jg
lret
call
sbb
decl
mov
mov
ret
shlb
push
mov
outsl
and
out
popf
movsl
fisubrl
push
pushf
inc
shl
stc
xor
xchg
rcr
sbb
mov
cwtl
aas
rolb
jecxz
stos
mov
lea
stc
jo
cmp
into
outsb
hlt
and
fmull
loop
mov
cmp
or
inc
xor
ja
lock
jmp
or
add
or
mov
call
xchg
jge
cmp
enter
jnp
rolb
jecxz
andb
and
je
lds
lock
and
mov
loopne
jmp
lret
jge
in
push
lea
fsubr
pop
popa
jecxz
adc
push
shlb
stos
xchg
in
dec
insl
xchg
push
stos
sub
sbb
jmp
shrl
rcrl
or
mov
cwtl
jae
and
out
xorb
adc
inc
out
push
rol
inc
pop
jne
aad
scas
pop
xchg
addr16
test
xchg
xchg
stos
sbb
mov
mov
jo
adc
fs
in
dec
loop
outsb
add
imul
insl
jb
dec
sub
add
pop
jae
adc
mov
push
jl
in
daa
adc
fcmove
xchg
rcll
xchg
sbb
daa
aaa
cmp
sub
mov
ljmp
mov
cli
enter
or
add
movsb
mov
fmuls
out
and
je
cmp
jnp
test
shl
iret
push
stos
movsl
adc
lahf
arpl
cmp
mov
inc
js
pop
inc
lret
xchg
cmp
bound
arpl
xchg
lods
dec
into
and
cmp
sbb
sub
rcrl
mov
mov
cwtl
js
adc
mov
repnz
aad
or
popf
pop
bound
hlt
enter
and
das
in
mov
pop
fwait
add
sub
sub
sub
xor
loop
divl
shr
xor
or
cmp
cltd
pop
fwait
ds
sub
stos
lcall
pop
setp
sbb
inc
int
rorl
ja
mov
push
push
mov
dec
popf
negl
fstps
movsb
jo
popa
mov
ret
fdivrs
and
jbe
aad
pop
fmull
data16
jp
iret
cmp
int3
movsl
mov
in
sub
push
inc
push
and
movsl
mov
dec
xchg
inc
add
push
or
cmp
bound
pop
mov
dec
rcrb
orl
or
insb
dec
test
xchg
pop
bound
pushf
inc
popl
cmc
loop
jb
xor
sub
lods
jo
or
stos
xchg
cwtl
std
sbb
ret
sbb
mov
adc
ds
popa
nop
lcall
mov
stc
fistpll
fstpl
push
lahf
int
or
call
push
ja
test
pushf
mov
xchg
sti
adc
lock
cmp
and
int3
sbb
push
inc
int
shlb
popa
cmp
ja
jecxz
lahf
shll
inc
mov
mov
mov
push
add
es
lea
mov
adc
sub
cmp
mov
data16
les
pop
scas
mov
not
mov
fdivs
aad
inc
sub
loopne,pt
aaa
xor
js
jecxz
mov
fwait
mov
xchg
mov
or
adc
cmpsl
and
inc
and
xor
jne
pop
cltd
out
mov
inc
shll
mov
push
push
inc
push
push
stos
jp
out
pop
dec
icebp
das
scas
jo
ficoml
xchg
aam
inc
xchg
mov
rcl
sahf
outsl
inc
dec
sub
xor
lahf
pop
xorb
sub
mov
out
movsb
rclb
mov
int
lods
lret
loop
stos
ret
sub
fstpl
mov
cmp
sbb
into
fildll
ljmp
dec
addr16
shrl
lds
jle
push
dec
scas
test
mov
cmp
shr
pop
hlt
sub
dec
lret
jnp
fs
mov
mov
xchg
fs
das
cli
sub
xor
inc
ss
lods
jmp
push
adc
fidivrl
aam
enter
inc
xchg
sbb
mov
imul
fstps
in
cmpsb
jl
divl
sub
or
shl
mov
sub
dec
fisubs
mov
out
sub
sbb
fmuls
lock
out
dec
and
out
push
loope
inc
aaa
push
mov
jne
cli
inc
mov
cmp
jle
loope
in
shll
jnp
inc
aas
cli
sbb
in
int3
into
sub
mov
xor
test
repz
jb
sub
dec
cli
jg
jns
dec
int3
pop
out
mov
fldl
and
inc
dec
lock
data16
int3
ds
insb
add
cmp
aas
jg
stos
mov
xchg
je
mov
or
pushw
mov
rcrl
mov
pop
mulb
xor
pop
mov
push
push
fucomp
int
cmp
sub
add
xorb
xchg
mov
out
aas
mov
movsl
movsl
js
icebp
jle
lret
int
fisttpll
lods
dec
push
lcall
lock
ss
jle
push
sub
or
jge
test
scas
jo
fwait
push
fbstp
jg
popa
outsl
pushf
ss
scas
cmpsb
push
adc
mov
je
push
sbb
test
mov
sub
xchg
loope
aas
jl
mov
cmpsb
movlhps
nop
fucompp
dec
or
rclb
cltd
inc
bound
push
mov
xor
jle
cmp
hlt
fnstenv
mov
movsb
mov
jns
clc
shrl
and
mov
dec
push
jns
movsb
dec
jb
shrl
and
hlt
lds
mov
fisttpll
ret
inc
xchg
add
outsb
sub
fwait
push
add
dec
xchg
fs
fbstp
push
mov
hlt
das
jge
mov
sub
cs
inc
mov
imull
scas
jmp
dec
rorl
loope
repnz
or
xchg
jae
adc
aad
pop
sti
aam
xchg
ret
cmp
sub
pop
xor
xchg
add
ret
inc
es
dec
adc
push
pushl
movsl
pop
sub
lods
jg
add
icebp
inc
popw
pop
das
sbb
push
mov
pop
and
sbb
xor
fnsave
popa
sti
rcr
mov
pop
lret
xor
lods
sbb
xor
cli
jb
ja
in
lret
push
les
xor
imul
sbb
les
cld
xor
jg
scas
mov
sbb
das
pop
stos
adc
ja
dec
addr16
fyl2x
push
sub
mov
arpl
mov
out
flds
aam
adc
repz
sub
call
xor
imulb
jbe
sbb
add
movsb
jle
adc
dec
hlt
stos
lock
pop
popf
xchg
mov
fldl
imul
enter
cmp
adc
data16
xchg
sarl
dec
mov
cmp
pop
out
or
popa
push
xor
addl
pop
movsl
mov
out
repz
scas
pushf
lahf
push
pop
mov
out
and
push
out
out
lret
cwtl
mov
ss
sbb
mov
push
dec
mov
call
ficomps
enter
sbb
jne
sbb
push
pop
jbe
and
cmp
aas
sub
xlat
push
jns
jb
cmpsb
fidivrs
push
adc
loop
jecxz
les
les
cs
daa
push
sub
out
fisttpl
adc
push
daa
inc
push
jecxz
std
mov
cs
mov
sbb
pusha
mov
mov
and
les
adcb
push
pop
imul
in
sbb
outsl
ja
daa
shll
into
out
mov
stc
fistpll
inc
mov
ds
fsubrl
test
mov
fiaddl
aad
dec
inc
add
add
aam
fdivs
push
test
adc
inc
mov
or
mov
shlb
push
xchg
das
sub
cmpsb
mov
and
iret
iret
mov
xchg
test
push
out
inc
mov
jnp
mov
das
out
sti
jl
in
pop
mov
fildl
lds
scas
faddl
cmpsl
push
add
fsubs
arpl
scas
add
xor
cld
fwait
mov
cli
test
pushf
mov
cwtl
std
inc
xchg
jp
mov
mov
outsl
mov
aam
cmp
stos
xchg
shll
daa
gs
add
pop
xchg
out
fucomip
xor
dec
lea
mov
popl
push
stc
xchg
sbb
jbe
or
outsl
test
push
mov
ds
adc
mov
pop
fisubl
hlt
adc
sub
popl
ret
or
or
popa
leave
sub
lods
in
loopne
mov
jge
lcall
jo
rorb
dec
rcll
dec
ja
aad
pop
insb
jae
xchg
negl
mov
dec
aas
jo
divb
std
fists
lods
mov
lock
xor
lcall
repnz
addb
sub
out
data16
or
aaa
les
in
push
lods
outsb
mov
cld
in
bound
sbb
sub
jns
push
mov
and
or
xor
pusha
mov
ja
pop
hlt
cmp
and
lcall
sub
ficompl
jge
pop
js
mov
push
xor
pop
pusha
fucom
pop
mov
or
imul
add
mov
cmc
jl
aad
arpl
aas
in
jg,pt
fisttpl
dec
pop
pop
lret
adc
xor
mov
cwtl
stos
shl
rcrl
into
or
push
out
aad
test
sbb
shlb
lahf
pop
jl
mov
push
adc
push
add
xchg
lods
shlb
push
lcall
or
outsl
sahf
int3
pop
mov
je
push
jns
lret
mov
and
shr
fs
dec
push
lds
lods
sti
int3
dec
shll
lea
xchg
mov
popa
out
lcall
mov
add
repz
movsl
jg
inc
dec
clc
loope
popf
and
push
rclb
fldenv
dec
push
inc
adc
lods
in
pop
lcall
jb
cltd
inc
cmp
es
out
mov
pusha
lahf
icebp
lret
loope
cs
out
hlt
cwtl
mov
into
xchg
xchg
inc
jp
jb
pop
push
stos
mov
ja
xor
mov
mov
aad
dec
js
mov
jno
test
sbb
add
cltd
inc
shrl
jecxz
ret
sub
inc
mov
in
mov
repz
dec
push
and
pop
call
xor
push
fsubrl
pop
lods
fdivp
lods
dec
sub
push
cmp
pop
mov
xor
outsb
adc
mov
mov
or
cmp
pop
test
cmp
xchg
lcall
xor
push
cmpsl
and
imul
je
add
mov
lret
mov
int3
sub
stc
adc
adc
pop
mov
shll
jae
vphaddubw
xchg
mov
or
pop
pop
cmpsb
fidivrl
mov
pop
or
cld
movsb
in
cmp
xchg
jl
jg
pop
stc
xor
fstps
mov
dec
xor
out
scas
mov
out
clc
scas
jle
wrmsr
cmp
xor
cmpsl
scas
inc
cltd
lock
adc
and
mov
aaa
mov
add
mov
add
jb
test
nop
rorb
divb
add
dec
adc
mov
jnp
roll
rcrb
dec
pop
popa
and
pop
push
pop
das
or
pop
adc
jne
sbb
sbb
movsb
icebp
dec
ret
out
mov
nop
sbb
popf
xchg
ss
popf
inc
sub
in
cwtl
jb
sub
sub
mov
push
xchg
std
xchg
mov
pusha
lret
xchg
insb
push
xchg
mov
call
mov
jecxz
pop
cmp
rorl
loop
and
cmp
cmp
sbb
inc
adc
sti
and
cmp
mov
clc
loop
mov
je
add
or
imul
jae
jne
mov
mov
in
popf
inc
fistpll
mov
fisttpll
mov
pop
dec
pop
cs
cmp
std
adc
and
or
jmp
jae
shrl
popa
fdivrl
pop
idivl
aad
sub
daa
cwtl
push
pushf
fidivs
push
sahf
mov
xchg
rol
das
sub
leave
test
sbb
cmc
call
jmp
aam
pop
out
xchg
addl
ss
mov
cmp
cltd
and
pop
jle
insl
xchg
jnp
lds
mov
fstps
xchg
int3
fwait
and
nop
fs
movsb
push
bound
xor
or
fildl
jne
mov
pop
clc
pushf
mov
test
mov
dec
xlat
add
stc
mov
dec
dec
cmp
mov
inc
fstp
mov
cmpsl
mov
and
jp
mov
cmp
push
push
add
sub
aam
mov
out
sahf
aas
scas
dec
sbb
adcl
mov
in
inc
scas
sub
adc
movsl
loope
pop
jbe
pop
dec
test
popf
jne
test
aaa
push
in
jle
int
or
and
sub
loope
pop
cmp
jo
iret
insl
or
inc
loopne
push
mov
std
pop
mov
sbb
mov
int
inc
ds
push
sbb
push
mov
and
sahf
push
mov
add
mov
cs
cli
xchg
inc
and
mov
jge
or
cmc
push
inc
cwtl
inc
cmpsb
and
in
cltd
icebp
lods
mov
aad
lcall
call
mov
les
pusha
adcl
adc
pop
inc
mov
mov
jmp
das
das
jns
sarl
xchg
jbe
sub
mov
push
jg
jno
adc
pop
imul
andl
push
stc
fildll
push
push
loop
jg
sub
push
jnp
outsl
mov
ficompl
jne
stos
adc
mov
pop
cli
rorl
cmp
outsl
xor
test
imul
fadds
cwtl
add
mov
push
test
cwtl
or
movsl
das
lret
xchg
mov
call
call
ljmp
icebp
lret
fistl
enter
into
xchg
pop
pop
fidivrl
imul
mov
out
cld
xlat
xor
pop
jl
mull
cld
in
inc
neg
xlat
and
pop
cmpsb
mov
scas
xlat
loope
jb
jb
push
xchg
inc
cmp
or
dec
aaa
add
out
cvttps2pi
adc
xor
out
xor
push
sarl
lret
inc
enter
mov
xchg
gs
add
push
xchg
into
xor
sahf
cltd
inc
sub
sub
or
mov
lea
aam
pop
movb
cs
mov
out
jb
push
movsl
cli
push
xor
scas
xchg
ds
or
inc
nop
call
xchg
pop
add
sarb
cmp
mov
je
pop
and
and
fcomi
push
out
pop
insl
inc
sub
mov
lret
les
sbb
mov
cld
mov
push
and
movsb
call
popa
bound
sbb
cmp
xor
in
int3
xor
xchg
ss
push
xchg
mov
ret
jne
mov
fwait
nop
inc
idivb
cltd
int3
xor
mov
xlat
mov
mov
subl
xor
js
es
mov
mov
divb
fisubl
mov
loop
test
mov
sub
xchg
jne
cmpsl
and
out
insl
dec
xchg
call
inc
mov
test
jno
clc
cmp
mov
divb
xor
shll
inc
mov
ret
hlt
jl
cmp
outsl
mov
ss
cli
outsb
out
cmp
shll
addr16
dec
fsubrl
stc
push
test
shl
mov
sbb
idiv
les
outsb
loope
stos
mov
or
jno
fldcw
xchg
pop
rcr
pop
or
lret
mov
test
sub
sti
push
pop
or
push
xchg
sti
or
sbb
push
push
sub
fimull
mov
push
addr16
add
fdivrs
lret
sbb
imul
fistpl
adc
jne
cwtl
mov
lods
std
lret
xor
mov
xor
lods
mov
sbb
rcl
out
ficoms
mov
ja
sahf
pop
dec
push
mov
push
in
ljmp
imul
loop
pop
adc
fwait
jno
adcb
mov
ja
scas
adc
dec
inc
movsb
add
and
mov
ret
movb
lods
pop
mov
xor
into
daa
add
sti
xor
outsb
pop
loopne
test
push
dec
mov
sub
psrld
jg
in
xchg
cmpsl
sar
mov
lret
daa
inc
stos
pop
incl
fimull
ss
cmp
xchg
push
mov
xchg
shlb
repz
cmp
outsl
pop
enter
cmp
or
daa
bound
pop
adc
pop
jae
aaa
dec
and
std
push
fsubs
incl
cltd
xchg
inc
decb
jno
mov
js
xchg
xlat
dec
pop
mov
cmpl
jns
sti
fucom
dec
dec
in
mov
loop
xchg
ret
mov
jge
decb
fidivrs
out
or
les
pop
stos
scas
pop
mov
push
pusha
movsl
inc
jmp
mov
pop
clc
pushf
sbb
jecxz
add
or
es
sub
inc
cmp
xor
jp
push
adcb
inc
mov
mov
push
repz
fistl
add
jo
mov
stc
adcl
xchg
std
icebp
jmp
test
andb
jg
mov
and
arpl
insb
fsubl
inc
cmc
jb
mov
mov
sub
xor
xchg
rcr
add
cmpsl
xchg
or
and
mov
mov
mov
or
jbe
aad
push
lds
lea
loopne
dec
into
mov
add
pop
adc
add
out
sub
jbe
jecxz
int
push
lods
xchg
movsl
jne
sti
push
xchg
outsb
xchg
movsb
into
pop
adc
sub
jl
cmp
fisubrl
je
je
mov
sti
ljmp
and
mov
sbb
mov
mov
les
cmpl
inc
testl
adc
or
adc
or
nop
mov
orb
mov
xlat
jg
or
push
cmp
out
jle
lret
push
push
pop
repnz
das
xchg
rol
cli
test
xchg
out
xorl
pushl
mov
mov
jne
dec
call
mov
inc
sub
cmp
pop
sbb
rcrb
pop
popf
leave
xchg
xor
icebp
aaa
jmp
pop
pusha
aam
divb
mov
shll
add
dec
mov
fildl
adc
ja
lods
xor
stos
test
cmpsl
adc
shl
sbb
std
mov
xchg
xor
lock
pop
mov
cli
and
dec
xchg
int3
xchg
jo
jno
dec
lds
mov
add
push
pop
pop
xchg
jp
jns
fbstp
jb
push
jbe
mov
fistl
or
mov
divl
add
push
xor
mov
pop
call
dec
xchg
ja
push
adc
sub
add
iret
inc
fldt
adc
fdivrl
and
mov
jmp
comiss
jge
mov
inc
xor
mov
scas
fsubr
lds
mov
or
push
ret
pusha
jg
add
push
cmc
fs
movups
dec
pop
test
aam
arpl
mov
fsubp
insb
cmpsl
fnstsw
lret
mov
lods
pop
fwait
sbb
add
mov
adcl
xchg
shrl
dec
fwait
mov
or
push
sbb
test
out
adc
sbb
jo
mov
mov
xchg
gs
faddl
in
inc
shlb
sbb
pop
testb
mov
mov
lods
sbb
mov
leave
cmp
jne
fdivrl
repz
and
std
rcll
movups
repz
aam
sarb
mov
xchg
inc
mov
popf
cmp
or
and
mov
xchg
dec
out
repnz
ds
aaa
dec
inc
mov
lahf
out
mov
lds
mov
mov
rorb
js
sub
xor
pop
shlb
lock
sub
mov
mov
fcomi
xor
and
add
fstl
push
test
ret
sub
fsubrl
cmp
jle
call
sar
popa
push
xchg
pop
insb
outsb
mov
cmpsb
mov
js
ljmp
sub
jp
hlt
mov
nop
mov
pop
nop
mov
fiadds
xlat
ja
ljmp
movsw
push
repz
out
fsubr
add
dec
imul
and
dec
aas
pop
sbb
xor
arpl
xlat
iret
and
mov
jnp
mov
and
outsb
rcl
dec
scas
ljmp
and
mov
fcoms
in
jbe
inc
inc
js
or
iret
mov
aaa
add
xor
xchg
imulb
shlb
stos
dec
outsl
jae
cmp
mov
push
or
les
icebp
sbb
into
and
mov
xor
add
insb
mov
mov
mov
mov
dec
mov
out
loope
add
aam
cmp
aaa
sarl
mov
jl
call
daa
xor
stc
xlat
ds
ret
sbb
jle
lods
adc
mov
xor
iret
push
jl
mov
sbb
cmp
outsb
mov
mov
push
popa
into
cmpsl
dec
pop
adc
in
loope
loope
sbb
icebp
xor
push
fcomps
test
xor
add
or
leave
hlt
cmp
fnstenv
pop
xlat
js
lods
or
jmp
jae
stos
adc
sub
mov
scas
push
xchg
fstpl
test
push
loop
lcall
push
xor
or
mov
sti
ficompl
outsb
in
ja
int
mov
ja
jecxz
mov
mov
lock
add
push
add
icebp
xor
jge
push
pop
lret
pop
cmp
lret
sbb
setb
sarb
inc
dec
adc
shl
outsb
jle
mov
add
mov
repz
jp
pcmpeqd
pop
mov
pop
xor
pop
inc
mov
cmp
cmp
ja
sbb
mov
lods
mov
sbb
pop
add
clc
xchg
mov
cmp
pusha
mov
popf
jmp
and
mov
into
fcom
or
jge
sub
lods
xchg
jmp
test
scas
jo
dec
out
sub
aam
data16
pop
cmp
daa
jg
jno
and
pusha
push
loop
sbb
adcb
xchg
xchg
inc
repnz
xchg
rcr
outsb
loopne
roll
cmp
jne
jo
mov
call
mov
ficoms
add
inc
ss
imul
pusha
sub
lret
roll
test
out
clc
xor
sahf
outsl
insl
and
hlt
leave
push
mov
push
fisubrs
mov
rorl
movl
arpl
adcl
pop
jecxz
adc
pop
sub
inc
dec
push
pop
cmpsl
sti
mov
mov
inc
inc
sbb
leave
mov
mov
in
out
decl
pop
xor
cs
and
cmp
jl
ret
lcall
dec
sbb
out
imul
fdivl
jge
fldcw
outsb
data16
push
mov
das
shll
pop
mov
vmulss
mov
pop
dec
pop
aad
out
lods
push
lods
inc
push
dec
fwait
icebp
jg
push
push
jecxz
sub
xlat
mov
popa
push
int3
fwait
adc
femms
mov
in
xor
inc
stos
pusha
xor
and
or
bound
aam
flds
arpl
dec
out
and
cld
out
sub
mov
mov
ret
mov
setne
cltd
mov
xchg
xor
dec
inc
add
out
push
lret
in
scas
stos
dec
pop
fidivrs
int
xchg
and
sbb
jg
ret
mov
outsb
fiaddl
test
jmp
push
setp
test
in
jnp
cmp
enter
ret
in
push
hlt
out
mov
cld
or
mov
xor
cmp
xchg
or
mov
push
sbb
push
or
nop
aaa
ret
push
int
ss
dec
test
add
push
les
mov
jp
in
xchg
mov
or
push
sub
pop
sbbl
fcom
aam
xchg
adc
or
fistps
cmpsl
jbe
push
fwait
in
pop
fsubp
ret
lcall
pop
inc
jle
and
push
dec
loopne
mov
fidivs
mov
test
jne
adc
sub
fiaddl
jle
inc
sbb
sub
pop
add
cmp
pop
mov
ss
ss
push
xchg
fbstp
sub
mov
aas
pop
popa
mov
sbb
xor
mov
push
std
mov
push
shll
adc
ljmp
dec
xor
test
ret
bswap
pop
mov
fstps
repz
adc
add
and
mov
xchg
and
lds
sahf
hlt
mov
sub
fistpl
das
rcr
loopne
outsb
inc
fstps
push
out
in
push
cmp
cmpsb
in
in
adc
xor
xchg
cs
and
shrl
aam
xor
xchg
adc
js
test
insl
add
cmp
mov
loopne
je
and
mov
lahf
fildl
xor
jnp
xchg
inc
andb
mov
cmc
sbb
popf
fcoml
sbbb
dec
jbe
dec
sqrtps
push
xor
adc
xchg
cli
add
push
mov
fisttpl
loop
bswap
rorb
loopne
pop
inc
mov
adcl
pop
pusha
fadds
outsl
dec
jo
lds
add
jg
lods
clc
loopne
push
jl
lock
sub
add
push
cmp
pop
mov
loope
je
dec
rcrb
and
cltd
mov
sahf
lea
mov
adc
fwait
mov
push
or
stos
hlt
adc
add
mov
loopne
dec
dec
sub
mov
adc
push
dec
lret
or
icebp
loope
stos
sti
pop
mov
or
mov
pop
fidivs
mov
clc
add
jbe
dec
cmc
inc
pop
push
dec
sbb
sahf
test
sub
pop
jne
and
shl
inc
dec
pop
cmp
aad
mov
push
jmp
sbb
stc
lock
jmp
inc
jo
sbb
inc
andb
inc
jns
fsubrp
pop
dec
cmp
xor
outsl
std
add
push
cmp
call
in
daa
push
dec
mov
add
sahf
pop
and
insb
adc
bound
xor
lds
cld
mov
les
aas
int
cmpl
leave
movsl
pop
dec
daa
pop
or
and
xor
mov
or
xchg
popf
ss
sbb
mov
xlat
test
out
push
fisubl
cmp
xor
mov
push
mov
sub
pop
jb
dec
xlat
push
cmp
dec
mov
call
dec
cmp
mov
push
add
dec
jg
icebp
inc
add
pop
sub
cmp
adc
aaa
and
inc
mov
jae
add
bound
or
loopne
fdivrs
ret
fstps
or
mov
dec
bound
adc
enter
push
jo
and
or
and
jp
cli
rclb
sbb
clc
lret
or
ja
jo
in
lahf
in
cltd
ljmp
mov
lahf
mov
sub
dec
xchg
lods
and
out
stos
push
push
in
ja
out
dec
mov
fwait
arpl
jno
lods
out
pop
int
dec
in
rcrb
ret
outsl
lea
mov
mov
inc
sub
push
clc
jl
dec
xchg
xor
push
sub
push
adc
add
and
push
jmp
insl
push
push
cmp
jecxz
stos
pop
popa
cs
jmp
into
lods
xchg
mov
mull
leave
int3
cmp
ljmp
mov
mov
sbb
pop
pop
mov
sbb
jge
xlat
mov
jge
push
lods
xor
xchg
adc
xchg
fnstcw
popa
jno
pop
cwtl
les
cmpl
mov
lods
incl
push
out
pop
push
cwtl
and
mov
jbe
fisubrl
dec
movsl
insl
icebp
sub
fcoml
out
xchg
jl
mov
xchg
xor
in
xchg
sub
jbe
cmpsb
lods
lods
dec
lods
jle
cli
mov
lock
std
pop
movsb
mov
cld
mov
fstps
stos
ret
popf
pop
sbb
imul
inc
add
mov
popf
sub
mov
xlat
mov
add
rol
das
mov
sub
aad
mov
sub
sbb
push
icebp
imul
pop
sbb
aam
cmpb
dec
inc
mov
test
dec
cmp
imul
pop
and
call
iretw
js
mov
ficompl
cmp
xchg
ljmp
rcll
dec
ret
stos
add
adc
and
cmc
and
add
xchg
mov
cltd
lods
insb
jbe
inc
or
fildll
push
xchg
inc
stos
movsb
mov
jbe
push
int
jno
cmpsl
lret
ret
jl
mov
repnz
loop
pop
es
inc
gs
test
ss
lret
jg
int
push
dec
imul
inc
jb
in
call
cs
cli
xchg
push
lds
fimull
sbb
out
mov
push
mov
or
bnd
cltd
int
and
aad
outsl
popf
in
adc
inc
mov
cmp
pop
aas
clc
inc
pop
sbb
mov
adc
inc
push
cli
pop
push
cmc
mov
cmp
and
fbld
test
out
nop
scas
xor
int3
vcvtps2dq
imull
mov
movb
movlps
or
pop
sub
nop
mov
xor
les
mov
fcomi
lea
aas
ja
popa
movsb
in
loope
and
out
inc
mov
or
test
xchg
into
in
cmp
xor
es
lock
and
sbb
and
jg
dec
shl
cmp
jmp
test
cmp
je
fnstsw
xor
sti
call
dec
movsb
sbb
popl
das
push
aas
int
rclb
push
lea
icebp
enter
pusha
dec
sub
jp
loopne
jmp
test
sub
pop
push
xorb
scas
into
fistpll
xor
enter
int3
or
rorb
dec
add
push
cmc
jnp
pop
push
push
dec
cmp
mov
inc
pop
adc
adc
outsl
lahf
push
sub
outsl
scas
das
dec
andl
pop
std
js
or
jmp
pop
jle
sar
inc
fnstsw
inc
push
les
cmp
aas
or
mov
fidivl
rorb
jmp
pop
sbb
into
dec
mov
imul
je
divb
aam
stc
cs
insb
xor
mov
adc
lret
adc
jnp
push
loop
mov
mov
cmp
mov
dec
mov
cmp
out
mov
movsl
xchg
dec
iret
sub
xor
mov
inc
xchg
cmpsl
ljmp
loope
mov
add
inc
addr16
out
xchg
mov
test
test
and
sbb
loop
into
movsl
cltd
sbbl
sahf
adc
xor
mov
push
add
mov
sbb
pop
mov
adc
lret
mov
aaa
out
lahf
fwait
addr16
jge
pop
out
repz
and
dec
pop
sbb
xchg
cmpsb
or
dec
and
out
and
add
loope
inc
repnz
imul
fdivl
repz
arpl
cs
lods
cmpsb
jbe
cmpsl
mov
jg
stc
mov
jb
jge
inc
and
sub
sbb
jae
jno
xchg
dec
fdivs
mov
fcomps
sub
push
ficoms
cmp
int3
and
int3
and
out
push
dec
sbb
push
xor
aas
mov
lods
pop
in
sti
mov
sarb
xchg
cmpsb
cmc
sti
adc
call
movb
stos
insl
or
loopne
popa
in
adc
adc
xchg
jo
adc
xchg
dec
ja
out
jle
or
dec
mov
cmp
aaa
xlat
inc
enter
or
xor
imul
mov
and
jo
sub
xchg
sahf
rol
cmp
fidivrs
push
setns
dec
int3
xor
sti
jle
loopne
nop
pop
mov
xor
jae
fsts
ret
mov
push
shlb
cmpsb
mov
pop
adc
int3
mov
fisubrl
jp
sub
insl
cli
mov
inc
xor
xchg
aaa
mov
jo
popa
popa
inc
xchg
fs
pop
add
fisttpll
mov
out
pop
pop
inc
scas
icebp
xchg
sub
int
jno
outsb
inc
jns
inc
stos
sbb
mov
inc
cmc
ficoml
lock
jno
push
or
dec
cmp
jo
out
mov
mov
push
cmp
shlb
fsubrl
push
push
sarb
loop
in
loop
push
and
inc
jb
push
aaa
xchg
add
insl
cmc
sub
lds
bound
mov
fsubs
call
pushf
xor
mov
add
mov
ja
stc
or
sbb
sbb
jecxz
or
jae
xchg
in
push
insl
fsubrl
shrb
and
bound
mov
lcall
repnz
mov
cmp
das
push
cmp
ss
add
loope
enter
pop
add
fistpll
jg
int3
bnd
dec
sahf
adc
xor
xor
mov
dec
leave
jno
sbbl
mov
mov
dec
add
into
jle
icebp
cmp
jae
les
lods
xchg
ljmp
sbb
mov
out
or
jb
mov
sub
push
js
push
jg
xchg
ljmp
dec
mov
push
push
xchg
jo
ja
aam
sub
add
popa
fwait
add
add
dec
push
data16
mov
jl
mov
das
jne
loop
sbb
inc
mov
in
mov
cmp
adc
outsb
mov
push
or
loop
xlat
ja
xorb
lret
fdiv
adc
mov
xor
out
rclb
rorb
xchg
fcoms
addb
mov
out
xchg
test
adc
jecxz
test
aas
mov
inc
mov
jno
cmp
int3
mov
out
cmp
inc
add
std
lea
and
addr16
sub
stc
jg
cmp
mov
sbb
cwtl
ja
mov
mov
enter
add
les
testb
bound
arpl
imul
ficompl
cmp
cmpsl
mov
iret
mov
cltd
popa
mov
or
mov
mov
lock
fisttpll
iret
jns
mov
and
xlat
mov
push
jnp
xor
dec
comiss
inc
push
lods
sub
xlat
hlt
inc
xchg
call
js
push
add
adc
xchg
outsb
xchg
jae
hlt
shlb
pop
jmp
andb
xlat
dec
push
in
movsb
aad
pop
ja
repnz
push
xchg
clc
test
and
mov
sti
and
add
bound
xchg
xor
aam
jle
push
lea
fwait
pusha
jge
jno
pushf
add
add
sub
js
inc
bound
cmpxchg
ja
mov
xchg
addr16
stos
mov
sbb
jp
xor
fists
push
jmp
jns
pop
push
fnop
push
outsl
cltd
add
adc
xor
adc
push
in
mov
loopne
mov
pop
push
jp
inc
inc
sub
xchg
inc
or
cmp
int3
jle
push
mov
fmul
roll
add
out
jne
loop
sahf
lods
xchg
aad
dec
jne
mov
sub
inc
lahf
fs
and
nop
lods
mov
popf
cmpsb
xchg
jbe
push
xor
std
pusha
jl
adc
xor
mov
imul
ljmp
jmp
adc
or
aaa
fs
ja
jne
popf
test
mov
gs
int3
repz
fstp
jg
xor
int
dec
inc
cwtl
fwait
or
ljmp
mov
add
sub
test
gs
lods
push
mov
addr16
incl
inc
sub
add
imul
add
add
loop
or
adc
aas
inc
shlb
sub
bound
push
imul
jbe
add
dec
shr
xorl
fidivrs
and
xchg
add
xchg
aad
push
pushf
sahf
xchg
js
add
mov
adc
ss
xchg
cmp
ret
shrb
ss
xor
imul
mov
jge
int
jle
add
popa
jmp
dec
mov
sub
add
mov
call
pop
or
mov
in
outsl
rorb
push
pop
testb
xchg
dec
and
stc
xchg
insb
cmp
lock
pusha
adc
jae
push
mov
fmull
into
pop
stc
xor
xchg
add
jp
out
cmp
imull
adc
int
scas
sbb
sbb
or
inc
add
ds
cmp
xchg
push
mov
cmc
ja
dec
xor
mov
insl
push
mov
movsl
pop
roll
cmp
adc
mov
out
popa
sbb
fwait
lods
icebp
in
push
mov
out
std
jp
pop
rcrb
sbb
sbb
dec
cmp
stos
aam
int
arpl
fsubrl
push
lcall
and
or
xor
mov
or
inc
repz
je
mov
pop
sub
repz
fwait
int
stos
sub
cli
movsb
add
jnp
iret
push
faddl
mov
push
pop
fmull
mov
and
mov
xchg
or
jns
mov
jo
pop
ret
je
jle
xchg
lret
sbb
sub
lahf
pop
fs
aaa
in
add
testl
pop
inc
pop
add
dec
lds
cmpsb
pusha
and
nop
sbb
xchg
insb
andl
cs
pushf
sbb
pop
outsl
sahf
es
je
loope
daa
bound
out
inc
and
xlat
cmpsl
mov
sar
rol
pop
lds
ficompl
gs
aas
outsb
dec
sbb
fldl
mov
testl
ja
xchg
and
shll
sbb
mov
mov
cmp
xchg
lcall
adc
sub
xchg
push
sahf
rcrb
aam
add
out
or
fcomps
or
call
and
mov
mov
loope
xchg
xorb
lods
sbb
sbb
mov
push
push
sub
mov
push
mov
lcall
pop
jo
roll
jl
scas
imul
adc
jae
push
sub
and
adc
into
add
adc
lea
out
adc
out
inc
jb
repnz
jle
fistpll
mov
dec
add
mov
mov
lret
hlt
push
or
lcall
out
mov
cmp
nop
sbb
xchg
add
pop
scas
ror
push
add
test
lea
pop
shlb
mov
adc
ss
out
mov
push
xor
and
xchg
cli
imul
pop
test
std
dec
jo
cmp
cmpsl
jecxz
push
add
cs
xchg
ror
sub
fisttps
dec
and
or
imull
pop
pop
push
lret
jg
into
jg
hlt
sbb
mov
pop
in
sbb
adc
or
int
adc
fldt
push
aam
push
insl
xorl
cmpsl
rclb
rorb
sub
sbb
inc
add
sbb
nop
cmpsb
push
fisttps
add
test
push
mov
stc
out
fldcw
inc
sarb
push
xchg
dec
sub
outsb
arpl
fcomps
les
mov
sbb
xorl
inc
movsl
icebp
ja
das
xchg
clc
cmp
push
sub
scas
xor
xor
imul
les
inc
cmpsb
adcb
pusha
or
pop
shlb
xor
repnz
clc
mov
dec
add
rcll
stc
nop
aad
mov
test
xchg
mov
mov
out
jecxz
popa
mov
push
fidivrl
jg
mov
in
sbb
ja
and
call
pusha
lea
mov
pop
into
xchg
pop
mov
xor
push
dec
mov
stos
outsl
out
shrb
pop
movsl
negl
not
push
push
sbb
add
push
mov
jne
sub
mov
mov
push
xor
cmp
adc
mov
xlat
jno
iret
mov
cmp
jg
mov
sub
cli
mov
repz
cmp
sbb
mov
jo
push
mov
lods
mov
cmc
sub
stos
lret
xor
movb
imul
pop
mov
xchg
push
xchg
insb
sub
xchg
cmp
mov
jnp
inc
jp
sub
fnsave
clc
pop
bound
das
adc
addl
sub
mov
rorl
mov
push
push
pop
xlat
jb
add
lods
aas
sub
movsl
push
push
filds
push
xchg
dec
mov
movsl
cmp
jbe
push
mov
push
out
mov
xchg
jle
ds
and
in
mulb
push
in
cmp
inc
fs
outsb
cmp
xchg
test
push
inc
or
pop
in
aas
cwtl
mov
push
push
push
mov
mov
mov
dec
mov
icebp
ret
and
cmpb
pop
mov
or
in
rcr
cmpsb
cmpsb
jnp
add
repnz
mov
in
imulb
mov
sub
jns
mov
andb
stc
push
and
push
jp
les
mov
jge
scas
jp
pop
dec
mov
fcompl
and
aam
dec
test
and
push
sbb
cmc
jl
and
pop
xor
pop
movsb
sbb
sbb
lock
int3
std
jecxz
xchg
in
mov
cmp
and
dec
addb
icebp
pop
sub
cwtl
xchg
xlat
stc
sub
cmp
push
into
out
sub
fisttps
ds
scas
push
and
xor
adc
sub
test
bound
in
xor
dec
sbb
in
and
cmp
adc
cwtl
push
sbb
cwtl
mov
ljmp
lahf
in
fcmovne
inc
mov
push
dec
dec
aam
jbe
push
pushl
mov
jle
into
dec
pop
pop
orl
pop
gs
in
pop
add
in
xor
js
in
ljmp
or
lret
dec
mov
stos
das
jo
std
and
subl
push
push
fisttpll
outsl
int3
and
cs
add
xchg
push
and
fiaddl
fisubl
test
pop
jbe
and
mov
jo
sub
stos
lods
out
out
inc
inc
pop
mov
stos
test
andl
xor
outsl
jae
xchg
mov
int
stos
cmp
sub
xor
loope
aad
mov
mov
divl
cmp
push
dec
test
adc
pop
aaa
aas
pop
and
sahf
jp
das
in
fwait
je
js
jle
push
and
mov
adc
fstpt
mov
or
or
int
push
pusha
mov
adc
into
pop
sub
push
sbb
int
push
jmp
inc
xor
idivl
dec
xchg
cmc
pop
repz
push
out
outsl
loope
in
imul
jns
pop
mul
sti
mov
shld
jbe
jmp
jecxz
das
cltd
arpl
js
push
js
dec
shll
mov
popa
sbb
mov
repnz
xchg
add
insb
sub
add
sbb
je
fs
dec
sahf
xchg
jns
dec
int3
push
mov
mov
sub
or
jle
sub
mov
jne
scas
scas
push
outsb
rcll
sub
cmpsl
incb
ss
mov
out
fs
add
and
jmp
out
in
mov
jmp
iret
nop
cmp
jbe
jo
dec
dec
notb
cmp
sub
or
mov
stos
xchg
lret
ficompl
mov
xchg
lret
mov
xchg
add
mov
push
sub
and
mov
filds
das
out
jp
daa
or
cmc
sub
mov
sbb
mov
test
lea
data16
test
int3
inc
cmp
mov
xlat
rcr
or
sbb
dec
xchg
sbb
mov
dec
jmp
dec
jg
dec
notl
xor
out
mov
fstl
mov
dec
pop
insb
shll
stos
adc
mov
pop
push
filds
dec
jb
push
and
lahf
rcl
mov
or
xchg
into
cwtl
cmp
hlt
jl
lcall
push
outsb
subb
mov
adc
ds
aam
pop
fisubrs
ja
add
dec
sub
mov
int
and
sub
and
add
jns
lcall
push
pusha
jae
nop
xchg
call
stos
fldt
out
rorb
jecxz
call
gs
inc
cld
mov
xchg
sahf
mov
or
mov
lahf
enter
ret
push
repnz
pop
je
xchg
jno
add
inc
fists
cmp
push
popa
jp
cltd
jg
xlat
xor
jno
stos
cmpl
add
cmc
addr16
out
dec
aas
lods
ret
out
jg
add
mov
pop
lcall
cli
or
incb
cmp
sub
mov
mov
mov
mov
sbb
out
cmp
stos
sbb
fs
push
push
push
movsb
movsb
aad
decb
xchg
cmp
push
xchg
lret
lods
cs
das
sub
mov
imul
xchg
inc
sti
fsts
test
push
lock
inc
test
or
fsubrl
cmpsb
imul
mov
out
jmp
and
xchg
ljmp
mov
aad
sti
adc
dec
bound
sbb
sbb
cld
sub
cmp
xlat
out
mov
rcrb
jb
add
mov
pushl
xor
mov
test
mov
or
leave
cmpsb
enter
in
enter
nop
xor
mov
xlat
test
jae
mov
je
fdivs
push
les
lret
push
push
push
in
jbe
inc
ja
mov
hlt
sbb
icebp
xlat
cmp
out
push
lret
popa
sub
xchg
push
mov
fdiv
mov
or
sub
mov
mov
add
insl
cltd
roll
pushf
iret
and
xchg
lods
rcrl
sbb
mov
fnstcw
add
pusha
loopne
mov
shll
subl
sbb
add
mov
cmp
inc
decl
inc
test
icebp
xchg
fistpll
mov
aad
push
addr16
decl
cld
mov
sahf
inc
lods
push
and
cmc
mov
xlat
fadd
lods
xlat
cmp
cmp
test
mov
test
push
subl
jg
pop
out
in
in
fildl
mov
fmull
negl
std
or
stos
ja
ja
mov
mov
out
cmp
push
push
push
adc
lock
sbb
sbb
les
xchg
mov
inc
rorl
movsl
leave
in
xor
outsl
ja
rorb
add
mov
dec
pop
adc
outsl
shl
test
jbe
out
insl
pop
arpl
sub
xor
popa
cltd
fs
gs
jmp
ja
mov
and
sbb
loop
fnop
xchg
or
jmp
out
sub
fcompl
push
add
std
lods
sub
pop
fwait
cmpsb
jnp
and
lods
arpl
lret
xor
push
push
outsl
inc
inc
cmc
rcrb
jo
cmp
call
pop
mov
or
inc
and
je
lcall
mov
icebp
inc
cmp
pop
fwait
jo
and
or
in
sahf
push
es
mov
add
ret
push
xor
xor
mov
jns
jne
jno
clc
adc
shl
ret
cwtl
inc
xchg
xor
jmp
es
cld
popf
mov
mov
dec
push
pop
push
mov
lea
pushf
into
insb
pusha
add
lods
lods
out
leave
nop
shl
mov
scas
aaa
out
test
dec
push
lods
out
xchg
pop
pop
cmp
js
ljmp
xor
lea
loope
add
sbb
and
jbe
pop
inc
cli
cmp
mov
sti
push
loop
scas
cmpsl
jo
fistpll
dec
jo
mov
jle
sbb
sti
pop
in
jecxz
repz
bound
mov
jbe
push
push
insb
daa
cmpsb
in
sub
ds
sbb
rcrb
add
inc
xor
stos
inc
fs
sub
inc
aam
subl
push
scas
movsb
sub
jnp
test
pop
cmc
mov
mov
or
adc
and
lret
mov
je
or
or
stc
dec
pop
xlat
mov
repz
xchg
jge
lock
or
ss
add
fwait
inc
push
and
pop
adcb
int3
and
cmp
dec
add
dec
cwtl
je
inc
adc
nop
cwtl
sub
xchg
inc
xor
push
in
xor
mov
scas
or
pop
sub
fistl
outsb
mov
xchg
push
lahf
push
jbe
fisubrs
dec
je
jae
pop
dec
es
and
xchg
mov
lret
xchg
jmp
xbegin
dec
mov
and
adcb
leave
rcl
jne
xchg
rorb
push
lcall
js
mov
cmpsb
imul
dec
fwait
jae,pt
fimull
aaa
rolb
test
insl
out
fsts
push
lods
dec
push
mov
inc
push
xchg
imul
mov
pop
dec
or
jns
out
push
cwtl
mov
jb
sub
fwait
sub
lea
xor
mov
push
mov
in
movsb
xor
sbb
inc
mov
inc
jno
push
mov
aas
aaa
pop
and
psubusw
mov
push
int
add
add
cmp
movsl
jno
cwtl
neg
adcl
imul
inc
aad
lahf
aad
das
ret
fwait
repz
dec
loope
mov
aas
stos
into
sbb
mov
test
jbe
in
mov
ljmp
cmc
push
cmpsl
mov
imul
and
test
xor
in
or
in
jl
or
mov
jns
fmuls
mov
mov
cmc
rcll
ljmp
jle
imul
idiv
pushf
dec
mov
js
xchg
push
pop
and
stos
push
lea
aam
sbb
push
leave
fnstcw
xor
jnp
mov
cmp
out
lea
cmp
mov
adc
jbe
xlat
mov
and
in
sub
aaa
loope
push
jbe
testl
jnp
sub
push
xchg
pop
leave
testb
adc
mov
pop
sub
ja
loop
or
daa
je
in
push
dec
xor
nop
mov
lds
loopne
dec
add
mov
fcom
into
cli
lcall
push
xlat
jecxz
mov
mov
out
mov
mov
hlt
cmc
xchg
inc
jne
sub
adc
mov
mov
popa
fs
test
addb
les
in
data16
pop
dec
in
fcomip
aas
mov
mov
dec
dec
sarb
rcr
push
aam
inc
adc
les
mov
mov
mov
aad
cmpsl
dec
dec
or
jb
repnz
jnp
push
cmp
dec
fbld
xchg
popf
add
push
call
xor
xchg
outsb
sti
movsb
mov
and
inc
loop
test
push
adc
pop
fstpl
dec
push
jne
ja
mov
sub
and
stos
rolb
sarl
arpl
mov
or
xor
inc
adc
rcrl
sbb
inc
sbb
adc
xlat
and
sub
cmpsb
pop
mov
push
stos
in
push
pusha
fwait
cmp
push
fcoms
mov
movsl
jb
jno
lods
mov
in
xchg
aam
push
jns
xchg
ret
adc
dec
add
dec
pop
fs
or
aaa
cltd
cmp
dec
push
mov
jge
jae
lock
mov
arpl
mov
inc
xchg
test
aaa
pop
stc
imull
lock
bts
in
arpl
stc
add
push
mov
clc
stos
mov
jae
jno
jbe
fwait
rorl
sub
mov
stos
cmp
or
cs
test
mov
in
out
insl
jno
adc
inc
or
shll
jo
mov
fwait
cli
loopne
xchg
rol
add
fdivl
xor
test
std
roll
lea
push
stos
mov
cmp
jb
roll
add
out
pushf
pop
and
insb
test
pop
pop
sbb
ret
iret
ds
lea
mov
jno
lods
cltd
adc
xchg
stos
sub
jl
in
and
lret
arpl
test
mov
lods
into
mov
std
dec
inc
fsubrp
sbb
adc
fidivrs
pop
push
xchg
adc
mov
sub
std
rcrl
jns
push
mov
mov
push
xchg
inc
test
shl
jo
loope
hlt
cmp
mov
sahf
gs
loope
or
pusha
pop
iret
out
dec
fstps
mov
inc
call
ljmp
pop
outsb
xchg
push
adc
lcall
gs
int3
imul
aam
mov
cmp
hlt
and
mov
jmp
lock
pop
test
mov
enter
rcl
sbb
js
jl
outsb
int
data16
arpl
pop
xchg
dec
or
lock
cmp
push
jnp
mov
jl
out
push
adc
cwtl
jns
push
fisubrs
adc
insb
cmp
lock
cmp
sub
push
enter
outsb
cltd
loope
lret
std
cli
mov
push
cs
iret
sbbb
sti
fidivrs
mov
push
xchg
sahf
push
xor
fsubrl
dec
scas
xchg
inc
pop
sub
ss
pop
sub
inc
xor
adc
ffreep
dec
ret
fistl
jmp
mov
sbb
loopne
into
fstpl
mov
xorb
xor
cli
or
jne
stos
jmp
add
je
jp
pop
mov
imul
hlt
shrl
add
outsl
shll
icebp
mov
ljmp
cmpsb
mov
push
inc
mov
inc
and
pop
jne
shlb
es
jmp
ficomps
sub
pop
rcrl
push
push
jl
adc
outsl
ljmp
std
ret
roll
push
out
pusha
mov
push
loopne
aas
and
fsts
mov
push
bound
or
fildll
mov
mov
add
aad
push
dec
jno
loope
mov
mov
rclb
mov
inc
outsl
pop
aad
hlt
sbbl
xor
push
addl
adc
push
mov
pop
stos
cmp
mov
mov
aad
iret
cmpsl
mov
cmpsl
ret
cmp
stos
inc
dec
int3
rorl
adc
gs
mov
shrl
sub
add
push
shll
mov
xor
or
ja
inc
xor
outsl
push
mov
pop
loopne
popf
jb
pop
inc
dec
push
dec
cwtl
xchg
lahf
add
jp
repz
pop
mov
jge
and
idivl
outsl
es
iret
out
cmp
sub
daa
mov
xchg
in
test
subb
mov
scas
roll
cld
sbb
and
pusha
int
std
ds
cmc
inc
or
or
icebp
cs
jg
leave
ret
cs
and
push
loop
jae
and
jp
cmp
or
xchg
cmp
and
rclb
add
add
sbb
lcall
adc
inc
pop
cli
sahf
push
and
pop
lret
push
dec
mov
mov
leave
cli
add
int3
scas
jmp
xor
cmp
ret
jmp
sarl
loope
fwait
cmp
lea
popa
mov
mov
cltd
push
pushf
or
sbb
mov
fildl
imul
iret
add
stc
cld
fmul
or
mov
rorb
xchg
sbb
leave
adc
loopne
cli
jno
add
or
fmul
lahf
in
cs
push
pop
mov
out
jo
dec
inc
movsl
pusha
add
sti
test
mov
jmp
xchg
push
adc
jne
fdecstp
xchg
aam
test
push
insl
jno
scas
mov
mov
sbb
jo
dec
test
mov
fs
aas
adc
lock
fisubrs
adc
out
cs
faddl
jbe
insl
jge
paddq
out
mov
mov
icebp
cld
push
lret
cmpsl
lods
int3
jp
ja
mov
in
pop
push
or
dec
and
push
dec
cmp
inc
jb
fnstsw
push
inc
fwait
mov
cmp
pop
mov
xchg
shlb
addr16
fildl
xchg
push
bound
mov
lcall
push
adc
nop
scas
sub
dec
out
or
or
ljmp
int
mov
mov
mov
rcl
imul
leave
fwait
push
jne
rcr
loopne
punpcklbw
test
loopne
into
in
mov
inc
in
jnp
and
cltd
adc
sbb
nop
jno
insl
adc
sub
mov
dec
push
daa
out
adc
xor
mov
test
mov
mov
loop
sarl
sub
addr16
pushf
push
lret
cld
jns
add
dec
addl
pop
inc
ret
orl
mov
sub
div
repz
pushf
fmull
inc
shlb
xor
scas
out
mov
cmp
xchg
jmp
repz
inc
inc
shrl
outsl
data16
mov
sbb
jge
jno
loopne
pop
lods
mov
pop
mov
mov
xchg
mov
shrb
cld
inc
jb
pop
int
scas
ljmp
arpl
sahf
pop
fwait
sub
repz
std
imul
loopne
pop
inc
pop
rcll
in
popa
in
pop
loope
sbb
push
add
movsl
mov
push
movsl
mov
jne
and
mov
rorb
pop
data16
repz
notl
push
jno
jle
fisubrs
add
inc
movsb
sbb
mov
movsb
mov
shl
cltd
xor
enter
js
xchg
sbb
js
jp
in
mov
mov
in
sbb
or
dec
dec
into
out
cltd
hlt
out
pop
mov
xchg
imul
ljmp
or
ret
or
es
inc
icebp
inc
sub
add
popf
lods
xor
mov
daa
mulb
mov
mov
mov
fwait
push
inc
sub
cmp
mov
mov
gs
or
and
lret
add
inc
popa
push
testl
imul
repnz
add
nop
add
gs
in
mov
das
and
aaa
dec
jl
fstl
cmp
fsub
add
or
mov
mov
iret
xchg
push
dec
mov
or
movsb
paddq
xlat
lock
add
hlt
es
cmc
adc
mov
fnstcw
movsl
push
cmp
out
in
not
es
das
imull
addl
lret
loopne
das
clc
cld
fnstsw
stos
loopne
mov
mov
nop
push
xchg
fistpll
jle
test
es
dec
add
insb
sbb
mov
push
shlb
fldcw
aas
into
je
push
push
xor
pop
sub
cmc
out
mov
sahf
push
shrl
sub
push
and
jo
mov
imul
ret
xor
aaa
call
aad
daa
inc
lahf
das
shll
testb
adc
out
nop
and
scas
sti
push
daa
negb
xchg
jbe
pop
xor
mov
lods
dec
testl
mov
pop
mov
xchg
dec
push
in
out
add
daa
rolb
pop
imul
mov
cmp
xchg
mov
rcr
int3
roll
mov
mov
push
push
sub
lods
adc
stos
xchg
call
lret
pop
xchg
fimuls
or
mov
pop
jbe
test
xchg
jmp
sbb
pop
sub
xchg
push
int3
mov
pop
movsb
inc
jle
xor
rcll
push
push
pop
and
inc
inc
mov
popf
hlt
or
jecxz
mov
inc
sbb
dec
test
ret
add
fidivl
sub
mov
shll
jb
dec
fsubs
mov
sbb
int
outsb
aas
dec
sub
push
sub
in
push
add
push
arpl
sti
pop
dec
jo
sub
jns
rcl
sarl
mov
ja
pop
ds
insl
jge
push
scas
leave
inc
dec
outsb
enter
and
and
cmpsl
insb
dec
push
cmp
arpl
popf
mov
rcrb
inc
dec
daa
sub
mov
in
out
sbb
rcll
clc
add
sbb
mov
imul
mov
cmp
mov
outsl
cmp
jb
inc
adc
sbb
and
int
jle
cltd
je
mulb
mov
inc
test
xorb
call
frstor
fsubrs
orl
lret
adc
mov
or
inc
mov
stc
adc
decb
push
loopne
insl
fs
and
mov
add
enter
scas
push
inc
jp
fstpl
mov
xor
ret
inc
add
add
nop
aas
push
stos
ret
fsubs
push
mov
xchg
jmp
hlt
aas
and
mov
adc
sbb
mov
ret
mov
mov
lods
xchg
xchg
mov
cmp
and
loope
jmp
push
pop
mov
or
into
outsl
nop
mov
push
adc
add
lcall
ret
cld
push
out
and
ljmp
sbb
imul
fisubl
mov
call
mov
mov
xchg
mov
jno
shll
jae,pt
pusha
sarb
ret
push
int3
js
cmp
sub
xchg
fisubl
insb
or
fcmovnu
jecxz
ret
jmp
mov
call
test
cli
call
lods
xchg
sub
das
cltd
mov
dec
pop
adc
cmpsl
std
popa
dec
xchg
pop
pop
inc
repz
arpl
sub
pop
or
in
cltd
push
mov
aas
daa
mov
shrb
jp
dec
nop
add
pop
daa
dec
add
mov
push
cmp
mov
add
subl
clc
and
cmpsl
adc
cmc
push
lret
movsl
fmuls
jg
sbb
sbb
adc
pop
ja
sbb
jl
jb
push
pop
stos
les
xchg
dec
xchg
jg
out
loop
pop
sbb
movsl
or
adcb
push
push
xor
in
xor
scas
xor
ss
in
lea
inc
cmp
mov
daa
int3
xor
mov
add
movsb
sbb
xorl
mov
and
xchg
push
push
andl
sbb
or
xchg
mov
in
add
jl
shlb
push
test
ret
push
mov
pop
fisttps
dec
xchg
popf
xlat
xor
loope
jno
clc
pushf
ror
cmp
idiv
push
pop
adc
shr
scas
xor
test
fcmovbe
inc
sahf
jnp
movsl
cmc
mov
fnsave
jge
xchg
jmp
and
shrb
ds
mov
jecxz
jne
push
daa
xorb
jle
mov
test
mov
cs
testb
fcmovnb
int
insl
xchg
sbb
sub
jecxz
inc
jnp
mov
inc
and
shll
or
jp
xor
in
subl
aam
push
sub
bound
lds
rclb
xchg
push
pop
in
or
or
insl
fldenv
icebp
enter
or
popf
cmp
nop
xchg
cmpsl
mov
add
je
pop
in
lock
ja
fidivrs
cmp
in
sub
lcall
sbb
call
std
xor
dec
scas
sarb
mov
mov
mov
aad
dec
pusha
jmp
adc
aas
pop
cli
mov
add
jne
pushf
mov
mov
and
movsb
in
jp
push
xchg
mov
aam
fcoms
into
pop
aas
cmp
outsb
imul
lods
outsb
pop
add
pushf
shlb
xor
xchg
xlat
cmp
push
push
jmp
inc
iret
adc
pop
jns
jae
sbb
shl
lahf
fs
in
or
dec
jbe
ds
movsb
aaa
outsl
sub
sbb
mov
mov
xor
mov
idivl
mov
dec
mov
sub
or
lahf
cld
jbe
repz
xor
mov
jbe
push
xor
mov
adc
ja
dec
and
bound
cltd
jnp
cmp
repz
inc
cmpsl
sub
enter
push
push
cmp
pop
fdivl
out
xor
push
lea
hlt
test
lcall
mov
sub
inc
push
push
lods
xor
cli
pavgw
cmp
stos
mov
insb
mov
mov
jle
dec
fnsave
loop
gs
pop
out
jne
mov
inc
push
fsub
dec
stc
es
push
es
xchg
sub
mov
hlt
das
fmul
and
mov
mov
fldl
dec
fdivl
push
out
std
inc
dec
nop
sbb
out
pop
or
lret
sbb
repnz
out
daa
mov
adc
out
imul
and
jbe
add
sbb
jo
cmpsb
push
or
xor
jnp
add
mov
push
sub
sbb
jae
jnp
cwtl
mov
std
push
ss
lret
adc
idiv
out
ljmp
in
stc
cmpsb
and
scas
or
lret
iret
dec
sbb
push
fwait
jg
loopne
es
fwait
sbb
dec
adc
rolb
dec
lahf
xchg
mov
push
mov
jmp
movsb
daa
repnz
sahf
mov
fsubs
cwtl
andl
xchg
test
dec
cltd
inc
mov
in
cs
clc
inc
jb
mov
sbb
mov
mov
cli
jb
lahf
push
and
mov
loope
add
or
pusha
inc
adc
jae
jp
movsb
push
loope
mull
std
pop
movsl
mov
push
push
out
cmc
cwtl
adc
lret
sbb
dec
lahf
loopne
jmp
push
or
scas
mov
dec
fs
sbb
or
xchg
pop
loope
lea
ret
mov
sti
mov
into
leave
insl
cwtl
mov
sti
xor
add
xchg
push
jl
arpl
jl
inc
ss
pop
std
hlt
mov
aaa
adc
out
or
push
xor
and
sub
sub
and
movsl
xor
add
popf
pop
loope
popf
mov
sti
mov
rclb
arpl
fldl
lret
mov
enter
cs
rorb
and
xchg
int
testb
lods
mov
fimull
ret
popa
sbb
ret
push
scas
mov
jne
mov
dec
and
rolb
in
xchg
sub
daa
pop
mov
and
mov
in
mov
xchg
xlat
out
mov
int3
push
pop
aam
and
xchg
mov
dec
or
mov
sub
fwait
in
jp
push
fidivl
ds
ss
jbe
jg
mov
ret
pop
aaa
int3
imul
psubusw
xchg
out
pop
jmp
daa
notl
addr16
add
pop
push
scas
jo
mov
icebp
xchg
decb
inc
jg
or
in
xor
mov
dec
push
test
sub
iret
outsl
push
fists
ds
lret
aaa
arpl
pop
leave
int3
jp
jmp
fisubrl
dec
nop
gs
jb
inc
mov
arpl
or
out
or
loope
rcrl
mov
cmpsl
adc
sub
sub
data16
pop
out
imul
and
nop
jg
mov
pop
mov
mov
jmp
inc
xor
in
adc
sub
stos
aad
aam
inc
icebp
testb
push
shrl
jnp
loopne
mov
mov
orl
in
iret
and
mov
pop
inc
cmp
and
push
jge
or
mov
fs
cmp
xchg
test
pop
sahf
outsl
movsl
jge
test
fwait
xchg
and
adc
sbb
clc
add
fisttpl
dec
lds
push
xchg
xor
or
stc
sub
and
arpl
mov
repz
sbb
mov
adc
inc
scas
push
mov
pop
mov
mov
cmp
shll
dec
mov
ljmp
out
sahf
xorb
xchg
mov
pop
sahf
cmpsl
rcll
sbb
out
sbb
inc
pop
mov
xchg
pop
into
jecxz
adc
nop
int3
pop
cmp
sbb
dec
std
xchg
iret
cmc
gs
aam
cmc
sub
sar
push
js,pn
cmp
push
sahf
in
mov
fucom
pushf
in
int
mov
icebp
mov
jbe
sti
add
mov
int3
fsubr
lea
pop
cmpsl
jno
mov
std
pop
aas
adc
dec
cmc
mov
stos
inc
fsubl
mov
fidivs
jbe
dec
push
add
jecxz
and
push
add
jno,pt
mov
jne
mov
lds
out
inc
cs
push
push
push
js
inc
outsb
adc
shll
outsl
jle
loope
jecxz
fwait
xchg
jge
shl
lock
jmp
pop
inc
push
rcll
fsub
inc
fists
scas
sub
out
sub
jle
mov
and
pushf
xor
dec
mov
pushf
cwtl
mov
push
xor
or
inc
insb
outsl
adc
push
out
or
ret
jmp
cwtl
cltd
push
sub
mov
xlat
movsb
ss
add
sub
stc
sub
aaa
arpl
jp
mov
daa
mov
dec
mov
ljmp
and
pop
jo
pop
push
int
push
sbb
jecxz
and
dec
inc
out
adc
push
cmp
pop
out
cmpsl
mov
fwait
adc
dec
out
pop
sarb
or
int
mov
push
aad
outsl
shll
das
nop
aas
addr16
movsb
pop
jbe
out
push
jmp
jns
sbb
pop
or
ljmp
lock
in
xchg
and
clc
xchg
or
mov
or
rcrb
scas
imull
test
jp
dec
pop
xor
push
sub
icebp
dec
fwait
daa
in
jecxz
push
sub
adc
adc
cmp
je
fdivl
jmp
cmp
jle
cmp
pop
dec
lds
stos
enter
jp
ror
mov
rcll
test
sbb
mov
cli
stos
sub
shlb
cld
add
es
das
and
test
das
adc
inc
or
xor
das
push
inc
loopne
jbe
adc
dec
leave
mov
imul
pop
lds
ljmp
xor
adc
and
arpl
mull
xchg
int
adcl
pushf
jmp
icebp
push
push
xchg
mov
movsb
ja
pop
icebp
gs
mov
cmp
div
mov
push
or
loopne
mov
jg
fxch
popf
xchg
cmp
or
fs
adc
fnsave
cltd
jmp
roll
loope
int3
shrb
pop
cmp
xor
sbb
xor
clc
sub
rorb
cmp
clc
mov
inc
je
or
mov
sub
jne
xchg
push
and
add
xorb
insl
or
cmp
repnz
xchg
sub
out
sbb
shrb
lods
out
jecxz
sub
clc
in
bound
mov
xor
es
ret
pop
mov
jno
xlat
fst
mulb
lret
aad
sub
mov
ret
mov
ss
xchg
jecxz
scas
pusha
mov
xchg
lods
dec
pop
or
inc
rcrb
xchg
xor
sbb
test
imul
cli
gs
or
and
jo,pn
jnp
loopne
push
out
jmp
xor
sub
faddp
in
mov
subps
rorb
xchg
jl
imul
pushw
mov
fistl
mov
scas
lret
mov
cs
leave
xchg
mov
xor
rolb
push
sbbl
js
idiv
test
in
fstpt
iret
mov
cmp
mov
xchg
jne
sahf
cmp
mov
lods
sub
xchg
push
pop
mov
ret
call
loope
inc
pop
es
adcl
test
stos
out
cmc
stc
pop
in
xor
aaa
mov
mov
push
and
stos
fdivr
addb
arpl
repz
mov
xor
pop
push
add
jns
lock
sub
add
dec
xchg
addl
imul
lret
into
hlt
bound
mov
lcall
popf
enter
lret
cmp
or
call
inc
mov
aaa
fwait
push
ret
inc
test
je
lods
adc
push
decb
xchg
xor
cltd
test
push
shl
jbe
mov
es
mov
dec
repz
and
aam
insb
test
jmp
out
in
adc
and
cmp
in
out
sub
xor
in
adc
or
jns
lret
xchg
fldl
mov
pusha
fldenv
xor
cmpsb
xchg
and
sub
mov
lcall
add
push
inc
mov
sub
xor
ds
pop
push
popa
popa
out
out
lcall
js
icebp
out
sub
sbb
or
jmp
jne
mov
das
out
lret
cld
mov
cmpsl
jb
loop
sub
lock
cli
push
adc
cs
mov
add
add
insb
addr16
add
dec
push
xor
mov
mov
mov
pop
nop
xor
dec
cmp
inc
ss
mov
jnp
xorl
lcall
je
ret
int3
or
hlt
fimull
jne
sub
sbb
sbb
xchg
in
stc
popf
mov
rcl
xchg
cmp
mov
pop
and
adc
aam
jmp
mov
jnp
push
test
cmp
fsub
js
mov
or
enter
cmc
fisttpll
pop
imul
mov
push
dec
mov
dec
loopne
adc
lds
xchg
stos
sub
pop
mov
aaa
ret
arpl
stos
mov
int
pop
cmpsl
pop
add
sbbb
hlt
push
outsl
push
notl
adc
push
mov
mov
pop
xlat
xchg
cmp
test
mov
jbe
movsl
push
iret
lock
iret
hlt
std
fxch
mov
mov
repnz
xchg
inc
aaa
adc
outsl
adc
je
arpl
sub
icebp
ljmp
ja
loopne
lods
hlt
and
pop
scas
fsts
testb
popa
addl
idivb
nop
push
or
inc
into
icebp
jmp
rorb
repz
outsl
sahf
jle
roll
pop
fstpl
cli
js
mov
pop
xchg
out
cld
aam
call
push
imul
or
or
xchg
and
mov
cmpsb
gs
cmp
adc
jle
je
lcall
rcr
mov
scas
rcrb
sbb
or
fldl
cmp
mov
das
cmp
nop
lock
rcl
mov
or
repz
loope
cltd
movsb
push
pop
xchg
mov
cmp
push
mov
mov
sbb
imul
andb
not
mov
repz
les
dec
and
dec
iret
inc
xchg
enter
mov
enter
mov
cmc
jns
mov
dec
fmul
mov
xchg
mov
fldcw
inc
ja
add
iret
fldcw
imul
jg
lock
and
int3
cmc
jns
les
jns
jp
dec
scas
aad
pop
sti
push
jl
inc
std
mov
dec
imul
shrb
adc
jle
mov
xchg
lahf
test
mov
lea
loop
in
pop
xor
adc
jo
jecxz
in
mov
jno
xor
mov
jp
or
xchg
outsl
or
sbb
repz
dec
adc
mov
jo
jb
xchg
cmpsl
pop
pop
mov
inc
enter
pop
pop
push
int3
mov
hlt
mov
mov
sub
scas
jge
pop
adc
push
push
shll
push
jp
pop
in
in
adc
mov
add
adc
insb
mov
ljmp
adc
aas
adc
movsb
dec
cmp
fadds
pop
xchg
fwait
mov
mov
or
insb
mov
and
sahf
cmp
jl
cmp
cli
mov
jecxz
cmp
mov
mov
add
arpl
scas
negb
insb
mov
test
mov
test
cmp
mov
fnstcw
inc
mov
lds
outsl
lea
or
sbb
fistpll
mov
add
push
lret
add
test
xchg
pop
arpl
ds
xor
lret
xchg
sub
gs
mov
xchg
enter
stos
aad
fs
cmp
cmpsl
add
lea
sbb
mov
mov
hlt
mov
pop
xchg
call
jecxz
mov
out
jne
or
leave
xor
int
dec
jp
and
xchg
mov
xchg
push
dec
fsub
pop
push
fstl
fcmovne
xchg
lcall
or
stc
dec
outsb
lret
fsts
jnp
scas
cwtl
sar
xchg
sbb
rep
xchg
out
pushf
in
lret
pop
xchg
push
add
andb
mov
mov
orl
add
out
popa
out
int3
jmp
cmc
xor
add
clc
jb
mov
adc
or
cwtl
addr16
push
arpl
jp
jno
ss
mov
push
pop
xor
in
or
mov
imul
xchg
cltd
xor
inc
or
pop
out
mov
fdivs
cmc
out
cltd
arpl
inc
cwtl
mov
ljmp
pop
sbb
xchg
xchg
push
inc
dec
cmp
mov
pop
test
out
inc
add
push
inc
outsb
incb
lock
adc
push
leave
xchg
cwtl
or
xchg
xor
and
clc
es
pop
sub
cwtl
mov
lods
or
mov
fdiv
xchg
outsl
fwait
and
movsb
jmp
mov
les
bound
stos
or
xlat
out
jge
jecxz
mov
or
pusha
xchg
xchg
jecxz
pop
jp
jnp
icebp
mov
xor
loopne
outsl
adc
jb
dec
mov
aaa
decb
sub
jno
icebp
cs
pusha
jmp
jl
scas
out
push
fnstcw
jnp
mov
sub
lock
sarl
pop
xchg
daa
fs
shll
sbb
push
mov
jecxz
mov
mov
scas
or
or
lea
mov
inc
cmp
in
inc
jg
shrl
mov
jbe
aam
inc
push
sub
add
pop
push
js
or
jo
jno
fmull
fdivs
ret
aaa
ja
jnp
test
pop
fldenv
jno
pop
inc
lds
and
bnd
jge
in
outsb
cwtl
push
mov
jle
sbb
movsl
mov
mov
xor
and
mov
mov
mov
test
lock
mov
into
sbb
inc
lods
adc
stos
clc
push
jge
mov
loopne
mov
mov
mov
adc
or
addr16
dec
es
jae
sarb
push
lcall
out
mov
dec
out
test
lock
sub
sub
add
mov
jmp
cmp
lcall
ja
pop
cld
movsl
pop
sbb
and
idivl
cltd
mov
cmp
inc
jle
roll
pushl
cmc
outsb
add
jb
xor
mov
sbb
jns
sub
inc
sub
into
dec
mov
cli
sbb
sub
dec
adc
fidivs
loopne
inc
testl
mov
pop
stos
ret
push
mov
mov
or
stc
repz
cmpsb
mov
aas
test
test
scas
hlt
sbb
adc
mov
xchg
rorb
cli
xor
out
mov
lahf
cs
inc
pop
inc
ret
lret
jecxz
inc
testb
scas
mov
cwtl
adc
mov
movsb
inc
ret
loopne
outsb
cmp
icebp
and
dec
mov
imul
int
jne,pn
shlb
dec
repnz
rorl
or
xor
mov
lret
mov
inc
gs
push
scas
mov
js
in
insl
lds
inc
mov
bound
lods
sub
add
push
int3
mov
insb
insl
inc
xchg
cmpl
int3
idivl
jge
pop
loope
fsubrl
push
into
aas
sbb
or
adc
cmp
lds
popf
fs
adc
pop
mov
cmpsb
jmp
xchg
imul
push
mov
mov
sub
or
jno
jbe
lea
xor
rcl
scas
mov
loopne
leave
scas
aam
pop
adc
dec
pop
je
and
pop
fldcw
sub
inc
push
push
call
call
xlat
pushf
jnp
pushf
mov
push
xchg
lahf
mov
xor
fdivs
shrb
rorb
pop
push
dec
movsl
movsb
pushf
push
int3
push
mov
es
aaa
scas
jecxz
inc
dec
lock
ss
push
inc
push
mov
xor
mov
mov
xlat
std
out
enter
decl
inc
test
mov
sub
scas
inc
mov
inc
stos
and
stos
out
jmp
push
inc
jmp
inc
sub
push
push
notrack
jge
mov
aaa
adc
sbb
mov
xor
je
or
cmpsl
jb
jnp
xchg
iret
push
pop
shl
or
ja
adc
mov
test
sbb
dec
xor
es
add
dec
fsubrl
mov
test
push
outsb
and
in
xchg
xchg
scas
data16
out
or
js
mov
mov
mov
iret
or
stos
lds
lock
lahf
iret
lret
in
add
popf
inc
lahf
fmuls
pop
push
xchg
leave
jnp
and
nop
scas
fadds
mov
add
jle
int
inc
stos
fdivl
adc
jp
daa
pop
or
push
inc
or
sbb
daa
xchg
cli
xchg
mov
call
jecxz
ret
enter
ffree
lds
mov
and
lret
aad
jo
pushf
and
cmc
jno
je
lods
cs
or
add
testl
jnp
fcmove
popf
ds
scas
push
push
outsl
mov
and
mov
popa
repnz
jnp
mov
lret
lods
out
ljmp
lods
fldcw
sahf
inc
leave
sbb
das
mov
jmp
adc
stos
imul
push
and
mov
xor
aas
xchg
and
mov
xchg
mov
mov
stos
inc
mov
mov
std
loope
dec
pusha
inc
popa
xor
ds
adc
and
or
mov
sahf
adc
pop
sbb
inc
repz
lret
out
inc
and
call
bound
lods
pop
scas
dec
mov
jns
es
hlt
scas
or
sbb
imul
call
pushf
rolb
addl
or
and
and
into
inc
popf
lea
xlat
dec
icebp
dec
pop
or
in
subb
pop
rorb
or
loope
repnz
mov
addr16
adc
icebp
and
pushf
mov
mov
fcomp
jmp
push
sub
sbb
xorl
sbb
xor
mov
jl
dec
je
push
sbb
sbb
jb
mov
mov
ss
pusha
mov
lods
es
fwait
xorl
jmp
and
popa
fdivrs
stos
outsb
decl
cmpsl
ret
dec
outsl
dec
fcompl
call
scas
jmp
jo
test
out
stos
xor
dec
sub
mov
cmp
xor
jbe
pop
cmp
dec
mov
cmp
mov
mov
inc
je
clc
push
dec
push
mov
pop
mov
xchg
repz
pop
movl
jbe
sbb
lahf
stc
adc
xchg
mov
sub
push
int3
fisubs
rorb
xchg
mov
pop
mov
cmp
inc
imul
push
adc
cli
jae
and
nop
push
push
add
mov
pop
or
mov
pop
shll
ljmp
pop
or
sahf
dec
aaa
push
enter
in
adc
xchg
push
int
cltd
bound
lahf
aas
lock
subl
mov
mov
xchg
push
hlt
xor
lock
pop
cmp
addb
jl
pop
xchg
fcmovne
jp
adc
or
mov
imul
or
add
mov
addr16
mov
xchg
mov
in
loopne
dec
cmp
pop
adc
ret
sti
insl
gs
xchg
outsb
dec
test
insb
test
es
mov
push
mov
shrl
test
and
shll
or
mov
xchg
leave
inc
or
dec
clc
ss
mov
adc
push
and
fildl
addb
popl
xchg
xor
sub
mov
jnp
inc
cmp
fwait
stos
push
xor
fwait
out
cltd
es
jge
push
push
xor
shrb
or
xor
pop
push
and
aaa
outsl
cli
push
jo
inc
fwait
imul
and
mov
cld
rcl
inc
test
mov
mov
lock
fwait
add
pop
aam
adc
leave
adc
rorl
lret
in
cmc
lock
inc
aad
test
mov
push
in
push
jne
xchg
ljmp
popa
jne
lret
push
insl
push
aas
ffreep
pushf
mov
mov
dec
pop
push
fiaddl
jns
insb
mov
mov
shll
into
rorb
out
lret
test
dec
rcl
mov
es
add
bound
dec
pop
cmp
fwait
idivb
jbe
jns
pusha
nop
mov
sbb
inc
pop
and
pusha
in
pushf
sti
cmp
in
mov
and
push
jecxz
leave
mov
int3
lock
jae
mov
daa
test
and
mov
loope
test
sub
inc
ficoml
addr16
inc
ficoml
mov
sub
jns
and
jmp
call
fwait
cmpsl
in
icebp
outsl
leave
xchg
imul
iret
aam
push
ret
pop
add
xchg
pop
fldenv
nop
pushf
pushf
or
insb
cmp
push
xchg
inc
aaa
fisttpll
and
stc
ret
pop
xchg
and
push
stos
adc
mov
xor
xchg
push
xchg
int
dec
add
dec
jle
sub
addr16
mov
push
sbb
dec
dec
adc
jns
and
xchg
rclb
cmpsb
and
or
and
loop
rol
rcrl
popfw
int
enter
popa
fdivr
or
mov
imul
push
movd
repnz
jns
iret
adc
dec
sbb
jns
inc
add
movsl
mov
push
movsb
sub
gs
jae
jle
add
dec
dec
inc
scas
cli
mov
cli
sub
loopne
int3
divb
push
xchg
loopne
add
ljmp
imul
ret
push
imulb
aad
mov
push
addr16
into
sbb
cltd
movl
dec
mov
shlb
cmp
ja
jae
mull
int
jo
jbe
arpl
jns
inc
sub
test
cmc
cmp
nop
out
xchg
mov
sbb
cli
push
icebp
and
xchg
shll
fmull
jle
dec
xor
pop
adc
add
filds
psrlq
aam
push
fabs
fcmovne
test
cmp
inc
repz
test
sub
and
lret
xchg
cltd
adc
movsl
not
icebp
jne
sub
xor
sarb
ret
or
or
xor
and
jp
pushw
bound
and
sbb
cmp
inc
cltd
pushl
push
sbb
pop
cmp
inc
dec
mov
in
jnp
aaa
test
arpl
adcl
into
sub
inc
cli
pop
mov
pop
sub
js
rorb
test
and
dec
xchg
push
mov
cmpsl
fmull
loopne
push
scas
ficomps
stos
adc
jmp
movsl
lahf
je
cwtl
or
push
jmp
lret
push
sbb
cltd
xchg
pop
mov
stc
lea
in
inc
shl
stos
dec
xchg
mov
fadd
lods
pop
xor
mov
cld
outsb
push
movsl
ret
cmc
xor
dec
in
inc
add
aam
push
pop
pushf
xor
push
test
sbb
ja
jno
cmp
pop
pop
ret
or
rclb
std
aam
xchg
jmp
das
and
int
neg
and
lods
clc
jo
lock
mov
jl
popl
loope
xchg
push
dec
jg
mov
cmp
scas
adc
mov
dec
mov
dec
mov
xchg
mov
jns
lret
mov
lahf
or
push
sbb
ja
fdivl
and
adc
dec
add
stos
xchg
adc
cmp
ja
pop
data16
or
mov
stos
not
sub
cld
push
cltd
insl
push
add
sti
loop
std
mov
mov
xchg
dec
cwtl
idivb
xor
pop
pop
enter
jno
aad
mov
xchg
dec
sub
and
push
int3
aad
insl
lret
fisttps
push
or
pop
mov
sbb
cmp
xchg
sahf
inc
movsb
lcall
ljmp
mov
and
adc
add
and
idiv
add
movsb
mov
mov
xchg
iret
stc
xor
dec
adc
icebp
lret
and
add
mov
fcompl
popa
inc
in
imul
test
dec
add
pop
xchg
mov
sbb
call
mov
mov
fnstcw
cmpxchg
mov
or
imul
add
adc
xchg
out
jl
stc
or
lods
in
les
push
dec
sbb
xor
lods
hlt
push
dec
jo,pt
dec
xor
cwtl
adc
orb
or
mov
call
adc
stos
push
push
or
cmp
xchg
out
repz
das
mov
inc
jmp
test
into
pop
push
dec
mov
cmpsl
ljmp
jnp
jle
lock
dec
sub
lods
push
xor
xor
inc
adc
mov
test
xchg
push
mov
xchg
hlt
jae
mov
movsb
xchg
pusha
xchg
pop
ja
outsl
xchg
sbb
js
inc
jb
mov
cwtl
xchg
xor
lock
loopne
leave
mov
mov
fdivrl
cwtl
dec
shll
into
shlb
rclb
adcb
lock
mov
in
push
stc
push
loopne
sub
mov
push
popa
push
add
popf
push
leave
stos
adc
jge
sbb
dec
sbb
test
imul
cmp
out
iret
fwait
jp
add
mov
mov
ja
or
push
pop
sbb
out
mov
gs
pop
mov
loop
fisttpll
mov
and
mov
cmc
scas
xchg
rol
movsl
psubusb
iret
icebp
sub
add
sub
jecxz
and
mov
push
cmp
insl
out
shlb
imul
and
bound
in
test
jne,pn
pusha
or
sub
cltd
fidivrs
addr16
xor
mov
mul
ret
lret
gs
mov
sub
sub
shlb
sbb
mov
add
mov
inc
scas
cmpsb
dec
push
jge
mov
cmc
rcrb
and
insb
xor
imul
std
insb
fildll
dec
insb
mull
sbb
test
sub
jbe
lea
add
mov
sub
in
rclb
jae
sbb
push
aad
lock
jge
imul
jp
jae
mov
rorb
pop
mov
add
lods
push
jbe
push
xchg
mov
loope
popf
xchg
aam
cmp
mov
xor
les
pop
push
adc
and
jge
mov
pop
mov
add
or
in
xor
push
daa
push
push
add
cmp
pop
dec
sbb
aas
sub
jp
xor
pop
fsubrl
sti
sbb
xchg
xor
jo
push
clc
int3
cwtl
ret
xchg
test
mov
pop
dec
dec
add
popa
loope
jnp
sub
or
mov
lock
sub
orl
mov
shlb
add
xchg
movb
nop
push
add
or
shlb
fisubs
push
xchg
mov
add
pop
push
cmp
ja
insb
jb
je
dec
scas
fdivr
mov
inc
adc
sbbb
call
addr16
xchg
mov
push
sbb
stos
adc
pushf
shlb
lret
shr
js
and
add
fildl
jno
push
mov
enter
xchg
ret
ss
mov
insb
jp
add
bndstx
xchg
bound
je
stc
mov
jecxz
cmp
jb
cmp
outsb
in
imul
and
add
sbb
outsl
push
or
addl
fists
in
push
xor
dec
arpl
mov
test
ljmp
cwtl
bound
dec
adc
int3
mov
mov
cmp
xor
lds
aaa
jb
jns
fs
mov
inc
das
cmc
cltd
fstpt
and
jp
out
pop
in
sti
or
cli
aaa
orb
cmc
leave
fucomi
jb
dec
push
adcb
xchg
addr16
add
hlt
or
mov
cmpsb
push
cmpsb
jmp
sbb
push
js
adc
mov
jecxz
inc
movsl
mov
push
out
mov
sahf
call
mov
add
xlat
jae
mov
ficompl
xor
dec
xchg
mov
bound
and
jb
int3
pop
ret
mov
loope
dec
pusha
sbb
cli
cli
and
test
es
mov
add
scas
out
roll
jg
int3
push
notl
scas
add
push
pop
xchg
xor
dec
dec
jae
mov
mov
sarl
dec
out
adc
mov
addr16
dec
add
add
add
mov
add
dec
dec
out
adc
mov
mov
sub
outsl
and
adcl
lret
out
jle
ds
bnd
in
popa
call
sub
dec
movsl
mov
jge
jg
popl
jp
flds
inc
inc
jnp
cmpsb
add
cwtl
push
xor
test
clc
sub
xchg
rclb
cmpsb
fnstsw
push
loop
repz
scas
pop
cs
push
dec
dec
aam
test
scas
sub
push
push
sbb
mov
dec
insl
mov
sbb
or
stos
lods
and
inc
test
sub
xor
xor
mov
imul
cmc
je
cs
movsb
in
stos
test
pusha
rorb
fs
xor
mov
sub
and
lret
enter
shl
in
push
jg
nop
test
fdivl
out
lret
adc
sub
mov
dec
fcompl
adc
out
add
lock
out
and
call
clc
cli
insb
fimuls
add
dec
push
cmpsb
rolb
popf
sub
in
inc
es
incl
mov
jns
push
mov
and
ljmp
xchg
sub
sbbb
add
loope
adc
aas
leave
pop
paddw
js
cmpsb
push
sbb
ja
popf
cmc
in
add
enter
or
sub
jne
lea
lahf
mov
push
xor
add
cmp
arpl
mov
jmp
and
stc
xor
fimull
push
pusha
inc
div
cmpsl
push
mov
fsubrs
add
add
mov
ds
lret
sbb
mov
jne
sub
mov
pusha
loop
mov
movsl
movsl
inc
stc
fst
hlt
repnz
nop
mov
in
pusha
mov
sbb
sbb
test
mov
std
ss
fsub
or
movsb
mov
int3
rolb
lret
cmp
ret
test
enter
inc
cwtl
mov
cwtl
fidivrl
inc
shrb
pop
dec
mov
or
and
xchg
inc
cs
cltd
jne
std
push
lea
das
in
sbb
fists
pop
aad
xchg
xchg
jnp
push
stc
repnz
inc
mov
out
xlat
jne
push
xchg
pop
jl
mov
sbb
stos
or
pop
outsl
add
push
mov
fdivr
xchg
stos
dec
fldcw
popa
jmp
ss
fldt
mov
mov
gs
sbb
adc
jp
ss
or
push
xchg
sbb
pop
pop
jg
gs
adc
je
cld
lret
jp
sub
rcrb
daa
jle
adc
lcall
sbb
loopne
ja
cmc
push
repnz
ljmp
mulb
or
shrl
imul
enter
repnz
and
inc
lcall
cmp
test
mov
push
fxch
and
ja
pop
rorb
ss
inc
popa
rolb
xchg
or
push
mov
data16
lods
adc
and
dec
cmp
pop
cs
or
xor
lcall
scas
and
scas
nop
inc
xchg
ljmp
dec
loop
xchg
lods
pop
jg
jg
jo
popf
repz
xchg
cmp
xchg
dec
pushl
add
mov
into
arpl
les
addr16
or
xor
mov
add
bound
pushf
test
push
jo
sbb
dec
aas
fucomip
sub
dec
or
scas
sahf
out
lahf
shrl
popf
mov
sahf
jne
ror
mov
xor
push
lea
roll
cmpsl
jecxz
fcoml
fidivrl
mov
jnp
mov
dec
and
out
popa
loopne
adc
sti
insb
mov
xor
xlat
dec
mov
out
imul
mov
fmuls
fldt
jl
pop
jne
cwtl
das
adc
mov
push
gs
sub
pop
cmp
cld
jae
sarb
sahf
ljmp
cmpsl
push
dec
jnp
xchg
pop
popa
les
rorl
lock
dec
mov
cmp
xlat
test
out
fstpl
sbb
xchg
xor
ret
sbb
push
test
push
adc
daa
stos
sbb
mov
insl
fmul
les
popl
cmp
push
loop
mov
mov
movsl
jnp
rcr
arpl
and
sbb
es
call
aad
call
and
xor
cmp
mov
add
fs
push
xor
decl
inc
sub
mov
fnstsw
movsl
aam
cmp
dec
adc
adc
mov
in
sbb
out
das
bound
jne
and
enter
xor
ret
adc
aas
loope
nop
inc
sub
sub
mov
jae
fldcw
jae
fs
push
data16
dec
mov
stc
fcmovnb
das
dec
cmp
rcl
jmp
mov
mov
mov
loopne
in
gs
cld
ret
ss
push
adc
dec
adc
mov
cmp
movd
mov
xchg
out
mov
lock
jns
std
fwait
mov
xchg
push
dec
lcall
dec
lock
pop
das
mov
mov
jge
mov
xchg
test
aam
mov
add
and
or
ljmp
sub
mov
fwait
cmc
jnp
pusha
jg
ret
decl
scas
push
bound
popa
pop
cmp
popf
and
stos
mov
add
popa
mov
and
mov
jno
xor
sbb
sarl
mov
lods
mov
mov
sahf
xchg
in
loopne
fldcw
mov
xchg
xor
xchg
cmp
add
push
pop
sbb
push
inc
push
jecxz
iret
mov
add
cmpsl
sbb
xchg
or
test
jle
push
xchg
rcrb
jmp
dec
mov
xchg
decb
sbb
lods
and
pop
jl
push
mov
mov
adc
mov
int
pop
int3
mov
jle
stos
lock
dec
test
lods
jbe
into
push
sub
xchg
or
fisttpll
repz
xchg
out
lahf
push
std
in
xchg
push
shlb
ret
fs
fwait
pop
jge
insl
adc
push
dec
lods
inc
mov
add
ljmp
xchg
or
xchg
push
sub
sub
test
fs
mov
cmp
addl
aam
or
add
repz
inc
sahf
jo
sbb
adc
dec
stos
jecxz
add
imulb
fs
inc
jmp
loope
stos
push
sti
shll
xor
sbb
mov
jl
push
xor
jg
inc
std
stos
jecxz
inc
stos
jecxz
sbb
out
inc
nop
fcomip
daa
call
daa
outsl
loop
mov
mov
setle
xor
sbb
pop
scas
div
sti
xchg
gs
aad
and
repnz
test
push
lods
mov
xorb
hlt
dec
jg
mov
sbb
repz
sub
cmpsb
hlt
jb
jmp
outsl
jge
enter
pop
fldl
mov
mov
and
and
fisttps
into
mov
or
mov
xor
std
or
jle
call
cmp
mov
in
or
leave
dec
pop
xchg
mov
lds
cli
adc
mov
sub
sbbl
lods
stos
sti
inc
popf
cmp
jne
sahf
lret
enter
imul
jmp
stos
in
rcl
in
or
movsb
outsl
mov
push
or
mov
fdiv
push
mov
in
test
adcb
mov
mov
jne
inc
stc
filds
jle
mov
ds
stc
fsts
rcrb
or
xor
xchg
rcrb
mov
mov
fiadds
add
aam
inc
rcrl
lcall
idivb
xchg
pop
out
and
dec
inc
mov
add
or
inc
jne
aam
jnp
xchg
shl
aas
cmp
sub
lods
push
push
pop
mov
fidivrs
or
mov
aad
adcl
mov
sbb
ffreep
sahf
movsl
adc
popa
xor
dec
pop
mov
adc
sub
repz
mov
lcall
test
ds
test
inc
mov
pusha
xchg
or
cs
push
out
or
pop
outsl
mov
fimull
dec
sbb
xchg
ds
jmp
adc
mov
nop
jb
es
stos
xchg
jecxz
jns
lock
std
xor
int3
bound
lods
cmc
xchg
cwtl
adc
xchg
cli
lea
bound
cs
jbe
mov
scas
into
push
in
push
iret
mov
jbe
outsl
cmp
push
push
jbe
push
ret
sbb
jmp
sub
daa
jns
data16
push
shlb
push
or
dec
mov
fldenv
push
jae
aad
cmp
xchg
jnp
mov
xor
addr16
push
outsb
dec
mov
add
pop
les
lea
cmp
xor
cmc
cmp
and
xchg
jae
mov
and
pushf
jge
jne
xlat
fdivl
clc
sbb
sub
stos
pushf
inc
push
mov
imul
jns
sub
out
xchg
pop
xchg
pop
dec
sub
imul
sub
mov
inc
loop
movsl
cmp
and
add
out
int
xchg
add
xchg
pop
xor
and
rolb
call
ja
ja
addr16
xchg
mov
inc
inc
push
sti
ljmp
push
xchg
sbb
cmpsb
cs
mov
test
jo
mov
inc
dec
push
push
enter
fnsave
mov
cs
int3
mov
mov
icebp
or
mov
jae
mov
xchg
cli
jne
lcall
or
lahf
sbb
dec
lock
pop
mov
pop
lods
es
mov
jmp
and
jb
bound
cmp
jns
in
dec
cmp
xchg
out
rcll
sub
push
lods
dec
jbe
sahf
pop
mov
add
in
jmp
and
js
lock
aad
pop
fwait
mov
std
dec
data16
daa
aaa
sti
jg
fsubl
mov
push
mov
add
icebp
fwait
stos
adc
cmpsb
add
mov
in
fdivl
jge
fiadds
std
inc
cmpsb
mov
mov
push
mov
lods
sti
add
iret
dec
lods
add
xchg
inc
mov
jg
call
les
jp
jno
jns
pop
in
cmp
xchg
in
jno
shl
add
ret
out
push
loope
popf
cli
movsb
mov
sbb
scas
fisttpll
mov
and
add
testb
jae
ret
jno
shl
imul
mov
cmpb
scas
add
inc
pop
fimull
or
pop
add
mov
jno
add
cmp
mov
xchg
add
mov
test
cmp
add
outsb
mov
icebp
xchg
outsb
mov
pop
enter
rorb
jp
add
and
fldl
adc
ds
push
or
scas
in
shlb
lock
sub
fstpl
pusha
cmpsl
xlat
iret
push
insl
shlb
or
fsubs
or
and
adc
ret
dec
shlb
divl
push
xor
mov
and
jns
test
frstor
out
loop
mov
mov
push
out
lret
lcall
lea
cwtl
inc
xchg
xlat
enter
sti
fs
mov
add
mov
and
sub
xchg
push
leave
mov
cmpsb
mov
cld
and
mov
and
shll
sarb
scas
roll
dec
push
sub
shlb
sbb
add
xchg
mov
stos
setne
fldenv
xchg
mov
incl
sub
cld
in
js
cwtl
and
sub
adc
push
jg
repnz
sbb
fidivl
sbb
lahf
cmovno
inc
jmp
adc
int
pop
testl
mov
jmp
add
add
test
pop
stos
cmp
xor
cmpsb
jb
inc
into
push
jbe
xor
es
icebp
mov
in
mov
add
add
call
dec
stos
xlat
mov
ja
in
cmp
loopw
adc
mov
pop
fiaddl
cmp
mov
jp
int
inc
imul
add
test
jnp
sub
push
push
push
xlat
xchg
jp
pop
rcr
cmp
xchg
jl
sub
into
push
das
adc
icebp
dec
mov
cltd
pop
xchg
and
cmp
aaa
lods
jb
nopl
int3
andb
out
add
popa
addr16
test
pop
add
push
dec
rorl
add
outsb
xor
adc
mov
pushf
icebp
je
js
add
lds
aas
jns
dec
in
jmp
ret
lcall
mov
shrl
jge
pop
inc
pusha
add
sbb
loopne
push
mov
sbb
icebp
adc
test
cwtl
lret
addr16
mov
hlt
addl
mov
ljmp
clc
xor
sub
stos
jl
rcrl
jg
fs
test
outsb
xchg
testb
xchg
daa
mov
loop
mov
pop
xor
int
cmpsb
and
std
jne
out
mov
push
popa
sub
loopew
push
popf
les
iret
jmp
mov
pop
outsb
xchg
jl
test
push
add
xchg
cmpsl
or
es
inc
out
jae
stos
jge
mov
push
jg
ja
pop
je
shll
das
pop
loop
enter
aad
lds
and
push
cmp
pop
stc
mov
xor
add
push
mov
push
jne
aam
xchg
mov
xchg
scas
mov
and
fsubrs
push
iret
mov
add
mov
imul
jp
inc
cmp
ljmp
or
lahf
lods
mov
mov
or
sub
push
into
add
dec
jge
test
les
ficoms
inc
jge
jne
cwtl
and
mov
stos
gs
inc
mov
loop
int
mov
sub
or
mov
and
test
or
or
pop
push
out
popa
lcall
movsl
and
into
mov
shl
ficomps
and
repnz
insl
jl
jno
stc
sub
pop
sub
xchg
inc
pop
push
or
cmp
ds
push
out
mov
hlt
push
movsb
jno
fwait
imul
jmp
jns
sub
imul
mov
sahf
jb
repz
hlt
aam
mov
cmp
imul
and
movsl
popa
ljmp
mov
aaa
mov
fildl
adc
data16
sub
rcl
repz
nop
out
or
xor
insb
push
pushf
push
xchg
inc
and
xchg
cmp
nop
and
shll
jecxz
cmpsb
pop
pop
push
push
popf
xchg
jl
adc
xchg
bound
push
dec
mov
ret
jo
into
pop
add
stc
push
and
xchg
mov
sarb
in
shrb
pusha
adc
fwait
repnz
or
pusha
hlt
sti
or
jbe
pop
mov
pop
xor
enter
xchg
aam
cmp
test
sbb
aaa
cmp
add
xlat
add
mov
pop
sub
pop
mov
xchg
jge
cli
cmc
xor
adc
push
pop
es
repnz
jae
lea
fs
jb
iret
cmp
mov
dec
sub
rcrb
and
imul
push
sbb
mov
fmuls
or
xchg
popa
fmull
sbb
inc
dec
popa
add
test
push
xor
cltd
add
mov
dec
add
aas
leave
stos
jmp
cld
sub
les
jnp
fnstenv
lret
lahf
sarl
and
addr16
rcrl
daa
imull
outsb
iret
inc
ss
mov
xchg
xor
mov
scas
sub
icebp
ret
mov
outsl
pop
pop
cmc
insb
test
jmp
push
push
mov
pop
mov
and
je
xchg
ljmp
ss
loopne
nop
adc
adc
cmpb
xchg
data16
stos
jp
popf
push
shl
xchg
mov
cmp
xchg
sbb
imulb
cmpsb
inc
adc
inc
sahf
ljmp
bnd
push
test
adcl
and
jmp
push
and
jno
shl
inc
sub
xchg
nop
outsb
mov
and
sub
dec
push
rcr
shrl
sub
inc
cmpb
cmp
cmpsb
jae
daa
nop
xchg
stos
sub
jp
shlb
scas
mov
sbb
into
mov
out
xchg
push
mov
mov
sub
arpl
aam
mov
arpl
add
lods
or
jne
in
dec
inc
cmc
sub
scas
xchg
mov
pop
mov
push
pop
push
inc
xchg
inc
xchg
mov
mov
jp
stos
xchg
dec
ss
pop
es
or
cwtl
pop
popa
mov
scas
sarl
dec
sub
pop
incb
cs
add
mov
push
ds
mov
sbb
and
sbbl
push
adc
jo
mov
cs
into
pop
fs
inc
sub
fiaddl
enter
or
and
inc
aas
push
out
scas
cmp
mov
and
sub
out
in
cmc
loope
push
aam
scas
into
sahf
sub
int3
xor
fs
lret
into
arpl
mov
sbb
mov
jbe
inc
rol
dec
mov
jg
mov
ficomps
pop
xchg
test
or
and
push
ja
rcll
les
push
and
test
mov
psrlq
inc
movsb
sbb
lret
aam
adc
or
nop
cmpsb
mov
popf
ret
jmp
sarb
jp
lods
fcmovu
adc
xor
inc
xlat
dec
mov
sarb
fmulp
sbb
inc
push
outsl
mov
or
icebp
mov
xor
xchg
mull
inc
pop
nop
andb
fcmovne
out
fidivrl
add
mov
sub
adc
lods
lds
cmp
jae
rclb
add
fbstp
jns
pop
jbe
adc
ds
aam
or
je
mov
xchg
iret
mov
movsb
clc
sub
mov
pop
jecxz
leave
mov
cmp
sub
mov
shr
outsb
mov
pop
packssdw
jne
mov
push
sbb
adc
dec
add
ss
push
stos
push
cmp
adc
push
adc
outsl
lock
cmp
paddd
mov
mov
ret
cltd
inc
pop
pusha
aad
push
push
je
cli
jecxz
sbb
rorb
aam
inc
les
add
mov
pop
mov
test
in
js
sub
fidivl
repnz
mov
nop
bound
loopne
cmp
out
test
mov
adc
and
fistl
push
cltd
cmp
es
mov
mov
xchg
negb
dec
mov
cs
sub
push
int
loopne
sarb
pop
out
xlat
jmp
sub
cmp
shll
in
jmp
jb
xor
and
daa
sar
das
add
fnsave
mov
in
mov
into
dec
dec
jne
subl
inc
arpl
out
jnp
xchg
mov
sti
or
gs
insb
push
mov
inc
push
sub
shlb
mov
sbb
test
fsub
fldl
jp
imul
mov
jmp
or
and
xor
shll
jle
das
into
popa
push
loop
sbb
inc
mov
faddp
push
add
jo
test
ja
and
sub
fists
sub
scas
inc
cmp
inc
fisubrs
test
jmp
sub
pushw
icebp
jb
imul
cmp
cmp
add
sbb
fldcw
inc
xchg
mov
test
repz
out
sub
push
mov
jae
pop
std
js
jmp
adc
pop
or
mov
outsl
popf
pusha
fldcw
icebp
xorb
pushf
lea
xchg
out
mov
into
mov
insl
jecxz
push
loop
mov
push
add
jno
xor
push
lahf
pop
ret
stc
add
psrad
inc
mov
inc
sub
adc
ljmp
fwait
scas
dec
lahf
push
jo
out
mov
pop
ss
in
nop
repz
xor
mull
jne
test
jnp
push
add
push
add
sub
inc
xor
jne
and
jae
xchg
mov
fcoml
xchg
xchg
sbb
dec
mov
cmp
loope
cli
mov
nop
sarl
ret
in
daa
aam
or
adc
arpl
mov
lds
scas
jmp
mov
push
mov
in
and
cmp
sbb
push
xchg
xor
sub
scas
cltd
loopne
stos
in
sub
xor
sbb
ret
pop
enter
pop
sub
mov
pop
cmp
cmp
or
jp
rcr
cmpsl
inc
cmp
js
ljmp
lods
mov
pop
cmp
inc
pop
pop
cwtl
fwait
mov
loopne
adcl
jl
fldl
daa
sbb
ja
cmp
xchg
fiaddl
or
repnz
pop
mov
fcmovnbe
shll
std
pop
sub
cmpl
inc
test
mov
sub
jnp,pn
lcall
lods
xchg
adc
dec
xor
cmove
pop
dec
mov
ja
jb
jg
hlt
jg
ficomps
xchg
dec
inc
cmp
pop
stos
ljmp
dec
jnp
mov
in
imul
ret
pushf
inc
in
or
sbb
dec
lods
pushf
lods
lret
adc
inc
stc
push
std
sbb
les
repnz
in
loope
xchg
aam
mov
inc
pop
adc
adc
in
dec
fucomip
lods
repnz
orb
and
add
xor
dec
pop
psubw
xchg
jae
push
in
cmp
cmp
shlb
addr16
inc
icebp
jns
das
sbb
int
fstps
xlat
push
mov
scas
adcl
sbb
and
xchg
filds
xchg
sub
sarl
pushf
sarl
push
inc
dec
and
mov
cmpb
movsl
xchg
xor
pop
inc
xor
repz
xchg
or
and
decl
pop
fmuls
jl
aam
xchg
mov
clc
mov
inc
rclb
es
fbstp
das
scas
js
dec
add
mov
inc
leave
scas
sti
xchg
cmp
shlb
adc
rorl
pop
lcall
into
pop
shll
dec
enter
inc
je
push
call
mull
test
mov
std
push
xlat
dec
xor
pop
and
and
in
pop
push
or
jmp
cs
test
in
mov
inc
pushf
daa
cltd
jns
mov
or
pop
imul
lret
aam
rorb
mov
or
push
pop
and
pop
lahf
fisubrs
pop
scas
pop
cmpl
jg
mov
lahf
ds
in
test
loope
push
xor
jns
mov
ljmp
loopne
push
into
mov
push
daa
loop
sahf
mov
mov
in
push
lods
fisttps
push
adc
arpl
xor
and
xchg
add
cmp
inc
imul
lea
pop
dec
jo
popa
leave
notb
dec
outsl
rolb
push
and
movsl
mov
lret
fiadds
push
mov
rolb
outsb
mov
int3
pop
xor
pop
and
leave
push
pusha
xchg
stc
ljmp
or
xor
mov
fwait
inc
cmpsl
loope
insl
loope
or
out
jmp
add
test
adc
addl
pop
inc
jge
scas
fcos
dec
mov
pop
jb
sbb
cmc
adc
sub
jmp
ljmp
lahf
or
sahf
jnp
insl
cmp
push
into
xor
cld
xchg
sub
ficompl
adc
mov
mov
pop
ds
fdivrp
push
mov
nop
push
and
roll
xchg
lcall
hlt
mov
data16
add
rcl
and
sub
pushf
xchg
ficompl
mov
push
cltd
sub
jno
cli
fwait
test
shlb
in
lods
xor
push
or
and
and
mov
dec
adc
inc
inc
imul
cld
xchg
into
inc
xor
mov
cli
mov
inc
enter
dec
shll
inc
dec
mov
ret
xchg
enter
mov
inc
mov
mov
mov
ficompl
and
adc
mov
and
push
test
ret
inc
roll
out
sbb
lcall
jmp
idivb
mov
pop
add
lahf
push
mov
sbb
loope
and
test
mov
out
sub
ss
rcrb
negl
cld
dec
dec
xor
push
pop
add
stos
mov
rcl
xlat
in
mov
xor
call
bound
test
adc
addl
mov
xchg
cmpsb
and
test
push
punpckhdq
addr16
jne
push
push
dec
xor
xchg
push
jmp
push
in
jns
and
dec
xchg
lcall
stos
in
addr16
loopne
cmp
orb
dec
mov
mov
mov
inc
add
mov
imul
gs
and
aaa
pushf
repz
mov
loope
popf
lods
rcrb
mov
pop
shrb
cmp
stos
pusha
cmp
sub
and
popl
fsubl
xor
sub
adc
and
or
sub
dec
sub
push
sbb
sahf
mov
mov
xorb
push
frstor
xchg
sub
and
stos
pop
push
sub
les
sub
std
xor
xor
jmp
inc
push
icebp
cmpsb
push
pop
lea
stos
xchg
push
imul
mov
and
or
es
lret
sub
repz
mov
jne
dec
lret
jmp
push
adc
mov
jne
ss
icebp
hlt
jg
cmp
ds
clc
hlt
in
adc
sbb
scas
mull
mov
outsb
int3
push
lahf
cs
insb
pop
sbb
jb
dec
cmp
les
lds
sbb
jns
jl
xchg
ja
mov
jb
mov
fdivl
out
and
cli
xchg
mov
push
inc
jo
ss
xchg
ja
push
push
jl
inc
popa
xlat
testl
xchg
fcomps
hlt
fstl
iret
mov
imul
repnz
xchg
bound
in
in
add
mov
sbb
sub
fdivl
addr16
pop
sub
sbb
cmp
stc
insl
push
stos
out
addr16
sub
fsubp
out
mov
divb
inc
add
jecxz
fwait
gs
repnz
add
cmp
dec
jns
stc
bound
popf
inc
inc
mov
lods
leave
jle
or
mov
or
pop
icebp
fwait
repnz
in
loop
loopne
pop
test
int
std
mov
mov
in
sbb
icebp
lcall
sub
dec
sub
xchg
pop
jecxz
adc
push
das
insb
bound
pop
hlt
add
xor
inc
pop
ret
ror
lret
pop
es
out
sbb
cmp
sub
mov
mov
add
pop
cmc
out
jp
xor
fisttps
xor
stc
test
sbb
sub
pop
jg
lds
jns
pusha
jae
ja
mov
xchg
mov
and
or
inc
inc
leave
insl
sub
int3
incl
fs
sub
mov
sub
test
fs
ja
sti
pushf
in
adc
and
pop
js
pop
mov
test
mov
jbe
sub
jge
xchg
rorb
fcmovne
imul
cmc
push
mov
push
in
js
sbb
xchg
jne
cmpsl
shll
push
adc
xchg
cltd
lea
lret
test
test
leave
ret
jecxz
outsb
clc
pop
and
lret
repnz
fbld
mulb
int3
rorl
jae
test
push
jnp
jl
pop
hlt
inc
pop
sub
push
cwtl
movsl
and
rcl
dec
pop
lock
outsb
jmp
sti
add
cmp
mov
mov
packssdw
jnp
add
addr16
add
les
cmpsb
pop
xor
add
and
fcoml
pop
push
jmp
dec
es
mov
rcrl
sbb
mov
xchg
dec
add
pop
es
ret
rcr
push
aaa
mov
mov
pop
stos
cli
add
mov
fisubl
pushf
jge
in
repnz
insb
sub
push
push
loope
pop
xlat
cmp
loopne
push
pushl
jbe
insb
inc
push
aam
cld
in
pop
mov
mov
call
mov
xor
jecxz
hlt
cld
sbb
mov
lret
int
dec
std
repnz
mov
dec
out
adc
add
sbb
and
mov
sarb
scas
or
jno
out
mov
dec
es
popf
pop
adc
test
sub
std
sub
arpl
subl
inc
cwtl
sti
adc
cmp
push
push
movsb
push
ficoml
jae
mov
out
shrb
stc
dec
aam
arpl
in
adc
ja
stos
jecxz
jle
mov
push
adc
dec
inc
xchg
ss
fisubrl
mov
or
lahf
test
xlat
jp
xlat
inc
loopne
or
lock
test
jge
mov
pop
cmpsl
dec
rolb
sahf
sti
mov
fs
mov
push
hlt
add
add
mov
fsts
rcrb
adc
sbb
popf
or
addr16
test
sahf
fldenv
cli
adc
jmp
pop
addb
or
mov
les
mov
movb
stc
cmp
push
and
test
leave
popa
xor
add
jle
cmp
ficompl
push
mov
addb
scas
add
sub
jmp
xor
shl
cmp
xor
dec
fidivs
jnp
fdiv
jae
jns
imulb
fsubr
push
cmp
movsl
cmp
daa
fcomi
loop
test
mov
sbb
dec
arpl
push
je
test
sub
stos
imul
push
xchg
in
jge
mov
and
mov
mov
fcmovnbe
cmc
cwtl
popa
fcomip
and
adc
jae
mov
add
adc
insb
mov
sti
adc
insb
xchg
mov
aam
cmpsb
call
std
pushf
push
xchg
mov
mov
jle
dec
fs
cwtl
adc
xchg
and
pop
imul
pop
sahf
dec
fdiv
mov
pop
jmp
rcrl
flds
rcrb
push
add
adc
icebp
dec
fdivrs
xor
rolb
mov
lahf
fcomi
pop
dec
imul
clc
cltd
xchg
enter
sbb
jnp
adc
outsb
ljmp
cmp
inc
pop
insl
shll
fcomps
lret
sbb
add
je
pop
push
push
sbb
testl
mov
jmp
es
dec
aaa
push
xor
mov
movsb
adc
imul
dec
out
pop
pop
mov
and
ror
sahf
shrb
in
test
cmp
iret
outsb
js
xchg
adc
sub
std
cmp
mov
sbb
out
sub
sbb
jbe
jo
sub
pusha
lods
cmp
jl
ret
leave
lcall
mov
clc
enter
in
mov
mov
aam
negl
jb
inc
sbb
outsl
push
sbb
add
mov
cmpsb
sbb
int
xlat
fcoml
mov
sub
jae
imull
lcall
jecxz
xchg
scas
movq
adc
xor
fwait
cmp
add
shll
cmp
cwtl
clc
addr16
mov
sbb
loope
sbb
test
sub
mov
xchg
dec
mov
sarb
inc
out
insl
push
out
lock
sbb
inc
ficomps
mov
cmpsl
fisttpl
and
cmc
mov
leave
sarb
in
or
mov
sbb
jp
sbb
cli
sub
clc
aas
jg
aas
and
fsubl
jo
aad
imulb
imul
outsb
cmp
jb
mov
test
filds
cmpsl
sbb
push
addr16
push
daa
or
ss
dec
cmpsb
xor
stos
int3
push
stos
xchg
in
xlat
sub
dec
and
cli
add
fcomps
xorl
sbb
or
mov
cld
das
aas
and
cli
movsb
dec
lcall
mov
pop
repnz
xchg
mov
enter
mov
cld
outsl
data16
lahf
xchg
lret
js
iret
push
dec
mov
pop
bnd
sarb
mov
mov
test
out
test
push
dec
and
ljmp
mov
cs
xchg
cmpsb
pop
enter
mov
mov
sbb
push
mov
cltd
nop
xchg
nop
jno
pop
or
xor
mov
sbbl
mov
ss
adc
xchg
ss
xchg
lock
inc
sub
and
xor
and
insl
add
or
lahf
bnd
js
adc
cmp
inc
adc
push
dec
dec
pushf
add
jle
mov
dec
in
nop
mov
and
pop
mov
insl
jns
mov
xor
dec
out
and
mov
sub
bound
mov
mov
mov
cld
mov
add
out
xorb
push
jg
shll
jne
shll
or
cs
data16
ret
enter
insl
dec
sbb
or
and
dec
ret
or
fcmovnbe
jns
and
jbe
loop
jo
push
mov
mov
fwait
mov
jns
push
sub
repnz
xor
clc
xchg
into
popl
mov
mov
pop
rorl
mov
mov
mov
push
movsl
out
testb
jae
xchg
add
lahf
xor
push
push
loop
pop
testb
or
xor
mulb
xor
inc
shrb
adcb
fidivs
test
loopne
xor
adcb
inc
cmp
sub
and
mov
popa
mov
nop
or
and
and
cld
aam
inc
push
pushf
add
int
lea
mov
sahf
mov
cld
lret
jnp
popf
testb
xor
xor
cld
xchg
int3
mov
mov
cmp
lret
pop
scas
pop
jecxz
push
out
ror
pop
jmp
sahf
lods
push
lret
xor
jle
push
jmp
push
movsl
sahf
jle
push
adc
mov
sbbl
inc
enter
cli
lea
ror
xchg
and
lods
call
stos
dec
scas
dec
imul
jbe
imul
push
imul
insb
out
inc
test
adc
aam
loope
add
push
popf
movsl
stos
push
add
std
sbb
dec
aas
sub
push
mov
inc
xchg
or
in
xor
dec
cld
and
push
push
xchg
cld
ljmp
pop
int
inc
out
enter
pop
div
dec
movsb
xor
xor
adc
pop
and
push
pop
insb
sbb
test
jno
in
cmpsl
fs
jnp
inc
je
int
and
adc
pop
bound
out
mov
imul
lods
mov
push
loopne
pushf
je
mov
mov
mov
addr16
out
jae
jo
inc
ficomps
aam
jae
lret
mov
out
adc
jns
dec
jmp
js
cltd
ret
addr16
mov
ljmp
inc
shrb
cli
dec
adc
or
popf
inc
insl
dec
faddl
xor
call
pop
inc
out
jno
push
jbe
ret
push
and
mov
and
push
lret
jns
je
mov
mov
push
mov
pop
nop
cli
outsl
xor
sub
or
fiadds
call
mov
arpl
sub
std
repz
loope
iret
mov
mov
xorb
test
lods
xchg
int
mov
pop
cmp
jns
sub
js
adc
je
sti
and
push
mov
shlb
jno
sub
dec
and
scas
lret
cmp
and
pop
add
sahf
outsl
lret
out
sbbl
xchg
lea
dec
jg
ficomps
jb
pusha
cmp
push
add
adc
adc
pop
inc
ds
psllq
add
jnp
jno
sub
mov
call
inc
mov
jl
mov
loope
mov
xchg
es
fldt
sbb
fcmovnb
stos
fistpl
jb
int3
gs
adc
insl
sti
lahf
pop
repnz
std
dec
fisubrl
ljmp
shll
xor
sbb
jno
xlat
mov
jle
dec
pushf
add
mov
fwait
mov
inc
and
addr16
push
add
lods
push
mov
int
xor
pop
aaa
jp
rorl
adc
add
fwait
push
mov
and
clc
push
loopne
push
rorb
xor
dec
outsl
fstpl
int3
mov
or
or
xchg
cmp
jmp
push
inc
pusha
incb
aas
xchg
mov
fwait
mov
test
cmc
push
mov
add
outsl
out
xchg
fsts
xorb
jno
xor
mov
inc
imul
sub
dec
lcall
call
fdiv
out
jle
pop
out
stos
cmp
clc
pop
sub
aad
dec
mov
arpl
sbb
or
testb
inc
sbb
enter
mov
out
xchg
cmp
sub
mov
cmp
cmpsl
negl
test
jns
mov
aad
sub
scas
ja
push
sub
lods
sbb
call
add
push
xchg
mov
cmp
das
mov
in
dec
fstl
cmp
hlt
dec
pop
out
mov
rcrl
rcrl
enter
cltd
enter
xchg
dec
push
inc
sub
sub
dec
xor
jb
ljmp
xor
into
sbb
mov
push
sahf
mov
aas
scas
incb
shrl
pop
mov
fs
cmp
mov
mov
xchg
xor
sub
loope
xorb
dec
negl
sbb
ljmp
cmc
jmp
jg
sbb
stos
nop
xchg
push
jo
pop
les
jb
popf
addb
rol
lds
sub
push
push
fcomps
aaa
xor
dec
stos
jo
enter
sub
imul
in
mov
xor
mov
ljmp
test
dec
jbe
lret
sbb
outsb
mov
add
push
lock
in
dec
int3
inc
orb
inc
push
rcl
out
xor
leave
xchg
lods
pop
xchg
shrl
xchg
imul
push
sub
inc
cmp
ljmp
imul
and
es
cmp
and
iret
in
xchg
iret
jnp
xor
movsb
mov
jmp
cltd
je
bsr
cmc
or
repnz
testb
inc
push
jl
pop
es
xor
imul
inc
out
push
mov
movsb
or
dec
sbb
cmp
icebp
fnstenv
ss
scas
xchg
mov
push
and
lea
sub
inc
xchg
in
xchg
das
testl
sbb
mov
sub
and
pop
xor
xor
cmp
mov
andps
repz
and
stos
jne
mov
and
arpl
push
scas
jnp
cmpsb
cli
inc
gs
pop
sbb
insb
ret
cmp
lods
aad
imul
subl
gs
mov
add
divl
jmp
cld
stc
inc
pop
call
gs
mov
xor
jnp
jle
dec
mov
xchg
shll
adc
and
mov
popf
into
push
xchg
jecxz
inc
sbb
pop
cmc
push
sbb
dec
or
mov
add
pop
jne
jle
add
adc
push
xchg
mov
cmpsb
fwait
add
test
gs
dec
nop
jnp
js
inc
shll
addr16
popf
ja
movsb
orb
push
pushf
in
push
imul
mov
fcmovnu
xor
pop
stos
cmc
lret
stc
shr
jle
cmp
or
test
arpl
adcl
gs
sub
imull
push
and
inc
push
cwtl
and
mov
ret
pop
pop
jae
ret
mov
subl
inc
nop
ja
imul
sbb
andb
scas
scas
dec
inc
push
mov
scas
aas
cs
lret
cmpsb
sti
or
out
mov
imul
push
and
bnd
pop
int
xor
pop
lahf
push
inc
hlt
nop
fucomip
cmp
in
cmpsl
fisttps
aaa
mov
aad
cmpl
cmp
loop
mov
xchg
loope
cmp
call
pop
mov
push
inc
addr16
xor
out
push
clc
sub
pop
in
shlb
scas
test
lods
push
xchg
add
dec
aad
test
test
push
leave
inc
mov
sub
push
xchg
pop
imul
les
cmp
addr16
jne
ds
sbb
fwait
repnz
rcrb
aad
mov
pusha
push
insb
xchg
jnp
jns
lahf
fmuls
fmul
pop
addr16
gs
xor
stc
sbb
mov
cmp
in
mov
je
adcl
pop
cmp
mov
push
and
cld
jnp
das
mov
outsl
mov
push
shrb
roll
mov
mov
mov
ja
or
or
out
out
test
addr16
xchg
into
mull
dec
mov
fsubr
rorl
in
or
sahf
stos
fsubl
sbb
pushf
cmp
jb
test
pop
imul
insb
jl
dec
cmp
repz
leave
cs
and
sbb
scas
push
adcb
cmp
loope
idivl
pop
mov
sbb
lds
aaa
ficoms
movsb
pop
lret
sbb
in
xchg
fsubp
dec
xor
cmp
mov
add
or
adc
or
fcmovu
icebp
adc
adc
jo
frstor
stos
or
sbb
dec
leave
ss
jne
xor
mov
mov
test
fs
popa
ficoms
mov
pop
xchg
jl
sub
dec
pop
idivl
scas
mov
incl
push
aam
fsts
aaa
insl
xchg
popf
sub
mov
hlt
test
idivl
sbb
rcr
mov
fsubr
lods
loopne
shll
in
jmp
lret
jecxz
mov
sub
cmp
push
shrl
mov
pop
xor
mov
mov
imul
pop
out
mov
push
call
lods
aas
mov
jmp
fwait
cltd
xchg
sbb
mov
cmpl
stos
les
ljmp
faddl
mov
int
or
jae
lds
ret
gs
lods
loop
ja
and
sub
imul
inc
hlt
rclb
push
jg
in
jecxz
shl
in
push
sets
jb
in
test
inc
sbb
sub
mov
inc
fsts
test
pop
add
push
sahf
aad
scas
adcl
lahf
mov
mov
xor
dec
cs
jecxz
in
mov
push
inc
add
mov
jmp
push
sbb
xor
outsb
cmpsl
outsb
mov
sbb
xchg
sub
fidivs
mov
add
xlat
fisttpl
movsb
jmp
cmp
push
enter
lock
xchg
sti
mov
jge
push
push
in
int
dec
fisubs
cmp
aaa
enter
xor
gs
test
jb
in
mov
or
fwait
testb
ret
xchg
add
stos
fidivl
pop
movsb
lock
test
jo
mov
lods
inc
push
dec
inc
pop
popa
in
pop
stos
mov
mov
or
addr16
mov
insb
movsb
mov
addr16
les
sti
inc
gs
mov
push
ret
gs
jg
and
rcrb
lret
imull
ja
sub
movsb
lock
pop
jecxz
out
mov
dec
mov
xchg
daa
lret
leave
cmp
loop
lods
mov
cmp
popf
sbb
ljmp
std
test
xchg
and
jb
mov
sub
mov
cltd
xchg
mov
in
in
sbbb
cmpsl
out
mov
pop
mov
pop
es
dec
inc
fs
call
aas
adc
cmp
imul
sti
orb
mov
lea
inc
lahf
cmp
cmpsl
and
inc
pop
in
pop
lret
mov
jle
inc
ja
lods
mov
cs
shlb
pusha
mov
sub
xchg
cmp
adc
dec
mov
jne
out
cs
jp
sub
sbb
xchg
jge
test
xchg
or
jns
sbb
cld
fcomps
inc
jae
pop
inc
fwait
add
cld
add
dec
mov
inc
push
mov
mov
inc
cmp
xlat
sbb
fnstsw
push
mov
xor
in
xchg
and
jmp
jg
add
add
test
jne
cltd
inc
cmc
out
fdivs
cmp
sub
shlb
dec
push
jno
cmpsl
pop
push
and
dec
fstl
add
icebp
hlt
jo
xor
jge
scas
lahf
dec
fstps
and
out
notl
cli
xor
sti
lret
shll
pop
pop
dec
or
dec
mov
sub
int
xchg
push
pop
jno
xchg
mov
test
aas
push
mov
lods
repz
sahf
adc
aas
sbb
and
xor
fcom
jbe
inc
inc
mov
popa
aaa
inc
mov
incb
scas
pop
or
cmpb
or
fnstcw
pop
adc
mov
xor
iret
jmp
dec
add
and
mov
pop
std
nop
leave
and
in
dec
mov
inc
xchg
sbbl
int3
or
sub
adc
or
and
jl
ja
lea
add
enter
pop
jmp
jge
inc
xchg
mov
fcmovu
addl
in
dec
out
mov
mov
jl
sub
hlt
sbb
je
push
mov
dec
jne
daa
pand
push
cmc
mov
fwait
pop
dec
adc
movsb
xlat
movsb
rorb
nop
jns
pop
sub
aaa
or
jno
or
mov
add
mov
fildll
sbb
mov
xchg
dec
div
insb
sub
mov
add
xchg
cltd
pop
bswap
dec
add
and
pop
rorl
imul
shlb
aad
mov
mov
push
pop
std
icebp
push
dec
xchg
cmp
std
das
xchg
push
les
mov
mov
adc
fiadds
inc
mov
jnp
sbb
push
sbb
and
aam
mov
push
lds
inc
loopne
push
arpl
inc
or
jno
loopne
mov
pushf
out
hlt
clc
popf
stos
iret
lahf
rclb
cmp
and
and
cli
jo
mov
xchg
into
ret
std
in
out
lret
popf
xchg
sbb
outsl
mull
push
call
rorl
and
add
and
inc
push
mov
cmp
nop
lea
scas
in
or
movsl
pminub
add
leave
scas
nop
jnp
int
shl
in
ss
scas
sti
scas
nop
sbb
loopne
ja
mov
xorb
test
inc
rcll
xchg
xchg
push
push
inc
dec
fwait
sub
ret
movsl
fsts
or
cmp
mov
push
mov
jne
pop
sbb
je
sbb
mov
jp
outsl
or
cmc
fldcw
in
or
xor
cli
mov
add
sbb
test
push
sub
sub
adc
lds
jp
cmp
jge
addr16
or
and
andl
push
decl
jbe
add
dec
pushf
sub
cli
aam
cmp
sub
cmp
xchg
je
shrl
fstl
xor
mul
push
or
lahf
mov
iret
pop
loop
mov
and
cli
outsb
xchg
add
inc
adc
mov
ljmp
lret
aam
jecxz
and
cld
pusha
and
push
and
and
push
leave
dec
lods
addr16
fisubs
xor
inc
push
add
ret
or
push
cmpsl
cmp
and
xchg
out
dec
push
xchg
jb
je
inc
sub
xor
xchg
xor
rcr
fsubr
push
cmc
sub
sti
nop
inc
es
mov
shl
mov
mov
mov
pusha
add
lret
lea
test
sti
xlat
data16
sub
movsb
jecxz
dec
mov
xchg
sub
loop
popa
mov
mov
jp
and
xlat
adc
das
push
test
das
cwtl
jns
mov
inc
xor
jp
sbb
in
cli
lock
xlat
mov
mov
cmp
loopne
push
xchg
jmp
pop
popf
gs
sbb
rorl
fs
mov
sbb
dec
int
movsb
movsb
movsb
inc
mov
sbb
in
dec
clc
xchg
lea
repnz
dec
lods
lcall
addl
fs
add
clc
mov
mov
clc
ss
ds
push
in
cmp
xor
lods
and
or
xor
mov
sbb
adc
clc
call
push
jne,pn
and
repz
mov
jle
int3
imul
mov
fdivrl
inc
xor
imul
mov
pop
cmpsb
out
test
mov
and
icebp
dec
adc
hlt
std
and
test
cmc
jbe
or
daa
mov
dec
aad
pushf
je
inc
in
movsl
test
popa
or
test
mov
shl
enter
test
cwtl
push
movsb
enter
xlat
mov
jns
orb
or
inc
inc
cmp
sub
into
cmpl
pop
mov
xchg
or
sub
scas
xor
int3
dec
mov
add
xchg
notb
cld
gs
jle
mov
fstpt
loopne
js
sub
add
mov
cmp
ret
jecxz
and
and
push
mov
pop
insb
jmp
lret
pop
mov
and
fmul
shrb
jmp
inc
and
mov
sbb
dec
sbb
mov
mov
roll
pop
mov
sbb
aam
push
ret
push
sub
lods
scas
scas
mov
ret
xchg
jle
rcrb
mov
rorb
iret
roll
push
inc
mov
xchg
dec
jbe
test
add
push
rcl
inc
mov
out
mov
icebp
cmp
stos
xor
sbb
jns
fnstsw
in
scas
sub
int
cmp
dec
ljmp
dec
outsb
das
or
stos
mov
test
nop
inc
loope
jle
icebp
aad
sub
jmp
pop
hlt
jae
mov
stc
lock
lock
outsb
add
push
push
icebp
sbb
rclb
mov
inc
std
jae
and
push
mov
mov
dec
das
inc
mov
out
jle
cmp
subl
sub
pop
jns
push
mov
ficoms
aas
fwait
adc
push
add
rcl
mov
adcl
ljmp
stc
push
aaa
xor
js
mov
sub
cmp
inc
xchg
jne
sub
fcomp
sbb
mov
mov
inc
add
cmp
sub
nop
rcrb
int3
sti
mov
push
jge
bound
mov
and
loopne
jle
int3
lcall
mov
pop
fwait
mov
rcrl
gs
mov
fs
repnz
and
rcl
adc
cmp
rclb
ljmp
call
movsb
addl
dec
cmp
inc
ret
xchg
sub
xor
outsb
cli
ret
lcall
mov
clc
and
insl
mov
test
sbb
cs
mov
lea
mov
outsb
stos
jno
xor
mov
inc
rolb
jge
jno
les
repnz
mov
out
loopne
mov
pop
insb
add
or
lods
mov
test
add
test
addr16
es
dec
fwait
sbb
jne
loope
jno
or
pushf
lea
mov
outsb
inc
lret
and
push
out
xchg
mov
inc
negl
fsubl
fwait
out
inc
pop
mov
dec
sbb
mov
bound
shlb
xlat
xor
loopne
jl
lock
jns
leave
nop
mov
lcall
in
push
add
mov
cmpsb
es
repnz
enter
addr16
lds
mov
jo
rcr
xchg
jmp
or
in
js
push
popa
cmp
mov
mov
add
lahf
mov
mov
add
shr
in
pop
mov
fsubrs
popa
test
lcall
in
out
pop
shlb
hlt
cltd
lock
mov
xchg
scas
shll
mov
add
fs
clc
out
jp
mov
and
scas
add
aaa
push
xor
sbb
jmp
cs
js
or
jl
pop
xchg
into
leave
es
jo
adc
int
sbb
xchg
push
cmp
int3
pop
lcall
cmp
cwtl
adc
movsl
mov
cmp
pop
mov
aam
insb
mov
jns
mov
in
sub
test
cmp
fs
fcoml
movsl
xlat
xchg
xor
cltd
jp
shlb
iret
andl
sub
lea
gs
in
cltd
imul
cltd
cwtl
pushf
cmc
aaa
mov
aad
shrb
mov
xchg
dec
aas
sbb
in
sub
aas
or
mov
mov
lahf
fldt
sbb
pusha
jge
cmpsb
lcall
mov
push
or
cmpb
ljmp
mov
xor
pop
jno
mov
jb
add
add
inc
sarb
pop
and
loopne
dec
cmpsl
neg
out
pop
gs
sbb
cltd
sbb
sub
xor
xor
add
push
loope
cmp
inc
lahf
jo
push
cmc
repz
cmpsb
pop
dec
inc
pushf
push
ja
scas
sbb
hlt
xchg
lock
pop
pop
cmpsb
mov
mov
in
mov
jl
jmp
nop
mov
mov
inc
xchg
fs
mov
cli
push
mov
movsb
lret
std
push
adc
jmp
repz
idivb
arpl
and
mov
aad
and
fs
insb
mov
push
ds
adc
adc
pop
and
aaa
loopne
adc
lods
insb
inc
lret
repnz
inc
mov
push
mov
fs
rorb
aam
jnp
or
scas
lds
push
pop
push
rcrl
dec
jmp
adc
jne
cwtl
cltd
mov
xchg
sub
push
cmp
rol
lret
add
push
dec
fwait
mov
shl
aad
std
adc
xor
push
adc
arpl
movsl
push
xor
cltd
cmp
mov
fistps
insl
movsl
dec
pop
xchg
sarl
repnz
mov
pop
sub
aas
into
out
inc
sub
stc
push
xor
xchg
pop
xchg
sub
lret
dec
lods
out
mov
ret
push
aam
push
js
adc
or
cltd
in
repz
xor
out
push
mov
lret
push
mov
cld
dec
sbb
xchg
inc
addb
mov
les
pop
es
pop
and
cmp
push
in
sub
push
lock
xor
xchg
mov
clc
dec
push
add
xchg
jl
or
out
cmp
into
ret
fsubrl
aas
push
cld
pushf
fildl
pop
loop
jnp
nop
jmp
addr16
shl
adc
dec
mov
push
push
inc
adc
fsubrl
into
shll
stc
mov
xor
add
adc
adc
pop
mov
jle
and
push
jo
inc
and
mov
and
mov
sub
jge
mov
inc
xlat
push
push
rclb
xchg
ret
out
inc
add
mov
and
adc
jmp
sbb
nop
or
mov
js
mov
mov
adc
jecxz
fadds
cmp
xor
gs
popl
movl
jno
leave
aaa
pop
and
sbb
push
pop
out
stos
dec
cmpsl
ds
push
mov
and
push
jbe
test
rorb
iret
push
sub
push
add
pop
add
sti
mov
mov
add
adc
loopne
inc
mov
fnstsw
push
mov
jnp
or
jae
dec
mov
add
cmc
xor
add
js
pop
cmp
sbb
repnz
sub
scas
pop
cmpb
roll
adc
out
test
xchg
xlat
mov
movl
push
mov
mov
rorb
inc
jo
outsb
lock
repnz
daa
push
jns
fbld
enter
icebp
xchg
out
push
cmpsl
xor
inc
xchg
sbb
sbb
insl
and
hlt
idivl
out
mov
mov
insl
dec
rcpps
adc
into
mov
fidivl
fnsave
jge
cmpsb
xor
xchg
lret
test
test
in
lods
and
add
or
inc
popa
in
adc
jne
jb
mov
jp
iret
aad
sbb
push
xchg
mov
and
cli
into
out
scas
or
loopne
sub
adc
nop
outsl
call
addl
fstpt
std
ja
jl
add
movl
lds
mov
nop
mov
cmp
repz
loope
clc
fmul
lret
je
mov
adc
lahf
inc
jne
jno
ret
lret
popw
jne
push
and
xor
loop
push
inc
std
fldt
mov
js
out
xchg
jbe
pop
mov
lcall
and
scas
sahf
and
xchg
popf
or
int3
test
mov
push
sbb
ljmp
lock
bound
roll
stos
fadd
sub
pusha
pop
call
sbb
fwait
xor
adc
stos
inc
or
addl
push
ffree
push
test
rclb
xor
xor
mov
mov
cmp
pop
push
push
cs
divl
ret
sub
jmp
sbb
imul
in
neg
loop
test
dec
fists
loop
in
jecxz
pop
testl
sbb
vaddsubpd
rorb
pop
inc
xor
cmc
es
cmpsl
fnstenv
dec
push
fcoms
mov
test
outsl
sbb
pushf
ljmp
cmp
pushf
mov
add
add
insl
push
xchg
insl
pop
das
and
ja
xor
sbb
push
and
mov
push
or
into
icebp
xchg
sarl
add
pop
cmpsb
push
mov
ret
js
maxps
imul
jae
xchg
inc
xor
dec
jo
shlb
sti
pop
sbb
and
cwtl
mov
into
lret
mov
shll
gs
out
mov
xor
cmpsl
test
in
mov
into
daa
les
inc
fwait
mov
test
xchg
push
mov
shrl
inc
mov
sbb
aam
sub
and
adc
into
sub
lret
std
xchg
dec
xchg
xor
inc
outsb
out
jb
xor
jno
xor
ret
mov
mov
cmc
cwtl
fisubrl
push
pop
mov
rcr
loope
xchg
push
shll
cmp
test
cmp
popf
shll
mov
sbb
imul
sbb
test
insl
loope
adc
jle
lds
dec
pop
mov
jle
mov
ss
push
fistpll
mov
or
stos
rol
popf
fmuls
mov
dec
cmp
imul
inc
xrelease
cmpsb
pop
ss
add
or
inc
mov
jl
mov
in
mov
sbb
and
jns
pushl
cmpsb
xorl
mov
sbb
scas
cmp
mov
pop
or
xchg
cmpsl
nop
repz
fdivrl
sbb
test
mov
jg
out
movsl
pusha
repz
shll
adc
in
dec
mov
aaa
sbb
jle
dec
sarl
dec
xchg
push
mov
std
mov
inc
push
into
popf
sub
es
mov
and
movsl
xchg
xchg
cli
sbb
mov
cltd
xchg
xlat
imul
sub
mov
mov
jae
push
ja
xor
or
pop
das
mov
xlat
pop
mov
sti
mov
stc
shl
mov
push
pop
cld
rorb
push
out
movsl
inc
nop
pop
imul
sub
push
stc
or
cmp
inc
icebp
mov
bound
incl
add
sbb
out
push
adc
cmp
lds
addl
inc
fistps
mov
push
pop
out
mov
sbb
mov
rclb
dec
iret
mov
pop
cld
out
popa
outsl
jnp
test
fs
add
fcomip
fnsave
outsl
push
lods
mov
rcl
add
outsb
ror
lea
dec
jae
aaa
mov
cmp
das
mov
insb
out
jnp
je
hlt
test
mov
or
ljmp
loop
arpl
mov
into
add
sub
jecxz
pop
lahf
call
cmpsl
cwtl
mul
data16
inc
int
inc
jns
push
jl
sub
and
xchg
xchg
enter
iret
movsb
jne
jmp
or
dec
mov
in
lock
ret
ljmp
xor
lcall
jb
push
push
mov
xor
sbb
ret
xor
cmp
std
xchg
sbb
incb
imul
inc
and
les
fcoms
jl
stos
cmp
daa
xlat
push
mov
stos
inc
repnz
ret
jecxz
int3
cmpl
subb
ds
out
mov
xor
pop
adc
push
fldt
sbb
jl
pop
push
scas
sub
and
data16
pop
fucom
xchg
mov
xor
pushf
xor
jle
arpl
push
mov
arpl
and
add
and
rorb
dec
call
cmpl
shll
jnp
das
hlt
pop
xlat
gs
insb
or
and
hlt
xor
or
sbb
in
ss
and
idivl
cs
mov
ret
jbe
mov
fadds
inc
or
aas
mov
daa
enter
movsb
es
adc
movsl
divl
xor
clc
mov
cmp
inc
jns
xlat
loop
mov
mov
or
dec
shl
xor
ljmp
test
or
fistl
cmc
addb
mov
nop
pop
sub
or
sub
add
mov
mov
popa
jecxz
cld
orb
mov
icebp
push
fsubs
mov
cld
push
add
fisttps
std
and
rcrb
pop
fstpl
fnstcw
cltd
stos
push
incb
mov
nop
xor
lcall
int
movb
movsb
call
daa
into
loopne
inc
test
fld
out
imull
jae
cs
sub
popf
mov
andb
jecxz
add
pop
sbb
mov
in
xchg
fwait
or
gs
ljmp
ljmp
bound
mov
cmp
scas
adc
lds
xchg
mov
mov
sbb
push
dec
xchg
test
or
xchg
inc
xchg
aam
in
in
test
sti
fistpll
inc
and
aaa
popf
stos
mov
push
pop
ljmp
xor
add
xchg
jmp
leave
ljmp
les
mov
pop
pusha
mov
es
cmp
pusha
out
xchg
out
jp
pop
push
in
fdivrs
enter
fidivrl
mov
pop
out
mov
mov
std
stos
jo
xchg
pusha
bound
mov
jmp
sub
fsubrp
data16
jp
in
test
aad
popf
andb
mov
pop
mov
pop
inc
cmpl
fldcw
mov
xchg
popa
jnp
int
in
add
cld
shrl
inc
mov
aaa
lcall
mov
pop
mov
mov
test
mov
adcb
cmp
enter
int
cmp
loope
subl
push
sti
rorl
enter
mov
stos
inc
xchg
push
dec
and
pushf
jae
out
jno
cld
mov
or
mov
ljmp
jo
pop
sbb
loopne
jns
adc
push
inc
mov
popf
xchg
inc
hlt
sbb
mov
popa
pop
shrl
cwtl
aam
sbb
cwtl
int
mov
inc
mov
mov
xor
sti
and
dec
adc
lds
movsl
push
add
ljmp
loop
xchg
and
shlb
xchg
mov
je
lods
and
divl
jbe
jns
and
xchg
movsl
fildl
jns
adc
shlb
mov
pop
mov
inc
ss
scas
mov
jnp
mov
or
in
fldl
int3
xor
cli
sub
and
mov
pop
mov
xlat
out
mov
lods
icebp
imul
int3
jbe
jno
fnstcw
sub
scas
test
push
inc
xor
lds
push
das
stos
pusha
shl
sbbb
ret
sbb
in
xchg
cmc
sbb
dec
cwtl
pop
and
decl
xchg
test
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
mov
push
call
movl
jmp
movb
movb
movb
pushl
pop
mov
mov
push
call
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
mov
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
push
push
push
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
mov
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
push
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
push
call
lea
push
call
call
cmpw
je
push
call
push
call
add
jmp
pushl
fwait
lret
inc
shll
add
pop
or
shll
imul
or
mov
shll
mov
lret
inc
shll
mov
lret
inc
shll
loope
pop
std
aas
xchg
pop
jns
inc
popf
scas
dec
stos
aam
mov
xor
frstor
in
ljmp
addr16
aam
js
sub
add
mov
shll
add
dec
add
sahf
dec
xchg
lcall
les
lret
mov
popa
cmp
fwait
not
repz
fs
test
mov
mov
sub
mov
xchg
lcall
and
fadds
or
lock
cmpsb
fnstenv
andl
push
and
push
movsl
out
xchg
rcrb
aad
xor
popf
aam
add
or
shll
in
dec
std
mov
lret
pop
or
xor
std
mov
shlb
pushl
lret
inc
shll
mov
lret
inc
shll
mov
ficompl
inc
shll
sti
mov
lret
inc
shlb
mov
lret
inc
rcr
pop
sti
mov
lret
inc
shll
mov
ficompl
inc
shll
out
mov
lret
inc
shll
nop
mov
xchg
mov
shrl
std
mov
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
mov
inc
pusha
mov
lock
or
aad
imul
lret
inc
shll
mov
mov
bound
mov
lret
inc
rcrl
mov
lret
inc
shll
fidivrs
pop
or
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
shll
mov
lret
inc
xchg
mov
xchg
or
fwait
fwait
lret
popf
mov
mov
mov
movsb
scas
mov
rorb
roll
pop
sub
pop
aaa
cmp
jnp
sbb
divl
xchg
sbb
or
adc
or
adc
int3
rol
sub
sarl
pusha
std
pop
outsl
and
pop
inc
cmp
adc
mov
bound
fcmovnbe
insb
jno
xorb
pop
pop
jmp
add
movsb
hlt
aaa
lods
or
mov
inc
cmp
fcmovnb
sub
outsb
out
pusha
fistpll
cmp
cmc
mov
aam
xchg
popa
inc
pop
mov
jmp
popf
idivl
mov
fcoml
fs
mov
sub
xorb
pop
rclb
mov
rorb
push
ljmp
out
scas
xor
mov
push
std
xor
push
inc
ficoms
push
add
jl
add
sti
xor
lds
out
sbb
in
inc
sub
jmp
out
xorb
add
not
std
stos
mov
xchg
test
mov
cmp
jnp
daa
adc
sub
push
outsl
xchg
inc
dec
jge
imul
outsb
jmp
xchg
setb
subb
push
nop
push
and
hlt
inc
pop
clc
cmp
in
inc
push
fucomp
push
mov
cmpsb
mov
das
mov
xchg
int
pop
and
aas
mov
mov
andb
push
test
jmp
sbb
ret
cmp
dec
imul
cmpsl
xchg
mov
sahf
repz
pop
dec
mov
xchg
daa
int3
int
jno
popa
mov
mov
pop
imul
push
sbb
xchg
repz
push
dec
or
sub
push
stc
mov
stos
jmp
jo
int
xor
and
inc
js
xchg
push
insl
pop
jle
push
cmp
pop
push
mov
or
xor
lea
icebp
clc
lods
jbe
das
testl
jns
mov
inc
lods
xchg
sbb
in
jb
scas
inc
mov
and
push
add
insl
pop
or
in
jnp
mov
xchg
dec
into
aas
pop
xor
sti
pop
add
push
lods
stos
mov
lret
popa
fists
clc
cwtl
nop
imul
dec
test
push
jp
fs
pop
in
or
mov
fwait
or
jmp
adc
cmp
outsb
lods
mov
mov
inc
shll
sub
daa
out
cmp
push
subl
fwait
enter
or
sbb
and
rcrl
enter
insl
and
loopne
push
push
xchg
push
pop
or
cmp
push
fsubr
cs
aaa
jl
daa
stos
fs
push
fwait
pop
test
or
mov
incl
notl
pop
sub
dec
xchg
sar
adc
or
mov
push
sbbb
jg
scas
sub
jno
xor
xchg
dec
mov
pop
sbb
cmp
filds
into
and
dec
lret
xchg
sbb
jmp
mov
adc
mov
pop
xchg
imul
xchg
mov
mov
mov
adc
and
mov
xchg
ja
shll
into
mov
adc
xor
xchg
cli
mov
dec
xor
mov
lret
push
leave
lds
test
xor
mov
scas
mov
dec
mov
cmp
push
mov
mov
fistps
adc
inc
jb
lds
lds
pop
adc
addr16
mov
pop
push
lret
jno
dec
dec
into
jp
call
mov
pop
sahf
iret
mov
test
push
add
push
cmp
cli
jns
fdivrl
mov
mov
xlat
mov
jbe
cmpsb
and
pushf
cs
pop
cmp
imul
and
lcall
sbb
lea
pop
movzbl
ja
inc
lock
pusha
push
fadd
jb
jbe
ret
loopne
int3
lret
jns
addr16
shrl
or
jno
add
add
cmp
inc
js
shll
int
adc
out
mov
in
int
sub
call
inc
jecxz
out
xorl
inc
adc
fnsave
icebp
xchg
cmp
mov
mov
xchg
shl
pshufw
js
adc
jo
mov
pop
ss
aad
lret
es
je
xchg
or
cmp
sub
stos
cmp
and
jecxz
jb
mov
and
aaa
jmp
sahf
jno
adc
pop
cmpsb
mov
test
and
sub
pop
and
jnp
aam
stos
daa
ficompl
dec
dec
sbb
mov
js
inc
jp
mov
shr
add
jp
mov
dec
push
jle
xor
sbb
xchg
pop
leave
jg
popf
xor
mov
sahf
pop
fs
cmp
idiv
in
adc
xor
in
cmc
out
pop
add
arpl
out
xchg
adc
pop
call
loop
in
cmp
loop
mov
sub
cmp
imul
jb
mov
test
mov
test
stc
and
ret
jnp
and
mov
lods
int3
inc
pop
or
mov
or
inc
or
fstpt
shlb
jmp
xor
inc
loop
mov
mov
cmp
cwtl
idivb
pop
imul
rorb
outsl
dec
xchg
mov
stc
xchg
out
jl
push
fxch
enter
cmp
fisubrs
xchg
js
or
or
ficompl
pop
adc
clc
ljmp
mov
mov
popa
mov
lds
and
push
pop
loope
xlat
daa
mov
jne
pop
test
int
mov
inc
dec
xor
insl
add
fstl
push
fbld
fnsave
sbb
jnp
arpl
sbb
mov
dec
jg
scas
add
or
push
cmp
lret
push
sub
cld
sahf
sub
arpl
add
inc
dec
jns
icebp
xchg
jmp
jl
test
out
aaa
rolb
loopne
inc
pop
mov
loope
xor
mov
mov
push
cmp
aas
xor
dec
loope
xchg
sub
insl
pop
js
rcl
jbe
lahf
xchg
aam
icebp
cmpsb
pop
hlt
mov
fists
and
lods
inc
lds
in
dec
fwait
dec
xchg
jns
jge
add
test
sub
pop
scas
jmp
stos
pushf
data16
mov
ret
nop
add
int3
insl
pushf
xchg
jno
xchg
xor
push
cmp
ret
sbb
shl
push
mov
outsb
ret
das
outsl
les
push
out
scas
inc
mov
test
es
mov
dec
testl
fisubrs
into
pusha
clc
xlat
icebp
stos
idiv
and
stc
mov
jo
and
test
jbe
pop
cmp
insb
jmp
push
mov
mov
imul
pop
and
pop
mov
test
ret
fidivl
iret
push
xor
mov
adc
ror
daa
fnstsw
push
jnp
mov
mov
in
pusha
push
xchg
xor
bound
jo
insl
ds
sub
shlb
inc
leave
push
cltd
jecxz
lods
mov
les
adc
pop
nop
jg
scas
add
push
dec
dec
cwtl
add
dec
add
and
push
dec
xlat
in
imul
lock
or
or
push
jae
adc
xor
mov
lcall
sbb
push
scas
add
adc
adc
inc
cs
sub
xchg
pop
cltd
sarb
jnp
jp
rorl
scas
insl
cs
sbb
int
bound
out
addb
cmp
or
jp
loope
rclb
sarl
jp
aaa
out
dec
and
bnd
add
mov
push
dec
shrl
jae
popf
nop
and
cmpsb
cmp
repnz
adc
icebp
test
jbe
test
inc
mov
jg
xor
xchg
cmc
lock
jae
mov
and
inc
test
aad
lret
jg
ss
stc
shl
jns
xchg
lahf
imul
hlt
and
xor
mov
jns
out
mov
cmp
jle
or
inc
movsl
inc
lahf
sbb
pop
insl
adc
fistl
mov
mov
cs
jne
lret
push
mov
cmp
scas
shlb
inc
jo
mov
adc
in
dec
cli
les
push
sub
inc
sbb
sbb
test
dec
fs
je
outsl
inc
nop
lock
push
mov
ss
insb
aam
arpl
xor
ds
scas
mov
xchg
jmp
xor
mov
ficoms
mov
mov
add
cmp
and
shlb
nop
xor
shl
lret
jb
push
or
fucom
shrl
mov
mov
xor
dec
jno
lock
push
sti
xchg
mov
jo
das
and
adc
adc
scas
stc
mov
and
cmp
pusha
cmpsb
pop
mov
stos
push
fdivr
mov
ja
stos
pop
std
leave
icebp
roll
mov
mov
lods
lcall
mov
and
push
popa
xchg
jecxz
sbb
lods
cmp
movsb
mov
aad
xor
cmp
cmp
sub
jne
jmp
mov
pusha
mov
add
lods
mov
repnz
jne
push
loope
leave
push
cmpsl
cs
mov
mov
add
sbb
cmp
add
fs
adc
jecxz
loop
mov
dec
lea
lea
jno
rcrl
sahf
movsl
dec
addr16
mov
adc
enter
pop
notb
cmp
or
xor
jmp
in
inc
sbbb
fcompl
push
stc
imul
and
xor
mov
fidivrs
dec
stos
loope
mov
repnz
adc
cmpsl
jp
pop
mov
call
lods
or
fsubrl
cli
outsl
leave
sbb
sbb
jne
mov
in
pushf
popa
inc
insl
roll
ja
sub
pop
and
mov
out
add
das
push
mov
arpl
jecxz
xchg
pop
and
repnz
ljmp
xchg
jb
jo
popa
cli
das
fdivrs
sbbl
mov
mov
jg
in
dec
imul
into
inc
mov
or
jp
sbb
mov
pop
xor
roll
push
sub
arpl
xor
testl
outsb
fstps
sbb
std
es
addr16
dec
cs
pop
cmp
fwait
push
xchg
sarb
lds
std
ljmp
jl
push
jg
jg
loopne
add
sbb
sub
add
pop
jo
pop
out
and
nop
push
int3
mov
sub
dec
test
scas
cmc
mov
cld
mov
mov
in
push
dec
adc
sbb
hlt
push
test
and
out
adc
rcrl
lock
and
cmpl
inc
arpl
pop
clc
iret
push
insb
xor
imul
mov
and
inc
push
jle
aas
pop
inc
sbb
mov
stos
test
bound
xor
jle
jne
inc
cmp
ja
mov
and
addr16
mov
cmp
mov
adc
push
push
call
xor
add
ret
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
