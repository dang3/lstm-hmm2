mov
insb
push
and
add
or
and
add
int3
bound
and
adc
cwtl
dec
add
and
add
and
fiadds
data16
roll
addb
mov
add
lea
add
orb
and
add
add
ret
inc
add
xor
add
or
enter
adc
adc
imul
inc
add
test
or
orb
push
add
test
sub
imul
nop
adc
addl
and
adc
push
add
push
adc
addb
cmp
add
mov
adc
add
and
and
sbb
add
push
inc
lock
or
xor
mov
jo
and
add
and
mov
and
add
inc
ds
mov
sbbb
inc
or
adc
add
inc
add
add
add
add
inc
push
and
add
addl
and
xor
andb
or
push
push
add
imul
je
fwait
add
mov
and
and
nop
dec
add
sbb
add
ret
add
or
or
sbb
add
jb
adc
data16
andb
xor
addb
nop
adc
andb
jmp
and
adc
adc
add
verw
inc
arpl
or
fimull
inc
or
inc
shlb
pusha
test
adc
loop
push
add
xor
inc
and
subl
mov
add
add
or
push
sub
xor
mov
add
inc
add
sbbl
adc
test
push
sub
xchg
and
adc
cmp
orl
test
test
and
or
adc
or
mov
sub
and
add
and
adc
push
inc
inc
and
adc
add
inc
push
or
add
addb
cmovs
add
addb
add
mov
add
sub
or
inc
and
add
sub
add
adc
sub
sub
and
and
inc
dec
add
or
add
add
dec
adc
pop
push
or
inc
sub
addb
push
orl
push
add
adc
add
orb
and
add
test
or
dec
pusha
add
and
and
and
or
mov
add
enter
sbb
add
and
shlb
or
scas
inc
js
add
add
add
adc
push
and
xor
adcb
add
insl
or
and
adc
mov
adcb
rcrb
mov
add
dec
mov
push
push
sub
sub
es
or
inc
push
add
add
add
push
add
cmp
add
add
xorb
xchg
xor
inc
sahf
dec
add
or
inc
mov
or
adc
inc
rclb
pusha
mov
add
mov
nop
xchg
leave
loope
test
nop
add
andb
add
and
and
inc
xchg
pop
add
mov
es
or
push
test
dec
enter
adc
add
push
inc
inc
dec
addl
or
adc
inc
cmp
rclb
adc
inc
add
ljmp
and
andb
addl
dec
add
add
adc
dec
or
or
adc
add
add
addb
mov
or
add
cwtl
roll
add
or
add
ret
addl
inc
andb
xchg
add
addl
push
push
sub
imul
mov
add
mov
pusha
and
add
dec
sbb
push
xor
sub
addb
and
adc
sbbb
loopne
adc
and
les
sub
loope
xchg
xchg
and
addb
push
mov
test
orb
add
dec
add
addl
dec
ret
mov
push
adc
orb
add
inc
inc
xor
push
sub
adc
inc
push
add
rcll
add
add
add
xchg
add
pusha
add
stos
add
add
push
ja
andb
sbb
nop
inc
mov
and
dec
and
and
add
add
or
lods
movsb
inc
insb
xor
inc
sbb
add
popa
cmp
or
lods
mov
add
add
or
add
and
mov
or
dec
adc
dec
add
out
add
sbb
lea
add
push
and
and
addb
popa
inc
bound
test
add
mov
add
adc
add
add
adc
add
add
sbb
xor
and
and
movsb
add
nop
sub
cmpsl
and
or
add
mov
mov
add
dec
int3
push
inc
add
add
adc
andl
fwait
add
add
nop
inc
add
inc
mov
add
rcrl
xchg
addl
add
andb
inc
push
pusha
andb
sldt
or
inc
add
add
or
sub
enter
mov
shll
mov
mov
mov
add
roll
adc
add
add
adc
movsb
mov
addl
sbb
or
adc
rorb
pusha
nop
and
inc
inc
add
sbb
inc
test
inc
push
sbb
addb
mov
ret
arpl
or
adc
orb
add
push
adc
dec
bound
add
leave
add
pop
add
add
addb
bound
adc
push
and
popa
add
add
add
xchg
inc
addb
add
or
xchg
adc
add
push
adc
adc
xchg
movsb
leave
addb
sbb
and
or
add
adc
add
add
outsb
inc
and
add
nop
add
xor
or
jo
add
add
mov
inc
sbb
mov
and
dec
add
pop
push
les
add
adc
add
adc
xchg
add
add
or
and
ljmp
or
push
add
and
rclb
add
xor
and
andb
mov
or
or
mov
test
add
test
push
add
or
or
test
lock
test
add
pop
bound
add
add
andb
adc
or
addb
inc
adc
and
dec
or
sbb
cmp
xor
add
and
mov
mov
les
sub
adc
mov
add
subb
cmp
and
and
dec
call
fadds
or
movsb
sbbb
adc
rcrb
add
inc
add
add
push
shlb
and
inc
inc
xor
int3
and
push
add
xchg
sub
arpl
dec
adc
adc
and
add
xor
add
imul
sub
or
nop
add
test
dec
dec
mov
mov
push
and
add
mov
xchg
xor
mov
sub
orb
andb
addl
jo
addb
popa
mov
add
and
addb
xor
adc
add
add
addl
add
adc
addl
add
xor
int
adc
sub
add
addb
or
push
and
aaa
xor
pusha
inc
test
in
inc
clc
and
add
inc
inc
subb
cmp
mov
or
add
add
add
add
add
inc
dec
adc
adc
push
dec
and
sbb
xor
add
add
add
and
inc
and
adc
mov
add
mov
les
pusha
pop
adcb
add
addl
nop
or
mov
sbb
or
pusha
roll
loop
mov
xor
daa
addb
add
add
add
add
and
xchg
add
mov
adc
nop
test
inc
lods
sub
mov
add
and
push
and
push
sbb
sub
or
and
add
orb
pusha
fistl
adc
inc
andb
add
add
inc
add
inc
add
push
add
xchg
dec
addb
or
push
add
add
fildl
inc
and
push
and
or
sub
add
or
and
and
add
xor
adc
and
and
inc
dec
dec
or
pop
add
inc
mov
mov
or
sub
inc
nop
add
or
and
push
add
test
add
mov
xor
mov
and
xor
add
pop
test
add
sub
rolb
xor
push
add
add
pusha
adc
or
and
dec
test
or
add
adc
adc
add
addb
xchg
dec
and
add
sbb
add
jo
and
mov
add
and
cmpsl
adc
dec
or
add
movsb
cltd
xchg
add
fs
or
and
pusha
jo
add
and
and
or
add
and
cmp
or
add
and
and
dec
dec
add
ret
add
add
and
add
or
test
inc
or
and
add
inc
and
and
sub
adc
add
and
test
xchg
rclb
add
lret
les
adc
add
add
sub
inc
and
add
orl
sub
adc
and
adc
push
xor
add
xchg
inc
add
adc
bound
add
pusha
adc
add
add
and
mov
add
sbb
mov
add
adc
mov
test
xchg
addb
adc
les
sbb
add
add
xor
or
sbb
and
pop
add
xchg
cmpb
nop
add
or
enter
inc
adc
cmp
mov
or
sbb
dec
lock
add
dec
or
loopne
add
adc
add
adc
inc
add
add
add
test
add
or
inc
add
orl
add
inc
add
add
lock
xor
add
je
rclb
pop
adc
sub
inc
or
inc
and
inc
adc
adc
dec
lea
addl
adc
mov
mov
xchg
and
and
dec
sbb
pusha
rolb
add
inc
or
add
add
adc
or
adc
add
orb
add
imul
loopne
add
xor
add
test
push
add
add
dec
add
or
and
and
add
sbb
rorb
inc
and
add
xchg
adcl
adc
add
or
addb
and
sbb
add
and
add
add
mov
mov
add
movsb
inc
pop
and
subb
add
adc
adc
add
add
add
addb
adc
mov
cmp
push
push
andb
add
test
add
and
xchg
adc
nop
and
popa
adc
enter
add
mov
cmp
loopne
and
sub
orl
lea
inc
add
add
or
add
cwtl
adc
and
addb
shll
adc
fisttpll
test
adc
xchg
adc
inc
push
add
loopne
addb
add
mov
addb
add
or
nop
and
push
add
push
and
add
add
sub
inc
addb
add
dec
adc
add
and
pop
add
or
push
adc
and
and
sub
push
andl
add
add
andb
sub
pusha
inc
push
adc
mov
add
xchg
dec
or
setb
inc
or
or
add
mov
push
inc
adc
add
inc
and
add
rol
xor
and
mov
adc
and
add
and
or
inc
rolb
addb
add
mov
mov
push
pop
and
pusha
test
add
sub
and
adc
adcb
xchg
or
add
adc
test
inc
and
sub
or
call
rolb
inc
sbb
sbb
or
dec
add
pusha
and
add
rcl
sub
add
adc
add
or
and
cwtl
xchg
sbb
inc
add
mov
sub
add
sub
adc
pop
mov
pusha
cmp
adc
add
addb
or
xchg
or
mov
adc
sub
xorb
xor
orb
add
add
xor
add
shll
xorb
inc
add
inc
add
xor
add
xchg
inc
jo
inc
ret
add
pushf
add
arpl
and
sbb
rcl
and
mov
sbb
or
push
add
sbb
and
inc
dec
les
or
add
add
sub
shlb
ret
or
adc
leave
add
add
add
add
xchg
hlt
call
addb
push
xorb
and
pusha
add
nop
inc
xchg
and
xchg
mov
mov
addl
push
add
and
add
add
inc
or
or
add
add
lods
rolb
enter
or
add
inc
mov
or
dec
pusha
add
pop
ret
inc
orb
adc
and
add
dec
dec
sbb
daa
and
bound
add
pop
add
add
adc
andb
mov
and
and
pushf
add
and
mov
inc
dec
and
mov
and
adcl
fsubrs
pop
or
and
sub
rolb
push
or
sbb
and
adc
or
inc
sbb
adc
add
imul
add
add
xor
and
pusha
add
add
pusha
dec
push
and
jmp
mov
add
add
xor
add
adcb
or
add
add
ret
addb
xor
or
or
nop
or
push
push
add
and
push
add
add
adc
push
rolb
sub
push
mov
adc
and
xchg
movsb
pusha
push
sbb
inc
sub
or
add
mov
push
inc
or
inc
dec
add
adc
andb
adc
cmp
addb
ret
add
add
or
add
xchg
inc
xchg
les
andl
and
inc
and
xchg
or
dec
loop
add
ror
mov
add
and
nop
addb
sahf
adc
and
inc
add
push
and
or
inc
or
dec
push
and
nop
sub
xchg
mov
or
or
orb
mov
or
mov
xorl
test
andl
push
sub
test
test
add
addl
and
xor
adc
add
or
xchg
adc
lcall
and
or
push
add
inc
adc
and
add
sbb
adc
xor
movsb
or
sbb
push
sbb
orb
add
cmpsb
push
test
mov
imul
dec
dec
add
and
and
adc
add
lret
addl
or
or
sub
rorb
xchg
and
inc
rolb
and
inc
add
dec
enter
add
sbb
add
int3
or
das
push
int3
pusha
add
mov
add
add
addb
add
inc
inc
or
pusha
sub
pop
push
stos
mov
sbb
adc
shrl
pop
inc
dec
add
sbbb
movsl
add
and
pusha
ret
add
subb
rolb
add
lods
pop
or
pushf
cwtl
adc
and
inc
inc
add
and
add
mov
pop
xchg
adc
adc
push
push
add
push
xor
movsb
push
rcll
or
add
pop
sub
andb
add
add
adc
and
and
xor
add
sbb
mov
and
push
add
addb
or
adc
add
add
and
mov
xchg
add
push
dec
or
add
nop
lds
inc
and
or
adc
push
mov
and
inc
or
add
add
and
push
xchg
popf
add
add
adc
add
sbb
mov
mov
outsb
add
pop
nop
xor
adc
add
cmp
or
rolb
add
push
add
stos
inc
add
rolb
data16
fldenv
rolb
addl
or
test
add
movsl
adc
adc
or
je
imul
or
into
cmp
test
push
add
adc
adc
nop
add
adc
bound
andb
add
rolb
orl
jl
mov
ret
dec
lods
nop
pusha
or
add
add
test
add
inc
pusha
add
adc
and
add
rolb
movsb
dec
pop
enter
sbb
add
add
add
and
in
adc
and
add
dec
mov
add
add
or
mov
add
inc
or
inc
add
mov
pusha
sbb
and
or
push
add
and
and
xorb
or
and
subb
pop
pusha
inc
ljmp
and
add
add
rclb
adc
add
or
add
add
sub
mov
or
adc
add
add
mov
add
add
cmp
sbb
andb
pusha
inc
addb
mov
fs
push
and
pop
add
addb
sub
sbb
push
add
xor
pop
adc
push
icebp
addb
cmpsb
and
or
mov
addl
or
inc
mov
jl
sbb
and
and
addl
adc
lret
and
mov
add
sub
test
and
or
adc
add
or
add
adc
add
inc
or
pusha
add
mov
mov
adc
and
inc
xor
orl
cmpb
sub
dec
add
and
test
les
sub
add
inc
xor
fs
cmp
and
and
add
add
orl
pop
xor
add
inc
adc
push
or
or
or
test
pusha
push
add
adc
and
add
xor
rorb
adc
or
xor
popa
adc
sbb
imul
add
fmull
inc
add
mov
push
adc
rorl
adc
inc
test
adc
add
add
pushf
add
arpl
or
cwtl
mov
mov
loopne
or
add
or
add
dec
nop
pop
sbb
and
inc
lods
call
and
or
mov
pusha
add
test
push
adc
ret
sbbb
mov
add
sub
pusha
sbbb
add
mov
and
and
add
sbb
mov
add
nop
adc
and
and
add
and
push
or
sub
cmpb
add
add
add
push
popf
and
push
addb
and
or
inc
rcll
adc
nop
adc
and
add
add
aaa
popa
fs
xchg
test
sub
push
es
cwtl
adc
adc
adc
and
and
add
add
inc
add
and
adc
add
add
or
adc
add
add
or
inc
or
orb
add
jb
orl
clc
or
add
xchg
or
add
add
dec
fsubl
and
inc
adcb
add
inc
add
test
add
and
add
pusha
add
push
and
add
push
add
add
inc
inc
sbb
bound
push
add
dec
sbb
cmp
les
sub
cmp
adc
nop
push
inc
sbb
adc
push
movsb
add
andl
rorb
mov
add
mov
or
add
inc
push
or
add
add
rcrb
rolb
add
or
add
add
adc
test
inc
or
add
add
sub
add
imul
or
inc
adc
adc
inc
cmpb
push
add
addl
add
inc
movsl
nop
and
inc
les
imul
addb
and
add
add
inc
xor
inc
adc
mov
push
test
and
andl
and
sub
add
inc
cltd
xchg
sub
adc
lods
andb
test
xor
cwtl
push
add
test
shl
in
cwtl
inc
test
popa
and
adcb
mov
mov
or
test
mov
add
push
out
add
pop
add
adc
or
xor
lea
and
andl
imul
add
add
cmp
mov
adc
or
orb
inc
sbb
and
jae
or
xor
adcb
jl
inc
nop
adcl
add
popa
adc
popa
or
and
inc
mov
adc
and
adc
and
inc
mov
xor
add
or
fwait
and
add
add
and
adc
push
lret
shlb
add
push
mov
xor
and
mov
push
and
push
dec
add
add
jo
adc
sub
adc
push
gs
subl
sbb
and
add
test
sub
and
add
sbb
or
loopne
or
sub
add
add
add
jo
cmpsl
sbb
or
mov
dec
addb
add
and
or
and
add
adcb
mov
adc
popa
add
xchg
add
or
sub
mov
or
dec
push
and
mov
sub
les
inc
andb
inc
and
and
xor
push
adc
push
or
sub
sub
push
dec
mov
add
fadd
dec
jb
adc
adc
push
mov
add
add
mov
test
and
add
inc
add
and
push
mov
adc
sbb
or
add
movsb
nop
pop
rcll
adc
add
push
or
adc
or
bound
push
adc
sub
inc
add
adcb
add
inc
ja
adc
dec
rcr
sub
inc
or
add
add
mov
nop
bound
add
push
mov
mov
and
or
inc
repnz
and
add
add
loope
adc
sbb
add
inc
push
add
dec
or
and
add
adc
add
or
add
adc
add
and
sbb
add
adc
add
or
mov
mov
and
adc
in
inc
xchg
add
sbb
and
or
add
and
sbb
or
addl
nop
xor
add
add
add
and
mov
add
push
andb
inc
sbb
add
cwtl
js
andb
test
addb
add
or
push
mov
add
mov
or
fs
mov
mov
push
dec
pusha
sbb
add
add
orb
or
adc
adc
dec
addb
push
sbb
mov
pop
or
add
adcb
xor
sbb
pushf
push
sub
dec
add
push
adc
sbb
or
adc
jmp
add
je
adcb
add
add
and
add
and
pusha
inc
or
sub
adc
adc
add
xor
add
add
or
add
sbb
add
andl
and
dec
adc
add
pusha
and
inc
inc
add
xor
sub
or
adc
xchg
and
add
adc
inc
dec
adc
xchg
sbb
adc
cmovb
orb
in
add
xorb
and
or
inc
adcb
or
adc
push
and
adc
inc
dec
inc
and
xchg
or
inc
add
mov
adc
add
sbb
or
add
or
add
andb
add
adc
mov
inc
add
inc
xchg
dec
add
add
adc
push
sub
xor
and
orb
add
add
and
orb
sbb
insb
add
and
add
adc
or
sbb
add
jo
add
xor
or
mov
arpl
add
adcl
push
sbb
adc
inc
adc
push
add
sub
mov
movsb
adc
sbbl
subb
inc
dec
dec
rolb
cs
add
xor
loopne
push
add
inc
and
adc
adc
orb
add
sbbb
xor
add
les
adc
and
add
inc
or
and
inc
xor
inc
or
add
and
mov
or
inc
sbb
push
sub
les
dec
xchg
add
add
dec
push
push
add
and
add
lods
inc
add
push
adc
and
rclb
add
sub
xorb
or
add
mov
xchg
push
inc
andb
and
add
add
xor
andb
adc
loope
and
orb
add
addb
inc
and
dec
add
add
inc
adc
or
or
add
push
xchg
or
dec
add
add
adc
and
jb
xchg
inc
test
adc
adc
push
pop
and
and
sub
mov
or
inc
nop
dec
adc
adc
pusha
and
inc
inc
andl
add
inc
add
pop
adc
add
adcb
add
andb
add
push
push
push
add
adcb
sbb
add
add
add
pusha
adc
xor
add
add
sub
add
mov
push
or
addb
add
add
sbb
nop
add
nop
and
add
adc
mov
xor
or
inc
inc
nop
mov
add
adc
add
or
add
and
add
push
in
call
and
and
add
inc
add
and
sbbb
data16
pop
and
xchg
inc
add
data16
sbb
xchg
add
mov
movsl
dec
mov
andb
sbb
add
inc
add
dec
and
add
add
or
fldl
or
inc
test
adc
inc
dec
andb
nop
add
or
or
and
mov
add
add
adc
cwtl
add
add
sub
push
push
addl
add
add
add
rorb
and
add
adc
test
and
mov
nop
test
inc
or
add
push
add
adc
add
add
jo
mov
aam
adc
adc
inc
add
sub
sbb
ret
and
xchg
test
inc
adc
or
or
xor
and
and
add
nop
inc
push
add
pop
add
inc
adc
and
addl
add
mov
or
sub
cmp
inc
add
xor
add
add
and
pop
inc
stos
adcb
call
adc
nop
add
test
and
add
inc
or
and
out
inc
aam
mov
and
orl
add
mov
rorl
enter
push
xchg
and
sbb
inc
add
push
add
add
or
jo
add
adc
add
inc
and
and
sub
push
mov
push
sub
or
and
mov
add
add
shlb
add
or
rolb
sub
add
or
mov
add
add
dec
roll
fs
add
cmp
and
adc
and
inc
and
add
adc
inc
add
mov
xor
inc
adc
and
or
pusha
orb
inc
mov
inc
test
or
and
add
shlb
add
addb
mov
xor
add
mov
xchg
addb
adc
add
adc
stos
test
add
add
inc
test
daa
adcb
add
add
mov
mov
and
test
or
and
jae
add
inc
dec
mov
test
nop
loopne
xchg
add
add
ret
add
and
add
loopne
shlb
xchg
inc
adc
add
add
add
lods
add
add
push
dec
add
adc
inc
addb
add
sbb
or
push
add
xorb
inc
mov
add
add
sarb
test
and
add
sub
dec
xor
mov
add
shll
test
shlb
inc
andb
push
add
and
or
add
add
addb
inc
push
rcrl
add
stos
and
rolb
adc
addb
into
mov
mov
push
add
adc
push
cmpsb
add
sub
push
pusha
or
andb
add
inc
or
push
mov
adc
dec
mov
add
or
add
shlb
add
add
inc
mov
or
or
add
or
and
je
and
add
adc
add
pusha
add
bound
sub
add
add
add
inc
add
les
popa
or
or
and
add
inc
mov
adc
add
adc
add
inc
orl
inc
adc
popa
add
inc
xor
or
in
add
sub
pusha
and
add
push
sbb
and
add
andb
add
inc
dec
les
addb
inc
or
and
xor
inc
inc
or
add
inc
popa
add
addl
adc
and
or
jle
orl
and
cmp
test
mov
and
inc
add
xor
add
add
je
pusha
inc
or
adc
and
add
mov
addb
push
pusha
or
add
add
js
pop
add
adc
or
icebp
and
adc
roll
add
add
add
push
or
mov
push
rcrb
push
addl
inc
addl
add
or
add
add
aaa
adc
mov
addb
nop
add
xor
inc
inc
add
jl
add
mov
dec
add
and
pop
or
hlt
nop
add
sub
push
sbb
js
rolb
inc
leave
dec
add
add
dec
inc
add
and
add
mov
inc
adc
or
adc
xchg
mov
test
add
adc
dec
inc
cmp
nop
add
rorb
adc
push
addl
add
add
cmpb
movsb
add
add
or
addb
push
push
push
and
and
add
and
add
sbb
adc
adc
subb
add
sbb
les
and
test
or
and
andl
xchg
pop
inc
addl
bound
pushf
add
nop
loopne
cwtl
adc
xchg
pop
cmp
and
cmp
dec
aam
rolb
push
add
dec
add
add
xor
add
add
call
test
mov
adc
and
test
dec
add
adc
movsb
and
push
add
inc
and
add
pusha
cmp
and
or
and
and
and
lret
dec
bound
add
xor
xchg
add
add
and
inc
and
mov
nop
pusha
mov
inc
add
pop
xor
and
xchg
push
add
nop
adc
add
test
adc
rcll
mov
mov
adc
adc
pop
inc
add
mov
mov
xor
add
xor
xor
or
mov
or
xchg
adc
or
rolb
adc
mov
fisttpl
adc
add
push
add
cs
sbbl
inc
sbb
add
sub
adc
or
inc
inc
and
and
sub
add
sbb
rolb
or
mov
and
push
daa
sbb
cs
or
add
or
adc
and
inc
pusha
addb
add
orb
sub
or
sbb
adc
insb
xchg
addb
nop
inc
or
and
push
inc
xor
add
or
push
lock
sbbb
popa
add
movsb
inc
add
adc
push
mov
pusha
xor
popa
mov
popf
adc
inc
add
add
add
inc
and
or
inc
push
inc
mov
xor
xchg
mov
adc
and
push
or
add
nop
add
add
inc
andb
or
or
mov
add
add
push
adc
mov
cmpsb
adc
add
or
test
or
add
and
pop
rolb
loopne
add
adc
add
orb
add
xchg
addb
add
mov
inc
or
and
add
inc
xor
inc
or
add
push
mov
test
sub
adc
add
fldenv
sbb
daa
adc
sbb
push
sub
add
sbb
mov
add
push
and
test
adcb
or
adc
inc
add
add
addb
add
add
inc
orb
mov
or
or
or
xor
add
adc
data16
jb
inc
add
bound
push
adc
ret
addb
test
add
mov
push
inc
cwtl
add
push
jns
sbb
lds
push
adc
es
loope
or
push
add
push
push
addb
and
sbb
andb
add
inc
push
and
test
push
adc
test
or
add
add
add
dec
inc
clc
add
add
adc
rorb
dec
add
add
push
add
arpl
sbb
add
push
sbb
add
movsb
test
add
and
add
or
pop
xchg
sbb
add
test
add
orb
ret
and
xor
add
and
add
add
or
insb
inc
push
push
rolb
mov
dec
loope
add
adc
inc
or
inc
or
adc
inc
add
inc
add
addb
inc
add
adc
or
add
inc
and
add
andl
in
adc
add
sub
and
rclb
inc
adc
add
add
xorl
xor
sbb
inc
cwtl
adc
orb
or
and
add
and
pop
add
pop
shrb
in
test
roll
mov
add
adc
add
mov
andb
or
inc
add
add
sub
xor
add
mov
and
and
orb
inc
adc
adcb
fadds
mov
test
or
pusha
and
addb
or
mov
adc
cmp
adc
addl
add
add
push
inc
sub
inc
push
inc
push
inc
or
or
add
or
or
add
add
addb
mov
inc
add
jl
adc
add
ret
add
xor
sbb
mov
and
add
sub
andb
pusha
and
add
addl
or
insb
adc
and
and
and
inc
inc
inc
and
mov
add
pusha
or
pop
inc
or
andl
mov
or
add
xor
xchg
push
or
add
and
lcall
mov
xor
rcll
xchg
mov
or
or
add
add
or
add
and
dec
mov
and
mov
or
xchg
push
push
or
or
push
dec
sbb
adc
cmp
rolb
addb
addb
add
adcb
popa
adc
adc
adc
int
xor
and
inc
adc
add
adc
mov
inc
cmp
add
dec
cwtl
mov
mov
add
add
and
dec
adc
add
mov
or
add
add
adc
or
and
add
add
pusha
orl
inc
inc
mov
and
sbb
or
or
cmpb
les
inc
add
push
dec
push
and
rorb
add
and
dec
mov
inc
inc
xor
lock
add
add
add
add
inc
enter
inc
rolb
adc
push
inc
and
adcb
xchg
adc
mov
mov
pop
xchg
pop
push
and
add
add
or
xor
push
inc
add
add
add
jo
add
push
or
andb
and
xor
add
add
and
dec
add
or
add
add
add
mov
mov
dec
inc
shll
sub
adc
add
push
add
dec
addb
add
add
xor
ss
or
xchg
nop
rolb
pop
add
add
xchg
sbb
cmpsb
andl
mov
and
adc
adcb
xor
mov
push
push
add
push
movsb
or
inc
add
add
and
and
push
and
and
add
add
add
add
or
add
and
ret
inc
je
es
or
mov
inc
dec
sub
add
addb
or
or
jno
inc
add
adc
and
add
add
xor
add
fs
adcb
inc
sub
lcall
xor
dec
push
add
adc
add
push
inc
and
sarb
rcll
add
push
add
fs
mov
add
test
add
add
adc
adc
add
or
inc
or
or
pop
and
addl
sub
mov
adc
or
add
sti
ficoml
sbb
or
xor
pop
cmpsb
rolb
and
add
or
pop
pusha
orb
adc
aam
sbb
add
and
add
mov
subl
add
inc
push
add
or
or
inc
addr16
and
dec
add
popa
inc
xor
add
xor
add
or
sbb
pusha
pop
xorl
push
sub
or
add
and
sub
add
add
loop
push
xor
adc
add
and
add
mov
test
add
add
push
adc
add
int3
addl
xor
and
or
and
nop
adc
test
and
push
or
push
nop
add
inc
les
test
lcall
adc
imul
and
mov
adc
push
inc
lea
inc
add
add
add
and
cmp
nop
sub
inc
test
or
or
add
shlb
add
lea
mov
bound
test
adcb
and
push
adc
mov
inc
xor
add
adc
or
movsb
xor
inc
rorb
add
add
sub
cwtl
sub
add
mov
or
inc
jo
push
push
push
fs
add
add
push
add
xchg
push
inc
inc
cmp
adc
test
inc
and
or
add
rclb
pusha
adc
add
adc
and
add
test
add
and
or
mov
add
rclb
sbb
and
add
inc
test
inc
dec
add
and
mov
movsb
mov
push
and
inc
nop
xor
sub
inc
adc
and
add
push
xchg
jne
or
xor
xchg
cmp
and
add
cmpb
rolb
or
and
or
sbb
add
pusha
sub
xor
cmp
or
add
mov
push
add
add
push
sub
fsubs
adc
fstpl
add
add
add
adc
adc
test
inc
push
and
adc
inc
mov
adc
dec
adc
and
add
or
pusha
add
add
inc
nop
add
add
mov
pusha
add
sbb
add
pusha
sbb
xchg
and
adc
add
pusha
sub
add
add
rolb
add
add
inc
add
mov
orb
or
addb
sub
add
loope
sbb
adcl
push
adc
adc
orb
mov
adc
add
addr16
inc
add
movsb
inc
or
cmpb
jo
rorb
adc
inc
add
push
add
sub
inc
inc
movsl
or
pusha
adc
sbb
add
adc
add
add
inc
and
adc
sub
add
mov
inc
popf
add
addb
dec
push
mov
addb
adc
addb
add
and
addb
mov
sbb
xor
cli
add
inc
inc
add
nop
xchg
add
adc
ret
loopne
shlb
add
test
adc
add
pusha
xor
mov
add
pusha
add
call
pusha
inc
add
addl
and
dec
and
adc
sbb
dec
or
add
mov
test
add
inc
or
add
push
mov
sub
push
push
popa
add
aam
jo
adcb
rolb
cwtl
sbb
and
jno
sbb
mov
inc
add
lcall
mov
and
mov
mov
mov
mov
adcb
add
or
mov
or
and
add
adc
sub
subl
adc
add
adc
adc
mov
pop
adc
add
add
add
adc
or
xor
stos
addl
add
mov
popa
add
mov
xchg
cmpsb
or
add
and
test
add
inc
add
dec
and
and
pusha
loopne
inc
or
dec
adc
push
sub
xor
add
addb
sub
or
and
add
sbb
add
and
and
xchg
popa
add
add
push
add
xchg
add
push
or
add
int3
add
add
and
inc
add
push
inc
mov
add
and
adc
adc
push
adc
xor
and
adc
dec
adc
movsb
dec
adc
adc
add
and
sbb
or
and
add
xorb
sbb
adc
and
inc
sub
add
inc
gs
dec
or
and
push
test
cs
sub
adc
and
add
mov
inc
pop
popa
add
dec
out
xchg
mov
adc
inc
imul
mov
and
jno
adc
mov
add
mov
and
orb
add
add
sub
add
push
add
sbb
add
sbb
sbb
sub
add
dec
add
dec
inc
adc
and
add
inc
inc
inc
or
mov
or
inc
adc
add
inc
addb
and
inc
ret
and
inc
add
pushf
mov
test
addb
test
test
inc
shlb
pop
sub
push
and
and
or
or
add
mov
enter
add
or
addl
add
add
loopne
nop
sub
add
xor
mov
addl
rcll
and
adc
add
nop
add
adc
adc
addb
mov
add
and
adc
inc
push
adc
and
add
and
adc
and
add
adc
fs
xchg
and
addb
sbb
sub
inc
push
xchg
push
add
adc
or
les
add
aam
jecxz
xorb
dec
pop
add
andb
add
add
inc
add
or
add
or
and
add
cs
test
inc
mov
add
add
add
and
xor
add
add
add
cmp
or
add
add
add
push
js
test
add
lcall
addl
and
or
mov
or
daa
pusha
add
sub
adc
adc
push
addb
push
add
xor
push
and
add
and
add
inc
inc
or
ror
adc
shlb
add
add
sub
mov
mov
and
clc
add
add
add
add
mov
rclb
ret
add
xorl
jb
add
aam
addb
xor
dec
adc
add
push
inc
adc
sub
bound
xor
or
or
add
xor
sub
inc
adc
push
and
add
push
or
inc
add
inc
adc
add
or
adc
mov
add
sbb
inc
add
add
xor
or
add
mov
inc
addl
adc
xor
add
sub
xchg
inc
nop
adc
orl
rolb
add
mov
mov
addb
mov
sbb
adc
xor
dec
or
sbb
mov
enter
sub
xor
adc
adc
bound
or
inc
and
adc
cmpsb
test
or
or
add
inc
or
pop
add
and
inc
or
shlb
adc
rcrb
dec
or
adc
xor
and
xor
add
add
and
test
addb
sub
or
dec
add
and
es
add
sub
jo
cmp
popa
and
add
and
or
and
mov
inc
pusha
test
inc
mov
inc
mov
mov
sbb
or
and
add
push
and
inc
add
inc
add
add
add
addb
inc
adc
and
push
bound
and
shll
or
and
mov
and
adc
adc
add
test
inc
add
inc
add
and
addb
dec
pop
xor
leave
sbb
add
and
add
pusha
add
xor
add
or
dec
xor
add
mov
adc
add
adc
and
or
add
and
addb
add
or
add
pop
inc
pusha
add
pop
inc
mov
pop
or
mov
andb
or
push
adc
and
pusha
les
sub
jge
or
add
nop
and
or
test
dec
or
addb
orl
and
add
addb
cmp
add
sub
addb
add
adc
xor
loopne
adc
xchg
test
push
or
test
sub
mov
rclb
ret
mov
mov
adc
adc
add
add
mov
adc
add
pop
or
or
add
or
mov
or
inc
add
mov
addb
or
add
sub
xor
add
pusha
and
sub
and
and
adc
inc
sub
and
and
add
adc
xchg
add
or
adc
addl
sub
or
addb
adc
add
xorl
and
add
add
movsl
inc
subb
adc
add
add
add
outsb
xor
bound
adc
dec
adc
addb
sbb
and
cs
push
sbb
pop
mov
and
xor
push
xor
inc
inc
adc
inc
rolb
adc
push
add
or
xchg
add
add
add
and
subb
mov
or
sub
add
add
and
add
adcb
adc
add
adc
sub
sub
adc
and
sub
dec
shlb
loopne
test
dec
and
cmp
or
and
mov
push
and
add
adc
xchg
add
inc
fcoms
lods
add
inc
and
test
mov
add
adcb
inc
adc
pop
popa
mov
add
add
and
add
mov
add
or
inc
push
inc
dec
lock
add
dec
add
push
stos
inc
add
jb
push
lea
cmp
or
inc
mov
add
sub
sbb
and
add
or
mov
and
sub
movsb
inc
adc
adc
xchg
mov
and
sub
dec
shlb
add
sbb
adc
data16
addb
adc
and
add
rolb
add
or
push
ret
dec
sub
and
and
adc
test
sub
andb
dec
inc
popa
orb
add
addl
bound
or
mov
addb
shlb
push
sub
and
adc
adc
add
add
aam
addb
mov
add
jmp
add
sub
orl
rolb
jmp
mov
xchg
stos
add
inc
xchg
mov
and
xchg
test
add
sub
add
mov
arpl
inc
adc
add
or
push
inc
add
popa
clc
nop
add
add
lret
sub
test
push
add
add
adc
mov
pusha
mov
or
inc
add
add
inc
test
or
add
sub
mov
mov
sub
add
inc
inc
adc
cmpsl
popf
sbb
jo
rcll
add
adc
add
or
add
mov
jo
andl
and
add
dec
fistl
add
data16
adc
add
mov
add
add
mov
add
and
and
or
mov
add
add
push
or
jo
and
test
addb
inc
add
adc
and
and
and
push
push
or
and
dec
add
and
add
add
add
add
or
add
cwtl
add
add
xlat
popa
add
add
add
mov
pop
or
and
xor
cmp
add
adc
mov
and
push
andb
sub
mov
daa
outsb
add
and
loopne
rolb
addb
inc
add
add
sub
addb
orb
add
pushf
adc
and
add
and
dec
add
inc
adc
loope
adc
adcl
push
add
add
sbb
and
test
orb
rolb
adc
mov
rcrb
and
add
adc
and
cmp
add
and
adc
add
dec
mov
and
add
nop
push
push
adc
mov
add
and
add
add
adc
and
add
add
push
loopne
adc
lock
and
roll
subb
orb
add
and
add
inc
add
add
push
xorb
mov
or
add
inc
andb
adc
movb
or
add
add
add
movsb
add
dec
cwtl
xchg
or
lea
sub
add
js
rolb
daa
cmp
mov
xor
push
and
mov
and
add
xchg
push
pop
sub
jno
dec
or
add
xor
adc
push
clc
mov
mov
push
pop
add
xchg
add
add
xchg
xor
test
adcl
add
add
add
and
adc
adcl
add
addb
inc
add
and
xor
orb
adc
push
xchg
adc
add
aam
jb
mov
mov
test
push
addb
rcr
popa
add
inc
xorb
lods
pusha
enter
sbbl
lea
or
and
add
push
popa
sub
add
and
adc
inc
adc
dec
add
movsb
mov
add
add
and
mov
sbb
sbb
and
rolb
jle
xor
les
shll
or
shl
sbb
add
cwtl
int
test
sbb
add
and
inc
add
or
sbb
orl
or
xor
inc
add
xor
addl
add
and
and
add
add
or
add
adc
add
cmp
add
pop
add
add
inc
dec
or
inc
add
shlb
sbb
or
inc
adc
add
push
add
and
addl
test
and
add
inc
and
or
mov
add
nop
push
sbb
add
adcb
loopne
cmp
add
add
or
adc
push
movsb
mov
inc
add
mov
sub
add
add
cs
mov
add
add
nop
and
adc
add
or
jle
inc
and
and
nop
daa
push
adc
and
push
or
add
add
and
add
add
les
and
add
inc
inc
adc
addb
mov
push
or
add
or
roll
sub
inc
add
inc
xor
dec
inc
andb
add
sbb
mov
and
sbb
and
andl
and
sbbb
dec
sub
adc
inc
adc
sub
inc
adc
test
add
inc
or
les
add
add
pusha
dec
push
inc
add
mov
add
xor
mov
sbbl
xchg
sub
and
mov
add
xchg
pusha
adc
push
dec
add
inc
orb
add
add
add
add
sbb
or
dec
and
add
test
mov
adc
adc
adc
and
dec
add
add
dec
orb
adc
inc
dec
sbb
inc
enter
add
or
xor
adc
adc
or
add
nop
xor
lret
sub
and
pusha
sub
xor
test
andl
adc
add
push
add
or
addb
mov
add
sub
adc
adc
add
addl
and
or
add
add
push
and
orb
xchg
inc
loope
cltd
test
inc
int3
add
es
or
les
add
mov
addb
and
loopne
add
and
adcl
inc
jp
adc
andl
or
add
push
dec
and
mov
add
nop
add
dec
int
adc
and
rclb
mov
adc
and
dec
adc
and
and
adc
adc
and
addl
add
adc
test
add
mov
addb
adc
add
push
nop
add
and
orl
scas
adc
add
pusha
dec
les
xchg
and
leave
adc
adcb
test
mov
adc
les
or
adc
add
sub
jo
inc
push
add
and
inc
add
nop
mov
movsl
sbb
add
je
jge
test
popa
or
mov
add
or
add
add
add
add
add
adc
add
mov
subb
and
icebp
or
xor
add
mov
push
xor
cwtl
les
cwtl
add
sbb
add
cwtl
test
adc
or
shll
fs
or
and
add
call
test
push
mov
inc
sbb
adc
add
xor
add
or
adcl
xchg
or
add
add
and
and
inc
and
pusha
nop
add
test
imul
imul
pop
inc
add
or
add
xor
nop
add
sbb
xchg
add
xor
or
mov
push
mov
addb
xchg
pusha
or
add
or
mov
xchg
adc
adcb
aam
push
adc
add
add
mov
dec
or
xchg
fcmovnb
adc
or
nop
nop
inc
add
push
shlb
add
add
push
inc
mov
or
xchg
add
or
inc
add
dec
sbb
rolb
les
add
loopne
or
adc
and
rclb
and
inc
sub
prefetcht1
nop
and
push
or
sub
or
and
and
enter
add
and
sub
test
push
inc
and
pusha
sbb
inc
movb
subb
add
mov
mov
add
shlb
or
adc
adc
inc
pop
mov
xor
inc
roll
xor
enter
cmp
pop
xor
add
adc
add
and
orl
jo
inc
mov
adc
mov
add
or
mov
or
inc
add
dec
add
add
or
add
and
shlb
inc
push
mov
add
add
dec
or
inc
mov
add
or
and
or
test
xor
and
or
or
add
or
xor
inc
and
add
or
adc
lock
int3
sub
and
or
add
push
sub
add
add
adc
add
and
pop
test
sbb
shlb
add
add
fadds
and
rclb
mov
add
add
adc
mov
inc
inc
xchg
add
cmpb
add
and
cs
test
add
pusha
and
test
add
rolb
sub
andb
aam
add
inc
roll
inc
addb
popa
or
and
add
sub
add
add
add
adc
add
test
mov
add
inc
add
lods
mov
addb
and
leave
add
and
add
adc
and
or
xor
test
inc
add
dec
addb
pusha
xchg
push
sub
add
mov
add
call
inc
mov
or
push
add
cwtl
dec
dec
add
add
js
add
xchg
push
ror
mov
andl
or
adc
dec
xor
add
pop
sub
add
inc
or
and
add
add
mov
shlb
and
add
sbb
andl
jae
xchg
add
sbb
adc
push
inc
orb
inc
and
push
or
inc
add
xchg
add
adc
or
add
sub
xchg
fsubrs
test
or
jo
nop
mov
mov
jo
inc
or
add
pusha
dec
adc
or
add
xchg
add
add
mov
inc
ret
sbb
and
or
or
mov
inc
add
or
sub
addl
cmp
add
add
inc
sub
jb
add
adc
aam
inc
adc
add
inc
mov
mov
inc
inc
test
add
bound
test
in
inc
add
inc
inc
inc
add
inc
add
pop
and
and
and
add
pusha
add
les
mov
add
sub
add
mov
test
add
pop
sub
and
popa
adc
test
push
inc
add
mov
add
or
add
add
push
add
js
push
dec
inc
add
or
add
or
add
and
or
push
add
add
pusha
and
addb
test
sub
push
xchg
pop
add
and
xchg
test
add
inc
or
add
adcb
xor
xor
or
dec
and
and
add
inc
adc
add
add
inc
add
inc
and
adc
add
mov
add
pop
and
push
mov
add
add
push
and
add
add
add
addl
add
imul
add
add
add
sbb
add
pop
add
addb
inc
add
adc
dec
dec
add
xchg
inc
test
add
add
add
push
add
inc
adc
add
add
xchg
or
add
add
add
add
xor
and
nop
add
enter
add
popa
add
andb
inc
cmp
add
add
or
or
or
loopne
sbb
sub
xchg
inc
add
imul
adc
dec
mov
push
add
sub
add
inc
and
pop
or
inc
inc
add
or
andb
inc
xchg
mov
orb
add
orb
add
and
xor
add
add
add
add
cmp
add
add
and
arpl
xor
and
add
and
and
adc
add
add
jo
add
add
inc
mov
add
add
mov
adc
add
and
add
sub
adc
add
push
les
add
stos
nop
add
add
addb
mov
add
add
add
or
xchg
orb
add
or
cwtl
add
or
and
lock
inc
test
and
adc
adc
push
mov
sbb
add
test
mov
or
add
add
addb
and
test
addl
addl
push
mov
add
add
sbb
mov
add
add
adc
add
and
add
pop
add
inc
cmp
add
inc
push
adc
add
addb
enter
bound
adc
add
nop
addb
add
xchg
adc
cmp
add
cwtl
push
xor
mov
sbbb
inc
fs
add
or
inc
xchg
add
and
or
push
push
add
and
add
xor
add
add
or
or
add
pop
pusha
add
add
add
add
roll
push
add
add
and
inc
push
popa
add
cwtl
add
inc
rclb
adc
or
inc
adc
add
adc
add
add
add
adc
inc
adc
call
inc
addl
mov
add
inc
or
or
add
adc
add
test
rolb
add
sarb
leave
and
rorb
add
add
add
and
rolb
mov
and
add
add
bound
or
nop
and
or
and
add
sbb
adc
push
rorb
stos
and
add
add
dec
add
sub
and
addb
loopne
inc
popa
add
loopne
add
sub
inc
or
add
adcl
or
adc
add
and
inc
inc
addb
or
sub
add
dec
addl
push
and
adc
xchg
cltd
add
add
jmp
add
or
or
ret
add
add
add
inc
add
push
or
addl
add
and
add
and
or
and
adc
and
add
adc
adc
dec
add
add
popa
test
loopne
push
add
or
add
and
andb
adc
inc
add
adc
and
add
and
add
and
add
inc
xchg
nop
insb
adcb
andb
push
push
add
inc
add
imul
add
and
add
add
add
add
add
sub
enter
and
adc
add
or
inc
or
int
add
and
inc
and
rol
add
inc
add
add
rolb
add
adc
sub
sub
add
adc
and
inc
or
loop
add
mov
add
add
add
add
and
add
inc
add
add
sub
adcl
add
adc
inc
rolb
or
add
dec
or
inc
add
adc
add
or
add
and
shrb
and
push
inc
sub
add
in
add
sbb
inc
mov
push
add
test
inc
add
add
dec
add
or
addl
and
adc
add
add
orb
add
or
inc
mov
add
dec
adc
sub
add
adc
adc
dec
pop
add
add
add
add
add
inc
add
add
mov
adc
add
add
and
add
adc
dec
inc
add
xor
addb
add
push
or
add
addb
add
adc
lea
and
sbbb
mov
mov
add
or
add
add
lock
and
and
pop
addl
mov
test
inc
add
adc
cmp
add
add
add
add
dec
sbbb
pop
mov
addb
popa
adc
or
inc
inc
add
add
and
inc
inc
inc
sbbb
add
test
adc
add
and
add
roll
add
add
adc
adc
push
add
add
add
inc
add
and
add
in
data16
inc
nop
add
push
inc
inc
mov
add
xor
mov
and
rcrb
sub
andb
inc
adc
andb
add
inc
and
add
and
inc
push
adc
add
add
inc
dec
bound
inc
addb
or
push
adc
dec
add
cltd
add
add
adc
add
and
rolb
add
mov
add
dec
test
in
add
or
sub
inc
mov
sbb
roll
inc
mov
inc
or
dec
fmuls
mov
test
add
add
add
and
nop
add
add
inc
add
inc
mov
or
inc
addb
adc
add
add
add
sbbb
mov
add
inc
inc
add
mov
add
and
inc
inc
or
orb
adc
and
pusha
add
adc
orb
or
add
adc
adc
push
or
add
xor
add
dec
andb
add
adc
add
cwtl
inc
pusha
mov
or
push
adc
or
mov
dec
mov
add
mov
and
add
adc
add
add
or
cmpsl
add
adc
mov
add
mov
or
or
adc
add
addb
and
add
add
inc
add
icebp
adc
pop
inc
add
sub
and
add
add
adc
or
add
add
add
inc
add
xor
adc
add
adcb
add
add
add
leave
adc
mov
push
inc
and
add
add
inc
and
add
sub
inc
adc
add
inc
adc
orb
add
push
add
loopne
roll
add
add
add
inc
add
add
add
dec
sub
add
add
add
sbb
sub
inc
add
addb
add
addb
add
add
jo
add
add
xchg
int
add
orb
addb
adc
andb
add
or
or
dec
add
sbb
xchg
mov
add
inc
or
dec
inc
add
adc
add
add
inc
add
or
inc
add
add
add
push
add
add
nop
add
add
and
add
xor
add
les
add
nop
and
add
inc
add
push
adc
add
int
cmp
inc
push
and
adc
adc
popa
add
add
add
add
add
add
adc
add
and
daa
pusha
or
xchg
add
add
rolb
add
add
add
add
mov
add
add
push
add
dec
loopne
addb
inc
add
or
mov
add
and
adc
inc
dec
addb
les
adc
push
push
add
add
xor
bound
inc
inc
addb
inc
add
xchg
add
pusha
mov
or
add
adc
and
and
add
or
inc
inc
add
dec
test
add
add
push
add
add
and
and
mov
inc
push
and
or
add
sbb
dec
add
enter
add
and
adc
add
inc
add
add
add
inc
add
add
nop
add
test
inc
dec
push
add
add
add
cwtl
add
aam
add
int3
adc
add
add
dec
or
and
sbb
or
or
dec
inc
add
add
inc
add
adcb
add
add
cmpl
add
mov
add
mov
out
inc
add
add
and
inc
pusha
add
adc
adc
sub
mov
add
inc
inc
adcb
add
nop
push
add
add
inc
cltd
inc
add
adcb
mov
jo
add
adc
add
mov
inc
and
shrb
mov
pusha
push
add
and
push
mov
add
loope
add
pop
add
test
add
mov
es
or
pusha
inc
dec
adcb
or
xor
add
xor
push
inc
adc
add
and
addl
xchg
or
or
add
add
sbb
pop
add
add
inc
add
sub
add
add
or
andb
cmp
adc
lods
addl
dec
adc
mov
les
add
add
add
and
add
xor
adc
adc
dec
add
or
add
add
add
push
adc
inc
inc
add
mov
add
imul
add
adc
inc
and
or
add
and
add
sub
inc
add
imul
add
add
and
and
or
inc
inc
add
add
add
add
adc
or
inc
rolb
add
mov
leave
add
add
add
adc
lret
mov
add
sub
cmp
adc
sub
test
subb
add
and
and
add
add
adc
or
add
or
add
nop
addb
add
adc
roll
add
and
inc
and
orl
inc
and
add
push
add
sub
orb
add
addb
ret
push
add
adc
add
add
loop
inc
add
push
adcb
add
sbb
adc
sbb
adc
inc
add
or
and
add
mov
add
xchg
inc
push
and
and
ret
adc
or
push
add
add
inc
push
adc
or
addb
add
andb
or
add
add
dec
add
jo
add
and
inc
add
add
add
add
adc
or
and
inc
add
add
test
add
add
xchg
andl
inc
or
add
mov
enter
adc
xor
add
je
rolb
add
add
cmc
loop
add
add
inc
adc
and
add
add
inc
add
sbb
inc
push
sbb
push
loopne
test
loopne
add
or
xor
add
sbb
push
andl
add
xchg
adc
inc
inc
lods
xor
add
loope
add
inc
and
nop
add
add
inc
and
push
add
add
and
add
and
add
movsb
adc
addb
and
inc
popa
mov
push
mov
inc
xchg
and
xchg
mov
or
nop
adc
add
popa
add
and
add
mov
inc
sbb
add
mov
dec
pusha
inc
inc
inc
or
sbbl
orl
add
or
dec
addl
add
sub
pusha
inc
insl
add
sub
or
add
bound
lret
inc
add
or
inc
movsb
sub
add
add
add
addb
nop
add
addb
adc
inc
mov
add
add
test
inc
add
add
push
addl
into
addl
andb
and
add
mov
add
sbb
addb
inc
add
inc
or
or
add
inc
add
add
pusha
sub
add
xchg
or
mov
and
addb
xor
dec
inc
adcb
add
and
push
add
and
push
inc
and
or
add
add
add
inc
inc
add
add
add
sub
inc
test
add
add
add
or
test
add
push
inc
add
mov
inc
add
inc
adc
orb
addl
inc
inc
add
enter
ret
adc
add
or
inc
and
cmp
add
addl
rolb
and
xchg
add
add
popa
add
jne
xor
inc
or
or
addb
add
add
add
inc
add
push
or
push
fs
add
sbb
adc
xor
add
add
add
add
mov
add
add
jne
add
sbb
inc
add
mov
add
sbb
add
add
inc
add
xchg
add
aam
inc
add
add
add
add
add
mov
out
sub
sub
push
mov
and
and
xor
fisubrs
aas
in
push
mov
add
addb
dec
mov
repz
scas
or
mov
repz
xchg
xchg
pushf
dec
ds
or
dec
movsl
or
or
repz
lods
lods
xchg
ljmp
in
mov
movsl
mov
rcl
or
sub
data16
orl
adc
mov
arpl
shlb
test
lods
leave
fstpt
mov
in
dec
leave
rcrl
aas
xchg
jg
lds
test
aas
sbb
test
or
lahf
xchg
stc
xchg
test
aas
inc
mov
mov
ret
cltd
ret
mov
inc
popa
ret
jg
xchg
inc
xchg
adc
imul
inc
inc
in
stc
dec
aas
xchg
outsl
lds
test
outsl
xchg
adc
lret
push
sub
adc
lret
or
push
xchg
mov
aas
push
xchg
aas
xchg
xchg
mov
xchg
mov
jecxz
icebp
clc
fildll
out
or
es
mov
int
jb
aas
xchg
xchg
ret
xchg
mov
add
test
test
ds
or
cmc
and
fstpt
xchg
jg
lds
test
aas
in
dec
leave
jae
adc
test
cli
loopne
rorl
in
or
loopne
lahf
cmpsb
scas
jnp
mov
and
mov
aas
roll
daa
imul
xor
mov
add
loopne
mov
and
mov
test
montmul
cmpsb
add
xchg
xchg
xchg
daa
xor
fdivrl
popa
xchg
arpl
push
add
lret
fstl
jae
inc
xchg
out
rol
outsl
push
xlat
stos
cmp
sbb
xlat
fmul
faddl
adc
or
sbb
faddl
aam
or
sbb
faddl
sbb
push
and
fists
lret
jmp
xchg
xchg
leave
lret
adc
push
mov
rcrl
or
jle
inc
ror
aad
or
aas
xchg
aas
push
xchg
xchg
rcl
out
fwait
lock
jo
pop
jp
shl
lret
push
test
sbb
in
push
inc
shlb
mov
rcll
shlb
pop
repz
int
mov
mov
push
addl
sub
inc
xchg
or
or
fstl
jae
mov
lret
repz
popa
dec
inc
xchg
outsb
push
ss
xchg
movsb
xchg
dec
fnsave
repz
nop
inc
fsubrs
fnstsw
test
inc
xchg
insb
sub
outsb
or
or
xchg
rolb
or
mov
fnstsw
xchg
mov
mov
pop
xchg
mov
adc
push
or
subl
push
in
jbe
inc
imul
adc
cmpsb
cmpl
cmpsb
sub
fdivrl
or
add
mov
in
dec
leave
ret
pop
adc
inc
xchg
sub
rcrl
fnsave
cltd
in
and
mov
pop
and
fnstsw
sbb
fstpl
xlat
or
aas
and
fnstsw
lcall
lea
lock
call
lock
dec
xchg
xchg
int
mov
fdivrl
and
jg
inc
pop
cmp
adc
inc
jbe
mov
fsubrs
nop
sub
out
jg
arpl
sahf
xchg
fstp
jnp
xchg
jg
bound
xchg
fnstsw
dec
xchg
jg
imul
xchg
sti
int
cmp
fdivrl
and
inc
cltd
xchg
popl
fdivrl
roll
les
xchg
push
xchg
jnp
xchg
jg
outsl
bound
cltd
xchg
or
push
inc
xchg
aas
push
dec
rolb
push
dec
and
roll
add
mov
ret
lods
in
xchg
adc
stos
xchg
iret
inc
adcb
inc
outsl
push
in
ds
ja
cwtl
and
push
lret
loopne
shl
and
in
repnz
mul
ret
or
xor
adc
xchg
and
adc
add
mov
cmpsl
xor
and
icebp
inc
or
loopne
lahf
jp
cltd
cmc
jns
push
mov
pop
add
fdivl
xchg
outsl
push
aas
jp
push
aas
lcall
xor
lahf
loope
mov
push
xchg
xchg
sti
lcall
xchg
aas
xchg
sbb
lret
adc
push
inc
and
mov
jge
dec
inc
mov
xor
clc
sbb
test
xlat
pop
or
sti
fdivrl
repnz
sbb
icebp
sub
dec
xor
adc
inc
repnz
xchg
lret
ret
cmpsb
cli
inc
push
xchg
inc
and
aas
xchg
sub
and
fnstsw
xchg
sbb
adc
fwait
mov
dec
push
jo
in
std
xor
outsl
or
add
cmpsl
mov
inc
stos
xchg
inc
sbb
fnstsw
xchg
es
in
mov
jp
xchg
aas
xchg
dec
in
or
fsubl
mov
dec
and
jmp
xchg
lahf
sahf
sub
inc
rorb
or
loop
loopne
lahf
scas
and
push
fcom
fidivrs
xchg
cmpsb
inc
aaa
fildl
movsb
test
xchg
fs
fnstsw
xchg
xchg
inc
incl
push
xor
or
lcall
out
xchg
mov
add
dec
cld
stc
xchg
xchg
dec
xchg
xchg
incl
pusha
movsl
out
dec
scas
idivb
lods
push
out
and
mov
push
daa
cli
aad
prefetch
or
in
mov
sti
mov
dec
and
add
mov
cmp
loopne
inc
out
nop
inc
dec
rol
mov
ror
inc
pusha
ret
test
xchg
adc
push
lahf
mov
adc
js
cmpsl
scas
mov
pop
inc
sub
aam
in
push
adc
cmpb
inc
enter
nop
faddl
inc
pop
pop
out
mov
pop
dec
cwtl
data16
ficoms
icebp
pop
test
call
mov
stos
and
xchg
fiadds
pop
and
mov
xor
jae
call
add
cmp
dec
out
mov
pop
or
jmp
je
sub
dec
loopne
call
mov
clc
repnz
cmp
repz
or
scas
test
or
outsl
mov
inc
inc
inc
xchg
clc
jnp
out
adc
mov
xchg
aad
cltd
popa
lcall
addr16
sbb
mov
push
adc
out
xchg
lods
inc
fmull
jge
xchg
mov
inc
xchg
scas
add
bound
xchg
insl
xor
mov
and
lods
sbb
out
int3
gs
or
pop
fsubrl
popf
dec
fldl
mov
negb
fistpll
fstl
xor
mov
rolb
push
mov
cwtl
mov
push
xchg
mov
js
adc
movsl
pop
movsl
push
push
jmp
dec
pop
lock
or
cmpsl
arpl
test
xchg
test
or
mov
dec
xor
add
mov
pop
xchg
ja
fstl
or
xlat
lods
inc
rcll
pop
push
mov
cli
mov
sbb
shlb
dec
adc
xchg
cs
adc
jb
stos
inc
push
loop
sahf
lret
in
lods
or
push
fnstsw
push
fsub
jecxz
sub
push
dec
lods
pop
int
xchg
fisttpl
jb
pop
adc
xchg
pop
or
push
xchg
and
aas
lret
or
ja
mov
in
insl
mov
aas
sbb
jnp
mov
test
pop
cwtl
mov
mov
sbb
xor
addr16
xchg
lret
dec
or
adc
or
cwtl
btsl
sub
in
push
ret
imul
insl
out
leave
mov
add
or
push
sbb
xchg
add
dec
scas
jne
xor
outsb
xor
add
inc
cmp
mov
test
fnsave
jmp
add
push
fisubrs
mov
fstp
call
negl
xor
fadds
aas
insl
push
xchg
das
pop
xor
shlb
arpl
shll
pop
xchg
insb
insl
xor
and
mov
rcr
push
or
dec
mov
adc
cmp
cltd
sbb
or
inc
xor
mov
jg
in
mov
dec
xor
leave
rol
inc
lahf
mov
mov
jnp
sbb
pop
mov
inc
mov
sub
sahf
pushf
cmp
mov
fstpl
pop
stc
mov
xor
mov
movsb
sahf
mov
loope
jne
stos
inc
push
adc
xchg
fstl
mov
xor
mov
inc
test
mov
outsl
sub
jg
mov
cmpsb
mov
es
ret
jmp
pop
aaa
dec
mov
cmpsl
push
fstl
insl
mov
sub
fdivrs
dec
addr16
mov
mov
and
xchg
mov
xchg
mov
scas
pusha
xchg
pop
xor
pop
xor
add
mov
mov
jo
xlat
in
ljmp
fiadds
repz
fadds
fdivp
mov
fistps
adc
xor
jnp
addr16
inc
pushf
iret
out
bswap
push
scas
xchg
dec
cmp
popa
inc
nop
xchg
adc
shll
es
jbe
xchg
xchg
jp
add
mov
into
shrb
pop
pop
inc
insl
test
sahf
xor
mov
add
cld
or
mov
xor
xorl
aaa
jle
fists
test
sbb
aaa
fisubs
lea
xchg
sbb
int3
jmp
out
pop
repnz
frstor
xor
sub
inc
adc
push
push
out
push
push
xchg
ja,pn
popa
mov
jge
xor
adc
jp
pop
adc
mov
inc
aaa
push
mov
cmp
test
movsl
sbb
xchg
pop
xchg
rep
lcall
add
ja
cli
stos
mov
outsl
sarb
dec
cmp
jg
mov
mov
fwait
cmc
notb
inc
aam
mov
xor
jnp
xchg
fwait
xor
in
adc
ljmp
lcall
subb
jno
jl
movzbl
dec
test
xchg
ljmp
or
stos
out
aas
mov
lods
sub
xchg
or
push
inc
lret
adc
pop
mov
in
mov
inc
jnp
sub
jmp
cs
sbb
xchg
lock
std
ficoms
test
stc
shl
in
push
mov
es
into
push
add
mov
mov
arpl
mov
xchg
nop
or
push
and
sahf
sbb
idivb
cli
mov
lahf
inc
neg
jp
popa
adc
mov
mov
add
xchg
push
and
jecxz
mov
dec
ds
fs
mov
or
and
adc
ljmp
mov
std
or
in
push
data16
lods
mov
pushf
fcmovnu
lahf
inc
cwtl
jp
loopne
or
repz
out
sub
mov
jnp
xor
call
fwait
daa
pop
push
push
dec
mov
rcll
je
xor
movsl
repnz
push
adc
icebp
stos
fistpl
inc
or
and
push
xlat
sbb
into
dec
mov
mov
xchg
insl
dec
dec
fsubl
inc
and
mov
popa
stos
mov
out
fildll
mov
scas
xchg
insl
mov
ffree
stos
test
jne
sahf
mov
movsb
xchg
sahf
mov
stos
adc
aas
ljmp
int
cmp
xorb
mov
jle
jmp
adc
inc
cmpsl
xchg
inc
pop
dec
cmp
js
and
xchg
mov
fst
shlb
inc
xchg
xchg
aaa
mov
xchg
aaa
jbe
sbb
stos
mov
ljmp
dec
xchg
mov
out
aas
inc
mov
push
clc
add
outsb
xchg
es
repnz
adc
dec
xchg
movsb
sbb
frstor
adcb
adc
fisubs
hlt
or
out
add
imul
insb
shll
loop
fwait
loopne
mov
xchg
cmp
mov
rcrb
jne
inc
push
mov
sbb
sti
sbb
rclb
pop
adc
les
cmpsb
in
dec
and
outsb
lret
adc
popa
add
aas
xchg
push
xchg
lds
cld
pop
mov
mov
xor
enter
fxch
xlat
push
inc
cmp
or
je
inc
adc
cmp
fstpt
fstl
stc
jmp
sahf
enter
cmp
fwait
dec
sahf
mov
xchg
lahf
xor
int
cmp
hlt
aas
mov
pop
push
pop
xor
in
and
clc
cmp
push
mov
dec
or
cmp
fcmovu
xchg
cmpsl
adcl
aad
mov
push
lahf
fldl
fisttpll
jbe
nop
mov
mov
mov
sub
push
mov
aaa
lahf
mov
cmp
xchg
mov
dec
leave
xchg
push
pop
xchg
int3
es
dec
cmp
femms
arpl
lea
pop
cmpl
loope
loopne
ds
jns
lahf
xchg
lock
dec
sub
jns
push
mov
lea
aad
jae
popf
adc
lret
into
or
cld
arpl
cwtl
jg
and
sub
in
iret
inc
sti
out
sahf
loope
jl
stos
add
test
adc
xchg
cmp
or
xchg
mov
xchg
adc
lret
repnz
shlb
negb
jne
push
xchg
inc
push
lods
fnsave
outsb
add
inc
stc
int
jg
mov
jp
clc
incl
fyl2xp1
sbbb
lcall
push
add
xchg
cmp
inc
shrl
lock
push
and
mov
and
test
xchg
lcall
ror
xor
push
jecxz
stos
mov
rcrb
fwait
ret
add
es
xchg
pop
movsl
push
sub
dec
and
jbe
push
lods
jne
hlt
in
xor
sub
test
push
test
push
decb
in
adc
mov
inc
nop
pop
pop
call
xchg
xor
outsl
pop
add
xor
test
xchg
cmpxchg
cltd
es
xor
xchg
repnz
jae
outsb
stos
mov
or
xchg
sub
mov
insb
inc
mov
mov
xchg
pop
sahf
adc
cltd
jecxz
enter
iret
xchg
in
inc
push
inc
fwait
icebp
shrb
mov
fisubl
cwtl
and
xchg
pop
shrl
jle
aad
fstpl
xor
xor
dec
mov
insb
pusha
repz
inc
sub
jecxz,pt
and
pop
decl
hlt
adc
push
pushf
popf
arpl
jl
mov
repz
les
addr16
hlt
pusha
shlb
mov
int
inc
insl
jno
popa
fs
pop
mov
jns
add
inc
fcomp
jmp
sub
jne
jns
fucom
stos
lahf
pop
lret
leave
inc
fcoml
jp
mov
mulb
sub
not
sbb
sahf
xor
fisttpl
mov
ret
jnp
push
jae
xor
shll
lret
push
mov
adc
incb
std
pushf
xchg
xchg
cmp
leave
fldl
and
add
scas
es
add
sbb
jnp
fimuls
bound
leave
pop
jnp
fstp
and
dec
shll
inc
js
arpl
mov
or
mov
pop
push
dec
inc
lods
iret
xchg
jns
int3
insl
xchg
inc
cmp
cmp
xchg
cmpsb
dec
xorb
roll
xor
daa
mov
mov
xor
je
xor
cld
xchg
nop
fists
loopne
push
push
pop
cwtl
adc
jg
pop
add
std
add
loop
cld
fdivrl
pusha
dec
sbbb
fistpll
enter
push
shrl
xor
push
pop
adc
lret
fstps
jo
mov
jp
sub
add
dec
xor
mov
xchg
test
xchg
mov
ret
add
mov
jne
pop
mov
setnp
gs
dec
xor
push
add
mov
xchg
imul
insl
in
inc
je
mov
mov
cmp
mov
cltd
addr16
in
dec
pop
xlat
pop
xchg
std
int
mov
mov
ret
or
xchg
into
mov
aam
cmp
xchg
pusha
fbstp
inc
inc
int3
jns
jmp
cmpsl
or
gs
mov
inc
mov
xchg
push
aaa
lret
mov
loope
mov
shll
cmp
push
or
mov
add
ret
pop
pusha
lahf
and
scas
dec
aam
scas
xchg
data16
loop
push
dec
or
cltd
lods
aaa
lahf
pop
jg
pop
push
jecxz
pop
test
inc
sti
icebp
xchg
test
insb
dec
cltd
sarl
leave
sahf
test
fldl
popa
test
stc
mov
enter
in
fisttpll
xchg
cmp
sbb
outsl
incl
stos
pushf
leave
in
divb
sbb
jae
dec
subl
inc
or
push
xor
adc
pop
cltd
call
jg
arpl
mov
sub
push
push
aaa
cwtl
cs
ss
mov
inc
lret
jle
enter
push
xchg
stos
test
aam
cmp
xchg
lea
cmp
jmp
jp
mov
insb
daa
leave
imul
add
xchg
and
and
mov
ljmp
mov
lcall
add
movsl
mov
in
aas
push
pop
jns
cwtl
es
jge
cmp
fcmovbe
aas
xchg
cmp
adc
inc
outsb
gs
test
das
cmp
mov
xchg
pusha
fwait
sub
xchg
mov
xchg
lret
jecxz
adc
jne
cmp
mov
pop
or
dec
aad
popf
pusha
inc
xor
hlt
icebp
test
ror
or
cltd
add
cld
mov
sub
sbb
add
js
int
inc
jbe
iret
cmp
out
jbe
outsl
scas
ds
jmp
stos
roll
mov
test
sub
inc
imull
ret
xor
cmp
outsl
ffree
or
mov
inc
add
or
push
pop
pop
add
xor
or
psrlq
jmp
xchg
in
cs
out
nop
mov
loop
cli
mov
sbb
cmpl
ss
das
add
sbb
adc
jge
cwtl
popw
mov
push
sbb
add
rcr
xor
faddl
cld
sub
push
movsl
in
or
out
or
sub
lret
xor
mov
les
gs
lods
aam
jne
int
lea
in
xchg
and
jo
jo
xor
mov
cmpsl
ret
imulb
xchg
push
fisubs
pop
notb
inc
outsl
fld1
and
mov
xor
dec
jmp
xor
fadds
add
in
rorl
adc
inc
sahf
stc
testb
sbb
inc
adcl
sub
loop
add
and
out
imulb
fldl
repnz
sahf
inc
mov
push
sbb
mov
add
in
stos
xchg
pop
int3
jnp
pop
xchg
fisttps
push
pop
add
pop
push
ret
xor
fnstsw
in
sbb
js
push
aaa
decb
fnsave
and
dec
or
jb
pop
insb
dec
mov
lcall
loopne
dec
icebp
mov
jl
sar
sub
shrl
dec
aad
ret
jno
andb
inc
aam
sbb
insl
xchg
ljmp
sbb
pop
pop
xchg
cmpsb
lret
imul
cltd
sbb
add
mov
push
add
loop
push
xlat
fstpl
rcl
xchg
or
inc
and
push
pop
pop
lret
sbb
xchg
out
popa
jae
hlt
shlb
test
leave
cltd
neg
iret
or
inc
fstpt
clc
pop
and
cmc
push
mov
scas
pusha
aad
xchg
aaa
cli
movsl
sbb
xor
mov
mov
shll
sarb
mov
pop
mov
jmp
test
sub
les
adc
into
inc
das
lcall
mov
inc
inc
xchg
xor
jbe
dec
aad
pop
jno
xor
lea
push
xchg
and
loope
outsl
dec
mov
pop
xchg
dec
add
cmpsl
and
mov
pop
test
jle
jne
lahf
leave
sub
ja
push
and
pop
mov
and
sahf
sahf
xchg
pop
ljmp
mov
push
mov
pop
mov
and
cmp
and
lahf
xchg
mov
push
mov
xlat
inc
lods
xchg
mov
push
mov
cwtl
movsl
mov
fisubs
addb
push
lret
mov
jb
push
mov
lods
and
fstpl
data16
xchg
test
sbb
mov
sub
insb
cmp
fldcw
ret
inc
xor
push
jle
sub
dec
jg
cmp
and
shl
andl
int
repz
fidivrs
sbb
adc
adc
ljmp
cmp
std
lea
cli
pop
xor
in
frstor
call
xlat
inc
ss
std
subl
add
addb
ret
outsl
and
cmpsb
adc
lods
xlat
sub
mov
jno
imul
dec
aas
aad
and
sub
adc
jmp
and
leave
pushf
jl
loope
or
inc
cmp
or
mov
cmpsb
fcmovbe
test
or
dec
jp
inc
push
xorl
mov
inc
mov
mov
in
mov
xchg
dec
fildl
xchg
fiadds
cmp
fldl
sti
stos
adc
inc
or
or
int3
test
daa
jns
mov
add
lret
call
mov
ficoms
mov
loopne
mov
cmp
mov
mov
pop
and
xor
jle
dec
add
jmp
xor
cld
mov
dec
insl
mov
test
data16
sbbl
aaa
fbld
sub
or
insb
addr16
bound
addr16
xchg
mov
xchg
icebp
xchg
push
es
dec
inc
push
decb
or
fcoms
sbb
movsl
test
push
pop
dec
xchg
xchg
frstor
call
gs
aas
adc
mov
daa
cwtl
loop
scas
jbe
shlb
and
sub
and
cmp
pushf
xchg
sbb
icebp
jno
mov
shrl
test
cwtl
inc
movsb
xlat
sub
lret
inc
pop
xchg
out
mov
loope
jb
pushf
shlb
push
fimuls
imul
dec
int3
push
sbb
dec
jmp
push
push
lahf
out
fstpl
sbb
lods
dec
mull
adc
jno
lcall
xchg
enter
ret
push
imul
and
sti
pushf
mov
icebp
mov
and
sahf
inc
lret
lcall
sbb
int3
inc
mov
push
cmp
xchg
xchg
in
loope
push
cmp
xor
leave
mov
mov
mov
cmovs
add
fsubl
pop
mov
inc
pop
cld
jbe
xchg
or
in
jns
adc
cmpb
xor
sub
xchg
pop
arpl
aaa
js
inc
inc
inc
lea
insl
lret
ja
call
pop
fnstsw
mov
mov
movsb
nop
jmp
mov
in
mov
dec
xorb
bound
adc
cmp
mov
pop
cmc
or
mov
jb
in
sub
inc
or
xor
cmp
jge
dec
mov
xchg
inc
inc
mov
sbbl
lret
imul
cmpb
sub
sub
xchg
cmp
sti
xlat
jb
loopne
jg
dec
jmp
add
addl
mov
fstl
arpl
mov
jno
add
mov
frstor
aaa
or
inc
stc
loop
inc
add
cmp
negl
out
fcoml
aam
dec
dec
bound
jle
faddl
enter
jbe
cmc
inc
mov
jbe
sbb
iret
aad
push
in
dec
mov
dec
lock
sub
enter
int
test
push
aaa
fcmovnu
sub
cmp
bndldx
mov
pop
xchg
and
jecxz
mov
pop
fs
pop
dec
testb
daa
cwtl
out
sbb
fisubl
dec
fcmovb
adc
jbe
loop
frstor
push
insl
add
dec
inc
xchg
or
pop
sbb
cmpb
pop
inc
dec
sbb
push
mov
fbstp
roll
xchg
call
sub
mov
lret
mov
lods
in
inc
mov
stos
stos
xchg
mov
call
pop
or
sti
int
insl
ljmp
mov
pop
dec
popf
out
pop
notl
stos
ret
cld
xchg
popa
mov
adc
dec
lahf
pop
sti
orb
ja
pop
mov
dec
rolb
lods
imul
sahf
cmp
into
xchg
mov
mov
xchg
cmp
xchg
xorb
adc
jge
cmpsl
pop
movsl
and
xchg
aas
ret
sub
inc
lahf
cmp
xchg
aad
pop
xchg
stos
in
stos
dec
enter
pop
xchg
or
xlat
js
mov
push
stos
jo
std
sti
je
repz
shr
fld
out
or
pop
jl
dec
cld
or
jbe
ret
and
mov
sbb
out
mov
pop
aad
aad
push
shl
push
xchg
pop
sub
movsl
test
sbb
xchg
cmpsl
xchg
pop
loop
jbe
or
push
fsubrl
xchg
lock
in
sub
movl
push
xchg
iret
push
mov
stc
aam
rol
test
push
mov
pusha
sub
pushf
rcrb
es
adc
push
jg
dec
inc
xchg
cmp
jl
jo
fisubl
insl
xchg
lret
mov
add
pushf
mov
inc
xchg
xor
xchg
dec
or
loopne
dec
jns
rclb
inc
fwait
test
mov
sub
movsl
fimuls
xchg
fcoms
inc
jmp
shlb
mov
mov
fidivl
stos
imul
dec
pop
xchg
test
cmp
mov
aam
rcrb
test
fwait
push
pop
jl
xchg
jnp
ljmp
add
repnz
fnsave
les
ss
adc
add
xor
xchg
orb
pop
icebp
dec
jb
stos
scas
cmp
stos
mov
cmpsb
and
mov
jbe
nop
inc
es
dec
in
sub
ja
cmpsl
in
cmp
lea
dec
jb
rcr
sub
outsl
jnp
andl
fistl
fstl
pop
and
cmpl
outsb
xor
pushf
xor
ljmp
sub
into
mov
out
push
enter
xor
add
mov
lock
jbe
pop
in
sbb
scas
cmp
adc
inc
inc
mov
xchg
mov
fisubs
push
xchg
or
mov
mov
dec
sti
cmp
insl
hlt
xor
cmp
insb
mov
or
int3
inc
stc
push
xchg
xchg
sub
shlb
xchg
in
pop
cmp
mov
cmpsl
sub
push
mov
in
mov
push
fcompl
add
mov
xchg
xchg
add
je
addl
pop
inc
popa
jmp
ljmp
loopne
fwait
repnz
inc
pusha
sbb
shll
je
aas
xchg
movsl
aas
aam
scas
push
xchg
pop
push
jle
pushf
inc
or
mov
xchg
cwtl
mov
mov
test
inc
lahf
xchg
and
pop
aad
mov
fnsave
fstl
mov
ljmp
fwait
mov
lods
inc
lods
sub
movsb
inc
repnz
lret
xchg
adc
push
movsl
testl
fsubrl
fucom
push
pop
xchg
cmpsb
mov
and
inc
sub
aam
push
mov
push
scas
inc
fstl
insb
mov
jl
rcrl
xchg
inc
pusha
out
and
fadd
inc
stos
std
add
jo
inc
mov
out
sub
ret
jae
stos
inc
sbb
mov
shll
dec
cmp
aam
pop
xchg
and
push
xchg
jnp
cld
fisttpll
push
or
pusha
ss
sti
or
in
cwtl
inc
in
sti
xchg
ret
cltd
popa
xchg
fimuls
mov
fidivrl
inc
insb
mov
xchg
xor
jne
stos
lods
test
cld
cmp
mov
add
fiadds
jmp
mov
movsb
shrb
jge
test
mov
mov
xchg
mov
lds
mov
xchg
inc
mov
dec
js
cmp
inc
mov
test
rcll
or
pop
mov
fidivrl
add
pop
fstl
lcall
dec
sub
push
adcb
fnstcw
cmpsb
leave
jb
mov
insb
or
cmpsb
inc
inc
xchg
outsl
jae
loope
into
xchg
sub
sbb
or
dec
shr
mov
mov
sar
sets
cwtl
mov
dec
insl
xchg
mov
cwtl
inc
jmp
xor
clc
sbb
push
in
out
cmpsb
sti
out
mov
nop
sub
mov
shrl
fistpll
fstps
gs
mov
in
lret
mov
ficoml
jae
and
jmp
hlt
jae
shl
sbb
add
outsb
add
test
aas
or
in
das
sbb
xor
add
outsl
dec
dec
es
les
jecxz
cmpb
mov
pop
icebp
fisttpll
stc
jns
mov
adc
xchg
cli
bound
sbb
xor
mov
jb
pop
mov
lahf
enter
jmp
fwait
pop
dec
es
adc
jb
nop
xchg
xchg
mov
sub
out
adc
cld
aaa
jmp
xchg
mov
sub
inc
mulb
mov
dec
mov
stos
xchg
repnz
sub
outsl
mov
sahf
mov
std
adc
dec
fnsave
xor
mov
loop,pt
inc
shrb
fsubrs
pop
test
xchg
frstpm(287
shll
rol
xor
inc
jb
or
adc
pop
dec
mov
xor
xchg
fistps
lea
pop
scas
mov
push
fcmovnbe
loop
add
das
inc
mov
es
adc
test
pop
sbb
mov
adc
mov
out
sbb
pushf
xorb
cwtl
jmp
and
push
dec
xchg
dec
ja
leave
and
aas
imul
jp
sub
leave
fs
scas
scas
sub
pop
out
push
lret
inc
imul
xor
push
push
push
loopne
insl
inc
xor
ljmp
xchg
stos
xchg
lods
addl
jae
add
daa
clc
xchg
mov
xchg
xchg
int3
fs
sub
xchg
adc
cmp
ja
and
adc
push
jae
les
not
ds
xchg
cmpb
cld
leave
leave
push
xor
xchg
ficompl
jmp
lret
sbb
andb
xchg
inc
inc
aam
ret
neg
mov
mov
inc
xchg
aas
int
inc
inc
cmp
cmp
rcll
pushf
aam
lret
outsl
fidivrs
xchg
sub
ffree
insl
ja
scas
das
cmp
daa
cwtl
jecxz
dec
movl
cmpsl
mov
lcall
mov
scas
outsb
sahf
popa
fstp
add
xchg
cltd
inc
pop
ja
mov
int
jecxz
add
jecxz
fisubs
imul
mov
adc
ljmp
in
lods
mov
fstpl
outsb
jmp
add
adcb
add
lahf
insb
xchg
cltd
adc
popl
mov
inc
fwait
and
pop
dec
mov
sahf
dec
xchg
cltd
fstl
addb
mov
in
data16
nop
jo
xchg
fldl
push
lods
scas
inc
hlt
or
jb
xchg
mov
vucomiss
sub
fdivrl
cmp
call
nop
addw
in
ss
sbb
dec
mov
popf
push
clc
sahf
popa
xchg
or
mov
aam
xchg
mov
out
in
sahf
inc
mov
dec
sbb
addr16
xchg
scas
xchg
xor
cmp
shl
xchg
xchg
xchg
add
lock
pop
xor
xchg
mov
or
mov
dec
les
clc
cmp
mov
bnd
add
mov
jge
jbe
loope
xor
sahf
xchg
jle
lds
mov
push
cmp
enter
stos
xchg
jl
call
xor
loop
mov
mov
fldenv
lock
iret
aaa
mov
jo
lahf
fnsave
mov
arpl
mov
xchg
adc
add
dec
sbb
aaa
jnp
imul
cmpsb
mov
push
loopne
shlb
mov
mov
cli
inc
in
jl
sbb
jns
lock
xor
jle
adc
scas
aam
outsl
xchg
mov
cmpsb
adc
imul
add
inc
adc
xchg
dec
mov
in
add
pop
inc
push
jo
add
call
loop
sbb
loop
es
jae
inc
push
add
mov
xchg
cmpsl
and
mov
sbb
dec
sub
cwtl
loope
fstl
lock
pop
fsubs
jmp
push
xchg
in
adc
push
xchg
out
cltd
inc
adc
mov
dec
push
mov
hlt
xchg
imul
fldl
and
dec
dec
xchg
inc
mov
frstor
in
iret
cmp
cwtl
inc
inc
movl
mov
int
inc
dec
mov
cwtl
cmc
adc
loopne
test
aam
test
mov
push
rol
jecxz
mov
adc
add
test
stc
cmp
fdivp
xor
xchg
jmp
pop
mov
jno
leave
sbb
xchg
int3
ret
hlt
jno
add
ss
scas
cmpsb
cwtl
or
int3
pop
mov
repnz
push
and
testl
cmc
add
ss
add
sarl
repnz
cli
jbe,pn
fs
shl
cmc
jmp
out
cld
sbb
leave
pop
xchg
adc
and
jno
sti
add
pop
push
nop
frstor
add
mov
inc
hlt
push
addr16
pop
andb
sarl
frstor
fnstsw
pop
jb
mov
out
movntq
cmp
xor
mov
shr
push
adc
jge
xchg
fsubs
stc
xor
mov
mov
jp
mov
ret
dec
or
cmp
xchg
xor
stos
icebp
jne
mov
xchg
jnp
mov
cmp
in
movsb
sahf
ss
mov
jns
pop
test
xchg
push
je
pop
pop
imul
mov
mov
mov
sbb
fadds
add
dec
fcoml
lock
fnsave
cmp
xchg
xchg
imul
fwait
mov
jbe
push
popa
pop
pushf
pop
adcl
dec
ret
fsub
cmp
dec
mov
mov
xchg
xchg
es
test
jl
jb
push
jl
xchg
scas
xchg
in
jae
jle
aam
sbb
add
in
mov
mov
jbe
dec
xchg
clc
xchg
imul
jmp
or
inc
mov
orb
jb
fiaddl
or
shlb
sbb
outsl
or
xchg
movsb
jne
mov
lea
push
push
fs
push
jle
mov
jp
xchg
test
pop
popa
out
pop
popf
and
imul
push
mov
push
mov
mov
movsl
je
sbb
sbb
icebp
xchg
out
or
mov
push
in
ja
lahf
scas
push
pop
sub
aas
inc
add
movsl
push
lcall
clc
int
les
jmp
sub
pop
fldcw
sarl
fmul
push
roll
mov
loopne
pop
or
insb
cld
xor
xchg
rol
cmp
mov
xchg
arpl
xchg
ja
pop
loopne
jmp
mov
ss
stos
inc
mov
xchg
jne
clc
pop
mov
jecxz
jae
sbb
icebp
and
xchg
mov
sbb
fnstenv
mov
and
cmp
inc
xchg
sub
xchg
popf
push
call
cwtl
jne
cmp
jmp
andb
jmp
std
xchg
loop
xor
jb
cmpb
stos
rcrl
insl
pop
jno
mulb
or
xor
fldl
lea
xchg
cli
int
imul
negl
xchg
jb
popa
xchg
cmpsb
inc
push
sarb
xchg
push
push
inc
push
into
add
xchg
mov
pop
fldl
jbe
aam
in
popl
aam
or
sbb
inc
pop
inc
out
comiss
mov
pusha
push
iret
enter
icebp
mov
jmp
adc
mov
lods
pop
fdivl
sti
sbb
adc
lret
mov
inc
das
inc
lock
pop
add
pop
int3
leave
xchg
inc
inc
push
scas
mov
dec
pop
popf
xor
mov
cmp
and
fdivr
in
add
loopne
push
add
bound
test
ret
and
jo
outsl
adc
ja
or
push
aad
hlt
into
sti
pop
pop
xchg
and
fcmovnu
add
ret
cmp
mov
push
je
imul
outsb
test
jbe
jp
add
jo
ljmp
subb
xchg
mov
lret
jns
dec
xchg
xor
pop
adc
push
inc
push
fstpl
push
scas
sbb
adcl
or
out
and
sbb
test
pop
rorl
stos
dec
stc
lahf
cltd
add
jns
pop
push
mov
pusha
lock
frstor
rcrl
inc
sti
add
xchg
fildll
push
lods
pop
xor
loopne
loopne
pop
pop
testl
push
lock
gs
ret
test
sub
xor
daa
jae
test
jmp
popf
push
cmp
dec
inc
sarl
sti
push
sbb
pop
insb
mov
stos
and
inc
out
mov
roll
idivb
mov
fnstsw
pop
int
shll
sbb
mov
aas
cwtl
or
mov
mov
or
movsl
xor
xchg
icebp
scas
cmc
icebp
and
mov
mov
es
push
mov
add
loop
inc
jge
cmpsl
push
inc
fists
decl
mov
sti
lods
bound
rcll
enter
pop
xor
lcall
or
fisttpll
dec
test
inc
and
andb
dec
cmpsb
inc
jmp
sbb
sbb
aaa
push
sbb
frstor
lahf
nop
xchg
stos
in
repnz
pop
inc
adc
cld
enter
xchg
mov
stos
pop
movl
push
add
cmp
xor
pop
inc
ret
sbbl
mov
mov
push
pushf
loop
sbb
ja
shrb
repnz
mov
mov
xor
lea
loope
jbe
sarb
daa
mov
cmp
fs
or
jmp
in
pop
ret
jg
fstp
bound
aas
push
inc
sub
rolb
rclb
inc
and
ja
inc
cmpsl
lcall
movsb
fcoms
add
add
xchg
into
xchg
sbb
inc
test
out
push
cli
mov
arpl
xchg
icebp
pop
jp
rolb
mov
cmp
cwtl
das
jb
mov
jge
fists
xor
push
fstp
incb
xor
inc
inc
mov
xor
mov
jl
dec
test
inc
adc
jecxz
je
mov
rcrb
mov
ret
sub
jge
pusha
mov
cwtl
dec
mov
mov
out
les
mov
enter
les
mov
xchg
inc
mov
test
rcr
pop
clc
loop
les
shlb
xchg
or
mov
jmp
sahf
lock
aas
arpl
orl
add
sub
pushf
jge
adc
repz
pop
jo
pop
add
out
addr16
xor
add
out
or
dec
and
mov
je
ljmp
out
xchg
ret
mov
in
aad
dec
pop
jo
sub
xor
out
imul
jecxz
inc
test
jnp
fisubs
mov
inc
in
lock
cmp
repz
enter
jns
shrl
sbb
andl
dec
mov
dec
gs
mov
jb
mov
lret
jg
or
pop
add
inc
cmp
jmp
out
dec
or
push
ja
out
fisubrs
sbb
and
js
cltd
stc
incb
fisttpll
mov
push
dec
movsb
pop
fwait
dec
pop
add
sbbl
data16
xchg
cmpsl
xchg
fwait
dec
cmp
inc
or
xor
adc
and
lcall
insl
fldl
or
stos
fsubrs
fiaddl
adc
repz
rclb
push
push
mov
push
dec
pushf
add
jbe
xchg
inc
leave
lods
sbb
clc
jmp
xchg
sbb
lret
ret
xor
fcomps
popa
idivb
faddl
int
xchg
push
aad
iret
and
icebp
push
fstps
out
cli
xor
mov
xorl
lock
leave
xor
filds
cmp
mov
sbb
out
xchg
cmp
stc
fnsave
sub
lods
sub
popf
enter
and
jne
scas
test
fistps
jg
add
mov
push
loop
mov
scas
sbb
sahf
fs
insb
jnp
jmp
mov
mov
add
mov
jp
pop
sub
jne
fsub
jmp
popa
cmpsl
and
fisttpll
mov
pop
xlat
lcall
sbb
repz
sti
subb
adc
roll
shlb
aaa
and
cmpsl
outsb
popa
fnsave
scas
icebp
les
xlat
inc
mov
xchg
dec
sub
push
movsb
insl
sbb
sub
inc
inc
mov
xchg
jl
push
cmp
cmp
dec
pop
jo
sbb
push
xor
int3
fisttpll
fnstsw
or
mov
xchg
addl
add
jmp
mov
or
jle
and
fnstsw
or
mov
push
cmp
pop
in
je
or
incl
push
sbb
inc
dec
rcrl
pop
les
es
and
mov
push
divl
movsb
add
xchg
js
ja
out
cld
jl
fisubrs
sbb
xor
mov
adc
dec
cmp
ret
lock
scas
lcall
lock
fcomps
dec
cmp
fucomp
ja
or
xchg
mov
xchg
push
cmp
xchg
pop
inc
xchg
xor
xchg
dec
fnsave
jp
test
pushf
data16
mov
cmpsl
dec
addr16
std
or
mov
int
fstpl
or
inc
sub
xor
cmp
popf
mov
roll
pop
push
js
jge
nop
and
jl
jbe
out
testb
and
scas
frstor
cmpsl
lret
fucomip
rcl
dec
inc
jecxz
add
stos
ficoml
rcrl
cmp
inc
and
mov
out
lret
push
in
out
sub
cmp
mov
enter
pop
fists
in
xchg
or
mov
inc
inc
or
es
mov
dec
inc
and
pop
iret
xchg
sahf
xchg
sahf
lahf
jne
shr
sahf
xchg
popf
push
fcompl
pushf
xchg
jecxz
pusha
int
scas
dec
jb
ja
mov
mov
xchg
out
mov
push
int3
incl
mov
cmp
jbe
int3
mov
bnd
xor
push
scas
xchg
xchg
bound
cmpsb
inc
arpl
pop
xchg
sub
mov
leave
and
and
mov
xchg
clc
dec
mov
mov
mov
sub
fstp
jp
mov
inc
lock
idivb
mov
ja
scas
popa
and
idiv
dec
sbb
es
pop
repz
fnstsw
dec
mov
sbb
pop
add
mov
shrb
cmp
xor
jl
addb
mov
sbb
lahf
repz
daa
mov
inc
cmp
in
repnz
cltd
sub
push
sub
stc
aaa
aad
arpl
in
call
or
repnz
mov
sti
add
sbb
call
clc
push
inc
cmp
gs
fldl
frstor
jge
mov
mov
adc
push
in
lods
fisttpll
cli
inc
push
push
mov
inc
jno
mov
in
vpaddd
stos
pop
in
out
call
fcmovnu
mov
adc
xor
js
pop
mov
mov
ret
mull
and
jae
ret
xchg
mov
fcom
in
mov
push
ret
data16
xchg
xchg
xchg
add
jge
sub
jns
aas
inc
insl
cmpb
int3
dec
jge
lret
xchg
adc
sub
repnz
in
xchg
cmpl
sbb
cmp
add
mov
rsm
mov
fwait
movsl
jo
and
mov
inc
in
cltd
cmp
or
test
cwtl
loopne
push
adc
and
or
xchg
cmpsl
fldl
or
bound
mov
aas
fnsave
pop
mov
pop
jecxz
sub
jge
hlt
mov
pop
ljmp
xor
lods
sbb
mov
dec
jg
inc
mov
int3
pop
push
mov
mov
pop
inc
xchg
jne
and
push
mov
lcall
mov
xrelease
hlt
sbb
pop
add
outsl
add
xchg
inc
fstl
sbb
into
sub
imul
cmpsl
pop
insb
mov
mov
sub
jmp
xchg
fldcw
cmp
or
fldl
sbb
push
fwait
cmp
sti
aad
pop
scas
adcb
outsl
fwait
jmp
dec
inc
mov
cwtl
cltd
pop
fs
fs
mov
mov
dec
or
xchg
xchg
jb
clc
mov
sub
jbe
push
xchg
cmp
jne
leave
add
in
xchg
push
sub
aam
clc
out
js
in
push
xchg
in
pop
push
pop
push
adc
ja
pop
mov
fildl
mov
mov
int3
fwait
sub
jns
push
adc
pop
xor
lea
out
xor
cmp
adc
jecxz
xchg
enter
int3
jae
add
pushf
roll
and
sbb
sub
and
pop
test
loope
aaa
ret
das
cmp
cmp
out
fiadds
fucom
sbb
mov
in
or
daa
test
fdivrl
inc
mov
bnd
dec
shrl
jge
outsb
sbb
cmp
lods
stos
aas
push
in
pop
fwait
inc
jne
call
rol
leave
xchg
jo
addr16
mov
into
nop
cmpl
xchg
sub
scas
inc
rolb
addb
xchg
push
arpl
sti
mov
fucom
in
xchg
xchg
or
jl
cltd
dec
sbb
les
push
inc
mov
sti
dec
popa
push
fucomp
scas
aas
fdivr
sbb
clc
sarl
mov
sbb
out
and
jmp
mov
fsub
sub
pop
push
cwtl
jbe
ja
push
fwait
pop
bswap
cld
insb
mov
dec
pushf
nop
icebp
dec
sarb
sti
mov
push
fisubrl
mov
mov
in
push
xchg
lock
xchg
pop
in
cld
cwtl
xchg
and
push
rcrl
nop
mov
dec
and
mov
adc
fistl
ja
scas
aad
rolb
xchg
cmp
push
dec
jl
inc
sub
jb
or
out
xchg
lret
xchg
data16
das
les
std
push
mov
fisttpll
add
pop
mov
fsincos
pop
loope
sbb
jbe
stos
sbb
mov
xchg
xchg
popa
imul
cmp
sub
jbe
cmp
lret
xor
cwtl
mov
movsl
jbe
shrb
int3
aad
pushf
jp,pn
adc
sahf
fisttpll
lock
pop
int
xchg
in
push
pop
loop
test
xchg
add
pop
mov
dec
mov
jp
jecxz
inc
int3
adc
insl
push
cwtl
pop
jge
lret
cli
lods
dec
sub
mov
lods
xchg
rorb
and
lock
out
xchg
pop
aam
lds
add
mov
hlt
xchg
mov
out
adc
lock
mov
xor
ds
jne
and
int
negb
jns
icebp
into
dec
mov
out
inc
push
fnsave
fmull
jmp
inc
push
jbe
push
xorl
mov
lret
out
popf
inc
int3
add
mov
imul
xchg
jns
out
enter
das
push
pop
xor
dec
in
lret
mov
xchg
orps
pop
pop
dec
in
fucomi
notl
mov
lcall
and
ja
jge
pop
lds
push
in
jl
jb
cmpsb
pop
scas
xchg
mov
lods
mov
fs
and
fwait
aas
jb
outsl
dec
xor
inc
mov
mov
in
xlat
cmp
inc
out
mov
test
jnp
jecxz
and
cmpsb
les
into
ja
das
xchg
sub
fst
cs
inc
cli
bound
mov
shlb
and
mov
inc
das
add
add
lret
push
fistps
lcall
xchg
jne
adc
fsubp
imul
mov
xchg
popa
mov
pop
pop
xor
xchg
cld
aam
adc
inc
push
insb
nop
mov
mov
xchg
out
add
mov
dec
and
cltd
movsb
or
in
push
add
jno
pop
xor
inc
xchg
das
aaa
xchg
mov
add
adc
or
sti
test
frstor
repz
inc
mov
mov
cltd
mov
cltd
scas
addb
ja
fcomps
sbb
pop
fnsave
cmp
cld
cld
nop
cmc
in
gs
sub
jbe
rcr
aaa
scas
xor
mov
pop
mov
jnp
das
std
icebp
imul
and
out
aas
and
pushf
jmp
xchg
inc
fcoms
mov
adcb
xchg
cmp
insb
mov
mov
mov
xor
xlat
and
xchg
shlb
cmp
mov
insb
lods
push
mov
xor
xor
and
xorl
fs
inc
shrl
shrl
jge
cmp
and
dec
cmpl
or
ljmp
vunpckhps
in
jl
aad
mov
inc
or
pop
pop
xchg
insb
rep
fstpl
cmpsb
iret
jae
shlb
scas
inc
mov
xchg
sahf
push
lret
jo
gs
xor
push
xorl
jmp
ret
push
mov
mov
cmp
fcompl
addl
imul
sbb
rcrl
xlat
sbb
push
ljmp
addr16
xchg
mov
loopne
decl
lea
lea
mov
push
scas
fcom
xchg
loopne
cmpsl
out
cltd
mov
cmp
add
aas
jmp
push
push
out
rcll
rorl
sti
popf
mov
je
inc
sarl
mov
lock
inc
inc
cld
test
aam
xchg
push
cmp
pop
bnd
gs
data16
inc
das
icebp
repnz
sub
mov
xchg
inc
xchg
inc
outsb
fs
lret
dec
push
in
cmc
mov
scas
xchg
pop
clc
add
cmp
pop
test
or
popa
outsl
cs
and
pop
mov
and
xchg
in
arpl
jmp
outsl
out
in
inc
cmp
imul
int
aam
dec
push
cmpsb
call
int3
mov
jmp
sub
test
fstp
popf
shlb
and
xchg
inc
insl
mov
xchg
insl
cli
dec
jno
adc
subl
cs
jo
or
cmpsl
dec
mov
sti
cmpsb
cmp
inc
fnstenv
imul
fiaddl
fimuls
pop
jmp
fmulp
call
pop
mov
ss
cltd
xchg
mov
bound
or
ja
xchg
stc
popf
leave
xchg
outsb
xchg
pop
loop
pop
lahf
pop
incl
nop
sbb
and
mov
dec
aam
lahf
std
fcmovnu
scas
decb
cwtl
out
push
adc
jo
mov
xchg
iret
sete
cwtl
mov
popa
pop
lods
adc
cmpsb
xchg
xlat
fstpl
pop
xchg
mov
mov
sub
xchg
jbe
loopne
jo
cmp
mov
and
mov
fimuls
shlb
or
aaa
dec
lods
cs
xchg
mov
jle
clc
push
clc
jae
lea
or
and
sub
adc
pop
subl
add
fstps
test
rorb
mov
and
test
xchg
lret
push
adcl
mov
popa
lret
xchg
ret
sbb
test
les
pop
lock
lods
dec
push
ret
js
cld
loop
les
lods
inc
push
loope
xchg
out
fldl
mov
inc
scas
jnp
dec
mov
shl
adc
ljmp
push
fcmovne
pop
gs
sarb
hlt
nop
imul
adc
fldl
xchg
repz
mov
les
cltd
aas
xchg
test
sub
inc
jae
rolb
mov
push
rclb
arpl
cwtl
or
popa
cmp
sbb
xor
and
push
xchg
xor
xlat
push
sub
push
adcl
shrl
lcall
add
mov
sbb
dec
daa
lret
jmp
pop
pop
fstp
mov
xchg
bound
fwait
add
or
dec
adc
ja
aad
jge
lcall
jns
sub
push
int
push
in
push
xchg
cs
lea
data16
shrb
cli
mov
lret
repnz
and
adc
mov
xchg
daa
push
andb
mov
mov
in
addb
mov
int3
xchg
ret
or
imul
call
jg
mov
jo
push
es
xor
cmp
xor
push
fimuls
sub
pop
or
stos
push
xchg
jbe
mov
gs
hlt
fsts
xor
leave
popa
inc
scas
jb
pop
add
repnz
fnstsw
stos
pop
mov
xor
mov
inc
push
les
sbb
test
pop
shlb
sub
imul
cmp
xchg
int
test
sbb
fiaddl
ficoms
add
sbb
idiv
mov
adc
mov
subl
outsl
xor
scas
inc
pop
arpl
aaa
push
mov
mov
nop
lods
adc
adc
xchg
pop
daa
pop
icebp
clc
inc
sub
mov
shll
mov
hlt
sub
fdiv
jnp
fstpl
sbb
jmp
xchg
inc
inc
sahf
dec
mov
mov
dec
xchg
popf
movl
add
into
xor
mov
or
inc
jp
out
add
insl
rclb
cwtl
xor
add
push
adc
or
out
push
loop
push
dec
ss
xchg
push
inc
js
adcl
mov
jge
xlat
dec
leave
loop
insb
addl
xor
sbb
call
inc
or
xchg
movsb
jmp
xlat
cltd
xchg
repnz
cmpl
adc
fisubs
pushw
shl
mov
iret
push
xchg
jle
push
xchg
mov
lret
loope
adc
jmp
pop
xchg
mov
mov
xchg
pushf
imul
out
pop
add
xchg
pop
leave
add
xor
loop,pn
or
push
inc
sub
cmpsl
mov
jnp
rcrl
pop
insb
clc
ds
xchg
orl
into
push
pop
frstor
pop
push
mov
lahf
inc
xor
push
mov
mov
std
mov
in
out
lret
aaa
loopne
cli
lock
repnz
sar
das
jecxz
xor
pop
fstl
sub
inc
mov
repnz
xor
rcrl
xlat
cmp
pop
xchg
inc
mov
xchg
xchg
iret
rcrl
repz
push
popf
sarl
push
addl
in
adc
int
add
jp
xchg
loopne
cmp
cmc
mov
jns
aam
pop
dec
jl
idivb
test
push
lahf
xchg
push
aaa
iret
loop
les
inc
xor
mov
sahf
and
shlb
data16
dec
filds
imulb
xor
adc
lods
stos
fldcw
add
das
jae
movsb
sbb
xchg
popa
loopne
pop
cmpsb
ffreep
sub
rclb
mov
call
jle
mov
push
std
mov
ja
out
xor
cmpsl
sahf
xchg
icebp
inc
lods
movsb
sbb
sahf
mov
and
xlat
mov
inc
cltd
xor
and
add
xchg
fwait
out
rcr
dec
pop
je
push
in
fwait
xchg
orl
fistps
fists
mov
cltd
fxch
lahf
arpl
and
inc
and
mov
xchg
push
dec
je
fwait
sub
es
pop
push
pop
xchg
sbb
clc
add
jmp
ljmp
push
add
cwtl
std
xchg
pop
aas
out
test
mov
outsl
movsl
outsb
and
xchg
aam
xchg
adc
je
xchg
les
cmpsl
jnp
ficoms
xchg
mov
std
pop
addr16
inc
cmp
pop
xlat
pop
xchg
fwait
sbb
xchg
pusha
loopne
xchg
mov
dec
cltd
pop
jb
lock
dec
pop
sarl
xchg
cmp
jmp
cmp
mov
jne
or
xchg
dec
mov
xchg
mov
lahf
iret
mov
push
aad
and
push
add
jb
mov
mov
xchg
sbb
pop
sub
and
fnstenv
or
cmp
test
std
sarl
les
icebp
jb
and
lcall
xchg
inc
pop
push
jl
fidivrl
mov
sub
leave
sbb
mov
mov
mov
inc
int
mov
mov
gs
jbe
mov
fisttpl
and
and
cmp
sub
fisubl
shll
jl
push
stos
fstpl
mov
jmp
les
xchg
push
repnz
push
push
shlb
fsts
xorb
pop
es
inc
cltd
cmp
pop
test
pop
mov
xchg
shl
add
adc
mov
fildl
repz
stc
adc
jns
xchg
fsubs
add
mov
cwtl
mov
xchg
test
loope
subb
arpl
xchg
dec
dec
inc
add
lds
mov
fldl
in
imul
inc
inc
leave
and
or
cmpsb
jge
sahf
sub
push
test
fldt
leave
addr16
mov
push
adc
adc
push
inc
pushw
dec
gs
outsb
movsb
xor
test
xchg
pop
dec
jne
mov
in
ljmp
js
jbe
xor
jb
bound
nop
pop
imul
dec
cmp
xchg
cmpsb
xor
je
push
push
scas
pop
pusha
lahf
xchg
pushf
mov
mov
pop
ljmp
test
inc
xchg
sbb
mov
pusha
pop
loop
sbbb
sub
add
or
jg
and
mov
jb
int
cmpsb
xor
push
dec
cld
ror
loope
adc
adc
aam
push
jo
or
fstl
mov
inc
in
inc
fcom
add
pop
cwtl
into
shl
sahf
lds
mov
sub
fstpl
push
aam
das
pop
inc
rcrb
push
jg
mov
and
stc
cmpsb
int3
outsb
pop
push
cltd
adc
sbb
ucomiss
stos
push
fwait
arpl
sub
pop
enter
mov
mov
or
push
movb
xchg
cmc
push
xor
inc
dec
mul
sub
mov
ja
push
mov
or
shll
aad
adc
bound
cwtl
pushf
fwait
in
pop
cwtl
movsl
inc
cmpsb
pop
roll
push
movsl
movsl
dec
xchg
loopne
popl
push
rolb
jno
push
xchg
fidivrl
in
inc
sbb
sarl
xchg
mov
xor
sub
clc
lock
movsb
daa
mov
xchg
sahf
stos
sti
or
movaps
insb
or
iret
xchg
ret
in
jg
adc
inc
dec
imul
imul
fnstsw
mov
mov
or
int3
sbb
loope
xchg
popa
data16
mov
jl
add
iret
and
mull
sbb
push
mov
push
bound
dec
inc
adc
xchg
add
xchg
inc
xchg
std
inc
jns
pusha
inc
inc
sub
fldl
xchg
out
roll
shll
mov
je
daa
and
sub
and
xchg
adc
inc
out
sub
xchg
sub
out
mov
push
jge
call
shrb
inc
pop
pop
sahf
xor
fildl
adc
flds
js
imul
repz
sub
sbb
and
popa
jge
or
or
xchg
xchg
xchg
jne
in
or
call
xchg
jp
and
rclb
scas
mov
lret
mov
xchg
jp
in
cmp
lock
dec
xchg
ret
mov
lret
lock
xchg
repz
push
sbb
js
pushf
mov
inc
ss
jmp
push
adc
mov
adc
sbbl
aaa
jecxz
arpl
mov
jle
mov
push
push
sbb
cwtl
inc
mov
pop
loope
mov
insl
jge
ja
xor
xchg
push
out
popf
pusha
inc
jnp
xchg
add
ror
xchg
fucomi
and
dec
lea
int3
mov
fdivr
out
sahf
xchg
jbe
cmpsb
js
popf
stos
fcoml
movsl
pusha
push
lea
dec
cmp
jmp
mov
outsl
pusha
or
push
mov
adc
sub
pop
cmp
cmc
xchg
ret
pop
sarl
cmpsb
cwtl
inc
mov
xchg
rorl
imul
adc
das
jge
xor
mov
pop
or
mov
int3
inc
mov
mov
leave
adcb
sbb
ljmp
test
lea
out
mov
jnp
mov
and
sub
pop
addr16
mov
mov
addr16
dec
mov
push
repz
or
mov
xor
repz
dec
pop
cmpl
in
ss
nop
rorb
jbe
xchg
jmp
rcll
adc
in
xchg
inc
lcall
sarb
mov
rcll
mov
xchg
ljmp
cmp
xor
mull
xchg
xchg
mov
mov
aad
xchg
xchg
fisttpll
incb
fdivs
inc
xchg
test
int
mov
fnstsw
outsl
pop
and
and
push
inc
mov
fsubl
push
out
mov
popa
xchg
fwait
pop
cmp
aas
lods
add
mov
xchg
jae
or
stc
jns
ljmp
inc
mov
fstl
repz
inc
out
push
sbb
arpl
jo
add
xchg
lret
push
mul
or
fsubs
add
test
xchg
mov
dec
cmpsl
scas
sti
push
cmc
push
mov
les
int3
push
xor
cmp
mov
inc
adc
pop
push
xchg
sahf
add
cmpsl
inc
xor
push
inc
mov
inc
jmp
ret
pusha
loop
scas
adc
pop
iret
ljmp
pusha
fsubl
cmp
rcrl
push
or
push
popa
cmp
dec
xchg
adc
dec
std
mov
out
pop
sub
xchg
pop
mov
mov
mov
xchg
je
test
je
xor
mov
hlt
sbb
aam
push
pop
cmpl
ds
cmpsl
mov
das
xor
mov
mov
push
outsl
mov
push
je
out
lcall
pop
test
bound
imul
push
fldt
mov
loop
int
adc
adc
inc
inc
add
xchg
xchg
mov
xor
cmc
cmp
inc
xchg
lea
xor
adc
loope
mov
lock
jecxz
xor
sub
js
mov
sub
mov
mov
cmpsb
mulb
loopne
cwtl
stc
stc
add
sub
je
fists
ljmp
inc
cmp
xchg
xchg
mov
lods
cmp
inc
mov
arpl
les
inc
repz
sbb
fstpl
imul
xchg
mov
lea
dec
int
add
lea
push
rol
cli
repz
rorl
push
test
gs
or
mov
mov
fidivs
sub
or
inc
xor
add
imul
and
fistpl
out
ret
dec
mov
add
lods
shll
pop
testl
xorb
ljmp
pop
and
call
das
sub
add
std
cld
sub
repnz
in
es
dec
mov
es
jg
push
sti
imul
popa
mov
inc
sbb
xchg
cwtl
leave
clc
gs
jns
pop
xor
aas
popf
inc
test
mov
call
mov
sarb
js
orl
sti
in
jne
loop
std
mov
xor
cltd
push
lahf
lea
es
inc
loopne
ds
inc
data16
je
ss
outsl
mov
in
js
mov
ficoms
ds
sbb
pop
test
fistl
bound
pop
in
push
cld
fisubs
pop
roll
aad
outsl
aam
test
xchg
repnz
pop
rcrb
inc
dec
mov
fimuls
pop
fxch
popf
push
push
sub
xchg
aam
je
add
scas
pop
repnz
int
pop
mov
dec
push
sahf
xchg
adc
pop
cs
xor
push
dec
pop
jbe
cmp
arpl
jle
mov
xchg
inc
imul
ds
xchg
je,pn
or
ret
push
jno
cmp
sub
push
mov
mov
inc
das
inc
or
lock
adc
aas
xchg
jle
and
sahf
dec
and
lret
jge
xchg
push
in
mov
mov
sahf
data16
imul
mov
xchg
mov
xor
cmp
arpl
xor
xor
dec
inc
xchg
int
test
add
into
aad
cli
cmpsl
call
pusha
cmp
das
or
ja
cmp
sub
mov
rol
je
xchg
xchg
cmpsl
cwtl
jnp
fisubl
repnz
xchg
pushf
movsb
xchg
enter
sbb
sbb
repz
lret
jno
daa
lods
cmpsl
jl
aaa
xchg
sbb
scas
cwtl
xchg
loop
inc
mov
repz
inc
inc
adc
xchg
rolb
aam
pop
test
test
lods
repz
xor
xchg
push
leave
push
int
in
push
xlat
sbb
add
pop
jg
dec
add
sub
push
mov
inc
xchg
adc
popf
jo
pop
decl
cmp
xchg
jmp
lahf
fiaddl
ret
jns
xchg
mov
stc
cmp
jle,pt
pop
enter
sub
popf
test
push
adcl
popf
push
mov
add
or
js
mov
push
ja
stc
mov
xchg
dec
add
ret
fs
mov
repnz
flds
frstor
pop
push
xlat
inc
pushl
into
lock
xchg
cmp
adc
pop
xor
mov
sub
jg
mov
xchg
mov
or
movsb
adcl
cmp
and
outsl
mov
shll
push
sbb
xchg
inc
stos
inc
dec
xlat
xchg
mov
mov
stc
jnp
xor
pop
fsubrp
push
sbb
cmp
inc
ds
dec
shlb
xor
jp
pop
xor
mov
addr16
mov
inc
lcall
aaa
jle
fisttpll
xor
push
out
push
and
xor
int
xchg
in
jg
xchg
cli
mov
in
and
xchg
mov
pop
xchg
sub
jne
xchg
repnz
mov
cmpl
xchg
gs
pushf
xorl
test
insl
sbb
cmp
xchg
scas
xor
repz
xchg
jp
fadds
or
pop
xchg
lock
mulb
jne
mov
lahf
outsl
xchg
repz
adc
jb
decl
inc
adc
or
ss
rcr
shll
addb
mov
inc
dec
daa
push
cmp
and
inc
add
out
mov
dec
out
inc
push
imul
add
aam
leave
dec
aas
adc
in
fsubs
stc
cmp
cwtl
stc
in
scas
push
dec
test
push
xchg
rolb
pop
arpl
mov
repz
leave
sub
adc
adc
loop
add
push
clc
rorb
sbb
stc
xchg
xor
insb
push
adc
sub
inc
movsl
imul
cwtl
icebp
out
cmp
push
cwtl
fsubrp
ds
push
mov
inc
addl
les
mov
dec
pop
in
mov
scas
mov
xchg
push
adc
popf
mov
stos
hlt
xchg
rdpmc
jge
pop
inc
mov
cmp
push
sbb
xchg
pop
dec
fst
mov
das
pop
shll
adc
lahf
push
push
mov
outsl
pushf
fbstp
lds
aas
pop
push
cli
loopne
bound
lahf
pop
push
test
fldl
int
incl
daa
xor
fcmovnb
adc
in
aam
fisttpll
xchg
movsl
push
inc
movsl
mov
cmp
mov
cmpsl
lahf
pop
fisubs
jmp
jmp
lods
mov
xchg
xorb
dec
push
pop
sbb
adc
mov
cwtl
fimull
rorb
dec
sbb
ret
test
mov
daa
inc
jo
jno
jo
and
xchg
cwtl
loop
mov
sbb
movsb
xchg
dec
inc
outsb
movsb
dec
das
mov
loopne
ja
jo
inc
push
fstpl
int
jns
add
insb
push
xchg
mov
jmp
ljmp
stos
adc
stos
outsl
rorl
fwait
cmp
ffreep
fnsave
adcb
aad
xor
loopne
inc
insl
adc
movsb
inc
add
add
and
lock
testl
push
sbb
mov
jecxz
inc
je
xor
add
pop
inc
fdivs
mov
rcrb
pop
test
xchg
mov
in
pop
test
ja
or
clc
fidivl
out
sbb
xchg
pop
mov
add
jg
mov
xor
icebp
pop
clc
xchg
pop
insb
repz
inc
xchg
pop
bound
repz
aaa
scas
dec
xchg
mov
xchg
sbb
loopne
out
shlb
dec
pop
cli
mov
add
mov
jle
lret
xor
lods
loop
xlat
inc
sub
sbb
int3
mov
idivb
push
lret
rclb
inc
mov
pop
mov
insl
xchg
inc
ljmp
ljmp
cmp
sti
mov
adc
push
outsl
data16
xchg
fldcw
push
aaa
add
idivl
and
xchg
into
ret
in
mov
push
mov
fs
sbb
std
or
lods
stos
popa
ret
pusha
jb
aam
shll
lcall
mov
jns
xchg
pop
push
cmc
xchg
sub
mov
mov
pop
cmp
cmpsl
mov
addb
adc
das
call
ss
lods
xchg
xchg
mov
push
pop
stos
push
out
test
jb
sub
push
mov
fdiv
loop
cwtl
push
push
pop
popf
jns
add
cmp
sub
fnsave
das
xor
arpl
xchg
inc
jo
pop
mov
int3
and
jno
jnp
pop
movsb
mov
shll
jge
push
ret
cmpsl
aad
xlat
in
mov
add
lret
sub
out
inc
or
cwtl
or
jmp
dec
mov
loopne
pop
es
push
pop
stc
mov
dec
fwait
js
push
cmpsb
push
xchg
pusha
xor
icebp
ficompl
aas
dec
stc
loopne
fimull
std
in
jno
push
jno
dec
pop
cwtl
rorb
mov
out
movsl
mov
push
sarb
xor
pop
or
xchg
addl
xchg
das
inc
lret
aam
xchg
inc
and
ffree
add
adc
jno
fstpt
xacquire
or
fisubrs
mov
mov
fistpll
jl
inc
scas
xor
add
pop
ljmp
test
dec
aam
adc
cmp
inc
negb
dec
in
pop
mov
inc
and
mov
jge
cmp
stc
cmp
cld
movsl
adc
sub
test
lods
clc
xor
cmp
inc
mov
clc
fnsave
or
faddp
stc
or
xchg
rcll
sbb
cwtl
push
pop
sub
fisubl
cmp
adc
pop
xchg
jl
push
xchg
stc
mov
int
aad
cmpsl
vpavgb
xorl
inc
mov
sti
adc
xchg
mov
scas
lahf
fsubl
fists
das
sbb
faddp
loopne
std
ret
inc
jp
cmpsb
jne
pop
lds
les
cwtl
fwait
syscall
nop
test
pop
iretw
mov
add
frstpm(287
call
nop
mov
mov
or
cwtl
jecxz
adc
xchg
push
fwait
xchg
ret
je
mov
lea
incb
cmp
ja
push
lahf
lods
test
xchg
cwtl
jecxz
cmc
pusha
push
mov
add
fstpt
in
repz
call
sub
push
lret
lock
xchg
mov
sahf
xor
fdivs
pop
xchg
dec
push
in
sbb
cli
mov
mov
add
mov
arpl
repnz
fstpl
cmp
stc
popf
push
ret
push
fnstsw
popa
jbe
sbb
jne
mov
xchg
xchg
mov
xchg
cmp
sbb
xchg
popf
xchg
aad
and
lods
mov
ret
push
xchg
or
test
mov
dec
cmpsb
loop
fadd
pusha
xchg
adc
add
lahf
filds
inc
scas
out
pop
cli
call
rolb
imul
outsb
push
mov
jp
jle
push
imul
push
cmp
dec
int
fisttps
test
fildl
or
stos
xchg
mov
pop
mov
fidivrl
iret
adc
pop
xchg
ret
and
pop
cltd
jge
pushf
jo
ret
pop
push
mov
outsl
cmp
and
jecxz
mov
in
xchg
lahf
aad
and
mov
adc
xor
jecxz
or
or
in
xchg
clc
fimuls
mov
xor
inc
fisubrs
xchg
xchg
mov
mov
inc
in
fsubs
rep
das
outsl
inc
orl
add
jmp
lock
and
rcll
mov
dec
sahf
incl
pop
les
or
mov
mov
negl
cwtl
push
xchg
scas
pusha
inc
rclb
imul
rcl
scas
dec
mov
push
outsl
cltd
out
xchg
and
sub
inc
xlat
int
inc
inc
shl
test
jne
cmp
push
mov
xor
stos
cltd
xchg
inc
lret
movsl
fst
mov
cld
addb
pop
mov
xchg
jo
in
sub
pop
xor
xchg
in
or
scas
sbb
into
and
lods
cmc
cltd
inc
inc
ds
jl
test
fisubs
sub
movsl
sub
mov
cmpsl
test
mov
paddd
and
rolb
lods
mov
inc
cmp
and
and
aas
fmuls
subl
inc
nop
mov
ffree
sbb
fs
neg
inc
jns
inc
stos
xchg
mov
mov
push
inc
lds
mov
inc
outsb
and
adc
jbe
je
push
push
push
andl
jne
sbbb
icebp
fmull
cwtl
jnp
aam
cltd
pop
cmp
lea
xor
mov
cmpsb
xor
mov
fimuls
xchg
ficompl
scas
dec
inc
adc
inc
mov
or
repz
sbb
arpl
xchg
outsl
inc
or
notb
stos
fcomip
js
test
ljmp
rcr
call
sub
jl
inc
xchg
dec
es
iret
decb
movsb
inc
aam
jno
fmuls
push
lods
cwtl
ficoml
mov
popl
push
fistl
push
loope
fnstcw
ja
mov
mov
mov
jb
xchg
scas
xor
scas
mov
push
xchg
int3
aam
push
or
repnz
out
ret
mov
sahf
dec
loop
push
sub
push
mov
sbb
ja
movb
pop
fstpl
loopne
xchg
mov
mov
cmp
popl
inc
inc
sub
pop
dec
ss
loope
mov
hlt
adc
xchg
addr16
cmp
subl
xchg
stos
shlb
mov
shrb
test
mov
lods
xchg
in
iret
mov
sahf
mov
cltd
inc
adc
es
and
mov
stos
xor
push
sub
clc
subl
adc
hlt
pop
arpl
fcomi
jle
stos
std
lods
fisttps
inc
push
scas
jns
in
lods
popf
pop
adc
clc
cmpl
push
xor
mov
sbb
xchg
add
addr16
sub
inc
push
xchg
fstps
cld
xor
jecxz
pop
xchg
sbb
cmp
sti
outsb
push
addb
jbe
fdivl
push
cmp
sbb
test
into
xchg
addr16
pop
faddp
js
and
gs
popa
and
adc
das
jne
pop
es
pop
mov
mov
push
xchg
loop
in
fiaddl
pop
push
cmpsb
flds
pop
cli
jo
fnstsw
xchg
cmpsl
insb
fsubs
lock
push
outsb
lcall
in
divl
dec
mov
lds
in
mov
push
dec
and
insb
dec
jo
cltd
popf
popl
sbb
shl
mov
sahf
sub
test
sbb
jg
mov
inc
fists
lret
jbe
jo
jno
jecxz
and
mov
pop
icebp
xchg
out
dec
movsb
rcrb
inc
mov
test
fcmovnb
es
sub
mov
inc
xchg
push
insb
mov
mov
adc
jl
es
fisttpll
sbb
repnz
add
or
cwtl
mov
sub
jp
mov
fwait
jmp
ffree
lret
mov
push
inc
pop
sbb
inc
xchg
test
jle
mov
xor
mov
insl
lea
dec
xchg
push
bound
int
mov
fnstsw
mov
sbb
push
fistpll
and
or
cli
loopne
add
mov
mov
mov
add
es
dec
cmp
inc
mov
or
inc
test
movsl
mov
xor
mov
out
pop
jg
mov
adc
jns
popl
cmp
scas
xchg
dec
xchg
test
imul
and
xchg
xorb
mov
inc
in
pusha
movsl
loop
xor
fstpt
mov
pushf
rclb
int
jnp
lcall
and
sbb
into
push
mov
cld
jp
cmpl
cmp
inc
xor
mov
dec
or
jge
fldl
xlat
pop
popf
mov
push
daa
cwtl
into
jns
sti
push
jbe
xchg
and
loopne
leave
arpl
sbb
cltd
push
cmp
dec
mov
jmp
inc
fwait
pop
ret
subl
inc
jbe
add
xor
inc
push
mov
pop
push
add
xor
sbb
mov
mov
inc
leave
xchg
xlat
mov
pushf
mov
dec
subb
xchg
filds
mov
test
cwtl
cmp
add
inc
bound
frstor
lahf
loopne
dec
mov
movsb
mov
add
int3
xchg
xchg
insb
test
sti
movsl
lahf
adc
ret
mov
pop
xchg
shlb
mov
inc
push
cmp
mov
mov
cwtl
outsl
int3
outsb
enter
jecxz
ficompl
daa
and
in
sub
jl
aaa
pushf
aas
dec
mov
lds
dec
into
dec
xchg
sub
insl
js
jne
push
and
jl
jne
xchg
inc
jbe
call
inc
add
stos
ret
loopne
xchg
add
roll
inc
loop
movb
scas
les
jl
xchg
mov
sbb
dec
jmp
jge
cmpsb
xchg
idiv
pop
sbb
xor
jne
stos
xchg
push
in
out
and
xchg
inc
pop
fstl
gs
lock
enter
int3
out
aas
cwtl
xchg
loope
arpl
xchg
mov
orb
rorl
xchg
cli
lahf
sub
jae
fisttpl
xchg
pop
lret
jnp
pop
sub
dec
cmc
aas
mov
sarl
lahf
mov
cmp
dec
rcrb
mov
ja
push
push
imul
or
mov
mov
pop
enter
jnp
jne
enter
jmp
jo,pn
data16
js
push
lahf
sbbl
pop
dec
mov
dec
pop
sarb
cwtl
icebp
cld
int
mov
cmp
xchg
xchg
lock
pop
pop
mov
mov
xchg
xor
dec
add
push
inc
or
adc
in
fsts
loopne
lds
jge
enter
cmpsb
test
cwtl
xor
dec
xchg
pop
lods
push
mov
adc
fstpl
rcrl
ds
lahf
loope
xchg
lret
in
cmp
leave
out
jg
loop
inc
mov
ss
push
fstl
sbb
jl
iret
fisttpll
mov
fldl
mov
inc
nop
inc
loope
iret
xchg
imull
or
sahf
xchg
xchg
or
lahf
lea
lahf
cmpb
jmp
std
sbb
aas
popf
jo
sub
inc
pop
les
dec
nop
inc
push
adc
lret
mov
out
or
push
cmp
outsb
inc
cwtl
loopne
sub
ljmp
sbbl
push
out
aaa
sbb
push
push
loopne
addl
bound
jecxz
xchg
sbb
repnz
mov
subl
sbb
in
and
cmp
ret
add
sub
icebp
mov
movsb
xchg
sbb
dec
out
xchg
outsb
jne
dec
and
setbe
sub
lret
adcb
ds
cmpsb
dec
insb
outsb
fadds
or
mov
scas
mov
mov
gs
ret
in
out
cmpsl
int3
addr16
lods
mov
pushf
fildl
in
lret
push
imul
cli
daa
inc
je
ds
call
or
adc
fildl
and
add
xchg
je
insl
clc
mov
enter
aam
sti
xchg
call
call
pusha
andps
push
decl
xchg
push
xchg
and
rcr
repz
ror
movsl
xchg
adc
out
out
dec
and
ret
dec
lods
les
lods
push
ficoms
or
and
negb
xchg
jb
repz
aad
pop
push
sti
subl
inc
cmp
fucom
xor
stos
lock
js
push
mov
fiaddl
xchg
pop
fstpt
mov
xchg
loopne
js
test
mov
mov
cmpsl
aaa
cli
cltd
mov
fimull
xchg
test
rcl
push
pushf
jl
dec
in
fadds
test
inc
cli
mov
aad
dec
sub
sarb
push
ja
dec
cltd
xor
mov
xchg
aam
inc
or
push
idivb
out
xchg
test
push
mov
inc
iret
test
pop
and
je
test
lods
adc
pop
add
mov
and
push
jbe
xchg
xor
jnp
aas
roll
fstpl
lret
subl
popf
sbb
sub
mov
orl
inc
push
add
imul
or
inc
cmpsl
mov
dec
or
les
sbb
jmp
xor
cmp
mov
push
out
fst
mov
mov
pop
in
cmpsb
shr
popa
stos
inc
xlat
insb
test
sub
adc
sub
gs
push
movsl
and
std
je
xchg
in
mov
pop
cmp
or
sub
jmp
mov
xchg
sahf
inc
or
repz
mov
sarb
dec
sti
aad
and
mov
pop
cmp
and
cmpsb
in
jp
in
xchg
cli
dec
and
sbb
mov
inc
sahf
sahf
xchg
inc
repnz
sbb
xchg
movsl
iret
call
movsl
lods
int
mov
mov
xor
sub
cld
dec
push
push
addr16
movsl
mov
icebp
cmovbe
jmp
imull
inc
sbb
sub
push
pop
adc
repz
push
incl
ljmp
xchg
lods
addr16
dec
and
test
xchg
int
sub
xor
xchg
jg
add
jae
cmpsl
fsubl
mov
xchg
cmpsl
andl
cltd
pop
into
or
xchg
xor
xchg
popa
add
cmpsb
lds
pushf
test
pop
and
sti
rolb
sarb
lahf
pushf
divl
gs
xchg
mov
insl
mov
in
ljmp
xchg
inc
jnp
aam
adc
mov
std
idivl
dec
fidivrl
in
add
mov
xchg
pushf
mov
je
lcall
sbb
sarb
inc
mov
stc
fs
sbb
cli
ds
mov
aaa
in
jmp
out
cmp
fidivrl
pop
cmpsb
fsubs
aas
and
fwait
or
inc
dec
jg
mov
outsl
dec
mov
mov
mov
xor
push
inc
sub
xchg
cld
jbe
ss
cmpsl
dec
daa
shll
add
mov
cmpsl
filds
pop
dec
xchg
scas
xchg
stc
cmp
mulb
stc
ret
ret
inc
dec
fnsave
mov
movb
xor
cld
fxam
insb
in
outsl
xor
dec
mov
sub
push
cmpsl
push
outsl
scas
dec
add
add
leave
insl
arpl
xchg
sbb
push
imul
mov
mov
insb
inc
sti
inc
mov
std
inc
and
inc
scas
scas
fstp
xlat
cmp
jp
xchg
push
cmp
pop
and
hlt
xchg
cmp
mov
xor
cmpsl
mov
push
xlat
lahf
lret
aas
in
cmpsb
jl
sub
cmpsl
cmp
shrb
and
mov
xchg
cmp
shll
pop
and
cli
or
jnp
mov
mov
gs
xor
jb
sbb
les
clc
test
sub
pop
cwtl
loopne
xor
in
ja
push
int
addr16
popf
pop
stos
push
add
fimuls
cltd
push
xchg
sahf
filds
push
lods
push
insl
dec
lahf
pushf
popf
adc
pop
xor
and
aam
out
or
or
cwtl
mov
incb
repz
inc
lret
dec
ljmp
in
fucomp
push
clc
in
movsb
dec
add
sbb
fnsave
and
aam
not
loopne
fnstsw
sbb
push
imul
inc
movsl
cmp
or
pop
pusha
jl
shlb
aas
jp
mov
inc
leave
fwait
mov
lret
jnp
xchg
mov
cwtl
inc
js
std
ret
and
mul
rorl
je
cmpsb
fldl
mov
testb
or
ret
pop
ror
in
nop
shrl
fisttpll
mov
or
xor
mov
mov
dec
cld
or
xchg
iret
and
rorb
dec
inc
jne
shrb
repnz
mov
gs
fisttpll
push
or
inc
mov
mov
add
cmpsb
ffree
scas
iret
jo
stc
roll
ret
movsb
or
sbb
xchg
sbb
sti
add
mov
leave
pop
loop
and
jne
mov
jae
inc
insl
xchg
xchg
pop
loopne
sub
fidivs
nop
lcall
mov
fnstsw
out
aad
cmc
in
adc
pop
pop
in
cmp
push
mov
cmpsb
and
out
cltd
mov
mov
mov
sub
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
mov
call
push
call
add
push
push
call
add
call
push
call
add
push
call
add
call
add
mov
push
push
call
add
push
push
push
push
call
add
call
xor
push
push
call
add
and
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
mov
call
push
push
push
push
push
call
add
and
push
push
push
push
call
add
call
call
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
call
add
call
or
mov
push
push
push
push
push
call
add
push
call
add
call
xor
mov
and
push
push
call
add
call
mov
cmp
je
call
cmp
jne
or
push
call
add
and
add
mov
sub
xor
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
call
mov
push
call
add
mov
cmp
jne
xor
push
call
add
push
call
sub
mov
mov
sub
add
sub
and
sub
sub
mov
push
push
push
push
call
add
push
push
push
push
push
call
add
call
sub
or
sub
add
test
je
push
call
add
call
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
add
sub
add
push
push
call
add
mov
push
call
add
xor
mov
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
or
sub
push
call
add
mov
call
sub
add
add
push
push
push
push
call
add
call
sub
push
push
push
push
push
call
add
add
add
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
and
mov
add
add
push
push
call
add
push
call
add
add
mov
push
push
push
push
push
call
add
sub
push
push
call
add
push
push
call
add
push
push
push
call
add
sub
mov
sub
mov
add
cmp
jne
push
push
push
push
call
add
push
push
push
call
add
add
call
add
push
push
call
add
push
push
call
add
mov
add
mov
mov
push
call
add
push
call
add
sub
push
push
call
add
sub
cmp
jne
push
push
call
add
call
add
mov
push
push
push
call
add
push
call
add
add
mov
call
add
push
call
add
push
push
push
push
call
add
push
call
add
add
push
push
push
call
add
push
push
call
add
cmp
jne
mov
push
call
add
push
call
add
push
push
call
add
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
call
mov
add
cmp
jne
cmp
je
push
call
add
push
push
push
call
add
mov
mov
xor
sub
or
add
and
mov
mov
sub
add
cmp
jne
add
mov
push
call
add
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
push
push
call
add
push
push
call
add
call
sub
push
push
push
call
add
mov
push
push
call
add
mov
push
call
add
mov
mov
push
push
push
call
add
sub
cmp
je
push
push
push
push
push
call
add
xor
push
push
push
push
push
call
add
xor
sub
push
call
add
mov
sub
test
je
mov
xor
push
push
push
push
call
add
push
push
push
push
call
add
add
push
push
call
add
call
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
push
call
add
mov
add
push
call
add
call
lea
push
push
push
push
push
call
add
call
mov
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
mov
mov
push
push
push
push
push
call
add
call
add
push
push
push
push
call
add
push
call
add
push
call
add
push
push
push
push
call
add
add
sub
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
add
cmp
jne
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
call
push
push
call
add
call
mov
mov
xor
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
shr
push
call
add
push
push
push
push
push
call
add
cmp
jne
push
call
add
mov
push
push
push
push
push
call
add
push
push
call
add
sub
mov
push
push
push
push
call
add
call
test
je
cmp
jne
xor
mov
push
push
push
call
add
push
push
push
push
call
add
mov
mov
add
cmp
je
mov
cmp
jne
sub
sub
add
mov
cmp
jne
cmp
jne
cmp
jne
add
add
mov
sub
mov
or
cmp
je
and
and
add
xor
add
sub
add
pushl
push
pushl
call
push
push
call
add
push
push
push
call
add
addl
sub
cmp
je
sub
sub
push
push
push
push
call
add
mov
sub
call
cmp
je
add
and
and
call
sub
push
push
push
push
push
call
add
push
push
push
call
add
call
push
push
push
push
push
call
add
call
xor
push
push
push
call
add
pop
push
call
add
call
pop
add
push
push
push
call
add
mov
mov
push
push
call
add
push
push
push
push
call
add
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
push
call
add
push
call
call
push
mov
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
add
mov
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
movl
mov
push
push
push
push
call
add
call
call
add
and
test
jne
cmp
je
sub
cmp
je
mov
mov
add
add
cmp
je
add
sub
mov
mov
push
push
push
call
add
call
cmp
jne
cmp
je
mov
add
mov
call
call
mov
add
add
mov
call
mov
push
push
push
push
push
call
add
push
push
call
add
sub
push
push
call
add
push
push
push
push
call
add
xor
push
push
push
call
add
push
push
push
push
push
call
add
mov
and
sub
cmp
jne
sub
mov
push
push
push
push
push
call
add
push
push
call
add
xor
push
push
push
call
add
cmp
je
push
push
call
add
push
call
add
push
call
cmp
jne
mov
sub
or
je
mov
add
or
mov
mov
cmp
jne
cmp
jne
cmp
jne
add
mov
mov
add
sub
add
cmp
je
add
mov
sub
and
cmp
je
cmp
jne
sub
and
mov
addl
xor
mov
sub
sub
cmp
jne
sub
lea
and
push
push
push
push
push
call
add
push
push
push
push
push
call
add
inc
mov
xor
sub
sub
add
sub
mov
mov
sub
sub
mov
sub
sub
add
xor
add
sub
sub
cmp
je
add
sub
cmp
jne
mov
cmp
jne
mov
add
cmp
jne
and
push
push
push
push
call
add
push
call
add
add
call
push
call
add
call
cmp
je
push
push
push
call
add
call
call
sub
mov
sub
test
jne
cmp
je
and
push
push
call
add
call
mov
push
push
call
add
mov
push
push
push
push
call
add
push
call
add
cmp
je
push
push
push
push
call
add
add
sub
push
push
call
add
sub
push
push
push
call
add
push
push
push
push
call
add
mov
push
call
add
mov
push
push
push
push
push
call
add
push
push
call
add
or
push
push
push
push
push
call
add
mov
mov
add
cmp
je
mov
mov
cmp
jne
and
mov
mov
sub
cmp
je
add
sub
add
or
mov
sub
mov
add
sub
mov
and
and
mov
call
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
pop
and
pop
push
push
call
add
pop
or
mov
mov
sub
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
call
push
call
add
rdtsc
and
xor
mov
sub
mov
add
or
sub
add
add
add
mov
and
or
add
mov
mov
add
cmp
jne
cmp
jne
mov
mov
cmp
jne
or
sub
cmp
jne
cmp
jne
mov
sub
or
sub
xor
sub
or
add
mov
sub
pop
add
test
je
test
je
mov
add
or
mov
add
and
sub
add
add
add
pop
mov
mov
mov
sub
test
jne
cmp
je
cmp
je
cmp
jne
cmp
je
add
add
cmp
je
sub
cmp
jne
mov
cmp
jne
mov
or
mov
sub
add
add
and
add
sub
and
cmp
je
cmp
jne
mov
add
cmp
jne
sub
sub
xor
add
mov
sub
or
add
sub
cmp
je
cmp
jne
xor
mov
mov
add
sub
add
cmp
je
mov
add
sub
cmp
jne
sub
mov
test
je
sub
mov
and
and
or
mov
test
je
sub
mov
cmp
jne
cmp
je
cmp
je
cmp
je
or
add
mov
xor
sub
sub
sub
pop
add
cmp
je
sub
xor
and
sub
mov
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
call
push
call
push
push
call
add
push
push
push
push
push
push
call
add
call
push
cmp
jne
mov
push
push
call
add
call
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
je
mov
add
decl
cmp
je
mov
and
mov
cmp
je
and
xor
sub
mov
add
cmp
jne
add
add
mov
xor
cmp
je
add
sub
mov
mov
sub
add
sub
or
cmp
je
mov
sub
add
sub
cmp
jne
and
mov
add
and
mov
add
cmp
jne
add
add
add
add
cmp
jne
xor
mov
add
sub
sub
sub
sub
roll
mov
cmp
je
mov
xor
cmp
jne
xor
mov
cmp
jne
or
cmp
jne
xor
add
add
mov
cmp
jne
add
sub
mov
or
cmp
jne
mov
sub
mov
xor
sub
and
sub
add
and
add
roll
cmp
jne
mov
and
sub
roll
mov
add
add
cmp
jne
cmp
je
mov
mov
sub
add
add
cmp
jne
mov
mov
cmp
jne
and
add
xor
mov
add
add
sub
sub
cmp
jne
or
jmp
call
sub
call
push
push
push
push
call
add
pop
or
pop
call
push
push
push
call
add
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
call
push
add
push
push
push
push
call
add
push
xor
push
push
push
push
call
add
push
push
push
push
call
add
mov
call
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
xor
push
push
push
push
call
add
push
call
add
mov
mov
mov
mov
add
add
sub
mov
mov
push
and
sub
mov
push
push
call
add
mov
sub
add
mov
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
call
add
test
jne
push
call
add
mov
call
push
push
push
push
call
add
push
push
push
push
call
add
mov
cmp
je
cmp
jne
add
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
mov
and
push
push
push
push
call
add
push
call
add
push
push
push
push
push
push
call
add
push
call
add
push
mov
xor
mov
and
and
cmp
je
sub
and
mov
mov
add
sub
mov
mov
and
add
cmp
je
sub
add
add
call
xor
sub
mov
push
push
push
call
add
push
push
call
add
mov
mov
sub
xor
and
sub
add
add
mov
cmp
jne
add
sub
mov
cmp
jne
push
call
add
mov
mov
push
push
call
add
mov
push
push
call
add
push
push
call
add
push
push
push
push
call
add
test
je
add
add
mov
mov
cmp
jne
mov
sub
mov
add
cmp
je
cmp
je
cmp
je
xor
test
je
add
add
add
mov
mov
mov
mov
cmp
jne
sub
cmp
je
mov
sub
sub
add
add
cmp
jne
cmp
je
mov
cmp
jne
cmp
je
sub
cmp
je
sub
xor
sub
add
cmp
je
mov
sub
test
jne
add
and
xor
cmp
jne
mov
add
sub
add
or
je
sub
mov
sub
sub
mov
sub
add
sub
cmp
je
mov
cmp
jne
cmp
jne
cmp
je
add
sub
add
mov
cmp
jne
cmp
jne
cmp
jne
add
sub
add
or
cmp
je
mov
sub
cmp
je
mov
cmp
je
and
cmp
je
sub
mov
add
add
mov
cmp
jne
sub
and
add
add
sub
repnz
cmp
je
test
je
push
push
push
call
add
mov
add
mov
call
push
push
push
push
push
call
add
sub
and
push
push
call
add
add
call
push
push
call
add
cmp
je
call
mov
push
push
push
push
call
add
call
addl
push
push
call
add
push
push
push
call
add
jmp
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
cmp
je
cmp
je
mov
mov
test
jne
cmp
jne
mov
mov
sub
add
sub
or
test
jne
mov
test
jne
mov
mov
add
add
add
test
jne
mov
add
mov
add
add
add
cmp
je
mov
mov
cmp
je
mov
mov
and
cmp
jne
mov
sub
and
mov
add
add
add
sub
sub
test
jne
mov
add
or
cmp
je
xor
xor
add
sub
add
sub
cmp
jne
sub
and
add
cmp
je
mov
add
pop
add
pop
test
je
sub
or
pop
mov
mov
add
or
cmp
jne
cmp
jne
test
jne
cmp
je
or
cmp
je
cmp
je
add
cmp
jne
and
add
mov
add
cmp
je
sub
mov
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
and
push
push
push
push
call
add
add
mov
cmp
jne
mov
call
call
push
push
push
push
call
add
mov
mov
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
call
add
push
push
call
add
push
call
add
push
push
push
call
add
push
call
add
mov
push
call
add
pop
mov
call
push
push
call
add
push
push
push
call
add
pop
test
je
call
push
push
push
push
push
call
add
pop
push
call
add
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
call
add
push
mov
push
push
call
add
push
push
push
push
push
push
call
add
push
xor
call
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
call
add
mov
sub
push
push
push
call
add
call
pop
sub
pop
xor
mov
call
call
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
mov
cmp
jne
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
add
mov
call
push
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
pop
mov
push
push
push
call
add
call
pop
mov
mov
push
push
push
push
call
add
push
push
call
add
mov
call
pop
cmp
je
push
push
push
call
add
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
mov
push
mov
call
and
cmp
je
and
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
add
call
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
xor
push
push
push
call
add
pop
push
push
call
add
push
push
call
add
pop
add
push
push
call
add
pop
call
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
cmp
jne
push
push
push
push
push
call
add
push
call
add
push
mov
push
push
push
push
push
call
add
push
call
add
sub
call
call
push
push
push
push
call
add
call
push
call
add
push
push
push
call
add
mov
add
push
push
call
add
sub
push
push
push
push
push
call
add
pop
push
push
call
add
push
push
push
push
call
add
pop
push
push
push
call
add
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
call
add
push
push
call
add
push
mov
push
push
push
push
call
add
push
call
push
push
push
push
call
add
mov
mov
and
mov
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
call
add
add
pop
push
call
add
pop
sub
push
push
push
call
add
sub
xor
push
push
push
call
add
push
push
push
push
call
add
pop
mov
push
push
push
push
call
add
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
add
mov
cmp
je
mov
add
push
push
push
call
add
mov
add
xor
push
call
add
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
sub
push
push
push
push
call
add
pop
cmp
jne
call
call
pop
push
call
add
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
add
mov
mov
push
xor
mov
sub
sub
sub
or
push
mov
add
push
mov
sub
sub
sub
or
mov
mov
and
add
sub
or
add
sub
add
sub
add
cmp
je
and
mov
mov
add
add
and
xor
cmp
jne
mov
or
mov
cmp
jne
sub
mov
sub
mov
add
mov
cmp
je
mov
mov
sub
sub
pop
cmp
jne
and
mov
and
mov
and
and
and
sub
sub
cmp
jne
add
pop
sub
pop
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
xor
add
mov
cmp
je
add
mov
mov
mov
add
add
sub
add
add
add
push
mov
mov
cmp
je
mov
cmp
jne
xor
add
sub
mov
cmp
je
xor
sub
sub
cmp
je
and
mov
xor
add
add
xor
cmp
jne
cmp
je
add
cmp
jne
mov
mov
cmp
je
mov
sub
cmp
je
cmp
je
mov
sub
mov
cmp
je
add
mov
add
and
sub
mov
test
je
cmp
je
cmp
jne
add
sub
mov
mov
cmp
jne
add
cmp
jne
and
mov
mov
add
and
or
add
sub
push
test
je
mov
test
je
cmp
je
add
mov
mov
and
mov
add
add
sub
xor
sub
mov
sub
add
add
cmp
je
xor
mov
and
or
sub
add
add
add
add
cmp
je
mov
xor
cmp
jne
mov
cmp
jne
mov
sub
add
test
je
add
xor
and
xor
sub
sub
add
cmp
je
mov
mov
sub
or
sub
sub
sub
cmp
jne
cmp
je
add
cmp
jne
mov
mov
cmp
jne
mov
mov
sub
mov
cmp
je
cmp
je
cmp
je
mov
cmp
jne
sub
xor
mov
cmp
je
sub
add
add
sub
sub
mov
add
add
cmp
jne
mov
mov
cmp
je
sub
mov
mov
add
sub
cmp
jne
mov
sub
sub
and
mov
add
cmp
jne
sub
mov
cmp
je
sub
mov
mov
cmp
jne
and
xor
sub
sub
or
or
mov
sub
and
add
or
cmp
je
mov
mov
add
cmp
je
add
cmp
jne
mov
mov
add
test
je
sub
sub
mov
sub
mov
or
add
add
mov
cmp
je
mov
mov
add
sub
add
add
and
pop
mov
pop
or
add
cmp
je
sub
add
mov
test
jne
xor
mov
add
sub
cmp
je
sub
mov
mov
or
add
sub
and
and
sub
cmp
je
mov
pop
cmp
jne
mov
cmp
jne
sub
test
je
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
xor
mov
or
add
push
mov
add
add
push
mov
mov
add
or
and
push
mov
or
mov
add
add
and
sub
cmp
jne
mov
cmp
je
mov
or
and
or
and
and
mov
cmp
je
mov
mov
cmp
jne
add
and
add
mov
add
add
cmp
jne
xor
or
mov
test
je
cmp
je
xor
sub
sub
mov
xor
add
sub
add
cmp
je
mov
mov
sub
add
cmp
je
add
sub
mov
mov
cmp
jne
test
je
mov
xor
cmp
jne
add
add
mov
or
sub
sub
add
sub
add
cmp
jne
cmp
jne
cmp
jne
mov
sub
test
jne
add
add
and
mov
mov
test
jne
cmp
jne
mov
add
add
mov
sub
sub
or
sub
sub
add
sub
or
cmp
jne
mov
mov
sub
add
add
add
sub
add
sub
mov
mov
sub
test
jne
add
add
sub
cmp
jne
add
cmp
je
mov
cmp
jne
mov
mov
cmp
je
add
mov
or
add
mov
sub
sub
and
and
test
jne
xor
mov
mov
pop
sub
pop
sub
cmp
jne
add
mov
sub
mov
add
sub
sub
sub
cmp
jne
mov
cmp
je
mov
add
mov
mov
add
add
sub
sub
mov
and
add
add
pop
mov
add
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
push
xor
and
xor
or
mov
push
add
mov
or
mov
or
mov
cmp
jne
cmp
jne
mov
add
add
mov
cmp
jne
add
mov
and
xor
sub
mov
sub
add
and
cmp
je
add
mov
add
mov
push
mov
and
sub
mov
sub
cmp
je
xor
or
cmp
jne
mov
add
add
mov
sub
and
mov
and
or
mov
cmp
je
mov
xor
add
or
sub
test
jne
mov
cmp
jne
sub
mov
sub
sub
add
mov
add
cmp
jne
sub
add
mov
or
pop
test
je
cmp
je
mov
and
mov
sub
sub
add
test
je
add
pop
cmp
je
mov
xor
sub
cmp
jne
cmp
jne
sub
and
mov
mov
sub
and
and
pop
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
push
and
push
add
add
push
xor
sub
add
add
mov
xor
cmp
je
sub
xor
add
mov
sub
cmp
jne
mov
xor
mov
or
cmp
jne
mov
sub
mov
add
cmp
jne
mov
test
jne
cmp
je
xor
mov
add
add
sub
add
sub
add
sub
add
sub
mov
mov
sub
add
sub
sub
sub
mov
sub
or
pop
cmp
je
mov
add
or
mov
add
sub
cmp
je
mov
cmp
je
mov
sub
mov
add
sub
sub
sub
cmp
je
cmp
jne
mov
add
mov
or
add
sub
add
sub
sub
pop
mov
pop
mov
mov
mov
or
add
sub
add
xor
add
xor
leave
ret
