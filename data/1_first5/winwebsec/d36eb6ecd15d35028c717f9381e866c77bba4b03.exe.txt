push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
sbb
and
clc
mov
dec
jl
popa
das
cmc
loop
mov
in
push
shlb
mov
mov
xchg
jp
pop
nop
popf
sbbb
loopne,pn
stc
testl
mov
sahf
xchg
faddl
jmp
cmp
insb
inc
cmc
ret
mov
inc
arpl
clc
sub
std
xlat
inc
mov
or
vpmulhw
lret
fistpll
call
xor
stos
fildl
sarl
adc
jmp
fsubl
lcall
inc
arpl
lret
push
imul
adc
fidivs
dec
js
pop
lods
xor
pop
int
pop
push
jle
inc
add
push
sbb
or
inc
fwait
or
sub
cmp
jo
add
jae
out
push
stos
jg
and
jb
sarl
fwait
mov
mov
inc
int3
test
or
xor
lods
sahf
sub
ss
mov
fwait
cmpsb
out
sbb
mov
and
jle
lret
sub
shll
fstps
xchg
sbb
inc
fsubrp
lds
clc
mov
cld
jb
js
in
mov
mov
add
push
daa
gs
and
enter
jne
or
pop
cmc
push
mov
or
push
mov
cltd
fwait
scas
lret
int3
inc
xchg
jge
out
mov
cmpsl
in
ret
mov
dec
jb
movsl
xchg
jp
in
sub
cli
stos
test
ret
push
in
paddusb
shrb
lods
xchg
mov
je
sbb
scas
pushf
adc
shlb
sub
pop
inc
mov
mov
mov
sub
mov
cli
lds
gs
movsb
stc
xor
xor
dec
push
ret
mov
mov
les
mov
mov
push
stos
jno
or
lods
idiv
daa
ret
pushf
cmpsl
inc
lahf
nop
and
cmp
cmc
and
add
push
sub
in
xchg
xchg
xor
adc
xchg
xor
dec
stc
lret
add
shr
stos
andl
cmpsb
movsb
mov
aas
pushl
enter
ljmp
es
pop
loop
sub
fsubrl
lds
mov
pusha
lds
outsl
adc
and
and
in
rcl
mov
xchg
push
adc
cmpsb
adc
pop
or
cmp
rcl
scas
or
cmpsb
test
loopne
int3
mul
sub
push
loop
add
neg
mov
jle
adc
mov
out
imul
int3
dec
pop
add
inc
test
arpl
lea
push
jo
cld
pop
and
in
dec
idivl
sahf
ficoml
fwait
push
pop
dec
jno
jle
lods
cmp
xchg
mov
fnstsw
pop
dec
fadds
enter
fdivrs
mov
push
inc
or
xor
insb
add
rcrl
sbb
add
adc
or
mov
and
mov
xor
sahf
fs
dec
jbe
mov
loopne
jne
cmpsl
ja
pop
fwait
xchg
dec
inc
or
fcompl
push
inc
push
clc
lret
enter
loop
and
ficomps
mov
xor
xor
insb
call
cmpsb
xchg
hlt
pop
outsb
mov
jecxz
fisttps
jb
pop
mov
test
lahf
and
push
mov
lods
mov
and
fstpt
jl
push
lods
es
ret
cmp
ficoms
ret
push
pusha
xchg
or
sbb
stc
mov
cmp
push
call
lret
mov
test
icebp
das
in
push
adc
inc
std
in
out
es
std
jno
rcrl
enter
fneni(8087
icebp
cwtl
mov
jo
pop
cltd
inc
sbb
pop
int
fdivl
lods
pop
xchg
push
inc
dec
xchg
movsb
dec
repz
call
or
sub
adc
ljmp
in
jecxz
sti
scas
fwait
loop
xchg
pop
add
pop
xor
xchg
cmp
or
mov
xchg
xchg
pop
cmpsb
and
cmp
sbb
xchg
pop
adc
test
or
jle
loop
xchg
sbb
loopne
rolb
cmc
xor
jge
jp
fcmovu
inc
push
inc
pop
xor
popa
sbb
mov
stos
jnp
mov
pop
pop
test
fdivs
mov
dec
add
xchg
clc
jo
cmp
fisttpl
ds
xchg
out
cmp
xlat
test
push
and
mov
mov
test
sub
out
je
jmp
mov
scas
sbb
mov
jge
jb
lret
and
sarl
js
sub
nop
xor
cmp
sarb
sub
aam
push
adc
cwtl
lret
or
mov
mov
mov
ror
and
fsubr
mov
or
pushl
pop
mov
pop
mov
scas
je
ljmp
fidivl
dec
mov
ds
mov
fldenv
fwait
nop
mov
shlb
jmp
in
sbbb
and
pop
test
jl
bound
cli
fwait
scas
jl
push
sub
xor
pop
and
sahf
outsl
push
sub
jns
and
orl
sub
push
orl
xchg
out
loope
push
int
daa
cld
jo
add
push
stc
sar
jp
dec
std
shl
sbbl
xlat
pop
sbb
pop
and
das
or
das
fcompl
mov
mov
mov
push
imul
in
xor
shrb
push
sbb
fisttps
jecxz
jl
sub
outsl
imul
mov
and
out
xlat
push
fildll
sub
push
mov
mov
mov
or
or
sub
test
rclb
push
add
mov
push
aad
pop
push
decb
push
std
pop
mov
int
cmc
daa
mov
shrb
and
sbb
cmp
bound
scas
cld
ljmp
push
mov
adc
loopne
sbb
pusha
sub
jae
movsl
adc
push
pushf
dec
fildll
in
mov
xor
rcrb
and
sti
and
lret
dec
mov
adc
xchg
rol
adc
jecxz,pt
int
adc
adc
hlt
sbb
mov
xchg
aaa
or
cmp
jae
or
shl
icebp
pop
or
jnp
mov
mov
in
lahf
xor
jne
test
stos
ret
ret
popa
mov
add
adc
in
push
test
pop
cmp
sbb
jecxz
cmp
mov
pop
cmp
lods
push
int3
ret
pop
push
adcb
test
repz
mov
out
rorl
ljmp
cmp
das
lods
test
call
test
sbbb
pop
and
xor
adc
xorb
test
js
stos
leave
mov
dec
inc
shrb
popf
call
pop
push
pusha
call
jb
insl
jb
xchg
imul
cs
xchg
push
xor
mov
pop
push
push
lcall
test
movsb
icebp
inc
mov
lret
adc
push
xchg
gs
lret
sub
stos
int3
scas
daa
xlat
jg
mov
sub
cmpsl
jne
aaa
das
push
fcoms
aas
xchg
icebp
fstpl
mov
sti
test
arpl
xchg
pop
mov
out
xchg
lds
sub
adc
test
inc
push
loop
or
dec
add
or
jae
movsb
jle
pop
jge
sti
shlb
std
testb
mov
pop
mov
call
jne
sub
mov
dec
sub
out
or
cmp
xchg
mov
xor
and
sbb
dec
mov
and
mov
cltd
cmpsl
jno
rcrb
enter
imull
sahf
addr16
mov
pop
inc
mov
mov
ds
lods
rclb
rcrl
adc
outsb
enter
test
cmp
adcl
orb
lds
mov
sti
mov
lret
sti
add
sbb
cltd
add
movsl
lods
mov
adc
dec
lret
cs
insb
xor
adc
and
and
xor
je
scas
mov
je
and
mov
adc
cmpl
jo
shlb
inc
jg
in
dec
xor
cmpsl
sti
inc
mov
stos
push
in
sbbb
xlat
sbb
outsl
mov
lahf
jmp
cmp
lcall
push
insb
jb
inc
out
dec
mov
xor
imul
sub
adc
sub
nop
dec
pusha
cmp
insb
cmp
pop
sbb
ja
lock
jge
out
ror
pop
jp
xchg
jnp
stc
sub
hlt
mov
movb
xor
push
lahf
jle
push
ret
dec
push
pop
xor
pop
out
fiaddl
out
outsb
es
stos
sub
divl
stc
mov
test
push
testb
sarb
jne
stos
xchg
push
loope
popa
inc
rcll
sti
pop
std
inc
mov
push
test
xchg
and
pop
sahf
fiadds
jae
test
inc
or
cs
sbb
or
push
stc
ret
xchg
lea
sbb
xor
imul
rol
sub
iret
insl
pusha
mov
ror
test
sbb
xchg
jmp
and
leave
and
subl
stos
sub
out
push
repz
mov
sbb
rcl
clc
rcll
and
ficoml
jg
insb
add
jno
sbb
xor
aaa
ficompl
insl
stc
fnsave
sub
pop
mov
fstl
cmp
push
daa
cld
or
pop
lret
scas
inc
movsl
dec
cmp
push
cmp
sar
jne
mov
inc
pop
out
mov
push
inc
scas
cltd
insl
mov
js
push
cli
cs
xor
or
push
stc
int
subb
icebp
ret
shl
push
lcall
dec
jp
fstpt
lahf
decb
inc
sbb
adc
and
fnstsw
clc
ljmp
mov
jae
adc
xchg
xlat
dec
int
jge
js
mov
nop
inc
pushf
stos
push
add
mov
jno
mov
cmp
out
fwait
mull
inc
jge
push
cmp
adc
test
and
mov
shll
outsb
stc
loop
ljmp
jp
dec
outsb
xor
mov
rclb
push
push
cmp
push
and
jb
sarl
stc
xchg
pop
dec
adc
jge
mov
inc
cld
repnz
inc
icebp
mov
out
mov
xchg
sbb
lcall
pop
ds
addb
mov
push
ret
inc
sub
lock
test
adc
jo
pop
or
mov
jae
adc
cmp
mov
sbb
sbb
adc
popf
lock
bound
ds
xchg
dec
gs
fwait
shlb
sub
mov
pop
adcl
push
lock
out
xchg
jb
xor
add
aam
sahf
aam
add
sbb
mov
cmc
xchg
sbb
pop
xor
ret
cltd
popa
mov
cmpb
gs
mov
imul
test
aam
fimull
and
jle
fsubrs
sbb
fsubr
pop
outsb
lods
inc
cmp
mov
jae
mov
xor
cmpl
flds
or
mov
cmpsl
mov
or
int3
mov
mov
jl
jns
xor
fsubr
ljmpw
pop
push
mov
mov
xchg
push
xchg
lods
add
push
pop
mov
push
xchg
iret
aas
into
xchg
sar
mov
xchg
fldt
mov
fdivrl
test
and
cs
adcb
test
xchg
ret
mov
mov
lock
xlat
mov
mov
lea
jnp
and
scas
shrb
pop
lods
or
fisubrl
jo
pushf
decl
test
jle
hlt
mov
inc
scas
xor
or
int3
scas
sub
mov
pushf
fistpl
add
je
ljmp
movsl
dec
mov
call
in
and
scas
test
push
je
lret
dec
xor
push
sub
mov
in
pop
dec
rcr
hlt
es
pop
jae
push
adc
cwtl
out
popw
mov
popa
inc
sbbl
fwait
mov
mov
add
jbe
pusha
pop
rcl
outsl
add
stc
lahf
es
mov
hlt
mov
adc
jns
outsb
inc
addr16
idiv
sub
daa
or
int3
jne
loop
jge
fstps
or
or
dec
push
and
mov
xchg
mov
xchg
shrb
imul
scas
pop
fidivl
push
sahf
jmp
push
jmp
jb
cmc
push
in
lock
inc
outsb
push
jl
xchg
inc
jecxz
in
jb
sbb
xor
mov
aad
jns
shrb
movsb
out
xor
cld
ds
fmul
mov
xchg
je
push
out
test
ja
add
lds
aad
mov
rol
pop
push
cld
mov
stc
pusha
push
in
adc
sub
in
stos
pop
sub
fisttpl
bound
push
mov
mov
adc
jmp
xor
aas
cli
push
stc
mov
in
jnp
ds
icebp
jle
shll
push
inc
or
icebp
or
loopne
dec
ffreep
mov
xor
fidivs
in
adc
and
xchg
sub
xlat
or
jnp
arpl
daa
insl
daa
aas
push
lret
insb
pusha
je
add
inc
ja
sbb
je
sub
or
pop
xor
std
cmp
inc
push
inc
andb
mov
xor
jb
dec
cmp
leave
loope
and
mov
cwtl
xchg
xchg
add
and
fdivrl
lea
sbb
fisubrs
xchg
jg
sub
lret
xchg
cmpsl
push
out
adc
xchg
adc
fdivrl
pop
roll
push
movsl
push
aas
popa
cmp
shlb
mov
incb
out
mov
xlat
xchg
lea
jle
icebp
repz
stc
shr
loope
imul
jecxz
adc
rcr
mov
mov
aad
jno
mov
fidivl
test
jo
mov
sub
leave
stc
push
shr
int3
iret
loop
imul
jno
push
mov
add
mov
sbb
inc
xchg
orb
mov
js
or
xor
lret
mov
xor
xor
push
stc
xor
xchg
cwtl
enter
dec
popa
iret
mov
ds
outsb
cmp
mov
scas
dec
jp
repz
hlt
adc
cmpb
adc
dec
mov
push
mov
inc
dec
sub
push
stos
pop
ret
adc
leave
test
cltd
sub
pop
cmp
inc
mov
aam
xchg
xchg
push
repnz
ret
inc
aam
les
mov
movups
jo
pusha
and
inc
xchg
cmp
imul
cld
jg
add
pop
fdivl
out
add
je
xchg
jnp
lods
lret
sti
ret
mov
xchg
in
fs
je
ds
iret
lcall
cmpsb
out
fimull
lea
adc
dec
mov
neg
lods
mov
cmp
out
mov
std
mov
loopne
adc
stc
sub
testl
sbb
es
clc
pop
lea
adc
cvtdq2ps
xor
xchg
popf
imul
or
cmp
fucomip
push
inc
xchg
xchg
xor
into
cwtl
mov
scas
xchg
jmp
pop
std
aaa
dec
pop
sbb
pop
jg
push
andl
push
sbb
call
push
add
fsubrl
in
sbb
sub
jno
inc
mov
test
ret
cld
or
xor
out
scas
imul
pusha
sbb
aad
andb
add
les
adc
push
or
in
pop
mov
filds
das
pop
dec
inc
xchg
leave
pop
add
pop
mov
lock
sub
stos
pop
xor
xchg
inc
mov
adc
addb
cltd
outsl
out
push
push
jno
daa
xlat
lret
fwait
mov
ret
mov
outsl
daa
adc
xor
bound
icebp
add
mov
int3
popa
addr16
scas
add
das
pop
dec
jle
mov
jg
jb
lods
xor
repz
lcall
mov
push
sbb
std
mov
lcall
push
inc
aaa
push
das
imul
jae
pop
fld
adc
lahf
mov
cmpsl
movsl
mov
add
fcmovnb
fdiv
sbb
lcall
outsb
fucomi
inc
cmp
mov
idivb
jae
cli
sahf
and
fcoml
cs
fdiv
into
xor
mov
dec
pop
jo
pop
mov
call
xchg
not
cltd
loope
dec
mov
xor
xor
mov
xchg
xor
mov
aaa
and
mov
sbb
sub
xor
icebp
pop
adc
push
sub
push
mov
mov
sub
and
mov
and
mov
iret
out
pop
jle
hlt
mov
clc
add
in
or
mov
cmpb
cmp
add
sbb
jmp
mov
ret
cmp
mov
sbb
push
lret
fimull
mov
ja
imul
mov
aam
test
mov
xchg
imul
inc
sarl
mov
or
add
decl
pop
fs
jge
cwtl
dec
arpl
push
jne
xor
test
test
and
icebp
cmpsl
lea
jmp
inc
adcb
mov
mov
inc
sub
in
sub
dec
ret
cld
pop
aam
adc
dec
repnz
xchg
loopne
jo
cmpsb
and
scas
sub
int3
mov
loopne
addr16
cmp
call
iret
jnp
ss
xlat
cmc
jge
lods
in
sbb
fcmovne
sbbl
xchg
aad
and
xor
cmp
sub
loope
cmp
cli
outsb
enter
add
adc
lcall
fldcw
sub
pop
movsb
sbb
xor
arpl
in
shrb
stc
out
out
lcall
pop
add
adc
xor
xor
cmp
ficompl
dec
add
dec
add
or
adc
sbb
jns
mov
adc
bswap
in
inc
push
fwait
and
jle
aaa
loope
scas
mov
ja
std
loope
ja
fstp
sbb
cli
popf
and
iret
pop
or
jno
cmp
sbb
add
push
ret
and
mov
lcall
in
pop
and
jg
mov
test
lods
xchg
mov
lret
add
push
sbb
push
rclb
ficoml
outsb
adc
mov
sbb
mov
sub
jne
dec
pop
pop
fwait
mov
dec
xchg
in
jns
clc
gs
out
movsb
add
or
aad
shrb
jecxz
xchg
scas
rcrb
xor
pop
jge
movl
pop
jno
cs
and
stc
push
clc
push
hlt
mov
test
jb
mov
push
gs
outsl
xchg
adc
jne
fsubrl
std
dec
cmpsl
mov
or
les
outsb
mov
popa
xchg
popf
loope
mov
test
jbe
rorl
repnz
mov
dec
stc
cld
lock
out
inc
in
pop
pushf
fistpl
insb
add
mov
mov
movlps
sbb
icebp
movsl
test
or
xchg
cwtl
mov
loop
ficoms
cmp
sub
jl
cmp
rorb
mov
mov
mov
pop
inc
ret
vmovq
cmpsl
test
std
dec
aaa
mov
js
add
sarl
hlt
int
cli
out
sarb
xchg
cmp
jle
add
pushl
orb
adc
ljmp
shll
adc
mov
dec
sub
leave
xor
subl
xchg
lods
push
enter
push
adc
adc
push
jne
mov
dec
or
cmpsl
stos
out
cmp
addr16
test
sbb
sub
addr16
repz
daa
xchg
in
xor
dec
dec
mov
dec
in
add
js
xchg
cmp
mov
sbb
jmp
cs
in
cmp
lods
push
loopne
sbb
in
in
push
pop
lea
mov
out
push
js
insb
enter
push
jle
jb
arpl
and
jg
sub
imul
add
pop
mov
xorb
cmp
movsl
and
mov
imul
push
sar
enter
pop
jns
pop
xor
lods
and
cmc
cmp
xchg
xchg
aad
and
rorl
out
int3
mov
mov
into
xor
cld
cwtl
lcall
jp
push
fsqrt
jo
mov
aas
pop
xchg
call
jmp
aas
adc
jmp
push
push
mov
add
push
mov
out
mov
mov
mov
add
adc
pop
sarb
loopne
mov
pusha
mov
cld
mov
xchg
int3
movsl
out
adc
popl
loopne
xchg
rcl
loope
xchg
outsb
inc
in
pushf
in
jno
adc
icebp
test
andb
clc
psubusb
pop
push
aam
test
mov
orps
and
xor
lret
sub
ljmp
inc
fsts
out
lret
rcll
cmp
or
inc
test
pushf
jno
jb
aaa
mov
jmp
ret
dec
push
aam
hlt
xchg
or
inc
or
mov
lret
fwait
scas
lahf
rcll
int
out
ds
gs
cmp
test
inc
movsb
inc
xchg
add
jl,pt
insl
nop
jecxz
lds
and
test
scas
push
push
lock
inc
pop
mov
mov
loop
pop
out
cmpsl
out
das
data16
cs
jg
aad
push
or
popf
push
cmpsl
jbe
mov
test
add
jns,pt
xchg
cmp
fdivrs
push
pop
xor
jne
ds
xchg
push
sbb
pushf
pop
popf
push
leave
sti
inc
xlat
xor
dec
fisubrs
adc
adc
mull
xchg
js
pop
vpslld
xchg
scas
addl
cmpsb
cmp
in
icebp
ret
sub
dec
mov
dec
ret
sbb
movb
int3
mov
mov
ljmp
dec
push
lds
jns
jbe
std
ja
out
gs
push
jns
pop
sti
push
or
xchg
adc
roll
mov
pop
rcll
cmp
out
sbb
cwtl
and
xchg
sti
jle
push
loope
outsb
xorl
push
xor
or
adc
lret
scas
sub
mov
mov
add
adc
loopne
adc
push
sbb
shl
rcll
push
shr
sub
xor
mov
ss
xor
data16
aas
fdiv
xchg
fs
sbb
adc
cs
scas
movsl
mov
loop
cs
notl
cmpsl
enter
pop
imulb
aas
bound
fsubrl
lret
xor
push
pop
fidivs
mov
repnz
into
and
js
add
dec
leave
xchg
sub
mov
je
and
xchg
xchg
xor
sub
dec
dec
cmp
adc
adc
cmp
push
and
repnz
pop
mov
mov
xchg
pop
lea
out
mov
mov
pop
push
scas
les
movb
add
inc
push
mov
xchg
inc
js
test
pop
test
cmp
sarb
inc
push
adc
push
das
pushf
sub
out
inc
dec
sbb
pop
cmp
jl
aad
adc
inc
jecxz
mov
aaa
mov
cld
fmull
push
pop
sbb
push
enter
fcoml
js
or
imul
aad
adc
repnz
lret
pop
add
roll
ljmp
mov
in
lcall
jo
jecxz
cltd
int3
mov
sbb
insb
aad
jge
mov
mov
insb
adc
cmpsb
jo
outsl
mov
sub
rcl
xor
inc
fwait
mov
or
jmp
fwait
lock
inc
ss
repz
fwait
ret
dec
sub
dec
out
adc
jl
scas
movsl
mov
mov
loopne
call
cmp
adc
and
cmp
cld
aaa
jl
lret
iret
push
out
test
lahf
jmp
mov
and
iret
ficoml
sub
sub
pop
and
or
dec
or
outsb
icebp
mov
mov
pushl
xchg
aad
cmp
adc
xor
and
sub
push
mov
xor
mov
testl
mov
jb
in
push
xchg
push
mov
add
push
aam
fcmovu
loop
jge
test
adc
push
or
addr16
jecxz
nop
je
mov
ja
movsl
xchg
fdivs
adc
mov
push
xchg
inc
into
stos
outsl
add
or
mov
addl
iret
mov
sbb
jo
mov
mov
test
jge
std
mov
push
mov
cmp
xchg
jne
data16
inc
call
lret
ljmp
and
jge
adc
shlb
outsl
stos
ljmp
or
popf
mov
std
mov
aad
stos
inc
pop
jne
lcall
movsl
lds
jnp
cmp
scas
jle
lods
sub
pop
add
xor
and
mov
scas
sbb
outsl
or
inc
cmp
lods
cli
pop
sbb
fs
int3
mov
mov
icebp
leave
pop
mov
bswap
scas
fimuls
popf
or
fs
adcl
mov
nop
mov
insb
dec
mov
or
mov
jge
out
and
shll
push
sub
sbb
mov
gs
jmp
mulb
daa
lahf
adc
mov
dec
mov
int3
insb
loop
pushf
lods
or
push
ficoml
jg
and
loopne
shll
pop
adc
xchg
in
fsubp
sub
or
adc
les
enter
cld
popf
jmp
sbb
lret
cmp
cltd
sahf
rorb
stc
roll
pop
aas
mov
pop
xchg
mov
xor
xor
sbb
lock
push
cli
pop
sbbb
cltd
sahf
inc
add
inc
fildl
pusha
push
jnp
icebp
vmovdqu
stos
fs
lret
repz
xor
enter
add
sub
and
adc
insb
dec
mov
das
push
daa
or
inc
mov
pop
loop
test
imul
iret
pop
pop
or
mov
es
cmp
pop
mull
lods
mov
mull
lahf
mov
daa
or
xchg
cmp
rcl
movsb
inc
clc
xor
push
stc
leave
add
xor
aad
and
fs
shrl
push
cmc
popa
push
pop
std
sbb
adcb
xor
add
roll
push
mov
mov
aad
pop
dec
lret
push
mov
mov
xchg
or
mov
insb
leave
pusha
fistps
prefetcht0
sbb
sub
lods
stos
imul
out
pop
cmp
push
jbe
stc
ficoml
push
and
ja
mov
cmp
sahf
push
test
in
mov
sbb
add
cmp
out
les
xchg
pop
stos
adc
in
push
data16
clc
int3
add
stc
loop
ss
stos
xor
sub
add
pop
test
dec
insb
jae
mov
fs
adc
sbb
adc
mov
inc
xchg
sub
movsb
mov
xor
sub
loop
mov
adc
fdivrl
icebp
fnstsw
mov
dec
cwtl
jmp
loop
jecxz
cmp
add
xchg
clc
adc
mov
pop
aad
fistpl
hlt
push
out
xchg
stos
fdivr
mov
xor
fnsave
jb
adc
pushf
lds
sbb
mov
xor
inc
dec
mull
scas
stos
xchg
push
fadds
push
xlat
pop
jns
sbb
fwait
test
mov
and
xor
mov
cmp
and
push
repz
cmp
xchg
mov
push
clc
dec
and
hlt
xchg
clc
and
addr16
loop
mov
ja
mov
mov
cmp
or
mov
sbb
bound
out
decl
in
lret
add
fbld
cmp
mov
cld
xchg
mov
inc
adc
insl
fists
sub
mov
lcall
cmc
sbb
jns
mov
cmpsb
inc
aaa
jnp
mov
push
hlt
stc
aaa
dec
adcl
imul
nop
lcall
jp
sbb
jae
push
data16
aam
mov
jmp
xlat
dec
lahf
int
mov
add
mov
pop
sub
pop
out
mov
mov
std
in
imul
cmp
hlt
mov
adc
out
out
xor
cmp
andl
sbb
hlt
mov
lcall
cmp
loope
movsb
push
cmp
push
ljmp
scas
ret
mov
lea
jnp
sub
xchg
mov
sub
outsb
mov
cmpb
repz
pop
xchg
and
jne
push
outsl
insl
shll
ljmp
int3
dec
cmp
cld
pusha
out
add
fdiv
sbb
and
push
dec
add
fwait
cmp
aad
lods
pusha
xor
xchg
cmp
cwtl
out
shlb
mov
lcall
out
std
mov
inc
jmp
outsb
push
push
ja
adc
paddw
dec
jbe
subb
jo
je
pop
leave
rorb
mov
vpaddsb
mov
fisubl
adc
xor
mov
pusha
inc
lds
cmp
rcll
pop
pop
push
push
xchg
or
and
cmc
mov
test
pop
hlt
stos
in
sub
outsb
int3
ret
in
cwtl
sbb
push
cmp
jge
enter
das
pop
aam
pop
call
arpl
pushf
adc
xor
cltd
mov
sbbb
dec
mov
push
push
cmp
icebp
xor
xchg
lods
mov
daa
jnp
in
cmpsb
mov
sbb
add
push
mov
jge
dec
rclb
ret
adc
pop
pop
jl
roll
icebp
jns
cs
ljmp
adc
sub
mov
daa
dec
mov
repnz
pop
mov
cli
jbe
or
out
data16
aas
and
popf
test
test
pop
sbb
inc
and
dec
enter
mov
add
cmp
or
mov
sbb
test
add
fdivl
out
push
pop
mov
mov
sbb
fisubrl
mov
inc
ds
lds
mov
loop
or
aas
test
cmp
push
lret
mov
pop
mov
stos
jp
es
mov
xor
cmpsl
and
cmp
dec
mov
mov
test
aam
gs
jmp
pop
push
aaa
arpl
or
push
mov
fidivl
jo
mov
xchg
sub
inc
lahf
es
popf
shrl
mov
push
jae
xchg
or
jg
mov
stc
push
push
xor
mov
aas
loopne
sbb
mov
addr16
mov
xchg
sub
hlt
xor
movsb
xchg
in
push
jne
nop
xchg
mov
push
jmp
sbb
hlt
cmp
mov
loopne
cmp
xchg
mov
pop
lods
fstpl
push
data16
cmp
push
sub
test
jae
mov
xchg
sti
inc
jmp
push
mov
xchg
xchg
das
iret
or
jnp
je
lcall
xchg
into
sahf
aaa
stos
nop
mov
push
inc
in
imulb
lock
mov
mov
stos
pop
mov
or
movsl
inc
mov
jo
push
andl
ret
inc
jge
rolb
lds
fisttps
pushl
push
push
mov
jb
pop
rcrb
dec
or
scas
scas
mov
repz
xchg
mov
imul
cmpsb
mov
repnz
sbb
and
cmc
repnz
test
xor
hlt
test
push
xchg
ror
lods
aas
out
out
push
test
leave
and
or
les
or
mov
jae
xchg
sub
stos
fsubl
leave
jae
nop
cmpsb
dec
scas
add
jb
addl
shlb
xlat
cmp
xor
sbb
fidivrl
mov
ds
bound
repnz
setno
ds
shrb
push
int3
mov
inc
cmp
scas
adc
sahf
push
mov
pop
and
xlat
dec
pop
jne
pop
xor
int
dec
out
dec
jle
and
sbb
clc
orl
xchg
imul
mov
sub
add
lods
push
stos
mov
ljmp
mov
cltd
mov
repz
xor
pop
fadds
jnp
test
popf
pushf
cmp
int
out
xchg
cmpsl
pop
insl
lea
sub
hlt
sbb
in
push
add
or
and
aam
incl
fs
dec
mov
jp
fwait
cld
inc
clc
xchg
pushf
gs
popf
mov
jecxz
push
and
enter
cmc
adc
std
cmp
andl
jg
jmp
fstpt
subl
or
dec
lock
cmc
leave
push
mov
jp
and
add
sbb
sub
test
lea
packssdw
aam
dec
int3
sahf
jmp
mov
das
movb
movb
mov
test
outsb
xchg
adc
jbe
lock
mov
dec
pop
les
ljmp
out
xadd
test
xor
push
test
inc
std
subb
cmp
push
mov
xor
push
lds
mov
ljmp
fs
mov
push
dec
daa
inc
movsb
mov
test
mov
outsb
and
dec
pop
adc
push
lds
mov
inc
loopne
push
sbb
cmpsl
lret
fmull
addr16
js
jecxz
outsb
inc
out
nop
mov
adc
mov
loope
popf
pushf
mov
mov
sbb
xchg
orb
xchg
push
movsb
pop
in
inc
notl
fstpl
pop
int
lods
pop
frstor
fwait
sbb
lds
daa
call
aam
loopne
mov
push
pop
int
mov
sub
ljmp
inc
mov
dec
mov
int
inc
out
cld
sbb
mov
mov
sbb
and
or
les
jno
outsl
xlat
shll
jo
push
scas
sbb
icebp
mov
and
lret
lock
in
in
jmp
lods
pushf
test
fiadds
dec
mov
mov
dec
inc
pop
dec
popf
jle
lods
je
out
or
jg
adc
mov
jle
aas
lcall
push
clc
sti
out
sub
xorb
gs
cltd
imulb
mov
ja
fbstp
inc
mov
mov
cmp
mov
xchg
or
pop
mov
negl
loop
add
mov
outsl
ss
aad
clc
mov
jge
testl
lods
inc
out
and
ss
sahf
inc
xor
sub
jle
dec
fucom
mov
pop
pop
mov
push
sub
mov
push
mov
test
iret
bound
sub
inc
shlb
cmp
push
into
pop
jl
fwait
cmpb
imul
scas
xor
repz
xor
add
shll
fs
movl
cmpsb
es
cwtl
pushf
adc
repnz
adc
sub
jle
fwait
notl
das
sub
scas
pop
mov
cmp
iret
cmp
or
push
dec
mov
stos
test
push
adc
enter
insb
pusha
loopne
pop
adc
mov
mov
adc
xchg
xor
push
add
mov
in
pop
push
xor
stos
push
add
andb
mov
inc
mov
pop
test
xlat
stos
xchg
or
clc
pause
adc
loopne
je
jns
divb
jge
lods
sbb
sarb
jp
cmp
loope
dec
mov
cmp
cmp
mov
mov
fldt
aam
mov
cmpsl
nop
push
mov
inc
ljmp
adc
pop
test
cmp
xchg
dec
idivl
jmp
xlat
lods
and
ret
dec
mov
xchg
shl
xor
dec
enter
sub
mov
dec
dec
stc
movsl
lret
sub
push
sarl
stc
xchg
rorb
shll
out
sbb
dec
xchg
ror
xchg
mov
clc
inc
bound
sbb
ja
pop
outsl
push
xchg
pop
stos
in
mov
and
out
dec
out
sbb
mov
loopne
je
mov
mov
mov
pop
add
jae
inc
mov
clc
iret
call
push
mov
loope
push
push
add
data16
dec
sti
and
sti
rcll
sub
aam
lock
hlt
mov
cmpsl
loope
imul
push
jmp
jb
and
jbe
add
orb
jne
ja
mov
fistl
ja
jae
test
mov
and
sbb
push
dec
mov
and
or
mov
mov
into
add
sub
sbb
test
jp
adc
xchg
lods
das
xor
pop
mov
loope
sbb
test
into
cmc
out
mov
sbb
xchg
jb
int3
push
jp
pushf
dec
out
sub
into
jg
sbb
adc
out
shrb
xchg
mov
lahf
push
pop
fmul
repz
mov
orl
xor
cwtl
lea
adc
push
in
idivl
and
mov
sti
out
push
sbb
xchg
xchg
cwtl
dec
dec
mov
cs
xchg
dec
cwtl
jle
lcall
xchg
cld
icebp
cmp
fisubs
adc
jne
sub
mov
dec
and
roll
mov
test
scas
int
xchg
fnstsw
push
pop
xor
push
sub
repz
call
lahf
or
add
cltd
gs
xchg
sub
lcall
inc
int
push
sbb
seto
out
mov
fisttps
popl
jnp
mov
inc
push
std
cmc
mov
jae
and
jae
pop
or
mov
push
je
movsl
or
dec
iret
xchg
sbb
add
push
popf
scas
inc
mov
jecxz
or
xor
je
jo
insb
cld
mov
pop
pushf
inc
xor
pushf
pop
inc
outsb
pop
cmc
push
ja
aaa
jmp
dec
pop
dec
xchg
and
movsb
inc
int
ret
scas
sbb
jnp
loop
std
cwtl
mov
dec
sub
ja
cmpsb
jns
add
hlt
mov
mov
sbb
lahf
sbb
je
lcall
mov
cmpsl
sbb
out
cltd
pop
push
inc
lea
popa
xor
jo
push
int3
dec
hlt
imul
jbe
cmpsb
jmp
or
dec
repz
jecxz
cmpsl
push
mov
pop
cmp
packssdw
add
sbb
out
ret
dec
xchg
pop
push
lea
test
clc
cmpsb
dec
out
jge
add
jnp
push
int
out
cmp
shl
cmpsl
loopne
lahf
cli
sub
into
in
jns
leave
clc
dec
fs
dec
mov
sbb
andb
mov
mov
cmp
sbb
repz
int3
xchg
push
or
mov
jecxz
jnp
xor
mov
pop
xchg
repz
outsl
or
push
cltd
sbb
sbb
fistps
adc
cwtl
jno
dec
sbb
pop
mov
mov
pop
xor
cli
and
adc
add
push
cmpsl
dec
mov
inc
pop
xor
inc
loopne
sub
cwtl
xchg
mov
test
enter
call
cmp
stos
lods
cmp
fwait
push
mov
mov
xchg
jge
mov
sbb
imul
adcl
cmp
dec
ss
pusha
or
lds
shl
fidivl
sbb
stos
xor
repnz
or
dec
mov
dec
sbb
mov
xchg
adc
and
ds
nop
inc
mov
push
sarb
es
nop
and
inc
xlat
fst
lret
int
in
xchg
pop
test
inc
push
pop
dec
test
mov
cmpsb
cmp
pop
push
dec
mov
in
sbb
mov
pop
lods
pop
xchg
out
and
pop
or
fstps
adc
or
cld
xor
in
test
scas
daa
sbb
rorb
ret
stc
aad
dec
push
test
mov
push
push
cwtl
movsb
jo
sbb
jae
inc
mov
cmp
dec
adc
leave
test
adc
cmc
xorb
jnp
loope
push
aaa
inc
test
bound
dec
mov
cmpxchg
stos
jnp
dec
mov
repnz
xchg
js
mov
fsubs
sub
sbb
addr16
cmp
pushf
lock
in
lods
mov
clc
add
das
lods
les
push
pushf
popfw
jecxz
pop
in
test
adc
mov
dec
outsl
stos
jge
adc
sub
movsb
mov
cmp
stos
in
cmp
out
adc
fs
mov
jl
fadd
sbb
push
lret
pusha
fwait
lods
addr16
push
outsl
repz
adc
cmpsl
sti
aaa
xor
add
pusha
sahf
adc
shll
imul
xorl
mov
add
jnp
mov
jnp
addr16
sbb
xchg
adc
inc
inc
lahf
repnz
mov
push
inc
mov
xlat
sbb
lds
xchg
lret
mov
jo
and
xor
cmc
out
lods
push
addr16
call
lock
negl
and
inc
push
pop
mov
pop
add
aad
xchg
orl
mov
mov
mov
fimuls
insb
mov
and
sar
cmp
cmp
and
mov
mov
leave
pop
pop
outsb
scas
dec
and
enter
outsl
scas
xchg
cmp
sub
mov
dec
mov
mov
pop
test
mov
jecxz
mov
xchg
pop
repnz
icebp
popf
outsb
cmp
cld
addr16
into
aaa
imul
loop
inc
xchg
dec
ss
addl
pop
or
mov
mov
mov
imul
clc
icebp
xchg
sub
icebp
inc
stos
inc
ret
adc
adc
sub
xchg
jnp
arpl
enter
sub
mov
pop
cmp
insl
icebp
push
stos
outsb
icebp
lcall
mov
add
cmp
jecxz
popf
dec
int
stc
jmp
lret
pop
pop
loopne
icebp
rclb
fadd
inc
nop
cltd
xor
pop
test
pop
bound
cmp
insl
add
xorb
stc
sarl
mov
test
fs
lods
loop
int3
stos
scas
outsl
mov
testb
lret
jmp
inc
stos
push
cli
sarl
push
mov
pop
out
sbb
inc
ljmp
jmp
xor
into
popa
xor
fiaddl
mov
jecxz
mov
fst
xchg
mov
les
ret
test
sbb
icebp
mov
mov
mov
cltd
sti
push
adc
inc
aad
mov
lea
pop
pop
add
push
out
fmuls
pop
or
fcoms
lret
sub
cmp
or
mov
jmp
scas
xor
loope
jns
pop
stc
push
add
scas
and
aad
fsubrl
inc
push
lock
test
and
xchg
mov
xchg
pop
inc
mov
mov
loop
stc
and
cmp
inc
jo
push
lods
and
inc
or
repz
test
xor
stos
es
mov
cmpsb
pusha
dec
in
into
mov
xchg
mov
pushf
xor
test
call
ss
sbb
mov
ficomps
icebp
xchg
out
pushf
shll
push
push
ss
cmp
inc
push
cmp
insb
lods
sbb
dec
xchg
or
sub
add
lret
mov
outsb
arpl
sbb
dec
adc
or
subb
jne
sub
push
inc
add
sti
jp
iret
push
pop
mov
mov
jb
or
mov
ss
add
mov
nop
xchg
cmp
shlb
inc
lods
lret
sub
adc
jae
lds
hlt
in
sbb
xchg
or
pop
mov
sub
jns
mov
loope
jb
push
addb
sbb
push
fidivrl
sbb
lds
xchg
dec
cli
clc
pop
dec
cmp
adc
pop
push
fadds
dec
adc
ja
cmpb
test
xchg
mov
ss
call
sahf
dec
mov
ret
arpl
lahf
cltd
mov
push
mov
xchg
clc
clc
adc
pop
mov
cmpsb
jle
int
xor
cli
cmp
mov
or
dec
cs
dec
addr16
and
sbb
cltd
cmpsb
xor
cmp
imulb
aam
fs
daa
push
sub
lea
aam
pushf
in
mov
movsl
mov
ror
icebp
mov
out
dec
ret
int
sbb
or
push
scas
or
mov
cwtl
popa
mov
in
sub
ret
ja
jge
cmp
push
pop
ret
sbb
imul
int3
je
pop
or
xchg
xchg
and
cmp
push
mov
aad
dec
sub
xchg
les
cmpsb
adc
jmp
lds
push
imul
mov
inc
pop
mov
ss
push
mov
mov
jno
mov
push
ret
arpl
pop
cmp
andl
lods
dec
jecxz
and
les
jae
sar
in
stos
add
into
aaa
or
icebp
pop
adcb
aam
mov
dec
ret
dec
loopne
mov
ds
sub
jp
adc
jnp
xchg
rorb
push
push
int3
shrl
sub
fs
cmp
add
insb
sbb
cwtl
pop
cmc
nop
data16
lods
cmpb
mov
movsl
xorl
jb
sub
sarl
push
icebp
repz
sub
add
xchg
mov
std
inc
xchg
xor
inc
mov
jbe
dec
cmp
movsl
fwait
in
sbb
sbb
repz
clc
iret
sbb
popa
xchg
fcompl
inc
icebp
add
jno
arpl
lea
or
dec
dec
aam
jg
xchg
popf
add
daa
mov
push
movl
pop
ret
in
push
paddsb
shlb
jp
xor
jle
add
sub
jbe
mov
mov
fnstenv
cmp
shr
adc
movsb
push
icebp
jmp
iret
pop
leave
ret
pop
mov
icebp
xor
enter
fistpl
aad
xor
std
divb
es
stos
dec
push
faddl
xor
pop
cltd
dec
xchg
cmp
sbb
icebp
adc
popa
fadd
loop
add
jae
and
ret
sbb
sub
adc
mov
inc
outsl
outsl
cltd
lcall
lds
stos
popa
xchg
mov
vaddss
out
xchg
push
mov
loopne
mov
add
imul
repnz
xchg
movsl
scas
mov
cld
jl
or
lock
mov
cmp
inc
mov
mov
fisttpl
mov
lods
mov
adc
or
icebp
outsb
mov
rcrb
and
or
test
and
popf
adc
subl
scas
fsubl
xchg
pushf
sbb
lret
mov
xchg
pop
xchg
sbb
dec
std
pop
jne
enter
and
enter
push
and
xor
movb
inc
ret
pushf
aam
xor
movsl
xor
leave
jle
dec
mov
mov
arpl
adc
fsubl
lret
imul
xchg
or
mov
and
cmpl
sarb
xor
inc
ficoms
dec
mov
lcall
shlb
callw
inc
push
mov
das
sbb
push
cmpb
out
ljmp
fistpl
in
lcall
pop
or
cli
inc
xchg
fidivs
push
push
in
dec
xorl
hlt
or
adc
call
sbb
sub
or
pop
jb
cmpsb
dec
adc
mov
jne
mov
sbb
movsb
ret
lahf
lret
je
addr16
scas
jmp
or
jg
sahf
shl
push
popa
pop
lods
in
mov
out
or
push
or
sbb
bound
clc
nop
mov
shl
inc
or
aam
ja
jg
xchg
dec
insb
mov
das
arpl
pop
pushf
out
inc
andl
out
cld
xchg
loop
dec
insb
adcb
test
dec
mov
fst
jmp
aas
or
or
fidivrs
jmp
pusha
jmp
dec
xor
orb
ds
xchg
push
push
nop
push
pop
and
in
repz
in
out
aaa
out
outsl
lahf
push
ja
fwait
mov
sub
popa
cli
pop
jmp
and
pop
lret
sahf
scas
xchg
enter
sub
rcrl
xchg
pop
fisubrl
dec
aas
jge
int
fsub
scas
movsb
pop
xor
aas
add
fisttpll
inc
jnp
and
cmp
xchg
movsl
adc
mov
mov
loop
test
fcmovnbe
test
push
ja
sti
iret
mov
sbb
arpl
sub
outsb
mov
rcl
into
je
or
ss
jns
cs
xor
inc
cmp
push
icebp
push
jg
dec
cs
ljmp
loope
mov
ret
mov
dec
jo
sbb
lret
and
iret
pop
nop
dec
lret
filds
push
sbb
scas
mov
into
sbb
cld
rolb
sbb
filds
push
icebp
xchg
xchg
sub
mov
xor
pop
aam
add
cmc
mov
adc
push
dec
xchg
sub
jb
lea
xor
dec
icebp
fldt
das
pop
je
add
push
or
setne
sti
fisttps
lea
popf
cmp
xchg
adc
xor
cwtl
das
add
in
jl
and
push
add
push
xlat
lods
stc
dec
or
mov
inc
push
mov
or
cld
fwait
xor
jg
test
sbb
sbb
outsl
jg
sbb
into
shll
test
xchg
add
push
mov
fwait
mov
jl
xor
inc
adc
cwtl
mov
or
jge
ljmp
xchg
bound
out
mov
sub
add
pop
pop
fcoms
fldl
scas
stc
into
or
mov
xchg
imul
adc
lret
cmp
outsb
shrl
pop
xor
and
dec
push
iret
fstps
mov
cmp
bound
jo
sbb
fisubrs
fsubp
jg
push
adc
dec
mov
pop
js
ficompl
mov
rcrb
arpl
pop
push
in
test
pusha
mov
stc
pop
ret
adc
fwait
or
movsb
mov
add
insl
mov
dec
mov
jp
mov
fnstsw
faddl
inc
out
dec
mov
add
ljmp
dec
xchg
int
iret
lods
int3
fistpll
mov
out
inc
test
aaa
fwait
mov
add
dec
pop
inc
gs
and
sub
push
mov
popf
pusha
push
jo
out
lods
mov
pop
add
xchg
dec
inc
add
jmp
fcoml
addr16
addr16
cmp
negl
or
ret
xchg
gs
and
in
nop
jo
sti
shlb
jge
pop
cmp
and
addb
in
movsb
mov
sbb
push
jb
je
push
fmuls
andnps
sbb
and
jecxz
mov
sbb
add
adc
scas
pop
popa
dec
mov
jno
test
call
mov
cmp
sbb
push
jl
cltd
mov
xchg
das
stos
mov
in
push
fmul
pushf
scas
jmp
loope
lret
dec
push
xchg
jne
mov
add
sub
pop
sti
sub
sub
fistpl
fidivrs
int
loope
push
pop
xor
and
and
call
xchg
imul
pop
lahf
push
subb
xchg
mov
mov
mov
shll
popf
outsb
loope
and
std
mov
mov
mov
cmp
lret
pop
mov
mov
inc
cmpsl
push
adc
das
rcrb
loopne
test
adc
push
icebp
or
repnz
lods
xchg
lods
inc
jl
aad
xchg
add
mov
adc
adc
lcall
loop
cmovle
andb
add
repz
xchg
push
mov
sbb
xlat
aam
sahf
hlt
scas
inc
mov
jae
lea
dec
xchg
adc
xchg
inc
mov
sub
xchg
cmp
jo
add
inc
mov
cmp
js
shrl
call
sbb
jb
mov
test
cmp
xor
fdivrl
dec
in
push
push
aaa
icebp
pop
test
test
lods
loope
push
insb
xchg
jo,pt
pop
movsl
call
add
jbe
push
mov
or
out
fimull
gs
imul
movsb
jb
lock
sbb
adc
pop
mov
dec
lds
mov
adcb
jp
jnp
mov
and
pop
mov
lea
jno
inc
mov
lret
hlt
jb
rorb
cmp
dec
or
idivb
test
test
mov
ss
jbe
sub
push
loop
out
or
cmp
jmp
iret
mov
push
pop
or
stos
push
xchg
pop
adc
mov
lcall
or
pop
repz
jmp
cwtl
pushf
jge
sub
incl
aas
mov
dec
cmpl
mov
sub
cmp
aam
roll
pop
sub
push
jge
inc
push
sahf
setg
sahf
icebp
cmp
adc
iret
outsb
or
cmp
mov
pop
xchg
cmp
add
fists
out
lock
sub
and
sbb
mov
mov
jae
rolb
repz
insl
mov
lods
sbb
mov
pop
sub
lcall
pop
cli
mov
adc
out
aam
add
aaa
in
call
push
mov
gs
fistpl
out
nop
and
and
addr16
or
mov
or
cmp
jmp
mov
cmp
push
mov
inc
adc
pop
inc
insb
repz
rcrl
dec
ljmp
stc
pop
push
popa
sbb
xchg
int
shlb
xchg
in
push
andl
jo
dec
inc
ret
icebp
setg
jae
mov
mov
ficomps
xor
mov
and
inc
test
jbe
loop
jg
jmp
dec
rorb
leave
ss
arpl
shlb
stos
pop
std
cmpsb
decb
sub
std
cld
inc
mov
jle
jl
imulb
add
sbb
pop
pop
sub
mov
mov
push
mov
add
jl
mov
jbe
jnp
nop
mov
push
pop
push
stos
adc
sub
cmp
fmul
pop
mov
mov
pusha
add
nop
int
aaa
xchg
scas
lds
or
dec
push
jmp
dec
mov
cmp
mov
ret
loope
sbbl
sub
fcomp
xchg
pop
shrb
cmp
sti
push
mov
ljmp
or
pop
pushl
push
dec
loopne
lods
mov
mov
xchg
fadds
lret
loop
lods
pop
adc
inc
cmp
sub
jno,pt
outsb
and
std
incl
fldt
sbb
aam
cli
add
mov
mov
lods
mov
test
mov
jle
pop
xor
jno
mov
mov
fcompl
cld
fadd
es
fsts
cmp
test
mov
jb
ds
popf
push
adc
test
outsl
data16
add
xchg
jl
repnz
inc
cmpsl
cmpsb
inc
fldcw
jne
sub
adc
jecxz
sbb
add
cmpsl
imul
call
movsb
mov
or
jno
out
insb
mov
mov
inc
icebp
xchg
stos
xor
mov
add
xchg
pop
test
jl
mov
pop
hlt
cs
mov
out
mov
mov
inc
scas
stos
sbbl
jg
inc
scas
insl
push
cmp
popa
rorl
fidivrs
cmpsl
add
xor
test
lcall
sbb
adc
in
pop
cmp
hlt
lods
xor
push
dec
mov
popf
pop
shll
imul
into
test
or
insl
scas
pop
mov
sbb
movsl
jno
rolb
and
mov
inc
aas
mov
and
loope
or
fsubrl
fucomi
inc
jg
aas
sub
or
lcall
push
sbb
in
fwait
push
sub
sarb
adc
test
push
jge
mov
or
sub
inc
push
pop
pusha
sbb
add
mov
in
insb
inc
loope
xlat
dec
push
mov
or
loop
xchg
lds
dec
cmp
pusha
ljmp
test
scas
jbe
addb
ljmp
in
add
fildll
movsb
sbb
jmp
rclb
imul
sub
push
push
cwtl
or
pop
cmp
push
fwait
and
jo
xchg
in
sbb
pop
lods
lds
popf
mov
mov
imul
add
out
das
xchg
or
adc
aam
sub
dec
mov
bound
mov
loopw
xor
xchg
sbb
add
adc
and
nopl
mov
repnz
adc
jno
mov
add
xchg
sti
roll
pop
mov
adc
and
mov
push
fnstsw
mov
mov
xchg
sti
jle
pop
popf
popf
mov
call
jo
jo
adc
push
mov
icebp
inc
mov
mov
mov
cltd
xorl
jbe
add
xor
repz
sub
mov
cmp
movb
xchg
mov
mov
mov
xchg
cmp
test
sub
lret
sub
scas
or
xor
gs
jbe
stc
push
xor
sbb
mov
pop
dec
mov
scas
out
jl
lcall
xor
rcl
fiadds
fs
mov
je
add
add
test
add
jmp
iret
pop
mov
fwait
push
subl
enter
negb
jmp
in
inc
add
js
mov
imul
cld
popf
jbe
sbb
pop
inc
das
out
ss
and
cmp
out
dec
sbb
cmpsl
adc
push
ds
sub
dec
nop
mov
sbb
hlt
aaa
stc
jae
popa
subl
ficomps
adc
jp
lcall
sub
mov
jo
pop
stos
bound
or
lds
inc
aas
pop
sbb
jecxz
cmp
mov
fchs
push
add
in
dec
fdivl
mov
mov
nopl
and
das
and
jns
xor
pop
xor
mov
pop
sub
and
cmp
hlt
test
gs
pop
daa
and
sti
scas
or
lods
add
fs
jno
cmpb
pop
mov
std
xchg
subb
mov
test
cld
mov
nop
push
es
push
add
xlat
dec
jl
lock
cmp
ja
sarl
or
or
fbld
sbbb
enter
sti
in
cmp
testb
popf
sbb
lret
pop
or
adc
loope
and
cmp
inc
imul
jle
cs
mov
jle
js
cltd
test
or
test
mov
mov
mov
adc
cmpsl
adc
mov
mov
or
mov
fcmovb
lcall
push
dec
mov
nop
daa
roll
or
jecxz
pop
push
mov
call
lahf
lahf
lods
lea
rcll
mov
rol
daa
pop
mov
ret
popa
jno
in
pop
mov
and
adc
idivb
cmp
aad
mov
stc
and
mov
imul
out
sbb
fwait
imul
cmp
hlt
push
dec
rorl
fmulp
outsl
mov
add
xor
imulb
mov
jns
js
insb
loop
loope
and
outsb
xchg
loope
setp
xchg
push
jl
lods
lea
mov
call
or
xchg
inc
push
es
push
mov
and
cld
mov
fcmovne
add
mov
stos
ja
in
imul
xor
adc
mov
std
mov
loop
adc
and
movsl
js
or
movb
jmp
jg
xchg
lds
jne
stos
jae
shl
lds
or
popf
jb
inc
cld
mov
mov
sub
xor
rcrb
adc
cmp
xor
je
cmp
das
sub
add
jmp
dec
test
xchg
sahf
adc
sbb
mov
mov
fistpll
outsl
mov
jno
enter
sub
stos
aad
arpl
inc
and
pop
lcall
mov
sbb
ljmp
mov
scas
imul
pop
out
ljmp
ss
out
xchg
mov
test
cmp
cli
jle
lds
fs
and
adc
retw
sub
rcr
lea
sbb
bound
out
leave
fiadds
mov
jecxz
arpl
int
sbb
mov
pop
popa
jnp
cmp
push
dec
hlt
mov
mov
lods
xor
add
lods
aaa
out
mov
mov
jmp
xor
imul
jns
pop
mov
lods
popf
jns
sbb
js
data16
pop
aam
inc
push
addr16
sub
pop
out
fcoms
arpl
lahf
stc
outsb
xchg
mov
mov
popa
pop
xor
or
add
outsb
rorb
add
push
out
lods
adc
push
lahf
adc
ja
lods
cmp
mov
pop
repz
jae
repnz
or
adc
adc
fisubl
mov
icebp
mov
cmpsl
popf
jo
mov
addr16
outsl
and
add
lret
push
xor
mov
or
xlat
pop
jb
cmc
mov
lea
mov
sti
imul
and
in
push
xchg
je
loope
or
adc
and
clc
sbb
inc
les
mov
jne
call
mov
outsb
test
inc
cmp
dec
ja
adc
int3
and
mov
arpl
data16
or
mov
and
add
sub
js
in
dec
shrl
jl
leave
sti
mov
jnp
or
lahf
adc
in
pusha
xchg
out
lcall
pop
sbb
cld
sub
sbb
jo
je
or
xchg
test
xchg
and
outsl
int
daa
stc
push
lods
mov
insl
jl
push
sub
test
lret
add
js
jl
int3
add
or
jno
cmp
insb
in
push
jb
xchg
sbb
bound
or
sub
mov
sbb
cmp
and
and
loope
adc
loopne
pop
ljmp
pop
jle
xchg
inc
push
data16
cmp
mov
jbe
jno
mov
sbb
addr16
mov
dec
push
sbb
lea
inc
pop
sub
pop
or
push
push
mov
stos
out
movsb
pop
adcb
jg
or
test
jmp
or
pop
cwtl
push
xchg
pushf
xor
aaa
jae
sub
add
cs
imul
inc
sti
ss
xchg
jp
rorl
adc
mov
fwait
out
jns
test
dec
push
dec
cltd
mov
jle
sbb
and
aam
add
clc
ss
lahf
aam
sub
std
imul
or
sti
test
das
in
fildl
push
mov
mov
lods
jb
fists
out
and
aaa
lds
xchg
lahf
and
mov
andl
mov
movsb
jmp
xor
idivb
xor
mov
cld
cwtl
lcall
imul
int
sub
mov
push
inc
imul
fcoms
adc
mov
loop
push
cmp
arpl
mov
mov
and
mov
push
imul
push
or
cmp
clc
mov
outsl
testb
ja
popa
adc
add
mov
dec
mov
fnsetpm(287
lret
jmp
pushf
cli
sbbl
shll
jns
pop
imulb
hlt
dec
add
adc
ljmp
mull
adc
cs
mov
or
mov
inc
fnstenv
outsb
icebp
or
enter
cmp
sub
dec
push
sbb
sub
test
pop
mov
dec
nop
aaa
cmp
aam
cmp
adc
cmpsb
stos
mov
pop
aaa
mov
les
jmp
sbb
ss
in
push
enter
lret
sbb
rclb
or
lcall
shll
xchg
pop
in
adc
je
dec
arpl
add
jns
mov
loope
js
push
pop
sbb
dec
in
jb
ljmp
clc
outsl
xchg
xor
ss
pop
mov
outsb
jno
xchg
mov
sub
jg
mov
mov
dec
movsl
xchg
adc
sti
mov
mov
cwtl
lds
shr
cmpsb
mov
movsb
xchg
add
test
push
jp
jecxz
cwtl
mov
cld
cli
loope
jnp
add
cmp
in
hlt
sbb
ret
cltd
add
loopne
cli
mov
inc
cli
stc
stc
loope
xor
add
adc
insb
xor
in
loopne
ds
cmp
testb
popl
mov
cld
sub
adcb
xor
push
roll
and
xchg
imul
cld
pop
les
pop
push
push
pop
rolb
fs
orb
out
jg
rclb
dec
add
mov
pop
iret
sbb
cs
cli
in
fists
push
loop
xor
repnz
dec
jb
aas
and
insb
leave
lds
or
or
mov
push
sub
gs
js
stos
pushf
addr16
dec
and
inc
and
mov
jge
push
cmp
icebp
xor
xchg
xchg
fs
js
jecxz
int3
imul
sarb
xchg
or
fldl
xchg
cmp
or
mov
push
stc
cmp
aam
out
jp
add
mov
add
movsb
lret
pop
div
stos
push
loop
sbb
cmp
pop
std
mov
aam
push
cld
mov
pop
out
addr16
rorb
lcall
imul
mov
xchg
push
push
cld
fidivs
lcall
adc
cmp
mov
fdivr
inc
dec
movsl
mov
ret
mov
sahf
xor
loope
adc
inc
call
sub
xor
mov
lock
movsb
push
jl
adc
sbb
out
cmpsl
cmpsl
dec
xchg
je
pop
rcrb
xchg
or
add
and
cld
fucom
cli
jne
mov
lock
es
aam
pop
outsl
loop
mov
mov
sbbb
xchg
jmp
cltd
and
gs
push
and
sbb
jae
dec
add
popf
es
add
cld
test
daa
shl
or
data16
gs
cltd
push
adc
jo
inc
dec
xchg
pushf
lret
push
push
inc
andb
pop
xchg
push
cmp
out
pop
je
xchg
jbe
insb
xlat
jl
aad
aas
ss
push
jle
xor
movsb
sub
adc
sbb
scas
aaa
hlt
gs
cmp
xchg
mov
gs
test
mov
add
cmpsb
sti
or
inc
shrl
aas
push
sahf
es
jne
dec
xor
jp
and
push
nop
xchg
mov
shl
mov
cmp
cmp
mov
sbb
js
inc
or
lret
shlb
repz
jle
pop
and
add
mov
push
xchg
aas
cli
mov
mov
movsb
xor
sub
mov
inc
les
rorl
aam
pop
fisttpl
test
push
stos
mov
ja
stos
lret
andl
inc
loope
ds
adc
out
cs
mov
outsb
jmp
add
ja
scas
sti
push
into
sbb
dec
insb
cmc
add
sub
inc
inc
ljmp
dec
dec
cld
sub
push
fwait
xlat
cmp
dec
imul
scas
dec
addb
xor
push
rolb
pop
inc
movsl
inc
je
sub
xor
cs
mov
jl
shll
out
push
jge
jp
pop
add
and
in
sbb
shrl
fcomp
fiadds
or
loope
fwait
pop
aad
repz
pop
insb
sub
or
lods
xorl
xor
nop
aaa
icebp
sbb
test
add
inc
aaa
hlt
and
mov
and
fbstp
cmp
gs
rclb
cmp
js
and
mov
push
arpl
gs
ss
push
mov
pop
test
mov
shr
sbb
xorl
dec
mov
imul
add
mov
and
and
adc
pop
out
ret
xchg
mov
jp
pop
cli
subb
pop
cmp
add
pusha
mov
lods
push
aaa
js
cld
sub
mov
sub
cmp
cmp
int
data16
push
add
fs
mov
gs
popa
pushf
cltd
pushf
cmp
push
xchg
std
in
sbb
sub
mov
jns
jns
into
cwtl
dec
xlat
pop
int3
mov
rorl
insb
test
xchg
leave
sbb
enter
pop
or
int3
jo
xor
jl
out
cmp
inc
jnp
stc
nop
lret
addr16
sub
mov
scas
subb
and
cwtl
cwtl
and
adc
pop
adc
pop
fwait
xchg
push
sahf
add
repnz
push
lea
dec
mov
int3
fisubrs
jmp
mov
or
dec
or
js
jp
repnz
mov
cmp
gs
inc
xchg
mov
cmc
les
arpl
test
arpl
push
sub
test
hlt
jp
xchg
rcrl
sbb
and
xor
and
jp
sub
enter
push
xchg
cmp
pusha
xchg
and
das
lret
movsb
jnp
add
xor
stc
movsl
fmul
shlb
sbb
repz
inc
mov
or
and
mov
lods
jp
add
mov
cmp
push
cmpsl
daa
iret
mov
inc
xchg
notb
add
pop
cmp
sub
test
mov
inc
sbb
jnp
sbbb
mov
clc
or
mov
push
scas
dec
add
inc
jnp
mov
sbbl
daa
jg
rorl
xor
add
bound
jae
rclb
aas
pop
aas
adc
insb
mov
shll
inc
push
out
and
xor
arpl
adc
pusha
mov
sbb
loopne
add
pushl
mov
mov
outsl
je
lahf
xlat
out
mov
pushf
aaa
cmc
dec
adc
cmp
and
or
adc
add
outsb
es
push
mov
in
sbb
cmpsb
pusha
lcall
and
je
inc
or
mov
xor
adc
push
xchg
mov
sbb
xchg
stc
pop
and
mov
mov
cmp
sbb
jge
stos
cmc
sbb
dec
fildl
cmp
fsubr
movsl
ljmp
into
pop
lds
movsl
mov
je
aam
xchg
es
aaa
xchg
movsl
mov
sub
outsb
repnz
clc
pop
popf
jno
or
aad
xorb
pop
xchg
or
pushw
dec
ror
push
xor
lock
mov
and
lock
add
inc
mov
or
sub
push
lds
stc
add
roll
subb
jnp
xchg
mov
sub
mov
adc
out
xchg
cmpsl
neg
push
pop
adc
lods
mov
fimull
xor
push
ret
pop
mov
aaa
outsb
loop
rolb
cmp
ret
cld
mov
hlt
jmp
mov
push
jnp
inc
dec
fs
mov
aam
mov
pop
jecxz
jge
fbstp
dec
out
mov
cvtdq2ps
xor
sub
mov
add
lahf
adc
rcrl
xchg
outsb
mov
mov
lret
xor
call
mov
cltd
mov
xor
fstl
mov
push
jae
pop
leave
push
jge
test
sarb
inc
mov
jp
inc
stos
rcrb
inc
add
fsubrl
xor
mov
jp
adc
mov
pop
pop
leave
mov
mov
sub
outsl
in
jns
xor
std
adc
mov
sub
pop
adc
pop
ljmp
adc
cmp
sub
and
mov
pop
mov
imul
mov
fistl
imul
shlb
test
divl
add
cli
bound
jecxz
roll
adc
pop
incb
xor
cmp
cmp
js
pop
lret
lock
jmp
inc
fcompl
ja
stos
leave
adc
imul
sbb
jl
popa
imulb
data16
mov
leave
lret
jmp
movsb
fadds
xor
loope
shlb
jae
cmp
jmp
rclb
xlat
sbb
mov
jmp
pop
int3
jo
jnp
jg
popa
out
popf
xchg
dec
in
adc
pushf
push
outsl
fwait
or
pop
mov
fiaddl
mov
mov
mov
sub
jnp
sti
cs
xchg
add
lcall
out
add
aas
adc
fdivr
xchg
dec
xchg
sahf
mov
or
pop
lret
repz
dec
mov
add
push
add
mov
mov
ss
repnz
xchg
inc
repz
cli
xchg
inc
xchg
loope
push
push
or
dec
mov
adc
cmp
inc
jp
scas
cmp
inc
cmp
imull
ret
push
hlt
lcall
dec
loopne
mov
std
out
nop
idivl
push
sub
xlat
fidivl
dec
mov
lea
in
cmp
pop
lds
daa
sbb
sub
jo
or
mov
sub
sub
pop
mov
sub
cwtl
and
ficoms
pop
push
in
push
cld
dec
xchg
xchg
cli
or
sub
xor
inc
xchg
aaa
lods
sbb
xchg
cmp
ret
les
dec
ds
jb
and
scas
push
dec
rcr
popf
imul
bound
or
fwait
sbb
or
fs
and
mov
movsb
mov
and
imull
cmp
outsl
nop
fmul
stc
lahf
dec
inc
je
adc
jecxz
out
sub
imul
xchg
cmp
movb
adc
fnstsw
dec
fistl
hlt
xor
mov
or
or
xchg
nop
push
jg
arpl
in
mov
adc
adc
and
push
mov
fs
xchg
in
xor
nop
cld
jae
mov
jae
fwait
test
loopne
sarb
arpl
cmc
outsb
cmc
repz
xchg
sahf
daa
roll
sub
sti
insb
mov
sbb
mov
lret
and
aaa
pop
ja
or
dec
iret
push
add
mov
xchg
das
fmuls
push
mov
xor
sub
pop
push
xchg
je
daa
mov
in
pop
bound
loop
xor
popf
pop
dec
cld
jo
pop
cmpl
mov
dec
out
push
sub
pop
xor
in
nop
pop
add
jbe
sub
hlt
mov
movsb
jmp
out
fsub
inc
adc
mov
mov
jg
pop
fcomip
xor
into
test
mov
sub
addr16
dec
dec
insl
movsb
sbb
sub
pop
loop
cmp
mov
cmp
xor
movsl
mov
inc
decl
das
out
imul
push
pusha
mov
inc
scas
in
and
cmpsb
push
xor
stc
push
int
scas
les
and
aam
lret
sub
stc
fcmovu
xor
jno
int3
ljmp
movsl
sbb
dec
jmp
jl
fildl
repz
aam
xorb
out
lock
jne
pop
js
cmpsl
mov
not
mov
mov
and
pop
sub
cmp
pusha
mov
ds
mov
aam
fadd
cli
fnstcw
lret
rcll
push
pop
pop
mov
sub
jbe
pop
jl
les
jecxz
outsl
fldl
push
mov
pop
add
mov
dec
test
sub
sbb
push
xor
jle
cmp
mov
popa
es
dec
jmp
sahf
xchg
push
stos
mov
lock
pop
mov
or
loopne
jb
icebp
sbb
add
jle
xchg
sub
gs
mov
out
lock
cli
pop
jae
pusha
int3
and
mov
xchg
jne
xchg
stos
ljmp
xlat
sbb
cmp
and
sbb
mov
imul
rclb
xorl
and
jne
in
xchg
dec
dec
xchg
rol
lea
ds
mov
stc
pop
into
add
lsl
xor
inc
rol
mov
mov
mov
arpl
aam
push
into
scas
int3
sbb
jp
xor
add
rcrb
psubusb
adcb
mov
push
mov
sbb
arpl
dec
in
repz
jp
sbb
xchg
jo
add
in
imul
cmc
mov
mov
push
dec
out
fcmovnu
movsb
pop
lock
cltd
add
enter
fwait
shrb
out
clc
subl
stos
mov
into
movsl
test
stc
and
mov
or
testl
sub
push
add
cmp
mov
fwait
dec
repz
cli
cltd
pop
push
pop
mov
mov
sti
in
xchg
sbb
and
std
or
add
test
mov
mov
ret
data16
aad
mov
mov
ds
cmp
cmp
fstps
adc
or
pop
inc
cmc
cwtl
push
sbb
jnp
fsubrl
outsl
call
int3
daa
xchg
mov
cmp
pusha
pop
filds
mov
popl
pushf
xchg
mov
sbb
aad
and
mov
inc
lds
cmp
dec
push
cmp
mov
pop
movsl
popa
cmpsl
insl
out
xchg
sub
adc
in
js
add
cmpsl
xchg
cmp
or
add
addr16
movsl
aaa
adc
ss
and
test
xchg
or
loope
cltd
xor
inc
pop
dec
xchg
imul
add
xchg
mov
into
push
xchg
sbb
and
or
lret
fwait
inc
ljmp
and
ljmp
test
call
insl
sub
imul
push
inc
ss
nop
fcom
ffreep
mov
jae
imul
in
enter
push
jno
jae
inc
jbe
pop
mov
xor
add
push
les
pop
shl
mov
and
int
pushf
loope
dec
xchg
xchg
push
repnz
cmpsb
xor
ficompl
xchg
addr16
push
jae
add
sbbl
add
add
sbb
pop
enter
xchg
cmpsl
lods
pop
lods
mov
std
ficoms
xchg
enter
leave
xor
sarl
popa
dec
push
mov
jecxz
int
leave
cmp
rcrl
mov
mov
outsl
out
jl
jl
dec
shrl
ss
nop
xor
sub
fcompl
lea
in
push
inc
add
jle
mov
sub
mov
inc
mov
jecxz
mov
jno
sahf
cmp
int
xchg
sbb
cmp
mov
jns
les
js
or
outsl
xchg
lret
jae
xchg
ss
stos
filds
out
pushf
es
add
pop
mov
jo
in
popa
lods
sub
and
mov
or
cwtl
push
clc
mov
scas
push
and
add
cmpsl
enter
cmp
jmp
inc
push
pop
pop
mov
mov
popf
in
fimuls
mov
pusha
fstl
lahf
xor
lds
jbe
ss
imulb
loop
outsl
out
xchg
cli
add
jnp
ja
mov
inc
leave
pushf
inc
jmp
in
pop
jge
and
into
xor
lret
stos
pusha
repz
xor
xor
cs
mov
mov
push
test
mov
cli
call
outsb
sub
pop
sbb
fdivrp
scas
cmpsb
dec
in
imul
imul
arpl
inc
and
cmpsb
addb
shll
pushl
fwait
add
rolb
sub
out
dec
mov
jg
mov
andb
gs
loop
inc
mov
int3
mov
adc
adc
sbb
es
hlt
and
call
pop
in
cmpsb
mov
lods
mov
sbb
push
add
out
xchg
arpl
nop
sub
adc
aaa
hlt
sub
addr16
adc
aam
insb
lods
ficoms
in
sti
pop
xor
fldcw
lret
out
loope
lock
pop
mov
mov
push
and
add
in
xchg
gs
cmp
lods
jne
je
loop
xchg
stc
mov
fistpl
mov
mov
mov
push
and
pop
aad
sbb
push
sbb
cmp
jo
int
jbe
jne
shrb
mov
or
inc
adcb
rcr
pushf
decb
push
dec
test
add
jge
cmpsl
rol
cltd
jg
cmp
loope
cmc
xchg
mov
bound
push
dec
mov
mov
rclb
stos
test
je
inc
cmp
mov
and
push
popl
push
cmp
popa
sbb
into
int
inc
jp
xor
dec
sti
mov
cltd
push
jbe
adc
lds
sub
push
push
mov
or
push
push
test
and
popf
sbb
cmp
daa
dec
and
add
lret
mov
lcall
out
in
std
inc
mov
sarb
xchg
lock
or
mov
add
xchg
push
cmp
out
push
jne
clc
or
popl
call
mov
setb
fdivs
sub
arpl
sub
iret
xchg
stc
fwait
jbe
cli
mov
call
icebp
mov
mov
jb
xor
mov
orb
loopne
fwait
lcall
sub
jno
mov
shrb
push
out
aam
jecxz
popa
repnz
push
pop
cmp
dec
std
cltd
and
mov
dec
mov
decb
sbb
repz
repz
out
movsl
fisubrs
dec
insl
in
and
jmp
jle
addr16
rcrl
mulb
fldt
cwtl
fisubs
movsl
idiv
and
add
push
pop
testl
xor
mov
pop
adc
lret
mov
add
imull
dec
fstpl
imul
jb
mov
jmp
inc
scas
test
add
ret
stos
or
pop
roll
inc
push
mov
pop
mov
out
add
dec
js
lahf
xchg
dec
test
pop
in
cmc
in
cwtl
ds
test
fidivrl
add
subl
cs
aad
mov
enter
ds
xchg
movsb
ret
ja
pop
or
or
push
jge
xlat
outsl
jle
in
lock
or
sbb
sub
adc
and
xchg
out
xchg
add
cmpsl
lahf
shrl
shll
lcall
sbb
outsb
movsb
and
or
leave
sbb
aad
fildl
push
ja
jle
sbb
xchg
fcmovnbe
adc
sub
jg
push
ss
dec
sbb
gs
aaa
mov
xor
xor
mov
stos
shlb
push
add
test
xor
leave
xchg
and
aam
jns
out
addr16
mov
fdiv
add
xlat
test
mov
jb
push
clc
inc
int3
roll
mov
aad
dec
pop
adc
lret
dec
xor
stc
dec
xor
sahf
mov
ret
push
and
fsubp
gs
out
push
ss
cwtl
cltd
sbb
push
addr16
je
lds
mov
jnp
subb
xlat
jmp
push
mov
lock
rclb
and
pusha
loop
pusha
lea
xlat
mov
or
in
adc
repnz
xor
jo
out
jno
or
and
xchg
lret
sbb
pusha
shrl
inc
dec
popa
push
addb
jno
add
jbe
sub
shl
add
negb
sub
arpl
push
xchg
inc
jbe
fcmove
jns
push
add
in
pop
outsl
rclb
pop
mov
add
push
mov
sahf
push
gs
push
lahf
push
cmpsb
pop
and
sbb
aas
mov
loope
xor
xchg
movsl
mov
scas
das
cmp
les
pusha
push
mov
mov
outsb
loop
fsubs
orb
mov
and
and
out
mov
scas
notl
push
jns
in
insl
sbb
mov
fcmovnb
jns
mov
lock
fbld
movsb
je
lahf
mov
ficoml
ret
cwtl
inc
mov
imul
sbb
inc
dec
movsb
cmpsb
mov
loopne
ja
jp
sbb
sbb
jle
cs
xchg
inc
and
adc
pop
ja
fs
xor
ja
lds
sub
stos
cmpsb
push
mov
aam
jecxz
adc
insl
es
inc
cmpsl
sbb
push
into
mov
rcl
pusha
loopne
push
test
mov
fidivs
xchg
push
fidivrl
gs
cwtl
push
jns
pop
or
sbb
jge
lds
push
sbb
mov
hlt
mov
mov
bound
arpl
dec
fwait
out
loop
loop
inc
cld
sub
mov
incb
inc
adc
sub
mov
insl
and
or
aaa
aaa
jae
sbb
xchg
gs
pop
in
and
jl
outsb
stos
stos
mov
jne
int
test
test
jecxz
in
cwtl
jg,pt
movsb
add
out
mov
je
push
sti
movsl
push
into
stc
xchg
sbb
in
hlt
mov
popf
mov
and
push
ljmp
daa
shlb
lock
ja
pop
pop
iret
je
das
cmc
mov
rclb
push
loopne
scas
xchg
lods
lods
push
jne
lret
mov
xchg
jl
ret
loop
pop
test
insb
adc
cmp
jno
mov
jb
jmp
mov
xor
pop
lahf
or
lods
or
push
jl
popl
and
mov
cli
push
out
cwtl
mov
mov
repnz
repz
push
and
mov
fwait
add
inc
fidivl
inc
add
mov
xor
cmovle
fmul
sbb
pop
adc
sbbb
je
inc
sbb
pusha
adc
xor
insb
into
dec
push
inc
adc
sar
test
subb
jecxz
stos
aas
and
xchg
lock
pop
loope
sbb
pusha
inc
inc
xchg
mov
bound
or
pop
push
push
push
or
test
sbb
faddl
or
dec
lods
lock
xchg
xchg
mov
adc
movsl
ret
mov
add
out
jbe
arpl
xor
scas
dec
push
stos
jle
push
push
mov
mov
bswap
jmp
fdivr
push
insl
std
sub
mov
xchg
lahf
ret
pop
mov
cmp
hlt
clc
lret
sub
lods
cmp
in
and
adc
xchg
cmpb
out
dec
in
cmpsl
aad
lock
pop
inc
hlt
mulb
ss
shll
jge
mov
or
jno
sub
out
sub
sbb
aam
leave
stos
jo
add
mov
icebp
jns
in
mov
adc
jb
fdivs
mov
inc
or
xor
cmp
pusha
push
sbb
cmc
pop
inc
xchg
xor
aaa
adc
in
mov
insl
inc
pusha
dec
jbe
ss
shll
test
inc
inc
cmc
pop
jns
fadds
lret
jmp
out
pop
pop
leave
imul
jmp
rcrl
cltd
mov
adc
cmpsb
xchg
std
push
mov
adc
inc
and
add
jno
imul
cmp
sbb
lcall
inc
pusha
pop
or
mov
sub
ret
cmp
jb
and
xor
sahf
inc
leave
xor
pop
fisttps
add
repz
shll
stos
pop
inc
mov
leave
inc
mov
or
test
cltd
out
mov
in
cmpsl
push
mov
repnz
lods
lods
mov
in
or
and
mov
mov
mov
lods
push
pop
jbe
add
adc
daa
and
pop
pop
sbb
cmc
cld
in
xor
push
inc
xor
fistl
cmc
in
imul
push
inc
out
add
push
sbb
into
inc
push
adc
pop
push
hlt
cld
popf
in
mov
adc
icebp
leave
into
rcrb
or
data16
cmp
xchg
adc
mov
aas
in
cltd
or
mov
in
cld
sbb
push
cmp
add
pop
clc
push
add
fwait
in
push
imul
shlb
das
sub
xchg
sbb
mov
gs
fnstcw
push
das
repz
mov
mov
rcrb
cmp
cld
dec
xor
cmc
and
pop
mov
mov
arpl
adc
mov
es
into
popa
jnp
sbb
jo
sub
mov
cwtl
adc
jbe
out
aad
fsts
lods
mov
jmp
mov
movsb
stos
lahf
mov
sarl
in
lea
cmpsl
pop
jp
inc
jne
sub
mov
xor
dec
push
mov
mov
push
inc
outsl
nop
arpl
or
scas
lret
adc
inc
cwtl
cmp
cmp
push
inc
cmp
test
out
adc
push
push
test
test
sub
add
pop
jmp
aad
xor
xchg
adc
loopne
stc
xlat
push
push
dec
scas
data16
push
sub
jo
jle
test
sbb
andb
xlat
cmpsb
test
sbb
xor
inc
out
jg
jmp
rcl
aam
dec
or
lds
outsl
jp
sub
lcall
push
adc
xchg
rcrl
mov
lds
fimuls
xor
loop
dec
dec
stc
jg
mov
call
inc
and
adc
push
repz
pop
inc
mov
sub
loop
cli
pop
cmp
sbb
movsb
mov
dec
sub
cmp
pop
xor
mov
movsb
scas
daa
leave
outsl
sub
cmp
roll
xchg
jne
or
dec
adc
jb
push
out
orb
sub
xor
and
movsb
test
pop
int
adc
lds
push
push
test
mov
fsubs
ds
add
testb
je
insb
xchg
test
jnp
test
pusha
and
arpl
mov
and
cmp
shll
mov
repnz
orl
mov
or
sub
movsl
js
mull
jnp
out
int
and
je
sbb
push
stc
call
fidivrs
fldt
jecxz
push
pop
add
stos
mov
inc
adc
lret
fwait
sahf
ret
sub
nop
dec
xor
cmp
es
daa
mov
idivb
xor
dec
add
rcr
xchg
cltd
xor
repnz
push
pop
shll
dec
xor
aam
xchg
jg
sbb
out
pop
mov
les
cmpsl
inc
lods
repz
dec
imul
pop
ds
pop
repz
xor
cltd
int3
popa
loopne
cmc
jae
cltd
adc
and
sbb
pop
fwait
lret
mov
fbstp
stc
add
in
dec
cld
pusha
mov
mov
inc
xor
adc
les
mov
divl
shlb
push
scas
in
xchg
push
push
dec
cmp
xchg
hlt
cmp
or
fs
cs
xacquire
xorl
and
lea
dec
shlb
dec
fbld
mov
or
int3
frstor
adc
mov
mov
adc
negb
in
aas
stos
out
pop
ss
mov
int3
push
mov
push
scas
inc
mov
outsb
insb
mov
mov
rolb
dec
cs
std
aaa
cmc
adc
loopne
cmp
and
dec
xor
call
inc
or
scas
fldenv
xlat
pop
pop
mov
jg
inc
cmp
out
mov
sbb
or
add
pop
sub
fs
jge
fwait
out
xchg
fcoml
loop
or
add
jecxz
sbb
les
bound
or
adc
popa
push
shll
or
movsb
in
fs
jns
push
mov
pop
jg
xrelease
xchg
leave
push
and
mov
push
dec
or
and
lcall
gs
leave
arpl
push
aam
test
sub
add
jmp
push
pop
or
fcomi
orl
and
cmc
ret
mov
jo
dec
cltd
lods
pop
and
pop
cmp
movsl
mov
repnz
jbe
push
fnstsw
fwait
sti
sub
dec
fiadds
out
push
rcrl
test
mov
es
inc
out
js
sbb
lods
ds
loopne
adc
jecxz
jg
enter
sbb
les
xor
lahf
dec
and
jae
sbb
xchg
daa
cs
das
aas
or
rcl
pushf
or
fwait
xchg
cmp
add
push
and
sbb
inc
test
mov
popa
das
sbb
outsb
test
mov
mov
add
popa
xchg
stc
sbb
jecxz
cmpb
scas
aaa
adc
jbe
fstps
incl
inc
fnstsw
sbb
out
sbb
inc
lcall
rorl
loope
dec
rolb
mov
ret
xor
sbb
mul
dec
push
add
xchg
iret
dec
neg
pushf
outsl
mov
cmp
fs
cmp
sub
pop
ret
or
arpl
mov
sub
cmpsb
sbb
movsl
jae
aas
add
out
mov
lret
cmp
inc
dec
mov
jae
jg
jo
push
cmp
data16
int3
repnz
call
jge
mov
cmc
mov
mov
pusha
scas
fwait
and
stc
insb
cwtl
adc
je
faddp
scas
inc
sbb
push
jl
fidivrs
das
or
push
popf
xchg
stc
int3
jnp
pop
icebp
gs
nop
dec
xchg
push
push
inc
cmp
repz
jne
sbb
imul
inc
inc
push
xchg
inc
pop
int
mov
mov
mov
or
mov
and
adc
mov
std
and
adc
inc
xchg
dec
dec
cmc
pop
cltd
pop
repz
inc
sbb
cmpsl
xlat
rolb
mov
daa
outsb
xorb
or
push
lcall
sti
xor
dec
dec
cmpb
mov
xchg
ret
pop
mov
rolb
iret
pop
ficoml
adc
jbe
push
je
addr16
repz
sbb
xchg
sub
ret
dec
test
lea
lahf
nop
jno
mov
inc
jnp
adc
xor
jmp
dec
fstl
les
out
xchg
lcall
xor
adc
inc
mov
pop
pop
pop
push
mov
sbb
adc
shrb
stos
lret
jb
and
insl
stos
adc
int
lret
cmpsl
xorl
imul
push
insb
sarl
and
insb
insb
mov
int3
push
sub
ja
mov
pop
pop
stos
cmpsb
or
outsb
test
adc
pop
stc
bound
and
in
and
cmpb
jb
scas
xchg
dec
arpl
ret
pop
jmp
sbb
out
push
call
mov
sub
out
not
clc
aaa
xor
mov
push
pop
jg
call
int
dec
lahf
jnp
sti
push
dec
push
pop
cmp
jmp
mov
sub
out
insb
mov
push
insl
mov
inc
add
rep
loop
scas
popa
icebp
mov
mov
call
insb
stos
aas
sub
pop
outsb
or
rcrl
lcall
in
or
mov
jbe
daa
repnz
in
aam
andl
cmp
lret
sub
hlt
sbb
cmpsb
xlat
std
fistps
ljmp
add
mov
jns
push
arpl
loopne
repnz
lcall
aam
xchg
jg
mov
gs
loope
jmp
mov
inc
cwtl
jno
mov
push
fisubrs
adc
fcoml
xchg
dec
mov
mov
jno
dec
popa
iret
pop
mov
xchg
jg
push
nop
lock
adc
sub
pop
push
ret
roll
jnp
arpl
sbb
rcrl
divl
rorb
inc
push
push
jae
lcall
mov
movsl
sub
mov
jg
decb
clc
pop
ret
mov
inc
dec
andb
enter
dec
push
dec
inc
pop
repz
into
addr16
iret
sub
sti
subb
dec
loopne
fs
arpl
pushf
xlat
pop
testb
mov
in
int3
pop
cmp
ret
data16
stos
or
pop
pop
pop
out
mov
jbe
jg
sbb
sub
stos
sub
pop
fsubr
push
lret
dec
cmp
insb
cltd
adc
and
push
stos
dec
push
lods
or
or
push
dec
dec
sub
sbb
psubsb
int3
cli
sbb
sub
xchg
fcompl
int
xchg
out
fs
data16
loope
pop
scas
mov
push
ja
sub
loopne
and
jg
sbb
pop
aas
push
push
jns
pop
fwait
push
push
cltd
scas
push
jne
pushf
inc
adc
ffreep
adc
pusha
sbb
xor
ffree
adc
mull
popa
insb
jg
testl
push
cld
push
add
mov
add
insl
iret
rcll
js
into
int
push
sbb
and
inc
cmp
mov
dec
add
mov
subl
inc
mov
bound
js
in
lods
fs
ds
cmp
pop
jle
sbb
jbe
cltd
mov
insb
test
xchg
push
cmp
sub
decb
test
fdivrl
mov
mov
and
cmp
dec
shll
xchg
sahf
imull
pop
ret
popa
aas
mov
scas
sub
sahf
pop
jecxz
gs
dec
daa
sti
lret
scas
lret
sbb
enter
xlat
or
sbb
sbbl
mov
jecxz
rolb
mov
das
pop
fisubrs
bswap
xchg
mov
xchg
adc
ljmp
into
pop
pop
jmp
jae
insl
add
stos
inc
clc
std
xchg
fildll
pop
push
jno
aam
mov
jnp
aaa
mov
movsb
negl
out
and
outsl
ja
out
test
hlt
jnp
inc
jg
fisubl
leave
push
inc
dec
inc
mov
adc
jb
or
cmpsb
push
lock
and
jge
iret
ficoms
cltd
iret
fmull
and
xor
xor
jbe
fisubrl
inc
xlat
loope
mov
std
xchg
cli
pop
or
ds
dec
jge
fisttpll
addb
push
mov
sub
mov
int3
rolb
js
ljmp
cld
fs
mov
fsubl
jmp
fstpt
cmp
cmp
repz
inc
xchg
jle
shll
jbe
xor
ret
repnz
repz
andb
mov
push
mov
xlat
lea
dec
xor
test
or
jno
data16
ss
xchg
cltd
mov
pop
mov
cmp
addb
xor
and
jmp
pop
sbb
jecxz
jecxz
adc
sbb
or
push
lcall
and
dec
pushf
cs
xchg
jge
std
lock
sbb
inc
mov
push
xchg
subl
add
inc
xlat
push
adc
inc
push
and
jae
dec
cwtl
or
ret
popf
cmp
xor
mov
mov
jae
inc
or
call
aad
bound
jae
insl
in
xchg
in
repz
repz
adc
mov
popa
add
pop
or
or
ss
dec
push
xchg
movsb
out
xchg
fcoml
imul
dec
rorb
dec
dec
adc
mov
sub
cltd
inc
pop
xchg
mov
ss
pop
jbe
adc
add
pop
in
mov
mov
je
cmp
and
insl
mov
push
clc
jbe
iret
add
dec
mov
sbb
ja
lods
std
daa
mov
insl
adc
mov
inc
lds
and
cld
decb
popf
div
lock
stos
pop
jbe
mov
mov
jno
jp
adc
les
xor
pop
js
sbb
sbb
pushf
xor
push
jbe
jmp
mov
add
inc
inc
sahf
adc
push
mov
aas
shl
jb
or
lods
pop
xchg
cmp
jp
pop
cmp
add
pop
cltd
aad
mov
int3
test
sub
cli
push
add
nop
jle
fsubr
mov
mov
sbbl
std
add
insl
push
or
lds
repnz
push
out
lret
fadd
in
jl
ret
mov
cmp
scas
adc
or
adc
test
jns
imul
ret
jbe
outsb
inc
dec
popa
mov
lds
xchg
imul
fnstsw
inc
add
ljmp
or
jnp
inc
movsl
cld
mov
sub
cmpsb
inc
into
scas
cwtl
mov
xorl
jno
mov
jp
sub
cmp
jno
cmpsl
mov
call
xorl
sti
addb
hlt
mov
mov
lret
sbb
pushf
ss
jae
sbb
scas
popl
outsl
sbb
push
das
dec
sbb
pop
xchg
test
in
rol
stos
push
or
mov
mul
les
sbb
adc
xor
sbb
stos
enter
sbb
inc
ds
xor
leave
inc
or
icebp
pop
aas
pop
fs
test
pop
sbb
arpl
mov
jae
ret
xor
sbb
push
mov
mov
dec
inc
fucomi
mov
push
or
insb
addb
or
jns
mov
in
sbb
adc
pushf
pmuludq
pop
mov
sub
jbe
cwtl
inc
pusha
es
outsl
mov
jle
addr16
push
and
pop
fisttpll
in
xor
push
fldl2e
mov
and
sbb
scas
rep
scas
push
mov
lock
ja
lods
ss
cmp
add
ret
rcr
pushl
lret
lret
clc
imul
pop
dec
jns
ret
fdivrl
test
xchg
popa
adc
xor
std
and
and
ret
and
mov
push
fcmovbe
ret
push
shlb
mov
cld
out
pusha
xorb
testb
aad
enter
ror
repz
and
enter
mov
nop
xor
lods
ds
fiaddl
dec
fdivrs
jmp
loopne
ffreep
adc
xchg
outsl
and
dec
lock
push
xor
leave
and
ficompl
xchg
inc
pop
push
push
adc
pop
and
lret
dec
movsl
xlat
sahf
inc
jbe
scas
addr16
mov
call
je
push
or
scas
pop
pop
test
or
dec
pop
jle
lock
test
push
insl
clc
or
xchg
sti
mov
pusha
push
out
sarl
addl
jbe
or
lret
test
lret
jp
jge
outsb
imul
add
idivb
lret
mov
xchg
push
lcall
les
add
jae
pop
mov
loope
mov
shl
lret
push
aam
mov
or
mov
outsl
ja
sar
je
sub
insl
pusha
adc
enter
push
or
data16
sub
call
loop
out
push
inc
push
sbb
inc
lds
inc
push
dec
dec
es
ss
add
int
loope
dec
push
inc
fs
xchg
loopne
std
jo
adc
and
push
sbb
dec
ror
in
mulb
xchg
pop
roll
lret
loopne
sbbl
mov
jmp
dec
iret
in
jl
dec
lahf
pusha
sub
shrl
cmpsb
loope
sub
aam
mov
pop
pop
and
cwtl
sti
cld
jb
repz
in
and
divl
mov
push
push
cwtl
roll
cmp
mov
and
comiss
pop
insb
cwtl
sub
cli
cli
lock
test
enter
mov
jmp
lock
imul
inc
sbb
pop
cs
xor
fmull
cmpsb
pop
jmp
pop
sarl
sbb
dec
push
inc
adc
dec
jnp
pushf
cmp
sbb
inc
fs
fnsave
enter
pop
sbb
sbb
lret
pop
cld
leave
stos
je
lret
mov
push
daa
mov
cmp
pop
jo
adc
pop
push
aad
pusha
dec
sub
push
fstl
clc
jbe
mov
add
mov
cmpsb
mov
lahf
mov
inc
pop
mov
or
addr16
add
loopne
adc
das
xchg
mov
add
pop
jo
pusha
push
cli
insl
pop
or
in
and
loope
jne
pop
adc
push
pushf
nop
dec
dec
mov
xlat
out
iret
mov
out
test
lea
lods
imul
cmp
into
dec
lahf
sbb
push
into
mov
cmp
mov
addr16
sti
test
rorl
cs
mov
dec
lods
ds
add
pop
rorb
lods
lret
ret
xor
outsl
aaa
int
mov
push
out
mov
in
rorb
xchg
pop
leave
inc
into
dec
fdivrl
pop
mov
mov
dec
xchg
add
outsb
mov
jle
pop
testl
inc
pop
popa
popa
ds
mov
popf
adc
cmpb
int
mov
and
jae
scas
ror
fcmovnu
inc
or
int3
cmpsl
inc
xchg
js
mov
test
mov
in
mov
or
push
dec
dec
shll
mov
push
xor
push
adc
icebp
dec
xor
sub
inc
sbb
pop
fstps
mov
xor
jne
jnp
inc
imul
sub
sbb
mov
andb
loope
xchg
aas
or
lods
or
std
out
push
add
jl
enter
ss
sub
sarl
push
pop
sbb
mov
aas
and
leave
loop
mov
stos
dec
out
lods
jg
fwait
push
test
push
mov
stc
clc
push
cmc
push
orl
insl
stos
mov
jno
mov
clc
leave
inc
dec
dec
sub
or
loop
mov
mov
ds
insl
sbb
jecxz
aam
dec
or
inc
lods
dec
pushf
aaa
cli
push
pop
lret
out
inc
add
and
ret
test
mov
dec
fstp
insl
into
aas
divb
pop
loop
jle
pushf
and
lock
pop
mov
mov
mov
fld1
cld
mov
into
cwtl
xor
lock
inc
loope
dec
jne
je
pop
jns
call
sub
and
add
out
nop
sbb
sbb
je
out
push
inc
cld
sarb
sub
dec
mov
mov
addr16
mov
pop
xchg
or
imul
and
jl
mov
inc
xor
push
hlt
jp
cmp
pop
fwait
pop
popf
inc
or
pop
xchg
bound
fsubrs
sub
lahf
jp
inc
shll
outsb
popf
out
fwait
or
mov
xchg
pushf
out
out
push
push
xchg
sub
pop
bound
in
xor
push
add
lret
sub
mov
cmp
xchg
es
cwtl
int
fiaddl
mov
or
mov
mov
fwait
popf
addr16
repnz
push
shlb
mov
mov
pushf
lahf
sbb
daa
inc
sub
popf
loope
ljmp
jg
and
enter
sbb
pop
lret
sub
cmp
bndldx
jg
lcall
stc
inc
insb
xchg
into
ror
clc
inc
in
push
std
mov
sbb
xlat
inc
push
loop
pop
adc
sbb
in
fsubrl
and
movl
xchg
call
jo
sbb
xchg
fidivs
sub
daa
in
xor
data16
fistpll
nop
dec
dec
bound
aad
cmp
movsb
rcl
fstpt
mov
out
mov
roll
loop
inc
ret
aad
sbb
into
das
pushf
sbb
das
negl
mov
jb
cmp
xor
lahf
jne
cmp
inc
lods
outsl
aam
ja
jae
icebp
sti
into
repnz
pop
sbb
orl
jne
lcall
int3
frstor
adc
pop
in
jl
sbb
aam
decb
sub
das
insl
popf
pop
mov
popa
inc
test
xor
sarl
sub
or
pop
mov
mov
push
into
movsb
scas
imul
stc
adc
push
sti
lods
pop
jecxz
insl
jmp
call
pop
mov
or
mov
out
push
jge
je
mov
call
shl
adc
mov
popf
gs
out
bound
js
scas
dec
fimull
xlat
jp
int
ljmp
daa
nop
push
in
rcrb
pop
jl
jmp
push
test
jmp
or
repnz
jne
inc
jo
movl
sbb
aaa
xchg
loopne
and
cs
mov
or
stos
or
add
xchg
in
push
xchg
dec
icebp
and
mov
mov
mov
imul
icebp
xorb
add
nop
mov
xlat
xor
out
in
add
rolb
call
xlat
jg
xchg
ss
dec
rcrl
xor
into
dec
and
ljmp
out
ds
mov
decl
ljmp
inc
je
add
pop
sbbl
hlt
sub
jmp
push
loopne
imul
push
ljmp
xor
dec
dec
inc
std
mov
xor
repz
roll
inc
and
xchg
fs
testl
sub
bound
xor
sub
adc
xchg
mov
jnp
inc
dec
pop
dec
mov
xchg
mov
lea
or
in
fists
out
int
jecxz
ret
push
movsl
in
xor
sbbl
int3
orl
movsl
inc
ret
icebp
ds
shrl
lret
les
mov
mov
adc
ret
xor
leave
je
out
adc
pop
jl
leave
xor
jns
xchg
call
or
popa
and
jmp
jae
push
or
inc
sub
jmp
pop
jge
inc
lds
pop
and
xchg
loopne
adc
lds
dec
pop
mov
in
pop
add
sub
loop
inc
imul
push
dec
pop
inc
sbb
and
fidivrl
fistpl
out
mov
inc
lods
xlat
sbb
sahf
xlat
or
popf
or
xchg
enter
xchg
xor
sub
xchg
push
lret
into
divb
sbb
in
out
stc
adc
lret
dec
adc
jno
sahf
fs
or
pop
sti
jp
scas
cwtl
jg,pt
fwait
xor
gs
test
mov
aam
clc
add
lcall
mov
add
mov
sarb
adc
mov
cmc
int
repnz
push
add
addr16
mov
fnstenv
dec
aam
fucomp
pop
xor
push
xor
or
push
xor
enter
mov
or
aaa
das
cwtl
push
insl
xchg
jb
xor
pop
lcall
push
adc
loope
pop
out
pop
jmp
inc
inc
add
mov
jae
arpl
popf
or
cwtl
mov
sbb
mov
hlt
push
int
adc
cld
rcrb
xor
js
pop
enter
psubw
xchg
sbb
or
mov
daa
sbb
out
xchg
or
push
dec
xadd
popa
inc
mov
lea
out
pop
bound
call
ds
lods
xchg
int
in
and
cwtl
les
push
jg
mov
sub
cmovno
into
insb
movsb
bound
pushf
add
jo
int3
int3
inc
shr
lock
aad
fwait
rorl
and
inc
sahf
jecxz
xlat
lods
push
stc
push
cmp
mov
daa
mov
aas
add
leave
in
outsl
inc
aaa
nop
lods
xor
and
pop
pop
lret
sbb
movsl
inc
outsb
scas
dec
inc
mov
mov
int
mov
and
insb
mov
aam
jmp
jnp
dec
movsb
push
std
nop
ljmp
cmp
xor
movsb
xchg
or
rcl
pop
xchg
scas
sbb
xor
jne
in
sti
push
and
shrl
push
mov
mov
jne
popa
xchg
jae
push
dec
jp
bound
mov
movsl
hlt
movsb
rorl
cmp
adc
cmpsl
stos
cmp
mov
loop
mov
and
mov
fs
out
or
or
mov
xor
sub
lods
pop
jmp
out
pop
mov
outsb
mov
and
lret
repnz
or
inc
hlt
ja
ret
test
addr16
sbb
ljmp
push
mov
sahf
push
adc
mov
dec
xor
ror
shll
jecxz
dec
int
aas
jge
jno
movsb
mov
inc
xor
jae
ljmp
jbe
fdiv
mov
popa
into
sbb
push
jae
mov
pushf
popf
jge
dec
fbld
test
adc
lods
test
and
fdivs
mov
idivb
jo
sub
inc
sbb
cltd
jg
inc
pop
stc
clc
pusha
mov
jnp
loopne
push
dec
dec
jg
or
or
pop
adc
push
xor
xchg
mul
dec
add
xchg
push
iret
or
pop
cmp
sbb
jp
push
xchg
mov
sbb
es
sarl
or
sbbb
xor
pop
xchg
cmp
push
pop
ds
aam
jne
and
pop
mov
jae
push
adc
fisubrs
adc
jle
imul
jmp
xlat
xchg
push
ret
pop
or
add
mov
movsb
mov
ss
loop
jne
cld
jbe
outsb
test
cmp
add
or
adc
loopne
pusha
in
in
sahf
jecxz
add
dec
cmp
xor
int
in
das
clc
addb
out
inc
dec
push
xor
pop
mov
pop
test
push
and
lods
cli
adc
pop
std
mov
mov
dec
mov
lahf
jnp
fistps
test
xor
xor
scas
cmp
fs
push
and
xor
push
in
movsb
mov
add
out
sbb
fdivrs
push
popw
andb
loop
in
in
pop
add
cmp
push
fucom
cmp
stc
or
mov
mov
and
int
and
mov
jbe
pop
xchg
jbe
rorb
sbb
add
adc
or
or
sub
cmp
repz
daa
scas
lds
fdivl
push
xor
push
aam
decb
loope
leave
shlb
push
xchg
cmp
hlt
addr16
push
or
mov
push
outsb
aam
mov
jle
aaa
xchg
xchg
aaa
inc
jnp
cltd
jbe
sbb
hlt
mov
call
push
mov
sti
mov
das
push
test
jecxz
push
int3
inc
leave
lds
testl
jge
roll
jbe
daa
xchg
sub
dec
mov
dec
mov
movsl
and
sbb
sub
pop
fwait
mov
mov
jmp
test
les
lock
xchg
cmp
es
adc
popf
mov
or
test
outsb
sbb
mov
jns
in
sub
add
pop
dec
insb
mov
out
jne
dec
xchg
mov
ficoml
divl
mov
or
sub
inc
push
inc
daa
dec
outsl
pop
and
fistps
pop
jno
shr
or
popf
add
dec
cmp
cmp
dec
xchg
xor
ds
cmp
jmp
cmp
call
arpl
pop
jae
dec
iret
mov
push
sub
leave
adc
xlat
popa
pop
jp
shrl
jle
inc
lcall
sub
inc
out
mov
xchg
mov
das
es
jg
leave
fisttpl
jp
stc
pop
adc
push
jne
rclb
dec
ret
jmp
push
insb
push
mov
int3
sbb
xchg
ret
jecxz
sti
fdivrs
in
xchg
push
xor
cmp
sub
xchg
imul
or
and
add
stos
aad
mov
pop
jae
mov
xor
fistpll
shl
int
sbb
ds
jnp
out
jns
cmp
aaa
enter
popf
outsb
jbe
inc
jg
ret
fnstsw
ja
movsl
movsl
fwait
test
lds
test
test
xor
push
iret
in
and
pop
cmp
stos
mov
jl
cmp
test
dec
xchg
test
loopne
or
pop
lret
push
dec
xor
cmp
mov
xchg
sbb
xchg
sbb
neg
decb
loopne
jecxz
sti
in
repz
aas
push
cmp
dec
sbb
pop
mov
mov
std
in
sub
clc
cltd
pushf
jne
iret
mov
mov
scas
pop
mov
sti
cli
test
push
je
or
loope,pt
jo
jmp
movsl
fiadds
mov
shr
mov
cs
jns
pop
sbb
push
pop
cmp
jbe
xchg
sbb
jno
mov
incl
insl
shrb
stc
adc
cmp
sarl
andl
bound
jb
sbb
jge
mov
les
shl
icebp
iret
mov
xchg
xor
hlt
mov
ret
xor
insl
mov
test
rorl
dec
cmp
pop
fldenv
js
jo
sbb
int3
lcall
rclb
popf
dec
popa
mov
mov
cmpsl
popl
in
bound
mulb
and
lods
push
or
call
mov
test
popa
pop
cmc
imull
pmuludq
fisubrs
push
fwait
mov
pusha
push
jns
mov
push
cmp
das
cmp
ret
fistps
outsl
pushl
cmp
mov
push
loope
pop
fwait
jl
iret
scas
or
ret
mov
cmc
cmpl
sbb
jne
sub
sub
ficoms
mov
cld
and
inc
inc
cmpl
dec
inc
movsb
mov
sub
mov
fs
mov
push
sub
aad
cli
sbb
dec
jge
xchg
into
loope
mov
repz
and
sbb
fwait
notl
inc
je
adc
push
insl
lds
repnz
mov
or
inc
xchg
clc
mov
pop
adc
insb
scas
mov
pop
jecxz
xor
jbe
cmp
and
push
add
bound
popa
add
scas
and
mov
adcb
ljmp
mov
iret
xor
pop
repnz
pop
rcll
je
or
es
mov
fadd
sub
sarb
data16
test
cmp
stos
orb
cs
sbb
int3
std
mov
cwtl
sbb
in
in
out
cmpl
outsb
add
ret
dec
and
and
fistps
cmp
ret
in
fisubrl
movsl
pop
movsb
sub
and
hlt
popl
push
dec
scas
inc
jb
mov
lock
mov
out
pushf
ljmp
jl
sbb
push
jg
push
sub
test
in
insl
ficoms
mov
gs
ret
xchg
fstl
mov
in
ret
push
inc
shlb
outsl
call
pop
int
icebp
int3
sub
or
mov
ret
add
xor
cmp
stos
lahf
pusha
sub
xorl
loope
jp
lret
adc
mov
push
or
cmp
rol
sub
fimull
hlt
mov
les
pop
mov
pusha
inc
pop
sub
add
hlt
cltd
mov
adc
repnz
inc
mov
in
shll
sub
ljmp
mov
lds
pop
adc
mov
sub
cmpb
cmp
xchg
jo
sahf
mov
repnz
subl
lcall
cmp
push
lcall
int3
addr16
rol
inc
cs
lock
dec
pop
add
loopne
inc
inc
push
mov
push
lret
loope
pushfw
cli
sbb
dec
pop
aaa
into
out
in
sbb
push
sahf
cwtl
lahf
lods
aas
cs
xor
lods
outsl
dec
pop
jae
mov
lds
mov
lret
sbb
ljmp
mov
icebp
sbb
jl
mov
cmp
push
xchg
mov
shlb
cmp
mov
adc
mov
xchg
ss
popf
call
in
pop
nop
sbb
data16
cltd
xor
xchg
mov
std
notl
mov
les
data16
in
push
jecxz
shll
cli
andps
cmp
xchg
cmc
xchg
push
mov
jge
cmp
aas
pop
lret
pop
popa
leave
into
adc
notl
cmp
stos
mov
cmpsb
jp
jae
push
inc
pop
orl
sbb
cmpsb
jmp
and
in
jno
add
out
cli
sahf
dec
ljmp
mov
addr16
fnstsw
lret
loop
shr
push
cmc
lret
cmp
pop
stc
and
mov
imul
pop
mov
insl
ret
sbb
pop
ljmp
sub
jbe
inc
xor
inc
mov
roll
xchg
adc
popa
popa
cld
cmp
push
in
adc
mov
imull
lret
and
add
lcall
incl
js
push
cli
roll
jae
pop
and
data16
inc
cmp
jnp
push
icebp
mov
pop
cmp
xorl
in
push
mov
orb
arpl
inc
inc
movsl
mov
pop
and
inc
inc
or
jecxz
sbb
add
sbb
sbb
outsl
cmp
mov
dec
jg
pushf
arpl
leave
icebp
pextrw
mov
fdivp
push
jmp
dec
lods
setp
xchg
icebp
insb
jns
cld
sub
cmp
fisttps
jl
ljmp
jno
xchg
xorl
test
nop
push
int3
scas
cld
div
lds
shl
cmp
inc
mov
add
push
ja
jle
or
pop
test
mov
xchg
pop
jecxz
and
je
imull
clc
loop
mov
push
or
push
mov
call
ret
mov
xchg
orl
jb
inc
cwtl
jle
ljmp
adc
add
mov
int3
pop
je
mov
push
aas
add
sub
mov
pop
mov
xchg
iret
xchg
test
aad
or
cmpsb
add
lcall
imulb
xor
mov
push
lret
jmp
inc
ljmp
aam
mov
lahf
cmp
imul
or
stos
loop
mov
pop
lret
mov
adc
jmp
aad
mov
dec
loop
lret
xor
adc
aad
mov
xchg
jb
call
outsb
fdivl
pusha
jne
and
rcrb
xchg
iret
in
popa
je
jp
mov
dec
cmpb
sub
and
das
sbb
cld
inc
pop
dec
xchg
push
xor
xor
loop
sub
cmp
cli
pop
rep
mov
sbb
and
or
jl
jmp
popl
into
inc
add
lcall
mov
xchg
sub
jae
ret
pop
scas
rol
call
mov
xchg
out
sarl
jecxz
mov
jmp
jb
push
ret
neg
jbe
cs
adc
pop
jns
hlt
mov
inc
xchg
adc
cmp
mov
pushf
sub
nop
mov
add
test
rcll
sar
imul
inc
cmc
adc
pop
jle
jb
loop
xorb
push
mov
jle
mov
sahf
daa
ret
in
hlt
inc
xor
mov
inc
push
inc
aas
xlat
and
fucomip
shl
and
imul
or
iret
std
movsb
xchg
and
ss
cmp
fildll
pusha
jge
dec
jle
add
jbe
or
arpl
pop
mov
andb
cmp
sbb
push
xor
mov
mov
or
fwait
popf
or
fwait
xchg
test
inc
inc
cli
xchg
jl
shlb
and
imul
jae
or
rcrl
xchg
xchg
movb
sbb
xchg
cmpsb
jnp
push
mov
and
add
pop
sbb
bound
jbe
xchg
imul
push
repz
test
loop
jl
push
inc
in
or
cmp
push
push
mov
xchg
push
rclb
sub
shll
icebp
arpl
dec
pop
mov
push
sbb
push
mov
push
add
mov
call
sbb
inc
lds
push
mov
xchg
xchg
push
xchg
inc
clc
adc
add
pushf
or
push
stos
push
cmp
mov
pop
mov
lahf
sbb
jge
aam
test
dec
sub
or
sbb
xor
jae
aas
mov
sub
sbb
imul
es
sub
jp
rcrb
sbb
pop
movsl
lret
or
cmpsb
jg
pusha
push
lahf
mov
push
movsl
ret
mov
jg
sbb
mov
daa
jle
daa
xchg
push
call
dec
out
aam
pop
cli
or
les
adc
mov
push
stc
add
mov
mov
je
push
stc
lock
lods
jp
xor
lods
sub
out
xor
add
stos
xchg
in
cld
repz
popa
or
ds
jle
xchg
fisttpl
dec
shlb
in
fcoml
push
and
mov
lods
lahf
lods
xchg
scas
fwait
test
dec
mov
xor
jmp
and
jg
pop
jl
mov
movsb
xor
push
dec
pusha
sbb
mov
ret
subl
lods
jecxz
push
dec
dec
dec
mov
adc
insl
fstpt
xchg
sbb
mov
xchg
xchg
je
adc
movsb
dec
push
pop
pop
enter
das
adc
mov
jmp
push
jl
push
ret
popf
mov
push
sbb
cltd
sbb
pop
int3
sub
push
fildl
and
stos
inc
xchg
cmc
push
outsb
bound
test
sbb
sbb
add
icebp
mov
cmpsl
dec
xchg
push
ljmp
sub
cmp
mov
adc
lret
jb
insb
les
lock
shld
add
xchg
out
jle
push
xor
imul
dec
mov
sub
pop
int
out
outsb
nop
and
add
lds
inc
and
adc
out
jns
aas
jg
mov
outsb
cwtl
outsl
push
xchg
jbe
jns
xchg
dec
repnz
idiv
test
loop
sub
sub
sbb
out
inc
inc
inc
jp
pop
xor
pop
mov
test
add
insb
cld
mov
inc
push
in
or
in
mov
add
sbb
push
inc
in
outsb
inc
ljmp
roll
pop
in
repz
icebp
jne
jge
mov
lds
dec
dec
push
push
mov
out
cmp
test
mov
push
adc
ja
cmp
and
xchg
cltd
push
mov
ret
dec
lods
mov
pop
mov
inc
fiadds
or
cmp
mov
pop
into
sub
scas
xchg
mov
sbb
movsl
pop
pusha
lret
add
aad
sub
jmp
in
pusha
jne
fcoms
and
aad
sarl
cmp
xchg
inc
mov
dec
lret
imul
cmpsl
jg
test
shl
js
pusha
inc
aas
sub
sbb
icebp
adc
mov
sub
push
jp
lock
sarb
pop
test
jge
mov
pop
push
scas
arpl
in
and
mov
jns
cmpsl
sbb
sbb
sarl
adc
mov
inc
mov
xor
push
inc
xor
out
test
frstor
inc
stc
mov
dec
mov
pop
sbb
iret
adc
add
cmp
adc
rcrb
mov
mov
pop
sub
push
clc
pop
in
xchg
add
push
mov
mov
xchg
lds
xchg
fildl
scas
idivl
mov
fmul
xor
mov
outsb
xchg
pop
orb
push
mov
pop
jmp
mov
fmuls
movsb
scas
fucomp
es
mov
sahf
xlat
ficomps
xchg
inc
sarl
jmp
add
movsb
test
jo
cmp
mov
movsb
or
push
iret
cwtl
dec
and
xchg
in
js
mov
cmc
pop
fcmovb
cmc
in
lods
loope
mov
roll
xchg
cmpsb
mov
cld
mov
movsb
mov
dec
and
pushl
push
xchg
ss
sbb
pop
jg
cld
js
cmpsl
jg
push
dec
lds
sbb
sarl
adc
sub
dec
test
sbb
and
js
inc
push
pop
stos
add
mov
push
imul
out
cmc
out
cmp
mov
out
xor
jb
aas
movsl
pop
jae
sahf
stc
mov
and
loope
inc
imul
mov
adc
data16
adc
xor
orb
inc
fs
scas
sub
daa
test
mov
int
lcall
push
adc
insl
scas
sbb
repz
xchg
cmp
scas
xor
push
andb
imul
inc
cld
movsl
pop
jae
pop
and
sti
movsb
adc
pop
jmp
ljmpw
loopne
subb
ds
movsl
dec
mov
cmp
or
pop
mov
mov
adc
mov
pop
aaa
stc
sbb
mov
push
arpl
sbbl
mov
out
decl
cltd
aaa
iret
xchg
bound
mov
pop
rcr
fs
pop
xor
inc
mov
cwtl
mov
fistpl
jp
push
popf
adc
scas
test
in
dec
shr
jns
in
pop
inc
fistl
sahf
mov
gs
cltd
repz
lds
mov
sbb
push
xchg
mov
inc
scas
add
lahf
lods
inc
lods
pop
jl
mov
lock
xchg
mov
mov
add
xchg
out
test
cmpb
lcall
stc
icebp
push
and
cld
ds
add
mov
sahf
gs
cs
pop
adc
xor
adc
icebp
aas
lcall
mov
rcr
jge
add
mov
sahf
adc
cld
adc
push
and
bound
push
mov
nop
ss
lret
xchg
into
adc
je
lret
xor
lcall
int
push
data16
insl
jbe
mov
jg
movsb
in
ret
dec
leave
dec
xlat
aas
xchg
dec
cld
nop
ds
jnp
clc
mov
rolb
inc
daa
daa
mov
loopne
jg
jecxz
jle
stc
inc
jge
lods
popa
ja
pop
dec
jl
fisubs
ror
mov
pop
aaa
jge
shlb
mov
dec
sbb
mul
push
and
addr16
loop
inc
or
daa
test
rep
es
divl
pop
insl
pop
mov
mov
lock
and
jns
filds
das
mov
out
push
add
mov
or
in
jl
xchg
sub
or
lea
popf
mov
add
jecxz
shll
xor
xor
or
fisubrl
ret
bt
imul
pop
mov
mov
add
or
fst
in
into
cmp
push
xchg
and
ret
std
adc
into
rorb
int
mov
push
add
iret
sbb
dec
xor
cltd
bnd
cmp
mov
mov
out
mov
stos
push
jne
fildll
adc
xchg
fcomip
rol
shll
or
rcrb
adc
pushf
iret
lret
test
sbb
dec
pop
insl
inc
cmp
mov
xchg
mov
les
push
add
imul
fcompp
ss
daa
sub
cmc
cmp
popl
cmp
addr16
imul
inc
inc
filds
insb
mov
stos
xchg
push
leave
movq
clc
or
out
jl
pop
dec
fdivp
inc
sbb
loope
push
movsl
push
cwtl
pusha
dec
pop
imul
mov
lahf
push
sub
scas
outsl
push
mov
or
dec
cli
xor
jne
pop
insb
sub
filds
push
cmp
out
mov
xlat
sub
mov
jecxz
xor
outsb
inc
repz
movsl
jnp
mov
bound
lret
loop
gs
push
pop
std
xchg
pop
outsb
je
inc
inc
ja
notl
sub
cmpsb
sbb
adc
xor
adc
cmpb
sub
and
mov
sti
enter
ret
jb
xchg
dec
and
inc
outsl
pop
into
mov
mov
es
popf
mov
out
push
sub
jl
ljmp
mov
ret
inc
mov
mov
mov
push
push
es
xor
sub
push
orb
sbb
add
or
push
fisubl
mov
hlt
mov
or
lods
adc
mov
ret
inc
jb
gs
push
int
push
push
mov
cs
add
cmpsb
mov
jmp
xchg
adc
xchg
sbb
fcmovbe
push
inc
int3
pushf
cli
mov
sub
in
mov
out
mov
sbb
fwait
pop
jp
and
sub
and
loopne
into
push
adc
fmull
fnstsw
stos
and
xchg
repz
sbb
xchg
aas
xchg
xchg
cld
imul
in
mov
cmpsl
xchg
or
dec
rcrb
dec
ret
sbb
mov
pop
push
loope
mov
fistps
inc
xchg
add
sbb
lods
jle
push
test
out
push
jg
xchg
lea
jb
or
jae
push
or
lods
data16
jae
xchg
xchg
xlat
jg
pop
out
inc
adc
mov
dec
aam
and
hlt
lgs
fs
push
iret
mov
js
inc
sub
mov
or
jl
les
add
test
sarl
mov
dec
mov
inc
out
insb
imul
or
in
daa
mov
into
sbb
outsl
ret
adc
stc
int
add
pop
mov
dec
inc
enter
jae
js
mov
in
gs
les
mov
lcall
mov
cmp
test
fsubrs
mov
mov
inc
sub
jns
bound
pop
enter
enter
mov
jne
push
pop
lods
mov
fwait
xchg
xor
bound
push
out
enter
or
sbb
fldenv
sub
es
pusha
bound
xlat
ret
jmp
xor
inc
sub
and
or
fisubrl
xchg
mov
fmull
cmp
mov
out
pusha
inc
adc
pusha
inc
mov
arpl
pusha
and
aam
in
gs
sbb
test
shll
imul
dec
cwtl
in
pop
push
jo
arpl
insb
mov
pop
rcll
ja
fcomps
dec
mov
mov
adc
or
xor
aad
cmpsb
sub
jecxz
push
or
mov
and
in
mov
test
push
leave
outsl
out
lods
shl
pop
enter
cmpb
xor
pop
outsb
jp
push
mov
fsubs
sahf
add
hlt
test
shl
xchg
stos
and
mov
sti
aam
inc
xchg
mov
adc
mov
rolb
shrl
mov
subb
mov
and
iret
cmc
xchg
cmp
lods
insl
cmc
icebp
or
cmp
adc
and
ror
push
push
and
out
xor
loop
sub
and
ljmp
mov
subl
pop
std
jmp
cld
shlb
or
and
fisubl
add
lods
push
xchg
shll
or
add
aaa
xchg
outsl
cs
addb
pop
rorb
pusha
sahf
mov
sub
int
jbe
gs
cld
test
push
lahf
mov
lods
xor
inc
mov
pop
xchg
pop
adc
andb
cmpb
jge
pop
lock
in
cltd
jbe
ret
das
push
mov
mov
push
pop
and
cltd
push
sub
ja
pop
dec
aam
rcrl
jns
inc
and
push
mov
cli
int
xchg
pop
popf
mov
fs
mov
and
dec
cltd
test
xor
mov
and
add
xchg
sahf
mov
cmp
push
jp
or
pop
xchg
adc
rcrl
daa
push
ja
outsb
sub
mulb
int3
jae
xchg
push
mov
ljmp
andb
push
incb
inc
dec
dec
int
pusha
stos
inc
add
push
scas
adc
xor
mov
xlat
xor
lds
cmpsb
addr16
inc
jne
pop
inc
stos
mov
cmp
jno
jl
xor
push
shll
aas
dec
mov
enter
or
data16
push
or
cltd
loop
cli
sti
mov
adc
and
pop
fs
or
jp
lahf
jmp
jo
fptan
xor
insb
pop
cmp
sub
xor
cli
test
and
adc
jae
test
pop
sub
ja
dec
mov
mov
stos
add
mov
in
push
cld
outsl
pop
sub
mov
mov
push
mov
lock
inc
pop
dec
and
lcall
lock
jne
cld
mov
idivl
fstpl
add
ljmp
adc
in
cwtl
pop
repz
inc
sub
add
cmpsb
decl
or
jbe
mov
xchg
push
ret
cmpxchg
fcmovnu
mov
sub
cmpsb
mov
cmc
fsubrs
outsb
into
in
sbb
into
sub
sub
arpl
ja
movsl
fdivrl
cltd
stos
cmpsb
cmpsl
cwtl
or
sub
jmp
stc
lret
testb
sti
and
jno
cmp
xchg
push
cmp
das
gs
mov
or
cmp
dec
popf
sar
mov
pop
xor
mov
call
fildll
adc
adc
add
les
dec
call
aad
mov
xchg
sub
inc
or
test
movsl
dec
loope
cltd
sub
inc
repnz
or
shlb
je
xchg
sbb
sti
aad
mov
lret
popa
inc
int
jbe
cltd
pop
fs
cmpsl
xlat
cli
and
outsl
repnz
pop
push
cmpb
cmpsl
push
lock
fistpl
enter
push
jg
push
in
mov
fwait
subb
bound
loop
inc
dec
push
divl
mov
dec
negl
sbb
mov
add
call
xor
jge
loop
xor
inc
sub
push
and
scas
sbb
outsl
push
and
lock
inc
jmp
xchg
icebp
ftst
sbbb
std
call
shll
mov
test
js
cmp
iret
mov
mov
leave
lret
ss
add
adc
xchg
in
stos
jge
scas
arpl
call
loop
sub
leave
sub
xchg
adc
jecxz
adc
loope
insb
or
ret
outsb
xchg
sti
cmc
jbe
mov
fbld
fdivs
mov
aam
cli
mov
jmp
cs
mov
adc
je
jae
ret
pop
sub
inc
xor
xchg
cltd
inc
add
dec
mov
push
faddl
cmpsl
xlat
call
push
jle
and
fwait
pop
xor
inc
lea
aad
ret
fdivs
push
dec
int
xlat
fdivrs
mov
cmp
inc
mov
aad
and
pop
call
shl
push
and
mov
cmpsb
test
xor
mov
popf
adc
cmp
adc
inc
shr
notb
sub
aaa
nop
fcompl
dec
ljmp
dec
cltd
adc
adc
pop
adc
outsl
push
pop
xchg
jl
loop
fstps
push
fistpll
cmp
jo
fwait
into
push
sbb
mov
insl
in
or
inc
jnp
mov
cltd
xlat
aam
mov
jno
inc
xor
scas
fldl
and
sub
sbb
inc
nop
scas
cmp
jo
iret
xchg
mov
jbe
mov
or
dec
inc
je
int
test
or
popf
xlat
loopne
js
inc
insl
in
mov
dec
repz
mov
push
jp
cmpsl
rol
adc
aaa
and
movsl
fnsave
leave
mov
or
and
push
orl
cmp
lods
jno
or
test
movsl
mov
push
or
je
mov
and
or
rcll
push
and
push
push
and
das
lret
int3
js
into
cmp
pop
cmp
jmp
mov
rcrb
fmull
ljmp
or
popf
sub
jp,pt
inc
adc
iret
jae
filds
and
data16
cmpsl
jne
repnz
ret
fwait
arpl
andl
sbb
mov
lods
mov
and
mov
adc
cmpsl
test
and
repnz
sahf
xchg
dec
fbstp
insl
fistl
jo
push
repnz
push
addb
cmpsl
inc
in
arpl
inc
scas
push
rorb
adc
scas
lret
or
cmp
inc
in
shl
ss
lea
xor
push
int
cmp
xchg
adc
inc
and
inc
xlat
pop
push
icebp
sub
aaa
mov
jb
pop
fnsave
mov
fwait
xchg
inc
mov
test
jo
jg
add
pop
aam
addl
gs
stos
xchg
outsl
pop
add
dec
in
clc
aam
jb
cmp
cltd
outsb
es
int
pop
mov
dec
xchg
inc
and
push
xor
scas
repz
pusha
sub
jns
mov
popa
sti
pop
dec
inc
cmpsb
test
mov
pop
jmp
sarb
mov
fwait
jns
adc
sbb
das
jle
or
repnz
inc
jmp
sbb
jg
rorb
xchg
les
data16
pop
jl
andl
mov
gs
lods
push
je
scas
in
adc
pop
out
mov
dec
push
push
gs
clc
in
cmp
aaa
xlat
mov
jb
push
jmp
cs
jo
rcr
sarl
xchg
xor
mov
movsb
mov
jmp
orb
xchg
das
xor
jge
pop
fldenv
cmp
addr16
fnstenv
mov
fmuls
int
cmp
in
mov
js
pop
movsb
sub
loop
sub
out
int
in
movsb
mov
jmp
pop
jnp
add
rorb
mov
cmp
or
loopne
lods
xchg
cmp
pop
scas
ret
shl
lret
lret
loop
push
add
dec
mov
sub
cmp
mov
mov
fimuls
in
mov
push
dec
lock
pop
fldt
xor
or
sub
inc
sub
mov
mov
cmc
mov
daa
add
fists
mov
adc
cmp
sbb
and
inc
inc
sbb
jns
pusha
mov
rclb
push
sbb
out
pop
dec
jmp
outsb
push
ja
xor
nop
insb
rcrb
jl
in
aas
xchg
cmp
cli
popf
dec
cmp
or
mov
inc
or
stc
pop
cmpb
mov
cmp
dec
aas
cld
ja
xchg
pop
mov
xorl
adc
dec
insl
fistpll
or
xchg
cmc
and
mov
ret
adc
sahf
xor
xchg
or
push
call
lcall
add
pop
push
rol
sbb
ljmp
xchg
bnd
std
xchg
mov
int
or
popf
mov
ss
int3
call
jno
mov
inc
xchg
xchg
addb
add
jbe
loopne
popf
adcl
movsl
in
mov
and
mov
pop
mov
rcl
sbb
push
jae
sahf
icebp
mov
dec
lods
lret
add
inc
adc
scas
jbe
ret
sbbl
loope
bound
mov
xchg
test
dec
scas
xchg
bound
jecxz
mov
fsubrp
ds
lret
push
aas
lods
mov
push
gs
cli
sbb
push
fs
stc
cs
dec
aam
outsb
and
neg
ss
inc
ficoml
hlt
lods
loopne
cltd
cltd
insb
loop
push
sub
es
jmp
ljmp
pop
mov
add
push
xchg
add
mov
xchg
cwtl
cld
cwtl
push
test
xorb
sbb
outsb
mov
outsb
fsubl
outsb
sub
dec
jae
add
xchg
lahf
sub
inc
mov
incl
insl
shrl
push
lcall
mov
add
sub
or
into
hlt
xorl
push
ds
rolb
mov
pop
sbb
sub
mov
inc
jecxz
arpl
adc
mov
adc
push
cmp
rdtsc
mov
cli
xchg
mov
adc
loope
fcmovnu
lds
add
jge
out
and
les
loopne
rorb
inc
dec
hlt
and
cmp
push
loopne
mulb
or
xchg
adc
shlb
mov
jl
xorl
sub
xchg
jg
out
mov
iret
fnstenv
mov
sbb
and
cmp
jle
mov
test
xor
push
add
shrl
fucom
loope
hlt
add
push
mov
cmp
bound
add
sbbb
or
inc
aad
xchg
lods
aaa
mov
sub
adc
aaa
jle
jno
sub
cmp
fsub
fstpt
stos
test
fldenv
shlb
xchg
popa
ja
sub
ja
add
jmp
mov
in
cmp
popf
in
in
xchg
jno
filds
adc
das
fiaddl
push
les
fadds
ljmp
mov
adc
mov
insb
rcll
out
mov
daa
js
fidivs
mov
xor
cmp
push
pop
or
int
add
dec
mov
jo
push
xchg
data16
call
dec
arpl
out
mov
add
hlt
inc
xchg
clc
std
dec
mov
inc
cmp
testb
testb
sti
pusha
lods
cmp
lret
sti
xor
cwtl
xor
dec
mov
mov
ss
cmpsl
add
sub
loop
cmpb
mov
sub
cmp
push
mov
pop
das
inc
xorl
int3
dec
add
cmp
or
adc
xchg
dec
jns
xchg
cmp
test
inc
xor
es
jb
xor
aam
scas
push
das
mov
sub
mov
mov
out
push
aam
push
sbb
or
adc
aad
add
adc
fistpll
adc
test
mov
sub
and
mov
xchg
lcall
sub
mull
xor
adc
cmp
push
test
pop
sub
lea
cwtl
push
rclb
xchg
loope
mov
arpl
clc
xor
into
ds
sarl
imul
and
mov
mov
xchg
adc
sub
rdmsr
cmp
cmc
jmp
aad
mov
gs
pop
pop
into
mov
shll
jbe
pop
inc
cmp
pop
aad
cmpsb
push
xchg
or
test
hlt
jb
dec
lret
add
lods
lods
add
ss
addb
aam
mov
mov
sbb
xor
inc
out
add
clc
mov
out
mov
add
sub
add
aas
xchg
popa
dec
into
bound
loop
mov
pop
out
sti
leave
les
mov
pop
adc
clc
lret
xor
pop
fidivrs
shll
jp
dec
mov
mov
xor
or
add
cs
xor
cli
inc
jmp
rcr
loopne
mov
mov
nop
fsubrs
fidivrl
mov
dec
cmpsb
imul
pop
cmpb
adc
addr16
mov
add
sub
stos
or
scas
loopne
dec
and
adc
dec
call
test
or
and
fsts
movsb
sub
loopne
mov
jp
fistps
in
mov
lahf
pop
and
imul
xorl
lock
lcall
stos
jmp
jmp
and
add
sub
fisttpll
dec
jae
into
mov
mov
mov
xchg
xchg
fmuls
sub
add
and
lcall
sbb
mov
pushf
adc
xor
cmc
ds
sub
xchg
dec
sub
stos
push
cs
es
pop
mov
push
dec
adc
pop
sub
lahf
xor
pop
pop
fdivs
divb
mov
mov
mov
xchg
nop
loop
or
push
stos
mov
sbb
mov
xchg
shrb
mov
andps
lea
test
cmpsl
push
and
outsl
lods
or
xchg
or
test
xchg
enter
bound
sahf
leave
stos
arpl
roll
jnp
or
jg
push
fsubrs
or
rcrb
pop
cmp
inc
pop
popf
adc
sub
out
add
lret
aad
jp
sbb
pop
out
dec
mov
or
mov
movsb
mov
pop
sahf
adc
add
cs
pusha
nop
psubw
jl
adc
mov
dec
jae
mov
cltd
arpl
fnstsw
or
cmp
jmp
xchg
out
xchg
es
outsb
cwtl
pop
jle
push
jae
subl
mov
pop
add
imul
in
mov
mov
test
mov
loopne
pop
add
jp
div
aas
sbb
push
mov
lret
sar
cmpl
scas
leave
sbb
nop
sbb
sub
push
in
sarb
mov
and
add
inc
js
jle
jne
dec
outsl
or
push
push
lahf
mov
jne
or
fcmovnbe
mov
cmp
daa
jmp
add
mov
insl
test
fcmovbe
xchg
sub
cmp
xor
jmp
xor
mov
jge
in
ret
mov
mov
aad
or
test
inc
pop
add
int3
jno
orl
sub
or
sbb
inc
imul
sbb
fdivrl
aaa
cmpsl
push
xchg
pop
xor
sbb
rol
inc
pop
sbb
call
adc
sbb
and
shl
cmp
sahf
inc
pop
jns
xchg
scas
or
pop
mov
jecxz
nop
mov
filds
cltd
fcom
dec
sbb
sahf
sub
push
cmp
rdmsr
xchg
cmp
cmp
or
unpcklpd
aaa
sbb
aam
push
je
mov
sub
xchg
sbb
repnz
stos
iret
mov
jmpw
push
aam
cmpsb
mov
daa
sub
mov
int3
jmp
jb
xchg
imul
add
stos
popf
pop
mov
and
or
in
jl
push
test
sbb
inc
dec
inc
ret
test
nop
mov
outsb
imul
notl
je
imul
cli
mov
data16
lcall
sub
iret
adc
das
in
rol
lret
sbb
pop
mov
loope
jecxz
loopne
fsubl
xchg
and
jne
test
mov
aad
hlt
das
adc
mov
inc
popf
repnz
push
xor
push
aad
add
cmp
shl
mov
push
xchg
adc
mov
pop
cmp
call
adc
enter
xchg
cmp
int
gs
mov
add
dec
lcall
xchg
dec
mov
mov
mov
inc
ja
xchg
xchg
test
inc
nop
fsub
out
jns
jecxz
inc
xor
pop
fdivs
idiv
popa
xor
jle
and
inc
adc
cmpsl
aam
fcoms
movl
add
push
movsb
pop
sub
scas
dec
shlb
ja
inc
out
mov
cs
adc
mov
xchg
mov
aad
scas
xchg
fwait
cmp
and
gs
mov
xchg
pusha
popf
pusha
sub
add
jbe
ljmp
push
movsl
enter
inc
mov
cmp
jmp
test
imul
fwait
gs
push
in
cmp
lods
jo
mov
ret
xchg
ss
sbb
rol
mov
test
dec
and
dec
sbb
dec
dec
fwait
or
dec
lcall
repz
in
mov
xchg
xchg
cli
adc
jl
add
fildll
sbb
je
mov
mov
jle
fwait
jno
imull
mov
and
push
jge
out
and
pusha
dec
pop
nop
cmp
lcall
sar
adc
sub
cmpsl
andl
ja
stos
int
adc
mov
xchg
mov
fdivrl
scas
xor
fs
out
lahf
gs
sub
add
es
add
mov
aam
stos
mov
sub
mov
in
sbb
jge
pop
cld
aaa
test
incb
orb
pop
sahf
leave
fwait
cmc
and
adc
lds
iret
loop
mov
cmp
test
nop
xor
add
out
sbb
pushf
imul
push
mov
dec
decl
add
mov
cld
out
cmp
shlb
lods
mov
xor
mov
loopne
xchg
mov
aas
ja
sbb
mov
hlt
jmp
xor
pop
xchg
test
push
sarb
sti
int
xchg
sbb
pop
mov
cwtl
cmpxchg
hlt
jo
repz
sti
jae
outsl
mov
aam
cwtl
roll
ljmp
aam
mov
gs
fs
push
lods
jl
jp
clc
sahf
roll
and
icebp
cmc
mov
lods
dec
dec
add
dec
sbb
jp
rcrb
and
sub
xchg
std
imull
xlat
in
sbb
dec
jne
enter
out
icebp
outsb
nop
loop
fcomp
inc
cli
pop
mov
aad
xchg
adc
in
and
ds
jne
shll
lea
cmpsl
pop
and
mov
das
testl
mov
jb
mov
cmc
inc
jecxz
scas
jle
das
rcrl
sbb
int
loop
pop
sub
arpl
jnp
mov
es
fstpl
arpl
inc
std
hlt
add
js
clc
movsl
adc
mov
inc
mov
pop
and
popa
popf
lock
addr16
shlb
aaa
pop
push
in
push
hlt
aas
lcall
push
or
mov
lret
out
in
shl
add
into
lret
pop
xchg
lods
cld
and
mov
repz
adc
enter
xor
xor
test
mov
sysexit
lock
aas
into
add
fwait
dec
into
pusha
mov
xor
cmp
push
mov
push
cmp
add
ja
imul
arpl
enterw
mov
lea
rorb
cmp
mov
pop
cmp
cmpsl
stos
or
mov
jmp
clc
fcmovnbe
out
fnstsw
rolb
stos
xchg
jb
xchg
sub
mov
mov
cmpsb
mov
dec
rorb
insb
push
ja
movsl
clc
pop
push
jnp
inc
jne
lods
push
cmp
or
shll
rcrl
push
add
and
sbb
push
test
test
aad
iret
bound
pop
dec
push
pop
mov
add
jmp
xchg
jnp
lcall
fld
add
sbb
xchg
test
stos
lret
adc
outsl
arpl
pop
fsub
xorl
and
stos
pop
xchg
xchg
movsl
cmc
popf
aam
aam
std
xor
jge
imul
push
jl
rcl
jecxz
scas
loope
and
sbb
inc
fistps
cmp
cld
lods
mov
bound
adc
loopne
stos
inc
dec
mov
mov
push
jge
jne
orb
adc
icebp
xchg
jle
lods
jp
cwtl
adc
out
mov
mov
mov
ror
mov
jo
push
pop
imul
mov
jmp
xlat
push
jnp
mov
xchg
xchg
in
out
mov
out
sub
arpl
ja
aaa
or
push
subb
xor
or
cmp
das
lods
enter
aaa
cmpsl
push
jno
ss
fidivrs
or
clc
jge
cmp
inc
pop
popa
xchg
aad
std
pop
jmp
xor
mulb
in
sub
fs
add
gs
inc
or
test
sub
jae
aad
lahf
xchg
xor
insl
jno
arpl
mov
push
or
out
pop
push
hlt
imul
or
mov
repnz
ret
mov
fcmove
ljmp
fwait
shll
fwait
adc
cmpsb
pop
xchg
and
dec
ret
js
orl
mov
cmpsb
push
sbb
inc
insb
sbb
lea
out
sarb
or
xlat
lods
sub
or
sbb
aad
sti
adcb
mov
xchg
lods
rorb
mov
mov
sbb
ret
mov
fs
shlb
and
jle
fisttpl
xor
iret
test
xchg
and
mov
or
shlb
jl
mov
add
push
lcall
and
test
int
xchg
call
mov
popf
cld
orb
xchg
stos
adc
mov
shrl
xor
cwtl
ret
jno
lea
xchg
cwtl
fwait
stos
subb
lds
add
xchg
push
or
xchg
add
or
sbb
xchg
or
sub
cmpb
push
mov
sub
pop
jg
fdivrs
mov
push
rcrl
imul
mov
daa
arpl
mov
les
cmp
sbb
mov
pop
inc
nop
inc
pop
ljmp
add
push
or
movsb
and
gs
lret
cli
xchg
xlat
mov
daa
xor
xchg
or
mov
cmc
imul
jle
jmp
loop
xor
mov
mov
sub
xchg
imul
mov
andb
or
sbb
push
and
stos
mov
jl
or
out
rorb
xchg
sarl
fisttps
arpl
and
cmp
in
push
lret
aaa
mov
nop
mov
fdiv
sbb
stos
ljmp
or
xchg
out
mov
or
flds
pop
out
cli
mov
mov
inc
fwait
push
pop
dec
mov
incb
fstps
fisubrl
xlat
ja
or
daa
mov
lea
divb
sahf
jne
and
movsb
cmp
mov
rol
sahf
xchg
mov
dec
scas
jnp
cmpsl
adc
shll
mov
shrl
bnd
xchg
mov
cmpsb
mov
push
adc
mov
xor
sbb
sahf
aaa
imull
sub
das
sbb
inc
std
xchg
mov
mov
adc
and
push
in
int
push
pop
icebp
sub
bound
not
loopne
mov
cmc
mov
sbb
xlat
daa
cmp
sahf
shl
jmp
cmpsb
test
faddl
push
es
in
rorb
add
xor
ja
jl
lcall
inc
cmp
insl
add
ret
inc
dec
cli
mov
test
mov
push
jae
sub
and
outsl
cmp
xchg
mov
adc
jo
cmpsb
es
insl
in
scas
mov
pushf
fstpt
sti
fimuls
rcll
or
pop
push
mov
cwtl
icebp
out
or
loope
fwait
js
cmp
fiadds
jbe
bound
movsb
xchg
lea
stos
sub
jnp
in
xlat
fwait
jnp
cmp
into
jmp
cmp
jo
mov
lret
cltd
mov
ds
cltd
xchg
and
icebp
dec
xchg
mov
aas
pop
lea
out
js
divb
add
es
sbb
out
xchg
xor
xchg
inc
outsl
fsubs
outsl
push
add
dec
xor
nop
shlb
ss
ss
clc
xchg
fs
and
movsl
ds
imul
jno
mov
jmp
pop
pop
jp
sub
mov
cmpsb
pop
andb
test
jmp
adc
or
iret
adc
xor
inc
lret
push
sbbb
xchg
mov
scas
lret
cs
or
push
loope
iret
call
das
inc
jae
notb
repz
pop
cmp
repnz
orb
pop
cltd
cmp
mov
stos
lods
sbb
imul
cmp
mulb
decl
sbb
pop
es
and
dec
sbb
mov
sub
repz
mov
xchg
call
and
xor
mov
stos
inc
xorb
std
and
repnz
cmp
testl
push
ficoms
lea
test
push
fsubs
shr
cmpl
inc
or
clc
lods
push
push
scas
dec
mull
cmp
pop
clc
dec
mov
cltd
add
call
sbb
dec
aam
dec
sbb
and
sti
xchg
xchg
sbb
jns
mov
xorb
psrld
adc
or
sbb
fcmovb
add
mov
imul
pop
shrb
dec
lahf
mov
pop
adc
add
andl
orl
mov
in
pop
aas
movsb
or
stos
dec
imul
test
add
aam
outsb
xchg
and
inc
xchg
ds
cmp
sbb
push
pushf
js
xchg
popf
dec
ljmp
xor
cmp
inc
call
mov
out
inc
test
xchg
jne
test
loopne
mov
cld
popa
inc
dec
add
imul
cmp
outsb
or
mov
aaa
dec
test
inc
imul
mov
inc
out
xor
daa
dec
sub
lods
dec
mov
insb
cltd
popa
lods
lret
nop
or
ljmp
cmc
das
stos
jecxz
fwait
sbb
pop
pop
nop
fistl
fnstenv
lret
adc
lods
push
cs
xchg
out
xchg
mov
cmp
cli
addb
pop
icebp
fmul
lcall
fsubrs
loopne
jnp
imul
testb
imul
cmp
pop
sbb
adc
mov
pop
adc
add
pop
je
and
inc
in
jl
cmpsl
cmp
push
inc
jnp
sahf
jae
les
insl
pop
inc
mov
mov
xor
or
stc
shll
cmc
cltd
popa
add
mov
js
mov
add
insl
jnp
arpl
lcall
xchg
sbb
rcl
in
mov
sub
cmp
test
inc
xor
mov
jg
mov
mov
pusha
fcomip
pop
js
and
sbb
jp
lods
mov
adc
rolb
jb
inc
fcmove
ret
dec
jmp
xchg
cmpsl
das
arpl
loopne
insl
sbb
xor
mov
cmpsl
xlat
sbbb
loopne
or
das
les
sbb
sbb
lahf
jnp
jecxz
cltd
fistpl
pop
enter
lcall
inc
cli
insb
in
in
cmp
push
fstpl
mov
push
in
outsl
dec
scas
mov
shr
mov
ficompl
pusha
mov
push
rcrb
dec
gs
icebp
adc
cld
data16
sbb
sbb
leave
std
stos
mov
scas
and
or
jg
lods
sub
pop
mov
movl
addr16
mov
test
hlt
dec
push
repz
scas
pusha
push
mov
lds
add
int
cltd
sub
mov
adc
aad
rorl
iret
cmp
clc
sti
push
aas
cmpsl
or
xor
xchg
xor
xor
fs
out
cmp
cmp
pushf
fdivrs
rol
nop
out
push
stos
inc
out
mov
push
push
xor
mov
dec
mov
lods
call
and
out
xchg
in
clc
jp
xchg
mov
sbb
pop
sub
mov
clc
mov
push
cmp
int3
inc
lods
push
arpl
push
bound
add
jl
dec
arpl
lcall
add
push
inc
sbb
xchg
sub
pop
cwtl
aam
popa
jnp
repz
int3
cltd
mov
push
dec
mov
outsb
jg
cmp
lds
inc
lret
int3
loop
test
test
scas
es
movsl
mov
movsl
jno
bound
fidivrl
jp
int
repnz
cmp
pop
ja
inc
fnstsw
sub
lock
jl
or
jge
adc
icebp
push
jns
ds
mov
add
and
mov
rcll
ja
ret
xchg
add
mov
aam
cmpb
and
adc
xchg
push
add
mov
test
mov
mov
pop
es
lods
cmp
pop
pop
push
mov
aad
inc
jle
push
fst
pusha
sub
inc
iret
sbb
or
mov
pop
adc
inc
add
pop
sbb
daa
lods
ror
fnsave
ss
sbb
jno
nop
aam
mov
je
movsb
mov
nop
scas
test
fwait
cmp
leave
xor
xor
fcmovnbe
in
scas
xor
dec
cld
mov
push
outsl
sti
push
xor
inc
mov
sbb
movb
adc
mov
jo
xor
add
jmp
test
pop
jbe
pop
shl
add
jmp
mov
push
xchg
fwait
dec
loope
add
xor
dec
test
mov
insl
out
pusha
xchg
and
jae,pn
inc
xorl
and
nop
repnz
ret
jne
cmc
jbe
jl
and
pop
mov
xchg
adc
loop
pop
sub
adcb
addr16
xchg
push
fcmovb
out
lret
iret
stos
fsubl
data16
xchg
dec
xor
loop
pop
and
sahf
adc
and
add
lds
xchg
add
mov
pop
cmp
xor
mov
ret
mulb
in
imul
dec
dec
xchg
jecxz
out
jb,pt
fisttpll
daa
add
pushf
lods
dec
ret
mov
jg
imul
aaa
mov
pop
adc
xchg
mov
jp
std
jno
test
insb
test
inc
xor
xor
inc
pop
lock
xlat
push
inc
mov
xorl
xor
fldcw
pop
loopne
mov
push
into
in
nop
stos
cmp
dec
xchg
add
add
dec
lea
push
push
fwait
dec
stos
and
loopne
in
and
fsave
inc
pop
fistl
into
xor
jo
nop
or
mov
daa
pop
lret
mov
popa
negb
in
popa
and
mov
out
rcrb
sbb
or
ficomps
dec
cld
sub
xor
fnstsw
mov
xor
xchg
bnd
in
sub
or
in
jns
test
mov
jnp
push
mov
add
cmp
sarb
jl
push
inc
xorb
cmp
idivl
lods
lret
es
lahf
or
and
pop
fdiv
test
dec
dec
arpl
mov
inc
or
ljmp
push
rcrl
jp
loop
push
aas
and
fsubl
addb
push
mov
std
lret
push
mov
inc
inc
ss
push
pushf
scas
js
inc
imul
mov
xchg
sahf
xor
lcall
adc
ret
shlb
push
imul
xlat
ljmp
rorl
movb
fcomp
lret
xchg
out
push
call
cs
frstor
ss
lock
hlt
repz
int
dec
push
push
cmp
add
inc
inc
push
test
and
ret
mov
dec
sar
jae
jns
mov
jb
lock
mov
shrl
rcrl
jb
outsb
jo
pop
and
or
js
fidivs
stc
dec
xor
les
dec
jo
scas
fwait
inc
cli
sbb
sti
cmp
xor
pushl
mov
inc
arpl
xchg
stos
xchg
lods
pop
arpl
aad
cmpsb
xor
mov
imul
fwait
xor
jns
lods
ja
jnp
mov
loop
mov
sub
stos
mov
mov
aaa
push
cmp
or
lds
xor
inc
push
dec
pop
sahf
add
inc
aas
add
aas
mov
jbe
mov
mov
inc
mov
out
mov
dec
adcb
cmpsb
insb
pop
pop
scas
jecxz
ficoms
and
mov
fdivrp
icebp
mov
sbb
imul
xchg
aad
xor
repz
rclb
mov
lods
loopne
stos
mov
inc
ds
fwait
sub
mov
js
cmp
vmovhps
xlat
xor
jo
push
sbb
jmp
mov
xchg
clc
fisubl
out
xchg
dec
js
faddl
movsl
sbb
inc
xchg
inc
cmp
notb
fwait
xor
mov
jp
out
fwait
out
add
cs
int3
cmc
test
push
imul
lds
div
loop
fstpl
mov
subl
push
imul
pop
cmp
mov
dec
mov
icebp
insl
sti
jne
pop
popl
cmp
stc
pop
lcall
adc
add
cmpsl
leave
cs
scas
sbb
sub
and
jo
mov
pop
or
loop
cmp
int3
lds
pop
mov
roll
adc
jo
call
push
shll
fdiv
cli
rcl
inc
imul
out
add
cli
jb
insl
cmp
out
sbb
aad
int3
lods
loop
or
add
je
xchg
and
xchg
dec
cs
out
imul
xor
inc
movsb
aad
icebp
fcomip
mov
ret
rcrb
cmpsb
in
dec
lods
push
ja
sbb
cmc
in
push
rorb
cmc
fadds
xchg
repz
lods
inc
mov
aas
xchg
dec
ret
sbb
add
mov
es
sbb
pop
mov
fimull
pop
test
add
cmp
pop
xchg
inc
xor
fisubrl
movsb
cmc
rcrl
xchg
jl
sbbb
rep
add
and
idivb
push
xchg
fnsave
shr
popa
push
std
dec
push
or
pop
push
jg
insl
jbe
das
aaa
jmp
addr16
add
adc
mov
xor
push
xorl
push
insl
sbb
mov
inc
jno
pushf
sar
cmp
les
pop
sbb
pushf
cmp
test
das
sbb
jae
int3
pop
test
or
xchg
sti
mov
jnp
push
ss
fistps
add
cmpsl
mov
jge
mov
fistpll
ret
xchg
aas
test
push
or
or
fwait
sbb
outsl
and
std
and
mov
fwait
int
push
xchg
jo
cs
sub
add
leave
fdivrs
mov
aam
sbb
andb
and
movb
jle
jbe
or
xchg
out
pop
push
fdivrl
popa
cld
sarb
adc
repz
xchg
dec
cs
nop
cmp
out
das
decb
test
and
adc
mov
arpl
shll
aaa
loope
mov
add
mov
push
pop
rcrb
bound
lea
dec
les
add
rclb
arpl
das
aas
pusha
and
callw
and
mov
inc
lods
test
ds
js
pop
fstpt
cmpsb
sub
test
out
out
outsl
js
add
es
sbb
push
xor
shrb
add
stos
repnz
cld
xchg
orl
xchg
ljmp
sahf
jecxz
xchg
dec
jae
ret
pop
sbb
stos
mov
jecxz
cmpsl
pop
iret
shl
addr16
jp
addl
int3
mov
jb
cmp
out
cmpl
jo
scas
xlat
icebp
ss
mov
xor
mov
cmp
loope
int3
inc
mov
xor
xchg
or
gs
xorl
int
jmp
xchg
roll
cmp
fwait
lds
ja
repz
mov
mov
pop
imul
xchg
jne
mov
popf
jle
push
push
mov
mov
in
mov
sub
nop
or
mov
sub
jns
push
dec
jp
cwtl
jne
movsl
cmp
and
pop
xchg
push
pop
add
xor
jp
aaa
jne
addr16
call
mov
imul
in
and
int
nop
inc
adc
mov
inc
cltd
xchg
shr
pushf
or
in
montmul
cmpsb
push
movl
pusha
adc
cmp
push
pop
std
inc
dec
outsl
mov
lret
jne
fistpl
iret
lahf
adc
cltd
scas
test
add
push
sbbb
xor
jp
push
sub
lock
xchg
pop
sbb
mov
mov
ja
in
add
mov
mov
or
frstor
outsl
mov
sub
sub
or
sbb
dec
xchg
or
jo
jns
lock
loopne
insl
jg
mov
test
insb
dec
push
cmpsl
xchg
adc
mov
clc
test
lods
push
ret
lea
push
nop
clc
cli
mov
inc
jae
mov
adc
push
rcl
jl
or
subb
mov
pop
fildl
fisubrl
popw
xchg
mov
adc
add
xor
add
pop
mov
mov
mov
aas
addl
and
cmp
or
jbe
enter
push
rcrl
test
test
add
test
xor
xchg
cmpsb
pop
mov
js
jb
insb
sbb
mov
sub
mov
mov
sbb
sbbb
lret
in
inc
or
xlat
les
mov
iret
fs
mov
cltd
xchg
jo
cmp
push
sub
jae
lods
inc
push
pop
in
in
and
mov
jne
push
ss
out
das
xchg
out
test
mov
dec
filds
aas
sarl
nop
pop
in
pop
lret
pop
shrl
andl
jmp
dec
cmpsl
fldenv
fildl
push
andl
xor
idivb
dec
ja
hlt
jnp
lea
jg
mov
sbb
sti
insl
cmc
out
inc
cmpsl
rolb
and
or
cmc
mov
mov
mov
pop
sub
ret
fcom
ds
insb
jne
adc
jp
xchg
ret
mov
jb
sub
rorb
popa
cmc
xchg
sahf
int3
mov
scas
jmp
push
inc
iret
xorl
in
mov
mov
jle
and
or
insl
lret
fimull
cli
mov
mov
pop
xor
adcb
xchg
xor
xchg
call
cmp
and
bound
dec
imul
fdivrs
aas
push
adc
sbb
ds
mulb
movsl
dec
call
in
rorb
or
xchg
test
stos
cs
xor
and
sub
insl
mov
outsb
mov
ljmp
test
cmp
mov
pop
mov
mov
inc
rorb
mov
ljmp
es
frstor
sarb
scas
jl
addl
xor
push
jo
cmp
push
daa
push
in
jns
loopne
inc
nop
and
daa
clc
xchg
lret
cmp
sub
cmp
xchg
pop
es
push
gs
outsl
sub
add
sbb
add
mov
loope
pop
mov
and
cmpsb
jmp
jo
out
mov
loop
rolb
stos
inc
mov
push
pop
cli
mov
lods
sbb
pop
mov
adc
mov
mov
mov
or
fstpt
mov
leave
out
pop
out
jne
into
jmp
lahf
or
inc
mov
sbb
or
popa
sbbl
pop
lods
mov
jne
cmp
aam
jo
dec
xchg
shrl
les
les
lock
mov
xor
fcmovnb
loop
mov
popa
or
mov
inc
jo
iret
cltd
pushf
or
adc
movsb
lock
ret
je
or
mov
pop
push
mov
sbb
pop
and
sbb
mov
data16
cmp
std
or
sti
imul
jno
loope
push
nop
fidivs
push
xorb
data16
fdiv
pop
sbb
imull
pop
xchg
mov
cmpsl
push
jns
adc
or
outsl
ds
ret
dec
dec
jecxz
push
movsb
mov
jb
movsb
add
pop
std
mov
idivl
int
aas
jbe
dec
cmp
and
dec
sti
in
dec
sbb
cmp
fcoms
shll
ss
cmpsb
adc
loope
scas
dec
cmp
lods
jne
inc
mov
dec
pop
mov
cmp
mov
mov
lods
rol
inc
or
mov
adc
scas
notl
ror
es
add
xchg
sbb
or
sbb
jne
loope
loop
js
mov
mov
ss
addr16
pop
mov
inc
lock
lahf
pop
xor
push
push
lahf
ds
arpl
test
imul
movsl
imul
in
jp
adc
imul
test
sbb
sub
sbb
xchg
daa
or
inc
loope
inc
cwtl
lods
push
mov
or
xor
lods
jbe
sti
jecxz
cld
mov
lea
jne
imul
call
add
mov
adc
lret
sbb
sub
mov
mov
inc
fwait
sbb
push
jle
int3
fsubl
pause
or
xlat
or
sahf
adc
dec
pop
rcr
fwait
loop
icebp
dec
cmp
jp
enter
mov
mov
xchg
jmp
adc
insl
push
test
sahf
xchg
sbb
ds
loope
sub
stos
or
scas
add
mov
xor
pop
shrb
fxam
pushf
flds
movsl
mov
lcall
addr16
dec
mull
adc
sub
rcr
test
fnstsw
sbb
imul
add
cld
faddp
imul
jae
pop
ljmp
jno
add
lahf
mov
jmp
decb
fidivrl
lea
outsb
mov
dec
es
cmp
pop
mov
mov
inc
push
and
iret
cmp
test
clc
push
test
test
dec
dec
fdivrl
das
pop
dec
lods
dec
sbb
cmp
js
xlat
rolb
fnstcw
cltd
lcall
or
nop
cmp
cmpsl
cltd
fists
lock
call
jnp
dec
rcrl
dec
xchg
fstl
mov
fstps
pop
push
lahf
ss
mov
and
adc
cmp
mov
inc
jle
jmp
divb
out
int
lods
jbe
lret
arpl
inc
repz
jl
ret
popf
cmpsb
xchg
rcrb
shrl
das
loop
mov
mov
stos
out
or
jl
adc
push
sbb
adc
adc
jbe
or
outsb
mov
out
sti
out
sub
scas
xchg
enter
xlat
or
or
push
add
shlb
inc
out
mov
sbb
dec
mov
into
addr16
pop
mov
jbe
repz
cmp
aaa
add
and
sbb
xchg
out
mov
jg
inc
decl
cmp
lahf
nop
iret
add
aaa
in
ret
dec
inc
test
std
bound
adc
clc
xchg
cwtl
cmpsl
dec
fiadds
pop
xchg
jnp
xlat
mov
push
nop
pusha
dec
sbb
fwait
and
fisttps
roll
data16
repnz
out
sbb
mov
movsl
xor
push
mov
jp
in
loope
dec
dec
insl
pop
sub
adc
repz
test
enter
aas
cmp
mov
scas
mov
and
int3
movsl
push
in
addr16
je
and
fldenv
mov
add
jl
mov
fisubrs
and
test
cmpsl
inc
mov
test
enter
hlt
mov
stos
mov
ljmp
inc
data16
adcb
aad
in
xor
jecxz
mov
xchg
lods
out
bound
ja
out
test
jmp
gs
xlat
leave
lods
imul
adc
xor
mov
adc
pop
sbb
pop
popa
int
stos
and
push
push
stos
repnz
loope
pop
mov
adc
aas
fdivl
loope
loop
pop
add
add
into
rcll
lret
insb
mov
call
sbb
push
test
loope
push
jnp
lods
movsl
push
cmp
sub
jo
fs
aas
push
pushl
inc
mov
push
fnclex
sub
cwtl
push
fildl
jbe
push
test
and
xchg
add
jnp
sbbl
imul
xchg
lret
inc
xor
dec
icebp
pop
frstor
in
imulb
jbe
std
mov
incl
jne
shrl
lds
jno
and
mov
sub
dec
xorb
inc
inc
sub
inc
das
add
xor
mov
xorb
sbb
aas
xchg
dec
imul
ror
or
rcrb
jle
fmull
ret
mov
mov
jle
cwtl
mov
sbb
jecxz
and
inc
xor
testb
sbb
sbb
pusha
xchg
sahf
mov
sar
push
push
pop
jge
push
and
sbb
xchg
imul
cmpsl
in
cmpsb
iret
dec
pop
add
out
pop
xchg
mov
mov
bound
clc
outsb
xchg
jge
mov
test
add
pop
jl
popf
andb
movsl
fstpl
push
movsb
adc
stc
mov
icebp
and
or
jmp
inc
push
xorb
dec
mov
insl
into
cld
lds
ret
jle
dec
stos
adc
sbb
lret
sbb
jns
mov
notl
mov
nop
dec
aam
jp
adc
out
jmp
mov
mov
daa
push
and
add
mov
mov
add
push
arpl
mov
movsb
loopne
cmp
dec
cmp
dec
pop
adc
jo
cld
and
sbb
sbb
mov
cmp
push
dec
pop
push
jb
int3
clc
jmp
shlb
sbb
sbb
sbb
jecxz
pop
movsl
adc
fwait
push
xchg
push
and
in
adc
popa
mov
icebp
testb
sbb
pop
adc
sub
scas
addr16
stos
xchg
out
mov
jnp
or
aas
mov
cmp
xchg
push
arpl
test
repnz
in
ja
mov
sub
clc
and
js
jge
popf
inc
sbb
in
into
push
jno
in
sbbb
mov
lds
fsubs
popl
orl
mov
mov
xor
cltd
mov
test
xchg
ss
push
mov
aaa
orb
movsl
out
jecxz
adc
stc
push
dec
mov
fs
sub
aas
add
repz
enter
pop
aas
add
insb
or
add
mov
scas
add
sbb
in
push
push
push
iret
ret
mov
call
jl
jmp
pop
and
loope
and
pusha
ljmp
mov
testb
jnp
test
bound
pop
shlb
clc
popa
aad
daa
stos
xlat
lret
mov
fwait
and
lahf
and
cmp
sti
popf
mov
add
adc
adc
ja
push
add
cmp
pop
add
mov
sub
out
inc
dec
dec
mov
scas
mov
out
mov
mov
jmp
dec
flds
fs
or
stos
sti
mov
out
mov
cmp
or
out
mov
add
xchg
cmp
ret
jne
gs
cld
xor
out
ljmp
idivb
outsb
fisubs
daa
not
popa
xchg
xor
mov
sbb
add
xor
jnp
push
test
ljmp
fisubrs
sub
out
inc
jnp
adc
std
xchg
dec
adc
mov
and
fwait
xchg
pop
sbb
lahf
ds
mov
add
lds
popa
cmp
and
mov
xchg
fsubrl
mov
pop
std
mov
mov
mov
lea
inc
dec
mov
add
in
jnp
push
mov
jb
aas
mov
sub
daa
sti
inc
addr16
cmp
in
jg
jnp
push
push
lods
sti
inc
cmc
mov
dec
sbb
scas
dec
push
xchg
stc
dec
fldt
fists
dec
push
pusha
das
std
jmp
inc
mov
imul
sbb
mov
loope
and
push
push
jno
rorb
dec
adc
addr16
imul
rcr
inc
les
ja
cmpb
inc
add
cmp
sbb
test
dec
data16
fs
icebp
out
fs
jne
push
mov
sbb
xor
jnp
dec
cld
or
stc
jmp
mov
cmp
ficoms
rolb
negl
adc
shll
xchg
test
aam
mov
push
inc
inc
sbb
or
fstl
mov
xlat
icebp
daa
pcmpeqw
shrb
bound
cli
inc
hlt
lds
or
gs
js
add
leave
cwtl
push
sub
pop
icebp
out
dec
int3
lcall
jle
sub
mov
adc
mov
movb
cmp
test
flds
loopne
pop
out
jl
xchg
mov
je
inc
add
add
repz
test
pop
punpcklbw
lret
pop
aad
add
push
sbb
xchg
dec
in
add
and
sbb
dec
gs
mov
imul
shl
jns
imul
ja
pushf
jnp
int
xchg
or
xor
jp
jl
popa
pop
sbbl
test
rcll
shll
mov
ja
or
xchg
aas
xchg
mov
es
push
pop
loopne
rcll
push
in
pop
mov
dec
push
insb
out
push
sub
jle
test
and
ds
int3
inc
add
aam
pop
icebp
cmp
insl
inc
cmpsl
decl
jae
cld
push
mov
repz
inc
notb
mov
push
cmp
ljmp
push
pop
rcll
divl
cmp
sbb
mov
popa
and
xor
pushf
add
push
push
out
jns
fisubs
pop
pop
cs
or
cmc
bound
or
jl
repz
rcrb
ja
pop
or
fwait
cmpsb
add
adc
and
insl
xlat
lahf
repz
insb
xor
repz
push
out
lock
cmp
out
jb
out
test
popf
mov
mov
push
dec
cs
mov
mov
neg
mov
sbb
adc
push
xor
dec
pand
test
inc
lods
add
hlt
add
cmp
pop
outsl
xor
imul
jg
mov
mov
push
or
lcall
dec
shrb
sbb
mov
aas
pop
jns
repnz
in
in
mov
cltd
icebp
in
sub
pop
cltd
or
iret
pop
ret
scas
bound
ret
imul
andb
push
fdivrs
call
xor
into
sahf
rorb
jecxz
js
andb
call
mov
jnp
test
setg
popa
xor
pop
push
daa
or
aas
cmc
mov
call
sub
inc
sbb
lock
jo
push
cli
sub
call
dec
loop
push
lahf
nop
push
inc
fsincos
mov
stc
aaa
outsl
mov
sub
and
push
shlb
cmpsl
add
lcall
bound
insb
dec
mov
lea
std
adc
shlb
js
dec
pushf
mov
adcl
pop
xor
sbb
inc
and
xchg
sbb
mov
and
roll
mov
sub
out
pop
fnstcw
test
jbe
and
js
stos
pop
xchg
mov
rcr
adc
jae
adc
dec
xchg
mov
out
pop
call
inc
xchg
sbb
hlt
push
jmp
movsl
xchg
dec
shll
fdivs
mov
leave
push
out
addr16
jno
jbe
dec
loop
hlt
sub
aas
les
xchg
rcll
ret
inc
sbb
aam
insl
sahf
loopne
jg
data16
out
add
notl
call
nop
mov
pop
and
jae
or
idivb
push
aam
jmp
mov
daa
js
outsl
and
daa
xchg
ss
aaa
cmp
mov
cmp
mov
push
outsb
sub
dec
lret
mov
ror
movsb
setle
js
xor
xor
sti
movsb
imul
dec
cmp
fisttps
jno
das
shlb
pop
lods
add
mov
data16
js
xchg
aas
xor
pop
int
shr
inc
rclb
mov
js
pop
addr16
stc
enter
xor
call
iret
inc
jg
lock
inc
push
lahf
mov
inc
add
inc
hlt
imul
bnd
sbb
mov
xor
test
sub
add
inc
movsl
mov
jmp
jnp
push
inc
js
loope
sub
mov
in
and
mov
daa
imul
ljmp
or
ljmp
and
push
add
in
std
dec
push
cmp
shlb
leave
xchg
in
dec
jnp,pt
mov
and
xchg
js
dec
xchg
dec
pop
lahf
test
popa
and
xchg
xchg
stos
jb
mov
pop
inc
mov
xchg
cld
sub
push
jge
adc
push
repz
enter
sbbb
push
ret
in
sbb
es
push
subb
push
push
scas
dec
and
push
adc
cmpsl
and
scas
sti
imul
movsl
cmp
jp
cmp
test
arpl
fsubl
sbb
adc
orb
jnp
test
jno
out
mov
mov
jo
jecxz
adcl
in
cmp
sarb
stos
add
inc
shl
cld
jbe
test
inc
mov
sub
xchg
mov
jp
es
scas
shll
mov
mov
push
sti
and
fisubrl
hlt
mov
loop
mov
dec
or
add
mov
outsb
stos
out
mov
test
fs
int3
cmp
int
repnz
movups
jns
xlat
in
mov
jb
fldl
dec
cltd
push
outsb
sub
inc
or
mov
fldt
data16
cltd
sub
scas
sbb
jo
cs
sbb
cmp
into
ja
sbb
and
jg
icebp
pop
imul
je
addl
pop
and
inc
nop
mov
mov
outsb
outsb
xor
scas
push
sbbl
add
pop
mov
enter
movsb
roll
sahf
ror
int3
jecxz
cmp
mov
nop
in
xchg
push
inc
movsl
inc
mov
cmp
in
cmp
pop
mov
leave
xchg
dec
add
loopne
data16
fwait
outsl
mov
sub
jns
jle
push
inc
jnp
mov
mov
pop
scas
xchg
call
mov
cmp
stos
movsb
inc
push
lcall
mov
ret
xchg
add
ja
push
mov
test
testb
mov
mov
xchg
mov
gs
mov
cmp
mov
inc
aam
and
inc
imul
aas
pop
xchg
stos
pop
mov
xor
lods
push
ds
outsb
pop
rorl
ficoml
iret
stos
adc
gs
ret
bound
gs
xchg
mov
loopne
les
stos
in
jae,pn
xlat
enter
add
stos
rcll
mov
inc
mov
and
bound
iret
push
push
dec
les
arpl
jle
movl
gs
adc
xor
lret
sahf
dec
inc
arpl
lcall
insl
mov
sub
sar
jb
adc
dec
push
mov
dec
mov
lods
test
push
cli
fmul
add
push
xchg
data16
dec
ljmp
shr
sbb
lret
inc
sti
xor
in
stos
fsubrs
mov
ret
xor
mov
add
lret
cld
mov
icebp
adcb
pop
mov
xor
sbb
cmp
shll
lahf
fildl
xor
xlat
or
outsb
jnp
mov
dec
mov
movsl
ss
fs
or
jmp
int3
add
lds
ja
xchg
jl
shlb
adc
jmp
test
mov
repnz
mov
ds
into
sub
subl
cld
dec
inc
xor
sahf
jl
mov
mov
mov
loop
inc
jae
sbb
pop
pop
mov
mov
xchg
pop
mov
test
mov
in
mov
test
testl
jp
jns
lods
sub
lea
frstor
shlb
dec
dec
xchg
lret
add
iret
sar
pop
mov
lods
xchg
push
int3
adc
add
in
cmpsl
pusha
iret
scas
outsl
scas
enter
inc
sbb
sub
push
movsb
mov
sarb
fmul
mov
pop
cmpb
rorb
sub
cmp
js
pusha
fstpt
dec
adc
mov
call
push
sbb
xor
or
dec
jge
sub
test
mov
scas
les
xchg
in
pop
inc
mov
push
pushf
cmp
and
mov
inc
loope
sbb
pop
loope
add
cli
data16
movsb
les
inc
mov
daa
dec
xor
scas
pop
cli
out
aam
cmp
aad
stos
push
jo
pop
sti
mov
and
divb
push
mov
test
sti
int
fwait
xchg
push
es
xchg
pop
pop
xor
push
xlat
test
imulb
es
clc
push
icebp
mov
dec
icebp
add
jp
xor
adc
xlat
cmp
lds
test
and
or
mov
je
dec
adc
ficomps
cmc
push
stos
xor
shll
sub
jnp
sarl
sahf
addr16
xlat
jbe
popf
jne
mov
test
repz
in
pusha
arpl
dec
les
lret
pop
xor
push
jne
popa
jns
hlt
xor
leave
lcall
adc
lahf
leave
jae
ja,pn
decb
outsl
mov
xor
jo
js
sarb
push
ss
sbb
pop
scas
loope
jne
sbb
adc
and
loop
test
aad
or
negb
xchg
jl
inc
in
cmp
mov
sub
ja
cmpsb
imul
sbb
shll
lret
loop
ds
ljmp
cmp
push
mov
popa
pop
push
inc
fimuls
in
daa
imul
cmc
stos
sub
adc
sbb
mov
xchg
in
and
or
dec
jmp
adc
xchg
or
sti
sub
lahf
sbb
xchg
mov
fstpt
sbb
js
aaa
xchg
pop
inc
cmp
dec
out
test
pusha
adc
imul
mov
xchg
add
mov
rol
jo
or
inc
imul
push
in
inc
loope
lret
jecxz
mov
lock
idivb
cmpl
gs
hlt
adc
shrb
xor
push
sub
mov
cltd
xchg
pushf
sarb
mov
xlat
and
sbb
sub
jae
shr
sub
adc
inc
pushf
push
dec
cli
mov
cmp
mov
aam
gs
sbb
sysret
add
xchg
or
push
in
out
adc
push
rorl
sub
leave
pop
orl
comiss
and
insl
cmp
xor
mov
adc
ret
add
pop
push
sub
mov
aas
dec
cmp
jge
or
push
push
sub
fucom
xor
mov
je
add
adc
test
add
push
out
dec
cmpsb
mov
orl
mov
mov
aas
mov
iret
pop
outsb
or
push
jle
faddl
or
idiv
pop
and
add
pop
sbb
mov
out
sbb
cmp
jle
mov
xor
repnz
out
jb
test
mov
push
xor
fdivl
pop
jmp
dec
into
je
adc
adc
and
jb
iret
cltd
dec
mov
push
mov
fisubl
test
scas
insl
lods
int
mov
aam
rcr
or
xchg
das
mov
xchg
cmp
pop
je
xchg
mov
sbb
ljmp
sbb
out
ljmp
mov
icebp
ret
int3
xor
fdivp
lret
hlt
cmp
stc
leave
sbb
mov
pop
xor
inc
push
mov
jbe,pt
dec
ret
out
inc
idivl
dec
test
dec
push
inc
fs
aam
xor
dec
push
into
js
daa
cs
mulb
push
mov
test
lock
dec
push
insb
fsubs
icebp
adc
loop
movsb
cld
sbb
shl
mov
cmpsl
add
pusha
push
xchg
and
add
mov
push
mov
stos
mov
mov
xor
inc
cmpsl
stos
mov
sub
pop
scas
icebp
ss
int
call
sbb
xchg
dec
mov
loopne,pn
add
adc
aam
dec
cs
dec
enter
faddl
aam
xchg
sbb
sub
test
pop
imul
inc
loopne
stos
mov
lds
test
aam
fsts
ds
pusha
pop
cld
mov
sbb
or
xchg
fwait
addl
dec
cmpsl
cli
jnp
push
mov
jp
nop
enter
insl
push
clc
jno
icebp
cmp
jl
enter
dec
push
inc
dec
out
leave
call
mov
in
ljmp
and
stos
fidivrl
or
pusha
or
bound
addr16
push
das
cmp
push
mov
inc
sbb
sbb
ret
push
rcr
imul
mov
repnz
das
cmp
jmp
out
add
mov
aam
aad
outsl
insb
jno
or
mov
scas
push
cld
cli
jg
data16
mov
ret
jno
outsl
jno
sub
mov
jnp
fsubrs
loope
xchg
test
hlt
mov
imul
lcall
jb
daa
cmp
inc
add
mov
int
imul
adc
push
aaa
lods
jl
jo
scas
cmp
mov
rol
orb
insb
imul
repnz
rol
jb
pop
jno
dec
xor
int3
in
sub
sbb
and
scas
add
iret
sar
add
mov
push
sbb
inc
xor
mov
or
in
fisubl
cmp
aad
cmc
mov
sub
jo
xchg
mov
mov
jecxz
push
or
test
or
mov
push
lock
pop
dec
lret
in
aad
cmp
mov
sbb
inc
fistpll
clc
mov
lahf
add
stc
jmp
jecxz
mov
add
xchg
pop
lret
mov
sbb
shlb
cltd
sbbb
fs
lods
mov
movnti
in
push
xor
and
add
mov
add
ret
imul
int
or
push
push
call
lcall
mov
ret
mov
sub
out
xchg
mov
scas
mov
or
pop
pop
add
jl
mov
fidivrs
shlb
xor
push
mov
jmp
cmpsl
or
mov
lea
dec
sti
jo
and
dec
andl
jmp
les
pop
pop
fbld
mov
das
fmull
adc
and
test
hlt
fidivrl
mov
dec
rolb
ret
into
sbb
in
mov
xchg
movsl
fldenv
xor
imul
imulb
cmpsb
jno
sub
shll
push
mov
cmpsb
inc
loopne
adcb
and
xchg
int3
bound
addr16
lods
add
push
sbb
jp
adc
mov
sub
mov
pop
xlat
sti
test
jg
xor
inc
lcall
hlt
in
xchg
pusha
imul
mov
sahf
mov
mov
sbb
sub
adc
in
repnz
lea
lahf
pop
mov
mov
or
push
dec
in
xor
pop
out
inc
dec
jne
or
jno
cmpsl
xor
dec
ret
and
out
test
lcall
les
mov
jp
xor
je
cmp
arpl
adc
push
clc
jb
or
pushf
cs
gs
lcall
leave
xchg
jle
cwtl
das
shr
sub
rcrb
addr16
jl
dec
fisttps
fwait
add
push
sbb
cmpsb
add
neg
popf
in
outsb
or
push
jle
cmp
decl
popa
sbb
sbb
cwtl
mov
cmpsb
mulb
test
inc
pop
fldcw
insl
arpl
lds
or
test
mov
xchg
adc
popa
push
xchg
repz
hlt
aaa
cwtl
or
sbb
inc
push
sub
scas
adc
adc
inc
mov
xchg
push
stos
push
and
fucom
mov
xchg
lods
push
lahf
cmp
xchg
cmpsl
mov
mov
lcall
push
or
mov
mov
push
lcall
push
dec
fwait
in
cwtl
lret
jne
inc
or
pop
aas
in
das
sub
xor
mov
into
das
adc
inc
jo
mov
dec
shlb
outsl
outsb
xor
aas
sbb
jb
rcrb
xchg
ret
jno
fsubrs
popa
mov
jg
scas
and
pop
addr16
outsl
rolb
ret
jns
popf
inc
and
adc
xor
fisubrs
add
add
mov
xchg
test
bound
addr16
mov
mov
add
push
aad
daa
sbb
cltd
jp
aas
xor
test
inc
pop
cmp
lahf
mov
sub
arpl
jecxz
addr16
movsb
ss
jnp
shll
xor
mov
aaa
sbb
pop
fnstsw
rorb
jge
xchg
xchg
frstor
xor
jbe
add
sub
jge
arpl
or
mov
push
lcall
xchg
mulb
bound
dec
sub
rorl
test
cmp
push
fs
sub
mov
repz
sbb
shrl
iret
pop
or
dec
stos
ret
int3
sbb
pop
out
movsl
out
push
mov
or
push
xchg
loop
in
xor
inc
inc
mov
cmp
hlt
xor
out
add
inc
pop
arpl
into
mov
mov
xchg
pusha
incb
fs
sahf
clc
mov
jl
mov
bound
push
sub
lock
add
cmp
jno
jae
pop
xchg
sbb
gs
icebp
push
mul
movsl
jl
pop
out
jb
xchg
push
inc
pop
fcmove
jp
fnstsw
cmp
popf
adc
or
and
les
push
cwtl
push
pop
push
aas
dec
pop
or
jg
movsl
sti
mov
ss
or
xor
insb
outsb
adc
sar
add
lahf
icebp
jnp
ljmp
ds
pusha
adc
push
mov
lock
out
xchg
push
sbb
das
add
mov
add
enter
scas
call
into
xor
aaa
push
lret
cli
or
lods
mov
jle
xchg
sahf
rcl
lods
fnstsw
loop
inc
pop
popf
ret
pusha
es
sbb
ds
inc
sbb
jle
out
or
xor
mov
jne
pop
iret
mov
cmp
cmpb
mov
and
jns
jbe
pop
int
pop
test
and
and
mov
pop
js
cs
pop
daa
jmp
fidivs
es
inc
push
jo
or
in
or
fisttps
in
sub
movsb
movsl
cmp
and
cmpsb
std
nop
pop
es
adc
add
addl
ja,pt
mov
in
jae
ss
and
sub
push
cmpsl
dec
sub
add
pop
shll
add
pop
scas
jl
xor
icebp
add
fcmovne
faddp
dec
pop
pop
jbe
mov
rcrl
inc
cmp
pop
mov
movsl
lods
jg
dec
cltd
ret
and
and
adc
mov
adc
inc
test
mov
cltd
xchg
xchg
sbb
enter
adcb
std
cmc
and
sahf
push
mov
push
les
push
pop
inc
in
arpl
into
push
xor
jge
pop
int
loop
mov
cmp
or
out
data16
out
xchg
jmp
pop
inc
add
lcall
scas
sub
pop
stos
adc
jnp
cmpl
jae
add
mov
in
fimuls
fnsave
dec
lds
aam
mov
mov
push
mov
int
lock
jmp
and
aam
mov
ss
repz
jae
lods
and
clc
cltd
adc
cmp
mov
sub
hlt
sahf
sub
ret
sub
data16
outsb
mov
push
hlt
push
mov
out
push
sbb
out
xchg
lret
repnz
mov
push
pop
adc
jbe
mov
cmp
push
sub
int
mov
or
adc
sbb
faddl
add
adcl
mov
jnp
pop
divl
xchg
ret
lea
je
add
pop
int3
push
mov
or
push
pop
js
enter
mov
flds
icebp
and
rcll
push
fdivs
pushl
nop
mov
ret
sub
adc
cld
addl
pop
ja
push
lea
xchg
pop
fiaddl
mov
mov
jae
in
push
and
dec
insl
int3
je
sub
das
and
sbb
xor
stos
call
pop
xchg
stos
mov
lea
hlt
jle
mov
jb
push
add
inc
xor
aam
pop
sub
or
test
mov
std
outsl
je
in
jns
xchg
ret
in
cmp
scas
daa
andb
addb
mov
jno
jno
mov
jp
test
inc
add
mov
cmpsl
stos
push
stos
or
and
mov
mov
fsubrl
pop
xchg
mov
jge
imul
leave
call
push
push
push
pop
push
hlt
cmp
add
rol
mov
test
mov
lods
mov
cmp
pushf
aad
sub
mov
addl
fwait
or
cmp
pop
cmp
add
adc
adcb
mov
bswap
xchg
xor
push
mov
push
outsl
sbb
add
roll
aam
ud1
sub
clc
lret
xchg
cwtl
imul
jne
sahf
inc
pop
push
test
jns
rcr
loop
pop
pop
jns
inc
mov
test
data16
inc
fucomi
imul
jno
xor
in
lds
cld
inc
divb
cld
sub
inc
fmull
or
fwait
sarb
aaa
and
inc
push
push
call
xchg
mov
inc
or
es
inc
paddsw
fistpll
xchg
xchg
popf
daa
cld
mov
xchg
push
push
pop
cmpsb
mov
fcmovb
rcll
xor
sub
leave
xor
push
jg
ds
in
loopew
adc
push
xor
repz
hlt
mov
movsb
cltd
push
and
cmp
dec
mov
mov
hlt
in
stos
dec
mov
test
aaa
sti
aaa
cwtl
mov
call
sub
dec
push
xchg
push
popa
pop
or
sbb
adc
dec
inc
dec
ljmp
inc
xchg
shll
sahf
lret
fwait
ljmp
dec
push
jge
fdivrs
lret
jmp
xor
pop
mov
jmp
adc
inc
xchg
inc
cmpb
nop
cltd
mov
addr16
call
push
sahf
push
and
xchg
push
jno
mov
dec
and
int
sbb
mov
ljmp
mov
fldcw
mov
sbb
adc
inc
out
xchg
rorb
es
lahf
pop
xor
pop
cmp
push
inc
or
setge
xchg
sub
ret
push
mov
add
sbb
loope
in
outsb
add
push
add
loopne
or
mov
movsb
pop
cmp
fld
iret
sti
xor
pusha
cmc
or
lahf
test
loope
lods
jnp
mov
inc
int
in
das
dec
and
js
mov
push
fsubrs
cmpsb
lahf
push
aaa
mov
movsb
add
lcall
cli
loopne
pop
daa
popl
jl
mov
cmp
subb
hlt
xchg
push
fadds
xor
popa
pop
xor
cmp
out
xchg
or
inc
sbb
sub
sbb
lods
xor
dec
fimuls
jl
add
cli
jmp
push
and
les
aad
addb
insl
mov
mov
xchg
jo
mov
icebp
inc
mov
adc
mov
out
pop
enter
xchg
imul
and
data16
dec
or
mov
push
sub
orb
or
ljmp
loop
test
mov
fdivrl
inc
daa
cmc
pop
xor
sbb
mov
adc
ljmp
push
je
push
call
test
inc
fiadds
out
sbb
int
into
adc
sahf
mov
adc
push
int3
mov
dec
xchg
out
cmpb
test
xchg
out
pop
shlb
pop
push
nop
enter
out
imul
lea
mov
xor
stos
dec
jl
mov
pop
scas
in
movsb
in
movsl
xor
mov
or
pop
xchg
cltd
les
cmpsl
inc
pop
or
cmp
adc
aas
pop
pop
dec
add
fcoms
dec
dec
mov
xlat
ret
push
fwait
iret
inc
sbb
incb
daa
mov
mov
dec
mov
gs
cmp
out
fimuls
mov
mov
jbe
cmp
ljmp
mov
xchg
insb
adc
and
scas
sbb
mov
inc
pop
dec
cmp
adc
inc
or
fbstp
inc
pop
cmc
cmp
roll
cmp
ret
add
mov
xor
ljmp
shll
xor
rcr
js
and
sahf
aam
mov
loopne
pop
popa
mov
mov
sti
in
int
popf
mulb
or
add
in
mov
adc
inc
cmpsl
fdivl
test
sbb
xor
mulb
gs
xchg
cmpsl
rcll
ds
push
lods
ja
mov
aad
insb
jg
in
jg
push
les
adc
int3
push
fadd
negl
adc
sti
mov
jle
or
cmp
jge
shrl
ss
rcrb
add
sbb
add
into
lret
movsb
addr16
ficompl
call
lcall
jp
inc
outsl
or
rol
sub
xchg
nop
cmp
jnp
loop
negl
outsl
clc
jbe
loope
vpcmpeqw
xor
hlt
rorb
or
and
sbbb
mov
inc
jns
icebp
in
add
out
icebp
imul
sub
sub
pop
jge
dec
aaa
inc
xor
jp
jns
push
jecxz
jne
cmp
mov
jns
clc
dec
leave
sub
cmpb
add
repnz
fsts
add
fs
lahf
add
cmp
or
pop
sub
decl
dec
mov
outsb
pop
sub
inc
push
inc
push
fnsave
repnz
fldcw
sub
ficoms
xchg
xor
loope
dec
push
scas
int
jno
arpl
addr16
or
daa
xchg
cmp
imull
xor
sbb
inc
sub
ss
ljmp
push
adc
dec
es
out
cmp
xchg
fistpll
sbb
add
cmp
insb
jae
dec
sub
sbb
sub
mov
notl
subl
xchg
jae
xchg
dec
fneni(8087
jnp
xchg
fidivrl
jp
dec
jo
xor
xor
jecxz
in
mov
xor
mov
mov
pop
push
sbb
loopne
lcall
movsb
decl
inc
cmp
fcoml
and
sbb
aas
les
sbb
inc
inc
bound
inc
jne
and
ljmp
pushf
je
scas
or
mov
xchg
jno
mov
pop
lods
cmp
aad
sbb
insb
pusha
test
xchg
in
mov
cmpsl
movsb
gs
add
push
movsl
leave
adcl
inc
xor
adc
and
pop
test
insl
dec
xchg
mov
lock
out
xor
and
repz
hlt
mov
loopne
push
jp
jno
inc
push
movsl
xor
bound
in
les
popa
mov
mov
add
adc
aas
les
js
mov
scas
pop
xchg
xlat
jns
jns
push
cmpsb
loope
mov
addr16
mov
popf
fmul
test
out
test
lds
loopne
pop
add
mov
std
mov
push
sarl
inc
icebp
lock
sub
mov
push
insl
fiaddl
ja
push
shrl
iret
push
dec
sbb
sbb
lcall
push
popf
sbb
sub
mov
cld
ret
cmpsb
sbb
xor
icebp
mov
test
jae
xchg
mov
mov
aas
rol
test
into
xlat
pop
xor
mov
push
fistl
rcrl
bound
out
movsl
adc
push
or
xor
ret
inc
xchg
push
jbe
lea
cmp
test
add
lock
cmp
xor
fcmovnu
sub
fs
push
pop
cmp
pop
mov
stos
test
fsubr
out
mov
divl
scas
cmp
fcom
scas
push
xchg
mov
and
pusha
mov
and
jae
scas
pop
out
hlt
aad
mov
add
xacquire
in
mov
aam
cmpsl
iret
pop
out
adc
push
mov
add
cmp
cmc
xor
aad
xchg
loop
inc
test
test
and
mov
or
or
aaa
or
nop
jbe
sti
arpl
cmc
data16
mov
scas
jle
adc
rorb
je
dec
test
lock
jl
push
cmp
shll
nop
xor
xchg
and
les
aam
jo
cmp
test
bound
jae
lahf
add
cs
repz
adc
push
test
inc
or
sub
int
dec
mov
sbb
xor
jbe
ljmp
or
pop
fwait
lret
cmc
rcl
sub
adc
jne
arpl
mov
mov
xchg
daa
loope
and
sar
cmp
ss
test
sub
push
scas
push
dec
sti
inc
fcomps
mov
jns
cmp
xchg
fsts
out
cmp
push
adc
int
xchg
or
mov
addr16
into
add
push
jne
test
and
movsb
push
sub
cmovns
pop
inc
cmp
mov
ret
leave
ret
cwtl
push
sbbb
aad
pop
mov
cli
sub
adc
fwait
inc
add
inc
popf
mov
movsl
lock
sub
mov
jnp
xchg
pusha
xor
pop
pop
xchg
gs
push
push
cmp
or
lea
mov
or
test
out
ror
shrb
rcl
mov
fadds
inc
in
adc
ss
rclb
jb
and
jno
or
pusha
out
mov
inc
call
cmpsb
out
movsb
dec
mov
xlat
xor
lods
popa
sbbb
pop
xor
cmc
ror
movsl
sbb
shlb
xchg
xlat
adc
cld
mov
icebp
mov
jle
fidivrl
xor
std
sub
mov
push
xor
and
cmp
fnstsw
int
xchg
jno
xor
cwtl
sub
pop
inc
or
mov
pop
cli
and
adc
sbb
inc
fwait
xor
scas
push
jns
outsl
mov
mov
cmp
add
movsb
aam
or
cmp
loopne
xor
mov
xlat
pop
adc
rclb
add
mov
ret
pop
cmovae
dec
hlt
test
insl
mov
out
loop
repz
ja
filds
test
pop
dec
xchg
mov
fs
inc
cmpsb
mov
mov
dec
mov
into
roll
in
xlat
popa
lea
xchg
outsl
cld
xchg
mov
out
or
int
fmull
aas
inc
mov
sbb
cmp
sbb
lds
fsubs
les
dec
push
outsl
jg
sbbl
jmp
shld
cmp
push
pop
call
ret
lods
popf
repz
ja
iret
jne
push
cs
sbb
sarl
repz
jle
pop
add
divb
inc
push
jecxz
jmp
push
mov
add
push
ret
cmp
pop
lret
dec
ja
les
inc
das
jns
pushf
cltd
scas
xlat
cs
cmp
pop
cmp
dec
cmp
jge
and
cli
rorb
and
pop
fistpll
insl
push
mov
lea
pop
rolb
pop
mov
fldt
adc
adc
mov
lea
cmpsb
push
cld
rcrb
and
xor
lds
sub
mov
cmp
imul
inc
es
mov
dec
idivl
and
outsl
push
sub
cld
dec
sbb
out
lods
in
xchg
lret
jnp
inc
push
sbb
ret
cmp
sub
mov
inc
cmpsb
nop
lock
mov
jg
scas
ret
xchg
fs
outsb
fidivrs
repnz
jl
mov
ljmp
lcall
popa
es
jae
cltd
push
inc
inc
xchg
mov
sub
mov
pop
jmp
pop
inc
jne
or
in
lahf
cmp
sub
jmp
mov
cmp
sub
fwait
inc
bound
add
push
lret
jb
and
mov
mov
mov
xchg
sub
cmp
cwtl
fdivr
repnz
sbb
xlat
xor
jnp
pop
pop
imul
mov
adc
cmp
dec
fsubrl
jge
loopne
cwtl
dec
sub
xchg
push
sub
xchg
pop
in
shlb
jbe
push
in
or
or
cltd
ja
cs
add
pop
sbb
lds
sbb
rorl
fnstenv
icebp
mov
sub
push
jmp
insl
jns
aam
push
jmp
pop
fimull
adc
sub
das
dec
xlat
sbb
int
cmp
mov
aad
xchg
clc
push
mov
inc
mov
pusha
test
inc
dec
scas
sar
mov
xchg
shrb
jp
loopne
jo
sti
adc
test
lcall
fldenv
xchg
gs
inc
adc
and
dec
mov
push
mov
cmp
cli
jl
sbb
xor
dec
imul
add
das
int3
insl
pop
push
and
sbb
call
test
xchg
rcrb
shll
fbld
cli
rcr
add
leave
das
add
out
addr16
rol
mov
dec
cmp
cmc
push
jns
pop
pop
lods
mov
aaa
stc
push
dec
icebp
jle
sbb
mov
call
adc
mov
movsl
mov
push
push
or
xchg
mov
sbb
sahf
cmpsl
and
push
mov
push
or
bound
adc
add
int
movsl
push
mov
pop
add
cmp
and
inc
repz
pusha
stc
or
mov
or
mov
xchg
gs
mov
fldl
adc
dec
xlat
or
add
repnz
inc
xchg
and
mov
mov
sbb
push
fsub
dec
stos
add
adc
jb
dec
and
mov
and
sub
pop
ftst
cmp
insb
jle
fistpll
aam
push
arpl
push
mov
rolb
testl
sub
sarb
call
mov
ds
out
push
repz
in
jg
inc
inc
adc
pop
adc
pop
xlat
shll
adc
dec
gs
ss
sti
pcmpgtb
jmp
enter
in
mov
mov
outsl
loopne
mov
loope
cmp
addr16
mov
sub
rcrl
lea
vpunpcklwd
or
testb
sti
push
mov
fcomip
cmp
lahf
mov
add
jo
push
mov
or
scas
lcall
mov
cmp
arpl
mov
aad
mov
dec
xlat
insb
jb
dec
pop
xor
inc
xchg
in
inc
bound
scas
mov
mov
xchg
jb
imul
ffreep
adc
mov
add
cmp
int
inc
and
or
dec
mov
mov
or
push
inc
jbe
in
pop
add
xor
fnstsw
addr16
xchg
fisttpll
pop
sub
addl
scas
dec
sub
jp
cmp
dec
jbe
loopne
mov
je
addr16
sbb
xor
jb
push
push
jmp
jnp
in
sbb
add
das
loop
popa
adc
hlt
aaa
dec
sub
fnstcw
imul
and
cmp
das
adc
lret
xor
push
mov
inc
xchg
cmc
jg
ror
bound
int
push
cltd
cld
push
mov
jno
inc
stc
rorl
inc
fldl
es
imul
add
mov
sbb
stos
inc
imul
call
pop
and
fs
and
or
rcl
adc
leave
xor
data16
mov
call
daa
ret
int3
xlat
pop
mov
add
pop
int3
nop
int
movl
pop
push
or
call
push
jg
cs
test
lds
lret
insb
push
xorl
popf
xor
or
cld
pop
cmpsb
daa
lahf
out
clc
sub
ja
mov
lock
sbb
push
pop
fdivl
into
lds
add
xchg
jae
mov
push
xor
sbb
mov
sbb
addl
pop
fcmovne
dec
push
shr
mov
lcall
sbb
inc
xchg
rorl
je
inc
adc
nop
popa
lret
clc
pop
bound
call
inc
jecxz
sbb
lret
xor
mov
jp
mov
xor
cltd
add
mov
lods
push
pop
cld
ljmp
mov
lock
in
js
mov
cwtl
stc
loope
push
pop
lahf
fwait
push
popf
dec
or
push
push
gs
push
pop
pop
xchg
adcl
dec
nop
loop
or
push
addr16
in
movsb
sti
int3
outsl
and
and
popa
push
mov
loop
outsl
out
sbb
mov
andl
xorl
mov
mov
out
imul
mov
pushf
repz
adc
in
pop
cmp
fcoml
fisubs
in
push
push
pop
mov
cmpsl
roll
aad
jge
adc
call
ds
push
dec
cmp
out
inc
sub
jp
aas
cltd
pop
or
icebp
inc
leave
std
int
int3
shr
jbe
jmp
cmpsb
imulb
lock
dec
push
notb
push
ljmp
loop
xchg
ljmp
or
in
jp
call
in
mov
inc
dec
xchg
in
inc
in
and
insl
mov
xlat
add
xor
int
insb
cmc
test
mov
mov
jg
mov
js
sub
push
aas
or
push
test
add
jne
mov
scas
or
fs
inc
imull
gs
mov
add
repz
repnz
repnz
movsl
adc
adc
stos
out
das
fimull
push
pop
inc
int3
lods
loope
cmp
push
push
les
lret
jb
arpl
or
sbb
xchg
pop
add
test
pop
push
mov
shrl
lods
out
push
adc
mov
flds
mov
inc
jmp
inc
pusha
loope
icebp
mov
addb
ja
out
mov
imul
jae
stos
cmc
cmp
add
add
push
push
or
mov
inc
out
dec
sub
and
or
mov
and
xor
mov
int3
mov
bswap
adc
cmp
xor
fimull
inc
insl
outsl
std
push
or
jne
in
das
ds
cmp
out
sub
sub
stos
mov
mov
into
sub
in
pop
mov
add
jmp
adc
in
xchg
mov
inc
inc
shl
xor
sbb
mov
sahf
sbb
jnp
pusha
in
cmpsl
seta
adc
mov
push
mov
mov
inc
push
shlb
inc
jmp
mov
or
push
add
ja
sub
pop
jo
push
push
jns
mov
je
loopne
and
xor
je
sub
pop
nop
ja
add
and
adc
jns
imul
mov
rolb
sub
mov
pop
sbb
popa
ljmp
add
dec
push
mov
and
hlt
mov
adc
xchg
out
or
imul
icebp
push
dec
out
sbb
shrb
pop
insl
inc
popa
roll
int
dec
imul
mov
pop
ret
int
sub
mov
adc
and
sbb
pop
es
xchg
mov
jno
dec
jl
xor
dec
pop
icebp
and
test
jae
mov
lock
jae
icebp
jns
inc
jne
cld
sbb
pop
xor
mov
and
test
cmp
orl
mov
insb
lea
push
fsts
and
out
out
nop
andl
mov
js
cmp
adc
adc
lock
jo
les
mov
adc
movl
or
in
int3
nop
dec
movsb
fildl
cmp
mov
add
jl
divl
sar
jb
rcrl
lods
push
cltd
retw
fs
jmp
mov
jmp
pusha
arpl
aad
jnp,pn
inc
push
std
lods
inc
push
pop
call
aas
mov
or
js
mov
movsl
bound
xchg
xor
pop
fwait
outsl
test
xlat
pushf
test
cltd
faddl
cwtl
mov
jbe
push
out
cli
pop
xchg
in
mov
fisttps
cmp
inc
rol
dec
test
ss
and
sbb
iret
xchg
scas
outsb
movsb
mov
cmp
cmc
xor
push
fiadds
xchg
jmp
ja
clc
mov
pop
mov
pop
lds
gs
lods
daa
fisubs
add
das
xor
or
xorb
push
mov
imul
jge
and
jecxz
pop
scas
pushf
pop
pushf
push
inc
std
inc
mov
and
cs
cmpsb
sbb
mov
outsb
xchg
sar
and
addl
mov
mov
pop
stc
faddl
add
sbbl
idiv
pop
add
jne
rcll
dec
inc
sahf
shlb
push
and
adc
xchg
pop
incl
xor
loop
xlat
jp
dec
mov
adc
mov
das
fldcw
hlt
pushf
cwtl
mov
inc
pop
decl
xlat
or
adc
jne
sbb
test
dec
xchg
pop
inc
movsl
lahf
aaa
push
xor
and
jbe
into
ja
xchg
pushf
push
jae
in
mov
mov
cmp
es
in
popa
mov
sbb
in
pop
jns
xchg
cmp
insb
dec
out
mov
xorl
mov
lock
decb
fmuls
mov
in
dec
movsb
addr16
in
push
mov
test
inc
sbb
dec
andl
lods
inc
mov
test
icebp
cwtl
mov
and
int3
fcmovu
outsl
ret
xchg
cmpsb
add
fildll
bound
add
jmp
cmp
roll
outsl
lahf
adc
lds
andl
inc
jae
addl
cmp
inc
jno
sub
cld
lahf
fwait
push
shll
or
repnz
adc
dec
fstl
mov
stos
outsb
jmp
insb
inc
stos
insl
cmp
es
adc
loop
mov
mov
adc
call
sbb
pusha
mov
aas
xor
jb
xchg
dec
sbb
mov
outsl
test
xchg
sub
pusha
push
or
repz
or
mov
call
cmp
mov
mov
arpl
mov
dec
xchg
ds
stos
pushf
decl
push
pop
cmpsb
mov
outsl
sub
and
cltd
dec
xor
lahf
je
cmp
add
and
enter
and
fs
insl
cwtl
xor
jg
gs
ficoml
push
and
inc
hlt
sub
mov
add
out
and
nop
fildll
test
lock
daa
clc
stos
sub
leave
xchg
decb
test
xor
add
rcll
cmc
repnz
push
pop
in
enter
lds
push
push
push
push
xchg
sbb
xchg
cmp
cli
lahf
cmp
sub
std
hlt
jl
stos
push
stc
fs
mov
jne
mov
push
addr16
adc
mov
xchg
xchg
and
jno
test
bound
mov
mov
leave
inc
in
sbb
push
jp
push
lret
sbb
add
ja
orl
cld
xchg
lret
rclb
dec
rolb
cmp
fstps
test
ret
and
fwait
lds
aam
movsb
pop
and
and
or
imul
sbb
xor
sahf
jg
pop
adc
inc
loop
or
xor
clc
sub
or
sti
test
sub
inc
icebp
or
or
xor
push
jnp
cmp
loope
rolb
jae
adc
xor
add
ret
sbb
add
cmpsb
push
inc
movsl
ds
sarl
add
call
popf
xchg
enter
leave
movsb
outsb
outsl
xchg
sub
lahf
and
and
gs
or
pusha
out
or
jo
repz
inc
xor
sbb
icebp
mov
ret
mov
pushf
test
inc
je
es
inc
movsb
sub
xor
aas
iret
test
jp
cmp
or
pop
movsl
xor
push
aaa
imul
mulb
adc
shll
mov
lahf
jecxz
xor
push
dec
cmc
inc
fsubrs
rcr
inc
out
add
and
cwtl
lahf
sub
mov
adc
repz
add
enter
lock
xchg
lcall
shr
mov
loopne
aas
inc
mov
inc
lods
xchg
ret
in
lahf
mov
inc
jg
sbb
filds
mov
mov
test
jb
xlat
test
mov
and
sub
pop
cmp
mov
pop
into
xlat
faddl
ss
test
and
jmp
and
or
and
arpl
push
mov
inc
stos
int
jge
rcrl
lcall
jo
cmp
test
lcall
adc
pop
bound
jp
outsl
push
cmp
sahf
dec
pop
or
jl
in
dec
inc
or
sub
mov
cmc
clc
jbe
fcmovnb
clc
push
push
push
adc
push
lret
pop
int
icebp
mov
push
mov
movsb
sub
or
add
sub
add
mov
dec
jl
or
dec
inc
test
adc
sub
add
andb
mov
and
push
pop
ret
mov
cmc
pop
pop
xor
stos
add
mov
dec
insl
xlat
or
or
sahf
add
icebp
dec
jecxz
int3
rclb
push
push
into
or
insb
aaa
pop
pop
sub
dec
mov
lods
pusha
push
loop
jo
ret
and
pop
cld
lds
inc
ja
fs
add
mov
add
pop
outsb
outsl
gs
pushf
int
cmp
and
push
dec
xchg
loope
inc
inc
mov
adc
nop
pushf
out
xchg
icebp
sub
dec
imul
sbb
cmc
stos
cmpb
pop
jl
out
outsl
sub
pop
shlb
shl
mov
or
pop
sub
fwait
mov
dec
xchg
cmp
sub
nop
aaa
inc
mov
into
mov
push
call
mov
cmp
dec
mov
or
or
sbb
lods
dec
inc
cmc
aas
imulb
gs
out
fcoml
adc
call
xchg
fisubrs
inc
fldt
mov
mov
and
cmp
iret
inc
insb
imul
not
or
sub
jle
test
sub
jmp
dec
aas
sub
out
xor
shll
fisubs
push
xchg
add
add
dec
jmp
cmp
add
insl
pop
gs
popf
dec
cmp
mov
jbe
pushf
add
lret
ret
lea
dec
dec
mov
jecxz
hlt
shrl
aad
out
dec
sbb
sahf
sub
out
sahf
bound
jbe
inc
sbb
rcll
cmp
sbb
mov
xchg
imulb
je
xchg
cld
mov
dec
and
dec
sbb
lahf
sub
dec
cmp
dec
jmp
loopne
arpl
mov
hlt
icebp
mov
xchg
call
je
test
jo
jg
dec
shrl
outsb
mov
test
in
in
hlt
jp
cmp
bound
shlb
sbb
fsubs
xchg
cmc
jo
hlt
inc
or
fstpt
sahf
cwtl
cmp
loopne
shlb
mov
dec
jl
inc
cmpsb
jle
scas
aas
out
adc
shl
mov
mov
xchg
dec
mov
mov
mov
mov
cmpsb
inc
imul
sahf
and
or
lds
xchg
jp
sti
enter
xchg
lcall
leave
push
pop
hlt
int3
mov
cmc
pop
shrb
mov
sbb
add
sbb
sub
std
clc
rorl
xchg
cmp
enter
dec
pause
add
jle
leave
inc
jno
adc
je
xchg
cmpsl
hlt
aaa
outsl
xlat
jecxz
std
test
push
mov
pusha
xchg
inc
sub
adc
nop
mov
mov
mov
outsb
dec
pop
mov
push
inc
repnz
aam
pop
inc
inc
cmp
jb
dec
cmp
cli
push
fdivs
dec
xor
pop
push
outsl
int3
xchg
mov
into
add
fcomi
sbb
ret
push
mov
sub
pop
icebp
lret
inc
jl
cmpl
int
pushf
mov
lods
pop
ljmp
mov
mov
mov
add
das
sti
add
jbe
mov
inc
fucomp
mov
add
mov
in
inc
aad
xchg
cmpsb
adc
popf
cmpsb
sbbb
ljmp
scas
fildll
cmpsb
insl
ljmp
sarb
push
mov
mov
popf
or
mov
cmp
aad
inc
inc
mov
pushf
in
xchg
div
push
mov
out
dec
push
xor
in
pop
xor
in
scas
push
test
mov
jae
xchg
decb
and
jg
lds
es
cltd
pushf
push
pop
and
rcrb
outsb
mov
je
dec
adcb
pop
mov
jne
ud0
cmpsb
stos
cmpsb
cld
bound
orb
jbe
inc
pop
jg
and
leave
adc
fistl
mov
insl
add
lea
pop
mov
mov
aas
inc
test
popf
aad
jnp
add
mov
pop
mov
call
mov
and
sbb
test
xor
cmp
push
ljmp
jnp
xor
push
mov
int3
mov
xchg
ja
pushl
ficomps
inc
push
stos
sbb
in
dec
mov
ss
cmp
xchg
lret
dec
outsl
mov
pop
ja
lret
aaa
push
test
jnp
loopne
orl
fisubl
xchg
jns
jne
mov
fdivrs
shlb
ficoms
xlat
and
mov
mov
fdivl
int
int
pop
inc
mov
push
movsb
jge,pn
shll
sbb
out
sub
cs
xor
pusha
iret
js
insb
xor
test
xor
xchg
adc
mov
sub
inc
pop
add
outsb
shll
xchg
in
ja
cmpsl
dec
add
mov
mov
and
push
mov
or
adc
and
std
repz
je
push
cltd
inc
mov
dec
push
mov
xchg
mov
testl
push
stos
popf
push
lahf
jecxz
ficoml
int
xchg
and
imul
cltd
sub
mov
adc
ret
pop
mov
dec
fst
aaa
cmp
ds
fdivrp
lcall
xor
pop
aam
int3
xchg
pushf
lods
sub
cmpl
fucomp
xor
or
jecxz
jae
loopne
push
mov
dec
fsts
fldcw
lret
ret
jg
dec
cmc
sarb
insl
icebp
jge
jmp
mov
push
xchg
icebp
pop
mov
sub
push
cmp
mov
xchg
popf
fcmovnb
lods
lahf
in
cmp
inc
imul
sahf
push
or
fs
movsl
adc
or
bound
mov
dec
pop
pop
xchg
xchg
mov
or
jae
test
aas
or
or
addr16
pushf
jle
inc
testb
pusha
mov
lock
or
repz
or
addr16
lret
jns
jb
not
in
ja
dec
movl
cwtl
lret
xor
mov
sub
aad
stc
jge
push
lahf
mov
add
outsl
mov
jns
xlat
jmp
cmpl
inc
inc
inc
pop
and
es
mov
jne
stos
jns
jne
test
aad
addr16
test
add
push
outsb
into
mulb
and
icebp
into
xor
fwait
mov
sub
gs
leave
xor
push
int3
push
cwtl
dec
mov
cmp
les
lret
cmp
sub
jae
je
filds
mov
andb
fnstsw
test
sub
mov
add
lcall
jns
or
ret
mov
outsb
in
gs
movsb
adc
out
cwtl
lods
call
mov
pop
sub
inc
inc
mov
xchg
mov
das
mov
movsl
outsl
orb
jecxz
loope
mov
mov
leave
loopne
push
sub
push
std
sbb
dec
jo
xchg
fsubl
pop
lock
xor
adc
js
enter
push
cmpsl
fwait
xor
outsl
pop
js
pop
lret
dec
loop
shufps
bound
mov
add
lret
ret
mov
lret
mov
inc
sub
in
sbb
dec
clc
bound
inc
inc
std
push
xchg
popa
outsb
push
cmpsb
ds
mov
outsl
sub
adc
sub
popl
mov
in
pop
pop
mov
popa
stos
inc
inc
xchg
mov
push
push
repnz
daa
or
test
loope
jno
push
dec
or
in
in
push
add
sbb
jp
dec
pop
xchg
add
cmp
vorps
in
pop
pop
jecxz
popa
out
test
adc
hlt
mov
notl
jge
mov
test
stc
mov
ficompl
lea
out
movlps
ja
lret
movsb
scas
and
movsl
clc
in
xchg
mov
int
cs
lods
mov
sbb
std
lock
fdivs
jno
adc
lds
repnz
jge
push
mov
lahf
fistl
in
sub
pop
cwtl
sbb
out
bnd
test
pushf
or
cmpsl
push
mov
loopne
push
cltd
mov
leave
mov
xchg
push
and
add
push
dec
push
sbb
mov
mov
mov
int3
std
pusha
aas
cwtl
in
adc
gs
add
jae
xchg
xor
sbb
fnsave
bound
mov
jl
stos
ret
jno
mov
mov
mov
push
popa
sbb
test
xchg
jbe
push
jmp
push
aad
cmp
test
icebp
cmc
xchg
jle
rcrb
jecxz
cmpsl
and
ds
in
push
mov
cmp
or
ljmp
mov
mov
push
jae
das
add
adc
push
daa
xchg
mov
xor
les
push
mov
jge
lahf
stos
mov
sbb
sbb
mov
push
jnp
lcall
clc
hlt
jp
lods
enter
push
sbb
push
das
rcrl
add
sbb
lds
out
mov
rorl
push
sub
pushf
push
inc
adc
xor
out
jns
ret
adc
lock
outsl
fimuls
lods
xor
gs
adc
push
adc
push
sub
jl
cmp
shrl
es
and
test
rclb
enter
call
repnz
loope
ds
adc
lods
mov
xor
lods
je
mov
call
sub
das
mov
clc
scas
fucom
movsl
rcll
jp
aas
xor
nop
leave
lcall
lret
inc
nop
mov
sub
cmp
sti
repnz
rcrl
popf
call
mov
xchg
push
xchg
in
inc
cmpsl
mov
mov
out
stc
test
cmp
lds
mov
out
hlt
jl
push
mov
fisttpll
out
subl
lcall
data16
jge
mov
or
fcmovne
jmp
jo
cvtps2pi
dec
js
mov
mov
jne
xchg
fldcw
xlat
dec
or
insl
mov
xor
sbb
cld
ja
test
aad
push
nop
pop
lods
xor
rclb
xchg
add
cmpsl
test
sub
xchg
repnz
adc
cmc
push
pop
mov
imul
or
lea
sub
xchg
mov
push
mov
dec
xor
mov
inc
dec
cmp
fidivrl
call
xor
xor
sbb
mov
mov
sbb
adc
adc
test
pop
inc
sbb
cld
out
inc
mov
lcall
push
mov
sbb
cli
mov
and
outsl
cmp
inc
rcl
std
jp
pushf
jae
fwait
addr16
mov
sbb
int3
bound
std
stc
inc
adc
sti
pop
orl
inc
inc
shlb
sbb
cmc
clc
adc
insb
hlt
adc
hlt
cmpsl
jle
or
jns
jmp
mov
and
repnz
mov
ret
mov
xor
shll
scas
cli
enter
mov
xlat
gs
xor
push
outsl
loop
inc
and
or
sbb
aaa
mov
sub
jns
cmp
xchg
cld
in
and
out
cld
sub
lods
push
mov
repnz
loopne
into
test
inc
mov
fwait
loopne
inc
xchg
es
sbbl
subb
push
jp
les
xor
jbe
mov
jae
dec
jp
adc
cmp
dec
ret
mov
cmp
out
shlb
or
scas
sbb
sub
push
mov
leave
push
in
pop
and
imul
push
push
jle
inc
scas
icebp
data16
insl
aaa
in
mov
adc
lods
xchg
pop
shll
outsl
jbe
rolb
adc
fisttps
rorl
lods
cmp
lds
loopne
mov
xchg
rdtsc
arpl
inc
scas
ds
pop
inc
subb
std
jecxz,pn
inc
mov
jecxz
push
jg
roll
faddl
adc
fsubs
in
adc
daa
das
mov
push
ror
xchg
insl
cmp
mov
pop
clc
push
xchg
and
fnsave
or
inc
add
xchg
int
lcall
mov
xchg
sbb
int3
scas
imul
insb
cmpsl
es
dec
test
sub
pop
popf
xchg
jp
repnz
fs
jge
cmpsl
jo
add
cmp
sbb
jge
ja
imul
repz
daa
cmpsl
add
stc
into
hlt
xor
fnstenv
jp
ficoms
mov
cmp
push
outsl
fstpt
dec
add
andl
inc
mov
addr16
std
stc
add
xchg
lahf
cs
aas
es
mov
or
js
push
fs
les
inc
arpl
cmp
pop
out
dec
dec
lret
xchg
shlb
jmp
leave
adc
nop
pop
ficomps
jb
scas
subl
shll
sub
mov
cmp
and
sbb
loop
xor
cmp
lea
pop
aad
dec
cmp
jp
adc
fimuls
inc
xchg
xlat
mov
xchg
jge
push
mov
imul
mov
dec
imul
xor
ds
mov
push
pop
mov
loopne
sub
test
xchg
pop
shlb
push
and
inc
iret
adc
mov
jae
cwtl
sbb
lcall
jl
mov
lea
xchg
ret
mov
out
in
and
xor
mov
cmp
cld
inc
lea
stc
ja
xchg
mov
adc
and
xchg
arpl
loop
loopne
cld
mov
inc
pusha
inc
lea
jno
mov
sub
dec
in
in
sub
daa
mov
mov
inc
cmp
xchg
shll
iret
add
xchg
jmp
mov
mov
jne
aad
cmp
int3
add
icebp
add
adc
in
loopne
mov
mov
pop
and
lds
lea
mov
jbe
mov
fcoms
ret
jb
roll
hlt
cwtl
rorl
push
mov
pop
imul
pop
lahf
pop
pop
pop
lock
or
sbb
pop
insl
loop
ss
jg
jno
sbb
stos
aaa
inc
or
fcompl
mov
arpl
dec
pop
dec
cld
inc
es
sub
adc
pop
popl
inc
cs
rol
inc
cmpsb
cmp
in
or
out
inc
inc
pusha
mov
mov
mov
mov
rorl
cwtl
fstpl
adc
inc
jle
push
cmp
jp
test
mov
dec
pop
jb,pn
ret
aam
xor
pushf
mov
or
movsb
sbb
and
adc
xor
arpl
jne
adc
pop
pop
in
sbb
push
cmp
inc
jl
fwait
test
sbb
fdivs
jl
xor
imul
add
les
pusha
mov
into
or
add
and
inc
scas
loope
xchg
inc
jmp
mov
sub
js
mov
jl
add
je
push
mov
es
mov
adcl
mov
clc
int
enter
adc
jno
mov
adc
adc
sar
stos
xchg
jmp
adc
mov
pop
mov
cmpsb
ds
enter
or
inc
sbbb
xor
mov
xchg
and
mov
mov
dec
dec
fldcw
sub
pop
xchg
lahf
ljmp
and
shll
pop
fisttpl
cwtl
mov
inc
dec
mov
mov
jbe
loopne
mov
daa
mul
and
jbe
or
jno
stos
enter
or
adc
shll
xlat
jecxz
js
in
sbb
inc
sub
test
and
scas
lret
mov
insl
out
pop
pop
mov
sbb
fwait
and
cltd
mov
pop
stos
iret
lods
ret
sbb
cmpsl
mov
pop
sarl
ret
mov
aaa
shl
pop
mov
dec
fists
sbb
push
or
jmp
cmpsb
das
pop
or
fcomps
aas
leave
dec
push
sbb
xor
rcrb
sbbb
test
xor
mov
and
clc
rclb
mov
add
fwait
pop
pop
push
xor
std
sti
dec
enter
inc
xchg
lds
movsb
cltd
fadds
and
xchg
stos
adc
lret
add
inc
repz
fsubl
roll
sub
incl
dec
mov
sub
adc
adc
fimull
sbb
pushf
fwait
outsb
repnz
ljmp
jecxz
or
test
into
lret
jo
adc
pop
jmp
ret
lds
adc
sbb
pop
sub
jmp
inc
xor
mov
in
jle
push
ret
and
mov
sub
or
divb
pop
add
lahf
mov
pop
adc
int
popf
jae
xor
es
bnd
fstpt
lock
sahf
jg
rorl
cmp
mov
mov
mul
jg
std
xchg
mov
sahf
in
xor
stos
inc
mov
dec
sub
sti
pop
sub
mov
sahf
push
xchg
stos
imul
idivb
imul
lds
shlb
push
rcrb
mov
sbb
sub
push
sbb
pushf
outsl
out
dec
lret
dec
mov
cmp
push
cmp
lods
pop
dec
lds
mov
cmp
and
lea
inc
push
jns
lea
jb
add
mov
sbb
cmp
scas
in
movsl
aad
lods
es
rol
xorb
je
xor
push
in
dec
add
cmp
movsb
scas
cmp
in
ljmp
xchg
dec
jle
sub
lahf
mov
xchg
push
jns
movsl
and
inc
inc
scas
fimuls
mov
adc
or
loopne
jno
jge
jmp
bound
xor
xchg
fst
and
imul
lods
inc
adc
jl
les
and
sub
bound
mov
mov
xor
int
aad
mov
leave
cmp
inc
addb
jns
inc
scas
icebp
push
scas
jb
test
lahf
fbstp
or
jns
jle
xor
mov
jbe
jno
mov
fdivrl
imul
fidivrs
cld
and
pop
cmp
cmc
mov
mov
push
lea
adc
aaa
popa
inc
jno
dec
adcl
shr
leave
rcrb
pop
data16
scas
cmpl
cmpsl
and
ffreep
sbb
sbb
jnp
aaa
in
daa
xchg
add
add
bound
frstpm(287
lock
rcrw
dec
js
jg
adc
cmp
jb
call
in
jmp
push
jmp
and
adc
aaa
loope
daa
in
daa
sub
outsl
das
adc
dec
ret
les
inc
subb
stc
mov
mov
dec
ja
and
or
insl
cmpsl
je
sbb
fwait
dec
jne
cmp
in
ret
outsl
add
sti
or
mov
int
stc
jae
xrstors
add
ljmp
xchg
and
and
or
scas
in
xchg
add
inc
les
lods
xchg
movsb
adc
mov
loop
repz
pop
adc
dec
fadd
scas
clc
mov
jl
leave
rol
mov
repnz
nop
ja
mov
outsl
mov
mov
rclb
jne
jno
pop
inc
inc
imull
cltd
bnd
aas
cmpsb
mov
inc
stos
push
push
mov
popf
and
push
outsl
fs
or
mov
xor
mov
mov
mov
imul
popa
adc
xor
int
and
sbb
sub
mov
jae
add
sbb
add
int3
testb
xor
xor
in
fs
sar
sbb
es
shll
int
inc
mov
or
cmp
jge
adc
lahf
fdivp
dec
xchg
xchg
das
dec
push
xchg
bnd
jge
push
xchg
pop
mov
fimuls
jnp
cmp
mov
sbb
cmc
add
mov
popf
jne
lret
mov
fcompl
inc
push
inc
in
pop
jle
adc
loope
sahf
addr16
push
dec
fstp
xor
push
insb
loopne
subl
and
fidivrs
cs
repnz
enter
insl
repz
push
mov
mov
aaa
jp
rcrl
mov
dec
mov
ljmp
add
popl
lods
test
data16
mov
insl
add
jl
xchg
push
sti
xchg
stc
dec
jo
adc
xchg
pop
inc
or
fcomi
mov
jae
push
push
fs
mov
outsl
push
jnp
ds
mov
xchg
mov
jmp
fsts
scas
jmp
dec
hlt
lea
insb
into
mov
and
sbb
outsb
jo
xor
lret
lds
popf
jge
jae
push
stc
or
mov
lock
sub
mov
xlat
mov
pusha
out
fimuls
and
leave
orl
adc
mov
cmp
mov
mov
sti
test
pusha
insb
mov
int
fcmove
in
push
sub
scas
mov
xor
jmp
aaa
add
add
mov
inc
jl
push
cltd
lea
pop
mov
nop
jns
add
popl
push
cmp
jecxz
movsb
push
jbe
icebp
nop
imul
inc
mov
ret
and
xchg
push
ret
xchg
out
mov
popa
dec
scas
inc
fbld
insl
mov
scas
dec
jo
sbb
lods
insl
mov
mov
jl
inc
sub
inc
xchg
pushf
dec
inc
lods
fwait
xor
fimuls
push
adc
rol
lea
add
jmp
mov
push
lods
in
mov
push
daa
dec
fmuls
mov
cmp
sbb
cmp
xor
inc
adcl
dec
adc
mov
mov
and
pop
addr16
imul
mov
mov
push
dec
push
mov
add
adc
les
in
mov
ret
cs
and
lcall
test
cli
jnp
and
les
push
xchg
ficomps
cmp
sbb
jg
cmpsb
add
xchg
push
adc
fsubs
jo
push
popa
loop
mov
fnstenv
mov
sbbl
mov
mov
adc
and
call
and
lods
test
stos
add
dec
fadds
dec
sbb
in
add
and
int
test
lret
leave
popf
push
sti
js
pop
xchg
cmp
push
xchg
mov
insb
dec
lea
andb
sbb
lea
push
dec
jo
aas
rol
inc
or
and
aam
dec
pop
mov
loop
mov
out
dec
adc
add
jmp
clc
adc
aaa
inc
iret
jbe
adc
sti
pop
push
jno
xchg
sub
hlt
mov
out
loopne
dec
xor
int3
jle
dec
pushf
shll
sub
shll
lea
shl
lcall
scas
and
pushf
pusha
outsb
sub
xchg
push
and
ffree
fists
aad
mov
and
adc
mov
ficomps
repz
mov
stc
jle
inc
mov
jo
add
xchg
iret
sub
push
lea
inc
les
cmc
and
pop
sub
sahf
mov
or
in
mov
add
and
sarb
sub
dec
adc
jl
sbbb
and
cmpsb
mov
push
cmp
sbb
add
pop
aas
jno
sbb
mov
inc
rcll
jge
movsl
cmpb
and
ret
es
lods
mov
mov
test
or
or
jmp
ljmp
sbb
sbb
notb
rolb
jnp
sbb
push
mov
mov
test
ja
push
outsb
sbb
mov
dec
push
dec
or
add
xchg
inc
in
daa
adc
mov
clc
push
bound
fldl
mov
in
ja
dec
arpl
mov
outsb
or
jbe
inc
outsb
add
jbe
mov
and
daa
xor
call
push
pop
add
out
jecxz
push
or
jp,pt
repz
in
or
in
push
sub
inc
xor
idivb
mov
pushl
push
xchg
push
jno
movl
dec
sbb
mov
inc
mov
ficomps
imul
insl
sbb
cmp
mov
xchg
mov
mov
mov
insl
cmpb
push
fs
add
mov
cmpl
out
sti
xchg
std
fs
push
sti
es
cmp
repz
lea
cmp
in
mov
mov
and
rorb
mov
mov
jne
in
and
mov
push
pop
lock
test
push
out
add
or
jne
insl
inc
lret
imul
loop
test
jmp
jmp
gs
data16
adc
xor
adc
imul
cld
add
dec
fildll
and
lcall
imul
cmpsl
std
dec
push
adc
mov
mov
lret
icebp
and
sbb
pop
or
jo
in
inc
push
cmp
inc
mov
or
inc
negl
push
mov
lahf
stos
jns
daa
aam
sbb
adc
hlt
lds
sbb
and
test
mov
sub
repz
bound
push
roll
push
pop
cmp
and
push
and
add
mov
imul
bound
adc
sbb
add
repnz
outsl
sub
add
jle
or
arpl
mov
push
push
imul
cli
loop
lret
xor
lahf
shlb
dec
jmp
sahf
dec
cmp
inc
add
sbb
push
mov
fwait
xchg
jb
and
sub
cli
test
xor
aaa
sbb
xchg
mov
jb
pop
fcomps
lret
xor
mov
into
and
xchg
outsl
cwtl
js
add
jmp
adc
clc
imul
and
xor
and
mov
xor
stc
movb
sbb
xor
aas
xchg
inc
mov
mov
out
aaa
or
mov
sbb
pusha
es
sbb
aaa
mov
and
ficomps
mov
xchg
push
daa
mov
and
stc
push
lcall
test
or
cs
mov
sbb
cmp
loope
punpckhdq
adc
inc
les
mov
addl
push
mov
bound
xor
push
add
sub
data16
into
or
dec
dec
loopne
inc
sub
js
dec
xor
ss
arpl
mov
lea
gs
lea
mov
pop
push
jo
fsubr
or
sahf
sbb
inc
xchg
add
mov
mov
sahf
or
pop
push
xlat
jle
sbb
sbb
jne
or
flds
ja
lods
sub
or
neg
inc
or
sahf
sub
mov
movsl
lahf
js
xchg
push
fcoms
notb
fsubp
adc
fmull
mov
sbb
das
and
xor
mov
insl
dec
and
and
lret
xchg
xor
enter
movsl
sbb
add
jg
adc
cmpsb
xorl
xchg
insl
xchg
ljmp
insl
mov
dec
cli
cltd
movsb
sub
mov
stos
xchg
test
pusha
sub
stos
xchg
aam
shll
add
imul
fimuls
ja
lahf
inc
adcl
add
jge
cmc
add
cmp
scas
fucom
mov
fnstsw
mov
test
jg
adc
ljmp
cmpsl
enter
and
lea
mov
pop
push
cmp
mov
pop
dec
sub
fsubr
mov
pop
push
fdivr
mov
xor
pop
call
sahf
pop
xchg
sbb
mov
fdivrl
fwait
xor
aam
jbe
cltd
xchg
lock
mov
shll
ja
icebp
xchg
xchg
jns
stos
cwtl
arpl
mov
sbb
push
insl
ljmp
jecxz
pop
pop
repz
lcall
in
icebp
jp
pop
das
js
ja
aaa
call
aad
jp
dec
rorb
xchg
repz
test
dec
xlat
jle
into
and
xchg
jp
leave
test
jne
dec
shrl
lcall
ffreep
mov
in
in
mov
movsb
jmp
xchg
cmp
or
push
xchg
shrb
xchg
nop
mov
mov
jle
int3
mov
div
push
add
insl
jge
test
add
clc
imul
je
xchg
mov
jno
push
push
call
and
cmp
stc
cld
push
inc
lahf
inc
cmp
lds
add
xchg
gs
or
lahf
sbb
jl
jae
push
jne
repnz
dec
pop
push
out
xchg
mov
insb
loopne
cmc
cld
in
cltd
int3
addr16
mov
daa
test
adc
sahf
shlb
repz
sub
iret
jmp
fisubrs
divb
xlat
dec
mov
popf
daa
ljmp
mov
xor
add
js
popf
shl
xchg
fwait
sub
or
out
ds
lret
in
lock
pop
mov
mov
mov
inc
outsl
daa
mov
dec
mov
mov
add
mov
add
in
xchg
push
pop
cld
stos
leave
pop
push
insb
test
jmp
cmpsl
jne
mov
jb
or
pop
and
sbb
in
add
cmp
aam
adc
ljmp
pop
jl
xchg
cmpsl
fmul
cmp
inc
inc
jae
mov
mov
out
cmp
or
movsb
inc
mov
sbb
adc
xor
xor
dec
dec
popf
jecxz
hlt
inc
imul
fadds
mov
push
cwtl
out
int3
xchg
sub
mov
pop
icebp
pop
xor
aas
xchg
mov
mov
aam
xchg
pop
cmp
dec
sub
xor
xchg
mov
test
mov
int
movsl
sub
adc
sahf
pop
mov
negb
movsb
jo
lods
xor
sbb
pop
jle
and
ret
loope
aad
adc
lea
mov
insb
fisttpl
mov
mov
xor
or
shrl
dec
in
xor
cmp
add
jo
in
push
fdivr
outsb
mov
ror
mov
stos
add
xchg
insb
jle
xor
mov
fldcw
std
push
sub
clc
sbb
icebp
or
sub
shll
cmp
xor
mov
aas
or
lock
dec
add
xor
adc
sub
adc
inc
rcll
xor
push
icebp
dec
dec
loope
jl
inc
pop
mov
fwait
cmpsl
scas
test
mov
int
adc
xchg
lcall
mov
fisttpl
subb
jg
popa
adc
mov
mov
adc
in
or
inc
adc
mov
push
in
fsub
ja
idivb
xor
cs
pop
jne
imul
mov
pop
add
movsb
inc
ror
aad
sub
jo
jecxz
sbbb
loopne
sub
push
andl
or
jmp
add
insb
mov
mov
ret
adc
sahf
mov
shll
jg
arpl
inc
int
jne
test
mov
xor
push
mov
fistps
inc
pushf
add
add
in
and
dec
xchg
mov
test
push
lods
pop
mov
ret
pusha
adc
pusha
in
jle
pop
sbb
sub
int3
jge
cli
in
fwait
sub
popa
lahf
jns
mov
bound
hlt
xchg
in
sbb
dec
stos
jae
xor
cmp
cltd
sbb
pusha
cmp
add
cmp
inc
lret
sub
lret
mov
sahf
sbb
rcr
add
test
push
rol
xor
add
sub
imul
lret
pop
sahf
imul
icebp
shr
hlt
xchg
or
mov
mov
movsl
rorb
push
dec
aam
movsb
xchg
adc
push
popa
sbb
movl
fdivr
mov
inc
loope
out
or
pop
int3
sbb
loope
jecxz
jg
scas
std
in
mov
shl
push
pop
mov
mov
xchg
jae
add
and
fcomps
cmp
loop
sbb
addr16
inc
or
outsb
out
dec
lods
aas
mov
mov
in
ljmp
daa
lods
aam
stos
inc
sbb
cpuid
out
lcall
mov
rcll
push
or
add
xchg
test
or
ret
stos
sbb
mov
pop
fstpt
xchg
cmp
mov
ljmp
inc
add
cmp
adcl
jo
sub
inc
add
imul
xchg
movsb
dec
into
mov
bound
dec
fwait
in
std
xlat
setns
data16
push
fcmovbe
xchg
add
icebp
cmovo
xor
das
nop
fnsave
adc
xchg
mov
insl
or
cwtl
jg
xor
mov
pop
cld
push
pushf
cld
fcoms
mov
push
repz
mov
add
cmpsl
sbb
lcall
loope
xchg
mov
lock
shll
push
or
outsl
loop
fisubrl
aas
fcompl
mov
bnd
sub
test
jmp
aaa
das
jge
and
push
hlt
push
or
and
subb
dec
movsb
push
ret
push
into
std
push
xchg
dec
shll
int3
add
outsl
dec
cmpsl
dec
push
or
dec
xchg
mull
pusha
in
clc
inc
lret
fwait
roll
mov
ficoms
add
ret
sbb
adc
sbbl
cli
sub
in
pop
ds
xor
push
jns
xor
jge
sub
ficomps
ss
xchg
aam
je
sar
push
addl
es
cmp
stos
fcompl
mov
jecxz
sbb
push
add
push
or
imul
lea
dec
fsubp
jb
sub
mov
insl
sbb
jge
call
sub
je
xchg
xchg
js
mov
cmp
jns
cld
outsb
add
mov
fidivl
mov
hlt
add
xlat
push
jp
push
arpl
xchg
fdivr
xlat
jge
loopne
mov
mov
dec
mov
inc
jns
fists
sahf
sub
fidivrl
mov
sbb
push
jmp
cwtl
or
jns
orb
mov
xchg
inc
push
inc
addr16
mov
mov
jl
inc
and
inc
in
adc
or
push
pop
jecxz
mov
dec
jo
fwait
daa
out
call
int
or
cmpsl
jge
xchg
shrb
adc
inc
mov
lea
leave
ljmp
jbe
lret
push
jb
cltd
sbb
push
push
outsl
sub
inc
and
pop
rcpps
std
or
int
mov
pop
es
jmp
rorl
mov
add
lods
ret
pushf
xor
push
pop
insb
insb
ret
mov
mov
cmpsb
bound
cmc
add
test
xor
loop
mov
iret
mov
mov
lcall
clc
out
js
fcmovb
or
sub
jnp
in
push
add
rcll
pop
mov
push
mov
inc
add
test
pop
pop
pop
jo
hlt
mov
cwtl
dec
mov
add
push
pop
and
loop
sub
ficoml
inc
cli
sub
add
xor
mov
xor
clc
xor
cmpsb
imul
icebp
out
push
out
push
pushf
cltd
cmpsl
faddl
int
xor
dec
dec
dec
outsl
pop
aas
shlb
push
or
movsl
mov
test
nop
jp
sbb
mov
mov
idiv
or
outsb
push
clc
jecxz
in
lret
test
lcall
jno
mov
or
mov
inc
inc
sti
push
ret
sbb
and
fs
dec
jbe
int3
icebp
call
dec
mov
enter
loope
inc
test
in
mov
out
enter
or
pushf
push
inc
fidivl
rcr
aam
cli
cmp
or
lds
and
pop
xchg
dec
mov
mov
mov
inc
dec
lcall
mov
mov
add
jmp
push
jbe
jg
in
sub
pushf
inc
mov
mov
push
jnp
dec
pop
mov
cmc
imul
or
aam
aaa
mov
insb
mov
data16
sahf
xchg
test
sbb
sbb
inc
jb
push
daa
gs
add
out
out
xchg
lock
xlat
popf
push
imul
vmwrite
imul
inc
inc
inc
xor
add
aaa
out
mov
out
mov
fcmovnb
aam
lcall
les
push
int
push
cmpsb
pop
adc
pusha
xor
lahf
pop
and
pop
js
stos
xchg
adc
mov
hlt
push
sbb
enter
lea
outsl
add
movsl
ja
cmp
out
inc
dec
pop
lods
jp
mov
popf
mov
add
and
mov
out
jmp
sbb
cli
js
nop
test
into
out
cli
or
xor
adc
mov
int
out
xor
rclb
mov
loop
insb
jnp
loope
popf
fnstenv
cwtl
add
insl
push
mov
pop
addr16
inc
sbb
sub
and
mov
push
ret
dec
mov
or
xor
mov
sub
ret
gs
or
fs
jl
and
cmp
and
inc
test
rorl
sub
ljmp
sub
out
cmpsl
call
dec
sbb
adc
hlt
ret
fmuls
jne
in
xor
nop
fisttpl
pop
fwait
pop
pop
out
je
scas
jne
sub
xor
stos
mov
aad
pop
fiadds
add
hlt
jp
dec
or
das
cmc
or
xchg
and
aad
iret
and
adc
out
int
mov
shrb
or
aaa
ja
xor
sbb
enter
out
push
test
pop
ret
and
jecxz
xor
popf
add
adcl
pop
dec
aaa
jecxz
mov
mov
fmull
out
arpl
mov
pop
bound
fidivs
lods
pop
sbb
inc
std
in
mov
in
jbe
bound
xchg
sbbb
cltd
mov
addb
mov
sbb
mov
es
loop
daa
xor
mov
add
mov
dec
adc
mov
movsl
into
sbb
pop
stc
loopne
stos
leave
sub
aam
lret
mov
inc
or
lds
sbb
mov
enter
cmc
stc
mov
mov
inc
add
or
dec
sbb
push
loopne
push
jno
inc
push
sbb
xchg
orb
js
lods
jmp
andl
frstor
inc
dec
xchg
daa
mov
sbb
xor
xor
add
repz
mov
sub
icebp
adc
pop
data16
stos
stos
cmp
mov
jnp
xor
aad
jno
adc
xchg
mov
mov
shlb
dec
rcll
movl
xor
jne
int
xor
jmp
inc
mov
or
addb
pop
in
sub
arpl
mov
mov
xchg
lods
jo
xor
xor
pop
icebp
push
cmpsb
in
mov
or
pop
mov
mov
mov
sub
mov
adc
push
out
fmuls
call
jno,pt
mov
xor
and
sub
jecxz
push
sbb
shr
pop
pushf
jle
sbb
dec
js
cmc
fnsave
in
cli
add
jo
inc
das
clc
dec
mov
xor
out
outsb
inc
lods
xor
loopne
mov
out
ljmp
ret
ljmp
arpl
mov
mov
adc
adc
iret
mov
add
lds
jecxz
jnp
mov
dec
sub
xlat
jg
inc
xor
hlt
xor
sub
lea
or
das
xor
adc
fwait
mov
push
pop
dec
nop
dec
ret
or
cmp
mov
pop
sbb
xorl
loop
xor
xchg
js
mov
jp
repz
addr16
arpl
aas
push
scas
inc
pop
xchg
and
cld
cmp
out
aas
jmp
push
ss
mov
out
dec
enter
push
addb
inc
add
test
cltd
mov
jle
ss
push
push
sbb
sbb
scas
xchg
cmc
xchg
add
ljmp
outsb
add
push
iret
xchg
sbb
mov
push
jnp
movsl
mulb
mov
dec
in
jnp
and
imul
pop
cld
dec
cwtl
xchg
rolb
cmc
sub
call
inc
cwtl
add
or
xchg
stos
ja
inc
xchg
rcl
cs
add
dec
shl
fists
ljmp
cmp
stos
mov
pop
in
inc
jecxz
add
dec
inc
nop
pop
lds
xchg
jge
out
ret
adc
inc
push
fdivrs
movsl
cmpb
mov
fcmovu
sti
shlb
push
fwait
or
stos
sbb
into
pushl
adc
and
adc
jecxz
lcall
stos
or
in
daa
sbb
mov
test
push
mov
outsb
out
xor
sti
mov
push
inc
jge
stos
push
xor
xchg
inc
add
sub
mov
jnp
leave
mov
repnz
iret
nop
sarb
xchg
add
dec
push
xor
dec
dec
xchg
mov
and
sub
pop
insl
mov
aaa
aas
out
and
push
dec
jge
push
int
icebp
sbb
jmp
inc
lock
int3
fwait
mov
cli
int
outsl
jge
mov
pop
inc
xchg
dec
xchg
jne
xchg
insl
shl
and
mov
lret
stos
and
dec
fmuls
mov
sbb
add
xchg
ret
decl
fwait
call
ss
inc
jbe
into
pop
jno
lods
xchg
cwtl
into
in
aam
jb
lods
inc
cltd
inc
daa
inc
adc
popl
fdivrl
lret
shll
xchg
lds
int
jns
iret
std
and
ds
xchg
lea
in
mov
jp
xor
nop
bound
mov
sub
sbb
jg
pop
pop
pop
sti
sub
fnstenv
roll
repz
cmp
mov
mov
xor
shrl
sahf
dec
pop
ss
insl
rcrl
icebp
push
jae
jp
loope
adc
pop
lcall
lcall
xor
push
pop
jg
inc
ret
arpl
cmp
push
aas
hlt
scas
and
mov
mov
add
cld
ret
vpaddusb
inc
push
bound
sahf
cltd
out
or
jb,pt
pushf
sahf
cld
pop
adc
sbb
mov
jae
jmp
jge
mov
jmp
scas
test
dec
repz
lcall
addr16
lods
les
ljmp
ret
jle
sbb
jge
push
stc
fisubs
inc
fnstenv
aas
cwtl
nop
inc
in
aad
mov
bound
sbb
out
mov
aaa
or
push
fldl
aam
sbb
mov
lock
pop
call
nop
repnz
xorb
jns
push
xchg
mov
mov
inc
pushf
jb
mov
into
frstor
shrb
nop
dec
sbb
out
xor
lret
dec
lods
push
pop
jno
lahf
adc
fildll
les
inc
push
mov
xor
sbb
adc
hlt
idivl
add
xor
pop
add
jp
outsl
xor
sub
push
iret
jns
in
out
std
push
popa
lret
repnz
stos
shl
daa
in
adc
dec
js
dec
cmc
andl
ret
lret
push
sarb
push
insl
hlt
outsb
sbb
mov
mov
in
mov
mov
xchg
fcmovnbe
cmpsb
mov
jns
push
mov
cmp
loope
add
pop
mov
lret
jo
filds
les
xchg
sub
jbe
jmp
dec
popf
sbb
mov
mov
mov
pop
mov
scas
fcoml
shr
clc
or
xchg
mov
pop
ret
popf
outsb
pop
cli
xor
xchg
in
mov
js
inc
lcall
and
xor
xchg
pop
dec
sbb
jecxz
loope
cli
push
fsubrs
adc
add
add
int3
xor
mov
lahf
ss
aam
stc
mov
test
lahf
aaa
pop
bound
mov
jno
ret
mov
fisttpl
xor
adcl
aas
dec
jne
jbe
sbb
mov
inc
rcrl
negw
clc
repz
jne
lcall
adc
and
outsb
movsl
ljmp
arpl
sub
fidivs
ja
cmc
push
out
jae
in
and
inc
mov
pop
lcall
mov
lahf
fsub
xor
or
out
mov
inc
jbe
aam
pop
mov
es
mov
and
add
adc
xchg
pop
gs
jns,pt
jmp
fsubl
ss
mov
adc
jp
ljmp
movb
xchg
in
cmp
bound
or
loop
movsb
test
fcmovbe
cld
icebp
loopne
lds
ret
cmpl
push
and
jmp
xchg
push
inc
adc
xchg
jle
sarb
rclb
les
mov
push
and
enter
imul
xchg
pop
sbb
ret
mulb
in
imul
mov
and
mov
and
cmpl
xor
mov
adc
cld
and
stos
push
xchg
add
xchg
iret
or
mov
lcall
pop
or
ja
ljmp
out
adc
scas
je
mov
mov
sub
aas
loop
das
jle
fmul
push
mov
inc
sahf
adc
xor
and
dec
imul
xchg
je
xor
mov
pop
bound
outsb
clc
pop
fimull
mov
mov
aaa
lea
add
mov
cmpsb
jle
mov
sub
xchg
test
das
das
int3
lea
and
lods
add
test
inc
xchg
je
xor
pop
enter
pop
pop
fcoms
div
cmpsl
dec
mov
add
sub
xchg
fistpl
xchg
je
pop
pop
and
das
sti
push
imul
push
lods
sub
scas
adc
and
sbb
cmc
pop
inc
xchg
push
jno
push
dec
xchg
push
lcall
idivl
adc
xchg
iret
jg
dec
arpl
xor
movsb
sbb
aaa
popa
add
adc
into
fsubs
cmp
add
rcl
xlat
mov
lods
xchg
clc
jb
and
mov
shll
lods
lock
sarl
push
xor
inc
popf
mov
or
popa
and
test
adc
mov
jbe
fs
cli
into
repz
ss
mov
cmpsb
movsb
push
scas
lret
sbb
cmp
push
movsb
xlat
mov
mov
sti
aam
sti
data16
loopne
test
cmp
or
movsl
and
sub
sahf
aad
icebp
sti
fmull
addb
mov
out
push
sbb
jbe
das
ljmp
dec
mov
inc
mov
xchg
enter
mov
dec
jecxz
test
push
sbb
bound
or
aas
push
aas
lock
out
cli
test
cld
sbb
lock
out
inc
mov
ljmp
aas
adc
push
mov
int
mov
lahf
pop
or
cwtl
addl
or
push
mov
push
leave
mov
and
ret
into
jnp
xor
dec
jp
jl
ja
inc
fmul
cwtl
jb
mov
xchg
int3
and
outsb
jmp
pop
xor
jns
int
or
inc
adc
hlt
push
mov
or
and
bound
sbb
jbe
loop
xchg
out
nop
add
stos
cmpsb
push
bound
loopne
mov
and
and
les
insb
push
fsubrl
push
lds
cld
in
ror
xor
cmp
pop
call
lock
das
adc
xchg
jge
sahf
pushw
xchg
fwait
leave
das
testb
int3
jbe
dec
dec
pop
cmc
pop
dec
movsb
push
mov
scas
push
rolb
pop
dec
add
das
pop
mov
addb
lock
xor
jbe
xor
or
mov
test
dec
adc
loope
testl
mov
imul
and
scas
jp
loop
out
cmc
sbb
std
push
aas
mov
and
mov
or
sarl
push
xor
test
mov
stos
adc
lcall
mov
fnstcw
sarl
xchg
das
arpl
jecxz
insb
popf
jb
or
mov
jl
push
sbb
stos
dec
or
gs
add
fildll
dec
inc
inc
insb
pop
js
push
ja
lret
jo
cmp
add
push
ljmp
jbe
aad
les
fdiv
adc
dec
js
test
sbb
xor
ret
adc
mov
sbb
gs
loope
and
nop
dec
or
mov
lea
icebp
fs
movsl
fwait
and
movsl
in
push
into
lds
leave
int
and
inc
cmp
or
sbb
fnstsw
and
jg
pop
fisttpll
sub
and
cltd
or
mov
sbb
xchg
cmp
in
adc
pop
push
lock
jnp
ret
shl
stos
mov
int3
jo
xor
xor
add
in
mov
mov
add
adc
push
das
stc
cs
shlb
ds
lret
xor
pop
and
sti
sub
cmp
sub
xchg
cmc
aad
cwtl
inc
and
pop
jns
or
inc
loope
pop
je
call
popf
xchg
push
arpl
mov
cli
xchg
mov
subb
fwait
popf
pop
add
in
lret
cwtl
in
mov
inc
pop
cmp
xchg
out
test
jg
lods
stos
test
xchg
mov
cltd
mov
icebp
sbb
fidivs
popa
repz
cwtl
imull
fcmovu
loope
xchg
movsbl
sbb
pop
jo
cmp
hlt
xchg
fnsave
jb
loopne
rorl
sub
dec
xchg
insl
scas
mov
arpl
or
lea
cmp
add
scas
movsl
mov
sti
enter
sbb
scas
out
stos
dec
loopne
std
inc
hlt
fnstcw
shr
or
jo
sbb
mov
shll
and
or
imul
repnz
insb
sub
adc
fbld
stos
popa
leave
jl
sbb
xor
xchg
mov
mov
decb
xor
mov
mov
daa
or
or
lret
mov
lock
adc
outsb
int
cmp
add
dec
adc
andb
aad
inc
aad
mov
call
push
ret
sbb
cmc
aas
push
out
mov
test
scas
stos
pusha
jg
mov
scas
cmp
movsl
std
mov
subl
inc
cmp
xchg
pop
jo
lods
jb
xor
fsub
in
mov
add
mov
push
pop
test
dec
cmpsb
dec
outsl
repz
out
inc
jle
inc
jecxz
sub
xor
jmp
test
addl
shll
jbe
mov
and
dec
mov
xor
ljmp
cld
pop
ds
xor
jbe
mov
xor
fucomip
xchg
xor
shrl
adc
or
mov
popf
jno
jg
dec
sahf
rorb
fst
jge
mov
repz
xchg
fisubs
aas
jbe
lret
hlt
pop
lahf
push
xor
push
cmp
pop
mov
or
lods
cmp
in
push
mov
push
mov
out
push
ficomps
bound
shr
xor
xor
and
movsb
fisubrl
pop
out
xchg
lods
inc
mov
dec
fwait
movsb
or
mov
xchg
mov
shrl
mov
cmp
int
dec
jmp
sbb
push
call
push
xchg
mov
sub
and
jne
jb
xor
cltd
in
pop
fcmovnb
cmpsl
cmpb
inc
loopne
ret
sti
cmp
div
fs
or
inc
jne
test
sub
lock
inc
mov
cmpl
cmp
sub
mov
imul
jge
xchg
inc
inc
ret
adc
in
cld
and
and
andb
pop
pop
mov
popfw
cmpsl
test
lds
popa
and
out
enter
push
cmp
fisttpll
scas
xchg
mov
jae
sub
out
xor
hlt
mov
lahf
inc
fisttpl
xor
xor
xchg
cmpsb
pop
loop
mov
test
adc
insb
dec
jp
fmull
push
xchg
sbb
add
mov
sub
mov
les
jns
outsb
stos
scas
push
jns
add
cmp
mov
mov
pop
std
imul
cmp
shl
push
cli
outsl
leave
mov
cmp
jl
cld
inc
outsb
jns
cmpsb
inc
xor
fsubrs
or
adc
lcall
lds
jbe
mov
enter
das
stos
xor
ret
jge
xor
add
sbb
cld
loope
movsb
pop
jg
add
stos
mov
out
popa
stos
pop
cmp
cmp
sbb
jno
js
mov
scas
mov
out
icebp
clc
xchg
mov
xchg
mov
adc
xchg
imul
mov
imul
das
stos
lahf
adc
jno
out
add
fdivl
sub
cld
fisubs
sub
fcmovne
dec
xchg
movsl
mov
sub
pop
sub
adc
aad
xor
xchg
pop
inc
pop
lret
and
pop
sarl
jno
jbe
cmp
jle
repz
fisubs
cmp
popf
mov
push
jnp
mov
out
xchg
gs
iret
jno
dec
pop
outsl
cmp
cmp
lahf
stc
bound
popa
lret
ds
pop
dec
cmp
or
imul
loope
daa
adc
cltd
bound
xchg
lds
xchg
ret
push
lock
mov
or
add
fdivl
addr16
adc
shl
sub
pop
insl
ret
jmp
mov
pop
icebp
shrb
sbb
into
mov
adc
insb
imul
add
les
les
xlat
imul
sub
mov
dec
cmpsl
fbstp
xchg
sbb
ret
mov
sbb
data16
mov
in
sub
imul
in
dec
sbb
cmp
mov
xchg
nop
int3
mov
fs
mov
mov
and
sti
lret
fidivs
scas
mov
mov
fistl
clc
xchg
std
rclb
sub
mov
ret
mov
out
jno
jb
and
mov
lahf
pusha
in
mov
or
add
cltd
push
and
into
aaa
pop
arpl
mov
sbb
aaa
or
fwait
mov
in
lods
pop
jecxz
mov
push
dec
test
xchg
pop
cmp
rcrb
imul
insl
adc
hlt
cld
adc
jecxz
mov
xor
dec
imul
popa
and
cmpl
ret
daa
sub
enter
xrelease
xor
inc
sub
sbb
sub
lret
divl
mov
add
jnp,pn
fcomps
xor
add
cli
jnp
adc
add
push
dec
mov
mov
mov
or
jecxz
clc
call
and
cli
pop
sub
jnp
fstpl
sub
inc
mov
jnp
sub
fdivrp
push
push
es
mov
xor
xor
cmp
dec
jecxz
xchg
adc
mov
mov
inc
roll
aas
pop
orl
sbb
cltd
es
dec
sahf
mov
fisubl
cld
and
cld
lds
sub
in
int3
call
loopne
cmpsb
mov
push
mov
cld
add
or
mov
mov
rorb
cwtl
sysexit
pop
into
dec
lahf
xor
dec
push
ss
add
es
mov
subl
sub
cmp
cmp
insl
push
inc
aaa
jno
stos
scas
mov
cltd
pop
lea
lea
cs
cmp
out
daa
jmp
mov
repz
mov
mov
lods
jle
fisubl
lret
jnp
loope
stc
dec
add
je
insl
jo
adc
test
jnp
fcoml
cltd
inc
sbb
jl
and
sbb
dec
cmp
mov
or
mov
pop
dec
cltd
outsl
add
xchg
push
in
push
sub
cld
repnz
iret
jae
loope
std
packsswb
mov
popf
mov
ss
test
addr16
mov
icebp
shr
adc
movsb
cmp
cli
add
das
hlt
dec
mov
cmpsl
adc
stos
jmp
ret
fbstp
mov
fisttps
sbb
sarl
stos
rol
test
cmpsl
sub
or
jle
adc
jge
dec
cmc
and
sbb
cmp
jae
aas
aaa
mov
pop
sub
into
add
xor
sbb
fsubl
js
aaa
xchg
fisubrl
mov
adc
mov
enter
pop
cmpw
sub
mov
lds
jmp
rcrw
stc
add
mov
mov
mov
into
fisttpll
fdivrs
lods
mov
fbstp
sbb
push
mov
iret
mull
push
stos
out
or
push
ljmp
in
xchg
pop
sub
and
mov
pusha
fidivrl
mov
and
dec
out
sub
es
test
orb
pushf
xchg
dec
sub
cmpb
sbb
jl
into
lods
cmp
outsl
dec
aas
lahf
dec
jl
pop
jp
ret
jae
mov
xor
adc
icebp
scas
lcall
int
jmp
add
imul
mov
mov
test
mov
call
lret
out
sbb
cmp
ret
adc
loop
inc
cwtl
andb
and
mov
cli
mov
mov
repz
or
mov
pop
iret
mov
xchg
hlt
icebp
add
dec
fcoms
fimuls
fs
gs
cmp
lock
imul
ret
lahf
std
inc
and
lret
add
bound
pop
push
add
sti
aad
fimull
push
in
adc
outsb
pop
cmp
or
lock
add
mov
add
adc
mov
imul
mov
rorb
add
imul
cmp
or
fs
mov
arpl
test
cli
pusha
inc
insb
scas
in
push
mov
sub
inc
mov
pop
dec
xor
fnstcw
pop
xlat
xchg
dec
jb
je
mov
jno
xchg
sub
push
mov
arpl
mov
rorb
jl
sbb
jl
mov
xchg
dec
out
inc
scas
dec
jb
jo
pusha
cwtl
mov
add
inc
xchg
iret
xor
or
loopne
or
add
xchg
or
jne
push
mov
jb
mov
pusha
push
and
xor
nop
cmp
fisttps
rclb
xchg
loope
push
aam
adc
pop
sbb
repz
jecxz
negb
xchg
xorb
adc
xorb
mov
or
adc
push
xchg
cmp
jg
aam
sbbb
mov
sub
push
loope
ja
inc
mov
dec
push
pop
mov
xchg
xchg
fs
jge
xor
inc
nop
jo
xorl
dec
mov
enter
mov
mulb
in
mov
sahf
cmc
jno
pusha
cs
out
lods
es
cli
xor
inc
fldl2e
push
outsb
fucomip
jb
mov
data16
bound
mov
push
xor
pop
test
call
leave
cmp
loop
push
stos
leave
stos
inc
and
call
rcrb
rcll
xor
cmp
idiv
jp
push
dec
jge
bnd
repz
mov
fldcw
in
out
mov
xchg
lods
jno
jp
and
xor
cmp
pop
stc
cmc
or
aaa
loope
push
imul
adc
into
pop
insl
sbb
lret
add
mov
data16
pushf
xchg
mov
cmpsb
adc
aaa
lea
sub
xchg
inc
jb
xchg
adc
stc
or
add
out
loop
push
push
enter
mov
mov
mov
push
aad
fcoms
push
cltd
out
mov
ljmp
insl
lret
sub
mov
sub
outsl
clc
mov
add
out
mov
push
adc
fisttpll
mov
mov
insb
dec
ds
mov
mov
mov
lods
lods
mov
and
mov
add
or
lahf
lds
mov
sbbl
pop
cmc
daa
pusha
adc
mov
addr16
cmp
pop
lahf
mov
call
sub
jne
dec
lock
cs
jbe
out
pandn
pop
das
add
adc
movb
xor
adc
test
inc
pop
fcompl
nop
push
mov
adc
xchg
shrb
sbb
xchg
loop
cmpsl
clc
mov
test
dec
shll
rcrb
jle
insb
adc
ret
popf
xchg
mov
inc
cmp
iret
push
popf
or
or
ljmp
sbbl
and
xor
jge
pop
out
pop
inc
xchg
sub
dec
mov
cmp
xchg
clc
sarl
mov
mov
in
pusha
cli
jg
addb
fwait
pop
adc
push
sti
dec
test
mov
ss
sbb
idiv
loope
leave
iret
sti
mov
mov
leave
mov
sbb
xor
dec
add
mov
test
pop
add
out
rcr
add
dec
add
fmulp
xchg
shll
mov
daa
movsl
push
cmc
xor
mov
xchg
inc
jmp
push
fs
clc
inc
cmp
les
pop
bound
cmp
pop
stos
sub
cmpsl
outsl
mov
jecxz
push
push
mov
mov
mov
dec
lds
test
mov
js
pop
xor
mov
push
pop
shll
xchg
in
fldcw
mov
in
jns
adc
inc
mov
dec
pusha
jmp
cmpsb
mov
pop
push
pop
mov
lcall
lcall
jbe
imul
nop
mov
pop
shlb
jae
xchg
mov
popf
fistpll
out
xor
ds
ljmp
pop
or
cmpsl
sbb
jge
jnp
jl
ds
sbb
xor
hlt
and
mov
paddusb
sbb
dec
test
insl
dec
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
or
inc
pop
daa
jecxz
xlat
shrl
mov
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
int
pop
fcmovnu
pop
jns
pop
nop
ljmp
icebp
adc
xchg
lret
push
ds
and
cwtl
mov
dec
sub
mov
imull
dec
into
fstpt
jecxz
xlat
lds
pop
push
dec
out
icebp
pop
xchg
mov
jne
pushf
out
mov
sbb
or
add
imul
ret
sbbl
xchg
sub
cmp
out
iret
ds
jns
mov
jne
pushf
mov
stc
and
mov
or
pop
dec
rorb
pop
mov
or
pop
push
gs
mov
pop
ds
fcmovnbe
inc
ret
rcrl
jecxz
xlat
lds
rolb
rcrl
cmpsb
mov
and
mov
cmp
inc
ret
jecxz,pn
xor
inc
ret
rcrl
mov
dec
fcmovnbe
inc
ret
aam
and
clc
xlat
lds
rolb
rcrl
loop
xlat
lds
rolb
rcrl
jecxz
out
insb
pop
inc
leave
das
pop
and
mov
lret
rolb
rcrl
jecxz
xlat
lds
rolb
rorl
jecxz
xlat
lds
rolb
aad
sub
loope
lds
fildl
out
pop
and
mov
fcmovnbe
inc
ret
rcrl
jecxz
xlat
lds
enter
pop
and
mov
fcmovnbe
inc
ret
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
int
mov
sbb
rolb
ficompl
repz
fcmovnbe
inc
ret
rorl
popa
mov
pop
fcmovnbe
inc
ret
icebp
pop
and
xchg
movsl
mov
cmp
rolb
mov
and
js
lds
rolb
aad
and
mov
fcmovnbe
inc
ret
sarl
jecxz
stc
mov
xor
and
mov
fnop
inc
ret
insl
pop
and
mov
fcmovnbe
inc
ret
rcrl
jecxz
pop
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
rolb
rcrl
jecxz
xlat
lds
fildl
rcrl
jecxz
std
addr16
data16
jb
cli
sbb
sub
rclb
xchg
mov
movsl
xchg
inc
pop
sbb
pop
inc
mov
adc
sbb
pop
rcl
jg
aad
sub
bound
xor
xor
push
pop
and
push
dec
cmp
cmp
les
mov
roll
scas
mov
les
jb
out
int
js
lods
fmull
push
sahf
sbbl
imul
jg
xchg
xchg
les
mov
loope
pop
out
sub
outsl
mov
mov
inc
sbb
xchg
jle
fdivs
repnz
adc
pusha
push
rcrb
stc
dec
popa
mov
rorl
mov
out
stos
inc
cmp
or
int
push
sbb
fists
cmpsl
jmp
sbbl
leave
sbb
xor
sbb
jl
sub
mov
shlb
pop
mov
fistpl
imul
popa
push
stos
bound
xor
sbb
inc
pop
add
out
mov
or
jmp
and
add
mov
sbb
lods
rclb
out
xlat
and
jne
xor
xor
loop
loopne
dec
loop
scas
jge
pop
dec
or
push
mov
cltd
ficoml
pop
adc
push
shr
ss
jnp
test
or
les
fsubrl
and
imul
sbb
cmp
add
in
cmp
add
sbb
adc
jecxz
jne
inc
jne
mov
in
out
cmp
das
out
add
sub
insl
cmp
cmpsb
cmc
pushf
stos
add
insl
or
fdivrs
cmpl
fstpt
jbe
inc
jns
cmpb
push
pop
pop
or
vmovddup
push
pushf
jge
es
push
icebp
adc
or
leave
add
sub
mov
addr16
pop
cmp
push
inc
jg
mov
xchg
jp
xor
add
pop
xor
cltd
fisttps
jmp
sub
cmp
push
xor
lahf
jle
inc
or
out
mov
jbe
fmull
mov
pushf
divb
fcomps
ret
roll
cmc
mov
data16
cmp
cld
adcl
inc
inc
fstl
mov
inc
icebp
sbbl
in
movsb
mov
jmp
and
pop
scas
xor
pop
inc
dec
sbb
mov
pop
loop
xchg
bound
bound
cmpsl
xor
pop
xor
add
and
pop
xlat
push
cmc
ja
xchg
cmp
and
lods
xchg
aas
cmp
and
cwtl
xor
and
mov
push
adc
xchg
out
pop
imul
pop
es
push
fisubrl
mov
cli
or
out
mov
sar
jl
jo
shl
xor
data16
sbb
lret
addr16
in
lret
aaa
add
insb
popa
invd
pextrw
xchg
lods
inc
mov
jae
mov
movsl
ret
and
dec
sbb
xor
xchg
ret
pop
adc
ljmp
mov
fisubl
dec
xchg
dec
jmp
mov
or
stos
or
addr16
pop
aad
repnz
stos
test
sub
ds
movsb
aam
dec
dec
test
xchg
movb
push
orb
js
or
mov
xor
xor
sub
leave
pop
stos
inc
mov
cld
divps
mov
mov
movsl
or
jg
cmpb
call
xlat
pusha
push
lods
ljmp
test
divb
xchg
inc
push
xor
stos
sbb
sbb
mov
cmp
mov
lret
mov
lret
cmpsb
pop
cmp
pusha
or
push
add
ja
sub
mov
inc
add
insb
or
into
stos
enter
xchg
bound
adc
and
repz
push
sbb
jle,pn
pusha
inc
add
xor
add
out
and
xor
jmp
roll
or
clc
fldl
fst
clc
in
lds
mov
push
xchg
addl
pop
fbstp
mov
mov
sbb
adc
ror
or
pop
repz
jb
leave
mov
cmp
xor
dec
pop
sub
mov
pop
shl
lret
and
mov
push
jp
ret
jb
dec
pusha
outsl
bound
ljmp
jno
pop
fisubs
dec
adcb
xor
sub
fwait
int3
add
leave
and
cmpsb
sbb
movb
xchg
add
bound
jb
fcompl
imul
mov
jno
outsl
xchg
jne
xchg
mov
xchg
pop
xor
rcll
jbe
ss
movsb
adc
mov
xor
lock
jnp
push
push
fsubr
fisttpll
adc
and
and
cmp
or
nop
pop
lret
stos
jne
test
dec
pop
andb
and
sahf
cmpsb
mov
add
mov
movsl
rorl
in
call
pop
push
mov
aad
push
lock
mov
mov
jbe
cmc
dec
fwait
popa
pop
call
and
or
gs
cltd
cmp
lahf
lcall
jb
shlb
adc
rorl
outsb
popl
push
or
and
xor
imul
out
inc
xchg
adc
inc
dec
sahf
xor
sbb
and
sbb
and
les
jae
inc
jns
ljmp
loopne
mov
mov
dec
or
sub
add
sub
dec
adcb
int3
fisttpll
dec
popf
push
push
sbb
cmpsb
pop
das
jb
lds
xchg
inc
push
cmc
xchg
dec
mov
xor
xor
ds
mov
fcomp
dec
notl
jl
push
dec
push
gs
jno
push
cwtl
mov
ret
xchg
pop
push
sbb
les
sub
cmp
popl
loope
jp
andl
push
adc
sub
jg
jo
sbb
xchg
pop
push
dec
test
jl
jl
sbb
xor
pop
in
je
add
sub
int3
std
xor
fcoms
les
mov
sbb
jb
sti
ds
xlat
and
push
lods
and
fwait
mov
mov
mov
nop
ficoml
stos
and
adc
xor
xchg
shrl
mov
rcrb
in
call
int
daa
fs
inc
mov
push
addl
pop
divb
jns
fldenv
test
push
cltd
push
inc
fldlg2
or
mov
xchg
mov
aaa
cmp
mov
lods
sbb
iret
lcall
xor
xchg
mov
mov
xlat
xchg
aaa
ja
bound
aaa
aas
das
cmpsl
cmpsb
shlb
sti
mov
jns
addr16
cmp
dec
sti
sti
sbb
out
je
sbb
inc
sub
imul
sbb
out
rcrb
mov
add
mov
xor
cmp
add
pop
mov
fildl
test
mov
das
out
popf
cmc
fmull
dec
popf
push
test
mov
fistpl
mov
sbbl
pop
dec
jnp
cmpsb
add
xchg
sarl
data16
fstpt
andb
mov
mov
pop
pop
pop
stc
adc
pop
jge
jb
xor
lds
xchg
mov
lea
ret
jle
imul
mov
subl
xlat
cwtl
imul
dec
pop
loopne
and
mov
cmp
mov
xchg
stos
mov
xor
and
setns
call
cmp
pop
mov
hlt
rcrb
add
scas
fisubs
pop
mov
xor
enter
add
rcrl
cli
daa
in
adc
dec
mov
sub
add
mov
adc
movsl
inc
jecxz
sahf
jl
lock
shl
leave
fsub
mov
sti
clc
jnp
mov
pop
mov
aam
stos
sbbb
adc
pop
and
mov
xchg
push
xor
shlb
div
popf
jecxz
add
notl
and
inc
jo
and
adc
ljmp
lds
shll
push
loopne
vmread
jge
and
pop
cmp
xchg
mov
sbb
iret
icebp
roll
mov
mov
frstor
popa
lret
xchg
xor
into
xor
js
xchg
adc
add
push
fs
lahf
fstp
jbe
sbb
xor
mov
scas
xor
sub
xchg
add
cmp
xor
dec
add
aad
add
mov
push
mov
cwtl
fadds
orb
repz
pop
jmp
int3
xchg
xchg
adc
xchg
cmp
mov
aas
dec
imul
sub
push
xor
adc
mov
add
sub
inc
imul
xchg
mov
test
mov
add
push
test
add
rcl
dec
adc
pop
mov
add
shlb
and
mov
jo
call
push
push
xchg
fidivl
push
xchg
pop
daa
adc
mov
rclb
push
xor
aaa
imul
clc
xor
add
fcompl
jbe
fimuls
inc
mov
push
fimull
push
in
cltd
jmp
dec
dec
repnz
dec
or
jb
add
ss
jae
or
mov
and
jmp
mov
nop
xor
xchg
in
add
sbb
in
scas
xchg
jns
fwait
jbe
pop
mov
popf
test
adc
jge
scas
pop
movsl
scas
xchg
mov
cmp
aad
cmpsb
mov
mov
das
mov
cmp
je
adc
sub
mov
nop
nop
sbb
dec
ja
jmp
mov
and
add
shlb
stos
test
lahf
push
scas
inc
inc
pop
loop
mov
mov
adc
cwtl
sbb
lcall
hlt
mov
jnp
cmp
cmpsl
xchg
or
loopne
mov
std
cmp
clc
daa
out
xchg
cmp
lea
call
mov
jno
push
ficompl
and
push
je
xor
sbb
ds
ljmp
lds
dec
jbe
popa
sub
xor
jmp
cmpsb
pusha
cmp
outsl
jno
mov
ss
hlt
and
addr16
sbb
pop
jns
lock
rcrb
add
adc
data16
dec
cld
scas
in
inc
cmc
xchg
pop
sbb
sbb
mov
or
icebp
dec
dec
mov
xor
shrl
mov
dec
push
jg
aaa
shl
fs
test
sbb
adc
test
dec
test
fcmovnu
push
out
out
xchg
cmpsb
movsl
test
pusha
sub
rorb
iret
jmp
out
dec
pop
fnstsw
xchg
sub
jge
les
or
xchg
aad
sbb
or
push
cld
mov
mov
outsl
add
xor
ds
cmp
push
sbb
testb
shll
cwtl
jae
pusha
sbb
jne
push
fldl
xor
or
ret
sbb
bound
xchg
les
in
pop
lea
sbb
add
ror
pushf
push
addb
sahf
das
push
xor
jmp
inc
fnsave
imul
testl
inc
loop
and
daa
iret
cltd
sar
add
inc
dec
daa
fnstcw
xlat
cmp
mov
inc
dec
add
sahf
jmp
fs
ffree
cmp
clc
adc
in
xor
dec
mov
fistps
stos
adc
push
mov
pop
sub
fs
adc
or
clc
xchg
xchg
push
cltd
inc
shlb
fstpl
pop
hlt
cli
cltd
push
inc
scas
cmpsl
cmp
mov
in
sbb
sbb
pop
mov
xlat
mov
cwtl
insl
icebp
mov
and
test
dec
pushf
es
ljmp
xchg
incb
lahf
scas
repnz
push
lret
je
or
aam
aam
in
cmp
inc
std
fsubrl
add
outsb
test
sub
enter
cmp
jbe
add
and
push
jae,pt
jbe
std
mov
sub
sub
sahf
int3
push
adc
pushf
lods
rclb
dec
xor
sub
repnz
rorb
mov
dec
push
cltd
fwait
stos
inc
sbb
cmp
std
adc
pop
push
mov
icebp
jo
fists
sub
and
lods
mov
mov
push
arpl
ficompl
sub
ja
xchg
jp
cmc
xchg
mov
sub
and
out
and
cli
gs
cld
in
into
mov
out
jae
or
inc
mov
scas
sbb
adc
push
jecxz
cmp
imul
in
loope
fs
hlt
inc
jp
mov
arpl
enter
cld
jns
roll
inc
adc
jg
scas
sub
mov
sbb
loopne
pop
sbb
clc
jo
xor
scas
mov
or
cmp
imul
pushf
xchg
rcrb
rep
push
sub
nop
testb
cs
xchg
icebp
mov
sub
je
jae
xchg
outsl
dec
inc
dec
mov
cmp
repz
loopne
jl
outsb
push
out
xor
les
pop
in
push
ja
push
xchg
mov
rcll
sub
mov
movsb
xchg
mov
push
jmp
mov
sbb
xor
ss
cmp
lods
in
push
or
fucomip
mov
jmp
mulb
into
xchg
cs
ss
mov
cmp
and
lods
cmc
aad
icebp
addr16
mov
ja
add
jl,pt
out
les
into
loope
add
adc
les
xor
pop
xchg
orl
jae
xchg
push
mov
cmc
or
cmp
ja
lcall
cwtl
shrb
inc
jbe
mov
xor
and
sub
lret
jp
mov
adc
and
mov
stc
ret
cmp
in
imul
and
dec
in
add
fmuls
sarb
push
sbb
pop
roll
pop
inc
mov
jmp
lret
and
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
