push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
sarl
pop
xor
mov
sbb
sub
pusha
in
pop
ja
mov
cmp
lds
push
daa
mov
jle
inc
sub
icebp
lea
jne
movsl
ss
jecxz
push
jg
vmwrite
sbb
jp
adc
mov
mov
and
das
xchg
out
test
mov
sbb
jecxz
mov
ja
insb
loopne
inc
int3
inc
popa
push
push
adc
or
cmp
dec
mov
les
mov
xor
mov
or
mov
es
pop
sti
xorl
movsl
sbb
and
inc
push
add
pop
test
sub
fisubrl
roll
or
mov
or
add
in
inc
adc
mov
mov
sbb
loope
xor
xchg
lret
push
push
sete
cltd
jo
daa
inc
jg
mov
push
xchg
outsl
ret
dec
ljmp
cmpsl
mov
xchg
jnp
popa
arpl
and
sub
insl
pop
add
push
adc
dec
pushf
mov
mov
es
pop
jp
mov
adc
fs
sahf
jne
add
cmovae
mov
cmc
outsb
ret
adc
xchg
popf
sub
imul
dec
sub
xchg
jne
jle
xchg
mov
and
mov
mov
cmp
pop
stos
popf
imul
out
icebp
jmp
stos
mov
push
and
ja
pop
lds
cmp
je
lret
xchg
jecxz,pt
jne
aas
pop
jae
and
jecxz
mov
adc
rcl
out
je
fnsave
push
jmp
lret
cmp
test
aas
sbb
in
std
aad
scas
adc
aas
cmp
sti
inc
adc
leave
int
aas
push
jno
push
and
ret
addr16
or
outsb
cmc
test
mov
out
xchg
popa
jne
mov
push
int3
arpl
sbb
das
dec
and
jmp
add
out
call
test
xchg
pop
adc
cmp
dec
imulb
fwait
inc
cwtl
add
xchg
dec
sub
out
add
loop
xor
mov
cmp
les
add
notl
push
push
stos
push
imulb
fiadds
xchg
dec
mov
rcll
and
clc
push
hlt
adc
add
jecxz
mov
mov
aad
add
xlat
jle
or
xchg
mov
cmp
push
inc
push
mov
icebp
mov
lret
stos
mov
loopne
into
sub
push
xlat
adc
arpl
jp
ljmp
ret
mov
sub
lahf
lock
popa
inc
cmp
xor
mov
mov
stc
mov
scas
std
push
lcall
adc
adc
or
test
sub
gs
icebp
and
dec
fidivrl
das
adc
add
lock
adc
stos
jle
dec
fcmovu
fiaddl
add
jae
sub
jge
negl
test
movb
mov
js
mov
and
jg
mov
arpl
inc
dec
push
jp
sbb
add
pop
ret
movsb
lcall
cmp
pop
cmp
repnz
sub
outsl
mov
and
mov
mov
mov
sub
or
dec
test
mov
push
lcall
shrl
movsb
scas
and
fsubrs
outsl
or
rcll
mov
lods
int
enter
mov
inc
iret
sub
cmc
addr16
add
jno
xchg
dec
jns
pop
rcll
xchg
xchg
ss
out
xchg
mov
push
add
sbb
in
mov
fmulp
movsb
mov
insl
fwait
jno
mov
pop
frstor
pop
adc
leave
pop
mov
sub
popa
xchg
ds
shlb
out
mull
push
fs
and
sub
outsb
xlat
or
sti
cs
les
insb
notb
and
jecxz
and
mov
rolb
push
ss
repz
pop
fadd
sbb
les
loopne
hlt
fcomi
mov
int3
shl
dec
push
fnsave
shlb
cmc
insb
jp
xchg
insb
cmpb
adc
cs
ret
int3
pop
cli
scas
loop
push
mov
mov
loopne
and
jo
imul
adc
loope
shll
mov
lock
push
adcb
mov
cmp
sub
xchg
push
test
and
stc
mov
stos
popa
lahf
out
cmpsb
jns
lods
cmp
mov
sbb
xchg
data16
repnz
rorl
mov
xchg
jno
pop
xchg
addr16
fucomp
adc
push
daa
pusha
nop
jle
xchg
adc
xor
pop
or
or
xorl
lret
and
or
add
jnp
mov
aam
lret
push
pop
cmp
xchg
mov
shrl
popa
das
mov
sbb
add
test
add
cmovb
ficoml
fiaddl
mov
sub
sub
xchg
xor
outsb
imul
loop
mov
jmp
mov
dec
lock
xchg
mov
outsl
fdivr
inc
into
clc
imul
inc
fs
and
and
dec
mov
mov
pop
in
mov
daa
stos
ret
sub
and
xchg
outsb
mov
mov
jp
ret
mov
dec
outsb
pop
jb
xchg
pop
fwait
out
sub
icebp
push
nopl
xor
mov
js
cs
cli
mov
aad
push
xchg
mov
xchg
mov
mov
aas
arpl
je
and
cmpsl
or
std
dec
mov
enter
insb
mov
dec
xchg
jle
repz
push
jmp
shl
jecxz
cli
push
sub
xchg
mov
xchg
rclb
sbb
pop
test
ljmp
scas
fbstp
mov
cltd
mov
loopne
cmpsl
jno
or
jb
push
lcall
test
jbe
sbbl
xor
es
pmulhw
cmp
pop
pushf
mov
loope
xor
fiaddl
mov
xor
dec
sbb
out
jnp
dec
jge
jo
pop
icebp
addr16
mov
jb
repnz
jb
jle
jo
lahf
loopne
paddq
stos
orb
loope
lds
mov
cs
cmpb
inc
imul
cmp
loope
xor
cmp
hlt
inc
push
mov
popf
loopne
hlt
mulb
push
mov
dec
and
sbb
negb
dec
ljmp
lcall
lods
les
test
clc
mov
inc
and
test
das
mov
xchg
jmp
rcrl
sub
scas
scas
mov
pop
rcr
add
jge
jb
and
push
call
out
mov
pushf
hlt
fidivl
xchg
pop
shl
cmp
dec
jmp
and
mov
arpl
jge
subb
shl
sub
add
hlt
push
cwtl
mov
cmp
add
or
dec
add
mov
call
push
adc
push
mov
dec
xchg
arpl
xchg
insb
xchg
xor
and
adc
lds
xchg
cmp
rcll
out
jmp
push
mov
lcall
adc
iret
mov
cmpsl
jmp
leave
push
xor
push
jnp
push
push
dec
xchg
test
aad
inc
and
xchg
je
lahf
push
jecxz
mov
idivb
jg
shlb
and
cltd
je
jg
imul
in
out
xor
out
mov
cmp
mov
xchg
pop
ds
aam
pop
sub
lahf
stos
xlat
gs
jno
ror
pop
mov
sub
or
movl
sbb
sbb
loopne
cmpsl
ret
cmpsb
hlt
loopne
jge
lahf
jnp
mov
icebp
jp
in
jno
aam
adcl
xchg
cmpsl
rcrb
arpl
stos
lcall
inc
lret
add
cmpsb
dec
test
lds
cmp
jmp
je
rcrb
jae
add
lret
rclb
out
aas
inc
cmp
loop
mov
inc
pushf
sub
add
outsl
jecxz
enter
dec
xchg
gs
fsubrl
dec
mov
aad
loop
stc
mov
mov
shlb
push
cmpsb
mov
lret
add
negb
pop
fs
dec
xlat
orl
push
mov
dec
xorl
inc
mov
lahf
iret
mov
cmp
push
mov
add
sub
fimull
lret
int3
cmp
pop
sbb
cmpsl
dec
jns
ror
scas
jne
mov
pusha
adc
mov
stc
fsubrl
jecxz
xchg
pop
mov
cmpsl
js
pop
cli
sbb
mov
test
repnz
adc
incl
push
jle
cmp
popa
fucomi
mov
shll
fnsave
jp
ds
pop
scas
sbb
xchg
dec
sarl
cmpsl
cwtl
je
xor
dec
push
das
lret
mov
js
or
rcrl
pushf
sar
cmc
xor
and
mov
mov
sbb
jg
adc
inc
loop
lods
mov
jno
sub
push
push
es
shl
lret
pop
mov
scas
lahf
adc
fdivrs
xchg
aas
aas
jge
sahf
aaa
sub
mov
mov
imul
pop
xchg
idivl
movsb
cmp
push
push
stos
push
jno
mov
mov
lods
jecxz
mov
out
inc
xchg
ds
sub
nop
inc
cld
adc
movsl
jge
xchg
out
sub
cmp
cmp
push
xor
subl
cmp
pop
mov
cmp
mov
cmc
mov
repz
mov
fwait
icebp
xchg
push
push
mov
and
ds
nop
mov
sbb
mov
lods
in
pusha
jne
and
pop
rol
dec
das
lahf
insl
mov
mov
icebp
fistpl
lods
aas
or
mov
test
movsl
mov
cmp
push
mov
fst
test
outsl
not
rcr
imul
ret
add
mov
sub
mov
push
outsl
cmpl
sub
jl
sarl
scas
mov
push
mov
jno
insb
mov
mov
push
out
inc
arpl
adc
dec
ss
inc
push
insl
imul
in
pop
in
ret
scas
mov
inc
add
popa
insl
jns
mov
pop
inc
leave
or
pop
dec
sub
cmpl
test
pop
dec
xor
pop
add
xchg
sub
out
or
and
addr16
cld
loope
clc
movsb
out
mov
push
rcr
add
xor
inc
ret
pop
outsb
adc
jb
fldt
popw
lock
push
cmpsb
into
jecxz
pop
andl
js
loop
jg
pop
and
adcb
jbe
cmp
leave
fisubrl
es
stos
mov
aad
out
cwtl
push
mov
mov
repz
or
sbb
dec
fcom
pop
test
pop
cmp
adc
movsb
je
rclb
loop
jbe
jnp
gs
add
mov
mov
push
loop
mov
jo
test
pop
out
sbb
dec
jnp
adc
shrl
dec
in
jp
sti
mov
pop
mov
mov
mov
nop
repz
dec
jecxz
es
mov
dec
inc
and
xchg
inc
insb
pop
mov
xchg
std
xor
or
mov
or
enter
dec
out
xchg
cmpsb
add
fcmovne
loope
pop
xor
out
pop
int3
jb
mov
dec
cmc
xchg
aad
adc
inc
sub
gs
stos
pop
push
push
xchg
dec
push
ljmp
jle
enter
and
arpl
or
sbb
inc
outsb
nop
xor
cmpsl
sbb
mov
mov
dec
int3
shll
das
jge
cmpsb
pop
mov
adc
mov
jmp
sub
xor
pop
jmp
and
inc
dec
pop
jnp
mov
push
int
cli
jl
and
mov
es
sub
mov
fisubrl
out
lods
sub
pop
adc
sbb
js
push
enter
div
inc
outsl
sbb
jge
mov
xorb
insl
iret
and
cmp
pop
gs
test
adc
xchg
push
int3
popa
push
jp
pop
xchg
inc
repz
in
lcall
mov
cmpsl
xor
jmp
jmp
mov
pop
out
add
xor
sub
or
jmp
pop
loope
sub
es
or
clc
add
sub
mov
cmp
out
popa
and
les
cwtl
je
jbe
xor
sub
fisubl
andl
inc
mov
in
mov
call
pop
xor
sbb
adc
and
sbb
jl
in
outsb
sbb
jl
orl
out
aad
mov
mov
divl
adc
test
mov
mov
popa
enter
insb
testb
jmp
lret
lahf
inc
dec
pop
adc
add
cmpsb
push
pop
fcom
mov
mov
and
jbe
pushl
aad
outsl
pop
dec
lahf
inc
mov
mov
or
pop
pushf
mov
add
outsb
fidivrl
jae
mov
mov
cmpsl
mov
inc
or
or
jb
int3
cwtl
mov
or
lcall
aad
dec
cwtl
bound
cmpsl
lret
xlat
lahf
xor
out
adc
cmp
int3
mov
mov
lock
xor
imul
mov
jl
loop
les
insl
ret
cmp
or
xor
mov
insl
xor
imul
dec
push
mov
or
and
test
in
pop
and
dec
js
mov
enter
sahf
insb
and
sub
lods
in
fstps
mov
xchg
es
inc
mov
rcll
inc
cld
mov
adc
xchg
pop
push
pop
dec
push
in
ss
cwtl
cmp
and
cmpsb
gs
and
repnz
pop
cmp
hlt
sbb
inc
mov
mov
push
jne
inc
xor
lods
lds
dec
cmp
adc
cmpsb
push
adc
mov
cmpsb
lds
mov
push
push
orb
jns
dec
ljmp
addr16
das
adc
or
pusha
pop
stc
addl
call
push
aam
or
mov
loopne
and
test
adc
cmpsb
sub
inc
xor
dec
mov
je
or
xor
out
rclb
popa
lea
lock
shll
outsb
enter
popa
push
adc
and
adc
fimuls
out
mov
cltd
stos
movsl
shll
stc
pop
outsb
push
add
sbb
and
inc
pop
cwtl
cmp
push
lods
gs
pop
pop
mov
cmpsb
outsb
sbb
aaa
dec
jne
imul
mov
pusha
test
negl
inc
xor
and
jge
scas
add
cmp
dec
stos
add
dec
lret
dec
xor
inc
shll
jnp
je
sbb
jo
cltd
push
xor
inc
cmp
lea
sbb
or
inc
scas
jmp
fldt
xor
stos
inc
inc
xor
pop
aam
push
arpl
in
sub
adc
fwait
icebp
lock
ljmp
mov
not
cwtl
mov
imul
loope
insb
sti
sub
lods
cwtl
mov
mov
sub
rcrl
frstor
sub
js
out
dec
inc
out
repz
stos
push
jo
sbb
cmp
bound
xor
push
shlb
rol
add
pusha
push
aaa
pop
mov
jge
push
push
stos
adc
xor
mov
sahf
mov
push
mov
mov
sbbb
cmp
insl
out
lea
sbb
jl
iret
ds
fs
sbb
std
pop
or
in
xchg
loopne
stos
pop
push
loopne
outsl
push
insl
cli
sub
push
imul
push
cmpsb
fldenv
adc
cmpsl
sub
cltd
shlb
leave
pop
je
test
push
and
sarl
loop
fstps
in
cmp
xchg
cmp
push
fwait
push
inc
vpmacsdql
sbb
dec
sbb
cmp
adc
mov
pop
in
mov
dec
dec
lret
mov
adc
loop
inc
and
dec
jle
dec
xor
arpl
jb
iret
scas
inc
xchg
mov
or
push
xchg
pop
ror
mov
sti
ss
sbb
call
daa
or
call
arpl
mov
push
dec
sbb
inc
xchg
jbe
fldpi
sub
dec
imull
push
int
repz
repnz
sbb
pop
or
sbb
sub
xorl
insb
xor
ret
sub
push
mov
add
pop
cwtl
xlat
les
adc
lret
jg
push
or
push
push
cmp
dec
adc
sbb
cmp
mov
jp
fwait
mov
or
or
push
mov
lret
xchg
and
pusha
test
hlt
sbb
jno
fstl
sub
cmp
lds
xchg
xchg
xchg
lds
mov
nop
test
aas
scas
push
test
sbb
inc
cwtl
xlat
mov
cmp
shlb
mov
cmp
pop
xchg
fcoml
jnp
cmc
insl
xlat
in
jle
test
scas
add
pop
xchg
push
popa
test
pop
popl
insb
ljmp
sarb
imulb
or
fstpl
or
sub
out
je
xor
jp
int
jl
pop
fstpl
adc
push
lods
movsb
sbb
popa
cmc
out
scas
or
sbb
mulb
push
jno
and
xchg
stc
jne
push
xchg
xor
or
xchg
sub
gs
sub
and
or
imul
aas
fadd
or
scas
ret
dec
xlat
cmp
or
std
std
pop
shll
jns
add
cmpsl
sub
sub
or
stos
dec
int
imul
rcl
loopne
pusha
and
cmp
mov
mov
scas
or
or
xor
fbld
jle
loopne
aas
mov
repz
mov
pushf
ret
pop
jo
test
in
mov
std
shll
mov
stos
mov
inc
jne
pop
mov
aas
test
popf
stc
mov
add
shl
mov
adc
gs
mov
push
jg
pop
ret
fistpll
stos
push
mov
push
lea
ljmp
mov
cmpsl
scas
fcom
cltd
jle
mov
and
and
int3
and
cmc
sbb
xchg
cmp
mov
cltd
push
cmc
stos
jnp
mov
int
pop
jge
icebp
sbb
sub
rcl
sub
jl
sub
leave
nop
aaa
movsb
loop
je
daa
icebp
stos
fs
iret
push
and
mov
or
fmuls
test
jo
data16
icebp
pop
addr16
cltd
inc
rorb
mov
mov
addr16
mov
or
inc
shrl
lahf
fwait
mov
inc
dec
imul
in
mov
into
movsl
add
mov
push
outsl
adc
adc
cmovne
cmp
aas
mov
daa
orb
jne
ds
repz
mov
movsb
aas
outsb
sbb
testl
cwtl
xor
shll
fmull
mov
leave
leave
dec
mov
jae
ret
faddl
gs
mov
test
sbbl
cmp
push
loop
mov
ja
out
ljmp
push
add
repz
or
push
test
dec
xor
xor
test
xchg
jnp
lods
rorl
mov
xor
sbb
mov
insl
stc
and
mov
mov
fnstsw
je
rorb
loop
push
shlb
lcall
imul
sarl
shlb
sub
fisubrs
lret
pop
lods
in
mov
sar
popa
dec
cmp
mov
mov
in
mov
addl
sub
popf
adc
scas
sbb
dec
mov
sub
lcall
rolb
lods
mov
call
mov
push
adc
in
shll
jno
into
pushf
outsl
pop
popf
or
push
xchg
inc
ljmp
add
dec
roll
push
cmp
dec
mov
inc
ret
lahf
inc
in
xchg
dec
aaa
fs
jbe
jmp
mov
aad
xor
cmp
inc
jnp
ds
testl
jo
bt
mov
les
roll
out
icebp
adc
sarb
mov
mov
lock
stos
sahf
lret
cld
pop
repnz
adc
loope
fstl
jmp
pop
loopne
or
idivl
xor
cmc
adc
mov
pop
cs
mov
or
daa
hlt
dec
aam
dec
add
add
pop
in
adc
pushf
jbe
stos
dec
fcompl
cmpsl
push
nop
rcll
sahf
inc
and
ja
sbb
ficoms
mov
push
sbb
cmpsb
mov
jge
icebp
mov
pop
push
and
jno
test
xchg
loop
sahf
dec
sub
pop
sub
out
repnz
cmp
inc
fs
xchg
dec
ja
outsb
push
inc
cld
jmp
mov
jge
std
in
aas
jmp
sbb
daa
sub
and
pop
out
pop
test
inc
bnd
push
outsl
inc
or
enter
inc
push
in
pop
pushf
test
pop
jns
or
inc
out
in
xor
clc
stos
fsubl
jns
dec
rcrb
mov
pushf
jae
jmp
into
ror
mov
sbb
out
outsb
pop
add
mov
add
lock
loop
es
aaa
testb
fsubrl
pop
dec
push
jno
adc
pop
leave
cmpsb
xchg
dec
mov
mov
dec
and
inc
sahf
add
dec
dec
scas
mov
fidivs
in
or
std
sbb
xor
decl
leave
in
pushf
cmp
push
rclb
sbb
mov
xchg
sbb
imul
dec
sub
pop
xor
test
mov
push
xor
into
xor
jno
jle
lret
and
push
mov
das
repnz
roll
out
orb
mov
shl
dec
xor
push
iret
sub
mov
add
dec
out
jns
insb
sub
loope
add
adc
push
push
push
lcall
mov
add
mov
ret
jg
pushl
lret
and
push
nop
pop
lahf
je
mov
loop
rcr
ret
ds
sub
mov
popf
in
fmuls
iret
mov
std
inc
jne
jmp
in
aad
sbb
test
mov
pop
in
imul
lahf
cmpsl
das
lcall
lret
or
mov
fistpll
mov
popa
jo
push
dec
and
into
xor
sbb
cmpsb
xchg
push
mov
pop
push
fmuls
inc
loopne
gs
lcall
xchg
sbb
mov
jno
in
inc
mov
daa
lcall
xchg
sbb
jnp
ja
into
lcall
cltd
mov
mov
fmul
out
das
std
add
xchg
inc
aas
scas
std
and
xlat
sub
sub
push
sbbb
repnz
dec
xor
adc
push
fidivs
adc
mov
test
nop
out
dec
sbb
movsl
int
fimull
mov
cwtl
sub
shlb
xchg
and
popa
xchg
cld
mov
mov
lods
sbb
cld
pop
aas
stc
popf
jbe
sbb
pop
flds
push
push
loop
pop
dec
out
sub
and
jno
or
fcoml
scas
xlat
fs
push
ret
xchg
pop
decl
hlt
cmpsb
jo
stos
lcall
call
push
xlat
inc
flds
out
xchg
fwait
add
aam
jne
outsb
cmp
mov
adc
xchg
es
mov
pop
subb
sahf
push
xchg
jmp
cmc
outsb
mov
ljmp
dec
fstp
cmp
aas
int3
xor
std
cwtl
xor
frstor
daa
les
lds
push
out
and
dec
jo
push
adc
out
inc
dec
insl
mov
xchg
jns
sub
imul
and
loopne
imul
mov
push
and
adc
fiadds
shlb
inc
pushf
xor
daa
add
test
or
inc
insl
adc
push
fs
ret
je
mov
jmp
push
addb
js
jge
arpl
andb
push
ds
cmp
mov
in
jb
scas
mov
sar
fnstsw
lds
jg
repnz
cli
pop
mov
jl
jg
push
jle
ret
pop
add
psllq
push
push
cmpb
daa
mov
movsl
jb
sbb
incb
fxch
das
cltd
ret
jecxz
xchg
xor
lods
and
popf
ret
inc
notb
or
mov
adc
notb
clc
mov
shl
xchg
leave
daa
inc
jge
and
shrb
inc
fsubrp
pop
aam
cmp
subl
imul
ds
loopne
dec
out
ret
mov
sub
aaa
insl
addr16
inc
negl
pop
dec
mov
pop
lock
es
fdivs
js
fisttps
pop
ror
cmp
daa
pusha
fdivrp
in
push
push
and
fldcw
ds
adc
cmp
ds
in
cmp
ret
adc
aad
lock
cwtl
mov
out
cmp
jle
push
mov
xor
sub
xchg
mov
popf
lcall
push
aam
mov
jb
xchg
inc
xor
test
mov
fcmovb
xchg
scas
ret
or
addl
sub
xchg
ds
lds
mov
adc
lods
sub
stc
jmp
push
mov
out
inc
mov
sub
jbe
cld
pop
add
push
jne
lods
icebp
sbb
mov
mov
lock
sbbl
mov
sti
outsl
push
lods
fmuls
pop
adc
mov
cltd
or
dec
fidivs
test
mov
fcoml
cmpsl
or
cltd
int
sbb
mov
sti
adc
loop
test
pop
sub
push
mov
cmp
sub
sbb
pop
sbb
and
jb
aas
lea
js
les
in
cs
lds
inc
shlb
shl
add
stos
scas
sahf
ss
sub
leave
sub
cs
jne
push
mov
nop
inc
fnstenv
xchg
jp
call
jb
dec
jp
sbb
xrelease
or
cmp
cwtl
popa
stos
fs
sub
arpl
add
mov
fs
std
movb
mov
mov
cmp
xor
loopne
jb
or
repnz
ds
das
dec
and
jecxz
jge
hlt
push
aam
test
cmp
mov
jle
xchg
ljmp
xchg
out
fwait
mov
or
scas
push
fsubrp
xchg
pusha
mov
adc
test
adc
cmpsl
imul
mov
mov
ror
ljmp
pop
jmp
or
add
lret
or
inc
popa
ljmp
push
dec
out
sub
mov
aas
fcom
push
lock
hlt
rcr
leave
stos
cmc
sub
pop
push
mov
cmp
sbb
in
xor
fldcw
pop
jae
lock
inc
push
out
mov
leave
jbe
add
inc
not
jl
inc
cmpsl
std
mov
mov
das
pusha
jge
cltd
add
enter
sahf
mov
sbb
scas
cs
ror
icebp
imul
sub
sahf
aas
fadd
jne
push
xchg
std
add
stos
test
push
aad
dec
loopne
test
jae
icebp
mov
roll
bound
cmp
mov
loop
leave
fsubrs
pusha
adc
cmp
out
popf
add
jge
fidivrl
adc
mov
insb
call
roll
add
jae
icebp
movsb
aas
xchg
xchg
pop
cmp
mov
inc
xchg
push
lods
mov
imul
rcll
daa
jne
leave
mov
test
jge
mov
sti
out
cmc
xor
inc
inc
mov
cli
bound
movsb
cs
inc
pop
or
shlb
mov
bound
stos
or
push
repnz
adc
xor
and
inc
popf
inc
dec
fld
sub
in
inc
jns
add
cmp
adc
pop
loope
aad
rcll
outsl
inc
fldenv
repnz
dec
and
pop
jno
pop
std
leave
fmull
adc
and
sub
cltd
fs
xchg
xchg
repz
add
dec
test
mov
dec
jns
inc
add
mov
enter
sbb
mov
nop
add
xchg
mov
jg
adc
popf
push
adc
jb
lret
rcr
mov
pop
jmp
push
repnz
pop
mov
femms
push
arpl
std
xchg
dec
into
add
in
aaa
es
mov
pop
nop
mov
or
fisttps
sub
xorb
sbb
adc
movsb
dec
mov
adc
out
inc
lret
pop
dec
xor
push
xchg
or
fnstcw
or
es
push
xor
in
or
or
push
movsb
or
pop
sub
jno
xchg
in
sbb
jno
sbb
or
mov
pop
jmp
mov
jno
mov
ja
mov
push
or
ja
test
dec
outsb
lcall
andb
pop
sarb
sub
mov
hlt
dec
jno
out
pop
adc
adc
rclb
je
pop
inc
pop
jo
loopne
dec
faddl
push
popa
das
or
adc
pop
sub
lahf
imul
imul
mov
sahf
bound
call
shll
and
sub
adc
inc
jae
outsl
imul
test
mov
dec
jmp
mov
adc
jb
xlat
inc
push
out
or
or
or
xchg
cmpsb
ret
inc
outsl
mov
sbbb
xchg
jl
sbb
add
les
push
xor
add
aam
sbb
add
cmp
mov
das
sub
cli
jb
call
sbb
pop
lods
insb
mov
sti
aad
adcb
inc
in
fisubl
adc
sbb
xchg
stc
mov
sub
inc
xor
inc
mov
sbb
daa
stos
daa
sti
test
mov
push
cmp
xchg
cwtl
adc
mov
pop
jns
cmp
aad
cmp
xchg
xchg
sub
mov
sub
fstps
iret
and
add
lock
inc
mov
fsubl
imul
or
mov
jbe
repnz
popa
or
repnz
mov
sbb
cmp
mov
or
ret
pop
xlat
inc
xlat
int
jmp
movsb
insl
imul
jp
lods
xchg
pop
dec
push
and
sub
xchg
movl
rclb
xlat
push
pushf
jp
add
idivb
loope
not
xchg
adc
pop
addr16
mov
shl
pop
jnp
js
inc
dec
mov
xchg
dec
cmp
xor
mov
or
es
dec
jnp
lock
dec
push
push
mov
insb
cmp
lea
cmp
cmp
mov
jns
shrb
pop
push
sahf
sub
or
xchg
sub
jmp
inc
int
ficoms
cmp
adc
mov
xor
push
jbe
xchg
mov
cmpsl
out
add
fs
lret
fstl
push
into
aas
pushf
mov
jne
inc
daa
cmc
or
push
xor
mov
es
push
push
adc
pop
inc
ljmp
or
dec
xchg
dec
mov
hlt
das
clc
or
and
ljmp
add
adc
xchg
roll
inc
inc
push
adc
aam
mov
dec
mov
enter
imul
xor
add
out
aad
bnd
out
repnz
add
jno
pop
jne
shl
nop
sub
insl
and
push
push
sti
adc
or
repz
inc
jb
aam
clc
ja
aaa
pop
data16
or
inc
add
mov
pop
cmpsl
dec
shrb
mov
jae
jnp
negl
jnp
pop
mov
pop
stos
test
or
enter
int
les
pop
js
jbe
in
fldt
jp
rolb
pop
pop
cmc
cmp
jb
jae
push
xchg
pop
fs
inc
mov
shll
pop
mov
cmp
pop
mov
xchg
xchg
cld
cld
push
sub
mov
cmp
cmp
mov
es
push
imul
aam
jecxz
mov
add
inc
jmp
pop
mov
outsl
dec
push
or
int3
jae
mov
and
ret
sysret
lret
cmp
fldenv
movsl
mov
push
iret
or
mov
arpl
enter
inc
cli
add
out
and
jg
mov
lods
xor
mov
rorl
js
cmp
and
ss
or
js
and
in
mov
ljmp
movsl
lods
cmpl
clc
out
lods
mov
enter
mov
sbbl
xchg
push
and
push
shrb
clc
daa
jp
push
ds
fidivl
jg
test
adc
jnp
fmull
lock
mov
sub
cld
fsubl
lret
aam
mov
cli
int3
in
lods
push
push
hlt
xor
jl
jmp
jnp
push
ret
sub
add
aam
add
int3
mov
enter
inc
pop
in
and
mov
cmp
fildl
adc
mov
mov
into
and
adc
lods
push
cmp
adc
mov
push
cmpsl
mov
sub
mov
add
roll
adc
jmp
cmpsl
aad
out
inc
aas
xor
iret
in
pop
push
xor
jmp
push
adc
fistps
lea
mov
cmp
in
shrb
add
dec
or
mov
rol
add
cltd
jbe
sbb
test
aas
xchg
and
stos
test
fldl
jno
std
out
sbb
jne
mov
xor
mov
jae
dec
jmp
push
dec
cmp
pop
xchg
push
jns
shlb
es
rol
divb
ljmpw
in
mov
sbb
mov
add
ljmp
hlt
nop
or
mov
mov
cmp
cmpsb
jo
or
inc
lret
mov
mov
lcall
push
dec
and
cwtl
xchg
lret
push
gs
leave
popa
lods
jl
adc
and
int
jl
imul
in
fists
or
cmpsb
inc
ja
cmc
add
mov
inc
mov
jp
movsb
and
lods
sub
mov
int
mov
and
rcrb
jp
int3
dec
xlat
mov
and
lcall
jae
cld
xor
mov
adcl
andb
xchg
call
inc
push
mov
fcoms
and
inc
pusha
and
sahf
sahf
adc
daa
lcall
sahf
jmp
add
xchg
scas
or
or
out
inc
pop
dec
jp
add
ret
xor
loopne
inc
leave
add
int3
loop
fbstp
mov
gs
cmp
mov
jmp
dec
mov
or
jp
aam
push
rcl
push
mov
les
loop
inc
jmp
clc
lret
push
hlt
add
in
mov
xchg
push
aaa
sub
lock
cld
xor
lcall
push
sbb
in
mov
mov
cld
xor
aad
cli
adc
cmp
inc
inc
jae
adc
xor
cmc
lcall
push
nop
push
push
add
out
movsl
addr16
fcompl
jns
test
push
adc
loope
into
xchg
xlat
ja
cmp
sahf
add
and
call
xchg
daa
es
repz
or
jg
lret
addb
rorb
and
les
test
jecxz
add
iret
jns
js
xchg
hlt
cmpsl
pop
es
outsb
pop
movsb
aam
popa
dec
rcll
mov
leave
out
repz
ss
cs
fs
scas
pop
xlat
xchg
mov
ds
mov
add
sbb
push
jbe
rolb
test
lahf
xor
aam
rcrl
imul
loope
add
fs
add
adc
jmp
sti
cli
dec
xchg
repnz
call
xor
lea
jo
inc
pop
push
dec
lods
call
xor
pop
mov
xchg
inc
in
xchg
fsubrs
pushf
jnp
sub
in
dec
ja
pushf
sbb
jbe
ss
lret
adc
xchg
lret
xor
in
stos
je
int3
mov
sarb
adc
dec
or
push
imul
int3
loope
cs
das
cmpsl
jle
xor
push
jns
dec
negb
cli
test
push
xlat
and
fildl
sub
adc
call
pop
sub
popf
pop
adc
out
adc
xchg
mov
cmp
or
cmp
lahf
scas
jns
xor
dec
pusha
jmp
ds
es
sub
push
adc
enter
mov
jl
in
and
hlt
test
dec
add
adc
shll
aad
mov
sbb
in
add
test
pop
sub
cmc
mov
mov
ss
fidivs
pusha
mov
jae
mov
loopne
mov
movsb
and
testb
pop
shrb
or
fucomip
sub
stos
xchg
sub
cmp
lock
test
lods
push
mov
xor
and
xchg
dec
cmpsl
outsb
or
mov
pop
fcmove
xor
adc
mov
filds
imul
imul
cmp
xchg
clc
shl
gs
fnstcw
jne
xchg
lahf
xor
dec
xlat
fsubs
pusha
pop
fiaddl
mov
push
cmc
push
dec
iret
insl
add
dec
in
lret
das
adc
push
loop
cmpsb
push
mov
add
orl
jmp
sar
loop
cmp
js
lret
push
fdiv
daa
pusha
inc
xchg
pop
sbb
in
sarb
imul
add
sub
hlt
in
mov
and
mov
pop
jno
sub
dec
pop
dec
roll
mov
andl
shll
nop
ljmp
aad
jbe
cs
mov
insb
in
push
call
jp
fisubrs
ja
repnz
inc
xchg
push
repz
pop
xrelease
mov
cwtl
ret
sbb
adc
and
cmp
or
das
imul
and
cmp
xchg
adc
fs
adc
hlt
mov
ror
cmpsl
sub
inc
je
bound
lea
ljmp
jg
pop
push
rcrb
out
sbb
jl
cmc
mov
fs
add
and
stc
jecxz
fisttps
lret
jl
dec
cltd
fisubrl
dec
cmc
adc
popf
mul
sub
dec
push
xor
rcr
adcb
xchg
jne
push
jmp
xor
cmpsb
or
orl
out
sarl
scas
lods
push
sub
addr16
lods
jg
inc
test
stos
mov
mov
sahf
inc
insl
and
hlt
mov
push
mov
das
mov
negl
lock
test
aam
xchg
daa
movsb
xchg
fdivr
test
dec
js
lea
leave
and
inc
jge,pn
ret
movsl
out
push
or
mov
add
xchg
push
enter
push
and
sti
or
cmpsb
xchg
iret
lock
pop
insl
testl
mov
or
push
jb
sti
loope
sbb
les
int3
inc
aas
or
sbb
fisttpl
cmpsl
jl
mov
dec
jb
cmp
mov
popf
jno
subl
and
cmp
js
inc
sbb
roll
lds
fistps
call
pop
pop
out
push
insb
testb
lahf
pushf
in
leave
pop
subl
ja
sbb
negb
add
adc
pop
aas
aam
negb
pop
sbbl
sub
mov
xchg
les
iret
or
cmp
fstpl
xor
in
pop
mov
test
dec
test
fistpl
repnz
addr16
adcb
mov
std
inc
lahf
push
jge
lret
cmc
insl
adc
add
es
popf
popa
push
fninit
insb
mov
scas
jo
sbb
xchg
sbbb
outsl
dec
cwtl
cmp
xor
add
cmp
xor
pop
sti
imul
test
push
adc
loop
fwait
icebp
insl
addb
mov
sub
dec
cmpsb
movsb
jns
scas
jae
in
xchg
aam
test
and
push
fdivs
cmp
cld
inc
scas
imul
lea
add
sbb
mov
movsb
dec
mov
sub
mov
into
sbb
adc
out
pushf
cmp
call
popl
mov
xchg
inc
movsb
dec
pop
inc
dec
jb
inc
fiadds
push
fsub
cmpb
std
sti
je
cli
and
addr16
xor
add
lret
inc
adc
and
in
daa
rcr
xor
out
sub
adc
cwtl
inc
mov
cmp
mov
mov
cwtl
mov
push
adc
ds
pop
push
lcall
mov
jne,pt
cmpsb
push
or
mov
bound
jbe
mov
pop
ss
mov
or
addl
xor
adc
ljmp
aad
les
mov
fidivrl
push
inc
xchg
je
mov
dec
cwtl
call
jmp
xor
jmp
stc
mov
or
cld
adc
and
leave
cmp
mov
mov
xchg
call
push
push
test
jne
das
jno
pop
pop
push
mov
push
andl
inc
repnz
ds
or
out
sarl
mov
push
pushf
cmp
sbb
addr16
std
jl
pushf
pop
test
andb
xchg
xchg
cmc
fwait
inc
mov
dec
or
aaa
xchg
cwtl
push
in
mov
cmp
cmpsb
dec
arpl
cmc
xchg
lods
sbb
mov
push
pop
dec
mov
out
push
pop
stos
xchg
pop
test
loop
xchg
cmp
loop,pn
clc
or
push
mov
jle
fcomi
and
push
push
push
aas
cld
shll
repnz
or
movsl
rcrl
repz
jmp
in
loopne
lret
insb
mov
adc
jle
jae
or
jbe
dec
cmpsb
mov
pusha
pop
jb
jle
es
ljmp
sub
sbb
lcall
imul
xchg
fstl
pop
or
fistpl
outsl
imul
add
lods
faddl
test
daa
push
xor
out
js
mov
ds
mov
arpl
fstl
cmp
sbb
leave
imul
adc
dec
push
stos
jmp
sti
push
xlat
lock
pop
ds
sub
sbb
cmp
and
add
cmpl
fcomps
insl
outsl
jecxz
fwait
lds
mov
mov
fidivrl
les
dec
xor
pxor
push
mov
xor
aad
mov
mov
int
mov
scas
jne
dec
mov
movsb
cmpsl
outsb
jno
or
add
test
cmp
mov
in
sub
pop
sbb
adcb
clc
test
lahf
push
dec
jnp
sub
pushf
mov
loop
rcll
sub
sub
cmc
mov
and
cltd
sarl
cmpsb
xchg
jno
inc
mov
imul
sub
jmp
in
and
sbb
hlt
aas
sub
add
pusha
lahf
pop
std
aad
pop
adc
pop
adc
subl
adc
leave
jae
mov
je
fidivrl
ss
outsb
dec
adc
pop
xor
dec
mov
ret
pop
stc
cs
mov
sbb
sbb
aas
push
push
lock
sti
xorb
in
jno
jge
cli
aad
mov
int
insl
xor
xchg
mov
inc
outsb
mov
and
xor
sub
out
iret
lock
push
pop
or
jl
and
sbbl
sub
stc
mov
mov
stc
mov
pop
push
fcoms
jb
jnp
inc
xchg
xchg
out
fs
push
lea
lods
or
imul
dec
mov
jp
mov
loope
push
xor
or
lret
or
ja
fisttpll
and
push
or
lods
cmp
je
cltd
cmpsl
sar
jle
mov
das
xor
push
adc
sub
sbb
xor
es
mov
iret
out
lret
ficoms
jecxz
insl
push
add
test
jae
shrb
xchg
insl
mov
pop
jmp
fnsave
sbb
ja
and
cmp
pop
jle
mov
jbe
incl
inc
add
sbb
dec
mov
inc
pop
add
inc
std
pushf
pop
sub
out
inc
sti
mov
pop
jmp
dec
arpl
ret
shll
daa
mov
psubsb
ret
imul
test
imul
pop
mov
rorb
mov
push
shlb
fcompl
add
adc
push
hlt
xchg
test
push
mov
hlt
fsts
jne
testl
inc
test
js
cmp
xchg
sbb
loope
js
popf
adc
sar
shlb
das
psrlq
pop
sub
mov
jne
cmpsb
xchg
aas
loope
incb
push
rol
cmpb
xchg
loope
loope
movsb
les
ret
mov
mov
es
sbb
outsl
inc
xor
in
cmc
jge
xchg
outsb
in
mov
test
mov
cld
sub
mov
lock
scas
inc
xchg
hlt
icebp
add
jbe
out
scas
repnz
dec
dec
dec
cmp
ljmp
std
cmp
int
mov
gs
mov
data16
repnz
shlb
xchg
xor
daa
jbe
lahf
mov
stos
inc
test
gs
inc
sub
mov
lods
xchg
stos
pop
inc
gs
call
xor
loope
mov
jecxz
outsl
jo
stos
jg
adc
int3
pop
jecxz
jp
mov
lea
lea
jl
push
mov
jp
sbb
shlb
cmp
cltd
push
push
andb
ret
xor
fsub
dec
mov
jns
icebp
mov
push
scas
pop
es
mov
stos
sbb
inc
dec
adc
jbe
test
aad
cltd
pushf
movsl
popa
adc
mov
adc
and
add
fcmovbe
push
sub
dec
dec
mov
mov
xchg
sbb
in
mov
xor
mov
imul
in
fistpll
sub
push
pop
std
not
ja
xchg
xor
jge
ljmp
pop
push
sub
sub
sbb
mov
dec
adc
sbb
inc
xor
sub
testl
or
or
daa
and
imul
data16
int3
xchg
movsb
shl
sbb
sbb
add
jmp
pop
xchg
pop
out
arpl
add
push
or
mov
add
mov
jne
mov
ss
lret
mov
aas
rcll
clc
lahf
outsb
ljmp
push
sar
jne
mov
xchg
push
adc
fldl
pop
int3
cmp
insl
insl
push
icebp
mov
mov
cld
xor
hlt
lcall
sti
test
sahf
jge
adc
in
outsb
mov
ss
mov
pusha
pop
mov
sbb
lea
cwtl
es
mov
xor
popa
mov
popa
lods
cmp
ljmp
inc
ficoms
outsl
pop
enter
stos
mov
popf
cltd
cli
xchg
and
xor
sbb
jb
and
mov
jmp
sub
xlat
adc
jl
add
mov
out
jbe
ds
mov
sti
jbe
jle
adc
mov
std
inc
cmp
jl
xor
repnz
add
rcr
int
or
sbbb
push
imul
dec
push
mov
lods
add
test
mov
or
sahf
inc
popf
sbb
rcrl
scas
lret
fs
test
adc
cmp
jns
sub
ja
inc
sahf
fnstcw
aaa
movl
xor
test
iret
jl
cs
adc
inc
movsb
inc
lea
lock
xor
push
and
and
dec
adc
cmp
in
push
and
sbbb
lret
xchg
pushf
out
mov
cmp
inc
inc
sub
mov
icebp
dec
or
lret
addl
rorl
cmp
jno
imul
cmc
adc
std
ret
test
push
sbb
push
push
cltd
push
cmp
push
dec
xor
mov
iret
adc
add
rcrb
insl
lahf
jl
mov
sbb
stc
pop
loop
add
sti
mov
push
mov
jnp
cmp
sbb
negl
jg
dec
pushf
sub
outsb
or
loop
mov
icebp
btc
aad
aam
mov
loopne
into
fimuls
mov
loope
repnz
enter
std
test
in
iret
imul
mov
push
sub
int
push
inc
int
or
mov
xchg
outsb
mov
test
pop
and
and
xchg
in
leave
dec
pop
es
xor
or
cs
xchg
cmc
inc
add
mov
mov
sub
andb
in
adc
pusha
icebp
hlt
idivb
push
ja
subb
and
xchg
or
adc
add
xlat
mov
adc
mov
leave
dec
push
movsb
in
mov
sahf
or
xchg
sbb
inc
stos
adc
push
ljmp
cmp
xor
daa
jno
lcall
sbb
jns
cmpsb
lock
inc
xchg
jg
mov
pusha
test
call
cmp
xchg
pop
mov
add
fistps
movsb
or
jp
into
and
cmpb
mov
cmp
fs
pop
insb
loope
push
sbb
fstps
push
jns
in
inc
lods
mov
pusha
cmp
bound
and
inc
movsb
popa
dec
stos
lds
cmpsl
dec
aaa
jbe
xchg
sbb
push
rcrl
or
adc
stos
push
divl
and
int3
out
bound
dec
and
sbb
fcompl
bound
aaa
pop
mov
lret
push
fdivrl
rclb
imull
inc
mov
dec
inc
pop
rcrb
inc
push
xor
mov
mov
push
incl
out
sub
sbb
test
jno
sbb
lods
mov
loopne
aas
int3
stos
insl
adc
push
jnp
inc
sub
aad
mov
dec
movsb
mov
imul
push
mov
push
addr16
or
push
aad
push
mov
sbb
fs
out
mov
addr16
or
mov
jge
jnp
mov
inc
pop
fimull
inc
pushf
out
and
fisubl
cmp
bndstx
nop
rolb
in
jns
adc
mov
and
xor
cltd
gs
into
js
mov
xchg
in
sub
sti
jno
inc
into
mov
fisubrl
lock
cmpsl
push
rcll
incb
add
lcall
out
movsl
cmpsl
add
lret
add
adc
mov
xchg
cmpsb
movsb
in
lea
fistl
pop
cwtl
push
cmp
lods
push
dec
addr16
movsb
jl
aaa
aam
loopne
sbb
add
out
rolb
pushf
mov
and
cltd
dec
enter
jmp
xchg
push
xchg
pop
sub
shlb
push
fists
xor
in
lcall
fistl
fwait
pop
sub
icebp
dec
imul
std
outsl
inc
add
mov
or
push
mov
test
mov
andb
ljmp
out
or
icebp
mov
mov
cld
scas
and
arpl
stc
ss
mov
subl
scas
mov
jecxz
test
fmul
mov
xor
jns
orl
sub
mov
push
dec
popa
mov
or
lods
mov
fcompl
leave
lcall
out
inc
sbb
int
inc
lock
and
or
mov
daa
bound
and
nop
lods
outsl
int3
pop
jo
or
in
xor
fmul
iret
stos
imul
and
lods
aaa
sbb
mov
jns
sahf
sbb
mov
adc
push
mul
and
pop
fimull
lods
movsb
lret
push
hlt
and
xchg
mov
mov
dec
jbe
in
cmp
jmp
mov
cmp
or
inc
adc
jmp
movsl
div
roll
movsl
mov
xor
dec
xor
add
fsts
std
ror
aam
sbb
int
cli
gs
mov
pop
xchg
inc
subb
fisubs
jp
shl
test
enter
lods
inc
mov
in
dec
loopne
aam
das
shlb
stc
pop
cmpsl
imul
mov
sub
xchg
cs
int3
cmpsb
jbe
cmpsb
jp
jecxz
or
jns
inc
popa
loop
pop
xchg
add
sbb
in
mov
sub
xchg
pushf
out
push
ja
jge
rcr
xchg
nop
stc
inc
push
insl
mov
insl
popa
bnd
jnp
lahf
pop
das
fdivl
int
imul
insl
loopne
push
pop
testb
imul
pop
inc
in
rcr
pop
cmp
dec
hlt
cld
mov
mov
imull
movsl
adc
int
pop
inc
mov
ss
xchg
inc
lds
push
sbb
sub
in
mov
mov
jne
jnp
add
cmp
fcom
addr16
sti
enter
mov
push
mov
inc
shll
in
add
popf
dec
lret
mov
mov
and
xor
xchg
push
clc
orb
xchg
xor
fwait
and
mov
jmp
xor
pop
imul
out
jnp
mov
and
pop
movsl
std
out
cmpl
gs
sahf
cmp
xchg
outsb
jbe
jp
mov
inc
inc
out
notl
ficomps
shrb
es
std
clc
enter
or
inc
mov
inc
dec
out
jp
insl
lock
push
sbb
ds
psrld
cmp
pop
cld
shlb
cmp
push
jae
cmc
shrl
inc
dec
push
push
cmp
sub
call
pop
cmp
nop
cmpsb
pop
arpl
sub
imul
gs
imul
mov
mov
ss
cmpb
outsl
or
mov
jge
ss
int3
loope
vmovsd
or
pop
cwtl
add
nop
sub
fidivs
mov
add
and
test
push
loop
hlt
mov
iret
xchg
js
inc
test
pop
bound
les
into
add
and
loopne
mov
mov
stos
xor
lds
bound
push
jbe
adc
mov
jg
inc
mov
mov
popa
push
jg,pn
add
xlat
adcb
push
add
lods
imul
js
cmpsl
mull
pop
dec
test
mov
mov
xchg
pop
add
mov
bound
addb
xchg
push
loope
sbb
mov
movsb
push
aas
repz
insb
fistl
dec
or
dec
ss
test
cltd
xchg
imul
xchg
icebp
shlb
or
mov
jnp
pusha
pop
or
clc
test
xchg
loop
call
ds
mov
nop
test
popa
mov
jb
push
call
sub
insb
stos
or
jmp
in
shl
adc
sarb
dec
pop
int3
les
out
mov
lock
das
jg
pop
mov
fcoms
xor
dec
inc
sbb
mov
call
lock
ss
or
dec
les
icebp
mov
repnz
jle
xor
push
jno
push
mov
cld
cmp
xor
popf
cltd
nop
addl
repz
scas
lods
xchg
lock
mov
jg
into
mov
ljmp
inc
lods
xor
xor
xor
mov
xlat
int
sub
and
scas
or
dec
mov
sub
xchg
dec
addr16
inc
stos
and
jnp
and
inc
outsb
inc
out
les
sbb
or
cmp
jge
pop
sbb
xchg
inc
sti
cmpsb
lds
movsb
inc
notl
mov
shrl
test
xchg
in
mov
imul
jne
iret
jl
ja
test
adc
lods
fcoms
test
adc
js
cld
ljmp
aad
adc
or
or
xchg
roll
test
imul
and
or
lods
inc
outsb
ljmp
adc
jge
push
cmpsb
lcall
cmp
fisubrl
cmp
in
or
stos
mov
and
sub
addl
fs
daa
in
jns
xchg
xchg
pop
mov
insl
xor
and
sub
and
cmp
rorb
or
dec
es
test
adc
and
sarl
pop
adcl
ljmp
inc
hlt
or
daa
das
jg
dec
fisttps
xlat
lret
loopne
in
pop
fcomps
xor
push
ds
insb
cmc
xchg
mov
xchg
xlat
jmp
mov
pop
mov
cmp
inc
shlb
out
divl
push
in
mov
add
xchg
adc
fdivl
pop
cmpsl
test
jg
testb
xchg
mov
xchg
cltd
jmp
je
jnp
es
out
repz
ja
mov
pop
mov
jns
dec
adc
cmpsb
stos
xor
sbb
pop
pop
push
out
jae
push
mov
cmp
inc
jmp
ffree
sub
mov
push
xchg
pop
shlb
jne
cmpsl
imul
push
cld
push
out
int
std
dec
cmc
xor
fs
orl
mov
add
xchg
add
mov
ret
ret
sbb
ror
mov
sarb
fdivrl
or
mov
repz
stos
xor
arpl
lret
test
andb
loopne
xchg
xchg
or
aad
or
ret
leave
push
hlt
mov
loopne
xor
inc
mov
mov
mov
lea
xchg
sub
repnz
cwtl
orl
inc
shr
callw
mov
add
iret
jo
nop
mov
mov
vhaddps
sub
adc
cmp
movsb
fsub
push
ljmp
ficomps
data16
sub
mov
aas
inc
mov
mov
leave
sbb
test
out
push
xor
push
push
fwait
cld
gs
call
shll
ds
mov
aam
xchg
mov
jae
rolb
test
scas
repz
pop
cmp
jge
dec
es
repnz
dec
outsl
fwait
lock
cmp
jno
xchg
into
cmpsb
and
sub
incl
aas
fistpll
sub
add
out
mov
call
mov
or
add
dec
lods
popa
mov
mov
cmp
mov
movb
in
push
outsb
fidivrl
pop
or
pop
sub
mov
adc
clc
xor
loopne
es
pop
and
mov
jns
mov
subl
mov
loope
dec
cmp
insl
and
outsb
cwtl
push
push
rol
sar
cmp
shr
mov
push
mov
aad
push
shr
ret
idiv
aad
pop
cli
pop
outsb
sbb
ja
ljmp
js
xor
cld
and
xlat
sub
sub
sub
inc
xchg
sbb
int
lret
sub
fidivrs
fildll
movsl
lock
push
cmpsb
fcmovnu
xor
cs
ljmp
sahf
sub
aas
sbb
aas
lret
cmp
pop
cmp
dec
fwait
inc
xlat
jmp
out
xlat
sbb
sbb
cmpb
push
sbb
inc
rcl
movsb
inc
xor
pop
push
arpl
mov
fistpl
jae
dec
inc
cmp
repnz
in
sbb
sub
push
mov
cmpsl
cmpb
cmpsl
xor
imul
or
adc
sub
xchg
push
sbb
push
sbb
rcr
call
inc
popw
je
push
adc
mov
xchg
imulb
sbb
aam
and
enter
repz
sub
or
mov
sub
adc
or
push
mov
and
movsb
and
xchg
mov
test
lret
bnd
ret
lcall
outsl
push
jns
inc
inc
into
or
mov
movb
pop
enter
aam
or
mov
scas
fcoms
popf
push
inc
lahf
clc
mov
cwtl
jbe
mov
pop
cld
fwait
lods
or
pop
subl
and
mov
fistpll
xlat
jp
in
sbb
arpl
ja
mov
lods
inc
push
add
add
cmc
mov
pop
into
and
add
inc
out
pushf
inc
cmp
mov
popa
mov
xor
jmp
fstps
sub
add
and
xor
leave
lds
hlt
int3
cmp
jmp
sub
icebp
out
mov
dec
xor
movsb
add
jno
pop
or
jl
jge
in
jo
cmp
icebp
cwtl
jp
pop
jnp
popa
insl
lds
lret
out
insl
xlat
mov
jp
or
mov
lea
loop
and
add
shlb
xchg
lahf
jmp
cmp
dec
fcompl
enter
jge
scas
ljmp
and
and
mov
jae
into
sbb
subb
aad
cmp
jecxz
xchg
ret
gs
xor
mov
outsb
incb
enter
shll
mov
enter
mov
mov
notl
jns
pop
sub
adc
xchg
icebp
pop
movsb
shrb
add
lret
rclb
mov
std
or
mov
inc
sbb
sbb
sti
lods
dec
sub
pop
or
jecxz
adc
adc
dec
cmp
cmp
lea
push
mov
mov
mov
popf
lahf
fld
adc
mov
mov
mov
jle
inc
xchg
enter
jb
roll
xchg
xchg
clc
xor
fdivrl
or
sub
fdivl
sub
pop
jp
jmp
mov
adc
mov
push
pop
add
adcb
icebp
jle
mov
push
xor
pop
pop
adc
mov
or
mov
pop
pop
xchg
pop
jns
inc
scas
add
cmpsl
inc
sahf
vpsrlw
mov
push
insl
pop
lods
adc
test
lods
pop
mov
lods
call
pop
or
xchg
ljmp
inc
jmp
sbb
mul
fdivrl
in
js
pop
fistpll
cmp
jns
dec
fwait
ja
aad
hlt
lret
mov
or
outsb
ja,pn
push
sbb
ret
jae
test
aam
les
hlt
shrl
push
pop
icebp
push
add
aam
cltd
cmp
call
sbbb
fs
loope
mov
push
fdivrs
or
mov
in
pop
insl
lret
lds
icebp
insb
cmp
xchg
pop
mov
xor
push
jo
icebp
into
shrl
jae
loop
jge
mov
movsl
mov
pop
cmpsb
sbb
int
jno
movsb
lahf
mov
cmp
push
sbb
lret
xchg
push
jno
mov
push
and
mov
mov
ror
xor
jecxz
cmp
dec
out
jo
jo
inc
fmul
hlt
cltd
outsb
inc
cmp
negb
or
push
dec
pop
test
fcomps
pop
mov
push
movsl
add
std
sbb
aaa
xor
arpl
mov
push
scas
lret
jnp
hlt
es
push
fdivl
scas
in
pop
arpl
jp
sbb
push
jne
out
es
popa
fndisi(8087
inc
in
sub
sub
scas
mov
and
jb
xor
cmpb
and
ret
dec
repnz
mov
cwtl
inc
mov
mov
xchg
xor
imul
pop
add
test
insl
or
jle
xor
lds
ds
in
in
pop
push
int3
inc
or
add
xor
into
mov
in
icebp
fcomps
adc
jne
scas
stc
lahf
mov
pop
sub
cmp
pushf
mov
dec
sbb
push
xchg
stos
aad
dec
sub
xor
xchg
sbb
push
mov
aam
pop
xorl
pushf
xchg
loop
fs
mov
lcall
mov
add
push
pushf
jbe
arpl
pop
push
pop
sbb
rolb
leave
xchg
mov
jmp
xor
mov
fdivl
mov
inc
decl
insb
pop
mov
hlt
mov
push
cmp
lcall
das
notl
loopne
push
cmp
shll
push
add
dec
rorb
mov
fisubl
scas
mov
jg
mov
in
mov
imul
add
or
add
sub
jmp
ljmp
dec
insb
push
dec
inc
push
sbb
cs
nop
subb
ja
in
or
imul
adc
out
movsb
pusha
call
cmp
aas
int3
jnp
clc
roll
popa
sbb
aas
cmpsl
test
dec
and
movsb
nop
mov
pop
mov
nop
xchg
movsb
inc
shl
scas
pop
mov
sub
or
in
push
adc
dec
jo
mov
ret
sbb
rcrb
cmp
addr16
outsl
push
sbb
cmp
jle
aam
jl
mov
out
dec
insb
or
cmp
inc
sti
xor
repz
test
cltd
jo
push
inc
and
jp
shl
cmp
sub
or
stos
ljmp
out
mov
shl
jo
jb
data16
out
sahf
iret
repz
shll
lret
sahf
or
mov
in
adc
in
jmp
mov
outsl
pop
push
xchg
mov
imul
xor
pop
cmc
loop
ret
add
add
push
inc
aad
jecxz
jae
int3
cwtl
and
inc
jecxz
sbb
dec
sub
clc
sbb
out
or
ljmp
stos
test
sub
xchg
mov
push
mov
push
dec
xchg
xor
push
adcl
pop
lds
aaa
sahf
stc
mulb
adc
out
xorl
jno
xorl
mov
push
test
pop
and
mov
jnp
mov
fsubrs
cmp
lahf
js
mov
mov
inc
outsl
jne
push
mov
mov
aad
fsub
test
sbb
sub
outsl
mov
scas
pop
pop
adc
dec
bound
mov
pop
outsl
loop
xor
add
repnz
imul
bound
out
sbb
dec
or
or
push
or
mov
rcr
dec
xor
sub
add
sbb
xor
add
adc
xorl
and
sti
in
sbbb
mov
mov
sbb
out
xor
je
cmpsb
mov
ss
ret
and
sahf
sti
aad
loop
jle
in
pusha
jno
sub
or
movsl
lods
add
pop
mov
sub
mov
clc
inc
adc
jbe
jmp
lods
mov
pushf
pop
cmc
mov
or
hlt
mov
xor
jb
jbe
leave
mov
mov
fndisi(8087
es
out
sbb
mov
xchg
lret
lahf
or
ret
aaa
mov
icebp
xor
push
cld
inc
dec
sahf
outsl
mov
adc
xor
in
out
ret
push
js
mov
test
repnz
push
int3
jo
jns
cmpsl
mov
jae
js
rorb
cli
sbb
in
cld
lds
fisubrs
int
call
addr16
fucom
xor
test
cs
mov
lahf
loopne
sbb
addr16
sahf
cmp
xor
add
pusha
xor
mov
out
fsubrl
sub
out
push
pop
incl
jecxz
loopne
cmp
push
xor
imul
shll
xchg
arpl
sahf
jge
sbbb
xorb
mov
add
or
inc
int
imul
stos
dec
mov
int3
xchg
push
jmp
dec
mov
loopne
mov
mov
and
aaa
fdivrl
cmpsl
popf
loopne
and
shlb
imul
test
and
mov
das
mov
xor
lret
bound
cmp
inc
cmpsl
outsl
popf
mov
add
int3
sbb
and
mov
xor
push
out
dec
jg
cmp
popf
push
jge
lock
in
lret
inc
jmp
jno
add
fdivrl
jg
push
orl
jbe
inc
push
lods
enter
mov
data16
jl
mov
popf
xor
fnstsw
nop
xor
jecxz
adc
hlt
aaa
inc
out
push
sbb
xor
popa
mov
xchg
sbb
rcrb
mov
fstps
pop
inc
lods
mov
dec
push
push
and
pushf
cmpsl
add
adc
cmp
mov
outsb
xchg
cmp
mov
aad
daa
cli
shrb
js
or
push
xor
les
push
arpl
rcr
into
dec
test
insl
enter
fcomps
jb
stc
dec
adc
xor
arpl
jg
inc
gs
out
fsubrl
lea
push
pop
clc
mov
shll
dec
outsl
mov
stos
movsw
notb
mov
sbb
sbb
outsb
orb
push
sub
dec
sbb
out
pusha
xchg
js
in
sub
test
or
movb
sub
sbb
movsb
hlt
inc
jno
inc
mov
adc
add
jge
arpl
clc
push
jo
add
data16
cmpsb
into
mov
test
iret
push
pop
dec
xor
rcrb
xorb
imulb
jmp
cmp
flds
int
mov
jg
xchg
pop
leave
pop
leave
sub
std
mov
add
es
addr16
aam
shr
mov
mov
pop
ss
sbb
bnd
mov
mov
or
hlt
clc
js
testb
add
daa
add
adc
mov
xor
loopne
in
in
aad
cmp
or
stc
dec
insb
gs
arpl
and
addr16
pop
fadds
add
ret
sbb
shlb
in
nop
loopne
push
add
jbe
mov
repnz
push
inc
pop
and
clc
adc
fwait
test
dec
adc
xor
xchg
and
xor
lcall
cmc
popa
xor
pop
or
mov
push
adc
aas
pop
in
fiadds
aam
dec
popf
imul
xchg
js
and
sbb
xchg
xor
test
jnp
push
daa
inc
andl
decb
inc
push
imul
lds
shll
jno
add
filds
es
movsl
orl
div
insb
xchg
gs
sbb
cmp
dec
mov
cs
mov
loopne
scas
or
xor
xchg
dec
push
iret
sub
clc
mov
adc
push
jle
xchg
mov
pop
xchg
loope
mov
out
test
sbb
test
das
adc
sarb
or
inc
rcr
jae
mov
push
cmp
rcrb
pop
insb
sbb
push
xchg
mov
mov
pushf
idivb
bound
pop
dec
addr16
lea
inc
sbb
out
xchg
push
int3
ss
adc
pop
out
lcall
sbb
pop
gs
es
mov
push
adc
repnz
subb
xchg
stos
xchg
cmpb
xchg
in
jnp
cmpsl
popa
sub
lods
stos
test
cwtl
lods
inc
mov
add
popf
lods
in
xchg
imul
outsb
jp
add
push
jmp
sti
and
cmp
or
or
imul
rorl
mov
push
shlb
cmp
xchg
jnp
mov
cmp
ja
repnz
shrb
pop
fsubrl
clc
loop
rcrb
fs
and
cli
ret
lea
daa
mov
stos
shll
push
ret
insb
push
call
enter
in
ret
xor
push
pop
lds
adc
xor
test
adc
call
pop
cmp
testb
sbb
push
xor
xchg
movsl
or
push
fsubrs
mov
leave
mov
int3
cld
adc
ret
sub
das
cli
fsubl
or
in
test
ss
mov
mov
sbb
xor
push
dec
jmp
scas
out
lods
xor
inc
pop
jb
call
xor
cmp
je
mov
add
push
jg
cs
pushf
idivl
add
and
cmpsl
fstpt
or
pop
pop
stos
mov
or
sbb
xor
cmpsb
scas
ds
jmp
adc
mov
jbe
xchg
ret
shrb
push
pop
xchg
jae
gs
mov
insl
daa
fsubl
adc
shrb
fdivl
mov
dec
xchg
mov
xchg
scas
jle
jnp
mov
pushf
imul
mov
mov
std
jge
testb
pop
mov
repz
cs
cmp
pop
push
insl
out
and
sbb
ror
inc
enter
mov
jmp
sti
pop
sub
lret
dec
std
ds
lahf
mov
cwtl
jbe
pop
test
out
adc
jb
imul
notl
dec
pop
dec
mov
andl
rcll
cmpsl
mov
daa
clc
dec
mov
cmp
fistl
mov
clc
adc
popa
push
inc
mov
pop
mov
cmp
cmp
adc
daa
or
hlt
push
dec
scas
xor
enter
pop
ss
dec
fiadds
sti
inc
cmc
clc
stos
movsl
fiaddl
or
sub
cmpsb
dec
or
das
mov
dec
push
lds
cmpsb
xor
sbb
fucomp
mov
daa
std
xchg
mov
fnsave
lods
xchg
push
into
into
cmpsl
fdiv
and
inc
cmp
cmpsl
idiv
in
dec
cmpsl
mov
insl
stos
and
push
push
nop
scas
sub
cmp
xchg
leave
cmpl
test
inc
bound
fwait
xchg
mov
insl
popa
lock
mov
inc
jbe
add
mov
push
sbb
lcall
ds
pop
jge
in
or
or
das
jl
das
jmp
setp
out
orl
in
mov
sti
mov
outsb
dec
add
mov
popf
cmp
dec
pop
dec
cmpsl
lcall
int
xor
adc
pop
rolb
ret
dec
outsb
jns
lods
fcoms
push
lret
fcomp
enter
mov
mov
pop
arpl
mov
lock
orb
popf
insb
stos
mov
adc
cli
lahf
lods
js
jecxz
pop
dec
cmp
add
daa
in
loope
xchg
cmpsl
xor
loope
cmc
mov
xchg
testb
dec
test
fidivrs
pop
lods
add
cmp
mov
jae
push
mov
and
pop
add
fstpl
xchg
mov
push
pop
into
loopne
pop
push
push
pop
je
subl
mov
mov
fcompl
fst
je
cmp
loope
ss
sbb
gs
add
test
jle
pop
sbb
push
loop
push
ret
inc
pop
shrb
pusha
test
mov
call
and
adc
shll
and
or
or
jb
fisttps
ja
mov
xor
sbb
clc
xchg
dec
mov
mov
and
adc
popl
cltd
call
rcll
subb
jge
mov
idiv
js
sbb
cld
fcom
sahf
xor
test
sub
lods
mov
lret
mov
das
jp
aad
in
adc
and
xchg
push
mov
push
repz
add
xor
cmp
repz
sahf
out
test
and
cmp
sub
icebp
imul
push
sbbl
add
pop
loopne
divl
pusha
das
and
iret
xchg
mov
add
fistl
movsb
xor
cmp
mov
mov
insb
pop
push
xor
inc
cmp
inc
dec
mov
jl
lea
je
mov
addr16
mov
or
ljmp
mov
cmp
pop
and
cmp
ds
mov
sub
outsl
movsb
out
mov
mov
out
add
or
adc
pop
mov
push
push
jo
ljmp
mov
out
stos
push
mov
js
lea
fs
divl
dec
outsl
add
jno
out
test
in
xor
and
mov
xor
cli
faddl
cli
or
dec
sti
inc
mov
imul
ljmp
mov
pop
cmp
out
jmp
sbb
int3
dec
xor
aam
imul
scas
mov
js
aad
into
and
pop
dec
mov
shll
cmp
leave
nop
push
cmp
leave
mov
lods
jbe
arpl
sti
jg
push
hlt
cmc
push
shrl
jns
cs
mov
jnp
and
outsl
pop
lea
dec
jmp
sbbl
addb
push
mov
adc
and
xlat
xchg
pop
cmpsb
push
dec
push
adc
inc
movsb
js
push
jle,pn
sub
leave
les
push
aaa
mov
mov
sbb
cmpsb
iret
push
mov
pop
stos
mov
inc
stc
mov
cmp
xor
or
imul
sarl
dec
cli
xchg
mov
inc
lods
mov
mov
pop
jg
clc
es
adc
dec
sbb
outsb
jge
imul
lods
das
mov
shrl
stos
in
scas
inc
push
sbb
xchg
pop
stos
dec
lock
xchg
or
js
inc
fstpt
test
clc
fiaddl
movsb
dec
fiaddl
sub
imull
imull
mov
sbb
fmul
mov
push
je
push
cmp
cmp
rolb
dec
xchg
add
push
or
hlt
add
in
mov
in
cld
pop
dec
fsubrp
lock
inc
mov
xchg
pop
or
and
mov
mov
add
push
add
or
iret
lods
add
shl
negl
jp
pop
mov
loopne
pushf
or
mov
cmp
mov
xchg
cmp
jns
add
outsl
pop
dec
fcoms
dec
negl
push
fmull
sbb
test
push
shl
fwait
push
cmp
rcrl
jecxz
aaa
cmp
sub
cmp
cli
or
jns
roll
dec
xchg
xor
mov
shrb
loope
lods
mov
xchg
mov
push
fbstp
fldenv
les
les
pusha
or
testl
ss
aaa
cmpsl
jmp
push
sti
pop
xlat
dec
lret
pop
push
cli
das
xchg
adc
fstps
cmpsl
mov
pop
push
adc
mov
outsb
jle
mov
mov
rcll
push
dec
mov
lcallw
int
cmp
xchg
adc
xchg
das
inc
pop
mov
iret
and
lock
fcomi
add
mov
pusha
cmp
inc
mov
add
mov
cmp
shl
inc
jecxz
das
or
jg
aam
mov
filds
arpl
lods
pop
insl
pushf
sti
push
or
je
push
push
mov
push
xor
push
sbb
mov
xchg
pop
dec
mov
imulb
dec
dec
add
push
adc
push
bound
mov
and
mov
xchg
ljmp
icebp
mov
jae
sbb
mov
dec
push
xor
insl
shl
mov
jg
or
and
movsl
movsb
sub
pop
pop
push
or
dec
dec
and
gs
jecxz
cmc
ljmp
inc
mov
jmp
inc
repnz
dec
mov
dec
xchg
and
popa
adc
popf
fnstenv
rolb
or
jno
lods
and
sbb
push
jo
fsubrs
faddp
jbe
xchg
imull
stos
xor
fdiv
les
out
pop
ss
popf
repnz
mov
sahf
dec
cmp
or
inc
rcr
xchg
rclb
xchg
dec
test
sbb
ds
push
pop
add
fs
fstps
mov
xchg
mov
pavgb
test
dec
leave
popa
outsl
adc
in
and
popa
sbb
sbb
data16
stos
sahf
aad
mov
xor
mov
mov
loopne
ret
add
popa
sub
mov
decl
clc
jl
das
fucom
pop
dec
mov
out
loope
outsl
sbb
in
ficomps
mov
fwait
test
sbb
adc
or
aaa
je
xchg
div
cwtl
jb
cli
adc
in
inc
test
stos
dec
cmp
roll
add
cmpsb
jns
pop
xor
sbb
rorb
push
mov
xchg
les
pushf
out
pop
xor
push
mov
adc
mov
sub
lcall
shlb
pop
hlt
lods
sbb
xor
fcomp
cmpsb
aas
xor
mov
mov
jns
popa
stc
ss
and
fwait
inc
push
pusha
sbb
lret
js
cli
push
adc
mov
and
pop
cmp
int3
addr16
mov
dec
test
mov
adc
push
test
shrb
add
in
push
pop
mov
jge
stc
cltd
mov
sti
push
leave
insb
jmp
dec
notb
shl
pop
and
xchg
or
pop
sbb
lret
aam
add
shrb
js
gs
mov
add
sbb
insb
cmpsl
inc
mov
loop
inc
mov
mov
inc
mov
in
sbb
pop
mov
sbb
std
mov
add
es
hlt
mov
pushf
insb
js
push
mov
enter
aam
xchg
inc
add
mov
sub
or
fbld
pop
or
ss
push
cmpl
dec
ffreep
fistpll
cli
adc
sbb
aad
xchg
in
xchg
pop
neg
in
dec
into
hlt
test
bound
repnz
pop
shr
aam
push
cli
or
idiv
inc
testb
icebp
jb
hlt
sbb
mov
sub
test
xchg
push
bound
and
jl
aaa
push
test
sbb
jmp
dec
mov
or
sub
push
out
jb
test
inc
xor
sbb
fistpl
sbb
mov
leave
or
xchg
int3
push
add
pop
mov
cwtl
scas
or
or
jg
mov
mov
sbb
ss
pop
rcrl
ljmp
adc
xor
add
cmpsb
or
push
and
jbe
fcmovnu
fcmovbe
sub
in
or
adc
or
jmp
je
cmp
scas
mov
lcall
insl
pushf
pop
mov
or
and
push
movsb
or
mov
test
loopne
aam
loop
aad
mov
mov
pop
and
imul
cmp
repnz
pop
cli
testb
aam
pushf
ss
dec
aam
stos
test
jl
pop
into
data16
fimuls
inc
cmp
or
or
ja
lods
je
xchg
sbb
add
scas
mov
mov
jno
jb
rcl
pop
mov
rcll
mov
clc
cmp
in
jge
sub
lret
clc
inc
ja
push
loopne
dec
or
xor
iret
dec
adc
xchg
sbb
sbb
add
cmp
lods
stc
inc
int
mov
dec
scas
std
shll
movsl
hlt
insb
pop
test
js
out
cs
cwtl
xor
jge
add
pop
jno
hlt
xchg
mov
fmuls
jecxz
testb
adcl
and
cmc
into
mov
pop
bound
pop
sbb
imul
inc
ret
popa
push
ds
cmp
movsl
pop
xor
bound
test
add
xor
fcompl
test
push
insl
jnp
arpl
es
push
lahf
sub
movsl
push
cmp
adc
push
pop
cld
lret
repz
push
xor
ret
cltd
arpl
ljmp
adc
cwtl
jb
sarb
jbe
cmpsl
inc
push
lods
subl
jae
fcoms
out
nop
repz
jecxz
xchg
mov
push
sbb
cmp
push
bound
fildll
insl
call
hlt
adc
int3
sbbb
lods
fistps
pop
mov
std
push
xchg
shlb
lds
aas
addr16
insb
push
ret
test
push
jge
into
and
pop
movsl
lret
mov
pushf
outsl
fcmovnu
dec
je
lock
decb
jno
dec
jge
test
add
xchg
ret
mov
pop
mov
cld
cmp
shll
or
in
shlb
mov
popl
test
roll
popf
lcall
inc
cld
inc
mov
inc
adc
inc
xchg
jb
fs
mov
insb
test
popa
out
adc
jecxz
scas
sbb
cld
cli
pop
adc
rorb
push
nop
shll
inc
mov
jno
dec
arpl
dec
push
call
faddl
mov
jae
or
ss
clc
sti
out
int3
mov
mov
xchg
inc
and
test
or
or
je
xor
out
out
loope
mov
xor
pusha
test
cmp
sub
fsin
jo
jg
call
aas
xor
xor
lds
lret
mov
xor
or
sub
test
add
lock
outsl
jne
xchg
int3
nop
movb
ljmp
lret
ljmp
sbb
pop
fbld
test
xlat
test
gs
add
add
aad
mov
mov
mov
cmc
out
and
fwait
cmp
int
icebp
mov
sbb
mov
repnz
mov
push
mov
jo
sbb
sbb
inc
nop
sbb
rcrb
xor
cs
cmp
mov
mov
popl
pop
mov
enter
fiadds
imul
push
adc
or
test
fisubl
das
jo
xchg
and
rclb
inc
cli
jno
inc
aam
mov
outsl
fwait
hlt
fisttps
mov
roll
out
add
jge
add
out
pusha
dec
pop
daa
and
dec
jne
cs
inc
mov
inc
sbb
pop
lret
jl
out
loope
sahf
fnsave
les
stc
fsubl
iret
rclb
mov
aam
and
jnp
stos
inc
scas
arpl
repz
push
gs
sub
jae
sbb
cmp
loopne
mov
lcallw
mov
adc
test
cmp
popf
mov
ss
jnp
pop
cmp
insb
jae
pushf
fisttps
xor
mov
mov
dec
loop
jmp
and
mov
mov
loopne
int
pop
jp
sarl
push
jp
lret
dec
cmp
xlat
mov
inc
and
arpl
pop
push
sbb
mov
mov
mov
or
les
push
leave
sbb
jbe
jae
je,pt
add
xchg
ja
xchg
lods
dec
in
in
sarb
and
icebp
pop
jecxz
mov
ficoml
fistl
cld
mov
pop
fs
mov
roll
imull
stos
cli
jle
adc
loope
shlb
jns
adc
jmp
out
add
sub
jbe
js
jle
add
mov
mov
fmulp
sbb
lcall
adc
out
loopne
stc
notl
pop
jle
xlat
cmp
repz
movq
mov
xchg
xor
or
sub
ljmp
fisttps
jbe
lods
sub
adc
insl
cmpsl
std
lret
addr16
mov
push
jo
pop
cmpsb
fstp
std
add
cmc
jg
mov
or
jge
in
loope
push
ja
rclb
mov
call
inc
sti
pop
sub
cmp
movb
call
fstl
mov
jne
sahf
pop
fmuls
call
mov
push
fcompl
je
xchg
mov
adc
int
mov
mov
fsubs
mov
loopne
fiaddl
cmp
mov
xor
in
sub
sbb
or
lods
jns
and
push
and
leave
ror
mov
dec
lods
stc
adc
fcomi
sbb
push
dec
push
fisttpll
shlb
or
inc
loop
lock
xchg
mov
cmp
mov
push
cltd
mov
inc
aas
out
mov
jne
nop
adcl
mov
rclb
arpl
cltd
xchg
jae
out
loop
jnp
ja
cwtl
or
mov
sbb
fisubrl
jb
xchg
or
outsb
shl
std
fwait
cld
cmpb
pop
push
sbb
aas
daa
imul
cltd
jge
or
shlb
ljmp
inc
pop
sti
xorl
xlat
cld
mov
cmp
decb
mov
jp
push
jo
sbb
xchg
imul
mov
pop
decl
dec
js
sbb
sbb
and
cmp
ljmp
pop
add
test
movsl
mov
fnsave
jecxz
sti
repnz
jp
push
dec
jnp
xchg
sbb
pop
inc
dec
push
fimull
mov
dec
out
adc
inc
sub
cld
push
bnd
xor
sarb
cmpl
js
ja
aad
mov
idivb
maxps
jnp
xchg
jp
mov
dec
andb
xchg
bnd
sub
jbe
fistl
mov
sub
jns
mov
enter
pop
cmpsb
imul
shlb
addr16
inc
or
pop
insb
pop
xchg
mov
xor
data16
push
scas
push
addr16
jnp
dec
push
lret
xchg
pop
pop
addr16
cltd
ss
les
stc
andb
movsl
das
and
not
in
adc
xlat
ficomps
and
movsl
push
xchg
inc
js
repnz
xorb
ja
cmc
jb
out
icebp
and
xchg
bound
adc
out
cmpsb
adc
loop
adc
mov
jbe
xor
inc
pop
fucomi
popa
sbb
push
lock
insl
or
xor
xchg
fwait
iret
fcomp
ret
jle
push
mov
mov
in
mov
or
addr16
out
les
arpl
ret
pop
out
pop
adc
pop
dec
mov
adc
ret
push
push
cmp
shll
stc
lret
in
or
fnstenv
out
sub
cmp
push
outsl
push
cmc
pop
ja
movsb
insl
aaa
inc
pop
sub
inc
dec
insl
iret
gs
mov
inc
loope
push
scas
jmp
adc
daa
test
imul
mov
fcomp
std
add
xlat
lods
fcmovnu
lret
push
subl
push
mov
pop
loope
and
lea
in
addb
mov
loopne
pop
push
std
sbb
cltd
pop
cmpsl
lahf
mov
mov
lock
push
ds
lock
insb
in
sar
dec
pushf
popa
jnp
or
push
ds
outsl
dec
lea
pushl
fcmovb
jg
lret
mov
lahf
stc
cld
dec
mov
out
das
add
adc
lods
das
movsl
scas
or
je
mov
fisubl
adc
movsb
fwait
sbb
mov
jg
xorl
fisubl
rol
sbb
ds
adc
add
fnstcw
adc
sub
or
sbb
mov
fucomi
mov
repnz
dec
bound
pop
jbe
jno
cmpsl
sbb
mov
mov
jmp
dec
mov
pop
mov
ljmp
jnp
inc
cmp
cmpsb
cltd
pop
jns
add
inc
cli
xchg
mov
and
jp
mov
adc
jp
fwait
mov
sbb
insb
dec
sub
sbbl
mov
dec
es
xchg
or
cmp
inc
dec
jg
sub
xor
icebp
out
add
mov
sub
xchg
mov
mov
lret
sub
cmp
subl
mov
nop
pop
cvtdq2ps
sahf
icebp
mov
adcb
sbb
or
jb
int
loop
add
fistpll
mov
push
cltd
fldenv
pushf
or
add
push
adc
ds
imul
adc
lret
push
repnz
mov
daa
pop
mov
jecxz
sbb
xchg
mov
sarw
lcall
push
addr16
jbe
add
xor
xorl
sbb
or
mov
add
xchg
outsb
pop
or
std
das
mov
pop
cmc
inc
lods
adc
add
jns
pop
mov
pop
pusha
loopne
mov
cltd
or
dec
ja
in
pushf
call
orl
jne
cmp
popf
jmp
sarb
adc
loope
xchg
outsl
xchg
mov
fisubl
in
inc
mov
xchg
add
dec
pop
aad
sar
enter
in
int
and
test
and
adc
xlat
hlt
incl
mov
lods
dec
in
into
cli
stc
mov
and
dec
adc
lods
lahf
cmpsl
ds
daa
dec
or
adcb
mov
lods
movsb
mov
push
repz
lahf
test
xchg
sub
cmp
mov
pop
outsl
adc
push
mov
or
sbb
ret
inc
fstl
push
es
div
add
jo
test
cmpsl
movsb
jmp
xor
lock
and
push
ja
dec
fsubs
xchg
and
or
dec
jnp
xor
pop
imul
iret
les
pop
movl
dec
push
icebp
mov
push
mov
clc
adc
push
rcrb
and
sub
and
pop
cmp
mov
mov
shl
or
mov
cmpsb
test
ret
test
jae
cmpsb
ret
pop
in
shll
enter
fcmovnbe
cmpsb
repnz
popa
movsb
xchg
mov
in
push
adc
xchg
xlat
dec
jg
pop
testl
in
add
lea
imul
and
enter
test
test
fwait
sbb
xchg
mov
adc
adc
lods
push
or
inc
add
jbe,pn
in
cwtl
adc
sar
pop
sub
sbb
loopne
lret
push
jmp
sbb
or
mov
les
sahf
mov
arpl
js
pop
mov
mov
mov
sbb
add
out
rorl
imul
repnz
sbb
sub
test
cmp
jmp
movsb
lea
pushf
mov
xchg
les
testl
adc
repnz
daa
or
popf
push
jle
mov
pop
int
shll
rorb
shl
fwait
mov
add
adc
es
xchg
push
jbe
out
mov
repnz
into
fisttps
adc
mov
pusha
cmp
pushf
jge
or
fs
inc
mov
xchg
cmpsl
ret
push
stos
aad
aam
mov
mov
fsubr
mov
or
xchg
mov
xchg
dec
add
dec
stos
and
aaa
hlt
xor
in
idivl
inc
repnz
xchg
sub
call
in
fsubl
mov
mov
and
into
push
icebp
lods
mov
fdivrs
adc
push
sbb
addr16
jl
push
outsl
subb
inc
push
lahf
ja
push
push
jbe
or
sub
xchg
dec
or
lods
fcoml
jp
rcr
sub
mov
lock
scas
js
push
cltd
in
into
mov
mov
dec
shrl
push
cmp
xor
sub
mov
mov
jge
testl
fidivs
inc
insl
xor
fisttpl
pop
pop
xor
mov
adc
xchg
adc
dec
push
aaa
mov
insb
cmpsb
mov
popf
fcoms
push
fsts
fisttpll
nop
ds
repnz
mov
xchg
ds
test
es
rorb
add
call
mov
or
loopne
stos
cmp
xchg
es
pop
sub
shl
mov
push
orl
cld
jne
sbb
sbbl
mov
shlb
subb
nop
rorb
sbb
es
mov
push
and
dec
push
and
mov
sub
testl
sub
inc
dec
mov
sub
xchg
adc
out
les
push
and
fwait
sti
sbb
repnz
mov
add
scas
sbb
stos
mov
test
pop
call
mov
jne
xlat
xor
jo
lds
pusha
add
enter
inc
mov
addr16
pop
in
adc
call
dec
aad
fwait
mov
or
sbb
dec
fsub
sub
jb
outsb
fwait
or
outsl
inc
aad
push
out
mov
lea
iret
push
stc
sbb
pop
push
push
pop
xor
jbe
dec
test
decb
mov
rorb
xlat
subl
jp
les
pusha
jg
loopne
add
je
jae
sahf
icebp
sbb
inc
lcall
es
mov
test
sysret
sub
sub
cs
jns
xchg
push
inc
add
shlb
movsl
lea
aaa
jl
push
outsb
ja
mov
cmp
push
sub
stos
push
xchg
ja
sbb
stos
fstpt
mov
sti
mov
rorb
sahf
sarb
cld
ja
js
inc
stc
xor
or
mov
call
xchg
jge
int3
mov
inc
sub
xchg
xchg
inc
xor
dec
lods
push
imul
adc
xor
mov
arpl
aad
aad
shll
cmp
lret
or
jle
lret
fwait
xor
jecxz
dec
xor
jno
incl
test
push
andb
out
std
or
sub
lahf
pop
mov
cmp
jbe
loope
test
xor
mov
popa
bound
fwait
xchg
mov
rcll
cli
in
jnp
jb
inc
fwait
mov
shr
mov
dec
les
nop
push
xorb
aad
xchg
mov
ljmp
inc
adc
jo
in
int
aas
dec
xchg
xor
pop
mov
stos
push
ss
insb
loopne
daa
sbbl
paddw
mov
enter
pop
hlt
push
xor
pop
jb
sbb
and
jmp
and
mov
ret
cmp
out
imul
dec
cmp
or
jmp
insl
cld
dec
icebp
inc
movsb
into
pop
mov
mov
jg
dec
inc
and
cwtd
stos
and
mov
mov
pop
cmp
inc
pop
adc
cwtl
ss
lret
inc
sub
hlt
and
icebp
sbb
iret
and
mov
dec
out
fnstsw
xor
outsl
xor
out
add
daa
ret
jne
mov
inc
ja
enter
dec
rol
inc
inc
mov
lock
les
push
mov
ss
sbb
sub
mov
sti
xor
test
add
inc
push
xchg
pushf
test
or
pop
push
mov
xor
ret
clc
push
imul
add
sub
lods
jno
lea
pop
aaa
ret
cld
stos
ret
cs
out
xchg
in
popa
lretw
or
pusha
or
insb
scas
mov
jo
cmp
mov
xchg
sub
pop
mov
pop
ljmp
mov
ja
test
pop
insl
repnz
in
jmp
scas
repnz
mov
lods
jg
pop
dec
xor
out
or
mov
fisubl
add
pop
je
pop
mov
ds
insl
out
movsl
xor
fnstcw
jmp
in
push
filds
add
mov
or
out
pop
jmp
xlat
inc
out
jno
pop
cwtl
sub
inc
cmp
mov
adc
test
xchg
sbb
mov
or
cmc
stos
sub
in
pusha
jmp
loope
roll
push
rcll
div
dec
inc
jb
daa
leave
gs
ja
sub
push
fdivp
mov
ret
scas
fstpl
sub
enter
in
sbb
idivl
xor
lahf
out
push
fwait
sbb
and
aas
pop
jae
int3
xchg
outsb
adc
xor
push
xor
je
jno
add
sbb
loope
imul
jnp
test
test
jb
inc
and
add
in
jmp
jg
enter
pop
shlb
pop
sbb
sbb
cmpsl
repz
divl
pop
sbb
std
xchg
int3
pop
and
stos
jmp
fnstsw
jne
mov
lret
and
push
imul
mov
das
xchg
scas
std
pop
bts
insl
or
out
xor
sti
xchg
sbbl
subb
push
jmp
xchg
xchg
push
and
jge
cmp
out
imul
jl
cli
es
mov
lods
pusha
xor
dec
sbb
imul
push
out
stc
push
jl
add
push
xor
lahf
pop
xchg
lock
sbb
xchg
ret
push
mov
sbb
xchg
in
mov
cmpsl
inc
aas
icebp
sti
pop
push
push
mov
mov
mov
cmpsl
in
and
ss
sahf
fst
or
fists
jne
xchg
cmp
clc
mov
xor
lea
shlb
repnz
and
lret
adc
aas
inc
jo
cli
adc
addl
jo
jne
cli
test
mov
or
test
adc
adc
lods
push
sub
jne
jno
imul
cmp
popa
pusha
jl
jmp
jmp
mov
cwtl
pusha
inc
std
adc
pushfw
call
push
ja
push
cs
sub
das
aad
popa
gs
test
mov
jp
rcrl
xchg
nop
xchg
je
ficomps
xchg
push
insb
movsl
xor
xchg
pop
loopne
push
mov
call
xchg
push
jmp
out
sti
cmp
shl
data16
mov
push
and
mov
lret
fs
jl
outsb
jae
push
in
icebp
mov
in
jle
cmp
insb
dec
daa
fcomps
stc
mov
data16
mov
int3
jmp
pop
cmp
scas
pop
ficoml
fs
xchg
nop
mov
sbb
add
sub
lcall
push
pop
out
add
aam
mov
loope
jnp
mov
xorb
pushf
call
pop
fnstenv
cli
inc
and
add
push
adc
inc
ljmp
out
hlt
jmp
add
mov
rcrb
outsb
mov
xor
aam
ss
or
aad
or
adc
sbb
cmp
push
and
in
std
mov
movsl
dec
pop
movsb
push
mov
fldenv
mov
cs
or
jp
dec
pusha
lea
dec
or
pop
mov
jle
mov
mov
jns
lods
in
fldl
test
push
sarb
dec
add
xchg
test
push
fists
add
adc
fldl
sub
sbb
cmp
mov
int3
inc
shlb
ja
or
loop
pop
xchg
push
xchg
out
adcb
in
add
xor
mov
and
jae
scas
rorl
jp
inc
ror
add
ds
ss
jbe
mov
and
sbb
or
push
and
jne
cmpsb
adc
mov
add
iret
mov
adc
push
or
fisttps
mov
push
adc
loope
movsl
cld
imul
loopne
jno
xchg
icebp
xchg
in
mov
int3
xchg
fsubr
fldcw
pop
mov
push
sahf
push
cmp
sarl
lods
ret
sti
add
movsb
pop
fs
sti
shlb
in
adc
test
test
cmpsb
fmuls
or
imul
arpl
icebp
push
stc
push
mov
pushf
xchg
add
lcall
call
insb
xchg
outsb
mov
jo
cwtl
mov
dec
adc
je
lods
mov
std
daa
jecxz
int
adc
popf
add
push
arpl
jmp
push
mov
mov
sbb
or
xor
jp
ljmp
adc
int3
mov
mov
ds
pop
lea
adc
cmpsl
cmc
repz
dec
test
fisubrl
in
enter
gs
pop
pop
call
sbb
adc
int
inc
dec
test
push
mov
popa
js
clc
sbb
call
js
add
nop
jo
pop
or
mov
sub
pop
addr16
dec
insb
roll
lds
push
sbb
sbb
inc
xchg
pop
into
sbb
xlat
sub
mov
lods
cmpsb
mov
jmp
cmp
scas
adc
jle
inc
cmp
aam
fs
sub
movhps
xor
lret
xchg
sti
clc
sbb
push
rolb
ljmp
mov
pop
lock
scas
sbb
outsl
ja
pushf
fldcw
and
pop
repnz
or
mov
jle
pop
aam
mov
mov
dec
in
sbbb
cwtl
jno
popf
adc
ficompl
and
inc
pop
sbb
gs
ljmp
mov
sub
mov
test
gs
push
sahf
js
jno
repz
imul
mov
insb
sbb
and
cmp
jnp
pop
inc
int3
imul
jns
jo
js
sbb
ss
inc
aas
ljmp
les
lret
test
cwtl
xchg
out
push
loopne
jmp
pop
in
cmp
pop
inc
insb
in
sbbb
pop
push
sub
lret
std
inc
xchg
mov
jb
movsl
insl
xchg
jae
push
jb
adc
push
and
loope
mov
mov
dec
mov
inc
and
fiaddl
jle
and
das
icebp
rcrl
out
in
add
jl
rcll
xchg
enter
inc
cmp
loope
cmp
scas
bound
mov
stc
sub
adc
pop
lock
mov
into
scas
lods
inc
mov
sbb
pop
or
pop
stos
icebp
inc
popf
and
or
pop
push
mov
xchg
loope
repz
gs
out
sti
inc
fwait
rcrb
and
shr
in
js
cld
push
push
jb
testl
mov
xor
lods
inc
mov
dec
mov
test
ret
cld
mov
add
jae
mov
insl
lea
xor
inc
cmpsb
divb
pop
nop
add
push
xchg
jp
push
mov
mov
imul
inc
sbb
loopne
xorl
sbb
push
pop
aaa
and
test
push
in
push
adc
push
and
sub
ficoml
pop
pop
pop
hlt
xor
xor
cmpsl
scas
je
outsl
adc
mov
cmp
cmp
sub
jns
push
mul
mov
cmp
cld
jle
pusha
xlat
xchg
adc
add
test
cmc
xor
addr16
stos
int3
xor
bound
ja
fcos
push
xchg
adc
mull
shl
hlt
xchg
mov
inc
adc
enter
es
addr16
ss
movsl
repz
in
test
fnsave
mov
dec
jb
pop
sti
inc
and
cwtl
jg
xchg
fsubr
jnp
cmp
add
mov
cmp
push
dec
stos
jbe
fcoms
add
cmp
in
int
lds
adc
jp
push
aaa
daa
mov
pop
push
pop
out
jo
push
insl
xor
add
jle
out
dec
cmpsb
mov
lret
daa
push
cli
sbb
test
xchg
or
xchg
and
insl
pop
mov
xor
aaa
icebp
ljmp
into
inc
rorl
push
repnz
sub
sbb
sti
mov
adc
jmp
in
aaa
cltd
adc
pop
rolb
inc
lret
ja,pn
xchg
add
out
jbe
inc
push
test
adc
jmp
sbbl
dec
je
mov
mov
lods
sub
icebp
and
scas
out
xchg
xlat
shrl
lds
pop
int3
inc
jmp
flds
orl
or
jno
aad
add
daa
mov
aaa
and
lcall
scas
pop
push
xchg
loope
cmp
xor
xchg
leave
adc
arpl
call
adcl
cmp
fnstsw
xorb
in
fisubrl
sti
ja
push
adc
jmp
call
adc
xor
jns
and
mov
cwtl
ret
push
pushf
insb
mov
test
push
cmp
aad
mov
pop
add
cmp
call
clc
andl
rcll
or
loopne
inc
imul
mov
cmc
adc
test
fwait
mov
inc
rorl
leave
outsb
pop
mov
hlt
xor
dec
or
sbb
jne
fsubs
test
loopne
push
add
mov
mov
out
jne
cmp
in
imulb
cmpl
xchg
pushf
jbe
or
lret
xor
adc
aas
fcmovnbe
and
aaa
out
sbb
mov
adc
sti
xchg
sub
push
dec
and
cmp
lret
mov
dec
lea
mov
xchg
mov
lret
or
mov
inc
fidivrs
enter
add
sbb
xchg
sbb
pop
mov
movsl
sub
ficoml
ror
ret
jae
pop
mov
inc
and
sub
ds
in
movsl
pop
jnp
push
imul
decl
insl
imull
xlat
stos
cmpsl
jl
mov
mov
popf
mov
jmp
inc
jae
xchg
fisubrl
int
faddl
mov
inc
inc
and
sbb
xlat
push
add
sbb
inc
fbld
xor
sub
repnz
stos
cmc
pop
cmc
add
testl
mov
cwtl
repnz
scas
mov
je
add
test
push
mov
jp
ljmp
xchg
nop
mov
pop
xchg
repz
ja
mov
aaa
lea
lahf
adc
out
cwtl
xlat
pop
push
shl
por
and
dec
and
dec
dec
xor
jmp
or
adc
mov
roll
jno
cwtl
jbe
cmp
lea
cmp
jl
xor
sahf
popf
imul
ret
add
dec
push
stos
in
stos
cmovae
mul
mov
mov
dec
orl
jno
mov
and
sub
xor
xchg
inc
in
aad
nop
mov
or
xchg
cmpsb
jle
lret
mov
ret
les
sub
ret
fnstsw
xchg
scas
mov
or
add
sbb
or
mov
or
outsb
mov
adc
push
push
mov
stos
out
mov
inc
lcall
call
dec
cmp
scas
inc
mov
push
sub
mov
out
inc
por
ja
or
loopne
ds
loop
scas
mov
sub
mov
sbb
jns
idivb
xchg
cmp
ja
mov
addl
cs
scas
clc
jo
sbb
shll
adc
dec
out
push
insb
inc
mov
lock
cmp
jnp
xchg
lock
mov
push
cmpsl
fidivrs
xchg
cmp
daa
test
dec
mov
mov
add
scas
cmp
cmp
inc
aas
icebp
sbb
ja
add
leave
scas
jmp
or
ds
cmpsl
sbb
jbe
ja
xchg
inc
out
and
jg
loope
aaa
rcr
mov
addr16
ss
sbb
hlt
nop
bound
pop
jae
cmp
jmp
add
and
movl
mov
repnz
dec
push
push
sti
inc
sub
lret
pop
cltd
xor
xor
add
lret
ljmp
or
jmp
cmp
sbb
sub
shrb
fisubrl
lret
sbb
in
adc
arpl
inc
mov
mov
jne
sbb
mov
ss
jb
xchg
rorb
sub
les
jge
jecxz
cmp
lcall
sahf
add
imul
fists
or
inc
jl
in
push
lods
cmp
scas
jmp
mov
adc
push
mov
jno
aaa
adc
or
pop
in
fstps
in
jecxz
stos
push
cli
std
dec
sbb
fstsw
push
lods
lea
or
stc
push
mov
lods
addr16
or
sbb
das
jae
xor
jl
mov
ret
idivb
aaa
sahf
lds
mov
test
mov
jl
leave
lahf
cltd
js
lret
std
inc
mov
add
sti
xor
mov
dec
pop
mov
cmpsb
loop
sub
mov
sub
sti
and
mov
shlb
mov
pop
lods
fldcw
push
js
arpl
in
add
add
addr16
pop
push
cmc
mov
mov
mov
push
push
cltd
pop
loope
adcl
xchg
repnz
jae
fldt
mov
jle
std
xchg
adc
je
pushf
stos
adc
ret
mov
mov
dec
iret
pop
inc
inc
cmp
ret
mov
lret
cmc
adcl
cmpsl
pop
loopne
mov
dec
out
out
std
lahf
pop
mov
cmpsb
out
test
dec
clc
inc
mov
add
adc
addr16
add
pop
jl
push
lods
xor
loope
movsb
out
lods
xchg
mov
ficompl
test
cld
xchg
pop
enter
jg
test
out
inc
fs
shrb
outsb
and
fcomps
dec
ret
arpl
aam
pushw
mov
adcl
cmp
mov
add
aad
and
stc
cli
mov
cmp
mov
sbb
push
stos
add
adc
rol
and
aad
cltd
cmp
jb
arpl
jge
sub
cmpb
shll
add
cltd
and
js
mov
lods
pushf
lret
pop
and
fsubr
insl
jle
xchg
jecxz
in
shll
xchg
es
pop
mov
or
test
icebp
pop
test
xchg
loope
test
push
xchg
adcb
mov
xor
push
repnz
mov
add
andl
xor
andb
xor
sbb
pop
mov
lcall
lahf
imul
test
notl
gs
pop
jmp
xchg
mov
mov
cmc
in
in
pushf
pushf
jno
in
mov
or
and
scas
insb
je
sub
ss
sub
bound
cmp
stos
mov
push
jne
fsubs
loop
gs
rorb
cmp
jns
mov
inc
cmpsl
xor
jae
push
stos
sbb
lds
repz
push
ljmp
pusha
in
lret
ds
dec
int3
inc
shlb
inc
lahf
ja
cmpsl
cmp
shrb
push
or
sbb
jae
outsl
jle
and
call
jbe
stos
out
js
add
fnstsw
pushf
movsl
aam
mov
xor
roll
hlt
adc
incl
gs
leave
xor
loopew
std
daa
repnz
addb
add
in
add
shl
sbb
ljmp
cmpsl
sti
dec
inc
test
ds
dec
or
or
inc
je
pop
inc
adc
mov
mov
outsl
sbb
push
jae
and
gs
insb
cwtl
cmp
or
jl
sete
mov
sub
xchg
jle
popf
shr
mov
leave
mov
push
lahf
xlat
pop
mov
jbe
xor
movsl
movsb
pop
lock
test
or
and
pop
loope
mov
lahf
aad
mov
xchg
mov
fidivl
sbb
mov
sbb
sahf
out
pop
mov
jb
add
xor
fnstenv
sbb
or
adc
adc
lcall
sub
imul
jle
out
popa
adc
fwait
cmp
bound
mov
xor
mov
dec
sbb
rcrb
pushf
xchg
imul
push
or
movsl
pop
add
arpl
mov
bndldx
dec
adc
aaa
pop
sbb
std
xchg
adc
insb
outsb
cmp
jge
jbe
ss
adc
pushf
push
addr16
push
test
pop
adc
lods
mov
inc
fs
sub
andl
pop
divb
stos
cli
into
mov
aam
jne
xchg
add
cwtl
int3
lcall
ds
xlat
movsl
inc
insb
imul
scas
push
insl
cld
xchg
call
cmp
and
inc
mov
into
xor
jg
loope
stc
dec
lods
sub
shrl
and
cmp
mov
sub
shlb
sub
sarl
mov
jne
inc
inc
jg
aas
xor
mov
push
je
std
inc
ficompl
and
inc
or
outsl
popf
roll
push
mov
sbb
adc
jmp
mov
sbb
imul
fistps
mov
and
mov
and
lret
push
mov
pop
sub
xorb
jo
inc
sub
lahf
pop
mov
shll
xor
in
sbb
sti
mov
arpl
into
insb
incb
cmp
pop
bound
fcomip
and
sub
mov
mov
add
push
inc
push
jecxz
cwtl
pusha
outsb
dec
mov
fdivl
stos
mov
inc
push
add
mov
pushf
and
repz
dec
xchg
mov
dec
sub
mov
xchg
sub
sbb
popa
out
sbb
cmp
bnd
and
cld
pushf
int
out
outsb
and
push
add
push
loop
das
adc
lcall
repz
adc
inc
aam
or
out
or
leave
push
inc
jmp
jp
sub
or
cmc
clc
mov
inc
pop
mov
push
adc
push
cwtl
fsqrt
push
xchg
out
lea
in
ss
jnp
push
mov
popl
and
sbb
ficomps
pop
fstps
cmp
xor
inc
and
dec
mov
daa
mov
into
add
js
add
jno
mov
clc
cmp
iret
adc
mov
testb
iret
cmpsb
jae
mov
sub
pop
int
pop
or
shl
fsubr
push
sbb
and
xchg
movsl
mov
insb
daa
mov
in
popl
adc
xor
pop
movsl
mov
or
fnstenv
js
and
mov
aad
pop
mov
pop
sahf
jle
mov
lcall
mov
loopne
sub
cmpsb
sbb
mov
leave
and
out
push
mov
pop
das
push
mov
inc
js
mov
nop
out
jg
sbb
dec
mov
xchg
adc
std
or
inc
push
out
push
bound
and
into
sub
int
push
push
stos
div
jle
xor
mov
shll
divl
ljmp
lcall
stos
mov
nop
xchg
xchg
and
jns
ds
jb
shlb
adc
stc
loope
and
fadd
test
pop
test
xlat
push
add
jecxz
loope
adc
sahf
mov
mov
int
loope
inc
xor
push
or
hlt
cmp
inc
pop
icebp
push
xchg
xor
rorl
mov
dec
inc
push
mov
ffreep
scas
data16
shl
js
stos
and
nop
int
imul
movsb
into
push
cld
cs
clc
adc
mov
mov
mov
bts
ljmp
xor
out
mov
or
xchg
mov
loope
mov
sbb
add
jbe
pushf
jb
xchg
andl
push
nop
add
push
jae
lcall
cmpsb
pop
sbb
mov
add
and
jg
scas
adc
pop
dec
mov
mov
mov
addr16
lret
add
pop
cmpsb
xorl
sbb
jg
into
push
lock
xor
sub
sbb
xchg
jbe
cmp
int3
movsb
jno
cltd
push
loop
or
mov
sub
movsb
jle
xchg
fbstp
test
xchg
xchg
daa
testl
sbb
insb
and
test
mov
mov
test
outsb
xchg
xor
push
movsl
aad
push
clc
and
xor
hlt
stc
rclb
aad
das
mov
cmpsl
adc
mov
cld
add
in
sbb
movsb
fstps
mov
orl
mov
jle
out
jae
int
push
hlt
in
add
pop
fadd
in
lahf
mov
shlb
dec
cld
enter
imul
adc
pop
dec
pop
sbb
adc
push
xor
cmpsb
es
mov
jnp
inc
outsl
clc
fcoms
inc
in
inc
test
mov
cmc
inc
imul
mov
inc
outsb
inc
bnd
sub
fmuls
mov
push
popf
movsb
lea
mov
adc
cwtl
sub
arpl
mov
add
or
out
pop
sub
sbb
insb
dec
sbb
repnz
xchg
xchg
out
lcall
adc
jecxz
fcoml
xor
int3
pop
into
push
sbb
pop
cmc
pop
into
or
cmp
inc
jge
cld
xchg
inc
or
iret
dec
movsb
ret
test
jne
jl
jno
jle
ret
sbb
xor
sahf
test
pop
outsb
loope
jecxz
xchg
adc
and
cmp
pop
dec
xor
mov
jp
pusha
int3
jl
add
addl
test
fisubrl
test
jge
pop
and
xchg
adc
sub
xchg
scas
lea
loop
xchg
leave
les
mov
push
iret
mov
movsb
cltd
movsb
inc
loope
xor
or
mov
adc
cwtl
push
fmul
push
add
jmp
mov
push
fwait
push
cmp
inc
xchg
mov
add
aas
dec
dec
mov
mov
cli
xchg
loope
dec
cld
mov
pop
call
cmp
lea
aad
push
inc
aad
test
sbb
stc
popa
jo
cmpsl
pop
mov
pop
jmp
add
les
mov
loope
out
es
nop
filds
stc
test
jno
xchg
ret
test
xchg
test
outsb
push
xor
stos
data16
sbb
mov
sbb
das
sbb
roll
cmp
or
pop
out
mov
into
ret
lea
sub
int3
aam
mov
ret
fwait
ljmp
jns
xchg
cmp
mov
in
sti
scas
rcrl
repz
dec
lods
and
testl
xchg
dec
jle
mov
pop
addb
shll
stc
insb
jp
pusha
outsb
js
push
cmp
xchg
pop
mov
aam
pop
gs
ds
repz
int
and
push
insl
inc
out
inc
xor
or
or
pop
addl
imul
mov
dec
cld
nop
dec
adc
dec
xchg
xchg
and
mov
push
cmp
mov
fs
jne
cwtl
mov
pushl
repnz
push
sub
je
cmp
fs
sbb
subl
push
jne
pop
push
subl
jae
sbb
cmp
xchg
shl
lock
mov
jg
xchg
adcb
lret
lods
xor
popw
push
movsb
xlat
fwait
xchg
sarl
fsts
mov
xor
jmp
inc
lcall
pop
sub
inc
test
outsb
lahf
adc
xchg
mov
popl
pop
iret
add
imul
mov
mov
jp
decl
aas
movsl
push
jns
jns
aas
sbb
xchg
push
into
sbb
jbe
or
xchg
sbb
dec
push
mov
ret
rorl
sahf
sub
sbb
sub
pmuludq
les
pusha
test
fwait
xchg
or
lret
popa
jbe
int3
cwtl
cmpl
aas
insb
lea
sbb
add
dec
insl
and
mov
in
and
jae
sub
loop
push
fadds
adc
lcall
push
and
loop
ljmp
and
sub
or
ret
or
lcall
dec
and
cli
mov
movsl
fists
add
or
test
add
cmpsb
pop
pop
outsl
aad
in
mov
sbb
js
add
addb
xor
mov
xchg
dec
cmpb
faddl
dec
mov
addr16
cli
addb
in
sti
dec
pop
into
jmp
hlt
adc
cmp
in
ds
stos
xchg
cmpsl
jl
stos
shlb
leave
in
fldl
mov
fcompl
cmp
inc
jae
hlt
push
mov
in
or
stos
lahf
repz
ds
mov
mov
fsubrs
push
sbb
xor
loopne
ret
xor
cmp
fs
lods
inc
ja
sub
ret
jp
out
sbb
and
pop
add
mov
lahf
subb
xchg
ljmp
pop
es
dec
insb
pop
push
push
cmp
dec
or
push
dec
cmp
fucomi
mov
dec
fwait
or
add
mov
shl
mov
mov
pop
popa
jnp
jne
jnp
and
pop
inc
xchg
dec
lds
insl
jne
mov
incb
jmp
insb
or
mov
stos
cmp
mov
frstpm(287
and
call
inc
inc
dec
mov
mov
popa
cli
aam
lahf
sub
bound
aam
ret
sbb
jmp
fistl
cmpsl
push
das
mov
les
pop
out
xor
mov
or
insb
fcmovu
sbb
leave
lods
sar
cltd
ret
das
popf
jge
int
add
and
sbb
sub
loop
lret
test
and
sbb
mov
push
add
orb
cmp
sub
inc
nop
sbb
stos
jne
cmp
mov
int3
xorb
mov
sub
fldt
jb
or
aam
push
lahf
outsb
jo
xor
mov
xchg
scas
cmp
test
ja
jb
cmp
into
in
iret
mov
xor
or
add
sahf
and
or
xor
sub
sub
xor
pop
hlt
pusha
cmpsb
mov
mov
inc
push
lret
test
std
inc
mov
inc
pop
mov
fcoml
and
or
mov
jae
cmpsl
or
pop
mov
outsl
mov
insb
sbb
xor
mov
pop
push
iret
adc
cld
or
sub
or
ficoms
popa
imul
std
xchg
rorb
xchg
jnp
or
or
mov
popf
hlt
mull
or
ja
enter
popf
jl
inc
adc
rcrb
push
scas
repnz
repz
div
dec
pop
and
push
sub
jge
pop
leave
dec
lock
and
das
xchg
out
mov
xor
je
clc
inc
mov
test
frstor
out
pop
iret
push
push
repnz
sub
iret
lea
ds
insb
mov
lock
xchg
dec
mov
fsts
lret
int3
dec
fs
fists
dec
cmp
in
in
das
xor
outsl
imul
xchg
push
xchg
pop
adc
push
and
inc
ljmp
daa
andb
xlat
in
ljmp
insb
xchg
int
mov
ljmp
xor
jg
inc
repnz
mov
add
xchg
pop
mov
and
sbb
lds
das
mov
mov
aas
stos
sbb
mov
movsb
cltd
int
int3
cwtl
psubd
mov
hlt
sub
push
sbb
sub
aaa
rcr
jbe
sub
push
push
loopne
lret
pop
inc
sarl
lahf
mov
andl
pop
mov
popf
loopne
push
stos
loop
scas
cmp
scas
xchg
jle
add
stos
andb
clc
mov
fs
mov
jae
xchg
jbe
xor
clc
inc
push
cmp
pop
out
xchg
inc
repz
fcmovb
sbb
inc
in
ret
cmc
gs
and
dec
sahf
xchg
rcr
inc
neg
xchg
dec
pop
cmp
scas
pop
sti
test
sub
out
pop
push
xor
mov
int3
fimuls
lret
aaa
cmp
popl
mov
das
iret
jne
addr16
mov
cmpsl
sbb
cmp
push
sub
and
out
xlat
in
cld
bound
insl
push
or
into
xchg
mov
inc
jp
and
mov
insb
mov
push
push
ds
jb
or
popa
sti
cmc
movsb
or
sbb
out
clc
jge
fldl
shll
lahf
pushf
cmpsl
outsb
cmp
or
jae
outsl
mov
pusha
lret
test
xchg
xor
xchg
insb
lret
sbb
mov
cmp
in
scas
push
xorl
jge
pop
adc
iret
jae
pop
cmp
push
xchg
mov
add
call
das
jns
enter
fwait
mov
mov
mov
mov
or
sub
test
ja
pop
add
mov
pop
hlt
push
test
imul
mov
xor
loop
andl
push
push
xor
mov
lahf
jl
outsl
stos
mov
xor
in
pop
rorl
push
mov
test
or
stos
jp
pop
leave
out
pop
add
pop
repnz
sub
test
in
sub
ds
repnz
mov
loop
cmpsb
mov
arpl
xchg
sub
ljmp
call
out
and
rol
jbe
cwtl
mov
repz
sbb
movsl
lock
cltd
jns
fwait
push
cmp
xor
mov
rcrl
lret
or
mov
dec
add
loop
mov
cmpsb
enter
lods
push
mov
inc
int
add
mov
dec
loopne
repz
lret
mov
enter
mov
and
fcmovb
xor
sbb
enter
jle
sbbl
sti
scas
out
inc
pop
cmpsb
rcrb
inc
stc
dec
or
cmp
inc
out
xchg
lds
sahf
fwait
dec
test
bound
inc
fmul
in
fistpl
cwtl
adc
je
jne
fnstsw
xlat
ja
mov
mov
mov
pop
addl
int3
out
popa
popf
mov
xchg
fstps
aad
xchg
out
or
mov
add
aad
mov
mov
cmc
xor
push
iret
filds
mov
mov
mov
pop
test
sbb
mov
ljmp
cmp
mov
ret
and
ret
jp
pop
bound
cmp
mov
shl
imul
xchg
icebp
test
addb
mov
mov
clc
and
aas
arpl
xlat
inc
stos
dec
inc
lret
push
jmp
pusha
clc
test
lods
in
adc
xor
xchg
dec
lock
xor
ljmp
inc
mov
xchg
icebp
jnp
dec
jmp
jbe
sub
xor
frstor
les
aam
push
imul
adc
push
add
movsl
test
mov
nop
lock
adc
enter
cmp
jmp
movsl
mov
push
adc
cltd
and
sub
pusha
cmpl
inc
cmp
xchg
testb
add
lcall
pop
adcb
js
mov
stos
fcoml
fcmovnbe
outsb
cwtl
push
sarb
add
leave
cmp
dec
mov
xchg
mov
sbbl
scas
enter
xlat
xchg
repz
fdivrs
and
pop
jb
pop
jae
dec
jg
repnz
pop
popa
loopne
sbb
mov
leave
xor
inc
xor
sbb
das
and
mov
sbb
shr
xlat
testl
repnz
or
popa
mov
mov
and
lea
hlt
aam
arpl
adc
xchg
pop
dec
mov
fwait
imul
cwtl
sti
xchg
mov
sbb
jo
push
jp
mov
mov
pop
push
outsl
jne
xor
sbb
mov
pop
scas
sbb
ljmp
roll
mov
lahf
pop
or
mov
jo
jo
adcb
xlat
lea
cmp
sbb
xchg
jo
or
mov
clc
cmp
pop
push
lea
sub
cli
insb
push
andb
jecxz
pop
movsb
and
inc
addb
arpl
push
out
loope
repnz
pushf
dec
pop
pop
or
xor
rorl
dec
aad
out
in
lods
test
mov
inc
mov
test
mov
scas
insl
pop
inc
and
xchg
and
mov
xchg
test
ficoms
into
cmpsb
cmp
rorb
fcomp
mov
ret
or
stos
in
jo
sub
insl
outsb
incb
dec
lea
stc
sub
fbstp
stc
clc
aam
and
push
mov
mov
push
dec
rorl
dec
mov
mov
scas
imul
lods
sub
lret
nop
cmc
mov
dec
or
xchg
jb
xchg
dec
sub
cs
mov
ffree
popa
ds
fisubs
loop
rorl
ficompl
pop
adc
lcall
cmc
popa
arpl
lret
pusha
push
mov
sbb
sbb
mov
gs
repz
add
ss
enter
icebp
fiaddl
lcall
aad
jge
jb
popf
popf
icebp
dec
enter
or
mov
push
pop
sbbb
fbstp
push
lret
loop
mov
dec
sub
xchg
nop
sub
xchg
outsb
insl
outsl
dec
mov
adc
int3
cmp
sti
fistpl
enter
in
mov
sub
mov
addr16
dec
xlat
shrl
test
shll
lock
xchg
cmp
and
cld
mov
adc
cmp
call
lods
faddl
fstpl
mov
xor
cmp
es
push
mov
das
ret
inc
inc
repz
mov
or
jno
mov
outsb
push
mov
sub
push
shll
rolb
stos
sarb
sub
dec
or
sub
fstl
cmpsl
xchg
cli
aaa
aaa
or
mov
lds
push
inc
mov
int3
xor
repnz
fwait
or
insb
shrb
push
inc
sbb
aaa
jmp
inc
scas
mov
dec
bound
mov
push
lret
mov
movb
jbe
fisubrl
cmpsb
jle
or
cmp
mov
xor
popa
data16
sub
arpl
sub
adc
fidivs
in
leave
xchg
mov
push
clc
scas
sub
mov
lret
inc
mov
lret
fs
leave
sti
adc
cmp
test
xor
lods
pop
scas
leave
jne
clc
scas
cli
pop
adc
in
xlat
dec
jb
sbb
jne
fucom
sbbl
push
add
mov
icebp
mov
push
iret
in
inc
mov
shll
lret
dec
outsb
jne
xchg
out
shlb
mov
sbb
idiv
push
fcoms
mov
or
mov
mov
push
mov
scas
scas
in
daa
dec
adc
and
pop
icebp
cmp
and
adc
add
or
push
and
repnz
sub
pop
pswapd
dec
aas
jns
addr16
jmp
in
and
inc
loopne
clc
test
test
sahf
daa
inc
xchg
mov
xchg
mov
xor
bnd
xor
stc
or
iret
out
nop
loop
lds
lds
ret
xchg
aam
mov
mov
inc
inc
stos
fidivs
cmp
mov
dec
test
jb
and
push
mov
jbe
pop
xchg
test
dec
insl
adc
fcoms
and
mov
pop
scas
movsb
jmp
and
sub
jne
sti
adc
mov
out
inc
fwait
mov
add
inc
cli
mov
jbe
inc
or
outsb
int3
out
ljmp
sbb
test
mov
out
jg
orl
jl
test
or
divb
sub
out
xchg
xorl
mov
adc
rolb
fdivl
scas
fs
mov
out
push
push
adcl
cmp
mov
nop
lret
sbb
add
test
outsl
mov
shlb
mov
sbb
out
mov
mov
les
cli
xor
fisubrs
cmpsb
mov
add
mov
lock
push
scas
sub
lock
inc
mov
call
mov
mov
es
clc
insb
repz
mov
in
jecxz
or
adc
add
cmp
dec
or
xchg
fldenv
shrl
loope
es
xor
mov
in
mov
or
cmp
movsl
nop
aaa
inc
arpl
xor
jmp
mov
lcall
and
mov
xchg
shrb
mov
popa
hlt
movsl
jno
inc
ret
gs
jge
adc
sbb
bound
fcmovb
sbb
das
insb
mov
out
dec
mov
and
jns
sbb
sbb
fwait
dec
jns
jbe
ljmp
jns
mov
mov
fstpl
add
test
dec
adc
mov
repz
and
bnd
cmpsb
in
pop
jmp
push
fldt
push
mov
ja
push
aaa
or
call
push
out
popa
mov
push
add
fnsave
xor
sub
add
jnp
cmpsl
and
jg
xor
imul
jle
fisttpl
push
sub
out
sub
sub
scas
push
fcomps
and
jno
mov
rol
mov
jg
or
adc
shrl
es
loope
out
jmp
arpl
pop
or
mov
cwtl
cmp
jne
fmul
push
js
mov
aaa
addb
fisubs
ficompl
jo
cmp
jnp
pop
lock
in
and
jmp
adc
cwtl
sbb
test
leave
insl
flds
or
test
push
mov
jle
out
hlt
xchg
test
lret
scas
add
pusha
jp
push
loope,pt
in
cs
ljmp
pop
push
inc
cmpsl
mov
push
aaa
cmp
scas
xchg
inc
cld
xor
push
adc
xchg
into
xor
mov
xor
test
pop
loope
dec
sbb
or
or
xchg
ja
xchg
xchg
sbb
jo
mov
xchg
hlt
sbb
jns
mov
sbb
add
pop
and
in
cmpsb
adc
test
xor
test
xchg
and
and
test
jg
cmp
push
inc
push
iret
lods
add
push
lcall
sti
or
lahf
inc
cmpsb
push
jns
fldcw
es
jl
xchg
cli
ss
imul
test
and
add
xchg
cs
jle
adc
enter
and
test
cli
inc
stos
jle
and
stos
jle
repnz
mov
or
jo
bound
xchg
popa
in
pushf
jl
xchg
xchg
in
fldcw
fsubs
outsb
dec
mov
push
xorl
out
fildl
arpl
scas
inc
sbb
sbb
das
push
and
nop
inc
pop
lock
lds
iret
mov
fcmovb
scas
or
mov
test
and
and
cmp
xchg
cld
jbe
mov
dec
fs
and
xorl
push
call
push
jg
incb
cmp
mov
pop
adc
enter
es
mov
jl
xor
bound
out
sarl
loop
hlt
sbb
pop
push
clc
sbb
mov
dec
test
gs
andb
lcall
pop
pop
ret
pop
add
jmp
out
ficoms
dec
mov
jo
mov
pop
jbe
jmp
mov
idivb
push
dec
pop
insl
xchg
lods
pop
pop
mov
outsb
cmp
pop
addr16
sub
sub
into
xor
and
xchg
adc
in
pop
lods
push
pop
inc
les
test
mov
pop
push
add
cltd
mov
rcrb
loopne
jbe
pop
out
je
xor
repz
add
or
aad
pop
fldcw
cmp
jae
mov
mov
mov
push
nop
jno
mov
in
int3
add
lcall
or
sbb
jecxz
push
ret
jge
adc
pop
push
and
sub
jmp
mov
rcrl
push
test
leave
int
sub
mov
test
lods
lcall
insb
enter
cmpsl
xchg
jae
xchg
push
lock
cli
pop
push
aas
fsubrl
cmp
lret
loope
xor
jns
fcoml
jne
imul
out
push
js
mov
ss
pop
jno
cltd
fwait
imul
inc
pop
loope
adc
test
mov
imul
sbb
cmp
movswl
add
mov
jmp
daa
bound
cmp
jmp
jg
rcrl
mov
fimull
or
inc
push
pop
push
std
pusha
pop
fcompl
adc
stos
clc
jg
test
sub
xor
mov
pusha
cld
ss
fdivrs
jb
dec
dec
jl
outsb
incb
outsl
repz
fistpl
and
mov
inc
sahf
cmp
jo
fstpt
sahf
lods
xchg
icebp
ja
addb
xchg
nop
cmpsb
popf
dec
xchg
cs
ret
enter
cwtl
dec
xchg
push
and
insl
inc
mov
addr16
mov
lock
lret
lods
sub
insb
mov
cvtdq2ps
cmp
fldcw
roll
sbb
cmp
lcall
and
rorb
shlb
xchg
shll
fidivrl
or
adc
cwtl
pop
dec
int3
movsb
int3
xor
fimuls
sti
and
mov
outsl
ficomps
lock
subl
sbb
push
adc
popf
mov
das
in
mov
aas
adcb
ror
stos
clc
pop
fstl
push
mov
lret
dec
test
cmc
sbb
mov
sti
rcrb
fiaddl
add
lret
jo
popa
fwait
loop
push
inc
loop
adc
aas
mov
or
imul
nop
jno
pusha
repz
push
jns
ret
lret
xor
inc
mov
inc
jge
mov
sub
mov
mov
mov
sbb
aaa
arpl
pop
mov
push
loope
rorb
icebp
pusha
in
add
mov
scas
call
push
or
mov
mov
add
sahf
popf
gs
cltd
loop
jb
cmp
fwait
stos
in
mov
push
xchg
or
push
cmp
sbb
inc
enter
shrl
jo
hlt
mov
stos
in
minps
xchg
stc
cs
xor
dec
dec
icebp
and
dec
and
xor
mov
jle
jns
sahf
imul
mov
add
hlt
out
daa
iret
sti
pop
mov
inc
outsl
dec
mov
clc
jp
sbb
ds
mov
jp
dec
ret
push
mov
rcrl
test
cmp
bound
push
shlb
xor
stc
stos
sbb
in
or
xor
test
in
lret
outsl
in
call
js
ret
frstor
jmp
push
data16
pop
and
pop
andps
int
xor
stc
xchg
loopne
jbe
lcall
call
icebp
lds
or
pushf
xchg
xor
test
outsl
push
mov
push
insl
inc
cmp
sub
sub
lret
mov
fbstp
add
mov
jl
xor
fwait
mov
repnz
pop
cwtl
mov
mov
out
stc
jg
js
lea
sub
xchg
stos
xor
adc
stos
ja
scas
test
lcall
cmp
inc
xchg
sbb
xchg
addr16
popf
divl
push
mov
orb
dec
cmpsb
incl
adc
pop
add
cmpsb
aad
cmc
push
pushf
scas
mov
xor
mov
fsubs
out
cmp
inc
sbb
cmpsl
xor
mov
jae
fidivs
jae
cmpl
inc
aad
rclb
sub
jb
gs
mov
lock
out
adc
inc
push
lret
sahf
mov
sahf
in
in
mov
push
out
jo
jecxz
jns
sbb
sti
insb
mov
popf
fistpl
add
mov
xchg
scas
loope
mov
xchg
xor
lret
sub
shll
inc
setbe
or
outsb
arpl
inc
negb
sub
sbb
ss
aas
mov
xor
fistpll
sahf
std
pusha
mov
jmp
mov
les
dec
adc
sbb
dec
int
int3
xchg
testl
sbb
fidivrs
xlat
cmp
add
outsb
test
fnsave
dec
cmp
ficoms
les
ret
jecxz,pt
pop
pushf
push
jecxz
arpl
xor
cmp
js
jmp
es
mov
es
adc
xlat
iret
pop
mov
pop
xchg
movaps
bound
sarb
mov
test
or
ret
sbb
mov
addr16
fnstenv
jbe
cmc
popa
adc
push
xor
or
jne
call
div
fs
add
addr16
or
dec
jmp
js
fs
sbb
cli
xchg
out
or
es
lcall
xchg
stos
ret
imul
xchg
cmp
push
stos
and
push
jno
jmp
arpl
jo
dec
fdivs
testl
and
fwait
or
cmpsl
fildl
ror
leave
xor
movsb
cmpl
test
mov
pop
mov
jecxz
jp
repnz
xchg
push
nop
xor
xor
je
cmp
enter
outsb
mov
dec
xchg
in
push
imul
pop
int
not
mov
cmpsl
pop
jg
pop
xchg
lea
adc
push
mov
sbb
mov
idivl
sbbl
addr16
pushf
stc
outsl
cmpsl
add
lods
cmp
and
rcr
xor
jl
idivb
and
cmp
lock
outsb
sub
aam
shl
cwtl
xor
xchg
push
mov
mov
aas
mov
dec
cmp
sbb
arpl
clc
mov
lock
xchg
xchg
sbb
and
movsb
push
dec
lea
pop
mov
sub
cld
or
mov
cwtl
cmp
sbb
fs
lcall
es
bound
fucomip
lahf
jmp
mov
adc
add
push
and
std
xchg
and
mov
push
jno
xchg
mov
sbb
xchg
cmp
cmp
mov
or
scas
mov
out
imul
add
addr16
pop
sar
sti
xor
mov
xor
in
call
dec
loopne
int
mov
in
sbb
inc
mov
jb
add
xor
pop
jle
aas
xor
pusha
loop
ficoms
inc
out
jg
lret
lock
and
inc
imul
or
mov
sbb
cmp
mov
jmp
xorb
repz
cmp
fwait
xor
jle
xor
cmp
mov
out
and
loop
test
xchg
loope
test
mov
das
sub
pusha
sbb
rolb
jl
or
adc
nop
mov
mov
out
mov
hlt
xlat
jns
cmp
pushf
add
psadbw
dec
jg
lock
mov
sub
jmp
inc
addr16
js
out
loopne
mov
and
sub
inc
lds
sub
mov
imul
sahf
cmp
push
xorl
mov
push
fildl
inc
mov
out
testb
icebp
add
sub
mov
mov
xchg
lds
mov
hlt
pop
lock
aam
jae
push
pusha
fidivrs
mov
sbb
sbb
push
push
dec
cmp
push
addr16
shlb
sbb
mov
or
and
mov
das
shrl
insb
jge
imul
push
out
lahf
push
leave
sbb
int3
flds
or
imul
negb
sbb
adc
cmp
pushf
aam
aas
data16
jg
pop
movhps
mov
mov
dec
push
dec
adc
dec
lcall
xor
rclb
jecxz
jbe
notb
cmp
jecxz
or
push
sub
bound
fistl
gs
loopne
mov
mov
shrb
clc
orl
add
jne
mov
ret
out
mov
lds
cmpsb
add
mov
sub
jbe
outsb
sub
fcmovb
lcall
insl
add
ds
sub
sub
fldt
cld
push
orb
cmc
popf
or
sbb
fstps
int3
ss
pop
xchg
sahf
push
pop
mov
shrl
movsb
or
xchg
leave
mov
xchg
loop
or
loop
std
or
hlt
cmpsl
outsl
arpl
nop
dec
es
ja,pn
push
dec
or
outsb
pop
andb
lods
lock
jnp
mov
test
lods
fisubrl
cmp
push
jbe
int
push
jae
xchg
or
insb
sar
call
stc
lret
loope
fldl
jnp
in
jne
mov
dec
sarb
mov
pop
jl
pushf
jmp
call
xchg
stc
fimuls
inc
mov
ljmp
repnz
cmc
push
xor
pop
or
jp
adc
movsl
mov
mov
sbb
push
ljmp
sarb
in
repz
fcomps
mov
fwait
pop
out
scas
mov
mov
ljmp
pop
fadds
sbb
xchg
xlat
fs
and
test
mov
sbbb
mov
jmp
sub
pop
jecxz
addr16
rolb
push
hlt
xchg
inc
scas
imul
scas
movsl
fisttpll
and
mov
data16
inc
int
lds
mov
lods
push
jb
test
fistl
add
dec
in
dec
xchg
stc
cli
jno
je
cltd
mov
push
std
adc
xor
rol
icebp
xor
sub
push
mov
lds
cwtl
mov
daa
push
shll
jnp
pop
add
nop
xor
inc
mov
fcmovnbe
adc
xchg
lret
add
scas
imul
ret
xor
mov
lock
mov
jnp
in
mov
mov
sub
and
xchg
jnp
outsl
gs
icebp
sub
nop
push
push
loopne
xorb
in
dec
dec
xchg
xor
lcall
and
dec
addps
icebp
rclb
ret
movsl
cmpb
add
xchg
jp
or
aas
fidivrs
pop
sbb
sbb
push
push
outsb
mov
stc
jmp
mov
out
push
outsl
icebp
mov
shlb
inc
xchg
jae
adc
sbb
push
lret
sarl
xchg
fsubrs
test
out
adc
push
cmp
jg
jae
push
enter
cmp
shll
dec
clc
movsl
or
and
lret
mov
repnz
xlat
and
xchg
gs
pop
add
bound
movsl
and
jb
and
sub
xchg
push
in
dec
lea
iret
mov
add
mov
mov
xor
sahf
dec
pop
sahf
add
icebp
cmp
or
test
into
xchg
cmp
jo
inc
daa
jne
in
mov
jmp
shll
scas
inc
aaa
sub
aaa
cmp
xor
sbb
incb
pop
xchg
int
shll
lds
and
xor
push
hlt
gs
xor
jnp
fs
adc
icebp
push
movsb
mov
hlt
jns
lcall
out
lahf
into
sbb
sub
inc
xor
addr16
jmp
in
les
pop
sbb
push
mov
das
arpl
filds
lds
push
rclb
dec
and
sub
mov
cmp
pop
cmp
and
or
fists
add
inc
push
arpl
adc
and
add
notb
pop
test
in
cli
pop
rclb
mov
mov
ljmp
xlat
push
mov
or
lods
inc
cmp
sbb
cmp
insl
mov
jbe
rcrb
cmp
adc
inc
idiv
clc
popf
inc
sbbb
dec
insb
test
add
jmp
loop
add
addr16
adcl
hlt
xor
repnz
lods
fimuls
roll
loop
sbb
mov
mov
push
loopne
or
enter
ljmp
jl
lahf
adc
lcall
fiaddl
jle
aad
inc
daa
arpl
mov
mov
popf
adc
adc
push
sbb
or
and
add
push
cmpsl
je
stos
mov
fnstsw
imul
insb
call
daa
bound
and
repz
out
jp
aam
add
jge
addb
sub
pushf
je
xchg
daa
aad
stos
dec
jnp
sub
and
inc
notl
out
dec
out
aam
or
jne
out
stc
jno
push
add
sbb
rorl
sbb
inc
pop
add
mov
or
and
inc
pop
mov
stc
aad
stc
fxch
mov
pop
outsb
cmp
adc
iret
call
or
sbb
stc
or
xchg
scas
aad
in
xor
in
shll
cwtl
pop
sbbb
inc
pop
or
inc
add
dec
loop
and
mov
jns
in
dec
ret
add
mov
sub
out
fisubl
pop
or
fiadds
sti
push
xchg
das
cmp
jl
sbb
stc
xor
push
xor
repz
mov
mov
fcompl
xchg
call
and
popa
out
sub
test
roll
gs
sbb
pop
mov
inc
leave
push
dec
cmp
incl
pop
addr16
cmp
sub
cmp
lahf
mov
jns
ret
out
in
xor
rcrl
test
lods
push
jbe
pusha
loope
xchg
dec
and
jge
roll
sub
sub
mov
pop
cmpsb
cmp
clc
xchg
sbb
scas
aam
iret
insl
test
cwtl
nop
imul
lds
rcr
sub
mov
lods
push
ds
js
insb
sbb
gs
cmp
cli
aam
andl
xchg
shrd
fwait
jl
add
stc
ret
insb
mov
addl
cmc
fmuls
sahf
dec
push
movsl
xchg
xor
or
cmp
dec
jmp
mov
nop
in
mov
bound
ret
imulb
daa
xor
movswl
out
scas
cld
cltd
mov
mov
sub
popf
jo
andl
loope
jb
jne
sbb
std
repz
icebp
dec
jo
push
jo
in
cmp
cmp
pop
fdivrs
lock
stos
mov
outsl
js
dec
je
cmpsl
dec
movb
push
push
pop
adc
pop
or
psrlw
mov
jmp
mov
pop
lock
mov
push
out
adcb
sbb
jo
jmp
clc
xor
out
mov
add
repnz
mov
je
cmp
or
pop
cmpsl
orl
inc
lock
xor
idivb
xor
add
cmpsl
mov
adc
rcll
das
rcr
or
cmp
mov
das
jno
add
jmp
inc
mov
mov
stos
cltd
mov
xor
mov
sbb
es
test
int3
mov
cmp
out
xchg
push
bound
mov
mov
pop
es
mov
xchg
mov
and
mov
lock
mov
dec
imul
push
mov
dec
and
dec
mov
arpl
inc
daa
aam
or
cmp
lcall
inc
aam
sti
jae
sbb
mov
sbb
sbb
or
addl
inc
fidivrs
cmp
jl
xchg
sarl
and
pop
call
data16
cli
dec
movsb
sbb
sbb
push
dec
dec
xchg
repnz
push
adc
sbb
or
xchg
enter
in
aam
jmp
and
inc
pusha
in
inc
int
sbb
notb
pop
div
es
mov
add
pop
popa
cmp
pushf
add
sub
mov
pop
insb
push
popf
in
cwtl
cmc
sub
aam
aam
dec
outsl
xchg
popf
mov
mov
mov
iret
mov
call
dec
into
popf
sbb
gs
enter
jae
push
mov
xor
aas
or
shrb
out
enter
cltd
cmpsl
add
leave
jmp
mov
or
ja
sbb
mov
jno
cmp
int
mov
push
mov
cmp
xchg
sarb
pop
mov
push
add
not
mov
cmpsl
ss
xchg
mov
mov
xchg
in
sbb
lret
or
ds
jge
inc
lcall
mov
pop
add
push
scas
jp
hlt
and
push
xlat
insb
inc
data16
loope
cwtl
adc
dec
rolb
inc
lock
std
pop
movsl
mov
jbe
dec
neg
cmpsl
es
or
pop
push
sahf
pop
cmpsl
roll
pusha
lea
arpl
es
mov
inc
push
test
push
mov
pop
test
or
in
jle
xor
push
sbb
dec
xor
sub
in
sub
xlat
mov
repz
aas
adc
sub
push
dec
add
add
std
dec
jp
push
or
ja
iret
inc
push
dec
add
jne
imul
in
idivb
mov
add
jno
xchg
add
push
jg
adc
dec
icebp
mov
xor
iret
xor
mov
jne
icebp
outsb
arpl
sbb
lock
outsb
fstpt
sbb
idivb
dec
out
sub
xchg
neg
jnp
fdivr
cltd
dec
mov
xchg
add
jge
sahf
xchg
mov
cwtl
mov
push
pop
lods
inc
mov
aad
mov
push
inc
pop
inc
aad
stos
adc
mov
rcrb
and
mov
ficompl
xchg
imul
test
sti
lahf
popf
cmp
into
in
mov
mov
sbb
xchg
out
add
popf
xor
in
mov
ss
int3
mov
je
out
xchg
jl
fst
je
jl
test
ds
mov
dec
pop
mov
xchg
subb
jp
mov
lods
jns
sub
popf
jle
nop
inc
dec
out
xchg
fs
aad
jp
pop
sahf
pop
adc
lock
xor
out
insb
push
adc
mov
fwait
shl
shrl
data16
jno
data16
pop
push
fimuls
pop
cmp
decb
fxtract
jl
in
aas
adc
pop
inc
ss
xor
push
and
cli
pop
mov
out
dec
in
sarl
cmpb
cmp
adc
enter
sub
stc
repnz
sub
or
out
jno
xor
jge
std
rorb
icebp
cwtl
cmp
cltd
pop
or
movsb
iret
push
pusha
pop
dec
push
xchg
mov
cmp
cmp
xor
nop
push
mov
sbb
adc
stos
mov
cmp
jg
sub
inc
jmp
jno
xchg
enter
mov
lds
dec
xchg
add
rcl
xlat
pop
adc
inc
das
mov
push
pop
push
mov
stos
pop
xchg
imul
push
ret
jmp
cmp
mov
pop
out
imul
sub
pminub
and
daa
dec
cmc
and
sarb
xchg
daa
sbb
sti
cli
push
sti
and
pop
mov
movsb
lret
fnsave
repnz
inc
mov
dec
jb
scas
inc
push
jae
xlat
or
xchg
dec
cmp
cmp
mov
mov
sbb
in
stos
lret
aas
out
xchg
dec
int3
add
inc
in
loope
into
mov
cmp
fcompl
push
xchg
ja
cmp
repnz
cld
jmp
dec
pop
add
xchg
mov
xlat
call
decl
sbb
mov
movsb
jbe
cmp
push
dec
push
sbb
mov
js
push
mov
mov
dec
imul
push
bound
cmc
mov
aam
cmpl
mov
insl
jmp
sbb
and
scas
lock
pop
mov
cs
shrl
dec
pop
movsl
outsb
shlb
mov
mov
xor
stos
and
add
and
dec
dec
jecxz
stos
mov
dec
repnz
push
cs
adc
loop
pushf
jb
clc
stc
je
push
push
pop
callw
mov
rcrl
in
jg
testb
aas
in
mov
mov
mov
vxorps
mov
popa
add
mov
fisubrs
into
aam
sub
div
jp
rorb
dec
xor
sarl
pop
mov
lock
lret
add
ret
add
es
adc
jnp
add
add
decb
add
pop
loopne
cld
sbb
lods
cmc
add
jno
fs
push
pusha
jecxz
nop
setns
mov
mov
xchg
add
mov
aad
xchg
daa
imul
sub
aad
lods
pop
ret
jae
sahf
adc
test
sahf
and
or
ret
dec
and
mov
out
nop
mov
loope
sub
pop
adc
xchg
mov
or
repz
push
out
inc
nop
push
pop
nop
mov
sti
data16
or
out
adc
push
imul
inc
cwtl
sbb
cmp
arpl
fadd
mov
lods
jo
out
dec
roll
sbb
insb
jg
js
adc
cmp
push
dec
inc
or
clc
jg
adc
jp
loop
xor
pop
xchg
mov
cs
sbb
or
jl
enter
movl
add
cmp
cwtl
sti
mov
dec
das
cmp
pop
or
cmc
nop
imul
add
mov
stos
mov
or
push
jmp
mov
mov
jae
imul
add
mov
in
add
mov
loop,pt
lea
mov
mov
push
jle
pop
cmp
or
aad
popa
popa
or
daa
fucomp
add
jno
test
inc
pop
ficoml
insl
or
jg
inc
pop
hlt
bound
sub
sbb
and
or
xchg
icebp
or
mov
test
lds
sub
stos
lret
fdivrl
inc
iret
xchg
pop
pop
leave
nop
loop
mov
loopne
mov
stos
outsl
aas
adc
enter
add
ds
adc
ficomps
les
repnz
cltd
sbb
icebp
sub
popa
testb
jo
dec
inc
and
pop
cmp
sbb
add
mov
add
push
xchg
push
jl
mov
pusha
dec
cmp
push
mov
xchg
cmc
xchg
in
loopne
cli
imul
push
lods
rol
fdivs
pop
ljmp
shrl
mov
and
xchg
pusha
mov
mov
ja
push
fucompp
add
adc
pop
aad
xchg
dec
repnz
add
stc
test
sahf
sbb
rolb
jo
inc
and
pop
sub
ret
mov
test
fwait
std
push
mov
push
incl
fstpt
enter
fcmovne
xor
pop
jns
cmpb
add
cmpsb
ja
mov
lret
jae
popf
push
jle
les
fs
push
iret
loop
push
push
and
imul
pushf
imul
pop
std
inc
mov
cwtl
in
out
jge
dec
fdiv
cltd
jl
cmpsl
lods
jbe
sub
lret
pop
lock
daa
add
sub
mov
cmpsl
sub
in
dec
icebp
fidivl
dec
xchg
sub
scas
xchg
dec
mov
mov
aaa
pusha
dec
leave
inc
in
filds
test
inc
xlat
loop
mov
xchg
data16
stos
pop
loopne
pushf
jo
mov
sub
add
repz
faddl
lahf
mov
mov
push
pop
mov
jo
pushf
xchg
mov
mov
jae
jo
mov
push
mov
into
sbb
cltd
xchg
andps
sub
mov
mov
xor
js
jo
and
orl
xchg
out
idivb
loopne
fwait
xchg
sti
fs
lahf
ds
pushf
push
in
arpl
flds
leave
xor
push
xor
mov
lret
jp
inc
out
jne
mov
cli
mov
mov
cmp
mov
or
push
jmp
add
stos
mov
lock
out
outsl
aas
adc
rolb
ds
std
scas
mov
sbb
aaa
push
jp
aam
xor
fs
dec
flds
xchg
fdivrl
mov
or
sbb
bound
in
iret
in
loope
jns
add
push
dec
in
rol
xor
or
jl
xchg
out
stc
push
call
pop
push
pop
add
pop
adc
pop
pop
aaa
lock
sbb
mov
cmpsl
xor
mov
xlat
mov
mov
stos
cmp
ds
cli
cld
fiadds
cmpsb
xor
mov
ja
setb
loop
xor
addr16
mov
jl
xor
dec
into
pop
pop
or
imul
stc
inc
pop
test
jo
sahf
adc
jnp
es
xor
cld
jo
xchg
inc
jmp
xor
cmp
xor
sub
in
inc
test
insb
daa
mov
fidivrs
lea
js
enter
shlb
sub
nop
movsl
xor
push
ror
mov
sbb
js
div
leave
imul
mov
call
cmpsb
jb
enter
push
cli
je
add
cmp
mov
cwtl
xor
popf
mov
push
dec
mov
cmpsl
mov
pushf
daa
dec
cld
jge
add
aas
mov
leave
push
mov
icebp
loopne
jno
fbld
cs
inc
sahf
sbb
fldcw
jmp
or
jmp
xchg
xchg
ja
je
cmp
jle
mov
test
shrl
pop
xchg
popf
mov
ljmp
dec
push
jl
ficoms
movsb
cmpsb
cwtl
ss
inc
sub
xchg
push
dec
imul
sbb
push
cmp
dec
xchg
in
dec
test
add
push
sar
pop
mov
add
add
lods
cmpsl
jge
push
mov
mov
rorl
xchg
aad
in
or
xlat
test
fistpl
adc
daa
inc
add
xor
inc
xlat
ret
insb
dec
mov
jae
or
xor
les
imul
mov
lret
jl
in
adc
outsb
adc
pop
push
adc
add
mov
ss
test
lods
test
xlat
js
movsb
inc
scas
fdivrs
sbb
out
mov
xchg
and
call
imul
mov
scas
data16
jo
test
dec
xlat
out
inc
xchg
ds
pop
sub
addb
movsb
pop
jmp
cmp
cli
clc
ja
dec
daa
rol
sbb
fwait
int3
pop
cld
push
mov
xlat
mov
imulb
add
rol
push
inc
test
add
cmp
mov
fdivl
test
test
xor
mov
push
sahf
test
jp
and
faddl
aas
xchg
mov
jne
in
or
xor
mov
inc
in
add
xchg
dec
scas
in
sbb
ds
in
and
cmp
push
addps
sbb
or
sbb
cmp
sub
push
xor
push
aad
nop
pop
push
insb
dec
iret
divl
jmp
scas
pop
jle
out
out
sub
ljmp
inc
push
imul
push
popa
fisubrl
out
cltd
jnp
jb
scas
xor
ja
std
push
xor
imul
jne
mov
lcall
push
pop
sbb
pop
xchg
ror
adc
dec
hlt
xor
mov
lock
out
push
incl
jnp
icebp
imul
xor
hlt
je
jae
test
lea
sbb
xchg
mov
mov
push
sbb
fs
fs
xchg
lret
sub
sbb
test
xchg
sub
fisttps
popa
push
out
xor
mov
pop
cmpsb
in
jbe
inc
ret
repnz
scas
xchg
cld
fcmovnb
loop
sbb
mov
cmpsb
test
fistpl
lock
inc
fdivl
lahf
loopne
sbbl
push
adc
insl
push
movsb
das
pop
jecxz
push
mov
ss
mov
in
push
lcall
push
lds
mov
add
xchg
iret
sbb
inc
or
adc
push
sub
dec
dec
and
in
inc
std
aas
pop
insl
pop
bnd
push
jl
stc
push
push
and
ret
mov
iret
xlat
xchg
call
xchg
test
pop
insl
fistps
rolb
adc
jl
xchg
adc
lds
movsb
sbb
or
bound
dec
andb
jmp
out
hlt
aad
out
ds
popl
dec
clc
fsubs
push
xchg
cmp
or
ds
fwait
mov
mov
das
pop
sti
push
outsl
cmpsb
lock
or
dec
rorl
jmp
xor
pushf
jno
loopne
xlat
outsb
sbb
dec
test
cs
mov
ret
dec
push
xchg
mov
jb
add
push
cli
movsb
sub
mov
fcomps
mov
or
stos
jge
mov
inc
leave
pop
xor
jb
push
ret
and
xchg
mov
cs
push
pop
out
mov
ds
xor
loopne
cmp
adc
jp
dec
dec
jp
cli
aaa
arpl
cmpb
and
and
mov
mov
xlat
je
cmp
sti
rcrb
lret
daa
cmp
adcb
pop
in
lahf
mov
lahf
rolb
xchg
enter
adc
test
add
outsl
dec
xor
sbb
ret
test
add
inc
movsl
shrb
mov
dec
shll
and
cmpsb
push
or
jbe
jl
mov
or
ja
out
subl
xor
and
pop
dec
lcall
jmp
cmp
enter
insb
aaa
std
pop
mov
movsl
dec
insl
dec
pushf
sub
mov
push
mov
rcrb
push
jge
scas
and
cltd
mov
push
sbb
mov
shr
ja
dec
lret
nop
mov
rcll
clc
imul
ror
and
pop
push
sahf
inc
jmp
mov
mov
inc
xchg
cmp
sbb
mov
or
adc
pop
out
shl
jo
fdivl
push
push
in
dec
das
and
jl
or
les
push
sbb
test
stos
xchg
or
jp
jnp
aas
roll
inc
push
sub
pop
cmp
aas
pop
xchg
test
insl
sti
cmp
mov
mov
push
sbb
scas
sub
dec
js
scas
pusha
je
mov
lcall
jbe
cmp
cmp
test
in
or
outsl
xlat
inc
xor
lahf
pop
jno
push
movsl
and
loope
hlt
mov
cmp
push
clc
mov
sub
xor
add
cli
pop
inc
sbb
movsl
les
bound
mov
stc
cmp
nop
movsl
mov
push
sub
aad
pop
jns
frstor
cli
rolb
stos
fists
dec
movsb
inc
xor
jb
xlat
ficompl
out
add
nop
stos
push
dec
test
xchg
add
insb
sbb
mov
cmp
dec
das
jecxz
add
pop
scas
sbb
fisubrl
mov
leave
fnstsw
out
or
testl
std
stc
mov
cmp
or
adc
or
std
mov
or
mov
cmc
pop
hlt
mov
jne
mov
xlat
jecxz
in
fildl
cmpsl
lock
out
and
sarb
pop
fisubs
stos
pop
filds
faddl
out
fwait
aas
add
jmp
pusha
and
sub
in
jecxz
dec
cmpsb
pop
xchg
mov
loop
and
add
dec
jp
and
dec
addr16
fcompl
xchg
int
ficoms
cwtl
ret
bound
mov
aas
orl
into
mov
cmp
add
faddl
ficompl
pusha
xor
add
out
testl
out
dec
jecxz
leave
movsb
les
mov
int
ljmp
icebp
or
es
dec
cli
test
popa
movsb
pop
sbb
ljmp
xor
cmpsb
push
ficomps
dec
push
jno
adc
nop
jmp
cld
inc
xor
lea
in
pop
push
stc
cli
pop
in
inc
xor
push
mov
sbb
xor
adc
xchg
mov
push
xchg
xchg
xchg
rcr
jmp
mov
adc
loop
xor
les
sbb
mov
xchg
cmp
xchg
jmp
lds
stc
pop
lret
int
sub
and
gs
or
icebp
call
or
in
fldl
jecxz
ss
lret
movsb
mov
mov
sbb
cmpsl
push
adc
adc
adc
adc
xchg
push
inc
fwait
pavgb
inc
cmc
and
lock
scas
subb
push
push
int
jp
das
bound
ret
popf
or
cmp
sbb
insl
test
or
ja
pop
sbb
int
inc
inc
cmpb
test
jae
pop
xchg
xor
ds
in
mov
sti
mov
flds
cwtl
fstps
or
pop
inc
mov
addb
mov
mov
mov
inc
mov
mov
sub
std
scas
pop
lret
movsl
sbb
and
mov
sbb
das
test
xor
ret
out
push
cmp
andb
inc
lods
cld
mov
js
popf
dec
jmp
lret
xchg
dec
int
orb
stos
mov
mov
and
leave
pop
arpl
push
orb
bswap
ljmp
scas
pusha
addr16
xor
dec
jo
test
fimull
or
pop
mov
or
lret
cmp
cmp
data16
xchg
mov
add
cmpl
in
mov
xchg
adc
sarb
dec
ds
and
cmp
in
xchg
pop
out
dec
sub
adc
adc
jbe
push
jl
jbe
loop
add
lods
sbb
mov
in
imul
in
cwtl
sbb
insl
sbb
push
push
sub
xchg
sarl
ljmp
clc
cmp
pop
inc
sahf
xchg
xlat
mov
xorl
dec
push
mov
paddsb
test
mov
cld
mov
sarb
popf
ljmp
push
jge
and
inc
fisubrl
rcrb
or
shlb
es
xor
pushf
addb
or
lods
inc
mov
lahf
insb
xor
sbb
je
test
adc
xchg
and
jg
stc
xor
sub
in
repz
hlt
add
data16
dec
xor
adc
add
push
mov
sahf
xchg
cmpsl
icebp
add
fstl
scas
mov
cwtl
jmp
jecxz
xor
mov
xchg
cli
jbe
and
pusha
nop
dec
mov
adcl
fwait
mov
push
lea
test
add
cmpsl
test
jp
sub
pop
imul
aad
push
jb
sbbl
out
add
push
aas
cmp
insl
mov
add
int3
out
push
fmul
flds
jecxz
stc
adc
xlat
fisubl
push
dec
das
into
pop
lds
aam
jle
dec
imul
enter
adc
je
out
out
dec
adc
inc
repz
mov
daa
jp
sbb
clc
dec
out
jne
ror
pop
popa
pusha
je
adc
scas
push
mov
push
mov
mov
mov
pop
mov
in
mov
aas
xchg
aaa
fcmovu
not
xchg
outsl
shlb
cmp
add
idiv
les
push
int
cmpsl
test
popf
loope
mov
mov
in
out
xchg
in
or
pop
gs
dec
lds
shrb
out
cs
jl
jo
ja
pop
xchg
inc
mov
sahf
and
iret
and
xor
insb
dec
inc
jg
sbb
jg
sarl
es
loop
clc
xchg
in
jae
fcmovnu
fimuls
mov
out
jns
fisubl
ljmp
mov
daa
xchg
orl
pusha
add
daa
inc
sti
orl
bound
and
cltd
pop
xor
sub
pushf
aaa
fisttpll
pop
cmp
mov
sti
xchg
int
push
fmulp
mov
adc
sub
or
xor
nop
sbb
nop
out
push
sbb
mov
add
inc
sub
xorl
out
stc
daa
cld
sti
iret
or
jb
shrb
insl
int
or
mov
es
and
cmpl
push
pop
mov
push
sidtl
lahf
in
cmpsb
mov
xor
cmp
mov
inc
repnz
mov
and
sbb
mov
outsb
enter
push
cmp
popa
or
mov
cltd
xor
xor
inc
xor
add
movsb
lahf
fiadds
lret
sub
inc
test
pop
fcoml
arpl
ss
fcoml
adc
pop
outsb
cmc
js
pop
cmp
mov
pop
mov
lds
cmc
mov
clc
jae
aad
and
leave
repz
das
pusha
bound
test
mov
stc
jb
bound
leave
pop
adc
sub
mov
rcr
mov
push
int3
jge
inc
sub
and
adc
jge
sub
push
pusha
xchg
fsubrp
pop
mov
push
dec
js
push
scas
enter
sbb
ja
mov
mov
loope
sub
imul
loopne
arpl
sbb
mov
pop
iret
mov
popa
enter
xchg
lret
outsl
jle
mov
cmc
addl
lock
ficoml
inc
pop
jmp
lcall
jno
mov
test
sbb
lock
inc
out
clc
call
lahf
lret
ljmp
in
outsl
call
cmp
push
jno
mov
ret
jns
jecxz
rcrl
ret
sbb
in
movsl
mov
daa
int
xchg
cmpsb
nop
and
shrb
lods
aad
test
icebp
mov
ja
jl
dec
repz
cmp
aad
int3
jns
bound
testl
movsb
movsl
insl
dec
lods
pavgb
test
add
lcall
push
pop
pop
mov
xchg
sub
sub
rol
add
popf
movsb
iret
jae,pt
jge
divb
cli
test
pop
dec
mov
mov
pop
add
cmpsb
sub
xchg
adc
je
fdivs
adc
sbb
mov
mov
sub
add
aad
cltd
movsb
mov
xchg
mov
add
aam
xchg
aad
data16
adc
pop
mov
or
push
lcall
sub
std
pop
stos
scas
divb
mov
addb
adc
fiaddl
int3
inc
xchg
mov
and
sbb
mov
mov
ljmp
inc
cwtl
movsb
rol
out
jno
and
cli
popf
cmc
sbb
sbb
mov
jle
or
out
dec
movsb
test
outsl
sub
pop
push
subl
es
xor
jp
dec
dec
push
dec
or
les
dec
and
into
rolb
mov
and
fwait
ret
push
xchg
das
imull
dec
xchg
lcall
sub
or
push
pop
xor
repnz
es
xorb
in
xor
mov
add
cwtl
inc
pusha
jmp
jb
inc
nop
andl
sbb
fwait
decb
lock
aad
adc
lret
sub
push
sbb
adc
cmpl
clc
les
jns
loope
inc
sub
std
sahf
loope
and
enter
pop
mov
cmp
adc
leave
push
add
dec
inc
adc
and
inc
or
push
mov
push
pop
sub
sbb
xor
mov
sbb
push
push
lret
pushf
and
dec
in
push
push
dec
push
inc
jle
jmp
loope
jl
sub
lods
mov
iret
imul
xchg
pop
andl
push
inc
push
shrl
mov
push
cmp
mov
and
sub
bound
xor
test
leave
jge
cmpsb
fcom
not
xchg
pop
hlt
addr16
nop
cmp
sbb
xlat
addb
ljmp
outsb
dec
cmp
xchg
cltd
arpl
sbbb
sub
lds
fs
cmpsb
stc
push
pop
pop
outsb
adc
into
lds
and
inc
add
test
adc
xlat
pop
dec
inc
dec
pop
addl
jp
dec
jb
mov
insb
sub
sbb
push
insl
pop
jle,pt
or
sbb
mov
imul
mov
adc
sahf
sub
mov
and
in
mov
pop
rorb
mov
stos
jmp
jecxz
push
cmp
pop
or
xor
cmp
fdivrs
dec
xchg
mov
sub
int3
aam
pop
andl
and
push
adc
jl
xor
lea
std
insl
fnstsw
imul
movsb
fst
cmp
inc
je
arpl
jmp
outsl
fldl
inc
cwtl
gs
sbb
sbb
leave
cmp
std
outsl
xlat
lret
pop
fadds
fidivrs
test
pop
or
int3
cmpsl
sahf
mov
lahf
push
filds
dec
movsb
cs
push
xor
movsb
shlb
and
dec
in
loope
stos
mov
out
fwait
cltd
gs
js
pop
hlt
mov
dec
gs
jl
dec
push
pop
sbb
pop
jnp
inc
scas
in
cltd
jnp
sarl
cld
pop
imul
xchg
lret
or
push
insb
idivb
mov
jbe
fsts
cmpsl
aaa
xchg
mov
xchg
mov
jle
inc
jmp
imul
cltd
fbld
cmp
jle
jae
data16
sbb
xor
aad
test
iret
xchg
pop
adc
mov
xor
pop
mov
mov
ret
sbb
xchg
jecxz
or
cmp
scas
fnsave
sub
loop
pop
sbb
pop
dec
cmp
insb
clc
and
jo
fistpl
shrl
int3
mov
pop
inc
xchg
icebp
cmp
je
daa
pop
lods
shll
fstl
xor
cs
daa
dec
sahf
cmp
test
cmp
jmp
dec
pop
and
fs
pop
into
push
dec
fidivrs
sub
loope
dec
addr16
insb
lea
xchg
dec
rcrl
out
cltd
inc
xchg
scas
jle
xchg
cwtl
pop
das
sti
xchg
cmp
sub
or
scas
sbb
dec
and
lcall
xchg
sbb
fnstsw
pusha
and
les
lock
jae
imul
les
aam
lods
xchg
mov
mov
adc
inc
xchg
cmp
icebp
out
dec
xor
cmp
pop
jl
mov
push
fmul
push
inc
into
dec
sub
scas
or
repnz
pop
mov
test
icebp
aad
inc
xchg
and
test
fsubs
or
scas
pushf
mov
ret
cmp
nop
inc
xor
adc
decb
dec
mov
push
sub
inc
inc
mov
mov
xchg
xor
fsubrl
mov
inc
xchg
mov
insl
loop
mov
je
push
mov
adc
or
adc
idivl
xchg
jae
mov
out
and
dec
mov
jnp
call
dec
insl
ss
or
das
sbb
and
loop
mov
in
scas
adc
insl
pop
lret
ljmp
xchg
lcall
fiadds
pop
int3
mov
xchg
add
xchg
jg
jmp
aaa
fimuls
xorl
sub
pop
add
dec
arpl
enter
push
mov
inc
jle
xchg
xor
inc
in
test
cmp
ljmp
pop
sub
test
rol
push
pushf
jecxz
nop
sbb
ror
in
lods
bound
movsb
sub
daa
repnz
gs
xor
inc
test
ja
lea
pop
insl
jbe
add
leave
sub
sub
dec
add
and
cmp
dec
aas
mov
leave
popa
xchg
test
sub
imul
repz
jae
mov
pop
inc
xchg
sti
pop
cmp
push
loopne
or
rcrb
push
loop
das
lahf
lods
and
push
pop
push
ljmp
mov
das
sahf
mulb
clc
jge
adc
lcall
cwtl
xor
loop
js
sbb
stos
fwait
cltd
arpl
mov
sub
divl
pop
mov
sub
inc
push
or
sbb
cmp
jecxz
pop
decl
sub
int
loope
frstor
push
ret
pusha
in
push
mov
xor
es
xchg
pop
and
or
mov
jae
adc
aaa
pop
loop
push
scas
add
xor
cmp
daa
fstp
imul
popa
xchg
icebp
lahf
int3
and
mov
sub
and
call
lds
cmp
mov
subb
jae
xchg
cmp
fnclex
jg
in
aaa
test
cmpsl
adc
adc
stos
mov
outsb
mov
jne
and
sub
in
cmp
rorb
and
cmp
lahf
sub
mov
in
lock
lds
cmp
push
pop
dec
xchg
dec
loop
jecxz
cmpsl
push
xchg
insb
inc
test
fidivl
mov
and
mov
pop
mov
movsl
and
sti
sub
push
les
mov
lcall
jne
orl
stos
push
jae
sahf
jb,pn
push
hlt
daa
jbe
fwait
mov
xchg
sarl
leave
lahf
mov
sub
stos
out
dec
pop
jp
cmpsb
or
xchg
lods
lock
outsb
rcr
les
ds
loopne
in
into
inc
lahf
pop
xchg
arpl
std
ss
push
cmp
mov
loopne
pusha
loope
or
pop
pop
jne
push
test
dec
insl
cs
ja
pop
jno
mov
and
pop
xchg
xor
push
mov
xchg
imull
rcll
mov
mov
xor
int3
cmp
es
xchg
sbb
adc
in
das
sub
jbe
mov
bound
push
fimuls
pop
inc
xor
dec
inc
sbb
cmp
inc
mov
arpl
jecxz
add
and
rcll
jo
icebp
scas
push
jnp
pop
inc
mov
and
or
nop
lock
xchg
ja
cmpsb
mov
add
leavew
inc
pop
xchg
fnstcw
outsb
xchg
push
add
cmp
xchg
dec
jnp
popf
mov
ja
fdivrs
push
xchg
mov
imul
dec
xchg
sbb
jg
ret
mov
daa
mov
dec
std
sub
test
fsubrp
push
cltd
xor
sub
in
jno
in
std
mov
loope
mov
cmp
loopne
add
lods
fcomp
lock
ret
pop
sahf
or
mov
sbb
cmp
loop
cmp
insl
test
xchg
clc
xor
fmuls
insb
pop
rolb
enter
in
subl
into
mov
and
imul
test
xchg
mov
in
lret
jne
repnz
pop
dec
or
popf
xchg
neg
xchg
std
sub
pop
jae
mov
sub
pop
clc
cmp
pop
gs
loopne
daa
add
mov
xchg
sbb
daa
cmp
sub
mov
jle
sar
pop
les
jb
sub
loop
mov
adc
jge
mov
cmp
inc
or
and
add
xorb
jbe
movsl
xlat
stos
inc
mov
inc
sbb
cmp
scas
addr16
subb
cltd
mov
sub
andb
enter
jge
jmp
push
das
xor
jecxz
and
add
push
xor
inc
push
lret
xchg
cli
dec
fcmovu
add
adc
in
mov
push
xchg
sub
pop
popa
jg
inc
xor
mov
lds
mov
and
add
xor
push
mov
jns
fistps
popa
jnp
loopne
mov
or
mov
inc
ficoml
icebp
repz
push
lret
ret
out
mov
or
aaa
lret
xchg
arpl
loop
fisubs
push
fcmovne
ret
dec
sarl
sbb
mov
mov
sub
or
test
jno
mov
pop
push
xchg
xor
in
inc
out
iret
nopl
jg
add
outsl
lcallw
adc
sbb
adc
inc
mov
jg
pushf
add
pop
adc
dec
orl
xchg
insl
fldl
adc
std
sub
mov
rcrl
mov
inc
leave
mov
int3
in
daa
sarl
loop
push
aas
cmp
cmp
sbb
cmpsb
mov
jns
out
sub
daa
mov
adc
mov
fistpl
sub
loop
mov
imul
pop
push
bound
jge
aam
jmp
std
cmp
sub
out
cmp
xchg
add
mov
lret
and
pop
cmc
jmp
arpl
stos
and
clc
lods
sbb
nop
popa
pop
ds
xlat
jne
mov
pop
mov
inc
sbb
adc
sahf
jmp
jno
pop
cmp
jecxz
dec
aaa
lods
je
rcrb
das
out
daa
shrl
sbb
jecxz
jbe
inc
sahf
outsb
lea
test
jp
pop
cmp
push
je
pop
dec
addr16
hlt
loop
mov
jg
push
stc
dec
test
jbe
in
shll
pusha
cld
ret
repz
push
and
or
imul
adc
xchg
add
jle
les
je
push
xor
sbb
nop
push
aad
cwtl
aas
arpl
loopne
popf
xchg
sti
push
cwtl
gs
push
adc
mov
push
nop
or
sarl
rclb
loope
roll
sub
inc
shr
stc
fdiv
lcall
mov
aaa
push
dec
stc
or
clc
jo
inc
loop
jmp
xchg
shlb
scas
cmp
icebp
es
popa
mov
data16
adc
inc
cmp
test
cltd
cmp
push
mov
mov
outsl
test
bound
ret
icebp
mov
jns
cmp
popf
jnp
add
jecxz
scas
and
xchg
xor
jnp
xchg
pop
aas
add
dec
btr
xchg
mov
sbb
mov
mov
inc
inc
inc
mul
pop
insb
hlt
push
fiaddl
loopne
inc
test
mov
xchg
or
shl
js
dec
clc
sti
sahf
shl
lret
sahf
sub
in
cmp
pop
lahf
shll
and
out
mov
mov
in
daa
push
mov
jne
inc
adc
jge
dec
movsb
inc
lods
xchg
push
inc
fidivrs
repnz
mov
outsb
sarl
inc
sbb
and
inc
push
and
sub
or
jp
stos
mov
sub
imul
sub
jp
imul
cmp
sahf
inc
stos
jae
cmpsl
cwtl
jbe
push
and
sub
xchg
popa
or
imul
pusha
jg
rcrb
lret
pop
fsts
shrb
adc
hlt
aaa
out
shrl
ret
scas
arpl
mov
test
fsubs
insb
pop
es
shlb
mov
push
cmpsl
loop
lea
icebp
cmc
repnz
xchg
insl
outsb
mov
jl
mov
jae
mov
xor
fnstcw
push
jmp
aam
mov
rclb
std
push
imul
sbb
pop
shll
aas
or
pushf
mov
cmp
sarl
pop
mov
dec
mov
inc
ret
movsb
inc
or
loope
mov
jo
int3
mov
sbb
adc
andb
test
bound
cmp
popf
in
mov
inc
out
mov
pushf
adc
leave
pop
lds
or
mov
push
popf
jno
jmp
mov
sub
arpl
clc
xor
cld
jb
cltd
out
test
mov
insl
jge
aad
pop
xor
cmpsb
sub
lcall
mov
ret
adc
add
add
lods
sarl
sub
jns
out
sbbb
jo
loop
out
into
mov
pop
xchg
inc
sub
or
push
jb
je
xchg
mov
xchg
jl
mov
mull
les
mov
shr
test
fmull
pusha
ja
stos
dec
adc
mov
jbe
jle
sub
mov
sub
inc
lret
enter
lcall
push
cmp
mov
pop
insb
test
out
pop
adc
enter
push
xchg
xchg
xor
sti
sub
insl
out
jg
jns
int
sbb
mov
and
cwtl
sti
cmp
in
xchg
mov
aaa
in
clc
movsl
lea
test
nop
aaa
sbb
and
scas
pusha
dec
dec
outsl
icebp
inc
into
lcall
xchg
daa
jo
imulb
iret
mov
adc
loopne
das
bound
add
call
in
ret
in
outsl
xchg
xchg
lock
push
adcb
in
cld
mov
sbb
inc
adc
ret
push
jns
insb
jge
add
das
dec
les
or
push
out
fnstenv
add
shrb
pop
fld
jecxz
mov
xchg
mov
mov
cltd
icebp
enter
rorl
xor
or
and
scas
push
mov
push
adc
pusha
and
sti
js
cmp
fsubl
in
cmpsl
fwait
bnd
dec
cmp
rcrb
add
add
ficoms
je
push
dec
call
nop
mov
inc
xchg
jae
mov
test
or
pop
ficomps
push
inc
xchg
pop
jecxz
hlt
lods
cmp
dec
lock
adcb
add
lock
pop
orb
orl
and
inc
lods
xchg
adc
add
mov
loopw
mov
popf
repz
mov
or
mov
mov
cs
dec
loop
mov
mov
or
push
and
mov
xchg
ds
hlt
rcrb
mov
jp
xchg
into
pop
aas
mul
push
outsb
loop
sub
inc
or
cmp
xor
mov
sbb
cmp
clc
popa
jns
xchg
in
incl
sub
push
test
iret
sbb
mov
xchg
shll
jno
repz
sbb
cs
add
mov
mov
pop
pop
and
or
or
dec
cmpsb
xor
pop
outsl
lahf
int
cmpsl
mov
movsl
and
adc
dec
outsl
int
andb
cmc
lds
jb
test
mov
hlt
hlt
sub
add
or
shll
cmp
imul
aas
push
xchg
pop
dec
cmc
lea
xchg
pop
mov
mov
adc
xchg
stos
lret
or
movsb
cmpsl
add
test
movsl
jo
inc
cmp
int
dec
jbe
int
into
push
jmp
mov
or
xchg
ja
mov
popf
not
sub
popf
pop
in
adc
lea
xlat
fisttpl
int
fildll
pop
xor
inc
shll
jbe
push
lock
mov
loopne
sarb
neg
lods
mov
adc
push
or
sub
xlat
pusha
out
imul
cmp
hlt
ds
test
lret
test
fmulp
cli
dec
divb
jo
inc
and
pop
and
int3
lds
mov
std
sub
jnp
xchg
stos
fwait
bound
push
arpl
cmp
sub
scas
stos
out
sub
lret
jle
sub
inc
jnp
or
xor
pop
jb
inc
adc
call
pop
hlt
out
lods
ret
push
sahf
or
push
pop
and
cmp
jl
test
icebp
xor
mov
shll
ss
pop
fisubl
fiadds
dec
iret
andb
add
testb
xor
add
pop
mov
fst
mov
sbb
into
out
inc
outsb
dec
je
mov
stos
push
fstpl
test
call
stos
cmc
mov
outsl
in
mov
mov
loopne
mov
or
or
lods
inc
push
dec
pop
push
inc
bound
test
popf
lret
jge
jbe
lea
or
lock
adc
cmpb
adc
mov
push
inc
in
pop
outsb
test
nop
push
icebp
push
std
adc
pusha
cmp
jecxz
fnstsw
aaa
xor
mov
pop
lods
adc
jecxz
out
shll
jmp
inc
push
push
std
movsl
cld
mov
sti
popf
popa
add
movsl
add
mov
and
enter
pop
lea
cltd
stc
fdivr
sbb
pusha
movl
cs
dec
loop
fnstcw
push
dec
ja
adc
adc
imul
dec
mov
or
pusha
cmc
je
push
ss
sub
fisubl
js
cli
loopne
shrl
jnp
dec
cli
push
sub
add
mov
jnp
movsb
cmp
rorb
mov
jecxz
sub
cmp
fisubl
test
lcall
push
adc
or
cltd
mov
aad
and
jns
decb
call
fidivrs
bound
push
push
mov
loopne
call
xchg
mov
lds
enter
add
in
mov
adc
jmp
aad
into
gs
push
repnz
movsl
in
les
push
jl
push
mov
outsl
sbb
in
xlat
sbb
mov
jge
orl
add
fstpt
inc
pop
push
shll
lret
lds
popl
jle
lret
popa
lret
in
push
leave
inc
add
jmp
addr16
shlb
and
popa
sbb
jbe
test
addr16
sbb
dec
xchg
rclb
sub
mov
xchg
das
sub
jg
xor
xor
mov
dec
popf
and
lods
sbb
fdivs
inc
cld
in
mov
xor
xor
pushf
xor
test
fnstenv
mov
ss
into
mov
xchg
test
push
fwait
mov
pusha
aad
push
mov
xlat
pop
add
addr16
loop
popa
add
testb
repz
mov
mov
sub
pop
lds
loopne
mov
js
pusha
stos
xchg
cltd
jb
out
cmc
sub
inc
xlat
ljmp
repnz
call
dec
and
test
dec
or
frstor
cmp
inc
fdivr
cmpsl
stos
pop
lods
adc
mov
pop
outsb
mov
cmpsb
loop
mov
fwait
pusha
shrl
lock
loope
jg
fwait
inc
jp
pop
push
test
inc
cmc
aaa
cmpsb
ret
cmp
ss
mov
cli
push
jae
fwait
sub
stc
sbb
leave
jbe
nop
inc
and
add
movsw
dec
xchg
jg
mov
jo
or
xchg
or
mov
xor
add
test
fsubrs
push
popf
jecxz
mov
jae
xchg
lcall
jns
mov
dec
pop
xor
cmovge
stos
scas
ja
stc
mov
jl
pop
and
out
in
test
lods
xor
mov
popa
aas
cmpsl
sbb
inc
xchg
popf
push
xchg
adc
lods
sub
mov
pop
clc
xchg
aad
test
sub
mov
stos
dec
cmpsl
imul
add
adc
addr16
cltd
in
ja
test
xor
bound
lock
cmpsb
out
popf
sbb
ja
dec
xchg
mov
push
iret
jbe
mov
sub
cmp
into
jo
xor
test
mov
das
sub
cmpsl
lahf
insl
es
inc
dec
mov
pop
rorb
andl
and
arpl
into
rcl
lahf
adc
inc
scas
push
jb
shll
push
in
aad
dec
add
add
sbb
popf
cmp
dec
cmpsb
jge
sub
fidivrs
movsl
pop
aam
mov
sub
jl
pop
adc
scas
mov
mov
push
stos
add
dec
cmpl
jne
pop
add
aas
lea
mov
test
shrl
pop
mov
push
mov
fbld
bound
sahf
hlt
jbe
incb
dec
ret
mov
lea
mov
or
xorb
std
arpl
cmp
iret
sub
cmpsl
xor
ss
sbb
sub
inc
cli
mov
xchg
mov
sub
mov
mov
pusha
inc
push
mov
jle
pop
mov
adc
sub
popa
sahf
or
cltd
cmp
shl
pop
cli
addr16
cwtl
ja
loope
jmp
out
fcomi
inc
inc
cmc
sbb
xchg
movsb
jne
xchg
or
ret
adcl
xchg
lods
mov
or
cltd
jns
inc
adc
adc
lods
cmp
sti
popf
popf
call
mov
lea
dec
adc
push
pop
add
inc
or
sub
aad
mov
cltd
push
push
cmpsb
mov
cmp
out
mov
shl
lret
movntq
mov
sub
jnp
icebp
je
add
sbb
pop
mov
mov
adc
aam
push
jns
mov
xchg
sbb
loopne
mov
xor
mov
jge
lods
pop
xor
les
lods
enter
pop
pop
arpl
pop
sub
xor
icebp
pop
test
test
mov
mov
and
mov
outsl
sbb
jp
call
sub
sub
in
mov
in
pop
ljmp
sub
fsubrs
test
cmp
cmpsb
mov
popf
and
dec
aaa
mov
out
mov
sbb
cmp
loope
dec
enter
adc
push
das
inc
ret
mov
pushf
sbb
mov
and
pop
jb
gs
stos
pop
adc
sbb
xor
dec
add
lcall
mov
fisttpl
xchg
mov
jns
sub
jge
pop
movsl
aaa
push
jnp
inc
xchg
pop
cmpsl
sbb
push
dec
mov
pop
inc
mov
iret
lret
jp
mov
jbe
sub
int
in
pop
adc
cmp
daa
push
cmpsb
add
pusha
sub
inc
xchg
enter
mov
lret
je
dec
sbb
xchg
xor
xor
add
mov
xchg
xor
ja
cmpsl
push
cli
ffreep
popa
inc
inc
das
orl
push
out
das
xor
adc
mov
addb
addr16
jae
iret
pop
xchg
push
add
cmc
xlat
andl
xchg
xchg
scas
push
mov
loopne
movsb
sub
scas
adc
dec
cmpsb
mov
leave
mov
std
fisubrl
mov
mov
push
fisttps
or
movsb
mov
mov
jne
js
push
sbb
push
inc
fcmovne
and
mov
lahf
add
scas
les
pop
shll
decl
adc
popa
dec
cwtl
scas
sbb
adcb
mov
jae
xlat
rol
leave
movsl
fldt
fidivrs
mov
jns
mov
in
cmp
lods
nopl
daa
push
mov
mov
push
cmp
fucomip
pushf
pop
rep
popa
or
popa
push
leave
cmpsb
sti
imul
cmp
mov
xchg
mov
pop
mov
push
xorb
jne
das
movsb
add
shlb
rcll
loope
addb
out
cmp
and
add
mulb
jae
inc
dec
or
mov
dec
pop
jg
shrb
bound
sbb
outsb
mov
jno
scas
out
mov
daa
push
xchg
ss
sub
stos
push
inc
mov
sub
mov
movb
aam
andb
sub
push
fisttpl
push
adc
ja
sbb
sub
lock
sbb
sub
popa
mov
ret
int
jmp
or
mov
push
dec
js
fwait
in
mov
mov
pop
mov
out
aad
aas
aam
ljmp
xchg
inc
ss
pop
mov
loopne
subl
clc
mov
ret
sbb
nop
and
sbb
insl
push
in
test
mov
test
sbb
outsb
xor
dec
cmpsl
loope
ds
pop
sub
ficompl
push
xor
xchg
mov
jb
sar
aaa
ret
aas
ficompl
cmpb
sub
sub
ds
leave
dec
mov
or
das
fmull
repnz
in
pop
xor
cld
jb
insl
stos
inc
mov
stc
xchg
sub
loopne
push
in
push
cmp
push
fwait
pop
aam
inc
fsts
aaa
movsb
cmc
pop
adc
je
add
loop
xor
arpl
add
inc
or
out
mov
push
icebp
inc
and
xchg
ret
je
adc
xchg
xor
pop
or
xlat
push
testl
xchg
sub
test
movsl
xlat
add
loope
push
add
xorb
mov
fisubs
adc
shrb
or
pop
dec
pop
inc
cmp
ret
inc
xor
cmp
adc
jbe
nop
jo
mov
pop
mov
or
fsts
cmp
mov
mov
test
add
rorb
xchg
js
add
enter
les
inc
test
push
out
pop
inc
scas
adc
mov
je
xchg
mov
push
jb
mov
in
mov
out
outsb
popa
xor
lods
add
jns
xchg
jp
pop
lahf
xchg
imulb
inc
arpl
ja
out
dec
lcall
xchg
or
addr16
adc
outsb
xor
dec
and
xchg
fnsave
push
jg
test
push
insb
jne
mov
mov
push
xor
xor
jae
add
lods
pushf
sbb
ja
mov
subb
ja
cmp
mov
fwait
and
mull
dec
fidivrs
mov
loopne
rorl
lock
sub
sbb
imul
mov
popa
in
dec
hlt
data16
in
cmp
sub
xchg
mov
test
shlb
inc
push
push
cmp
lea
sub
add
pop
rclb
test
ljmp
leave
scas
mov
aaa
jbe
xchg
sub
incb
xchg
cmp
je
inc
and
dec
in
insl
ret
xchg
add
mov
xor
jns
mov
movsl
push
insl
cmp
dec
mov
mov
lret
mov
adc
or
cmp
clc
inc
pop
xchg
dec
leave
nop
mov
pop
xchg
std
pop
in
mov
andl
pop
sti
fwait
lret
movsl
pop
testb
adc
add
push
scas
mov
bound
cli
test
xchg
jg
sbb
out
jge
into
push
mov
xchg
lods
stc
pop
cli
cwtl
sub
and
cld
fs
inc
rorb
test
js
mov
dec
addr16
or
pop
cmp
lea
fisubrs
icebp
clc
inc
mov
andl
sbb
pop
insb
xchg
cmp
mov
loop
lods
cmp
mov
adc
ljmp
sbb
aam
sti
call
cld
leave
in
dec
ficomps
jmp
or
inc
sub
mov
xlat
jmp
movsb
es
mov
add
and
loop
adc
mov
fnsave
xchg
sub
and
or
insl
sub
call
stos
inc
in
lea
faddl
mov
orl
pop
push
xchg
push
adc
or
rcl
fwait
dec
decb
movsl
dec
push
pop
ror
push
pusha
xchg
lock
inc
jl
xor
lahf
mov
mov
daa
lods
out
and
adc
movsb
sbb
std
icebp
sub
mov
mov
hlt
push
mov
adc
scas
dec
mov
mov
xor
repz
cmp
pop
xor
lea
fs
jmp
mov
jo
lods
mov
arpl
or
jnp
dec
jbe
cmp
jg
push
or
pushf
and
leave
pop
fistpl
push
jge
dec
test
push
cmp
cmp
cmp
lods
lcall
negb
cmp
ljmp
in
and
popa
sub
test
es
mov
add
sub
popa
dec
loopne
mov
pop
imul
fwait
mov
jnp
jecxz
in
stc
lods
adc
add
test
shll
push
insb
mov
push
int3
inc
pop
out
aaa
repz
shl
scas
jle
popw
mov
cmc
mov
jge
sbb
arpl
adc
fstl
jl
movsl
xchg
mov
or
add
int
lds
add
fiadds
xchg
adc
daa
xchg
je
stos
aaa
mov
aad
ja
push
mov
mov
jns
ds
test
sub
in
pop
aaa
mov
jnp
es
scas
adc
enter
xchg
mov
gs
movsb
inc
in
ret
scas
imul
pop
inc
sbb
pop
lcall
mov
notl
jno
add
mov
cmp
scas
xchg
in
out
push
lcall
leave
test
hlt
test
mov
adc
jg
out
add
test
ljmp
int
or
push
shl
sub
test
xlat
mov
push
sarl
sub
lock
xchg
jnp
sub
mov
push
cmp
ss
add
pop
lock
mov
popf
gs
or
lea
pop
adcb
in
or
sub
xor
mov
fadds
popa
out
test
loope
std
push
sbb
inc
push
aad
push
arpl
mov
movsb
inc
inc
add
test
mov
lea
cli
mov
push
sub
jnp
rorb
pop
enter
js
lods
pop
test
pusha
mov
stos
loope
in
les
sbb
popa
sbb
cld
inc
imul
xchg
lea
mov
out
xchg
rcrl
fidivl
daa
out
clc
jmp
imul
mov
cld
es
push
inc
add
sarl
pop
sub
enter
fstps
arpl
inc
lds
dec
sub
push
scas
mov
aaa
dec
inc
aaa
push
inc
outsb
mov
pop
repnz
mov
leave
lds
and
in
lods
ret
push
adc
subb
jbe
add
adc
fildll
add
and
pusha
jnp
cwtl
ja
out
in
ftst
lods
mov
lahf
mov
dec
into
xor
pop
leave
je
out
sub
adc
scas
aaa
sub
xchg
add
mov
mov
enter
adc
mov
movl
nop
in
add
pop
xor
popa
divl
jl
xchg
fbstp
adc
dec
imul
hlt
jg
xor
jo
or
jmp
adc
mov
imulb
mov
ret
das
clc
push
mov
ds
mov
cmpl
mov
or
stc
lock
jecxz
roll
dec
addr16
push
dec
push
sbb
jbe
inc
or
or
pop
movsb
mov
leave
movsl
loope
ret
and
fptan
adc
and
adc
hlt
or
add
in
inc
pop
insl
cmc
out
aam
cmpb
xchg
mov
call
mov
inc
and
push
cmp
add
loope
js
rcrb
pop
add
mov
adc
and
pop
jae
mov
clc
int
in
add
shll
pushf
mov
cmp
sarb
xchg
les
xor
es
insb
fstl
pusha
dec
lahf
outsl
enter
sub
addb
dec
ss
pop
and
pop
je,pn
jge
jns
test
fsubl
add
inc
aaa
jnp
pop
and
lock
rorl
sbb
cmc
dec
pop
stos
mov
lcall
pop
jp
pop
mov
jae
cmpsb
in
xor
mov
and
and
sub
cmc
pop
mov
mov
std
dec
fldl
mov
jnp
aad
insb
inc
jl
add
sbb
call
jp
inc
jb
sbbb
imul
jmp
push
pop
adc
mov
icebp
idiv
add
lock
pusha
xchg
test
call
cmp
mov
jo
xchg
xchg
pop
fisttpll
sti
out
mov
les
sub
nop
mov
jge
insl
ror
sbb
xor
mov
push
out
and
mov
neg
adc
or
adc
ljmp
addr16
xchg
in
jno
mov
xchg
fldl
sbb
pop
mov
clc
cmp
fs
pop
dec
enter
cli
sbb
xchg
paddsw
inc
jns
cmp
push
ja
mov
add
cmp
add
sbb
jno
adc
cld
inc
test
mov
pop
hlt
ljmp
inc
icebp
stc
push
or
ret
sub
loope
insl
ds
jecxz
lret
push
xor
mov
inc
hlt
lcall
mov
pop
cmp
cmp
mov
mov
and
and
cs
ret
js
adc
sub
dec
arpl
sbb
pop
xor
push
int3
sub
pusha
clc
pop
movsl
adc
repnz
mov
pushf
repnz
loope
fwait
push
lahf
xchg
sahf
jecxz
imulb
dec
fisttpl
fsubrl
fnop
fsubrs
sahf
popf
push
roll
jge
xor
js
fisttpll
dec
in
into
jmp
xor
inc
icebp
das
cmp
test
mov
pop
mov
out
mov
call
mov
filds
xchg
ss
das
js
xchg
decl
jmp
sbb
inc
or
cwtl
xchg
cmp
sub
test
orb
inc
out
fs
mov
jl
inc
xor
or
jl
ret
in
stos
lahf
mov
add
insl
fsubrs
sbb
xlat
jg
bound
ret
cmpsb
hlt
in
cli
lods
sbb
cmp
cld
fdivrl
xchg
mov
test
je
fildll
jns
insl
rcrb
scas
roll
sbbb
pop
ljmp
btr
or
cltd
sbb
bound
jno
stos
xchg
pop
push
jo
shrl
xchg
jne
lock
in
and
and
mov
shrl
inc
pop
adc
sbb
xor
ret
xor
mov
xor
dec
das
out
cli
mov
movsl
jle
scas
xchg
add
jne
mov
mov
frstor
mov
push
mov
push
push
mov
jle
inc
test
mov
mov
imul
pop
shll
mov
pusha
mov
je
loopne
int
xor
ljmp
push
pusha
add
dec
addr16
push
rcrb
dec
ret
sarb
xchg
mov
faddp
pop
xchg
sbb
pushf
dec
xor
mov
rolb
mov
pusha
xchg
gs
xor
mov
sbb
jmp
lret
test
psllq
cmp
imul
stos
xor
movsl
mov
sbb
or
in
add
out
adc
push
jne
adc
mov
mov
xor
mov
outsl
push
add
lds
and
imul
inc
push
in
imul
outsl
cli
and
sahf
mov
or
lret
dec
lods
pop
pushf
or
mov
ret
dec
jb
and
pop
add
xchg
add
push
inc
mov
xor
mov
cltd
lock
mov
pop
or
and
mov
inc
les
sti
cli
arpl
jae
js
push
xor
mov
in
subb
sub
mov
cmp
mov
xchg
mov
sub
jg
scas
cmp
or
and
push
xor
mov
pop
call
push
push
mov
aaa
push
jp
fdecstp
dec
loopne
cmp
shr
push
lods
sahf
push
add
ret
in
call
pushf
push
mov
repnz
mov
jg
adc
mov
lock
pop
enter
insb
or
mov
sbb
inc
pop
icebp
add
inc
shl
push
and
jno
test
out
adc
or
or
xchg
out
push
mov
sar
and
xchg
xor
inc
lahf
in
sbb
rclb
push
pop
add
fstpl
roll
popf
adc
or
xchg
xchg
gs
popa
ret
mov
push
or
jge
mov
adc
cmpsl
add
testl
clc
and
mov
pop
sbb
pop
jns
pop
mov
lods
mov
mov
dec
loopne
adc
xor
movsl
loop
pop
pop
out
pop
mov
in
mov
pop
mov
jecxz
cli
and
cmp
cli
inc
andb
add
adc
jns
add
icebp
sti
and
rcll
pop
test
sti
fdivr
sahf
ficomps
mov
rcrb
cli
mov
and
movsb
push
ret
pop
push
iret
adc
inc
jp
rorb
fwait
xchg
xor
jbe
pop
js
jae
gs
dec
mov
rcrb
pop
or
pusha
not
xor
rorl
das
add
sbb
lea
pushf
push
dec
fsubl
dec
sub
aam
fwait
mov
ret
or
sub
ljmp
jno
xchg
jecxz
scas
or
sbb
pop
pop
xlat
adc
sbb
lcall
jl
jb
push
out
cmc
out
clc
inc
inc
sbbl
adc
mov
cwtl
call
sti
mov
mov
push
imul
mov
add
popf
and
int
lods
xor
add
add
aas
lret
sarb
fwait
jecxz
mov
mov
jle
in
jge
push
daa
or
push
mov
movaps
in
xchg
incb
in
aas
lea
or
push
mov
fadds
call
sti
mov
mov
leave
xor
enter
inc
lahf
jo,pn
xchg
and
jae
xchg
pushf
sub
sbb
loop
ret
ret
pop
popa
and
and
lods
lea
adc
ret
push
xor
mov
jg
mov
xchg
jbe
adcl
incl
xchg
xor
lahf
cltd
adc
inc
jecxz
das
add
mov
clc
xor
add
fidivrs
mov
push
cmp
aam
or
loopne
pop
jne
dec
dec
pop
and
popf
adc
ret
ret
add
mov
sub
cmpsl
xor
out
andl
xchg
inc
pop
fnstsw
sub
mov
out
sub
inc
dec
pop
fcomps
push
adc
popa
sub
mov
push
add
mov
es
xchg
dec
mov
lret
cmp
shll
sarl
push
push
in
add
fimuls
ds
mov
cmp
sub
movsb
xchg
call
pop
cmp
lret
xchg
mov
xor
out
push
dec
dec
aad
leave
imul
pop
dec
call
jmp
push
add
in
push
gs
jo
cwtl
sbb
mov
imul
test
xlat
fldenv
cmp
xchg
add
push
or
pop
lds
jle
jns
fadds
es
lock
ss
inc
cli
inc
not
data16
gs
mov
in
sub
lods
pop
sbb
dec
mov
jecxz
xchg
fmull
xor
inc
cmp
mov
ljmp
jo
loopne
push
sbb
cmpsl
hlt
or
fnstsw
stos
dec
lahf
xor
push
push
jle
jp
or
test
test
or
enter
aaa
out
mov
jmp
rclb
sub
fcmovne
mov
dec
loope
push
jmp
pushl
push
adc
push
neg
mov
pop
or
sub
jns
or
xchg
mov
daa
mov
mov
xlat
imul
into
push
fstps
cld
in
iret
jle
ret
cmp
jno
loopne
cs
mov
loop
push
dec
cmpsl
sbb
inc
xchg
lret
loope
ljmp
mov
push
lock
dec
arpl
dec
je
outsl
clc
faddl
lcall
mov
test
js
lods
push
xor
lods
movsb
shll
test
xlat
jl
mov
sbb
arpl
pop
mov
sbb
inc
fstps
mov
push
out
xlat
mov
xchg
dec
stc
mov
imul
pop
pushl
add
dec
inc
inc
stos
sahf
jecxz
mov
sbb
outsb
stos
cmp
push
jmp
loopne
push
call
mov
arpl
sbb
hlt
sub
add
inc
push
xor
mov
dec
int
into
xor
push
pop
sar
ss
xchg
and
mov
and
or
lret
mov
pop
movsl
es
or
xchg
sti
cmpl
mov
jns
arpl
xchg
jecxz
jecxz
sahf
sub
ffree
ja
pop
mov
push
ds
adc
imul
aam
test
push
testb
lods
mov
or
jmp
xlat
imul
test
hlt
jmp
je
ljmp
pop
cmpl
mov
mov
aam
rcrb
inc
xor
or
lret
push
ja
test
in
push
out
xchg
cmove
data16
xchg
lret
ljmp
lock
iret
or
fcos
push
xchg
and
mov
add
dec
xchg
inc
and
pop
xor
inc
jns
clc
and
or
loope
lock
mov
cmc
cwtl
add
push
dec
xor
into
mov
pop
inc
imul
popa
sub
push
xor
les
pusha
xchg
addr16
dec
jl
aam
jge
loope
rclb
repnz
popa
leave
inc
pop
enter
cmp
jge
es
clc
mov
jns
xchg
out
xchg
xchg
or
sar
lret
mov
push
xor
ja
in
aas
fcmovnb
push
imul
in
insb
sti
je
push
pop
or
jge
add
cli
xor
cmc
fs
adc
int
or
cli
xchg
std
and
push
movsl
add
cmp
push
scas
lods
mov
repnz
jecxz
cmpsl
mov
mov
pop
aad
jmp
icebp
xchg
sub
pop
mov
jb
mov
push
dec
jae
xchg
xchg
cmp
adc
outsl
in
jp
sbb
dec
push
mov
push
lock
jle
pop
in
and
push
into
in
pusha
pushf
lock
or
inc
cld
addb
stos
fbld
arpl
inc
add
es
insb
sahf
adc
adc
out
add
mov
or
mov
aaa
inc
add
sbb
rorb
mov
in
pop
sbb
outsb
pop
or
repz
pop
or
das
sbb
in
mov
inc
pop
xchg
xor
subb
inc
mov
mov
test
pop
outsb
xor
jns
rcrl
or
cli
mov
jo
adc
mov
push
test
mov
rorb
xor
pop
mov
mov
xchg
sarb
adc
mov
aas
mov
sti
fidivs
sub
inc
xor
imul
xchg
addr16
dec
adc
or
lods
mov
pop
mov
xchg
test
fiadds
roll
stos
push
bound
xchg
into
nop
jmp
mov
das
ret
jl
lods
mov
cmp
leave
and
push
dec
or
scas
inc
sbb
leave
fmulp
jle
push
daa
xlat
jle
dec
mov
mov
sbb
clc
xor
arpl
sbb
mov
das
arpl
repnz
insb
ja
aaa
pop
adc
rcl
loopne
repnz
out
pop
cmpsb
jp
insl
aam
mov
js
leave
mov
in
mov
inc
dec
sahf
stos
lods
jns
test
or
xchg
mov
mov
inc
jae
out
data16
mov
push
cmpsl
pop
popa
movsb
or
je
add
out
fs
xchg
fidivrs
dec
rcrl
lret
lds
xchg
fwait
mov
dec
xorl
dec
push
sub
xor
test
lea
cs
cmp
pop
ret
push
or
arpl
call
pop
and
mov
jecxz
mov
icebp
aas
imul
mov
sub
jns
dec
jp
ret
xchg
sbb
pop
jp
test
sub
push
and
xchg
cs
xchg
push
pop
pop
outsb
cmp
push
gs
or
iret
enter
inc
outsb
out
or
fadds
fcompl
imul
lret
gs
push
sbb
push
adc
repz
or
push
ret
cmpl
xor
sub
jnp
cmp
cli
xchg
stc
rolb
pop
or
sbb
rcrb
je,pn
sbb
stos
mov
pop
xor
cmpsl
pusha
push
out
iret
sbbb
es
add
je
and
inc
mov
fs
xchg
lods
andl
sub
or
lret
mov
cmp
push
pusha
xchg
in
push
dec
mov
dec
jg
or
or
ljmp
xor
and
dec
adc
hlt
jnp
mov
insl
popa
inc
mov
inc
jmp
or
xchg
sti
das
push
mov
jbe
mov
dec
sti
mov
dec
mov
or
or
jb
mov
cld
dec
add
loopne
test
outsl
mov
or
fs
push
negl
mov
inc
xor
and
push
rcl
fwait
lret
sbb
mov
jbe
mov
mov
cmp
andl
ljmp
adc
iret
xor
xor
out
mov
pop
aaa
cwtl
mov
pop
lods
lahf
dec
fst
movsl
mov
data16
push
out
dec
and
iret
jge
imul
sti
jnp
es
xor
xchg
push
dec
jnp
iret
mov
jno
xchg
cmp
fldcw
fwait
setne
fs
mov
sbb
pop
xchg
insl
mov
lods
mov
in
xchg
cmp
cmp
subl
adc
lret
repnz
insl
push
ret
out
jno
test
jg
xor
jne
and
loop
iret
jno
push
movsb
mov
adc
test
mul
cs
les
imul
pop
jbe
add
xchg
sbb
xchg
adc
daa
or
mov
mov
ret
add
sub
mov
iret
sub
shl
nop
dec
mov
cmp
cmc
mov
jp
stc
fsubs
js
out
pop
xor
bound
iret
jo
rorb
xchg
test
fnstsw
and
push
in
cmpsl
aaa
sbbb
xor
or
mov
mov
into
in
call
enter
push
andl
out
shr
inc
test
adc
sub
movlps
ss
lret
sub
in
or
sbb
sbb
add
sub
cmp
adc
push
jo
xchg
scas
enter
dec
in
xchg
dec
jecxz
mov
cmp
push
pop
lcall
mov
testb
sub
dec
jno
leave
imul
mov
xor
mov
outsb
sbb
ds
stc
push
inc
xchg
pop
mov
mov
jne
les
jecxz
pop
dec
push
jns
sbb
clc
jg
stc
jecxz
les
push
test
cwtl
add
mov
insl
pop
lock
addb
stos
ljmp
add
in
js
popa
orl
sbb
jbe
push
cmpsl
addb
push
inc
or
jb
pop
jg
adc
mov
mov
cld
jl
xchg
flds
sarb
inc
sarl
inc
cmc
scas
fisttps
aaa
adc
fildl
xor
sub
inc
imul
push
mov
mov
ja
test
push
je
and
popw
mov
jo
dec
sub
sarb
cmpsb
jl
aas
adc
daa
cltd
sar
push
or
insl
sbb
xor
cmp
das
push
test
clc
jg
mov
js
shrl
mov
inc
mov
movsl
sbb
sti
dec
sbb
mov
inc
loope
mov
mov
loop
insl
cmp
pop
mov
cmp
jno
pop
movsl
in
popf
xlat
loope
dec
sub
add
stos
jb
nop
pop
dec
xor
loop
push
gs
addb
dec
pop
les
sub
sar
pop
push
add
popa
inc
cld
leave
dec
adc
pop
and
test
xor
fisubrs
xchg
mov
inc
scas
mov
insl
push
xor
jg
sbb
fwait
mov
insb
dec
or
loope
dec
pop
pushf
mov
cmpsb
inc
dec
rcrl
gs
sbb
les
loope
add
mov
ss
int
pop
mov
and
and
out
subb
pop
adc
lods
cld
cmp
push
jbe
or
out
push
jns
int3
into
fnstenv
pusha
aas
repz
loopne
or
mov
cmp
icebp
mov
shll
fwait
pusha
out
pop
insb
dec
adc
addl
adc
mov
or
pushf
cltd
clc
pop
or
mov
jne
jbe
mov
fldt
gs
mov
fldt
pop
mov
adc
inc
and
mov
test
enter
push
cmp
mov
xor
inc
dec
sub
aas
add
pop
add
nop
movsb
test
std
into
add
rcr
fadds
mov
leave
pop
mov
dec
and
or
mov
sub
push
iret
xor
das
or
and
mov
push
in
ljmp
fwait
jge
and
mov
adc
test
xor
xchg
mov
sarl
push
in
or
pusha
xchg
or
mov
sub
mov
test
rorl
inc
es
mov
mov
inc
push
sbb
clc
ret
in
cmp
dec
jecxz
or
sti
imulb
lret
jl
jno
jl
xlat
jg
cs
xchg
aas
jo
sbb
lods
inc
xchg
push
inc
out
sbb
pop
push
push
movsb
pop
inc
cmp
dec
ret
das
outsl
dec
push
pop
cmpsl
pop
mov
fisubs
adc
inc
jecxz
mov
jg
dec
mov
mov
repz
mov
icebp
pop
jle
jno
mov
sbb
lret
imul
pushf
sbb
ret
adc
movsl
jecxz
dec
and
dec
int3
lods
pop
into
cmc
push
jle
cli
inc
push
pop
out
rorl
in
push
aad
cmp
call
sbb
mov
and
jmp
push
jle
insb
xrelease
jbe
mov
push
sub
add
cltd
imul
jo
and
inc
das
mov
pop
dec
outsb
jb
gs
add
sub
les
jge
stc
insl
insl
addr16
lcall
mov
and
xchg
insl
bound
mov
jmp
dec
addl
xchg
shll
mov
pop
and
sbbb
xchg
lret
xchg
adc
jmp
xor
mov
aad
icebp
lods
xchg
jae
int
shll
mov
push
addr16
dec
adc
mov
or
add
and
push
xchg
adc
add
add
xchg
call
call
mov
xor
lds
push
pop
inc
fsubrp
sahf
push
and
push
test
cltd
fisubrl
inc
fcoms
adc
scas
xchg
es
pop
fimull
stos
in
dec
jne
aam
pop
insl
enter
out
cwtl
sub
stos
mov
or
daa
jmp
cmp
jmp
xchg
pop
xchg
lret
push
in
test
jle
mov
call
sub
mov
lds
fsubrs
pop
mov
push
fsubl
cld
or
inc
enter
sub
movsb
arpl
popf
xlat
and
test
sar
das
mov
in
stos
or
fbstp
xchg
cwtl
repz
mov
mov
and
push
aad
sub
ss
je
sbb
cmp
add
clc
xchg
mov
idivb
jmp
sbb
jo
or
cmpl
sub
in
inc
xchg
insl
push
mov
jo
js
pusha
mov
pop
inc
and
push
jo
mov
fistps
lret
flds
sti
mov
pop
push
je
jb
enter
pop
ret
add
imul
out
jecxz
jmp
std
aam
stc
mov
outsl
mov
in
loopne
dec
push
jmp
jle
hlt
jmp
xor
rorl
js
and
cld
in
cmc
lea
test
lret
jnp
jg
movsl
mov
ret
xor
xchg
shlb
mov
push
or
and
andl
ffree
push
push
ja
push
sarl
xor
mov
cmp
mov
sahf
jmp
or
mov
inc
cwtl
jmp
push
inc
push
adc
and
or
fistpll
mov
mov
push
inc
cmpsl
fidivrs
cmpsb
inc
lret
mov
pop
mov
fldcw
jno
cmp
pop
inc
test
gs
xor
out
dec
push
in
and
adc
and
jecxz
pop
adc
xchg
cmp
or
test
lds
repnz
xor
mov
xor
mov
cld
hlt
or
sar
inc
dec
mov
mov
stos
push
call
movsl
jecxz
ds
inc
lods
mov
sbb
aam
xchg
dec
cmpsl
imul
es
pop
xchg
xor
fstpt
jbe
xor
and
dec
pop
xchg
ljmp
outsb
addl
xchg
dec
das
insb
in
xchg
push
dec
add
mov
push
iret
pusha
add
mov
jecxz
mov
jne
fiadds
cmp
aad
xchg
shrb
sub
jecxz
mov
push
sub
fidivrl
mov
pop
mov
lret
outsl
pop
out
inc
cmp
push
mov
dec
push
and
lock
jmp
sub
pop
fildll
cmp
mov
mov
sub
ret
xchg
scas
pop
adc
push
jge
inc
xchg
mov
test
mov
adc
inc
in
movsl
xor
add
and
cli
jmp
and
repnz
fildll
jmp
dec
andb
push
cs
inc
aam
inc
je
shrb
cmp
aad
adc
mov
xchg
mov
dec
fldt
dec
lcall
or
dec
mov
insl
ret
push
fcmovb
insl
mov
sub
pop
push
dec
inc
or
dec
jne
data16
mov
xchg
std
sub
mov
ljmp
fnsave
cmp
mov
sbb
adc
scas
jnp
call
dec
sbb
jle
addr16
aad
xor
sarb
adc
mov
dec
je
xchg
mov
out
mov
mov
xchg
in
in
cmp
ret
mov
insb
mov
mov
daa
rdpmc
or
mov
movsb
sbb
adc
jae
insl
adc
adc
int
sahf
dec
into
incb
jecxz
mov
mov
iret
scas
aam
sbb
loope
jmp
cmp
imul
aaa
mov
sub
pop
nop
or
mov
add
jnp
and
xorb
test
ljmp
cld
in
add
xchg
scas
in
ja
or
loopne
mov
outsl
xchg
lock
push
xchg
jno,pt
aaa
leave
and
sbb
repnz
and
push
adc
mov
cltd
lcall
mov
jge
adc
fisubrs
push
inc
push
jge
mov
sbb
xchg
loop
outsb
xor
push
xchg
and
mov
xor
xor
mov
inc
push
mov
lds
xor
lret
fs
sahf
sbb
dec
xchg
adc
in
sahf
arpl
ret
jle
adc
lods
ljmp
fs
jbe
cmp
jbe
mov
insb
mov
js
or
and
scas
mov
shr
xchg
pop
push
xchg
xor
imul
cmp
cmp
push
cmp
inc
call
fildl
add
cmp
sub
lret
sub
cmc
pop
push
fisttpll
pop
push
hlt
mov
jp
bt
aam
movsl
out
pop
push
js
lahf
cs
js
outsl
call
mov
loop
aad
dec
push
daa
stc
ljmp
in
mov
sbbb
sub
dec
push
fninit
push
pop
stos
and
clc
out
into
aad
call
and
call
std
push
xor
or
outsl
imul
add
mov
cwtl
fcomip
in
adc
ret
mov
inc
jnp
push
mov
cwtl
ds
sub
lds
lret
mov
xor
inc
jg
mov
repnz
sub
sti
mov
mov
sbb
inc
lretw
mov
fists
mov
xchg
or
call
pop
adc
push
outsb
imul
xchg
mov
mov
mov
insb
mov
lds
push
and
stc
roll
movsb
add
and
int
je
jle
pop
mov
out
outsl
push
clc
pop
jbe
jo
movsl
pop
jbe
mov
outsb
aaa
adc
leave
push
imul
or
and
es
mov
fsub
or
mov
pop
je
mov
mov
es
fsubrl
dec
sbb
ja
mov
loop
dec
pop
pusha
lcall
pushf
test
pushf
shlb
out
xchg
cmp
mov
adc
outsb
call
sti
adc
cld
jne
sahf
into
mov
dec
loopne
pop
push
popa
jo
popa
stos
mov
popl
aam
xor
and
adc
sub
fstps
ja
jecxz
jno
xchg
or
out
xlat
lods
lahf
xor
xor
mov
jge
out
cmp
scas
adc
loopne
sub
pop
sahf
jae
jno
insb
mov
jae
push
pop
or
jge
push
xor
pop
fcoms
sub
and
lods
pop
cmp
mov
inc
mov
insl
push
fidivrl
mov
out
setae
into
aas
fs
movsl
popf
xchg
sbb
popf
ja
fdivr
ret
sbb
xor
pop
pop
xor
hlt
dec
pop
mov
pop
jmp
mov
xchg
test
jecxz
inc
dec
sti
add
test
loopne
pop
mov
pop
jo
addb
mov
es
mov
out
ss
mov
inc
aad
pop
sub
outsl
rcrb
mov
dec
pop
clc
loopne
jno
xlat
jno
add
jmp
mov
leave
sbb
sub
cmp
xchg
xchg
sbb
jb
fldenv
mov
insb
sub
mov
fdivp
mov
xor
or
pushf
sbb
pop
sti
cmp
sub
mov
sub
adc
mov
ficompl
je
and
addl
xor
mov
adc
negl
fisttpl
inc
divl
sbb
es
add
ret
inc
pop
mov
hlt
push
adc
ja
ret
pop
flds
inc
cld
imul
cmpsb
jbe
cld
mov
outsl
out
mov
adc
mov
lds
push
mov
fmulp
inc
cmp
sbb
mov
sti
push
lods
xorl
or
jo
aas
js
add
addb
pop
testb
cmp
add
jmp
ret
ret
and
popf
mov
xor
test
dec
xor
repnz
xor
notl
cltd
cwtl
icebp
pop
outsl
adc
insb
xor
nop
mov
mov
mov
mov
xor
pop
stos
popa
rorb
xchg
out
add
lahf
jne
insl
leave
std
cmp
sbb
sub
mov
std
jle
or
das
stc
test
mov
lods
mov
xor
cld
xorb
ret
fnstcw
jne
jne
push
mov
cmc
sbb
inc
outsb
pop
cmp
sbb
test
adc
outsl
add
sarb
push
pop
mov
inc
mov
mov
aad
popa
cltd
xor
loope
push
inc
fcoms
pop
pop
or
jmp
shrb
sahf
jo
mov
xchg
mov
stc
lret
sti
add
mov
inc
mov
shll
aad
jnp
pop
push
ret
stc
lret
xchg
testl
pop
mov
inc
inc
dec
pop
mov
gs
xor
int
or
ficompl
int3
movsl
pushf
rcrb
fidivl
repz
pop
fwait
sbb
je
in
xchg
and
pop
fdiv
xchg
jl
mov
ljmp
jg
pushf
or
stc
adc
mov
jbe
mov
and
js
loopne
jne
fstl
push
push
int3
cli
lcall
shr
sbb
adc
jbe
pushf
sbb
roll
pop
test
mov
repz
dec
mov
sub
stos
xchg
adcb
jle
sbb
pop
mov
or
lods
xchg
sbb
adc
pop
sub
sbb
test
mov
decl
push
jae
pop
dec
fsubr
or
adc
fs
mov
jbe
push
pop
adc
cwtl
jbe
dec
and
shlb
xchg
aaa
sub
lds
test
std
inc
mov
stc
sbb
xor
repnz
cmpsl
aad
jmp
outsb
test
inc
fnstcw
fdivr
add
dec
fldt
lods
repnz
ret
xchg
mov
dec
fst
pop
adc
mov
enter
push
and
xchg
pop
aas
or
lods
subl
mov
ret
sarb
or
xchg
ficomps
mov
lds
xchg
mov
aaa
aam
fistpll
inc
push
push
das
fidivl
xor
sub
jecxz
inc
jl,pt
int3
aad
aad
sub
push
test
sbb
arpl
bound
outsl
sub
aaa
and
ret
jecxz
movsb
pop
lret
jb
or
mov
hlt
mov
push
clc
fistpl
add
xchg
lock
push
push
lock
daa
push
out
or
rorb
mov
xlat
out
cmp
test
aam
dec
neg
lret
mov
jno
es
cld
rorl
fscale
imul
mov
cmpsb
xor
xor
sub
push
pop
xchg
insl
xor
mov
xchg
push
enter
out
push
hlt
insl
movsl
sbb
inc
data16
addl
jg
sbb
insl
pop
aaa
movsb
enter
and
jge
in
loopne
xchg
mov
jne
ss
ja
repnz
push
sbb
gs
dec
movb
adc
push
daa
movsl
push
pop
cmp
ss
pop
inc
fwait
push
adc
test
inc
xchg
or
aaa
inc
dec
dec
mov
pop
sbb
sarl
add
stc
mov
adc
mov
xor
sbb
xadd
popf
pushf
shll
cmp
cmp
lahf
push
pop
cmpb
sahf
mov
shl
pusha
ja
inc
test
pop
enter
out
sub
pop
lea
add
sbb
jmp
cmp
pop
inc
imul
jno
rcr
gs
add
in
lock
xchg
inc
inc
push
lea
jbe
jae
es
mov
and
pop
pmulhuw
pop
dec
pop
sub
mov
notl
repz
les
jg
out
push
adc
cmp
or
loopne
addr16
ficoms
jg
movsl
jno
icebp
mov
int
cmp
sub
and
lods
push
xlat
shll
adc
push
clc
cs
or
mov
lods
lds
jl
inc
xor
out
push
cmp
push
add
lods
leave
lock
bound
jle
mov
outsl
in
insb
arpl
out
jns
jg
inc
mov
inc
test
xor
movsl
inc
jle
pop
insl
pop
fwait
fwait
jmp
enter
mov
mov
lret
xchg
loopne
insb
inc
cmp
push
sbb
ljmp
ret
cmpsb
xlat
mov
fidivl
and
loop
stc
xchg
int3
mov
mov
movsl
lods
sbb
pop
aas
adc
adc
sbbl
fwait
pop
mov
xlat
pop
mov
dec
mov
xlat
out
insb
cmp
sbb
jg
insb
jbe
sbb
fwait
mov
mov
stos
jo
mov
jle
mov
cld
mov
jb
mov
addr16
jg
loope
mov
leave
cmc
lahf
mov
jp
xchg
leave
stos
cmpsl
cmp
stos
xchg
scas
shld
push
dec
test
pop
ret
rcrl
repz
mov
xchg
ja
adcl
sbb
fistps
stc
xor
loop
mov
cmp
scas
xor
cmp
fcomps
adc
and
jl
dec
and
test
cmc
dec
mov
push
jnp
mov
lock
test
stos
adc
dec
out
inc
cmp
jb
inc
fnstcw
in
or
in
xchg
ret
adc
lds
les
pop
mov
fcompl
dec
cmp
negb
xchg
xlat
lods
mov
mov
xor
lods
xchg
xchg
fisubrl
and
sbb
sbb
inc
in
fs
mov
xchg
aam
mov
push
pop
sub
shlb
xor
xchg
inc
leave
jmp
imul
xchg
into
push
inc
loopne
mov
aam
movsb
data16
mov
fdivs
mov
mov
push
lods
fsts
xchg
insl
jbe
scas
dec
inc
mov
mov
cmpsb
xor
fwait
mov
mov
call
hlt
pop
mov
adc
inc
inc
into
and
or
enter
cmp
out
ljmp
xchg
sbb
jg
xchg
mov
dec
push
push
out
adc
mov
cmp
ds
hlt
sub
mov
je
mov
repnz
div
iret
aam
sbb
sahf
mov
nop
add
xchg
sbbl
int
jns
ljmp
ljmp
cmp
inc
push
xchg
dec
xor
js
sub
xchg
pop
inc
fwait
adc
bound
pop
xor
sbb
stos
jge
stos
sub
cmp
insb
push
or
mov
adc
ljmp
mov
xchg
sub
notb
xchg
dec
mov
inc
mov
xchg
and
jmp
pcmpgtb
lods
lea
dec
mov
out
or
in
xchg
and
daa
outsb
push
mov
data16
pushf
fidivs
and
jp
mov
and
negb
push
or
sbb
mov
or
inc
cmp
xor
js
sbb
inc
ljmp
jb
fdivs
test
movsb
adc
mov
push
sub
cmp
mov
adcl
sub
test
mov
mov
mov
lret
ds
negb
outsb
sub
xchg
mov
push
inc
jge
dec
stos
push
mov
scas
mov
mov
xchg
lcall
je
pusha
fsubrl
or
dec
adc
add
loope
mov
sub
roll
adc
imul
dec
cltd
call
call
insb
sbb
cmp
jbe
sbb
roll
pop
pop
sub
in
int
dec
imul
fmul
cmpsb
mov
insl
arpl
ja
loop
and
xchg
push
push
pop
stc
jle
cmc
cli
xorl
inc
lods
mov
dec
in
fistpl
addl
in
imul
dec
sub
xchg
xor
mov
jecxz
pop
pop
push
arpl
in
orb
stc
xchg
insb
or
enter
mov
rclb
jl
dec
jns
shlb
push
dec
sub
and
pop
jl
mov
dec
and
sbb
rorb
gs
std
or
pushf
outsl
cmovle
aam
and
test
or
mov
sub
in
sahf
jmp
lods
int
mov
sahf
int3
push
mov
movsl
jmp
cli
rol
mov
lods
cmp
mov
out
jmp
inc
faddl
mov
je
test
clc
xchg
gs
cmp
sbb
lret
out
and
mov
fcompl
mov
xor
xchg
loop
or
add
jp
call
std
movsl
lods
jmp
in
cmp
jns
and
sbb
adcl
je
fmul
test
test
inc
std
aad
adc
mov
mov
lret
imul
aad
testl
add
lea
ja
scas
aad
or
and
sub
test
es
imul
incb
shld
add
leave
movsl
inc
lret
push
and
xchg
cmp
inc
inc
lcall
xor
pop
mov
imul
cmp
and
test
add
push
imul
jle
sub
and
out
addr16
lods
std
sub
imul
ficoml
jle
arpl
push
cmp
push
jl
push
mov
test
mov
cltd
jo
push
jmp
mull
push
addl
arpl
ret
gs
mov
in
lret
test
add
mov
add
sub
mov
out
mov
mov
stc
cld
lods
scas
ds
jbe
push
push
std
insl
or
repz
ljmp
sub
popa
ss
hlt
adc
call
mov
add
mov
js
fs
popa
enter
nop
push
arpl
stos
hlt
scas
movsl
fstpl
adc
pop
pusha
mov
lds
jbe
xor
subb
sahf
push
jne
add
mov
pop
pop
xchg
repnz
inc
lods
xor
hlt
lret
mov
js
pop
cli
sti
ret
sbb
fstpl
jmp
add
jg
sub
jae
mull
xor
jmp
fstps
nop
sub
sti
xor
idivb
pop
and
mov
xchg
int3
mov
les
shlb
adc
fmuls
pop
bound
mov
jno
imul
int
mov
inc
out
in
std
mov
mov
pop
jmp
rcll
push
sbb
jnp
pop
jecxz
pinsrw
or
scas
mov
mov
xchg
inc
xor
or
loope
adc
add
cmp
test
in
adc
sub
jmp
or
jae
sarl
sub
and
out
sti
sub
or
dec
dec
stc
xchg
sub
lret
js
imull
jp
in
jns
pop
sub
adc
mov
rorl
int3
dec
xchg
sub
xchg
scas
add
add
pop
or
inc
add
nop
xchg
mov
insb
clc
scas
sbb
cld
in
test
xchg
add
sahf
push
sbb
pop
scas
mov
xor
sahf
ret
imul
add
mov
in
or
mov
in
cmpsb
imul
repnz
fdivrl
mov
ret
xor
push
outsb
xchg
lds
push
fistps
pop
xor
pop
jb
loopne
xchg
sbb
xchg
pop
jo
fisubs
mov
lea
mov
daa
mov
cmp
ljmp
push
fbstp
out
orb
adc
lahf
cmp
pop
insl
imul
sbb
jmp
or
mov
pop
sub
popl
xchg
ja
adc
dec
sub
pop
fninit
cmp
jl
in
pop
fdivl
jae
addr16
stc
pop
push
test
movsb
or
lea
imul
push
push
movsl
int3
xor
adc
mov
cmp
cmc
cltd
or
sub
pop
pop
cmp
int3
push
rcrb
push
xlat
inc
pop
leave
fldl2e
sti
or
dec
jnp
jmp
into
adc
loop
dec
int
in
in
jno
movsl
aas
scas
or
daa
movsl
int3
ret
fimuls
mov
negl
sub
mov
cmc
aad
lret
or
and
inc
jno
cltd
sub
aam
or
jne
cmp
lret
lods
leave
hlt
addr16
repnz
and
inc
or
hlt
dec
mov
mov
imul
aaa
aas
sarb
jns
dec
mov
or
push
notl
pop
or
call
jb
mov
dec
sub
jecxz
push
ret
call
testb
sub
call
mov
out
mov
outsb
mov
ficompl
inc
ljmpw
nop
shl
pop
or
mov
pop
xchg
ljmp
adc
daa
mov
push
push
arpl
cs
mov
adc
ret
pusha
xor
scas
mov
lods
in
rcll
cs
mov
pop
divl
mov
inc
jno
jle
leave
xchg
cmp
jecxz
push
xchg
add
xchg
int
jl
mov
and
add
pop
nop
sub
scas
sbb
stos
pop
ja
test
fcompl
leave
es
adc
repnz
push
xchg
shll
cmp
jno
mov
js
xchg
out
cmp
into
xor
clc
dec
pop
sti
add
or
push
cmpxchg
imul
mov
jle
inc
loopne
cmpb
lods
inc
pop
mov
pop
nop
inc
scas
jo
adc
sar
ret
sbb
ss
and
cmp
mov
and
and
dec
sub
mov
test
ss
mov
sub
or
fwait
inc
mov
sub
ret
ljmp
test
repnz
dec
fstps
mov
mov
fists
fidivrs
pop
clc
test
pushf
and
xor
repnz
pop
dec
mov
mov
psrld
or
mov
test
mov
xchg
xchg
dec
jp
dec
sbb
pop
pop
jmp
cmpl
and
jae
push
lock
in
stc
inc
mov
in
inc
stc
sub
push
movsb
sub
cld
jae
aad
ja
stos
sahf
insl
mov
mov
pop
jo
addb
outsl
sbb
jmp
std
mov
mov
ja
push
stos
cmp
das
movb
xlat
jo
ds
inc
and
pop
cltd
xor
sub
xlat
loope
fimull
jecxz
sarb
out
or
ret
add
jmp
in
std
gs
daa
cmp
mov
clc
and
inc
mov
xor
stos
jmp
and
shrb
jo
cmc
jne
out
stc
jle
jmp
xorl
push
xchg
cmp
dec
mov
sub
mov
pusha
jmp
and
movsl
pop
shl
sarb
and
dec
scas
jmp
enter
xor
cwtl
pop
stos
xchg
jns
mov
into
pusha
mov
jno
or
ss
xchg
pushf
push
mov
inc
mov
pop
mov
lods
shll
pop
mov
daa
mov
cli
mov
mov
shll
fstpl
stos
xchg
std
dec
je
fucom
data16
xchg
sub
pop
cld
shrb
aas
sub
int
aas
lret
std
ja
adc
ljmp
popf
mov
inc
mov
or
loope
lods
inc
aaa
mov
out
lock
aad
aad
cmpsb
adc
xchg
rorb
cmc
repnz
test
dec
in
test
jmp
push
out
push
xchg
mov
mov
mov
dec
dec
in
adc
xor
popa
xor
cmpsb
test
or
and
pop
and
mov
rcrb
cmp
aaa
cmp
lret
pop
cltd
mov
cmpsl
imul
jns
add
sub
testb
or
push
sbb
or
int
sbbb
adc
out
jmp
cmpsl
int
popa
mov
test
rcll
push
sti
mov
cmp
stos
pop
push
in
orl
out
shlb
mov
cmpsb
arpl
cmpsl
cmp
adc
xlat
dec
pop
xchg
xchg
xor
add
out
mov
aad
inc
xchg
fwait
shrl
mov
inc
jae
mov
dec
icebp
inc
pushf
add
jmp
vdivpd
or
adc
lods
xor
mov
dec
repnz
jmp
sub
add
pop
adc
xchg
jbe
xchg
jae
ds
mov
inc
outsl
xchg
test
and
adc
push
jb
out
arpl
inc
push
push
pop
cwtl
sarb
outsl
mov
xor
movsb
shlb
add
shlb
ret
jb
adc
mov
fnstcw
xor
adc
js
xchg
xchg
mov
fstpl
xlat
loop
mov
movsl
sbbl
sar
inc
pop
cmp
adc
xchg
fnstcw
pop
and
cmpsb
cmp
mov
pusha
int3
mov
mov
mov
dec
movsl
pop
int3
lcall
add
bound
pop
cmpsl
push
cmc
call
xchg
push
cmp
lahf
pushf
pop
imul
mov
add
mov
ret
fcmovu
and
in
or
aad
cs
inc
daa
or
mov
in
mov
sub
cmpsl
jmp
jecxz
lods
adc
lods
pop
out
jp
test
cmp
xchg
fimuls
dec
mov
and
fmuls
fcoml
mov
fstpl
cmpb
sbb
push
sti
stos
pop
movsb
add
mov
pushf
mov
mov
outsl
xchg
mov
shll
dec
in
fcomp
ds
mov
ret
xor
sahf
out
pop
loop
pop
jns
inc
ficomps
or
add
fnstsw
aaa
or
mov
mov
int
and
mov
dec
sub
icebp
jbe
shll
cli
push
rorb
and
and
push
enter
xchg
in
call
jp
mul
push
lcall
cmp
and
imul
cld
mov
into
pop
adc
subb
xor
sbb
orb
xor
xlat
decb
inc
mov
cmp
shl
sbb
sub
mov
cwtl
js
insl
xchg
or
jbe
xchg
cwtl
mov
mov
fsub
inc
lcall
lcall
ss
fldcw
scas
lds
repz
inc
adc
xchg
xchg
ljmp
mov
enter
stos
mov
daa
rcl
fisubl
cli
int3
mov
cltd
sbb
stc
inc
add
dec
into
adc
push
pop
dec
leave
jne
in
out
cmpsl
mov
pop
mov
popa
add
jge
cmp
fidivl
adc
mov
lea
mov
adc
pop
jp
sub
fnsave
lret
pop
in
adc
scas
xchg
leave
lods
jbe
mov
jle
das
cld
shlb
pop
insl
jbe
ljmp
or
mov
fildl
fiaddl
adc
sub
stos
imul
aaa
sbb
sub
fbstp
mov
pop
xor
mov
cmpsb
fdiv
fsubrl
add
and
jne
adc
into
xor
loop
jge
push
mov
stc
cmp
push
stc
push
lods
into
jmp
xor
lock
lds
rcrb
push
push
jle
or
sbb
out
test
xchg
stos
mov
lcall
add
inc
jle
adc
std
and
push
push
xor
inc
push
cltd
in
les
fcmovnbe
mov
cmpsb
imul
mov
add
dec
push
adc
movsl
lods
xchg
lods
adc
pop
xchg
mov
xor
ficomps
iret
dec
push
dec
aam
lret
cmp
imulb
jl
cwtl
xchg
inc
andb
sar
inc
fidivs
fidivl
outsl
ds
sti
mov
iret
subb
hlt
push
popa
or
int
mov
enter
movsb
mov
ret
ss
repnz
ret
and
sahf
aas
sub
sbb
pop
incb
jae
inc
jg
lods
rorb
ljmp
mov
add
mov
and
test
xchg
add
push
jg
aaa
lods
int
inc
cli
addl
shl
divb
cli
into
jno
sti
popa
xor
sbb
aas
loopne
sub
adc
mov
jg
subb
or
bound
dec
cli
inc
xor
adc
scas
test
cmc
and
inc
flds
lret
pop
push
ret
cmp
ret
mulb
lret
or
sbb
add
andb
and
clc
jns
xor
mov
enter
shlb
push
nopl
xchg
mov
mov
mov
jg
pop
js
sahf
adc
jl
sti
mov
push
push
mov
int
fwait
mov
add
mov
adc
punpckhdq
mov
xor
in
inc
mov
xor
jge
push
icebp
xor
sub
dec
stc
push
out
add
mov
jno
mov
mov
xchg
fsubs
jl
or
mov
pop
xchg
lods
fmul
adc
mov
mov
scas
adc
push
pop
mov
cmp
and
dec
add
lret
sti
stc
sahf
fldt
xchg
and
pop
sbb
cmp
sbb
fsts
mov
pop
rcl
dec
pop
xchg
outsb
cli
int3
mov
and
pop
jmp
mov
xchg
or
mov
dec
and
mov
fiadds
lcall
hlt
and
in
mov
daa
stc
cli
or
jae
cli
incb
xor
in
cmc
xor
jbe
cmpsl
sarl
jns
sub
loop
movsl
jl
mov
sbb
dec
pop
cmp
fcmovu
mov
pushw
andl
xchg
shl
mov
mov
xor
jbe
jmp
jnp
fs
sarl
popa
mov
popa
aaa
push
daa
mov
fs
std
push
cmpsl
ret
xchg
mov
sub
jecxz
push
bound
mov
sub
ss
mov
jecxz
mov
div
push
sahf
dec
mov
mov
sbb
sub
cli
lret
ss
sbb
scas
jl
and
clc
pop
call
mov
lds
ljmp
aas
mov
faddl
std
fld
jno
cmp
xor
mov
sub
mulb
inc
daa
mov
jno
push
xor
stos
cltd
or
lods
cmp
mov
fldl
sbbl
cmp
aad
setl
popa
scas
data16
sub
xchg
aam
cmpl
icebp
cmp
pop
cmp
fcmovnu
arpl
test
and
and
orb
jbe
decl
scas
fmuls
ret
cmpsl
rcll
rclb
push
jl
or
js
pop
mov
add
cmp
aaa
xchg
pushf
ficoml
or
fistps
dec
or
in
cld
and
movsl
addb
mov
icebp
mov
xchg
xor
sar
xor
les
ret
pop
dec
hlt
mov
inc
repnz
clc
test
and
fidivrs
xorb
jb
lds
imul
out
push
les
les
xor
sbb
xlat
popa
inc
les
add
pop
adc
cltd
jne
test
ret
push
ds
int3
movl
popa
mov
jbe
jns
inc
mov
dec
ficoms
test
iret
jp
xor
sub
in
jb
mov
lcall
je
add
mov
jp
xchg
or
mov
cmpsb
mov
icebp
popf
outsl
pop
pop
sub
mov
pop
mov
out
fiadds
or
pop
mov
popa
gs
ret
xchg
repnz
push
adc
ds
mov
leave
es
jbe
pxor
popf
jp
nop
pop
frstor
mov
dec
call
add
in
push
int
fcmovnbe
imul
cmp
lods
and
rcrl
jge
pop
sbb
int3
jo
sti
push
stos
push
jne
jecxz
mov
push
push
sub
loope
test
mov
sbb
out
push
sub
push
sbb
xor
or
jbe
ret
cli
inc
inc
pop
inc
sbb
ljmp
mov
cli
rcrl
cmp
lret
pushf
push
mov
push
jecxz
sbb
inc
in
jmp
out
dec
lds
xlat
sbb
xor
push
push
xor
rorl
adc
sahf
pop
mov
sahf
lret
lods
jge
xor
jg
int3
add
hlt
in
testl
sub
js
cmp
dec
sbb
aaa
jb
jbe
push
sub
loope
cli
mov
fdivl
mov
xchg
fnsave
out
or
pop
adcb
call
mov
enter
out
pop
or
test
sub
fidivl
nop
xchg
jp
xor
xor
lock
add
sbb
push
cmc
pushf
bound
xchg
int3
dec
xchg
arpl
cmpsl
add
pop
xchg
out
jno
int
out
fwait
mov
in
addl
outsb
pop
flds
and
jp
divl
dec
int
cmp
repnz
and
xor
mov
jo
mov
lea
mov
mov
mov
mov
jge
stc
cmp
mov
dec
or
rcl
scas
and
sahf
mov
loopne
mov
push
andb
pop
hlt
mov
movsl
repz
mov
jmp
or
popa
or
sbb
divb
push
and
pop
mov
add
dec
jns
shl
cmp
ret
push
dec
sbb
fmull
mov
in
fbstp
popa
inc
iret
inc
in
jo
inc
fldt
popa
adc
mov
into
and
push
jo
sti
push
push
jbe
adc
lock
xchg
lods
cmp
pusha
sbb
shll
xchg
jo
data16
lahf
cli
xor
int3
dec
incl
mov
pop
mov
bound
cwtl
pop
cli
push
aam
notb
es
inc
sub
ret
or
jae
xchg
ljmp
mov
jb
jp
pop
imul
dec
shr
test
pop
popa
adc
inc
and
sarl
daa
and
aaa
pop
sub
cs
lcall
lods
mov
push
mov
dec
cmpsl
pop
mov
lea
xor
pop
enter
out
push
shr
cwtl
jp
insb
push
ljmp
testl
icebp
lret
aad
lahf
ret
lds
test
push
xorl
test
ffree
cwtl
push
adcl
ss
push
out
mov
mov
and
fidivrl
arpl
push
add
pop
inc
mov
sarl
into
jp
mov
in
ret
push
push
add
xor
bound
push
insl
push
sbb
push
push
pop
testl
movsb
stos
xchg
insb
mov
stc
cli
and
add
jle
add
rcr
mov
out
mov
mov
mov
fwait
push
sbb
xor
je
cmp
inc
shlb
lock
add
std
aaa
enter
xchg
fcomp
outsl
hlt
movsl
rolb
dec
cmc
xchg
fists
sbb
popf
call
fstpl
sub
mov
loope
sti
xchg
imul
and
dec
add
mov
fstp
lods
stos
stc
lods
jge
add
mov
push
test
push
mov
add
push
bound
fiadds
push
pop
dec
insb
sub
lock
lea
pop
je
and
dec
das
mov
dec
mov
sbb
mov
incl
mov
repnz
fidivrs
int3
repnz
mov
aam
stos
xor
mov
in
mov
xchg
mov
add
fwait
adc
push
jne
mov
xlat
cmpsl
adc
fisttpl
int
lds
fisttps
std
and
lds
and
bound
cmpsb
fistpl
mov
imul
cs
adc
stc
fimuls
mov
lods
xor
mov
push
ja
and
lds
test
mov
ficoms
mov
sbb
arpl
mov
icebp
sbb
ljmp
or
mov
jbe
xorl
mov
int3
or
jnp
stos
xchg
ja
dec
or
push
dec
fwait
add
mov
les
test
xchg
loopne
xchg
out
xchg
lods
inc
jns
enter
lods
xlat
sub
mov
lret
add
push
in
fisttps
push
popa
imul
js
mov
and
xchg
inc
testb
and
mov
cmp
push
dec
iret
add
push
cmp
dec
mov
je
sbb
cmp
lret
ret
jecxz
xor
in
lret
mov
or
xor
add
mov
sbb
and
push
fs
xchg
push
loopne
xor
dec
cld
imul
or
out
xchg
out
ds
sti
fwait
and
jecxz
xchg
jmp
push
cmp
push
add
mov
adc
xchg
mov
test
bnd
ret
jp
sbb
add
jp
insl
sub
xchg
mov
fidivrl
dec
stos
and
cmpsb
add
xchg
pushf
in
mov
add
mov
clc
mov
fsubrl
add
mul
push
sub
pop
pop
dec
iret
sbb
jp
iret
xchg
add
popf
lret
adc
ret
xchg
sbb
lods
push
cmp
dec
or
inc
push
enter
sub
dec
sub
add
mov
mov
and
adc
sbb
sub
dec
adc
cmp
jno
testb
cmp
stos
in
in
icebp
mov
mov
lcall
jb
sub
push
int3
mov
lods
mov
test
fwait
mov
dec
insl
emms
dec
sbb
adc
cld
scas
repnz
in
jb
cltd
data16
in
cmp
fwait
dec
sahf
sub
jmp
cmp
stos
pop
lods
xchg
jp
leave
fwait
scas
xchg
fstl
sub
dec
push
mov
xor
adc
repnz
jmp
stos
mov
add
gs
push
ret
mov
test
jb
push
mull
inc
or
mov
rcrl
fdivrl
out
push
enter
lahf
adc
adc
jmp
push
ljmp
push
inc
out
push
dec
and
cmp
mov
jne
mov
xlat
mov
leave
arpl
aam
and
lea
inc
ds
add
mov
dec
push
movsb
sti
push
cmp
dec
xchg
add
and
mull
adcl
addr16
push
fcmove
pop
dec
dec
flds
test
lock
scas
ret
xchg
stc
je
repz
scas
pop
insb
and
mov
cmp
or
fisttpll
cmp
sub
pop
loopne
push
out
sahf
outsl
cmp
push
xchg
push
nop
sbb
add
out
jmp
mov
stos
inc
mov
ret
stos
push
mov
dec
sbb
incb
bound
movsb
repnz
push
imul
ljmp
cltd
shll
lret
repz
pop
addr16
repz
mov
imul
inc
cmc
testl
and
and
or
pop
push
popa
inc
ljmp
sahf
add
jecxz
loopne
sti
and
push
mov
daa
inc
nop
push
ja
imul
and
insb
fcompl
push
scas
jmp
fstps
push
add
cwtl
popl
mov
std
pop
push
cmpsl
stos
mov
push
jmp
pop
pop
xchg
xchg
std
frstor
ljmp
cwtl
outsb
repz
jb
or
testl
adc
fnstsw
ljmp
xchg
mov
mov
das
ljmp
ret
xchg
lret
aaa
push
jno
jge
out
outsb
ds
cli
fldenv
insl
fxch
dec
and
lock
icebp
sti
pushf
add
sbb
pop
inc
cmp
xor
jl
andl
add
dec
push
mov
push
mov
dec
push
cmp
xchg
cmp
push
mov
xchg
and
inc
mov
popf
sub
add
addr16
scas
scas
mov
fcomp
cmpsl
mov
test
push
fucomp
sbbl
sbb
mov
and
pop
loope
or
lds
fldenv
in
xchg
fsubs
in
mov
sub
and
js
dec
push
jne
ljmp
xchg
adc
mov
ljmp
push
lods
cmp
xchg
je
add
sub
push
shl
mov
jo
sbb
xor
test
insl
push
jp
mov
push
mov
dec
and
lret
adc
decl
out
fnstsw
daa
popf
dec
sbb
pop
call
xlat
div
jo
jle
jnp
xchg
xchg
movsb
cmp
cmp
xor
ret
adc
movsb
movsb
add
shl
data16
testl
outsb
shlb
jle
inc
test
adc
mov
pop
loopne
sbb
pop
fisttpl
dec
adc
or
into
mov
je
xchg
filds
cld
adc
sbb
pushw
cmp
jecxz
lods
test
lahf
loop
add
shrb
cmp
fs
dec
mov
sahf
mov
popw
cmp
cmpsl
int
test
lods
rcrl
shufps
lahf
xor
test
in
daa
push
inc
fistpll
insl
and
pop
or
mov
sub
out
adc
pop
mov
test
jae
xchg
loop
hlt
mov
int3
mov
xor
shlb
rcrl
sbb
mov
aas
dec
repz
xchg
adc
jns
cmp
xchg
repnz
sahf
xchg
mov
xor
inc
lds
out
inc
adc
or
add
dec
mov
sarl
mov
jbe
in
and
sub
inc
jnp
into
push
mov
or
ret
or
movsl
mov
mov
adc
rcl
jo
and
enter
add
jns
xchg
lods
pop
xor
xchg
jge
jae
xorb
or
add
jbe
das
lods
out
add
pop
stos
lods
cs
jl
xlat
sub
mov
sbb
sbb
inc
lds
icebp
adc
das
out
mov
or
cmpsl
cltd
loopne
sbb
cld
push
mov
or
xor
lcall
dec
jle
sbb
rcrb
adc
mov
rcrb
mov
push
out
stos
sub
push
add
pop
shlb
insb
cli
jb
push
xor
dec
xor
cmp
rorl
mov
push
std
pop
inc
mov
fcomps
sub
pop
out
inc
jl
or
push
dec
iret
inc
mov
xlat
push
jb
call
lea
mov
push
sbb
mov
dec
inc
daa
das
xor
aas
sub
jne
mov
and
mov
xchg
xchg
lret
stos
mov
popa
sbbb
fidivs
dec
fstpl
iret
cmc
stos
sbb
cmp
fcomps
dec
lock
adc
mov
adc
loop
xor
icebp
enter
cmp
xchg
cwtl
xor
xchg
lods
std
xchg
jecxz
sub
dec
ds
clc
fistps
mov
jle
push
lea
sub
repnz
inc
icebp
in
pop
int3
imul
adc
inc
out
repnz
cld
mov
mov
add
fcomip
cmp
aaa
outsb
add
mov
gs
cmpsb
rcl
jge
and
hlt
inc
pop
sahf
imul
outsl
rcrb
sub
daa
inc
sbb
inc
fdivrl
pop
daa
add
and
xchg
movsl
gs
and
mov
sahf
sbb
repnz
jl
rcrl
adc
jmp
enter
dec
addr16
inc
push
mov
nop
sub
insl
pushf
les
push
sahf
jbe
dec
mov
add
call
outsl
adc
pop
sub
sub
decb
inc
out
xchg
sti
sub
fwait
out
mov
fstps
pop
mov
jb
sbb
adc
add
xor
lods
in
fisubrs
and
cmp
std
scas
in
int
pop
popf
xchg
bound
pusha
sbbl
fmul
sub
mov
imul
xor
pop
mov
out
mov
clc
adc
aaa
mov
mov
mov
mov
sub
lret
and
rclb
xchg
insl
xor
inc
pushf
add
das
in
ss
xchg
imul
cld
aaa
mov
sahf
sbb
xchg
data16
cmp
std
testl
int3
fnsave
xor
fs
sbb
push
leave
fisttpll
insb
jo
pop
xor
stos
mov
cmpsb
jge
mov
repnz
ss
inc
mov
ja
add
test
fimuls
repz
jbe
xchg
fldcw
sbb
aas
add
popa
inc
sbb
sub
in
mov
sub
xchg
popf
xor
sbb
insl
xor
fnstsw
sbb
jmp
in
int
dec
rol
loope
cmp
push
pusha
shrl
lods
jb
dec
adcb
mov
jp
push
adc
in
jae
mov
jg
mov
lcall
cmpl
sbb
imul
cmpsl
icebp
add
outsb
hlt
mov
xchg
outsb
sub
pusha
outsl
insl
dec
int
push
hlt
std
fdivl
mov
mov
mov
in
pop
mov
xchg
pop
push
mov
pop
cmpsl
xchg
fidivs
xlat
push
dec
add
fistps
add
ret
in
mov
test
cmp
cmp
sub
aaa
jle
dec
imul
or
pop
xor
in
mov
push
cmp
and
fdivp
call
icebp
daa
jge
leave
int3
cmp
or
call
inc
push
stc
or
cmpsl
je
pop
rcrl
adc
xor
arpl
dec
and
decl
aas
sbb
jle
push
arpl
mov
mov
pop
add
sti
out
ret
bswap
xchg
les
sahf
aam
or
es
rcrb
pop
les
nop
pop
pop
and
sti
add
divb
insl
pop
pop
divl
in
inc
xorb
popa
stc
mov
sub
mov
aas
push
add
xchg
inc
fstps
pop
cmp
jb
sbb
loope
cmp
sub
fs
in
jae
adc
data16
mov
mov
adc
or
repnz
rolb
jecxz
inc
push
add
sti
sbb
mov
mov
xor
mov
addr16
in
jl
lret
mov
or
dec
xchg
repz
loope
pusha
cs
das
pop
int3
fwait
and
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
stos
inc
out
mov
test
movsl
out
pop
push
sbb
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
test
clc
movsl
jno
cmc
lea
xchg
shlb
hlt
or
xchg
call
adc
cs
call
lahf
jbe
xchg
add
mov
cmp
ljmp
mov
icebp
xchg
inc
sbb
pop
inc
and
cmp
dec
push
pushf
cmpsb
aad
jl
mov
pop
push
mov
push
mov
icebp
test
out
cld
cmpsb
mov
pop
lahf
ret
stos
pop
pop
and
cmp
ror
pushf
inc
cmc
loopne
xlat
daa
and
sub
push
sub
push
test
imul
popa
cmpsb
mov
lahf
push
or
cmp
mov
out
jg
inc
test
mov
out
jg
adc
jnp
in
out
pop
xchg
test
test
mov
in
je
dec
test
movsl
out
out
jg
inc
mov
pop
icebp
out
jp
inc
test
mov
in
jg
inc
test
mov
out
jg
inc
test
lods
out
pop
icebp
out
xorl
icebp
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jnp
dec
test
mov
out
inc
mov
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
stos
pxor
xchg
mov
out
je
inc
xchg
jnp
mov
jecxz
jg
add
dec
fsubrp
out
pop
icebp
out
pop
mov
fs
clc
rclb
pop
pop
mov
test
pop
icebp
out
jnp
inc
test
mov
out
jg
inc
test
ss
out
jg
inc
test
lods
out
pop
icebp
out
ret
mov
test
mov
out
jg
add
pop
icebp
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
inc
test
mov
out
jg
push
test
add
or
into
sbb
push
or
mov
and
shrb
jo
lret
or
mov
push
lds
test
int3
inc
mov
insb
les
out
push
testl
mov
ret
sahf
sub
dec
mov
adc
inc
loop
jo
fstpt
insl
cmp
pop
sbb
mov
ja
lea
xor
pop
fdivrl
arpl
js
sub
fcomi
push
cltd
push
xor
out
mov
jns
sub
lds
inc
push
and
push
popa
aam
and
pop
rcl
add
sbb
pushf
sub
std
push
das
jl
xor
popl
sarb
test
xchg
inc
or
add
stc
imul
sbb
cmc
cmp
xor
es
jge
mov
dec
or
pop
inc
inc
fidivs
add
pop
cmp
shrl
int
and
shl
out
xor
ljmp
daa
cmp
push
stos
jnp
lock
mov
test
cld
lea
rorb
loope,pn
xchg
lods
pop
mov
shl
testl
sub
mov
pop
aas
xchg
jecxz
bound
xor
mov
mov
icebp
sub
incb
adc
push
jns
inc
push
mov
adcb
bound
pop
sbb
lret
xchg
ss
mov
or
pop
sub
add
dec
gs
push
in
daa
ret
scas
pusha
testb
add
ss
mov
pop
cmpsl
add
mov
pop
rolb
pop
aaa
inc
lcall
pop
rorb
jnp
lea
mov
addr16
mov
pushf
shlb
sbb
cmp
aad
mov
xor
pop
shl
ds
outsb
je
loop
lods
test
jbe
mov
add
stc
std
push
lcall
xlat
pop
jnp
and
xorb
cli
sbb
mov
stos
addb
cmp
adc
push
aad
dec
je
test
cmp
pop
addb
enter
ljmp
and
push
into
std
lret
leave
cs
fcompl
aad
add
xor
arpl
aam
mov
sub
cs
addb
inc
sub
pop
adc
aas
push
jp
pop
hlt
ds
adc
dec
dec
and
aaa
mov
mov
xchg
cld
adc
mov
dec
mov
das
leavew
sbb
mov
jg
push
push
jge
mov
adc
cli
cld
pop
int3
cmpsl
push
iret
sahf
enter
aaa
add
enter
push
mov
push
lea
ja,pt
rcrb
out
adc
mov
xchg
js
in
or
scas
fbld
or
fbld
mov
in
xor
mov
js
in
cmpsb
inc
jno
in
pop
mov
or
add
jbe
cmp
and
jl
and
sbbb
imul
loope
jbe
xor
out
mov
lods
inc
in
popa
cmp
add
pusha
xchg
int3
imul
and
or
push
call
sbb
loopne
mov
or
or
xor
cmp
stos
orb
push
lea
mov
push
ficoml
or
popl
jb
fstpt
scas
cwtl
arpl
push
pop
mov
pop
or
mov
mov
or
or
pop
dec
ljmp
daa
cmp
sarl
in
insb
leave
adc
arpl
faddp
es
jl
mov
aas
mov
pop
fnsave
fcmovnb
std
hlt
ss
mov
jg
or
daa
push
cmc
gs
mov
adc
dec
enter
je
mov
jae
add
mov
es
mov
fsubl
mov
leave
dec
popa
mov
clc
cmp
add
push
or
lods
jns
rcrl
dec
sbb
pop
push
lods
cmp
jo
icebp
mov
dec
jno
aad
add
cmc
cmp
mov
cmpsb
pop
sub
out
mov
lret
mov
mov
add
xchg
cmp
fldcw
ja
push
or
lcall
and
out
cli
iret
mov
or
fcompl
cmp
stc
pop
pop
jnp
mov
jl
jbe
dec
cli
pop
in
xlat
dec
fistl
xchg
jle
cmp
ljmp
push
das
ret
mov
sahf
sbb
es
pop
int3
jnp
imul
xor
popf
gs
sbb
leave
cli
xchg
xchg
stos
mov
pop
add
adc
or
pop
fs
leave
xor
faddp
ret
add
mov
xchg
mov
repnz
das
jge
and
mov
xchg
es
sub
mov
xchg
ret
dec
jecxz
dec
in
outsb
xlat
inc
adc
enter
lea
mov
sbb
fisubrl
mov
test
mov
and
clc
mov
shrl
jns
int
xor
enter
iret
mov
mov
int3
xor
icebp
movsl
lods
pop
and
mov
push
mov
or
outsl
sub
jne
andl
dec
test
pusha
push
aas
pop
jne,pn
or
mov
jle
push
fistl
jne
xor
add
arpl
pop
repnz
and
rcll
arpl
jle
out
icebp
jne
sar
stos
cmpsb
ja
mov
adc
lds
ss
gs
inc
mov
jp
jmp
jbe
into
push
xchg
pop
sbb
loopne
cmp
cmc
mov
fcoms
mov
mov
std
rclb
xchg
mov
sbb
push
add
ret
push
ficompl
rorb
icebp
jne
outsb
sub
ret
or
cltd
mov
clc
jge
mov
ljmp
sub
idivb
arpl
testl
mov
mov
faddp
or
sarl
stos
int
push
push
sbbl
les
jo
jecxz
je
and
mov
cmp
mov
cmp
in
cld
sti
lret
and
or
js
pop
mov
sarl
jne
sub
sub
pop
dec
and
mov
sbb
cs
push
loope
lahf
les
add
xchg
out
rorl
addb
jnp
pusha
xor
pop
push
lods
sarb
imul
shll
nop
lret
mov
repnz
fs
pop
idivb
rol
mov
sbb
movsb
or
lahf
push
arpl
daa
push
cmc
sub
call
cwtl
adc
hlt
xchg
mov
cli
int3
cmpsl
or
jle
orl
sbb
lods
mov
mov
mov
push
sbb
mov
gs
inc
adc
jmp
sbb
test
test
sbb
mov
bound
mov
sub
mov
add
sub
scas
sub
addl
repz
pop
stos
out
and
idivl
fistl
fsubs
sub
fs
lods
arpl
jb
mov
pop
out
popf
pop
sarb
or
dec
mov
clc
add
gs
xchg
mov
test
repz
cli
cmp
ss
lahf
sbb
cmp
fidivs
pop
out
sbb
mov
mov
arpl
ficoml
cld
arpl
mov
add
or
and
rcl
jne
jg
jle
in
je
cwtl
cmp
or
lds
test
loope
mov
adc
jge
leave
inc
mov
daa
addr16
leave
imul
jns
pop
adc
sub
rcrl
cli
jb
add
clc
push
loop
and
test
fmuls
push
add
inc
xchg
cmc
sub
xor
xchg
pusha
int3
jge
inc
or
adc
hlt
push
xor
push
vmovdqa
mov
mov
sbb
xor
dec
jae
xchg
mov
notl
xchg
or
popa
sbb
repz
mov
add
adc
adc
mov
nop
inc
xchg
repz
movsl
pop
cmpb
mov
inc
push
mov
filds
out
arpl
std
loope
lods
push
mov
push
mov
mov
jnp
gs
and
push
add
scas
push
inc
jbe
in
in
sti
pusha
jno
popf
addl
icebp
sbb
out
sar
or
popa
xchg
xchg
aad
mov
in
push
inc
aad
mov
jbe
fucom
xchg
lahf
pop
mov
xlat
fiadds
sahf
and
xchg
mov
fcmovbe
mov
into
push
xchg
popf
dec
sbb
mul
pop
xchg
inc
movsl
mov
mov
xchg
imul
mov
scas
inc
enter
mov
sub
jmp
mov
sub
lea
jle
insb
sti
dec
test
std
inc
push
iret
repnz
jne
jo
jl
xor
insb
xlat
ljmp
or
lahf
imull
jp
sbb
imul
stos
cltd
and
jns
lahf
ss
lahf
mov
inc
add
add
cs
scas
stc
push
add
adc
push
xor
xor
cltd
push
inc
pushf
mov
cmp
adc
mov
shll
mov
lcall
sbb
mov
mov
fcomp
mov
into
into
mov
loope
cltd
clc
lret
dec
inc
cmp
and
out
sub
xor
cs
push
fcos
shrl
ss
sbb
int
mov
push
scas
pop
push
pop
popf
loop
notl
cmp
cltd
insl
rcll
sbb
subb
into
cmp
ja
fistpll
rolb
push
add
bound
mov
push
jmp
jbe
sahf
outsl
push
pusha
push
add
ds
ret
mov
ljmp
adcl
das
pop
sbb
cmp
adc
sub
push
pusha
inc
leave
mov
notb
ret
out
les
jl
std
xorb
nop
fsubrs
dec
mov
push
nop
aas
in
in
or
mov
ljmp
inc
xorb
cmp
add
out
fiadds
jmp
js
add
sub
mov
shr
xchg
sbb
call
std
daa
and
cli
xchg
mov
scas
add
mov
jns
mov
and
mov
ffreep
repz
jo
ret
ret
add
mov
mov
mov
or
adc
and
push
jne
divb
push
scas
sub
jne
dec
insl
jno
and
mov
out
fwait
add
add
ds
movsb
pop
mov
xchg
mov
inc
xchg
loopne
ret
cli
push
inc
mov
sub
dec
loop
roll
inc
pop
mov
out
cmpsl
popf
dec
movsl
mov
add
jnp
iret
mov
daa
lock
mov
lods
dec
insb
cmp
mov
fwait
pop
jb
mov
add
mov
or
inc
sarl
stos
sbb
je
daa
cld
mov
pop
rorb
xchg
mov
pop
jecxz
popa
or
insb
lahf
in
sbb
ret
sbb
outsl
cs
jno
rorl
inc
xor
ds
sbb
sbb
jb
xor
out
int
xor
mov
xchg
cmpsl
enter
inc
sub
arpl
orl
std
sub
and
ret
mov
aas
fidivrs
cmpsb
or
jle
mov
fwait
xchg
andl
mov
scas
cld
out
xor
cmp
and
scas
test
fwait
inc
in
cltd
inc
sub
fnstenv
mov
repz
adcb
lods
jp
subl
or
into
mov
or
sbb
clc
stos
mov
mov
dec
mov
and
addr16
in
inc
icebp
jns
icebp
mov
mov
adc
shll
adc
in
pop
xchg
xor
jbe
fnstcw
xchg
cmpsb
scas
cmp
cmp
inc
je
dec
jg
scas
pop
fcmovne
insb
lcall
adc
gs
jb
and
rcll
pop
mov
push
mov
inc
out
leave
push
lcall
es
bnd
lret
jnp
jae
xchg
andl
jle
lods
xchg
sbb
add
repz
mov
out
pop
xor
sub
push
xor
cmp
dec
stos
aam
insb
inc
xor
inc
cmp
fistps
and
inc
fs
and
mov
mov
cltd
push
sahf
pushf
jecxz
dec
xchg
and
imul
lret
cmpsb
add
mov
mov
cld
add
inc
xorb
pushf
sti
data16
sbb
or
mov
shl
mov
fbld
jp
das
add
mov
xlat
sub
xchg
adc
sbb
call
rolb
xor
dec
pusha
dec
mov
adc
movsl
out
leave
xchg
jmp
xor
das
and
lea
mov
lock
jbe
inc
aas
and
xor
into
dec
lock
cmp
repz
ss
out
adc
nop
dec
addb
daa
fwait
lret
and
add
insb
ret
pushf
cmp
add
add
inc
or
mov
jge
jno
xor
push
fstl
rcrb
mov
jns
jle
xchg
rol
adc
ret
addr16
push
call
xchg
or
loope
rorb
in
insl
push
jmp
xchg
mov
neg
fs
aam
jbe
sub
dec
sti
mov
mov
testb
mov
sbb
test
or
scas
mov
stc
inc
inc
test
sarl
inc
sbb
xor
fidivs
ror
les
mov
rorb
lds
shlb
dec
out
es
call
jo
inc
push
in
add
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
