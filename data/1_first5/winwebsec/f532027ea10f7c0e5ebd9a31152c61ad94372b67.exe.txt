sbb
and
xor
push
fwait
cltd
dec
adc
stos
jmp
out
xchg
jno
int
cmpsl
inc
push
push
lock
or
xchg
adc
cmp
int3
out
mov
and
jns
sahf
pop
in
pusha
jne
rorb
loope
repnz
daa
xor
ljmp
in
test
arpl
push
mov
loope
push
pop
fdiv
jbe,pn
pusha
dec
lahf
xor
fcmovbe
xor
dec
push
xor
xorl
pop
mov
mov
mov
cmp
dec
lods
push
mov
gs
or
inc
push
mov
test
lahf
mov
repz
pop
leave
das
push
dec
add
mov
hlt
lods
outsb
xor
and
mov
divps
push
or
test
scas
std
sbb
insb
leave
and
inc
or
pop
outsb
xchg
mov
insl
jmp
scas
inc
adc
mov
mov
test
ret
jae
mov
enter
dec
mov
movsl
mov
jae
mov
cltd
shlb
sbb
inc
clc
cmp
mov
mov
mov
imul
imul
and
push
jl
int
je
imul
mov
stc
lods
in
roll
cld
cmp
pop
xchg
inc
push
mov
cwtl
push
sbb
popa
or
loop
shlb
fstl
adc
cmp
leave
mov
fs
or
adc
and
leave
sub
pop
dec
ds
aas
mov
sbbl
pop
rclb
lods
mov
inc
inc
pop
cmpsl
insb
out
cmp
xchg
push
adcl
xor
int
adc
mov
shlb
inc
leave
sub
fisubrl
ljmp
in
mov
xor
test
mov
rcl
je
adc
xor
faddl
aad
add
mov
adc
sub
inc
mov
mov
xor
xchg
sbb
sbb
js
inc
imul
pop
jle
pop
inc
pop
frstpm(287
cmp
aam
shrb
mov
inc
pop
jnp
fimull
cwtl
pop
aad
xchg
lret
dec
add
fs
mov
sti
dec
jae
cmp
sub
jb
fs
nop
jb
push
inc
mov
push
pop
and
cmp
sbbl
repnz
inc
sti
inc
sbb
cmp
jo
mov
je
dec
adc
movsl
xor
adc
outsl
test
notb
pop
push
jb
int
mov
arpl
lret
jmp
pop
shrl
sbb
std
std
xor
or
push
push
mov
push
sahf
icebp
add
iret
rcll
dec
and
fiaddl
cmp
sbb
scas
loopne
aad
push
cmpsl
push
int3
mov
cmp
dec
push
inc
pop
xlat
dec
test
vmwrite
xor
scas
outsb
push
mov
stos
add
jo
movsb
rcrl
ds
add
int
fwait
mull
mov
xorb
in
inc
loop
addr16
movsl
pop
jne
repnz
fistl
fdivl
ljmp
sub
pusha
sub
gs
mov
pop
shlb
push
xchg
in
cmp
mov
adc
jecxz
dec
push
sub
lret
add
dec
inc
pop
pusha
lret
hlt
test
lret
adc
lahf
sarl
jb
daa
jb
xchg
andl
mov
jb
cmp
xchg
push
sub
mov
stc
daa
jl
and
push
test
push
xchg
aam
mov
loope
scas
adcb
mov
pop
push
or
insl
mov
sub
frstor
adc
xor
clc
in
push
iret
dec
icebp
lods
fcoml
and
inc
pop
outsl
shlb
jno
xor
pop
stos
fstps
jo
in
popa
xor
sub
mov
and
jmp
aad
mov
sub
daa
gs
int3
jecxz
xchg
xor
inc
mov
xchg
cmp
cli
mov
pop
fadd
mov
jns
inc
inc
lahf
fwait
gs
call
push
or
mov
cmp
scas
mov
arpl
xchg
lds
movsb
mov
xor
xor
cmpsb
mov
test
xchg
lea
push
out
inc
cmp
xchg
dec
lods
push
movsb
adc
adc
mov
jmp
xchg
das
xchg
sub
rolb
push
sub
pusha
sbb
jg
scas
call
jge
out
jmp
in
add
daa
sarl
stos
mov
add
jne
and
sbb
nop
ret
inc
sbb
js
rorb
mov
or
pop
mov
xchg
in
inc
and
jecxz
push
sub
mov
push
aad
jno
pop
popf
push
out
xchg
push
sti
mov
scas
insl
fsts
or
rcrl
push
std
stos
inc
add
xchg
fsts
ds
call
xchg
repz
out
xchg
in
test
sbb
sbb
insb
outsl
dec
pop
sbb
bound
cli
outsb
fsubrs
mov
out
xorl
inc
aam
jo
test
push
adc
dec
inc
aad
jbe
pop
clc
std
cs
pop
cmp
jl
or
add
mov
dec
sub
mov
sub
lods
loope
pop
pop
add
cltd
dec
adc
std
mov
testl
inc
jp
and
sahf
push
test
dec
sbb
inc
mov
add
add
int
or
leave
jmp
mov
cmpsb
or
adc
call
popf
or
mov
pop
cmp
inc
pop
ja
inc
js
int3
dec
insb
scas
lcall
adc
push
arpl
cli
jmp
adc
insl
fsubl
mov
hlt
jg
cli
add
imul
iret
pusha
inc
mov
jge
sbb
mov
or
fildl
arpl
cld
pop
inc
loopne
sahf
and
fimuls
pop
cmpb
cmpsb
inc
and
sbb
cltd
out
mov
outsl
jmp
leave
bound
dec
xchg
inc
inc
xchg
das
movsl
je
popf
and
push
scas
rolb
jp
xor
xor
jge
pop
lret
xor
push
inc
roll
jle
and
inc
movsl
xor
dec
cltd
hlt
stos
pop
lret
ja
aam
nop
mov
addr16
filds
dec
ret
rcl
mov
rcrb
cmp
imul
mov
jp
in
imul
pop
pop
jno
leave
pop
mov
imul
mov
pop
push
adc
cmp
aam
jecxz
inc
out
push
repz
xor
out
imul
sti
cmp
ja
mov
add
mov
subb
cmp
xchg
jmp
and
jb
jl
sbb
stos
mov
insb
clc
sbb
push
cmp
aad
rcl
fwait
or
cmp
push
pop
call
push
loop
xchg
lret
push
jecxz
out
into
push
arpl
imul
add
push
cmp
nop
andb
int3
scas
xor
decb
out
aad
and
lcall
imul
cmpsb
aas
out
xchg
mov
nop
cmp
push
mov
jmp
adc
andb
daa
cltd
ds
mov
sbb
jne
data16
inc
fldcw
jp
dec
lods
adc
pusha
jae
dec
inc
or
das
cli
sti
mov
cmpsl
test
adc
cmpsl
dec
in
adc
cli
loop
mov
les
xchg
cwtl
jp
sub
stc
sub
add
and
and
jge
add
mov
std
lods
movsl
clc
popl
or
mov
ret
test
adc
xchg
cmp
sbb
pop
je
jnp
dec
stos
cmp
add
mov
lahf
repz
imul
pop
std
xor
and
lcall
mov
ret
loope
add
fimuls
dec
and
cmpl
ret
jle
jb
cmpsl
enter
jb
sti
test
aad
outsl
aas
cmc
cmpsl
push
je
jns
and
sbb
bound
push
mov
mov
mov
mov
push
lods
push
mov
int3
add
xchg
les
push
push
sub
insl
sub
mov
push
lds
adcb
dec
fs
arpl
lods
sub
sub
aas
sub
adc
dec
int3
addb
pop
or
pop
scas
icebp
cmp
dec
movsb
adc
mov
iret
rcll
stos
mov
mov
rol
sbb
ss
out
pusha
fimull
jb
push
add
scas
stos
mov
std
mov
repz
loope
rcrb
rorl
xchg
sub
add
adc
push
cmpsl
mov
std
push
cmp
data16
nop
add
pusha
lods
or
inc
iret
sbb
aad
int
in
pop
cli
arpl
cmpsb
insl
sbb
xor
xor
test
push
mov
and
mov
pop
ss
loop
mov
fwait
and
fcoms
cmpxchg
int3
and
fldcw
sub
in
popa
pop
sub
fs
xor
mov
or
fistpl
or
loop
lret
das
cmc
adc
pop
hlt
jns
daa
xchg
jl
or
loop
xor
push
add
xor
and
xchg
popa
bound
adc
mov
mov
pop
notb
pop
cmpb
jmp
cltd
in
jecxz
xchg
sbb
jle
scas
insl
cmc
add
pop
fiaddl
inc
xlat
mov
push
mov
adc
inc
inc
inc
test
xchg
sub
cmp
mov
or
jb
cld
jl
mov
cmpb
sahf
rorb
sbb
add
mov
jle
mov
inc
cmpl
movsb
ret
addr16
jp
outsl
sahf
xor
popa
or
jbe
pop
push
lods
adc
mov
enter
fmull
out
xchg
loopne
inc
add
dec
js
cvtps2pi
aam
rcrl
push
or
subl
push
xorl
or
or
push
mov
or
lea
jbe
test
mov
sbb
adc
inc
push
xor
jg
adc
mov
popf
bound
and
sbb
and
nop
fidivs
ret
fxch
push
inc
shll
ds
mov
pusha
mov
and
push
xchg
xchg
adc
push
bound
sub
cld
pop
xor
pop
shll
pop
and
int
sub
cltd
or
aam
imul
loop
add
xor
push
mov
xchg
sbb
jge
aad
sub
mov
cmp
mov
cmpsb
push
push
sti
dec
adc
movsb
movsl
jnp
dec
testb
sbb
xchg
jmp
mov
add
sub
not
mov
test
movsl
movsb
sti
lcall
add
xchg
loope
push
pushf
push
inc
pop
fwait
lret
push
cli
jle
adc
mov
js
cmpl
roll
roll
xor
stos
pop
adc
fwait
ret
out
push
into
in
shrb
cmp
xor
stos
pushl
and
or
push
dec
inc
loope
leave
popf
mov
mov
pop
xor
dec
jecxz
dec
mov
movsb
adc
mov
lea
stos
jge
add
loope
inc
mov
or
push
xlat
out
inc
enter
adc
inc
fs
inc
movsb
lock
cmpsb
adc
adc
rcrl
imul
pop
out
lea
pop
daa
ss
imul
cltd
mov
mov
xor
jae
fbld
outsl
addb
bound
jb
and
pop
lahf
outsb
in
out
mov
push
outsl
pop
mov
ja
movsl
cmp
fidivs
test
insb
mov
sete
enter
pop
xor
or
repnz
mov
es
cmp
dec
icebp
popa
jo
mov
mov
adc
mov
sbb
fcmovnbe
enter
sub
je
ja
aad
adc
fs
cmp
cli
std
sub
sbb
icebp
xor
das
jg
push
dec
push
mov
jbe
push
cmp
fcomp
hlt
xchg
cmp
enter
dec
aam
mov
push
pushf
andb
int
push
pop
aaa
out
sbb
divb
test
mov
mov
pusha
test
push
fiadds
cmp
jg
test
je
xchg
push
sbb
push
ret
out
fistpl
push
ret
scas
cmpsl
ret
sbb
je
jo
sub
jmp
push
repnz
cmpl
mov
mov
cmp
cwtl
out
and
popf
sbb
jp
mov
mov
cwtl
iret
adc
add
mov
mov
adc
cli
int3
enter
sbb
push
mov
mov
push
call
clc
sub
sbb
mov
popa
push
test
arpl
xchg
insb
push
inc
push
mov
push
push
filds
in
lea
je
iret
inc
imul
mov
sbbb
hlt
mov
lahf
call
test
shl
test
mov
lea
lods
inc
pop
sub
ss
inc
pop
aas
mov
fcmovnu
testb
push
jo
leave
test
gs
lcall
repnz
push
inc
or
sti
add
loop
dec
jnp
push
cld
cmp
jno
adc
mov
push
jns
int
pop
sbb
mov
or
out
mov
add
and
sarb
divps
lcall
lods
rclb
ret
bound
int
mov
fucomp
fiaddl
adc
out
cmp
in
pminub
sub
aaa
lods
jecxz
addr16
jmp
jno
jmp
cmpsl
push
cwtl
aam
inc
nop
divb
out
push
add
mov
mov
push
push
xlat
shrl
sub
adc
mov
mov
pop
jns
jg,pn
add
adc
pushf
adc
inc
push
mov
fwait
scas
mov
and
xchg
lods
int3
lock
insb
jle
das
xchg
test
push
sub
outsl
aas
jbe
pop
cwtl
adc
nop
mov
leave
imul
lea
insl
inc
xchg
test
sbb
pusha
movsb
push
or
push
mov
and
push
lods
mov
out
lea
mov
in
dec
orb
jmp
mov
enter
mov
test
pop
mov
mov
out
imul
shll
xorl
movsl
pop
aad
in
jp
sub
push
mov
and
inc
outsb
xchg
xor
cmp
pushw
sub
sti
icebp
fucomip
in
mov
pop
mov
paddb
scas
cmpsl
mov
xor
scas
xlat
nop
test
out
cmc
inc
push
fcompl
xchg
mov
mov
pop
push
inc
dec
xlat
idivb
stc
jo,pn
xor
and
sub
pop
sahf
and
adc
leave
test
push
ja
cli
and
pusha
sarl
sbb
mov
or
sub
xchg
jno
pusha
les
xorl
mov
imull
rcrb
push
mov
push
fmul
imul
push
lahf
jecxz
cmp
pusha
int
iret
andb
push
testb
cmp
test
mov
lock
mov
pop
pushl
jg
xor
lret
inc
sti
call
dec
cli
adc
sub
push
fs
idivl
insl
ret
sbb
and
dec
mov
out
sub
mov
mov
jb
int
ret
pushf
or
mov
push
mov
jb
clc
xchg
mov
mov
jns
test
cmpb
jp
clc
scas
lods
dec
sar
cmp
push
ja
jb
in
je
sarb
outsl
add
ljmp
sub
insl
or
addr16
incb
inc
fistpl
pop
inc
cmp
and
popf
add
xchg
push
push
jp
push
or
inc
sbb
mov
cmp
push
xchg
popf
mov
inc
adc
js
add
mov
sahf
push
push
leave
insl
mov
stos
sbb
push
sub
mov
lods
or
adc
push
aas
lcall
mov
adc
dec
xor
inc
daa
mov
outsl
mov
cmp
mov
or
push
sahf
in
repz
test
add
sub
test
pusha
push
pop
and
out
stos
jns
insb
jmp
in
cmpsl
out
scas
or
lret
cmp
popf
or
push
inc
push
xor
fisttps
dec
push
lret
xchg
mov
imul
adc
xchg
out
ja
mov
jnp
repnz
inc
mov
aaa
pop
testl
ja
jo
je
dec
out
bound
or
mov
mov
mov
in
push
scas
xor
je
jno
add
jo
and
enter
cltd
test
or
int3
jmp
or
fcmovnb
cmpsb
sub
cli
jle,pn
push
or
notb
sub
or
jle
cmp
lret
cs
rcl
adc
xchg
sbb
out
mov
mov
sbb
pop
jl
xor
mov
adc
pop
xchg
hlt
fsubs
call
cs
push
adc
popf
icebp
jae
fstps
sti
sub
sbbb
pop
jmp
adc
loop
sbb
jmp
popf
xor
cmp
fs
mov
adc
loop
cli
arpl
mov
jno
cmp
xchg
push
arpl
push
fxch
add
sub
mov
push
mov
out
in
insb
fadd
jecxz
pop
cmp
mov
xor
fsts
pop
stc
adc
mov
dec
sub
call
jnp
inc
pop
rol
test
inc
and
and
and
jmp
hlt
mov
test
cmp
pop
sub
mov
xor
out
jge
sbb
lods
fists
add
pop
aas
outsl
test
lock
xchg
cld
scas
notl
pushf
sahf
les
pop
int
adc
sbb
or
jbe
dec
mov
jbe
es
pop
adc
loop
jne
xchg
inc
mov
mov
popa
mov
cmpsb
mov
sub
push
adc
ljmp
xchg
lods
push
mov
in
jb
or
lods
insl
sbb
push
or
es
test
movsl
in
call
loop
pushf
test
add
out
int
push
adc
and
xchg
xor
pusha
sbb
out
or
lods
xchg
dec
dec
movsb
mov
mov
jno
jnp
xor
mov
pop
sub
sbb
rcr
lods
mov
add
pop
sbb
int3
loopne
jns
push
pop
adc
cmpsl
sbb
pop
push
xor
ret
push
sbb
cmp
lock
cmp
movsl
in
lds
inc
push
inc
stc
sbb
mov
xchg
out
repz
inc
jb
jnp
jne
xlat
movsl
mov
gs
ret
jns
aaa
mov
vandnps
sub
movsb
shrb
and
aad
inc
inc
popa
jb
xchg
push
and
jge
movsb
fdiv
ja
xchg
pop
ss
aam
outsb
mov
push
or
cmp
sarl
test
mov
stc
mov
lods
xlat
and
push
clc
rcr
dec
pop
ljmp
addr16
loope
rdtsc
mov
lock
pop
sbb
in
fabs
mov
leave
sub
pop
inc
add
mov
cmpsb
out
rolb
out
divb
lcall
shr
add
push
popa
mov
xchg
jge
ss
push
mov
cld
or
mov
pop
int
and
mov
ja
loope
addb
mov
or
lock
or
test
push
xchg
stc
push
dec
ljmp
and
sahf
lods
inc
pop
les
call
hlt
cld
out
shll
cli
movsb
mov
jl
sbb
mov
sbb
jp
push
xchg
data16
cld
rcrl
xor
fsts
push
cld
movsl
add
adc
shlb
rcll
orl
out
stc
or
das
push
mov
into
mov
sbb
into
int3
cwtl
enter
sub
fisubrs
shll
roll
mov
jb
ss
adc
out
cmp
sub
mov
mov
stc
or
cmp
adc
test
stos
aad
ficomps
push
xchg
cmpxchg
add
xchg
push
clc
jg
sar
mulb
sub
add
sbbb
adc
jne
push
clc
les
push
and
shrl
imul
cmp
inc
and
dec
xchg
leave
jl
sub
push
pop
repz
push
shl
rorl
ja
test
xchg
mov
sub
xchg
pusha
icebp
or
jl
scas
stc
stc
inc
sbb
fldcw
icebp
fs
pop
sub
loopne
dec
cltd
pop
mov
fistps
lds
std
inc
sbb
pop
push
or
int
lcall
jle
fdivrs
mov
push
inc
jmp
shll
fbld
sub
stos
push
or
inc
lret
jmp
cmpb
mov
mov
ljmp
jmp
jo
mov
cwtl
cmp
ficoml
jne
push
mov
mov
mov
ss
add
push
dec
rcrb
sbb
mov
fwait
inc
xchg
inc
cld
adc
adc
movl
movsb
cmp
lahf
sub
cltd
xchg
pop
push
mov
test
clc
into
js
outsl
adc
dec
das
sbb
fcom
mov
jge
sbb
cmp
jbe
push
aam
mov
aam
sti
or
dec
orl
mov
rol
cmp
push
cmp
hlt
cmp
outsb
bnd
mov
mov
mov
add
inc
mov
mov
mov
mov
stc
add
sbb
fidivl
push
jbe
outsl
jno
popa
xchg
mov
mov
mov
or
lret
outsb
sarb
mov
mov
cmp
cltd
cmpsb
mov
aam
jl
dec
das
adc
pop
mov
subb
sbb
lea
stos
xchg
xchg
dec
stc
sub
stos
loop
test
inc
movsb
mov
pop
inc
pop
popa
sub
outsb
movsb
in
pushl
xchg
sbb
adc
das
mov
out
loopne
dec
mov
dec
cltd
pop
outsb
mov
push
xor
pusha
pop
ja
data16
push
mov
sti
int3
stos
sahf
or
push
call
stos
xor
add
adc
lds
lea
stos
pop
testl
into
and
fistps
fistpl
frstor
cmp
dec
int3
cli
lods
outsb
outsb
or
mov
cld
jge
push
outsl
repz
movsl
fstpl
cmc
and
add
dec
push
inc
ljmp
cmpsb
ds
out
mov
sahf
lea
leave
jge
in
jmp
lret
mov
and
dec
stos
jg
jo
lret
rcl
cli
mov
cltd
fsubs
sti
aad
xlat
inc
call
scas
ja
sub
add
push
xchg
lock
push
mul
xor
cmp
or
push
in
and
pop
sbb
mov
fnstsw
pop
enter
insb
fcmovnb
lret
data16
push
or
lret
mov
adc
lea
pop
outsb
arpl
icebp
inc
jg
nop
mov
dec
pushf
jg
test
jl
push
cmp
in
rcrb
add
cmp
pop
iret
inc
rorl
jp
pop
add
stos
mov
or
loopne,pn
subl
cmp
std
divl
sarb
push
mov
incl
inc
xchg
xlat
mov
sub
insb
test
subb
lret
sbb
out
nop
out
in
adc
aam
pop
mov
bound
testb
push
adc
adc
adc
mov
pushf
push
cmp
add
pop
shl
jnp
das
icebp
popa
xor
or
mov
fisubrl
adc
mov
loope
jmp
roll
xor
mulb
int3
je
sbb
cwtl
int
aad
cmc
add
cmpsb
adc
rcrb
push
push
pop
inc
iret
push
mov
idivl
or
and
push
cmp
push
or
lods
in
test
test
mov
loope
sbb
jnp
daa
scas
mov
cmp
loopne
mov
cmp
mov
clc
cmpsl
lahf
das
dec
dec
mov
push
into
pop
push
or
pop
mov
xor
repnz
mov
sbb
mov
scas
adc
push
add
jge
xor
testl
push
mov
lcall
pop
cmpsl
and
fcompl
hlt
pop
mov
in
hlt
jg
lret
mov
or
mov
mov
inc
mov
outsl
bts
aas
es
mov
testl
jmp
out
out
fldl
pop
mov
jl
into
jg
cmc
pop
lock
ds
jbe
add
xchg
sbb
sbb
insb
adc
mov
aas
mov
lret
mul
mov
ret
int
outsb
js
mov
stos
inc
dec
push
mov
lret
mov
adc
pop
jl
loopne
bound
cs
cmpsl
sub
std
call
lret
sub
add
mov
repz
cmp
inc
or
sub
add
lods
jge
jmp
push
cwtl
lds
cmp
push
mov
js
es
test
jp
inc
insb
std
fld1
pop
and
mov
pop
and
mov
jbe
notl
sbb
lahf
add
hlt
movsl
or
rolb
out
xchg
and
in
xor
fmul
xor
push
xor
in
pushf
inc
adc
ljmp
xchg
shrb
push
ljmp
sbb
mov
scas
dec
in
cwtl
mov
push
loope
ret
fwait
add
xor
add
cmp
adcb
cs
dec
mov
gs
sarl
mov
clc
ss
lret
jle
in
lock
cmp
inc
xor
xchg
in
cltd
cltd
sbb
dec
inc
inc
push
out
fldcw
jmp
push
mov
pop
cld
and
push
push
sbb
repz
pop
add
or
rcr
mov
aad
inc
push
insl
cmp
adc
pop
insl
mov
pop
mov
mov
pop
sub
sbb
sbb
insb
jo
dec
jmp
push
push
fs
inc
xchg
mov
test
rorb
jge
xchg
mov
push
dec
test
jbe
cmpsl
pop
divb
and
push
nop
jmp
sub
nop
mov
sub
lahf
outsl
lret
loopne
jmp
leave
outsl
fnsave
jnp
xchg
xor
fwait
gs
and
out
daa
jnp
mov
fs
push
push
xchg
scas
sbb
mov
mov
scas
jp
aas
sbb
out
rolb
mov
and
xlat
shll
sbb
mov
test
push
dec
cmpb
ret
popa
lods
inc
mov
je
gs
jbe
mov
inc
dec
movsl
mov
leave
js
cmp
mov
arpl
out
inc
sbb
and
dec
push
lods
pusha
sbb
std
outsl
or
arpl
inc
cmp
shlb
mov
fwait
push
lcall
test
test
nop
and
imul
mov
push
cmpsl
test
mov
mov
jb
insl
and
subl
aaa
xor
mov
arpl
dec
xchg
sub
jne
dec
xchg
or
sub
imul
mov
scas
inc
push
lds
dec
out
push
jecxz
enter
pop
adc
or
mov
mov
aaa
xchg
mov
xchg
dec
inc
jge
mov
xorb
jnp
add
emms
daa
mov
or
cmp
lds
mov
jp
mov
andl
dec
jae
and
mov
jb
clc
adc
ss
out
jecxz
adc
mov
loopne
out
mov
fucomip
lods
xor
pop
in
ss
pop
mov
into
fisttps
dec
dec
popf
lds
dec
das
add
jno
loopne
in
addr16
dec
jl
xchg
adc
mov
dec
xchg
mov
mov
sbb
mov
daa
and
aad
xor
xchg
push
pop
cltd
mov
add
data16
std
jg
xchg
push
mov
xor
pop
fnstenv
adc
les
lea
mov
sti
add
cld
jg
jne
mov
mov
xchg
imul
dec
push
call
fisubs
clc
push
lods
inc
fadd
je
lea
lcall
sbb
push
aad
xchg
rorl
aaa
jmp
js
ja
test
pop
add
int3
fmuls
movsl
mov
test
push
stos
xchg
mov
and
fwait
xor
loop
pop
inc
arpl
pop
lods
orl
dec
sub
in
vandnpd
shl
in
gs
sbb
movb
add
mov
cmpsl
xchg
jbe
mov
ljmp
push
adc
sub
mov
xchg
leave
clc
pushf
bound
neg
sbb
arpl
jbe
push
dec
repz
or
xor
adc
bnd
jmp
aad
dec
dec
enter
jae
pop
pop
out
jno
js
cmp
inc
cmp
cmpsl
repnz
call
int
jmp
negl
mov
in
fiadds
icebp
lds
cmp
std
xchg
call
mov
push
push
aad
mov
jecxz
mov
jbe
xor
nop
js
mov
std
push
cwtl
adc
mov
xchg
sbb
xor
or
sbb
and
mov
xchg
cli
iret
pop
xlat
sbb
cmp
insl
mov
fists
or
push
lret
sub
push
fcomps
sahf
imul
xor
inc
mov
and
push
js
pop
addr16
outsl
cmp
fcmovu
jb
movsb
xchg
add
mov
xor
ja
jmp
or
or
clc
push
cs
fwait
or
pop
jp
push
sbb
ret
adc
jae
ja
or
cmp
mov
pop
aas
inc
xchg
sarl
shl
dec
mov
std
sbb
icebp
and
cmp
inc
gs
sti
jmp
push
dec
out
int
mov
ds
xchg
dec
sti
push
adc
cli
das
cwtl
out
jge
imul
loopew
jl
and
insl
ds
jb
iret
xchg
nop
pop
sbb
loope
jns
adc
mov
pop
int
fimull
test
pop
sub
lahf
lock
add
mov
and
push
in
daa
inc
lea
stc
dec
int
xchg
pop
inc
iret
cmp
inc
jb
ret
cwtl
in
std
mov
popf
cltd
xchg
mov
push
insl
cmp
or
out
sbb
les
in
xchg
out
push
mov
in
mov
xor
xor
inc
test
inc
mov
lods
iret
jg
iret
jmp
imul
cmpsb
push
rcrl
sub
shl
lret
movb
sbb
push
pop
mov
stc
in
in
test
push
mov
jns
adc
imul
and
pop
xorl
push
adc
mov
xor
mov
subb
jl
scas
sub
pop
adc
jno
inc
mov
pop
xchg
stos
arpl
imulb
into
std
add
js
adc
inc
in
xchg
mov
hlt
ret
lcall
clc
dec
push
sub
xor
xor
inc
pop
push
mov
push
fs
shll
xor
in
movsl
mov
std
jle
dec
xor
imul
cmp
pop
jecxz
pop
jo
loope
cwtl
js
cld
jno
rorl
dec
cli
cltd
mov
sub
mov
jno
adc
pop
cmp
cmpb
loop
in
mov
lods
cwtl
pop
in
cmpl
loope
xor
leave
mov
arpl
movb
push
jg
lea
or
es
fdivrl
cmp
adc
in
sub
xchg
jecxz
out
pushf
movsl
fadd
or
addr16
xor
test
dec
pop
call
pushf
mov
loop
lret
jno
cmp
xor
data16
test
pavgw
lods
nop
pop
fcmovu
sbb
inc
xchg
xchg
add
nop
mov
mov
ret
jo
dec
xchg
add
stos
rcrb
add
inc
mov
mov
mov
dec
jne
push
xor
stos
xchg
pop
or
mov
pop
xchg
xchg
mov
bound
push
push
push
dec
pop
push
pop
mov
vdivsd
push
push
mov
jg
inc
and
insb
inc
pop
lcall
mov
sbb
xchg
inc
cmpsl
push
dec
je
dec
or
jle
push
cmpsb
push
in
cmp
addr16
cmp
js
fists
mov
ftst
imul
mov
testl
cltd
cmpsb
push
imul
sahf
inc
lret
sbb
or
xor
stos
push
fisubs
push
sbbb
add
scas
mov
sbb
lock
scas
jae
pop
iret
mov
scas
sbb
xchg
jmp
cmp
fmulp
shl
nop
cmpsl
call
lods
jne
push
fndisi(8087
pop
js
fwait
sub
ret
dec
out
shll
dec
notl
push
roll
add
sbb
in
xorl
cs
xchg
movsb
mov
add
sbb
cli
xchg
xchg
lds
xchg
mov
jbe
test
mov
xchg
andb
jge
dec
mov
dec
mov
inc
push
test
testl
test
push
add
adc
pop
rcll
add
cli
push
mov
pusha
rclb
lea
sbb
aaa
das
lcall
mov
in
xor
mov
fstpl
adc
dec
das
pop
fdivrs
mov
addl
fisubrs
lcall
hlt
movsb
in
and
xor
dec
xlat
pushf
ja
inc
repnz
or
inc
cmp
mov
xchg
push
pop
inc
ja
push
idivb
cmp
lods
pop
mov
adc
daa
dec
out
in
dec
jmp
lods
xor
sbb
add
cs
adc
sbb
cltd
cmpsl
pop
sbb
mov
jno
imul
jmp
idivb
mov
mov
lret
jnp
xor
xchg
cmc
movsb
dec
ffreep
mov
scas
xor
mov
scas
jo
xchg
and
and
mov
or
sti
stos
jg
dec
pop
xor
pop
js
lea
mov
fwait
and
dec
mov
xor
cli
and
cld
pop
inc
popf
test
loop
xchg
or
js
push
lcall
xlat
mov
andb
idiv
cmpl
mov
sbb
inc
das
repz
clc
sub
and
repnz
fsubs
xor
out
stos
sub
pushf
or
je
mov
ds
cli
mov
inc
int3
nop
sbb
shl
seta
xor
dec
arpl
push
xchg
shr
xor
fsts
mov
cwtl
xchg
pop
insb
stos
cmpb
cmpsl
push
jb
mov
pop
push
adc
pop
add
mov
pop
xor
in
or
jg
jle
lahf
cmpsb
mov
dec
aam
cmp
xor
jmp
nop
jl
sbb
mov
stos
jp
adc
mov
xchg
cmp
add
call
sarb
add
shrb
movsl
pop
dec
hlt
pop
and
aad
and
loopne
mov
or
cld
push
adc
gs
and
jns
xlat
inc
rep
add
jl
mov
pushf
xchg
out
call
roll
push
clc
jbe
into
jo
int
jge
out
mov
sbb
ja
inc
popa
mov
test
dec
dec
cmp
xchg
sub
dec
loope
jne
cmpsl
xor
fwait
or
sub
sub
popf
pop
jb
push
ss
insl
lret
popa
mov
add
ret
icebp
mov
jbe
pop
addr16
xchg
jmp
jae
hlt
add
int
mov
mov
sbb
int
inc
adc
int
xchg
dec
jp
push
inc
inc
into
cltd
scas
insb
push
mov
stos
jge
adc
pop
jle
sbb
cltd
mov
pop
cmc
ret
subl
mov
out
fs
jne
cmp
nop
in
mov
lret
adc
xchg
call
jb
jb
mov
inc
loop
push
and
xchg
xor
gs
mov
and
cmpsb
jg
lea
xor
sbb
jnp
mov
out
or
nop
jmp
mov
jbe
fidivs
test
sbb
out
xor
dec
xchg
repnz
test
mov
popl
add
xlat
or
jmp
inc
jae
aam
cwtl
lds
jg
test
xor
out
lock
popf
dec
mov
popf
xlat
push
imul
jle
push
loopne
jecxz
adc
push
cmpb
or
jg
push
xor
test
loop
insl
test
cli
ret
fucom
mov
sarl
inc
lret
nop
lcall
pop
ss
shll
sub
sbb
lcall
insb
pop
dec
pop
inc
push
sub
mov
imul
movsl
and
dec
mov
not
inc
jb
pusha
push
pusha
and
xchg
movsl
or
outsl
ficoml
mov
arpl
in
addb
frstor
int3
jbe
push
inc
push
sub
popa
push
stos
sub
popf
and
rclb
insl
and
popa
or
in
xor
les
xchg
shlb
out
and
sbb
ficoml
jl
sub
jae
mov
fdiv
insl
pop
mov
bound
es
mov
js
cmc
add
mov
cmpsl
aaa
cmc
dec
inc
inc
jp
mov
push
fistpll
xor
sub
jle
repz
pop
and
cli
stc
fs
mov
sbb
cmpsl
and
jecxz
loopne
jge
mov
cmpsb
push
xchg
das
pop
mov
mov
mov
arpl
imul
ret
adc
out
popf
cmpsl
mov
pop
gs
pop
pop
cmp
rclb
lods
push
mov
jge
pop
aas
std
and
fildl
jp
jns
push
mov
lds
xchg
sbb
and
faddl
aad
repz
jo
jne
ret
out
mov
pop
xor
push
and
in
cmp
imul
ss
lock
cmp
sbb
hlt
and
pop
test
ret
int3
jbe
mov
inc
xchg
mov
dec
not
sbb
mov
adc
cmpsl
nop
and
inc
xchg
mov
dec
std
sbb
jno
pop
mov
sbb
mov
xchg
lret
inc
lret
inc
jecxz
mov
add
es
adc
inc
nop
mov
dec
mov
mov
jl
lret
mov
fwait
arpl
adc
das
mov
cmp
inc
mov
mov
sub
fdivrs
or
jmp
jb
lret
lods
cs
jl
aaa
mov
mov
push
fsubl
cwtl
test
sbb
jecxz
or
cmp
dec
imul
dec
push
cli
bound
xchg
pop
cmpb
mov
bnd
leave
stos
pop
sti
push
mov
xchg
loopne
orb
rcrl
sbb
xchg
repz
hlt
mov
jl
ds
std
jo
scas
or
insb
jbe
cld
dec
mov
in
jg
hlt
ret
cmc
rolb
sub
xchg
jne,pt
fistpll
loope
or
lahf
or
xchg
rorl
jb
outsl
es
or
lcall
lcall
arpl
cltd
jge
jg,pt
mov
aas
mov
push
jnp
pop
in
mov
xor
pusha
lods
xchg
cmpsb
test
jbe
insb
aam
jbe
jge
mov
loopne
les
sbb
jmp
adc
adc
gs
add
xor
pop
ds
push
pop
jne
jge
ud1
arpl
jmp
cli
pop
stos
push
nop
lds
push
jg
or
push
dec
jle
das
lret
xchg
inc
adc
or
jb
shll
and
push
mov
sbb
or
cmc
dec
lds
sub
popw
frstor
or
push
add
push
loop
cmpsl
sbb
mov
loope
neg
inc
sbb
mov
pop
aaa
daa
sarl
test
test
out
mov
push
mulb
or
mov
or
dec
in
cmpsl
aam
mov
mov
insb
inc
mov
inc
jae
and
sbb
nop
ljmp
and
mov
mov
sbb
rcrb
addr16
jbe
mov
push
inc
pop
out
pop
mov
pusha
dec
push
lods
cmc
sbb
daa
lock
push
xchg
dec
xchg
sub
leave
jb
repnz
add
xchg
push
sbb
mov
outsb
or
test
inc
push
lds
aam
dec
cmp
adc
ss
and
mov
jmp
loope
mov
inc
ficomps
loope
add
xor
mov
ret
xchg
notl
adc
xchg
dec
mov
sti
and
jecxz
xchg
push
mov
cmp
lret
push
sbb
add
insl
cs
sbb
add
mov
imul
jle
jp
sbb
ret
xchg
or
jl
inc
pop
loopne
aad
popa
mov
test
imul
in
and
sbb
push
jo
lahf
and
mov
ja
jmp
fstpl
je
push
xchg
jp
data16
inc
jmp
mov
lds
outsl
dec
cmpsl
push
dec
jo
sub
mov
mov
es
imul
fisubl
pusha
sub
add
popa
xchg
aad
fs
cmpsb
ret
mov
ss
or
fnstcw
clc
push
arpl
add
shll
flds
and
scas
and
subl
cmp
cltd
rep
vpsrad
and
cmp
in
inc
in
push
mov
push
fnstcw
rcrb
sbb
dec
push
rolb
jmp
sub
mov
movsb
sti
xor
shr
mov
bndldx
xor
push
mov
mov
lcall
mov
aad
addl
sub
push
sahf
out
pop
push
popa
xchg
into
ss
jnp
dec
push
jge
pop
cmp
fcomi
push
sbb
dec
mov
pop
cmpsb
jp
stc
rorl
mov
xchg
mov
pop
pop
imul
push
xor
popa
test
mov
jns
in
enter
pop
lods
jne
test
imul
test
movsb
push
mov
fldenv
mov
clc
jmp
loope
cltd
mov
cltd
dec
adc
push
push
dec
lcall
cmp
sbb
repz
fwait
add
dec
mov
movsb
push
pusha
mov
cmp
jne
stc
and
or
jmp
push
push
push
shlb
mov
in
mov
into
mov
lock
xor
in
push
xchg
cmpl
popa
stc
lea
and
rclb
ja
adc
inc
leave
jbe
pop
sub
sub
cmp
jbe
xchg
mov
dec
inc
int3
inc
call
sub
xor
adc
sti
rcr
out
sbbb
jnp
clc
movsb
jp
popa
jmp
and
fwait
test
add
mov
repz
rorb
enter
xchg
subl
push
add
xor
mov
inc
mov
dec
cli
fildll
or
dec
in
addb
pop
das
leave
xchg
data16
xchg
cli
add
mov
loope
mov
add
lahf
aas
pop
loop
jns
and
adcb
shll
ja
jge
cs
sbb
mov
cmp
push
push
xor
popf
xor
aaa
clc
stos
mov
mov
inc
add
cmp
movsl
push
stos
sub
dec
imul
outsb
add
das
add
cmc
xchg
jecxz
aam
insl
push
inc
scas
lds
insb
out
leave
adc
insb
in
or
dec
jmp
add
in
out
mov
cltd
mul
cmp
xlat
xchg
fsts
movsb
test
mov
in
jecxz
les
pop
test
adc
mov
cmp
xchg
inc
fldl
popa
aam
orb
scas
or
push
xor
and
loope
ret
das
outsb
xor
scas
shlb
mov
jmp
mov
scas
mov
pushf
mov
mov
mov
sbb
cwtl
idivb
jmp
in
ds
cmpsb
lahf
lret
stos
movsl
aad
pop
sarl
mov
push
test
repz
dec
aas
xchg
mov
mov
movsb
cmp
xor
dec
fisttpl
sbb
mov
sub
rolb
insl
sub
add
jae
inc
mov
les
mov
lret
push
and
sbb
insl
outsl
or
pop
aad
loopne
pop
std
sub
call
leave
repz
xchg
xchg
shlb
mov
mov
xor
xor
mov
in
addl
lods
mov
sbb
jnp
fs
sub
stos
ja
insb
adc
sub
sub
lret
pop
xchg
lods
mov
es
arpl
adc
iret
popa
mov
xchg
push
sub
push
int3
and
mov
push
and
repnz
ret
outsl
ds
cli
arpl
jae
pushf
dec
adc
ja
push
mov
adc
pop
repnz
jae
mov
xchg
das
xor
dec
jne
jbe
jge
std
in
mov
jbe
mov
ja
addl
fidivs
pop
and
out
adc
xor
pop
push
stos
pop
testl
shll
fadd
clc
sbb
popf
pop
ja
dec
inc
cs
xor
icebp
mov
das
and
mov
pop
push
xchg
mov
decl
loopne
xor
cmp
loop
fstpt
lcall
inc
jbe
push
jmp
cmpsl
mov
inc
out
nop
in
inc
aad
ljmp
xchg
rcll
into
inc
push
in
push
leave
push
or
rolb
mov
mov
and
mov
cmp
loop
lcall
mov
push
jmp
add
gs
add
sbb
push
inc
jbe
aam
inc
dec
jmp
int3
sti
rcrl
gs
mov
xor
mov
pop
adc
insl
push
fimuls
out
add
mov
rolb
sbb
mov
mov
iret
mov
test
cmc
xchg
mov
cmp
lods
xchg
sub
arpl
mov
pop
sub
push
xlat
lret
xchg
add
mov
inc
inc
adc
ljmp
fisubs
push
out
add
stos
into
in
xchg
pop
icebp
inc
jecxz
inc
adc
cs
cs
pop
scas
cmpsl
mov
cltd
aaa
jno
mov
sahf
iret
pop
cmp
fnstsw
pushf
inc
sbb
les
ljmp
xchg
shl
dec
lret
sbb
lds
data16
sub
setge
add
out
out
fwait
icebp
xchg
push
jb
jb
adc
cmp
mov
orl
outsl
push
ljmp
xchg
psrlw
mov
clc
inc
shlb
dec
pusha
es
cmp
ds
jne
subb
or
sbb
xchg
das
mov
sbb
sub
clc
data16
fnstcw
mov
sub
rorl
push
lock
push
fwait
lret
daa
xor
xchg
mov
mov
fisubrs
out
jo
sub
dec
push
mov
pushf
mov
fnsave
sbb
rorl
inc
push
mov
add
fisubrl
addr16
ret
fidivrs
enter
push
mov
adc
xchg
arpl
arpl
jae
xor
push
dec
pop
jnp
push
sub
or
ficoms
cltd
nop
mov
les
add
subb
push
cli
dec
hlt
jbe
out
loope
inc
mov
out
mov
jne
aam
inc
cld
and
out
jbe
push
fs
imull
dec
mov
xorb
mov
in
push
jmp
sbb
pop
jb
mov
outsb
insb
ds
popf
cmpsl
mov
mov
mov
sub
xchg
into
cld
ret
mov
test
orl
push
mov
push
mov
mov
pop
cwtl
stos
inc
jg
cmpsb
xor
mov
js
pop
das
sbb
cmp
mov
cmp
aas
lods
mov
mov
mov
push
cmpsl
mov
push
shlb
pop
cltd
into
mov
scas
dec
mov
in
in
push
in
loop
pop
test
test
mov
loope
stos
inc
cmc
cwtl
imul
xchg
inc
sbb
pop
and
pop
outsl
push
sahf
int
hlt
cmc
sbbb
xchg
inc
adc
cli
es
lods
ret
pusha
into
pop
outsl
mov
adc
sbb
add
movsl
sti
mov
mov
jo
mov
popa
xchg
jmp
es
setg
popa
jge,pt
sbb
push
and
rclb
dec
push
jno
aas
cmp
repnz
sub
pop
divb
adc
lcall
push
add
sbb
iret
test
dec
fs
mov
ds
sbb
sahf
xchg
ret
inc
sub
cltd
pop
mov
jo
or
in
jecxz
pop
or
call
fcmovne
pop
ret
adc
push
cmp
sub
mov
jnp
int3
rcll
pushf
add
inc
lahf
mov
pushf
add
jb
pop
movsl
js
inc
daa
xchg
sub
adc
jnp
xchg
cmp
pop
dec
sbb
cmovae
test
rcr
stc
and
rorb
bound
pop
test
addr16
out
lret
shr
or
lods
sbb
add
sbb
add
mov
push
cwtl
xchg
cmpsb
sbb
jno
out
jg
leave
shl
mov
call
addr16
les
pusha
mov
inc
lods
fsubs
addr16
mov
pushf
fwait
pop
stos
cli
adcb
xor
dec
jne
xchg
subb
clc
cmpsb
aam
xlat
shlb
pusha
ret
dec
outsb
out
jmp
or
ds
in
push
xchg
push
int3
mov
mov
dec
out
sub
sub
push
adc
mov
sahf
add
cmp
and
push
not
sub
loop
scas
fwait
mov
adc
in
pop
and
push
dec
lods
or
dec
adc
fbstp
into
xchg
adc
sbb
and
lcall
aad
add
popa
idivb
mov
add
test
cld
jns
mov
push
sub
mov
daa
mov
jecxz
sbb
ficoml
sbb
std
jae
cmp
clc
sub
addr16
sahf
sarl
outsl
mov
xchg
sbb
ds
loopne
lods
jmp
js
mull
test
add
cmove
mov
pusha
sub
or
add
adc
movsb
test
sub
lods
sub
inc
jle
mov
mov
lret
push
fcmovne
int
push
repnz
pop
ljmp
or
mov
xchg
add
xchg
daa
pop
mov
jno
dec
orl
insl
js
push
cmp
out
pop
cmpsb
sub
test
stos
movsb
xchg
pop
lods
pop
pushf
jmp
push
aaa
loop
outsl
sub
xor
and
loopne
mov
dec
cmpsl
cmp
xlat
fldl
jmp
add
lods
sub
pop
xchg
pop
or
loopne,pn
rol
gs
xor
push
dec
std
jae
out
les
xchg
sbb
mov
jae
cld
dec
sbb
test
cltd
hlt
jg
jns
jo
xor
sbb
adc
cmp
fwait
xor
mov
aad
jae
or
dec
jl
inc
mov
loop
mov
rcrl
int
cld
mov
icebp
dec
xchg
cld
into
mov
jnp
sti
adc
xor
flds
pop
pop
mov
movaps
cmp
cmp
mov
out
inc
outsb
lds
inc
mov
dec
js
sbb
loop
lret
pusha
xor
pop
das
in
sub
push
pop
sub
rcll
out
xchg
ret
and
and
sub
adc
jg
mul
fdivrl
pop
mov
xchg
jnp
mov
adc
add
push
adc
daa
mov
fstl
imul
test
out
adc
add
scas
mov
xchg
test
bound
fsubrs
xor
call
pop
out
xchg
cwtl
je
jl
fcompl
jmp
ss
popf
out
leave
dec
pusha
mov
mov
int3
and
rcll
popl
pop
dec
jns
pushf
sub
or
sahf
pop
ficoml
incb
inc
xchg
push
jmp
push
adcl
divb
lahf
and
aad
bound
push
cmp
lods
push
mov
adc
push
adc
aam
jecxz
sub
and
pop
lock
inc
pop
js
mov
jg
das
add
mov
data16
lock
out
mov
sbb
fstpl
dec
cmc
pusha
adc
jge
out
jnp
mov
pusha
xchg
fisubl
push
loopne
jnp
inc
add
les
xor
pop
xchg
inc
xor
xchg
sahf
ret
sbb
sub
inc
push
mov
cwtl
stc
fisubs
pop
push
pop
in
or
pop
jae
in
cmpsl
insb
xchg
sbb
mov
pop
fnstcw
bound
ror
push
stos
adc
ss
mov
in
stos
cmpsl
fstpl
mov
mov
xor
jmp
cmc
inc
add
sbb
inc
add
sub
addr16
addr16
and
fcom
movsb
pop
push
cld
pop
mov
insl
data16
sbb
push
bound
cmpsb
pop
inc
jle
adc
mov
sbb
push
push
insb
cmc
add
push
mov
mov
mov
jge
cli
daa
inc
roll
lret
testb
pop
add
push
jno
xchg
dec
sbb
pop
in
ret
mov
xchg
or
xchg
lock
mov
adc
adc
std
mov
pop
mov
sahf
fsts
aad
mov
pop
incb
or
mov
adc
jno
sbb
fwait
push
or
sub
pop
fwait
cmova
jle
or
cmpsl
cmc
scas
bnd
sbb
les
pop
push
push
or
pop
xchg
shlb
ja
imul
test
ss
stos
repnz
iret
in
dec
fdivrl
scas
pop
dec
hlt
push
add
iret
js
push
vmread
mov
adc
movsl
arpl
jecxz
addr16
lahf
jno
outsb
nop
pop
sub
jne
imul
fdiv
dec
jmp
push
jl
test
mov
movsl
in
inc
imul
inc
jg
push
cmp
mov
cmp
repz
mov
ds
mov
out
ret
lock
jo
lea
ss
das
mov
cmp
fldt
sti
jg
xor
test
and
xor
mov
push
lods
xchg
arpl
fs
xchg
cmp
out
mov
sub
rorb
bound
idivb
mov
xor
rorl
sbb
push
add
or
inc
xorb
addb
loope
or
hlt
icebp
enter
loop
fcmovb
xchg
mov
cli
push
into
pop
pop
xor
loope
push
and
and
mov
gs
shll
sbb
inc
push
sbb
and
andb
jg
lea
inc
fisubs
push
or
mov
push
jecxz
sti
mov
pop
adc
jno
hlt
sti
mov
mov
jb
push
mov
and
mov
or
repz
add
mov
sub
mov
xor
out
jmp
cmp
cmp
lods
movsl
bound
mov
loope
enter
std
and
fwait
arpl
mov
rcrl
cli
dec
jecxz
pop
dec
add
inc
fiaddl
mov
rcrl
mov
outsb
cltd
es
cmp
test
out
push
sbb
loope
adc
dec
in
jle
inc
dec
sbb
ficomps
pop
lods
inc
inc
cmc
syscall
mov
into
jb
mov
addr16
jns
fistpll
movl
mov
xchg
jecxz
jp
add
sbbl
push
mov
scas
push
xchg
sub
mov
adc
dec
aam
das
dec
xchg
mov
xchg
imul
cmpsl
xchg
push
xor
push
mov
popa
sti
cmp
rorb
jecxz
add
movsb
std
mov
outsl
lcall
mov
js
sub
or
aam
push
xor
shlb
cld
out
mov
sub
out
cmp
or
xchg
mov
insb
jmp
jl
dec
out
jg
mov
inc
rcrb
ds
out
mov
xor
pop
fisubrs
iret
mov
xorl
dec
sbb
pop
ret
fildll
push
mov
in
mov
pop
lret
dec
out
and
shrb
lahf
insb
sub
in
jge
xor
pop
shll
fidivl
mov
jns
shlb
jmp
das
pop
jbe
dec
add
int
add
les
in
push
push
adc
ss
or
ja
inc
inc
movsb
enter
xchg
jmp
jge
push
dec
int
movsb
jb
lock
je
add
fstpt
in
mov
sub
jl
jne
adc
sub
lods
rcrb
jno
xchg
xchg
mov
gs
js
jno
rclb
jno
dec
mov
ss
fisubl
mov
pop
lea
jecxz
sub
outsl
int
xchg
dec
mov
push
dec
inc
test
jo
in
mov
xchg
xor
test
xor
xlat
cmc
movsb
jl
aam
xchg
imul
cld
inc
sbb
sbb
clc
jo
js
gs
xchg
pop
fwait
adc
into
push
jg
sub
sub
pop
or
or
pop
fsts
push
dec
or
lcall
lods
jo
cmp
scas
cmpl
ror
cli
loope
mov
jmp
dec
xchg
adc
fs
loopne
popa
or
jnp
add
dec
js
xor
add
inc
push
mov
insl
pop
add
mov
in
in
hlt
std
dec
dec
or
pop
sti
dec
shl
push
inc
sarl
fs
mov
test
mull
loope
popa
inc
push
sub
shrb
cmpsl
lods
xor
dec
inc
loop
nopl
add
push
sbb
sahf
loop
cli
xchg
cmp
or
inc
loop
insb
mov
aas
jno
gs
aad
dec
lock
jne
push
gs
inc
lds
jae
cmp
mov
lcall
scas
xor
jl
and
mov
inc
cmp
sbb
dec
je
inc
cld
lea
fisttps
dec
xorl
out
jns
jl
movsl
pop
ljmp
aad
in
fisubs
mov
sub
repz
rcrb
dec
mov
mov
enter
mov
cld
push
pop
andl
fcomi
ljmp
sbbb
xchg
enter
test
rorl
or
xchg
idivb
adc
mov
mov
shrl
xor
cli
ja
roll
or
cmp
xor
cmc
mov
pop
mov
cmpsb
pushf
cmp
sub
nop
mov
jno
adc
movb
mov
mov
push
mov
add
push
cmp
inc
in
in
sbb
adc
mov
and
push
push
sub
test
jbe
aaa
cmp
mov
inc
cwtl
ds
mov
push
insb
xchg
mov
lcall
fdivl
xlat
repz
dec
dec
add
stos
sub
call
lret
rorb
xor
ret
xchg
push
scas
insb
jb
mov
movsl
fisubs
fstl
mov
xor
inc
sbb
in
inc
fisubrl
sbb
adc
mov
jmp
call
xchg
fisttps
cltd
sub
or
into
mov
mov
inc
lcall
fisubrl
outsl
xchg
in
nop
inc
into
ss
push
pop
insb
aad
or
mov
xchg
add
jo
movsb
inc
addb
mov
fldt
xor
sub
int3
test
popf
inc
lock
aam
dec
aad
out
inc
mov
addb
or
notl
push
clts
xchg
xor
in
inc
mov
paddsb
pop
xchg
push
negb
nop
adc
mov
jne
mov
dec
pop
lret
int
and
mov
inc
or
setno
cmp
ds
pop
adc
xor
hlt
mov
push
dec
jecxz
mov
stc
stos
aaa
es
movsw
xor
ljmp
or
loopne
out
or
je
jno
and
xchg
es
sahf
dec
pop
mov
sbb
xchg
mov
pop
xchg
jbe
xchg
jg
jmp
pop
ljmp
lahf
mov
push
shl
xchg
test
jno
jmp
mov
enter
daa
mov
divl
jae
jae
jp
stos
xchg
in
dec
stos
adc
subl
add
inc
pop
adc
in
aas
subl
sahf
leave
int
in
outsb
push
adc
pusha
mov
pop
sbb
jne
lcall
mov
sub
shlb
fdivrp
sbb
dec
es
pop
dec
sarl
cmp
call
sub
or
sbb
lcall
add
lahf
xchg
scas
mov
inc
scas
dec
adc
test
stos
std
xor
jns,pn
xchg
shl
xor
push
clc
enter
mov
jns
insb
pop
xchg
iret
bound
stc
es
cmp
xor
and
in
movsb
or
outsb
dec
in
insb
or
add
movsb
call
cmpsl
add
pop
inc
dec
mov
in
mov
shll
fs
xchg
test
mov
and
cmp
cmp
jae
insb
inc
and
mov
dec
data16
inc
js
dec
ret
insb
insb
fisttpll
dec
mov
add
rcr
mov
cmp
push
inc
sbb
sbb
jecxz
dec
xchg
xor
jno
repz
mov
xor
movsbl
ret
jns
gs
inc
lret
adc
arpl
dec
or
loope
dec
jmp
jmp
adc
aam
flds
imul
imul
cmpsl
adc
pop
adc
add
xchg
cmp
mov
iret
test
out
mov
inc
pop
shl
cmp
aaa
xor
adc
stos
stos
push
mov
ds
jne
bound
iret
into
and
jbe
faddp
scas
fcomps
imul
ror
lods
jle
cltd
or
sbb
mov
xchg
jno
inc
pop
je
pop
ret
into
or
sbb
ja
testb
fisttpll
fwait
outsl
xchg
jae
and
mov
inc
shlb
je
incl
pop
sbb
xchg
adc
adc
mov
add
lods
dec
data16
and
cwtl
add
xor
sub
push
inc
pop
adc
bound
add
loop
mov
pop
or
lcall
jmp
ficompl
sbb
xor
or
shll
xlat
jae
mov
outsl
mov
stos
mov
addr16
dec
out
or
lds
ljmp
imul
xchg
cld
clc
jle
dec
xchg
rcl
or
lock
addr16
loope
bound
xchg
in
rorb
mov
cld
popa
jb
je
dec
out
pop
jle
aam
aas
pushf
sarb
in
and
pushf
dec
out
or
xor
xchg
out
add
mov
ljmp
and
rorb
xor
xor
xlat
or
jbe
loope
loope
adc
cwtl
sub
mov
sbb
cli
sbb
in
imul
sbb
sbb
ljmp
insl
sbb
mov
les
imul
fidivs
sub
fwait
je
push
sub
imul
push
or
mov
fmull
push
rcrb
push
jne
dec
fmul
jge
daa
xchg
push
xor
add
sbb
lcall
lock
pop
pushf
rol
mov
push
mov
push
jae
mov
lea
jne
inc
fisttpll
mov
rcrl
fnstsw
mov
sub
test
xor
mov
clc
fnstcw
xchg
pop
xor
jne
push
and
jbe
mov
xlat
shlb
cli
stos
rorl
jmp
mov
flds
ja
loopne
xor
push
sub
push
cmp
push
cmp
add
push
fcomps
mov
fbstp
fsts
sub
jno
push
inc
sbb
test
push
stos
aad
pop
sbb
sub
enter
insl
lahf
comiss
mov
shr
push
push
xchg
pop
jle
pop
mov
andb
push
repnz
push
cwtl
xor
repz
in
jo
mov
movsb
mov
sub
sub
xor
jle
sub
fidivrl
mov
ja
push
mov
lahf
mov
jmp
sbb
inc
dec
cmpsb
dec
and
movsb
push
xor
mulb
in
push
scas
dec
pop
adc
jae
arpl
mov
icebp
test
sbb
andb
cmpb
sub
out
push
adc
rcrb
popa
push
adc
xor
ud0
andb
bound
mov
push
add
jb
leave
roll
popa
mov
or
inc
aaa
lds
lea
sub
adc
pop
rcl
mov
pushf
xchg
xchg
arpl
scas
out
sbb
jp
insb
bswap
ja
cmp
in
jl
dec
dec
aam
sub
pushf
or
add
xor
pop
mov
mov
pop
inc
sub
les
cld
add
in
fdivr
gs
ds
and
clc
dec
out
popf
in
ja
adc
xor
outsb
pop
int
loop
stos
dec
mov
fwait
sub
xor
xor
jecxz
sub
imulb
insl
std
pop
std
in
or
sbb
das
das
leave
insl
cmc
sti
jmp
inc
or
jns
ss
xor
subb
dec
pop
je
in
xor
mov
cmpb
stos
pop
mov
xchg
std
or
mov
mov
mov
loope
jae
gs
inc
out
lods
sbb
jbe
inc
xor
aad
outsl
outsl
in
lret
sti
ret
sub
push
xchg
rcrl
loop
imull
cld
jg
add
addl
push
lcall
push
leave
xchg
ljmp
dec
sbb
addr16
jno,pn
adc
adc
les
test
mov
xor
es
push
aam
or
inc
dec
cmc
imul
mov
aaa
mov
stos
mov
test
rcl
adc
cmp
adc
outsb
adcb
xchg
call
fldt
in
or
adc
xchg
clc
cmp
test
inc
data16
pop
xor
pop
sub
mov
or
xor
mov
cmp
out
icebp
cmp
sub
inc
dec
rolb
shlb
fwait
mov
stc
push
scas
push
jmp
fistpl
jne
push
inc
mov
inc
ficoml
in
mov
test
mov
inc
mov
ret
mov
fbld
inc
ja,pn
cmpsb
add
ror
mov
pop
ss
int3
inc
leave
or
stos
sub
pop
faddp
add
stc
lahf
dec
stos
mov
fcomps
xor
int3
std
inc
xchg
adc
inc
cmpsl
ja
les
jp
lea
js
int
add
fidivs
inc
add
add
stc
sub
faddl
das
out
jmp
cmp
sbb
jbe
adc
icebp
sub
ja
sbb
xorl
push
test
mov
pusha
push
test
push
div
jecxz
push
xor
repnz
mov
cmp
ficomps
sbb
pop
insb
movsl
cmp
mov
outsl
mov
xchg
pop
stos
xchg
loope
xchg
pop
fcomps
jnp
nop
xchg
popa
setge
and
imul
jae
xchg
arpl
cmp
cmpsl
popa
mov
loopne
xchg
bound
jp
insl
fisubl
data16
cmpl
loopne
arpl
inc
shll
push
arpl
cs
xchg
sub
fldcw
jge
sub
xor
pop
add
out
fdivr
sbb
in
idivb
pop
roll
movsl
cmp
hlt
enter
les
jge
jae
inc
pop
rol
pop
mov
sbb
and
mov
leave
int3
loope
or
xchg
popf
arpl
xor
aaa
clc
popa
data16
add
pop
popa
lods
mov
mov
pop
mov
lds
mov
out
rcrl
cmp
pop
les
adc
jbe
jp
insb
fdivs
inc
push
xor
inc
out
mov
sar
cld
test
rol
or
push
sub
in
fsubrp
out
loope
ror
sub
in
jecxz
cli
into
iret
daa
ja
dec
mov
jbe
jb
mov
pop
scas
loope
jne
testl
out
insb
or
arpl
out
repz
test
dec
xchg
popw
lds
pop
out
filds
cmp
cmp
mov
pop
lods
ret
cltd
sub
js
lret
jae
sbb
loop
mov
and
orb
mov
ds
outsb
out
fimuls
adc
cli
je
ljmp
ss
dec
test
pop
mov
push
js
and
mov
ret
jo
fwait
mov
nop
jae
es
push
mov
mov
imul
jns
mov
sarl
insl
repz
xor
rcrl
or
jmp
aad
add
in
lods
xchg
add
lcall
mov
jns
test
adc
shlb
inc
imul
aam
outsb
loopne
mov
xor
cmp
sub
shrb
mov
loop
xor
lea
cmp
aas
fidivrs
mov
adc
imul
movsl
out
push
jnp
push
and
lock
enter
lret
inc
test
jge
jns
cmpsl
into
pop
adc
pop
inc
lea
iret
movsl
xor
out
lods
inc
mov
jae
stc
jecxz
fidivs
pushl
gs
push
and
lcall
jp
mov
dec
movsl
stc
ljmp
fildl
sahf
cmpsb
out
ret
sbb
jl
lret
dec
xor
sbb
daa
and
add
cmpl
call
sahf
cld
xchg
stos
jl
rclb
cltd
push
mov
aas
test
pop
orb
popf
subl
pop
insl
lret
jg
push
sbb
pop
test
pop
jns
rolb
leave
mov
cmpl
jmp
mov
xchg
loop
and
loope
inc
es
lock
xor
sbb
icebp
cs
push
lock
lea
push
inc
xor
repnz
inc
pop
int3
jge
mov
xor
pop
jecxz
int3
sbb
pop
int3
leave
jo
lds
out
jmp
inc
in
jecxz
jecxz,pn
xlat
inc
insl
mov
je
or
inc
dec
sub
mov
out
testb
and
pop
fsubl
adc
cmpl
popa
fs
mov
lret
out
and
xchg
sahf
jae
or
rcrl
stos
jno
iret
popf
cld
adc
or
js
fwait
les
ds
mov
in
xor
jp
and
jmp
adc
out
mov
sub
xlat
mov
lea
and
and
je
sbb
dec
push
cmpsb
in
lret
or
ljmp
addr16
call
mov
cmp
mov
add
mov
movsl
xchg
loop
and
lahf
data16
lret
test
xchg
rclb
xor
cltd
jno
mov
mov
push
sub
dec
push
jmp
pop
push
loopne
or
xchg
cmp
pop
jnp
jmp
imul
imull
inc
mov
push
mov
ret
mov
je
aad
sub
je
outsb
cs
into
cli
jp
cmp
fdiv
cmp
xchg
dec
imulb
inc
push
fcmovnbe
or
sbb
test
mov
stos
push
jle
mov
popa
jo
and
mov
mov
inc
xchg
jg
mov
push
fwait
lds
jns
jb
cmp
sub
push
jno
inc
lock
jecxz
pop
pusha
xor
push
aam
cmpsl
cli
pushf
addl
xchg
loopne
test
mov
cmpsb
lea
nop
inc
cmp
stc
mov
aas
sub
lret
push
adcb
imul
lock
js
push
pop
adc
or
inc
inc
mov
jae
and
adc
mov
movsb
das
mov
or
imul
negl
pusha
int
xor
lahf
in
mov
lea
mov
lcall
mov
out
scas
loop
mov
aad
xor
cmp
xor
mov
mov
in
fsubp
mov
inc
in
pushf
insb
mov
mov
ljmp
xor
lods
inc
jne
add
jno
lea
dec
push
mov
arpl
pop
mov
and
and
add
xchg
jg
jmp
clc
shr
cwtl
jmp
and
test
bound
pusha
ret
fistpll
lahf
or
fstps
lret
bound
push
xor
adc
sti
dec
ja
outsb
push
les
bound
ja
insb
sub
cmpsb
or
push
xor
sub
js
push
xchg
mov
fmull
sti
sub
adc
inc
mov
outsl
in
mov
and
xlat
sti
xchg
lock
mov
push
divl
cmp
cmp
push
push
por
inc
clc
loopne
jne
aas
repnz
or
sub
sbb
repz
sub
dec
pop
xchg
out
loopne
xchg
lret
stos
sahf
or
pop
in
stos
fsubs
jmp
cmpsl
inc
imul
xchg
mov
mov
sub
or
xor
adc
sbb
jl
sbb
jge
stos
repz
fcmovnu
inc
pop
lcall
fwait
jbe
call
or
sub
push
in
divb
sub
inc
jmp
dec
pusha
pop
mov
cld
sub
jb
icebp
pusha
stos
add
mov
out
xchg
mov
mov
jle
out
xor
aas
xlat
lcall
jno
pop
sbb
sti
xor
inc
xor
adc
dec
or
daa
jae
pop
movsb
outsb
cmp
es
and
sub
dec
in
imul
dec
or
pop
pushf
in
outsl
frstor
xchg
jge
lret
les
shrb
popa
cmp
mov
xchg
orl
fildll
cmp
ss
mov
fnstsw
repz
xchg
fwait
pop
mov
inc
adc
add
pusha
mov
mov
dec
lds
xor
cmc
dec
xor
lret
movsl
pop
jb
mov
add
sbbl
js
enter
and
pusha
mov
xchg
aam
out
xchg
mov
mov
cmp
cli
adc
pop
or
in
and
mov
pop
sub
inc
or
cld
subl
inc
cmc
jne
lea
jle
dec
fs
sub
sti
sar
inc
mov
inc
mov
mov
movsb
idiv
js
dec
outsb
ds
stc
aaa
fldt
cmp
add
lret
pop
out
out
xchg
roll
jno
add
pop
dec
jl
fisubrl
jb
xchg
mov
lret
rcrl
or
pop
add
lea
ljmp
mov
sbb
gs
mov
pop
lock
loopne
mov
xor
mov
push
lahf
sub
outsb
add
aad
mov
mov
pop
iret
inc
add
jae
imul
and
aas
add
out
inc
movsl
inc
mov
mov
imul
mov
cmp
vunpcklps
jno
and
and
cltd
inc
cmp
testl
in
iret
shll
mov
mov
imul
pop
push
test
dec
cmpsl
roll
pop
fwait
mov
bound
shrb
dec
mov
xchg
and
shrb
mov
mov
push
mov
cltd
add
aad
xlat
mov
dec
mov
xchg
les
jl
mov
stc
xchg
adc
push
cmp
aam
jl
or
inc
add
mov
fcomp
pop
movsb
sub
clc
and
xchg
sbb
ds
inc
lods
scas
mov
jmp
aas
xor
sub
sbb
cmc
sahf
out
adc
sbb
sahf
aas
iret
in
pop
hlt
lret
push
or
xor
iret
adc
xchg
ret
arpl
aam
ret
mov
xchg
lcall
rcll
sub
jne
xor
mov
pop
mov
stc
add
mov
pusha
fs
inc
and
es
xor
dec
mov
popa
js
lods
xchg
loope
add
repnz
int
and
out
xor
xchg
xor
enter
dec
std
and
ret
pop
imul
jne
mov
in
sbb
arpl
sbb
xchg
out
xor
iret
je
sti
out
cmp
xchg
sub
popf
cltd
mov
cmp
add
roll
adc
rcrb
mov
mov
mov
and
fimuls
jp
push
mov
push
dec
cmp
mov
daa
or
cld
sub
jp
lds
movb
jne
sub
dec
jl
out
xchg
cli
pop
add
xchg
cmp
js
loop
cmc
ret
arpl
aam
mov
pop
jns
popa
es
mov
pushf
out
cmp
insl
dec
es
loopne
lret
xchg
pop
xor
cltd
fnstcw
stos
les
enter
fwait
outsl
es
push
adc
mov
xchg
cmp
fistpll
mov
xchg
ret
mov
pusha
scas
ffreep
ficoml
mov
mov
or
aam
xchg
ljmp
out
dec
mov
pushf
push
cmp
int3
xchg
fdivrl
cmpsl
test
icebp
xchg
xchg
call
mov
lret
dec
sub
cmp
stos
in
int
pusha
jne
and
or
mov
rcl
mov
sahf
repnz
cwtl
add
loop
mov
cmp
sub
pop
or
in
daa
mov
pop
adc
loope
movsb
lret
lds
sub
add
movsl
push
cmpb
jg
sbb
scas
push
xor
nop
push
test
mov
js
shrb
mov
hlt
jb
mov
mov
lock
inc
mulb
or
dec
add
cmpsl
movsb
sbb
pop
hlt
mov
or
cmpsl
sub
in
outsb
add
and
dec
cmc
daa
dec
push
xor
cli
jge
push
sbb
mov
sub
popf
mov
add
test
jo
cwtl
mov
jne
xor
int3
adc
outsl
pop
fwait
test
push
rcrl
js
jmp
leave
nop
push
ljmp
imul
ficompl
ds
in
push
add
xor
hlt
rcrl
push
pop
xchg
mov
loope
ja
dec
jle
movsb
xor
xorb
rolb
je
cwtl
mov
xchg
or
push
inc
lock
xlat
rcrl
jno
ljmp
js
mov
mov
ja
adc
outsb
je
inc
sbb
enter
jp
das
adc
outsl
popf
sarl
cmp
fs
imul
repnz
sbb
ret
dec
sbbb
xorl
imul
push
jbe
or
add
addr16
fisubl
fwait
inc
jp
cmp
add
stos
dec
inc
push
xor
inc
dec
jecxz
sbb
lahf
inc
lret
movsl
jmp
fstpl
lods
push
sbb
aaa
ret
or
mov
mov
mov
daa
lcall
imul
ret
out
and
mov
xchg
sbb
xchg
dec
dec
cmp
and
xor
push
or
push
and
mov
jmp
loop
add
pop
mov
aas
xchg
shll
je
mov
lods
xor
adc
testb
aam
btc
or
call
sahf
cmp
fs
inc
jae
mov
push
sti
bound
add
sbb
cmp
les
dec
in
dec
add
dec
cmp
je
je
scas
mov
xor
leave
aas
cmpl
xchg
cli
movsl
or
popa
bound
test
jmp
xchg
ds
rorl
xchg
xchg
iret
push
cmp
xchg
mov
fisubl
ret
popf
sub
scas
or
fistps
or
sbb
sbb
xor
cwtl
sbb
mov
dec
cmp
outsl
cwtl
nop
cmp
mov
pop
bound
or
sub
daa
jbe
inc
inc
out
push
aad
or
pop
or
fidivs
cmpsb
fildll
or
inc
mov
xor
jnp
stc
in
cs
cmp
push
pop
scas
inc
cmovno
mov
or
jnp
je
imul
shl
out
int
add
sub
adc
popf
jle
mov
xor
adc
xchg
inc
loopne
icebp
pop
stos
lods
mov
xor
sub
xor
xchg
loope
push
xchg
jae
xor
test
mov
rolb
ljmp
adc
mov
mov
mull
push
fildl
dec
xchg
icebp
pop
sahf
pop
cmc
test
add
mov
pushf
or
fcomps
push
xchg
insl
mov
push
lods
cs
cmp
pop
fiadds
xchg
sub
daa
data16
push
dec
push
into
outsb
inc
or
enter
aad
mov
inc
outsl
xor
cli
sub
in
sub
mov
scas
add
xor
enter
rep
xor
jbe
jl
jns
mov
test
int
jg
add
mov
jle
xchg
mov
mov
inc
mov
jecxz
mov
xchg
ljmp
icebp
inc
xchg
inc
test
jb
or
enter
jl
xlat
pop
cltd
js
and
bound
push
inc
aam
fsubp
adc
jb
fstpt
pop
ret
mov
lods
add
lds
pop
xchg
cmc
inc
jae
sbb
test
and
aam
pop
jne
push
dec
out
push
in
lret
adc
lods
cli
stos
popa
dec
jae
sti
dec
add
or
lock
je
adc
out
xor
xchg
mov
aas
out
in
lret
js
bound
andl
or
call
ja
imul
dec
call
jmp
pop
adc
xchg
xor
xchg
aad
cmp
scas
mov
mull
js
repnz
loopne
pop
out
fisttps
in
fisubs
jnp
iret
lret
fwait
mov
ss
push
mulb
fistpll
je
sub
inc
mov
fisttpl
mov
cltd
jmp
cmpb
add
std
jo
push
pop
sahf
addr16
mov
xor
push
mov
fnstcw
sbb
call
xor
xchg
in
xchg
mov
int3
icebp
leave
xchg
into
cmp
dec
repz
sti
or
sub
cmp
jl
adc
ret
iret
or
xchg
or
aad
jp
pop
lret
cmp
xchg
push
dec
test
out
in
dec
sub
scas
cmp
cmp
add
fs
push
jmp
orb
inc
les
pop
pop
lahf
test
pop
mov
lret
fistpll
push
inc
mov
shrl
mov
data16
aas
sti
sbb
pushf
fsin
or
out
pop
ljmp
fsubs
jle
push
push
jge
sub
cld
and
daa
cwtl
int
jb
fiaddl
scas
dec
cmp
inc
lds
out
push
or
jg
bound
lea
xlat
cmp
push
or
add
mov
push
sbb
sub
in
and
xchg
and
notb
lock
add
cmp
push
adc
sti
mov
out
call
popf
popl
dec
jle
in
pop
xchg
push
stos
adc
ret
mov
scas
mov
cmp
add
dec
imul
fistps
lahf
add
xchg
in
cwtl
push
xor
xchg
sub
and
lcall
repz
stos
out
popa
sub
cmp
add
jbe
mov
ds
popl
js
gs
cmpl
outsl
in
mov
out
inc
sahf
rcrb
jno
xor
jno
pop
int3
push
adc
or
stos
movsb
mov
dec
jmp
daa
pop
mov
xorb
loope
xchg
xchg
sahf
mov
sbb
sbb
dec
cmc
xor
push
stos
and
gs
lahf
mov
xchg
inc
mov
mov
jecxz
imul
mov
jmp
cs
add
dec
adc
push
cmp
cmp
into
adc
xchg
add
std
cmpsb
dec
add
sub
nop
ljmp
push
push
andl
mov
outsb
rcll
shlb
rorb
push
xor
andl
movsb
repz
cmp
dec
sarl
jmp
lds
xor
jl
push
mov
int
cld
je
mov
jmp
and
cmc
or
adc
mov
lods
jmp
jb
lea
mov
out
mov
dec
loope
ss
cmp
imul
lea
xlat
insb
ljmp
dec
scas
jl
adc
in
and
in
jmp
cmc
dec
xor
ret
mov
jl
dec
or
mov
dec
inc
add
inc
imul
in
mov
arpl
add
jo
cmc
dec
repz
cmpsb
rcr
popa
popl
push
int3
sahf
insl
mov
int
bound
xchg
jl
jge
xchg
subl
lret
cld
add
cs
or
movsl
cmp
in
test
push
ja
dec
adc
out
aam
cmpsb
xchg
addl
pop
sbb
sti
dec
push
ljmp
testb
adc
rolb
pop
sti
insb
add
or
inc
push
and
nop
scas
dec
xor
leave
pop
lret
xchg
sub
xchg
scas
mov
jle
mov
xchg
loop
jbe
ja
pop
lock
fld
mov
clc
cmp
lcall
adc
out
push
outsb
cmp
mov
repz
push
ss
xlat
mov
cmp
jge
test
pop
decb
in
add
add
push
into
cmpsb
je
stos
cmp
pop
aaa
out
and
repnz
xchg
inc
or
sbb
cmp
fisttpl
mov
shll
mov
into
pushf
xchg
mov
sbbb
push
lret
mov
fimull
adc
or
pusha
loopne
and
or
xlat
sbb
loop
pop
in
lcall
adc
inc
jne
push
mov
cmpsl
sbb
pop
test
adc
stos
or
cmp
insb
lret
add
adc
cmp
aad
and
cmp
inc
xor
stos
inc
lds
mov
dec
hlt
mov
lods
and
push
mov
mov
shlb
cmp
or
outsl
mov
add
rclb
sbb
xchg
push
push
pop
xchg
dec
and
cmc
sub
scas
cmp
add
pop
pop
and
cltd
call
in
xchg
mov
outsl
push
mov
fcom
jmp
cmp
enter
stos
sub
int3
insl
stos
or
cmpsb
jne
pop
push
in
pop
add
sub
mov
fsub
and
data16
cmpsl
mov
movsl
fisubrl
into
lret
cmp
jb
leave
jae
lret
stc
mov
xor
sub
std
stos
push
movsl
insl
sub
pop
push
mov
pop
pop
movsb
imulb
imul
mov
jg
xor
mov
mov
push
das
xor
mov
in
mov
jl
jno
lcall
push
nop
dec
lods
fiaddl
stos
in
popf
push
jl
push
xchg
jo
in
push
xor
lea
rclb
test
mov
out
psllq
pop
or
mov
mov
sbbb
xchg
push
mov
out
push
ficomps
mov
loopne
test
stc
fwait
nop
cmp
testl
dec
sbb
mov
subl
mov
jo
push
sbb
aam
pop
lods
xor
outsl
sarl
adc
mov
sbb
xchg
mov
add
sbb
fdivrs
or
and
sub
outsb
xchg
mov
sahf
mov
jg
xchg
les
repz
adc
shrb
xchg
outsl
inc
xchg
stc
or
push
insl
push
inc
scas
scas
mov
and
inc
scas
cli
clc
inc
cmpsb
das
into
stc
or
jns
pop
cmpsl
jno
cmpsl
daa
movsb
pop
adc
repz
push
or
xchg
in
push
or
shl
cs
insl
xor
pop
jbe
pop
inc
fists
rol
test
xchg
lds
sbb
pop
in
enter
xchg
imul
shl
cld
adc
xchg
das
xchg
int3
rorl
push
jo
pusha
mov
xchg
sbb
pop
ja
dec
movsb
fcom
dec
aam
dec
cmpsl
mov
mov
xor
xchg
loopne
int3
mov
adc
lcall
fisubs
fs
mov
fidivrs
pop
lods
std
jne
mov
daa
sbb
jmp
mov
pop
pop
stc
mov
in
fcomip
and
sub
ljmp
roll
lock
dec
mov
jp
insl
mov
mov
scas
add
cmpsb
aas
add
daa
lock
cmpsb
in
mov
push
or
daa
insl
push
cmp
jg
fwait
arpl
xchg
into
nop
mov
aas
fidivl
test
dec
aad
add
nop
and
cmp
aam
enter
lods
mov
mov
mov
ss
cld
cs
sbb
jb
jae
aas
xchg
push
pop
loop
scas
outsb
adc
arpl
das
aad
adc
mov
lods
jp
in
stos
adcb
sbb
push
cmc
roll
data16
popa
js
and
icebp
adc
sub
push
fldcw
jecxz
icebp
lret
add
pop
xchg
int
push
add
cmp
add
jp
cmc
daa
out
mov
mov
sub
add
inc
in
xchg
in
pop
loope
dec
add
insl
shll
imul
jmp
sbb
adc
push
push
xchg
jp
lods
jno
push
pop
es
jo
adc
add
shl
push
cmpsb
popa
movsb
push
lock
push
push
rcrl
cld
push
lock
test
mov
or
or
jge
mov
rcrl
iret
mov
and
or
imul
inc
lss
xchg
mov
int3
mov
vmptrld
int
sub
inc
jb
jbe
pop
xlat
mov
push
xor
xor
sbb
lea
mov
mov
fcmovb
inc
xor
popa
mov
jecxz
gs
xorb
sti
fcoml
jo
aam
fwait
adc
adc
mov
push
ljmp
cmp
daa
fisttpl
pop
subb
mov
or
call
push
mov
lret
push
cli
insb
test
and
pop
push
cmp
cmpsb
aas
mov
das
cs
ret
outsb
jecxz
test
das
xchg
lods
test
stos
mov
aam
ret
pop
dec
mov
dec
adc
das
nop
xchg
mov
pop
pop
mov
push
leave
ljmp
mov
xchg
jo
push
clc
imul
jno
jo
movsb
movsb
mov
fstps
add
jle
test
cmc
sbb
mov
inc
mov
rol
sub
out
lcall
push
cmp
xchg
inc
jo
xchg
dec
xlat
push
push
adc
insb
in
fsubl
popa
pop
cwtl
jl
push
fs
test
dec
mov
pop
dec
push
lock
cld
cmp
and
ja
js
es
mov
cmc
ljmp
cmp
xlat
jge
es
shll
aad
movsb
sbb
lock
inc
scas
or
xor
cmp
fstp
cltd
mov
mov
popf
dec
sti
fidivrl
xor
push
sbbl
adc
scas
lea
rclb
add
mov
test
rcrl
mov
mov
wrmsr
cltd
scas
push
inc
cmp
pop
call
lods
jl
mov
push
pusha
push
popa
jb
jecxz
je
mov
sbb
ret
in
cmp
mov
mov
in
or
or
rolb
vpshuflw
aad
shll
pushf
lret
sbb
lcall
sbb
data16
lret
push
in
cli
lahf
mov
dec
cmpsb
adc
pop
xchg
dec
pop
sbb
andb
fmull
mov
xor
mov
mov
js
sub
ret
dec
shlb
add
mov
mov
jge
xor
les
fimull
lods
aad
mov
stc
hlt
cmc
das
sub
push
lret
rclb
repnz
jno
enter
testl
lahf
in
or
loope
dec
test
in
push
mov
loopne
push
test
fwait
lock
pusha
fucomp
loop
rcrl
adc
lds
and
cwtl
cmp
jae
jle
xor
jnp
sbb
jno
incl
mov
cmp
lds
ds
sbb
fisubs
repnz
jmp
nop
add
ret
mov
jmp
pop
add
loop
xchg
mov
cmc
jp
arpl
cld
sbb
pop
cmp
scas
adc
pusha
dec
add
push
daa
sbb
cs
sub
jg
cmp
repnz
jmp
sub
or
pop
push
cmpb
or
out
mov
mov
cmp
rolb
psubusw
cmp
mov
in
mov
sub
andl
out
mov
test
lods
mov
cltd
dec
mov
popf
adc
adcb
push
sbb
inc
mov
dec
rorb
insb
pop
dec
mov
lds
fstps
test
shr
push
cmp
mov
dec
fsub
mov
jae
xor
test
ljmp
xchg
cmp
adc
sub
mov
sub
and
jge
addr16
pop
leave
add
xchg
and
xchg
sbb
jb
out
sbb
or
cs
cmpsb
sub
movsl
push
jmp
test
loopne
daa
imul
inc
jge
std
sbb
dec
sti
adc
out
emms
lods
test
je
push
push
test
inc
or
mov
pop
subb
add
jbe
loopne
les
push
lds
ret
push
cmpsl
and
sbb
loope
in
sub
fnstsw
push
push
cmc
cmp
loope
dec
pop
and
inc
fnstsw
sub
call
dec
out
sbb
adc
out
push
mov
push
push
repnz
emms
and
jae
xor
fidivrl
jp
or
xchg
sbb
rcrl
icebp
ret
push
loopne
stos
mov
cltd
shr
push
loop
inc
cmp
xchg
sub
push
xor
sub
test
mov
clc
rcrb
adc
mov
int
nop
daa
mov
xchg
sbb
xchg
push
imul
jns
or
addr16
push
iret
and
or
ss
cmp
js
mov
inc
adc
orl
leave
stos
test
mov
and
sub
loop
div
cmp
sbb
call
dec
ljmp
mov
mov
jo
cmp
dec
xchg
mov
mov
cltd
and
fistl
push
enter
inc
dec
fsubs
dec
xor
scas
dec
fdivr
lods
mov
push
adcb
xor
mov
jns
ss
mov
ficoms
repnz
inc
ret
hlt
mov
arpl
mov
sarb
jns
push
cmp
popa
das
adc
out
dec
adc
xor
fcom
mov
nop
pusha
flds
lods
pop
scas
leave
sbbl
and
fildl
das
jle
adc
and
or
sub
add
cmp
shl
xor
xchg
pop
imull
sbb
fcmovnu
push
dec
int3
push
adc
cmc
xchg
lock
cmpsl
push
mov
jbe
mov
dec
out
xor
pop
or
xlat
inc
cmp
jae
out
je
dec
inc
jbe
jmp
sahf
jmp
js
ret
imul
mov
fmul
stos
push
aas
aad
repnz
out
adc
fldenv
push
xor
enter
mov
adc
scas
int3
imul
fsub
call
sbb
adc
add
push
int
mov
popf
jg
popa
movsb
in
push
cmpsb
cmpsb
ljmp
bound
jo
stos
xor
push
add
mov
sbb
loop
sbb
adc
mov
mov
gs
dec
sub
jge
inc
sub
inc
dec
cmc
cld
or
fiaddl
xchg
pop
cmp
pop
jge
xor
repz
out
mov
dec
outsb
fcompl
jecxz
out
lahf
sub
pop
dec
mov
or
sub
jecxz
scas
call
ljmp
fcmovbe
std
mov
mov
ds
fnstsw
mov
lret
shrl
sub
js
lock
test
xchg
fnstcw
bound
pop
aam
mov
add
sti
sub
xor
cld
cmp
es
std
cld
cmp
sti
fcmovnbe
jmp
cmpsb
cmp
or
push
sbb
lcall
popl
out
cmp
sbb
sub
or
fistpl
push
imul
cmp
adcl
inc
out
sbb
sti
push
roll
push
out
mov
movsl
orb
jno
push
push
adc
pop
cmp
push
add
rorb
jnp
aaa
loope
test
in
rcl
cld
movsb
stos
sbb
sub
iret
pop
addr16
imul
pop
mov
in
fnsave
cld
dec
dec
pop
adc
inc
dec
popf
sub
pushf
ffree
adc
push
push
testl
int3
or
sub
cmpl
push
cmp
adc
cmp
mov
jecxz
daa
icebp
add
fsubrl
inc
enter
data16
mov
imull
push
out
mov
test
clc
cmpl
jg
gs
push
rolb
fsubrp
cmc
cmc
loopne
jle
jno
sbb
xor
jno
xlat
pop
pushf
repnz
test
sub
sbb
shll
sahf
or
and
jge
fmull
push
sar
hlt
or
sub
pop
adc
faddl
mov
mov
or
mov
jbe
jns
or
adc
push
jo
adc
gs
leave
rcll
dec
mov
insb
jg
rclb
dec
or
mov
js
pop
jb
xchg
mov
mov
dec
cmp
push
jnp
or
cwtl
lock
ficoms
xrelease
pop
pop
adc
mov
push
rcll
sti
into
and
adc
sti
rcll
pop
mov
and
inc
adc
mov
imull
dec
aas
mov
pop
loopne
addr16
lret
lock
jle
dec
xor
test
icebp
sub
in
xor
push
pop
pop
aas
mov
mov
sub
jae
cmc
icebp
cmc
sbb
xor
jno
mov
cld
outsl
add
int
adc
xchg
call
pop
sbb
lret
negl
jnp
bound
dec
dec
ret
mov
xchg
lds
adc
jl
cmc
ljmp
mov
push
cmp
mov
aas
add
mov
sahf
sub
push
ret
sbb
ficoms
or
mov
dec
cmp
imul
push
sbb
cmpsl
pop
sbb
or
es
cmp
emms
jbe
adc
lods
in
loopne
mov
jp
test
add
push
lahf
leave
scas
inc
jns
repnz
cmpsb
and
insb
fwait
add
scas
roll
je
adc
ja
sbb
sbb
fists
xchg
js
dec
push
movsb
mov
add
outsl
popa
gs
orb
scas
pop
sbb
inc
and
pusha
push
arpl
or
dec
jecxz
pop
adc
mov
adc
lods
or
ljmp
inc
stos
cwtl
lock
mov
lahf
iret
mov
push
push
rcll
inc
out
inc
or
fnstenv
daa
popa
lret
call
cmp
cmp
insl
ds
or
xor
dec
arpl
cmc
and
pop
repz
pop
mov
aaa
or
mov
aaa
fcomi
cmpsb
cs
addr16
cld
hlt
imul
dec
xchg
outsb
inc
xlat
dec
sbb
pop
loopne
cmp
xor
loope
out
fwait
arpl
fildll
shlb
jp
bnd
mov
adc
xchg
xlat
push
sub
mov
cmp
cltd
out
xor
sub
add
adc
aam
inc
xor
sbbl
mov
pop
imull
jno
fnstsw
das
cltd
push
push
sub
in
sbb
ret
clc
sub
or
jge
and
xlat
push
push
jmp
pop
adc
adc
aam
mov
add
pop
xchg
test
dec
jo
hlt
stos
int
cmp
aad
mov
push
out
adcl
mov
loope
stc
sarb
insb
ficoms
gs
add
mov
ljmp
push
mov
ss
xchg
adc
negl
push
rcl
in
mov
push
and
outsb
adc
mov
sbb
pop
push
out
jb
out
mov
inc
push
pushf
jns
outsb
arpl
arpl
jmp
data16
lea
cmpsl
popa
cmp
sar
scas
repz
add
and
ret
push
mov
jo
out
sbb
loopne
comiss
sbb
jbe
inc
je
cmpb
es
xor
pop
loope
xor
test
add
cwtl
push
and
push
mov
inc
sub
dec
push
mov
mov
pop
pop
fnstsw
mov
arpl
mov
rorl
jge
and
adc
cmpsl
gs
sbb
inc
xchg
mov
into
aam
jmp
mov
sub
xchg
or
mov
ss
je
cwtl
inc
mov
add
inc
inc
and
std
shl
lods
scas
negb
cmp
mov
mov
cmp
mov
cltd
jae
push
adc
jmp
das
sbbb
fmull
popf
gs
je
jae
insl
jns
int3
mov
sub
icebp
aad
xchg
adc
les
pop
mov
adc
lcall
out
push
aam
jbe
call
test
lea
roll
rcl
bound
cmp
jnp
insb
xchg
dec
add
xchg
pop
push
add
movsb
jg
es
sbb
ljmp
andl
or
sub
lea
nop
inc
idivb
and
xchg
lcall
mov
out
mov
mov
mov
mov
fstps
push
repnz
sub
fs
sub
sub
jecxz
cmpsl
roll
pop
mov
pop
js
xchg
adc
add
nop
in
sbbl
lcall
unpcklps
lods
xchg
js
adc
add
xor
data16
test
mov
in
xlat
adc
jne
cmp
outsb
cli
mov
je
or
dec
or
xchg
xlat
arpl
jg
nop
mov
jmp
pop
mov
or
mov
ja
movsb
add
hlt
add
loopne
pop
inc
push
mov
and
iret
inc
inc
xchg
fwait
mov
jb
lahf
cmp
cltd
test
mov
int
or
insb
or
data16
sbb
mov
dec
scas
push
adc
and
mov
pusha
jae
or
call
pop
nop
push
jmp
aas
cmp
inc
cltd
popf
pop
mov
xchg
aam
ja
cmp
shll
in
jne
pop
inc
nop
test
mov
sbb
fs
xchg
push
jb
shrb
in
jns
sbb
out
int
cmp
xchg
jmp
andb
pop
or
lretw
mov
adc
iret
dec
stos
jnp
dec
cmp
aas
shrb
pop
add
mov
adcl
nop
js
xchg
shl
jo
inc
insl
lcall
pop
mov
mov
call
mov
mov
jmp
or
insl
shl
es
xchg
xchg
fstpl
int
jnp
mov
enter
test
sub
sub
jns
push
or
sub
xchg
cmp
nop
cmp
sbb
lods
push
int
fsubs
add
xor
inc
iret
rolb
sbb
cmp
fisubl
add
imul
enter
mov
mov
push
xlat
sbb
jecxz
pop
aad
mov
insb
test
inc
repnz
cmpsb
dec
fwait
bound
xchg
aas
xchg
andb
add
sub
push
ficoml
insb
movsw
in
imul
xor
out
daa
sub
push
sub
movl
push
cwtl
test
ja
popa
cs
or
outsb
into
cld
adc
lods
fisubrs
pusha
jbe
xor
fwait
out
push
sti
xor
test
inc
sbb
nop
pop
xlat
adc
push
inc
cmp
sbb
xor
int
xlat
adc
pushf
ficoml
adc
push
push
fsubs
cwtl
adc
mov
dec
lcall
push
push
sti
loopne
pop
or
sub
push
add
decb
and
imul
lcall
pop
das
cmp
adc
adcb
lahf
cmp
decl
bts
icebp
mov
adc
mov
mov
int
shlb
inc
sarb
mov
sub
push
ds
or
pop
cmp
adcb
inc
outsb
repz
cmp
cltd
mov
gs
scas
shlb
sub
xor
or
mov
pop
dec
andb
push
mov
mov
mov
cmpsb
mov
scas
jo
sub
mov
sti
push
push
push
outsl
pop
inc
js
mov
or
test
lea
jne
sbb
dec
aaa
add
mov
dec
dec
sub
jne
sbb
ljmp
xchg
out
outsl
xorb
adc
xchg
xor
loope
mov
pop
sub
pop
ss
pop
mov
nop
mov
xor
xchg
mov
or
pop
cmp
inc
pop
xchg
imul
out
iret
mov
lcall
or
in
sub
xchg
mov
lret
inc
test
ds
cmp
push
and
mov
dec
cmpsl
pop
mov
and
xor
cltd
popa
popa
stc
test
jmp
xlat
subl
adc
stos
jl
pop
cwtl
push
iret
ficoml
cmp
pop
data16
mov
sub
push
xor
sub
bound
push
pusha
or
mov
mov
mov
pop
mov
lods
iret
aam
mov
add
gs
cmpsl
lea
lea
sbb
rcrl
outsl
mov
shlb
cmc
stc
cmp
mov
stos
test
std
mov
loopne
movsb
fadd
clc
inc
cmp
iret
jno
andl
inc
rorl
xchg
xchg
in
fs
jecxz
test
cs
xor
dec
mov
pop
sbb
push
adc
mov
push
adc
movsb
fmull
inc
mov
rorb
xchg
cmc
and
rcll
enter
outsl
fstps
cmpsb
stos
js
in
mov
push
lds
iret
xor
insb
pop
loopne
repnz
rcr
and
cmp
pop
call
xchg
ja
push
lcall
negb
dec
cmp
shrb
sarb
inc
popf
inc
push
inc
mov
test
call
xchg
test
into
xchg
test
jle
mov
das
push
adc
pop
andb
cmc
xor
pop
cmp
imul
push
insb
xorb
outsb
xchg
int
xor
out
mov
lcall
push
add
jl
fst
xchg
pop
push
sub
cmp
outsl
mov
or
add
inc
inc
sarl
aam
push
adc
xchg
mov
push
push
push
cmp
lcall
cmp
movb
imul
insb
jecxz
cmp
dec
popf
loope
int
lahf
add
insb
xor
push
xor
jmp
gs
dec
or
jnp
sub
inc
rep
push
mov
ljmp
aad
xor
jg
popa
xchg
test
in
cmp
popa
xor
sub
dec
mov
push
adc
cmc
mov
lea
cmp
cs
dec
jecxz
mov
sbb
jo
jp
pop
adc
jle
jno
and
shlb
scas
int
ret
test
jns
ror
mov
xchg
push
push
push
xchg
or
sbb
ljmp
bnd
dec
sub
outsl
popa
and
divl
add
pushf
scas
mov
mov
and
jae
sub
lods
mov
xor
cmp
aaa
inc
cwtl
ret
cli
icebp
fiadds
mov
sub
mov
das
push
inc
mov
dec
int3
pop
gs
adc
aaa
out
les
clc
cli
and
ret
mov
mov
popf
mov
sbb
jbe
xchg
sub
and
movsl
mov
dec
scas
xor
ja
jb
loopne
push
pop
mov
adc
mov
push
mov
mov
dec
xor
or
ss
jb
add
xor
outsb
xchg
fsubrl
int3
in
jmp
decb
arpl
out
adc
inc
sbb
push
or
sub
add
sub
jmp
and
mov
mov
sbb
enter
inc
movsl
jmp
xchg
mov
es
add
sbbb
int3
fldt
test
addr16
out
add
jb
adc
test
jo
sub
mov
test
lods
push
test
mov
ds
xchg
icebp
pop
xchg
fdivr
movsl
arpl
push
push
jge
mov
mov
pop
xchg
cmp
xor
hlt
mov
movsb
leave
cmp
cmp
dec
xchg
inc
add
in
and
mov
nop
es
mov
cmc
mov
lcall
test
cmp
push
iret
and
popa
push
mov
int
jl
out
scas
pop
adc
cwtl
push
repz
mov
adc
aam
inc
mov
xchg
add
ljmp
dec
aaa
outsb
aaa
xor
rorl
divl
repnz
lret
mov
sub
sahf
push
inc
pop
mov
aaa
inc
ljmp
notb
test
andb
jge
fcoms
inc
jecxz
cmp
cmpsb
stc
cmp
dec
inc
xchg
nop
fistpll
mov
push
jnp
lret
out
fwait
and
movsb
sub
repz
outsb
jg
xor
jno
inc
lret
xchg
ficomps
xor
in
bound
push
inc
pop
dec
pusha
jns
repnz
test
pushf
js
stos
xor
or
mov
int3
mov
das
xor
sbb
daa
or
and
add
jmp
add
sbb
cmp
push
adc
scas
sbb
outsl
in
xor
push
jg
inc
test
inc
jnp
cmpsb
add
add
js
xchg
xlat
out
arpl
repnz
daa
sub
iret
inc
hlt
movsl
sbb
pushf
or
das
sbb
rcrb
dec
jge
pop
jns
lock
lret
and
dec
roll
loopne
outsl
fcmovbe
js
xchg
add
jmp
mov
mov
push
sub
push
je
adc
inc
gs
out
stos
lods
xor
lock
sti
gs
js
into
fs
fimull
iret
jbe
mov
xchg
ljmp
es
adc
lods
and
jg
into
mov
stos
dec
xchg
mov
testb
in
xor
hlt
jmp
test
or
and
pop
scas
sti
scas
jae
psubusb
sbb
shrl
imul
call
stos
subl
pop
aaa
lods
lcall
ja
insl
add
mov
rclb
mov
and
add
xchg
fsubrl
lcall
repnz
and
insl
push
lea
sarl
cmpsb
inc
sbb
xchg
int3
push
push
jb
sub
ja
aam
sbb
sbb
ss
xchg
jecxz
push
xchg
aaa
outsb
cmp
add
in
jb
mov
jge
mov
cmp
dec
outsb
lret
xor
iret
xlat
shl
mov
dec
xchg
adc
and
dec
jl
mov
cs
push
cli
xchg
ja
into
mov
xor
pop
dec
xchg
cmp
cld
fildll
adc
stc
dec
pop
push
mov
xchg
rcl
leave
jne
xchg
jno
cli
xor
mov
pop
jge
jge
roll
mov
test
push
cltd
dec
pop
arpl
pop
icebp
aaa
inc
out
mov
testb
mov
lods
push
es
pop
xchg
fs
jo
lar
inc
mov
cmp
and
pushf
aad
movsb
jns
stos
in
iret
in
xchg
in
and
sbb
push
xchg
add
fwait
xchg
out
sbb
mov
shll
jnp
je
jl
jle
and
js
push
add
cltd
mov
repnz
neg
nop
and
mov
loop
fcmovne
iret
jno
jle
and
mov
aad
sub
push
mov
inc
jmp
cmp
xlat
addb
pop
inc
and
add
pop
mov
mov
outsl
clc
mov
mov
sub
popf
cwtl
adc
in
loope
dec
test
loop
dec
cmp
out
jns
pop
fwait
adcb
adc
xchg
imul
cmpsl
scas
outsl
out
pushf
xchg
pop
cmp
jecxz
xlat
lret
pop
loop
repnz
mov
mov
jnp
dec
leave
lods
filds
sub
fnstsw
nop
add
sahf
inc
hlt
xor
mov
dec
les
pop
inc
mov
lock
push
mov
out
rcl
iret
and
sbb
mov
mov
push
in
pop
pop
outsb
psubq
roll
scas
aaa
repz
sarb
or
jno
stos
call
shrl
mov
sub
dec
int3
stc
mov
xor
ds
leave
aas
mov
lods
adc
mov
or
pop
mov
inc
rcl
mov
movsb
gs
imul
xchg
and
lea
pop
out
sub
sub
data16
ds
hlt
cmp
push
mov
adc
xor
repnz
push
lods
push
sub
add
cld
into
add
lret
ljmp
jg
stos
mov
sbb
cmc
mov
cmp
xchg
inc
cmp
lea
push
mov
inc
shl
inc
outsb
out
incb
bound
push
jno
adc
cmp
or
add
hlt
mov
add
add
bound
mov
jl
sub
aas
xchg
jb
mov
dec
inc
test
mov
imul
sub
cmp
inc
pop
add
jp
cmp
pop
add
adc
push
lret
mov
mov
push
xchg
adc
sub
lock
cmp
movsb
mov
repnz
xor
push
push
mov
pusha
lds
and
or
andb
lds
aad
and
inc
sub
das
scas
and
daa
shlb
inc
pusha
arpl
pop
pusha
cli
or
push
fstpt
repnz
jbe
xchg
mov
call
jb
out
inc
rclb
push
pop
push
mov
loope
push
or
add
loopne
inc
decb
stc
jle
fadd
dec
xchg
cmp
sbb
mov
outsl
std
add
call
iret
jl
xor
arpl
xor
out
out
sti
dec
movsb
mov
pop
cmpl
nop
mov
or
sbb
out
mov
sub
inc
jnp
adc
xchg
or
inc
cmpsl
push
stos
incb
jle
dec
sbb
in
aad
jge
or
bound
jo
es
jmp
negl
popf
inc
xchg
jg
shrl
aas
inc
jb
adc
push
clc
leave
mov
pop
arpl
in
push
movsb
out
aas
bound
sbb
inc
mov
fwait
hlt
es
pop
lock
ffreep
adcl
fiaddl
or
xlat
sbb
mov
into
ja
xor
jmp
add
push
test
sbb
push
fdiv
in
adc
pop
loopne
mov
and
cmp
mov
inc
jae
push
icebp
lahf
push
dec
mov
pop
ret
and
xlat
push
add
jb
in
jbe
arpl
rcrl
cmpsb
test
mov
jb
cmp
aam
dec
push
xor
mov
cmp
push
hlt
pop
gs
out
fiadds
mov
sbb
fidivrl
insl
or
aam
mov
add
cltd
dec
and
jmp
xchg
xor
or
mov
mov
std
addl
pushf
sarw
pop
std
out
mov
mov
and
xor
pop
sbb
insl
cwtl
push
jge
pop
jg
jo
leave
and
inc
cmp
fs
jae
or
dec
lahf
mov
push
cmp
sarl
repz
push
xchg
jbe
fsubl
std
fucom
jle
fcmovnb
cmpsl
repnz
and
xlat
std
fdivrp
lret
jnp
into
jle
int
out
adc
pop
nop
insl
mov
sbb
ret
push
les
aam
icebp
xchg
orl
mov
mov
pop
ljmp
and
sbb
sti
jb
xorb
cltd
and
int3
sub
test
into
mov
cltd
xchg
xchg
mov
pop
xchg
pop
pusha
punpckldq
sahf
push
sbb
adc
push
lock
cld
xlat
adc
cli
test
sbb
sub
aas
shrl
sbb
clc
push
inc
jnp
cmc
xor
sbb
in
das
stos
ja
mul
xchg
cs
sbb
std
test
addb
out
jo
mul
pop
test
cmpsb
icebp
inc
lods
jp
inc
ljmp
add
or
nop
lock
dec
mov
fdivrs
test
mov
xchg
inc
cmp
jo
cmp
cmp
mov
filds
lods
test
mov
lahf
push
sarb
icebp
lcall
sbb
icebp
lods
and
mov
in
outsb
xlat
dec
and
inc
xchg
and
push
cmpsl
insl
add
push
jp
mov
les
in
iret
lret
das
test
mov
in
xor
roll
mov
std
sub
mov
cmpsb
fwait
in
es
addr16
xchg
int
sbb
mov
in
add
push
ret
jle
push
and
outsb
test
jo
inc
rcll
das
mov
adc
add
ljmp
mov
xchg
mov
and
pop
pop
sarl
or
cwtl
sub
sarl
hlt
subb
jno
repz
lret
js
outsb
popf
sbb
in
rorb
lret
iret
repnz
arpl
xlat
sahf
sbb
mov
aaa
lods
or
notl
lods
test
jb
mov
sahf
mov
mov
push
movsl
pop
mov
mov
jbe
and
cmp
cltd
call
rclb
xlat
cld
lock
js
adc
mov
ret
bound
xchg
insl
mov
dec
mov
and
mov
out
mov
enter
lock
daa
pop
and
push
leave
push
jecxz
pop
dec
movsb
pop
jb
fidivs
cmc
push
stos
mov
mov
ljmp
mov
jbe
or
out
sbb
addb
in
scas
cwtl
scas
push
inc
out
mov
fucom
loopne
xchg
mov
call
push
sub
dec
stos
aam
push
adc
les
pop
mov
fs
in
mov
inc
sbb
push
pushf
call
add
pop
jle
jge
imul
xor
or
in
mov
frstor
sbb
outsb
xor
xlat
mov
or
mov
sub
xchg
sbb
pop
idivl
adc
dec
jle
out
xor
test
insl
inc
push
lahf
pop
dec
xor
test
lds
cmp
add
xchg
pop
push
sub
xchg
clc
imul
mov
data16
fistpll
xchg
das
cmp
dec
mov
mov
dec
inc
or
inc
jae
pop
dec
push
popf
std
imul
pmuludq
inc
dec
fimull
mov
icebp
ds
cs
nop
pop
jl
outsb
or
mov
adc
push
shl
xchg
fldcw
xorb
cld
cli
arpl
cmpsb
insl
notl
pushf
imulb
in
mov
insb
pop
clc
push
sub
or
mov
fadds
mov
popf
dec
mov
lds
test
mov
movsb
nop
and
dec
pop
test
daa
push
or
jecxz
mov
int3
pop
fucompp
push
push
int3
mov
adc
lret
jp
stos
daa
addl
sbb
cmpsb
add
jb
in
cwtl
sbb
push
sub
outsl
fcoml
adc
xor
shrl
sub
cmp
sub
xor
and
ss
xor
pop
out
jnp
inc
pop
mov
test
sarb
push
push
hlt
lret
add
scas
arpl
or
iret
or
sbb
xor
add
aad
out
out
xchg
into
xchg
std
mov
mov
push
loop
insb
cmp
rorb
scas
sarb
cwtl
or
or
adc
push
jecxz
ret
mov
mov
bound
repz
jne
xchg
outsl
andl
fisubrs
cmp
mov
fcmovnbe
mov
sbb
sti
adc
pop
xor
or
popl
jecxz
pushl
and
movsb
push
pop
push
pop
lret
pop
cmc
lret
rcll
lds
jnp,pt
or
mov
outsb
adc
les
loop
test
notb
fdivl
js
fidivs
gs
dec
popa
mov
cmp
imul
rclb
and
mov
mov
adc
dec
inc
scas
jecxz
repz
sbbl
and
addr16
fneni(8087
out
fadds
xchg
inc
outsb
pop
add
xchg
pushf
outsb
add
mov
or
cmp
adc
out
push
daa
sahf
sub
dec
jmp
es
jb
mov
mov
fisubl
or
in
aas
xor
outsl
fstp
ljmp
or
sbb
push
sub
int
ja
sbb
dec
test
test
std
xor
mov
jecxz
test
xor
nop
sti
dec
loopne
and
and
imul
int3
lock
in
cli
scas
jns
cmp
or
sub
imul
sbb
xchg
int
cmpsb
sarl
inc
jne
and
mov
iret
je
aam
into
xchg
ja
push
repz
loop
sahf
fptan
aaa
js
jns
mov
sub
adc
cmp
out
push
ds
lcall
mov
jle
dec
addr16
lahf
mov
pop
and
jae
movsl
mov
rclb
dec
sar
dec
rolb
xchg
pop
popf
and
out
inc
ret
dec
sub
mov
lock
dec
push
push
pop
lahf
dec
clc
inc
es
push
stos
jecxz
sub
mov
aaa
lret
mov
aad
sbb
cmp
hlt
adc
mov
stc
adc
jae,pn
shrb
jmp
je
cmp
cmp
push
inc
sbb
cmpsb
call
std
leave
xchg
mov
aam
push
mov
test
or
or
xor
test
push
and
adc
xchg
test
cmpb
flds
stos
cmp
sahf
out
shll
fisubl
mov
fdivr
movsl
cmp
xor
mov
ficoml
jnp
sbb
call
in
aam
and
daa
or
sti
mov
nop
sbb
aaa
xchg
adc
repnz
jmp
std
cs
jo
cs
inc
notb
pop
insl
and
push
jmp
pop
adc
sub
mov
mov
jnp
or
enter
pop
mov
inc
jae
pop
xchg
das
iret
mov
pop
or
jno
pop
fiadds
in
pusha
xchg
mov
add
int
test
sub
xor
pusha
jge
lret
xor
lock
sub
les
dec
addl
imul
cli
mov
cmp
shrb
out
inc
pop
cmp
sub
repz
js
sbb
adc
icebp
sbb
rcrb
pop
and
adc
mov
add
imul
pushf
mov
es
dec
das
and
aad
adc
in
stos
adc
mov
cld
sbb
xchg
sahf
lods
shlb
push
ss
aad
push
and
mov
out
push
jl
ret
fdivl
sbb
std
xchg
pop
fimull
sub
jo
add
fimuls
and
cmp
dec
pop
inc
mov
pushf
xor
lds
and
push
jb
rcrl
dec
pop
aad
or
mov
ss
adc
std
loopne
sahf
inc
scas
xchg
push
adc
jns
mov
adc
xor
sub
jg
adc
adc
stos
insb
xor
and
andb
inc
pop
sbb
rorb
adc
xor
movsl
push
pusha
scas
xorl
pop
mov
mov
and
mov
cmp
loop
insl
and
ljmp
jecxz
repnz
jecxz
sub
jmp
lock
push
enter
mov
jp
xchg
cmp
or
jo
sbb
push
cld
test
stc
mov
mov
mov
roll
lret
mov
adc
sub
sub
jmp
xchg
mov
xchg
sbb
mov
cs
insb
int3
lcall
pop
mov
pop
adc
cld
and
popa
pop
mov
cmp
cmp
cmc
outsb
or
push
popf
insl
in
push
sbb
rcrl
test
daa
mov
and
push
sub
push
rclb
andl
movsb
xor
pop
sbb
push
idivl
shrb
fcomp
mov
aam
lret
sbb
inc
push
ljmp
add
aam
push
addr16
flds
repnz
movntps
xchg
xor
sarb
imul
jb
mov
sub
fcoms
inc
or
xor
cltd
popa
popa
inc
add
scas
ds
shrb
mov
jo
ficompl
stos
jg
pop
ds
insb
push
mov
dec
sbb
mov
rorl
fimull
aas
insb
and
sbb
mov
je
ds
sbb
jne
xchg
push
sbb
push
and
imul
arpl
jmp
fsub
addr16
dec
movsb
xor
push
xlat
jmp
dec
lods
cld
or
fsubl
mov
and
fadds
push
nop
iret
sub
test
sbb
and
push
pop
cli
pop
loopne
lcall
cmp
pop
sbb
and
data16
iret
push
jle
enter
cmpsb
out
sbb
jl
dec
mov
push
mov
push
cmp
mov
arpl
adc
pusha
or
jne
mov
repnz
push
jmp
fmulp
cmc
push
jg
pop
rcll
nop
loop
push
jns
sarl
ficoms
add
aam
pop
sub
add
out
dec
jp,pt
aaa
fs
stos
call
lods
insl
pop
push
mov
mov
es
add
ret
pop
mov
in
mov
insl
cmp
in
xlat
xchg
into
scas
sbb
push
and
aas
sbb
jae
mov
push
lea
rclb
sti
ss
push
pop
leave
pop
pop
jno
loop
sbb
outsl
cmp
fcmovnb
mov
cmpb
inc
and
inc
leave
dec
push
jo
leave
dec
and
cmp
pop
xor
push
rol
nop
jb
and
cmp
push
dec
inc
imul
and
sub
jg
aaa
jno
pop
adc
sub
mov
push
lea
xor
inc
pop
clc
sub
inc
mov
mov
pop
mov
xor
in
inc
les
hlt
leave
es
dec
std
xchg
pop
je
das
adc
cwtl
or
xchg
loop
test
hlt
add
jmp
in
cli
xorb
lock
test
imul
mov
imul
xchg
pop
sbb
sub
aad
nop
aam
enter
xchg
ret
test
ljmp
insb
mov
pop
push
and
xchg
or
pop
cli
mov
lcall
in
mov
sub
out
enter
sub
cmp
sar
pop
data16
iret
movsl
mov
cmp
not
mov
pop
lret
jae
fistpl
mov
subb
ljmp
fdivrp
repz
outsb
and
inc
lcall
ret
jg
fs
repz
fxch
repnz
pop
lcall
jecxz
cmpsb
or
sub
push
pusha
jecxz
cmpl
int
and
movsb
mov
lret
cs
fs
and
push
mov
pop
stos
aad
adc
or
xchg
mov
gs
bound
ret
push
mov
sbb
movsl
mov
mov
mov
sub
push
stc
in
addb
fwait
sub
shr
xchg
stc
test
xor
ret
jge
mov
xlat
clc
push
cmpsl
push
add
push
jnp
inc
jge
mov
xor
pop
cmp
jle
in
int3
insl
adc
add
movsl
call
nop
mov
pop
ficoml
ja
ds
sbb
xchg
dec
fcoml
popa
xor
arpl
mov
shl
scas
push
push
je
lcall
nop
aad
outsl
xchg
cld
shll
adc
outsl
mov
aaa
fidivs
adc
sti
fisubrs
inc
incl
add
test
dec
xor
mov
pop
dec
xrstors
mov
mov
stc
sbb
add
aaa
scas
test
or
xor
jp
xor
sbb
ret
hlt
aad
cmpb
out
hlt
jge
clc
jnp
mov
or
fcompl
xor
scas
pop
arpl
mov
adc
std
cmp
ret
sarl
xor
arpl
xchg
and
xchg
icebp
or
mov
dec
cs
shrb
mov
outsl
or
out
loop
std
mov
cmp
pop
jle
xor
mov
scas
pop
jnp
lea
ljmp
icebp
movsb
adc
mov
ja
enter
sti
mov
push
push
aam
cld
lock
ret
dec
testl
cmp
xlat
test
mov
sub
cmpb
add
jo
aas
arpl
xchg
das
cmp
imulb
fcomi
inc
sar
sti
mov
mov
adc
repnz
jg
adc
xor
mov
imull
or
inc
fbstp
out
mov
dec
lahf
jg
mov
or
shl
sbb
lret
in
shlb
inc
and
or
repz
inc
cli
dec
pop
jno
mov
shrl
xchg
mov
jns
outsl
and
or
mov
insl
aaa
pop
ja,pt
into
mov
inc
mov
call
aam
stos
adc
dec
lock
in
and
in
mov
pop
pop
mov
sub
arpl
xor
aas
test
mov
pop
lahf
loope
mov
arpl
mov
mov
rorl
aaa
mov
rolb
call
xor
aam
gs
test
repz
mov
aad
hlt
cmp
mov
xchg
push
shlb
insb
push
cmp
fwait
rcr
and
cld
mov
inc
sbb
sbb
imul
mov
adc
inc
push
add
pop
mov
movsl
out
insb
fld
cmpsb
push
jp
jb
out
cmc
push
mov
mov
mov
sub
push
or
lods
stos
pop
test
or
test
xor
add
pop
stos
and
pop
or
fsub
mov
cltd
adc
gs
xor
fsubr
jecxz
shlb
fildll
test
fdivs
mov
in
fnstcw
dec
js
mov
das
in
sti
neg
inc
cld
fistps
int3
imulb
std
in
push
xlat
mov
dec
jl
push
jo
lods
or
jnp
popf
nop
mul
jns
xchg
sti
outsb
mov
test
jge
fdivr
pop
cmpsl
push
cmp
sub
addr16
sub
xchg
xor
scas
popf
mov
pop
mov
test
pop
repnz
push
sbbl
shl
inc
ret
fs
in
ja
jb
add
mov
iret
mov
nop
lds
inc
mov
cwtl
adcl
repz
pusha
ret
xor
jge
aas
ds
inc
jmp
xchg
or
loope
vpcmov
daa
xchg
test
fbstp
inc
mov
hlt
mov
call
push
dec
sbb
cli
sub
sahf
out
push
stc
call
pop
inc
imul
xchg
inc
icebp
push
pushf
dec
cmp
add
mov
sub
mov
xchg
call
clc
pusha
gs
inc
lcall
ret
cs
test
popa
rolb
and
xchg
dec
enter
dec
mov
dec
scas
out
pop
xrelease
mov
pushf
cli
scas
adc
jne
or
xchg
imul
push
inc
fisubl
xor
mov
push
mov
push
rolb
cmp
fidivl
push
imul
movsl
sbb
adc
pop
cld
daa
ret
mov
divps
sbbl
movsb
pusha
outsb
mov
test
xchg
adc
arpl
adc
cmpb
leave
cmp
aas
mov
push
cltd
push
xchg
outsb
imul
iret
lods
push
nop
xlat
adc
cmc
xor
scas
xchg
fldt
jo
xchg
or
push
loope
pop
mov
dec
add
mov
es
jle
xlat
sub
repnz
ret
fldl
fucomp
rcr
cmp
fstps
lods
inc
xor
gs
xlat
insb
lret
push
sub
and
sbb
addb
push
mov
aaa
dec
nop
fs
in
pop
dec
push
fistpl
jmp
fsubr
test
cmpb
add
je
jg
or
lret
jg
or
or
and
rcrl
ds
pop
mov
pushl
aas
adc
add
push
sub
mov
out
icebp
out
jnp
sub
xor
stos
rorl
dec
fchs
jge
xor
aad
popa
push
and
in
xchg
push
sbb
ds
push
adc
movl
jne
ss
sbb
pop
dec
sbb
cltd
pushf
pushf
out
lahf
mov
nop
xchg
pop
pop
pop
xchg
insb
pusha
je
mov
mov
jb
cmp
orb
inc
in
lahf
push
inc
iret
pop
sub
dec
test
sbb
mov
icebp
push
in
testb
mov
or
mov
mov
rcrl
ja
leave
mov
jne
hlt
dec
mov
fwait
and
lods
dec
xchg
mov
sub
mov
xchg
sbb
call
pop
mov
addl
int
dec
je
fbld
out
divl
xchg
push
lea
mov
js
or
mov
mov
sbb
rcll
pop
or
adc
jecxz
outsl
bound
scas
je
push
out
pop
mov
out
push
lods
lea
push
jnp
mov
cmp
aam
pop
fidivrl
mov
or
shlb
js
inc
out
xchg
cmp
mov
out
push
andl
mov
pop
ss
adc
xor
ret
push
lods
rorb
pop
cmpsb
adc
mov
sub
pop
mov
subb
xor
movsl
or
fcoml
jnp
movsl
cmp
sub
inc
enter
add
or
lahf
or
in
push
add
das
iret
pop
pop
cld
mov
dec
decb
jae
cmp
in
xor
mov
sub
mov
xor
jl
xlat
xchg
mov
gs
push
mov
adc
and
xor
popa
or
pop
push
clc
mov
adc
mov
lds
mov
pop
push
dec
inc
jne
push
loope
jae
push
sbb
sahf
sub
add
scas
mov
and
mov
pop
and
shl
or
gs
test
lock
idivl
push
xor
inc
cmp
jnp
fs
test
or
mov
iret
je
sub
cmpsl
fists
mov
xor
cmp
rol
je
adc
mov
mov
es
shl
sti
inc
int
icebp
mov
push
mov
xor
ss
pop
cmp
inc
push
and
jae
lcall
test
mov
ret
addr16
adc
out
cmc
fwait
stc
sbb
sbb
mov
lea
inc
sbb
add
xchg
ret
es
jnp
mov
outsl
mov
jbe
scas
shrb
sbb
mov
ret
frstor
and
aad
mov
sbb
inc
pop
pushf
mov
cmp
and
mov
adc
sub
cltd
xorl
jecxz
mov
cmpsl
inc
mov
sub
ljmp
cmp
cmpsb
insb
stos
gs
dec
pop
nop
fcomi
stos
popf
xor
lret
jmp
mov
or
jns
and
push
push
leave
addr16
add
popa
xchg
mov
inc
dec
ret
nop
enter
add
cmp
push
shrl
push
push
repnz
cwtl
test
cwtl
inc
push
mov
ret
xor
sub
or
or
fimull
xor
or
push
xchg
lods
cli
insb
jmp
pop
mov
sti
cli
mov
shl
stc
push
xchg
aaa
roll
popa
imul
xchg
mov
dec
je
adc
fdivl
add
pop
movsl
mov
xor
sahf
out
xchg
orb
pop
loop
popf
cmp
hlt
cwtl
lods
clc
lods
fcmovnbe
adc
sbb
push
xchg
dec
mov
jp
dec
mov
inc
sti
xchg
pcmpeqw
lods
cmpsb
cli
loope
pop
fisttps
xlat
mov
out
aas
sbb
stc
ret
jnp
test
add
insl
cmp
pushf
or
or
fildll
mov
fs
loopne
push
mov
add
int
and
adc
or
mov
and
sbb
cmp
dec
stc
and
lds
lock
shrl
dec
adc
xchg
jg
and
sbbb
fisubrs
xor
lds
movb
push
pop
push
stos
andl
push
icebp
xchg
rsm
push
mov
or
xchg
fwait
enter
fisubrs
sbb
push
sub
jns
cmc
test
inc
xor
jle
shl
xor
pop
in
imull
mov
movsb
adc
jo
inc
add
push
stc
xchg
rcr
sbb
xor
cmp
mov
out
cmp
fisttpl
jmp
sub
lds
pop
sub
inc
and
repnz
imull
adc
sub
ljmp
orl
dec
movsl
xchg
sub
inc
mov
fistpll
jno
xchg
outsb
fisttpl
insb
sub
cmc
lods
jmp
addb
sbb
add
sub
inc
ja
int3
jmp
cld
icebp
shl
enter
sub
test
pop
mov
enter
stc
jmp
rorb
js
clc
stos
cli
aam
mov
sbb
ljmp
mov
jge
js
xchg
add
or
cmp
aad
std
adc
push
stos
jne
add
inc
sbb
cmp
dec
or
in
xchg
imul
xlat
dec
outsb
lea
xor
mov
mov
jg
mov
push
pop
xchg
inc
mov
jmp
dec
fwait
adc
push
xor
jl
cltd
sti
push
mov
sub
jne
jmp
dec
mov
push
or
ja
and
pop
cmp
rorl
cli
out
jg
or
jge
stos
push
je
mov
jno
ror
cmp
xor
insb
jae
sbb
idiv
cld
cwtl
fcoms
fcompl
loope
mov
adc
inc
xchg
cmp
mov
imul
dec
mov
lret
push
lret
mov
lea
fidivl
fisubrl
ja
fsub
mov
push
insb
lcall
daa
cltd
fcomps
pop
jne
add
out
lret
stc
sti
je
xchg
sbb
inc
shll
sbbb
into
xchg
repz
pop
cmp
out
dec
xchg
das
aaa
dec
adc
sahf
xchg
push
push
mov
xchg
ret
add
popf
call
in
imul
sbb
divb
push
mov
scas
in
inc
lea
test
add
xchg
lea
jb
xor
xor
mov
leave
mov
fisttpl
fsubl
dec
sub
inc
and
es
sbb
add
sbb
cs
dec
lock
xchg
pop
leave
mov
mov
nop
aaa
or
cmp
jnp
mov
sbb
dec
pop
pop
pop
cmp
inc
pop
fidivs
xchg
bound
out
mov
mov
jo
es
mov
lea
jmp
push
cmp
in
rolb
mov
ja
sub
xchg
xchg
sti
pop
mov
ss
mov
push
mov
jbe
ret
dec
or
adc
pop
divl
fimuls
mov
xor
fs
lret
shll
jo
and
sub
pop
fistpll
ja
lcall
testb
fmuls
pop
adcb
iret
or
cwtl
das
test
test
lcall
xor
mov
mov
call
jnp
ss
jnp
adc
ret
sub
in
adc
rorl
loope
stos
xchg
mov
inc
data16
jecxz
incb
std
lahf
pop
and
cmpsl
movsb
data16
dec
aas
mov
push
pushf
mov
xchg
mov
jg
add
stos
cmpsb
in
push
add
jnp
fildl
fldt
stc
xor
mov
or
push
fnsave
cmc
mov
xchg
or
mov
test
std
stc
dec
stc
jge
cmp
leave
push
push
rolb
add
roll
sub
sub
leave
je
pop
and
scas
loope
icebp
cmc
mov
xor
dec
imul
push
call
aaa
cmp
sbb
shll
or
aaa
pop
xchg
stos
js
mov
out
movsl
repnz
sbb
sbb
shlb
jne
cmc
xor
cmp
jnp
cmp
jle
divb
xor
jno
xchg
xchg
sbb
int3
pop
loop
leave
sahf
lods
sub
lret
mov
scas
shll
jbe
lret
mov
pop
clc
mov
jle
cltd
je
stos
inc
xchg
in
cmpsb
mov
out
call
clc
xchg
or
sub
rcrb
jbe
rolb
aas
into
jp
push
mov
jae
push
push
pop
aaa
mov
jp
je
or
fwait
out
sub
mov
lods
push
clc
add
mov
sbb
inc
fstpt
addb
dec
js
dec
jg
cmpsb
testb
mov
insl
mov
dec
out
mov
out
fdivl
jb
sbb
adc
mov
pop
inc
frstor
add
es
mov
ljmp
ss
sub
pushf
dec
in
jne
stos
sbb
xor
sbb
ret
fstps
xchg
pushf
dec
xchg
test
mov
or
inc
inc
add
xchg
push
push
enter
pop
xor
roll
xchg
push
lahf
sarl
out
mov
pushf
mov
adc
out
inc
scas
fldt
mov
add
dec
push
dec
test
outsl
jmp
dec
push
mov
les
cmp
call
int3
push
sub
xchg
xchg
mov
mov
adc
cli
mov
xor
mov
or
orb
mov
and
pop
lods
mov
insb
push
dec
push
xchg
lcall
aas
cmpsl
cmc
loope
or
xchg
mov
xchg
pop
in
pusha
push
mov
mov
das
shlb
or
xchg
mov
fsub
add
mov
addb
insb
adc
jl
add
add
sbb
idiv
fcmove
mov
cmpsb
scas
mov
add
std
push
repnz
fisubs
sub
cltd
insb
cmp
mov
xlat
add
imul
insl
add
xchg
dec
jae
jge
imul
cmp
cmp
into
cs
jb
sbb
xchg
pop
js
push
ja
push
out
outsb
xor
sbb
or
sub
mov
pop
rcrb
ficoms
inc
nop
out
cmp
pushf
jp
adc
dec
ficomps
jle
and
xor
inc
shrb
aas
adc
push
xchg
mov
inc
xor
pop
dec
xchg
cmpsl
push
sti
sub
dec
mov
iret
push
xor
jns
and
jns
mov
insb
sbb
push
sbbl
insb
fcomi
xor
lcall
dec
out
fisttpll
mov
mov
lods
sub
push
pop
test
lea
test
mov
fistpl
sbb
test
xor
or
jmp
push
mov
shll
lods
cmp
jno
mov
aad
mov
sub
xor
pop
movsb
mov
std
dec
sbb
std
lahf
cld
cmp
mov
cmc
scas
add
cwtl
mov
add
enter
loope
int
ss
shl
or
out
cli
popf
ds
cwtl
stos
cmp
xor
push
xchg
adc
jl
add
movsl
or
xchg
push
nop
loopne
fwait
mov
pop
sti
ret
or
and
orb
aam
fnstsw
addb
insb
and
pop
mov
push
or
jle
push
lods
filds
inc
inc
mov
mov
andl
xchg
ss
push
out
into
pop
sbbb
notb
jecxz
push
jb
mov
movsb
inc
iret
icebp
ret
push
out
cmpsl
les
in
adc
movsl
adc
inc
repnz
mov
lcall
bswap
push
sub
in
fwait
je
dec
jg
sbb
add
test
sbbl
lahf
sub
scas
iret
mov
in
ja
mov
push
and
cltd
test
leave
mov
cld
hlt
push
into
mov
xor
sub
jl
les
jae
lods
mov
fcoml
repnz
xchg
cmp
sub
and
imul
insb
jo
xchg
push
aas
mov
clc
lods
dec
ret
mov
lret
iret
lds
imul
xchg
notb
sub
data16
lods
scas
insb
and
jne
les
add
test
nop
pop
lock
jg
push
cmp
add
leave
lock
jecxz
std
fs
push
aaa
fs
jne
pop
mov
push
adc
push
fstps
cld
jle
push
jne
mov
aad
rorb
add
sbb
icebp
or
out
hlt
pushf
lahf
outsb
iret
pop
add
xchg
ret
addl
mov
sbb
out
imul
int
add
ret
sub
cmc
in
jne
stos
in
jbe
jg
xchg
inc
adc
out
out
or
jp
lods
fwait
loope
dec
jno
jl
and
movl
repnz
dec
sub
sub
test
jle
adc
push
lds
lret
aam
imul
out
or
mov
or
pop
push
icebp
cmp
jae
rcrb
repz
add
lods
repnz
mov
jnp,pt
aaa
test
call
xor
push
sub
xor
mov
or
fnstcw
mov
movsb
mov
dec
sub
fs
repnz
add
cwtl
rcrb
ficoml
pushf
rcrb
pop
movsl
mov
mov
ret
ret
dec
insb
sbb
mov
into
dec
addb
push
shr
enter
aam
in
sub
jnp
pop
mov
repnz
out
nop
lock
mov
cmp
cmp
adc
cmc
push
mov
or
jge
mov
xchg
sarb
mov
push
add
daa
or
lret
pop
xchg
shll
pop
or
lret
js
fidivrl
scas
cmp
mul
push
push
sbb
daa
xchg
sarl
jns
mov
aaa
int
mov
cmp
fst
push
push
pop
jbe
enter
stc
pop
nop
mov
cmp
lret
sub
cmp
fnstcw
or
mov
add
xor
repnz
xor
mov
pop
and
insb
mov
cmp
jae
push
std
adc
sub
icebp
lret
sub
sub
mov
scas
stos
inc
sbb
sub
xor
add
insb
mov
int3
and
xor
xor
stos
xchg
or
push
jbe
or
dec
adcb
out
mov
dec
out
dec
xchg
aad
add
jp
test
loope
imul
mov
mov
mov
testl
xor
dec
leave
shrb
lods
in
xchg
popa
ss
lret
rcr
mov
stc
push
cltd
jae
dec
push
call
dec
ficoms
ror
cli
mov
scas
pop
outsl
xchg
or
pop
mov
in
sub
inc
ret
sti
push
movsl
jne
push
neg
ret
mov
jp
pop
cltd
pop
jge
inc
xchg
lret
mov
push
inc
sti
mov
cwtl
dec
pop
push
int3
sarb
inc
popa
jne,pt
cmpsl
xchg
fs
dec
cmc
ret
and
dec
inc
bnd
add
pop
testb
xlat
jmp
jmp
lret
adc
add
xchg
pop
in
adc
test
mov
mov
cmp
xor
push
fwait
sbbb
mov
inc
je
sbb
or
pop
sbb
cmp
dec
mov
orl
bnd
mov
mov
adc
xchg
rcrb
pop
loop
movsl
ljmp
sub
mov
jne
fcoms
or
mov
fcmovb
dec
adc
jecxz
xlat
sbb
loop
js
aaa
setl
cmpsb
add
cmpsl
aad
ret
int3
inc
je
out
outsb
out
sub
imul
xor
lret
cmp
lods
inc
out
es
mov
out
xor
cli
dec
scas
xchg
scas
inc
xor
inc
nop
out
cltd
xor
adc
pop
or
sbb
inc
loopne
or
out
lret
mov
shr
or
xor
test
fstpl
xchg
cld
and
jmp
cs
es
mov
mov
pop
int
sbb
loope
or
test
sbb
pop
push
fs
xchg
pop
dec
fimull
pop
cs
pop
lock
test
cli
int3
arpl
fnstcw
sbb
push
cmp
mov
into
pop
push
xchg
pop
lret
mov
dec
adc
mov
cmp
divb
pop
cmp
fistps
scas
sbb
push
lret
add
cmp
push
sbb
ds
scas
pushl
or
aad
jecxz
pop
sbb
pop
ret
push
cmp
outsb
or
enter
adc
popa
shlb
js
or
and
adc
mov
ja
cld
pushf
ljmp
jl
push
out
mov
xor
jg
adc
jbe
push
test
mov
mov
jne
jl
cmc
dec
pop
and
adc
mov
mov
ret
xor
xchg
jae
adc
arpl
fwait
sbb
loopne
mov
push
sub
sbb
add
ljmp
xchg
sub
and
mov
adc
adc
and
dec
pop
insl
add
fisubrs
jp
push
mov
inc
mov
test
and
cld
aad
ja
popf
adc
adc
inc
int3
rorl
sub
pop
dec
jmp
ret
clc
cltd
dec
hlt
in
pop
xlat
cmp
sub
xchg
mov
xchg
ret
mov
jnp
cmp
pop
aas
jle
sbb
add
inc
mov
dec
loopne
jg
arpl
aas
inc
jge
mov
adc
aaa
dec
loope
mov
shrl
or
pop
mov
or
lods
push
popa
and
dec
in
test
scas
pop
sbb
test
insl
aaa
mov
and
int3
lods
int
pop
popf
ret
adc
ret
mov
mov
sahf
xlat
mov
stos
xchg
shlb
aam
out
popa
sbb
cmc
daa
mov
fistl
cmp
jbe
test
dec
lahf
dec
mov
dec
loope
test
mov
cmp
jp
movsb
lret
mov
cmpsb
aad
repz
push
inc
rorl
inc
addl
outsb
mov
pop
mov
inc
outsb
cmpsb
mov
cmp
dec
xchg
jp
sub
aaa
aam
adc
bound
rcl
pop
rorb
frstor
pop
imul
jl
cmc
add
lods
fstl
cmp
lea
push
mov
jl
orb
push
pop
idivb
add
add
jae,pt
shll
cld
ror
mov
mov
ds
add
daa
push
xor
test
movsl
push
and
cmpb
sbb
aad
jae
lock
loop
inc
push
stc
push
stc
sub
push
jbe
jg
test
cmc
mov
push
dec
cmp
pusha
sbb
xchg
mov
das
pop
pop
mov
mov
pop
sbb
mov
out
add
jae
jne
stc
decb
mov
std
aad
nop
dec
stos
inc
push
push
movsb
pop
aaa
push
imul
enter
push
lods
mov
jmp
pop
stos
in
xor
inc
xor
lcall
or
cwtl
fwait
loope
jp
lods
leave
mov
aaa
mov
addr16
jne
cmp
jle
mov
fisttpl
and
bound
xchg
cmp
push
mov
xlat
inc
sbb
push
pop
push
or
xor
aam
mov
mov
fsub
jge
leave
dec
jmp
jns
add
int
push
popf
sub
andl
pusha
xor
in
jmp
jle
enter
jge
jns
push
pop
ljmp
aam
out
xchg
inc
das
popf
mov
mov
fs
jns
call
repz
add
fidivrs
sbb
adc
or
dec
fisttpll
and
xor
sbb
mov
mov
inc
test
jne
testl
leave
aas
sub
sbb
pop
dec
mov
inc
add
cld
xor
mov
int
jg
ror
sbb
pusha
fnstenv
lcall
push
push
xchg
xor
mov
shlb
loop
add
cmp
movsb
jle
dec
out
loop
sti
mov
cld
leave
xchg
adc
mov
addb
push
mov
pop
scas
mov
mov
bound
ftst
movsl
jae
or
pop
push
and
cmp
shr
inc
testb
arpl
lret
cmpsb
dec
xchg
dec
and
pusha
sub
inc
testl
aad
int
mov
es
inc
shrb
xchg
push
xlat
inc
sub
sbb
fildl
daa
sub
mov
ss
rcll
add
ljmp
fdivrl
and
bound
mov
sub
jne
out
test
dec
js
fstl
sub
fistpl
orb
testl
xor
cmp
dec
push
mov
push
test
lahf
sub
xchg
lret
in
bound
fidivs
push
mov
and
rorl
cmpsb
sub
xor
cmp
sbb
mov
xchg
jl
cmp
inc
jl
adc
lahf
xor
lods
je
xor
cmp
mov
lds
insl
jge
inc
mov
enter
imul
mov
not
filds
jno
aam
imul
icebp
mov
pop
cmpsb
fwait
dec
aad
xor
lret
pop
or
outsb
push
pop
insb
and
sbb
clc
out
ror
pushw
adc
and
lds
cmp
rorb
mov
fildl
in
imul
stos
sub
dec
shl
xchg
inc
nop
mov
stc
pop
push
rolb
repnz
add
and
sbb
lret
shrb
push
mul
jo
into
xchg
orb
lods
pop
cmp
mov
pop
lds
filds
cs
mov
adc
dec
push
xlat
or
xchg
jo
and
xchg
xchg
js
xor
arpl
jmp
pop
dec
or
pop
or
add
push
loopne
or
xchg
pop
jbe
xor
sbb
xor
xchg
loopne
popa
pop
inc
mov
imul
pushf
inc
sti
ficompl
pop
inc
pushf
ficompl
sub
fadd
push
pop
pop
add
cmp
ds
lahf
jno
lods
arpl
movsl
rorl
lods
into
xor
and
dec
or
cmovs
cld
and
xchg
xor
inc
lea
test
mov
fwait
mov
cld
shl
stos
into
jns
xchg
imul
fisubrs
aaa
aas
xor
leave
mov
fiadds
int
rcll
ror
shl
mov
mov
inc
scas
mov
mov
rclb
lret
push
dec
or
jl
call
les
ss
cmp
cli
mov
jnp
adc
push
aad
sub
pop
xor
push
jno
dec
das
out
push
in
xchg
sbb
pop
sbb
mov
push
jae
aas
mov
mov
stos
testl
clc
stos
dec
js
and
mov
inc
lret
cld
adc
stos
jg
js
dec
cmp
ficoml
cmp
or
cmp
jne
dec
mov
cmc
adc
icebp
xchg
stos
aad
hlt
pop
jnp
int3
inc
jae
adc
and
xor
mov
or
cmp
sbb
stos
clc
xlat
push
cmpsl
aam
fistl
in
outsl
faddl
movsl
cmc
into
push
fcomi
cmp
or
lock
pusha
and
out
std
popf
mov
adc
push
pop
dec
pop
mov
pusha
sbb
cmp
push
mov
push
imul
sbb
in
mov
pop
adc
add
ret
mov
mov
pop
xor
fs
inc
loopne
jae
cli
fcmovnb
mov
mov
popa
mov
popf
dec
test
jecxz
sbb
cmp
into
sub
pop
or
jb
jnp
cmp
lahf
mov
ret
mov
loope
out
cmp
aas
mov
ficoms
push
insb
add
out
jo
arpl
pop
jno
inc
push
jns
in
xchg
push
loope
mov
or
mov
fmul
and
insl
rol
mov
ds
outsl
mov
ret
inc
pop
mov
dec
sbb
cmp
icebp
repz
movsl
test
rorl
rcr
lods
mov
mov
sti
loopne
or
xchg
add
inc
mov
cmp
mov
dec
jae
out
insb
jle
mov
out
insb
sti
xor
loope
and
xchg
mov
and
test
or
ss
scas
cmp
push
push
call
clc
js
repnz
shl
jp
mov
leave
stc
out
xor
sahf
movsb
pop
test
jnp
pop
sbb
pusha
cli
icebp
pop
popa
iret
aam
jnp
jmp
setbe
shll
les
cmp
outsb
push
sbb
sbb
imul
cmc
mov
bound
dec
repnz
mov
jge
adc
sub
idivl
lds
xchg
cmpsb
fwait
jecxz
lock
sahf
cmpl
inc
sbb
ja
inc
xor
je
adc
mov
cmp
sbb
pop
adc
loopne
xchg
mov
pop
lret
jns
aaa
pop
loop
xchg
cmp
pushaw
mov
cwtl
jae
mov
mov
xor
lds
adc
in
pop
enter
pop
pop
scas
adcl
pop
dec
or
das
xchg
xchg
adc
out
jg
pop
jp
xor
or
leave
jmp
sarb
xchg
mov
add
aas
jg
pop
cmc
sahf
fadds
mov
subl
dec
xchg
ljmp
mov
sbb
xor
lds
sbb
jnp
call
bound
push
movsl
iret
lods
xchg
mov
mov
stc
mov
popf
into
fwait
add
je
loope
mov
add
inc
stos
popa
daa
roll
enter
lret
sub
mov
in
mov
inc
lock
inc
leave
jge
rclb
add
lahf
adc
out
push
ret
popf
popl
mov
imul
loopne
inc
add
cmpb
xchg
call
xor
or
call
rorl
fs
xchg
jp
push
pop
scas
insb
sbb
outsl
lock
cltd
pop
mov
sti
frstor
in
jbe
roll
push
jae
shlb
push
or
dec
jo
les
inc
aam
mov
outsl
lds
xor
inc
push
nop
stos
mov
inc
inc
sub
xorb
aam
push
mov
xchg
outsl
es
mov
idivb
mov
fiadds
dec
xor
aad
mov
pusha
flds
mov
cltd
outsb
mov
imull
push
push
cmc
stos
sub
rolb
and
ljmp
inc
jecxz
mov
es
inc
inc
out
mov
mov
dec
dec
mov
lcall
pop
mov
bound
ficomps
and
add
jp
push
cltd
cmp
xchg
add
inc
addr16
int3
dec
or
cwtl
xchg
outsb
pop
adc
xchg
push
dec
dec
pusha
test
or
ret
xchg
popa
outsb
mull
jae
push
fcompl
adc
jecxz
jg
in
outsl
lret
cs
lcall
sub
icebp
sub
data16
and
pop
inc
aad
lods
fdivs
icebp
jg
daa
out
fdiv
jmp
push
mov
data16
dec
pop
shlb
cmp
in
rcl
sbb
jae
out
lahf
xchg
fstps
scas
cld
pop
cmp
dec
and
adcl
pop
mov
and
insl
imul
fldt
cs
pop
xor
and
cwtl
xchg
jo
and
jecxz
mov
pushf
test
stc
scas
mov
cmpsl
lahf
lret
sbb
aas
sub
lea
sbb
add
and
cmp
cs
add
imul
add
add
test
sbb
scas
lahf
and
js
cmp
ss
inc
xor
mov
fst
or
js
push
jne
lcall
fiaddl
and
xchg
mov
adc
xchg
dec
notb
xchg
hlt
jb
das
or
test
push
out
lcall
mov
sub
xor
sbb
cmpsl
adc
inc
add
xchg
jl
jg
pop
addr16
ljmp
loopne
test
jmp
sub
popf
fistps
jp
xor
jbe
inc
pop
push
inc
mulps
xchg
jnp
out
push
xchg
push
xchg
fwait
pop
outsb
add
scas
das
xchg
in
aas
ja
movsb
mov
sub
and
ds
sbb
push
mov
mov
sbb
xchg
sub
fsubrl
nop
clc
xchg
into
push
fdivrs
outsb
imul
ljmp
repz
aad
cmp
pushf
sbb
shl
stos
mov
hlt
xchg
sahf
imul
iret
cs
mov
repnz
addr16
cmp
lret
mov
or
jl
ret
push
xor
call
in
fsubrl
xor
or
dec
dec
out
add
xor
lods
xchg
mov
leave
sarb
mov
sbb
sub
xchg
cli
inc
ret
aas
test
scas
mov
sub
sbb
cmpl
sbb
enter
in
jmp
dec
or
hlt
out
mov
mov
stos
sub
xchg
fbstp
jl
and
and
push
jbe
pusha
notl
adc
cs
addr16
lcall
test
fcom
cli
mov
jmp
in
ss
jp
lret
add
jbe
xor
pop
dec
lods
insb
pusha
or
jo
fdivr
jp
mov
pop
mov
mov
aad
jmp
jl
inc
pop
sub
cmpsb
sbb
xchg
adc
ret
push
push
and
pop
jns
inc
or
jp
inc
fs
lret
adc
xchg
leave
xor
shl
iret
movsb
push
js
and
pop
scas
dec
sbb
test
mov
and
in
mov
lods
and
faddl
push
pop
outsl
ja
push
dec
icebp
iret
iret
lcall
mov
and
xor
das
stc
pop
scas
sbb
pop
fadds
xchg
out
aas
inc
movsl
stos
rcrb
je
push
xor
inc
mov
dec
jmp
mov
aaa
scas
mov
xchg
insl
outsl
ret
cmp
mov
cmpsb
fiadds
or
int3
pop
ljmp
inc
aaa
mov
mov
add
js
cld
add
rcrl
rorl
push
add
in
in
push
lods
xor
mov
dec
mov
pushf
or
cmp
scas
mov
jnp
or
mov
in
mov
decb
lcall
push
mov
cmc
shrb
cmp
ja
imul
arpl
and
ja
jle
mov
test
in
or
jmp
rolb
sbb
add
sub
mov
lods
mov
cli
ljmp
push
les
lahf
sub
pop
xchg
xchg
incb
mov
fs
clc
aam
push
xlat
mov
inc
xchg
rol
icebp
pop
xchg
test
push
imul
mov
faddl
and
push
inc
inc
jg
out
sbb
mov
bound
stc
mov
scas
push
push
ds
xlat
fsubl
cmpsb
pop
sahf
fcomip
jo
in
xchg
xchg
and
iret
pop
rcrl
js
insl
xchg
xor
dec
or
xchg
outsb
jne
enter
dec
das
incb
lahf
pop
in
lock
sub
xor
arpl
test
adc
xor
jmp
xor
xor
add
mov
neg
push
jl
pop
sub
sar
insb
push
xchg
int3
lcall
js
mov
ds
mov
pop
aas
push
shlb
pop
push
push
dec
pushf
xchg
dec
adc
aam
mov
mov
jbe
adc
cmp
pop
jl
std
mov
xor
hlt
pusha
ds
in
scas
sti
xrelease
pusha
jl
push
xchg
pop
pop
data16
inc
push
xor
jg
push
imul
jno
mov
pop
nop
xlat
addr16
add
xchg
mov
sbbl
hlt
or
mov
orl
mov
dec
pop
sub
mov
sahf
jns
jmp
ja
scas
pop
int
arpl
xor
das
lods
les
filds
adc
add
pop
inc
in
xor
xchg
addr16
rolb
cmp
mov
cmp
das
mov
xor
xchg
ret
cs
or
cmp
bound
xchg
jb
mov
cmp
adcb
pop
mov
dec
push
cmc
pop
in
adc
stos
inc
pop
jnp
mov
cmp
sahf
adc
das
ret
cwtl
sbb
notrack
shl
div
aad
mov
dec
in
popf
mov
pop
loop
push
mov
or
jo
xchg
popf
mov
xchg
rclb
fstpt
inc
mov
add
popf
lret
ret
inc
pop
daa
mov
test
push
dec
cmp
outsb
inc
push
outsb
pop
adc
fmull
mov
xchg
pop
xlat
clc
mov
pop
xor
push
loope
scas
out
push
jge
pop
push
je
lcall
add
mov
sub
mov
cld
jle
popa
fcmovnbe
xchg
out
sti
mov
adc
icebp
mov
les
clc
pop
ljmp
stc
mov
sbb
sbb
jnp,pt
jno
cmp
in
lret
repz
fs
pop
and
shr
mov
jne
mov
ss
bound
js
and
lods
clc
jl
js
inc
xchg
fnstsw
mov
jne
das
sbb
out
sti
scas
or
push
xor
mov
movsb
mov
shl
xchg
fwait
popf
clc
jbe
fildll
loopne
add
ja
test
or
add
in
push
cs
add
xor
xchg
in
int
xchg
cmp
inc
fadds
rolb
pop
or
pop
jle
or
cmp
sti
fsubrl
cs
mov
test
sahf
mov
pop
sbb
xor
mov
xor
test
fnstsw
inc
sbb
mov
jo
lret
inc
cmc
test
xchg
push
fiadds
or
mov
or
jb
repnz
lods
cmp
insl
jle
add
sub
fs
xchg
jnp
push
or
lea
cwtl
aam
sub
test
dec
xor
test
aam
add
push
or
out
add
sub
popa
imul
flds
shr
sub
add
mov
sti
jb
inc
imul
pop
int
lods
sub
sbb
popf
or
in
mov
je
addb
add
movsl
cmp
loope
and
and
lods
jne
dec
rcll
scas
adcl
sti
xchg
jno
cld
sti
cmp
shlb
sub
ret
cmp
xorb
enter
stc
pop
dec
std
jo
push
jnp
mov
addr16
inc
dec
sub
xchg
mov
lcall
xor
call
incl
xchg
imul
dec
push
popa
adc
mov
flds
orl
stc
sbb
stos
ret
icebp
xchg
cmp
push
stc
int3
outsb
xchg
mov
bound
mov
jl
repz
jl
cmpsl
lea
test
out
mov
inc
fdivl
dec
pop
cmp
push
pop
leave
mov
test
fucomi
call
les
lret
hlt
int3
inc
jg
xchg
imul
sbb
pop
sub
dec
jle
daa
pop
mov
inc
test
push
push
xchg
inc
daa
dec
icebp
test
dec
inc
je
add
loopne
icebp
jno
vhsubps
and
icebp
and
gs
test
push
sub
pop
jl
out
jmp
fstpl
scas
mov
sub
push
jne
test
xor
push
ds
mov
popf
sbb
xlat
sub
rcrl
inc
sbb
dec
sub
addb
or
mov
jae
lock
sbb
js
xor
mov
mov
fisttpll
lret
jge
or
aaa
insl
inc
add
adc
jns
test
push
cmp
mov
xor
addr16
push
cwtl
ret
sbb
in
mov
pop
hlt
inc
pushf
icebp
jbe
pusha
clc
std
test
and
jp,pn
enter
lods
fistpll
mov
shrl
inc
fidivrs
sub
xchg
add
les
inc
pop
insb
push
cmp
sbb
pop
jo
movsb
mov
push
pop
mov
popa
je
or
call
sti
inc
sub
push
inc
jns
mov
and
xchg
pop
mov
adc
gs
fistl
ljmp
jo
push
jne
lods
int
push
movsl
mov
pushf
inc
sbb
cmp
addl
push
jmp
mov
add
movsl
push
mov
pop
inc
sub
movsb
xor
push
pop
out
pushf
insl
fiadds
ljmp
inc
fs
dec
outsl
std
push
and
dec
pop
dec
cmc
fld1
cmpsl
stos
mov
cld
insl
inc
cs
add
pop
lret
inc
pop
jnp
test
xor
filds
loope
in
mov
fldenv
popf
jne
aas
push
pop
sbb
loop
dec
inc
cmc
call
cmp
and
jecxz
fnstsw
cld
sbb
jecxz
sub
out
shlb
add
push
mov
sub
jo
xor
aaa
pop
push
test
jl
lcall
outsl
mov
rorl
shrb
mov
add
mul
int3
pop
cld
sbb
int3
roll
jne
pop
fimull
test
mov
push
cmpsl
add
or
dec
aad
shll
add
mov
and
ja
ret
push
pushf
and
aam
movsb
pop
xchg
and
adc
fstpl
sbb
sbb
scas
cmp
or
repz
mov
dec
in
mov
cli
nop
fmul
lods
mov
inc
dec
xor
mov
push
and
or
fst
push
mov
inc
test
stos
cmp
stc
iret
test
loopne
cmp
insl
sub
fistps
lret
inc
sarb
push
mov
xor
sbb
scas
mov
loope
out
jno
or
cld
or
fninit
clc
pop
add
adc
mov
lds
cs
pop
mov
int
add
ja
lahf
jmp
add
and
iret
out
imul
adc
jae
daa
std
inc
push
ret
adc
dec
push
insl
inc
in
xchg
add
rcrb
mov
and
sub
push
in
adc
icebp
sub
lcall
lea
inc
into
sahf
sarl
mov
sub
xchg
outsl
push
out
dec
f2xm1
jg
lahf
addb
ss
and
cmpsl
stc
in
std
test
loope
in
cmp
xchg
push
ds
push
push
and
jge
cmp
fsubrp
cs
jg
push
lds
xchg
loopne
push
leave
inc
je
sub
pop
inc
daa
add
loope
mov
imul
imul
lock
pop
add
addb
adc
imul
sarb
scas
stos
push
test
arpl
daa
test
and
mov
adc
mov
fcoms
cmp
sti
ljmp
push
sbb
into
idiv
out
adc
pop
call
sbb
add
sbb
jge
dec
stc
xor
call
scas
and
mov
xchg
cli
mov
jae
popa
imul
mov
mov
adc
sbb
lea
stos
imul
ja
pop
mov
mov
faddp
mov
pushf
mov
in
dec
out
mov
jle
adc
scas
scas
ja
aam
add
jg
icebp
loopne
push
movsb
sub
adc
mov
bswap
adc
jg
dec
cmp
lods
sbb
enter
pop
shr
mov
jbe
mov
mov
or
cmpsb
sahf
xor
lret
callw
push
cmp
adc
das
mov
cmp
pop
mov
movsl
aam
ss
mov
aaa
cmp
cmp
lcall
mov
push
xchg
movsl
mov
xor
iret
daa
stc
outsb
fs
rcrl
jbe
fadds
cmpsb
ja
add
lods
mov
adc
das
xor
pop
mov
add
mov
mov
idivl
andb
add
sub
push
inc
fwait
xchg
das
andb
lret
stc
or
mov
incl
int
int3
ss
dec
psubusw
into
fs
fmull
add
scas
movsl
test
call
ja
insb
push
mov
scas
xlat
jg
mov
dec
mov
imul
fs
in
dec
fisttps
mulb
mov
data16
sbb
push
and
push
or
pop
repz
mov
in
mov
xchg
add
mov
sbb
divl
mov
jne
pop
fsub
dec
jae
mov
call
pop
sar
pop
cmp
or
mov
test
insb
repnz
mov
dec
andb
dec
push
nop
cmp
lods
mov
xchg
cmp
es
mov
fisubrl
pop
fcompl
ljmp
dec
dec
adc
int
dec
mov
or
push
adc
xchg
imul
pop
jecxz
cmp
repz
pushf
js
sbb
push
aas
into
fadds
mov
out
sbb
jb
imul
push
jg
add
fwait
stc
pop
xchg
and
movsl
in
pop
xor
sahf
and
or
rcl
ja
or
in
dec
sub
mov
aas
cmp
sbb
into
and
jno
jbe
add
push
inc
inc
insb
out
mov
push
dec
fildll
lcall
xchg
aaa
call
lods
out
xor
std
pop
xchg
cmpsb
cmpl
ljmp
fs
xchg
pop
imul
push
sub
stos
lds
push
pop
push
xchg
lcall
test
stos
or
lods
push
xchg
or
inc
inc
cli
pop
aam
add
rcrl
addl
imul
adc
pop
dec
cmpsl
ljmp
into
inc
add
push
loopne
cmp
ret
lret
ljmp
xor
push
jnp
data16
xor
jne
ja
rorb
pop
xchg
dec
icebp
adc
and
cmp
jge
pop
in
sbb
les
xor
std
cmp
repz
mov
into
xor
ds
iret
push
jnp
repz
inc
push
data16
xchg
lock
push
xchg
mov
int3
cmpsl
inc
jmp
lea
test
dec
in
mov
cs
lock
inc
or
test
cltd
push
mov
pushf
push
cmp
and
sbb
in
adc
ret
sub
pushf
fbld
sub
mov
cltd
mov
xchg
loop
pushf
orb
or
ret
and
fdivp
hlt
test
jg
push
lds
inc
and
pop
hlt
aaa
xchg
aaa
in
lahf
lods
xchg
jb
adc
outsl
mov
ljmp
push
repz
pop
jbe
pop
push
add
inc
mov
test
sub
pop
into
fcoml
mov
mov
lcall
mov
mov
push
xor
xor
inc
push
movsl
adcb
je
jbe
pop
push
inc
jbe
xor
es
mov
mov
sbb
mov
aad
xor
loope
int
push
int
icebp
add
inc
sahf
ficoms
push
lret
cmp
push
and
dec
jge
imul
pop
cld
jge
or
fcoms
insl
dec
mov
aad
rol
bound
push
sbb
xor
push
test
andl
sub
pusha
and
dec
enter
addl
mov
or
push
xchg
mov
adc
jl
call
iret
and
inc
inc
dec
daa
aad
sbb
movsl
dec
test
jge
movsl
pop
or
test
add
xchg
mov
cmp
sbb
ret
aam
and
jmp
adc
test
fisubrl
or
aad
add
mov
mov
or
in
and
sub
cld
cltd
mov
sti
aas
push
mov
sub
mov
stc
push
inc
in
adc
add
idivl
cmpsb
cltd
repz
pop
clc
push
adcb
int3
fcomp
dec
movsl
cmp
pop
lret
fdivs
out
mov
les
aas
xchg
xor
mov
ja
pusha
leave
jp
and
fwait
scas
mov
rcr
aam
push
add
mov
aad
sbb
mov
test
mov
adc
xor
dec
bound
lret
mov
mov
cmc
jne
pop
popl
loop
cld
mov
mov
add
lea
pop
fnsetpm(287
dec
add
add
mov
add
jmp
imul
cmp
sbb
in
sub
stos
xchg
xor
add
lods
jle
mulb
mov
mov
icebp
lcall
xchg
test
xor
nop
jae
xlat
inc
popf
adc
sub
push
jge
xor
mov
lods
pop
mov
jg
lahf
repnz
jb
shr
popf
mov
xor
mov
inc
jno
mov
sub
sub
jnp,pn
jp
jo
and
mov
repnz
jge
pop
and
inc
push
jne
sub
mov
adc
push
lcall
fistpl
sahf
sbb
and
push
dec
adc
cmp
aaa
pop
push
xchg
ja
mov
and
ss
ror
sbb
fcoml
data16
sbb
cwtl
test
inc
aad
fdivrs
les
jb
mov
jb
subl
rcl
lcall
pop
je
and
and
adc
or
cmp
or
sub
and
fiaddl
pop
mov
sbb
test
jns
inc
rcrb
sbb
imul
ror
fwait
xor
mov
fcomip
cmp
adcl
mov
rcll
aas
aas
cwtl
inc
jns
mov
mov
adc
lods
imul
cmp
mov
mov
cmpsb
push
jns
imul
jmp
xchg
rclb
sub
pop
decl
ret
test
scas
mov
ss
nop
jbe
pop
arpl
pop
movl
xor
int
sub
cmc
stos
mov
cmpsb
mov
xor
sbb
or
mov
dec
mov
int
addr16
adc
dec
lods
push
dec
inc
cli
and
insl
sbb
push
cmpsb
pop
mov
sarb
pop
sbb
shrl
cmp
stos
dec
inc
jnp
cmpsb
into
sbb
in
out
jge
jne
mov
inc
out
pop
test
and
jns
fidivl
pushf
push
cmpl
dec
cmp
push
xor
and
fdivr
or
cmp
and
mov
testb
dec
dec
dec
mov
add
pop
fbstp
outsl
lret
add
xor
mov
std
out
es
pop
push
and
cld
shl
dec
outsb
je
mov
sub
outsb
popa
test
push
sub
int3
xchg
mov
pop
lcall
and
loope
xchg
data16
push
arpl
mov
sub
mov
push
sub
int
pushf
fs
mov
popf
and
sub
cld
mov
leave
dec
shlb
lock
mov
or
pop
push
sub
fidivs
lret
sub
xchg
aaa
dec
and
jb
in
int3
into
jle
imul
cli
xchg
and
cmp
mov
fbld
push
in
push
in
jge
xchg
rcrb
xchg
add
adc
xorb
fwait
add
lea
xchg
push
ret
add
mov
xchg
or
jg
push
fidivrs
cmpsl
jo
fstpt
xchg
xor
add
inc
cwtl
cli
addr16
dec
std
into
and
stc
imul
lcall
std
cltd
gs
call
insb
stos
fnstsw
imul
push
add
push
mov
lods
mov
xor
enter
jl
je
xlat
clc
mulb
add
arpl
out
adc
ficompl
mov
inc
shll
nop
cmp
pop
sub
cmp
in
sbb
push
enter
subb
or
fndisi(8087
in
loopne
loopne
sub
jbe
int
insl
in
loope
lret
in
mov
adc
inc
out
or
imul
sbb
push
test
pop
int3
call
push
lods
cli
aam
cwtl
jle
pop
jbe
adc
push
in
cmp
gs
push
test
nop
ss
arpl
mov
insb
clc
rclb
shll
scas
push
in
popf
push
int3
jl
add
pusha
and
mov
mov
or
sbb
lahf
addr16
xchg
adc
adc
xor
test
lods
sub
fstpt
dec
pop
mov
rcrb
fimull
pusha
push
jmp
xchg
xchg
out
out
xchg
sti
shr
lret
les
aad
sbb
shrl
aam
xchg
testl
add
push
pop
mov
xorb
xlat
jb
roll
push
inc
test
leave
test
add
push
aas
add
pop
push
test
js
sub
lret
bswap
xchg
hlt
add
add
insb
jl
flds
jns
inc
aaa
xlat
scas
cmp
or
adc
rorb
inc
mov
sbb
cmp
ljmp
test
aaa
jns
popa
sbb
fnstenv
pop
ja
xchg
add
lcall
pop
ja
out
cwtl
sub
clc
push
fisttpll
in
js
loop
pop
cs
sbb
lahf
dec
jbe
sahf
sahf
adc
pop
jmp
dec
aas
inc
out
mov
mov
scas
jno
adc
pop
jl
cmp
out
shll
dec
insl
xor
popa
fld1
fnstsw
in
int
adc
out
daa
xor
xchg
sub
mov
mov
aas
daa
mov
roll
std
outsb
xchg
cs
or
ret
adc
mov
scas
mov
add
push
frstor
pushf
fnstsw
rol
pop
ja
cld
into
jns
mov
mov
pop
test
xor
and
pusha
daa
in
fwait
fwait
iret
mov
mov
add
push
add
sub
xchg
cli
movsb
fnstenv
xor
cmp
mov
or
outsb
adc
sub
mov
mov
movsl
js
pushf
enter
call
outsl
dec
xlat
and
nop
out
mov
out
xor
addr16
add
sbb
inc
jmp
mov
jbe
mov
add
popf
or
scas
push
mov
sbb
cmp
jmp
fstpt
mov
jns
jge
pop
hlt
insb
in
jae
dec
in
xchg
push
mov
aaa
mov
int
xchg
iret
scas
icebp
mov
clc
adc
sub
enter
pushf
mov
sub
mov
pause
aad
jnp
shlb
xchg
lret
push
push
jmp
mov
aad
mov
push
cmc
insl
cmpsb
mov
sbb
jno
adc
lret
pop
pop
dec
cmp
mov
xchg
aam
out
mov
es
push
test
xchg
rol
mov
movsl
xchg
ja
enter
mov
leave
push
and
pushl
aad
sub
pop
cmpsl
lds
notl
and
nop
cmpsb
jmp
ds
fcmovnb
js
rcrb
or
repnz
add
cmp
sub
int3
js,pt
neg
cmp
xchg
jp
setns
sub
clc
mov
rol
data16
lret
out
movsl
sub
mov
xchg
sbb
add
sti
or
rol
sub
sub
or
mov
pop
ss
mov
mov
lret
mov
and
add
mov
xchg
adc
xchg
or
stos
mov
leave
idivb
roll
push
out
jge
push
clc
pop
jnp
in
enter
stc
jge
cmp
mov
jb
push
lea
xchg
sbb
daa
cmc
mov
sub
cmp
dec
bnd
jns
mov
mov
adc
jmp
stos
jge
mov
in
outsb
pop
push
xor
jp
xchg
xor
insl
mov
and
fdiv
loopne
jo
inc
dec
jge
mov
mov
mov
clc
lds
pusha
mov
sub
cmp
loop
pop
mov
mov
pushf
cmp
fdivrs
loopne
mov
les
push
lock
movsb
stos
addr16
and
mov
cld
movsb
add
in
mov
out
int3
outsl
xor
sub
test
cmp
hlt
imul
lahf
mov
dec
jle
jecxz
jbe
les
cmpb
push
sub
jo
daa
add
adc
iret
out
lock
jmp
cmpsl
pop
adc
push
in
out
dec
inc
fwait
push
roll
pushf
xor
dec
inc
aam
and
scas
stos
data16
scas
sbb
sbb
sbb
push
sub
movsb
xchg
pop
pop
insl
fwait
out
cmp
sbb
mov
fld
shl
jno
mov
stc
mov
cs
test
xchg
ret
and
cli
leave
insl
sahf
add
rorl
fcmovnu
inc
adc
sbb
mov
dec
adcb
sub
push
jge
pop
stc
pop
test
fwait
xchg
arpl
popa
and
dec
scas
inc
jae
mov
stos
fidivrs
je
cmpb
shll
test
mov
sarl
dec
mov
mov
ljmp
pop
cmp
dec
add
dec
in
fsubl
gs
push
sub
clc
or
mov
sbb
mov
cmp
fcomi
inc
ss
pop
popf
fucomip
imul
cmpb
addl
cmp
cmpl
mov
rcl
adc
and
inc
dec
cmpsl
fisttpll
outsb
pop
dec
filds
out
repz
cmpl
rclb
jb
jns
popa
daa
adc
lret
xchg
pop
cmp
add
aas
sbb
push
and
in
es
push
out
or
push
fsubs
sbb
add
dec
xchg
xchg
fimull
call
xor
cmpsl
mov
mov
adc
popf
addr16
pop
sahf
add
xor
ljmp
or
mov
jg
add
arpl
mov
sub
adc
enter
xchg
cmp
xchg
xchg
mov
pop
scas
fidivl
mov
xchg
out
xchg
fstl
xchg
call
call
cltd
cld
mov
mov
test
jle
mov
push
ljmp
sbb
adc
dec
popa
les
insb
cmp
ret
push
or
mov
and
les
arpl
xor
sbb
dec
and
movsb
lret
cmp
aam
jge
cmp
sbb
imul
arpl
mov
mov
or
cmp
fmulp
xlat
aad
pop
jl
rcrl
jno
test
fdivp
push
sahf
rclb
push
adc
xor
adc
dec
mov
es
pop
and
cmp
mov
dec
rcll
xchg
xor
and
jbe
lcall
test
pop
mov
mov
lcall
dec
pop
xchg
icebp
loope
sub
xchg
and
adc
lret
ljmp
lret
dec
and
fdivrl
stos
cmpsl
push
outsb
and
jg
je
jo
out
arpl
imul
outsb
aam
xchg
in
mov
dec
push
mov
test
in
sahf
mov
push
popa
notb
scas
xchg
jg
js
bound
inc
pop
int3
xor
aad
out
mov
cwtl
push
icebp
jecxz
aad
fs
ret
in
dec
lea
call
fcmovu
out
movsb
icebp
jae
out
enter
inc
or
leave
xor
ror
popf
sbb
js
ljmp
clc
cmpsl
jbe
push
adc
and
jb
into
fnstsw
push
add
and
sbb
cmp
xor
das
cmp
addr16
mov
push
dec
jp
mov
test
add
movsl
sbb
add
gs
sub
mov
scas
popa
and
mov
test
mov
pop
fmull
stos
imul
testb
jle,pt
cmc
fnstenv
mov
sti
mov
cmp
ret
dec
jns
jne
mov
popl
or
sub
push
cmp
dec
test
es
aaa
jecxz
aam
or
scas
jmp
jecxz
xlat
pusha
sbb
into
int
sbb
inc
dec
xchg
jp
in
pop
inc
jmp
xchg
test
mov
leave
movsb
or
daa
nop
loope
neg
out
mov
add
in
lods
sti
arpl
add
cmpsb
clc
jmp
cmpsb
jo
test
popa
nop
pushf
xchg
es
je
sub
mov
and
addl
imul
adc
popf
js
pop
sbb
nop
jo
mov
mov
or
fs
mov
jl
mov
xorl
std
lcall
jge
lea
pop
cs
call
in
and
imul
inc
adc
mov
in
arpl
dec
lret
adc
cwtl
inc
repz
cli
mov
icebp
cwtl
push
mov
roll
sub
xchg
mov
ja
std
loope
cmp
cltd
adc
test
cmp
lahf
cmp
lcall
ss
mov
sar
push
xlat
dec
subl
lret
sbb
xchg
scas
mov
sahf
int
sahf
adcl
add
pop
arpl
jne
popa
loopne
cmp
sbb
jmp
push
mov
lea
negl
mov
rorb
dec
hlt
icebp
mov
cwtl
adc
stos
sub
xchg
cmc
in
je
inc
loope
aas
add
out
cwtl
lods
dec
lods
shl
xlat
jp
dec
rcrb
and
add
sti
mov
pop
scas
push
lea
push
test
lods
jo
adc
ret
dec
imul
dec
out
xor
push
ud2
mov
inc
out
jae
inc
arpl
xor
pop
nop
xchg
lret
push
mov
add
in
int
filds
leave
movsl
cmp
dec
insb
js
insl
insl
pop
jmp
and
call
mov
movsl
mov
jecxz
dec
out
pusha
cmpsb
aas
les
and
enter
out
dec
xor
orl
test
aam
daa
clc
mov
inc
iret
lea
sarb
jno
out
into
xchg
inc
mov
push
ret
or
push
pushf
fcompl
fwait
popf
jecxz
pushf
insl
rorl
movsl
push
xchg
and
and
cmp
dec
hlt
fcmovnbe
stos
push
fbstp
test
enter
dec
fdivrs
dec
dec
mov
pop
dec
shll
iret
shll
imul
adc
push
ljmp
jbe
dec
push
adc
xorl
dec
inc
push
sub
js
imul
out
pop
mov
or
nop
sarl
push
out
cmpsb
aas
xor
pushf
add
loop
in
mov
int3
loopne
xchg
add
das
nop
jo
add
out
xchg
inc
pop
cld
xchg
les
xchg
cli
cmp
lahf
and
mov
push
mov
loope
fwait
lret
inc
push
dec
loope
pop
xchg
inc
insl
int
and
stos
mov
scas
dec
scas
inc
pop
shrb
pop
mov
mov
sub
neg
mov
add
dec
orl
ljmp
movsl
sub
cmp
mov
inc
pop
inc
sahf
push
inc
mov
lret
sbb
fadds
ret
jmp
mov
addr16
pop
insb
sbb
cli
bt
cmpb
adc
xchg
outsl
jno
xor
call
push
nop
jmp
sbb
xchg
imul
mov
push
mov
xor
and
xchg
into
dec
pop
push
mov
and
push
stos
shll
adc
sarl
scas
daa
stos
or
inc
bound
in
inc
pop
jp
xchg
mov
mov
shlb
xchg
xchg
andl
in
mov
or
sti
push
cmp
xor
fld
mov
pushl
sbb
sbb
fisubrs
adc
inc
testb
jnp
rcrl
popa
lods
std
cli
jbe
mov
in
and
es
sub
jb
mov
add
xchg
push
or
ret
daa
lcall
pop
lret
push
bnd
jns
cmpb
xor
std
aaa
out
push
jmp
jecxz
cmp
imulb
jmp
rol
ret
pop
mov
adc
sub
inc
pop
sti
push
cmp
lods
cmpsl
and
addr16
or
xor
push
xor
loop
imul
aas
or
sub
shrl
clc
jmp
arpl
mov
push
push
movsl
rclb
xchg
sbb
repnz
cmpsl
or
and
jo
mov
pop
test
pop
adc
das
push
fdivr
add
sub
addr16
add
mov
aad
shrl
dec
sub
je
movsl
daa
sbb
mov
nop
aam
and
jno
stos
jl
inc
pop
stos
cli
mov
add
xchg
mov
mov
xor
push
mov
lcall
dec
scas
aas
or
inc
pushf
lds
mov
int
and
repnz
sub
xor
pop
movsl
sbb
lods
sbb
mov
mov
mov
or
mov
pop
into
test
mov
adc
imul
rol
push
repz
cmc
dec
mov
rorb
cmp
ds
out
push
dec
mov
ror
ss
mov
subb
sbb
push
in
inc
sahf
and
out
pop
mov
test
clc
pop
cli
or
or
test
rcrl
les
ret
cli
sti
mov
cmp
shrl
cmp
loope
or
jmp
push
dec
and
imul
outsb
xor
pop
xchg
sub
push
fmul
push
rep
dec
shlb
mov
inc
mov
add
add
xchg
mov
lcall
jae
pop
dec
or
mov
adc
xorb
jae
dec
push
dec
mov
sbb
mov
addr16
stc
movsb
pop
xor
mov
jecxz
cmpsl
loop
sbb
and
test
jp
mov
clc
and
sub
mov
jne
add
add
out
sub
mov
mov
or
push
bound
cmp
push
in
cmpsl
lds
xchg
fcmovnbe
xor
pop
cmp
inc
pop
and
xchg
int
pusha
xchg
call
arpl
bound
dec
lahf
test
repz
push
jecxz
inc
aam
mov
lcall
and
xor
push
dec
bound
mov
xor
adc
das
leave
fdivrs
adc
or
xchg
push
xor
xlat
fs
jecxz
add
test
sub
xor
dec
xor
jle
adc
mov
add
sti
jp
dec
add
loopne
dec
pushf
jns
mov
sub
dec
lods
sub
or
cli
dec
mov
stos
xor
js
cld
shll
adc
cmp
or
fidivl
add
sub
rcl
shrb
divb
dec
sti
outsl
sbb
lods
xchg
ror
mov
nop
push
inc
add
jg
bound
into
mov
xor
push
dec
mov
int
add
test
dec
test
pop
adc
pop
sub
stos
xor
les
dec
fdivrs
pop
sbb
sub
push
sbb
movsb
hlt
jg
pusha
push
cmpsl
push
xor
jmp
sbb
lea
push
jb
mov
in
mov
add
sti
pop
inc
pusha
cmp
cmp
jecxz
xchg
insb
test
rorb
xchg
aas
fiadds
sbb
or
ret
das
ljmp
cmp
jge
mov
add
insb
jo
xchg
push
fstpl
out
and
or
out
mov
mov
lret
insl
mov
jmp
and
fwait
loop
inc
gs
enter
mov
je
or
not
fwait
mov
pushf
inc
jmp
dec
fwait
inc
sbb
fwait
sub
jne
cmp
leave
jbe
shrl
push
in
arpl
lahf
insl
xchg
pop
stos
xor
ja
cmp
iret
and
scas
je
jnp
mov
push
leave
hlt
lea
and
and
scas
xlat
xchg
xchg
cmp
dec
xchg
jns
sub
xlat
add
aam
jno
test
jmp
popf
or
adc
xchg
mov
jle
nop
or
push
xchg
inc
xchg
jg
in
xchg
xchg
dec
sub
mov
pop
es
and
jl
mov
ds
in
xchg
jl
mov
xchg
jg
fwait
xchg
subl
push
scas
push
lock
sub
add
xchg
push
jno
xchg
outsb
sub
dec
dec
popf
stos
or
pop
sub
clc
insb
jmp
in
xchg
mov
stos
mov
in
push
sbb
jl
jl
or
mov
mov
add
jo
lret
movsb
push
test
pop
imul
mov
and
pop
mov
and
fmull
roll
sub
pop
pop
movsb
mov
scas
cmpsl
mov
pop
and
cmc
pop
and
adc
adc
mov
imulb
fildll
push
mov
dec
es
cmp
or
loop
lods
cmpsl
add
xor
addr16
mov
pop
in
xlat
push
stos
aaa
mov
mov
lea
dec
loop
arpl
enter
ja
jae
pop
fwait
xchg
sub
cmp
adc
lcall
add
sahf
movl
adc
rclb
ja
addr16
into
or
movsb
ret
mov
mov
xor
insb
lcall
xor
insb
xor
repnz
into
jecxz
rorl
xchg
jp
pop
clc
shl
cmpsl
cmp
loop
mov
mov
ja
repz
jp
xchg
add
jp
push
das
mov
sub
push
add
aas
adc
lods
push
imul
arpl
push
sbb
movl
mov
rorb
push
dec
jl
mov
sub
dec
cmp
jno
out
mov
mov
imul
rcrb
ds
outsl
pop
in
std
dec
mov
sub
push
mov
daa
cmpsb
cli
mov
fisubs
push
inc
pop
mov
push
xchg
push
in
cmp
mov
hlt
negl
call
sbb
test
clc
mov
dec
xchg
pop
mov
repz
ljmp
in
mov
nop
mov
lret
gs
jbe
mov
mov
xor
jns
push
lods
mov
xchg
or
sbb
fdivr
lock
pop
or
jbe
jmp
fsubrs
pushf
mov
sub
jae
dec
nop
ret
int3
add
mov
add
leave
push
int3
inc
fbstp
nop
and
lcall
loope
and
sbb
js
inc
clc
ret
adc
xorb
lock
mov
xor
js
mov
push
or
dec
sbb
push
add
les
and
mov
pop
pop
orl
sbb
mov
into
jb
not
cmp
mov
sbb
adc
jg
cmp
ds
inc
aaa
lock
or
inc
push
aad
jo
mov
hlt
mov
cmpsl
cmp
xor
sbb
jne
inc
ret
dec
push
or
test
fmul
mov
shrl
pop
pavgb
xchg
out
les
sbb
test
push
mov
sbb
mov
mov
fs
push
sbb
int3
push
bound
aad
dec
aas
push
imul
push
scas
and
int
adc
fbstp
push
inc
into
xor
sahf
mov
cmp
mov
rorb
xchg
xorl
adcb
out
xchg
std
insl
out
mov
mov
movsl
and
int3
movsb
mov
pushf
insb
jecxz
fsubrl
adc
outsl
adc
jns
xor
std
xlat
stos
push
pop
push
iret
in
int
insb
dec
rcrb
dec
icebp
in
lahf
push
fisttpl
dec
sahf
mov
xor
inc
aaa
jnp
adc
inc
pop
mov
loop
mov
out
popf
jp
inc
lods
jl
ljmp
lock
sbb
aas
jp
add
fnsave
inc
mov
mov
js
push
in
icebp
and
sub
movsl
xor
cmp
aam
mov
mov
daa
and
ret
test
sti
loop
scas
mov
sarb
and
sarb
sub
pop
mov
mov
mov
mov
and
hlt
add
ljmp
dec
push
jnp
mov
es
mov
sbb
sti
mov
mov
dec
xor
aas
push
pop
sub
rcrl
mov
sbb
mull
in
pushf
test
mov
test
in
xor
lahf
push
arpl
jp
scas
or
mov
mov
jge
push
push
add
pop
orl
xchg
push
nop
std
mov
sbb
dec
test
scas
sbbl
sahf
sbb
out
adcb
cltd
fwait
cmp
jge
adc
adc
lock
les
stos
inc
or
add
xchg
aas
popf
mov
movsl
and
pop
push
xor
mov
xor
bound
gs
xor
jns
sti
cwtl
dec
cmpsl
mov
sub
imul
xchg
pop
call
or
sti
outsb
dec
and
cmp
xchg
outsb
xchg
stos
and
unpckhps
xchg
or
clc
and
or
stos
int
or
loope
push
inc
push
pop
or
mov
xor
jp
pop
sbb
mov
out
jns
cmp
out
cmp
inc
testl
test
jmp
scas
or
inc
in
xor
ss
sbb
imul
dec
mov
rclb
inc
andb
inc
lds
xchg
xchg
push
jno
mov
push
pusha
adc
xchg
mov
test
pop
mov
xchg
out
mov
movl
inc
push
adc
adc
xor
and
insb
mov
jl
rcrb
inc
rcrb
nop
jae
aaa
jae
movsb
mov
pop
jle
pop
gs
test
or
lock
jl
cmp
mov
gs
xorl
arpl
out
js
sub
cmp
aaa
add
inc
in
push
jo
push
jne
cld
xor
fadds
sub
add
xchg
push
ljmp
cmpsb
mov
sub
rolb
out
jp
and
in
pop
and
mov
je
or
std
sbb
push
mov
add
pusha
sub
fdivs
movsb
pop
loopne
scas
loope
movsb
push
iret
jg
dec
sbb
mov
out
jbe
lcall
cmp
pop
cli
sarb
test
mov
enter
fisubs
sub
dec
sbb
arpl
idivl
sub
jl
scas
jl
lret
lock
je
gs
xchg
jno
adc
sbb
cmpb
movsb
pushf
lret
rcrb
aas
xchg
inc
xor
xorl
xchg
das
jle
adc
cmc
push
mov
mov
in
stos
adc
sub
mov
gs
sbb
xor
cmp
push
jge
pop
aam
mov
cmp
push
dec
insl
shlb
jge
push
mov
sbb
fs
mov
mov
mov
rcl
imul
mov
xor
std
lods
iret
fildll
adc
inc
xchg
mov
movsb
push
jg
fsubrs
fsubrs
push
add
xchg
pop
loopne
and
movsb
scas
dec
xchg
add
std
adc
pop
es
sub
mov
js
cmp
or
mov
cmpsl
adc
je
shlb
or
fs
cmc
or
popf
and
dec
pop
arpl
mov
in
ret
mov
xchg
mov
or
cwtl
stc
push
out
outsl
mov
mov
xchg
mov
adc
insb
repnz
push
sti
outsb
mov
mov
jo
sub
fidivrs
mov
pop
cmp
setae
aaa
xor
push
ljmp
pop
mov
jge
clc
fstps
mov
in
out
cmpsl
call
xor
popf
gs
stos
out
mov
addb
push
sbb
or
sbb
sub
out
sbb
dec
mov
jl
outsl
test
mov
sub
pop
loop
in
jmp
fcmove
popf
adc
xchg
add
pop
in
pop
dec
aas
int
inc
adc
or
ds
inc
push
das
sbb
add
int3
into
imul
ja
and
fisttpll
gs
fstpl
repz
cs
xor
ss
add
fidivs
shll
in
adc
daa
sub
ds
jle
jp
sti
add
imul
iret
push
jnp
xor
push
jb
xchg
jb
scas
cmp
mov
loope
sbb
cmp
idivb
mulb
lds
add
mov
and
mov
mov
xchg
aad
sti
xor
scas
dec
dec
xlat
xor
jg
sbbl
add
cmp
mov
mov
pop
stos
mov
lods
loopne
arpl
mov
ss
pop
out
jne
adc
push
and
test
pop
xchg
mov
cld
pop
int
inc
xor
int
outsb
rolb
inc
aam
pop
shl
push
enter
mov
cmp
movsb
or
imul
xorl
mov
and
hlt
cmp
xorl
bound
stos
fs
pop
ret
int
adc
sub
xor
xchg
add
mov
mov
push
inc
scas
cwtl
or
nop
loope
mov
xchg
jge
jecxz
lods
out
dec
adc
clc
push
aam
testl
cmp
dec
mov
outsl
and
in
sbbl
loopne
cmp
mov
pop
sbb
stos
jbe
or
adc
jl
inc
push
dec
mov
mov
cmpsb
lret
jne
xorb
sub
pop
cmp
hlt
je
push
fs
fsubr
add
add
and
cmp
fs
xor
mov
cmpl
push
sub
pop
sahf
jle
in
repnz
adc
xlat
sub
jge
mov
jl
mov
add
jmp
push
or
xchg
pushf
and
xchg
js
and
mov
jnp
fdivrl
jecxz
fnstenv
mov
sbb
mov
mov
lahf
cwtl
fsubrs
jo
lcall
mov
add
int3
aam
and
lods
jl
ds
daa
add
cmpsb
arpl
inc
out
add
insl
in
xchg
sbb
or
jno
dec
pop
mov
pop
mov
notl
dec
xchg
sbb
movsl
add
mov
mov
push
jns
mov
and
push
xchg
adc
inc
iret
sbb
bound
cmp
adc
shl
mov
iret
aam
jo
jno
sub
dec
aas
add
mov
fcomi
or
and
lret
mov
mov
sub
jb,pt
push
lock
sarb
pop
stos
loop
das
jle
lret
in
inc
inc
sti
adcb
sti
jbe
jmp
ja
inc
push
lods
inc
in
lcall
daa
pop
sbb
ds
fmuls
pop
fpatan
sahf
pop
in
pop
pushf
ret
mov
add
aad
jmp
iret
incb
mov
push
scas
cmp
rorl
lds
test
pop
adc
stc
ja
arpl
sub
lcall
aas
pushf
or
inc
out
bound
jge
pop
push
and
out
push
mov
jp
data16
jne
arpl
ljmp
std
mov
gs
mov
rorb
sarb
ja
outsl
jbe
push
das
mov
mov
jbe
xchg
shlb
in
movsb
in
aaa
pop
in
popf
out
jmp
fstpt
pop
lea
out
in
sub
mov
insb
mov
dec
jmp
mulb
daa
xor
mov
in
mov
rorb
mov
icebp
shl
mov
imul
sub
mov
adc
ret
jne
leave
scas
insl
add
jmp
test
movsb
xor
mov
sbbl
sbb
mov
fcoms
aam
negb
inc
jno
jg
cmp
and
imul
mov
in
or
and
mov
mov
ss
aas
jne
cmp
jl
adc
sbb
sub
add
push
pop
push
fs
mov
jns
sbb
inc
inc
loop
jle
ljmp
xchg
push
add
hlt
popf
je
mov
call
loopne
test
push
sub
aam
iret
xor
sahf
dec
ja
stc
fwait
dec
pop
pop
pop
pushf
aad
leave
dec
cmp
and
fdivl
out
mov
mov
xchg
xor
in
stc
popf
das
jecxz
popa
in
xor
packuswb
and
movl
mov
cmpsl
mov
les
ret
psubd
sbb
pop
xchg
adc
ljmp
lea
push
jmp
sub
and
or
cmp
inc
pop
in
cmp
lock
xlat
mov
popf
jo
push
insb
add
xchg
insl
js
adc
cltd
daa
ficoml
sub
or
or
pop
shlb
inc
loope
sub
jl
pop
inc
push
outsl
adc
push
aam
ret
mov
add
clc
mov
mov
jb
cwtl
push
std
lahf
movsl
insl
push
aas
testl
jl
mov
jmp
mov
pop
lret
or
pop
shlb
xchg
loopne
ss
mul
xor
add
clc
mov
cmpsb
xor
mov
jmp
sub
in
mov
cmp
ret
out
and
xchg
sahf
add
sub
inc
in
pop
dec
adc
mov
pcmpgtd
sbb
jmp
jp
lahf
outsl
jnp
lret
and
sbb
adcb
fmuls
mov
movsb
sbb
hlt
je
in
xchg
push
aas
add
mov
jmp
or
and
add
xchg
xor
in
repz
aam
cld
je
adc
pop
push
out
out
je
cltd
es
pop
or
loop
xchg
xlat
rclb
push
loop
add
push
cmc
mov
fimull
push
in
sbb
cmc
clc
enter
cwtl
insl
repz
or
dec
jle
add
iret
scas
xor
mov
add
insb
ret
jmp
insl
rcr
mov
and
push
xchg
push
mov
sbb
and
aad
aas
mov
push
fdiv
test
xchg
add
inc
shll
gs
pushf
push
mov
xor
stos
bound
dec
iret
mov
mov
lret
sahf
jg
out
mov
loop
xchg
icebp
or
loope
inc
loop
outsl
inc
ret
iret
mov
cmc
test
cmpsb
mov
xchg
out
ror
jl
shll
popf
test
xor
jnp
stos
sub
pop
aad
cwtl
mov
fcoml
inc
lret
stos
sti
in
jne
shrb
xchg
push
ss
in
and
push
sub
sub
sbb
xor
inc
pop
mov
arpl
inc
insl
sub
mov
daa
bound
dec
popa
sarb
popa
push
faddl
fistpll
pop
push
xor
pop
pushf
push
sbb
and
js
int3
repnz
and
fwait
lock
pop
outsl
xchg
sub
movsl
dec
pop
push
fcompl
mov
push
cwtl
fildl
insb
in
decb
das
jl
add
sub
out
shll
and
add
mov
cmp
fildll
mov
mov
push
in
jnp
mov
icebp
mov
leave
or
sbb
rcrb
add
movb
mov
sub
and
dec
and
fcoms
test
gs
iret
stos
call
dec
sub
cmp
into
inc
and
and
lahf
jns
hlt
inc
pop
popa
mov
ss
xchg
fimull
push
jns
int3
mov
stos
or
sub
jae
test
xchg
mov
pop
add
and
add
and
or
lds
jmp
incl
fnsave
pushf
cltd
into
or
ja
dec
imul
rorl
addr16
in
mov
pop
xlat
insl
rcll
gs
jp
push
mov
int
xor
outsl
mov
jecxz
cli
push
jmp
hlt
dec
xchg
mov
xor
xchg
inc
mov
and
ljmp
push
sub
scas
hlt
xor
jnp
scas
push
aad
inc
mov
data16
mov
pop
lods
xchg
bnd
loopne
sub
and
mov
sub
or
adc
sub
jae
xor
inc
orl
neg
lret
pop
roll
out
dec
adc
mov
and
outsl
cs
nop
fsub
inc
rclb
inc
outsl
pop
clc
sti
aas
lods
inc
mov
push
gs
push
lds
mov
imul
pop
cmpb
inc
outsl
clc
movsl
leave
lock
ljmp
xchg
test
rcll
cmpsb
jb
test
cmp
ficompl
sti
mov
sub
pop
outsb
andb
outsb
aaa
cs
iret
adc
inc
fisttpl
xor
xor
and
fnsave
out
mov
adc
mov
popf
push
cmp
mov
sbb
gs
cltd
das
jb
call
test
insl
lret
sub
jnp
sbb
clc
xchg
stos
lods
mov
das
pushf
fbld
lock
loopne
mov
xor
mov
mov
xchg
jo
jno
and
mov
push
lock
adc
xor
jbe
sub
lock
mov
or
sub
stos
pop
push
and
data16
cmp
testb
mov
adc
scas
push
fsub
mov
pop
mov
push
stos
mov
or
cmp
sahf
push
inc
lock
lods
jns
mov
loopne
fwait
xchg
push
pop
icebp
mov
in
push
repnz
inc
popf
pop
mov
jge
cmp
sahf
stos
les
mov
stc
test
pop
fldcw
add
roll
scas
sub
out
andb
and
cmp
mov
andb
mov
push
stos
push
iret
mov
xchg
cwtl
arpl
push
push
xor
mov
sbb
xchg
repz
xchg
je
stos
icebp
je
xchg
push
das
lods
out
pop
insl
dec
outsl
pop
pop
lds
int3
aam
mov
decb
pop
inc
fldcw
jmp
sahf
mov
mov
js
ret
sub
pop
loopne
mov
adc
adc
pop
cmp
fwait
stos
inc
xchg
fildl
mov
sub
cli
pop
xor
mov
cmp
mov
pusha
cmp
dec
fdivl
inc
inc
push
negb
fimull
call
sbbb
dec
lea
roll
jns
adc
adcb
mov
or
aad
adc
arpl
ret
jg
fidivl
mov
sub
adc
hlt
jmp
movsl
rolb
add
pushf
add
lea
jo
dec
shrb
inc
push
lds
mov
jae
sbb
nop
daa
pusha
adcl
mov
add
add
mov
jg
push
ss
pop
out
insb
or
push
jmp
shrl
xchg
pop
outsl
and
push
out
jle
xchg
jecxz
sarl
dec
dec
cmp
ret
mov
addr16
pop
cmp
clc
mov
fsubrl
int3
shl
xor
push
sahf
je
push
and
and
dec
mov
mov
lret
ret
roll
std
lret
inc
mov
jmp
je
cmpb
mov
mov
icebp
adc
jle
iret
ja
sub
fisubrs
sbb
xor
xchg
pusha
ljmp
bound
cli
addl
sub
or
mov
dec
leave
mov
cmp
xor
aam
xchg
in
cmp
mov
jmp
mov
xchg
jmp
scas
outsl
push
cmpsl
inc
sub
jp
cmc
mov
sub
pop
int
jne
aad
addr16
jne
stc
lods
push
xchg
stc
cwtl
lods
lods
jae
mov
cli
inc
pop
imul
push
pusha
ficoml
ds
loopne
les
roll
cmp
pop
mov
rol
pop
fstpt
xchg
pop
cmp
cmp
push
pop
aas
jmp
iret
xchg
cwtl
std
sbb
test
icebp
repnz
cmp
scas
pop
inc
xor
das
out
out
scas
push
xor
repnz
ret
inc
imul
imul
cmp
daa
hlt
mov
mov
loopne
inc
enter
popa
in
rclb
sti
sub
loop
fisttps
jns
dec
nop
cmc
movb
in
ret
cmp
stc
fsub
movaps
mov
sbb
sub
repnz
mov
pushf
cmpsl
sbb
jecxz
push
or
mov
ret
sub
imul
pop
aaa
or
mov
xchg
cmc
in
push
push
notl
movsb
push
mov
jo
icebp
sarl
shrb
es
sub
xchg
out
sarl
imul
insb
ud2
int3
push
xor
adc
mov
int
sub
cld
mov
pop
add
loopne
sbb
mov
jmp
sub
jbe
add
pop
lret
fs
icebp
sub
jne
ljmp
imul
fdivrp
dec
cmp
cmp
call
push
lret
in
repnz
xor
popa
lret
cmp
pop
cltd
sahf
push
mov
sbb
inc
insl
dec
addr16
push
clc
gs
and
xor
movsl
stos
lods
add
dec
sub
pop
out
pop
testl
in
rcrl
and
jge
repnz
mov
push
iret
cmpsb
adc
std
shll
inc
movsb
sbb
pop
cmp
dec
jb
cwtd
jb
incb
bound
lock
notl
cmp
add
jl
pushf
fidivrl
lods
push
aas
ret
sub
mov
outsl
or
pop
lock
in
int
out
pop
pushf
dec
sbbl
popf
jnp
nop
mov
lods
bound
push
mov
or
pop
and
jno
or
cmpb
les
dec
cmp
das
fisttps
mov
mov
cmovno
les
sub
jne
inc
test
stos
rcrl
mov
addr16
stos
add
pop
mov
mov
mov
add
pop
sub
push
inc
xchg
fmuls
sarb
push
dec
xchg
pop
adc
jge
jmp
jp
add
jl
negl
jp
sub
stos
cmp
in
and
fnstcw
bound
rol
pop
cmpsb
xchg
nop
jno
stos
repnz
stc
gs
adc
fs
imul
mov
js
pop
push
jb
xchg
cmp
push
dec
inc
mov
lahf
sub
jns
jbe
mov
in
jns
imul
lods
jbe
adcb
andl
out
nop
enter
fistl
sbb
inc
sahf
cltd
aas
stos
pusha
mov
add
rcrb
call
int3
mov
dec
push
xchg
mov
mov
pop
enter
pop
push
out
incl
inc
xchg
push
stos
je
push
xor
scas
sub
xchg
mov
rcrl
mov
test
arpl
mov
pop
xchg
sub
not
idivl
dec
push
inc
ljmp
adc
adc
inc
inc
pop
push
adc
or
xchg
pop
sbb
adc
mov
or
lock
das
pop
mov
mov
mov
mov
inc
pop
or
int3
jecxz
inc
inc
jns
jmp
xor
jae
push
push
je
cmp
gs
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
lcall
in
add
ja
cmp
out
mov
pop
sub
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
mov
ja
push
or
dec
lret
cmp
xchg
or
add
pop
sbb
rcr
mov
pop
push
push
sbb
add
xor
fadd
insb
dec
sub
pop
adc
mov
jp
jae
cmp
in
call
cmp
sbb
shr
and
jns
pop
dec
outsl
rorl
out
jo
inc
sbb
test
mov
es
mov
and
sbb
mov
in
dec
aam
out
and
call
jge
jmp
push
jo
mov
fprem1
sbb
jae
cmp
adc
repz
dec
jnp
jae
jmp
sub
mov
in
add
xchg
cmp
jbe
adc
jp
iret
cmp
ja
adc
jp
jae
cmp
adc
push
jae
cmp
adc
mov
sub
jp
jbe
cmp
adc
jp
ja
cmp
adc
mov
sub
cmp
adc
push
jae
cmp
add
jp
jae
cmp
sub
jp
xorl
cmp
mov
in
add
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
push
insb
jae
cmp
in
add
ja
inc
hlt
cmc
xlat
jl
jp
jae
cmp
adc
or
jae
cmp
adc
jp
jae
cmp
in
add
jae
cmp
xor
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
cmp
adc
jp
jae
push
fildll
sahf
mov
cmp
jp
shl
dec
adc
lds
xchg
jg
test
mov
sahf
out
cli
adc
test
push
fwait
mov
xor
sbb
jl
pop
int3
sub
je
sbb
push
lahf
xor
iret
cmp
into
mov
xor
dec
push
mov
stos
xor
mov
pop
cld
add
subl
mov
sub
stos
testl
xchg
inc
or
adc
pop
add
jne
inc
add
lds
int
pop
cld
rcrl
xor
xor
add
in
jae
pop
sar
or
leave
mov
sub
jo
jp
push
fstpt
and
pop
dec
not
cmc
inc
and
imul
clc
xchg
xchg
in
adc
pop
adc
ss
ret
xchg
cltd
rcrb
fstpl
push
sbb
mov
cmp
cmc
push
in
add
aaa
sbb
arpl
in
mov
cmc
rcl
mov
adc
sarb
out
sbb
in
add
aaa
movsb
int
js
imul
rorl
fcompl
push
inc
pop
sbb
adc
test
push
cmc
movb
test
int3
adc
das
dec
les
loope
arpl
inc
push
and
and
jb
and
lret
bswap
mov
cli
mov
push
imul
cwtl
adc
mov
pop
dec
test
je
push
int
add
xor
enter
sbb
pushf
fiaddl
or
mov
call
fwait
mov
cli
lret
ja
push
aas
bound
adc
es
sub
mov
sbb
mov
lahf
pop
sub
int3
ljmp
or
ss
mov
pop
dec
lea
pop
xchg
sub
rolb
push
sti
inc
mov
sahf
sub
add
imul
pop
or
stos
es
lret
cmc
sarb
sub
pop
hlt
cs
jl
aaa
pop
add
fidivl
dec
push
stos
push
or
inc
jb
jge
adc
or
xorb
fisubs
push
aad
pop
inc
insl
cmp
xchg
jnp
adc
jmp
sub
jg
stos
inc
iret
je
mov
push
mov
leave
lock
ljmp
imul
jae
mov
xchg
inc
jmp
dec
aaa
andl
pop
jmp
adc
in
jno
fstl
xchg
ljmp
daa
mov
mov
or
jle
stc
fwait
jle
imul
daa
nop
or
jle
push
mov
add
cmc
lock
jmp
imul
mov
xchg
sub
add
push
test
pop
fsubs
loope
imulb
jmp
inc
aad
add
ret
in
out
jmp
loopne
stc
pop
test
test
sbb
aam
push
cmc
out
pop
insl
push
cmpb
pop
out
jns
or
mov
inc
mov
mov
pop
sbb
repnz
xchg
pop
dec
scas
jg
push
es
mov
mul
add
into
xor
sub
sub
push
xor
aad
dec
xlat
sbb
xchg
pop
lret
mov
test
cmp
pop
xchg
and
lret
push
inc
in
lock
inc
xor
xchg
dec
sahf
iret
pop
cmp
mov
outsb
pop
sub
sarl
scas
mov
lds
fistps
repz
cmpsb
mov
ret
cmp
lock
fbstp
loop
xchg
mov
dec
jecxz
adc
mov
mov
es
add
mov
mov
dec
xor
xchg
cwtl
sub
mov
cmp
sub
and
std
push
add
jle
jmp
sub
pop
rcll
xlat
push
mov
sbb
add
cmp
popl
call
sbb
movsl
inc
fstl
stos
in
loope
test
push
arpl
sbb
cmc
push
movsb
push
inc
aaa
and
test
loopne
lods
jge
fisttpl
xchg
jns
loope
sbb
jl
mov
xchg
cmpsb
out
sub
lea
or
rclb
mov
jbe
rcrl
rcll
jge
pop
jl
rorl
fists
leave
cltd
or
cmp
cs
test
aam
repnz
mov
cmc
xchg
inc
test
psubd
and
outsl
dec
aad
xchg
insl
pop
jmp
std
sbb
jbe
mov
xlat
and
push
lea
or
pushf
push
dec
gs
dec
xchg
mov
cmp
lods
pushl
ljmp
adc
xor
sbb
test
add
mov
xchg
mov
or
mov
adc
lret
cli
push
mov
xor
je
mov
jns
push
mov
shll
jo
inc
xchg
and
add
subb
push
adc
in
pop
jmp
push
mov
enter
clc
pusha
pushf
jmp
jo
dec
jmp
movups
jne
scas
mov
xor
jbe
push
hlt
xor
lret
pusha
movsl
or
ret
mov
fwait
sbb
pushf
fistl
cmpsb
push
and
rorl
inc
jg
jno
outsb
mov
pushf
xor
mov
jb
ret
mov
shl
jns
jnp
push
inc
dec
das
sbb
stos
cmp
fwait
mov
sahf
test
and
fsub
mov
bound
lret
lods
push
lds
push
loopne
push
enter
mov
cmp
adc
pop
cmp
rcrl
xchg
sahf
xor
daa
inc
pop
int3
xor
std
xchg
pop
int3
pop
ret
lds
pusha
push
inc
std
pop
mov
xchg
aam
addr16
dec
pop
push
and
pusha
mov
and
xchg
push
leave
jae
push
add
xor
in
cmp
fdivrs
sub
jbe
outsb
inc
jle
test
test
mov
in
dec
out
jge
test
mov
lods
xor
mov
xchg
jbe
out
andl
mov
insl
negl
movsb
andl
aas
lds
sbb
mov
sbb
mov
iret
in
and
mov
mov
sub
sub
repz
mov
cltd
movsl
add
push
or
and
inc
xchg
leave
mov
dec
mov
push
pop
inc
repnz
in
fyl2x
xchg
xchg
shlb
push
sti
clc
add
call
cld
bound
sbb
fldcw
inc
data16
les
pop
rorb
shll
int3
test
xor
repnz
cmp
jbe
lock
bound
dec
or
lock
pop
repnz
ja
mov
and
cmp
jbe
ss
inc
andb
arpl
iret
jmp
sbb
fstpl
lret
add
sub
cli
dec
adc
or
or
ja
inc
push
mov
sahf
fnstcw
std
mov
inc
pop
test
test
and
jns
mov
add
data16
dec
add
in
inc
movsb
lcall
pop
mov
dec
jl
popf
push
jo
push
add
or
call
ds
loop
sub
mov
xlat
mov
lock
jge
sbb
cmp
and
pop
movsb
xchg
ficomps
jecxz
push
ret
add
movsl
data16
out
inc
and
fildll
iret
xchg
idivl
lds
and
scas
lods
inc
dec
aaa
adc
jns
jae
call
and
outsb
nop
cmp
xchg
sbb
cli
lds
leave
dec
scas
roll
xor
xchg
roll
sbb
outsb
ret
int
loop
lea
cmp
mov
pop
mov
mov
sbb
inc
leave
scas
or
addr16
jns
sbb
sub
xchg
pop
inc
push
jae
int
aam
xchg
jno
or
mov
int
dec
cltd
inc
lahf
test
jg
dec
lea
inc
cmpsl
sahf
das
jge
jne
lock
ficompl
jmp
cltd
stos
testl
adc
jae
lds
jo
push
lods
arpl
sbb
stc
jno
out
mov
cmp
mov
mov
inc
jo
xor
inc
daa
mov
out
push
push
pop
pmaxub
nop
add
hlt
pop
stc
jbe
pop
dec
cmp
mov
cmp
mov
xlat
sbb
adc
fcomps
imul
inc
xchg
clc
mov
shlb
fxch
and
pop
and
pop
popf
test
xlat
orb
cmc
mov
scas
int3
mov
pusha
jecxz
loope
mov
iret
mov
loope
jp
rclb
push
add
push
xchg
mov
dec
mov
pop
lock
xorl
xchg
enter
push
pop
and
lock
cmpsb
inc
or
mov
mov
shrl
push
sbb
lahf
sub
cld
std
sub
orb
les
out
jmp
push
daa
call
mov
jl
mov
cmp
mov
outsb
cmpsb
and
or
jp
out
mov
cmp
in
fiadds
or
push
test
lods
shll
ds
inc
mov
and
sbb
popf
mov
pop
sbb
daa
pop
into
jno
dec
stos
outsl
jle
inc
test
pop
or
jno
mov
cwtl
popf
iret
rclb
mov
aas
dec
sub
adc
cli
notl
mov
jge
sbb
gs
inc
adc
enter
inc
clc
shrl
adc
cs
and
push
shll
nop
and
add
xchg
xchg
dec
xchg
stc
nop
inc
adc
push
push
sub
ss
push
popa
aaa
stos
add
and
lea
jno
xchg
push
fwait
cmp
out
sbb
jmp
outsl
push
lahf
data16
jmp
nop
addr16
cwtl
ljmp
stos
sbb
or
dec
je
es
fadds
pusha
dec
cmp
daa
mov
or
je
les
je
lret
pop
xchg
xor
xchg
lea
sarb
mov
sbb
add
lret
js
aas
test
xchg
push
sbb
fistpll
mov
cs
cs
lock
aad
mov
jbe
shr
inc
xchg
cwtl
push
out
out
movb
adc
adc
and
dec
andl
inc
cmc
clc
jae
jl
add
nop
push
test
jecxz
jmp
mov
fwait
rclb
or
sbb
pushf
call
or
int
mov
sbb
sub
cmp
clc
xchg
popa
hlt
ret
cmpsb
jecxz
insl
mov
mov
lcall
jne
sbb
push
push
jbe
adc
jg
scas
xor
arpl
fistpl
mov
fs
pop
inc
mov
nop
out
sbb
pop
jbe
pop
or
mov
mov
or
jle
jmp
mov
daa
out
test
cmpl
mov
jne
jne
push
nop
stos
icebp
pop
inc
xchg
aad
scas
popf
cmc
adc
outsl
or
das
cmc
ss
insb
push
mov
adc
in
es
sbb
pop
dec
pop
jge
sub
inc
jle
dec
mov
lret
mov
movsl
or
shlb
lods
mov
test
lcall
insl
sub
mov
shufps
cmp
cmpsl
lea
or
mov
insb
jp
repz
mov
cmp
lds
inc
lahf
cwtl
push
daa
fstl
loop
mov
cmpsl
mov
loop
in
sbb
pop
push
hlt
mov
cs
push
fstl
rclb
in
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
