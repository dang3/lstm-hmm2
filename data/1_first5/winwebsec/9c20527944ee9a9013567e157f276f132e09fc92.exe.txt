jno
test
adc
ljmp
popf
inc
es
mov
push
dec
loope
fcmovnbe
cltd
and
aad
jo
push
aad
jg
out
aaa
rclb
aam
add
cltd
int3
cmp
inc
fcoms
mov
sbb
in
aam
cmp
ret
jb
add
sbb
sarb
pop
mov
cltd
adc
dec
push
dec
push
in
dec
data16
sti
jmp
inc
adc
fiadds
das
out
pushf
add
and
in
jmp
popl
std
lret
cld
stc
inc
jg
mov
cmp
mov
jmp
sub
xchg
movsl
pushf
dec
repz
xor
cmp
push
sbb
and
rorl
js
je
test
and
adc
or
mov
mov
test
scas
dec
popa
imul
bound
loopne
jbe
sbbl
or
cmpsb
shll
dec
adc
fcom
shr
jge
sub
insl
mov
lret
mov
test
dec
push
popa
cmp
out
dec
ds
or
mov
jns
adc
lahf
or
lods
movsb
gs
push
push
ss
fildl
les
in
fst
movb
loop
jns
stos
add
mov
adc
mov
lock
inc
dec
mov
xchg
mov
pop
out
or
sahf
dec
xchg
mov
pop
idivb
xchg
mov
inc
out
dec
mov
jnp
ss
flds
es
or
add
aad
popa
lea
xchg
test
mov
les
inc
dec
and
ret
jae
inc
and
loope
inc
add
lahf
mov
push
adc
loopw
scas
les
out
inc
sub
jmp
int
scas
rorl
test
push
xchg
arpl
adc
sub
data16
rcrl
xor
fcmovb
in
mov
push
lret
pushf
mov
xchg
test
pop
loop
aas
push
lahf
ds
lahf
jmp
test
adc
lahf
sbb
ss
mov
sbb
loope
mov
bound
adc
inc
ds
clc
sarb
call
mov
xchg
fisubl
mov
mov
subb
das
sub
or
jecxz
xor
fwait
dec
ret
cmp
mov
shlb
pop
fnstcw
test
and
dec
cmp
pop
ja
sub
ds
out
mov
and
adc
lret
aad
mov
lret
mov
xor
fisttpl
ds
cwtl
je
sbb
std
sub
mov
sbb
outsl
adc
pop
jp
repz
test
imul
repnz
out
cs
mov
inc
loope
aas
jecxz
jle
cmp
inc
cli
push
adc
mov
sahf
pop
xchg
test
jae
or
test
shll
sub
and
divl
xor
std
mov
dec
and
stos
pop
bswap
fnstenv
cmp
ss
xlat
int
inc
enter
sbb
daa
cmp
sbb
or
in
push
inc
int3
scas
add
mov
bound
dec
ljmp
dec
xlat
hlt
out
inc
cmp
add
jg
imul
imul
ret
push
jbe
adc
ret
scas
loope
loope
out
inc
pop
insb
cmp
pop
sti
push
out
pop
fcoml
adc
inc
fnstcw
xchg
push
into
push
pop
into
pop
into
xor
inc
in
xorl
cmp
xor
jmp
xor
in
xor
insl
dec
sub
adc
fisttpll
push
pop
or
or
jg
sbb
lock
in
nop
jle
mov
stos
push
adc
xor
xlat
pop
sub
lea
add
sbb
or
out
mov
add
jno
fisubrl
rcrl
mov
or
sahf
jge
mov
call
xchg
jmp
or
fmuls
int3
repnz
lahf
cmpl
xor
and
mov
sbb
mov
or
nop
aas
mov
push
aas
and
icebp
mov
sbb
in
dec
aad
popf
adc
add
mov
sbb
dec
adc
adc
arpl
xchg
dec
mov
leave
and
xchg
daa
inc
sti
pop
inc
stos
in
mov
and
dec
rol
mov
repz
xchg
sub
pop
fsubr
and
aam
es
mov
fnstenv
int
lahf
orb
adc
adc
icebp
leave
loopne
cmp
mov
scas
adc
cmpb
and
je
add
inc
orl
sub
inc
ljmp
cmpb
mov
xor
push
fucom
push
push
fimuls
fnstsw
hlt
push
iret
adc
ret
es
sub
rep
aad
scas
fs
sub
adc
or
push
dec
push
stos
idivb
xor
ret
pop
cmp
nop
dec
sub
into
xor
jae
cmc
mov
sbb
sub
xor
xor
push
in
sub
aas
sbb
mov
cmp
pop
adc
aas
test
es
push
cmp
imul
cmp
push
cli
push
ffreep
cmpsl
out
mov
mov
sbb
lds
les
push
inc
leave
cwtl
inc
mov
jge
and
popf
mov
mov
and
das
dec
mov
jo
mov
mov
orb
mov
in
dec
stos
dec
out
xor
les
add
sbb
aas
pop
inc
fldl
xchg
fcomps
xor
inc
add
in
gs
push
pop
mov
gs
daa
mov
test
adc
push
bound
mov
cltd
mov
popa
jns
in
adc
addr16
mulb
lods
cmc
pop
and
push
stos
mov
fistpll
push
dec
lcall
xchg
cmpsl
sub
lods
in
jno
ret
ret
dec
inc
push
inc
push
mov
mov
jmp
jnp
sub
pop
xchg
lods
sbb
ficoms
xor
popl
imul
mov
mov
rcl
nop
xlat
subb
popf
xchg
divb
mov
mov
cld
push
aad
dec
aaa
cmp
cmpsl
jbe
je
fnsave
iret
mov
adc
push
inc
xchg
fists
addr16
mov
mov
mov
popf
or
mov
jae
cmpl
jae
mov
addr16
repnz
loope
inc
popa
rcrb
pushf
push
or
sbb
add
pop
mov
ret
pop
orb
insb
jo
in
mov
in
jne
adc
addr16
cs
inc
and
out
jle
imul
sbb
cmp
push
push
imul
lahf
je
pop
pop
and
and
xchg
out
inc
push
sub
dec
inc
mov
jns
sub
fs
int
lods
dec
pushf
cs
gs
or
insl
int3
or
icebp
rorb
mov
pop
in
xor
rorl
lds
mov
lahf
inc
pusha
dec
xchg
sar
mov
loop
mov
bound
jle
xchg
insl
mov
fwait
cs
cmp
psrlw
outsl
adc
xchg
addl
mov
scas
sub
dec
dec
sbb
push
das
loop
pop
xor
add
push
test
xor
loope
loopne
or
ss
mov
push
cmp
cmp
mov
insl
repz
jb
repnz
xor
inc
xchg
addr16
int3
hlt
daa
xchg
mov
mov
jg
sbb
mov
adc
insb
xchg
inc
mov
in
adc
pop
cwtl
jnp
adc
mov
les
jle
lret
aas
jo
pop
xor
scas
pop
push
adc
push
and
sub
cmp
adc
cmp
push
outsl
aas
cmp
mov
rorl
jnp
maskmovq
pushf
repz
stc
daa
push
sbb
xor
adc
test
mov
negl
inc
pop
lcall
pop
mov
push
mov
lods
cli
jb
cmp
mov
xor
adc
push
inc
test
bound
push
loope
push
mov
inc
push
and
in
and
push
loope
adc
fisttpll
or
jo
pop
push
gs
inc
insl
popf
insb
outsl
and
insb
les
mov
add
fwait
jmp
inc
mov
aam
and
movsl
pop
or
fs
inc
fdivrl
jl
push
mov
fnstcw
aam
or
bound
movsb
and
fcmovu
out
adc
xchg
xor
xchg
int3
pop
add
pop
add
jmp
lret
push
mov
sub
or
inc
fisttpll
int
sub
scas
jns
dec
insl
dec
push
mov
mov
mov
aaa
outsl
xor
outsb
mov
adcl
adc
js
inc
fdivl
mov
lods
mov
mov
pop
xchg
bound
hlt
in
xchg
in
sbb
out
pop
dec
int3
xlat
mov
mov
sahf
mov
xor
sarl
cld
gs
xchg
dec
inc
add
out
xor
repz
dec
jg
mov
sbb
mov
lea
sbb
leave
pop
movsb
arpl
and
cmp
add
and
decb
mov
negl
pop
mov
aad
hlt
xchg
jno
adc
je
sub
shll
filds
iret
or
or
lret
xchg
flds
jg
mov
mov
jns
js
cld
sbb
andb
or
add
stc
jg
dec
lret
dec
in
lock
cltd
mov
sub
in
xchg
push
stc
adc
jns
das
cmp
push
outsb
dec
and
and
test
cmpb
in
pop
xor
icebp
and
inc
out
rorb
push
sbb
push
xchg
push
jecxz
push
pop
cwtl
inc
jmp
add
cltd
add
stos
cmp
cmp
cmpsb
repz
mov
xor
movsb
and
and
int
out
in
ficoms
pop
inc
cmp
or
or
dec
aas
lock
rorb
std
stos
loop
scas
insb
fiadds
or
cmp
ficoms
and
cmc
push
and
loop
xchg
mov
dec
daa
incl
movlps
cld
test
jecxz
ljmp
bound
scas
mov
mov
xchg
mov
loope
and
adc
es
cld
pusha
dec
ss
jbe
test
jo
in
and
out
push
xchg
push
subb
jb
jecxz
and
sbb
jbe
cmp
inc
ret
inc
movsb
push
aaa
sbb
xchg
pop
repnz
lahf
ja
sbb
push
enter
addr16
jge
ja
rcrl
pop
sbb
shrl
jno
std
mov
into
fidivl
les
jl
sub
rorl
adc
fists
sbb
shlb
in
mov
inc
xor
xor
xchg
movsb
leave
ss
sub
jge
push
test
add
adc
or
pop
or
idivb
jecxz
or
lock
sahf
cli
mov
stos
or
xchg
and
adc
lods
dec
jmp
sbb
push
sbb
icebp
inc
loopne
rolb
push
xchg
and
pop
inc
push
sub
fldt
add
hlt
enter
and
sbb
xlat
aad
pop
roll
repz
cld
movsb
xchg
jecxz
jecxz
in
in
jge
fldl
jb
or
bnd
leave
popa
iret
inc
and
pop
jp
xchg
push
xchg
adc
popl
sti
addb
roll
inc
mov
sbb
sbb
mov
ljmp
ret
dec
sub
jo
cs
call
out
out
in
out
data16
xchg
sbb
loope
sbb
mov
and
jno
adc
cmp
cmp
andb
jns
fwait
mov
or
ja
test
push
stos
jl
mov
pop
pop
scas
or
xchg
mov
rcl
rol
inc
rcrl
incb
inc
sub
mov
scas
lock
sub
rcrl
mov
jle
std
aaa
jae
pushf
mov
dec
ja
and
out
fcomip
js
stc
leave
and
daa
leave
inc
jle
out
push
test
lea
and
jnp
sub
pop
xchg
mov
or
data16
or
mov
pop
test
lock
jg
lahf
int
jmp
sahf
xchg
lods
xchg
sub
mov
fndisi(8087
aad
sbbb
loope
mov
lcall
xor
inc
sbb
pushf
cmc
test
cwtl
xchg
xlat
mull
pop
sbb
mov
jno
mov
jae
in
inc
faddl
jb
push
sub
mov
xchg
lret
shl
adc
mov
jmp
sbb
iret
pusha
addr16
stos
lcall
inc
out
lret
jp
pop
cli
in
inc
pop
cmpl
outsb
sahf
bound
iret
outsb
out
or
push
dec
in
dec
roll
loopne
cmc
in
int
nop
xchg
jecxz
andl
jle
insl
stc
dec
lret
imul
push
cmc
pop
adc
aam
inc
into
dec
insl
dec
xchg
pusha
call
add
loop
mov
imul
xchg
xchg
imul
lcall
ds
lock
mov
out
mov
or
jge
sbb
out
lods
orl
inc
push
cmp
stos
xchg
jg
jo
jne
xor
jns
push
sub
das
insl
in
inc
popf
cwtl
dec
cmp
movsb
push
push
mov
mov
push
shrb
sub
dec
scas
xor
dec
pop
jl
sub
idivb
mov
mov
lcall
mov
inc
ss
incb
loop
mov
cmpsb
daa
dec
arpl
xlat
leave
arpl
shlb
xor
call
es
dec
xor
cltd
popf
call
xchg
int
adc
insb
popa
sub
jmp
pop
mov
adcl
xchg
lcall
mov
lock
jp
jge
mull
adc
adc
or
nop
das
hlt
jb
add
inc
mov
push
add
insb
in
ret
cmp
aaa
adc
imul
test
push
mov
shll
in
add
or
sub
sub
mov
dec
in
pop
dec
cmp
cld
and
js
adc
lret
lret
loop
mov
imul
mov
push
cmp
fisttpl
aad
jecxz
in
ds
xor
add
jb
gs
xchg
mov
les
add
or
ljmp
loopne
mov
loopne
lret
xchg
test
jbe
pop
es
mov
jbe
lds
mov
mov
xlat
daa
loopne
orl
insl
xchg
cltd
mov
pop
push
subb
stc
loop
xor
mov
jp
jp
in
jl
jnp
mov
mov
mov
xchg
dec
lods
xor
icebp
enter
mov
loope
ret
cmp
cmp
dec
test
in
ljmp
mov
add
aad
lret
push
xchg
test
data16
inc
mov
loope
and
movsb
ret
and
and
scas
lds
dec
outsb
dec
fnstsw
push
rorl
jp
mov
and
sahf
mov
sbb
movsb
mov
pop
arpl
dec
xor
or
xchg
mov
jl
rcll
andb
cltd
int
push
add
cld
add
scas
pop
push
ss
das
clc
sub
xchg
out
cli
pop
fmuls
jnp
sbb
xor
sub
mov
movsb
mov
hlt
shlb
stos
cmpl
fnstcw
inc
xchg
ds
cmp
fisttps
xor
push
lods
add
lds
dec
dec
icebp
jne
lcall
add
jnp
sub
or
iret
cs
and
and
pop
xchg
in
testl
cli
and
xchg
andl
pop
xlat
xlat
pop
dec
addr16
movsl
shrl
mov
bound
cltd
mov
xchg
push
pop
dec
outsl
mov
pop
sbbl
xor
shlb
mov
adc
insl
arpl
outsb
mov
lock
outsl
add
lea
xchg
andl
adc
scas
add
inc
aad
xlat
sub
jne,pt
mov
lock
movsl
mov
inc
ret
mov
je
cmp
push
jb
ret
sub
loope
push
aaa
arpl
mov
push
lea
mov
add
mov
xchg
jle
xchg
pop
into
mov
jge
mov
repnz
cmpsb
enter
cmp
imul
fwait
xlat
mov
push
dec
insl
shrl
cmp
push
dec
cmc
insl
sub
pop
aad
das
inc
xor
jle
dec
jno
mov
out
fwait
movsb
das
sub
ss
mov
lock
mov
fdivrs
movsl
push
stc
jg
jno
popa
inc
fidivrl
cmp
dec
adc
loopne
int3
das
rol
fs
jno
jno
fsubr
enter
fsubl
jl
sbb
stos
xor
or
jmp
aad
cli
push
ficompl
ret
enter
lret
mov
mov
add
pop
xor
leave
jl
cltd
and
ja
mov
jecxz
outsb
cmp
add
cmp
repz
xchg
sti
repnz
and
dec
data16
sbb
aad
add
fisubrs
ret
adc
loope
mov
cmp
test
scas
sub
xlat
mov
mov
xchg
in
insl
dec
pushf
xchg
sbb
add
fcmovnbe
jl
jp
pop
nop
jnp
bound
imul
mov
jl
mov
pop
pop
and
imul
push
test
push
fcmovb
test
adc
cmp
gs
push
mov
mov
aam
adc
jg
sbb
imul
mov
inc
mov
js
pusha
aas
clc
xchg
jg
push
pop
adc
dec
ret
inc
test
out
testb
dec
mov
into
cmpsl
xor
addr16
inc
insb
lret
cmc
adc
push
test
loop
into
inc
rorl
xchg
mov
mov
lret
sub
and
xorl
rolb
push
add
shlb
movsb
daa
mov
xor
lret
sbb
xor
mov
xchg
movsl
movsb
ja
push
dec
push
or
in
lods
cmp
pushf
pushf
js
adc
sbb
inc
fistl
dec
shl
nop
int
lcall
pop
cmp
cmpsl
xlat
andl
add
pop
mov
in
inc
cwtl
mov
sbb
or
and
add
ret
xor
js
popf
sub
stc
pusha
pop
pop
inc
ficomps
js
cmp
mov
notb
lock
fimuls
out
das
sub
in
dec
and
or
mov
and
xor
ficoml
cwtl
pop
xlat
cli
cmpsl
clc
push
mov
addr16
pop
xchg
iret
pop
loopne
mov
aad
mov
adc
pop
mov
jae
push
stos
sub
ljmp
pushf
inc
mov
pop
inc
sbb
xchg
push
cmp
aad
faddl
cltd
push
ror
dec
add
imul
mov
add
imul
mov
jg
call
gs
in
shlb
push
xor
ret
lods
js
pop
imul
shlb
adc
pop
adc
mov
mul
inc
sub
push
or
pop
rcl
movsl
ffreep
sub
mov
es
sub
jg
jmp
xchg
and
or
fcmovnb
mov
jecxz
sahf
jns
jns
roll
mov
mov
cmp
dec
std
test
pop
jp
mov
mov
xlat
scas
push
aam
mov
pop
cltd
lods
test
ret
pop
xchg
repz
mov
or
xor
adc
sub
sub
cmp
mov
push
dec
pop
cmpsl
xor
mov
sub
addl
cmpb
fbld
fwait
enter
enter
jl
fs
sti
stos
push
out
cmp
leave
fsubl
pop
xchg
subl
sbb
xor
mov
dec
ljmp
mov
lret
sbb
mov
hlt
jmp
dec
sbb
in
imul
ss
cmp
add
mov
sub
loopne
out
add
jle
lock
jge
aad
push
jge
gs
in
out
notl
sarl
jbe
jo
rcl
adc
sbb
dec
inc
pop
nop
fdiv
or
add
mov
cld
add
xchg
inc
mov
call
test
mov
cli
iret
and
mov
aad
cmpsl
sbb
adc
cmpl
sbb
jge
mov
inc
pusha
add
xor
xchg
pop
popa
pop
scas
mov
lcall
mov
pop
aaa
scas
cwtl
in
dec
out
pop
add
out
daa
mov
mov
xor
xchg
in
mov
jecxz
inc
ss
div
adc
dec
add
call
jecxz
pop
repnz
scas
aam
xchg
test
sub
dec
push
dec
jl
pusha
lea
jno
scas
add
shll
sub
mov
in
dec
adc
mov
cmp
out
mov
enter
enter
sbbb
roll
jno
inc
in
cmpsl
sub
jg
push
cmp
ss
mov
int
sbb
nop
insl
pop
mov
pop
adc
rclb
jns
lahf
dec
loop
lcall
daa
ja
sub
adc
data16
in
mov
mov
mov
mov
xchg
xor
adc
data16
xor
aad
mov
addb
mov
cmp
jae
rol
jmp
sub
ds
adc
adc
inc
mov
pusha
jmp
mov
sarb
xchg
scas
sbb
mov
out
sub
fmuls
out
outsl
or
or
push
jl,pt
aas
and
cmpsl
pop
mov
jg
add
cmp
xchg
xor
ds
sub
jge
push
mov
icebp
daa
jmp
outsb
daa
leave
nop
popf
mov
shrb
dec
cltd
push
addl
shll
ljmp
inc
test
xchg
lret
test
mov
imul
stos
sbb
scas
xchg
or
ss
lea
in
xor
mov
lahf
jo
dec
data16
js
out
add
dec
leave
adc
jae
add
outsl
xor
pop
fs
mov
outsb
imull
lock
pop
jne
fisttpl
inc
mov
mov
xchg
pop
ja
or
out
adc
and
push
fstpl
int
call
cwtl
and
mov
notl
jae
xchg
xchg
push
xchg
sbb
sub
jg
adc
sub
mov
adc
mov
sti
daa
outsl
pusha
test
es
es
fstpl
dec
and
cmp
fsubs
pop
icebp
or
lcall
add
jbe
xchg
fsts
dec
je
lods
dec
mov
sub
dec
test
xchg
lods
add
ja
fs
push
mov
pusha
sahf
push
push
mov
aam
in
lods
test
clc
mov
pop
int
into
cmpsb
push
mov
pop
or
add
pop
jbe
leave
sub
or
imul
jne
xlat
push
mov
inc
je
imul
dec
pop
push
into
ja
sti
loop
xchg
cmc
jp
mov
mov
ljmp
xchg
add
mov
xchg
inc
pop
das
sbb
xor
push
dec
push
xchg
xchg
sbb
lods
bound
pop
call
popa
mov
jg
push
daa
xor
data16
xor
dec
testl
mov
sbb
mov
xchg
add
ffree
push
sarl
jae
sub
rcr
stos
jo
adcl
lret
std
xchg
fbld
inc
rcr
arpl
call
jp
sti
fsubrs
fldl
sub
mov
shlb
aad
adc
or
fisubrl
mov
rolb
das
inc
mov
in
loop
arpl
rcll
cld
lret
jne
pop
loopne
in
cli
daa
adc
or
lcall
in
xchg
push
call
xor
adc
cs
mov
push
pop
inc
pop
push
or
dec
sub
and
fsub
in
sahf
pop
jecxz,pt
fs
jp
icebp
rorl
jbe
loope
mov
jle
cmp
filds
nop
mov
cmpsb
addr16
push
mov
push
push
adc
into
std
push
les
mov
xchg
cmp
call
sbb
mov
int3
jne
dec
das
xchg
call
jb
sub
inc
xchg
sub
or
jmp
inc
scas
jmp
or
loope
inc
cli
jnp
popf
sahf
mov
jne
outsl
sbb
push
imul
test
adc
push
add
sub
or
sbbb
mov
xchg
hlt
add
movsb
aad
pusha
xor
cmp
sub
roll
iret
ja
dec
cld
fiaddl
out
mov
inc
pcmpgtw
insl
outsl
pop
add
in
and
xchg
mov
lcall
xchg
das
gs
dec
jl
pop
shl
insl
xchg
orb
pop
push
cli
dec
ja
aas
dec
mov
inc
loopne
cmp
sub
sub
in
dec
or
push
orb
clc
xchg
mov
fsubl
call
fisttps
repz
and
cmp
lahf
pop
lods
xchg
pushl
imul
xchg
push
push
sub
jg
fists
push
add
sub
jmp
and
cld
jbe
push
mov
xor
ret
adc
inc
jle
das
sti
push
icebp
in
scas
xchg
dec
arpl
mov
arpl
in
out
xor
loope
mov
rcrl
xchg
cltd
push
push
mov
es
cwtl
dec
nop
cmc
nop
or
out
mov
cltd
or
outsl
mov
dec
or
fidivs
mov
popa
push
xor
fmuls
lcall
or
dec
dec
test
rcl
inc
addr16
mov
sti
xchg
popl
cmp
mov
dec
mov
subb
push
push
cmpsb
cmpsl
out
mov
sbbl
sbb
push
jb
jae
jg
jmp
shlb
or
mov
call
cmp
dec
mov
or
cmp
cmc
in
addr16
and
lea
cwtl
mov
dec
inc
jae
sar
push
and
push
jp
dec
lcall
icebp
mov
xchg
insb
aad
adc
stos
push
dec
inc
xorl
dec
stos
jmp
inc
jle
sub
dec
call
mov
into
ja
xchg
sbb
mov
mov
sti
enter
sahf
loope
mov
mov
enter
cmp
iret
in
mov
out
mov
mov
add
fstps
into
mov
add
je
andb
fnstenv
add
mov
sub
sahf
adc
push
gs
cmpsl
push
mov
loope
xchg
pop
dec
stc
sub
jge
xchg
xor
push
call
mov
and
push
mov
jge
idiv
cli
out
inc
insl
pop
sub
ret
add
outsl
xorb
sahf
fildl
cltd
outsl
fcom
ret
xchg
push
inc
fldt
xchg
mov
mov
sbb
ficompl
xchg
mov
xor
or
xchg
stos
es
cltd
arpl
aam
cmp
je
inc
loope
xchg
jb
out
mov
lret
jge
out
lahf
std
jmp
cmp
pop
insb
jmp
push
xchg
pop
adc
cwtl
repnz
test
add
xchg
jae
js
jnp
inc
popl
jae
pop
pop
popf
rcrb
xor
push
inc
popa
add
rorb
push
or
shl
addr16
test
cltd
dec
jg
inc
sub
and
xchg
lods
mov
std
nop
sbb
icebp
push
repnz
push
in
fisubrs
addb
xchg
shll
mov
mov
sub
xchg
xor
or
fisubrl
les
popf
ds
out
xor
adcl
or
pop
jg
push
fidivs
lods
hlt
push
test
inc
sbb
sbb
aaa
lret
mov
mov
add
jl
jns
mov
xor
fs
pop
pusha
mov
sub
sbb
dec
jbe
js
idivl
xor
cld
es
jle
push
add
mov
popa
push
into
push
out
js
out
into
push
push
sahf
mov
sbb
mov
sbb
jns
cmpsl
or
call
dec
lret
or
cmc
cmp
pop
jo
popf
adc
push
xchg
push
sbb
sahf
dec
jl
add
push
insl
mov
outsl
nop
rcl
cltd
repz
ss
add
loopne
push
inc
loope
dec
inc
scas
xorl
pushf
xor
imulb
mov
incb
or
sahf
out
in
dec
or
sbb
xchg
jnp
push
insb
cs
dec
paddw
adc
cs
aas
push
or
popa
jge
mov
ljmp
dec
out
add
jecxz
hlt
daa
movsb
hlt
aad
lds
jo
inc
mov
pop
sbbl
sub
test
lret
sbb
psubsb
mov
daa
fimuls
arpl
imul
and
lret
xchg
pop
rcl
cwtl
lret
xor
xchg
add
aaa
dec
mov
aas
push
cwtl
nop
jle
test
pop
jle
mov
push
in
js
inc
dec
xor
xchg
cmp
and
icebp
push
adc
shlb
dec
cmpsl
in
stos
lock
mov
push
aam
call
push
cmp
xchg
xor
or
push
cmp
push
cmp
xchg
repz
repnz
fldl
repnz
imul
cli
adc
and
inc
cmpsl
push
sub
xchg
inc
mov
push
out
pushl
ffreep
pop
sub
mov
push
in
cmpsb
cmp
fistpl
imul
hlt
movl
loope
mov
xor
les
aas
mov
jmp
imul
dec
ret
jl
nop
movl
addl
pop
jae
imul
lret
test
ret
adc
mov
push
shrb
enter
in
fadds
cwtl
adc
push
pusha
lcall
fwait
jp
add
insl
push
lret
mov
and
sub
je
inc
sbb
mov
shrl
xchg
nop
daa
cmp
and
mov
test
add
push
mov
push
xchg
jl
mov
xchg
cmp
out
dec
sub
push
ret
jmp
push
xor
stc
out
sub
cmc
aaa
mov
inc
mov
and
icebp
mov
sbb
jne
scas
sub
test
hlt
push
mov
mov
add
sbbl
in
push
jnp
das
jmp
adc
stc
stc
xchg
ljmp
es
loopne
lcall
push
push
and
pop
sahf
or
sbb
repz
bound
aas
cmp
shll
push
xchg
jmp
cwtl
popw
sub
mov
pop
push
pop
fcomps
lods
leave
mov
push
mov
sbb
ja
cmpsl
xor
scas
and
sub
into
insb
je
sbb
mov
mov
pop
out
into
sti
lock
push
ret
inc
cmpsl
ret
bound
xchg
aad
outsb
mov
pop
dec
add
shlb
push
out
and
inc
fdivl
int3
push
xchg
cltd
mov
cmpsb
mov
mov
xlat
xchg
inc
mov
mov
sbb
ss
negl
dec
xchg
pop
xor
shr
dec
movsl
jb
addr16
stos
cmpsl
nop
lcall
mov
inc
fistpl
or
rcll
rorb
sub
hlt
inc
dec
inc
scas
rorl
push
lret
mov
sbb
test
xor
mov
cmpsl
or
outsl
push
mov
in
adc
or
or
push
ljmp
inc
in
pop
addl
xor
jo
addr16
dec
arpl
hlt
mov
dec
pushf
fwait
in
jbe
or
dec
pop
mov
movsb
cltd
in
or
bound
test
enter
daa
xor
mov
sahf
adc
pusha
pop
jl
lcall
xor
jb
jge
fsts
mov
cmp
push
mov
jl
fldenv
mov
lahf
enter
xor
xchg
adc
sub
cmp
push
jne
mov
mov
pop
fs
xor
pop
and
addr16
pop
dec
hlt
inc
jmp
movsb
repz
lret
adcl
mov
cmpsb
adc
and
and
mov
nop
push
mov
inc
push
arpl
or
dec
jo
sub
pop
and
mov
sbb
adc
rcrl
cmpsb
inc
mov
inc
sub
jnp
xor
in
mov
scas
daa
testb
ds
adc
mov
mov
arpl
xchg
cmp
dec
aam
mov
dec
clc
jmp
sti
lret
or
adc
negb
in
mov
jg
add
xor
mov
pushf
add
xor
sub
sbb
sahf
int3
mov
cmp
sbb
pop
dec
outsl
and
data16
inc
dec
test
sbb
rcl
scas
leave
in
mov
fcoml
cmp
sub
cltd
ss
mov
and
cmpsb
jno
mov
push
jnp
test
pop
aam
outsb
add
add
and
cli
cmp
push
popa
mov
mov
popf
data16
mov
in
movsl
xchg
adc
or
lds
test
addb
xchg
sbb
std
enter
insb
xchg
aas
divl
inc
adc
les
movsb
sub
es
xor
sti
in
xchg
fsubl
clc
mov
mov
dec
and
push
dec
scas
and
sbb
fsubs
push
call
pop
jg
jecxz
int
inc
pop
pop
imul
xlat
jne
aaa
push
add
cmp
mov
and
fldl
mov
xchg
aaa
stc
fs
inc
test
lahf
je
sub
add
lods
inc
push
sub
sub
dec
inc
adc
pop
nop
and
jl
cmpsl
call
adc
imulb
imul
ljmp
pushf
lds
xchg
sarb
gs
pushf
xchg
ret
loop
rorb
push
js
ds
ficomps
push
pusha
shlb
and
xor
cltd
push
je
leave
xchg
inc
jbe
shlb
or
divb
dec
cmp
adc
ret
icebp
cmpb
push
push
or
adc
or
jge
lea
les
adc
mov
mov
inc
popa
adc
scas
adc
jae
xchg
sub
adc
adc
or
mov
fwait
push
pop
orl
sbb
sahf
je
stc
push
mov
add
repnz
enter
cltd
ljmp
test
mov
xor
jo
mov
movsb
stos
xchg
imulb
rcrl
popl
add
nop
enter
icebp
add
adc
out
repz
jmp
cltd
imul
sti
shl
cwtl
dec
aaa
negl
jne
mov
mov
fs
bound
loopne
js
pop
or
xor
cltd
jmp
cmc
lea
jo
rcll
ret
mov
push
nop
xor
or
push
jne
pop
cmc
sub
inc
call
imul
push
jo
xchg
xor
jmp
popa
adc
adcb
outsb
jp
pushf
or
lret
mov
scas
icebp
jge
out
cmp
adc
lods
ds
je
jno
daa
jo
xchg
bnd
add
std
popa
testb
adc
adc
loope
divb
mov
aam
insb
push
je
cmp
sub
rclb
push
aas
push
loopne
or
push
inc
std
mov
adc
mov
adc
fsubrl
es
add
test
scas
xchg
mov
push
pop
notb
in
negb
cmc
jmp
sbb
das
xor
pushf
inc
andl
push
insb
fnstcw
fldlg2
lods
dec
stos
adcb
lea
xor
into
jno
addr16
sub
cmp
popa
ljmp
popa
das
mov
mov
in
cmp
in
jns
jecxz
divl
pop
fcmovbe
popf
adc
pop
pop
adc
sub
daa
push
or
mov
lret
shll
stos
mov
sbb
xchg
jb
inc
mov
test
mov
in
dec
popa
out
ja
cli
or
mov
lea
jb
sti
inc
mov
dec
sub
pusha
or
pop
lods
test
mov
push
inc
vcvtss2sd
inc
xor
mov
xchg
add
pop
rorl
mov
cld
push
iret
lret
lcall
inc
in
jno
mov
jne
jns
je
sub
out
ror
sub
arpl
cmc
jecxz
mov
pop
mov
scas
lds
hlt
sub
sbb
add
daa
fwait
push
or
sbb
outsb
xor
mov
and
or
out
das
mov
cwtl
fdivp
xchg
dec
or
mov
jo
adc
mov
sub
std
leave
lcall
lcall
ljmp
or
cmpsl
cmp
jbe
xlat
inc
daa
sarb
push
cli
call
xchg
sbb
sahf
rolb
sub
movsl
aad
fbstp
jbe
fs
insb
popa
mov
loopne
in
mov
inc
andb
cmpsl
adc
leave
and
out
adc
out
lods
pop
in
or
xchg
cmc
xchg
push
into
loope
xchg
mov
jbe
lods
repnz
jge
mov
fwait
movsb
inc
lahf
test
cmp
sbb
jg
xchg
dec
xor
lahf
loope
sbb
les
ljmp
xchg
test
out
xor
push
decb
push
adc
insb
dec
and
lret
jbe
and
push
push
mov
and
sub
sbb
push
push
jecxz
xor
sbb
pushf
std
cmpsb
lods
ret
aam
fists
call
push
cmc
aad
rcll
into
ss
ds
pop
mov
icebp
cmc
or
and
jp
mov
cmp
ret
cli
and
hlt
pop
push
adc
push
mov
xchg
pop
mov
pop
push
rcl
es
pop
shlb
je
pop
divb
int3
inc
mov
pop
xchg
out
fs
jne
push
cmp
and
inc
jo
aas
xor
cmp
or
xchg
push
adcb
sub
adc
insb
je
int3
pop
xchg
addb
mov
shrl
aad
frstor
mov
ret
lods
dec
push
jae
jl
popa
inc
jp
mov
xchg
xchg
mov
in
clc
and
testl
mov
incl
ss
push
js
testl
xchg
scas
lahf
lock
jo
jno
adc
cli
xchg
daa
xchg
mov
popf
adc
pusha
adc
imulb
out
add
mov
lret
lea
iret
jmp
mov
add
cmp
addb
sbb
orl
push
xor
popa
loopne
jo
repz
push
ss
mov
adc
mov
fdivl
incb
inc
jb
imul
stos
add
jmp
imul
mov
pop
mov
sbb
pop
lea
cmp
in
rol
adc
test
movsb
hlt
adcb
fdivl
in
mov
add
aad
mov
movsl
mov
cwtl
sbb
push
ret
jge
clc
imul
pushf
adc
xlat
mov
mov
add
repz
mov
push
sbb
xrelease
mov
sbb
xchg
in
dec
xor
cmp
fcomp
daa
push
push
imul
push
pop
pop
inc
xchg
ret
lods
popf
rorl
test
lock
icebp
pop
pushf
push
mov
stos
daa
std
jle
mov
out
mov
inc
push
xchg
sub
push
mov
mov
push
jne
xor
mov
pop
bound
adc
mov
push
decb
mov
mov
and
inc
mov
lea
sbb
pop
adc
xchg
inc
mov
mov
adc
xchg
jp
movsb
and
cmp
dec
push
pop
xor
push
dec
inc
and
fmull
mov
cli
dec
dec
cmp
popf
aad
mov
jl
or
and
cmpl
lahf
std
lret
sahf
ds
repnz
ret
dec
sub
add
aam
imul
mov
in
push
enter
mov
ffreep
cld
orb
pop
popa
subb
pop
dec
xchg
repz
es
mov
mov
xor
add
ret
addr16
aas
jb
pop
jae
repnz
push
ficoml
cmc
or
mov
dec
xor
fistps
out
push
pop
or
mov
jecxz
cmp
aas
lds
adc
daa
bound
in
jo
sub
and
shll
adc
add
rclb
xor
sarb
ljmp
pop
xchg
mov
push
mov
mov
pop
sub
not
pusha
and
add
je
add
xchg
ss
jbe
mov
pop
int
pop
outsl
jge
clc
lcall
clc
fiadds
adc
jge
es
scas
fisttps
dec
dec
leave
push
fadd
dec
sub
add
dec
das
dec
lahf
adc
add
aaa
les
mov
mov
repnz
daa
mov
in
or
xchg
stos
push
sub
pop
inc
in
iret
add
dec
xchg
pusha
mov
jo
pop
movq
divl
mov
ret
inc
sarb
cwtl
adc
pop
jmp
mov
rorl
push
pop
leave
inc
fimull
adc
dec
mov
outsb
push
add
adcb
sbb
and
pop
sbb
lock
mov
inc
stc
mov
adc
jno
outsb
adc
fistpll
and
mov
mov
pushf
and
in
out
mov
cwtl
add
sahf
fdivs
sub
push
loopne
inc
xor
dec
nop
jno
adc
inc
pop
cmp
or
leave
dec
jnp
jb
cld
xor
xor
inc
lea
xchg
mov
mov
lea
jb
dec
ficoms
jno
loope
repz
pop
inc
loop
rorb
or
lock
push
add
stos
in
bound
leave
adc
stc
push
sbb
and
imul
ljmp
adc
out
sbb
roll
inc
inc
in
sarl
into
cmp
xchg
int
jge
fstl
xchg
addr16
mov
hlt
loop
xor
cwtl
scas
sub
arpl
das
adc
push
pop
scas
mov
sbb
sbb
mov
adc
lods
pop
adc
mov
aas
test
sub
fmul
in
pop
add
inc
les
inc
addl
and
fsubr
jl
enter
adc
shlb
fidivs
movsl
in
jp
sub
cmp
daa
out
jae
scas
and
jbe
cmp
ret
sub
and
xlat
push
cld
jecxz
xchg
mov
cmpsl
sbb
xchg
push
stos
sbbl
sbb
pop
imul
loopne
js
mov
and
inc
incl
fs
pop
xchg
paddw
inc
addr16
cmp
aad
sub
gs
or
mov
pop
jns
js
outsl
imul
and
cmpsl
fnsave
aad
or
gs
mov
dec
ret
sbb
inc
lods
adc
xchg
pusha
or
mov
loope
or
ss
imul
ljmp
push
xor
jp
xchg
clc
mov
mov
or
mov
popa
mov
inc
sub
jns
push
repz
sbb
aaa
and
js
sbb
sub
mov
call
daa
add
fstps
mov
sbb
aas
mov
pop
jl
mov
cmp
imul
lods
or
scas
or
fisubs
scas
or
frstor
xchg
jne
orb
je
shll
mov
movsb
rcr
js
xchg
loopne
xchg
fucomp
mov
iret
cli
xchg
pop
add
and
ret
add
in
sub
push
mov
icebp
shr
or
sti
pop
int3
std
and
sbb
cli
lahf
insb
cld
out
fwait
ss
pop
int
addb
mov
int3
aaa
aad
or
mov
push
pop
or
aaa
aas
out
loopne
outsl
cwtl
and
les
stos
mov
lock
fisubrl
or
sbb
outsb
push
out
movsl
in
jecxz
stc
inc
leave
pop
cld
insl
ret
jl
dec
rolb
sub
adc
dec
jecxz
push
mov
movsl
add
sub
dec
loop
mov
xchg
stos
in
xchg
push
pusha
xchg
push
bnd
std
fisubrl
xor
xchg
mov
inc
sbb
call
sbb
xchg
mov
jbe
ja
outsl
or
subb
sbb
add
fcomp
cmp
mov
and
or
outsl
pop
inc
jecxz
add
pop
xlat
cmpsl
mov
add
std
inc
push
sbb
sbb
xchg
cmp
out
rclb
cli
mov
loop
mov
inc
sbbb
ljmp
movsb
or
addr16
sar
repnz
aaa
aas
push
jp
rorb
inc
stc
push
cld
rorl
mov
sub
or
daa
xchg
popf
jge
sbb
xchg
mov
ret
or
pop
imul
jmp
fsubrl
out
pop
shll
sbb
enter
test
aad
les
ret
inc
in
lret
add
cmpb
int3
test
adc
mov
loopne
add
adc
push
in
mov
or
jbe
dec
cmp
xchg
jg
popa
out
push
jbe
pop
cld
pop
test
or
mov
pop
and
mov
adc
es
lret
lcall
mov
and
ds
xor
push
ret
jae
data16
or
test
in
fldl
dec
std
pushf
pop
jp
int3
pop
into
xrelease
lds
lea
lret
jno
les
cmp
bound
inc
xor
pushf
pop
mov
mov
sbb
push
negl
sbb
xchg
jb
in
xor
ja
and
in
je
movsb
pop
shll
imul
mov
push
cmc
adc
mov
jl
dec
sub
aad
cli
pop
js
loope
lock
and
and
fcomps
sub
sub
mov
es
adc
sbb
lcall
fnsave
ret
cmpsl
loop
xlat
xchg
or
bound
in
jne
mov
or
into
cmpb
jp
addr16
rclb
out
lcall
fstpt
icebp
ficomps
push
mov
mov
movsb
pop
cmp
jle
pushf
sbb
jl
add
out
out
mov
xchg
xchg
mov
dec
adc
sbb
adc
ss
push
movsl
inc
xor
repz
test
jo
pop
mov
mov
rcrl
push
movsb
fbstp
mov
je
dec
mov
loope
mov
or
sbb
mov
fadds
movsl
sub
outsb
push
inc
or
shrb
roll
hlt
cmp
aad
lods
scas
shlb
push
sub
and
out
in
in
enter
push
add
push
mov
cs
iret
cld
mov
cmpsl
mov
testl
bnd
mov
and
insb
inc
and
mov
jl
mov
cmpsl
aad
cmc
fisttps
xor
and
cmc
pop
cmp
fwait
sbb
outsb
push
insb
cmp
mov
mov
mov
or
mov
sub
jmp
int3
test
insl
repz
add
add
dec
popf
rcrb
aas
ret
es
xchg
mov
nop
xchg
cmp
jb
sti
imul
clc
push
bound
add
imul
inc
ret
mov
jecxz
lea
add
push
and
ss
jbe
imul
lret
or
xchg
sub
push
shlb
stos
dec
jno
sbb
leave
mov
pop
out
lea
out
mov
xchg
adc
jne
cli
sub
pop
sbb
mov
jg
andl
shl
ss
data16
mov
cs
mov
scas
add
lret
addb
xchg
scas
sbb
inc
dec
push
xchg
and
ljmp
jae
push
stos
mov
movsl
punpcklbw
cltd
or
in
push
mov
or
cld
leave
in
pop
insb
pop
ljmp
xchg
pop
sub
add
fs
cmp
xchg
cli
mov
pop
mov
sbb
jge
push
scas
xchg
mov
xchg
test
xor
jno
stc
sahf
jmp
and
ljmp
xchg
inc
cmp
movsb
sbb
xlat
into
nop
hlt
sarb
pop
cmp
shll
hlt
rorb
movsb
jg
fsub
test
push
es
mov
sub
ja
insb
and
or
jmp
pop
imul
push
shrb
adc
sbb
mov
and
sub
push
ljmp
imul
push
jecxz
lea
pop
mov
out
rcrb
andl
test
inc
imull
pop
into
andl
daa
cwtl
xorb
dec
fsubrl
cmp
pop
adcl
mov
sub
shll
xchg
cmp
dec
jbe
jne
add
orb
dec
test
mov
jle
cmpsb
int3
ret
cld
jne
jge
lcall
pop
movsl
fisttps
jns
lea
mov
mov
jmp
dec
push
clc
mov
mov
imul
std
mov
popa
xor
add
xchg
cmc
sbb
lods
pusha
sbb
sub
rclb
sti
jecxz
fs
incl
sarb
dec
mov
fisttps
rcr
add
adc
adc
xchg
loop
dec
fsts
xchg
mov
xor
mov
pushf
sar
in
mulb
push
pop
loop
jnp
and
mov
and
movsl
cli
sbb
fsubs
popf
loope
sbb
rorl
iret
or
movsb
cmpsb
xor
leave
imul
cmpsb
out
adc
xor
out
imul
xchg
inc
adc
movsb
mov
jle
daa
hlt
sub
push
mov
mov
jns
cs
or
or
popf
ret
cmc
stos
push
xchg
sahf
loopne
rorl
cli
jp
in
orb
push
sbb
mov
fnsave
jle
mov
pop
mov
push
clc
jbe
cmp
dec
addr16
mov
scas
mov
push
dec
cmpsl
fisttps
lods
sbb
sbb
push
xchg
cmp
filds
lcall
push
ja
adcl
cmp
cmp
into
or
call
imul
sti
out
xor
cmpsb
lock
xor
jle
in
sub
mov
lods
inc
adc
sub
in
inc
cmp
movsl
push
movsl
mov
sub
scas
stc
jo
ja
test
xorl
sub
sbb
pop
faddl
pop
lods
fabs
sbb
fcmovbe
jecxz
int
inc
data16
enter
pop
jno
pop
cmc
pop
and
aaa
ret
push
outsl
mov
int3
jae
out
in
sbbb
xor
jl
mov
addr16
leave
or
fisubrl
aad
enter
xor
push
leave
xor
mov
mov
ljmp
cmovs
adc
dec
faddl
cmpb
std
sub
loop
adc
lods
test
ds
and
mov
fidivl
mov
insl
mov
jnp
into
push
les
orb
stc
push
lcall
xchg
dec
mov
out
inc
imul
stos
ficoml
jmp
in
dec
add
into
xor
and
dec
jnp
ja
popf
rorb
dec
fwait
push
mov
repnz
dec
xchg
data16
add
dec
popl
mov
cld
dec
sti
cli
add
mov
or
xchg
add
sbb
pushf
pop
repnz
das
push
andb
pop
jp
sbb
loope
mov
dec
shl
sbb
fcompl
xchg
shl
sub
adc
cmpsb
cmpsl
jb
mov
or
pushf
fcoms
mov
mov
dec
push
outsb
cltd
xor
jl
push
dec
popf
or
cmc
sbb
icebp
and
mov
and
cs
cli
ljmp
adc
mov
test
xchg
or
test
xor
in
xchg
xchg
in
cmpl
jmp
dec
aam
les
into
leavew
orl
je
das
aad
insl
sub
call
pusha
pushf
xor
inc
cwtl
add
xor
mov
int3
or
sub
in
inc
je
fidivs
arpl
push
pop
enter
mov
jno
shr
pop
imul
mov
sub
cmp
inc
push
mov
pop
out
gs
mov
aas
xor
loopne
dec
loopne
inc
and
xchg
dec
dec
sbb
dec
out
in
imul
mov
pop
cmp
mov
dec
sub
pop
in
inc
ja
jbe
lret
es
fsubs
lods
lret
dec
xchg
xor
fdivs
out
pop
sub
sbb
outsl
loop
lods
scas
movsl
fisttpll
icebp
dec
jne
fucom
imul
ret
repnz
stos
mov
cmp
adc
out
hlt
lock
mov
jno
xor
in
negl
aad
int3
int3
cli
aas
inc
push
add
jp
cmp
fisttpl
push
daa
jg
fdivrl
jge
sub
push
int3
push
loop
pop
fistpll
aad
xchg
ss
mov
cmp
mov
int3
xchg
mov
lcall
xor
movsb
mov
test
sbb
jecxz
pop
cmpsl
or
pop
push
mov
dec
or
and
push
stc
int
les
lret
daa
push
test
test
ficomps
xchg
dec
dec
cmp
test
fsubs
pop
sub
fisttps
outsb
mov
dec
or
hlt
jle
adcl
pop
jo
jmp
cmc
divl
push
push
sbb
mov
in
inc
cmp
sbb
cmp
mov
pushf
enter
sub
aad
int
mov
movsl
xor
lcall
xchg
or
add
movsl
adc
in
loope
push
cmp
push
sub
mov
bound
stc
pusha
out
movsb
sbb
aad
fstp
fcomps
xor
adc
xchg
inc
jle
jg
test
aam
adc
jb
notb
or
incb
lods
outsb
jno
enter
xchg
in
ljmp
cmp
imul
jmp
cmpsb
shll
mov
cmc
push
loopne
test
pushf
cld
js
sbb
fadds
ja
es
sub
jbe
cmp
xchg
pop
pop
into
mov
popa
mov
mov
popf
or
fs
adc
test
ljmp
and
lods
lods
and
icebp
sub
out
hlt
hlt
xor
push
pop
ljmp
movaps
aam
xchg
xchg
daa
pop
mov
xchg
fsub
mov
mov
aad
bound
dec
popa
lret
dec
push
pop
cmp
sub
jg
push
inc
xchg
mov
push
inc
jae
dec
xor
xor
mov
ret
mov
mov
lahf
das
pop
jge
enter
dec
outsb
fldenv
adc
or
pop
je
jns
adc
popf
jo
dec
cld
loop
pushf
add
mov
lea
das
or
xchg
pop
sbb
push
fdivrs
mov
movsb
xchg
mov
out
add
mov
mov
push
add
mov
pop
ja
outsb
jle
out
lods
sub
aas
dec
ja
jnp
xchg
cmp
cltd
daa
test
ret
sub
dec
jae
imul
pop
and
sahf
and
sub
sbb
push
inc
outsl
enter
arpl
cmpsl
rcrl
das
pop
scas
pop
cld
cmp
push
mov
js
sahf
jp
sub
pop
pop
mov
daa
inc
or
iret
jg
xor
add
fwait
aas
xchg
dec
sub
push
mull
loopne
sbb
std
sbb
mov
jmp
mov
xor
mov
das
icebp
cmp
add
inc
mov
push
fsubrs
cmc
mov
das
pop
jae
add
cmp
stos
cmp
add
mov
xchg
and
shrb
jmp
add
inc
mov
repz
mov
jo
xor
jge
int
jle
nop
imul
cmpsb
notl
jp
or
add
das
int3
hlt
clc
cltd
or
cmc
cmp
add
insl
jg
in
mov
and
subb
addr16
in
sbb
in
xchg
sub
jne
mov
les
sbbb
popf
fisubl
jno
bound
rclb
adc
push
stc
cli
int
icebp
dec
lahf
jg
jl
nop
movsl
sbb
xor
jbe
cmp
leave
ja
mov
add
xchg
je
pop
scas
push
mov
insl
mov
xchg
add
add
fnstcw
shrb
enter
push
out
xchg
test
sub
cmp
dec
jl
push
jbe
add
adc
icebp
dec
cmp
pop
out
mov
loope
popa
jl
in
sarl
jno
ret
into
aaa
push
fdivrl
push
add
int
push
pop
mov
dec
and
in
sbb
mov
adc
imul
pop
sub
mov
mov
popf
clc
sbb
fsubl
lea
scas
loope
mov
ror
or
xchg
pushf
jmp
das
mov
iret
inc
dec
push
adc
hlt
rorb
sarl
pop
stos
js
test
pusha
inc
aam
jne
cmp
jmp
mov
pop
loop
daa
push
add
sub
movsl
shlb
data16
pop
push
scas
dec
rorb
int3
sbb
push
movsl
cmp
xchg
outsw
lcall
leave
sbb
mov
mov
lret
jbe
adc
mov
push
xchg
push
or
stos
add
lods
inc
fs
dec
mov
mov
xchg
addl
test
mov
dec
ret
or
jo,pt
push
rcl
pop
lret
pop
jns
in
or
lret
shl
push
test
push
sub
outsb
cli
xor
pop
mov
std
cmp
push
packsswb
stos
cli
pop
repz
add
sbb
shr
rcll
pushf
pusha
imul
lret
out
imul
pop
bound
sbb
sub
lea
mov
push
inc
rorb
sbb
pop
bound
mov
jg
xchg
sub
and
and
push
dec
jmp
inc
clc
shlb
lahf
sbb
pop
aam
lret
cs
out
xchg
cmp
mov
and
subl
push
cmpb
dec
scas
dec
dec
aad
mov
jmp
push
dec
push
ret
and
push
mov
push
daa
dec
fidivl
in
std
mov
push
push
aaa
lret
xchg
loopne
xchg
pop
mov
arpl
push
mov
jnp,pt
xor
gs
rol
sar
add
dec
in
leave
sbb
fidivs
or
rorb
pavgb
sahf
and
repz
jg
sub
out
and
stos
stc
into
and
popf
adc
aam
cwtl
xor
xchg
outsl
inc
push
stc
int3
mov
mov
or
pop
jno
sbb
mov
ffreep
ss
inc
adcb
jle
cmp
faddl
lret
cltd
mov
js
test
pop
push
cli
rclb
pop
daa
pop
sbb
jo
fiaddl
call
ret
popf
mov
unpckhps
mov
mov
mov
jnp
pop
inc
mov
push
mov
xor
insb
lea
xlat
xchg
sub
incl
leave
push
gs
cwtl
cmpsl
jg
call
add
xchg
mov
mov
push
loope
xchg
shrb
mul
cmpsb
cmpsl
or
pop
fwait
add
scas
mov
sbb
cmp
insl
pop
loope
push
jns
cmp
out
dec
cmp
fcmovne
xorb
rcr
movsb
inc
push
cmpsb
inc
adc
call
sub
cmp
aad
hlt
or
nop
xchg
sti
ljmp
pop
lods
out
pop
outsl
ret
pop
mov
xchg
push
xchg
cld
mov
add
ret
lret
aam
push
jmp
and
jae
adc
sbb
gs
fmulp
mov
dec
repz
pusha
dec
fwait
fs
xchg
push
cmp
push
imul
mov
sub
popf
mov
mov
xchg
adc
pop
or
into
jno
pop
jo,pt
lret
popa
jno
popf
push
jae
add
sbbl
pop
cltd
adc
push
push
nop
dec
in
js
jo
ret
rolb
push
mov
jmp
jl
arpl
sub
fistpl
movsl
mov
in
pop
pop
xor
jmp
pop
and
xlat
cmp
mov
xor
mov
ret
mov
pop
test
daa
js
movsb
lret
xchg
cmpsl
mov
bswap
sbb
jne
jnp
sub
pop
out
xor
xchg
push
pop
jnp
aaa
out
das
sbb
push
hlt
cmp
inc
mov
mov
nop
xor
cmc
call
pop
sub
mov
cmp
les
fwait
popa
sahf
mov
fidivrl
fisubrl
xlat
js
or
xchg
inc
inc
xor
adc
rcl
lcall
or
insb
jp
dec
jle
jo
cli
rcl
cs
xchg
int3
in
cmpsb
jecxz
into
sbb
out
fucom
push
inc
pop
xlat
fistpl
addr16
fiaddl
popa
scas
or
fiaddl
cmp
aam
adc
jo
mov
jb
push
ljmp
or
jecxz
idivb
sub
iret
dec
xor
repz
xchg
push
dec
dec
jne
adc
cwtl
idivl
sbb
adc
push
sbb
mov
fbstp
pop
xlat
jbe
cmc
pop
add
cmp
adc
lds
or
fistps
push
add
mov
ret
pop
xchg
jne
mov
sahf
pop
out
push
stos
rcrb
xor
popa
sti
lea
out
mov
cmp
inc
std
es
and
dec
dec
int3
cs
mov
xlat
adc
gs
aad
lds
mov
xor
push
stos
std
std
pop
mov
push
lret
dec
push
fdivp
and
stos
icebp
or
jp
dec
lcall
cmp
mov
fildll
jmp
sbb
xchg
hlt
int3
ret
xchg
aad
call
cmp
in
pop
out
repz
iret
cmp
push
inc
jb
mov
xchg
adc
xor
adc
data16
and
pop
xchg
mov
test
mov
faddl
adc
xchg
cld
mov
pop
inc
repz
leave
mov
sbb
jb
fists
je
bound
sbb
imul
jl
jp
clc
push
push
cwtl
mov
add
cmp
inc
call
sahf
ljmp
adc
movsl
bound
push
sbb
in
dec
rcll
hlt
insl
pop
pop
mov
inc
sbb
dec
inc
sbb
pop
inc
std
repz
aaa
aam
enter
adc
sub
in
xor
xor
fbstp
mov
pop
stos
pop
push
pop
pop
out
jmp
sub
push
loopne
mov
mov
scas
add
add
and
xchg
ret
stos
xor
sti
and
sbb
pop
pop
xor
ret
std
jns
lock
inc
arpl
mov
jg
mov
fdivl
test
mov
fucomip
cmp
mov
lock
push
jno
sbb
sahf
mov
xor
jl
xchg
mov
adc
cli
aam
lock
xchg
test
into
inc
sbb
mov
leave
in
jns
call
jae
xchg
aas
sub
int
push
mov
or
add
orl
xchg
mov
cmc
pop
jae
inc
sub
bound
out
xchg
pushf
cmpsb
cmp
js
jne
leave
jmp
cmc
pusha
inc
lahf
lock
hlt
loope
in
idiv
pop
aad
test
rcl
lahf
paddb
push
js
xlat
pop
pop
xchg
jge
dec
push
scas
out
lock
dec
in
cwtl
cmp
pop
jne
iret
inc
lret
shll
int3
imul
or
or
mov
pop
ja
sbb
pop
inc
ja
data16
mov
js
sahf
imul
mov
and
dec
mov
and
sub
mov
lock
jbe
push
mov
push
inc
sbb
adc
sbb
sti
insb
aam
data16
cs
mov
add
jecxz
ret
jle
cmp
pop
sub
xchg
std
shl
cmp
aam
lods
mov
xor
jne
jno
repz
mov
mov
jnp
mov
in
and
mov
jmp
out
push
adcb
imull
rorb
sub
mov
in
fcomps
jno
push
inc
mov
ficoms
lods
mov
jecxz
pusha
insl
sahf
and
push
divl
lods
out
and
pop
and
jmp
outsl
inc
jg
insb
testb
jp
lret
out
leave
xor
outsl
out
dec
inc
movsl
mov
sub
sbb
add
add
test
rcll
pop
lds
sub
test
rcrb
cmpsb
and
dec
cmpsl
out
fildl
sbb
cli
xchg
jae
loope
mov
adc
fisttpl
in
xor
jp
sub
in
aam
inc
jae
into
sbb
mov
js
int3
sub
mov
enter
cmp
das
and
fwait
les
dec
add
in
pop
ja
push
mov
mov
pop
jbe
outsb
lret
xor
xlat
or
cltd
fwait
pop
or
in
mov
push
ds
adc
pushf
pop
repnz
or
jle
inc
xchg
lea
and
stc
pop
sub
mov
mov
jg
push
xchg
push
mov
dec
stos
xchg
adcb
mov
mov
sbb
lcall
lods
mov
dec
push
or
push
mov
jg
test
pop
int3
xchg
icebp
iret
mov
sub
je
mov
stos
push
iret
icebp
ds
clc
outsl
adc
push
add
pusha
int
mov
aad
fsubrl
js
cmc
push
adc
dec
ja
scas
arpl
inc
inc
lods
call
mov
push
add
xlat
lods
dec
arpl
icebp
mov
cmp
xchg
aam
jl
mov
sub
hlt
jbe
andb
iret
rcll
out
outsl
mov
mov
push
hlt
mov
lahf
leave
repnz
mov
inc
inc
and
aaa
mov
bts
cmpl
std
int
jg
pushf
dec
sbb
dec
call
cld
pop
fstpl
mov
xchg
std
push
repz
out
cmp
push
add
in
lds
addr16
lahf
negl
mov
dec
push
push
inc
cld
push
pop
sub
pop
jmp
mov
adc
sub
mov
jns
pop
cmp
inc
lahf
push
dec
cmp
jnp
pop
mov
xchg
aad
fwait
movsl
sub
xchg
xchg
cmpl
stc
adc
sbb
add
loop
packuswb
test
fiadds
hlt
xchg
lcall
adc
repnz
leave
cmpsl
xorb
dec
or
sub
dec
pusha
lds
lea
stc
sub
fsts
lret
jo
cmp
lcall
je
dec
inc
add
aad
clc
outsl
mov
jecxz
andb
inc
notl
xor
mov
lahf
in
lea
jb
add
ss
and
adc
dec
stos
sti
fst
pop
mov
scas
inc
outsl
ljmp
push
filds
push
jle
das
jp
and
cmp
mov
loop
pop
push
inc
aad
adc
inc
ret
out
les
pop
push
out
ficoms
sbb
mov
mov
push
jns
lret
inc
lock
or
xchg
loop
sbb
xor
pushf
scas
leave
int
mov
adc
mov
sbb
imul
add
test
pop
in
aas
mov
sub
mov
ret
popf
cwtl
adc
mov
mov
cltd
scas
idiv
lahf
pop
adc
mov
into
test
jmp
and
jg
xchg
in
jl
pop
pop
adc
std
cmp
int
subb
gs
xchg
mov
cmp
lahf
mov
popa
sbb
or
mov
pop
jle
imul
test
iret
in
mov
stos
mov
pop
add
pop
scas
cmp
xchg
incb
mov
mov
out
ret
cmp
pop
and
cmc
shll
sbb
ss
push
or
cli
in
mov
xchg
fbstp
insb
and
dec
icebp
adc
test
adc
sbb
push
test
in
or
mov
mov
inc
xchg
int3
jnp
mov
or
mov
jno
jl
xchg
mov
mov
and
int
lea
decb
lods
popf
cs
push
int3
data16
cli
cmp
sbb
clc
and
jge
jecxz
mov
addb
jne
mov
daa
mov
pop
std
cwtl
sbb
sub
pop
lcall
popa
repz
push
dec
arpl
out
mov
or
shll
mov
and
aad
add
aad
jg
test
push
sub
addr16
lds
outsl
sub
xchg
inc
adc
mov
imul
push
decb
pop
add
je
mov
fidivl
dec
inc
sbb
repnz
push
adc
jp
or
stos
adc
cmpsb
mov
sti
cs
stos
sbb
inc
fwait
lock
mov
aas
mov
stc
mov
adc
mov
sbb
mov
mov
rolb
icebp
inc
push
ror
or
fcomp
adc
mov
xchg
xor
addr16
jno
sub
insb
cmp
pop
jbe
sub
xor
hlt
mov
neg
test
mov
and
sub
test
or
and
xor
enter
inc
mov
test
xchg
dec
fucom
loop
mov
jns
mov
cld
jle
pop
and
fdivrs
lcall
pusha
mov
xchg
fadd
movsl
cli
cmp
shlb
pcmpeqb
movsl
pop
ljmp
data16
jg
jbe
jp
stc
push
movsl
imul
mov
test
cmp
test
std
inc
mov
outsb
jge
push
loop
cltd
int
lahf
or
cmp
mov
push
and
pusha
mov
loopne
xor
pop
xchg
xchg
in
dec
inc
scas
aas
jecxz
std
cli
into
loop
pop
jl
sbb
add
or
lret
arpl
ss
int
mov
pop
mov
pop
cmp
bound
mov
push
test
inc
jl
ss
mov
cmp
ja
daa
jb
cmp
pop
push
push
push
rorb
and
imul
jbe
mov
mov
daa
aaa
inc
ja
dec
mov
mov
add
dec
adc
js
xor
xchg
push
xor
lock
push
push
in
outsb
movsb
dec
mov
sub
lods
aaa
xor
ret
lahf
ljmp
inc
jg
js
call
ds
jp
aaa
or
dec
out
outsb
pushf
add
dec
fisttpl
dec
rclb
inc
fdivr
insb
mov
jg
add
les
sub
mov
arpl
ficompl
pop
test
mov
mov
pop
adc
leave
loopne
mov
shrl
sub
lock
inc
mov
fndisi(8087
and
sbb
adc
dec
inc
clc
pop
push
leave
insb
mov
sub
inc
jnp
ljmp
cmp
enter
jo
ds
pop
js
in
jns
xorb
dec
mov
and
bound
sarb
js
dec
call
leave
out
jo
pop
sub
inc
pusha
std
loopne
out
pop
fwait
insb
js
mov
clc
xor
adc
mov
pop
xor
loop
add
aaa
outsl
adc
in
sub
arpl
inc
xor
inc
dec
jno
mov
mov
cmp
mov
mov
nop
cmc
sbb
imul
inc
push
inc
clc
xchg
add
jbe
mov
mov
sbbl
dec
ss
and
inc
dec
jb
mov
xchg
repz
ds
mov
xlat
xor
arpl
and
mov
movb
lock
rcll
and
or
sbb
mov
push
js
je
loopne
mov
pop
mov
push
in
testl
scas
gs
inc
lea
cmp
ljmp
cmp
lahf
leave
mov
xor
in
inc
rcr
lahf
sub
jb
pop
out
aaa
fmul
cld
sahf
mov
outsb
adc
xchg
pop
or
xor
jb
rcr
nop
pop
das
cld
jb
jle
pop
scas
lods
cmovns
addl
sbb
rcrb
mov
add
jo
pop
popf
mov
cmp
ficoms
stc
pop
pop
mov
push
loope
push
jp
clc
dec
mov
loopne
iret
std
fwait
push
sbbl
enter
scas
into
loope
movsb
inc
or
cmp
xor
mov
out
inc
sub
insl
push
inc
scas
add
push
enter
call
cmpsl
jl
lds
repnz
dec
lret
jne
js
push
sbb
xchg
ret
incb
add
cmp
loope
popf
add
or
add
lret
or
mov
push
test
inc
mov
or
pop
pop
jmp
mov
shl
mov
push
clc
xor
sbb
fidivl
bound
jle
jecxz
loope
jecxz
jg
out
xchg
and
daa
lods
movsl
rorl
or
sti
mov
sti
pop
jecxz
das
das
xor
push
xchg
rorb
pop
add
mov
mov
orb
jg
notb
int
sbb
jns
loopne
pushf
dec
sub
jg
cmp
pop
push
daa
movsl
movsl
ss
aam
pusha
iret
lahf
mov
and
pop
cmpsb
mov
loop
mov
andb
rcll
mov
movsb
nop
lret
iret
shl
and
xlat
jecxz
mov
movsl
loope
sub
jne
mov
lret
mov
jb
push
pusha
push
fsubrs
test
or
xchg
fidivl
jle
cmp
push
repnz
dec
cmp
sub
mov
stc
xchg
cmp
jmp
adc
cli
sbb
test
es
lods
adc
push
cmp
scas
push
icebp
push
out
das
sahf
pop
add
cmp
xor
in
pop
orb
mov
mov
fdivrl
loope
jle
dec
loope
pop
sbb
jp
in
mov
dec
xchg
jmp
stc
push
addr16
mov
xchg
cmp
inc
scas
push
repz
and
jg
jp
imul
call
insl
lods
xlat
xchg
inc
insl
xchg
in
out
ret
push
cmp
clc
inc
fsub
push
outsl
xchg
or
aad
xor
and
cli
insl
mov
adc
pop
xchg
stc
pop
sbb
mov
mov
daa
divb
out
sbb
xchg
or
and
in
add
loop
popf
sub
jne
sub
sub
pop
call
cs
sti
and
repnz
ljmp
pop
sahf
xor
push
sbb
xchg
add
mov
rcrb
add
pop
mov
inc
mov
adc
pop
pop
mov
inc
adc
insl
stos
imul
sbb
jl
lahf
rorl
scas
sub
mov
adc
out
in
aas
or
popf
xor
adc
jo
into
roll
adc
ret
xor
jmp
loope
xchg
mov
and
mov
inc
push
inc
into
mov
imull
xor
out
loop
mov
gs
movsl
xchg
add
pusha
out
mov
add
in
or
inc
push
push
cld
cmp
lea
stc
stos
repnz
pop
lds
jno
mov
cmp
cmpsl
or
test
call
pop
outsb
sub
popa
loope
jmp
cmp
movsb
imul
dec
add
adcb
jge
scas
mov
orl
mov
add
cmp
mov
pushf
xchg
les
lret
stos
js
repz
shlb
in
mov
or
imul
adc
es
rorb
and
lods
arpl
mov
pushf
push
leave
data16
dec
push
and
jnp
cwtl
sbb
fs
sahf
sub
xor
fidivrl
fsubrs
sbbb
mov
pop
mov
sbb
mov
inc
mov
sub
push
push
aas
sahf
pop
pop
sbb
and
inc
cmp
xor
cmpsb
lock
dec
dec
xchg
outsb
ret
lods
pop
out
adc
cmp
jb
sahf
decb
clc
mov
inc
jae
out
mov
mov
sar
xchg
sub
test
mov
dec
push
aas
push
push
sub
pop
cld
add
in
int3
dec
xchg
mov
mov
popa
jo
cwtl
lods
inc
pop
xchg
mov
bound
inc
orb
jl
cmpsl
mov
out
dec
imul
cwtd
pop
jo
add
cmpsl
xchg
lds
sbb
sub
popa
aas
pop
add
push
adc
jmp
jmp
in
repz
iret
add
negl
ja
subb
movsl
xchg
jne
jl
dec
jne
inc
outsb
loope
or
leave
cmp
stos
jne
movsl
mov
dec
push
mov
je
test
sub
adc
mov
jp
jmp
add
shl
add
mov
cld
dec
and
hlt
cmp
xlat
pop
cmc
aam
out
mov
cmp
call
and
divl
add
or
test
scas
lods
xchg
ret
mov
test
inc
mov
or
lea
dec
pop
outsl
mov
sub
jmp
std
fcmovne
cmovp
jo
pop
or
sbb
clc
push
aad
negl
js
lods
std
mov
xchg
mov
popf
test
adc
shl
hlt
into
and
dec
addb
sub
or
cli
xchg
aaa
mov
xchg
rclb
ja
das
insl
add
iret
pop
cli
mov
sti
adc
cmp
leave
ja
in
gs
or
pop
mov
xlat
fbld
or
jb
loope
mov
push
xchg
pop
in
lock
sbb
add
pop
lret
add
mov
mov
test
je
mov
call
and
xor
xlat
adc
fs
dec
pop
je,pt
mov
hlt
test
jbe
ret
sub
loop
cmp
pop
stc
and
je
ljmp
icebp
bound
mov
dec
mov
fs
lahf
mov
add
jmp
loope
mov
mov
mov
les
pop
xchg
in
cmp
jecxz
sub
mov
push
cwtl
sbb
pusha
popf
xor
pop
xchg
enter
dec
mov
shr
loope
dec
xor
lahf
bound
cmp
sbb
repnz
test
in
orb
shrl
sbb
dec
bound
sbb
jl
mov
mov
pop
push
add
xlat
lea
jbe
and
sub
or
and
test
push
fimuls
cmp
mov
pushf
mov
ljmp
sbb
adc
pusha
ja
and
fimull
sbb
lods
xlat
mov
or
shl
push
mov
addr16
and
cmpsl
push
xchg
mov
into
push
sub
pop
int
test
lret
jg
lahf
nop
xchg
cltd
es
jnp
icebp
jp
mov
sbb
cmp
xor
scas
mov
lods
xchg
cmp
aas
mov
bound
imul
or
push
xor
iret
add
popa
icebp
xor
push
cs
insb
mov
jnp
mov
jle
fistpl
push
cld
jns
xchg
dec
sub
or
int3
movsb
js
xchg
addl
repz
fisttpl
xchg
mov
jo
lret
flds
stc
jge
jne
hlt
inc
mov
mov
stos
scas
xchg
ds
or
dec
jle
cmp
pop
cmp
cmpsl
xor
xchg
data16
pusha
mov
cmpsl
aam
cmp
xchg
dec
dec
push
addr16
popl
mov
push
mov
in
dec
jge
fdivs
jo
add
lock
mov
jecxz
cmp
pop
nop
dec
mov
or
xchg
rcrl
icebp
rol
and
movsl
xor
cli
cli
lahf
cmp
adc
ljmp
fisubrl
and
push
xor
ret
inc
pop
popa
test
outsb
popa
pop
out
or
mov
ret
cli
cld
fildll
je
mov
xor
sub
or
xorl
add
sbb
pop
iret
sbb
push
jnp
lods
pushf
mov
les
fs
mov
lods
test
lds
cmp
jg
shlb
adc
movsb
xor
add
pop
incl
xor
aaa
in
xor
and
testl
or
push
out
iret
lahf
cmp
das
loope
mov
ret
xor
in
fcoms
jle
ret
test
push
xor
xchg
fisttps
pop
loopne
outsl
and
push
and
leave
aaa
push
dec
sti
in
cs
call
mov
cmpsb
inc
fstl
dec
or
dec
mov
mov
pop
xlat
mov
pusha
fs
sbbb
rclb
loop
mov
bound
cmp
hlt
insl
xor
push
pop
nop
lret
js
fbld
cltd
cmp
xchg
push
inc
aas
ficoml
pop
negb
data16
leave
sbb
fwait
pop
ret
sarb
sub
mov
cmp
inc
scas
pusha
ljmp
call
xchg
adc
add
ljmp
popf
or
jge
or
inc
pop
das
xchg
scas
lahf
jae
adc
cs
mov
mov
cmp
gs
int
leave
jg
pop
push
adc
lds
sbb
sbb
push
das
cmpsl
jmp
fildl
addr16
test
fdivl
mov
push
xor
mov
setp
rcll
out
stos
fwait
pop
jle
or
scas
xchg
mov
push
movsb
sahf
pusha
addl
lea
mov
sbb
loop
icebp
ljmp
mov
xchg
inc
and
mov
pop
push
in
jno
adc
imul
into
ret
notb
ljmp
and
lods
test
insl
scas
leave
xchg
push
push
sbb
lret
dec
ja
sbb
notb
movsb
fdivs
jecxz
mov
sub
inc
push
mov
out
les
dec
sub
push
movsl
js
mov
fisubrl
cltd
ficomps
pop
incl
jns
mov
pop
xchg
in
inc
sbb
xorl
jns
lods
outsl
cmpsl
mov
mov
push
ja
cmp
dec
fs
xchg
add
sahf
sub
pop
into
repnz
ss
insb
aas
jecxz
sbb
outsb
pushf
mov
imul
push
cs
out
mov
clc
out
subb
add
scas
loope
fmuls
sbb
and
loop
cmova
pop
das
sub
loop
mov
dec
enter
ljmp
inc
and
inc
jb
pop
and
and
call
popa
mov
inc
loopne
adc
std
xor
dec
leave
hlt
adc
add
cwtl
jp
cld
das
into
sub
test
in
inc
xchg
sub
dec
mov
fisubrs
arpl
cmp
jbe
rclb
fisubs
movsb
push
notl
scas
push
out
out
in
ret
clc
sbb
cwtl
xchg
sbb
mov
dec
inc
shlb
std
outsl
fcmovnbe
mov
sarl
inc
dec
dec
pop
dec
insb
push
orb
jne
movsl
and
jne
mov
icebp
out
fs
insl
push
sahf
lock
ss
popa
and
sub
xchg
push
testl
jb
sub
xor
xchg
jl
jno
dec
in
jae
push
xlat
out
fsts
jle
daa
sub
cmovb
les
jne
cli
lcall
adc
adc
enter
adc
cmp
sbb
push
ret
fwait
sub
jne
insl
xchg
pop
dec
andl
fmuls
es
sbb
mov
sub
jnp
fwait
pop
jnp
nop
loopne
xor
or
pop
mov
aad
inc
jno
mov
in
pop
jge
xchg
jl
int3
scas
test
mov
fiadds
or
std
sub
outsb
loop
daa
cmp
sbb
sub
in
push
popa
in
pop
sub
mov
lock
pusha
or
mov
jno
xor
cmp
mov
adc
push
das
mull
repnz
jbe
jge
loopne
cmp
aas
lods
in
lret
adc
xor
fs
mov
xchg
push
enter
mov
jge
cmpsl
icebp
popa
xchg
mov
push
inc
xor
stos
xchg
outsb
xchg
shrb
dec
imul
sub
mov
inc
dec
daa
and
fstl
lret
outsl
add
jae
adc
mov
xlat
outsl
push
sarl
add
mov
loope
rorb
xchg
insb
xchg
popf
xlat
adcb
fmull
mov
mov
add
jmp
jo
xor
push
mov
mov
ljmp
mov
and
mov
xchg
nop
adc
mov
out
aas
ret
xor
push
stos
inc
dec
or
xchg
xorb
add
mov
gs
xlat
jecxz
dec
inc
add
loop
adc
scas
mov
pop
jg
bound
sbb
push
imul
mov
dec
lods
out
loop
addr16
das
jb
xchg
jb
test
aad
xchg
mov
fadd
je
imul
sarl
scas
ja
bound
dec
icebp
aad
and
popf
cld
xchg
or
iret
mov
lods
xor
inc
aas
repz
pop
push
push
xor
mov
cltd
xor
adc
pop
inc
xchg
pop
sbb
loop
scas
std
inc
dec
imul
jnp
xchg
hlt
scas
mov
push
mov
mov
adc
add
aaa
aaa
and
mov
in
push
cwtl
fstps
das
mov
jae
lcall
cmc
xor
xchg
fcmovne
jo
lcall
fwait
sub
add
outsl
pop
sbb
mov
and
xchg
mov
les
xor
pushf
jo
pop
cmp
in
adc
fadd
in
push
fs
or
hlt
or
xchg
mov
inc
stos
sub
mov
dec
push
sbb
push
inc
pop
sub
cmc
test
dec
pop
scas
popf
pop
imul
xchg
pop
add
and
outsl
js
and
xchg
in
addr16
pusha
jne
das
pop
repnz
push
fsubs
xlat
clc
into
imul
mov
std
push
mov
sahf
std
sbb
pop
xor
push
mov
lock
xchg
push
adc
cmp
pop
rcrb
out
out
stos
out
push
repz
fmull
push
jo
and
sbb
xor
lahf
roll
enter
shlb
sub
lret
dec
jb
movsl
mov
add
inc
aaa
je
call
adc
and
add
cmpsb
filds
popa
ljmp
mov
fdivrl
rorb
lods
sub
jb
notb
pushl
jbe
pop
gs
xchg
or
jns
shl
jecxz
jg
jmp
mov
inc
mov
push
leave
mov
dec
and
cmpsb
jmp
sub
pop
sub
push
sub
daa
jae
shlb
xchg
pusha
orl
mov
insb
push
arpl
sbb
sahf
xchg
xor
inc
insl
add
jne
lods
les
stos
jmp
cmp
inc
adc
aam
jb
das
jmp
mov
xchg
cmp
add
icebp
and
in
das
add
cmp
int3
xor
in
or
aad
or
std
lcall
jmp
or
add
aas
insl
jnp
jo
scas
or
jl
adc
pop
add
push
lahf
jo
repz
jecxz
inc
pop
jo
fdivrs
dec
icebp
out
addb
enter
add
mov
test
xchg
mov
mov
imul
stc
mov
pop
add
cwtl
cli
int3
shr
xor
shlb
mov
cld
dec
xchg
arpl
rorl
jbe
outsb
pop
inc
ds
out
icebp
insb
add
mov
dec
bnd
in
popf
out
cmp
in
pop
xor
xchg
in
imul
and
dec
sub
testl
lret
or
push
or
dec
pop
sub
sbb
jg
adc
mov
fsts
rol
inc
sbb
scas
nop
lods
leave
sbb
xchg
inc
test
outsb
arpl
pop
test
xlat
shl
pop
sub
xchg
xor
mov
pusha
sub
scas
stos
dec
aaa
dec
push
add
outsb
adc
ret
in
pop
mov
jl
orl
iret
sbb
cmp
jb
sub
sbb
cmpsb
lahf
jmp
insb
cltd
push
fnstsw
dec
cmp
mov
adc
ret
or
loopne
jno
adc
cmp
jae
and
loop
je
xchg
push
adc
cmp
inc
push
add
div
dec
jns
cli
pop
pushaw
lret
sarb
fwait
int3
nop
js
fstpt
repz
jmp
test
les
sbb
sbb
add
into
mov
lods
sbb
repz
stos
xchg
inc
or
mov
jl
mov
pop
movsb
push
mov
cmp
lret
loop
push
movsl
int3
sub
jle
fcomps
and
stos
int3
int
mov
xchg
inc
xor
push
mov
push
jnp
jbe
push
repz
adc
in
mov
out
jp
jg
xchg
cmp
repz
imul
outsl
shl
adc
add
xchg
fildll
fwait
shl
sub
shlb
loop
or
testl
les
pop
insb
incb
and
xor
in
xor
lea
test
out
aam
dec
add
xchg
leave
loope
sbb
sbb
in
aam
xchg
lods
lret
jae
and
or
shrl
jle
push
sti
add
xchg
or
pop
mov
fcmovu
push
enter
negl
lret
cmp
loope
xchg
xchg
lahf
mov
or
pop
fdivp
add
shl
xlat
or
push
bound
iret
dec
xor
andb
mov
xchg
lcall
mov
test
push
mov
clc
fsubrs
mov
lods
adc
jne
popa
in
jb
jg
scas
xchg
jbe
rorb
push
ss
jne
pop
sub
pop
mov
cmpb
or
cmpsb
ffree
stos
mov
xchg
and
push
push
ss
jg
repnz
cmp
cwtl
popa
nop
outsb
testb
push
dec
xor
pop
inc
mov
mov
push
je
movsb
hlt
or
notl
in
cmc
add
jp
mov
loope
stc
mov
adc
sbb
hlt
and
pop
cmp
div
mov
aaa
or
fwait
sbb
xorb
or
add
jno
xor
push
pop
iret
out
cltd
or
xchg
sbb
lcall
f2xm1
add
jne
in
inc
jge
in
and
cld
out
lock
cltd
movsl
add
pop
repz
jns
and
movsl
ds
sbb
add
ja
in
adcl
inc
sti
or
xchg
lds
loope
xchg
daa
jbe
outsb
sahf
fiadds
and
adc
or
xor
dec
sti
ficoml
pop
pop
jg
jne
adc
pop
dec
inc
dec
lret
xchg
sub
adc
mov
stos
ret
jo
push
stc
sbb
inc
movsl
mov
push
iret
pop
outsb
dec
xchg
cmp
cwtl
mov
stc
gs
sub
add
jae
cmp
test
sbb
scas
cld
fists
sbb
mov
sub
das
frstor
xchg
sbb
stos
dec
add
in
push
mov
out
add
mov
sub
je
fdivrs
imul
push
test
fmull
das
mov
ret
faddp
jmp
out
jne
push
cmc
test
idivb
sbb
dec
les
xchg
mov
daa
jbe
jge
movsb
insl
pusha
push
jg
scas
mov
sbb
push
push
or
mov
cmp
lahf
xorb
cmp
leave
adc
fs
hlt
jmp
pop
pop
shll
jbe
addl
sbb
push
shl
scas
mov
frstor
daa
mov
dec
add
hlt
test
les
dec
hlt
fsubrl
fistpl
jb
cmpsl
ret
test
mov
int3
imul
je
mov
out
testb
inc
mov
dec
jl
xor
clc
mov
les
xlat
popa
dec
jne
das
sub
xlat
shl
outsb
lods
fwait
mov
mov
jl
cmpsl
test
sbb
popf
inc
cld
push
cwtl
lea
mov
cmc
nop
aad
push
push
mov
push
inc
shll
daa
jl
test
adc
pop
clc
jns
loopne
je
nop
add
mov
sbb
shr
fsincos
inc
pop
lods
mov
jecxz
test
xor
push
add
pop
in
pop
jmp
loopne
iret
aas
jl
clc
push
sub
xor
jns
pushf
push
cmpsl
xchg
add
addr16
xchg
lcall
and
sbb
inc
into
rorl
fldcw
jo
insl
or
pop
movsl
jle
jmp
fdivl
leave
inc
push
adc
loop
out
mov
data16
mov
jge
or
pop
mov
out
add
cltd
mov
mov
fsts
ds
dec
lret
stc
cltd
in
add
mov
lea
lcall
cwtl
out
arpl
inc
sub
xchg
inc
int3
mov
ds
ss
pop
xchg
in
sbb
gs
sbbb
cmc
stos
test
dec
cmp
aam
repz
call
mov
xchg
mov
jne
aam
leave
mov
popf
call
fwait
xor
out
xchg
shrb
pop
xor
popa
imul
jl
dec
mov
aad
cmp
xchg
pop
xor
sbb
inc
js
add
xor
lahf
mov
cmp
jno
push
out
sub
sbb
fstpl
mov
imull
daa
subb
push
sub
scas
out
mov
push
pop
mov
movsl
inc
rol
test
push
fs
pop
movq
mov
jns
cld
pop
test
adc
xchg
fsts
inc
mov
cmpsb
pop
mov
jb
mov
sub
aad
aam
mov
xor
cltd
or
sti
fnstenv
jb
xor
jecxz
xchg
push
shrb
outsl
mov
push
pushf
add
in
adc
aad
push
lret
adcb
ficomps
into
push
fwait
jmp
scas
lret
ret
sti
subb
inc
stos
insb
cmc
loope
dec
mov
hlt
outsb
or
sarb
and
push
int
mov
push
sti
out
shlb
icebp
mov
test
movsl
xchg
mov
pop
xchg
leave
sub
in
jl
dec
adc
sbb
mov
es
xchg
xlat
xchg
jl
loopne
je
jbe
or
sbb
lds
xchg
jnp
hlt
xlat
hlt
pop
sbb
push
cld
dec
ret
popf
daa
inc
dec
xchg
cmc
jl
cmp
clc
or
loopne
mov
xor
xor
mov
aas
xor
lds
int3
rclb
ret
movsl
sbb
mov
xchg
jge
emms
mov
adc
ret
arpl
mov
sbb
mov
int
adc
and
stos
mov
loop
or
rorl
popa
xchg
js
out
repz
add
in
loopne
mov
insb
hlt
and
xor
ds
mov
fdivs
xor
scas
inc
rcll
dec
mov
movsl
inc
jmp
add
jmp
jmp
mov
test
aas
push
lds
test
mov
stc
or
push
dec
xchg
int3
lods
push
mov
jo
je
cmp
xchg
loope
imul
adc
int3
divb
xchg
inc
jne
xchg
cmpl
hlt
mov
shrb
cmp
aad
pop
ret
pushf
shll
adc
adc
hlt
sub
push
fcomp
fwait
cli
rorb
shll
xor
fidivrl
insb
fs
rcrl
sub
testb
lea
insb
inc
inc
and
roll
test
push
out
gs
icebp
sbb
push
mov
lcall
cmp
dec
rcl
scas
mov
xlat
inc
inc
and
mov
mov
and
jnp
lea
sbb
and
aas
in
adc
adc
iret
movsb
push
icebp
lret
bound
sub
fsubr
push
pop
mov
xorl
adc
aas
push
or
sub
push
pop
lahf
daa
jne
clc
lock
sub
int
and
xor
push
and
pop
and
negb
pusha
adc
sub
mov
inc
mov
arpl
adc
jae
pop
xor
pop
inc
loop
dec
ret
leave
inc
stos
or
jb
fidivl
shrl
push
adc
rol
aad
pushl
adc
lret
or
dec
sbb
cmp
ss
push
fwait
jo
mov
xlat
nop
mov
cmp
sbb
lret
and
fs
call
sahf
inc
mov
xchg
clc
sub
xchg
and
in
pusha
test
push
pop
ret
mov
pop
cwtl
int3
adc
fs
cmp
jmp
enter
jp
ss
ret
test
test
sub
int
adc
cmp
sbb
push
ds
out
pop
clc
adc
or
xchg
xor
dec
jnp
dec
jge
sub
scas
stc
push
je
out
imul
lods
adc
xchg
out
lock
cmp
rorb
pop
push
out
inc
js
data16
and
icebp
mov
stos
cmpsb
mov
lret
out
fcom
mov
jge
or
dec
dec
ljmp
aam
dec
pop
sub
ret
sub
mov
mov
enter
lcall
out
dec
xchg
lds
push
lret
sahf
aam
xor
daa
pop
sti
jp
fdivr
cmp
scas
pop
addr16
sbbb
lret
adc
ret
mov
xor
imul
sub
xchg
and
daa
lahf
pushf
or
iret
cmp
inc
inc
adc
jl
stc
scas
ret
rcll
add
mov
inc
imul
popa
scas
add
xor
incl
xchg
inc
addr16
adc
fstpl
add
out
bound
je
rcl
call
xchg
pop
mov
pop
repnz
insl
mov
jno
lods
xchg
loopne
in
loope
pop
mov
int
shll
cs
bswap
aaa
pop
int
mov
jecxz
mov
adc
jmp
and
in
or
repz
dec
mov
rorb
jle
push
jecxz
push
adc
jp
stos
jg
mov
sti
sbb
call
mov
loope
xor
add
test
fisubl
or
mov
insl
push
adc
into
sahf
lcall
pop
nop
mov
sbb
decl
icebp
xor
mov
cwtl
popf
adc
gs
xchg
test
pop
test
push
rorb
cli
jge
pop
pop
fs
mov
scas
adc
loope
aas
jae
push
aaa
fistl
mov
mov
mov
movsl
int3
mov
jae
cli
leave
or
and
fstpt
loope
mov
xor
dec
mov
es
pusha
or
test
div
pop
testb
ss
mov
jae
mov
or
jge
dec
rcrl
es
xor
aaa
push
int
sbb
movsl
cs
mov
insb
add
ja
ja
mov
mov
arpl
inc
pop
arpl
sub
mov
mov
lods
fbld
cmp
xchg
pop
sub
cmpsl
push
add
rcrb
incb
imul
rorb
xor
fwait
sarl
jmp
call
fdivrl
xchg
enter
es
iret
cmp
mov
sbbl
mov
push
push
dec
rorl
cmp
das
out
and
sbb
iret
mov
dec
xchg
sub
movsb
in
pop
lods
popa
xor
lods
mov
jle
mov
cmpsl
and
inc
pop
popa
orl
rcrb
mov
mov
cwtl
push
insb
jle
fwait
push
clc
stos
mov
filds
insl
lods
push
mov
jle
test
lret
cmp
ljmp
sub
jno
pop
xor
addr16
jecxz
jmp
das
xchg
adc
cwtl
push
aam
sbb
jle
push
cmp
fcompl
sub
popl
out
push
jmp
lret
pop
jle
sarl
sub
js
out
add
cwtl
jno
jmp
mulb
loop
jl
ljmp
lcall
and
imul
jnp
push
loopne
add
inc
push
sbbb
mov
dec
js
adc
lods
subb
push
ja
gs
nop
fsubrl
adc
andb
jbe
dec
push
lock
and
enter
mov
fidivs
mov
cmpxchg
mov
cld
cmp
adc
adc
in
fwait
and
je
orb
sbb
fistps
pop
out
xor
es
insl
stos
dec
pop
xchg
pop
inc
adc
int
push
jmp
aam
mov
fs
jmp
push
jae
in
cmp
xchg
jb
xchg
xor
lods
repnz
call
mov
and
iret
roll
cmp
mov
pop
add
add
cmp
pop
scas
ret
mov
shl
notl
sbb
pop
dec
add
lods
in
xor
cwtl
scas
call
cmp
inc
jg
mov
out
mov
ds
xlat
leave
rorb
xchg
aaa
adc
addr16
inc
ja
mov
std
mov
pop
enter
inc
ret
aas
or
mov
and
push
aam
stos
pop
pop
fildll
mov
imul
sub
xchg
aad
les
cmp
mov
or
push
repz
mov
aad
add
and
jle
mov
add
lods
cltd
pop
adc
xor
andl
fucomp
push
or
push
pop
add
ds
jecxz
aas
in
and
lcall
lfs
bound
stos
pop
and
adc
filds
jns
sub
je
jae
cmpsb
in
xlat
mov
sar
insb
cld
jbe
rcl
jne
out
jmp
adc
sahf
cs
xlat
dec
xchg
or
movsb
pop
sub
arpl
ljmp
sub
iret
adc
rcr
xor
cld
jle
xchg
inc
jo
xchg
pushf
addb
mov
js
insl
js
fcoms
xchg
daa
into
sbb
adc
stos
xchg
inc
sbb
std
dec
lahf
fldl
pop
dec
mov
mov
fst
ds
push
cmc
mov
cmp
xor
ret
bts
outsb
xchg
fdivp
cmp
les
dec
dec
and
iret
testb
mov
xchg
sti
jo
es
mov
mov
mulb
mov
outsl
dec
scas
mov
adcb
mov
inc
sub
dec
and
adc
sub
push
lods
ud2
inc
bound
pop
jp
rorb
push
test
ss
outsb
data16
or
aad
shlb
mov
and
ja
push
mov
test
sbb
sub
mov
daa
out
cmc
andl
repnz
int3
mov
xchg
std
imul
orl
movsb
cs
xor
loope
push
xlat
stos
fs
outsl
lret
mov
es
or
jmp
loope
jge
aaa
jns
cli
loopne
jmp
pop
dec
iret
insb
inc
test
push
cmc
cltd
push
jo
push
aas
shlb
lret
scas
stos
mov
hlt
out
movb
ficomps
sub
das
mov
decb
popl
test
movsb
mov
imul
xchg
lcall
test
mov
pushf
push
or
hlt
lret
xchg
sub
inc
roll
jbe
lcall
fisubl
les
add
outsl
movsl
daa
js
sbb
fwait
dec
jge
lahf
test
out
scas
cmp
mov
dec
dec
int3
std
mov
add
mov
xor
mov
or
add
loop
push
popf
and
mov
lret
xchg
enter
pushl
sub
nop
insb
xor
push
adc
in
orl
mov
cmp
les
mov
push
ret
add
iret
pusha
out
sub
movsl
sbb
jo
addl
pop
push
arpl
lret
push
cli
sub
bound
add
or
push
push
icebp
into
mov
mov
sbb
pop
mov
sbb
jne
inc
movsb
gs
sub
lret
push
jb
inc
out
xchg
and
fisttpl
push
mov
mov
inc
sbb
sub
jge
ljmp
jmp
cli
sti
push
inc
xor
cli
jae
cmp
daa
pop
dec
xchg
adc
pop
mov
inc
jmp
push
in
shl
or
ljmp
mov
insb
cmp
roll
aam
dec
inc
dec
xchg
call
jge
jl
mov
pop
adcb
mov
ja
je
pushf
cltd
or
jl
adc
dec
iret
shr
inc
pop
imul
shll
sti
aam
sub
push
lret
adc
popa
arpl
out
or
ja
addr16
jmp
add
sbb
push
xchg
or
mov
out
pop
insl
jne
jae
xchg
push
mov
sbb
cmp
or
lret
leave
mov
inc
push
and
aas
sub
lahf
add
jecxz
aad
mov
push
cmp
adc
pop
imul
mov
mov
jecxz
inc
dec
repnz
xor
pop
repz
pusha
and
pop
inc
in
sbb
push
cs
push
adc
sbb
lods
cmpsl
mov
lret
ja
jp
out
pop
inc
stos
loop
lods
jge
fldenv
decl
in
xchg
pop
adc
xor
loope
int
loopne
cli
dec
cmpsl
test
outsb
or
repz
fcmove
icebp
cmp
stc
imul
hlt
jmp
mov
mov
xor
fcos
push
jl
div
dec
fs
sbbb
mov
or
sbb
sbb
xor
dec
jnp
sub
js
push
mov
jl
cmp
push
dec
mov
or
js
pop
aad
testb
mov
or
xor
adcl
sti
xor
aaa
and
jmp
jg
xchg
push
xchg
fidivs
lds
lahf
insl
xor
loop
mov
xchg
inc
adc
or
jl
inc
jl
popa
cs
and
outsl
insl
xchg
mov
int3
lret
cmpsb
cmc
jno
adcb
hlt
imulb
mov
aam
xchg
push
and
gs
mov
mov
pop
xchg
xor
repz
inc
hlt
or
lahf
xchg
in
dec
mov
jmp
fisubl
mov
mov
and
sbb
aad
or
inc
sarb
addl
bound
lret
sbb
pop
or
and
frstor
mov
mov
mov
mov
pop
xor
jecxz
xchg
mov
xor
das
ret
addr16
movsb
push
pop
int
add
lcall
inc
cmc
dec
cld
out
pop
xlat
lods
jp
sub
fs
xchg
or
roll
xchg
imul
in
add
xchg
push
jno
inc
mov
or
out
ror
or
xchg
bnd
push
fsubrl
mov
jmp
jp
cmp
push
push
or
or
call
adc
mov
out
nop
out
dec
movsb
pop
or
insl
cmpl
xor
mov
mov
les
inc
fcmovu
mov
les
xchg
adc
cwtl
pop
add
xchg
lret
jge
ss
arpl
shr
and
xor
cltd
adc
fcomps
pop
pusha
jge
cmp
xchg
cmp
cld
shl
dec
xchg
xor
testb
inc
rcl
fdivrs
push
mov
pop
xor
lcall
mulb
rolb
ss
xchg
inc
repz
or
xchg
cltd
xlat
and
mov
repnz
push
add
ja
std
aad
test
push
popa
jno
jmp
pop
mov
shll
dec
xor
mov
adc
jb
inc
js
leave
lea
fistl
or
shl
push
sub
add
lret
mov
xchg
pop
outsl
and
int3
xor
mov
and
jmp
jg
pushf
xor
xchg
push
leave
add
dec
testl
jmp
add
outsl
aad
outsb
pop
fnstcw
push
movsl
cwtl
mov
adc
pop
and
sbb
add
xor
inc
fcoml
sub
mov
dec
mov
jl
in
stos
dec
ret
sbb
int3
or
add
blcic
imul
lahf
inc
xchg
leave
aam
or
sbb
cmp
imul
sbb
cmp
pop
lcall
pop
lahf
lret
add
stos
jne
inc
mov
daa
sub
lret
mov
inc
fcompl
mov
push
xchg
ljmp
out
out
in
lret
adc
imul
dec
ljmp
jns
jmp
sub
fnstsw
add
mov
sbb
or
scas
xchg
lret
mov
xchg
clc
es
sbb
jge
xchg
cs
test
add
add
in
shll
loop
mov
push
outsb
cmc
push
das
cmp
jge
fcmovnb
test
and
sub
mov
push
ss
and
and
jno
jae
arpl
dec
mov
or
out
inc
dec
pushl
dec
in
divb
mov
clc
pop
mov
dec
mov
lds
pop
jmp
xchg
fisttpl
outsl
pop
out
jmp
rclb
jmp
cmp
jg
jb
lds
jno
repnz
mov
call
lods
sub
mov
inc
push
jecxz
adc
add
pop
bnd
bound
dec
and
or
fstp
pop
mov
aaa
mov
pop
pop
push
imulb
or
push
outsb
gs
fstl
je
adcb
arpl
lds
sbb
adc
jmp
cld
dec
testb
xor
fucomi
jp
jne
or
cmp
cmp
clc
ror
mov
mov
bnd
icebp
push
addb
mov
jae
notb
ja
leave
in
repnz
in
je
jns
iret
sub
out
mov
neg
sub
pushf
decb
pop
repz
cmp
xchg
pop
arpl
jns
lock
mov
or
leave
loope
es
aad
or
arpl
mov
movsb
jl
out
mov
mov
dec
sub
call
gs
popa
lret
cmpsl
sti
jbe
int
call
mull
sbb
jne
inc
pop
je
mov
les
or
xor
popf
push
aad
es
jb
pop
lcall
or
cmp
ret
jmp
xchg
out
or
and
orl
sbb
sub
iret
inc
movups
out
pop
repnz
imul
add
cwtl
dec
mov
imul
adc
and
in
imul
add
mov
xorl
push
pop
push
jp
repnz
sarl
adc
xor
out
mov
lods
scas
das
dec
inc
fadd
mov
sbbb
int
adc
cltd
cwtl
popf
xorl
rolb
das
pop
sbb
hlt
loopne
dec
and
out
dec
mov
sbb
or
addb
cmpsl
xchg
add
jno
mov
push
outsl
jb
adc
pop
push
and
jns
ret
mov
mov
hlt
lahf
jmp
mov
addr16
dec
cmp
jge
rcr
and
inc
testb
push
jne
inc
cltd
jmp
inc
ret
loopne
xchg
xchg
addr16
lea
popf
adc
test
add
push
out
mov
dec
mov
xorb
clc
in
or
icebp
xor
cmp
fmuls
cld
pop
push
pop
xor
jo
xchg
daa
sbb
push
inc
and
or
in
cld
and
lods
pop
aad
mov
leave
mov
jnp
xchg
or
lret
xor
xor
dec
rcrl
dec
sub
pop
loop
inc
in
adc
dec
cmpsb
scas
push
fiadds
or
stos
adc
xlat
cmp
nop
out
test
lret
jae
repz
das
add
dec
mov
popa
push
gs
fs
add
ja
notb
jb
out
pushf
incb
inc
dec
push
adc
and
pop
orb
push
dec
mov
sahf
push
inc
jbe
xor
cmp
cmp
push
in
add
and
jle
xor
fadd
xchg
add
pop
inc
cmc
inc
sub
lcall
fistpl
hlt
push
stc
pop
pop
cmp
sub
std
arpl
xchg
push
or
sbb
js
dec
inc
push
out
stc
cmp
les
xor
cmp
mov
fdivp
insl
mov
xchg
xchg
xchg
daa
clc
fmull
adc
inc
roll
int3
jno
sub
lret
imul
fidivrs
int
mov
push
and
les
es
into
mov
cmpsb
cs
jp
stc
mov
out
addr16
sub
lea
pop
fs
movsl
mov
cmp
loope
jo
fs
cmp
aas
test
or
and
test
les
pusha
jns
jg
addr16
mov
mov
jne
rclb
mov
test
inc
mov
sbb
loop
lahf
inc
xor
adcb
pop
pop
loopne
movsl
test
lods
mov
mov
fcoms
int
pop
enter
mov
cmp
xchg
ds
inc
and
jns
insb
xchg
popf
gs
push
sbb
jp
cwtl
push
pop
mov
in
xchg
divl
repz
cmp
repnz
sub
cmp
sub
jns
inc
lea
jno
movsl
mov
inc
xchg
xchg
mov
aaa
test
cmp
pop
jmp
sti
add
mov
stos
int
cmp
dec
add
scas
into
leave
dec
test
jo
fwait
pop
mov
push
push
dec
scas
push
cmc
int
and
adc
lock
push
cmpsb
loop
mov
lret
dec
sub
arpl
out
cmp
add
jecxz
or
stos
stos
pushf
cltd
out
bound
cmpsl
add
in
cmpsl
add
fdivrl
cmp
sbb
ds
jmp
out
inc
sar
aad
pop
lods
sbb
pusha
jecxz
call
mov
popa
xchg
je
xor
sbb
pop
xchg
xor
js
push
cmp
push
mov
and
jmp
jo
push
shl
pop
sub
and
fwait
ja
repnz
jb
clc
adc
mov
sbb
icebp
mov
jg
int3
push
mov
test
ljmp
addr16
push
mov
pop
jnp
mov
ficoml
jne
fnstcw
std
int
dec
mov
addr16
sub
sub
je
push
xor
sub
aaa
add
test
daa
inc
pushf
das
xchg
dec
xor
in
repnz
xor
lret
fstl
in
cmpsl
xchg
imul
lcall
dec
add
lds
add
and
lods
aad
pop
cmp
add
add
scas
out
push
push
and
pop
adc
xor
stos
push
xor
js
fnop
jae
ja
repnz
push
scas
shll
xor
push
aas
jae
lcall
jl
and
imul
popf
xor
sbb
cltd
or
stos
fbstp
mov
or
scas
pusha
or
jge
loopne
adc
mov
fwait
pop
lret
jb
mov
cmp
cmpsb
das
test
xor
push
sub
popf
dec
xchg
dec
pop
test
lods
shl
call
inc
xor
inc
sub
xchg
incb
iret
or
fmull
cmp
js
pop
inc
cmp
adc
inc
mov
add
inc
out
ss
shl
sbb
dec
cmp
out
xlat
cmpsb
push
jge
fwait
outsl
sbb
inc
jnp
mov
pop
sub
push
pop
add
cmp
pop
scas
push
add
loopne
sarl
dec
mov
inc
mov
sub
jg
xor
stos
add
in
push
imul
cli
and
sub
pop
ret
jo
aam
out
lret
fsubrs
insl
inc
repz
aas
pusha
test
dec
arpl
fwait
roll
and
cmp
stc
or
movsl
stos
add
jb
test
jmp
sub
jb
pop
jne
int
sub
or
sub
out
push
xor
pop
loopne
cmp
push
arpl
imul
xor
add
popa
fidivl
xchg
dec
jg
lods
stos
cmp
outsb
pop
rcll
cmp
sbb
hlt
add
push
test
cmpsl
cmp
daa
loope
add
loopne
xor
or
cltd
pop
xchg
sti
push
pusha
adc
dec
xor
insb
jb
mov
mov
lret
xor
xor
iret
data16
inc
cmp
sahf
addr16
mov
add
xchg
sbb
jbe
mov
cmp
loope
sub
mov
pop
outsb
aam
xchg
stos
popf
stos
mov
fcompl
push
call
xchg
mov
add
insl
sub
adcb
mov
jb
into
mov
mov
cld
std
push
divb
out
fstpt
cmp
pop
jp
popa
mov
icebp
je
fwait
push
mov
stos
xlat
stos
mov
aam
jge
mov
sub
loopne
pop
push
hlt
lea
fadd
testb
mov
popl
into
pusha
adc
call
paddq
movsl
js
pop
sub
xchg
mov
aam
sbbb
addr16
mov
rcrb
call
sub
and
stc
mov
ds
lods
or
outsl
rcrl
pusha
adc
jbe
fimull
pusha
lahf
adc
lret
xchg
dec
lret
fists
icebp
dec
jp
inc
push
arpl
scas
fwait
inc
xor
ret
sub
int
xchg
mov
push
sub
dec
fs
repz
xchg
or
adc
ds
inc
std
popf
iret
sbb
stos
loopne
sub
inc
cmp
push
in
or
dec
dec
enter
in
in
movb
xorl
fwait
sub
bound
je
aam
or
push
insl
dec
hlt
pop
sbb
xor
mulb
jg
and
shll
mov
lock
dec
imul
stc
jno
add
test
cmp
icebp
out
sub
ja
and
add
repz
mov
inc
pop
stc
call
leave
jg
pop
or
or
imul
inc
fidivrs
std
popf
movsb
dec
test
stc
add
sarb
mov
lea
push
inc
jle
jo
fs
jns
mov
stc
jl
push
repz
dec
or
cmpb
push
int3
imul
stos
jg
js
lret
popf
mov
cmove
ret
and
and
adc
push
movsl
decb
jp
jmp
repz
fsubrl
and
scas
or
mov
out
xchg
arpl
mov
nop
push
shrb
mov
xor
shrb
aas
imul
pop
test
in
jle
push
xor
xor
repz
inc
mov
push
pop
xchg
lds
sbb
inc
cmp
ljmp
mov
aaa
jns
inc
add
mov
or
dec
pop
imul
in
add
sub
push
shll
shlb
jae
dec
jge
daa
repz
inc
lret
orb
inc
mov
jl
ficoms
xor
cli
xor
mov
cmpsl
xchg
cmpsb
push
sti
mov
out
lods
mov
jmp
mov
add
and
sbb
or
jge
inc
lds
pop
or
pop
in
dec
in
and
mov
mov
lock
mov
mov
out
daa
mov
push
ss
jecxz
mov
jbe
idivb
aad
loop
arpl
cli
adc
cld
cmp
sbb
icebp
xchg
mov
cmp
adc
xor
jle
jl
adc
lods
pop
bnd
cltd
nop
loopne
enter
nop
xchg
insl
dec
ret
wbinvd
push
sub
push
clc
out
imul
mov
jb
add
push
test
aad
daa
mov
jecxz
ja
pop
push
inc
mov
stos
nop
lcall
loopne
sub
cwtl
jnp
jae
outsl
mov
mov
test
insl
aaa
cmp
or
cli
sub
mov
jo
fistpll
ret
sub
pop
sbb
jno
push
sub
mov
outsb
and
mov
push
sbb
ret
mov
inc
test
sbb
imul
ss
jo
js
dec
lods
inc
lods
adc
into
xor
cmp
sahf
mov
cmp
call
daa
jmp
jge
std
and
push
ret
or
icebp
andl
enter
adc
mov
jle
test
mov
mov
mov
xchg
ret
out
xchg
in
repnz
fidivrl
aam
push
insb
pop
pop
mov
repz
dec
mov
pusha
jecxz
xchg
fwait
jmp
rclb
ljmp
xchg
nop
mov
sbb
mov
scas
push
loop
mov
push
movsl
cmpsl
outsb
xchg
leave
ja
test
xchg
iret
aad
xor
insl
xor
or
jns
das
xchg
in
pop
js
leave
and
les
jle
mov
repz
repz
mov
mov
mov
cld
pop
mov
rclb
dec
dec
loope
js
js
aas
lods
pop
cmp
and
incb
cmp
inc
call
movsb
xor
inc
pop
aaa
xor
pop
pop
adc
ret
ss
mov
add
popf
sbb
test
push
cmpsb
lods
or
jmp
cmp
push
adcl
push
sbb
cmc
cmpsb
adc
or
je
movsl
mov
push
cmp
scas
xchg
add
jl
test
loope
mov
adc
jnp
jg
inc
mov
fsubl
fcmovne
inc
call
cmpsb
imul
dec
adc
fldenv
or
icebp
inc
cwtl
mov
or
arpl
and
dec
pop
dec
aas
cmpsb
and
mov
pop
in
cmp
pop
test
ds
push
orb
jp
push
or
mov
dec
scas
test
popa
out
imulb
inc
adcl
xchg
or
std
inc
out
sbb
fidivl
sub
mov
mov
cs
or
test
test
xchg
add
jns
push
sub
mov
shlb
jg
lods
push
push
dec
xchg
sbb
inc
or
and
xor
orl
sbb
cmp
push
lods
mov
mov
or
dec
push
pop
mov
aaa
fidivl
and
aad
call
and
aas
je
jp
push
aam
sub
push
push
or
arpl
add
pop
adc
mov
aad
daa
fistps
jle
mov
add
data16
movsb
cmp
pop
std
and
lods
faddl
xchg
in
add
xchg
movsl
xchg
enter
mov
pop
loopne
pop
fmuls
out
sahf
adc
cld
pop
inc
jbe
or
movsb
js
pop
add
cmpl
sbb
mov
mov
cmp
lret
mov
in
insb
jl
stos
sub
cltd
or
xlat
repnz
testb
rorl
sub
inc
lret
fisttpl
addr16
push
mulb
fstl
lds
lea
shlb
push
ret
stos
js
push
mov
subb
sbb
fists
pusha
inc
add
push
outsb
les
and
xor
adc
js
popa
fstpt
xor
mov
loope
dec
adc
jno
ss
xchg
xlat
insb
cmp
mov
lret
lcall
xchg
mov
jno
mov
mov
xchg
dec
out
imul
xor
lea
mov
xchg
imul
push
and
jle
mov
dec
and
addr16
rcl
ljmp
and
mov
repz
cli
std
cmp
popa
data16
arpl
jnp
sbb
ja
shlb
scas
pusha
jge
andb
lods
inc
pushf
cltd
mov
and
nop
jae
jo
xor
push
mov
cmp
iret
nop
jmp
clc
add
insb
push
xchg
sbb
and
push
sahf
pop
mov
mov
sub
shlb
push
iret
shl
jge
cmpsb
xor
out
in
xchg
sbb
gs
inc
insb
mov
sbb
sbb
fdivl
in
icebp
insl
arpl
push
insl
iret
xchg
jg
mov
call
and
cmc
pop
addr16
lea
push
mov
mov
mov
ret
test
jp
mov
cs
sbb
jb
sbb
adc
inc
mov
sbb
movsb
insb
ss
cmp
imul
loopne
outsl
jp
jno
sub
mov
mov
jo
data16
mov
inc
aam
imul
mov
inc
std
pop
push
ds
cli
movsl
cltd
test
push
in
shl
dec
cmpsl
js
lods
mov
out
push
shrb
cmp
mov
sbb
xchg
movsb
mov
xchg
pop
xchg
dec
shll
cmp
in
sbb
insl
jno
cmp
mov
test
or
ficoms
lods
lahf
mov
and
pop
and
std
xor
shrl
shr
nop
out
leave
mov
in
popf
dec
mov
cmp
jg
push
ss
sbb
jnp
and
out
xorl
mov
mov
jne
xor
xor
xorl
cmp
ret
xor
and
cmp
or
push
mov
pop
push
popf
mov
call
stc
xchg
xor
loop
sub
rorb
fidivrs
lea
les
dec
inc
or
rcrb
jle
std
testl
in
cmp
out
push
mov
aam
jns
mov
inc
clc
jb
mov
lds
inc
sarl
sub
push
push
inc
mov
dec
hlt
fdivrl
call
movsb
sti
mov
cmc
mov
data16
lods
lahf
cmp
testl
jne
cmc
or
out
push
pop
mov
and
cltd
inc
imul
push
nop
mov
xor
jl
jnp
fstpl
jo
add
mov
mov
sub
xlat
add
repnz
notl
pushf
xor
shrl
sub
ret
cmp
bound
out
push
addb
or
pushf
mov
xchg
movl
fldt
loop
and
mov
inc
mov
int
push
jb
pushf
lods
repnz
push
mov
addr16
and
test
mov
push
dec
movsb
xor
ss
pop
daa
shlb
lret
notl
cmp
mov
es
nop
in
jns
arpl
out
fisttpl
sahf
hlt
sbb
in
aam
or
fildl
xor
xchg
sbb
mov
mov
push
jge
or
inc
sub
shl
dec
jns
call
push
pop
inc
js
das
pusha
inc
cltd
or
push
mov
jl
lret
fcomps
sub
or
sub
test
dec
mov
cs
lcall
cmp
out
mov
lahf
push
pop
fwait
xchg
xor
sahf
sub
je
outsb
in
xchg
dec
jl
sbb
idivl
lods
movsb
sub
inc
dec
mov
int3
xchg
repz
flds
fucomip
test
or
jecxz
or
mov
cmp
and
dec
inc
jb
scas
cmc
jecxz,pn
mov
shl
xchg
mov
and
push
ja
flds
xor
jle
subl
xor
int
xor
sub
ficoml
shrb
mov
push
dec
xchg
mov
roll
arpl
push
dec
or
dec
jecxz
mov
fists
add
jge
and
clc
outsl
add
enter
scas
xlat
out
jo
push
loop
and
pop
mov
xchg
pop
data16
dec
scas
sbb
movsb
mov
out
inc
cli
jb
mov
arpl
or
mov
sub
ret
dec
ret
movsb
pop
mov
das
and
cmp
movsl
push
sbb
stc
or
rcrl
leave
lds
mov
adc
pop
aas
inc
cmc
jle
stos
sub
cmp
add
test
ljmp
in
test
mov
jns
jp
into
or
jae
mov
ss
leave
xchg
mov
adc
imul
sbb
int
outsb
cmp
sti
lea
ss
sbb
sub
test
mov
mov
ret
mov
jmp
addl
pop
lcall
push
or
and
lods
scas
jle
icebp
jmp
pop
cmp
out
cmp
lods
fwait
sub
adc
mov
and
ror
and
shll
sti
pop
out
inc
sbb
or
dec
lods
xchg
add
ljmp
sub
push
add
icebp
outsl
inc
mov
adc
imul
repz
sbb
notl
int3
and
push
mov
push
sahf
jo
and
xor
cmp
std
daa
push
loopne
dec
add
daa
stos
jno
in
jle
into
mov
ljmp
jb
jmp
ret
push
add
fistl
push
pop
mov
stos
xor
and
inc
repnz
jo
adc
dec
pop
add
dec
fcom
popf
jno
push
mov
pop
cwtl
int
sub
xchg
js
fwait
xor
inc
cmp
std
das
mov
adc
jp
add
sbb
adc
push
mov
cmp
je
and
and
in
out
rcr
and
mov
mov
push
leave
mov
xor
fwait
mov
outsb
mov
js
les
clc
push
scas
sbb
jnp
sub
clc
prefetcht0
sbb
xor
mov
xor
xchg
fiadds
push
xchg
or
stos
mov
cmp
pop
test
mov
sti
push
loopne
test
push
scas
cmp
lea
mov
push
jmp
inc
mov
and
fs
push
call
jo
mov
fistpl
inc
or
je
icebp
out
aam
faddl
adc
jno
scas
loopne
hlt
int3
push
mov
insl
mov
and
jmp
adc
pushf
fwait
xlat
dec
inc
inc
pushf
push
call
xchg
sbb
add
sub
adc
xchg
outsl
pop
xchg
fmull
xor
mov
fldenv
dec
dec
movsl
test
pusha
jns
xchg
mov
xchg
cmp
jno
pop
cmp
imulb
ds
popf
dec
sbb
leave
dec
ds
cmp
push
add
xchg
call
mov
mov
add
aam
and
addr16
lahf
mov
push
inc
rcrl
inc
cmp
aaa
mov
jb
pop
in
ss
lods
sbb
testb
inc
sbb
aam
fiadds
aas
fcomip
xchg
std
adc
pop
mov
xchg
add
enter
aad
sbb
wbinvd
add
xchg
fld
dec
cmpl
jb
push
pop
test
fnstsw
dec
cmp
jge
add
ljmp
adc
dec
iret
fmull
xor
jo
test
and
xchg
xchg
push
sbb
add
push
cltd
jmp
adc
clc
inc
push
orb
and
shl
sub
shll
and
jmp
push
fs
movl
in
mulb
xor
mov
jmp
jo
jg
data16
pop
das
sub
jo
xchg
les
mov
mov
xchg
js
xchg
std
inc
shll
scas
jb
cmp
loope
dec
cmpsl
sbb
xchg
ja
xchg
popf
xchg
xor
jb
cmp
mov
test
into
cwtl
push
in
je
or
fwait
cmp
insl
stos
scas
mov
scas
xchg
shlb
test
int
jb
test
pop
jne
sub
adc
cs
and
clc
cld
push
scas
lds
mov
fmul
subb
dec
cmpb
dec
sub
pop
fistps
adc
cmp
cwtl
pusha
into
pop
loopne
lds
pushf
pop
dec
or
lahf
xchg
mov
in
sub
push
pop
add
stos
mov
mov
pcmpgtb
or
mov
ljmp
pop
lahf
and
test
jge
mov
outsl
nop
and
xor
dec
pop
jge
ficomps
pop
cmp
ret
ror
cmpsb
jle
cmpsl
mov
jno
ljmp
jl
cmp
ljmp
hlt
xor
sarl
movsb
ljmp
out
in
outsl
int3
ret
loope
jmp
xchg
push
ret
cli
mov
cmc
push
xlat
lcall
popf
insl
mov
jns
mov
mov
cli
pop
xor
jno
or
dec
out
ret
cld
jne
movsl
repnz
scas
push
ljmp
mov
push
sbb
lods
dec
cmpsl
cmpsl
ret
sarb
and
outsl
lret
inc
xor
notb
stos
and
inc
push
lahf
scas
push
dec
inc
xchg
insb
dec
ja,pn
sub
das
leave
test
mov
jg
repz
shrl
xchg
inc
movsl
dec
movsl
add
and
mov
test
push
movb
stos
fisubrl
aas
icebp
aad
pop
roll
dec
jp
sbb
inc
clc
inc
sub
or
dec
iret
lods
sub
movsb
mov
sub
adc
sub
in
cwtl
orl
mov
add
adc
sbb
xchg
negl
adc
sbb
cmc
in
fsubrl
out
arpl
jno
enter
mov
sbb
push
repz
dec
xor
mov
daa
pop
std
sub
shr
pop
sub
ficomps
push
icebp
xor
andl
test
ljmp
or
push
ret
mov
repnz
jg
and
xor
and
xchg
repz
and
stos
or
pop
cmc
add
mov
adc
mov
cmpsb
or
sbb
ret
or
pushf
jbe
xchg
js
jg
pop
repz
add
xchg
push
add
andl
gs
sub
and
bound
mov
pushf
cmpsb
mov
idiv
jle
xchg
das
out
sbb
add
stos
fs
in
or
sub
sub
cli
mov
push
or
cmp
cmp
rcrl
xor
or
insb
mov
ja
xor
in
jbe
gs
or
rcll
pextrw
mov
loop
push
in
xchg
cmc
js
jb
mov
nop
fisttpll
add
jae
pop
sbb
out
mov
or
mov
dec
pop
xchg
sub
sbb
std
roll
push
int
aas
ret
repz
mov
fwait
rorl
pop
fiadds
repnz
xchg
or
in
dec
cmpsb
pop
jo
fstpt
call
cmp
mov
cmp
sub
loopne
std
cmp
hlt
rcl
imul
pop
data16
mov
ljmp
xchg
mov
scas
shlb
cld
cli
add
xor
cmp
out
test
xlat
adc
mov
stos
ret
in
cmp
xor
loop
cmpsl
fldl
into
imulb
out
testl
sub
fcomip
fiadds
xlat
scas
push
cmp
ror
xchg
dec
jne
dec
mov
mov
fwait
cmp
push
fsubrl
subl
sub
fs
push
jmp
jne
jmp
adc
ljmp
push
jl
fwait
dec
sub
mov
adc
add
inc
rorl
dec
sahf
or
fisttpll
add
mov
out
pop
inc
inc
je
sub
inc
cs
and
pop
adc
dec
mov
jne
jg
push
inc
push
inc
lock
inc
and
xchg
push
jge
xchg
sub
pop
cmp
xor
imul
roll
je
lcall
cld
add
xchg
fsubrs
sub
adc
mov
rorl
jnp
xchg
xor
add
sub
push
cmp
xorl
daa
addr16
xchg
mov
repz
mov
rcr
popa
inc
test
rclb
sbb
out
lahf
lock
xchg
xchg
push
adc
scas
cmp
adc
xor
sub
sub
jnp
leave
cwtl
lret
cmpb
js
jle
and
cmp
fld
lods
in
mov
lds
fnstsw
in
sarl
imul
push
clc
imul
push
sub
mov
jp
pushf
inc
push
cmp
xlat
push
push
or
loope
nop
jo
adc
les
mov
push
cwtl
mov
pop
cmp
jnp
push
pop
int
or
pushw
sbb
push
or
mov
jecxz
ljmp
mov
xchg
mov
repnz
push
add
std
hlt
pop
xchg
push
aad
nop
inc
mov
or
sbb
repz
pop
add
outsb
jne
iret
xchg
cmp
outsb
xchg
iret
mov
xor
or
or
je
xor
dec
mov
cwtl
sbb
loope
adc
into
fistpl
lret
mov
shl
ret
mov
push
push
in
mov
repz
fstl
xlat
jl
sbb
xor
ss
loope
jbe
push
mov
jle
adc
cmp
inc
xchg
sbb
xchg
dec
in
aad
lea
je
mov
sbb
mov
cltd
les
sub
jl
sbb
int
xor
insb
mov
mov
cmpsb
fcmovnbe
mov
jne
loope
jb
push
xor
lds
sub
aas
xorb
xchg
jnp
enter
lret
xor
or
lods
dec
cli
pop
mov
js
mov
outsb
int
cld
xor
xor
or
dec
adc
gs
nop
push
sarl
lock
out
mov
repz
lret
jp
push
dec
push
dec
pop
jge
fisttps
jne
gs
ret
rcll
jbe
pop
cmp
mov
or
lret
test
ds
sbb
xor
push
sahf
daa
jp
je
addr16
or
cmp
jnp
and
push
jns
sbb
in
mov
xchg
cld
lahf
fildll
cmpsl
cld
inc
aam
lahf
cwtl
outsb
xor
xchg
movb
hlt
cmp
mov
test
stc
testl
mov
daa
ss
mov
out
lds
pop
mov
nop
jno
cmp
daa
sub
ucomiss
test
aad
adcb
call
sbb
mov
test
mov
push
out
mov
sub
fisttpl
or
fnstsw
xor
jno
lcall
icebp
nop
or
push
je
push
scas
jns
xchg
or
loopne
jecxz
in
insb
sub
je
cmp
inc
loop
pop
dec
sub
inc
dec
nop
sub
xor
rcrb
sub
aas
and
ja
push
imul
pop
or
stc
test
jge
mov
lahf
mov
out
stos
mov
outsb
jbe
leave
fstpt
adc
push
in
jp
mov
mov
sub
mov
ja
add
xor
aam
dec
mov
jecxz
addr16
popf
xchg
mov
insl
mov
in
push
sarb
mov
jne
pop
rolb
sub
xchg
xor
and
sub
pusha
or
xor
add
sahf
add
mov
gs
mov
mov
lcall
pop
fdivrl
add
cmc
dec
insl
out
cmp
insb
or
fst
sarl
mov
pop
sub
inc
ds
dec
fistpll
js
pusha
pop
lods
testb
push
xchg
loope
mov
push
pop
push
adc
cmp
and
or
loope
cwtl
hlt
mov
push
jmp
push
mov
mov
jg
insb
jp
fcmovnu
lea
movsl
stc
ja
dec
mov
or
dec
dec
adc
int3
popa
adc
or
data16
ja
pushf
push
xor
movsl
xchg
add
fcomi
xlat
inc
pop
aam
fdivrl
sysenter
iret
cmp
push
orb
icebp
mov
ljmp
test
lds
jo
js
fisubs
cmpsb
cmp
sti
test
pop
dec
dec
add
sti
mov
add
cmp
xlat
add
inc
fs
fcmovu
jp
imul
sub
adc
add
mov
fwait
test
mov
out
cmpl
fadds
mov
xchg
adc
and
push
test
sbb
sar
lahf
push
call
and
cld
addr16
xor
rolb
idiv
xchg
aad
cmpsb
jle
outsb
repz
or
xor
ret
pop
repnz
ficomps
mov
jnp
cld
mov
faddl
imul
out
stos
sbb
pusha
out
cmc
pushf
sub
mov
cs
inc
mov
mov
das
aas
int3
lods
dec
sahf
xchg
loopne
outsl
fsubl
loope
dec
cmpsl
mov
or
stos
orb
mov
adc
jecxz
enter
sbb
insl
sti
add
cmpsb
cmp
es
sub
dec
xor
ret
mov
nop
jns
ja
push
pushf
xor
xlat
pop
lcall
iret
inc
pusha
mov
xlat
jl
das
rorl
dec
lahf
data16
mov
cmp
cmp
insb
lods
shrl
sbb
push
cld
mov
pop
repnz
imul
mov
loop
sahf
mov
repz
movsl
ds
test
lcall
mov
push
fnstenv
pop
test
ficomps
jmp
nop
pop
cmp
test
data16
faddl
rolb
pop
dec
lds
daa
xchg
jp
cs
icebp
or
out
push
cmp
in
clc
test
pop
push
jmp
popf
adc
and
lret
push
pop
rclb
add
mov
jno
aad
or
push
sbb
inc
in
aad
sbb
outsl
roll
mov
cld
add
in
push
out
hlt
leave
push
out
pop
lods
test
xor
sub
xchg
inc
imul
icebp
push
dec
mov
pop
mov
test
rorb
mov
call
pop
rol
test
mov
mov
out
dec
push
sbb
iret
in
or
fdivl
stos
push
mov
xchg
std
and
mov
std
test
mov
rcll
sub
lret
mov
das
int
xor
sbb
cld
mov
icebp
inc
dec
hlt
sub
nop
mov
and
in
adc
mov
lea
mov
jmp
jecxz
dec
dec
sbb
ret
pop
and
icebp
inc
pusha
push
add
xchg
idivb
clc
shr
cmpsb
aaa
jle
mov
adc
pop
push
fcoml
loopne
nop
mov
int
cmp
aaa
pop
xorl
and
hlt
mov
subl
dec
xchg
fwait
jp
cld
hlt
dec
loopne
das
insl
inc
das
or
lahf
mov
xchg
ss
push
call
outsl
gs
scas
cmpsb
push
jle
jecxz
inc
adc
mov
mov
mov
and
cli
jmp
in
fidivs
mov
mov
cs
das
xor
sbb
prefetch
push
call
sarl
lea
xchg
dec
lret
mov
xor
cmp
lcall
movsl
ret
cld
clc
scas
push
hlt
fldcw
adc
std
jae
mov
pop
push
cmpsb
ficoml
sbb
inc
ljmp
xchg
xchg
bound
div
mov
rcrb
lods
in
xchg
xor
add
mov
vcomiss
ja
test
fs
adc
lret
inc
ret
cwtl
pusha
xchg
xorb
dec
dec
dec
cmp
testl
icebp
aad
arpl
ss
fsts
mov
cmp
cmpsb
dec
fsqrt
loop
enter
xchg
xchg
jnp
out
aad
jae
sbb
lret
push
jo
lock
xorb
repnz
aad
xor
or
ja
cmp
in
dec
repnz
mov
lcall
ret
mov
fsub
cmpsl
inc
movsl
cwtl
test
arpl
cmpsl
in
sub
outsl
lret
daa
xor
xchg
xor
clc
sub
stos
out
stc
jo
mov
in
xlat
nop
lds
mov
sub
dec
xchg
mov
shlb
fisttpll
movsb
lcall
push
pop
scas
in
mov
int3
mov
push
xchg
push
in
mov
hlt
movb
movsb
fs
ret
pop
stos
xlat
add
test
hlt
dec
or
pop
loop
cmc
push
adc
stc
arpl
mov
xchg
fsubrp
cmp
lea
rclb
and
lret
and
pop
sbb
adcl
inc
mov
xor
jecxz
xchg
lods
cmp
mov
dec
out
xor
iret
xchg
movsl
je
popa
and
xchg
pop
lret
and
sti
sbb
daa
mov
nop
outsl
pop
sbb
lcall
xchg
fdivrs
iret
ret
repnz
mov
cmc
ja
into
xor
xor
push
ja
je
jmp
inc
mov
stc
test
mov
cmpsl
xorl
fdivl
push
movsb
fsubrs
xchg
cmp
out
sub
pop
add
out
jp
adc
stc
sub
loopne
and
ja
scas
sbb
scas
pop
mov
movl
pusha
jo
pop
xchg
or
fsubp
xchg
incl
sub
push
and
data16
addr16
adc
lret
xor
cmp
push
mov
mov
es
cmp
mov
xor
mov
stc
lods
adc
push
in
lahf
cmc
data16
inc
test
loop
shrl
and
in
and
sbb
fwait
add
call
pop
idivl
sub
jno
test
fxch
jnp
xor
xchg
or
cmp
rol
cmpsl
hlt
fisubrs
pop
mov
adc
test
cld
call
add
xchg
movsl
dec
aad
insl
dec
test
cmp
outsb
pop
mov
fcomip
lock
xchg
xor
xchg
pop
stos
pop
inc
or
outsw
push
xor
sub
pop
fadd
out
rcrb
fstpl
test
lods
stos
stos
mov
and
fcoms
inc
xor
sbb
in
cmp
out
jmp
scas
repz
dec
xchg
jns
aas
das
les
scas
and
cmpsb
pushf
sbb
adc
repz
je
jae
cmpsl
add
dec
aam
adcl
imul
jno
cmp
jnp
in
cmp
in
jge
movsb
jns
js
add
enter
adc
lock
outsb
out
sbb
xlat
sbb
outsb
dec
rclb
pop
xlat
addr16
dec
mov
and
adc
pop
mov
ficomps
and
dec
jnp
orl
call
into
mov
lahf
movsl
xchg
pop
imul
cmpsb
fimuls
fiaddl
jne
mov
adcl
xor
js
sarb
jns
adc
out
jg
mov
shl
push
scas
je
push
or
jns
leave
clc
xor
mov
and
jns
adc
addl
loopne
cmp
sbb
fldt
mov
push
imul
mov
pop
adc
pop
icebp
xor
push
add
das
add
inc
mov
scas
inc
cwtl
subb
xchg
les
es
movsl
push
lods
cmpsl
js
sub
pop
mov
and
jo
sub
mov
lea
ljmp
popa
sbb
xchg
into
nop
arpl
or
cmp
pusha
jge
repnz
loopne
dec
add
push
inc
mov
scas
pop
pop
mov
into
popf
mov
ficomps
aaa
sbb
inc
or
push
enter
gs
lea
sub
lea
dec
sbb
lea
or
fnsave
jle
cmp
xlat
inc
movsb
test
and
ret
inc
mov
adcl
mov
loope
cmpsl
jb
or
sahf
mov
push
fistpl
cmp
stos
jmp
pop
lret
add
add
sbb
vorpd
int3
pop
popa
jp
sbb
stos
inc
imul
ds
pop
mov
pushf
dec
mov
dec
dec
mov
sti
cmp
xlat
jbe
jns
pop
inc
cmp
call
out
cltd
movsb
lret
mov
jnp
dec
mov
int
loop
add
in
push
adcb
dec
rcrb
push
cmp
divb
int
aam
mov
faddl
lods
js
lret
jo
xor
loopne
shll
mov
aad
sbb
push
arpl
mov
outsl
lcall
dec
xchg
popa
or
sbb
push
xchg
push
mov
xchg
mov
test
fpatan
aas
sahf
sahf
hlt
push
xlat
aaa
mov
ds
jmp
xchg
into
or
cmpsb
adc
fsubl
cmp
lods
lret
cli
xchg
adc
and
rolb
pop
push
push
lods
dec
addps
push
mov
adcl
sbb
xor
mov
sub
add
rcll
cltd
adc
cwtl
sub
daa
adc
mov
pop
nop
and
cmpsb
jg
or
xchg
sub
sub
dec
adc
std
adc
cmp
lods
dec
aad
aas
ret
mov
xor
aad
mov
arpl
clc
mov
xchg
and
int
or
adc
jbe
xchg
xchg
or
jne
pusha
pop
sub
sub
mov
adc
aad
inc
jnp
inc
ret
jp
loope
pop
mov
and
ret
into
add
mov
imul
jae
push
sbb
fstpt
int3
inc
sbb
je
mov
and
dec
lock
ja
or
adc
or
add
cmp
lahf
push
and
sbb
stos
mov
mulb
stc
jns
aad
adc
ret
inc
subb
push
and
fimuls
xor
add
test
mov
or
and
fxch
push
push
pop
ret
jp
pop
mov
scas
lret
xchg
shll
sbb
or
and
test
les
sarb
xchg
insl
mov
jb
lcall
dec
jmp
xor
lea
adc
xor
pop
popf
sub
pusha
and
cmp
out
aas
push
cmp
clc
sbb
adc
mov
or
aad
jns
sub
dec
icebp
lahf
adc
sbbb
js,pt
pop
loopne
mov
mov
int3
xlat
test
aad
enter
mov
jnp
fldenv
xchg
and
xchg
mov
rcr
inc
dec
pop
pop
adc
outsl
xchg
add
add
xor
nop
inc
je
cmp
leave
or
test
out
pop
dec
push
inc
test
jl
in
cwtl
js
push
nop
cmp
divb
push
xchg
adcb
mov
adc
icebp
push
fwait
int3
inc
push
xchg
sbb
outsl
inc
fwait
fwait
add
mov
fnsave
jne
mov
es
es
nop
mov
imul
pop
filds
ja
lods
adc
xchg
inc
inc
es
dec
dec
test
sub
push
jnp
sbb
lods
dec
jecxz
pop
xchg
or
xchg
pop
or
inc
test
jge
imul
call
negb
aas
mov
dec
sbb
xor
imul
lcall
sbb
xchg
iret
ljmp
or
int3
lods
mov
shrb
mov
test
std
int
into
leave
mov
nop
or
and
popf
pop
push
stc
or
mov
dec
jo
repz
aam
js
data16
xor
leave
filds
push
imul
stc
ss
push
push
iret
inc
shrl
mov
in
lea
aad
adc
cmc
xchg
bound
mov
cmpsb
sbb
pop
cmc
outsl
jle
shlb
mov
pusha
add
hlt
repnz
and
sub
or
xchg
dec
inc
test
push
sbbb
aad
arpl
xlat
xlat
cmp
insl
cmp
shll
test
pop
cli
scas
movsb
mov
pop
fistps
add
add
lea
aaa
xor
gs
xor
dec
std
ret
jmp
nop
test
jb
stos
inc
int
loop
or
dec
jecxz
dec
adc
sbb
mov
aaa
lea
inc
fisubrl
and
lods
push
lret
xor
and
inc
arpl
inc
ja
jns
mov
pop
and
jns
fiadds
dec
mov
imul
pop
adc
add
jb
jns
xor
mov
lahf
aaa
dec
gs
test
leave
push
ja
or
pop
xchg
jnp
insl
sbbb
rcll
ss
xchg
seta
inc
outsb
iret
jne
push
aad
cmp
and
sbb
cmpsl
push
add
xchg
sub
jns
test
or
cmc
pop
lods
subl
jns
int
pop
add
mov
fwait
mov
push
pop
jge
jae
pop
inc
push
mov
inc
je
mov
shlb
sub
mov
xchg
sbb
add
sbb
xor
shl
adc
std
ljmp
mov
test
js
inc
pop
sahf
xchg
cmp
mov
test
push
dec
jmp
cs
and
lods
ret
inc
daa
jnp
push
daa
add
mov
leave
fcmove
pop
jl
mov
adc
fbld
cs
cmp
cmp
adc
xchg
hlt
ss
in
pop
js
mov
mov
clc
mov
jno
aaa
xchg
push
stos
sub
adc
mov
and
fcmovnb
inc
sbb
in
xchg
xlat
mov
shlb
sub
jno
sbb
mov
test
mov
or
ret
push
stos
xchg
test
divb
pop
xchg
jnp
outsb
push
cs
andb
in
jmp
or
aaa
xchg
fs
jns
jae
jnp
push
inc
sub
mov
pop
nop
sahf
xlat
xchg
push
xlat
adc
and
pusha
mov
mov
lret
pop
dec
fwait
sub
fimuls
into
insb
and
jb
xchg
roll
mov
mov
push
aam
cmpsl
jp
loop
or
insb
movsl
ljmp
fldenv
sarb
aas
sub
daa
lock
daa
cwtl
aas
das
xchg
cmp
pushf
fs
les
dec
arpl
aas
inc
inc
pop
sub
ret
lds
sub
adc
jmp
xchg
jo
fiadds
out
les
adc
pop
jns
ret
push
adc
cmp
fildl
mov
mov
push
shll
mov
mov
shll
push
fneni(8087
xchg
add
xor
cs
pop
or
jmp
pop
cmp
mov
adc
mov
xchg
sbb
nop
inc
dec
push
mov
test
nop
jmp
adc
sbb
inc
cmpsl
or
movsb
jl
lret
cmp
std
shll
push
out
cmp
std
xlat
dec
jmp
mov
push
xlat
nop
pop
cmp
rorl
dec
hlt
sbb
xor
dec
adcb
pop
rorl
sbb
stos
ss
push
sbb
orb
or
cltd
jp
xchg
dec
hlt
mov
mov
mov
xor
cmp
adc
movsb
adc
out
aad
add
xor
fidivrl
or
sbb
outsl
push
sarl
stc
fisubs
repnz
mov
adc
loop
insb
add
shlb
and
push
xchg
jbe
es
movsl
xor
pop
loopne
aad
scas
and
cmp
ret
mov
loop
popa
sarl
adc
push
cli
sbb
inc
movsb
xor
fcompl
jnp
xor
jnp
out
and
imul
lea
cld
rcl
mov
xchg
push
ljmp
aam
shl
mov
add
icebp
or
scas
mov
xchg
and
gs
mov
rcll
cmp
mov
jmp
das
add
cmp
add
out
das
push
daa
pop
pushf
lahf
fistpll
scas
in
nop
stos
leave
or
fnstenv
lods
jg
add
dec
loopne
cs
ret
or
test
cld
add
xchg
cmp
cmc
icebp
popf
ret
pop
add
lret
xchg
aaa
jns
cwtl
cld
out
jmp
adc
push
sbb
mov
insb
rorl
fsubrp
cs
push
lock
lahf
adc
xor
pop
enter
xchg
and
mov
jp
lock
mov
cld
icebp
int
pop
ss
test
mov
mov
xchg
test
cmp
fld
in
sub
or
mov
iret
fimuls
stos
je
andl
pop
out
xlat
and
or
addl
push
jb
cmp
filds
xor
inc
add
mov
xchg
xor
lahf
jns
popf
adc
std
js
test
dec
mov
mov
lds
iret
outsl
into
inc
and
or
mov
xchg
xor
dec
mov
test
xchg
or
rcr
add
out
std
push
cwtl
or
mov
loope
mov
lcall
xchg
dec
adc
inc
out
push
cmp
inc
fs
adc
sarb
mov
mov
outsb
test
fmul
ds
or
pop
scas
add
loop
adc
gs
and
and
adc
inc
cs
lret
push
jecxz
or
cmp
inc
icebp
adc
aas
es
sbb
pop
jmp
push
in
jg
xor
out
mov
xor
fimuls
xchg
sub
ficoms
adc
dec
ljmp
std
inc
icebp
mov
lret
js
push
xorb
mov
icebp
imul
fldt
addr16
ja
sbb
inc
mov
push
sub
adc
dec
xchg
rep
push
addr16
sub
push
sub
push
bound
or
jae
mov
push
pop
jns
jle
fnstcw
adc
out
mov
insb
sbb
jo
mov
ds
mov
inc
ss
imul
bound
mov
dec
dec
dec
xchg
test
push
jb
stc
add
xchg
pop
and
cmpsb
mov
sbb
or
jmp
xor
pop
pop
imul
stc
push
xor
sbb
cmpsl
aas
or
aad
cmp
ret
rcll
sub
xor
daa
mov
push
out
mov
iret
add
xor
xchg
es
dec
fdivrs
mov
shrl
mov
mov
push
mov
ja
js
cmc
js
push
jne
sub
shrl
int
dec
xor
sbbl
js
jle
mov
mov
stos
int3
lahf
jmpw
cmp
adcl
cwtl
jnp
cmp
or
loop
sbb
fmul
mov
and
cmp
movsb
push
sub
data16
scas
loop
push
xchg
jle
scas
pop
mov
jnp
js
sbb
xor
addr16
push
jb
arpl
out
fisubrs
popf
xchg
xlat
icebp
ret
lcall
imul
ret
xor
pop
dec
imul
xor
pop
xor
fwait
insb
scas
jmp
cwtl
push
adc
cmp
sub
mov
rcrb
inc
xchg
mov
scas
and
cltd
sub
enter
dec
sub
ljmp
gs
in
dec
adc
imul
andb
fcomp
ret
leave
pop
mov
int3
mov
xor
pop
scas
pusha
xor
sbb
adc
fxch
add
mov
pop
outsl
fwait
mov
sbb
bound
add
jne
add
aas
cmpsb
push
out
lea
fnsave
shl
loopne
sti
adc
clc
mov
or
clc
popa
cli
sahf
adc
xchg
fsubl
sub
lea
shrb
push
dec
sti
pop
lea
iret
add
test
iret
mov
jmp
fsubr
aam
mov
xchg
push
pop
inc
pusha
jle
insl
cmp
mov
inc
mov
mov
adc
push
in
cwtl
push
fwait
pop
pop
in
or
dec
push
movsl
dec
insl
cmpsb
push
repnz
inc
dec
enter
mov
xchg
xchg
and
aam
xchg
fistpll
subl
test
mov
inc
dec
or
andl
stos
or
js
mov
mov
cmpsb
mov
dec
inc
aaa
inc
pop
sub
test
mov
inc
sbb
push
sbb
mov
jl
xchg
ljmp
push
cmc
loop
enter
js
dec
push
iret
fistpl
test
mov
sub
or
xchg
jmp
push
push
pusha
pop
push
xor
push
and
add
addl
sbb
add
push
xchg
gs
das
cwtl
and
adc
mov
mov
scas
fistl
ds
daa
mov
lods
loopne
jmp
repnz
sbb
mov
inc
mov
cld
adc
cwtl
imul
in
pop
xchg
mov
adc
sbb
ret
arpl
leave
cmp
push
mov
test
loopne
xchg
ret
and
mov
pop
pusha
cmp
mov
jne
add
aas
add
imul
mov
gs
addr16
nop
clc
jle
leave
popf
or
push
repz
pop
subl
rclb
mov
inc
mov
push
xor
rcrl
xor
dec
cmp
loope
mov
aaa
adc
in
add
fs
pop
lret
loope
mov
add
mov
and
push
or
mov
int
jp
ja
xchg
cli
pop
repz
lahf
mov
mov
mov
lahf
into
push
sbb
inc
aaa
movsl
int
inc
sbb
or
imul
imul
adc
dec
stos
je
cmp
dec
hlt
add
in
mov
int3
sbb
and
ds
push
int
xchg
scas
cli
into
lea
out
ja
cmp
push
in
mov
dec
dec
push
xor
pop
sbb
sbb
xor
in
imul
xchg
mov
mov
cmp
rcrl
movsl
push
cmp
aam
xorl
lcall
jle
fsubs
subb
movsl
xlat
rorb
sbb
pop
aaa
mov
add
jecxz
aam
and
std
shrl
cmp
or
sbb
jmp
jnp
adc
mov
addr16
xchg
inc
inc
mov
out
inc
cmc
add
mov
and
scas
add
dec
xchg
adc
adc
fisubs
inc
or
and
xchg
out
in
push
test
mov
and
enter
adc
icebp
test
stos
pop
adc
dec
test
repnz
mov
mov
lock
mov
cmpsl
cld
sub
sub
xor
xchg
ss
clc
cmp
xor
xor
pop
daa
mov
add
cmp
inc
shl
or
and
push
rol
dec
aad
out
ja
iret
int
mov
popf
or
in
push
test
test
pop
add
bound
out
jnp
pop
cld
pop
ljmp
call
push
fs
je
pop
xchg
xchg
dec
les
sbb
mov
mov
mov
and
push
mov
fadd
dec
bound
popa
cmp
add
xchg
cwtl
xor
cli
sbb
loop
pop
ret
mov
mov
arpl
enter
inc
int3
and
inc
clc
out
add
jp
scas
rcrb
mov
mov
mov
jno
les
test
ret
cltd
sahf
mov
mov
cmpsb
cwtl
lea
imulb
cs
mov
xchg
pop
cmp
mov
lods
scas
dec
in
jge
stc
sub
pop
lods
popa
and
out
adc
stos
jbe
xchg
push
inc
movsb
inc
cmp
je
mov
xor
adc
mov
outsl
in
jl
add
mov
mov
mov
fsts
addb
pop
dec
jno
pop
jmp
idivb
stos
mov
movsb
cmpsl
xor
xlat
add
pop
mov
jnp
mov
mov
dec
jnp
rorb
xchg
mov
jno
mov
add
stos
xor
pop
je
jns
jno
das
in
add
inc
lods
jmp
shlb
push
add
aas
mov
push
pop
add
int3
mov
push
stos
inc
and
imul
mov
ss
sbb
xor
ja
das
into
movsl
enter
pusha
sbb
mov
add
xchg
cmp
push
pop
fmull
dec
std
ja
mov
xchg
in
dec
inc
add
xorb
fiadds
out
or
mov
dec
mov
mov
scas
push
pop
mov
hlt
or
cmp
aas
inc
fsubrl
dec
dec
push
cld
sarl
or
mov
aam
pop
aaa
insb
mov
pop
pusha
pop
xchg
xlat
push
scas
mov
mov
aas
add
cmpsl
loope
pop
push
mov
jge
mov
inc
mov
mov
outsl
push
adc
pusha
pop
push
mov
das
sbb
repz
stos
fs
adc
cmp
mov
adc
cmp
sub
sar
pop
cmpl
push
add
cli
cmp
outsl
lods
pop
push
pop
or
cmpsb
pop
out
lock
gs
cmc
pop
jl
cld
and
add
xor
and
lret
out
in
lock
xchg
dec
sbb
add
cli
in
scas
jb
out
jns
mov
add
mov
divb
test
cs
out
fstpt
mov
outsl
in
and
lds
dec
ret
loope
fists
cmp
std
sti
rorb
ret
jns
jecxz
cmp
pop
xchg
push
add
into
lods
ss
pop
jp
shlb
mov
test
mov
cwtl
and
inc
rcr
std
mov
sub
push
xchg
mov
mov
sbb
repz
jle
pop
stos
shrb
out
mov
xchg
xchg
insl
push
daa
mov
jo
out
jo
outsb
pop
jbe
rsm
jno
in
cs
cmp
dec
pop
out
jnp
jo
iret
lret
cltd
repz
xor
aaa
pop
cwtl
inc
push
out
scas
inc
out
js
dec
jb
stos
dec
das
sahf
pop
pop
mov
shlb
movsb
out
cmp
sub
icebp
cld
sti
mov
or
out
dec
test
fnsave
xchg
fidivrs
je
aaa
xchg
push
pop
and
iret
or
cmp
les
push
int
lods
xor
add
lods
es
jne
pushf
mov
ss
mov
or
aad
lods
jp
xor
pop
out
pushf
nop
and
jle
fs
pushf
mov
insb
lods
test
scas
mov
mul
lock
cs
arpl
xlat
out
mov
push
mov
aad
xorb
xor
lret
fs
cmpsl
lods
ret
dec
push
lods
loop
sti
jne
push
mov
dec
pop
jae
lret
icebp
hlt
dec
inc
or
call
aas
cld
fnsave
jb
nop
daa
xor
xchg
xchg
dec
inc
lods
cs
jmp
xor
dec
int3
or
mov
xchg
test
inc
jge
data16
rclb
pushf
lods
scas
inc
xor
xor
icebp
jg
jo
ret
cmp
adc
stos
mov
fs
adc
mov
mov
jb
mov
scas
push
cmp
lret
or
push
mov
stos
data16
int
ss
sbb
out
sbb
aaa
dec
loopne
in
push
xorl
mov
ficoml
mov
inc
inc
pop
xor
jle
clc
cmp
add
cmp
in
fldenv
mov
rolb
testb
jb
pop
shrb
test
sub
push
cltd
daa
cltd
bnd
pop
push
push
dec
arpl
movsb
pop
movsl
xor
cmpsb
jp
cmp
push
ret
sbb
arpl
or
mov
ja
outsl
fstpt
sub
clc
cmp
adc
or
jae
xor
sahf
push
xchg
and
push
outsl
or
call
xchg
ja
or
dec
or
xor
mov
fcom
mov
dec
jmp
sub
sub
cld
xor
divl
mov
sub
fucom
mov
pop
ret
int3
dec
ret
push
decb
lret
andl
icebp
jno
test
outsl
push
add
add
inc
sbb
xor
out
notl
std
adc
jmp
aas
sub
hlt
iret
fwait
push
lcall
bound
outsb
negb
push
dec
xchg
pushf
and
sti
push
dec
and
sbb
nop
mov
out
adc
insb
idivl
data16
mov
cli
xchg
mov
pop
xrelease
dec
mov
lods
movsl
stos
repz
dec
push
movsl
jne
daa
jle
add
push
pusha
cmpsb
and
lea
lods
jno
xchg
jne
push
outsl
mov
in
lret
clc
pop
sar
mov
mov
and
shll
cmp
loope
shll
ss
xchg
insb
mov
test
adc
adc
aaa
icebp
mov
dec
bound
gs
outsb
rcl
iret
mov
xor
ret
pop
xor
mov
xchg
in
sbb
sub
push
adc
pop
lock
clc
xor
out
cmpsb
lock
ljmp
cs
out
cmp
in
fcmovb
mov
mov
pop
mov
or
nop
mov
cmc
mov
mov
push
fld
outsl
pop
lret
ret
fnstcw
cmp
mov
in
add
fs
lcall
jne
out
mov
sbb
cmp
popa
xchg
fldt
lret
mov
sarl
movsl
mov
and
jl
jo
sub
sbb
insl
out
rolb
mov
cmpl
or
ja
cmc
fwait
addb
jp
jmp
fcmovnbe
push
hlt
push
xchg
push
push
fs
jecxz
mov
rcrb
leave
xor
fcomp
imull
cli
cpuid
sbb
clc
jge
jbe
or
inc
xchg
outsb
xchg
pop
repz
call
mov
pop
iret
into
xor
inc
adc
sbb
dec
sahf
cmc
sbb
xor
mov
fisttps
pop
mov
insl
push
jbe
jmp
mov
jmp
push
je
sub
mov
das
shll
outsl
int3
mov
test
jnp
add
dec
std
xchg
sbb
sbb
xlat
ja
dec
fsubs
insb
mov
cli
xor
cmc
jnp
cmp
jle
cltd
std
pop
adc
add
aad
mov
cwtl
ds
stos
mov
movsb
fdivrl
gs
or
lods
testl
cmpsl
aam
outsl
insl
pop
out
sti
and
xchg
cmp
xchg
sbb
shrb
mov
in
test
or
or
movsb
out
push
cmpsb
std
dec
jecxz
sbb
in
insb
jb
xor
mov
xlat
and
pop
or
inc
cld
lea
sbb
aas
outsl
in
loop
sub
in
push
push
es
les
addb
movsl
jge
add
dec
dec
idivb
add
fcoms
mov
lods
xorl
cs
shrl
js
add
repnz
pop
xor
sbb
call
or
jmp
jbe
mov
jmp
mov
lods
push
icebp
push
push
mov
jbe
jge
xchg
out
or
jge
cli
dec
lahf
insl
cmpsl
add
cmp
cmc
faddl
fnsave
dec
mov
insb
scas
arpl
push
cmp
outsl
aam
inc
je
insb
mov
push
push
mov
and
cmp
inc
mov
repnz
jg
faddl
hlt
pop
mov
ret
mov
int3
pop
xchg
fmul
dec
sbb
test
sub
notb
filds
mov
out
mov
adc
or
inc
mov
je
mov
lcall
adc
add
out
iret
mov
lret
call
sub
adc
mov
xchg
dec
loopne
jle
outsl
adc
mov
out
or
into
mov
inc
es
dec
lcall
inc
mov
clc
xchg
lcall
ret
out
mov
repz
dec
into
mov
and
pop
push
pop
bound
jmp
testl
ljmp
jp
jns,pn
pop
cmp
adc
lds
outsl
aaa
mov
push
cltd
cmp
addb
or
sbb
mov
test
jno
fstpt
lcall
mov
and
nop
inc
and
iret
andl
and
cmpsb
mov
cmp
ret
stos
fmuls
jp
and
sub
ljmp
pop
lds
xchg
mov
pop
push
sti
dec
lahf
dec
jg
jp
mov
pusha
mov
fwait
push
lock
repz
in
jbe
sahf
and
call
mov
cli
fdivs
dec
mov
decb
xor
cltd
inc
ss
add
adc
jmp
adc
mov
sub
lods
lret
adc
mov
sarb
xchg
inc
sbb
push
popf
mov
icebp
jge
jmp
dec
in
outsb
add
push
into
gs
out
fstp
out
sub
jo
aam
imul
push
dec
inc
shll
xchg
push
leave
imul
jge
pop
stc
lods
mov
jl
orl
mov
xchg
das
lret
daa
mov
popf
sbb
test
lcall
sahf
jae
cmp
mov
fcomp
jo
push
mov
inc
mov
xchg
sti
inc
lock
xchg
mov
ret
outsb
ds
stos
data16
aad
mull
fcompl
int
pop
xlat
jb
lods
pop
mov
test
into
add
mov
std
pusha
std
adc
aas
leave
pusha
imulb
dec
outsl
xlat
dec
sahf
call
in
clc
xor
jmp
stos
xor
shl
out
push
ss
cli
pop
push
mov
rolb
pop
mov
push
jae
cmpsb
sti
ds
pop
sbb
dec
add
push
dec
lods
shl
pop
cmpsl
testl
enter
test
xchg
inc
fnstcw
das
das
jge
sbb
dec
insl
xchg
icebp
ds
es
test
sbb
and
jle
add
das
mov
imul
mov
jno
negl
pushf
or
ljmp
mov
pop
je
out
adc
push
cmp
arpl
or
pop
adc
stc
xchg
sbb
jbe
inc
push
xlat
outsb
addr16
in
adc
push
test
pop
sub
xor
mov
jne
lret
sub
add
nop
push
ret
sahf
stos
jg
push
std
pop
mov
sbb
aad
mov
mov
xor
inc
xor
fnsave
outsl
cmp
popf
or
push
or
fiaddl
cmp
adc
sar
ljmp
xlat
ret
repnz
into
fwait
push
pop
into
inc
sub
add
jle
xor
push
push
and
popf
mov
mov
add
and
or
and
adc
push
ss
dec
and
jbe
cmc
xor
roll
dec
je
inc
dec
imul
negb
jmp
jmp
jae
add
cli
aad
push
mov
or
xor
test
jge
in
xchg
mov
aaa
push
andb
cmp
dec
xchg
jmp
xlat
mov
lock
out
mov
or
pop
add
xlat
inc
xor
mov
push
inc
lods
xorl
cli
pop
inc
mov
xor
fdivrs
sbb
in
add
mov
lret
into
lahf
pop
imulb
outsb
fmul
mov
sarb
scas
push
imul
test
fcomip
ret
mov
lods
mov
ficoms
popa
sti
push
mov
femms
nop
mov
push
sbb
mov
xchg
je
fdivr
or
cli
pop
test
cs
xchg
rorl
mov
stos
and
mov
mov
rorb
pop
pusha
pop
inc
adc
sub
sbb
aam
mov
jp
popa
add
insb
mov
data16
jae
inc
scas
sbb
push
in
sub
mov
fwait
pop
cmp
cmp
fcmovnbe
pop
in
ja
pop
push
cmpsl
and
xchg
mov
pop
pop
jmp
dec
enter
and
aas
and
addr16
adc
sti
std
mov
cmp
xor
mov
aas
cwtl
mov
and
jmp
sub
ja
icebp
cwtl
fmuls
or
add
insb
cmp
xchg
lock
ret
in
add
mov
popf
mov
fisttpl
addl
pop
cmp
and
push
ret
lret
add
inc
std
push
movsb
jb
and
lods
jnp
scas
mov
in
push
pop
and
fisubl
mov
shlb
test
fildl
js
bound
inc
aad
jne
and
nop
repz
mov
ss
sub
mov
jo
icebp
es
inc
jg
mov
sub
jecxz
xchg
mov
fcompl
loop
mov
sbb
dec
imul
pop
jo
in
sbb
or
cmp
std
mov
mov
js
add
jecxz,pt
xor
pop
int
ficoms
inc
lods
movsb
insb
push
or
aad
icebp
mov
jnp
sub
push
sub
push
xchg
out
push
andl
imul
in
adc
fst
mov
sbb
pop
repz
dec
mov
fcoms
ret
inc
cmp
aas
and
cmp
hlt
in
and
sbb
add
sub
cmp
shlb
mov
jge
push
xorb
sti
in
cmpl
xor
mov
mov
test
movb
subb
test
xchg
ret
xchg
xor
and
ret
push
push
sbb
jle
add
cltd
sarb
mov
pop
dec
mov
ja
adc
fildl
inc
inc
aaa
aaa
mov
ja
and
adc
shll
nop
push
aaa
loopne
xor
ljmp
xor
mov
es
insl
cmc
jl
scas
outsb
jmp
push
stos
push
test
hlt
sub
in
mov
adc
insb
xor
inc
and
jnp
clc
xchg
mov
xor
fs
mov
iret
adc
or
icebp
aas
dec
inc
pop
push
or
mov
pop
mov
sub
push
int
push
addr16
pop
lds
mov
dec
pop
fwait
mov
lock
sarl
mov
jp
pushf
xchg
imul
out
nop
cwtl
enter
adc
add
xor
dec
cli
fidivs
sub
int
push
mov
mov
adc
shll
dec
and
adc
popf
lods
in
mov
push
ss
and
push
sbb
mov
jnp
in
fidivs
insb
jb
jle
push
push
pcmpeqw
shll
stc
mov
xchg
pushf
push
inc
mulb
divl
or
movsb
shrb
push
aaa
mov
jg
addl
ds
andb
xchg
pushf
test
xchg
xor
insl
fldenv
sub
add
xchg
mov
and
mov
mov
dec
or
stos
lret
shl
aad
dec
movsl
jg
mov
jae
inc
mov
lock
das
icebp
test
daa
jg
push
push
cld
pop
mov
movsl
imul
leave
push
scas
fisubrs
fldenv
inc
dec
lahf
push
inc
enter
sti
mov
in
inc
push
inc
pop
or
fldt
call
sbb
mov
movsl
mov
sbb
mov
mov
xchg
jne
dec
jbe
push
ror
pusha
lock
insb
cli
sub
iret
divb
mov
and
out
imul
jp
int
loop
inc
lods
lds
loop
pop
xchg
jno
sbbl
jl
pop
imul
jp
sub
testb
xor
sti
inc
sbb
out
xchg
cli
lods
xchg
movsb
xchg
cmc
lods
popa
jp
loopne
mov
xor
sub
in
push
pop
mov
scas
insl
pop
xor
mov
cs
test
cmp
aas
add
mov
and
aam
stos
add
icebp
cmp
mov
xlat
pushf
jns,pn
pop
lods
mov
push
icebp
subb
jns
out
add
data16
push
subl
movsb
pusha
sbb
jne
pop
and
aas
aad
pop
xor
stc
push
test
push
in
and
lock
jge
loopne
jmp
push
loop
loope
mov
loopne
lcall
mov
add
lret
mov
push
inc
das
int3
enter
mov
cmp
lds
push
movsl
scas
insb
xor
pop
icebp
je
cmp
aam
inc
test
push
inc
enter
mov
push
push
mov
and
js
les
andl
adc
sbb
iret
xor
rcll
ja
les
cmp
bound
imul
dec
imul
ljmp
inc
cmc
jecxz
std
jmp
sub
and
aam
jecxz
ljmp
add
subb
mov
mul
add
cmp
mov
jle
subb
or
cltd
popf
and
out
cmp
je
inc
sub
test
sbbb
pusha
mov
js
mov
sbb
sbb
push
mov
add
cwtl
cmpb
inc
jb
pop
mov
pop
sub
pop
dec
mov
add
lcall
jbe
je
popf
repnz
stos
xchg
mov
fiadds
ja
pop
push
push
inc
mov
leave
xchg
push
xlat
bound
dec
dec
xor
lock
or
sahf
roll
psubw
mov
fnstenv
inc
pop
sub
test
rcrb
insb
dec
adc
push
pop
jp
pusha
test
sbb
cmpsb
push
sbb
add
lods
mov
fildll
lret
cmpsl
pop
in
lret
mov
outsb
andb
lret
out
pop
loope
fcmovbe
sbb
or
add
sbb
add
out
decl
push
rclb
fwait
or
and
inc
adc
pop
in
pop
jecxz
cmp
xorl
cld
mov
adc
int
ss
insb
aad
mov
jg
outsb
and
out
in
loop
cmpsl
fidivs
inc
pushf
xor
in
sbb
xor
push
inc
xchg
sbb
cmp
aad
outsb
mov
cmp
cmp
jb
outsl
jmp
jge
xor
adc
test
xor
popf
flds
jge
lock
addr16
outsb
push
mov
fmull
das
shl
jge
push
push
dec
sub
xchg
fmul
xchg
rorb
cmc
or
or
add
sbb
dec
ficomps
fcmovnu
pushf
mov
mov
pushf
or
repnz
xchg
dec
test
pop
outsl
jae
lea
out
int3
add
sub
mov
jne
lods
sbb
in
cmp
fisttpll
out
leave
xor
ljmp
sub
dec
mov
jo
xchg
or
mov
and
mov
inc
js
xor
or
ret
pop
movsl
xor
mov
pusha
jl
scas
add
das
inc
int
mov
xchg
mov
mov
stos
push
cwtl
jns
arpl
ret
in
fcoml
sub
xchg
mov
add
iret
xor
aam
loopne
ja
sbb
dec
ja
xchg
stos
lret
ret
cmpsb
scas
mov
xchg
lret
or
outsl
inc
push
sar
push
sub
dec
xor
mov
ret
stc
mov
pop
rorl
inc
mov
adc
repnz
into
call
add
mov
das
pop
pop
int
mov
leave
rolb
adc
add
rolb
and
xchg
add
outsb
test
pop
lods
xchg
stc
mov
push
cmpsb
ret
inc
adc
in
aaa
dec
repnz
mov
nopl
and
outsb
inc
push
out
mov
or
cmp
mov
or
loop
xor
xchg
pop
jp
loope
and
in
mov
clc
mov
mov
nop
jp
roll
push
and
lret
jne
cmp
pop
movsl
push
mov
mov
adc
fsubl
push
stc
test
cmpsl
sub
push
cmp
push
in
loop
pop
sti
jne
cmc
call
into
test
pusha
xchg
aas
mov
clc
jns
mov
lds
pop
jmp
addr16
cmp
incl
loopne
pusha
inc
sbb
mov
add
fcomip
xchg
jmp
iret
daa
mov
add
int
jmp
sub
shl
roll
push
sbb
out
icebp
fldl
insl
jnp
mov
and
mov
sahf
jle
dec
in
sub
jle
xlat
mov
dec
add
lods
xor
std
adc
std
add
lods
popa
xor
cmp
adcb
jle
cs
jg
addr16
mov
outsb
pop
fstpt
sub
xor
repz
mov
push
pop
mov
add
inc
adc
popa
dec
cmpb
outsl
push
stc
sub
pop
outsl
inc
jne
mov
pop
mov
adc
call
int
icebp
movsb
jno
aas
sub
sub
adc
jle
leave
cmp
mov
fstpl
and
popa
daa
imul
js
repz
mov
stc
mov
cltd
aam
sub
sub
js
xchg
mov
sti
pop
rcll
mov
inc
dec
inc
nop
int
xchg
pop
push
push
and
test
push
in
aas
pop
or
jnp
icebp
sbb
lret
pop
fsubrl
pusha
out
fsubr
push
jg
and
sbb
mov
dec
fmull
das
iret
loopne
sub
bnd
cs
lea
xor
test
dec
scas
test
fidivs
or
sbb
fisubs
mov
movsb
testb
inc
in
out
jno
cmc
sub
or
push
adc
mov
xchg
push
or
iret
in
mov
mov
jl
loopne
in
repz
add
in
inc
push
mov
adc
adcb
pop
push
lahf
in
mov
pop
jg
adc
push
insb
xlat
ret
add
push
mov
mov
ja
xchg
imul
dec
rorl
xchg
shll
jmp
push
push
stos
push
mov
mov
daa
test
insl
add
cmp
mov
int3
xchg
nop
or
xor
cmp
cmp
sbb
jne
gs
popf
add
frstor
pop
and
xor
jns
insl
fdivl
push
stos
push
inc
psrld
push
dec
dec
inc
mov
int
lcall
pop
push
dec
mov
aaa
ficoml
add
in
mov
inc
dec
mov
imul
out
sbb
mov
jb
push
mov
mov
jae
loope
pusha
out
dec
and
lea
mov
mov
dec
fwait
jecxz
pop
test
add
or
add
movsl
loop
mov
not
fcmovnu
addr16
aas
gs
push
xchg
in
jmp
mov
mov
jmp
mov
pop
int3
in
pop
or
lods
lret
popf
inc
jnp
sbb
mov
outsb
popa
cmp
scas
adcl
xlat
outsl
cs
testb
xchg
sahf
inc
and
mov
dec
out
repz
imul
lods
push
or
sbb
mov
in
mov
and
je
inc
push
mov
or
sub
mov
out
fs
sub
lods
mov
sbb
lock
inc
pop
push
or
cmc
insb
rcr
sti
rolb
pop
out
push
imul
pop
je
lcall
mov
mov
mov
lret
lods
mov
push
sub
mov
out
jmp
jbe
or
out
xor
je
in
jl
xchg
jmp
popa
inc
xor
or
add
cmpsl
ds
mov
lods
and
add
sub
cwtl
sbb
ret
jae
repnz
xor
shrb
fsubr
mov
scas
dec
jne
jne
and
mov
cmp
scas
lea
adc
lret
scas
mov
and
test
das
cmp
aam
js
jns
ficoml
and
or
mov
orb
xor
mov
jl
inc
cmp
xchg
lahf
mov
lea
out
xor
push
scas
xchg
nop
movsb
jno
inc
maskmovq
negl
jb
mov
pop
mov
pusha
jl
pushw
sub
or
mov
cmc
mov
mov
cmpsl
dec
enter
test
sti
int3
push
push
xchg
dec
icebp
aam
add
enter
sbb
jno
lcall
or
test
xor
adc
xchg
jle
jb
mov
out
adcl
cmp
sti
imul
push
std
insl
or
ja
lcall
or
ja
inc
stc
test
incl
jb
xor
iret
cmp
jmp
pop
mov
add
arpl
sti
xor
adc
pop
jmp
adc
jb
gs
xchg
xchg
test
sbb
mov
lahf
dec
jmp
cmpsb
mov
cmp
outsb
push
pop
outsl
adc
ret
and
idivl
xchg
inc
mov
mov
push
xor
pop
loop
rolb
scas
repz
imulb
mov
mov
cmpsl
pusha
addr16
dec
cmp
jg
pushf
sbb
or
and
mov
in
int3
mov
lds
xchg
loope
or
or
fisubl
cmp
mov
xchg
sub
cltd
repz
mov
mov
test
mov
data16
les
adc
paddb
shrl
fldenv
push
and
popf
stc
fstl
xor
pop
popa
inc
sbb
xchg
call
mov
push
fwait
daa
pop
aam
mov
and
lods
test
adc
nop
icebp
cmpsb
sbb
dec
jl
sarl
cltd
pop
or
inc
jl
adc
pop
dec
push
jge
push
cmpsb
sub
mov
jg
xchg
popa
jl
sub
xlat
jl
mov
mov
jg
pop
icebp
pop
fdivp
jns
cmp
cmp
sbbl
test
dec
inc
aam
loop
lahf
scas
jmp
call
mov
mov
addl
inc
test
push
mov
lods
adc
push
sahf
add
mov
int
in
rolb
xor
pop
and
xchg
cmp
lret
das
jl
test
xor
cmc
mov
cltd
jl
push
and
shl
dec
out
cmc
bound
aad
or
add
or
mov
xchg
xor
mov
mov
mov
lods
scas
push
mov
rorl
add
pop
mov
fmuls
mov
lcall
jmp
sub
or
push
movsl
test
xchg
scas
ret
lods
pop
stc
or
xchg
push
sub
mov
data16
xlat
pop
sub
outsb
sbb
lea
movsl
xchg
dec
xor
dec
int3
jnp
aad
add
jl
xchg
pusha
lds
popa
xchg
rclb
sbb
insl
xchg
xchg
xchg
cmp
inc
cmc
jnp
stos
les
sbb
flds
sub
cmp
mov
ds
pop
xchg
sbb
mov
popf
ret
push
int
ffreep
pushf
ficomps
clc
ds
xchg
xor
addb
int3
pop
mov
sbb
iret
sahf
xor
add
popa
mov
xchg
jg
int3
dec
loop
lahf
mov
jg
push
out
push
ret
or
cmpb
sbb
ds
jmp
sub
out
mov
js
add
cmpsl
loope
dec
leave
sbbl
in
or
f2xm1
mov
pop
lahf
adc
mov
imul
aaa
adcl
jge
inc
jmp
shl
popa
jbe
push
dec
nop
add
sbb
das
in
in
clc
ss
fcoms
jmp
mov
xlat
pop
push
ret
rcrb
push
out
push
xchg
fdiv
or
ficompl
in
mulb
add
lea
xorb
shll
shlb
bnd
subb
ja
cmpsl
into
out
xchg
stos
scas
push
mov
sub
sahf
les
shl
flds
mov
cli
cmp
dec
lret
xor
inc
enter
xchg
adc
das
or
xor
push
xchg
ljmp
adc
add
test
ret
mov
imull
in
sti
mov
addr16
cs
scas
data16
add
test
or
mov
pop
in
pop
test
imul
xchg
or
ficompl
and
fcmovne
lock
popa
add
add
jne
popf
push
jb
icebp
bound
pop
and
dec
rolb
fdivrp
ljmp
pop
push
jno
pop
dec
test
pushf
cmp
les
jo
mov
mov
ret
fdivrs
ljmp
add
outsb
repnz
aas
orb
flds
sub
lahf
sarb
inc
mov
fidivrl
xchg
xor
js
xchg
cltd
aam
dec
inc
xlat
imul
dec
movsl
mov
sbb
out
pop
imul
xor
add
xor
add
lods
outsl
xchg
mov
xor
jge
sbb
ds
ret
psllq
lods
cmp
push
mov
cli
sub
xor
notb
dec
push
test
push
insb
pop
loope
addr16
cld
cmp
test
jg
cli
in
lods
js
xchg
sub
jle
int
add
adc
push
or
ja
push
pop
ljmp
or
or
xorb
jo
mov
add
popf
je
add
adc
incb
nop
mov
subl
xor
xor
imul
inc
enter
lea
test
inc
xchg
push
insb
and
or
cltd
xor
sbbl
gs
jae
aas
push
neg
mov
jge
loope
cs
fldenv
test
push
dec
aaa
push
imul
test
addr16
ds
mov
and
mov
shlb
adc
jg
add
jnp
out
push
pop
pop
loopne
lods
enter
push
rcl
add
mov
sub
dec
dec
push
adc
call
popa
dec
add
insb
insb
mulb
shr
inc
sub
fidivrl
sub
repz
repnz
lds
push
jae
sbb
out
rorl
jb
test
mov
sbb
push
out
jl
push
js
mov
imul
xchg
daa
jmp
mov
and
fcomps
dec
mov
sbb
daa
std
loope
lds
mov
jb
mov
sbb
cmp
icebp
jp
outsb
push
scas
pop
test
fildl
repz
lods
call
pop
jo
nop
jns
popa
cmp
adc
fs
hlt
xchg
stos
incl
xchg
into
lahf
in
jbe
cmp
push
fdivrs
ss
pop
sbb
aam
jae
xor
sahf
and
pusha
pop
inc
dec
loopne
mov
cwtl
sub
cmpsb
jne
jmp
pop
insb
inc
aam
int
cs
xchg
mov
mov
jb
xchg
dec
insl
mov
sbb
jae
data16
lock
pop
jnp
pop
pop
or
add
mov
cli
lahf
les
fidivs
cwtl
mov
cmp
imul
jno
incl
lock
cltd
addl
sub
mov
addr16
mov
pop
lahf
adc
popa
xchg
sbb
pop
inc
test
repnz
sbb
push
inc
add
ja
cmc
test
sti
and
pusha
mov
sarl
jne
jp
xchg
iret
int
push
fldt
jae
decb
hlt
sbb
pop
lea
fmull
sbb
inc
in
ds
xor
pushf
pop
lret
add
cmpsl
adc
inc
js
lahf
inc
rcrb
jecxz
lahf
dec
xchg
mov
cmc
fldl
sbbl
sbb
das
and
xor
inc
cltd
aam
es
movsl
clc
adcb
push
mov
pusha
repnz
pop
scas
cli
mov
aas
jb
mov
mov
sub
test
in
test
adc
cltd
in
jnp
pushl
mov
fcoms
shll
jp
and
cltd
xchg
sahf
mov
loope
mov
faddl
or
jo
ss
cmp
sti
sbb
adc
cs
sub
lock
cmpsl
pop
push
cmp
roll
cmc
outsl
push
mov
pop
insb
cs
mov
inc
nop
mov
fs
or
dec
out
sub
sbb
inc
xor
pop
in
lret
loope
notb
out
sbb
sub
lahf
out
mov
lcall
and
adcl
mov
add
insl
std
dec
push
cli
add
mov
or
jae
out
lahf
pop
push
rorb
loop
sbb
dec
rorb
push
scas
arpl
outsb
pop
lods
andl
movsb
or
push
lods
or
lcall
sub
clc
jl,pn
pop
cmp
out
insb
mov
xchg
mov
dec
ficoml
dec
aad
mov
shr
xchg
dec
jecxz
ja
pop
dec
movsl
xor
into
jmp
rcrl
push
and
sub
xchg
jne
jmp
in
jno
icebp
cmp
push
push
jl
xchg
inc
fld
lahf
pop
or
ret
aad
je
jns
pop
xor
daa
and
or
add
dec
dec
dec
popl
xlat
and
lock
mov
out
xor
xchg
jecxz
fstps
lahf
loopne
cmp
test
xor
or
lds
imul
lret
add
sbb
outsl
fdivs
andb
xchg
loopne,pt
push
dec
adc
push
ljmp
les
orb
mov
inc
cmp
mov
xchg
cmp
arpl
sbb
in
insl
stc
sub
test
dec
push
or
push
add
rcrl
jl
fwait
gs
outsb
cmpb
iret
mov
stos
dec
mov
xchg
ds
jl
adc
popf
pop
stc
addr16
cld
push
push
xchg
fistpl
and
add
jp
cmp
shr
movdq2q
jbe
mov
xchg
xchg
mov
loopne
sbb
inc
sub
dec
push
adc
pop
sub
lcall
push
stos
jge
daa
sbb
sahf
mov
and
sbb
jge
push
jecxz
mov
add
add
pop
movsb
and
mov
and
mov
mov
dec
shlb
add
jp
inc
push
or
and
dec
pop
cltd
mov
or
mov
fcompl
hlt
imul
aad
aam
pop
mov
mov
mov
ss
adc
into
xor
popa
xchg
cmp
mov
sbb
xor
inc
cmp
test
adc
ret
imul
push
xchg
test
mov
fs
imul
adc
lds
cmp
outsb
cmpsl
ss
mov
ljmp
scas
add
notl
and
cmpsb
and
incb
or
inc
cltd
sarb
xchg
mov
cwtl
inc
mov
test
sbb
jns
mov
adcb
popl
inc
movsl
mov
xor
sub
sbb
aad
nop
out
lea
push
das
addl
cwtl
mov
rcrb
cmpsb
andl
enter
and
aad
or
imul
mov
pop
xlat
fldcw
push
arpl
pop
sub
cmpsb
ja
in
push
cmpsb
cltd
dec
mov
popf
push
dec
clc
fdivr
fstps
clc
or
or
xchg
sbb
mov
xor
cmp
fstpl
pop
mov
stc
inc
xchg
push
pop
adc
and
xor
jno
loop
cmpsb
push
sar
leave
in
les
negb
or
adc
in
jbe
sti
pop
cli
xor
mov
add
adc
mov
shrl
subl
iret
mov
cmc
jmp
mov
dec
ljmp
shl
pushf
sub
decl
ljmp
xchg
dec
push
or
arpl
aad
mov
lods
sbbb
cwtl
ret
sub
cmpsl
mov
mov
pop
fcomps
jns
xchg
pop
add
ja
xlat
cmp
clc
popf
sbb
and
jmp
dec
or
mov
or
fistps
ret
adc
mov
xor
xchg
mov
cmpl
pop
pop
hlt
in
mov
pop
es
in
pop
out
ss
movsl
xchg
adc
imull
movsb
mov
or
cmp
leave
cli
aad
dec
and
push
xchg
cs
mov
aaa
fstpt
iret
mov
in
into
inc
or
jnp
xchg
cwtl
test
ret
repz
mov
mov
aaa
adc
cmp
ss
fimull
sub
inc
aas
cmc
sbb
shll
inc
mov
and
in
fstpt
rclb
inc
adc
das
pop
mov
push
adc
imul
mov
aad
adc
insl
orb
cmp
ljmp
cmp
dec
icebp
push
inc
jp
aaa
clc
ret
cld
mov
inc
je
cmpsb
call
inc
dec
sarb
jns
movsl
inc
out
adc
ret
push
dec
jo
mov
push
push
push
mov
push
adc
cmp
inc
push
loop
push
movsl
and
mov
jmp
test
pop
aad
into
mov
jp
mov
loopne
or
jns
scas
sbb
rorb
push
mov
mov
inc
pusha
mov
push
mov
sbb
in
mov
mov
call
or
push
push
xchg
push
push
ja
adc
ja
rolb
cmc
jmp
inc
daa
int
sub
jne
clc
xor
cld
rorl
test
lret
shll
gs
sbb
loopne
out
iret
mov
stos
add
into
mov
pop
mov
fwait
es
jl
dec
dec
fmul
shr
rcr
lret
pop
xchg
loop
pop
add
icebp
sub
outsl
cmpsl
iret
and
xlat
adc
jo
mov
dec
adc
sub
cli
testl
push
cmp
jecxz
dec
add
mov
cmp
adc
adc
iret
in
mov
jo
std
sbb
wrmsr
add
mov
mov
dec
clc
dec
cltd
jecxz
fsubrs
pop
push
mov
jnp
adc
jmp
shlb
aam
test
loope
into
sti
test
mov
pop
dec
mov
jmp
xchg
loop
mov
packssdw
jns
adcl
fwait
dec
jns
sub
stc
xchg
ja
arpl
xchg
js
dec
xor
xor
fadd
stos
fisttpll
aaa
adc
or
mov
test
jb
ss
neg
ljmp
js
jno
sub
aad
pmuludq
scas
add
int
fcoml
sahf
outsl
movsl
in
cmp
imul
into
cmpl
jne
or
insl
push
or
nop
inc
jp
inc
aam
or
cwtl
shll
lahf
dec
cmpsb
fidivrs
and
stos
hlt
jle
pusha
add
adc
and
jo
pop
test
and
adc
sub
sbb
mov
push
pop
iret
inc
popl
fstl
pop
aas
pusha
nop
lcall
sti
and
inc
mov
pop
pop
jle
cmpsl
push
pop
jp
sub
and
push
sub
cmp
lds
xor
test
inc
or
jl
or
je
in
cmp
popf
mov
lods
rclb
inc
out
pop
gs
pop
push
dec
inc
mov
lret
or
lds
mov
cmp
js
sti
jno
inc
push
push
and
prefetcht2
daa
pop
xor
inc
add
pop
xchg
test
je
subb
movsb
ss
lea
pop
movsl
data16
ret
sarl
xor
push
push
movsl
pop
xlat
or
sub
adc
dec
push
orl
mov
inc
xchg
xchg
and
pop
sub
jge
sahf
icebp
inc
sbbl
mov
mov
lds
add
xstore-rng
cmpsl
pop
adc
scas
popa
lcall
sub
into
adc
mov
sbb
xchg
pop
or
jns
test
bound
jbe
aas
repnz
cmpsl
pop
or
cli
adcb
imul
clc
dec
adc
out
loopne
jmp
cltd
mov
out
mov
push
cmp
cli
in
andl
xchg
lods
js
icebp
popf
lret
mov
push
insb
xchg
lock
add
imul
push
mov
dec
mov
nop
leave
jno
push
popa
shrb
in
movsl
mov
jmp
cmpsl
inc
fistl
add
jge
inc
ja
dec
gs
jbe
shll
adc
xchg
inc
scas
or
jecxz
lret
mov
jge
xchg
addb
addl
scas
dec
add
movsl
or
mov
pop
mov
xchg
insb
pop
fcom
rcr
aad
mov
push
into
cmp
mov
sub
add
loopne
data16
xor
xchg
cmp
mov
jmp
int
jle
cli
push
fsubrl
sbb
sub
mov
aad
dec
loop
loope
add
lds
xor
mov
je
fcmovb
bound
fistpl
or
mov
out
out
adc
xchg
sar
dec
pop
pop
fdivrl
sbb
xor
xor
into
jno
scas
push
mov
sbb
decb
out
mov
mov
xchg
xchg
xchg
lods
push
cmp
pop
jnp
jae
cmp
mov
add
pushf
adc
fwait
dec
shlb
sarb
pop
cli
pop
imul
mov
mov
rcl
addl
push
push
xor
ja
in
and
clc
lahf
cmpsb
mov
adc
push
push
pop
gs
int
int3
sbb
cli
rcrb
add
ljmp
dec
icebp
jecxz
clc
xor
adc
outsl
mov
adc
clc
popa
jb
mov
imul
outsl
cmpsb
and
add
test
or
lods
out
jb
lcall
cmp
dec
jge
test
jne
inc
mov
stos
sub
inc
movsb
pop
negb
and
add
or
xchg
sbb
fmuls
stos
dec
jl
aam
es
adc
xchg
inc
push
decb
mov
movsb
stos
jmp
inc
enter
mull
push
fcoms
enter
ret
and
mov
and
dec
push
mov
inc
xchg
and
mov
inc
add
cmp
arpl
inc
push
mov
outsb
pop
sahf
test
cmpsl
iret
into
dec
sbbl
xor
nop
movsb
dec
xlat
test
shlb
dec
outsl
mov
sarb
test
and
loopne
push
gs
mov
inc
sbb
cmp
xchg
ljmp
mov
jae
bound
inc
outsl
mov
xchg
aam
xchg
mov
xchg
sbb
push
test
mov
bound
sbb
or
dec
roll
out
inc
orb
int
mov
popf
mov
push
adc
int
xchg
imul
stos
arpl
push
fisubs
je
loop
or
fisubs
es
xchg
lds
mov
pusha
ja
sub
cltd
loope
fwait
ret
mov
sarl
jge
scas
sahf
ds
ss
mov
in
mov
xchg
in
push
or
inc
mov
ss
outsb
fsubs
sub
out
les
hlt
sar
outsl
lock
mov
sub
xor
fs
cmp
sbb
adc
mov
mov
mov
or
iret
in
adc
out
les
ror
and
jno
lock
and
mov
push
jecxz
popa
fdivrs
repnz
insl
ss
mov
pop
popf
insb
sub
dec
in
dec
pop
mov
or
jb
inc
paddb
scas
adc
jae
dec
adc
pop
inc
pop
aaa
hlt
jnp
lea
mov
fcompl
xchg
jno
int3
jecxz
pop
xor
and
xlat
and
insb
sub
cmpsl
pop
fnstsw
push
cs
push
pushf
insl
into
in
fwait
mov
out
xchg
add
xchg
aaa
gs
icebp
insb
push
hlt
lret
std
jb
std
dec
pop
lret
inc
mov
jnp
js
in
push
xchg
mov
pop
mov
sub
jmp
push
lds
cmpsb
addr16
add
xor
dec
sbb
lds
mov
into
dec
and
xchg
sarb
xlat
cwtl
enter
dec
mov
div
lcall
sbb
enter
movsl
and
pop
in
mov
cmp
mov
icebp
stos
jnp
jg
xchg
mov
in
push
sub
or
sbb
aaa
push
push
add
call
xlat
out
or
movsl
jge
mov
sti
fsts
or
add
outsb
aam
sbb
lods
mov
daa
jge
inc
push
jg
lret
dec
lds
stc
orl
flds
mov
cmp
inc
hlt
pop
fdivrl
add
push
xchg
xor
pop
pop
hlt
or
dec
inc
ret
ret
mov
push
popa
insb
or
pop
and
fdivs
and
mulb
repz
rcr
in
xor
cmp
shrb
cmp
mov
leave
fbstp
cs
jbe
mov
xchg
jecxz
in
sub
jl
xchg
std
jns
ret
and
sub
ret
mov
mov
test
xchg
cmp
cmpsb
inc
mov
dec
cmc
jp
ret
sub
outsl
jo
mov
push
xchg
sub
lods
mov
push
mov
addr16
push
push
sarb
jb
icebp
push
psraw
ss
cmc
cmpsl
pop
aas
lock
dec
addr16
pop
inc
popf
sub
push
sub
xor
pop
movsl
push
addr16
orl
cld
jp
incl
aad
mov
popf
and
popa
in
sbb
loop
inc
je
aam
push
mov
imul
dec
xchg
stc
xor
and
imul
pop
in
xor
mov
push
inc
lock
rcll
jnp
add
popf
jb
shrb
sbb
sbb
inc
cld
fildll
mov
inc
xchg
xchg
adc
mov
out
adc
lea
mov
sub
iret
lods
mov
or
in
xchg
pushf
cmp
stos
lds
dec
lds
stos
out
mov
imul
push
fnsave
outsl
fucomip
pop
cli
shll
or
jmp
xor
enter
test
enter
fst
shlb
loop,pn
aaa
lret
dec
dec
aas
adcl
mov
jle
pop
mov
dec
push
xchg
mov
and
enter
or
mov
cmpsl
push
jns
dec
dec
push
xlat
cmp
sub
inc
inc
sbb
shl
jecxz
or
cmpsb
lret
and
decb
xchg
mov
push
push
or
out
jmp
sub
cmp
cmp
pop
xchg
stos
mov
sub
scas
flds
popa
adc
les
and
push
sub
add
stos
shlb
lods
push
icebp
and
xor
mov
bound
xor
stc
mov
sti
lahf
or
je
jmp
sarl
les
push
or
pop
pop
cmp
ret
ret
adc
aaa
popf
xlat
cmp
es
cld
mov
add
xchg
dec
sbb
fiaddl
lds
and
call
loop
lods
ja
push
js
sub
push
scas
mov
push
sub
ja
movsl
insl
nop
xchg
pop
movsb
dec
pop
cli
test
dec
out
pop
sbb
insb
pop
push
cld
and
lods
ficompl
and
imull
fs
sbb
add
sbb
std
dec
sub
inc
fidivrs
and
fldl2e
xchg
adc
cmp
add
notl
mov
leave
imul
cmp
scas
xchg
add
nop
enter
mov
dec
push
pop
and
dec
jmp
sbb
pop
subl
jge
loope
pop
outsb
pushf
fisubrs
cmp
hlt
cmp
out
push
mov
or
jl
add
adc
or
adc
popa
inc
jecxz
and
arpl
int3
push
fnsave
jmp
imul
js
jecxz
or
insl
sub
lahf
fs
scas
out
cltd
in
inc
mov
cli
insb
sbb
mov
mov
pop
shl
imul
push
xor
jbe
and
sbb
mov
or
popa
dec
adcb
xor
mov
xchg
mov
dec
mov
xchg
adc
jge
inc
lea
pop
cmp
int
lods
js
mov
xchg
or
mov
lods
insl
adc
mov
in
mov
mov
mov
add
lret
and
push
repnz
repnz
shr
insb
and
sbb
divb
jo
xor
add
dec
mov
scas
jae
jmp
pop
iret
mov
loopne
es
add
outsl
jl
push
add
mov
movsb
jnp
cmp
lahf
mov
imul
xchg
out
repz
dec
out
nop
outsb
gs
pushf
cmpsl
push
add
adcl
push
pop
into
cltd
cs
push
inc
dec
movsb
inc
cmp
or
mov
pushf
add
pop
mov
adc
nop
xorb
mov
add
jmp
pop
mov
loopne
or
adc
in
dec
lret
xor
lcall
push
fisubl
fnstcw
in
push
sub
xor
jp
push
stc
mov
out
cmp
sbb
out
call
xor
lds
pop
leave
loope
pop
dec
inc
jl
sbb
push
loope
jmp
jmp
jp
mov
es
popa
stos
fwait
jl
sysret
or
repnz
push
out
or
xchg
push
mov
jns
jg
ja
out
movsb
inc
lods
push
push
cli
pusha
mov
mov
repz
stc
jmp
mov
pop
movsl
jp
sub
je
sahf
add
sub
push
daa
push
stos
sti
cmp
stc
sbb
dec
idivl
xchg
stos
lock
jb
stos
mov
mov
pop
les
and
push
gs
adc
test
pop
sahf
adc
hlt
inc
cmp
jns
jnp
scas
push
out
pop
scas
sub
cmp
inc
lods
lods
outsl
xchg
dec
inc
xchg
cmpl
sbb
jmp
push
movsb
fsub
int3
add
xlat
repnz
push
iret
inc
push
push
or
imulb
mov
pop
and
hlt
sub
dec
cmp
dec
jl
or
cmpsl
cmp
sbb
out
cmp
insl
or
loop
dec
jns
fisttpl
rclb
jb
xlat
sbb
rcrl
popf
xor
or
xchg
sbb
push
dec
push
xorb
dec
outsl
xor
add
movsb
mov
idiv
jecxz
add
jno
call
int
cmpl
loop
jae
add
jmp
cmp
fstps
scas
ret
fldcw
ret
cmp
icebp
pop
cmp
outsl
in
push
sub
pop
jecxz
leave
pop
imul
adc
dec
sbb
sub
sbb
nop
push
shlb
rorb
jmp
adc
xor
ret
scas
dec
negb
mov
mov
ljmp
mov
ljmp
into
psrad
es
insb
mov
icebp
cmp
xchg
or
les
inc
inc
mov
mov
movsb
test
enter
push
xorl
fstpl
or
int
sub
mov
in
lods
xchg
fistl
dec
and
inc
leave
pusha
loope
mov
mov
dec
and
push
scas
sub
mov
xchg
mov
ja
xor
xchg
mov
push
inc
inc
fs
xchg
add
mov
add
mov
mov
cmp
out
cwtl
push
ja
xchg
daa
mov
sbb
das
pusha
leave
lock
xchg
mov
int3
inc
sub
mov
filds
push
fiadds
xor
jo
mulb
mov
fldt
jmp
lahf
pop
and
out
lock
stos
jae
dec
jge
jbe
push
sub
rol
xor
into
data16
adc
add
clc
inc
push
int
test
and
ss
pop
dec
frstor
imull
jo
pop
fyl2xp1
or
jbe
lcall
xchg
lods
aam
movsb
mov
and
sbb
scas
push
int3
mov
xchg
es
clc
movsl
sti
adc
lea
and
add
pushf
mov
imul
scas
pop
inc
mov
push
or
int
das
sbb
xchg
jecxz
sub
xor
ret
push
pop
pop
out
out
push
xor
mov
negl
sbb
lret
cwtl
jb
aas
mov
mov
xchg
aaa
addr16
outsl
pop
iret
mov
mov
fbstp
add
add
out
mov
mov
inc
je
adc
ficompl
in
popa
pop
inc
imul
movsb
lcall
pop
push
decl
hlt
jecxz
lcall
pop
sub
mov
mov
mov
push
lds
stos
push
scas
add
jne
sbb
add
scas
ds
pushf
sub
mov
pop
push
lahf
jl
sbb
repnz
fisttpl
sbb
out
xchg
sub
fs
int3
cmp
sti
xor
shl
jge
or
call
fisubrl
insb
cvttps2pi
sub
out
sti
jae
das
fstpl
fimuls
dec
es
xchg
cmp
add
mov
cld
shlb
pop
push
aam
sbb
sahf
aam
inc
aad
bound
daa
xchg
mov
jp
lods
arpl
pop
jp
add
lods
xor
xchg
adc
dec
mov
leave
pushf
push
test
push
ret
inc
pop
cld
rorb
jle
push
mov
ror
mov
xchg
out
inc
or
add
loop
movsl
popl
repz
jl
jg
popf
fstpt
xchg
xchg
data16
add
rorl
movsl
pop
dec
mov
adc
je
xchg
sbb
jb
pop
push
loop
leave
loop
imul
mov
fistl
mov
pop
clc
mov
mov
mov
rcl
popf
cmpsl
mov
adc
pop
mov
sbb
adc
or
fmull
ds
aam
xchg
jmp
add
in
jg
inc
cmc
cmp
jno
cmc
xor
push
inc
mov
loopne
xor
add
lahf
lods
in
addr16
fwait
or
pusha
idiv
push
fsubr
idivb
push
xchg
sub
out
sub
aas
mov
ds
repz
daa
fwait
mov
cwtl
jb
aas
and
inc
sub
xchg
aam
xor
jb
mov
xor
mov
pop
sbb
into
faddl
js
fistl
jb
add
mov
dec
and
test
dec
repnz
inc
sbb
popf
scas
cmpsl
insl
xchg
sbb
push
jae
je
jle
mov
pop
adc
stos
hlt
push
xchg
insb
mov
cld
lahf
inc
fdivrp
or
push
aad
mov
sbb
sub
mov
cmp
xor
jnp
popf
int
inc
inc
xchg
pop
movsl
xor
lea
addb
or
dec
xor
add
pop
mov
lret
add
int
fidivrl
lea
pop
in
jmp
cwtl
cmpsb
jle
push
sti
nop
gs
incl
fsubrs
cmp
push
fstps
cmpb
andl
loope
mov
xchg
aaa
sti
orl
shll
lcall
stos
ds
test
jmp
mov
dec
mov
std
xorl
sbb
jbe
outsb
sub
das
cmp
jns
hlt
sarb
sbb
add
movsb
aad
cmc
xchg
cmp
adc
ret
inc
ficomps
xchg
jns
mov
push
mov
push
fnstcw
aad
clc
filds
or
mov
call
pop
mov
cmc
mov
je
sbb
lock
imul
insb
pop
mov
mov
lods
mov
xchg
mov
xchg
cmp
cmpsl
mov
popa
mov
stc
cmp
and
insb
les
out
inc
pop
call
fwait
insb
sti
jge
clc
cmp
mov
stos
inc
mov
daa
pushf
in
xchg
add
cmp
aas
xor
in
pushf
cmovl
mov
inc
es
bnd
stc
jge
mov
pop
test
sub
rorl
std
pusha
hlt
enter
das
cs
outsl
addr16
adc
lds
addl
cltd
jge
and
cmp
mov
sarl
xchg
in
cmpsl
xor
stos
inc
or
cmpsb
repnz
push
push
fcmovnu
int3
ds
dec
mov
in
inc
cmp
fnstsw
insl
js
rcrb
loope
rcrl
movsl
pop
sti
jmp
dec
xor
xchg
test
jnp
es
xlat
rcll
imul
mov
sti
mov
popa
sbb
push
xor
dec
or
out
leave
sbb
or
fadds
movsl
movsl
sub
lods
out
sbb
mov
and
out
pop
ret
mov
addl
test
jbe
inc
enter
sub
xchg
inc
mov
addr16
mov
imul
sub
pushf
cmp
stc
mov
inc
push
mov
jb
lcall
popa
push
adcl
out
lea
es
push
out
sbb
js
out
les
in
xor
and
bound
add
cmp
add
dec
mul
jns
les
hlt
test
out
mov
sub
dec
icebp
sub
popa
xchg
inc
cmp
in
out
popa
jg
cltd
pop
int
and
sbb
cltd
std
sti
jmp
fwait
mov
mov
jns
movsb
xchg
clc
push
stos
mov
mov
jno
or
rcr
test
jle
or
sub
inc
xor
push
jle
cltd
pusha
inc
and
add
in
jge
push
inc
cmpsl
shlb
aam
shl
insl
insb
jne
js
dec
xor
mov
orl
shll
cmp
mov
out
jns
jbe
push
cld
adc
stos
mov
jne
mov
push
incb
sbb
sub
fmuls
adc
sub
mov
leave
aam
pop
mov
outsl
push
xchg
xor
popf
push
xor
inc
out
scas
outsb
sti
inc
int
cs
idivl
push
adc
mov
mov
lods
stos
jo
cwtl
and
mov
xor
outsl
je
mov
mov
int3
dec
dec
push
ljmp
cmc
dec
enter
rcll
mov
or
mov
pushf
and
cwtl
dec
enter
ret
mov
movsb
subl
lock
test
cmp
mov
faddp
sub
ret
lret
repnz
rcrl
mov
pop
mov
inc
in
xchg
inc
mov
jge
ficoml
xor
mov
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
inc
jns
ds
or
notl
inc
jns
cmp
or
jmp
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
ljmp
or
jne
mov
es
xor
imul
and
pop
mov
jp
xchg
cmp
outsl
push
or
lret
insb
ffree
call
inc
jns
cmp
or
mov
dec
cmp
test
dec
inc
jnp
or
inc
sbb
cmpl
daa
test
inc
dec
and
push
xor
inc
or
xlat
jae
mov
ja
add
adc
out
js
fstpl
cli
mov
sub
mov
mov
add
pop
ja
jae
ret
ljmp
dec
jns
cmp
or
dec
adc
js
cmp
push
dec
dec
adc
ljmp
pop
dec
dec
incb
ljmp
push
dec
repnz
cli
cmp
or
push
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
xchg
dec
jns
ds
or
dec
adc
jns
sub
or
pop
adc
ljmp
push
dec
dec
adc
ljmp
pop
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
popa
cmp
or
cwtl
loop
push
pop
dec
adc
out
cmp
or
jmp
inc
or
cmp
or
popa
pusha
or
mov
sbb
mov
in
in
dec
dec
adc
ljmp
push
dec
scas
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
push
dec
dec
adc
ljmp
jg
dec
add
rcrb
into
enter
xchg
stc
mov
insl
mov
sub
fidivrl
imul
outsb
sub
mov
jge
iret
push
enter
cs
test
imul
out
xchg
rolb
aad
mov
lret
xchg
or
xor
push
jae
mov
sbb
das
pop
stc
push
enter
adc
imul
outsb
into
or
pop
sbb
cltd
mov
mov
ds
loopne
and
add
pop
repz
xchg
fimuls
mov
mov
mov
cs
and
mov
xor
pop
in
out
mov
dec
ljmp
xchg
jae
ja
mov
sahf
add
sbb
push
inc
mov
fs
mov
arpl
or
test
push
imul
fldl
mov
pop
ret
mov
jnp
in
call
pop
subl
subl
ret
mov
rolb
pop
mov
fs
add
nop
std
dec
sub
push
nopl
cmc
sbb
ficompl
pushf
cmp
sub
jmp
mov
fildll
mov
popa
mov
aam
sbb
es
sub
mov
cmp
fs
xor
mov
mov
add
pop
shl
xor
cli
mov
ficomps
dec
lods
mov
decl
pop
and
adc
inc
cmc
mov
xchg
jmp
cmp
popl
cltd
inc
movsb
cld
call
adc
pop
rep
int
and
mov
negl
int
in
push
call
push
inc
push
push
in
xchg
test
insl
inc
into
sbb
lods
movsl
mov
sub
imul
jg
mov
dec
bound
fwait
bound
cmp
mov
lds
test
adc
jno
jecxz
xor
mov
mov
data16
mov
add
lahf
push
daa
sub
aad
ljmp
pop
xchg
pop
lods
mov
neg
mov
movsb
push
xor
xor
mov
rcll
mov
push
push
and
movsb
icebp
push
inc
das
pop
and
in
daa
daa
inc
dec
push
test
hlt
and
jo
sbb
lahf
lock
push
icebp
dec
xchg
xchg
pushf
mov
cmp
mov
icebp
jecxz
aam
cmp
mov
pop
fs
movsb
mov
lea
push
stos
fimuls
mov
fs
in
or
mov
mov
adc
dec
sbb
sbb
jmp
adcl
jmp
sti
sbb
loop
xor
mov
xchg
shr
rcll
push
mov
sub
std
insb
into
movsb
lods
mov
adc
dec
mov
xchg
es
adc
xlat
repz
nop
dec
push
jecxz
sarb
out
pop
pushf
lds
pusha
repnz
lock
jns
add
mov
jne
out
xor
pop
pop
movsl
insl
insb
xor
ja
enter
push
jns
mov
inc
sub
fsts
test
insl
push
iret
andl
in
dec
push
jnp
nop
stc
xchg
clc
push
mov
imul
adc
cmp
cltd
add
mov
xor
adc
dec
and
ljmp
add
and
dec
mov
fnstcw
shr
lods
pop
jmp
mov
xor
bound
push
cs
ror
push
scas
xor
pop
jl
scas
ja
sbb
adc
out
scas
mov
cmp
inc
jns
sar
dec
std
inc
add
clc
mov
jnp
push
mov
popa
lods
and
xchg
pop
repz
or
dec
pmulhw
sbb
dec
int3
loope
pop
cmp
mov
or
pop
jne
jo
loop
int3
push
or
cmc
lds
icebp
sub
inc
push
xor
sti
test
popa
insl
mov
mulb
xchg
lret
sub
leave
push
cmp
icebp
out
cmp
rcl
aad
rcrb
rcr
push
push
sbb
fs
inc
test
adc
test
xchg
sbb
fidivl
add
push
js
bound
es
jge
cmp
pop
stos
jg
repz
int
rclb
pop
push
pop
push
push
mov
cmp
or
push
daa
int3
hlt
mov
outsb
add
pop
ret
mov
pop
lods
sub
add
pop
adc
add
inc
cmpsb
stos
mov
and
xlat
lret
movsl
ret
mov
lret
in
iret
and
rorb
shr
xor
aaa
imul
mov
pusha
jp
rol
mov
sbb
jo
mov
sahf
adc
loopne
shrl
sahf
cmpsb
stos
sar
mov
stc
push
jo
shll
xchg
cld
das
or
inc
pop
push
cld
sbb
test
mov
stos
push
cltd
or
push
xor
xor
int3
xchg
out
mulb
mov
rclb
add
inc
fidivrl
jge
mov
jne
hlt
xchg
dec
mov
dec
je
pop
jmp
fdivrl
es
cltd
in
fisubs
push
mul
lcall
out
insl
fisttpl
xor
enter
mov
jo
pop
or
sub
js
sub
sbb
jns
and
ljmp
mov
jmp
punpckhdq
jecxz
push
inc
cmp
imul
cmp
xor
out
pop
push
mov
inc
pop
rcrl
stc
pop
mov
decl
and
xchg
fisttps
cmp
mov
lea
lcall
movsl
jns
ret
subb
cwtl
add
outsl
idivl
lret
xchg
add
cmp
ds
popf
mov
bound
and
adcb
mov
cli
dec
dec
mov
cs
stc
cmp
mov
adcb
or
leave
push
fcompl
push
hlt
ffreep
jmp
inc
cmp
xlat
loop
xchg
inc
imul
jp
and
inc
mov
decb
jbe
sub
cmp
js
inc
lods
adc
test
and
lods
les
lock
cmpsl
testb
jne
gs
mov
test
jo
dec
addr16
pop
add
and
js
jl
cmpsb
mov
out
jecxz
sub
jae
jmp
mov
push
repz
out
div
xchg
sahf
inc
dec
mov
cli
cmp
es
jg
int
mov
and
test
cmp
jb
ja
fcmove
mov
sub
pop
jle
lock
jno
mov
cwtl
lods
ret
sub
xorb
inc
fcmovbe
dec
push
loope
cmc
push
xor
test
int3
xchg
daa
mov
push
jb
push
fs
jns
fcompl
fdivl
pushf
add
inc
dec
mov
adc
pusha
cmp
int
xchg
adc
dec
jg
pop
jl
fisttpl
insl
cwtl
clc
out
mov
ljmp
stc
jl
popa
sub
std
mov
inc
xchg
jb
mov
lock
sub
xchg
das
shlb
adc
sub
aas
lock
push
ljmp
and
mov
push
push
fisubl
les
mov
stos
cmp
repz
push
loopne
mov
sub
pop
int3
into
jb
dec
and
mov
or
lds
test
int3
inc
push
enter
pop
lea
sub
jae
icebp
addr16
hlt
dec
jns
mov
int
jo
jbe
rclb
mov
sbb
xchg
lahf
adc
js
mov
xor
pop
mov
loopne
std
dec
cmpsb
xchg
inc
daa
test
test
test
out
mov
push
inc
arpl
push
cmp
test
mov
test
add
testl
mov
subb
or
popf
mov
fbstp
hlt
xor
lret
aas
dec
push
dec
mov
cmp
push
aam
mov
subps
cmp
scas
cmp
pop
mov
xor
or
sub
gs
or
pusha
inc
jl
dec
stc
cmp
push
jge
in
inc
les
inc
and
mov
scas
roll
and
adcl
mov
pop
and
das
adc
jae
or
push
dec
sbb
mov
enter
jg
dec
mov
push
pop
movsl
cld
cltd
loopne
cmc
cmp
sub
dec
nop
xorb
dec
sub
pop
repz
push
push
inc
imul
push
dec
pop
js
mov
iret
test
insl
pop
push
xchg
dec
jbe
fbstp
test
lahf
stos
in
inc
xchg
dec
mov
bound
std
std
fadd
push
pop
lret
dec
sub
push
add
inc
mov
mov
cmpsb
js
imul
aas
cmp
outsb
addr16
out
sub
dec
and
stos
test
dec
into
adc
xor
out
imul
xchg
mov
push
in
mov
cmc
aam
inc
push
lods
push
out
out
sbb
addr16
das
cmpb
mov
mov
mov
fs
mov
scas
push
imul
ret
std
imul
inc
jno
ds
sbb
mov
movsl
mov
mov
and
inc
fwait
xchg
xchg
jp
in
iret
inc
mov
dec
mov
dec
lock
pop
mov
sbb
gs
xor
cmp
mov
jp
scas
mov
mov
nop
jp
faddp
push
jno
dec
sub
jg
mov
mov
xor
push
les
aaa
pop
mov
cmp
fcmovnu
std
mov
mov
and
movsb
jmp
rclb
decl
mov
pop
jle
sbb
xchg
pop
test
push
icebp
mov
push
xor
xor
adc
jno
lret
pop
add
mov
lds
dec
sbbb
in
bound
mov
and
and
cmpsb
mov
mov
cli
cmp
push
pop
arpl
outsb
test
loopne
pop
repnz
int
jle
mov
xor
or
js
cmp
mov
sbb
test
fistps
imul
test
fdivrl
faddp
loopne
mov
jmp
inc
mov
cld
nop
pop
test
pop
or
or
sarl
mov
insb
insb
and
lods
sbb
add
sbbl
sbb
add
xor
sbb
jmp
dec
add
mov
out
bswap
push
jnp
sbb
pop
test
out
pop
clc
pop
arpl
adc
xchg
ds
push
jecxz
stos
lea
sbb
push
ret
jecxz
xor
inc
add
lods
fiaddl
dec
fsubl
stos
adc
call
pusha
insb
push
push
sbb
inc
mov
jecxz
daa
mov
arpl
xlat
dec
mov
jg
ljmp
mov
cmpsb
hlt
or
mov
ret
lock
test
test
loopne
xor
ja
les
xor
mov
and
inc
mov
lock
adc
leave
sub
jge
dec
sbbl
add
aas
fbld
xor
sub
cmp
inc
and
mov
lcall
lea
popa
or
mov
xchg
call
add
roll
cmp
jge
cli
pop
add
lods
out
insl
test
pop
sbb
jbe
repz
jno
xorb
sbbb
xchg
sub
xor
adc
push
aad
imul
push
shl
mov
les
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
