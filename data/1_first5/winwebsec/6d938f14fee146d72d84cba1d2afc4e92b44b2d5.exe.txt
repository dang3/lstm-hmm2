mulb
sub
sbb
xor
outsb
les
jle
push
push
xchg
adc
mov
mov
test
in
cmpsb
push
test
xorb
push
push
cmp
aam
cwtl
xchg
cmp
mov
rcrl
jg
adc
hlt
aam
loop
bound
mov
xchg
jmp
cmp
cmpsl
pop
dec
sbb
inc
xchg
jnp
sbb
pop
pop
shlb
jle
in
xor
jmp
sub
mov
pop
cmp
push
lcall
stc
or
add
adc
cmp
dec
insb
les
incl
lods
cmp
cmp
inc
dec
and
pop
mov
push
out
loop
fnsave
addr16
mov
das
cmp
mov
sub
push
sti
cmp
or
xchg
stc
xchg
and
xor
es
aaa
cmpl
lea
je
sti
sbb
cmp
loopne
and
mov
mov
mov
push
mov
sbb
mov
pop
scas
pushf
xor
push
sub
adc
stos
lea
movsl
xorb
mov
or
fisubrl
and
jl
fucomi
cmp
pushf
mov
adc
push
in
fisubrs
push
sub
sub
xchg
lahf
scas
inc
cmp
xor
inc
mov
cld
xor
fcoml
or
adcl
ss
sbb
jle
stos
imul
in
lcall
mov
out
data16
xorl
inc
mov
arpl
xlat
pop
sti
or
fs
pop
push
int
xor
adc
sub
mov
stos
xchg
sbb
dec
push
cld
xchg
push
xor
jge
in
ljmp
sbb
or
nop
push
out
mov
dec
fiaddl
lea
mov
dec
cmp
bound
and
sahf
pop
lock
adc
inc
mov
dec
in
lods
dec
ficompl
cmpsl
xchg
jp
xchg
inc
inc
scas
mov
out
ffree
sahf
es
dec
or
sarb
mov
inc
pop
shlb
xchg
sub
push
mov
das
hlt
push
scas
sbb
and
mov
pop
jae
test
movsl
cld
dec
dec
in
lret
push
mov
mov
mov
out
xor
insl
add
push
movsb
shlb
xor
shl
mov
icebp
mov
jo
jp
sbb
out
xchg
dec
pop
lods
das
sbb
fadds
jmp
jp
mov
jle
addr16
shll
les
pop
push
mov
mov
mov
in
pushf
pop
pop
loop
pushf
lret
sahf
std
cmp
in
lods
jmp
mov
fs
or
rcll
sub
or
adc
sbb
jp
mov
mov
test
pop
xlat
sub
push
lods
jl
push
stos
sub
fadds
sar
jnp
js
xor
daa
mov
ljmp
das
arpl
mov
repz
xor
lods
loop
pop
sub
cmp
test
fistl
mov
xchg
mov
pop
sub
mov
xchg
jp
adc
nop
int
lahf
cmpsl
xor
xchg
xor
lcall
leave
pop
sti
push
lods
adc
iret
xchg
push
mov
cmpsb
and
xor
sub
inc
pop
dec
sbbl
mov
add
dec
mov
pop
stc
movsl
cmp
jg
jbe
adc
jle
cwtl
or
test
xchg
xor
sub
jb
push
roll
fcompl
jbe
jg
inc
movsl
mov
cmp
pop
jl
sarl
movq
adc
pop
addr16
xor
mov
add
repnz
mov
cmp
inc
outsb
xchg
nop
shlb
je
push
inc
sbb
shll
jb
sbb
jp
push
je
movsb
jae
imul
inc
fwait
shr
jo
movsb
cmp
sub
mov
or
mov
jg
push
fmulp
rclb
push
aam
arpl
outsl
pop
and
fwait
dec
lods
jnp
aas
add
stc
lods
mov
inc
es
and
dec
stos
iret
rclb
push
notb
bound
sti
lods
cld
mov
xchg
in
cmp
fistpll
call
cmp
mov
adc
addr16
jae
fnstsw
enter
inc
js
cwtl
shll
stos
adc
test
and
sub
daa
scas
add
xchg
push
inc
test
push
les
or
leave
jl
fnstenv
and
das
push
mov
scas
faddl
mulb
xchg
mov
mov
cmpb
jbe
push
test
sbb
sbb
aas
mov
pop
and
sub
push
jne
cmpsb
cwtl
xor
xchg
clc
movsl
mov
loop
fsubl
mov
iret
xchg
bound
mov
outsl
mov
adc
xlat
sbb
ds
jle
and
into
jg
pop
push
inc
adc
jne
jnp
flds
push
cwtl
iret
lea
inc
jg
adc
rclb
and
repnz
or
xchg
stc
add
int3
mov
push
cmp
test
jo
stos
rorb
cmpsb
in
pop
jns
adc
lahf
jmp
mov
std
lods
hlt
lods
out
aad
scas
mov
jmp
jge
adc
push
bnd
xchg
fstp
test
out
std
in
fcoms
sbbl
jl
out
cwtl
fs
jl
in
es
stc
lods
fsts
sahf
mov
cmpsl
mov
sbb
mov
or
push
inc
fbstp
dec
push
jae
add
mov
xor
jae
sbb
xchg
test
mov
ds
push
cmpsb
bound
nop
xor
and
xor
sbb
aad
or
lret
adc
incl
sbbb
fisubs
testb
and
jno
jge
dec
sbb
dec
outsl
and
iret
or
push
pushf
jno
ljmp
rorb
lret
movsb
int
add
loop
daa
int
imul
js
das
push
or
jp
in
inc
cmp
ljmp
daa
mov
cmp
adc
imul
lods
shll
and
outsb
xor
inc
mov
sbb
pushf
lahf
push
adc
dec
cmpsb
xor
xlat
push
mov
int3
sbb
aam
mov
fstpt
cmpsb
into
sbb
iret
vcvtsi2ssl
pop
mov
outsl
loop
inc
flds
insb
add
adc
push
add
pop
mov
ljmp
repz
xchg
xor
lods
imul
push
ficomps
or
adc
repnz
mov
inc
mov
ljmp
sbb
and
mov
and
mov
mov
pop
or
xchg
inc
in
in
sbb
cmc
cmp
movsl
outsb
mov
push
cmc
es
daa
adc
xchg
push
inc
xchg
outsl
xor
mov
or
cmp
shll
dec
in
pop
dec
cmpsb
stos
xor
pop
mov
cmp
mov
mov
sub
mov
inc
repz
mov
push
rcll
aaa
std
ds
inc
data16
sar
fucomi
or
iret
cld
ds
jge
xor
cmp
xchg
mov
bound
test
add
jge
loope
in
ret
inc
inc
ds
and
andl
fiaddl
dec
and
std
add
test
sub
jbe
jnp
xchg
adc
imul
mov
jge
cmp
outsl
pop
add
int
inc
cmpsl
add
hlt
cld
adc
clc
out
inc
je
out
cltd
sub
mov
mov
cmp
dec
sbb
or
sti
push
roll
rcrl
cwtl
loop
outsl
rol
add
pusha
aas
xchg
std
sub
sub
xchg
mov
jo
xchg
jo
cmp
sub
adc
dec
jle
cwtl
insl
rcl
sub
mov
test
cmp
ss
or
mov
adc
push
push
adc
fistl
int3
inc
inc
int
push
mov
xor
fimuls
jecxz
adc
mov
cmpsl
add
popa
or
int
outsb
in
fcmovnbe
dec
jnp
mov
das
mov
out
jno
faddl
test
xchg
out
push
aas
sbb
stos
mov
pushf
fwait
dec
pushf
int
xchg
shr
cld
les
js
mov
jl
fmull
fimuls
pop
cmp
push
adc
mov
lock
mov
hlt
repnz
int3
cmp
cmpsb
xor
adc
sbb
lcall
add
daa
loopne
scas
sar
sbb
test
lret
or
orb
and
add
sbb
jp
scas
mov
out
sub
cmp
mov
push
scas
outsb
bound
movb
fwait
rcll
into
sub
adc
xor
scas
pop
test
add
sub
pop
inc
lret
les
lock
ss
in
jecxz
adc
lret
and
iret
mull
push
or
and
xchg
xchg
ljmp
stos
scas
popa
lret
pop
shrl
cltd
insb
cmp
xor
fisubrs
repnz
andb
cmc
aas
ret
sub
stos
lods
out
call
pushf
scas
push
std
jno
ljmp
iret
adc
cwtl
aam
pop
push
adc
cli
stc
dec
dec
fs
nop
hlt
pop
rol
dec
hlt
jbe
jbe
mov
dec
mov
xchg
enter
and
fcomps
scas
shrl
cld
mov
or
inc
push
cmp
fstpt
xchg
sub
mov
lock
push
ss
mov
sbb
cmpsl
add
mov
mov
adc
or
aam
xor
daa
pusha
repz
inc
cmp
xor
pop
sub
add
mov
repnz
pop
add
out
std
hlt
pop
cli
fucomip
xor
dec
gs
ficoms
popa
adc
mov
lods
sbb
aad
mov
xchg
fbstp
xchg
mov
push
jns
imul
xchg
jbe
dec
pop
pop
mov
mov
ret
xlat
cwtl
popa
fadd
sarl
inc
lahf
inc
pop
daa
out
leave
es
scas
xor
out
add
scas
sub
jp
je
aad
xor
xor
lret
shll
out
and
inc
and
lock
mov
sbb
je
pop
or
stos
andl
rcrl
push
vpackssdw
mov
mov
xchg
push
cmp
in
jle
test
mov
les
outsb
mov
pusha
jbe
cmpsb
add
sbb
cmp
iret
xchg
mov
add
iret
mov
mov
notl
mov
cmpsb
stos
movsl
xchg
insb
push
loopne
dec
aaa
out
mov
mov
jne
or
rcr
sbb
xor
subb
jno
loopne
icebp
mov
adc
cmp
aaa
mov
xchg
mov
andb
rorl
les
push
sub
pop
orb
leave
xor
test
xchg
stos
dec
mov
xor
sub
push
decl
xchg
mov
test
notb
cmp
xor
push
ljmp
mov
mov
fdivl
fildll
adc
xor
lds
imul
orb
xor
sarl
loope
fwait
adc
mov
aas
cs
pushf
pop
inc
cmp
mov
sub
add
out
aad
xor
ret
loopne
xor
xchg
xor
jnp
fistps
xchg
jo
aam
mov
lds
sbb
je
add
sbb
sbb
shr
add
xor
push
push
or
faddl
add
pop
sub
lods
ss
ficomps
sbb
rolb
cmp
cmp
inc
xlat
mov
das
fcomi
jns
data16
mov
fucomp
fisubl
adc
ljmp
ljmp
sbb
bound
push
sbb
lea
addb
or
mov
inc
or
inc
or
shlb
outsl
push
shlb
push
sub
ja
or
leave
movsb
in
adc
stos
push
test
xor
repz
ja
push
aam
and
mov
push
add
and
mov
xor
and
minps
outsb
int3
mov
xchg
mov
arpl
dec
jecxz
xchg
es
jge
mov
or
shll
jns
repnz
ret
loope
jae
adc
xchg
xchg
iret
sub
jae
rclb
movsb
adc
jae
scas
and
cltd
mov
add
mov
jle
xor
mov
out
mov
aam
add
cmpsl
aas
sub
scas
pop
add
jb
aaa
aad
je
stos
ss
mov
dec
mov
jp
mov
adc
out
inc
sahf
imul
pop
fwait
in
popa
frndint
and
xchg
hlt
xchg
arpl
arpl
mov
pushf
popf
or
add
pop
sub
push
xlat
cmp
fldt
xor
sub
cltd
add
cs
xor
stos
pop
dec
cmp
shrl
cmp
and
sti
mov
sub
jne
setae
mov
pop
js
test
stc
scas
push
cltd
push
mov
sti
or
xchg
pop
pusha
dec
iret
mov
mov
js
pop
push
xchg
push
dec
mov
push
mov
or
mov
mov
fdivrl
leave
lret
push
movsl
cwtl
push
add
ja
xor
icebp
int3
out
int3
pop
mov
pop
stos
jmp
push
jnp
jp
adc
cli
scas
and
mov
push
ror
sbb
ret
sub
xchg
mov
sub
or
adc
dec
test
jp
jl
cmp
sub
out
mov
ror
scas
es
and
outsl
cmpl
jle
add
and
mov
mov
mov
imul
adc
orl
into
lret
push
jp
push
and
fists
mov
adc
adc
int
xchg
sahf
in
add
test
add
inc
movsb
fscale
stos
mov
jl
stos
push
mov
mov
adc
addr16
xchg
imul
scas
or
fimuls
sbb
push
pop
stc
mov
mov
dec
jb
jecxz
cmp
push
mov
ja
movsb
xchg
pop
negb
mov
ss
mov
pushf
leave
pop
mov
cld
sub
pop
mov
lds
inc
fs
or
je
pop
dec
addl
pop
push
pop
enter
pop
mov
stos
fildl
cld
jp
arpl
push
popl
sbb
stos
pop
test
loopne
sub
out
jecxz
mov
iret
push
push
mov
mov
rcll
fcmovu
cmpsb
pusha
jb
js
test
jae
fistps
gs
mov
std
mov
hlt
aam
mov
fwait
xchg
lods
js
mov
push
test
rclb
popa
pop
mov
dec
sub
pop
xor
cwtl
aaa
xor
clc
push
bound
xlat
leave
cmpsb
repz
mov
and
fdivrs
scas
movsb
mov
nop
and
mov
shrl
jecxz
aas
push
jecxz
test
sbb
cld
push
cmp
mov
mov
jecxz
add
sub
sbb
pop
nop
rorb
imull
add
fiaddl
mov
shl
inc
shl
lods
test
lahf
stos
loop
sbb
cmpb
mov
test
dec
push
iret
movsb
lea
pop
fwait
pop
jns
movsl
or
in
jge
sbb
inc
lahf
sbb
cltd
mov
pop
jg
sub
popf
cmp
lret
pop
negl
stc
cmp
mov
sub
mov
arpl
mov
fadds
ljmp
repnz
nop
test
enter
mov
xchg
jo
mov
mov
mov
pop
int
jp
call
lret
bnd
shll
cmp
inc
popa
lcall
ljmp
mov
or
ret
sbb
push
fmuls
test
or
mov
hlt
pop
mov
push
mov
push
push
sbb
mov
jno
in
sub
add
shl
loopne
xor
pop
cmp
daa
xor
imul
adc
sub
push
outsb
cwtl
mov
rolb
xor
ss
xor
sub
shlb
xorl
adcl
jnp
xor
movsb
in
loopne
in
ficompl
push
push
cltd
imul
adc
mov
sbb
je
lds
scas
inc
adc
add
and
push
arpl
shlb
dec
pop
add
int
cmp
and
mov
leave
cltd
sub
dec
ror
mov
test
mov
nop
xor
jne
ljmp
int3
pop
outsl
in
xor
mov
xchg
add
or
lret
and
fmull
movsb
mov
push
arpl
xor
add
imul
inc
nop
fnstcw
jp
cwtl
pop
pop
xchg
mov
mov
xchg
and
inc
cs
out
clc
mov
jecxz
insl
and
mov
ja
pop
in
cmc
push
jns
daa
lods
mov
repz
sahf
enter
mov
sbb
hlt
cld
je
lods
aam
mov
cltd
dec
mov
pop
and
lods
mov
inc
fldt
xor
or
mov
lcall
add
xchg
adc
sub
es
loopne
repz
sbb
inc
imull
loope
jne
push
arpl
fimull
mov
sbb
jl
add
pop
or
aam
xchg
loope
add
push
pop
jp
mov
jne
mov
pop
and
ja
push
jge
orb
lods
iretw
inc
mov
int3
das
jp
inc
xchg
adc
inc
sbb
addr16
lret
add
jecxz
xor
push
cmp
cmpb
sbb
movsl
sbb
sbb
mov
sbb
aad
mov
in
cmc
push
std
clc
mov
xchg
enter
cmpsb
lock
jg
dec
add
xor
lods
pop
and
mov
cmp
hlt
cwtl
xchg
cmp
loopne
in
bound
cli
in
push
lods
cs
add
inc
js
enter
repz
enter
inc
shrl
mov
cli
mov
test
and
pushf
adc
and
movsb
movsl
movsl
inc
dec
mov
sub
xor
imul
in
add
cld
jge
imul
push
jae
test
subb
dec
dec
es
pop
jmp
je
mov
rol
or
push
jne
inc
mov
mov
sbb
mov
gs
sbb
adc
adc
sub
dec
sub
sbbb
ja
pop
jl
xchg
jnp
mov
sahf
pop
shl
push
push
and
sub
nop
fwait
sbb
xchg
fmulp
insl
incb
mov
stos
loope
jl
inc
and
adc
pop
xchg
adc
push
fs
mov
mov
outsb
sub
repz
add
fbld
sbb
sbb
test
sahf
ja
ja
out
mov
mov
pop
cmp
call
jne
popf
sarl
mov
push
daa
or
cli
cmpsl
lods
add
xchg
mov
cmp
mov
fdivs
inc
lahf
std
outsb
les
and
fxtract
and
add
xor
sarl
dec
sub
push
or
xchg
inc
push
mov
push
in
testb
aad
les
dec
add
mov
add
adc
test
mov
jmp
in
cli
cmp
xchg
pop
in
push
xor
loopne
sub
mov
dec
push
test
ljmp
out
jno
xchg
sbb
stos
fcompl
lock
in
pop
cmpl
sbb
fstps
push
ret
xchg
dec
jp
xchg
stc
jge
mov
mov
into
mov
push
int
idivb
stos
add
jp
push
jecxz
lret
pop
jmp
jl
xchg
push
and
push
hlt
mov
pop
dec
rclb
jp
mov
je
dec
dec
test
cmc
gs
jae
jbe
lock
fcompl
out
fdivr
and
inc
xor
stos
xor
fiadds
insb
jl
ss
dec
lcall
adc
adc
xor
adc
cmp
lock
nop
mov
call
xor
lea
or
bound
cmpsl
sbb
stos
jno
push
cmp
fwait
mov
out
add
mov
lea
or
pusha
js
shlb
fsubrs
dec
or
data16
xor
fnsave
xchg
inc
loop
sub
sub
pushf
jl
push
pop
imulb
gs
inc
leave
jg
fmuls
popf
pop
push
fistpll
mov
clc
dec
mov
pop
daa
inc
cmpsb
dec
sbbl
movsb
cld
and
push
cwtl
sbb
clc
push
adc
add
test
mov
mov
aam
push
mov
jbe
in
nop
mov
dec
cmp
mov
mov
nop
cmp
adc
cmpsb
jbe
or
fnstenv
dec
mov
fldt
mov
jnp
fstl
sbb
mov
ss
int3
inc
sbb
in
and
rcrl
push
adc
sarl
mov
and
je
mov
cmp
js
cli
jbe
mov
cwtl
sbb
cmc
shrl
jg
sub
sahf
bound
pop
test
inc
out
sub
sti
or
sub
fcompl
stos
clc
dec
sbb
lret
lcall
cmpsb
or
stos
add
cmpb
cmovg
dec
xor
gs
mov
leave
xchg
ret
lret
add
daa
ret
in
and
xor
pop
imulb
jl
push
sub
aam
mov
pop
test
xchg
std
adcb
test
sbb
or
scas
pop
jae
xchg
push
push
cmp
xchg
mov
sub
xchg
xlat
or
mov
mov
push
mov
aam
addl
or
cwtl
xor
ljmp
sahf
push
inc
stos
cmp
add
adc
rclb
cmp
into
mov
fs
scas
in
xchg
dec
sahf
add
pop
push
call
mov
addr16
pop
mov
xor
enter
sub
mov
jns
mov
and
in
lods
cmp
notl
cmp
xor
jl
dec
aad
adc
mov
fdivrl
pop
xor
lods
dec
cmpsb
sub
ret
add
xor
call
test
nop
sub
jbe
clc
push
cmp
sarl
push
mov
out
notl
test
add
loopne
sbb
cltd
add
xchg
inc
loope
mov
adc
pop
call
popa
cmp
dec
call
mov
in
lret
xchg
das
out
ret
fdivs
mov
jecxz
stc
and
mov
xchg
pop
aad
dec
lea
data16
repz
data16
xchg
inc
mov
xchg
lahf
sarb
mov
cmp
add
mov
adc
cmp
cmovp
enter
mov
sbb
and
inc
scas
imul
and
mov
sbb
mov
sub
sbb
dec
fs
lahf
dec
mov
inc
jae
add
dec
popa
ffreep
pop
jmp
jo
dec
fs
add
movsb
pop
xchg
or
mov
out
lret
in
in
sub
and
daa
mov
mov
sti
sbb
pop
mov
pop
xchg
or
in
add
sbb
push
lock
push
adc
loop
sub
xor
xchg
push
adc
xchg
fidivrs
lahf
xlat
out
xchg
andl
cmp
pop
test
lcall
mov
cwtl
xor
cmp
mov
inc
in
mov
fisubs
add
push
aad
push
movsb
sub
scas
ffreep
sbb
push
rcll
shlb
test
in
dec
movsb
sbb
cmc
cmp
inc
in
test
mov
loope
std
scas
and
add
imul
push
outsl
cltd
cmpsb
adc
jge
pop
xorl
cmp
or
ds
test
fadds
stos
ret
jmp
jle
cwtl
mov
cli
push
lods
mov
xchg
adc
inc
mov
insl
push
mov
repnz
ds
loopne
inc
push
mov
imul
sbb
adc
fbld
fsub
xlat
or
cmpsl
data16
mov
addr16
idiv
js
mov
arpl
mov
xor
js
xchg
jle
xor
xor
xor
test
dec
sahf
sbb
adc
jb
cld
xor
push
cmp
dec
jb
repz
sub
adc
or
xchg
xor
or
js
or
xchg
xchg
cmpsl
aam
pop
pop
jo
cli
ljmp
push
jno
aad
add
out
dec
lret
xchg
dec
pop
mov
fdivrs
add
movsb
mov
rorb
jle
outsl
enter
aaa
add
jle
push
xchg
mov
cmp
daa
icebp
dec
insb
addr16
mov
mov
test
mov
mov
pop
jnp
pop
data16
cmpsl
lock
repnz
out
push
orl
loop
xor
mov
inc
xor
stos
data16
jl
lea
je
in
inc
jl
ja
stos
js
aad
xchg
lock
xor
and
out
lahf
push
xchg
jmp
test
ja
out
sub
dec
pop
push
mov
push
adc
adc
out
stos
or
jg
add
clc
push
je
mov
jmp
jno
pop
pop
lcall
fstl
cmpsb
lret
sti
pop
inc
sti
inc
jo
jmp
ljmp
aad
jns
mov
mov
inc
movsl
arpl
dec
xor
call
mov
es
add
call
inc
and
mov
loopne
addr16
and
xor
out
mov
add
les
mov
insb
outsl
lods
mov
stos
or
testb
mov
mov
das
out
push
jne
jne
sbb
push
push
adc
insb
stos
pop
dec
pop
outsb
jmp
sbb
daa
insb
dec
sahf
jae
popa
mov
clc
add
mov
aad
mov
inc
and
dec
pop
out
and
int3
sti
jne
into
mov
xchg
enter
xchg
stc
xchg
out
inc
dec
psubusw
into
imul
sbb
movsl
out
cmpsb
fdivs
test
sub
xchg
jae
ret
mov
xchg
insb
mov
cmp
sub
imul
es
jle
call
mov
pop
insb
mov
xchg
fimull
add
add
ror
imul
push
aas
sti
test
add
mull
lock
push
mov
push
or
mov
cmpsb
cld
inc
outsb
mov
push
sub
inc
fmul
sar
lods
in
and
sbb
sub
sub
or
cs
add
jae
fimull
divb
cmp
cmp
xchg
sbb
adcl
dec
mov
pop
sub
iret
dec
mov
jno
adc
in
arpl
xchg
repz
mov
push
mov
scas
fwait
sti
jo
pop
sbb
jg
enter
fidivrs
loop
ds
mov
fisttps
dec
mov
cmp
outsb
jmp
or
adc
inc
and
call
jge
sbb
and
xor
and
push
and
outsb
repz
xchg
xchg
fcompl
push
lcall
ret
aad
popf
pop
rorl
sub
fidivl
shlb
jae
xchg
or
inc
cmp
dec
dec
inc
jns
sbb
dec
xchg
js
out
add
adc
idivw
xchg
xorb
adc
xor
mov
jp
add
int3
cmp
les
lock
aaa
xchg
pop
xchg
jecxz
rcll
xor
or
sbb
decl
add
jbe
lret
in
sbb
ret
dec
or
xor
push
imull
clc
inc
push
lcall
lds
dec
sub
jle
pop
mov
adc
sub
psadbw
pop
outsl
aaa
sbb
outsl
dec
int
das
inc
pusha
push
add
push
inc
inc
mov
ret
out
jbe
repz
mov
push
notl
lret
jp
push
ljmp
xor
ljmp
adc
stos
sti
mov
push
xor
lods
lods
lcall
xorl
data16
subb
jecxz
ret
inc
lahf
filds
repnz
xchg
popf
dec
dec
dec
stos
jge
inc
in
ss
shl
jmp
mull
mov
js
js
ret
pop
fcompl
cmp
out
inc
ds
jl
stos
pop
in
loope
sti
stos
repz
mov
sub
mov
call
fisttpl
xchg
lds
es
adc
je
mov
jo
shlb
xor
xor
ds
cli
or
or
sahf
test
subb
notl
sub
dec
mov
aad
cs
aaa
push
pop
test
xor
shrb
pop
pop
in
and
xlat
inc
out
lret
or
cmp
mov
jp
add
xchg
test
jbe
addr16
inc
cmpsl
and
shl
xchg
lahf
shr
mov
mov
adc
or
fbld
lret
sahf
or
shrl
sbb
shl
in
xor
push
push
mov
div
xor
push
in
lock
and
lcall
cs
pop
xor
xor
push
in
mov
ret
fsts
cs
dec
cmp
lret
test
push
mov
mov
or
xchg
gs
iret
stc
sahf
bound
rol
pop
push
pusha
mov
in
cmp
inc
add
in
pop
xchg
pop
xor
test
mov
popf
daa
pop
xchg
fwait
or
neg
shrb
dec
rol
dec
stos
add
shrb
pop
pop
mov
inc
mov
out
insb
mov
dec
ja
mov
orl
sub
test
cs
adc
lret
mov
scas
in
insb
pop
jmp
mov
xchg
inc
pop
push
outsl
xchg
mov
gs
loopne
cbtw
and
xor
cs
adc
xor
mov
and
pop
inc
jns
in
aam
jge
data16
push
mov
inc
mov
jnp
add
sbb
cmp
push
aas
jecxz
in
push
ja
imul
cmc
cs
out
sbb
jle
and
sti
cmp
or
sbb
cmp
out
mov
call
ret
pop
adc
inc
icebp
cmp
or
arpl
or
imul
pop
cmp
cmpsb
test
cli
xchg
aad
lret
int
sbb
js
sahf
aam
sahf
insb
or
mov
subl
sbb
or
pushf
mov
and
pop
test
fwait
aaa
add
mov
int
dec
aad
adc
xor
mov
pop
xchg
rorl
xchg
mov
fbstp
lods
lods
jecxz
out
cmc
push
and
clc
push
fnstenv
mov
inc
fistpll
lahf
jp
repz
cmp
sahf
enter
sbb
dec
inc
loope
es
idivb
jno
divl
xchg
fs
pop
mov
sub
push
imul
dec
or
movsb
call
jecxz
dec
jecxz
repnz
adc
dec
push
lcall
lea
divb
jge
mov
cmc
and
std
mov
xchg
fildll
pop
xchg
movsl
inc
mov
or
jecxz
push
test
jmp
dec
push
sub
iret
cmp
dec
add
mov
xchg
mov
mov
imul
mov
outsb
inc
ds
push
inc
dec
mov
int
in
dec
sub
rclb
dec
pop
jae
outsb
iret
iret
xchg
in
int
je
test
dec
mov
das
ds
out
andl
sub
imul
ja
icebp
inc
enter
pop
mov
sbb
or
push
imul
sarl
xlat
pushfw
mov
fs
test
repnz
xor
outsb
jbe
arpl
push
ljmp
icebp
dec
in
xchg
jb
ss
imul
and
icebp
clc
ljmp
stos
ja
test
push
mov
fisubrs
push
xchg
call
jge
test
out
lods
lcall
psubsw
inc
arpl
fs
dec
clc
xchg
inc
ret
pushf
jb
shl
mov
fs
adc
dec
cs
out
outsb
sbbl
adc
call
pop
shll
idiv
push
sahf
loop
gs
dec
cmp
aaa
add
inc
dec
in
lods
mov
xor
les
loope
xorb
sar
in
add
cmp
cwtl
cmp
xchg
adc
adc
pop
mov
cmp
ss
int
adc
pop
adc
xchg
push
xchg
dec
jne
push
pushf
push
pop
dec
lods
sbb
in
fisttps
dec
ficompl
je
lods
jnp
mov
fcomp
jg
imul
xchg
test
pop
and
cmp
dec
sub
lret
loope
cmpsl
rcrl
addr16
ds
sub
cmp
pop
loop
mov
pop
pop
jp
in
push
daa
push
ret
xor
into
mov
lcall
jg
xlat
cmpb
int3
cld
pop
je
push
f2xm1
call
sti
pop
shll
jp
outsl
mov
xor
fildl
push
std
ds
xchg
fnstenv
shrl
pop
mulb
xor
lea
test
clc
sub
mov
popa
adc
bound
xchg
fdivs
push
adc
add
jle
loope
fnstcw
std
divl
cli
mov
fmulp
filds
cld
jl
orb
pop
push
pop
xlat
mov
mov
mov
je
out
rcrl
cmp
and
loopne
mov
mov
jge
xor
mov
or
add
mov
lahf
push
fistps
iret
dec
dec
lock
sar
or
out
xlat
mov
xchg
js
mov
fwait
xor
mov
dec
jl
xlat
cmp
cmc
repnz
inc
xor
sbb
pop
or
ja
add
cmp
into
outsl
mov
ljmp
movb
daa
loopne
leave
dec
and
lea
mov
mov
mov
cmp
shrl
negb
sub
add
clc
data16
fcomip
les
aad
stos
iret
pop
or
mov
jno
xchg
sbb
enter
mov
cs
daa
jns
sbb
push
push
enter
lret
dec
lds
enter
sub
xchg
dec
jge
in
push
pop
sbb
inc
mov
pop
inc
inc
sub
and
adc
inc
shrl
shl
in
test
out
push
push
je
cmpsb
shrl
insb
call
lret
push
pop
cmpsl
les
adc
cs
repz
add
sbb
pop
jb
bnd
xor
das
xor
pop
push
mov
jbe
iret
pop
aaa
int3
leave
lods
hlt
test
push
test
inc
pop
xchg
pop
hlt
xlat
inc
adc
sbb
in
pop
xor
call
enter
jg
mov
mov
push
cwtl
inc
mov
js
out
cmc
test
xchg
add
inc
mov
daa
pop
push
jmp
jg
cmp
into
loope
push
aas
notb
xchg
je
add
ret
addl
xlat
adc
adc
dec
push
mov
mov
push
xor
adc
and
push
leave
jb
andb
pop
sbb
jmp
lcall
movsb
jns
out
ficoms
dec
incb
dec
sub
shr
adc
fwait
inc
loope
negb
jbe
mov
clc
xor
sub
push
pusha
push
pop
sub
lahf
scas
pop
repnz
xor
or
xchg
mov
pop
jb
mov
in
pop
adc
mov
outsl
lods
jecxz
aaa
cmpsl
cmp
add
adc
mov
xor
mov
sub
jo
cwtd
jp
sbb
or
movsb
or
push
popa
lea
xor
mov
gs
shll
cltd
sub
orb
out
mov
sbb
mov
inc
loop
and
ds
aad
and
pop
jb
aas
and
mov
or
test
out
mov
sbb
das
mov
js
ret
call
jb
xchg
lret
fcoml
adc
shr
push
loope
xchg
sub
movl
leave
out
xor
rcll
xor
lea
repnz
adc
fwait
insl
stos
sbb
sub
jb
inc
test
insl
divl
jg
loopne
cmpsl
addr16
das
hlt
loopne
xchg
push
fsubs
cs
mov
imul
push
dec
xor
lahf
and
pop
sub
aas
cmp
nop
adc
pop
push
jg
mov
aam
ret
mov
push
jp
xor
add
fwait
jecxz
lcall
lea
mov
fsubrp
push
test
lock
inc
inc
out
mov
and
mov
add
jae
add
stos
mov
pop
push
roll
js
pop
aad
xchg
int
jne
or
dec
dec
movsl
pop
jecxz
fwait
push
pop
xchg
xor
loopne
xor
dec
int3
pop
xchg
push
xor
or
out
shlb
sbb
arpl
js
sbb
mov
cmc
jle
pop
hlt
cltd
jb
pusha
jno
mov
cli
pushf
push
and
mov
or
sub
lods
test
mov
mov
in
lcall
cli
hlt
push
pop
scas
push
dec
push
int3
outsl
pop
inc
repnz
stos
mov
jle
mov
data16
and
inc
pop
pusha
mov
fnstenv
imul
icebp
adc
lret
sbb
outsl
cmp
xlat
lods
in
push
jg
fldcw
lcall
jmp
mov
movsb
adc
testl
hlt
shll
icebp
sbb
shrb
pop
decb
jmp
mov
gs
out
pop
xchg
jb
imul
xor
pushf
je
stos
xor
jo
mov
in
mov
and
push
test
es
push
jle
adc
jae
mov
pop
repnz
jno
enter
pop
stos
push
adc
jbe
js
mov
shlb
fdivs
gs
mov
aad
sahf
pusha
js
xchg
cmpsb
movsb
test
dec
jne
mov
pop
nop
jae
iret
outsl
adc
adcl
dec
out
xchg
mov
sbb
cmp
outsb
test
leave
sbb
test
inc
insb
pusha
dec
pop
das
sbb
clc
roll
shrl
cmp
sbb
inc
mov
shl
cwtl
xor
int3
nop
jne
iret
xor
xchg
push
out
cmp
lock
faddp
mov
call
ret
xor
mov
adc
testl
popf
negl
mov
dec
rcr
xchg
mov
lock
push
or
lods
cmc
sbb
add
enter
add
loope
jne
sub
lods
stos
push
and
fwait
adc
out
ss
sbb
je
push
jp
pop
sbb
push
sbb
mov
icebp
push
jne
movsl
adc
int
mov
fists
fwait
mulb
mov
xchg
nop
or
sbbl
into
push
xlat
mov
out
push
std
dec
add
xor
je
push
push
es
dec
scas
jge
ljmp
cmovg
jno
sbb
out
sti
popf
or
iret
or
inc
daa
lods
jmp
mov
popa
xor
xlat
hlt
or
out
xor
arpl
cld
out
in
inc
xor
test
scas
loopne
aas
sbb
out
push
sub
adcb
mov
daa
inc
inc
aas
int3
mov
lods
mov
jno
push
leave
int3
mov
lret
mov
xchg
es
mov
in
adc
adc
ret
mov
xchg
xchg
jb
sbb
negl
adc
inc
into
pop
push
jle
int
sbb
jmp
bnd
inc
mov
or
leave
inc
stc
cmpsl
xchg
dec
pushl
fmuls
insb
divb
hlt
push
aad
inc
adc
inc
pop
iret
jl
cmp
cli
xchg
mov
mov
out
aas
push
repz
sarb
add
sub
call
sarb
push
xor
or
lds
dec
jae
sub
push
jp
dec
repz
push
jae
mov
push
je
fdivp
fsubp
daa
test
jb
xor
sub
rcr
in
shlb
mov
pop
jnp
mov
inc
in
les
mov
sbb
xchg
or
imul
jo
rolb
clc
outsl
mov
cmpl
and
jge
jbe
loop
push
gs
and
les
int3
in
jb
or
hlt
bound
pop
nop
add
movsb
add
insb
rcr
and
roll
rorl
or
jo
decl
nop
inc
xchg
int3
test
mov
ja
ljmp
jl
ret
mov
cmpb
add
add
inc
leave
jo
inc
jge
mov
pop
aas
pushf
add
sbb
fsubs
lds
dec
aaa
cmp
mov
or
fsts
dec
fsub
aad
sti
push
fisttps
stc
test
dec
or
int3
pop
inc
cld
sbb
dec
mov
repnz
xchg
mov
mov
in
pop
into
aaa
into
push
aaa
nop
sti
stos
cmc
mov
cmp
imul
jecxz
leave
ja
inc
shlb
cmp
insl
mov
inc
in
lret
add
inc
out
shlb
push
add
sarl
push
or
mov
mov
and
fsubs
jp
xor
add
int3
fcoml
popa
int3
sbbl
into
in
bound
pop
push
dec
adc
orb
fcmovu
push
push
inc
popf
push
jae
movsb
push
and
xor
cs
shlb
jl
imul
inc
add
test
xor
pop
pop
push
push
lcall
jne
js
xchg
les
inc
xor
icebp
mov
adc
push
jge
jne
add
jo
cmpsb
lcall
or
je
ljmp
sub
enter
popf
pop
rorl
cmp
adc
jl
xchg
fwait
arpl
mov
lds
cmpsl
in
or
in
ljmp
clc
fsubrs
imul
and
movsl
orb
js
shll
mov
mov
jmp
or
sbb
ret
ss
das
popf
std
sbbl
xchg
adc
xor
pusha
push
add
or
adc
xor
add
inc
push
sbb
jnp
mov
outsb
mov
push
adc
fwait
push
aam
sbb
hlt
xchg
sub
jb
pop
aas
scas
dec
cmp
lea
sbb
pusha
add
test
fimull
mov
in
daa
push
mov
inc
mov
hlt
pushf
aad
jmp
lcall
adc
aaa
fs
les
psllw
cmp
lahf
addb
jl
test
xor
xchg
mov
test
pop
and
cs
mov
mov
adc
lcall
out
stc
into
repz
shld
cli
test
inc
call
add
xchg
sbb
xchg
jnp
repnz
sbb
push
dec
xlat
ljmp
mov
adc
insl
and
sbb
in
daa
jno
add
cmp
push
in
icebp
cmpsl
adc
movsl
aaa
jne
hlt
pop
shl
fidivs
xchg
cmc
arpl
repnz
inc
jae
mov
adc
decb
cltd
stos
lret
fcomps
xchg
inc
dec
jp
rcll
push
jb
sub
fnstcw
aaa
sbb
mov
mov
clc
lds
inc
std
dec
mov
jo
sub
shrl
stos
mov
loopne
pop
shl
sahf
movsb
sarl
fnstsw
loope
sub
nop
mov
cmp
xchg
inc
icebp
cltd
push
es
lahf
jge
cltd
dec
dec
push
cld
push
in
incl
pop
pop
xlat
cmp
call
xchg
or
shrb
dec
and
xor
les
arpl
iret
cmp
xor
adc
jo
cmp
lret
ljmp
xchg
in
cmpsl
outsl
sbb
movsl
mov
xor
inc
cs
jns
jb
mov
push
insl
xor
jbe
fisubs
aad
push
pusha
jg
xchg
sahf
rcrl
inc
or
orl
js
dec
cs
mov
sub
sarb
out
stc
dec
and
ljmp
push
push
sbbl
arpl
lea
xchg
cmp
pop
test
add
movsl
mov
mov
ret
fnsave
jne
les
lcall
das
push
mov
inc
mov
jo
push
xor
sub
mov
mov
xchg
or
stos
mov
and
mov
ljmp
cmp
jbe
outsb
mov
test
sbb
call
pop
sbb
add
adc
jae
inc
lcall
sbb
jle
fisttpl
sub
mov
push
fcoms
inc
daa
mov
cmp
test
cmp
inc
int
icebp
iret
mov
sbb
movl
mov
mov
xor
mov
sbb
cld
pop
cwtl
imul
jle
cmp
cltd
xchg
xchg
xor
out
loope
in
jae
shl
pusha
jb
sub
cmp
shl
inc
ja
jmp
push
and
xchg
out
jg
mov
test
push
push
cld
pushf
insb
push
sahf
pcmpgtb
outsl
int
outsl
mov
lods
push
cmp
jo
mov
bound
push
pop
jl
repnz
rorl
std
rcl
xchg
xor
jecxz
lret
mulb
je
jnp
dec
pop
pop
add
lock
shrl
in
pop
je
in
xchg
cld
test
mov
dec
jae
or
add
daa
aad
xchg
fdivl
pop
jp
push
test
cmp
sbb
xchg
hlt
lock
mov
xchg
std
leave
js
pop
lcall
jmp
movsl
std
cli
xchg
xchg
es
and
fcmovnbe
cmp
repnz
or
sti
icebp
lcall
and
xor
mov
mov
dec
das
ljmp
loope
cvtps2pd
mov
insb
call
iret
jo
lahf
dec
xor
popa
mov
inc
push
add
jno
bound
scas
mov
push
sbb
enter
call
int
and
or
sbb
fistpll
incl
aad
push
aas
mov
mov
mov
test
out
sub
xor
dec
decb
push
sbb
inc
loope
clc
fcompl
jno
sbb
popf
mov
jne
pusha
lret
lods
test
inc
ret
inc
sbb
aas
xor
test
bound
ljmp
jb
inc
rclb
cmp
sub
sti
hlt
pop
iret
push
bound
mov
arpl
xchg
inc
int3
ret
mov
push
cld
fs
orl
pop
and
fisubl
mov
jbe
and
dec
int
addr16
ret
inc
jecxz
xchg
dec
push
inc
lock
stc
xchg
repz
pop
xchg
sub
pop
jne
add
cmp
cmp
xchg
in
xchg
mov
insb
daa
inc
inc
bound
sub
jge
fidivl
and
push
jp
push
int3
cmp
xchg
fimull
push
unpcklps
pop
and
addr16
add
cmpsl
stos
dec
pop
repz
mov
in
psllq
cmp
ja
or
and
inc
jae
in
sub
cmpb
sub
xor
sbb
sub
insb
mov
ljmp
out
out
addr16
cmpsl
fsubs
in
nop
xchg
add
xor
loope
popa
mov
stos
jb
roll
mov
xor
or
loop
std
outsb
xor
or
mov
decb
movsb
adc
test
lods
std
mov
pop
aas
not
mov
loop
iret
mov
jnp
subb
adc
pusha
es
mov
arpl
and
jo
and
ss
add
sub
mov
mov
das
mov
stos
cmp
xchg
notb
mov
sbb
aam
or
push
mov
pop
mov
in
aas
jb
inc
lahf
scas
mov
dec
icebp
mov
test
xchg
adc
pop
je
int
ja
mov
fidivrs
scas
xchg
test
sub
rcr
mov
cmc
inc
jmp
enter
cli
xchg
lret
or
lret
sahf
fwait
add
sub
das
or
lret
jae
fbstp
xchg
cmp
jmp
inc
outsb
xor
mov
xchg
sub
mov
imul
jb
imulb
or
push
dec
sub
fidivl
add
push
sbb
sahf
adc
lret
fidivl
sbb
jb
push
mov
js
lock
movsl
sub
in
shr
adc
sub
mov
xchg
push
sbb
ret
aam
std
cmpsb
outsl
pop
repnz
sub
mov
cmp
and
pop
cwtl
jl
mov
test
and
mov
mov
test
mov
in
adcb
mov
xor
pinsrw
and
lret
sbb
ja
popa
push
cmpsl
add
notl
or
xor
adc
or
lret
and
cmpsb
mov
scas
push
mov
mov
les
cmp
data16
mov
fdivl
ret
xor
mov
mov
or
gs
xor
xchg
adc
mov
mov
rcrl
inc
inc
sub
and
fwait
jns
push
dec
jb
pop
ja,pn
cmp
add
out
inc
sub
mov
sub
jno
ja
xchg
imul
inc
movsl
add
ret
mov
cltd
inc
mov
jp
fdivrs
into
mov
incb
adc
cli
sarb
pop
out
pop
push
dec
mov
push
inc
mov
jge
ficoml
orl
shll
out
loop
cmp
mov
aam
xchg
xchg
jle
jge
pop
shlb
mov
sub
or
call
dec
mov
mov
loopne
subl
xchg
or
test
mov
ss
or
cmc
lea
jp
and
xlat
daa
lds
xor
ret
cld
adc
push
jb
bound
inc
jp
mov
add
cmpsl
push
ljmp
and
cld
pop
mov
and
mov
call
ds
mov
cmp
adc
call
inc
mov
fwait
iret
jne
mov
roll
scas
lret
push
outsb
fstl
cmp
lea
push
nop
jnp
dec
push
xor
add
or
gs
mov
test
push
inc
pop
mov
ja
inc
mov
sub
mov
jp
int3
pop
loopne
push
hlt
pushf
test
je
std
adc
cmp
mov
js
inc
jge
push
push
push
mov
and
out
movsb
dec
jg
mov
pop
jmp
leave
push
fcompl
cmpsl
insb
cmpb
dec
out
inc
jge
jbe
loopne
fwait
push
in
call
das
pop
outsb
add
xor
in
pop
xchg
iret
mov
inc
jp,pt
push
adc
imul
jp
mov
mov
into
dec
push
sbb
jb
pop
adc
sub
or
mov
lock
leave
call
jmp
imul
icebp
mov
xor
lahf
mov
rolb
and
mulb
insb
add
jmp
mov
lock
aad
rcrl
aaa
popf
subb
lcall
pop
inc
test
aas
cld
test
adc
daa
mov
mov
aaa
mov
out
mov
fidivrs
int3
mov
jmp
jmp
insb
cmp
xor
push
cmpl
popf
lea
jne
stos
adc
stos
push
cmp
pop
xor
and
fcmovb
cmp
push
adc
inc
arpl
iret
cmp
cmp
dec
fwait
addr16
outsb
iret
push
cli
in
sub
mull
or
xchg
popa
imul
ror
and
jle
pop
cwtl
adc
and
int3
or
sbb
movsb
sbb
inc
mov
cwtl
push
fmulp
cmp
mov
addl
sahf
data16
test
cld
fldcw
fiadds
sbb
push
mov
sbb
sub
out
adc
inc
or
flds
pop
lcall
dec
cwtl
mov
xchg
sbb
cmp
dec
add
rcrl
andl
push
jo
push
mov
lds
aas
add
mov
movsl
lods
and
stc
pop
cmpsl
vminpd
xor
popf
bound
scas
call
pushl
cmpb
or
stos
orb
and
push
adc
and
je
xchg
or
mov
mov
mov
jecxz
mov
jmp
push
jno
sbb
or
jo
jb
push
cmp
jmp
iret
sbb
out
ds
cld
jp
lock
repz
xor
and
aas
rolb
or
inc
xor
lahf
pop
stc
test
iret
and
xchg
sbb
add
cld
in
xorb
cmp
push
ljmp
mov
data16
decl
mulb
stos
xor
dec
icebp
out
xor
add
test
cli
mov
inc
sub
adc
push
jecxz
std
mov
mov
push
or
xchg
pushf
mov
stc
rorl
inc
into
push
adc
cmp
jle
adc
gs
cmc
in
nop
stos
xchg
pop
outsb
mov
push
cmp
cmpsl
push
std
loopne
mov
cmpsl
cmc
fdivrs
push
and
lods
xor
inc
jg
sbb
mov
or
imul
xor
lods
mov
dec
sbb
mov
mov
rcr
mov
dec
shll
xchg
cli
adc
sahf
fldt
sahf
jl
push
push
mov
dec
mov
mov
in
jl
gs
out
sub
jno
sbb
ljmpw
fisttps
mov
adc
or
loopne
lods
jno
inc
in
fldenv
sub
add
lret
add
adc
ljmp
sarb
cmpsl
push
jg
pop
push
adc
jnp
test
mov
push
mov
xchg
mov
and
dec
or
pop
mov
xchg
mov
sti
inc
push
js
inc
enter
dec
sub
xchg
cmp
xchg
jl
call
jecxz
dec
and
imul
push
xchg
inc
mov
jns
mov
pop
faddp
lds
mov
js
jecxz
mov
and
in
shrl
push
push
fmull
aad
push
out
xchg
xor
or
sbb
jne
enter
push
cli
in
test
add
push
test
sbb
icebp
std
push
aad
sbb
jecxz
lret
ss
sahf
jmp
gs
or
das
cmp
xchg
pop
fiadds
xor
xchg
nop
xchg
cld
ja
sarb
out
or
dec
pop
ret
lock
pop
cltd
pop
cld
pop
data16
loopne
xor
push
out
xchg
sbb
int3
addb
adc
cmp
push
movsl
leave
push
inc
ds
pop
mov
rorl
ljmp
pushf
outsl
pop
mov
cmpsb
xor
mov
mov
lcall
lret
dec
push
dec
out
mov
or
imul
jecxz
ljmp
movsb
lcall
stos
and
dec
fcompl
enter
enter
xlat
push
jne
jae
and
imul
pop
jmp
jg
adcb
push
jge
and
jo
pusha
lret
ss
xchg
pop
call
enter
push
pop
div
xchg
out
pop
sbb
jmp
mov
push
mov
and
xor
imul
pop
test
jne
movsb
mov
lods
sbb
mov
lret
ljmp
jmp
inc
fsubrl
mov
or
jl
outsb
lret
xchg
push
inc
mov
add
pop
bound
or
out
sub
sbbl
mov
push
aaa
cmp
and
mov
adc
fcoml
scas
push
ja,pt
out
cmp
orb
stc
mov
in
in
push
adc
xchg
stos
dec
ror
shll
cmp
mov
insb
mov
pop
loop
shll
xor
popa
sbb
call
inc
outsb
sbb
imull
jg
stos
repnz
add
stos
fwait
call
movsl
test
adc
sub
out
jno
pushl
add
repz
or
cmp
mov
out
jne
rorb
rcrb
adc
fsts
int
ja
cmc
add
mov
push
stc
in
mov
mov
dec
dec
test
xchg
cs
mov
push
xchg
hlt
cmp
dec
std
dec
in
sbb
cwtl
ds
movsl
pop
mov
pop
push
adc
or
dec
lds
ss
lds
mov
ja
test
cmpsl
rolb
gs
insb
repnz
popa
cltd
dec
cmp
add
stc
xchg
push
pushl
cmp
idivl
push
cmp
out
push
iret
cmp
or
mov
fwait
mov
pop
sub
ret
jns
adc
out
out
jae
inc
cmp
rcll
mull
dec
lods
push
mov
xchg
dec
decb
xchg
push
bound
sub
fisttpll
jns
shrb
out
and
int
xorl
mov
and
pop
lret
sub
xchg
pop
les
mov
jle
add
std
sub
push
or
imul
fmuls
mov
insb
fistps
xor
dec
pop
and
add
sub
xor
jge
inc
inc
fwait
sbbl
mov
jo
test
push
out
inc
inc
aas
jmp
dec
frstor
mov
cmp
xchg
mov
sti
xchg
hlt
push
mov
cwtl
nop
cmp
das
leave
push
adc
popf
fidivl
sbb
or
fsubs
jle
cmpsl
outsl
pop
xor
nop
push
jno
cltd
dec
aaa
loop
loopne
sub
int3
push
jmp
stos
mov
jl
ret
mov
data16
adc
mov
inc
or
pop
and
jmp
push
add
in
inc
dec
jbe
or
cmp
mov
shl
mov
and
sub
xor
js
cs
push
add
shrb
lcall
xor
and
push
test
push
inc
rcll
jge
xor
lcall
mov
ficoml
scas
pop
out
push
mov
cmp
xor
mov
cld
das
inc
push
int3
cli
and
jg
sub
jmp
and
xchg
je
adc
movsb
popf
xor
adc
cs
bound
ficompl
mov
xchg
insb
mov
fcmovbe
ficoms
inc
and
ficoms
pop
jge
dec
xor
xorl
int3
dec
fisubrs
fbstp
dec
jge
push
and
add
xor
jge
loope
call
xchg
ffreep
ljmp
stc
cmp
push
sub
out
mov
sub
popf
fidivrl
adc
outsl
cmc
inc
cmpsb
subb
inc
jecxz
sub
pop
insb
mov
sbb
sbb
mov
xor
dec
andl
jl
test
sbbb
lods
mov
popf
shlb
lea
inc
arpl
fs
popa
mov
mul
popa
sub
pusha
jno
mov
mov
adc
push
xchg
cmp
lahf
xchg
sub
mov
aad
or
mov
or
insl
mov
push
jbe
mov
imul
pop
shll
jb
or
outsl
cmp
xchg
int3
in
push
loop
dec
popf
inc
test
push
loopne
dec
cmp
daa
pop
test
scas
mov
fcompl
fmull
addr16
ss
xlat
addr16
shlb
cmc
adc
clc
sarl
or
mov
into
sub
fsubrl
fsubs
enter
cmp
adc
cmc
int3
scas
lret
sub
xlat
inc
xchg
cmpsl
loope
out
in
add
aam
inc
xchg
arpl
or
jl
loop
cltd
out
pop
mov
push
lret
arpl
mov
dec
mov
jge
sbb
aas
inc
xchg
adc
adc
fs
or
out
lods
mov
test
test
aaa
lea
mov
or
das
nop
sbb
cmpsl
in
xchg
mov
inc
xchg
pop
inc
int
cli
sub
jecxz
out
push
out
outsl
xchg
dec
push
adc
mov
cmp
mov
lret
ljmp
push
pop
jnp
arpl
movsl
push
mov
mov
lcall
enter
dec
roll
or
les
jno
sbb
sub
inc
aam
and
sahf
clc
or
lock
push
sbb
fidivrs
mov
sar
dec
cltd
enter
into
sub
push
sbb
lods
pusha
mov
in
int
mov
pop
cltd
xchg
shlb
pop
xor
push
dec
rorl
lcall
xorl
lret
mov
add
imul
cmp
shl
jns,pt
jo
sbb
outsl
sbb
adc
dec
xchg
notl
fcomps
lahf
and
mov
push
xchg
push
fiaddl
lret
lret
sahf
std
das
mov
sbb
or
inc
xor
cmp
test
inc
imul
lcall
lea
loope
jg
adc
in
mov
scas
inc
mov
stos
dec
xchg
jecxz
iret
dec
insb
add
js
pop
add
push
and
cmp
push
push
negb
rcl
xor
add
mov
fsubs
xor
data16
aaa
push
outsb
jo
mov
aam
xlat
sti
lods
test
fdivrl
pusha
scas
mov
into
jecxz
lods
les
cmp
push
les
ja,pt
pop
cmp
ret
scas
out
repnz
in
jnp
insb
subl
out
std
pop
aas
cmp
std
jae
pop
cmpsl
push
and
xlat
loop
movsb
enter
adc
jb
mov
out
out
aas
shrl
setno
and
cmp
adc
das
loopne
aaa
mov
stos
roll
mov
mov
and
pop
cmp
movb
bound
lods
adcb
test
sar
ds
pop
sbb
test
mov
test
imul
enter
jno
and
sbb
lcall
xacquire
divl
xchg
movsl
outsl
pop
testb
pop
mov
dec
dec
ret
inc
add
cmp
add
push
imul
lahf
push
scas
ret
dec
adc
dec
cmpsl
out
xchg
or
mov
inc
cwtl
mov
gs
lcall
push
adc
cmp
lcall
cmpsb
imul
scas
xor
jle
inc
pusha
mov
sub
ljmp
jnp
push
mov
leave
js
mov
cmp
jl
inc
lcall
out
dec
lret
pusha
cli
ds
das
push
repnz
fiaddl
lods
mov
push
cmpsb
pop
sarl
je
adc
mov
xchg
mov
xadd
inc
jge
mov
xchg
repnz
mov
pop
or
lret
dec
push
hlt
inc
push
iret
lea
and
add
dec
fbstp
and
and
cmpsl
xchg
dec
jl
loopne
je
insb
pop
dec
push
mov
xchg
add
xor
cmp
lods
add
sub
push
pop
sar
lods
cmp
addb
lcall
inc
cmp
jecxz
mov
adc
dec
mov
jl
push
lcall
mov
enter
adc
jne
pop
cmp
loope
push
sbb
arpl
gs
pop
mov
stos
sub
nop
lret
push
jbe
cmp
push
push
inc
inc
push
loopne
push
push
or
xor
loopne
jae
imul
add
ss
outsl
adc
aaa
iret
push
adc
add
outsl
imul
jg
push
fcmovu
inc
test
pop
dec
pop
ficompl
jl
dec
cmp
arpl
sbb
inc
rcr
imul
enter
in
lods
shl
mov
dec
mov
push
mov
adc
and
sbb
xchg
ja
push
lcall
sbb
jo
cltd
xorl
push
data16
iret
jp
add
cmpsb
xor
out
and
insb
imul
outsb
imul
push
icebp
xor
push
lock
push
sarb
pop
into
dec
adc
in
cmpl
cmp
adc
out
aam
mov
mov
pop
loop
sub
jp
mov
mov
lret
insb
inc
aaa
or
jge
gs
and
lock
cmpl
mov
sub
dec
movb
push
xchg
sub
les
dec
aam
int
mov
mull
sub
jg
and
dec
xchg
xchg
push
cmp
lea
ret
inc
sub
cld
push
push
cld
pop
add
pop
mov
xchg
mov
add
cltd
cmovbe
fdivr
pop
je
ret
cmp
xchg
xchg
cli
adc
mov
in
jne
test
je
cmp
mov
dec
scas
and
cltd
sub
add
dec
arpl
nop
pop
jae
dec
push
dec
xchg
sbb
or
stc
aam
in
fiaddl
jnp
sbb
sbb
cmp
les
pop
dec
adc
test
push
fcoml
cmp
xor
scas
call
bound
addr16
xlat
xor
mov
jbe
loop
pusha
jle
jle
imul
das
in
xchg
ret
or
jnp
outsl
inc
dec
imul
push
iret
ja
sbb
mov
adcl
fwait
xor
or
cmpsb
js
adc
cmp
sahf
cli
mov
aad
jmp
mov
test
pop
es
insb
fists
dec
leave
fdivs
add
pop
push
pop
jno
sub
inc
sbb
or
test
fistps
xor
xchg
lcall
ljmp
xchg
std
inc
movsl
mov
mov
and
test
dec
inc
xchg
add
pop
xchg
xor
scas
xor
subb
mov
inc
leave
mov
push
test
xor
mov
clc
push
pop
test
cs
adc
xchg
test
fistpll
mov
movsb
sub
cs
jg
sbb
push
into
mov
pushf
sub
movsb
add
sbb
rol
xchg
mov
pop
int3
fsubrl
stos
scas
xor
movsl
daa
xor
mov
xchg
or
dec
or
rcrb
mov
adc
add
ds
xor
inc
icebp
push
sbb
dec
lds
dec
inc
enter
int
mov
cmpsl
jo
dec
inc
loope
out
push
les
or
push
lret
loope
into
dec
test
sub
mov
imul
je
push
mov
scas
xchg
insb
and
and
dec
das
mov
das
lods
jle
cmp
pop
daa
sub
add
lcall
ja
mov
ret
fcmovu
cmpsl
xor
jae,pn
mov
icebp
mov
test
push
inc
subl
xor
lock
fstl
gs
push
pop
push
mov
push
or
ja
and
push
or
repnz
adc
movsb
jle
push
fisttpll
push
stos
in
dec
leave
push
add
sbb
inc
xor
sub
adc
outsb
dec
idiv
mov
aad
out
sbb
pop
mov
repnz
in
dec
pop
xchg
sub
addb
inc
cmp
ror
cmp
lds
cmc
fs
mov
int3
and
fistpl
int3
jl
loopne
push
rcl
mov
xchg
je
mov
loop
cmp
push
jne
push
popf
imul
rclb
movsb
push
adc
xchg
push
mov
cltd
sbb
jnp
gs
inc
push
loope
mov
mov
push
rorl
nop
lods
inc
popa
ret
cwtl
fxch
mov
outsb
and
scas
mov
leave
jp
add
pop
mov
mov
mov
mov
stc
enter
aas
in
out
fidivrs
pop
lea
sbb
mov
notl
push
sub
pop
add
leave
dec
jns
cltd
fldenv
fmuls
mov
loop
mov
sbb
inc
or
into
mov
test
adc
negl
insb
inc
jb
push
dec
adc
inc
dec
lock
push
sti
aas
jl
cmpsb
inc
ljmp
pusha
insl
stos
mov
xchg
pusha
enter
mov
cmp
mov
xchg
mov
test
in
in
xchg
out
mov
fimuls
cltd
and
scas
push
and
cmc
xchg
xchg
mov
mov
jp
call
int
sbb
inc
arpl
sbb
add
xchg
mov
sub
add
test
cli
dec
mov
mov
and
mov
callw
movsb
cmp
adc
xchg
repnz
and
ficomps
dec
jae
push
je
pushf
fdivrl
push
clc
sub
jns
ret
test
lds
xchg
mov
rorl
xlat
jmp
divb
nop
cld
pusha
sub
les
icebp
leave
nop
or
fldl
and
fsubrl
xchg
add
cmp
fucomip
repz
stos
push
jns
mov
out
add
adc
mov
and
and
lret
orl
dec
mov
dec
mov
push
call
int3
aad
and
enter
test
dec
xchg
cmp
test
fs
mov
adc
mov
test
cltd
sahf
ds
inc
pop
bound
aam
mov
repz
outsl
jmp
lock
sub
icebp
insl
or
pop
and
pusha
xor
xchg
cmp
dec
add
fildll
push
ljmp
xchg
loope
mov
bound
sarl
xchg
jg
mov
testl
mov
andl
sbb
jae
jle
xchg
stc
push
das
cmp
add
pop
movsb
jmp
push
push
dec
insl
push
jo
pop
mov
and
inc
fmuls
maskmovq
testl
ss
dec
nop
xor
xor
test
test
sbb
lahf
sbb
dec
stc
jecxz
dec
and
pop
xor
or
cwtl
into
push
sbb
pop
dec
mov
or
fdivrp
test
mov
inc
add
add
xchg
pushf
cmp
sbb
out
rcrb
mov
lods
push
shr
add
xchg
inc
mov
hlt
cs
fstpl
shlb
jbe
mov
lds
shr
repz
inc
mov
jg
cmp
fs
in
aam
inc
mov
xor
inc
mov
aaa
mov
fisubl
aas
orl
fisubl
movsl
or
popf
ja
lods
js
cmp
and
into
shlb
inc
movsl
xor
imul
stos
lods
cmp
sub
push
jmp
daa
jnp
push
lods
fcomps
es
jnp
idivl
negl
ljmp
out
pusha
aam
mov
loop
call
fbstp
int
xchg
popa
rorl
mov
adc
and
in
int
xor
cltd
js
out
aam
bound
subl
int
push
jecxz
cmpsb
add
movsb
test
jecxz
push
inc
lcall
mov
into
mov
call
adc
mov
inc
inc
pop
mov
in
sub
xlat
push
xchg
bound
cmp
lds
xchg
js
movsl
xlat
inc
ret
mov
jb
mov
rorb
sbb
test
out
sub
push
sbb
lret
addr16
dec
jecxz
mov
int3
jae
in
gs
out
cmp
test
mov
scas
arpl
xchg
into
inc
xabort
inc
jmp
lahf
jo
sahf
mov
out
movsl
mov
pop
dec
stc
pop
stos
or
sub
cmc
data16
sbb
pushf
sbb
dec
faddp
push
pop
add
xchg
sarl
pop
fistps
or
fimull
sti
jl
lea
xchg
in
cmp
or
xor
xchg
xchg
sti
dec
mov
stos
or
in
add
arpl
push
mov
and
pop
ljmp
lea
imul
cld
cmp
in
jl
or
js
iret
test
sub
jb
push
iret
pusha
mov
cwtl
mov
jns
insl
cli
pop
adc
shlb
inc
inc
ja
jb
xor
cwtl
decl
movsb
shll
lahf
stos
xchg
dec
and
je
lds
mov
fwait
mov
popa
clc
inc
inc
cwtl
movsb
push
and
divb
in
cwtl
scas
push
or
in
cli
scas
repnz
imul
add
call
sahf
mov
and
fimuls
dec
jb
cld
mov
scas
shl
push
scas
clc
scas
adcl
shll
push
cmp
cld
jmp
out
pop
mov
push
fidivl
jp
pop
pop
leave
mov
mov
aam
jne
pop
push
in
jmp
inc
loop
xchg
mov
push
movsl
icebp
test
aam
mov
scas
imul
sarb
and
xchg
loop
push
or
enter
icebp
ljmp
popf
or
push
sub
push
jae
fs
mov
jb
imul
mov
sarl
inc
push
jnp
jge
add
and
adc
in
inc
loopne
scas
mov
xchg
dec
daa
dec
pop
fnstsw
pop
xchg
leave
push
lret
dec
inc
lock
daa
dec
nop
jbe
ds
xabort
out
mov
push
dec
mov
clc
push
data16
daa
sbb
inc
test
jl
jl
xchg
mov
push
mov
scas
sbb
fcoms
mov
sbb
addl
test
stc
cmpsb
xchg
fimull
inc
adc
push
mov
inc
mov
jge
cmc
lret
outsl
test
mov
or
sbb
movsl
adcl
inc
test
pushf
scas
testl
js
subl
lods
mov
enter
filds
fsts
test
fistl
shl
popf
jmp
insl
jno
mov
insb
test
movl
icebp
movsl
xchg
shll
jo
ficoml
in
pop
in
ret
mov
xor
mov
gs
movsb
or
mov
testb
fstl
cmp
and
cmpsl
xchg
or
bound
cmp
iret
sub
mov
jnp
aad
js
mov
iret
test
arpl
test
xorb
addl
icebp
std
fdivl
in
shl
sahf
mov
aas
int3
mov
in
pop
mov
mov
int3
sbb
cmp
inc
fxam
ja
sysexit
jmp
sbbb
inc
cmp
popa
std
sahf
lock
sbb
cmc
jbe
scas
pop
add
fmull
addr16
xor
andb
cmp
cmpsl
lods
xor
mov
and
mov
mov
xor
push
dec
push
lahf
adcb
imul
mov
lahf
jb
dec
or
cmpsb
addl
stos
icebp
and
mov
in
xchg
add
insb
in
cmp
sub
dec
je
and
scas
xchg
add
push
jp
sub
jle
outsb
sbb
pop
js
and
push
shlb
sbb
adc
std
fsubrl
cmpb
jo
xorl
clc
ljmp
sub
xchg
repnz
inc
imul
xor
sbb
pop
add
push
lds
or
or
mov
stos
dec
imul
fwait
pop
mov
sub
aaa
hlt
sti
xchg
cwtd
enter
mov
xchg
insb
fsts
jo
mov
mov
push
push
pop
outsl
mov
cmp
lret
pop
insb
insb
mov
pop
xor
aam
dec
fidivrs
mov
dec
cmp
scas
bound
ljmp
fdivs
mov
xchg
popf
repnz
mov
mov
jne
mov
ja
mov
and
stos
addr16
xchg
mov
ja
loop
adc
add
and
pop
pop
sbb
int3
shlb
cli
inc
pusha
stos
testl
hlt
cmpsb
iret
add
sub
fildl
sbb
ret
roll
xchg
sbb
aaa
ret
dec
mov
xchg
lret
cltd
lret
sbb
into
mov
dec
cmp
test
xchg
ret
dec
xchg
jae
test
js
jmp
or
mov
data16
pop
test
xchg
popa
mov
fisubs
sarl
jge
outsb
pop
dec
xchg
pop
aas
adc
notb
xor
sbb
mov
pop
aam
cmp
out
inc
xchg
fistpl
pop
leave
cmp
and
push
in
enter
pop
daa
or
xchg
repnz
rorb
push
lret
int3
pop
pop
mov
fdivl
or
or
push
out
sbb
roll
movsb
inc
arpl
pop
lds
jmp
jb
mov
lods
sub
mov
push
push
fwait
jp
hlt
int3
sub
add
xchg
movsb
fldenv
jne
push
mov
or
int
adc
lahf
and
inc
aaa
insb
mov
fdivr
cmpsb
xchg
jecxz
outsb
shrb
cmp
and
pop
jno
push
cmp
cli
pop
jo
mov
mov
cltd
and
loop
inc
outsl
pop
scas
xchg
scas
lds
in
push
scas
cmp
lcall
add
cmpsb
sub
adc
mov
or
mov
fisttpl
scas
into
cmpsl
sub
mov
push
xor
pop
mov
arpl
scas
popf
repz
adc
mov
enter
pop
push
pop
dec
test
ret
clc
rcr
fiadds
xchg
jecxz
orb
push
into
insl
sti
dec
push
popa
mov
arpl
add
pop
xchg
out
and
mov
inc
dec
sbb
test
jnp
push
adc
out
dec
dec
and
aaa
push
push
push
jl
fimull
insb
stc
xchg
imul
inc
outsb
out
sahf
adc
rcll
rol
sub
pop
rol
stos
sub
and
std
xor
pop
fs
addr16
leave
sub
pop
mov
fldl
cmc
cmp
into
xchg
scas
fwait
cmp
aas
push
pop
mov
test
mov
fistps
mov
or
inc
mov
sub
xor
xchg
test
pop
scas
cmpsb
inc
stos
test
jmp
subb
add
xchg
adc
pop
or
cmc
icebp
cmp
pop
rcll
shl
cltd
sub
xchg
or
xlat
shl
outsb
jl
pop
cmp
mov
lret
xor
jae
dec
dec
sbb
pop
inc
cmp
inc
scas
out
xor
in
push
movsl
fldenv
mov
call
inc
insl
cwtl
add
xchg
add
jnp
inc
lods
aad
inc
fcoml
pop
push
lret
push
xchg
movsb
out
inc
imul
dec
sbb
out
icebp
aam
xchg
jns
repz
add
adc
das
jo
rol
dec
push
out
or
cli
cs
out
sbb
fstl
fistpll
push
mov
es
std
sbb
fs
or
orb
lock
rcl
outsl
inc
ja
mov
xor
cmpsl
xor
jns
xchg
push
push
mov
inc
pop
push
aaa
movb
jnp
lret
ljmp
ret
xchg
addl
mov
push
mov
jbe
dec
ljmp
data16
sub
pop
cmp
daa
jmp
mov
cli
lock
cmp
mov
fucomip
fistpll
or
add
enter
fwait
mov
ret
xchg
cld
shlb
je
cmp
mov
cli
inc
xchg
pop
js
or
xor
fsubp
lea
add
lods
dec
dec
adc
popf
cltd
gs
mov
int
push
sub
les
mov
in
push
pop
jl
stos
rolb
dec
jne
pop
cmp
aas
ret
mov
repz
adc
shll
pop
lea
sbb
inc
ljmp
xchg
mov
sub
inc
stos
jge
mov
movsl
cmpsb
pusha
pop
cmp
movsl
gs
sti
int3
adc
gs
mov
sub
xchg
loope
hlt
dec
lahf
add
xchg
pmaxub
xchg
sarb
call
pop
adc
pop
adc
lock
or
mov
and
std
mov
out
loop
push
xor
popa
insb
cld
xor
mov
sbb
pop
push
inc
out
adc
out
loope
orl
in
and
orb
and
or
xchg
and
test
and
into
mov
int
push
xchg
push
and
inc
dec
adc
lret
pop
popa
push
int3
int
pop
icebp
cmp
leave
mov
mov
push
test
adc
addb
add
push
jl
push
mov
lods
push
hlt
mov
int
loope
dec
push
dec
mov
cmp
inc
ds
pop
jecxz
mov
pop
icebp
aad
mov
repz
lods
outsl
or
dec
leave
adc
cmp
rcl
loop
sbb
sti
cmp
mov
cmp
inc
add
out
cmp
or
in
push
cs
or
dec
int3
in
gs
adc
and
icebp
imul
fcmovnu
jbe
addr16
pop
aaa
add
lret
repnz
out
enter
inc
pushf
jbe
jne
ljmp
xor
in
out
mov
pop
hlt
mov
dec
les
das
lcall
call
mov
cmp
stos
popa
sbb
mov
addr16
rclb
add
loop,pn
data16
rcl
dec
xor
not
cmp
mov
jne
xor
call
cs
fcoml
xor
and
orl
rcrl
adc
cmp
jns
into
xor
cld
pop
sarl
iret
test
pusha
out
xchg
iret
sbb
mov
std
mov
fcoml
sbb
cmp
pop
mov
aas
gs
lcall
cmp
xor
cmpsb
pop
xchg
add
arpl
inc
nop
and
push
js
or
scas
and
push
pop
xchg
scas
icebp
cmp
clc
sbb
pushf
rolb
mov
test
sub
mov
sbb
lret
fidivrl
stc
push
dec
jge
or
dec
push
push
lcall
push
adc
ds
mov
pop
clc
aad
test
mov
mov
fwait
mov
fmull
mov
push
xchg
adc
cwtl
sub
xchg
sar
mov
aad
jo
idivl
and
sbb
popf
or
adc
ljmp
cmp
hlt
daa
sub
xchg
movsb
cmp
mov
push
jmp
ljmp
loope
bound
or
into
loop
loop
xor
xchg
sbb
daa
jns
sbb
xor
stc
or
shl
mov
cmp
into
stos
adc
insl
imul
cmp
push
inc
push
popa
mov
dec
xor
jnp
xlat
add
cmp
inc
addr16
dec
dec
out
adc
into
push
dec
ret
pusha
mov
aas
sub
mov
add
out
pop
sub
ja
out
inc
sahf
jo
fcoms
inc
jg
mov
data16
mov
into
les
push
pop
es
ja
fucomip
sbb
pop
pop
decl
sub
lret
push
xor
aad
cmp
fisubl
xchg
repnz
xchg
jb
ss
mov
pushf
pusha
dec
inc
addl
mov
push
pop
data16
rolb
cltd
sahf
jo
cli
fdiv
ret
cmp
loopne
adc
add
mov
add
cli
sub
mov
cmp
pop
repnz
dec
mov
clc
divb
cmpsb
movl
fdiv
cmpsl
fnstenv
cmc
xor
and
fstpt
repz
scas
sbb
into
incl
push
jns
and
mov
pop
pop
enter
hlt
jb
imul
clc
xchg
data16
insl
jp
rol
jns
inc
lds
clc
ja
pop
fcmovnbe
outsl
jns
xor
and
mov
mov
cltd
mov
or
lods
cmp
mov
into
ds
add
xor
push
xor
icebp
outsl
adc
inc
incb
xchg
sub
pop
das
xor
sbb
pop
fists
enter
push
fisubs
cmc
xchg
addr16
daa
mov
or
sub
pop
stos
rcrb
mov
sahf
pusha
sub
xchg
popf
ljmp
sub
sbb
mov
mov
push
or
out
or
jecxz
out
rcr
inc
insl
pusha
push
les
mov
ret
mov
cmp
out
jne
jmp
insb
mov
jmp
cwtl
push
xor
cwtl
nop
ret
in
popa
rcl
xchg
pop
cld
push
sub
inc
rcrb
pop
ret
mov
add
int
push
fsubrs
xchg
sub
orb
repnz
sbb
roll
inc
jns
jecxz
jo
mov
inc
lods
enter
pop
ret
mov
std
xchg
stc
fwait
xchg
or
pop
stos
push
icebp
mov
loop
push
mov
inc
mov
insl
scas
repz
add
xorl
xorb
adc
aad
in
mov
js
cs
leave
fwait
xor
jnp
lock
sub
jno
sub
insb
push
jge,pn
in
mov
cwtl
sbb
fldcw
hlt
add
test
inc
push
in
sbb
xor
es
lods
mov
and
push
out
xchg
xlat
or
je
and
aas
cmp
jns
jle
jne
repz
or
push
mov
xcrypt-ofb
cmpsl
outsl
push
shll
adc
insb
iret
pop
je
outsl
lds
mov
pop
dec
xchg
dec
sub
stc
out
mov
aam
sbb
leave
jle
insb
int3
add
cld
lods
enter
pop
lock
add
loopne
jnp
dec
addr16
ss
clc
adc
aas
and
adc
in
dec
push
mov
rcll
xor
mov
and
int
insb
clc
jo
dec
movsl
and
jnp
xor
enter
pop
xor
scas
push
dec
gs
and
push
lret
jns
outsb
push
jb
mov
shlb
in
test
xchg
mov
daa
aaa
mov
sub
pop
int
mov
lret
jbe
out
fwait
pop
movsb
enter
and
and
dec
xor
scas
push
or
jecxz
addr16
cmp
sub
push
sahf
dec
mov
sub
ficoms
cld
popf
fwait
jne
int3
loopne
sub
inc
xor
lret
add
fidivs
icebp
adc
cmp
adc
out
out
inc
jne
pop
and
mov
in
shr
sahf
xchg
mov
push
fwait
xchg
sub
mov
lret
pop
rorb
int3
push
out
into
adc
mov
imul
cltd
popa
and
inc
mov
add
jb
hlt
push
or
pop
sub
cltd
mov
fiaddl
in
cltd
pushf
clc
xchg
add
dec
nop
call
jmp
mov
popa
push
pop
stos
scas
xchg
jge
cs
and
pop
orb
into
mov
in
mov
inc
mov
lea
push
jo
jp
loop
imul
clc
rcrb
les
xchg
push
roll
push
xchg
sbb
jns
push
xor
add
aad
mov
jmp
rcrl
test
add
lret
mov
adc
rorb
xor
jns
bound
dec
and
gs
fsubl
mov
dec
dec
push
or
bound
pushf
sub
and
into
movsb
sub
lahf
push
inc
xor
mov
and
nop
scas
jns
shl
test
push
xchg
fs
jp
rolb
jno
loope
cmp
subl
cmpl
cmpb
out
pop
xchg
movsl
scas
mov
add
xlat
xor
pop
jg
cmp
test
dec
cmp
add
inc
sbb
mov
iret
aaa
test
iret
test
and
scas
push
cmc
ljmp
xchg
call
mov
jmp
add
mov
pop
sub
mov
dec
movsl
shrl
jge
adc
or
inc
cmpb
mov
mov
mov
out
cmpsb
addr16
cld
sbb
or
dec
adc
dec
lret
scas
fildl
and
sbbl
add
les
cmpsb
jno
subl
and
lahf
cmpsb
jle
loope
cld
test
xor
inc
je
sub
sub
and
push
jne
movsb
testb
test
lret
aad
adc
jle
inc
fldcw
xor
cmp
adc
ljmp
sbb
lods
xchg
iret
jg
das
inc
fcom
sub
jp
or
jnp
orb
mov
mov
icebp
cmc
cmp
push
sbb
lds
push
pushf
fisubrl
mov
jg
les
stc
mov
cmp
sub
clc
rcr
popa
movsb
adc
push
idiv
xlat
push
fidivl
idiv
dec
adc
adc
mov
subb
stos
mov
ljmp
inc
dec
sbb
xchg
pop
mov
sbb
insl
mov
cwtl
movsl
cld
xor
test
adc
outsl
fcoms
outsl
orl
outsb
repnz
xor
mov
jne
pop
cmp
out
sti
pop
stos
push
adc
rclb
int3
dec
test
rorl
insl
push
loop
add
imul
mov
jb
pop
lret
stos
sub
pop
mov
sbbb
sbb
sbb
lods
sub
pop
or
mov
lds
mov
push
dec
mov
sbb
add
mov
ljmp
popf
jmp
mov
inc
mov
sbb
mov
mov
loope
mov
lea
lahf
enter
adc
push
popf
punpcklwd
xchg
loop
adc
rolb
adc
mov
push
pushf
pop
push
jae
adcl
mov
xor
test
push
movsb
lods
into
std
outsl
stos
call
insb
xchg
jnp
xor
push
xchg
loopne
cmp
loop
adc
and
xor
mov
and
fdivr
sti
insb
out
mov
sbb
jns
insb
hlt
inc
std
mov
popl
lahf
xor
jns
xchg
call
in
loope
jge
and
pop
cmpsl
xor
xorb
dec
nop
mov
inc
mov
mov
or
push
inc
mov
dec
imul
clc
sub
jnp
or
mov
mov
pop
xorb
inc
mov
mov
cmp
rorl
mov
jl
enter
loope
jns
pop
lods
cmp
unpckhps
adc
lea
mov
popa
xor
pop
rclb
rorb
cmp
xor
mov
imul
push
fistpl
shrl
sub
mov
lahf
ret
jecxz
mov
stos
jg
fsubrs
shrl
sti
bound
push
adc
js
in
loopne
daa
mov
pushf
mov
mov
pop
and
fidivs
std
sti
das
xor
push
jns
imul
or
push
inc
mov
popf
insb
xor
lods
push
test
jae
lods
push
shlb
push
ljmp
dec
xchg
jbe
jecxz
imul
fdivrl
fs
mov
cmpsb
cwtl
adc
out
add
adc
push
sar
inc
pop
inc
insl
dec
inc
call
inc
jae
aas
xor
movsb
mov
xor
cwtl
cmp
sub
xor
xchg
lods
xchg
mov
outsb
imul
frstor
test
dec
fisubrs
orb
add
mov
xchg
or
das
clc
sub
jns
call
or
dec
jl
sbbl
add
xchg
push
jl
push
int3
mov
push
mov
mov
and
roll
jno
loope
out
mov
xchg
rorl
pop
mov
or
call
inc
xor
mov
outsb
jl
scas
clc
cmp
fsubs
sbb
dec
in
push
mov
js
outsl
cwtl
push
jbe
adc
add
mov
loop
dec
aas
xchg
and
lods
or
aaa
adc
cs
mov
adc
push
test
loop
out
inc
gs
clc
lea
add
testb
xchg
mov
cmpb
sub
lret
pop
jmp
int
or
jb
sbb
movsb
or
and
popf
push
xor
pop
enter
icebp
sbb
int3
lods
and
vzeroupper
cli
push
mov
lds
jo
mov
mov
cmp
addr16
in
les
pop
sbb
lock
pop
lods
ljmp
add
push
adcb
push
insb
in
leave
sbbb
cltd
mov
movsl
int
sub
adc
cmpsb
sub
les
push
mov
jb
pop
arpl
in
push
push
jno
out
inc
call
mov
test
cmpsl
sub
mov
xor
stos
testb
and
pop
imul
scas
xor
xchg
inc
lods
pop
test
push
push
mov
pushf
mov
cmpl
xchg
add
sub
push
dec
push
enter
mov
addr16
xlat
mov
xchg
sbb
sub
push
sub
fwait
and
pop
out
inc
push
test
fstpl
fs
in
xchg
dec
mov
mov
mov
dec
push
lret
pop
sbb
insl
roll
scas
cmp
mov
aam
and
stos
std
shrb
dec
xchg
lcall
hlt
bound
mov
iret
ret
stos
or
mov
pusha
clc
pop
xor
leave
adc
dec
and
jne
test
mov
mov
orb
push
insl
sbb
out
pop
sbb
not
out
cmp
mov
adc
popf
inc
sub
frstor
push
push
pop
cltd
inc
insl
dec
mov
xchg
push
out
mov
into
popl
cmp
lahf
rcrl
or
jmp
clc
mov
pop
cmp
dec
mov
dec
or
data16
push
jp
lcall
mov
aam
lcall
ds
sbb
sti
pop
outsl
cmp
or
mov
sbb
sbb
ljmp
mov
adc
jecxz
sub
ja
mov
int
stc
pop
mov
xchg
jle
add
cmp
cmp
lock
push
cwtl
push
jg
inc
xchg
shl
in
shrb
ret
pop
add
add
hlt
sbb
xor
cmp
jno
mov
dec
aam
xor
aas
mov
ss
fwait
stos
aam
or
add
cmc
mov
insl
cld
imul
push
add
sub
call
sub
enter
cmp
movsl
xlat
pop
das
rolb
movsl
in
fcompl
jnp
mov
rcl
and
imul
xor
fisubrs
push
scas
xorl
and
dec
sbb
cmp
push
xchg
or
jbe
shll
loop
fcomps
pop
sbbb
add
push
bound
repz
jg
push
inc
mov
cmc
loop
jnp
pop
fiaddl
in
pop
add
stos
push
xor
fsub
mov
ficoml
flds
mov
fcmovb
pop
sub
test
adc
jae
dec
inc
mov
insb
ret
sub
inc
out
jnp
repz
lock
or
aad
push
add
aaa
adc
pusha
aad
lods
jns
jns
rcll
lret
js
push
imul
cmpsb
fwait
sub
mov
pop
leave
test
sub
adc
adc
jecxz
mov
movsb
sub
je
aam
mov
out
mov
js
sqrtps
sub
push
ljmp
outsb
pop
lret
clc
loope
inc
mov
test
mov
sub
sub
sub
insb
mov
dec
push
push
adcl
cmpsb
movsl
adc
cmp
mov
sbb
out
jbe
popa
sub
jo
push
shll
nop
ficompl
xlat
adc
fstpt
dec
and
pop
jns
sub
inc
jae
icebp
inc
xchg
mov
stc
mov
mov
imul
inc
loopne
sbb
sbb
and
cmc
iret
aad
inc
inc
in
adc
fwait
jmp
fists
dec
fs
mov
cltd
ret
cmpsb
inc
mov
xchg
add
jne
jb
loope
jecxz
divb
fstpl
pop
jns
in
lret
xor
shll
or
mov
lret
xchg
loopne
sbb
cmp
pop
sbb
inc
mov
xor
mov
aad
push
pop
sahf
adc
es
jecxz
cltd
lds
fmul
cli
and
fldl
push
aad
push
mov
xor
mulb
mov
movsb
sub
aad
int
lret
pop
xor
fsts
in
push
shrl
mov
popf
xor
addb
rolb
jmp
mov
xchg
scas
out
sbb
dec
jae
cmp
inc
jge
sbb
push
sahf
pop
sbb
pusha
or
cmp
test
add
subb
fdivs
aaa
cmp
shlb
adc
mov
pop
sub
add
add
adc
arpl
push
push
xchg
sbb
add
pusha
js
rcrl
xchg
cmp
test
add
adc
mov
mov
addr16
movsl
and
shll
jle
mov
push
popf
mov
nop
outsb
adc
and
pop
repz
in
inc
out
inc
arpl
mov
xor
loope
xor
xchg
dec
imul
das
fists
fldcw
lret
rclb
inc
xorl
add
xchg
inc
add
fsubs
xchg
xchg
popa
add
jne
add
or
add
flds
pop
and
jl
cmc
cwtl
and
mov
sbb
push
popf
ret
stos
lret
ficoms
dec
test
dec
dec
dec
cld
inc
dec
push
scas
bound
jge
and
jb
sub
imul
xlat
stc
rcr
pop
dec
je
add
xor
subb
cmpsl
test
sahf
insb
add
scas
sbb
ficoml
jge
test
and
idivb
gs
fnstsw
stos
and
or
jge
xor
xor
mov
mov
jl
jl
or
sub
scas
imul
sub
lock
aas
pushf
or
mov
mov
lret
in
jle
inc
ret
or
popf
xchg
cli
sarl
and
push
sbb
adc
xchg
jmp
cli
push
xchg
outsb
ss
sbb
adcb
andl
mov
clc
cmp
aaa
xchg
mov
mov
dec
outsl
insl
sub
leave
cmp
insl
mov
sarl
jmp
dec
xchg
fst
test
add
push
cmp
mov
inc
fildll
push
enter
aad
cmp
shll
pushf
sbb
pop
sub
aaa
add
dec
dec
in
inc
scas
jne
in
cld
call
stos
pop
out
xlat
repnz
mov
insb
mov
jns
gs
jns
leave
fsubr
loop
mov
add
mov
loope
sub
pop
xchg
or
jecxz
add
aas
mov
sub
adc
mov
imul
pop
je
dec
or
adc
inc
filds
jnp
test
orl
sahf
lea
mov
repz
inc
mov
mov
add
adc
test
sub
repnz
outsb
movsb
pop
fdiv
cli
loope
jnp
iret
lea
les
xlat
dec
outsb
dec
addl
and
sti
lret
lret
mov
mov
or
dec
lret
inc
inc
fwait
xor
out
lods
out
out
les
dec
jl
jl
inc
stos
scas
inc
sarl
insl
dec
push
in
dec
je
stc
mov
jae
ja
and
mov
cmp
xchg
lea
mov
add
scas
sub
jnp
add
sahf
scas
test
or
or
xchg
popa
pusha
fwait
xor
add
xchg
test
push
add
addr16
orb
xchg
pushw
rolb
adc
popf
repz
idivl
sbb
mov
sti
shlb
or
sub
ret
pop
push
cmp
dec
pop
adc
xchg
popa
cmc
movswl
add
movsl
shrb
out
rorl
or
push
mov
xor
in
mov
test
mov
mov
arpl
lock
push
js
inc
cmp
test
mov
mov
add
push
loop
std
js
or
imul
mull
addr16
jmp
pop
enter
jae
and
pusha
push
xlat
ret
pop
cmc
xor
loopne
mov
gs
dec
xlat
pop
in
sub
pop
jecxz
das
fnstsw
push
pushf
xlat
jno
push
push
in
xchg
mov
xchg
pop
imul
push
mov
scas
cmp
mov
fistpll
jge
stos
xchg
das
push
outsb
test
push
aam
sbb
lret
inc
jl,pt
push
push
scas
js
ja
movsb
out
adc
call
aaa
jo
push
push
jne
jl
pop
loop
cmp
scas
leave
lcall
push
and
aad
xchg
or
adc
add
lahf
pop
inc
shll
nop
jp
inc
mov
cld
pop
adc
scas
mov
lea
ds
jne
cli
add
jo
aas
rcrb
call
mov
imul
jns
or
inc
pop
pop
cld
jb
mov
call
loop
push
sarb
inc
jae
push
cmpsb
jbe
pop
mov
inc
fcmove
fmul
popa
jmp
cmc
xchg
sbb
mov
lahf
shll
insb
dec
jmp
inc
sbb
mov
pop
mov
sbb
mov
shlb
or
pop
icebp
xchg
pop
pop
inc
call
movsb
pop
sbb
push
lret
je
testb
xor
nop
lods
push
lret
or
arpl
cmp
icebp
sar
int3
cmpsb
mov
adcb
jnp
ret
add
xchg
dec
ja
fistl
xchg
and
js
mov
adc
pop
rcrb
jne
filds
pop
inc
notb
adc
mov
add
int
inc
push
repz
incb
fidivl
sbb
lods
sbb
ja
nop
mov
push
iret
pushf
inc
xchg
jecxz
call
mov
insb
neg
mov
aad
cmc
pop
inc
insb
inc
sbb
or
aad
cmpsl
shlb
rcll
sbb
mov
jge
cmpsb
xchg
mov
sub
sti
mov
xor
push
push
pop
push
or
xchg
inc
sub
dec
int
rcr
xchg
scas
shll
rcrb
inc
in
cld
or
jle
pop
push
aas
xchg
sahf
adc
jo
and
fldenv
cmc
push
imul
repnz
fcoms
pmaxsw
adc
lods
xchg
dec
add
add
loopne
add
mov
inc
fnsave
add
or
pop
mov
movsb
scas
xchg
lds
jp
jno
pop
mov
rol
fstpl
stc
aad
lcall
in
add
call
pusha
push
mov
or
xchg
inc
mov
rcrl
dec
fs
fcompl
movsl
mov
mov
xor
sbbb
pop
aad
out
out
pinsrw
es
bound
fistpl
lds
icebp
cmp
aas
mov
push
loop
mov
mov
xchg
mov
cltd
mov
pop
dec
pop
dec
push
xchg
adc
imul
sbb
mov
cmp
dec
call
pop
xchg
aas
xlat
pushf
pop
je
sub
and
dec
cmpsb
into
xor
popa
mov
xor
sub
jnp
pop
into
push
dec
inc
jno
xchg
push
or
pop
lcall
jecxz
jmp
or
mov
iret
xchg
pop
adc
mov
rclb
repz
test
arpl
scas
rcrb
pop
stc
xor
pop
fnstsw
mov
mov
push
add
mov
xchg
fcom
stc
mov
sbbb
test
jae
or
push
mov
iret
lret
or
mov
dec
lods
add
dec
push
dec
loope
jnp
or
sub
dec
arpl
arpl
add
insl
push
outsb
cwtl
and
mov
mov
fcom
fisubs
bound
mov
aaa
ds
fwait
xlat
dec
repnz
loopne
mov
inc
std
cmp
inc
jbe
js
adc
hlt
jge
add
add
jo
fs
je
leave
mov
sub
orb
mov
push
cmp
dec
loopne
jb
js
repnz
out
xchg
loope
pop
cmp
sub
aaa
loopne
sub
inc
mov
mov
aad
test
stos
xor
test
aaa
jbe
call
clc
adc
in
sub
cs
fcomps
in
pop
es
add
cmp
fxam
xchg
int
sbb
sub
pop
pop
push
xor
push
sub
or
pop
arpl
mov
adc
dec
add
cmp
and
iret
mov
popf
jle
xchg
cli
popf
in
mov
roll
pop
sub
add
push
inc
inc
inc
aaa
jmp
jg
xchg
cltd
adc
pop
fists
rcrl
rclb
mov
mov
mov
sti
inc
in
jecxz
add
cmpl
pop
sti
inc
jmp
jmp
int3
popa
mov
pop
dec
mov
mov
pop
in
std
fimull
add
push
out
sbb
and
inc
jecxz
negl
xchg
or
repnz
daa
shll
pop
push
call
push
mov
sub
pop
dec
clc
adc
push
xor
mov
push
pop
push
jae
or
repnz
cwtl
mov
in
scas
test
popf
dec
xchg
scas
pushf
imul
jp
fiaddl
jle
sbb
xor
out
mov
outsl
jmp
push
cltd
jne
test
xor
mov
dec
ljmp
pop
xor
xchg
popa
repnz
push
shrb
lods
inc
lods
lahf
inc
enter
cli
addr16
punpckldq
add
lcall
pop
mov
iret
into
cli
loop
stc
mov
sub
jmp
les
jp
or
cmc
lret
ret
add
fucomp
bound
push
sbb
inc
mov
or
xor
mov
test
mov
fnstsw
push
cmp
mov
loopne
cmp
dec
lock
add
inc
push
lret
push
dec
dec
and
xorb
icebp
das
and
lahf
clc
std
inc
xchg
outsl
pop
push
sub
push
lcall
shrb
inc
or
sbb
nop
xor
jnp
test
sarl
push
mov
in
adc
inc
push
pop
jmp
pop
int
ss
mov
sbb
icebp
aam
and
enter
es
mov
dec
sub
inc
xchg
adc
js
js
or
es
popa
stos
pop
insl
pop
mov
je
clc
pop
mov
addr16
mov
mov
and
mov
mov
mov
mov
repz
push
inc
lods
or
push
loop
pop
mov
adc
out
jle
jmp
aas
dec
mov
jno
insl
mov
inc
sub
out
adc
and
rorl
pop
scas
pop
arpl
clc
lret
inc
add
imul
pop
roll
fbstp
insl
jl
ror
test
aam
ljmp
mov
or
add
mov
xorb
bound
push
dec
movl
jecxz
jp
dec
test
mov
aas
stos
ret
fwait
push
jb
cmp
push
daa
rorl
xchg
call
push
rcll
pop
daa
fdivs
dec
add
divl
push
fstpt
call
mov
xor
lods
in
call
pop
xor
sub
roll
cmp
movsl
push
push
call
push
or
jnp
fisubl
jl
push
pop
fidivs
iret
sti
jbe
mov
pop
repz
mov
mov
xor
add
push
xor
in
aaa
cs
orb
test
ss
out
std
inc
arpl
mov
jp
pop
aam
sbb
fwait
icebp
cmp
push
aam
pop
divps
cmp
mov
fldl
inc
shrl
std
sbb
xchg
out
pop
push
rcrl
mov
lret
inc
sahf
dec
rorb
sbb
mov
outsb
fdivp
test
mov
xchg
sub
pop
adc
imul
daa
in
imul
dec
je
int
insb
iret
inc
mov
inc
loop
sub
prefetch
aas
mov
sbb
push
nop
cmp
adc
test
loope
xchg
out
pusha
inc
jnp
mov
xchg
sub
ljmp
neg
mov
pop
sub
aam
sbb
fistpl
fisttps
sbb
cltd
jb
jmp
push
xchg
call
jne
and
mov
pushf
jne
and
stos
jno
xchg
pop
push
fists
xor
mov
inc
push
pop
push
lcall
nop
int3
xchg
mov
outsl
arpl
jae
daa
ret
call
fistps
xchg
xchg
adc
test
loopne
adc
mov
mov
mov
jns
fcomip
dec
cmp
mov
cmpsl
and
adc
fs
push
dec
ja
add
mov
jge
sbb
aaa
lcall
jge
push
mov
lds
das
loopne
ret
outsb
sub
fcoml
fadd
aaa
push
and
xor
mov
push
in
or
lds
push
ja
pop
or
dec
pop
xor
jne
pop
add
sbb
adc
imull
jmp
pop
inc
xor
add
bound
mov
roll
jg
add
js
leave
bound
pop
jne
out
pop
in
stos
popf
mov
jae
pop
mov
or
xor
inc
das
test
push
fstpt
sub
add
mov
adc
int
mov
loop
and
stc
sub
imul
jnp
gs
jg
shrb
pop
out
das
lock
ficomps
xor
stos
or
ret
testl
xor
je
out
mov
add
loopne
cmp
or
or
xor
sti
push
pop
iret
jp
cmp
fiaddl
std
lods
jo
add
push
dec
dec
pusha
jnp
mov
subb
mov
cmp
je
cmp
dec
mov
and
outsb
sbbb
xchg
xchg
xorl
mull
or
xor
sahf
jbe
cmp
into
inc
stc
adc
cwtl
adc
movsb
test
into
mov
xchg
je
push
push
ret
or
in
cmpsl
dec
push
and
mov
add
ss
sti
mov
pop
scas
daa
cli
jne
sub
sarl
adc
and
call
inc
pop
js
imul
or
cmp
dec
imul
inc
cmp
icebp
pop
popf
cmpb
sahf
out
stos
push
xchg
in
dec
mov
jne
mov
inc
add
mov
out
mov
adc
xchg
scas
in
ds
mov
or
mov
leave
push
cmp
jae
sti
sbbb
or
pop
sub
out
loop
add
pop
adc
in
rol
mov
das
mov
mov
xor
rolb
subl
mov
test
xorl
mov
or
movzbl
push
mulb
xchg
ljmp
nop
pushl
ss
lods
add
jbe
jg
in
or
scas
lret
scas
sub
cmpsl
mov
sbb
mov
ss
jne
mov
jb
aas
jmp
pop
xor
push
mov
sbb
mov
lcall
std
pop
sti
adc
sub
aad
imul
add
ja
jecxz
adc
out
sub
daa
adc
jns
test
jne
les
xor
rolb
pop
popa
mov
fcos
sub
mov
sbb
pop
jnp
mov
movsl
sub
addb
sarb
xchg
or
and
jns
jmp
lahf
addr16
push
out
call
mov
inc
xor
test
cld
mov
lret
int
pushf
imul
sti
pmaxsw
data16
mov
in
mov
mov
aad
subb
jge
ret
sbb
cmp
mov
mov
mov
pxor
lods
cs
xlat
adc
push
into
fists
xchg
push
mov
pop
rorb
mov
xor
notl
ds
mov
xchg
xor
or
xchg
popa
repnz
into
adc
xor
adc
stos
int
xchg
mov
nop
xor
mov
add
data16
pop
lods
lea
xor
scas
rol
and
xchg
cmpsl
out
mov
push
pop
icebp
ja
sub
or
lods
jno
int
mov
outsl
filds
fisubrl
daa
daa
sahf
mov
nop
mov
adc
rorl
inc
adc
adc
incl
mov
pop
test
sbb
dec
lds
sbb
mov
mov
bound
fstl
pop
mov
pop
cs
push
or
pop
ja
mov
mov
push
jl
dec
jne
test
or
loop
stos
gs
add
pop
push
pop
adc
adc
out
int
mov
cmp
rclb
add
fildll
xchg
or
jle
fsubl
pop
and
out
pop
pop
lcall
scas
loop
loop
jne
dec
xor
test
mov
add
mov
inc
jns
xchg
add
mov
jge
and
cmp
mov
mov
jmp
rolb
fsubs
cltd
xor
push
xchg
rcll
adc
dec
cld
pop
test
test
pop
cld
test
xchg
push
push
lock
pop
push
mov
shrb
test
add
je
push
push
xor
jne
aad
pop
sbb
lcall
mov
arpl
fstpt
pop
mov
push
pop
imul
mov
adc
scas
mov
push
add
add
repz
or
pop
dec
pop
pop
subb
pop
push
clc
push
fbld
cmpsl
or
xchg
pop
movsb
xchg
stc
dec
mov
das
inc
ret
and
daa
ljmp
pop
dec
pop
mov
dec
in
popf
cltd
fistl
popf
mov
jp
shll
jns
jmp
xor
sbb
jb
cwtl
leave
jno
mov
xchg
cmp
stos
mov
iret
and
fsub
lea
or
cld
mov
mov
lock
push
xchg
mov
leave
xchg
fdivrl
jbe
pop
add
adc
in
dec
push
dec
test
test
adc
iret
inc
cmpsl
lea
das
push
fnstenv
inc
cmpb
and
rcll
mov
cmpsl
sbb
insl
mov
xor
mov
movsl
mov
push
mov
addr16
jns
mov
cmp
sub
jmp
dec
add
push
xor
mov
fcomps
xchg
mov
popa
push
cmp
or
mov
and
push
lahf
or
ret
mov
and
push
stos
push
into
jb
pop
outsl
push
push
into
pop
xchg
cmpsl
lock
lret
sahf
mov
jno
mov
ljmp
cltd
icebp
fnstsw
cmpsb
inc
nop
mov
pusha
test
mov
dec
inc
sti
ss
gs
pushf
cmpsl
mov
out
push
lea
bound
jmp
data16
add
jg
add
adc
in
or
jne
in
adc
call
movsl
push
adc
fidivs
mov
dec
xchg
pop
movsl
cmc
pop
ret
mov
fstpt
pop
jne
sbb
ffreep
shrb
popa
mov
push
scas
clc
xor
dec
and
std
shlb
jbe
jo
incb
dec
inc
hlt
dec
sub
aaa
js
icebp
stc
les
sub
xchg
cmp
mov
mov
sub
xchg
xor
repnz
test
cltd
mov
jno
mov
mov
cli
mov
fnstenv
rorl
pop
jg
pop
xor
aam
pop
xor
cld
sub
jo
push
jo
fdivr
fwait
add
inc
mov
cmp
dec
jecxz
dec
sub
fbld
dec
int
mov
imul
jp
adc
insl
sbb
push
shll
cmc
insb
sti
clc
nop
fstpl
add
push
sub
xor
push
cmovns
mov
pop
ficomps
push
xchg
mov
sub
xchg
jg
push
adc
xchg
lret
jo
in
push
push
xor
bound
sbb
push
divb
in
cmp
mov
stos
loop
mov
pushf
push
orl
mov
dec
leave
loop
push
push
mov
mov
fldcw
pop
pushf
cmp
xor
jg
test
sbb
mov
or
dec
dec
dec
xchg
inc
sbb
push
push
jne
inc
movsl
cmp
arpl
jne
mov
and
dec
push
test
dec
addr16
jg
push
mov
outsl
or
fimuls
dec
xchg
mov
ret
dec
scas
pusha
cli
push
lret
mov
aaa
fucomi
fstpl
push
out
test
lahf
mov
int3
cltd
xchg
cmc
in
out
push
cld
inc
push
cmpsb
dec
lock
lods
adc
xchg
push
jge
jne
push
xor
sub
mov
fcmovu
movsl
lret
out
lock
std
cli
loope
xor
mov
mov
cmpl
imul
repnz
aas
test
xor
cmpsl
pop
pop
nop
mov
ljmp
dec
test
push
jg
sub
in
push
jno
jae
lahf
cmp
fidivl
jo
mov
mov
pop
cmc
mov
pop
xor
mov
push
shll
ss
bound
js
inc
movsb
stos
negl
mov
and
pop
inc
js
dec
jl
jb
in
test
lods
outsl
add
cmp
dec
cmp
stc
cltd
call
jns
negl
sbb
mov
movsl
movsbl
mull
sti
rclb
idivl
xchg
int
mov
cmc
in
das
jb
inc
jo
cmp
rep
pop
xchg
inc
pop
inc
lret
adc
ljmp
inc
jb
int
xchg
sub
sbb
xchg
dec
jns
clc
and
leave
lock
sub
in
xchg
in
fwait
stos
insb
daa
jnp
sahf
and
lds
aam
out
and
sub
mov
inc
in
aam
mov
jb
or
push
shlb
sbb
xor
push
popa
cmp
lret
out
mov
sarb
and
mov
cmp
mov
data16
and
nop
test
shll
adc
call
push
and
fs
das
dec
adc
test
dec
push
adc
sub
cltd
cmp
pop
sahf
lods
inc
mov
test
scas
xor
xor
xchg
in
sbb
push
mov
jecxz
add
hlt
dec
xchg
cmc
in
mov
cmpsl
fdivrs
shlb
leave
cmp
rol
pop
and
mov
sub
fs
fldcw
in
pop
insl
sbb
stc
lcall
mov
dec
rcrb
mov
mov
arpl
mov
xor
icebp
inc
cmp
les
imul
cmp
mov
push
mov
push
out
lahf
es
xchg
pop
ret
mov
test
rolb
int
jp
adcb
mov
test
psubd
xor
cmpsb
adc
repz
gs
lret
dec
xor
and
or
ja
or
mov
pop
push
or
int3
clc
dec
inc
aaa
sbb
mov
mov
ss
pop
arpl
shll
or
jl
mov
cmp
lcall
into
lds
inc
cmp
and
das
scas
inc
fsubrp
add
jmp
push
push
push
mov
xchg
repz
fbld
xchg
ja
sar
out
enter
sub
popa
sbb
loopne
cmp
cmp
lret
mov
mov
pop
jne
xor
sarb
adc
ss
jbe
dec
pop
std
or
mov
mov
xor
pop
or
loop
mov
leave
and
push
sub
mov
mov
dec
ret
icebp
nop
and
mov
and
cltd
repz
pusha
loop
or
dec
mov
rolb
push
mov
jle
jae
mov
out
jnp
sti
mov
ds
push
add
jne
fldt
jle
xchg
or
in
addr16
xor
lret
jle
les
inc
ljmp
pop
push
test
ja
mov
mov
rclb
iret
lods
clc
insl
stos
setg
pop
scas
ljmp
xor
sub
xchg
xchg
testb
lds
sbb
sbb
mov
fsubrp
adc
jbe
sub
jle
cmc
mov
outsl
and
popa
push
aas
xchg
mov
inc
mov
pusha
cmpsl
mov
gs
push
inc
xor
dec
sub
cmp
mov
jmp
xor
and
test
cld
pop
lret
imull
fsubrs
push
mov
inc
enter
sub
xchg
pop
pop
enter
cmp
sbb
mov
mov
add
inc
shrb
test
mov
pop
fnsave
xor
cmp
cmpsb
push
mov
outsb
mov
xchg
je
lods
cmc
mov
daa
jbe
jl
mov
jns
ja
fidivrs
movsb
ret
ds
repnz
cmc
xor
jne
dec
pop
arpl
pop
jmp
add
cli
add
rcr
and
sbb
lea
ds
mov
fnstcw
mov
or
test
in
jns
out
jge
int3
mov
gs
scas
push
fwait
sub
xorb
std
mov
add
andb
movsl
lret
jl
xchg
push
nop
dec
aaa
or
cltd
ljmp
mov
test
sbb
ffree
push
mov
xchg
and
sub
mov
scas
lock
jl
pop
adc
in
aam
in
sahf
jmp
out
mov
sbb
inc
sub
fs
imul
xchg
cmp
stc
jge
pop
jnp
dec
sub
ljmp
inc
pop
mov
nop
gs
cmpsl
jge
popa
shrl
sub
mov
jg
push
cmp
pushl
lret
adc
gs
es
and
pushf
lret
cmpsl
cmp
xor
icebp
and
mov
dec
stos
add
movsb
cmpsb
loope
cmp
jne
sbb
mov
or
mov
jmp
movsl
addl
lret
jmp
mov
xchg
fstpt
jmp
mov
test
ljmp
fstl
movsl
rcrb
scas
aaa
adc
dec
movsb
mov
push
lahf
rcll
add
iret
mov
push
enter
lret
negl
lahf
push
cld
pop
cmpsb
jmp
cmpsl
inc
cmp
pop
pop
inc
sahf
fwait
xor
lods
add
jecxz
mov
xchg
xchg
adc
jns
inc
pop
test
das
xor
pop
popa
test
movsb
push
sub
xor
mov
enter
jmp
loop
movsb
out
xor
cs
push
dec
sar
test
push
and
xchg
mov
push
lods
clc
mov
pop
xchg
addr16
fadds
test
aad
insl
rcrl
and
imul
sahf
xchg
into
daa
stos
int3
test
inc
add
pop
in
iret
testb
adc
push
or
movsb
inc
inc
cmc
add
xchg
or
add
mov
js
jg
clc
cli
push
mov
scas
ret
xchg
into
pushf
call
sbb
mov
sub
mov
iret
inc
nop
fnstenv
cmp
jne
mov
adc
inc
inc
jbe
or
xor
xchg
mov
nop
inc
lret
xor
test
pop
cltd
std
jmp
es
mov
sbb
inc
fimull
or
inc
in
pop
add
add
icebp
add
in
out
cmp
in
inc
fistpl
fldt
mov
lret
or
xchg
out
shlb
or
fndisi(8087
iret
push
push
inc
or
rcpps
rcl
notb
cmp
fidivrs
nop
mov
mov
lds
inc
push
push
cmp
lock
repz
in
jg
mov
divps
jmp
lea
in
rcl
adc
sbb
xchg
leave
inc
in
cld
enter
inc
add
psubb
jp
mov
mov
repz
mov
mov
sbb
sub
int
push
mov
add
or
mov
dec
repnz
jb
movsl
jae
mov
movsl
fdivs
mov
xor
pop
pusha
bound
jmp
stc
in
pop
iret
push
gs
fidivs
inc
mov
movsl
popf
inc
xor
pop
jge
and
and
mov
popf
jb
xor
cmp
out
popf
push
sub
mov
repz
cmpl
insl
cmp
test
out
orl
push
cmpl
test
rorb
jle
and
lcall
mov
cwtl
lods
sbb
jb
sub
adc
into
jne
jne
lds
or
mov
inc
adc
out
push
rorl
mov
mov
les
es
lret
jecxz
inc
sbb
mov
cld
xchg
dec
jno
fsubr
mov
lcall
add
leave
sbb
pop
cld
sbb
sub
inc
popa
mov
or
or
lcall
cli
icebp
fs
or
loopne
lahf
and
dec
sbb
cmp
xor
aas
ds
ret
clc
push
push
aaa
std
or
mov
repz
sbb
std
int
jmp
or
jmp
fidivrs
sti
mov
cmp
ss
cld
out
adc
movsl
jecxz
mov
jnp
dec
mov
in
push
jns
jno
scas
mov
das
mov
outsl
push
mov
nop
xorl
cs
dec
inc
or
sbb
pop
lds
loope
xor
jmp
out
aas
lret
test
repz
inc
out
pop
sbb
mov
cld
lahf
in
fbld
or
push
sub
jno
inc
mov
or
call
xchg
mov
cmpsb
lret
jmp
sbb
and
and
push
and
jmp
clc
xor
sub
testb
scas
mov
shll
push
dec
cmp
loope
jns
pop
add
xlat
cmp
hlt
movsb
and
cmp
mov
xor
add
mov
pop
js
cmp
jle
dec
lds
lret
call
in
addr16
push
or
push
mov
mov
imul
call
push
mov
ds
xchg
aaa
outsl
daa
mov
inc
jne
fcompl
xor
or
test
movsb
mov
cs
jl
jbe
mov
jp
push
xchg
scas
cmp
pop
or
push
and
in
inc
ficompl
pop
jp
mov
lock
xchg
add
add
mov
jns
aam
cmc
ljmp
sub
sbb
insb
mov
imul
add
icebp
mov
mov
pop
out
jo
cmp
lret
sbb
inc
ficoml
xor
int3
xor
cmp
dec
testl
ss
std
mov
daa
push
mov
lcall
out
loopne
jne
dec
pop
pop
inc
jge
frstor
sub
xchg
dec
in
cmp
insl
adc
xlat
lock
call
movsb
rcrb
scas
imul
dec
fwait
rcl
subl
adc
and
mov
aam
add
movsb
add
pop
mov
pushf
mov
or
test
pop
cwtl
jle
cmp
mov
jb
jb
lods
in
int
jo
jno
repnz
mov
xor
mov
insb
addr16
cltd
cwtl
lods
dec
insl
inc
adc
bound
paddusw
xor
sbb
scas
mov
das
sahf
scas
add
int
add
loope
fstps
push
lods
and
mov
jecxz
xor
xchg
fdivrs
ret
icebp
push
ret
aas
inc
lret
dec
insb
xor
xor
pop
jbe
cld
and
pop
iret
lods
inc
jb
mov
arpl
mov
icebp
dec
data16
fcmovnb
xchg
inc
mov
sbb
add
cmp
and
push
pop
xor
mov
dec
adc
scas
or
aad
insl
xor
cmp
pushf
mull
lods
dec
pop
das
sbb
mov
ret
dec
pop
push
lock
in
jne
es
push
mov
cmp
push
gs
pop
mov
ss
cmpsl
lahf
insb
inc
add
aam
add
pop
and
add
push
sbb
jecxz
cli
adc
push
fbstp
push
cmp
lds
jno
rorb
sbb
xchg
mov
pushf
pop
pop
push
mov
sub
and
cmc
jp,pt
mov
push
mov
std
cmp
adc
je
outsb
mov
imul
shll
and
dec
loopne
adc
vmulps
lods
ss
inc
xor
pop
pop
das
inc
dec
xchg
adc
call
mov
xchg
jl
loop
mov
xor
pop
lahf
or
mov
mov
and
rcr
cmpb
mov
inc
loope
fsubl
mov
fistl
popl
inc
ret
sub
fildl
sbb
leave
aas
mov
adc
adc
es
sub
decb
and
inc
adc
rorl
out
inc
xchg
mov
push
stos
mov
xlat
mov
mov
inc
jnp
lahf
push
js
je
and
idivl
sbb
int3
jns
sbb
addr16
mov
filds
je
jmp
mov
cmpsb
cmp
cltd
loopne
inc
pinsrw
inc
jno
sbb
xor
xor
lea
outsb
push
xchg
jmp
test
xor
in
fcomps
pop
int3
call
or
movsb
in
push
fs
je
sub
call
cmc
int
outsl
and
and
jno
lods
adc
cli
aad
das
shl
loop
cmpsl
lock
add
push
mov
sbb
xchg
outsb
xorl
lods
jp
sbb
or
mov
out
nop
cld
xor
js
out
add
sahf
add
or
data16
cmp
shlb
sub
lret
cmp
xchg
imul
iret
inc
testl
xor
or
movsl
jp
jb
ss
rorb
mov
jmp
jb
outsl
daa
int
push
mov
jns
mov
mov
sub
cmpsb
iret
push
cltd
repz
pop
jbe
cwtl
mov
sub
mov
fisubrs
shrl
jecxz
xchg
out
jo
dec
sbb
out
dec
and
andb
pop
mov
jno
shl
mov
xorl
lcall
mov
cli
jl
pop
loopne
xor
mov
mov
out
mov
add
lods
rcrl
sahf
sbb
xchg
es
test
mov
mov
jmp
pusha
outsb
add
test
ret
aad
in
into
xor
adc
test
sbb
insb
jl
push
add
push
dec
sahf
inc
push
into
inc
daa
or
push
jae
inc
std
pusha
sub
mov
sahf
rcr
or
andl
sub
ret
push
add
pop
lret
ljmp
bound
dec
cmc
fcomps
cmp
xchg
out
testb
lret
sub
add
shll
pop
clc
sbbb
cmp
rcl
pop
loope
push
mov
dec
mov
sti
dec
xor
mov
push
aaa
in
cmp
xor
scas
jp
mov
aad
and
xor
jle
cmp
loop
jg
out
adc
push
mov
inc
clc
inc
jl
out
sbb
shll
sub
xor
sti
jl
dec
pop
mov
jo
jb
sub
scas
dec
imul
mov
sbb
or
mov
sub
hlt
adcl
sbb
stos
push
push
int
add
or
xchg
lea
in
andl
dec
xchg
outsl
ret
or
das
mov
roll
pushf
ja
aad
in
stos
adcl
movsb
sub
cmp
adc
jecxz
sbb
lret
xchg
lds
mov
movntps
or
cmp
xor
jl
add
shlb
and
dec
pop
stos
mov
aad
inc
mov
add
mull
dec
mov
jle
icebp
adcl
outsl
mov
dec
test
pop
cmp
outsl
push
scas
outsl
xor
in
adc
jo
ret
mov
les
lods
sub
jle
mov
adc
or
inc
inc
mov
bswap
out
or
cwtl
daa
dec
mov
push
pushf
lods
and
adc
dec
sbb
and
in
push
and
fpatan
push
dec
fnsave
hlt
xor
mov
idivb
push
dec
push
out
jl
inc
pusha
xor
cli
sbb
sub
jnp
ret
push
aaa
in
and
pop
repz
xchg
jp
mov
loopne
sbb
push
jge
jns
mov
pop
push
mov
push
bound
mov
add
mov
fcompl
adc
scas
loopne
jp
or
or
adcb
movsl
loope
outsb
jbe
out
push
ja
test
and
push
lret
pop
sti
jnp
call
push
sti
shrb
aas
out
mov
xchg
js
sub
inc
dec
testb
lea
insl
fs
das
and
mov
gs
call
out
mov
cmp
fimuls
insb
scas
inc
push
fnsave
pusha
add
iret
pop
data16
pop
les
push
fdivl
das
pop
jo
mov
call
and
mov
and
cmc
dec
scas
push
popl
stos
daa
and
dec
jmp
adc
push
aam
fists
jo
or
inc
out
jb
jmp
popa
or
dec
pop
orb
sub
gs
cmp
outsb
data16
aas
pop
or
and
in
pop
jmp
arpl
enter
cli
pop
adc
or
stos
sbb
push
adc
pop
lea
loop
gs
rcl
inc
and
mov
adc
icebp
outsl
pop
mov
sahf
cmpsl
in
push
or
add
mov
hlt
mov
push
cltd
jmp
add
mov
xor
ror
imul
inc
push
out
pop
inc
int3
sbb
js
stos
xchg
insl
scas
xor
leave
int
adc
inc
insb
mov
and
das
and
enter
inc
xor
inc
cltd
int
sub
dec
xchg
mov
aaa
push
push
loope
iret
or
mov
inc
jbe
out
sbb
sub
inc
inc
mov
es
fidivl
xchg
ja
adc
icebp
rcll
rcl
lcall
ljmp
mov
movl
add
je
hlt
insl
call
cmpb
pop
dec
addr16
lea
or
adc
jne
mov
mov
and
loope
dec
out
fldlg2
xchg
sub
in
into
adc
cmpsb
ja
sub
cmc
adc
mov
xor
fbld
lret
cmp
adc
xor
push
mov
les
ds
push
mov
jmp
outsl
pushf
fnstenv
insb
ja
mov
push
sbb
push
push
popf
push
and
push
jge
sub
mov
sub
pop
ret
inc
sarb
xchg
and
mov
mov
sbb
mov
ja
mov
cmpl
mov
cmp
mov
mov
test
sbb
loopne
hlt
xchg
sub
stos
or
push
pop
mov
stos
xchg
sbb
pop
out
fwait
adc
inc
pop
jp
imul
fisubrl
push
xlat
mov
test
dec
daa
push
sbb
loop
mov
in
pushf
mov
jle
pop
iret
popa
insb
ds
bound
movsl
xchg
mov
sub
loope
add
test
xchg
dec
ljmp
fstps
push
push
mov
rclb
or
lret
cmp
cmpsb
xchg
mov
dec
test
push
aam
push
fcompl
andb
iret
int3
pop
mov
xchg
cwtl
mov
and
push
pop
data16
addr16
xchg
or
push
or
enter
or
adc
std
lea
sbbl
fildl
out
std
and
mov
mov
adc
popf
cmp
cmpsl
or
mov
xor
dec
in
aaa
and
or
scas
jmp
sbb
sti
mov
stos
ljmp
cld
cli
push
and
inc
mov
or
mov
adc
testl
mov
fwait
adc
mov
or
lods
imul
imull
xlat
inc
ja
jno
adc
mov
jmp
mov
ja
nop
inc
jmp
jno
push
test
ja
sahf
data16
mov
and
mov
add
xchg
out
lods
sahf
outsb
jo
dec
xor
mov
daa
mov
in
loop
push
xor
movsb
adc
xor
shll
loopne
outsl
call
push
xchg
scas
xor
ds
or
cmc
cmp
push
xchg
outsl
clc
adc
adc
pop
rcrb
dec
mov
jle
fidivl
lea
jp
or
jge
pop
imul
imul
es
lds
inc
mov
cmp
xor
xchg
xchg
cmp
sub
testl
and
jg
daa
xchg
push
adc
jae
pop
out
pop
imul
xlat
pop
out
dec
shrb
jge
mov
xchg
fbstp
shl
fcomip
out
xor
int3
loope
inc
or
hlt
mov
repnz
xor
push
lcall
lock
aas
imul
cwtl
cmpsb
outsb
and
outsl
sub
xorl
mov
sub
inc
sbbb
push
mulb
fucomip
clc
lds
jmp
pop
mov
dec
pop
sbb
pushl
mov
mov
jb
cs
mov
enter
mov
jno,pn
aam
stos
mov
dec
pop
inc
cmp
cwtl
lahf
cli
xor
test
int
cmpsb
jne
loopne
xchg
mov
shll
or
je
sti
outsl
or
sbb
repnz
ss
fs
and
pop
in
or
add
jo
dec
loope
idiv
push
in
pop
xor
xchg
lods
mov
jl
sbb
insb
and
inc
and
and
test
sahf
inc
push
add
in
xorl
pop
adc
std
and
lahf
aaa
int
enter
sbb
loopne
mov
push
xlat
sbb
fcmove
cmpsl
sbb
sbb
adc
xor
mov
mov
fcmovne
xor
icebp
mov
enter
adc
out
push
mov
pop
xchg
xchg
or
inc
or
popf
out
rcrb
mov
mov
bound
jnp
nop
fdivrs
push
pop
les
es
js
iret
push
sti
mov
lret
test
xlat
into
divl
rcrb
pop
mov
mov
jb
xor
lock
or
add
fimull
aas
test
shlb
and
rolb
and
sbb
jns
loop
lret
shrl
cld
les
dec
lods
jo
repz
push
sbb
int
dec
repnz
icebp
mov
sarl
jno
jecxz
outsb
shl
push
repnz
mov
outsb
test
adc
shrl
js
insb
lret
arpl
cltd
jp
xchg
xor
xorb
mov
push
out
xlat
or
add
mov
icebp
jg
fwait
fwait
jno
sbb
imul
imul
lahf
xlat
cmc
lahf
push
mov
inc
sbb
xchg
xor
push
push
push
mov
xchg
rorl
inc
loop
test
nop
sbb
add
data16
and
jle
mov
mov
sti
or
pop
int
push
rorb
out
sahf
push
ljmp
loope
dec
adc
repnz
jp
icebp
out
icebp
push
xor
push
push
push
aaa
fs
dec
sahf
or
push
fsubrl
ljmp
lret
sbb
jo
clc
xorl
lcall
lea
pop
cmp
loopne
adc
int3
mov
lret
inc
cmp
loop
add
push
popa
sahf
arpl
out
mov
inc
fnop
add
cmp
pop
dec
mov
andb
mov
in
mov
hlt
inc
cmp
int3
adc
push
popf
fdivl
dec
mov
jp
sbb
jp
sub
mov
cltd
xor
push
stos
inc
cmc
cmpsl
iret
or
adcl
cs
sub
or
sub
sbb
xchg
cmc
sub
mov
xchg
mov
popa
sub
mov
dec
sti
adc
bound
fninit
add
out
cld
jmp
rorb
ds
and
or
pop
add
sti
roll
sub
sbb
and
sahf
and
jge
in
and
test
subl
mov
sbb
sbb
lahf
lcall
movsb
mov
loopne
or
cmp
sub
jb
or
ss
es
and
inc
lds
scas
frstor
pop
or
push
mov
cmpsl
mov
out
js
fnstsw
sub
les
mov
mov
pop
aas
nop
mov
sub
test
sbb
test
sub
outsl
push
push
push
popa
mov
sarb
mov
daa
mov
or
enter
shll
xchg
pop
sbb
popf
add
sub
mov
mov
mov
aad
or
or
lret
sub
xor
jle
jg
mov
fcoms
add
push
jo
cmpsl
inc
enter
les
clc
fmull
push
outsb
and
cli
ret
pop
xor
test
mov
and
scas
cmp
jmp
mov
incb
mov
rolb
inc
mov
scas
cmp
in
lock
push
add
sbb
xor
dec
out
mov
sbb
xchg
mov
pop
dec
cmp
dec
lods
mov
fsubrs
mov
daa
aad
into
imul
mov
mov
dec
incb
mov
dec
sub
mov
lods
fisttpl
daa
mov
sbb
mov
lret
add
adc
sub
mov
cwtl
cmp
sbb
mov
lret
jb
pop
fistps
in
stc
add
push
push
enter
xor
dec
loopne
fdivr
dec
adc
scas
sbb
ret
fldenv
clc
scas
sbb
pop
xor
mov
movsb
dec
aad
mov
cmp
ljmp
mov
ja
stos
ljmp
ljmp
sbb
outsb
nop
dec
push
add
xor
dec
lcall
mov
sub
add
add
cmp
mov
sbb
ret
cmp
add
mov
cmp
cli
shll
jne
gs
pop
dec
jno
and
adc
and
pop
mov
out
popa
jl
stc
push
pop
icebp
rcl
pop
dec
lahf
mov
pop
sub
lods
adc
outsb
cmp
shll
data16
adc
into
dec
lahf
cs
mov
cltd
cmp
pop
push
lea
jnp
divl
jmp
outsb
nop
mov
mov
sbb
or
and
lods
mov
push
dec
push
pop
cwtl
push
js
pop
leave
dec
pop
popa
orb
push
adc
fdivrl
addr16
mov
mov
sub
call
pop
xchg
ret
and
pop
jmp
sbb
aam
push
ds
cld
int3
scas
xchg
int
repnz
and
loopne
and
xchg
pop
mov
push
shlb
dec
sbb
pop
mov
aam
adc
jnp
movsb
loopne
push
pusha
int3
inc
inc
cmp
or
inc
mov
cmp
loop
icebp
add
xor
inc
jg
imul
out
mov
cmp
femms
push
ficoml
insb
ja
insb
out
mov
fldl
cmp
mov
pop
scas
stos
add
ja
jp
mov
jb
mov
dec
push
mov
cltd
push
pop
sti
ret
enter
lods
jno
adcl
push
loopne
jmp
sahf
repnz
sub
and
pushf
or
js
jb
mov
test
daa
mov
daa
xchg
clc
adc
sti
mov
and
enter
and
fiaddl
lea
mov
cld
test
sbb
jg
add
cmp
jmp
out
mov
sbb
cmc
push
push
stos
lods
push
mov
push
jbe
add
dec
das
xor
popf
add
xor
cmp
mov
enter
test
loop
outsb
pop
and
dec
xlat
adc
and
xor
std
add
in
gs
mov
jge
lret
test
std
or
aas
mov
rclb
popa
mov
or
mov
divl
imul
int3
movsb
adcb
mov
aaa
jne
and
ret
sbb
out
fsubs
dec
loop
cwtl
rolb
mov
movsl
pop
inc
add
movsl
and
mov
pushl
mov
sbb
inc
sar
jl
xchg
jno
xchg
sahf
out
xchg
gs
cmp
int3
jp
cmp
pop
sti
push
add
test
mov
and
cld
ss
fdivrp
mov
es
mov
jno
aam
sti
pop
out
std
loopne
fs
mov
ljmp
ss
mov
xchg
addl
xor
lods
adc
sti
dec
dec
cli
cmc
inc
jg
pop
xor
sub
mov
leave
imull
dec
pop
lret
out
adc
adc
inc
stos
jo
pop
and
leave
shl
push
call
xchg
mov
lret
mov
mov
adc
sbb
add
dec
es
bound
push
dec
movhps
dec
push
dec
fbld
insb
cmp
pop
and
inc
mov
sub
mov
daa
mov
and
xchg
jp
jae
mov
ljmp
jl
or
pop
roll
das
cltd
shrl
std
lret
jl
jbe
aas
mov
xor
int
inc
lock
dec
fisubrl
fucomip
andl
push
lds
jne
pop
sub
or
cmp
adc
lock
in
ss
cmpsl
pop
test
xchg
rorw
jp
mov
mov
ret
mov
nop
aad
mov
xchg
xor
jg
stos
push
and
repz
xchg
les
xchg
lcall
mov
push
andb
and
insl
les
lds
test
jo
fwait
sbb
add
add
cltd
popf
inc
xor
loope
lcall
out
icebp
pop
inc
and
je
int
push
fidivl
pop
sbb
xor
mov
mov
xchg
push
test
cmp
mov
sub
cmp
arpl
lea
mov
cld
pop
cltd
hlt
sub
sbb
jg
adc
jp
jl
xor
jle
in
adc
test
adc
xor
add
repz
loope
test
aad
flds
xor
inc
jne
nop
push
sub
dec
push
js
cmpb
int3
outsb
ja
fidivrl
insb
ljmp
movsb
or
fldt
aas
jbe
stos
xchg
scas
pop
aaa
movsl
mov
xorl
xchg
sub
ljmp
lret
je
cmp
adc
or
fiaddl
or
pop
mov
mov
xor
movsl
and
test
pushl
leave
loope
adc
push
sub
push
push
in
dec
stc
xchg
ss
sub
fwait
cwtl
aas
and
sbb
jne
enter
aaa
call
aam
pop
rol
sbb
push
cld
xorb
icebp
xchg
mov
dec
bound
cli
fcmovne
stc
push
dec
rcr
push
sbb
into
dec
daa
pop
out
inc
ficomps
pop
lea
jmp
mov
cmpsl
or
sbb
cmp
jne
movsl
gs
enter
mov
xor
inc
jecxz
outsb
jecxz
lret
aad
mov
sbb
mov
lcall
mov
rol
add
movsb
int3
aas
loope
sbb
adc
sahf
cwtl
and
aaa
xor
jecxz
sbb
outsb
rorb
adc
jbe
aaa
enter
fadd
jbe
dec
sub
lcall
and
sub
paddq
loop
loope
outsb
mov
out
jno
out
pop
es
outsb
es
arpl
aaa
xor
adc
sti
push
fisubs
push
and
mov
push
pop
cmp
inc
cmp
adc
xchg
out
popa
jle
ret
roll
aaa
or
outsl
rcll
jmp
xchg
fstpt
cmpl
dec
sub
xor
insb
movsl
pop
popf
jo
roll
cmpsb
mov
cli
les
add
sub
mov
xorl
mov
fsub
push
adc
or
in
movsl
cmpsb
arpl
jmp
dec
and
inc
push
leave
push
mov
push
dec
adc
cwtl
xchg
adc
xchg
xorl
int
dec
push
and
lock
and
pop
out
mov
pop
mov
fmulp
adc
bound
ss
popa
xor
push
mov
lods
or
jnp
mov
pop
jnp
mov
lock
xchg
add
cmp
or
pop
enter
push
ds
in
pop
imul
pop
rcl
nop
rcr
loope
xchg
mov
ficoms
or
push
jnp
jbe
into
sbb
pop
loope
adc
xor
popa
and
push
pop
sbb
imul
pop
lods
jnp
xchg
jb
scas
js
push
in
add
mov
vcvttps2qq
pop
mov
test
sbb
mov
fidivrl
in
xchg
sub
ret
xchg
arpl
mov
xchg
std
push
sbb
push
push
mov
mov
mov
xchg
xchg
and
in
movsl
repz
add
mov
ss
mov
stos
iret
push
inc
push
cmp
mov
bound
imul
mov
and
xchg
insl
pop
pop
pop
mov
xor
mov
nop
frstor
jle
cli
or
pop
outsb
xor
adc
and
not
call
fistl
dec
out
in
and
mov
leave
and
jge
sub
addb
aas
lods
mov
pop
arpl
out
and
sbb
dec
jno
idivb
dec
cmp
bound
add
in
xchg
push
xchg
push
pop
lret
pop
int
cltd
inc
dec
loopne
sbb
cmova
ret
push
jb
idiv
pop
gs
pop
fiaddl
loop
dec
mov
pushl
out
pop
push
ret
sub
rolb
nop
mov
sub
push
xchg
push
xor
jb
enter
ror
mov
and
fs
imul
inc
adc
test
xor
xchg
xchg
aam
mov
fcoms
std
ficompl
jne
xor
cmp
fsubl
sub
sub
mov
sbb
xlat
int
mov
mov
lahf
aaa
xor
push
stos
mov
push
popf
loop
or
loopne
mov
sub
jns
adc
mull
test
xchg
mov
and
or
outsl
push
mov
jbe
add
imul
mov
dec
lods
cmp
mov
adc
icebp
sahf
cltd
inc
lea
xchg
cld
in
cmp
loop
cmp
movsl
shrb
mov
or
inc
jmp
stc
fs
hlt
mov
push
xlat
mov
dec
shrl
and
adc
loope
sub
xchg
or
call
sbb
std
lea
arpl
outsl
out
cs
pushf
xchg
lret
nop
fsubs
jb
inc
call
pop
pop
cmpsl
adc
xor
fcoml
cld
dec
cmp
xchg
pushf
sbb
adc
inc
leave
jp
lods
push
in
xor
cmp
push
or
jno
out
or
mov
ficoml
bound
or
mov
mov
sub
pop
in
push
pop
cmp
jbe
in
xchg
das
sub
mov
push
cmp
inc
test
pop
xor
out
aas
sahf
pop
fimull
scas
xor
push
fsts
xchg
je
sub
jae
sahf
xor
dec
scas
push
xchg
sahf
xchg
mov
dec
jmp
jbe
or
dec
dec
push
pop
mov
pop
fildl
lods
fmull
sbb
add
push
jg
cmp
jnp
mulb
test
adc
test
or
and
xchg
lret
aas
hlt
cmp
fwait
cld
ss
out
ss
inc
jo
test
xchg
and
xchg
mov
mov
rolb
lds
and
jbe
mov
and
ud2
pop
stc
subl
cmp
dec
cmpsl
mov
pop
hlt
cs
aam
stc
pop
cli
fsin
pop
mov
addb
mov
mov
loope,pn
xchg
cmpsl
sub
xor
jge
mov
inc
in
dec
xchg
sbb
movsb
stos
xchg
gs
jle
popa
je
pushf
imul
xchg
sub
ljmp
sbb
ja
mov
mov
sbb
pusha
andps
sbb
lcall
and
insb
sbbb
call
sarl
in
push
cmp
cmp
pop
les
js
xor
lods
loope
imul
cs
pop
lret
push
adcl
xor
push
incb
cmpsl
push
popa
or
test
insl
mov
fmul
imul
push
test
inc
add
and
mov
sub
sbb
mov
mov
sub
sbb
pushf
ror
mov
inc
and
enter
push
push
shld
fdivrs
popl
cmp
lds
xchg
sbb
add
inc
lds
cmp
popa
xchg
fldl
jecxz
jecxz
pop
and
ret
testl
rcrb
add
pop
test
jae
fistpl
pop
push
into
add
push
int
push
mov
jne
test
mov
cwtl
adc
cs
mov
clc
lods
in
sbb
cltd
cmpsb
ss
inc
pop
movsb
fidivs
or
dec
or
inc
adc
adc
and
adc
mov
cmpsb
inc
bound
int3
jp
inc
add
test
or
xor
sbb
inc
xor
repz
jl
sbb
adc
lods
adc
cltd
das
imul
mov
stos
adc
test
mov
in
ja
aas
ffreep
jp
rcll
js
xor
rcr
out
fmul
imul
dec
arpl
adc
adc
scas
ret
and
pop
aaa
ds
mov
xor
sbb
xor
es
popa
push
dec
push
cs
mov
xchg
ret
pop
mov
rol
dec
xchg
mov
hlt
ret
sahf
push
repnz
add
rcrl
mov
push
push
mov
aaa
adc
pop
pop
ss
mov
push
or
jp
push
insb
in
dec
iret
arpl
cltd
shll
rolb
scas
je
daa
pop
fsubp
and
mov
dec
push
loopew
movsl
in
lods
and
lret
bound
std
imul
call
nop
in
loopne
xchg
adc
xchg
mov
inc
outsl
add
aam
repz
sub
call
rcrl
xor
neg
xor
push
xor
out
je
mov
out
cmp
dec
test
and
dec
xchg
mov
or
mov
int
jbe
push
dec
sub
pop
pusha
or
or
pop
andb
in
mov
out
jae
mov
xor
arpl
fs
or
out
mov
hlt
cmpsl
mov
mov
lcall
movb
cmpsb
lret
stc
insl
dec
stos
sarl
pop
aas
in
ljmp
sub
sti
inc
das
cmovge
pushf
js
jns
add
pop
lcall
mov
inc
int
les
dec
mov
leave
cmpsl
mov
inc
sbbb
repnz
into
dec
jmp
sbb
popa
ss
cli
stc
pop
pusha
mov
sub
mov
sub
cmpsb
test
out
mov
and
cmp
arpl
or
jbe
cmpsl
cmp
lea
es
xchg
lret
dec
mov
test
push
lcall
arpl
testl
jmp
sti
mov
cmpsl
insb
stc
and
mov
or
mov
xchg
out
push
iret
ja
arpl
cli
jne
or
fcoms
or
inc
cmp
mov
mov
jbe
adc
ss
push
imul
movsb
mov
mov
pop
mov
pop
jg
jne
out
sub
stos
and
mov
pop
movsb
imul
inc
push
push
jnp
mov
push
out
xchg
fdivs
and
adc
enter
adc
jae
ljmp
decl
inc
inc
mov
or
mov
mov
mov
ja
pop
rcll
jne
inc
scas
int3
push
dec
test
xchg
or
inc
jle
inc
push
push
mov
dec
xor
daa
sub
mull
rcll
pop
in
push
sar
xlat
shr
pushf
jmp
mov
test
pop
push
popf
sub
and
daa
mov
mov
imul
mov
movsl
aaa
dec
outsb
les
dec
scas
xchg
shl
xchg
adc
dec
fistl
imul
cmp
add
hlt
ficoml
enter
inc
or
jp
cwtl
icebp
and
js
cmp
add
cmp
jge
mov
lds
cli
pop
repz
aam
ja
jl
add
outsl
fwait
dec
es
insb
and
or
data16
repz
arpl
xchg
mov
sbb
cmc
test
jns
call
xchg
inc
shlb
cld
cld
lock
jge
xchg
dec
jnp
xchg
add
cwtl
out
jbe
sub
jle
cmc
mov
jmp
adc
mov
out
movsb
add
ficoml
pop
xchg
cmpsb
xchg
xchg
sub
mov
pop
dec
jp
cmc
dec
insl
mov
cmp
ret
arpl
jp
jo
inc
mov
inc
fcmove
jp
adc
enter
push
cmpsl
lahf
sbb
inc
es
mov
cmp
fldenv
and
mov
nop
int3
fiadds
fsts
mov
movsl
jns
push
insb
mov
lock
out
cmp
imul
push
stos
lahf
fbstp
and
cmp
mov
sbbb
aaa
clc
sbb
cmpsb
popf
fucomi
jno
gs
dec
insb
jmp
loop
movaps
test
testl
jp
mov
mov
xor
inc
sbb
popa
lods
mov
add
stos
xchg
dec
ss
add
test
dec
insl
xor
sbb
loop
jmp
jg
ljmp
xchg
inc
cmp
aad
lret
jecxz
cld
cmp
mov
les
test
jp
shl
decl
mov
inc
cmp
subb
xor
cmp
lret
xchg
push
mov
xchg
fs
add
shll
out
mov
or
test
push
and
loope
cmp
push
sbb
xchg
xor
cmpb
and
xchg
idivl
inc
adc
ja
out
fcmovbe
jo
sub
adc
pop
call
mov
sub
lcall
mov
dec
jnp
xor
jle
stos
sub
adc
xor
cmp
popw
mov
in
push
xchg
cmp
mov
inc
mov
xor
pop
xor
rcll
dec
dec
mov
mov
sti
push
aaa
xchg
or
jb
dec
int3
sub
inc
add
or
fisubrl
xlat
out
jmp
inc
mov
cmc
dec
or
out
jge
pop
xchg
pusha
imul
sar
jne
imul
cltd
or
repnz
add
or
scas
in
insl
je
jne
fnstsw
cld
stos
test
call
sub
sub
popa
jns
movsb
or
add
mov
push
addl
sub
xchg
dec
inc
in
loope
mov
cmp
pop
test
ror
adc
dec
test
out
push
cld
rol
jae
gs
add
adc
mov
lcall
mov
jecxz
dec
pop
inc
cli
cli
out
into
das
jae
out
sbb
pop
fwait
or
outsl
lods
sub
clc
bound
mov
ja
loope
js
and
inc
test
cwtl
adc
clc
iret
dec
and
into
inc
adc
and
ja
rcl
movsl
mov
cli
mov
mov
mov
mov
mov
xchg
add
lock
adc
out
pop
test
pop
cmpsb
inc
pextrw
insl
cmpl
iret
pop
call
mov
scas
popf
cmp
push
pop
inc
add
xor
pop
mov
ja
xchg
idivb
xchg
je
lock
fimull
sub
mull
sbb
cmp
gs
clc
pop
dec
imul
jns
sahf
mulb
lret
out
test
jmp
xor
ss
sbb
lock
aas
sti
cs
stos
lods
pop
pop
inc
xchg
cli
or
loopne
testb
pop
hlt
mov
dec
mov
mov
popf
rolb
ljmp
movsb
xchg
dec
pop
and
imul
push
inc
lods
out
stc
xor
jne
pushf
mov
or
adc
arpl
popa
xlat
mov
mov
pop
clc
mov
fisttpll
sub
ljmp
gs
cmc
bnd
xchg
inc
jg
pop
das
jo
loope
lcall
xlat
pop
enter
in
jge
test
repnz
ret
add
je
mov
aam
lahf
jns
dec
das
dec
push
movsl
sub
shll
push
cmp
add
iret
int
or
add
lahf
testl
cltd
jecxz
xor
xor
inc
test
mov
cld
aad
add
pop
mov
adc
push
pop
sub
xor
xchg
cli
leave
addr16
xchg
movsb
ds
jge
js
lock
enter
dec
dec
and
popf
movsl
sub
aam
dec
pushf
in
adc
fcmovb
inc
shrb
lea
dec
outsb
cmp
adcl
pusha
cmp
ret
sbb
popf
inc
pop
add
sbb
enter
dec
or
das
xchg
cli
pushf
shlb
into
jge
adc
push
mov
mov
repnz
insb
ss
fisubrs
movsl
fs
add
pushf
or
xchg
test
aaa
gs
les
or
outsl
faddl
popf
dec
sbb
das
je
pusha
les
mov
out
pop
scas
jle
pop
mov
jo
sti
lcall
pop
push
jne
pop
jg
test
imul
jle
and
ficomps
gs
aaa
inc
stos
loopne
aas
sbb
repnz
add
or
popa
ss
out
test
mov
push
xchg
adc
shl
into
dec
and
cmc
xor
add
mov
sub
sbb
adc
cmc
loope
fcmovu
mov
push
popa
mov
ds
arpl
adc
cmpsl
fsts
clc
lock
sbb
mov
mov
lock
icebp
fisubrl
xor
xor
jbe
or
aad
insb
push
inc
mov
bnd
dec
imul
pop
jle
lahf
xchg
iret
addr16
jg
les
cwtl
sub
fisttpll
sub
jne
rcrb
sub
cmp
xchg
add
stc
ja
inc
das
pop
add
hlt
cwtl
insl
rcr
and
insl
push
ss
imul
pop
ret
in
sub
push
sub
mov
adc
lmsw
pop
sarb
fists
test
aad
push
pop
mov
pushf
xchg
and
rcrb
fldl2e
adc
icebp
jnp
test
int
mov
push
popf
dec
adc
out
ret
sahf
or
ja
sbb
hlt
or
mov
sub
nop
cmpsb
stc
mov
bnd
fwait
pop
mov
jecxz
cwtl
ret
xor
shll
xchg
xor
shrb
push
inc
repnz
and
mov
mov
push
jb
movsb
add
addl
sub
in
adc
jo
jb
xor
arpl
inc
daa
jmp
loopne
adcl
xor
lock
popa
fists
push
mov
mov
push
cmp
ja
adc
mov
fnsave
fists
mov
fwait
mov
mov
xchg
fs
iret
xorl
and
sub
outsl
cmp
mov
xor
cwtl
cld
loopne
fistps
push
out
jecxz
outsl
cmp
cltd
xchg
out
outsb
push
pop
jmp
sub
mov
mov
add
xor
jo
jb
jecxz
incb
mov
jbe
sub
jg
lods
push
mov
cmc
into
ds
dec
sbb
cs
icebp
lret
jbe
push
daa
mov
in
mov
and
jbe
dec
scas
cmp
jnp
jmp
fcmovnbe
jnp
inc
mov
and
xor
and
add
push
out
cltd
jne
push
xor
add
lahf
in
add
inc
mov
push
or
jns
inc
xor
stos
jb
out
cmc
jmp
mov
adc
mov
push
add
fcmovnu
pop
dec
bound
or
mov
xchg
cmp
pop
out
ret
xchg
shlb
push
pop
lds
push
mov
add
pop
clc
adc
jae
cs
pop
jg
pusha
popa
add
sbb
out
and
add
cmp
out
jmp
xorb
mov
ss
je
mov
out
and
lcall
push
fs
repz
fcoml
cmp
pop
out
sbb
and
in
mov
sbb
js
xchg
cwtl
dec
repz
mov
cmp
repnz
pop
push
mov
mov
fcmovnu
xor
mov
adc
std
xor
jp
or
fidivrs
jmp
repnz
insl
mov
sub
jne
repz
test
adc
mov
jns
push
dec
pop
jno
lret
xchg
push
or
xor
stc
ss
pop
mov
xor
lcall
scas
movsl
lret
inc
adc
lods
in
fldcw
cmp
sub
jo
cmc
faddp
inc
adc
mov
cs
int3
movsl
mov
dec
mov
mov
jl
xchg
adc
fsubr
xchg
sahf
movsl
clc
inc
inc
ficoms
mov
mov
ret
int3
in
mov
dec
in
cmp
sbb
cmpsb
sahf
push
pushf
pop
mov
out
aam
popf
das
mov
pop
int
and
mov
and
sti
pop
stos
mov
or
xor
xor
add
inc
test
mov
mov
xchg
dec
dec
mov
imul
mov
aas
rorb
call
sbb
mov
mov
pcmpgtw
adc
add
cmp
and
push
jecxz
adc
xchg
mov
mov
es
shrb
iret
aas
pop
aam
movsb
pop
push
pop
xchg
lods
mov
in
fsubr
xchg
mov
ret
pop
mov
aam
xchg
gs
dec
fildll
das
jno
cwtl
pop
jmp
lds
in
in
cs
stos
mov
xchg
inc
adc
push
add
inc
arpl
sub
test
pop
js
jns
in
jb
mov
xchg
mov
lods
mov
mov
push
inc
mov
sub
xor
xchg
push
sub
jecxz
mov
inc
or
xor
fmuls
ss
push
cmpsl
lret
adc
cli
or
jl
cmpsb
stos
cltd
push
loop
and
bound
push
enter
pop
lods
push
and
mov
jecxz
je
push
sbb
mov
mov
inc
dec
add
shrl
call
xor
cmp
xchg
jo
sti
push
out
pop
lahf
jge
in
jbe
xchg
jge
mov
jecxz
gs
lret
aaa
push
jle
lods
adc
sbb
int3
and
push
mov
sbb
jbe
stos
lea
outsl
adc
das
sub
xor
mov
inc
in
sahf
repz
pop
lds
dec
jge
push
or
je
mov
push
cmp
push
xchg
flds
scas
or
push
enter
arpl
pop
inc
data16
cwtl
cltd
mov
insl
cmp
loopne
mov
lods
pop
fwait
pusha
leave
mov
sub
fneni(8087
subl
mov
xchg
nop
dec
es
repz
push
ljmp
mov
mov
in
push
mov
jo
jae
mov
addr16
push
sub
fwait
xor
xor
or
in
and
xchg
nop
mov
xor
mov
outsb
push
adcl
mov
scas
cmpsb
adc
js
push
out
cmp
xchg
decb
xor
lcall
orb
dec
push
sbb
adc
imul
mov
testb
inc
std
dec
ret
inc
das
dec
xchg
testb
ss
cmp
lea
add
cmp
mov
int3
or
not
imul
loopne
js
adc
aam
xchg
mov
pusha
sub
or
xchg
lcall
xor
shlb
jno
sub
mov
xor
daa
out
inc
adc
mov
pop
mov
ds
leave
hlt
push
cmp
out
and
rcrl
xchg
dec
jbe
jb
scas
sbb
add
mov
sub
pop
test
cmc
hlt
sbb
xchg
and
andb
ljmp
jne
adc
jnp
stc
sub
mov
mov
lahf
push
mov
sarl
cmp
andb
cmpsb
cmp
fldt
mov
sarl
dec
stc
adc
lahf
popa
lods
maxps
out
jp
lods
inc
push
out
jne
push
ret
inc
mov
test
inc
mov
aas
lds
out
js
ficomps
adc
cmc
shll
nop
xor
cmp
mov
xchg
rolb
mov
xor
sbb
pop
sub
push
js
xor
stos
pop
fcoms
and
aas
or
sub
adc
jge
std
cli
xchg
les
scas
es
mov
cwtl
jge
jbe
lret
xchg
dec
inc
push
in
xchg
nop
cmp
mov
leave
ljmp
add
loopne
fdivs
fwait
mov
push
pop
nop
loopne
add
mov
mov
add
aam
inc
pusha
or
arpl
xlat
loop
add
mov
outsl
fbstp
movsb
and
das
xor
pop
ficoms
sbbb
std
jno
push
das
push
xchg
aas
push
jg
vsubpd
mov
into
les
dec
add
adc
arpl
lret
add
adc
or
add
add
iret
and
sub
leave
call
sbb
mov
in
adc
ficomps
xchg
xchg
push
xchg
pop
std
push
mov
shl
out
adc
and
ds
mov
inc
jp
add
out
xor
imul
push
or
pop
in
push
dec
loope
cld
mov
ljmp
out
xchg
in
xor
std
mov
push
mov
ret
inc
jb
add
ja
or
or
pop
xor
pop
pop
mov
mov
ljmp
add
and
arpl
pushf
dec
jbe
and
std
mov
dec
adc
mov
loop
xlat
data16
outsl
cmpsl
hlt
mov
imul
pop
inc
dec
movsb
pop
cmp
xor
and
jecxz
daa
cmp
cltd
lea
scas
push
mov
sarb
mov
sub
mov
sbb
iret
push
lods
sbbl
or
nop
imul
mov
push
insl
mov
das
cmp
call
push
adc
jae
mov
stos
in
push
mull
hlt
inc
mov
jecxz
call
andb
mov
pop
into
clc
cmp
shlb
pop
sbb
stos
mov
inc
data16
dec
inc
shrb
sbb
lahf
sub
mov
loop
mov
inc
cmp
cmp
sbb
lock
mov
nop
movzwl
out
cwtl
loopne
cmpb
dec
les
fadds
pusha
xchg
dec
or
push
sub
sub
fdivs
mov
mov
mov
xor
push
push
in
lock
jge
stos
mov
sub
mov
gs
cmpsb
push
xorb
inc
inc
jecxz
xchg
imul
mov
inc
jnp
gs
mov
mov
mov
stos
xlat
pop
movsl
mov
or
movsb
ret
call
stos
push
pusha
pop
jge
inc
imul
incb
cmp
add
jecxz
sar
xchg
mov
xor
pop
push
and
mov
xor
add
sbb
fisubrs
and
xchg
xchg
fwait
sub
jns
insl
jecxz
mov
push
jecxz
push
jmp
mov
data16
loop
fistl
add
inc
pop
push
mov
shr
cmp
stos
add
lods
mov
repnz
ret
or
sbb
inc
daa
fidivs
in
cmp
xchg
xchg
push
lock
inc
ss
arpl
pop
cld
pushf
out
sbbl
fdivr
sar
lahf
mov
std
pusha
mov
mov
int
decb
std
das
int
in
xorl
sbb
or
shll
hlt
mov
mov
xor
gs
xor
dec
inc
and
adc
jge
fisubrl
fsubl
cmpsl
clc
dec
cmpsb
fs
and
mov
push
jge
jns
push
ljmp
and
jns
fsts
es
sbb
adc
inc
int3
leave
into
xor
inc
and
jmp
pop
pop
imul
inc
fistl
test
jle
aaa
sarb
iret
lahf
xchg
pop
adc
data16
cmp
aad
lahf
mov
jmp
adc
fadds
bound
dec
shll
mov
sbb
add
stos
test
insb
add
mov
and
ret
add
xchg
lret
cmpsl
rolb
inc
imull
dec
lahf
adc
jnp
sub
stos
cmc
sub
ret
lock
dec
lea
subl
or
repz
sbb
mov
mov
sub
mov
outsl
pusha
bound
sub
adc
sub
or
mov
jge
inc
icebp
and
cmpsl
push
xor
inc
aas
cmp
dec
bound
sub
addb
mov
push
test
repnz
outsl
in
dec
cmpsb
mov
and
or
push
cmp
jp
and
hlt
lds
pusha
loopne
iret
imulb
imul
aad
pop
orb
lods
jns
cli
mov
mov
adc
orb
and
mov
inc
dec
outsl
push
push
adc
add
inc
rolb
cmp
xor
adc
mov
hlt
fisubl
cli
shll
sbb
dec
fs
push
pusha
inc
pop
dec
int3
sub
jmp
xchg
dec
faddl
mov
push
fidivrl
shrl
pop
xor
xor
mov
in
addl
addr16
jecxz
mov
hlt
cmp
push
stc
dec
pop
or
adc
pop
inc
scas
pushf
mov
mov
mov
mov
gs
inc
sub
lcall
stos
mov
lcall
cmp
dec
jne
xor
mov
xchg
insl
pop
es
sbb
xor
mov
lea
addl
or
lea
push
test
out
jl
aaa
enter
out
inc
mov
sbbl
and
push
aad
xor
int
inc
sbb
mov
ret
dec
andl
mov
lret
push
or
pop
test
adcl
cmp
mov
jbe
inc
int3
in
mov
xchg
or
outsb
xor
cmp
shll
ljmp
fwait
setbe
mov
scas
adc
loope
cli
shlb
xchg
out
negl
pop
aam
nop
inc
fldt
orl
cltd
jl
and
testl
iret
shll
repnz
aad
sti
in
add
fildl
ffreep
jg
cmpsl
jne
mov
xchg
mov
fcmovbe
add
aaa
pop
xchg
cwtl
cltd
dec
xchg
es
out
callw
lods
sub
jb
xchg
lods
shl
out
xchg
or
dec
aam
sarb
stc
or
hlt
jg
add
mov
lods
gs
rol
sub
rcl
popf
inc
sub
mov
jmp
rclb
movsb
movsl
push
aad
shlb
or
mov
inc
fsubrs
inc
fisubrl
fstpl
gs
add
insl
push
cmc
insl
lret
fcompp
mov
notl
fs
es
or
pop
cmpsb
into
std
mov
pop
movsl
lret
jb
sub
mov
jbe
lret
fnstenv
stc
mov
xor
fs
pop
inc
mov
add
js
jl
pop
jne
xchg
adc
adc
pusha
mov
cmp
xchg
mov
mov
cmc
fs
mov
addb
mov
out
mov
cmp
popa
outsb
adc
push
xor
lret
in
aam
cmp
inc
jbe
xchg
out
dec
mov
and
add
stos
push
incl
or
push
testl
inc
and
lods
ss
scas
test
pop
add
jae
cs
push
or
mov
pop
xchg
jl
icebp
add
jmp
jecxz
cs
loope
leave
mov
or
rcrl
std
jle
mov
sub
jge
adc
push
ljmp
push
or
sub
fisubs
inc
sub
imul
add
sbb
aas
and
rcll
add
jp
xor
into
mov
gs
dec
sahf
lahf
adc
push
fstp
or
sbb
in
sub
inc
fidivrs
fldenv
daa
jns
ss
xor
and
push
leave
arpl
sbb
inc
inc
mov
pop
imulb
bound
push
xchg
xlat
aam
or
mov
cmpsb
lahf
and
out
mov
push
or
pop
ret
xchg
aaa
test
pop
icebp
add
ret
sbb
jnp
mov
pushf
sub
test
sarl
aad
scas
mov
rcrb
xchg
mov
shrl
push
mov
mov
mov
in
in
mov
mov
ret
stos
addb
inc
fldt
outsb
cld
xlat
ljmp
ds
dec
sub
xchg
mov
jo
out
or
iret
sbb
or
xlat
mov
jae
and
pop
xchg
fwait
aas
mov
popa
sbb
lods
mov
addb
insl
shrl
jmp
jge
scas
insw
jl
push
push
sub
sti
rsqrtps
xor
rcr
mov
cmpsb
mov
lret
mov
and
call
cmp
cmp
jp
mov
push
imul
lret
call
insl
out
xlat
jae
mov
sarb
int3
push
mov
aas
dec
faddp
adc
leave
insb
dec
push
out
mov
push
mov
jnp
out
or
adc
data16
adc
cmp
cwtl
pop
inc
inc
sbb
cwtl
sahf
pop
add
cmp
cmpb
add
push
xchg
xor
mov
mov
sbb
lret
je
adc
fiaddl
aaa
mov
mov
push
or
out
int
ljmp
mov
arpl
mov
outsb
lahf
pop
dec
stc
inc
mov
test
rcr
mov
mov
inc
or
hlt
popf
inc
mov
add
add
mov
cli
pop
fistpll
add
dec
sbb
rcrl
dec
dec
xor
add
mov
mov
push
mov
iret
jmp
mov
pop
loopne
jl
fincstp
or
out
cmp
xor
out
push
and
jmp
mov
shll
mov
pop
push
nop
add
xor
clc
pop
jp
mov
mov
pop
mov
lds
in
cmp
mov
stos
roll
mov
ja
add
dec
push
push
xor
or
test
mov
inc
xor
adc
cld
and
jo
popa
test
enter
add
mov
sub
inc
inc
inc
outsl
movsb
outsb
bound
fdivr
lds
cmp
std
daa
cmp
pop
inc
ret
xor
mov
dec
roll
dec
lret
jmp
fsubr
lods
push
leave
cmpsl
int
mov
repz
adc
xchg
ret
in
jmp
sbb
sahf
gs
mov
jnp
sub
mov
sbbb
add
imulb
bound
cwtl
mov
subl
mov
stos
jnp
mov
jmp
pop
or
les
xchg
sti
pop
in
dec
loopne
fiadds
loopne
jns
sub
pushf
adc
xchg
mov
mov
xor
jmp
cmp
mov
sub
xchg
add
mov
repnz
adc
add
pushf
xor
int3
cmp
xchg
xlat
popf
push
loope
arpl
jl
xchg
mov
mov
arpl
xorl
xor
or
gs
orl
xor
mov
adc
push
loope
add
lock
lds
cmpsb
mov
adc
and
add
push
inc
js
mov
push
pushf
lods
pop
sub
cmp
mov
pop
aad
sbb
xor
add
jno
add
scas
adc
stos
mov
push
loope
int
jbe
lahf
iret
sub
push
mov
xchg
stos
cmp
push
inc
fs
cmp
dec
ret
cmp
push
pmulhw
mov
nop
mov
ret
xor
stos
iret
sti
dec
adc
out
dec
xor
mov
sbb
jp
adc
or
cmp
xor
scas
lds
sub
stos
lret
popa
lock
jb
pop
xchg
std
sub
jae
sbb
pop
or
jae
sbb
lock
inc
daa
test
test
dec
shll
scas
js
push
fbld
xlat
sbb
loope
in
out
shlb
adc
sbb
leave
dec
add
pop
out
mov
push
xorl
pop
hlt
cmp
adc
test
xor
cmp
jge
lds
mov
xor
dec
dec
arpl
mov
push
jbe
push
rcl
mov
add
fnsave
xchg
jge
je
cmpsl
push
sub
xchg
scas
stos
hlt
mov
and
out
nop
imul
clc
nop
mov
adc
add
in
mov
jno
into
adc
jno
and
nop
dec
div
movsb
aas
pop
sbb
fdivs
aaa
cmp
scas
ret
test
mov
out
push
ja
shrl
adc
jno
push
xchg
insb
movsl
lods
xchg
inc
in
sub
add
pop
inc
pop
int
dec
add
adc
cmp
cli
hlt
lcall
xor
inc
sbb
roll
push
sbb
sbb
sahf
insb
add
or
inc
mov
fistpll
movsb
inc
jne
lret
aas
sub
or
cltd
or
cltd
mov
dec
push
insb
adc
fsubrl
or
push
stos
pop
mov
fcmovne
enter
xchg
int3
push
es
jne
cmpsl
xor
dec
fxch
push
jp
mov
or
push
sahf
in
mov
sbb
push
fwait
sbb
sahf
rcr
cli
push
cltd
cmp
std
aaa
repz
cmp
scas
lods
out
xlat
in
jmp
aam
sbb
ljmp
hlt
xlat
pop
lods
int3
xor
adc
loopne
daa
mov
lds
shl
pop
mov
scas
bound
dec
subl
jecxz
cs
sub
dec
jae
sbb
loopne
dec
jge
sbb
xchg
es
or
mov
sbb
xor
test
adc
nop
xor
pop
cmc
cld
mov
jne
cmp
xor
dec
pop
xchg
push
sbb
add
add
in
sti
mov
xchg
sbb
popf
int3
push
sbb
in
jmp
push
dec
jle
fdivp
jns
test
mov
jne
nop
adc
mov
xor
adc
push
aaa
int
adc
mov
rcll
dec
xor
mov
sbb
push
shlb
shrl
dec
std
mov
cld
sti
ljmp
mov
and
mov
xor
nop
sbb
cmp
gs
imul
dec
jnp
push
jge,pt
dec
add
test
sbb
ffreep
jno
rcrl
out
and
xchg
or
movsb
xor
mov
cltd
mov
cmpl
pushf
pop
stos
scas
and
jbe
jge
imul
cs
outsl
mov
jo
ficoml
lock
inc
out
add
inc
aas
lock
dec
out
ds
cmp
sub
ds
out
fstpl
stos
sbb
pop
stos
test
mov
pop
jbe
jecxz
xor
sub
lret
push
popf
pop
dec
popf
push
or
mov
inc
aaa
push
mov
mov
cmp
std
add
fwait
test
fadds
pop
mov
dec
aam
pop
inc
dec
loope
and
push
imul
or
pop
out
inc
pop
xorb
cli
add
inc
cmpsl
mov
sub
inc
mov
in
mov
cli
out
and
iret
pop
test
test
cmp
xor
mov
push
je
sbb
jl
push
jno
mov
pop
xor
rep
adc
mov
jo
xor
ret
cmpsl
pop
dec
mov
jbe
add
aad
sub
divb
adc
mov
pop
add
out
push
dec
mov
jge
test
popf
mov
adc
and
sahf
pop
std
dec
push
xor
lcall
cmp
lods
mov
jge
adc
rcl
xchg
mov
push
add
adc
in
fwait
sbb
lahf
pop
jae
addr16
mov
xor
pop
cs
push
mov
jnp
js
mov
cmp
mov
xor
in
popf
sarb
mov
cmp
mov
imul
mov
cmpsl
stc
adc
jno
sub
push
pop
ficompl
nop
inc
sahf
iret
int
dec
and
test
pusha
pop
push
sbb
adc
jg
notb
dec
nop
cs
loopne
pop
push
sahf
mov
sbb
adc
inc
adc
pop
sti
push
mov
cld
xor
adc
sti
fs
xlat
movsl
shrl
mov
fldt
xchg
sbb
les
pop
rcl
rorl
outsl
push
mov
popf
gs
les
imul
in
jg
mov
sbb
outsb
lahf
mov
sti
xlat
adc
les
sub
aas
cmp
ds
into
cmc
jne
insl
mov
or
aad
adc
or
ja
push
add
or
push
mov
int3
mov
mov
xor
sbb
ss
push
icebp
cmpsl
movsl
js
xor
add
into
inc
xchg
ret
add
cmp
test
mov
add
fsubrl
add
mulb
xor
jne
shl
rcll
sbb
fisubrs
fsts
imul
cmp
notl
daa
lock
ss
imulb
adc
fcomi
mov
xchg
popa
imul
cmpsb
sbb
sbb
inc
pop
mov
int3
pop
imul
jmp
into
testb
inc
xchg
adc
lods
call
lcall
repnz
iret
push
sti
stos
mov
cmp
jbe
das
arpl
aam
bound
repz
push
mov
mov
cmpsl
loopne
jle
pop
adc
aam
pop
mov
call
mov
sub
inc
mov
push
mov
xchg
call
sbb
jle
mov
sub
stos
xor
and
rcl
or
or
dec
push
stc
mov
sub
dec
stos
xchg
inc
loope
dec
test
out
xchg
pop
cmp
sti
pcmpgtw
cmp
in
push
xchg
xchg
stos
clc
rcrb
cmpsb
mov
inc
repnz
cmpsb
mov
pushf
pushl
lret
iret
icebp
das
ret
cmp
nop
jb
insl
adc
dec
dec
pop
imul
stc
sbb
mov
push
cmp
stc
mov
imul
stos
stos
ja
popf
adc
mov
jbe
sarb
dec
insl
dec
and
inc
or
stos
call
jnp
inc
sbb
cltd
movsb
cmpl
sub
mov
popl
rorb
dec
cmp
xor
cmp
inc
aaa
push
into
inc
lret
in
stc
adc
mov
and
icebp
shl
push
xchg
mov
sbbl
aaa
leave
adc
int3
cmpsb
movsb
sub
sub
or
jg
jmp
arpl
lods
movsl
movsl
rclb
cs
jnp
sbb
shlb
icebp
jg
mov
jp
js
adc
scas
ds
add
mov
dec
jb
jo
dec
xchg
push
mov
ret
xsaveopt
adc
mov
fmul
in
repnz
pop
movsl
je,pt
sub
repnz
ret
aaa
inc
push
in
push
in
xchg
pusha
adc
loope
sbb
cmpl
mov
dec
scas
sbb
sbb
xchg
adc
inc
mov
stc
inc
pop
addr16
in
int3
pop
sbb
lods
sarl
push
std
loope
test
dec
inc
js
jge
movl
mov
jbe
mov
shl
add
lahf
xchg
mov
adc
adc
fisubrs
repz
sbb
mov
enter
add
xor
cmp
lahf
lea
or
rcrl
insl
dec
fmuls
shrl
dec
sub
mov
cmp
out
cmp
nop
loopne
mov
xor
and
ret
popa
les
fcmovnu
jae
scas
jnp
cmp
sub
xchg
add
xchg
inc
test
inc
ljmp
ja
movsb
mov
aam
leave
not
or
outsb
push
daa
or
shll
arpl
mov
out
push
jp
push
ffree
add
xlat
fisttpl
mov
add
cmp
inc
cmp
inc
aam
xchg
sbb
test
je
loope
out
push
pusha
pop
inc
fsincos
ror
xor
lahf
add
dec
jbe
arpl
frstor
subb
xchg
cmp
pop
mov
loope
mov
xor
xchg
in
cmpsl
xchg
add
cltd
xchg
jge
push
popf
call
in
jne
jne
adc
mov
repz
cli
jmp
inc
jno
pop
add
or
idiv
mov
aas
sub
aam
xlat
jnp
leave
jge
inc
jge
mov
jge
loop
dec
out
and
add
mov
test
stos
pop
popf
sub
fidivs
and
outsb
lcall
mov
leave
jno
lcall
out
xor
es
jae
cmp
cmp
sub
jge
mov
cld
cld
xor
and
gs
and
inc
insl
icebp
cmp
aas
ljmp
dec
push
push
fst
icebp
fdivs
add
cmp
pop
inc
ljmp
adc
mov
das
into
cs
mov
push
inc
mov
in
insl
xor
push
sub
enter
xorl
int3
and
aaa
adc
arpl
test
push
fs
inc
daa
jle
lea
mov
push
ja
ds
test
xchg
jno
mov
cmp
insl
pop
inc
lea
or
gs
mov
fs
lds
out
scas
xlat
shrl
mov
add
or
fistpll
icebp
cmp
adc
adcl
pop
xlat
push
repnz
sub
push
sbb
and
aad
pop
sub
mov
adc
test
sbb
cwtl
push
lds
pop
leave
roll
sub
add
out
outsb
jecxz
push
adc
repnz
jmp
imul
pop
push
mov
fbld
cmp
ret
das
mov
popf
jne
mov
in
push
inc
imul
es
sbb
or
lahf
add
xor
andb
mov
dec
test
imul
xor
sahf
in
dec
movsb
adc
cs
push
loop
mov
or
mov
aas
and
push
xchg
out
lahf
or
jge
out
cmp
test
daa
in
test
aam
mov
aad
mov
xchg
adc
xchg
nopl
lret
xchg
dec
xchg
popf
arpl
repnz
push
xor
test
push
xchg
jno
sti
pushf
pop
outsb
jmp
push
pop
mov
jo
cmpsb
aam
cltd
lea
ret
jp
test
mov
subl
flds
jnp
inc
adc
call
outsb
out
lods
pop
push
mov
lcall
sub
int
loopne
arpl
inc
cmp
sub
cmpsl
and
stc
fists
xchg
dec
cmp
mov
lods
sub
jmp
mov
les
in
sbb
or
mov
jecxz
mov
in
fbstp
sbb
gs
dec
aad
adc
gs
pop
int3
arpl
lock
and
mov
and
sub
sub
fsubr
dec
push
mov
cmp
or
fnstenv
sub
push
lds
push
cmp
mov
cmpsl
jmp
or
sub
repz
inc
sti
sbb
and
pop
sub
lcall
leave
mov
mov
xlat
inc
mov
fstps
or
sub
pushf
fisttpll
xor
arpl
dec
lret
jp
outsb
mov
bound
mov
cltd
and
mov
dec
add
sar
dec
adc
cwtl
push
xor
sub
jb
stc
inc
cwtl
scas
pop
lds
std
mov
pop
andb
loope
mov
push
mov
add
lods
sub
push
out
pusha
and
in
mov
inc
lods
mov
xchg
fs
sub
sub
clc
push
inc
ss
mov
cmp
mov
lock
sahf
pushf
icebp
icebp
jp
xchg
popa
aaa
mov
leave
divl
mov
fidivl
imul
in
or
xchg
and
dec
sbb
inc
push
mov
mov
and
cwtl
mov
mov
push
lahf
cwtl
xlat
sub
or
nop
push
pop
inc
gs
or
test
fisubs
mov
add
cmp
lea
ds
xchg
mov
inc
xchg
add
movsl
mov
cmc
or
fidivl
add
clc
addr16
pop
mov
dec
pop
or
add
mov
xchg
test
cwtl
or
xor
jae
ret
dec
xchg
sbb
mov
pop
stos
sbb
jno
lahf
ds
mov
stc
sub
sub
dec
cltd
mov
xlat
sub
out
pop
sub
cmp
lret
stos
repnz
js
pop
and
enter
pop
dec
imul
inc
out
out
lcall
xchg
pop
add
fmull
in
shll
dec
jns
lret
aad
add
or
xchg
pop
adc
inc
jmp
add
mov
pandn
ret
fxch
mov
loopne
jp
mov
cld
fwait
cs
mov
bound
xchg
sbb
dec
ret
je
ss
icebp
jae
aad
rclb
lahf
sbb
cltd
cmp
loopne
fistps
pushl
jne
fcmovne
push
sub
incl
lcall
mov
sbb
inc
and
push
in
in
mov
sbb
mov
add
rol
into
fcoml
int
jge
mov
js
rolb
inc
jmp
dec
push
cmc
inc
mov
sbb
xchg
fimuls
push
test
into
adcb
dec
sbb
mov
dec
test
rcr
enter
pop
push
push
xchg
add
jno
nop
sarb
push
and
mov
popa
mull
sub
sub
mov
cmpsb
mov
outsb
mov
push
test
mov
rcrb
adc
imul
cmpsb
stos
jl
or
leave
lods
lea
shlb
lcall
mov
pop
sahf
mov
xor
cmp
add
mov
ret
jmp
jne
push
movsb
outsl
fcmovb
out
or
int
pop
iret
aaa
mov
inc
stc
or
or
pop
loop,pn
adc
movsb
pop
dec
push
mov
bound
ret
hlt
cld
cmc
mov
pop
sbbl
in
pusha
daa
cli
xchg
xchg
fdivs
in
mov
shrl
call
pop
insb
loop
or
jecxz
outsb
pop
into
fwait
jno
mov
cmp
xchg
clc
insb
lea
je,pn
shrl
xchg
pop
lret
xor
sbb
or
jl
incb
add
inc
pop
jmp
out
mov
lock
rol
mov
mov
das
adc
cmp
rcl
fisttpl
jl
or
cmp
cmp
lds
fldenv
push
add
test
stos
mov
add
loope
xchg
xchg
in
cmpsb
movsb
xchg
dec
xor
push
push
fbstp
adc
mov
in
in
and
lcall
mov
stc
jmp
mov
inc
adc
enter
pop
lret
sub
dec
or
sbb
jecxz
jp
iret
mov
mov
push
les
in
sbb
loop
mov
call
push
cmp
adc
jne
mov
push
inc
fisubs
dec
push
fldl
inc
mov
push
pop
shll
movsl
mov
repz
icebp
add
rorb
arpl
cmpb
adcl
cmp
and
cld
insw
fldenv
imul
jp
test
jnp
sarb
dec
test
ds
popf
cmc
ds
ret
and
inc
push
xor
inc
push
push
sahf
xor
xor
hlt
fbstp
push
xchg
pop
or
cmpsb
mov
das
or
out
pushf
lcall
sub
xchg
pop
inc
scas
dec
in
inc
bound
loop
rolb
lahf
xor
mov
roll
movsl
icebp
arpl
xchg
bound
clc
sbb
mov
add
in
dec
pop
dec
aad
fnstenv
xchg
cmp
fcomi
sub
cmp
iret
or
sarb
and
sbb
jo
ss
lods
out
fmulp
scas
stos
push
daa
aaa
in
sub
xorb
or
int
dec
call
cltd
in
mov
mov
adc
cmc
lods
sar
inc
into
mov
sahf
stos
mov
inc
popa
out
scas
repnz
mov
dec
out
mov
pop
lahf
xchg
popf
jns
ja
rorl
outsl
mov
add
mov
dec
inc
test
fcom
and
jno
ret
aad
in
jmp
dec
ret
sahf
cmp
aad
mov
pop
sbb
mov
imul
setp
jnp
fldl
dec
inc
out
mov
xor
outsl
aad
jns
xor
pop
addr16
mov
pop
mov
cwtl
sbb
sbb
out
loope
shll
rolb
cmp
lea
loop
pop
in
popf
inc
popa
cs
and
or
iret
divps
das
cmp
fnstcw
pusha
adc
ljmp
mov
pop
lock
mov
add
jle
popl
fiaddl
popa
pop
pop
pop
repz
inc
pushf
mov
shrb
arpl
pop
push
jb
in
sbb
cmp
cmp
mov
mov
inc
mov
push
mov
cli
jbe
push
dec
dec
out
dec
add
jle
jmp
imul
mov
mov
out
jb,pt
pop
and
mov
sub
or
fnsave
in
aam
dec
mov
test
in
push
insl
scas
shl
into
scas
in
dec
int
pop
jno
and
cli
mov
test
add
into
xchg
es
imul
xor
xor
mov
bound
mov
add
lods
cmp
or
stos
dec
mov
repnz
mov
mov
aad
or
xor
mov
data16
loopne
lcall
data16
push
xchg
imul
mov
inc
pop
jae
xchg
adc
xlat
xor
lcall
js
out
mov
das
jns
int3
pop
push
lods
xchg
xor
test
in
cli
je
and
adc
pop
sarb
xchg
jp
rorb
push
push
fcoml
outsb
add
sbb
jb
push
add
mov
or
add
fs
mov
ret
mov
les
sub
mov
into
mov
repz
fnstsw
xchg
aam
or
sbb
fsts
push
pop
xlat
rclb
ljmp
add
xchg
sub
cli
rolb
lock
inc
lock
sub
pop
mov
dec
popf
loopne
loope
push
add
jno
adc
or
pop
push
push
test
loope
inc
scas
dec
adc
pop
jns
pop
cvtps2pi
imul
push
xor
push
cmp
mov
adc
repz
mov
outsl
sbb
out
sub
lcall
das
lods
mov
sub
fadds
in
xchg
lds
lods
mov
int
dec
add
jp
les
mov
mov
cs
pop
mov
frstor
jge
cmc
push
sub
and
mov
in
icebp
mov
sbb
sub
int3
mov
std
pop
mov
or
call
stc
push
push
push
jns
stos
cs
jecxz
mov
adc
iret
mov
sbb
in
or
and
mov
sahf
pop
mov
or
jae
cwtl
loopne
jae
sbb
lahf
sub
fwait
xchg
outsl
rcr
sub
push
xchg
mov
mov
stos
jecxz
fistl
xchg
or
jge
outsb
ret
fadd
mov
fs
mov
popa
dec
adc
lret
mov
es
imul
mov
inc
fs
fisubrs
mov
mov
xchg
sbb
cmp
out
adc
xchg
test
mov
mov
mov
lret
rolb
xchg
xor
sti
data16
mov
mov
daa
dec
stos
mov
xchg
mov
adc
test
imul
cmp
mov
aam
ret
mov
hlt
adc
cmp
mov
add
jno
inc
nop
out
cmp
les
lret
inc
dec
pop
mov
pop
cltd
mov
popf
add
xor
inc
cmpsb
stos
aam
sti
jle
lcall
neg
aas
ret
cmp
dec
push
dec
adc
repz
inc
sbb
mov
sub
cmp
and
push
push
bound
fistl
cmpsl
fwait
jg
mov
cmpsb
sub
lahf
and
xor
pop
push
cmp
fisttpl
mov
lea
pop
cmpsb
xchg
orb
clc
lret
mov
int3
pop
mov
aaa
lds
push
fmuls
xlat
and
outsb
pushf
pop
pop
xchg
jp
or
adc
mov
and
mov
test
dec
leave
outsl
xchg
pop
push
les
jl
lods
adc
and
push
cmc
nop
fstl
out
mov
push
push
mov
lds
sbb
fsubl
aam
dec
ret
pop
jp
sbb
inc
xchg
and
dec
fistl
sbb
sbb
inc
xchg
fistl
aas
loope
ljmp
sbb
push
cmp
leave
sub
pop
loop
adc
bound
rcll
sub
mov
inc
adc
xor
jb
popf
sti
mov
in
fcoms
mov
aam
clc
fistpl
add
bound
pop
add
fbld
sbb
dec
movsl
mov
jecxz
add
xchg
shl
dec
rcrb
jp
in
adc
scas
xor
jae
stos
push
dec
xchg
inc
dec
nop
divl
sbb
scas
scas
push
mov
xchg
add
ja
popf
inc
in
adc
repz
popf
stos
adcl
mov
subl
test
cmp
push
jg
dec
and
inc
and
mov
fsubr
xlat
cmp
push
xor
push
mov
sti
pop
lods
pusha
popf
add
imul
test
mov
enter
mov
push
out
out
xchg
dec
ja
mov
mov
fwait
int3
in
and
sti
mov
arpl
and
repz
jnp
inc
shl
testb
jecxz
shll
add
les
and
ljmp
rcll
add
xor
les
pop
mov
imul
xchg
leave
sub
mov
ljmp
aad
adc
and
xchg
jo
sub
jle
pop
xchg
fs
subl
into
dec
cmpsl
sub
shll
cld
sbb
shl
mov
mov
outsb
daa
mov
mov
jo
fwait
imul
int
or
and
dec
sbb
push
std
xorl
enter
jecxz
mov
push
or
enter
cmpsl
mov
nop
sbb
lea
pop
fcompl
iret
in
adc
xlat
jecxz
or
hlt
push
ds
dec
iret
shlb
cmp
insb
sub
js,pt
test
and
lods
hlt
jp
ljmp
in
es
xchg
call
and
aas
push
dec
leave
out
fcoms
addl
sub
xchg
inc
push
iret
mov
lock
push
lahf
test
and
das
fcoms
pop
icebp
sub
iret
lret
cmp
sbb
popaw
and
push
dec
sub
mov
push
dec
and
add
popa
sti
out
lcall
push
aam
out
pop
shll
mov
and
call
xor
dec
xchg
xchg
and
cmp
pop
mov
js
inc
and
adc
data16
jae
inc
mov
pop
jmp
ficoms
dec
and
stos
jbe
or
pop
xor
repz
add
cld
insl
test
ret
mov
push
imul
ror
xchg
mov
sbb
pop
pop
and
add
mov
bswap
fiaddl
jnp
jmp
ficoml
mov
sbb
jp
fisttps
loopne
adc
dec
jmp
loopne
add
mov
jne
xchg
pop
adcb
mov
cli
mov
mov
adc
fistpll
mov
add
pop
adc
adc
push
stc
mov
xchg
addr16
lds
arpl
sahf
sbb
loopne
cs
inc
cltd
movsb
and
and
negl
sub
or
scas
mov
mov
lds
mov
jg
jns
mov
jne
stos
es
mov
popf
xchg
ret
dec
push
jle
sbb
sbb
push
inc
mov
nop
sbb
pop
pop
jnp
sub
lds
test
into
add
adc
scas
mov
lret
fstps
aad
ret
mov
pop
push
mov
xor
in
mov
xor
push
sbb
mov
xchg
and
mov
push
scas
dec
inc
push
cwtl
out
ss
ss
roll
sbb
sbb
inc
out
mov
lods
jmp
cwtl
mov
sub
mov
repnz
cltd
push
inc
mov
lock
scas
inc
push
repnz
adc
xorl
sub
test
lods
cmp
jp
lea
out
jge
in
lcall
cmpl
push
ss
sahf
stos
jae
inc
xor
dec
mov
imul
sbbl
push
movl
push
cmp
aaa
aas
mov
adc
or
xchg
out
inc
rorb
ret
enter
sub
pop
aaa
push
mov
mulb
testb
icebp
movsb
clc
mov
cmpsl
ds
and
sub
rorl
in
jge
scas
push
inc
xor
push
and
icebp
xor
xor
cld
push
ret
xchg
xchg
mov
inc
push
jno
cmp
test
or
pop
jbe
mov
shlb
sbb
orb
or
xlat
enter
in
fwait
push
sub
and
aam
sub
loopne
dec
fsubrl
mov
pusha
and
and
ljmp
pop
xor
addb
or
push
int3
jns
push
xchg
and
inc
arpl
sub
or
jo
sahf
in
sbb
pop
or
pop
mov
in
dec
pop
or
daa
cmp
xor
lds
and
repz
loopne
imul
and
outsb
mov
pop
fwait
imul
xor
mov
lods
mov
cmc
js
cli
inc
adc
into
jmp
xchg
adc
sbb
call
sti
pop
pusha
mov
xchg
push
or
scas
cmp
ljmp
incl
cmp
xor
or
sbb
push
and
mov
mov
adc
lods
mov
loop
sub
sahf
mov
inc
mov
push
test
fdiv
out
mov
jmp
out
mov
mov
and
xor
cmp
sarb
lock
pop
jle
fcoms
test
scas
pop
movsl
test
inc
or
cmc
or
lahf
cmpsl
xchg
adc
in
mov
pop
mov
cmp
adc
sahf
fbstp
xchg
out
enter
add
fnstcw
fisubrl
ds
in
xor
icebp
inc
test
fistpll
push
dec
ds
sub
adc
fbld
adc
pop
stos
in
adc
sub
xlat
dec
push
and
jle
sahf
out
xor
jmp
jp
ficomps
and
fstps
movsb
insb
stos
shlb
cmp
cld
inc
sub
out
xor
sub
and
adcb
pop
inc
mov
and
test
aas
cmp
sbb
loopne
mov
mov
int
jae
jnp
push
sbb
push
rorb
jl
je
out
imul
mov
psubb
test
aaa
xor
cmp
sbb
xchg
sub
or
in
lcall
mov
mov
jae
es
call
cltd
call
pushf
sbb
dec
adc
stc
add
das
stc
lret
pushf
push
flds
hlt
xchg
aad
inc
xchg
mov
push
or
scas
cs
cmc
dec
dec
adc
or
and
cltd
jnp
jae
mov
mov
fistps
dec
fs
gs
addr16
mov
sbb
inc
jecxz
jle
insl
test
int3
cwtl
call
push
push
xchg
add
mov
jbe
outsb
ljmp
testb
data16
testb
insb
movsb
mov
mov
rcrl
shrb
sub
cmc
add
pop
popa
ljmp
stc
add
pop
sub
push
cmp
ret
push
mov
orb
sub
xchg
mov
mov
xor
inc
dec
in
loopne
je
mov
push
cmp
jns
mov
add
dec
jl
xor
jb
test
sub
ret
aas
mov
mov
mov
adc
cmpl
xchg
shrl
insl
sbb
xchg
popf
mov
popf
mov
les
je
cmc
call
enter
stos
mov
scas
and
xchg
dec
adc
mov
test
pop
int
fwait
adc
mov
jne
add
xor
mov
aaa
and
mov
add
in
fwait
or
adc
cwtl
xchg
push
inc
jae
cwtl
lods
scas
inc
dec
or
jp
cmp
jl
xchg
xchg
mov
pop
aam
ss
mov
sbb
dec
fisubrl
dec
iret
stos
sub
cld
mov
mov
sub
sub
jge
push
ret
xlat
ror
inc
lock
popa
cs
mov
mov
add
pop
adc
roll
das
fimuls
sbbl
push
xor
dec
push
fistpl
mov
call
dec
jle
lahf
fucomi
pusha
push
inc
in
dec
movsb
sub
aam
jge
sbb
cmp
cmp
mov
clc
sbb
lock
jmp
xor
sbb
int3
mov
gs
leave
jae
or
jb
leave
ret
inc
push
jns
mov
push
lret
mov
scas
jg
mov
cld
mull
sub
outsb
pop
mov
jle
aam
cs
enter
in
jb
bound
push
xchg
jl
stos
sub
loopne
mov
std
sub
and
lcall
push
test
imul
cmc
mov
stos
jb
sub
in
call
fwait
pop
cs
nop
jne
out
shll
rclb
cld
dec
icebp
call
inc
cwtl
sub
xor
sbb
xlat
jae
sub
cmc
insb
adc
shlb
fadds
fstl
shrl
addr16
add
add
dec
sarb
adc
shl
push
fcmovbe
loop
addr16
inc
addr16
inc
add
xchg
stos
leave
xchg
jnp
mov
aam
inc
cmpl
mov
push
jb
imul
push
cmp
inc
and
mov
jne
movsb
mov
mov
outsl
push
push
mov
pusha
lret
dec
cli
xchg
clc
rcr
scas
std
mov
inc
dec
mov
iret
mov
add
out
xchg
iret
and
call
inc
pop
or
mov
add
imul
in
cmp
roll
and
add
pop
out
aam
stos
xor
lret
in
sti
dec
shl
repnz
inc
mov
mov
ret
and
mov
in
xchg
sbb
mov
sub
ficoml
outsb
xor
repnz
dec
or
xor
sub
xchg
popf
push
mov
gs
fildll
mov
pop
mov
xchg
cmp
sbb
mov
clc
or
int3
mov
lcall
testb
mov
mov
pop
sub
fld
out
inc
jl
loopne
aas
mov
pusha
lods
dec
loop
lcall
cli
je
push
loope
sub
in
or
fsubrs
xchg
jmp
xchg
push
outsb
movsl
popf
xlat
mov
and
push
mov
repz
mov
in
rclb
rcl
sbb
sti
adc
xchg
sbb
mov
ljmp
test
mov
and
or
jbe
inc
mov
push
jle
in
pusha
mov
out
cmp
push
cld
popa
dec
aaa
in
sbbl
dec
lahf
je
sub
sar
js
iret
push
xor
xchg
jmp
pop
jge
es
mov
cmp
pop
icebp
out
dec
jno
jmp
mov
rcr
imul
shr
inc
lret
adc
aas
ja
enter
xchg
push
cvtdq2ps
xchg
mov
mov
mov
std
sub
fdivrs
lret
mov
test
sub
mov
adc
adc
jle
add
or
enter
inc
push
push
sbb
loope
test
repz
adc
lahf
xchg
test
scas
dec
or
hlt
sub
push
pop
or
cwtl
and
movsb
pushf
scas
mov
addb
scas
mov
jg
in
ja
xlat
mov
and
fs
or
dec
divl
jo
xchg
outsl
mov
das
arpl
es
and
mov
es
adc
cmp
movsl
mov
dec
movsl
xor
jle
and
imul
movsl
xor
sbb
inc
jne
in
sti
loope
fbstp
into
loopne
mov
or
or
mov
and
addr16
or
jne
pop
sahf
les
and
stos
jns
scas
xchg
enter
pop
movsl
mov
lea
mov
dec
jecxz
bndldx
mov
sub
push
sbb
test
sbb
push
or
and
xor
sbb
mov
jo
dec
ljmp
cld
lcall
out
xchg
and
mov
dec
xchg
jbe
sbb
loope
push
or
mov
enter
pop
and
divb
sarl
sbb
add
mov
xor
add
add
enter
loope
outsl
sbb
out
lds
xchg
dec
scas
adc
incb
cmp
push
sub
insb
mov
loopne
lock
sahf
inc
xchg
and
pop
mov
mov
mov
push
cmp
cmp
xor
stos
xor
cmp
adc
push
mov
mov
inc
sbb
or
ret
xor
mov
cmc
mov
ret
jae
fnstenv
mov
mov
lods
push
movsb
test
aas
inc
roll
inc
loope
mov
push
enter
popa
sub
xchg
cmp
jmp
dec
je
cmp
lods
dec
sbb
sub
mov
js
pop
insb
daa
rcl
jno
ss
vpmaxuq
test
xlat
and
push
out
and
repnz
or
sub
in
push
out
lds
xor
pop
mov
aas
mov
and
mov
dec
cmp
push
sbb
push
jp
test
mov
xchg
push
in
dec
adc
sub
sub
aad
scas
fwait
cmc
push
jns
clc
mov
pop
sub
jecxz
add
mov
push
test
inc
nopl
sub
mov
and
adc
xchg
and
sbb
mov
add
arpl
mov
mov
jecxz
inc
outsb
push
call
ffree
push
lea
neg
jbe
push
inc
xor
rcll
and
les
inc
out
adc
mov
cmp
sbb
pop
ret
aas
dec
sbb
sub
mov
adc
add
cmp
rolb
jo
repz
adc
aas
xor
loop
dec
or
or
and
pop
and
mov
iret
and
lock
xchg
fs
jp
xor
rolb
push
ljmp
dec
cmc
sub
shrl
data16
jmp
lahf
movsl
enter
dec
sarb
in
pushf
push
repz
mov
xor
test
mov
lods
cs
cmpsb
negb
test
cmp
cmc
data16
daa
jnp
jmp
cmp
sbb
test
sub
mov
cltd
das
jns
lret
cmp
add
in
call
imul
lods
aaa
or
jb
mov
mov
dec
cli
shll
popa
adc
jp
jne
nop
mov
pusha
add
cmp
xor
dec
push
dec
mov
cs
inc
or
inc
mov
dec
pop
or
ljmp
hlt
pushf
data16
int3
adc
cmpsb
leave
push
repz
pop
or
stos
and
sbb
mov
sub
push
push
sbb
xchg
out
das
pop
mov
dec
and
jge
mov
inc
adc
or
cmc
sub
push
lods
xchg
push
push
adc
lahf
int
fucomi
mov
negl
cmpsl
das
aas
sub
mov
dec
loop
in
dec
dec
popf
fcmove
insb
or
mov
jae
ror
icebp
outsb
add
popa
jae
call
sbb
mov
cmp
insl
jge
shlb
jb
pop
fisttps
sub
in
xor
mov
xor
fwait
mov
lds
mov
movsl
and
aam
add
push
loopne
mov
inc
mov
cltd
in
inc
jb
fs
push
xchg
pop
or
push
inc
fdivl
inc
push
mov
nop
out
int3
adc
test
loopne
lock
lods
push
in
mov
add
ret
mov
or
pop
rolb
cmp
lret
jl
push
mov
mov
test
add
out
xchg
in
adc
stc
bt
mov
push
push
push
in
mov
push
cmpsl
jnp
xchg
pop
mov
mov
loope,pt
sbbb
mov
jo
in
inc
shll
fcompl
inc
or
nop
add
cli
xlat
out
mov
mov
imul
sub
fmuls
jae
stc
int
mov
sbb
insl
cmp
add
or
jmp
popa
sub
sbb
repz
sbb
sbb
xchg
mov
leave
push
xorl
mov
jns
loop
and
sbb
das
or
mov
leave
mov
in
pop
xor
mov
xchg
mov
pusha
mov
rcrb
nop
dec
jnp
shl
cltd
in
dec
push
sbb
imul
daa
arpl
ds
xchg
add
repz
xchg
fwait
push
adc
bnd
push
aad
mov
xor
test
mov
pop
inc
gs
jle
dec
add
repnz
nop
pop
out
rep
mov
or
fiadds
rcr
mov
or
xchg
inc
shl
mov
je
xor
das
jg
dec
rorl
mov
lret
sarl
adc
inc
mov
push
dec
push
jae
insl
sahf
dec
inc
mov
jge
sbb
push
xor
or
add
clc
jmp
sub
inc
leave
add
ret
push
pusha
push
and
sub
aad
push
add
adc
jno
push
cmp
jnp
push
xor
add
insb
xor
loop
in
pop
jbe
lret
or
das
dec
and
mov
aaa
notb
xchg
mov
add
inc
mov
and
mov
xor
cmp
add
pop
and
cs
sbb
xor
adc
repz
sub
lret
cwtl
and
inc
out
fimuls
cmc
and
inc
data16
mov
push
int
insl
outsb
mov
ja
scas
fdivrp
adc
stc
aam
test
inc
out
jge
fst
sub
mov
xor
loope
or
fwait
xchg
add
decb
lods
or
sub
das
movsb
xchg
or
xor
popa
in
lods
iret
cmp
or
sub
mov
pushf
jmp
je
adc
push
mov
jge
adc
xor
loopne
mov
es
add
jbe
sub
mov
aaa
ljmp
xor
push
add
test
jb
testb
fsubrl
fmuls
push
jge
dec
testl
inc
cmpsb
mov
stos
cltd
jge
adc
adc
cmp
orb
fsubrl
sahf
sub
enter
popa
xchg
into
repnz
ja
inc
and
or
cmp
add
rorb
mov
outsb
aam
pop
mov
fcom
ret
shl
pop
xchg
test
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
pop
push
add
sti
scas
mov
cld
mul
mov
scas
add
sti
scas
lea
mov
push
add
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
jne
pop
cld
push
add
push
mov
mov
dec
loopne
and
shr
aas
xchg
sub
cmpsb
js
jge
int
jo
mov
loope
ss
inc
test
loopne
cmp
xor
or
scas
lea
sti
xchg
loopne
mov
xchg
add
add
push
shrb
cmp
add
jo
sbb
insb
ret
test
mulb
mov
push
clc
fwait
icebp
in
inc
push
mov
mov
mov
add
push
mov
and
xchg
in
cmc
sbb
icebp
imul
dec
gs
icebp
in
jne
push
scas
popa
jg
mov
xchg
add
scas
lea
cld
or
lea
add
lods
lea
enter
sti
scas
insl
push
pop
std
add
or
pop
cld
or
leave
stos
add
sti
mov
or
add
jmp
lea
cld
or
mov
push
add
sti
scas
mov
cld
or
enter
sti
scas
mov
inc
cmp
mov
push
add
pop
in
or
enter
jmp
lea
cld
or
enter
sti
scas
lea
cld
mov
enter
sti
scas
mov
sbb
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
out
gs
scas
lea
faddl
sbb
fcoms
add
shrl
dec
int
and
inc
sti
scas
lea
cld
sub
sub
jb
mov
lea
cld
pop
sbb
enter
sti
decl
sbb
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
cld
or
enter
sti
scas
lea
adc
sbb
enter
sti
test
mov
lcall
aas
adc
inc
fwait
jns
push
fs
and
cwtl
and
fldcw
pop
jno
cli
sub
sbb
js
out
sub
fldcw
mov
add
adcb
lret
adc
push
dec
add
aam
inc
loop
aas
sub
insb
lods
sbb
sahf
pushf
ficoms
sub
jmp
jnp
clc
jecxz
push
mov
xlat
jnp
test
orl
inc
add
jnp
push
mov
ret
in
dec
mov
loope
pop
sub
cmp
je
lods
jb
inc
loopne
jl
repz
or
fs
adc
pop
or
inc
pop
sub
push
adc
xor
pop
int3
cmp
fcompl
inc
xchg
and
xchg
ffreep
fidivl
fstpt
lcall
mov
shrl
loope
leave
cmp
jecxz
iret
dec
and
and
xchg
sarl
sbb
je
dec
daa
push
daa
add
push
mov
sub
adc
je
or
xor
xorb
jbe
mov
or
mov
or
movsl
repz
pop
rorb
shrl
mov
dec
lods
sub
or
xorb
cli
or
scas
imul
ror
imulb
imul
jo
test
inc
xchg
mov
enter
lcall
sahf
mov
and
or
fstpt
pop
jle
inc
sub
rorb
jmp
mov
jl
js
jl
mov
cmpsl
fbld
fildl
adc
mov
test
sbb
movsb
hlt
adcl
lock
mov
sbb
leave
push
cmp
fs
jg
push
fcoml
sbb
loopne
or
jl
lret
and
xchg
in
iret
ljmp
ftst
pop
ficoms
xchg
inc
xor
mov
lret
sqrtps
jp
xor
mov
jmp
pushf
bound
nop
jne
inc
leave
es
mov
out
pop
jge
push
jo
pushf
fwait
adc
push
ss
pop
push
scas
mov
je
data16
clc
pop
std
jecxz
push
mov
jmp
in
sbb
push
xrelease
outsb
mov
adc
in
add
pop
dec
push
imul
inc
jl
es
pop
cltd
icebp
and
mov
or
out
mov
xor
cmp
inc
push
and
push
loop
test
arpl
stos
or
add
in
jecxz
push
sub
sub
mov
les
pop
cmpl
pop
mov
pop
andl
insb
scas
mov
rcll
adc
pop
aaa
das
insl
cmp
pop
push
sahf
repz
out
and
adc
inc
repnz
pushf
enter
or
xor
test
push
stos
sbb
sbb
mov
and
pop
das
sbb
mov
cmp
or
loop,pt
push
stos
cmpsb
out
cwtl
xlat
fldl
sub
fdivl
flds
mov
out
jno
out
aad
lods
rol
and
mov
sbb
mov
popf
lock
ljmp
jne
pop
lcall
std
in
xor
dec
js
pop
lock
lea
mov
pop
out
and
cmp
shl
icebp
add
in
sub
jb
pop
mulps
inc
mov
mov
add
inc
sti
xchg
stos
push
push
subb
movsl
shr
mov
lods
inc
cltd
enter
pushl
call
shl
sbb
ljmp
ljmp
and
and
sahf
jle
dec
fsts
sbb
js
clc
lea
mov
test
je
dec
adc
lods
ss
pop
andb
mov
dec
out
jge
fidivs
aas
jmp
popl
add
stos
pop
dec
orl
mov
jns
hlt
in
pop
sahf
mov
pusha
fdivs
push
jl
or
popa
dec
das
jo
nop
daa
dec
adcb
jnp
push
popf
loope
dec
in
test
cli
mov
jo
pop
dec
fnstsw
repz
add
fwait
pop
xchg
dec
in
jle
outsb
sub
fistl
sub
cmpsb
sub
orb
pop
xlat
testb
dec
dec
das
lods
decl
cltd
jae
inc
push
les
hlt
cmp
int
cld
dec
push
in
inc
cmpl
sub
syscall
xchg
push
lds
jmp
adc
stos
sub
int
incl
mov
insl
adc
and
mov
add
or
xchg
mov
fsubl
xor
jae
push
shll
dec
pop
ror
inc
push
sbb
scas
mov
popf
push
pusha
dec
xor
cmp
jl
cwtl
xchg
test
mov
and
arpl
ljmp
dec
loopne
xchg
jno
push
jnp
xchg
andb
or
jbe
into
xchg
inc
jb
cmp
adc
jbe
push
jae
outsb
repnz
andb
daa
lcall
test
push
add
cmpsl
push
in
sbb
dec
push
pminsw
pop
mov
cmp
mov
mov
mov
int
xchg
ds
dec
jg
push
das
rcrl
cmp
xor
out
xor
cmc
and
das
inc
jp
push
mov
mov
push
insl
jecxz
add
xchg
push
loope
cwtl
push
mov
lods
insl
mov
or
mov
icebp
sub
ret
jae
enter
repz
fnstcw
mov
inc
iret
xchg
das
mov
popl
cmp
mov
xchg
fiadds
mov
sbb
in
add
sbb
mov
sti
inc
ja
mov
ja
mov
iret
hlt
leave
nop
sbb
rclb
pop
out
ret
stos
adc
or
xchg
inc
sbbl
push
lret
push
daa
cld
add
mov
sub
enter
out
xchg
or
mov
cld
pop
add
adc
test
and
jmp
push
push
cld
and
test
pop
imul
movl
stos
popf
and
dec
cld
scas
fwait
outsb
cmp
addr16
mov
mov
jecxz
stos
pop
or
push
movsb
push
movsl
fcomi
shl
rcrb
in
popf
mov
out
mov
xor
repz
inc
inc
loop
mov
jno,pt
xor
fmuls
mov
outsl
sahf
nop
insl
mov
mov
pop
xor
pop
sbb
inc
xchg
pop
insb
mov
mov
jno
mov
add
repz
aaa
ja
xchg
and
mov
pop
xor
mov
es
and
mov
hlt
dec
int
pop
mov
cmp
and
xor
pop
data16
lahf
adc
out
aaa
imul
stos
mov
call
xchg
aas
push
testb
mov
xchg
dec
stos
cmp
dec
xor
inc
fs
sarb
push
xor
add
push
ss
cmp
push
push
addr16
mov
incl
push
sub
adcl
jbe
push
ja
or
shll
lock
sti
mov
xor
aad
mov
sbb
dec
lret
and
or
lea
cli
lock
sub
mov
mov
push
xchg
lock
xor
pop
les
sti
loop
mov
notl
xlat
sub
jp
push
loopne
mov
ljmp
int
orl
fsubr
inc
lock
mov
inc
pushf
dec
add
inc
xorl
push
inc
and
lock
call
mov
in
sbb
test
mov
xor
outsb
xchg
insl
adc
sub
push
outsl
mov
dec
call
fnstcw
mov
jge,pn
outsb
test
nop
jmp
sbb
sub
test
mov
mov
and
test
cmp
xchg
push
add
fdivs
je
addb
adc
jg
popa
xchg
les
test
ret
into
jmp
imul
mov
mov
jb
stos
test
sub
push
div
mov
xchg
or
xchg
or
shrl
repz
jge
jle
xor
and
jle
adc
out
into
bound
dec
adc
repnz
test
mov
jecxz
test
lcall
cmp
ljmp
inc
and
dec
inc
cmpsb
and
testl
mov
movsb
out
xchg
inc
adc
push
pop
outsb
xchg
hlt
mov
shll
inc
cmpl
cld
mov
xchg
and
in
push
rolb
lret
jno
movsl
pop
xchg
rolb
flds
mov
iret
lods
movsb
loope
adc
or
pop
inc
loopne
mov
xchg
pushf
in
jbe
into
mov
into
sbb
sub
sub
sbb
iret
xchg
stos
sub
lea
enter
scas
push
cld
movsl
sbb
pop
jmp
push
pusha
aad
inc
add
outsl
clc
push
push
xchg
cltd
push
push
or
mov
in
adc
xor
iret
mov
mov
ret
push
inc
in
push
jp
xor
repz
fwait
jae
daa
dec
stos
shl
clc
ja
pop
ljmp
out
sbb
sahf
je
test
cmc
mov
and
out
push
mov
push
adc
dec
adc
mov
popf
arpl
mov
test
mov
shl
push
push
and
cli
insl
push
rorb
lea
or
jp
inc
mov
mov
pop
into
sbb
rolb
mov
push
leave
dec
mov
mov
or
lock
adc
into
xchg
adc
loope
lds
aaa
xchg
jns
push
call
or
mov
mov
inc
sbb
jmp
fidivs
mov
les
cmpsl
es
adc
aad
fmul
out
xchg
pushf
sub
mov
xchg
fwait
call
push
xchg
movsb
jle
xchg
adc
movsl
mov
jmp
in
movsl
orb
mov
ret
mov
push
fcomi
jbe
dec
in
add
xor
rcrb
out
xor
repnz
test
cmp
or
scas
rclb
arpl
sub
mov
movsl
pop
leave
data16
sbb
ljmp
lret
inc
sub
aas
inc
lock
add
fwait
dec
xchg
popa
bound
mov
xchg
mov
xor
push
out
ljmp
mov
pop
pop
dec
sub
pusha
dec
jo
add
mov
loopne
sahf
or
dec
add
inc
lock
sbb
aam
jmp
mov
inc
adc
daa
stos
stos
mov
cmp
xchg
sbb
cmpsb
and
cltd
lock
jp
mov
add
dec
sbb
xor
int
movsl
fs
xchg
push
vmovapd
push
inc
fcmovnb
pop
daa
sbbl
pop
add
or
int3
aad
pop
dec
inc
lahf
xor
mov
and
push
mov
pop
gs
mov
xchg
roll
mov
lret
xchg
sub
stos
fucomip
cs
fidivrl
cmpl
sbb
lret
movsb
imul
imul
pop
je
push
sbb
mov
ror
xchg
xchg
cmpsl
cmp
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
