fs
inc
hlt
cmp
mov
rcrb
jp
scas
or
cmc
or
fs
out
push
inc
add
scas
push
mov
imul
lret
pop
aad
sbb
inc
icebp
or
stos
mov
movsl
xchg
push
insl
add
jo
xchg
mov
sti
jg
and
icebp
sub
mov
inc
mov
subb
into
xchg
lea
jg
xchg
mov
cmp
loope
int3
jecxz
mov
outsl
push
into
and
mov
push
mov
fildll
pop
outsl
out
mov
scas
pop
sbb
pop
aad
xor
xchg
aam
in
mov
repnz
jb
sbb
divb
mov
int
mov
fwait
pop
subb
dec
mov
jge
dec
scas
or
xchg
je
les
les
adc
sub
std
xor
xchg
outsl
stos
bound
daa
xor
shrl
pop
int
xchg
gs
cmp
test
addr16
and
xchg
loope
jmp
ss
mov
lds
gs
stos
mov
int
cwtl
mov
xchg
add
cmp
push
fldl
data16
orl
dec
int
or
int3
mov
sbb
insb
or
inc
mov
mov
into
xchg
jnp
or
fimull
pop
pop
cmc
inc
xor
outsl
add
adc
data16
roll
inc
inc
xchg
data16
les
fwait
js
movsl
clc
iret
or
sub
adc
inc
sub
jmp
or
pop
daa
jns
scas
pop
xchg
xor
dec
ds
fsubr
jge
inc
dec
repz
fmulp
scas
push
insb
dec
jl
arpl
or
xchg
mov
xchg
arpl
lret
jg
pop
sahf
cmp
lret
inc
shll
xor
sub
jne
mov
sub
icebp
lods
sbb
cmpl
daa
push
ja,pn
icebp
js
jl
push
mov
int3
push
insl
push
pop
imul
and
gs
xchg
std
pop
ds
loop
adc
mov
cmc
mov
jbe
mov
adc
and
jl
cmp
push
adcl
fnstcw
adc
sub
pop
outsl
add
fbstp
dec
loope
inc
js
xor
adc
xchg
and
mov
jp
pop
stos
inc
loopne
popf
aas
cmpsb
out
mov
mov
fdivs
add
shlb
lods
adc
call
gs
xchg
lds
sbb
idivl
imul
inc
dec
fld
mov
adc
or
pusha
stos
add
cmpsb
dec
mov
adc
xor
cmpsl
or
test
inc
and
xchg
jg,pt
or
pusha
xchg
xorb
sbb
add
lret
cmpsl
sbb
cmpsl
push
or
adc
pop
outsb
adc
fbstp
aas
iret
ret
popa
sbb
gs
aad
mov
in
cmpsl
sub
fcoms
mov
cli
cmpl
imul
mov
mov
add
xchg
push
jg
icebp
pop
push
pop
or
icebp
inc
loope
out
ljmp
add
std
nop
xor
js
repz
mov
and
sti
sub
leave
idivb
push
aad
out
jb
pop
mov
out
push
insb
sub
xchg
cld
popf
cmpsl
pop
and
push
push
es
jle
ret
add
mov
add
sub
sbb
dec
cwtl
xlat
sub
lds
scas
and
sahf
adc
std
push
mov
lods
jg,pt
das
sub
test
scas
jbe
push
push
or
mov
sub
or
pusha
cmp
nop
xchg
adc
mov
es
je
mov
add
push
jge
les
mov
loopne
xorl
test
xchg
out
mov
inc
fdivs
adc
ss
dec
shlb
add
ret
adc
and
mov
cli
loop
lods
out
ds
or
jg
pop
test
push
cli
mov
jnp
push
ss
cmp
bound
imull
aam
lock
pop
loop
add
cmc
pop
jno
pop
iret
shl
ror
rorb
and
pop
cmc
fstl
xchg
mov
adc
sbb
imul
ds
xor
pop
fwait
mov
jb
inc
and
insl
and
mov
jo
addr16
mov
into
lds
mov
mov
add
mov
fcmovne
lahf
loope
outsl
push
xor
inc
gs
pop
test
cmp
mov
out
add
mov
dec
pop
inc
lock
outsb
leave
aaa
add
fidivrs
test
xor
jbe
or
push
add
xor
xchg
and
shll
sub
push
fsubrp
add
push
mov
in
pop
into
out
cmp
push
cltd
dec
lock
adc
push
scas
mov
pop
fcoms
fiadds
push
sti
out
push
cmp
jg
or
ja
jg
dec
jecxz
inc
dec
adc
inc
vandnps
leave
movsl
jl,pt
dec
mov
push
sbb
sub
jae
push
shlb
jnp
std
mov
stos
jno
adc
test
jae
movsb
inc
cld
cmpw
fdivrp
jnp
push
pushf
fadds
xchg
push
pop
pop
cli
adc
inc
mov
mov
dec
sti
and
and
bound
loop
loope
jmp
sarb
imul
mov
add
out
sbb
dec
stos
mov
and
test
push
push
mov
pop
dec
cmp
in
jo
pop
pop
or
sbb
jp
aaa
or
lock
cmc
ljmp
mov
dec
xlat
psubb
mov
or
dec
adc
aas
lock
push
in
inc
pop
mov
aas
iret
xchg
sub
and
or
dec
fildll
enter
ja
ljmp
mov
inc
xor
sbb
outsb
mov
jnp
icebp
sub
dec
push
mov
inc
icebp
addl
repz
test
mov
pop
mov
aas
and
sbb
push
js
mov
adc
mov
push
mov
icebp
pop
in
or
cs
shll
orb
mov
and
in
insl
sti
lock
fists
adc
mov
mov
sub
daa
pop
push
mov
xor
xchg
add
adcl
dec
iret
xchg
xchg
addr16
cwtl
xor
test
ret
jle
hlt
sarb
aaa
xchg
stos
ret
rcrl
push
sub
scas
movsl
cld
aam
and
sub
mov
sbb
mov
flds
sbb
dec
mov
pop
sub
loopne
shlb
adc
or
mov
mov
inc
rcl
repnz
test
sahf
shlb
repz
daa
fisttpll
inc
addl
push
pop
adc
stc
sbb
cmp
push
test
scas
and
dec
or
lcall
xor
adc
das
dec
adcl
aam
cli
outsl
fildll
popf
push
xchg
cli
dec
cwtl
cmc
dec
shll
or
mov
lock
mov
pop
test
jne
in
cmc
out
mov
fildll
or
or
inc
lret
sti
xchg
outsb
pop
shrl
mov
mov
testb
dec
xrelease
scas
cmp
enter
int3
daa
sub
cmp
add
shll
js
pop
or
xchg
push
or
pop
sbbb
pop
sti
push
xchg
xor
cmpsl
in
sub
adcl
cmpb
xchg
sbb
jno
xchg
es
in
out
pop
pop
scas
ror
insb
jmp
xchg
and
cmp
pop
inc
mov
push
and
mov
adc
movsl
adc
xchg
cmp
int3
mov
andb
arpl
cmp
ja
movsb
push
dec
jae
fs
cs
scas
pop
fisubrs
int3
popf
sub
xchg
loopne
ja
push
dec
adc
mov
or
jnp
scas
popf
or
shr
test
test
icebp
ds
fbstp
clc
out
pop
adc
jmp
cwtl
movsl
jp
test
mov
xlat
sub
mov
lret
push
mov
test
lret
ret
sub
and
cmpsb
mov
dec
ret
xor
mov
xor
insl
add
add
xchg
fld
and
repnz
mov
sub
stc
pop
lds
mov
mov
push
mov
icebp
les
scas
and
ret
adc
adc
or
sbb
aas
pop
mov
imul
mov
repnz
and
daa
xchg
fldl
imul
lods
cmp
mov
cmc
repz
jecxz
add
sbb
mov
lret
and
cmpsl
pop
je
sbb
imul
pop
xor
xor
push
pop
pushf
sub
cmp
pop
out
cmpl
mov
dec
jle
gs
and
adc
push
dec
pop
add
cmp
xchg
lahf
or
data16
sub
and
push
scas
sub
aaa
mov
jae
pusha
sub
int3
mov
lods
jne
test
icebp
rolb
jb
adc
call
inc
daa
add
fisubrs
inc
xchg
out
pop
cmp
out
in
push
lea
mov
dec
movsb
bound
and
add
out
scas
mov
push
subb
ror
sbbl
stc
loope
xor
or
das
into
js
test
or
pop
sbb
adc
pop
fmulp
in
enter
fcomp
ret
cld
mov
ljmp
sbb
repz
mov
dec
sbb
xor
addb
in
jle
mov
test
icebp
dec
iret
ret
stc
sbb
out
push
movsl
in
jo
fldcw
cmp
icebp
xchg
mov
imull
lret
lock
repz
pop
or
jns
sbb
es
add
into
cmc
lret
jg
lods
test
jbe
rorl
lea
aas
mov
popa
aad
jnp
cli
inc
orl
mov
cmpsl
imul
lret
push
leave
inc
mov
test
test
lock
dec
xchg
add
pop
cmc
orl
je
sub
aaa
xor
xor
mov
push
inc
fistps
hlt
pushf
mov
jmp
add
pop
dec
mov
pop
jp
adc
testb
cmp
pop
out
cltd
sbb
xlat
scas
jne
lret
xchg
sar
cmp
das
xchg
adc
mov
sti
jns
js
push
adcl
cmp
or
xchg
rcrl
mov
cmp
fdivrs
pslld
mov
sub
mov
add
es
cli
ror
pop
in
or
jno
add
jg
iret
mov
jns
add
scas
mov
jecxz
push
lock
xor
repnz
outsb
sub
outsl
aaa
xor
fmuls
xchg
addb
mov
mov
lahf
mov
and
lea
popa
repnz
aam
std
daa
push
dec
xchg
inc
inc
push
xchg
shll
ficoms
and
ljmp
fldt
sub
dec
cwtl
dec
mov
das
jo
push
js
inc
push
lea
xchg
out
adc
nop
in
and
jge
cwtl
mov
mov
loopne
mov
or
bound
inc
adc
cmp
dec
scas
enter
test
dec
push
iret
adcl
mov
mov
ret
jnp
xchg
shlb
out
jle
or
xlat
cltd
rorl
mov
adcb
mov
ret
mov
xchg
push
sbb
pop
fdivrs
imul
leave
cmpsb
mov
ret
fistl
cmpsb
xchg
pop
adc
jne
fnstcw
add
mov
lret
sti
jae
cmc
in
xchg
pop
pop
dec
insb
sbb
in
mov
and
lcall
sub
sub
xor
fwait
adc
mov
out
lds
mov
lret
lock
loopne
cltd
xchg
std
in
jns
enter
push
subl
in
dec
xlat
movsl
addl
and
imul
pop
ja
test
in
notl
faddl
mov
daa
es
xchg
xchg
sbb
xchg
xchg
cmp
xchg
cwtl
fwait
in
push
inc
fcomps
pop
mov
push
sbbb
lahf
in
in
mov
or
jge
pop
dec
shlw
mov
or
xchg
idivl
jmp
and
inc
and
dec
lahf
pushf
jg
sti
hlt
pushf
or
fmul
cltd
ss
sbb
mov
cmp
cmp
in
mov
mov
loopne,pt
fwait
xor
jecxz
mov
dec
shll
mov
xor
jne
mov
scas
sahf
lods
mov
icebp
xor
stos
jae
cwtl
mov
icebp
cld
xchg
faddp
and
aam
ljmp
xor
xchg
movl
das
or
je
shl
jmp
imul
test
pop
into
pop
pop
cwtl
bound
andl
and
cwtl
sti
jp
lods
lock
xchg
gs
sub
cltd
mov
mov
mov
out
cmp
dec
jp
cli
lock
aam
ljmp
inc
hlt
in
aas
cmp
mov
jl
arpl
pop
jle
mov
mov
dec
mov
or
add
test
sbb
jne
add
arpl
incl
scas
imulb
add
fidivl
outsb
pop
cmc
xchg
mov
fcoms
mov
aas
lods
dec
pop
mov
out
lret
aad
daa
outsl
xlat
mov
outsb
stos
dec
inc
ret
and
pushf
jl
js
fs
stos
repnz
push
outsl
jbe
lahf
mov
loopne
pop
or
aaa
mov
lret
adc
xchg
sbb
int3
add
notb
pop
mov
inc
push
mov
sub
push
idiv
add
aas
sub
int
or
sahf
arpl
test
or
mov
insl
sbb
or
addb
inc
ds
imul
cmp
dec
je
sub
into
out
test
data16
sbb
mov
mov
mov
hlt
jno
pop
fisubs
inc
xchg
cmc
mov
pusha
lcall
mov
add
rcrl
add
mov
aad
inc
lds
mov
pop
xorb
lret
dec
lds
stos
adc
pushl
loope
hlt
jo
xchg
xchg
stos
ret
out
repz
pop
aad
mov
sbb
adc
mov
je
daa
daa
std
andb
xchg
push
dec
push
cmc
into
pop
mov
out
mov
aam
cmp
jmp
inc
pop
push
xchg
cmp
lds
add
aaa
jp
mov
lock
enter
mov
cmpsl
inc
inc
add
imulb
sbb
push
jb
js
lods
or
mov
stos
pop
pop
cmp
pop
pop
pop
repnz
cmp
imul
pop
in
pop
pop
cmc
cmp
scas
mov
aas
stos
pop
sbb
cwtl
mov
push
mov
adc
lahf
mov
xchg
cmp
gs
jmp
xor
aaa
sarb
mov
adc
fsubrs
lock
aad
out
pop
repnz
outsl
push
lret
mov
xor
movsl
push
fstps
push
lea
pop
pop
xchg
das
sbbl
jno
xchg
push
cld
push
in
mov
lock
mov
add
jecxz
icebp
cmp
pop
enter
or
cmp
push
std
dec
mov
es
int
mov
in
pop
es
and
pop
dec
mov
das
sbb
dec
cwtl
add
push
xor
xor
ds
cmp
pop
push
insb
mov
loop
xchg
sahf
into
sub
sahf
push
imul
cmpsl
shll
cmp
or
xor
popf
dec
nop
mov
je
sub
add
andl
sub
and
cmpsb
mov
nop
inc
add
push
push
add
fdivs
add
pushf
mov
imul
and
in
pop
pop
lret
test
push
sub
cmp
call
xchg
mov
or
inc
cmp
pop
or
sub
mov
adc
pop
adc
sub
hlt
jle
xor
fcomip
subl
cs
xor
or
xchg
nopl
push
or
daa
cmp
imul
icebp
jge
bound
jle
cmp
clc
insl
test
iret
xlat
clc
sub
push
jp
out
insb
jne
jne
jns
lock
push
and
fdiv
call
sub
imul
sahf
cwtl
pusha
fwait
mov
push
fbld
fxch
adc
testb
jbe
inc
nop
pushf
loop
in
push
mov
es
jae
jbe
or
xor
mov
cs
xchg
std
pusha
dec
sub
and
mov
mov
filds
inc
dec
xorb
mov
xor
nop
shll
and
ret
fnstsw
stos
icebp
stos
fiadds
push
test
clc
adc
lcall
ja
sbb
inc
aas
ss
in
ss
jne
outsl
add
jle
mov
mov
xchg
or
lcall
sub
xchg
mov
or
xchg
testb
das
test
mov
arpl
bound
lahf
lds
or
xor
dec
or
fwait
mov
out
add
xorl
inc
inc
jbe
ret
dec
ficomps
mov
adc
cmpsb
pop
incl
xchg
shlb
insl
mov
jae
xchg
mov
jge
stos
repz
in
jo
scas
xchg
cmp
ljmp
xchg
lds
cli
cld
adc
aam
lock
push
fwait
or
divl
shrl
outsl
mov
or
jns
push
int3
out
or
mov
jmp
das
vmwrite
push
fs
cmc
sbb
pop
stc
xor
jg
xchg
mov
mov
in
lahf
fwait
push
pop
mov
or
jg
pop
cmp
les
jp
dec
pop
xchg
mov
inc
lcall
hlt
outsl
or
loop
arpl
lret
pop
test
arpl
dec
jmp
outsl
enter
mov
movsl
add
mov
mov
xchg
je
inc
xchg
push
hlt
pushf
int3
inc
outsb
ficoms
xchg
clc
frstor
sub
mov
cmc
push
mov
and
in
repz
lea
gs
movsb
mov
lahf
jle
lcall
inc
jbe
lret
std
push
pop
push
in
enter
jbe
loope
add
test
or
xor
inc
daa
xor
repz
aas
xor
mov
push
add
cwtl
repz
xchg
xchg
pop
outsl
pop
push
shll
or
inc
aas
test
jbe
out
xchg
hlt
jecxz
sbb
mov
inc
aaa
test
pop
pop
punpcklbw
sti
scas
fnstcw
int3
lahf
cwtl
daa
leave
leave
dec
dec
mov
pop
es
popa
daa
pop
pop
gs
pusha
jecxz
add
addl
adc
or
arpl
and
cmpsl
jg
push
les
mov
push
pop
inc
dec
cmpsb
add
fsub
mov
repnz
nop
xchg
mov
and
mov
xor
mov
int
mov
mov
jne
inc
mov
js
pop
sti
das
jb
in
sbb
inc
mov
aas
jb
mov
leave
scas
or
cmpl
mov
into
ljmp
push
mov
lcall
and
sub
push
dec
clc
dec
mov
fstpt
pop
into
lock
push
pop
push
mov
jbe
movsb
into
jl
pop
sbb
lock
rorb
lods
aam
cmp
dec
repz
int3
push
sbb
scas
add
arpl
mov
fistps
mov
push
sub
mov
sti
mov
sbb
and
add
dec
data16
cmp
push
ret
jge
push
add
cmp
lds
in
mov
mov
cmpsb
sarl
pop
pop
xchg
or
cmp
fld1
cmp
push
cmpsb
fiadds
xor
stc
mov
inc
adc
mov
out
mov
call
cmpsl
shrb
daa
mov
lcall
cmpsl
shrb
iret
sbb
dec
movnti
mov
shll
xchg
xlat
mov
sbb
cmp
xchg
mov
xor
dec
pop
jo
push
pop
aad
inc
xchg
mov
mov
dec
push
mov
movsl
jae
and
lret
xchg
arpl
push
repz
rclb
push
fidivrs
mov
aad
fs
push
iret
mov
std
push
scas
outsl
cmc
jns
out
sbbl
lock
lea
div
push
outsl
push
push
cmpsl
push
leave
mov
rcr
jo
shlb
out
shr
ljmp
lods
add
test
std
dec
jnp
cli
fadd
mov
sub
insl
sbb
xchg
jge
jmp
in
aad
add
cli
pusha
stos
adc
les
pop
movsl
mov
mov
cmp
lcall
ret
insb
movsl
push
mov
jbe
repnz
ja
mov
shlb
stos
xchg
cmc
in
sti
cmpsb
insl
outsl
test
movsl
fcompl
adc
test
jle
push
xchg
xor
call
js
shl
push
push
pcmpeqw
or
rorl
pop
sbb
sti
pop
push
cltd
out
adcb
adc
inc
mov
aaa
pushf
sahf
dec
das
pusha
daa
cwtl
cmp
xor
test
shrl
xchg
sub
aas
jmp
mov
mov
daa
add
lret
rol
xor
xor
jge
sbb
sbb
adc
push
sub
add
outsb
js
test
in
imul
push
int
push
adc
rcll
loop
adc
dec
mov
ret
stos
out
loopne
mov
rorb
test
add
jecxz
iret
sbb
dec
rcll
pusha
leave
inc
mov
mov
pop
jge
stos
fld
dec
mov
cmpsl
sbb
xor
pop
test
push
jo
pop
xor
in
dec
mov
mov
das
xor
insb
mov
out
out
test
fnstcw
xchg
sbbb
push
xlat
mov
repnz
push
mov
push
cltd
cmp
or
add
mov
nop
dec
out
fistpll
sub
mov
add
mov
int
push
cmpb
mov
ljmp
xchg
push
stc
pop
rcl
add
xchg
adc
dec
push
mov
pop
push
and
xlat
pop
aad
xlat
inc
and
and
jnp
sar
daa
mov
arpl
jne
inc
leave
add
lret
adc
sbb
or
push
dec
int3
inc
dec
cmpsl
inc
lret
cmp
fs
addb
adc
fdivrs
mov
push
call
test
and
rcl
jne
std
mov
aad
testb
add
out
add
xchg
pop
pop
adc
repnz
negl
mov
sub
in
mov
cmpsl
movl
addl
adc
cwtl
cmp
std
stos
mov
inc
repnz
dec
out
mov
lret
js
cli
out
jmp
mov
mov
popa
lcall
lret
push
dec
mov
cs
cmp
sub
aas
pop
sbb
fbstp
pop
dec
sbb
dec
inc
daa
aad
cld
sub
pop
jbe
push
movsl
ror
inc
sbb
mov
loopne
inc
mov
mov
add
push
sbb
gs
jmp
dec
cmc
test
outsb
leave
mov
dec
push
xchg
fidivrl
xor
test
fmull
jnp
mov
fs
stos
or
lcall
int3
push
mov
pop
push
inc
out
xchg
jb
or
mov
pusha
rcll
jmp
inc
push
addr16
lods
push
divb
pop
cmp
mov
stos
popf
push
mov
xor
mov
out
fsubrs
movsl
mov
push
pop
xchg
repz
add
mov
mov
jno
add
ret
into
ror
push
jb
rcrl
sub
adc
insb
fidivl
xor
adc
fistps
ret
sub
sbb
push
hlt
movsb
and
lock
decl
mov
scas
mov
and
adc
mov
out
jl
mov
stos
lcall
icebp
jbe
mov
push
sub
cwtl
xor
or
fisubl
cmpsb
stos
shlb
mov
sbb
pop
mov
jl
and
test
mov
dec
rclb
add
lret
xchg
flds
mov
insb
cli
ret
add
out
mov
fimuls
jbe
rorb
add
mov
sbb
test
sarb
pop
pushf
pusha
sub
xchg
movsl
add
sbb
jg
bound
push
jmp
arpl
test
je
sub
es
lds
lods
lahf
sti
push
fidivl
shrb
imul
push
ret
cmpsl
lods
mov
aaa
cli
fstl
cmp
cmp
sbb
dec
xor
and
inc
xchg
xor
add
lret
decb
or
fdivl
and
repnz
xor
cmpsl
jecxz
sbb
gs
inc
dec
adc
repz
sahf
dec
testb
sbb
xor
pop
test
dec
js
outsb
arpl
sbb
sarb
mov
fstl
and
cwtl
out
jne
loop
insl
xchg
inc
pop
push
mov
jmp
jl
pop
xor
shll
mov
enter
shrb
insb
mov
jae,pt
xchg
ss
enter
scas
inc
test
xor
in
outsl
sub
fyl2xp1
hlt
push
dec
int3
incb
mov
and
aaa
inc
leave
cmovbe
dec
or
cmc
pop
or
mov
pushf
stc
stc
lods
and
xchg
xor
mov
es
andl
adcl
bound
cmpsl
inc
popf
jl
xchg
mov
bound
mov
call
out
jnp
daa
sbb
ja
in
xchg
lret
out
lahf
cmp
sub
add
mov
sahf
or
jl
ret
inc
pop
test
jmp
push
insb
in
scas
xlat
jnp
cmp
sub
or
jae
mov
fdivl
rorl
add
insl
inc
cmp
xor
dec
leave
dec
sub
fbld
test
ret
inc
sub
outsl
add
adc
jmp
pop
jo
ja
inc
xor
ds
test
pop
stos
push
sub
scas
add
nop
sub
cli
clc
rcl
push
xlat
inc
push
or
test
loopne
repz
in
or
dec
repz
outsb
or
test
push
movsl
sbb
sub
sbb
or
in
arpl
cmp
pop
inc
adc
bndstx
mov
lret
and
sub
ret
xchg
imul
in
sub
in
or
pop
aam
or
adc
popf
cltd
push
ljmp
and
jp
xor
lods
sbb
rorl
mov
pop
jmp
add
data16
push
movsl
pop
or
inc
pop
xor
pop
add
add
lret
cmp
sbb
xor
and
sbb
push
xchg
xchg
sub
icebp
shll
and
repnz
cltd
mov
push
and
adc
adc
mov
pop
int3
test
push
or
mov
insl
ja
mov
in
inc
add
orl
cmp
mov
jae
repz
mov
and
pusha
outsl
movsl
adc
leave
mov
in
xchg
push
xlat
mov
icebp
and
jle
loopne
jl
lods
not
jge
mov
ss
insb
int3
jecxz
mov
pop
ficomps
add
push
push
fldenv
adc
je
push
add
jae
icebp
cmp
subl
jl
sub
icebp
jp
ret
out
jo
ret
or
or
les
mov
imul
push
add
stos
ret
inc
icebp
sbb
fdivrs
jp
sub
popa
jbe
cmp
sbb
leave
loopne
scas
popf
cld
xor
mov
fcoms
xchg
xchg
add
sub
mov
fxch
popl
adc
pop
xchg
add
adc
dec
std
in
es
pop
mov
and
mov
daa
xchg
jg
gs
cs
sub
cmpsl
mov
xchg
adc
popa
xchg
or
stos
ficoms
aad
test
jbe
sbb
mov
fdiv
lret
cs
mov
jecxz
popf
imul
cmpsb
pushf
adc
mov
movsb
sbb
ljmp
dec
push
sub
out
ret
and
inc
cmpsb
pop
neg
mov
lds
cli
pop
call
inc
add
push
mov
sub
call
cmp
pop
out
test
test
adc
mov
aad
fs
sub
popa
mull
std
mov
mov
repz
sub
je
mov
sub
repnz
aaa
addb
rcl
mov
cwtl
pinsrw
fs
jl
push
mov
outsb
addl
or
sub
xchg
int
and
test
fnstcw
loope
and
add
cmp
xor
loopne
dec
push
jl
cmpsb
fs
cld
loop
mov
xchg
push
subl
xlat
xchg
int3
ljmp
mov
mov
mov
push
mov
outsb
mov
fmul
out
stos
mov
call
stc
pop
jmp
adc
xchg
enter
and
cld
inc
testb
int3
dec
sbbb
out
scas
dec
rclb
inc
mov
test
cs
adc
xor
cmp
gs
shl
cmc
shlb
dec
sub
enter
jno
mov
int
movsl
popf
notl
adc
jb
cmp
stos
dec
xchg
loopne
mov
aaa
arpl
ja
inc
jo,pt
mov
sbb
fdiv
cmp
mov
xchg
dec
call
add
mov
push
and
jne
mov
loop
movsb
icebp
lahf
jnp
popf
pusha
rclb
inc
inc
je
mov
out
pop
fcompl
aas
mov
and
dec
ljmp
or
stc
mov
fincstp
and
ret
insl
xor
ljmp
xlat
dec
enter
mov
in
mov
add
pushf
pop
push
dec
clc
out
and
out
mov
pop
loope
daa
into
jns
xor
cwtl
loope
and
js
dec
dec
pop
inc
pushf
or
cltd
fildll
loop
loop
cmp
mov
mov
xchg
cli
stos
jne
xor
push
aas
mov
stos
adc
pushf
pop
mov
int
ss
mov
fstpl
adc
and
inc
std
xchg
push
mov
jl
and
in
xchg
stos
inc
mov
imul
test
loopne
hlt
add
bound
cmpsl
insl
pusha
stc
cmp
in
jecxz
data16
inc
or
push
cmc
and
jp
jmp
xor
bound
sub
insl
mov
xchg
cmc
cmpb
or
inc
sbb
shl
and
adc
sub
rcrb
push
aad
add
in
roll
push
mov
cmp
pop
pop
imul
jno
xchg
mov
cmp
xchg
xchg
lods
sub
inc
mov
negl
or
outsb
jo
hlt
and
adc
push
ds
push
sbb
adc
icebp
test
mov
and
insl
pop
daa
enter
subl
push
jnp
sbb
ficoms
in
and
jmp
xchg
call
mov
nopl
loop
mov
xchg
movsb
leave
inc
cmp
into
icebp
mov
sti
push
gs
popa
ret
cmpsb
mov
xchg
aaa
mov
std
mov
mov
subl
adcb
push
mov
in
pop
in
jle
scas
subl
mov
pop
xchg
mov
adc
mov
and
xchg
enter
iret
pusha
repz
out
out
fucom
jmp
aas
pushf
and
sahf
mov
cmc
bound
push
nop
mov
jl
movsb
pop
xor
mov
mov
cmpsl
or
pop
loop
mov
xchg
stos
fmull
ja
sbb
or
sub
dec
sbb
cld
out
push
stc
add
lcall
orl
adc
sub
adc
mov
rorb
sub
pop
jns
adc
cmp
or
in
push
addr16
adc
mov
cmp
cmp
movsl
xchg
jp
adc
repnz
sbb
sbb
push
adc
push
push
inc
jle
sub
push
sahf
mov
clc
dec
lret
jae
shr
cmc
cmp
enter
inc
addr16
dec
into
push
xchg
das
insb
shl
jns
mov
mov
jbe
and
jmp
addr16
mov
jbe
add
mov
jb
rorl
into
dec
sbb
or
jl
fwait
test
js
mov
pop
scas
enter
dec
test
or
xor
sub
fdiv
minps
sti
mov
insb
xor
or
mov
mov
adc
fmul
icebp
das
sub
les
dec
and
add
mov
loopne
gs
lahf
inc
lahf
insb
and
xchg
int
leave
mov
aas
repz
pop
in
push
lods
pop
pop
ljmp
xlat
lds
mov
jmp
xor
jle
cmpsl
mov
pop
pushw
cmp
ss
loop
jb
push
inc
std
jnp
lods
les
push
mov
std
cmp
into
xor
mov
add
mov
jbe
cmc
ficoml
and
jbe
std
popa
mov
mov
lret
jle
cli
jbe
incb
daa
sti
pop
cli
mov
pusha
mov
mov
jae
mov
enter
popa
pop
in
add
repnz
adc
mov
inc
loopne
sbb
sbb
loope
sbb
dec
mov
into
repz
test
lds
dec
xor
pop
int
jmp
in
repnz
popf
xlat
push
mov
gs
sbbl
or
and
je
test
push
jl
leave
mov
cli
js
push
jmp
xchg
pushf
push
fdiv
iret
sbb
sbb
jge
cmp
adc
sti
mov
sbb
stc
ret
jae
mov
daa
into
mov
adc
out
arpl
andl
in
fwait
mov
mov
xchg
add
lcall
cmpsl
jmp
hlt
outsl
dec
mov
mov
xchg
ss
sbbl
xor
mov
xchg
ret
sbb
std
mov
sub
repnz
aaa
iret
lcall
jg
movsb
push
cmp
sarb
out
push
adc
sub
test
out
in
pushf
loope
decb
inc
sbb
jns
shll
xorl
xchg
xchg
std
inc
push
cwtl
mov
out
add
jb
stos
jle
mov
mov
hlt
jmp
clc
or
or
sub
cli
mov
int3
mov
or
and
and
pop
push
ret
mov
and
mov
mov
test
fldl
in
inc
mov
rorl
cli
or
loopne
je
test
je
rol
sbb
inc
xchg
mov
outsb
outsb
sub
pop
jae
daa
mov
jle
andb
clc
add
sbb
push
pop
enter
inc
fwait
inc
dec
rcl
mov
sbb
jp
dec
js
inc
and
das
adc
mov
push
movsb
push
cmp
cmp
xchg
cmp
shll
enter
jnp
and
add
add
dec
push
rcr
push
loope
jecxz
and
adc
sbb
pop
xor
int3
xor
pop
mov
dec
push
xor
das
cmp
xchg
or
jo
jecxz
in
inc
xlat
pusha
push
daa
sub
push
stos
repnz
out
sub
xchg
xchg
cmp
xchg
sub
sbb
lds
out
test
loope
call
sarl
xchg
pop
test
lret
nop
add
push
mov
mov
adc
xor
lods
push
idivl
inc
mov
sub
fists
imul
add
push
das
mov
jp
mov
adc
inc
jno
mov
gs
ret
push
pushf
mov
hlt
pop
or
pusha
lods
or
cmpsl
ret
int
lret
push
rep
std
sbb
daa
jno
jae
aas
xchg
in
xor
loopne
add
into
adc
push
js
in
stos
scas
pop
inc
xchg
ret
out
movsb
sub
aas
mov
xor
or
pop
mov
loopne
xor
ljmp
pop
outsl
push
push
push
jl
push
push
nop
xor
sti
sub
dec
adc
scas
or
or
lret
outsb
ret
aad
jno
adc
popa
call
xchg
push
loope
ja
and
sahf
out
std
loopne
cwtl
lods
mov
sbb
sahf
mov
xor
xor
or
xor
movsb
sub
imul
movsb
pop
out
hlt
dec
inc
repnz
bound
cmp
jmp
jne
pop
pop
outsl
dec
dec
or
push
sub
imul
mov
mov
inc
pop
loope
sub
jmp
xor
mov
lret
xlat
cmp
mov
fsubl
pop
into
push
jmp
es
or
adc
add
movb
push
or
test
das
or
mulb
and
pop
jb
xchg
movl
push
xchg
jne
cli
mov
lods
in
dec
js
xchg
inc
inc
jl
pop
xor
mov
subb
cmc
fs
hlt
pop
enter
pop
add
test
sub
jmp
cmp
fwait
nop
pop
pop
icebp
ljmp
sbb
hlt
cmpsb
insl
sbb
push
int
sub
lret
pop
jno
jnp
pop
nop
mov
push
jp
lahf
sbb
add
jmp
sub
inc
push
cs
pop
sbb
xchg
push
mov
sub
out
rcr
aas
mov
adc
cltd
div
lcall
xor
push
mov
pop
insb
push
scas
in
shlb
sub
xchg
sbb
sbb
jge
faddp
aas
fistpll
orb
mov
xor
cld
mov
stos
jns
scas
divb
flds
pop
out
imul
xor
addr16
fbstp
dec
imul
gs
jno
sub
arpl
popa
stc
push
cmp
lods
pop
loopne
and
mov
cmp
or
insb
mov
or
inc
ret
test
add
es
or
rolb
ret
add
cmp
lahf
rcrl
int
jnp
int3
xchg
jecxz
je
add
movsb
pop
jne
test
outsl
shlb
and
or
shll
rcrb
call
inc
repnz
xchg
test
shll
popf
inc
sbb
fwait
dec
push
xchg
jbe
add
fcomps
mov
sub
aad
insb
cmpsb
mov
jns
xchg
pop
lods
jle
jnp
jne
mov
out
jp
mov
xor
mov
mov
and
sub
call
arpl
add
pop
outsl
pop
mov
shl
popf
bound
cmp
rorl
aaa
mov
mov
cwtl
xor
sbb
ja
mull
lahf
cmp
stc
mov
sbb
cwtl
outsl
lea
rorl
es
insl
mov
iret
jecxz
sub
int
data16
push
cmp
or
mov
mov
cmc
stos
or
iret
out
jmp
jne
cmp
mov
aas
cwtl
daa
lock
mov
js
stos
popf
add
push
sub
push
lea
popf
dec
aas
adc
rcll
gs
dec
movsb
mov
call
inc
out
fs
cmp
add
lahf
jo
dec
sbb
mov
push
fs
cmp
push
andb
mov
and
jle
std
out
or
xor
scas
hlt
cmpsl
pop
push
xchg
sbb
push
fstpt
pop
out
mov
mov
aaa
inc
jb
sahf
outsl
daa
orl
push
push
outsl
mov
frstor
sarl
arpl
sarb
mov
cmp
add
jmp
sbb
push
mov
xor
mov
ficoms
push
scas
ret
sub
stos
xor
pop
cmpsb
or
dec
fucom
movsl
data16
push
gs
test
sub
popf
mov
push
mov
in
and
dec
fwait
jge
cmp
and
mov
mov
mov
rclb
pop
sub
dec
mov
adc
pop
inc
roll
jg
jne
jle
xor
xor
jno
ja
int3
mov
out
dec
jno
mov
pop
mov
insb
cltd
cmp
pop
pushf
ret
cmp
scas
mov
sahf
jns
mov
push
cwtl
test
mov
ds
jmp
cltd
or
cmp
test
fs
dec
mov
andb
inc
mov
xlat
xchg
sub
lcall
mov
push
sub
pop
mov
in
dec
pop
add
aad
and
ljmp
in
mov
jbe
xor
nop
xchg
aam
pop
sub
daa
lock
cmp
push
sarb
shrl
and
insl
cmc
dec
xchg
push
jg
cli
inc
je
sarb
sbb
xchg
enter
fdivrs
and
xor
loop
jo
and
aad
xchg
add
popf
cwtl
xor
add
inc
inc
sbb
xchg
fmuls
test
lods
clc
arpl
out
dec
dec
mov
out
popa
popa
cld
popa
sarb
mov
mov
pusha
xchg
cltd
pusha
roll
sub
jno
ficoml
and
adc
pusha
and
jg
test
mov
add
jmp
xor
jbe
xor
hlt
call
adc
leave
lahf
mov
sub
lea
cwtl
xchg
lds
shlb
enter
iret
mov
mov
mov
test
aas
inc
cmpl
mov
fidivl
cltd
pop
ljmp
push
out
out
dec
jl
pop
call
mov
loop
inc
xchg
rolb
in
jp
jns
add
mov
adc
sub
jo,pn
mov
outsl
in
popf
clc
cmp
roll
movsb
sbb
gs
into
lcall
jo
test
sbb
jp
jo
jmp
nop
aad
fnstsw
sub
lea
jg
jge
and
imul
mov
pop
lods
add
pop
jp
add
push
into
or
out
xor
in
inc
mov
jmp
cmpsb
mov
stos
imul
stc
mov
lock
lods
adc
int3
xchg
leave
pushf
test
push
enter
scas
mov
jb
lods
mov
in
push
push
pop
into
inc
test
cmp
dec
gs
loop
xor
std
mov
movsl
sti
mov
mov
mov
cli
mov
add
lock
insb
inc
xchg
add
fcomp
inc
ds
repz
cltd
ficompl
pop
dec
mov
pop
rclb
and
popf
aaa
xor
fisubrs
not
xchg
mov
xor
insb
or
dec
jle
mov
and
rorl
lcall
cwtl
popa
shl
adc
ficoms
mov
sahf
outsl
fwait
inc
jp
repnz
lods
mov
inc
pop
repnz
xor
pop
cs
insb
lret
iret
jmp
iret
push
add
cmp
mov
stc
test
test
int3
aas
loope
int
loope
xor
daa
pusha
pushf
xchg
push
repz
mov
mov
sub
cld
pop
adc
dec
push
sbb
mov
pop
xlat
xor
jecxz
rcr
xor
and
push
stos
mov
xor
dec
inc
inc
ret
jle
ja
mov
inc
imul
fsubrp
dec
pushf
sbb
jbe
push
movsb
push
mov
cltd
out
pusha
push
jge
call
lret
push
in
mov
mov
cmpsb
mov
xchg
mov
fs
mov
in
and
xor
or
dec
test
inc
sti
push
lea
les
adc
data16
mov
int
fstps
fucom
mov
sub
out
fwait
popf
mov
nop
inc
add
pop
xor
clc
or
mov
push
xor
pop
in
inc
in
lds
test
add
loope
insl
mov
xor
stc
lahf
iret
inc
aam
clc
adc
out
fdivrp
aas
sbb
dec
or
inc
rcl
test
xor
pushf
cltd
shlb
roll
insb
dec
cmpsl
popf
and
fistpl
aas
xchg
ja
enter
pop
roll
xchg
ret
in
sbb
pop
add
cmp
pop
mov
sub
dec
cmp
sbb
push
sahf
pop
adc
fnsave
pop
enter
rcrl
lret
xor
jmp
jg
rclb
mov
aaa
jo
and
mov
lret
pop
pop
mov
in
das
jecxz
jne
cmp
and
test
cltd
mov
xor
shrb
iret
mov
popa
dec
into
stos
fldt
inc
xchg
jg
daa
sbb
or
mov
adc
fnsave
adc
jne
sarl
push
mov
pushl
sbb
fwait
mov
xor
pop
cmp
movsb
aaa
mov
xchg
ja
adc
ret
sub
rolb
lcall
sbb
in
inc
insl
cld
cwtl
js
jge
in
je
enter
xchg
push
push
and
adc
ljmp
add
or
xchg
mov
clc
fsubr
cli
cld
ljmp
mov
add
jo
pop
mov
gs
mov
or
push
cmp
addr16
lret
scas
mov
mov
std
mov
aam
cmp
fwait
jge
popa
test
jecxz
xor
call
loop
call
jae
popa
addb
outsl
cmpsb
sub
cmpsl
or
dec
xor
in
bound
jmp
xor
in
push
adc
mov
pushf
cld
add
inc
cli
and
outsl
and
cmp
inc
into
mov
pop
out
aaa
stc
popf
in
ljmp
pop
cwtl
cmp
test
mov
dec
mov
xor
repnz
imul
out
sbb
and
sti
mov
adc
cmp
push
jno
mov
int
fdiv
imul
adc
sbb
cmp
pop
rol
push
outsl
rorb
mov
loope
inc
or
gs
pop
pop
mov
dec
or
or
stos
out
mov
and
add
daa
stos
and
mov
roll
testl
mov
pop
int3
repz
sbb
lods
push
lods
push
dec
adc
es
popf
mov
ja
or
pop
lods
sub
fcmovnb
aas
lods
pusha
testl
cmp
ljmp
adc
into
jecxz
iret
icebp
std
repnz
cmc
xchg
movsb
pop
cmpsl
mov
into
push
fs
ja
adcl
jae
mov
pop
sar
shll
adc
sbb
enter
mov
clc
and
pop
ss
jg
daa
push
lcall
mov
xchg
jbe
lods
mov
adc
stc
mov
cmp
sbb
xor
mov
loope
mov
aam
add
pop
cmp
ljmp
jle
push
imul
xchg
pushf
cli
rcrb
in
or
mov
scas
aaa
pop
xor
test
or
dec
scas
and
adc
subl
sbb
pop
pusha
bound
pop
inc
paddsb
or
xor
test
ret
outsb
nop
xchg
gs
cltd
sahf
mov
filds
lret
dec
repz
xor
ljmp
out
fcmovne
imulb
dec
movsl
cmp
das
shlb
rcrb
and
ljmp
dec
push
sbb
dec
jo
mov
in
inc
out
xor
lret
lods
lock
je
bound
push
fisttps
push
std
push
faddl
xor
mov
hlt
mov
xchg
aam
bound
sbb
ja
sub
ljmp
mov
cwtl
adc
xor
testl
sbb
lods
inc
dec
jno
inc
inc
jo
cli
push
push
fs
outsl
sbb
jno
pop
daa
imull
jns
dec
jle
adc
lahf
idivl
sbb
sbbb
mov
add
fildll
orl
lret
aaa
xor
cld
ds
cmpsb
jbe
clc
js
lret
jle
cs
or
inc
movsl
pop
push
ja
mov
xchg
pop
add
jno
sarl
fs
xlat
mov
push
in
scas
jl
pop
push
sbb
mov
into
fildl
inc
jnp
xchg
mov
ds
andb
mov
xchg
es
jno
xchg
leave
scas
jp,pn
dec
push
push
loopne
pop
inc
sub
cmpsl
lods
sbb
repnz
loopne
xchg
push
inc
mov
mov
xchg
rol
jno
js
sarl
mov
outsl
push
test
jns
int3
and
popa
sub
es
inc
out
xchg
arpl
outsl
or
inc
dec
arpl
ret
stos
jl
adc
icebp
and
imul
mov
push
leave
and
in
push
xor
mov
sub
adc
imul
test
mov
dec
mov
and
jl
xchg
das
sahf
push
in
negb
jns
and
xor
fdivl
pop
cwtl
jnp
je
into
xlat
push
or
mov
mov
xchg
insb
mov
mov
in
sbb
cmp
cmpsb
sahf
mov
mov
insb
les
mov
icebp
mov
cmpsl
sti
cmp
push
sbb
sbb
push
das
lods
xchg
cmovno
push
pop
ja
fdivl
jg
lea
cmpsb
aas
ss
push
jle
or
pop
push
jge
sahf
dec
test
test
cwtl
ret
mov
xor
and
add
in
push
mov
mov
hlt
fcmovbe
push
call
mov
and
ffree
rorl
xchg
jge
or
filds
xor
andb
lds
bnd
notb
and
dec
jg
int3
mov
lods
and
rorb
aad
jnp
mul
or
push
adc
fcomps
jl
push
cmpsl
or
jmp
dec
cld
cmp
pushf
lahf
bnd
arpl
pop
and
xchg
insb
xchg
push
jmp
add
xchg
mov
add
insl
fcoms
inc
xchg
aaa
mov
mov
not
sbb
push
insl
and
cmp
arpl
sbb
jnp
cs
push
sahf
pushf
mov
or
ds
push
dec
mov
xor
out
xor
cmp
xchg
and
and
dec
lret
sar
orl
pop
roll
cmpsb
mov
pop
rcll
or
pop
xchg
and
pop
or
addr16
in
jg
fs
mov
adc
loop
jg
test
out
les
lods
rorb
jns
int
sub
pop
out
fsts
adc
orb
dec
jle
lret
xlat
jno
jns
add
mov
arpl
jecxz,pn
testb
mov
xchg
outsl
jg
test
cs
push
sbb
sbb
mov
jl
push
lcall
jmp
mov
xor
test
in
cmp
lret
test
out
out
jae
stos
int3
mov
shll
lea
pop
test
sub
ret
mov
jo
mov
ficomps
adc
fs
outsb
mov
leave
ret
dec
bound
inc
dec
jg
or
push
pusha
push
mov
das
add
gs
jnp
iret
xor
xor
js
insb
sahf
pop
mov
xchg
jb
scas
bound
dec
call
xchg
les
pop
cmc
pop
adc
jmp
mov
rcr
mov
ljmp
dec
out
arpl
jg
fimull
enter
cmp
mov
pop
push
iret
shl
sbb
lock
ret
arpl
ds
popa
jle
lcall
push
jg
sub
xchg
or
rdpmc
iret
xor
repnz
test
cmp
inc
insl
cmpsb
pop
xor
lods
and
iret
mov
stos
pop
and
fnstenv
push
push
ret
icebp
in
or
mov
outsb
int
test
cmp
mov
sarb
mov
cmp
dec
or
call
sub
and
stos
sti
fidivrl
ret
ficompl
nop
mov
dec
pop
sub
xor
mov
ljmp
mov
push
adc
repz
inc
nop
mov
sbb
adc
dec
mov
pop
push
outsl
inc
stc
jp
fldl
fstpt
shl
mov
cmc
sub
rorl
xchg
movsl
ret
jmp
pop
mov
out
xor
lods
xor
ss
fsubrs
loope
adc
xor
sub
enter
and
cs
outsb
cmp
cmp
dec
inc
lds
movsb
cli
xchg
or
sub
inc
in
pop
in
adc
std
cmpsl
jp
mov
pop
or
jle
cmpsl
pusha
cmp
fs
or
xor
jge
xlat
cwtl
mov
inc
xor
jecxz
or
fcoms
cltd
shl
lcall
mov
int3
or
dec
jo
inc
aad
adc
cmpsb
pusha
divb
lret
push
jl
scas
enter
xor
pop
in
xor
fstpl
bound
pop
ficomps
pop
lods
and
int3
mov
aas
push
dec
es
xchg
js
mov
and
outsl
leave
inc
inc
mov
enter
in
setbe
push
mov
andl
icebp
aaa
outsl
xchg
mov
mov
arpl
mov
repnz
repz
fndisi(8087
mov
xchg
scas
add
mov
xchg
out
popf
imul
out
iret
and
xchg
jp
test
sub
and
mov
xchg
roll
and
xchg
pop
mov
cli
test
mov
es
xor
lahf
adc
std
fnsave
loopne
fiaddl
cmp
cmpsb
adcb
pop
jb
push
sbb
cmp
xor
mov
push
lea
aaa
nop
mov
and
dec
lods
push
in
rolb
jmp
sbb
std
sbb
cmp
sbb
cmp
inc
lahf
dec
out
mov
xchg
jg
push
sub
dec
es
aaa
outsl
jmp
nop
test
sub
jno
sbb
inc
outsl
adc
js
xor
rcrl
sbb
sub
subb
cmp
or
pushf
ror
sbb
inc
dec
es
out
sub
out
adc
cmpsl
push
adc
orl
sub
lds
or
loopne
adc
xchg
imul
into
mov
mov
add
pop
add
and
gs
push
test
xor
outsb
xor
mov
outsb
fildl
testb
xchg
lods
movsb
push
ss
xchg
jl
mov
jmp
mov
je
ljmp
pop
das
lods
clc
xor
xchg
adc
sbbl
fadd
push
xor
int
sbb
popa
push
mov
enter
insl
arpl
adc
inc
dec
outsb
jg
div
in
addr16
mov
xor
daa
add
sbb
mov
sarl
sub
fwait
sti
xor
xchg
ss
jo
fcom
fs
insl
ja
inc
mov
es
xlat
insl
test
sub
pushf
mov
push
inc
adc
fildl
cli
push
push
pop
and
and
cmpsb
xchg
imul
lods
mov
popf
xlat
les
or
or
sbb
fstpl
mov
int
or
test
scas
fisttpll
lods
mov
add
adc
pop
jne
dec
bnd
jae
dec
aaa
add
pop
jg
shrl
inc
clc
dec
roll
int
lret
xchg
addr16
inc
sbb
out
call
mov
pop
cmp
out
fwait
ds
and
jp
pop
out
repnz
push
stos
es
loope
subl
cwtl
sub
ljmp
jnp
xchg
and
mov
xor
jns
int
mov
and
into
ret
pop
loope
ror
sbb
push
sahf
jecxz
lods
cmp
fs
dec
xchg
xlat
test
inc
inc
xchg
repz
add
outsl
loope
movsl
cld
push
mov
out
mov
pop
or
mulb
add
sbb
mov
in
or
pop
lret
xor
das
outsl
sbb
testl
shll
std
pushf
jl
stos
ret
arpl
outsb
lahf
lret
add
ds
xchg
pop
mov
xchg
loope
push
lret
cli
pop
mov
inc
lret
pop
jge
out
lahf
jg
cmp
pop
into
inc
mov
inc
push
dec
dec
dec
mov
imul
and
and
adc
cmp
insl
cmc
ds
cmc
jns
adc
mov
and
push
mov
fmull
xor
xchg
inc
sbb
call
addb
cmp
inc
mov
clc
loop
addl
rolb
imul
hlt
call
push
sub
add
shll
andl
adcl
ss
jmp
xlat
in
mov
cli
rcrb
aaa
fsubrl
aam
pop
lea
out
stos
push
sbb
cmc
mov
dec
or
or
inc
jb
inc
or
mov
or
iret
or
mov
loop
movsl
in
sbb
push
scas
rcrb
pop
jnp
shr
int
dec
adc
and
jae
pusha
imul
ficoms
stos
sbb
inc
sub
jo
lcall
push
xchg
adc
fdivrs
push
lods
fdivs
sbb
rolb
push
xchg
sti
insb
cmc
fildl
ret
incb
adc
sbb
jb
neg
into
xor
or
outsb
stos
add
adc
sub
mov
leave
inc
sub
adc
push
mov
mov
pop
push
cmp
cmp
sub
mov
mov
sbb
mov
dec
cmp
jnp
addr16
xchg
pop
pushf
gs
push
mov
movsb
out
shrb
jnp
dec
pushl
inc
js
fiadds
ljmp
movsb
insl
inc
paddsb
mov
into
pop
push
jmp
mov
sub
xchg
mov
xchg
aaa
and
sbb
sbb
mov
jecxz
aam
loopne
pop
push
inc
verw
jbe
xlat
mov
sbb
mov
ss
or
sti
add
xchg
aaa
jnp
add
iret
jmp
sbb
rcrl
add
aad
aaa
push
lret
cld
jns
sub
xor
cld
insl
push
add
sub
sbb
call
into
cmpsl
or
push
lods
lret
fs
pop
inc
sbb
mov
sub
gs
jns
cmp
or
sbb
dec
fistps
cmp
fdivl
dec
push
inc
sub
jae
jecxz
pop
popf
mov
fsubrs
mov
scas
es
insb
scas
xchg
lcall
dec
in
jns
mov
je
bound
aaa
or
mov
jl
sbb
jp
out
sbb
gs
xor
pop
jmp
ja
in
pop
jae
rorl
fisttps
lea
jp
dec
jb
inc
xor
inc
push
push
xchg
sub
mov
mov
or
xor
xor
mov
mov
xor
lcall
mov
fcomip
bound
dec
mov
inc
imul
jle
repz
loop
mov
pop
sbb
sbb
pop
aam
lds
jb
ret
js
enter
sub
movsb
sbbb
xchg
test
fsubl
pop
stc
fisubrl
mov
xorb
rcl
lret
call
inc
shrb
and
rcrl
ss
push
int3
int3
dec
inc
mov
aas
dec
repz
stos
mov
sub
adc
sub
push
negb
inc
test
dec
mov
int
mov
pop
pop
jo
test
ficoms
or
cmpsl
stos
fcom
int
lar
xor
xchg
aas
sbb
cmp
dec
insl
sahf
jns
cmpsl
shll
mov
and
std
mov
aaa
mov
fcoml
mov
xchg
lods
xor
lea
xlat
push
sub
loopne
rcr
mov
pop
xor
sub
add
lahf
sbb
cli
leave
jle
sub
inc
inc
repnz
xchg
jnp
mov
les
xchg
sti
arpl
xor
xchg
and
mov
or
faddl
imul
cmpl
test
sbb
rcrb
and
popa
dec
dec
inc
xor
lea
fdivs
inc
insb
mov
in
push
adc
dec
ret
fdivs
or
es
mov
aaa
pop
imul
and
outsl
iret
pop
ja
and
inc
mov
adc
mov
int
add
or
mov
mov
outsb
movsl
into
lds
push
dec
aad
and
loopne
push
fsub
aam
in
fsub
jle
scas
add
flds
mov
lods
mov
or
jb
xchg
jae
inc
out
and
scas
push
mull
cmc
mov
es
push
inc
pop
and
int
mov
fcomps
cwtl
test
mov
cmp
enter
into
imul
mov
outsb
sub
mov
dec
xor
aas
lea
xchg
pop
pop
xchg
sbb
pop
js
dec
xor
inc
push
push
mov
jp
jl
push
and
scas
sbb
add
outsb
xchg
sub
hlt
sti
sub
mov
or
lret
and
insl
add
and
fildll
gs
push
hlt
push
ljmp
repz
jle
sub
xchg
mov
test
or
lods
and
xchg
lods
push
cmp
cmp
mov
lcall
leave
sarl
repz
pop
inc
dec
and
lcall
inc
fs
int3
rcll
jbe
xchg
push
popf
push
sahf
loopne
dec
aaa
movsb
sarl
mov
jmp
imul
jne
jle
pusha
add
js
lret
outsb
jp
add
jmp
addb
dec
mov
shlb
inc
shlb
dec
sub
sub
mov
cmp
arpl
fsts
sarb
pop
stos
ss
jge
ljmp
push
sahf
rolb
sqrtps
int3
xchg
inc
jb
lret
sbb
inc
jecxz
and
js
data16
sub
mov
cmp
dec
and
enterw
xchg
inc
jge
stos
cltd
push
push
dec
inc
push
xchg
xlat
push
pop
daa
xchg
adc
mov
add
cli
fstpl
mov
push
nop
fwait
jmp
xor
rcrb
scas
fimull
movsl
sbb
and
dec
mov
or
xchg
jecxz
pusha
sub
scas
lahf
mov
or
push
push
push
xchg
push
push
xchg
mov
or
push
pop
out
jle
push
popl
pop
cmp
lods
scas
cmp
and
insl
push
sarl
loopne
pop
or
mov
ret
xchg
stos
pop
xor
lea
mov
push
lahf
adc
aad
in
inc
jnp
clc
add
pop
inc
push
sbb
xchg
stos
out
lret
scas
dec
or
xor
loopne
js
stc
call
or
or
shlb
bound
es
dec
enter
sbb
fldl
js
cld
cmc
lods
push
xchg
jo
mov
push
push
push
call
outsl
pop
pop
push
push
xor
shll
pop
and
add
lock
divl
icebp
cmp
jle
adc
into
out
add
repz
arpl
push
inc
xorb
sahf
dec
enter
push
mov
test
jp
xchg
or
mov
lret
sbb
popl
ljmp
xchg
in
hlt
out
repnz
push
pop
lds
andl
dec
xor
insl
cmp
sub
and
sbb
push
mov
cmp
or
inc
lret
cmp
jo
popf
mov
iret
pop
push
adc
adc
rcl
push
insb
lods
insl
inc
out
cli
jno
daa
xor
sub
mov
mov
jne
rolb
pop
loop
mov
jle
sub
pop
xor
fisubrl
mov
pushl
mov
cmc
mov
or
cmp
sub
stc
and
mov
in
adc
fs
int3
pop
cltd
pop
jge
movsl
inc
mov
sub
xchg
push
pop
sbb
stc
dec
mov
cmpsb
xchg
rcrb
dec
dec
sub
pop
sbb
inc
xchg
cmc
stos
outsl
add
xchg
push
fistl
sub
dec
je
pop
mov
mov
adc
test
icebp
rclb
sub
adc
xlat
repnz
mov
mov
push
mov
shll
jne
jl
and
add
test
dec
dec
xor
call
cld
cmp
jl
sub
enter
pop
mov
xchg
into
shlw
push
into
clc
rcrl
je
outsb
test
adc
pusha
xchg
fsubr
loopne
mov
add
in
inc
push
adc
mov
mov
das
xor
pop
dec
dec
pop
jl
loope
aad
mov
or
je
hlt
and
test
dec
xor
and
clc
push
pop
xorl
xor
daa
cld
push
mov
andl
jb
sahf
aaa
in
fwait
mov
pushl
push
fnstsw
jnp
int
xlat
dec
cmp
jl
xlat
xor
push
ja
push
or
sub
mov
insb
int3
cmp
jp
imul
test
mov
push
or
jg
or
push
fs
movsl
push
and
lock
jg
sub
dec
dec
jle
inc
je
cmpsl
mov
adc
mov
mov
cltd
lahf
xchg
lods
mov
push
mov
adc
push
leave
jb
inc
sbb
rcrb
lds
jno
rsm
dec
jo
or
xchg
into
xlat
cmp
popa
pop
jbe
jb
adc
xchg
adc
insl
xchg
sbb
movsl
mov
push
mov
pop
xor
mov
je
cmp
ljmp
push
leave
imul
or
xor
sti
movsl
mov
sub
dec
inc
repnz
push
fwait
or
sbb
dec
test
mov
mov
in
int3
or
sub
js
jecxz
cmp
jno
adc
inc
dec
adc
inc
fwait
cli
push
std
and
add
cmpl
hlt
setb
divb
sub
repnz
pop
movsb
mov
das
addr16
dec
test
out
xchg
xchg
or
push
popa
dec
dec
pop
rcll
test
jle
rcrl
or
aaa
mov
imul
mov
cmpsb
cmp
sti
scas
jne
mov
scas
cmp
jmpw
pop
and
in
mov
out
jle
cmp
cmp
cld
aad
ljmp
mov
stos
and
repnz
das
andl
add
lds
aam
or
xor
shrl
rclb
int3
test
ret
mov
rclb
add
cli
clc
stc
mov
mov
jle
cli
aam
outsl
test
nop
mov
xor
sahf
push
rclb
outsl
cmp
aaa
dec
jbe
add
out
cmpsb
ljmp
xlat
xor
aaa
ficompl
sbb
mov
cli
cmp
pop
mov
sbb
fimuls
jns
inc
pop
fxch
lods
aam
movsb
cwtl
cmp
cmp
push
lret
or
pop
repz
xchg
sti
pop
push
mov
mov
clc
mov
mov
cmp
inc
aas
and
lahf
popa
sub
je
mov
movsl
mov
jo
call
cmp
lock
lret
adc
jae
jmp
adc
adc
arpl
cmp
je
lods
mov
mov
pop
push
inc
outsb
pop
and
cltd
dec
sbb
fldenv
aad
jl
push
not
cmp
mov
pop
clc
sti
xchg
mov
xor
fbstp
aas
cmp
popfw
cmp
stc
fistpll
add
add
pop
fisttpl
insb
fwait
xchg
mov
decl
dec
cmc
aad
std
stc
sub
xchg
mov
jmp
scas
dec
pop
bound
sahf
lock
fbstp
mov
scas
cmp
xor
xchg
mov
das
lcall
xor
jg
xchg
loopne
movsb
lods
jge
inc
push
cmp
add
je
movsb
xchg
inc
jnp
jae
pop
cltd
or
cli
ss
mov
icebp
jae
inc
aad
inc
adc
push
aam
vdivss
jmp
cltd
clc
je
mov
sbb
scas
jp
adc
add
dec
adc
pop
iret
pop
iret
ja
in
lahf
aaa
in
mov
and
jmp
pop
je
adc
pop
jmp
mov
sbb
fsubrp
mov
test
inc
out
fsubrs
mov
lahf
adc
xchg
jae
aas
repnz
mov
or
add
add
test
jle
xchg
dec
mov
pop
push
jp
fwait
sbb
rolb
jl
xchg
sbb
cmp
pop
lods
sti
in
rcll
icebp
mov
lea
sub
mov
inc
mov
call
leave
notl
fnstcw
pop
out
dec
mov
aad
int3
pop
mov
fs
mov
xchg
xchg
dec
xor
in
sarb
dec
pop
fldenv
sbb
cs
mov
jno
dec
dec
and
data16
push
fnsave
jmp
fistl
mov
mov
xchg
fists
sahf
jp
nop
lods
cmp
mov
imul
push
sti
cmpl
adc
pop
fwait
and
dec
pop
pushaw
pop
push
and
or
xchg
in
je
jb
fsts
cs
add
add
movsb
lret
push
pop
js
cli
xchg
insb
mov
mov
sub
mov
mov
mov
stos
movsb
xchg
fwait
les
jp
sbb
out
pop
sbb
pop
sub
fmull
jne
xor
insb
cmp
pop
loope
mov
nop
xor
leave
pop
inc
mov
or
lods
stos
push
lods
das
ds
fbstp
xchg
imul
inc
out
dec
push
lcall
flds
jae
dec
or
push
bound
fstpl
aas
sub
outsb
test
cld
mov
xor
into
mov
sub
sub
daa
insb
rcrl
mov
mov
loopne
mov
xchg
and
push
push
fsub
inc
sbb
mov
syscall
cmpsl
inc
je
mov
pop
mov
fs
call
add
insl
pushf
cltd
jns
pop
insb
rcrb
loopne
push
fnstsw
push
dec
push
mov
adc
lea
xchg
int
orb
mov
pop
sub
divl
jb
mov
jle
dec
push
andl
sub
insb
mov
popa
in
pop
lret
repnz
mov
fmull
lock
lcall
js
xor
add
or
fmuls
orb
add
and
out
pop
lock
push
add
mov
xlat
in
lret
insb
fildll
rol
mov
push
dec
add
mov
ds
in
rcll
in
jbe
call
test
mov
pop
sets
stc
mov
mov
cmp
sbb
std
imulb
int3
push
cmp
jecxz
nop
pop
insb
sbb
cmpsl
addr16
sarb
outsl
mov
js
fldl
pushf
aad
stc
clc
popa
mov
pusha
sarb
pusha
scas
inc
dec
mov
enter
xchg
mov
dec
ret
jno
cld
stos
inc
aaa
fsts
xchg
mov
lret
aas
clc
les
movb
out
or
jno
xlat
mov
repz
sbb
push
add
fwait
lods
mov
aad
loopne
pop
jno
arpl
xchg
push
rcrb
addb
adc
inc
andl
lret
inc
mov
jns
mov
inc
sbb
mov
dec
mov
mov
out
sub
adc
dec
pop
adcb
loope
stos
sbb
out
pop
lds
ja
imul
xchg
filds
pop
pusha
test
rcrl
in
mov
dec
cltd
inc
orb
and
or
dec
loop
movsl
repnz
fstl
push
pop
mov
rcrl
out
in
sub
cld
mov
enter
pop
cmp
aas
push
flds
mov
punpckhwd
sub
movsl
pushf
pop
icebp
into
jle
es
add
dec
or
ss
add
cmp
push
push
inc
add
test
or
xlat
in
loope
xchg
imul
aaa
jmp
and
cmpb
pop
test
xor
pop
fnstenv
push
pop
popf
dec
dec
imull
cmp
lds
mov
sbb
jnp
dec
sarl
fcmove
fisttpll
sbb
inc
test
sub
in
jb
daa
fcomps
sbb
cmpsb
xor
mov
pop
push
dec
dec
stos
push
jecxz
out
mov
out
xor
jp
ljmp
out
lods
cli
scas
mov
imul
sbb
cmp
loop
xor
fcmovnbe
sbb
and
sti
mov
lahf
add
inc
das
adc
add
lods
xchg
scas
std
sub
inc
hlt
add
pusha
xchg
mov
jns
inc
fimull
cmp
push
test
outsl
xchg
xor
mov
daa
ds
mov
adc
and
mov
sbb
jno
push
jae
pop
stos
inc
add
in
jne
lret
and
add
sarb
mov
shlb
movsl
cli
dec
add
sub
fdivl
cwtl
jmp
pop
jle
jae
sbb
xchg
mov
fidivs
fidivs
and
and
data16
adc
dec
outsl
mov
push
and
add
mov
scas
into
mov
or
and
daa
fld
sahf
dec
aad
add
dec
cmpsb
push
jb
mov
int3
pop
stos
sub
iret
push
sub
in
scas
push
lea
jge
inc
add
rcrb
xchg
pop
jp
push
dec
push
mov
and
sub
ficoml
addl
xor
and
mov
insl
inc
or
fbstp
mov
add
mov
xor
ja
xor
dec
mov
fisubrs
xlat
mov
int3
adc
jecxz
sbb
es
jnp
dec
xchg
jle
repnz
pop
icebp
mov
orl
jp
or
sbbl
test
push
push
pop
sbb
rorw
lock
out
xor
mov
push
out
imul
xor
cmp
cmp
int3
jae
cmp
xchg
xchg
dec
leave
aas
xor
clc
cmp
and
pop
mov
clc
or
idivl
enter
js
and
aad
or
fnclex
push
cltd
test
clc
dec
push
das
or
sub
cmp
lcall
sbb
pop
sbb
jmp
sbb
sbb
adc
jg
lret
pop
xor
je
cld
pop
and
subl
ret
popf
cmpsb
ja
cmpsl
loope
push
lcall
in
cli
bound
cmp
mov
inc
movsl
sbb
jno
xchg
in
xchg
and
int
cmp
shll
add
push
sahf
sbb
push
rclb
mov
and
fwait
ss
jns
aam
push
pushf
inc
push
or
aas
jl
test
jne
mov
mov
sbb
lahf
adc
add
dec
les
adc
cmpsl
leave
sbb
dec
push
outsl
jbe
or
popa
and
xor
data16
adc
inc
out
jns
pop
inc
adc
mov
scas
std
push
cmc
push
lahf
cld
inc
lods
mov
mov
out
push
lret
inc
dec
call
movsb
jge
rolb
filds
sub
cmp
ljmp
ret
jle
mov
sub
inc
insl
inc
insb
insb
jl
add
repz
fs
inc
les
pushw
dec
push
in
sub
sahf
fsubs
fdivp
cmp
jo
xor
popa
lahf
addr16
push
imul
dec
hlt
popf
xor
adc
outsb
orl
jl
mov
incl
cmp
je
jg
das
pop
pop
pushf
mov
inc
add
jno
add
out
jle
rcll
rol
cld
int3
mov
cmp
adcl
add
shlb
mov
out
divl
ror
fs
pushf
fisttps
adc
mov
jno
inc
call
cmc
fldenv
lds
push
mov
roll
inc
ds
and
dec
push
jbe
jbe
xor
pop
dec
and
inc
mov
repz
mov
hlt
xchg
or
das
lret
out
popf
add
aam
shrb
repnz
jnp
nop
mov
sub
incb
repnz
loop
lret
rcrl
shrb
lds
lock
jge
dec
pop
push
mov
lahf
ja
or
mov
into
lods
inc
outsl
xor
clc
pop
mov
pop
push
mov
shlb
push
fidivs
push
call
xor
mov
jmp
xchg
push
cmp
xor
xchg
mov
or
repnz
pop
pop
cltd
push
cmc
push
int
popf
sbb
test
cmp
xlat
xor
sbb
and
push
aaa
fcomp
in
pop
sbb
mov
dec
mov
mov
cmp
adc
xchg
inc
iret
ret
jg
popf
mov
sti
and
iret
mov
test
adc
jl
lds
sbb
mov
fistpll
pop
xchg
cmp
xchg
xor
cwtl
lret
leave
and
les
push
and
mov
add
movsb
lods
lcall
es
adc
repnz
pop
push
movsb
dec
adc
lods
lock
lock
cmp
lods
pop
je
mov
popa
sub
rolb
xor
pop
xchg
xchg
fldcw
sub
mov
adc
xorb
js
fcomip
adc
mov
insb
out
cld
jl
fsubr
insl
and
dec
aaa
or
add
sbb
int
orl
jecxz
iret
js
xchg
mov
arpl
sub
xchg
sub
mov
fbld
push
out
scas
faddl
cmp
adc
mov
test
shl
push
aaa
subb
push
fldlg2
dec
popf
add
ffree
stc
sbbl
xchg
jae
mov
cld
add
pop
repz
or
sub
fdivrl
rolb
xchg
ljmp
cmp
push
out
jge
mov
movsb
outsb
ljmp
ss
mov
add
adc
mov
or
mov
popf
stos
push
or
fwait
mov
push
pushf
push
stos
jecxz
push
xchg
sub
popw
push
mov
sub
fldenv
in
adc
stos
in
aam
les
lcall
cltd
fsubr
jl
mov
cmp
cmp
adc
das
les
xchg
or
jae
imul
aaa
scas
in
dec
adc
jns
int
pop
pop
sub
push
std
mov
popf
mov
jl
xchg
xor
mov
sub
jo
jmp
xchg
sub
sub
fisubrs
push
sti
stc
mov
into
xchg
dec
in
cmp
jmp
ds
cwtl
push
andps
or
out
outsb
test
sti
pop
je
or
ret
es
enter
imul
int3
xchg
aad
mov
sub
hlt
addr16
loop
leave
lret
ja
rcl
lods
sub
test
out
enter
fisubs
xor
xchg
jo
xchg
gs
test
bound
rorb
leave
cld
cmp
dec
and
cmp
dec
lock
mov
dec
loope
sub
cmp
cmp
adcl
pop
int3
push
sub
imull
fsubrl
mov
or
push
out
stos
jl
out
imul
ret
arpl
xor
mov
mov
and
mov
mov
sub
int3
cmp
outsb
or
pop
mov
daa
out
movsb
fs
and
andb
mov
jmp
loop
fs
ja
push
fistpl
lds
push
lea
xchg
dec
ret
out
aad
xor
cmp
xchg
xor
rclb
dec
and
or
ret
ljmp
js
icebp
mov
popa
cmpsb
and
xchg
xchg
xor
sbb
out
adc
stos
adc
xchg
push
andl
lret
mov
cmpsb
push
cmp
and
fstl
sub
jno
push
push
mov
loope
lea
inc
sub
and
std
xor
in
into
cmp
adc
push
mov
scas
sarl
sbb
popf
fbld
push
xchg
sar
dec
popa
popf
pop
xchg
pop
cmp
lcall
out
sbb
popf
adc
hlt
inc
add
mov
orl
test
jnp
mov
fs
jnp
mov
ljmp
cli
mov
xchg
add
enter
test
sub
push
pop
or
add
sub
cmp
pop
andl
mov
or
imul
pop
inc
and
call
adc
into
shrb
fmull
inc
call
mov
sahf
hlt
gs
roll
xlat
mov
adc
sub
mov
xor
out
movsl
jp
int
push
adc
pop
dec
aam
mov
stos
sbbl
mov
mov
fldl
mov
mov
loopne
cmc
mov
cwtl
mov
sub
push
dec
push
ficompl
mov
push
jmp
sbb
call
int3
leave
inc
push
cmpsl
sbb
push
popa
jae
in
movsl
imul
scas
mov
or
mov
stos
ds
add
mov
das
xorb
adc
pop
imul
push
pop
scas
fdivrl
xor
pusha
idivb
or
push
shll
or
lods
or
pop
push
adc
dec
outsl
dec
test
mov
idivl
repnz
or
loop
pushf
imul
jmp
addr16
push
sahf
ljmp
adc
repnz
dec
xchg
mov
stos
jns
lds
andl
add
mov
scas
lea
mov
push
mov
movsb
das
inc
xchg
cs
dec
lcall
adc
dec
mov
inc
movl
sbb
jb
scas
std
mov
jne
pop
mov
push
or
pop
enter
rcrb
inc
bound
cmpsb
in
cmp
in
rcrl
cmp
lds
inc
movsl
cli
dec
incb
repz
mov
xchg
mov
pop
daa
add
jp
add
jnp
pop
jo
dec
adc
xor
shl
adc
lds
outsl
and
test
mov
popf
sbb
mov
mov
aam
inc
imul
les
push
out
adc
inc
mov
shl
mov
shlb
sbb
push
data16
cmpsb
and
addb
cmc
xchg
fnstenv
push
in
mov
inc
je
mov
mov
mov
xchg
es
test
scas
aas
movsb
pushf
xchg
cmp
dec
sub
sub
jl
int3
fwait
mov
jbe
out
add
mov
push
and
sbb
test
mov
scas
xchg
or
mulb
out
das
xlat
cwtl
xchg
std
ret
or
fucomp
adc
imul
shrb
add
xchg
mov
enter
je
gs
jp
push
fldl
mov
jbe
mov
sub
jb
in
push
xchg
mov
ficompl
add
pop
and
frstor
hlt
add
and
testl
sub
cmp
imul
dec
lret
mov
fwait
popf
bound
dec
int
lret
inc
into
xor
and
dec
fldt
notb
ret
sbb
test
ljmp
cli
mov
sub
jl
jge
dec
addr16
pop
push
test
pop
sub
pusha
test
test
cltd
add
dec
daa
dec
mov
cltd
rorl
dec
popa
cld
pop
je
and
xor
mov
push
inc
pop
ja
insl
cmp
andl
sbb
nop
add
dec
dec
pop
jne
and
inc
cwtl
jbe
iret
xor
push
insb
jb
ret
inc
je
add
xchg
std
jnp
sub
cltd
mov
test
ror
push
pop
icebp
mov
xor
fisttpl
mov
shll
das
insb
push
aas
sarb
push
and
sbb
out
mov
cmpsb
fidivs
mul
insl
dec
addr16
mov
push
sbb
psadbw
out
adcl
inc
dec
jg
xchg
xchg
pmulhuw
in
movsl
out
mov
push
jno
pop
dec
add
sti
addr16
in
inc
dec
idiv
mov
cmpsl
or
mov
jne
stos
adc
dec
sbb
imul
add
xchg
dec
addr16
lea
jg
push
sub
fldenv
divb
mov
adcb
push
dec
cmp
push
sub
cs
outsl
sub
lret
ret
mov
xchg
testl
nop
sbb
aad
into
add
xchg
rorb
out
iret
outsb
push
int
xor
mov
adc
push
mov
inc
daa
adc
push
movsb
int3
fisttpll
sub
jge
shl
push
mov
les
ret
adc
popf
mov
jp
add
cmp
adc
loope
xchg
fildl
or
lret
lods
lock
scas
pop
mov
push
push
je
out
sbb
movsl
cli
push
test
sub
adc
pop
es
mov
xchg
inc
push
jle
sbb
scas
push
cs
push
xor
cmpl
loop
jmp
or
test
es
cwtl
dec
cld
xor
xlat
cs
pop
or
xchg
les
add
or
jg
test
mov
movsb
pop
test
sbb
xor
hlt
adc
das
add
aaa
sahf
call
aam
stc
aad
int3
pushf
cmpsb
jb
mov
arpl
int3
mov
repnz
sbb
insb
movb
lcall
pop
jmp
adc
and
inc
enter
pop
in
or
andb
repz
daa
push
xor
ja
mov
fnsave
mov
repnz
data16
mov
insb
int
aas
add
arpl
sbb
jle
mov
hlt
add
add
inc
dec
fdiv
leave
or
add
shll
mov
arpl
scas
inc
decb
ficoms
sbb
in
mov
jmp
sbb
mov
rorl
repnz
loope
cmpsb
mov
mov
jno
push
jp
jl
loopne
inc
ret
adc
lret
loopne
fwait
into
xor
or
outsl
arpl
fwait
add
cmp
addl
xchg
dec
xor
sbb
push
adc
or
sub
jl
jecxz
jmp
in
push
cmp
movsb
inc
push
push
popa
fisttps
xlat
and
mov
imul
faddl
fbld
scas
mov
xchg
add
in
sarb
out
mov
loopne
pop
sbb
fstpl
adc
sbb
add
mov
pop
cld
into
ss
pusha
jnp
cmp
add
jle
sub
push
mov
sbb
cmpsl
adcl
imul
ljmp
in
rcl
xor
mov
fcoml
pop
xchg
cltd
outsl
stos
xor
mov
sbb
enter
pop
add
xor
popa
daa
int3
movsb
movsb
xlat
add
in
fcoml
mov
dec
clc
jmp
fsubl
out
test
cmpsb
and
int3
test
jmp
sbb
jmp
or
testb
std
out
mov
out
sbb
lods
decb
insb
mov
or
out
lret
cmpsl
or
adc
pop
dec
pop
add
lret
cli
arpl
cmp
dec
outsb
pop
sysexit
fsubs
cwtl
repnz
das
data16
xchg
mov
add
jae
sbb
inc
fdivl
pusha
jg
push
mov
fmull
cmc
loop
jb
xor
push
popf
dec
pop
xchg
test
sbb
mov
pop
adc
dec
mov
cltd
int
insl
repnz
fdivr
jmp
xor
xchg
pop
clc
mov
mov
inc
inc
lcall
insl
push
int3
repz
dec
jmp
repz
popa
cmpsb
or
sub
xchg
lods
adcl
lcall
pop
rolb
stos
sahf
mov
dec
pop
js
sarb
mov
mov
jmp
es
adc
lahf
or
imulb
jno
cmc
cwtl
or
mov
sbb
push
outsb
mov
cmp
stc
adc
rsqrtps
ret
xor
and
sti
mov
or
dec
fsts
sub
test
jb
stos
adc
mov
nop
mov
rclb
and
ret
inc
inc
jmp
in
xor
test
movsb
icebp
pop
ret
mov
loop
push
xchg
roll
addr16
pop
aas
mov
push
rclb
fidivl
repz
jb
iret
xor
inc
int
into
and
dec
lods
repnz
jp
push
push
sub
or
out
pop
jp
fisttpll
cld
inc
mov
add
jnp
in
mov
cmp
xchg
rorb
pushf
orl
aam
inc
test
iret
ret
rclb
stos
mov
push
adc
push
jecxz
aaa
jle
cmp
sti
xor
movsl
ret
push
cmp
popf
sbb
out
inc
mov
mov
out
in
mov
inc
mov
lahf
add
cli
jl
jecxz
clc
mov
jae
xchg
mov
sbb
pop
call
cmp
add
test
xchg
mov
pop
sahf
adc
cmpsb
adc
imul
movsl
mov
adc
push
and
test
mov
imull
adc
inc
inc
pusha
leave
dec
test
dec
mulps
inc
jmp
test
aad
lret
scas
add
stc
sub
sbb
inc
popa
jae
add
dec
test
repz
mov
divl
mov
mov
fidivs
mov
cmp
or
lock
inc
clc
xchg
xchg
push
jge
mov
xor
inc
je
mov
xchg
rcrb
test
mov
adc
pop
push
loopne
js
dec
inc
lock
sbb
inc
sahf
sub
sahf
mov
pusha
add
and
addr16
jmp
mov
inc
les
inc
mov
xchg
pop
pop
fwait
xchg
mov
jg
gs
gs
mov
cmp
push
pop
cmp
pop
adcl
ss
cmp
lcall
cmp
in
sub
and
jmp
enter
xor
sbbb
jmp
pop
js
and
test
cmpsb
testb
inc
dec
and
arpl
mov
dec
je
add
add
sbb
inc
int
jns
push
mov
push
addr16
scas
int
leave
dec
in
movl
pop
popa
jno
cli
mov
push
inc
push
out
and
rclb
fimuls
and
hlt
pop
mov
or
push
dec
sbbl
push
xchg
inc
sbb
dec
cmpb
mov
mov
jl
push
pushf
arpl
inc
mov
xchg
test
scas
stc
das
adc
sub
inc
iret
ss
popf
orl
test
jns
pop
xor
mov
pushf
mov
sti
jae
xor
jns
dec
sub
push
fdivs
cwtl
popf
ret
pop
lods
inc
idivb
or
jb
pusha
mov
cmpsb
add
jl
lret
mov
xor
sbb
mov
jp
sti
test
mov
jecxz
cmc
jnp
pop
int
in
or
cmp
into
push
sti
imul
in
outsb
sbb
les
cmc
sub
loop
fdivrs
jmp
lret
mov
movsl
pop
dec
mov
popa
lock
jp
sub
dec
loope
cmp
hlt
addr16
cmp
add
ljmp
neg
mov
and
je
inc
push
push
mov
leave
icebp
jae
add
arpl
xchg
ret
pushw
int3
pop
js
negl
adc
pop
std
clc
pop
out
sub
jecxz
shl
cmpl
mov
push
gs
pop
jmp
mov
xchg
hlt
pop
pushf
xor
sub
inc
pop
int
cltd
ja
popa
lock
into
rorl
loopne
or
adc
jl
mov
fldt
stc
iret
or
fnstenv
pop
adc
emms
pop
imul
jecxz
push
inc
and
jl
push
movsl
pop
je
pop
iret
cmp
int3
xchg
in
fwait
jmp
ret
insl
or
mov
fsubl
std
xchg
push
fidivl
adc
and
sti
imul
xchg
cmp
xor
rclb
imul
mov
mov
js
repz
and
pop
gs
loopne
adc
xchg
dec
std
sub
pop
cwtl
ret
ljmp
out
lret
sub
mov
sub
jmp
lods
inc
enter
adc
ret
and
pop
or
jo
add
sbb
xor
inc
dec
mov
in
jns
pop
add
jb
sub
xchg
and
imul
cmp
xchg
cltd
fwait
loop
sbbl
loopne
push
std
js
out
dec
fmul
cmpsb
into
sbb
mov
icebp
ja
fwait
lods
xchg
push
lret
ja,pn
mov
aam
iret
test
pop
into
loopne
dec
add
mov
adc
pop
jb
insb
f2xm1
sub
js
ja
das
shrl
clc
je
iret
aad
add
inc
xchg
test
xchg
jge
out
xchg
out
cmp
in
sub
push
jb
loopne
pop
es
or
dec
mov
stos
jo
call
or
es
dec
cmpsl
mov
xchg
mov
sub
adcl
stos
ret
push
sub
rcr
mov
xchg
jp
into
icebp
in
xor
sub
dec
add
xor
scas
pop
xchg
jb
sub
add
mov
addr16
push
jo
sub
add
sbb
out
mov
add
push
sbb
or
pushf
jo
bound
sahf
out
dec
cmpsb
mov
or
or
xchg
lock
mov
movsb
xlat
clc
ss
test
jl
fcom
or
jg
sbb
popa
or
xchg
push
inc
mov
cmp
add
or
ljmp
and
lea
in
push
pop
aam
je
add
dec
ret
call
xor
xchg
fdivrl
mov
xchg
sub
pop
in
loopne
mov
pop
mov
lods
cs
jle
jg
adc
fadds
sub
insl
cmp
jae
cwtl
adc
hlt
insb
dec
xchg
pop
insb
xor
pop
imul
mov
mov
jg
pushf
jbe
minps
adc
sub
adc
shlb
inc
je
mov
lcall
out
jb
fwait
adc
test
mov
ret
std
push
xchg
and
push
mov
push
mov
ret
mov
lds
push
pop
scas
les
repz
das
stos
lods
cmp
ds
sub
mov
outsl
aaa
data16
out
rcr
pushf
and
and
or
dec
pop
inc
out
jbe
jns
ja
call
mov
jb
jnp
sbb
mov
sub
out
ss
testb
je
data16
mov
les
leave
sarb
imul
in
adc
jbe
pop
push
adc
inc
icebp
lea
testl
out
lock
gs
adc
jle
imul
dec
add
fisubs
test
lea
mov
int
mov
mov
lahf
mov
sarb
xor
loopne
int
push
adc
sub
sub
popf
call
lret
push
insb
jo
jmp
fisubrs
pushf
xchg
jg
testb
iret
in
xchg
lahf
lods
push
cmp
in
jmp
test
adc
inc
xchg
or
jge
movsl
jnp
push
rclb
xchg
movl
xor
xorl
jb
insl
push
add
test
mov
mov
mov
jecxz
mov
sub
xchg
push
jge
dec
and
lcall
add
push
xchg
sub
or
xchg
sbb
aaa
push
or
test
mov
mov
int
aam
hlt
ret
mov
or
or
scas
loope
mov
cs
movsl
aam
mov
and
movsl
sbb
mov
or
cli
jne
dec
cmpsb
or
xchg
mov
daa
gs
cmpsl
mov
xchg
popf
jno
retw
jmp
sahf
cmp
sar
aam
in
es
pushf
pop
xchg
inc
dec
js
pop
daa
cmc
ss
pop
inc
or
adc
outsl
orb
adc
cmp
push
xor
jge
xchg
inc
out
loop
in
ret
bound
out
inc
cmc
push
jecxz
xchg
into
sbb
sub
sbb
pop
fnstsw
mov
in
cmp
sbb
jno
hlt
cmp
push
sbb
xchg
sub
dec
subb
mov
or
and
xchg
lods
cli
and
sub
mov
mul
test
xor
xchg
mov
movsl
das
dec
hlt
movsl
js
dec
push
sbb
inc
aam
mov
cmpsb
imul
lods
adc
jno
fxch
push
xchg
and
sbb
sbb
and
or
jle
or
xchg
lret
mov
or
or
in
pop
je
repz
inc
lahf
and
push
sub
sarb
dec
repz
cmp
lds
orl
mov
rorl
cmc
xchg
push
movl
jae
cmp
test
loopne
pop
nop
ret
outsl
mov
daa
mov
stos
inc
iret
mov
idivl
scas
or
cmp
sbb
xor
mov
pop
sub
je
cmp
stc
push
mov
dec
aaa
dec
push
push
stos
flds
jge
pop
push
bound
cmp
outsl
sahf
shr
into
fsubrs
sub
in
mov
and
cmpsl
jl
lds
push
sbb
outsl
or
pop
jns
call
pop
outsl
and
dec
mov
psllq
dec
adc
ljmp
push
pop
mov
lcall
stc
xlat
cmp
mov
or
repnz
fistl
adc
jmp
inc
enter
das
fidivs
sti
mov
cmp
pop
adc
mov
js
test
lea
mov
das
or
clc
mov
push
call
pop
adc
fnstsw
or
mov
mov
sub
cmc
mov
or
jge
inc
into
lods
cltd
das
push
fisttps
push
leave
xchg
outsb
push
push
mov
sahf
push
cmp
shll
sbb
push
jge
pop
mov
pusha
mov
hlt
dec
dec
adc
roll
add
aad
mov
and
test
fucomip
pushf
fnstenv
cmp
sub
adc
inc
les
push
aam
sbb
pusha
push
dec
loop
mov
inc
sub
dec
leave
clc
pop
test
mov
or
mov
fistps
sti
adc
outsb
nop
lcall
addr16
in
or
jg
pop
daa
popa
sbb
dec
push
fildll
mov
cmp
xor
scas
je
in
mov
test
xchg
clc
jb
mov
jb
sahf
imul
pop
sub
or
push
stc
push
dec
mov
cwtl
popf
cld
and
cmp
mov
mov
adc
loopne
cwtl
and
cmp
scas
lret
pop
xchg
ss
pop
test
aam
push
popf
pop
fucom
fldl
sub
and
dec
push
sbb
inc
xchg
inc
mov
or
sbb
inc
insl
roll
pop
fs
lret
cmpsb
das
push
push
push
sahf
hlt
jbe
pop
addr16
mov
incl
cmpb
fiadds
add
mov
in
cs
iret
subb
iret
dec
les
lds
xchg
pop
inc
addr16
mov
add
std
jbe
dec
iret
jb
pop
jp
in
shlb
nop
adc
fldt
mov
es
arpl
pop
or
mov
les
out
cmp
jge
pusha
xlat
sub
insl
jg
push
add
mov
mov
sahf
imul
loopne
cmp
push
pop
pop
insb
sbb
or
cmc
arpl
repz
cmp
jb
fcomps
cmpsl
cmp
adc
or
add
jb
lea
nop
int3
fs
and
mov
ret
mov
push
jecxz
inc
mov
bound
mov
out
ss
cmp
mov
pop
repnz
adc
or
test
xor
push
int
in
mov
xorl
hlt
xchg
sbb
adc
int3
mov
mov
xor
outsl
jle
repz
adc
fstps
pop
jmp
subl
or
xchg
imul
test
jb
and
or
adcb
cwtl
fdivp
sbb
nop
sbb
cmpsl
and
lock
inc
notb
xor
dec
fisubrs
int
sbb
scas
jbe
icebp
pop
dec
and
adc
movsl
lods
sub
or
stos
push
movb
in
and
pusha
sub
inc
sbb
xor
mov
ja
xchg
cmp
adc
xchg
hlt
add
sti
in
jp
xor
iret
cmp
lret
cmp
pop
dec
push
ret
jmp
jge
inc
mov
or
xor
loopne
or
adc
xlat
arpl
xor
mov
push
mov
jl
loope
mov
xchg
orb
sar
adc
fsts
cli
adc
scas
push
pop
jnp
int3
push
or
outsl
test
insl
dec
fcomps
mov
pop
insl
sub
pushf
enter
mov
ja
mov
fwait
je
add
mov
inc
fisubrs
xchg
mov
insb
insb
push
leave
ljmp
divl
dec
inc
frstor
mov
jmp
xchg
mov
mov
shlb
ss
pop
mov
popa
sarl
cmp
mov
push
sbb
xchg
imul
sti
ficoml
in
je
popa
hlt
sbb
rcr
rcll
call
ss
jno
xor
xchg
cmpps
sti
loope
mov
inc
cltd
or
pushf
stos
popf
rol
out
xor
clc
mov
in
mov
clc
lahf
mov
adc
in
rclb
sub
lock
adc
mov
faddl
mov
gs
xchg
adc
loop
out
push
or
andl
insl
adc
aas
jb
pop
lods
mov
jle
mov
loopne,pt
test
lock
mov
fyl2x
pushf
adc
xchg
add
cs
and
sub
outsb
out
xlat
push
cmc
scas
add
adc
ret
lea
xchg
iret
inc
xchg
pop
daa
scas
inc
xor
mov
xchg
dec
or
test
scas
or
mov
out
mov
test
cmc
mov
iret
push
shrb
adc
pop
mov
in
mov
mov
scas
shl
mov
xchg
pop
subb
cmpsl
and
dec
stos
loope
jnp
jge
int
stos
push
sbb
push
pop
jnp
push
test
mov
out
jne
int3
fidivrl
push
cmp
mov
mov
xchg
push
mul
mov
adcb
dec
sahf
inc
and
out
pop
cmpl
aad
xchg
and
sti
sbb
fldt
push
mov
addl
hlt
xchg
mov
mov
adc
stc
or
jnp
out
cmp
xorl
mov
cmp
jnp
lock
jae
lds
jg
loopne
stos
ljmp
push
hlt
out
jge
pop
lret
mov
pop
dec
push
mov
sahf
mov
jmp
fistps
sbb
xor
in
jecxz
aad
cmpsb
andl
mov
addr16
xor
xor
movzwl
and
and
lret
sub
pop
cld
xchg
repnz
pop
xchg
ret
mov
xchg
cmp
scas
cmp
test
pop
loope
mov
adc
mov
sub
repnz
mov
imul
scas
icebp
out
jnp
and
aas
push
push
inc
xchg
xchg
cmp
rcrl
enter
mov
jge
mov
inc
lods
fnstcw
out
xchg
fisttpl
xor
cmpsb
mov
pop
sub
mov
cltd
pop
lea
in
push
ljmp
inc
imul
dec
andb
push
xchg
add
in
scas
xchg
cmc
push
inc
repz
jae
mov
lret
out
fbstp
addr16
addr16
mov
add
mov
or
arpl
inc
pop
mov
ja
jecxz
out
fstl
xor
test
mov
cmp
sbb
rcrb
cwtl
cld
stc
and
sbb
or
daa
scas
mov
aad
sub
lock
mov
aam
imul
lcall
ret
mov
cmp
fistps
fisubl
mov
repz
add
orb
mov
mov
ret
clc
js
or
jbe
sub
inc
cmpl
iret
std
dec
lds
out
xchg
scas
or
lock
mov
mov
jp
cwtl
and
sbb
mov
and
sbb
jns
mov
shlb
ret
pushf
clc
aad
int
sbb
mov
mov
sub
and
mov
pop
fiaddl
iret
jae
shl
clc
cmp
adc
call
inc
nop
xchg
jne
cmp
add
lds
inc
aad
stos
rclb
push
insb
dec
in
aaa
popa
jnp
stos
pop
and
notl
nop
push
cmp
xchg
push
push
pop
add
and
fildll
or
ret
mov
inc
prefetchwt1
or
int3
test
stos
dec
in
stc
or
or
mov
cmpsl
push
xchg
test
test
stc
add
jecxz
ljmp
xor
in
cwtl
stos
mov
bound
pop
js
insl
bound
outsb
cmp
call
lahf
or
movsb
inc
sar
push
and
pop
cld
sub
jno
add
inc
ds
fcomps
fcmovnu
out
sub
dec
inc
mov
cmpsb
insb
setp
nop
xchg
lods
mov
cmp
jecxz
cmp
cmc
lret
mov
jle
xor
lcall
mov
imul
pop
sahf
inc
les
sbb
or
jno
sub
sbb
jmp
xorl
pop
xor
movsb
stc
xorl
xor
dec
jo
cld
stc
popa
or
inc
sahf
cli
pusha
cmpsb
repnz
cmp
push
push
lret
cmp
ljmp
dec
cmp
dec
or
and
loop
pushf
fwait
stos
add
add
jge
jl
pop
in
dec
test
incl
fwait
test
imul
adc
fdivrl
sbb
cmp
dec
ds
jne
dec
leave
idivb
cltd
cld
pop
push
test
cltd
outsl
das
jne
mov
pop
mov
in
roll
mov
cwtl
int3
ja
xchg
ficoml
cld
pop
daa
or
orl
and
xor
dec
mov
int
pop
cltd
pop
fbstp
sub
xlat
or
fbstp
stos
shl
mov
inc
ret
addr16
pop
movsl
pusha
ret
sub
arpl
std
cmp
adc
jnp
sbb
lret
push
cmp
jno
loopne
dec
pushf
sbb
mov
mov
cwtl
adc
ret
nop
arpl
je
test
mov
loopne
jnp
int3
rol
out
mov
in
scas
mov
mov
adc
cmp
rclb
lock
pop
sahf
movsb
enter
lcall
jbe
xchg
xchg
xor
lcall
std
xchg
ret
jnp
mov
psraw
xchg
cmpl
sbb
outsl
and
jb
pop
dec
mov
jnp
dec
adc
cwtl
testb
das
aad
leave
in
and
mov
pusha
repz
in
xorl
cli
jmp
mov
lea
or
and
inc
add
xor
js
into
push
test
dec
pop
test
sahf
mov
and
add
adc
aas
sbb
gs
dec
xchg
leave
mov
and
shll
mov
mov
je
shll
pop
lcall
call
in
inc
and
pop
sub
mov
sbb
test
adc
cs
les
sub
dec
xor
inc
inc
jb
pushf
nop
jae
test
ret
test
sub
jbe
fnsave
and
fstpt
sbb
or
lahf
or
js
nop
dec
pop
or
repz
sbb
leave
push
out
and
cli
movsb
iretw
scas
xchg
xchg
repnz
push
jb
adc
arpl
push
loop
lahf
mov
adc
xor
sahf
xchg
sub
mov
in
mov
cwtl
adc
jecxz
shr
lret
add
inc
sbb
mov
enter
mov
xor
rorb
pop
push
rcrb
movsb
add
sahf
push
in
mov
lds
fstps
dec
and
mov
add
mov
cs
dec
jbe
push
jmp
sub
jecxz
aas
sub
out
and
add
xchg
fists
jbe
pop
and
inc
aad
mov
dec
lock
add
pusha
fadds
les
faddl
scas
inc
xchg
ds
sbb
out
mulb
ja
out
popf
xor
add
ret
divb
iret
xor
mov
mov
data16
cmp
push
pop
inc
fcmovnu
jmp
enter
and
mov
adc
mov
lock
sbb
lds
adc
xchg
std
loopne
xchg
call
mov
jnp
js
cli
or
inc
sarb
sbb
xor
push
xchg
fstps
and
mov
pop
stc
xchg
cmpsl
stos
push
lea
call
cmp
data16
mov
and
outsl
fildll
es
mov
lahf
lods
cmp
aam
mov
lcall
jmp
inc
sub
repnz
cld
xchg
push
or
xchg
sub
movsb
dec
aad
dec
fbstp
lods
shl
sbb
dec
mov
xor
stos
xor
out
jnp
movsl
mov
and
ficoms
mov
ds
sbb
mov
xor
sub
lret
jle
jp
add
xor
add
imul
jmp
dec
cli
in
shll
arpl
xor
movsb
cmpsb
mov
or
and
or
dec
sbb
push
outsb
out
inc
cwtl
mov
fucomip
icebp
inc
das
jle
fistl
xchg
sti
repz
aas
adc
repz
cmp
insb
mov
xlat
rclb
leave
push
mov
sbb
pop
or
mov
sbb
dec
mov
hlt
pushf
shll
cltd
cmpsb
inc
dec
clc
push
aas
dec
icebp
xlat
mov
inc
inc
and
sub
xor
pop
sub
mov
insl
push
sarb
in
loop
mov
subb
lahf
mov
sbb
inc
dec
gs
cmp
out
add
adc
pusha
and
nop
xchg
cmp
or
jmp
xlat
dec
lods
pop
and
into
pop
pop
das
cmp
pop
movsl
jmp
cmp
inc
sub
movsb
es
fisttpl
call
inc
push
lods
loopne
rol
mov
pop
add
sarb
popf
xorb
mov
jp
cmp
xor
roll
mov
loop
pop
fldl
pop
add
loop
cmc
pop
push
in
or
scas
outsl
adc
cmpl
jbe
insb
jp
or
sub
pop
aad
stos
pop
fwait
mov
pmaxub
fisubrl
push
jnp
shrb
lcall
fistpll
inc
lahf
or
pop
sbb
push
ds
and
dec
rcrb
xchg
mov
lahf
movq
xor
mov
loop
cli
js
inc
push
cmpl
aam
hlt
sbb
cmp
xor
and
mov
push
sbb
test
outsl
or
loope
out
popa
cmp
mov
xchg
in
imul
add
pop
add
adc
xor
popl
xchg
push
xor
cld
xchg
or
push
loope
scas
inc
fldt
in
adc
sti
cmpsl
mov
or
scas
in
scas
jp
dec
lds
out
mov
xor
mov
stos
xor
rolb
pop
sbb
cmpsb
stc
mov
je
xchg
adc
adc
jbe
or
mov
jge
fstl
push
push
push
mov
scas
or
cltd
cmp
dec
movsl
jmp
push
mov
in
inc
sub
xor
adc
jae
int
sbb
hlt
aam
mov
ja
test
daa
testl
push
jnp
out
push
lea
add
cmp
mov
sbb
popa
and
out
jle
xlat
xchg
cs
sahf
sbb
enter
loope
jmp
push
xchg
mov
add
and
sets
out
dec
xchg
xchg
adc
stos
popa
or
int3
mov
and
adc
sti
shr
jmp
add
cmpsb
pop
xchg
mov
in
bound
int3
pop
stos
mov
fs
lcall
inc
fistpll
mov
loope
pop
clc
mov
int3
and
ret
mov
dec
adc
div
adc
in
dec
and
pop
or
sbb
xchg
rclb
mov
hlt
arpl
xchg
and
aam
and
testb
icebp
adc
out
cs
cmp
inc
rclb
loopne
arpl
negl
jb
insl
in
jl
and
insb
fwait
movl
cli
fwait
aaa
pop
dec
punpckhbw
add
inc
cmp
test
inc
xor
sti
add
rolb
jmp
xchg
xchg
jl
and
push
mov
mov
mov
lock
cmpsl
xchg
xor
cmpsb
xchg
lea
out
cmp
enter
inc
leave
mov
rol
fwait
jo
sub
add
ret
sub
ds
repz
jbe
push
jno
repz
inc
sbb
test
call
mov
dec
sub
pop
xor
jne
adc
push
sbb
enter
cmp
and
enter
lods
add
movhlps
jo
mov
mov
dec
cld
add
pop
sbb
lds
lret
cmc
and
xchg
adc
ss
mov
cmp
mov
js
rorl
test
aaa
ljmp
sub
js
lods
inc
lea
jle
add
sbb
xchg
testb
mov
mov
testb
test
add
test
bound
nop
or
out
lds
push
stos
sub
imul
testb
dec
scas
xchg
or
in
in
setle
test
push
test
roll
mov
test
push
cli
call
fwait
lods
outsl
dec
cmp
leave
movsb
mov
in
push
lods
shlb
add
mov
enter
mov
mov
ret
cmpsl
xchg
cmp
pop
push
push
imull
cltd
call
out
xor
mov
or
cmp
cmpsb
sarb
mov
stos
inc
sarl
sbb
test
in
sti
mov
jb
bound
or
inc
fwait
jle
jne
jbe
loopne
loop
cmp
cmp
pop
in
shlb
cltd
add
push
icebp
shl
cs
fs
loopne
sbb
xchg
xor
xchg
out
sub
jle
nop
cwtl
ja
xor
sub
and
je
xchg
jb
into
cmpsl
push
loop
push
inc
js
push
push
sub
xor
call
pop
addl
icebp
loopne
push
orl
and
fsubrs
test
lds
and
push
test
rolb
iret
mov
mov
sbb
mov
mov
ja
inc
jno
push
shll
sub
into
xchg
xchg
dec
pop
pop
loopne
fnop
xor
inc
js
mov
mov
into
xor
addr16
inc
rol
es
dec
pop
jae
dec
das
xchg
addl
or
adc
insl
in
push
mov
movsl
pop
rcrb
xchg
jae
xchg
das
fcoml
inc
cmp
popa
nop
dec
pop
pop
pop
xorl
and
ds
xlat
xchg
sub
adc
sub
push
sub
js
push
dec
lods
or
mov
dec
fildll
cs
es
sub
and
mov
pop
dec
test
mov
fistl
jae
repz
mov
aad
and
mov
push
jp
and
js
xchg
or
pop
rcl
inc
mov
add
xor
dec
cs
pop
adc
loop
add
pop
icebp
xchg
cmp
xlat
iret
sar
inc
out
jle,pt
pop
jp
xchg
je
rcl
loope
jns
cli
and
xor
pop
mov
movsb
inc
xchg
test
push
ficoms
dec
stos
je
not
and
hlt
cld
adc
jp
popf
push
sahf
and
iret
jmp
xchg
and
movb
insb
jl
push
int3
push
addl
enter
cs
inc
push
xchg
inc
sarb
shll
push
hlt
and
lret
inc
mov
es
add
pop
jb
cmp
mov
data16
stos
mov
sub
dec
xor
mov
test
and
sub
sub
mov
push
shll
cmp
jns
xchg
mov
sub
add
push
cwtl
nop
repz
pop
leave
sahf
enter
xchg
pop
mov
imul
test
ret
ret
fs
inc
lods
ja
aam
mov
sbb
outsb
lea
add
mov
mov
cwtl
sub
push
mov
sub
xor
mov
xchg
xchg
clc
mov
push
fmulp
out
cmp
test
leave
pop
mov
mov
in
shr
jno
mov
push
xchg
cmp
insl
gs
nop
sarb
pop
std
addr16
and
out
sub
fiaddl
and
movsb
nop
jns
or
inc
sbb
push
pop
or
cltd
inc
cmp
fwait
loope
mov
and
shl
inc
lods
mov
push
clc
inc
pop
mov
fwait
enter
jmp
mov
repnz
sub
cmpsb
xlat
mov
and
pop
nop
ja
test
and
push
pop
aad
pushf
inc
mov
mov
pop
clc
cli
or
adc
jne
addb
lods
incl
pop
pop
xchg
mov
xchg
push
ds
push
rclb
pop
or
in
movsb
pop
add
iret
orb
mov
sbb
out
jb
std
into
add
ja
loopne
repz
movsb
dec
sahf
cmpsl
sub
sub
pop
scas
daa
scas
out
mov
hlt
push
orb
fbstp
pop
mov
out
into
std
dec
mov
cs
cmpsb
or
adc
sarb
xchg
mov
push
into
pop
jo
xor
push
mov
addr16
add
arpl
jno
inc
jnp,pn
sub
xchg
aas
repnz
sub
xchg
add
cmpsb
repnz
daa
out
rcll
inc
pop
fstl
jecxz
cmp
lods
lret
aaa
xor
pop
sbb
arpl
adc
push
repz
mov
xchg
nop
aam
and
or
jns
add
push
mov
xchg
dec
insb
popa
call
sbb
sbb
jns
xchg
add
aam
cmpsb
xchg
cmc
sbb
and
movsl
mov
je
cmp
sub
js
push
and
in
mull
xchg
and
lock
or
loop
jl
sbb
enter
rcrb
adc
loopne
stc
sub
push
dec
and
sbb
cmc
dec
xchg
rorb
or
mov
repz
mov
lret
ja
push
xlat
cmc
mov
aad
xchg
mov
enter
add
addr16
cmp
sbb
repnz
jmp
imull
jae,pt
dec
push
xlat
std
pop
add
inc
mov
fs
fstpl
mov
adcl
test
cwtl
push
ffree
sub
or
scas
inc
lret
daa
xlat
and
je
adc
in
xchg
insb
mov
jae
mov
push
shll
sti
fldenv
jae
sub
aaa
jno
pop
cmp
mov
daa
js
fsubs
cmpsb
lea
lea
pop
inc
xor
mov
sbb
addr16
rcrl
sar
outsb
aaa
jns
lods
lds
push
jo
mov
ja
popa
dec
xchg
xchg
es
popf
js
jp
cltd
jbe
jbe
lods
stos
mov
xor
fldl
addr16
inc
fs
neg
mov
lock
repz
mov
push
mov
mov
mov
mov
pop
mov
ud2
pushf
and
sbb
test
xor
mov
or
and
cmc
out
enter
or
and
and
ret
cmp
xchg
mov
das
sub
rcr
or
stos
pop
sti
jo
mov
popl
dec
mov
xor
mov
cmp
inc
dec
sbb
cmp
mov
and
push
dec
or
stos
mov
push
sbb
je
daa
mov
dec
add
pop
testb
jb
fbld
mov
xor
sbb
pop
jno
imul
push
movsl
xchg
cld
cmpsb
iret
lds
leave
and
inc
jl
xor
ss
fwait
mov
inc
xor
mov
shll
sbb
out
enter
pop
rcrb
cmp
or
mov
inc
add
fsts
sbb
mov
lods
iret
jl
dec
imul
jo
pop
lods
jmp
sarb
das
ret
add
arpl
cmp
adc
loop
adc
imul
jb
cmpsb
pop
cmp
or
shr
pop
and
arpl
or
jg
and
adc
and
ficomps
and
pop
movsb
inc
mov
fwait
sub
scas
cltd
rcll
jae
dec
add
mov
cwtl
mov
fistl
cmp
scas
leave
sub
scas
cmp
cmpsb
popf
out
sbb
dec
push
sub
iret
pop
in
xchg
int
fnstcw
add
xlat
mov
and
test
sbb
sub
ret
lods
mov
jo
repz
out
or
jmp
jns
xchg
int3
sar
add
cs
inc
jo
addr16
and
adcb
insb
lahf
and
scas
btc
je
stos
iret
push
call
and
loopne
xchg
lods
fnsave
jp
loop,pn
jmp
and
out
cmpsl
lahf
pop
mov
gs
lods
stos
shrb
out
and
imul
adc
loop
aas
sbb
lcall
inc
in
push
pop
sti
cmpsb
xlat
xor
and
inc
adc
dec
mov
push
inc
xchg
sahf
popf
dec
aad
fdiv
mov
data16
adc
cld
mov
mov
cmpsl
scas
movsb
xlat
adc
mov
out
and
adc
cltd
push
cmp
fidivs
std
dec
test
aam
les
fbstp
int
int
mov
inc
xor
mov
jp
cs
xor
rol
pop
cmc
sbb
pop
mov
mov
mov
or
cwtl
sbb
pop
into
jmp
jp
pop
push
test
sub
sbb
inc
xor
ds
leave
add
mov
iret
sbb
push
shll
push
mov
adc
fbstp
fisubs
loop
sub
push
test
or
xchg
pop
sti
addr16
in
mov
push
pushf
jl
lahf
ret
inc
xor
lods
dec
mov
test
call
mov
or
fists
sub
xchg
and
cmc
scas
dec
shrl
in
in
cmp
testb
sti
mov
call
pop
mov
out
arpl
sbb
mov
add
jl
in
insl
adc
add
mov
mov
sub
lcall
mov
pop
pop
xor
push
inc
ret
js
shrb
dec
cwtl
mov
sbb
pop
xor
mov
fdiv
icebp
sbb
jmp
sub
xchg
cmpsl
rcrb
push
ret
xor
rcrl
jb
movsb
xchg
dec
sbb
xchg
fnstenv
dec
mov
sub
lds
fists
mov
pop
pop
cs
pop
fdivrs
shlb
push
pop
xor
jmp
mov
push
inc
jle
pop
add
dec
mov
shl
aad
jno
xchg
inc
push
and
gs
jp
mov
sub
cmpsb
addb
dec
jl
aad
cmpsl
std
movsl
rorl
add
dec
in
cmc
jle
push
sbb
xor
dec
lods
xchg
xchg
or
pop
xor
outsb
aas
ljmp
push
jnp
sub
mov
rcrl
lcall
fwait
xlat
cmpsb
addr16
jecxz
xor
mov
lds
mov
subb
xchg
push
pusha
add
sub
inc
or
loope
xchg
sub
fwait
test
pop
fldenv
dec
xchg
push
push
push
or
push
and
sub
nop
fsqrt
stc
data16
icebp
out
cmp
loope
arpl
pop
cmpsb
data16
into
rcl
clc
cmp
addl
push
cmc
addr16
test
loop
push
lods
sub
or
jb
jbe
mov
test
push
xchg
mov
adc
or
mov
mov
int
xchg
adc
dec
xchg
or
sbb
lcall
jmp
mov
push
mov
and
test
stc
stc
adc
outsb
or
popa
sarl
std
push
insl
sbb
mov
cmp
outsl
pop
sbb
test
pop
arpl
aas
cmc
pop
push
arpl
mov
data16
cmpsl
notb
or
mov
xchg
jecxz
mov
ljmp
scas
xlat
inc
jle
out
mov
out
push
sub
ret
cli
xchg
pop
mov
pop
add
movsb
jmp
cmp
sub
jmp
inc
fwait
cmp
inc
xchg
loope
xchg
ja
xchg
popa
rol
fmuls
and
and
mov
mov
hlt
stos
test
fidivrl
xor
xchg
test
mov
push
imul
int3
cmp
sbb
inc
mov
cwtl
out
xchg
sub
mov
cmp
in
std
jbe
loopne
pop
scas
lods
test
shl
lods
jg
insb
lea
add
cwtl
icebp
dec
mov
pop
sti
cmp
pop
rorl
lea
mov
rcrb
xor
sbb
push
sti
xor
dec
pop
cmp
test
xchg
and
imul
dec
jge
cltd
aaa
xchg
or
in
adcl
jo
popf
xor
add
out
inc
mov
pop
mov
sub
insb
xchg
scas
add
mov
in
jb
cmp
lock
xchg
jecxz
fisubs
jbe
ret
xchg
dec
outsb
and
push
lahf
pop
jl
sub
in
mov
and
xchg
jns
int3
push
lock
cmp
dec
js
or
sar
rcll
jmp
aaa
mov
andnps
sbb
xchg
sti
jmp
mov
sbb
mov
lods
repnz
cld
nop
pop
adc
fidivl
pop
das
push
sar
add
je
cmp
push
push
jecxz
ljmp
test
sbb
arpl
and
dec
lods
fwait
jno
or
sarb
and
cmp
pop
push
adc
aas
into
xor
push
add
in
nop
pop
xor
pop
add
mov
ja
xor
inc
stos
and
jmp
repnz
xor
in
sub
roll
xor
sbb
inc
cmp
ljmp
andl
lock
xchg
push
out
arpl
pushf
xor
fnstcw
movsb
mov
repnz
outsb
pushf
pop
lret
aaa
test
pop
gs
lret
jo
pop
movsl
xchg
cmp
stos
mov
dec
jbe
and
mov
push
xchg
mov
hlt
add
sti
loopne
cli
arpl
cwtl
mov
push
dec
inc
scas
ficoms
imul
sbb
in
pop
cld
idivl
dec
decl
movsl
imul
fdivl
sub
test
icebp
ss
mov
mov
fwait
sbb
in
shll
jmp
sbb
xchg
jns
sbb
jmp
gs
jmp
mov
loope
mov
adc
outsl
and
outsl
jmp
stos
or
popa
push
pop
adc
lret
out
imul
fucom
pop
push
popf
insl
outsb
adc
outsl
outsl
push
cmpsb
xchg
data16
sub
shll
xlat
shlb
push
int
in
aas
mov
hlt
adc
out
add
std
insb
mov
dec
imul
push
test
adc
and
push
mov
out
fnstsw
pop
jnp
cmp
cld
adc
stos
ret
sahf
test
bound
shl
jmp
push
jmp
jecxz
rcll
sub
adc
xchg
repz
mov
xor
icebp
fistpll
push
nop
push
and
je
cltd
in
aad
sbb
dec
arpl
mov
addr16
dec
jae
fneni(8087
lret
jg
lods
mov
or
setnp
push
aas
mov
lcall
jge
dec
fsubs
push
xor
xor
mov
aas
aas
iret
shrl
sub
pop
xchg
inc
jnp
iret
push
adc
iret
pop
daa
popa
fwait
addb
call
or
dec
cli
dec
mov
adc
sti
xor
fcomps
aas
std
mov
mov
stos
jg
clc
add
sbb
in
push
inc
test
push
into
mov
setae
add
inc
sbb
add
repz
fistpl
jno
cmpb
scas
out
in
dec
test
pop
outsl
mov
ja
adc
int
dec
lock
jo
test
lods
push
mov
add
ret
mov
jl
mov
mov
scas
enter
scas
mov
jbe
sub
out
in
pop
sahf
xlat
test
ret
out
imul
dec
cltd
aad
mov
out
jecxz
xchg
leave
pop
jnp
jns
dec
cmp
jno
and
sub
pop
mov
test
shll
cmp
dec
dec
xor
cwtl
dec
sub
stc
pop
popf
xchg
sbb
adc
sub
cmpsl
push
test
cld
pop
mov
cli
out
int3
repnz
mov
mov
aam
push
rcll
adc
push
shrl
pop
push
fs
mov
neg
jnp
out
sti
shlb
sub
xchg
dec
fldenv
xor
fwait
dec
push
pushf
cmc
adc
clc
adc
mov
clc
insl
int
or
adc
stos
mov
xchg
in
xor
lret
test
add
inc
mov
and
xor
push
mov
adc
das
or
addr16
repnz
lret
lret
loop
pop
jg
mov
mov
jge
imul
aad
test
std
test
out
test
sbb
in
push
mov
and
mov
dec
mov
popl
aad
mov
xorb
out
dec
movsl
inc
out
scas
mov
jb
imul
or
or
imul
in
in
fwait
or
ja
fs
mov
inc
cmp
fisttpl
push
ds
shrl
mov
pop
xor
lock
sarl
mov
dec
jo
mov
pop
rcll
popf
and
into
push
xchg
nop
adc
fs
adc
inc
xor
inc
sbb
test
mov
or
popf
sahf
add
and
push
add
push
mov
cmp
shlb
cmpsl
adc
inc
ret
lods
fidivs
mov
lret
cmp
xchg
orl
fwait
int3
aam
shll
fwait
push
arpl
popa
adc
scas
dec
pop
push
cmp
jmp
inc
adc
mov
sub
bound
inc
js
out
mov
add
cmp
add
movsb
dec
pop
xor
mov
mov
cltd
adc
mov
pop
cwtl
fmull
jmp
enter
and
imul
and
pop
mov
sbb
pop
icebp
ret
lret
mov
divl
addr16
aad
outsl
dec
cmp
xchg
pop
dec
out
sub
punpckhdq
fisttps
sahf
sbb
outsl
addl
cmpsl
movsb
mov
lcall
call
and
jmp
jae
push
mov
add
sub
int
push
std
pusha
push
mov
pop
les
sti
mov
ficoms
inc
mov
stos
xchg
mov
cmp
push
adc
rol
mull
mov
data16
push
jno
repnz
inc
inc
push
dec
in
dec
test
movsb
mov
pop
test
mov
jbe
cld
test
dec
lea
test
jae
and
dec
sub
add
mov
add
fs
jle
cld
imul
pop
sbb
sub
adc
rclb
popf
into
cld
arpl
bound
dec
inc
xchg
mul
cld
lea
sub
shll
out
outsl
pusha
cld
out
pop
inc
push
clc
frstor
inc
enter
vunpckhps
push
sahf
mov
jge
adc
mov
sub
mov
jo
sbb
jae
mov
fidivs
icebp
inc
cmp
insb
dec
pusha
and
sub
adc
leave
sub
clc
jmp
or
and
cmp
mov
ret
repz
fs
test
enter
cld
ret
ljmp
xchg
mov
jle
fistl
push
mov
push
xchg
arpl
inc
cmp
int3
mov
js
inc
cld
mov
xchg
imul
cwtl
sbb
cli
xor
scas
loope
dec
jmp
mov
xchg
lret
cltd
jnp
xchg
jbe
cld
cmp
icebp
fs
xchg
les
outsb
dec
push
cmpsb
pop
rol
or
dec
sahf
xor
mov
rcl
sarl
jp
mov
mov
add
loope
jns
mov
mov
dec
lods
shl
movsb
push
nop
jo
ret
mov
test
lods
xor
test
jmp
xchg
iret
loope
mov
adc
push
inc
push
call
outsl
and
push
dec
sub
icebp
cmc
jecxz
clc
cli
mov
jecxz
xor
inc
mov
cld
and
sub
mov
cmp
add
sti
clc
cmp
arpl
sbb
sbb
sbb
arpl
enter
jae
enter
test
pop
sahf
fdivr
add
outsb
push
call
dec
xor
outsb
lds
or
gs
mov
out
jle
leave
adc
scas
lahf
fwait
add
mov
fsubl
mov
iret
es
cmp
stos
sub
notl
mov
and
aaa
jl
clc
shll
inc
push
roll
popf
inc
mov
ljmp
or
and
loop
ret
or
pop
dec
incl
sti
push
pop
inc
push
xor
stc
gs
jge
add
out
bound
leave
mov
mov
dec
fs
adc
arpl
je
in
pop
stos
xchg
lea
cmc
push
sbb
popa
xor
das
enter
insl
push
inc
adc
sbb
hlt
push
xchg
ret
push
jno
stos
int
clc
xor
loopne
adc
lds
lret
mov
xor
dec
sbb
xchg
and
xor
scas
xor
and
pop
cwtl
fldt
testb
dec
fsubl
out
dec
push
and
cmp
mov
mov
push
push
sub
jmp
dec
or
lods
fdivr
lcall
loopne
aam
dec
nop
in
cs
aam
pusha
xor
loop
push
fwait
jg
mov
sub
lcall
imul
je
mov
push
loop
scas
adc
into
test
add
cmpsb
pminub
pop
or
jmp
pop
cmp
or
fsts
leave
outsb
test
fs
dec
dec
cmp
bound
gs
je
imul
push
mov
test
push
pop
push
push
pop
mov
inc
inc
stc
sahf
push
lcall
pop
lods
dec
rorb
mov
xchg
enter
or
jb
adc
out
jno
adc
testl
std
daa
repnz
mov
test
outsl
fldt
lcall
scas
gs
negl
or
jecxz
xorl
stc
or
test
mov
into
nop
inc
mov
call
jecxz
push
sub
and
inc
clc
cmc
mov
jbe
lret
das
mov
inc
nop
in
dec
cmpsb
xchg
jle
imul
mov
push
addb
mov
and
pop
cltd
mov
aad
loopne
scas
cld
cmpb
mov
pop
lret
mov
stos
push
adc
adc
loop
data16
fcompl
fcoms
jp
fs
orl
ret
in
mov
inc
push
call
mov
fiadds
les
dec
insb
cwtl
sub
ret
loope
mov
mov
xchg
adc
jbe
add
cmp
addb
inc
adc
aas
xor
aas
es
xlat
inc
test
mov
cmp
ja
or
sbb
pop
in
mov
cmp
xchg
mov
adc
inc
sub
imul
int
lcall
rcl
sub
addr16
and
dec
stos
je
lods
pop
dec
cmpsb
movsb
pop
mov
mov
jae
inc
aas
mov
in
mov
test
pop
std
ret
jl
ficoms
inc
daa
pop
repz
lods
add
jae
sbb
or
mov
in
jecxz
out
sub
fwait
sbb
adc
jbe
xor
mov
inc
movsl
clc
test
and
mov
ficompl
sub
les
je
push
ret
or
aad
arpl
mov
ret
ret
pop
je
test
pop
pop
push
add
and
lods
or
andl
xchg
xchg
pop
and
adc
fnop
xchg
les
mov
aam
adc
jno
xor
xchg
js
lret
sti
aaa
adc
cmpsb
test
pop
je
push
in
clc
sub
lret
sbb
lock
sub
ljmp
jbe
push
cmp
movsl
mov
mov
or
jb
xor
inc
push
adc
mov
in
inc
loopne
cli
push
mov
scas
je
sbb
xor
das
outsb
xchg
cmp
cwtl
stos
mov
mov
or
add
and
fwait
insl
pop
scas
ret
jmp
gs
outsb
out
test
sti
addr16
lea
pop
or
jmp
adc
sbbl
sub
or
dec
add
and
cmp
push
dec
icebp
cltd
ss
adc
dec
sti
lds
mov
lods
mov
jp
cmp
mov
jge
pusha
xor
gs
and
jo
sub
shll
stos
outsl
out
in
add
ficoml
sbb
jno
push
shl
loope
imul
cltd
push
push
xor
adc
adc
jle
scas
jo
jl
lods
test
cmp
jp
cmp
sub
loop
iret
out
lods
cmp
outsb
fwait
pop
mov
mov
pop
pusha
pop
dec
xor
add
shr
push
movsl
lcall
movsb
ficoms
fcmovu
lods
nop
notb
mov
inc
pusha
mov
clc
nop
outsb
pop
pop
fs
adc
lea
sbb
add
cmp
add
outsl
lret
adc
rcl
ljmp
enter
ja
mov
ss
test
in
aas
cmpsl
fwait
js
sub
mov
mov
in
fwait
add
cmpsb
addr16
cmp
cmp
scas
je
xor
fmul
dec
aam
mov
lock
mov
das
orl
inc
dec
xlat
inc
xchg
and
or
insl
sub
lock
jecxz
add
jnp
ljmp
movsl
jl
add
movsl
adc
insb
or
jg
movb
jp
daa
aaa
inc
pop
mov
pop
movsl
sbb
sub
and
pop
icebp
in
adc
pop
jle
faddp
xchg
imul
data16
loope
out
mov
pushf
xchg
je
mov
clc
pusha
jmp
repnz
jp
out
xor
sti
clc
insl
mov
repnz
int3
pop
sub
cmpsl
out
pop
imul
mov
aas
adc
arpl
adcl
mov
inc
cmp
cld
adcb
inc
mov
jmp
mov
mov
imul
dec
nop
xchg
jp
adc
scas
inc
sub
cli
sbb
mov
push
stos
mov
mov
sti
mov
test
arpl
sti
sbb
and
mov
je
dec
mov
aas
stos
call
pop
xor
ror
and
pop
cmp
adc
and
testb
fimull
pop
mov
and
lahf
dec
lcall
dec
dec
dec
mov
xlat
call
mov
jmp
lock
mov
andl
dec
test
xchg
sub
or
mov
enter
out
enter
sub
mov
mov
in
jge
cwtl
mov
add
rcl
lahf
lods
push
sub
jp
setb
das
sahf
call
cmc
imul
call
adc
cltd
sbb
add
sahf
push
xor
pop
inc
test
test
mov
xchg
rcrl
cmpl
ret
mul
or
dec
insl
mov
adc
iret
jbe
std
mov
push
cmp
fcompl
sbb
lret
pop
dec
mov
push
adc
sbb
cltd
mov
stos
xchg
mov
insb
mov
jb
stc
xchg
gs
scas
stc
sti
dec
aaa
arpl
cmp
jnp
dec
loope
dec
pop
out
mov
lret
scas
andl
aaa
cmpsb
mov
dec
sbb
addr16
cld
sbb
pmuludq
push
inc
sti
mov
pushf
and
jl
dec
inc
mov
ret
push
add
ret
or
mov
push
sbb
repnz
dec
cmpsl
lea
dec
jae
decl
dec
cmp
adc
xor
inc
push
add
shlb
dec
icebp
int3
clc
addr16
out
push
ja
mov
movsb
mov
sbb
push
adc
or
aad
or
sbb
push
scas
popa
inc
or
add
cmpsb
aad
mov
mov
pop
data16
arpl
jp
cmp
xchg
or
adc
sbb
jle
and
pusha
mov
sub
insl
adc
mov
mov
pop
sarb
or
cmp
arpl
jbe
inc
lock
scas
ljmp
sbb
icebp
mov
loopne
lahf
cmp
and
aaa
pusha
inc
movsb
sbb
in
dec
xchg
sbb
mov
push
jmp
std
clc
fldenv
repz
and
sbb
jge
adc
or
ss
fmull
pop
cmp
cld
or
es
push
sub
jbe
push
outsl
push
and
mov
sub
shr
push
test
test
cld
fcmovnb
cltd
ficompl
insb
and
jbe
mov
mull
or
xor
js
lock
stc
add
push
adc
mov
sbb
faddl
jmp
in
or
pop
lret
xor
fbstp
sub
sub
in
sub
es
mov
sbb
push
mov
fnstenv
mov
mov
push
dec
pop
jbe
push
and
or
sub
adc
xchg
add
ss
xchg
push
jae
xchg
jl
push
xchg
outsb
insb
jecxz
xchg
mov
sub
mov
dec
lock
cli
and
mov
enter
xchg
and
push
mov
mov
int
xor
cmp
jmp
in
jecxz
or
mov
push
add
push
xor
cld
fmull
push
fdivrl
add
lods
movsl
pushf
testl
push
mov
test
inc
fdivrs
cmp
sub
mov
mov
fcomp
cs
outsb
dec
or
push
fistpl
push
inc
insl
fisubrs
lods
int
lods
icebp
arpl
dec
es
and
mov
lods
lahf
pop
push
mov
arpl
fcom
sti
and
adc
clc
fidivrs
dec
inc
inc
mov
add
push
dec
or
lahf
movb
inc
inc
ljmp
cmp
xor
add
jns
popl
rcr
ss
cmpsl
adcb
addr16
push
ljmp
push
pushf
lock
dec
out
or
cwtl
ret
sub
cmp
ret
in
xor
jl
mov
adc
cmp
addr16
adc
scas
sub
inc
lds
dec
cmp
imul
out
daa
xor
mov
int3
add
push
pop
nop
sbb
pop
mov
adc
mov
xor
adc
add
mov
adc
push
mov
sbb
jmp
xor
cmp
xor
jecxz
xor
cmpb
and
sti
stc
mov
andb
cmpsb
iret
pop
mov
mov
adc
call
jge
and
xchg
xlat
ss
enter
xchg
cmp
jl
movsl
in
pop
mov
mov
jne
insb
sub
test
ret
sbb
fldt
inc
pushf
daa
fdiv
jno
int3
cld
pop
cli
adc
dec
jb
push
and
fidivl
ret
sbb
lods
aad
loope
gs
pop
xchg
sbb
scas
jae
out
mov
or
negb
or
add
jl
lea
jb
push
cmp
push
repz
iret
add
jg
jge
mov
fwait
imul
stos
sbb
sarb
dec
dec
mov
jne
cmp
sbb
push
loope
adc
xor
and
ret
imul
addps
push
test
imul
push
adc
or
cmp
adc
repz
sbb
push
sub
lret
ret
cs
pop
sub
sahf
xchg
shll
xchg
stos
cmp
jmp
std
adc
and
xor
pusha
aas
sbb
push
mov
in
mov
nop
xorb
ja
and
jecxz
mov
pop
pop
mov
add
sub
lahf
sbbb
je
xchg
cs
jl
mov
sub
mov
in
aaa
jnp
inc
mov
enter
lret
in
pusha
or
pop
loopne
scas
mov
mov
sub
cmp
loopne
jb
mov
cmp
sub
fimull
test
and
mov
sbb
mov
mulb
lods
or
outsl
and
pop
or
dec
ss
lods
xor
icebp
inc
push
cmc
pop
test
push
add
repz
mov
adc
or
inc
mov
xchg
or
insl
xchg
lds
daa
mov
shrb
mov
lcall
imul
int
and
es
add
and
xchg
sub
hlt
push
xchg
sahf
lods
jne
push
or
jns
popa
mov
pop
call
xchg
push
loope
inc
data16
or
fwait
inc
cmp
add
mov
ret
cmc
adc
jge
aas
cmpsb
fistpll
pop
mov
mov
and
and
inc
jo
lret
sbb
lahf
loopne
pop
loope
or
cltd
ror
push
in
test
sti
lret
inc
das
mov
mov
ja
adc
and
lret
xorl
cld
xlat
adc
add
jns
in
mov
sub
hlt
gs
xchg
mov
inc
jecxz
mov
or
and
inc
jae
adc
push
sbb
imul
push
sub
add
sti
arpl
mul
es
insb
fstl
and
inc
jp
jmp
adc
push
push
jg
divb
call
sahf
pop
dec
ret
pop
xchg
or
in
addr16
push
mov
je
mov
adc
sub
shll
sub
mov
std
es
gs
shll
cmp
nop
adc
pushf
test
rcrl
stc
lahf
jo
xchg
mov
mov
adcb
mov
lahf
lock
repz
jp
or
and
aas
test
in
push
mov
out
vpminub
aad
add
out
loope
test
sahf
mov
pop
jecxz
mov
push
stos
imul
daa
mov
jmp
stos
jecxz
scas
sbb
inc
mov
xchg
divb
test
or
into
adc
scas
aaa
adc
sti
cmpsb
xchg
jno
cmpl
out
out
jnp
lret
shl
out
leave
mov
sub
rcll
imul
fmuls
inc
shr
std
inc
pop
jle
call
loopne
int3
nop
sub
mov
stc
xchg
adc
and
jb
xor
inc
mov
fisubs
and
pop
in
loop
xor
leave
filds
pop
push
push
fsubrs
call
movsl
push
ss
inc
scas
int3
jecxz
mov
sbb
stos
loopne
sub
fbstp
xchg
mov
add
adc
push
inc
int
aaa
inc
mov
push
enter
orl
pop
loopne
jmp
cmp
jge
and
jg
xor
out
movsl
xchg
loop
popa
mov
orb
hlt
sarl
mov
lock
pop
sbb
xor
inc
in
loope
call
pop
push
mov
jne
lret
ficompl
out
mov
push
and
dec
call
adc
dec
cltd
mov
mov
mov
and
jns
fucomip
testb
sbb
sbbl
insl
adc
outsl
ficomps
and
push
sahf
popf
stos
pop
mov
fwait
adc
je
das
push
dec
jmp
cmp
fs
sub
jmp
inc
jo
in
xchg
xchg
inc
mov
in
pop
popf
in
int3
jg
and
mov
dec
cmp
pop
pop
loop
xor
mov
and
adc
fs
insl
out
sub
pop
aam
dec
cmp
mov
mov
jge
sahf
ja
mov
dec
lock
sub
faddl
cmc
movsb
les
rcrl
cld
mov
xchg
or
sbb
hlt
sti
in
dec
add
stc
pop
jne
inc
dec
imul
das
fs
adc
inc
js
push
push
jne
add
adc
mov
imul
out
adcb
call
inc
enter
and
fsincos
sti
ja
mov
mov
and
mov
push
inc
push
mov
mov
addr16
ljmp
out
not
arpl
cmc
hlt
cmp
and
cmpb
sti
int3
cmp
inc
push
add
pop
es
and
mov
push
scas
and
imul
leave
pop
cmpsb
into
ret
icebp
out
jg
test
push
jge
movsb
sbb
scas
mov
add
decb
pop
lcall
es
lods
adc
sub
std
inc
cmc
pop
jae
adc
fmull
add
push
or
pop
mov
mov
pop
cld
testb
pop
scas
imul
pop
xor
xor
xchg
je
and
push
push
jnp
test
xor
mov
leave
jl
xchg
inc
sbbl
pusha
pop
add
add
push
push
inc
aaa
sti
lods
jmp
mov
out
loop
xor
add
sbb
sbb
mov
ds
out
xor
clc
dec
sbb
jno
int3
mov
das
out
xchg
jae
jo
or
popa
and
test
sbb
sbb
jo
fsubrs
pop
cmp
in
xlat
pop
aaa
adc
mov
add
out
insb
and
or
test
nop
cmpsb
mov
mov
or
add
and
sub
hlt
dec
incl
inc
push
mov
pop
and
pop
or
add
dec
aam
je
fstps
or
mov
pop
sub
mov
or
out
dec
insb
mov
jp
add
into
or
repz
jns
or
hlt
lcall
cmpsb
fs
xor
inc
jp
push
add
cmpsl
mov
out
xor
ret
inc
cmpb
jae
xor
out
fists
ss
mov
ja
popf
in
mov
lods
iret
cmp
and
mov
cmp
and
sub
jl
sbb
cwtl
scas
push
sub
sub
icebp
insb
cmp
pop
jl
pop
imul
sub
jge
cmp
or
push
cld
std
xchg
bound
xchg
imul
sub
repnz
loop
sar
push
movb
and
sahf
ret
cmp
fidivs
mov
jno
insl
dec
push
inc
jns
dec
mov
and
sbb
sahf
mov
fidivl
inc
or
cmp
mov
orl
pop
mov
or
dec
les
std
dec
stc
jne
mov
sar
imull
cs
mov
xchg
sbbb
push
and
fidivrs
sub
xchg
cwtl
rcl
sbb
cs
mov
repnz
hlt
test
adc
sti
mov
dec
sbb
icebp
jl
test
aad
fmuls
pop
clc
pop
rorl
leave
imul
stos
jb
scas
adc
repnz
inc
xchg
inc
insl
arpl
sub
mov
fwait
pop
jmp
gs
daa
ss
fxch
mov
dec
test
adc
jb
pusha
xor
mov
dec
imul
das
fidivl
std
int3
jne
or
out
inc
ljmp
stc
int3
popa
xor
or
cmp
mov
jae
and
stos
shl
pop
lods
inc
out
scas
jle
push
inc
add
jbe
mov
push
int
adc
cmpsb
repnz
stos
es
dec
nop
sub
mov
test
cli
pop
push
and
lods
or
xchg
dec
cmp
sub
xchg
dec
add
inc
imul
ret
je
movsb
fldt
lock
out
or
addr16
test
push
xorl
outsb
outsl
cld
add
inc
push
pop
dec
out
cmp
imul
test
xlat
cltd
jo
push
mov
mov
cs
pop
add
adc
gs
cli
xchg
xor
mov
ss
push
mov
into
shll
inc
in
add
xchg
outsb
mov
test
out
int3
inc
and
sti
sbb
mov
lret
ljmp
sub
mov
call
xchg
jae
and
dec
imul
mov
cmc
push
scas
pop
inc
mov
jo
push
dec
je
aaa
enter
or
repnz
test
fcomp
into
pop
mov
fildll
subb
xor
test
push
mov
cmp
lods
insb
icebp
inc
or
inc
dec
lret
push
mov
adc
sub
movsb
aad
fadds
iret
adc
popf
lret
or
jle
mov
cmp
rol
pop
lret
test
jecxz
test
mov
pushf
push
fs
xchg
inc
bound
ret
lods
pop
jl
out
or
sarb
cwtl
daa
ljmp
jb
jnp
add
or
pop
cltd
or
mov
subb
outsl
loop
dec
ret
xorb
pop
jecxz
fildll
sbb
push
repz
mov
or
xchg
jge
and
arpl
sub
jnp
adc
or
inc
mov
lcall
repz
jne
mov
mov
les
mov
pop
mov
push
cwtl
dec
push
loop
xchg
mov
cli
and
add
and
repz
xchg
mov
dec
mov
insl
arpl
xchg
cmp
repnz
mov
loopne
jb
cmp
and
ljmp
out
mov
cltd
xor
icebp
shll
orb
mov
leave
in
decb
xchg
mov
push
aaa
test
inc
inc
lret
mov
or
xchg
mov
rcrl
or
outsl
and
adc
add
xchg
test
adc
xor
push
push
or
sahf
stos
inc
lock
sub
dec
in
jno
xor
out
int
inc
add
insb
inc
out
xor
push
or
test
fcompl
cmp
sub
test
sub
xchg
xor
sub
mov
inc
stc
xchg
lea
ficoms
mov
xchg
insl
push
and
cmpsl
mov
movsl
int
dec
or
mov
aad
lcall
xchg
dec
ja
outsl
sub
cmpsb
scas
mov
xchg
jp
cmpsl
pusha
mov
in
xabort
nop
cmpl
inc
xchg
push
scas
inc
popf
xchg
dec
pop
notb
ret
stc
dec
push
leave
mov
mov
mov
mul
mov
dec
lods
into
ja
xor
mov
or
dec
aas
subb
test
add
out
jecxz
aas
inc
xlat
sub
mov
cmp
push
les
fisubrl
jne
dec
xchg
add
sbb
outsb
stos
push
or
out
push
inc
scas
adc
enter
xor
andl
aam
sahf
mov
jp
mov
xor
inc
mov
andb
xchg
popa
cmpsl
add
in
and
inc
xchg
in
scas
jo
cmp
aaa
or
arpl
negl
pushw
pusha
xchg
cltd
icebp
movb
fs
cwtl
jae
inc
addr16
sub
adc
or
adc
adc
fwait
dec
stc
pop
sub
cmpsl
jmp
dec
or
add
dec
and
inc
push
outsb
sbb
ja
xlat
insb
fdivrl
cs
mov
ds
or
insl
daa
loop
add
in
insb
sti
xor
das
or
adc
inc
jecxz
sbb
add
in
sbb
shll
movsb
scas
mov
xchg
btr
dec
pop
in
jbe
pop
pop
xchg
inc
xor
jns
pop
adc
pop
push
cmc
lock
sbb
cmc
adc
adc
repz
test
push
fistpl
mov
cs
mov
mov
das
lcall
lcall
or
adc
aam
dec
ds
out
sub
add
addr16
push
nop
popa
xlat
lock
in
mov
or
xor
jbe
leave
ret
mov
xor
scas
jp
adcl
mov
xchg
int
cltd
fistps
cmpsl
adc
stos
sbb
lret
push
add
push
or
jns
cli
sub
lock
dec
jae
or
imul
shl
adcb
adc
push
lahf
ret
jecxz
inc
mov
sbb
jne
mov
ret
repnz
iret
pop
mov
ja
and
mov
lahf
inc
enter
jo
orl
rolb
data16
pop
cmpb
cli
mov
jp,pt
add
cmp
sbb
and
jecxz
fdivrl
push
push
or
cmp
xchg
daa
rcrb
iret
fnstenv
loopne
fldcw
or
das
cmpsl
lods
ja
das
stc
mov
mov
cs
mov
lcall
add
fisubrs
sub
push
adc
add
in
pop
mov
cwtl
leave
jns
mull
sbb
cs
mov
pusha
movsl
insl
sbb
inc
and
mov
pop
cs
push
sbb
movsl
lret
xor
inc
sahf
push
xchg
loop
jmp
xchg
sbb
in
mov
push
cmp
ja
mov
cmp
push
icebp
mulb
wbinvd
sbb
xorl
jae
imul
mov
cmp
xchg
into
and
cmpl
loopne
int
pusha
mov
and
lcall
outsb
pop
push
jecxz
mov
inc
push
mov
lods
call
mov
sarb
xchg
es
xor
outsl
iret
bound
cltd
int3
fldl
popa
aaa
lock
fsubrs
cmp
mov
dec
cmp
mov
flds
jns
dec
shl
pushf
xor
pop
out
adc
pop
pop
loop
dec
and
je
in
cmpb
or
popf
mov
xor
nop
int3
mov
in
cmp
pop
iret
or
daa
dec
cmp
push
or
xchg
push
loopne
xchg
outsb
fdivrs
rcll
xchg
rcrl
adc
mov
ret
cwtl
sbb
subb
test
push
cmp
movsl
loope
jb
shrb
jne
pop
aam
ds
jp
pop
hlt
mov
lods
lods
sub
mov
ret
xor
test
and
xlat
jae
dec
iret
in
das
inc
xor
jmp
inc
sbb
inc
mov
clc
aaa
addr16
pop
jbe
jp
mov
stos
ja
test
insb
cmp
push
xor
in
std
jl
and
xchg
sti
mov
idivb
pop
scas
lret
data16
or
xchg
cmp
shrb
mov
pop
lahf
jl
adc
fwait
mov
xchg
lods
lahf
dec
int3
ret
mov
gs
iret
ljmp
sbb
rcl
clc
or
sub
jmp
xchg
push
inc
mov
mov
pop
mov
pop
aad
and
dec
push
js
jl
call
xchg
test
shrb
orl
sub
shll
cmp
xor
cmpb
dec
jmp
divl
insl
and
jnp
imul
mov
in
dec
pop
cmc
and
adc
outsl
add
pop
lahf
int
outsb
repnz
pop
push
sti
or
ss
jp
add
gs
lock
pop
pop
push
sbb
popa
in
arpl
dec
and
shr
cmc
jle
ret
pop
leave
and
ss
cmp
push
stos
cmpsb
testl
mov
push
xor
xchg
mov
cmp
sarb
inc
mov
mov
addr16
aas
sub
mov
out
stc
and
mov
into
mov
or
adcl
xchg
dec
test
inc
inc
insb
inc
push
mov
mov
int
inc
out
pop
into
inc
imul
xor
add
or
push
into
mov
cli
cmp
mov
call
xor
inc
int3
or
hlt
in
push
rcll
jl
inc
bound
mov
pop
xchg
dec
mov
mov
sub
and
cmp
lods
aam
xchg
addps
mov
les
lock
loopne
mov
mov
mov
sub
pop
pop
mov
je,pt
mov
mov
lds
ja
add
cmp
jae
ffree
xchg
mov
jae
mov
stos
icebp
sbb
sbb
stc
push
rcr
and
ret
dec
sbbb
out
lea
in
or
sbbl
cs
lret
dec
add
cmp
movsl
xor
pop
dec
pop
std
push
pusha
cltd
into
push
and
mov
inc
mov
mov
rorb
sub
movsb
orb
test
sbb
dec
xchg
lock
pop
dec
iret
cmp
sbb
mov
shrb
sbb
jnp
daa
lahf
pop
pop
clc
dec
movsb
dec
add
mov
addr16
xlat
xor
or
loope
repz
pop
fidivrl
fstl
jb
pop
xchg
jbe
mov
add
mov
mov
inc
arpl
scas
sub
adc
adc
push
push
imul
fdivs
fwait
rorb
mov
and
data16
sar
jae
fnstsw
push
sbb
sub
ret
sti
dec
mov
or
test
cs
lcall
sub
sar
jge
pusha
xor
jl
pop
stos
and
test
sti
jle
mov
adc
ret
cmp
movsb
mov
daa
inc
jo
lock
mov
movsb
mov
push
jbe
cwtl
nop
xchg
push
rcl
loope
jmp
sbb
shrl
dec
inc
sbb
or
jmp
xor
mov
pop
or
iret
push
push
insb
imul
movsl
jge
scas
cmp
mov
ja
push
xor
sbb
gs
scas
pusha
mov
inc
bound
insl
cmc
sar
dec
jnp
xchg
jne
icebp
outsb
jge
cli
test
lea
inc
in
mov
mov
imul
pop
jo
ljmp
inc
fnstenv
inc
or
lahf
jle
mov
mov
cmp
lret
xchg
pop
pop
cmp
sbb
ljmp
repnz
enter
scas
jge
ljmp
adc
pop
pop
dec
loop
aad
jnp
jo
sbb
jmp
jp
icebp
pop
xchg
pop
mov
xorl
jne
shll
cmpsl
cld
clc
pop
add
cltd
fs
pop
int
inc
or
jnp
and
and
pop
imul
stos
loop
test
loopne
rcrl
ss
ljmp
daa
leave
mov
mov
jbe
mov
stos
lcall
test
mov
adc
jg
add
insl
xor
and
xlat
or
add
shrl
pop
adc
in
cmp
mov
add
inc
les
pop
cmp
outsb
stos
in
popf
sti
dec
pop
inc
int
dec
out
xlat
insb
enter
jae
mov
les
cltd
dec
add
loop
addr16
inc
or
imul
fwait
sbb
jne
sbbb
lds
je
add
icebp
dec
and
into
lock
mov
cltd
sub
inc
jne
pop
adc
pop
fmull
popa
cmp
and
std
aaa
jbe
stos
lret
dec
mov
js
sub
lods
mov
push
push
sbb
mov
ljmp
mov
xor
cmp
movsl
pop
ds
sbb
push
or
push
xchg
ret
mov
mov
xchg
pop
fldl
sub
and
xchg
sbb
pop
and
cmp
loope
fs
or
jb
adc
cs
or
outsl
das
lods
and
les
adc
pushf
rclb
pop
int3
in
dec
push
adcb
aas
add
xchg
xchg
out
rorb
pop
imul
push
aad
jp
dec
icebp
xor
mov
or
jmp
ret
lret
rcrb
inc
jecxz
das
push
gs
mov
push
push
push
pop
pop
add
out
lfs
loop
cmp
scas
stc
movsl
test
pop
mov
add
into
cmpsl
push
iret
lea
or
adc
inc
repz
xor
xor
daa
or
stos
push
out
jmp
call
adc
cmpsb
aas
jle
mov
pop
fs
sar
sub
push
fcoml
jmp
xor
ja
lcall
out
xor
lret
mov
in
sahf
nop
test
das
repnz
cmp
cmp
push
mov
imul
sarb
or
or
mov
or
aad
insl
jb
ror
das
daa
cmp
jno
mov
sahf
or
cltd
cli
scas
and
xlat
adc
adc
jmp
scas
mov
test
xor
ja
push
jle
cmpsb
pop
xchg
icebp
inc
fcmovbe
adc
std
xchg
xchg
loopne
adc
shl
dec
jmp
inc
hlt
fildll
in
xorl
in
loope
jge
sbb
jns
or
aam
push
fucom
cmp
xchg
popf
sub
push
and
sarl
inc
mov
hlt
lret
mov
shll
mov
cmpsb
enter
mov
ret
jno
cli
mov
or
jge
mov
push
cltd
lahf
scas
test
pop
dec
stos
ret
fnstsw
push
call
nop
mov
pop
ja
dec
and
ret
repnz
jo
hlt
loope
cwtl
jae
stc
or
mov
mov
sub
lods
inc
xor
out
ja
xchg
int3
dec
xor
lcall
dec
jp
adc
sbb
xchg
cmp
xchg
add
mov
or
inc
clc
mov
cmp
inc
inc
aad
lret
ret
int3
push
pushf
xchg
inc
dec
and
sbb
mov
add
loopne
ret
inc
pop
cmpsb
add
stos
cmpsl
pop
outsl
dec
sti
adc
pop
fucom
add
dec
subl
sarl
imul
mov
gs
push
std
pop
outsl
push
loop
out
imul
jb
dec
xchg
mov
mov
sbb
cmpsb
iret
xchg
push
mov
fists
mov
lcall
jp
data16
xchg
jno
mov
popa
pop
sarl
and
cli
mov
lods
add
add
jo
idivb
mov
mov
adc
fst
inc
out
jl
lret
pusha
jae
jnp
inc
xchg
ss
sub
into
adc
gs
popf
dec
gs
or
sub
repz
pusha
rolb
xor
fiaddl
dec
adc
cmp
mov
sbb
fstps
jg
adc
lcall
jnp
or
xchg
push
lds
or
push
in
pop
push
add
nop
xor
jb
mov
push
mov
sbbl
into
jg
inc
popa
fcomip
roll
mov
aas
xor
dec
and
scas
pushf
dec
mov
cli
mov
xchg
outsl
aad
aaa
cwtl
sbb
mulb
sti
xor
rolb
pop
je
push
pop
stos
fadds
mov
dec
or
arpl
pop
sub
inc
and
out
scas
leave
and
lret
and
mov
repnz
shrb
decb
fldl
mul
ja
xor
and
mov
rol
lahf
testl
mov
inc
sbb
stc
sbb
mov
cwtl
pop
popf
loope
jge
mov
insb
mov
pop
sbb
in
fsts
mov
cmc
pop
and
mov
into
push
sub
xchg
cmp
push
fsts
add
shrb
test
xchg
xchg
adc
sbb
fisubs
ja
bnd
jecxz
sub
ds
cmp
call
ds
mov
mov
fsubl
pushf
daa
div
push
iret
mov
pop
cmp
scas
pop
outsl
jno
adc
fimuls
push
sarl
adc
push
aam
sti
ljmp
xchg
or
in
daa
xor
dec
repnz
std
repnz
xchg
jbe
pusha
cmp
int
fiadds
testl
xchg
mov
shll
les
mov
fidivrs
push
iret
addr16
shrl
lahf
imul
push
add
pinsrw
jbe
mov
dec
and
pop
movsl
dec
cld
dec
xchg
mov
mov
aaa
push
dec
loop
xchg
ss
mov
fucomi
mov
push
dec
add
lock
push
sub
jns
jl
or
je
test
jb
xlat
sbb
fimuls
push
mov
cwtl
adc
push
fisubl
aaa
dec
int3
push
jecxz
ja
loop
mov
cmp
cld
push
sbb
lret
js
cs
daa
out
add
loope
mov
in
insl
rolb
fldt
lret
dec
aam
out
jno
int3
adc
lds
mov
incb
scas
xchg
mov
jb
sub
into
popf
mov
inc
or
xor
ljmp
repz
push
or
xchg
lods
adc
out
and
sarl
mov
jg
cmp
or
pushf
mov
xchg
out
push
pop
jo
mov
lods
jp
adc
or
call
xchg
lcall
cmp
mov
push
js
sub
and
repz
lret
fcomi
jp
xchg
adc
mov
mov
out
sbb
mov
int3
xchg
or
hlt
add
adcb
mov
in
mov
fisttpl
aas
cs
icebp
cmc
cmc
xor
andb
sub
aaa
rcr
cs
adc
and
jge
sbb
cmpb
mov
push
cs
adcb
cltd
int
and
fdivs
xor
sub
push
movsl
jno
push
cmp
and
jne
sbb
imul
xor
mov
pop
lea
imul
mov
xchg
mov
and
push
jl
rol
and
arpl
ja
mov
mov
bswap
std
hlt
lcall
mov
aaa
jp
xor
pop
add
das
test
test
add
movsb
andl
lock
push
js
scas
push
xor
loopne
dec
xchg
jo
pop
xchg
mov
sti
sub
icebp
adc
push
loopne
stos
cmp
and
add
dec
cmc
scas
mov
inc
insb
aas
pop
push
xchg
fmull
test
bnd
fistpll
popa
fwait
es
mov
fimull
mov
adc
shrb
or
cs
dec
jecxz
xchg
and
inc
push
cmp
push
fisttps
aas
adc
and
shlb
jbe
aad
in
nop
enter
aam
sar
sbbl
xlat
push
popa
pop
add
push
rcll
fdivrp
push
xadd
jle
xchg
mov
mov
testb
add
jbe
sbb
and
push
dec
mov
cmp
lods
inc
jecxz
xor
stos
movsb
insb
aas
int3
or
and
test
enter
sahf
ret
xchg
push
inc
icebp
mov
scas
mov
lods
ds
aaa
push
nop
sti
insb
dec
adc
sbb
sub
int3
xchg
lret
push
std
in
wrmsr
aam
sbb
push
call
push
cld
outsb
aam
ljmp
filds
rolb
sub
and
jmp
leave
daa
das
int3
loop
mov
repnz
xor
mov
sbb
pop
or
lret
inc
and
mov
xor
pop
xor
and
dec
imul
mov
in
outsb
loope
mov
outsb
push
jo
out
popf
mov
js
das
and
cmc
xchg
inc
push
push
dec
sahf
inc
adc
mov
sub
aaa
sarb
lods
jnp
out
cmp
mov
adc
test
loopne
in
mov
xchg
andl
adc
out
sar
mov
push
lcall
iret
push
imul
cmp
jbe
inc
bound
jnp
sub
push
ljmp
shl
ret
pop
in
pop
in
mov
iret
jp
ss
pop
fdivrs
repnz
int3
xchg
mov
adc
test
push
push
lret
mov
rolb
adc
mov
push
cs
and
outsl
aam
loopne,pt
pop
dec
push
and
jmp
push
inc
cmp
xor
sbb
mov
pop
pop
leave
cmp
scas
iret
out
mov
lret
mov
ret
xor
neg
fsqrt
xchg
and
dec
jp
clc
xchg
cmpsl
cmp
call
xchg
pop
mov
cmc
shll
cmp
jno
sub
std
lods
adc
push
dec
loopne
inc
sbb
sbb
or
mov
cmp
pop
sar
ret
scas
in
sub
lea
cwtl
sbbb
rorl
inc
sarb
lock
adc
and
sarl
push
sbb
cmp
pushf
xor
push
negl
sbb
adc
adc
stos
or
inc
test
sbb
iret
xchg
addr16
popf
cmp
sub
js
or
mov
dec
aam
jb
stc
aas
fldcw
and
mov
mov
fsubrs
aas
jns
mov
mov
sub
test
or
shrl
nop
mov
dec
jnp
ljmp
lds
ficoms
ficompl
aaa
mov
push
add
ljmp
mov
hlt
dec
and
jo
push
sub
or
push
xor
pop
jno
xor
adc
xor
fimull
out
cmp
aam
adc
xchg
mov
idivl
imul
cmpsb
and
ds
daa
cmp
and
dec
mov
sbb
cltd
sahf
rclb
clc
xchg
mov
jp
mov
inc
push
jmp
inc
fldl
dec
scas
and
add
mov
inc
adc
pop
jo
cmp
lcall
fisubl
mov
sbb
and
sarl
pop
mov
aad
mov
xor
push
mov
pop
inc
pop
dec
sub
cmp
mov
mov
shll
mov
mov
and
daa
xchg
push
xchg
popa
cwtl
adc
xor
ret
in
stc
lret
add
ja
sub
cwtl
mul
jp
sub
aad
and
mov
sub
add
push
inc
cmp
daa
sbb
out
push
lahf
cltd
sub
and
inc
aam
or
mov
lcall
insb
je
push
imul
jo
sbb
sbb
into
lods
cltd
dec
mov
add
push
add
fwait
imul
push
fmuls
je
mov
jl
push
out
lds
into
cmp
scas
jo
popa
dec
jns
mov
repnz
mov
adc
icebp
jnp
fs
pop
data16
cmp
repz
mov
xchg
negl
or
in
xor
pop
push
outsl
fmuls
adc
rorb
out
sbb
loopne
xlat
lock
imul
arpl
and
in
xchg
fcompl
mov
mov
test
sbb
push
test
sbb
std
xorl
addr16
jmp
add
ss
sbb
mov
push
adc
mov
mov
cmc
add
roll
scas
dec
lret
sahf
fiaddl
scas
or
xchg
sbb
mov
scas
popf
lods
mov
mov
daa
mov
insb
es
push
add
cli
mov
sahf
mov
or
leave
push
push
loope
mov
daa
addr16
pop
fldt
ret
rcr
mov
jp
and
cwtl
sub
cmc
je
enter
out
mov
mov
jnp
cmp
push
jne
push
and
and
shrb
scas
xchg
jecxz
pop
int3
xchg
addr16
das
inc
rdmsr
subl
popl
jmp
scas
adc
repz
insb
aam
mov
pop
idivl
jp
out
xor
sbb
xchg
mov
insb
fcmove
sahf
fldcw
xor
mov
ficoms
negl
push
test
add
mov
mov
loope
addb
mov
lods
add
mov
xor
pop
pop
pop
les
sbb
rorl
out
xchg
into
orl
mov
loope
xor
and
mov
and
inc
push
popa
test
hlt
jmp
sti
cmp
test
movsl
add
push
loopne
xchg
insb
mov
jns
add
js
add
insb
out
jp
lea
xchg
in
lods
adc
ret
ss
shlb
pcmpgtw
jno
loop
sub
mov
stos
mov
cmp
fwait
sbb
push
fisttps
jo
fcmovnbe
jl
lret
and
out
shlb
aad
dec
and
inc
test
test
dec
lret
or
jns
cmpl
sbb
sbb
inc
sbb
fisubs
sbb
mov
mov
cmp
xchg
rol
cmp
std
xchg
jb
js
fldenv
pop
xor
xchg
jae
xor
push
or
andb
sti
lock
push
movsl
pop
test
lods
fstps
mov
sub
popf
inc
push
pop
add
mov
mov
pop
mov
mov
les
fsts
sub
lcall
lock
subb
mov
dec
daa
add
bound
loopne
cmpsb
addr16
shll
sbb
imul
jno
cmpsb
arpl
iret
pop
das
int3
jns
inc
je
fwait
sbb
icebp
mov
push
sbbl
movsl
into
out
ret
lods
jae
lea
push
sbb
repnz
xchg
in
or
in
or
mov
int3
sbb
mov
out
insl
repz
gs
out
ficompl
sbb
and
pop
les
mov
cmp
fsubs
stc
mov
dec
movsl
fwait
mov
mov
mov
push
aas
nop
mov
jae
clc
loopne
fistl
es
inc
jle
sub
mov
pop
out
rcr
sub
and
sbb
push
pushf
sub
push
pop
jae
test
xor
lds
pop
mov
xchg
add
call
mov
mov
jmp
test
mov
adc
adc
rol
xor
pop
test
or
xchg
mov
inc
sbb
test
adc
movsl
mov
cmpl
sbb
inc
inc
out
popa
push
test
mov
stc
lea
jge
xor
xchg
mov
dec
lcall
pop
jns
push
scas
test
movsl
loopne
xlat
int3
adc
or
mov
pushf
das
mov
add
and
pop
stc
faddl
lods
fucomip
jle
jp
push
add
inc
inc
xchg
data16
imul
shlb
mov
and
loop
je
mov
inc
xor
jb
sub
clc
adc
lods
pop
dec
sub
shll
adc
mov
mov
mov
sarb
jg
call
dec
mov
movsb
xor
outsb
adc
mov
mov
and
push
ja
jmp
pop
xchg
adc
rolb
inc
je
lods
jns
and
ret
inc
xorl
jo
cmpsl
inc
dec
or
ja,pt
dec
stc
andl
repz
sbb
sub
imul
pushf
and
jmp
scas
jmp
imul
mov
dec
xchg
add
cwtl
xchg
xor
int3
dec
sbb
fs
dec
mov
jmp
add
ret
clc
movsb
ret
add
mov
push
sub
jb
fnstenv
out
decl
push
cs
in
jno
cmovbe
xchg
popa
and
fcomps
or
mov
adc
shlb
fld
scas
push
adc
pop
xor
mov
sbbl
pop
add
fmull
outsl
push
dec
xor
jbe
testl
jp
add
sarb
cmp
pop
xchg
push
cwtl
mov
ss
push
xor
and
sahf
arpl
inc
mov
scas
jmp
roll
addr16
pop
imulb
decl
inc
hlt
aas
in
adc
lret
pop
mov
lcall
mov
xor
mov
test
pop
loope
xor
lret
xorb
pop
fisubrl
cmp
ud0
arpl
decb
idiv
mov
scas
cli
pushl
gs
popf
fbld
sub
or
xor
lea
outsb
mov
mov
sub
jmp
push
ret
lods
ljmp
mov
inc
jl
jl
movsl
adc
ret
dec
cmp
sbb
rcrl
jbe
in
and
lahf
pop
and
pushf
lcall
pop
nop
inc
xlat
out
scas
mov
in
lcall
movsl
mov
adc
out
add
insb
adc
mov
jns
cltd
jge
aaa
adc
cmp
jmp
push
je
pop
call
mov
gs
insb
stc
adc
fistpll
xchg
mov
dec
pop
dec
lea
cmp
outsb
mov
repz
pushl
inc
iret
es
aad
mov
frstor
jmp
negl
hlt
mov
dec
lock
pop
mov
and
mov
jecxz
std
jbe
imul
mov
iret
mov
call
test
shll
push
and
iret
jae
adc
xchg
or
in
mov
out
and
xchg
scas
out
push
into
int3
jmp
fistpl
sbb
repnz
movsl
and
aaa
mov
lds
sub
lret
lret
mov
lods
inc
sub
xchg
cmc
in
subl
xchg
outsl
mov
cltd
out
adc
std
repz
adc
js
adc
adc
sbb
stos
push
test
cltd
cwtl
xchg
sbbl
pop
sub
pop
sbb
scas
and
jmp
outsb
mov
xchg
gs
pop
ret
cmp
and
outsb
jae
sub
jbe
add
loope
dec
xchg
jb
loop
xor
push
jl
adc
hlt
mov
xlat
or
divl
jnp
push
movb
scas
movsl
fmull
push
in
mov
sbb
pop
mov
cmpl
repnz
jo
stc
stc
push
fwait
dec
lock
lods
stos
mov
mov
jmp
data16
je
jne
inc
mov
aaa
movsb
add
inc
fsubrp
mov
es
jo
push
rolb
xor
jno
adc
fistpll
shll
ljmp
icebp
popa
flds
mov
dec
in
pop
sub
inc
add
or
mov
js
stos
mov
in
xchg
add
ljmp
jno
sub
loopne
ljmp
out
sbb
push
das
les
ja
jae
adc
fidivs
and
xchg
testl
adc
addr16
enter
loopne
mov
cmpsb
js
dec
fsubs
or
call
cmpsl
lods
ret
adc
ds
push
aas
xchg
ljmp
push
xor
jmp
in
insl
add
push
nop
mov
fisubrs
outsb
mov
aas
out
rcrb
dec
lock
mov
or
les
stos
xchg
or
fwait
xorb
adc
fstl
mov
mov
jg
fsub
daa
test
ret
cmp
inc
aam
cld
rcll
add
enter
test
test
jno
add
clc
pop
mov
mov
mov
inc
adc
cs
or
and
sub
in
orl
cmp
pushf
fsubp
push
lret
inc
sub
cs
pusha
bound
or
add
sub
and
gs
mov
jb
xchg
sti
int3
xchg
mov
scas
cld
inc
mov
fcompl
jno
stos
daa
jbe
mov
jnp
loop
fdivr
decb
repz
pop
mov
add
aaa
data16
loop
into
push
cmp
movsb
push
push
or
mov
jge
jbe
scas
es
movsl
mov
fidivs
leave
sbb
pop
pop
cmp
iret
add
call
or
testb
dec
movsb
dec
jbe
lods
outsb
xor
fucomip
adc
call
out
mov
mov
mov
mov
mov
int
loop
fucomi
and
js
pop
or
mov
inc
push
xor
sbb
jmp
xchg
mov
add
push
xor
cwtl
push
inc
mov
sub
push
or
jg
daa
sbb
inc
rcl
jno
pop
jb
xchg
push
sbb
push
cltd
add
cmp
jbe
rclb
mov
mov
test
push
in
lock
hlt
jnp
fisttpl
in
test
fwait
inc
fwait
push
loop
jmp
icebp
imul
mov
fldenv
shrb
sbb
sub
pop
sbb
xor
mov
add
cld
fcmovnb
movsb
jne
popa
iret
push
out
fisttps
sbb
aaa
xor
cmp
hlt
ret
data16
xor
push
imul
sub
setnp
leave
inc
xchg
stos
mov
fdivrs
sbb
xor
add
jecxz
popf
inc
dec
sbb
imulb
xchg
add
lods
adc
lock
hlt
push
sbb
and
int3
imul
std
push
movsl
hlt
daa
in
adc
cmp
stc
sub
popf
xchg
push
fbstp
add
call
lea
and
pop
js
fildl
hlt
xor
adc
es
enter
adc
cmp
inc
adc
cwtl
es
ljmp
or
fmuls
cmp
arpl
fildll
gs
mov
and
daa
xor
fimull
or
mov
or
jp
and
call
xlat
mov
gs
popf
pop
lcall
adc
xchg
push
mov
mov
das
sbb
andl
xchg
sub
adc
and
aas
mov
inc
pop
aad
dec
sub
daa
cmp
lahf
pop
sub
fiaddl
xchg
daa
inc
jle
jns
test
cmp
out
add
xchg
cmp
mov
std
daa
mov
mov
fnstsw
xchg
scas
jmp
push
mov
push
adc
push
xlat
in
imul
ret
dec
leave
mov
cmp
mov
push
out
dec
or
js
jae
xchg
cmp
sahf
mov
cltd
dec
xchg
adc
xchg
out
adc
adc
cmp
fwait
lea
jns,pt
push
mov
and
pop
lret
cmc
out
sbb
movsl
xchg
std
xchg
mov
pop
mov
sbb
decl
outsb
jge
in
arpl
sub
pop
cmp
pop
daa
scas
jno
push
adc
cmpsl
fimull
shrb
ljmp
out
mov
sti
repnz
dec
push
clc
vpsubsw
xor
or
int3
sub
lock
mov
dec
xchg
rcrl
retw
mov
mov
inc
repz
sar
stc
call
hlt
repnz
cwtl
addr16
std
or
lret
das
pusha
add
xor
mov
inc
outsb
xlat
loop
rcll
xchg
outsb
jmp
xor
adc
push
divps
cs
pushf
add
adc
rep
xchg
xchg
lods
cmpsb
add
das
jbe
lret
test
push
rol
push
or
sub
push
jg
jns
fsubrs
sbb
loop
dec
and
sahf
cmpl
popa
adc
mov
int
cmpsl
mov
mov
sbb
add
or
fucomip
loop
jb
push
cmp
hlt
movsl
mov
jl
mov
xor
lock
dec
rcr
sub
clc
addb
cmp
out
lock
mov
mov
cltd
adc
loopne
stc
mov
pop
lods
or
xor
sbb
cmp
jl
jb
enter
pop
bound
fnstenv
adc
xchg
or
xchg
test
dec
jmp
into
or
inc
xchg
test
fldenv
jge
in
sarl
int
test
int3
push
xchg
sahf
in
hlt
out
stos
mov
or
mov
es
std
imul
adc
cli
sub
cmc
sub
add
jecxz
mov
ja
movsb
or
nop
jnp
int3
push
mov
or
ja
pop
jle
lock
add
mov
dec
add
sub
repz
ss
fs
cmp
mov
in
movq
out
inc
jo
filds
stc
ret
dec
jno
mov
xorl
dec
enter
shlb
lahf
ja
sbb
pop
xchg
dec
jne
in
dec
and
cmc
mov
push
add
pop
adc
mov
dec
loope
arpl
push
ds
xchg
inc
fldt
and
sub
shlb
push
ret
iret
push
subb
mov
leave
inc
popa
pushf
jecxz
sbb
sahf
nop
cmp
push
addr16
dec
xor
shl
cmp
mov
dec
and
add
mov
pop
dec
or
mov
inc
mov
mov
cmpl
lock
mov
mov
jnp
sbb
add
mov
push
jmp
inc
xor
jg
inc
dec
cwtl
adc
daa
dec
xchg
neg
cmp
lock
gs
or
sbb
stc
out
repz
jl
test
push
push
loopne
pushf
push
xchg
mov
mov
inc
int
mov
mov
mov
movsb
insb
add
sub
mov
xor
addr16
lahf
ja
cmpsl
sbb
dec
mov
jno
lahf
idiv
inc
cmp
rcrl
pop
enter
jo
inc
jbe
jle
mov
dec
out
pop
ljmp
mov
popa
out
adc
or
movsl
push
mov
fstl
mov
push
das
ror
pop
cmp
dec
sub
lods
js
xrelease
push
and
repnz
popa
xchg
cltd
xchg
mov
jne
cli
das
ljmp
add
cmpsl
or
data16
xor
push
ret
nop
inc
jno
cmp
lahf
es
in
rcrb
or
dec
inc
lods
pop
nop
and
and
fnsave
pop
xchg
cli
sub
cmp
pop
xchg
mov
add
xchg
xor
inc
push
add
add
fucom
leave
aad
add
adc
add
mov
std
sub
fildl
mov
jns
jo
or
sahf
int
mov
gs
or
jno
fsts
aaa
cmp
aaa
mov
sarl
nop
scas
mov
mov
mov
das
fisttpll
in
pop
xchg
in
and
push
into
xchg
out
pop
inc
in
cmc
fdivrs
pop
sub
cmc
pop
add
rorb
popf
sbb
cmpl
fwait
out
iret
adc
adc
adc
ret
mov
out
pop
cmc
daa
xchg
mov
repnz
test
and
jbe
mov
pop
out
call
dec
shll
cs
lahf
xchg
push
pop
xor
sahf
in
jl
mov
pop
or
cmpsb
bound
test
xor
int
call
rorb
or
xchg
sarb
cltd
xchg
add
xor
sarb
sbbl
fwait
push
xor
data16
jb
jo
xchg
sub
fwait
xchg
sub
mov
fs
inc
push
dec
insl
int
sub
into
jae
imul
adc
in
mov
jge
xlat
mov
push
loopne
push
int3
call
lock
repnz
sbb
cmp
scas
test
mov
mov
mov
mov
mov
push
push
insb
outsl
dec
cwtl
cmp
outsl
pop
mov
jo
jnp
and
adc
inc
shl
lds
pusha
xor
lock
dec
sub
cld
adc
and
xchg
mov
lret
jae
daa
out
cld
rol
dec
inc
sahf
or
out
dec
mov
loopne
pushf
jnp
leave
mov
lret
out
out
inc
repnz
xchg
add
aaa
and
xor
add
xlat
out
jne
mov
xchg
push
push
nop
sbb
adc
jmp
iret
dec
mov
mov
leave
es
mov
insl
sbb
pop
mov
mov
jno
clc
or
rorb
mov
pushf
aaa
adc
add
inc
sub
sbb
push
dec
mov
push
clc
mov
mov
and
test
push
cmp
jecxz
fisttps
les
push
roll
pop
movsb
add
in
outsb
es
cld
jne
push
dec
in
and
insb
icebp
pop
ret
je
sub
aam
lods
adc
fcompl
mov
test
xchg
inc
sar
dec
les
insl
cmc
cmc
in
jae
mov
jno
push
xchg
popa
pop
daa
or
add
ret
sub
hlt
dec
cmp
stos
in
stos
cli
mov
ja
mov
mov
xchg
std
mov
jae
clc
and
jns
mov
aas
mov
and
cmp
cmp
and
data16
int
aas
fwait
cmpsl
inc
mov
lock
jo
sub
inc
sbb
addb
into
sub
jmp
outsl
pop
cmp
fwait
cmp
test
cmp
lds
xor
stos
mov
bound
stc
jge
ja
pop
jo
sub
bound
push
test
push
mov
mulb
adc
addr16
pusha
lret
jnp
jle
cs
in
push
dec
fisubrl
push
test
sahf
push
xlat
fwait
xchg
rcll
mov
xchg
fistps
mov
aas
mov
push
mov
jmp
aaa
ja
fnstcw
aam
pop
xor
and
rcll
pop
inc
ss
test
xchg
inc
outsb
enter
imul
fisubrs
fs
mov
mov
loopne
adc
std
sbb
dec
mov
and
aad
insl
popf
push
adc
fs
cwtl
adc
loop
fdivrl
xchg
xor
cmp
gs
mov
mov
pop
add
push
pop
mov
pop
popf
jae
xor
and
jmp
cmc
imul
jo
xor
pop
jno
out
jo
sbb
pop
lods
xchg
jmp
dec
adc
ss
ja
popl
xchg
loop
sbb
iret
test
xchg
jg
in
push
or
sub
fwait
loop
roll
and
mov
imul
xor
gs
sbb
out
cmp
push
cli
addb
movsb
iret
stos
lret
adc
pop
test
lret
mov
ljmp
test
rolb
into
mov
lret
pop
dec
jge
add
sbb
dec
mov
jmp
cwtl
jp
negb
movsb
xchg
ja
mov
push
or
cmpsl
pusha
mov
pusha
xchg
pusha
adc
mov
jns
jo
repz
clc
xor
scas
or
adc
xor
bound
xor
aas
setno
xchg
sub
cltd
cs
or
xchg
xor
loopne
int
mov
jecxz
push
fs
push
mov
scas
xchg
adc
int
inc
leave
jle
jne
lods
add
mov
xchg
push
out
lds
sbb
aam
repnz
push
pop
das
adc
ljmp
push
dec
mov
xchg
imull
shll
popf
daa
scas
xchg
and
loop
loop
lea
sub
loop
sahf
jbe
data16
cmp
push
jb
nop
test
jmp
shll
mov
out
sahf
and
pop
movsb
sub
xchg
scas
fidivs
enter
cli
xor
xor
xor
xor
mov
push
test
out
dec
or
mov
ret
cmc
mov
jb
in
xchg
ds
sbb
jo
jmp
mov
jb
pop
sti
cmp
mov
hlt
lds
inc
mov
mov
out
pushf
mov
addl
mov
pop
add
call
adc
inc
mov
sti
notl
pusha
mov
lret
fcmovbe
inc
arpl
sbb
or
mov
sarb
pusha
sbb
inc
xchg
mov
lods
pop
mov
dec
std
je
dec
vpunpckhqdq
mov
mov
cmp
jl
mull
std
stos
pop
movsb
fnstsw
ret
jo
push
mov
sahf
movsl
cmpsb
pop
mov
cmp
add
xchg
les
test
popf
xlat
call
adc
jb
sti
fnstsw
push
sbb
jmp
adc
pushf
imul
push
mov
push
mov
jbe
cmpsb
dec
pop
imulb
xchg
shll
or
or
and
add
lock
call
pusha
and
cmpsb
divl
stos
scas
leave
jns
outsl
iret
xchg
xchg
addr16
sub
les
add
mov
xchg
xor
lds
push
inc
mov
movsb
fcoms
in
sti
arpl
lea
sub
out
rclb
xlat
xor
fsubs
xlat
pop
nop
movsb
xchg
pop
sbb
stc
add
mov
add
mov
nop
mov
lods
insl
inc
mov
leave
ds
rcrl
addb
add
dec
jecxz
outsb
das
inc
push
xor
sub
xor
add
sub
daa
stc
fwait
jl
scas
jge
xor
mov
push
mov
aad
imul
test
sti
data16
aaa
push
pop
enter
outsl
imul
jmp
mov
lret
stos
jo
mov
mov
je
call
adc
sub
nop
cmpsb
outsb
popf
in
cmp
sub
jl
cmp
mov
sar
test
mov
shlb
or
out
out
and
xchg
fcompl
cwtl
adc
sbb
add
add
push
loop
js
sub
inc
xor
aas
lods
push
jo
aad
sbb
mov
mov
adc
xchg
fmull
cld
pop
aas
xlat
pushf
mov
sub
adc
inc
pop
shr
mov
and
sub
scas
or
aas
mov
fs
sbb
pop
shlb
inc
mov
pop
xchg
or
mov
mov
test
mov
je
pop
imul
jl
loop
aaa
test
xchg
mov
addr16
into
inc
xor
popa
outsl
sbb
leave
or
rclb
push
sub
inc
jge
xor
pop
sbb
insl
icebp
mov
jns
xor
jg
test
sbb
inc
xor
dec
call
aaa
mov
mov
je
test
js
inc
sbbl
fs
faddl
cmp
and
bound
pop
idiv
adc
pop
inc
cli
inc
sti
jbe
xchg
mov
enter
and
repnz
cmp
jle
popf
adc
fstp
sbb
xchg
mov
cmp
lret
or
addb
pusha
or
jecxz
mov
jbe
jecxz
mov
sbb
cli
pop
dec
insb
and
cmp
xor
arpl
in
jnp
mov
cmpsb
mov
ret
dec
push
sbbl
pop
xor
push
mov
mov
mov
mov
enter
fsubs
jl
outsl
jmp
jmp
cmp
mov
xchg
nop
icebp
cli
inc
xchg
push
rcl
clc
push
leave
repz
xor
sub
je
in
insb
jns
dec
add
shr
je
inc
mov
cmp
mov
xchg
mov
lods
jge
addr16
stc
add
sbb
inc
add
mov
arpl
mov
popf
xor
mov
lcall
sbb
in
xchg
jbe
addr16
lds
lcall
push
leave
dec
sub
int3
jmp
iret
sbb
add
xchg
imul
sbb
add
popf
mov
push
imul
mov
stos
push
fdivr
jbe
sbb
or
inc
call
es
arpl
ds
cwtl
test
dec
insl
jnp
nop
in
mov
mov
and
push
dec
out
mov
mov
xor
fiaddl
cwtl
stos
push
cmp
or
push
cs
sub
sar
or
inc
lods
sahf
xor
push
leave
jnp
jecxz
sarb
push
mov
jge
mov
test
scas
fdivl
and
push
or
je
or
stc
sub
lcall
mov
and
out
mov
sbb
enter
mov
mov
sub
sub
pop
icebp
xor
ret
xlat
repnz
scas
jge
xor
subl
ljmp
or
pop
mov
test
push
pushf
and
pop
pop
dec
in
cmpsb
addl
fsubrs
or
mov
out
dec
pop
mov
ja
adc
jo
add
out
xor
enter
out
test
ljmp
les
out
adc
addl
mov
hlt
xor
mov
frstor
inc
aaa
jle,pn
sahf
movsl
dec
jae
dec
fidivrs
mov
es
insb
clc
daa
xchg
push
int3
rcll
pop
idivl
notl
lock
hlt
dec
repz
aaa
dec
andb
fidivrs
add
sub
call
mov
sub
scas
push
inc
movsl
movsl
insl
add
loop
pop
iret
cwtl
ror
and
mov
mov
pop
xchg
cmpsb
mov
sub
icebp
or
or
fs
popf
lods
sbb
test
mov
test
outsl
jae
push
jecxz
adc
push
cmp
test
add
xchg
insl
loope
lret
xlat
add
jne
pop
das
jp
push
adc
popa
dec
cs
sbb
ds
cli
push
jb
pop
enter
nop
sbb
xor
push
lret
rorl
or
jnp
rcrl
mov
mov
pop
movsl
sub
jae
lcall
imul
in
xchg
stc
push
xor
lret
inc
sub
fisubs
pop
push
jle
jo
dec
out
mov
in
mov
jno
jle
cmp
cltd
mov
xlat
xchg
pop
mov
lret
dec
out
popa
sub
mov
loopne
sbb
mov
jns
sub
cmc
inc
cmp
or
jmp
adc
ss
subl
mov
xchg
inc
mov
dec
rclb
mov
or
and
mov
and
mov
test
xchg
js
in
add
ljmp
repz
sbb
lock
mov
inc
mov
xchg
ljmp
scas
dec
fdivrl
mov
lea
filds
iret
sahf
les
mov
push
jnp
or
pop
leave
stos
or
mov
cmp
je
dec
cmp
pushf
pop
loop
push
lds
xor
imul
dec
or
cmp
pop
pop
mov
clc
aam
repz
lahf
fwait
mov
into
ja
pusha
repz
cltd
cwtl
pop
aaa
addr16
sbb
data16
lods
shl
je
std
cld
dec
xlat
xchg
jnp
and
movsl
jne
jecxz
mov
pop
jb
repz
popa
int
dec
adc
add
aaa
imul
mov
jg
inc
fwait
ror
or
out
sub
cmp
dec
imul
outsl
cmp
sub
add
adc
fwait
stos
pop
push
adc
push
and
and
pop
in
adc
inc
ret
and
je
adc
pop
ljmp
scas
jp
mov
push
mov
into
gs
adc
cld
jg
add
pop
jle
ja
cwtl
call
push
add
add
push
dec
fstpl
ss
scas
test
lods
fsubrl
sub
or
sbb
or
sbb
loopne
popa
fstps
sbb
xor
inc
popa
cmp
pop
movsb
ret
test
out
xor
cwtl
dec
cld
mov
sahf
cmp
fnstenv
repnz
push
lret
adc
test
inc
pusha
dec
push
into
fildl
add
xor
insb
inc
xchg
lock
fnsave
add
dec
in
mov
mov
cmp
stos
enter
jb
orl
mov
cmc
int
enter
xchg
sub
int3
ja
lret
adc
cpuid
mov
insb
dec
xor
xor
jno
pop
scas
xor
lods
arpl
mov
jmp
jns
push
shrb
bt
leave
fcomps
jnp
clc
xchg
dec
push
mov
inc
popf
fwait
mov
xor
shll
dec
call
add
in
loop
push
popa
cmc
jne
out
xchg
pop
stos
in
cs
push
pop
pop
testl
xchg
mov
dec
lahf
fs
pop
sbb
push
int3
addl
dec
cmp
dec
gs
das
jmp
and
xor
adc
in
popf
test
add
out
cli
les
les
mov
ret
sbb
leave
xor
xchg
push
sub
push
gs
add
cmp
call
dec
call
xchg
cmp
jno
and
adc
add
cmp
or
xor
movsb
in
add
cwtl
inc
or
add
push
sarl
mov
iret
mov
daa
outsb
out
mov
cmp
jle
aad
sbb
stos
dec
mov
pusha
push
push
int3
jle
jmp
inc
dec
adc
jmp
inc
loopne
pop
sbb
push
icebp
mov
pop
into
pop
xor
xchg
faddl
pop
data16
xchg
lcall
test
jno
inc
sarb
mov
dec
rcrl
sbb
dec
shll
inc
mov
fs
outsb
scas
fiadds
xchg
daa
in
jp
subb
ja
movsl
dec
adc
lods
adcl
ss
add
call
rcr
adc
es
jbe
cmp
push
not
mov
sti
popf
ja
sbb
dec
dec
lret
lock
add
xchg
pop
mov
int3
mov
mov
add
sbb
lcall
movsl
lea
jecxz
fadd
ja
jne
shlb
test
and
pop
enter
or
inc
sub
lcall
cmp
dec
mov
loopne
pop
mov
inc
je
or
out
mov
rcrb
push
pushf
pusha
or
push
fldcw
xchg
jecxz
scas
popf
sub
addr16
dec
test
xchg
daa
lahf
stc
ret
jl
jno
call
jle
cmp
rcrb
xor
out
push
ss
dec
push
cmp
mov
lret
scas
pop
cmp
sbb
lods
jns
add
dec
jo
fdivrp
out
mov
enter
hlt
data16
movsl
je
mov
mov
sub
fs
mov
loopne
sar
cmp
aas
and
lcall
jge
dec
and
scas
cmp
nop
outsb
mov
imul
xchg
and
popa
lods
xchg
lock
test
inc
mov
movsl
popf
push
subl
mov
rclb
push
data16
xor
repz
scas
sysret
hlt
in
fstpl
in
inc
insb
pop
sarl
pop
negb
das
sub
dec
repz
aam
fisubs
cmp
cwtl
addr16
sti
mov
aas
lea
push
push
push
test
icebp
ss
push
cmpb
xchg
inc
mov
add
pushf
out
shlb
fsubr
hlt
inc
rcr
and
dec
dec
test
or
xchg
push
cld
mov
xchg
bound
dec
add
sbb
cltd
dec
mov
sti
je
or
stc
adc
cmpxchg
int3
pop
nop
jmp
test
push
loopne
and
add
mov
sub
call
rolb
add
jae
rorl
jns
xchg
ret
dec
pop
mov
lds
sbb
mov
popl
repz
out
jecxz
jp
and
fcoml
xor
xchg
add
adc
test
push
test
xor
or
mov
pop
mov
int
sub
out
into
ror
dec
xor
xchg
lods
xor
sahf
lods
jmp
mov
insl
sub
insb
cmpl
lret
hlt
add
call
cmp
jp
or
cmp
pop
rcrl
xor
rcrb
loope
cmp
pushf
sbb
jno
nop
cmp
ret
adc
cmpsl
lods
jg
repz
mov
sahf
aas
xor
out
adc
pop
cmp
mov
out
fnstsw
icebp
and
push
ret
paddb
fsubs
xchg
push
outsl
inc
inc
shr
dec
clc
bound
mov
push
es
out
inc
movsl
mov
out
testb
xchg
fdiv
daa
cmpsl
lret
call
mov
movsl
pop
jp
enter
pop
jo
cli
inc
mov
dec
mov
xchg
mov
jp
lahf
leave
std
das
fmull
xchg
ljmp
popf
pop
divb
adc
loop
scas
sbb
xorb
out
xchg
push
mov
std
jge
or
add
data16
cmpsl
lds
mov
scas
jns
scas
sub
je
and
cmp
mov
mov
jp
cmpsb
mov
mov
in
cld
mov
mov
pop
pop
sbb
sub
xchg
sbb
test
negb
ds
shrl
inc
jg
shll
ja
and
cltd
daa
mov
fcoms
test
rcr
cmc
pusha
sbb
pop
push
or
es
nop
and
pop
pop
loope
jae
jns
lods
jg
or
pushf
mov
push
mov
jl
push
pop
or
test
mov
jecxz,pt
into
push
insb
repz
sub
push
or
add
jg
in
cmp
ljmp
test
lret
cmc
imul
xor
sub
sarb
jg
in
repz
das
out
fwait
push
daa
adc
lods
push
lds
mov
lods
movsl
sarb
test
movsl
loopne
ret
jl
add
add
mov
les
dec
fwait
fs
sbb
repz
sub
pop
inc
hlt
loope
lods
or
ret
push
pop
mov
xchg
cs
mov
fcoml
rcll
hlt
or
push
fadds
insl
xor
mov
loop
mov
cltd
inc
mov
neg
stos
cmpsb
fxch
loope
push
mov
sahf
repnz
adc
lods
jb
fisttpl
xchg
add
push
into
sbb
test
cmovg
inc
test
ja
mov
pop
pop
lcall
pop
jbe
imulb
pop
xchg
rclb
sbb
mov
and
loopne
xchg
rorb
mov
mov
iret
cmp
cld
inc
sbb
sub
out
or
sbb
roll
arpl
push
or
rcrl
lcall
je
nop
cmp
fisubrl
and
mov
push
lods
pop
stc
mov
ljmp
in
sub
rcrl
fs
and
cmp
xchg
adcl
fs
push
lods
adc
inc
notb
cmp
stc
pop
out
dec
or
movsl
mov
outsl
imul
sti
ret
dec
push
xchg
in
outsb
jmp
shrb
mov
iret
mov
mov
or
es
int
jns
mov
leave
xchg
pop
cmp
arpl
fnsave
push
ja
jg
jecxz
sbb
cmp
mov
dec
fdivrp
arpl
scas
in
lret
sti
inc
mov
test
bound
ja
sar
imul
jg
scas
cmp
push
inc
sub
push
jge
add
mov
mov
or
mov
out
xlat
jno
arpl
scas
mov
fstps
push
pop
dec
sub
fmul
stos
movsb
cmp
and
cwtl
and
lods
or
sub
mov
fsubs
xchg
sub
add
ret
sbbl
addr16
out
lea
inc
outsb
dec
in
or
inc
pop
inc
push
sahf
xor
leave
rcl
add
jns
inc
or
adc
movsl
lret
mov
insb
mov
loope
jo
pop
and
int3
scas
xchg
mov
daa
dec
add
mov
clc
jg
jg
push
clc
push
insl
mov
jmp
pushf
mov
jbe
jae
inc
cmpsl
mov
or
repnz
mov
jae
jne
mov
lock
loope
push
xchg
xchg
pop
imul
cmp
les
movsb
sbb
push
movsl
push
adc
xor
sub
inc
in
in
xchg
xchg
shl
test
sbb
pop
std
jne
test
stos
mov
pusha
imul
jb
adc
inc
jb,pn
testl
push
pop
jmp
test
jbe
mov
jns
in
add
push
stos
pop
or
mov
aaa
add
cmpsb
jne
jg
sti
jge
into
iret
or
into
xchg
push
push
xchg
mov
ret
ds
push
gs
sbb
ret
repnz
cmpsb
add
push
or
lea
decb
les
mov
scas
sbb
mov
lret
sub
dec
xchg
mov
cmpsl
mov
jg
jno
data16
mov
std
xchg
xchg
cmp
xchg
fisubrl
dec
ljmp
imul
enter
fildll
pop
and
inc
inc
jb
xchg
dec
xor
lock
sbb
sbb
push
outsb
out
pop
pushf
jno
aaa
or
adc
xchg
xor
mov
push
jl
jo
jo
pop
dec
add
jp
inc
test
inc
fsubrs
or
add
sbb
jnp
cmpsb
aas
push
jnp
mov
or
sub
data16
imul
cmpl
inc
repnz
das
clc
dec
loop
xlat
jb
adc
push
jnp
movsl
or
inc
mov
jge
and
cmp
dec
rcr
mov
imul
dec
add
mov
push
dec
out
sbb
cmp
imul
mov
into
mov
mov
push
xor
addl
jnp
pop
sbbb
stc
fwait
mov
test
add
cmp
mov
hlt
bound
xorl
mov
ja
sahf
cmp
jo
xchg
popf
adc
adc
push
push
sbb
sub
lock
adc
xor
das
fs
adc
jae
daa
mov
loopne
mov
pop
bound
cvtpi2ps
das
rcrl
jne
dec
cltd
rcrb
jbe
xchg
rolb
roll
cld
add
fs
jmp
stos
sbb
adcb
aaa
xchg
lret
je
add
sbb
mov
sub
cs
jl
push
call
xchg
leave
lea
adc
pop
mov
dec
push
xor
fs
xor
inc
shlw
cli
mov
mov
mov
push
in
jle
mov
adc
es
out
jae
adc
pop
mov
je
popa
jg
ret
mov
mov
mov
fs
adc
adc
push
test
mov
xchg
int
addr16
jo
out
sub
pop
inc
stos
push
in
outsb
add
lcall
lahf
cmp
inc
out
push
and
cwtl
outsl
shrl
hlt
jb
loop
fisttpl
mov
out
jbe
mov
cltd
stos
mov
into
stos
cmp
je
pop
lret
enter
push
adc
scas
pop
mov
xor
jle
xor
cmp
jnp
mov
shlb
push
leave
xchg
xchg
xor
mov
jno
xchg
fcmovnb
addl
dec
addb
mov
pop
lods
inc
mov
insb
push
cmp
jl
pop
mov
mov
dec
jle
push
inc
shll
inc
dec
cmpsb
xchg
out
cmp
aaa
mov
hlt
jo
cmc
sbb
add
cmc
and
nop
or
xchg
dec
push
add
mov
movsb
testb
mov
xor
nop
stos
stos
xor
dec
jl
aaa
dec
jae
xor
ds
inc
popa
insb
xchg
sbb
xchg
sbb
mov
cmp
sti
xchg
movsl
rcr
xchg
jl
xchg
movsb
push
ficoml
imul
dec
or
mov
xchg
ret
cmp
adc
mov
bound
inc
inc
sub
nop
or
call
loope
sub
sub
add
fidivrl
mov
mov
es
adc
jle
cmp
cmp
or
popf
popf
push
in
movsb
and
nop
aam
aaa
popa
lcall
lods
inc
fwait
cltd
sti
mov
jge
adc
out
ror
mov
and
lds
popa
stos
mov
lea
mov
shlb
sbb
push
lret
aam
jmp
jne
push
pop
ss
push
adc
adc
int3
xchg
adc
sbb
mov
mov
out
notl
adcl
loope
in
sbb
sub
in
fcoml
sub
int
or
leave
out
fisubrs
scas
xchg
inc
cltd
xchg
imul
int
arpl
mov
out
and
movsl
movsl
sti
jae
add
in
lock
dec
pop
hlt
jg
ljmp
sbb
add
pop
ljmp
xor
push
push
and
outsb
into
decl
and
or
mov
inc
push
add
push
cmp
add
add
push
loope
ds
ret
jns
dec
jbe
out
mov
pop
mov
leave
pop
test
cmp
pop
addr16
inc
sbb
jae
inc
jl
sbb
jnp,pn
xchg
das
xor
ret
jp
imulb
xchg
cld
xchg
and
jl
jns
rol
mov
cltd
or
dec
sub
sub
sbb
inc
incl
inc
out
out
cwtl
sub
ficoms
push
icebp
push
inc
jp
mov
xchg
jl
adc
push
xor
mov
xor
pop
movsl
mov
stos
test
loopne
pop
mov
sahf
in
sahf
imul
lods
cmp
jmp
mov
mov
or
enter
jns
imul
or
lret
mov
rorb
fistpll
jnp
cmp
jae
inc
inc
jne
and
and
push
andb
addr16
lods
nop
lds
scas
and
mov
decb
adc
adc
jmp
and
jmp
xchg
jno
shl
add
test
call
and
outsb
add
or
int
leave
movsb
das
cmp
add
scas
xchg
jg
lds
stc
jp
jmp
mov
pusha
mov
and
pusha
add
push
mov
mov
clc
shll
xor
lea
jp
jns
rcll
out
fldt
mov
out
clc
shlb
dec
insl
outsb
add
jle
in
adc
nop
xchg
loop
pop
addr16
jnp
mov
mov
out
fbstp
aas
mov
inc
inc
cli
pop
inc
pop
call
cltd
push
shlb
adc
cmp
out
xor
add
xor
test
pop
pop
mov
cmp
imul
inc
pop
js
sub
jle
jae
mov
in
and
mov
or
scas
lods
jmp
jnp
inc
out
decb
inc
lea
stos
jle
cmpsl
pop
clc
xchg
and
scas
mov
and
or
adc
xchg
push
mov
or
pop
movsl
mov
mov
cmp
insl
enter
mov
stos
cmp
and
ss
int3
jne
inc
enter
sub
imul
sub
push
pop
dec
add
pop
stc
jae
insl
mov
and
sti
lds
stos
mov
jecxz
stc
mov
mov
insb
push
int
pop
dec
and
lods
stc
mov
fstpl
jmp
or
add
aaa
fcomi
xchg
arpl
jmp
jge
and
push
stos
aam
mov
leave
sbb
mov
fwait
subl
cmp
push
jae
jl
mov
in
dec
arpl
inc
mov
xor
cmp
les
jns
mov
sub
incl
mov
clc
pop
mov
stos
dec
xor
sti
divb
movsl
sub
mov
loopne
pop
les
jb
dec
cs
sbb
pop
xlat
iret
jnp
sahf
std
cmp
pop
xor
shll
mov
mov
sub
nop
or
loope
push
cmpsb
xchg
scas
mov
or
push
mov
scas
push
push
scas
sbb
pop
jns
mov
lods
adc
mov
ds
cld
xlat
mov
hlt
xorl
or
arpl
repnz
in
test
and
xor
test
fmuls
xchg
push
test
imul
jl
inc
adc
nop
xchg
scas
cmpsb
inc
in
and
sub
fdivr
fildl
push
add
cmp
in
push
ret
xor
pop
cmp
jnp
movsb
arpl
dec
jae
pop
sub
jnp
dec
adc
inc
jb
and
inc
fwait
sub
mov
mov
orb
adc
xchg
mov
sbb
push
sbb
lcall
or
mov
mov
xchg
sub
sbb
xchg
sbb
aaa
sub
mov
das
mulb
fstpl
divb
sub
adc
sub
les
or
wbinvd
jns
fs
ror
mov
mov
xchg
ret
mov
xor
sbbl
push
out
idivl
sbb
push
leave
rorb
ficoms
ss
jecxz
and
jbe
orl
and
mov
or
movsb
cmpsl
fdivrs
cltd
int3
mov
or
fs
push
loopne
dec
pop
pop
cmc
addl
or
xor
daa
dec
push
xlat
stc
sub
and
mov
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
incl
pop
loop
push
pop
push
pop
scas
popf
push
ljmp
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
jmp
popf
push
sbb
scas
pop
xchg
je
scas
rcrl
xchg
sbb
cld
cmp
push
and
jbe
out
and
jge
ret
or
jle
stc
xor
add
rol
push
pop
push
adc
dec
mov
stos
pop
sbb
andl
or
insb
pop
int
pop
call
jnp
divps
subl
xchg
push
in
popf
push
andl
movsl
fisubrs
xor
xchg
sbb
gs
pop
push
jno
call
dec
lret
push
testl
xchg
push
jl
jl
sbb
scas
popf
push
adc
cmp
pop
push
adc
dec
aas
pop
unpcklps
loop
push
pop
push
repz
sahf
push
push
push
push
lret
loop
push
pop
push
scas
test
adc
pop
cmp
inc
adc
adc
mov
adc
adc
loop
push
pop
push
push
scas
pushf
push
adc
imul
push
icebp
or
loop
aad
push
add
adc
repnz
push
adc
adc
loop
push
pop
push
adc
sbb
mov
push
pop
push
jecxz
popf
sbb
lret
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
xchg
pop
sub
popf
mov
unpcklps
loop
push
mov
scas
cltd
push
adc
insl
sbb
adc
adc
int3
dec
es
push
jne
adc
adc
push
pop
movlps
adc
loop
push
pop
push
adc
adc
add
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
adc
loop
push
pop
push
adc
cmp
loop
push
pop
jg
jne
xor
and
mov
cmpsl
cmp
and
push
das
cmp
test
sub
jge
xor
adc
stc
inc
out
xor
pop
in
cmpsl
pop
mov
xor
movsl
mov
push
xchg
leave
xchg
push
test
mov
pop
cld
fbstp
add
add
sub
xchg
cmpsl
mov
ja
adc
jno
and
mov
pop
adc
sbb
jno
pusha
dec
lret
fld1
ds
xchg
fadds
int
jae
inc
fcoml
test
in
mov
scas
movsb
sarb
and
out
fsubrl
mov
xchg
enter
dec
out
sarb
popa
inc
rolb
sub
inc
cwtl
add
ret
popf
or
and
cmc
push
jb
in
gs
int
mov
jo
inc
std
mull
outsb
insb
push
xchg
ret
dec
mov
cld
jb
rcll
push
rep
lods
push
mov
mov
inc
and
in
push
ss
les
pop
nop
jne
or
ret
rclb
jp
iret
dec
in
sbb
pop
call
pushf
xor
adc
and
hlt
cmpsb
sub
aaa
jnp
std
js
addb
xor
cmp
add
push
mov
add
adc
and
and
lods
xor
rcl
inc
pop
cmc
xchg
cwtl
xchg
and
aaa
clc
leave
jns
xchg
push
cmp
inc
imul
add
pop
arpl
pop
adc
sub
dec
jne
cld
dec
jecxz
jl
pop
mov
push
out
ret
sub
dec
sbb
mov
push
pop
lcall
mov
pop
cmp
jns
push
jnp
scas
mov
orps
lret
inc
cmp
jp
jne
mov
testl
test
fwait
xlat
adc
dec
pop
cmp
stos
sbb
mov
xchg
sub
mov
shr
sbb
push
push
int3
insl
mov
popa
pusha
mov
pop
sbb
push
sbb
dec
pushf
out
and
popa
adc
add
jmp
inc
and
insl
pop
pop
push
dec
push
mov
lock
mov
shrl
mov
lods
loopne
testl
aad
into
in
mov
test
daa
inc
mov
fsubrs
sub
xlat
sub
mov
daa
mov
rclb
rcrl
add
pop
mov
daa
lahf
pop
push
out
add
jp
in
inc
add
fcompl
add
fmull
pop
push
dec
in
push
sbb
daa
adc
std
sti
push
pushf
inc
scas
icebp
ds
jecxz
jae
popa
mov
xlat
mov
bound
dec
inc
and
xchg
jae
stc
lret
inc
sbb
cmp
and
xchg
fidivrl
popa
add
daa
xchg
sub
mov
cli
insb
fbld
pop
les
pushf
adcl
sub
mov
inc
push
pushf
add
mov
lret
push
pop
idivb
daa
push
xor
aaa
dec
dec
cltd
mov
out
outsb
ret
cmp
test
add
imul
xor
imul
xchg
es
jg
push
ret
cwtl
sbb
sbb
pop
add
or
push
mov
or
sub
sbb
pop
cmp
loop
mov
gs
inc
test
push
addr16
orb
pop
scas
push
out
scas
jno
es
xor
fsubr
mov
sti
test
aas
test
ret
out
mov
fs
mov
xchg
and
cli
cmpsb
xchg
sbb
mov
or
jno
icebp
mov
or
es
loopne
js
and
stc
repnz
mov
inc
ss
push
cmp
sub
stos
cmp
int3
aaa
sets
fstpl
sbb
add
or
nop
out
std
mov
inc
outsl
push
add
cmc
shrb
sti
xchg
cmp
out
and
cld
jno
xorb
jle
jle
mov
mov
flds
push
test
xor
or
das
rcrb
push
push
and
fdivs
hlt
imul
addr16
shl
into
mov
and
orl
addl
in
sub
sbb
or
ror
in
popa
mov
arpl
cmp
mov
xor
testl
pop
cmpsl
cmp
test
adc
cmp
dec
je
pop
ja
and
adc
or
mov
xchg
push
sbb
iret
pop
mov
aam
push
add
xor
pop
scas
jp
jb
rcrb
xor
repnz
sbb
xlat
ret
in
or
mov
inc
loopne
or
push
arpl
fldenv
shrl
in
xchg
xor
mov
adc
xor
jbe
stos
movsl
outsb
jmp
daa
out
xchg
daa
push
shlb
xor
idivl
enter
ret
iret
fisttps
sbb
out
aam
pop
clc
outsl
xorl
xor
fsubp
or
pop
outsb
cmc
push
das
out
aad
repz
pop
fstl
pushf
or
movsl
mov
hlt
add
daa
lret
lods
and
aam
pop
jo
ljmp
pop
mov
sarb
jne
xchg
sti
scas
mov
ficoms
push
sbb
and
lahf
xchg
mov
mov
out
fstl
in
aas
fcomip
fisttpll
icebp
xor
sarl
mov
cmp
jo
clc
and
int3
outsl
mov
shrl
scas
sub
sub
and
dec
xor
and
mov
cmpsl
push
pop
mov
shll
xor
mov
push
xchg
cmp
inc
pop
call
add
in
and
fbstp
xchg
lea
jne
incb
popf
push
xor
inc
jmp
fwait
adc
cpuid
push
sbb
adc
mov
fiadds
into
cmp
mov
mov
mov
lret
mov
or
cmp
int3
pop
pop
sub
add
iret
sub
push
add
mov
xchg
ret
sbbl
add
inc
int3
or
mov
mov
fdivl
jl
push
push
sub
jne
mov
aaa
fnstenv
fsubl
test
popa
jmp
xlat
pop
push
addr16
inc
mov
xlat
push
out
xchg
ret
xor
insb
fwait
imul
icebp
in
ss
mov
dec
push
ds
inc
enter
or
cmp
rol
out
insb
ficoml
imul
test
repnz
shlb
fs
cmpsb
xlat
push
mov
mov
sub
aad
ds
inc
ret
rcrl
pop
xor
orl
cmp
das
in
sahf
xor
movsb
sub
lock
loop
cmp
shrb
inc
popl
out
pop
sbbb
fcmovbe
loop
dec
dec
pop
push
call
das
jmp
shll
adc
cltd
enter
xchg
lds
imul
mov
mov
cmp
mov
ljmp
repnz
js
cmp
xchg
xchg
adc
fsubr
jns
xchg
push
fistps
sub
nop
mov
add
xor
lret
mov
jecxz
and
sarb
loop
push
faddp
fsubl
in
arpl
push
push
inc
js
pop
pusha
sbb
add
into
jns
jmp
loope
sub
mov
cmpb
cmp
into
jl
div
fisubl
jbe
stos
mov
addr16
push
sub
sub
dec
loopne
dec
out
sbb
addb
mov
inc
mov
cwtl
push
movsl
xor
hlt
pop
ret
sub
dec
mov
dec
mov
lahf
mov
repz
mov
hlt
daa
stos
enter
mov
sbb
mov
mov
cli
sub
inc
pop
lret
push
cmp
or
add
push
push
jo
mov
idivl
out
mov
pop
dec
insl
jmp
lea
sub
mov
fsubs
jb
movsb
pop
xchg
mov
add
mov
ret
stc
je
xchg
xchg
js
cs
je
or
std
xchg
mov
rclb
dec
scas
cltd
fstps
daa
das
xor
push
je
clc
out
ss
fiadds
into
mov
or
or
test
adc
mov
imul
mov
push
stc
sub
inc
ja
out
mov
or
jno
leave
push
pop
hlt
in
add
ret
out
jne
sbb
mov
and
repz
xor
mov
cmpsl
ja
dec
loop
shlb
add
repnz
shr
lea
in
lret
mov
fnstenv
shl
sti
adc
fildll
xor
cmp
add
lcall
arpl
cld
mov
out
sub
pop
dec
lock
dec
mov
pop
popf
mov
dec
mov
dec
enter
xor
lea
stos
jl
flds
xchg
das
add
shrl
xor
add
fwait
cltd
fldl
or
push
es
sbb
in
orb
rclb
rcl
je
sbb
and
add
fwait
test
inc
pop
das
pop
ss
loop
insb
fidivl
iret
inc
mov
mov
or
mov
nop
js
or
in
mov
or
pextrw
jno
pop
aam
xchg
shll
outsb
insb
push
imul
inc
jae
adc
pushf
push
mov
rcrl
sbb
aas
jnp
mov
push
mov
adc
test
jno
ss
dec
cmp
mov
movsl
loope
sub
fistpl
fsubrl
cmp
notl
cmp
sti
sub
inc
inc
mov
pop
int
ds
loope
pop
repz
push
outsl
lcall
int
call
lret
inc
int3
mov
popa
sbb
mov
cltd
sbb
dec
add
ljmp
mov
inc
cmp
lret
shll
and
sahf
mov
jb
mov
ret
jno
push
outsb
stos
xchg
xor
aas
xor
lcall
loopne
mov
sbb
stos
jmp
sbb
loopne
test
insl
jl
jns
leave
cmp
mov
jp
out
dec
movsl
shll
dec
popa
lock
dec
jns
fldt
lods
in
push
mov
cmp
scas
xchg
aaa
scas
bound
sbb
rolb
imul
jmp
mov
pop
aaa
gs
pop
in
mov
adc
and
cltd
xor
lods
xchg
faddp
mov
sbb
lea
mov
sbb
jle
aad
push
pop
mov
ljmp
dec
leave
std
sbb
popf
xchg
lret
mov
pop
imul
adc
jb
pop
in
and
and
lret
jmp
jle
sbb
xchg
lcall
andb
and
test
sub
in
pop
lret
push
adc
mov
aas
mov
mov
and
mov
loopne
mov
mov
data16
or
push
ror
jo
dec
mov
ljmp
pop
jg
inc
fdivrs
inc
aad
fcoms
cmpsb
cmpsl
js
jl
pop
xchg
fisubrs
sbbl
xchg
je
dec
dec
xor
and
shrl
test
push
xor
jne
pop
mov
ja
push
push
adc
scas
pop
cmp
je
fs
jnp
fmul
add
xor
inc
or
ja
outsl
mov
fcmovnb
xchg
lea
jle
sub
push
lds
lea
xor
jnp
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
