cs
mul
jp
mov
dec
lock
in
test
xbegin
adc
ret
fldcw
pop
rcrl
ret
outsb
mov
mov
add
fiadds
pop
es
repz
test
jnp
insb
mull
dec
mov
insl
test
or
xchg
and
adcb
mul
push
lahf
lods
dec
sti
jns
aaa
loop
add
lret
or
add
jnp
push
hlt
add
adc
mov
fcmovnbe
mov
adc
scas
add
daa
pushf
mov
inc
sbb
jmp
enter
iret
lea
repnz
popf
mov
lock
ds
aad
mov
push
pop
scas
cmp
enter
inc
cs
iret
sub
lds
decb
loopne
pop
scas
ret
inc
ds
decl
cld
or
cmp
pushf
sbb
push
adc
inc
or
out
xor
nop
scas
lock
pop
stos
pop
in
data16
pusha
pop
adc
pushf
outsb
in
mov
push
sbbl
mov
adc
jmp
andb
adc
mov
aaa
or
jae
fwait
and
pop
mov
jecxz
ds
hlt
xlat
lds
loopne
fucomi
arpl
pop
mov
push
stos
cmp
lock
insl
xchg
ds
jecxz
xorl
pop
mov
or
jns
fbstp
incl
inc
push
ret
mov
jb
scas
lea
inc
or
jne
mov
out
int3
imull
or
mov
adc
ljmp
pop
adc
sub
push
mov
aaa
mov
jle
mov
sbb
lcall
cmp
mov
jg
fisttps
mov
fimull
idiv
cld
mov
sahf
inc
fs
cmp
pop
idivl
out
push
loopne
cmp
out
and
mov
stc
nop
jmp
jp
andb
stos
lea
fwait
lcall
testb
cmp
das
imul
cmpsl
enter
mov
rcr
ja
cmc
aad
popa
mov
pop
and
push
mov
mov
xor
push
fcmove
jne
xchg
cltd
int
pop
xchg
mov
popf
repnz
sti
inc
mov
mov
out
es
dec
insb
adc
mov
adc
icebp
in
ret
popf
dec
push
or
insl
sti
add
cmp
nop
jmp
jecxz
je
pop
das
cmp
movsl
sti
dec
imul
sbb
outsl
imul
lock
std
loop
xor
cwtl
std
push
add
xchg
lahf
sub
bound
inc
or
jge
cmp
into
cmp
or
imul
mov
xchg
lock
adc
rcr
int3
popa
out
mov
in
mov
ret
sub
lcall
mov
adc
movsl
and
lahf
sbb
test
fsubrl
dec
imul
push
or
daa
adc
dec
std
xor
cmp
mov
fwait
aam
sbb
jns
push
pop
repz
pop
sbb
xchg
call
out
movsb
fidivrs
addb
jnp
shl
inc
jno
subl
pop
dec
ss
jbe
cwtl
sarb
pop
popa
int3
and
adc
pop
lahf
imul
stos
ret
jmp
clc
fwait
add
pushf
and
mov
decl
stc
dec
rol
mov
lahf
cmp
add
xchg
test
cmpsb
outsb
and
mov
mov
mov
inc
and
mov
mov
hlt
sbb
or
daa
inc
je
fldl
dec
test
mov
mov
pop
sbb
je
and
je
adc
cwtl
inc
mov
or
inc
inc
out
fnstcw
aam
or
sbb
xchg
daa
mov
movsl
cmp
inc
mov
pusha
pushl
cmpsl
aad
mov
inc
insl
adc
movsb
adc
jg
subb
sbb
in
push
das
stc
bound
hlt
lods
dec
jge
mov
sahf
sbb
jle,pt
in
jl
xchg
orl
pop
mov
xchg
sbb
sbb
cmpsb
cld
jge
cli
cld
repz
dec
cmpsl
pop
mov
mov
dec
mov
imul
xorl
in
or
and
in
xchg
out
insb
push
cmp
add
ss
jl
jge
and
movsl
mov
jns
out
and
rcrl
mov
push
enter
mov
cmpsb
sahf
mov
sub
pmaxsw
incl
xor
data16
pusha
adc
pop
jecxz
or
fyl2xp1
cmp
outsb
and
pop
movsl
mov
daa
daa
fldenv
dec
js
xchg
and
mov
js
pop
nop
test
dec
cmpsl
mov
mov
inc
inc
mov
loopne
and
cmp
jno
push
pop
jg
inc
ds
add
cmp
xorb
mov
rorl
sti
inc
mov
imul
and
xchg
dec
js
jnp
ret
aam
js
into
aad
iret
int
or
leave
jne
cmp
mov
or
fs
dec
mov
out
push
jle
repz
mov
repz
iret
dec
adc
sub
add
in
pushf
jne
ss
aas
jns
cmpsl
sub
jmp
mov
xchg
mov
sbb
and
sub
test
daa
lcall
aas
mov
xor
dec
sbb
inc
sub
adc
cwtl
mov
testl
daa
inc
mov
inc
mov
dec
rcr
inc
repnz
jl
cmpsl
fdivs
inc
call
push
lods
inc
mov
dec
cmpsl
jp
mov
xchg
out
or
mov
inc
push
iret
xlat
nop
jge
cmp
inc
and
adc
cmc
inc
xchg
outsb
pop
push
xchg
xor
jecxz
adc
cs
lock
cmp
adc
or
or
lods
test
jp
sbb
or
out
in
popa
iret
pop
jne
fistpl
inc
jecxz
pop
int
mov
mov
sub
movsl
jmp
popa
data16
fwait
fwait
pop
stos
push
cld
sub
out
lret
in
pop
enter
jns
bound
mov
sbb
cmp
jb
push
sbb
sub
xchg
or
in
add
mov
dec
pop
dec
mov
and
ud0
mov
jns
jmp
sub
faddl
clc
xor
ss
icebp
xor
jle
sbb
jae
xchg
fdivs
or
aad
into
xor
pusha
jmp
cli
inc
add
bound
jg
and
orb
in
xchg
mov
jbe
dec
jecxz
mov
mov
cmpsl
push
xlat
insl
lock
aam
pop
jno
pop
stos
stos
or
pop
je
push
sbbl
aad
and
xor
rcr
mov
xchg
xchg
jnp
sub
sub
icebp
js
pusha
and
lahf
adcb
lret
rorb
inc
xor
jg
subb
bound
or
xchg
jecxz
mov
scas
mov
ret
iret
add
mov
je
cmpsl
jge
xchg
mov
ss
xlat
cmp
or
add
leave
movsb
cmp
sti
add
mov
sbb
push
jae
add
xlat
repz
dec
xor
inc
adc
icebp
mov
flds
inc
sar
test
mov
xchg
out
loop
fnstcw
fadd
push
mov
adc
mov
popf
scas
cltd
xchg
mov
lcall
lret
test
push
push
popa
and
adc
cmpsl
push
out
sub
mov
add
sub
push
aas
movsb
xchg
imul
movsl
insb
dec
cmp
out
rol
push
xchg
orb
pop
ffree
add
cli
hlt
jns
xchg
mov
xchg
xchg
mov
xor
es
aad
je
js
aam
pop
pop
xchg
ret
inc
mov
out
cmp
mov
fstl
pop
fcoms
sub
mov
stc
dec
push
bt
or
xchg
push
addl
xchg
loop
lods
inc
into
inc
out
dec
and
push
cmp
ljmp
mov
sbb
xor
jecxz,pn
pop
stos
fsts
inc
mov
and
stos
mov
sbb
cmp
push
push
lcall
xchg
xchg
xchg
sbb
cmp
aaa
adc
inc
sbb
or
icebp
mov
inc
jp
inc
iret
adc
mov
mov
out
dec
add
jae
inc
mov
mov
mov
xor
dec
aaa
insb
cmpsb
mov
jb
pop
pop
push
fwait
mov
add
repnz
dec
cltd
rcrb
cmp
into
add
mov
adc
lock
dec
stc
out
cltd
or
cmpsl
adc
add
dec
imull
orb
xchg
push
fimull
loopne
out
jp
add
add
push
ret
daa
inc
sub
mov
mov
outsb
fistps
js
cwtl
pop
addr16
mov
mov
mov
jmp
sub
dec
fnstenv
cmp
js
fcoml
add
pusha
scas
inc
jmp
xor
push
rorl
fcoml
push
mov
aad
push
and
add
xlat
outsl
xchg
leave
mov
xchg
mov
loop
outsb
pop
sub
jnp
js
push
and
lock
scas
call
mov
les
test
lret
jns
jp
pop
stos
test
mov
jg
xchg
xchg
loop
jb
push
jns
push
imul
sub
mov
mov
aam
sbb
pop
neg
test
movb
add
lret
in
mov
jecxz
push
adc
jae
jo
dec
mov
aam
lret
jb
push
daa
adc
pusha
push
adc
into
int3
xchg
dec
xor
sarl
mov
jno
mov
test
fsubrl
mov
mov
cmp
jmp
pop
fidivrl
cmp
mov
icebp
sub
and
or
cmc
int3
loopne
mov
cmpsb
out
push
xor
sbb
in
sbb
cmp
mov
cmp
mov
es
fnstenv
popa
jns
dec
je
cmpsb
pop
mov
jmp
cmpl
or
mov
aaa
or
mov
mov
call
xor
loop
orb
push
fldenv
lret
outsb
xchg
sub
jle
add
mov
and
fnstsw
sub
dec
enter
inc
jb
mov
enter
int
cmpsb
sub
xor
mov
ljmp
dec
push
divl
lret
and
jecxz
jl
insl
repnz
and
sub
add
add
insb
aad
pop
mov
add
mov
fs
dec
lahf
jb
lret
or
mov
or
sbb
dec
lods
mov
scas
andb
addr16
mov
xor
xchg
rcrb
in
in
jl
imul
push
in
lods
xor
iret
test
lret
fcompl
loope
sbbb
dec
xor
insl
and
mov
clc
pop
and
test
sbb
xchg
stos
outsb
call
mov
iret
int3
fldl
pop
sbb
js
mov
outsl
mov
pop
xor
cmp
mov
mov
fnsetpm(287
loop
sub
jo
dec
js
testl
xchg
push
fs
clc
push
std
addr16
xor
cmpsb
jbe
sub
test
jb
divb
test
stos
in
or
add
sbb
sbb
or
xchg
int3
aad
lret
ss
and
dec
loope
loope
ret
xchg
xchg
adc
inc
jmp
adc
pop
in
cwtl
ficomps
and
lods
and
in
orb
mov
jecxz
clc
rep
sti
loop
dec
xor
fldcw
add
loop
add
scas
push
sbb
mov
push
mov
aaa
add
je
aaa
or
jl
inc
out
mov
leave
jae
fists
rcrl
out
dec
ljmp
inc
repnz
jl
add
out
pop
mov
mov
jne
dec
mov
pop
jg
fwait
sti
xchg
inc
pop
mov
cltd
iret
cmp
inc
pop
fnstenv
xor
inc
add
cmp
leave
negb
or
sbb
xchg
pop
notb
sbb
std
pusha
push
out
adc
jmp
js
imul
mov
shrb
jne
pop
mov
test
lahf
mov
xor
or
mov
es
dec
and
lret
lock
imulb
insl
pop
and
shl
mov
push
jb
je
jnp
inc
test
adcl
push
xor
mov
idivb
popa
adc
mov
cmp
or
mov
add
loope
aas
sahf
mov
sahf
je
mov
fdivrs
mov
pushw
js
lods
testl
divl
adc
fstps
sub
shll
push
jno
mov
mov
sbb
fsubl
in
lcall
shll
les
sub
pop
or
jmp
jno
xor
and
js
test
repz
icebp
jbe
dec
sub
imull
mov
xor
inc
sub
repz
stos
push
dec
push
inc
into
lock
push
int
pop
roll
aas
fwait
icebp
ret
add
js
daa
mov
inc
xor
je
mov
es
sbb
pop
mov
fdiv
xor
test
mov
dec
fnstenv
push
movsl
nop
push
test
out
and
pop
sub
ja
mov
stos
add
jbe
mov
fdivl
cmpsb
mov
pop
decl
in
push
xchg
sub
es
xchg
xchg
xchg
loop
inc
xchg
mov
fisubl
and
xor
int
sti
mov
pop
or
shll
push
fidivs
les
fwait
mov
inc
pop
dec
imul
xlat
sbb
xor
sub
int
cmp
in
loop
and
sub
pop
in
pop
add
pop
ss
idivb
cmp
cltd
cmc
inc
adc
mov
addr16
fsubs
inc
lea
mov
lods
dec
flds
xchg
out
cmp
out
fbstp
and
sbb
in
sbb
and
pop
movsl
leave
add
orl
add
xor
sub
cmp
and
jecxz
cmp
lods
xchg
ja
pop
rcll
test
stc
shr
sub
fists
sar
or
stc
dec
vpcmpeqw
adc
and
inc
leave
inc
ljmp
or
xor
insb
jne
lea
fidivrs
push
adc
inc
ja
lock
push
repnz
mov
jge
push
pop
xadd
adc
lret
test
dec
or
cmp
ds
arpl
push
test
ret
iret
ljmp
fisttpl
fstl
adc
insb
xchg
sub
xor
aam
inc
cmp
nop
fwait
movsb
fbld
mov
jb
nop
pop
into
xchg
stos
orb
insl
out
jecxz
xchg
or
mov
test
xor
sub
loope
pop
cmp
jl
subl
cmpsb
rolb
ret
stos
adc
mov
loope
pop
js
movsb
inc
sub
lods
xor
lret
filds
jno
jo
gs
mov
movsb
mov
xchg
jecxz
push
cmc
jnp
xlat
inc
subb
mov
xchg
sbbb
jle
ret
xor
pushf
dec
mov
mov
sbb
jns
sbb
test
cmp
sub
repnz
addr16
out
push
popf
sbb
mov
or
jmp
jns
mov
inc
xor
push
test
fadds
js
call
mov
movsl
push
movsb
imul
clc
add
out
mov
add
lcall
jbe
loop
push
pusha
mov
leave
jb
mov
or
inc
cmp
sub
int
popa
shlb
icebp
cmc
imul
xor
inc
lahf
in
insb
icebp
cmc
sub
lcall
bound
push
add
push
inc
push
aam
add
mov
sub
ds
jae
jl
and
mov
addr16
cmp
nop
push
bound
lock
push
fsts
mov
xchg
fnstenv
xchg
xchg
inc
fwait
jnp
sti
insl
xor
inc
sub
xlat
push
ret
enter
xor
pushf
test
jp
pop
aaa
jp
jmp
cwtl
and
adc
mov
jne,pt
xlat
jb
lock
pop
ds
iret
mov
jmp
push
lahf
scas
rorl
mov
lods
cmc
cmp
fildl
jp
inc
popl
cmp
mov
ljmp
insl
call
add
push
jl
stc
in
xchg
xor
xor
rcll
jnp
add
adc
repz
xor
jge
or
pushl
sub
push
xchg
mov
or
das
and
inc
arpl
int
test
add
push
shrb
cmp
mov
and
nop
aas
cmc
popf
popf
outsl
cld
push
add
sarb
dec
lret
lods
pop
jecxz
mov
inc
mov
into
les
cs
pop
xchg
out
xor
pop
adc
out
jp
mov
sbb
fcmovne
shlb
adc
orb
push
adc
inc
sub
sub
sbb
dec
ret
mov
sub
into
mov
rclb
test
jge
adcb
xchg
push
sub
repz
es
lahf
add
scas
jb
bound
xor
loope
or
cmp
sbb
pop
mull
sub
shlb
push
and
in
inc
jnp
int
or
insb
test
lods
jae
mov
fbstp
outsl
arpl
jae
fldt
enter
or
sbb
mov
jno
daa
fildl
jmp
inc
mov
push
mov
jp
xchg
jae
push
pop
cmp
in
or
add
jns
sbb
push
xchg
shlb
inc
scas
mov
lahf
mov
pop
rcr
fildll
lahf
xchg
cmp
dec
jae
jo
jae
or
mov
xchg
ss
lea
stc
fcom
add
ret
stos
mov
mov
nop
and
mov
pop
cmp
dec
cmpsl
dec
lods
int
jne
push
fsubrp
mov
jge
leave
and
push
xchg
push
leave
xchg
hlt
popf
leave
dec
push
jne
add
out
dec
inc
cmpl
call
lea
add
push
iret
mov
add
sub
or
dec
in
orl
mov
cmp
sbb
andb
lea
out
gs
enter
icebp
mov
jbe
push
data16
std
sub
mov
mov
mov
push
test
mov
push
pop
popa
fcmovbe
out
pop
xchg
das
inc
xchg
jg
sub
call
rcrl
sbb
cmp
cmp
dec
sti
mov
mov
ret
in
mov
cmp
cmp
rolb
cmpsl
mov
leave
pop
mov
push
scas
aas
ds
or
int
pop
xchg
jle
xlat
adc
and
jo
decl
jge
addr16
sub
xchg
fadd
jno
outsl
ret
inc
enter
or
fdivp
inc
clc
icebp
cmp
inc
ss
xor
pop
mov
jae
and
pop
xchg
daa
mov
jne
enter
rcl
cs
or
or
pop
lods
popf
add
mov
sub
mov
hlt
pop
cs
xchg
cmp
push
push
or
mov
sbb
lret
aam
add
clc
call
out
out
jp
xchg
fsubrl
xchg
call
cs
popf
jmp
or
cltd
popf
adc
adc
addr16
pop
mov
sbb
jp
push
fisubl
out
jecxz
xchg
in
mov
in
sbb
sub
cmc
add
jge
or
xchg
aam
pop
scas
push
mov
repnz
inc
clc
scas
inc
stos
inc
inc
mov
cmp
adc
les
roll
insl
mov
int
mov
add
repz
fsts
outsl
xlat
cmpsl
scas
jecxz
in
xchg
inc
repnz
dec
lock
pop
outsb
js
push
xchg
sbb
sbb
and
push
ja
lret
push
add
int3
jmp
sub
shll
and
cwtl
aam
nop
pushf
lds
mov
xchg
or
inc
inc
out
push
sbb
xor
test
ret
subb
arpl
daa
insb
adc
lahf
enter
das
and
inc
mov
sub
scas
stos
xor
jb
xchg
jl
cmp
sarl
in
pop
jl
push
push
xchg
pop
nop
dec
adc
shr
xor
fstl
test
frstor
add
fs
inc
fnstenv
or
inc
jmp
aaa
ja
push
cltd
enter
scas
movsb
daa
jle
ss
mov
cs
scas
mov
jecxz
adc
xor
int3
out
adc
bound
mov
mov
xor
in
out
pop
xlat
test
negb
jns
jb
mov
stos
jmp
push
dec
lods
aam
push
pop
mov
in
jp
scas
imul
aaa
fists
pop
push
and
inc
inc
mov
jns
mov
adc
jl
sti
mov
sub
js
mov
data16
fisubl
xchg
push
push
lods
push
mov
mov
push
decl
scas
insl
mov
dec
lret
mov
xchg
push
cmp
inc
push
push
es
stos
popa
dec
jp
cli
mov
sbb
scas
sti
das
push
adc
fcomi
in
int
xchg
aaa
scas
test
out
shlb
mov
xor
sub
inc
cmpsb
jecxz
stos
shrl
push
xchg
jae
dec
and
and
cmp
dec
sub
pop
sbb
test
out
cmp
pop
push
pop
mov
pop
test
outsb
aad
ss
test
aas
pushf
test
jo
enter
sbb
xor
mov
ret
push
lretw
clc
push
sbb
fiaddl
mov
adc
leave
xchg
jecxz
lahf
xor
xchg
cmpsl
push
test
jmp
andb
add
ss
loope
ja
repnz
cmp
jp
adc
mov
into
hlt
sub
out
adc
sub
stos
pop
iret
jmp
push
inc
dec
adcl
int
mov
xchg
or
sahf
cld
and
mov
xchg
push
icebp
outsb
mov
shlb
leave
sar
mov
addr16
jb
loope
jg
sub
adc
xchg
jp
lds
mov
lock
cmpsb
mov
push
adc
lcall
push
push
dec
mov
fs
pop
dec
fistpll
insb
adc
add
and
popa
mov
dec
or
les
mov
push
cmp
ds
xchg
dec
nop
loop
xchg
mov
ja
cmpsb
push
push
es
pop
or
dec
push
adc
sahf
push
out
sarb
mov
mov
int3
sti
loopne
sbb
mov
movsb
mov
insl
pop
add
adc
in
and
jnp
or
cmp
dec
cmp
pop
icebp
push
cld
dec
iret
dec
addl
mov
or
movsb
jl
aad
ficoms
jnp
ret
mov
xor
sbb
aaa
push
add
adc
sub
xchg
xorl
mov
incl
xchg
mov
inc
and
ja
mov
mov
xchg
shlb
xor
aas
cmp
dec
rolb
cmpsb
sbb
inc
out
xchg
rolb
cmp
sub
cmp
std
sahf
sbb
cld
pop
out
pop
je
push
cli
adc
fwait
ds
mov
mov
sti
shlb
fstps
aas
ficompl
shrl
test
pop
mov
mov
mov
inc
bound
fiaddl
inc
mov
cmp
adc
mov
xchg
daa
test
mov
js
pop
push
rorl
mov
pushf
push
pop
int3
inc
jbe
add
push
jbe
stc
dec
arpl
xor
dec
lods
int
shrb
pop
ljmp
lret
scas
push
dec
rclb
test
cwtl
dec
dec
push
jl
mov
and
pushf
add
out
mov
cli
test
je
fucom
lret
jg
xchg
scas
iret
add
loopne
ss
inc
inc
pusha
pusha
adc
ficoms
add
out
xor
test
xchg
push
arpl
repnz
mov
mov
aam
mov
femms
outsl
popa
stc
xor
ror
jmp
and
and
sub
repnz
mov
cwtl
cmp
add
dec
jp
arpl
or
shl
ja
inc
int3
push
scas
jno
ret
lock
ret
jo
cmp
mov
pop
jmp
test
lds
sub
test
jnp
mov
lods
or
in
jnp
mov
xor
push
push
sbb
jns
cwtl
xor
out
jecxz
arpl
mov
or
inc
inc
jmp
mov
aaa
mov
xor
xor
mov
dec
and
fcmovne
xchg
in
mov
xchg
or
fld
loopne
lcall
stc
daa
cli
shrl
movsl
ljmp
cld
fisubl
cwtl
sbb
dec
mov
cld
jg
lods
sub
jns
jb
cmp
dec
dec
cwtl
add
adc
mov
push
xor
lea
inc
and
nop
mov
movsl
xchg
mov
js
inc
pop
test
mov
ja
cld
ljmp
cmp
movsb
sub
movsb
mov
mov
mov
in
ja
mov
mov
inc
mov
jbe
icebp
dec
mov
fcmovu
cmpsb
clc
mov
movl
adcl
repz
mov
cmpsb
pop
cmp
jnp
jnp
push
out
jle
outsl
or
xchg
sbb
xchg
adc
arpl
cmpsb
push
hlt
movsl
lods
int3
int3
imulb
stc
aaa
clc
mov
rcl
xchg
jae
jmp
cltd
adc
or
sti
rcrb
popa
mov
sarl
sbb
daa
out
adc
fmul
inc
cmp
xchg
mov
iret
jecxz
adc
cmpsl
xor
sub
inc
mov
push
sti
add
xchg
mov
imul
sub
xlat
out
insl
loopne
xchg
ja
cmp
sti
or
sbb
xchg
mov
pop
addr16
cmpsl
js
outsb
fnsetpm(287
pop
inc
popf
inc
adc
push
pop
sub
push
sub
push
cmp
jg
dec
adcb
and
sub
pop
adc
movsb
pop
mov
or
inc
mov
push
fsubl
mov
xorl
and
mov
jnp
add
jb
int3
cmp
push
test
jge
adc
outsb
mov
or
xchg
adc
or
sahf
test
shrb
xor
pusha
cmpsl
xor
fstl
pop
out
adc
adc
xchg
lock
int3
fisttps
jno
mov
pushf
fdiv
cmpsl
dec
jmp
fcmovne
shll
aad
jle
dec
push
xor
aaa
cmp
jge
in
sti
and
push
cmpsb
or
test
sbb
sbb
lods
cmpsl
add
cld
push
icebp
outsl
jae
mov
dec
sub
inc
dec
cwtl
xor
mov
sbb
xchg
inc
cmp
jo
jmp
data16
mov
jp
add
in
push
fdivs
int
daa
movsl
and
inc
sti
or
pushf
shlb
in
pop
lods
in
jl
lds
fdivrs
sub
jae
loopne
lret
stos
out
ss
pop
push
lcall
sahf
push
xchg
or
fnstcw
add
push
das
mov
pushf
es
pop
xchg
mov
imul
in
push
and
subb
lods
mov
jl
jl
or
mov
add
mov
aam
repnz
call
jbe
not
mov
sub
mov
and
push
das
ret
test
dec
or
cmpsl
pmaxsw
push
xchg
rcll
adcb
push
lods
mov
aas
adc
fidivrs
mov
ds
pop
icebp
push
pop
xor
mov
les
dec
pop
push
ds
xor
and
lret
mov
mov
fsubrs
je
lods
int
xor
xlat
jo
adc
inc
lock
fs
pop
inc
cmp
inc
arpl
fisttpl
pop
pop
in
test
jle
cmp
int
inc
add
cmp
lds
stos
and
sbb
jg
rol
adc
orb
sub
subl
adc
das
adc
das
cmp
xor
mov
pushf
stc
cmp
xorl
sahf
and
pop
or
loop
scas
mov
hlt
and
push
pop
fisttpl
cs
stos
or
jne
fisubrl
cmp
jg
jae
adcl
enter
out
sub
shll
iret
stc
in
out
mov
dec
push
test
mov
or
mov
aam
mov
fsub
ss
rorb
lret
mov
mov
or
aam
ljmp
les
jg
pop
mov
mov
mov
lock
and
mov
adc
mov
popa
sub
pop
cmpsb
int3
xchg
or
mov
inc
movsl
push
sti
mov
push
cmp
inc
xchg
loope
das
fnstsw
and
or
pop
or
mov
setl
int
sbb
inc
dec
inc
dec
and
xor
ds
sbb
push
addr16
push
sbb
mov
add
mov
mov
pop
movsl
repnz
rorb
rcl
ret
xor
and
jbe
cld
icebp
aas
mov
xchg
and
jo
call
gs
and
push
push
ret
lock
inc
mov
cli
lea
jp
push
inc
mov
mov
das
push
mov
sub
mov
add
addr16
push
movq
jge
jns
jmp
and
mov
pop
roll
sbb
push
mov
pop
mov
jne
sub
int
or
data16
lods
ja
repnz
push
iret
sbb
in
push
ret
xor
lds
scas
add
inc
mov
lock
ljmp
popa
ficompl
xor
mov
cld
jnp
adc
int
dec
xchg
outsl
outsb
xchg
add
pushaw
pusha
pop
sub
clc
push
aaa
and
rcr
stos
push
push
and
fcmovnbe
pop
jmp
mov
mov
add
gs
pop
outsb
ror
inc
lods
dec
js
xor
mov
stos
mov
fdivrs
inc
or
fcmovb
sbb
mov
pop
loope
dec
push
pop
or
andb
pusha
dec
or
imul
sbb
push
repz
jnp
inc
push
sti
in
sub
mov
loop
data16
and
jb
lcall
mov
pop
xlat
mov
xchg
addr16
jb
xchg
adc
mov
jle
fildll
cmp
mov
add
mov
adc
mov
daa
cli
jb
adc
shlb
mov
imul
dec
sub
movsb
aas
sub
arpl
fsubrs
ja
repnz
add
inc
js
mov
fcom
es
loop
cmpsb
pop
push
cmp
jo
pop
sbb
push
iret
adc
add
ljmp
andl
sbb
std
test
or
imul
dec
adc
mov
loop
jno
int
push
fidivrl
pop
xlat
fcoml
jmp
xchg
push
sbb
sti
jle
mov
fisttpl
xor
xchg
add
out
sub
test
jns
jle
jne
push
dec
inc
imul
call
test
arpl
jne
inc
push
lods
scas
lock
dec
leave
pavgb
push
and
mov
dec
ljmp
cmpsb
ret
mov
fmuls
inc
cmp
jge
inc
testl
scas
adc
jns
mov
xor
cmp
gs
and
outsl
js
inc
sub
push
loope
mov
xor
mov
jno
sub
sbb
mov
jb
pusha
and
and
addl
add
fstpl
outsb
xor
adc
and
nop
scas
mov
push
adc
mov
xchg
sbb
mov
xchg
add
mov
inc
jb
dec
insl
popa
bound
jo
xor
xor
lcall
adc
fisubrs
aaa
adc
outsl
push
push
aaa
push
sbb
mov
mov
sbbl
test
adc
cmpsb
cmc
sarl
push
push
hlt
push
scas
adc
adc
repnz
mov
ret
xchg
add
movsl
cmp
dec
test
or
inc
xor
sti
push
xor
cmp
jbe
dec
cwtl
in
cmp
int
mov
cmp
ja
mov
mov
out
mov
dec
mov
add
xor
pop
mov
adc
mov
stc
mov
fnsave
mov
cmp
add
jmp
add
sti
out
jp
mov
jo
aam
mov
ljmpw
out
xor
jnp
sub
arpl
cmpsl
inc
xchg
pop
fbstp
shll
xchg
or
pop
sbb
sub
mov
ret
cmp
and
xor
outsl
and
push
jle
and
xlat
cmpl
cmp
jmp
or
mov
inc
in
mov
stos
sbb
push
inc
mov
repnz
push
mov
cmp
pop
inc
bound
or
scas
ljmp
je
test
jno
mov
push
mov
test
movsb
sub
roll
sub
and
fcmovnu
push
push
mov
sub
pusha
in
loopne
add
inc
cs
ss
push
push
loop
sbb
fcomip
push
popa
mov
cld
test
inc
sbb
xor
loopne
sub
cmp
mov
enter
data16
xor
dec
jns
jne
xchg
inc
mov
jecxz
mov
in
jb
lret
jae
sahf
in
pop
fidivs
out
adc
push
sub
sbb
and
jnp
push
or
xorl
stos
rcrl
cmp
leave
or
in
cmp
cmpsl
mov
pusha
mov
mov
adc
push
cmpsl
fstl
and
cmp
push
gs
and
aad
lret
jo
push
sti
icebp
jge
aas
lcall
pop
push
add
jp
loop
add
dec
lods
ror
add
xor
lret
andb
inc
pop
cmp
mov
sub
dec
cmpsb
das
out
and
int
pusha
jle
jo
jb
mov
pop
sti
mov
lret
sbb
pop
mov
mov
mov
mov
mov
cs
fstpt
mov
mov
xchg
je
xor
push
shl
xchg
das
jmp
inc
les
inc
das
pop
stos
cld
xchg
or
and
ret
mulb
dec
pop
bts
sbb
dec
or
test
repz
sub
sub
in
mov
or
xor
mov
repz
add
outsb
shlb
jmp
mul
aad
repz
sbb
push
jbe
les
sbb
or
inc
jmp
or
mov
push
lock
and
pusha
mul
outsl
adc
ljmp
push
pop
outsl
les
mov
lahf
stos
int
loop
aam
aad
push
int
jge
cmpsl
je
leave
aam
xchg
mov
pop
or
jg
sub
std
sbb
into
scas
mov
and
mov
jp
popl
call
sub
mov
push
dec
and
shl
push
add
dec
inc
outsb
xchg
les
jae
jno
sub
sub
mov
nop
fisubl
das
int
mov
je
stc
aaa
loope
sbb
stos
jbe
jecxz
adc
fcmovnb
cmp
je
sub
xchg
sbb
outsb
rorb
fidivs
loope
mov
pop
testl
dec
pop
scas
add
mov
insl
notl
out
dec
leave
int
push
sarb
jecxz
pop
test
lds
aam
pop
mov
in
imul
mov
stos
mov
fmul
push
xchg
cmp
leave
xchg
xchg
lods
mov
leave
push
out
and
cmp
sbb
inc
pop
mov
call
or
addb
ret
call
imul
add
shrb
mov
ljmp
cltd
and
push
leave
scas
adc
dec
mov
jne
loop
fmuls
add
and
daa
and
cld
in
out
aam
fcompl
and
mov
xor
insb
addl
xlat
dec
add
pop
lret
add
or
jns
push
mov
jmp
xchg
loopne
mov
loopne
test
aaa
pop
cmp
hlt
testb
enter
jle
xchg
pop
mov
sbbl
popa
xor
dec
outsl
xchg
rclb
xor
add
ficompl
fcomps
cli
cmovb
cmpl
dec
or
rcll
jmp
rorb
out
loopne
out
jns
inc
fnsave
js
mov
insl
cmp
ja
pop
mov
sub
jb
jmp
inc
cld
incb
cmp
pop
aas
add
pop
xor
push
pop
paddd
mov
mov
int3
xchg
stos
push
shrb
push
mov
push
adc
add
insl
jnp
cwtl
fsubl
out
pop
bound
imul
fidivl
lods
outsl
mov
outsb
push
mov
enter
les
inc
pop
and
mov
popa
push
sub
and
pop
cs
jle
mov
and
aad
push
into
add
hlt
push
in
adc
je
pop
sub
ljmp
outsl
loopne
dec
xor
cwtl
pop
or
sub
fldenv
jg
mov
inc
cli
or
or
dec
and
aam
mov
repnz
add
mov
add
notl
mov
fdivs
shlb
dec
mov
cmc
scas
cmp
jbe
sbb
repz
ret
das
push
in
jge
fwait
inc
jno
in
int3
mov
es
mov
js
sbb
xlat
xor
fldt
das
mov
cmp
cmp
add
cmc
add
iret
push
adc
pop
jmp
fmull
jno
xchg
ds
popf
mov
push
cltd
sub
mov
shll
push
and
cltd
mov
movsl
xor
or
in
pop
rol
jnp
add
mov
js
insl
jae
mov
and
nop
stc
sahf
xchg
mov
in
xchg
add
add
mov
push
fldcw
jg
pop
fsub
jns
mov
push
mov
cltd
clc
cwtl
addl
xor
push
cmp
scas
das
or
mov
out
cmpsb
or
decl
jl
and
mov
fimull
loopne
jg
cmpl
lds
jnp
xchg
ss
fs
ss
imul
or
lds
hlt
pushf
aaa
ret
mov
test
cltd
and
push
cmp
inc
push
faddl
dec
pop
fldcw
fcomps
mov
lret
xchg
jnp
or
fdivrs
and
jns
subl
mov
jp
lret
pop
inc
movsl
xor
popf
jge
je
arpl
and
fmuls
pextrw
or
jmp
divb
insl
dec
mov
cmp
or
ds
push
sub
lret
and
dec
push
jl
jle
push
adc
mov
push
inc
push
lock
lahf
mov
pop
outsl
jo
dec
push
jle
jecxz
fs
xchg
push
test
mov
aam
mov
rcrl
jmp
imul
imul
xor
jmp
ficomps
push
mov
stos
loopne
jmp
lahf
sbb
sub
flds
xlat
int3
xchg
ficomps
jge
adc
inc
pushf
pop
lret
mov
pushw
inc
cmc
sub
mov
scas
sti
cltd
nop
aaa
test
pop
or
clc
lret
movsb
shlb
sub
jbe
pop
adc
pop
stos
push
jmp
test
adc
aam
xchg
lret
push
clc
push
call
rolb
push
pop
cmp
jne
ficoml
mov
movsl
adc
jo
out
pop
add
fdivrp
fidivrs
cltd
jae
adc
aad
pop
adcb
fstp
addr16
mov
dec
jae
inc
filds
iret
pushf
sbb
dec
lret
sbb
idivl
addl
jnp
jmp
xchg
inc
sub
jno
push
lds
jnp
ljmp
cltd
mov
xchg
xor
mov
repnz
sub
add
scas
push
or
inc
dec
dec
push
movsb
std
enter
add
mov
pop
fildll
and
cmp
mov
icebp
adc
push
mov
rorb
mov
sbb
pop
and
loope
leave
inc
mov
xchg
sub
xchg
sub
push
sbb
push
xor
cmp
push
scas
mov
pop
add
jge
push
out
push
inc
dec
cmpsb
addr16
call
outsl
out
loopne
aaa
push
daa
enter
mov
push
jbe
mov
or
inc
test
xor
cld
test
bound
push
addl
std
xchg
xchg
pxor
sub
sbb
fbstp
nop
jl
mov
cs
sbb
xor
int
or
mov
out
cmp
dec
stos
jg
lahf
mov
inc
and
movsb
jecxz
mov
and
das
cwtl
and
adc
push
addr16
cmpl
or
popf
xchg
cmpsl
push
dec
xor
dec
mov
xlat
std
push
jnp
push
push
movsb
cs
ljmp
mov
ja
jbe
imul
mov
aad
push
push
push
jg
mov
jecxz
xor
mov
testl
icebp
popf
mov
ror
sahf
or
dec
cmp
add
fiadds
jp
mov
mov
test
pop
push
mov
in
xchg
popf
lea
push
sub
pop
sti
xchg
addb
fs
pop
push
sbb
push
out
adc
shlb
ret
sub
push
outsl
je
in
in
lods
jno
idivl
sarl
je
lret
pop
in
mov
idiv
mov
movsb
adc
outsb
das
jmp
and
fwait
dec
nop
cmp
jmp
jno
inc
mov
sub
test
xor
dec
test
out
ret
inc
and
mov
cmp
lock
cmp
aad
fadd
sbb
mov
pop
ds
inc
mov
jb
daa
arpl
mov
aad
or
es
pop
xchg
add
adc
sub
add
and
or
inc
adc
mov
sbb
stc
jne
int3
dec
ja
in
xchg
mov
and
mov
pop
jg
stc
add
das
cltd
fcmovne
inc
mov
scas
push
rclb
scas
call
js
inc
arpl
push
and
test
pop
loopne
inc
cmp
imul
or
sbb
push
add
mov
cwtl
add
sbb
sahf
in
test
xchg
enter
dec
xchg
adc
mov
cmp
sar
push
iret
dec
pop
test
dec
xor
jl
cmp
aas
or
hlt
jmp
jle
mov
dec
jnp
or
push
hlt
xchg
scas
jg
cmp
movsl
test
outsb
adc
push
scas
movaps
clc
xchg
les
outsb
mov
or
aad
out
push
jp
sahf
mov
int
add
scas
pop
sar
sub
xlat
jb
jbe
push
or
jle
jecxz
std
in
pop
dec
lock
movsl
pop
sub
les
pop
mov
sarb
addr16
ffreep
test
cmpsl
data16
and
addl
pop
icebp
jle
jmp
add
jmp
xor
sbb
lahf
mov
addr16
js
and
cmc
mov
push
pop
push
test
sbb
xor
fs
cwtl
adc
add
aas
test
fldcw
repz
bound
push
xlat
jg
aaa
out
push
movsl
ror
inc
adc
ss
mov
pusha
imulb
sub
cmp
hlt
cli
cmc
dec
cmpsl
insb
jl
test
adc
and
and
sub
test
xor
lea
dec
sub
jnp
pop
push
push
sbb
pop
in
xchg
adc
aad
bound
xor
and
cmp
jns
dec
mov
ret
je
cmp
dec
iret
dec
pop
out
inc
aas
ret
into
sub
push
fistps
inc
sub
js
sbb
adc
insl
and
add
pop
inc
pop
ret
cs
aam
mov
std
clc
sbb
mov
clc
int3
inc
inc
mov
push
add
out
jno
pop
lock
sub
adc
cld
push
scas
xorb
subb
add
mov
dec
or
cmp
mov
cltd
sbb
sti
mov
xchg
xchg
inc
xchg
int
jp
cmpsb
pop
adcb
mov
sbb
daa
cmp
fisubs
leave
mov
pop
jl
insb
data16
into
call
mov
andl
cmpsl
iret
sub
cmp
mov
les
sti
adc
adc
pusha
lea
xor
mov
shlb
mov
cs
scas
iret
xor
cmpsl
mov
mov
loope
push
sub
test
arpl
mov
xchg
add
sbb
cld
mov
xor
pop
inc
adc
mov
stc
sub
jg
mov
jle
push
sti
iret
in
xchg
call
sahf
pop
outsl
cmpsl
and
pop
mov
mov
push
cmpsl
mov
jmp
sub
ljmp
sbbb
adc
cmp
jns
push
js
ds
jns
negb
cltd
outsb
in
mov
out
scas
into
cmp
scas
and
loope
inc
xchg
je
adcl
pusha
insl
hlt
push
xchg
pushl
add
mov
jl
cli
insl
pop
xchg
mov
call
iret
bnd
adc
movd
int
fsubl
xor
nop
push
das
in
mov
mov
xchg
mov
adc
sbb
subl
scas
inc
mov
xchg
push
pop
lret
fimull
jmp
xlat
xchg
int3
jp
push
mov
fimuls
pop
bound
sub
das
lahf
dec
or
xor
jno
repz
in
incb
fcmovnb
add
jo
shlb
push
mov
mov
push
jno
rcrl
sub
xchg
and
out
fcoms
push
ror
mov
xchg
adc
test
test
cmp
cwtl
jo
xor
test
mov
xchg
and
sub
sarb
in
jae
out
repnz
sbb
dec
jno
jno
enter
int
mov
adc
icebp
and
fists
pop
js
adc
repnz
cmp
dec
mov
jo
mov
in
sbb
and
lods
in
stos
stos
jne
mov
add
test
ficoms
hlt
push
inc
ljmp
loope
int3
es
sub
add
ror
sbb
rclb
jmp
lea
imul
gs
lock
les
aad
xchg
mov
imul
jo
jmp
decl
xor
add
and
int3
ss
lds
mov
add
add
and
sbb
addr16
xchg
dec
outsl
mov
push
pop
insl
mov
insb
or
ja
mov
and
xchg
test
mull
add
popf
aas
xorl
insl
jg
test
xor
mov
mov
das
add
cmp
mov
je
adc
inc
imul
inc
leave
mov
fistpl
clc
pop
jae
shrb
sbb
push
ds
int
mov
inc
inc
mov
stos
mov
pop
stc
fdivl
repnz
adc
test
icebp
outsl
shrl
dec
jmp
lock
pop
push
inc
or
in
add
fisttpl
mov
pop
inc
xchg
push
mov
xor
mov
dec
lahf
mov
sbb
pushf
fisttpll
mov
repnz
leave
in
pop
loope
push
and
sub
inc
movsl
mov
sub
mov
mov
and
mov
xchg
add
mov
jle
arpl
aaa
scas
stc
pop
cmpsb
mov
xchg
or
js
ficomps
repnz
xchg
es
loop
xor
mov
movsb
push
ficoms
lahf
mov
repnz
andb
jle
pop
rorl
add
into
icebp
mov
dec
mov
and
cmp
or
in
jecxz
out
insb
sahf
dec
pop
fwait
call
xchg
ljmp
fisubs
xor
pop
lea
push
sahf
fdiv
das
lock
sub
nop
mov
testl
inc
stos
outsl
inc
call
sbb
push
insl
pop
mov
paddusb
mov
mov
pop
icebp
dec
mov
add
bound
adc
xchg
popl
push
jl
push
mov
add
or
out
mov
mov
jb
sbb
dec
mov
out
sarb
add
inc
mov
arpl
jmp
mov
mov
lds
or
or
add
push
push
scas
xlat
or
push
in
mov
jbe
push
add
mov
imulb
insl
mov
add
subb
imul
mov
and
push
and
mov
adc
jne
fwait
add
or
jb
lock
xor
add
adc
pushf
aaa
jno
shl
inc
jnp
mov
inc
xor
mov
iret
mov
pushf
push
add
dec
mov
and
js
rclb
lret
lcall
loope
add
fbld
mov
imul
rolb
mov
inc
cltd
cmp
into
lret
mov
lock
lea
xchg
test
dec
sbb
hlt
lea
cmp
test
popf
gs
jle
divl
mov
xor
jnp
jmp
pop
mov
push
push
pop
cmpsl
js
cld
cltd
mov
pushf
movsl
imul
negb
std
xchg
mov
adc
pop
xchg
xor
pop
stc
mov
lods
outsb
insw
popf
sti
mov
sbb
xlat
cltd
push
shr
inc
sbb
cmpsb
push
in
adc
outsb
into
outsb
mov
aas
std
add
add
pop
mov
mov
add
jno
mov
or
test
jmp
in
lods
adc
sbb
fnsave
nop
mov
or
push
popf
in
stc
add
rcrl
adc
adcb
mov
xchg
xchg
xchg
out
xchg
jo
add
std
cpuid
shlb
jmp
repz
push
xor
or
jbe
jno
cmp
sub
sub
bound
dec
inc
xchg
out
call
inc
loope
testb
or
mov
out
int3
mov
mov
mov
std
icebp
add
mov
or
mov
push
mov
out
stos
lods
clc
mov
loop
aad
push
xor
sbb
ss
in
jl
scas
add
sbb
mov
adc
cmp
cmp
les
and
push
mov
push
sbb
pop
jbe
xchg
pop
out
jb
xorl
stos
xchg
dec
cmp
or
popa
push
in
imulb
sbb
add
jnp
bound
popf
dec
pushl
xchg
lret
loopne
aam
enter
mov
sti
adc
test
xchg
xor
rcll
call
and
lods
loop
nop
sub
pop
shll
xchg
or
leave
stos
imul
popa
and
mov
scas
xor
loope
xor
and
xchg
rcrb
pop
add
mov
ret
aaa
sbb
fcmovnb
push
lods
adc
sub
out
xchg
adc
xor
add
push
movsl
dec
cwtl
mull
push
or
adc
mov
pop
cmp
les
sbb
sbb
pop
jno
and
test
sub
inc
mov
fdivr
je
cmp
out
mov
inc
aas
test
test
cwtl
pop
jns
xor
inc
imul
push
mov
nop
xor
mov
pop
inc
call
int
pop
lret
iret
stc
push
int3
dec
out
and
jmp
mov
and
dec
jmp
cmc
or
imul
sbb
push
mov
ss
cmc
sub
mov
lods
lcall
jecxz
test
movsl
into
aaa
mov
mov
lds
arpl
cmpsl
pop
add
xchg
repz
xor
push
mov
subl
push
callw
sub
iret
mov
test
cmp
aad
sbb
cmpsb
jl
mov
xchg
cmp
dec
cmp
xor
stc
shll
and
arpl
or
in
push
ljmp
mov
dec
lret
dec
in
lret
sarl
jecxz
push
xor
rorl
lahf
scas
nop
outsw
clc
das
push
call
adc
dec
testb
mov
inc
xchg
xorl
inc
xor
lahf
push
mov
jne
stos
fidivrs
in
mov
inc
mov
xchg
sti
cli
adc
jge
insl
mov
xchg
xchg
push
imul
mov
arpl
sbb
jne
push
sti
dec
sub
inc
jle
imul
push
xor
inc
or
iret
imul
dec
mov
repz
cmc
jecxz
push
cli
andb
push
aas
mov
addr16
mov
mov
pop
test
or
sarl
ds
push
cld
fstpl
cmpl
aam
stos
sbb
out
xor
inc
or
push
cs
mov
in
stc
xorl
add
cmp
push
lods
sbb
pop
cs
sbb
mov
sbb
adc
aad
push
sub
ret
pop
cmp
mov
jmp
xchg
je
cltd
push
adc
dec
out
push
mov
dec
outsl
jno,pn
push
lret
je
xchg
cmpsb
dec
bound
dec
jne
cli
sbb
shl
xor
jno
mov
hlt
aad
sbb
insb
adc
addr16
cltd
orl
cltd
sub
xor
dec
or
adc
xchg
fsubrs
icebp
cmpsl
xchg
cmpsb
movsb
lea
xchg
int3
jg
stos
ror
jecxz
nop
add
repz
mov
jb
les
insb
sbb
push
adcb
and
stos
cmp
aam
inc
in
rcll
add
test
jae
in
outsb
dec
in
daa
mov
je
add
ja
insb
std
adc
dec
jmp
lcall
mov
mov
loop
xchg
cmpl
sbb
lock
and
and
inc
xor
test
or
fisubl
lods
mov
fidivrs
rcll
ja
push
stos
call
and
daa
jmp
add
std
fwait
sbb
push
jle
cmpsb
shlb
dec
inc
mov
inc
out
aas
xor
adc
add
jecxz
or
jge
cmp
daa
jmp
jmp
adc
mov
xor
int
jmp
xchg
decb
jp
sbb
cmpl
cltd
cmpsb
push
jae
fs
outsb
jae
loopne
rcl
ret
jns
mov
iret
lret
arpl
daa
pop
in
mov
and
fmuls
inc
mov
mov
repz
dec
movsl
inc
scas
pop
mov
sub
dec
repz
adc
mov
add
mov
aaa
aas
add
jmp
bound
pop
inc
xchg
mov
lods
lds
push
gs
das
cmp
std
mov
roll
push
mov
push
sub
dec
pop
das
mov
mov
sbb
jns
mov
or
lcall
xor
repz
repz
sbb
jne
imul
sub
les
cmp
push
addr16
jbe
sbb
dec
enter
iret
adc
sub
movsb
push
pop
divl
data16
pusha
dec
push
pop
fadd
push
test
pusha
push
test
and
aam
cltd
popa
push
sti
mov
stos
adc
or
jge
jl
out
mov
aas
test
popa
pop
xchg
hlt
int
sbb
inc
mov
cmp
int3
mov
jle
push
sub
dec
sbb
enter
clc
push
lock
insl
aam
loop
testl
jbe
xchg
pop
cmc
jnp
adc
out
add
out
gs
pop
inc
nop
cmpsb
and
dec
pop
inc
or
lods
bnd
ret
and
or
add
add
xor
mov
test
arpl
in
sarl
xchg
cmc
push
xchg
in
mov
sub
mov
pop
dec
cmp
inc
enter
adc
je
lcall
ds
xchg
jne
cltd
jmp
inc
testb
and
imul
in
loopne
cmp
jp
lret
stos
mov
leave
sbb
jge
ret
pop
dec
sarl
sti
cmc
jo
pop
pop
mov
cs
stos
fdivp
push
fiaddl
push
push
jp
aam
push
and
pop
mov
dec
mov
lea
xchg
movsl
jno
sub
jge
andl
sarl
push
push
pop
mov
enter
sbb
fld
cmp
xor
lahf
fwait
pusha
jbe
push
repnz
push
iret
add
cmp
mov
push
mov
pop
sbb
jecxz
push
add
mov
aad
xor
and
dec
test
dec
and
out
adc
jl
mov
sub
into
out
loopne
sub
scas
cmp
cmc
lods
jno
in
nop
pop
shrl
mov
addb
outsl
mov
xor
sub
popf
aam
fidivl
sti
add
mov
or
mov
scas
cmp
xchg
cmpsb
pop
jecxz
jns
filds
js
out
ss
mov
inc
imul
inc
outsl
and
in
jg
in
mov
xchg
cmp
xchg
and
enter
cmc
cmp
popa
jmp
xchg
stc
test
adc
gs
test
insb
pop
inc
xchg
xchg
dec
outsl
nop
lret
push
dec
arpl
adc
push
push
and
in
leave
add
div
mov
adc
sub
subb
stos
scas
pushf
fadd
iret
push
push
loop
rorb
scas
hlt
shll
adc
mov
inc
loopne
std
push
ficoml
cli
and
fwait
out
dec
dec
mov
push
jge
pop
mov
push
bound
mov
push
xlat
bnd
mov
cmpsl
or
pushf
cmc
aad
sbb
inc
xchg
push
jmp
and
lahf
ss
dec
int
inc
rorb
dec
andl
push
repz
cmp
in
sbb
lcall
fidivrs
bound
out
mov
cltd
aas
sti
data16
out
inc
adc
jb
lock
sbb
pop
sbb
push
out
shll
aaa
jno
jns
dec
sub
dec
pushf
dec
fmuls
push
push
ret
insb
int3
mov
movsl
sbb
cmp
sub
sbb
mov
xor
and
movsl
and
cmp
shlb
cmp
test
enter
fidivrl
orl
mov
out
aad
dec
adc
inc
jmp
and
mov
popf
je
outsb
add
ljmp
jno
xorb
push
cmc
shrl
pop
mov
cli
insb
mov
push
cmp
sti
cmp
dec
inc
out
daa
ljmp
xchg
inc
out
iret
cmpsl
hlt
jmp
mov
xchg
fists
enter
add
lds
cmpl
sub
movsl
movsl
mov
push
xchg
inc
xor
daa
jo
jne
mov
xor
xchg
xor
dec
cltd
bnd
xor
loop
arpl
or
inc
sbb
subb
add
and
lods
xor
repnz
into
jmp
lret
lock
dec
pushf
lret
add
insb
inc
lea
or
inc
aam
mov
popa
push
loope
bound
icebp
xlat
or
repnz
mov
and
and
adc
adc
out
scas
sbb
add
shlb
sub
lock
pop
jne
hlt
cmpsb
xchg
xchg
and
int3
mov
inc
pop
push
clc
xchg
inc
mov
mov
mov
xor
add
mov
sti
repnz
pushf
test
sub
push
push
notl
cmp
leave
cmp
adc
fistpll
shll
or
push
xlat
fs
repz
cmc
fistl
and
cmp
dec
xorb
dec
popf
pop
inc
mov
sub
es
push
sbbb
xlat
mov
adc
mov
jo
movsl
xor
ss
and
inc
mov
stos
fwait
daa
push
sub
fiaddl
jb
sbb
push
mov
xchg
xchg
mov
rcll
pop
mov
sbb
mov
jb
inc
adc
push
inc
popa
xor
adc
sub
stc
push
mov
inc
or
push
fbld
xor
dec
dec
jmp
sbb
mov
pusha
mull
jp
or
pop
flds
aas
shrb
stos
jae
movsl
mov
fimuls
fidivrl
ret
mov
push
in
pop
adc
ljmp
or
in
xchg
std
in
pusha
outsl
in
mov
aam
es
mov
pop
scas
push
icebp
inc
xchg
orl
dec
push
add
pop
lods
push
insb
push
lods
xchg
inc
or
in
push
inc
pop
popa
lret
push
mov
dec
or
cmpsb
movl
jnp
ret
cmp
test
aaa
leave
je
adc
jecxz
push
jmp
aad
sub
mul
sti
mov
xchg
pusha
cmp
mov
mov
sbb
jno
sbb
inc
clc
dec
jle
sbb
or
mov
in
pop
or
iret
add
lahf
xor
lea
cmpsb
xchg
mov
lcall
icebp
mov
cs
sbb
repz
push
jns
pop
cltd
adc
sub
sub
sbbb
xor
fwait
pop
or
push
jmp
jmp
popa
pop
jbe
cmp
xchg
sbb
jnp
stc
add
rclb
pop
imull
shrl
out
in
xorb
std
xor
aaa
jg
lret
push
jne
push
cli
add
stos
lret
daa
sarl
test
sti
inc
arpl
adc
gs
shl
sbb
xchg
incl
push
jno
xchg
out
fistpl
mov
ror
push
addr16
lret
mov
jg
stos
aad
cmp
imul
jns
popa
pop
add
aam
fistl
out
lock
stos
add
es
jnp
mov
bound
add
mov
pop
mov
push
popf
add
pushf
mov
mov
lcall
icebp
insb
inc
push
jge
add
fldt
xor
loopne
call
cmp
xchg
or
mov
inc
xchg
mov
out
arpl
pop
fnstcw
cmp
hlt
add
gs
xchg
lods
dec
mov
or
xchg
and
pushf
sub
fcos
jl
cs
jae
stos
push
sub
pop
mov
filds
test
std
xchg
cmp
dec
mov
mov
fimuls
xor
xor
cmp
sahf
sbb
js
dec
ret
jbe
cli
shll
lods
bound
add
and
insl
inc
and
mov
movsb
ret
mov
repnz
fstps
stc
add
sbb
xor
mov
mov
clts
ret
jne
dec
and
imul
jg
jge
cmp
rclb
push
cli
idiv
aam
push
mov
inc
or
stos
add
xor
hlt
push
mov
cmp
nop
inc
pop
clc
loop
push
test
push
mov
add
iret
dec
mov
sub
gs
mov
pop
inc
pop
mov
jl
add
iret
push
dec
mov
pop
cmpsb
fcoms
test
outsl
adc
inc
mov
lock
xchg
push
sbb
push
lahf
mov
inc
add
push
sub
rcll
mov
push
jno
sar
mov
mov
inc
push
sub
jmp
pop
jecxz
aad
pop
inc
pop
repz
sub
jmp
xor
add
daa
bswap
add
ja
inc
inc
addb
cmp
in
add
push
into
adcl
cmc
sahf
in
insb
xchg
js
sub
lahf
dec
mov
mov
into
pop
mov
ljmp
sub
sbb
sbb
inc
adc
push
outsl
ds
out
fiadds
inc
push
add
fiaddl
ljmp
stc
mov
dec
lahf
scas
pop
sbb
add
cmp
push
scas
filds
xchg
jge
cmpsl
into
addr16
xor
into
mov
inc
sbb
adc
pop
jo
cltd
add
mov
mov
pushf
mov
push
popf
push
xor
xchg
mov
jl
inc
lret
popa
or
call
xchg
fsubrs
inc
xchg
pop
jecxz
mov
adc
xchg
lds
xchg
fwait
or
int3
leave
mov
lret
orb
mov
or
xchg
push
cmpsb
int3
push
daa
and
cmp
fisubs
nop
or
sub
aam
nop
add
sub
cmpsl
dec
pop
push
into
cld
pop
add
pop
jl
push
jp,pt
inc
sbb
movsb
xor
orb
cwtl
cld
cmc
cwtl
ds
mov
test
hlt
add
subl
cmp
imul
adc
lret
push
cmp
sub
je
imull
in
inc
or
enter
xor
cmp
and
mov
pop
decl
xor
mov
in
into
mov
loop
jge
lret
pop
mov
inc
adc
js
or
inc
lret
inc
inc
mov
cmp
pop
fisttpl
xor
pop
lods
xor
pop
cmp
xchg
cmp
addr16
gs
jns
push
mov
push
pop
cwtl
aad
dec
sub
scas
cmp
out
icebp
sub
shlb
cmpsb
imul
pop
or
loope
movsb
xchg
jle
jle
xchg
int3
cmp
and
xchg
stc
lods
pusha
icebp
jbe
push
pop
or
js
cmp
sbb
add
add
idiv
ret
lods
dec
jno
pop
mov
add
out
inc
push
xor
shll
imul
mov
cmp
cli
cmp
loop
inc
rcl
shll
mov
pop
popa
cmp
adc
cltd
std
add
sbb
sahf
aaa
and
add
mov
sub
jnp
in
aam
xchg
sub
cld
ds
outsb
cwtl
xor
fst
loop
mov
outsb
mov
jno
dec
mov
push
mov
rorb
out
mov
push
mov
in
and
lahf
adc
in
daa
popf
aam
scas
roll
cld
aad
in
aas
sti
sbb
test
mov
sub
push
pop
test
cmp
ror
jl
sbb
loop
mov
cmp
insb
aam
pop
stos
mov
jae
pop
or
std
in
xchg
das
lods
or
repz
dec
ss
sahf
adc
cmpsl
cmp
cmp
or
push
mov
xchg
idiv
roll
cmp
and
lods
mov
popa
mov
add
iret
sahf
xchg
sbb
xor
jb
cli
cmpsb
ret
pop
scas
ret
flds
outsb
test
decb
add
movsb
cmc
nop
data16
mov
pop
lods
jnp
xchg
pop
mov
loopne
roll
nop
xor
add
jae
and
ljmp
fadds
mov
int
mov
mov
xor
sbb
cmp
mov
sbb
or
jmp
icebp
std
push
push
or
mov
xor
mov
loopne
sub
push
xchg
and
mov
mov
ret
xchg
loope
xchg
push
dec
sar
cmc
push
das
jno
or
leave
cmp
cmp
cmp
in
xchg
pushl
dec
in
into
pop
aam
idivl
sbb
xchg
push
pusha
aaa
pop
lret
cli
fsubs
mov
cs
and
dec
in
mov
dec
repnz
pusha
dec
cli
aaa
popa
sbb
xchg
out
fsubp
push
or
push
in
cli
shrb
xrelease
xchg
pop
pop
das
sbb
pop
mov
mov
sub
dec
mov
out
cmp
or
insb
pop
xchg
adc
or
aam
adc
mov
insb
xchg
mov
mov
repnz
fdivrp
clc
mov
mov
push
cmc
sbb
mov
jnp
pop
xchg
jg
mov
pop
inc
add
push
sbb
les
xlat
xor
ljmp
add
dec
movsl
jo
push
and
fcmovne
cmpsl
jae
push
push
adc
imul
xlat
and
mov
lahf
cltd
mov
aad
je
sub
shlb
xor
mov
cmp
add
rorb
bound
dec
pusha
in
mov
inc
cwtl
mov
loope
pop
dec
lret
jl
xor
fucompp
aam
sbb
insl
mov
mov
jns
adc
xlat
pop
dec
loope
dec
mov
inc
gs
aad
lea
push
cmp
xor
xor
imul
insb
jbe
dec
inc
add
and
xchg
sub
pop
fucomi
add
cmp
int
or
mov
dec
fimuls
ljmp
iret
mov
jg
repnz
push
in
sti
pop
push
jle
in
out
andl
aam
push
sub
mov
or
test
adc
popa
inc
out
ret
sub
xor
cmp
test
pop
xchg
inc
jle
pop
dec
outsl
inc
sub
mov
je
mov
inc
ljmp
or
popf
out
fnstsw
pop
push
in
mov
sub
pop
lret
cmp
call
xor
push
std
stc
dec
push
and
dec
mov
clc
jle
lds
es
lods
push
mov
xor
jae
sub
mov
lods
test
mov
ds
adc
or
in
test
add
lret
pop
jb
iret
das
sub
inc
jae
mov
sahf
bound
push
dec
xlat
out
cmpsb
xor
adc
imul
mov
dec
pop
addb
jmp
jle
mov
sbbb
negb
jns
out
mov
in
adc
into
int
jae
out
push
push
mov
sbb
jno
sbb
or
push
cmp
mov
int3
arpl
movsb
push
mov
cmc
xchg
das
lods
cli
sbb
popf
lea
arpl
xchg
lret
dec
stos
mov
sbb
data16
repnz
ds
xchg
xchg
cmp
xor
jno
push
push
add
mov
lret
dec
adc
push
lret
jl
push
mov
ss
mov
or
dec
inc
xor
mov
aas
mov
lahf
imul
mov
test
cltd
add
rolb
data16
sti
addl
sti
mov
or
fcmovb
cwtl
jae
cmp
cmp
in
or
loope
pop
mov
mov
stos
jmp
jp
mov
scas
jmp
pushf
adc
sub
sub
sahf
inc
fnstenv
push
aad
lods
jne
add
int
jmp
ja
movb
jge
cmp
out
sti
sbb
mov
pop
hlt
ja
jecxz
clc
inc
in
or
pop
xor
fnstenv
jmp
mov
imul
cmp
push
adc
bound
stc
test
cwtl
fistps
insb
or
dec
mov
mov
dec
mov
js
jp
push
xchg
aad
mov
fld
mov
pop
jge
or
xchg
cmp
mov
jl
sub
sti
gs
lds
xlat
pushw
mov
pop
cmpsb
dec
imul
sarl
jae
rcr
movsb
es
jne
ljmp
xlat
push
adcb
push
stos
inc
or
into
push
mov
push
aas
or
ficoml
mov
andps
aas
dec
addr16
js
outsl
out
jae
lods
jne
shlb
inc
or
or
lahf
rcrb
loopne
cmp
sub
push
mov
jbe
rol
mov
cmp
movsb
pop
in
aam
in
pop
scas
iret
xchg
pop
shlb
xchg
out
cmc
imul
mov
pop
xor
es
out
dec
aam
popa
bound
pop
jge
std
jmp
mov
sahf
sub
out
fimuls
pushf
enter
and
popa
inc
outsl
cmp
cs
pop
aas
test
mov
add
mov
mov
sub
cmp
mov
add
jecxz
mov
jns
pop
jecxz
stos
stos
fs
insl
inc
enter
pop
mov
nop
fs
pushf
push
xor
inc
pop
push
sbbl
cmp
push
sahf
test
push
mov
cmpsl
cmp
jle
data16
adc
cld
fdiv
sti
push
clc
pushf
mov
sub
cwtl
jecxz
lods
xchg
cmp
add
movsl
pop
sbb
xchg
xlat
imul
sub
mov
xor
push
sbb
sbbl
add
movsb
dec
inc
call
jl
jmp
mov
sub
adc
incb
xor
push
sahf
iret
xlat
cmp
movsl
xchg
push
xchg
jp
pushf
push
lods
mov
jno
cmp
repnz
out
pop
out
xchg
jmp
dec
push
repnz
cwtl
xor
mov
sahf
push
into
insb
jecxz
xchg
shl
push
daa
aam
les
jg
and
dec
shll
and
and
aas
xsaves
cmp
fcomp
jl
hlt
pop
cs
imul
xor
orl
movsl
push
mov
cwtl
and
call
or
xchg
jmp
xchg
aas
icebp
fs
mov
mov
shrb
add
shlw
jp
mov
cs
clc
pop
aam
cmc
xor
cmp
sub
mov
call
push
loope
add
sub
xor
aaa
out
mov
pop
push
arpl
jbe
insb
dec
or
lods
in
pushf
mov
stc
add
sub
sub
shlb
test
add
and
mov
xchg
xor
or
rorl
insb
inc
cltd
mov
lret
inc
pusha
jns
and
fmull
loopne
scas
xchg
test
xor
mov
ja
loopne
mov
mov
leave
pusha
push
adc
xchg
leave
mov
btc
xor
sahf
mov
push
clc
movsl
push
mov
imull
enter
push
or
addb
and
adc
jp
aas
cmp
cmpsb
sub
jb
into
icebp
fs
inc
pop
jg
out
push
repz
pop
or
xor
int3
push
push
pop
icebp
adc
push
aam
in
and
mov
stos
jno
mov
or
ss
sub
aam
mov
lahf
pop
push
mov
mov
out
les
call
and
inc
push
push
jecxz
imul
add
sbbl
xchg
and
out
cmc
sub
lret
les
pop
scas
cmp
pop
xorb
lea
imul
jns
data16
cmp
xchg
mov
dec
ret
ljmp
pop
cmpsb
add
cmp
sbb
sub
cmpsb
data16
sbb
push
hlt
add
mov
xchg
int
sub
inc
add
mov
push
imulb
insb
xchg
mov
loope
call
icebp
arpl
out
xchg
jg
fisubl
push
xor
dec
dec
sub
and
push
ret
xchg
sbb
ja
inc
pop
nop
in
mov
dec
in
sub
jmp
cmp
fistl
es
add
daa
movsb
sbb
sbb
xchg
sub
dec
dec
sahf
nop
sub
xlat
and
std
cmp
mov
sbb
lret
fstpl
xchg
shll
lret
mov
inc
pop
xor
repnz
lret
aad
inc
fildll
push
xchg
push
adc
and
call
dec
insl
stc
or
aam
push
test
cmp
clc
rcrb
jle
xchg
inc
out
mov
sub
xchg
xchg
lods
inc
mov
or
sub
int3
jns
or
into
sub
cld
cmp
push
sti
add
cmp
int
add
cld
cmp
clc
repnz
xor
mov
jg
sub
fcmovnb
add
xchg
push
out
jo
cmp
xor
jp
mov
push
pop
pop
inc
imul
dec
ficomps
sbb
insb
dec
int
inc
lock
dec
cmp
cld
cld
push
roll
or
mov
mov
push
imul
out
repnz
add
sub
lret
fldl
cmp
push
xlat
mov
les
vpshufhw
in
mov
int
dec
out
in
sub
or
mov
icebp
push
mov
and
mov
xor
dec
mov
mov
sub
cltd
popf
xchg
push
jbe
mov
xchg
cmpsb
and
mov
sub
pop
out
push
pop
pop
out
adc
mov
xor
loop
jnp
cmc
int3
and
mov
sub
jns
jnp
push
fildl
pop
jb
pop
es
jb
sub
push
or
stos
mov
pop
aaa
or
xor
or
inc
sub
jp
cld
add
pop
dec
outsl
insl
fnstenv
rcrb
mov
jecxz
pop
or
bound
mov
hlt
xor
push
clc
fdiv
cmp
mov
push
orl
ds
cmpb
nop
sub
insl
pop
int3
jmp
pop
jns
insb
mov
paddb
or
push
push
dec
cmp
es
cld
pushf
cmpsb
es
dec
mov
inc
jno
aam
subl
mov
jp
insb
pusha
fcoml
mov
outsb
ret
sub
or
jb
pop
xor
negb
imul
loopne
or
ret
push
js
cmp
jg
mov
jge
pop
push
fistl
push
inc
or
aas
insb
in
sub
nop
insl
daa
push
pop
lds
cmc
movsl
cs
mov
add
loope
lock
fnstsw
and
imul
ljmp
bound
orb
daa
lret
push
insb
push
stc
enter
push
sbb
fsubrp
insb
and
push
dec
das
das
pop
popl
bound
jns
pop
pushf
cmpsb
aad
dec
add
iret
and
pop
and
jno
lahf
out
pop
and
push
xchg
clc
pop
and
test
dec
loope
pop
jns
push
mov
cmc
jmp
inc
push
mov
pushf
je
sub
pop
insb
cmp
xor
push
js
and
sub
pop
push
jmp
mov
daa
push
xchg
das
sub
jl
sub
sbb
loopne
mov
push
dec
pop
pusha
mov
es
dec
push
dec
popa
add
xchg
add
sahf
fsubr
fcmovnb
add
dec
cli
shll
aam
outsb
dec
inc
fcomps
mov
add
cs
lcall
xchg
addr16
in
sbb
stos
or
push
add
cmp
adc
loop
jbe
sarl
jmp
dec
arpl
stos
je
js
pop
mov
sbb
inc
jnp
and
xor
jg
push
aad
push
in
mov
ret
cmp
mov
and
test
jns
lret
mov
fisttpl
adc
xchg
aad
sub
outsb
call
pusha
dec
sbb
pop
fidivs
pop
pop
push
lock
sub
add
or
and
pop
aaa
jl
jo
cltd
cli
pop
mov
pop
xchg
daa
in
dec
add
mov
xchg
call
clc
int3
ja
sub
xchg
pop
dec
push
jmp
jmp
movl
add
inc
xchg
sahf
push
push
mov
cmp
inc
dec
adc
rcll
xchg
js
lods
xor
fdivrl
mov
insl
sysret
mov
arpl
pop
jmp
add
ret
je
shr
inc
adc
ljmp
outsl
cltd
jle
inc
pushf
repz
fsqrt
dec
pop
shrl
stos
mov
enter
xor
data16
popa
xor
push
fs
sbb
mov
fiadds
pushf
in
fistpll
pop
sub
xchg
sbb
leave
popl
sbb
push
jo
xchg
in
stc
lods
fsubr
jp
jns
mov
jo
fmulp
ret
rolb
ja
lods
sub
mov
aas
pop
rcrl
adc
sti
mov
mov
test
stos
jmp
push
push
push
adc
pop
decl
fildll
pop
xor
mov
adc
mov
je
jle
mov
sub
and
out
not
lods
xor
out
add
xchg
out
hlt
sbb
aaa
inc
pusha
rcrl
xchg
iret
add
test
add
jge
push
pop
xchg
dec
mov
sahf
and
mov
or
enter
sbb
fimuls
imul
cs
cmp
sub
cmp
inc
push
outsl
dec
fiaddl
jl
jp
testl
data16
insl
test
pop
jne
jnp
mov
jo
xchg
dec
xlat
cmp
testb
iret
sbb
and
loopne
aam
mov
mov
sub
pop
shll
mov
inc
adc
out
sub
jbe
mov
push
aaa
fucom
stos
sbb
add
xlat
in
loop
xchg
mov
mov
jb
cltd
clc
adc
call
lock
sarb
cmp
add
pushf
test
pushl
mov
or
xor
xchg
add
jno
movsb
sub
ds
mov
lods
mov
cltd
cmp
fimull
nop
shlb
jmp
cmp
inc
add
xor
pushf
nop
jae
sub
rcll
div
adc
and
or
cld
pop
adc
sbb
sub
jp
daa
xchg
sbb
loop
cmp
test
popf
mov
in
mov
loope
mov
adc
insl
inc
gs
les
pop
pop
popa
xchg
adc
sahf
dec
imul
lds
mov
mov
sbb
loop
sbb
int
inc
orl
fisttpl
shll
mov
add
insb
ja
ret
cmpsl
and
jmp
jo
test
jno
scas
and
test
mov
mov
or
mov
jmp
xor
rcrb
imul
pop
jns
fisttpll
dec
gs
jae
outsl
sub
outsb
addr16
leave
mov
jl
dec
std
xchg
dec
cmp
lret
push
addr16
cmovae
fs
out
fwait
ret
outsl
jns
data16
jp
pop
mov
imul
popf
push
xor
lods
push
sub
insl
xchg
jne
push
cli
ret
mov
data16
stos
push
dec
stos
dec
cmpsb
in
lods
and
decb
imul
and
mov
pushf
dec
test
jae
shrl
push
iret
push
add
daa
fisttps
xor
sbb
je
push
sbb
mov
xor
xchg
sahf
les
jge
pop
mov
call
lahf
das
lcall
cld
or
mov
cs
repnz
movsl
outsb
popa
cltd
popa
jle
mov
out
movsl
add
icebp
jns
push
cmp
cmc
inc
push
icebp
mov
jae
mov
cmp
jno
popf
push
dec
push
adc
sub
jne
outsb
sbb
mull
call
add
pushf
jg
les
movsb
sub
and
dec
rcr
mov
inc
cmc
push
adc
xor
inc
addr16
data16
popa
fsubrs
ja
sub
sarb
cmc
popf
pop
dec
shr
push
ja
into
loope
arpl
xor
mov
lea
cmp
mov
pop
sahf
xchg
lods
in
dec
outsb
jne
jge
jb
loopne
pop
fstps
lock
test
imulb
xchg
xchg
and
insb
sbb
sti
push
sub
dec
pop
push
mov
scas
push
cmp
push
out
pmaddwd
push
testl
add
pop
enter
mov
adc
cli
sub
into
adc
xlat
int3
sub
int3
xor
adc
fcoml
jecxz
enter
mov
jg
mov
xchg
mov
in
push
or
pop
je
shl
sub
jg
push
cltd
fcom
pop
jle
lret
or
sbb
ret
sbb
xor
dec
out
xchg
cmp
jnp
lods
add
ss
push
je
mov
inc
mov
mov
shrl
call
pop
fnstcw
lea
pushf
inc
cmpsb
mov
imul
mov
or
sbb
movsl
cld
cmp
jae
rcll
jge
in
inc
insl
loop
icebp
andl
and
lcall
mov
fcmovbe
and
jb
push
push
and
or
fldcw
std
cmp
cmp
push
cmc
sub
mov
jmp
lods
push
iret
lea
xor
adc
leave
outsl
mov
test
sub
adc
std
jmp
pop
in
dec
ret
arpl
adc
mov
xlat
cmp
sub
dec
insb
cld
xchg
inc
lret
pop
out
inc
cmpsl
cmp
clc
pop
imul
data16
bound
cmpsb
or
mov
dec
inc
pop
push
int
add
xchg
mov
rcl
push
and
addr16
xor
pop
daa
xchg
cmp
lods
aad
lock
push
ret
and
loop
jp
push
repnz
mov
aas
addb
jns
adc
icebp
movsl
and
jne
shrl
cwtl
pop
imul
push
icebp
mov
pushf
fadds
mov
inc
or
enter
es
inc
int3
mov
out
int
addr16
push
mov
pusha
out
outsb
mov
xor
ret
or
pop
inc
popa
cmpsb
dec
gs
pusha
fwait
stc
pop
ret
mov
xor
sub
jns
cwtl
jle
jno
ss
sbb
jle
fisubrs
sbb
sub
xchg
adc
sub
rcrb
lods
xchg
imul
mov
fnsave
mov
jbe
shlb
test
pop
jp
ds
test
test
push
xchg
gs
inc
repz
xchg
xchg
scas
outsb
lcall
push
mov
jns
mov
test
or
test
test
divl
pushf
mov
push
xchg
cltd
lahf
and
imul
dec
xor
jecxz
shr
sub
xchg
mov
and
push
xchg
aaa
cmp
pop
dec
test
or
mov
mov
gs
aas
addr16
cmp
mov
enter
dec
push
mov
stos
adc
cltd
xor
fs
jl
ds
sub
cmp
and
xor
in
or
test
lahf
cmpsl
dec
xchg
and
mov
lahf
sub
fs
scas
adc
sub
sbb
out
mov
or
dec
loopne
outsb
imul
sbb
and
stos
outsb
imul
fisubrl
mov
push
mov
xchg
add
inc
icebp
jl
mov
scas
dec
cmpsb
sahf
mov
popa
movsb
push
mov
mov
popf
in
pop
push
insl
mov
fistpll
cwtl
sbb
lcall
sub
fisubs
cmp
and
mov
shlb
or
pushf
mov
jne
and
xlat
mull
pop
jbe
test
rcr
jns
push
fnstsw
lret
fsubr
add
xchg
push
jp
pusha
mov
cmp
setne
rcrb
cmp
jg
sub
insb
aam
aam
imul
cmp
js
popf
mov
pop
fcoms
out
push
sbb
cld
movsb
mov
imul
xchg
nop
push
and
or
mov
push
push
add
shll
out
lret
push
sti
repnz
xlat
adc
add
dec
mov
pop
pop
flds
test
cmp
ret
sahf
and
ljmp
daa
inc
loopne
ret
jbe
mov
insb
je
xchg
lcall
dec
mov
pushf
movsb
mov
inc
pushf
cld
fdivl
mov
testl
outsl
mov
adc
pop
subl
sbb
mov
aam
scas
stc
pop
call
andb
push
sbb
mov
inc
loop
mov
xchg
lret
inc
pop
jl
lock
lea
mov
outsl
shrb
pop
jnp
adc
jne
fstl
mov
mov
hlt
lahf
insb
and
push
lret
in
cli
and
pusha
sub
movzbl
dec
data16
hlt
cmp
icebp
pop
aam
jl
test
inc
and
cmpsl
ss
rcrb
push
cmc
sarb
fnstenv
ja
jecxz
jo
jae
sbb
jo
hlt
add
xchg
outsl
and
lea
testl
ds
push
add
dec
mov
mov
xor
ja
bound
in
xchg
cmpsb
push
xchg
and
out
jecxz
mov
hlt
shlb
mov
dec
call
add
add
lods
fisttpll
jo
int3
fcomps
gs
stos
inc
imul
hlt
push
ds
sti
xchg
dec
es
outsl
sub
inc
mov
pop
mov
test
in
jbe
mov
jecxz
jne
int3
add
mov
outsl
lcall
push
insl
je
aas
lods
gs
pusha
call
imul
and
xchg
push
jmp
push
je
and
push
push
iret
push
repnz
ret
ss
insl
iret
mov
cmp
icebp
cmpsb
je
lcall
inc
adc
clc
sti
clc
push
jl
fsubrs
xchg
and
xlat
mov
repz
jle
push
pop
out
lods
xchg
xlat
ss
jno
xor
aaa
mov
lods
movsl
pop
aas
lret
fistl
repnz
mov
adc
xor
icebp
leave
adc
push
mov
ret
in
dec
push
je
adc
jb
je
sbb
cmp
dec
add
jno
ja
inc
in
push
adc
in
ljmp
jnp
outsb
mov
mov
and
mov
inc
jg
pop
push
dec
iret
push
aam
xor
lahf
call
dec
aad
dec
addr16
les
shl
and
fdivr
dec
push
aam
push
mov
pop
mov
sbb
cmp
jecxz
sub
push
jno
cmpsb
mov
mov
add
testl
cmc
lods
ret
cmp
or
in
mov
xchg
movsb
fwait
push
lret
es
cmp
xlat
cmp
clc
pusha
dec
push
jp
test
xor
fmuls
enter
dec
aam
mov
add
add
jae
mov
xor
push
xor
inc
inc
dec
stos
jecxz
sub
push
dec
lret
les
push
add
rcrb
xchg
jae
stos
pop
mov
xchg
and
mov
sbbb
push
movaps
or
enter
fwait
test
sahf
mov
sub
mov
ror
mov
xor
and
mov
push
imul
int
mov
cmp
mov
mov
mov
js
jle
push
xchg
das
xlat
clc
jge
mov
scas
and
mov
repnz
jbe
pop
syscall
dec
imul
inc
mov
out
faddl
cmp
sbb
and
mov
and
lock
add
lds
mov
out
rorb
hlt
stc
popf
mov
adc
xchg
stos
in
xchg
fnstsw
fstpl
pop
mov
cli
aam
and
inc
cmp
xor
lahf
popa
xchg
js
mov
cmp
insb
arpl
mov
fcmove
jl
or
or
mov
loopne
inc
jmp
pop
hlt
lock
sub
roll
xorb
xchg
inc
jne
sub
daa
adc
cld
add
cld
loope
mov
out
cmp
or
or
or
push
inc
ret
jne
mov
test
fdivl
test
mov
pop
enter
xor
lock
int3
pop
rcrl
negb
loope
fisubrl
cmc
xor
loop
psubsw
adcl
push
sbb
pop
xchg
outsb
testl
popa
inc
loope
push
or
pop
pop
lea
test
je
and
loope
dec
lret
scas
push
adc
inc
leave
mov
jae
vmread
aaa
add
dec
bnd
inc
imul
or
dec
in
das
cli
orl
mov
scas
js
in
jns
push
ret
aam
lret
adc
cmp
push
lahf
loope
popa
xchg
adc
push
sti
cmpsb
push
in
seto
cmp
push
jle
xor
rcrl
lret
pop
sub
xchg
cmp
lds
fldcw
cltd
and
mov
in
pop
movsb
stos
pop
les
fnstsw
pop
or
xchg
pop
cmp
addr16
lods
mov
jo
and
ficoml
rorb
loop
repnz
loope
ds
enter
arpl
jge
jge
sub
rcll
out
pop
adcb
fistpll
sub
in
jns
cmc
aam
divl
leave
xchg
iret
ljmp
ret
lret
dec
fiadds
daa
pop
cld
filds
lcall
nop
xchg
dec
out
cltd
cltd
stc
xor
xor
sbb
jno
mov
xlat
inc
mov
fisubs
mov
fcmovb
aaa
or
mov
scas
or
sbb
fldenv
imul
push
loop
stos
mov
in
mov
pushf
pop
jae
sbb
sub
repz
insb
cmp
sbb
sub
mov
jg
mul
sti
adc
push
cmpsb
xchg
mov
cli
ret
stos
out
cwtl
mov
inc
and
ss
dec
pop
inc
inc
aaa
or
jp
cmp
mov
int
fsts
mul
mov
add
shrb
pop
in
aas
mov
cmp
icebp
inc
hlt
pop
scas
out
leave
out
or
adc
repz
cmp
jb
lock
pop
ds
ret
cwtl
inc
dec
leave
inc
pop
ja
mov
int
mov
sub
push
push
adc
push
insl
aaa
fcompl
mov
pop
and
push
or
lock
and
cld
test
push
mov
fsubr
xchg
push
mov
pusha
xor
inc
orb
sub
and
pushf
xorb
cmp
das
push
pop
loope
jge
sub
jmp
mov
les
mov
mov
shrb
and
lods
xchg
push
mov
test
mov
mov
ds
fcompl
cmp
inc
mov
mov
push
jp
repnz
shlb
or
movsb
jbe
xchg
cli
mov
lret
jae
pop
imul
in
or
adc
je
cmpsb
adc
fildll
mov
clc
fnstcw
test
mov
or
mov
pop
fs
out
shrl
cld
pop
rolb
dec
or
shlb
movsb
out
dec
mov
push
fs
idiv
adc
sbb
ficoms
inc
ss
loope
push
mov
xor
cmp
test
stos
dec
cli
mov
adc
mov
mov
mul
js
in
mov
mov
call
idivl
dec
sbb
int3
xor
push
jecxz
in
addb
mov
fstpt
and
in
jbe
rclb
lock
xor
imul
insl
aad
or
xlat
mov
imul
jl
and
sahf
outsl
jp
add
test
adc
inc
popa
bound
jns
mov
dec
mov
shlb
pop
mov
jnp
dec
add
mov
popa
cltd
jmp
lock
xor
std
jbe
faddp
mov
int
cld
inc
rcrb
push
mov
push
scas
inc
lds
into
ja
pop
cmpsl
and
push
bound
iret
sti
jg
ja
push
mov
js
pushf
cs
pushf
das
cmpb
sub
adc
and
xchg
adc
mov
sahf
fsubl
xlat
push
jg
dec
movsb
pop
inc
add
lds
xchg
fwait
pop
scas
jmp
fists
push
out
test
bound
out
lcall
mov
out
sub
dec
out
jmp
pushf
decb
or
sbb
fucomp
repz
ret
mov
pushf
mov
lret
pop
push
test
sbb
push
fcomps
enter
push
or
push
jne
mov
outsl
pop
mov
mov
in
xor
push
mov
popa
rolb
std
testb
das
insb
sub
jge
popf
and
sarl
push
mov
int
loop
cmp
test
dec
dec
cs
or
add
inc
notl
stos
xor
divl
pop
mov
dec
cmp
xchg
cld
jb
mov
and
cwtl
out
stc
or
das
pop
sub
lods
mov
or
pop
decb
mov
mov
insl
ja
sub
pop
lret
call
popa
adc
incb
imul
xlat
and
jl
in
fidivrl
push
lock
int3
mov
inc
bound
mov
loop
mov
sti
in
scas
sub
sub
pop
in
loopne
repnz
test
dec
out
and
fcoms
addr16
xchg
test
adc
inc
dec
lods
mov
jmp
insl
mov
cmp
rorb
mov
sub
pusha
inc
movsb
andl
xchg
jae
cmp
shrl
add
outsb
xchg
pop
xchg
imul
push
dec
negl
jg
mov
cmp
xor
dec
fwait
out
and
ljmp
jmp
subb
into
and
mov
ss
mov
add
gs
add
dec
jp
jnp
loop
out
mov
ficomps
movl
xchg
sub
push
push
mov
push
push
mov
test
addr16
divl
xchg
jno
cltd
or
ds
lods
inc
adc
and
or
add
dec
push
xor
cmpl
insl
mov
fdivrl
test
jo
cmpsl
mov
insl
nop
mov
cmp
inc
cmp
cmp
fisttpl
xchg
xchg
test
mov
imul
adc
addr16
mov
sub
mov
ret
sahf
gs
xlat
test
call
insl
arpl
adcb
cltd
adcl
setnp
mov
movsl
setp
icebp
jnp
es
imul
mov
call
lea
inc
fstpl
cs
sbb
lds
and
xchg
idivb
xchg
inc
fmull
adc
sub
es
or
pop
lret
jae
fnstcw
dec
aam
scas
inc
mov
mov
ljmp
push
enter
daa
mov
inc
and
inc
push
outsl
jl,pt
cs
fbld
mov
es
xchg
scas
jb
stos
popa
cmp
arpl
dec
push
es
pop
or
and
cmpsl
fdivrs
pop
adc
add
mov
lcall
imul
aad
rclb
dec
xor
jbe
aas
push
mov
cmp
lcall
push
icebp
sbb
fnstsw
cld
arpl
loop
mov
jno
push
sbb
lret
stos
or
ret
or
repz
or
ret
and
aam
arpl
cmp
xlat
jecxz
pop
pop
mov
gs
dec
pop
push
adc
adc
insl
dec
call
xor
sbb
test
jmp
or
jns
addl
jecxz
xor
ljmp
and
in
pop
jecxz
addr16
jle
mov
mov
pusha
mov
bound
jne
loop
out
insl
dec
xchg
out
fcmove
dec
sub
xlat
stos
fsubrs
dec
lods
les
push
inc
mov
adc
fs
mov
pause
jmp
and
mov
mov
or
fs
in
dec
xor
or
clc
cli
data16
xor
lds
out
lcall
cwtl
jns
lds
inc
ss
repnz
enter
ficoms
aas
dec
data16
xchg
movsb
jp
push
pop
popa
inc
lock
scas
loope
cli
pop
mulb
jp
xchg
xor
push
add
fisubrl
sbb
pop
jge
jle
dec
mov
das
mov
jp
jnp
pop
jge
mov
adc
jge
pop
xor
sub
test
mov
loope
sar
out
mov
scas
test
aas
pop
sbb
xchg
add
jns
jecxz
jne
repnz
xor
je
push
fstpt
sub
nop
mov
lea
mov
pop
mov
push
sbb
cld
icebp
cltd
add
jb
push
and
or
jl
enter
sub
adc
leave
xlat
jo
lock
dec
or
xor
xor
repz
pop
mov
dec
aas
mov
test
hlt
ja
cmp
mov
push
add
jns
divl
jl
cmpsl
xlat
js
cli
fsubs
dec
nop
xor
or
push
sbb
cld
movsb
dec
lds
cmc
jmp
popf
icebp
jl
cmc
cmp
sbb
sbb
nop
leave
pop
adc
fldl
cmp
add
fsubrl
dec
push
out
mov
imul
cmpsl
adc
lret
outsb
add
pop
mov
lock
popa
sub
aaa
test
stos
xchg
xor
insb
js
movsb
arpl
dec
gs
dec
mov
rcr
out
inc
inc
xlat
icebp
iret
loop
fs
or
ret
repz
xchg
ss
insl
dec
or
xlat
pop
mov
test
jo
test
jmp
jbe
and
stos
pop
cmc
mov
xchg
cs
adc
daa
bound
enter
jecxz
pop
xorps
stc
xchg
jg
push
mov
mov
decl
icebp
movsb
cmpsb
push
lods
fcompl
sub
push
push
push
add
jb
add
js
xchg
xchg
aas
xchg
int3
cmovne
mov
ds
lahf
sub
aad
addr16
xor
es
shll
add
sar
fnstenv
jne
push
js
add
xchg
dec
mov
shrb
jne
loop
push
or
sub
mov
push
stos
adc
and
repz
pop
sub
and
pusha
xor
iret
pop
and
cmp
ljmp
add
hlt
mov
test
pop
cmp
inc
mov
les
sbb
lds
jns
push
push
xor
xor
repnz
fistpl
and
dec
jnp
and
mov
or
push
ljmp
mov
pop
jge
mov
leave
jo
pop
cmp
lret
cld
aas
and
bswap
pop
sub
mov
or
ror
mov
jmp
divl
xor
jo
out
and
xor
das
pop
dec
mov
inc
xchg
push
inc
mov
and
push
push
fdivl
aas
out
or
jge
jge
adc
pop
test
inc
sub
lcall
jle
push
push
leave
adc
popa
pusha
inc
adc
xchg
iret
pop
push
push
sti
xchg
scas
xor
clc
imul
fsubrl
inc
enter
adc
adc
stos
mov
int3
daa
xor
push
jp
xorb
inc
and
dec
mov
pop
pop
dec
shlb
mov
aaa
pop
aas
mov
popa
sbb
jl
dec
fidivl
in
ret
push
jle
add
je
movsl
cmpsl
popf
push
test
leave
subl
cwtl
repnz
push
xchg
clc
cltd
loopne
out
add
popa
ljmp
mov
pop
dec
idiv
pop
test
xchg
fisttpl
mov
stos
leave
lods
sub
inc
rorl
mov
rcrb
or
call
cmp
xchg
das
stos
jge
addr16
fdivs
mov
rcll
lds
mov
adc
push
shr
xor
fidivs
xor
xor
loope
bound
adc
cltd
mov
shl
fbstp
test
inc
lods
sub
dec
outsl
loop
inc
push
xor
mov
int
mov
lret
cmpsl
iret
das
dec
dec
and
sbb
jns
lret
xchg
lds
adc
jns
xor
pop
add
mov
push
or
popf
ja
insb
outsb
or
mov
push
push
popa
jo
ja
xor
cltd
lds
mov
mov
sahf
cmp
ss
push
and
cmp
dec
repz
push
stc
enter
notl
jbe
je
lock
dec
in
xchg
fdivrs
dec
sub
aaa
negb
jne
arpl
or
sub
lock
or
setno
insb
add
mov
imul
pop
push
popf
push
out
and
xchg
xchg
stos
inc
pop
xchg
scas
mov
je
aad
inc
aas
inc
mov
or
push
inc
jecxz
push
sub
pop
mov
std
cmp
or
dec
adc
scas
push
pusha
inc
sub
and
sub
lods
cmp
iret
pop
add
sub
cmp
pop
out
lea
dec
daa
jnp
adc
popa
xchg
repnz
aad
add
in
cmc
xchg
mov
ficoml
dec
scas
inc
dec
xor
mov
jge
std
je
lea
pop
ret
pop
ret
cmpb
cmp
mov
lret
scas
adc
add
push
ds
les
xor
stc
mov
sbb
dec
dec
ss
fmull
xor
jg
jp
out
roll
lods
lock
in
mov
lods
mov
mov
test
xchg
cmp
aam
out
or
inc
clc
jmp
pushf
lahf
jg
mov
outsb
mov
mov
pop
ljmp
fsubs
push
or
xchg
and
into
jno
pop
mov
popa
pop
pushl
decb
repnz
mov
jecxz
fisubrl
cld
or
add
add
cmp
mov
hlt
fs
mov
scas
roll
lahf
xor
push
stos
or
stos
and
mov
int
fdivr
add
fwait
push
add
inc
sub
repnz
test
stc
push
and
cld
insl
mov
ret
fwait
push
mov
mov
mov
stc
shlb
jg
xchg
inc
lods
imul
cmp
xlat
in
xchg
hlt
or
scas
aad
sbb
call
xor
pop
popl
push
xchg
push
inc
stc
test
or
popf
cld
push
fisttpl
cmp
mov
enter
pusha
mov
adc
flds
das
faddl
hlt
or
sbb
sub
and
in
adc
nop
pop
jmp
addr16
negl
out
push
aaa
insl
in
popa
sub
mov
js
daa
cld
cmp
push
mov
test
inc
adc
popa
mov
xchg
cmc
or
fdiv
dec
aad
std
insl
dec
dec
test
outsl
sub
sub
adcl
jge
inc
and
dec
xor
cmp
sbb
xor
rclb
cmc
aaa
out
roll
out
xor
fdivrl
repnz
aam
xor
push
mov
shlb
test
sbb
in
push
sbb
cmp
cmc
pop
std
test
adc
jnp
inc
mov
or
aam
lcall
cmc
jno
jb
sbbb
add
add
cmp
and
dec
out
mov
aad
push
test
cmp
fidivl
sub
mov
add
pushf
sbb
in
sbb
cmp
pop
test
mov
cmpsb
pushl
pop
mov
add
sbb
jle
cwtl
add
imul
sbb
lea
std
push
movsb
dec
add
fisubl
aam
push
pushw
out
add
jnp
mov
jge
jl
pop
iret
jbe
xor
lds
movsl
add
shl
cmp
xor
dec
or
jp
xor
aaa
loop
cmp
shl
mov
aad
lahf
les
ja
idivb
xchg
pushf
es
out
movsb
outsb
ljmp
mov
cld
xor
xor
pop
pop
sbb
out
lcall
xor
cld
movsl
bound
push
inc
pop
push
out
in
ljmp
xchg
pop
mov
stc
adc
leave
das
into
lods
push
into
enter
inc
test
mov
adc
hlt
mov
mov
dec
inc
rcl
loop
loopne
incl
std
xor
mov
scas
out
sub
stc
push
mov
jle
dec
add
fwait
add
cmc
inc
jp
pusha
sub
jge
push
xor
int
xor
lock
leave
stos
inc
sbbl
add
int3
fldl
fmull
push
pop
add
loop
imul
fwait
sahf
sbb
jg
pop
adc
jmp
jle
add
ds
sub
xchg
arpl
push
test
mov
add
xchg
dec
jnp
aaa
mov
sub
cmp
mov
mov
stc
dec
aam
pop
cmp
pop
dec
rcl
sbb
pop
dec
sub
fs
into
inc
add
sub
fdiv
push
lods
cmpsl
cmpsb
sub
cmc
test
in
mov
or
sub
int3
and
cmp
nop
stc
rorl
popa
add
stos
aaa
or
in
adc
sub
mul
and
in
pop
fistl
in
out
jno
lcall
aam
fisubrl
incb
jnp
repnz
dec
xchg
dec
sub
add
cli
outsb
sti
rorl
or
jl
call
mov
push
lret
mov
xor
mov
xchg
mov
push
aaa
stos
rcll
leave
shrb
lcall
and
sbb
sbb
or
push
cmpb
mov
fistpll
pop
fistpl
fnstsw
in
movsb
shrl
mov
dec
rclb
push
add
fisttpl
dec
outsb
out
insb
pop
mov
pop
add
adc
cmp
test
mov
xor
mov
jmp
jge
leave
hlt
cmp
mov
out
pop
aaa
pusha
cmpsb
push
std
xor
mov
mov
and
push
fidivs
mov
cmp
jbe
incl
adc
adc
jge
mov
adc
adc
fdivs
jne
out
int3
fs
pop
mov
out
ficoms
sbb
pop
mov
push
in
jl
inc
fimull
pop
xchg
jmp
or
lahf
out
pop
sub
sbb
outsb
pop
inc
jge
das
or
es
rcrb
das
mov
xlat
xchg
mov
rcl
dec
lahf
mov
aad
jl
add
pop
mov
pusha
lea
sub
inc
dec
pop
mov
pop
jns
das
fistl
ficoml
push
inc
push
push
popa
inc
and
adc
clc
add
inc
sbb
add
push
jb
ljmp
jbe
jg
cmc
repnz
gs
repz
push
mov
jecxz
int
cld
cmp
inc
mov
mov
popf
popf
sbb
scas
fisttpl
daa
jmp
cmp
cmp
fwait
rcll
test
mov
insl
enter
sbb
arpl
adc
xchg
or
mov
lods
cmpl
mov
mov
stos
xor
stos
fs
int3
lcall
and
push
mov
sbb
mov
jns
jb
lcall
adc
fucomip
and
repnz
arpl
adc
pop
frstor
loope
repnz
stos
popa
in
lcall
jecxz
mov
fistpl
cmp
push
rolb
pop
aad
adc
out
mov
push
jmp
fwait
and
inc
shlb
cmp
imul
int
aam
fs
mov
fists
movsb
dec
mov
out
arpl
pop
sbb
leave
js
daa
adc
xor
cli
inc
loop
mov
mov
push
sbb
inc
fisubs
das
pop
or
jae
mov
mov
jl
xchg
xor
lea
repnz
xchg
fdivr
mov
or
ficomps
fiaddl
mov
gs
adc
sub
cmp
mov
pop
iret
sbb
fcomip
push
pop
movsl
pushw
loopne
in
cmpsl
mov
ret
sahf
and
andb
sbb
dec
nop
or
xchg
movsb
aas
push
add
fcmovnb
shl
sbb
jge
inc
dec
mov
xchg
sbb
fchs
cwtl
dec
cmp
xchg
dec
jmp
addr16
sbb
xchg
mov
jp
fdivrs
ss
repz
out
push
inc
sub
pop
rcll
mov
fsubr
xchg
lahf
xor
cmpsb
mov
mov
aaa
pop
sbb
int
cltd
ret
fcmovb
fwait
xor
adc
cltd
jecxz
mov
jbe
cli
addr16
jmp
iret
dec
jge
ret
mov
push
fdivrp
lret
lods
int3
mov
mov
cmp
or
test
mov
jns
push
cmp
xor
pop
xchg
push
or
push
in
mov
push
pop
stc
sbb
xchg
fiadds
outsb
adc
stos
cmp
jnp
xchg
mov
les
insb
popf
addr16
add
imul
stc
jle
je
sub
dec
shrl
jmp
sbb
and
pop
dec
orb
insl
out
cmpl
xor
inc
in
pop
mov
jae
loope
je
xchg
jmp
dec
or
in
jmp
mov
jmp
rclb
jmp
sbb
enter
cwtl
fisubrs
sti
xorb
imul
pop
mov
mov
sbb
add
lods
call
inc
xchg
add
dec
lds
cmp
mov
dec
pushf
mov
pop
mov
inc
mov
cmpb
dec
and
pop
movsl
jg
pop
aad
fiadds
cmpsl
add
cmp
popf
sub
xchg
dec
jmp
imul
icebp
pop
rcr
insb
or
xchg
dec
in
icebp
mov
les
add
pop
jb
in
das
mov
fdivs
fsubrs
aaa
push
aas
push
dec
inc
movb
or
inc
jne
fisubl
jae
xorl
jecxz
add
shll
adc
jecxz
add
and
in
or
out
andb
dec
and
shrl
inc
icebp
int
fucom
cmp
adc
into
mov
loope
dec
xchg
lock
imul
cs
xchg
pushf
jle
push
es
pop
test
ja
into
mov
lds
aas
mov
add
iret
mov
mov
cmp
test
pop
mov
xchg
and
jne
inc
push
xorb
cmpsb
adc
add
jns
pop
dec
negl
add
xor
push
pop
ds
in
test
fisubl
mov
dec
xor
push
fsubs
mov
addl
mov
lods
mov
inc
roll
in
fisttps
or
or
loope
out
scas
mov
xorb
xchg
jle
xchg
test
out
gs
push
push
cmp
das
add
cwtl
icebp
pop
xor
pop
add
emms
incl
inc
gs
add
or
loopne
sub
and
bound
adc
mov
push
add
mov
in
mov
ja
or
in
pop
cmp
ss
dec
push
aad
pushf
int
stos
mov
adc
mov
rcrb
sbb
or
add
ds
mov
cmp
mov
subb
xor
dec
das
add
push
movsl
xor
jne
rcr
icebp
adc
enter
or
pop
jmp
push
push
cmpsl
into
xchg
les
xchg
hlt
jp
push
mov
and
mov
mov
std
es
or
in
das
nop
divb
xlat
js
rolb
rclb
cmp
rorb
cmp
lods
jno
mov
in
mov
mov
lock
pop
lcall
in
test
push
js
nop
nop
stos
popa
mov
jge
loop
gs
jnp
mov
ffree
xchg
mov
and
jne
xor
int
xlat
jo
das
or
sbb
inc
cs
mov
insl
js
aaa
pop
and
test
bound
aad
frstor
outsb
pop
mov
sbb
repnz
and
ljmp
fsub
insl
xlat
push
cmp
push
add
iret
mov
paddsw
inc
push
xchg
in
fbstp
out
arpl
or
jo
rorb
xchg
jo
lcall
fmuls
fwait
mov
push
jo
insl
xor
popa
adc
cli
shll
jmp
or
dec
mov
push
lahf
subl
dec
inc
add
cmp
repnz
cltd
xchg
sti
mov
add
test
push
popf
sub
in
sub
cmpl
in
mov
xchg
and
pop
xor
push
mov
jae
dec
pop
enter
test
lds
fst
out
inc
addr16
out
jmp
pop
outsb
test
push
js
inc
xchg
loope
cmp
sahf
das
inc
out
nop
sbb
push
pop
cli
xchg
lahf
mov
rorb
int
sub
pop
xchg
loop
push
ret
iret
pop
mov
sbbl
push
fs
mov
and
inc
aam
pop
insb
fisttpll
pop
dec
mov
ficoms
movsb
shlb
jno
add
cmp
fistpl
cmpsl
dec
pop
iret
lods
test
push
sub
jp
mov
or
mov
out
lods
addr16
cmp
jp
into
lcall
aad
sub
jge
push
xor
repnz
cmc
ljmp
mov
xor
daa
ret
pop
mov
mov
add
pop
lods
filds
mov
sbb
arpl
push
push
cmp
mov
sbb
sub
loope
xchg
outsl
bound
and
mov
sub
loope
sub
hlt
sbb
andb
mov
mov
jns
lock
ret
clc
adc
xchg
and
scas
daa
and
stos
sbb
and
mov
xchg
popf
and
adc
mov
movsl
and
clflush
cmp
xor
inc
mov
sub
out
inc
push
lods
nop
and
in
push
xor
add
or
repnz
push
fwait
mov
es
ja
and
sbb
xchg
cmpsl
lret
jmp
out
jmp
or
mov
sti
out
mov
lret
stos
ljmp
add
or
cmp
loopne
mov
jns
cwtl
dec
jge
cltd
xchg
loope
stos
dec
cmp
and
jmp
xor
push
ficompl
idivb
jl
cmpsl
ret
inc
and
bound
cmpb
sub
lcall
les
movsb
push
push
sbb
adc
xchg
imul
andb
enter
push
fisttpll
push
add
lods
sub
lcall
aaa
jns
cmp
mov
mov
jle
test
or
int
fisubl
push
pop
cmpsb
loopne
ret
ss
std
arpl
mov
mov
sti
into
seto
add
sub
adc
pusha
and
imul
out
xchg
shlb
out
inc
sbb
sub
lods
prefetch
sub
cld
jle
pop
lea
xor
pop
in
in
jl
add
iret
ss
lods
enter
jmp
jb
or
hlt
xchg
adc
pavgw
sub
adc
out
and
add
out
jb
pop
mov
pop
pop
inc
sar
sbb
or
std
xor
stc
cmpsl
sub
test
cwtl
jne
pop
jnp
ja
js
cwtl
les
mov
mov
or
es
movsb
cld
add
or
and
pop
insl
lret
pusha
ret
call
in
jbe
pop
push
sti
adc
mov
jb
aas
xchg
push
mov
pushf
xor
fisttps
pop
insl
das
fbstp
push
ds
jbe
dec
jnp
clc
adc
or
push
divl
dec
sbbl
inc
sti
cmpsb
or
shrb
cltd
xchg
pop
movsl
lahf
loop
inc
mov
ljmp
loopne
repz
out
sub
and
adc
jo
mov
or
pop
jle
jnp
and
pop
ja
push
rcrb
adc
sti
mov
incl
mov
inc
mov
mov
imul
cmp
and
cltd
andb
adc
shr
dec
repnz
popf
xchg
insl
jnp
pop
dec
pop
inc
jg
lret
fistpl
stos
inc
loop
cli
rorl
mov
xchg
out
dec
sub
loopne
movsb
dec
fistl
rclb
sub
repnz
jno
xchg
mov
xor
mov
rorb
lds
mov
add
jb
xor
imul
imul
lods
xor
jmp
inc
push
push
mov
es
inc
dec
fnstcw
push
rorl
xor
jne
shr
xor
jb
xor
jns
mov
lret
dec
ss
out
rcpps
xor
cmp
mov
mov
xchg
int
jge
rcrl
call
mov
in
test
push
in
clc
outsl
into
lock
clc
inc
add
test
pop
mov
mov
dec
cmp
cld
inc
mov
sub
cld
push
nop
pop
pop
das
out
and
mov
add
push
aam
push
ret
sub
sub
jmp
xchg
sbb
pop
data16
out
movb
adc
pop
mov
shl
cli
and
xchg
cld
mov
mov
jo
inc
add
ss
aad
and
pop
mov
cmpsb
or
push
lds
daa
sti
push
outsl
gs
scas
shlb
xchg
fs
fldenv
cwtl
mov
addl
xchg
das
je
es
pop
cmpsl
sti
sbb
icebp
and
jnp
iret
cmp
sub
insb
ljmp
xchg
push
je
and
imul
push
mov
inc
mov
mov
or
jns
negl
mov
xchg
push
jg
in
push
xchg
iret
ret
and
stos
pop
jmp
mov
cltd
sbb
rcr
data16
xchg
cmp
jo
jg
dec
cmpsl
mov
repnz
loope
pop
sub
dec
in
sarb
lcall
xchg
cli
pushf
or
in
cmc
repz
sbb
dec
test
adcb
aas
push
outsl
mov
ds
fwait
mov
jo
cld
add
push
inc
lea
cmc
mov
xor
pop
sub
fsts
rcrl
push
fldcw
scas
repz
mov
jo
cmp
pop
test
fsubs
sub
js
dec
jnp
movsb
push
les
and
push
mov
test
cmpsb
imul
fsts
mov
mov
add
cmc
add
enter
movsb
rcll
xchg
sbb
dec
sarb
xor
dec
jbe
push
jno
jae
cs
inc
sub
mov
imul
call
sbbb
stos
clc
jnp
scas
xchg
ljmp
pusha
popf
iret
sbb
mov
int
out
jo
pop
jns
fs
push
test
adc
xchg
or
nop
das
pusha
jno
fdivl
add
lods
sbb
imul
jge
mov
cmpb
pop
and
mov
mov
mov
fimuls
movsl
dec
xor
sub
mov
rorb
lock
insl
arpl
sub
mov
push
add
test
ja
in
and
sub
mov
pushf
add
xchg
fists
mov
cmp
or
fists
icebp
inc
inc
add
xor
scas
inc
sbb
cmp
inc
out
mov
and
push
repz
sbb
xor
test
data16
dec
push
mov
adc
xchg
sbb
or
shrb
or
cmp
mov
clc
mov
jecxz
dec
cmp
push
insl
sub
xchg
pop
jb
fimuls
ss
xor
stos
ud0
gs
xchg
outsl
xlat
loop
loope
dec
cwtl
sbb
cli
sub
and
xor
or
jns
adc
mov
dec
jns
adcl
popf
test
lret
cmpsl
mov
jno
in
xchg
or
ljmp
fs
cli
cld
out
mov
lret
adc
mov
mov
xchg
mov
fdivrl
jl
mov
int3
hlt
adc
in
mov
xadd
push
into
jp
out
jmp
or
in
pop
cld
movsl
fstps
call
push
dec
or
push
jl
ja
mov
mov
inc
inc
push
push
outsl
addr16
inc
out
mov
mov
add
cld
scas
jb
cmpsb
dec
inc
and
loop
mov
xchg
sub
pop
lds
sbb
dec
jmp
icebp
push
faddp
fwait
mov
fildll
ds
adc
xchg
cmp
stc
or
xor
fcomps
jmp
clc
mov
nop
xchg
pop
and
shr
sub
mov
movl
sbb
mov
xor
dec
into
lea
loop
rorb
xchg
mov
jae
mov
insl
popa
inc
addb
lret
mov
sub
mov
cmpsl
jbe
mov
repnz
cmp
loope
mov
repz
daa
scas
xchg
ret
loopne
cmp
sub
and
int3
jo
in
xchg
repz
jno
or
scas
cs
iret
lea
add
or
fwait
das
sub
push
in
and
jmp
sbb
and
xchg
pop
test
mov
loope
enter
xchg
fisubrs
and
repnz
insb
add
aaa
and
push
out
add
imulb
insb
push
loope
stc
loope
push
sub
cmp
movsb
insl
pop
cmp
mov
add
or
and
ja
or
test
nop
std
ret
xchg
ss
cwtl
ds
mov
inc
add
dec
fcmovu
int
scas
insb
and
push
push
cwtl
ret
in
cltd
movsl
into
dec
pop
inc
fwait
ss
push
cltd
adc
fcoml
pop
js
pushf
xchg
std
mov
jb
or
or
dec
xor
and
aaa
hlt
mov
outsb
mov
cmpsl
pop
aam
test
mov
mov
test
negl
cmp
adc
add
inc
aaa
adc
sub
push
push
in
imul
test
test
add
loopne
andl
pushf
mov
mov
adc
xlat
mov
shll
mov
int3
insb
in
ljmp
aam
mov
movsl
mov
int3
xor
addr16
nop
lock
cld
ss
rcl
mov
in
lds
inc
bound
int3
mov
repz
xchg
cltd
add
jne
xor
test
push
xchg
rcll
in
push
jnp
push
push
dec
and
sub
jle
push
movsb
mov
out
mov
shlb
pop
arpl
pop
adc
scas
mov
das
sub
cmp
ss
mov
mov
loopne
xor
outsb
push
ds
fbstp
je
aas
daa
jecxz
jb
mov
jno
xor
cltd
pop
sti
mov
loop
and
daa
hlt
and
inc
jg
xlat
ret
lahf
cmp
les
cmpsl
ret
das
push
es
dec
les
lds
jp
sbb
mov
push
cmp
add
nop
repnz
and
mov
xchg
call
mov
arpl
leave
xchg
push
add
pop
addr16
int
mov
adc
lea
dec
or
repnz
in
fstp
or
push
pop
mov
add
jae
and
mov
sarb
cli
clc
mov
dec
ret
mov
and
xchg
push
cmp
stc
sti
dec
std
lret
adc
dec
and
jo
jnp
insl
push
fcmovbe
jne
js
xor
fidivrs
or
pop
mov
jge
movsl
jp
lock
cmp
jge
push
xchg
sub
roll
fsqrt
rcll
dec
incl
mov
lret
bound
in
mov
push
loop
lods
jne
scas
frstor
lret
push
iret
push
xchg
shlb
test
sti
push
mov
mov
cmp
jo
dec
dec
push
jmp
dec
mov
arpl
xor
push
ja
push
cmpsl
add
push
push
mov
fimuls
movups
int3
inc
or
cmpsb
mov
xchg
loope
sub
add
nop
mov
push
and
add
fwait
xchg
sbbb
lahf
inc
in
lods
je
sbbl
jecxz
lods
inc
lds
mov
sub
in
ds
insb
hlt
or
push
or
xor
and
movsb
xlat
mov
aad
data16
fcomp
or
jne
movsl
xchg
inc
in
inc
inc
scas
aad
bound
filds
push
cmc
stc
push
mov
xor
je
arpl
push
int3
cli
sbbl
ja
jns
popa
lock
jae
xor
fs
rol
pop
popf
adc
lcall
in
mov
jo
out
loopne
gs
cltd
xor
push
cwtl
pop
aam
scas
ss
in
ret
out
into
sbb
pop
sbb
sub
cli
movsl
add
in
out
xchg
ficompl
fistps
pop
jle
push
outsb
mov
lcall
push
mov
adc
push
in
mov
xchg
test
inc
fnsave
andb
lea
push
mov
popf
push
jle
lods
and
leave
sub
push
lea
sub
adc
out
jmp
imul
pop
fldl
cmp
stos
popa
mov
sub
pop
mov
xlat
push
add
xchg
pop
outsl
test
mov
scas
xchg
loope
mov
rcl
js
sbb
loope
xor
ss
mov
and
push
mov
xchg
add
mov
test
dec
aaa
cmp
enter
imul
les
or
xor
mov
xchg
mov
jecxz
hlt
lcall
enter
xor
xor
jecxz
fwait
xchg
cwtl
enter
push
push
cltd
add
cmp
stos
test
inc
xor
inc
ljmp
std
add
xor
cmc
xor
rcrl
popa
cltd
or
adc
pop
outsl
mov
and
dec
jnp
adc
out
push
add
orl
es
xchg
nop
or
ret
cmp
lret
mov
fprem1
mov
push
enter
sbb
call
mov
mov
iretw
out
mov
hlt
jge
pusha
aad
ljmp
sbb
jge
outsb
scas
loopne
and
mov
jle
xchg
dec
arpl
pop
into
xchg
xor
das
push
xor
xchg
mov
pop
inc
in
in
jmp
mov
sti
loope
sub
dec
testl
inc
sbb
pop
sbb
mov
xchg
jecxz
out
in
jl
mov
mov
xor
add
repnz
cmp
cmpsl
fisttpll
pop
in
push
ret
fmul
fwait
cltd
inc
pop
daa
out
aaa
cmp
movsb
xlat
and
mov
adc
xchg
fildl
fs
jne
out
pop
mov
hlt
sub
mov
aas
cmpl
pop
sbb
lock
imul
mov
mov
lahf
mov
imul
ret
stos
ss
fsubs
add
decl
pop
sub
js
cmp
mov
in
mov
jo
lock
ret
sbbb
sub
mov
mov
orl
push
pop
sub
pushf
std
jge
dec
mov
into
cmp
ror
inc
jb
stc
out
push
inc
adc
adcb
in
push
lret
rcll
push
lods
std
stc
mov
test
mov
test
rcl
inc
adc
aaa
mov
movsl
mov
dec
adc
pop
cmp
xor
inc
fwait
sub
inc
shrb
push
mov
sub
ficompl
or
xchg
rcr
and
mov
add
movl
mov
aad
shll
nop
cltd
push
aam
ret
mov
adc
sbb
pop
jl
js
sbb
shrl
test
fildl
jo
cmp
cmp
add
push
call
movsb
rcr
and
push
xchg
jb
xchg
mov
orps
dec
movl
lret
cli
jbe
test
lcall
mov
sub
mov
dec
out
lods
stos
cmp
leave
xchg
testb
sbb
mov
add
mov
xlat
and
ljmp
mov
ljmp
retw
xor
bound
push
mov
push
pop
lds
jno
cmp
aad
mov
stc
pop
xchg
fs
add
jge
mov
and
test
shl
xor
mov
fwait
or
aad
ja
or
push
sub
aad
fists
cmpb
aaa
cmpsl
xchg
lahf
lock
sub
push
inc
jle
cltd
adc
or
adc
iret
fs
jnp,pt
inc
lods
pop
ja
aaa
call
call
js
insb
mov
aas
outsb
mov
push
stos
sbb
inc
sahf
sub
in
or
mov
pop
rcll
and
pcmpgtd
pop
mov
test
jnp
mov
enter
xor
or
nop
jne
xor
cmp
icebp
lock
jne
fstps
pop
mov
bound
stc
mov
pop
mov
adc
push
mov
leave
jge
add
xor
dec
es
lea
cmp
jecxz
ljmp
xlat
out
push
cmc
jecxz
mov
push
mov
aaa
push
loop
ret
dec
jl
out
inc
ja
push
movl
mov
stc
xor
mov
sub
or
dec
cwtl
mov
xor
jbe
xlat
in
xlat
mov
sti
xchg
mov
xadd
xorb
aas
adc
mov
and
hlt
sbb
pop
adc
cmp
sahf
in
cmp
jle
mov
pop
mov
mov
mov
lret
pop
fcompl
xchg
pop
out
jmp
xlat
sub
adc
xchg
sbb
mov
mov
xchg
or
push
inc
call
lahf
loop
jno
xor
xorl
shll
push
jmp
data16
add
push
mov
and
add
clc
outsb
jnp
fildl
insl
cmp
cmp
xor
pushf
cwtl
push
dec
mov
push
inc
jns
ret
sahf
icebp
rclb
add
cld
scas
jl
aas
cs
dec
insl
adc
xchg
mov
ret
sbb
imulb
testb
push
adc
add
sarl
jecxz
adc
mov
in
mov
pop
inc
jle
out
sub
push
cmp
xor
pop
jo
jl
stos
aas
fsubs
add
push
push
xchg
mov
fistpll
adc
ss
and
and
mov
iret
mov
cmp
fdivr
lods
push
pop
iret
push
inc
push
mov
inc
add
iret
or
jge
icebp
mov
into
xchg
cltd
adc
test
or
ret
and
pop
inc
aaa
xor
add
dec
push
stc
int
or
cltd
in
fwait
cli
lret
add
cmp
mov
dec
out
sbb
popa
sbb
leave
in
mov
jmp
push
mov
cli
js
out
scas
sbb
notl
fwait
imul
inc
addr16
imul
add
sbb
add
fcoms
inc
pop
mov
int
cs
out
jp
int3
lret
mov
push
mov
out
fwait
push
jns
mov
fsubl
js,pt
ret
fstl
jb
aad
cwtl
push
mov
test
inc
push
or
ja
fstl
mov
sbb
rorl
cli
dec
int3
lret
mov
mov
lods
rol
mov
jnp
mov
clc
popf
xchg
insl
dec
or
ror
sub
sahf
daa
test
push
fisubrs
ss
inc
lret
xchg
dec
ret
js
into
test
push
and
and
push
iret
push
add
sti
mov
xlat
lcall
sbb
stc
push
lret
mov
pop
out
push
adcb
fcomps
fistpll
jnp
std
addr16
cmpsb
add
fstpl
jp
frstor
sahf
mov
push
push
dec
mov
out
xchg
loop
gs
popa
pop
or
nop
mov
mov
push
mov
cmp
adc
inc
ja
sub
sbb
inc
stc
icebp
in
test
adc
lock
nop
call
sub
mov
jae
into
movsl
repnz
push
and
clc
sbb
mov
test
fcmovne
sub
cmp
addr16
loopne
insb
ja
cld
cmc
or
insl
mov
xor
pop
adc
mov
add
ret
std
cmp
imul
hlt
push
push
adc
dec
iret
pop
mov
popa
das
out
orl
jg
rolb
jbe
adc
popa
test
mov
fwait
bnd
es
call
xchg
sahf
adc
mov
xorl
leave
inc
jle
mov
fsubp
outsl
mov
cwtl
insb
inc
inc
fldt
test
fidivs
adc
xchg
mov
sbb
add
xlat
jo
out
sub
out
cmp
in
xor
orl
hlt
mov
loope
xchg
sbbl
push
sub
clc
jmp
mov
lods
mov
push
ljmp
daa
jge
psrld
add
cmp
addr16
out
jbe
add
mov
cltd
mov
and
jo
mov
in
xlat
mov
jle
loopne
push
adc
clc
sbb
xchg
inc
mov
insl
sbbb
daa
mov
pop
jl
popa
cmpsb
xchg
pop
fcmovne
sbb
sbb
scas
test
popa
pop
ss
mov
add
jae
mov
aas
ret
pop
jno
and
xchg
mov
mov
add
xor
rolb
leave
or
pop
or
dec
xor
scas
adc
xor
push
popa
pop
mov
fnstcw
je
sbb
mov
hlt
lock
mov
outsb
push
lret
in
lods
dec
fdivs
ja
aad
jno
rclb
pop
call
jns
pop
or
push
fnsave
test
mov
aam
es
or
popa
push
ljmp
cmp
cwtl
stc
mov
dec
and
mov
leave
jo,pt
aad
fistl
add
imul
fimull
leave
orl
repnz
push
lods
sbb
xchg
and
pop
xchg
leave
mov
outsl
popf
jno
mov
dec
push
xchg
mov
jp
adc
push
stos
adc
cld
or
jae
mov
jp
jae
push
rorl
cmp
xor
lock
xor
fwait
push
fwait
loope
and
fs
jg
mov
inc
test
jo
and
fisubrs
push
pop
add
cmp
hlt
adcb
mov
scas
imul
jnp
in
pusha
ds
mov
rcl
cltd
mov
in
pop
incl
rorl
push
sti
mov
mov
rclb
or
lods
addr16
xor
stos
in
sbb
mov
mov
xchg
adc
mov
dec
push
xor
lcall
dec
fs
pushf
inc
les
lock
xchg
pop
test
xor
outsl
out
inc
leave
cmp
movsb
mov
popa
inc
das
jmp
jp
mov
pop
push
ds
pop
xorl
pusha
rcrb
push
jle
arpl
jg
inc
mov
cmp
jecxz
dec
jae
inc
and
jecxz
jp
mov
cmc
cmc
dec
loop
out
pop
add
out
dec
cmp
repnz
mov
arpl
hlt
lret
pop
lds
leave
in
inc
stc
test
mov
mov
aaa
sbb
cmp
mov
adc
pop
jne
scas
and
mov
jle
outsl
lcall
fistpll
dec
add
nop
hlt
pop
push
adc
ss
test
adc
mov
mov
icebp
cmp
cmp
lcall
push
lods
jb
cmp
lods
or
in
push
popf
sub
and
ret
bound
push
fwait
mov
jecxz
std
push
pop
add
dec
pushf
int
add
xchg
ret
adc
popa
xchg
mov
outsb
inc
int
add
xchg
adc
loope
movsb
mov
jnp
mov
mov
and
and
lock
push
testb
adc
out
out
push
insb
lahf
jg
pop
lods
lahf
nop
fwait
loop
sbb
jecxz
std
mov
int3
pushf
pop
push
in
mov
lods
jl
rcr
out
xor
mov
push
nop
imulb
xchg
cmp
mov
ss
les
xchg
inc
flds
jge
cltd
sub
mov
jg
jbe
sbb
out
lahf
fmuls
shll
lcall
ror
xor
inc
xor
imul
daa
cmpl
pop
dec
nop
dec
repnz
popa
fs
mov
xlat
or
div
int3
xor
cmp
fdivr
into
or
loopne
jle
inc
adc
clc
mov
movsl
data16
stc
cs
sbb
mov
ret
sbb
fnsave
out
ud2
mov
pop
push
and
jne
lock
scas
or
pop
je
cmp
add
rcrl
jne
jnp
xor
xor
lock
loope
jp
out
inc
movsb
mov
xorb
push
jl
test
fmuls
outsb
roll
sub
xchg
sti
sarb
dec
pop
adc
push
pop
xchg
std
push
sub
hlt
imul
sub
rclb
mov
dec
and
jle
hlt
fdivl
lahf
cmp
in
add
mov
dec
jno
std
xchg
mov
adcb
cltd
dec
js
xchg
aam
stc
dec
xchg
lret
push
iret
jp
rcrb
sub
sub
rorb
lock
mov
daa
inc
sbb
mov
arpl
mov
jbe
sar
pop
scas
fisubs
push
sbb
and
aas
popa
jge
mov
aad
dec
and
and
cmp
shlb
pop
lods
out
pushf
jecxz
xor
sahf
xlat
xor
xor
and
mov
mov
xorb
scas
pop
cmpsb
mov
aam
cld
jae
lcall
xchg
inc
or
sahf
push
je
mov
popf
rcrb
vpsrlq
cs
mov
mov
popa
adc
iret
jno
mov
pop
pop
mov
mov
shrl
cwtl
jno
scas
sbb
cmp
in
fisttpll
xchg
sub
add
mov
movswl
adc
jl
mov
adc
enter
cmp
mov
lret
ret
add
rorb
xor
les
js
push
mov
xchg
xchg
addr16
cmc
xchg
subl
in
mov
movsb
jbe
test
mov
adc
shrb
cmpsb
cwtl
test
popa
enter
inc
mov
sti
mov
mov
cltd
sub
adc
pop
cmp
mov
repz
aaa
scas
aaa
cmp
sbb
push
or
pop
jbe
sub
pop
cwtl
repz
fstpt
ja
out
mov
xchg
stos
aam
jge
add
sub
mov
sub
add
xchg
add
mov
jb
fcomps
imul
sbb
adc
add
sbb
jne
enter
xchg
cmp
inc
pushf
lea
int3
push
movsb
in
jbe
fcmovb
xchg
sbb
xor
cmp
pop
mov
icebp
sbb
ret
pop
pop
xchg
sub
pop
sbb
xchg
xor
lods
inc
gs
jmp
and
fbstp
das
sbb
dec
xor
or
push
adcb
movsb
xchg
sbb
ss
jb
xor
fdivl
xchg
dec
sub
push
jecxz
mov
daa
pop
scas
out
fwait
mov
bound
xchg
sbb
jo
repz
mov
jns
mov
lds
out
sbb
mov
mov
mov
add
mov
xchg
les
insl
shll
leave
and
mov
movsl
in
pushf
adc
imul
and
xor
xchg
jp
jl
lcall
in
mov
mov
mov
popa
mov
ja
mov
add
leave
imul
movsl
pushf
lock
clc
jno
mov
jnp
or
das
jmp
out
mov
xchg
jns
and
mov
iret
das
mov
lret
or
jecxz
cmc
addr16
in
push
fists
adc
aam
dec
jmp
insl
icebp
inc
push
sbb
cmpsl
js
stos
aas
sub
mov
mov
aad
mov
sbb
xchg
cli
or
lods
mov
aam
es
mov
dec
add
jns
push
popa
inc
lea
xchg
push
test
test
add
pop
push
pusha
out
or
pop
imul
aam
fdiv
mov
cli
pusha
push
push
cs
les
stos
imul
popa
bt
sub
lcall
jb
addl
int3
pusha
push
pop
ret
mov
addr16
scas
push
adc
push
lods
pop
out
xor
data16
sub
xor
mov
fistpl
cmp
inc
xorl
imul
test
adc
imul
fwait
loop
idivl
jle
inc
pop
jp
int3
aad
pusha
jb
test
es
pop
rol
mov
outsb
iret
jnp
add
shrl
xor
inc
in
out
jp
add
sub
fs
push
mov
scas
scas
sub
dec
aaa
mov
ficoml
sub
push
arpl
push
mov
insb
cld
add
xor
pop
and
add
repnz
adc
push
arpl
add
fcomi
dec
dec
sti
mov
inc
inc
repnz
push
shlb
lods
pop
popf
in
xor
pop
xchg
sbbb
ss
adc
out
adc
inc
jge
cmp
push
mov
inc
std
xchg
cmp
lock
in
xor
or
cmpps
mov
les
push
cmpsl
fnstsw
test
dec
xor
loop
leave
mov
roll
pop
mov
movsl
rcrl
mov
in
jl
push
xchg
pop
sub
jnp
mov
and
lods
lea
or
lcall
imul
in
jl
lea
cmp
mov
stos
and
icebp
cmpb
notl
ss
jb
call
xor
xchg
or
mov
adc
inc
mov
adc
lret
sub
call
sbb
outsb
rolb
add
lods
dec
push
mov
stos
mov
je
js
inc
xlat
xor
push
lret
repnz
lret
cmpsb
and
in
lds
adcl
lahf
and
shrl
or
test
dec
or
in
mov
out
fwait
test
fstl
ds
test
scas
call
idivb
ds
cmp
iret
imull
xor
inc
out
ja
repnz
ss
inc
nop
cmc
outsl
sbb
mov
mov
push
repz
push
das
repz
fs
ss
mov
enter
adc
mov
push
add
pextrw
cmp
pop
xchg
decb
inc
out
imul
insl
nop
gs
or
outsl
bound
andps
or
xchg
pop
xchg
pop
fistl
or
cld
insl
inc
sub
dec
lcall
xchg
out
sarl
sbb
stos
mov
int3
mull
sub
jge
dec
sub
or
int
fcoms
sahf
mov
xchg
mov
daa
dec
test
fsts
repnz
jnp
pop
ds
pop
ds
cmc
mov
jbe
aas
push
in
xlat
rclb
jmp
cli
jnp
add
lock
lahf
mov
cmp
int3
sahf
cmpsl
fidivrl
fimuls
cmpsb
inc
push
adc
adc
lret
sahf
push
popa
push
jne
subl
inc
mov
cmc
pop
divl
xchg
and
pop
jge
in
loop
mov
mov
xchg
add
add
pop
les
sub
add
or
push
or
fwait
and
or
cmp
arpl
push
push
out
pop
mov
mov
bound
cwtl
jge
mov
test
out
cmp
bnd
sub
cmp
nopl
test
jg
inc
mov
push
ret
xchg
pop
sahf
xchg
dec
sbb
iret
and
jecxz
xchg
lods
jp
das
mov
fmuls
adc
scas
xchg
and
mov
xor
push
cmp
arpl
and
cmp
outsl
mov
inc
and
mull
push
call
loope
mov
ret
loope
das
or
call
sbb
sbb
into
pusha
adc
dec
sub
push
iret
out
jecxz
mov
mov
adc
pop
sub
dec
lcall
test
imul
lahf
fists
xlat
mov
ret
mov
test
leave
daa
mov
push
push
mov
xor
xor
loopne
fwait
cmp
inc
es
pop
sbbb
ret
adcl
push
adc
lcall
sti
gs
or
xlat
daa
mov
test
add
jb
test
sub
add
push
clc
es
in
repnz
fsubr
in
out
lret
pop
mov
daa
data16
lcall
mov
jnp
call
cwtl
ret
xchg
sbb
pushaw
xor
into
sub
fbld
xchg
sahf
pop
out
cmp
xchg
xor
ret
pop
ja
push
xlat
gs
test
int3
movsb
pop
leave
sub
dec
mov
rcr
nop
test
or
or
stc
ja
repz
sbbb
mov
pop
jle
icebp
sti
inc
xchg
adc
fsubrl
sub
sbb
sub
push
stc
das
sbb
ds
xchg
mov
aas
sub
jns
push
fistl
mov
pop
pop
xchg
lods
sbb
cwtl
inc
ret
lcall
xchg
lock
jp
scas
fwait
sub
and
outsb
in
loop
aas
sbb
mov
pop
rcl
sbb
sub
pop
out
cmp
out
popf
pop
cmp
mov
and
push
sbb
sub
lock
out
in
xchg
pushf
xor
nop
pop
and
mov
out
or
in
out
in
andl
xchg
sahf
xor
inc
jnp
shrl
hlt
xchg
push
mov
add
and
push
push
gs
rorb
mov
xchg
icebp
pop
andl
mov
fstps
mov
push
movb
adc
xor
je
push
mov
cmc
pusha
add
pop
push
ljmp
mov
inc
in
testl
mov
adc
add
mov
lret
xchg
lods
cmp
mov
rcr
outsl
ja
cmp
jne
mov
push
ljmp
inc
loop
icebp
into
jae
hlt
cmp
popf
dec
lds
scas
scas
orb
push
mov
sub
jne
mov
cmpsl
adc
xor
jecxz
mov
sub
or
dec
iret
shrl
in
loop
add
add
int
adc
rcl
mov
xchg
xchg
sbb
mov
cmp
add
aas
call
outsb
cli
sub
and
dec
or
add
push
jl
add
popa
mov
jmp
sub
fldl
mov
insb
jne
outsb
out
push
cs
imul
stos
sbb
int3
out
out
mov
dec
inc
xchg
je
pop
inc
cs
add
sbb
ror
loopne
jno
fldln2
xor
test
adc
mov
cmpsl
inc
mov
pop
les
out
and
aaa
addr16
inc
add
dec
push
loop
jl
mov
or
movsb
mov
popf
sbb
fisubrl
xor
pop
sub
dec
mov
ficoms
sbb
push
xor
dec
adc
mov
mov
mov
jae
push
jmp
adc
gs
aam
rclb
aaa
pop
int3
push
pop
in
in
cmp
sub
adc
out
push
rclb
and
adc
lock
push
push
inc
ret
movsl
mov
push
cs
cmp
pop
in
popf
loop
roll
int
cmp
sub
repnz
cld
aaa
add
jge
xor
sub
insl
xchg
mov
sbb
outsb
lds
sub
mov
push
push
push
mov
or
mov
fsubp
xor
cmp
lret
mov
mov
cmp
cmc
jb
les
and
mov
xor
lods
fimuls
jmp
stos
xchg
lods
sbb
inc
into
rcll
lock
dec
je
sub
lahf
lret
mov
sbb
cmp
arpl
jg
sbb
loope
dec
aam
fwait
inc
jae
add
mov
ret
jns
lahf
popa
and
repnz
lea
movsb
cmp
lret
inc
inc
in
add
push
mov
fbld
inc
xlat
ss
and
add
lods
pop
mov
jnp
insl
das
or
pop
fcomps
xchg
push
cmpb
push
pop
jae
inc
mov
aam
cmp
fsin
cmc
test
jne
repz
inc
test
or
ror
lahf
cmp
dec
insl
in
sbb
call
fcompl
adc
dec
sub
adc
testb
adc
jle
pop
imul
mov
adc
pmullw
jne
lock
pop
adc
lcall
mov
andb
test
out
inc
sub
dec
insb
test
mov
push
cmp
test
stos
dec
xchg
push
adc
in
js
mulb
leave
dec
scas
daa
test
push
dec
sbb
test
stos
or
push
in
push
jl
int
sbb
mov
insb
cmp
outsb
clc
data16
jns
mov
outsb
fdivr
adc
aaa
push
pop
daa
xor
addr16
cmp
jp
bound
adc
test
int
into
mov
in
js
out
mov
xor
mull
outsl
bound
push
mov
dec
sahf
mov
ljmp
lcall
sbb
or
cmp
xchg
in
lret
push
push
insb
scas
jnp
cltd
jbe
test
movsl
ljmp
sbb
mov
mov
cmp
test
into
bound
arpl
jae
scas
xchg
mull
inc
cmp
pop
xchg
imul
inc
sub
aaa
je
ss
pushl
lock
aaa
dec
add
imul
add
outsl
bound
add
test
sbb
out
repnz
mov
jno
sbb
jae
in
pushf
and
ljmp
scas
add
test
add
mov
sbb
je
enter
mov
fwait
xchg
mov
iret
lret
adc
mov
lret
adc
xlat
pop
push
dec
mov
sbb
and
inc
pop
push
pop
call
pop
dec
lret
loop
test
data16
xchg
std
popf
push
fistps
aad
cli
repnz
push
jb
in
mov
btcl
movsl
rolb
stos
enter
mov
pop
sub
push
xchg
das
pusha
std
push
nop
loop
and
push
push
aam
mov
aaa
lods
sahf
pop
leave
mov
lds
cmp
outsl
xor
sub
add
inc
ds
dec
cltd
xor
xchg
mov
xor
int
shll
jo
jl
and
lcall
daa
mov
push
sub
push
jg
cmp
iret
add
push
jae
nop
stos
pop
jmp
sahf
cs
arpl
adc
sub
les
push
sub
mov
outsl
mov
push
mov
je
add
mov
mov
jge
in
mov
test
push
or
sub
in
add
inc
mov
call
add
inc
out
imul
adcl
shl
sub
jmp
movsb
add
repz
pop
add
jo
gs
je
leave
stc
iret
nop
les
xchg
aas
sbb
fdivrs
add
test
inc
sar
and
dec
mov
cmpsb
jnp
pop
cmp
bound
xlat
push
cmp
and
dec
pop
push
test
cltd
or
dec
pop
mov
rcl
push
ret
fsubrs
std
adc
mov
rolb
cmc
lock
loope
js
inc
push
outsb
adc
cld
pop
data16
lcall
lds
jle
pop
add
cmpsb
into
sub
sti
or
cmp
xor
push
mov
xchg
jp
in
test
test
jno
sub
xor
fs
add
scas
shrb
dec
fdivrp
in
sub
out
aam
std
push
push
add
insl
dec
mov
push
icebp
rcrb
sbb
mov
das
add
add
addr16
xor
add
jae
iret
mov
das
insl
xchg
xor
cld
pop
lahf
or
cmpsb
cmc
push
xor
mov
adc
sub
lock
filds
dec
push
inc
dec
hlt
add
in
cmc
push
jmp
lahf
fcomp
and
in
xchg
stos
sbb
or
mov
shrl
cmc
mov
and
xchg
cmp
cmp
push
lods
addr16
into
mov
mov
inc
lcall
push
xchg
cmc
and
stc
cwtl
mov
loopne
rolb
popf
into
jnp
popf
cmp
cld
push
inc
incl
push
mov
or
hlt
in
cld
mov
stc
iret
pop
mov
test
in
pop
jmp
outsl
in
aas
in
xchg
scas
rcll
and
cmpsb
jmp
add
mov
or
sub
push
stos
xchg
adc
add
or
loope
insl
sbb
in
inc
ret
mov
out
xor
lods
inc
xor
mov
into
arpl
mov
xchg
mov
pop
filds
xor
xor
push
movsl
lds
insb
jge
cmp
pop
mov
sub
xlat
outsl
call
fistps
test
cmp
scas
pop
jecxz
movsl
sarl
int
std
jp
or
jecxz
lods
jg
div
jmp
cmp
jp
lock
cld
call
cmpsb
lock
test
jp
fs
xchg
andl
mov
stos
jne
xchg
cwtl
jmp
xlat
shl
lods
mul
cmp
sti
inc
sub
adc
sbb
adc
sbb
add
pop
aam
push
pop
xchg
sar
sbbb
sbb
jge
xchg
sbb
movb
cwtl
in
shlb
cmpsb
insl
clc
imul
xorl
push
arpl
mov
cld
or
cwtl
fadds
sbb
jnp
xchg
call
inc
out
repz
add
iret
in
repnz
xchg
test
sbb
popa
int3
and
push
or
in
out
mov
in
jle
and
xchg
scas
popf
fsubrl
decb
sub
sarb
call
xor
lods
mov
sarb
cmp
mov
lea
test
in
aas
mov
pop
jnp
mov
push
push
jge
imul
shlb
lcall
imul
leave
ret
and
xchg
cmp
pop
loop
xchg
mov
sub
in
or
mov
cs
ror
mov
xchg
jg
jp
lds
fisubrs
or
sahf
mov
mov
test
cmp
jae
xor
mov
stos
dec
in
lods
push
xor
movsl
mov
xor
xor
loope
jbe
loop
push
test
adc
sub
push
divl
dec
or
pop
int
inc
insb
arpl
lret
gs
stc
sub
test
dec
and
gs
gs
xchg
bound
fwait
fwait
cmpsl
pop
dec
adc
add
in
je
repnz
and
fbstp
or
jb
or
fdivrl
test
inc
pop
xor
cld
xchg
mov
sti
jno
cmp
out
out
dec
nop
cs
mov
nop
pop
mov
jmp
lret
stc
jge
out
xor
scas
cmp
push
jl
fisubs
jb
inc
sbb
dec
lcall
inc
xor
pop
and
je
and
cli
lret
add
jo
inc
stc
mov
sarb
and
leave
xchg
mov
jg
xlat
pop
sub
addr16
mov
push
movsb
cmpsb
clc
xor
jg
ljmp
popf
jb
out
addr16
sbb
pushf
das
stc
cwtl
push
pusha
mov
xlat
push
pop
orl
fidivrs
fisubrs
xor
xor
mov
pop
int
dec
push
or
decl
and
test
jns
repz
mov
clc
in
add
popf
leave
rcrb
divb
bound
dec
dec
dec
out
fwait
hlt
jmp
test
sahf
mov
movsb
shll
dec
and
mov
ss
xchg
fwait
stos
mov
lock
clc
xchg
loope
pop
pop
fwait
mov
sub
or
fldl
jg
cmp
push
xor
ja
mov
mov
into
jnp
sub
jmp
fldt
sysexit
in
xchg
mov
stos
and
xchg
outsl
sub
inc
mov
cmp
pop
dec
cmp
dec
dec
add
lcall
sub
xlat
mov
sbb
lds
aas
push
lods
mov
mov
xchg
subl
push
push
mov
sbbb
mov
xchg
sbb
popa
dec
xchg
aam
test
mov
ss
mov
sbbb
ja
inc
mov
jp
add
je
dec
movsb
rcrb
jmp
or
push
mov
adc
pop
rclb
dec
mov
incl
mov
add
test
mov
shrb
shlb
mov
sahf
and
mov
popa
sbb
xor
mov
pop
in
lds
dec
cld
pushf
imul
loope
dec
add
imul
mov
pushf
push
pop
fisubs
mov
aam
jl
out
xchg
repnz
rorb
sub
jmp
push
inc
in
or
cld
or
and
insb
lret
ret
fsub
sar
jmp
jl
cmpsl
dec
xor
push
stc
dec
xchg
pcmpgtd
repnz
out
lea
cmp
scas
movsl
mov
pop
dec
add
cmp
xchg
xchg
into
cwtl
sahf
add
aas
dec
mov
cli
imul
stc
lea
jns
je
repnz
jecxz
insl
push
pushf
rorb
mov
cmp
push
mov
cmp
cs
sbb
push
imul
cmpsl
in
pop
add
or
or
jnp
inc
mov
lcall
mov
mov
and
mov
mov
ret
scas
adc
dec
daa
or
fistpll
ret
mov
mov
sub
fs
loop
sahf
mov
icebp
jns
jbe
pop
dec
pop
adc
out
sub
or
sarl
inc
and
fbstp
push
add
mov
addl
or
pop
test
pop
les
adc
ljmp
cs
aas
push
pop
clc
xchg
jle
scas
in
xchg
mov
jge
dec
scas
daa
mov
imul
mov
jbe
shlb
mov
and
jb
push
lods
mov
test
add
mov
or
fisubrs
in
jg
pop
dec
andw
pop
xchg
fists
nop
dec
pop
mov
mov
test
inc
call
and
push
cwtl
hlt
les
mov
push
xlat
jae
stc
mov
or
fldenv
mov
int
out
pop
pop
stos
and
sub
push
and
pop
test
cmc
in
sub
push
xor
scas
rcll
insb
xchg
inc
fsubrs
sub
and
mov
movsl
xchg
adc
shr
jns
movsl
mov
es
mov
inc
mov
adc
movsb
enter
mov
cli
in
or
lock
cli
fwait
hlt
mov
ss
push
mov
cmp
int
push
outsb
cmc
jbe
lea
mov
mov
push
jnp
push
cmp
adcb
std
jmp
fmuls
dec
fs
push
nop
mov
out
test
and
int
jne
cwtl
stos
jmp
mov
jmp
inc
add
aaa
loope
stc
jp
mov
cmp
inc
adc
or
or
daa
jmp
mov
imul
insb
lret
xchg
jg
mov
or
cmpsl
jae
mov
mov
test
xor
movsb
and
inc
or
addr16
push
or
mov
shll
xor
or
mov
mov
and
mov
xor
int3
sbbb
popf
adc
mov
xchg
rolb
add
lret
cli
jg
cld
out
jno
hlt
adc
or
sbb
pop
cmc
push
inc
push
push
cmpsb
sbb
sti
ret
push
fisubs
mov
push
xchg
arpl
jae
inc
clc
xchg
mov
sbb
sub
sbb
cwtl
dec
jge
mov
pop
fucom
fnsave
sub
arpl
arpl
scas
inc
or
insb
popf
hlt
jle
sbb
in
rorb
shlb
rcrl
loope
fdivrl
test
cmpsb
xlat
pop
lods
outsl
pusha
dec
cmpsb
xchg
fistl
mov
push
sub
out
mov
and
mov
fdivs
or
dec
xor
and
arpl
add
or
push
lahf
out
cmp
add
out
xchg
xchg
push
in
into
loop
or
or
iret
pusha
std
fwait
cltd
jno
cwtl
and
loopne
out
rcll
mov
jb
adc
aaa
lock
and
stc
iret
inc
add
fs
sbb
jecxz
rorb
aad
push
sbb
inc
lds
mov
inc
stos
nop
test
test
push
insb
clc
cmp
aas
push
push
lahf
pusha
mov
fistl
out
pop
push
ret
sub
cmp
xlat
fcmovnb
sub
pop
jno
imul
jno
loopne
mov
adc
int
cs
mov
out
push
xchg
mov
ret
push
sub
mov
pop
cmp
stos
fs
repz
cmp
xor
dec
and
jae
adcb
add
push
sub
pop
daa
jl
test
or
call
sbb
mov
sbb
leave
sub
inc
rcrb
jnp
les
std
fstpt
and
xor
push
push
and
js
add
xchg
movl
lret
icebp
sti
movsb
push
cmp
dec
push
jns
mov
and
dec
cmp
lea
lahf
sbb
int
and
imul
jmp
push
stos
repz
lds
shll
std
into
outsl
fnstsw
jge
aam
mov
sub
pop
cmpsb
jnp
dec
mov
into
popf
insl
add
fs
xor
jb
sub
and
sbb
or
cmp
leave
aad
mov
icebp
pop
dec
pop
push
out
dec
jns
sbb
rcrl
sub
dec
aad
mov
sahf
sub
or
add
adc
inc
pop
je
fwait
and
xor
aas
lods
or
cli
cwtl
jnp
mul
or
hlt
fldl
fadd
xchg
mov
test
inc
xor
sarb
sbb
loope
adc
and
stos
push
push
pop
rcl
pop
mov
jge
fsubs
fisttpll
cmp
cmp
ljmp
bound
xchg
sbb
cmp
fwait
cmp
imul
add
sub
pusha
mov
sarl
fsubrs
je
pop
shll
mov
es
dec
mov
and
pop
lcall
sbb
inc
sbb
push
fiaddl
push
inc
cmpsb
in
dec
push
test
loop
cmp
addl
ret
dec
lods
movd
fadds
cld
jae
mov
shll
dec
sub
stos
xchg
inc
or
adc
xchg
frstor
jnp
xchg
mov
roll
and
mov
das
test
fisttpll
pop
push
sub
pop
sub
sbb
cmpxchg
inc
mov
ret
inc
test
clc
xlat
add
dec
mov
rolb
lods
fsts
sahf
or
pop
cmp
mov
inc
jb
aam
std
dec
pusha
dec
int3
or
into
xor
dec
cld
ljmp
pop
and
ja
stos
xchg
xor
sub
jge
arpl
mov
pop
or
shlb
movsl
pop
cli
ljmp
scas
and
mov
inc
mov
xor
test
sbb
lahf
mov
jnp
push
cld
push
div
sub
xchg
fs
xor
in
in
sub
sub
ret
in
enter
add
sbb
cmpb
mov
cmp
cmp
outsl
and
push
ss
orl
cmp
adcb
ss
sub
fdivr
mov
gs
jge
icebp
jno
lods
adcl
jecxz
stos
roll
aas
ljmp
aaa
adc
push
daa
sbb
or
vdivps
dec
mov
loop
adc
mov
mov
ficompl
lcall
and
mov
sahf
pusha
iretw
mov
jne
jmp
xor
push
dec
inc
jmp
js
and
ss
ljmp
hlt
movb
loope
mov
jb
lock
jns
push
add
movsl
sti
sub
leave
lcall
xor
or
mov
lods
dec
fldl
inc
mov
stc
inc
aaa
dec
or
cld
in
out
sub
ret
jns
adc
push
mov
mov
sbb
test
aaa
jmp
push
inc
inc
shll
lahf
int
jecxz
and
inc
repnz
cmpsb
clc
dec
mov
outsb
lea
data16
insb
es
fxam
mov
dec
ds
int
mov
cmp
pop
dec
jo
xor
pop
sbb
pop
mov
insb
movsb
das
incb
mov
lahf
jge
dec
sbb
scas
lcall
test
outsb
call
je
enter
xor
push
mov
jmp
push
pop
fwait
pop
loop
fwait
jmp
lret
mov
lock
pusha
adc
xchg
shll
or
out
dec
dec
push
cld
dec
xlat
cmp
nop
sbb
sbb
mov
xor
cmpsb
enter
jns
dec
xchg
dec
cmp
fstpl
decb
jb
imul
cmp
les
inc
imul
mov
jae
aad
push
adc
stc
lea
push
dec
inc
cwtl
cmpsl
cmpsl
cmp
dec
mov
cli
xor
or
fcom
call
das
mov
mov
sbb
mov
sbb
repnz
enter
sub
test
rolb
sbb
sub
adcb
call
and
mov
push
push
and
mov
push
dec
xchg
mov
in
aad
cmc
sub
sti
test
in
lahf
and
ds
loopne
cmp
add
mov
xchg
repz
xor
repz
pop
aaa
inc
subb
mov
loopne
scas
lods
and
movsl
sbb
rcrl
mov
fpatan
mov
add
mov
jmp
rcr
jmp
lock
outsb
dec
dec
cmp
dec
pop
or
out
subb
dec
pop
add
mov
sbb
lds
pop
test
inc
aad
xor
mov
daa
aaa
mov
sbbl
mov
adc
xchg
add
xchg
and
xchg
push
sbb
inc
cmp
and
add
test
sbb
fcoml
or
mov
jno
je
inc
mov
pop
pop
push
inc
rcl
ficoml
loope
push
jmp
cmc
jae
mov
lods
push
sahf
lret
js
cmpsl
inc
aaa
popf
or
stc
ja
mov
dec
jmp
pushf
pop
adc
dec
cmp
movsb
mov
lods
shrb
or
inc
adc
add
push
and
je
jne
int3
outsl
sub
mov
imul
loop
adc
jbe
pop
mov
insl
cli
xor
adc
xor
ds
push
leave
mov
adc
inc
jle
mov
sbb
dec
andb
mov
or
sti
orb
cmp
cmp
sub
mov
and
sbb
rorl
push
loope
mov
dec
cmp
adc
ja
cmp
jge
jns
push
les
sarb
in
popa
icebp
int3
popf
pushf
repz
mov
scas
ss
pusha
sbb
xor
mov
rclb
inc
push
mov
inc
outsb
fwait
ja
cld
out
fucom
pop
js
stc
adc
jecxz
es
subl
pop
sahf
fcomip
cli
sbb
addl
pop
xlat
and
fs
dec
add
adc
push
xchg
jno
xchg
add
pop
jbe
xchg
jmp
mov
aaa
mov
jge
push
jnp
pop
pop
sub
sbb
stc
mov
dec
popf
data16
aad
lret
xor
push
cmpb
pop
xor
fs
and
and
mov
pop
je
xchg
xor
or
inc
inc
fmuls
sub
xor
jle
jge
roll
imul
lods
pop
andb
fsubrl
mov
lods
push
adc
xchg
mov
test
in
mov
daa
push
push
mov
arpl
and
pop
mov
mov
jmp
dec
das
fildl
dec
fiaddl
and
outsl
or
iret
imul
xchg
loopne
lahf
dec
add
push
repnz
pop
dec
cmpsb
shll
jmp
fsubrl
hlt
mov
xor
mov
daa
ss
fstpl
lock
inc
mov
jne
cmpxchg
pmuludq
mov
fcomps
inc
or
andb
mov
cmp
push
push
jmp
rcr
xchg
nop
cmpsl
test
push
mov
and
lret
sbb
outsl
cmp
cld
imul
dec
xchg
cltd
xchg
mov
inc
stc
pop
mov
mov
cmp
and
push
sub
mov
pop
lahf
jo
cmp
outsl
push
test
jmp
gs
inc
repz
cltd
dec
mov
outsb
jnp
xchg
dec
sub
lods
ret
fsubr
testl
mov
call
insl
sarb
fldl
lret
jmp
mov
and
ficoml
in
loop
xor
lret
popa
pop
adcl
fstpl
mov
xor
add
hlt
into
mov
test
add
stos
cmp
adc
lds
push
les
mov
xlat
mov
mov
js
rcr
aaa
in
jne
fwait
pop
xchg
adcl
xor
jg
pop
jo
in
aaa
mov
mov
inc
adc
xor
push
aas
rorl
pop
lods
mov
mov
jmp
or
cmp
nop
mov
mov
or
stos
xor
mov
adc
mov
roll
nop
or
mov
je
push
popl
iret
aam
mov
jb
outsl
sub
in
jg
inc
std
jo
dec
gs
movsb
push
clc
data16
test
nop
push
mov
mov
add
lret
sarb
cmp
pop
inc
push
push
cmpsb
daa
mov
loopne
out
stc
xor
mov
push
sbb
enter
test
mov
adc
bound
cmc
and
adc
mov
lret
dec
jg
inc
sbb
xchg
mov
jecxz
aad
cli
pop
loopne
mov
cltd
inc
fmuls
leave
mov
or
cli
mov
and
in
cli
xor
sub
cwtl
aad
adc
stc
imul
sub
stos
aad
cmp
cwtl
sub
mov
xchg
int
hlt
sub
sub
movsl
xchg
pop
inc
enter
out
mov
sbb
push
pop
test
mov
sub
jmp
lahf
test
fstps
adc
lods
xchg
ds
sahf
or
xor
pop
mov
nop
xchg
cltd
int3
loope
inc
in
jo
and
and
inc
fsub
aam
adc
out
test
sbbl
in
aaa
pop
stc
lock
xchg
test
lret
daa
addr16
outsl
cli
in
pop
stc
push
jle
lods
mov
dec
sbb
arpl
pop
into
adc
cwtl
testl
stos
adc
out
cwtl
mov
lods
xor
xchg
xor
push
imul
shl
mov
das
shlb
in
aas
xchg
imul
pop
and
push
inc
into
aad
jno
imull
mov
fs
ja
push
into
mov
pop
insb
sub
sub
xchg
and
in
aad
or
inc
cmc
cmc
fs
pop
outsl
pop
xor
rcl
fucomip
add
adc
mov
bound
xchg
and
in
push
test
add
pusha
xor
cmpsb
jg
test
mov
add
mov
sub
mov
xchg
loope
fwait
mov
arpl
pop
and
xor
ret
mov
cs
or
pop
cmp
pop
xchg
dec
pusha
movsb
lds
xorl
js
or
push
enter
jno
mov
mov
mov
inc
mov
stos
loopne
xchg
sub
add
push
out
lock
cld
test
out
clc
pop
xchg
out
int3
stos
arpl
aas
out
mov
push
jnp
rcl
cs
add
pop
push
mov
nop
ficomps
imul
and
cmp
xchg
cwtl
aad
js
lds
cwtl
push
dec
inc
adc
cli
dec
sti
adc
inc
loopne
int3
push
clc
dec
xor
stc
xchg
fisttpl
repz
fadd
and
add
mov
rcr
int3
xor
shl
mov
jmp
mov
out
jl
inc
out
jno
sub
xor
or
inc
aam
jecxz
std
sbb
repz
sbb
je
xor
mov
jmp
iret
dec
insl
andl
mov
push
jg,pn
adc
lret
out
in
lret
and
outsb
inc
in
xchg
arpl
xor
jnp
mov
loop
mov
push
add
scas
add
test
stc
movsb
xlat
dec
insl
popa
inc
jecxz
xor
pusha
cwtl
gs
std
lods
cmc
sub
mov
lret
jo
mov
lahf
sbb
jne
frstor
dec
sbb
pop
subl
pop
sbb
mov
or
adc
pop
imull
and
test
or
ret
push
int3
iret
dec
or
imul
lahf
js
imul
scas
imul
dec
jmp
jns
sub
mov
sbb
repnz
jge
xor
andl
in
jno
cltd
mov
lcall
into
jmp
or
ljmp
jb
xchg
mov
push
mov
adc
pop
cmpsl
cmpsl
ljmp
push
cld
add
sbb
aaa
sbb
fisubrs
pop
movsb
jle
adc
xlat
mov
sub
imul
es
jb
mov
stos
sbb
cli
mov
cltd
mov
jp
xchg
into
and
loopne
sub
pop
adc
loop
mov
popf
xor
repz
adc
mov
out
cmp
or
es
stc
xor
jno
push
xchg
in
and
out
gs
mov
add
sarb
lret
push
pushf
cmp
movsl
jne
aad
sarl
mov
xchg
push
hlt
mov
rcr
add
loopne
cs
lahf
pop
cwtl
ljmp
int
inc
jne
xor
cs
sub
stc
push
push
adc
lea
pop
or
fildll
xor
add
outsl
cmpsl
xorl
iret
push
pop
mov
mov
inc
cmc
in
push
fnstcw
ds
sahf
pop
cmp
subb
dec
xchg
out
pop
dec
adc
xchg
test
scas
mov
xchg
mov
mov
mov
or
sub
or
mov
inc
test
int3
cmpsl
js
insl
mov
lods
mov
jb
call
push
gs
insb
movsb
add
push
adc
push
sbbb
in
sbb
dec
cmp
andl
or
rcrl
lret
test
xor
xchg
push
leave
fstl
pop
inc
shrb
inc
fucomi
sub
lret
int3
pop
dec
fs
push
cmp
mov
inc
push
jnp
mov
sbb
imul
lar
pop
push
stc
and
dec
adc
js
xor
js
mov
fldenv
hlt
mov
out
insb
inc
pop
sub
insb
in
out
or
jmp
mov
arpl
ficompl
cmp
mov
loope
jnp
dec
sub
push
and
and
mov
push
mov
and
ljmp
mov
stc
stos
lods
fnstsw
test
sub
fimull
lods
cmp
leave
mov
out
push
stos
xlat
icebp
ret
enter
or
and
test
pop
in
or
or
int
lcall
or
gs
sbb
mov
jns
ss
daa
pop
imul
inc
and
adc
rolb
sub
lret
xchg
inc
jno
and
mov
push
ror
jbe
mov
insb
arpl
sbb
dec
push
int
mov
ljmp
lret
mov
pop
insl
rclb
stos
ljmp
adc
call
mov
inc
in
ret
std
gs
dec
loop
std
in
jge
jg
push
je
and
adc
and
rcr
aam
mov
dec
lahf
dec
add
add
test
sub
or
mov
xchg
xchg
xchg
je
pop
jo
mov
loop
lret
xchg
mov
stos
std
mov
mov
lcall
scas
push
add
pop
push
clc
js
fsubrl
xchg
out
nop
pop
shr
aam
jns
adc
ljmp
in
push
and
arpl
mov
dec
jge
sbb
out
sub
outsl
test
pop
jl
xchg
mov
ja
and
xchg
add
out
or
mov
ss
roll
xchg
lods
xor
jnp
cmp
xchg
sbb
xchg
cs
sbb
xchg
xor
sbb
push
inc
add
adc
push
mov
fldenv
movups
pusha
sbb
push
and
or
loope
icebp
mov
xchg
in
shrl
lea
push
mov
in
xchg
outsl
inc
sbbb
xlat
xchg
pop
jmp
add
cmpb
xor
mov
mov
jl
cwtl
adc
jne
pushf
dec
and
cwtl
inc
insl
inc
nop
fsubrs
insb
dec
fs
mov
push
ficompl
stc
decl
out
aas
adc
mov
and
stos
mov
sbb
lahf
cmp
cmp
imul
inc
pop
mov
loope
frstor
jno
inc
test
in
or
or
mov
out
mov
or
gs
lea
into
xchg
mov
imul
orl
fisttpll
stos
cmc
mov
mov
mov
hlt
inc
inc
mov
cmp
cmp
push
pop
push
xchg
pusha
loope
or
neg
mov
jmp
push
and
pushf
and
lret
popa
sub
push
imul
sbb
or
imul
popf
lret
sbb
cmp
sbb
out
and
mov
or
fnstenv
adc
in
jb
inc
jmp
mov
dec
sub
sarl
mov
mov
push
data16
add
fisubrl
nop
icebp
mov
add
lahf
cmp
push
test
or
cli
in
loope
add
xchg
fadds
sub
sbb
jp
jb
mov
push
push
daa
push
paddusw
mov
aas
adc
or
add
and
adc
pop
call
dec
or
insb
scas
jno
pop
lods
fcoml
test
mov
imul
cld
push
push
out
cmp
ds
cli
daa
repnz
repnz
sbb
mov
fwait
pop
push
add
fs
lods
les
adc
aas
sub
mov
jbe
xor
push
jp
dec
shll
shrb
test
rclb
push
dec
jne
mov
push
test
dec
popf
pusha
adc
lahf
push
jl
push
cmpsb
mov
int
xchg
push
sub
test
push
mov
add
adc
out
add
lret
push
sub
rorb
loop
orb
push
cmp
push
lods
iret
ret
stc
mov
test
iret
xchg
mov
xor
movsl
cmp
sub
cmp
cmp
mov
push
sbb
push
mov
adc
insl
lret
loope
mov
dec
mov
mov
adc
out
lea
push
jl
mov
cmp
dec
push
cmp
scas
fdivp
xchg
loopne
dec
mov
cmpsb
cltd
pop
insb
cmpsl
sbb
cli
aam
inc
fwait
hlt
jae
dec
iret
int
jecxz
lods
mov
add
mov
clc
mov
pop
push
push
mov
mov
bound
into
les
lods
cmp
test
xchg
and
out
pop
dec
cmp
or
sub
jno
call
sub
int3
pop
stos
mov
jno
and
push
std
shrl
inc
and
mov
mov
inc
bound
sarb
and
ss
test
mov
cld
mul
scas
mov
stc
das
sbbb
icebp
icebp
rclb
xor
xchg
mov
sbb
dec
mov
out
ret
jo,pt
push
push
inc
pop
pop
or
cli
data16
in
fldl
nop
mov
xor
pop
popf
popl
bound
add
testl
daa
arpl
rclb
dec
call
movsl
lock
inc
push
and
jp
shlb
int
rorb
mov
jge
xor
sbb
sub
mov
pop
in
pop
push
jp
mov
inc
je
lods
jo
repnz
and
and
lock
mov
xor
ljmp
mov
pop
test
xor
std
add
fcompl
das
xchg
jno
roll
scas
mov
loopne
jbe
mov
je
or
pusha
xchg
shr
lret
lods
jge
and
insl
mov
mov
push
xor
jp
add
fisubrl
xor
pop
outsb
cltd
add
push
sarl
pop
pop
call
pop
mov
mov
movsb
fisttpl
sub
scas
daa
sub
adc
stc
xchg
pop
lods
outsb
fistl
inc
iret
paddb
shlb
mov
js
cmpsb
cmp
movsb
pop
fcomps
lods
mov
lret
rolb
xor
repz
xlat
sub
in
pop
jne
cltd
inc
jno
repz
cmp
xor
loope
cmp
aas
pop
xchg
fwait
pop
and
lea
aam
jae
cltd
mov
dec
pop
faddl
cmp
lds
je
inc
push
and
mov
push
cmp
xchg
lds
js
pop
lahf
mov
pop
add
clc
or
test
and
dec
subl
dec
mov
push
mov
outsb
or
lret
mov
test
into
into
addb
insl
push
and
mov
jb
and
and
inc
pop
loope
jecxz
aad
daa
add
xchg
test
aam
xor
jle
daa
sbb
xchg
hlt
test
and
mov
imul
jl
jb
dec
pop
scas
xchg
fsubr
repnz
js
rolb
mov
mov
push
jmp
and
bound
or
pop
lret
stos
sub
push
jbe
shll
jno
fsts
lea
sbb
lahf
push
jge
mov
pop
mov
les
cmpsb
sbb
je
mov
iret
shlb
cmp
cmp
push
movsb
pop
xchg
icebp
fs
xchg
inc
jle
xorb
lahf
cli
outsb
jge
inc
xor
aad
out
mov
pop
stos
inc
xchg
mov
repz
pop
xchg
mov
push
inc
nop
arpl
pop
bound
xchg
sbb
mov
fwait
cld
pop
mov
xchg
out
mov
stc
pop
sub
jg
sbb
aam
jae
cmp
ss
xorb
pop
mov
jmp
mov
xor
mov
fisttpll
aas
je
mov
outsl
add
jg
movsl
xor
mov
lret
jb
lock
ljmp
xor
pusha
movsb
push
movsl
sahf
scas
push
or
repz
cmp
cmc
outsl
xor
jnp
mov
je
fsts
add
cli
lods
popa
or
test
sbb
add
push
and
jb
lahf
cli
hlt
push
ja
jp
gs
inc
es
out
mov
inc
icebp
push
int3
ss
jne
lahf
and
pop
fcoml
and
enter
stc
xchg
clc
jmp
push
xchg
insl
addb
into
movq
inc
jne
xor
or
cmp
push
lea
inc
adc
dec
cmp
daa
jp
push
loop
cld
lcall
std
ret
repz
sbb
inc
jno
push
insb
push
sbb
push
sub
push
push
sbb
int
bound
xchg
sahf
stos
mov
sahf
pop
lea
popf
sub
lock
or
test
jmp
pop
ljmp
push
mov
push
and
inc
and
jns
dec
and
in
mov
stc
mov
fstpl
out
pop
cmp
aad
addr16
adc
aad
les
ja
mov
sbbb
add
jl
jg,pt
loope
cmp
lods
inc
cmc
xchg
popf
mov
jbe
dec
mov
adc
adc
test
xor
mov
cmp
lea
push
pop
lret
test
mov
je
pop
inc
psubd
adc
sti
lds
mov
hlt
pop
mov
sbb
lret
icebp
outsb
mov
or
addr16
insb
mov
lds
jne
mov
cmp
roll
ss
push
roll
push
xlat
push
movsb
xchg
daa
sub
stos
xchg
cmpsl
or
push
subb
aas
imul
push
xor
sub
mov
cmp
pop
mov
jle
lret
sahf
fnsave
push
pop
adc
dec
xchg
jle
loope
daa
push
out
repz
sahf
cmc
aas
cmpsl
mov
fnsave
inc
fisubrs
push
out
stos
fwait
leave
sub
cmp
pop
mov
and
xor
adc
cmp
adc
push
outsb
cwtl
sbbl
dec
xchg
test
adc
jg
dec
es
mulb
icebp
cli
pmaxub
gs
sti
jnp
pop
inc
pop
mov
lret
mov
test
lret
mov
pop
sbb
mov
ds
nop
leave
jnp
mov
fdiv
das
scas
cmp
push
fistpl
leave
mov
cmpsl
adc
xchg
leave
sbb
and
gs
aad
shll
shll
aad
mov
les
add
lods
fisubrs
mov
orb
icebp
test
sti
add
mov
cli
xchg
test
mov
cmpsl
xchg
lock
mov
iret
fcompl
jno
rorb
cmp
jge
jmp
xchg
gs
ss
inc
insb
mov
xor
cwtl
jl
push
fs
clc
hlt
mov
push
push
addr16
dec
cwtl
inc
daa
ds
xor
add
outsb
jb
push
out
push
or
inc
and
ja
pusha
mov
add
lret
mov
sub
sarl
mov
idiv
roll
out
cli
aas
mov
aad
sub
sub
sub
mov
mov
mov
mov
mov
mov
scas
xchg
iret
push
in
xorb
hlt
cmp
addr16
outsl
ret
sti
fistps
out
mov
push
repz
sub
loop
fdivr
cli
mov
mov
or
adc
bound
add
loopne
orl
inc
mov
roll
mov
cmp
xchg
daa
inc
scas
xor
adc
push
cli
jecxz
lods
mov
jns
testb
imul
push
xor
repnz
inc
or
lods
outsl
das
and
out
inc
fidivs
mov
int
gs
pop
outsl
in
rorb
bound
in
pop
std
jecxz
push
shrl
jno
out
add
repnz
dec
pop
fmuls
sub
out
dec
fwait
mov
or
xchg
popf
jmp
outsb
inc
repnz
xchg
pop
sub
bound
int3
push
and
dec
pop
adc
outsl
repnz
mov
sub
pusha
mov
adc
cmpl
adc
out
mov
jb
sbb
mov
pop
movsl
or
and
sub
mov
and
add
push
mov
cs
ror
xchg
ficoms
sub
in
dec
je
imul
jae
jp
pop
sub
test
push
push
inc
out
subl
test
and
sti
popf
lods
jns
push
mov
and
gs
call
and
ds
int3
push
sbb
stos
ret
xchg
mov
cmp
xor
fwait
sbb
test
out
mov
jecxz
xchg
mov
aam
adc
add
pop
incl
sahf
jns
push
das
or
insb
aad
imul
in
nop
xor
in
es
sub
or
in
cmpsb
dec
sbb
sbb
xchg
or
jmp
rcrl
dec
outsb
xchg
fs
push
je
and
dec
out
cmp
pop
mov
aaa
insb
and
in
add
fwait
jmp
fiadds
or
add
in
fisttps
jae
cmp
mov
mov
es
push
cmp
movsb
jle
sbb
cs
shrl
aas
sbb
arpl
test
cltd
mov
jmp
sub
insl
in
jo
push
jae
or
inc
mov
push
dec
loop
shl
add
jbe
repz
stos
adcb
xchg
shr
je
insl
ret
mov
mov
call
sub
lcall
fwait
push
scas
sbb
js
or
rol
jge
jae
push
jle
jnp
pop
inc
jl
adcl
int
adc
push
fcoms
je
jo
aas
push
sbb
lds
and
xlat
add
mov
xchg
mov
notb
imul
idivl
pop
mov
mov
jne
test
mulb
int3
push
enter
lret
mov
leave
dec
popa
pop
dec
imul
push
adcl
push
jns
das
imul
repz
xor
ja
scas
es
adc
imull
dec
inc
mov
jb
out
or
cmp
gs
add
mov
ret
dec
sbb
arpl
jae
mov
cwtl
mov
jge
test
add
je
std
orb
adc
and
mov
xchg
rcll
lret
mov
cld
push
xchg
mov
ss
dec
inc
insb
addl
pop
ret
pop
jb
js
js
inc
pop
jo
std
dec
dec
mov
idivl
testb
cmpsb
mov
enter
xchg
mov
outsb
sti
enter
cmp
fiadds
fdivrl
jae
mov
imul
fiaddl
xor
push
xlat
dec
dec
test
loop
clc
out
imul
aam
pop
cmc
imul
jno
mov
imulb
out
push
cmp
insl
aad
xlat
add
movsl
iret
push
cltd
sbb
sbb
dec
ljmp
pop
mov
pop
loop
les
sub
cmp
sub
out
inc
sub
cmpb
mov
test
and
data16
jge
loop
sub
inc
add
cmp
jp
sbb
push
mov
mov
dec
in
clc
mov
imul
dec
cmc
sub
in
sub
clc
movsl
test
pop
pop
cwtl
xor
dec
fildl
fistl
jmp
cmp
jle
inc
out
or
xor
mov
aad
pusha
push
dec
lods
and
rorl
sub
pop
push
jl
pop
ret
call
mov
sub
test
cs
mov
lock
pop
xor
pop
or
adc
fdivr
repz
nop
xor
and
ds
sub
pop
push
adc
mov
ficomps
pop
negl
mov
xor
loope
mov
xor
js
ja
adc
push
test
fldcw
or
inc
cs
mov
cld
pop
dec
adc
push
push
ss
out
sbb
or
xor
pop
jge
jmp
xchg
sub
cmc
and
and
push
ljmp
xlat
mov
push
aaa
or
pop
jne
call
in
outsl
dec
mov
lret
lahf
mov
cmp
cmc
dec
add
mov
test
in
dec
xchg
sub
addr16
sub
xchg
mov
ja
idivl
xchg
xchg
fisttps
inc
in
sti
lods
bound
mov
cld
adc
inc
mov
roll
jnp
imul
jp
aam
adc
js
dec
sbb
fnstsw
mov
xor
xchg
sub
lock
aas
adc
jge
cmp
arpl
bound
fisubrs
shrb
inc
jp
cwtl
adc
jecxz
sbb
js
loope
mov
movsb
aad
arpl
cld
fidivs
stos
cld
mov
xor
add
test
xchg
xor
xchg
mov
in
popa
leave
es
and
sub
add
pushf
xchg
stos
iret
sub
ret
fwait
add
push
sub
mov
ret
xchg
xchg
pop
xchg
xorb
addr16
inc
add
test
pop
mov
out
and
rcl
sbb
push
pop
cmp
pop
lea
sbb
jecxz
push
lods
iret
mov
sbb
xchg
sbb
add
mov
clc
lock
pop
mov
sbbl
iret
jle
imul
stc
pop
mov
jo
les
pop
fists
jno
push
cmp
xlat
ss
scas
lcall
pop
fwait
bound
inc
sub
lock
adc
shrb
lods
add
addr16
iret
xchg
xor
jo
adc
sti
loop
xor
add
xor
add
test
dec
lock
lahf
mov
into
sub
add
cmp
ss
add
mov
push
xchg
mov
ret
rorl
cmp
outsl
inc
or
sbb
sbb
sbb
in
dec
data16
arpl
pushf
jne
jno
push
dec
push
mov
pop
sahf
idiv
stos
mov
mov
jns
iret
loop
fisubs
ljmp
cli
cmpsb
jno
or
and
cmpsl
dec
ret
call
std
xchg
pop
outsl
repz
jg
mov
or
pop
cmc
repnz
jb
push
stos
push
stos
out
bound
mov
pop
dec
mov
loope
cmp
push
in
xor
lcall
loop
nop
push
jmp
dec
popa
scas
insl
pop
lods
and
jns
cwtl
xchg
adc
out
add
addr16
xchg
outsl
cltd
insb
repz
pop
scas
daa
out
push
inc
pop
pop
pop
out
stos
repz
imul
fsubrl
negb
jbe
addr16
test
addr16
ret
xchg
loop
jb
fwait
sbb
sub
xor
lret
loop
sub
pop
daa
popf
push
or
loope
xchg
xor
inc
mov
call
jbe
lods
add
xor
push
mov
add
nop
inc
cltd
fs
imul
inc
in
mov
lret
in
mov
lea
fistl
xor
fists
sub
or
fstpl
test
sbb
xchg
ljmp
and
fistl
add
pop
repnz
out
lods
mov
out
xchg
out
xchg
inc
fucom
sub
mov
add
adc
mov
in
fidivrs
jne
or
pop
pop
sub
std
inc
loopne
loopne
je
mov
and
fnstenv
and
xchg
stc
pushf
mov
mov
push
addb
jge
push
mov
mov
pusha
cltd
xchg
lret
outsb
dec
mov
shrb
or
add
mov
loop
jl
das
divb
mov
pushf
push
cmp
push
fsubs
sub
nop
outsl
orb
jmp
cmp
rcl
dec
or
add
sub
jl
dec
inc
cs
out
js
scas
clc
jbe
sti
mov
fsubp
nop
ret
xchg
dec
mov
fwait
push
fs
add
hlt
inc
lods
movb
es
fdiv
add
lea
into
ficompl
divb
inc
dec
aam
mov
sti
fwait
push
xlat
negl
mov
adc
xchg
shrl
or
sub
add
mov
or
dec
push
int3
push
sahf
sbb
pop
mov
icebp
add
test
cmp
mov
cmpsl
outsb
aam
dec
repz
pop
dec
divl
xchg
add
movsb
pop
jg
mov
les
sub
adc
jge,pn
sub
inc
int
mov
sbb
rolb
movsb
daa
stc
jo
cmp
pop
fwait
into
or
ja
out
lods
and
inc
and
pop
mov
int
sbb
or
jecxz
ja
mov
in
test
jp
nop
repnz
push
pusha
adc
loop
in
adc
loopne
repz
outsb
jge
push
pop
cmp
cli
dec
mov
lods
and
jb
into
cmp
repnz
inc
xchg
adc
repz
mov
enter
movzwl
sbb
pop
scas
cmp
and
xchg
and
cmpb
or
lret
push
or
jl
decl
inc
jb
jns
aaa
xchg
add
jnp
mov
rorb
jl
out
and
aam
and
pop
xchg
stc
cmp
shl
call
add
push
popf
pop
xor
and
cltd
or
or
add
jmp
jge
popa
and
addr16
into
ret
ljmp
and
jp
mov
sbb
adc
add
cmpl
cmp
test
push
jmp
incb
adc
inc
push
bound
les
add
push
loopne
leave
mov
rclb
loopne
xchg
fldenv
jnp
sub
out
movl
ret
in
mov
sbb
dec
loop
or
xor
mov
repnz
adc
in
add
mov
rclb
das
jg
out
imul
fisttpl
cs
mov
inc
mov
adc
shlb
lahf
movsb
lds
jmp
xor
mov
cli
pop
adc
sub
mov
dec
rclb
cmp
mov
in
or
lds
lahf
popa
and
xchg
daa
push
xlat
push
ss
pop
xchg
mov
sbb
add
mov
sti
jge
and
mov
sahf
adc
fs
mov
push
dec
dec
cmpsb
movsb
xor
add
lea
push
insl
and
std
lock
mov
mov
xlat
add
out
sbb
mull
imul
stos
push
pusha
cmp
mov
pop
xchg
xor
imul
xor
push
push
mov
cmc
or
or
xchg
add
cs
push
andb
or
pop
add
cmp
pop
sbb
stos
xchg
fmuls
push
mov
mov
daa
cmpsb
or
out
and
std
fwait
out
sbb
int3
cmc
out
fdiv
push
sarl
aad
test
jmp
fiaddl
add
int3
pop
xlat
xchg
popa
mov
sbb
int
cmp
mov
fs
sbb
ret
test
pop
push
pushf
aam
and
lret
insl
arpl
std
jge
mov
sub
cmp
xor
and
sbb
cli
adc
shrl
inc
je
rcrb
mov
jno
pop
enter
into
cmp
adc
pop
mov
popf
mov
sub
imul
mov
jecxz
pop
js
and
ja
or
outsb
shll
arpl
cmp
dec
xchg
push
add
outsb
mov
inc
dec
xchg
or
inc
pop
outsb
sahf
in
stos
loop
fildl
fimull
fs
test
int3
loope
adc
outsb
or
test
movsb
xchg
adc
mov
inc
addr16
testb
and
lcall
jecxz
sub
mov
pop
cmpsl
sbb
leave
adc
pop
sbb
mov
lds
cltd
dec
out
xchg
cmove
dec
popa
aam
sbb
xchg
dec
push
imul
repnz
rorl
sub
adc
push
push
or
jecxz
inc
out
mov
and
jo
adc
repz
fdiv
mov
mov
cld
ljmp
hlt
pop
shll
mov
test
mov
into
push
jg
xchg
mov
and
stos
scas
shrb
enter
xor
jp
test
cmp
inc
scas
xchg
jge
rcrw
and
std
testl
mov
js
movzwl
push
addr16
push
and
ljmp
out
lahf
add
int3
add
sub
cmp
insl
push
mov
les
outsb
mov
mov
push
int3
mov
xchg
inc
add
leave
stos
mov
pop
xlat
lods
cmpsb
mov
rorb
shll
inc
jne
jo
nop
cmp
cmp
ret
push
cmpsb
and
movsl
sbb
por
cs
pop
hlt
pop
pop
ja
dec
sub
jae
mov
xchg
jns
int
cmc
xor
xlat
inc
int
ljmp
push
adc
adc
ret
sti
ficoml
sarl
andl
out
pop
gs
push
xor
adcl
test
mov
or
outsb
cli
arpl
or
fdivr
fmul
mov
rol
dec
inc
xor
popa
lods
push
bound
in
ret
inc
mov
subb
lods
jnp
add
jle
sti
test
push
stos
lock
cli
std
pop
stc
out
pop
fcoml
rcrl
gs
out
adc
cmp
inc
pop
mov
shl
jbe
out
loop
es
jl
je
xchg
hlt
pop
push
les
rcrl
sub
ja
pop
mov
mov
mov
jge
imul
sbb
sahf
jmp
shrl
add
sub
or
push
mov
add
or
cmp
arpl
loop
lods
jae
mov
dec
testl
sbb
lods
aas
loope
cmp
xor
pusha
cs
push
lcall
jo
cmpsb
push
mov
jmp
xor
lahf
es
xchg
adc
pop
lock
scas
push
add
xor
sub
add
inc
mov
inc
aas
pushf
mov
mov
pusha
mov
push
les
sub
xchg
jb
pop
mov
inc
dec
testb
lds
jno
inc
adc
iret
jno
ja
mov
mov
adc
add
inc
shll
arpl
dec
fcoms
inc
imulb
stc
pop
sub
pushf
xor
fcmovne
add
js
cs
clc
sahf
das
out
jae
adc
sbb
shlb
sub
jg
vmaxsd
pop
incl
sub
pop
imull
sbb
lret
add
jmp
jae
fbstp
not
lods
push
and
pusha
xor
push
movsl
lahf
scas
fldt
clc
insb
lret
sbb
push
mov
sbb
and
popf
nop
inc
std
add
mov
fldl
repnz
lret
inc
pop
nop
inc
or
mov
mov
fwait
add
push
adc
stos
test
fisttps
cmpsb
mov
mov
cmp
xchg
jge
cmp
xor
cmc
xchg
xchg
xchg
jns
mov
push
int3
lds
arpl
add
mov
repz
xor
dec
xchg
pop
fsubr
out
adc
cmpsb
repz
movb
lcall
adc
loope
popf
mov
xchg
cltd
sub
add
pusha
inc
enter
push
mov
cld
jp
sbb
decl
nop
xchg
lods
mov
push
xchg
push
xchg
icebp
xor
adc
lods
push
xor
leave
stos
in
cmpl
and
lods
sbb
and
add
gs
pop
andb
mov
leave
xchg
pop
push
fwait
inc
mov
fcmovb
mov
sarl
lods
cli
mov
fisubrs
jge
aad
movsb
xchg
pop
fnstcw
jp
movsl
pop
sub
fcomps
gs
ds
test
and
lods
or
lcall
hlt
inc
sbb
pop
negb
enter
ds
mov
test
push
in
mov
push
or
jecxz
in
pop
sub
loopne
push
mov
lods
push
and
dec
mov
imul
add
in
jg
test
inc
push
data16
les
push
cmp
xchg
or
mov
push
movsl
push
xor
xor
inc
mov
adc
test
aam
mov
subb
test
xchg
pop
and
imul
adc
mov
and
lock
xchg
or
add
pop
mov
pop
icebp
in
jmp
call
xor
or
and
jo
mov
sti
dec
or
andb
sti
sbb
enter
shrb
jmp
bound
mov
sub
mov
jge
push
cli
lds
or
jne
aaa
sarb
xor
inc
inc
lock
and
mov
pop
clc
or
jne
mov
jle
popa
xor
popa
or
out
mov
test
adc
push
lahf
shlb
stc
cmp
in
aaa
pop
loopne
adc
fwait
xor
rolb
jecxz
ljmp
sbb
outsb
sbb
mov
xor
xchg
adc
or
mov
fists
jmp
sbb
cli
jmp
loop
cs
inc
xor
imul
insb
sti
es
daa
sub
out
push
cwtl
jns
xorb
das
inc
mov
cmpsl
insb
mov
imul
jmp
inc
imul
negl
mov
adc
jmp
sahf
cltd
pop
push
cmp
pop
cmp
dec
dec
mov
rcl
sahf
cld
test
and
mov
mov
arpl
mov
frstor
and
mov
jmp
or
popa
push
jae
push
lds
jns
jb
cs
les
lods
or
inc
add
push
popa
cli
jns
lods
adc
mov
push
sub
or
imul
mov
jne
jge
xchg
mov
ja
sbb
lcall
stos
out
loopne
pop
pop
je
aam
test
out
pop
mov
lret
test
push
or
stos
or
in
pop
or
lret
mov
mov
add
xchg
imul
mov
jle
dec
std
sub
fwait
xlat
mov
call
sub
pop
push
dec
jle
out
inc
xchg
stc
pop
popl
shrl
jb
mov
fcmovbe
das
cmpb
inc
mov
pop
ljmp
shufps
and
or
daa
inc
lahf
push
jae
adc
mov
mov
push
hlt
push
nop
or
repnz
clc
aad
cmp
inc
test
das
cmp
xchg
testl
sahf
insl
aas
in
and
cld
sbb
arpl
dec
sbb
in
rcll
bound
mov
jnp
sti
push
arpl
push
add
mov
jbe
repz
lret
cmp
sub
out
mov
or
dec
push
xlat
loope
jbe
fisubl
repz
in
fsubrs
sbb
cs
outsl
jle
into
push
inc
mov
push
int
xchg
fidivrs
inc
ljmp
cltd
loop
fcomi
addr16
test
xchg
shlb
xor
mulw
mov
decb
pop
jo
repnz
mov
inc
adc
inc
in
or
cmp
sbb
xchg
testl
stos
sti
pop
jp
cli
add
sub
sbb
cmc
repz
push
ret
cmp
out
data16
xor
out
cmp
aas
and
mov
pop
mov
xchg
in
test
stos
push
inc
in
fistpl
das
test
daa
frstor
lods
lret
mov
jae
pop
jle
out
push
jl
ret
xor
inc
lea
das
mov
push
cmpsb
xor
mov
in
inc
daa
xor
xor
jl
dec
filds
pop
dec
pop
cmp
push
fs
popa
sub
cmp
ss
in
fmul
xchg
lods
fs
adc
dec
mov
mov
shl
js
test
cmpsl
aad
push
sbb
test
subb
mov
cltd
pop
js
jle
clc
or
or
push
pop
icebp
inc
jge
jg
out
jl
mov
sub
mov
stos
mov
test
jl
repnz
into
es
and
xchg
into
fisttpl
push
test
pop
outsl
bnd
and
ja
mov
dec
dec
test
and
jp
sbb
das
repnz
xchg
test
dec
in
jle
loopne
xchg
adc
sub
adcl
add
lahf
nop
inc
pop
adc
cltd
cmp
out
pop
insb
cmp
daa
or
andb
sbb
push
out
cli
jnp
scas
and
inc
test
nop
nop
ljmp
aad
lods
ret
mov
cmp
xchg
imul
pushf
aam
nop
lret
sub
mov
and
sub
imul
or
adc
roll
mov
popa
pop
xchg
repnz
lret
xchg
fmuls
jg
sub
nop
sbb
iret
push
jns
xlat
bound
testb
scas
cmp
insb
mov
cmp
rol
cwtl
mov
outsb
dec
add
dec
mov
nop
fstpt
sbb
clc
add
push
pop
es
pop
adc
loop
xchg
cmp
push
ljmp
sahf
loopne
rcrb
inc
xchg
popf
loop
dec
mov
mov
lret
jp
fwait
mov
lds
sbb
loope
in
xchg
iret
jecxz
push
mov
repnz
push
mov
and
out
cmpsl
push
push
jecxz
mov
cwtl
lock
test
adc
mov
repnz
lods
leave
dec
xchg
jl
or
jmp
jge
loop
dec
enter
lods
xchg
mov
lds
fsubl
cs
inc
mov
mov
aas
test
or
pop
rolb
push
mov
jno
mov
push
mov
jbe
dec
pop
daa
push
sub
jge
ret
jb
mov
push
mov
test
xor
clc
fsqrt
sub
xor
lods
ret
cmpsl
negb
mov
adc
or
lods
fsubp
sub
adc
or
mov
stos
sti
and
mov
xchg
push
test
xchg
jns
pop
xchg
fwait
mov
arpl
fisttpl
int
mov
sbb
jnp
cmp
cs
jno
mov
xchg
cmp
mov
divl
xor
stc
mov
sub
pop
add
dec
inc
xor
xchg
cmp
lock
cmp
jno
js
lods
pop
imul
es
jne
pop
aad
in
daa
lcall
fdivr
shr
iret
mov
cmpsb
sub
lea
jb
lret
mov
insb
adc
ljmp
rcl
adc
xor
jo
jmp
adc
es
test
ret
xor
jne
pop
jns
iret
fs
mov
sbb
cmp
or
or
fdivrs
pushl
add
mov
pop
dec
js
les
ds
pop
mov
addb
out
into
imul
lcall
pushf
lcall
jne
iret
and
loope
jbe
push
jbe
and
mov
mov
mov
push
jg
popf
mov
nop
lock
push
mov
movl
enter
insb
and
mov
faddl
aas
sub
xor
out
incl
cli
jge
sbb
shl
and
dec
aam
and
or
pop
ss
mov
add
mov
mov
out
mov
push
js
mov
adc
stc
dec
rcrl
mov
call
lret
cmp
push
and
push
xchg
sub
xchg
out
xor
xchg
lret
repnz
js
inc
xchg
pop
inc
dec
pop
lods
decl
add
aas
add
out
scas
push
sarl
pop
cmp
fisubrs
jbe
insb
mov
mov
stc
in
nop
or
cli
or
xor
and
sbb
cs
push
fst
adc
mov
jecxz
mov
jg
push
lcall
shll
mov
movsb
ds
test
cmpsl
je
push
sbb
jecxz
fs
push
jecxz
dec
cld
jle
cmp
fwait
les
scas
les
pushf
cmp
test
or
adc
out
and
mov
mov
mov
add
fcoml
xchg
out
dec
mov
fnsave
iret
adc
jecxz
add
push
fdecstp
jl
inc
dec
dec
data16
out
add
scas
mov
pop
imul
dec
cmp
enter
or
jle
push
pop
dec
fwait
dec
mov
dec
mov
inc
negb
inc
pop
dec
out
pop
aam
pop
and
lods
mov
int3
pop
sub
sahf
or
pusha
imul
cld
lods
scas
dec
andl
mov
add
popa
rclb
and
test
popf
sbb
imul
inc
dec
popf
pushf
jbe
cmp
xlat
int
pop
xor
fisttpll
mov
sbb
and
ret
xor
or
cmpsl
imul
xchg
mov
or
xor
push
movsl
rclb
test
out
add
int
cld
roll
adc
lcall
and
bound
mov
and
insl
push
xorl
scas
fs
xor
seto
int
sub
ja
jmp
cmp
mov
pop
sub
add
push
add
jb
ficompl
rcrb
lea
or
fildll
sub
add
mov
ljmp
aas
push
xchg
imul
and
sub
lret
pop
push
xor
push
loope
xchg
rorb
mov
or
inc
fldcw
fsts
mov
jns
out
gs
cli
adc
dec
div
subl
add
test
ja
les
test
pop
jmp
aaa
cmp
loopne
xchg
in
bound
sub
cld
mov
test
mov
mov
mov
or
cwtl
cmpsl
push
sub
xor
jl
push
dec
adc
sbb
out
enter
mov
xchg
cld
popf
cmp
filds
mov
sti
adc
fsubrs
or
mov
ss
std
sahf
mull
jo
dec
data16
sbb
repz
cmpsl
mov
stos
pop
sbb
inc
mov
push
and
cli
pop
xchg
call
jge
fucomip
nop
add
xchg
loope
filds
or
xchg
xchg
add
mov
sbb
cmpsl
fmuls
dec
fistpl
js
out
xchg
inc
lea
adc
push
pop
mov
jns
jge
mov
add
dec
inc
shr
das
fs
in
mov
cmp
xchg
out
xchg
fstpt
cli
ror
ja
push
sbb
pop
stc
out
stc
test
xchg
mov
aam
inc
xchg
jne
add
dec
scas
or
sbb
pop
push
fnsave
notl
cmpsb
stos
test
outsb
fldenv
fcoms
mov
cli
sub
fwait
mov
inc
stc
lds
inc
lea
in
pop
and
xor
mov
fadds
into
xchg
lcall
pop
jecxz
dec
jecxz
outsl
inc
mov
out
jmp
add
mov
push
mov
pop
nop
xor
add
stos
ret
inc
cmpsb
gs
sbb
sbb
in
xor
pop
in
cmpsl
or
repz
xor
cli
scas
decl
mov
fsubrp
scas
cmp
pop
je
enter
stos
mov
jo
jmp
xchg
pop
aad
pop
cmc
xchg
fisubrl
pop
aam
sub
add
sbb
cmpsb
add
imul
popa
pop
nop
sub
jno
mov
jo
push
mov
sub
rorl
sahf
icebp
outsb
mov
mov
dec
pop
push
inc
inc
adc
movsb
cmpsb
pop
lods
mov
xchg
data16
btr
call
aam
mov
xchg
daa
loop
xor
pop
loopw
call
xchg
add
subb
dec
mov
cmpsl
or
pop
push
imul
sbbl
push
cmc
mov
cli
pop
loopne
and
aam
pusha
sti
jge
cmp
cmp
aam
push
pop
and
push
loope
imul
pop
xlat
inc
xor
mov
fisubs
sbbl
sub
xchg
xor
cltd
lret
fldl
inc
or
mov
daa
lea
adc
mov
shll
movsl
xor
mov
xlat
xorb
movsb
adc
pop
lret
fdiv
push
dec
adc
inc
loop
push
and
push
inc
cli
xor
in
sub
push
pushf
and
sbb
mov
lahf
loop
roll
jb
loop
pop
insl
add
add
rcr
sbb
mov
cmp
int3
adcl
pusha
xchg
cltd
xor
aad
jnp
mov
inc
pop
mov
push
fistl
xchg
andl
cmp
jle
lock
cli
or
aad
mov
sti
dec
out
push
cmc
pop
out
xor
jne
loopne
ja
lret
setp
test
jp
imul
sbb
mov
je
xchg
inc
icebp
hlt
push
inc
ss
xchg
xchg
iret
cmc
jl
fisubl
aad
add
sbb
mov
std
es
test
adc
or
in
imul
sbb
jo
insl
shll
pop
cmpsl
mov
cmc
xor
and
or
fwait
adc
sbb
lods
mov
or
push
push
pop
jg
ffreep
int
das
lret
nop
jns
fadd
repz
sub
dec
loop
ljmp
or
outsb
fisttpl
cltd
push
pop
sti
adc
test
jmp
sbb
rcll
inc
cli
or
jl
out
dec
xchg
sbb
icebp
xor
test
ljmp
insl
imul
dec
lock
lods
mov
pop
sub
adc
inc
mov
loopne
fwait
jle
mov
clc
test
sub
scas
xchg
cmp
dec
sbb
mov
jecxz
xchg
jge
insb
adc
movsb
jmp
lds
fisttpl
xchg
cmpsb
shl
mov
repnz
das
push
fcmovne
aam
std
add
sarl
inc
in
adc
out
xor
mov
xor
mov
mov
inc
push
mov
sub
add
ds
xor
dec
push
push
jns
loopne
pop
movsb
pusha
imul
dec
jb
inc
sbb
mov
div
inc
in
outsb
call
cmp
jno
lods
mov
fwait
aaa
jl
and
rcrl
add
cmpsl
out
jle
fwait
and
lods
add
stos
push
sub
ljmp
cmc
mov
and
jle
xchg
and
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
incl
adc
enter
call
neg
xorl
adc
or
in
adc
or
in
adc
or
adc
xchg
loope
pop
pusha
into
jg
in
push
adc
sub
pop
mov
mov
mov
mov
imul
mov
xor
xchg
mov
mov
out
popl
test
add
lret
sub
in
adc
ret
shrl
sbb
sbb
and
rcll
xlat
lret
les
call
jecxz
mov
pop
and
and
lret
das
jle
aad
dec
add
js
shll
pop
outsb
jae
push
mov
mov
jmp
lock
mov
adc
pushf
mov
imul
xlat
in
adc
into
lret
xchg
aad
mov
mov
lret
lret
sub
or
xchg
loopne
or
or
push
push
xchg
loope
or
nop
jae
lret
sub
in
adc
orl
fisttpll
lret
sub
jmp
or
or
call
or
dec
sub
cld
adc
sbb
in
adc
or
in
adc
andl
xchg
or
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
scas
mov
in
adc
xchg
into
lret
lret
std
shr
adc
ret
test
xlat
in
adc
popa
loopne
mov
xchg
loope
or
cmpl
in
adc
or
in
adc
subl
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
or
in
adc
dec
or
or
dec
lret
and
std
rol
test
nop
pop
push
leave
xor
cmpsb
int
insl
mov
mov
jp
or
lret
mov
mov
gs
repz
fistps
pop
xchg
fistpl
scas
ss
rol
int3
mov
adc
lahf
stc
mov
cmp
jl
push
cmp
xor
loopne
push
scas
into
lods
sub
bound
shll
pushf
cmp
sub
and
shlb
fbstp
shrl
sbb
mov
mov
pushf
insl
mov
imul
int
loop
sti
loop
cmp
out
arpl
xor
pop
or
sub
push
adc
add
cmpsb
mov
jb
ja
mov
mov
addr16
xchg
mov
lds
out
jns
sub
aas
pop
enter
pop
mov
adc
sbb
mov
add
inc
insb
stos
movsb
and
lret
pop
adc
sbb
pop
lret
cmp
add
pop
jb
inc
pushl
inc
out
push
lods
popa
jno
pop
dec
sub
aaa
push
out
push
in
scas
adc
push
mov
gs
pushf
call
in
cmpsl
es
jg
int
cmc
sbb
adc
stos
or
fildl
cwtl
mov
mov
sbb
mov
or
ret
cmpl
rol
arpl
pop
lods
inc
movsl
aaa
pop
test
push
cmpsl
fldcw
mov
add
add
call
les
test
xchg
cld
pop
stos
aam
fsts
sbb
lahf
adc
sub
mov
push
test
pop
adc
fnstsw
push
or
mov
pusha
jmp
xchg
mov
lea
cmp
xor
inc
cld
sbb
add
sbb
fs
adc
sub
mov
movsl
daa
in
jo
or
out
test
jb
lahf
sbb
lahf
push
fs
push
ja
rcll
popf
js
in
adc
arpl
subb
adc
push
inc
cld
or
mov
mov
das
fcoms
roll
jg
loopne
pop
shll
mov
loope
jae
push
and
cs
dec
push
loop
std
xor
mov
cmc
jg
push
out
mov
rcr
mov
insl
movsb
aam
gs
mov
add
push
popa
pop
pop
negb
lock
cmp
mov
aas
xchg
mov
add
pop
data16
cmp
xchg
sbb
sbb
jecxz
lods
lods
sbb
testb
mov
and
xor
pop
call
cmc
jno
das
jle
je
dec
xlat
jl
xor
mov
dec
incb
inc
mov
push
out
jmp
push
xchg
fcmovnu
or
push
push
mov
cmp
fsts
negw
lds
cmc
nop
jno
aam
add
cs
or
and
movsl
cli
add
mov
icebp
xchg
out
aas
dec
sbb
mov
pop
pop
es
push
movsl
imul
rcrl
pop
pop
insb
adc
int
xor
jbe
push
sub
fadds
idivl
and
sbb
jge
mov
fcoms
test
inc
lcall
ja
fcomps
mov
jmp
xor
jno
repz
loop
jmp
jns
cmp
repz
push
mov
jne
cmc
in
adc
add
dec
cs
pop
and
scas
cmp
nop
ds
repz
push
or
int
or
mov
xor
cld
xchg
or
daa
xor
and
nop
mov
push
inc
pop
sysenter
sahf
repz
or
push
push
fdivrp
fdivrl
push
movsl
jae
push
sti
pop
stos
cltd
in
or
gs
lret
lret
lea
cmc
cmpsl
add
mov
sti
cmpsb
in
cmp
repnz
add
xor
jl
int3
add
mov
mov
cmpsb
shrb
cmpl
repz
lret
dec
fcoml
xor
pop
jl
and
enter
test
pop
dec
mov
xor
mov
push
or
insb
sahf
cmp
cmp
lds
jns
inc
ja
mov
outsl
rcr
adc
push
pop
pop
pushl
int3
and
fwait
cmpsb
cmp
dec
mov
dec
add
aaa
dec
jmp
cmp
icebp
mov
in
xor
mov
mull
xchg
cmc
or
enter
cmp
jne
xor
pop
push
aad
jbe
mov
sub
mov
xor
orl
aas
sbb
cltd
int3
mov
cmp
or
mov
in
push
jecxz
pop
sbb
push
cmp
mov
scas
xchg
or
imul
push
insb
jns
in
repz
outsb
jmp
inc
mov
mov
fimuls
inc
pushl
and
ret
sub
nop
cmp
push
add
xchg
mov
in
fstpt
xlat
mov
push
outsl
dec
or
stc
test
inc
mov
int
or
or
fstl
out
ja
mov
mov
adc
pop
pop
or
je
icebp
adc
jle
cmpb
xchg
xor
je
mov
dec
cmp
jne
add
dec
cmp
leave
leave
addr16
jle
lahf
mov
jnp
mov
push
push
mov
add
fiadds
sbb
imul
aaa
stos
push
mov
std
mov
sti
std
xchg
hlt
movsl
push
sarl
xorl
cmp
inc
shll
orl
adc
adc
push
add
int
inc
cmp
add
out
sub
mov
sbb
hlt
xchg
mov
imul
sbb
cmp
ljmp
jnp
mov
loopne
xor
xchg
inc
repz
mov
cmp
jno
adc
sub
sarl
jb
jecxz
cmc
xchg
aad
xor
push
mov
inc
push
rorb
in
fistpll
adc
popf
pop
out
inc
and
or
or
addr16
mov
dec
cmp
pop
jmp
pop
loop
and
cmc
int
dec
mov
rcrb
out
fs
out
push
or
fcomp
pop
test
xor
xor
cmp
dec
xchg
test
movsb
fstp
and
push
sbb
out
and
cs
and
cld
xchg
adc
xchg
outsl
mov
hlt
or
gs
ja
ret
inc
clc
stos
orb
aaa
mov
ret
sub
add
repz
int
sbb
add
cltd
push
sbb
push
mov
adc
sub
scas
mov
push
cmpsl
insb
pop
imul
mov
mov
rcll
jbe
dec
sub
aaa
popl
dec
clc
push
sbb
mov
xlat
jg
jbe
popa
or
or
imul
cld
inc
sub
push
fwait
or
dec
scas
out
ds
jle
cmp
mov
mov
je
and
mov
repnz
adc
jmp
add
push
cwtl
xchg
jae
add
loop
add
push
lcall
ret
add
js
daa
dec
jbe
cmp
xor
rcll
fdivl
pop
cmpsb
xor
push
fsubl
xchg
sbb
mov
repz
clc
sub
test
gs
mov
test
lods
sbb
inc
cmp
or
enter
jle
jp
push
cli
mov
xchg
pop
mov
or
mov
into
movsl
aaa
sub
adc
js
cmpsb
sub
lock
inc
cli
dec
mov
add
mov
jne
xchg
inc
je
sbb
xor
inc
fsubs
pop
hlt
mov
jg
pop
lock
push
imul
mov
mov
mov
cmp
enter
or
icebp
pop
xchg
and
push
shll
stos
inc
out
pop
inc
sbb
push
and
sub
lods
imul
add
mov
xchg
mov
mov
lcall
into
pop
je
sbb
jecxz
sub
cvtdq2ps
jo
mov
jb
mov
push
xchg
mov
movsb
hlt
clc
leave
aam
loope
aas
jmp
xchg
bound
in
popf
hlt
mov
pop
mov
jl
jb
sarb
xor
popa
sub
mov
adc
shrb
movsb
adcb
clc
xchg
jecxz
cmp
hlt
cmp
test
jmp
pop
jae
test
cmp
cmp
jle
push
insl
mov
mov
sbb
pop
dec
mov
jb
jae
out
inc
bound
jnp
rclb
or
xchg
out
mov
xchg
and
mov
mov
pop
mov
pop
shld
subl
cmp
jmp
insb
jb
fs
mov
and
negb
repnz
cmp
push
ja
or
sub
xlat
fstpl
sub
nop
mov
xor
ljmp
cmc
lret
lods
push
pop
mov
adc
test
in
mov
lds
inc
in
cli
mov
xor
or
xchg
faddl
push
popa
scas
nop
pop
imul
dec
jmp
dec
adc
pop
inc
mov
and
sub
jnp
and
pop
aad
adc
cmp
sub
sub
cmpsb
clc
cmpsl
arpl
dec
aam
je
cmp
sub
loop
imull
cmp
dec
iret
adc
std
testl
push
add
mov
push
adc
adcb
jbe
push
js
or
aaa
jnp
dec
mov
outsb
mov
mov
mov
or
adc
cmp
aam
dec
add
push
push
inc
loope
call
adc
and
enter
sub
movsb
divl
in
jecxz
out
add
xchg
dec
jno
cs
outsl
push
adc
shl
out
fwait
cmp
orl
pop
cmpsl
aad
mov
outsb
data16
daa
pop
ljmp
jb
adc
out
movsl
pop
lret
ljmp
lret
repnz
pop
or
adc
test
xchg
inc
sbb
movsb
inc
in
cs
dec
das
mov
and
mov
pop
xor
test
xchg
xchg
xchg
pusha
lock
sub
into
inc
xchg
fwait
add
insl
jg
xchg
inc
push
mov
adc
push
mov
in
test
enter
into
ss
adc
mov
push
filds
fsubr
mov
mov
add
mov
ja
push
or
push
cmpl
jae
iret
je
push
sbb
lock
xchg
sub
dec
sub
cld
mov
nop
sbb
mov
add
jg
scas
fcomps
mov
test
adc
lcall
cmp
movsl
adc
dec
mov
or
jbe
lea
xchg
outsl
rol
dec
jnp
mov
xchg
mov
hlt
inc
push
repnz
hlt
ret
sub
cmc
mov
add
adc
rcrb
xchg
mov
mov
jge
popl
fisubl
ret
pop
sub
cmp
in
je
aas
xchg
scas
das
push
cmc
nop
ljmp
sub
xlat
mov
arpl
mov
xchg
cli
xchg
pusha
or
fnsave
andl
inc
mov
jb
jne
loope
lahf
popl
jb
int
jo
push
inc
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
