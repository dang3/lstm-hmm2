cltd
push
mov
dec
daa
xor
sbb
sub
loopne
pusha
pushf
dec
loopne
pop
lahf
sub
mov
add
test
lock
xchg
mov
xor
in
xchg
push
cwtl
jp
lods
mov
aad
cmp
adc
insl
jae
mov
pushf
sbb
push
addr16
in
adc
loopne
shlb
jae
negl
movsb
cmp
loope
cmp
push
lret
movb
lods
and
adc
mov
mov
fidivrs
js
daa
sub
jnp
xchg
mov
xchg
fs
aam
mov
je
movsb
nop
call
in
or
es
fisubrs
mov
or
pop
pop
es
out
and
int
or
das
idiv
test
dec
iret
cmpsb
mov
ss
sbb
shr
out
imul
or
mulb
popa
xor
push
out
test
inc
popf
int3
xchg
rolb
dec
xor
es
and
mov
mov
ja
nop
test
adc
adc
cld
es
push
mov
sbb
les
jmp
dec
xor
mov
and
inc
out
pop
dec
roll
test
rcl
cld
and
pop
pop
jle
and
insb
sub
xor
lds
mov
es
in
popf
fwait
daa
stc
cwtl
shll
insl
xchg
mov
insb
inc
addb
xchg
enter
notl
imull
lcall
xor
pop
mov
jg
mov
cmp
icebp
xchg
xchg
lods
std
push
pinsrw
sahf
push
fsubr
pop
call
bound
cmp
or
push
mov
jmp
and
pop
outsl
ret
push
aad
inc
sbb
fiadds
mov
dec
jle
jno
sub
and
mov
or
test
out
std
add
mov
mov
outsl
push
xchg
dec
cwtl
repnz
mov
push
aaa
jecxz
les
jle
pop
out
sarl
dec
int3
xchg
mov
pop
push
adc
jae
adc
sub
jbe
pop
inc
sahf
mov
and
add
aas
pop
jge
movsl
test
bnd
fwait
push
test
mov
stc
stc
daa
test
scas
sub
lcall
lods
rcrl
pop
mov
or
add
shll
lret
aam
and
adc
dec
icebp
scas
sub
pop
push
loopne
das
xchg
mov
dec
push
movsb
or
pop
adc
popf
inc
mov
jp
call
adc
and
inc
arpl
xlat
pop
push
xor
insl
xor
xchg
dec
nop
clc
sbb
cmc
rcrb
daa
adc
or
fwait
in
or
sub
aad
sarl
test
mov
dec
jbe
ret
test
int3
sbb
das
jg
lods
cmc
xchg
dec
push
xor
adc
jb
jle
mov
xlat
mov
mov
mov
stos
xchg
cs
pop
or
out
adc
push
cwtl
test
pop
push
xchg
mov
adcl
inc
fisttps
mov
mov
std
cld
mov
mov
push
adc
pop
fstpt
mov
jp
jne
dec
jmp
adc
arpl
dec
xchg
repnz
sarl
xchg
call
imul
ljmp
cltd
out
or
clc
cmp
mov
pop
push
jne
pop
test
xchg
mov
daa
mov
dec
aad
iret
stos
fmull
mov
sub
add
out
cmp
add
cmpsb
inc
hlt
shll
jle
adc
jp
pop
scas
adc
je
inc
clc
jne
sub
mov
imul
lret
xor
nop
aas
sbb
dec
ret
or
ret
fcompl
inc
pop
popa
call
ss
mov
sbb
inc
or
leave
out
inc
jmp
push
push
sub
push
jecxz
jnp
cmpsb
test
dec
dec
mov
sub
shlb
adc
dec
rorb
and
xchg
test
pop
fcoms
mov
mov
fstl
fwait
dec
iret
nop
insb
push
fdiv
push
add
lock
jp
xor
lds
xchg
mov
add
xor
xchg
cld
ret
push
mov
push
mov
lret
jbe
test
ljmp
ljmp
sub
enter
das
lcall
test
in
push
mov
adc
cmp
xbegin
mov
dec
call
js
or
sahf
mov
lcall
xchg
mov
bound
inc
xor
push
cmc
loopne
loope
insb
fstpl
mul
lahf
or
or
arpl
lret
sub
jg
pop
mov
adc
mov
and
xor
scas
sti
jg
pop
xor
js
mov
sbb
or
out
xchg
jae
sbb
pusha
add
hlt
cmp
adc
mov
sahf
pushf
shl
jmp
cmpsb
mov
mov
shlb
xlat
clc
icebp
popf
lret
clc
psraw
lret
js
test
xchg
mov
xor
lahf
lods
ret
call
in
cli
or
xchg
push
insb
movsb
aam
ret
mov
dec
dec
and
ret
mov
sbb
fnstcw
and
aaa
dec
ds
or
jno
inc
push
xor
mov
sti
les
test
arpl
cmc
mov
dec
mov
inc
adc
insl
add
clc
leave
test
push
movsl
mov
mov
rorb
lret
jge
lret
aad
lods
es
andb
sbb
xor
or
dec
test
and
pusha
xchg
cmp
mov
dec
mov
mov
leave
nop
loop
fildll
mov
mov
cmc
mov
cmpsb
cltd
jge,pt
ror
add
in
push
pop
in
mov
sub
in
daa
int3
mov
mov
std
push
stos
add
sub
stos
cmp
xor
repnz
in
pop
icebp
loope
adc
into
es
andl
out
jecxz
push
psllq
rorl
out
mov
test
pop
mov
addb
cmp
cmp
add
mov
lret
push
sahf
lea
fs
lock
insl
lahf
daa
and
or
mov
fwait
ss
mov
movsb
push
inc
cmpsb
and
movsb
push
or
je
call
inc
mov
cwtl
push
jne
in
and
lock
lret
jg
test
adc
lods
sbb
dec
xor
insb
es
xchg
jecxz
dec
ds
jb
xchg
sarb
mov
shlb
jp
inc
push
shl
cmp
testl
in
adc
andb
sbb
pop
fxch
lcall
sti
out
xor
mov
add
ja
ss
lds
scas
and
cmove
loope
mov
cld
push
cmc
aaa
push
push
sub
and
lcall
mov
jb
pop
std
sub
jmp
push
or
fwait
movsl
gs
sub
jl
fs
sahf
pop
insb
rorb
cmc
xor
pop
enter
cmp
inc
sahf
cld
bound
mov
pop
inc
pop
jmp
mov
into
lcall
mov
push
pop
jns
imul
xchg
pop
inc
xor
jmp
push
xchg
loop
int
lods
adc
mov
in
mov
insl
test
das
addr16
loopne
cld
sub
and
xor
test
mov
cmp
mov
sbb
pop
pop
jb
inc
and
loop
jbe
jnp
paddsb
icebp
in
roll
je
stc
mov
add
dec
ds
and
mov
jmp
es
cmp
adc
sbb
out
or
cmp
jp
hlt
cmpsl
adc
mov
jecxz
frstor
inc
push
lcall
int
rcrl
pop
inc
daa
scas
bound
ss
inc
or
cltd
in
loopne
jecxz
sbb
xor
dec
xchg
mov
pop
ffreep
rolb
mov
jle
push
push
ljmp
hlt
mov
movsl
sub
and
cld
sbbb
lods
pop
xchg
mov
add
fiadds
enter
in
jnp
daa
loopne
fs
test
mul
cmp
sbb
dec
lret
mov
push
ds
js
lahf
pop
dec
mov
adc
enter
aad
pmullw
repz
mov
clc
subl
popf
sbb
aad
mov
dec
movsl
or
jge
jge
pusha
rcll
clc
fxch
jg
and
add
outsb
jae
mov
inc
xor
lcall
dec
out
adc
cmp
cmc
fstps
fcompl
inc
inc
dec
or
xor
lret
ljmp
je
cmp
mov
stc
mov
pop
adc
stc
loope
or
push
mov
jns
icebp
test
cmp
addl
dec
or
and
and
test
xchg
ja
add
jnp
rol
cmp
jge
das
xchg
xor
clc
mov
sarl
or
xchg
cmp
cli
mov
data16
inc
push
sub
mov
dec
std
push
jle
and
mov
into
and
mov
add
add
cmc
adc
aad
inc
out
inc
mov
mov
and
cmpb
add
adc
flds
push
cmpsb
adc
add
cmp
sub
or
pusha
mov
jne
sti
out
in
cmc
mov
insb
sbb
pop
xchg
cmp
xchg
cld
bound
shl
push
int3
rolb
movsb
shll
xchg
lods
or
jae
add
loopne
and
popa
pop
mov
dec
loop
push
push
pop
pop
sti
int
adc
loop
add
repnz
sbb
xor
in
imul
sub
xchg
xorb
std
fstps
stos
fucom
cmp
cmpl
push
js
aad
inc
ds
or
test
movsb
test
xchg
cmp
cmp
call
pop
or
in
mov
dec
lcall
enter
or
icebp
xchg
adc
sbb
and
cmp
idivb
cmpsb
and
adc
push
mov
push
push
and
sarb
and
aam
dec
bound
xchg
pop
addl
imulb
fistl
sub
pop
jmp
out
pop
fcoms
xchg
loopne
jg
mov
int3
ds
mov
insb
lret
or
sbb
mov
fistl
jle
cltd
or
add
popa
pop
jge
mov
nop
jle
lahf
and
fwait
xor
imul
mov
in
into
aad
int3
ds
in
mov
femms
or
pop
xor
pop
mov
jg
mov
push
xchg
sbb
dec
out
jl
lods
inc
iret
dec
mov
xchg
mov
clc
test
rcrb
sub
adc
cmc
add
clc
insb
jecxz
mov
mov
and
iret
in
dec
mov
test
cmp
ds
sarl
jmp
mov
loop
mov
fsubrl
xor
sbb
sub
out
movsb
inc
jb
xchg
imull
cld
stos
in
test
jne
jb
jl
sub
xchg
fs
cld
dec
clc
xchg
ljmp
scas
fcompp
sarb
and
xchg
sbb
or
add
cwtl
adc
cmpl
and
add
inc
push
xchg
push
mov
add
out
jae
les
adc
or
shlb
push
mov
jno
pop
xchg
pop
xlat
xlat
adc
rolb
sub
pop
ficoms
cmp
divb
push
dec
pop
mov
and
iret
movsl
mov
jae
jge
xchg
pop
out
cmpsl
fwait
cmp
stos
arpl
push
popf
dec
int
cmpsb
and
jmp
sti
sub
popf
jecxz
or
sub
inc
fsubl
xor
mov
je
in
pop
gs
adc
loopne
xor
cs
data16
push
incl
sbb
dec
cmpsb
xchg
cmp
cmc
mov
ficoml
or
es
adc
jg
lea
push
popf
lods
pop
sbb
pop
jl
push
push
inc
pop
or
jbe
xchg
loop
dec
or
out
push
adc
aad
pop
or
aaa
inc
jns
aas
stos
mov
dec
push
cmpsl
clc
shlb
mov
pusha
stc
xlat
add
inc
jno
les
adc
lea
jb
ljmp
inc
lret
push
ret
stos
rcll
lcall
cmpsb
jmp
dec
inc
mov
add
in
iret
icebp
cli
repnz
push
sbb
popa
aam
adc
cltd
fs
ror
dec
pop
push
jg
sub
fcom
sbb
dec
lods
popa
scas
xchg
mov
negb
adc
adc
ror
adc
outsl
out
pop
or
add
int
outsb
lods
dec
mov
and
in
leave
inc
or
test
sub
cli
xor
inc
popa
scas
xchg
mov
call
pop
jns
into
daa
fstp
clc
mov
aad
jo
inc
mov
inc
hlt
pop
xchg
cmp
pop
mov
pop
add
pusha
cmp
mov
insl
mov
mov
pop
inc
mov
inc
pusha
add
cld
filds
roll
cmc
cmpsb
leave
sub
cltd
shr
jne
es
idiv
in
cld
into
xor
hlt
and
mov
mov
and
int
push
nop
test
popf
push
mov
cmpsl
dec
addr16
jbe
mov
and
add
out
sub
pop
movsb
lret
ss
test
out
stos
mov
sbbl
pushf
pop
push
jp
aad
jge
or
push
sbb
mov
and
and
xor
sub
subb
rcl
mov
jns
xor
in
or
bswap
aam
sub
imul
sbb
or
orl
sbbl
dec
icebp
loop
stos
and
inc
push
push
mov
and
shlb
cmp
rorb
mov
push
dec
test
inc
inc
and
into
outsl
cmpsb
gs
aam
and
cmp
lret
ja
cwtl
xor
jae
and
jnp
pop
sub
into
mov
ret
subl
lahf
insb
filds
repz
into
xchg
int3
hlt
test
shlb
push
jl
and
inc
das
ds
mov
pop
push
cmp
std
or
fiadds
pop
pop
lea
sbb
xor
and
insl
int3
push
mov
icebp
mov
movsl
sub
jg
les
lret
cltd
stc
rcrl
pop
push
cmp
popa
fsubrp
add
add
or
sub
bound
popf
out
cmp
stos
mov
mov
pop
sbb
int3
mov
icebp
xchg
jns
pop
or
sahf
mov
mov
mov
sub
in
pop
lret
push
test
adc
push
or
dec
loop
sbb
daa
imul
ret
aaa
mov
adc
ret
repnz
mov
loop
ja
in
inc
mov
movsb
add
jl
cltd
dec
sbb
loopne
loopne
out
mov
jge
lods
int3
and
xorl
aas
inc
test
add
push
in
loop
add
pop
push
enter
sbb
enter
adc
cli
mov
mov
stc
mov
dec
jae
jns
stc
dec
int
leave
cmp
lahf
mov
ret
sub
stos
xor
outsl
in
pop
mov
loopne
adc
xchg
push
divl
xlat
dec
cmp
ljmp
aad
jl
mov
orl
ret
shl
push
repnz
pop
lods
mov
sbb
ret
mov
cmp
ret
stos
insl
xor
sbb
or
insb
or
outsl
insl
cmpb
aas
faddp
data16
xchg
sub
jnp
jp
sub
mov
push
adc
or
xlat
mov
jb
leave
mov
lahf
test
inc
mov
mov
and
xor
mov
cmp
ror
jb
ja
sub
jno
adc
insl
sub
sbb
movsl
or
jne
jbe
dec
sahf
aam
push
ret
dec
mov
subb
daa
push
into
lcall
inc
repnz
dec
shrb
ss
mov
popa
xor
add
sub
aaa
call
add
int3
add
out
sub
fldpi
jge
movsl
sub
mov
aam
and
outsl
roll
push
jecxz
pop
cmp
fsubl
and
icebp
add
push
in
popf
pop
mov
jne
jmp
mov
mov
imul
inc
fwait
jbe
and
push
out
pop
xor
stos
test
push
and
xor
xor
ficomps
mov
xchg
gs
xchg
mov
ljmp
jmp
call
shl
mov
scas
lea
imul
jns
sub
jle
and
addr16
cs
fldenv
jmp
aam
pop
std
pop
jae
cs
out
pop
out
icebp
shrb
lret
movsb
scas
sbb
test
mov
adc
jo
pop
shrb
in
fnstenv
lahf
lcall
jg
stos
pop
sbb
jmp
jo
xchg
aaa
mov
rcr
inc
loope
aaa
pusha
adc
icebp
aad
and
fisubs
aam
int3
and
adc
fldt
push
aas
cwtl
sub
cwtl
pop
cltd
mov
dec
mov
mov
adc
loope
sub
inc
iret
loopne
das
push
xchg
flds
aam
pop
arpl
arpl
lock
sub
pushf
xchg
out
sbb
dec
data16
mov
aad
orl
insl
cmpsl
pop
sub
in
sbb
jmp
das
sub
mov
aas
pop
roll
inc
inc
sub
dec
push
idivb
xor
fisubs
dec
sbb
pop
and
fisttpll
adc
jp
aas
push
pop
sub
fiadds
flds
sysret
adc
sahf
jns
inc
jns
outsl
inc
mov
movhps
nop
ret
jle,pt
or
outsl
lret
insb
pop
nop
stos
mov
jmp
daa
mov
rcr
mov
push
add
jae
test
in
daa
or
lret
jb
in
add
xor
sub
pop
jae
mov
pop
xor
stc
mov
sub
sbb
bound
rcrl
inc
loope
aas
push
push
call
sub
sarl
test
adc
push
sarb
cmp
cli
xor
inc
xor
clc
data16
insb
and
orb
gs
mov
fwait
mov
cmp
fmuls
mov
and
mov
cwtl
push
shl
add
jecxz
imul
sbb
pop
adc
xchg
push
out
push
cmp
and
xchg
test
mov
ds
mov
dec
inc
jb
in
pop
sti
inc
sbb
movsl
pop
int3
mov
mov
cwtl
cld
ds
xchg
sbb
mov
test
movsb
xor
mov
sbb
addb
icebp
int
out
mov
fimuls
xor
pop
push
mov
dec
shlb
sti
pop
mov
push
andb
jb
or
pop
sbb
jg
adc
imul
lcall
jae
and
fs
das
test
jmp
rcll
scas
sbb
mov
ja
inc
cld
loop
shlb
dec
icebp
push
and
aam
pop
and
call
imul
pushf
popf
xchg
fcomip
or
and
or
shll
sbb
lret
sbb
adc
popa
lahf
repnz
sarl
push
jo
xor
pop
dec
lahf
push
roll
mov
les
add
loope
and
clc
shlb
data16
lret
jne
cmp
cmp
jp
dec
sbb
test
stos
in
pop
popf
jb
pop
push
jle
aaa
aam
cwtl
adc
clc
icebp
inc
fstl
add
stos
not
arpl
mov
ja
mov
sub
sub
jp
jmp
clc
xchg
sbb
fists
xor
sbb
and
xor
shlb
and
cltd
push
and
shlb
dec
and
jl
mov
adc
and
ret
insl
mov
sbb
lahf
movsb
xadd
imul
xchg
mov
mov
mov
es
ja
xor
aam
jbe
mov
test
cmpl
lcall
les
subl
or
inc
scas
lret
icebp
cmpsl
nop
inc
add
loopne
ficoms
notl
sti
jge
dec
mov
jns
jno
test
jbe
fnsave
mov
jmp
aas
sub
or
ficomps
inc
inc
sbb
addr16
enter
test
mov
add
sub
cmp
inc
into
repz
mov
dec
les
mov
popf
mov
xor
adc
add
imul
aas
sub
cmp
sbb
stos
mov
lea
pop
pop
fstpt
jne
ja
xchg
inc
inc
fidivl
cli
movsb
sub
xor
jae
xor
fcmovnu
or
mov
lods
out
cmpsl
sti
loop
lods
lcall
pop
cmp
clc
mov
xchg
cwtl
das
mov
in
outsb
jge
clc
int3
incl
jg
mov
fdivl
push
loopne
xchg
std
pop
dec
lret
pop
add
xlat
cmpsb
mov
push
or
sbbl
nop
aad
hlt
test
pop
inc
jno
in
dec
jmp
push
and
repz
push
and
scas
test
outsb
add
aad
arpl
push
aas
sub
jg
repz
mov
out
iret
add
sub
xchg
xor
lret
cmpsl
pop
xchg
stc
or
mov
lret
enter
ror
xor
leave
jns
insl
mov
dec
add
push
cmp
adc
mov
shlb
adc
hlt
fbld
loopne
push
sub
mov
int3
mov
dec
and
and
pop
in
adc
and
and
icebp
movsl
push
test
pop
adc
or
fbstp
imul
test
insl
scas
push
mov
jnp
sub
into
fwait
jne
subb
popa
add
int
ret
test
arpl
jbe
adc
mov
cmp
or
cltd
push
out
sbb
cmp
out
loope
inc
adc
push
fnstenv
js
or
aaa
stos
dec
das
pop
cmp
rolb
pop
mov
or
imul
sub
push
movsb
add
mov
xchg
xchg
pop
pop
mov
dec
cmpsb
fildll
pop
sub
movswl
adc
xor
xchg
imul
push
stos
pop
mov
fs
pop
aam
sbb
es
iret
loopne
or
loope
inc
or
lcall
ror
adc
xchg
xchg
sub
out
or
mov
das
das
push
out
adc
int3
and
adc
mov
or
jae
jecxz
aas
add
pop
mov
call
jbe
cs
jl
ljmp
popa
iret
das
sbb
pop
bound
push
or
push
fimuls
sbb
sub
lods
loopne
fiaddl
loop
jnp
sti
xorl
lahf
xchg
mov
loope
and
movsl
jg
out
loopne
repz
sbb
ffree
pop
out
add
js
xchg
mov
jge
adc
dec
loopne
testl
pop
xor
jg
pop
pop
mov
repnz
pop
and
mov
sbb
xor
and
sbb
cs
push
jno
sub
adc
ficompl
jae
dec
ret
test
sub
popf
add
xchg
movsl
pop
sbb
fldcw
cltd
ret
sti
out
mov
scas
mov
add
es
daa
mov
aaa
mov
xchg
sbbb
cmpsb
ja
lods
xchg
cltd
add
and
adc
rol
loopne
sub
push
pop
lret
xchg
and
popa
outsb
xor
dec
ds
clc
or
ljmp
in
inc
rcr
test
mov
push
mov
push
pop
pop
std
push
rcl
data16
inc
leave
dec
pop
jne
sub
scas
out
sarl
add
sti
dec
arpl
sub
xchg
sbb
ret
insb
inc
push
insl
cld
push
shrb
jge
pop
xor
sti
mov
mov
cs
outsl
aaa
dec
bnd
test
lods
je
pop
add
cmp
cmp
fimull
mov
mov
mov
jo
push
std
fwait
mov
jecxz
and
bound
add
enter
cmpsb
jo
imul
fnsave
dec
int
fsubs
dec
pshufw
cltd
test
hlt
rorb
dec
cmp
test
sti
jmp
mov
push
loopne
aad
or
pop
test
cmp
clc
out
mov
loope
jg
out
lods
and
dec
aad
ds
mov
xchg
xchg
and
dec
and
aam
xor
jo
xchg
ror
ds
jge
arpl
std
sub
sub
push
dec
mov
add
mov
sbb
pcmpgtb
mov
inc
insb
pop
adc
push
inc
xor
mov
xchg
jg
mov
sbb
pop
jbe
xor
mov
scas
xor
out
std
fildll
dec
jge
xchg
jle
out
daa
test
xchg
popf
push
jecxz
jb,pt
test
shrb
out
cmpsb
mov
inc
scas
sub
lods
or
shlb
and
int3
pop
cmp
ret
rorb
mov
andl
int
negl
push
cmpsl
push
xor
pop
inc
mov
enter
mov
mov
leave
xchg
xchg
mov
jle
push
test
and
mov
sti
rcrb
loopne
sbb
stc
sub
xor
fsub
fs
pop
sbb
jbe
dec
cmp
push
push
orl
imul
cli
mov
sub
scas
sub
outsl
cmp
sahf
pop
sub
add
adc
outsl
aad
cli
js
sahf
pop
xor
das
hlt
pop
mov
dec
gs
mov
mov
andb
mov
pop
fninit
in
sbb
pushf
mov
movsl
and
lea
cmp
or
jne
roll
addr16
cmp
mov
dec
lods
pop
inc
aad
xchg
loope
pushf
mov
iret
leave
mov
jo
lea
andb
adc
test
push
xor
scas
xchg
xchg
fistpl
orb
popa
xor
add
js
cmp
jmp
and
imul
ds
xchg
es
add
mov
push
mov
cmc
fiadds
roll
inc
xchg
mov
inc
jg
stos
ss
outsl
add
mov
out
loopne,pn
mov
or
notl
add
out
dec
adc
shll
in
or
setnp
dec
pop
ds
pushf
aas
int3
das
xchg
mov
mov
cmc
jle
call
stos
inc
stc
daa
ret
shlb
je
cmp
movsl
jne
sbb
jo
stos
sbb
imul
dec
adcl
mov
or
shlb
push
dec
pop
xchg
pop
es
hlt
or
outsl
mov
push
mov
mov
subl
lret
scas
fsubrs
xchg
leave
cmc
cmp
es
clc
out
cmp
add
decl
cmc
dec
cli
imulb
cmp
sbb
mov
push
and
mov
dec
pop
bound
je
inc
repnz
and
aas
cmp
adc
lea
fwait
cmp
mov
inc
sub
popf
fwait
cmp
adc
int3
mov
inc
sub
xchg
and
out
movsl
in
outsb
cmpsb
dec
fidivrl
bound
add
xchg
mov
add
mov
out
adc
mull
es
inc
cmp
mov
push
mov
push
popf
mov
jnp,pn
and
sbb
repz
iret
lea
arpl
cld
jno
testb
push
jb
jg
pop
cmc
popa
jp
xor
sub
iret
sti
sub
xchg
dec
push
mov
imul
push
ss
adc
lcall
sbb
xor
call
test
hlt
dec
sub
jns
jno
dec
mov
lahf
mov
push
shlb
leave
pop
xor
imul
adc
fstp
pop
jbe
movsl
leave
movsb
mov
lret
jne
adc
inc
scas
push
divb
pop
ret
testb
mov
ss
aad
push
push
jp
in
xor
dec
out
xchg
xchg
lea
push
hlt
push
pop
lahf
data16
sahf
mov
and
sti
inc
inc
subb
jmp
pop
cltd
mov
cmp
arpl
add
outsb
in
mov
jecxz
push
pop
pop
add
imul
test
outsl
fcompp
or
sti
dec
call
xlat
mov
popf
push
mov
pop
mov
sub
adcb
scas
in
push
mov
and
xchg
mov
daa
cmp
mov
mov
adc
iret
add
in
repz
mov
sub
push
push
in
movsl
mov
outsb
in
fisttps
mov
dec
sbb
adc
mov
xchg
sbb
test
inc
or
stos
loope
pop
xor
cmp
inc
xchg
repz
sbb
mov
mov
cmp
popf
mov
in
insl
pop
mov
sbb
jecxz
xorb
mov
ss
data16
and
movsb
cmp
lods
push
jno
push
xchg
mov
subl
flds
cwtl
pop
js
cmp
push
js
xchg
aam
add
jg
jae
outsl
daa
jno
cs
sbb
loopne
jae
test
lret
cmp
mov
scas
rcrb
cmpsb
pusha
test
cmc
mov
popa
in
ljmp
mov
pop
xor
xor
std
pushf
int3
dec
lahf
in
push
jo
rcr
in
cmpsb
fsts
test
mov
outsl
rep
repz
popa
mov
jno
sahf
test
enter
pop
push
inc
xchg
push
movsb
movsb
aaa
adc
je
mov
insl
adc
scas
xor
in
cmp
dec
jno
ljmp
dec
sbb
ror
cs
xchg
in
xlat
sub
std
push
lret
cmpsl
mov
jb
dec
popa
cmpb
xor
jns
nop
push
cwtl
sti
rcrb
imul
ss
push
push
cli
ljmp
lods
into
adc
es
sbb
out
mov
jb
cltd
test
sub
ljmp
or
pop
xor
into
mov
dec
xor
sti
outsl
sbb
mov
push
popf
jbe
cmp
in
xchg
adc
idivl
push
addr16
or
icebp
lods
mov
nop
popf
loope
ret
inc
push
cltd
xor
out
xchg
jge
nop
push
imul
mov
jge
cmc
jo
aas
add
jl
mov
lds
into
sti
dec
orl
fcmovnu
pop
and
xor
mov
xchg
pop
daa
jp
inc
ret
push
inc
xchg
dec
js
add
inc
and
mov
dec
push
out
daa
pusha
sbb
push
xchg
jl
or
call
lahf
icebp
cmp
mov
pop
sbb
rcrl
mov
xlat
das
jp
adc
dec
lcall
aam
adc
and
pop
sbb
xchg
xchg
insb
dec
jge
jnp
mov
enter
outsb
pop
adc
xchg
mov
pop
and
cltd
xchg
imul
xchg
or
lods
inc
sub
mov
leave
or
nop
cli
or
lcall
rcrl
mov
mov
outsl
into
add
sub
mov
mov
test
jo
jl
ret
or
mov
sub
fwait
enter
dec
mov
jae
fxtract
push
pop
pop
xrelease
call
data16
hlt
adc
dec
sbb
stos
push
dec
pushl
imul
mov
ret
out
lock
imul
mov
push
push
jmp
jl
iret
nop
es
mov
pushf
lock
and
mov
std
movsl
lods
mov
mov
fs
out
push
mov
and
ret
aas
adc
dec
push
jb
into
loopne
mov
jns
xor
rcl
iret
lahf
and
lock
sarl
xchg
add
cwtl
jno
lret
inc
xchg
call
sub
repnz
inc
out
xor
jle
aaa
jp
dec
push
pusha
cmp
or
sbb
in
and
std
arpl
insl
ret
cld
std
mov
xchg
dec
lods
rclb
mov
and
xor
scas
dec
inc
cs
push
mov
push
jnp
shrb
nop
mov
out
xchg
cmp
adc
sahf
movsl
inc
jl
lock
bound
dec
push
sbb
cmp
shl
insl
jmp
sbb
mov
xor
dec
iret
or
xor
pop
sbbb
cld
stos
shrl
cmpsb
sbb
imul
aam
pop
mov
movsb
dec
dec
mov
std
adc
cmpsb
xchg
bound
sti
int3
mov
ja
mov
push
aad
pop
in
dec
adc
ljmp
cltd
orl
dec
int
fnstenv
and
iret
jp
shrb
or
ja
adc
ja
fidivs
pop
les
push
lahf
sbb
das
les
je
in
inc
jge
push
push
movsl
push
sbb
xchg
inc
pop
repnz
sub
sbb
add
pop
gs
pop
inc
je
insb
lahf
xchg
push
push
int
jb
adc
push
xchg
psrlw
repz
mov
clc
das
div
hlt
add
test
pop
mov
out
stc
sub
scas
xchg
xchg
insl
enter
dec
inc
mov
mov
icebp
not
adc
adc
andl
or
jg
aam
imulb
and
fistps
test
jecxz
mov
insb
ret
icebp
insb
sub
outsl
lcall
es
adc
add
call
fisubl
adc
repnz
jb
frstor
push
or
mov
mov
shll
enter
cmp
xchg
mov
out
push
xlat
jmp
fdivrs
outsb
lret
imul
or
jno
fs
mov
outsb
lcall
movb
adc
or
fcoms
bnd
into
xor
mov
clc
orl
lret
dec
pop
dec
pop
cli
call
dec
bound
inc
out
push
stc
mov
test
fwait
out
not
cmpsl
bound
xchg
movsb
inc
mov
into
mov
push
sub
adc
xchg
pop
daa
lret
repz
jl
lock
xlat
negb
add
adc
movsl
add
xchg
fsubr
jo
cmp
mov
nop
add
pop
xchg
or
iret
aas
dec
mov
cmp
sub
leave
pop
mov
push
fwait
aad
mov
pushf
jmp
pop
pop
sub
stc
ss
add
dec
cmp
push
adc
jno
jecxz
jl
mov
xor
and
loope
test
sahf
mov
jmp
ds
push
mov
fisttpl
popf
data16
xor
fstl
test
fisubrl
les
fwait
push
sbb
mov
inc
adc
or
lcall
lcall
lahf
lods
cmp
jmp
stc
push
and
out
mov
push
add
sub
popf
mov
ficoms
adc
ret
jge
in
and
sbb
dec
ret
mov
inc
fsubl
sub
loope
inc
lock
aaa
inc
xor
add
ud1
movsl
xchg
and
add
push
rol
test
inc
lret
into
add
std
sbb
leave
push
out
dec
lcall
mul
sub
into
and
adc
sbb
cmp
mov
loop
mov
adc
mov
push
frstpm(287
dec
xchg
xchg
adcl
fmulp
lock
inc
jo
dec
push
call
mov
or
fisubrl
mov
or
push
ss
adc
cli
iret
mov
stc
lds
shr
mov
push
mov
push
prefetch
lret
push
mov
pop
lock
mov
pop
pop
es
or
mov
inc
out
lcall
popa
sbb
fs
xor
and
lret
jae
test
sbb
hlt
or
inc
jo
hlt
popf
pusha
mov
jb
inc
cmc
lock
adc
into
test
push
cmpl
push
jns
ss
dec
clc
fldt
sahf
jne
xor
cmpsb
xor
cltd
sub
mov
stos
loopne
daa
push
jl
jae
and
pop
jns
add
out
bound
jge
sub
jno
push
mov
jne
inc
mov
adc
cmc
sbb
jne
sub
mull
rclb
leave
dec
ret
inc
mov
rcr
jbe
mov
mov
dec
cs
flds
out
and
cmc
fildl
or
dec
sbb
repnz
mov
xor
mov
cmc
icebp
jge
add
cmove
es
out
in
mov
mov
sahf
jnp
ds
jns
insb
push
js
in
sbb
push
adc
jns
stc
and
stc
aad
sbbl
mov
sub
xor
inc
mov
imulb
add
movsl
cwtl
outsb
mov
pop
lock
loope
repz
les
add
xlat
outsl
xchg
lds
fdivs
fsubl
les
cmp
cmp
sarl
pop
jecxz
jbe
cltd
addr16
popaw
sbb
pusha
jecxz
je
mov
pop
lret
push
out
xchg
inc
int
call
out
pop
sar
mov
mov
or
mov
loope
xlat
jnp
cwtl
xchg
mov
sbb
or
mov
pop
push
and
xchg
jl
lahf
js
mov
inc
std
addb
out
lret
into
inc
cmpsl
jmp
mov
sbb
jecxz
jb
push
jnp
push
push
inc
mov
mov
daa
out
out
fxch
ljmp
xchg
xor
ljmp
jmp
mov
mov
add
ret
lahf
jns
or
ficompl
nop
mov
mov
sub
scas
inc
xor
lahf
adc
imul
xor
es
mov
push
cld
out
outsb
jg
pop
ror
mov
pop
les
sbbl
jnp
xchg
lcall
dec
xchg
jno
ds
imul
test
out
pop
mov
fcoml
je
jae
push
sbb
sub
inc
cwtl
enter
ja
push
add
pop
push
xchg
sahf
loopne
cmpsb
cltd
inc
sbb
push
lret
xchg
jno
cmp
js
es
pop
sub
loop,pn
adc
sbb
mov
pop
test
xor
addb
je
in
lock
fnsave
push
add
loope,pn
dec
bound
push
cmp
xor
insb
mov
leave
int
mov
mov
orl
push
loopne
pop
mov
jl
inc
movsl
cmp
pushf
add
inc
push
sbb
push
push
mov
sarb
or
push
jl
jbe
sbb
sti
popa
std
pop
fistl
jns
fsub
sub
add
cmpsb
adc
pop
and
xchg
insb
dec
pop
push
test
lods
mov
xchg
cwtl
push
movsb
or
ljmp
out
adc
clc
cltd
repz
mov
mov
jnp
frstor
adc
push
push
nop
in
push
hlt
add
mov
adc
enter
fisubrl
test
inc
push
loope
xchg
sub
cmp
xchg
outsl
shlb
or
fldenv
add
hlt
mov
movsl
je
lahf
cmp
push
pop
xchg
lcall
add
push
jo
mov
es
xor
imul
cs
lods
test
and
es
and
loop
adc
arpl
mov
cmp
xchg
addr16
icebp
mov
aad
insb
and
adc
popa
jo
subl
out
scas
mov
adc
sub
add
push
mov
lds
and
pop
out
push
test
xor
mov
fwait
mov
xor
fptan
mov
bound
mov
lahf
lret
js
pop
cltd
add
xchg
test
int3
and
mov
test
loopne
scas
jne
pop
loope
sub
jb
cmp
jne
fdivr
hlt
pop
xor
xchg
xchg
jnp
inc
loope
lea
imul
and
pop
add
pusha
nop
mov
cmpb
fdivr
sbb
mov
lods
fsubrl
dec
adc
jecxz
out
mov
clc
imull
scas
mov
repnz
dec
lock
dec
and
lock
in
aas
and
inc
lods
cwtl
cmpsl
mov
popa
ljmp
hlt
xchg
es
inc
mov
push
xchg
jmp
mov
and
daa
and
aam
ds
and
inc
adc
sub
sarb
mov
and
pusha
je
outsb
inc
and
lock
gs
imull
or
and
aad
daa
lret
push
adc
les
push
aam
fistpll
mov
into
daa
mov
inc
xchg
dec
push
pop
and
push
aam
ds
and
cmp
xor
movsl
xchg
popl
in
jo
jecxz
sub
mov
jae
pop
test
jl
inc
and
loopne
sub
dec
sbb
sub
or
push
xchg
in
mov
movsb
jb
inc
mov
cmp
dec
addr16
test
repz
cmc
pop
outsb
sahf
fmull
jmp
fsubrs
inc
cmp
jge
sub
bound
xchg
jle
push
loop
lea
test
into
sub
cmp
sbb
mov
addr16
and
insl
xchg
in
ss
jb
pop
in
sahf
popa
lret
or
pop
xchg
mov
and
insl
sub
repz
xchg
adc
jmp
mov
inc
neg
mov
faddl
es
sub
leave
mov
stos
pop
xchg
sub
inc
ror
lret
cmp
test
popa
push
mov
adc
mov
rcl
inc
xchg
mov
rclb
or
cmpsl
mov
mov
out
imul
push
xchg
and
cli
je
pop
mov
cli
and
shl
push
stos
add
das
push
push
scas
bound
cltd
and
ljmp
cmp
fmul
lret
scas
jg
adc
jge
mov
jb
fsubrl
dec
push
mov
ficompl
jbe
or
xor
std
add
lods
xor
adc
mov
push
popa
clc
jbe
stos
popf
cmp
into
movb
movsb
out
daa
lret
xchg
mul
pop
test
fdivs
cmpsb
xchg
cmpsl
das
mov
or
pop
das
adc
pop
shlb
mov
icebp
adc
cmc
push
push
fnstenv
dec
and
outsb
fstpl
push
cmp
jmp
or
adc
les
out
pop
mov
cmpb
cmpsb
mov
mov
cmpb
cltd
es
jbe
xchg
daa
sbb
popa
mov
xchg
jno
xchg
das
popa
ds
mov
lcall
add
mov
pushf
lods
ja
push
shll
mov
pop
clc
inc
jne,pt
pop
addr16
inc
in
stos
add
mov
and
jnp
sbb
sub
adc
jbe
or
daa
mov
mov
insb
loopne
dec
clc
jns
add
leave
out
int
xlat
add
fwait
dec
subb
sub
lcall
and
pop
and
repz
inc
lret
or
push
sbb
icebp
mov
mov
push
enter
mov
fucomip
test
mov
divl
fimull
inc
insl
xor
out
faddp
push
aas
enter
inc
add
jns
sahf
stos
jecxz
sub
and
fs
pop
lock
pop
imull
mov
es
pop
testb
jo
push
and
push
aas
out
pop
jbe
xor
xor
sub
mov
dec
int3
xor
and
and
jg
jo
movsb
test
test
push
fwait
push
cmp
pop
xorps
mov
dec
add
xor
out
sbb
sub
cmpsl
pop
mov
sbb
lea
clc
sti
jns
xchg
lods
xchg
mov
gs
cmp
nop
push
fsubrl
and
inc
inc
mov
push
jl
pop
out
into
dec
shl
cmp
cmp
ss
leave
pop
push
inc
cmp
int
pop
les
test
roll
jmp
add
push
ljmp
or
arpl
shlb
push
sub
cmpsb
mov
xchg
daa
icebp
push
sbb
cmp
inc
mov
adc
in
cwtl
les
push
cmp
xor
fmul
ss
adc
aas
cmp
fistl
dec
add
inc
imul
lcall
ljmp
fdivrl
push
std
push
mov
shr
cmove
ja
mov
mov
icebp
mov
es
xchg
sub
call
les
sti
push
test
pop
les
adc
sbb
and
lds
fcompl
xchg
ret
mov
push
scas
inc
xchg
daa
pop
push
scas
js
pop
pop
mov
popf
clc
in
xchg
mov
or
adc
in
add
shlb
jge
sub
imul
aas
xor
in
sbb
pcmpeqb
pop
or
ja
or
sbb
sbb
stc
scas
mov
or
cwtl
jl
ja
xchg
fcmovbe
in
lret
push
and
jg
jae
fsubs
mov
cmpsb
pop
pop
insb
xchg
fists
xor
mov
lret
push
xor
push
sbb
repz
dec
jg
xor
dec
pushf
xor
and
sub
aas
bound
in
std
repnz
add
in
cmp
jae
jmp
fimuls
in
adc
mov
xchg
inc
push
mov
sbb
fadds
xchg
sbb
ljmp
xchg
pusha
push
mov
int
pop
loopne
sbb
mov
cmp
data16
adc
sub
test
stc
cmpsl
cmpsl
or
call
mov
lahf
dec
inc
and
xchg
test
mov
jle
add
mov
pop
cmpl
cli
adc
int3
lock
lds
cli
into
and
and
rcll
int3
cmp
iret
xchg
das
insb
lock
nop
add
data16
pop
inc
sbb
cwtl
xchg
adc
pop
rolb
inc
aam
ja
movsb
or
andl
nop
mov
xchg
cwtl
stos
ret
adc
cmp
mov
mov
nop
in
mov
mov
mov
push
mov
in
xchg
inc
lahf
push
stos
loop
xchg
lds
imul
mov
mov
mov
jg
sbbl
lods
and
or
mov
cmp
mov
cmp
das
je
scas
and
jbe
cmpsl
je
pusha
push
jge
data16
push
sub
mov
mov
dec
pop
cmp
clc
push
mov
loop
xor
mov
jo
lcall
fisttps
dec
xor
cli
mov
dec
maxps
pop
cmp
cmpsb
add
movsb
sti
negb
adcl
repz
mov
mov
fsts
popaw
out
ds
dec
jecxz
cmp
fsubr
stos
aas
xor
fiaddl
fnstsw
xor
sbb
add
pop
cmpl
les
adc
ficoms
test
add
xor
repnz
xchg
fs
mov
sbb
add
jge
xor
mov
popf
dec
ljmp
pop
vpmuludq
rcrl
lret
lahf
pop
mov
push
ljmp
fbstp
pop
repz
jg
pop
sbb
push
or
iret
int
jae
in
roll
sub
lcall
xor
inc
lret
cmc
add
dec
add
sub
dec
bound
sbb
sbb
enter
lods
xlat
cmc
inc
stos
cmp
jle
mulb
es
push
dec
repz
cmc
mov
xor
jae
dec
push
pusha
cmpsb
rclb
cmp
shrb
cltd
out
iret
test
add
les
adc
pop
in
call
rcll
loopne
push
subl
pop
mov
cltd
jmp
mov
jge
jecxz
je
inc
btr
lds
pop
sub
insb
mov
fildll
ja
xchg
in
push
into
out
cmp
cs
fcoms
cmp
cmp
aad
jo
ljmp
cs
data16
repnz
fwait
std
ljmp
pop
outsl
arpl
lcall
enter
mov
div
pop
cmp
and
mov
push
mov
frstor
outsl
mov
jecxz
gs
mov
mov
mov
push
cmpb
stc
inc
shll
cmp
ss
adc
and
jle
loopne,pt
jle
mov
outsl
sub
cli
xchg
mov
roll
aas
mov
push
fnstenv
shll
and
push
loop
dec
fstl
pop
pop
cmp
stos
repz
leave
adc
push
push
push
dec
cs
out
jmp
jp
xchg
mov
insl
push
into
xor
cmp
adc
loop
in
or
cmp
add
xorb
jge
dec
push
pop
mov
jecxz
inc
in
lret
outsl
xor
dec
xor
adc
cmpsb
jb
cmpl
pushf
lret
imul
xor
dec
cltd
inc
jb
lcall
add
xlat
addr16
push
loop
hlt
shll
imul
sub
js
jno
mov
cmpsl
adc
dec
mov
sbb
je
jo
xchg
icebp
push
mov
xchg
or
inc
test
mov
inc
dec
jno
mov
dec
int
fdivrs
insl
addr16
xchg
and
movsl
xchg
repz
push
das
jo
push
jo
or
cltd
fisubl
pop
insb
add
stos
mov
jge
add
es
xchg
fstpt
arpl
add
mov
pushf
or
dec
loope
push
iret
dec
cltd
xchg
cs
pop
pop
sbb
fildll
test
loopne
fadds
adc
mov
in
mov
pop
push
in
mov
sbb
xchg
cs
pushw
cmp
ffreep
or
pop
rcrb
sub
int3
jnp
push
cmp
loop
loope
cmp
es
cmp
ja
inc
or
mov
loop
sbb
out
cmc
mov
enter
mov
xlat
int3
lret
cmp
ljmp
xchg
stos
push
xchg
and
cmc
xchg
imul
outsb
repnz
es
pushf
lods
stc
or
jne,pt
or
cltd
out
xor
mov
lods
mov
insl
mov
fs
hlt
add
lret
inc
shl
push
fbld
push
mov
in
scas
cld
rolb
imul
pushf
dec
shlb
inc
outsl
xlat
andb
and
dec
daa
jecxz
test
adc
fldenv
or
ljmp
lret
arpl
mov
ret
inc
cmp
cs
shrb
movsl
rep
and
xchg
int3
mov
or
push
sub
cli
aam
cli
xlat
push
xor
ffree
mov
jae
ret
push
add
or
cwtl
lret
fadds
out
jg
xor
inc
push
sub
adc
popf
xor
or
push
inc
or
cmp
cwtl
xor
int
fs
test
fisubs
mov
cwtl
out
mov
adc
ret
mov
call
int3
popf
cld
pop
aad
adc
jae
lcall
add
or
pushf
xchg
inc
cmp
js
mov
pop
fcmovb
inc
xor
cwtl
and
gs
movsl
adc
test
mov
sbb
loopne
mov
jno
pop
and
pop
cltd
scas
jg
xchg
ficomps
pop
push
jge
test
nop
ret
icebp
dec
xchg
dec
mov
into
add
dec
scas
jecxz
push
push
push
imull
ja
inc
push
push
inc
xchg
pop
push
in
repnz
into
sub
das
xchg
fimull
jae
sub
repnz
push
push
scas
notb
xchg
stos
cli
fs
aas
mov
mov
in
lods
call
jmp
sbb
popf
addr16
ss
mov
mov
xchg
push
mov
test
sbb
sub
mov
jne
sbb
sbb
sarl
push
adc
inc
cli
push
fistps
jl
ficoms
lock
loopne
shll
lahf
dec
and
lods
mov
pop
leave
add
and
ljmp
int
fistpl
lods
sbb
mov
aam
adc
adc
lcall
fcoms
push
or
pop
adc
sahf
or
ss
or
sub
and
sti
sub
jb
xor
outsl
mov
popf
sbb
arpl
jne
push
mov
and
pop
jae
and
hlt
xchg
xchg
sti
fs
sbb
or
inc
xchg
decl
mov
xchg
pusha
arpl
jno
arpl
fcompl
fldt
pop
lret
push
sub
pop
test
mov
mov
aad
popl
scas
lds
or
pop
mov
scas
and
cmp
sbb
rorb
xchg
mov
scas
pop
pop
jmp
les
pop
fdivs
mov
or
cmc
js
mov
cli
pop
test
pop
testl
insl
dec
addr16
pop
xchg
pop
xor
int3
movsb
addr16
or
clc
pushf
mulb
mov
sbb
clc
push
adc
sti
dec
xor
and
push
mov
mov
fsubrs
jl
push
sbb
sbb
sahf
std
leave
jecxz
and
sarb
cltd
mov
aaa
cli
mov
sub
mov
or
jne
repz
cmp
cltd
frstpm(287
cmp
pop
mov
mov
movsb
pop
das
pop
mov
ds
inc
pop
push
add
pop
or
inc
out
mov
mov
repnz
or
cmp
or
out
sbb
jno
leave
in
out
pop
cmp
scas
mov
jo
sub
lods
pop
mov
dec
mov
lea
in
add
pop
cmpsb
cmp
mov
bound
xchg
jge
mov
sub
lods
in
mov
les
dec
pop
xchg
movb
ljmp
xchg
in
lret
ds
pop
ds
push
f2xm1
out
dec
sbb
fisubrl
adc
leave
or
push
pop
movsb
pop
das
dec
xor
mov
lret
push
xchg
jbe
ret
dec
jno
and
int3
pop
out
fidivs
and
inc
xchg
call
daa
mov
xchg
hlt
js
movzbl
jg
adc
adc
jb
icebp
cmp
lods
mov
sub
rcl
paddd
hlt
call
mov
mov
dec
jmp
cltd
int
andb
movsb
xchg
cld
adc
cld
shlb
xchg
sub
daa
mov
test
sub
xchg
sub
fwait
mov
jp
pop
pop
adc
adc
mov
jp
ret
mov
or
cmpsb
mov
sub
jge
add
inc
jge
shll
call
ret
sbb
cltd
fs
jbe
sbb
mov
inc
ss
repz
ret
jb
push
mov
iret
xchg
iret
adc
cmp
push
sub
cmp
jae
mov
push
pop
sbb
aas
dec
clc
sbb
insl
push
jp
inc
aad
imul
xor
cmpb
movsb
adc
push
jmp
push
shl
xorl
add
out
jno
stc
popa
popf
add
jnp
mov
js
push
stos
push
adc
xor
or
cmp
pop
pop
jmp
mov
or
xchg
adc
xor
pop
bound
stc
insl
sti
adc
data16
sub
ss
xchg
inc
movsl
aam
mov
mov
cmp
jns
jbe
jmp
addr16
loope
inc
scas
cmpsl
xor
mov
cmpsl
stos
stc
cs
and
adcl
out
inc
push
repnz
leave
clc
inc
js
sbb
or
mov
ds
push
push
int3
dec
scas
cltd
xor
push
xor
sbb
ret
and
ret
lcall
ret
lea
sub
xchg
dec
aaa
lahf
push
mov
nop
jg
xchg
sarb
xor
lret
jp,pn
sub
stos
loop
sub
mov
sti
sub
divb
push
add
test
and
mov
lahf
jecxz
xor
loope
mov
dec
dec
mov
inc
nop
std
clc
cltd
jae
lret
pusha
js
cmc
mov
sbb
negb
push
frstor
xchg
mov
jmp
scas
xor
mov
push
shlb
or
add
scas
inc
push
clc
dec
inc
shrl
push
inc
inc
es
aaa
sbb
mov
mov
clc
dec
push
pushf
xor
in
sub
out
cmp
jo
pop
or
xchg
hlt
or
jp
adc
pusha
fimull
mov
jnp
push
loop
mulb
in
mov
cmp
iret
xor
xor
mov
jno
ret
cmp
push
fs
inc
mov
stos
mov
rol
pusha
xlat
xor
jge
daa
push
push
pop
and
mov
or
dec
fdivrs
fiadds
mov
and
cmp
dec
or
xor
cld
aaa
mov
adc
mov
xchg
cltd
cmc
sub
cmp
push
lds
mov
and
int
ret
out
xchg
andl
call
jge
out
sti
dec
in
lods
fadds
loope
xchg
mov
push
int
jbe
fdiv
mov
mov
inc
mov
mov
test
sub
cmp
xchg
test
faddl
push
mov
clc
jnp
dec
mov
jl
shll
dec
mov
push
scas
movsb
xor
insb
pop
jl
xchg
dec
leave
std
fcoms
out
and
cwtl
cmc
movsb
adc
lret
add
cli
mov
in
sbb
or
in
in
and
jecxz
clc
pop
sub
dec
shrb
or
sbb
pop
fistpl
push
or
aam
cmpsb
push
xchg
mov
mov
fwait
adc
call
dec
lret
mov
sarl
jo
mov
int
inc
out
lret
push
mov
mov
mov
pop
insl
add
adc
cmpsb
rcr
and
cwtl
dec
xchg
inc
in
lock
sbb
xor
arpl
divl
pop
dec
mov
mov
mov
ss
push
mov
mov
aaa
ret
or
add
xor
mov
fsubrs
fwait
mov
loop
push
and
jmp
inc
ljmp
nop
je
cmp
xor
xchg
push
cmpb
jno
leave
gs
sti
cmp
lcall
jge
push
add
mov
jecxz
or
adc
mov
pop
dec
loopne
out
imul
cli
into
mov
jne
xchg
jae
lods
mov
aam
lret
push
nop
jl
and
adc
scas
fisubrl
pop
les
cmpsb
lods
push
push
cld
inc
jge
sbb
fstl
pushf
dec
push
test
adc
cld
pop
es
cmp
push
add
mov
sbb
ds
push
outsl
mov
into
pop
hlt
sbb
add
lahf
pop
cmp
add
stos
mov
lods
sarl
mov
data16
xor
sbb
js
pop
push
jp
out
xchg
mov
mov
push
xchg
or
push
push
aaa
out
mov
push
js
push
int
pop
enter
ds
mov
mov
lock
sarb
addr16
in
jl
movsl
lods
mov
insb
jne
xchg
jp
mov
ret
lahf
mov
sbb
adc
push
bound
sbb
pop
cmp
rol
add
enter
into
pop
jns
xchg
push
ss
cmpb
push
xor
int3
ds
sbb
mov
sub
push
movsb
out
and
pop
loope
into
xchg
pop
fs
insb
xchg
fwait
sbb
das
sbb
fildl
cs
jb
stc
imul
xor
sbb
jns
jo
sub
jg
cli
aaa
inc
out
rcrb
in
jnp
enter
jne
dec
out
mov
clc
cmp
xchg
push
rorb
jle
and
and
mov
push
jl
mov
mov
jns
cmp
fwait
or
xlat
jecxz
aaa
nop
lock
loop
pusha
cmc
loop
dec
jp
add
mov
int
inc
lds
andb
mov
mov
insb
inc
fwait
jmp
cmp
pusha
ja
loopne
ljmp
shrl
push
rolb
mov
les
sub
push
and
or
call
mov
pop
jb
shll
sahf
into
jnp
jae
pop
dec
test
mov
add
sbb
mov
sbb
add
push
cmp
popa
push
push
inc
stos
mov
push
cmp
pop
ljmp
arpl
inc
push
pushf
xlat
push
popa
add
stos
push
movsl
xchg
mov
loop
shl
das
cmpsb
mov
lret
and
or
adc
push
push
sub
cmp
mov
sub
shrl
dec
mov
pop
sub
orl
addr16
or
nop
pop
inc
lret
mov
inc
dec
test
fsub
push
adc
or
xlat
mov
mulb
jbe
jne
mov
rolb
mov
xor
lock
push
adcb
cmpsb
or
add
dec
jmp
xchg
and
push
pop
jecxz
push
aad
int
xchg
cs
outsl
movsb
cwtl
dec
or
movsl
pop
and
fcmovu
fcomps
mov
jmp
stc
mov
cmp
mov
je
lcall
cld
push
pop
mov
or
mov
das
jns
lea
xchg
sub
xorl
sub
cmp
sarb
or
in
mov
stc
or
dec
je
call
and
test
ficoml
adc
dec
xor
and
ss
xor
cmp
mov
mov
xchg
add
sarl
rcll
ret
jle
ja
add
add
cmp
sub
enter
loope
jns
mov
inc
mov
lret
inc
loope
icebp
push
in
pop
popf
dec
mov
inc
xor
jmp
and
mov
adc
xchg
mov
sub
pop
cmp
imul
inc
pop
sbbl
call
es
and
cmpsl
subb
out
ds
cmp
xchg
es
popa
mov
mov
bound
inc
data16
inc
and
adc
fcompl
test
in
sbbl
inc
sbb
cmp
lret
ret
add
popf
icebp
sahf
cmc
vmwrite
sub
stos
movsl
aam
or
ss
push
stos
cld
jmp
xor
mov
or
cmp
clc
popw
mov
cs
imul
adcb
and
aas
imul
xchg
xchg
mulb
xor
movsl
jne
xchg
mov
adc
mov
popa
cmpsl
sahf
mov
movl
mov
js
add
cmp
cli
imulb
sbb
mov
imul
idivl
jno
jp
movsl
pop
out
sbb
sbb
push
notl
xor
movsl
into
jle
xchg
push
loopne
cltd
xchg
add
mov
ss
pop
push
push
cmp
mov
lret
mov
pop
imul
ss
inc
mov
arpl
xor
mov
imul
push
repnz
das
sub
inc
stc
add
outsb
mov
add
and
lods
lods
lahf
cmp
ss
sti
xchg
mov
push
sub
add
ss
and
pop
push
lret
ficomps
xor
cltd
scas
js
filds
sub
jl
mov
xlat
jb
adc
jo
add
or
into
aaa
lea
stos
test
mov
movsl
xchg
lret
or
mov
insl
js
mov
sarb
pop
mov
insb
clc
lods
lods
inc
xchg
pop
and
lahf
mov
je
cwtl
negl
ja
inc
imul
mov
pop
sub
xor
add
lods
fildl
cmc
stc
dec
dec
int3
xchg
xchg
jnp
fs
out
aas
aam
xor
fmulp
pop
mov
cli
out
jb
popf
mov
fcmovb
ror
insb
insb
or
lret
and
lock
fnsave
mov
daa
fcoml
shll
cld
mov
sti
out
mov
push
xchg
sub
repnz
or
push
adc
mov
lret
or
aam
mov
arpl
cmp
xchg
repnz
repz
or
push
jbe
loope
adc
cmp
cmpsb
lock
movsb
pop
int3
dec
arpl
outsb
ss
jmp
jbe
dec
mov
leave
adc
int
cwtl
sub
adc
pop
icebp
imul
leave
adc
icebp
mov
inc
fistl
inc
pusha
icebp
lea
cmp
or
daa
xor
or
push
inc
sub
sbb
test
mov
into
pop
out
sub
mov
adc
fdivl
idivl
sar
into
adc
xchg
dec
xor
sub
dec
push
ss
fmul
loopne
fs
or
lds
insb
js,pt
aas
out
daa
shl
pop
stos
mov
scas
mov
mov
loopne
inc
and
fsubrp
rcl
mov
sbb
pop
mov
cltd
xchg
mov
lret
cmp
add
push
and
imul
push
movsl
push
mov
lahf
mov
push
mov
das
orb
jnp
pop
insb
mov
sbb
inc
cmp
jge
and
sbb
in
push
std
push
xchg
pop
push
push
pop
push
dec
xchg
mov
pop
inc
push
movsl
ffree
adc
das
mov
jp
lock
daa
pop
lret
jge
add
add
insl
mov
pop
jmp
mov
dec
rcrb
cmp
scas
scas
test
pop
fcmovne
into
xchg
sbb
push
icebp
adc
dec
stc
das
popf
enter
push
bound
js
leave
mov
push
aas
lret
push
fimuls
adc
shlb
jno
sbb
mov
fadds
loopne
mov
inc
pop
inc
fistpl
push
xlat
mov
sbb
add
test
pop
filds
movb
cmp
push
inc
pusha
push
or
int
pusha
mov
pop
gs
or
fsubrs
jae
adc
push
ficompl
imul
xchg
dec
cmp
outsb
sbbb
les
ljmp
loop
faddl
pop
xor
mov
shlb
and
stc
sub
fs
lret
add
test
pop
outsl
mov
mov
icebp
fldt
fcmove
aaa
cmc
sub
pop
jecxz
xchg
sub
sub
pop
cld
loopne
inc
sar
push
sbb
jl
paddd
mov
out
sub
mov
jno
out
fnsave
mov
repnz
popf
lds
in
and
push
inc
sbb
sbb
pusha
mov
fnstsw
mov
sub
push
stc
ret
std
fimuls
adc
mov
lods
xor
loope
stos
in
stos
mov
inc
lods
outsb
push
dec
push
jae
addl
dec
pop
jle
mov
mov
into
jb
ja
mov
loope
xor
in
mov
cmp
add
shrb
rcl
fisttps
pop
pop
dec
sti
adc
mov
cmp
adc
inc
incl
je
sub
mov
mov
cltd
adcb
jns
inc
add
loop
jb
add
cmp
mov
xlat
enter
dec
sbb
mov
xchg
dec
dec
test
push
stos
push
mov
fisubl
pop
mov
mov
insl
mov
pop
js
shlb
sbb
in
and
dec
lahf
dec
rcll
fidivs
mov
adc
aam
pop
cmpsl
push
cmpb
mov
jno
jle
loop
popf
and
cld
arpl
cmpl
cmp
push
neg
pop
test
add
out
adc
sti
and
test
sub
pop
xor
out
or
pusha
sbb
mov
ret
aad
sub
dec
popf
hlt
xchg
jmp
xor
fcmovnb
mov
repz
sub
or
push
popf
mov
cmp
xor
mov
xor
cld
and
test
adc
xor
jmp
pop
inc
lods
fstp
cmp
or
and
dec
scas
adc
imul
arpl
js
test
icebp
push
pop
pop
jbe
sti
vfmsub132ss
stos
rol
xchg
push
mov
in
mov
push
ror
mulb
arpl
inc
test
pop
mov
adc
popf
orb
jg
sarb
and
ds
inc
xchg
inc
outsl
push
xor
sub
lret
adc
mov
xchg
and
mov
pop
xor
cmp
xchg
outsl
aaa
adcb
mov
call
dec
xchg
push
aad
pop
or
pop
lret
aaa
jns
mov
int3
jno
jg
cmp
mov
dec
mov
movsl
xor
mov
pop
mov
bound
stos
adc
and
push
fs
jg
mov
push
in
cli
xchg
push
iret
insb
int
or
and
out
add
cmp
pusha
sub
rolb
in
fxch
adc
jmp
or
lret
inc
push
sub
jno
idivb
icebp
fcmovnu
cmp
push
sbb
popf
data16
pop
and
push
shrl
and
push
inc
loopne
imul
add
out
mov
xchg
insb
mov
in
out
out
adcb
mov
and
xor
pop
jmp
sub
mov
test
sub
icebp
xor
xor
fdivs
mov
fstps
or
cs
mov
mov
jle
aam
pushf
adc
mov
jl
mov
nop
and
xor
push
xor
lock
xchg
lahf
adc
xor
pop
cmpsb
or
mov
cmpsl
xchg
inc
cmp
push
xor
cmpsb
movsb
mov
stc
div
imulb
pop
aad
mov
xor
xlat
push
loope
cld
xorb
mov
sub
mov
jecxz
adc
add
lds
je
push
dec
sbb
ljmp
pop
mov
leave
jae
jb
out
movsb
ljmp
mov
xchg
mov
fstl
pop
lret
outsl
fdiv
ret
imul
test
mov
mov
and
jmp
arpl
test
test
int3
mull
pop
mov
js
sub
outsb
adc
mov
cmp
push
jno
push
lea
lahf
ret
push
inc
cli
dec
shlb
push
push
roll
insb
std
xor
in
das
aaa
js
dec
add
in
gs
mov
pop
mov
loopne
mov
and
in
dec
push
jmp
cmpsb
mov
push
cwtl
and
sub
push
inc
mov
mov
dec
clc
cmp
orb
mov
sti
jo
inc
mov
or
shlb
pop
cmp
mov
outsl
push
jge
mov
negb
xchg
lea
sub
in
push
push
lret
dec
lret
mov
jns
pop
and
lods
fnstcw
jle
jmp
out
xchg
push
leave
std
loopne
or
test
insb
popa
clc
cmpsb
cwtl
sub
mov
ds
push
jmp
iret
jl
jle
adc
pop
adc
pop
scas
test
inc
and
add
xor
xchg
fld
and
pop
leave
roll
cmpsb
lods
or
cmp
mov
js
stos
sbb
cld
mov
sbb
jle
xchg
outsl
ja
sub
xor
js
sbb
subb
cmc
pop
aam
lret
adc
xchg
push
in
mov
adc
jne
dec
fisttpl
sbb
cltd
jne
outsb
jmp
mov
pop
cmp
pop
adcb
cmpsb
xor
and
mov
fistps
lret
aad
fcmovnbe
add
popf
aas
mov
xlat
xor
test
loopne
mov
jp
or
insb
cltd
outsb
rcll
add
adc
cltd
jmp
push
int3
pop
filds
sub
dec
loope
loope
or
cld
int3
lds
mov
sbb
mov
notl
mov
lock
int
mov
cld
popa
xchg
int3
out
xchg
mov
pop
mov
loope
arpl
cmp
inc
mov
dec
sbbb
push
les
pushf
outsb
test
mov
cmp
xlat
push
imul
test
inc
pop
pop
push
add
std
cmp
clc
add
mov
addr16
lock
rcpps
push
inc
xchg
int3
shll
pop
sub
cmp
insb
mov
add
call
in
movsl
jae
or
dec
mov
jns
pop
enter
cmp
lods
int3
daa
loope
sbb
jle
ret
mov
cmp
paddd
inc
rcl
insl
sub
mov
fstl
cmp
mov
in
dec
or
stc
adc
mov
sbb
pop
or
sbb
xchg
adc
pop
fdivp
and
inc
subb
pop
pop
jae
pop
jp
fidivrs
in
ret
and
imul
wbinvd
mov
test
rorb
inc
or
or
call
dec
adc
xchg
into
mov
xor
mov
je
jnp
xor
fsubs
hlt
insb
jmp
sahf
mov
imul
pop
cmp
enter
test
sbb
cmp
dec
jo
outsb
mov
pop
pop
sub
xor
iret
xor
enter
ja
popf
arpl
xor
mov
xchg
jnp
xchg
push
ja
add
fyl2xp1
cs
aas
fcoms
les
mov
scas
andl
insl
push
add
xor
xor
fbstp
mov
dec
out
pop
mov
jo
mov
outsl
inc
mov
je
cmc
inc
rcll
sbbl
mov
mov
push
xchg
leave
and
lcall
xor
bnd
xchg
mov
fs
inc
or
push
jp
mov
test
inc
or
fucom
adc
aam
in
or
and
pop
int
jb
adc
lcall
in
add
jae
sbb
xchg
pushf
mov
fidivrs
or
fldl
jl
mov
sub
pusha
scas
add
shll
fcoms
mov
lds
jno
mov
cmpsl
stos
arpl
cmp
fsubl
or
and
pop
fisubs
fcom
sub
sar
jg
lock
fwait
shr
leave
aad
je
jns
mov
jge
mov
int3
fnstsw
cmp
mov
aas
cmp
dec
movsl
adc
ffree
mov
xor
xchg
mov
add
jg
ret
push
mov
push
mov
xchg
mov
in
sub
sub
scas
add
jnp
leave
loop
lcall
jbe
cs
cmp
outsb
andl
pusha
cli
sar
sub
adc
nop
pop
xchg
sqrtps
js
adc
push
add
mov
jecxz
cmp
xor
pop
cmp
inc
xchg
in
das
jmp
jnp
sbb
or
or
stos
test
in
xlat
call
sbb
adc
mov
cmp
imul
cld
cld
repz
add
mov
jp
stos
adc
aaa
lods
into
pop
aas
lea
sarb
and
sarb
jno
add
adc
jmp
test
mov
fnstcw
rolb
fisttpll
mov
test
dec
mov
add
fsts
mov
fs
cli
mov
cld
hlt
push
fwait
loop
andb
mov
inc
adc
mov
in
sarl
adc
ja
xchg
sbbl
in
sahf
out
xor
ret
rcrl
dec
cmp
out
test
xor
sbb
jno
dec
add
and
cmp
mov
ret
push
jne
outsb
cltd
xchg
add
push
or
xlat
pop
loope
sbb
repnz
cmp
mov
push
aam
xchg
ss
out
popf
fisubs
inc
rcll
ss
ss
je
adc
mov
mov
fcoml
rcrb
call
push
dec
lods
test
insb
push
dec
mov
notl
call
dec
mov
mov
dec
jns
cmpl
test
mov
mov
aaa
push
aam
push
imul
jle
add
jne
jbe
sarb
outsb
pop
sbb
mov
xlat
out
mov
cwtl
fidivrs
test
arpl
mov
ds
out
es
test
adc
lcall
pop
jecxz
push
jae
sbb
push
inc
lret
inc
xlat
inc
insl
movsl
loope
dec
and
lock
mov
mov
insl
call
jmp
inc
hlt
into
push
outsl
cmp
mov
or
insl
push
es
or
loope
in
aam
lock
adc
lea
shll
dec
inc
out
rcl
sbb
outsb
data16
mov
lcall
cmp
call
cmp
inc
cs
in
sbb
jg
and
cs
push
inc
sbb
into
outsl
jmp
mov
push
inc
push
push
pop
cmp
scas
push
or
outsb
rclb
testb
pop
mov
mov
mov
je
sarl
xchg
sbb
imull
into
cli
push
inc
clc
mov
jbe
or
push
test
and
adc
cmc
mov
add
cmpsb
subl
cmp
or
jae
mov
and
mov
outsl
and
jno
mov
mov
lahf
test
cld
stos
inc
push
mov
shll
dec
shr
jne
xchg
mov
xor
gs
jle
mov
adc
mov
or
std
out
imul
and
icebp
dec
jno
xor
iret
xchg
movsl
adc
xchg
and
jmp
dec
dec
xor
push
lahf
out
or
mov
jbe
int3
stos
cmpsl
xor
jb
loope
sbb
fwait
cmpsb
shrl
fimull
mov
and
mov
inc
roll
push
sub
imul
xchg
mov
divl
scas
dec
test
xchg
rol
mov
push
push
mov
and
lret
or
aaa
push
les
mov
aas
fistpl
repz
sbb
cwtl
inc
and
adcl
cmp
daa
ret
jo
mov
xlat
push
loopne
cmpsl
push
aam
jno
push
pop
pop
jae
mov
mov
mov
sahf
test
xchg
sarl
and
fcompl
imul
dec
cmp
insb
bound
testb
scas
xor
sbb
shrl
cmp
xor
adc
mov
push
movsb
aas
outsb
movsb
jle
ds
fcoms
xchg
test
repz
push
add
ret
mov
cmpsb
cwtl
mov
in
cmpsl
icebp
fwait
test
add
enter
push
rclb
xor
imul
mov
inc
rcrl
and
jge
add
mov
cmp
mov
lahf
push
jle
xchg
adc
rcl
jbe
cmpsb
jnp
daa
fstps
fwait
jp
gs
fnsave
lods
inc
cli
adc
lret
rorl
dec
jbe
xchg
cmc
lcall
pop
jns
jbe
mov
cmpsl
loopne
cmc
shrl
leave
push
push
pop
insl
and
pop
xchg
xlat
xchg
sub
cmp
popa
je
pop
xchg
add
adc
jns
scas
filds
fsts
stos
out
out
and
lcall
jmp
dec
cmc
cwtl
push
mov
in
push
gs
lock
repz
popa
cld
sbb
pop
movsl
jge
lock
fcmovb
fldl
cmpl
stc
pop
leave
add
push
sbb
rcrb
mov
or
dec
xchg
inc
inc
fcoml
in
push
enter
inc
lret
mov
mov
cs
sub
call
inc
das
mov
jle
sub
outsb
imul
inc
add
push
sbb
cmp
jno
jmp
jecxz
cmp
ja
sub
sub
cmp
jne
adc
sbb
push
ss
mov
mov
insb
fmuls
rcr
lcall
jne
addb
mov
testl
testl
jbe
push
adc
mov
mov
mov
cmpsb
add
mov
repz
cmp
inc
or
xchg
iret
jmp
lock
scas
lock
pop
xchg
cmpsb
inc
cltd
mov
and
pop
cmp
and
mov
nop
ret
mov
fnop
cs
ret
adc
pop
dec
sub
add
fildl
les
es
mov
or
flds
sub
pop
push
mov
rcrb
cmp
mov
inc
pop
xor
xor
or
xor
ljmp
pop
cwtl
cmp
fsubr
adc
das
xchg
lea
inc
mov
enter
mov
pop
jp
cmp
adc
daa
loope
mov
and
in
mov
push
push
gs
dec
decl
or
ds
cmp
scas
mov
es
mov
adc
dec
pushf
scas
adc
adc
mov
jno
pushf
lahf
add
mov
imull
or
sbb
les
fsubrs
and
xor
into
add
push
jae
mov
mov
aad
sbb
jmp
adc
add
data16
and
jns
decb
sbb
or
or
jecxz
and
dec
push
mov
xchg
js
dec
xchg
and
rcrb
dec
jmp
nop
jmp
movsl
cltd
cmp
pop
cmp
cmc
sbb
dec
push
xchg
or
jmp
mov
mov
cmp
jg
cmp
lret
pop
adc
and
pushf
sbbl
test
xchg
sbb
add
mov
dec
ss
or
xchg
je
hlt
sub
into
in
mov
das
test
jmp
sbb
scas
xor
stos
jge
adc
mov
pop
fmull
pop
cmpsb
adc
dec
add
and
das
addl
dec
mov
pop
xor
jns
mov
addb
ja
adc
outsl
inc
mov
mov
subb
bnd
xchg
cwtl
dec
fucomip
ffree
add
subl
ficoml
lods
cmpsl
hlt
movsb
std
and
sbbb
jp
pop
movsl
ret
das
pop
cmp
leave
jg
dec
loopne
and
inc
xchg
adc
add
adc
mov
or
jb
xchg
xlat
xchg
cwtl
cmc
xchg
adc
xor
cld
push
std
xchg
ds
inc
icebp
rcll
fiadds
jne
mov
sub
jae
cmp
dec
sub
je
jb
aaa
mov
enter
lds
adc
mov
insl
jb
mov
out
sbb
inc
xchg
adc
jl
jg
std
adc
test
inc
icebp
gs
fisubl
pop
mov
into
out
fstl
xchg
inc
and
bound
jl
and
insb
jl
pop
push
add
and
jg
decl
popf
pop
addr16
or
push
dec
loop
gs
inc
lea
ficoms
fcmovnu
iret
jp
out
jno
enter
sub
xor
jno
into
dec
pushf
fiaddl
push
aaa
inc
test
jg
push
adc
mov
repnz
mov
pop
xor
mov
outsl
mov
cmpsl
push
jo
jns
pop
out
cld
mov
xchg
rcll
nop
test
test
adc
mov
xor
add
pop
mov
inc
push
pop
scas
int3
and
jnp
mov
sub
cld
adc
outsb
int
dec
jae,pt
mov
js
push
jb
jl
sbb
dec
movsb
sbb
mov
lods
mov
fs
sub
lcall
gs
cwtl
lret
movsl
jo
mov
into
ds
aas
mov
aam
jno
adc
mov
fistps
push
fs
inc
sub
jnp
les
mov
sbb
stos
cmp
xchg
leave
pop
mov
insb
bound
nop
rcrl
cmp
pop
adc
pop
std
jmp
call
pop
jle
jle
cld
fsubs
cmp
orl
int
arpl
or
mov
adc
lret
jge
dec
mov
inc
stos
mov
ljmp
push
insl
inc
cmp
dec
mov
mov
jb
in
sbb
lret
shr
lret
add
in
xchg
hlt
enter
or
repnz
repnz
popf
jle
pop
or
add
dec
rolb
arpl
shlb
insl
sub
xor
sarl
mov
inc
arpl
cli
xchg
repz
mov
aam
js
out
addl
pop
jno
xchg
pushf
dec
xchg
clc
xor
icebp
mov
sar
or
xorb
cli
leave
insb
or
lds
popf
mov
imul
xchg
add
sub
xchg
and
repnz
mov
push
cmpsb
mov
mov
xchg
xlat
daa
sbb
mov
outsl
mov
lret
cmp
mov
mov
pop
or
xlat
pop
mov
sti
in
dec
lret
imul
insb
add
leave
stc
aaa
fiaddl
xchg
adc
imul
adc
jecxz
aad
pop
jb
mov
inc
cmp
pop
ljmp
outsb
pop
scas
push
clc
sbb
jmp
lods
pop
into
inc
fxam
jb
stc
push
mov
movsl
inc
push
mov
test
xchg
cmp
dec
mov
hlt
into
daa
xchg
out
mov
mov
xlat
push
enter
push
fisubs
out
repz
sub
sub
icebp
pop
cmp
shll
xor
je
mov
shrb
xor
imull
insb
aam
sub
ret
pop
rorb
mov
fists
btc
das
sub
les
cmpsl
jns
and
loop
push
inc
sahf
fisubrs
cwtl
sbb
mov
add
sbb
xchg
gs
pop
cmp
xor
test
dec
adc
loop
loopne
repz
jo
lret
cld
outsb
dec
addl
std
cmp
mov
test
add
addl
push
push
dec
in
sbb
pop
sbb
and
callw
pop
inc
sub
test
in
rcr
jno
or
jg
mov
jns
std
mov
cmpl
mov
xchg
add
or
out
mov
or
jb
aas
je
int
jge
push
sub
xchg
sub
lret
cmp
cmp
rolb
dec
mov
inc
xchg
mov
jecxz
icebp
xchg
das
mov
clc
mov
movb
addr16
loopne
lcall
leave
jne
popa
sbb
in
out
dec
mov
xchg
nop
adc
inc
xchg
ss
test
xor
cmpl
mov
cwtl
xor
sahf
sub
adc
fimuls
mov
mov
sbb
aas
loope
mov
xchg
inc
xchg
aaa
xchg
test
push
or
out
mov
dec
popf
aad
or
cmpsb
sbbb
jmp
dec
cltd
cmp
daa
ficoms
orb
roll
ror
popf
add
dec
sub
xor
add
scas
pop
inc
mov
sbb
test
sbb
or
pop
ja
leave
mov
jno
mov
sbb
inc
mov
and
xchg
lcall
imul
xlat
mov
cmp
add
dec
jg
and
adcb
sbb
in
leave
xor
mov
test
stos
sbb
fistps
or
scas
loope
icebp
jnp
jp
sarl
mov
inc
inc
test
test
fldcw
jmp
icebp
cmp
lret
xor
push
sub
fstl
push
adc
cvtpi2ps
mov
out
pop
mov
mov
jbe
jne
xchg
adc
aad
mov
pop
adc
sub
pop
add
shl
sub
mov
sub
dec
cmc
stc
cmp
hlt
fadds
xor
rcll
and
push
rcpps
lret
xchg
ss
jle
push
mov
test
sbb
or
fisubs
pop
ficoml
test
stos
adc
sbb
and
xchg
push
les
jp
jno
jge
in
aas
add
xchg
mov
xlat
in
js
xchg
scas
pop
sbb
lods
xor
mov
and
dec
loope
xor
xor
cld
inc
xrelease
aas
ja
add
es
sti
pop
jns
adc
fadds
push
push
add
and
jp
and
xor
jnp
dec
mov
jp
aam
pushf
daa
lcall
dec
mov
loopne
sarl
movsb
jge
push
push
arpl
xor
xor
cmp
mov
or
push
out
outsl
cs
fimull
iret
xor
mov
in
pushf
pop
pop
xorb
adc
addr16
pop
adc
loop
xor
and
xchg
adc
cmpsb
scas
adc
pop
rcll
leave
dec
adc
andb
push
pusha
imulb
add
outsb
ljmp
inc
ljmp
xor
testb
dec
lock
notb
mov
sub
mov
inc
aas
cmovno
jle
pop
sub
pop
fwait
add
aas
fidivrl
test
insb
iret
push
adc
in
xchg
or
arpl
sub
xchg
ja
cmpsl
sbb
rol
iret
scas
cmpsl
stos
or
lea
sahf
or
ss
mov
or
or
in
out
xchg
scas
mov
pop
mov
dec
insb
push
fwait
insl
shll
jmp
sahf
dec
or
push
cmp
sub
icebp
and
dec
xchg
out
pusha
cwtl
jecxz
paddusb
xchg
dec
decl
lea
leave
mov
lahf
push
outsb
jne
es
push
lock
int3
or
mov
push
cmp
data16
push
cmp
jmp
in
dec
or
mov
das
or
movsl
std
sbb
adc
sub
mov
pop
in
fstpl
push
je
les
in
bound
dec
xor
sahf
mov
pop
or
test
int3
jmp
push
aas
and
pop
adc
sub
and
int
mov
mull
lock
and
or
mov
push
fldlg2
pop
cmpsb
xchg
add
adc
test
in
in
xorl
fmul
jmp
xchg
push
cli
daa
imul
push
mov
mov
lods
scas
stos
inc
or
mov
xor
in
add
sub
in
push
sub
ficompl
je
mov
popa
pop
clc
push
rclb
inc
xor
sub
or
adc
pusha
adc
int
je
stos
lea
gs
cltd
inc
je
nop
aam
imulb
pop
call
and
inc
fcmovnu
push
inc
inc
lahf
pushf
loopne
imulb
mov
and
hlt
scas
pop
rcrl
int
fbld
mul
movsb
inc
lock
jge
aad
xchg
sbb
popf
xor
inc
mov
hlt
and
lea
cmp
jmp
adc
cmp
int
fnsave
fcompl
and
leave
inc
fdiv
inc
mov
and
cmp
mov
out
xchg
lock
andb
mov
pop
mov
mov
test
push
and
repnz
fwait
aad
cwtl
pop
sahf
out
jg
sub
adcl
sub
inc
inc
fs
sbb
mov
cmpsb
inc
test
adc
push
mov
mov
push
add
xlat
mov
jecxz
and
mov
adc
jle
xor
add
jl
and
jl
and
jg
mov
adc
xchg
leave
addr16
jo
sub
leave
inc
jb
icebp
add
andl
mov
mov
and
loope,pn
push
and
inc
inc
jne
test
jl
and
adc
and
jl
push
mov
rcrb
jle
mov
ds
fcmovnb
dec
sarb
push
sti
and
and
divb
xchg
push
jbe
pushf
aaa
push
xchg
jp
push
mov
clc
imul
dec
into
add
xchg
or
test
sti
jnp
movsl
mov
add
lds
outsb
fs
sbb
pop
mov
test
jns
and
push
mov
xorb
cltd
jmp
mov
sbb
mov
dec
dec
aam
pop
insb
ljmp
lods
in
jp
lods
push
cmp
outsb
xor
mov
rorl
mov
sbb
in
sbb
out
and
sbbl
add
or
cs
mov
push
lea
out
scas
add
add
pop
xchg
or
pop
sbb
jge
mov
jno
enter
dec
repnz
and
push
aam
sbb
das
stc
cmp
xchg
das
xchg
scas
push
add
or
inc
pop
xor
dec
adc
xchg
jne
movsl
sub
cvtps2pd
mov
popa
adc
cwtl
dec
adc
aaa
sti
adc
js
into
add
mov
rclb
mov
out
jns
int
lcall
add
inc
gs
aaa
jnp
repnz
jp
rcrl
sbb
mov
dec
adc
sbb
gs
mov
xchg
outsb
scas
into
mov
or
push
out
jecxz
call
or
mov
pushf
cmpsl
mov
cmpsl
gs
or
lock
shlb
mov
adc
xlat
mov
or
jne
cmpsb
mov
mov
jb
nop
clc
pusha
mov
aad
rcrl
shrl
subb
cmpb
popa
test
popa
add
cmp
ret
push
aam
arpl
jg
loopne
out
dec
sbb
and
repz
pop
in
or
int3
subl
in
xchg
push
xor
cltd
push
push
add
test
pop
jne
xor
cwtl
ret
nop
mov
fucom
arpl
jae
notb
fcoml
push
ret
mov
jns
xchg
mov
ljmp
mov
push
mov
scas
pop
into
sub
imul
push
call
lods
subl
add
mov
mov
xor
sbb
sub
xor
and
mov
jecxz
nop
addr16
test
cmpsb
ljmp
cmp
cs
outsb
scas
lds
mov
xor
jnp
mov
lahf
fninit
arpl
das
adc
push
pop
push
and
push
sub
dec
inc
push
mov
jne
pop
jne
xorb
mov
stos
inc
xor
test
pusha
xchg
shrl
or
pushf
bound
cmp
xor
push
arpl
xchg
push
sub
push
sub
adc
ja
leave
jnp
out
loopne
test
movsb
xchg
adc
pop
shll
cwtl
repz
mov
push
sbb
shl
push
mov
mov
test
popa
les
push
mov
sarl
test
mov
lods
sbb
inc
sbb
psubd
cmp
inc
mov
adc
or
push
push
cmp
cmpsl
sub
mov
idiv
cli
loopne
cmp
mov
add
lods
pop
stos
lret
jnp
mov
fstl
faddp
sub
pop
dec
cmc
mov
mov
das
push
test
or
cli
scas
in
pop
addl
pop
mov
popf
icebp
insb
push
mov
repz
testl
xchg
xchg
out
pop
mov
or
aas
xchg
mov
mov
pop
adc
fnstsw
mov
outsb
int
loopne
jns
test
adc
daa
jne
xchg
aam
mov
dec
xor
jp
arpl
inc
lods
addr16
xlat
movsb
xor
sahf
pop
fsub
inc
xchg
push
cmp
adc
cmpsl
sub
in
or
sub
push
lea
jmp
out
and
or
std
in
push
and
dec
rcrb
mov
cld
xchg
xor
shll
sub
pop
push
test
mov
jne
add
lea
or
popa
fsubs
mov
mov
xchg
scas
xchg
xchg
ret
lret
daa
stos
jecxz
dec
loopne
adc
arpl
stos
add
neg
cmp
loope
or
or
sub
push
popf
cmp
fwait
lahf
ja
add
sub
insl
and
jl
xchg
repnz
jbe
sbb
rorl
jb
es
xchg
in
sub
sbb
cmc
rorb
sbb
adc
inc
xchg
pop
icebp
filds
mov
lock
negb
lcall
jecxz
adc
push
and
push
push
scas
pop
orl
xchg
call
test
pop
mov
mov
adc
mov
ja
and
mov
sbb
ret
xchg
les
addr16
ficoml
loop
jecxz
jo
in
mov
dec
add
push
pusha
clc
jnp
leave
push
pop
xor
cmp
mov
adc
mov
lock
popf
in
decl
xchg
pop
scas
in
scas
jb
push
mov
dec
jae
jl
cs
xor
gs
adc
mov
jle
pop
lea
aas
fistpl
and
divb
into
aad
out
fisubs
sti
rcrl
leave
ja
adc
lret
push
adcb
aaa
cmc
mov
pop
cs
xor
and
or
xchg
or
ficompl
mov
lret
adc
mov
lock
jns
mov
je
mov
jb
imull
repz
into
jg
ds
and
popf
adc
pop
sarb
mov
insb
cltd
push
pop
cmpsb
mov
or
fcomip
addr16
stos
mov
aad
xchg
shlb
pop
call
enter
nop
dec
les
lods
repnz
repz
add
dec
mull
ja
shr
mov
jg
and
in
push
mov
sub
into
fdivr
cmp
push
push
push
cmp
arpl
fbld
cmpsl
aaa
clc
and
mov
sbb
fnstcw
cmp
bound
jb
sbbl
rclb
xor
push
jb
xorl
mov
push
or
das
mov
add
inc
jb
movsb
xchg
ret
mov
jmp
and
enter
cmp
lods
scas
sarl
repnz
add
push
xchg
mov
sub
bound
xlat
mov
test
vpaddd
jbe
roll
movsl
pop
push
cli
inc
push
fstl
sbbl
scas
push
arpl
lds
ret
loope
and
push
pop
ffree
xchg
repz
sarb
cld
and
icebp
aad
push
clc
xor
std
dec
pop
xor
loope
xlat
je
pop
data16
cmp
jno
push
test
push
test
cli
xchg
fsts
aas
sbb
xor
gs
mov
adc
mov
js
cmp
add
imul
and
add
mov
add
xchg
out
ret
cmc
and
aas
jb
jb
rcll
adc
pop
sbb
sub
jg
adc
cmp
andb
fisttpll
push
jp
and
inc
movsl
pop
add
arpl
jp
hlt
sub
mov
and
loop
movsl
scas
xchg
jg
repz
cmp
iret
shll
adc
lds
mov
loopne
lcall
hlt
fwait
and
shll
test
jne
cmp
cld
fwait
cmp
shll
testl
mov
repnz
outsl
test
int3
in
insb
push
or
mov
lret
pop
sbb
testb
rcrl
pop
xchg
pop
push
popa
jns
adc
aad
ret
dec
push
xor
idivb
mov
out
adc
scas
add
cmpsl
sbb
pop
idivb
fs
stc
mov
mov
sub
sbb
adcl
xor
cld
mov
test
in
jmp
push
jb
fists
inc
divb
sub
popa
sub
fidivl
xor
jmp
add
pop
test
ret
dec
sbb
sub
inc
jmp
sub
and
jecxz
lods
mov
imul
xor
lock
pop
loope
mov
sub
jp
xor
push
xor
pcmpgtd
pop
sub
daa
int
cmpsl
push
scas
inc
mulb
xchg
movsb
loope
jno
mov
xchg
dec
hlt
in
aad
or
out
loop
jbe
loopne
movsl
push
jo
cmp
shll
sub
inc
shld
sub
lcall
dec
rcl
push
clc
out
jmp
xchg
lcall
loope
in
cmp
out
xlat
adc
pop
mov
or
fwait
les
cs
jb
push
cltd
push
mov
shrl
mov
in
mov
mov
xor
add
dec
pop
data16
aas
dec
mov
dec
lods
hlt
adc
lret
out
sbb
lock
sub
pop
rorl
jo,pt
and
inc
scas
popa
or
sbb
fistps
mov
and
jb
dec
pop
pop
push
sbb
hlt
pop
mov
jo
fnstcw
or
mov
adc
sub
lahf
dec
shr
ret
ret
push
and
icebp
sbb
add
pusha
out
imul
mov
jl
stos
adc
xchg
in
sub
push
std
fstps
adc
scas
test
xchg
jle
sbb
xor
push
push
push
lea
rcrb
add
out
stc
pop
jp
cmp
pop
sbb
icebp
dec
add
fbstp
and
sbb
cmp
mov
mov
jne
mov
xchg
outsb
stc
lret
iret
fsub
ljmp
push
and
sbb
dec
adc
std
push
adc
outsb
jmp
add
icebp
pusha
or
in
mov
out
popf
insl
mov
rcll
je
int
lret
dec
xchg
adc
faddl
inc
dec
jge
aad
imul
push
adc
mov
inc
mov
pusha
fdivrs
out
cwtl
test
addr16
insl
repnz
cmp
sub
and
in
and
int3
push
inc
mov
test
cmpsb
ja
and
dec
inc
fimuls
into
into
or
not
pop
clc
movsl
adc
out
incl
imul
movsl
ja
inc
push
outsl
fcom
gs
sbb
jge
push
mov
add
mov
xchg
xchg
cmp
mov
dec
xor
cmp
aaa
sbbb
testl
repnz
mov
lahf
gs
xor
out
shlb
sbb
xchg
mov
out
out
push
jmp
iret
push
xor
movsl
inc
cmp
mov
dec
out
push
cmc
in
lock
mov
sbb
xchg
fcomps
pop
mov
sahf
mov
je
loopne
mov
into
inc
sbb
test
adcl
aam
es
mov
ret
pop
hlt
pop
out
and
sbb
cmp
inc
fadds
mov
inc
stos
je
jb
xchg
mov
bound
and
mov
ljmp
mov
fsubl
je
hlt
mov
insl
stc
ficomps
ja
adc
imul
rcl
mov
jae
sar
ja
cwtl
fcomp
xor
xchg
xor
test
inc
xor
mov
xor
xor
add
shlb
popa
ret
inc
or
cmp
add
rcl
push
adc
dec
rol
das
jg
push
ret
adc
mov
cmpb
inc
inc
ds
inc
mov
shrl
test
sub
mov
pusha
aaa
mov
inc
jne
das
jo
cwtl
mov
nop
out
loop
mov
and
jne
mov
inc
mov
jnp
sbb
or
jb
push
xor
sbb
dec
fwait
dec
popf
sbb
popf
fwait
add
mov
cwtl
push
push
cmp
imul
inc
and
xor
adc
lret
rcrl
or
mov
cli
mov
xchg
fisubrs
sbb
lds
fcmovu
mov
gs
inc
pop
dec
xchg
iret
aad
mov
ss
dec
mov
pop
icebp
jl
adc
clc
sbb
divl
lret
pop
push
sbb
test
jecxz
and
cmp
dec
int3
loope
sub
add
sbb
faddp
stc
imul
daa
push
lock
rcr
cmp
mov
sbbl
cli
outsl
je
mov
and
push
sbb
and
dec
or
jecxz
jne
pop
leave
adc
mov
cmp
movsb
jns
jae
lds
in
mov
cmp
pop
xchg
bswap
sub
movsl
fs
mov
mov
inc
shl
push
arpl
mov
adcb
sub
add
xor
roll
ror
inc
adc
jl
sarb
iret
pop
outsl
scas
mov
jg
fcoms
add
and
or
je
cwtl
and
pop
inc
xchg
pop
clc
xor
aas
sbb
jae
hlt
adc
je
sbb
movsl
pop
test
ja
mov
loop
loopne
jbe
popa
mov
popf
sub
mov
mov
ret
mov
mov
pop
pop
cli
daa
and
je
lods
in
ret
inc
pushl
adc
mov
jge
test
pop
mov
dec
je
jae
push
xchg
inc
lahf
out
fistpll
ja
movsl
mov
sbb
ds
cwtl
mov
into
lcall
mov
sbb
outsb
sbb
rcrb
sbb
scas
cmp
push
es
jno
sbb
test
inc
xchg
cmp
fsubrs
cmp
or
inc
aad
push
lea
mov
cs
pop
lret
xchg
loopne
aad
mov
dec
push
stc
cmp
jne
sbb
xor
mov
dec
bound
sub
push
test
aaa
mov
mov
lcall
fistpl
adc
scas
gs
cmp
pop
in
push
sbb
or
pop
cmp
call
ljmp
push
and
les
int3
mov
push
cmpsl
add
leave
xor
ja
ja
mov
xor
or
xchg
adc
fidivl
pop
mov
fcoms
xchg
les
out
xor
push
push
xor
inc
fisubrs
aaa
in
pop
adc
pusha
imul
fdivrs
aas
repz
dec
inc
push
repnz
mov
out
shl
pop
and
sub
leave
mov
add
icebp
xor
inc
or
pop
shlb
into
add
mov
js
cmp
daa
and
lcall
cmc
aaa
inc
pop
dec
rorl
or
ljmp
mov
and
loope
push
jge
cmpsl
in
fiaddl
dec
xor
push
or
fimuls
push
jg
cli
mov
sub
jg
push
in
xor
inc
shrb
push
dec
push
jb
test
fsubp
mov
jle
cmp
pop
mov
rcll
pop
and
shl
adcb
mov
xorb
mov
xchg
leave
mov
sbb
lock
idivb
cmp
in
ficompl
push
mov
adc
and
cmp
adcl
and
adc
lcall
repnz
sarb
outsb
mov
insl
out
cmpsl
xchg
outsl
mov
stos
cltd
add
nop
ss
test
mov
clc
ret
sbb
sub
add
mov
adc
fadds
xchg
sbb
sub
push
push
sbb
sbb
popf
inc
ret
jecxz
bound
and
sub
pop
and
aad
mov
imul
xchg
int
test
and
mov
xor
xchg
frstor
pop
out
lds
andb
leave
idiv
jae
push
jno
leave
jle
inc
fdivrl
cld
sahf
movaps
test
shl
mov
sbb
and
test
psrlq
push
into
cmc
loopne
sbb
insl
loope
sbb
rcrl
dec
scas
cs
and
mov
repz
nop
jns
jmp
mov
jecxz
sbb
jns
sahf
mov
or
add
sub
adc
js
mov
pushf
push
enter
push
aam
push
dec
inc
je
jb
shll
push
ret
pop
arpl
jmp
outsl
adc
pop
outsl
mov
sub
cmp
ss
cmc
adc
jne
cmp
loope
xchg
jno
icebp
mov
nop
xor
dec
addr16
ret
inc
or
cmp
insl
xchg
sbb
stos
sub
cmp
mov
cltd
xchg
bound
add
mov
mov
mov
cs
lods
nop
lcall
faddp
inc
jecxz
push
mov
int3
inc
icebp
xor
insb
sahf
mov
xchg
pusha
xor
jnp
inc
ficoms
sahf
ds
inc
mov
sahf
insl
sahf
push
aad
int
inc
xor
fs
xorl
lods
cmpsb
into
mov
lret
leave
ret
adc
inc
xchg
loop
into
mov
xchg
jle
in
inc
loop
push
sub
mov
test
inc
jle
jo
xor
pop
popa
sub
ret
cmc
push
int
sar
cmp
jnp
into
inc
sbb
hlt
xchg
dec
int
test
in
sbb
push
dec
add
adc
rcl
and
add
lods
pushf
fildl
push
lock
mov
cli
pusha
dec
stc
dec
shll
mov
lret
pop
pop
inc
test
test
aam
rcll
jo
bound
lret
jne
push
mov
fiadds
jmp
xchg
jecxz,pt
add
cmc
shr
enter
jp
mov
pop
sbb
inc
xor
xchg
std
or
pushf
lahf
push
loopne
or
movsl
scas
leave
cmp
inc
inc
out
inc
and
or
imul
movsb
into
add
sbb
add
loopne
fs
push
xchg
jae
adc
pop
jae
sahf
lock
into
jnp
pop
lock
mov
cmp
ja
aam
fnstenv
jae
cmp
push
add
leave
std
fisttpll
push
inc
div
das
dec
repz
mov
pop
lret
cld
add
inc
cltd
mov
loop
cmp
sub
add
out
jno
add
sahf
adc
pop
negb
adc
mov
and
arpl
and
and
mov
out
xor
inc
pusha
dec
sbb
iret
lea
lds
bound
push
jge
sub
ljmp
in
add
push
in
adc
sub
andl
or
mov
popf
push
adc
sahf
add
xorl
loopw
mov
mov
ret
popl
mov
out
sub
repnz
xchg
mov
sarl
mov
adcb
mov
push
sub
mov
xchg
xchg
jbe
jmp
pop
lret
icebp
gs
pop
in
out
mov
inc
or
adc
jge
nop
push
cmp
repnz
imul
push
xlat
mov
jnp
out
jae
aaa
shll
fnstsw
lods
cmpsl
push
sub
in
jnp
data16
sub
mov
nop
or
xor
mov
pop
mov
sub
jl
js
cmp
jns
insl
xchg
imul
mov
ja
cld
imul
and
into
test
jl
xchg
pop
int
sahf
push
push
mov
daa
mov
dec
lds
int3
jo
xor
or
and
inc
fistpll
pop
jo,pt
cld
subb
js
scas
negl
cld
push
pop
shlb
shl
fyl2xp1
jns
or
jecxz
xchg
sahf
into
cmp
inc
mov
xchg
lods
mov
xor
je
inc
ja
dec
adc
lahf
pop
ds
xchg
outsl
stos
add
mov
in
jae
or
sbb
fstpl
cmc
cwtl
dec
adc
add
lds
shl
xor
lcall
pop
inc
xchg
lock
jnp
test
cmpsl
xor
dec
jecxz
pop
js
jo
gs
rorb
mov
jb
sub
push
dec
and
push
in
jnp,pt
pop
fldenv
js
imul
mov
sub
xlat
jl
mov
sub
negl
xorb
lods
sbb
sub
pop
mov
loopne
shl
jl
andl
scas
jno
sbb
pop
addr16
mov
jo
enter
jno
sarl
lret
dec
lods
push
daa
cmp
mov
icebp
imul
push
add
popf
test
incl
and
pop
scas
enter
or
dec
pop
dec
mov
add
mov
or
out
cmp
js
xchg
aam
pop
push
mov
xchg
sbb
mov
loopne
out
imul
or
push
repz
cltd
pushf
xor
fdivl
lahf
mov
enter
cmc
scas
xchg
data16
push
stos
ljmp
enter
mov
xor
lea
mov
mov
cmp
sbb
fcomip
or
std
js
repnz
cli
in
enter
stos
xchg
adc
xchg
xor
push
pushf
and
test
loopne
push
popa
sub
jns
adc
push
add
mov
jbe
imul
jo
pop
mov
test
pop
ja
mov
adc
imul
sahf
scas
mov
ret
sub
push
or
call
xor
bound
or
jmp
sub
fwait
pop
and
pop
jnp
cmpsb
loopne
cmpsl
imul
dec
push
pop
dec
and
nop
movsb
pop
mov
icebp
push
mov
je
push
jge
in
sahf
pop
js
xchg
popa
sahf
das
xor
mov
in
adc
insl
outsb
cs
sub
pop
jmp
push
push
call
lret
rcl
mov
rcll
ret
in
dec
cmp
mov
jg
out
iret
fists
mov
hlt
dec
mov
in
sbb
das
dec
rolb
or
mov
push
jne
xchg
jecxz
and
adc
cld
int3
packsswb
and
sub
scas
aas
fdivl
ds
adc
sbb
ljmp
jl
pop
mov
adc
arpl
int3
inc
mov
imul
and
aam
imul
daa
outsb
dec
out
test
les
jle
test
jecxz
insb
in
push
mov
push
pushf
and
fstps
aas
dec
jns
adcb
sub
mov
mov
jmp
loop
in
mov
scas
or
cmp
add
fsubrl
in
xor
xor
pop
inc
popl
mov
mov
sahf
mov
pop
sub
add
xchg
repnz
loopne
test
mov
in
mov
xchg
lret
es
pop
movsb
fdivp
jg
mov
mov
or
mov
orl
sub
popf
test
jmp
cwtl
sub
xor
sub
xor
dec
cmp
push
sti
inc
jo
xor
test
pop
mov
aad
pop
xor
in
mov
popa
xor
xlat
sar
and
aam
push
sub
push
sub
dec
pop
andb
lods
and
andb
int
jae
or
icebp
xchg
cli
xchg
xchg
xchg
lea
ss
inc
lret
xorb
jns
leave
mov
inc
mov
aad
pop
jg
test
stos
lea
fmul
add
mov
push
mov
lds
mov
cmp
sbb
pop
sub
pop
ljmp
xor
outsb
stos
gs
pusha
les
daa
or
jg
and
inc
daa
inc
sub
test
mov
cmp
sub
addr16
xor
or
and
repz
or
adc
movsl
xor
sbb
mov
push
mov
fstpt
adc
fcomps
dec
div
mov
push
or
arpl
push
push
pop
inc
scas
ds
inc
jmp
push
nop
test
rcrb
loop
ss
jb
out
out
iret
sar
jle
int3
xlat
push
mov
mov
outsb
int
sbb
adc
push
dec
mov
push
gs
faddl
mov
ret
push
int3
sub
jl
sar
xor
in
or
adc
ss
inc
push
rcrl
fisubl
loop
fsub
test
xchg
dec
mov
xor
jbe
adc
xchg
sub
mov
daa
xchg
mov
or
hlt
movsb
mov
insl
add
lret
data16
ds
jmp
fsubs
jg
mov
aad
cmp
icebp
rcrl
pop
cmpl
cltd
cmc
mov
cmp
rcrb
sbb
cli
in
jne,pn
scas
shll
mov
push
pushf
orb
pop
call
dec
ret
lret
xchg
iret
jg
std
dec
pop
ja
mov
mov
sbb
test
add
sub
sti
movl
aas
and
xchg
hlt
jo
or
outsl
add
add
fstl
dec
xchg
ret
out
cltd
cmc
pop
arpl
iret
pusha
ret
inc
test
imul
sti
jae
mov
stos
dec
leave
dec
mov
cli
jno
push
mov
movl
mov
cmpl
je
jo
pop
arpl
aas
aad
es
cmp
js
push
push
xchg
jnp
cmc
xlat
mov
mov
lods
fisttpl
cmp
and
rorl
cwtd
sbb
adc
cmovns
ljmp
dec
leave
subb
stos
mov
cmc
rclb
shrl
pop
mov
sbb
fwait
jne
pop
fstps
jae
mov
lods
cmpl
cmp
jl
sub
pop
inc
mov
mov
loope,pt
xchg
gs
jg
add
or
dec
sahf
and
in
adc
mov
add
push
loopne
xchg
pop
mov
lret
fisubl
insl
das
pop
push
xchg
or
ficoms
push
sbb
dec
addl
imull
in
jmp
push
or
or
scas
push
testb
daa
xchg
inc
scas
cmp
push
dec
int3
xchg
shrl
or
jg
ficompl
push
dec
or
push
dec
pop
mov
lcall
pop
out
popf
add
enter
and
inc
cmp
shr
sbb
mov
add
add
mov
iret
iret
fidivs
and
or
mov
testb
stc
loop
dec
dec
les
inc
subb
mov
or
pop
bound
mov
sarl
lret
mov
lods
push
push
jns
bound
pop
out
push
insb
fnsave
mov
imul
insb
pushl
movsb
inc
dec
and
add
loop
dec
aad
daa
repnz
clc
inc
pop
add
arpl
jmp
or
mov
add
push
xlat
mov
fldt
cmpsb
jae
cmc
adc
stos
int
dec
mov
pop
je
mov
xchg
cmp
insl
in
and
mov
hlt
loop
inc
inc
cmpsl
jecxz
jp
andb
jecxz
xchg
and
aas
loope
lock
and
data16
pop
cltd
add
pop
repnz
pop
push
roll
jmp
mov
fwait
xor
je
das
out
cld
push
add
in
popl
jecxz
adc
xor
scas
pop
jecxz
add
push
jl
fmuls
mov
std
lret
mov
idivl
sbb
sbb
imul
add
movsl
outsb
ret
mov
scas
idiv
pop
dec
cmc
xchg
stos
xchg
mov
sub
mov
into
int
xor
sub
in
testl
push
xchg
xor
push
dec
jle
sahf
push
pop
call
popf
adc
jg
sti
push
add
mov
cld
aaa
gs
push
aas
int3
jge
xchg
lods
jmp
ds
aas
lret
sub
cmp
jno
or
roll
jns
subl
enter
lcall
push
test
call
mov
adc
popf
decb
inc
lret
sbb
fimuls
add
sbb
ret
inc
lahf
jae
push
test
pusha
cld
out
inc
pop
jecxz
cmp
xor
push
out
cmp
xchg
test
push
add
leave
mov
test
mov
push
std
enter
lret
cmpb
je
xchg
dec
dec
out
rol
jae
fwait
dec
jle
rol
xchg
push
fcoms
aam
fwait
cli
out
fnstsw
pop
mov
in
stos
xchg
sub
dec
sub
out
pop
lret
fsubs
cmp
cmp
je
out
mov
mov
ret
xor
jg
lds
lret
dec
mov
ss
xchg
fcoms
lods
lods
jl
imul
cs
or
je
pop
divl
mov
sbb
fstl
repnz
cmpsb
rolb
data16
cmp
movsl
sub
pushf
sub
int3
jb
loope
mov
or
xchg
dec
in
fnstenv
mov
insl
popa
in
sub
dec
push
aas
cli
ja
sbb
push
jnp
gs
mov
ljmp
cmpl
stc
or
and
push
and
mov
cmp
cwtl
sbb
and
jno
inc
xchg
sahf
xchg
das
mov
xor
and
test
fdivrs
dec
lock
jnp
stc
push
inc
dec
mov
lds
adc
das
gs
stos
dec
add
sub
mov
mov
inc
loope
dec
sub
fneni(8087
mov
fidivrl
jle
sbb
mov
pop
stos
movsb
sub
mov
neg
scas
mov
push
faddp
out
or
lahf
pop
daa
in
add
add
push
inc
mov
lret
xor
push
cli
icebp
inc
mov
add
loope
cwtl
dec
test
xchg
sbb
push
cmpsl
pop
scas
mov
in
cmpsl
test
sub
mov
sub
mov
add
jbe
les
rcl
cmpsl
sahf
dec
hlt
hlt
xor
sub
stc
into
out
push
cmpsb
arpl
dec
ss
cmpsl
nop
or
sub
mov
mov
mov
in
cwtl
pop
sbbl
test
cmpsl
popf
sbb
adc
push
push
scas
add
push
imul
xor
std
xor
int3
icebp
int3
jp
out
push
fisubrl
pushf
push
xor
mov
sbb
sti
xchg
cmp
out
hlt
movsl
pop
mov
ja
sbb
rcrl
sbb
icebp
xor
psubb
pop
jb
inc
push
dec
cmp
sbbl
xchg
aas
dec
sbb
xor
xor
js
jnp
js
jo
jbe
mov
dec
lahf
push
scas
popf
adc
shl
out
jne
push
inc
pop
adc
pusha
cmp
aas
repz
mov
mov
sbb
push
cmp
add
cmpsl
push
inc
loopne
jecxz
test
adc
adc
add
push
mov
das
xor
adc
pop
clc
shlb
mov
sub
cli
popf
outsl
pop
mov
ficomps
cwtl
pop
jmp
jecxz
js
mov
movsl
ds
mov
es
and
ljmp
xchg
je
jo
mov
int3
xchg
es
sbb
lret
cmc
mulb
xorl
rorl
das
sub
inc
out
popf
cmp
mov
lret
xor
data16
call
push
mov
jo
movq
das
push
mov
loope
rolb
fs
mov
ss
xchg
lcall
lret
cmc
hlt
test
insb
cwtl
lea
add
arpl
popa
leave
jmp
lock
cmp
mov
repz
adc
mov
lods
repz
filds
fldenv
mov
pop
in
xor
adc
imul
lds
popf
ss
in
js
ja
rcrl
mov
pop
jnp
sbb
shl
std
out
fsubp
cmp
cli
mov
jl
leave
sbb
shrl
sub
lds
ljmp
shl
mov
pop
pop
push
pop
add
push
imul
push
in
iret
rcll
cmp
test
and
test
mov
cmpsl
in
jle
bound
out
movsb
pop
push
int3
cmpsb
jge
mov
or
aas
lcall
mov
fsqrt
scas
fmul
sub
inc
clc
mov
jle
sbb
push
addl
inc
popa
lretw
cmpb
cmp
push
jge
int3
mov
lret
xchg
in
inc
shl
sbb
out
dec
fstl
sbb
iret
xchg
inc
mov
rclb
jecxz
ss
jge
popl
repz
popf
ljmp
lahf
push
ret
pop
lea
fwait
rcr
cmpsl
inc
leave
jns
xor
fwait
jg
xchg
cmc
lea
imul
mov
les
outsb
aad
mov
in
push
mov
ljmp
ficomps
js
mov
mov
gs
jecxz
push
mov
mov
repnz
mov
pop
jo
add
mov
loopne
lds
cmpsb
cmp
fiadds
jns
xchg
loope
push
adc
and
sub
addr16
mov
cmp
push
outsl
icebp
mov
or
cmpsb
mov
sub
jg
fwait
lret
adc
pop
pop
popa
or
push
xchg
mov
lods
or
xor
xor
adc
arpl
cmp
cmp
leave
xchg
js
cs
xor
shrb
in
aad
clc
inc
mov
jns
add
mov
mov
pop
sbb
cwtl
icebp
sbb
je
cmc
add
jb
adc
cmp
test
sbb
mov
xchg
out
das
push
push
and
rorb
repnz
xor
push
sahf
lea
mov
add
imul
dec
sbb
pushl
cmpb
sbb
lret
sarl
imul
loopne
mov
in
pop
xor
dec
mov
jno
xor
jbe
mov
mov
out
rcr
pusha
mov
fsubrp
ds
add
push
xchg
leave
push
mul
lcall
sti
imul
dec
jno
dec
jle
inc
sub
test
inc
dec
shrb
dec
dec
jne
test
nop
stos
sbb
ss
or
push
mov
shrb
mov
pop
lods
cmc
and
in
mov
jge
jae
adc
loop
out
mov
mov
rcll
jle
mov
insl
popf
stos
es
xor
in
xorb
cmp
pop
pop
mov
repz
aaa
cmpsb
cmp
bound
dec
xchg
xlat
push
adc
sub
or
adc
repnz
xchg
xor
loop
out
cmp
mov
push
push
lcall
inc
gs
xchg
adc
lret
notb
push
and
push
int3
repnz
xor
lcall
les
and
mov
es
in
fisttps
lcall
into
rcrb
sub
nop
sub
push
xchg
dec
sbb
jecxz
jg
pop
xchg
cs
incb
or
xor
sti
push
imul
bound
adc
aam
inc
sub
mov
mov
movsl
rcrl
dec
cmp
or
insb
scas
lret
mov
inc
cmp
dec
mov
incl
add
sbb
pop
ds
out
shrb
cmpsb
xor
mov
insl
cmp
shrl
push
add
ljmp
out
xchg
cmp
sub
xchg
dec
movsb
xor
outsl
sbb
fwait
cld
je
clc
sub
mov
call
push
fnstenv
lret
add
lcall
leave
jo
fstl
addl
dec
in
sbb
adc
in
or
stos
or
or
ja
jb
lods
lea
repnz
dec
aad
add
or
jge
cwtl
scas
cmpsb
or
adc
dec
icebp
add
mov
fdivr
scas
inc
cmp
push
imull
rorb
les
gs
test
add
daa
lahf
lea
icebp
sub
sub
xor
mov
shrl
or
or
fsubrl
stc
je
aas
lock
mov
mov
lretw
xor
add
mov
loope
cwtl
lds
inc
mov
cmc
adcl
rcll
cmpsl
mov
clc
mov
pop
mov
inc
mov
mov
sub
push
pusha
add
inc
repz
inc
or
mov
jo
imul
push
cltd
mov
mov
jae
outsl
rcrl
dec
add
jb
or
cmp
jb
or
insb
movb
mov
xchg
ds
cwtl
mov
mov
or
loope
int
icebp
mov
dec
push
ret
sub
mov
repz
jp
fdivrl
inc
inc
pop
mov
lcall
ret
or
push
clc
xchg
jnp
stos
or
dec
jne
or
jae
popf
dec
push
adc
scas
test
scas
push
roll
in
cli
dec
xchg
mov
outsl
sbb
xchg
push
xchg
in
gs
push
push
or
xor
fadds
mov
mov
mov
gs
popf
and
dec
sbb
fwait
stos
push
idivl
cbtw
dec
fucompp
lds
xchg
test
or
mov
xor
pop
mov
add
rorl
fiadds
pop
sub
xor
cmc
dec
add
jae
push
or
insb
test
cmp
sbb
and
mov
lea
imul
sbb
test
or
or
cld
dec
mov
mov
jg
jbe
out
in
push
call
fsubrl
or
imul
ret
mov
and
aaa
dec
aas
push
xor
jo
and
push
push
mov
pop
mov
mov
ljmp
leave
bound
enter
and
data16
xchg
fwait
push
cs
outsb
fstpl
sarb
jle
mov
loop
aam
stos
in
sub
insl
cmp
dec
fwait
loope
rolb
adc
std
pop
hlt
cmp
mov
in
jns
int
loop
movsb
xchg
add
fiaddl
fsubr
xchg
xor
and
xchg
int
shlb
cmpsb
sbbl
mov
push
ret
xor
ret
addb
inc
repz
nop
mov
pop
mov
pop
push
pop
jmp
cmp
dec
iret
xchg
inc
cmc
sarb
mov
ror
jg
or
dec
popa
test
or
inc
cmpsb
cs
aam
fnstenv
cmc
sbb
bound
dec
fstl
jl
ja
shrb
and
fcmovu
sti
shrb
jbe
mov
ficompl
test
push
push
jo
mov
shrb
sub
iret
testl
or
shll
inc
outsl
negl
xor
fisttpll
in
dec
das
push
arpl
test
cmc
shll
push
inc
mov
jecxz
cmp
jnp
jbe
ja
cwtl
scas
push
sbb
sar
sbb
or
in
inc
cmpsb
repnz
pop
inc
xchg
dec
push
jge
or
jg
xor
mov
mov
pop
mov
incl
add
push
lahf
jge,pt
sbb
cmp
jle
cwtl
lea
movsl
outsb
shll
xchg
mov
mulps
out
cmp
mov
cmp
aaa
fcmovnbe
fsubr
mov
repz
xor
mov
test
gs
ret
out
and
mov
mov
cmovle
sbb
mov
jb
stc
dec
push
jp
push
into
xchg
mov
movsb
sbb
and
push
mov
bound
pop
gs
stos
lcall
out
and
mov
push
jae
ja
pop
sub
dec
aam
add
sbb
or
jno
inc
push
dec
mov
sbb
sti
jo
xchg
pop
fwait
adc
cli
mov
fwait
test
adc
sarb
mov
push
fbstp
lahf
inc
imull
mov
jp
cwtl
nop
ja
div
psadbw
je
lcall
lahf
addr16
mov
or
sbb
data16
bound
iret
mov
inc
outsb
icebp
dec
mov
mov
clc
iret
adc
shrl
outsl
fsubrs
lret
cmp
push
leave
xchg
test
add
sbb
lods
xchg
insl
pop
jnp
cmpsl
stos
iret
mov
out
jno
pop
and
es
lods
mov
or
sbb
call
les
xchg
std
push
mov
jecxz
imul
push
cmp
mov
inc
push
cmp
mov
aam
or
fstl
cmp
pop
push
cmp
stos
rcl
mov
jbe
xchg
daa
sbb
sbb
or
fnstsw
add
das
jbe
into
rcl
mov
push
and
or
cltd
hlt
pusha
cltd
push
lock
jle
bound
or
cmpsl
sub
add
out
ljmp
loope
xor
mov
dec
mov
stos
mov
gs
or
mov
mov
movsl
outsb
bound
fs
roll
lret
mov
sub
pop
lcall
xchg
mov
inc
push
stos
or
pop
outsl
out
xor
or
shrb
cmp
stos
mov
roll
and
add
add
cmpb
pop
enter
es
pop
ljmp
dec
and
jne
aas
cmpsl
rorl
in
mov
lods
dec
outsl
cmp
mov
adc
into
push
cmp
andl
push
jecxz
adc
inc
inc
iret
jl
pushf
pop
negb
clc
jmp
leave
pop
repnz
lcall
sub
scas
push
mov
add
fidivs
pop
push
mov
faddl
ss
and
filds
je
call
mov
mov
mov
movsb
aam
cmove
scas
rol
divb
mov
sbb
add
loopne
adc
mov
lods
mov
dec
inc
adc
insb
leave
nop
sbb
push
stc
sbb
and
out
xorb
pushf
repnz
xchg
aad
push
sar
adc
out
pop
pop
cs
mov
inc
cmc
inc
outsl
sar
inc
lock
test
cmp
aad
cmp
fcompl
xlat
or
mov
out
sbb
fcmovne
repz
outsb
je
je
test
ret
cltd
jle
stos
mov
lock
sub
insl
insl
add
mov
call
jge
cmp
in
pushf
pop
mov
adc
popf
sarl
mov
jl
mov
pop
or
inc
mov
ret
mov
clc
lea
sbb
aad
mov
pop
cs
test
xor
or
lahf
shrb
dec
add
inc
cmpsl
pop
xchg
adc
or
mov
adc
fists
mov
jge
js
loop
mov
inc
insl
add
mov
xlat
sti
sub
out
mov
mov
pushf
fists
insb
and
and
and
bound
cltd
in
outsl
dec
mov
pushf
jl
inc
adc
mov
lods
lock
jne
iret
movl
xchg
mov
ret
in
call
movsb
in
nop
pop
mov
pushl
dec
pushf
mov
icebp
les
mov
adc
call
hlt
test
mov
add
mov
jl
push
adc
sti
mov
movsl
sbb
jnp
add
sti
xor
xor
sbb
outsl
movsl
es
inc
lahf
pop
adc
xor
in
js
int3
dec
add
mov
clc
hlt
jl
xor
lret
add
mov
lock
jno
add
out
cld
jmp
cmpsl
insl
call
inc
jns
jns
mov
loopne
xchg
arpl
mov
jle
or
stos
repnz
lcall
sti
push
das
inc
in
outsl
fsubrl
std
push
nop
mov
push
das
enter
cwtl
cs
xor
clc
aad
lds
cmp
mov
xchg
xchg
das
push
int
jnp
insb
stos
into
xchg
push
scas
push
movsl
xor
iret
jle
test
inc
fsubr
cmc
pop
mov
xchg
nop
mov
jle
loopne
idivl
inc
js
push
sub
lret
das
adc
lret
popa
cli
pop
aad
fmulp
sbb
pop
arpl
gs
push
cltd
jmp
stos
mov
inc
or
clc
inc
dec
cltd
les
outsl
inc
bound
pop
jmp
dec
jbe
inc
inc
xor
push
rcr
outsb
sbb
jge
or
insl
stc
rcrb
dec
test
mov
leave
lahf
or
cmp
pop
in
push
xor
cld
jle
jbe
lret
cmp
xchg
mov
dec
ss
cltd
adc
rcrb
push
rcrl
mov
out
ljmp
mov
ret
push
add
dec
mov
xor
out
xchg
pop
aad
add
sbb
and
in
jp
xor
sbb
ss
push
xor
jns
fcompl
sub
cld
cmpsl
mov
cwtl
cld
xchg
jns
dec
jb
loop
sub
push
inc
lahf
dec
out
test
in
ret
adc
cwtl
data16
mov
push
mov
imul
push
xchg
mov
dec
add
mov
mov
sahf
or
pop
fstl
jmp
icebp
repz
pushf
test
pop
out
sbb
gs
lret
sarl
pushf
add
mov
mov
mov
mov
adc
das
cmp
les
mov
test
in
inc
inc
sbb
outsb
loop
test
outsl
ljmp
out
cmpsl
xor
mov
dec
xor
orl
subb
rol
cmp
test
arpl
cmp
notl
pop
xchg
into
mov
xchg
loope
cld
xor
inc
outsl
movsl
sbbb
jecxz
dec
or
ljmp
cmpsb
push
fmuls
add
ljmp
or
inc
cmpsb
addr16
mov
push
jecxz
scas
es
cld
cmc
int
or
mov
sbb
and
pusha
movsb
mov
mov
stc
pop
mov
mov
stos
pusha
iret
fnstcw
out
shr
rcr
push
fnsave
mov
push
xchg
inc
rorb
xchg
lods
inc
insl
lcall
pop
inc
jl
add
int
cmpsl
jecxz
loop
in
adc
or
movsb
shll
jle
add
fiadds
faddl
adc
ljmp
jno
push
jg
outsl
xchg
pop
sbb
in
fcoms
cwtl
mov
mov
mov
mov
test
mov
add
or
jge
cli
imul
cmc
push
or
in
mov
pop
out
std
movsl
mov
fs
fwait
aad
sahf
mov
mov
dec
pop
sub
push
xchg
inc
dec
lods
mov
scas
xchg
mov
test
mov
xor
xchg
push
jns
mov
xchg
mov
mov
iret
mov
out
and
cmp
pop
imul
dec
inc
outsl
add
mov
inc
jle
notl
out
push
pop
lods
adc
out
inc
push
jnp
je
mov
sub
jmp
insl
insl
rolb
fmuls
stos
and
negb
mov
or
or
mov
and
and
aad
in
push
rol
push
jne
or
lcall
aam
sbb
ficoml
push
gs
or
or
or
jecxz
rclb
and
mov
gs
mov
aaa
in
mov
cmp
xor
sub
jg
mov
fcmovu
gs
popf
mov
xorb
pop
dec
mov
icebp
int
imul
test
cli
cmp
stos
and
loope
add
std
wbinvd
into
and
cmp
rolb
mov
jne
arpl
hlt
pop
daa
dec
scas
inc
add
mov
mov
mov
lock
xchg
dec
ja
inc
or
cltd
daa
stos
adcl
mov
mov
lcall
les
pop
clc
arpl
repz
sub
je
in
fidivrl
mov
enter
add
imul
mov
xchg
aas
inc
cmp
xchg
push
in
ret
les
fwait
dec
loopne,pt
stos
out
aam
inc
sahf
mov
jmp
adc
ljmp
or
xor
mov
cmp
cmp
popf
sbb
cmp
rcrl
xor
cmc
mov
in
fcompl
fsts
inc
and
sbb
and
movsb
pop
cli
adcb
fiaddl
je
inc
inc
or
cmp
cmp
pop
cmp
aad
xchg
xor
sarb
mov
adc
and
fstl
les
andl
fmul
xor
shl
int3
addr16
cmp
xchg
sub
aam
xchg
ss
ficoml
pop
gs
pusha
movsl
ud1
inc
movsb
sbb
je
scas
xor
dec
shlb
or
fcoml
aaa
push
notl
and
hlt
scas
les
cmp
jmp
jb
mov
cmp
scas
fsubr
out
mov
sub
lds
add
pushf
lock
bound
or
mov
lds
shll
and
orb
pop
adc
push
xor
push
shl
jns
xchg
cmp
cmp
mov
out
or
ljmp
inc
push
mov
filds
movsb
add
mov
lods
push
movsb
pop
pop
inc
mov
xchg
adc
decb
inc
xor
ret
jnp
jb
jmp
adc
pop
jno
rorb
xchg
push
test
ds
cmp
scas
add
out
pusha
pop
jl
lock
inc
dec
lods
aaa
clc
repz
jns
jg
mov
mov
and
mov
pop
inc
fs
push
das
cmp
jp
pop
push
pop
leave
leave
cwtl
and
out
xor
pop
mov
sub
sub
lret
std
xchg
inc
mov
enter
js
icebp
sub
jle
adcl
jb
idivl
das
pop
je
out
mov
pop
push
and
mov
inc
xchg
aam
mov
jbe
adc
test
xchg
lret
mov
test
pop
fmulp
push
dec
sub
dec
mov
lock
fdivp
adc
test
lret
push
leave
mov
in
sub
repz
adc
push
movsb
mov
into
xor
call
das
jns
pop
jg
lcall
aad
cmp
scas
add
mov
xor
mov
sub
cmc
bound
aam
bswap
scas
cs
ret
push
ss
push
sbb
push
add
addr16
outsb
pusha
outsb
or
ret
mov
push
jb
popf
fsubrp
cmp
xor
dec
xorb
cmp
and
sbb
jae
xchg
lret
or
out
leave
jg
and
sti
ljmp
xor
push
or
inc
shl
std
add
outsb
mov
and
and
sahf
dec
imul
push
mov
mov
insl
sti
clc
mov
shll
leave
mov
xlat
pop
aam
inc
and
cmp
inc
lcall
xchg
jns
fmull
pop
jge
aam
mov
dec
orl
and
xchg
ret
cmp
fistl
sbb
inc
test
push
push
cld
xchg
and
xchg
mov
outsb
mov
shlb
stos
push
cs
test
adc
pop
icebp
or
out
stos
mov
jecxz
rolb
sbb
add
cmp
mov
push
mov
inc
stos
dec
adc
add
add
fcom
js
hlt
jg
xchg
jne
dec
push
loopne
pop
xchg
lahf
jno
inc
push
insl
popa
mov
shll
pop
mov
lock
test
sub
sub
push
cld
inc
cmpsl
jno
xlat
sahf
in
cmpl
mov
cs
xchg
push
inc
imul
dec
xchg
cmp
jg
pop
xlat
sbb
push
push
scas
mov
fstps
dec
ljmp
gs
ja
je
push
fcomp
and
outsl
cmp
xchg
fisubrs
xor
cmp
jp
movsl
stos
dec
cmp
adc
xchg
cmp
imul
cmp
sub
je
dec
pushf
xor
pop
stos
mov
cs
stos
sub
pop
jne
inc
cmpsb
sub
jno
lock
mov
pop
pop
and
insb
jb
inc
mov
int3
jmp
mov
cli
pop
xchg
shll
in
add
and
jae
cmp
int3
mov
das
bound
jg
and
push
test
in
ljmp
int3
out
lock
test
dec
xchg
ficoms
xor
es
lods
push
int
inc
repnz
push
jae
mov
xorb
jb
test
xor
leave
jecxz
pop
or
scas
clc
out
aam
adc
jg
loop
xchg
test
ret
add
fwait
leave
outsb
shlb
adc
push
xor
xchg
std
push
jb
fstpl
jmp
jl
add
dec
es
inc
js
scas
and
push
jbe
sysret
jge
push
or
test
dec
stos
or
xchg
sbb
xor
xor
hlt
icebp
mov
sbb
mov
jge
call
jbe
cmp
pop
int
movsl
mov
aam
lahf
adc
mov
cmp
icebp
sbb
push
ds
xor
aam
mov
sti
dec
in
inc
add
cs
scas
das
mov
and
int
in
push
sub
sbbb
ss
mov
fiadds
test
popf
mov
sub
rolb
unpckhps
repz
enter
mov
int
cld
push
or
aaa
js
gs
pop
scas
mov
and
push
fmuls
fwait
lods
imul
outsl
and
sub
push
jge
sbbl
and
cmpsb
hlt
inc
in
lahf
xor
mov
loopne
pop
add
test
notb
dec
mov
mov
inc
inc
ficomps
clc
repz
mov
in
enter
repz
jg
push
mov
loopne
sub
pusha
popa
mov
and
fwait
xor
aam
push
inc
mov
js
sbb
xchg
ret
push
xchg
and
fistpl
sub
test
sbb
inc
es
push
aas
xor
std
std
das
js
scas
pop
stc
xchg
pop
loopne
add
pop
xchg
mov
fs
push
test
xor
jne
lods
ficompl
int3
jno
or
in
sbb
cs
sahf
add
fbld
push
sub
inc
call
stos
je
jecxz
inc
stos
iret
and
ficoml
dec
iret
nop
mov
cmpb
dec
push
cmpsl
sbb
cmp
xchg
jmp
int3
add
jmp
out
int
jne
cmp
nop
imul
cmp
sub
xor
and
cmp
loop
test
in
adc
mov
or
ds
inc
push
jmp
movsl
ficompl
popa
push
lock
int3
add
inc
je
dec
clc
mov
sub
stos
mov
sbb
fnstenv
jb
or
jns
mov
jns
loop
movsl
rcll
xchg
mov
insl
andl
jnp
fxch
inc
cwtl
mov
jns
stos
lahf
xchg
and
cwtl
pushf
pushf
addl
pop
add
mov
sub
into
insb
in
stos
pusha
out
mov
add
sbb
xchg
mov
jae
aam
cmpsl
pop
loope
out
sti
aaa
dec
jo
out
cmpb
adc
push
leave
cmpsl
lahf
push
sbb
ret
mov
cmp
sbb
mov
mov
dec
negb
dec
sarl
shrb
lock
or
and
iret
les
mov
mov
test
push
push
icebp
cli
int
mov
or
mov
mov
adc
jecxz
add
jp
mov
mov
inc
lcall
mov
cmpsl
or
push
iret
imul
mov
dec
jno
adc
xchg
inc
cs
mov
sbb
mov
mov
mov
leave
imul
mov
insb
add
repz
lcall
mov
push
push
outsb
call
or
test
sti
adc
and
popf
movsb
ss
fcmovbe
clc
out
loope
push
shrb
gs
xor
mov
xchg
imul
xor
add
push
xchg
mov
leave
xchg
adc
aaa
cwtl
mov
fnstenv
clc
mov
ljmp
outsb
stc
adc
leave
xchg
xchg
push
jae
jb
data16
out
push
pop
fwait
mov
ds
mov
fdivrl
mov
repz
add
jecxz
arpl
dec
dec
add
mov
sbb
mov
jno
call
inc
mov
cmc
xchg
lds
push
xchg
mov
push
clc
ja
call
in
das
adc
adc
jae
cmp
std
arpl
pop
das
push
sahf
and
test
aad
and
sbb
xchg
jne
jg
es
xor
adcl
mov
xchg
pop
push
xchg
popa
movsl
inc
adc
and
in
push
int
cmovae
inc
lock
mov
cmp
mov
stos
mov
jp
ret
add
and
pop
xor
dec
and
lret
xchg
movsb
imul
cld
ds
jbe
push
inc
mov
xchg
and
mov
fstl
divb
movsb
das
mov
and
fcoml
out
cmp
je
dec
pushf
out
mov
fadds
xchg
xor
subb
mov
jp
push
mov
jle
push
ret
cmp
addl
jmp
adc
xchg
dec
add
cmp
dec
inc
fldenv
insl
dec
xchg
push
mov
jo
xor
int
out
or
ds
in
imul
mov
sub
add
lea
inc
cli
pushf
imulb
xor
loopne
test
sub
stos
jmp
xchg
leave
inc
loope
inc
mov
pusha
ss
mov
dec
jo
fldt
pop
shl
or
jle
inc
dec
jbe
mov
adc
sahf
fstpl
movsb
cld
cmpsl
scas
jecxz
xchg
or
xchg
add
xor
jl
xor
lods
int3
repz
cmpsb
cmp
pushl
pushf
subb
push
push
mov
std
fisubs
dec
cmp
in
ss
leave
js
xchg
fisttpll
aas
sub
dec
std
out
add
dec
mov
insb
cltd
sarb
jnp
mov
rcr
and
mov
cmp
mov
push
sbbl
xchg
xchg
adc
mov
inc
push
mov
and
arpl
call
ds
idivb
in
fsubrs
dec
scas
rcl
mov
mov
pop
enter
cmp
pop
into
hlt
call
mov
jl
pusha
mov
repz
mov
mov
xchg
xchg
lods
jmp
lcall
cmp
cltd
cld
into
addr16
push
cmp
and
sub
js
adc
nop
sahf
jbe
adc
cs
test
xlat
adc
aaa
outsl
or
cmp
aam
mov
mov
outsl
out
inc
mov
imul
movsl
insl
adc
mov
addb
mov
push
ja
out
icebp
pop
daa
and
adc
adc
mov
arpl
inc
les
dec
adc
clc
lods
cli
leave
negl
std
popl
xor
int3
and
mov
jg
das
insb
adc
adc
jnp
testb
xchg
inc
sub
pop
movsb
sbb
loop
fsubrs
dec
ljmp
pop
and
outsb
popf
mov
cs
lret
clc
pusha
or
sbb
insl
mov
push
sub
cmp
ret
mov
sub
push
out
and
fldl
sbb
add
jnp
dec
lods
xchg
mov
jecxz
addr16
pop
out
adc
inc
pop
add
mov
jle
loop
int
push
and
sub
or
mov
mov
fwait
cmp
and
pop
inc
fcmove
shl
push
add
xchg
loopne
fstpl
push
cli
dec
mov
cmpsl
jo
dec
test
outsl
idivl
gs
inc
add
repnz
and
mov
xor
push
sbb
mov
repz
push
daa
xor
or
into
addr16
fstpl
bound
jno
out
pusha
dec
shlb
xor
push
inc
data16
cmp
mov
mov
lods
pop
sub
and
mov
dec
push
sbb
push
dec
xchg
imul
xchg
mov
pop
mov
pusha
dec
xor
fisubrl
aam
sbb
dec
inc
cld
dec
mov
and
xlat
rcr
outsl
push
xchg
movsl
push
inc
mov
insb
hlt
imul
jl
outsl
mov
jecxz
out
movsl
sti
inc
bound
and
movsl
mov
in
mov
stos
and
call
jp
add
scas
into
stc
and
push
imul
inc
add
xor
and
cmp
fmulp
lcall
xchg
jp
loopne
cmc
popa
push
xchg
scas
pop
mov
outsb
fcompl
push
pop
ret
iret
pop
cmpsb
adc
sub
jge
adc
and
push
in
xchg
add
aam
push
rcll
or
mov
bound
sahf
and
call
mov
pop
and
rcr
add
xchg
inc
mov
pop
inc
cltd
jmp
push
std
xchg
das
xor
cwtl
push
repnz
mov
js
add
sub
add
mov
bound
push
das
pop
mov
test
lea
pop
xchg
cmc
inc
lods
mov
xchg
shll
movsb
pop
cmpsl
jae
mov
push
lahf
jecxz
rclb
bound
pushf
fisubl
pop
jo
cmpsl
mov
mov
push
es
and
divl
mov
push
ds
add
xor
mov
lea
sbb
mov
mov
ret
mov
jne
test
scas
mov
inc
scas
cwtl
mov
adcb
jo
push
call
or
sub
in
mov
loope
outsl
cmp
and
fldl
pop
aaa
jmp
pop
out
jne
dec
inc
and
jmp
hlt
loope
push
and
lahf
mov
and
push
fimull
adc
xchg
aas
mov
or
cmp
jg
pop
jle
int3
mov
shll
xchg
mov
or
cmp
imul
add
out
into
cmp
xchg
xor
aam
sub
push
lea
jmp
xor
sbb
fwait
aas
cs
mov
xchg
fdivrp
lock
daa
and
sbb
test
add
pop
jno
scas
lahf
inc
call
cmp
fcoms
adc
mov
xchg
cmpsb
cmp
fidivl
repz
cmc
scas
mov
leave
test
jmp
mov
mov
mov
jle
aaa
in
popa
mov
lret
cmpsb
and
cmp
jmp
leave
dec
test
divb
mov
cmpsl
imul
nop
insb
inc
scas
adc
push
adc
mov
pop
popf
lret
int3
scas
add
out
icebp
mov
dec
mov
lds
mov
and
dec
mov
push
mov
push
test
sub
mov
dec
mov
add
adc
jg
fnstcw
dec
dec
outsb
jo
push
repz
mov
mov
push
mov
or
pushf
jno
or
xor
add
and
addl
mov
mov
subb
fsubrs
xor
out
pop
clc
mov
pop
out
dec
paddb
adc
nop
dec
shl
clc
out
call
push
pop
mov
mov
pushf
or
ficoms
push
add
adc
test
shr
jp
sub
mov
dec
data16
test
mov
ret
stos
adc
fidivl
test
insb
out
xor
les
jle
xchg
repnz
xchg
push
xchg
outsl
pop
and
fmuls
addr16
and
bound
add
shrl
dec
mov
hlt
lea
movsb
mov
dec
mov
imul
push
cmp
jmp
lods
mov
out
out
xchg
andl
pop
push
stc
adc
imul
and
mov
insb
pop
xorb
jp
jp
hlt
lahf
ja
inc
and
inc
mov
mov
mov
sbb
xor
int
pop
lret
dec
ret
in
and
push
data16
int3
xchg
repz
xchg
rcl
call
mov
dec
aam
mov
mov
jp
pop
xlat
push
cmpl
mov
mov
mov
jg
adc
pop
jl
jle
iret
out
sbb
push
xchg
insb
push
and
in
int
mov
push
mov
cmp
inc
std
fildll
cwtl
add
pop
fbld
loopne
fs
and
sbb
push
mov
adc
push
out
sarl
out
dec
or
push
lret
loopne
icebp
je
mov
out
popf
sbb
mov
pop
fcomi
ja
mov
in
iret
jns
xor
jmp
subl
push
jmp
shrb
test
dec
add
mov
add
push
out
mov
dec
mov
shll
push
or
push
push
test
loope
test
and
aas
sbb
pusha
scas
scas
sti
idivl
jns
sub
bound
mov
in
xchg
adc
mov
xchg
test
jl
sub
mov
out
scas
adc
cmc
xor
pop
pop
jg
dec
dec
je
mov
std
sub
add
loopne
pop
sbb
add
sbb
jns
aad
repnz
cmpl
pop
testl
rorl
fnstcw
xchg
pop
xchg
sub
out
sub
or
jne
push
repnz
sbb
aam
mov
dec
stc
sub
les
inc
xchg
mov
mov
arpl
mov
dec
fidivrl
mov
mov
xchg
idivb
test
cltd
aas
ja
outsl
mov
pop
jge
xor
in
cmp
xor
out
in
xor
adc
cmpsb
mov
subb
rep
arpl
fwait
inc
rolb
daa
jb
or
inc
sub
inc
into
xchg
mov
mov
iret
xchg
gs
shll
lds
in
les
pop
out
pop
stc
jl
jo
sbb
sub
std
leave
in
add
inc
fwait
cmpsb
mov
push
push
adc
dec
mov
rcrb
clc
loope
cwtl
push
dec
dec
rcrb
repz
test
rorb
push
jmp
jle
push
lcall
cmpsl
cmp
push
mov
into
sbb
push
imul
aad
push
inc
sbb
pusha
xor
jns
mov
sti
xor
and
idiv
popa
sub
mov
mov
push
and
push
sarl
pcmpeqw
jns
das
dec
cmp
aad
cmc
leave
movsb
push
jb
mov
dec
push
movsb
mov
mov
rcr
mov
adc
int
sbb
mov
push
inc
mov
mov
sarb
sub
clc
xchg
rcrl
mov
les
mov
sbb
repnz
test
inc
rclb
jbe
inc
int3
ficomps
aam
and
in
test
cmp
ficompl
push
adc
xchg
xchg
pop
daa
test
test
and
aad
xor
insb
sbb
xchg
jb
hlt
ret
push
stc
gs
push
insb
jno
mov
jnp
mov
das
cmp
mov
rclb
push
mov
dec
stos
or
adc
jle
mulb
dec
or
lret
cmpsl
rorl
or
gs
cli
sbb
mov
pushf
xor
push
jecxz
pop
pop
push
adc
mov
sub
inc
adc
es
or
cmp
imul
pop
push
dec
ss
insb
or
in
mov
out
jg
roll
aas
int
bswap
test
ja
adc
inc
mov
mov
inc
cs
daa
stc
imul
in
jl
jbe
mov
cmc
push
ret
pop
push
inc
loope
jge
out
cwtl
jo
aas
faddl
xor
sti
loope
addb
rcl
stos
ret
sti
jae
jne
leave
sahf
pusha
or
xor
sbb
popa
imul
icebp
jge
ja
cmc
mov
jmp
mov
mov
iret
cmp
push
into
cmp
rolb
cmp
fisttpll
jmp
test
inc
std
add
sub
pop
push
lods
fbstp
sub
inc
lcall
lea
aaa
mov
fcmovnbe
clc
sbb
lock
rclb
xor
sbb
dec
cmp
dec
cld
sbb
or
pop
lret
and
js
das
inc
in
or
or
and
xchg
add
scas
ja
mov
pop
or
pop
std
mov
out
mov
scas
in
pop
leave
cmp
mov
and
aam
out
adc
rcr
adc
mov
sub
int3
fs
push
into
sub
ret
pop
pop
stc
pop
lods
or
mov
ja
mov
sub
mov
je
fs
or
adc
push
jmp
adcl
fs
xor
leave
rorl
push
insb
or
sub
aas
jo
addl
xchg
jo
sahf
rcrl
push
mov
testb
and
or
ljmp
sub
je
dec
mov
mov
mov
es
mov
mov
scas
inc
cmpsl
sbb
stc
leave
inc
arpl
mov
jb
arpl
int
mov
cs
nop
push
rcll
fucom
push
push
mov
dec
mov
adc
sub
cld
test
dec
inc
sarl
push
movsb
or
loope
xchg
lret
scas
lret
ret
ljmp
and
insb
lds
cmc
mov
xor
ret
int
andb
dec
and
pop
cmpsb
add
imulb
ja
ret
pusha
xchg
test
adc
loope
dec
js
xor
les
xor
int3
mov
adc
mov
mov
mov
xchg
xor
test
lods
cmpsb
xlat
xchg
sbb
mov
jno
or
mov
out
sti
rol
pop
push
sarl
sbb
jp
push
add
adc
shll
jae
mov
test
outsb
in
out
sbb
andb
xor
xchg
ja
cltd
mov
jp
mov
adcl
push
lea
or
mov
mov
xor
mov
xchg
lods
aam
xchg
leave
andl
sahf
mov
daa
xor
cli
xor
jbe
dec
push
idiv
stos
jno
out
lahf
inc
pop
stos
pop
imul
mull
cmp
stc
lcall
and
dec
loopne
xlat
adc
push
jl
repz
lock
xor
pop
ss
sub
jbe
aad
fcmovb
dec
or
dec
pop
outsb
mov
xor
or
and
outsb
xchg
xchg
mov
enter
popf
inc
dec
inc
jne
add
xor
loop
lea
pop
xchg
das
pop
xchg
jnp
aad
mov
loopne
adc
mov
test
pushf
sbb
test
sub
lahf
divl
lret
adc
call
jle
cmp
dec
xor
movsl
push
push
pop
inc
dec
add
aas
jecxz
adc
ljmp
iret
mov
je
movsb
sbb
xchg
mov
icebp
pop
mov
call
in
xor
lret
in
test
mov
sbb
inc
xor
jae
aam
ret
xor
fnstenv
or
push
iret
mov
test
jmp
mov
into
push
nop
add
xchg
ret
mov
cmpsl
cltd
xchg
add
jae
dec
insb
imull
or
and
fdivs
test
leave
sbb
fldenv
mov
mov
jnp
repnz
andb
pop
in
mov
mov
mov
mov
pop
mov
jns
popa
sub
sub
xlat
lret
js
ret
xor
inc
jb
out
add
jge,pn
lahf
sbb
xorb
adc
in
popa
loop
add
ds
shll
mov
pop
jnp
sbb
pop
dec
or
pop
fsubl
and
lods
mov
push
popa
enter
inc
aam
xor
cmpl
and
test
sbb
ds
or
sbb
push
mov
cmp
subb
js
push
cmp
stos
repz
xchg
mov
int3
add
and
jl
adcl
jmp
jae
jbe
mov
hlt
pop
lods
sahf
mov
or
pop
adc
stos
sbbl
in
and
add
jns
xor
fsubs
push
xchg
cmp
js
insl
inc
fstpt
cli
mov
push
jge
inc
pop
stc
push
das
rorl
push
adc
add
pop
pop
jbe
jmp
lret
jp
gs
bound
ljmp
cmp
addb
and
push
lea
cmp
adc
pop
push
cmc
lret
push
mov
jae
push
sbb
das
movsl
shlb
in
call
sub
push
movsb
pop
jo
rcr
mov
cli
cmp
sub
xchg
jns
jb
jns
bnd
inc
les
pop
pusha
mov
lahf
push
fnstcw
mov
fstps
ljmp
push
mov
lea
mov
pushf
rcll
mov
push
mov
xchg
ljmp
pusha
shll
inc
xor
pusha
xchg
icebp
sub
insl
push
mov
stos
mov
pop
inc
test
repz
ret
or
cmp
xchg
push
inc
add
and
jo
loop
add
mov
add
sti
in
cmc
rcr
stc
std
pusha
into
jle
ljmp
jno
mov
cmp
and
mov
aaa
mov
orl
faddl
adc
mov
cmp
xor
lret
rcr
aaa
ljmp
dec
fmull
leave
sub
arpl
mov
pop
inc
mov
cmp
aas
pop
fsts
cmp
jge
in
dec
testl
push
mov
dec
inc
sti
arpl
inc
inc
inc
push
stos
cmc
cmpsb
dec
outsb
push
and
add
inc
inc
je
or
pushf
push
sbb
pop
pop
lds
xchg
cmpl
pop
xor
jno
and
adc
clc
loop
arpl
call
fstpt
aaa
into
lea
xchg
lods
xorb
andb
mov
addl
mov
mov
inc
int
flds
cmp
add
adc
adc
sub
mov
das
ja
sysexit
xchg
jo
mov
sbb
xor
mov
pop
in
add
mov
iret
shld
fcmovbe
adc
mov
inc
arpl
fs
sbb
popf
mov
pop
or
nop
movsb
pop
arpl
fxtract
ret
pop
adc
sbb
stc
sub
cld
sub
int3
aad
mov
push
cmp
adc
ret
mov
clc
arpl
test
push
sub
aaa
xchg
call
add
test
dec
test
rolb
testl
sub
in
stos
scas
pop
inc
insl
sbb
or
fadds
sub
pop
mov
mov
insb
inc
and
das
lds
mov
mov
add
cmp
inc
fcmove
popa
jbe
jae
and
fadd
jb
jne
shl
enter
pop
daa
push
arpl
adc
mov
sbb
add
lahf
xchg
dec
pop
ds
imul
fcomip
xlat
insl
jae
test
iret
or
xor
sub
mov
push
mov
pop
int3
les
xchg
shll
cmp
xlat
popa
mov
mov
inc
mov
dec
mov
lods
mov
test
push
stos
jmp
mov
push
sti
fstpl
adc
out
pop
jbe
cmp
inc
test
jmp
xchg
jmp
pushf
das
bound
push
pop
fisttpll
movsl
sub
mov
test
rclb
sbb
aad
std
test
fs
and
xchg
shrl
jg
push
and
int3
int3
jge
leave
lock
xchg
mov
scas
inc
mov
lahf
push
ffreep
fbstp
les
mov
clc
fwait
mov
insl
out
pop
stc
lcall
lea
push
cwtl
ss
or
xchg
cmc
ljmp
mov
outsl
or
xchg
movswl
jp
rorb
pop
adc
mov
pushf
cmp
cmp
cmp
pop
jg
jno
add
hlt
imul
ja
cmp
jle
jb
scas
stos
sub
aaa
inc
and
outsb
ds
fdivrl
xchg
and
jmp
fadds
mov
fisubrs
push
lds
lods
pop
sub
dec
out
jp
add
imulb
in
mov
xchg
in
es
ds
xor
mov
inc
mov
out
out
test
xchg
loop
push
push
imul
xor
out
fdivp
pop
sub
mov
repz
add
jmp
in
push
dec
jp
xchg
push
stos
arpl
idivl
add
pop
popf
lods
mov
repnz
and
or
lcall
jbe
push
pusha
jb
lods
pop
pop
pop
iret
sbb
mov
or
enter
mov
adc
dec
mov
pop
adc
jns
scas
popa
sbb
inc
lods
loope
mov
cmc
outsl
aam
ja
sbb
ljmp
mov
push
mov
dec
mov
and
jo
sub
and
ret
sbb
testl
lods
scas
aad
pop
mov
xor
hlt
inc
jbe
mov
aam
cmp
sbb
push
call
mov
or
loopne
sbb
int
cld
or
lds
repnz
pop
pop
into
mov
mull
adc
mov
ja
das
add
push
insl
jl
in
sub
mov
mov
std
add
iret
xor
pusha
adc
jp
sub
inc
js
mov
xor
xchg
push
cmc
dec
adc
inc
jne
dec
jo
pushf
push
gs
sbb
lods
iret
push
iret
push
cmp
and
je
add
inc
mov
mov
dec
mov
imul
in
std
adc
jo
stos
ljmp
gs
cs
scas
xor
nop
or
mov
stos
xor
into
pushf
movsl
cmp
inc
loop
pop
scas
pushw
fsubl
adc
push
push
icebp
ret
and
out
fisubrl
and
sub
jae
jns
shrb
xor
mov
and
fs
mov
sub
mov
aaa
aas
inc
out
xchg
push
xchg
mov
xor
lods
xor
jmp
pop
push
xchg
cmp
or
fwait
sbb
inc
inc
mov
inc
sub
mov
cs
jno
adc
sub
mov
dec
fistpll
jne
adc
push
cmp
aad
stos
fists
ja
leave
sti
leave
stos
mov
jno
push
in
jno
cmpsl
test
cwtl
add
nop
adc
call
jp
int
cmp
pop
cmp
jle
mov
out
xor
test
mov
xor
add
loopne
test
js
push
push
push
out
inc
cmpsl
sti
loopne
mov
dec
mov
mov
shlb
sub
movsb
int3
mov
fnsetpm(287
jb
pop
lods
insb
xchg
push
insl
xchg
lods
je
ljmpw
or
repnz
mov
shlb
mov
cmp
xor
and
sub
repz
jmp
cmpsl
push
jmp
fsubrl
jmp
jecxz
push
adc
mov
rolb
cmp
xor
push
lret
fwait
scas
cld
lret
push
ret
push
mov
cmp
arpl
aam
pop
dec
in
mov
fstpt
mov
push
dec
cltd
fwait
es
push
ljmp
xchg
add
addr16
aaa
je
jmp
xchg
xor
jns
jmp
std
or
sbb
mov
cmp
ljmp
inc
rcrl
mov
pop
mov
push
cmp
hlt
or
pop
fcomi
fcomps
iret
mov
sbb
out
xchg
push
cmp
jae
sarb
dec
push
mov
arpl
mov
outsl
scas
push
loop
jbe
xor
cwtl
stos
das
test
out
adc
shrb
pop
push
mov
lret
out
push
cld
cltd
rcll
inc
sbb
add
add
fwait
in
pop
adc
and
mov
push
sbb
sahf
insl
xchg
mov
enter
dec
push
mov
into
dec
rclb
aas
sarb
mov
call
ficompl
mov
pop
in
gs
and
lcall
pop
pushf
push
mov
addr16
hlt
leave
popf
ljmp
scas
adc
xlat
hlt
mov
push
popf
add
in
mov
add
adcb
icebp
insl
dec
out
out
mov
pop
aad
test
cmp
pop
ret
or
sti
fcomp
shll
sti
mov
pop
sub
mov
jle
enter
push
add
mov
adc
orl
pop
mov
mov
pop
test
int
cmp
leave
inc
sbb
outsl
inc
scas
jg
mov
test
fisubrl
mov
mov
je
icebp
adc
iret
out
mov
les
sub
sub
loope
pop
ds
push
cmp
lahf
pusha
test
test
jno
stos
andb
sahf
mov
cwtl
mov
sbb
dec
xchg
sub
adc
sbb
inc
out
cmp
les
xchg
jg
push
in
faddl
hlt
gs
adc
sarb
sbb
out
and
arpl
repnz
out
std
inc
gs
cli
in
gs
dec
jmp
les
mov
push
mov
push
lea
push
or
mov
xchg
ds
sbb
jnp
in
jae
pop
pop
mov
push
mov
pop
dec
lea
imul
mov
pop
jecxz
rolb
cwtl
mov
jmp
push
ret
movsb
cwtl
add
mov
dec
cmp
dec
mov
lea
sbb
into
cltd
push
add
dec
mov
sub
loop
mov
adc
mov
jl
xor
fs
jne
addr16
pop
xchg
adc
fmuls
mov
push
dec
mov
and
add
mov
push
aas
lea
push
rcl
popa
movsb
pop
adc
test
mov
mov
mov
mov
dec
cmp
jge
sub
add
insl
out
adc
mov
ds
pop
mov
xchg
clc
stos
repnz
xor
cmp
cli
mov
or
into
mov
gs
dec
add
hlt
or
int3
notb
cltd
lods
xchg
xor
xchg
mov
ja
mov
mov
nop
jle
jb
pop
je
pop
xor
insb
pop
fldl
pop
mov
shl
xor
jl
aad
imulb
pop
jno
mov
cwtl
lahf
jo
les
xchg
push
lods
scas
pop
insb
into
pushf
and
insl
rorl
cli
xchg
mov
lahf
push
pop
inc
lcall
stc
cs
or
sub
mov
xor
inc
sub
lcall
jne
sbb
pop
cmpsb
push
subl
icebp
insb
mov
data16
fsubrs
aaa
xor
and
ljmp
push
jle
outsb
pop
and
test
sub
lret
mov
gs
shr
lret
hlt
and
movsl
push
fcompl
in
js
ljmp
sub
adc
sub
jbe
mov
iret
xor
test
and
je
mov
dec
mov
addb
jnp
mov
mov
out
lahf
les
in
sub
or
incb
mov
mov
xchg
add
push
shlb
adc
push
pmulhuw
lret
push
loop
outsb
aaa
fisttps
leave
jge
fadds
jno
std
mov
sub
jae
pop
cs
test
pop
ret
dec
insl
mov
mov
dec
mov
push
mov
xchg
sub
shlb
jmp
mov
sbb
pop
lds
dec
sub
cltd
aad
sahf
sahf
push
mov
int
cmp
lods
mov
in
cmpb
outsb
push
mov
in
in
xchg
push
imul
sti
jno
xor
call
mov
cmp
notl
fstpl
adcl
push
shll
je
jecxz
cltd
jp
imul
jnp
imul
nop
sbb
mov
mov
das
pushf
jmp
fwait
cmpsb
popl
mov
adc
mov
dec
inc
ret
rcrb
pop
adc
mov
repnz
idiv
mov
and
cmp
inc
mov
jno
stos
out
mov
inc
sbb
out
rcll
jp
inc
pop
inc
push
jle
sbb
jmp
xor
iret
mov
ficoms
movsl
dec
rol
frstor
rcr
aas
adc
cmc
mov
jae
fisttps
inc
mov
cmp
outsl
cmp
nop
jmp
push
mov
lds
aam
scas
mov
arpl
pop
popf
jb
inc
push
sub
jmp
jbe
cmp
lret
and
xchg
dec
ja
push
pop
iret
rcr
or
fildll
test
sub
or
and
iret
xchg
lods
mov
dec
inc
fs
mov
mov
mov
sub
inc
inc
xchg
sub
shrb
pop
in
xchg
shlb
fcompl
push
insb
push
inc
ljmp
std
mov
fs
jae
stc
lret
mov
jo
lods
mov
mov
sahf
mov
lock
test
xchg
enter
mov
mov
xor
mov
mov
rorb
inc
outsb
shrb
jbe
sub
mov
call
imul
mov
adc
fneni(8087
aas
fiadds
ret
pop
lods
mov
push
icebp
or
cmp
pop
cmpsl
mov
popa
ror
mov
mov
out
mov
outsb
ljmp
xor
iret
lods
test
jp
adc
cs
addr16
test
push
inc
pop
cmc
pop
roll
add
loopew
leavew
xor
jmp
adc
ret
jne
cmp
loop
stc
mov
pop
jno
icebp
mov
cmc
orb
and
xchg
xor
xchg
fldcw
ror
fistl
mov
notl
aas
icebp
inc
lods
cmpsb
mov
push
icebp
cmp
repnz
inc
and
pop
shll
lock
cmpb
cmpb
jmp
jmp
xor
fadds
loopne
lds
fdivrl
decb
clc
cld
xchg
pop
sarb
mov
idivl
mov
mov
add
xchg
loope
cmpsb
push
into
out
loope
mov
sub
je
insb
push
sbb
test
jae
icebp
in
add
daa
and
push
cltd
cmpsb
add
push
cld
data16
iret
lret
cld
cmp
lahf
add
mov
fbld
loope
inc
in
stos
push
shll
mov
pop
rcrb
dec
inc
pop
push
loop
xor
mov
adc
lcall
fs
popf
push
mov
gs
stos
int3
mov
sarl
jo
cmc
sbbb
mov
jnp
mov
das
mov
rorb
ja
jb
jg
sbb
cwtl
fs
call
xor
add
mov
or
call
or
fwait
je
in
adc
daa
imul
bound
sbb
inc
lret
mov
mov
popa
pushf
add
pop
movsb
mov
cmp
xchg
sti
push
xlat
adc
in
in
or
jecxz
call
andl
cmp
test
xchg
int
adc
and
es
mov
sub
pop
popa
sbb
sub
push
mov
dec
jmp
call
shr
inc
xchg
push
xor
scas
addr16
jmp
adc
mov
add
into
es
out
push
in
mov
dec
jo
jp
cmp
inc
lock
fs
pop
in
inc
jmp
imul
add
adc
into
stos
jmp
push
enter
mov
cmp
push
xchg
and
fs
push
lcall
add
nop
inc
or
pop
sub
sbb
dec
outsb
fdivl
push
insl
pop
inc
mov
xchg
xor
adc
lock
sub
pop
pop
leave
mov
mov
int
jg
jecxz
loop
movb
pop
inc
xchg
xchg
hlt
inc
mov
mov
inc
pop
pop
popa
stos
out
pop
pop
cmp
dec
xchg
pop
xlat
mov
std
in
lods
xchg
jl
incl
call
mov
stos
ret
loope
fmulp
lock
les
xchg
pop
mov
or
xchg
or
ljmp
sbb
enter
add
repnz
push
jbe
rolb
test
repz
dec
cmp
cltd
mov
addr16
sub
movsb
popl
jge
lods
test
or
movsb
push
pop
lods
stc
scas
rol
adcb
add
adc
or
or
xor
push
test
insl
dec
pusha
lea
jle
dec
jo
das
ficoml
jb
mov
out
imul
in
sub
fdivl
inc
pop
mov
pop
inc
into
push
das
cmpb
xchg
add
mov
inc
aam
call
test
mov
fnstcw
repz
sub
pushf
lods
mov
pop
mov
cs
pop
pop
pextrw
and
into
dec
pmullw
xor
mov
outsl
dec
xor
insb
and
test
rorb
jae
mov
lret
add
mov
imul
mov
mov
cwtl
cmp
jo
enter
pop
cmpsb
pop
or
es
push
int
adc
cld
cmc
fs
jg
sub
inc
lret
scas
fisubrs
lds
cmc
lods
push
test
stos
mov
sbb
cmp
push
loop
pop
push
xor
cld
daa
mov
cmp
stos
inc
hlt
and
bound
fwait
cs
xchg
mov
sub
hlt
cmp
cmpsb
lret
mov
inc
jmp
xor
or
sbbb
cmp
dec
aad
jg
push
jbe
jg
push
into
test
mov
cmp
pop
lea
sbb
pop
popa
repnz
or
clc
imul
mov
aad
inc
rclb
mov
movsb
int
fnstcw
mov
pusha
gs
mov
aaa
popa
jbe
rorb
pop
outsb
mov
lcall
mov
in
xor
loop
stos
xor
and
xor
mov
jne
or
jle
push
and
push
inc
and
cmp
xlat
mov
jge
push
push
and
pop
and
and
mov
xor
out
sbb
mov
mov
adc
add
icebp
push
int3
mov
ficoms
mov
test
shl
rcrb
ret
mov
push
test
jl
iret
cmp
pop
xchg
dec
int
lds
adc
push
sub
movsl
push
pop
inc
adc
sahf
fidivrl
ror
mov
orb
enter
sbb
imul
sub
sar
out
xchg
or
daa
cmpl
jecxz
jge
fistl
nop
int3
pop
loop
popa
cmpsb
mov
jg
cmc
cmpsb
fldenv
ret
push
fidivl
mov
inc
dec
add
cmp
cld
inc
cmc
and
jg,pn
mov
lea
xchg
test
insb
push
jecxz
push
addr16
gs
cmp
popa
pcmpgtw
inc
jns
stc
mov
lcall
mov
jne
inc
xchg
test
mov
aas
shrl
fmuls
rcrl
jae
mov
lahf
xchg
xor
jo
mov
add
movb
mov
movsb
xchg
mov
pop
xor
push
inc
jmp
div
popa
sub
andl
xchg
mulb
lret
adc
cmp
insl
mov
pusha
push
lea
pop
dec
cmpl
enter
xchg
sub
jp
movsl
lea
push
pop
mov
mov
fmul
filds
cbtw
lock
mov
push
ret
and
mov
or
mov
push
cmpsb
adc
stos
pop
cmp
mov
neg
push
loope
adc
les
or
jae
mov
jbe
push
cwtl
mov
sarb
cmpsl
fmuls
mov
push
lock
sbb
test
pop
popf
leave
cltd
cli
adc
mov
xor
orb
lahf
jne
ffreep
ret
push
pop
dec
in
sbb
fisttpll
jle
jnp
lcall
repz
dec
fs
int3
pop
xchg
mov
out
stos
pushf
xor
adc
test
enter
aad
popa
xchg
cld
mov
lods
cmp
outsl
dec
out
aas
push
jne
xchg
aad
hlt
add
fwait
or
popa
fldenv
inc
add
enter
or
jae
lcall
insb
js
sahf
das
pop
out
pop
add
repnz
aas
mov
data16
add
sti
test
cmp
cmpb
lahf
pop
xchg
push
xchg
push
or
xchg
or
and
sub
sub
fcmovnb
mov
xchg
sbb
rorb
push
pop
pop
or
pop
shrl
dec
push
enter
int
outsl
sbb
inc
sub
mov
jbe
shr
aam
dec
adc
mov
je
mov
xlat
dec
inc
fs
iret
sbb
jmp
test
adc
ja
or
xor
lret
ret
les
decb
daa
add
inc
xorps
iret
dec
outsl
sub
or
nop
and
and
or
add
ss
fwait
idivb
sbb
sub
cli
xor
hlt
popf
jae,pt
or
dec
or
cmp
jbe
test
push
inc
dec
andl
insl
insb
cwtl
jne
xor
add
dec
cld
rol
sub
mov
xchg
test
adc
adcb
filds
outsl
push
sahf
mov
ss
xor
push
push
xchg
cltd
fisubl
dec
adc
mov
insb
arpl
push
outsb
pop
cmpsl
xchg
dec
mov
xor
adc
daa
in
adc
test
jbe
imul
pushf
ljmp
xchg
cmpsb
out
push
mov
aaa
shll
loopne
leave
gs
ljmp
and
pusha
add
adc
dec
mov
cmp
mov
ja
jnp
stos
mov
pushf
cli
stos
inc
sub
cmp
rorb
jg
out
adc
ret
adc
mov
mov
sbb
xchg
inc
pop
cli
dec
stos
push
or
pop
mov
into
push
inc
lea
test
aas
shlb
pop
adc
xchg
mov
mov
sbb
mov
pop
bound
ljmp
mov
push
movsl
scas
in
lods
pop
dec
nop
mov
inc
inc
mov
nop
ja
inc
arpl
jecxz
and
out
call
ljmp
add
mov
mov
test
pop
std
mov
sti
dec
inc
subb
sbb
sub
adc
inc
clc
inc
jne
outsl
rorb
dec
jnp
sub
data16
dec
cltd
enter
sbb
cmp
cmp
fdivs
jbe
jp
mov
lock
in
arpl
xchg
dec
dec
pop
test
pslld
aas
jg
dec
icebp
adc
and
rclb
mov
or
rorb
in
out
and
xor
sbb
push
xchg
xchg
xlat
sarb
out
push
sti
push
inc
or
stos
ret
mov
std
xor
ja
scas
cmc
int
leave
addl
paddsw
cs
cmpsl
test
out
jns
std
jae
dec
sete
xor
notb
insl
mov
jle
orb
es
inc
dec
out
ficoml
cmpsb
in
mov
aaa
sub
lock
aaa
jae
lea
cld
std
add
lahf
cmp
leave
stc
pushl
cmp
xor
pop
shll
dec
clc
loop
jno
xchg
or
xor
aad
and
scas
sarl
jl
in
mov
mov
and
push
add
mov
or
ret
xchg
mov
push
lret
sbb
dec
fs
fcoml
mov
sbb
inc
jmp
xor
xchg
std
xor
xor
xor
cmp
ficoml
scas
data16
jno
fcoms
inc
into
xor
lahf
out
mov
sub
sub
into
test
sbbb
jnp
add
stos
sbb
leave
cmp
xchg
xchg
mov
jns
int
xor
jae
fiaddl
es
mov
sarb
test
or
push
add
call
push
sub
mov
dec
cmp
movsb
and
or
xchg
jmp
sahf
sub
gs
mov
sub
push
imul
sti
dec
mov
ja
lods
test
jne
sbb
cmp
mov
enterw
ret
aam
fwait
das
sahf
mov
pushf
lcall
jnp
icebp
jmp
jle
xor
shlb
inc
jae
divl
aad
int3
push
jmp
jbe
les
mov
xchg
jae
or
or
add
xchg
iret
add
push
dec
push
cmp
cmpsl
int3
xor
movsb
xor
mov
and
hlt
xor
lods
jne
scas
jno
cld
push
int3
js
jge
icebp
add
stc
adc
inc
aad
sbb
imul
dec
js
imul
dec
icebp
mov
enter
sub
test
adc
negl
lahf
add
pop
mov
or
push
das
aam
or
cld
push
cli
lcall
pop
lea
mov
jmp
add
xchg
mov
inc
leave
jge
ljmp
stc
dec
dec
arpl
jge
js
icebp
xor
loop
sahf
clc
mov
or
jle
fwait
lret
mov
out
cli
popaw
mov
fdiv
xchg
mov
jb
push
mov
into
cwtl
sub
loopne
or
mov
sahf
fistl
xor
mov
xchg
mov
inc
fcoml
rorb
shr
cmp
cmpsb
movsl
loopne
repnz
adc
push
into
mov
sbb
mov
test
cmp
sbb
adc
mov
lret
dec
cs
bound
sbb
mov
mov
decl
adc
add
pop
xchg
pop
push
sbbb
aaa
jge
push
mov
enter
mov
fldcw
cld
fiadds
jge
rol
push
scas
iret
jo
loope
mov
loop
loop
out
iret
jl
dec
mov
test
int
cmp
inc
shl
mov
rcrl
int3
iret
dec
hlt
out
or
popa
xchg
loope
test
pop
jmp
adcb
test
idivb
loopne
ret
out
incl
movsl
test
arpl
mov
mov
mov
ja
jmp
or
dec
or
popf
push
or
cmp
jmp
outsl
mov
and
mov
negl
sub
cltd
pop
insb
stos
cld
aas
push
arpl
shll
sbb
mov
jno
mov
xchg
dec
dec
mov
stos
scas
xchg
scas
jne
jb
or
cmp
push
aaa
xor
fs
cmp
cmp
mov
lahf
push
push
pop
mov
test
jbe
inc
imul
icebp
bound
inc
jne
repnz
ret
test
add
mov
jb
pusha
sarb
jno
mov
or
mov
xchg
jmp
leave
cli
push
sub
lret
inc
xchg
mov
gs
sahf
es
or
sbb
lret
and
insb
or
jns
test
fcoms
pushf
sbb
dec
std
mov
jl
daa
pushf
adc
jb
push
ret
shll
sbb
rorb
lods
add
jl
lea
loop
aaa
add
sub
jae
adc
cmp
and
rol
cmp
sub
fsubs
push
cmp
xor
or
test
out
jg
pop
repz
loope
lcall
inc
mov
stos
mov
mov
rcll
in
rolb
loopne
cmp
cmpsl
mov
pop
mov
mov
lahf
mov
outsb
cli
scas
bound
xor
movsl
jno
push
ficomps
inc
ljmp
imul
and
add
xor
aad
loop
mov
addr16
cmp
jge
xchg
and
jbe
fimuls
sub
xlat
adc
xor
jl
ret
xor
es
ja
in
dec
xchg
mov
jl
jp
repz
push
pop
cwtl
adc
push
xorl
inc
mov
lods
lret
test
das
dec
mov
rol
mov
outsl
fs
or
lahf
cli
in
les
inc
or
xor
cs
pop
jmp
xchg
repnz
jmp
inc
jmp
and
rorl
shll
sbb
enter
xchg
xor
jne
jmp
mov
mov
mov
jne
pop
push
adc
mov
test
rorb
jecxz
in
repnz
ljmp
sub
jbe
leave
jns
pushf
fimuls
cmc
mov
add
pop
rcrl
push
jae
aam
decl
data16
sub
jmp
stos
ljmp
adc
sbb
scas
mov
subb
in
xor
inc
out
pop
push
push
jmp
out
xchg
stc
daa
out
ficompl
lret
jmp
xchg
cmp
mov
mov
adc
sbb
fwait
inc
cmpsb
clc
add
ljmp
or
gs
lock
test
xchg
add
or
adc
stos
lret
in
jg
dec
cwtl
test
push
lods
aas
and
pushf
sbb
fiaddl
dec
je
push
xor
test
nop
push
mov
pop
in
push
test
sub
inc
xchg
sub
repnz
add
test
mov
aas
mov
mov
mov
sti
int3
andb
and
cwtl
sub
test
lods
mov
decl
adc
pop
dec
push
hlt
xor
or
cmp
sbb
aas
data16
sub
out
shrb
cmpsl
pop
mov
xchg
xchg
imul
cmpsb
push
cmpsb
lods
test
sarl
xchg
jle
rcrb
add
dec
fs
loopne
mov
movsl
mov
out
loop
and
xchg
sub
fs
in
dec
jne
dec
mov
jge
aas
add
add
ret
dec
xchg
addb
outsb
dec
int3
popf
xchg
or
sub
inc
cmpsb
test
int3
push
jmp
jne
stos
and
lret
cwtl
xchg
rcr
sbb
jnp
clc
popa
adc
xchg
push
fucompp
imul
cltd
pop
icebp
scas
into
adc
mov
loopne
and
lahf
dec
sbb
mov
outsl
hlt
je
fucomi
sbb
leave
mov
iret
or
pop
out
fcmovb
fnstcw
mov
shll
mov
iret
mov
jl
mov
dec
jge
sub
add
leave
pop
adc
es
and
dec
xor
mov
sbb
ljmp
xor
pop
sub
ffree
push
inc
ficoml
das
xchg
mov
push
or
imul
mov
subl
loop
lcall
mov
adc
jecxz
pushf
mov
mov
repz
xchg
mov
mov
adc
fs
sbb
inc
push
xchg
test
mov
int3
add
ljmp
xor
cld
xor
xor
cmc
data16
mov
sub
adc
addr16
add
mov
into
xchg
jle
sub
je
xor
in
gs
push
xor
clc
sub
or
insl
outsl
sbb
ret
repnz
fdivrs
popf
pop
inc
fcmovb
dec
push
sbb
call
cmpsb
jnp
rclb
jg
push
dec
rcl
inc
inc
pop
mov
mov
in
jge
mov
cmpsl
jno
sbb
push
cmpsl
adc
sbb
sbb
cmpsb
xchg
or
jge
inc
stc
aaa
enter
jae
subb
shrl
push
inc
arpl
scas
sar
add
int
pop
xor
jnp
pushf
dec
cmp
lock
in
pop
mov
andb
inc
dec
mov
adc
pop
ret
jecxz
insb
mov
push
jne
fisttpl
test
adc
add
jp
and
mov
sub
mov
jecxz
outsl
ficoml
push
pop
ret
arpl
and
sub
and
mov
outsb
sub
sbb
pop
pushf
in
ja
push
cmpsl
inc
mov
jns
mov
enter
pop
loop
lret
inc
int
ss
xchg
aas
xchg
out
sub
push
sub
xlat
mov
jge
bnd
and
iret
pop
adc
lahf
test
xchg
or
movsl
fs
mov
jle
inc
adc
sbb
or
push
mov
adc
mov
sbb
and
int3
pop
adc
fsub
pop
dec
pop
xor
cmpsb
ret
movsl
push
sub
repnz
add
lods
dec
mov
sti
repnz
sbb
daa
mov
or
lcall
stos
popf
inc
cwtl
mov
xor
xchg
scas
enter
mov
cli
inc
js
pop
sti
xchg
adc
mov
jb
cli
mov
in
dec
or
inc
test
cwtl
test
adc
xchg
or
sub
fld
dec
loopne
aas
fdiv
fidivl
es
inc
fsincos
cmp
or
faddl
icebp
add
push
jecxz
aas
ss
ret
dec
popa
movsb
push
aas
das
mov
rcrb
pop
popa
shr
pop
scas
leave
test
stos
das
inc
sbb
add
mov
scas
shl
jp
fisubs
mov
mov
mov
cmp
xlat
int3
and
test
inc
dec
dec
xchg
jb
dec
stos
cwtl
ljmp
imul
fs
inc
scas
mov
cmp
fnstenv
hlt
fstl
push
add
dec
mov
push
roll
cli
loope
mov
test
iret
add
test
inc
mov
push
push
add
push
inc
push
sub
scas
jmp
arpl
outsb
jne
pop
jnp
push
sbb
in
jo
loope
sahf
das
cmp
outsb
bound
fidivl
sub
aas
dec
inc
idivb
pop
lret
fisttpl
rorl
cmp
neg
xor
inc
test
scas
jmp
test
xor
int
dec
mov
lock
gs
rcll
pop
stos
sbb
jge
jne,pt
je
or
sub
jo
pop
idivl
fwait
push
pop
cmp
dec
ror
xchg
push
dec
mov
int
je
test
sbb
les
sahf
mov
or
mov
imul
leave
xchg
fnstenv
es
push
in
insb
sub
insb
cmpsb
inc
push
xor
mov
push
xor
and
imul
inc
mov
in
fbld
cs
pop
mov
pop
enter
jae
dec
pop
sub
jae
popa
dec
das
xor
sub
fwait
xor
sarl
daa
sbb
lret
icebp
and
add
cmp
cmpb
dec
pop
mov
ss
jbe
add
fld
mov
lcall
cmp
and
andb
cli
fstl
mov
or
inc
dec
mov
fadd
dec
retw
mov
es
mov
sbb
popf
roll
and
ss
xor
pop
mov
inc
dec
push
sbb
pop
sub
cmpsb
sahf
rol
xor
ss
xor
mov
out
xor
sbb
fdiv
in
jecxz
mov
hlt
enter
xchg
call
adc
fucomi
andnps
test
pop
shl
pop
xlat
sub
dec
sbb
inc
stos
mov
push
cmp
fldt
cmp
pop
outsb
cmp
sub
faddl
xchg
cmpb
movsl
mov
pushf
or
cmp
cltd
cmp
loope
ss
fcompl
pop
mov
movsb
addr16
sub
and
cmc
cltd
subl
out
inc
aam
repnz
test
fucomp
loopne
inc
push
pushf
popa
cmc
outsb
cmp
sub
xchg
arpl
or
jmp
aad
sbb
push
cwtl
lret
aaa
sbb
scas
xor
in
mov
pop
enter
mov
shl
pop
sub
mov
jmp
mov
pop
sbb
sar
lds
rorl
lods
xchg
fistps
cmc
stc
cmovno
roll
popf
loopne
inc
js
pop
ja
cmp
mov
jbe
push
dec
sbb
and
jp
insb
add
test
addl
push
sarl
or
das
hlt
movl
mov
lea
push
xchg
xchg
fcoms
cmp
cmpb
inc
jg
jp
movsl
jne
cmpsb
add
dec
mov
mov
sbb
mov
mov
mov
jnp
add
lret
out
ret
int
adcl
inc
hlt
adc
jmp
pop
sub
fstpt
stos
adc
or
mov
xchg
and
notb
xor
ljmp
xlat
cmp
jecxz
sahf
pop
dec
inc
pop
hlt
ja
les
roll
lret
outsl
lcall
adc
popf
fs
mov
push
imul
mov
fbstp
fcmovnb
xchg
ljmp
inc
hlt
popl
fnsave
fcomip
repnz
mov
xchg
stos
pop
cmp
loopne
rorb
xor
xlat
jmp
jbe
movsl
popl
cmp
fcomps
inc
popf
in
cld
or
jnp
das
fnstcw
pop
cmp
loope
or
sub
xor
push
mov
mov
mov
inc
cmp
lahf
pop
xchg
jecxz
jo
cmc
test
pusha
push
jb
cmp
sub
leave
cmp
or
and
or
or
sub
add
mov
in
testl
in
xlat
and
push
add
xchg
xor
or
or
push
int
cmc
dec
clc
mov
aas
rcrb
jl
orl
xor
pop
adc
inc
cmp
icebp
aas
cmp
pop
push
fstl
or
pop
add
push
pop
loope
add
sub
add
jae
enter
push
nop
pushf
dec
jmp
mov
sub
lods
dec
aaa
mov
pop
cs
out
arpl
in
push
pop
ljmp
jbe
push
test
adc
std
test
lret
cmpsb
pop
movsb
mov
andb
loope
mov
cmpsl
clc
data16
mov
ficompl
adc
dec
or
popa
cmc
test
sbb
clc
jb
out
xor
cmp
jbe
inc
fisubs
fwait
imul
movsb
inc
loopne
mov
hlt
in
push
jns
addr16
mov
and
daa
pusha
cmp
pusha
push
fistps
cli
jae
jmp
out
jecxz
sbb
jmp
push
aaa
jmp
mov
and
add
outsb
xor
jmp
jge
push
xor
jle
jnp
jae
out
pop
dec
pop
test
dec
and
xchg
adc
inc
xchg
and
cmovge
outsb
push
daa
in
es
cmpsl
lcall
ficoml
mov
pop
xor
iret
jbe
pushf
mov
mov
pop
ja
iret
cmpsb
shl
pop
inc
push
sub
mov
pop
xchg
sub
jno
xor
jl
jl
ss
stos
out
jno
adc
aaa
xchg
gs
clc
scas
gs
std
mov
xor
lcall
pop
bound
xchg
popl
in
or
mov
loope
xor
nop
xlat
icebp
mov
mov
fucomip
jo,pt
mov
mov
inc
mov
xor
in
rclb
js
into
jne
add
jp
outsb
data16
loop
clc
dec
daa
xor
scas
dec
push
fldcw
lods
mov
pop
rcrl
or
sbb
jle
out
out
push
jbe
cmpsb
adcb
cmpsl
or
es
in
pop
mov
aas
test
pop
ret
imul
mov
rol
adc
dec
lahf
dec
aas
sbb
shll
add
data16
out
addr16
adc
lea
sub
pop
rcrb
repnz
xchg
insb
pop
mov
fdivl
in
mov
aas
popf
sti
xchg
das
stos
pop
add
imul
ljmp
inc
cmp
iret
fsubs
jmp
cli
data16
mov
stos
sub
cltd
bound
vorps
int3
mov
mov
sti
jecxz
dec
ret
dec
sbb
pop
fldenv
sbb
in
fildl
mov
push
repz
pop
cmp
pop
or
cltd
out
sub
fistpll
ljmp
mov
mov
fcoml
outsb
mov
sbb
adc
rcrb
imul
fimuls
inc
push
pop
and
movsb
cmpsb
fnsave
or
xchg
mov
sub
dec
popf
test
xor
sub
mov
cmp
cmp
into
mov
or
sbb
sbb
popa
sbb
pop
cmc
inc
jl
jmp
jb
lret
mov
inc
sbb
test
pop
inc
sbb
pusha
call
adc
cmp
add
inc
ret
jecxz
add
inc
push
add
test
daa
shlb
adc
ja
lahf
mov
out
jne
mov
mov
fwait
cli
scas
shr
add
mov
adc
pop
iret
enter
mov
cwtl
mov
sbb
clc
or
mov
lret
mov
xlat
push
sti
pop
jmp
xchg
test
test
incb
out
mov
cmp
mov
pop
sarb
je
out
aad
mov
repnz
jg
pop
jge
cmpsl
fnsave
aaa
shl
fwait
sbb
sbb
mov
xor
pop
les
mov
shlb
mov
jbe
and
dec
lahf
fnstsw
cmovae
repnz
sbb
xor
notl
into
add
out
lods
mov
pop
insl
xchg
mov
dec
iret
loopne
add
orb
dec
push
test
aad
xor
mov
jbe
ret
test
subb
or
lahf
xchg
rorl
sbb
inc
push
jb
icebp
jae
rol
sub
and
aaa
movsb
shrl
repz
rcl
ljmp
shl
jne
daa
fisttps
mov
addb
jnp
ss
cmp
sbb
arpl
xlat
std
adc
lret
sahf
cmpsb
push
jg
cmpsl
jb
cmp
sbb
outsl
pop
cmp
in
xor
stc
dec
sbb
insb
sub
je
popf
sub
adcb
sub
fisubrs
mov
sub
repnz
mov
insb
nop
lret
adc
cltd
fiaddl
inc
cs
push
xchg
in
mov
cld
jb
push
lods
dec
cmpsb
fiadds
push
call
add
push
loope
or
negl
scas
mov
sarb
mov
mov
ds
push
jl
mov
fwait
jl
clc
and
js
cmp
mov
lock
xchg
inc
sbb
xchg
cmc
xchg
stos
nop
in
push
cmp
cmc
pop
aad
mov
xchg
inc
push
imul
adc
mov
iret
xchg
jg
les
es
jne
pop
das
call
adc
or
shll
and
test
jno
in
pop
pop
pop
leave
mov
or
inc
lret
and
outsl
xchg
cmpsb
scas
mov
push
xor
jno
mov
adc
les
and
pop
mov
mov
mov
mov
push
lret
and
bound
jne
insb
cltd
data16
adc
cmc
sub
loop
mov
inc
pop
or
enter
mov
xor
jns
or
push
sbb
sub
jp
dec
jo
cld
pop
dec
push
xor
dec
dec
jbe
ds
and
pop
sbb
adc
fs
mov
add
mov
mov
sbb
adcb
hlt
and
and
outsl
inc
lods
push
dec
out
ss
stos
sbb
in
out
out
inc
loop
and
insl
pop
test
or
push
insl
lret
push
pop
iret
scas
dec
sbb
daa
in
mov
dec
jbe
out
in
mov
aam
daa
cs
add
mov
test
push
fnstenv
sbb
shll
mov
dec
sarl
jo
lds
push
insb
lret
dec
test
mov
pop
stc
popa
sbb
xchg
or
push
or
or
orl
cmpb
lret
mov
push
push
xchg
dec
mov
push
xchg
aas
jae
dec
sbb
jl
pushf
fidivrs
sbb
push
sarl
cmp
je
aas
mov
xorb
mov
pusha
jmp
dec
repz
lods
push
jecxz
push
cmpsl
mov
adc
adc
push
lds
mov
in
out
es
insl
add
add
out
mov
das
call
lock
mov
sbb
pop
add
adc
pusha
sbb
bound
adc
push
sti
scas
lahf
jnp
or
std
ss
push
in
je
or
xor
fs
pop
jno
jmp
jo
and
push
arpl
loope
cwtl
sub
enter
cli
outsl
fnstenv
in
jb
pushf
adc
add
push
adc
fildll
push
ja
popa
iret
pop
mov
mov
push
lock
lret
mov
lock
in
out
dec
jns
outsl
pusha
orb
stos
pop
fldcw
jmp
or
jmp
inc
subl
push
mov
jmp
jmp
mov
orb
psrlw
push
jl
outsb
out
in
and
xchg
jo
imul
cmp
fistps
in
lods
hlt
mov
sub
insl
sets
xlat
jp
pop
add
inc
pushl
adc
mov
and
pop
insl
loope
pop
sbb
rcll
fwait
mov
sub
shrb
or
xor
xchg
jno
xor
xchg
hlt
cmp
mov
testb
and
iret
sbbb
xchg
dec
xor
inc
add
jmp
add
aaa
mov
loop
iret
jns
sahf
jl
idiv
sub
scas
mov
push
jbe
xor
push
pop
pop
jae
pop
imul
aaa
jae
mov
inc
adc
dec
aas
enter
imul
xchg
bound
fdivr
jae
mov
into
mov
push
dec
xchg
or
aas
test
outsl
push
orb
jg
fbstp
arpl
push
into
fcoml
xor
iret
mov
and
dec
xlat
bound
inc
loop
lds
xor
shll
xor
jbe
inc
lea
pop
jne
popa
sbb
sbb
xchg
scas
stos
sbb
test
mov
jb
jle
fsubrp
aad
xor
outsb
aam
lret
cmp
pop
stc
cmc
call
jl
pop
sbb
sub
mov
pop
adc
leave
roll
push
pop
mov
push
mov
pop
outsl
mov
ficoml
push
bound
ret
pmuludq
jbe
cmpsl
fwait
mov
xchg
aad
cmp
add
sbb
mov
pushf
push
lahf
dec
dec
adc
mov
mov
das
ror
dec
mov
mov
or
jbe
popa
or
or
and
mov
mov
movsb
cld
movsb
inc
lods
cli
and
and
push
adc
ret
inc
xchg
pop
test
jge
sahf
jl
mov
jne
cmp
lea
push
ds
sbb
insl
in
dec
mov
mov
pop
adc
leave
loope
xchg
xchg
xchg
push
in
inc
inc
fldenv
adc
lret
sbb
jbe
pushl
or
lret
inc
cwtl
test
pop
movsb
lahf
jmp
in
cmp
outsb
clc
int3
nop
jmp
mov
inc
jecxz
xor
test
inc
outsb
decb
inc
sub
lock
fnop
xchg
test
xor
mov
ds
adc
mov
xor
xchg
jo
pop
hlt
int
loopne
xor
arpl
adc
fidivrl
inc
int3
data16
dec
addr16
mov
push
vphadduwq
jl
loope
aam
and
cmpb
popf
and
xor
dec
jnp
xor
shll
inc
sub
in
sbb
mov
push
lea
rol
imul
add
xchg
and
adc
push
ret
mov
mov
jno
mov
in
daa
mov
jp
movsb
ljmp
add
mov
jmp
add
das
pop
sahf
in
filds
movsl
push
jmp
push
jo
dec
sarb
lret
jge
and
cmp
mov
out
mov
inc
mov
mov
repz
pop
nop
cltd
xchg
mov
dec
mov
add
sbb
or
or
dec
cwtl
in
mov
xchg
adc
xchg
testl
ret
jmp
repz
mov
or
movsb
pop
mov
sbb
push
js
fidivrs
lds
ret
cs
test
jmp
xor
daa
sarb
nop
leave
adc
add
jae
repnz
sbb
jbe
dec
or
shrl
or
jmp
add
or
add
mov
xor
repz
int3
popa
lock
sbb
hlt
inc
aad
fidivs
cmp
mov
sbb
cmp
ja
gs
outsb
fisubl
pusha
into
cmp
ljmp
cltd
ret
dec
ss
ss
push
jno
in
cmc
xchg
adcb
mov
xor
lcall
inc
pop
push
insb
jle
int3
pusha
mov
push
push
loop
mov
push
mov
int
movsb
mov
mov
mov
aas
push
movhps
pop
mov
insb
hlt
inc
cmp
lods
jp
adc
stos
cmp
push
inc
adc
cli
sahf
mov
scas
inc
scas
je
jne
subl
adc
jl
and
push
mov
movsb
stos
lret
mov
mov
sbb
popf
inc
out
int3
test
pop
pop
pop
leave
xor
lds
loop
enter
icebp
cmp
ret
mov
sub
repz
test
add
xor
in
mov
pushf
adc
dec
cmp
es
mov
inc
mov
mov
shll
insb
mov
sub
mov
out
adc
notl
lcall
loopne
into
out
sbb
or
bound
inc
fcomip
mov
mov
pushf
adc
push
inc
mov
ss
addr16
sub
repnz
fidivl
inc
dec
sbb
test
mov
sub
pop
into
and
lods
enter
lret
movsb
mov
in
lea
and
mov
lock
ljmp
adc
add
inc
dec
jb
test
popf
pusha
push
mov
pop
sub
out
insl
push
xchg
mov
in
in
aam
mov
inc
out
xor
or
addr16
adc
adc
shrb
pop
pop
outsl
cmp
scas
sub
mov
pop
inc
xchg
daa
ffreep
test
ljmp
sub
cmp
test
rolb
sbb
rcrl
cmp
dec
movsb
imul
jne
fmull
mov
dec
adc
js
addl
cmpsb
in
dec
cmp
lret
fstl
pop
loopne
xor
out
pop
pop
sbb
iret
leave
subb
scas
cld
subb
jnp
xchg
mov
loop
mov
into
cli
out
pop
scas
stc
or
jl
in
cmp
or
mov
enter
loop
mov
clc
das
cmpsb
sub
loope
or
cmp
sub
cmp
in
lret
mov
fs
jne
cmp
sub
fnsave
lods
bound
mov
mov
outsl
and
mov
mov
adc
and
xor
and
out
ja
mov
mov
lock
pop
jecxz
sub
jge
dec
lret
je
pop
inc
push
xorl
mov
mov
inc
mov
mov
mov
in
cmp
jb
rclb
mov
dec
sti
pop
and
cmpsl
aam
or
jns
pop
shlb
sti
cwtl
ljmp
enter
xor
sub
jle
idiv
or
mov
add
inc
cmpsl
clc
outsl
push
adc
lods
fstpt
adc
jecxz
out
or
mov
je
push
imul
xchg
popf
inc
mov
push
addb
xchg
fwait
out
and
test
push
adc
loop
pop
fidivrl
notl
dec
xlat
pop
out
in
dec
push
xchg
mov
js
inc
mov
movsb
sub
jl
add
or
jmp
inc
ret
pop
add
nop
push
cmc
adc
add
ja
add
popa
movsb
rorb
mov
mov
insb
adc
cld
and
aas
add
jl
scas
or
mov
sbb
js
push
push
sbb
or
and
mov
mov
and
es
push
sub
pop
ret
or
adc
fnstsw
repnz
jmp
daa
out
jae
jbe
jne
popf
lret
repz
into
shl
popf
push
fiadds
pop
sarb
mov
fcmovnu
sub
cld
push
jae
fdivs
pusha
fnstcw
or
pushf
aaa
ret
fiaddl
dec
iret
cmc
es
stos
shlb
sbbl
loopne
into
pop
adc
cmp
and
lock
stos
push
push
iret
pop
ret
test
pop
mov
in
das
lahf
inc
lock
in
dec
stc
movsb
dec
imul
test
rorl
shl
imul
sbb
in
fmul
pop
jecxz
pushf
pop
ret
mov
dec
fisubl
dec
icebp
add
insb
xor
into
pop
mov
adc
mov
out
repnz
loope
jo
fnsave
xchg
inc
xchg
enter
dec
hlt
mov
add
cmp
out
jno
push
xor
xchg
repz
cmp
dec
iret
add
lret
jnp
mov
pminub
xor
mov
pop
enter
xchg
fmull
push
adc
hlt
mov
int3
adc
call
pop
mov
ss
adc
es
cmpsb
ret
inc
int3
pop
xchg
pop
jge
and
loop
and
jge
adc
lock
aaa
jg
add
adc
pop
movsl
jns
and
xchg
loop
imul
xchg
dec
jecxz
mov
lret
cli
std
mov
xchg
or
pop
call
jl
ret
lret
add
test
adc
jbe
mov
mov
push
aaa
les
xor
lock
lret
shl
or
pusha
xlat
cwtl
out
lret
fisttpl
fidivrs
push
push
jge
out
pop
and
cs
mov
es
addb
orl
enter
or
stos
test
adc
std
popf
add
dec
sbb
fwait
pop
xchg
addr16
or
repz
lret
shlb
jo
sub
mov
cmc
in
lret
mov
pop
lods
sbb
movl
mov
into
aam
xor
xor
in
dec
push
mov
xor
ror
mov
lock
add
add
jl
mov
sti
push
and
stc
scas
lods
rolb
mov
mov
fisubs
stos
loopne
int
push
lcall
lahf
ja
push
outsb
mov
mov
xor
mov
cmpsb
or
aas
lahf
adc
add
movb
inc
inc
fstps
jecxz
and
jno
cmp
ret
sbb
fcmovnb
push
fistl
sub
dec
rep
cli
mov
fisubl
and
shl
adc
popf
fsubs
or
mov
mov
fadds
jne
xchg
sarb
adc
leave
shrl
imul
adc
xor
popf
jp
andps
icebp
dec
dec
mov
sbb
rcrl
and
mov
xchg
ret
sbb
jmp
dec
cs
pop
inc
mov
jmp
fwait
jl
movsl
pop
mov
mov
cmp
xchg
mov
mov
addb
rcrb
js
mov
adc
pop
shlb
loop
jbe
scas
bnd
loopne
movsb
mov
dec
jnp
repnz
cmc
push
jae
or
movsb
inc
aas
sub
mov
aad
push
sti
mov
lods
mov
aad
aad
movsb
das
ljmp
or
les
fwait
mov
cwtl
sbb
pop
out
adc
aam
ss
ret
mov
inc
pop
cltd
cmp
popa
lcall
push
mov
sarl
mov
mov
loopne
into
mov
sbb
shl
jne
inc
or
out
je
and
in
pop
adc
js
jnp
or
cmc
adc
sarb
dec
cmp
add
les
sbb
sbb
xchg
scas
es
dec
cmpsb
nop
push
mov
push
mov
pop
xchg
stos
and
jb
xchg
mov
adc
xor
imul
adc
push
sbb
cs
dec
pusha
cmc
push
nop
imul
xor
scas
cmc
push
fldt
leave
mov
js
mov
cmp
push
jg
jbe
outsl
inc
mov
cmp
push
enter
icebp
cmp
xor
jbe
inc
lahf
aas
jl
data16
pop
adc
xlat
mov
mov
in
push
cmp
ret
xchg
sbbb
adc
mov
jbe
pop
fisubs
sub
cli
adc
enter
mov
out
and
sbb
mov
and
shlb
pop
icebp
cmp
cmpsb
push
mov
pop
imul
lods
inc
xor
std
jne
movsl
iret
jbe
loopne
or
in
cmpsl
cltd
jae
jns
push
sub
xchg
adc
fdivl
jb
sub
das
lahf
movsl
in
lahf
sti
shl
push
repz
mov
sub
xchg
or
dec
cmp
es
lds
or
stos
mov
mov
push
ret
xlat
iret
insl
lock
cmp
fmull
mov
jp
imul
inc
add
sahf
je
xchg
or
fbstp
dec
cli
mov
pop
notb
adc
es
sbb
in
push
pop
xchg
lret
push
mov
repnz
or
mov
push
xchg
out
in
push
push
mov
jno
scas
ror
lods
das
mov
mov
mov
jmp
lds
dec
aad
mov
iret
mov
loope
notb
fsubl
cmp
jle
jns
into
stc
add
sti
or
push
cmp
mov
or
fistpl
mov
inc
inc
cmp
jmp
pop
ds
lock
and
push
and
into
or
fisubrs
pop
or
and
hlt
xchg
cmc
ret
sbb
mov
repz
mov
test
in
jecxz
movsl
jecxz
mov
adc
pop
inc
mov
mov
jp
dec
mov
mov
xchg
push
mov
jo
nop
aaa
or
inc
mov
aaa
lods
popf
cmp
testl
loope
enter
test
ljmp
add
insl
sub
out
mulb
push
or
pop
ret
cmp
push
rclb
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
push
sbb
dec
jbe
aaa
lcall
dec
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
jp
cmp
cmp
aam
fimuls
repz
lods
subb
cmp
push
call
loop
cmp
cmpsb
inc
pop
pop
cs
mov
adc
push
repnz
dec
jbe
push
cltd
imul
clc
pop
mov
inc
xor
push
add
adc
push
ret
movsb
add
xchg
and
mov
xor
jmp
cmp
jne
adc
xor
cmp
clc
inc
mov
inc
xor
iret
pushf
xchg
iret
insb
add
lods
ret
or
sub
xor
popf
mov
adc
mov
pop
clc
sbb
dec
jbe
enter
push
lea
cmpsb
push
xchg
ss
repnz
dec
jne
ret
cmp
push
arpl
sbb
dec
jbe
enter
mov
repnz
dec
jbe
int
xor
dec
repnz
dec
je
enter
push
repnz
dec
ja
enter
push
sbb
dec
jbe
sub
xor
lea
dec
jbe
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
cmp
ds
sbb
inc
jbe
andl
sbb
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
jp
mov
dec
jbe
ret
xor
push
repnz
dec
jb
enter
cmp
mov
jbe
call
incl
jbe
test
xor
incb
dec
jbe
int3
xor
push
repnz
dec
jbe
enter
out
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
jbe
enter
push
repnz
dec
sbb
push
popf
repnz
xchg
pop
pop
aaa
dec
lods
mov
pusha
icebp
pop
rcr
adc
aas
and
pop
pop
pop
pop
or
dec
inc
out
imul
out
das
imul
clc
imulb
inc
ljmp
dec
fdivl
or
mov
inc
mov
es
ficoml
pop
jmp
je
jne
mov
mov
js
mov
or
pop
mov
add
or
es
scas
lahf
repnz
mov
xorl
es
outsb
adc
mov
add
cmp
pop
xor
mov
push
hlt
cld
adc
push
and
stos
fistps
xadd
lret
pop
in
in
test
stc
cmc
loopne
pop
xorb
fstpl
jns
clc
outsl
add
outsl
sbb
push
leave
sub
and
mov
adc
cmp
cltd
jns
dec
xchg
push
sbb
dec
dec
cmpsl
mov
pop
scas
push
pop
repz
mov
loope
dec
pop
div
aas
jbe
daa
cmp
xchg
sub
xlat
dec
fdivrl
out
fdivp
push
push
in
lds
int3
lock
dec
xchg
xchg
sbb
out
xchg
imul
aad
std
inc
frstor
push
mov
jmp
test
mov
js
sbb
and
in
xchg
stos
push
daa
and
dec
dec
cmp
sarb
cmpsb
scas
inc
push
cmp
popf
sub
jmp
jb
scas
or
push
psubsb
push
inc
jns
pushf
in
in
pop
inc
lcall
cmpsb
jbe
cmpsl
jo
mov
call
in
aam
lahf
jmp
cmpsb
or
mov
adc
fwait
push
lret
xchg
adc
push
and
out
xor
repnz
jmp
cwtl
in
add
jl
sub
or
xchg
rep
gs
sub
and
das
push
jnp
push
xchg
jge
shrb
mov
jmp
js
add
sbb
mov
fildll
sbb
mov
repz
xchg
push
out
bound
das
or
or
jns
sub
xor
dec
sbb
or
dec
incb
pop
dec
repnz
int3
sub
push
mov
sub
loope
fisubl
push
leave
sub
outsl
gs
movsb
ss
pop
outsb
lds
aaa
mov
mov
inc
xchg
rcll
cmp
and
mov
and
negl
jb
lods
lret
movsl
sub
xchg
lret
mulb
sbb
mov
ja
inc
mov
push
dec
int
mov
fisubrl
or
cmp
xchg
in
xchg
dec
xchg
ret
jg
and
lahf
xor
movsl
xchg
shrl
lea
push
add
pop
ljmp
into
xor
adc
sbb
inc
into
jp
xchg
in
stos
mov
fistpll
jmp
mov
movl
ds
jnp
cmpsb
rorb
push
cmp
xor
mov
std
test
mov
sbb
arpl
cmp
mov
push
push
push
xchg
cmc
fcoml
lods
scas
out
sbb
negb
ret
cs
lret
ss
call
stos
gs
into
jl
out
cltd
lods
or
es
inc
mov
and
mov
lea
fsubl
jecxz
mov
jl
sub
xor
push
popa
push
sbb
or
cmpb
mov
push
mov
test
xor
cwtl
cmp
test
iret
jb
ret
pop
inc
sub
cwtl
in
mov
fsubl
enter
mov
fucomip
or
sub
xchg
pop
sti
adc
mov
and
loop
ret
mov
insb
fs
shll
cmc
xchg
loope
mov
and
sbb
hlt
pop
sub
jge
cltd
jne
or
cmpsl
fsubr
inc
pop
inc
or
in
jl
cltd
mov
call
in
xchg
ljmp
imul
imul
stc
cmc
cmp
pop
lods
shrb
div
pop
xchg
pop
aad
out
push
push
bound
cmpsb
jne
inc
mov
push
and
pop
fstpl
popf
mov
jp
arpl
ss
cmp
lret
movsb
out
mov
push
pop
aam
rolb
add
jae
push
das
jg
or
rorl
dec
cmp
repz
pop
lahf
cmpsl
inc
into
icebp
xor
cmpsl
ffreep
das
hlt
jnp,pt
sar
int
cld
clc
mov
data16
adc
inc
push
adc
dec
notl
and
or
mov
xor
inc
iret
and
sarl
popa
hlt
repz
sub
add
jmp
xchg
std
jb
sbbb
and
lcall
push
add
sbb
sbb
mov
jmp
jns
adc
add
pop
xchg
mov
inc
xorl
pusha
mov
mov
and
push
push
or
cmp
sbb
pop
shr
push
call
clc
stc
popa
or
stos
sbb
mov
stos
aam
clc
lods
mov
or
je
mov
sahf
dec
xor
dec
mov
int
push
lret
inc
jp
sbb
adc
dec
or
push
xor
arpl
cmpl
jno
adc
cwtl
jge
cmpsl
xchg
mov
xchg
pop
inc
fildll
push
movsb
inc
int
xor
cmp
popa
sub
scas
stos
xchg
or
rcl
or
cmp
sbb
mov
lret
fistpll
mov
push
push
adc
je
rcrl
les
gs
jne
stos
fstpt
sti
fldcw
fldt
andb
cltd
rclb
push
sahf
pushf
mov
or
jp
xor
sbb
pop
out
enter
jae
sahf
int3
cmpsb
dec
jo
or
in
push
or
cltd
push
or
pop
out
adc
add
nop
fisubrs
in
andl
and
and
scas
jnp
mov
mov
xor
mov
and
ss
push
lods
or
xchg
dec
jbe
lea
inc
popa
mov
pop
xchg
call
push
daa
cs
lea
xsaveopt
mov
aaa
xchg
into
adc
jp
cwtl
mov
add
int
loop
lcall
push
je
pop
jle
cs
cli
jbe
and
rcrb
sub
add
jl
pop
add
hlt
jmp
inc
lret
dec
inc
aas
fsubr
hlt
out
fadd
lods
enter
xchg
xor
in
outsb
jo
cmp
mov
adc
push
imul
in
push
or
mov
repz
scas
mov
or
pop
scas
add
scas
mov
cmp
xchg
mov
cwtl
ret
shll
aaa
jmp
jnp
mov
or
mov
or
jns
mov
aad
jbe
out
cmp
mov
xor
and
xor
insb
jb
xchg
xor
sub
ficoml
int
scas
shrb
mov
ret
das
repnz
pop
cmpsl
in
dec
mov
add
addb
mov
mov
jp
dec
or
mov
imul
daa
cmp
mov
lds
mov
lea
push
imul
inc
fcomps
xchg
push
ljmp
outsl
leave
mov
dec
scas
sbb
add
or
pop
outsl
jmp
das
outsb
lret
jmp
data16
pop
imul
mov
jno
lcall
imul
mov
ss
mov
repnz
cli
inc
mov
hlt
mov
sbb
mov
cwtl
inc
or
xor
ficomps
iret
ljmp
jb
add
and
push
sub
in
cwtl
ss
mov
das
jecxz
and
add
xchg
dec
cmpsb
fsubl
mov
inc
ficomps
stos
addb
ss
push
xchg
jnp
mov
cmp
sbbb
pop
push
hlt
cmp
inc
loop
fwait
insl
dec
repz
lcall
mov
mov
or
mov
mov
sarl
add
mov
outsb
out
sub
push
add
in
fildl
testl
jp
dec
aaa
push
inc
adc
ret
sbb
mov
in
es
mov
rcrl
fildl
pop
lea
ljmp
rcr
lret
mov
out
pop
lea
rol
mov
add
call
lcall
fucomip
pop
push
add
aaa
xor
mov
dec
cmc
aam
xbegin
daa
mov
sbb
adc
lret
push
inc
insl
out
jg
insb
xlat
dec
gs
inc
iret
mov
stos
int
rolb
xchg
nop
jae
sbb
mov
jnp
mov
leave
insb
push
lock
incb
repnz
adc
xor
fildl
push
pop
sbb
xor
lock
sbb
pop
fst
bound
in
rolb
cmp
mov
mov
mov
fsubs
repz
dec
das
push
sar
cmp
xchg
cmpsl
xor
xchg
in
in
faddl
popf
mov
lret
mov
cld
clc
adc
mov
and
adc
and
iret
cmp
or
mov
pusha
insb
shl
shr
mov
mov
sub
test
cld
cltd
test
dec
adc
mov
mov
push
add
jbe
in
idivl
lods
out
mov
in
lock
aaa
push
insl
sub
or
in
les
in
mov
fsubrs
pusha
dec
notl
das
vmovhpd
fdivrs
pop
add
test
pop
sub
mulb
and
pop
lock
cmp
mov
xchg
repz
jns
addr16
fnstsw
mov
sub
mov
stos
scas
xchg
mov
add
pusha
sti
jb
les
inc
cmp
xor
mov
div
sub
mov
jns
mov
push
add
pop
sub
xchg
in
out
inc
mov
mov
push
enter
or
gs
ficompl
jecxz
insb
roll
pop
lods
cmp
mov
lret
lret
pusha
movsb
xor
iret
sub
inc
es
sahf
fistl
sbb
repnz
out
enter
mov
sahf
ljmp
or
out
sbb
mov
pushf
add
daa
xchg
adc
in
xor
dec
cmp
mov
jmp
ret
int
xchg
lds
or
in
bound
fucom
lret
lods
sbb
push
sbb
fucom
pop
sub
adc
push
pop
add
mov
icebp
sbb
dec
and
and
pop
and
cmpsb
cmp
scas
mov
loope
incb
push
cmc
les
xor
addl
jmp
sub
mov
in
cmpsl
insl
iret
dec
sub
out
mov
arpl
mov
push
cs
sbb
and
inc
stos
sahf
out
sbb
std
push
rorl
jae
imul
mov
sbb
int3
js
adcl
mov
ds
aad
jl
mov
cmc
xchg
cmp
jb
cmp
and
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
