sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
lcall
dec
lcall
mov
pusha
nop
mov
inc
sbb
xor
xchg
sbbl
xor
mov
pop
push
lock
sbb
out
cmp
pop
clc
sub
movsb
sub
add
lods
pop
mov
cwtl
cmpsb
cmp
add
daa
test
imul
ds
cwtl
dec
xor
sbb
es
ret
orb
jae
testl
mov
cmp
call
add
xchg
negl
icebp
adc
lcall
push
div
jne
mov
lods
cmpsb
xchg
mov
insl
outsl
jp
cmc
sub
pop
sbb
xchg
cld
lcall
rcr
movb
jb
xchg
shll
ja
xor
cmp
and
sbb
cwtl
les
cltd
mov
push
adc
dec
rclb
inc
shll
sub
lods
mov
pop
rcr
das
push
aas
fs
mov
rorl
mov
inc
shlb
or
cmpsb
mov
das
and
imul
and
out
subl
xchg
inc
out
int
jge
sbb
fsubp
je
cmp
mov
xchg
mov
jae
lea
adc
adc
popa
push
or
and
pop
enter
clc
and
mov
pextrw
push
pop
cld
mov
lahf
xchg
mov
push
push
cltd
xor
lods
dec
mov
aaa
push
xchg
fisubs
mov
xchg
mov
xor
mov
xchg
testb
push
loope
jmp
fst
rcll
sbb
lret
out
ds
mov
sub
cmp
xchg
adc
add
dec
adc
mov
xchg
rol
mov
ficomps
add
pop
sub
popa
add
mov
xchg
sarb
cs
jnp
repnz
mov
in
es
test
pop
and
inc
bound
mov
imul
push
adc
pop
push
inc
jp
mov
cld
movsb
out
enter
and
jmp
test
mov
cmp
je
arpl
and
jne
shlb
cs
je
push
push
mov
xor
mov
sub
popf
add
xlat
mov
jl
sbb
and
xchg
sub
xor
push
jo
aad
subb
sahf
jb
or
xchg
popa
les
mov
and
bound
xchg
or
inc
addr16
cmpsb
cmp
push
popa
out
jl
pusha
cmp
das
fadds
ss
movb
xchg
pushf
sbb
push
mov
xchg
insb
mov
adc
inc
insl
xor
mov
mov
les
sbb
mov
loop
lds
mov
add
sti
repnz
stos
mov
lahf
xor
inc
push
les
dec
mov
ss
pop
fistpl
lret
stos
loop
dec
imul
pop
sub
pusha
push
stos
mov
or
inc
gs
stos
test
imull
jmp
ret
and
sti
sbb
div
icebp
lret
xchg
inc
jge
adc
cltd
std
int3
cmp
mov
mov
sub
leave
cmc
dec
inc
mov
imul
xorb
add
out
mov
js
sub
test
cmp
int3
cmpsb
mov
in
jl
add
in
pop
ja
popf
stc
pop
int
cmp
out
xor
sbb
movsl
adcb
fdecstp
mov
fs
push
mov
mov
add
add
stos
mov
stos
ss
jg
pop
push
mov
flds
xchg
cmp
pop
cmp
or
sub
push
push
pop
mov
lods
test
sbb
xor
adc
push
arpl
divb
add
jecxz
shr
stos
mov
push
jnp
fwait
cmp
into
jne
stos
in
dec
pusha
pop
les
nop
shrb
pop
jbe
test
sbbb
xchg
xor
cltd
popf
and
sub
cmc
adc
bound
jbe
xor
jle
testb
sahf
sub
ja
gs
xor
xor
enter
sti
jbe
in
mov
ja
int
popf
add
test
xchg
fstl
addr16
push
xchg
and
dec
adc
mov
leave
testb
out
add
fsubrp
and
mov
mov
shl
inc
test
scas
cmc
nopl
sub
subl
loope
fstl
clc
fcomi
cmp
fdivrs
cmc
cmpsl
mov
addr16
add
jns
push
lret
aas
xchg
mov
or
scas
sbb
jp
or
test
shrb
mov
jp
fldenv
push
or
mov
out
sub
mov
mov
ror
jecxz
jecxz
mov
and
loopne
cld
adc
jae
aas
dec
nop
mov
dec
sahf
adc
rcrb
mov
pop
xor
je
pop
gs
mov
lahf
ljmp
pop
push
aam
icebp
inc
mov
sbb
iret
or
mov
inc
gs
pop
dec
inc
xchg
jmp
mov
adc
repnz
push
sti
pop
sbb
clc
cli
jecxz
jmp
or
sbb
clc
mov
repz
adc
sti
mov
mov
sub
scas
outsb
fcompl
sbb
aam
xor
dec
sbb
jl
int
xchg
adc
jae
push
add
mov
xor
dec
lret
rep
jge
xor
add
fucom
mov
insl
ljmp
rorb
out
hlt
push
push
mov
rcrl
inc
lahf
mov
mov
decb
das
inc
pop
sbb
or
xor
push
jns
testl
iret
cs
outsb
xor
pusha
hlt
cmp
data16
sbb
dec
mov
or
sub
loopne
push
outsl
cmp
xor
imul
sbb
lea
sub
jo
lds
test
cmpsb
xor
inc
std
out
jmp
mov
out
xchg
sbb
sbb
add
push
dec
sbb
rolb
push
std
setno
cmp
sub
cs
xchg
gs
test
sarl
rcrb
loope
and
jmp
lods
test
and
push
iret
shlb
mov
mov
test
or
cltd
arpl
incl
xchg
xchg
lods
sarl
push
push
inc
loope
aam
jge
jne
dec
movsb
nop
push
icebp
je
outsl
lahf
lods
int
or
xchg
js
and
imul
call
aam
cld
jmp
incl
test
repnz
mov
int
fwait
cmpsl
orl
test
es
ds
add
std
dec
lret
punpckhwd
lock
jmp
sbb
dec
mov
pop
jle
in
jne
push
movsl
pop
fucomi
aad
outsb
adc
add
lock
aam
loop
shll
xchg
scas
xchg
aas
adc
stc
scas
jp
ret
repnz
ja
sarb
nop
mov
daa
int
add
repnz
xchg
push
testl
pop
pop
adc
mov
inc
insb
adc
cmc
scas
out
jns
add
sti
rolb
daa
call
xor
jmp
push
mov
out
lahf
or
mov
sub
je
pop
js
pop
pop
in
and
mov
or
stc
sub
pushf
mov
jmp
dec
mov
sahf
mov
xchg
mov
pop
sbb
xorb
fistpll
sub
xchg
adc
out
lods
dec
movsb
pop
les
pop
xor
test
loop
xchg
orb
js
xchg
and
cmp
inc
loope
gs
nopl
jo
dec
test
fstpt
push
leave
pop
ds
imul
xchg
adc
repnz
push
or
insb
jg
inc
xchg
aad
scas
jb
push
lock
push
sbb
int
pop
jge
mov
cld
adc
cmpsl
std
mov
repz
xchg
inc
lcall
jg
xchg
into
shlb
pop
fisttps
adc
xor
out
and
mov
ret
inc
inc
stos
lcall
idivl
sarb
pop
lcall
xor
popf
xchg
mov
pushf
push
movsb
jecxz
mov
adc
mov
loop
rcr
iret
repz
ljmp
add
aam
add
inc
das
sub
jbe
sub
ret
mov
cwtl
aas
cli
pop
shlb
shl
les
arpl
das
mov
xlat
pop
inc
lret
mov
addl
out
sbbb
lcall
call
pop
add
loopne
pcmpeqb
mov
mov
xor
jg
cmp
test
push
fdivrs
mov
lret
pop
pop
xor
sub
sbb
repz
xor
in
cltd
sbb
cmpsl
fistpll
imul
in
ds
leave
lea
mov
sub
sahf
mov
lret
decb
ftst
icebp
fsubl
imul
xorb
cmp
mov
adc
rorl
sahf
faddl
add
inc
loope
fimull
jecxz
xchg
push
sahf
daa
jl
mov
and
sub
jecxz
js
push
adc
mov
mov
mov
inc
lock
jo
mov
add
xorb
divl
add
mov
mov
lret
xchg
mov
mov
push
lret
imul
ljmp
xchg
add
popa
push
push
stos
loop
inc
outsb
scas
mull
sbb
cmpsl
push
loop
push
faddl
or
xor
dec
mov
arpl
pop
in
cltd
sub
inc
mov
minps
out
cmp
fmulp
xor
test
jne
sub
scas
mov
or
dec
fcmove
popa
inc
adc
out
fistpl
jg
push
aaa
cmp
cmpsl
jnp
movsb
xor
push
lock
xchg
mov
mov
push
mov
fisttps
mov
mov
or
subl
ret
ss
dec
negl
xchg
or
mov
lds
test
insl
pop
mov
adc
sub
jecxz
insl
and
lods
and
mov
add
pop
jmp
jo
mov
fidivs
ja
inc
fiaddl
test
or
mov
sbb
rorb
testl
sub
inc
inc
mov
outsb
dec
pop
add
repz
xchg
outsl
add
sbb
mov
push
fnstcw
xor
and
push
inc
loope
outsb
imul
xchg
or
pop
mov
dec
jbe
mov
pop
pop
mov
xor
jge
into
shll
or
sarl
imul
je
xlat
scas
stc
scas
or
in
xchg
sbb
jb
jecxz
jne
xchg
pusha
xchg
fwait
enter
mov
in
mov
gs
cmp
sbb
scas
pop
xchg
xchg
and
int3
mov
jne
mov
icebp
pop
gs
xchg
push
shlb
test
ret
adcb
pop
ret
rcr
in
lds
dec
add
cmp
cld
sub
dec
cmp
mov
add
sbb
and
in
sbb
in
add
mov
xlat
repnz
stc
mov
push
push
jle
addl
orl
pop
xchg
dec
jmp
add
ret
movlhps
adc
dec
pop
mov
or
mov
sbb
movsl
and
stc
mov
in
and
mov
and
xchg
sub
repnz
dec
or
push
mov
insl
pop
nop
outsb
fiaddl
out
xchg
jns
jle
stos
mov
stos
cmc
mov
sub
stc
or
imul
mov
inc
das
mov
loope
je
mov
sbb
sub
push
adc
data16
inc
rcll
addr16
addr16
pop
es
add
push
aam
jg
out
out
cmp
xlat
int3
sbb
push
sbb
addr16
mov
ja
sbb
xorl
lcall
xor
mov
aas
std
das
dec
outsb
lcall
sbb
inc
outsl
mov
jb
shll
addr16
ret
or
mov
jo
cltd
inc
je
xchg
mov
mov
push
cmpb
mov
cmp
imul
decb
mov
clc
mov
mov
mov
mov
in
push
or
outsb
xor
jnp
insl
xchg
jge
lods
mov
dec
bound
imul
rol
data16
xchg
mov
cli
dec
fwait
mov
cmp
sub
or
loop
hlt
lock
test
cmp
pushf
xor
bnd
sbb
lret
icebp
fwait
ja
enter
pop
fidivl
inc
cmp
movsl
cmp
add
jbe
pop
jmp
lock
popf
cli
imul
cmc
inc
mov
es
xchg
loop
repz
xchg
dec
xchg
xor
cltd
or
loop
mov
lahf
fcmovu
fistps
dec
aam
in
movsl
or
adc
imul
xchg
xchg
pop
bound
rorl
stos
push
bnd
pop
cmp
mov
jle
mov
test
sbb
outsb
aad
push
mov
xchg
jp
mov
clc
mov
inc
leave
cs
cltd
jmp
in
pop
cmp
aas
clc
sub
enter
out
dec
pop
cwtl
test
mov
push
das
mov
stos
insb
pop
test
pop
and
push
cli
cli
mov
movd
cmp
pop
mov
shl
inc
ds
pusha
popa
pop
jns
xorb
in
ljmp
test
ss
or
sti
lock
xchg
xchg
ss
mov
sub
fimull
movsl
add
rcl
fdivrs
cltd
imul
or
adc
call
notb
inc
out
scas
mov
insb
fidivrs
stos
mov
mov
sti
popa
fcoms
mov
and
lock
cmc
and
loopne
scas
ja
addr16
rcr
push
push
mov
lret
dec
cwtl
mov
jl
scas
mov
jo
aas
dec
pop
xchg
idiv
sub
pop
daa
mov
ficomps
jg
adc
xor
xor
daa
cmpsb
push
outsl
xchg
inc
mov
call
jae
add
ret
in
repz
out
mov
or
fsub
jp
mov
insb
xorl
std
pop
mov
mov
lcall
stc
pop
fucomip
call
mov
pop
jae
loope
inc
mov
fisttpl
lcall
xchg
in
mov
stos
ficoms
sbb
daa
scas
add
lds
scas
or
fisubrs
xchg
jge
mov
xlat
popa
insl
add
scas
sti
lds
iret
pop
cmp
fmul
inc
jae
mov
imul
das
mov
movsl
mov
pop
push
sbb
or
mov
icebp
insb
xchg
lret
inc
or
sbb
push
xchg
pop
push
or
push
lret
call
addb
mov
enter
scas
out
test
popf
push
mov
or
mov
inc
fs
inc
jmp
inc
in
orb
cmp
fs
fstp
mov
sub
int3
icebp
inc
inc
inc
sbb
cli
in
imul
sbb
lret
xlat
push
lods
sarl
or
mov
sub
cmp
jno
dec
loop
test
arpl
data16
fadds
adc
imul
cmpsb
pop
and
outsl
clc
sbb
mov
mov
mov
ret
test
imul
fstps
or
flds
int3
pusha
loope
out
adc
inc
lcall
subb
xchg
testl
lea
fcoml
or
add
repz
out
popa
outsb
jg
sahf
repz
or
jbe
xchg
hlt
and
cmpsl
lret
adc
mov
mov
iret
sub
adc
notb
mov
aad
insl
loope
out
xchg
ss
shrb
and
xchg
mov
lea
xchg
jmp
pop
movb
mov
loopne
mov
sub
and
inc
inc
cmp
dec
and
mov
and
rcrb
pop
aam
pop
popf
and
or
into
jne
jle
nop
push
pusha
inc
mov
add
xchg
movsb
or
sti
pop
adc
ror
fnsave
leave
je
cmp
xlat
and
or
mov
jo,pt
cmpsl
nop
inc
pop
pop
popf
call
or
dec
scas
test
lret
xor
pop
in
cmpsb
cli
inc
lods
fldcw
jne
int
pushf
rorl
and
mov
call
data16
jle
das
loopne
test
cld
jg
mov
mov
xorl
push
push
mov
cmp
imul
aad
push
inc
cmc
pop
mov
mov
call
xor
loopne
jle
push
add
clc
scas
pop
adc
sahf
jae
in
push
push
pop
add
aaa
inc
roll
sbb
inc
popa
pop
js
jl
andb
mov
cmp
fmull
bound
mov
xchg
lds
je
mov
jno
jo
dec
scas
dec
jae
jmp
pop
pop
sbb
add
pop
out
dec
push
push
lret
loopne
and
movsb
cmpsl
jo
xor
push
insb
cs
dec
inc
insb
aaa
insb
sahf
or
push
inc
adc
mov
mov
pop
push
movsl
jge
mov
or
or
dec
push
ja
jb
jecxz
adc
push
pop
or
call
push
out
repnz
cli
lret
jge
adc
aam
and
pop
adc
mov
inc
pop
inc
aas
mov
lods
adc
sub
fimull
dec
dec
int
in
push
mov
loop
push
xchg
nop
out
jl
gs
adc
adc
rclb
or
cmp
push
mov
cld
js
and
in
gs
lea
dec
or
cmp
mov
jo
sub
pop
mov
xor
mov
or
push
flds
jmp
adc
inc
xchg
mov
insb
and
movsb
xor
dec
loope
mov
jge
sbb
test
and
add
in
xchg
jge
ss
dec
pushf
cmp
stos
notl
into
aaa
and
repnz
in
xchg
cmpsb
mov
adc
add
les
jnp
mov
push
jge
xchg
and
mov
or
push
shll
mov
cmp
push
lea
sahf
out
push
add
cs
jo
cltd
push
nop
lret
dec
cmc
sbb
cmc
clc
sar
test
pop
repnz
inc
shlb
cltd
adc
daa
js
push
mov
xchg
pusha
sub
ja
push
jae
and
push
test
stc
popf
stos
ds
pop
inc
or
pop
dec
sub
in
sub
dec
dec
mov
lret
cmp
inc
add
fisttpl
mov
pop
pop
xchg
or
cwtl
and
mov
ret
mov
daa
cwtl
pop
test
into
insb
dec
jb
in
fs
push
adc
dec
je
ss
mov
lcall
xor
into
jl
mov
out
lret
icebp
les
and
call
ss
and
les
call
inc
xlat
pop
mov
add
xchg
adc
or
or
ss
movsb
pop
lea
sub
in
imul
sub
jne
adc
adc
cli
cld
lods
mov
bound
es
fs
mov
shlb
mov
repz
xor
stc
push
rclb
jg
aad
cltd
mov
ja
mov
mov
int
cmp
into
sbb
orb
pop
or
aad
pop
sub
ss
out
fwait
mov
xchg
xor
loop
pop
fcmove
sbb
insl
imul
cmp
mov
pop
fucomp
jp
popa
fdivs
mov
sub
push
roll
sub
pop
iret
cmpsb
jnp
into
fucom
jp
mov
xor
or
popf
add
cmpsl
inc
fstl
cmp
push
cltd
inc
jle
movsb
sbb
dec
ret
push
mov
lcall
inc
xchg
lock
mov
adc
and
test
shrb
incl
xorb
arpl
mov
cmpsl
shlb
aad
sahf
clc
push
hlt
sub
shr
test
fldt
push
std
sub
repz
jns
xor
movl
inc
add
push
jp
and
inc
inc
lds
adc
push
dec
into
idivl
sub
into
xor
ficomps
imul
test
push
jle
xor
xchg
add
pop
imul
xor
inc
cld
pop
jne
das
lcall
and
dec
xor
jle
fmull
sbb
ds
sti
pop
test
filds
dec
movsl
mov
mov
cmp
or
aam
pop
jnp
enter
pop
imul
std
stos
and
popa
adcb
les
jmp
add
jge
jp
scas
fidivs
sbb
xchg
xchg
clc
mov
das
imul
fsub
sub
test
push
jo
cmpsb
daa
int
jae
push
sbb
add
jmp
iret
cmp
inc
out
pop
test
mov
mov
loopne
xorl
pop
repz
inc
out
pop
shr
pop
ret
ffree
xchg
inc
pusha
das
addb
xor
outsb
and
test
jg
test
int
ret
sbb
fadd
mov
loop
pop
push
das
mov
mov
ret
call
xchg
jp
lock
daa
add
imul
lahf
pop
sub
push
mov
test
stos
lahf
in
pop
add
sub
das
cmp
jno
cli
std
jnp
jae
mov
pop
stc
pop
pop
hlt
shl
out
sbb
push
xbegin
lcall
xchg
fs
inc
pusha
mov
cmp
or
lock
adc
jnp
outsb
xchg
hlt
loopne
adc
sbb
and
aas
xor
divb
mov
test
repnz
hlt
sub
pop
sub
inc
rclb
out
sbb
cli
mov
lods
inc
pop
enter
loop
fsubrl
jg
xorl
data16
je
rcrl
movsl
ret
les
shrb
leave
pop
lds
mov
pushf
inc
pushf
pop
fdivs
jae
scas
jne
les
loopne
and
fwait
jns
popa
jecxz
adc
lcall
test
mov
lods
popf
clc
orb
scas
mov
xchg
pop
in
push
adc
fs
mov
inc
aaa
into
push
sbb
cltd
jb
mov
cmpsl
insb
pop
push
mov
in
out
push
lock
inc
push
adc
cmpsb
das
hlt
dec
addr16
mov
jecxz
dec
cli
mov
popf
test
dec
inc
mov
scas
mov
inc
inc
add
leave
or
in
shrb
shl
je
out
mov
shlb
mov
ja
ljmp
cli
cmpl
adc
movsl
and
or
mov
icebp
jno
dec
push
cld
push
jp
xchg
and
push
je
ds
addr16
inc
push
add
stc
xchg
inc
adc
adc
out
adc
jbe
popa
jnp
loopne
xchg
idivb
fisttpll
out
push
sbb
mov
jno
insl
add
loopne
sbb
xor
add
rorl
and
bound
pop
xor
push
test
movsb
mov
lea
xchg
push
pop
daa
inc
push
adc
and
movsl
bound
sbb
popf
sbb
rcll
cmp
insl
out
jb
inc
jno
stos
dec
sbb
std
sub
mov
int
mov
jo
sbb
ljmp
push
xorb
xchg
cmp
in
idivb
gs
lret
push
push
jae
sub
pop
sarb
jmp
outsl
adc
and
lock
inc
xor
and
enter
cwtl
ret
out
sub
jg
movsb
dec
test
idivb
pusha
daa
jmp
out
mov
pop
xchg
in
sbb
sub
cmp
rcll
xchg
dec
pop
mov
add
out
lods
jp
mov
or
or
sarb
fdivrs
cltd
sbb
pushf
inc
add
enter
lea
std
sub
loopne
add
xor
lea
leave
aad
call
mov
and
pop
icebp
mov
jno
adc
or
int3
sahf
dec
orb
or
add
jecxz
mov
je
mov
adc
mov
pop
sti
clc
xchg
popf
mov
and
fs
inc
jns
sub
adc
adc
loopne
lea
jge
cli
jg
mov
repnz
and
pusha
nop
les
ds
xchg
andl
shrl
adc
stc
sub
push
subb
test
push
add
pop
ds
jecxz
add
iret
addr16
imul
mov
mov
in
lea
pop
das
jmp
lfs
lods
mov
lret
mov
ret
shl
test
xor
mov
sbb
out
sub
repz
and
ljmp
fcomps
fists
lea
dec
rolb
push
stos
in
call
scas
xor
nop
test
mov
clc
in
sub
push
sub
test
setno
xor
fwait
mov
leave
ret
push
or
or
iret
push
nop
loop
push
push
pushf
jo
mov
enter
mov
pop
lcall
fistps
out
fnsave
add
fucomp
fmuls
in
das
bound
cmp
fwait
in
dec
outsb
cli
popl
xchg
xchg
mov
hlt
xor
add
push
mov
pusha
inc
int
sub
hlt
sub
loopne
pop
push
shl
fdivr
lret
xchg
or
pop
jle
sbb
jle
rolb
loope
std
push
jmp
lods
xor
stos
or
pop
cmp
sbb
xchg
mov
mov
sbb
mov
or
call
sti
in
inc
imul
mov
jl
out
jmp
push
enter
push
lahf
dec
mov
or
icebp
mov
dec
subb
dec
push
cmp
mov
fcomps
lea
sar
adc
cwtl
call
and
and
cmp
xchg
mov
xor
mov
jmp
ret
stos
jno
cmp
pop
add
push
loopne
popa
insl
mov
jg
and
mov
inc
inc
cmpsb
mov
stc
aam
repz
xchg
aas
test
or
adc
jne
hlt
fcmovu
jl
enter
mov
jbe
adc
fimull
loope
pop
repnz
cmpsb
pop
adc
pop
ret
push
push
jno
and
cli
shlb
jbe
or
test
mov
xor
fistps
inc
stc
jnp
cmc
sbb
mov
repz
mov
pop
enter
ss
sbb
xor
sub
in
push
mov
sbb
call
mov
xchg
and
loope
jmp
mov
push
inc
xabort
outsb
cmp
jo
and
movsl
xchg
movsb
out
pop
cld
mov
cmp
sti
ljmp
push
out
inc
pusha
fsubl
mov
inc
inc
ss
cmp
nop
and
clc
bound
test
cmc
dec
add
sti
xchg
jl
dec
fsubrp
in
rorl
sti
shl
in
xorb
add
mov
dec
test
ficompl
pushf
data16
dec
ss
adc
xchg
das
and
inc
fldcw
decb
push
mov
aaa
incl
mov
scas
das
fldt
push
out
jecxz
xorb
js
cmp
outsl
push
and
adc
iret
mov
in
sbb
fldt
cltd
pop
mov
pop
out
adc
enter
cltd
in
push
xchg
gs
sbb
and
adc
rcl
es
add
in
in
mov
imul
pop
jl
pop
push
fscale
or
xchg
mov
xor
mov
ret
gs
add
outsl
xlat
mov
pop
mov
notb
gs
orl
dec
rorb
repnz
shrb
cwtl
adc
xlat
add
pop
lods
and
scas
in
sub
pop
dec
and
mov
dec
mov
insb
inc
cmp
sub
out
fs
cli
mov
adc
clc
pop
les
cmpsb
repnz
in
jb
jnp
ljmp
pop
sti
mov
sbb
and
cmp
push
cwtl
into
call
xor
xor
mov
fwait
jecxz
mov
push
mov
jp
in
jae
filds
mov
imul
xchg
loopne
dec
out
adc
jp
push
ljmp
jb
in
xlat
popa
pop
add
xchg
loope
sub
cmp
pop
js
insb
sub
outsl
and
mov
jne
mov
adcb
mov
ffree
aad
push
jecxz
xchg
mov
push
add
or
mov
stc
into
push
sub
adc
dec
cmpsl
pushf
and
repz
ss
in
sbb
sub
movsb
scas
cmpsb
adc
mov
and
test
arpl
and
int
jg
repz
jb
or
fildll
mov
jl
mov
cld
jl
xchg
inc
adc
mov
adc
sarl
and
mov
mov
lcall
xor
repz
popf
xchg
mov
inc
sub
mov
fwait
jecxz
mov
push
scas
pop
pop
psllw
lret
aam
lock
inc
xchg
or
jno
jno
fldt
lcall
stos
lods
je
dec
mov
imul
cwtl
je
inc
push
mov
sub
mov
sbb
movsb
movsl
in
pop
push
imul
dec
inc
repnz
and
sub
sub
add
lods
insb
cmp
sbb
mov
mov
or
es
mov
pop
jmp
popf
push
pop
je,pt
or
and
jns
into
mov
jl
insl
sbb
aaa
sub
jg
xor
mul
mov
out
daa
les
stc
shlb
outsl
mov
push
cmp
add
cltd
aam
or
and
data16
xorl
sub
je
ja
fs
xchg
mov
int
in
cmp
js
movsl
mov
add
js
push
sub
pop
stc
mov
in
cmc
sbb
push
addb
push
inc
pop
sub
shll
fwait
pop
cmpsb
lds
sti
sub
sub
cmp
cmp
imul
mov
push
push
icebp
mov
and
jae
xor
push
sbbb
sub
jmp
cwtl
jp
notl
nop
jl
mov
clc
inc
and
inc
xchg
sub
popa
fsqrt
divb
inc
fdivrs
add
out
fildll
xchg
pop
or
lcall
xchg
cmp
adc
cmp
popl
stos
sti
je
cmpsb
mov
je
push
mull
mov
or
mov
pop
inc
push
stos
fisubs
xor
popf
popa
aam
clc
call
push
adc
xchg
push
in
mov
arpl
shrb
pop
mov
gs
shlb
dec
cld
stos
adc
dec
mov
mov
icebp
cltd
scas
loopne
cmp
shrl
or
gs
shl
outsl
insl
xor
dec
pop
xchg
xor
inc
adc
outsl
push
mov
shll
ljmp
lea
push
in
lock
je
insb
jle
testl
or
mov
xor
shll
mov
adcb
mov
adc
push
dec
aas
pop
jno
mov
xor
xor
sub
lahf
adc
popf
push
mov
mov
repnz
mov
fcoms
hlt
or
sbb
hlt
dec
xchg
mov
xchg
mov
xor
sub
mov
or
inc
stc
mov
sahf
add
pop
aas
mov
sbb
add
mov
mov
scas
call
jae
push
leave
cmp
shl
mov
and
dec
hlt
pop
sub
mov
sbb
and
icebp
repz
push
adc
pop
dec
or
andl
ret
in
jne
jb
divl
jg
mov
pushf
jne
in
sbb
sbbb
sbb
inc
add
or
mov
pushf
aam
sub
pusha
aam
cmp
ret
or
pop
jmp
lds
jo
pusha
cld
insb
xor
sub
xchg
dec
bound
cs
int
xor
jae
dec
mov
jo
in
push
repnz
mov
test
adc
xchg
sbb
sub
fstp
movhps
sub
pop
fs
pop
inc
cwtl
mov
mul
and
and
test
negb
popa
jp
fimuls
xor
dec
out
push
subl
std
inc
cli
ss
iret
in
xchg
jmp
shrl
inc
ljmp
outsb
outsb
mov
int3
shr
pop
scas
lock
jp
push
pop
inc
mov
jp
adc
and
call
dec
or
sbb
add
adc
and
sub
sbb
xchg
pop
xor
das
int3
icebp
mov
clc
pop
xchg
or
mov
or
xor
dec
popa
xchg
add
loopne
mov
pop
inc
push
pop
movsl
mov
shl
lock
sbb
les
pop
hlt
ficoml
push
cmpsl
xor
mov
mov
mov
or
je
mov
out
lcall
scas
in
jae
mov
or
dec
and
arpl
sbb
js
pop
lcall
add
mov
insb
in
rcrl
jne
addr16
inc
mov
xchg
sbbl
in
pop
out
push
fistpll
add
mov
push
sahf
jg
int
and
inc
idivl
dec
inc
lock
popa
test
and
test
ss
leave
pop
popf
jno
rorb
mov
lds
mov
or
xchg
jmp
dec
xchg
testb
or
pusha
lcall
rclb
scas
jecxz
jmp
jne
scas
into
add
lahf
add
sub
lahf
cmc
cmp
test
clc
pop
xchg
xchg
scas
imul
jne
mov
pusha
add
arpl
lsl
pushf
das
mov
leave
pop
adc
jp
je
sub
sub
mov
es
jmp
pop
cli
in
and
adcb
popf
mov
cmc
pop
ss
lret
jmp
ds
sbb
xchg
push
add
jl
addr16
mov
add
jecxz
push
mov
push
jp
xchg
sbb
bound
lret
push
or
cmc
and
loopne
jb
sub
push
xchg
enter
sahf
push
push
ja
inc
in
pop
lcall
pop
enter
mov
fwait
xchg
cmp
mov
popf
fst
insl
ret
rcrl
or
in
outsl
xor
js
pop
mov
cltd
in
xor
roll
movsb
xchg
or
add
dec
mov
stos
adc
in
and
mov
outsl
int
addr16
inc
mov
dec
xlat
pop
and
outsl
sub
mov
cmc
jmp
push
jno
xchg
pop
add
mov
pop
jno
aad
fsubrs
mov
aas
lods
xor
aaa
push
sbbb
in
sbb
mov
hlt
pop
push
xor
scas
stos
ljmp
sub
adcb
pop
inc
into
mov
test
outsb
mov
inc
in
push
xchg
jo
mov
insl
jo
mov
xchg
add
inc
or
fwait
andb
push
insl
outsb
loop
xorl
out
push
mov
arpl
mov
mov
mov
arpl
add
mov
imul
xor
daa
jbe
mov
and
dec
out
push
out
pop
push
jp
mov
test
mov
jbe
cmp
jmp
xlat
xor
push
or
movsb
mov
sbb
mov
lahf
jmp
mov
jns
rcl
arpl
adc
adc
rorb
jmp
mov
aas
les
mov
adc
dec
cmp
push
loope
dec
out
pop
xor
and
inc
out
or
jbe
enter
mov
cmp
mov
and
sbb
pusha
lea
mov
rolb
mov
sbb
cmp
aad
pop
mov
jmp
mov
adc
andb
shlb
cmpsl
sti
push
push
push
in
data16
and
fistl
dec
push
repz
mov
lea
sub
mov
and
mov
sbb
or
inc
adc
je
movsb
mov
test
xchg
outsl
mov
sbb
or
mov
push
inc
lock
rcll
xor
or
nop
mov
mov
jmp
int
xor
adc
inc
push
filds
and
hlt
out
rcrb
lcall
test
cwtl
testl
cmp
daa
sub
sbb
push
mov
sub
in
das
adcl
cmp
mov
cli
es
mov
jmp
jns
cmpsb
int3
adcl
xchg
lahf
pushf
or
rolb
daa
popf
stos
outsl
mov
lahf
mov
sbb
jmp
and
insl
mov
jl
flds
mov
inc
sahf
test
and
mov
stos
mull
sub
fsts
xor
loopne
xchg
leave
repz
cmp
jno
cmpsl
pop
push
mov
popf
and
test
inc
and
mov
mov
xor
xchg
inc
aas
mov
jp
jecxz
jnp
gs
dec
rcll
call
mov
insb
mov
mov
mov
aas
aad
add
inc
aam
and
cltd
shrl
xor
fs
pop
scas
xchg
lods
cld
add
in
cmp
mov
cltd
outsl
gs
push
cltd
fsub
fmull
in
mov
ret
xor
dec
push
add
sbb
cmp
push
idiv
jne
adc
leave
lcall
imul
mov
inc
and
es
cld
dec
aas
sbb
daa
out
das
pop
pushf
ds
fisttps
cmp
push
push
iret
pop
enter
stc
cmc
or
cmp
shl
push
dec
sub
stc
pop
jo
jmp
popa
lods
hlt
sub
cmpsl
mov
xchg
sub
ret
jo
push
mov
mov
cltd
je
cmp
and
loope
jecxz
adc
movsb
xchg
xor
mov
fcomip
jno,pn
cmp
sub
arpl
fists
xchg
mov
xor
inc
imul
sbb
loopne
cmpsl
dec
ficompl
ret
xchg
mov
xor
out
dec
into
mov
ja
push
rcll
out
in
mov
inc
cli
mov
add
cwtl
adc
cmp
mov
fs
adc
mov
jle
push
aam
ret
es
xor
loop
and
shr
dec
std
inc
jne
mov
pop
push
imul
adc
xchg
cmpsl
lret
lret
sbb
dec
cld
mov
aaa
inc
mov
jb
int3
fstl
aas
insb
ficomps
cmp
mov
and
sahf
cmp
mov
inc
iret
int3
aas
xor
add
add
repz
jno
adc
adc
and
jle
int3
hlt
sbb
pop
pop
scas
test
push
ret
jg
int
cmp
out
sub
mov
xor
lahf
pusha
dec
cmp
sahf
sub
sub
call
pop
testb
aad
andl
and
cld
and
push
mov
cmc
pop
ret
sbb
divl
push
mov
jmp
xlat
cmp
lahf
leave
fmull
mov
mov
jp
jle
push
mov
icebp
outsb
shlb
addl
lret
cmp
jne
jg
mov
mov
mov
add
xor
popa
jmp
repz
not
cld
testb
test
sahf
dec
lahf
outsb
outsb
test
or
jecxz
insl
test
and
or
inc
dec
sbb
add
inc
xchg
push
mov
sub
jo
bound
mov
out
outsb
mov
pop
fwait
aaa
outsl
mov
push
cltd
dec
inc
dec
fnstenv
int
ja
cmpb
mov
mov
movsb
push
jnp
and
insl
dec
mov
push
in
push
sub
jns
movsb
and
push
nop
mov
add
pop
sti
push
push
adc
in
scas
clc
mov
xchg
aas
adc
add
push
cmpsb
sub
xorb
ja
mov
andl
out
leave
std
cs
cwtl
std
outsl
cmp
sarb
lods
sub
test
jg
fwait
addr16
mov
mov
es
cli
cmp
xor
in
inc
adc
aas
sub
jnp
xchg
pushf
mov
xor
repnz
out
pushf
and
adc
pop
jno
lcall
popw
inc
rcrb
outsl
stos
in
mov
jle
lret
or
sub
mov
test
outsl
pop
call
mov
outsb
in
sti
jl
jno
jmp
adc
xchg
into
and
cmp
test
jp
push
add
pop
hlt
push
fcomi
xchg
and
out
clc
and
cmc
mov
sbb
push
sbb
iret
xor
or
shrl
adc
outsl
insl
xchg
aam
xlat
xchg
in
lods
mov
jnp
adc
and
sbb
pushf
rorl
push
push
jecxz
out
jl
add
xchg
mov
cmpsb
inc
push
jge
or
fistpll
jl
jb
fadd
pusha
inc
enter
push
mov
das
scas
push
cmpsl
pop
iret
add
mov
push
enter
xchg
test
cs
sti
push
push
mov
adcl
gs
pop
call
in
mov
inc
jno
loope
adc
and
push
add
sub
call
lcall
push
xor
push
dec
fwait
out
test
jle
dec
xchg
aas
lret
jns
imul
out
mov
adc
mov
xor
lahf
xor
mov
cmp
mov
lcall
add
lcall
fdivrl
mov
pusha
add
inc
pop
cwtl
je
xchg
mov
pop
ja
push
push
pop
stc
sti
fstpl
sahf
mov
jne
fcmove
lods
mov
cmpsb
test
sbb
mov
jp
cmpsl
fisttps
dec
in
fs
pop
push
fbld
fistpll
xor
sti
and
dec
call
sbb
mov
out
lcall
mov
mov
dec
fsubl
inc
hlt
in
dec
mov
je
pop
fcoml
fmul
pushf
rorb
mov
bound
repz
mov
icebp
xor
xchg
subb
mov
lahf
cwtl
mov
pop
fistpl
pop
pushf
cmpl
sub
stc
or
rcrl
push
sbb
jp
std
push
outsb
pop
arpl
dec
shlb
out
ret
push
fcompl
xor
stos
bound
adc
mul
dec
dec
es
push
hlt
pop
inc
add
push
and
in
and
aaa
jle
pop
shlb
mov
lret
iret
mov
xor
dec
ficoms
std
mov
stc
popl
mov
pop
rcrb
pop
aaa
mov
xor
jle
xor
int3
cmp
sahf
stos
xchg
pop
dec
push
movsl
jp
mov
inc
dec
dec
in
xchg
mov
mov
out
push
popa
pop
loop
add
stos
ds
ret
daa
jmp
imul
int3
lahf
mov
adc
outsl
bound
xor
lahf
dec
xchg
lods
in
push
negl
mov
or
mov
sub
add
pop
andb
push
pop
fmull
xor
lods
rorb
pop
mov
mov
lock
shlb
xor
in
dec
lret
fwait
in
inc
xchg
and
push
sbb
xchg
push
add
mov
sub
scas
out
mov
mov
dec
lea
jnp
addr16
add
push
inc
add
or
push
std
test
ja
sbb
or
lcall
nop
ret
pop
jmp
add
mov
inc
cld
cmp
shrb
adc
push
sti
pop
cwtl
in
outsl
mov
jle
add
mov
adc
sub
test
aaa
sbb
xchg
adc
or
mov
and
sub
xchg
push
movsb
jecxz
rcrb
in
outsl
cmp
cmpsb
mov
jmp
xor
jnp
jae
sub
adc
popf
pushf
cli
add
mov
fdivl
sub
inc
mov
inc
mov
cmp
shrl
insb
shr
jns
cmp
nop
and
jle
leave
mov
jno
stos
daa
xchg
cmpsl
dec
rcrl
stos
and
and
in
push
sub
or
scas
pcmpeqw
pop
inc
dec
pop
sbb
or
gs
ljmp
sbb
dec
ja
mov
xchg
outsl
mov
fwait
or
lea
and
imul
jg
or
shlb
adc
inc
ljmp
enter
stos
enter
sub
dec
push
in
popa
add
xor
xor
stos
ret
fsubp
jae
jge
jns
inc
xchg
push
scas
lods
ja
or
out
dec
js
and
xor
mov
or
sbbb
ljmp
pop
add
fcoml
xchg
mov
adc
das
mov
xchg
fnstenv
ret
lock
loopne
cli
and
loop
fucomip
sarl
push
adc
mov
xchg
push
adc
add
push
es
mov
lret
rol
push
sbb
cmpsb
aad
stos
xchg
mov
in
jl
lret
sub
push
ret
cmpsl
pop
pop
fs
mov
dec
pop
mov
sub
jg
cmpsb
sbb
bnd
in
xchg
pop
push
mov
jne
insl
nop
js
rcll
sti
mov
mov
mov
jp
xor
pushf
jecxz
mov
add
pop
xchg
std
fdivl
or
cmp
xchg
jb
outsl
jecxz
inc
xor
out
movsb
pop
movaps
ficoms
dec
pushf
lods
addr16
pop
and
es
jmp
add
and
int3
sub
lret
js
data16
imul
mov
int3
mov
cwtl
cmp
mov
xchg
cmp
push
adc
pop
pop
dec
xor
into
ds
mov
testl
sub
loopne
cmp
sub
sub
dec
jge
stos
dec
in
js
mov
dec
ret
fbstp
xor
push
jmp
pusha
mov
or
test
sarb
clc
cmp
scas
mov
addl
jno
push
add
in
rcrb
mov
pop
add
jecxz
cs
shrb
in
imul
test
aas
and
add
pop
inc
pop
xor
loop
and
sub
fstl
leave
dec
and
jl
add
or
push
mov
ljmp
add
add
int
test
loop
xchg
iret
jno
sti
jno
fldl
cld
js
leave
cmp
dec
lcall
ret
fsubrs
fwait
orl
mov
ret
dec
adcb
daa
mov
sbb
adc
or
call
sub
or
inc
das
je
adc
out
inc
lret
imul
pusha
dec
in
sbb
nop
into
in
push
xchg
jo
insl
iret
and
xchg
stos
test
insl
push
xor
cwtl
iret
xchg
xor
and
bound
dec
outsl
lock
dec
mov
out
pop
les
out
fnsave
decl
fwait
pop
and
iret
cmp
push
dec
in
nopl
xchg
pop
cmpsl
mov
mov
mov
test
mov
or
sti
js
mov
mov
dec
cmpsl
push
test
sbb
mov
jmp
ljmp
mov
jae
aas
cmp
insl
fs
ja
jb
sbb
cwtl
pop
cmp
fs
scas
mov
mov
pushf
xchg
sbbl
test
lods
leave
mov
push
push
mov
ret
fistl
fnsave
in
mov
nop
mov
sbb
dec
inc
int3
insb
jecxz
mov
mov
push
cwtl
test
adc
insb
inc
or
out
cmp
lock
adc
sub
pop
sti
push
adc
data16
aaa
in
pop
ds
adc
lods
push
inc
sbbb
ds
in
out
lcall
xchg
or
fisubl
mov
int
cwtl
rcpps
sbb
push
imul
sub
mov
jl
xchg
jns
jb
incl
or
sub
jmp
jecxz
mov
jo
push
push
sti
idivb
sti
idivb
xlat
into
aad
sub
cmp
or
lock
and
sti
shl
pushf
fnsave
jo
adc
mov
dec
push
dec
stos
lcall
push
out
in
scas
sbb
movsl
pop
enter
or
jbe
pop
nop
pushf
and
inc
rolb
sbb
sbb
je
mov
pop
cld
jge
outsl
xchg
f2xm1
jbe
push
mov
jecxz,pt
dec
fs
xor
xor
xchg
sti
and
shlb
repnz
out
divb
and
lock
addr16
test
xchg
dec
icebp
outsl
fstp
or
lahf
imul
pushf
sbb
xor
out
pop
mov
mov
xchg
test
lock
or
mov
pop
out
add
sub
out
add
lds
inc
sbb
mov
inc
out
jp
pushf
int
lock
pop
pop
ss
jnp
pop
fs
fildll
in
inc
out
dec
or
sar
stc
lock
or
lret
scas
pushf
mov
mov
mov
rorb
mov
test
iret
xor
sub
shl
or
pop
cmpb
aaa
xor
lods
cltd
xor
and
and
cmp
and
dec
mov
inc
xchg
mov
sbb
subl
or
jl
ljmp
pop
fsts
das
addr16
sti
jmp
insl
lea
ljmp
jae
fsubl
adc
call
push
xchg
lds
scas
sbb
lods
jnp
lret
sahf
jl
xor
adc
jno
notb
xor
add
mov
mov
insb
in
fsubrs
mov
repz
sbb
call
fs
sbb
pop
fisubrs
cltd
insl
rorl
dec
xchg
mov
or
jnp
sub
jnp
int
pop
in
cmp
sti
adcb
mov
andb
js
leave
sbb
xchg
xchg
adc
imul
inc
and
mov
mov
cmp
cld
clc
mov
iret
popf
call
and
lods
std
in
mov
test
div
das
mov
addr16
mov
icebp
int
stos
jg
mov
fsts
jo
lahf
xchg
rolb
addb
push
xor
fiadds
cmp
jb
sbb
xchg
adc
add
and
add
sub
mov
jmp
lds
push
jb
cs
jmp
divl
cmp
jge
test
xchg
mov
dec
in
stc
and
into
addr16
imul
movsl
dec
adc
shrl
mov
sbbb
rorb
and
sub
outsl
jnp
push
dec
sub
cmp
ja
xor
cmp
inc
shlb
and
jae
add
cmp
cmp
xchg
test
leave
cli
popa
cmc
int
loop
and
fmulp
jg
cmp
bnd
fisttpll
or
or
push
and
inc
or
dec
int3
inc
mov
sbb
lods
in
mov
jne
lahf
mov
and
mov
adc
push
and
in
cld
jns
pushf
and
addb
jecxz
lods
xchg
xor
loope
pop
outsb
fnstsw
or
push
js
mov
in
ja
or
mov
mov
pop
xchg
pop
sub
cmp
cld
stos
inc
nop
inc
rcr
cmpb
lods
mov
clc
jno
or
or
fnstenv
lret
das
jge
gs
inc
loop
lea
adc
lea
inc
sbb
daa
bound
enter
pushf
mov
popf
and
mov
bnd
mov
or
push
aam
xor
cmpb
push
inc
or
outsl
adc
addr16
xorb
cmp
icebp
lcall
push
inc
add
push
pop
loop
mov
call
and
std
les
scas
adc
addr16
test
out
ficoml
dec
repz
xchg
sarb
cmpsl
outsl
stos
cmc
xchg
xor
lret
jns
mov
sub
pop
jnp
rol
cli
lret
out
dec
fsub
shlb
cmp
stos
xchg
add
or
mov
call
in
inc
mov
add
int
mov
push
lcall
js
mull
push
aas
cmpsl
scas
cmc
enter
xor
iret
xchg
jo
xor
jg
mov
pop
xchg
inc
mov
cs
in
sbb
mov
push
xchg
int
xor
pop
out
inc
adc
cmpsl
jnp
adc
inc
jmp
jg
addl
push
push
arpl
popf
cld
lock
test
fsubs
aam
pop
dec
or
add
pop
fdiv
dec
out
shll
sbb
xor
dec
cs
sub
lods
stos
je
pusha
scas
jb
mov
mov
stos
cmpsl
jae
push
cmp
xchg
loope
fdivrl
nop
or
arpl
push
stos
push
dec
stc
jmp
ds
add
mov
or
xchg
pusha
int
push
fnsave
cld
pop
xor
pop
pop
arpl
stc
ds
fwait
jo
fiaddl
mov
pop
xchg
sub
mov
sub
iret
cmpsl
cwtl
cmpsb
mov
movsl
xor
xchg
mov
hlt
mov
lret
add
clc
sti
dec
xchg
in
dec
cmp
clc
push
dec
lahf
inc
cmp
clc
imul
lock
push
mov
add
push
jmp
cwtl
mov
repz
jmp
decl
lods
lahf
cmp
push
repnz
xchg
test
mov
mov
out
cli
nop
dec
std
dec
popf
fistpl
icebp
xchg
sarb
xlat
and
push
lahf
fbld
lods
pop
iret
pop
incl
sub
fwait
push
loope
and
std
push
pop
fs
jo
xor
cmp
dec
push
outsb
imul
adc
subl
mov
je
jmp
arpl
insb
xor
popa
or
loopne
mov
push
ss
push
xchg
int3
adc
loope
inc
mov
sbb
add
cmp
rolb
sbb
mov
push
gs
imul
leave
push
jbe
or
cmp
mov
imul
scas
ja
mov
movsb
xchg
bnd
loopne
cmp
adc
jecxz
add
aaa
and
pop
dec
jp
iret
lahf
adc
push
mov
sbb
and
add
int3
pop
pushf
mov
out
push
data16
mov
pop
jne
pop
lods
mov
add
fistl
rcrb
pop
xor
rcll
scas
ret
jecxz
bound
mov
cld
sti
mov
pop
cmc
fistps
xchg
cltd
fmuls
jae
aad
dec
pusha
orb
or
xor
mov
mov
ror
adc
sbb
in
loope
and
cmc
mov
clts
xchg
aas
inc
mov
cmp
in
cmp
repnz
sbb
xlat
push
jl
ret
sbb
cmp
lea
xchg
imul
cmp
sbb
mov
sub
xchg
jbe
xor
jae
pushf
gs
lahf
adc
nop
dec
iret
push
arpl
mov
rol
dec
add
adc
push
pop
and
roll
pop
pop
push
jge
jmp
fimull
pop
nop
push
pushf
jmp
jae
cld
add
pop
mov
cmp
sub
jp
dec
mov
stos
mov
add
pop
and
notl
or
or
mov
fisubs
mov
push
adc
xchg
inc
push
int
add
fldenv
std
ja
js
mov
push
and
dec
cmc
pop
rorl
mov
pop
ror
add
int3
or
cmpsb
xchg
jo
inc
mov
mov
dec
ror
lret
enter
clc
pop
pushf
push
jae
ficoml
and
aas
in
jmp
sbb
xchg
cld
icebp
addr16
push
pop
sbb
and
mov
inc
sbb
sub
jg
sbb
cmp
je
rorl
sbb
fsubs
das
test
je
dec
orl
cmc
and
dec
filds
aad
sahf
movsl
push
cld
cmp
mov
push
dec
and
aam
cli
test
push
push
stc
fistl
cmp
lods
jecxz
imul
popa
mov
ja
add
shll
lock
fwait
adc
cmp
jno
js
xchg
scas
out
cmp
cli
mov
pop
xchg
je
in
loopne
loopne
xchg
mov
test
and
test
addl
mov
test
mov
enter
aaa
clc
mov
cmp
mov
add
mov
rorl
and
aaa
test
fldt
inc
aas
fsqrt
sub
fldenv
dec
test
icebp
cmpsb
stos
xabort
inc
out
dec
pop
xchg
pop
addb
movsl
cmp
mov
shll
cmpsl
dec
pop
mov
lahf
clc
sbb
lds
fbld
push
dec
mov
stc
ja
or
in
test
adc
mov
sub
bound
aaa
stos
aad
sub
ja
push
push
mov
inc
jmp
pop
js
movsl
adc
fnsave
push
out
dec
xor
stos
insl
outsb
and
into
sbb
adc
dec
subb
addr16
add
in
adc
testl
jl
add
lods
out
les
cmpsl
int3
jns
push
jecxz
leave
push
mov
je
int3
inc
lock
pop
cmpsl
mov
mov
inc
rcl
or
push
or
pusha
leave
leave
daa
pop
push
add
std
pushf
push
fdivrl
xchg
add
lcall
out
mov
xor
sub
imul
rcrl
loop
jo
sub
call
pop
cmpb
push
cwtl
xchg
jbe
mov
sub
sbb
mulps
adc
insl
xchg
adcb
pushf
jl
mov
sub
cmpsb
cwtl
adc
or
push
dec
imul
pop
push
add
dec
out
pop
int
clc
imul
or
push
xor
into
adc
les
xorl
jnp
xor
push
xchg
int
loope
mov
lahf
sti
popa
js
mov
inc
in
push
adc
notb
xor
cwtl
leave
jne
adcb
fimuls
fidivl
rorl
repnz
scas
scas
in
mov
das
loope
fisubl
nop
xor
or
mov
lret
sar
cmpsb
add
cmp
inc
shll
fisttpll
jb
rol
jno
pop
lret
aad
jmp
push
in
fiaddl
lods
loope
call
jo
push
test
subl
aaa
in
cli
sbb
and
shlb
ljmp
fwait
mov
mov
xor
inc
xchg
dec
mov
push
or
xor
arpl
ljmp
inc
gs
inc
mov
repz
xor
mov
dec
jno
push
sub
mov
enter
sbb
mov
sbb
test
scas
xor
and
mov
shl
xor
adc
scas
imul
arpl
dec
pushf
mov
int
sub
cltd
xor
sbbl
fdivp
or
scas
sub
mov
in
mov
popa
push
lahf
sbb
or
icebp
jnp
into
imul
lcall
dec
ja
ret
push
xlat
push
pusha
jle
jnp
xchg
mov
popf
sub
jg
rol
js
movsl
sub
adc
and
mov
stos
inc
lock
dec
xor
stos
dec
rcl
mov
idivl
sbb
pop
popf
scas
call
mov
mov
hlt
mov
aas
ror
xchg
mov
dec
pop
push
or
mov
cld
xchg
pop
xor
mov
dec
iret
pusha
jns
outsb
or
or
fimull
ljmp
mov
mov
jnp
push
push
push
adc
jno
pushf
push
orb
btc
jecxz
xorb
jl
icebp
and
xchg
out
xchg
add
push
jne
movsl
sbb
aaa
imul
push
icebp
ret
sub
xor
mov
mov
insl
pop
dec
aad
and
mov
pop
scas
cs
int
or
xchg
call
jg
stos
xor
leave
stc
sti
popa
sbb
mov
cltd
mov
mov
xor
and
std
jg
out
add
sbb
inc
shll
clc
or
mov
lcall
int3
push
mov
test
xor
sub
cmp
cmp
inc
cld
and
pop
jnp
lods
add
aaa
pop
sub
add
divb
repnz
jo
and
sub
cld
aas
xchg
push
jle
hlt
push
mov
mov
mov
fst
mov
push
xchg
clc
dec
and
pop
aaa
mov
nop
add
push
cmp
push
sub
adc
imul
jmp
xor
movsl
fdivs
shrb
xor
out
popa
mov
xchg
repz
cltd
push
pop
std
shl
add
pop
xor
cmpsl
jo
shlb
rorb
stos
cmp
divl
les
shll
sbb
inc
imul
test
adc
je
shlb
lret
push
mov
xchg
jns
sahf
mov
mov
inc
mov
inc
mov
sbb
adc
in
in
stos
inc
jno
out
lcall
out
rorb
shl
xor
mov
cmp
xchg
in
xchg
mov
mov
fstl
out
mov
mov
scas
inc
enter
xchg
xor
or
xchg
cmpsl
decb
call
outsl
mov
jge
adc
fdivrl
jle
dec
fwait
add
sarl
insl
xlat
aam
and
xlat
adc
sub
push
out
adc
jle
xchg
pop
cwtl
fstps
inc
movb
mov
adc
sbb
jl
lds
xchg
stc
mov
int
sbb
jnp
lock
push
pop
jle,pt
lock
addr16
pop
xchg
mov
pop
xchg
jmp
xchg
lahf
inc
xchg
out
or
lods
ds
sub
mov
dec
mov
sub
inc
mov
pushf
sbb
or
arpl
insb
rclb
sub
xchg
leavew
pop
or
out
jo
adc
jmp
adc
or
push
ja
loope
es
cli
or
lret
rorl
test
xchg
fdiv
int3
ss
mov
sbb
lods
adcl
imul
mov
jl
xchg
lret
stos
add
bound
jecxz
mov
xor
dec
xchg
aam
mov
dec
pop
idivl
pop
das
aaa
cmc
xor
dec
ljmp
inc
jb
sti
orb
dec
xor
mov
xor
leave
pop
push
push
dec
lods
sbb
movsl
adc
fs
in
rcll
dec
jmp
lds
adc
xchg
mov
scas
cmp
mov
adc
loop
pop
fldt
jge
pop
add
rclb
pop
and
adc
mov
addl
adc
leave
sbb
std
mov
cwtl
push
sti
std
xchg
push
sahf
mov
ficompl
add
xor
aam
cmpsb
movsb
orb
test
adc
fs
movsl
jae
aas
jl,pt
lcall
mov
mov
add
pop
in
push
cwtl
lahf
sub
or
cmp
into
scas
dec
and
add
mov
push
cmp
sbb
popa
add
addb
push
aam
pop
or
xchg
dec
jne
int
cmc
pop
cmpsb
and
mov
popf
dec
mov
int3
imul
dec
sub
and
rcrb
or
movsl
pop
xor
sahf
sbb
mov
mov
mov
out
popa
jp
in
cmc
jb
std
adc
movsb
inc
shlb
mov
dec
inc
pusha
mov
fprem
add
stos
mov
or
out
dec
pop
jb
call
hlt
xchg
sarl
push
mov
inc
add
add
pop
mov
cmc
and
cmpsb
cmp
fstps
cmp
adc
mov
imul
scas
scas
cmp
test
insb
je
xor
xor
gs
je
push
scas
inc
mov
xor
inc
js
adc
loop
xchg
mov
xchg
hlt
mov
xor
ret
mov
jge
das
pop
mov
in
pop
adc
or
rcrl
fwait
cwtl
sbb
or
xor
loop
ret
pop
jnp
out
ret
push
icebp
ljmp
or
int
lret
stos
mov
out
enter
adc
xchg
lods
xchg
xor
ss
pop
int
sub
inc
icebp
jbe
dec
adc
arpl
popa
fistps
mov
jmp
sub
in
stos
roll
loope
aam
outsl
dec
cmpsl
push
pop
or
lcall
aad
inc
out
and
push
popa
mov
sarb
jmp
dec
adc
jo
shrb
adc
jmp
insb
xor
fnstenv
sub
sub
or
inc
sub
pusha
std
daa
inc
shll
fstl
cltd
es
jno
pusha
adc
pop
push
mov
mov
ficomps
adc
sub
loop
push
sub
daa
out
xchg
int3
fstpl
repnz
jo
adc
inc
inc
inc
dec
imul
sbb
adc
xchg
cmpsb
shrb
mov
jb
mov
mov
mov
cmpsl
mov
lods
xchg
int
or
subl
adc
add
or
jge
pop
cmp
sub
imul
or
mov
push
push
sbb
cltd
cs
mov
sahf
adc
mov
push
pop
cltd
add
loope
mov
aam
into
mov
xor
xor
xchg
popf
out
pop
outsl
imulb
jl
stos
aas
cld
inc
sbb
jns
ret
add
enter
push
lahf
iret
loop
mov
outsl
rclb
add
xor
cwtl
jo
adc
fnstenv
jmp
mov
in
push
pop
jle
stos
push
idivb
xchg
cmpsl
adc
in
add
out
cwtl
xorl
jnp
imul
loope
nop
outsl
sbb
dec
arpl
gs
push
cmp
dec
sti
cmp
xchg
xor
int3
lods
mov
xor
rorb
outsb
add
jb
ret
stos
and
sbb
adc
sti
pop
mov
jle
aaa
or
mov
pushf
iret
inc
call
andb
test
push
sbb
ja
and
mov
mov
jnp
cmp
les
inc
add
subb
arpl
nop
adc
nop
mov
aas
rclb
push
in
mov
mov
push
mov
push
test
jg
and
jle
push
mov
or
jae
pop
push
lods
loop
out
ja
fidivs
lods
pop
addr16
stc
pop
lock
xchg
les
int
int
jl
orb
loopne
jne
adc
mov
lods
movsl
test
dec
jecxz
movsl
subb
pushw
adc
and
xor
lds
or
mov
dec
sbb
lds
jle
stos
xchg
ret
repz
pusha
repnz
fisubl
ret
cmp
sarb
pop
xor
aam
pop
mov
addr16
js
test
sbbb
cli
ja
mov
cld
mov
mov
lock
in
mov
jbe,pt
out
movsb
into
loope
fwait
xchg
sbb
and
ja
mov
xor
test
hlt
jp
idivl
insb
adcb
rcr
adc
push
mov
push
movsb
loope
jl
mov
mov
xchg
xor
add
ds
jge
add
clc
inc
clc
scas
int
xor
push
mov
popf
or
mov
pushf
jmp
dec
push
push
loopne
imul
cli
pminsw
mov
hlt
rcll
dec
hlt
in
jae
or
add
test
adcb
push
mov
incb
pop
icebp
adc
sbb
lahf
jne
fistl
jge
test
dec
pushf
mov
js
andb
mov
jg
pop
rcr
testl
push
add
mov
mov
cmp
sbb
ret
stos
into
lock
cmp
arpl
mov
rcr
fildll
jecxz
add
movsl
mov
cmp
sub
shll
std
xchg
arpl
pop
mov
pop
xchg
cmp
cltd
xchg
xchg
mov
push
inc
and
push
sub
xchg
pusha
std
movsl
push
pop
cwtl
mov
inc
xor
sub
jb
dec
xchg
pop
bound
xor
or
mov
cmp
sbb
sub
cmpsb
gs
and
icebp
std
add
add
jne
cmp
mov
adcl
xchg
daa
xchg
pop
inc
sub
fdivrs
ret
ret
mov
adc
fdivrs
inc
enter
mov
xchg
ret
shll
or
xchg
lahf
jge
xchg
xorl
sub
lods
sahf
mov
pop
or
mov
or
jnp
sti
out
xchg
xlat
pop
xchg
out
stos
ret
ret
mov
in
cld
jno
dec
cmpb
xor
cmp
and
sub
shl
push
mov
inc
jb
out
repz
repnz
scas
cwtl
jnp
call
jecxz
mov
cltd
push
or
jmp
push
lods
mov
repz
inc
add
out
sti
movb
repz
push
mov
lcall
and
rcl
xor
leave
jne
frstor
arpl
fstps
sahf
loope
jle
shlb
xor
cmp
test
push
sbbb
aas
ret
test
mov
sbbl
dec
xchg
xor
nop
aam
push
inc
cmc
data16
xchg
adc
aam
lret
pop
enter
enter
jl
jge
add
cmpsb
pop
xchg
fsubr
sub
inc
add
repnz
ds
cmpsb
adc
leave
adc
fistl
in
negb
dec
leave
psubd
shlb
mov
ja
add
mov
kxorb
jae
addr16
cmp
mov
sbb
push
xor
out
jbe
inc
or
mov
in
or
push
sub
cmp
adc
fmuls
xchg
mov
enter
xchg
ficompl
push
adc
lea
inc
rorl
cli
test
lods
inc
out
xor
push
sub
mov
mov
sbb
repz
pushf
and
inc
mov
jg
pop
scas
sarl
popf
or
pop
inc
imul
xchg
imul
or
daa
mov
adc
pop
iret
imul
or
add
mov
adc
mov
out
aad
jb
mov
dec
add
dec
movsl
dec
scas
subl
mov
mov
push
lret
jnp
jmp
dec
xlat
andl
sub
iret
sbb
shll
xrelease
lods
sbb
int3
out
pop
jg
push
adc
cld
jne
in
jns
push
pop
adc
popf
cld
outsb
jecxz
leave
and
std
arpl
jne
mov
inc
cld
xchg
cltd
jae
divb
fmuls
and
in
cmp
decl
dec
out
add
orb
jno
or
cld
sbb
ja
lea
xchg
push
ja
push
inc
pusha
mov
imul
aam
xor
sar
jae
and
mov
negl
lret
outsl
test
testl
nop
imul
xchg
daa
iret
daa
jno
sbb
test
icebp
loope
scas
push
mov
mov
mov
pop
cmp
inc
jle
push
dec
xchg
jne
pop
nop
cmpb
and
dec
sub
inc
lods
lcall
cmp
add
aam
lock
dec
mov
add
jge
dec
mov
push
sub
gs
mov
aam
push
pop
lods
xor
dec
jecxz
mov
xchg
and
bound
out
add
sbb
fldt
xor
cmp
icebp
insb
frstor
mov
lcall
cmp
das
push
xor
xchg
dec
in
inc
cmc
pushf
lcall
sub
lock
xor
xchg
xchg
jno
fdivrs
hlt
cmc
sti
hlt
fmul
mov
scas
out
jle
xchg
test
shll
xor
xchg
pop
sbb
int3
cmp
scas
sar
fxch
fmulp
sbb
out
repnz
pushf
sbb
or
ret
inc
pop
mov
test
push
mov
add
inc
fsubrl
jl
mov
mov
test
sub
mov
out
shlb
dec
adc
loop
in
xor
adc
sbb
sub
push
inc
or
hlt
jmp
inc
sarl
loope
cmp
es
test
shl
pop
push
imul
dec
cmpsl
outsb
xlat
in
prefetch
sub
popa
adc
lcall
jmp
pop
aad
ret
test
mov
adc
test
aaa
mov
ret
jbe
mov
addl
out
into
jb
xchg
not
loope
or
clc
push
or
pop
clc
ja
nop
inc
add
adc
mov
je
mov
jns
loope
add
mov
pop
insl
mov
adc
mov
out
push
pushf
test
lods
adc
xor
cli
ss
lea
mov
lcall
dec
jecxz
rolb
pusha
inc
cmp
dec
push
xor
fcoms
sbb
xor
in
jbe
cli
cmpsl
dec
mull
mov
xchg
xor
push
adc
mov
sub
mov
ror
loop
mov
mov
iret
push
movsb
inc
insb
cwtl
lods
or
cli
cmpsb
mov
pop
repnz
insl
jno
pop
stc
in
and
testl
lret
jmp
cmc
mov
dec
mov
push
dec
mov
lock
les
aas
inc
cld
push
sub
sbb
enter
mov
int
popf
sub
cmc
lea
pushf
idivl
repz
dec
cld
cmp
test
test
popa
push
insb
pop
xchg
sbb
and
add
ret
mov
sbb
clc
mov
inc
xchg
lds
xor
out
shll
inc
faddl
cwtl
adc
sbb
lret
sahf
in
insl
ret
les
mov
mov
enter
out
jmp
push
pop
or
mov
in
scas
sarl
mov
sub
mov
dec
inc
xor
mov
cmp
ljmp
jnp
mov
gs
std
subl
int3
mov
sub
add
xchg
mov
or
jp
les
lock
cmp
loop
out
iret
mov
or
add
mov
jl
add
xor
push
cld
inc
inc
out
push
push
jge
pop
mov
loop
jp
inc
and
inc
shlb
xorb
rcrl
ja
pop
pop
test
je
jo
out
insb
neg
nop
sbb
mov
fmul
inc
inc
adc
dec
mov
rorl
fisttpll
movsb
add
jmp
cmpsl
pusha
and
leave
fsubs
movsb
and
xor
movsb
fsts
xor
sub
jnp
cmc
add
mov
sub
out
add
aad
sbb
scas
jle
cmp
fnstsw
adc
repz
data16
test
fwait
stc
lods
movl
ljmp
jl
xchg
mov
dec
adc
cmc
cli
jmp
jge
pushf
out
cs
shll
jbe
addr16
jno
xchg
scas
jmp
fidivrl
cmp
mov
insl
int
std
scas
add
jl
cmp
jnp
loope
xchg
cmp
adc
lock
int
xchg
sub
pop
push
ljmp
leave
nop
mov
or
movsl
inc
cld
and
jmp
or
add
fsub
cmp
xchg
xchg
inc
lock
xchg
push
scas
cmp
jae
arpl
mov
lods
cmpsb
cltd
lcall
jecxz
ljmp
movsb
sub
aaa
jmp
push
xchg
sahf
jge
addr16
mov
je
and
cmp
mov
popf
adc
xor
das
cmpsl
fnstenv
decb
stos
mov
xchg
pop
mov
lret
cld
mov
sbb
inc
jbe
xchg
shll
pop
or
testb
test
jo
pop
push
xor
cmp
fwait
push
pushf
aas
aam
or
in
mov
out
test
sti
mov
and
cmp
mov
addl
adc
or
outsb
je
xor
ss
in
ss
mov
and
ja
push
fs
adc
push
pop
inc
aad
in
or
sbb
rcll
shlb
jmp
dec
int
mov
out
ret
xchg
xor
outsl
pop
lds
inc
jns
adc
add
add
imul
adc
mov
movsl
in
imul
fisubl
xor
sub
inc
mov
ja
sbb
dec
xor
jne
ds
sbb
lcall
enter
mov
dec
mov
test
bound
arpl
shl
jae
and
sarl
jle
mov
mov
test
mov
pop
insb
loope
push
mov
cmp
xor
call
pop
std
add
mov
xlat
push
es
insl
lret
aas
cmp
push
cmpsl
outsb
ret
mov
sub
dec
xor
lea
mov
repz
add
cli
or
push
rclb
ja
push
movb
push
sub
jle
fsubl
js
jmp
xor
push
xchg
xorl
lahf
fdecstp
out
mov
fwait
aad
mov
das
and
mov
mov
mov
jae
jp
jns
xchg
enter
imulb
inc
mov
fisttps
int3
popa
ss
jle
hlt
mov
jmp
add
test
cmpsb
lret
mov
out
xchg
testl
call
in
pop
adc
loope
mov
push
or
cmp
test
sahf
add
cmp
or
xchg
sub
insb
pop
lods
call
cmp
mov
jnp
loope
fcoms
mov
stos
movsl
imul
mov
push
lret
and
ljmp
mov
negl
aas
push
out
outsb
cmpsb
pop
sbb
sbb
pop
pop
cli
ss
mov
mov
and
aaa
add
mov
pop
lea
inc
aam
dec
cmpsb
pop
mov
jle
xchg
sub
cld
push
movsb
mov
inc
sub
ljmp
sub
and
sahf
xchg
mov
lahf
or
push
arpl
lds
incb
xor
cltd
xchg
push
arpl
inc
sti
xor
or
or
in
popf
nop
jns
in
repz
add
xor
and
in
cmpsb
inc
cltd
push
frstor
mov
jecxz
mov
fstl
stos
ljmp
test
fcmove
gs
sahf
out
jo
mov
ret
test
repnz
push
add
ss
mov
dec
and
xor
sbb
push
dec
mov
jp
imul
mov
adc
leave
in
ljmp
shr
mov
sbbb
push
fdivrl
or
inc
mov
jbe
or
pushf
dec
cmp
mov
out
lcall
enter
addr16
sub
dec
ror
mov
movsl
hlt
rolb
mov
jbe
fsubs
xor
pop
jno
cltd
xchg
jg
adc
mov
xor
outsb
push
lea
hlt
inc
pop
aam
push
out
sbb
call
dec
adcl
jp
or
ret
xor
scas
psrlq
xchg
insl
outsl
sub
and
jbe
bound
dec
cmp
add
mov
cmp
and
aad
push
push
dec
mov
ret
push
cvtps2pi
push
mov
push
in
and
mov
cmpsb
push
xchg
ficoms
pop
enter
int3
cld
sbb
inc
mov
jp
sarl
fdivl
and
scas
aas
push
push
dec
dec
mov
scas
fsubs
cmp
out
push
jns
jmp
jo
mov
push
outsb
xor
xchg
or
add
xchg
out
mov
mov
icebp
fs
roll
fcomps
add
pop
popl
es
shll
mov
sti
test
jmp
mov
fdivrs
jns
stc
nop
popf
cmpsl
mov
add
fiaddl
lods
out
pop
in
pop
fistl
jns
xchg
adc
pop
lret
imul
outsb
insl
xor
and
insb
inc
loop
mov
lret
xor
ficomps
xor
test
test
pushl
push
dec
into
pop
nop
add
fsub
adc
out
inc
pop
mov
mov
rolb
xchg
and
cld
loop
mov
ret
and
sbb
decb
out
or
lcall
mov
test
jecxz
into
ss
dec
and
out
and
fisubrl
and
shl
xchg
and
mov
jl
or
mov
mov
push
cmpsl
imul
fwait
repz
testl
mov
andb
cmp
jmp
mov
loop
sub
jb
push
popf
aad
pusha
pop
cmc
fildl
inc
push
pop
sub
xchg
sbb
loopne
into
pop
lods
leave
push
ret
mov
std
cmpb
repz
sbb
ja
dec
icebp
mov
aam
arpl
out
ss
sbb
cmp
jne
xchg
aam
and
mov
dec
xchg
lock
cmp
test
test
loopne
jbe
cmp
das
call
jnp
aad
cmpsb
pop
push
sub
jg
add
in
fnsave
xor
cmp
xchg
jno
imul
outsl
cltd
mov
sub
push
push
shl
pushf
test
insb
mov
dec
loopne
es
fdecstp
in
dec
mov
mov
addr16
mov
add
cmp
dec
ret
inc
mov
aad
dec
js
jmp
pop
lock
cmpsl
xchg
jo
dec
fdivl
mov
fldt
roll
jge
mov
loope
pop
dec
push
in
inc
loop
xor
mov
sahf
xchg
push
cmp
inc
movsb
sbb
enter
xor
push
je
mov
and
xchg
ret
xor
mov
xorl
inc
mov
fsts
sbb
js
mov
cmp
jp
cmp
push
repnz
cltd
js
ret
and
dec
imul
lods
je
fidivs
jno
mov
cld
push
or
inc
mov
enter
jecxz
jae
mul
inc
ja
fdivs
xor
cmc
inc
enter
rcrl
cmp
insb
lods
push
mov
jns
das
add
cmp
pusha
mov
mov
push
push
dec
in
movsl
cmc
xchg
clc
xchg
pop
add
test
xchg
add
loope
test
fwait
movsl
inc
cmp
adc
fbstp
insl
adc
pushf
adc
push
push
or
cmc
lret
pop
test
xor
xor
or
sbb
mull
es
insl
imul
jno
loope
jnp
mov
cmp
clc
jmp
add
adc
xor
xchg
push
lods
je
cmp
div
mov
jo
xchg
movsb
out
repz
and
push
add
mov
push
cs
push
jg
imul
std
imul
xchg
push
xor
pop
test
lods
shl
fmul
mov
mov
sub
cmp
cmp
jae
ds
xor
mov
xor
ljmp
mov
movsl
clc
xchg
add
sbb
test
xchg
mov
leave
insb
ljmp
dec
dec
or
sub
ret
dec
push
out
pop
and
xchg
adc
mov
jns
clc
or
mov
dec
dec
or
add
in
fildl
jae
imulb
jno
inc
dec
in
cmpsl
movl
into
xchg
stc
sbb
pop
scas
out
mov
stos
add
mov
xor
dec
in
es
pop
push
and
mov
movsl
adc
xor
jo
push
mov
xchg
push
loop
push
fsts
fsubr
aas
pop
sub
push
lock
loopne
add
rorb
mov
push
cmp
or
mov
inc
dec
add
adc
and
inc
fwait
jmp
jae
mov
fsubrl
cli
gs
add
or
mov
jg
mov
movsl
ljmp
int3
testl
or
jmp
ret
cmpsl
pop
jle
mov
leave
call
cmp
int3
fwait
mov
cmp
mull
push
arpl
mov
xchg
inc
fidivrl
cmpsl
lock
dec
push
cltd
fs
fistpl
enter
inc
jmp
cld
inc
jmp
cmpsb
pop
mov
xchg
cmc
out
xlat
push
mov
rol
dec
sub
outsb
insl
inc
int
stos
mov
cmp
mov
cmpsb
addr16
dec
or
pop
rcl
cld
push
clc
jge
in
hlt
mov
fsubs
pop
out
fdivrs
stc
loope
fsts
arpl
push
inc
mov
aaa
sub
mov
out
lahf
ss
adc
sti
mov
pop
cwtl
cmpsb
xlat
or
addr16
jecxz
and
test
push
aam
add
lods
scas
jmp
scas
ja
push
call
fadd
cmp
xor
movsl
mov
or
lcall
mov
lock
jne
mov
xor
pusha
mov
sahf
fs
jno
push
cmp
mov
and
aaa
icebp
push
pop
cld
in
push
pop
bound
sbb
or
ljmpw
mov
pop
push
out
xchg
mov
hlt
inc
xor
cmp
int3
mov
or
dec
mov
mov
int
popa
xchg
movb
aaa
fsts
mov
rcl
fisttpl
xchg
lods
or
mov
je
inc
add
and
mov
sub
jge
fstl
xchg
sbb
ret
sahf
mov
out
mov
iret
xchg
jmp
fcmovu
pushl
push
sbb
xchg
cmc
lods
inc
jg
dec
cmp
imul
loope
imul
mov
push
lret
push
pushf
fidivs
push
lret
jmp
jbe
push
mov
insb
loop
or
stos
jno
add
imull
cmp
mov
cmp
jne
mov
and
test
xchg
ja
flds
jne
into
jl
pop
xchg
cmpb
int
mov
lcall
outsb
adc
and
dec
lcall
lret
mov
std
pop
and
cwtl
xor
mov
mov
in
data16
mov
loope
and
ja
mov
jecxz
daa
mov
add
add
jecxz
dec
push
and
dec
inc
popa
mov
stos
pop
cwtl
imul
mov
pop
mov
into
pop
test
jno
outsl
inc
or
pusha
fisubs
pop
int3
adc
push
scas
cwtl
fwait
cmpsl
inc
mov
ret
stos
xchg
ja
stos
pop
int
icebp
outsl
out
inc
adc
jmp
scas
or
jp
pop
dec
sub
cmpsl
test
fsubs
inc
adc
dec
mov
fs
cmp
stos
jl
int3
mov
aaa
sbb
cwtl
daa
add
sbb
dec
and
mov
sub
jle
cmp
testl
andl
or
jne
aaa
lods
or
test
xor
or
xchg
call
out
cli
cmpsb
push
xor
fwait
pop
das
adc
sbb
stos
ja
jne
inc
fidivs
jbe
repnz
loope
sub
roll
push
into
idivb
pop
mov
inc
xchg
or
outsl
in
xor
adc
jo
jecxz
lods
subb
mov
jg
std
mov
int
lds
out
nop
movsb
sbbb
int
cmp
add
aam
imul
out
xchg
or
xor
out
fs
jecxz
ficoml
add
popf
add
je
movsb
cli
inc
mov
loop
mov
adc
mov
movb
cltd
sub
shlb
pop
cmp
addr16
mov
and
sbb
addr16
cmp
push
sub
enter
movsl
inc
std
loop
adc
xchg
sti
dec
test
shr
mov
inc
mov
pop
mov
adc
js
in
push
loope
lods
push
xor
jmp
negb
std
adc
add
icebp
sub
aaa
push
sbb
push
aad
pop
push
xor
jg
pop
gs
lods
and
addr16
jecxz
iret
inc
stc
lea
add
xlat
popf
imul
xchg
push
push
out
test
out
sub
pop
xchg
xorl
out
lods
sbb
lods
pop
xor
adc
jns
dec
inc
inc
nop
push
loopne
inc
xchg
jle,pn
dec
xchg
fwait
add
lret
push
in
jl
sub
dec
pop
in
sbb
or
lahf
out
into
cs
mov
or
sti
jmp
or
enter
enter
xor
flds
mov
add
xchg
fiadds
inc
outsl
daa
mov
sub
pushf
sbb
or
out
lcall
test
mov
mov
push
test
jne
cmp
aas
lock
and
push
data16
mov
rcrl
jo
filds
out
or
js
mov
mov
negb
repz
cmp
shr
add
into
ljmp
and
pusha
mov
xchg
mov
pop
les
call
mov
xorl
sub
daa
data16
jecxz
lods
bound
dec
into
or
in
lods
test
xchg
shll
fs
test
mov
xchg
lret
jne
pop
jo
mov
xchg
and
push
out
inc
lcall
stos
jmp
in
iret
faddp
popf
adc
inc
push
sub
pop
test
fstpt
aam
mov
faddl
test
test
inc
add
rol
mov
mov
outsb
cmc
out
insl
in
mov
xchg
pop
mov
repnz
cmp
mov
mov
jno
dec
stos
aas
ret
cltd
js
cmp
ret
cmpsl
adc
ja
pop
push
shrb
call
insb
shr
xchg
arpl
push
mov
gs
jge
in
pop
mov
jecxz
inc
push
fbstp
test
es
scas
das
in
into
cmp
xor
xchg
mov
sub
sar
push
iret
nop
pop
mov
addr16
inc
loop
add
fwait
ja,pt
xorb
imul
dec
mov
push
aaa
mov
push
das
sbb
in
aas
fmull
pop
mov
fistl
pop
stos
jnp
mov
mov
fimuls
insb
push
mov
cmc
xor
jge
mov
mov
inc
sbbl
sbb
imulb
fnsave
fwait
xchg
ds
out
lahf
sbb
lds
sbb
rolb
mov
aas
nop
popa
cmp
push
sbbb
xor
mov
out
faddl
notl
mov
adc
or
cmp
or
idivl
and
jo
dec
in
mov
jge
dec
pop
inc
js
xor
loopne
lds
aad
test
dec
jo
sbb
ds
xchg
sbb
jecxz
loop
lret
fistpl
fstl
jb
mov
daa
mov
in
adc
sub
inc
push
cld
mov
xor
daa
xlat
sub
stos
stc
out
inc
in
push
xor
mov
pop
pop
xchg
fdivl
mov
push
insb
test
cmp
inc
dec
jg
aam
cmc
xchg
add
bswap
sub
pop
xor
inc
sub
lcall
rorl
cmp
mov
scas
and
insl
or
add
cmc
loop
mov
xor
repnz
xor
out
sbb
dec
je
and
xchg
inc
fdivr
cmp
std
mov
inc
in
push
or
mov
into
xchg
shlb
lret
insb
stc
inc
stc
add
aad
jb
push
pop
inc
mov
fcmovnb
pop
push
enter
arpl
fmull
and
ret
dec
fsubrl
enter
in
js
mov
aad
repnz
mov
cmp
scas
add
jmp
pop
aas
mov
lods
mov
and
repnz
or
xchg
mov
lahf
mov
add
das
adc
inc
sbb
scas
lods
or
pop
mov
cmp
add
or
or
jb
sbb
rclb
std
mov
cmpb
leave
jge
pop
cltd
cmp
lods
mov
in
fs
pop
inc
xor
xchg
stc
push
sub
mov
mov
popf
inc
adc
mov
sub
aam
pop
jae
lds
mov
lock
addl
lcall
xchg
test
pop
or
in
out
testl
cwtl
add
scas
push
insb
stc
cmp
aaa
cltd
and
push
cmp
gs
movsb
fwait
addr16
push
repnz
in
mov
mov
ret
loop
and
mov
idivl
push
sbb
outsb
mov
cmp
addr16
push
imul
push
mov
addr16
push
dec
out
pop
mov
push
repz
push
jns
push
dec
xor
dec
out
mov
inc
adc
movsb
das
stos
sub
mov
fstps
test
mov
pushf
faddl
cltd
push
mov
pusha
sub
push
push
xlat
pop
mov
mulb
cmp
stos
jl
mov
js
leave
xor
andnps
lahf
xor
je
cmp
dec
mov
es
jbe
mov
push
inc
out
and
pop
push
xchg
mov
cs
cmp
daa
stos
add
orb
xchg
dec
cli
mov
rol
mov
jo
jge
aas
mov
pop
push
aaa
cmpsl
and
testl
cmc
dec
cmpsb
sahf
pop
scas
fisubrs
dec
shrb
mov
movb
cmp
and
dec
sub
jns
shlb
popa
lods
mov
xchg
push
mov
cmp
xchg
movsb
adc
out
pop
movsb
or
push
lock
loope
adc
orb
push
cli
mov
add
sub
jg
ljmp
jne
fisttpl
xor
mov
xlat
adcb
es
ficomps
outsb
mov
ljmp
xchg
xchg
sub
inc
sbb
or
repnz
push
ret
lods
popa
jnp
negb
xor
xor
mov
jae
mov
scas
or
std
sbb
test
pop
jmp
pop
movsl
lcall
cmp
mov
sub
mov
int
cli
out
stos
push
or
mov
aad
inc
subb
xor
out
gs
lock
xchg
lahf
repnz
orb
lcall
add
shlb
mov
sbb
mov
inc
or
scas
sub
mov
jno
mov
and
pushf
fldcw
insl
dec
cltd
dec
mov
inc
jmp
pop
lds
add
inc
jns
dec
pop
jge
jecxz
push
repz
hlt
shlb
xor
jbe
es
pushf
repz
cmpsb
push
xorb
sbb
push
jle
outsl
mov
mov
test
add
notb
stc
ret
inc
or
push
jge
test
enter
imul
out
inc
add
rcl
mov
push
js
cld
lods
sbb
push
mov
xchg
cld
jno
pop
mov
loopne
add
clc
in
dec
pop
mov
mov
pop
test
mov
lret
push
pop
popa
lret
movsb
mov
mov
cltd
dec
jmp
insb
jle
push
mov
sub
push
inc
and
mov
dec
gs
psllq
cmp
mov
lods
mov
cmp
push
sbbb
cli
cmc
in
subl
cmpsl
lcall
lret
inc
sbb
and
mov
cmpsl
pop
dec
cmpl
cmp
cmp
mov
xor
mov
pshufw
xlat
test
add
mov
repnz
sahf
adc
in
pop
rolb
out
sbb
inc
mov
mov
popa
popf
sub
mov
dec
ds
xchg
jne
les
imul
shll
xchg
lea
push
cli
sbb
mov
adc
dec
inc
imul
or
xchg
ret
lods
shl
ja
jmp
add
pop
das
add
add
in
inc
pop
lcall
xlat
sbb
sbbb
or
lods
cltd
dec
mul
dec
cmp
xchg
cmp
fwait
out
call
insl
imul
add
pop
mov
and
cs
movsl
xlat
scas
push
popa
stc
gs
aaa
sbb
cmp
push
dec
mov
fadds
push
mulb
mov
mov
jne
jno
sbb
jne
jno
out
dec
jg
jecxz
repz
xor
fprem1
sahf
aaa
push
pop
inc
xchg
insl
cli
rclb
fists
jno
roll
iret
lret
jns
int
or
cld
out
inc
sub
ja
ljmp
insl
pushf
loop
out
insl
sbbb
cli
add
jbe
outsb
mov
jnp
mov
testl
fwait
jb
mov
and
cmc
scas
in
imul
xor
gs
push
scas
and
push
mov
or
pop
cmp
adc
movsb
xor
pop
imul
mov
adc
mov
int
fdivl
sbb
and
ljmp
sub
push
div
cmp
nop
xchg
cwtl
orl
clc
inc
mov
mov
lea
mov
mov
shl
jmp
xchg
cld
mov
jmp
ds
add
lods
adc
xchg
in
cmp
dec
add
adc
mov
out
add
testb
fidivrs
cmpsl
mov
xor
out
rcrb
mov
jp
les
pop
dec
out
les
lods
rolb
std
cmpsb
mov
mov
mov
dec
pushf
pop
stos
ss
mov
mov
add
mov
out
xor
xor
mov
aam
cmpsl
cmp
add
lea
clc
add
xchg
jbe
pop
sub
inc
mov
cmp
sbb
jle
push
adc
inc
mov
fistps
mov
push
leave
adc
dec
orl
sub
cmp
outsb
iret
push
push
mov
jb
cmp
or
and
movsl
cli
push
pop
pop
pop
pop
inc
call
frstor
push
sub
xchg
aam
lea
and
addr16
fstpt
rcr
and
cmpl
xchg
call
sub
push
pop
jp
jae
sbb
fildl
dec
fnsave
mov
mov
pop
add
dec
dec
xlat
adc
stos
jo
rcrl
stc
fadds
mov
pop
or
movsl
lods
xor
cmp
enter
xchg
cmpsl
jl
scas
out
xor
jmp
iret
addr16
sub
mov
push
jb
loop
xchg
push
mov
and
hlt
mov
sbb
aas
in
mov
loopne
pop
test
cmpsl
pop
ret
int
ret
syscall
jno
push
and
mov
pop
mov
outsl
mov
divb
shlb
cmp
dec
dec
out
mov
or
loope
in
fwait
xchg
push
mov
sbb
jo
ljmp
push
mov
jb
push
cld
fbstp
loopne
out
notl
add
out
popf
xor
mull
xchg
sbb
adc
pop
dec
xchg
faddl
insl
repnz
pop
jb
and
mov
xchg
push
xchg
ss
sbb
lret
mov
test
cmp
cs
inc
adc
mov
or
xlat
mov
loope
aam
stos
mov
ljmp
arpl
aad
cmc
push
cmc
arpl
out
ds
adc
mov
sub
cmp
cmp
movsl
mov
dec
sbb
mov
mov
lahf
lods
jle
es
mov
std
push
neg
cmp
daa
inc
push
and
xor
sbb
clc
jg
out
mov
or
jl
lods
mov
sub
addr16
pop
xchg
ficoms
mov
in
in
jb
mov
leave
std
loope
lds
mov
fistpl
lds
inc
je,pn
pop
pushf
ss
scas
daa
xor
mov
sub
jl
ret
or
fs
mov
ss
or
push
cwtl
xlat
sbb
pop
mov
jns
sub
lcall
push
vphaddwq
mov
pop
xchg
inc
incl
lret
add
pop
adc
sbb
std
cwtl
cwtl
pop
cmp
push
in
andl
dec
push
rol
push
loopne
cmp
adc
jb
stos
inc
or
mov
pop
fcoms
pop
mov
fbld
imul
push
pop
testb
sub
fldcw
ret
mov
out
imul
or
adc
cwtl
dec
xor
pusha
push
clc
sub
mov
pop
and
mov
add
mov
mov
jb
test
mov
jbe
mov
mov
leave
int
mov
pop
in
mov
pop
adc
call
xchg
mov
bound
lret
jnp
and
imul
sbb
jecxz
test
nopl
mov
std
hlt
hlt
dec
add
popf
add
cld
xchg
add
mov
loopne
mov
arpl
inc
xchg
push
xchg
hlt
sub
inc
and
mov
mov
push
pop
dec
bound
push
imul
cmp
inc
outsl
sbb
int
xchg
mov
and
push
dec
sbb
call
cmp
popa
cmp
mov
aam
and
cmpsb
rolb
push
and
hlt
enter
jg
adc
and
mov
mov
adc
cwtl
cmp
push
xor
repz
add
push
pop
icebp
insl
sub
lahf
push
inc
mov
push
out
and
cli
es
inc
pop
mov
inc
mov
xor
xor
add
or
leave
je
add
cli
mov
jge
xchg
inc
ret
xchg
mov
in
xchg
or
in
push
in
jp
or
sub
jmp
jae
sub
std
sub
pop
cmp
mov
cmp
fs
test
pop
or
push
jbe
sbb
push
jns
mov
outsb
ret
addr16
or
shlb
lcall
jo
iret
cmp
stc
iret
addr16
in
jno
mov
fwait
cltd
sbb
scas
mov
xor
psrlw
jno
adc
pop
out
or
int3
jg
adc
pop
ja
sahf
outsb
cmp
jge
lock
arpl
inc
xchg
cmp
test
lock
mov
lods
jns
idivl
push
pop
insb
test
push
mov
sub
mov
cmc
lock
xchg
dec
lea
lods
pcmpeqw
pop
pop
sub
mov
pop
imul
xchg
xchg
outsl
mov
inc
dec
cld
push
mov
out
repz
mov
adc
ja
out
outsl
arpl
adc
fucomi
stc
sahf
fwait
lret
or
lahf
rolb
or
fdivp
fsts
jl
fidivl
sbb
pop
mov
cli
out
dec
hlt
inc
sub
sub
cli
out
add
movl
inc
dec
fidivrl
push
xchg
cli
jg
inc
ret
test
cmpsb
fmuls
fs
lock
lds
sarl
pop
and
mov
ret
mov
push
xchg
jl,pn
out
push
jb
mov
pop
xchg
scas
pop
cmp
or
loop
mov
arpl
inc
outsb
rorw
jp
into
mov
mov
push
fisubrl
cmp
jo
mov
pop
daa
mov
pop
insb
jns
pop
sbb
int
aam
popf
add
push
rolb
adc
mov
jecxz
xchg
add
push
ror
jl
repz
je
mov
stc
dec
inc
cli
lret
rorl
or
sti
pushf
mov
and
movswl
push
or
xchg
xor
push
hlt
sbb
xor
sub
lds
sub
push
lods
cmp
iret
sbbb
mov
stos
mov
sbb
lea
add
pop
adc
es
dec
sarl
and
outsl
inc
xor
cmp
stos
fisubl
adc
mov
fcomps
inc
nop
lods
cmp
out
xchg
fidivrs
repnz
xchg
sub
leave
mov
das
enter
mov
loop
adc
mov
adc
lcall
inc
out
pop
sub
mov
xorl
mov
idivb
in
aad
mov
add
mov
mov
inc
and
push
icebp
xor
repz
mov
or
pop
pop
inc
mov
scas
jecxz
jo
mov
adc
into
jp
imul
fucomip
and
pop
dec
repnz
inc
outsb
int
inc
jae
mov
push
stos
inc
sarl
push
in
stc
loopne
jo
mov
sbb
push
fwait
call
add
pop
fwait
xchg
pop
pop
cmc
inc
mov
and
cmp
mov
cmc
stos
mov
mov
push
pop
ds
push
or
add
sub
ret
or
pop
sub
lret
jo
add
pop
ds
lds
ret
rclb
adc
rclb
and
inc
pop
jmp
pop
or
jecxz
pushf
xchg
inc
popf
divb
mov
jecxz
loopne
test
cmpsb
sti
inc
cmp
pop
subl
mov
push
ss
xchg
rorl
add
andb
adc
push
rcll
push
dec
pop
cld
lods
lret
xchg
je
les
aas
test
cwtl
mov
ret
fnstsw
and
mov
ffree
sub
sbb
out
sbb
ljmp
jnp
adc
hlt
mov
or
dec
shll
data16
int
out
inc
outsb
fmul
test
adcb
testb
xchg
xor
sbb
jmp
push
or
pop
sbb
and
sub
cmpb
sbb
addr16
out
cmpsl
jnp
mull
and
xor
mov
addb
push
ljmp
pop
or
push
xchg
pslld
clc
xor
lret
cmp
hlt
lret
and
adc
xor
jbe
add
data16
jmp
fnstsw
mov
ret
jno
add
push
xorb
push
mov
popa
jmp
mov
popa
andb
negl
ljmp
and
pop
scas
and
sbb
mov
hlt
dec
call
dec
mov
or
or
pop
orl
rcll
jg
aad
cwtl
ds
mov
jp
or
daa
push
insl
loopne
clc
pop
ret
push
das
fwait
sub
sub
jp
xchg
fcomps
push
sub
cwtl
pusha
mov
pusha
cs
push
inc
data16
stos
push
leave
loope
and
inc
or
jmp
lds
ficoms
imul
and
push
gs
mov
or
or
cmp
cmc
out
mov
cmc
add
cmpsb
push
scas
stos
outsl
minps
mov
loope
pop
sahf
inc
bound
loopne
sti
arpl
cltd
sub
leave
sub
movb
rorl
aad
imul
mov
insl
std
push
push
dec
push
push
into
push
je
mov
adc
cmp
pop
xor
dec
push
out
fnsave
out
or
scas
mov
jge
jge
fisubrs
outsb
xor
and
sbb
inc
add
sub
test
and
mov
jb
movsb
js
and
pop
bound
xor
and
xchg
and
sub
or
sub
lret
dec
pop
cmp
mov
lods
outsb
call
and
rorb
lret
mov
les
dec
and
xchg
call
jbe
fists
xor
fs
jmpw
mov
push
stos
imul
lcall
push
mov
mov
imul
cmp
rcr
fdivr
popf
xchg
aad
cmp
push
pop
out
std
sbb
in
sahf
xor
sarl
inc
push
rolb
sub
adc
js
fsubp
push
mov
xor
movl
cmp
mov
aaa
sbbb
mov
test
push
lret
sbb
cwtl
mov
stc
cwtl
leave
dec
mov
mov
pop
out
mov
cmp
pushf
jno
adc
imul
fiaddl
scas
aaa
stc
jecxz
xor
imul
pop
out
push
sbb
int
aas
test
inc
ret
push
adc
or
pop
push
stc
out
and
sbb
sub
push
pusha
or
mov
dec
push
push
bound
jl
test
mov
int
repnz
mov
movsl
fnstcw
jp
push
std
jno
jns
idivl
add
or
lcall
jbe
std
pusha
fcmovbe
jns
dec
pop
jecxz
imul
test
lods
rorl
fadd
jb
add
rorb
inc
mov
mov
mov
ftst
dec
or
lcall
inc
xor
cmp
xlat
mov
insb
inc
cmp
in
pop
lock
daa
mov
sub
out
cmp
lret
mov
inc
fs
dec
test
cmp
dec
cmp
xchg
enter
dec
in
out
push
mov
push
fisubrl
jns
fwait
xchg
enter
adcb
das
mov
xchg
jb
into
jne
in
push
lods
mov
add
movswl
shl
mov
lods
test
add
or
pop
jmp
stos
int3
xor
cmp
sub
xor
mov
into
cmp
ljmp
sbb
nop
pushf
xchg
dec
es
sbb
jg
and
push
scas
push
hlt
ss
mov
mov
movsb
sbb
shl
imul
popf
sbb
xor
pop
lret
sbb
sbb
lret
mov
ss
sub
add
inc
test
or
xor
mov
xchg
cmp
cwtl
dec
push
stos
nop
and
inc
and
sbb
adc
not
sbb
out
mov
icebp
cmp
xlat
xchg
popf
bound
call
cmp
xchg
inc
ja
dec
ds
fmull
adc
in
aaa
sub
rcr
lret
sub
inc
insb
clc
inc
and
ds
les
sbb
cmp
bound
adc
fildl
lret
sbb
outsl
push
xchg
cmpb
mov
mov
jns
ja
xchg
cli
test
xchg
mov
adc
arpl
or
xchg
xor
inc
outsb
fmull
lods
or
mov
mov
mov
jns
jmp
outsb
adc
fidivs
xor
outsb
jbe
add
inc
negb
xor
xor
loop
loope
in
in
mov
dec
mov
mov
stos
aam
or
xchg
xor
sub
aad
xor
pop
mov
ljmp
inc
daa
pop
push
or
or
push
into
mov
push
mov
and
lahf
mov
mov
addl
std
lcall
aam
sbb
sbb
outsb
pop
fsubrs
inc
xor
stos
andb
adc
xor
inc
test
loopne
pop
shrb
jne
sbb
xor
int
stc
movb
xor
orb
test
jb
je
inc
sub
mov
sahf
std
xchg
rol
sub
jmp
push
cmc
enter
insl
pop
scas
adc
adc
jb
jmp
pop
icebp
sbb
fs
push
push
mov
and
cld
jmp
push
add
mov
pusha
cld
iret
pop
mov
pop
mov
test
fs
out
jno
xlat
push
mov
fidivl
int3
js
xor
hlt
das
jnp
iret
pop
test
sbb
cmpsl
or
frndint
stos
iret
out
leave
cmc
xor
aaa
stos
call
adc
add
mov
mov
mov
test
sbb
stc
pushf
dec
inc
sub
popf
and
jno
ds
outsb
ja
push
inc
add
popf
add
repnz
push
push
jecxz
jae
mov
rolb
sbb
fadd
ret
in
cmp
inc
add
jg
cmp
das
push
pop
loop
jo
inc
aas
movsl
fs
icebp
jb
or
xchg
lods
aaa
cmp
push
sbb
xor
cld
mov
subb
and
push
in
test
sub
adc
cmpb
dec
test
int
pop
xchg
sahf
jecxz
dec
icebp
sub
mov
dec
shll
lcall
jnp
sbb
add
cs
jle
out
cmp
lahf
inc
xchg
dec
mov
addr16
push
rolb
and
add
js
std
int
dec
pop
mov
inc
dec
call
popa
jl
test
movsl
mov
pop
mov
les
out
stos
mov
lcall
pop
call
xor
pushf
es
sub
hlt
lods
rol
adc
mov
or
jne
test
or
mov
repnz
pop
mov
cmp
inc
mov
loopne
mov
icebp
ds
push
jl
cmp
je
ljmp
ss
sbb
jle
sbb
pop
clc
sbb
inc
jmp
inc
fdivr
cmp
mov
fcmovnbe
lds
test
outsl
cmpsl
inc
fcmove
stc
imul
pop
fsub
sti
add
loope
mov
bound
or
mov
fsubp
push
ss
push
mov
movsl
adc
jp
leave
movsb
mov
inc
mov
dec
ret
mov
cmp
and
in
inc
jmp
clc
cmp
xor
inc
idiv
inc
adc
push
jns
push
dec
insl
push
rolb
lea
fmulp
sbb
aam
mov
jg
cmpsb
lods
sub
out
and
stc
shll
jge
das
and
cmp
inc
add
into
inc
aam
mov
nop
jecxz
adc
xor
sub
pop
std
in
xchg
push
mov
imul
sub
xor
shll
adc
push
pop
aam
scas
test
testb
xor
daa
dec
scas
dec
sub
fs
les
xchg
jb
mov
jle
dec
ljmp
inc
cmp
cli
sbb
stc
pop
std
enter
fsubrl
xor
add
jae
sahf
repnz
pop
int3
jbe
pop
int
imul
ss
daa
mov
scas
cmp
mov
mov
inc
inc
jg
push
pop
jl
sbb
xchg
stc
push
dec
mov
imul
shll
in
jmp
adc
test
int3
pushf
arpl
ja
and
inc
lcall
lods
push
push
add
xchg
mov
mov
cmp
in
mov
jne
and
imul
ja
jo
lea
test
pop
adc
int3
test
scas
lds
dec
outsb
fsubr
rorb
sub
testl
cli
push
into
out
je
jo
mov
aad
out
push
push
mov
or
pop
out
outsb
loop
insb
jbe
into
daa
push
adc
lret
test
aas
push
sbb
stc
bswap
hlt
jae
js
xchg
inc
out
aam
xor
lods
aaa
in
mov
xchg
xchg
aam
enter
fsts
mov
ljmp
adc
mov
or
push
popf
insl
sti
and
jge
sub
or
mov
call
fldt
cmpsl
mov
rcll
mov
insl
dec
sti
or
dec
inc
je
mov
or
pop
rcr
push
push
pusha
mov
dec
not
jge
mov
mov
fdivs
jbe
pop
mov
jbe
cmp
inc
jecxz
loopne
cli
add
addr16
push
mov
mov
cmpb
negb
loop
mov
jecxz
lret
push
popf
pop
fiadds
inc
mov
mov
xor
movsl
addr16
xchg
leave
loope
mov
push
es
pop
sub
movsl
sub
decl
push
fidivs
add
out
mov
sti
push
inc
sub
jnp
out
mov
pop
push
and
daa
inc
sub
mov
inc
fdivrl
fistps
imul
mov
and
adc
insl
adc
test
pushf
sub
dec
mov
dec
idivb
ficompl
mov
lods
lcall
mov
das
mov
fsts
sbb
ret
mov
nop
std
pop
adc
in
repz
movsl
jo
jg
cmp
cld
lea
ret
movsb
hlt
std
stos
inc
mov
sub
jl
movsb
cmp
cmp
loopne
xchg
push
outsl
fs
xchg
cli
jg
hlt
adc
xor
insl
push
es
lret
les
das
mov
cmp
and
ds
es
and
xchg
test
pop
cmc
dec
clc
dec
add
fsubrl
jae
inc
push
pushf
lret
sub
xor
sarl
mov
pushf
test
mov
sub
clc
push
stc
cltd
std
repnz
lods
jnp
notl
sub
dec
or
mov
inc
or
sbb
sbb
add
xchg
fsubrl
fildl
cltd
mov
fists
dec
in
push
xlat
jge
into
mov
xchg
out
push
and
mov
mov
mov
lcall
mov
or
dec
bound
and
push
or
mov
nop
inc
mov
push
int
test
jbe
lods
xchg
push
outsl
jb
lock
sbb
adc
pop
je
nop
xchg
pushf
mov
and
cwtl
xor
lcall
cli
mov
cld
adc
ret
push
movsb
movb
and
into
push
and
add
jnp
je
insl
pushf
inc
fs
push
movsl
sub
popf
lret
xchg
mov
jle
ljmp
dec
xchg
jmp
cs
xchg
dec
push
mov
shrb
shr
mov
lock
or
js
xchg
xchg
pop
neg
and
cs
lea
out
pop
or
hlt
inc
aad
xor
std
rcrl
test
push
lea
mov
iret
lods
mov
js
xchg
inc
push
mov
mov
aaa
je
insb
fidivrl
cwtl
arpl
aad
xor
ja
notb
and
pop
pushf
or
mov
dec
jmp
fsubrs
pop
aas
imul
adc
mov
and
jne
nop
xor
pop
xchg
sub
pop
or
test
rolb
test
loop
dec
xchg
cmpl
inc
cmp
mov
dec
add
adc
aaa
inc
sbb
add
push
ficomps
jb
jecxz
inc
jmp
outsl
cltd
dec
dec
cmp
add
loop
leave
pop
ja
push
gs
jle
call
lds
testl
pop
in
sti
mov
cltd
das
aad
daa
fists
add
sub
lock
mov
pop
clc
xlat
pop
rol
cld
clc
les
mov
loopne
into
fdivrl
push
loop
movsb
sbb
pusha
xor
add
and
sbb
mov
jno
xor
out
sub
add
add
loop
sbbb
dec
aam
daa
lods
and
lods
mov
dec
addb
jb
or
mov
test
dec
shl
xor
cmp
cmp
jb
in
dec
pop
cmpsb
cmpsb
mov
jmp
out
sbb
cmp
imul
je
scas
lcall
pop
or
xor
loopne
inc
mov
dec
outsb
sti
lret
push
call
faddl
nop
push
je
out
out
mov
push
push
sbb
adc
es
xor
mov
imul
lcall
mov
jnp
mov
ss
push
std
jae
jecxz
and
mov
call
lretw
out
bound
xchg
xchg
cmpsb
ljmp
int3
jge
sub
mov
mov
fs
js
jg
mov
cmp
and
sub
cmpb
lods
test
or
roll
in
jp
pop
scas
movsb
add
add
loop
xchg
sbb
pushf
ret
or
mov
cmpsl
dec
cs
add
push
shlb
scas
test
outsb
jbe
test
popf
loop
sbb
idiv
orb
push
add
xor
call
inc
cmp
inc
cmp
aaa
mov
jl
pop
inc
add
int3
mov
xchg
and
pop
test
xchg
xor
aam
pusha
or
push
into
adc
cld
shll
and
jl
or
std
decb
inc
in
aas
jbe
addb
add
xchg
inc
pop
outsl
lods
jg
dec
mov
and
ja
iret
and
fisubl
and
and
pop
call
frstor
ret
leave
mov
cltd
out
add
jl
les
xchg
popf
loope
out
shlb
andb
push
mov
stc
repnz
fcmovnu
insl
imul
rclb
mov
push
push
bound
dec
loope
ret
mov
sub
fistpll
lahf
or
daa
fists
enter
or
andl
outsb
sti
push
sbb
out
xor
dec
inc
pushf
mov
fisubl
mov
cltd
sbb
dec
adc
divb
ficoml
stc
enter
movd
rol
out
shll
xor
inc
call
pop
mov
repz
dec
mov
or
xor
mov
std
ret
je,pt
adc
sarl
outsl
int
jecxz
ds
mov
mov
cli
mov
jns
jle
aam
pusha
xchg
or
sbb
cwtl
sbb
jle
mov
push
addr16
inc
mov
mov
ffree
adc
pop
sub
push
sub
xor
xchg
xchg
cmp
sbb
mov
xor
out
sbbl
addr16
mov
lods
inc
xor
cmp
or
xchg
sbb
mov
push
jl
int3
sbb
adc
sahf
push
mov
movsl
xchg
xor
mov
fcoml
xchg
jbe
sbb
cltd
jb
in
xchg
dec
lods
in
pushf
cmp
lcall
mov
push
imull
mov
pop
loope
icebp
cmp
lret
ficoml
adc
repnz
shlb
mov
jne
out
adcb
mov
inc
or
inc
mov
les
xchg
mov
leave
cmp
cs
sbb
push
fcomip
shr
stos
adc
push
pop
adc
repnz
mov
dec
adc
lret
lock
or
or
shrb
std
lahf
dec
push
aam
jmp
roll
adc
mov
mov
aam
pop
mov
pop
push
cmp
sahf
hlt
je
sbb
scas
jp
jge
jo
ljmp
mov
pop
adc
fists
pop
xor
xor
mov
out
or
adc
aam
aaa
sub
ja
into
cmpsb
jg
insl
push
mov
pusha
fdivp
xchg
pop
pop
stos
or
lret
ss
mov
xlat
inc
out
sub
jmp
jmp
mov
lds
sbb
pop
movsl
icebp
decb
or
dec
cwtl
leave
ja
ds
imul
xchg
sub
xor
pop
std
hlt
insb
jmp
mov
push
mov
arpl
mov
fbld
ljmp
xchg
push
mov
repz
pop
sbb
cmc
insl
cmpsb
or
xchg
dec
icebp
jbe
shrl
jecxz
jp
faddl
insb
je,pt
cmp
push
and
sub
jns
cmp
mov
push
cld
sub
dec
jg
jb
add
push
xor
sbb
std
push
je
test
jae
int3
lods
push
lfs
movsl
cmp
add
aam
jo
notl
jne
xchg
das
xchg
pmullw
sub
enter
shll
cmp
loope
and
mov
sti
xor
leave
test
or
es
sub
push
loop
cltd
and
cmp
inc
gs
xor
or
add
push
lret
add
push
xchg
sub
pushf
repz
fdivr
add
mov
jo
and
mov
cli
sub
fmuls
and
xchg
mov
mov
enter
push
pusha
push
ds
outsl
lahf
jnp
mov
lods
sbbb
xchg
inc
in
cmp
sahf
in
and
dec
dec
in
lds
in
cmp
das
mov
enter
aad
jecxz
into
fdivrp
jnp
je
sub
lea
and
insl
sub
call
stos
sub
loop
rorb
fldenv
test
inc
add
cs
xchg
cld
sbb
lock
push
and
addb
pop
jg
push
ror
sub
dec
xchg
fldl
xchg
mov
and
add
enter
jae
and
add
repz
dec
pop
cmp
inc
adcb
mov
addb
xchg
mov
or
xchg
popl
xor
ss
movsb
cmp
out
popa
into
cmc
mov
loope
xor
xor
rcrl
lock
dec
lahf
pop
dec
xor
iret
cli
push
and
pop
shl
repnz
xchg
aaa
sub
push
imull
rolb
insb
mov
mov
mov
int3
jmp
push
pop
inc
fwait
je
call
sbb
mov
mov
sahf
push
mov
push
mov
pushf
jp
stc
loope
mov
cmp
in
cmp
mov
test
xchg
mov
cs
jp
cmc
mov
pop
pop
adc
rorl
pop
mov
sub
sbb
or
pop
pop
sub
jmp
cs
mov
jg
fistl
call
outsl
mov
dec
xor
dec
fwait
mov
mov
hlt
inc
or
jl
push
in
cmp
sbbl
adc
leave
cmp
mov
fnstcw
jbe
sub
push
pop
inc
arpl
loope
xor
mov
or
sbb
jge
enter
jns
sarb
nop
dec
fildl
pop
sbb
or
in
mov
xor
xchg
pop
xchg
add
add
jno
pop
pushl
iret
pop
mov
xchg
or
sub
dec
fstpt
cld
js
fs
es
add
add
das
jg
xlat
movsl
dec
and
jb
cld
sarb
dec
sbb
or
mov
bound
adc
xchg
dec
inc
sbb
cmc
xor
adc
adc
movsl
mov
pop
iret
pop
jecxz
lcall
pop
sarb
insb
push
cmp
andl
push
jb
mov
insb
pop
enter
fcoml
pop
xchg
jo
xor
lods
fwait
cmpsl
jmp
mov
and
mov
fisubl
mov
fsubrs
sti
mov
cwtl
cmpsb
insb
or
adcl
sub
frstor
lret
je
push
jl
xor
mov
inc
jo
jp
dec
out
push
mov
cmpsl
bound
into
mov
test
out
adc
cmp
scas
xlat
push
adcl
adcb
jl
test
icebp
test
xchg
ja,pn
push
sbb
cmp
cld
dec
popl
dec
xchg
cld
mov
fucomi
aas
jb
lods
sysenter
xchg
xor
das
xor
enter
lods
push
arpl
adc
dec
dec
sbb
and
dec
xchg
movsb
scas
push
aas
xchg
mov
pop
sub
mov
ljmp
outsb
iret
cli
lret
add
pop
fcmovnu
jnp
popa
inc
mov
insl
cmpl
adc
paddusw
lods
push
das
outsl
cmp
leave
aas
pop
inc
lds
push
adc
mov
repnz
push
mov
out
insb
in
xor
fdivrl
pop
out
jecxz
jo
mov
sti
mov
inc
add
dec
sub
push
push
stc
fucomp
pushf
test
mov
movsl
xor
pushf
cmpsl
sub
sbb
in
jno
push
das
scas
fimull
rclb
mov
jmp
xchg
pushf
mov
stc
xchg
mov
add
andl
ljmp
fmuls
subl
dec
mov
xor
aad
cltd
pop
cmpsl
stos
dec
mov
test
dec
repz
scas
stos
dec
out
sbb
inc
sar
push
inc
sub
adc
jae
push
mov
pop
sahf
and
jle
mov
lret
push
sub
inc
sub
stc
jl
adc
inc
push
imull
iret
mov
adc
dec
mov
sub
push
xlat
test
mov
cwtl
jecxz
lods
imulb
sbb
test
loop
cmp
xor
inc
lods
sub
outsl
lods
test
sub
in
add
dec
out
lock
andb
sub
push
cmp
arpl
aad
movsl
lods
sub
je
sbb
jae
in
inc
or
and
ja
and
cmpb
out
add
shlb
into
sbbl
loope
jno
mov
pushf
cmp
imul
jne
cmp
xlat
or
cmc
adc
das
rorb
aam
xor
jb
add
mov
arpl
pop
xchg
mov
sbb
lcall
dec
jno
or
in
loopne
adc
or
or
insb
je
inc
dec
in
shlb
stos
adc
icebp
dec
push
test
repnz
mov
notb
cmp
in
enter
adcl
xchg
sarl
fldcw
pop
mov
mov
mov
data16
fwait
mov
xorb
lahf
lret
xchg
fdivs
lret
daa
and
enter
sbb
sahf
mov
xor
push
sbb
xchg
int3
sub
adc
add
addl
or
mov
fdiv
lods
mov
outsl
sbb
nop
inc
decb
pop
aad
clc
push
out
movsl
hlt
adc
and
inc
lret
sub
dec
dec
data16
in
dec
imul
roll
test
jecxz
xchg
mov
pop
lock
jg
xchg
pusha
sub
dec
subb
cmp
jmp
loopne
push
outsl
ret
cmp
sub
dec
adc
pop
notl
jne
pop
lret
sbb
xchg
jne
in
test
movsb
jecxz
stos
cld
xor
sub
stos
pop
loopne
cmp
dec
lret
je
iret
adc
xor
mov
leave
add
pushf
pop
jbe
stos
dec
cwtl
aaa
sbb
leave
daa
inc
je
xor
lock
lret
out
jle
mov
push
pop
cmp
adc
fldl
push
mov
pop
aas
jbe
jnp
cmpl
fidivrs
dec
inc
adc
stos
loopne
out
stos
test
mov
mov
mov
pop
jmp
fnstcw
mov
movsl
pushf
xchg
dec
mull
lret
xor
or
or
adc
xchg
stos
add
shrb
mov
nop
lock
mov
outsl
loop
fldt
mov
fisubrl
adc
push
push
and
fwait
aad
mov
scas
push
and
mov
pop
sbb
lods
lods
loopne
cwtl
imul
movsl
cwtl
or
lods
jmp
add
fisubrl
aad
dec
jbe
movsb
fisubl
cmp
lods
mov
loop
pushf
test
les
xor
push
test
pop
push
xor
cwtl
pop
je
xchg
inc
adc
adc
sub
inc
mov
decl
jecxz
lds
jbe
push
ds
xor
jle
pop
jnp
inc
dec
mov
shll
jnp
fsubs
cmp
aad
data16
arpl
cmpsb
mov
mov
and
mov
mov
out
inc
dec
testl
movsb
cmp
adc
mov
inc
std
insl
loop
pusha
ficompl
xorl
xor
in
daa
and
rolb
dec
scas
fldl
jne
int
pusha
lret
mov
rorb
rcrl
mov
leave
sub
add
xor
rcrb
scas
sbb
and
sbb
push
pushf
je
or
movsl
jge
repz
mov
movsb
jno
jecxz
xor
adc
and
ret
addb
fcompl
aaa
in
mov
sbb
testb
scas
pop
es
or
jbe
or
subl
add
fs
fisubrs
and
orl
not
push
inc
mov
sub
adc
mov
pusha
xchg
sbb
ficoml
movsb
push
in
xlat
icebp
loope
repz
push
xchg
repz
sbb
mov
mov
ja
shrl
pop
nop
mov
inc
jb
repz
mov
lds
push
sub
nop
or
stc
inc
mov
or
or
jno
jg
cmp
cmp
mov
pusha
call
outsl
int
push
pop
xor
xlat
into
or
pop
cmp
jle
dec
movsb
daa
lods
dec
sub
jle
loope
jle
fldcw
dec
jns
mov
ljmp
xchg
jp
xor
adc
mov
lds
and
sbbl
cmpsl
ss
mov
cmc
addb
jbe
rol
lods
test
push
fwait
popf
fs
xor
inc
insb
movsl
sahf
rcll
push
xchg
mov
sub
mov
mov
fidivs
mov
and
jb
dec
repz
jo
arpl
imul
jge
bound
stc
out
pusha
cs
dec
mov
ss
push
rcrl
and
lea
popf
mov
xchg
jg
ja
pop
xor
jp
lea
add
mov
xchg
dec
mov
sub
pop
outsl
leave
mov
cmp
imull
or
or
fwait
xchg
or
stos
inc
add
cli
mov
add
dec
xlat
mov
sub
cmpsb
scas
push
xor
addr16
fistpll
xor
jg
enter
insl
nop
adc
iret
fsubl
xor
adcl
lret
das
ret
into
addr16
or
mov
imul
cmp
arpl
insb
cmp
and
xchg
mov
sub
dec
iret
loop
jecxz
dec
jmp
pop
add
lea
sbb
cmc
mov
jnp
cmc
push
cmp
test
ficomps
aas
ss
adc
in
mov
call
jg
mov
inc
pmulhuw
jne
clc
cwtl
mov
lcall
xchg
sub
sub
xchg
and
mov
pop
scas
sbb
add
rorl
jmp
ret
xor
or
mov
inc
cmpsl
pop
int
repz
mov
sti
jg
pop
ljmp
xchg
pop
add
mov
dec
bound
cmp
repz
repnz
mov
mov
jbe
lods
shlb
add
xchg
out
push
popa
mov
fucom
inc
into
scas
addr16
fdivs
aas
adc
xchg
jle
mov
pop
xor
clc
movsl
mov
test
es
dec
out
pop
push
fistl
scas
leave
cmp
or
pop
dec
mov
push
mov
mov
sbb
fdivrs
dec
mov
cmovae
mov
xor
clc
dec
and
clc
sbb
xchg
shrl
fbstp
les
xor
out
jae,pt
es
push
xchg
pop
sbb
aaa
xchg
xchg
popa
xchg
sub
push
inc
sub
out
pop
jecxz
pop
loop
movd
add
xchg
push
add
and
cmp
mov
pop
sbb
in
xchg
xchg
pop
add
jne
repnz
gs
fxch
das
jg
fwait
mov
xchg
sub
xchg
fucom
mov
fcomip
mov
mov
jecxz
mov
and
cmpsb
or
cld
fcompl
fistpl
fidivl
cwtl
test
adc
xor
imul
mov
sar
jle
mov
rcrb
xor
inc
repnz
pop
sbb
in
hlt
push
ds
shll
jo
add
mov
iret
adc
ja
sbb
push
mov
clc
lcall
arpl
stc
aaa
add
inc
mov
xor
pop
arpl
repnz
add
in
mov
push
aas
fmull
fsubrp
pusha
sbb
push
into
enter
mov
xor
inc
jp
jbe
out
xchg
in
xchg
dec
sub
cmp
mov
jmp
inc
push
jp
daa
and
sbb
lea
jmp
inc
lods
stos
jb
jnp
stos
mull
jno
jne
and
adcl
and
ja
mov
cmp
mov
sbb
pop
adc
jbe
testl
cmpsb
sbb
aam
out
push
dec
scas
pop
rcll
adc
ss
mov
mov
push
jle
shll
test
bnd
aad
jnp
cmp
sbbl
cld
adc
jns
sbb
mov
add
mov
movsb
aam
imul
rcrb
dec
push
pop
lods
jnp
rcr
popa
rorl
sbb
push
addl
rcrl
test
icebp
add
negl
pop
ds
sti
push
cmp
push
or
addr16
aad
fwait
loopne
test
dec
leave
or
cmp
out
xor
mov
and
out
xor
cmc
inc
into
jge
push
loopne
pusha
sub
lcall
imul
mov
dec
andb
icebp
mov
mov
movsl
in
and
loope
sub
jmp
push
jo
mov
lea
rcl
push
sbb
aas
clc
scas
and
and
mov
xchg
inc
pop
mov
fisttps
xor
fisubl
dec
push
cltd
lea
scas
jbe
stos
cs
add
insl
mov
ret
les
jmp
adc
mov
jmp
movsw
adc
push
inc
frstor
xor
dec
cltd
sbb
and
and
ror
in
gs
nop
out
fdivrs
shrl
xor
test
adc
icebp
xor
inc
lret
ljmp
lahf
arpl
mov
ljmp
daa
sbb
test
cs
pop
je
outsb
jmp
rolb
xchg
imul
filds
shlb
mov
aam
jns
lcall
mov
lcall
aas
pop
daa
scas
or
pop
inc
mov
mov
in
xchg
add
inc
das
es
or
xor
xchg
or
xor
stc
mov
std
aad
daa
into
sub
lock
jb
lock
sbb
add
xchg
in
andl
inc
int
std
jge
imul
enter
xor
cmc
jo
rcl
loope
pop
mov
mov
cmp
mov
adc
adc
lods
lods
ja
xor
enter
or
sbb
dec
sub
test
fimuls
inc
mov
xor
add
mov
imul
push
lahf
les
mov
adc
mov
push
in
or
cmp
into
pop
mov
dec
push
sbb
push
jecxz
mov
popf
push
rep
outsb
cmp
sbb
sbb
movsl
in
jo
mov
jmp
mov
pop
mov
lods
xchg
lods
lcall
arpl
xchg
adcb
mov
sub
fmulp
adc
arpl
sub
jmp
or
outsl
clc
ret
ja
scas
sub
mov
dec
out
xor
lret
insl
fs
lcall
icebp
and
daa
cmp
adc
xor
aad
and
in
cs
gs
fwait
stos
fsincos
clc
jecxz
das
fmull
iret
cmpsl
sbb
xchg
fsubrs
mov
push
imul
sbb
sbb
push
mov
fwait
call
push
int
mov
data16
dec
and
fiadds
adc
repnz
roll
call
iret
pop
mov
sub
sbbl
iret
mov
mov
push
les
fistpll
fstl
sub
mov
call
imul
mov
bound
popa
lods
xchg
jle
std
mov
orl
les
jns
cmp
loopne
or
popf
repnz
sub
test
into
xchg
aad
lcall
sub
dec
fisttps
push
cmp
jae
cmpsb
popa
cmp
mov
jecxz
sub
test
cltd
pop
test
jne
mov
pop
lods
mov
or
mov
xor
fld
rcll
sub
inc
pop
and
sarl
fisubl
cwtl
fs
rcrl
pop
push
daa
and
outsl
sub
mov
fadds
and
mov
cmp
pop
add
js
and
xlat
cmpsl
sbb
xchg
sub
cmp
lock
mov
hlt
lcall
add
lahf
and
fs
or
xchg
adc
or
inc
xchg
cmp
jle
les
pushf
mull
xlat
int
mov
sbb
adc
mov
xchg
mov
call
lcall
jl
scas
in
mov
adc
cli
cli
gs
shlb
push
jp
push
xor
jmp
jae
fstpt
cmp
add
add
or
sub
and
xor
push
mov
ja
fcmovbe
push
in
pop
mulb
and
mov
xor
cmpb
push
test
mov
dec
addr16
pop
addr16
movsb
sub
xchg
arpl
test
push
gs
outsl
and
neg
jne
inc
add
jmp
mov
jmp
in
sahf
or
and
daa
loopne
outsb
popa
sar
aam
pop
inc
lret
mov
insb
cmp
adc
adc
mov
pusha
sub
ror
fsubrl
in
xchg
pop
dec
xchg
hlt
dec
add
shlb
and
jecxz
jge
arpl
pop
sbb
cmpsl
js
xor
mov
orb
pop
or
cmp
xor
or
out
push
adc
out
fidivrl
dec
enter
push
fwait
das
xlat
add
enter
and
and
fwait
sub
out
xorb
add
add
xchg
mov
ja
dec
cmc
or
jbe
in
cmp
fldl
insl
pusha
cld
popa
push
insl
or
jmp
xor
pop
xor
mov
out
and
inc
fdivr
mov
sarl
pop
mov
cmpsl
cld
movl
pop
pop
or
iret
cmpsb
insl
mov
lods
fisubrl
and
and
or
ja
inc
mov
dec
jnp
aaa
pop
loope
popa
into
or
pop
push
ficoms
es
jmp
lods
adc
adc
sub
fnstenv
in
incb
mov
mov
inc
ljmp
sub
mov
or
ss
inc
sahf
pop
cwtl
int
repnz
sbb
fsubp
fnstsw
push
enter
std
mov
loopne
and
idiv
nop
stc
push
sahf
inc
mov
xor
test
mov
mov
xchg
xor
xchg
and
in
mov
gs
fsubs
mov
fnstsw
out
int
outsl
or
ficoms
test
popf
ds
xchg
aam
imul
mov
dec
lret
aaa
je
sarb
dec
test
mov
mov
out
sbb
mov
inc
and
mov
inc
es
lods
xor
xchg
add
lret
dec
pop
mov
sub
rol
sub
sub
xchg
push
cwtl
mov
dec
jl
sub
add
loop
or
dec
mov
fiadds
popf
cmpb
rolb
les
dec
cmpsl
adc
jg
pop
gs
in
cmpsl
loopne
imul
sbb
aad
sarl
insl
rcrb
test
sti
xor
pop
dec
or
leave
mov
or
mov
mov
inc
mov
movsl
xchg
xchg
data16
lods
lds
aas
enter
xor
ss
aas
es
push
pop
loopne
xor
inc
lock
lret
cltd
mov
ja
lcall
add
repz
inc
dec
fadd
aas
xchg
jg
insl
and
outsl
fldt
addb
cmc
pop
fwait
mov
loopne
testb
add
sub
nop
mov
test
inc
sbb
add
test
sub
jmp
cmpsl
scas
ffree
out
mov
adc
notb
xlat
jns
or
inc
pop
movsl
xor
add
stc
mov
insl
sub
pop
enter
inc
test
dec
pop
mov
lods
gs
mov
sbb
adc
std
pop
mov
pop
mov
out
add
pop
rorb
cmp
dec
cmpb
int
mov
mov
inc
xchg
xchg
xchg
add
and
xor
fwait
aad
test
out
subl
xchg
push
mov
fs
repz
sub
lock
xor
fisubl
sbb
test
lods
pop
sbb
jnp
les
adcb
insb
sub
add
lea
mov
mov
pop
pop
jne
out
sar
aas
loope
je
jp
mov
mov
and
lods
frstor
inc
loop
popa
lret
jg
punpckhdq
jns
pop
adc
or
jne
test
lahf
scas
out
ret
push
pop
cmovae
into
or
xchg
int3
xlat
jp
lcall
mov
add
sub
adc
inc
scas
pop
fldt
xor
cmc
loop
repz
iret
push
sub
test
addr16
in
inc
lods
addr16
mov
mov
das
mov
out
test
ret
testl
int3
mov
negb
pop
mov
loope
ds
push
roll
cmp
or
pop
inc
and
jge
dec
and
shr
mov
leave
or
cmp
leave
test
sub
xchg
es
mov
subb
mov
cmp
and
or
hlt
xor
pop
cmp
ss
mov
aad
clc
fwait
add
xlat
in
jbe
jecxz
testl
mov
cmp
mov
xlat
orb
sti
leave
mov
dec
ss
sub
mov
rolb
push
popa
test
mov
jmp
sbb
jnp
in
iret
mov
xchg
or
data16
add
xor
icebp
into
push
xor
xor
je
sbb
mov
in
dec
in
add
push
pop
cmp
imul
cld
sbbl
or
push
add
xchg
xor
jmp
pop
and
adc
and
add
mov
lock
gs
int
ss
inc
test
inc
movsb
add
adc
repnz
lds
inc
fs
outsb
jge
clts
push
int3
test
mov
mov
jo
mov
mov
ds
mov
and
std
pop
push
loop
addr16
mov
cmp
jo
test
sub
push
add
les
mov
mov
dec
addr16
dec
pop
data16
or
scas
sub
lods
lahf
out
adc
lods
les
mov
ficoml
pop
push
arpl
dec
push
adc
jmp
gs
rorb
push
sar
pop
out
shlb
dec
mov
out
fxch
add
jnp
mov
inc
enter
xchg
inc
sbb
jp
shlb
push
mov
mov
mov
pushf
xor
add
cltd
push
outsl
push
or
cwtl
stc
les
xor
repz
pop
into
mov
bound
stc
mov
das
xchg
and
cmpsb
or
lcall
pop
into
test
push
stos
lcall
out
sbb
in
inc
sbb
out
jo
cmpsl
ficompl
add
xchg
sbb
ret
adc
js
push
les
mov
rcrl
bound
cmp
mov
stc
dec
inc
pusha
and
nop
jge
or
pushf
insl
and
or
test
aas
sarl
arpl
es
test
mov
mov
popf
popa
inc
xchg
jno
les
mov
and
pop
shrb
sahf
lds
idivb
pop
inc
xor
pop
imul
adc
cmp
mov
repnz
sbb
lods
adc
repnz
mov
or
inc
fldt
dec
lock
in
and
add
aad
mov
mov
cli
push
xor
std
add
and
cmp
test
test
mov
cmp
xor
jg
push
incl
fstpt
adc
push
jns
and
jmp
subl
and
or
mov
adc
push
imul
movsl
fstl
mov
das
stos
push
xchg
mov
xor
fcoml
xlat
sub
or
dec
cmp
mov
jmp
jnp
xchg
andl
mov
sbb
jecxz
or
push
clc
sbb
pop
nop
mov
ja
xorl
loop
jle
les
xorb
push
push
mov
push
ljmp
loope
outsl
sarb
lcall
es
mov
out
outsb
pop
cld
fdivs
pop
pusha
mov
jg
push
popf
jmp
ficomps
jne
inc
push
pop
data16
test
push
outsb
mov
sti
and
xchg
cmp
dec
adc
movsl
int
lahf
xchg
setns
orl
test
in
xor
xlat
mov
call
cmp
mov
cmp
fstl
shlb
sub
push
xchg
out
clc
loopne
dec
std
addb
les
testl
inc
test
movl
nop
pop
hlt
movl
jg
push
testl
shrb
mov
inc
ja
hlt
inc
sbb
xor
test
arpl
push
adc
dec
repz
mov
jg
mov
repnz
adc
push
jge
mov
inc
mov
fistps
insl
push
xchg
add
fwait
in
xor
pop
sbb
pusha
ret
sub
sub
lods
mov
sub
sbb
pusha
xor
adc
or
out
iret
fwait
jns
out
stos
and
mov
mov
mov
push
push
mov
mov
push
ret
push
ror
inc
scas
xchg
push
dec
sti
sub
pop
scas
pop
sub
loope
bound
pop
add
dec
pop
sbb
xchg
xlat
jns
repz
sti
bound
lahf
inc
cltd
mov
jmp
push
sbb
or
sbb
addr16
xchg
jecxz
xchg
jbe
movsl
cltd
add
out
xchg
sbb
arpl
les
jp
inc
inc
daa
push
imul
sbbl
mov
fistpll
icebp
into
xor
adc
adc
icebp
mov
inc
mov
sbb
dec
push
in
imul
data16
jnp
mov
nop
aam
sti
sub
mov
hlt
add
icebp
repz
nop
sub
fwait
mov
or
push
mov
ret
mov
jae
jnp
inc
sub
fsubrl
jo
scas
jge
stos
inc
add
mov
lcall
pop
test
and
sub
repnz
movsl
rcrb
stc
aas
hlt
scas
std
push
mov
push
add
add
sub
lock
je
ds
and
xor
cmp
sbb
or
fs
cmp
and
adc
fsts
lret
fcmovne
out
inc
adc
shll
mov
mov
fstpl
ret
ret
dec
rorl
sarl
loop
fisttps
mov
jns
es
lods
cmp
sbb
pop
test
jmp
cltd
ret
or
out
jno
xchg
shr
xlat
add
sti
and
mov
and
mov
imul
fdivrs
mov
sub
xor
mov
mov
xor
mov
insb
roll
dec
cltd
sbb
int
loop
jnp
mov
dec
lret
sub
mov
fisubl
repnz
sbb
xor
testb
sarl
sti
shrb
movl
cmp
adc
mov
inc
aam
filds
pop
rsqrtps
out
fbld
xchg
sub
sahf
and
and
call
popf
cmpsb
and
inc
faddp
jbe
mov
mov
mov
adc
add
cmp
outsl
sub
testb
out
icebp
nop
lods
mov
test
sbb
repnz
test
push
or
lret
lahf
sarl
mov
jne
adc
xor
adc
push
mov
test
dec
subb
inc
cmp
xor
mov
xchg
pop
in
fistps
ret
stos
mov
rcrl
and
popa
lock
stc
add
jo
sbb
jmp
xlat
cmp
jbe
pop
and
aaa
xor
xchg
sub
sbb
sub
mov
xor
cmp
pop
es
fisubs
push
fsubl
pop
stc
add
fwait
pop
xor
in
out
ror
sub
mov
lret
rcrl
push
add
jp
ds
aaa
push
in
lock
xlat
in
pop
mov
enter
jp
fwait
mov
mov
dec
adc
fldt
dec
insl
push
mov
pop
fdiv
gs
pop
add
adc
enter
call
fdivs
lods
daa
shlb
xchg
add
bound
jg
push
popf
sarl
insl
call
adc
lcall
or
dec
divl
jl
and
ds
sbb
ret
loop
addr16
or
xor
push
fsubs
ret
pop
push
pusha
clc
ljmp
xlat
loop
test
dec
add
mov
fistps
add
jno
test
stos
inc
inc
dec
push
in
cmp
cltd
cmp
cmp
repnz
popf
pop
mov
sub
cmpsl
jge
mov
cld
and
test
or
es
fdivrl
dec
scas
xchg
dec
ret
aaa
xchg
fwait
mov
mov
cmpsb
aas
sahf
test
lods
mov
cltd
push
jnp
adc
dec
out
fadd
jno
ja
daa
adc
fcmovb
dec
mov
icebp
jo
rorl
xor
xchg
outsl
std
mov
add
js
cwtl
in
jecxz
and
rcrb
movl
and
inc
sbb
lcall
mov
and
push
nop
nop
lds
popa
repnz
hlt
fldcw
in
inc
out
test
jle
std
inc
push
cmp
push
pop
int
cmp
inc
adc
js
sub
loope
sbb
or
push
push
les
aad
push
outsl
mov
fs
push
cmpsl
repnz
ret
mov
jae
adc
cs
aaa
lahf
mov
cmp
xchg
and
dec
jnp
ficompl
fadd
cwtl
shll
je
das
xchg
cmpl
dec
arpl
mov
sahf
daa
push
sti
mov
adc
xor
mov
scas
shl
jb
sub
adc
xchg
fmull
cmp
cmpsl
push
stos
fadds
loopne
std
adc
push
mov
pop
test
popa
mov
dec
mov
in
flds
sub
fcmove
das
sbb
push
and
test
adc
push
jno
js
push
js
inc
pop
stos
jne
dec
into
xchg
nopl
dec
or
lret
mov
xor
xchg
jmp
test
lahf
cli
sti
out
jnp
aaa
es
sbb
cltd
jne
call
xor
clc
and
inc
sub
imul
adc
shr
cs
js
test
out
inc
mov
mov
lock
pop
cmp
jge
insb
mov
mov
out
mov
xchg
mov
or
sahf
cli
mov
ss
out
fists
rol
ljmp
lods
popf
lcall
mov
mov
adc
pop
jns
sub
rorb
in
cwtl
loope
je
testl
xlat
and
sbb
aas
inc
pop
mov
imul
xor
jb
sbb
mov
ja
fistl
call
push
loop
ret
mov
xchg
xor
cmp
repz
sbb
aam
sarl
shrb
fnstsw
js
mov
test
or
push
add
mov
ja
ret
es
outsl
ljmp
pop
inc
jp
fs
popf
xchg
mov
das
loopne
adc
inc
add
pop
adc
clc
cmpsl
enter
pop
mov
jl
stos
mov
jo
xchg
cmp
cwtl
ljmp
jae
lea
fcoml
sbb
dec
ret
mov
cmp
xor
lods
cwtl
cmp
push
iret
xchg
scas
xor
rorb
fs
rcrl
popa
push
pop
call
in
in
popf
sbb
push
rcrl
xchg
les
fiaddl
fdivr
pop
xor
js
mov
sub
adc
roll
lret
loope
leave
dec
inc
inc
add
in
clc
ficompl
decl
mov
add
mul
mov
in
ret
mov
xchg
pop
cmp
cmp
inc
test
mov
xchg
pop
mov
dec
loope
scas
push
push
fisubrl
jae
add
push
mov
jmp
mov
cmp
into
adc
inc
pop
mov
out
lret
push
stos
in
ja
add
dec
or
cmp
sbb
pop
adc
stos
mov
jmp
jle
sbb
movsb
shrl
jp
in
insb
jns
stc
adc
sbb
jl
add
out
jns
jbe
sbb
jo
mov
cmpb
jge
xlat
pop
aas
push
enter
and
pop
aad
fnsave
sbb
movsl
aaa
mov
sbb
mov
push
aam
stos
and
add
dec
stos
push
dec
xor
cmpsl
xlat
adc
sbb
sbb
pop
movsb
ds
movsb
dec
cmp
sahf
aad
packsswb
push
mov
repnz
dec
enter
hlt
pop
or
jecxz
insl
out
insb
clc
inc
dec
jo
decl
jg
mov
call
add
inc
jmp
or
test
and
xchg
cwtl
jmp
cld
and
fwait
fwait
inc
adc
stos
les
sbb
mov
xchg
mov
test
sub
lods
popf
fnsave
mov
xchg
sbb
mov
push
mov
mov
outsb
and
scas
hlt
rol
push
jno
ror
jne
jle
xchg
xchg
pushf
pop
loop
mov
push
cmpsb
ljmp
sbb
cmpsl
jecxz
cltd
mov
sub
cltd
mov
ja
addr16
lods
lock
scas
mov
dec
sub
repz
hlt
int3
mov
cmp
cli
push
inc
jl
pop
pop
push
cltd
mov
pop
pop
push
push
cwtl
push
xor
and
and
or
xor
jecxz
popa
loope
sub
fs
cltd
in
scas
std
sub
fwait
xchg
negb
sarb
ret
cmp
xchg
mov
add
in
xor
push
xchg
movsl
rep
cwtl
mov
cmpsl
xor
shll
je
icebp
sti
test
testb
mov
xor
push
fidivrs
pop
jmp
or
push
push
fildl
adcl
aaa
ss
dec
sarb
dec
and
mov
imul
lret
clc
add
sbb
jo
stos
hlt
jmp
outsl
push
ja
xchg
ret
aaa
nop
sbb
rcrl
movb
dec
fs
and
mov
cld
jg
test
and
enter
mov
and
aas
icebp
xlat
jnp
sbb
repz
cs
push
out
orl
mov
cmp
adc
out
shlb
and
in
fadd
push
out
bound
push
int3
movsl
push
jbe
push
xchg
loop
mov
push
insb
lds
xchg
testl
mov
cmp
lret
and
fistpl
mov
pop
xchg
movsl
pop
outsb
scas
dec
scas
and
lds
loope
in
xchg
adc
pop
adcl
imul
shrl
pop
jb
icebp
mov
test
popa
sbb
jb
xchg
aam
sbb
mov
gs
mov
dec
es
adcb
inc
in
jno
xchg
adc
test
movsb
adc
mov
jne
lret
cmpsb
mov
push
out
lods
xchg
ret
xor
ret
sarb
jmp
insl
in
fdiv
outsl
lods
adc
mov
outsl
jle
mov
frndint
lods
jne
imul
xor
repz
hlt
pop
int3
sti
push
mov
enter
mov
adc
push
pop
mov
iret
cmp
pusha
mov
add
dec
insl
lea
push
cmp
xorb
movl
adc
sbb
lods
add
jecxz
leave
lds
jbe
add
push
aam
ja
push
push
int3
shrl
dec
mov
into
lock
repz
mov
add
rorl
or
xor
push
push
push
jle
jns
scas
ret
mov
movsb
cmpsb
andb
test
fcompl
pop
add
sbb
jmp
ja
mov
cmp
mov
pop
jne
jae
add
call
jbe
ja
call
add
adc
xor
into
or
iret
daa
out
das
imul
add
and
sbb
aaa
sub
aam
shlb
ja
adc
adc
loopne
sbb
test
test
divl
fcomps
rcrl
int3
mov
int3
jno
lret
bound
adc
inc
inc
mov
lock
pusha
inc
sub
vmwrite
sub
cmc
push
inc
addr16
pop
incb
mov
lahf
aam
int3
sbb
cmp
mov
lahf
mov
mov
dec
pop
arpl
mov
int
fisubrs
aaa
lock
xor
int
jle
cmp
fnstcw
xor
ja
outsb
loope
int3
cmpsl
cmc
std
mov
in
ffreep
mov
adc
ljmp
jp
jo,pt
add
daa
jle
mov
dec
jb
sub
popa
pop
cmp
mov
jecxz
fbstp
outsl
push
stc
fdivrl
mov
cmpl
aam
pop
ljmp
mov
mov
pop
push
pop
xchg
stos
sbb
mov
inc
or
jl
adc
addr16
or
stos
mov
xor
pop
dec
imul
mov
cmp
inc
int
andb
add
shlb
imul
jbe
jmp
pop
outsl
xchg
shr
adc
ja
xor
jb
push
nop
dec
pop
jb
cmp
movsl
pop
push
popa
dec
int
add
cmp
fsubs
inc
scas
cmp
push
shlb
cmp
pop
mov
ffreep
pushl
orl
in
adc
arpl
out
mov
mov
add
jne
mov
mov
or
pusha
or
rcl
movsbl
aad
das
pop
mov
sub
pop
loopne
dec
adc
fs
lcall
sbb
xor
or
push
lea
inc
mov
outsl
in
push
xchg
cs
mov
jno
xorps
adc
jb
ret
sahf
xlat
mov
mov
mov
in
pusha
jbe
adc
gs
mov
sub
sub
jp
cmp
mov
aaa
insb
sub
cmpsl
lea
nop
arpl
xchg
scas
pop
sub
cmp
sbb
jmp
pop
mov
xchg
outsl
pop
adc
aaa
es
cmp
or
or
out
xchg
jnp
imulb
cwtl
adc
clc
ja
and
add
push
ds
push
imul
scas
subl
insl
pusha
out
into
jnp
push
les
adc
scas
rolb
mov
jo
push
sub
inc
out
jl
mov
pop
jb
adc
jb
xchg
iret
cli
mov
or
out
add
dec
jne
nop
push
adc
adc
test
lods
sbb
mov
mov
sub
push
ret
cmp
ljmp
push
fdiv
cmp
jmp
inc
addr16
aaa
call
mov
xchg
movsb
adc
xchg
jno
pop
pop
sbb
ret
imul
add
inc
cmp
daa
mov
mov
push
cmpl
cwtl
outsb
cmp
push
cli
fwait
sti
out
adc
lea
mov
add
dec
clc
push
adc
mov
lea
scas
xor
push
popa
ss
add
mov
pushf
xchg
sarb
repnz
sbb
mov
cld
movsb
jl
jo
dec
push
lds
xchg
fnsave
push
cmp
sub
in
pop
dec
call
sub
mov
enter
scas
cld
mov
add
decl
lret
leave
lods
adc
push
je
sbb
mov
add
into
fistpll
mov
or
cmp
lret
mov
jae
fstp
stc
pop
jbe
cld
stos
dec
cmc
out
xor
das
ret
stos
and
jae
cmpsl
js
loopne
jge
lods
adc
or
loope
pop
or
and
imul
sub
fcoml
das
add
pop
gs
adc
xor
hlt
test
insl
dec
sbb
jg
test
jg
cs
scas
mov
outsb
cmp
cmc
mov
mov
jmp
jl
ss
jg
pop
test
push
arpl
pusha
or
mov
fisubrl
cld
mov
aad
push
inc
mov
xor
test
jg
loop
lcall
jnp
push
clc
push
jg
arpl
adc
out
xor
movsl
andl
fwait
add
and
push
cmpsl
mov
adc
mov
stos
cmc
add
and
mov
dec
jae
clc
adc
fwait
push
lcall
stos
mov
add
xor
inc
xor
fiadds
xchg
or
sahf
adc
and
inc
mov
aaa
scas
xchg
add
cmp
loop
test
into
and
lcall
mov
inc
shll
mov
push
or
dec
mov
lahf
mov
vcvtsi2ssl
in
roll
pop
pusha
dec
inc
lds
jo
sbb
fcomps
test
aad
nop
cmp
cltd
lock
dec
xor
pop
sbb
fsub
daa
inc
mov
adc
shrl
sub
or
xor
idivb
bound
xchg
into
aas
bound
jg
or
and
dec
nop
jge
jecxz
mov
fsubs
sbb
inc
into
or
mov
mov
push
dec
push
cwtl
mov
cli
push
xchg
lods
fisubl
inc
inc
rorb
icebp
push
push
mov
jne
loopne
scas
lea
mov
arpl
xor
in
les
inc
pop
out
sbb
repz
lods
loopne
lret
adc
test
push
lock
lea
les
fnstenv
xchg
loope
jae
das
fwait
dec
mov
mov
cs
lahf
fisttps
pop
inc
or
push
add
add
test
mov
sub
incb
jbe
mov
xor
xchg
es
dec
shll
dec
mov
pop
push
pop
push
cmp
push
mov
test
pop
inc
or
adc
dec
cli
dec
or
or
dec
xor
sbb
loop
mov
mov
jbe
test
pop
dec
or
add
add
out
call
pop
sti
sbb
xchg
fcmovnu
xlat
cmpsl
sbb
fsubl
cmp
pop
mov
in
and
decb
call
sahf
sub
imul
es
cltd
test
xchg
subl
outsb
xchg
sbbl
xor
adc
xchg
push
test
orb
shrl
das
sbb
jno
lret
mov
fwait
push
cld
push
inc
dec
mov
lods
inc
dec
jg
fwait
xchg
push
mov
mov
dec
push
sahf
in
inc
icebp
cmp
xchg
into
pop
inc
add
test
daa
insl
or
inc
or
jno
fs
mov
xor
cmc
adc
or
rclb
xchg
or
mov
xchg
sbb
mov
sbb
jle
push
enter
sbb
mov
add
inc
sahf
cmc
pop
push
bound
test
adc
pop
scas
xchg
test
insb
and
es
mov
imul
mov
mov
hlt
or
cli
add
xor
jmp
pop
call
mov
jg
and
loop
ret
xlat
xlat
and
bound
mov
test
mov
sbb
dec
imul
cmp
jbe
aad
inc
and
bound
rorl
sbb
pop
xor
or
inc
mov
xor
ljmp
xchg
fs
mov
lods
mov
sbb
push
jns
daa
jge
pop
fdiv
add
add
mov
push
push
dec
movsl
add
mov
or
or
nop
vpmacssdqh
sub
dec
mov
data16
cltd
lods
adc
fisubs
inc
shrl
inc
fistl
jne
sub
sbb
in
ficoms
add
int
pop
pop
sub
jle
enter
aam
push
add
jo
test
aam
fisttps
sub
lock
sbb
test
loop
xor
icebp
mov
ja
mov
movsl
add
das
xchg
popa
jp
out
stos
sub
pop
inc
adc
lret
mov
nop
daa
mov
orl
mov
imul
add
shlb
cmpb
add
iret
stos
xor
test
mov
sbb
mov
cmp
addr16
scas
rcrb
jl
jge
loope
mov
xchg
cmp
sub
add
or
xor
mov
repnz
popf
test
hlt
add
std
lods
lret
fsub
test
hlt
jp
out
lret
cmp
iret
ds
xor
aaa
int
roll
lods
loopne
scas
xor
int3
popa
lea
fidivs
scas
sbb
insb
add
lahf
fs
sub
adc
lcall
lock
or
xchg
add
cmp
popf
fst
rcrl
das
cs
pop
push
cmp
pop
cmp
rorb
fisttpl
rorl
sub
gs
test
movsb
jmp
pop
mov
mov
or
imul
inc
dec
add
sti
mov
nop
daa
and
movsl
rcl
mov
xchg
jl
aas
sbb
imul
lds
int3
arpl
and
cmpsb
push
jne
je
or
cli
jg
cli
dec
jle
adc
loopne
sti
sbb
bound
cltd
mov
xchg
data16
xchg
sub
adc
sarl
adc
lds
mov
in
subb
add
cmc
cmp
mov
mov
in
push
ret
popf
inc
mov
es
popf
and
and
add
xor
leave
xor
sub
sbb
adc
outsb
int
fistps
sub
push
data16
popa
inc
sbb
mov
push
stos
imul
shrb
mov
scas
loopne
jp
push
rcl
aas
repnz
aas
gs
out
cmpb
ldmxcsr
or
push
test
in
clc
in
adc
dec
mov
int3
scas
add
jae
inc
cltd
pop
fsubr
pop
lahf
mov
mov
push
cld
jae
pop
test
push
pusha
lahf
xchg
in
mov
lcall
imul
or
mov
xchg
in
ret
xlat
jmp
ljmp
and
rolb
mov
xchg
inc
and
jmp
in
hlt
push
adc
and
pushl
mov
jne
mov
or
or
dec
adc
lret
push
sti
dec
pusha
mov
xchg
cmp
jne
mov
sbb
pop
sub
stos
aad
xor
add
jmp
inc
rcl
push
pushw
lock
sti
out
mov
lcall
mov
inc
jmp
xchg
out
subl
add
mov
jcxz
pop
or
int3
sub
cli
jb,pt
sub
rclb
pushl
jnp
lods
sub
shrl
push
dec
sbb
pop
out
mov
test
lcall
movsl
pop
push
fldlg2
xlat
stos
mov
rorb
cs
push
mov
sbb
or
push
sbbb
jns
add
insb
mov
mov
mov
movsb
push
mov
and
test
jb
mov
pop
inc
ror
std
jb
lcall
aad
push
inc
xor
push
pusha
xor
lcall
and
xor
in
pmulhuw
xchg
adcb
insb
xor
lods
outsl
add
cmpsb
insl
pop
adc
loope
arpl
pop
rorb
jmp
dec
mov
or
xchg
sub
test
mov
and
into
push
adc
add
mov
mov
lds
mov
add
mov
add
loop
mov
inc
sar
daa
aas
and
into
pop
cmp
int3
cmpsb
pop
movsl
sbb
pop
outsl
add
pop
sahf
lcall
loope
repz
es
mov
lret
add
das
subl
mov
or
push
ljmp
fsubr
scas
aaa
lcall
dec
adc
sahf
mov
out
add
in
mov
cmpsl
movsl
lods
fstl
inc
insl
adc
scas
and
or
js
lret
ljmp
std
cmpsl
es
inc
mov
sbb
adc
bound
test
push
push
cmpsl
rcll
jne
aas
jmp
jno
dec
xchg
std
adc
dec
fcmovnu
in
sub
xor
test
inc
loop
mov
adc
shll
aam
cltd
mov
ljmp
cmp
sbb
addb
cmpsl
sti
and
push
and
push
pop
dec
sub
imul
in
es
ds
cmp
orb
and
lret
fisttpll
xchg
or
push
xor
mov
xchg
mov
add
mov
aad
cld
lret
add
mov
insb
and
push
dec
jmp
insb
ret
imul
jae
push
lds
dec
sbb
or
negb
and
mov
jbe
jae
aaa
mov
xor
dec
pop
cwtl
inc
std
mov
mov
or
or
pop
cmp
xor
pop
xchg
push
add
pusha
push
cmp
les
dec
dec
cmpsl
mov
repnz
or
out
loope
outsl
clc
and
out
ret
aas
cmp
repnz
cmp
xchg
add
mov
subl
dec
test
push
cmp
cmp
scas
loop
push
xor
loope
movsl
pop
imul
lods
repz
mov
or
push
fs
out
cmp
fidivs
sbb
out
pusha
pop
stos
pop
cmp
jne
dec
jg
xchg
fmul
scas
dec
aaa
xor
xor
repnz
loop
aad
adc
jo
xchg
and
add
sarb
pop
push
js
push
sarb
xchg
add
jns
xchg
mov
or
sub
lret
mov
mov
ss
fnstenv
das
fdiv
sbb
testl
shlb
add
mov
add
xor
dec
cmp
xor
and
scas
dec
gs
hlt
mov
outsb
jmp
and
out
or
sub
mov
sub
mov
cmp
sbb
pop
scas
frstor
sub
fimuls
popf
mov
xchg
sub
xor
pushw
test
ret
xchg
mov
adc
icebp
mov
jb
or
jns
mov
mov
push
insb
mov
das
mov
xor
xchg
jno
in
xor
dec
cmpsb
xlat
iret
gs
and
test
xor
push
and
scas
es
add
push
mov
cmp
mov
mov
rolb
mov
mov
mov
dec
cmp
int3
insb
pop
xor
mov
inc
inc
mov
push
add
adc
fists
aas
arpl
mov
sbb
ficompl
bound
xor
mov
xor
rolb
inc
shll
movsl
in
sbb
cmp
jb
jle
jne
mov
movsb
jmp
fadd
rclb
mov
enter
and
push
xchg
sbb
add
inc
add
daa
xchg
outsb
insb
xchg
xchg
insb
adc
xchg
inc
sub
daa
fdivrs
fisttps
sti
ja
aam
lret
fdiv
inc
call
movsb
mov
sbb
add
adc
inc
xor
or
mov
sbb
xor
fbld
flds
enter
loop
add
xor
mov
or
jbe
adc
mov
push
or
xor
add
leave
inc
push
push
push
or
seta
lret
cmp
ja
add
adcb
add
movsl
push
dec
jecxz
pop
xchg
mov
lds
dec
sbb
rorl
fcomip
inc
repnz
negb
mov
popf
adc
xchg
icebp
push
xor
stos
test
xor
jp
mov
and
jnp
inc
js
add
js
adc
gs
xlat
sub
cli
and
rorb
push
add
push
adc
repz
fsubl
test
stos
je
xor
inc
fs
jg
aad
dec
dec
mov
stc
inc
movsb
repnz
mov
mov
mov
pop
in
pop
or
lds
push
jae
push
lock
cmp
test
sbbl
js
int3
mov
xlat
lods
enter
adc
mov
dec
std
sub
cmpsb
xchg
sub
mov
xor
loopne
push
fcmovnb
scas
lods
aad
or
xor
push
xor
data16
sub
fstps
icebp
aaa
aad
jp
out
sbb
lahf
int
and
pop
stos
popf
pop
mov
sub
flds
mov
out
inc
shrl
cmp
or
pop
dec
icebp
xor
pop
dec
sub
add
rcll
xlat
in
pop
dec
test
cmc
mov
xor
clc
imul
jnp
stos
test
cmp
and
cmc
push
mov
jmp
jbe
cmpsl
popf
sbb
sets
das
xchg
nop
ss
inc
mov
mov
sbb
iret
ja
add
filds
hlt
sbbl
xor
into
dec
mov
and
lahf
lahf
stc
and
or
sbb
lods
das
sub
mov
frstor
scas
pop
xchg
push
push
aad
int
shll
int3
jno
xchg
pop
pusha
pop
dec
out
rcrb
pop
jb
je
outsl
enter
fucom
xchg
cmc
daa
fsubr
push
fldl
movsb
push
insl
xchg
push
pop
and
cld
lock
cmpsl
fwait
cmp
pop
dec
fldl
repnz
mov
fwait
sub
push
popa
insl
cmovo
mov
push
imul
outsl
pushf
enter
cltd
xchg
scas
fiadds
shrb
pop
push
arpl
jnp
inc
addr16
testb
in
xchg
cmp
push
mov
or
and
or
or
push
dec
shlb
repz
adc
in
insb
xchg
mov
imul
push
cmp
popa
mov
cld
or
xor
stos
out
icebp
mov
in
jne
mov
sub
and
inc
out
inc
jge
test
sarl
adc
mov
mov
xlat
pop
scas
test
xor
test
dec
and
popf
adcl
and
das
out
shlb
and
pop
adc
adc
adcl
xor
inc
int
xor
mov
pushf
jle
push
cmp
inc
fmuls
and
inc
cmpsb
add
pop
pop
into
xor
lret
jno
leave
aam
adc
dec
adc
imul
sub
bound
pop
repnz
sub
sbb
and
imul
xor
mov
push
rcrb
insl
xor
js
jne
inc
sbb
flds
imul
adc
mov
jne
or
pop
outsb
xor
adc
mov
jo
jne
mov
sbb
adc
subb
and
cltd
cltd
jbe
stos
into
xor
sub
push
sahf
xlat
push
or
or
movsb
jmp
adc
icebp
aas
push
leave
push
fimuls
stos
data16
cmp
loope
xor
xor
xor
and
inc
dec
outsl
pop
imul
xor
pop
add
mov
into
push
mov
jno
lock
mov
xchg
and
fs
in
mov
pusha
pusha
push
sub
mov
rcl
sbb
mov
sub
cmp
insb
xlat
mov
push
test
enter
mov
xchg
shrl
xor
iret
enter
out
loopne
movq
inc
jmp
xchg
aad
jae
clc
mov
ja
pushf
sub
out
pop
bound
and
or
mov
fbstp
fwait
dec
cmp
mov
int3
sbb
jnp
lcall
shlb
in
pop
xor
dec
lcall
orb
adcl
call
js
jbe
scas
sub
pusha
fcmovu
out
fistps
mov
xchg
mov
xor
icebp
mov
sbb
ds
sub
shll
xlat
adc
rcl
xchg
or
subb
mov
ljmp
iret
pop
es
mov
xchg
sub
cwtl
loope
push
lret
lret
stos
bound
movsl
sub
add
int
out
pop
xor
cltd
add
pop
adc
into
fstpl
xor
fmuls
mov
std
jecxz
cmp
in
les
push
xor
enter
fbstp
push
daa
pop
mov
repz
or
movsl
jae
xor
test
mov
mov
inc
push
lods
mov
jns
movsb
sbb
or
sti
jle
push
push
decb
xchg
mov
xlat
inc
cmp
pop
or
adc
dec
fsubs
adc
loopne
dec
data16
sbb
and
pushf
mov
mov
shll
nop
mov
data16
cmpsb
mov
xor
mov
test
iret
sub
es
mov
movsb
inc
mov
cmpsb
mov
mov
cld
xchg
nop
cmp
jns
scas
or
stos
js
jbe
pop
cmp
push
loope
xchg
movsb
jnp
cltd
or
adc
aam
jae
mov
add
jmp
xchg
test
fistpll
ret
repz
and
testb
mov
mov
lea
sub
add
mov
scas
dec
movsl
pop
aam
into
lds
dec
loope
imul
xchg
dec
sbb
cs
sub
or
loopne
jg
outsl
imul
sbb
or
shlb
insb
movsl
shl
popf
mov
stos
xor
popf
mov
cwtl
inc
dec
insb
pusha
inc
sbb
xchg
les
hlt
ret
stos
inc
pop
jp
repz
mov
xchg
jnp
addr16
xor
lods
xchg
push
out
scas
ror
sbb
push
popl
mov
sbb
pop
sbb
mov
push
jge
push
mov
rol
sbb
inc
insb
xlat
stos
nop
mov
fldt
mov
cltd
gs
es
push
inc
ss
ds
int3
adc
sbb
mov
mov
mov
aaa
add
xor
lds
push
sbb
jbe
push
xor
outsl
lret
es
lahf
pop
lods
iret
mov
fstpl
ficoms
push
orl
jo
mov
xor
sbb
or
mov
mov
push
fsubrs
or
push
pop
js
aam
repnz
testl
lea
mov
aas
jge
or
movsb
and
aaa
sahf
in
mov
cwtl
dec
out
cltd
je
xchg
or
xor
pop
test
scas
sub
push
mov
fwait
insl
mov
je
xchg
pop
int3
push
push
mov
and
push
cmp
dec
stc
out
mov
filds
xchg
mov
fdivrl
mov
jne
sbb
stos
xchg
out
pop
je
inc
lahf
push
xor
dec
pop
mov
test
popf
fsubs
rcrl
push
add
inc
dec
ret
mov
test
cli
daa
pop
fs
out
xchg
xorl
xchg
cwtl
shll
cmc
fwait
sbb
cmp
mov
stc
cwtl
add
scas
roll
mov
mov
pushl
sbb
push
in
sti
shll
xor
lods
dec
ja
mov
rcrl
push
outsb
pop
ret
jmp
push
inc
int3
daa
mov
movsb
dec
and
fsubl
xor
inc
lods
dec
hlt
cmp
out
dec
div
dec
call
add
inc
pop
cltd
shrl
rorb
daa
test
gs
call
xor
test
adc
mov
cmpl
fistl
andps
xchg
sub
imul
mov
mov
push
jmp
cmove
outsb
push
xor
dec
mov
sarb
loope
jo
mov
out
cmc
mov
and
adc
sub
add
cmp
out
adc
test
fdivp
pop
movsl
es
jae
xor
js
in
jb
test
xchg
loop
cmpl
cmc
lods
sahf
push
cltd
scas
fdivl
or
jl
setp
adc
cmpsl
jp
js
xchg
jb
test
push
or
xor
or
mov
popf
jle
jb
xor
ss
lcall
cli
ja
cmp
or
push
fidivrs
outsb
pop
adc
andb
push
cmp
lahf
add
pop
aad
cli
or
imul
dec
sarl
movsb
adc
pusha
test
jmp
or
sbb
push
nop
or
in
mov
dec
in
xorb
es
daa
das
pop
fwait
int3
divb
push
adc
popa
and
push
jg
push
aaa
cmc
push
into
and
lods
ret
mov
dec
int3
flds
fnstcw
or
fsub
dec
loopne
xor
je
dec
cmp
fwait
add
jbe
inc
adc
jecxz
loop
enter
xchg
xchg
daa
mov
idivl
fdivrl
gs
iret
insb
mov
rcll
mov
xchg
ja
int
sbbb
in
push
shlb
int3
daa
push
test
sbb
les
jle
xchg
pushf
scas
fcmovbe
jmp
sbb
sarl
xchg
mov
test
push
jo
or
pop
lock
in
xchg
shl
mov
lock
outsl
add
rol
fdivrs
xchg
mov
ds
sbb
lock
mov
icebp
mov
push
mov
stc
dec
jne
in
inc
pop
lahf
mov
add
movsl
add
xchg
stos
xchg
imul
das
mov
into
push
xchg
adc
icebp
iret
xchg
movsb
insb
sti
lea
or
inc
sub
std
adc
cmc
clc
mov
pop
mov
jge
jno
add
pusha
push
push
fs
adc
js
adc
rcll
mov
xchg
clc
flds
mov
sbb
pop
xchg
sub
xchg
aas
adc
pop
lss
ret
dec
lret
cld
leave
xchg
movsl
inc
cld
in
test
lahf
mov
xchg
pop
iret
fistpll
cmc
add
lods
push
test
int
lods
rorb
adc
push
cwtl
xlat
xor
jp
add
shl
aaa
aas
popf
lcall
mov
xlat
mov
aas
cmp
push
mov
stos
ret
es
jbe
jle
push
stc
data16
jl
adc
jno
loopne
dec
push
sub
mov
sub
sbb
xlat
repnz
lcall
jns
push
and
rcl
add
inc
test
cmpsb
fcmovnb
call
das
adc
out
pop
pusha
mov
aad
push
push
push
scas
lcall
push
adc
lahf
fisubrl
push
cmpsb
mov
pop
mov
lea
pop
sub
das
inc
push
in
lds
add
pop
push
clc
pop
inc
movsb
add
push
out
stos
dec
jecxz
rep
sti
lea
and
lods
mov
jle
and
das
mov
out
xchg
mov
push
push
pop
add
aaa
aad
fisubrs
or
push
shrb
aad
lret
pop
pop
mov
in
pop
es
inc
les
iret
cmpsb
out
mov
stos
ljmp
cmp
xchg
jecxz
scas
sbb
jmp
lret
and
outsl
stos
fnstsw
movsb
fwait
out
adcb
movsb
jp
outsb
ror
aad
pop
in
popa
cmp
fdivl
cmp
add
sbb
lods
and
addr16
mov
mov
dec
lods
pop
rolb
jmp
and
add
inc
rep
fwait
adc
add
pop
jecxz
jo
inc
shlb
jmp
pop
xor
xchg
movsb
jmp
pop
mov
mov
scas
adc
jmp
push
lock
test
cmp
lret
das
sbb
add
ja
in
jmp
fistpll
xchg
cld
lods
and
pop
push
bound
push
adc
pop
xlat
shrl
push
orb
jb
fs
jb
adc
cli
mov
xlat
inc
out
push
sar
stos
or
inc
rclb
cmpsb
and
adc
mov
dec
adc
sbb
and
loope
paddq
mov
mov
inc
add
push
adc
jno
in
and
mov
dec
xlat
sti
mov
stos
xor
push
das
dec
fmuls
xorb
popf
jg
dec
fsubs
out
hlt
and
xchg
jne
imul
push
or
add
sti
adc
adc
jo
dec
xor
lods
jne
lcall
js
lods
pop
jbe
push
addb
lret
sbb
ret
mov
push
jb
xchg
pop
xor
andb
dec
fucomp
sub
or
sbb
pop
xchg
loop
jmp
xchg
push
sbb
jo
out
daa
cwtl
xor
mov
jne
jl
inc
inc
jl
stos
dec
test
loopne
or
jae
jp
roll
pop
ret
ja
mov
addl
ret
mov
ss
xchg
or
cwtl
ret
test
mov
lds
movq
lds
push
imul
ret
push
pop
sbb
mov
jbe
lods
notl
rorb
cmp
clc
jbe
lods
inc
sahf
scas
inc
lcall
es
inc
dec
pop
mov
xor
pop
lret
sub
bound
add
shll
shr
or
push
or
aad
mov
out
xor
push
add
in
jp
outsb
cmp
std
in
cmp
outsb
jl
xchg
pushf
and
mov
scas
xchg
dec
pop
pop
mov
lods
les
scas
mov
and
pop
cs
add
cmpl
fistl
jbe
jp
sahf
mov
outsb
xchg
xchg
add
cli
dec
and
and
mov
mov
in
push
push
adc
fnstsw
mov
je
push
test
mov
cmp
pop
pop
in
cmpsb
dec
lea
cmp
dec
dec
jmp
xchg
jmp
jbe
daa
mov
xor
cmpsl
mov
call
fimuls
cmp
aaa
xor
hlt
cmp
jne
cld
push
inc
addr16
push
fnstcw
sbb
orl
hlt
mov
sti
icebp
sbb
popa
dec
dec
dec
rorl
stc
push
pop
dec
sub
pop
and
scas
jne
inc
add
pop
int
movsb
or
imul
mov
mov
stos
out
aad
jmp
xlat
push
adc
sti
mov
rcrl
mov
add
iret
sub
mov
scas
ss
pop
push
nop
and
shlb
or
inc
xlat
dec
fdivs
jae,pt
icebp
cmpsl
dec
outsl
shl
fdivrl
cmp
lock
pop
pushl
dec
pop
imul
call
or
xor
sbb
hlt
mov
in
jmp
test
imull
push
add
mov
decl
pop
inc
je
or
test
xor
push
jle
inc
cmpsb
in
add
frstor
and
std
in
cmp
xorb
out
mov
shlb
dec
push
out
jp
and
or
cs
test
mov
cmpsb
lret
push
jns
push
iret
ret
movl
jecxz
lcall
shrb
je
std
fbld
xchg
dec
lea
cltd
mov
xor
call
nop
sub
movl
imull
push
stos
xor
fs
mov
jb
std
fdivs
adc
adcb
jne
imul
stos
setl
xchg
js
clc
dec
or
mov
cmp
add
ja
push
pop
mov
jo
mov
xchg
mov
ss
ror
mov
inc
jmp
ds
fwait
mov
xchg
mov
loopne
insb
cltd
cld
push
pop
and
push
push
and
cld
xor
pushf
push
mov
and
cmp
mov
rorb
push
out
jle
fisttps
mov
sbb
shll
inc
jno
xor
cmpsb
or
pop
push
in
push
js
in
cltd
mov
or
inc
add
ret
cli
and
cwtl
sbb
shrl
mov
mov
imul
jo
in
lret
outsb
mov
test
insl
inc
loopne
stos
xchg
sbb
aam
out
cld
add
popa
int3
test
repz
mov
shrb
push
jb
mov
cmpsb
mov
rclb
mov
leave
sub
and
aam
loopne
xorb
jle
mov
xchg
lea
xchg
push
pop
mov
mov
test
inc
lcall
xlat
push
mov
call
lret
xor
decb
das
mov
repz
psllq
sub
jle
mov
and
lret
push
pop
xor
test
cld
add
daa
jns
add
sub
mov
mov
and
hlt
and
jg
push
jecxz
cwtl
addr16
cmp
xchg
inc
mov
pop
in
bound
pop
cs
mov
fisttpl
mov
jns
orb
push
sbb
test
popa
cltd
inc
mov
dec
les
xor
js
aad
xor
sahf
add
mov
jo
std
jno
and
adc
or
cmp
mov
xchg
in
mov
ja
mov
stos
pop
mov
jecxz
into
fldcw
decl
and
dec
enter
xchg
and
push
int
daa
jecxz
aad
dec
add
icebp
fsubs
push
push
arpl
mov
push
mov
sub
xchg
pop
mov
call
pop
xchg
sub
sub
pop
loop
xchg
daa
addr16
iret
aas
imul
pushf
je
aam
mov
loop
xchg
and
das
mov
jae
lea
daa
pop
push
adc
in
cmp
insb
adc
add
rol
outsl
jg
les
test
ljmp
pop
int
nop
pop
fwait
sub
in
pop
or
test
les
std
testl
pop
dec
cmp
sub
rcr
cmp
push
mov
rcr
loopne
clc
outsl
icebp
add
lea
xor
sahf
fiaddl
push
mov
sbb
push
fnstsw
push
push
insb
mov
pop
mov
mov
pop
in
fstps
inc
fdivrs
repz
lds
jle
or
cwtl
xchg
cs
dec
pop
xchg
pop
cltd
andl
icebp
inc
xchg
mov
lds
inc
pop
xor
xchg
pop
jnp
mov
push
mov
mov
sbb
and
stc
andl
decl
and
in
adc
popa
jno
hlt
out
jbe
shrl
sub
and
fs
mov
cmp
xor
and
int3
xchg
inc
jo
mov
xor
jge
pop
adcb
fs
imulb
dec
and
xchg
in
xchg
cld
lret
or
movsl
inc
jmp
xor
push
lock
cwtl
in
repnz
lds
adc
and
sbb
mov
sbb
adc
sub
pushf
sub
inc
add
pop
sbb
lahf
leave
in
xorb
xchg
out
lods
pop
xchg
lea
fdivl
xchg
mov
in
imul
mov
out
addr16
shll
insb
adc
adc
lods
mov
add
mov
and
lret
mov
cmpsb
push
repnz
jo
mov
icebp
sub
xchg
sub
cli
icebp
mov
inc
xor
les
dec
and
rorl
loopne
mov
and
int3
js
std
or
xchg
fxch
data16
pop
and
mov
mov
xor
gs
jp
loop
in
rcrb
insb
fidivl
push
cmpsl
and
rorb
mov
mov
xchg
mov
inc
mov
xor
rolb
out
je
ljmp
pop
loopne
push
aad
add
and
add
ljmp
out
fiaddl
leave
lds
out
iret
int3
push
sub
mov
or
xchg
cmc
pop
add
push
inc
arpl
int
cmc
add
test
es
fs
in
and
or
test
loopne
int
mov
jnp
lret
jle
xor
scas
xor
loop
or
ss
std
fadds
push
or
cmp
fs
ljmp
dec
sub
fdivs
xchg
out
lock
arpl
aaa
pop
cmp
xor
sti
and
imul
stc
ret
dec
insl
xor
fwait
pop
add
cld
cmp
js
or
orl
mov
aam
repnz
rcrb
xchg
test
jae
aam
jne
mov
push
inc
or
sub
outsb
ret
inc
dec
dec
and
sub
pushf
inc
mov
lds
sbb
fucom
xchg
aam
fdivr
inc
adc
fstps
pop
les
fbstp
xchg
and
bound
mov
mov
lret
outsl
std
inc
test
fistl
sarb
mov
stc
jle
cmp
cli
mov
dec
adc
lock
mov
out
jmp
pushf
mov
xchg
fs
xchg
mov
cmp
jnp
cs
push
loop
shrb
fimull
mov
mov
sub
call
add
sbb
notl
icebp
add
repnz
daa
pop
ret
and
xor
testl
push
add
cmova
test
out
fdivrl
mov
xchg
in
push
rolb
dec
leave
mov
xor
call
in
jecxz
jb
pusha
mov
bound
fiaddl
jle
ficoms
pop
xchg
xor
dec
inc
jge
cli
or
lea
add
xchg
gs
shrb
scas
mov
or
mov
or
je
xchg
or
ret
pop
lea
sub
xor
xor
dec
mov
sbb
test
xchg
mov
fs
xchg
daa
repz
cmp
jno
mov
fs
daa
add
lods
cwtl
xor
outsb
pop
enter
jbe
addb
sub
cli
push
and
ljmp
sbb
xchg
testl
mov
out
inc
fwait
xchg
or
test
test
fisubs
popf
ss
or
test
dec
fldt
test
xchg
cli
mov
ljmp
shrl
ja
mov
xor
sbb
jmp
mov
sub
out
pushf
xchg
lcall
and
in
mov
lcall
adc
sub
xchg
popf
out
dec
cmp
xchg
pop
dec
pop
jb
xchg
xor
movsb
fcoml
cmp
ja
sti
shl
shll
pop
jle
push
pop
cwtl
les
mov
and
jns
xor
adc
test
aas
int
aas
inc
dec
jg
sub
sub
test
nop
sbb
add
cmc
inc
lods
sar
pop
loope
add
ljmp
pop
movsl
pop
xchg
jnp
pop
mov
ret
mov
inc
xor
or
inc
mov
movsb
repnz
cmpsl
jge
je
sti
push
jp
dec
rcll
testb
adc
xchg
sub
jmp
je
xchg
mov
sub
ret
jo
mov
jecxz
jo
mov
test
and
test
dec
enter
in
or
pop
xchg
lahf
dec
out
stos
push
mov
jecxz
sub
psrlw
adcb
sub
sbb
insl
mov
fwait
pop
rcll
jbe
jecxz
jge
fsub
dec
add
cmpl
stos
into
rol
fwait
pusha
pop
jmp
inc
mov
loopne
pop
pop
sbb
lcall
xchg
into
xchg
pop
inc
mov
scas
je
lods
fdivrp
add
insb
adc
adc
loope
into
outsl
add
mov
mov
pop
int3
lods
and
sbb
dec
inc
mov
cmp
add
repnz
call
icebp
mov
sbb
fwait
shrb
ret
andb
xchg
fmul
bound
cld
sub
cs
rcr
loopne
test
cmp
cmp
mov
adc
cltd
sub
rcll
or
leave
outsl
call
lahf
mov
cld
or
insl
test
mov
daa
and
pop
inc
clc
or
ss
xlat
in
mov
jl
adc
out
push
or
mov
popa
repnz
adcb
ds
and
aas
pop
cmp
call
jp
je
mov
push
or
loopne
xlat
int3
and
aaa
imul
aad
orb
loop
jle
sti
pop
dec
jbe
inc
test
push
push
xor
inc
jmp
inc
lcall
sub
scas
mov
cmp
mov
cmpsb
in
dec
pop
insb
jmp
in
sub
daa
and
lcall
sti
sarb
repnz
jne
xor
iret
cmp
popf
ficoms
xor
xlat
mov
js
xchg
mov
add
data16
popa
dec
push
xor
imul
pop
fwait
or
lahf
or
add
xor
popa
movsb
mov
fmul
pop
jno
hlt
pop
mov
js
pushf
cmc
pop
scas
mov
dec
pop
mulb
repz
arpl
mov
mov
sub
pop
in
push
or
sti
leave
cmp
pushf
lcall
stos
add
add
rorb
xchg
es
cli
mov
cwtl
sarl
or
shl
movsb
fwait
scas
and
js
icebp
fdiv
shll
mov
xchg
and
in
sub
mul
addl
adc
movsl
fwait
pushf
jb
mov
or
or
icebp
push
or
inc
nop
in
xchg
addr16
mov
movsb
adc
loope
push
push
aad
mov
insb
mov
mov
dec
add
pusha
pop
dec
icebp
add
pop
test
xchg
add
inc
adc
sarl
lock
pop
test
mov
sub
mov
loop
stos
cmpsl
jne
cmpl
adc
addl
cs
and
fimuls
mov
sub
in
dec
add
fnstsw
lahf
das
mov
pop
jl
sarl
mov
lcall
pop
push
mov
scas
mov
xchg
pusha
or
xchg
sub
aam
or
insb
and
add
dec
mov
jbe
testb
hlt
in
mov
leave
mov
loope
jmp
xlat
call
mov
out
cld
mov
fldt
cwtl
stc
pushf
sub
add
inc
add
dec
cmp
cmpsb
or
sbb
cli
bound
ss
stc
jl
push
sub
stos
sub
sar
jae
mov
ror
mov
stos
enter
xchg
out
imul
ffree
jmp
and
jnp
mov
shlb
imul
add
cmpsb
stc
xor
das
pop
or
aaa
jecxz
fildl
outsb
mov
orb
fisubrl
in
mov
lret
call
cli
std
pop
aam
shlb
insl
ret
int3
pop
outsl
add
cld
out
mov
int3
lret
mov
xchg
xor
insl
cmc
dec
cmp
lahf
pop
das
push
sub
repnz
sub
mov
std
int
repnz
sahf
mov
sbb
idivl
shll
inc
xchg
insb
lret
xchg
push
or
jae
mov
mov
cmp
jmp
mov
repnz
dec
rolb
roll
mov
aam
xchg
test
lahf
outsl
pop
inc
and
mov
idiv
add
xchg
dec
or
add
inc
mov
roll
ss
add
mov
sub
mov
fidivrl
mov
pop
inc
or
ja
jmp
jl
mov
cwtl
jnp
loop
push
insl
shll
aam
and
out
loopne
leave
cmp
js
push
sub
aaa
push
test
sub
mov
rcr
mov
repz
dec
inc
inc
aaa
stos
cmc
movsl
lods
popl
ljmp
sbb
mov
mov
xchg
stos
lahf
ss
bnd
and
add
std
or
inc
mov
adcl
and
jno
or
xor
lahf
aas
movsb
cmp
es
fs
jge
cmp
pop
mov
scas
repz
int3
dec
pop
lahf
mov
pop
pop
loop
xchg
xchg
sbb
jp
sbb
iret
pop
xchg
push
mov
xor
cs
mov
movsl
mov
nop
cwtl
insb
imul
mov
pop
cmp
jle
sbb
sbb
xchg
jge
pop
pop
test
mov
je
daa
and
push
or
repz
pop
xlat
inc
imul
aaa
mov
push
xchg
jno
aad
xor
les
mov
lret
cmp
cld
test
jmp
mov
xchg
ljmp
mov
mov
and
dec
sahf
dec
push
insl
data16
xchg
movsb
bound
dec
push
call
fistps
stc
add
loop
pushf
or
mov
pop
mov
sub
fs
inc
add
add
mov
mov
iret
aam
lock
enter
cld
addr16
sub
adc
push
call
and
insl
pushf
cmpsb
jae
cmpl
mov
fucomp
pop
shll
adc
or
jmp
jb
add
ds
movsb
mov
in
ret
cmp
sbb
or
xchg
aam
add
enter
mov
sub
mov
pusha
or
lret
lods
out
sub
pop
gs
push
clc
xlat
add
push
cmp
test
or
and
outsb
pop
lea
add
mov
pop
sub
cmp
jno
pop
inc
imulb
lods
fldt
repz
mov
mov
push
sub
pop
inc
outsl
popa
adc
je
test
xchg
lahf
dec
shlb
adc
rorl
leave
test
lods
fdivs
or
ja
clc
fdivrs
sahf
mov
roll
lret
stos
sti
imul
cmc
xlat
or
pop
sti
push
jae
inc
das
lea
sub
dec
divl
rcl
cwtl
inc
jle
push
dec
movsb
dec
jns
mov
nop
daa
mov
cmpsl
hlt
stc
dec
jecxz
add
mov
jle
fxtract
push
and
adcb
xchg
std
iret
or
xchg
into
scas
mov
push
rcll
inc
dec
dec
push
and
pop
movsb
fsubr
dec
cmp
adc
jnp
insl
aaa
xchg
fwait
and
lret
lret
aaa
scas
xchg
jl
fwait
cli
pop
push
sahf
xor
mov
mov
movsl
xor
sti
adc
add
not
jmp
add
lret
push
xor
pop
pop
sbb
out
sub
loopne
dec
cmpl
xlat
xchg
sbb
mov
nop
xor
fcomps
mov
lahf
sbb
add
and
imul
xchg
pop
test
das
adc
testb
test
xor
mov
int
mov
dec
adc
cmp
mov
or
cs
mov
lods
push
jecxz
push
push
jbe
and
mov
pop
push
fnsave
popf
cltd
sub
mov
dec
jmp
push
insb
inc
insb
xchg
addr16
xor
jbe
mov
aas
lret
jo
mov
popf
add
popa
or
pop
push
stos
dec
orb
cmp
btr
push
bound
test
sbb
sub
xchg
test
aad
jns
inc
in
aaa
jg
xchg
xor
cli
dec
ficompl
repnz
fldl
or
mov
icebp
jbe
push
cli
in
pop
seta
stos
pop
cmp
sub
or
in
cmp
pop
shll
and
lahf
cmp
xor
add
add
scas
inc
addr16
fldenv
iret
and
adc
pushw
sub
das
mov
scas
cmpxchg
jge
push
mov
cmp
push
ret
xchg
sub
and
push
stos
loopne
jno
inc
sti
xchg
jp
lds
add
cwtl
jge
aam
pop
mov
sbb
jno
insb
lahf
add
mov
mov
imul
ljmp
pop
xlat
push
ds
jge
mov
mov
mov
mov
mov
fwait
mov
push
mov
push
test
add
das
pusha
popa
lahf
lret
pushf
xlat
sbb
lock
pop
inc
mov
adc
pop
pop
push
fstpl
push
stos
xchg
push
inc
jae
mov
inc
sub
dec
adc
testl
pop
testb
mov
test
inc
mov
jge
scas
je
adc
ror
push
cltd
push
and
xlat
cmpsb
outsb
xor
addr16
xor
adc
cld
and
fwait
pushf
mov
cmp
movsl
out
lea
mov
dec
cltd
cli
idiv
or
outsl
insb
test
aaa
adc
inc
cmp
cmc
pop
sahf
negb
lret
and
mov
les
or
cltd
xchg
repz
es
aaa
mov
out
mov
ret
pop
test
mov
jp
lea
push
lea
or
xchg
dec
inc
or
lods
xchg
dec
out
jbe
rorl
push
or
addr16
jmp
das
lds
xchg
addb
mov
cmp
xorps
out
mov
sbb
leave
dec
jle
add
movsl
jbe
or
xor
pushf
sbb
mov
sub
xchg
push
and
and
adc
das
mov
dec
shrb
cmc
sbb
inc
mov
lcall
push
scas
decb
jmp
mov
cmp
xorps
jmp
imul
rsm
jg
or
xchg
popf
inc
pop
mov
adcl
das
int
or
movsl
push
jbe
push
insb
mov
jmp
xchg
scas
xor
ret
adc
outsb
nop
pop
add
jo
sub
mov
xchg
or
cmpsl
shrb
hlt
sbb
mov
cmp
mov
adc
les
sti
arpl
mov
xchg
push
clc
arpl
push
es
pop
add
es
pop
aas
cmp
inc
fisubrl
pop
mov
dec
stos
jmp
ret
dec
dec
stc
daa
test
xor
pop
pop
pop
mov
ret
mov
fildl
subb
xor
test
and
shrl
cmpsl
fwait
lahf
aam
mov
sbb
enter
mov
jnp
jne
sub
xchg
call
mov
test
dec
int
xchg
mov
or
jecxz
mov
into
popa
xchg
sub
jb
or
xorl
push
inc
sbb
jmp
popa
fistl
push
outsl
fnstsw
xchg
fadds
ljmp
dec
shrb
les
or
mov
fildll
sbb
xchg
mov
out
cld
into
loop
mov
js
pcmpgtb
jl
pop
xor
push
and
or
icebp
icebp
add
jo
adc
iret
jmp
ljmp
push
jno
repnz
fs
rcll
sarb
ljmp
xchg
xchg
push
orb
dec
mov
mov
dec
data16
cmp
xchg
xor
jns
sbb
cmpb
call
cmp
mov
rcr
push
into
xlat
fiaddl
cmp
iret
pop
xchg
pop
mov
lds
aas
loop
aaa
sub
mov
popf
out
bound
jg
or
int3
cs
divl
inc
leave
cltd
mov
addl
scas
dec
push
pop
sarl
jae
and
jge
dec
jecxz
add
lret
jmp
nop
add
repz
ret
xor
aas
in
sbb
adc
nop
into
leave
loopne
outsl
pop
pop
ja
fwait
cmp
test
inc
cmpl
push
and
imul
mov
mov
mov
push
mov
sbb
stos
out
fwait
sbb
jmp
inc
incb
add
sub
push
push
sarl
rclb
pop
mov
movb
das
test
ret
and
add
jmp
test
fs
inc
notl
arpl
dec
pop
test
pop
scas
inc
mov
dec
sahf
mov
sbb
and
out
into
and
sbb
psllq
inc
push
jnp
cmp
and
test
aaa
into
aas
mulb
arpl
test
mov
cmp
ja
subl
xor
xchg
xchg
xlat
call
push
and
add
addr16
lods
popf
popa
mov
sbb
test
push
sbb
sub
hlt
jl
jo
mov
aaa
xchg
pop
aas
iret
daa
js
cwtl
xor
das
loope
mov
dec
test
scas
mov
rcrb
jge
pop
sbb
cmp
jge
pop
shll
rorb
pop
mov
push
pop
scas
jno
mov
pop
xchg
dec
pop
jbe
jne
xor
stc
push
shl
shlb
fs
mov
lret
jp
and
dec
add
sub
rcrb
xor
cltd
xchg
ret
push
push
addr16
mov
js
xchg
cmp
mov
xor
int
or
lcall
jns
loope
jnp
inc
aad
test
adc
sbb
pop
idivb
xlat
sub
out
cmp
fcompl
dec
sti
in
inc
add
stos
dec
mov
je
testl
dec
cmp
jb
pushf
or
sbb
outsb
xor
fimuls
xchg
pop
rcrl
shrb
lods
incb
ret
sub
cli
ss
idivb
fiadds
test
int3
inc
sub
push
je
call
jae
mov
gs
fistpl
rcrb
neg
or
cli
ret
data16
pop
loop
add
pusha
movsl
rorb
push
jb
test
adc
cld
sbb
sbbb
and
push
stos
or
mov
fdivrs
sub
sub
insl
adc
call
sahf
mov
and
inc
aad
mov
xchg
add
fidivrs
mov
push
int
orb
sub
adc
sbbl
add
mov
push
andl
das
xchg
iret
pop
inc
adc
push
shlb
test
jmp
cmc
mov
xor
mov
in
out
fwait
imul
add
cld
test
cmc
mov
mov
arpl
inc
dec
mov
shlb
sbb
push
aas
lret
lods
das
jnp
mov
ficoml
out
mov
dec
inc
add
inc
sbb
lret
stos
fwait
es
sub
jg
sbb
int3
push
mov
xorb
sbb
mov
cmp
mov
and
dec
mov
push
pop
scas
insl
xchg
jbe
xchg
cmp
cmp
mov
out
sub
inc
rcl
pop
jl
and
call
loopne
pop
fidivs
pop
jae
cmp
movsb
xchg
mov
movsl
mov
inc
push
sbb
pusha
icebp
call
movsb
insl
adc
cli
loop
or
daa
mov
add
mov
out
das
icebp
dec
jecxz
pop
cmpb
addr16
push
mov
xor
jno
or
add
xor
shr
and
push
adc
movsb
aad
and
inc
fcomps
mov
jp
jg
xor
add
out
adc
push
xchg
push
lods
or
fcomp
adc
prefetch
test
bound
inc
add
sahf
mov
jmp
jecxz
jmp
jb
std
out
jne
mov
mov
test
jbe
loop
jp
pop
pop
pop
push
cmp
lcall
stc
int
ret
lahf
sbb
mov
loopne
xchg
insb
xor
add
mov
jne,pt
add
outsb
xor
std
jns
and
xchg
stos
cmp
xchg
cmp
in
xor
insl
dec
dec
stos
and
sbb
xchg
in
in
xchg
std
aam
fisubl
in
pop
add
fwait
inc
shl
dec
lahf
lahf
inc
sti
mov
ficoms
adc
daa
pusha
cs
outsl
test
mov
or
mov
fldt
cmp
inc
pop
test
cmp
rcr
imull
mov
inc
fdivrl
inc
push
inc
push
repz
lods
sub
sub
cmp
cmc
jo
jle
fwait
pop
mov
roll
ffreep
jmp
add
sub
xor
and
xor
sub
pop
mov
push
mov
lds
in
pop
sbb
pop
push
hlt
dec
push
cmp
in
mov
adc
rcrl
or
mov
xor
mov
mov
sbb
or
sbb
adc
decb
and
cmp
or
jge
fmul
mov
adc
mov
icebp
or
pop
mov
xchg
add
addr16
aaa
loope
sub
sbb
arpl
icebp
subb
ret
mov
stos
outsb
ret
cmc
sti
mov
and
fcomi
pop
leave
mov
mov
dec
and
dec
cmpb
and
fdivl
cmpb
adc
int3
mov
mov
ja
push
stos
fimuls
es
dec
mov
xor
xchg
mov
ror
push
mov
sahf
ret
mov
fnsave
or
add
sub
pop
inc
adc
or
sahf
dec
pop
nop
add
push
call
add
in
xchg
fimull
scas
mov
int
repz
outsb
stc
mov
arpl
add
sub
inc
add
jl
push
add
cmp
add
cwtl
jbe
sbb
out
mov
and
lds
mov
dec
dec
cmpsb
arpl
inc
jle
cltd
std
adc
and
nop
jno
xchg
scas
stc
push
dec
mov
les
cli
stos
push
adc
orb
mov
addl
insl
jo
inc
stos
adc
mov
xor
push
outsb
popf
xchg
inc
out
mov
rcrl
aas
add
fsubrs
out
movsb
or
sub
adc
add
mov
mov
lcall
rcl
ret
pop
push
adcl
pusha
or
pusha
push
test
mov
popf
aad
xor
mov
aas
cmp
add
out
pop
cmp
sbb
or
push
xor
sbb
push
add
sub
cmp
add
jbe
xchg
pop
or
and
stos
in
outsb
add
xor
cmp
pushf
rcr
lahf
dec
lock
xchg
push
and
xor
or
xor
dec
xchg
inc
xchg
sub
decb
movsl
pusha
repnz
jge
test
gs
inc
and
or
rol
push
sub
sub
add
cltd
insl
frstor
and
pop
cmpsb
daa
pop
xlat
mov
sub
aam
push
cs
scas
lds
sub
mov
or
xchg
push
or
imulb
pop
xchg
lods
lea
rclb
cmp
jb
pop
push
cmp
jns
std
enter
sbb
jo
push
adc
into
xchg
jne
mov
dec
dec
add
mov
mov
mov
inc
xor
in
outsb
jl
dec
nop
xor
les
cmpsl
out
cmp
pop
adc
jge
ds
push
pop
sti
jmp
cmpsl
imul
inc
sbb
cmp
inc
xchg
js
xchg
jge
in
loope
adc
cld
xlat
dec
adc
jb
mov
mov
scas
mov
add
cmpsl
push
int3
aaa
push
lds
add
or
jmp
sbb
jle
in
jg
int3
xchg
adc
fidivrl
int3
popa
cmp
sbbl
ljmp
pop
ds
xor
aam
adc
or
cmp
fidivrs
pop
adc
jp
xor
mov
add
fimuls
daa
jp
movsl
ret
mulb
inc
std
inc
sub
aaa
adc
mov
adc
out
push
adc
mov
pop
stos
into
dec
mov
ja
mov
imul
rcr
outsb
adc
lds
jecxz
daa
adc
xor
ss
mov
sub
sbb
js
mov
insl
sbb
jnp
xor
sub
dec
into
sbb
clc
mov
inc
push
push
bound
aas
jno
add
je
mov
fidivl
lock
jnp
cli
xor
repnz
test
repnz
pop
test
jo
aad
fldt
or
push
fistpl
je
adc
fistl
mov
cmp
sbb
adc
imul
cmp
cs
repnz
mov
leave
pop
xor
mov
outsb
ljmp
add
pop
icebp
cmp
cld
push
imul
and
inc
mov
fldenv
push
popa
xchg
xchg
sbb
cmp
repnz
das
mov
outsl
or
out
outsl
in
cmp
loope
scas
bound
xlat
stos
adc
or
mov
mov
pop
les
xchg
or
roll
xchg
and
xchg
je
clc
inc
mov
dec
fwait
cmp
sbb
push
fwait
lea
pop
or
daa
jbe
in
sub
mov
jbe
jbe
jl
aad
push
stc
aaa
sub
rorl
fcoml
lea
pop
push
hlt
stos
mov
dec
jg
lcall
jg
push
test
sbbb
dec
es
movb
call
in
iret
imul
mov
mov
sub
fstpt
mov
dec
lcall
add
outsl
mov
gs
gs
and
add
inc
int
and
push
data16
scas
push
sub
mov
cmp
lods
mov
pop
or
xchg
out
iret
icebp
mov
pop
jns
ret
and
fistps
insb
adc
pop
dec
outsb
pop
insb
or
stos
je
mov
push
orb
aad
cld
jbe
mov
aad
mov
mov
cli
js
loop
data16
ds
fildll
push
xor
leave
adc
cltd
cmp
xchg
sub
and
fcomps
jb
ljmp
imul
out
and
fmuls
xchg
fisubrs
in
rcll
dec
cmp
add
ret
out
loope
repnz
rorl
push
or
xchg
push
push
sarb
pop
movsl
lret
mov
xchg
mov
and
lret
lods
shl
into
inc
in
hlt
aam
lcall
xchg
xor
jmp
adc
subl
mov
pop
xor
mov
test
out
cmp
ss
cmp
sub
cli
lock
aaa
lea
sbb
cmc
ffree
add
or
bound
cmp
pop
ja
cwtl
adc
mov
jo
cld
mov
or
and
dec
test
mov
out
rcll
in
pop
push
or
or
xor
push
fmull
cld
scas
icebp
lods
jecxz
jb
shr
lds
repz
or
adcl
xchg
sbb
and
stos
dec
pop
pop
stos
xchg
xchg
adc
inc
sbb
lods
sub
add
xchg
fisubl
lcall
jp
pop
es
stc
mov
loop
mov
mov
mov
cmp
std
lock
push
jmp
lahf
fstpt
dec
fdivrl
out
movsb
pop
and
dec
into
mov
fstps
mov
adc
adc
fidivl
adc
lret
js
inc
mov
lret
enter
push
jmp
sub
push
lret
xchg
loop
aas
pop
adc
aad
stos
dec
cld
jnp
sbb
inc
cli
dec
pop
adc
dec
mov
sub
ss
cltd
pop
jae
lcall
pop
xchg
mov
mov
pop
sbb
jmp
xor
popa
icebp
clc
inc
cmpsb
push
push
mov
arpl
push
pop
fisttpl
adc
int3
cmp
jl
xchg
jb
push
inc
xor
push
rcrb
ror
jp
push
les
mov
xchg
cmp
xchg
cld
movsl
and
test
cmpsb
cmp
int
lods
jecxz
in
sbb
jne
fbld
mov
dec
adc
repnz
out
pop
xor
jp
push
xchg
xchg
add
insl
jmp
mov
sarl
roll
jge
divb
lret
cli
pushf
lret
imul
cmp
pop
inc
pop
in
dec
jmp
jge
test
pop
mov
or
ss
stos
ja
das
dec
rclb
cmp
fwait
cmpsb
inc
fs
addb
in
jnp
test
dec
popa
cmpb
in
and
stos
jle
leave
xor
push
lea
mov
sbb
jle
imull
or
in
aam
pop
jbe
shl
mov
sar
stos
adcb
rorb
cltd
sub
ds
jge
clc
call
and
mov
pop
push
pop
xchg
xchg
roll
xor
shl
xor
mov
movsb
jb
stos
mov
fidivrl
mov
sbb
mov
in
and
xchg
mov
shll
cltd
xchg
xchg
push
jmp
insl
inc
push
jle
js
push
movsb
rcll
cs
or
mov
inc
aas
pop
divb
addr16
sbb
push
repz
je
adc
jno
sbb
mov
jbe
jle
xor
cld
flds
inc
stc
and
out
cmc
xor
sbb
dec
and
stos
out
int
ss
popa
dec
sub
mov
push
and
pop
mov
mov
xchg
mov
rcrb
jns
dec
jae
ficoml
pop
push
out
out
das
cmp
xor
aad
fmuls
dec
mov
icebp
jle
mov
mov
pushf
popa
mov
lret
inc
adc
pop
sbb
insl
mov
pop
or
aad
mov
lods
and
fucomip
pop
lret
cmp
mov
ror
mov
jbe
insl
sbb
int3
dec
xchg
mov
dec
sub
lret
ficomps
mov
es
xchg
mov
xor
sar
jo
push
push
and
jg
adc
cmp
pop
and
je
xchg
sub
inc
ret
push
mov
test
repnz
clc
les
cmpsl
and
aad
out
and
mov
add
xchg
sub
xor
lcall
dec
mov
cli
push
mov
push
xor
mov
insb
jne
fdivrl
add
jg
hlt
test
mov
pop
dec
fwait
jmp
bound
out
jnp
aaa
jp
ret
push
jbe
inc
and
cmp
js
shll
sbb
in
int
xchg
pop
xchg
sub
repz
ds
stos
insl
test
pop
sbb
pop
mov
dec
mov
push
fbld
sub
scas
inc
inc
clc
jmp
lods
sub
add
jne
movsl
popa
cmpsl
adc
pop
mov
fists
xor
sahf
imul
es
adc
push
int
bound
in
loop
in
pop
xchg
mov
or
xchg
sbb
adc
addr16
cmc
mov
pop
jl
or
mov
pop
sti
testb
insl
gs
push
shll
addl
push
pusha
mull
fwait
stc
shr
or
adc
lcall
dec
int3
mov
xor
inc
movsb
xor
jbe
and
mov
xchg
pop
sarl
xlat
sahf
and
push
out
cld
cmp
pop
sub
mov
ror
mov
int
add
jo
xor
cld
add
lods
push
in
fucomp
mov
push
scas
enter
faddp
ljmp
or
pushf
out
push
outsb
mov
add
sub
mov
mov
fdivrs
fiaddl
push
lret
mov
fsubrs
roll
add
jb
insl
js
lret
xor
pop
cmp
lahf
mov
fldenv
inc
lret
mov
mov
push
scas
outsb
cmpsl
mov
std
lret
jo
push
ss
push
jb
mov
cmp
pop
sbb
jae
cmp
cli
sbb
dec
jmp
outsb
subb
or
lret
outsb
push
and
sti
inc
dec
cltd
push
adc
or
movsl
into
mov
pop
cmpsb
pop
push
mov
dec
lock
inc
sbb
movsl
lds
loopne
imul
jle
in
pop
mov
mov
jno
sahf
mov
inc
je
jmp
push
or
adc
dec
popa
and
cmpsb
mov
lock
das
xchg
inc
aad
adcl
mov
out
popf
cmp
out
add
adcb
iret
frstor
rcl
pop
xor
adc
orl
and
pop
or
xchg
pop
test
push
int3
xchg
mov
mov
jo
mov
insl
adc
cmp
scas
pop
ja
aaa
leave
arpl
add
xchg
xchg
xchg
pop
adc
mov
xchg
lahf
icebp
leave
in
outsb
cmpsl
das
outsl
loopne
inc
mov
cwtl
or
gs
mov
push
and
pop
mov
push
pop
mul
divl
movsl
lods
lret
imul
rclb
arpl
jmp
xor
sbb
and
push
jo
lds
daa
inc
xor
sbb
cmp
pop
mov
inc
stos
push
inc
jle
sti
jmp
outsl
repnz
nop
xchg
stos
inc
movl
psrlw
pushf
loope
inc
cmp
nop
stos
xor
outsl
pop
push
fisubs
test
pop
outsb
add
xchg
or
inc
pop
fnstsw
mov
and
scas
inc
jge
dec
lods
mov
sarb
or
and
sub
mov
in
cmp
add
popa
js
stc
sahf
shlb
cltd
jns
push
adc
aad
or
sub
cmp
jns
cs
call
or
insb
iret
ret
sbb
stc
js
mov
and
xchg
jmp
shll
lret
dec
fcoml
adc
out
dec
and
in
xchg
std
pop
add
push
adc
loopne
ss
xlat
das
test
mov
popf
faddl
xchg
inc
cmp
cltd
jecxz
imul
es
lret
mov
mov
xor
leave
jg
pop
sub
jne
stos
jecxz
xor
jecxz
jl
mov
cmpsl
dec
ss
push
cmp
imul
xchg
das
stos
or
jge
mov
mov
leave
mov
pop
lret
add
jae
test
lods
bound
push
jno
jns,pn
rorl
push
sub
pop
and
push
cmp
xor
push
jnp
iret
mov
push
add
push
jmp
gs
cmp
mov
ljmp
push
out
and
dec
adc
pop
jge
js
addr16
push
xchg
iret
out
bound
sub
add
stos
inc
scas
movsb
add
xchg
fimull
test
std
movsb
jmp
adcb
xchg
lods
jnp
int3
lods
es
push
rorb
adc
scas
jne
mov
rcrl
sub
cmp
push
adcl
scas
xchg
movsb
add
push
xor
cmp
inc
and
dec
push
ljmp
js
mov
push
mov
daa
and
add
jb
sbb
push
js
mov
mov
clc
fnsave
shld
xor
push
xchg
aaa
stc
push
insl
lods
lock
xor
arpl
pop
adc
push
sub
xor
scas
sub
nop
jecxz
js
std
es
in
mov
or
test
or
sbb
mov
dec
les
sub
push
ss
ds
mov
repnz
inc
lods
dec
cmpsl
rcrb
lret
cmp
push
xchg
insl
lds
jae
and
cmp
loopne
or
imulb
por
xchg
popf
mov
cli
xor
das
cmpb
cmc
push
lcall
push
leave
jmp
in
cmc
or
sub
or
and
xchg
inc
sbb
dec
jne
dec
xor
push
in
mov
sbb
add
mov
mov
int
cmc
push
mov
xchg
sbb
sbbb
aam
mov
mov
pop
mov
fnsave
mov
movsl
ret
mov
cmp
iret
fdivrl
push
insl
lahf
les
add
fs
mov
aam
mov
jo
in
pop
push
mov
mov
dec
pop
cld
xchg
test
xor
mov
push
ret
sarl
pop
imul
fistpll
mov
out
mov
push
jp
faddl
data16
sarl
repnz
subb
js
in
jle
cmp
loopne
aas
jecxz
push
sub
push
xor
pop
cmp
xchg
dec
adc
imul
arpl
cmp
dec
and
mov
clc
sub
push
sbb
mov
add
fimull
jns
xchg
test
and
add
flds
xor
ss
pusha
fnstcw
loopne
lret
mov
sbb
cli
and
andl
data16
xlat
jle
fs
mov
fs
js
xchg
mov
mov
addr16
xor
lods
sub
ret
aaa
insb
cmp
mov
std
lea
lock
addl
out
xchg
dec
stos
jecxz
adc
jb
inc
adc
push
sbb
testb
pop
and
xor
clc
jae
sbb
rclb
adc
mov
imul
cld
int
test
push
and
andb
or
in
push
jge
addb
popf
add
and
xchg
ljmp
jo
jmp
inc
and
mov
outsl
cld
dec
add
xlat
into
stos
lods
add
cmpsl
pop
nop
sub
outsl
fwait
xor
out
adc
cmp
repz
sub
mov
mov
or
push
xor
lcall
mov
insb
mov
scas
es
and
lret
in
jle
pop
inc
pop
scas
jle
scas
pushf
fwait
imul
es
push
add
sub
call
sub
loope
mov
dec
pop
popa
add
sub
pop
ror
loopne
pushf
xor
cltd
aas
jg
xor
adc
add
popa
mul
je
stc
or
pop
jo
or
loop
shl
or
mulb
sbb
stc
dec
mov
icebp
push
pop
jo
push
mov
je
jl
iret
inc
cld
push
xchg
push
lock
mov
push
add
pop
rclb
and
mov
gs
ljmp
ss
addr16
push
mov
adc
inc
imulb
inc
hlt
jge
push
pop
add
inc
sub
aaa
outsb
push
push
xor
bound
ja
pop
pop
inc
in
into
ss
add
jp
shll
xor
aam
mov
pop
or
adcb
lock
or
mov
clc
lods
sarb
cmp
pop
adc
or
les
aad
dec
mov
cli
pop
mov
pusha
cmp
cmpsl
fiadds
iret
stos
lea
repz
lods
fldt
push
repz
testl
inc
lcall
outsl
rclb
mov
add
xchg
jb
fsubl
mov
dec
pushl
mov
xchg
inc
incl
enter
or
sub
push
pop
clc
sub
and
mov
fisttpll
stos
inc
and
loope
out
ss
gs
inc
jge
mov
push
lcall
cs
jb
cmp
adc
sub
mov
push
xor
loop
cld
push
icebp
movsl
mov
popa
pop
loopne
adc
cmp
mov
xchg
outsl
or
shl
push
cli
ret
outsb
loop
dec
push
fmuls
sub
insb
xlat
scas
mov
push
cmpsb
call
xor
mov
rcrb
or
testb
stos
push
cwtl
dec
ja
roll
jbe
jne
push
push
ja
pushf
add
mov
push
add
sahf
cmp
iret
cmpsl
aam
push
int
jae
cwtl
mov
add
pop
je
push
add
mov
jp
pop
or
repz
rorb
stc
inc
cltd
pop
add
xor
addr16
scas
les
xor
sub
or
imul
or
pop
add
mov
xor
out
xor
mov
repz
ss
cmpsl
inc
inc
jbe
out
mov
leave
lea
aam
dec
add
fsubrp
mov
xor
add
ret
movsl
cmc
les
xlat
jecxz
mov
mov
cmp
out
xchg
stc
pop
fmuls
mov
xor
cmp
pop
in
jnp
sbb
outsl
add
arpl
inc
outsb
scas
cmp
int3
addr16
cmp
int
xor
in
mov
jl
mov
jp
cmp
pop
or
jb
fs
int3
rcll
jp
test
loope
adc
scas
pop
js
mov
fsubrp
push
push
mov
ret
in
push
out
nop
push
mov
pop
iret
add
jmp
mov
add
mov
pop
inc
inc
fcoml
and
and
jmp
adc
adc
nop
push
dec
sbb
repnz
daa
sub
and
outsl
ret
xchg
jne
iret
cmp
jmp
repnz
sbb
add
jmp
pop
jb
jg
andl
mov
jmp
or
sti
in
adcl
xor
outsl
pop
mov
sub
inc
pop
jecxz
add
outsl
out
mov
popa
cmpsl
aaa
lret
sbb
es
inc
sbb
xchg
roll
fwait
jmp
incl
push
inc
pusha
lods
mov
sub
insl
push
xchg
cld
mov
ds
js
jp
lds
loopne
pop
aam
andb
jl
add
shrb
jns
push
cmpb
jo
popa
jge
lods
dec
jne
and
fmull
sub
mov
pop
xchg
fimuls
sbb
pop
sbb
xchg
shrb
adc
ror
push
ds
mov
pop
outsl
jmp
clc
cmp
mov
enter
inc
test
rcll
sti
xchg
mov
pushf
lahf
jnp
pop
ss
shl
xchg
sbb
fs
and
jbe
and
pop
push
flds
and
mov
pop
hlt
xchg
push
loopne
push
sub
or
ja
stos
and
adc
test
cmp
sbb
jbe
fdivrs
lret
and
mov
out
insl
pop
and
xor
sbb
sbb
mov
dec
sub
sub
jo
or
enter
fstps
aad
stos
out
mov
jg
in
add
mov
in
jnp
sub
dec
mov
dec
pop
dec
cmp
dec
mov
test
inc
test
es
test
mov
cli
outsb
and
lret
mov
add
mov
jle
dec
lahf
out
xchg
mov
lret
sub
rcrb
fsubrl
jae
jge
in
or
scas
andb
adc
jl
jnp
add
or
cmc
push
ds
mov
enter
daa
mov
lock
pop
mov
xor
mov
clc
das
pop
rcll
adc
stos
mov
jp
jle
mov
xchg
mov
xchg
xchg
shr
iret
mov
mov
aad
add
xchg
scas
mov
les
fcomps
xchg
add
inc
jmp
sbb
pop
xor
inc
xchg
loopne
jo
ficomps
push
fcmovb
mov
xor
push
faddl
mov
scas
hlt
test
xlat
test
mov
xchg
inc
cmpsb
sub
mov
shrl
or
xchg
ljmp
xchg
lahf
dec
mov
sarl
incl
dec
outsb
xchg
jnp
dec
push
cmpsl
sahf
cmp
mov
cltd
dec
testl
add
jbe
insl
cmp
les
mov
out
shrb
pop
lea
leave
jb
ret
inc
xor
pop
imul
mov
cmc
repz
imul
pop
jae
mov
jne
pop
push
repnz
add
or
sbb
jno
je
cmpsl
ret
cwtl
das
enter
pop
jnp,pn
je
lods
jb
in
push
sub
nop
inc
cmp
and
push
loop
sbb
xor
xor
nop
jb
mov
or
int
push
adc
ds
orl
mov
pop
in
imul
push
repz
add
sbb
iret
jnp
dec
or
stos
test
subb
and
fstpt
sbb
mov
out
add
inc
jmp
xor
cltd
pop
outsl
addr16
mov
loope
or
mov
xchg
sbb
sub
cltd
mov
mov
stos
xor
fldcw
popa
arpl
adc
or
inc
jge
mov
roll
enter
cmpsb
jp
jge
push
mov
mov
sub
sub
mov
mov
shlb
push
jle
pop
push
filds
xchg
xchg
sub
mov
jmp
lods
and
adc
sub
int3
bswap
dec
jecxz
lahf
roll
dec
mov
dec
pushf
dec
sbb
fwait
cs
repz
popa
sub
adc
arpl
leave
mov
mov
lret
insb
lods
fimuls
and
js
stc
dec
mov
xor
in
insl
int
inc
push
jns
pop
mov
ret
js
xchg
lret
push
lcall
test
xor
add
push
iret
push
and
mov
mov
cmp
ret
test
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
cmp
fisttpll
mov
fidivs
dec
js
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
imul
aam
adc
ret
and
scas
jecxz
or
mov
jecxz
jecxz
out
sub
mov
lods
and
mov
jns
aam
pusha
xchg
fisttpll
mov
sahf
je
jb
aaa
jo
mov
and
imul
mov
dec
xchg
repnz
es
into
cli
fcmovbe
lret
cwtl
add
test
out
xchg
or
fdivl
aaa
jno
lret
daa
pop
push
add
pop
call
push
sbb
jno
aad
cwtl
xlat
into
mov
fs
mov
mov
mov
outsb
iret
loop
mov
lea
fmull
lods
je
fimuls
scas
js
into
jmp
mov
outsb
iret
loop
jecxz
xor
fstpl
je
fmulp
pusha
xchg
int
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
jb
jno
fmull
pop
js
je
ficomps
dec
js
iret
loop
jecxz
lea
fisttpll
sbb
fsubp
arpl
outsb
add
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
lock
add
js
out
jmp
pusha
xchg
out
dec
js
iret
loop
cmpsb
popf
mov
dec
js
iret
ret
mov
dec
js
iret
mov
jecxz
mov
dec
js
icebp
out
jecxz
lea
fisttpll
push
jecxz
insl
pusha
xchg
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
dec
js
iret
loop
jecxz
lea
fisttpll
je
fimuls
in
mov
jge
fisttpll
in
or
cmp
cmp
iret
mov
ret
decl
sbb
mov
subl
dec
fimuls
fidivrl
pop
mov
inc
add
dec
mov
fwait
xchg
andl
mov
mov
out
scas
xor
mov
xchg
setbe
lret
or
jge
outsl
mov
decb
xchg
stos
loopne
jecxz
sahf
pop
movsl
jp
adc
stos
cs
icebp
stos
mov
sub
shll
jno
lahf
popf
inc
sub
mov
out
insl
push
lret
enter
adc
gs
mov
jle
sahf
lods
jo
shrb
xor
pop
jg
decl
mov
fcomip
mov
ljmp
cmp
ds
ja
mov
ret
or
cmc
es
rolb
mov
leave
jecxz
sub
or
sbb
cmpsl
dec
jge
lcall
xchg
cmp
xor
add
fs
mov
cmp
fistl
cmpsl
test
scas
and
sahf
ljmp
mov
daa
dec
pop
sub
call
and
mov
push
push
inc
popa
imul
pop
jge
add
jmp
lds
add
scas
xchg
mov
mov
cmp
lret
hlt
sub
leave
mov
test
dec
fldl
xchg
lock
jmp
pop
popa
push
int
mov
add
jecxz
cmpl
arpl
rclb
insl
sub
repz
clc
cld
ds
mov
pusha
xchg
sub
cs
or
cmpb
pop
je
pop
mov
fld
xchg
add
fimull
mov
adc
shll
arpl
lds
jl
sbb
or
std
repz
je
push
out
xchg
add
xor
sub
push
insb
add
cmp
cli
lcall
jb
mov
push
adc
cmpsl
aam
xor
mov
dec
loope
push
mov
test
sbb
cmp
add
inc
inc
push
or
out
ret
jb
inc
testl
xchg
adc
mov
xor
test
inc
inc
xor
push
inc
out
popf
jmp
test
cli
daa
or
rcrb
pusha
and
pop
stos
push
ja
jae
call
das
jmp
xchg
push
std
xor
lods
fbstp
imul
jne
jnp
sub
inc
mov
or
lock
icebp
les
outsl
imul
ds
or
and
movsl
fstpt
add
scas
adc
insb
mov
mov
push
jbe
xor
fsubp
jecxz
cs
and
jmp
xor
aas
mov
idivb
pop
jb
push
jnp
mov
lahf
jg
mov
pop
faddp
mov
xchg
fdivl
mov
xchg
testl
add
fwait
xlat
mov
in
inc
test
adc
lret
adc
push
cmpb
sub
push
movb
sahf
bound
pop
jecxz
rcl
dec
popf
lret
sbbl
cmpsb
jo
stc
stc
xchg
mov
xchg
pushf
test
leave
pop
cli
ffreep
mov
movl
mov
fildl
stos
push
cmpsb
cltd
hlt
cmp
js
int3
inc
scas
movb
adc
xchg
mov
loopne
mov
jae
scas
mov
add
jp
cmc
cmp
sub
xor
leave
lds
add
dec
sarl
mov
gs
repz
ljmp
xchg
xor
inc
out
hlt
pop
ljmp
fimull
push
inc
out
sub
inc
aam
push
and
lret
clc
adc
rcrl
enter
push
adc
shrb
or
adc
neg
push
sti
mov
js
dec
arpl
dec
out
lcall
inc
sub
xor
xchg
ja
and
jp
outsl
cld
cmc
adc
ffreep
fsubrl
cmpsl
mov
in
adc
rcl
jo
xor
push
repz
inc
int3
lods
dec
pushw
lods
cmp
rolb
inc
mov
xchg
sub
icebp
aad
mov
pop
ss
in
lret
in
movsb
pop
js
lretw
outsl
pop
jecxz
out
aam
pop
sbb
das
xchg
loope
je
mov
pop
repz
data16
inc
or
inc
inc
jns
mov
and
sahf
jae
mov
xchg
or
lods
leave
add
mov
leave
cmp
add
or
mov
mov
add
mov
xchg
insb
fsubr
clc
jmp
sub
das
insb
mov
scas
push
rcll
pop
mov
pop
insl
fildl
inc
lods
jecxz
lods
lahf
cmp
and
adc
push
loopne
push
inc
ret
ds
inc
and
push
mov
xor
out
or
rcl
push
sahf
mov
pop
sbbl
stc
clc
lea
mov
xor
js
cmp
or
xchg
test
in
xchg
mov
jl
ja
fsubl
imul
mov
push
and
cmpsb
testl
pusha
es
in
jne
jnp
scas
push
push
ret
mov
into
xchg
outsb
inc
xlat
stos
or
push
les
test
lds
jge
pop
shrb
push
xor
test
push
inc
test
fwait
mov
cltd
cmp
mov
add
lods
fcompl
ret
std
mov
adc
out
inc
lods
rol
lahf
push
xchg
pop
inc
fstps
push
sahf
jae
incb
fisttps
lock
push
test
dec
sub
mov
sub
test
popa
and
mov
js
sbb
xchg
lea
pop
ss
cmp
lahf
in
aaa
loope
sub
repnz
add
outsl
mov
lahf
scas
es
ret
or
mov
cmpsl
push
repnz
cmp
push
mov
adc
jl
or
push
popa
icebp
lret
xchg
je
mov
aas
int
lods
inc
fcmovne
aam
sbb
movsb
jne
and
outsb
and
repnz
insb
push
xchg
ja
dec
es
ja
adc
mov
push
loop
jp
ret
xchg
dec
lret
sbbb
or
cmp
stc
shl
icebp
test
xchg
addb
into
sbb
test
repnz
push
cmp
sub
push
adc
imul
jmp
mov
lods
test
lods
jp
push
sahf
pop
fists
mov
xorb
add
hlt
dec
push
cmp
scas
mov
dec
not
jge
push
mov
lea
mov
mov
mov
xchg
push
sub
js
out
bound
dec
fmuls
xor
inc
dec
mov
adc
iret
add
inc
lahf
pop
push
loopne
lahf
sub
and
cld
aaa
leave
decb
hlt
and
or
pop
pop
fcomi
mulb
xlat
repnz
sub
data16
fstps
je
and
mov
pop
arpl
push
ljmp
dec
fwait
xchg
and
outsl
fcmovne
push
lret
push
fcmovb
cs
imul
mov
mov
jg
imul
insl
roll
pop
ljmp
mov
xchg
jp
stos
cli
pop
mov
xlat
nop
lahf
sub
mov
mov
and
xchg
and
into
ret
jb
add
nop
mov
hlt
and
mov
hlt
jmp
push
dec
jae
adc
popf
subb
pop
jmp
dec
or
sbb
fisubrs
shrb
sbb
sub
mov
enter
lods
sbb
clc
jbe
shlb
je
mov
push
mov
js
sti
xlat
inc
pop
push
js
lds
inc
push
inc
push
and
mov
dec
sahf
lock
jnp
mov
jp
jbe
xor
pop
icebp
mov
sahf
arpl
dec
inc
test
test
jb
sub
outsb
jb
cltd
mov
mov
cmpsl
or
fxch
mov
mov
or
out
divl
and
or
sbb
and
jno
stc
scas
fs
pop
push
jl
ljmp
inc
mov
xlat
es
cmp
loope
fs
sbb
cmc
jns
data16
fisttps
or
push
or
aaa
dec
dec
mov
aas
and
rcrb
cli
adc
loope
dec
sub
add
push
add
jne
pop
fldpi
jmp
mov
jle
push
push
dec
cld
popf
fs
in
adc
sub
xor
movsb
dec
jnp
loopne
fidivl
xor
pushf
loop
mov
outsl
and
cmpsl
mov
jns
jmp
xchg
and
lods
aaa
sub
inc
mov
imul
mov
out
cmpsl
xchg
lcall
jecxz
mov
nop
mov
int3
cmp
mov
fwait
fs
and
orb
jo
pop
idiv
in
pop
push
sahf
leave
xchg
jns
lock
outsl
ds
lcall
fldenv
int3
push
sbb
jmp
push
in
fwait
inc
les
mov
sahf
pop
mov
aas
jno
lds
addr16
aas
xlat
sub
fcomi
icebp
fisubs
mov
cmp
test
cmp
add
cmpsl
gs
cwtl
lahf
frstor
out
icebp
mov
ds
ja
mov
fdivrp
push
lea
mov
cwtl
sbb
mov
pop
js
mov
ror
lret
add
inc
std
xchg
add
mov
cmp
dec
dec
sub
pop
scas
rcl
xchg
aaa
mov
add
mov
sbb
outsb
sbb
lods
mov
int3
imul
out
and
gs
add
mulb
pop
addr16
pop
pop
aad
adc
fwait
iret
adc
lods
fildl
movsl
cmp
sbb
mov
jecxz
adc
push
lds
ljmp
lret
test
xor
mov
inc
add
ss
cli
jnp
shrl
inc
sub
push
arpl
repz
pop
lods
sbb
fdivs
mov
clc
push
or
pop
and
xor
add
movsb
mov
jl
or
jne
jno
orb
js
dec
outsl
movsb
xchg
xchg
xor
pop
imul
and
into
out
push
loop,pt
and
sahf
stos
mov
pop
jbe
fldl
cmpsb
mov
pop
adc
shl
aaa
imull
xor
xchg
inc
lods
mov
fcomi
movsl
mov
insl
clc
rorb
cmp
cmp
test
lret
xor
ss
xchg
sbb
sahf
arpl
add
push
jmp
insl
rcrb
outsl
ret
add
or
inc
push
dec
into
cmp
repz
test
mov
mov
int
pusha
lret
sub
jecxz
pop
jl
cmp
add
or
mov
cli
rolb
je
pop
pop
cltd
jne
les
mulb
lahf
jo
adc
test
repz
adc
aas
xchg
jl
ja
cmp
and
mov
push
sub
icebp
mov
mov
enter
pcmpgtw
scas
insb
xor
stc
cltd
sbb
mov
dec
adcb
in
and
cld
out
xor
pop
fdivr
lods
pop
pop
jl
fdivl
and
adc
inc
mov
lods
loope
scas
cmp
jnp
push
push
sbb
mov
fsub
jmp
xchg
adc
inc
jmp
mov
mov
out
inc
loopne
mov
gs
out
xor
mov
testl
mov
dec
loopne
fisubl
push
jmp
bound
daa
pop
js
xor
pop
add
jns
es
jo
dec
adc
lock
mov
push
inc
ret
push
xchg
cmpsl
jp
test
ret
mov
push
adc
mov
push
leave
push
pop
stos
xlat
pop
out
mov
je
cmpsb
std
cltd
mov
pushf
xorl
add
sub
ds
cltd
cli
add
mov
and
add
mov
dec
rcrl
cli
jno
stos
fdivl
cltd
adc
loop
mov
jns
enter
sbb
and
repnz
or
sub
xor
cmp
cmp
push
pop
lods
add
pop
incb
sbb
mov
repz
cli
jp
cmp
cld
xchg
test
mov
cwtl
push
fucomp
adc
sbb
adcl
bound
adc
ret
out
mov
jmp
jmp
lods
pushf
adc
adc
fsub
in
je
xor
mov
sub
cltd
mov
mov
lret
out
xor
xchg
push
xlat
mov
pop
fwait
sti
pop
cmp
mov
cltd
mov
dec
push
dec
call
cmpsl
testb
pusha
inc
cmp
inc
jbe
inc
or
out
fiaddl
xchg
mov
xor
sbb
test
cs
bound
test
and
sub
pop
lods
mov
mov
add
sahf
test
daa
sub
rcll
int3
js
inc
lret
loop
sub
inc
adc
outsb
enter
cli
ret
jno
adc
jle
pop
xor
xchg
outsb
sub
popa
dec
jecxz
mov
cmc
xor
mov
xorl
xchg
push
fistpll
shll
sub
movsb
push
sti
jb
xor
lea
mov
mov
adc
imul
into
jno
push
daa
repnz
xlat
cld
cmp
lds
xchg
push
fmulp
das
xchg
repnz
int3
jl
pop
xchg
mov
insl
push
push
in
jae
dec
les
pop
push
jnp
mov
xor
jg
orl
mov
gs
or
daa
repz
repz
lret
out
leave
sub
js
aas
adc
rcl
inc
out
imul
mov
popf
pop
shlb
popf
mov
jp
inc
sbb
dec
or
outsl
pop
sub
into
sbb
and
sub
test
pop
pop
dec
pop
mov
sub
stc
jns
sahf
jae
or
stos
stos
push
lds
pop
stos
out
mov
push
or
fcom
mov
mul
mov
leave
dec
or
cmp
add
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
