xchg
add
add
inc
inc
add
add
add
addb
mov
inc
add
and
add
sbb
or
xor
xchg
inc
jp
les
or
mov
mov
dec
loopne
push
add
mov
mov
add
inc
loopne
add
mov
out
sub
fsubl
add
add
add
adc
add
inc
inc
mov
mov
popa
inc
bound
add
and
mov
add
add
gs
mov
movsl
and
shlb
or
xor
mov
add
add
mov
adc
mov
fs
nop
add
push
or
xor
cmp
mov
mov
add
adc
mov
sub
sbb
xor
or
mov
add
mov
xor
xor
add
or
or
adc
push
or
sub
mov
dec
lret
or
adc
add
addb
xchg
addb
add
rolb
or
addl
add
and
add
test
add
and
pop
add
and
or
add
mov
adc
dec
add
cmp
push
mov
sub
addl
adc
mov
add
pop
or
or
and
sbb
or
sbb
popa
push
add
push
add
rorb
or
or
mov
sbbb
sub
sbb
and
add
add
test
in
or
cwtl
add
add
loopne
add
addb
push
add
ficoml
add
mov
and
or
add
rolb
sbbl
popa
add
xchg
and
aaa
add
mov
shlb
mov
js
sbb
sub
add
ss
es
dec
or
and
test
add
adc
orl
sub
add
add
inc
sbb
xor
add
xor
and
or
add
or
adc
and
add
add
cwtl
and
adcb
shlb
or
subb
adc
les
and
inc
add
adcb
ret
sbb
inc
and
iret
xchg
inc
or
add
arpl
adc
and
mov
sbb
movsb
adc
and
add
mov
or
add
add
sbb
xchg
dec
orb
adc
and
test
or
add
and
push
stos
and
add
mov
mov
and
subb
adc
adc
add
movsb
and
mov
xor
ret
push
sub
and
lcall
add
mov
add
add
or
sbb
add
add
sub
adc
add
pop
add
push
bound
or
add
add
xor
pusha
andb
push
pop
rolb
inc
addl
mov
push
adcl
aam
fcomps
rcl
xor
or
dec
or
and
add
rolb
add
add
and
and
push
add
add
add
inc
dec
xchg
imul
sbb
add
add
add
dec
and
mov
xor
addb
add
and
adc
adc
add
xchg
mov
add
adc
and
and
xor
bound
mov
push
add
add
add
addl
add
add
addb
nop
xor
add
addl
mov
out
push
add
imul
add
mov
add
push
lret
and
ds
popa
dec
add
xor
inc
pop
and
orb
add
add
ret
add
xchg
dec
push
or
inc
cmp
inc
test
dec
and
add
sub
fwait
out
pusha
or
add
add
add
xchg
inc
adc
mov
nop
adc
pop
test
xor
cwtl
sbb
add
inc
andb
add
dec
add
stos
or
pusha
add
mov
and
add
enter
test
jo
add
loopne
addb
test
bound
subl
add
and
cltd
and
addb
cltd
es
push
add
inc
add
adc
or
and
dec
add
movsb
inc
ret
aam
or
mov
and
in
add
push
inc
add
andl
sub
xchg
adc
sbb
and
and
fs
xor
inc
and
addb
mov
pusha
add
add
add
add
and
mov
add
or
nop
orl
nop
push
test
addb
push
mov
movsb
lods
nop
adc
add
jae
add
orb
add
orl
add
dec
add
les
add
or
xor
sbb
add
jo
sub
inc
sbbb
inc
adc
push
adc
and
inc
sbb
rclb
test
nop
push
or
mov
add
sbb
add
add
add
add
inc
inc
inc
or
or
push
add
gs
loopne
loop
or
add
pop
add
andb
test
or
inc
xchg
add
add
rolb
add
and
adc
xor
inc
adc
adc
dec
pusha
inc
inc
xchg
mov
andb
sbbb
xchg
call
sub
or
ss
inc
sbb
or
jbe
add
xorl
pusha
push
mov
add
add
push
sub
mov
inc
add
addb
and
inc
mov
stos
inc
sub
cmp
push
test
int3
jp
add
adc
add
or
lcall
or
addl
nop
add
rolb
add
orb
in
shlb
add
add
dec
or
or
add
test
add
orb
pusha
add
and
dec
add
and
add
add
and
add
addl
daa
pusha
or
addb
add
and
inc
or
adc
inc
leave
test
mov
es
sub
cmpsb
or
inc
add
add
repnz
sub
add
cmpsb
push
sub
add
and
or
adc
add
inc
inc
adc
and
shl
or
adc
test
or
dec
push
push
adc
add
add
adc
mov
addb
or
add
or
orb
xorb
mov
sbb
mov
mov
mov
and
add
inc
add
add
or
inc
adc
ret
add
adc
add
arpl
icebp
call
cwtl
or
push
test
xor
xchg
inc
call
sbb
mov
add
and
add
sub
add
add
or
sub
mov
add
add
add
xor
or
push
mov
and
rcrl
or
cmpb
sbb
and
xor
xor
adcb
or
inc
inc
add
and
mov
adc
mov
add
inc
pop
add
lea
pop
and
adc
add
inc
adc
and
add
adc
cwtl
test
or
cmp
adc
add
cmp
add
dec
sub
bound
les
sbbb
and
sbb
rclb
mov
andb
add
loopne
push
lods
and
adc
fmuls
adc
pusha
add
pop
sbb
sbb
mov
or
addb
adc
mov
and
and
xor
add
mov
add
ret
add
xor
adc
or
add
mov
inc
and
adc
and
add
inc
sbb
and
xchg
push
or
and
and
add
add
dec
inc
inc
inc
and
inc
addr16
add
test
mov
add
loopne
add
or
dec
add
and
push
push
adc
or
inc
inc
mov
add
pusha
inc
add
add
les
and
add
pop
or
inc
add
lret
loope
add
sub
add
adc
nop
loope
xor
inc
mov
andb
adc
inc
add
or
inc
and
or
add
sub
add
rorb
add
bound
push
add
add
inc
addb
add
dec
and
and
sbb
dec
rol
add
lea
dec
pusha
and
rcrb
and
pusha
push
fsubs
xchg
dec
add
add
ret
or
add
cld
adc
or
in
adc
adc
add
mov
adc
addb
aad
orl
movsb
sub
add
push
test
adc
add
add
or
dec
addb
pop
add
cmpsb
inc
adc
add
add
add
inc
add
xchg
and
add
adc
dec
push
xchg
add
jb
inc
out
mov
inc
mov
nop
rclb
mov
and
jno
adc
adc
test
dec
andb
and
xchg
push
cmp
and
or
pusha
lock
and
add
dec
dec
xchg
add
add
jo
data16
add
or
inc
push
adc
inc
add
add
add
or
shlb
sub
or
enter
cs
add
add
adc
or
and
shll
and
add
adc
mov
pusha
push
mov
push
add
and
add
mov
add
notb
mov
sbb
add
mov
and
push
inc
test
add
push
add
xchg
inc
or
inc
addb
mov
bound
sbb
and
push
mov
adc
cmp
cmpb
add
inc
rolb
inc
addb
sub
inc
xorl
add
push
dec
pop
add
mov
adc
cmp
sub
or
add
add
add
push
cmpb
inc
mov
or
or
and
and
add
pop
or
and
addb
add
mov
add
rorb
adc
add
inc
add
andb
inc
or
add
inc
adc
add
sub
xchg
mov
add
sbb
and
inc
add
add
adcb
bound
addb
sub
adc
or
and
inc
xchg
add
sbb
mov
adc
add
rcrb
mov
adc
inc
hlt
dec
and
call
add
inc
and
adcb
push
xchg
sbb
fnstcw
push
pop
or
adc
xor
mov
mov
add
popa
add
add
add
or
inc
sbb
adc
xchg
add
mov
add
or
add
or
add
inc
test
add
xorb
lret
push
mov
mov
and
add
xor
add
add
jmp
inc
push
add
xchg
xchg
add
add
add
add
nop
xorb
inc
test
add
adc
adc
push
adc
sub
inc
add
add
dec
add
lds
or
and
add
nop
add
push
bound
addb
add
inc
adcb
add
adc
sbb
adc
and
orb
mov
cmp
popa
add
adc
mov
sbb
lea
or
xor
add
push
pusha
add
andb
and
inc
lret
xor
jno
xor
adcb
mov
add
and
add
or
mov
and
add
add
hlt
or
or
add
add
or
add
inc
add
xorb
and
add
or
les
and
add
and
andb
inc
add
add
addb
add
add
add
nop
and
and
add
and
add
inc
add
inc
push
test
mov
inc
and
andl
add
or
add
and
jno
add
xor
sub
push
add
roll
mov
and
add
arpl
add
daa
xlat
add
sub
add
add
inc
or
inc
push
inc
add
add
inc
inc
dec
addb
add
adc
adcl
add
add
add
or
add
add
or
mov
add
add
dec
inc
add
rolb
add
nop
add
ss
add
or
inc
test
add
add
push
adc
mov
inc
add
mov
inc
jo
inc
mov
adc
jno
adc
addb
pusha
adcb
adc
nop
add
inc
and
add
and
and
inc
and
add
rolb
rcrb
push
xor
and
or
sbb
and
jo
dec
or
dec
or
add
lret
adc
or
or
xchg
or
inc
sub
mov
and
adc
and
push
add
adc
mov
or
or
sbb
inc
xor
cwtl
or
test
add
loopne
add
inc
or
dec
inc
mov
inc
or
and
cwtl
roll
adc
or
inc
nop
xchg
add
test
subb
inc
add
adc
sbbl
and
add
jo
adc
cltd
sbb
xor
mov
xor
sbb
add
adcb
add
sbb
icebp
add
rcrb
pusha
cwtl
lcall
push
add
xchg
and
test
addb
inc
sub
adc
add
inc
pushf
xchg
and
adc
and
add
and
mov
inc
add
add
sbb
movb
add
arpl
nop
or
inc
addb
andb
and
shlb
push
mov
rolb
mov
inc
xor
mov
and
and
push
and
add
nop
sbb
addb
test
add
mov
adcl
adc
mov
roll
and
or
cmovo
push
shll
xchg
add
and
rorb
adc
and
add
addb
adc
inc
bound
add
sbb
adc
or
or
add
pop
rolb
les
or
je
arpl
dec
add
inc
shl
push
pusha
add
add
mov
pop
add
inc
addb
add
dec
arpl
inc
add
sbb
adcb
test
dec
add
rcll
mov
add
and
and
sbb
push
and
inc
pop
ret
add
or
and
and
push
and
xor
orb
outsb
adc
rol
and
xorb
add
dec
fcoms
push
loope
push
es
or
xor
or
dec
sub
and
adc
add
adc
push
xchg
dec
or
or
add
adc
add
inc
sub
inc
mov
nop
mov
add
adc
cmpsb
add
push
add
inc
inc
repz
inc
add
and
nop
dec
or
and
in
mov
add
nop
dec
roll
orl
dec
pop
and
popa
add
addb
add
push
add
add
and
add
mov
pop
mov
dec
orl
cwtl
dec
or
inc
add
inc
add
mov
inc
add
sub
sbb
add
inc
and
sub
test
add
add
inc
movsl
add
andb
add
sbb
or
sub
sbb
or
adcl
and
bound
mov
and
adc
inc
add
imul
add
mov
inc
add
jns
sub
les
sbb
or
mov
adc
xorb
and
and
jne
add
sub
jo
pop
rolb
adc
or
dec
pop
add
add
or
adc
mov
or
inc
jo
nop
add
inc
add
and
mov
sub
or
cmp
xchg
add
nop
add
mov
nop
sub
push
and
add
mov
adc
push
mov
inc
sbb
xchg
arpl
inc
add
pop
insb
or
addl
lock
add
test
add
and
jno
add
inc
add
dec
adc
bound
dec
sub
sub
enter
addb
add
and
add
adc
mov
rcr
xchg
or
push
add
xchg
add
add
and
push
add
inc
stos
push
or
mov
inc
jno
adc
nop
or
es
add
or
xor
or
pop
and
or
aam
sbb
add
inc
and
or
add
shll
add
and
add
add
add
and
add
movl
mov
push
subl
pop
add
sub
cwtl
add
sbb
add
or
inc
mov
inc
js
les
andb
inc
inc
add
sub
adc
sbb
in
inc
push
or
or
mov
addb
mov
xor
cwtl
or
pusha
outsb
jno
and
roll
sbb
add
test
adc
add
sbb
add
movsb
inc
mov
orb
addb
xor
mov
pop
adc
adc
add
nop
or
movsb
add
lcall
inc
int
or
add
inc
or
rclb
or
add
or
or
mov
adc
push
and
adc
or
add
or
add
mov
adc
adc
sbb
add
xor
add
rcrb
js
push
or
adc
pushf
sbb
mov
in
sbb
or
push
dec
subb
mov
push
mov
dec
and
and
and
add
push
inc
add
inc
add
mov
inc
mov
xor
mov
mov
or
adcl
adc
add
inc
nop
pop
add
or
sbb
test
add
add
or
and
inc
or
adc
push
jo
add
add
es
adc
add
jo
stos
dec
add
adcb
popa
xor
inc
add
push
push
adc
add
adc
inc
mov
jne
mov
adc
add
adc
inc
or
orb
cmp
mov
rolb
xchg
adc
adcb
add
addb
add
or
rolb
fisttpl
test
xor
or
nop
or
or
or
adc
adcb
add
add
sbb
and
addb
add
andl
and
inc
and
inc
stos
addl
andb
loopne
hlt
add
mov
add
addb
or
add
add
push
add
inc
mov
fadds
inc
adc
add
pusha
mov
inc
addb
push
nop
inc
adc
and
inc
insb
pusha
movsl
jo
mov
sbb
inc
add
sbb
inc
or
inc
inc
mov
cwtl
mov
and
or
push
inc
addb
addb
add
add
add
and
push
add
add
or
add
push
xor
sbb
and
add
inc
adcl
test
orl
mov
add
adc
or
pusha
subb
mov
add
dec
insl
inc
lds
test
test
addb
test
mov
add
addb
inc
rolb
test
test
mov
xor
add
adc
or
orb
add
and
and
add
adc
inc
inc
push
inc
or
sarb
and
sbb
inc
rorb
cltd
dec
or
or
or
add
xor
and
mov
add
sub
or
pusha
or
and
cmp
add
and
adcb
inc
or
and
sbb
enter
mov
add
adc
adcb
jnp
sub
add
inc
shrb
add
add
test
adc
and
or
addb
add
xchg
add
push
and
lea
adc
push
and
bound
test
inc
mov
cmpsb
add
push
roll
and
sub
add
sbb
and
and
adc
add
or
imul
or
add
dec
sbb
inc
sub
adc
imul
adc
dec
inc
add
push
popa
inc
addb
add
mov
cwtl
test
enter
inc
push
sub
popa
add
adc
jb
add
mov
or
sub
push
ja
and
adc
adc
sub
inc
add
lock
and
inc
mov
or
test
sub
or
andb
and
pusha
mov
inc
mov
sub
add
and
xchg
and
adc
pop
inc
add
add
pop
sbb
inc
pop
pusha
push
test
adc
pusha
add
add
dec
or
and
inc
adc
test
add
add
add
add
and
add
and
push
subb
add
sub
rorl
add
and
mov
sbb
andl
sbb
add
add
xor
push
and
or
add
inc
adc
rclb
add
and
add
add
add
mov
add
add
pusha
add
adcb
shrb
add
add
js
xor
add
and
mov
inc
adc
add
and
adc
lcall
adc
add
add
mov
add
adcb
or
mov
add
add
push
popa
test
cmp
les
fadds
add
mov
or
or
adc
or
adc
addb
add
andb
push
add
nop
rolb
mov
adc
inc
add
add
add
add
inc
add
add
ljmp
inc
bound
jle
or
inc
or
inc
les
orb
or
mov
sbb
add
or
addb
movsb
sub
add
xchg
xchg
ret
addl
adc
rolb
inc
adc
sub
movsb
push
orb
ret
sub
add
test
add
and
and
sbb
push
add
and
nop
data16
sbb
add
mov
and
mov
ret
test
and
mov
adc
add
nop
add
adc
insb
dec
adcl
movsl
and
mov
adc
push
or
adcb
and
or
nop
add
rorb
loopne
adc
push
add
adc
xor
bound
and
add
addl
add
and
xor
nop
push
and
and
test
add
xor
movsb
push
add
rolb
add
ret
push
add
xor
and
adc
inc
push
and
add
bound
and
test
or
sbb
dec
and
and
or
and
inc
xchg
and
add
mov
push
xor
pusha
add
add
push
xor
xchg
inc
adc
add
add
or
and
adcb
xor
imul
or
test
add
cwtl
or
xor
adc
add
xor
or
inc
and
andb
and
mov
mov
adc
adc
add
and
mov
adc
inc
cwtl
subl
and
inc
add
and
loopne
sbb
test
and
and
pop
and
xchg
sub
cwtl
add
or
push
add
shrb
xor
pop
inc
pusha
xorb
add
add
inc
xor
popf
addb
addb
adc
add
sbb
add
test
cwtl
or
adc
or
rclb
adc
push
push
add
adc
jno
add
push
jl
add
adc
cmpsb
add
je
imul
add
stos
add
test
in
add
push
pusha
add
add
add
inc
or
or
and
mov
and
test
dec
xchg
or
push
sbb
inc
adc
add
or
rolb
xor
push
and
inc
add
andb
mov
xchg
add
addb
xor
or
xor
orl
and
dec
add
pop
or
or
inc
ret
addl
or
test
inc
push
inc
or
add
sub
mov
adc
mov
adc
test
add
xchg
add
orb
xor
adc
es
inc
sub
and
shlb
add
addb
add
or
add
add
ljmp
add
or
add
xchg
rolb
push
orl
adcl
add
sbb
add
rcll
xchg
addb
xor
addl
add
inc
imul
or
andl
add
addb
add
add
sub
addb
int
adc
and
adc
push
adc
or
rolb
xchg
add
adcb
dec
inc
arpl
adc
or
inc
or
push
inc
or
inc
and
xor
add
and
mov
add
add
add
pop
addb
mov
add
adc
add
add
and
test
mov
rolb
inc
adc
add
inc
mov
inc
popa
addb
xchg
xchg
dec
bound
push
push
adc
push
adc
and
test
add
dec
or
or
and
add
xchg
or
add
inc
inc
add
inc
xchg
les
sub
es
and
inc
subb
and
dec
sub
leave
adcb
and
xchg
add
addb
push
add
mov
sbb
or
adc
or
nop
and
popa
pusha
cwtl
les
add
mov
sub
inc
inc
lods
adc
push
add
or
or
push
and
nop
sub
addl
inc
adc
mov
jo
inc
and
sub
add
test
and
andb
wbinvd
add
or
inc
lret
push
or
or
or
add
sbb
add
or
test
or
push
inc
add
inc
add
pusha
addb
or
push
and
add
add
or
sbb
xchg
mov
adc
andb
and
adc
inc
sub
and
or
add
adc
mov
pop
and
inc
adc
pusha
and
adc
add
inc
mov
addb
bound
and
call
cmpsl
pusha
test
and
add
add
add
adcb
inc
adcb
mov
inc
add
xchg
lret
push
insb
andb
inc
adc
adc
or
cmp
adc
inc
add
or
movsl
sub
add
adc
or
or
dec
and
mov
add
or
jno
adc
call
xor
add
or
adc
and
push
adc
xor
sbb
inc
push
push
mov
addb
xchg
test
and
add
adc
test
lret
add
mov
orb
les
adc
add
pusha
or
add
inc
addb
or
or
add
add
add
fs
add
or
adc
adc
adc
or
dec
adc
sub
test
add
adc
inc
add
add
sub
dec
jno
addb
add
and
add
or
mov
add
andb
push
mov
push
push
add
add
pusha
add
add
adc
and
pop
adc
inc
leave
adc
add
or
test
shrb
push
inc
mov
adc
jo
inc
add
ljmp
add
xor
ret
nop
push
inc
add
add
orb
addb
arpl
shrb
adc
loop
adc
adc
inc
inc
and
xor
sub
push
add
inc
dec
inc
or
rorl
mov
pushf
add
rolb
push
dec
sbbb
add
or
inc
nop
add
add
add
add
aam
mov
inc
xor
add
or
or
add
adc
test
nop
mov
sub
adc
or
inc
and
sub
loope
add
je
xor
or
or
xor
adc
sub
inc
nop
andl
add
adc
add
pushf
and
rcrl
lds
lret
add
data16
and
add
pusha
add
adc
add
inc
add
popa
add
add
or
and
xchg
mov
mov
add
pushf
add
andl
ret
pusha
cltd
adc
andb
and
cmp
and
sbb
xchg
pusha
mov
dec
andl
inc
inc
add
add
and
add
or
test
add
or
add
adc
add
movsb
xchg
popa
add
test
sub
adc
push
inc
sarl
or
add
cbtw
adc
add
add
adcb
and
add
xor
and
add
adc
orb
dec
movsb
sbb
sub
push
jl
dec
adc
popl
add
add
sbb
pusha
or
add
add
addb
mov
adcb
add
test
inc
and
add
pusha
add
push
add
sub
sub
add
mov
and
cmp
and
push
add
test
mov
adc
mov
adc
addb
add
and
add
test
fiadds
addb
sbb
inc
adc
test
or
adc
or
push
inc
subb
push
mov
sub
sub
add
push
xchg
add
or
add
cmp
or
add
adc
add
add
adc
push
xchg
lcall
add
adc
and
pop
add
dec
add
dec
dec
add
test
mov
rolb
addb
inc
rolb
add
rorb
or
inc
or
adc
adc
rorb
pop
push
data16
add
xchg
add
dec
add
inc
sub
add
add
push
sbb
push
addb
add
and
or
add
pop
loop
adc
add
adc
or
dec
xchg
adc
and
xor
and
leave
add
or
add
subl
add
test
add
loopne
and
cs
add
pop
add
mov
cmp
add
add
ret
or
pop
mov
xor
daa
adc
dec
push
adc
loop
loope
add
and
mov
and
inc
and
test
rorb
addb
or
test
mov
pop
add
sub
adc
mov
inc
add
adc
or
orl
xchg
and
pop
add
sbb
cmp
add
in
xchg
and
or
dec
inc
ljmp
or
add
add
push
add
xchg
addl
addb
and
or
add
add
mov
push
and
dec
add
addb
or
xor
adc
jecxz
jo
add
dec
inc
add
and
rolb
xorb
andb
dec
dec
sbb
xor
inc
xor
add
inc
mov
jl
sub
adc
inc
add
cwtl
cmp
jns
mov
addb
mov
mov
inc
push
add
andb
xor
add
push
adc
or
add
push
xor
inc
adc
add
nop
or
in
mov
or
dec
dec
pop
add
jo
adc
add
add
inc
add
add
adc
xchg
add
add
add
add
push
adc
push
loope
orl
add
fs
add
push
add
adc
adc
push
cmp
or
or
adc
add
inc
dec
bound
or
or
add
movups
or
ret
jo
and
add
xchg
mov
loop
inc
add
inc
xor
inc
mov
sub
adc
nop
inc
and
pop
mov
add
add
push
inc
or
and
add
inc
and
inc
sub
push
inc
add
roll
fsubl
fs
or
dec
or
add
push
add
subb
add
sbb
inc
and
mov
xchg
and
or
and
adc
addb
sub
or
dec
add
add
mov
and
mov
push
add
add
and
test
inc
xor
or
mov
or
add
mov
addb
addb
bound
sub
inc
andb
xor
test
add
inc
inc
adc
test
xor
sub
orl
pusha
push
mov
sbb
daa
mov
and
cmp
mov
inc
add
add
nop
sbb
addb
and
add
add
mov
inc
or
jns
adc
add
sub
inc
or
add
sub
mov
add
inc
nop
add
add
mov
popa
or
add
mov
data16
add
and
add
add
inc
add
or
or
inc
and
dec
cmp
inc
and
mov
xor
push
add
addl
inc
inc
mov
sub
mov
adc
or
mov
adc
aam
addl
push
xorb
pop
adc
inc
loopne
mov
add
add
add
mov
xor
orl
add
dec
or
add
inc
adc
andl
add
xor
sbb
sub
adc
adc
pop
and
and
dec
push
add
adc
addb
inc
mov
add
fcom
or
or
or
insb
dec
test
push
and
inc
or
mov
xchg
add
and
test
inc
add
and
add
or
or
and
inc
and
and
and
add
orb
add
lar
inc
sbb
sub
jmp
xorb
adc
add
movsb
movsb
adc
add
add
nop
cmp
in
or
add
and
push
inc
shll
push
cmpb
leave
call
adc
mov
or
sub
or
add
nop
sbb
nop
test
add
add
push
adcb
andl
aam
add
inc
or
push
or
xchg
dec
mov
and
mov
addb
and
inc
or
inc
pop
rolb
orb
sub
sub
add
dec
sbb
mov
sbb
dec
test
xorl
addb
add
sub
or
and
and
push
and
mov
sbb
arpl
test
add
add
xor
addl
les
xchg
mov
or
mov
or
add
inc
jo
add
inc
adc
pop
imul
or
xor
adc
add
adc
addb
add
wbinvd
test
or
adc
inc
add
xor
inc
rclb
les
or
add
inc
push
mov
add
add
sub
inc
andb
sub
stos
mov
and
add
addb
add
add
cwtl
mov
add
or
test
inc
add
addb
xor
sbb
inc
add
dec
inc
add
add
add
mov
add
addb
rcll
test
mov
orb
or
adc
inc
adc
dec
add
add
and
xor
add
mov
add
adc
add
mov
dec
and
or
add
xchg
and
or
nop
lods
mov
sbb
adcb
add
sub
mov
popa
add
add
add
add
insb
and
push
mov
add
enter
nop
jno
inc
adc
xor
or
push
add
add
inc
or
add
inc
movsb
inc
add
adc
add
push
sub
fwait
inc
inc
add
inc
and
adc
adc
add
inc
add
sbb
add
mov
add
or
or
lea
push
inc
sbb
addl
adc
andb
fs
or
xchg
movsb
mov
ret
inc
add
or
addb
or
inc
mov
mov
roll
adc
mov
add
add
addb
or
adc
orb
adc
add
and
sub
mov
lea
addb
enter
adc
and
inc
sbb
bound
inc
or
add
or
add
add
add
adc
or
mov
rcrb
push
add
pop
adc
and
bound
or
add
and
adc
dec
add
add
add
add
and
daa
jb
xor
add
add
or
leave
mov
push
adc
add
mov
addb
mov
xor
mov
addb
or
fs
adc
and
or
mov
adc
test
inc
add
add
bound
adc
mov
add
and
add
add
add
add
and
inc
inc
ret
push
add
mov
or
or
add
pusha
sub
data16
sub
rcrb
inc
and
add
adc
and
mov
or
xor
sbb
xor
add
sbb
and
jno
push
adc
add
adcb
add
mov
push
add
sub
add
add
dec
and
or
loopne
mov
or
add
fwait
mov
stos
sbb
andb
push
sbb
lahf
inc
mov
adc
dec
add
add
adc
add
add
add
or
add
mov
cmp
inc
inc
add
add
and
test
and
adc
push
push
inc
test
or
inc
fdivl
inc
mov
xorb
and
add
and
add
add
insb
add
mov
inc
and
test
add
add
or
add
sbb
or
adc
add
push
mov
or
add
add
add
or
inc
mov
and
or
addb
push
inc
mov
pop
adc
mov
and
xor
inc
adc
and
xorl
inc
push
sub
inc
dec
pusha
mov
add
inc
or
mov
shrb
dec
and
adc
inc
dec
pop
test
add
and
add
push
and
orl
add
mov
fadds
addb
push
andb
adc
add
add
add
and
add
push
or
and
add
sbbb
inc
mov
adcl
add
and
inc
es
inc
add
lods
bound
add
or
nop
pop
add
inc
pusha
pop
addb
adc
mov
and
inc
sub
sub
xor
mov
sbb
adcl
adc
add
add
adc
and
xchg
sub
mov
insb
or
add
add
add
inc
andb
or
add
mov
sub
test
inc
or
or
imul
inc
add
adc
add
add
add
add
or
add
or
add
inc
sub
or
xchg
add
and
xchg
adc
mov
subb
add
inc
adc
and
or
push
push
sbb
adcb
ret
add
adc
xor
inc
mov
pop
add
dec
add
add
add
add
add
add
or
inc
and
or
and
push
rolb
push
sbb
adcb
dec
or
or
test
insb
add
test
or
or
add
adc
inc
or
adc
andb
imul
inc
andl
or
addb
and
add
push
dec
and
sub
sub
sub
add
push
add
adc
add
shl
in
and
test
addb
ljmp
test
adc
or
and
mov
dec
pusha
adc
sbb
mov
adc
inc
xchg
add
rorb
dec
and
addb
inc
and
add
or
mov
cmp
adc
push
xor
adc
add
xor
or
test
and
inc
add
addb
mov
or
add
and
add
add
fcom
adc
add
adc
adc
add
and
add
and
nop
add
adc
movsb
xor
add
or
add
push
adc
addb
sbb
and
adc
push
and
and
addb
add
adc
sub
inc
adc
popa
dec
adc
add
test
xor
inc
add
add
add
adc
inc
cmpb
adc
add
mov
shlb
popa
add
dec
adc
push
or
inc
xchg
adc
rolb
mov
and
addb
inc
add
and
pop
aad
and
adc
add
mov
jge
add
sbb
inc
xchg
xor
push
enter
mov
mov
dec
add
add
inc
and
adc
add
add
and
add
add
adc
xor
add
xor
roll
add
inc
add
xchg
add
inc
addb
sub
push
sbbl
inc
ret
adc
clc
and
add
rorb
xchg
pusha
and
mov
and
adc
add
and
adc
jo
add
nop
nop
or
and
adc
add
add
push
xor
dec
adc
ret
mov
sbb
orb
mov
ret
or
add
or
push
and
inc
and
xor
adc
adc
adc
addb
and
add
or
ss
push
add
scas
add
adcb
adc
inc
inc
add
nop
roll
adc
adc
add
xor
pusha
mov
and
push
shll
and
inc
add
push
push
dec
or
xchg
add
or
loope
adc
sub
add
mov
add
xor
dec
nop
inc
add
and
and
inc
add
xorb
pop
add
leave
sub
xor
loop
or
test
xor
add
jo
mov
subb
push
test
add
adc
add
or
and
add
and
xchg
add
mov
add
or
test
addl
cmp
add
leave
or
test
addb
dec
inc
and
push
mov
ret
add
add
inc
xchg
std
or
pushf
inc
sbb
in
or
add
and
rcrb
movsb
and
add
or
sbb
adc
xor
add
adc
add
or
adc
mov
xor
adc
xchg
add
jo
add
mov
inc
and
or
sbb
or
add
add
sub
and
and
lret
mov
inc
add
mov
add
or
pop
add
addl
subb
test
dec
sbb
dec
add
adc
pop
add
adc
adc
movsb
dec
or
rcrb
and
adc
xor
add
add
mov
inc
add
mov
xor
adc
xor
in
xor
cwtl
add
rol
adc
adc
adc
lock
and
and
add
add
dec
mov
push
add
add
sub
sub
and
bound
mov
mov
sbb
add
add
add
test
add
mov
and
stc
inc
xor
addb
stos
mov
inc
push
cltd
add
mov
sbb
and
add
push
add
add
push
test
inc
add
add
add
int3
sub
and
test
lret
xorb
add
add
and
sub
add
sbb
or
and
pushf
test
dec
pusha
or
add
add
adc
push
sbbb
add
jns
mov
or
adc
and
add
shll
add
add
xor
xorb
orb
orb
test
add
mov
and
addb
or
inc
xchg
dec
loopne
inc
and
push
mov
or
inc
adc
sbb
inc
xor
sub
and
or
adc
dec
adc
push
add
add
push
add
inc
add
and
push
inc
push
adc
add
adcb
push
adc
and
or
mov
test
or
lock
das
testb
sub
inc
inc
inc
rcrl
add
mov
adc
nop
add
adc
rolb
shlb
add
or
pusha
or
and
add
ret
popa
pop
subb
andb
or
add
addl
pusha
adcl
inc
inc
pusha
sub
mov
addl
test
xchg
add
sub
xchg
xchg
adc
and
add
roll
pusha
add
dec
inc
adc
or
addb
push
add
adc
add
add
xchg
scas
sbb
add
and
and
dec
push
adc
dec
adc
push
add
and
push
or
xor
add
add
or
and
adc
nop
and
add
push
addb
xchg
and
add
push
adc
and
dec
pusha
adc
and
rorb
add
and
sbb
addb
or
or
add
pop
add
inc
push
push
and
mov
loop
pusha
dec
push
addb
add
sbb
movsb
sub
or
int3
or
mov
movsb
inc
xor
addl
inc
add
adc
inc
sub
add
add
sub
push
add
and
popa
test
or
add
adc
adc
adc
push
or
sub
inc
and
adc
adc
pop
mov
add
add
and
add
add
andl
add
inc
add
and
or
and
add
adc
push
xchg
dec
add
xor
add
xor
add
orb
ret
addl
add
add
add
adc
sbb
mov
or
sbb
ret
and
loopne
insb
or
add
popa
and
mov
dec
loop
arpl
push
les
add
test
add
cmpsb
and
loop
add
add
nop
hlt
add
adc
and
add
add
push
daa
add
push
add
push
or
adc
addb
add
movsl
adc
push
add
or
xor
inc
push
push
jo
add
sub
adc
or
cmp
push
cwtl
adc
xor
mov
or
push
and
dec
mov
mov
vfrczss
mov
inc
add
or
inc
xor
add
add
les
inc
adc
add
cwtl
add
inc
dec
sbb
add
dec
mov
push
mov
sub
or
add
dec
push
inc
sbb
xor
inc
add
add
test
inc
or
xchg
add
mov
mov
add
adc
and
lret
add
add
xchg
rolb
inc
add
add
add
push
add
or
je
add
inc
add
add
add
adc
sub
add
add
adc
xor
mov
add
add
add
add
mov
xchg
rcrb
and
inc
addb
or
add
adc
and
nop
push
add
or
dec
add
sub
ret
sbb
rcll
add
push
adc
and
add
popa
jno
add
sub
add
adc
popa
and
or
inc
test
hlt
xchg
or
xor
loopne
ret
xchg
addl
inc
add
addb
and
and
mov
add
test
dec
inc
sbb
dec
add
add
sbb
adc
xchg
push
add
dec
test
adcl
xor
add
gs
and
and
inc
pusha
push
mov
andl
or
add
add
add
rcrl
add
or
aam
adc
test
addb
add
rolb
rcrl
or
push
add
push
sbb
xchg
inc
inc
cmp
stc
adc
adc
inc
add
andb
add
movsb
add
les
addl
add
xchg
adc
adc
inc
add
inc
xchg
sbb
inc
adc
adcb
xchg
or
popa
jp
add
adc
push
add
add
add
sbb
adc
xor
sbb
mov
add
adc
add
push
mov
add
and
or
add
cltd
movsb
incb
rorl
bound
add
and
adc
and
or
push
add
cwtl
jo
or
inc
push
adc
inc
push
or
push
pusha
add
add
or
add
mov
or
sbb
bound
xchg
rolb
adc
and
push
adc
sbb
add
and
adc
adc
or
xor
add
adc
shlb
xor
and
add
adc
and
add
adc
test
pusha
dec
cmp
or
push
dec
rolb
cwtl
sbb
add
push
mov
push
add
and
aam
add
dec
push
add
add
add
xor
mov
addb
add
or
test
inc
xor
sub
cltd
fcoms
sub
add
xor
push
add
add
pusha
dec
imul
xchg
xor
or
adcb
addl
adc
addb
sbb
fidivs
add
or
or
adcb
or
dec
and
xor
adc
test
or
adc
adc
mov
add
add
test
add
dec
sbb
inc
add
add
orb
addb
adc
enter
sub
orb
add
add
add
xor
jb
inc
adc
add
add
add
adc
add
add
add
sbb
dec
out
add
stos
sub
add
push
andb
sub
loop
loopne
or
enter
or
daa
add
add
dec
add
adc
dec
rclb
add
popl
loopne
inc
orb
add
add
and
cmp
add
addb
inc
mov
xor
roll
adc
add
lock
mov
call
mov
push
add
sub
and
adcb
inc
adc
addb
push
inc
or
loopne
and
mov
add
and
sub
cltd
mov
push
add
jns
or
adc
mov
or
add
sbb
and
sub
rorb
xchg
add
inc
or
add
adc
add
adc
and
inc
inc
andb
subb
add
pusha
andb
adc
inc
enter
and
and
or
sbbb
test
inc
xor
leave
add
add
nop
pusha
nop
mov
or
mov
inc
inc
bound
arpl
xor
mov
mov
or
subb
mov
add
or
inc
gs
add
add
sub
mov
push
add
pusha
add
add
subb
arpl
inc
add
imul
test
and
add
or
add
or
or
add
or
mov
xchg
ret
add
sub
cs
adc
add
add
mov
sub
pop
push
mov
cmp
adc
push
mov
add
add
add
mov
adc
inc
add
mov
add
sub
push
mov
add
sub
and
push
enter
nop
add
or
add
test
mov
adc
inc
addb
and
xchg
gs
dec
add
push
push
add
push
and
test
addl
add
test
movsb
pop
loopne
mov
xor
cmp
sbbb
add
and
dec
sbb
and
inc
add
add
add
popa
inc
xor
orb
inc
add
and
and
add
inc
andb
and
add
sbb
add
mov
and
push
dec
add
cltd
mov
xor
xor
enter
test
adcb
add
add
sub
cmp
addl
add
adc
and
addb
dec
jl
in
pop
adc
add
add
push
add
adc
inc
jp
call
orb
and
xor
ret
loopne
add
and
orb
mov
addb
add
add
loopne
or
xchg
addl
roll
push
test
adc
movaps
add
add
xchg
add
mov
add
mov
sbb
add
inc
inc
inc
andl
and
adc
adc
and
adc
leave
sub
adc
add
add
push
dec
or
loope
and
or
sbbb
or
cli
add
adcb
add
inc
addb
mov
popa
push
cltd
and
add
ret
add
pop
nop
or
adc
pusha
add
inc
in
add
imul
and
subl
enter
or
add
add
cmp
inc
adc
bound
mov
add
or
push
add
add
adc
adc
and
or
or
dec
sbb
or
add
or
dec
adc
addb
inc
dec
and
push
add
add
adc
inc
sub
add
movsb
test
push
mov
pop
inc
or
dec
and
nop
xor
inc
push
push
or
add
and
add
and
pop
add
sbb
or
or
inc
adc
add
add
xor
inc
les
or
sbb
sub
add
and
xchg
adc
add
and
es
or
add
or
inc
inc
add
add
or
inc
add
inc
pusha
or
cmc
adc
adc
xor
jmp
adc
sub
add
add
push
add
and
or
subb
and
and
sub
adc
or
pop
andb
add
add
adc
or
repnz
add
add
adc
shlb
hlt
popa
and
dec
nop
nop
test
nop
push
push
adc
inc
inc
or
enter
xor
add
or
or
and
or
dec
dec
sub
add
add
and
add
sub
adc
adc
inc
push
mov
add
xor
adc
inc
xor
addb
and
addb
and
sbb
js
and
adc
or
nop
dec
add
jno
push
add
add
dec
or
mov
add
add
add
nop
adc
inc
pusha
add
push
jb
xchg
add
add
add
adc
fadds
rorb
test
push
cwtl
push
adc
inc
jo
add
mov
and
test
sub
inc
insl
sub
add
add
add
pop
orb
and
mov
rclb
xor
lea
adc
inc
add
and
popa
arpl
shll
sbb
or
andb
add
rolb
test
pusha
xor
xchg
inc
jne
inc
or
nop
add
add
or
adc
adc
or
orb
mov
and
add
add
les
and
rorl
adc
js
add
sub
add
addb
push
add
sbb
inc
test
or
lret
adc
sbb
add
bound
add
and
mov
adcb
xorb
addb
add
nop
and
loopne
or
adc
push
cmp
adc
inc
sub
dec
and
push
xor
adc
daa
adc
adcb
add
pusha
and
add
adc
rorb
inc
xor
add
loopne
add
dec
add
inc
push
inc
or
add
push
test
es
adc
or
adc
xchg
adc
dec
add
or
xchg
loop
add
and
and
inc
mov
add
adc
xor
mov
xchg
add
orl
adc
add
inc
and
inc
dec
inc
push
or
and
add
add
or
add
add
add
rclb
dec
addb
aaa
inc
add
sbb
inc
adc
orb
jae
mov
pop
xor
adc
add
and
enter
nop
adc
rolb
mov
sub
add
inc
add
add
push
add
or
or
push
or
xor
add
adc
inc
adcl
mov
add
jo
adc
mov
outsb
inc
call
adc
add
adc
cmp
or
add
inc
push
push
mov
inc
and
sub
and
inc
and
xor
rolb
push
or
or
mov
cwtl
or
andb
inc
loopne
cmp
popa
add
push
sbb
adc
or
inc
inc
popf
and
movsb
inc
mov
loop
and
add
sbb
pusha
adc
or
ror
push
and
inc
adc
add
adc
inc
mov
movsb
xor
add
adc
push
add
add
and
mov
nop
add
add
rcrb
sbb
inc
sub
add
xor
inc
xor
xor
or
add
sub
and
rolb
or
mov
dec
arpl
add
add
add
and
xchg
add
call
mov
xchg
add
adc
and
mov
add
add
addb
insl
lds
adc
or
add
and
addb
and
add
add
and
or
dec
push
dec
add
inc
dec
loop
lods
and
test
or
jl
mov
xor
inc
push
add
add
jl
push
push
and
add
movsl
mov
or
repnz
addb
inc
add
les
adc
or
dec
add
and
and
mov
adcb
add
adc
cmp
and
pusha
add
add
add
inc
inc
or
addb
adc
add
dec
add
adc
and
xchg
push
sbb
sbb
and
rorb
rclb
add
add
mov
add
inc
pusha
xor
aad
mov
sub
rclb
or
pop
add
add
adc
and
ret
andb
adcl
and
dec
add
fs
or
or
addb
mov
adc
inc
add
add
adc
inc
and
or
and
xorb
addb
rolb
and
add
or
xchg
enter
adc
inc
inc
mov
push
or
xchg
inc
or
imul
leave
add
and
adc
mov
and
and
or
and
push
addb
add
sub
cwtl
addb
add
adcb
add
inc
inc
roll
add
add
addb
inc
add
push
or
add
sbb
rolb
rorb
mov
and
add
add
add
mov
add
or
test
add
rolb
add
push
adc
add
add
addb
mov
add
orb
add
add
adc
and
add
add
inc
mov
and
add
add
pusha
or
add
add
add
roll
addb
add
add
inc
sub
add
or
add
adc
add
test
andb
add
push
inc
and
loopne
xor
add
add
push
lods
add
and
add
xchg
xor
mov
add
add
ret
add
inc
push
add
sbb
add
add
add
or
adc
add
and
mov
ljmp
add
inc
addb
add
adc
test
aad
loope
cmp
lds
add
or
repnz
inc
add
add
inc
addb
add
inc
adc
add
add
add
add
add
and
push
and
inc
sbb
add
test
xor
adc
inc
loop
rcll
addb
add
sbb
add
adcb
add
inc
add
add
add
add
inc
sub
add
or
sub
add
test
add
pop
addl
and
cmp
inc
push
add
adc
adc
sub
or
or
push
rolb
add
add
add
nop
roll
add
roll
inc
sbb
adc
and
add
add
mov
inc
add
pusha
dec
add
and
dec
push
adc
push
sbb
mov
data16
add
add
nop
cmp
inc
pop
sub
inc
sbb
add
mov
add
add
imul
push
inc
add
inc
dec
or
nop
adc
inc
inc
addb
add
adc
or
adc
inc
rolb
inc
add
add
add
add
inc
pusha
add
add
adc
inc
sbb
adc
test
push
inc
or
dec
or
add
roll
add
add
inc
orb
add
add
add
add
add
adcb
dec
add
or
push
shlb
adc
inc
xchg
add
add
inc
inc
and
push
add
and
and
add
add
sbb
or
inc
add
add
loope
xor
add
and
imul
addl
mov
and
or
add
and
shll
add
add
add
and
ret
adc
adc
add
adc
inc
add
adc
adc
pusha
add
xorb
mov
rolb
and
add
dec
add
add
add
or
or
add
andb
or
add
add
add
add
adc
add
inc
or
add
adc
xor
cmp
adcb
add
inc
xchg
add
adc
add
inc
or
inc
inc
adc
sbb
add
add
add
inc
add
fldl
addb
adc
dec
inc
add
sbb
add
add
add
mov
add
adc
add
mov
and
mov
adc
mov
adc
inc
add
add
or
add
add
inc
add
add
bound
and
push
push
mov
orb
or
and
orb
adc
shlb
or
inc
add
add
adc
add
jp
add
adc
sub
sub
add
inc
push
adc
addb
and
push
sub
add
add
inc
add
and
adc
xor
push
add
pusha
loopne
adc
or
or
xor
adc
addl
cwtl
or
mov
arpl
add
inc
mov
or
add
add
add
add
add
add
adc
in
push
dec
inc
sbb
add
add
add
mov
and
les
push
test
add
inc
addl
andb
add
add
add
add
and
add
and
sub
or
add
adc
add
adc
cmp
or
add
add
inc
dec
inc
adc
add
push
addb
enter
add
shll
add
add
adc
inc
add
add
sub
or
add
add
add
add
add
pop
add
addb
and
xchg
add
adc
mov
and
mov
test
xchg
push
inc
xchg
add
pop
add
add
and
pop
inc
xor
and
stos
adc
mov
loop
add
or
or
add
push
int
inc
mov
adc
addb
add
add
adc
add
inc
add
rolb
add
add
lea
adc
push
push
roll
add
add
adc
adc
orl
mov
add
or
inc
add
add
pop
adc
mov
inc
add
addb
addb
add
add
loop
add
add
add
inc
addb
or
adc
or
add
adcb
or
add
add
nop
and
and
or
add
add
in
or
add
and
xor
add
inc
xor
xchg
add
push
or
push
jb
addb
add
adc
add
add
mov
add
xor
adcb
inc
add
inc
add
and
and
or
mov
add
push
adc
addb
add
add
adc
arpl
sbb
mov
add
addb
inc
add
add
orb
add
loope
add
add
push
and
add
orb
movsb
or
push
add
add
adc
inc
or
nop
adc
test
add
mov
test
inc
add
adc
add
xchg
andl
adcb
add
or
add
and
inc
mov
add
inc
or
orb
or
add
xchg
add
test
inc
add
mov
addl
add
add
imul
mov
add
add
inc
add
add
add
adc
add
rcrb
or
or
mov
xchg
sbbb
pop
adc
or
enter
or
add
add
add
or
and
adc
xor
addl
add
add
inc
addb
add
add
leave
add
adcb
and
add
and
add
inc
add
inc
dec
and
dec
inc
add
addl
inc
add
add
adc
inc
add
xchg
and
inc
enter
or
add
shll
add
adc
dec
push
adc
pusha
sbbl
addb
push
adc
or
add
or
add
add
and
add
mov
test
adc
rcrb
add
add
dec
add
lret
or
add
adc
add
add
add
cli
inc
add
or
inc
and
or
add
add
or
addl
add
aam
or
add
add
add
and
add
push
xchg
ret
inc
or
add
add
add
inc
xchg
add
sbb
test
addb
xor
sub
mov
inc
add
or
add
or
adc
add
addb
add
add
add
adc
add
add
inc
andb
cmp
add
andb
shlb
or
add
inc
xor
add
inc
add
add
inc
add
inc
mov
int3
add
add
shlb
pusha
and
or
push
adc
pusha
inc
add
push
adc
or
push
add
test
add
add
inc
add
adc
add
add
add
addb
and
inc
add
or
add
and
adc
cmp
dec
or
add
pop
add
push
or
inc
add
nop
inc
inc
add
adcb
add
inc
inc
add
push
mov
or
add
xor
mov
add
fs
add
xor
adcb
and
inc
add
nop
xor
and
add
inc
add
and
stos
nop
dec
or
sub
mov
cs
and
add
and
xchg
bound
andl
or
inc
add
bound
mov
add
add
sbb
and
mov
popa
inc
add
push
popa
add
or
inc
sbb
inc
add
cmp
addb
pop
add
adc
and
addl
test
add
or
add
push
add
or
add
add
or
pusha
add
add
or
andb
add
add
mov
aaa
pop
add
xor
jecxz
mov
add
gs
add
addl
add
sub
adc
or
add
or
add
inc
addl
add
add
add
dec
add
addb
add
and
add
or
inc
inc
inc
inc
add
and
add
mov
add
aam
inc
and
add
dec
push
mov
inc
add
and
add
push
add
xor
add
inc
and
and
and
adcb
sub
add
or
push
mov
nop
add
orb
add
add
and
add
roll
and
andb
add
mov
inc
or
sub
xor
xor
adc
add
add
adc
add
inc
add
add
add
and
adc
inc
addl
or
inc
add
adc
mov
xor
addb
add
add
adc
add
or
sub
add
sbbb
add
add
inc
or
add
add
add
add
add
enter
add
inc
inc
inc
add
add
dec
andb
inc
inc
adcb
add
add
add
popa
dec
and
push
pusha
xor
sub
pusha
shll
inc
add
push
add
adc
test
add
mov
sub
add
add
add
adcb
add
sub
xor
add
add
inc
inc
or
add
mov
add
leave
or
add
add
sub
add
add
inc
add
adc
xor
dec
jmp
mov
add
add
add
inc
add
inc
add
add
add
imul
add
add
adc
orl
or
enter
or
add
or
push
add
push
add
stos
add
or
pusha
push
push
add
inc
push
add
add
add
adc
inc
add
add
inc
andl
add
sub
dec
adc
inc
addb
add
imul
add
adc
add
addl
nop
sub
mov
xchg
add
or
inc
and
and
nop
adc
add
inc
adc
inc
add
push
mov
addl
push
add
add
and
dec
mov
add
add
adc
adc
add
and
dec
adc
movsl
adc
inc
add
lret
mov
and
add
jbe
mov
popa
add
and
add
add
inc
adc
add
adc
or
and
add
loopne
add
adc
sbb
add
sub
add
jno
mov
add
sub
cltd
cmovo
xchg
inc
movsb
orb
or
add
call
add
xchg
and
in
add
adc
add
or
and
add
inc
add
and
or
mov
add
shlb
or
adc
add
adc
or
ret
add
add
pop
add
and
sbb
push
mov
adcb
adcb
add
add
adc
push
dec
adc
add
cmp
and
add
mov
gs
add
inc
int3
pop
and
and
and
inc
inc
arpl
add
or
mov
add
pusha
dec
dec
add
mov
add
xchg
add
addb
add
adc
add
sub
adc
inc
add
orb
inc
rclb
and
and
mov
add
add
inc
add
add
add
add
rclb
adc
or
add
add
sbbb
andb
nop
adc
or
adc
add
imul
add
add
addl
inc
add
cwtl
andl
add
adc
or
addb
cmp
add
add
pusha
test
add
add
and
or
add
xor
jne
cmpsl
les
xchg
dec
addr16
dec
cmpw
mov
test
mov
mov
push
frstor
inc
mov
sbb
inc
data16
lret
dec
or
lret
dec
aam
cmp
mov
jp
rcll
loope
repnz
mov
fs
inc
adc
ljmp
test
ficomps
dec
popf
xchg
jge
in
xor
dec
pop
std
pop
lock
fs
outsl
fs
data16
xor
sbb
inc
data16
paddsb
flds
popf
push
dec
sub
data16
out
data16
fistpl
flds
and
adc
mov
sbb
mov
adc
mov
call
sbb
std
data16
xchg
nop
dec
inc
push
sbb
mov
push
fcom
jmp
fs
data16
pop
xchg
insb
in
icebp
es
in
dec
pop
mov
sbb
aad
rcr
inc
data16
dec
data16
fistpl
cmc
mov
cli
orl
ficoms
out
les
hlt
sbb
inc
ljmp
sahf
dec
push
pop
inc
sbb
inc
movsl
sbb
out
sbb
inc
data16
shr
jecxz
inc
outsw
fs
data16
xor
and
stos
ja
xchg
icebp
push
fs
rcrl
dec
icebp
and
fldt
sbb
test
mov
xlat
cwtl
dec
push
push
inc
sbb
mov
dec
mov
cli
fisttpl
fmull
movsl
cmp
push
fstps
jb
fcoms
jecxz
inc
mov
movsl
lds
push
cmp
sub
fldcw
addr16
std
inc
out
jns
xlat
mov
cmpsb
sbb
xor
aad
lock
cmp
sbb
xor
pop
roll
stos
jo
mov
aad
sbb
xor
fst
stos
sub
cwtl
jp
sub
outsl
aad
imul
cs
jbe
lds
or
aas
fisttpl
sbb
js
push
xchg
inc
fcompl
fldenv
pop
and
mov
push
mov
ds
add
mov
sub
aam
or
lds
push
es
fistl
call
sbb
pop
icebp
or
cmp
sub
fildl
pop
dec
push
sbb
das
movsl
lds
in
icebp
and
shl
dec
mov
out
shr
sbb
mov
dec
mov
das
lret
ss
fnstenv
pop
dec
cld
inc
pop
mov
push
sub
dec
data16
sbb
push
sbb
xchg
data16
sbb
das
test
mov
sbb
negb
fstpt
push
adc
push
dec
data16
inc
jecxz
aad
jo
pop
dec
fsts
mov
inc
leave
rcrl
les
or
dec
push
fisttpll
cmp
enter
in
inc
add
adc
lret
inc
xchg
std
or
jecxz
fs
outsl
fs
data16
xor
pop
loope
icebp
or
insl
data16
adc
in
xchg
rclb
mov
flds
and
dec
fstps
leave
mov
sbb
inc
jbe
push
xor
fwait
add
insb
movsl
cmpsl
pop
dec
rcrl
js
cwtl
dec
mov
fbstp
and
fldenv
adc
sbb
mov
imul
fs
into
sbb
jo
xlat
cmp
push
inc
data16
inc
hlt
sbb
movsl
lds
add
push
es
das
sbb
cli
dec
xor
sti
dec
int
dec
sbb
pop
cmpsb
push
fnstenv
lds
call
int3
mov
mov
pop
cmpsb
dec
dec
mov
sbb
out
cmp
push
inc
data16
cmp
fxch
imul
xlat
lahf
dec
push
pop
inc
pop
fldcw
or
push
jmp
xor
push
fnstenv
jge
ret
sbb
pop
cmpsb
sbb
int3
inc
loope
icebp
push
xchg
shl
sbb
andl
xorl
push
mov
push
aas
dec
fdivl
aas
shrl
and
rcrb
dec
mov
loope
gs
scas
xchg
pop
fnstenv
xchg
movsl
push
inc
mov
sbb
sub
cmp
jne
push
imul
push
sbb
movsl
push
sahf
mov
in
imul
fmull
pop
add
movaps
shll
int
imul
pop
in
mov
push
inc
inc
faddl
ret
sbb
or
sahf
icebp
std
inc
dec
lcallw
ss
data16
in
icebp
mov
pop
and
dec
fistl
dec
inc
jb
pop
mov
add
push
sbb
inc
push
fs
xchg
jmp
rcrl
and
dec
fcmovnb
in
outsb
cmp
pop
fstpt
dec
add
loope
imul
into
sbb
das
je
cmp
test
popf
pushf
xor
fs
push
movsl
ss
outsb
jne
push
imul
cwtl
int3
sbb
jl
jge
jmp
movsl
dec
mov
imul
loope
imul
ret
movl
inc
xchg
sub
insb
gs
movsl
push
sub
jns
imul
fxch
or
dec
dec
mov
sbb
gs
or
sbb
movsl
sbb
icebp
and
sarl
push
and
pushw
lds
add
and
mov
es
sbbb
sub
pop
out
lods
pop
loopne
xchg
lods
sbb
mov
push
fsts
sub
fcomp
jbe
pop
mov
data16
adc
int3
sbb
xlat
stos
sub
lahf
mov
ss
jo
fisubl
out
sti
outsl
cwtd
add
inc
push
mov
addl
sarl
sub
dec
cmp
xor
insl
fcoml
aad
jecxz
jae
loopne
mov
xor
lods
jecxz
pop
jb
mov
jb
sbb
loop
sti
or
fs
enter
dec
addr16
add
cwtl
inc
out
fbld
and
push
arpl
outsb
cmp
mov
jp
mov
pop
pop
cwtl
mov
fistl
pop
fidivrs
enter
adc
loopne
jnp
xchg
pop
jg
std
push
jbe
in
mov
out
push
lcall
cmp
dec
lods
push
repnz
dec
sub
icebp
cmpsl
imull
push
rorl
rorb
push
not
fisttpl
dec
sub
xchg
jo
dec
push
je
out
mov
jne
sub
pop
shlb
dec
sbb
in
cmp
xchg
xchg
hlt
dec
jb
sbb
scas
pushw
out
cmp
jge
pop
idiv
sti
fimull
jl
lahf
shlb
sbb
cltd
sub
jge
outsl
or
imul
jns
sub
sub
sbb
stos
push
and
and
xchg
movsl
out
pop
pop
cmp
inc
cs
add
mov
lahf
inc
shlb
repz
out
lods
xchg
adcb
xchg
xchg
popa
popa
pop
je
push
inc
dec
mov
inc
loope
push
andb
or
sub
aas
pop
scas
pop
ss
loop
fistpl
lret
xor
ret
pop
pop
inc
mov
pop
outsb
sub
insl
arpl
into
in
jnp
cld
fmulp
sbb
pop
jge
mov
data16
mov
cmpsb
ja
les
mov
loop
sub
lret
jp
rcr
push
or
addr16
pop
inc
cmp
lea
fstl
mov
mov
jnp,pn
cmp
cwtl
dec
mov
xor
adc
adc
les
push
inc
or
das
cs
aam
xchg
mov
sub
mov
push
xchg
mov
lret
xor
lea
mov
and
outsb
aad
inc
jle
sub
fwait
loopne
mov
mov
loope
out
rclb
mul
ss
xchg
mov
mov
adc
add
push
mov
testb
bound
pop
sbb
jae
icebp
dec
and
cld
mov
cmp
adc
fmull
sarb
rcrb
fcos
je
inc
add
xchg
sbbl
mov
mov
shlb
xchg
pop
rorl
in
and
mov
cmp
cmp
filds
dec
fldcw
cmp
fldcw
or
imul
fstpt
push
mov
mov
dec
out
mov
mov
data16
or
negl
and
mov
lea
imul
xor
test
lock
xchg
fistps
dec
popa
fstl
ror
jmp
mov
imul
sub
je
adc
xor
stc
data16
test
mov
ficoml
fmul
or
push
sbb
test
sti
sbb
lahf
fxam
mov
ret
out
sbb
or
fsts
adc
jb
mov
mov
fs
sub
addr16
movl
or
push
shll
in
fwait
out
dec
sbb
cmp
dec
cmp
or
outsb
add
in
or
imul
data16
jae
ja
das
adc
fcmovb
push
pushf
push
xlat
mov
rcrb
and
stc
xchg
xchg
xlat
pop
insl
ds
xchg
push
or
in
cwtl
nop
adc
dec
sbb
pop
lods
xor
pop
push
popf
xchg
hlt
fcompl
xlat
repnz
inc
or
pop
sub
adc
pop
out
les
dec
sbb
pop
imul
add
adc
ljmp
xchg
lahf
push
enter
aad
movsb
adcl
sub
mov
sbb
loope
xchg
in
pop
sub
cs
mov
mov
xor
imul
sbb
add
addr16
test
pop
hlt
dec
adc
xchg
cld
mov
iret
fwait
hlt
lret
pop
pusha
jb
pop
clc
and
pop
clc
mov
sahf
jae
in
cmp
push
stc
cld
andl
mov
mov
pop
mov
cmp
inc
aad
sub
scas
cmp
and
pop
dec
pop
push
mov
mov
jne
addr16
and
outsb
jecxz
popa
out
jno
add
inc
enter
pop
xchg
rclb
sbb
adc
and
in
fdivl
and
out
stos
sbb
into
jg
cmpsb
jmp
addb
sbb
mov
xchg
ljmp
out
and
inc
pushf
dec
mov
cld
rcrl
push
cmp
icebp
xchg
pusha
inc
notb
decl
decl
jns
push
mov
ret
adc
in
cmpsl
std
jb
call
fcoml
aaa
fnstenv
bnd
pop
push
mov
js
pop
subl
fadd
mov
int
in
scas
mov
mov
flds
push
dec
in
add
sub
imul
es
rolb
or
adc
sete
pop
stos
out
pop
std
xchg
pop
xchg
fcoms
cmp
addr16
inc
jle
mov
inc
jge
jmp
lds
dec
dec
mov
or
int
mov
push
mov
and
rorl
jg
imul
lret
aad
dec
jl
sbb
cmp
mov
enter
dec
enter
arpl
movsl
xlat
jge
data16
jle
cmpsb
jb
gs
mov
imul
mov
push
pop
push
cltd
stos
mov
dec
nop
pop
enter
mov
aaa
fmuls
pop
push
nop
adc
xchg
cmc
mov
arpl
pop
rorl
xlat
nop
push
sbb
pop
push
xchg
das
mov
loopne
or
fwait
cmp
pop
popf
shrl
or
nop
jne
sbb
sbb
push
fbstp
jg
jo
xchg
in
dec
out
clc
ss
jno
cs
jmp
and
cmp
mov
ja
dec
xor
push
into
mov
ret
sbb
mov
sub
push
lods
push
and
sbb
lods
int
lret
mov
and
add
dec
sti
and
push
repz
or
mov
mov
pushf
adc
pushf
xchg
fsts
pop
cmc
xchg
adc
rcl
xchg
cmp
data16
aad
sbb
fs
sbb
ret
lahf
xchg
mov
mov
fs
cwtl
repz
enter
mov
mov
pop
xor
mov
sbb
push
push
out
xlat
xchg
and
or
dec
sub
cmp
in
mov
pop
and
sbb
pushf
dec
pop
aad
ds
mov
je
and
gs
cltd
fidivrl
and
adc
popf
std
or
inc
xchg
mov
xchg
out
fxch
cld
fdivrs
lock
imul
mov
and
out
and
sub
out
push
dec
xchg
mov
inc
jae
xchg
or
addr16
ret
movsb
mov
cmp
mov
psubsb
sahf
mov
or
sbb
pop
stos
jecxz
repz
fnstcw
ret
push
imul
ffreep
in
test
fstl
cmp
ja
mov
xchg
pminub
xor
cwtl
dec
mov
pop
clc
push
jne
icebp
repz
mov
sbb
adc
loope
divb
or
fwait
mov
add
cmpsl
and
and
fistl
sti
int
sub
sbb
out
dec
push
jb
mov
dec
mov
in
jns
dec
rorl
add
outsb
test
aaa
addr16
inc
dec
gs
stos
lds
call
bnd
adc
sub
rclb
sbb
push
repnz
fstl
dec
aam
pop
mov
or
fldenv
cmpsb
dec
ljmp
cwtl
cwtl
xor
and
gs
inc
sti
pop
mov
mov
fisttpll
rorl
dec
inc
rorl
es
xchg
jne
inc
jl
dec
mov
sub
mov
jge
fists
push
push
dec
and
cmpsb
test
std
sbb
mov
sub
mov
fwait
pop
fs
sub
dec
and
push
outsl
fsubs
test
sbb
pop
pop
sbb
arpl
fst
les
sbb
mov
or
into
sbb
daa
push
pop
dec
mov
ljmp
sbb
xchg
sbb
sub
in
jmp
push
testl
fs
dec
stc
clc
add
shll
dec
aas
mov
sub
sahf
pop
aas
dec
inc
lea
and
sbb
add
sub
or
enter
adc
loope
inc
xchg
cli
aaa
popf
mov
aas
and
bound
imul
mov
lds
pop
cs
mov
addb
sbb
mov
pop
movl
xchg
sbb
push
push
dec
push
sbb
push
fisubs
add
and
mov
test
sbb
js
mov
sub
sub
out
jge
sub
pop
pop
jmp
les
pushf
test
xchg
push
addr16
jle
stc
lret
jmp
out
fs
jbe
imul
jae
into
addr16
and
scas
ss
sub
mov
fsub
ja
push
in
cs
inc
and
inc
add
test
test
addr16
mov
test
inc
repnz
jns
or
xchg
int3
dec
cld
repnz
sub
out
lock
mov
and
aaa
cmp
mov
mov
aas
push
mov
add
xor
incb
sbbl
xchg
dec
and
mov
sbb
pop
mov
jns
pop
xor
cmc
iretw
xchg
ret
xor
mov
shrb
xor
cmpsl
pop
dec
add
sti
aam
addr16
int
cmp
sub
cmpsl
je
mov
push
mov
mov
pop
jbe
mov
fsts
xor
mov
in
aam
sub
scas
dec
int
sbb
dec
les
outsb
xor
dec
mov
sub
pushf
xor
adc
mov
add
pop
sbb
cmp
data16
and
push
mov
test
push
cmp
lret
loop
pop
add
dec
out
fidivrs
adc
xor
mov
mov
push
out
aas
lcall
sbb
repnz
iret
setge
mov
iret
sub
push
or
iret
sbb
imul
lods
pop
mov
xor
outsb
sahf
fucomip
fistps
xchg
mov
cmp
fisubrl
dec
push
push
mov
test
cmp
dec
nop
mov
sti
data16
fisttpll
sbb
jge
arpl
jmp
mov
push
pop
jo
movb
adc
xor
sbb
ja
rcrb
or
adc
cmpsb
out
int3
dec
cltd
dec
stc
sub
push
adc
adc
jl
repnz
js
in
lods
fisttpl
repnz
mov
nop
xor
jbe
and
push
mov
in
jne
fists
insl
xchg
and
jb
shl
dec
aad
faddl
lea
cmp
mov
mov
aam
mov
movsl
pop
push
mov
in
imul
sbb
xlat
outsb
out
push
ljmp
jb
enter
stos
xchg
sbb
mov
adc
or
cmpsl
add
data16
adc
imul
sahf
dec
loop
adc
push
int3
inc
fisubs
and
xchg
mov
push
sbb
mov
out
ljmp
andl
pop
sub
outsl
addr16
dec
in
data16
sbb
dec
ja
push
out
pushf
and
in
sub
mov
int3
lea
mov
ss
test
int
subl
out
rolb
mov
cmpsl
out
fsts
daa
pop
jae
cmp
and
mov
jo
insb
mov
push
loop
sub
fidivl
jp
testl
es
fidivrl
data16
movsb
and
pop
dec
ret
cld
inc
mull
aaa
dec
cli
insl
lahf
fmuls
lcall
xchg
mov
negb
lret
mov
and
pop
mov
into
sub
mov
popw
pop
pop
sbb
lahf
fisttps
add
xor
and
shrb
push
push
call
insb
icebp
dec
jnp
stc
lds
add
cmp
cmp
adc
fldcw
xchg
adc
popf
mov
dec
sbbl
into
inc
sub
mov
nop
faddl
cmp
stos
xchg
data16
jbe
sbb
cmp
xor
ds
imul
pop
mov
cmp
or
dec
data16
hlt
sbb
in
jecxz
mov
mov
mov
ret
mov
cltd
sbb
dec
add
jle
mov
push
inc
clc
jg
mov
dec
test
imul
add
mov
pop
jecxz
jo
jbe
ficoms
icebp
mov
add
pop
pop
sarb
cmc
push
cmp
vandpd
ret
test
mov
push
push
pop
popa
push
adc
dec
xlat
sub
sbb
and
sub
push
push
inc
xor
pop
loopne
sub
adc
arpl
ss
dec
xorb
mov
sub
in
or
scas
movsb
data16
xor
dec
sbb
cmpsb
xchg
gs
fisubs
jnp
jno
push
sub
ljmp
aaa
inc
or
mov
je
fstps
adc
mov
scas
bound
clc
dec
xor
fld
adc
scas
cmp
adc
mov
cmp
mov
and
cmp
adc
in
jnp
mov
fnstsw
sbb
mov
ljmp
mov
ja
popf
cmp
push
inc
cmp
in
js
push
jecxz
addr16
xchg
sbb
dec
sub
fmull
or
dec
jo
int3
sbb
cmp
jle
dec
pop
arpl
aaa
xor
xchg
sub
jle
xchg
dec
inc
cmpb
fimuls
xchg
xorl
dec
sbb
add
add
push
rorb
add
pop
sbb
loope
mov
adc
data16
mov
mov
jo
adc
cmc
lahf
loope
dec
xlat
and
cmp
sahf
jg
test
dec
ret
pop
fsubrl
sbb
lods
hlt
out
and
outsb
mov
xor
sahf
ljmp
push
in
cmp
mov
pushf
ret
mov
fneni(8087
aas
decl
je
std
jbe
push
sbb
fistpll
inc
mov
jle
mov
loope
mov
jno
xor
sahf
push
mov
aam
andb
adc
sbb
movsb
dec
jo
vpminub
mov
mov
lods
xor
sbb
lds
fld
shrl
shll
je
out
fldenv
pop
adc
aam
inc
out
mov
aaa
shrl
inc
addr16
repz
sbb
test
int3
rcr
dec
pop
add
dec
dec
fprem1
in
mov
rcr
lods
cwtl
bound
ret
out
stos
call
rclb
unpcklps
jle
inc
sub
mov
pushl
mov
inc
mov
shll
roll
dec
nop
fisubs
jo
aas
inc
adc
mov
xchg
fnstcw
fsubr
or
loope
push
pop
jge
dec
mov
test
addr16
ds
cmp
je
pusha
dec
mov
cmpsl
xor
addr16
push
lea
sbb
jp
cs
ljmp
xchg
cmp
lods
dec
mov
ljmp
sti
daa
scas
retw
jne
or
mov
insb
jb
lahf
aam
xchg
ret
pop
mov
mov
jecxz
clc
ja
enter
out
inc
decb
cwtl
arpl
imul
pop
or
into
inc
or
addr16
insb
adc
in
sub
jne
rorl
mov
push
stos
hlt
fstpl
jns
cmpsl
mov
sub
cmpb
cld
jne
dec
inc
sbb
xchg
inc
mov
leave
adc
ss
lret
pop
sbb
inc
add
sbb
sbb
push
loop
xchg
arpl
je
dec
lcall
sub
hlt
call
mov
push
push
insl
sub
push
pop
jg
push
mov
sub
stos
lcall
cmp
fldenv
and
mov
jle
ljmp
data16
jb
and
repnz
nop
cmpsb
shll
sub
jb
adc
sbbl
inc
mov
pop
pop
push
push
dec
jecxz
insb
sbb
jb
push
dec
dec
mov
je
xchg
jp
data16
daa
push
sbb
sbb
mov
cmp
sbb
dec
jno
jle
sbb
and
clc
in
dec
mov
and
in
imul
push
dec
hlt
fdivr
sub
push
inc
ret
data16
fsubr
sbb
push
mov
push
xchg
pop
subl
cmp
orl
xor
leave
mov
adc
icebp
push
pop
dec
xchg
dec
push
outsb
sarl
and
popa
jmp
jae
ja
in
pop
jne
in
jg
lret
xor
dec
ficoml
adc
fldcw
movsb
xorb
lock
je
pop
mov
push
aam
cwtl
sbb
fwait
mov
ds
aaa
arpl
pop
inc
aaa
test
sbb
pop
mov
cmpsl
xchg
hlt
icebp
out
sbb
fsub
loope
xchg
inc
adc
lret
xlat
xor
call
stos
mov
popa
push
insb
addr16
mov
daa
sti
rorl
sbb
movsl
in
mov
inc
movsl
or
dec
sti
ficoml
mov
imul
mov
pusha
sbb
hlt
lcall
lret
or
push
ja
sbb
dec
fdivrs
fxch
ss
sub
dec
pop
mov
sbb
in
cwtl
stos
cltd
xchg
lret
push
xchg
fnstcw
add
in
sarl
leave
xchg
scas
fdiv
fimull
lock
insl
loop
pop
cmp
mov
dec
lcall
dec
adc
jne
sbb
or
inc
cltd
add
sub
xchg
xlat
enter
cmpl
out
aas
rorb
cmp
aam
lods
push
cmp
sbb
pop
nop
add
xor
xchg
cmp
test
mov
mov
flds
sbb
inc
mov
or
or
sahf
fnstcw
jnp
mov
pop
insl
movsl
insl
fistps
cmp
sub
dec
cmc
dec
dec
jb
mov
mov
and
out
mov
rclb
mov
push
mov
or
fistps
mov
sbb
add
jg
mov
out
addb
cmp
dec
pop
sub
aas
into
mov
sub
in
add
loope
and
dec
mov
mov
scas
jl
movsb
mov
inc
inc
test
mov
push
andb
pop
add
push
mov
inc
mov
pushl
pop
and
pop
sbb
in
ds
mov
sbb
push
pop
rcr
sbb
stc
outsb
shrb
lods
dec
pop
scas
dec
sti
jle
cmp
out
jmp
cmp
ret
pop
movsb
dec
cmp
out
movsl
jne
sbb
test
xchg
rcrl
cmpsl
mov
adc
fnstenv
outsl
mov
loop
and
mov
or
icebp
in
dec
imul
and
fstps
jecxz
mov
mov
xchg
inc
fistl
add
out
cmovnp
insl
test
imulb
adc
inc
sbb
ret
subl
pop
dec
fsts
or
repz
or
xlat
jecxz
cmpsb
out
in
mov
and
pop
mov
cmpsb
inc
out
mov
les
stc
jbe
xchg
sbb
pop
mov
cli
gs
mov
mov
push
or
sub
inc
arpl
mov
mov
push
cli
shrd
mov
and
orb
mov
push
pop
xchg
dec
icebp
dec
rclb
xchg
add
cmc
push
xchg
xor
sub
cmp
leave
jecxz
addr16
sbb
cmpsb
sbb
pop
out
push
xchg
pop
pop
jns
add
mov
mov
lock
and
idiv
icebp
pop
movsl
outsl
rcrb
lods
mov
pop
lcall
lret
addr16
int
dec
aas
aam
repnz
jnp
addr16
sub
push
mov
dec
int3
pop
adc
and
xchg
out
pushl
add
es
pop
sbb
and
fsts
std
jno
dec
xor
hlt
push
lret
cmpsb
xchg
push
fsts
jp
imul
mov
mov
mov
test
movsl
sbb
push
xor
mov
pop
icebp
inc
bound
enter
push
test
data16
rcll
sub
inc
fsubrp
jae
dec
fnstenv
fs
and
loop
repz
enter
mov
scas
aaa
dec
js
hlt
loope
out
push
std
and
mov
inc
mov
push
cs
mov
cld
xlat
inc
scas
jne
loope
mov
inc
test
shrb
push
mov
mov
nop
sub
fidivl
adc
cmpsb
mov
sub
cmc
xlat
test
push
pop
mov
or
add
ja
push
inc
rcll
cltd
or
stos
sbb
xor
or
dec
leave
aam
xor
xor
dec
and
add
ret
loopne
push
out
gs
mov
fcomps
mov
popf
mov
dec
jl
outsb
mov
repnz
pop
dec
push
rorb
dec
data16
loopne
mov
push
sub
sbb
aas
loopne
loopne
or
push
inc
ret
rcll
sub
add
in
cmc
arpl
push
fwait
test
in
xor
push
insb
adc
or
pop
jo
push
out
xor
ds
dec
clc
test
mov
push
scas
adc
out
sbb
jne
movsb
cmp
stos
das
js
cmp
sbb
push
push
mov
jns
sub
adc
and
std
dec
xor
inc
or
dec
pop
fs
fisubl
dec
sbb
adc
pop
pop
addr16
stos
lret
packuswb
arpl
out
aaa
jnp
fldenv
xor
push
movsb
fcomps
or
add
int
jp
imul
mov
das
pop
das
sti
inc
jo
and
pusha
aaa
sbb
outsb
jns
push
cmp
in
das
add
push
pusha
dec
sub
stos
outsb
insl
cmp
shrl
sub
adc
push
adc
jmp
xlat
pushf
pop
adc
mov
mov
lds
push
je
adc
lods
in
dec
ja
repz
mov
shll
mov
or
stos
cld
inc
fldenv
in
mov
fs
fcomi
adc
mov
movsb
mov
pop
loopne
sub
dec
aam
ds
adc
and
test
push
mov
sti
push
out
rol
mov
push
imul
adc
jecxz
push
sub
dec
loop
loopne
fldcw
pusha
sub
or
out
out
cmp
mov
ss
addr16
pop
lock
aaa
ffree
dec
fldt
nop
fldenv
mov
lods
push
sub
dec
cmp
lods
mov
test
sbb
inc
pusha
push
cli
fsubr
ja
xlat
das
sbb
scas
data16
mov
pop
cmp
push
fsubl
rclb
gs
mov
sbb
ljmp
push
xor
arpl
popa
sub
xor
movsl
mov
push
or
call
mov
fld
pop
in
inc
inc
mov
add
dec
jecxz
add
push
stos
add
fnstcw
cmpsb
int
sbb
push
ss
push
int
add
out
jns
je
sub
pop
adc
adc
cs
aas
orl
shlb
jno
mov
dec
pop
dec
add
gs
or
aad
cmpsb
pop
push
test
fiaddl
shlb
js
notl
cltd
sbb
jb
jbe
movb
push
test
push
frstor
adc
mov
push
xchg
imul
call
lods
mov
das
addr16
fstps
rcrb
or
jno
cld
push
ficompl
popf
push
lcall
inc
mov
lahf
or
fbld
out
cli
inc
fsubl
data16
lods
push
test
cli
dec
sub
sbb
mov
cmc
push
adc
jae
sbb
jg
int3
repnz
or
loopne
add
xlat
paddd
mov
mulb
mov
add
xchg
outsl
sub
fldenv
push
mov
ss
insl
dec
outsb
fnsave
out
inc
ss
lret
imul
xor
inc
cli
fwait
jo
and
cmp
push
inc
stos
and
loope
jge
jle
pop
cli
dec
jbe
xchg
xor
stos
stc
cmpw
scas
add
sbb
or
fsubs
or
sbb
jbe
mov
dec
hlt
arpl
mov
sub
data16
into
test
cld
imul
add
add
sub
prefetchnta
fsubrl
sbb
xchg
push
sbb
cmp
push
fcmove
adcb
lret
lods
bswap
scas
mov
jecxz
inc
pop
push
fsubp
mov
inc
les
aad
sub
sbb
test
movsl
pop
mov
xor
loope
dec
add
push
dec
stos
xchg
jno
fyl2x
cmp
pop
pop
add
sbb
pop
dec
sbb
and
or
stos
repz
ja
pusha
xchg
sbb
pop
sti
repnz
jle
pushf
out
or
pop
repz
pop
dec
lock
mov
mov
sbb
je
movsl
stc
fnstcw
and
into
sbb
add
cmp
inc
frstor
mov
add
dec
sbb
adc
orb
jge
sbb
test
data16
scas
jno
dec
lret
ja
rcrb
jb
in
cmc
rcll
pop
in
sub
test
jno
insb
push
xchg
xor
scas
dec
cmp
mov
sub
enter
in
push
push
int3
and
out
pop
inc
cltd
test
mov
lahf
push
dec
lcall
leave
int3
in
out
bound
scas
lock
add
addr16
push
lea
incb
aad
mov
ja
sbb
testb
test
jb
or
mov
xor
mov
lock
int
hlt
sub
popa
iret
fldcw
pop
push
fistpl
mov
mov
gs
adc
mov
les
mov
mov
inc
mov
fldcw
in
jbe
cli
fnstsw
inc
enter
jmp
outsb
and
iret
dec
sbb
stc
mov
sbb
push
cltd
das
fldenv
stc
sbb
sub
mov
or
shl
je
out
popf
scas
mov
jp
cs
sbb
and
sbb
test
orl
mov
dec
test
sbb
mov
and
data16
mov
add
jno
rcr
xchg
movsl
and
repz
jne
hlt
sahf
pop
mov
jmp
mov
push
fnstenv
rcr
stos
and
jb
xchg
testl
pushl
jbe
icebp
sarb
imul
aas
fxch
in
and
jae
mov
xlat
push
repz
rcll
mov
pop
iret
test
jmp
sbb
jb
in
xor
fsts
cwtl
inc
mov
xor
push
in
sbb
cmpb
lods
sti
sub
sbbl
mov
ss
aaa
jle
fdivl
xchg
shrb
push
pop
dec
sub
xor
faddp
and
mov
lds
fcoml
dec
aam
insl
data16
js
sbb
clc
pop
adc
mov
into
flds
jecxz
inc
and
loop
sub
add
imul
cmp
jbe
decl
push
mov
imul
pop
aad
push
jb
mov
inc
sbb
pop
cmpsb
sub
pop
pop
je
and
dec
push
xchg
movsb
lea
mov
sbb
mov
ja
in
lea
adc
scas
je
cmp
je
pop
fmuls
ret
fsub
cli
xor
sub
cmc
fldcw
in
into
test
fists
fcoms
xchg
nop
or
mov
inc
and
jle
mov
dec
sbb
inc
add
hlt
mov
xor
push
cmp
push
inc
pop
cwtl
jne
dec
pop
sbb
sbb
mov
dec
sbbl
xlat
movsl
je
andl
sbb
adc
mov
cli
cmpsl
fidivl
call
push
inc
push
cmp
fsts
xor
cmp
cmp
dec
cwtl
cmp
loop
pop
aam
addl
dec
mov
cwtl
ficoml
xchg
call
sub
enter
add
jge
dec
cmp
stc
cmc
bound
jno
sbb
int
push
sahf
in
in
push
pop
xor
data16
cmp
mov
adc
fs
xor
fdecstp
pop
pushf
pop
or
ljmp
mov
sbb
sahf
mov
sbb
jo
push
add
outsb
out
push
mov
scas
sub
jnp
lock
filds
fbld
loopne
dec
and
pop
mov
movsl
lahf
push
and
fistpll
inc
mov
iret
jb
gs
add
fnstenv
pop
dec
in
cmp
movsb
or
dec
lods
add
in
out
fsubs
or
enter
mov
jmp
ds
jb
lods
xchg
inc
shl
sub
sbb
xchg
dec
hlt
pusha
and
mov
and
sarl
lcall
sti
in
fisttpll
fprem
ljmp
mov
pop
into
decb
dec
pop
inc
jl
cmp
inc
add
in
mov
pop
ficomps
push
add
jp
out
fisubrl
daa
icebp
fisubs
fisubrs
es
orl
mov
fsts
in
daa
mov
out
icebp
ss
jnp
int3
rcl
imul
mov
inc
je
dec
pop
outsb
cld
jb
lock
cmp
fistl
sbb
in
cmp
icebp
or
and
cwtl
or
mov
std
int3
sbb
pop
movsl
jmp
arpl
das
jb
sub
push
fldt
negb
int
movsl
add
clc
mov
push
in
rorl
pusha
repnz
pop
dec
enter
pop
mov
push
xor
rolb
and
jb
test
fnstcw
mov
imul
mov
mov
dec
pop
fdivp
mov
mov
sbb
jg
sbb
sub
test
jae
cmpl
sarl
or
fsubs
shrb
stos
mov
mov
pop
and
mov
clc
adc
mov
jmp
push
sbb
fcoms
gs
loopne
adc
dec
shll
daa
frstor
mov
add
xchg
movsb
fsts
mov
mov
pop
dec
adc
sub
dec
in
in
popf
cmp
in
mulb
in
mov
and
rcl
aad
sub
sbb
pop
in
cmp
daa
cmp
xor
dec
jecxz
lods
stc
jb
out
or
orl
cli
cmpsb
push
cmpsl
mov
fwait
pop
andl
jne
fiadds
push
insl
sbb
aas
cli
jp
cmp
cmp
mov
push
sbb
pusha
cmpl
cs
jno
addr16
and
or
xor
mov
fdivl
lcall
fdivl
lock
jmp
pop
aaa
sbb
sbb
inc
nop
je
aas
in
mov
mov
push
sbb
outsb
stos
fcmovu
sub
repnz
mov
ret
cmp
test
lcall
dec
data16
sub
pop
sub
fiadds
mov
add
pop
push
loop
fdivs
dec
stos
mov
push
xchg
pusha
push
fxch
fists
add
sub
rcrb
inc
xor
jmp
push
flds
xlat
into
in
jecxz
jo
cli
ss
mov
les
pop
in
xlat
imul
imul
add
jbe
xor
push
push
and
nop
mov
lods
add
in
cmp
and
mov
cld
xchg
outsl
jo
cmpsl
addb
xchg
push
mov
stc
bound
xor
jno
jg
std
in
leave
loopne
sbb
stc
lods
mov
sub
dec
pop
fimull
stos
out
xchg
xchg
lds
inc
adc
shrb
dec
xor
jnp
imul
mov
cli
imull
mov
sbb
cltd
mov
sbb
sahf
das
jns
mov
cmp
pop
xchg
stos
dec
jecxz
jp
add
or
inc
sbb
xor
mov
push
and
mull
cli
inc
push
jge
sbb
sbb
dec
imul
xor
js
sbb
aad
leave
enter
es
imul
movsb
cmp
test
inc
addr16
ja
adc
aas
and
sbb
xchg
stos
mov
push
flds
shll
adc
dec
xor
jp
fisubs
cmp
mov
jbe
dec
inc
mov
fptan
aas
adc
xchg
lds
inc
rcr
sbbb
or
dec
sbb
out
mov
jmp
out
mov
jo
xlat
mov
ss
rcrl
add
push
stos
inc
push
xchg
fisubs
mov
bound
shrb
jnp
and
or
into
xor
xor
mulb
in
loopne
fidivs
leave
fs
shl
push
fchs
gs
movsb
dec
out
movsl
pop
cmp
das
je
dec
cmc
xchg
data16
push
faddl
out
mov
add
cwtl
xchg
aam
dec
fs
xchg
push
push
xlat
jp
xchg
mov
jno
mov
cmp
aaa
sub
rorb
sbbl
clc
mov
imul
add
or
dec
cmc
movsl
sbb
addr16
pop
adc
insl
popf
dec
mov
subps
and
mov
xor
sub
pop
adc
pop
xlat
push
subb
repz
lock
scas
pusha
dec
fisubrs
aad
data16
repnz
fbld
fildl
dec
out
jl
leave
inc
mov
data16
and
mov
push
cmp
pop
jmp
loop
data16
xchg
adc
sub
std
ljmp
in
inc
fldcw
pop
mov
stos
in
dec
lcall
push
dec
mov
mov
lahf
sub
ss
je
and
test
mov
mov
loopne
xchg
rclb
inc
ret
fstp
and
test
sbb
or
pop
mov
pop
push
ss
js
movsb
aad
sbb
sbb
adc
mov
dec
int
fsts
repnz
xchg
cmpsl
fsts
nop
pushf
int
add
xor
enterw
sbb
xchg
loope
mov
pop
lret
fildll
or
pop
adc
mov
notl
dec
or
cmp
xor
out
inc
push
hlt
inc
cmc
dec
pop
shl
mov
xor
xor
mov
sbb
cmp
mov
adc
xlat
xor
jo
add
cli
jmp
pop
cmpl
jne
mov
cmp
push
ret
fiaddl
stos
jecxz
or
adc
inc
into
push
ljmp
sbb
mov
mov
xor
jge
add
int
in
inc
sub
nop
push
incl
inc
addr16
fnstsw
jbe
dec
add
and
mov
hlt
inc
out
aam
jnp
push
push
pop
jmp
push
popf
xor
scas
out
insb
fldcw
mov
sbb
push
ret
test
inc
mov
es
fldcw
pop
sahf
popa
bound
and
sbb
lds
inc
ss
sbb
fstl
fbld
ja
js
mov
mov
pop
rcrl
mov
aaa
mov
jne
std
mov
jo
test
cltd
sub
movsb
dec
scas
push
shlb
sbb
repz
pop
push
and
dec
push
cs
inc
cmpsw
sub
lods
adc
inc
xlat
add
inc
aas
sbb
adc
fdivrl
ficompl
shr
sbb
out
cmc
mov
sbb
and
sub
jmp
cwtl
in
mov
stc
push
adc
mov
lea
pop
xor
bound
lods
andl
fsubs
dec
pop
mov
arpl
mov
or
cs
mov
fdivs
mov
push
icebp
inc
inc
into
xor
dec
pop
ret
xchg
das
pop
sahf
jmp
stos
sbb
jo
rorl
xchg
fdivp
nop
push
movl
std
mov
mov
repz
pop
repz
pushaw
mov
dec
out
fcmovnu
sbb
sbb
out
cwtl
mov
push
sbb
sub
jno
out
pop
mov
xor
orl
cmpsb
notw
push
adc
jno
imul
push
ret
add
mov
inc
loop
cmp
imul
jecxz
pop
jmp
pop
jecxz
dec
pop
and
sahf
pop
pop
loopne
cmp
mov
push
sbb
mov
fldenv
lea
pushf
fldenv
jae
jl
test
xchg
dec
adc
or
popf
imul
mov
push
sbb
sbb
mov
dec
xchg
jge
int3
das
je
mov
and
cmc
stos
insb
nop
cmp
shlb
ljmp
xor
and
rolb
repnz
fiadds
mov
ja
stos
mov
mov
xchg
mov
push
and
mov
push
adc
out
sbb
out
fstps
test
in
ret
sbbb
and
dec
push
mov
mov
fstps
mov
add
lret
aaa
mov
in
dec
inc
inc
push
push
xchg
pop
pushf
imulb
jg
sub
cli
mov
sahf
fiaddl
pop
addr16
cli
clc
gs
xchg
cli
pop
ret
mov
sbb
jg
push
cmpsl
or
cltd
movsl
push
mov
movsb
icebp
pop
and
enter
cs
les
and
and
int3
dec
ss
push
cmp
cmc
fstps
jb
and
inc
call
dec
jecxz
push
pop
enter
xchg
and
stc
cmc
inc
or
shlb
in
bound
jo
push
inc
out
pop
sbb
ret
fiadds
out
adc
jge
insb
sbb
insl
andb
lea
push
mov
dec
mov
cmc
fldenv
scas
lods
pop
repz
jbe
add
lods
loopne
xchg
push
insl
out
popa
fs
pop
movsb
add
sahf
pushf
mov
dec
lahf
inc
outsw
lcall
ss
ljmp
pushf
lock
dec
shll
pop
sbbb
negl
mov
fidivl
rol
test
mov
mov
bound
call
push
cmp
push
fldenv
addr16
into
and
mov
dec
sbb
fldenv
sub
inc
imul
into
sti
inc
cmp
outsl
shll
cwtl
lret
cmpsl
xchg
das
and
faddl
gs
sub
cmp
sbb
jg
or
xchg
dec
mov
roll
mov
or
ss
dec
push
cmpl
adc
data16
loopne
cmp
scas
fldl
pop
out
sbb
xchg
mov
jbe
sub
popf
cmp
lcall
and
cmp
dec
nop
jge
cld
out
dec
cs
scas
push
sbb
sahf
xchg
pushl
pop
mov
bound
pop
in
in
sbb
mov
mov
scas
xchg
mov
outsl
mov
add
je
ds
dec
aas
fs
rsm
loopne
pop
mov
sub
loope
daa
sub
xor
adc
in
mov
outsl
fldcw
push
xor
cmp
jmp
stc
xchg
xor
fiadds
inc
or
cltd
pusha
xchg
dec
data16
cmp
scas
mov
jnp
mov
cmc
dec
inc
jbe
call
jb
mov
and
pop
arpl
push
cmc
push
inc
and
push
xchg
enter
cmp
cli
js
push
aaa
adc
out
xor
in
int
movsw
loopne,pn
ss
cmp
push
shll
adc
jo
cmp
ja
push
or
add
std
inc
imul
outsb
scas
adc
fiadds
pushf
xor
xchg
adc
cmc
sub
sub
xchg
xchg
and
out
out
xchg
cmp
out
sub
loopne
mov
arpl
dec
dec
scas
pushf
jmp
rol
lods
insb
data16
data16
sbb
sbb
outsb
sarl
mov
loope
add
sbb
or
into
fstps
mov
mov
adc
call
fnstcw
sahf
shlb
sbb
jmp
sbb
movsb
lret
mov
lock
stos
pop
mov
adc
mov
cmp
xlat
fidivrs
xor
sub
fldcw
repnz
fwait
test
and
aaa
ret
jecxz
loope
push
jo
inc
mov
cmp
mov
mov
sbb
ret
fldenv
or
ljmp
out
and
adc
adc
push
jle
ds
push
movsl
jecxz
imul
fs
adc
test
lcall
sbbl
jnp
or
and
jne
pop
pop
mov
sbb
ljmp
xchg
jmp
or
fs
sarl
inc
test
adc
and
shl
fmull
xchg
or
or
test
pop
rcrb
add
loopne
push
ret
mov
lock
fidivrl
mov
into
and
dec
leave
pop
push
movsl
insl
cmpsb
sbb
xchg
xor
mov
xor
fldl
mov
cld
mov
sbb
xchg
andl
mov
inc
and
push
das
mov
ds
daa
pop
cs
jns
loop
pop
dec
inc
sub
jnp
je
stc
leave
dec
push
sbb
sub
mov
jecxz
xchg
pop
adc
je
movsl
dec
bnd
gs
push
inc
push
xor
dec
mov
insb
push
mov
adc
jne
sub
das
dec
jge
fisubrl
aad
mov
xchg
in
cmc
inc
pop
dec
adc
clc
xchg
test
insl
adc
sub
into
js
iret
lret
sbb
pusha
xchg
mov
sbb
dec
sbbl
dec
adc
jbe
add
daa
movsb
xchg
test
out
jnp
pop
jle
arpl
gs
std
xchg
fsubl
popf
ljmp
jp
bound
stc
pop
jg
dec
into
cmpsl
cmp
ljmp
sub
xor
out
out
xchg
sub
aaa
cld
add
cltd
mov
pusha
imul
sbb
jno
adc
jecxz
jne
rorl
shll
cwtl
popf
jge
cmp
out
mov
sub
sahf
call
and
call
mov
sbb
jb
push
fimull
call
push
lods
sti
sbb
sbb
stos
ja,pt
sbb
jb
pop
mov
mov
jbe
movsb
lcall
hlt
sbb
repnz
cmc
push
mov
jb
adc
pop
push
inc
pop
outsl
dec
pop
mov
push
pop
addr16
pop
jle
push
push
icebp
jg
ss
test
mov
in
int3
pop
dec
sbb
clc
mov
adcl
fdivrl
and
cmp
pop
jae
mov
stos
les
nop
inc
vmread
loop
iret
dec
add
pop
dec
add
loope
ret
mov
adcl
push
sbbl
je
lds
sbb
fnstsw
mov
fnstenv
cmp
int3
mull
cmp
sbb
clc
and
andb
shlb
adc
test
cld
dec
sub
cmp
out
hlt
scas
sbbl
daa
jge
jmp
push
push
das
les
adc
push
mov
lret
in
mov
and
fs
fwait
fs
dec
add
int
fsubrl
shr
inc
pop
test
cmp
outsb
dec
pop
ja
sub
push
test
jg
ss
mov
sbb
je
push
std
jae
movsb
push
push
cmp
fsubl
idivl
pusha
les
pop
xchg
sub
add
in
or
imul
arpl
add
out
js
fldenv
mov
fsubl
jbe
or
addr16
mov
cmp
add
sbb
repz
in
addr16
stos
loop
cltd
int
ds
imul
fisubs
cwtl
out
andl
or
orb
lods
mov
cmpsb
inc
dec
mov
mov
xchg
pop
adc
cmpxchg
xchg
xchg
xor
lcall
ss
and
lds
pop
add
loop
mov
pop
pop
and
mov
cmp
cmp
rcr
rclb
data16
sbb
pop
pop
in
fidivrl
jg
adc
cmp
jbe
stc
push
lahf
push
fistpl
in
loop
pop
pop
cmpsw
dec
cmc
pusha
sbb
stc
lds
pop
cwtl
dec
xor
out
daa
leave
cmp
pop
jmp
jmp
ret
jbe
inc
xchg
cmpb
xor
dec
cmp
fdivs
dec
mov
aas
sar
fwait
cmp
addr16
ds
mov
repz
fldenv
push
pop
lods
dec
mov
test
aam
cmpsb
pop
incb
jne
mov
adc
imul
outsb
xor
cmpsb
cmc
negl
mov
push
add
lret
pop
dec
or
andl
in
cmp
cmpsl
in
fstps
sbbl
push
pop
adc
and
aad
pop
outsb
and
data16
mov
xor
push
les
data16
je
mov
xor
mov
leave
es
test
mov
enter
mov
lds
mov
push
icebp
movsl
std
push
js
dec
and
mov
sbb
pusha
or
and
aaa
mov
fwait
inc
push
cmp
sbb
lret
xchg
dec
ja
dec
lret
and
fcompl
xor
adc
xchg
mov
testb
push
cmp
xor
jns
jnp
sbb
jg
cmp
loopne
sbb
xchg
xchg
sti
jge
int
and
je
ja
data16
and
jno
and
lock
mov
es
pusha
nop
adc
dec
xchg
inc
add
add
mov
lcall
sbb
fldpi
xchg
pop
loopne
lahf
inc
push
push
lods
fiaddl
dec
das
jmp
push
or
pop
mov
mov
push
out
out
jl
in
xchg
in
dec
mov
fstps
dec
scas
les
icebp
xchg
xchg
fsubp
dec
sub
fld
and
inc
xchg
push
pop
stos
and
xor
inc
add
dec
mov
jbe
adc
out
outsl
xchg
fsubl
sbb
loopne
mov
pop
sti
xchg
fnstcw
sub
xor
mov
das
cld
lock
adc
enter
push
les
ret
mov
aad
inc
flds
insl
ss
ss
pop
dec
xor
add
int
popa
pop
xor
cltd
fldl
dec
xlat
ficoml
fidivs
xorb
popf
xlat
sbb
aad
xchg
fst
repz
je
and
test
xor
mov
fincstp
dec
sub
jbe
icebp
sbb
cmpsl
mov
fnstcw
mov
sbb
pop
test
fwait
add
mov
fldcw
and
cwtl
das
xlat
das
sub
inc
mov
iret
dec
push
cmp
pop
jno
jecxz
xchg
xchg
mov
jbe
mov
add
scas
leave
mov
outsl
lcall
push
ds
mov
out
fstps
xchg
push
pop
adc
dec
dec
lock
dec
imul
inc
inc
jmp
mov
and
ficompl
js
xchg
xor
push
add
cmp
inc
adc
xor
xchg
test
aaa
xchg
fimuls
imul
jo
fsubrl
pop
pop
shrl
xchg
inc
xor
adcl
fs
adc
dec
xchg
movsb
imul
jns
fcmovnbe
fxch
add
xchg
cmp
inc
call
mov
push
daa
jmp
jae
and
loop
mov
xor
sti
and
fsubl
mov
in
dec
push
and
or
or
pop
jle
fwait
out
dec
cltd
je
fstps
jge
pop
int
test
or
inc
nop
imul
sbb
jp
into
andl
mov
push
test
mov
test
cmp
or
in
mov
inc
outsb
push
sbb
jne
jge
mov
pop
adc
jno
cwtl
dec
jl
pop
add
mov
imul
stos
shrb
sub
jno
sbb
push
push
lds
test
xlat
adcb
dec
loopne
xchg
inc
loopne
sub
or
adc
push
mov
inc
test
mov
imulb
out
xchg
jge
sbb
jmp
pop
jne
adc
test
fsubrs
inc
sub
pop
cmp
bound
pop
add
cmp
call
ficoml
mov
mov
jb
lss
push
aaa
pop
stos
mov
inc
out
pop
sbb
in
inc
mov
rcr
mov
ret
out
insl
inc
sbb
sbb
test
xchg
xor
or
push
out
mov
jae
push
xor
les
aam
fnstcw
cmc
es
in
dec
cltd
test
mov
cmp
addr16
add
sbb
cmp
daa
adc
or
jbe
inc
inc
sbb
das
mov
dec
mov
sti
pop
mov
sbb
jp
mov
call
or
test
addr16
fstl
scas
or
scas
aad
inc
popa
int
sub
test
lahf
sbb
push
mov
lret
lods
std
add
pop
sbb
sbb
cmc
inc
mov
dec
xchg
jno
and
or
jecxz
cmc
fcomp
call
arpl
icebp
xchg
mov
mov
jge
mov
out
push
lret
ja
sbb
les
dec
addl
lea
mov
lret
jge
and
repnz
arpl
shl
push
pop
xchg
test
cmpl
or
test
dec
jecxz
cltd
pop
adc
jb
push
je
jbe
shlb
lret
or
pop
xor
push
push
dec
mov
sub
dec
cmp
fisubl
dec
jnp
mov
pop
cmc
cmp
sub
lcall
jne
es
push
and
pop
and
cli
clc
mov
jns
and
dec
push
pop
cmp
sub
adc
in
mov
xor
xlat
and
push
or
enter
popa
data16
sarl
mov
dec
into
mov
mov
push
and
pop
popf
mov
jmp
xchg
dec
addr16
arpl
pop
inc
sub
addr16
push
roll
fstps
jl
clc
fisubs
ja
lods
mov
js
xchg
sub
mov
addr16
mov
dec
lock
loopw
cwtl
dec
loopne
jecxz
dec
mov
push
sbb
notl
lods
shlb
sub
cmpl
nop
cmpsw
out
popa
xchg
sbb
cmpsl
push
pusha
push
into
neg
mov
push
jmp
out
rolb
fs
push
mov
outsl
sub
in
shl
out
cmp
hlt
imul
shlb
test
lea
in
sbb
mov
fsts
jl
dec
ret
xor
outsb
dec
outsb
push
enter
and
adc
sub
inc
xor
ret
sbb
adc
call
fnstenv
imul
out
jnp
movsbl
dec
sbb
call
decb
pop
into
push
xor
dec
pop
push
es
imul
inc
cmpl
inc
mov
sub
push
mov
add
pop
add
shl
pop
ret
cmp
push
imul
jge,pn
dec
ror
bound
sbb
in
jne
and
push
and
and
pop
cmc
sub
je
dec
xchg
hlt
fsubrl
mulb
mov
les
sbb
lret
add
inc
pop
mov
mov
push
and
lret
iret
sbb
pushf
inc
sbb
in
js
data16
pop
cltd
sub
push
dec
flds
pop
jo
fsubrl
addr16
leave
mov
dec
rclb
or
cmpsl
or
sbb
add
enter
inc
pushf
sub
adc
sub
dec
fistpl
jmp
out
pusha
cmc
push
mov
sub
push
xchg
inc
loope
jnp
adc
daa
flds
clc
idiv
pusha
pop
mov
out
add
dec
sarl
mov
push
mov
sbb
sarl
ds
mov
test
or
push
or
cmp
js
daa
fisttpll
data16
dec
sbbb
sbb
rorb
sub
loopne
or
jg,pn
xor
test
jne
mov
push
sbb
sub
cmpsb
in
dec
aam
ljmp
sbb
jae
push
flds
test
mov
fdivrs
xlat
stc
das
mov
adc
stos
addr16
shr
cwtl
aam
outsl
fsubrl
movsl
movsl
lods
out
mov
cwtl
xor
or
fisubrl
cmc
out
lret
ss
aam
repnz
mov
fnstcw
jmp
cld
jl
mov
test
sbb
inc
daa
cld
push
xchg
pop
xchg
pushf
push
les
pushl
insl
std
dec
lea
testb
in
fldl
fsubl
ret
ret
mov
adc
out
shlb
lret
lds
in
fnstenv
fcoms
outsl
insb
enter
cmp
add
lret
xor
dec
jle
jp
lds
mov
jne
cli
jmp
sub
rcr
test
cmpl
iret
pop
andb
cli
jae
push
outsb
cmp
lock
daa
pop
push
and
xchg
sub
dec
fsts
rorb
cmpsb
cmp
orb
mov
xchg
push
loope
add
mov
sub
xor
mov
or
mov
addr16
pusha
adc
notb
dec
out
bound
dec
enter
mov
add
inc
cmp
add
dec
sarb
pusha
jnp
fistps
addr16
xor
cli
pop
jecxz
push
aas
mov
out
icebp
cmp
xchg
fnstcw
xchg
cmc
xor
cmpsl
out
int3
mov
fisubrs
adc
mov
pop
cmp
xor
int3
sbb
outsb
or
inc
test
sub
addr16
xchg
jo
sbb
push
fldcw
mov
fisttpl
xchg
inc
jno
jp
mov
stos
stos
lret
xchg
mov
mov
jp
cmc
fnstenv
pop
xchg
ljmp
push
cmpsb
rclb
or
cmp
mov
inc
popa
mov
push
push
mov
push
mov
dec
fstp
xchg
mov
aad
lods
cld
inc
mov
fsubs
ret
pop
arpl
lret
repz
or
test
andl
mov
jne,pt
subb
adc
push
add
mov
imul
xor
rorb
sub
mov
jo
push
inc
dec
scas
or
jo
push
and
je
or
cmpsl
imul
fwait
pop
cmp
shll
fiadds
adc
sbb
cmpps
outsb
leave
fstps
cmp
push
mov
aad
xor
mov
mov
mov
rcrb
cmc
loopne
stos
xorl
push
jmp
stos
xchg
jns
into
clc
dec
dec
aas
cli
mov
shrw
in
cwtl
cmpsb
and
add
cmp
cli
push
cld
xor
jecxz
mov
imul
clc
cld
je
jle
or
testl
mov
mul
sbb
inc
or
fstps
push
pushf
pop
idiv
or
pop
sbb
jmp
jbe
pop
mov
cli
fdivl
inc
cmpsl
in
hlt
fstps
arpl
in
jecxz
add
inc
mov
bndldx
mov
shl
movsb
push
faddl
stos
pushf
mov
mov
adc
insl
and
lret
jle
xlat
mov
aas
pop
mov
jno
push
in
adc
data16
ljmp
sbb
shrl
test
dec
cmp
add
lret
mov
sub
and
les
mov
inc
shr
mov
mov
pop
mov
outsl
cmp
das
mov
dec
dec
cmp
push
ja
sbb
sbb
das
or
sub
fst
mov
cltd
cmp
sbb
rclb
mov
jl
sbb
jne
mov
jnp
enter
jns
cmp
stos
lds
sahf
out
sbb
cmpsl
xchg
and
push
scas
mov
loopne,pn
lods
inc
cltd
fdivrl
loope
sbb
sbb
push
push
jecxz
sbb
xchg
sub
mov
imul
xor
lret
ret
popf
or
sbb
mov
push
inc
add
sbb
and
fucomp
loop
dec
or
lods
dec
sahf
mov
sti
out
add
jb
push
xor
xchg
fstps
jns
mov
mov
or
push
mov
ficompl
bound
pop
sbb
dec
inc
dec
sarl
push
stos
or
or
inc
jne
pushf
dec
sti
sbb
hlt
out
dec
xor
lahf
jmp
hlt
flds
ljmp
jecxz
mov
lock
lahf
jbe
les
jae
xchg
or
popl
fwait
jmp
dec
mov
les
mov
pop
fistps
dec
and
insl
lods
outsb
inc
loopne
inc
push
push
rcrb
addr16
mov
mov
push
jno
cltd
push
dec
xchg
dec
cmp
jge
shlb
jnp
or
mov
add
je
fldenv
xor
or
mov
sbbb
in
leave
fldenv
iret
mov
push
addl
and
adc
shll
mov
inc
xor
inc
xchg
xchg
pop
push
ffree
popf
lahf
insl
jg
cmc
inc
mov
test
cmpsb
fisttpl
dec
pop
cmp
aad
xor
fimull
lahf
jns
js
je
aad
mov
fnstenv
xchg
mov
and
cmp
enter
pusha
fisttpll
pusha
push
cmp
pop
sub
sahf
lret
push
sbb
pop
aas
lret
aam
scas
rolb
dec
hlt
mov
add
sub
lcall
ret
jp
hlt
int3
jmp
iret
adc
cwtl
lods
sbb
jb
xor
mov
inc
xchg
add
xchg
sti
or
xchg
adc
mov
mov
jbe
fs
jmp
lds
push
insb
sbb
mov
mov
fwait
outsl
les
in
test
sbb
ja
mov
leave
mov
xor
sbb
pop
pop
sahf
xchg
test
fsts
test
xchg
push
add
cmc
jb
push
xchg
fmull
call
inc
and
sub
sbb
inc
jp
test
shrb
in
lret
or
push
cmp
cmp
in
addr16
or
inc
xlat
repnz
mov
sub
cltd
pop
pop
lret
clc
push
or
fwait
inc
xor
shrb
jo
xchg
clc
inc
inc
out
xlat
lds
adc
shlb
inc
bound
hlt
mov
stos
dec
mov
dec
sub
sub
jb
test
dec
movsb
divb
cld
add
scas
dec
dec
js
mov
adc
in
dec
outsb
add
push
mov
ds
cmp
dec
gs
inc
test
imul
and
data16
mov
jl
cld
inc
rcrl
add
inc
outsb
dec
xlat
movsb
mov
pop
loope
in
fimull
push
in
xor
filds
sbb
xor
flds
mov
ja
jns
push
jo
pop
lret
cmp
pop
jne
pop
xchg
xchg
out
and
mov
push
mov
lods
bnd
xor
repnz
pop
jne
xchg
loop
in
and
data16
inc
cmp
inc
sbb
push
jmp
push
adc
ficomps
fnsave
add
ja
lcall
adc
stos
cmp
xchg
pop
add
or
xchg
std
addr16
test
dec
out
dec
pop
inc
inc
fsts
or
jecxz
push
push
std
arpl
mov
jne
mov
sub
fldl
in
mov
mov
lret
lret
fldenv
or
mul
aam
stc
push
inc
dec
xchg
pop
mov
push
push
or
mov
add
lods
dec
mov
stos
shll
jecxz
lock
adcl
pusha
outsl
shlb
push
aam
fwait
mov
and
jmp
out
mov
cmpb
fnstcw
data16
shll
pop
call
flds
test
jmp
stos
cmp
gs
sbb
and
jns
push
cld
cltd
testb
loope
notb
les
mov
pop
pushf
popa
cmp
xchg
cmp
inc
and
xchg
lea
ficompl
shr
das
sbb
stos
dec
and
mov
jecxz
lcall
rcll
cmp
std
in
repz
into
scas
add
pushf
pusha
orl
xchg
clc
add
sbb
and
fldenv
push
mov
push
mov
iret
pop
fsts
imul
adc
mov
adc
add
addr16
fnstsw
scas
fidivl
mov
out
lahf
call
pop
iret
filds
push
into
movsl
sub
mov
leave
sbb
addr16
pop
lret
lcall
sub
pop
and
fsts
mov
add
or
dec
mov
cmp
lods
cmp
aaa
addr16
popw
stos
lret
insl
mov
cli
mov
loopne
aas
jbe
xchg
stos
jmp
xchg
cmp
push
sub
cltd
loop
je
and
out
sbb
movsl
insb
pop
cmpsb
mov
test
rorb
xchg
cmpxchg
and
mov
mov
add
xor
add
mov
loop
aaa
sbb
ret
fld1
inc
jp
xor
and
add
cmp
or
pop
cmp
xchg
xchg
dec
es
vmread
aam
setg
or
loopne
mov
imul
lods
ficompl
ret
insb
cltd
clc
jo
int
or
adcb
pusha
out
or
add
pop
das
movsw
loop
fsts
test
sbb
mov
in
addr16
or
mov
push
je
push
mov
inc
cmpsb
pusha
rcll
or
fidivrs
pusha
sar
xchg
fsts
std
test
fnstenv
jno
add
lcall
and
cmp
arpl
outsb
adc
dec
sbb
cmpsb
lods
enter
dec
bound
sbb
and
addl
pop
mov
xor
test
fucomp
daa
dec
xchg
rcrl
addr16
xlat
inc
dec
add
dec
xor
mov
call
stc
repz
dec
jg
dec
std
and
dec
or
out
fptan
loopne
push
add
dec
sbb
push
mov
cmp
mov
repz
jne
rolb
add
pushf
dec
mov
in
xorb
mov
jp
cmpsl
xchg
pop
mov
lods
add
sbb
filds
repnz
pop
mov
push
dec
sbb
sub
data16
gs
xlat
xor
mull
cmp
ljmp
lea
mov
mov
movsb
fnstcw
push
inc
xorb
int
cmp
rcll
bound
hlt
sbb
cli
xchg
repz
pop
pop
dec
int
push
leave
data16
fs
lds
sub
mov
pop
mov
adc
mov
sbb
mov
pop
pop
xchg
fsts
pop
cli
push
orb
dec
or
pop
insb
xor
mov
cmp
iret
dec
and
mov
push
sbb
shll
mov
sbb
xchg
xor
jp
sbb
fdivs
cmp
and
in
dec
shll
xchg
dec
jbe
pusha
or
mov
imul
inc
les
xchg
mov
pop
scas
mov
dec
ss
icebp
mov
inc
repz
test
lods
test
lahf
fld1
inc
pop
lcall
or
inc
cld
push
mov
pop
in
pop
jl
and
sub
out
mov
daa
ds
dec
sahf
ret
adc
mov
push
push
fs
inc
daa
jge
push
stos
fs
add
xchg
adc
adc
sub
subb
inc
sbbl
dec
scas
pusha
sbb
inc
mov
inc
push
imul
dec
subl
jmp
popf
test
ret
int
sbb
sub
fldenv
idiv
ja
loope
xrelease
scas
dec
stos
ja
hlt
cs
xchg
data16
pop
sbb
add
fxch
arpl
cltd
les
shl
lret
jne
inc
xor
jne
mov
ficoml
dec
clc
test
push
xchg
sbb
or
xchg
push
test
push
sub
xor
insb
and
mov
push
adc
pop
mov
arpl
add
push
cld
dec
das
adc
aam
fdivs
xchg
movsb
dec
outsb
repnz
xchg
pop
fisubl
outsb
mov
push
cmp
out
enter
pop
xor
push
sbb
mov
pop
aam
push
lcall
pop
sbb
in
mov
mov
pop
js
icebp
mov
sahf
pop
pusha
pop
and
pop
inc
push
pop
dec
js
fcmovb
inc
mov
or
push
out
rorb
inc
cwtl
push
cmp
mov
xchg
mov
fsts
lahf
shrb
mov
push
enter
sbb
push
cmp
fildll
cmp
and
shrl
and
inc
repnz
adc
mov
add
dec
push
push
outsb
and
inc
imul
dec
outsl
cwtl
and
xchg
adc
fistps
fldcw
jnp
dec
out
sbb
enter
popf
fidivrl
mov
fimull
mov
mov
fwait
inc
fstps
push
push
adc
mov
out
cltd
jns
loop
dec
xlat
stc
ljmp
bndldx
int3
call
push
fnstcw
push
rcll
and
adc
dec
nop
mov
imul
pop
ljmp
aaa
adc
dec
sbb
and
test
jle
dec
fsts
out
mov
pushf
push
iret
cmp
mov
aam
cmp
xor
jp
pop
jecxz
inc
adc
push
adc
push
das
xor
dec
in
int3
jae
and
inc
daa
out
mov
xchg
out
sahf
add
repz
add
lret
lods
mov
and
pminub
pusha
int3
insl
enter
mov
push
dec
addr16
inc
dec
xchg
push
in
ficomps
or
loopne
jmp
data16
bswap
mov
xor
movsl
mov
sbb
jb
adc
enter
mov
int3
push
xchg
dec
loop
dec
gs
dec
repz
iret
loopne
pop
jp
inc
sbb
enter
push
cmp
jns
inc
leave
cmp
sbb
sbb
adc
ret
push
iret
loop
out
or
dec
pop
cmpsb
mov
cltd
insl
jl
std
cli
cmpsl
mov
xchg
out
repz
jg
inc
flds
je
sub
push
scas
adc
cmp
jle
and
mov
mov
data16
int
sub
cli
push
sahf
pop
push
fidivl
mov
cmp
sbb
push
orb
inc
cmp
inc
sbb
push
adc
pop
xor
dec
cmpsb
fiaddl
push
inc
push
jg
push
jle
dec
lods
adc
cmpsb
andb
movsw
pop
movsb
loope
dec
dec
lcall
jae
mov
sub
pusha
stos
mov
push
arpl
adc
rorb
pop
mov
dec
push
adcl
cmp
fnstenv
lret
pop
jno
inc
dec
cld
js
pop
and
jbe
push
or
mov
fistpll
mov
fstps
outsb
imul
xor
inc
dec
dec
add
std
mov
imul
out
pop
mov
adc
jp
jb
add
es
sbbb
sub
incb
adc
int
ss
sbb
cmp
jo
sub
shl
mov
ljmp
sub
cwtl
decl
inc
sbb
dec
pop
xchg
flds
test
cmp
sar
xchg
icebp
dec
int
push
cwtl
daa
dec
fnstenv
jle
dec
rclb
sbb
jg
sbb
shrb
fstps
push
mov
push
jo
dec
dec
clc
lcall
sub
xchg
repnz
pop
out
popf
pop
repnz
movsl
push
jns
sub
in
sarl
iret
js
cmp
fistpll
rclb
cmp
dec
mov
fwait
in
pushw
sub
ret
ret
dec
inc
fsts
mov
ret
xor
adc
test
fnstenv
out
adc
cmpsl
and
push
cmp
xor
jno
and
mov
les
bnd
pop
add
jle
ss
sbb
xor
xor
fsubrs
sub
test
ljmp
mov
fiaddl
push
pop
dec
shlb
add
sbb
xor
cmp
sti
and
gs
addr16
adc
xor
movsb
jne
mov
pop
jb
sbb
lds
gs
mov
fisubl
ja
out
fldcw
outsl
repz
pop
add
push
bound
pop
cmp
cmc
imul
fs
pop
adc
test
pop
dec
pop
mov
movsb
data16
sbb
dec
xor
jno
out
call
xchg
mov
mov
dec
aaa
sub
push
and
sbb
lret
push
ljmp
dec
pop
sbb
in
push
push
cmp
push
imul
mov
das
loopne
inc
inc
jle
cmpsl
sub
lret
push
mov
cmp
fnstenv
insb
push
mov
mov
push
gs
or
pop
jno
fidivrl
sar
inc
dec
push
inc
scas
std
inc
enter
test
call
or
clc
jle
dec
imul
jb
jns
data16
pushw
fistps
jnp
js
test
call
xchg
jno
iret
mov
sbb
dec
dec
call
enter
cmp
push
jae
sub
insl
inc
outsl
push
adc
fidivrl
stos
xchg
lods
inc
std
sbb
and
dec
xor
imul
ss
lahf
js
shlb
push
stos
test
out
xchg
adc
bound
popf
push
dec
call
leave
in
push
sub
inc
repz
das
shrb
lods
cmpsb
scas
jbe
and
enter
jno
aaa
push
shrl
aam
insb
adc
sbb
insl
into
les
in
inc
xor
mov
data16
jnp
lods
adc
ficompl
icebp
jecxz
mov
and
dec
add
or
push
mov
repz
mov
stc
jb
andl
fiaddl
jns
cmp
bound
pop
rorb
loopne
adc
sti
mov
lcall
imull
fsts
mov
and
mov
test
push
cmp
pop
jmp
movsl
xor
inc
mov
pushf
fstl
or
and
pusha
mov
in
mov
loop
mov
les
or
cmp
or
jecxz
daa
inc
je
mov
mov
cmc
push
ljmp
mov
jnp
gs
xor
or
fmull
movb
mov
push
mov
fnstcw
push
and
jne
test
enter
dec
data16
jnp
out
mov
call
cmp
push
stc
sub
xlat
dec
stc
inc
push
adc
pushf
xor
adc
out
dec
outsb
or
and
or
xchg
jbe
outsb
mov
xchg
movsl
mov
scas
out
shll
fbld
ljmp
sub
enter
pop
movsl
bound
in
ds
imul
or
les
xor
pop
ret
lcall
pop
fs
ds
xchg
sub
je
pushf
lods
jns
iret
or
xor
dec
cmp
mov
cs
add
out
das
mov
sbb
sti
pushf
jl
cld
ret
cmp
mov
push
stos
lock
sti
adc
push
ja
shr
fdivl
mov
aaa
js
ja
iret
loopne
jp
sub
js
and
or
in
jl
sbb
fcmovbe
inc
daa
pop
fnstcw
repz
and
stc
inc
loope
inc
je
jecxz
in
xchg
pop
int
cmp
rcrb
imul
adc
fwait
mov
jbe
je
or
ret
lret
loop
xchg
and
int
push
fsubrp
fsub
scas
stos
inc
jns
xchg
out
push
and
add
and
mov
adc
xchg
xor
or
mov
push
add
pop
and
out
outsb
sbb
inc
cld
add
adc
shrb
out
push
imul
or
mov
xchg
fstps
dec
imul
sub
repnz
mov
adc
sbb
inc
fs
cld
adc
std
fsts
adcb
dec
mov
ljmp
mov
sbb
xor
add
mov
pop
sbb
les
mov
test
push
inc
and
mov
push
cmp
call
cli
pop
dec
loop
faddl
dec
repz
je
pusha
xchg
gs
sub
loop
push
mov
mov
stc
data16
dec
sbb
out
mov
sub
out
pop
adcl
dec
stos
insl
cmp
mov
enter
cmc
and
loop
push
add
mov
sbb
std
je
jmp
test
fst
lea
mull
adc
cli
inc
in
mov
pop
stc
insb
in
popf
mov
mov
cmpsl
sbbl
std
fmull
and
mov
bound
inc
dec
jecxz
lea
mov
les
pop
push
mov
add
vpsadbw
dec
insb
pop
xchg
inc
inc
mov
movsl
orl
sub
repz
mov
addl
sbb
push
out
cmpsl
test
ret
scas
leave
sub
shrl
cltd
push
lcall
or
mov
sub
sbb
pop
xchg
movsb
aas
repnz
loopne
cld
data16
rcrl
push
idivb
out
ljmp
call
or
sub
xor
push
lock
add
insb
stos
in
and
mov
testb
or
data16
aaa
mov
sub
jb
inc
pushf
jg
lods
stc
or
push
adc
dec
outsb
add
data16
ljmp
cmp
cltd
stos
sbb
sbb
xchg
data16
addr16
inc
test
nop
xchg
lods
out
movsb
adc
sbb
xor
mov
dec
jo
test
jecxz
imul
mov
mov
orl
xchg
jne
jge
push
jmp
push
and
sbb
loopnew
sbb
sbb
push
inc
outsb
fldcw
sub
xchg
sbb
sub
fimull
push
stos
pop
dec
leave
test
dec
cmp
cmp
dec
out
dec
sbb
gs
dec
pop
and
sarl
mov
dec
stc
inc
push
mov
push
mov
hlt
add
jle
cli
popf
dec
mov
aaa
dec
pusha
data16
cmp
sub
mov
test
push
mov
je
inc
push
inc
stc
mov
rcll
fisubl
xchg
or
out
and
dec
out
xor
testl
js
ret
mov
scas
add
sub
mov
stos
inc
cmp
pop
js
addr16
xor
addr16
jmp
xor
movsb
flds
push
sbb
rolb
xor
test
xchg
rclb
lea
push
mov
mov
mov
sbb
stc
mov
arpl
lods
sbb
add
or
test
rcrb
les
cltd
lret
pop
ss
pop
leave
roll
adc
cmp
enter
out
out
mov
or
rorb
cwtl
xor
insl
fstps
or
movsl
sub
and
stos
pop
fwait
in
inc
cmp
pop
adc
push
movsb
dec
outsl
test
pop
addr16
imul
or
lretw
mov
push
mov
xor
cwtl
pop
or
push
repnz
les
clc
xor
ret
push
pushfw
jge
dec
inc
pushf
leave
ljmp
sti
data16
xor
out
out
cmpsb
lea
push
out
lods
lretw
cmp
or
data16
andb
movb
fiaddl
test
mov
jnp
cwtl
xchg
testb
pop
repz
iret
call
push
or
push
mov
sbb
jne
xor
mov
fld
test
outsb
push
xchg
sub
add
sbb
sbb
xor
push
push
loopne
test
inc
sub
sub
fwait
jmp
sub
pop
mov
xchg
sbb
sarb
jae
fcmovnu
add
fwait
enter
stc
imul
mov
push
or
mov
sbb
aad
inc
addr16
shr
icebp
sbb
call
mov
shlb
punpckhbw
test
inc
xor
jae
repnz
inc
addr16
out
insb
sbb
sub
dec
stos
imul
repz
ljmp
mov
paddsw
mov
inc
fcmovne
xor
fisubl
dec
add
flds
sub
cmp
ja
jge
push
dec
loop
cwtl
inc
add
xor
jb
pop
scas
adc
testb
dec
sub
shl
inc
xor
or
dec
or
lcall
stos
inc
add
insl
or
mov
push
xchg
test
or
cmp
pop
jne
xchg
sbb
ffree
dec
mov
inc
in
jb
repnz
xor
xor
cmp
jbe
sub
int
dec
add
sbb
mov
dec
xor
out
pop
out
xchg
mov
adc
dec
iret
mov
gs
scas
jae
enter
roll
add
in
jo
inc
nop
test
push
negl
movsb
popa
mov
sbb
es
lock
mov
fdivs
xchg
outsl
loopne
fwait
xchg
mov
sub
and
adc
push
pop
int
popf
xchg
cwtl
sahf
adcb
pushf
dec
sbb
jae
xchg
fidivrs
popa
fimuls
or
daa
mov
mov
jne
flds
sbb
fisttpll
sbb
dec
pop
sbb
js
sub
mov
out
jae
pop
das
dec
mov
inc
add
adc
inc
cmpsb
in
mov
aas
dec
std
fnsave
negl
adc
cmp
test
xchg
shrb
addr16
fimull
dec
inc
mov
outsb
roll
in
push
leave
dec
mov
cmp
jp
test
dec
mov
fisttpll
outsb
cmp
movb
sbb
loope
push
dec
and
or
test
aas
insb
sbb
aas
cmpsb
mov
cmp
std
dec
dec
push
sbb
push
scas
lret
inc
flds
jne
cmp
and
sub
cmp
das
mov
lret
sbb
pop
scas
jbe
mov
pop
data16
cwtl
iretw
clc
out
and
sarl
fnstenv
inc
fnsave
bound
pop
xchg
std
out
xchg
flds
outsb
rclb
xlat
lods
push
dec
fidivl
adc
dec
jl
ljmp
inc
inc
dec
mov
pop
mov
not
dec
push
sbb
lahf
adc
in
int
jge
sub
dec
push
sbb
add
pushf
clc
adcl
cmp
into
sbbb
add
push
mov
in
pop
out
sub
fcomi
pop
pop
ret
fnstcw
inc
pop
mov
movsl
inc
icebp
or
jmp
mov
fiaddl
push
push
loop
js
out
xchg
lods
daa
pop
es
scas
mov
js
cmc
and
lret
push
add
add
fistpll
push
fs
ljmp
cmp
dec
dec
pop
push
insb
fdiv
adc
iret
mov
mov
fisttpll
push
adc
inc
daa
out
mov
in
and
fadds
rcll
push
push
fnstenv
pushf
dec
pop
cmp
jnp
int3
popf
lretw
dec
scas
push
sbb
or
mov
fldenv
dec
arpl
cltd
mov
sub
in
jne
fcmove
xorl
mov
mov
adc
mov
mul
inc
cwtl
push
push
sub
xor
sahf
fstpt
or
xchg
sbb
pop
out
mov
mov
imul
sbb
idivb
mov
jne
rcrl
cltd
mov
nop
sbb
cmpsl
cmp
xchg
out
in
in
out
inc
dec
insw
or
push
fisubrl
leave
ljmp
add
cmpsb
cmpsl
loopne
jae
data16
add
jo
std
popa
sbb
sbbl
repnz
sub
sub
adc
dec
and
setb
imul
mov
pop
scas
dec
adc
dec
pop
clc
push
iret
mov
or
mov
jbe
lea
into
cmc
test
pop
lret
and
mov
loopne
dec
cltd
inc
dec
in
add
arpl
sbb
ja
inc
cmpsb
in
pop
daa
popf
ljmp
les
fstpt
push
aad
and
lret
cs
jno
sbb
je
pop
lods
mov
sbb
fwait
add
pop
icebp
imul
jne
cmp
mov
dec
jmp
addr16
aaa
push
jmp
popa
mov
insl
imul
add
bound
xchg
mov
push
mov
es
pusha
cld
enter
mov
cwtl
pop
data16
aad
sbb
push
into
mov
jecxz
mov
cld
or
es
imul
mov
fdiv
sbb
out
lret
mov
fstpl
inc
clc
popa
or
push
inc
outsl
mov
mov
push
jge
out
xchg
pop
mov
in
mov
pop
add
mov
jle
les
pop
fisttps
mov
mov
dec
jle
in
xor
adcb
pop
cmp
orb
mov
cmp
fldcw
dec
loope
lods
out
xor
jno
dec
mov
test
dec
stc
or
and
sub
dec
dec
call
shrl
addr16
rdpmc
sbb
jle
mov
and
frstor
fstpl
jecxz
jb
lock
insb
xor
filds
enter
dec
push
fisttpl
push
sub
sub
mov
inc
pop
inc
js
aas
filds
movsb
bound
ja
loop
adc
or
xor
cmpsl
sub
cs
xchg
push
mov
clc
fldenv
scas
mov
mov
inc
out
inc
mov
mov
loop
mov
mov
lds
dec
push
es
in
mov
dec
xchg
adc
push
inc
push
sub
in
inc
sbb
push
push
insl
xor
fstps
dec
push
pop
and
sub
daa
jnp
xor
push
mov
das
shlb
int
sbb
insb
and
sbb
push
mov
cltd
mov
test
push
dec
cli
movsl
inc
sbb
dec
test
sbb
xorl
ja
dec
pop
mov
lock
cltd
or
fiadds
js
pop
sbb
and
sbb
lret
ljmp
sbb
jmp
push
jl,pn
lcall
jbe
or
out
repz
pop
cmp
sbb
aas
and
xchg
inc
xchg
mov
insl
in
sbb
dec
pop
push
jo
stos
cmp
xchg
jae
dec
sbb
jnp
pop
pop
or
add
cli
imul
mov
nop
add
fldcw
out
aad
xor
rorb
jne
jle
jmp
fsubl
scas
fsubs
xlat
mov
jecxz,pn
sub
dec
mov
sub
inc
dec
xchg
cwtl
ret
or
icebp
xchg
aam
nop
inc
mov
jno
cmp
xchg
ljmp
mov
inc
inc
sbb
rcrb
mov
ss
mov
push
and
or
call
mov
cli
movswl
orb
in
inc
sbb
jns
and
mov
mov
push
jle
jbe
adc
je
testb
enter
pushf
mov
movsl
sbb
xchg
inc
mov
adc
stos
sub
adc
adc
sub
jg
cwtl
fnstenv
test
and
pop
shlb
loope
data16
sbb
ljmp
push
cmp
daa
ss
sarl
lock
sub
test
test
stos
adc
data16
fsubrp
sbb
or
push
push
or
shr
xor
lret
mov
sbb
test
lret
imul
or
push
in
fistpl
xchg
rol
dec
aas
jmp
or
dec
int
lock
cmp
xchg
ficompl
fldcw
imul
mov
jge
clc
inc
pop
sub
and
fsubr
jb
inc
sub
sub
in
mov
data16
add
mov
cltd
popw
pop
jbe
mov
loop
insl
pop
data16
hlt
sbb
push
mov
arpl
xchg
shr
ljmp
push
or
cmpsb
add
xor
nop
repz
vmwrite
adc
movsl
andl
push
dec
mov
jbe
testw
sbb
call
pop
push
ss
lods
ret
rcrb
and
sbb
fwait
test
mov
jecxz
fmuls
leave
shrl
ljmp
data16
mov
pop
cmp
sti
loop
inc
loopne
nop
pop
addr16
push
or
fiadds
mov
dec
pop
outsb
fcoms
imul
push
mov
pushf
adc
lahf
jb
loope
out
push
das
ss
push
pusha
cmp
dec
pusha
jb
sub
sbb
incb
adc
mov
into
faddl
push
sub
sahf
stos
push
and
out
aad
xchg
cmp
data16
icebp
pop
mov
pop
stos
mov
pushaw
divb
pop
and
sbb
cmp
stc
jl
sbb
add
das
or
mov
sahf
add
mov
nop
je
sti
xchg
sbb
xchg
cmp
orl
xchg
stos
insl
push
fsts
xor
adc
lahf
inc
pop
aad
lods
dec
repnz
push
loop
out
mov
push
push
dec
movsb
sbb
addb
push
cmpsl
fnstenv
js
out
in
adc
xchg
add
mov
xchg
jl
mov
fdecstp
adc
xchg
push
cltd
iret
dec
push
incl
cmp
cmp
mov
adc
daa
and
push
lcall
sbb
fcompl
xchg
orl
aas
inc
adc
push
jne
and
mov
pop
sbb
fisubs
cltd
and
jecxz
mull
jno
dec
cwtl
data16
fldt
pusha
jecxz
pop
mov
sbb
ret
mov
xchg
aam
pop
adc
and
arpl
mov
enter
or
test
xor
stos
adc
add
or
scas
push
dec
or
mov
cmp
aam
add
ret
lret
push
push
dec
xor
test
loope
xchg
mov
pushf
in
cmc
addr16
enter
call
ret
pop
enter
in
lods
shll
xor
mov
dec
pop
jbe
push
data16
imul
mov
fnstcw
mov
fstps
es
pushf
dec
inc
inc
cmp
jns
sahf
inc
addr16
jle
cmp
push
lcall
adc
into
and
mov
jns
lret
dec
fcmovu
cmp
outsl
jmp
cmc
ja
dec
jo
les
in
imul
imul
imul
not
push
cmp
xor
dec
decb
es
addr16
lods
cmp
cs
or
mov
jns
je
fldcw
aas
or
stc
sub
dec
inc
in
ss
ds
fbld
cmpb
mov
dec
jnp
sub
sub
dec
add
pusha
arpl
fiaddl
stos
xor
nop
xor
pop
adc
pop
aaa
jbe
pop
cwtl
das
fmulp
xchg
mov
leave
mov
into
or
daa
and
pop
dec
push
sbb
es
adcb
dec
imul
add
dec
sub
pop
jecxz
mov
fcmovu
adc
or
gs
xchg
ja
cmp
aam
dec
sbb
mov
outsl
mov
xchg
rcr
and
adc
outsb
popf
icebp
dec
pop
pop
sbb
fcoms
inc
in
fnstenv
loopne
pop
adc
sbb
lods
push
sahf
cmp
cmc
testl
mov
orb
inc
dec
aad
jae
mov
ja
jg
insb
xor
sbb
pop
inc
jmp
hlt
adc
pop
icebp
bound
or
or
mov
sbb
enter
arpl
inc
out
dec
sbb
jb
addr16
or
sbbb
pop
jle
sub
or
xor
sub
mov
pop
fnstcw
add
aaa
mov
cmc
mov
jecxz
cmpsb
pop
data16
push
nop
dec
in
jmp
in
cmp
xchg
mov
mov
ret
sbb
bnd
clc
and
push
fnstenv
cwtl
mov
imul
pushl
in
fprem1
or
mov
push
scas
cmp
jo
leave
sar
pop
sbb
dec
ja
lret
sbb
fxtract
sub
loopne
test
or
lea
and
pop
fsubl
mov
push
sbb
es
push
mov
data16
mov
dec
pop
addb
push
jnp
xor
data16
pusha
scas
sbb
jecxz
mov
cs
jno
out
pop
je
jge
pop
xor
cld
lret
sub
popf
inc
sbb
decb
inc
jnp
jb
adc
add
and
sbb
pop
dec
adc
mov
sbb
jno
outsl
push
sub
sub
ret
push
mov
call
sbb
js
outsb
xchg
cltd
outsb
movsb
or
test
lret
lds
fldenv
mov
je
cmp
adc
js
inc
cmp
and
mov
adc
movsl
cli
aas
bound
leave
xor
int
cltd
mov
or
fmuls
fists
xor
daa
xor
sub
out
mov
pop
xchg
sub
and
bound
cmp
test
add
pop
rcr
imul
pusha
and
sbb
xor
dec
outsl
mov
dec
shrb
ja
inc
pop
fsubr
jg
dec
shlb
cli
data16
fistpl
pop
push
loopne
dec
into
jg
lahf
mov
out
mov
pusha
dec
push
fcmovnb
cmp
mov
push
and
nop
push
loopew
faddp
cli
jmp
addr16
ljmp
add
push
cmp
adcb
aad
sbb
xor
push
push
repz
int
dec
or
ficomps
sahf
dec
test
imulb
loopne
adc
push
mov
ja
xchg
outsl
les
sbbl
mov
cltd
pusha
je
sbb
add
sub
pop
ret
je
or
jge
mov
popa
sti
xchg
loop
dec
js
jmp
or
dec
ss
inc
clc
scas
fs
lahf
inc
dec
or
pop
push
and
pop
call
mov
insb
cmp
dec
fsubs
cwtl
dec
mov
in
xchg
jle
clc
push
xchg
cmp
mov
push
dec
aaa
jp
adc
jle
lds
and
adc
adc
aaa
leave
inc
and
xchg
mov
mov
enter
push
xchg
cltd
orl
rcrl
ja
jno
bound
mov
push
mov
fisubrl
mov
pop
loop
sbb
add
in
aaa
cmpsl
inc
mov
sahf
xor
sti
rcll
leave
adc
jl
out
ja
add
mov
scas
jb
or
push
rorb
and
data16
gs
fwait
mov
aam
movsb
int
les
and
ja
fstl
mov
outsb
and
mov
std
xchg
pop
lcall
dec
mov
out
stos
jg
imul
test
dec
in
lods
adcl
gs
xor
xorl
leave
into
jnp
inc
xor
scas
aaa
dec
xchg
cmp
xchg
or
fld
sbb
or
mov
icebp
inc
inc
test
mov
push
loop
jb
jne
imul
fyl2x
negl
cmpsb
arpl
or
xchg
xchg
dec
mov
test
data16
fdiv
sbb
pop
sbb
scas
cmp
dec
add
test
dec
cmp
lea
or
inc
repnz
fldl
pop
or
addr16
add
pop
imul
jae
inc
mov
and
xchg
aam
movsb
sbb
fldl
js
in
in
mov
into
cmpsl
push
idivb
int
dec
stos
add
pushf
data16
ja
sbb
stos
stos
fistpl
in
data16
mov
mov
loop
xor
push
addl
xor
adc
inc
orb
push
fwait
shl
push
data16
scas
adc
andl
loope
fidivl
add
sbb
daa
dec
int
cli
loop
push
xchg
sub
fisubrs
out
jnp
cwtl
sbb
push
or
adc
popf
pushf
scas
pop
rcrb
push
jno
jb
xchg
jle
fisubl
jo
inc
sahf
les
pop
mov
mov
xchg
cmp
aaa
sub
int
push
add
sti
sbb
sbbl
lock
dec
sbb
mov
cmp
jne
xor
xor
rorl
mov
jbe
adc
fwait
cmp
ja
lods
add
insb
gs
imul
mov
dec
cmpsb
leave
pop
das
inc
lock
push
sbb
fnstenv
int3
cli
ljmp
mov
pop
jmp
adc
xlat
fsubs
mov
shlb
sbb
mov
mov
rorl
inc
add
andl
adc
mov
xchg
jl
sti
cmp
xor
sbb
dec
jbe
ljmp
cmp
ljmp
mov
es
sbb
mov
mov
jmp
cmp
fists
popa
xorl
sub
shr
lock
pop
or
mov
pop
shll
cmp
sbb
loop
xor
addr16
rcrl
jo
out
sub
out
subb
and
enter
dec
inc
out
sbb
mov
fnstcw
insb
cmpsb
add
or
call
fcmovu
xchg
pop
push
mov
adc
sti
inc
push
js
pop
add
repnz
mov
dec
xchg
or
jbe
js
repnz
xchg
push
xor
cltd
cmp
and
add
push
ljmp
fs
adc
andb
inc
loopne
js
jns
and
fdivrl
mov
push
lcall
lods
xor
cmpsb
std
loope
sub
adc
adc
push
movsb
jmp
mov
fldcw
mov
dec
and
lods
in
movsw
stos
dec
sbb
sbb
repz
sbb
ljmp
dec
pushf
jg
daa
pop
sti
fcmovb
je
mov
push
sbb
ret
jbe
jmp
adc
out
data16
or
popf
pop
push
sbb
xor
dec
rcll
data16
xchg
sbb
sub
xor
lcall
xor
mov
push
sub
mov
mov
ljmp
sub
out
mov
pop
in
fs
jns
mov
lret
dec
fs
xlat
jno
push
data16
push
sahf
aam
sbb
lock
sbb
cmp
xlat
push
nop
jne
jo
sbb
cmp
dec
into
aas
gs
addr16
adc
push
dec
push
inc
or
dec
xchg
mov
loope
js
stos
leave
movsb
ficoml
lea
push
imul
fnstsw
test
xchg
mov
pop
adc
inc
mov
pop
sbb
jle
sbb
scas
call
xchg
and
mov
imul
mov
and
fs
push
dec
mov
inc
adc
xchg
ljmp
and
sahf
dec
mov
ret
daa
xor
sbbb
sbb
cs
fldcw
lods
add
out
dec
lea
mov
add
push
cmp
out
dec
imul
inc
mov
push
mov
dec
jne
jne
cwtl
in
pop
mov
les
fstl
enter
mov
inc
stc
hlt
inc
xor
into
mov
xchg
shl
inc
sub
stc
xor
pop
jne
cld
fsubr
dec
aaa
cmp
pushaw
popa
in
or
test
sbb
mov
icebp
add
mov
push
and
mov
mov
dec
jne
divl
sbb
mov
scas
jae
addl
mov
popf
iret
add
cli
inc
dec
pop
xchg
call
out
fsubr
fistl
push
insb
mov
push
cli
mov
xchg
xorl
pop
add
inc
pcmpeqb
pop
fmul
mov
jae
scas
leave
sbb
out
hlt
call
fnstcw
sub
xchg
vcvtsi2ssl
cmpsl
fistl
xor
stos
out
push
xor
hlt
jns
sub
negb
mov
add
sub
mov
dec
std
scas
bound
hlt
in
xor
jne
adc
int3
in
jmp
xchg
setp
mov
leave
adc
rcrl
mov
push
jbe
cmp
arpl
push
aam
out
inc
pop
negb
mov
sti
ss
fxtract
mov
rol
cwtl
pop
mov
lds
cmpsl
xchg
jle
mov
cmp
int
mov
jl
mov
fsubrs
in
sbb
sbbl
icebp
lretw
fstl
adc
push
gs
std
lds
sub
mov
aam
aaa
cmpsl
test
lds
mov
cmp
mov
xor
or
cwtl
repnz
jb
inc
pop
rcrb
inc
data16
sbb
sub
push
add
cs
sub
xlat
push
push
ficoms
xchg
dec
push
popw
ret
in
xchg
push
mov
hlt
push
dec
cmc
cmp
inc
lcall
cld
and
xchg
cmp
cmp
int3
sub
fistps
ret
pop
sbb
mov
lock
or
clc
sbb
jne
popf
in
push
jns
push
popa
mov
cmpsl
xchg
fwait
out
scas
or
jecxz
sub
inc
in
push
fwait
lahf
inc
or
or
inc
cmpsl
inc
scas
jmp
dec
fisttpl
adc
and
dec
xchg
push
cmp
jle
dec
fmulp
leave
adc
mulb
cmpl
cmpsb
pushf
sbb
orb
js
imul
popf
imul
scas
sub
adc
fistps
xchg
ljmp
pusha
push
data16
or
sbb
or
xchg
movsb
adc
mov
sub
dec
fbld
sbb
dec
in
push
lea
push
sub
mov
dec
ficompl
arpl
cltd
dec
push
cmp
fldenv
mov
sbb
divl
sub
fbld
call
stos
or
push
mov
stos
jno
fs
movsb
inc
xchg
push
bound
or
ret
mov
fptan
gs
sub
shrl
dec
xchg
pop
shrb
fdivr
fsts
or
cmp
and
mov
mov
test
mov
ss
insb
test
dec
dec
dec
dec
sub
pop
xor
gs
stos
xchg
into
and
and
cmp
cmpsl
out
adc
xorl
push
aam
cmp
add
negl
and
push
rcll
dec
and
cmp
pop
fisubrl
lahf
add
push
nop
popf
add
lods
mov
xor
frstor
dec
sbb
xchg
cmp
dec
mov
fstl
js
sbb
and
stos
lods
dec
sahf
imul
xor
sbb
adc
repnz
mov
sahf
jbe
call
push
insl
pop
push
in
cmp
dec
mov
add
adc
xchg
aas
jle
lock
das
cltd
pop
sbb
psubb
pop
out
dec
mov
je
test
jbe
rcr
fnsave
cmp
mov
xor
outsb
or
xchg
stc
sbb
sub
insl
jp
sub
loope
xchg
mov
mov
mov
lret
jge
out
fidivrs
daa
sub
fwait
aas
pushw
enter
mov
decw
sbb
sbb
push
jno
imul
add
sahf
mov
stos
cwtl
sahf
decl
cli
ror
and
sbb
shlb
inc
mov
or
sbb
leave
int
out
iret
lret
pop
int3
clc
lcall
pop
push
dec
test
cli
pop
rclb
fldcw
insl
adc
dec
shlb
and
mov
adc
sub
xlat
mov
lea
mov
enter
mov
shlb
arpl
pop
fsts
mov
or
pop
enter
add
mov
int
and
cmp
les
push
push
inc
xchg
sbb
lea
fidivl
mov
cwtl
mov
push
sub
iret
imul
mov
push
lock
fiaddl
fnsave
mov
inc
jbe
inc
pop
push
and
movsb
iret
or
frstor
inc
xchg
pop
xchg
gs
mov
and
scas
dec
mov
inc
sbb
icebp
jne
cld
lods
xchg
imul
adc
cli
push
shl
pushf
in
sbb
mov
jmp
mov
std
data16
cmpsb
lds
jmp
cmp
inc
sarb
inc
cmp
or
add
jmp
repnz
into
cmp
add
xor
cmpsl
and
fld
mov
jns
pop
pop
mov
dec
stos
push
lods
pop
and
popf
jl
sbb
mov
enter
mov
lds
push
in
or
pop
and
add
cmpsb
fcoms
jge
das
arpl
push
jnp
into
sbb
sbb
fldl
testb
movsb
xor
mov
cmp
stos
dec
sub
popa
fistl
addr16
mov
and
rdtsc
pop
fwait
sti
mov
pop
pop
pop
or
mov
push
addr16
dec
insl
gs
loope
aam
popa
popw
add
test
push
xchg
xchg
dec
das
dec
ficompl
subb
sbb
addr16
mov
jge
and
shr
lret
add
or
sub
fidivrl
adc
cld
and
mov
xchg
jne
sub
sbb
mov
pop
pop
mov
jno
cltd
stos
clc
div
or
sbb
dec
rcl
jg
fnstsw
and
push
movsb
faddl
push
adc
call
out
add
or
lock
cmpb
or
mov
inc
sbb
sub
push
ljmp
xacquire
jb
xor
stc
insb
stc
sbb
lea
and
jno
inc
jl
dec
sbb
aas
ljmp
pop
out
add
fldenv
push
mov
in
xlat
push
xorb
dec
cmp
inc
divl
mov
dec
lea
ds
fs
lods
cli
in
int
int3
dec
je
dec
sar
mov
data16
sub
pop
sbb
insb
push
test
sahf
add
cmp
outsb
xchg
loope
dec
daa
push
push
in
pusha
pop
mov
insl
push
test
popf
push
push
aam
in
xchg
xor
rcrb
pop
pop
mov
std
push
mulb
imul
insb
xor
and
jge
add
or
call
mov
or
sub
ljmp
push
cs
inc
xchg
rolb
aaa
dec
mov
lret
sbb
sub
xor
lret
sbb
es
inc
and
scas
sub
or
out
inc
push
mov
xchg
fldcw
push
mov
or
jbe
aaa
cmc
mov
sub
pop
add
test
mov
sbb
mov
add
adc
sbb
pop
lret
pop
mov
xchg
xchg
and
dec
lods
test
ja
leave
cmp
xchg
ljmp
call
mov
clc
sbb
lods
mov
fidivrs
pop
loope
push
pop
je
ficoms
leave
out
sub
pop
push
lea
je
pop
fldz
and
scas
les
xchg
sub
js
xor
mov
jmp
sub
fcoml
and
lcall
lds
pop
xchg
test
xchg
pop
sbb
mov
fst
xor
push
mov
jne
loopne
jmp
mov
mov
hlt
jge
cmp
xor
sbb
data16
sbb
outsb
in
inc
dec
test
filds
mov
add
inc
jnp
popf
pop
push
cmp
das
ret
xor
scas
inc
cmc
inc
jae
ficompl
ja
xor
inc
xchg
sbb
fisubs
insb
mov
pop
sbb
cmp
pop
out
insb
fadds
mov
mov
ficompl
cmp
mov
push
push
arpl
lcall
dec
pop
outsl
mov
fwait
xchg
or
push
inc
lds
cmp
pop
dec
sub
jb
mov
mov
mov
in
pop
cmp
jne
jg
dec
inc
fcomp
sbb
inc
dec
sub
stos
dec
test
push
xchg
inc
dec
fwait
mov
push
jno
ret
xor
data16
pop
add
sbbl
jo
sbb
jne
fsubl
pushl
shrl
fldcw
jno
out
mov
outsl
cmpsb
enter
jno
mov
jp
es
stos
cmp
dec
mov
iret
xor
push
adc
test
rclb
popf
cmp
mov
fldcw
dec
mov
xor
xlat
dec
test
out
imul
lret
and
ja
xchg
and
fnstenv
test
pop
pop
cmp
pop
sbb
xor
ja
pop
inc
and
lret
add
pop
and
sbb
loop
mov
pop
sub
je
mov
add
sub
jl
icebp
push
pcmpgtb
in
pop
test
addr16
pop
arpl
out
call
push
test
addr16
push
mov
jno
icebp
pop
xchg
cmc
cmc
mov
pop
xor
lods
imul
repz
pop
mov
xchg
or
call
adc
mov
aaa
gs
loopne
es
fsts
jecxz
pop
or
cmp
dec
cmp
dec
sbb
and
sub
inc
xlat
pop
xor
push
dec
out
pop
lea
and
mov
inc
mov
jmp
xor
cmpsl
arpl
inc
mov
je
repnz
std
xchg
dec
xorl
xchg
jge
pop
pop
test
jmp
and
and
sub
pop
sbb
inc
and
test
mov
push
not
and
ficoml
fildl
sahf
mov
mov
push
dec
lea
daa
out
jb
dec
mov
cltd
loop
dec
repnz
and
pop
dec
and
xchg
lret
push
fsubl
jae
mov
push
pop
ret
add
dec
loop
fldenv
mov
push
xchg
psubw
in
clc
jne
lods
das
imul
ja
jge
dec
dec
sub
sub
sbb
sbb
sbb
and
loop
popf
clc
adc
xlat
push
enter
int3
push
fstl
push
fstps
std
mov
data16
mov
push
pop
pop
es
aaa
movsb
outsl
add
mov
jl
cmpsl
scas
jmp
outsb
pop
lahf
or
sub
push
pop
sbb
push
adc
fsts
or
out
sarb
mov
dec
push
out
sub
stos
lods
lock
inc
rorb
xchg
mov
out
icebp
daa
jne
scas
xor
mov
sub
out
fnop
pop
pop
fsubl
adc
cmp
push
add
mov
into
mov
xlat
aas
sbb
pop
cmp
subb
adcb
pop
mov
mov
das
repnz
outsb
int3
fsubrl
loop
imulb
loop
and
rcr
sub
test
xlat
icebp
imul
push
xor
xor
std
mov
out
enter
adc
loope
popa
push
mov
es
in
fnstenv
lock
lret
inc
pop
dec
je
mov
xor
cmp
lcall
add
hlt
xor
ret
dec
mov
js
fneni(8087
push
and
addr16
push
push
mov
pop
sbb
sub
adc
out
inc
outsl
push
repnz
es
adc
push
popf
enter
jns
mov
xchg
mov
cmp
adc
repz
cwtl
push
testl
shrb
xchg
mov
fcmovb
dec
cmpsb
or
mov
out
dec
cmpl
sbb
subb
bound
xchg
dec
rorl
lea
outsb
cld
sub
xchg
pop
mov
dec
sarl
sbb
std
xor
dec
sbb
leave
adc
daa
xchg
or
data16
mov
add
xor
inc
ret
testb
xor
mov
dec
cli
add
ljmp
loopne
cmpsl
sbb
add
jns
addr16
daa
das
cmp
gs
sbb
sbb
pop
stc
inc
inc
sbb
lods
loop
inc
imul
iret
mov
es
xor
dec
or
inc
mov
jl
or
repnz
cmpsl
mov
xchg
iret
jecxz
lods
dec
mov
fyl2xp1
dec
sti
js
mov
inc
in
data16
sbb
inc
cwtl
adc
rcrl
repz
or
aaa
roll
ljmp
cmpsl
out
sbb
cmp
enter
sub
test
dec
cli
mov
pop
fwait
in
sbb
pop
adc
mov
or
mov
mulb
dec
lock
lock
pushf
pop
dec
xor
stos
cwtl
sbb
cmp
add
dec
xor
fwait
add
and
or
pop
js
test
out
dec
jbe
mov
stos
lcall
leave
and
fwait
popa
xor
sub
mov
xor
pop
test
cltd
jp
out
fs
mov
movsb
inc
cmp
in
sub
and
jg
push
lock
mov
scas
repnz
xor
inc
xchg
jp
fidivrl
cwtl
mov
and
pop
movnti
sub
sub
mov
mov
popa
dec
popf
mov
xchg
stos
sub
mov
imul
popa
cmpsb
sbb
mov
ja
add
icebp
fwait
jecxz
xor
xchg
sbb
fcoml
mov
inc
mov
xor
mov
and
jo
lods
push
sub
mov
adc
cld
popf
fisubl
push
lods
daa
in
xor
push
inc
ja
inc
pop
femms
inc
out
inc
xor
dec
fnsave
loop
js
clc
inc
cmp
daa
cmp
push
fisubrl
loope
popf
insb
cmc
inc
js
sbb
dec
push
jg
sbb
xchg
mov
iret
lods
lcall
lret
dec
inc
cmp
and
rcrb
or
imul
lret
lds
jo
inc
cmpsb
rolb
loopne
mov
mov
mov
lock
stos
mov
sbb
mov
ret
popf
mov
push
fs
aam
js
lahf
pop
sub
in
jno
cs
cmp
stc
cmp
aad
cld
xchg
sarl
pop
stos
or
inc
xor
repz
or
lds
xor
xchg
dec
cbtw
mov
into
stc
pop
inc
jns
jmp
adc
loope
or
mov
dec
xchg
mov
scas
lret
vpslld
int3
cmc
mov
stos
in
mov
xor
cmpl
lret
shlw
push
dec
jecxz
cmpsl
lret
mov
hlt
ss
mov
lock
out
in
call
xchg
adc
ficoml
cmp
pop
fiaddl
inc
out
mov
data16
dec
pushf
mov
push
in
jno
or
aad
icebp
jl
mov
inc
aas
clc
into
dec
call
fwait
ds
in
shl
out
cld
mov
fstps
cmpsl
fadd
adc
ret
mov
inc
cld
sub
outsb
enter
inc
pusha
das
stc
and
push
fnstenv
mov
in
in
pop
in
ficompl
addr16
push
aaa
cmpsl
testb
sbbb
lock
outsb
sbb
push
adc
cwtl
or
leave
mov
cmp
popf
data16
and
js
xor
xor
data16
adc
fisubrl
adc
sar
add
pushf
and
sbb
jge
mov
stc
xchg
push
lret
mov
cmp
mov
mov
push
push
subb
cmp
xor
or
pop
ret
xor
into
mov
imul
jge
data16
jo
push
sbb
push
push
stos
sub
imull
xchg
xchg
arpl
mov
push
sbb
jne
push
push
xor
stos
loopne
or
xor
mov
fs
addr16
outsb
sbb
clc
scas
pminub
inc
mov
dec
adcl
dec
aaa
mov
push
out
ja
inc
jne
lods
shll
and
int
jnp
movsl
xor
cmp
pop
xrelease
repz
mov
or
adcl
dec
jmp
aas
sub
mov
ja
mov
cmc
data16
aas
inc
lods
aaa
dec
jne
adc
xchg
ja
pop
jmp
jmp
dec
mov
ss
jle
jp
sbbl
aad
fnstcw
mov
int3
pop
dec
je
xchg
in
adc
lret
mov
gs
dec
dec
lods
xchg
mov
dec
dec
inc
push
pop
xlat
pop
cs
dec
dec
test
ret
out
insl
jne
in
or
scas
pop
sbb
add
or
sub
aas
fidivrl
xchg
negb
pop
mov
in
icebp
outsl
loopne
repz
dec
int3
call
adc
fmul
mov
or
icebp
mov
pop
inc
shl
subl
mov
outsb
cmp
pop
mov
jmp
sbb
and
inc
pop
btr
mov
shr
inc
dec
outsl
sbb
ret
dec
gs
jne
cs
sahf
es
iret
aas
sbb
ljmp
mov
xor
and
xor
dec
dec
dec
out
or
sub
mov
mov
xchg
ds
inc
cmpsl
jne
repnz
lock
xor
inc
psubsw
test
jbe
inc
fldenv
mov
dec
mov
int3
aam
dec
push
cmp
lock
xchg
xor
adc
int3
data16
lds
movsl
jns
dec
jbe
pop
cmpl
xchg
adc
xchg
add
sbb
sub
in
dec
hlt
shlb
enter
lcall
cmp
mov
lret
dec
mov
adc
sub
fiadds
adc
sub
inc
fisubl
iret
lahf
lods
scas
and
bound
out
lret
fidivl
or
dec
call
xchg
jmp
shl
dec
xor
mov
std
cld
adc
push
lds
ret
sub
call
loop
sub
mov
sbb
pop
xorl
pop
notb
std
and
popa
nop
insl
outsb
sbb
inc
sbb
loopne
sub
xor
flds
sbb
cmp
imul
dec
mov
es
mov
mov
sbb
inc
push
cmp
or
loope
push
jge
repnz
imul
jg
flds
xchg
and
adc
pop
adc
jb
fcompl
lret
cmp
test
divl
ja
dec
mov
cmc
push
xchg
pop
jp
mov
mov
push
xor
aaa
mov
adc
cmp
inc
xor
and
out
cmc
xchg
out
cmp
and
and
mov
mov
mov
mov
lret
pusha
pop
push
sub
out
mov
ret
xchg
aad
loop
addr16
idivb
sbb
filds
xor
stos
lcall
jle
xor
les
call
sub
test
fldenv
hlt
cmp
push
rcl
inc
std
xchg
mov
daa
movsb
pop
addl
pop
xlat
jns
stc
das
jb
decl
out
lret
lock
mov
das
flds
imul
dec
dec
jbe
addr16
out
add
addr16
sbb
cltd
dec
sub
rcrb
xchg
push
add
lea
sbb
xchg
jecxz
rolb
fdiv
insl
test
xchg
dec
enter
jbe
fmuls
test
cld
push
push
into
add
packuswb
xor
adc
pop
mov
dec
aaa
sahf
mov
jp
sbb
mov
call
mov
xor
mov
into
aam
arpl
rorl
add
int3
sub
stos
fists
inc
adc
in
lcall
dec
jle
sub
bound
pop
fs
xor
or
dec
mov
dec
sbb
xor
dec
rclb
adc
out
push
or
sbb
stc
pop
fsqrt
push
insb
mov
ja
jns,pt
in
pop
jl
sbb
out
pop
ret
push
push
data16
inc
pop
and
mov
jns
repz
mov
jl
inc
jmp
inc
sbb
sbb
das
mov
xor
out
pop
nop
scas
sbb
sahf
cmp
push
xorl
dec
xchg
es
fldenv
jno
fsts
icebp
rcrb
dec
daa
push
mov
pop
fsubrs
data16
mov
fwait
movsb
lea
sti
cmpsb
adc
outsb
sarb
mov
push
lret
dec
mov
je
sahf
insl
dec
in
cli
daa
sbb
dec
push
leave
xor
or
push
cwtl
dec
push
test
insl
cmp
and
xchg
adc
loope
rcrb
in
mov
fsubrp
lea
sub
pop
mov
daa
ss
leave
push
ljmp
imul
scas
sbb
lret
cwtl
aas
aad
leave
call
loop
fxch
mov
sbb
inc
or
pop
das
scas
lret
push
inc
pop
add
pop
ret
test
push
pusha
sbb
push
lock
das
lret
loopne
fnstenv
cmp
dec
sub
mov
xor
xchg
mov
inc
jp
xchg
xor
in
push
lods
or
xlat
adc
push
and
fs
test
sbb
push
inc
or
mov
mov
popa
pop
arpl
fstpl
adc
sbb
popf
in
fistl
cli
ud1
stos
push
sbb
dec
mov
leave
nop
lret
cld
sub
jne
xor
sub
pop
insl
enter
lea
imul
stc
lcall
pop
sbb
mov
out
adc
cmp
into
sbb
idivb
orb
pop
aam
fnstenv
mov
lea
inc
jg
test
push
sti
inc
addr16
or
or
fwait
or
sbb
mov
pop
dec
dec
mov
enterw
sbb
ret
add
stos
fwait
adc
dec
or
leave
dec
test
fdivrp
dec
push
and
lods
into
mov
push
sbbl
popf
pushf
xchg
jg
cmp
scas
xor
sbb
and
cmp
sahf
mov
jmp
jmp
lock
les
jo
pop
jo
add
outsl
sbb
mov
insl
icebp
mov
sbb
xchg
js
ds
and
lret
daa
cmpsb
hlt
push
xchg
pushw
mov
imul
xlat
icebp
add
mov
jno
test
pop
stos
loopne
mov
cmp
inc
fcompl
xchg
pop
imul
adc
cwtl
gs
dec
push
cwtl
mov
inc
mov
dec
ret
iret
movsb
int
cmc
das
mov
imul
lcall
jl
cli
sub
push
sbb
sbb
push
dec
leave
loopne
imul
add
push
cmpsl
or
dec
movsl
jge
ret
fs
pop
shrb
insb
stos
sbb
inc
loope
inc
inc
scas
dec
fnstenv
sti
xchg
adc
out
push
test
popa
jmp
sub
jbe
sub
insb
cmp
or
jecxz
cmp
cltd
fwait
call
jb
mov
mov
cltd
je
lods
jle
sub
into
ret
sbb
mov
ret
testb
test
push
data16
mov
or
mov
ja
enter
std
aam
xchg
pushf
icebp
pushw
cltd
ja
jnp
fldpi
shll
dec
mov
iret
pop
test
jmp
xor
int
jl
add
mov
pop
dec
mov
les
addr16
push
sbb
outsl
xchg
fnstcw
mov
clc
mov
jmp
int3
xor
js
sbb
sbb
fcmovnu
not
cmpsb
push
andb
mov
jnp
mov
js
mov
fnstsw
fistpl
dec
ret
rol
jg
xchg
enter
jl
sub
mov
adc
or
les
xchg
xor
dec
push
addr16
lods
pop
dec
push
mov
pop
xchg
mov
add
sbb
test
fsin
sbb
and
dec
dec
pop
cmp
lea
std
stos
imul
xchg
jns
mov
jle
stc
push
inc
adc
fnstcw
popf
or
mov
icebp
pushf
jp
pop
sbb
mov
or
jo
hlt
fsubrl
or
daa
mov
ja
sbb
xchg
iret
lret
cs
out
and
les
fdivs
negb
fists
sbb
sbb
dec
sbb
insb
xor
in
push
aam
xchg
scas
les
sbb
xor
fisubrl
adc
adc
xchg
lret
ror
jo
inc
daa
addr16
add
bound
mov
testb
in
lock
insb
std
pop
mov
nop
ja
cmp
out
jo
fisttps
mov
mov
mov
adcl
in
sub
push
pop
enter
pop
xor
push
fs
cmp
test
dec
pusha
inc
inc
lret
push
cmp
in
sbb
add
push
daa
movsl
push
fcmovu
shlb
andl
gs
or
mov
jns
inc
aas
mov
xchg
ret
test
sub
call
jmp
jne
loopne
push
sbb
fyl2x
lods
je
sbb
adc
stos
xor
fsts
push
and
sub
arpl
dec
or
push
push
rclb
test
dec
xchg
sbb
xchg
inc
jmp
inc
push
lods
sbb
mov
cs
cmc
insl
xor
jnp
xor
xor
mov
sub
jns
loop
pop
jge
ja
stos
mov
push
cs
cwtl
scas
rcl
push
cmp
lcall
sbb
sbb
inc
jns
jo
pop
dec
sahf
int
mov
pop
nop
xchg
data16
sbb
mov
into
movsl
jae
in
push
mov
ljmp
repnz
lret
negl
rclb
mov
jae
jmp
inc
push
and
sbb
movsb
sbb
cwtl
mov
test
bound
and
iret
js
loope
rclb
cmpl
mov
dec
cli
aad
jae
sub
outsb
cli
push
mov
or
lcall
mov
adc
sbb
cmp
bound
cld
nop
sbb
mov
dec
gs
mov
jmp
lahf
push
js
out
inc
mov
pusha
push
addr16
jne
fidivrl
test
clc
ffreep
pop
lods
dec
loop
lods
into
cltd
mov
sarb
loope
xor
leave
cmp
dec
inc
fdivrl
mov
and
aad
bound
mov
imul
das
pop
loop
daa
adc
dec
cltd
jbe
jbe
aas
popf
fcmovnbe
pop
sbb
inc
flds
rcrb
add
jg
jbe
sbb
pop
push
mov
insl
bound
xor
mov
push
dec
lret
xor
push
mov
inc
inc
ja
loop
sub
addr16
aaa
cmp
sub
es
pop
testb
and
int3
imul
jmp
adc
push
lret
jl
fstps
jp
cwtl
mov
sbb
imul
inc
or
cmp
shll
fnsave
jg
mov
repnz
data16
loop
push
sbb
mov
das
mov
daa
in
cmc
xor
and
inc
shlb
iret
xor
pop
mov
cltd
repz
ljmp
and
dec
sbb
aam
ljmp
cld
push
pusha
inc
xchg
inc
inc
lea
sti
fwait
dec
push
mov
lret
jg
aad
lods
sbb
test
sub
leave
jbe
cmp
pop
mov
add
push
out
lods
adc
mov
pop
movsb
add
cmpb
and
push
mov
out
shrb
push
les
fistps
xor
xlat
adc
popf
push
cmp
sarb
test
add
dec
leave
inc
lods
adc
roll
dec
fwait
in
mov
xchg
add
fisttps
add
mov
lcall
and
cmp
inc
out
in
lea
jge
xor
in
rcrb
push
add
inc
fsts
xlat
into
inc
jmp
sbb
ss
fldcw
jle
xchg
movsl
cmpsb
and
fs
shl
pop
adcb
adc
out
adc
sti
lcall
pop
pusha
out
sub
pop
mov
imul
data16
inc
repnz
sbb
lods
xlat
movsb
mov
es
je
adc
push
push
pusha
mov
mov
in
mov
xchg
mov
jbe
stc
sbb
enter
push
mov
js
rcl
cli
inc
xor
add
out
dec
sub
enter
es
xlat
sbb
sbb
enter
push
add
and
fldpi
sahf
push
leave
repnz
orl
dec
js
push
movsl
dec
xor
xor
add
push
xlat
xchg
ficompl
pop
insb
cmp
js
orb
ds
sub
idivl
std
rcll
mov
es
mov
add
out
es
pop
pop
das
mov
nop
out
enter
test
jecxz
dec
inc
add
dec
aad
andl
neg
popfw
push
aam
dec
mov
fdivs
mov
mov
ja
add
mov
push
fidivl
insl
mov
loopne
sub
sbb
mulb
enter
jbe
insb
out
popl
and
adc
pop
mov
test
addr16
shll
sbb
test
ss
aad
or
xchg
in
pop
inc
sbb
pop
out
cmc
sarb
loopne
je
cmpsl
cmp
jl
xor
sub
fdivrl
mov
adc
jecxz
pop
cmpl
cmp
jmp
xor
cs
mov
cli
movsl
mov
movsl
repnz
push
inc
pop
jae,pn
adc
sahf
movsl
jnp
into
jb
std
std
cs
fldcw
sbb
sarl
jp
cmp
loopne
addr16
pop
sbb
ja
popf
fidivrl
ret
lock
mov
or
dec
int3
test
repz
mov
push
add
je
inc
mov
mov
fldt
mov
gs
popw
das
fstpt
push
leave
mov
fld
pusha
sub
add
shl
add
or
divb
xor
sbb
mov
sbb
test
ror
push
xor
jmp
cmpsl
jecxz
ds
dec
pop
sbb
and
push
sub
int3
cld
roll
push
sahf
shr
pusha
mov
out
jbe
stos
cmp
push
ss
flds
jb
mov
inc
pop
int
cmp
stos
lea
adc
mov
xor
outsb
mov
and
push
sub
iret
mov
mov
sbb
call
sbb
pop
fcmovne
fstps
out
cmp
push
rclb
dec
and
fildll
push
sub
sbb
ret
add
cmp
xor
nop
hlt
fcmovbe
pop
cmp
lods
push
or
sub
std
xchg
fdivs
jns
jge
mov
pop
xchg
int
sbb
insb
nop
jno
push
lds
push
dec
pop
lcall
data16
cs
in
jp
leave
xchg
jmp
fldcw
sbb
fsubp
jne
cmp
mov
cmp
pop
mov
add
pop
jnp
push
fistpl
and
lods
inc
cmp
mov
iret
and
push
mov
cmp
sub
roll
loopne
loop
mov
push
dec
rclb
testl
xchg
ret
faddl
xor
mov
or
ds
pop
dec
std
sub
xor
sarb
sbb
dec
psrad
dec
fsubrs
cmpsl
insl
and
cmp
inc
jle
xor
push
xchg
push
loop
popa
ss
test
mov
mov
dec
pop
rclb
mov
jp
lock
dec
cld
repnz
mov
sti
pop
cmp
mov
sahf
push
jo
cmpsl
xor
ficomps
and
fnstcw
inc
shll
in
push
lret
dec
lahf
lds
jnp
cld
inc
addr16
xorl
hlt
stc
cwtl
sub
gs
sub
stos
sub
cltd
les
test
push
out
add
dec
stos
jno
add
push
jo
sbb
imul
mov
adc
sar
xlat
inc
fiaddl
fs
sbb
sub
scas
mov
add
cmpsb
jg
cwtl
adc
fs
dec
jno
fbld
rorl
outsl
jne
dec
xlat
test
imul
bound
sbb
out
and
flds
mov
fldl
fwait
xchg
xchg
pop
cmp
xlat
insl
sbb
mov
pop
loopne
sbb
test
lods
xchg
push
jns
mov
adc
mov
sbb
shl
jl
les
cmpsl
loop
cmp
or
push
xor
ja
enter
mov
lret
mov
rcrb
sbb
shl
sbb
and
sub
mov
pushf
dec
pushf
mov
mov
data16
lcall
sbb
cmp
shrl
inc
sub
xor
sub
sbb
sub
loopne
inc
sbb
fcomps
loop
dec
ljmp
std
mov
cmp
fiaddl
dec
xchg
scas
ja
mov
ss
jne
sub
pop
dec
std
imul
inc
sbb
pushw
cmp
xchg
xor
mov
mov
icebp
sti
jg
jp
xor
mov
push
dec
mov
jno
ret
mov
push
cs
mov
add
in
stc
sbb
arpl
lahf
clc
aaa
inc
lds
into
int
mov
mov
inc
aaa
addr16
aaa
nop
lcall
lea
or
jecxz
mov
push
pusha
test
movsl
mov
push
adc
mov
lret
sbb
mov
lods
data16
dec
sbb
ja
call
clc
scas
les
sbb
adc
or
test
les
das
mov
jnp
jp
xchg
mov
mov
sti
or
push
pop
fsubr
fnstsw
sub
jns
fnstenv
sub
or
mov
dec
mov
pop
pop
pop
repnz
insl
adc
je
in
inc
dec
sub
sbb
pop
xchg
pop
jne
xchg
fnstenv
in
scas
push
adcb
inc
sub
lcall
xchg
rcrb
jne
jle
inc
sbb
fstps
sub
daa
addb
dec
in
mov
fidivrs
in
pop
dec
in
lock
dec
repz
in
rcr
cmpsb
push
fmul
mov
xchg
repz
adc
pop
pop
call
ret
sarb
fistpl
loope
int3
in
dec
xlat
rcr
xor
rol
adc
dec
dec
and
add
mov
into
cmc
lods
fistpl
cmpsb
test
call
sbb
push
stos
lahf
dec
fs
fwait
sbb
and
fstps
push
mov
dec
enter
mov
push
addr16
leave
sbb
ficoml
inc
or
push
push
add
out
sbb
movsb
std
dec
pop
push
scas
mov
sub
jge
sbb
mov
mov
xor
mov
inc
jb
mov
mov
ror
dec
fnstenv
xor
lods
ss
sbb
cmp
cltd
xchg
dec
inc
fwait
mov
sbb
mov
fldcw
sub
out
mov
xchg
fmuls
lahf
xchg
pop
push
ss
jne
push
cmp
mov
mov
ret
inc
jne
stos
sbb
divb
lods
or
out
inc
pop
fs
imul
cmp
or
lcall
sub
call
jecxz
aad
push
repnz
dec
adc
std
dec
mov
loopne
cmp
inc
sbb
cmpsl
push
sahf
push
cli
or
jbe
dec
sbb
sarl
mov
dec
dec
jl
sub
idivl
negl
test
daa
push
lds
lea
fs
gs
pop
daa
setl
add
xchg
xchg
cmp
and
enterw
inc
sbb
or
push
push
adc
sub
mov
dec
adc
ja
addr16
movsb
cmp
push
mov
dec
dec
ss
sbb
clc
ret
into
adc
call
es
aad
mov
add
lods
rcrl
sub
lret
enter
push
test
fldenv
jb
sub
rcrb
sub
dec
cmc
add
adc
pop
or
cmp
insl
wbinvd
std
mov
lahf
dec
cmpsb
lods
fwait
push
inc
ret
bnd
lock
add
dec
popa
cltd
lods
jmp
add
fstp
add
lret
push
addr16
dec
and
adc
mov
xor
stos
add
dec
out
mov
lds
call
sbb
stos
lock
mov
std
in
daa
repz
pop
repnz
sub
ja
sbb
xor
sarb
mov
push
mov
cmp
xor
jle
addr16
push
add
insl
xor
xlat
outsl
lcall
jo
sbb
fdivrs
fiadds
adc
sbb
jae
loopne
cli
test
sub
inc
adc
call
scas
filds
data16
xor
loopne
cli
push
sbb
scas
cmp
fcmovb
adc
mov
xchg
sbb
pop
ja
push
call
cmp
pusha
loop
mov
out
mov
test
data16
jg
mov
pop
cs
std
xor
jmp
dec
xor
lods
out
dec
cmp
xchg
mov
push
push
leave
lcall
je
jb
loope
jmp
sbb
sbb
push
test
push
call
sbb
xor
out
adc
pop
fs
popa
lods
mov
test
mov
out
and
jne
mov
dec
sbb
popl
pop
outsb
xchg
cmp
inc
daa
sarl
ret
pop
adc
cmpsl
aam
and
inc
mov
xor
inc
xchg
fbld
leave
cmp
in
fiaddl
in
loope
movl
idivl
ds
xor
or
pop
mov
aaa
xchg
mov
jns
sbb
in
in
jbe
scas
lahf
stos
loop
and
pop
inc
push
xor
js,pt
sub
jmp
inc
outsl
mov
mov
ljmp
cwtl
push
lods
dec
cmp
les
mov
sub
jns
pop
and
mov
rcr
scas
jb
fstps
mov
xor
jbe
inc
pop
dec
ja
inc
call
data16
xchg
mov
subl
mov
mov
add
and
mov
cmp
sub
sbb
out
mov
sub
adc
test
outsb
popf
mov
lods
imul
gs
lods
cmpsl
addr16
push
daa
out
jne,pn
mov
cwtl
dec
lock
and
in
pop
cltd
push
into
adc
sahf
dec
lock
adc
and
int
pushl
xor
popa
mov
add
dec
push
and
dec
loopne
lds
in
push
push
sbb
fldcw
stc
sbbl
sbb
sbb
jecxz
push
adc
and
inc
fs
sub
repnz
addr16
push
add
sbb
insb
cld
lret
fldt
mov
jbe
jno
xchg
lcall
fsts
aaa
addr16
push
xor
nop
inc
sbb
jp
push
cmc
add
into
scas
fldcw
movsl
add
cs
mov
popfw
push
jge
adc
int
hlt
mov
ja
cmc
cmp
dec
cltd
mov
scas
inc
jnp
jp
emms
or
or
jae
test
mov
push
lods
pushf
sbb
sahf
inc
push
sbb
aad
fcos
pop
pushf
js
pop
scas
bnd
dec
dec
repnz
fldl
xchg
or
mov
dec
cmp
les
cmp
jbe
test
adc
push
adc
mov
xlat
out
fisubl
cmp
aad
adc
mov
add
stos
int
dec
test
fcmovnbe
and
ljmp
jp
into
popa
xchg
movsb
add
test
cmp
lcall
lds
pop
xchg
jo
fs
mov
sbb
push
cld
pop
imul
xor
mov
xchg
rcll
inc
mov
arpl
call
pop
movsb
dec
fnstsw
sbbl
jae
out
and
dec
clc
repz
sbbl
loopne
xor
jb
cltd
lds
cmc
sbb
dec
xor
or
sub
mov
inc
fstcw
xchg
js
cmp
outsl
aas
imul
test
mov
adc
data16
sub
scas
fldenv
mov
aad
subl
cmp
insb
jns
jns
aam
dec
jecxz
testb
out
or
sbb
in
test
lea
mov
hlt
sbb
pop
push
aas
call
shl
into
cmp
jo
dec
aad
aad
cmp
cmpl
and
dec
mov
in
dec
std
jno
adc
test
shll
flds
sub
arpl
loope
or
dec
inc
fisttpl
data16
movsl
fimuls
push
dec
jmp
pop
xchg
mov
icebp
cmp
sub
sbb
mov
xchg
ret
stos
in
xlat
pop
push
adc
fidivrl
mov
in
andl
or
cmc
or
loopne
xchg
xchg
xchg
cmp
sbb
enter
jns
adc
out
lods
jae
push
mov
pop
sub
mov
fs
test
sbb
mov
cmp
lods
push
lret
lea
cltd
mov
out
xlat
inc
push
jg
pop
mov
push
cli
popf
mov
stc
pshufw
rorl
loope
fsts
rcrb
das
push
add
jg
push
hlt
fiadds
mov
jmp
stc
lret
xchg
and
cmp
dec
je
push
lret
pusha
pop
inc
jbe
jae
push
inc
mov
mov
testb
lea
cmp
aas
mov
pop
xchg
mov
push
jmp
dec
xchg
test
test
scas
insl
mov
mov
ss
and
adc
hlt
inc
xchg
add
fbld
je
bound
test
or
clc
xor
add
test
sbb
into
iret
mov
jmp
jb
push
inc
jbe
cltd
mov
xchg
sub
xchg
cmpb
mov
add
out
je
inc
scas
sbb
dec
sub
shll
flds
cld
mov
xor
mov
adc
xchg
lcall
lods
sbb
dec
insb
loopne
gs
pop
xor
lret
dec
xchg
scas
adc
dec
outsl
mov
cmp
push
mov
je
pop
out
pushf
aad
addb
popa
insl
sbb
ja
fldenv
sub
add
dec
xchg
movb
xchg
and
xor
addr16
cld
faddl
nop
sbb
test
sub
and
jno
cs
cmp
insb
xchg
pop
pop
lret
dec
adc
dec
jl
mov
icebp
imul
jge
out
lock
ljmp
clc
or
icebp
fsts
cmpsl
and
enter
xlat
mov
mov
mov
cwtl
repz
into
xor
lods
pop
imul
or
sbb
sbb
push
out
stos
xor
cmpsl
or
lret
jb
aaa
and
and
jecxz
inc
push
out
or
test
fstpl
adc
int3
mov
fcompl
and
push
mov
out
adc
pop
in
add
dec
dec
sarl
adc
sbb
data16
xor
cmp
hlt
or
rclb
and
adc
test
sub
jp
adc
push
sahf
mov
and
adc
pop
imul
jnp
popa
icebp
sbb
add
das
orl
jbe
mov
lock
cmpsl
push
call
out
loop
mov
movsl
scas
aaa
ret
or
outsl
repnz
sbb
and
jo
inc
push
test
lcall
inc
mov
xchg
dec
andb
jno
cli
push
lahf
fldenv
pop
and
jae
xchg
cli
fstpl
in
fyl2x
xchg
iret
movsl
aam
dec
out
loope
dec
xor
mov
cmp
clflush
push
cltd
push
and
push
in
cltd
xor
inc
lods
sbb
adc
xchg
dec
mov
and
mov
loopne
leave
popf
mov
or
cmp
sub
das
fnstcw
jns
xchg
sbb
add
cmp
sub
arpl
out
push
adc
ja
pop
push
mov
lahf
test
adc
insb
fidivrl
adc
aam
sbb
or
pop
adc
fildll
jle
mov
mov
rol
pop
xorb
jl
data16
subl
jp
pop
enter
inc
or
pusha
mov
lods
adc
pop
dec
xchg
sbb
cmc
fidivrs
sbb
mov
or
psrld
mov
sbbl
pminub
mov
mov
dec
adc
inc
mov
lock
lret
ss
xor
mov
lock
pop
inc
dec
lods
mov
adc
cs
inc
add
lock
movsl
and
sarl
cli
fisttps
sbb
jnp
lds
cwtl
lret
xor
sub
leave
popa
mov
add
sbb
dec
lret
movsl
mov
mov
xchg
frstor
push
push
and
xor
sbb
dec
movsl
arpl
addr16
rcll
clc
out
push
lods
sbb
jb
sbb
push
or
mov
daa
out
mov
loope
inc
xor
fwait
out
jg
push
data16
in
lods
imul
sub
loope
pop
xor
daa
hlt
mov
sub
sbb
sbb
stc
sahf
leave
dec
and
add
jle
cmp
xor
mov
fsubrp
pop
sti
cmpsb
and
outsl
loope
cmpsl
adc
test
out
mov
push
lret
mov
dec
inc
dec
mov
push
mov
xor
pop
and
adc
push
gs
cwtl
daa
orl
in
and
imul
fstpl
xchg
adc
inc
sbb
enter
pop
and
mov
adc
dec
cli
xchg
xor
dec
mov
lods
lods
cmp
int3
std
cli
shl
inc
outsl
ja
dec
sub
add
daa
jmp
sub
dec
pop
es
cmpsb
xchg
ds
das
aaa
xor
lcall
push
inc
mov
add
mov
fistps
cmp
push
out
loope
inc
enter
push
mov
loopne
ret
xchg
jns
inc
jo
lods
rolb
jnp
inc
push
fucomi
sbb
lahf
jl
outsl
lcall
mov
mov
or
into
ss
loopne
cmc
out
cld
sbb
sbb
mov
xchg
sub
lock
movsl
sbb
js
adcl
mov
int3
jl
mov
js
mov
pushl
xchg
mov
in
inc
mov
push
dec
adc
pop
mov
jle
jge
dec
ficoml
ret
adc
push
and
mov
mov
xchg
stos
xor
out
jmp
sub
ret
clc
push
out
aad
int
icebp
scas
imul
sub
cmpsl
rolb
mov
stos
xchg
cmp
push
ret
call
sbb
jge
inc
maskmovq
idivl
jl
mov
dec
dec
sub
jns
push
cltd
mov
imul
mov
or
jle
data16
cmpsl
sbb
adc
leave
ss
jno
pop
lds
push
nop
mov
sbb
and
or
xchg
fldenv
dec
mov
pop
fsts
mov
rorl
lds
loopne
in
mov
data16
dec
jge
je
test
fyl2xp1
sub
inc
jnp
jns
mov
sub
push
popa
mov
rolb
ja
fwait
adc
sub
jnp
or
aas
xchg
inc
mov
push
mov
lcall
dec
inc
gs
jg
push
xchg
inc
test
or
repnz
and
or
jl
sub
nop
jmp
clc
das
frstor
inc
cmp
sub
push
imul
or
rcl
lret
data16
adc
sbb
mov
mov
data16
mov
push
stc
mov
repz
outsl
cwtl
call
orl
xor
cli
cmp
jp
cmp
pop
pop
adc
repz
mov
popa
sbb
inc
push
dec
adc
data16
cli
nop
pop
push
es
lret
scas
repnz
jno
xchg
stos
loop
inc
cltd
lods
xor
mov
adc
push
lret
movsb
dec
and
imul
cmp
push
cli
inc
xor
fidivs
stc
int3
jmp
addr16
xor
mov
and
mov
mov
push
inc
or
pusha
test
ljmp
add
popl
xor
lret
and
std
sti
imul
push
jno
sub
mov
pop
aaa
ret
rcll
adc
dec
sub
fs
shlb
fsubs
mov
outsl
imul
pop
lcall
mov
push
inc
rclb
addr16
dec
fwait
jbe
jmp
mov
mov
sbb
add
xchg
outsb
ds
dec
lock
inc
imull
cmp
and
loop
gs
cmp
dec
cmc
xchg
jnp
int3
sub
pushf
mov
sbb
stos
fwait
fs
and
add
sub
std
cs
sahf
daa
fnstenv
aas
mov
mov
inc
sub
adc
lcall
sbb
out
push
cmpsl
sarl
push
outsb
adc
push
nopl
mov
sub
addr16
cs
imul
xchg
inc
imul
in
jne
popf
inc
cwtl
jge
mov
adc
jp
fcomi
aaa
inc
lahf
ffreep
data16
imul
mov
das
mov
bound
adc
pushf
or
inc
test
movsl
sbb
sub
lods
sub
push
xchg
clc
stos
mov
inc
iret
mov
cld
cmpsb
cmpsl
shlb
pop
sbb
cmp
cmp
fnstenv
inc
stos
loop
jnp
lcall
andb
icebp
and
loopne
mov
xchg
notl
cmpsb
dec
adc
pop
aad
cmp
adc
sub
fisttps
sbb
jg
jmp
push
adc
out
sub
mov
dec
jmp
mov
lock
mov
sub
iret
dec
int
cmp
repz
push
cs
arpl
aas
cmp
data16
dec
adc
stc
les
sbb
in
ja
pop
dec
jnp
mov
mov
pop
gs
out
inc
xlat
push
dec
inc
push
push
addr16
lret
dec
out
cmpsb
sbb
movsb
ret
pop
flds
mov
pop
dec
mov
mov
add
cmpsb
sbbl
push
pop
dec
fabs
mov
mov
dec
imul
mov
lea
insb
sub
jnp
fimull
mov
cmp
lods
cmp
lcall
mov
sub
sbb
clc
mov
xor
loopne
and
inc
lock
sub
cmp
mov
mov
xlat
addr16
xchg
movsb
movsb
mov
push
push
cmp
add
lcall
inc
mov
adc
sub
mov
add
cmp
mov
xchg
jno
testb
sti
iret
addr16
popa
add
adc
fcmovnu
mov
mov
enter
lea
lcall
cli
shr
xor
mov
dec
arpl
jo
dec
fnstcw
adc
cmp
movsb
mov
or
mov
sub
pushf
jp
add
out
sub
sbb
dec
add
ret
cmc
add
enter
dec
cmp
and
out
sti
and
jns
xorb
arpl
dec
mov
leave
fldenv
push
sbb
push
pop
inc
pushf
sub
push
fisubl
int
sbb
jnp
orb
push
imul
pushf
fsubs
or
mov
je
xor
popa
push
and
addr16
mov
push
stc
mov
arpl
aas
mov
cli
push
shrl
sbb
hlt
cmp
and
rcrb
das
addr16
cmpsb
lea
sub
inc
les
mov
data16
jo
stos
pop
cmpsb
mov
fidivl
imul
ss
jno
out
mov
xor
jmpw
sti
sahf
ja
insl
in
lcall
sbb
lods
pushf
je
mov
mov
call
cmp
push
jno
dec
push
fsubr
sbb
imul
sbb
in
fisubl
fldcw
mov
adc
push
popa
dec
dec
arpl
aaa
fdivrs
popf
xorb
sub
into
cmp
test
fimuls
data16
addl
out
imul
pop
xchg
mov
adc
sbb
dec
pop
sbb
scas
or
sbbb
mov
add
leave
sub
xchg
dec
lahf
adc
enter
arpl
into
dec
adc
rcrl
out
sbb
xchg
dec
dec
pop
dec
sub
fsubl
aam
data16
xchg
sarb
js
mov
jg
dec
inc
iret
call
and
jmp
mov
cmp
mov
inc
scas
cmp
inc
push
mov
push
test
mov
mov
loope
sbbl
or
aas
fcmovnu
pop
popa
clc
xor
mov
sbb
mov
or
adc
subb
mov
mov
jo
std
outsb
int3
add
dec
xor
mov
stos
mov
and
js
aad
cld
xchg
mov
xchg
mov
sub
ficoms
repnz
in
ja
inc
cmp
cli
fldcw
dec
push
ret
ljmp
jp
aam
addl
add
les
mov
sbb
mov
pop
and
out
data16
jo
dec
add
mov
arpl
cs
ret
jno
mov
aam
sbb
jp
lock
mov
inc
mul
aas
test
adc
xchg
scas
push
xor
mov
mov
out
mov
aam
hlt
sbb
popa
push
ficomps
stos
xchg
mov
mov
mov
movsb
lret
cs
sti
mov
jg
fadds
ret
data16
inc
popf
divb
mov
test
pushf
out
push
pop
xlat
sub
cmc
rcr
fldcw
cmp
sbb
test
sub
test
push
ja
mov
push
rclb
testb
jnp
sarl
fwait
dec
data16
and
cmpsb
push
xor
sti
mov
add
fsubrs
jo
xchg
ljmp
jmp
insb
sahf
xor
cmp
lock
daa
mov
sbb
in
scas
jno
cmpsl
loopne
shlb
daa
in
or
and
into
lret
insb
adcl
adc
mov
pop
dec
loop
cmp
outsb
test
mov
scas
fwait
in
dec
subl
pop
add
dec
inc
sbb
push
sbb
mov
xchg
adc
inc
mov
add
add
jne
push
nop
ds
ficomps
and
sub
and
ret
in
cltd
in
push
popf
icebp
popa
push
pop
add
cmpsl
push
add
lcall
es
mov
xchg
add
sbb
nop
ds
test
xchg
xchg
enter
pop
jge
mov
xchg
in
push
out
mov
jge
sbb
std
inc
xchg
test
js
pop
enter
sbb
jmp
pushf
dec
fiaddl
je
popa
dec
adc
pop
pop
pop
sbb
xchg
cltd
in
divl
js
int
xchg
mov
out
insl
pusha
jns
add
pop
mov
dec
mov
call
out
dec
cli
das
sub
fstps
or
xchg
mov
xlat
lds
mov
or
test
pop
jge
jne
sub
mov
fldt
adc
xchg
int
pop
sbb
mov
enter
orb
rorl
xchg
aam
sub
jg
add
ret
pop
data16
sub
pusha
clc
dec
repnz
imul
call
pop
lret
sub
sub
sub
lahf
dec
into
inc
dec
dec
push
fstps
inc
ljmp
adc
push
test
jmp
sar
or
mov
jle
xchg
xchg
repz
testl
xor
xchg
push
mov
and
push
mov
and
jae
cld
lods
fldenv
sub
bound
cmpsb
ss
fcmovu
cmp
lds
jl
xlat
mov
cwtl
cmp
fsubrs
test
sbb
lret
xor
fs
pop
lds
mov
rclb
jecxz
in
imul
stos
cmp
sub
push
inc
flds
bswap
loope
mov
popa
mov
jo
hlt
jg
push
xchg
cld
jl
and
imul
sbb
call
mov
push
test
leave
mov
mov
sbb
xor
fstps
jmp
cli
jae
cwtl
add
mov
les
data16
lds
and
lcall
fs
adc
or
jmp
jno
leave
or
es
xchg
ljmp
push
pop
adc
add
inc
gs
ret
outsb
mov
out
push
mov
or
push
les
and
mov
clc
enter
dec
sub
xor
or
xchg
insl
cli
neg
leave
jp
xlat
jp
das
cmp
loop
std
dec
outsb
lock
mov
sahf
ljmp
stos
dec
test
sub
push
sbb
divb
mov
xchg
cs
jae
and
enter
cltd
insl
pop
fs
stos
rcl
stos
push
fistps
or
pop
das
sub
mov
int
orl
jns
mov
iret
fnstcw
or
repnz
and
lea
jmp
hlt
push
adc
paddd
dec
data16
in
xor
xor
daa
mov
aad
imul
pop
je
adc
rorl
xchg
sbb
or
lods
rclb
mov
in
imul
mov
xor
enter
cmp
push
sbb
cmp
xchg
loope
inc
add
mov
mov
xchg
jmp
push
enter
cmpsb
data16
mov
sbb
and
nop
xor
fs
sub
movsl
aad
mov
lret
lcall
bound
data16
jp
adc
dec
jbe
je
mov
mov
mov
daa
sub
fisttpl
xorb
das
or
sbb
fst
dec
mov
je
fldenv
jle
lahf
popa
cmp
testl
pop
mov
imul
pushl
mov
mov
add
or
push
pop
adc
inc
xor
orl
fimull
jle
pushf
stos
lock
lods
jecxz
adc
dec
aaa
out
in
or
movsb
add
mov
iret
fcompl
jno
sub
hlt
movsb
dec
gs
add
fcompl
lcall
hlt
dec
aad
xor
pop
sbb
repnz
out
test
call
xor
push
fidivs
loopne
inc
xchg
and
jp
adc
sub
pusha
stos
hlt
in
js
add
push
xchg
or
scas
inc
into
cmovs
lahf
sahf
aad
hlt
data16
repnz
sbb
imul
xor
dec
cmpsl
and
rorb
ror
cld
jge
mov
and
imul
push
divl
rclb
idivb
push
dec
in
sbb
xlat
mov
aaa
sti
jo
icebp
sub
or
dec
das
adc
pop
dec
mov
out
mov
sub
ljmp
mov
and
dec
push
fcomp
mov
aas
insb
cmp
push
dec
add
cmp
dec
pop
adcl
push
icebp
inc
and
lret
or
cmp
xchg
mov
sub
push
in
xchg
addr16
sbb
incl
rcl
cbtw
pusha
cmp
dec
inc
push
push
incb
xor
mov
mov
test
push
push
mov
pop
lahf
jns
xchg
sbb
push
enter
aas
jne
adc
lcall
pop
enter
cmp
out
inc
lods
mov
cmpsl
lea
xchg
mov
shl
imulb
inc
dec
mov
cmp
enter
out
into
shll
in
sbb
flds
fnstenv
xor
loop
dec
push
jle
push
dec
inc
test
push
inc
pop
mov
fld
push
cmpsb
jne
cmp
ficoml
cmpsb
sbb
loope
outsb
mov
fcmovnu
xor
xchg
imul
int
mov
in
shlb
lret
leave
decl
mov
inc
cmp
fnstcw
mov
add
and
clc
dec
ret
fs
outsl
imulb
daa
sbb
ljmp
fidivrl
adc
xchg
hlt
inc
or
add
inc
stc
stc
imul
and
rcll
sbb
out
fldenv
aad
decb
nop
repz
es
gs
test
mov
rcll
cmp
lret
jl
push
fs
divb
adc
out
xorb
bound
cs
data16
data16
adc
mov
or
test
in
mov
sub
push
aaa
stos
adc
xchg
or
mov
movsb
dec
popf
lret
sbb
mov
push
inc
enter
dec
aas
add
dec
das
out
fcmove
les
mov
cmc
movsl
cmp
cwtl
popf
add
inc
rcrl
loop
outsb
sub
and
push
jae
push
stc
or
imul
rcl
sub
fnstcw
cmp
push
dec
dec
test
mov
mov
dec
mov
dec
add
imul
jg
lods
enter
dec
test
fs
and
dec
dec
in
sbb
lret
ja
jbe
push
pop
movsl
mov
scas
enter
fldenv
stc
insb
xchg
sarl
pop
dec
adc
repz
or
sti
sbb
jmp
in
in
adc
test
mov
popf
es
cli
mov
push
flds
enter
aaa
daa
sbb
jg
les
add
out
fwait
and
ret
lret
dec
je
push
mov
mov
or
mov
dec
fsubr
mov
sbb
adc
sbb
mov
or
scas
mov
sarb
addl
cmp
jne
adc
sbb
sbb
sbb
cwtl
pushf
push
je
scas
mov
pop
or
inc
lea
xchg
mov
or
lret
push
aad
jp
xor
fidivrl
cmpsb
int
xor
call
lock
sbb
stc
pushf
sar
leave
sbb
fisttps
xchg
inc
and
scas
fs
dec
test
test
mov
pop
push
mov
mov
rorl
ficoml
cld
sub
int3
out
jge
sbb
ss
sub
cmp
dec
cltd
scas
cmpsl
cmp
adc
sub
push
inc
dec
bound
cmp
repnz
dec
xchg
mov
sub
sbb
mov
rcrb
dec
jns
test
cmpsl
xchg
add
jp
cmp
mov
dec
adc
lds
sub
push
pop
dec
int3
bound
dec
testl
out
lds
fnstenv
outsb
mov
add
sbb
andl
mov
mov
xchg
gs
mov
hlt
out
dec
and
je
push
sub
and
sbb
pop
outsl
in
decb
call
outsb
out
mov
int3
fwait
or
dec
pandn
mov
fnstcw
mov
push
ret
leave
sbb
adc
push
addr16
int3
pop
out
sbb
xor
push
xchg
ljmp
stos
sub
popa
and
in
or
data16
mov
and
adc
fnstenv
or
ret
inc
mov
xchg
sbb
dec
push
mov
les
subb
push
repnz
dec
mov
inc
or
add
mov
fsubr
data16
inc
xchg
sbb
push
cmp
mov
mov
add
pop
cmp
push
imul
orl
out
pusha
sbb
mov
adc
fdivrl
xchg
mov
dec
sbb
inc
mov
flds
jae
popf
in
lods
or
dec
pop
cltd
inc
out
loopne
sarl
call
push
cs
dec
in
jg
into
xchg
faddl
insl
arpl
sbb
add
inc
mov
push
jp
xchg
outsb
fadd
repz
dec
aaa
lock
mov
icebp
sbb
fisttps
sub
mov
rol
pusha
int3
aaa
inc
mov
and
jle
rcr
je
jne
xchg
lods
cmp
mov
sbb
loop
cld
fstps
test
mov
dec
fildll
fidivrl
data16
or
inc
arpl
jp
xor
push
jle
xchg
add
push
inc
fwait
xor
iret
mov
loope
dec
test
loop
out
mov
sbb
les
test
in
or
out
inc
scas
xlat
cmc
cmc
xchg
aam
cld
shll
sahf
call
frstor
cltd
xchg
push
lds
es
call
cmp
mov
stc
leave
push
push
dec
ds
bnd
sub
incl
scas
add
cs
dec
xlat
lods
or
sbb
rcrl
pusha
dec
dec
push
cltd
adc
repz
adc
jmp
ltr
ja
daa
hlt
mov
scas
sub
arpl
stc
fnstcw
pop
jl
das
mov
fcompl
movsb
mov
mov
call
aas
popa
test
fiadds
mov
jp
push
mov
mov
aam
test
cwtl
pop
sub
clc
pop
repnz
ss
push
sub
mov
xchg
pop
sub
push
cs
cmp
sbb
test
and
sbb
scas
fsts
insb
mov
push
insb
jecxz
int3
pop
loop
inc
push
sbb
ds
and
fcompl
mov
mov
bound
jg
push
inc
mov
or
call
stos
mov
push
fs
popf
divw
pop
xor
aas
sub
jmp
xchg
push
cmp
add
jl,pn
icebp
out
test
jb
xchg
adc
xor
fsts
addr16
fistl
andl
and
sub
and
jmp
lcall
pop
ret
lahf
fstps
push
or
push
xchg
addr16
int3
movsb
dec
in
dec
adc
add
pop
sub
sbb
push
cmc
je
xchg
mov
test
mov
adc
dec
leave
sub
and
xchg
test
xchg
inc
pop
push
fmull
loope
shll
mov
mov
mov
shll
sub
dec
pop
push
or
loop
lcall
cmpsb
sub
rclb
jmp
loop
xchg
rcrb
icebp
adc
jl
scas
xor
add
icebp
dec
dec
fbld
dec
inc
pushf
sarl
xchg
punpckhdq
cli
aas
inc
jmp
daa
pop
and
aas
add
aam
sbb
loope
ljmp
sub
shl
je
jne
and
jbe
inc
call
sti
sbb
mov
mov
xchg
xchg
fisubl
mov
cltd
loope
aad
mov
addr16
mov
pop
push
sbb
inc
push
pop
dec
xor
dec
and
xchg
cli
or
push
das
pop
pop
mov
jg
fcmovb
popf
bound
fisubl
loope
add
test
pop
inc
dec
fnsave
rcl
cltd
je
inc
neg
adc
fcoms
adc
cld
movl
jno
xor
fwait
mov
jmp
or
cwtl
test
loop,pt
shll
mov
cmp
out
xchg
xor
fnstsw
mov
xchg
mov
fnstsw
push
rorb
cmp
or
jnp
sub
call
je
add
push
inc
lret
mov
in
test
ss
stc
andb
andb
pop
dec
mov
adc
mov
faddl
aas
loope
lock
cltd
pop
sbb
mov
dec
mov
mov
test
loope
inc
dec
mov
in
fists
addr16
es
ss
xchg
mov
sbb
fimull
movsb
aam
cmpsl
sbb
pop
adc
mov
cmovns
push
mov
push
lahf
flds
nop
add
cmpsl
lock
lahf
repnz
fwait
arpl
add
pop
cmp
jl
cmp
or
xlat
insl
ss
mov
imul
sbb
jl
jmp
sub
xor
insb
jns
mov
enter
or
dec
dec
sbb
shr
int
xchg
data16
in
fistps
inc
inc
or
fnstenv
mov
sub
aas
dec
pop
dec
push
outsb
lock
std
push
in
mov
rorl
sbb
dec
push
sub
sub
dec
sarb
iret
xor
int3
test
push
jmp
loopne
mov
sbb
sub
fxch
mov
mov
sbb
xor
rcrl
sar
cwtl
add
enter
push
mov
fcmovu
lods
xchg
pusha
je
jp
das
sub
mov
mov
test
movsb
mov
mov
and
lahf
repnz
sbb
cwtl
dec
mov
cmp
dec
popa
daa
or
je,pn
out
fwait
es
adc
fimull
loope
pop
sub
fs
lret
push
jnp
xor
cmp
stos
adcb
pop
jp
es
inc
inc
outsb
imul
mov
or
fsin
das
ljmp
out
sub
push
fisubl
fnstcw
cltd
or
sbb
push
mov
xor
imul
push
cld
negb
push
xor
pop
dec
cmp
sbb
idivb
pop
mov
cmpsb
js
int3
mov
add
es
stos
or
or
xor
cmp
call
inc
nop
push
and
push
adc
xchg
ss
xor
loopne
in
insb
fbstp
test
jb
ret
jge
and
and
push
shrl
and
mov
xor
data16
pop
dec
sbb
mov
push
cmp
fcmovnu
mov
jge
mov
sti
jbe
jmp
push
and
addr16
or
lret
ljmp
fld
inc
lret
loop
sti
rol
cmp
mov
in
cld
insl
xchg
imul
dec
lods
cwtl
dec
push
cmp
popa
daa
fldcw
sub
xchg
leave
dec
adc
mov
adc
out
fidivrs
jno
movw
cmp
jecxz
fistl
in
popf
jmp
sbb
cltd
mov
test
fdivs
cmc
aas
sub
xchg
mov
mov
jo
es
ss
push
mov
push
push
inc
pop
std
mov
or
loope
cmp
push
out
lea
xor
ror
pop
sbb
je
rcrb
jp
outsl
bound
jl
loope
cld
and
cld
push
fldenv
xchg
mov
inc
dec
xchg
add
addr16
inc
push
sbb
xrelease
jbe
je
mov
jle
pushf
and
inc
sub
jns
xor
das
dec
sub
mov
jl
in
mov
jecxz
loope
sbb
pop
fs
nop
stos
sbb
imul
test
jmp
push
je
pop
int
ret
movsl
sbb
cmp
out
push
sahf
shll
xchg
jnp,pn
jbe
pop
push
stc
les
shlb
ror
sub
jns
fadds
adc
xor
dec
push
ret
push
test
fwait
pop
data16
or
dec
dec
fcmovbe
ja
add
push
or
cmp
int
xchg
push
or
xchg
bound
xchg
into
jl
mov
and
sbb
add
mov
test
enter
xchg
sub
es
xchg
je
sub
jl
arpl
mov
repz
enter
dec
movsl
icebp
js
push
out
jmp
add
xchg
add
dec
push
test
sti
jle
jns
adcw
cmp
mov
fldcw
push
loopne
or
ss
lcall
dec
inc
ljmpw
sub
int3
ss
cli
lcall
jae
push
pop
flds
add
jno
xlat
in
in
inc
loop
adc
sub
sar
mov
xor
and
stos
mov
adc
pop
into
insb
xchg
dec
or
sub
jl
inc
sbb
jl
call
fmuls
mov
dec
movsl
test
mov
inc
push
pusha
lret
gs
orl
aad
les
in
cwtl
cwtl
cmp
pop
dec
gs
adc
in
mov
flds
stc
mov
add
mov
lea
dec
push
imul
movsb
xchg
cld
repz
dec
loopne
push
pop
adc
aad
push
pop
push
pop
pop
and
or
jae
push
shl
and
es
stc
fdivl
adc
dec
cmpsl
and
sarl
sub
mov
fisubs
das
imul
lcall
aad
lea
fisubrs
or
pushf
jmp
xor
xchg
adc
jo
pop
fldl
or
js
mov
out
pop
std
adc
sti
mov
inc
fidivl
ret
imul
push
ret
adc
push
repnz
add
xchg
pop
ret
push
sbb
fcmovne
sbb
dec
mov
cld
pushf
push
mov
test
lock
push
std
imul
int3
dec
dec
repz
inc
cmc
add
cmpsl
callw
lds
ljmp
stos
fisubrl
jge
movsl
scas
arpl
ss
mov
test
ret
xor
loop
push
outsl
pop
sahf
ss
push
add
sahf
bound
aas
sbb
inc
ds
mov
faddl
mov
sbb
imul
call
cli
dec
ljmp
rcrl
repnz
xchg
pusha
and
mov
inc
lea
aaa
push
aaa
pop
jmp
mov
sub
adc
sub
xchg
repz
push
test
shlb
mov
hlt
xor
or
out
or
and
jp
dec
aam
push
sbb
std
cmpsb
hlt
ja
jne
pop
xchg
sub
adc
inc
stc
push
ret
test
dec
inc
pop
addr16
add
mov
jge
daa
cmpsl
int
sub
repnz
pop
in
int
leave
mov
push
cmpsl
jne
pop
push
outsl
xchg
int3
dec
sub
pop
leave
jbe
fnstenv
ficoms
jne
and
inc
cwtl
push
adc
sbb
sbb
ljmp
sub
cmp
int3
outsl
jmp
mov
aaa
cld
push
fwait
adc
pop
int3
stc
mov
jg
dec
mov
lds
or
push
dec
out
sbb
inc
sub
mov
mov
mov
lahf
mov
inc
pop
pop
int
out
push
pop
xor
popa
sub
xchg
repnz
stos
and
test
inc
js
fsts
push
pop
xchg
into
das
push
mov
jle
pop
dec
push
rorb
addr16
sub
xchg
lea
loopne
jns
fs
out
or
sbb
inc
jne
stos
inc
sbb
push
mov
xor
mov
data16
sbb
cld
jns,pn
subb
adc
loopne
test
push
notb
cmp
jp
sub
and
loope
repz
scas
mov
ficoml
jae
jg
cwtl
dec
xchg
mov
xor
pop
std
xorb
rcrl
mov
leave
sbb
in
push
dec
pop
xor
or
lods
mov
xor
sbb
mov
pop
add
pop
fnstenv
loop
popf
mulps
adc
fsubrp
addl
jmp
lds
loopne
pusha
mov
call
xor
ljmp
int
sbb
scas
jbe
mov
decb
in
imul
mov
dec
nop
sub
and
loopne
push
repz
movsb
adc
fnstenv
insl
mov
push
frstor
sbb
pop
fbld
inc
dec
es
testl
fs
cmp
fcomps
sbb
sub
imulb
lock
fldenv
jge
adc
jp
dec
cmpsl
xchg
iret
mov
lea
sahf
mov
dec
je
jecxz
mov
fildl
insl
push
inc
jle
pop
cmp
sbb
test
call
stos
pushf
lret
fistpl
xor
jae
add
mov
ret
ret
test
test
push
cmp
mov
out
inc
ret
fimull
mov
ret
xchg
mov
jo
ffree
stos
ljmp
sbb
sbb
add
jbe
inc
stc
push
mov
shrb
jne
add
dec
and
leave
sbb
mov
jne
inc
cmp
std
pop
std
cli
jg
cld
xlat
mov
lahf
dec
loope
mov
jmp
stc
jecxz
sbb
add
push
jp
addb
jb
cmp
dec
pushf
imul
dec
ret
fsts
in
cmp
jmp
xchg
push
bound
std
jbe
pushf
ficompl
pop
rcrl
stos
rorb
nop
dec
push
leave
repnz
in
rcr
mov
add
out
es
aad
pop
xor
sbbl
jb
mov
push
dec
bound
xor
inc
fcos
fidivrs
jne
das
aam
int
dec
dec
stc
dec
xchg
add
pushf
enter
cmp
call
jbe
or
add
xor
ss
adc
fwait
paddusw
or
xchg
mov
outsb
flds
jecxz
imul
lret
ud2
shrl
lret
mov
fld
repz
push
pushf
inc
adc
sbb
adc
pop
flds
and
in
xor
jge
mov
stos
imul
idivl
out
sarl
cli
and
lds
rcrb
cwtl
dec
test
mov
data16
in
xor
sbb
mov
imul
mov
dec
add
sub
xchg
fistps
mov
ljmp
push
fmuls
aad
and
stos
or
dec
inc
xchg
test
repz
mov
int
mov
ret
jae
neg
les
xchg
jl
fs
call
addr16
cltd
mov
xchg
je
xchg
sub
fstl
jmp
shll
fsubl
cmp
adc
add
sbb
scas
cmpsb
dec
int
jecxz
aaa
cmp
jmp
jno
sbb
adc
cmp
les
and
sbb
iret
dec
aad
cmp
fs
fdivr
jmp
fisttpll
cli
stos
fidivs
repz
scas
dec
push
jecxz
and
xchg
add
adc
in
push
jge
inc
inc
mov
ret
je
add
sbb
stos
mov
mov
or
hlt
xor
pop
das
sub
lea
xor
rorb
clc
mov
dec
sbb
inc
jecxz
movsl
loopne
push
push
ds
repz
mov
aaa
dec
popf
test
mov
iret
andb
out
sbb
outsb
push
scas
loopne
les
pusha
rol
fs
outsl
mov
mov
in
lcall
mov
cmpsb
sbb
add
ficompl
out
or
int
dec
cld
pop
sbb
loop
js
rcr
ss
or
scas
xor
push
adc
push
cmp
cmp
cltd
or
idivb
cmpsb
cmp
mov
jne
adc
movsl
enter
sbb
fidivl
mov
cmpsl
fptan
push
aaa
pop
add
lahf
inc
dec
mov
roll
lods
mov
add
jmp
dec
lea
fwait
mov
sbb
sbb
and
mov
sbb
jbe
shr
push
je
dec
xchg
je
sub
imul
mov
dec
ffree
or
xchg
pusha
jns
stc
cmp
jnp
jb
push
jmp
lock
push
cmp
movsl
movsb
loope
fwait
inc
leave
dec
add
rdmsr
repz
sti
inc
mov
rclb
addr16
test
outsl
sbb
arpl
loopne
lea
inc
jp
mov
and
sbb
pushl
aaa
lds
xchg
std
addl
pcmpgtd
mov
or
jb
dec
loop
xor
stos
sbb
mov
push
stos
or
and
pusha
dec
xlat
push
dec
add
push
dec
stos
inc
sbb
and
sub
mov
jp
pop
cmpsl
dec
and
mov
adc
pop
pop
shrb
push
cs
fwait
dec
popf
movsldup
imul
out
mov
inc
mov
arpl
cmpsl
jnp
jmp
xchg
sbb
fdivrl
repnz
add
sbb
sub
push
das
dec
fsubr
aad
xchg
arpl
jecxz
aas
sbb
pop
sti
daa
xchg
mov
xchg
call
imul
loop
clc
sbb
mov
mov
mov
dec
push
out
sarl
cmp
rolb
ss
inc
sbb
mov
insb
sbb
jae
mov
dec
test
testb
orl
fldenv
insl
test
nop
adcl
aad
inc
and
mov
push
ret
mov
fisubl
and
dec
cs
or
dec
sbb
test
and
inc
jno
jge
pushf
int
fstps
xor
lods
xor
fsubrs
and
aam
and
sbb
add
mov
ja
and
pop
inc
jne
and
sub
flds
adc
inc
rolb
sbb
icebp
xchg
push
andb
sbb
imul
insb
shrl
cmp
mov
lcall
pop
or
data16
int3
stos
rcl
mov
aaa
and
sbb
popf
adc
not
data16
cmp
xchg
pop
fstps
sbb
div
jmp
lods
pop
aam
popa
xchg
inc
test
jns
jl
stc
data16
and
outsb
std
arpl
mov
and
into
jl
testl
dec
dec
je
inc
aaa
fimuls
testb
pop
or
mov
cmp
mov
lea
cmp
pop
push
xchg
jmp
cld
loopne
sbb
cmp
negb
xor
aaa
push
mov
in
mov
adc
push
shlb
dec
movsb
jns
add
std
sbb
out
sbb
loop
insb
scas
pop
popa
fsts
push
pop
repz
pop
pop
nopl
ds
mov
mov
push
sub
xchg
outsb
int3
shr
adc
dec
dec
iret
fnstcw
js
aam
dec
mov
dec
fistps
pusha
stos
mov
outsl
mov
pop
cmp
jp
adc
test
dec
adc
and
jbe
pop
lahf
xchg
ljmp
xor
arpl
pop
adc
ljmp
jl
add
mov
push
push
mov
adc
stc
sbb
mov
test
ja
add
ds
xchg
jle
sarb
testl
xchg
fnsave
dec
jo
call
and
xchg
fincstp
stos
inc
push
ljmp
loop
xchg
lret
pop
push
fldenv
fildll
adc
jnp
shrl
test
adc
and
fcmovbe
dec
bound
push
lcall
sub
sub
data16
cmp
pop
fisttpl
cli
mov
mov
jo
dec
lds
and
test
dec
out
inc
iret
sbb
dec
push
or
out
out
rorb
test
add
ja
cmp
arpl
js
and
xor
fstps
jb
adc
pop
gs
int3
dec
and
mov
adc
lret
or
aad
inc
dec
out
jge
jl
loopne
addr16
add
dec
iret
mov
push
jle
jle
inc
and
push
fcoml
int
xlat
xchg
test
push
fnsave
ret
popf
adc
aas
mov
imul
add
cmp
lret
sub
fldl2e
popa
and
jne
hlt
jne
mov
sbb
mov
insl
and
or
push
xor
std
lods
jb
repnz
sar
pop
xchg
push
outsl
int
jl
add
pop
pop
int
or
mov
rcrl
jne
gs
inc
pop
or
lods
pop
fld1
push
lahf
inc
xchg
add
dec
fnstcw
sbb
pop
popf
cwtl
push
xchg
mov
dec
push
cwtl
dec
int
cld
sarb
jne
mov
dec
xor
mov
xchg
xor
xor
test
jle
pop
xor
push
pop
push
insl
lcall
or
mov
rorl
push
push
sti
mov
aad
stos
or
enter
daa
int3
sub
sub
fstps
ret
dec
bound
and
cmc
hlt
mov
psraw
add
add
sbb
cs
daa
lods
pop
add
mov
jge
pop
sbb
fisubs
fdivrl
loopne
cmp
repz
lret
inc
jp
cmp
push
mov
pop
sbb
push
mov
fldenv
mov
std
sbb
sub
aaa
fsts
sbb
adcb
and
xor
clc
inc
mov
and
loope
aaa
pop
pop
test
xlat
dec
pushf
push
mov
in
ds
cmp
iret
push
pop
je
nop
fldl
dec
push
push
sbb
in
insb
mov
into
xchg
xlat
sbb
clc
lock
out
cmp
repnz
xor
in
or
fcompl
bound
fst
pop
gs
xorb
xchg
test
inc
mov
xchg
lahf
push
pop
into
add
aas
lret
or
shl
dec
pusha
sbb
inc
cmpsl
fnstcw
xchg
sub
out
pop
sub
cltd
dec
leave
gs
mov
sti
mov
xchg
inc
stc
popf
xor
cmp
outsb
xchg
jp
jmp
in
push
sub
fildl
gs
add
movsb
dec
dec
into
ror
mov
fstps
push
les
adc
push
lods
negl
mov
movsb
hlt
mov
mov
js
xchg
loopne
mov
cmpl
addr16
adc
bound
pop
dec
shufps
cmpsl
push
in
fdivl
imul
repz
int
adc
insb
jmp
in
testl
dec
mov
dec
push
mov
lret
fsubs
pop
mov
sub
call
sub
cmp
rcrl
mov
inc
int3
mov
xchg
stos
outsl
pop
mov
dec
jb
movsl
add
cmpb
pop
test
iret
mov
shll
loopne
xor
subl
and
fs
leave
fst
fmull
and
repz
pop
out
mov
push
lahf
out
mov
add
xchg
sbb
push
test
jmp
add
jmp
or
jno
inc
adc
dec
sahf
jl
out
pop
mov
call
mov
out
decb
mov
add
cmp
dec
mov
popf
leave
dec
mov
dec
xlat
mov
and
insb
inc
dec
popa
xor
sbb
lea
and
add
push
mov
mov
fisubl
sbb
in
sbb
mov
addr16
dec
push
dec
fistpl
xchg
sbb
xlat
add
pop
pushf
cmp
fldenv
hlt
adc
mov
imulb
stos
dec
dec
inc
cmp
xor
adc
inc
cmp
fnstcw
mov
jp
out
jae
inc
out
in
dec
loop
fstps
ja
fs
mov
out
mov
or
in
clc
xchg
data16
cwtl
rcrl
push
movsl
jg
out
xchg
movsl
dec
ds
dec
lret
jp
sti
out
sbb
rcrb
xor
fwait
sbb
cli
sbb
mov
pop
fdiv
pop
or
pop
lcall
ret
mov
adc
pop
mov
xchg
dec
jae
ret
clc
sahf
cmpsl
jge
push
pop
mov
movsb
ljmp
fsts
cltd
xchg
mov
imul
pop
fisubl
or
push
dec
sbb
sub
cmp
adc
outsb
in
xchg
inc
int3
jg
scas
xchg
hlt
push
cmpsl
jns
into
cmp
test
mov
xlat
sub
mov
mov
add
les
inc
movsb
insl
bnd
stc
fstps
dec
les
xchg
cwtl
push
and
push
and
add
xlat
cmp
aaa
fsts
movsb
lods
testl
outsl
and
popf
stc
mov
push
stos
mov
add
dec
gs
int3
dec
sub
popf
cmp
pop
data16
or
add
dec
adc
cmp
xor
pop
cmc
sbb
dec
sti
daa
call
pop
mov
jecxz
sub
sbb
pop
push
mov
jb
sbb
int
idiv
xor
es
pop
imul
xor
inc
xchg
mov
int
jl
ljmp
sub
sti
sarl
pop
xor
ss
cmpsl
cmp
sahf
inc
xchg
cltd
push
addr16
inc
adc
lret
dec
inc
ficompl
negb
add
fldenv
push
loop
sbb
push
fs
mov
jo
mov
inc
mov
clc
dec
mov
fistl
mov
fcoml
mov
jno
dec
mov
dec
in
xchg
push
pop
and
and
cmp
insl
call
mov
aam
out
push
gs
jbe
sbbl
lret
cwtl
jne
xchg
or
inc
lret
inc
jp
jnp
data16
jmp
sbb
icebp
out
or
xor
fdivl
ja
sub
xchg
andb
xor
pop
fisubrl
stos
clc
or
dec
sub
daa
pop
mov
jle
sub
add
xor
notw
sbb
and
jns
sub
lret
insb
sbb
lcall
lret
xor
adc
shll
or
xor
nop
scas
pop
stc
pop
sub
inc
cli
adc
sbb
lahf
sub
pop
xchg
cmovbe
adc
outsl
mov
adc
loopne
ficoml
popa
xor
cli
lahf
mov
cmp
cmp
mov
pop
addr16
sbb
inc
cwtl
mov
scas
and
enter
imul
sbb
xchg
cli
sbb
cmp
aas
jp
testl
pop
adc
lahf
jnp
ficoms
xor
call
sbb
std
insl
fimull
jbe
sarb
add
xchg
pusha
fnstsw
mov
shll
mov
nop
data16
cs
inc
sbb
pusha
push
or
or
lret
flds
pop
inc
les
insl
repz
call
fcoml
cmp
mov
mov
pop
out
insb
xchg
or
and
jne
inc
in
idivb
pop
and
cltd
jne
and
adcb
in
xor
cmpsl
das
pop
dec
sbb
xor
lock
pop
mov
adc
push
lds
loop
dec
stos
nop
fsin
jae
mov
jge
sbb
lret
xlat
push
insb
push
daa
addr16
pop
cmp
adc
push
vpunpckhwd
call
jbe
sub
out
dec
mov
dec
add
push
repz
fidivs
push
jo
in
push
dec
sbb
lret
xchg
stc
jle
call
adc
dec
sub
rcr
and
cmp
lahf
dec
dec
dec
jge
pusha
fbld
negb
out
dec
dec
stc
or
mov
movsb
push
or
pop
push
add
gs
mov
mov
lods
out
mov
repnz
aam
outsb
pop
das
adc
xchg
and
in
sbbl
js
jno
clc
fnstcw
push
xor
imul
sbb
xchg
cmp
cmpsb
pusha
jae
fsubrl
test
jecxz
lock
push
je
ja
mov
jno
or
mov
cmp
fisubrs
dec
mov
mov
jbe
je
bound
pushf
xor
leave
lret
jne
pop
fiadds
pop
jecxz
push
sahf
mov
daa
sbb
jecxz
push
fidivrl
stc
shlb
inc
es
jle
pop
cltd
dec
mov
xchg
cmp
sbb
mov
stos
adc
push
xchg
mov
pop
cltd
cltd
lret
push
inc
dec
mov
dec
cmpsl
dec
data16
add
push
adc
mov
cmp
int3
jg
pop
testl
mov
int3
jl
movsl
push
js
push
les
mov
lret
mov
push
rorl
pop
mov
movsl
sbb
fistpl
adc
add
sbb
scas
push
cmp
aaa
mov
out
sbb
pushf
xor
lods
and
sbb
and
jmp
pop
xchg
and
sbb
push
cmc
sbb
push
xor
int
pop
push
fstps
mov
imul
mov
dec
in
jl
inc
add
dec
sahf
movsl
repz
movsb
shlb
add
xor
subb
out
fsubs
dec
sbb
jo
push
pop
sub
fcmove
inc
shlb
or
mov
iret
lcall
repnz
xor
inc
mov
and
xchg
out
test
dec
imul
aaa
sbb
adcb
sub
jo
lret
mov
mov
xchg
and
jns
insl
adc
mov
in
lret
cmp
cld
mov
fcomi
les
inc
test
sbb
mov
xchg
cwtl
jmp
adc
cmp
pop
xor
and
push
mov
fwait
addr16
pop
in
inc
mov
ja
lret
fsts
pusha
jns
push
or
movsl
sbb
outsb
fdivr
jne
fucomip
and
out
orl
add
fimull
pop
cltd
stc
cmpsb
lods
sbb
or
fnstenv
dec
lods
xor
mov
mov
mov
push
sbb
cmpsl
and
and
jnp
xor
jp
push
adc
dec
push
aas
addr16
nop
mov
sbb
xor
pushf
fstpt
pusha
fwait
mov
in
cld
test
daa
sbb
mov
sbb
adc
sbb
je
lret
inc
out
mov
icebp
xchg
in
mov
mov
repz
add
aad
test
mov
cmp
push
pop
cmp
sub
data16
mov
lcall
cmpsl
int
imul
mov
pop
xchg
inc
mov
cmc
push
clc
test
push
out
xchg
pop
mov
jbe
enter
out
xlat
movsb
or
sbb
push
fsts
xchg
clc
iret
test
inc
fdivrp
push
dec
and
jo
subl
push
jae
cli
or
sbb
pop
in
inc
inc
sbb
xchg
or
ret
dec
stos
lock
loop
or
movsb
sbbb
push
lods
jae
cs
or
adc
mov
adc
ds
add
aaa
push
xchg
loop
ljmp
pusha
dec
push
sbb
es
in
dec
xchg
xchg
arpl
xor
addr16
pop
cmc
dec
insl
mov
flds
mov
es
and
jg
xor
jno
push
sbb
dec
loope
fldt
add
inc
pop
xchg
mov
pop
stos
xchg
and
stos
cmpsb
or
dec
add
inc
jb
sbb
outsb
mov
jp
push
jae
lcall
dec
mov
testl
ljmp
sar
fcompl
cltd
sub
test
faddl
jne
outsl
push
repz
push
sbb
js
insl
movsl
add
ret
cmpsb
rcrl
cwtl
cmp
sbb
xor
pop
push
jbe
mov
fistl
mov
push
push
cmp
mov
lcall
pop
cwtl
clc
repz
inc
or
bound
sub
sbb
imul
adc
cmpsb
test
xor
insl
lret
fucompp
xchg
cltd
cmp
stos
sbb
jmp
cmc
lds
es
sbbb
push
adc
and
cmp
lock
jmp
loopne
data16
loopne
sbb
sahf
lret
and
push
cmc
jl
sbb
scas
jbe
sbb
mov
outsl
decb
jecxz
push
jg
ret
sub
add
sbb
adc
push
sbb
dec
addr16
mov
pop
sbbl
pop
loopne
in
loopne
rorw
jecxz
rcll
xor
ds
jge
loopne
xchg
loopne
cmp
jmp
sbb
lcall
ret
add
add
lods
sub
xor
xor
in
push
sbb
add
ret
pop
cltd
fstps
dec
jecxz
xchg
hlt
sub
and
xchg
je
test
fstps
xchg
xchg
jbe
ret
les
dec
dec
arpl
sub
jne
push
inc
jbe
lret
jge
fwait
xor
sbb
mov
std
insb
sbb
sub
inc
dec
push
shlb
test
sbb
dec
les
test
jno
dec
xor
dec
pop
scas
cli
xchg
push
mov
push
addr16
bound
push
in
out
data16
sbb
inc
inc
jle
sbb
loop
clc
cmc
push
lods
stos
and
push
fmulp
pop
mov
or
cmp
je
jge
inc
or
daa
pop
dec
bound
daa
cld
dec
lds
fisttpll
das
repz
or
mov
mov
in
inc
popf
negl
int
sti
push
fwait
sbb
popf
mov
cli
cmp
sahf
sbb
fbstp
test
int
enter
pop
shrb
or
dec
in
jge
cmc
nop
mov
cmp
popf
imul
push
add
or
xchg
lods
cmp
je
pop
and
cmp
imul
dec
mov
fisttps
push
pushf
mov
xor
mov
movsl
jmp
xchg
testb
inc
int
sub
add
shlb
add
sub
add
aad
rcll
mov
out
shll
cmp
cltd
inc
xchg
fnstcw
sub
mov
out
leave
sbb
jnp
sbb
outsb
pop
push
jbe
xor
xchg
fstps
dec
std
outsb
jbe
mov
pop
push
popa
arpl
scas
ret
cmp
int3
jg
insl
adc
dec
sbb
or
push
and
sbb
lahf
enter
fcompp
cwtl
outsb
out
lea
sbb
add
movsb
fsts
push
dec
mov
iret
and
adc
xor
je
pop
jmp
push
push
add
fsubrs
sbb
gs
cmc
sbb
cltd
fdivrs
sbb
sbb
or
out
jne
sbb
push
stc
outsl
sbb
jl
and
clc
inc
mov
lds
mov
fldenv
sbb
ret
outsb
js
add
sub
sbb
shll
in
mov
ret
ret
mov
xchg
movl
mov
pop
jo
sbb
dec
and
lahf
lahf
in
jne
jae
cmp
and
fisubrs
fcmove
xor
mov
cmp
cmpsl
aam
sbb
clc
jae
jns
dec
mov
cwtl
push
mov
mov
mov
icebp
inc
xor
leave
test
jl
imul
lcall
jnp
jbe
fists
rcrl
sbb
dec
cmp
mov
scas
lahf
push
xchg
mov
jno
fstl
push
dec
inc
xchg
out
cli
inc
mov
enter
in
push
iret
ret
pop
adc
mov
fidivs
xchg
test
cwtl
push
lahf
cmc
ret
dec
js
repz
pusha
movsb
jl
add
adc
test
xor
imul
fsts
ret
lret
stos
jae
pop
incb
push
mov
cmp
mov
pop
mov
lock
xchg
stos
jbe
mov
pop
dec
and
int3
cli
stc
out
imul
adcl
xor
pop
add
ficompl
scas
test
xchg
xor
jle
dec
pop
cmpsl
adc
je
cmp
xchg
into
xchg
data16
push
mov
cmp
ljmp
imul
pop
das
mov
jmp
add
shrb
dec
inc
sbb
fwait
imul
dec
sbb
add
fwait
push
cmpsl
rorl
enter
gs
lcall
push
test
adc
and
daa
jo
sub
and
aas
sub
clc
data16
stc
popf
push
popf
cmp
cmp
sbb
inc
shll
outsl
sub
je
cli
pop
fmull
test
xchg
data16
rorb
sbb
mov
fcmovu
dec
aas
mov
ljmp
xor
dec
jns
cmp
inc
js
movsb
sub
gs
mov
cmp
sbb
cmp
lds
cmp
and
sbb
xlat
and
addb
int
fincstp
push
mov
dec
jno
and
dec
and
sbb
sbb
loope
rorb
pop
xor
xchg
push
xor
cwtl
incb
fisubl
int
sbb
aad
rcll
mov
cmp
in
xor
leave
test
or
add
sbb
jne
adc
leave
pushf
xor
sahf
adc
cmp
imull
mov
dec
mov
lahf
in
aad
pop
mov
cli
sub
lock
mov
leave
cmp
cltd
xchg
push
xorb
ss
sbb
mov
mov
or
or
outsb
ljmpw
and
aaa
adc
sub
lcall
xchg
sub
mov
dec
fstpt
fs
adc
mov
cld
lcall
push
adcb
jmp
jl
cmc
xchg
or
data16
push
in
xor
adc
mov
arpl
mov
out
add
jp
jp
test
jecxz
xor
mov
mov
out
or
out
or
xchg
dec
out
xchg
fs
lret
sub
cmp
add
or
push
dec
mov
leave
stos
inc
push
jns
mov
fdivs
fld
or
ljmp
sbb
dec
jl
mov
hlt
data16
xchg
ficomps
or
loopne
push
clc
int3
cld
rcrl
fistl
ret
js
push
cmp
xor
rol
clc
jg
add
lods
dec
jp
jno
arpl
idivl
ljmp
lahf
enter
loopne
push
dec
push
sub
aad
ret
mov
inc
repz
popf
test
notl
out
fnsave
adc
sub
dec
outsb
gs
enter
test
subb
lds
jno
or
lds
mov
mov
push
lea
sbbl
in
sub
push
int3
jl
pop
pop
xlat
addr16
or
xor
aad
and
mov
testl
mov
addr16
pop
popf
xchg
sub
aad
adc
enter
cmp
sbb
dec
call
xor
stc
mov
and
std
pop
aaa
sbb
cltd
pop
rcr
dec
push
andl
push
adc
std
call
jae
sbb
cmc
ficomps
int3
out
imul
fbld
fadd
jo
fsubr
inc
pop
sti
sub
xchg
adc
dec
or
lret
sahf
dec
shrl
ljmp
pop
jnp
dec
push
mov
int
dec
adc
data16
fdivr
or
pop
in
inc
or
push
xor
jnp
sbb
jp
push
and
clc
xlat
int3
sbb
fcmovbe
dec
fwait
dec
outsl
gs
fdivl
jnp
xor
push
inc
pop
mov
enter
ljmp
aas
out
cmp
cmp
mov
cld
pop
aam
xor
jg
enter
inc
dec
frstor
jae
mov
dec
flds
sbbl
adc
push
ret
dec
and
inc
lea
mov
or
ja
cmp
xchg
fimull
clc
adc
dec
je
imul
lret
sbb
xor
push
cmp
iret
frstor
leave
in
sbb
jne
stos
and
mov
xchg
mov
hlt
outsb
pop
mov
cmp
mov
test
jle
xor
in
jmp
rcrl
xchg
or
sbb
out
and
pop
loope
lahf
ja
jno
lds
mov
mov
inc
sub
inc
pop
or
push
cmp
push
fisubrl
xchg
sbb
fcmovbe
repnz
and
add
test
mov
inc
cmc
fisubrl
fucom
mov
std
out
rorb
push
pop
cmp
jnp
dec
insl
or
pop
jecxz
mov
lahf
and
sbb
mov
pop
pop
call
je
xchg
repnz
out
dec
sbb
push
push
xchg
sbb
dec
lret
ffree
pop
mov
mov
mov
inc
aaa
enter
leave
adc
sbb
scas
cmp
into
aad
pop
mov
gs
mov
inc
clc
push
fsts
jge
mov
hlt
pop
or
fsubs
dec
add
shll
xchg
nop
mov
mov
lcall
dec
xchg
mov
xchg
test
dec
jne
scas
inc
jns
dec
aas
xor
mov
test
mov
xor
jne
fldenv
in
xchg
push
jns
sbb
rcrb
pop
cmpsl
mov
aaa
cmp
sbb
pop
je
xchg
or
fdivr
xchg
mov
mov
movsl
sub
orb
cli
js
adc
in
mov
inc
or
pop
push
pop
or
je
pop
cs
test
mov
add
lods
mov
ja
in
jnp
andb
mov
xlat
inc
mov
dec
adc
mov
inc
pusha
es
outsl
clc
jl
xchg
mov
dec
aaa
cltd
dec
cmp
std
int
sub
jecxz
imul
mov
ret
sbb
ret
cmp
in
push
xor
ja
cmp
cwtl
mov
or
push
lcall
stos
test
in
sbb
jecxz
fidivs
mov
pop
sti
jno
push
adc
inc
test
mov
dec
add
mov
mov
lcall
fidivs
scas
mov
scas
jnp
xor
movsl
lcall
cli
add
jle
inc
dec
pusha
mov
lods
mov
jle
sbb
cmp
shll
sub
iret
test
imul
and
insb
mov
and
fcomps
je
addr16
mov
adc
fldt
lds
inc
or
jmp
add
inc
out
in
cmpl
data16
push
imul
inc
push
pushw
data16
ror
mov
inc
mov
dec
jb
cmp
hlt
dec
mov
mov
test
mov
pop
sub
pop
xchg
mov
stc
push
pop
push
mov
fcmove
sub
rorl
jecxz
into
fstps
ret
sub
scas
push
lcall
rcrb
aas
rorb
sub
jp
jmp
or
std
stc
loope
lods
or
mov
cmp
jo
hlt
and
ja
pop
push
push
nop
lret
xchg
sbb
sbb
cmp
test
out
scas
mov
fdivp
fnstcw
aam
mov
inc
jnp
add
cmpsl
divl
pop
cmp
or
leave
pop
lea
add
mov
dec
adc
fimull
pop
mov
pop
testl
jmp
in
add
call
lret
mov
mov
adc
gs
adc
jl
aaa
pusha
xlat
xorb
mov
movsb
lcall
fstps
inc
and
sub
fsts
or
pop
iret
sbb
inc
imul
ficompl
addr16
les
aad
push
push
or
mov
icebp
xorb
fiaddl
into
push
mov
fsubr
insl
sub
sbb
pop
icebp
jns
gs
inc
mov
xchg
popa
fsts
shl
bnd
repz
popf
sub
outsl
dec
pop
aad
mov
out
shrb
pop
enter
cmc
repnz
push
outsl
or
stc
inc
jmp
xchg
popa
aaa
out
arpl
fmull
out
out
and
mov
fidivrs
mov
test
push
and
mov
iret
dec
rolb
fidivs
jle
ljmp
dec
test
leave
cmp
fisubs
jno
jge
push
gs
ds
mov
pop
jecxz
fistl
lea
dec
jle
int
repz
push
hlt
ss
mov
dec
dec
iret
dec
add
jbe
push
xor
add
xchg
inc
or
push
in
dec
rcr
dec
pop
flds
inc
call
movsl
pop
cli
data16
jo
adc
sub
aas
xor
cwtl
pop
add
insl
mov
jl
jg
pop
sti
fsts
xchg
mov
loope
dec
mov
jo
pop
mov
sub
add
xchg
push
pushl
outsl
lcall
int3
int
dec
xchg
sbb
out
jo
adc
and
mov
mov
xor
add
sti
popa
dec
lret
add
popf
dec
jbe
sarb
dec
dec
inc
in
jno
call
fldenv
sub
pop
or
mov
mov
dec
lcall
or
pop
aad
in
sub
mov
mov
movsb
push
paddusw
pusha
sarl
mov
rclb
mov
pop
jecxz
fisttps
xchg
cmp
rorb
push
movq
fidivrl
cmp
push
add
popf
adc
cmp
xchg
hlt
inc
addr16
out
or
mov
xchg
pop
je
popa
fdivrl
pop
pop
insb
push
addr16
in
sub
add
jnp
loopne
xor
ss
fmul
popa
es
sub
xchg
lret
dec
sub
mov
lret
jne
push
hlt
cltd
add
rol
sbb
push
rorl
je
imul
data16
loopne
imul
stc
push
leave
adc
jge
out
adc
test
jns
and
fdivs
icebp
sub
dec
push
xchg
popa
push
pop
loop
xchg
data16
pop
loopne
pop
or
rolb
dec
dec
int
pushf
pusha
jg
jl
xchg
mov
and
pop
scas
fucomi
loop
daa
dec
mov
cld
xchg
cwtl
sub
jae
fcmovnu
stos
pushfw
out
loop
sbb
ja
jne
shll
pushf
mov
loop
movsb
add
cmpsb
movzbl
call
cli
inc
loope
mov
mov
aam
out
dec
pop
outsb
in
and
addr16
data16
ds
dec
aaa
insb
lds
rcll
addb
das
add
sti
std
ss
xchg
pop
dec
loopne
pop
gs
push
inc
fldenv
mov
popa
aam
shlb
dec
jae,pt
pop
ljmp
nop
push
fimuls
adc
mov
xchg
or
cmp
pop
clc
xor
pop
setbe
arpl
adc
js
stc
out
dec
addr16
add
fimuls
push
ret
sbb
cld
imul
inc
push
les
mov
std
outsl
mov
inc
and
test
inc
loopne
iret
push
je
test
repnz
cmp
loop
jo
lcall
sbb
dec
inc
or
add
cwtl
sarb
shl
es
ljmp
lods
dec
dec
push
sbb
jbe
jg
and
aas
dec
sub
fnstsw
add
and
sbb
loopne
in
push
jno
mov
sbb
aas
mov
jb
adc
fwait
pop
jp
xlat
jno
stos
mov
dec
bound
inc
sub
test
out
pop
cwtl
mov
ret
jg
shlb
mov
jne
adc
mov
and
dec
pop
and
cltd
movsb
lahf
rcr
out
fwait
dec
sbb
inc
pop
iret
call
into
fs
fsts
outsb
sbb
adc
loop
mov
call
repz
daa
data16
jecxz
push
dec
inc
mov
or
mov
add
xchg
pop
das
push
dec
dec
lret
pop
daa
or
dec
cmpsb
mov
ja
jle
dec
out
out
xor
sub
or
xchg
negb
lcall
adc
lock
imul
imul
cmp
lods
loope
daa
cmpsl
or
sbbb
clc
leave
test
cwtl
fsts
leave
stos
repnz
lods
aad
inc
push
and
sub
push
packuswb
mov
sbb
gs
jo
xor
test
adc
jl
inc
stos
stos
dec
les
lods
and
cs
test
sbb
or
lahf
or
or
and
mov
sbb
outsb
cmp
sbb
or
movsb
ja
pop
push
sbb
shl
data16
sbb
dec
sub
sub
adc
addr16
into
pop
pop
sbb
push
xor
sub
xor
mov
cwtl
lret
sbb
ret
js
insb
xchg
push
ficompl
sub
std
push
test
and
push
jmp
add
xor
mov
sbb
pop
ds
out
int
mov
jae
add
cld
adc
cmpsl
add
out
xchg
lods
dec
int
push
add
jnp
inc
mov
fcos
cwtl
and
and
inc
insl
and
pop
add
outsb
dec
mov
addr16
jb
stos
and
pusha
daa
cmp
int3
sbb
loopne
insb
mov
loop
xor
sbb
into
ss
add
dec
mov
fsin
adc
mov
and
sarl
cwtl
dec
inc
pop
dec
mov
rcr
pop
jecxz
pop
rol
push
cmp
dec
repnz
push
jbe
bound
movsl
imull
or
in
add
jl
out
data16
out
lods
adc
jb
jbe
xor
jne
imul
sbb
fdivl
push
xchg
or
es
pop
add
sar
inc
pop
sti
push
inc
outsb
xchg
ds
leave
outsl
fmull
imul
movsb
sbb
ljmp
jns
xchg
lret
fstpl
xchg
dec
test
fwait
mov
addr16
mov
push
mov
mov
clc
out
inc
in
push
adc
pop
sti
mov
sbb
xchg
int3
sub
sbb
or
push
pop
cmp
xor
lcall
or
jns
push
mov
flds
es
jno
xbegin
lock
push
xchg
sbb
subb
in
adc
data16
adc
push
flds
repnz
into
push
fnsave
xchg
out
mov
dec
sbb
mov
fsts
test
mov
js
fiadds
lret
cld
inc
or
ljmp
cmpsl
adc
leave
pop
mov
jl
and
fsubrs
fildl
imul
inc
add
out
out
sub
or
push
add
stc
out
in
sbb
outsb
xorl
jo
lcall
push
je
or
add
insb
add
lcall
mov
mov
xor
xchg
pop
xchg
pushw
push
sbb
and
test
fnstcw
jne
sarb
lods
jno
push
dec
sbb
sub
xchg
pop
out
outsl
dec
dec
in
push
add
lahf
data16
incl
ja
ja
dec
push
push
cmp
add
adcl
out
das
out
jns
je
push
cmp
sbb
cwtl
adc
pop
inc
sub
ret
inc
inc
outsb
int3
push
inc
push
fldcw
cmpsb
sbb
popa
push
dec
and
les
scas
sahf
test
add
adc
daa
pop
in
or
sbbl
mov
ret
sarl
fcos
dec
mov
xor
aad
repz
or
mov
dec
inc
vmwrite
out
pop
outsl
mov
enter
and
out
push
push
flds
add
fists
mov
sub
dec
test
idivb
imul
pop
or
push
pop
js
fsts
clc
xor
add
mov
scas
xor
xchg
and
sbb
xor
lret
aam
push
xchg
mov
dec
sbb
add
lahf
mov
fldenv
adc
fwait
das
aaa
adc
dec
test
stos
and
mov
leave
add
pop
push
dec
xchg
jl
jb
insl
fldcw
pop
addr16
add
and
mov
cli
mov
dec
jecxz
pop
fcomip
jp
xor
sbb
lahf
clc
xor
or
fld
js
jmp
jnp
js
dec
popa
pop
daa
cmp
fldenv
inc
pop
cmp
jle
int
push
movsl
dec
jecxz
and
or
jb
pop
into
sbb
inc
cmpsb
neg
dec
mov
xchg
cmpsb
ds
and
fwait
or
fnstsw
jb
or
inc
into
cld
inc
sahf
fwait
fcoml
dec
out
pop
jbe
pop
scas
jg
data16
filds
adc
je
mov
std
enter
or
test
aad
dec
cmp
das
daa
test
in
and
data16
mov
sub
cmp
loopne
inc
pop
xor
sbb
cmp
notb
jne
sbb
xor
pop
sahf
repz
and
or
adcl
ja
xchg
push
movsl
push
cmpsl
sub
cmp
lods
jecxz
in
stos
iret
mov
out
lcall
jle
sbb
adc
jmp
es
cli
inc
dec
sub
in
xchg
pop
dec
jno
xor
mov
mov
sbb
stc
cmp
pop
cmpsb
rorw
push
sbb
inc
test
lds
test
mov
stc
and
mov
sbb
rorl
jnp
xor
std
pop
aas
jns
sahf
or
dec
pop
fidivrl
mov
pop
jp
popf
lret
sub
lcall
pop
ljmp
lock
dec
rorb
mov
mov
xchg
cmpl
pop
shlw
inc
push
sub
pmaxub
into
mov
fisttpll
sub
push
insb
cmc
push
hlt
or
dec
jge
sbb
ja
sbb
scas
lock
or
lret
movsl
notl
xor
push
or
pop
cmp
xchg
and
je
mov
dec
and
sbb
inc
cmp
lcall
pop
sbb
sub
pop
add
adc
lret
jns
sbb
mov
inc
in
out
xlat
scas
sbb
stos
jne
repnz
push
cli
mov
xor
stos
adc
dec
daa
fld
dec
jl
pop
imul
test
aad
adcl
fs
imul
testl
sbb
sbb
lcall
and
pop
aas
ljmp
pop
sar
adc
add
mov
push
mov
push
mov
cmpsb
xor
pop
sub
add
mov
jge
push
sti
jno
jg
push
dec
adc
ret
lods
scas
adc
je
sbb
cmp
push
les
sub
xchg
or
push
dec
dec
pusha
adc
bound
daa
cwtl
xlat
dec
sbb
enter
ret
addr16
pop
pop
dec
jo
pop
sbb
int
jb
pop
inc
inc
insb
hlt
das
sahf
jo
push
addr16
call
insl
add
push
loopne
dec
in
stos
jnp
push
in
adc
data16
mulps
in
test
or
movsb
or
xchg
lods
jge
sub
push
test
cmp
xchg
pushf
fidivl
pop
mov
push
xor
dec
sbb
push
out
mov
les
adc
mov
ret
std
test
pop
inc
test
or
pop
mov
test
fstps
loop
arpl
and
incl
inc
imul
fadd
adc
mov
xlat
in
mov
sarb
adc
mov
pop
fcmovbe
mov
mov
repnz
ss
push
inc
roll
jp
sbb
in
adc
inc
dec
xlat
fstps
add
dec
sub
pop
or
lods
test
cli
clc
cmp
xor
dec
jmp
dec
dec
sub
dec
lods
test
pop
inc
sbb
sub
rolb
popa
test
cmp
add
or
inc
push
cli
mov
dec
jp
aas
repz
add
sbb
pcmpeqd
pop
mov
clc
sbb
mov
ss
push
jnp
adc
inc
sbb
cli
mov
jge
inc
mov
loop
pusha
mov
rcl
sbb
cs
mov
sbb
shlb
dec
es
or
addr16
mov
adc
sbb
sbb
inc
push
dec
mov
lcall
add
daa
xorb
ljmp
data16
xchg
movsb
insl
sbb
or
fsts
sbb
add
mov
dec
push
addr16
lock
in
mov
insb
xor
insb
into
cmp
pop
sub
insl
mov
rcll
sahf
pusha
out
xor
shll
gs
dec
xlat
inc
mov
push
cltd
clc
or
jl
lret
sbb
add
es
jl
addl
rcr
hlt
frstor
lock
sbb
pop
sbbb
fadds
mov
in
aad
lock
mov
push
rorb
lds
add
ficomps
nop
jle
leave
adc
nop
shll
ljmp
and
pop
out
dec
imul
sbb
lret
inc
cmp
test
imul
mov
push
or
outsl
imul
mov
dec
xor
clc
pop
ja
cmp
push
pop
jno
daa
sbb
gs
inc
sub
add
push
lret
push
mov
sbb
push
add
cmp
sub
dec
out
mov
ds
or
sub
fsubrl
lock
push
scas
es
push
xor
xchg
insl
dec
ficoml
cmp
scas
cwtl
xchg
or
pop
push
xor
add
popa
out
push
imul
push
in
test
nop
nop
loope
scas
pop
sub
mov
or
push
adc
cwtl
data16
push
jecxz
mov
cld
cmp
pop
fisubl
dec
shlb
dec
data16
loope
xchg
shr
inc
int
lock
sbb
fstps
aad
sub
test
adc
xor
or
push
addb
loop
mov
ljmp
dec
xor
fld
fsts
xchg
adc
pop
addb
mov
mul
mov
jno
xlat
test
lds
sbb
in
pop
lds
jns
lcall
inc
push
mov
mov
jp
test
popa
int
mov
or
cmp
jecxz
add
popa
sbb
push
dec
fistpl
inc
sti
jne
and
mov
stos
pop
mov
jecxz
xor
inc
sbbl
inc
mov
sbb
incb
cmpl
xor
jecxz
bound
addr16
lock
sbb
ret
mov
fsincos
cli
test
push
pop
pushf
negb
and
adcl
and
xchg
sbb
mov
mov
pop
loopne
dec
xchg
data16
ficompl
jmp
fldenv
jne
popf
lret
arpl
sbbb
imul
add
cmpsl
jg
mov
push
test
xchg
test
scas
in
push
mov
xchg
repnz
pop
lcall
mov
dec
daa
scas
sub
inc
leave
dec
insl
cmpsl
fnstenv
in
in
adc
or
and
xor
mov
add
pop
add
xchg
insl
or
lahf
jbe
icebp
aam
mov
and
mov
sbb
mov
sub
sbb
push
addr16
sbb
shrb
movsb
movsl
jb
add
int
lock
imul
mov
enter
cmp
vpmacsdd
mov
jno
dec
sbb
js
jns
insl
sbb
faddl
lahf
cli
imul
mov
fsts
jle
outsl
arpl
sbb
in
test
inc
sbb
mov
mov
xor
mov
mov
jbe
push
xchg
lret
or
and
xor
fldenv
jne
jl
lcall
dec
xlat
sbb
pop
xor
jne
shll
jo
ljmp
int
jo
inc
adc
sub
push
add
push
or
add
jp
jnp
lock
ja
xor
in
stos
sbb
aas
sub
leave
scas
setns
add
aas
add
outsb
or
push
imul
icebp
sbb
xor
and
es
sbb
xchg
mov
adc
cs
or
or
add
dec
fwait
sbb
mov
adc
jl
sbb
jb
jo
sbb
adc
imul
or
sbbb
cmp
mov
add
jb
inc
pop
xchg
pop
cmp
data16
ds
push
fistl
dec
or
sbb
adc
or
imul
jne
insl
clc
icebp
test
fnstcw
or
jo
adc
int
or
push
add
add
in
sub
mov
mov
mov
push
mov
add
mov
cmp
jne
sub
mov
mov
test
je
mov
mov
add
add
and
add
sub
push
mov
mov
cmp
jne
sub
or
cmp
je
cmp
jne
mov
xor
add
mov
sub
add
add
push
and
add
add
mov
sub
sub
mov
mov
test
je
mov
add
sub
mov
add
cmp
je
sub
add
mov
add
and
mov
add
mov
cmp
je
mov
mov
or
add
cmp
jne
sub
add
mov
or
add
mov
add
add
and
sub
add
mov
and
sub
xor
cmp
jne
mov
sub
mov
and
cmp
je
mov
cmp
je
and
cmp
jne
xor
test
je
mov
mov
and
cmp
je
add
mov
cmp
je
mov
xor
test
jne
and
sub
add
add
xor
cmp
jne
or
cmp
jne
sub
mov
mov
sub
cmp
jne
mov
test
je
and
add
add
mov
sub
mov
and
sub
add
mov
sub
mov
add
sub
and
test
jne
mov
test
je
mov
test
jne
or
and
add
mov
mov
add
test
jne
mov
or
add
cmp
jne
mov
sub
cmp
je
add
mov
add
mov
sub
xor
mov
mov
add
sub
add
mov
mov
mov
xor
cmp
jne
cmp
je
sub
cmp
je
mov
mov
add
add
sub
add
mov
add
cmp
jne
mov
xor
cmp
je
add
sub
add
mov
sub
xor
add
add
test
jne
mov
sub
sub
add
sub
sub
xor
mov
cmp
jne
sub
sub
or
and
mov
mov
add
sub
sub
sub
sub
cmp
je
mov
add
sub
and
mov
and
cmp
je
mov
test
jne
mov
mov
or
cmp
je
sub
sub
sub
sub
mov
and
sub
xor
push
call
add
add
mov
cmp
jne
cmp
jne
add
test
je
and
and
add
mov
sub
mov
sub
add
add
add
add
cmp
jne
mov
sub
xor
mov
sub
or
or
and
add
sub
cmp
je
mov
mov
add
cmp
jne
xor
and
sub
add
add
add
mov
sub
sub
and
sub
test
jne
cmp
je
and
sub
sub
xor
xor
add
mov
xor
add
sub
sub
sub
add
sub
sub
and
or
sub
mov
sub
add
mov
add
mov
sub
or
add
or
call
add
mov
add
mov
add
and
mov
add
add
add
cmp
je
or
mov
cmp
je
mov
sub
mov
test
jne
add
test
je
mov
sub
or
mov
mov
add
mov
cmp
je
mov
add
cmp
je
cmp
je
mov
sub
mov
sub
cmp
je
mov
and
cmp
je
cmp
jne
mov
test
jne
mov
mov
add
cmp
je
cmp
je
xor
add
mov
add
sub
sub
add
or
sub
add
xor
push
push
call
mov
mov
mov
mov
and
cmp
jne
xor
call
mov
sub
test
jne
sub
xor
mov
test
jne
mov
mov
test
je
mov
mov
sub
or
cmp
jne
xor
cmp
jne
xor
xor
sub
test
je
mov
mov
add
cmp
jne
mov
sub
sub
cmp
jne
and
mov
mov
sub
and
sub
cmp
je
add
add
mov
add
sub
add
cmp
je
xor
add
cmp
je
mov
mov
cmp
je
mov
test
je
mov
mov
add
and
or
cmp
je
and
add
test
jne
add
or
cmp
je
cmp
jne
add
sub
mov
xor
xor
add
sub
sub
sub
cmp
je
add
sub
mov
cmp
je
add
mov
or
cmp
jne
cmp
je
cmp
jne
cmp
je
mov
mov
cmp
jne
test
jne
xor
sub
mov
or
cmp
je
cmp
jne
add
sub
cmp
jne
mov
cmp
je
sub
mov
mov
sub
cmp
jne
sub
mov
cmp
jne
mov
mov
sub
mov
cmp
je
sub
add
mov
cmp
je
sub
mov
mov
and
cmp
jne
add
test
jne
xor
add
add
add
mov
cmp
je
mov
or
add
cmp
jne
sub
or
add
mov
or
sub
mov
add
sub
add
xor
mov
add
add
mov
cmp
jne
sub
add
mov
mov
sub
cmp
jne
or
sub
mov
cmp
je
mov
cmp
jne
add
sub
mov
mov
add
xor
add
and
sub
mov
mov
sub
sub
cmp
je
mov
mov
sub
add
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
add
mov
add
xor
add
sub
cmp
je
mov
mov
add
add
sub
or
test
je
mov
cmp
je
sub
cmp
je
mov
add
mov
sub
sub
add
mov
cmp
je
cmp
jne
mov
sub
add
test
je
sub
mov
mov
add
test
jne
mov
and
sub
test
jne
add
mov
mov
sub
add
mov
mov
xor
cmp
je
mov
mov
mov
sub
cmp
jne
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
add
sub
and
add
mov
sub
sub
sub
add
mov
sub
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
and
and
add
xor
and
sub
and
add
sub
add
add
add
sub
sub
mov
add
mov
add
or
sub
xor
mov
sub
add
sub
add
mov
add
and
mov
sub
add
sub
sub
sub
sub
add
mov
mov
or
test
jne
sub
or
mov
and
or
mov
add
mov
xor
sub
and
add
add
add
add
add
mov
add
xor
sub
add
and
mov
add
mov
mov
sub
cmp
je
sub
mov
sub
cmp
jne
sub
add
mov
sub
xor
test
jne
sub
mov
mov
add
add
sub
test
jne
add
sub
sub
xor
xor
add
and
lea
cmp
jne
mov
add
mov
test
jne
mov
test
je
sub
cmp
jne
add
cmp
jne
add
cmp
jne
xor
mov
push
test
jne
add
or
push
mov
add
add
sub
add
or
call
add
mov
cmp
je
test
jne
cmp
je
add
shr
xor
mov
and
sub
or
cmp
jne
sub
mov
mov
mov
add
add
add
sub
mov
cmp
je
add
sub
call
sub
mov
mov
mov
add
add
mov
sub
sub
mov
mov
sub
add
or
add
sub
pushl
push
pushl
call
sub
test
jne
cmp
jne
mov
mov
add
or
sub
sub
addl
mov
mov
cmp
je
mov
mov
add
add
sub
add
cmp
je
cmp
je
mov
xor
mov
sub
sub
mov
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
je
and
or
sub
call
mov
sub
mov
sub
add
sub
mov
mov
and
sub
or
sub
and
cmp
je
mov
sub
mov
mov
add
cmp
je
add
mov
sub
sub
mov
add
add
sub
cmp
je
mov
cmp
je
xor
mov
add
mov
sub
add
and
add
cmp
jne
cmp
jne
cmp
jne
sub
xor
add
mov
mov
cmp
jne
mov
test
jne
cmp
je
mov
sub
add
cmp
jne
add
cmp
je
mov
sub
mov
cmp
je
mov
add
mov
test
je
cmp
jne
cmp
jne
mov
add
or
xor
or
add
add
or
sub
sub
add
add
pop
cmp
jne
mov
cmp
jne
add
mov
mov
cmp
je
mov
cmp
je
cmp
jne
cmp
jne
add
or
or
mov
test
je
mov
sub
mov
test
jne
mov
sub
add
sub
cmp
je
sub
and
sub
and
add
mov
add
cmp
jne
cmp
jne
mov
mov
or
mov
pop
xor
test
jne
and
cmp
jne
sub
cmp
je
add
cmp
jne
mov
xor
cmp
je
xor
sub
add
add
cmp
je
sub
mov
mov
add
add
add
sub
and
test
je
or
mov
and
mov
cmp
jne
add
cmp
jne
mov
cmp
je
sub
add
add
sub
mov
cmp
je
add
cmp
jne
cmp
je
mov
mov
cmp
jne
xor
and
sub
or
cmp
jne
and
and
pop
cmp
jne
mov
add
or
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
push
add
mov
push
mov
xor
mov
add
sub
sub
add
push
and
mov
add
add
mov
sub
cmp
je
add
movl
sub
and
and
mov
test
je
xor
cmp
jne
or
sub
and
call
add
cmp
je
cmp
jne
mov
mov
or
cmp
jne
mov
mov
or
or
add
cmp
je
cmp
je
sub
sub
mov
and
mov
cmp
je
mov
sub
mov
add
test
je
mov
add
add
sub
cmp
jne
cmp
je
add
call
sub
mov
or
call
cmp
jne
cmp
je
mov
mov
add
cmp
je
mov
mov
sub
cmp
jne
cmp
jne
add
mov
sub
cmp
je
mov
mov
sub
add
add
test
jne
add
mov
mov
add
sub
cmp
je
add
sub
mov
sub
mov
mov
sub
sub
sub
xor
and
mov
sub
mov
sub
cmp
jne
sub
sub
mov
xor
test
jne
mov
cmp
je
sub
mov
test
jne
cmp
jne
mov
cmp
je
add
mov
cmp
je
mov
mov
sub
add
and
cmp
jne
mov
mov
cmp
je
cmp
je
or
mov
add
cmp
je
mov
sub
add
sub
add
mov
add
add
sub
cmp
jne
sub
mov
sub
sub
xor
xor
or
sub
cmp
je
mov
add
cmp
jne
xor
sub
cmp
je
add
cmp
jne
and
cmp
jne
and
sub
push
call
mov
mov
add
or
and
add
or
je
add
or
mov
mov
cmp
je
mov
sub
mov
add
or
cmp
je
mov
mov
cmp
jne
add
mov
add
mov
sub
cmp
je
cmp
jne
mov
and
add
sub
and
add
add
test
jne
mov
add
mov
add
cmp
je
mov
add
mov
mov
cmp
je
add
add
xor
mov
add
cmp
jne
mov
add
mov
or
or
add
mov
test
je
sub
mov
mov
cmp
je
xor
add
cmp
jne
mov
sub
cmp
je
add
add
mov
add
add
sub
mov
mov
add
sub
sub
and
cmp
jne
cmp
je
cmp
jne
add
sub
add
addl
mov
xor
lea
or
cmp
jne
cmp
jne
mov
mov
and
sub
cmp
jne
test
jne
cmp
jne
or
cmp
je
cmp
jne
mov
add
inc
add
sub
mov
cmp
jne
mov
sub
cmp
jne
test
je
cmp
je
cmp
jne
add
or
sub
and
cmp
je
sub
or
cmp
je
cmp
jne
cmp
jne
add
cmp
je
add
or
sub
cmp
jne
cmp
jne
mov
mov
cmp
jne
test
jne
add
mov
add
test
jne
add
sub
and
and
mov
cmp
je
mov
mov
add
add
and
xor
or
cmp
je
cmp
je
sub
cmp
je
mov
mov
sub
and
sub
sub
and
add
sub
cmp
je
xor
add
add
xor
add
sub
mov
mov
sub
xor
test
je
sub
add
mov
xor
sub
mov
cmp
jne
and
mov
mov
cmp
jne
xor
and
mov
add
or
cmp
jne
and
mov
cmp
jne
add
add
and
sub
cmp
jne
mov
and
add
mov
sub
add
sub
add
mov
add
sub
cmp
jne
cmp
je
mov
xor
cmp
je
mov
add
mov
cmp
je
mov
cmp
je
sub
mov
sub
mov
sub
add
cmp
jne
mov
cmp
je
mov
cmp
je
sub
mov
mov
sub
cmp
je
cmp
jne
xor
mov
add
sub
add
sub
and
add
sub
sub
mov
sub
mov
mov
mov
cmp
je
add
mov
or
mov
sub
pop
cmp
je
mov
sub
sub
sub
mov
sub
add
sub
or
pop
add
add
sub
mov
mov
sub
cmp
je
xor
mov
add
or
sub
sub
cmp
jne
mov
mov
add
add
cmp
je
cmp
je
sub
test
jne
cmp
jne
sub
test
jne
xor
mov
mov
sub
and
add
xor
add
add
cmp
jne
mov
and
cmp
je
cmp
jne
mov
mov
add
add
cmp
jne
cmp
jne
add
sub
pop
cmp
jne
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
mov
or
push
or
push
mov
mov
xor
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
sub
add
mov
cmp
je
mov
mov
sub
sub
sub
xor
sub
add
and
test
jne
add
mov
mov
sub
and
sub
sub
cmp
je
mov
sub
cmp
je
mov
cmp
je
mov
sub
sub
sub
mov
add
sub
and
mov
add
cmp
jne
mov
mov
add
add
mov
test
je
sub
push
mov
add
xor
add
and
add
add
cmp
jne
add
cmp
jne
mov
add
add
add
mov
sub
mov
add
cmp
je
cmp
je
sub
xor
sub
add
rdtsc
mov
and
sub
mov
sub
cmp
je
xor
mov
add
cmp
je
xor
sub
add
and
test
je
mov
mov
add
sub
or
and
cmp
jne
mov
sub
mov
cmp
jne
cmp
je
mov
and
sub
sub
mov
cmp
je
or
add
mov
sub
mov
xor
sub
add
and
sub
mov
add
test
je
cmp
jne
add
test
jne
sub
cmp
jne
mov
or
mov
sub
sub
add
add
add
mov
pop
sub
pop
mov
cmp
jne
test
jne
xor
mov
cmp
je
xor
and
mov
sub
sub
sub
xor
cmp
jne
mov
add
cmp
je
mov
add
xor
sub
add
and
and
cmp
je
mov
cmp
jne
sub
cmp
je
sub
mov
sub
cmp
je
test
jne
mov
test
je
add
mov
mov
add
xor
pop
mov
mov
add
sub
add
add
cmp
jne
sub
mov
sub
sub
cmp
je
or
mov
test
jne
cmp
je
cmp
jne
add
cmp
je
cmp
jne
cmp
jne
or
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
and
push
mov
mov
add
and
add
sub
push
mov
sub
mov
xor
cmp
je
cmp
je
test
je
mov
mov
add
or
add
sub
xor
mov
add
sub
mov
mov
cmp
jne
cmp
je
add
sub
cmp
je
mov
add
xor
and
and
cmp
je
xor
decl
xor
add
mov
and
sub
or
mov
sub
sub
add
subl
mov
cmp
je
mov
xor
mov
sub
sub
and
rorl
cmp
jne
add
mov
cmp
jne
test
je
add
cmp
je
and
mov
add
sub
cmp
je
sub
sub
or
xor
sub
or
or
rorl
cmp
je
sub
add
and
test
je
add
cmp
je
cmp
jne
cmp
je
cmp
je
and
add
jmp
mov
mov
mov
xor
sub
sub
mov
pop
and
cmp
jne
and
cmp
jne
mov
mov
cmp
je
mov
cmp
jne
sub
cmp
je
mov
sub
xor
add
sub
add
test
jne
mov
mov
add
sub
or
sub
sub
or
sub
sub
add
add
cmp
jne
mov
add
add
xor
test
je
mov
cmp
je
mov
mov
sub
sub
mov
cmp
jne
mov
xor
mov
add
add
and
sub
cmp
je
cmp
jne
cmp
jne
mov
mov
add
sub
add
sub
or
pop
mov
cmp
jne
add
add
mov
and
mov
or
and
add
sub
pop
mov
add
mov
add
and
cmp
jne
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
sub
add
push
mov
add
test
jne
add
mov
xor
mov
sub
add
sub
sub
test
jne
add
mov
add
xor
sub
sub
push
add
and
test
je
sub
mov
mov
add
mov
and
and
cmp
jne
sub
cmp
je
sub
cmp
jne
test
je
cmp
jne
and
mov
add
mov
cmp
jne
mov
mov
xor
sub
add
cmp
jne
mov
mov
add
sub
cmp
je
mov
mov
sub
cmp
je
sub
mov
cmp
je
mov
sub
add
mov
cmp
jne
mov
add
sub
sub
sub
add
cmp
jne
mov
sub
sub
xor
add
or
mov
add
and
sub
add
test
jne
mov
mov
add
and
add
cmp
jne
mov
mov
sub
xor
xor
sub
xor
push
mov
mov
add
add
and
test
jne
or
add
sub
cmp
je
and
mov
add
xor
cmp
je
xor
or
sub
add
sub
add
mov
push
and
add
push
mov
sub
push
xor
mov
sub
sub
mov
sub
sub
add
call
mov
sub
sub
mov
xor
sub
mov
add
mov
sub
mov
sub
sub
add
or
add
add
mov
or
sub
mov
sub
sub
mov
xor
or
and
mov
or
mov
cmp
je
mov
sub
sub
and
mov
add
add
add
mov
sub
or
je
sub
repnz
add
addl
mov
cmp
je
add
cmp
jne
mov
add
add
sub
sub
cmp
je
mov
add
cmp
je
sub
cmp
je
cmp
jne
sub
mov
mov
and
cmp
je
mov
cmp
jne
add
sub
jmp
mov
test
je
cmp
je
sub
cmp
jne
mov
and
and
sub
add
mov
add
add
mov
mov
test
jne
and
and
mov
cmp
je
sub
mov
sub
mov
cmp
je
sub
test
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
test
je
add
xor
add
cmp
je
cmp
jne
add
add
mov
sub
mov
cmp
jne
cmp
jne
add
cmp
jne
xor
add
mov
cmp
je
add
add
sub
mov
mov
sub
sub
cmp
jne
cmp
je
mov
xor
sub
sub
sub
add
add
add
cmp
je
mov
mov
add
mov
cmp
je
xor
or
sub
mov
add
add
cmp
je
mov
mov
cmp
je
mov
cmp
je
add
and
test
jne
mov
cmp
je
sub
cmp
jne
sub
add
mov
mov
and
cmp
jne
add
cmp
jne
cmp
je
mov
cmp
jne
mov
add
add
add
add
mov
add
add
cmp
jne
cmp
je
mov
add
sub
sub
mov
cmp
je
or
add
cmp
je
cmp
je
add
and
sub
sub
cmp
je
mov
or
pop
mov
sub
pop
or
mov
cmp
jne
and
cmp
je
test
je
cmp
je
and
pop
mov
cmp
jne
cmp
jne
mov
mov
add
add
add
cmp
je
mov
add
and
xor
mov
sub
and
or
add
and
test
jne
mov
sub
leave
ret
