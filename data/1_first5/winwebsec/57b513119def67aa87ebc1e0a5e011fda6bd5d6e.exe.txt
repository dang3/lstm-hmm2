push
jb
sahf
push
inc
mov
sti
cld
out
xchg
jmp
out
add
add
icebp
dec
movsl
push
jnp
pop
outsl
adc
mov
mov
sbb
jae
cmp
adc
loope
mov
cmp
pop
and
subl
fstpl
int3
out
ficoml
jo
test
out
xor
scas
lret
mov
out
mov
cmp
pop
pop
in
cmp
and
addr16
test
xchg
fwait
js
roll
add
cli
cld
ret
pop
jns
adc
cmp
inc
xchg
rorl
add
jp
mov
xor
fimull
ficoml
in
mov
hlt
sub
mov
cwtl
scas
insb
pop
rcll
aas
dec
cltd
pushf
adc
sbb
out
imul
mov
gs
push
bnd
notl
inc
inc
and
movsl
sbb
ret
inc
cmp
add
add
jecxz
add
rcl
fldenv
add
add
pop
pushf
cmp
and
cmp
fstl
and
test
imul
xchg
push
lock
inc
push
mov
xchg
inc
ret
add
sbb
lret
ret
xor
insl
inc
push
jne
outsl
jp
dec
lcall
test
hlt
sub
pop
movsl
mov
inc
push
mov
sub
sarl
adc
adc
test
pop
push
mov
jmp
or
xchg
sahf
mov
imul
inc
out
pop
mov
adc
scas
xchg
mov
dec
scas
cmpsw
adc
add
push
inc
cmp
out
xor
cwtl
jp
nop
and
imul
jb
mov
push
fwait
mov
ficomps
mov
xor
fiadds
lock
les
mov
add
cld
sbb
cmp
clc
dec
adc
mov
sub
cmp
dec
bound
call
push
inc
lea
xlat
loope
or
and
call
js
dec
push
mov
scas
cwtl
test
jae
push
and
sar
je
or
jg
inc
jbe
orl
insl
push
jbe
dec
lret
inc
js
out
cmp
jecxz
and
or
aaa
lods
les
mov
inc
xor
and
rolb
push
insl
dec
fcmovne
adc
pop
fistps
imul
add
and
mov
jae
aad
mov
in
lods
pop
lods
cmp
add
jae
mov
dec
sarb
adc
lock
cmp
push
notb
arpl
cmp
lods
sbb
out
dec
lcall
add
fadds
loop
inc
xlat
sar
sahf
add
xchg
shlb
cmc
jle
mov
stos
mov
cmp
imul
push
ror
lods
call
iret
dec
iret
repnz
mov
mov
cmp
sbb
cli
in
cmp
cmpsb
jo
aaa
sbb
jns
xor
or
icebp
lods
or
pop
xor
outsb
fsubl
cmp
pop
mov
push
cmpsl
xchg
sahf
insl
mov
nop
add
dec
dec
cmc
inc
lods
push
jne
add
in
jg
mov
jp
jne
and
mov
ret
mov
mov
mov
ret
add
gs
xor
je
icebp
pop
pop
xor
popf
push
pop
repz
mov
mov
jp
pop
xchg
sbbb
icebp
push
sub
sub
pop
insb
mov
int3
stos
adc
xchg
in
outsb
pop
and
es
sub
add
xchg
or
bound
fwait
mov
mov
dec
cltd
jle
mov
pop
dec
pop
pop
push
scas
cmp
cltd
ja
test
pop
lcall
aad
pop
xchg
sub
sub
mov
mov
add
push
mov
adc
imul
add
jle
inc
imulb
xchg
inc
test
nop
arpl
scas
add
jge
xchg
cmpsb
aam
mul
jl
jle
mov
pusha
mov
xchg
adc
xchg
pop
jl
loope
xchg
lea
cmp
mov
pushf
add
mov
adc
outsl
push
mov
lock
sbb
and
mov
dec
push
popf
call
mov
add
sub
pop
sbb
mov
pop
pop
mov
dec
xchg
or
cmp
xchg
out
adc
jp
sbb
or
mov
cmp
dec
and
outsb
mov
nop
adc
dec
fistpll
out
and
popf
lods
loop
inc
xchg
add
jno
adc
jns
je
arpl
repnz
int
sub
mov
out
mov
mov
sub
daa
out
lock
imull
dec
test
pusha
ljmp
adc
loop
xor
push
fwait
and
jmp
jl
je
or
or
stos
popf
stos
mov
shlb
xor
or
cmp
xchg
mov
jne
cwtl
cmc
push
aad
lods
xor
pop
nop
add
sbb
xchg
mov
cmp
mov
lds
xor
push
shlb
mov
jle
mov
pop
mov
shll
pop
cmp
mov
decl
imul
and
push
or
add
add
repz
add
inc
mov
addr16
addr16
mov
push
test
pop
jns
lcall
ljmp
inc
ja
daa
sarb
shrb
xchg
and
mov
mov
xor
bound
jbe
xchg
adc
dec
jg
sbb
ret
movsl
and
nop
sahf
pop
mov
pop
cs
loope
stos
xchg
xchg
aas
in
daa
cmp
cmp
mov
jmp
push
clc
repnz
negl
mov
bound
aaa
mov
int
movsb
das
fdivp
repnz
les
jbe
jb
or
pushf
out
repz
mov
call
pusha
jl
imul
adcl
rorl
xchg
mov
inc
jle
adc
insb
int3
sub
insl
test
movsb
xchg
movsl
xor
je
sti
sub
in
lods
xor
fsubrs
or
sbb
push
pushf
push
dec
push
cmp
xchg
lock
xchg
mov
mov
mov
cli
test
or
gs
or
pushf
je
int3
inc
roll
and
js
out
jo
shrb
insl
movsb
ljmp
jnp
cwtl
jle
aad
pushf
mov
in
xchg
mov
in
mov
das
repnz
in
jmp
xchg
fnstenv
test
add
mov
mov
cmc
addr16
test
xchg
xor
mov
test
lcall
xchg
mov
cmp
adc
clc
xlat
aaa
add
rcll
test
loope
push
xor
andb
nop
inc
mov
in
cmp
fwait
sbb
test
xchg
xchg
inc
aam
call
push
es
cmpsb
sahf
sub
xchg
and
adcb
loope
outsl
xchg
push
sub
xchg
sbbl
sub
arpl
jbe
xor
pop
push
out
inc
mov
rorb
pop
fcoms
cs
xorl
xchg
jp
pop
xor
jg
scas
shld
push
mov
push
in
jp
inc
scas
dec
out
inc
stos
mov
pop
mov
data16
mov
dec
shrb
repnz
es
sbbb
mov
mov
data16
push
and
jg
push
xor
push
dec
xchg
js
mov
xor
sub
sbbl
push
cmp
popa
sbb
jb
daa
fldl
or
jae
jle
adc
sar
bound
mov
sbb
fldl
fdiv
icebp
mov
adc
xor
dec
cmp
ds
push
jae
lcall
mov
test
push
mov
push
mov
cmp
mov
dec
push
push
mov
nop
std
inc
adc
cli
add
add
lods
pop
clc
ret
inc
inc
scas
loop
adc
inc
outsl
arpl
xchg
add
mov
jge
insl
push
sbb
or
mov
xchg
addr16
mov
loop
ljmp
lret
test
fisttpl
mov
sub
push
lsl
sahf
cmp
dec
scas
pop
fwait
daa
sub
mov
mov
push
jae
movsl
data16
jle
pop
stos
dec
int3
ljmp
jg
test
sbb
or
scas
je
pop
pop
xchg
mov
ss
adc
xchg
sbbb
pusha
movsl
sub
loop
arpl
ud1
pop
inc
sti
push
mov
mov
cmp
mov
idivl
cmp
ret
cmp
push
cmp
push
repnz
std
cwtl
sbb
arpl
push
sub
xchg
jg
call
add
mov
inc
inc
cmp
fistpl
xlat
imul
mov
add
in
xor
sbb
mov
call
fbld
adc
adc
mov
outsl
dec
sbb
xor
in
nop
jno
pop
xlat
lods
push
aas
pop
and
icebp
pushw
aaa
stos
lds
sub
mov
cmp
cmpsb
pop
aad
cs
hlt
jne
cmp
push
cli
gs
inc
stos
dec
stos
mov
sti
inc
jnp
mov
jecxz
pop
push
testl
jl
push
lret
mov
nop
jo
jns
mov
jno
jno
mov
shlb
ror
adc
cmc
js
inc
enter
or
fnstcw
test
xchg
adcb
sbb
or
mov
daa
fisubs
jno
lea
sarb
pop
lea
mov
mov
data16
adc
out
push
fs
dec
notl
mov
loope
jmp
ret
lds
pop
jg
jg
sbb
dec
mov
adc
push
or
das
sbb
sub
inc
inc
pop
xchg
lods
lcall
lods
add
or
jnp
aas
xor
sub
add
mul
mov
jg
popf
jnp
add
rolb
mov
xchg
sub
fwait
add
jmp
jae
pop
xchg
pop
ds
jg
push
mov
dec
fcmovnb
cmpsb
loope
mov
aad
das
or
push
fsubrs
movnti
out
pop
sbb
add
jecxz
out
aaa
ret
je
lahf
jmp
leave
loope
mov
sbb
movsl
popa
inc
imul
dec
pop
pop
test
es
ljmp
loop
leave
pop
cltd
dec
mov
mov
popa
jne
fwait
and
dec
loopne
cmpb
shlb
imul
das
std
dec
aaa
imul
int3
test
pop
jbe
adc
xor
jae
push
cwtl
and
fsubrl
mov
mov
sub
dec
dec
cmp
pushf
cmp
jmp
adc
cmp
into
std
xchg
xor
push
jg
in
cmpw
mov
bound
xor
loop
inc
test
or
mov
out
cmc
dec
jmp
cmpsb
sub
fidivs
adc
ljmp
mov
inc
xor
popa
and
dec
fists
ficoms
out
iret
pushf
mov
mov
sub
fildll
in
pusha
out
in
inc
ficompl
ret
iret
out
mov
outsl
outsb
lret
mov
icebp
mov
jle
les
and
in
mov
mov
cmp
or
loopne
aas
push
add
addr16
loop
repnz
dec
jl
lods
jbe
fucom
xchg
das
jae
mov
mov
jg
fldenv
or
push
je
inc
in
push
popf
push
jl
imul
scas
nop
mov
jb
icebp
aaa
pop
lahf
mov
testb
push
ds
mov
les
push
repz
or
mov
mov
or
loope
rorl
add
shlb
outsb
lcall
inc
jb
xchg
xchg
fdivrp
and
das
xor
scas
mov
jmp
loope
inc
pop
push
inc
inc
dec
aam
mov
sub
sub
cmc
mov
arpl
lods
in
pop
lods
mov
out
pop
add
test
xor
adc
je
jbe
jb
mov
lock
data16
dec
inc
stos
add
ret
shr
fistpll
outsl
jle
stos
sub
mov
adc
fsts
mov
pop
jle
xlat
push
add
push
add
xchg
hlt
dec
sub
push
pop
cmpsl
sbb
cmp
adc
enter
adc
aad
mov
dec
int3
insl
and
es
dec
mov
add
push
ret
xchg
mov
or
sub
loop
inc
enter
int
test
pop
hlt
or
push
push
dec
jno
mov
mov
pop
into
cmp
insl
mov
enter
ljmp
dec
jmp
jae
into
fstpt
lea
mov
pop
mov
andb
lods
addl
call
pop
rclb
mov
add
in
xor
jecxz
outsb
sub
inc
and
pop
jge
mov
loopne
push
push
jbe
jo
icebp
mov
lods
or
sti
fistpll
cmp
rcrb
inc
data16
push
cmc
je
ret
xor
movsb
jns
mov
add
and
arpl
frstor
pusha
inc
and
dec
jns
in
push
pop
mov
stos
xchg
movsl
roll
and
scas
add
scas
movsl
cmp
lret
icebp
gs
sbb
push
enter
pop
xchg
daa
and
mov
rolb
fwait
ret
es
inc
jmp
adc
pop
daa
orb
mov
mov
pop
popa
lea
and
inc
add
aaa
les
lahf
fcom
and
lds
pop
not
lods
imul
cmc
mov
jecxz
insb
ljmp
adc
jg
cmp
gs
lret
inc
sbb
insl
jno
and
or
xor
js
inc
das
push
sub
adc
lods
cmpsl
lcall
mov
scas
fs
fldt
dec
seta
mov
ficompl
adc
addr16
rorb
push
pop
add
xor
xchg
fs
clc
push
adc
mov
pop
in
push
and
mov
jb
xor
pop
outsl
mov
cwtl
pop
in
pop
insl
xchg
lods
or
xchg
insb
or
fidivs
mov
pushf
leave
addr16
lret
aam
xchg
cmp
cmp
cmp
ja
or
and
cmp
fistpl
inc
stc
loope
mov
dec
push
xor
movsl
sahf
cmc
dec
cmp
fisttpll
pop
mov
mov
aad
mov
int3
cmp
imul
fistps
mov
add
je
mov
mov
stos
mov
fs
jbe
fdiv
pop
pop
xchg
pop
and
arpl
add
xor
add
mov
xor
add
pop
das
push
jo
mov
xor
pop
xchg
push
pop
mov
or
jmp
push
lds
mov
add
out
add
fidivl
int
in
cld
pop
or
pop
in
lods
ja
inc
not
scas
imul
pop
and
scas
insl
js
dec
and
dec
push
leave
stos
mov
mulb
imul
sub
sarb
call
adc
and
repz
mov
mov
mov
inc
or
mov
bound
inc
sbbb
mov
stc
cmp
push
adc
xor
jecxz
inc
push
sbb
nop
xlat
shrl
test
in
scas
iret
enter
ret
push
idivl
stc
mov
pop
hlt
or
push
mov
pop
push
loope
pusha
mov
lret
mov
jl
jne
mov
inc
mov
stc
xor
add
scas
mov
dec
xchg
or
xchg
scas
sub
adc
mov
lods
lods
mov
fs
int3
cmp
mov
lds
pop
andb
adc
lahf
std
cli
fcomps
sub
lcall
fdivl
mov
jge
mov
cmpsb
inc
sarl
push
fbstp
push
mov
xchg
and
fdivs
andb
mov
mov
mov
xchg
arpl
xchg
or
add
lret
fistpl
fsubr
xor
stc
push
out
mov
sti
cmc
jne
adc
repnz
mov
in
rcll
jbe
lcall
mov
and
cmpsb
sub
fcoms
mov
aas
std
shrb
sbbb
arpl
adc
jbe
ss
xor
cmpsl
sbb
push
push
xlat
push
subl
lret
push
out
sbb
inc
aaa
inc
or
fdivl
bound
dec
popf
push
adc
outsl
ret
lea
lret
push
cld
fwait
pushf
int
adc
in
push
pusha
adc
or
aam
cli
pop
mov
fcmovnbe
imul
mov
lret
fidivl
mov
jnp
push
xchg
mov
notl
insl
adc
mov
pop
push
push
sbb
imul
jmp
mov
dec
push
and
test
dec
pop
out
jne
lret
imul
push
stc
out
hlt
sarl
stc
icebp
adc
jnp
pop
mov
std
stos
cmp
push
add
fdivl
enter
das
cwtl
cmp
and
jns
lret
lea
jae
gs
scas
push
sub
divl
lret
xchg
xchg
clc
bound
push
mov
adc
cli
cwtl
bound
das
pop
and
and
lds
xor
pop
bound
andnps
jecxz
mov
in
cld
xchg
mov
stc
fstl
gs
in
roll
mov
scas
add
je
movsl
lret
int3
out
or
mov
shrl
sarb
mov
inc
adc
pop
xchg
stos
mov
xchg
dec
push
mov
inc
pop
pushf
jle
adc
and
adc
mov
rorb
imul
shlb
out
imul
adc
push
ret
sti
xchg
sbb
jb
imul
xchg
ret
mov
outsb
or
xor
out
in
jae
nop
xor
fmuls
ss
lds
rorb
test
scas
pop
out
mov
mov
and
pushf
stos
pop
dec
xchg
xchg
push
inc
xchg
sar
adc
or
je
jb
jmp
sbb
aad
jne
fwait
push
mov
int3
mov
filds
inc
sbb
push
mov
xchg
mov
ja
rolb
or
push
sub
xchg
mov
loope
pop
sub
fildll
cmc
iret
pop
mov
inc
into
inc
jne
dec
stc
mov
mull
in
push
dec
jbe
rol
sub
call
adc
pop
es
out
icebp
sbb
insl
stos
push
ljmp
inc
or
jns
pusha
mov
je
ljmp
aas
divb
int3
mov
aaa
xchg
xchg
jae
or
popa
ja
cmc
cmp
lds
nop
dec
leave
sub
scas
std
push
lods
adc
add
xlat
ror
push
repz
adc
cwtl
dec
mov
sub
mov
xchg
push
ret
jg
push
mov
jg
jecxz
fneni(8087
add
sub
pop
mov
shrb
arpl
mov
pop
adc
sbb
adc
adc
mov
sbb
sbb
std
inc
xor
movsb
push
stos
or
int
push
aas
scas
adc
pop
aas
repz
push
and
dec
xchg
jg
repnz
repnz
cmp
mov
fidivrs
fmull
mov
add
imul
mov
mov
andb
cmpsb
scas
mov
nop
icebp
fwait
ss
xchg
vunpcklps
push
add
sti
adc
ffreep
inc
test
jp
dec
dec
dec
sub
outsl
lcall
nop
pop
push
pop
jl
or
cli
xchg
jo
scas
sub
pop
into
js
aas
mov
jg
xchg
mov
inc
fdivr
adc
mov
or
outsb
hlt
xor
iret
adc
scas
mov
pop
pusha
sahf
pop
jecxz
adc
lea
add
mov
add
jo
adc
inc
mov
xor
jno
add
roll
xor
jl
push
in
and
out
insb
pop
test
push
push
iret
je
dec
jmp
je
in
sbbb
lcall
lock
std
inc
mov
push
sub
popa
add
mov
lods
aad
int3
or
sub
sub
in
daa
mov
cmpsl
test
push
hlt
pop
xor
inc
fs
pop
int3
je
jge
or
mov
and
rolb
cmp
mov
insb
mov
xchg
jae
les
movb
inc
pop
sbb
pop
push
xchg
push
test
stos
jnp
jle
aad
add
pop
dec
jae
aaa
in
push
inc
mov
call
cld
jmp
lds
and
mov
mov
ja
xchg
and
int
lcall
xchg
mov
adc
cld
or
adc
cmpsb
cmp
mov
push
ret
cltd
cmp
inc
push
mov
jecxz
xchg
fwait
jnp
sub
fs
sbb
gs
mov
loop
fnstenv
jp
das
orb
js
out
jno
push
pusha
pop
scas
sbb
dec
fcmovnb
enter
insl
jp
imul
adc
neg
cltd
fwait
popf
das
jl
rcr
repz
mov
sbb
mov
cmpsb
pushl
mov
pop
adc
imul
or
pop
push
push
push
dec
jl
lods
fwait
sahf
popa
mov
xor
jno
lret
jge
adc
mov
popa
cmpsb
aad
inc
lods
or
addb
fwait
movsb
dec
scas
fs
fmull
outsb
mov
inc
insb
stos
inc
and
fisubrs
mov
mov
rol
add
dec
cwtl
daa
jl
adc
ljmp
xchg
ret
sbb
negb
imul
mov
inc
pop
scas
sbb
sub
out
fisttpl
or
out
jge
mov
push
cltd
xchg
movsb
pop
cmpsb
mov
xchg
stc
sbb
in
lret
lret
arpl
mov
push
and
negb
xchg
xor
add
fdivs
ja
repz
sbb
inc
cmp
leave
xchg
mov
mov
aaa
movsl
pop
jo
mov
jns
jmp
mov
inc
jno
xor
imul
sbb
push
mov
push
scas
mov
int3
inc
test
mov
and
call
inc
mov
xor
inc
sti
mov
pop
xchg
testb
adc
push
pop
xor
aam
stc
mov
aaa
add
cmp
popa
cmpsb
enter
xchg
out
fsubrl
popa
lea
dec
rsm
dec
dec
push
es
lods
add
lock
movsb
push
sub
xchg
push
fidivrl
pop
gs
cs
mov
scas
test
pop
mov
ljmp
cwtl
and
xchg
mov
mov
cmp
ds
lods
dec
mov
inc
nop
mov
xor
lods
fidivrl
stc
mov
mov
fwait
adc
xchg
cmp
gs
int3
insl
push
mov
xchg
dec
lcall
arpl
xor
mov
cli
inc
addb
aam
stos
std
das
shrb
out
add
mov
xor
sbb
sahf
les
shll
mov
popa
cmpsb
and
xlat
pop
cmpsb
clc
xchg
dec
mov
mov
gs
stc
jmp
push
rorl
pop
jns
mov
mov
xchg
pusha
ds
iret
xor
jne
inc
cmpsb
push
sbb
test
leave
push
loop
shlb
xchg
inc
jbe,pt
push
mov
orl
in
jg
pop
mov
jae
sub
in
adc
mov
call
nop
or
mov
fsubrl
outsl
xchg
ret
cmc
mov
adc
enter
adc
repnz
out
hlt
loop
push
shl
mov
stos
sub
rorl
sbb
push
xchg
fisubrl
lret
scas
or
push
outsl
push
pop
mov
dec
dec
push
ljmp
cmp
scas
inc
nop
lret
sbb
dec
jno
sbb
or
cwtl
out
jo
push
insb
sbb
push
xchg
ret
shrb
pusha
addr16
mov
add
fcmovnu
dec
and
rol
cmp
mov
jbe
jle
adc
xor
icebp
jno
pushf
or
sub
add
pop
sub
xchg
ds
xor
jmp
adc
push
jmp
add
jge
shl
mov
jg
adc
xchg
ja
icebp
sub
jg
outsl
mov
imul
pop
icebp
and
out
cmp
shrb
sarl
add
pop
jns
sub
call
xor
add
iret
or
jle
mov
inc
push
outsb
mov
fisubl
sub
ror
fisubrs
push
mov
mov
call
mov
mov
jbe
scas
add
sbb
mov
cld
jmp
jb
jns
jle
addl
cmpsl
out
mov
sbb
mov
sbbl
out
push
and
inc
inc
pushf
xchg
mov
in
sub
out
xor
dec
mov
jno
movsb
dec
xor
jl
stc
vpmacsdqh
mov
out
sbb
sarl
sahf
or
jle
inc
mov
out
notl
clc
and
xchg
rcll
sub
les
adc
fsubrs
pop
cwtl
or
ret
int
xor
xchg
test
xchg
in
xchg
ljmp
mov
test
repnz
loopne
repnz
int3
cltd
loop
js
divb
mov
or
add
sbb
pop
insb
sub
out
sbbb
adc
out
xor
test
dec
test
aaa
out
hlt
dec
and
pop
adc
sub
inc
push
imul
pushl
sub
push
pushf
loope
jae
scas
mov
mov
fildl
add
insl
loope
ficomps
sti
fstpl
push
adc
add
sti
nop
imul
mov
hlt
xchg
pop
mov
adc
insl
repnz
add
pop
cmpsl
cmc
filds
mov
insl
fimull
cmp
js
scas
pop
sahf
cmp
sub
sub
in
lahf
hlt
out
add
jmp
aad
add
jae
gs
cmpsl
cltd
jle
add
and
mov
mov
xorl
push
xchg
add
es
push
out
out
adc
frstor
dec
outsb
or
mov
gs
jmp
sub
cmp
inc
movsb
lds
xchg
shll
sub
js
and
loop
loope
mov
push
test
mov
mov
mov
jns
mov
sbb
jmp
sahf
inc
into
test
decl
sub
jp
push
les
cld
clc
into
in
into
int3
loopne
lahf
adc
mov
shll
lcall
les
jg
mov
dec
dec
pop
dec
push
inc
mov
enter
jle
movsl
pop
inc
aad
cmp
dec
test
out
cmc
jecxz
and
pop
aaa
mov
pushl
inc
pop
mov
xchg
sarl
xor
call
xchg
pushf
push
hlt
repnz
frstor
bnd
mov
push
push
push
enter
jp
sbb
inc
and
push
push
xor
adc
cmp
mov
mov
mov
mov
bound
mov
mov
add
jge
jnp
clc
push
xlat
mov
enter
push
sub
xchg
icebp
mov
or
insl
and
loop
mov
xor
lds
xor
fdivr
cltd
mov
rorl
pop
mov
scas
push
or
or
popf
repz
or
sub
mov
lret
loop
cmpsb
incl
aad
rcr
repnz
scas
clc
dec
negb
pop
divb
scas
mov
out
fistps
pop
mov
push
and
jns
xchg
pop
jo
jne
dec
decl
stos
fs
xchg
loopne
xchg
mov
fidivl
popa
loop
dec
dec
out
pop
repz
in
cmp
adc
nop
cmp
push
jecxz
mov
jmp
cld
vmwrite
and
sti
lret
push
push
sbb
dec
or
popf
bound
pushf
cmpsl
jbe
scas
std
mov
scas
jbe
and
arpl
adc
js
cld
push
lds
gs
push
cmc
sbb
insl
push
clc
shll
mov
sbb
out
add
mov
lahf
jmp
cmp
push
aad
mov
hlt
lahf
sbb
in
movb
shlb
or
push
lea
pop
fistpl
push
mov
sbb
das
lods
imul
sub
ror
push
loope
je
addr16
push
and
jl
adc
aad
int3
dec
fdivrl
fwait
lock
inc
cld
sub
in
xchg
pop
or
call
cmpsl
push
inc
call
and
sbb
test
scas
pop
and
sahf
xchg
fprem1
les
ss
je
imul
ret
cmp
inc
add
inc
imul
pop
icebp
mov
aad
or
out
push
and
leave
and
lret
ljmp
cmp
pop
clc
and
js
mov
sbb
insl
add
popa
fistl
lock
adc
push
and
insb
inc
push
adcl
xchg
mov
push
push
pop
xchg
lahf
scas
push
arpl
dec
mov
es
mov
mov
lods
pop
sub
sbb
mov
aam
inc
or
loopne
xor
repz
sub
adc
test
inc
test
jno
aaa
jns
xchg
sbb
pushaw
jle
fisttpl
aam
jl
cli
in
cmp
clc
arpl
jle
enter
test
pushf
sub
lods
adc
add
jb
rcl
ja
dec
mov
ror
and
adc
adc
insl
insl
jle
test
repnz
outsb
inc
jns
inc
push
and
cmp
push
daa
mov
fiadds
daa
lret
mov
xchg
icebp
mov
pop
fdiv
push
loope
std
out
push
xor
leave
or
inc
jb
push
incb
movb
sti
jmp
inc
sub
es
scas
fdivrp
xchg
fsts
pop
add
dec
sbb
sub
xchg
push
push
sti
jp
sbb
daa
xchg
scas
in
cmp
push
jno
inc
xchg
out
jno
lock
repz
dec
add
jmp
sbb
sahf
pop
mov
cmp
sub
mov
mov
movsl
aam
adc
lcall
and
out
shlb
leave
repnz
enter
fisttpll
cwtl
push
pop
mov
xor
push
mov
orl
add
repz
orb
and
ficompl
lret
cmc
ja
mov
sbb
cmp
lock
xor
mov
shll
mov
mov
jae
sub
lahf
loop
into
add
xchg
sub
call
sbbb
jge
dec
jg
pop
or
rcrl
or
idivl
lock
loop
lock
pop
mov
xchg
jo
pop
sbb
xlat
cltd
icebp
leave
lds
xchg
inc
jp
mov
lcall
ds
mov
inc
imul
outsl
or
mov
testb
xchg
addr16
stos
test
data16
mov
inc
lcall
xor
cmc
pop
ret
movsl
nop
jecxz
dec
inc
into
pop
lcall
and
jbe
push
adc
mov
sub
jmp
push
and
outsb
js
bound
xchg
mov
sbb
push
xorb
mov
inc
rcll
shll
ficoms
fsub
shrd
test
popa
pop
sub
dec
dec
and
adc
and
fwait
adc
fisubrs
pop
sbb
clc
jl
lahf
lock
push
sub
lods
stos
inc
sub
dec
icebp
lods
mov
dec
rol
pop
jo
or
push
ret
push
call
pop
in
aad
hlt
cld
mov
cmp
push
int3
insb
inc
insl
mov
sbb
fisubrs
mov
mov
sbb
std
test
clc
push
jbe
or
fwait
xor
dec
cmp
mov
dec
stc
mov
mov
pop
and
in
sub
loopne
dec
test
loope
sti
fisubl
outsl
ret
mov
mov
lods
insl
mov
js
ja
inc
cmp
sub
dec
ret
rcll
pusha
add
adc
mov
pop
xchg
mov
or
sub
cld
or
out
addb
push
mov
mov
imul
lods
fcmovnu
adc
dec
sub
add
mov
cmp
adc
xchg
push
mov
lods
cmc
adc
push
std
push
mull
incl
sbb
xchg
xor
notl
cltd
insb
mov
jge
in
je
xchg
jecxz
sub
gs
jmp
jecxz
push
into
cmp
adc
mov
lods
pop
ret
push
inc
jmp
push
mov
adc
push
sub
lret
aad
pop
dec
or
pop
jp
jns
xchg
pushf
in
movzbl
leave
in
sub
xor
mov
mov
les
push
lea
xchg
or
fdiv
dec
imul
pop
mov
lcall
lea
pushl
push
push
pop
dec
jp
fst
call
inc
int
add
aaa
lret
mov
mov
sub
jp
mov
adc
inc
cmp
je
in
sbb
aam
cwtl
xor
test
testb
shll
repz
imul
jnp
rolb
or
ud2
test
nop
div
mov
lcall
jae
shl
inc
inc
jnp
repz
lods
cmp
sbb
cmp
add
and
or
xchg
pusha
popa
and
mov
ja
push
loope
xchg
xchg
xchg
ljmp
pop
lods
out
movsl
add
or
popa
push
flds
push
out
lods
mov
mov
scas
mov
fildl
mov
mov
mov
jge
cmp
movsl
orl
sbb
xor
mov
jne
in
ja
or
xchg
xchg
sbb
or
repz
fmuls
dec
inc
sub
ja
pushf
xchg
addr16
stos
push
sbb
insl
jecxz
loopne
rorb
dec
stos
xchg
iret
int3
aas
dec
push
es
shlb
rcrb
dec
ret
inc
push
xchg
mov
adc
jl
cmp
pop
je
test
mov
jae
jecxz
nop
inc
jg
sub
push
cmp
push
push
gs
roll
sti
decl
xor
jle
pop
and
xlat
adc
cwtl
scas
icebp
sbb
mov
dec
out
lods
jo
xchg
fmull
arpl
call
jno
pop
inc
push
pop
mov
add
enter
ficompl
pop
cld
lret
push
mov
test
sub
push
mov
sti
mov
inc
xchg
enter
sub
adc
mov
movsl
and
int3
inc
add
jno
pop
pop
or
lcall
mov
shlb
loope
pop
jmp
mov
jl
jns
scas
fmuls
jg
shll
adc
scas
push
movsb
mov
pop
int
enter
jg
repnz
sti
push
cs
cmpsb
pop
aad
leave
jo
out
push
out
aaa
mov
js
jl
mov
dec
arpl
mov
xchg
lahf
aad
xchg
data16
loopne
fwait
lcall
mov
jo
xor
call
lret
pusha
pop
mov
and
xchg
mov
inc
cmpsl
xchg
or
xlat
mov
xchg
and
shll
or
data16
test
cmp
push
int
dec
push
movsl
jns
pop
fsubs
xchg
test
fs
outsb
sub
sub
fs
popf
bound
cmpsb
pop
sbb
sbbl
and
push
mov
cmp
pop
arpl
pop
inc
loopne
mov
repnz
pop
pop
cwtl
aaa
xor
and
push
mov
insb
arpl
sahf
loop
cwtl
sub
mov
and
inc
xchg
call
or
out
add
sub
hlt
sbb
dec
mov
dec
mov
mov
xchg
pop
mov
movsb
xor
mov
loopne
sub
je
xchg
inc
les
out
pop
mov
call
mov
pop
test
cmpsb
rol
mov
fs
cs
fdiv
rorl
ret
and
mov
bnd
sub
xchg
mov
or
jns
sub
scas
inc
push
imul
cmpsb
inc
push
rcll
testb
lahf
xchg
test
adc
sbb
xchg
pop
imul
inc
psraw
sub
cld
sub
rcl
lret
imul
fisubrs
cltd
and
adcl
icebp
gs
sub
inc
mov
xor
push
cmp
jle
ret
push
add
aam
push
jbe
or
xchg
shlb
pop
jo
outsb
pop
or
outsb
mov
lret
mov
test
sbb
mov
mov
lcall
sub
sub
adc
nop
jnp
outsb
or
sarl
sbb
mov
push
xchg
cwtl
fldt
aad
pop
mov
pop
rol
mov
cmpsb
lcall
and
add
int3
aaa
ljmp
xor
mov
add
loope
pop
leave
xchg
xor
mov
test
out
and
out
push
loop
dec
cmp
imul
mov
rorb
data16
rcr
bound
mov
push
lds
call
lock
or
add
cmpsl
cmpsl
mov
pop
mov
adc
flds
pushf
loope
stos
mov
and
pusha
pop
dec
sti
es
pusha
enter
mov
adc
xchg
pop
lea
mov
mov
les
adc
or
mov
xchg
push
push
scas
push
fisttpl
xchg
rcrb
cmovno
ss
pop
int
nop
xchg
add
loopne
pop
insl
and
imul
mov
and
mov
xlat
mov
jnp
lods
pop
cli
repz
filds
jns
mov
mov
jecxz
shrb
addr16
ja
je
addr16
push
mov
xchg
out
sbb
sbb
inc
mov
insb
xlat
xor
cmpsb
or
mov
xor
divb
hlt
popf
add
popf
push
mov
enter
and
adc
decl
adc
cmpsl
and
in
leave
imul
jge
mov
daa
shl
rolb
jnp
xchg
push
and
jmp
add
lock
out
inc
shrb
add
add
ja
push
push
xor
pop
out
inc
lret
jbe
xchg
sbb
hlt
xchg
and
jmp
test
xchg
sbb
mov
adcb
push
shll
testl
cmp
outsl
je
xor
insl
loopne
jmp
test
les
ds
in
push
jno
sti
cld
subl
dec
addr16
cmp
add
fmuls
sbb
xchg
addr16
mov
adc
scas
ret
ret
test
in
pop
cli
push
jp
mov
ret
mov
xor
pop
ret
xchg
xchg
clc
add
push
mov
push
ss
les
pop
inc
dec
mov
push
push
xor
sbb
or
lock
in
jmp
ficoms
mov
mov
stos
mov
sbb
add
sahf
mov
pop
mov
je
shl
ss
dec
sbb
imul
aaa
pop
jmp
push
cmp
nop
sub
pop
xor
mov
pop
mov
stos
push
stc
dec
sbb
push
mov
mov
arpl
mov
push
jne
lea
jmp
lcall
test
xor
lahf
fs
ficoml
push
sub
jns
adc
mov
iret
push
sahf
push
jmp
xlat
or
cli
leave
out
add
sbb
sarl
adc
fnstcw
adc
lret
and
outsl
sbb
add
lods
add
mov
lea
in
xlat
pop
pop
ja
outsl
sub
ljmp
sub
xor
sbb
mov
dec
inc
imul
ss
mov
pusha
in
inc
out
pop
fcomps
pop
mov
jecxz
cmpsl
fwait
stos
push
add
sti
sub
and
or
test
or
idivb
mov
push
pop
push
xor
scas
ja
sahf
mov
shl
outsb
inc
mov
adc
out
mov
cmp
bound
xlat
sub
cmp
push
jge
dec
cmp
or
sub
lds
rorl
mov
cld
ljmp
or
fidivs
mov
pop
pop
cmp
sub
js
sbb
outsb
xlat
pop
cli
inc
sbb
cwtl
xchg
lds
pop
mov
lock
cmpsl
rclb
imul
sub
leave
pop
add
jns
in
call
das
pop
inc
mov
mov
push
sbb
dec
push
mov
stos
rcrb
ds
push
sbb
aad
shll
sbb
jmp
ret
pusha
fstpt
lcall
test
movsb
cltd
xchg
sbb
aaa
push
je
insb
inc
popa
lds
stos
lcall
sbb
sbbl
lds
cmp
js
jge
jns
pop
inc
add
sub
and
add
arpl
lods
hlt
adc
fisubrl
sbb
int3
repnz
jge
out
mov
add
xchg
addr16
cmc
xchg
lock
sbb
addb
adc
jbe
mov
and
stos
fidivrs
xlat
pop
mov
pop
in
xor
jmp
adc
movsl
pop
jnp
inc
pop
jg
cmpb
mov
mov
out
xchg
jecxz
dec
and
jns
sbb
sbb
pop
jnp
ss
mov
cwtl
lret
shrb
adc
cmp
mov
add
loop
adc
push
pop
adc
jae
repnz
addb
lret
popf
pop
pop
cwtl
pusha
lods
test
mov
inc
fldenv
push
or
inc
pusha
aad
rcrb
bound
fwait
jns
push
cmpsb
aad
cltd
insl
jg
ss
mov
mov
pand
clc
adc
loop
or
dec
sahf
adcl
mov
jmp
sbb
movsl
sarl
mov
dec
jnp
adc
jno
inc
movsb
ret
xchg
sbb
sbb
mov
shrl
aas
stos
arpl
divl
lds
jb
aad
pop
mov
ret
mov
div
enter
mov
push
pop
test
xlat
sbb
push
ss
inc
flds
repnz
std
cwtl
rol
xor
mov
xor
cmp
sar
jo
enter
xchg
imul
das
pop
add
push
out
test
ds
dec
fidivrs
xchg
pop
out
fnstcw
mov
rclb
push
nop
insb
in
sbb
arpl
insl
aam
xor
shr
pop
stos
xor
test
pop
ja
jmp
clc
pop
sub
cli
xchg
shrl
mov
addb
adc
fidivl
pop
shrb
xchg
push
cmp
aam
mov
xchg
add
pop
aam
xor
cli
bound
and
cmp
sub
cld
pop
fcompl
cmp
mov
add
mov
pop
xor
insl
or
popa
rcll
scas
je
add
das
scas
imulb
dec
mov
mov
jp
or
sbb
movsb
sub
out
cmpsl
push
push
shlb
jecxz
jmp
xchg
mov
xchg
insl
daa
mov
cmp
or
repz
jbe
jnp
mov
imul
mov
lret
pop
inc
imul
rorl
cmp
xchg
pop
pop
jge
sbb
sub
dec
mov
sbb
bound
jecxz
jge
sub
fidivrl
dec
lcall
shrl
ret
ljmp
fists
xchg
nop
fcompl
aaa
pop
pop
pop
insl
dec
testl
push
cmc
sub
push
test
data16
mov
cmc
add
mov
xor
jmp
cmp
cs
pop
ss
movsl
daa
les
jno
mov
fs
mov
int3
fsubl
stos
xchg
sbb
adc
mov
out
pop
dec
sbb
and
into
mov
xchg
xor
cmp
or
and
test
sub
sbb
test
imul
mov
pop
leave
jmp
out
sbb
push
adc
mov
xor
inc
sahf
or
stos
cmp
pop
ror
inc
add
test
es
sub
mov
enter
repz
mov
or
sbb
cmpsb
push
cmp
mov
mov
out
pmaxub
imul
leave
mov
es
and
pop
ja
pop
jno
dec
mov
dec
or
jnp
jns
mov
xchg
add
shrb
add
cli
mov
sbb
test
xchg
aam
adc
outsb
call
xor
push
add
pop
mov
and
int3
shrb
cld
mov
fwait
pop
in
mov
mov
pop
push
ja
cltd
movsb
ret
adc
aam
jmp
xchg
les
cmp
cmp
lock
mov
mov
or
inc
stc
inc
push
push
and
sbb
clc
jae
outsb
enter
sub
hlt
cmpl
nop
push
ficompl
out
push
arpl
addl
es
mov
negl
fists
iret
pop
cmp
scas
adc
sub
pop
shl
xor
mov
xchg
push
jmp
sbb
xor
lret
dec
in
mov
into
jl
lret
int
push
add
mov
xchg
mov
insb
cmc
lahf
dec
and
jge
scas
shl
jnp
sbb
push
std
mov
hlt
outsb
repnz
mov
add
add
sbb
repz
mov
jns
jae
add
xorb
daa
pusha
aad
pop
mov
pop
mov
xor
inc
out
in
add
addl
rcrl
loopne
aaa
jge
or
cmp
in
jo
faddl
sub
push
test
mov
addl
je
xchg
sarb
mov
or
jmp
inc
int3
lods
mov
aas
mov
mov
adc
shrb
and
in
push
and
mov
loope
aas
outsb
jne
jne
and
div
es
xchg
xchg
cli
stc
scas
iret
cli
adc
insl
sbb
scas
arpl
jg
dec
icebp
int
jmp
jecxz
add
add
mov
faddp
xchg
das
pop
sarw
insl
xchg
add
sarl
push
ret
ljmp
mov
je
scas
fisubrs
mov
push
pop
sub
cld
jne
pop
pop
xor
js
mov
mov
mov
arpl
jns
sub
subl
outsl
sbb
outsl
mov
cwtl
aaa
add
repz
ss
pop
nop
out
dec
add
lock
xchg
aas
pop
frstor
cmpsb
mov
and
pop
sti
xlat
call
sub
xlat
sti
jl
cmp
xorb
insl
add
outsb
fs
cmc
fwait
fwait
dec
sbb
pop
adc
xor
out
pop
push
ret
mov
cmpsb
mov
sub
jmp
xchg
push
xchg
loopne
inc
xchg
adc
loop
mov
imul
mov
pop
push
cmc
orl
mov
sbb
loop
push
pop
cli
jne
add
jl
in
or
cmp
ss
call
or
push
push
lods
popf
inc
pop
outsb
dec
mov
pusha
cmpsb
aaa
jp
lock
hlt
mov
lahf
lea
mov
jg
xchg
mov
lock
add
fwait
xlat
cmpsl
ds
jne
jge
add
fisttpll
mov
jecxz
aad
mov
lock
mov
mov
shll
out
xor
shll
inc
dec
fdiv
lods
dec
mov
popa
mov
sbb
ja
mov
pop
stos
fs
pushf
enter
inc
shrl
call
fdiv
fbld
repz
pop
loopne
rcll
xlat
or
xor
in
mov
sarb
xchg
adc
sbb
jg
iret
mov
push
pop
movsl
in
sub
xor
pop
push
add
xchg
int3
adc
int3
pop
or
xchg
cmc
add
mov
jp
mov
pop
push
and
stos
jmp
mov
loop
adc
repz
pop
fdivs
popa
stos
jno
iret
test
bound
xor
sbb
test
inc
in
out
dec
push
mov
test
adc
in
mov
filds
insl
dec
adc
mov
shrl
inc
jnp
daa
cmpb
push
and
movsl
jecxz
xor
imul
fstpl
xor
adc
fwait
mov
pop
push
pop
js
inc
add
push
inc
push
cmp
xor
repnz
mov
stos
lods
jbe
aad
mov
bnd
and
in
push
ret
aaa
inc
pop
dec
dec
pushf
push
lea
fnstcw
jns
or
stos
lods
rcrl
das
stos
fidivrl
clc
cltd
or
imul
scas
test
xor
or
dec
lret
js
into
data16
cmpsl
movsl
adc
mov
mov
push
stos
fstpt
lret
mov
mov
and
add
std
xor
mov
xor
scas
and
in
lods
out
je
lods
xchg
sbb
into
mov
faddl
dec
mov
and
mov
lahf
jne
test
add
jg
sbb
add
addl
sub
mov
es
in
xchg
xchg
sub
mov
cs
pop
mov
push
lcall
jne
in
mov
imul
pop
mov
pusha
repnz
jg
xor
push
icebp
std
cmp
arpl
sbb
or
push
sti
cmp
xor
mov
bnd
sub
aaa
imul
shl
pusha
loop
mov
inc
cld
popa
sub
out
aam
dec
inc
test
andl
mov
scas
mov
ds
lds
mov
xor
out
rcrl
fistpll
and
lahf
stos
int
cmp
jg
leave
push
or
sub
js
test
mov
das
sbb
xchg
ud2
cmpb
jbe
leave
mov
addb
adc
xor
sbb
in
aam
outsb
mov
or
xlat
push
pop
push
xchg
and
or
inc
lds
fdivr
mov
add
vandnps
enter
testb
inc
adc
rcl
lcall
movsb
pop
xchg
mov
inc
lcall
das
pop
fstl
lahf
or
push
sub
push
sub
or
insl
shrb
div
bound
inc
jge
sub
mov
xor
subl
int
idivb
idiv
jo
mov
insl
aad
xor
dec
and
mov
test
jno
push
mov
loopne
or
mov
mov
xor
add
push
imul
fsubs
popf
mov
and
cmpsb
xor
lret
push
jb
and
sub
push
cmp
call
jo
sbb
insl
aaa
xchg
inc
int3
dec
pop
mov
cmpsl
mov
test
adc
jns
mov
imul
or
repnz
pop
jno
or
xchg
jl
inc
fisttps
int3
add
pop
xor
loop
jb
sbb
insb
pop
in
mov
pushf
add
and
cs
inc
inc
out
mov
lock
fisttpl
dec
add
ja
sbb
fwait
sbbl
jl
and
movsb
jl
fildl
mov
daa
mov
cmp
test
push
and
inc
or
lods
xchg
push
mov
dec
adc
pop
out
and
andb
xor
pop
adc
enter
dec
movsl
cmp
push
mov
neg
icebp
and
mov
call
sub
jnp
add
bnd
add
adc
add
scas
mov
mov
push
xchg
or
push
xchg
push
stos
into
mov
mov
sbb
addr16
push
fstl
push
push
dec
imul
and
into
arpl
inc
cmp
ljmp
dec
push
push
inc
xchg
in
stos
mov
addr16
stos
int3
inc
movsl
out
rcrb
and
mov
icebp
dec
cmp
mov
pop
add
adc
mov
lcall
xlat
lahf
xchg
fwait
jp
push
and
orl
push
jle
jno
inc
in
aas
push
pop
insb
pop
mov
sbb
push
in
fistl
gs
push
fsubs
ljmp
add
cmpsl
mulb
add
add
sbb
popf
xchg
mov
sti
fwait
or
sti
xor
xchg
mov
add
mov
jge
rorl
sbb
cmp
cltd
pop
jmp
and
pop
pusha
jge
add
fcompl
jmp
aas
sbb
pop
test
sbb
mov
adc
push
add
movsl
jl
jno
cmp
and
mov
movsl
mov
out
mov
filds
cmp
push
aam
and
mov
sub
jno
scas
sbb
enter
mov
gs
loope
dec
sub
xlat
xor
push
loope
lods
data16
cltd
insl
cmpsl
and
fs
ljmp
aas
mov
lret
repz
popf
test
gs
movl
pusha
gs
cmc
ret
xchg
xchg
xlat
or
mov
insb
das
xor
xchg
into
xchg
jo
outsb
pop
outsb
jp
xor
mov
cmp
sar
sbbb
out
mov
repz
cmp
mov
jg
lret
movsb
inc
aam
repnz
mov
fbld
pop
faddp
scas
sbb
inc
mov
and
imul
popa
mov
fists
xlat
subl
cmpsl
in
jge
icebp
pop
jmp
inc
mov
call
or
mov
inc
inc
insb
loopne
in
mov
jecxz
and
repz
fcmovnb
or
mov
xor
adc
lods
xor
jmp
add
xchg
leave
add
pusha
setno
inc
in
repz
out
cltd
push
cmpsb
lret
sub
adc
lret
cwtl
scas
adc
mov
or
repz
and
test
push
je
jne
cwtl
sarl
adc
inc
mov
and
adc
dec
xor
sbb
xlat
js
ds
ja
xchg
push
mov
jl
sbb
xchg
bound
or
inc
jo
imul
adc
aaa
lods
cli
sbb
inc
loopne
push
xchg
test
dec
mov
dec
mov
push
or
test
xor
fisubs
cmpsb
into
xchg
bsr
xor
repz
mov
or
ret
clc
loopne
incb
add
adc
aad
lods
and
cmp
movsl
insl
aas
lret
arpl
sar
cmpl
repnz
imul
xchg
xchg
ret
repz
or
insb
clc
in
scas
test
jge
mov
sub
arpl
push
ss
nop
out
test
addl
out
addl
xchg
jmp
hlt
in
sbb
or
in
pop
mov
adc
sub
leave
cmp
imul
lds
hlt
scas
push
sub
into
pop
scas
pop
jge
xor
jecxz
xchg
stos
repz
cmp
dec
pop
push
stos
xchg
jle
and
inc
add
mov
jne
fcoml
js
cmp
jg
test
dec
pushf
cwtl
xor
out
inc
in
mov
sub
jl
outsl
das
push
dec
sub
xor
ret
js
test
cli
test
dec
jge
lods
pop
mov
and
dec
pop
xor
sub
test
fldt
int3
daa
jnp
mov
cltd
ds
adc
mov
mov
loopne
outsb
ljmp
mov
imul
jnp
xor
sub
cltd
sbb
imul
push
lret
add
jne
push
into
outsl
arpl
xchg
pusha
loope
mov
xchg
sub
and
mov
fcom
jmp
int3
push
dec
scas
xchg
mov
adc
sbb
fsubs
mov
xlat
pushf
add
mov
xor
and
dec
jmp
test
pop
mov
gs
xor
xchg
adc
dec
icebp
jle
xlat
rcr
out
adc
addl
xorb
mov
repnz
movsl
pop
insb
adc
pop
jge
pop
sti
pop
mov
inc
insb
iret
ljmp
test
jb
or
pop
dec
push
gs
jno
jne
pop
xor
inc
cmp
loope
int3
dec
and
sbb
pop
test
pop
gs
xchg
fwait
mov
lods
mov
or
cmp
rorl
add
icebp
fstl
repz
adc
adc
pop
sarl
mov
add
imul
pop
jp
loopne
fcoml
loopne
call
push
or
mov
les
cld
stos
gs
in
fcmovbe
je
jb
push
push
lods
dec
aas
pop
pop
sbb
cmp
lds
mov
das
and
test
adc
or
mov
xchg
roll
xchg
test
ficompl
inc
idivl
or
add
cmp
scas
sub
loop
jnp
popa
dec
xchg
mov
or
xor
pop
test
int3
dec
clc
add
jnp
aaa
jle
shrl
test
and
push
out
mov
ss
sbb
mov
rcr
fisttps
aas
and
xlat
lods
jecxz
push
js
inc
xlat
loope
sbb
jnp
loopne
cmp
stos
stos
jns
in
aaa
sbb
mov
leave
dec
mov
mov
std
add
cmpsl
pop
inc
sub
fadds
pop
negl
call
shrb
pushf
jbe
and
jno
in
dec
mov
or
mov
aas
push
mov
or
test
cmp
es
cmpsb
dec
adc
cmp
dec
xor
fs
scas
rclb
jnp
mov
xor
ljmp
push
mov
sbb
sbb
stc
shlb
pop
mov
movsb
push
ret
in
dec
fs
dec
sbb
mov
xlat
xchg
arpl
call
iret
dec
adc
and
fucomi
nop
inc
mov
pop
subl
pop
mov
xchg
fnsave
sub
ret
pop
sub
cmp
inc
mov
xchg
cmp
mov
push
sub
lods
out
rcll
jg
sbb
lods
or
je
test
shll
inc
push
rorb
test
xchg
cmp
pop
mov
sbb
inc
cmpsb
in
fldlg2
sub
std
adc
outsb
push
loopne
sbb
in
jbe
mov
cmpsl
into
mov
aas
fsts
fsubs
cmpsb
into
xor
scas
ret
pushl
lret
std
loop
add
and
jg
and
xlat
mov
xor
jne
mov
xchg
shr
daa
push
xor
cwtl
movsl
adc
pop
mov
and
fisttpll
mov
mov
and
mov
dec
add
movsl
enter
dec
sahf
lahf
jge
or
repz
mov
add
cmp
pusha
imul
pop
inc
jp
pop
shll
xor
add
and
movsl
push
adc
lret
or
jo
xor
test
or
jns
ret
jae
sbb
cmp
fiadds
push
in
inc
movsb
cmp
or
xchg
sbb
push
push
xchg
xor
repz
pop
and
out
fsubs
icebp
sub
and
cmpl
push
stos
jp
jmp
jp
lock
push
mov
data16
movd
pop
test
cmp
hlt
and
push
add
inc
leave
mov
add
aad
jno
int
cmp
les
mov
fildl
mov
lock
mov
dec
lcall
lds
or
adc
push
dec
stos
orb
cmp
data16
stos
mov
pop
and
pop
filds
mov
dec
daa
ret
jmp
push
fcoml
push
sub
dec
inc
pop
imul
pxor
jae
call
fsubrs
je
jge
pushf
cltd
out
xchg
ss
mov
or
mov
cmp
sbb
inc
inc
cmp
pop
pop
dec
adc
dec
imul
push
imul
lea
or
add
lock
add
jne
orl
sub
dec
xor
jecxz
aam
cli
adc
xchg
jmp
inc
mov
push
xor
daa
mov
popf
xchg
lret
ret
xor
test
jno
xorb
ret
sub
addr16
out
push
divl
inc
add
pusha
jae
adc
mov
imul
shrb
aas
les
add
pop
out
in
aaa
adc
mov
arpl
lcall
enter
mull
movsb
jae
scas
cs
mov
aas
inc
shlb
push
outsl
loop
loop
or
hlt
inc
push
lods
and
cmp
test
sbb
scas
push
mov
adc
and
fsubl
pop
mov
cld
mov
js
mov
sbb
pop
mov
jmp
add
pushf
sarl
push
imul
gs
sarl
jecxz
add
sub
cli
cmpsl
sub
out
lea
test
daa
inc
add
or
mov
cld
sub
mov
lods
sub
jo
loope
mov
sti
cmp
out
fsubl
data16
ror
fidivs
mov
mov
lods
outsl
push
clc
cmp
movsb
stos
jae
pop
cmp
into
das
in
mov
popl
cld
shrb
xchg
mov
stc
je
fsubs
loop
adcb
adc
dec
rcrl
fwait
and
pusha
clc
mov
cwtl
lret
ret
js
stos
mov
sub
add
call
loopne
push
push
dec
shrl
mov
add
test
test
mov
cmp
xor
push
jae
ret
dec
jae
xchg
mov
push
pop
add
in
aam
cmc
mov
sbb
fs
mov
cmpsl
je
xchg
cltd
aam
pop
dec
jecxz
push
insl
sub
stos
and
add
mull
movsb
jle
icebp
test
pop
aad
cwtl
scas
adc
mov
lcall
sbb
mov
mov
mov
or
push
es
jae
push
unpcklps
out
das
cmp
loope
inc
movb
mov
pushl
sbb
popf
cmp
push
push
inc
cmp
pop
sbb
in
mov
mov
adc
fmuls
mov
sub
in
aas
sub
bound
mov
aaa
je
loopne
pop
add
xchg
inc
mov
icebp
and
test
xchg
and
sub
push
fildll
sarb
les
fsubr
fmuls
scas
xor
sub
jbe
scas
mov
jbe
scas
cmpb
test
dec
stos
sub
daa
mov
ljmp
jp
sub
sub
stc
mov
mov
mov
push
lahf
sbb
shlb
jecxz
sub
cmc
cld
adc
xor
mov
cli
sub
and
sub
outsb
xor
mov
pop
rclb
push
adc
cmp
adc
insl
sub
testl
stos
int3
or
inc
bound
cmpb
inc
xorb
mov
push
inc
hlt
inc
push
mov
and
bound
call
cmp
adc
pop
push
adc
mov
fwait
xchg
out
push
xor
aaa
sub
outsl
mov
fcmovnb
cmp
xchg
pusha
fsubp
mov
stc
jno
orl
adc
cmp
xor
inc
cmp
fdivp
sub
dec
and
pop
loopne
jb
repnz
dec
test
insb
outsb
fdivs
mov
fdivr
fisubs
sub
mov
addb
ljmp
cld
out
jl
pop
hlt
int
jne
add
lcall
lods
outsl
xchg
xchg
jns
imul
mov
outsl
test
push
in
xchg
sub
xchg
lea
mov
push
pop
or
dec
mov
inc
mov
sahf
pop
and
js
xor
push
inc
xchg
inc
or
dec
stos
fidivrs
aas
adc
dec
pop
out
fbld
add
or
push
mov
jmp
shrd
xchg
xchg
or
shll
pop
divb
faddl
les
ror
fimull
adc
inc
lcall
test
in
mov
ret
aas
insl
mov
movsb
mov
dec
leave
movsb
ret
xchg
sbb
mov
jo
movsb
add
or
popf
mov
cld
inc
nop
or
mov
cmp
mov
xchg
popf
mov
xchg
mov
ds
xchg
clc
jmp
iret
insl
or
out
mov
mov
aad
cwtl
and
stc
jge
pop
adc
xlat
movsl
inc
enter
cmp
enter
je
push
or
or
loope
lods
leave
mov
xchg
pop
mov
fdiv
adc
movsl
dec
fcom
aam
bound
xor
test
outsb
sbb
ret
or
push
and
mov
jns
ja
scas
test
in
pushf
push
jno
inc
push
push
xor
das
lcall
jnp
jecxz
in
imul
xor
dec
sahf
cmp
fwait
mov
xchg
jno
or
jo
lock
fwait
ja
fistpll
sti
xor
shrl
fbld
sbb
mov
sbb
aaa
xchg
into
pop
ud2
or
ja
jnp
push
ljmp
inc
mov
int
pop
push
pop
pusha
push
and
xor
inc
mov
cmp
pop
aaa
fdivrl
insl
arpl
lret
fstpl
jecxz
loop
ficoms
pop
push
or
sbb
cli
lods
xchg
sahf
stc
inc
push
push
setle
sbb
jmp
hlt
cmpb
rolb
push
loope
dec
roll
jge
xor
sub
mov
push
and
mov
andl
pushf
sarl
jbe
loope
and
mov
jno
push
out
test
imul
mov
cwtl
adc
jge
adc
mov
fisubs
call
xchg
jae
test
fcompl
test
mov
popf
xor
aam
dec
jae
ss
add
nop
out
mov
imul
xchg
shl
icebp
jl
pop
out
mov
pushf
test
pop
out
cmpsb
xor
sub
fsubrl
imul
jno
fdivp
push
lea
jecxz
sub
in
cmp
mov
fwait
pusha
push
imul
mov
mov
ret
out
jb
cwtl
addr16
or
add
hlt
call
outsl
pop
aas
jg
adcl
or
imul
inc
push
dec
pop
xchg
adc
pop
icebp
cli
mov
xlat
in
mov
push
jge
mov
or
movsl
lock
out
in
aam
adc
popf
cmp
mov
mov
mov
dec
sbb
push
push
pusha
pop
cli
dec
jle
dec
xchg
xor
imul
or
sarb
jecxz
shll
movsb
int
in
xor
js
push
ds
push
push
cld
daa
inc
mov
lgs
stos
inc
sbb
cwtl
aas
sbb
pop
push
xor
notl
cmpsl
inc
adc
aas
pop
or
cwtl
adc
movsb
jnp
and
pop
dec
cmp
xlat
lret
and
xchg
fdivrl
out
lahf
aad
sarl
sbb
mov
mov
movsl
pushf
jne
lcall
mov
jecxz
or
shlb
sub
jb
jp
sub
dec
and
adc
test
push
pop
mov
popa
dec
lcall
mov
jno
dec
cmp
xchg
imul
add
test
jbe
ss
jbe
call
push
std
fisubs
jo
mov
jg
insb
dec
jle
in
les
ret
xchg
leave
and
sbb
in
ret
ds
adc
outsb
and
aam
jo
insb
inc
out
repnz
iret
xor
cltd
jp
adc
mov
pop
movsb
stos
dec
jnp
fs
js
xor
js
lret
sub
xor
jnp
push
aaa
imul
scas
xchg
push
push
pop
xor
lret
aad
gs
and
push
dec
popa
pop
je
jmp
sbb
xor
mov
sub
in
pop
movsl
ror
shlb
icebp
adc
movsl
push
pop
jl
sahf
cwtl
mov
push
fwait
xor
and
sub
add
cmp
fdiv
iret
leave
jne
jg
into
repz
adc
jne
enter
int3
imul
cmp
lods
stc
sahf
and
sub
out
mov
int3
repz
test
ds
mov
popf
push
xchg
sti
outsb
jp
mov
jmp
sub
sub
mov
push
cmp
aaa
sub
push
jne
jp
inc
xchg
adcl
inc
faddl
dec
out
mov
pop
mov
pushw
pop
cmpsb
mov
mov
int3
fcmovbe
out
and
dec
mov
in
sub
loop
iret
pusha
in
jo
and
ret
add
imul
fsubp
outsl
in
aas
lods
or
jo
push
cmc
test
scas
rolb
cmpsb
fnsave
sub
cmpsl
nop
push
mov
mov
arpl
addr16
int3
divl
pop
out
pusha
adc
hlt
mov
add
adc
and
in
out
mov
mov
adc
push
test
or
lahf
and
leave
fsts
inc
push
mov
aas
xchg
pusha
dec
cmc
inc
xor
push
xlat
pop
mov
jp
es
and
mov
outsb
call
inc
jns
je
dec
iret
cmpsl
pop
adc
adc
mov
out
xchg
in
jo
push
dec
loopne
push
sti
and
je
cli
pushf
sbb
sbbb
mov
xchg
cli
lret
pop
mov
jecxz
xor
int
xor
jg
add
adc
xor
sbb
adc
adc
repnz
pop
mov
xchg
sub
lcall
cmpl
adc
mov
cmp
int3
sub
loopne
cmp
jb
das
jbe
jge
inc
add
cmp
dec
cwtl
es
sub
insb
jnp
aaa
iret
clc
sbb
pop
sub
mov
inc
movsl
movsb
mov
add
inc
js
jecxz
out
and
dec
inc
jae
mov
push
stos
repnz
into
rorb
dec
adc
rcll
int3
daa
and
mov
push
pop
and
ret
push
mov
rcll
bt
push
add
mov
dec
xchg
cmp
movsb
es
jle
xchg
xchg
ja
push
cmp
sub
loop
pop
inc
adc
sub
mov
mov
mov
inc
sbb
jb
js
xchg
sub
mov
pop
sbb
mov
mov
xor
xor
sub
dec
mov
mov
loope
pop
sub
int
push
sbb
cwtl
mov
push
sahf
add
mulb
push
sub
jl
mov
sti
or
xchg
mov
jle
push
jmp
mov
add
jnp
in
sarl
jle
push
hlt
repz
sbb
xor
fisttpll
push
call
xor
push
out
gs
jge
cmp
pushf
xor
or
jae
cmpsb
jns
and
sbb
lret
mov
stos
push
or
add
push
xchg
mov
adc
mov
ror
pop
popf
inc
pop
js
orb
inc
test
clc
mov
lods
mov
ror
push
out
movsb
or
adc
adc
in
xor
in
sbb
outsl
shrl
dec
icebp
orl
mov
out
jle
mov
sahf
jb
cli
outsb
mov
and
jns
cli
jbe
loopne
or
xchg
into
imul
mov
scas
mov
adc
cmp
mov
jae
ret
jbe
mov
xlat
adc
fdivr
add
fnsave
fs
mov
icebp
push
sub
xchg
out
inc
addr16
and
cltd
in
mov
add
es
hlt
sub
movsl
xchg
out
sub
aad
sbb
out
push
xchg
sarb
xor
into
pop
dec
fldz
pop
out
das
and
push
mov
out
or
xor
jne
pop
mov
cltd
test
fwait
pop
mov
ds
mov
dec
or
lahf
stos
jmp
push
xchg
fs
mov
mov
aam
mov
popa
pop
sbb
inc
jmp
popa
mov
repnz
sbb
jnp
pop
gs
and
xchg
sahf
push
cwtl
ret
insb
sbb
ret
cmp
cmp
sti
test
mov
orl
ret
fwait
push
inc
inc
xlat
xchg
push
imul
into
push
xchg
adc
scas
lcall
xchg
sahf
xchg
add
dec
push
jae
faddl
adc
adc
movsb
shll
rol
sti
inc
pop
lods
pop
xor
int
aas
push
cmp
loop
stos
push
js
sub
rcll
adcw
pop
mov
dec
loopne
lock
xorb
jns
fbld
mov
pop
dec
arpl
hlt
mov
in
nop
adc
arpl
xchg
imul
roll
mov
in
mov
xor
leave
push
lea
xchg
adc
cmpsl
adc
cmp
add
push
ja
add
shll
orb
pop
jbe
sub
inc
shrl
or
jl
gs
rcl
inc
jo
shlb
adcb
add
dec
jle
sub
arpl
and
inc
pop
rcl
dec
add
push
dec
dec
mov
xchg
or
into
adc
dec
jmp
xor
in
add
xchg
adc
in
dec
shl
loopne
sub
aad
pop
nop
leave
mov
sub
les
insl
jmp
jle
mov
dec
fimuls
xor
and
xor
data16
sub
adc
enter
rorb
fisttpl
fldt
les
fnsave
mov
add
jmp
jle
rolb
pushf
shrl
lret
pop
push
repz
sar
jb
push
stc
in
inc
mov
sub
cmpsl
cmp
push
sti
pop
push
xor
xorl
and
push
cmpsb
ja
lcall
mov
cs
inc
jge
adc
fisubrl
loopne
cli
hlt
or
mov
out
xor
xor
cmp
jmp
mov
cs
mov
lock
aaa
loope
aaa
pusha
adc
je
out
aas
shrl
and
bswap
std
mov
cld
pop
and
loop
fsubl
pop
mov
movsb
cmp
stos
aad
repnz
inc
sbb
into
mov
fucom
jne
movsb
xchg
xchg
aad
sbb
int3
sti
fcmovu
stc
mov
int3
loope
in
adc
adc
pop
popf
mov
push
mov
and
cmp
push
addl
and
sub
mov
popf
call
insb
out
lds
mov
add
inc
sbb
addr16
push
subb
lea
push
jge
cmp
mov
enter
movsl
fidivl
mov
jmp
cmp
scas
inc
cmp
movsb
fisttps
rcrb
daa
jnp
cmp
adc
int
outsl
les
or
in
shr
lods
stos
out
ret
sub
sti
mov
out
mov
and
sub
or
into
jne
and
scas
sbb
jne
pop
xchg
pop
leave
popa
cmpl
incb
imul
xor
cmpsb
enter
jbe
push
pusha
arpl
lods
popf
xlat
mov
push
mov
repnz
adc
push
push
add
stc
mov
cmc
add
sbb
rorb
xor
sub
sub
fisttps
push
sbb
testb
sbb
inc
repz
je
pushl
outsl
test
dec
pop
xlat
test
cmp
nop
jne
push
sub
push
js
lret
adc
jge
outsl
cli
push
lret
xchg
push
cltd
addl
xlat
push
mov
jbe
add
out
sbb
out
stc
adc
adc
into
and
in
stos
pop
out
xor
xor
sbb
pop
and
push
push
adc
push
sub
shll
shrb
mov
fildll
aas
lods
mov
fs
jno
popa
push
rcll
cmpsl
ja
movl
divl
and
mov
or
mov
and
pop
push
js
sarl
sbb
xor
inc
hlt
jns
fbld
int
mov
adc
mov
push
fidivl
sbb
sbb
pop
mov
dec
add
sbb
mov
and
cmp
xchg
xor
and
aam
nop
dec
and
or
outsw
repz
jle
xchg
xor
xchg
aaa
sarb
xor
xchg
lcall
mov
xchg
fnstenv
mov
mov
add
les
cmp
pop
lcall
aaa
aam
les
lret
xchg
fmuls
imul
jl
arpl
popa
psrlq
movsb
loopne
pop
aaa
loope
iret
inc
xor
insb
cmpsb
stc
push
cmp
mov
xor
xor
out
xchg
lcall
pop
mov
dec
loop
mov
movsb
mov
popa
test
adc
rcrl
outsl
xchg
jns
xchg
or
in
add
and
in
push
pop
pusha
aam
outsb
fisttps
xlat
xchg
imul
cmc
xor
lret
xor
cld
fs
and
xor
pusha
clc
stos
jbe
outsl
ss
add
andb
jo
lcall
sbb
test
hlt
shrb
mov
psllw
or
push
decb
cs
jne
mov
add
mov
rorb
push
xor
push
arpl
or
fidivrl
das
scas
lock
jge
push
mov
adc
dec
dec
sub
mov
icebp
mov
ss
cmp
jb
mov
dec
aaa
sub
es
add
cld
mulb
rcll
or
dec
jg
out
jg
in
inc
decl
popf
add
nop
adc
pop
adc
sbb
cli
lahf
mov
dec
mov
mov
sbb
mov
mov
push
dec
mov
dec
ret
add
sbbl
push
sub
test
push
cmpl
cmp
lds
mov
sbb
ss
adc
xlat
nop
outsl
or
xor
cmpsb
jae
jb
pop
aam
popa
jne
cli
ret
mov
push
push
push
lcall
lock
adc
sbb
mov
scas
mov
test
xchg
loopne
dec
and
inc
cmc
xor
pop
aaa
or
fnsave
popf
lret
mov
shlb
sti
inc
aam
int3
test
test
lods
xchg
add
sbbl
add
ja
jbe
rcrl
sbb
adc
aad
push
sahf
movsl
or
fimuls
mov
xchg
and
int3
sub
xchg
loopne
ja
mov
mov
test
test
fsubrl
daa
es
mov
mov
rcll
push
test
cmp
into
push
jp
aas
rclb
sub
inc
push
sbb
insl
xor
cmpl
inc
mov
stos
sbbb
xchg
and
shll
cmp
mov
or
pop
push
pushf
push
push
jle
dec
jl
or
int
out
xchg
fildll
cltd
and
or
fcmovb
addl
mov
pop
movsl
and
gs
jae
inc
fbld
jp
arpl
lods
add
aaa
dec
inc
fwait
daa
aaa
mov
insl
or
push
jge
mov
das
sub
test
lcall
dec
xchg
jnp
and
xor
pop
lds
bound
loop
adc
subl
and
mov
pop
cmp
aas
adc
cmpsb
and
sahf
fistpll
add
inc
cs
cmpsb
dec
out
jno
jae
and
adc
push
insl
adc
testl
cld
xor
inc
xor
lcall
sbb
dec
cmpb
mov
mov
push
push
push
rorl
and
sub
scas
movd
pop
mov
inc
and
clc
xor
xor
dec
mov
pusha
cmpl
inc
stc
or
gs
pusha
icebp
mov
xor
add
int3
push
xchg
cli
and
sarl
and
pop
dec
fdivl
sub
mov
in
repz
outsb
mov
add
mov
outsb
addr16
jae
dec
ljmp
sbb
leave
hlt
hlt
out
inc
jne
sbb
rcrb
dec
xchg
dec
adc
push
push
imul
pop
or
or
loop
cmp
inc
jle
int3
xor
aaa
dec
push
sub
scas
xor
sahf
pop
scas
out
sub
shrl
mov
into
imul
push
xchg
push
sub
fisubrl
gs
dec
popa
jg
test
sbb
dec
mov
and
xor
mov
push
jg
sub
dec
mov
push
and
decl
sti
cwtl
aaa
dec
mov
lods
xor
push
lret
arpl
ja
jecxz
sbbb
stos
mov
mov
cltd
enter
idivl
mov
push
daa
jmp
icebp
imul
and
lcall
adc
xlat
stos
cmpsl
ljmp
xchg
add
pop
adc
xchg
dec
mov
orb
mov
dec
push
mov
sbb
mov
jmp
pop
mov
mov
push
popf
push
and
sbbl
mov
cld
inc
iret
fadds
lea
aaa
push
stos
mov
out
movb
add
leave
cmp
sbb
jl
sbb
incl
popa
adc
xchg
andb
sbb
mov
xchg
add
les
es
and
insb
xchg
xchg
mov
dec
fstpl
fdivr
repz
inc
mov
int3
das
mov
shlb
cwtl
into
in
jnp
adc
mov
fistps
popa
insl
inc
int3
out
mov
or
xchg
jecxz
aad
jnp
sub
jns
ja
push
ljmp
mov
mov
jns
inc
inc
pop
xchg
pop
dec
and
rol
jl
idivb
inc
cmp
xchg
lea
dec
cmp
aas
and
add
xchg
daa
repnz
xchg
xchg
ss
je
hlt
les
or
cmpsb
mov
xlat
cs
sub
inc
loopne
fsqrt
adc
fwait
pop
out
xchg
xchg
fstl
lret
mov
inc
andb
out
xor
repz
andb
lcall
ljmp
movsl
stc
mov
ficoml
sub
jmp
jmp
es
push
out
pop
scas
in
in
fwait
adc
mov
fwait
pushf
xor
dec
adc
mov
mov
dec
push
es
xchg
test
fisubl
mov
ret
aad
jbe
inc
and
int
jne
mov
mov
add
mov
in
in
add
nop
xorl
movsl
push
and
ss
ret
jnp
into
sub
cmp
test
mov
xchg
lahf
lods
movsb
and
or
adc
mov
mov
mov
enter
test
rclb
pop
xchg
addl
daa
and
sub
ja
fwait
add
mov
cltd
mov
in
mov
outsl
push
cmpsb
aam
fstp
mov
cmp
sbb
dec
mov
mov
push
loope
inc
sub
andl
or
adc
mov
cmp
test
scas
shlb
mov
adc
jnp
aas
ds
cmp
sub
addr16
inc
popl
andl
bound
aas
fs
xchg
neg
and
inc
imul
mov
int
hlt
lods
aad
inc
pop
or
jl
push
gs
clc
or
ss
rorl
pushl
scas
pop
decl
jb
and
movsb
push
sub
xchg
xchg
adc
inc
fistpl
jae
scas
iret
orb
xor
dec
add
mov
xchg
daa
cli
imul
and
std
and
outsb
push
lret
clc
repz
mov
mov
int
pop
push
add
add
lds
xor
ret
sbb
cmpsl
xor
xchg
repz
sbb
sbb
dec
sub
lea
out
jmp
test
icebp
outsb
mov
nop
jae
adc
and
push
arpl
movsb
imul
mulb
xchg
aaa
cmp
cld
dec
dec
arpl
xchg
jge
addb
xor
pop
into
popf
mov
or
dec
je
shll
cmp
add
mov
adc
in
fldt
loopne
loope
ffreep
popf
jp
mov
daa
scas
nop
xor
mov
scas
jp
xchg
aaa
cltd
mov
mov
sti
int3
imul
mov
cmpsl
nop
popf
xlat
outsb
xor
rcll
cli
sti
push
jns
or
je
sub
sbb
jl
xchg
add
xchg
and
int
dec
jmp
loope
lcall
mov
add
or
push
loope
xchg
in
dec
dec
movsb
insb
cmp
scas
lret
cmp
out
stos
ret
xor
cmp
mov
lahf
decl
sub
mov
in
stc
into
neg
inc
and
hlt
sub
sub
ja
fadds
test
mov
cmpsl
hlt
cmc
sbb
mov
pop
xchg
push
pop
push
repz
test
shl
lock
test
or
mov
sub
xor
adc
adcb
mov
mov
jb
push
test
or
jp
jno
in
es
jnp
jp
mov
mov
stc
notb
xchg
sub
ja
shufps
js
pop
rorb
leave
aam
nop
dec
sub
pop
lods
movsl
lret
pop
shll
pop
mov
or
ficoml
lods
dec
inc
fnstcw
jle
imul
ftst
lret
int3
or
sbb
and
xchg
inc
or
inc
add
pop
pop
jb
jne
cmp
fwait
lock
pop
es
mov
jne
push
data16
sbb
daa
jb
pop
push
out
mov
outsl
enter
aaa
je
bound
bound
sar
stos
push
pop
rcll
push
dec
sub
xchg
mov
mov
les
jne
xlat
or
xchg
shll
lods
ret
nop
push
mov
gs
loopne
mov
xchg
scas
daa
xor
ja
ret
push
fstl
test
imul
jle
adc
loopne
xchg
mov
push
xchg
push
push
mov
hlt
cmp
mov
icebp
gs
sub
pushf
aam
pop
imul
sub
push
in
dec
pop
mov
mov
dec
test
and
push
or
movsb
xor
lahf
pop
inc
cmpsl
or
push
mov
and
pop
shlb
push
cmc
into
insb
pop
sub
pop
pusha
das
xchg
fsubs
or
inc
js
pop
jne
dec
popa
or
clc
inc
sub
sub
jae
fdivl
lret
insb
movsl
xchg
sub
shl
jns
cmp
pushf
and
loope
push
cmc
pop
out
pushf
push
sbbb
inc
movl
adc
or
push
push
loop
xchg
das
pop
dec
xchg
cld
cmp
xlat
mov
aad
pop
imul
sbb
in
jge
cmp
loope
fsubr
clc
dec
push
stos
cltd
cltd
add
in
push
pop
sbb
sbb
sbb
rolb
inc
cmp
add
test
xchg
sbbb
stos
lret
outsl
mov
jl
dec
lahf
jle
pop
jle
sub
in
cs
cmp
and
ret
and
cmp
sub
cwtl
xchg
sti
mull
xchg
xlat
ja
mull
mov
jmp
mov
xchg
jmp
out
dec
inc
sub
jne
ret
lret
mov
jl
jae
jbe
das
jmp
rcrl
sub
ja
add
mov
mov
cltd
fistps
dec
pusha
push
iret
loopne
xchg
and
push
mov
sbb
sub
sub
loop
arpl
and
jne
mov
jge
xchg
stos
dec
inc
lcall
test
inc
xchg
pop
or
loope
xchg
ljmp
cmp
out
inc
xlat
in
mov
mov
push
xchg
lret
adc
mov
pushf
enter
ret
es
stc
rorb
jp
ror
arpl
mov
cmp
adc
loope
mov
xchg
adc
fistpll
pushf
xlat
cmp
pop
or
lods
mov
cmp
fwait
loope
ljmp
ljmp
xchg
aas
mov
mov
jns
aas
jle
sti
adc
outsl
loop
adc
mov
neg
lds
mov
popf
scas
jb
push
loopne
loopne
stc
mov
mov
ret
cld
xchg
shll
and
inc
insb
dec
pop
das
jecxz
int3
and
aam
mov
push
adc
sar
out
js
mov
int
mov
sbb
call
pop
fs
mov
sbb
xchg
mov
add
std
arpl
lret
pop
sub
and
lret
in
cld
sub
stos
loop
inc
movsl
jbe
movsl
scas
loopne
leave
test
push
adc
mov
clc
popa
and
xchg
leave
mov
xchg
dec
push
pop
sbb
imul
int
pop
or
out
lret
mov
call
mov
jo
scas
roll
popf
int
push
fisttpll
in
pop
mov
adc
jg
mov
sbb
push
jno
xor
sub
js
mov
mov
cwtl
imul
xor
fldl
test
or
fistl
push
cmp
cmc
mov
into
lds
adc
fcmovnbe
rol
fidivrs
and
imul
fsub
mov
ficomps
popa
mov
pop
sbb
dec
xchg
mov
mov
cmc
sbb
fsubr
aaa
push
cmp
adc
pop
int3
into
std
fcomps
pop
fmulp
adc
adc
cmp
int3
mov
jg
pushf
insb
andl
sub
sbb
popf
in
es
xchg
inc
jecxz
jecxz
cmpsb
mov
add
es
and
loopne
out
push
pop
call
pop
jne
add
mov
mov
jne
cld
jno
outsb
imul
lock
in
movsl
fsubrp
mov
mov
roll
out
pop
push
adc
xor
repnz
loopne,pt
sub
daa
sahf
outsl
xor
popf
pop
dec
arpl
test
or
pop
and
stos
push
sub
add
lock
lcall
push
je
mulb
hlt
sub
rcrb
xor
cmp
fstps
cmp
orps
iret
call
lods
sub
sti
mov
mov
cmp
adc
push
hlt
mov
movsb
cmp
cld
adc
jns
dec
mov
xchg
or
aas
int
out
add
sbb
lcall
das
gs
fs
and
les
sbb
sub
adc
aam
cmp
imul
xlat
cmpsb
mov
push
aam
fnsave
dec
sbb
mov
ds
and
sbb
jecxz
cmp
test
push
jmp
fld
test
xchg
aam
mov
cmpsl
mov
adc
loopne
inc
fwait
add
test
inc
pop
sub
jecxz
push
punpcklwd
sub
mov
inc
pop
in
in
pop
pop
mov
scas
test
adc
shl
or
sub
or
loopne
lods
jg
sub
jmp
movsb
leave
dec
lret
gs
imulb
ja
jecxz
into
and
inc
push
int3
or
stos
popa
xor
outsb
adcl
int
test
fcomi
xchg
adc
push
decl
dec
dec
mov
push
in
imul
xchg
fsub
xchg
inc
sbb
jecxz
jge
jb
inc
bound
mov
loopne
stos
in
mov
and
and
nop
lods
xchg
popf
or
int
xchg
mov
rolb
outsl
and
jo
fnsave
add
jecxz
and
xlat
xchg
xor
insb
sbb
pop
es
out
movsl
cmc
test
xor
dec
inc
mov
lods
xor
fisttpl
fs
and
shlb
insb
and
xchg
aad
scas
sbb
and
out
mov
das
push
push
into
mov
data16
mov
mov
mov
movsb
jns
cmp
push
mov
mov
sbb
jae
test
jno
cmp
adc
push
push
jl
pop
int3
mov
jbe
test
aaa
mov
xchg
xchg
cld
fnstsw
fucom
scas
jp
lods
mov
fildl
in
mov
mov
mov
push
rorl
xor
ss
cmpsl
inc
imul
xchg
mov
mov
mov
pop
out
lret
pushf
inc
arpl
push
test
movb
push
iret
sbb
xor
xchg
sub
jge
sbb
into
in
adc
clc
es
dec
and
pushf
mov
mov
and
dec
mov
push
dec
add
icebp
aad
sarb
sahf
or
push
or
mov
sub
lcall
jecxz
mov
cmp
rcrb
dec
dec
and
xlat
les
cltd
push
xor
aas
dec
out
es
mov
push
jg
ja
sub
jno
mov
ds
imul
sbb
cmpsb
adc
or
repz
outsl
inc
pop
cld
enter
js
out
out
ljmp
sub
fidivrs
pop
nop
xor
jecxz
andl
sub
adc
fwait
push
add
fcompl
xchg
in
jecxz
stc
repz
adc
ficoml
pop
pop
sbb
adc
mov
rcrb
push
sub
jae
xchg
inc
rorl
aaa
xor
in
sahf
in
je
inc
inc
and
cmp
clc
xor
mov
lcall
jbe
fdivs
scas
adc
sahf
and
ljmp
daa
pop
inc
fsubl
cmp
cs
cmp
hlt
jnp
es
lods
and
out
aas
cmpsb
sarl
add
inc
maskmovq
divl
jp
inc
xor
push
mov
add
inc
in
or
lret
mov
xchg
mov
insl
icebp
inc
mov
jp
jo
push
outsb
aad
in
movsl
cli
jg
or
loop
cmp
and
jecxz
pop
mov
or
stos
lret
xchg
bound
sbb
lea
arpl
jmp
inc
out
xchg
shrb
fwait
and
or
cmp
add
xchg
cmc
jno
push
add
mov
dec
mov
jp
pop
mov
push
fbstp
add
test
out
jmp
jne
test
push
add
pop
push
lods
adc
jnp
or
cmpsl
sbb
mov
push
movsb
pop
out
out
cmp
scas
in
aam
mov
push
add
flds
sbb
in
iret
sub
jp
sub
and
inc
pop
jge
aas
stos
dec
mov
inc
ljmp
push
add
mov
xchg
dec
inc
mov
jae
xorl
leave
xlat
cli
repz
xchg
mov
or
insl
xchg
xor
xor
andl
insl
mov
insb
jne
mov
popf
bound
les
mov
mov
insb
addb
adc
arpl
outsb
mov
inc
mov
fcomps
xor
cltd
dec
aad
fnstcw
add
pop
add
mov
push
out
inc
loope
inc
jecxz
mov
fsubrs
out
xlat
xchg
nop
imul
sti
xor
push
mov
mov
pop
jge
mov
sbb
jne
ret
jo
out
push
test
clc
push
xchg
inc
loope
mov
mov
xchg
out
or
cmc
mov
fbstp
inc
sarb
pop
fsts
popf
mov
pop
cs
sub
in
xchg
push
loope
or
add
cmp
mov
mov
ret
push
out
fstpl
add
mov
jg
insb
fidivl
sbb
inc
jbe
xchg
adc
sub
lock
xchg
push
pop
fimuls
dec
jle
test
jno
js
mov
pusha
out
bnd
aaa
inc
mov
sub
in
das
pushf
loopne
xchg
int
and
mov
xor
mov
mov
fsubl
mov
popf
lods
daa
sub
popf
xor
inc
pop
dec
jecxz
inc
insb
sarb
sbb
mov
jmp
repz
push
cmp
inc
pop
ljmp
shl
xor
ja
call
flds
xor
stos
add
das
pop
inc
clc
ret
ffreep
movsl
push
jbe
insl
adc
out
inc
mov
cmp
cli
bound
mov
test
sub
xor
arpl
fdivrl
push
scas
push
leave
xchg
neg
inc
mov
imul
rcrl
icebp
jne
ret
test
clc
jnp
fdivrs
mov
insb
jmp
lcall
cmp
mov
aas
sbbb
outsb
cmp
sbb
mov
aaa
mov
add
mov
adc
pop
or
sub
jmp
cmp
ret
xchg
pop
cmpsl
mov
aad
pop
cmp
mov
jg
ds
jbe
adc
fisubs
popa
test
inc
xor
das
mov
pop
push
sub
sahf
mov
bound
popf
bound
insb
xchg
mov
sti
out
jns
inc
lahf
xchg
add
sahf
and
mov
xchg
sbb
push
push
or
or
rolb
jle
fsubl
fbstp
mov
nop
iret
jnp
nop
push
cmp
daa
movsl
loopne
or
inc
stos
stos
cwtl
into
xor
and
or
mov
jae
mov
push
fidivs
and
gs
into
jp
dec
jge
fmuls
sbb
mov
cmc
mov
push
cmp
and
jg
inc
jo
lock
xchg
xor
mov
fstps
mov
lds
lock
cmp
imul
adc
mov
ret
dec
jl
pop
and
fsubl
popf
lds
jge
jg
ljmp
negl
sub
add
xlat
dec
pop
inc
xor
dec
lods
push
imul
push
cmp
pop
jl
push
ja
inc
fstpt
push
inc
arpl
add
les
mov
sarb
mov
push
lret
push
jns
sbb
gs
inc
fwait
adc
jg
ret
adc
pop
xlat
rorb
les
add
icebp
fidivrl
mov
lea
fisubl
jle
jns
push
mov
ds
push
sub
sbb
adc
rcrl
jbe
mov
xchg
mov
inc
jns
and
ja
jbe
add
xchg
call
adc
lret
mov
xchg
push
mov
lcall
sub
jnp
into
sbb
jge
xor
push
into
sbb
cltd
push
in
mov
mov
fsubrs
cmp
dec
inc
scas
jnp
cli
stos
in
fs
pop
xchg
aad
jnp
imul
xchg
adcl
fmulp
dec
aas
push
stc
push
and
pusha
push
bound
push
sub
popa
xor
nop
pop
outsl
decb
jl
test
mov
dec
pop
pop
fldl
inc
outsl
jns
mov
arpl
out
pop
sub
push
idiv
mov
inc
dec
pop
mov
dec
push
addr16
mov
ds
cmp
jg
fiadds
xchg
xlat
mov
mov
repz
ja
pop
imul
cwtl
pop
cmc
into
mov
sub
sbb
scas
out
dec
dec
lcall
push
or
push
and
and
sbb
scas
aaa
mov
cli
pop
sub
or
andb
fnsave
mov
sarb
mov
out
xlat
pop
cmc
push
call
loope
push
hlt
mov
cmpsb
insl
pop
sbb
dec
das
adc
test
push
mov
add
loope
lds
ret
sub
mov
dec
push
jg
test
in
push
sub
inc
add
fnstenv
fs
gs
mov
inc
pop
or
fcompl
inc
popf
rol
lcall
inc
mov
hlt
pop
sti
rolb
dec
ljmp
mov
std
imul
mov
insb
pop
fsubrs
pop
scas
pop
scas
push
push
adc
insl
insl
bound
or
pop
lea
or
mov
stos
inc
dec
stc
shl
sub
pop
cmp
lcall
jo
mov
cli
push
sbb
cmp
aad
ss
or
mov
adc
cmp
push
mov
adcb
test
add
push
dec
out
cmc
nop
fistl
mov
mov
stos
cs
ljmp
popf
aad
push
movsb
ret
aad
mov
mov
sub
shl
rorl
pop
cld
fistpl
sbb
cmp
pop
sub
and
pop
out
push
or
ja
addb
inc
and
jbe
movsb
sbb
push
addl
add
inc
jbe
addb
fldl
cli
addb
aaa
add
jmp
adc
cld
es
push
and
arpl
int3
cmp
mov
push
inc
aas
repnz
mov
jge
ss
gs
push
shll
cmc
enter
pop
sbb
dec
cmp
fs
imul
pop
sbb
loop
adc
es
clc
pop
and
or
lcall
hlt
sub
mov
sbb
xchg
jmp
sub
aam
mov
in
aaa
push
and
jne
jle
inc
in
scas
movsl
jmp
and
dec
loop
divl
lock
sbb
rolb
push
lret
jl
pop
cltd
shr
mov
shl
push
jnp
imul
fidivrs
pop
sbb
xor
andl
jnp
aas
jb
fwait
lods
pop
push
ret
sbb
and
jmp
fstpt
clc
pop
rcrb
popf
inc
push
aad
sbb
cltd
pop
cwtl
aaa
add
addr16
sub
add
jecxz,pn
in
das
mov
jp
dec
or
push
fwait
mov
inc
shll
aaa
popa
fimuls
rcll
jae
in
sub
es
xchg
mov
movsl
and
and
mov
xchg
push
adc
aaa
sub
into
dec
lret
inc
fisttps
cmp
and
lods
aam
or
loopne
or
hlt
xchg
repz
mov
into
in
pop
or
cmp
ds
daa
add
imul
dec
cld
stc
pop
mov
sub
in
jmp
sub
add
dec
lret
and
int3
mov
movsb
scas
fidivl
and
pop
ja
repnz
jne
ficoms
adc
insb
cmp
xor
dec
clc
ret
jmp
jecxz
pop
cmc
pop
push
addr16
cmp
cli
hlt
enter
or
das
and
sbb
ret
mov
xchg
jae
adc
test
jmp
in
ja
gs
cmp
mov
and
adc
jmp
sbb
fadds
cmc
jae
and
dec
jnp
out
ss
scas
sbb
mov
aam
movsl
fistpl
push
rep
std
movsl
mov
dec
mov
sahf
xor
cld
pop
int3
fsts
cmp
push
xor
push
je
cwtl
fdivr
fucomp
mov
fsubr
jmp
jno
fldcw
in
test
mov
inc
push
daa
push
jge
add
stos
popw
xchg
dec
sbb
sbb
mov
pop
out
iret
cli
andl
subb
jle
aas
test
daa
dec
push
imul
sbb
ljmp
cmc
cmp
mov
out
mov
lea
pop
xlat
idivb
mov
push
adc
mov
xchg
insb
sahf
cmc
jne
jecxz
jp
mov
mov
push
arpl
stc
test
shlb
icebp
lcall
push
test
movsb
inc
push
adc
dec
repz
sbb
mov
pop
cmp
cli
fwait
ret
and
mov
add
ljmp
or
lds
outsb
dec
outsb
and
jecxz
push
cmp
cmp
jae
js
dec
rcll
aaa
movsl
sahf
mov
mov
ljmp
xor
lock
adc
stos
arpl
push
movsl
in
inc
call
mov
push
js
xchg
pop
imull
inc
cmp
push
hlt
add
mov
and
mov
loop
and
mov
insl
xor
lcall
lcall
ds
lods
out
out
jbe
xchg
fmulp
mov
cmpsb
mov
and
mov
repz
adc
or
jmp
test
mov
push
setnp
sub
call
xchg
jns
add
rolb
insl
jbe
push
imul
call
gs
mov
mov
lds
shrb
xor
adc
mov
sahf
mov
push
dec
xchg
mov
inc
xor
jnp
dec
inc
push
inc
pop
add
xchg
push
xchg
in
out
popa
jle
out
aaa
push
or
sub
add
pop
mov
cs
outsl
sub
adc
cmp
xchg
jo
mov
std
or
iret
in
lods
mov
or
jmp
adc
mov
fists
add
mov
aaa
hlt
cmpsl
inc
popf
sub
mov
and
cld
and
lret
mulb
std
out
push
pop
jae
fldl
lock
test
loope
jg
sub
out
pushf
mov
sub
and
jle
out
lret
pop
out
xor
mov
pop
dec
out
cmp
mov
outsl
hlt
xor
push
add
sbb
mov
sti
dec
test
mov
sub
sbb
or
mov
sub
jge
gs
push
add
push
adc
mov
data16
mov
xor
pop
scas
sbb
leave
leave
loopne
repnz
decb
xrelease
sbb
sbb
push
push
or
stc
loop
adc
clc
sub
in
pop
daa
shr
dec
push
arpl
add
cmp
enter
sub
add
lds
int3
sti
je
pop
aad
es
arpl
mov
stc
mov
ficomps
andl
stos
repnz
inc
addr16
stos
inc
jle
sti
mov
pop
sbb
add
mov
int3
cwtl
sar
adc
pop
sub
insl
into
push
adc
js
cld
and
adc
fidivs
jnp
jmp
sbb
lods
js
inc
or
pop
sub
inc
mov
pop
bound
imul
inc
push
and
hlt
mov
filds
mov
nop
cmp
xor
xchg
sbb
int3
fdivr
sbb
push
sar
xor
insb
iret
jne
push
test
ficompl
call
add
xlat
sbb
stc
das
sub
add
mov
out
xchg
dec
in
add
rcl
je
pop
jmp
pop
cld
mov
push
or
js
mov
adc
int3
pop
int
je
lods
adc
stos
cmpsl
cltd
push
mov
mov
fstpt
inc
mov
jbe
aam
movsb
imul
pushf
xor
mov
cld
pop
cltd
adc
add
cmp
sti
ficoml
xor
mov
testl
rorb
xor
inc
popa
jecxz
test
rcll
call
push
xlat
mov
shr
jmp
cmp
sbbb
je
in
cmp
out
xor
pop
cmpsb
and
pop
cmp
aas
xchg
mov
push
jge
adc
test
jne
adc
cmpsb
ret
push
data16
pop
popa
xor
ds
mov
mov
hlt
jae
xchg
rcl
movb
xchg
and
adc
nop
ret
sub
dec
and
cmc
push
repz
xor
in
aam
sbb
pusha
shr
rcl
test
sbbl
inc
mov
fdivr
inc
sub
jge
push
insb
cmp
and
das
or
loope
jne
sub
and
jmp
pop
mov
loope
into
in
inc
pop
xor
mov
ss
pop
das
lds
out
pusha
mov
xlat
xchg
cmp
push
mov
xchg
mov
jne
sbb
xor
or
sub
push
jno
adc
pushl
jae
roll
popa
popa
notl
cmp
jecxz
stos
add
sti
xor
out
ljmp
insb
push
repnz
lret
mov
jl
push
pop
push
clc
pushf
mov
sbb
cmp
out
outsb
adc
int
mov
adc
shl
imul
aad
pop
mov
and
and
daa
filds
push
aam
ljmp
in
addr16
lds
and
subb
pusha
pop
stc
push
push
aaa
rcrb
push
and
ljmp
mov
fwait
dec
dec
fdiv
xor
xchg
inc
imul
mov
jp
arpl
mov
dec
hlt
mov
pusha
mov
adc
sarl
add
inc
xchg
xchg
mov
ljmp
scas
pop
push
ja
or
fimuls
mov
insb
dec
pop
add
imul
shll
sarb
repz
outsl
lods
add
es
cmp
dec
fisubrl
or
fbstp
movsl
or
mov
adc
mov
add
adcl
inc
cmpb
xor
cmp
in
add
frstor
push
cltd
pushf
inc
ljmp
mov
mov
add
pusha
sub
int
les
imul
movsb
imul
pop
mov
popf
xchg
cmpsb
and
popf
daa
fldenv
mov
pop
sbb
dec
mov
js
movsl
dec
sub
jecxz
xchg
stos
and
fld
sbbb
pushf
movsb
pop
mov
sahf
mov
xor
je
mov
addr16
inc
cmp
or
and
mov
jg
lods
test
pop
mov
xor
cmp
icebp
mov
sub
cmp
mov
stos
in
sub
push
hlt
aas
mov
loopne
adc
movsb
fidivs
out
shll
inc
sub
fwait
inc
pop
ret
inc
popa
lea
mov
or
inc
jb
shlb
dec
imul
xlat
and
ret
mov
pop
cwtl
push
sub
pop
in
loopne
imul
repnz
push
sub
and
xchg
adc
outsb
loop
pop
es
pop
xchg
bound
mov
lock
cs
add
xor
pop
loope
mov
xor
xor
sbb
pop
mov
arpl
push
push
jo
dec
push
inc
or
aam
sub
stos
es
int3
ds
push
xor
cs
mov
cli
push
movl
dec
imull
fwait
clc
add
sbb
ret
bound
push
xchg
mov
adc
rorb
dec
stc
cmp
jp
pop
fnstenv
scas
cmp
std
push
aas
ljmp
std
push
leave
push
andb
xor
pop
adc
out
fs
not
iret
xchg
cltd
clc
aam
fidivl
push
mov
out
mul
aad
pusha
out
dec
imul
inc
test
in
add
or
out
jbe
push
adc
insl
push
add
xchg
or
inc
in
jg
mov
ss
popa
iret
lods
stc
mov
outsl
gs
adc
mov
stc
and
and
dec
enter
scas
mov
lcall
jl
aad
xchg
push
xor
fwait
adc
int
cs
adc
imul
mov
movsl
and
incb
xor
mov
icebp
xchg
mov
sbb
iret
pop
cli
add
mov
bound
mov
idivl
push
mov
jge
scas
arpl
mov
fidivrl
cli
pop
nop
lahf
cmp
xchg
mov
mov
xchg
dec
sbb
cmp
iret
faddl
xchg
add
mov
rcll
cmp
xchg
jecxz
enter
push
xchg
adc
fsts
out
repz
cld
adc
xchg
enter
mov
cmp
popf
ss
mov
cmp
icebp
mov
imul
int3
xor
in
jecxz
loop
jecxz
cmc
pop
rol
and
sbb
mov
rcl
mov
cmp
div
fs
lret
and
sub
test
cmp
out
lret
or
ficomps
mov
cmpsl
or
icebp
aas
adc
iret
jbe
int
js
sbbl
mov
push
andl
mov
pop
add
mov
mov
in
sub
scas
stc
mov
lcall
aaa
scas
pop
hlt
outsl
push
push
enter
xchg
iretw
push
add
insl
cmp
adcl
shrl
inc
add
jne
gs
loope
ss
inc
pop
out
test
mov
call
mov
mov
dec
push
mov
sti
adc
xchg
insl
out
loop
xor
mov
jp
test
hlt
inc
mulb
mov
pop
xchg
lcall
dec
inc
in
cli
out
xchg
sbb
sub
stos
lds
mov
in
mov
push
jnp
les
aad
out
mov
bound
mov
addr16
jmp
and
stos
xor
xlat
push
inc
pop
or
sub
mov
cmp
icebp
repz
adc
add
in
dec
fucompp
xchg
mov
das
push
cmp
repz
repz
cmp
pop
es
insl
add
xchg
mov
push
push
or
cmp
iret
and
stc
mov
sahf
aam
add
jae
sub
fcompl
mov
jg
jnp
ret
inc
push
sbb
mov
jno
scas
adc
jp
mov
push
rol
mov
in
pop
push
mov
xchg
mov
scas
sub
cmpsb
pop
sub
sub
sti
lahf
lea
jecxz
push
lds
push
mov
mov
mov
push
hlt
sahf
push
add
xor
jp
ds
xchg
sub
iret
push
int3
dec
sbb
int3
xchg
es
test
pop
jns
pop
dec
and
repz
xchg
mov
adc
adc
mov
aad
cmpsb
ljmp
mov
rorl
mov
xchg
fs
andb
jno
sub
jne
scas
xchg
fmuls
pusha
and
add
sti
cwtl
add
mov
mov
cmp
jmp
dec
mov
or
dec
inc
rcl
clc
cmp
mov
das
mov
shlb
jmp
xor
sub
mov
pop
aaa
or
pop
adc
nop
mulb
jo
sbb
int3
xorb
inc
iret
mov
jbe
jmp
testb
push
jmp
mov
decl
or
imul
ret
pushf
pop
adc
jmp
pop
mov
pop
lock
adc
jno
mov
jae
fstl
xchg
popf
cli
test
mov
pop
xlat
jbe
sub
pop
shrb
je
mov
lea
xchg
div
jmp
add
push
and
roll
jmp
push
shl
cmp
jl
cmpsb
cwtl
into
in
inc
add
gs
mov
outsl
fstpt
sub
or
movsb
into
iret
test
insl
mov
test
test
shll
push
test
sbb
mov
cmp
adc
inc
adc
xchg
xor
sahf
jns
rol
in
sarl
fcompl
cmp
add
rorl
cli
xlat
push
fildl
add
mov
or
jp
in
mov
mov
es
mov
fsub
push
add
mov
sbbb
and
dec
jno
lea
sbb
mov
mov
mov
das
cs
pop
cmp
inc
xor
fcmovnu
mov
mov
sbbb
jnp
inc
add
adc
notb
mov
les
out
dec
lock
cwtl
iret
lcall
xor
aad
sub
xchg
push
xor
lret
cld
push
or
data16
imul
pop
aas
xlat
xchg
adc
mov
rorb
inc
mov
shll
inc
jo
push
pop
xchg
cmp
nop
dec
stos
pop
arpl
add
nop
aaa
mov
mov
adc
cmpsb
leave
daa
or
repnz
ljmp
jp
lods
scas
imull
cmpsb
data16
dec
hlt
dec
ja
test
ds
lcall
push
movsl
cmpsb
out
cmp
pusha
addr16
gs
ret
sub
pop
repz
xor
in
mov
push
ljmp
xor
add
mov
xor
pop
or
aad
and
and
ficoml
jb
dec
mov
sub
ret
dec
and
das
imul
in
rcrl
lods
leave
adc
or
push
jbe
or
imulb
aas
dec
pop
mov
fwait
inc
in
add
std
adc
fmuls
mov
sub
or
sbb
mov
insl
cmpsl
push
stc
xchg
js
in
jg
bound
hlt
and
jmp
lods
xor
adc
repz
stc
push
js
pop
stc
aam
push
jb
loop
movsb
cmp
sub
aaa
dec
cmp
jae
inc
ret
dec
sbb
pop
sbb
shr
cld
fwait
pushf
sub
xchg
int3
js
inc
xor
mov
andb
pop
jne,pt
push
jbe
mov
js
xor
push
mov
nop
ds
dec
insl
fwait
mov
pop
inc
push
xchg
aas
mov
cmc
aas
lods
loope
mov
pop
add
scas
xchg
inc
inc
repz
cmp
pop
shrb
test
loop
test
lcall
mov
movsb
imul
inc
push
mov
add
inc
lcall
pop
cmpl
sarb
push
sbb
sbb
mov
mov
mov
push
push
movsl
jge
ret
les
ss
add
push
jecxz
notl
fsubrp
inc
cmpl
shl
jecxz
add
mov
mov
cmc
insl
mov
jbe
fnstcw
mov
mov
xchg
mov
subl
lahf
push
std
jl
pop
cmp
xlat
rcll
fs
call
insb
pop
and
push
add
mov
aas
cld
mov
jecxz
push
mov
inc
and
jg
sbb
andl
push
jb
jle
pop
jbe
out
xorl
mov
ljmp
mov
adc
sub
shlb
lods
cmp
shlb
mov
popa
js
sub
ficoms
insb
loop
pop
xchg
jmp
dec
shlb
mov
push
mov
ja
enter
imul
imull
jge
psllw
mov
jns
pop
ljmp
mov
adcb
mov
inc
pop
pop
popf
aas
out
xor
mov
in
jg
or
add
lret
jecxz
imul
shr
inc
sub
inc
jne
xchg
movsl
stc
inc
scas
ljmp
incb
hlt
outsb
or
mov
std
cmp
sbb
inc
xor
xchg
xchg
cmp
aas
jecxz
mov
cmp
stos
sbb
mov
aaa
roll
cmpsb
xor
mov
das
orl
mov
mov
fs
mov
repnz
pop
push
pop
and
movsl
pop
inc
xor
sbb
mov
jp
mov
test
cmp
sbb
or
insb
jmp
lods
daa
loopne
mov
in
shlb
testb
aad
jno
cmpsl
jl
addr16
frstor
adc
cli
xchg
xchg
out
cmp
jp
or
xchg
or
xchg
stc
inc
push
and
movb
mov
mov
push
mov
aam
cmpsl
fndisi(8087
hlt
or
mov
push
das
xchg
or
add
inc
xor
push
xchg
lock
adc
cmc
lret
shlb
mov
and
repnz
subl
pop
inc
jl
pop
testb
sahf
jg
jae
fs
jb
push
fabs
cs
movsb
jb
imul
orb
in
popa
sarb
adc
sti
xlat
je
pop
dec
das
push
fiadds
pop
in
dec
dec
test
lods
int3
jno
mov
mov
cmp
into
jo
pop
adc
cld
jmp
cmp
xchg
inc
sbb
dec
sti
dec
repnz
pushf
aam
push
xchg
fisubrl
xchg
pop
xlat
sbb
or
mov
xor
jmp
mov
dec
loope
cltd
adc
mov
js
adc
imul
popa
repnz
cmp
ljmp
fmuls
dec
inc
mov
ds
jo
std
xchg
or
or
add
ds
sbb
adc
add
dec
jl
dec
mov
insb
stos
or
pop
lods
sbb
fisttpl
or
push
pop
jnp
and
out
xchg
in
hlt
popf
ja
dec
cld
push
test
mov
aas
jbe
jg
add
inc
pop
loope
sub
cmp
shlb
adc
xor
outsb
repz
adc
mov
nop
fisubs
adc
sub
xchg
adc
cmp
int
or
fistl
add
xor
mov
and
ret
pushf
je
dec
das
aaa
sarb
jmp
data16
pop
pop
lretw
mov
pushf
add
cld
mov
loop
repz
push
aas
lds
mov
push
bound
clc
fwait
test
pop
mov
mov
imull
dec
cltd
data16
xchg
pop
les
cwtl
cmp
cmpsb
popa
cmp
stos
lret
mov
sti
mov
aas
xor
push
push
imul
mov
mov
test
iret
xor
lea
test
sub
mov
scas
mov
call
mov
filds
aas
and
cwtl
or
dec
adc
out
pop
cmpsl
fadds
data16
pusha
dec
dec
bswap
in
inc
xchg
out
stos
cmp
addl
in
lds
jne
ja
mulb
lods
push
shl
jmp
inc
out
test
popf
cld
mov
add
adc
pop
sbb
rcrl
cmp
repz
pminsw
icebp
mov
sahf
popf
test
jle
push
jae
or
mov
js
aam
adc
les
cmp
mov
add
mov
cwtl
aaa
ret
inc
je
and
add
rol
cmpsl
sbbb
ss
sub
mov
js
test
sub
fwait
int3
test
int
icebp
popa
cmp
inc
push
add
or
mov
mov
add
movsl
jo
cmc
lods
jg
daa
insl
pop
jmp
mov
jge
mov
jnp
and
dec
pop
xchg
and
pop
jo
fdivrp
or
loop
mov
or
test
inc
ds
or
fistps
xchg
mov
andnps
inc
fsubrl
loop
jns
cmp
add
leave
iret
aam
xor
lahf
out
pop
add
sbbb
jnp
clc
in
jno
dec
in
xor
jae
sub
sar
lcall
push
sbb
fcoms
clc
data16
scas
jg
inc
push
xor
fisttpl
mov
jp
std
das
push
push
mov
and
push
xchg
mov
sub
aad
xor
lcall
jecxz
pop
jne
lock
jns
cld
ror
fwait
add
jg
lea
imulb
stos
pop
jp
and
stos
ja
jb
mov
repz
int
cmp
jle
xchg
xchg
push
test
negb
pop
or
jnp
dec
sub
pop
loopne
filds
std
xor
jno
add
jne
jl
daa
xor
cbtw
dec
cmpl
xorb
mov
jmp
sub
retw
adc
mov
fildll
pop
mov
subb
mov
mov
jae
mov
cmp
xchg
jb
sbb
in
push
adc
sub
stc
push
add
push
hlt
inc
jle
mov
mov
ss
lret
jl
pop
or
push
daa
insl
pop
jg
adc
pop
fisubrs
cwtl
mov
pop
nop
mov
push
adc
xor
sbb
sub
mov
jno
push
push
inc
subb
jp
xor
test
mov
lret
push
aam
sub
jne
dec
sub
push
outsb
mov
repnz
inc
or
adc
arpl
stc
subb
jae
mov
mov
pop
ret
pop
sbb
cmp
fildl
shrl
aad
dec
data16
add
inc
mov
mov
xchg
xor
fcoms
sbb
das
testb
push
fildl
fwait
cmp
xor
rcll
lcall
outsb
in
and
xor
mov
ljmp
fsub
lcall
ja
imul
xchg
aas
dec
out
out
mov
fadds
xor
xchg
cld
iret
mov
popl
pop
add
jno
lret
jg
int3
rcrb
hlt
arpl
pop
push
stc
sbb
add
push
rcll
iret
cmpsb
mov
out
or
fsubr
lods
ss
popf
lea
add
cmpsl
add
mov
imul
xor
shrl
rclb
push
pop
leave
cmp
cld
out
filds
pop
insb
iret
cmp
sbb
and
sbb
nop
out
dec
push
xchg
sahf
mov
or
imul
mov
jns
ret
pop
add
sub
jae
fidivrl
lods
mov
outsb
sbb
dec
xor
scas
fistpl
sbb
sub
dec
jae
pusha
and
cld
xchg
jo,pn
or
jg
ljmp
jp
inc
aaa
mov
out
push
xchg
ret
xor
loopne
ljmp
out
aaa
pop
dec
mov
mov
daa
test
and
hlt
fucomp
push
hlt
or
cmpsb
xchg
decl
es
dec
stc
add
sti
fwait
loopne
push
jge
sbb
mov
sbb
leave
test
cmp
divb
adc
test
ljmp
pop
in
jno
sbb
push
int3
inc
arpl
mov
in
scas
aas
scas
dec
adc
sub
sub
fldenv
mov
and
jmp
sbb
cmpl
adc
shrb
stos
fldenv
dec
inc
int3
xor
frstor
es
in
mov
cld
andl
mov
mov
mov
ds
pushf
leave
mov
and
mov
mov
mov
pop
rorl
inc
push
xlat
and
dec
lods
lods
and
iret
pop
lds
pusha
mov
mov
icebp
cmpsb
add
xor
push
incl
inc
mov
out
xor
fildl
add
pushf
and
outsl
aad
shll
mov
test
sub
jnp
lcall
sub
pushl
outsb
push
jo
mov
mov
dec
inc
into
jne
pusha
out
arpl
jecxz
movsb
sub
mov
je
roll
pop
jo
cmc
mov
jne
jge
cmp
mov
xor
loop
inc
jno
push
movsl
or
adc
inc
dec
in
xor
mov
hlt
ss
pop
add
dec
cmp
and
movb
pop
enter
cmp
mov
ja
adc
push
and
add
mov
lahf
jno
fst
xor
clc
dec
out
add
scas
jo
jg
cmc
add
imul
push
mov
inc
pushf
andl
lods
pop
add
dec
dec
jmp
cmp
sbb
lahf
add
in
gs
jge
push
and
lret
jp
out
mov
xor
push
inc
in
xor
jb
dec
shrb
cld
inc
jle,pn
into
xchg
cmc
pop
xor
sub
repnz
and
fidivrs
and
out
cmc
dec
pop
nop
xor
lock
push
js
pop
shrl
lods
aaa
or
bound
mov
lret
mov
mov
pushf
and
gs
dec
cld
sbb
xchg
aas
xor
adc
daa
lret
pusha
lahf
inc
rorb
nop
orl
mov
push
dec
xchg
mov
sbb
push
loope
insb
lock
dec
rorl
dec
in
pop
fiaddl
xor
xor
xor
jae
inc
inc
jge
arpl
sbb
lret
adc
dec
cmp
ja
xchg
mov
ret
adc
sub
xor
jecxz
popa
adc
push
sub
jbe
mov
mov
or
test
mov
lcall
sbb
nop
xlat
shlb
or
data16
bound
push
mov
loop
int
sub
and
cmpsl
int3
mov
xchg
sbb
xor
mov
ljmp
xlat
mov
scas
ja
push
sbbl
iret
je
fmul
add
dec
andl
jo
push
mov
pop
cli
cmp
xchg
pop
adc
inc
add
enter
sbb
dec
shll
mov
leave
cmpb
push
addr16
addr16
mov
leave
shrb
test
inc
xchg
shrl
sub
pushl
push
popf
mov
lret
xchg
arpl
sarl
fists
mov
dec
inc
mov
mov
aad
xchg
add
fs
xchg
and
xchg
rcrb
xor
rolb
jmp
sub
out
data16
sti
jo
pusha
rclb
mov
fscale
inc
pop
or
jb
fnstcw
leave
clc
cmp
push
inc
or
sub
sbb
hlt
sub
jne
jl
lahf
aaa
jb
push
imul
add
push
sub
sti
cmp
mov
add
jo
imul
mov
arpl
cs
jl
mov
add
sbb
cmp
adc
das
xor
cld
into
add
jle
test
xor
sbb
sbbb
enter
jmp
int
push
out
jle
cmpsb
fs
aas
jp
adc
pop
sub
inc
sbb
add
mov
ror
pop
adc
negb
mov
sti
test
dec
std
xorb
mov
sbb
rol
test
jnp
loop
inc
sub
mov
imull
movb
jne
mov
mov
fisubrs
pop
ds
insl
scas
or
cmpsl
sbb
sub
and
fidivrs
and
sub
sti
push
cmp
mov
ljmp
cld
or
les
fs
add
mov
sbb
xlat
popf
js
shll
jecxz
or
push
jno
xchg
jbe
inc
cmp
fnsave
and
cld
inc
push
mov
lret
fld
sub
das
ss
mov
test
jne
mov
mov
push
je
add
adc
push
sub
xlat
imul
mov
adc
sub
shrl
stc
sar
mov
and
push
xchg
xchg
mov
mov
push
out
std
fstps
jmp
xchg
or
test
cmpsb
cli
mov
ret
ljmp
cld
das
call
stos
stos
cltd
jmp
scas
insl
mov
aad
and
sbb
xchg
test
loope
sub
inc
jno
jg
cmp
in
andl
dec
imul
inc
sbb
imul
loop
dec
mov
cltd
repnz
inc
adc
push
sti
jecxz
insl
cmp
cmpsl
xor
sbb
mov
das
ljmp
fimull
pop
push
fbstp
in
mov
andb
pop
negl
fisubs
mov
mov
dec
enter
jle
fistps
jae
cmp
jle
inc
mov
in
and
mov
adc
test
mov
mov
clc
jae
ret
xchg
xchg
loop
lds
adc
mov
mov
int3
lock
ret
mov
xlat
sahf
inc
enter
mov
jmp
sarb
fstpt
push
ljmp
in
aad
out
sub
pop
push
aad
jle
jae
pop
cmpsb
inc
sub
pop
push
test
gs
pop
cs
inc
stos
or
pop
mov
adc
test
call
push
ljmp
imul
dec
aas
daa
push
aam
pop
dec
jno
jecxz
or
scas
rorl
cmpsl
push
arpl
gs
adc
aaa
bt
cmp
mov
pop
lret
mov
and
and
add
adc
pop
push
or
xor
xchg
xchg
mov
imul
mov
daa
cmp
sti
dec
pop
adcb
mov
mov
lret
repz
repz
adc
rcrl
pop
shr
adc
push
xor
xor
or
leave
imul
mov
cmp
repnz
ficoms
push
and
xchg
lcall
xor
test
je
scas
arpl
push
addr16
mov
mov
mov
lret
loopne
loope
sub
les
xchg
int
cmpsl
stos
jp
cmp
fsubrp
shll
jl
int
aam
push
sub
clc
jle
sub
loopne
lods
fcomps
out
push
push
cmc
cld
xor
cmpsb
jnp
cltd
push
cmpsb
sbb
jne
je
test
outsb
xchg
lds
or
sti
orb
aam
ud2
int3
lret
jbe
sahf
pop
mov
jg
daa
mov
test
shlb
in
mov
clc
popf
and
xor
hlt
outsl
stos
mov
push
xor
jae
cltd
sub
push
cmpsl
sub
mov
in
cld
cli
sti
mov
enter
jns
xorl
dec
and
cmp
xchg
test
add
xor
mov
enter
ret
out
xor
std
xchg
jmp
inc
scas
push
or
pop
sub
mov
sub
jne
cmp
loope
icebp
cmpsl
pop
into
xchg
and
sahf
in
and
ja
dec
xor
add
mov
rolb
push
push
cmc
adc
inc
mov
sub
add
sbb
cmpsl
cmp
or
mov
leave
xchg
cmpsl
pop
add
mov
push
mov
stc
dec
stos
movsb
xor
add
daa
out
cmpsl
dec
inc
hlt
add
xor
push
mov
ror
ljmp
mov
mov
cmp
xor
jno
mov
pushf
lock
repnz
and
sbb
pop
and
leave
ret
pop
pushw
mov
mov
xchg
sbb
dec
cmpsl
lcall
ljmp
mov
pop
cmc
or
out
lds
mov
push
gs
or
cmp
or
jo
out
mov
jns
test
mov
cld
addr16
enter
lods
imul
stos
pop
mov
dec
add
hlt
inc
enter
lret
sub
adc
loope
in
iret
xchg
xchg
xor
std
in
xchg
dec
iret
mov
jb
arpl
dec
cld
fisttpl
sub
iret
dec
mov
cwtl
ret
mov
dec
fcomp
inc
rorl
sub
pop
in
lret
in
dec
xor
fucomi
addb
movsb
rclb
cld
or
cld
addl
andnps
sub
xchg
push
js
ss
push
adc
aas
mov
sub
dec
ja
sti
lods
mov
popf
pop
stos
jle
mov
fadd
adc
inc
sub
jns
sbb
and
jae
repz
aas
repz
sar
inc
mov
dec
popa
fimuls
leave
aaa
cmp
cmp
ss
mov
sbb
int3
cmpsl
fwait
jl
arpl
xchg
jle
pusha
pushf
jge
jnp
dec
in
sahf
cmp
or
insb
ja
sti
mov
inc
cmpsb
out
mov
and
gs
add
addl
lea
mov
or
pop
mov
lret
mov
mov
sbb
pcmpeqb
test
loope
sti
shll
pop
push
dec
push
cwtl
add
jmp
jae
pop
pop
bound
mov
xchg
xchg
pop
or
test
mov
pop
int
data16
imul
jns
scas
push
inc
mov
repz
and
adc
push
xor
jae
xchg
aaa
das
jle
jno
iret
lods
xor
adc
mov
notb
rcl
jmp
bound
push
fidivl
imul
jl
dec
into
adc
add
insl
xchg
fldcw
mov
pushf
ficomps
add
pop
or
mov
dec
incb
pop
not
arpl
std
add
lock
push
lahf
sbb
xchg
lcall
push
in
hlt
imul
add
leave
jle
and
mov
inc
adc
ja
hlt
bound
std
inc
mov
lock
scas
jae
adcl
in
in
xor
in
lods
shrl
and
lods
dec
mov
pop
adc
xor
push
scas
jmp
jae
xor
ds
sub
popf
std
pop
mov
sbb
and
adc
push
jmp
loop
push
nop
fcompl
cwtl
test
xchg
cmp
sbb
add
adc
mov
jg
or
jae
add
sub
push
fidivrs
pusha
add
push
or
out
mov
and
mov
push
cmc
dec
insl
test
cld
outsb
add
push
mov
sub
inc
ss
cmp
int3
add
loop
dec
xor
ja,pn
inc
outsl
jo
and
test
jbe
sub
pop
and
pop
fistpll
pop
data16
call
mov
sahf
scas
push
lock
mov
insl
pop
add
mov
out
sub
mov
xor
push
xorl
fldenv
mov
sub
inc
sub
repnz
cmp
cmpsl
sarl
out
decl
imul
andl
adc
lods
inc
mov
out
xorl
and
pop
adc
pop
push
xorl
cmp
mov
out
pop
outsb
mov
imul
mov
push
shll
shrl
adc
and
jge
xlat
enter
loop
orb
pop
ja
fdivrp
mov
es
mov
arpl
imul
and
mov
cmp
inc
rolb
xchg
sbb
jl
push
sub
xlat
shrl
xchg
call
and
adc
sbb
fcoms
jmp
jmp
das
js
dec
daa
pusha
push
jecxz
inc
fmulp
out
addr16
xor
ds
popa
outsl
loop
mov
shll
cmp
shrl
adc
outsb
pop
lret
rorb
jl
imul
sahf
or
adc
movsl
push
add
sbb
sub
pop
pop
inc
add
mov
xor
sub
cmp
leave
test
or
and
cli
mov
or
lods
out
lock
xchg
out
inc
aaa
inc
bound
and
inc
push
andb
in
test
push
xor
xchg
jecxz
cmp
jmp
sahf
fldenv
cwtl
inc
mov
int
sub
push
pop
pop
lcall
mov
mov
in
mov
test
sub
xchg
push
jl
jo
ljmp
sbb
inc
jno
adc
xor
cmp
cs
cld
dec
push
pop
dec
push
mov
sub
in
xor
cmpsl
mov
mov
mov
cmp
ss
out
cmpsb
neg
cmp
push
jae
int3
and
inc
mov
pop
jno
jge
pop
adc
icebp
add
in
rolb
xor
mov
xor
or
or
aad
and
add
jle
idiv
xor
xor
mov
or
movsl
fdivrl
sbb
pop
or
add
test
pushf
push
aas
out
push
lcall
and
ds
test
in
mov
push
bswap
out
inc
or
adc
in
movsb
lock
mov
mov
rcrb
mov
shrb
add
iret
mov
cmp
adc
inc
std
inc
mov
xchg
sub
pop
cld
out
lea
jno
dec
ja,pt
shlb
xor
pop
mov
lods
jne
fisttpl
cli
inc
or
jne
fadd
push
mov
out
int
dec
inc
out
mov
outsl
pop
pop
ret
mov
lret
xchg
fmul
xlat
push
push
iret
scas
pop
ds
and
xchg
jg
mov
ret
dec
scas
xor
int
add
jmp
notb
sti
mov
out
xchg
and
mov
adc
outsl
xchg
arpl
jecxz
adc
in
mov
rcl
and
ja
aad
push
scas
mov
push
dec
test
icebp
cmpsb
or
shrl
lahf
or
out
shll
inc
xor
adc
test
mov
dec
mov
pop
rcrb
mov
je
icebp
cwtl
enter
inc
ficomps
mov
dec
mov
mov
ljmp
inc
hlt
inc
mov
ja
test
mov
sub
ds
mov
xor
test
xor
jne
sub
or
xor
jne
loop
fbld
ljmp
push
pop
mov
mov
aaa
ss
jp
dec
movsl
movsb
mov
subl
inc
iret
jle
cli
fwait
or
dec
insb
pop
shufps
in
jmp
mov
ss
mov
lahf
adc
adcl
shl
sub
or
mov
push
xor
pop
out
mov
mov
lret
iret
in
incl
mov
mov
cmp
add
xlat
cmp
popa
add
cmp
call
adc
lret
inc
repnz
cmp
inc
mov
lods
or
cmpsb
or
mov
in
out
lds
sahf
push
cmp
aad
das
aas
push
inc
ljmp
jge
arpl
leave
icebp
loop,pt
lret
repnz
dec
lret
mov
xor
and
dec
jb
dec
sbb
fdivl
filds
xor
mov
mov
push
bound
ret
movsl
pop
cmp
adc
std
xchg
loopne
pop
lock
and
mov
mov
push
xchg
push
decb
bound
int3
add
jmp
xor
sub
in
test
jecxz
fsubrp
rorb
insb
xchg
imul
mov
lahf
jb
mov
xor
pop
mul
mov
or
std
popf
mov
sub
cmp
cltd
mov
push
pop
push
loopne
mov
stos
test
mov
mov
or
ffreep
test
adc
mov
push
jo
pop
lret
in
mov
fcoms
cs
inc
pop
add
cltd
and
push
lods
jb
das
sub
push
xchg
cmpsb
dec
in
js
sub
sub
pand
xor
mull
pop
pop
sarl
jae
call
arpl
mull
mov
jmp
pop
inc
push
mov
sub
cmc
jl
fimull
add
cli
out
cmp
or
push
xor
popf
lret
cmpl
int3
mov
jbe
add
adc
ret
clc
emms
dec
fldl
adc
stc
ja
lcall
addr16
sub
cs
leave
push
int3
pushf
inc
cmp
jns
push
mov
mov
pop
in
add
add
or
inc
jp
insb
add
mov
scas
dec
mov
pop
les
sub
imul
scas
loopne
outsb
fwait
inc
mov
mov
aad
js
icebp
or
std
cwtl
testl
cmp
aas
push
sahf
pop
movsb
sbb
mov
ja
dec
push
popa
xlat
test
jnp
mov
out
repnz
mov
sub
mov
or
rorl
cld
loop
sub
xor
cwtl
xor
pop
and
fstps
xlat
aaa
jle
pop
scas
add
ja
mov
pusha
pushf
xlat
movsb
fisubs
jge
lret
pop
adc
mov
loopne
xor
shr
mov
imul
fmull
popa
mov
push
lock
dec
out
mov
cmp
loope
lahf
xchg
sbb
xchg
add
stos
data16
dec
or
inc
es
or
mov
xchg
sub
ds
add
pop
mov
rorl
loop
pop
mov
stos
dec
fimull
pop
inc
cwtl
push
adc
xor
xor
jmp
mov
out
lret
sahf
add
lret
inc
lds
mov
dec
out
lahf
xor
dec
ja
sbb
divb
orl
ficoms
xchg
mov
iret
sbb
fcmovnbe
dec
ljmp
mov
mov
mov
gs
xor
pop
into
iret
mov
lcall
std
nop
fmuls
cwtl
mov
add
xor
sub
xchg
mov
rcll
imul
gs
inc
jbe
or
enter
or
dec
adc
jno
outsl
push
pop
or
push
pop
push
xchg
ss
sub
push
jbe
cmp
or
pop
das
dec
sub
lret
xor
xchg
cmpb
sub
aaa
sub
andb
arpl
lock
jnp
arpl
pop
sub
andl
xchg
mov
sahf
dec
test
into
fstl
push
ret
and
cmp
jp
mov
adc
mov
std
sub
icebp
mov
cmpsl
popa
ret
cmp
cmpsb
movsb
mov
adcl
jecxz
sub
fadds
dec
xchg
inc
jecxz
push
jbe
lcall
js
mov
adc
adc
test
aas
lret
adc
inc
sub
sti
or
or
call
fisubs
push
jp
fcomps
repz
sub
dec
xchg
mov
dec
mov
out
subl
out
pop
loop
cltd
pop
push
pop
cli
xor
or
jle
mov
pop
inc
popa
test
js
or
sti
mov
mov
cmp
aad
sti
sbb
inc
enter
cmp
loop
push
loop
inc
out
vsubss
adc
into
pop
pop
lds
in
sbb
out
pop
adc
lock
and
mov
dec
data16
ljmp
imul
xlat
xor
mov
pop
lods
fimull
dec
mov
jmp
hlt
pop
inc
cmp
and
imul
sub
fs
xor
jp
out
or
popf
leave
jmp
and
jg
jo
jp
mov
mov
loope
daa
mov
mov
hlt
add
xor
popa
push
das
icebp
gs
jl
xor
idivl
dec
loop
inc
imul
test
imul
cltd
mov
dec
lahf
fnstsw
jbe
leave
or
inc
inc
sbb
jp
stos
cmpsl
sub
sub
lods
loopne
out
dec
in
outsl
xor
ja
push
mov
popf
pop
mov
jp
lahf
mov
cwtl
sub
aaa
xchg
pusha
pop
repnz
pop
push
cld
shlb
mov
sub
popf
cmp
pop
and
cmp
sarl
mov
mov
pop
xlat
lret
cmp
add
stos
enter
and
and
outsb
xchg
cwtl
xchg
jmp
xor
mov
push
fnsave
jp
andb
lea
and
test
cmpsl
scas
mov
jge
das
inc
int
jno
iret
sub
xor
and
cmp
push
sbb
and
mov
je
outsl
xor
cmp
adcb
mov
adc
jmp
jo
test
and
addl
popf
xchg
add
fstpt
jmp
mov
lock
lcall
int3
push
mov
jbe
test
nop
arpl
xlat
mov
inc
imul
sub
imul
cmpsb
push
jb
cmc
xchg
mov
shl
imulb
mov
xor
fwait
or
xor
in
add
sbb
sbb
test
mov
xorb
out
es
ljmp
iret
in
sbb
sub
fisubl
decl
ficompl
mov
dec
mov
je
dec
mov
cmp
lahf
mov
dec
test
dec
xor
popa
fsubrl
push
add
and
push
dec
out
and
xchg
je
fidivrs
fbstp
xchg
outsb
jne
das
mov
pop
leave
int
pop
imul
adc
mov
xchg
xchg
fildl
cmp
aas
mov
xchg
in
lds
xchg
xchg
leave
mov
add
add
fnstenv
aam
out
adc
fbld
lock
movsl
lahf
pusha
cs
mov
movsl
xchg
push
int
cmp
push
push
lret
adc
lret
mov
in
jnp
out
sbb
inc
mov
out
ja
sbb
sbb
jecxz
shlb
mov
sbb
xchg
lock
ret
mov
fistl
mov
mov
inc
es
jmp
cli
cs
int
data16
jge
mov
or
mov
cld
dec
jb
loopne
lods
out
dec
outsb
stos
xchg
int3
xlat
jno
dec
fldenv
aad
sbb
ffreep
mov
cmpl
jns
jns
mov
mov
loop
cmp
push
sub
insl
stos
out
lret
or
inc
push
jge
xlat
add
mov
leave
cmpsb
dec
xor
cmp
mulb
outsl
inc
scas
sub
scas
in
sub
pop
xchg
xchg
or
jg
mov
lcall
mov
repz
or
add
dec
jmp
cmpsl
sbb
pop
shlb
xchg
pop
add
push
mov
fwait
and
mov
lahf
clc
mov
jns
hlt
push
ds
std
pop
into
dec
nop
sbb
mov
or
add
shrl
push
icebp
mov
dec
push
rcrl
mov
pop
es
push
pop
mov
adc
imul
lret
sub
pop
out
mov
mov
pop
test
sbbl
jge
es
jb
addr16
xchg
mov
out
push
mov
fwait
push
dec
dec
dec
mov
cmp
xchg
xchg
mov
cmp
fwait
cmp
pop
push
cmc
push
jne
test
out
lret
jns
lods
std
mov
push
jge
pushf
sbb
pusha
lods
inc
test
or
push
dec
leave
icebp
in
aaa
jnp
addr16
out
sbb
lahf
dec
aas
fsubr
cmpsb
and
dec
int
mov
insl
xor
inc
arpl
sahf
ret
jg
jno
xchg
mov
xchg
jmp
push
leave
es
dec
sti
sbb
bound
stos
mov
adc
xor
pop
mov
sub
inc
xor
cwtl
mov
or
mov
movsb
push
or
nop
scas
push
xchg
int
add
jne
insl
mov
loope
rorl
xchg
adc
enter
xor
or
inc
or
add
in
or
pop
cli
fists
mov
hlt
in
loope
sub
add
frstor
or
jl
cmp
and
mov
test
sub
cwtl
mov
inc
or
shl
cmc
push
and
dec
shrl
ret
pop
lds
icebp
dec
push
dec
and
sub
inc
sbb
push
cmp
sbb
xchg
arpl
test
xor
add
addl
sub
pushf
sbb
cmp
sbbl
push
xchg
sbbb
nop
addr16
dec
dec
shll
pop
sbb
les
rclb
addb
mov
movd
ficoml
fiadds
gs
lret
adc
cmp
int3
mov
aas
xlat
aam
fwait
xchg
test
imul
adc
cmp
or
addr16
fiaddl
or
push
sub
shlb
push
leave
cld
rcl
pop
jo
adc
jge
sbb
ret
test
in
pop
into
cmpsb
mov
lcall
fwait
cmp
or
and
mov
cmp
or
shlb
test
add
pop
adc
andl
mov
ret
movl
imul
jno
sub
scas
cmp
test
popf
lret
test
mov
movsl
js
xor
sbb
xchg
add
push
sahf
out
mov
test
es
mov
aad
xchg
cld
add
adc
dec
pop
xor
or
das
shll
or
fisubs
movsl
xor
sub
negl
and
pop
insb
in
or
divl
mov
rcrl
sbb
xchg
cmp
insl
addr16
lods
push
mov
mov
hlt
dec
fisubrl
ja
popf
cmp
loopne
pop
aas
ja
push
push
add
lret
or
pop
and
fisubrs
movsl
jo
jg
inc
pop
push
or
xor
int
xchg
ljmp
sbb
stos
sub
push
shlb
push
add
sub
lods
fldt
xchg
mov
fists
mov
or
pop
jle
push
sub
pop
jns
aad
std
std
mov
pop
data16
sbb
in
ljmp
mov
inc
in
mov
inc
loope
lock
nop
insl
ja
bound
pusha
mov
shlb
push
fcoml
shlb
push
aam
cmpb
lret
or
hlt
xchg
cmp
mov
add
xchg
cmpsl
cmp
push
dec
imul
mov
fdivrs
xchg
out
push
sbb
inc
pushl
dec
add
hlt
iret
push
sbb
hlt
cmp
cwtl
and
arpl
imul
dec
loopne
or
pop
lock
mov
jne
sub
add
fidivrs
jnp
push
sub
cmp
push
xor
sub
mov
jno
daa
popa
cmp
shrl
jbe
mov
aam
popa
mov
inc
gs
sti
jge
or
or
pop
loopne
push
pop
test
and
pushf
sub
adc
mov
jg
lods
sbb
jecxz
inc
addr16
scas
notb
xchg
imul
pop
clc
xchg
jns
or
dec
jmp
aam
mov
aad
push
sahf
xor
sbb
adc
pop
sbb
xor
mov
rcll
movsb
mov
sub
push
out
ds
pop
or
imul
in
or
repz
iret
jb
repnz
enter
add
cmp
imul
cltd
adc
xor
and
sub
xor
jp
out
cli
and
stc
add
or
lahf
xlat
nop
lret
pop
test
mov
cli
push
outsb
int
cwtl
cwtl
push
cltd
movsl
daa
js
je
pop
gs
test
ds
or
mov
pushf
cmp
and
xchg
mov
cmp
cli
out
sub
inc
fsubr
filds
ja
jne
fs
outsb
arpl
movsl
jp
out
stc
mov
lea
jle
fst
or
rolb
cmp
arpl
pop
insl
rcll
or
pop
out
pop
adc
call
push
in
clc
mov
pop
movsb
and
mov
jns
addr16
cmpsb
push
or
push
fxch
add
movsb
push
jg
out
cmc
ds
push
mov
outsl
je
sub
scas
out
das
repz
rcrl
inc
movsl
sbbb
int
les
xor
add
in
in
call
outsl
aaa
faddl
or
or
aad
sbb
inc
pop
ljmp
mov
sbb
test
lret
add
pop
rolb
cmp
mov
mul
jno
sbb
in
inc
setnp
xchg
xor
jg
jb
test
jne
xchg
fsubs
stos
mov
xor
insb
xlat
sbbl
adc
mov
dec
xchg
ret
clc
inc
xlat
xor
test
pop
hlt
stos
lds
jp
push
sub
loope
mov
or
mov
mov
xlat
lods
dec
pop
or
cld
lret
push
or
mov
xor
notl
xchg
sarb
cmp
das
push
mov
test
les
sti
xlat
push
sti
or
cmp
and
sub
cmp
mov
mov
inc
push
mov
stos
mov
mov
xchg
flds
mov
xchg
mov
lock
push
jmp
mov
dec
jecxz
ret
inc
push
push
mov
dec
cmpsb
push
clc
push
xchg
in
inc
xchg
cmp
ds
dec
rcrl
mov
adc
outsl
cmp
repnz
sub
xlat
lock
cmpsl
das
push
and
mov
nop
mov
sbb
cmp
js
addr16
rcll
lock
fisttps
int
cmp
cmp
mov
popf
vpsubb
roll
pusha
or
mov
pshufw
push
cmp
out
sbb
xchg
jl
cli
pop
mov
mov
add
and
divl
lret
and
inc
shlb
xor
out
repnz
push
and
push
mov
or
mov
xor
and
sub
sbb
adc
sbbl
shlb
dec
mov
push
cwtl
inc
insl
fsubs
shrb
mov
sub
bound
mov
mov
mov
jmp
pop
sub
cmp
fdivl
stc
mov
pop
mov
xor
cmp
cmp
lds
add
mov
or
pushf
push
in
mov
and
lahf
add
fwait
insl
xor
sti
inc
orl
inc
pushw
jmp
cmp
xchg
loop
inc
jns
mov
mov
movl
lcall
mov
sbb
push
mov
pop
rol
adc
pop
ja
dec
shl
mov
out
cmpsl
pop
rorb
frstor
std
mov
push
cld
push
loopne
mov
lock
jl
mov
jo
bound
jecxz
andl
push
lock
inc
push
cld
cli
sbb
aas
cltd
push
xchg
out
decb
fucomip
into
xor
cmp
andb
ret
shrl
mov
movsb
jge
sub
sbb
into
sti
test
jo
sbbl
cwtd
jg
addr16
stos
push
rcrb
enter
cmp
xchg
not
aam
fistl
nop
dec
push
cmpsb
push
test
fs
mov
aas
mov
lock
iret
mov
pop
inc
lds
enter
fldcw
adcl
pop
dec
fwait
pushf
sub
movb
mov
jo
jnp
push
mov
mov
and
mov
or
outsb
cmovnp
nop
push
xchg
imul
jbe
dec
xchg
add
push
sbb
push
lahf
mov
jnp
dec
repnz
pop
adc
rolb
jo
dec
dec
sub
hlt
xchg
sbb
rdtsc
sub
test
les
fwait
mov
xchg
xlat
data16
aaa
sbb
mov
mov
arpl
or
push
mov
xchg
push
sub
add
lea
push
pop
dec
outsb
pop
mov
int3
adc
jno
aas
pushf
or
out
dec
add
out
cld
call
add
lods
ficoms
or
shlb
nop
push
leave
das
aaa
dec
inc
aam
fwait
mov
hlt
add
jle
popa
xor
add
sub
in
testl
sub
pop
dec
pop
jmp
mov
xlat
loope
sbb
mov
mov
dec
popf
arpl
scas
fwait
and
cltd
add
je
xchg
push
test
xchg
dec
jns
mov
dec
or
xor
lods
pop
jecxz
cmpsl
xchg
xor
sbb
in
test
dec
inc
dec
mov
fimull
fisubs
lock
xchg
sub
cmp
adc
jo
hlt
filds
je
idivb
cmp
mov
test
repnz
jp
jg
movsl
cmp
into
rorl
jmp
xchg
arpl
icebp
push
shrb
test
rclb
mov
push
in
lahf
add
in
imul
andl
adc
fwait
mov
push
imul
enter
data16
ffreep
mov
mov
aas
in
inc
xchg
ljmp
lock
sbb
stc
push
repz
pop
mov
add
lds
lock
push
scas
cmpsl
sti
xchg
and
xor
inc
sbbb
lahf
add
repz
inc
loope
out
jge
addr16
cmpsl
xor
in
pusha
push
cmp
add
mov
sbb
or
sbb
aam
pop
add
jae
test
les
sarl
lcall
lods
idiv
pop
sub
pop
pop
mov
lret
mov
adc
sub
lock
ret
stos
insb
add
mov
xchg
pushf
divl
in
jo
add
mov
lahf
outsl
jnp
push
cmp
lods
sbb
dec
mov
lock
daa
out
add
jmp
or
je
jbe
sbb
jmp
outsb
mov
push
jae
push
pop
icebp
adc
mov
std
pop
xor
jmp
mov
add
cmp
jbe
push
xchg
mov
mov
mov
js
imull
loope
xchg
movsb
call
mov
push
cmp
xlat
cmc
arpl
or
call
adc
movsl
test
daa
std
outsb
lods
lcall
mov
movb
and
xchg
and
loop
in
mov
dec
cs
das
imul
jnp
loop
mov
icebp
push
cmp
push
call
inc
mov
iret
scas
fsubs
or
mov
sub
lret
subb
push
sarb
stos
adc
or
xlat
mov
push
ss
dec
stos
shll
lods
or
mov
imul
stos
rclb
imul
push
mov
adc
stos
sbb
das
xor
adc
cs
or
mov
mov
jl
out
das
push
daa
lock
mov
lods
inc
mov
lock
mov
pop
and
call
mov
pushf
js
cmp
lds
sub
jb
sub
push
inc
jecxz
sbb
xor
rcl
addr16
jae
push
xchg
push
insb
or
adc
xorl
das
add
in
inc
ret
sbb
push
cmp
mov
jno
jb
rcr
lea
inc
out
sbb
sbb
xor
les
add
cli
jo
lcall
in
js
mov
mov
push
sub
dec
jb
repnz
xchg
das
lock
rolb
data16
pop
sub
sbb
or
cmp
xchg
stos
mov
inc
fldcw
insb
xor
cmpsl
xchg
imul
mov
jno
addr16
es
sahf
pushf
hlt
mov
cmp
push
fsubl
xor
jo
xchg
test
enter
dec
mov
xor
out
into
fidivrs
dec
movsb
push
inc
mov
test
push
or
mov
pop
fisttpll
out
push
mov
faddl
jns
pop
dec
pop
push
fwait
in
addr16
push
es
push
imul
adc
clc
in
jg
jl
fisubrl
jle
inc
mov
enter
enter
std
mov
add
mov
sub
fsub
pop
push
xchg
dec
rcrb
mov
jo
jecxz
mov
mov
lcall
stos
xor
jo
pop
leave
sbbb
mov
repnz
cwtl
outsl
and
aam
lods
pop
lods
sub
out
out
cwtl
add
xor
sbb
cmp
in
add
push
inc
inc
add
xchg
aad
jae
bound
call
out
mov
test
xchg
dec
out
sbb
xchg
movsl
push
push
or
push
inc
fdivrl
enter
jns
or
addr16
inc
addl
xor
sbb
lods
ret
mov
xchg
and
xor
in
lahf
jne
cmp
add
inc
inc
inc
add
xor
out
les
fs
test
mov
dec
aam
pop
loope
aaa
sub
movsl
iret
dec
lea
push
add
ljmp
mov
and
rclb
push
mov
jbe
test
fmulp
repz
add
lcall
dec
ret
test
enter
negl
sar
mov
imul
cmp
add
xbegin
cs
fs
and
xchg
xchg
and
pop
ret
orl
arpl
sbb
or
inc
dec
pop
push
jmp
cmc
sbb
sbb
and
insb
inc
mov
flds
sub
fsubrp
cmpl
ss
cs
ficompl
fistl
inc
or
fiaddl
xor
cmp
clc
inc
idivl
das
xchg
in
cltd
rol
dec
out
in
inc
adc
pop
cmc
sbb
sub
aaa
mov
aaa
and
and
cmp
mov
insb
insb
cmp
lcall
push
push
cmp
popf
push
dec
push
fmuls
cmp
or
outsl
xchg
lahf
mov
sbb
xlat
in
cmpsl
mov
dec
movsl
gs
or
mov
mov
roll
mov
push
dec
mov
in
addr16
loope
inc
rol
sbb
js
ljmp
in
pop
dec
jbe
mov
std
and
movb
jecxz
daa
xor
icebp
xchg
sub
add
jmp
xorb
das
push
dec
lcall
xchg
jne
loop
mov
pop
xor
sub
xor
jo
test
adc
test
mov
or
aas
movsl
ret
notb
push
adc
scas
and
inc
or
ret
sti
push
pop
stc
mov
cmp
push
and
cmp
mov
bound
hlt
outsl
mov
mov
das
daa
aas
dec
jae
mov
xor
out
push
sbb
pop
push
xlat
push
movsl
leave
or
cmp
jmp
adcl
cmp
ja
data16
out
out
outsb
imul
lock
add
addr16
out
mull
scas
mov
push
cmp
mov
hlt
fsubrl
loop
ja
movsl
xorb
add
fmull
repnz
push
dec
mov
stos
ss
fnsave
add
sti
and
sbb
in
js
test
jne
mov
cmpsb
and
push
cmp
gs
popa
xor
mov
scas
ret
out
jno
leave
lret
aam
test
add
outsl
repnz
push
xchg
inc
jne
lret
shrl
inc
sar
imul
and
fistl
mov
sub
and
mov
xchg
adc
iret
test
mov
daa
inc
jbe
iret
or
fwait
adcl
fsts
and
lods
pop
mov
fldcw
pop
cmp
dec
dec
jnp
sub
in
pushf
xlat
ss
mov
cwtl
call
jb
cmp
add
cmp
loope
cs
int
mov
cli
jle
fdivp
fwait
out
hlt
pop
pushf
sub
imul
stos
jno
cmp
mov
clc
stos
lods
jp
jp
lret
in
rorl
or
test
insl
adc
mov
inc
out
pop
sbb
repz
lock
out
fisttpl
adc
daa
jge
or
jo
xchg
ljmp
xlat
mov
cmpsl
push
sub
jl
cmp
ss
jl
xor
sti
imul
sarl
dec
add
mov
mov
push
or
lahf
add
imull
aad
shrl
push
jns
add
test
sub
fwait
neg
jbe
out
lods
sbb
movsl
fs
mov
inc
ja
ja
push
rorl
scas
loope
out
lock
pop
popf
or
inc
aas
lcall
mov
aad
push
call
aam
daa
popa
xchg
push
and
pop
lods
mov
pop
iret
push
xchg
mov
mov
pop
adc
aad
and
ficoms
repz
movsb
push
mov
pop
ss
cmp
sub
inc
aam
mov
cmp
push
mov
js
fimull
xor
push
jnp
nop
or
xor
xchg
decl
pop
insl
pop
mov
shrl
pop
cmp
cmc
mov
push
arpl
ja
fs
mov
dec
loope
jnp
cmpsb
popa
xor
decl
dec
jg
call
jle
movsb
test
clc
xor
xor
sub
and
xchg
push
or
nop
nop
mov
jmp
paddusw
ret
mov
pop
cmc
out
dec
jno
sbb
cmpsb
xchg
or
movsb
dec
shr
sub
sub
push
mov
xlat
jecxz
inc
fwait
pushf
jecxz
cmp
aaa
scas
adc
sub
test
or
push
icebp
cltd
pop
jge
xor
outsl
lods
sarb
aam
mov
les
mov
aam
xchg
mov
xlat
bound
mov
mov
aaa
roll
add
mov
ud1
sub
push
mov
out
dec
iret
gs
es
jae
add
test
inc
scas
mov
sub
insl
addb
les
adc
test
jo
adc
mov
and
inc
push
xchg
in
mov
cwtl
xchg
cli
mov
in
movsl
outsl
mov
push
les
and
dec
into
or
jne
or
fdivl
sti
in
loope
popa
jmp
mov
arpl
jl
xchg
shll
jl
cmp
inc
or
add
mov
push
mov
in
lods
pop
xorl
mov
jmp
loope
xchg
mov
jp
or
mov
ret
scas
dec
dec
jg
repnz
call
out
xorb
ja
xchg
push
repz
fstl
addr16
xor
cmp
mov
rorb
or
xor
adc
cmp
out
push
stc
in
testl
lock
pop
xchg
int3
mov
shlb
adc
loope
mov
mov
jg
sub
inc
cwtl
jo
fldcw
leave
xchg
or
bound
xchg
mov
mov
push
ljmp
mov
fisubl
mov
lret
adc
add
lea
dec
cmpsl
lcall
xor
add
sub
jge
mov
je
xchg
jae
sbb
push
xorl
xchg
dec
jl
pop
shrb
pop
mov
ficomps
jp
dec
pop
add
jne
push
shrb
daa
cmp
xchg
fwait
gs
sbb
add
je
xor
inc
push
mov
push
cwtl
int
lcall
scas
stos
xlat
jns
in
dec
bnd
notl
mov
sbb
sub
pop
scas
or
push
mov
pop
das
jo
fistpll
testl
clc
cmp
dec
jb
mov
jnp
dec
fsubrl
inc
mov
mov
icebp
insb
scas
xor
lods
jno
push
cmpb
in
pop
lret
or
mov
ja
aas
in
push
stos
inc
sbb
shlb
cmpsl
aaa
or
adc
jecxz
sbb
aaa
mov
dec
sbb
into
sbb
sbb
dec
adc
inc
xchg
out
or
ficomps
add
cmc
aad
dec
push
fldcw
jge
cmpsl
pop
dec
and
cmp
add
mov
or
jns
stc
rclb
cltd
xchg
mov
inc
incl
cltd
cmpsb
div
jge
clc
push
repnz
jnp
and
insl
jl
ret
jae
sbb
repz
mov
inc
push
inc
in
pop
repnz
sbb
mov
daa
jno
push
arpl
out
data16
imul
jae
add
ds
push
inc
dec
insl
inc
dec
das
pop
int3
lret
cltd
xchg
stos
ja
into
mov
test
jb
jo
cwtl
pop
aad
fldl
loop
es
ja
or
fildll
lds
outsl
or
push
inc
inc
ljmp
daa
mov
sub
pop
movsb
sahf
mov
cmp
jbe
cmp
jb
cld
mov
inc
jp
into
mov
add
inc
xchg
push
and
sub
ss
pop
inc
das
adc
sub
fimuls
dec
shlb
xchg
dec
cld
cmp
xchg
fsubrl
cmc
adc
adc
mov
cmp
add
mov
jnp
cmc
jecxz
and
push
mulb
dec
movsl
arpl
pushf
and
hlt
inc
mov
mov
sub
stos
jp
cmc
jg
imul
sub
daa
pop
insl
mov
xchg
shr
push
lret
fmuls
jnp
icebp
lds
fsubs
pop
lock
push
imul
sub
fistps
cmpsb
or
rcr
fistps
repz
dec
nop
sahf
sbb
push
and
stos
sub
popf
mov
jae
imul
jl
and
sarb
dec
incb
es
popf
das
sbb
or
push
cmpsb
repz
fwait
or
and
stos
aaa
sbb
mov
xchg
test
jbe
jecxz
arpl
cmpsb
adc
pop
inc
push
imull
and
push
fs
int
hlt
inc
jecxz
jae
icebp
cmpsl
cmpsl
or
push
inc
cmc
jecxz
dec
pop
mov
dec
aas
mov
pop
into
test
leave
mov
sti
adc
js
notb
imul
mov
xor
mov
inc
pushf
orb
arpl
mov
lods
pop
mov
mov
mov
jmp
fistps
jle
adc
xchg
mov
shlb
test
and
inc
adc
sar
aam
adc
xor
jbe
dec
pop
sbb
jns
or
mov
lods
mov
fisttps
outsl
xchg
subl
sub
xchg
mov
xchg
pop
mov
xchg
push
clc
mov
in
pop
pop
in
cmpsb
int
sub
cs
jmp
mov
into
imul
aas
mov
and
adc
int3
pop
lret
xchg
mov
mov
add
or
xor
leave
addl
inc
mov
jno
sub
push
adc
lock
stc
jp
adc
jl
movsl
int
push
leave
cmp
jno
outsb
call
aas
mov
clc
jb
cli
test
dec
inc
jle
std
int3
add
imulb
pop
and
insl
imull
mov
ds
push
mov
nop
rcl
sbb
mov
push
addr16
out
lods
jb
cmc
into
pop
mov
jb
out
push
sti
lret
sarb
int3
or
incb
scas
jnp
in
cmp
jl
xor
push
loope
fldt
dec
ja
sbb
sub
sahf
iret
data16
ss
mov
xchg
sub
outsl
jae
push
loop
imul
jb
sub
mov
fldl
push
mov
std
push
pushf
xchg
sub
and
js
push
sub
cmpsb
fstpt
or
or
cli
lret
or
cltd
dec
sarl
je
and
push
clc
push
xchg
jnp
into
mov
leave
push
fcomp
and
leave
adc
sbb
sbb
xchg
pop
push
cmp
jp
push
fwait
ror
ficomps
lcall
push
or
adc
std
xchg
xchg
div
dec
and
test
inc
xor
or
in
fsin
mov
push
idivl
or
mov
mov
mov
dec
imul
gs
imul
sbb
out
lods
dec
sbb
lock
shll
xor
out
lahf
icebp
leave
pop
or
and
push
sahf
xor
xor
pop
in
dec
pop
push
adc
test
mov
push
jae
movsl
rorl
xchg
ret
jecxz
fistpl
addb
subb
icebp
add
jnp
pop
add
repz
sbb
aaa
cmc
iret
or
stos
imul
push
cmpsb
xchg
cwtl
lret
or
imul
out
gs
outsb
repz
nop
add
mov
adc
out
ds
hlt
sti
xchg
push
popf
stos
sbb
dec
adc
add
arpl
out
xorb
or
sbb
fimuls
es
inc
sbbb
sub
int3
xchg
scas
xchg
lea
roll
xor
repnz
insb
jl
lds
mov
stc
fcomps
or
cmp
inc
bound
lahf
pop
lcall
sub
inc
cmp
leave
pusha
and
lds
push
fisttps
sub
adc
fs
xor
sub
subb
xor
loop
and
sahf
adc
addb
stos
shrb
xchg
movsl
jge
sbb
dec
or
cmp
xsha1
cmpsb
or
lods
scas
test
pop
push
jmp
out
aas
add
mov
hlt
push
pop
jmp
sub
sub
aam
cli
dec
mov
jo
in
jg
mov
rolb
pop
jno
pop
jmp
popf
inc
fbstp
pusha
loope
push
loopne
cmpsl
push
cmp
jp
iret
hlt
mov
loopne
js
cmc
mov
cmp
jle
pop
xchg
ljmp
cwtl
xchg
js
push
or
mov
test
cmp
mov
shll
mov
and
jns
dec
add
inc
jg
jne,pt
mov
pop
stos
jl
lea
cmp
movb
gs
nop
outsl
shrl
mov
mov
push
mov
and
cli
scas
cmpsb
push
std
stos
sbb
mov
add
mov
or
cmp
in
cli
fdivs
subb
dec
sub
shlb
lds
sub
dec
add
push
shll
data16
fistps
xchg
add
push
dec
dec
xchg
repnz
add
stc
pop
xchg
sbb
jne
ljmp
ret
lods
into
push
insl
adc
lods
lea
sub
scas
fs
sub
lret
rcrl
enter
sbb
dec
loopne
adc
in
mov
aam
and
mov
xor
cmovbe
testb
out
sub
add
cmp
push
loop
ret
adc
cmpl
daa
pop
test
dec
sub
inc
das
inc
addl
jp
mov
inc
mov
jp
pusha
jmp
push
sub
rcll
push
sub
push
xchg
insb
inc
test
mov
jbe
or
mov
xor
test
cmpsb
jg
aad
imul
jnp
push
js,pt
je
roll
loopne
stc
jae
jp
jle
sbb
xor
inc
imul
pop
sbb
dec
stos
or
sub
xchg
enter
cmp
cwtl
sub
or
sub
neg
ficompl
mov
outsl
rclb
or
fnsave
cmp
setg
xlat
inc
add
es
add
fimuls
add
mov
daa
dec
in
loope
and
pop
aas
xlat
lret
and
mov
cmpsl
test
xor
jae
xchg
push
dec
xchg
mov
xor
rorb
lock
jb
adc
push
dec
out
push
pop
and
stc
inc
xor
jmp
xchg
das
je
cli
movsb
lods
ljmp
sub
mov
outsl
ret
push
in
push
xorl
iret
xchg
gs
ds
adcl
inc
in
fnstenv
mov
xor
sub
pusha
test
push
adc
add
mov
sbb
lcall
sbb
dec
jae
sub
adc
sub
hlt
push
subl
arpl
mov
push
jl
or
repz
cltd
xor
sbb
mov
fimuls
sbb
push
fisubrl
push
bound
popf
and
out
decb
divl
mov
int3
dec
xchg
and
sub
addb
aam
pop
dec
mov
adc
dec
mov
subb
and
mov
call
mov
mov
aad
jmp
fwait
dec
adc
hlt
insl
inc
push
mov
scas
addl
sub
lds
daa
mov
outsb
ret
hlt
adc
pop
push
fadds
or
mov
or
adc
cmp
data16
sub
adc
or
ficoml
sbb
rcrl
add
jl
lret
cmp
mov
mov
sahf
cmpsl
mov
rorb
inc
popf
inc
add
mov
in
test
or
pop
xor
sbb
mov
pop
sbb
cmpsl
popf
addb
ss
ror
scas
std
stos
stc
imul
js
adc
fidivl
outsl
cmp
xor
xlat
lock
scas
xor
and
xlat
push
in
std
jmp
clc
dec
out
mov
cmp
in
fisubs
test
test
in
gs
arpl
popa
frstor
xchg
lock
out
pop
icebp
push
mov
push
loop
jmp
add
icebp
xchg
ret
jge
cmp
sbb
ds
jge
je
call
mov
add
jo
adc
xchg
out
outsb
orb
sarl
push
adc
pop
xchg
dec
pop
mov
adc
cmp
inc
clc
mov
orb
cmp
add
xor
mov
xor
inc
loopne
mov
push
push
loopne
fwait
cmp
adc
rcl
jle
push
fs
xor
xchg
jecxz
sub
shll
aas
mov
inc
xchg
jmp
jle
add
outsl
mov
xchg
xchg
repz
jnp
adc
push
and
lock
cmp
test
sti
jnp
jge
int
data16
jne
mov
jmp
insb
faddl
mov
jnp
lahf
insb
loope
daa
xchg
decl
xchg
insl
jno
bound
mov
in
ror
inc
test
pop
xchg
and
insl
ljmp
xor
mov
sub
es
pop
push
ja
inc
jbe
lock
cmp
dec
pop
js
shll
xor
out
push
dec
cmp
cwtl
jmp
fstl
jo
aaa
movl
and
fcomip
mov
cmpsb
outsl
cld
fs
push
bound
loopne
xchg
ret
push
ljmp
pop
hlt
ret
mov
inc
push
aas
push
divl
lcall
arpl
aam
lods
mov
jno
ss
xchg
scas
rcl
cmp
adc
mov
in
les
lea
xor
cmp
loop
sub
hlt
bnd
sahf
sti
mov
lods
pop
iret
mov
mov
sub
subl
sub
sub
stos
out
int
or
dec
sbb
add
mov
fisttpl
negb
xchg
call
shrb
push
in
aam
add
testl
adc
lcall
scas
dec
cmpsb
sub
mov
or
mov
jns
lahf
ljmp
ljmp
add
mov
dec
inc
and
push
pusha
add
push
and
int
add
gs
pop
push
jecxz
pop
sti
inc
fmull
or
sbb
in
xchg
pop
fsubrp
pop
lods
icebp
pop
xchg
pop
xor
xchg
dec
jne
shlb
xchg
inc
idiv
int
stos
jecxz
aam
arpl
call
push
add
fs
adc
jo
sbb
inc
and
or
scas
call
aaa
out
es
add
lds
adc
movq
rcrb
mov
jp
inc
insb
dec
add
mov
lods
inc
mov
arpl
or
movaps
out
sub
repnz
cmpsb
jl
aaa
shl
mov
cmp
inc
xchg
inc
jle
push
add
sub
jns
mov
stos
xchg
fsubl
loopne
movsl
push
dec
pushf
imul
aam
fimull
daa
add
ret
push
mov
int3
inc
inc
mov
mov
and
int
sub
test
mov
dec
cmp
inc
jae
cmp
in
outsb
push
or
scas
cmc
daa
push
and
popa
ja
add
dec
xchg
ja
das
and
sbb
std
test
xchg
mov
mov
shrb
das
cmp
push
mov
divb
xchg
lea
adc
stc
add
mov
adc
cmp
inc
popl
jecxz
or
aaa
jbe
daa
and
fiaddl
add
test
int3
roll
insb
fiadds
add
jno
ficomps
adc
adc
iret
mov
leave
or
cmp
in
dec
and
dec
mov
mov
fstpt
in
lret
mov
inc
cmpsb
scas
push
insl
sub
inc
dec
dec
imul
pushf
lods
das
sarl
stos
lcall
test
fsubl
std
cwtl
dec
jae
nop
jecxz
mov
xlat
mov
outsl
or
and
int
stos
rcr
outsl
pop
and
leave
imul
jnp
dec
popf
xor
push
cmp
ret
les
outsb
stc
nop
rclb
xor
lea
pop
sub
xchg
push
xchg
push
adc
mov
and
jo
mov
insb
stos
lahf
es
inc
jecxz
jnp
out
sub
popf
jg
and
sub
cltd
movsb
pop
xchg
dec
lea
hlt
or
test
mov
int3
scas
jg
lock
push
dec
lret
mov
pop
jno
enter
jo
iret
inc
bound
test
jae
bound
push
lret
in
xor
or
nop
mov
jle
mov
or
jmp
or
sti
jne
lcall
lret
cmp
mov
mov
mov
mov
shll
mov
xchg
push
mov
out
stos
jle
mov
sbbl
mov
mov
fwait
sahf
xlat
xor
mov
xor
add
jne
out
cld
test
adc
mov
addl
mov
jge
inc
xor
xor
stos
daa
aas
ja
or
mov
jne
fimull
dec
int
fcoml
outsb
outsl
inc
shll
mov
push
shrb
or
xchg
scas
jne
ljmp
sub
test
or
add
jne
pop
jb
xchg
jbe
outsl
pop
les
dec
jae
rcl
das
lock
loop
movsl
xor
call
jl
xchg
mov
fwait
imul
mov
pop
mov
int
mov
ret
sbb
xchg
ror
mov
sti
cmp
fsubrl
ret
jmp
ret
xchg
cmp
ja
repnz
mov
out
in
scas
jae
leave
xchg
iret
pop
call
push
scas
pop
clc
insl
cmp
aad
mov
jnp
jecxz
movsb
aas
xchg
loop
arpl
loopne
cli
jo
xchg
dec
push
cmpsb
das
xchg
add
xchg
fs
adc
push
aam
mov
int3
scas
mov
push
cmp
lahf
sbb
test
ja
and
jge
push
pop
adc
inc
push
mov
inc
ss
lods
dec
or
dec
mov
mov
std
lret
sbb
lcall
sub
hlt
setb
dec
ror
test
aam
lods
push
push
cltd
xchg
xchg
sbb
lods
icebp
testl
aad
cmp
popa
fwait
xchg
fidivl
pop
incb
jge
adc
nop
fsubrs
xor
push
std
push
hlt
push
cltd
mov
pop
dec
popa
xor
repz
add
pop
gs
sub
arpl
mov
mov
add
mov
mov
inc
shlb
xor
sbb
lods
jbe
cltd
stos
mov
movl
ljmp
push
addl
inc
dec
adc
lahf
add
fwait
imul
test
lods
into
fdiv
sbb
or
mov
in
mov
xor
sbb
lahf
sti
xor
cmpsb
loopne
push
pop
out
pusha
iret
dec
in
out
dec
and
rolb
xrelease
push
pop
sub
icebp
movsb
pop
lcall
js
mov
in
jp
adc
movsb
test
adc
repnz
push
mov
clc
cmpsl
daa
sahf
int
inc
andl
inc
insl
das
mov
fmuls
orb
pop
dec
out
xchg
test
sub
fxch
jle
xchg
and
pop
js
in
push
je
aas
ret
add
mov
dec
xor
add
andb
xchg
mov
inc
or
addr16
imul
xor
cwtl
jge
pop
aaa
push
jmp
in
fdiv
push
mov
xchg
inc
add
mov
lret
push
mov
push
adc
pop
lahf
adc
nop
sti
add
push
daa
ret
rcll
mov
or
bswap
push
add
fldl
cmp
xchg
lea
adc
cmp
adc
dec
std
sbb
roll
push
fsubl
xchg
mov
mov
ret
cmc
push
pop
adc
dec
xor
lcall
aad
lea
push
pop
outsb
or
lea
pop
mov
and
data16
dec
mov
mov
push
jo
jp
xchg
adc
jnp
gs
scas
aam
adc
jno
and
cmp
dec
push
mov
sub
push
out
fsubs
fwait
jmp
imul
or
addl
inc
mov
mov
sbb
xor
in
xor
fidivs
xorb
and
outsb
mov
mov
cld
mov
rorb
mov
push
das
fs
xchg
fistpl
and
adc
adc
add
test
cmp
cmc
loopne
iret
xor
dec
les
test
sti
xchg
and
sub
pop
xor
push
fwait
repnz
push
and
inc
inc
test
inc
inc
aas
hlt
aam
sub
sub
adc
fsubr
mov
insb
xor
into
je
call
jne
inc
imul
or
cmp
in
xor
iret
daa
insb
xchg
pop
daa
shll
cmp
inc
sub
inc
pop
in
repz
jle
add
jmp
sbb
scas
test
jle
mov
lods
mov
fists
insb
sub
aaa
xor
orb
cmp
xlat
sbb
icebp
jl
shlb
into
cs
jp
inc
std
scas
outsb
outsl
add
sti
cmp
hlt
aas
push
mov
bound
jecxz
adc
pop
or
ss
fldt
ficomps
or
pop
rorl
or
int
push
loop
and
shlb
out
pop
xchg
add
div
pop
into
mov
cltd
jle
adc
cmp
lret
pop
subl
sbb
mov
or
mov
icebp
into
sbb
dec
cmp
ds
stos
cmp
jns
add
out
xchg
cmp
xor
nop
into
test
push
ret
cmp
mov
sbb
jge
or
cmp
push
test
xchg
in
cltd
notb
outsb
lret
mov
add
insl
mov
xchg
mov
push
mov
dec
out
push
pusha
push
lods
jnp
rorl
icebp
adc
fwait
test
int3
mov
fnsave
stos
dec
push
stos
pop
fsub
stos
push
stc
pop
or
cwtl
adc
pop
fwait
and
out
mov
cli
mov
sub
dec
and
cmp
ret
lret
scas
cli
xchg
movsb
mov
sbb
int
inc
mov
inc
sbb
or
push
rclb
push
push
mov
jbe
xchg
and
outsb
pop
push
add
pop
in
testb
cmp
pop
jns
sub
dec
inc
icebp
pop
rcrl
in
jbe
inc
adc
or
sub
subl
push
sub
sub
in
in
dec
fistl
cmp
fcompl
lea
aas
jns
je
es
sub
fwait
cli
sub
xchg
int
in
das
jp
hlt
jl
or
cmp
inc
filds
repnz
push
ljmp
lds
adc
push
and
push
dec
fs
inc
scas
test
fsubl
dec
std
cmp
sub
xchg
invd
lcall
inc
or
loope
lret
inc
cmp
or
pop
test
leave
mov
or
repnz
sbb
pop
mov
fnstsw
cld
scas
daa
lahf
sbb
or
jb
xchg
mov
pop
data16
dec
div
inc
insl
addr16
sbb
xchg
scas
out
in
faddl
or
mov
sub
xchg
inc
or
es
rol
or
mov
int3
std
in
lcall
inc
pop
scas
dec
xchg
cmp
mov
xchg
mov
loop
mov
sub
jmp
imul
dec
xor
stos
mov
mov
clc
ret
add
inc
jne
mov
xor
test
addl
pop
insb
lcall
mov
sub
cmp
es
jmp
aad
inc
and
out
or
mov
mov
icebp
jo
imul
cmp
cs
xor
pop
fiadds
cld
mov
adc
xor
repz
pop
sarb
add
mov
xor
fcoms
rcll
jae
xor
or
cmp
mov
fs
push
cmpsb
call
adc
mov
shll
test
adc
jg
jno
xor
nop
pop
ss
or
and
dec
push
lea
aaa
cmp
frstor
lea
fisttpll
xor
mov
sbb
mov
pushf
sbb
int3
jo
in
xor
test
cmc
xorb
out
lods
aad
or
sub
inc
fsincos
lcall
add
inc
sbb
or
jle
jae
repz
xchg
pop
hlt
xor
mov
cmp
dec
das
stos
jecxz
loop
sbb
xchg
xor
cwtl
add
dec
add
sbb
test
lea
mov
push
das
fcomip
stos
orb
insl
xchg
adc
sahf
xchg
inc
rcl
inc
xor
scas
sub
xchg
fdivrp
movsb
enter
sbb
leave
fnstsw
adc
or
cmpl
xchg
xchg
test
es
test
sar
jb
das
and
sbb
xor
and
and
pop
outsb
sti
jge
adc
sub
pushf
or
scas
mov
addr16
mov
push
xchg
rorl
jp
mov
pop
jo
mov
daa
int
sbb
stos
das
in
movsl
lea
es
aas
jecxz
mov
test
lret
xchg
shrl
fistpl
mov
test
insb
push
pop
mov
push
fs
popa
cs
jae
sbb
in
pop
add
movsb
negb
fwait
dec
aas
mov
or
jns
negl
into
mov
jno
cmp
pop
outsb
xchg
call
cwtl
pop
pop
aas
fcomps
les
inc
in
pop
addb
cs
and
adc
std
inc
sbb
jge
dec
lret
out
ljmp
out
enter
xchg
rep
in
cltd
mov
es
or
lcall
push
lods
aaa
add
fistl
sahf
stos
add
adc
je
push
xor
dec
gs
pushf
sub
in
xor
adc
outsb
inc
mov
idiv
pop
shlb
pop
jns
lds
sbb
inc
cmp
adc
les
mov
enter
mov
es
add
xor
push
cmp
inc
lret
adc
ret
add
or
pop
ror
adc
pop
shl
sarl
std
or
test
enter
cmp
mov
or
aad
lcall
lods
insl
pop
mov
xchg
cmp
mov
cmp
imul
inc
insb
and
jns
cmp
jg
pop
sbbl
dec
lret
insb
sbb
mov
pop
hlt
sbb
push
lock
or
lea
fldenv
in
sbb
in
cmp
mov
in
dec
jl
lea
in
cltd
dec
movsb
push
orb
dec
lret
clc
sub
add
iret
mov
lea
int
aaa
sbb
jb
cltd
and
mul
lret
sahf
dec
scas
adc
int3
push
xchg
mov
sub
lret
mov
sub
das
jmp
nop
xchg
dec
xchg
inc
out
aas
mov
test
fimuls
pop
push
stc
pop
xor
pop
adc
cmpsl
or
retw
add
inc
rorl
jnp
adc
testl
and
sbb
cmpsl
push
arpl
sarb
mov
fcoml
fldl
jle
int3
insb
mov
jnp
sbbb
dec
xchg
mov
xchg
ljmp
lock
popf
jb
cmp
push
jne
test
ret
pmullw
inc
mov
pop
int3
xor
pop
lahf
loop,pn
cmpsl
daa
fdiv
out
lret
pop
mov
inc
inc
push
sub
mov
dec
ficoms
clc
repz
fwait
gs
in
icebp
push
inc
out
or
movsb
xchg
mov
cmpb
and
mov
and
cli
out
into
lods
xchg
lret
ret
xor
mov
dec
addr16
ret
adc
push
sti
pop
sbb
out
or
ljmp
repnz
andb
inc
adc
adc
mov
adc
inc
add
adc
aas
add
jl
insl
pop
adc
mov
cmp
gs
daa
pop
add
xor
mov
fmul
dec
cmp
pop
jle
jge
lods
fimull
jns
add
xorl
sub
lods
mov
push
lahf
mov
add
mov
iret
and
fst
fdivrp
sbb
mov
inc
dec
imul
adc
xor
lret
mov
pop
insb
push
and
jnp
data16
iret
cmpsl
testb
push
lret
arpl
call
sbb
leave
sbb
push
mov
add
jae
fs
lock
test
gs
out
push
icebp
adc
xor
in
les
push
mov
fisttps
das
pop
inc
cltd
repz
aam
mov
xchg
fwait
sbb
in
cmp
add
lahf
jne
lds
sahf
push
daa
ds
test
dec
insb
pop
lods
pushf
insl
inc
jb
rolb
jae
dec
hlt
loop
movsb
mov
cmp
dec
insl
mov
inc
test
in
cmova
dec
daa
fneni(8087
fdiv
jno
add
movsl
ret
mov
mov
out
cmp
xchg
mov
xlat
ds
addr16
adc
jnp
dec
mov
aad
mov
jnp
pushfw
push
test
data16
ja
test
xor
inc
jae
div
mov
aas
sub
or
mov
lret
das
sbb
inc
mov
outsb
add
xor
repz
and
pop
mov
add
mov
xor
in
or
inc
mov
jns
mov
leave
mov
cmp
xchg
cmp
add
js
and
mov
ja
jle
sbb
sbb
jmp
das
testb
mov
adc
push
cmpsl
mov
in
sti
cmp
out
cmpsb
jns
inc
xchg
adc
inc
and
sub
push
mov
movl
mov
repz
pop
sbb
movsl
rolb
stos
out
es
add
dec
sub
into
and
mov
adc
dec
and
ret
xchg
lds
push
test
adc
std
cwtl
fsub
fbstp
adc
fmulp
sub
cmp
or
lea
jnp
dec
add
push
add
xlat
mov
imul
push
mov
sbb
jne
popa
cli
sbb
jg
lock
and
ja
aam
test
pop
dec
or
mov
loop
sbb
hlt
test
test
push
mov
daa
inc
jbe
jge
loop
pop
mov
scas
or
lcall
dec
aas
push
mov
push
jg
or
push
adc
aad
mov
and
mov
sub
cmpb
cmpsb
enter
enter
or
movsl
loope
mov
dec
and
or
lret
mov
xchg
xchg
rclb
je
xchg
out
mov
mov
sarb
cmpl
sarl
decb
lock
mov
pop
cs
sub
push
gs
pop
fidivl
mov
mov
and
rorl
jnp
ret
push
jmp
pusha
sti
jge
add
xchg
push
ret
popf
push
mov
cmp
nop
adc
fcmovb
dec
adc
test
or
cmpsb
mov
mov
notb
push
sti
jbe
scas
mov
mov
push
call
sbb
lcall
je
add
iret
push
test
or
dec
jl
je
ret
sub
sbb
in
pop
ljmp
mov
sub
loope
lds
nop
mov
lods
into
loop
lret
xor
testl
mov
aam
insb
std
cli
cld
mov
mov
push
hlt
out
mov
xchg
pushf
movsb
sbb
cmpsb
mov
mov
dec
mov
xchg
sti
xchg
fcomp
push
into
inc
out
stos
add
mov
flds
jecxz
daa
stc
sbb
out
cli
mov
pop
push
jno
mov
xor
pop
jge
mov
and
insb
movsb
lahf
pop
adc
inc
enter
inc
shr
stos
add
lds
dec
popf
pop
adc
xorb
stos
sti
sbb
adc
out
mov
pop
negl
popf
imul
js
push
int
scas
inc
test
addr16
adc
sub
xorl
push
mov
cmpsb
sbb
and
imul
stc
dec
cli
test
cmp
scas
add
shr
adc
fstps
pop
ds
mov
jns
adc
mov
jne
dec
movsl
mov
pop
inc
add
fs
cli
frstor
negl
jnp
xchg
int
push
repz
popl
enter
mov
cmp
dec
push
in
fcompl
xor
scas
cs
aad
lods
arpl
movsb
fstpl
xchg
push
sbb
das
lock
and
lea
scas
repz
fadd
inc
pop
mov
into
push
push
mov
lret
gs
add
pop
dec
notb
psrld
hlt
negb
or
imul
jp
insl
or
jl
std
aaa
mov
adc
jne
xchg
sbbb
pusha
cli
in
cmp
and
addr16
subb
cmp
mov
lret
insb
mov
stos
jae
jl
cmpsb
sub
sub
psllw
lret
mov
fistpll
xor
pop
mov
sub
fdivrs
xchg
shlb
pop
rcrb
push
push
adc
mov
cmpsb
pop
jge
std
or
push
into
push
in
mov
flds
cmp
push
push
mov
addr16
push
cmpsl
push
idivl
aaa
mov
mov
jg
fstl
sub
mov
cmp
jmp
and
mov
mov
rcrl
sbb
sbb
and
int3
ja
jo
pop
push
loopne
sbb
popf
xchg
lret
test
jle
xor
add
mov
cmc
jo
pop
jo
jne
dec
cmp
add
sub
inc
add
stos
cli
ret
or
arpl
in
cld
push
push
mov
mov
scas
and
xchg
and
addr16
sar
push
or
dec
pop
pop
pop
sti
push
cmpsb
sarl
xor
mov
ret
cmc
mov
cmp
outsb
push
lret
outsb
sahf
test
and
out
mov
xchg
jmp
pop
dec
data16
shll
call
stos
dec
cmp
movsb
or
mov
xchg
pop
out
sbb
jno
dec
jno
inc
mov
dec
jmp
sahf
filds
mov
mov
mov
testb
nop
adc
mov
aaa
imul
xchg
inc
enter
xchg
mov
push
pop
testb
jecxz
or
test
shr
ss
lcall
xchg
rorb
pushf
popa
xor
mov
movsb
sub
mov
sti
jge
std
aas
cmovb
mov
insw
leave
ja
rorb
jp
jno
xchg
stos
fdivrs
daa
xor
scas
insb
aaa
or
rcl
pop
dec
xor
call
roll
inc
ja
mov
stos
push
xchg
rdmsr
inc
pop
add
lcall
pop
mov
in
push
jp
sub
push
and
rcrl
inc
jno
mov
sarb
cwtl
mov
lods
mov
jmp
rcll
addr16
leave
push
insb
mov
and
push
les
inc
sbb
cmpsl
aad
mov
lcall
xchg
jae
cmp
mov
imul
jns
pop
sarl
dec
aas
adc
mov
out
push
stc
jl
xlat
aaa
ret
fisttpll
and
rcll
pop
and
add
repz
rclb
sub
shll
jg
add
cmp
clc
loop
cmp
or
mov
ret
or
push
mov
xlat
jbe
lret
movsl
cwtl
bound
in
push
loope
test
aam
jo
push
xor
add
int3
jns
lods
insb
and
jbe
adcl
pusha
rdpmc
enter
sub
popf
in
fnsave
jg
int3
fwait
out
sbb
nop
lock
addr16
adc
inc
iret
hlt
fldcw
test
add
mov
es
stc
xchg
shll
stos
lret
cld
cltd
arpl
imul
into
dec
adc
outsb
lods
mov
or
icebp
and
dec
mov
push
push
out
clc
data16
cmp
xor
adc
test
test
test
dec
cmp
and
mov
mov
jp
mov
lcall
icebp
cmp
jno
or
jecxz
std
arpl
out
jae
sbb
ret
and
cmp
jae
cmp
in
cmp
repz
outsl
addr16
pop
or
int3
fwait
rclb
loop
addr16
push
flds
cmp
dec
fisubrs
cwtl
inc
mov
pushf
out
mov
xchg
push
jl
stos
mov
movsl
inc
sub
lcall
cltd
push
lods
inc
cmp
sub
xchg
xor
insb
pop
out
aas
data16
jbe
je
pop
sarl
sub
adc
fstl
dec
adc
adc
dec
bound
jae
xchg
jns
sbb
roll
dec
push
pop
mov
loop
test
or
out
inc
sbb
cmc
xchg
mov
jns
mov
inc
cwtl
cld
fimull
ret
sbb
add
mov
adc
leave
fwait
testb
xchg
int
sub
popa
mov
xchg
mov
dec
mov
dec
xchg
mov
ljmp
mov
or
clc
stos
jp
mov
add
add
int3
inc
sub
mov
pop
mov
or
pushf
scas
lock
das
unpckhps
pop
dec
enter
out
cmp
adc
aad
sahf
xor
push
je
scas
push
sbb
outsb
incb
inc
pop
jmp
dec
mov
rclb
cmpsb
push
xchg
sub
loop
outsl
lock
cmp
ja
lds
je
vpcmpgtb
push
mov
cmp
push
xor
mov
adc
dec
push
je
test
push
fidivrs
and
jle
flds
cmp
dec
push
jg
inc
jl
xor
and
cwtl
jne
push
mov
test
sub
cmp
scas
addr16
test
push
sub
cmp
lods
pusha
or
icebp
cmc
clc
cmp
cmp
dec
ret
imul
divb
iret
call
jb
lea
push
dec
dec
cmpsl
add
dec
pop
xor
ljmp
cmpb
sbb
enter
jg
sbb
insl
scas
sub
mov
sub
pop
mov
mov
jmp
pop
add
ficompl
mov
inc
push
push
mul
lret
lret
adc
dec
mov
add
popa
cmpsb
or
iret
pop
mov
out
and
dec
add
cmp
das
and
mov
pop
pushf
and
push
stc
jae
pop
dec
or
icebp
outsl
add
aas
mov
jno
jno
jmp
outsl
stos
sahf
xchg
mov
aad
cmpsb
sbb
and
jo
jl
jbe
ds
outsl
sub
and
xchg
push
lret
ret
es
and
adc
dec
pop
cmp
inc
out
fidivs
call
loope
fs
notl
dec
push
mov
lods
mov
rolb
ljmp
or
inc
out
push
scas
mov
or
add
fs
lcall
cli
filds
cmpsl
ret
and
leave
pop
inc
cmpsl
adc
pusha
stc
pushf
lods
inc
cmc
push
add
ljmp
or
loopne
test
les
movsl
mull
ret
jae
leave
pop
mov
cmp
cltd
in
fbld
mov
jb
cmp
pop
mov
add
lret
and
arpl
jns
out
popf
xchg
fsubp
adc
pop
stos
cld
fs
rolb
adcb
jo
xchg
jg
mov
es
ds
lahf
mov
xchg
or
xchg
insb
data16
rorb
jecxz
sbb
repz
push
mov
mov
dec
add
pop
dec
mov
push
inc
push
int
jp
mov
cmpps
inc
jne
je
mov
mov
wrmsr
or
call
pop
mov
pop
push
enter
jl
add
test
add
xchg
test
aad
pop
pop
mov
test
mov
lods
int
sbb
push
loope
jp
loop
mov
aaa
jae
int3
aam
imul
je
mov
push
and
adc
jg
sbb
aas
popa
jecxz
mov
xor
mov
not
cwtl
iret
mov
in
shlb
int
in
xchg
push
in
add
movb
push
addr16
hlt
dec
dec
push
mov
mov
sub
adc
out
lea
and
jns
mov
inc
test
and
cmp
sbb
xor
inc
sub
push
into
or
mov
fldenv
or
lea
mov
cmc
arpl
cmp
pop
iret
inc
push
movsl
in
into
movsb
jns
inc
pop
and
loopne
cld
xor
jecxz
mov
cmp
sbb
sahf
mov
xor
jge
xor
inc
bnd
or
xor
cmpsl
int
int3
mov
sbb
insb
sti
mov
mov
dec
lods
sub
jmp
jecxz
jmp
mov
jne
rcr
addr16
lock
lret
jbe
out
jecxz
out
out
dec
sti
dec
push
and
add
gs
scas
jo
out
fidivrs
pushw
sub
lahf
or
fidivs
mov
pop
sub
dec
mov
adc
push
fstl
repnz
mov
test
sub
orb
stos
mov
lds
cmc
in
int
popf
xchg
cmp
pop
or
cwtl
popa
push
push
mov
jo
push
dec
mov
outsl
dec
shl
jnp
sbb
inc
jmp
pop
das
insb
int3
sahf
stos
xchg
and
mov
sahf
mov
and
inc
pusha
leave
lcall
mov
lret
fstpt
popw
mov
push
iret
test
jle
into
cmpb
adc
leave
popf
ffreep
dec
es
xchg
rorl
pop
and
or
and
sub
cld
dec
rcll
testl
jne
and
jno
jbe
add
pop
pop
add
rorb
jo
xlat
movsb
adc
mov
mov
and
adc
test
fcompl
mov
jg
xor
pop
adc
lret
loopne
aas
jp
popf
lods
lods
movntps
sub
mov
fs
ljmp
popf
int3
mov
aad
inc
aas
fcmovne
sub
cwtl
pcmpeqw
mov
sub
mov
das
out
dec
cmp
shll
inc
rcll
out
js
push
mov
inc
jnp
mov
xchg
push
push
push
div
jns,pt
jbe
xchg
jne
lret
inc
bound
test
test
sbbl
adc
shrl
and
mov
mov
push
or
outsl
mov
xchg
or
jmp
cmpsl
inc
xchg
out
mov
push
test
fdivrs
sbb
clc
xchg
xor
neg
inc
xchg
xchg
or
in
push
int3
dec
call
rcll
iret
pmullw
xchg
sub
mov
pop
lock
push
xchg
int
fnstsw
daa
push
das
stc
push
lret
clc
cld
pop
and
repz
pop
mov
jns
repnz
mov
dec
sub
roll
inc
push
mov
fs
pminsw
repz
push
fs
fldcw
cmp
sub
adc
imul
add
xchg
push
lods
rcrb
mov
add
into
jae
push
push
popa
xchg
repnz
push
jo
rolb
add
xor
jno
mov
out
fadds
adc
lcall
mov
pop
in
aam
sub
mov
fwait
cmp
cmc
fmulp
aas
inc
sbb
rol
outsb
outsb
cmp
mov
jb
push
pop
clc
addr16
or
jp
jle
dec
push
fildll
in
and
push
fs
dec
fildll
lds
shrb
sub
outsb
mov
movsl
icebp
sbb
into
adc
adc
fdivrp
hlt
leave
dec
jmp
rcrl
sub
or
ljmp
and
cmpb
jae
std
pop
das
movsl
push
loop
std
mov
bound
mov
aad
ret
mov
and
pop
adc
lret
dec
ss
push
and
lcall
cld
mov
pop
fstps
mov
dec
out
xchg
in
lods
andl
push
imul
push
mov
insl
dec
in
popa
ret
xchg
repz
push
xor
inc
js
fcom
jno
scas
popf
push
cwtl
out
lock
xchg
out
adc
or
test
or
cmpsb
jne
xor
adc
enter
std
test
and
sbb
xor
xlat
mov
inc
ljmp
out
adc
addb
nop
xor
jp
dec
jge
test
dec
cltd
xor
cmp
push
jmp
out
xchg
mov
add
or
int
fcmovnu
sar
and
adc
leave
jo
lods
ret
arpl
fisttps
rcrl
cmpsl
insb
xchg
jae
push
nop
mov
adc
push
and
mov
mov
jae
insl
loopne
sub
dec
fistpll
push
popa
mov
popa
scas
ja
push
leave
ljmp
fldcw
pop
rcl
repz
imul
icebp
add
xchg
ds
insb
push
adc
mov
jmp
lods
mov
add
pop
out
rorl
test
lods
add
sub
mov
ret
or
jecxz
cmpsb
push
adc
and
js
popa
gs
in
mov
push
mov
int
pushf
jb
sub
xchg
fldt
xor
fldcw
sbb
xchg
sti
or
pop
scas
inc
push
insl
mov
jp
mov
add
fsts
inc
out
and
mov
lahf
mov
jl
cmp
pop
dec
int
pusha
loop
jns
into
sbb
ficoml
xor
insb
lods
xchg
inc
roll
scas
cmp
push
cwtl
into
cmp
daa
sub
xchg
adc
or
rcrb
ljmp
push
add
adc
xchg
int
popa
lea
sub
xchg
imul
mov
repnz
adc
incl
inc
popa
lock
jg
xor
ss
add
out
inc
in
gs
push
xchg
iret
in
adc
outsb
add
movsl
in
idiv
fs
sbb
adc
out
lret
leave
iret
mov
lds
or
adc
xchg
mov
lcall
sbb
fnsave
cmp
dec
sub
cwtl
inc
lcall
xchg
mov
insl
pop
xchg
inc
ja
inc
xchg
out
in
jbe
iret
cmp
in
popa
push
mov
cltd
pushl
jb
push
gs
mov
loopne
idivl
add
les
and
pop
mov
pop
adc
jno
sbb
test
adc
cmovo
add
or
sahf
lods
aas
jl
jp
inc
jbe
jno
mov
lea
cmp
sub
movsb
ja
mov
ja
imul
scas
xor
push
push
loopne
mull
inc
push
pop
or
aaa
and
iret
jo
std
je
clc
clc
cli
jo
pop
fs
xchg
xchg
dec
int3
sub
in
mov
push
cmc
xchg
sub
loopne
mov
mov
loop
push
mov
cmp
lcall
fmull
xor
pop
mov
xor
idivl
xorl
pop
lahf
xlat
repz
fistl
sbb
add
xor
ret
iret
or
daa
pushf
out
mov
push
fidivrl
inc
xchg
mov
dec
sahf
and
enter
cmc
mov
push
mov
push
cmpsl
add
push
mov
adc
mov
mov
push
out
inc
fdivl
pop
ja
push
and
mov
push
mov
pop
in
sti
mov
movsb
aaa
push
mov
lcall
addb
movl
dec
pop
fiadds
fnsave
jmp
push
mov
cltd
fildl
mov
sarl
orl
inc
aas
ja
jne
imul
mov
aas
sub
sub
loope
sbb
popf
mov
mov
mov
aas
jns,pn
es
clc
dec
jno
inc
pop
xorl
xor
and
aam
js
idivb
dec
rorb
push
cmpsb
cmp
ds
incl
rcrb
insb
lods
test
int
lret
in
dec
sti
imul
pushf
add
pop
or
and
push
xlat
repnz
fcoms
out
stc
mov
es
add
inc
lods
push
xor
mov
icebp
pusha
in
insb
and
push
subb
cmp
mov
xor
sahf
adcl
mov
outsl
cmp
fildl
lock
mov
rolb
xchg
mov
es
pop
rcll
mov
cmp
mov
ret
or
push
add
dec
addr16
add
push
lret
xlat
cmp
mov
ret
sub
mov
bound
icebp
inc
aas
out
cmp
dec
leave
cmp
mov
cmpsl
push
or
sbb
push
cwtl
jo
pop
cmc
push
xchg
shll
jp
add
fsts
arpl
mov
xor
loop
pop
dec
dec
jg
dec
jno
cmpsb
negb
push
lret
cli
fstpl
adc
lcall
jmp
int3
dec
sbbl
inc
fimull
jno
test
jo
push
pop
pop
mov
and
mov
daa
jle
cltd
adc
jnp
xchg
mov
iret
inc
lock
pop
aas
mov
add
push
cli
mov
xchg
add
stos
sub
popa
push
push
stc
ret
xchg
test
out
ljmp
mov
out
jno
xchg
ret
sbb
mov
int
test
push
jp
in
jle
dec
and
nop
in
adc
mov
mov
pop
insl
mov
in
lock
clc
inc
push
mov
cmc
mov
clc
push
les
in
popf
stc
inc
xchg
xor
clc
adc
rclb
lock
out
rcll
das
idivb
cmp
into
fwait
int
pop
fsubs
lea
loopne
daa
ror
sbb
cwtl
dec
fists
mov
inc
imul
jns
imul
shll
sub
pushf
xchg
cmpsl
xchg
jge
bound
dec
xchg
lret
movsl
add
les
mov
add
jne
xchg
cmc
loop
clc
add
lret
adc
aam
xchg
pop
movsb
mov
cmp
cmp
push
push
int
adcl
xchg
hlt
pop
sub
out
in
push
dec
scas
in
aad
jne
sub
mov
mov
push
shr
test
lahf
cmp
sbb
pop
and
fdivrl
ficoms
cmp
xor
hlt
jge
push
sete
jnp
lret
fidivrs
push
xchg
cmp
mov
sbb
fdecstp
stc
mov
mov
mov
cmp
xor
mov
mov
test
and
dec
mov
cmp
push
gs
inc
cmp
fucom
mov
mov
into
popf
push
pop
imul
stos
mov
pusha
loope
jbe
or
or
inc
or
ds
adc
mov
cmp
dec
sarl
mov
inc
rcrb
fsubr
xchg
jle
fsubs
mov
push
dec
inc
je
movsl
or
xchg
cmc
arpl
cmpsb
and
fmul
jno
mov
mov
jecxz
mov
xlat
mov
dec
cmc
push
and
and
mov
xchg
movsb
push
roll
lcall
loop
adc
adc
inc
push
xchg
out
pop
pop
xlat
jb
mov
loopne
lods
jbe
lods
inc
sbb
or
sbb
rcrb
daa
test
icebp
hlt
lea
stos
fbstp
ljmp
lock
outsl
gs
mov
lret
daa
fiadds
sahf
pop
fdivs
add
sub
out
stos
mov
pop
push
xchg
jmp
xchg
mov
dec
mov
cmp
inc
ljmp
scas
in
std
cwtl
jbe
pop
out
push
and
neg
push
insb
jle
xor
jbe
pop
cmpsb
insb
and
add
iret
mov
sub
dec
clc
mov
xchg
loope
imul
adc
push
pop
jae
ror
add
xor
jl
mov
or
cmp
push
ds
mov
cmc
cmp
add
mov
ja
mov
jg,pn
fists
repnz
xor
test
sub
and
ja
clc
mov
das
xor
inc
movsl
loop
jmp
adc
mov
inc
mov
fldl
sub
mov
test
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
mov
sub
popf
pop
xchg
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
insb
mov
mov
jo
inc
icebp
out
rcrb
jb
mov
out
inc
out
and
and
or
out
or
cld
push
or
dec
test
mov
sub
sti
pop
fsubrp
rcrb
mov
jg
lock
and
in
clc
mov
push
rcl
cmp
mov
scas
mov
sub
or
adc
cmc
lcall
pop
aad
or
icebp
scas
scas
push
mov
rorb
push
orb
andb
pop
adc
or
xchg
ss
or
out
ljmp
add
bound
incl
das
fsubs
xchg
sub
imul
cmp
bound
mov
cmp
movsl
xchg
sub
bound
mov
sub
bound
mov
cmp
xchg
xor
sub
bound
mov
sub
bound
mov
sub
xchg
pushf
mov
sub
sub
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
lret
je
fadds
cmp
imul
add
mov
sbb
cld
add
inc
movsl
xchg
cli
shlb
add
add
mov
ja
add
movsw
xchg
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
bound
mov
sub
imul
fisttpl
popf
mov
js,pn
test
ds
xchg
pop
into
out
xchg
sbb
pop
adc
repnz
sub
xor
cs
adc
xlat
fistps
add
jbe
xchg
push
mov
xor
mov
shrl
lock
pushf
sahf
sub
jecxz
gs
pushf
or
pop
xor
add
dec
lret
daa
loopne
pop
rcll
jmp
lret
and
inc
jmp
push
mov
cs
out
xchg
xor
inc
sbb
dec
aas
roll
inc
popl
adc
mov
push
sbb
rcl
pop
mov
inc
xchg
popl
jne
mov
mov
sub
cmpsb
fiaddl
lock
shr
xchg
sub
outsl
loope
mov
out
outsb
xchg
stos
push
mov
jle
insl
jmp
adc
add
ret
jp
insb
sbb
repnz
push
stc
or
xor
add
push
call
mov
jbe
lock
mov
filds
sbb
test
jo
xchg
mov
sub
dec
icebp
scas
xchg
push
clc
testb
jmp
mov
push
mov
popf
xor
cmpsb
jmp
mov
ljmp
les
cmp
sub
js
push
push
xor
and
sub
jb
inc
adc
clc
pop
mov
test
sti
stc
xchg
add
jmp
sub
aaa
out
push
or
mov
dec
stc
xor
inc
push
mov
int3
aam
jmp
or
and
cmpsl
ret
mov
imul
repnz
movsl
push
mov
xlat
mov
ret
rcl
fdivs
hlt
mov
sbb
stos
ret
inc
xchg
subb
jnp
push
jns
jae
pushf
dec
sub
mov
hlt
popa
adc
mov
jns
xchg
shrl
ret
fsubrl
sbb
addr16
stos
xchg
cmp
push
inc
sbb
mov
insb
pop
ds
mov
mov
mov
and
jl
or
lret
icebp
aam
lods
xchg
imul
sbb
bound
pop
fwait
push
jae
cmp
inc
into
je
mov
xor
xchg
stc
loop
xchg
pushf
cld
pop
nop
push
xchg
shll
fisubl
je
inc
xchg
xor
stos
xchg
push
fucomi
iret
lods
adc
cmpsl
ret
mov
dec
lods
popa
fmul
cli
mov
adc
aad
mov
inc
into
dec
repnz
in
mov
xchg
mov
mov
xor
mov
push
pop
adc
xlat
int3
cmp
push
inc
sbb
xchg
push
push
scas
inc
jmp
mov
dec
outsl
mov
or
xor
repnz
pop
sbb
icebp
fimull
mov
add
push
mov
mov
mov
stos
jne
xchg
push
xchg
mov
sbb
fisubl
test
jnp
pop
xor
pop
cwtl
popf
adc
dec
sub
push
test
mov
or
or
cmp
jmp
std
clc
inc
pop
sbbl
ds
add
in
mov
mov
out
mov
jns
fwait
stc
pop
lock
loop
cli
es
popa
into
mov
rol
sahf
jmp
in
mov
mov
hlt
pop
rcrb
mov
ret
shlb
or
or
movsl
lcall
adc
pop
mov
cltd
pop
arpl
insb
das
or
sbb
push
mov
push
ja
into
cmpl
inc
aaa
iret
sbb
loopne
pop
jp
rclb
dec
jp
mov
pop
sti
push
daa
pop
sbb
ja
fidivrl
std
cmpsl
shr
mov
jns
popf
test
inc
xor
or
xchg
mov
and
mov
mov
sbb
ja
push
push
stos
sbb
pop
andnps
in
mov
jno
xchg
stos
mov
jb
push
inc
daa
test
jns
adc
dec
sbb
xor
outsb
arpl
xchg
outsb
jmp
xchg
insb
jo
sbb
sbb
jecxz
ss
fsubrs
pop
testl
mov
test
faddl
mov
sub
lcall
xchg
out
mov
stos
xor
ds
lret
mov
xchg
or
fcomp
adc
movsl
pop
pop
pop
sub
pop
dec
arpl
rclb
in
aam
and
dec
test
add
mov
repnz
lcall
inc
adc
mov
cli
mov
nop
jle
ljmp
sahf
sub
gs
mov
and
mov
inc
test
in
lds
mov
arpl
push
pshufw
ret
lea
inc
push
pusha
push
xchg
dec
inc
xchg
movups
mov
dec
mov
jp
pop
test
js
dec
cmp
and
mov
or
rcrl
pavgw
cmpl
sbb
push
add
or
cmp
test
xchg
leave
mov
pop
pop
mov
jbe
mov
lods
mov
dec
in
jnp
jae
jmp
fimull
jno
mov
lea
test
mov
sbb
pop
dec
xor
mov
ds
sbb
rclb
cmp
pop
push
cmp
dec
repz
jg
adc
xor
aam
aad
mov
das
test
mov
mov
out
scas
movsl
cmp
cmp
add
cmp
lds
sub
testl
call
repnz
sbb
rclb
scas
rclb
pop
cwtl
cwtl
mov
out
mov
jns
hlt
pusha
dec
in
mov
cmp
stc
je
addr16
nop
out
xor
jnp
sbb
cmp
push
xor
rorl
jecxz
in
in
ret
fdivrp
ror
out
pop
sbbb
test
cmp
mov
dec
push
jecxz
dec
or
leave
ja
cvtps2pi
pop
sub
pop
dec
xchg
ret
mov
pop
mov
out
mov
in
add
into
and
hlt
mov
mov
shll
icebp
movsb
scas
mov
jb
adc
dec
movsl
ret
sbb
jnp
sahf
mov
sub
clc
je
mov
xchg
movsb
mov
aam
sahf
idivl
mov
cmp
mov
jb
push
adc
lds
mov
mov
shl
iret
mov
repnz
out
pop
adc
out
lods
inc
jno
popa
add
call
imul
sbb
inc
mov
in
cmp
add
mov
mov
cmc
sbb
stos
mov
cmp
add
push
lods
es
gs
dec
imul
inc
mov
pop
inc
xor
dec
inc
addr16
mov
out
cwtl
mov
xor
adcl
adc
xchg
mov
stos
adcb
dec
sarb
rorb
push
inc
int
xchg
cmp
outsl
push
shlb
stc
imul
andl
jg
aaa
pushf
rol
in
mov
inc
xor
or
iret
xor
xor
std
xchg
int3
xor
subl
sahf
dec
in
aaa
adc
cmp
es
mov
lods
and
movsl
bound
fildl
js
mov
and
outsb
jmp
dec
adc
push
pop
xchg
jg
sbb
inc
jno
ds
call
int
insb
loop
lret
loopne
sbb
xchg
mov
mov
mov
fdivl
push
clc
inc
or
cli
cwtl
int3
dec
cmc
push
lods
loopne
or
dec
mov
stos
loope
stos
mov
or
inc
inc
pop
push
int3
mov
les
in
sbb
repnz
subl
imul
scas
pusha
pusha
mov
mov
testb
cmpsb
fisubs
mov
das
xor
cmp
xchg
incl
lods
leave
dec
lock
xchg
cmp
jne
es
outsl
cltd
fwait
dec
inc
mov
jno
mov
pusha
push
or
inc
inc
sbb
stc
fsubs
ja
cmpsl
mov
mov
aaa
and
mov
out
jae
or
popf
js
sbb
test
lea
insl
outsl
push
movsl
cmp
sbb
jle
movsl
shrl
inc
sub
mov
in
mov
daa
mov
arpl
sarb
mov
mov
mov
dec
cwtl
sbb
and
xchg
das
call
xchg
insl
and
shrb
popf
xchg
vprotq
jne
adc
push
mov
rorb
test
inc
push
add
pop
js
cltd
fistpl
lods
aas
push
mov
pop
inc
outsb
pushf
jle
and
mov
iret
jno
xchg
inc
in
ret
test
call
jecxz
pusha
icebp
mov
sub
aas
sahf
sarb
out
insl
dec
lahf
test
mov
and
cmp
outsl
lock
xchg
movsl
inc
mov
dec
daa
inc
daa
leave
pop
jns
add
leave
int3
shll
pop
aaa
jl
jge
shlb
movsl
out
xchg
inc
aad
jns
pandn
cmp
mov
lds
inc
shr
andl
mov
jecxz
sti
out
pop
lods
movsl
mov
mov
pop
push
gs
push
xchg
or
fwait
and
shrl
add
pop
movsl
sahf
scas
sbb
sti
std
aas
adc
loopne
adc
pop
mov
pop
fldcw
or
sbb
sbb
es
mov
test
jne
inc
push
pop
rorl
or
std
aaa
inc
push
mov
adc
sub
push
dec
cmpsb
fs
mov
and
push
test
pop
sbb
mov
add
stc
mov
xor
es
mov
jle
test
cmp
inc
mov
movsb
and
push
sub
ret
push
mov
dec
mov
daa
lods
dec
rcrb
test
dec
mov
mov
and
pop
dec
lret
mov
shlb
cli
dec
lahf
mov
inc
lods
jl
jge
test
enter
xchg
pusha
inc
inc
imull
daa
jecxz
adc
mov
xchg
pushf
mov
cmp
add
jne
cld
xchg
cmp
and
adc
rol
ss
ficompl
pop
jne
test
js
loope
cmp
int3
into
xor
incl
ljmp
xor
pop
jno
mov
lods
stos
jmp
int
iret
pop
outsl
and
mov
adc
scas
ljmp
test
lods
xchg
cli
lcall
inc
cmc
mov
xor
push
mov
std
push
and
jb
sbb
sub
repz
data16
fiaddl
ljmp
mov
jnp
aaa
ljmp
xchg
push
adc
add
mov
xor
dec
xor
add
pop
cmpsl
jae
test
jnp
sbb
xor
outsl
xchg
arpl
jmp
lea
push
sbb
ret
push
pop
fstpt
movsl
lods
pop
call
popf
jle
fwait
mov
es
xchg
pop
popa
out
xchg
dec
jmp
add
mov
movsb
int
add
adc
adc
adc
mov
loopne
cmp
addr16
je
push
aaa
shld
cmp
xchg
xchg
gs
jae
call
in
in
mov
ds
jge
clc
outsl
leave
inc
sub
cwtl
jo
sbb
mov
lods
cmp
fistpll
mov
stc
push
fcmovbe
and
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
