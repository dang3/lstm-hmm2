inc
subb
iret
push
aas
das
in
scas
jg
ficoms
or
or
nop
fmull
roll
lea
inc
cmp
push
cmp
sbb
test
shrb
repz
jns
xlat
stos
mov
and
jle
cmp
aaa
pop
xchg
push
mov
cmp
les
sbb
ret
mov
ficoml
sahf
mov
cwtl
or
pop
mov
sbb
and
cltd
sbb
dec
mov
dec
dec
dec
jp
lods
cmp
add
iret
jbe
call
addl
or
mov
xchg
jmp
lods
pushf
and
and
cmp
adc
dec
push
push
popa
insl
movd
movsw
jns
lret
mov
lock
cld
lods
sub
inc
call
adc
gs
sahf
ret
mov
pop
xchg
inc
ficoms
inc
xor
das
xor
push
mov
rorl
aaa
add
sti
pop
out
push
aam
jle
scas
rcll
mov
out
sahf
arpl
hlt
daa
iret
mov
lahf
sbb
cmpsb
cld
or
fs
xor
dec
lahf
out
es
add
mov
cmp
pop
and
jnp
not
or
sub
arpl
jmp
aad
scas
adc
adc
push
and
xchg
cmc
loop
fcmovne
imul
insb
incb
frstor
gs
lret
mov
xchg
push
mov
stos
add
sub
or
push
stos
mov
and
out
sbb
adc
shll
int
cmpsl
sub
adc
push
and
addl
mov
lock
push
arpl
cld
xchg
pop
xlat
jg
aaa
sub
sub
int3
cmc
push
nop
rorl
pop
aaa
sub
mov
adc
cmp
jb
fsts
xchg
into
ret
jmp
sub
jecxz
adc
mov
mov
imul
mov
push
sub
dec
stc
fwait
out
test
pop
and
in
push
mov
push
or
outsb
dec
jecxz
pop
sahf
loop
xor
pop
movsb
inc
xchg
mov
dec
jp
push
lcall
pop
cmpb
subb
scas
rcl
push
insl
cmp
inc
lret
mov
pop
nop
js
cmpsl
movsb
xchg
out
outsb
sti
inc
ret
lods
dec
add
daa
xchg
inc
ja
inc
fildll
aad
cmp
cmp
or
out
dec
out
jle
psrld
add
arpl
js
inc
je
inc
leave
mov
movsl
nop
mov
mov
push
sub
xchg
stc
stos
mov
decl
mov
add
dec
adcb
outsl
lds
hlt
sub
ss
or
outsb
pushf
jp
and
scas
in
mov
gs
mov
je
xchg
mov
and
add
loopne
leave
sbb
std
jbe
cli
pop
je
pop
aaa
mov
bound
nop
add
cmpsl
das
jmp
fldl
push
into
fisubs
adc
pop
mov
stos
fcoml
lods
fdivrl
mov
push
dec
lock
mov
pop
cli
mov
rolb
jns
sbb
mov
dec
sub
jo
ljmp
add
add
andl
pop
test
jnp
ds
daa
jne
pop
or
adc
sarb
and
je
mov
jae
sub
outsb
pop
pop
call
sub
cmpsb
lahf
xorb
or
and
inc
mov
inc
fs
mov
std
fwait
sub
out
inc
int3
push
inc
sub
ss
inc
test
mov
aam
ret
insl
jmp
add
fisttps
push
jae
xchg
out
pop
inc
xchg
movsb
mov
and
outsl
outsb
add
es
fists
nop
mov
push
pop
xor
push
test
stos
jnp
mov
push
push
mov
mov
das
pushf
jle
jb
inc
xor
adc
ja
sub
out
mov
outsl
sbb
mov
cmp
inc
xor
out
push
sub
or
cmp
mov
pop
adc
jge
or
and
adc
jb
scas
jne
mov
testl
adc
xchg
push
insl
cli
jae
mov
hlt
stc
sub
xorl
sub
mov
cli
fcoms
sub
repnz
cmpl
cmp
or
push
idiv
sub
pop
in
popa
je
shlb
cltd
loope
dec
mov
cltd
das
cmp
jbe
pop
popa
icebp
test
bound
mov
rcll
xchg
xlat
jno
daa
fwait
lret
mov
cmpsb
jmp
pop
mov
push
inc
add
test
repz
dec
or
mov
pop
mov
aad
shrl
pusha
xchg
jg
sub
mov
repnz
push
cltd
cmp
cwtl
pop
and
iret
push
add
dec
cmp
cmp
push
cltd
pop
cmc
int
stos
mov
push
gs
movsb
adcl
push
in
cmp
movsl
adc
stc
dec
sub
inc
lea
inc
xor
daa
push
sub
imul
test
push
jo
shrl
cmp
and
sub
mov
xlat
sbb
sub
stos
arpl
inc
sbb
test
ss
test
inc
jmp
jle
mov
imul
sub
or
in
sbb
call
in
adc
mov
repnz
add
subl
pop
jge
aaa
dec
adcl
mov
adc
scas
jne
push
addl
mov
push
in
fprem
sbb
push
in
jnp
cs
imul
movsb
lahf
dec
call
ret
lret
lods
and
popa
sub
shll
out
add
cltd
jae
iret
and
loopne
xorb
or
cld
sahf
mov
cmp
xchg
repnz
inc
aaa
jmp
xchg
loop
movsb
mov
lret
xchg
jae
xchg
mov
or
adc
dec
js
in
movw
aaa
ss
push
inc
aam
cmpsb
push
inc
sbb
gs
cmpsb
pusha
ljmp
push
pop
mov
mov
pushf
les
fst
fs
ret
in
test
mov
orl
pusha
popa
iret
dec
not
jne
adc
test
inc
xchg
cmp
sbb
inc
sub
push
mov
rcll
lea
into
popf
jnp
dec
and
fisubrs
lods
jns
out
aad
decb
adc
cli
xlat
popa
xchg
sbb
dec
push
pop
and
shrb
test
bound
jno
xor
lret
dec
enter
iret
pop
adc
pop
imul
hlt
adc
fwait
movl
xor
sbb
add
mov
jo
shr
and
pop
fidivs
pushf
jmp
cmp
inc
shll
mov
lods
and
or
arpl
mov
pop
jbe
lret
fistps
imul
sub
repnz
dec
dec
out
pop
cltd
in
or
mov
add
ss
adc
rorb
inc
fld
or
iret
outsb
nop
xor
sub
popf
je
and
incb
and
mov
popf
mov
add
testb
xchg
lcall
test
clc
outsb
xor
insb
jbe
push
inc
xchg
mov
mov
arpl
shl
and
std
push
shrb
sbb
adc
leave
aad
outsl
shlb
nop
and
fneni(8087
jns
mov
loop
xchg
scas
test
notl
mov
mov
les
and
in
mov
inc
aad
pop
pop
lret
cmp
pop
mov
fidivs
lods
adc
ds
jge
mov
mov
cmp
movsb
in
rcl
sub
insb
or
xchg
mov
rcll
inc
aad
pop
adc
pop
lcall
call
dec
xchg
sbb
jno
popa
test
xchg
push
sub
mov
xchg
jae
sbb
sbb
inc
loop
orl
sti
arpl
dec
inc
in
pop
repnz
mov
mov
div
and
movsb
xchg
enter
sahf
sbb
xchg
xlat
std
das
popa
mov
int3
or
jno
mov
iret
mov
insb
in
out
es
gs
repz
xchg
fcmovne
push
mov
fs
out
movsl
out
inc
xchg
push
adcl
xor
and
mov
nop
rorb
cmp
popf
aad
pop
popa
fs
leave
shl
lahf
mov
outsl
sbb
inc
mov
xchg
loop
cmp
push
and
xchg
pop
popf
in
xlat
jmp
addl
mov
scas
les
cmp
scas
je
ret
cltd
jne
aad
and
lea
enter
and
push
jp
and
xchg
lods
icebp
lea
jne
in
add
mov
inc
pop
inc
mov
pop
ss
adc
sub
jno
aaa
add
lahf
sub
pop
sub
sub
adc
dec
aam
mov
jecxz
imul
clc
ljmp
stc
stos
mov
mov
jecxz
rol
push
push
mov
mov
pushf
aad
hlt
mov
pop
mov
jo
jge
cmp
mov
push
ja
rorl
es
inc
push
std
sahf
or
pop
xchg
bound
mov
push
dec
idivb
lock
cmc
js
fisttps
sarl
nop
mov
inc
mov
mov
fsubp
lods
es
lds
mov
les
testl
aam
xchg
fildl
cmc
aam
and
sti
mov
xor
fsubrl
rclb
mov
add
enter
add
sbb
mov
aaa
icebp
adc
mov
imul
cmp
fnstenv
aaa
xchg
xor
adc
cmp
xchg
popf
incb
pop
pop
xlat
mov
add
rorl
sub
stos
setge
dec
jle
insl
mov
dec
out
addr16
rcrb
loopne
inc
jae
arpl
dec
mov
jns
mov
dec
jns
add
jno
sbb
call
je
jmp
and
jo
test
pushf
test
sbb
enter
pop
sbb
push
aam
inc
jae
cwtl
mov
adc
movsb
iret
cmp
lods
js
ja
add
sub
fwait
cmp
sti
lea
cld
push
and
pop
stc
jp
arpl
les
xorl
mov
add
arpl
jle
out
inc
arpl
jl
fsubr
mov
inc
mov
pusha
ja
mov
movsl
jg
or
imul
mov
pop
cltd
fcomp
xor
push
and
imul
cwtl
cli
js
jecxz
mov
pop
or
pushl
pop
repnz
mov
shlb
sub
stos
int3
pushf
jns
or
mov
adc
imul
add
pushl
scas
jle
inc
in
cmp
test
iret
cmc
aad
mulb
fcomp
mov
in
movsl
push
out
pop
into
cmp
adc
pushw
xor
jg
mov
xor
sub
push
adc
cmp
push
push
out
aas
mov
sbb
bound
mov
fists
cli
or
cli
sbb
subb
add
mov
push
cmp
fs
inc
jge
cmpsl
outsl
dec
mov
push
pop
sbbb
movsb
inc
add
pop
push
movsl
cmpsl
leave
cmp
ja
pop
jbe
lahf
jecxz
imul
inc
inc
rolb
jnp
inc
out
mov
pop
cmp
outsl
icebp
scas
mov
out
mov
pop
push
mov
movsl
mov
sub
lods
jle
sbb
insb
push
cmpsl
scas
mov
into
imul
or
jge
inc
into
imull
add
aam
mov
jb
sbb
stc
mov
sub
cmp
mov
mov
xlat
sub
jbe
in
adc
movsb
jecxz
sub
ljmp
add
out
push
shlb
jle
sbb
add
fs
aam
jne
pop
in
lcall
jbe
into
xchg
push
jl
push
lret
adc
mov
jecxz
int
mov
lcall
push
testl
mov
mov
push
cmp
in
and
mov
push
gs
cmpsb
pop
imul
push
ror
sarb
push
mov
in
push
mov
xchg
mov
movsl
sahf
or
mov
push
stos
and
mov
mov
outsl
lret
mov
mov
push
sar
dec
mov
add
rcr
pusha
movsb
jb
jns
ljmp
dec
es
fsubrl
sbb
ret
frstor
sbbl
xchg
sbb
out
and
icebp
aam
rcll
pop
sarb
dec
xlat
adc
jle
data16
jno
mov
xchg
xor
mov
xchg
jl
dec
jle
mov
hlt
fbstp
mov
pop
mov
mov
inc
ds
jl
xchg
mov
add
jns
movsb
scas
cmpsl
pop
aas
out
xchg
push
iret
in
xor
xorl
cmpsb
loopne
add
xchg
pushf
xchg
inc
and
push
adc
ucomiss
leave
xchg
lcall
mov
push
inc
mov
scas
inc
lret
inc
dec
ljmp
jmp
imul
add
nop
dec
xchg
aad
push
pop
add
fcmovu
mov
cld
and
push
jg
rcl
jbe
lods
xchg
mov
daa
out
loope
add
and
je
pop
mov
mov
sub
inc
sub
lods
pop
fidivrs
jg
rcrl
arpl
leave
xor
xchg
std
push
clc
js
xchg
je
cmp
insb
lahf
ret
arpl
decl
inc
adc
xchg
lea
xchg
int
inc
iret
xchg
aas
shr
imul
nop
dec
imul
inc
cld
icebp
sti
imul
or
mov
inc
pop
dec
js
ja
pop
mov
push
cmp
pop
cli
mov
jl
repnz
sub
mov
sub
or
cs
out
popl
pop
mov
dec
push
mov
stos
cwtl
adc
jb
inc
fs
push
test
fwait
rcrb
into
pop
test
movsl
sahf
fcompl
das
sarb
ja
jbe
jmp
push
jnp
call
popa
repnz
and
xor
mov
test
stos
movsl
es
or
pop
mov
test
sub
enter
pop
sbb
es
or
xchg
mov
pop
addl
sahf
dec
pusha
fs
xchg
in
in
rol
mov
pushf
xchg
jne
jp
out
fdivrl
movsb
xorl
sbb
adc
int
in
sbbl
xchg
mov
cmp
jne
inc
insb
pop
cmp
pop
subl
ret
mov
fwait
adc
lahf
jnp
lahf
inc
cs
mulb
xor
into
mov
or
scas
xchg
pop
inc
or
ret
inc
aad
cmp
sbb
or
outsl
sbb
xor
mov
or
js
cmp
movsb
es
and
inc
test
pop
sub
sahf
xor
arpl
add
or
call
jno
jbe
mov
test
inc
js
push
insb
push
iret
push
push
pop
dec
call
xor
ret
loope
xchg
sub
inc
pop
and
or
pop
or
hlt
lret
push
or
out
pop
je
mov
into
cmp
out
mov
sbbb
pop
adc
dec
mov
mov
cmp
hlt
mov
push
xchg
jp
scas
add
mov
iret
xchg
cmp
stos
ss
sub
jl
xor
sub
loopne
andnps
int3
loopne
cmp
out
inc
scas
test
jno
data16
pop
data16
push
sbb
jle
push
int
inc
dec
push
push
enter
xor
inc
push
push
mov
mov
push
add
mov
xchg
or
out
push
mov
sbb
mov
sbb
cmp
cmp
xchg
mov
dec
cwtl
pop
popf
mov
jne
and
inc
adc
dec
mov
aad
ret
xchg
aad
and
dec
pop
rcrb
pusha
fs
and
pop
sarl
sbb
xchg
pop
inc
mov
popf
dec
adc
nop
movsb
mov
cmp
sbb
in
mov
dec
testl
xlat
push
or
cmp
mov
incb
jae
pop
je
movsb
sub
gs
cwtl
das
nop
push
cltd
or
fisttpll
lock
add
loop
or
inc
mov
repnz
cmpsl
dec
inc
inc
jbe
js
leave
sub
ret
in
push
rol
adc
and
cwtl
shlb
xor
into
rclb
lock
cmpsb
cmp
fdivs
or
add
lahf
outsl
inc
xor
mov
test
add
movsb
in
cs
sbb
stc
fcompl
call
lods
pop
out
daa
iret
push
lods
into
lds
stos
cld
pop
mov
jbe
xchg
in
cmp
fdiv
sub
jmp
testl
mov
push
or
mov
dec
sbb
push
xchg
mov
inc
rolb
ja
in
mov
jmp
fisubrs
xor
pop
push
mov
mov
sub
adc
sbb
mov
or
jle
rcr
cmp
fstp
ss
dec
push
sti
adc
repnz
or
and
outsl
aas
pop
push
pop
iret
xchg
mov
xor
mov
ds
test
dec
jnp
pop
sahf
adc
push
mov
mov
lret
movsb
sub
jl
xchg
jns
inc
out
aas
mov
jo
jno
ss
jge
mov
out
jmp
xchg
or
mov
in
push
pop
mov
jns
mov
addr16
add
jae
add
movsl
sub
sar
add
sbb
pop
aad
or
aas
por
cwtl
cmpxchg
insl
xchg
or
aaa
push
pop
jb
int
cmpsb
nop
aaa
pop
int
imul
push
lahf
jno
cli
cld
cmp
aad
jb
outsb
shrl
loope
fildll
add
dec
or
and
mov
das
mov
bound
push
pop
xor
mov
cmp
fcompl
and
hlt
xchg
mov
test
lret
das
hlt
xchg
sbb
iret
fwait
lock
rorl
mov
sbb
sub
sub
sahf
xchg
inc
adc
sbb
outsl
out
bound
pusha
mov
daa
enter
sar
hlt
cli
roll
push
push
in
popa
push
sbb
out
sbbb
or
mov
test
mov
push
icebp
sub
mov
out
or
push
push
loope
jne
cmp
mov
xor
cmp
inc
outsb
es
arpl
pop
dec
pop
int
push
in
cltd
pop
movsl
fucom
pop
insb
decl
or
shrl
push
jbe
xor
gs
lea
cld
sti
shlb
ret
ljmp
out
dec
aas
and
xor
inc
stos
mov
arpl
dec
jle
dec
repnz
lods
in
mov
rorb
dec
sbb
iret
test
adc
xor
or
cmp
inc
daa
inc
mov
sbb
out
jmp
pushf
insb
cmpsl
sarl
mov
jmp
pop
and
mov
pop
adc
in
and
popf
enter
out
shlb
aam
sbb
imul
pop
psubw
ret
lret
ljmp
xor
xchg
mov
jl
push
or
and
iret
stos
dec
inc
cwtl
sub
cmc
bound
cwtl
mov
imul
fisubs
test
cmp
push
mov
mov
ror
xor
into
jmp
mov
idivl
inc
or
les
jl
push
jno
cmpsl
lods
nop
inc
mov
jb
mov
ss
pop
pop
mov
mov
and
daa
idivl
lods
inc
xchg
xchg
aaa
sbb
mov
cmp
mov
cmpsl
lret
fsubrs
cmc
sbb
fwait
jnp
lahf
push
lret
xchg
insb
or
imul
call
enter
xor
clc
jle
cltd
sub
xchg
lock
in
mov
mov
fisttps
fiaddl
dec
and
fidivl
lods
cmp
stc
rorb
mov
rcll
jmp
lcall
mov
std
loope
cmpsl
lea
inc
sahf
enter
mov
mov
les
int3
loopne
push
lret
add
dec
pop
jp
or
and
mov
push
mov
lock
xchg
push
adc
sbb
js
imul
std
fdivr
pop
add
mov
cltd
mov
cmc
xchg
fistps
inc
inc
push
out
mov
int
aad
mov
fistps
sub
stos
mov
add
or
pop
adc
popf
imull
inc
mov
mov
inc
xchg
mov
movsb
adc
icebp
gs
adc
sbb
pop
xor
xor
pop
adc
es
pushf
bound
mov
sahf
aad
dec
pop
mov
fldl2e
loopne
test
adc
aas
cmc
cmp
lcall
outsb
xchg
jg
sbbl
in
inc
pop
fsts
adc
lret
in
out
cmp
add
int
rcrb
fidivl
movsb
pop
pop
push
loopne
pop
addb
inc
sbb
jb
sub
xor
or
add
aaa
fdiv
in
sub
daa
loop
xlat
sub
icebp
mov
dec
ja
faddl
test
test
jae
cs
stos
push
mov
setb
push
mov
sub
leave
repnz
movsl
jle
sbbb
inc
bound
cmp
outsl
lahf
adc
and
mov
or
scas
sub
test
outsb
jge
pop
imul
aas
stc
out
adc
add
mov
rclb
add
imul
mov
cli
dec
push
sbb
inc
lods
add
push
in
stos
dec
nop
cltd
insb
test
mov
push
xchg
push
andb
sub
and
imull
mov
enter
incb
push
scas
movsb
outsb
push
hlt
pop
scas
outsl
and
add
nop
fstpt
pusha
dec
loope
aas
sahf
add
sub
test
and
cmp
pop
dec
mov
jo
shrl
mov
inc
std
leave
ret
fs
lods
adc
inc
add
mov
jb
cmc
xchg
add
sub
imul
sbb
fmull
test
mov
cmp
sub
cmp
sub
fcmove
ret
xchg
push
jae
and
pushl
dec
and
mov
shlb
adc
xchg
mov
insb
pusha
sub
inc
or
adc
lock
bound
jo
mov
mov
aaa
aaa
arpl
adc
ds
sbb
stc
repnz
and
rcrb
enter
out
movsb
stc
das
add
ljmp
scas
insl
adc
popa
xor
popf
in
xorl
cmp
fdivl
movsb
xor
push
daa
gs
jle
je
sbb
popf
cmp
sbb
lcall
mov
jp
mov
clc
sub
popf
outsb
mov
imul
daa
push
cld
mov
orb
jp
sub
jne
lahf
sbb
std
or
and
nop
outsl
adc
xor
pop
xchg
push
pop
test
maskmovq
testl
inc
roll
jp
int
mov
fadds
daa
jo
sub
rcll
out
das
and
mov
jnp
pop
cld
and
mov
clc
aaa
lcall
movsb
push
pop
jecxz
cmp
loope
sbb
ror
mov
add
cld
clc
stc
loope
dec
and
inc
push
scas
sub
jne
mov
xor
push
xorb
add
js
add
fidivl
mov
push
sti
adc
push
pushf
fsubs
pop
mov
push
fwait
xchg
ret
leave
jae
popa
ljmp
sar
inc
inc
mov
xor
xlat
fsubl
repz
sub
mov
inc
mov
sub
in
sub
movsl
push
lock
mov
push
sub
push
jg
push
push
ljmp
hlt
xchg
inc
pushf
cmp
out
jbe
add
movsl
mov
sahf
lock
pop
adc
inc
pushf
popa
xor
call
add
lods
les
mov
stc
sahf
mov
lods
fnstenv
into
mov
cwtl
sub
out
inc
lods
ret
scas
dec
out
cmp
pushf
stc
les
sbbl
and
inc
inc
aad
and
nop
divl
xorb
repz
fsubrs
orb
add
fwait
or
rolb
pop
lock
push
lods
aaa
lods
pop
fisttps
inc
push
iret
cmp
add
popf
sub
scas
cwtl
jp
sar
std
push
pop
mov
cmp
mov
adc
aaa
cmc
lret
ret
fistpl
daa
xor
ds
mov
fildl
cmpsb
jbe
adc
repz
mov
jbe
sbb
arpl
out
enter
dec
repz
xlat
push
movsb
xor
insl
outsb
arpl
mov
cmp
xor
mov
jmp
push
or
scas
aas
sbb
mov
rcrl
inc
scas
pop
xchg
xchg
push
mov
push
or
inc
enter
popa
push
popa
hlt
lods
pop
pushf
ss
pushf
adc
xchg
ss
jbe
imul
bound
add
xchg
divb
sub
lret
ss
mov
fstl
dec
add
in
adc
insl
loopne
push
sub
lret
pop
push
in
add
rol
sub
vsqrtps
jb
in
push
and
sbb
mov
enter
mov
popf
into
xchg
adc
imull
popf
or
lods
mov
and
cmp
mov
repz
dec
sbb
in
push
inc
sub
push
hlt
mov
nop
sbb
and
inc
xlat
pop
mov
stos
inc
lea
xchg
xchg
pusha
fwait
stos
xchg
or
cwtl
bound
mov
clc
rorb
cwtl
cs
or
fidivrl
ljmp
inc
fwait
push
hlt
mov
andl
cmpsb
push
cmpsl
in
push
mov
out
mov
fnstcw
lea
popa
push
add
in
mov
inc
loop
imul
push
add
inc
push
dec
ljmp
adc
mov
rcrl
jno
fdivs
jbe
imul
inc
jl
cld
adc
outsl
in
cmc
xor
out
sub
bound
push
add
out
ret
mov
add
or
insb
outsb
mov
mov
lahf
pop
mov
loope
fs
mov
inc
or
divl
incl
jmp
pop
loop
js
out
dec
cmp
xorl
setge
fildl
inc
pop
jno
jb
jp
xorb
imul
dec
sahf
sti
and
aaa
push
dec
sbb
shlb
xchg
dec
sti
mov
cwtl
pop
scas
sbb
mov
or
inc
aaa
sbb
dec
mov
mov
pop
js
mov
sbb
inc
or
sub
mov
and
mov
mov
xlat
cmp
push
push
cltd
xchg
sti
movsb
shrb
mov
jns
mov
fprem1
mov
push
or
rolb
or
cmp
inc
mov
sub
addl
push
mov
inc
movsl
adc
pop
fmull
mov
sarl
mov
inc
ret
cmp
xor
sub
jle
fidivrl
imul
je
test
testb
cmpsb
test
loopne
fisttpl
in
add
loop
inc
or
sub
lea
sahf
or
mov
dec
dec
cmpl
pushf
adc
sbb
stc
pushf
fs
leave
in
icebp
pop
jmp
add
push
jl
jo
inc
in
xor
pop
out
mov
cmpb
test
sti
inc
mov
and
mov
sub
fiaddl
add
jae
cld
cs
out
adc
out
das
inc
repnz
popf
icebp
pop
repnz
jnp
loopne
xchg
ja
push
aas
aaa
fcompl
pop
sti
daa
movsb
push
repz
and
xchg
mov
dec
paddsb
sub
scas
sub
subl
jne
mov
insb
jg
mov
ss
stos
dec
pop
in
mov
decl
sub
xchg
faddl
jb
lcall
dec
mov
in
loop
add
outsb
das
mov
orb
int3
movsl
cmp
gs
inc
jbe
sbb
aaa
int3
or
mov
mov
xchg
fcomps
inc
xor
jle
sub
push
sub
pop
sbb
in
inc
aaa
popa
fstpl
xor
or
ret
fiadds
and
les
dec
in
mov
dec
subl
inc
add
sti
ljmp
push
test
and
daa
mov
xchg
fnstenv
int
push
fadd
popl
in
mov
jmp
aaa
mov
jb
aad
fiadds
sbb
gs
push
jbe
add
mov
gs
fdivrs
mov
in
dec
pop
xor
or
xor
or
xchg
lock
nop
jb
mov
inc
mov
cmp
add
jge
rorl
addr16
xchg
mov
jmp
xchg
es
adc
sub
aad
sbb
push
xor
icebp
jp
pop
mov
dec
dec
xchg
mull
aaa
and
shll
inc
mov
jecxz
dec
incl
inc
xchg
dec
jge
adc
cmp
mov
sbb
leave
inc
inc
leave
jmp
mov
push
ret
sahf
cmpsb
jo
sbb
fadd
add
jae
ljmp
inc
jl
divl
xchg
pop
cs
je
lods
mov
lds
insl
cmp
outsl
xor
movb
lret
dec
stos
mov
sub
fsts
xor
scas
jmp
xor
nop
xor
pop
lret
xchg
and
jg
ret
or
pop
jge
hlt
or
jae
fidivl
xchg
leave
mov
in
cmp
push
and
cmpsb
lret
mov
mov
lcall
insb
inc
fiaddl
outsl
pop
xor
cld
mov
and
xor
pusha
out
sbb
adc
repnz
adc
enter
faddl
and
and
ret
rorl
and
add
icebp
pop
adc
dec
lret
daa
cli
adc
sarl
bound
mov
sub
inc
mov
pop
cmpsl
fdivp
imul
jp
cmp
inc
sbb
repnz
cmp
push
jne
das
xor
or
mov
test
movsb
pop
xor
cmp
subl
cltd
fbstp
adc
adc
dec
repz
pop
and
mov
test
stos
add
test
pop
jp
mov
inc
jp
push
mov
sub
push
inc
push
xchg
popf
sbb
inc
cmpsl
push
mov
or
and
mov
cs
and
fnsave
stc
das
cmp
sub
xor
push
cmp
gs
clc
push
or
sti
jae
ss
sub
gs
cmpl
sbb
test
mov
jo
or
sub
adc
fisubl
ror
lods
or
jae
jae
add
xor
es
mov
movsb
adc
jg
call
mov
inc
iret
aas
fdivs
mov
stos
dec
push
xor
jne
imul
add
sub
jbe
loope
jle
sahf
inc
imul
xchg
xlat
cmc
cwtl
sbb
and
loope
ret
sbb
idivb
mov
enter
inc
mov
or
dec
pop
rorl
mov
icebp
lahf
ljmp
xchg
pop
lret
dec
bound
das
int3
adc
cmp
je
fcoms
mov
cmp
imulb
xor
aad
cmpsl
xchg
push
mov
pushf
fwait
jns
xor
inc
test
pushf
jno
lods
mov
les
test
mov
sub
jns
test
push
ja
add
mov
movsb
loop
pushl
jbe
xlat
aam
sub
jbe
mov
or
aas
popa
mov
dec
add
das
adc
push
cmpsb
stos
lds
pop
enter
into
inc
loopne
loopne
into
dec
xor
cmp
ret
mov
lcall
or
cltd
bound
inc
push
nop
jae
test
mov
lret
push
xchg
jno
jb
mov
lock
pop
xchg
jne
icebp
movntq
or
cmp
gs
rorl
pop
icebp
arpl
insl
mov
pop
pop
pause
mov
insl
mov
jns
add
fstps
popa
ja
cmpsl
sbb
jno
shrl
into
push
movsl
inc
rcrb
imul
mov
inc
mov
mov
fimuls
movsb
mov
mov
sbb
mov
dec
push
jne
sub
testb
dec
and
out
repnz
xchg
add
addr16
ret
rorl
and
hlt
aaa
std
mov
aaa
popl
fisubrs
imul
mov
roll
std
test
ds
mov
int3
ficomps
lret
nop
cmp
fdivp
lahf
scas
mov
push
push
pop
out
movsl
dec
sbb
addl
jl
pop
push
pop
out
push
fsubp
call
sahf
iret
lea
fnstsw
in
mov
cmp
inc
fldcw
outsl
jp
dec
sbbl
addl
sbb
loop
aam
sbb
in
sbb
rcr
incl
mov
xchg
jne
jnp
mov
lock
pop
mov
jno
cli
decb
mov
cmp
sub
inc
gs
and
jne
in
add
adc
pop
push
outsl
cmpsb
push
fmul
fldenv
stos
hlt
inc
lcall
adc
imul
loop
mov
jno
fs
lock
lret
loopne
xchg
es
insl
push
lea
or
cli
and
fisubrl
test
mov
add
cmp
xor
outsb
daa
mov
leave
cmp
mov
mov
jle
cmp
mov
sahf
inc
mov
pop
outsl
repz
sbb
jg
mov
dec
adc
call
clc
push
mov
mov
or
inc
mov
stos
ss
dec
insl
xor
xor
mov
shrl
lcall
je
hlt
xor
sti
and
lcall
subl
adc
ja
inc
xor
div
fnstcw
movsb
sub
in
and
sarl
push
scas
sbb
cmp
dec
inc
sub
mov
lods
out
movsl
movsb
jg
pop
xchg
lock
ja
push
pop
or
mov
aam
pop
rol
mov
aad
out
cs
jnp
push
pop
push
jge
gs
jl
sbb
or
sahf
pop
xchg
test
movsl
dec
cmc
inc
aas
in
or
jbe
inc
sarl
push
std
sar
shlb
ret
xor
out
test
fld
mov
cli
sti
sbb
popa
xor
lods
push
cmpsl
outsb
jge
loope
mov
cmc
adc
bound
sbb
cli
popf
outsb
xchg
add
aas
adcl
push
push
outsb
es
je
popf
push
sub
popf
mov
add
pop
jp
inc
mov
scas
push
outsl
inc
adc
cmp
adc
sahf
pusha
mov
bound
xchg
sbb
fisubs
xor
rcrl
mov
xlat
mov
fucomp
arpl
jge
test
mov
push
mov
push
int
cmc
aas
cld
add
inc
sti
sub
dec
cs
ja
xor
aad
mov
xchg
inc
pop
and
mov
xor
sbb
mov
mov
test
push
lock
xor
hlt
cmpsl
insb
xchg
pusha
lea
xchg
xor
je
movsl
cmp
cmpsl
sbb
push
loopne
and
ljmp
mov
dec
xchg
mov
xor
xchg
lods
dec
les
or
jb
fsubp
push
in
into
xchg
xchg
and
jecxz
outsb
popf
and
sbb
addr16
push
xor
ja
sti
add
mov
out
mov
mov
xchg
imul
vunpckhps
fisttpl
mov
jp
addr16
adc
mov
sbb
add
and
imul
adc
bound
dec
mov
xchg
mov
movsb
xor
ja
movsb
push
or
mov
cmp
je
xchg
pop
paddd
es
insb
jnp
sbb
push
sbb
inc
stos
and
sbb
fisubrl
pop
scas
sbb
test
and
cltd
jnp
push
fwait
aaa
scas
popf
outsl
xor
mov
stc
mov
movsb
je
push
xor
adc
shlb
ret
inc
pusha
cli
daa
sbb
pop
dec
and
adc
add
lods
aad
out
es
inc
pop
inc
sbb
aad
jae
pushf
test
pushf
dec
cmp
mov
int3
lods
in
in
cmpsl
dec
ss
popl
mov
mov
xchg
mov
mov
and
jno
mov
jp
sub
dec
pushf
popf
inc
add
push
jle
lods
inc
xchg
je
push
push
addr16
sub
fmulp
std
jnp
cmpsb
cmpsl
mov
lcall
lds
or
xchg
push
ret
push
mov
scas
sbb
or
push
outsl
or
popa
mov
enter
push
daa
jbe
dec
cmp
ss
mov
lods
xchg
cs
pop
imul
popa
shrl
jne
jg
jae
or
push
pop
push
pop
test
push
call
ret
or
cli
xor
scas
push
lahf
popa
call
fdivl
inc
inc
push
in
jge
xor
xchg
mov
idivl
sub
jb
in
test
mov
test
fsubrl
loop
in
aam
mov
fistpll
and
ss
test
jnp
mov
test
mov
fs
movsl
incb
xchg
and
jl
dec
and
and
mov
xchg
cmpsl
sub
iret
jnp
movsb
mov
push
dec
lret
cwtl
push
jne
ds
clc
mov
ljmp
arpl
sub
ja
mov
sub
mov
jno
mov
dec
push
call
dec
rorb
aas
mov
fcmovu
daa
push
lahf
add
pop
push
les
add
out
xlat
pop
pushf
lahf
stos
cmp
dec
inc
xchg
or
mov
icebp
jge
jae
lcall
mov
xchg
and
icebp
xor
adc
hlt
and
or
adc
adc
out
add
bound
insl
dec
subl
pop
jbe
lahf
jae
out
jne
jne
clc
jb
push
xor
and
push
iret
popa
nop
mov
adc
cltd
jae
dec
jo
out
dec
inc
xor
out
idivb
mov
ss
enter
push
pop
hlt
xchg
dec
jae
mov
push
loop
adcl
es
mov
pusha
pushf
jle
cmp
mov
adc
mov
insl
aad
jb
test
test
mov
imul
jl
push
in
shrl
dec
pop
test
mov
jae
and
xor
mov
sbb
push
dec
out
xor
mov
lret
mov
pop
mov
inc
sub
incb
movsb
popa
mov
mov
jae
xor
ss
mov
add
push
cmpb
sub
jmp
mov
jb
out
rolb
aaa
inc
mov
mov
mov
jle
sbb
push
pop
daa
int
mov
cmp
jmp
iret
mulb
fs
int3
dec
mov
fcmovnbe
dec
cld
arpl
aad
dec
pop
movb
jne
fists
and
into
addr16
movb
fneni(8087
inc
testl
sbb
pop
call
or
addr16
fwait
icebp
stos
pop
cltd
data16
and
cwtl
sub
test
jbe
sbb
mov
fcmovb
dec
dec
ja
push
repz
loopne
rorb
iret
jno
xor
fistpl
mov
mov
inc
add
sbbb
cmp
pop
test
mov
jns
inc
push
into
outsb
insb
stos
lea
inc
inc
mov
cmc
dec
cltd
or
fstpt
ljmp
mov
or
or
cs
push
ret
inc
bound
xor
and
cmp
inc
pop
repz
sahf
add
and
inc
daa
sarb
mov
aam
andl
ror
jmp
mov
pop
lahf
add
mov
mov
test
pop
ds
popf
xlat
mov
sbb
xchg
push
jl
mov
add
shlb
bound
xor
clc
repz
add
inc
loope
inc
jl
xlat
jns
xor
add
inc
xchg
sub
sti
jb
mov
adc
jg
dec
movsl
sbb
push
inc
push
out
fwait
out
lret
imul
loop
inc
dec
xchg
sti
jle
push
xchg
loope
bnd
les
pop
in
and
inc
nop
out
sub
in
ja
stc
clc
adc
jns
jns
fidivs
out
frstor
sbb
sub
or
cmp
mov
out
dec
mov
lret
xchg
jne
xchg
bound
insl
mov
pop
jno
fbstp
or
lcall
leave
in
lea
lds
dec
cmp
repz
and
lock
or
icebp
sbb
addl
mov
mov
jns
ret
aam
and
lods
mov
xchg
std
push
outsl
xor
mov
mov
xchg
roll
adc
adc
push
lret
imulb
and
mov
or
and
arpl
xor
push
xchg
enter
mov
dec
enter
hlt
nop
add
loop
push
dec
popa
jle
xchg
arpl
push
add
dec
dec
mov
mov
cwtl
test
add
repz
nop
cld
mov
inc
mov
popf
jns
or
jmp
jge
mov
add
dec
out
and
and
rolb
pop
pop
int
mov
lret
aam
inc
push
test
in
lock
sarb
out
push
clc
pop
cmp
and
mov
ficomps
pop
and
paddusb
aad
scas
xchg
repnz
lcall
jp
jae
add
stos
or
or
dec
popa
mov
ret
dec
repnz
inc
add
mov
aas
add
inc
out
adc
aam
xchg
or
repnz
mov
stos
xor
arpl
stos
add
loope
push
adc
nop
xchg
sub
dec
jmp
jmp
dec
push
push
int
or
outsl
movsl
aas
xchg
xchg
nop
ss
lret
enter
ss
bound
mov
jl
pushf
or
cmp
push
outsl
mov
dec
dec
or
adc
arpl
dec
jb
aas
dec
jb
adc
xchg
xlat
pop
lcall
and
movsb
ret
mov
aam
ret
xor
jno
orb
dec
and
xchg
xor
xchg
xor
sbb
mov
cs
scas
dec
lret
andl
pop
add
dec
jae
sub
mov
negb
shl
repnz
call
in
pop
out
xor
and
xchg
xor
out
fs
mov
lock
lea
dec
in
pushf
fcoml
shll
rorb
cmpsb
sbb
fldenv
loope
add
cmpsl
and
testl
gs
mov
jp
ljmp
sub
ja
mov
popl
jl
push
movsb
repz
ret
push
stos
pop
push
adc
imul
mov
mov
and
jle
pop
out
sbb
adc
sub
iret
mov
pushf
and
popf
pop
insl
in
rcrb
nop
pop
test
call
cltd
lret
ds
xchg
scas
mov
negl
sahf
cmp
cwtl
repz
lods
outsb
push
adc
ja
and
xlat
mov
push
xchg
push
inc
sbb
out
outsl
lods
gs
stos
mov
push
jle
rclb
faddl
das
cwtl
sub
icebp
aaa
push
pop
iret
dec
nop
xchg
jne
les
pop
movsb
sub
mov
push
mov
ds
pop
mov
repnz
add
cmp
iret
xchg
or
inc
roll
sbb
xchg
mov
fstl
xor
sbb
mov
sub
fldenv
aad
cs
mov
ret
jb
cltd
pop
iret
clc
inc
stos
shrl
cli
fisttpl
jp
in
scas
mov
inc
mov
xchg
lret
push
jne
mov
mov
mov
in
pop
sub
or
cltd
push
push
cmp
and
das
adc
jl
ja
jns
stos
mov
adc
ret
mov
mov
inc
sahf
inc
in
push
ja
hlt
lcall
dec
add
imulb
mov
outsb
outsl
outsl
out
orl
mov
mov
jno
js
lods
icebp
imull
adc
call
jno
dec
into
mov
dec
or
sub
fdivrs
add
adc
cmp
rclb
mov
inc
inc
push
pop
jae
or
insb
adc
fidivrl
or
out
ret
movsb
adc
mov
ret
stc
imul
dec
dec
adc
addr16
push
pop
in
je
sbb
pop
fwait
inc
xor
lret
jne
sub
icebp
xor
repnz
cmp
mov
pushf
push
in
insb
inc
mov
jl
mov
or
xchg
aam
test
push
mov
jb
add
rcrb
dec
imul
cmpl
ficoms
insb
test
jbe
or
and
pop
lahf
jnp
aaa
xchg
jl
mov
mov
fwait
mov
xor
lret
mov
lods
cmc
test
test
lods
inc
inc
andl
shrb
pop
in
das
outsl
adc
das
adc
cmp
daa
jno
lcall
fadds
xor
cli
test
lcall
mov
jle
insb
sbb
loope
mov
ss
mov
fstps
mov
add
pop
inc
cld
test
out
movsb
jnp
mov
push
or
mov
pop
xchg
rcrl
dec
add
mov
xchg
cmpsb
cld
dec
xlat
jge
pop
js
dec
mov
mov
test
aas
enter
jae
pop
std
aas
jb
push
xor
mov
cltd
imul
sbb
sbb
js
lret
dec
cmp
jbe
es
paddd
and
enter
pop
fistpl
mov
dec
mov
mov
jne
xlat
xor
cmpsb
xchg
mov
imull
ret
jmp
rcrb
inc
out
inc
jp
lock
lahf
sbb
add
cli
dec
movsb
cwtl
mov
or
or
jmp
repz
fsubl
ja
lock
es
syscall
or
xlat
and
leave
cmp
fwait
mov
add
je
xchg
sti
dec
out
loop
stos
rcrb
popa
movsb
in
pop
jae
cmpsl
fnsave
addr16
jp
mov
inc
xchg
setl
inc
pop
incb
jmp
loopne
push
pop
mov
mov
jle
insb
adc
sahf
inc
jbe
out
enterw
cld
rcr
mov
adc
sbb
xor
jno
in
aad
adc
push
lret
add
sbb
or
je
xor
xchg
lcall
sbb
ret
mov
pop
lcall
xor
jne
push
xor
mov
cli
pop
scas
mov
gs
mov
fs
push
sbb
adc
fcmovbe
aad
mov
mov
push
push
xor
imul
insb
cmp
fdivs
imul
rorb
adc
push
nop
pop
mov
sbb
divl
dec
mov
sbb
test
push
push
mov
sti
push
push
xlat
mov
xchg
out
or
imul
call
jg
lahf
in
pop
cli
or
cwtl
popf
xchg
inc
push
inc
cmp
jbe
cmp
push
loopne
filds
data16
test
add
pop
mov
mov
xchg
adc
pop
cmc
inc
and
or
lret
jmp
add
jp
shll
push
lods
sub
push
push
jp
in
add
xor
idivb
inc
daa
test
mov
xchg
fbstp
jnp
stos
stos
or
into
pop
push
shrb
mov
adc
cli
insb
inc
push
xchg
jno
out
aad
bound
push
add
cmc
enter
test
cmp
out
sahf
into
lahf
sbb
mov
pop
push
mov
mov
mov
and
inc
mov
jge
sub
mov
xchg
test
js
or
repnz
or
push
pop
stos
mov
cmp
push
movb
cmp
mov
xorl
icebp
pop
jbe
jle
loopne
fcom
repnz
loop
adc
mov
cmpb
les
push
mov
imul
repz
ss
xor
lock
int
or
enter
adc
std
sbb
push
jnp
add
test
loope
fucomi
call
out
mov
adcb
out
int3
push
lret
loopne
pop
mov
push
mov
in
fildl
mov
mov
push
repz
mov
xorb
inc
arpl
dec
out
mov
cmpsl
aam
cltd
push
jle
je
in
int3
and
cwtl
ret
lods
xor
dec
ret
out
sbb
imul
es
pop
lock
dec
jecxz
mov
push
mov
add
mov
test
pop
adc
cmpsb
xor
xor
or
jns
cs
sahf
outsl
lret
push
movsl
fs
mov
push
roll
mov
mov
inc
sti
mov
mov
scas
push
filds
sbb
clc
dec
adc
xchg
adcb
call
cltd
pop
ret
push
jge
call
shrb
jb
out
pusha
aad
psubd
cmpl
jbe
out
lcall
repz
and
fmuls
lcall
andb
in
or
sub
xchg
sarl
insb
imul
mov
or
xchg
dec
jmp
mov
arpl
loope
fldcw
sbb
xor
shrb
mov
mov
rolb
outsb
mov
cmp
jbe
shlb
pop
stos
inc
jl
mov
xor
cmpsl
or
or
je
sbbb
dec
test
sbb
inc
cltd
enter
scas
adc
mov
mov
into
leave
sub
out
and
sbb
stos
loope
cmovo
add
jmp
insl
mov
dec
jbe
sub
xchg
xchg
loop
mov
dec
lret
adc
push
push
loopne
out
sub
adcl
xchg
xor
repnz
push
insl
jmp
insb
dec
mov
or
out
lods
cli
pushf
jl
cmpsb
xor
cmpsb
daa
pop
icebp
sarl
xor
bound
mov
cmp
push
inc
mov
cmp
rcrl
jle
addb
shll
mov
mov
cmove
int3
enter
cmpsb
mov
add
lahf
cmpsl
nop
mov
aam
hlt
inc
sbb
aaa
mov
pop
outsl
jnp
lock
fchs
pushf
orb
ret
je
mov
xor
lds
test
inc
jne
jne
mov
aas
xor
loope
imul
aaa
mov
mov
test
jo
lcall
xor
ret
cld
pop
fcoml
frstor
sub
negb
aaa
inc
cmpsl
fucomip
mov
push
sbb
mov
aad
inc
loope
dec
push
dec
inc
adc
mov
lods
or
cmp
mov
jae
mov
popf
fs
push
cs
cli
add
add
jo
xchg
jge
sub
jecxz
jg
xor
mov
sub
dec
aaa
jne
mov
push
xor
insb
insb
push
int
clc
mov
fs
sbb
cmp
dec
scas
xor
jecxz
mov
and
dec
gs
adc
and
stos
enter
mov
jnp
ret
push
lods
les
icebp
retw
dec
bound
and
sub
rol
neg
xor
mov
scas
xlat
sbb
popf
add
cmp
test
add
imul
shll
stos
stc
mov
dec
insl
loope
or
sbb
aaa
lret
mov
xchg
aas
pushf
jb
or
stos
ret
test
cmc
or
in
loope
mov
fstpt
or
fsubs
loopne
push
leave
ja
dec
jg
fisubs
pop
stc
notb
xchg
mov
pop
test
jmp
add
call
pop
xor
mov
sub
xor
pop
sbb
popf
and
das
lret
and
sub
js
lea
loopne
insl
cmc
movsl
mov
insb
fsubr
and
leave
add
fldpi
rol
xchg
cmp
sti
mov
xchg
push
jl
ja
and
add
sarl
pop
mov
add
mov
pop
loope
in
test
mov
jno
jmp
adc
pop
enter
jle
out
mov
mov
shufps
adcb
dec
daa
dec
test
sbb
or
or
fstpl
inc
lds
rorl
mov
imul
clc
out
pop
enter
mov
aam
pop
popa
push
add
mov
jmp
xlat
lds
pop
add
cmpsl
xchg
aam
mov
popf
aaa
lds
sti
cmp
mov
sub
push
je
cmp
test
push
decb
sbb
xchg
rcrb
pusha
cli
xlat
sti
loop
test
inc
jns
push
jo
mov
push
insl
iret
dec
jecxz
sub
cmp
pop
mov
aam
lahf
xchg
sar
and
jbe
sbb
add
in
sbb
adc
subl
cmpsb
or
push
cltd
rolb
push
hlt
fs
gs
adc
pop
jle
lds
jae
jmp
mov
outsb
test
int
jnp
leave
inc
ja
sti
xchg
xchg
jecxz
jge
and
mov
outsb
cltd
ss
or
push
pop
in
pop
rcrb
outsb
cmpsl
outsb
leave
and
imul
in
ffree
fsubs
cmc
lock
cmp
outsb
xchg
sahf
or
push
mov
fs
pop
sub
mov
repnz
sub
sbb
adc
cltd
mov
dec
gs
ljmp
jp
inc
xorl
xor
push
enter
sub
clc
sub
loopne
adc
jge
inc
push
js
pop
mov
inc
repz
mov
sbb
sub
pop
aam
jb
pop
inc
mov
pop
add
cmp
xor
add
int3
xchg
js
inc
testl
and
sbb
sbb
mov
mov
stos
and
lods
icebp
xor
and
jle
inc
add
mov
les
sub
testb
adc
or
rcll
lods
mov
mov
das
out
add
pop
push
adc
icebp
movb
pop
mov
pop
jb
cmp
mov
out
push
sub
jno
cmp
add
aad
jmp
cs
arpl
mov
pop
dec
outsb
sub
mov
pop
subb
loop
jb
jge
sub
sub
pusha
adc
sbb
jbe
xchg
orl
out
in
sub
in
pop
je
lret
push
lret
mov
mov
shll
xchg
rcrl
sub
sub
cmpsl
sbb
sarb
mov
jbe
mov
pop
cli
mov
push
mov
push
movsb
ret
mov
repnz
cmp
fldenv
into
mov
cmpsb
lahf
test
add
xor
jg
divb
mov
dec
dec
fisubs
push
xor
xor
and
inc
lods
popf
addr16
jo
xchg
jle
repz
mov
jg
sbb
push
scas
daa
push
fcoml
xor
ss
rorl
cmp
jecxz
push
cmp
cmpsl
adc
shll
add
pop
inc
popa
push
mov
cs
lods
mov
ljmp
sar
sub
repnz
jp
std
out
int3
cmc
jae
enter
dec
and
adc
ja
loope
fcmovnbe
dec
je
inc
mov
or
loopne
rcrl
push
insb
loopne
in
leave
dec
jmp
test
add
cmpsl
xchg
or
loop
mov
imul
sub
lret
adc
xchg
mov
shlb
push
aas
stos
mov
ljmp
jl
ror
mov
scas
loop
or
fisttpll
push
push
cmpsb
push
in
pop
mov
sbb
jae
push
and
xchg
lods
fs
testl
jg
or
lahf
pusha
out
insl
or
loop
or
mov
jle
mov
sbb
and
push
outsb
push
mov
mov
popf
jb
movsb
stc
pusha
orb
imul
adc
xchg
fimull
xor
in
sbb
inc
pop
mov
adc
cmpl
pop
xchg
pop
lahf
mov
cmp
pusha
or
icebp
call
add
out
popf
xchg
ja
xlat
mov
hlt
mov
insl
mov
lcall
xor
mov
xorl
subb
or
movsl
add
push
fucomip
jg
mov
leave
fisttps
sarl
outsl
ss
je
cwtl
nop
pop
test
shll
dec
mov
sahf
mov
sbb
out
insl
das
lea
and
mov
jns
jecxz
mov
mov
jp
icebp
jne
push
loope
adc
xor
lock
xchg
hlt
and
cli
inc
xlat
inc
mov
popa
aam
fcmovne
pop
sbb
pop
push
and
push
push
repz
into
sti
jge
mov
dec
mov
jg
xchg
push
bound
mov
int
sbb
xchg
xchg
jns
test
daa
sub
mov
lds
std
sbb
inc
xchg
bound
pop
test
cmp
adc
repnz
push
jo
mov
aad
mov
push
mov
xor
js
push
movsl
add
mov
outsl
xchg
repz
in
hlt
cmp
jge
sti
xor
add
cmp
iret
les
jmp
xchg
jg
or
call
outsl
test
mov
in
or
jbe
push
sbb
inc
icebp
mov
pop
mov
mov
loope
mov
adc
adc
xlat
inc
xchg
xor
fdivrl
mov
pop
test
dec
ret
xchg
push
and
push
fidivrs
push
or
outsb
mov
push
ficoml
adc
enter
test
hlt
stos
mov
outsb
adc
mov
lret
pop
inc
dec
sbb
icebp
mov
add
imul
aas
mov
jmp
cltd
mov
or
in
pop
sarb
cmpsl
mov
xor
dec
adcl
mov
fdivs
lods
push
es
mov
aaa
xor
movsb
push
lods
in
fistpl
fld1
cltd
push
shlb
stc
popa
sbb
out
lock
lret
in
shl
dec
and
jmp
push
jge
xor
jmp
pop
cld
jo
mov
xlat
push
stc
mov
imul
pop
push
addr16
in
lods
cmp
cmc
jp
add
cmp
jge
test
xchg
into
pop
loop
push
push
andl
pop
dec
xchg
mov
and
test
xor
mov
fbstp
fistpll
mov
xchg
adc
daa
idivl
push
jae
lret
mov
mov
sbb
loopne
inc
ljmp
xchg
push
push
ds
pop
andb
and
cwtl
add
inc
and
inc
sbb
push
test
ss
into
mov
insb
pop
bnd
jle
mov
push
xor
mov
arpl
jb
call
pop
or
bound
int
sub
mov
pop
mov
xchg
stc
jns
mov
call
ret
iret
insb
pusha
sbb
pusha
sub
lods
fsubs
push
push
into
fistpl
lock
cmp
pop
mov
xlat
push
movsl
insb
test
jae
pop
pcmpeqd
and
aaa
dec
and
push
push
cmpsl
ficoml
test
xlat
or
cmp
push
inc
dec
mov
push
loopne
jg
in
cmpsb
adc
movsb
and
pop
daa
pop
ret
or
jno
pop
insb
pop
dec
adcb
mulb
push
xlat
aas
cmp
adc
call
adc
and
insl
lcall
inc
out
xchg
pop
mov
add
cmp
xchg
xlat
adc
shlb
rcr
fs
sahf
pusha
push
jo
xchg
lahf
inc
fdivrs
mov
rorb
or
sbb
aas
mov
xchg
adc
shrl
test
out
lret
ss
sahf
or
outsl
xor
sbb
icebp
push
mov
xor
and
inc
nop
call
xor
ss
stc
mov
jecxz
adc
and
repnz
dec
je
mov
int3
sub
mov
inc
shlb
dec
int
xchg
jb
cltd
aad
seto
jae
xor
sub
leave
loopne
xchg
pop
xor
gs
push
push
loope
incb
jecxz
dec
scas
cld
cltd
movsb
subb
jae
xchg
jb
mov
test
xlat
xchg
and
add
add
xchg
fisubl
aas
xlat
sti
dec
das
js
sbb
push
shr
adc
insb
dec
cmp
cmp
fisubrs
icebp
dec
arpl
inc
ja
sbb
jne
ror
push
mov
test
dec
adc
mov
inc
pop
add
mov
jnp
pop
jbe
pop
lds
jecxz
sub
pop
pop
data16
adc
sti
ret
mov
inc
mov
sub
out
lock
or
push
adc
push
movsl
sarl
inc
popa
xor
test
sti
jae
push
movsl
out
adc
mov
dec
pop
mov
rclb
jns
mov
int3
cmp
pop
ret
ret
cmp
cmp
cmp
and
iret
add
cmp
cmp
sub
je
push
pop
into
xchg
pop
mov
or
or
pusha
cmp
mov
jp
addr16
sub
add
in
jbe
xchg
sub
sarb
push
push
mull
sbb
sbb
lcall
cltd
loop
lret
mov
mov
imul
aad
mov
adc
push
scas
lock
dec
jecxz
push
jo
sbb
jge
cli
xchg
mov
add
in
mov
in
stc
add
jno
and
sbb
xor
fnstcw
jge
ja
jne
popf
loope
ja
stc
leave
mov
ret
mov
loopne
jl
mov
mov
pop
jle
push
lret
add
das
mov
cmp
je
jo
call
popa
xor
add
movb
jbe
sti
daa
mov
scas
out
push
or
mov
clc
addr16
mov
lods
jne
inc
adcl
insl
outsb
rcl
ret
sahf
mov
test
test
sub
push
rcrb
jo
movsl
daa
scas
mov
mov
imul
stc
je
test
into
push
dec
out
inc
push
pushf
or
sub
or
rcrb
clc
adcb
pop
addr16
xor
mov
xchg
and
push
mov
push
push
cmp
and
sbb
mov
pop
ja
bound
xor
pop
cli
leave
pop
das
xchg
out
add
iret
dec
or
and
scas
hlt
dec
popf
mov
cmpb
or
push
push
dec
cs
mov
aas
jns
int
mov
addl
cmpsb
ds
adc
aas
scas
adc
dec
jnp
mov
push
popf
mov
out
inc
sub
in
insl
xchg
cmp
test
clc
adc
and
test
in
fdivrs
rcrb
sub
iret
ret
sbb
int3
push
aaa
sbb
test
mov
out
daa
lods
mov
cli
cld
or
sbbl
cmp
push
jno
js
or
shll
dec
test
bound
cmp
data16
sbb
rolb
fmuls
pop
and
or
aam
push
adc
push
inc
movsb
sbb
mov
ficompl
lret
xlat
mov
rclb
stos
adc
cmp
ss
xor
or
into
pusha
repnz
hlt
push
dec
mov
lds
movsl
xchg
enter
inc
sbb
fwait
mov
and
xor
ret
xor
clc
cltd
in
nop
enter
cwtl
xchg
and
dec
jl
inc
pusha
xchg
out
ss
dec
imul
push
dec
int
adc
ret
jns
sahf
pop
out
push
fimuls
sahf
and
mov
xchg
pushf
call
adc
mov
movsb
add
mov
cld
inc
push
mov
cmpsb
std
pusha
pop
or
cmpsb
lret
dec
dec
or
aam
xchg
dec
insl
xchg
add
cs
adc
push
test
and
mov
jmp
add
mov
mov
rcr
sti
jo
in
jns
sub
pushf
mov
jne
cli
and
pushf
pop
out
push
scas
clc
in
stos
and
loopew
mov
incl
ror
add
divl
add
pop
rorl
sub
out
loopne
adc
pushf
push
mov
mov
push
imul
loopne
fcomip
dec
inc
loope
in
fnstcw
ret
movsl
insb
test
mov
fs
fs
adc
inc
in
je
in
repz
scas
xor
loope
mov
adc
cmp
xchg
pop
xor
lock
pop
xor
jmp
shl
or
imul
int3
scas
xchg
or
or
call
ret
sbb
fdivr
inc
sahf
test
test
sbb
sarb
jbe
loopne
and
into
es
int
das
mov
pop
mov
das
adc
std
and
dec
push
sub
pushl
inc
pop
jg
std
cs
sahf
das
sub
rcl
imul
bound
es
push
inc
and
add
ljmp
mov
dec
cmpsb
loope
push
fwait
lock
pop
inc
inc
push
or
push
inc
testl
jnp
jecxz
ret
dec
loope
stc
fistpl
cmpsb
mov
jp
mov
lods
cli
imul
aaa
add
sub
popa
cli
xor
sbb
inc
test
lock
scas
xor
popa
push
out
lods
cmp
sub
mov
test
pop
cltd
mov
mov
mov
mov
xchg
sbb
add
xor
jp
or
dec
lret
stc
aam
mov
lods
call
xor
cli
scas
add
popa
mov
pushf
xor
xchg
adc
fisubs
movsl
ss
bswap
adcb
pop
mov
lds
in
mov
xor
jae
aaa
cltd
test
fwait
or
rcll
dec
xchg
ja
push
out
inc
pop
xchg
idivl
or
jae
push
and
cmp
sub
mov
in
jge
sbb
insl
loopne
jp
add
ds
jge
dec
pop
sar
loop
pop
cmpsl
fildll
daa
fcompl
mov
fildll
cmp
sbb
mov
mov
cmp
xchg
pusha
push
pop
dec
in
movb
in
adc
cmpsl
ror
push
std
jmp
insb
mov
popa
bound
imul
xchg
cmp
subl
std
test
mov
mov
inc
aaa
mov
push
pop
sbb
jno
jl
mov
sbb
push
lea
pop
fsubrl
inc
lcall
pop
dec
mov
jmp
or
popf
sbb
push
push
jae
int3
nop
loop
jecxz
bound
popf
insb
out
cwtl
sub
icebp
mov
movsb
cld
outsb
xor
sbb
lock
repnz
cmp
out
fldt
push
icebp
nop
mov
inc
or
jecxz
pop
push
test
lret
movsl
mov
pop
fimuls
xorl
dec
or
fwait
ret
push
jb
lret
loopne
notl
imul
shrl
cmpsl
gs
lock
fcmovne
jp
mov
mov
shll
xor
lcall
push
pusha
adc
lret
aas
inc
dec
out
push
aam
repnz
cmp
adc
ja
lods
add
add
push
fsubrs
dec
les
mov
jno
pop
xchg
add
jmp
shlb
fwait
test
jnp
push
add
adc
dec
or
inc
outsb
mov
jno
jne
cltd
loopne
fisttpl
outsl
jge
jmp
inc
inc
fcmovu
fisubs
stos
cmp
fisubl
xor
sbb
push
mov
cmpl
mov
sbb
push
mov
push
outsb
lret
dec
movsl
jnp
test
cltd
adc
mov
and
out
mov
int3
scas
sbb
cmpsl
rolb
inc
es
cs
fs
and
int3
call
ja
daa
add
adc
out
fisttpl
xchg
sahf
pop
pop
ret
fdivs
fs
fsub
sbb
jp
lea
pop
fsubrl
adc
add
inc
inc
repnz
and
js
into
xchg
sub
rcl
pop
xchg
sub
sub
ja
mov
loope
icebp
ret
sub
lods
inc
dec
in
shlb
test
sbb
or
and
sub
mov
fimull
or
xchg
iret
dec
test
cltd
push
jno,pn
les
stos
or
cmp
loop
or
or
andb
push
push
xor
in
fisttpl
iret
cmp
pop
dec
pop
sarb
stos
mov
mov
loop
enter
push
int3
adc
clc
cmp
loopne
add
ror
bound
cld
and
mov
pop
jo
push
add
dec
or
into
out
push
repz
fisttps
sub
adc
sub
sbb
pushf
or
ret
aad
mov
add
jg
insb
test
xchg
inc
push
mov
mov
out
sbb
lret
or
adc
movsl
push
outsl
mov
xlat
sbb
das
sbb
cmp
lret
and
pcmpgtw
data16
outsb
mov
jmp
cwtl
pandn
inc
ds
add
push
push
lds
push
xor
test
jns
push
and
les
test
ret
lahf
lcall
mov
dec
cmp
and
dec
ret
mov
dec
push
sbb
push
sub
jge
mov
dec
sbb
jecxz
pop
loope
push
dec
adc
xlat
xchg
or
lock
or
push
cmpsb
xor
cmp
pop
sub
xchg
test
mov
cmpsb
enter
push
xchg
lods
mov
mov
lea
jns
ljmp
pop
iret
mov
fdiv
mov
pmulhw
jmp
pop
out
loope
roll
sbbb
jp
ret
movsb
add
notb
adc
imul
jns
inc
pop
mov
imul
jno
js
adc
sub
sbb
push
sti
sahf
scas
ja,pt
add
shlb
loop
mov
or
sahf
pop
mov
jns
inc
mov
or
and
ret
dec
lret
data16
mov
mov
mov
mov
mov
or
push
stc
push
xorb
and
and
cmc
nop
xchg
and
in
push
or
sbb
add
lods
push
movsl
stc
add
cmp
sbb
cltd
lods
dec
add
out
pop
daa
popa
cmp
mov
daa
fnstsw
xorb
mov
int
xor
xchg
pop
mov
rorl
arpl
aaa
mov
aas
out
in
fidivrs
xor
jge
push
icebp
push
les
push
sub
addr16
and
and
cmp
xor
imul
or
test
fisubrl
test
pusha
push
jb
adc
cmp
incb
fnstcw
push
in
push
mov
incl
adc
inc
testb
mov
sbb
xor
movsb
repnz
push
add
je
icebp
div
or
mov
outsl
movsl
mov
sub
lcall
je
mov
adc
cmc
aaa
sbb
ret
aam
cld
cmp
mov
cmpsl
xor
pop
mov
inc
mov
js
mov
lret
add
repz
in
mov
dec
xchg
mov
push
mov
adc
js
ss
in
arpl
daa
imul
jne
jecxz
js
bound
rcrl
jmp
xchg
xor
push
rcrb
call
fbstp
pushf
test
mov
jae
fs
cmpsb
inc
leave
dec
fs
test
cltd
jno
xor
sub
sub
ljmp
mov
mov
in
jo
push
cmpsl
call
ljmp
and
mov
cltd
mov
popa
fucomip
sbb
iret
sbbb
cmp
or
and
or
imul
adc
cmc
movsl
imul
push
out
test
mov
mov
jb
and
ret
xchg
and
sub
jbe
jg
aas
push
xor
test
mov
sub
dec
ja
aaa
xor
fidivrl
mov
loope
repz
loope
push
xor
out
cmp
iret
and
pop
adc
mov
daa
cld
mov
jecxz
testb
jo
pop
jno
xchg
inc
dec
pop
int3
push
bound
cwtl
lret
mov
mov
mov
pop
cld
aaa
and
bound
mov
insb
mov
pop
inc
insl
testl
jns
push
pop
add
pusha
push
inc
or
fmuls
mov
stc
jmp
ja
and
jmp
popf
ljmp
sub
in
xchg
addr16
mov
bound
cmp
add
cmp
std
sbb
and
adc
and
add
loop
ret
and
jp
mov
xor
jle
xor
xor
data16
jp
rorb
xchg
shll
lret
ja
cltd
jb
push
or
lods
insl
nop
clc
and
xchg
out
cmp
add
lods
pop
fnstcw
cmpsl
cld
push
pop
popf
push
pop
push
xchg
mov
and
imul
mov
insb
xchg
cli
jecxz
in
mul
jo
xor
mov
adc
pushf
cmpsb
imul
mov
pop
ret
ss
in
fdivl
xchg
icebp
mov
pop
jns
movsb
shlb
dec
adc
test
xor
and
ljmp
cmp
inc
cmp
lcall
inc
test
mov
int
or
cmc
mov
push
and
sbb
scas
inc
push
sbbl
imul
repz
cmp
push
fcoms
xor
add
or
cmp
push
pop
ret
mov
enter
mov
hlt
mul
aam
jg
mov
daa
call
in
jmp
hlt
or
es
loopne
jnp
cwtl
sbb
mov
aas
mov
jbe
pop
mov
scas
out
add
loop
iret
xor
ljmp
cmp
xchg
dec
out
fstps
sbbb
fdivs
insb
fnstsw
mov
or
adc
inc
cs
sub
pop
sub
int
clc
inc
mov
mov
sarl
insb
or
stos
mov
xchg
jae
cs
and
push
or
add
lret
push
cmovae
and
shlb
in
mov
nop
cmp
sbb
mov
psubw
leave
push
add
sti
jl
jp
loopne
outsb
pop
shl
xor
adc
pop
fcompl
add
adc
mov
mov
and
fnstcw
loopne
mov
outsb
pop
out
test
pop
outsb
mov
lea
sahf
test
cld
mov
cmp
mov
push
lcall
mov
lcall
lea
cmpsb
sbb
mov
sbb
cmp
outsb
inc
inc
enter
pop
testl
xlat
pop
repnz
dec
mov
xor
mov
cmp
jg
mov
subb
sbb
fcmovb
push
movsl
jb
filds
ret
adc
adcl
ja
rcr
dec
add
lods
cwtl
sub
pop
push
lret
cmpsl
leave
mov
pop
cmp
outsb
push
in
out
mov
inc
push
pop
sti
fwait
insl
js
inc
addr16
scas
adc
in
pop
ds
lods
add
js
pop
jecxz
xchg
inc
push
push
xlat
dec
pop
jbe
dec
inc
leave
fimuls
lahf
and
fnsave
outsl
pop
mov
mov
mov
jmp
pop
jecxz
test
mov
or
mov
fmul
mov
mov
and
sub
jo
mov
inc
gs
push
or
loopne
aad
cmpsb
pop
mov
stos
xor
or
incl
xor
adc
dec
sub
mov
xchg
xchg
test
leave
aaa
and
lods
and
subb
mov
mov
push
or
arpl
out
pop
sub
push
iret
or
xchg
loope
mov
mov
push
pop
mov
into
ds
xor
iret
pop
sar
imul
int3
lret
mov
iret
xlat
xlat
mov
rcrl
repnz
repz
int3
test
rcrb
sub
mov
cmpsb
push
and
fmuls
pop
fimull
stos
push
loop
lea
xchg
scas
inc
fcoms
dec
mov
lods
out
xor
inc
push
and
sbb
fsub
and
rcr
jns
jno
leave
jg
xor
loope
sbb
andl
mov
cwtl
outsb
insl
inc
lahf
adc
cmp
or
and
xchg
mov
pop
adc
push
jecxz
int
jne
jp
inc
sub
adcb
dec
int
andb
sbb
call
loopne
addb
fwait
jge
xchg
pop
jae
sub
sar
pop
xchg
sbbl
pop
cltd
sub
mov
test
jmp
std
insb
xchg
cs
jecxz
jl
and
xor
mov
sbb
push
stos
adc
shll
dec
test
adc
mov
lock
pop
xor
dec
jo
in
inc
rcrb
sub
daa
cwtl
jbe
out
outsl
sub
cld
iret
in
cmp
mov
jecxz
inc
cs
mov
add
jecxz
cltd
inc
fucomi
xorb
dec
mov
mov
mov
mov
notl
mov
adc
adc
inc
loop
movsl
dec
jecxz
fisubl
inc
xor
jg
mov
shrb
aas
out
loop
add
iret
orl
jae
sahf
popa
mov
jmp
aam
lea
and
push
pop
fidivrl
inc
test
pop
mov
or
into
clts
push
fcoms
sub
pop
pop
in
and
jb
pop
cld
xchg
mov
cmc
cmpl
sub
pop
das
push
ljmp
dec
xor
stos
jbe
shll
mov
pop
stc
mov
fs
ficoms
and
and
push
rorb
jp
sbb
movsl
aas
pop
dec
test
jle
ja
and
mov
mov
stc
and
std
call
sub
popa
mov
and
fsubl
aad
cmp
addb
outsl
movsl
shl
inc
dec
iret
in
pop
mov
add
cmp
jp
loop
call
cmc
jg
mov
lds
sbb
rclb
cmp
dec
call
into
jge
out
mov
xor
or
add
adc
in
sarl
movsb
push
outsb
leave
je
addr16
and
mov
mov
inc
es
mov
xor
leave
adc
sbb
push
pop
adcl
mov
int3
insl
and
xchg
pop
adc
aas
stos
inc
mov
xor
arpl
aas
lds
cmp
iretw
mov
out
and
dec
sbb
cwtl
pusha
je
nop
push
mov
negl
cld
jecxz
jne
and
cwtl
pop
fmuls
stc
lahf
popa
sbb
ds
adc
sub
xchg
scas
mov
sarl
aam
and
inc
jbe
hlt
or
mov
hlt
or
test
push
nop
and
js
xor
fistl
jno
prefetcht1
test
adc
sbb
ret
out
es
sbb
fmuls
aad
aad
mov
mov
adc
push
test
or
into
aas
dec
push
mov
nopl
test
cltd
mov
mov
lods
nop
or
sarl
cwtl
add
cli
rclb
dec
mov
test
add
adc
movsl
gs
lds
movsb
aaa
sub
jne
xchg
iret
loopne
xchg
jb
sub
movsb
ja
jmp
mov
ja
pop
sbb
cmp
fldenv
mov
dec
add
pop
in
js
aaa
stc
push
popf
xchg
in
scas
pop
dec
lods
addb
addb
push
lods
push
stos
loopne
push
dec
sub
jp
lahf
daa
movsl
push
js
jns
sbb
push
push
inc
mov
xchg
pusha
out
push
sub
jp
shrl
stos
mov
inc
pop
dec
fidivl
sbb
xchg
mov
xchg
pusha
rclb
mov
fwait
rclb
lods
ss
jbe
out
jno
cmp
inc
and
out
mov
lds
jae
iret
cwtl
xchg
jecxz,pt
push
cwtl
ja
cli
or
inc
sbb
inc
mov
movl
jbe
cli
sbb
inc
rcll
xchg
imul
cld
mov
cld
fwait
mov
icebp
shlb
ds
inc
mov
mov
leave
adc
lcall
jp
mov
lods
into
int3
insb
mov
inc
mov
mov
pop
dec
sarl
xor
mov
xchg
sub
loop
and
jge
and
lret
sbb
sub
xor
cmp
movsb
adc
cmp
push
shrb
lods
mov
cmp
rorl
dec
dec
add
jp
mov
adc
data16
jno
in
mov
lcall
or
jle
or
mov
std
sub
jmp
insl
je
shlb
icebp
xchg
mov
cwtl
jecxz
fistpl
lcall
out
dec
push
add
adc
pop
or
stos
or
push
daa
add
pop
mov
std
cli
into
dec
sbb
jne
xor
sub
inc
mov
sub
das
cwtl
jnp
lret
mov
lahf
cli
es
xor
and
push
push
add
jg
xlat
sub
pushf
cmp
cli
cwtl
ret
sbb
scas
jl
dec
lret
std
jb
decb
xor
mov
jmp
and
cmpsb
and
repz
or
mov
int
jno
shll
dec
sbb
ret
fnstenv
sub
push
ficompl
aad
into
sub
ljmp
imul
sub
lcall
stos
addl
sbb
ds
dec
aas
xlat
int
dec
and
inc
inc
add
jns
jb
and
mov
mov
and
out
and
xchg
jae
cmp
jle
dec
xorb
adc
roll
or
push
mov
int3
mov
pushf
or
insb
xchg
stc
rcr
movsb
fldt
in
gs
jp
xor
mov
push
cs
and
adc
adc
aaa
push
mov
int
dec
xchg
inc
or
test
mov
cwtl
adc
insl
jae
push
dec
adc
sbb
clc
and
lods
push
push
pop
inc
outsb
sbb
into
cmp
loopne
mov
sub
xor
je
ljmp
inc
in
pop
ljmp
in
mov
fstps
dec
xor
leave
add
adc
dec
jne
negl
sahf
xchg
cmp
in
roll
lahf
inc
mov
xor
in
mov
testl
sbb
xor
sbb
push
fisttpl
sti
push
fsubs
rcll
in
jns
jp
call
addb
dec
dec
mov
cmpsb
jno
dec
mov
and
pop
and
sub
insb
scas
dec
add
pop
into
inc
bound
jle
and
cltd
lret
or
push
lea
xor
clc
cmpsb
ds
mov
outsl
fistpl
shr
pop
mov
or
xor
bound
adc
adc
dec
mov
add
mov
mov
movsb
daa
sbb
in
aad
and
mov
cmpsl
or
call
sbb
sub
mov
xor
sbb
push
movsb
add
inc
ljmp
sbb
iret
mov
enter
into
push
sub
data16
mov
mov
jle
outsb
lds
jmp
push
into
scas
jne
inc
lea
daa
out
add
cmpsb
pop
cmc
js
dec
mov
add
adc
mov
lret
loop
sahf
aad
cmp
ficomps
push
fdivrl
jg
jge
mov
int3
xor
ljmp
push
lods
ss
push
ljmp
lret
mov
mov
sub
pop
mov
nop
jecxz
nop
push
popl
sub
sub
leave
lret
pop
aaa
mov
push
aas
shrb
jmp
fbld
scas
imul
scas
outsb
enter
test
cltd
pop
rcll
mov
cmpsl
rclb
int3
scas
fisubl
pushaw
mov
ficompl
and
in
cmp
mov
and
mov
mov
cmp
adc
hlt
cmpsb
or
lock
ret
pusha
dec
inc
adcb
pop
add
and
jns
jp
sarb
push
shrl
repz
jecxz
sar
xorb
out
pop
mov
dec
cmp
xchg
shr
pop
push
loope
pop
push
daa
mov
cs
push
stc
ficomps
movsl
subb
aad
inc
in
sub
cmc
aam
sbb
gs
mov
cmp
das
popf
stos
test
sub
fiaddl
repnz
popa
sbb
cwtl
or
lret
insl
or
jp
xchg
mov
gs
stc
add
lock
push
jb
mov
or
jp
xor
add
xchg
ret
es
pop
in
xchg
and
outsb
pop
xchg
out
fadds
dec
pop
fmuls
int3
inc
push
and
loope
clc
fisttps
imul
dec
out
pop
jnp
pop
pushf
fbstp
or
ret
push
sub
in
leave
xor
push
inc
mov
popa
mov
out
sub
dec
in
xchg
inc
inc
xchg
mov
adc
push
fs
out
addr16
pop
inc
dec
out
repz
cmp
inc
dec
dec
sbb
cmp
dec
adc
jno
mov
fwait
icebp
and
sub
pop
popa
add
into
inc
in
outsl
lock
test
pop
sbb
je
and
test
xchg
jb
shlb
push
and
xchg
inc
adc
pushf
sub
jl
js
fmuls
mov
and
or
push
js
in
aaa
jge
lcall
lock
fwait
outsb
fnstcw
insl
sarl
jp
in
adc
pop
mov
test
fnstcw
jmp
push
mov
aad
das
lahf
jp
mov
pop
fists
or
rcrb
test
pop
cmpsl
popa
push
mov
imul
mov
mov
lods
hlt
iret
scas
pop
jno
adc
mov
loop
pop
repnz
in
std
cmp
cmp
mov
sahf
ja
arpl
test
pop
xchg
push
add
xchg
xchg
into
mov
das
stc
lds
xor
pop
orb
out
mov
fmull
lea
and
pop
jne
add
mov
cmp
add
mov
icebp
fidivrl
rorl
mov
test
adc
add
push
mov
dec
sbb
scas
dec
sbb
shr
addb
or
lds
xchg
cmpsb
jmp
push
dec
push
mov
stos
adc
sub
cmc
fdivr
rcr
in
jp
aad
dec
imul
xor
imul
pmaxsw
cmp
lahf
add
repnz
insl
mov
vmovdqu
add
jnp
movsl
jg
add
loope
jp
fcompl
sbb
and
inc
outsb
out
bnd
lret
push
aaa
les
out
push
int
mov
jne
mov
mov
or
into
inc
pop
pop
xchg
icebp
popa
and
mov
sbb
mov
neg
test
push
adc
adc
sbbb
mov
push
mov
sbb
push
xor
fldenv
mov
pop
inc
mov
jns
xchg
aad
and
enter
int3
movsb
fistpll
insl
xchg
mov
sub
and
mov
scas
jb
and
mov
mov
fbstp
mov
popf
cmpsb
jns
adc
sbb
nop
jae
inc
adc
cmpsl
push
pop
inc
into
xchg
popf
push
xchg
test
pop
push
imul
std
or
mov
dec
sub
xor
aas
enter
cld
mov
dec
lcall
pop
push
in
shr
jle
and
xchg
pop
mov
int3
push
subb
and
test
fs
mov
mov
mov
push
stos
xor
js
hlt
popa
mov
mov
jno
outsb
cld
inc
mov
inc
arpl
mov
xlat
mov
aam
mov
imul
jmp
psubd
mov
pop
xchg
push
sub
enter
sub
rolb
mov
cmp
lret
movsb
xor
les
mov
and
daa
icebp
cld
inc
pop
cmpsl
push
cmp
mov
jae
fistpll
xor
cwtl
dec
loope
mov
add
push
insl
dec
push
mov
into
xor
push
push
xor
pop
mov
out
mov
insb
dec
es
in
xor
inc
or
cmp
pop
int3
bound
sub
sub
clc
pop
inc
inc
stc
dec
add
aad
add
stos
push
xor
scas
dec
mov
jg
es
pusha
fs
mov
jb
roll
add
sbb
jb
sub
inc
pop
sti
ret
or
popf
clc
xchg
or
inc
mov
aaa
ljmp
je
leave
mov
xchg
stos
jmp
out
dec
sbb
sbb
push
add
sbb
sbb
fdiv
pushf
xchg
data16
dec
stos
mov
popa
xchg
es
and
add
sbb
jl
xchg
std
adc
rorl
imul
repnz
xor
pusha
or
test
mov
in
ds
aas
fwait
je
shrl
mov
inc
mov
lret
cmp
mov
jae
shrl
pop
lcall
push
jbe
fistps
sub
shll
and
xlat
dec
sub
frstor
sbb
mov
mov
and
jg
lcall
rclb
stos
and
aaa
inc
std
pop
fnstsw
les
fsubs
mov
popf
fdivs
add
sti
stos
sbb
jno
stos
aam
jecxz
jg
adc
pop
les
inc
sbb
inc
cmp
stc
fimuls
aad
ret
movsb
aad
mov
sbb
cmp
call
jbe
push
in
jmp
or
pop
repz
push
and
mov
inc
into
call
mov
pop
lods
out
loop
arpl
sahf
pop
or
in
std
push
stos
les
mov
hlt
push
lret
test
pop
in
les
test
arpl
mov
int3
mov
or
in
outsl
jo
lds
sub
or
adc
lcall
in
mov
inc
in
loope
test
iret
inc
jb
push
sti
enter
lahf
cmp
fisubrs
pop
addl
call
xor
push
mov
xchg
sahf
mov
push
dec
sbb
cmp
insb
arpl
pop
jnp
fsubl
jbe
inc
adc
dec
xor
imul
into
rolb
or
or
pop
in
pop
pop
jg
xor
xor
inc
out
xor
in
and
jno
jae
mov
test
jg
xchg
mov
xlat
pop
mov
dec
or
push
sbb
xchg
repnz
cmp
pop
into
lea
lahf
ficompl
push
jecxz
mov
xchg
jne
or
mov
jbe
lahf
fs
pop
ficompl
pop
insb
push
sub
add
ss
cmp
ss
and
jg
stos
mov
xor
test
sarl
and
xchg
cmc
jmp
mov
inc
jle
popf
xchg
push
cmp
fwait
xchg
jae
bound
xor
inc
cmpsb
mov
jmp
addr16
icebp
push
ret
pop
add
fstpt
pushl
mov
pushw
or
push
mov
rcrb
pop
stos
mov
cltd
popf
jp
jg
addr16
jmp
mov
fmuls
testb
inc
push
mov
addr16
push
ret
ja
enter
or
push
fs
rsqrtps
jmp
push
gs
repnz
inc
testl
out
inc
and
mov
push
sahf
mov
cli
stc
cmp
inc
dec
mov
imul
cs
jo
inc
push
mov
mov
cltd
imul
dec
popf
cmp
sub
dec
jle
loope
cmp
xchg
xchg
test
sub
jle
test
mov
bound
add
xchg
out
mov
mov
sbb
loope
xchg
mov
les
and
dec
or
stos
mov
pop
testl
iret
xrelease
in
xchg
lods
push
xorl
jmp
xor
es
sbb
gs
imull
mov
int
scas
jp
in
cwtl
in
push
jb
pop
sahf
js
iret
push
xchg
jns
icebp
clc
movsl
mov
movsb
cmp
mov
and
out
stos
push
xor
adc
pop
sbbb
sbb
adc
and
lock
cwtl
sub
out
enter
add
xor
and
xor
cwtl
cwtl
push
add
push
add
inc
loop
in
rclb
testl
sbb
int3
inc
push
loopne
and
fists
fs
test
repz
mov
scas
or
xor
arpl
testb
lods
xchg
test
push
movsl
movsl
adc
mov
fstpl
test
sarb
cs
ret
pop
pop
or
push
hlt
repnz
lcall
or
popl
xor
cmp
xor
popf
in
fimull
inc
adc
movsl
pop
push
add
mov
push
lods
daa
add
mov
orl
sbbl
ja
push
xor
push
adc
ror
xchg
out
lret
aam
mov
push
js
stos
add
int
mov
add
mov
or
fcomi
popf
sbb
lcall
fmull
repz
cmp
test
test
aaa
xchg
dec
cmp
push
cmp
shl
ds
addr16
les
jle
or
xor
jns
jns
cmpsl
cwtl
in
mov
out
and
std
popl
mov
pop
std
pop
mov
xchg
sahf
push
hlt
mov
dec
dec
cld
jbe
icebp
je
out
xchg
fldt
lret
mov
movsl
das
dec
mov
dec
push
test
sarl
daa
push
pop
int
in
cli
xorb
mov
pop
mov
push
les
sub
inc
fmuls
jb
iret
push
lods
repnz
cmc
aaa
add
adc
or
or
test
ud0
cmp
add
push
out
xchg
cmc
out
cwtl
xor
pop
and
mov
into
mov
xchg
fisttps
sbb
mov
add
mov
push
or
add
dec
leave
outsl
mov
or
repnz
je
sub
out
mov
xor
or
stos
das
adc
cs
addr16
xchg
mov
in
xchg
cmp
and
add
aas
push
test
aas
sti
imul
add
mov
pop
adc
xor
adc
cld
cvttps2pi
or
lds
pop
fs
mov
test
xlat
mov
mov
cmc
mov
push
pop
loope
adc
lea
pop
and
lods
test
outsl
pop
fsubl
insb
fs
cwtl
adc
jmp
lods
mov
icebp
pusha
outsl
cmc
jle
jno
lods
mov
push
out
mov
add
mov
xchg
jo
jl
pusha
inc
push
cs
dec
cs
ret
loopne
mov
insl
mov
ret
push
mov
and
fbstp
lret
inc
add
faddl
pop
addl
outsl
inc
jp
fidivrl
jns
jns
fwait
popa
mov
aas
lds
leave
pop
stos
jb
jne
jo
adc
and
inc
std
xor
xor
adc
frstor
mov
mov
imul
inc
jge
mov
mov
in
fstpt
jo
cmp
sbb
and
sbb
fadds
orl
pop
add
xchg
sbb
sub
cli
mov
fistpl
sbb
dec
jecxz
aaa
and
dec
pop
jb
mov
lcall
or
mov
cli
add
out
adc
fsubrl
pop
push
int
cli
push
leave
sbb
popa
push
xchg
sub
movsb
es
cmp
jno
loopne
test
add
jne
fiadds
jp
jecxz
xor
stos
mov
cmc
mov
sti
fnstsw
cmp
dec
mov
stc
addb
test
xchg
mov
dec
sti
ljmp
bound
in
inc
dec
stos
xchg
push
lea
sub
clc
aaa
testb
mov
test
cmp
enter
filds
aas
pop
dec
xor
faddl
push
inc
leave
rcrl
gs
arpl
adc
mov
or
leave
out
fnstsw
inc
mov
dec
jne
push
test
sbb
ss
inc
add
pop
outsb
dec
inc
inc
roll
je
testl
das
jnp
jns
add
sub
inc
xchg
out
test
lods
shlb
rcpps
cld
es
push
cmpsl
mov
xchg
mov
in
push
jnp
and
sbb
insb
or
cmp
cmp
pandn
stc
lea
cmp
and
insl
mov
aad
mov
cmp
lcall
jge
pop
or
sbb
cmpb
or
mov
mov
cltd
xlat
bound
xchg
cwtl
pop
mov
int3
addr16
les
fisttps
jo
mov
xchg
fsubs
ds
sbb
bound
stc
cmpsl
sub
pushf
ficoml
pop
daa
or
daa
or
je
jmp
fldenv
test
subl
jb
cmc
sbb
mov
mov
mov
xchg
xchg
cmp
fsts
repz
lret
mov
xchg
shl
dec
add
out
test
test
inc
and
dec
pop
mov
out
push
ljmp
ret
mov
into
pusha
mov
jae
popf
lds
mov
mov
sbb
fcoml
ds
push
adcb
addb
scas
iret
and
negl
cmp
shll
adc
mov
jmp
pop
pop
sub
sub
jge
cwtl
pop
fidivs
pop
enter
cltd
inc
sbb
and
lods
dec
jnp
dec
xchg
or
inc
and
xor
lods
inc
and
xchg
test
inc
mov
xchg
stc
aaa
and
scas
movntps
subb
pop
mov
enter
int
xchg
fsubrs
sarb
test
outsb
and
sbb
mov
rolb
into
les
mov
rclb
outsb
xchg
hlt
dec
push
andb
sub
mov
cmp
ret
insb
inc
xchg
or
fbstp
daa
fdivrs
div
and
jns
mov
fs
arpl
mov
jb
mulb
out
ja
mov
nop
scas
xchg
cmpsl
into
or
pop
xchg
in
mov
adc
jne
sub
in
pinsrw
scas
in
cmp
mov
pop
lods
or
orb
push
pop
out
sub
cltd
notl
mov
aaa
sbbb
xchg
xchg
shrd
sub
sub
mov
jno
xchg
bound
cmp
dec
enter
mov
cmpsl
popf
inc
add
or
inc
xchg
int
adc
inc
xchg
shll
dec
mov
or
pop
cmpsl
test
movsl
lret
test
cmp
add
xchg
adc
pop
pop
add
and
push
mov
inc
mov
lds
push
fwait
aaa
pusha
test
rclb
mov
popf
xchg
adc
shl
pop
dec
fcmovu
lods
das
push
loope
cld
adc
mov
outsl
xchg
and
push
ret
pop
mov
aas
dec
jmp
in
aam
cmp
xor
mov
or
or
cmp
test
mov
push
jnp
adc
test
data16
push
add
mov
jle
or
mov
movsl
repz
cld
cs
jmp
add
push
xor
inc
mov
gs
clc
xchg
dec
cmc
and
push
loopne
inc
xchg
xor
pop
xor
cltd
lcall
or
fs
out
cld
cli
fcoms
cmp
dec
push
jnp
push
cmpsl
mov
mov
jne
movsl
add
inc
pop
shr
pop
mov
inc
pop
or
xor
mov
scas
push
dec
outsb
mov
mov
lcall
add
in
xchg
cmp
call
movsl
in
pop
jo
js
and
test
mov
push
mov
and
sbb
inc
das
xchg
xor
loope
subb
jecxz
push
add
push
add
cmp
mov
sbb
jge
fdivp
cmp
mov
jnp
mov
push
push
shll
cmp
lahf
xor
imul
xor
inc
push
cwtl
lcall
add
imul
pop
inc
mov
xor
ret
sbb
aas
cli
loop
iret
std
sub
ss
or
xor
loope
mov
inc
loopne
mull
bnd
xchg
add
sbb
mov
sbb
cmp
cltd
shrb
mov
push
cmp
mov
jecxz
ficoml
adc
push
out
adcl
xchg
inc
daa
or
pop
test
lock
mov
and
xchg
dec
xlat
arpl
hlt
and
pop
lret
mov
pop
popf
stc
test
and
ficoml
dec
mov
notl
ret
repnz
fiadds
dec
jne
cmpsb
xor
popf
mov
pop
fxch
push
jae
mov
rcll
fld
mov
add
ja
lret
pop
and
cwtl
test
add
mov
and
adc
es
cs
flds
pusha
fldl
xor
test
xor
sub
outsl
mov
or
add
out
adc
pushf
scas
jge
jo
das
cltd
stos
out
mov
mov
adc
rcrl
pop
dec
stos
sahf
jno
lea
data16
adc
inc
adc
xchg
cmp
bound
adc
push
stc
adc
push
gs
mov
adc
stos
push
iret
adc
in
insb
fwait
insl
out
fxam
sbb
out
add
xor
xor
rclb
jbe
bound
or
mov
adc
es
cmpsb
lds
shll
js
sbb
repnz
std
test
xor
push
ds
stos
pop
mov
add
test
dec
pop
fisubs
loop
mov
adc
imul
and
das
outsl
call
shlb
xchg
mov
push
sti
cmpsl
add
inc
outsb
push
leave
cmovnp
loop
adc
stc
or
add
xchg
das
fistpl
ret
or
data16
or
push
xlat
repz
repnz
out
loope
push
or
jg
xchg
mov
xor
sub
mov
and
mov
imul
adc
mov
call
cmp
bound
cld
loope
jl
push
movsl
jecxz
and
es
sub
aaa
clc
insb
in
add
add
cmp
and
inc
pop
dec
adc
mov
fisttpl
outsb
or
mov
out
clc
sbb
cmc
cmp
ficoms
aas
call
pop
or
cmp
pop
outsl
pop
xchg
or
fwait
xchg
popl
lock
divl
or
sbb
mov
mov
jge
imul
sbb
and
popa
js
gs
cmp
in
mov
adc
push
mov
mov
fwait
mov
pop
xchg
mov
int
xchg
cmc
pop
cltd
in
arpl
enter
in
mov
mov
xchg
xchg
jb
incl
cld
and
cmpsl
lret
jl
nop
cs
dec
subl
stc
sub
jb
je
mov
inc
cmp
inc
mov
xchg
fldz
pop
daa
adc
lcall
xchg
jo
pop
pop
int3
jp
mov
addl
loopne
das
or
cmpsb
scas
sbb
add
mov
adc
pop
cli
fildll
and
cmp
push
lods
shl
cs
pushf
dec
cmp
stc
mov
lds
jne
xchg
jecxz
lret
or
test
push
inc
testb
icebp
ffree
jle
xchg
imul
in
test
loop
imul
xchg
in
idiv
jne
sub
push
test
loopne
xchg
mov
mov
fwait
sub
dec
adc
inc
movsb
and
dec
stos
fiaddl
mov
mov
pop
ret
outsl
inc
pop
sbb
hlt
inc
mov
xchg
adc
pusha
outsl
push
jb,pn
inc
mov
mov
mov
lock
mov
mull
adc
cwtl
jg
iret
xchg
sbb
dec
gs
leave
fs
std
jns
fld
mov
je
jnp
sbb
jb
out
mov
andb
insl
inc
cmp
push
insb
or
outsb
adc
pop
data16
fnstsw
jle
dec
add
and
pusha
dec
dec
cld
lret
out
push
clc
pop
out
stos
xor
aam
xor
add
mov
movsb
les
mull
push
cltd
jp
aaa
lods
insl
rcl
int
cmpsl
mov
std
xor
cmp
mov
mov
int3
rdtsc
daa
addr16
push
mov
sub
out
xchg
test
mov
roll
cli
enter
xchg
dec
insl
push
sbb
inc
sbb
pop
inc
dec
push
je
or
xchg
subl
pop
aam
rcrl
push
inc
test
es
add
dec
push
and
stc
cmp
nop
jl
and
or
divl
dec
xchg
call
jge
mov
cmpsb
scas
aad
push
sti
mov
jl
pop
loopne
pushf
sti
jp
jmp
out
loopne
sahf
xchg
sbb
adc
mov
subb
loop
and
scas
or
sbb
xlat
pop
cltd
xor
sub
pop
push
scas
inc
mov
inc
add
xchg
out
mov
jbe
mov
inc
leave
inc
scas
shrl
jl
out
mov
es
push
xor
out
jmp
bound
scas
inc
les
lcall
mov
jno
dec
jge
xchg
stc
stc
add
movsb
push
jp
pop
loop
jne
sbb
outsl
pop
add
mov
push
fwait
or
or
and
push
ja
add
sub
lds
xor
dec
fldt
lcall
jmp
stc
cld
imul
repnz
addl
fmull
or
into
jp
scas
orl
mov
imul
insb
out
mov
push
xchg
dec
ret
cmp
mov
int3
and
xor
insl
xor
sarb
jne
cmp
scas
gs
xchg
cs
jmp
imul
jp
shll
inc
dec
jb
add
arpl
jg
shr
addr16
popf
sub
push
xchg
scas
cmp
and
movsb
mov
out
leave
or
inc
jno
iret
mov
jb
push
or
lret
xor
inc
les
sarb
cwtl
clc
sub
jne
addr16
push
sub
mov
push
push
pop
add
mov
jmp
pushl
and
xchg
xchg
cmpsb
dec
cmc
fwait
adc
testb
xor
add
push
aaa
adc
dec
and
xor
sti
cwtl
sub
inc
addr16
arpl
fbld
and
enter
loop
sub
and
in
int
insl
adc
fsubl
ja
arpl
cmp
xchg
sub
xchg
jbe
mov
jne
clc
and
mov
ss
stos
rol
rcrb
xor
popa
rcrl
cmpsb
xchg
cltd
lcall
sub
repnz
ret
jae
in
imull
outsl
jnp
in
mov
lcall
sub
bound
pop
inc
jne
out
subb
int3
gs
es
loop
sub
testl
ss
sub
push
rorb
push
movsb
imul
xchg
int3
sbb
jno
cmp
pushf
sbb
out
cmp
repz
xlat
add
and
push
loop
mov
popf
jmp
mov
push
lret
je
sub
cmp
push
mov
pop
lock
xor
sbb
arpl
mov
adc
pop
mov
sti
orb
std
dec
shlb
jecxz
and
fcomps
xchg
loopne
mov
sbb
jg
jno
popl
fcmovbe
divb
push
loope
jb
push
mov
cmp
jl
adc
lds
mov
add
ds
add
in
into
mov
xchg
pop
frstor
mov
mov
out
out
fisttpl
stos
ficompl
aas
mov
mov
jbe
push
cltd
mov
jmp
cli
sahf
orb
mov
jp
push
jbe
pop
adc
sub
inc
daa
ds
ljmp
jp
jo
iret
repnz
pop
push
call
ljmp
jmp
rcrb
ja
insb
lock
pop
scas
push
fdivr
shl
jecxz
js
insb
cmc
mov
mov
rep
and
sub
adc
aam
jbe
add
data16
cmp
push
cmp
adc
xchg
jb
je
sbb
in
dec
lcall
cli
pop
mov
addb
xchg
es
push
mov
or
mov
and
daa
adc
and
mov
stc
arpl
in
jo
xchg
mov
adc
pop
fildll
lea
cmp
lds
stos
push
nop
decl
cli
lret
data16
mov
lods
cmp
cmp
push
nop
int3
push
data16
scas
and
or
shlb
cmpsl
mov
sub
clc
adc
pushf
dec
ja
mov
mov
shlb
cmp
in
pop
xchg
js
mov
xor
addb
loop
movsl
xor
lods
out
mov
and
or
dec
xchg
repz
adc
insw
and
cli
in
stos
adc
icebp
in
xchg
sahf
jmp
insl
iret
xchg
sub
lcall
and
add
jge
push
hlt
int3
ja
mov
pop
stc
leave
gs
into
push
arpl
outsb
lahf
jmp
std
add
jmp
sub
fwait
outsb
int
divl
loopne
mov
sub
mov
pop
and
repnz
aam
adc
lods
push
or
lahf
sub
scas
sub
push
sarb
push
lock
cli
test
nop
adc
ficomps
loope
cwtl
push
lds
cmpsl
or
and
aam
js
mov
loopne
into
enter
xor
mov
push
pusha
add
repnz
and
push
sbb
mov
cmpsl
mov
clc
inc
xor
dec
lret
shl
cltd
inc
xor
lret
mov
add
loopne
sub
orl
mov
lret
mov
data16
cmp
sarb
bnd
cmc
movsl
movsl
jb
and
int
cltd
call
mov
inc
cmp
push
inc
pop
cmpb
int
fmul
fcompl
in
rclb
add
popa
jo
push
pop
into
enter
cltd
xchg
jae
test
cmp
sbb
mov
lcall
mov
or
fcoms
xchg
push
dec
stos
call
or
movsl
sbb
sub
iret
pop
rorl
cmp
jmp
les
xchg
test
push
sub
inc
sbb
xor
decl
add
je
insb
xchg
nop
fisubrl
sub
inc
lret
cmp
pop
adc
test
pop
push
add
test
add
loop
insl
jno
push
shrl
in
sbb
fwait
ljmp
repnz
dec
iret
jg
sbb
cmp
or
fsubl
nop
icebp
add
xor
jno
dec
sub
fisttpll
jp
es
jnp
mov
mov
popf
fwait
push
fdivs
mul
inc
xchg
outsl
mov
test
mov
popa
in
inc
mov
aas
dec
fstpl
loop
outsb
mov
sbb
dec
je
cli
push
xchg
sub
push
push
adc
add
jb
mov
push
cmp
xor
jae
jnp
in
mov
push
dec
je
xor
fdivr
jno
sub
jecxz
xlat
out
test
loope
push
ret
inc
sub
loop
into
leave
push
inc
sbb
fnstenv
in
jle
and
cmp
or
xchg
mov
fiadds
add
jno
xchg
ret
pop
repnz
cmp
scas
add
jecxz
sub
or
cld
push
js
add
xchg
push
mov
mov
xchg
pop
mov
test
xor
sti
and
push
xor
fistps
aam
mov
mov
jmp
pop
mov
dec
jne
sbbb
in
lds
aam
add
xchg
inc
pop
in
push
inc
cld
mov
sti
push
mov
cmp
sub
andl
addr16
cmp
int
stc
pop
lcall
sub
cmpsl
hlt
pop
push
sar
les
mov
xchg
arpl
sub
in
pop
out
lock
fs
enter
jle
lahf
or
push
repnz
outsb
scas
mov
jo
adc
inc
hlt
cmp
orb
mov
jbe
mov
data16
push
cmp
mov
loop
and
mov
mov
jmp
js
cmp
cmp
mov
in
imul
rorl
aad
and
fnstenv
roll
sti
test
sub
test
mov
fwait
pop
ret
dec
mov
xchg
ss
push
jne
xchg
adc
iret
les
frndint
and
and
insb
mov
cld
dec
add
push
jno
idivw
push
pusha
sahf
jp
fldl2e
out
jge
add
mov
popf
scas
pop
out
sbb
cltd
mov
dec
add
xchg
inc
lock
jae
insl
mov
fiaddl
enter
adc
daa
sbb
add
cmp
les
lods
add
jle
fsubl
dec
cs
loope
movsl
js
sahf
inc
xchg
andb
push
and
andb
cmp
icebp
fildll
add
jmp
test
fs
fnsave
sarb
cmc
gs
pop
mov
fnsave
or
lcall
or
and
or
push
xchg
enter
pop
dec
sbb
aad
sub
push
lcall
or
ljmp
fists
jne
loope
mov
movsb
ss
sub
adc
add
or
xchg
add
push
pop
lahf
popa
loope
xor
mov
sbb
adc
and
ret
adcl
inc
loop
les
jmp
popa
bound
adc
mov
sbb
mov
mov
adc
cwtl
loopne
sbb
lahf
cmpsb
adc
pusha
push
pop
testl
adc
pop
push
out
cmp
inc
or
jae
push
pop
loop
jne
sarb
inc
xchg
fs
mov
mov
mov
xor
push
outsl
and
dec
xchg
push
jae
jbe
or
aas
or
out
adc
and
andl
xor
hlt
out
pop
shrb
mov
shrb
adc
rorb
mov
mov
xchg
sbb
addr16
pop
mov
sbb
cmp
repz
btc
jmp
push
pop
jp
sbb
lret
leave
pop
mov
cmp
jne
cmp
bound
mov
push
outsb
outsb
cmpb
sbb
addr16
xchg
sub
pushf
aas
int
je
repz
ds
adc
sahf
xor
shr
push
mov
mov
iret
arpl
xchg
jns
sub
push
cmpsb
inc
lahf
cs
push
loopne
iret
in
cmp
cmc
test
push
icebp
xor
nop
mov
jb
lods
adc
jbe
lret
scas
popf
scas
mov
sbb
adc
test
push
pop
mov
mov
pop
push
ss
imulb
xchg
sbb
sub
out
push
fwait
aaa
in
arpl
es
pop
jl
notl
cs
mov
sub
sbb
and
call
jg
cmp
cmp
push
mov
ss
lods
push
xchg
fcomi
movb
rorl
mov
xchg
xchg
or
xchg
inc
test
rcrl
mov
imul
inc
sub
add
insb
mov
dec
cli
es
mov
mov
cmp
jmp
or
insl
pop
and
arpl
push
inc
sbb
pop
push
pushf
outsb
mov
sbb
mov
fildl
mov
shll
xchg
fnstenv
adc
cmp
xchg
cwtl
vmovsldup
xchg
dec
or
imul
push
test
adc
out
dec
push
ss
pop
mov
icebp
xchg
mov
leave
aaa
xor
cwtl
ds
cmpsb
pushl
into
sub
fwait
xor
jl
jnp
stos
cmp
pop
xor
or
loope
sbb
insb
push
jge
add
sti
mov
mov
cwtl
cwtl
inc
inc
mov
icebp
pop
or
insl
jmp
adcb
jb
in
jg
mov
mov
sysenter
or
cld
int3
mov
ret
push
and
mov
sbb
call
jns
jecxz
pop
out
inc
pop
jmp
and
jno
sub
fs
jl
jge
ljmp
push
arpl
out
push
enter
cwtl
push
cmp
cmp
stos
push
cmpsl
out
sub
cmp
out
into
xor
dec
aaa
sub
ja,pn
addr16
xchg
fwait
jae
dec
push
out
movsl
cltd
jns
jb
stos
push
jp
in
sbb
cmc
mov
sahf
shrl
fisttpl
mov
cltd
push
or
jo
out
lcall
es
int3
adc
sahf
adc
xor
xchg
add
and
sahf
js
xchg
adc
loopne
add
mov
addl
jno
ud2
add
push
xlat
shll
push
xlat
mov
add
dec
je
insl
dec
mov
out
xchg
icebp
loop,pn
cmp
add
fwait
les
or
mov
pushf
out
je
test
ja
jp
mov
dec
add
cmc
or
pop
inc
loope
jecxz
mov
jp
int3
pop
test
mov
xchg
add
mov
mov
or
xor
sbb
adc
inc
fsubrp
addr16
pop
insl
ja
jmp
pop
std
pop
lcall
and
cmp
loopne
push
out
mov
mov
mov
xlat
and
xor
call
popf
mov
fstps
push
cmpsl
cmpl
test
iret
lret
xchg
leave
inc
mov
lods
jecxz
xchg
and
xlat
roll
call
mov
clc
sbb
lock
adc
idivb
jb
or
and
pop
subb
dec
lret
movsl
pop
push
into
xchg
jb
bound
dec
sub
je
sbb
pushf
sti
cld
mov
push
sub
or
sub
sub
in
test
jno
into
int3
cmp
push
mov
int
test
mov
icebp
pop
imul
or
sti
or
jge
mov
sub
jp
cli
les
push
inc
xchg
xor
xor
and
movsl
mov
push
pop
jp
xor
cmc
fcoml
ja
push
dec
cmp
dec
mov
adc
lods
pop
and
fwait
mov
je
cmp
mov
dec
adc
and
push
push
add
and
nop
mov
movsb
int
xchg
sahf
or
int3
mov
ds
mov
xorl
ret
repz
push
mov
inc
pop
mov
sar
lods
movsb
aad
mov
into
ret
bound
dec
ja
jno
mov
or
jbe
pavgb
xor
xchg
jno
out
mov
popf
sbb
mov
adc
xlat
lds
int
xchg
cmc
or
clc
outsb
and
fwait
jecxz
mov
dec
imul
xor
std
cmp
xchg
aas
repz
mov
ljmp
mov
dec
dec
enter
ret
repnz
ficompl
out
iret
int
ss
mov
sbb
push
xchg
sub
repnz
fidivl
cltd
cli
icebp
ret
repnz
inc
nop
inc
adc
jle
xchg
or
subl
test
in
push
mov
fadds
cmp
xlat
jg
push
loope
add
cltd
jmp
adc
ss
out
pop
add
pop
mov
sub
iret
mov
xchg
or
loope
js
jae
negb
adc
mov
les
aam
ret
pop
aas
sub
inc
and
xlat
and
fwait
jmp
mov
and
inc
and
xor
inc
mov
dec
addb
adc
cld
aam
sub
popa
repz
ffree
add
xlat
ffreep
cmp
mov
mov
jns
jnp
adc
mov
adc
fadd
jecxz
xor
adc
pop
xor
sbb
hlt
mov
div
pop
sub
jne
or
cwtl
lods
mov
outsb
push
adc
inc
stos
call
push
addl
cli
leave
loopne
mov
and
jmp
pusha
jmp
xchg
scas
adc
push
and
push
inc
jns
inc
sub
imul
add
pop
mov
fnstcw
sbb
xor
lret
and
dec
divl
jmp
xor
jae
adc
sbb
mov
sbb
popa
jno
dec
push
loop
pop
sub
xor
mov
push
or
jbe
fsub
jbe
lahf
or
pushf
adc
jmp
or
push
mov
push
ret
test
lea
rcll
shlb
mov
addb
mov
aaa
pop
jb
pop
add
xor
int
mov
jno
xchg
fcoml
push
lcall
sbb
cmp
adc
std
loop
dec
xlat
ljmp
loop
call
pop
jmp
stos
dec
test
push
cli
cld
test
loop
mov
pop
mov
mov
add
ror
push
jl
fidivs
lods
les
test
loope
mov
lahf
add
lahf
ds
push
pop
inc
incl
sub
rcrl
xchg
cs
loop
or
cmp
sub
xchg
xchg
or
push
cwtl
jno
or
imul
and
inc
enter
mov
and
inc
das
mov
lods
xorl
push
rorl
in
add
data16
adc
adc
mov
dec
rol
dec
push
popa
repnz
ds
addr16
add
mov
sub
mov
inc
inc
push
xor
adc
jno
out
jo
xor
xor
cmp
adc
inc
daa
sahf
int3
cmpb
cwtl
add
scas
adc
sub
in
mov
arpl
loope
adc
push
mov
shl
mov
insb
lods
iret
imul
jbe
dec
fisttpl
mov
shll
stos
lods
or
pushf
xor
dec
in
mov
inc
fisubrl
test
push
sub
add
mov
xchg
decb
push
pop
lds
cltd
or
dec
dec
push
mov
stos
stos
out
push
in
in
jecxz
jb
out
stos
jl
add
push
xorl
jl
mov
mov
sbb
xchg
lock
push
push
mov
out
sbb
jle
rolb
pop
mov
mov
xchg
pushw
sub
cs
std
in
dec
xchg
cmp
sarb
stc
cmp
dec
scas
push
pop
sbb
fwait
jne
xorb
add
popf
ja
lret
test
push
leave
mov
ds
inc
mov
fs
sub
push
out
xchg
das
push
inc
xor
int
subl
sahf
pushf
ja
sbb
int
fdivl
xchg
pop
stos
cmc
jae
jecxz
push
dec
insb
cmp
xchg
mov
fdiv
iret
lahf
lods
mov
adc
push
stc
xor
shrb
int
xchg
jb
cmpsl
leave
xchg
pop
pusha
std
pop
and
loope
mov
js
cmp
fxch
cmpsb
addr16
nop
push
lds
jle
ljmp
cld
stos
jno
lahf
mov
or
pop
inc
lret
mov
sbb
inc
mov
sub
lods
je
xor
stos
gs
fwait
andl
pop
nop
arpl
mov
divb
or
ss
xor
in
cmpsb
outsl
cwtl
ss
mov
push
popf
sub
sub
mov
mov
sahf
shl
xor
daa
js
icebp
or
lods
mov
ljmp
scas
cwtl
mov
adc
ret
push
xchg
pop
push
in
push
mul
imul
add
in
cmp
and
jmp
lods
inc
lds
in
movsb
xor
scas
pop
sub
or
ficoms
and
and
test
fwait
andb
clc
adc
cltd
jecxz
push
daa
lret
inc
dec
pop
add
xor
jecxz
stc
xchg
push
pop
or
pop
xlat
xchg
xchg
jbe
xor
gs
push
jbe,pn
lods
add
add
aaa
dec
in
cmp
jno
pop
sahf
iret
imul
popa
or
addr16
xor
sub
enter
sub
or
add
pop
in
jmp
push
or
imul
mov
shlb
mov
ret
aas
xchg
stc
xchg
mov
shll
xchg
les
or
aad
rcr
std
outsb
ss
scas
jle
cmp
jp
std
dec
lods
daa
stos
add
dec
xchg
jb
stos
pusha
mov
jp
and
adc
lea
ret
sahf
or
sbb
jge
mov
pop
fwait
outsl
lods
stc
sti
mov
sub
stos
insl
and
xchg
lret
idivl
push
nop
xlat
les
pop
ds
cli
enter
testl
outsl
ja
mov
hlt
mov
jnp
jbe
in
out
ret
push
push
sbb
inc
mov
dec
xchg
jmp
cmp
int3
push
pop
cmp
pop
jb
adc
mov
pop
lahf
dec
loop
and
cwtl
jno
cltd
hlt
into
add
lret
push
int
gs
cmp
dec
or
xchg
cmc
push
dec
pusha
pop
jbe
imul
lds
cltd
ds
and
mov
imul
sbb
cmp
popa
fsubr
rol
or
les
sbb
sbb
mov
sub
sub
rcrl
pop
push
ja
mov
and
jae
into
testl
pop
mov
arpl
movsb
ja
mov
cmp
mov
inc
nop
add
dec
cmp
or
jb
mov
out
into
ret
das
leave
mov
dec
xor
inc
daa
jp
aam
push
movsb
ja
cmp
mov
add
xchg
mov
ror
sbbl
add
nop
test
jl
fmul
movb
popf
cmp
sub
jecxz
sbb
jno
loope
outsl
mov
repnz
lods
pusha
sbb
mov
sti
sar
pshufw
inc
das
mov
fdiv
rol
xor
add
mulps
mov
repz
mov
sbb
jmp
inc
or
push
lock
mov
cmpsb
or
sbb
ja
dec
data16
pop
or
push
loop
xorb
dec
std
pop
fwait
xor
fadd
mov
mov
mov
inc
aam
xchg
divl
sub
sbb
imul
sti
popa
into
jne
mov
pop
or
xchg
or
repz
inc
in
inc
push
inc
leave
add
sub
mov
lods
and
pop
sub
xor
shl
mov
cmp
loopne
pop
cwtl
xor
inc
leave
outsb
jne
xor
xor
in
pop
add
cmc
pop
mov
sbb
inc
cmp
in
sub
out
sti
and
inc
xchg
mov
jns
scas
into
rcll
cltd
fmull
adc
bound
std
mov
dec
out
sbb
jbe
mov
or
push
addl
cmp
or
inc
or
dec
cmp
leave
lods
push
mov
push
repz
jbe
sub
xchg
cmp
pusha
sbb
imul
fstpt
test
movsl
mov
imul
push
in
scas
shl
sti
sar
jmp
inc
jae
and
inc
loop
cmp
push
in
cld
or
mov
mov
icebp
mov
fucom
popa
adc
jns
cld
xchg
and
movsl
cwtl
movsl
jns
cmpsb
fxch
inc
adc
xchg
mov
xchg
cltd
imul
add
cmc
mov
cmpsb
pop
imul
cmp
sub
mov
xchg
jl
lret
rolb
adc
or
leave
mov
pop
jne
push
and
add
mov
pop
shll
mov
or
xchg
arpl
dec
dec
in
cmp
cmp
and
xchg
popa
mov
xchg
sbb
pop
pop
std
push
dec
or
lret
sub
mov
jge
push
pushf
pop
jg
jge
jle
rclb
orl
sti
pushf
jmp
imul
and
aaa
pop
pop
addr16
das
jmp
test
pop
pop
push
cwtl
insl
push
inc
fs
data16
enter
xlat
addl
mov
sti
lock
push
sub
cmpsb
mov
cmp
ret
mov
popf
xchg
das
xchg
add
popa
xchg
loopne
dec
lcall
pop
test
repnz
testb
in
jno
xchg
fildl
push
lret
jae
dec
xor
scas
enter
cld
add
imul
push
dec
test
jge
into
mov
xlat
inc
loop
out
sbb
sub
aad
and
loope
fldcw
jp
shrl
imulb
lahf
leave
cmp
fimuls
dec
lahf
adc
mov
add
hlt
sub
cmpsl
leave
inc
cs
or
out
adc
inc
xor
inc
dec
stos
inc
cbtw
mov
mov
clc
cmc
test
lods
daa
mov
mov
int3
xor
mov
pop
icebp
inc
dec
test
cltd
xchg
xor
pushl
es
dec
iret
mov
pop
lods
push
add
push
dec
jbe
iret
push
push
int3
iret
leave
loope
out
out
mov
sbb
outsl
fdivrl
daa
adc
inc
pop
imul
fimull
out
sbb
pusha
mov
pop
shll
stos
jno
add
jno
faddl
xor
add
mov
rorb
xchg
sbb
mov
mov
jge
add
int3
hlt
dec
sub
add
leave
aad
int3
push
add
sbb
mov
dec
and
notb
cmp
xchg
mov
xchg
jge
dec
in
mov
gs
xor
lahf
dec
movsl
xlat
fstpl
lahf
jb
stos
push
imul
std
mov
xchg
cmp
push
xchg
xchg
mov
pop
inc
mov
cld
aaa
jmp
mov
and
insl
inc
xchg
mov
ja
test
movb
cmp
and
xor
ja
or
sbb
insl
insb
mov
lock
mov
inc
cmp
or
adc
pop
test
dec
mov
outsl
dec
pop
loopne
xchg
ret
setb
xchg
and
pushf
arpl
jmp
dec
jl
inc
mov
dec
scas
lea
mov
insb
cltd
js
mov
pop
push
mov
inc
push
js
cmp
ret
adcb
test
mov
inc
divl
pop
test
push
mov
out
xchg
fwait
pop
cmp
push
jmp
in
mov
aad
inc
js
sbb
pusha
fistps
xor
daa
jb
gs
in
inc
stos
add
inc
decl
cmp
sub
test
frstor
or
les
or
pop
xchg
add
mov
dec
mov
negl
call
pop
mov
dec
fdivl
int
or
jmp
jo
inc
stc
inc
and
cmp
mov
dec
aad
idiv
mov
es
or
jbe
aaa
out
call
shlb
mov
popa
cld
sub
sbb
pop
cwtl
and
mov
cmp
cmpsl
adc
pop
mov
and
in
sbb
icebp
and
mov
jae
jl
dec
lret
cmp
adc
fsub
ss
adc
rsqrtps
cmpb
aas
xor
sub
pop
ljmp
pop
mov
sbbb
add
xlat
jb
aam
ret
add
or
pop
jp
cmp
popa
mov
test
inc
jae
adc
test
cmp
inc
push
xor
jbe
decl
lahf
mov
daa
or
aas
in
jg
xor
pop
pop
xor
xor
adc
ret
nop
xchg
test
into
cli
in
or
mov
add
mov
fdivp
daa
mov
nop
xchg
and
rorl
or
idivl
scas
inc
xor
dec
arpl
cmp
hlt
ret
dec
xchg
mov
xor
or
mov
pusha
xor
mov
dec
mov
push
bound
cmc
dec
lcallw
xchg
negb
or
mov
mov
xchg
xor
sbb
fisttpll
push
push
and
or
dec
cmp
push
int
sbb
ljmp
lds
adcl
sub
sbb
xchg
add
inc
insb
mov
fisubl
dec
aam
cltd
insb
iret
aam
test
into
ss
sub
imul
fmul
ds
in
gs
sbb
add
and
movsb
inc
in
mov
gs
in
inc
push
sub
out
mov
popf
sahf
mov
scas
int3
dec
mov
out
dec
iret
dec
adc
aaa
cli
nop
sbb
add
subb
add
pop
pop
ss
pushf
cmp
mov
sbb
inc
pop
jecxz
and
insb
xor
inc
sbb
mov
mov
rcll
pushl
lcall
aas
movsb
jo
int3
pop
pop
cmpsl
sub
xchg
mov
or
in
sbb
rolb
aam
inc
sub
pop
mov
jns
ror
xchg
out
outsb
rclb
sub
adc
cltd
scas
lahf
push
adc
loop
out
inc
and
mov
gs
iret
mov
test
add
push
out
sahf
inc
out
aam
ljmp
sbb
mov
dec
inc
sbb
push
adc
sbb
jae
mov
test
add
and
cmp
icebp
stc
pop
sbb
pop
sub
pushf
sarl
lods
mov
and
pop
push
mov
fimuls
inc
mov
cmp
sbb
jmp
mov
mov
inc
and
aas
cli
and
dec
clc
pop
imul
shl
xchg
outsl
arpl
xchg
daa
dec
xor
mov
hlt
push
adc
ds
mov
loope
jb
dec
jb
pushl
pop
pop
mov
mov
mov
lock
and
jae
js
mov
sahf
mov
xchg
fwait
sbb
idivb
inc
int3
lret
dec
hlt
inc
lock
rclb
jle
sbb
je
xchg
or
sahf
rcr
call
outsb
bnd
mov
jmp
or
cmc
out
aas
pop
mov
js
insb
enter
roll
enter
clc
test
repnz
jno
xor
sub
cmc
xor
leave
xor
jmp
push
or
mov
loope
dec
push
ljmp
xchg
jecxz
dec
es
jge
sti
jno
mov
jl
or
push
sub
enter
xchg
insl
enter
adcb
xor
sub
or
add
arpl
cmp
jmp
xlat
cmp
fnstsw
mov
pop
icebp
push
aas
scas
lods
xchg
mov
mov
test
dec
push
je
mov
test
push
jecxz
insb
adc
cmc
lods
dec
and
inc
fisttpll
jb
les
or
rcrb
pop
loopne
rolb
arpl
sub
xchg
sub
add
sbb
dec
push
push
add
pop
cmpb
insl
stos
repz
scas
out
mov
jbe
rorl
sbb
lcall
or
sbb
sub
xor
add
sub
inc
add
xor
es
movsb
jmp
and
xlat
push
cld
mov
xchg
out
and
jmp
lods
movsl
dec
push
mov
stc
jno
test
test
adc
mov
sub
insl
nop
sti
addr16
jae
jnp
xchg
loope
les
mov
inc
xor
data16
int3
mov
mov
lods
outsb
add
sbb
test
loope
cmpb
outsl
imul
lahf
jmp
cltd
in
lahf
test
mov
lcall
in
inc
pop
sbbb
sbb
mov
sbb
pop
jnp
xchg
ret
or
icebp
add
inc
ficoml
add
out
xor
fwait
xchg
xor
xchg
pop
repnz
fidivs
mov
mov
inc
in
pushf
int3
imull
pusha
sbb
fcomip
stos
and
adc
fisttpl
or
jmp
loope
lret
sub
mov
ljmp
add
pop
mov
xchg
fdivl
push
addr16
jnp
push
jp
xor
nop
pop
hlt
add
inc
scas
leave
xor
pop
mov
cltd
and
mov
cmpsl
add
inc
push
xchg
mov
push
or
mov
outsl
xchg
inc
leave
mov
adc
adc
xchg
adc
les
mov
mov
pushf
inc
scas
inc
enter
ret
je
cmc
in
ficomps
stos
and
int
or
add
cmp
or
int3
sbb
inc
lret
mov
imul
dec
movl
pop
xor
jnp
ret
out
ljmp
mov
jbe
lret
sbbb
test
mov
popf
loope
add
dec
jns
cwtl
lds
fisubs
or
cli
cmp
add
lea
jle
inc
jge
mov
push
mov
jmp
xchg
out
push
hlt
hlt
mov
mov
in
dec
cmp
xor
divb
jmp
imul
jp
ljmp
sbb
lcall
xchg
mov
fsubr
movsl
test
das
bound
or
pop
addb
and
push
out
scas
xchg
sbb
mov
jo
imul
mov
jne
mov
add
ds
test
or
mov
fnsave
mov
seto
jg
mov
daa
popa
je
dec
or
testl
mov
jb
rclb
xor
test
rclb
ljmp
bound
xchg
mov
adc
add
scas
int3
xchg
mov
je
in
in
popa
mov
jecxz
daa
jo
sbbl
fwait
lock
nop
sub
sahf
icebp
pop
push
loopne
add
cltd
jl
subl
adcl
mov
fmuls
push
inc
xorb
jo
test
or
fs
add
fs
xchg
sub
dec
mov
xor
add
sub
fidivrl
mov
push
prefetch
xor
dec
sub
std
lcall
mov
dec
jbe
jno
lock
popf
inc
push
pop
lds
jbe
jae
jle
nop
mov
leave
inc
stc
mov
inc
ret
ja
or
mov
loopne
cmpsl
mov
xchg
sbb
sub
gs
sub
cmp
and
add
out
scas
add
stc
fwait
jae
ja
js
add
add
lods
xchg
mov
mov
mov
popa
cmp
leave
fcmovnu
imul
imul
xchg
xchg
mov
xorb
loopne
std
mov
push
xor
adc
scas
inc
xchg
rcl
mov
or
adc
testl
ficoml
inc
push
fnstsw
cmpsl
cltd
and
dec
insl
into
pop
xlat
lds
push
jmp
or
call
cltd
push
jnp
in
xchg
pop
xchg
les
sub
leave
call
ret
mov
mov
lahf
lods
push
sub
mov
or
in
or
pop
arpl
cmp
push
dec
push
out
sub
add
xor
movsl
test
xlat
fdivr
push
rolb
cltd
fisttpl
enter
jnp
sbb
cli
and
inc
gs
rcll
adc
sbb
xor
sarl
out
add
inc
mov
in
push
pop
aas
sbb
cmp
loop
sbb
mov
aas
xor
call
xchg
xchg
jne
mov
jecxz
or
insb
aas
and
mov
xchg
cmpsb
jnp
andnps
dec
daa
std
sbb
mov
jbe
call
shrl
xchg
in
pminub
ljmp
or
rcll
lods
leave
shlb
lods
cmp
inc
movsb
jo
jp
call
dec
lea
jne
xchg
sbb
xchg
and
and
xor
fwait
out
cmp
pop
sarb
andb
pop
xor
pop
stos
stos
mov
sub
mov
lret
sbb
mov
mov
leave
xchg
add
fistps
popf
xchg
pop
dec
fistpll
lret
jnp
jl
cltd
inc
dec
repnz
xor
imul
mov
ret
repz
push
xchg
loope
push
push
xchg
mov
inc
scas
xor
popa
add
pop
iret
cwtl
int
sub
xor
sbb
xchg
jl
push
lea
mov
sub
ds
ds
push
and
cmp
out
cmp
jle
cld
nop
adc
clc
bound
hlt
pop
sub
mov
mov
ljmp
mov
adc
je
repz
jns
cmpsl
mov
daa
xor
fistpll
mov
mov
cmp
pop
outsl
imul
arpl
insb
sbb
es
js
adc
lret
xchg
stc
out
mov
mov
or
cwtl
and
out
and
popa
or
xchg
int
push
lods
sub
mov
scas
mov
scas
sbb
fcompl
inc
or
add
push
push
outsl
pop
ds
mov
cli
jmp
add
cmp
loope
lock
add
push
jge
mov
sub
movsb
pop
push
sub
add
mov
aaa
ljmp
movsl
loop
and
adc
bnd
clc
jbe
je
xlat
fdivrs
mov
and
fldt
shlb
jg
jmp
add
jp
pop
ljmp
sub
aad
out
mov
inc
ffreep
or
jno
fadds
into
shld
add
sub
jge
mov
ss
ret
movsb
arpl
clc
sub
pushf
lock
fisubrl
fwait
inc
out
mov
inc
jmp
in
test
mov
in
shl
lds
faddl
bound
or
nop
sub
mov
js
cmp
mov
xlat
inc
cld
push
and
push
mov
mov
pop
xchg
pop
inc
out
aad
ss
test
imul
add
outsb
pop
xchg
lret
push
setle
inc
cmp
push
inc
jmp
dec
cli
mov
fcompl
mov
fldl
dec
sub
jo
and
mov
mov
mov
jb
outsl
and
xor
cltd
mov
jo
sub
ret
push
and
sub
jnp
and
xchg
push
int3
mov
das
rorl
sbb
pop
mov
and
xlat
sahf
mov
in
jne
imul
xor
std
mov
push
sti
lcall
push
dec
xor
stc
sub
mov
lcall
jns
sarl
jno
jb
sbb
cmp
cld
jne
add
cmp
lret
adc
shlb
iret
inc
andl
cmpsl
fs
inc
xchg
das
jb
movsl
stc
inc
xor
fistl
pop
sbb
ret
dec
mov
adcb
aas
and
dec
push
push
fcmovb
cwtl
addl
andl
cs
mov
nop
pop
in
inc
xchg
mov
pop
arpl
xchg
jns
mov
fsubl
dec
sub
out
fldt
lea
std
push
test
pop
mov
xchg
push
cmp
xchg
cmpsl
test
ljmp
pop
cli
nop
mov
popa
sti
popf
cmpl
pushf
adc
rorb
mov
imul
xor
or
sti
inc
sahf
rol
dec
stos
sbb
subl
mov
jb
sbb
inc
or
cltd
push
leave
lahf
cmpsb
aaa
pushw
xor
cmpsb
lret
sbb
imul
stos
stos
inc
mov
lret
mov
stos
movsl
pushf
xor
lds
inc
xchg
inc
add
movsb
outsb
fwait
cmp
inc
add
dec
cld
push
cmc
jle
cmp
ret
mov
outsb
leave
pop
addr16
cwtl
test
jmp
xchg
lods
add
stos
stc
cmp
cmp
mov
andb
test
imul
sub
cmpl
jp
push
aad
mov
aam
add
fsubrl
gs
out
xchg
std
divb
mov
and
pop
fcompl
jl
inc
mov
js
insl
outsl
in
faddl
mov
jp
packuswb
pop
jbe
pop
hlt
pop
xor
inc
mov
xor
pushf
jns
xchg
push
fwait
insb
adc
lcall
inc
push
sub
cld
inc
xchg
mov
and
into
lahf
jno
mov
popa
mov
movsb
jno,pn
lcall
or
lock
cmp
int3
and
pop
mov
pop
call
mov
clc
jbe
movsl
push
scas
add
jmp
pop
lahf
mov
add
mov
adc
sub
rorb
push
fs
adc
lock
mov
hlt
imul
jp
or
les
fcomi
mov
xor
mov
jmp
loop
lods
adc
pop
or
mov
popf
inc
aas
mov
xorb
out
dec
jns
cmp
push
notb
or
icebp
fimull
std
push
mov
mov
pop
adc
xor
jo
xchg
push
hlt
push
cltd
lock
push
mov
int3
mov
call
inc
inc
jle
jecxz
xor
lahf
aaa
jb
loop
cmp
mov
repnz
adc
add
push
jnp
push
push
and
sti
sbb
xor
jno
dec
or
dec
or
mov
sbb
adc
pop
shll
push
inc
ficoml
les
popa
add
in
insl
adc
pushf
xor
ror
adc
sarb
inc
das
mov
ljmp
xchg
fldcw
pushl
sub
pop
popf
insb
xchg
lea
into
sbb
ret
aaa
in
popl
cld
jne
or
push
pusha
xchg
ss
addr16
inc
out
or
fistpl
push
push
mov
mov
xchg
bnd
mov
addb
ds
andb
sbb
int3
into
or
pop
std
outsb
sarl
xchg
imull
jp
dec
sub
cwtl
js
cmp
sub
sbb
sbbb
mov
out
xor
mov
sahf
mov
mov
test
jmp
lods
out
mov
pushf
xor
mov
inc
mov
cs
lret
out
in
xor
aas
push
popf
inc
test
xor
cmp
lods
add
cmp
in
in
sbb
add
std
cmpsb
fcmovb
dec
rcrb
jns
leave
or
jge
jo
jae
push
mov
inc
inc
int3
aam
icebp
or
jbe
fildl
xchg
dec
add
add
mov
pop
std
cmp
std
sbb
stos
jb
rcl
sbb
inc
test
push
pop
push
xlat
xor
repz
out
pop
sub
int
mov
sub
xchg
daa
jae
inc
xor
imul
icebp
andb
jg
mov
addr16
jecxz
push
xchg
ds
nop
cli
imul
xchg
popf
subl
insl
sub
outsl
and
data16
sbbb
ret
mov
xchg
xchg
push
je
test
stos
xchg
decl
outsb
dec
mov
adc
mov
xchg
or
ret
hlt
sti
rcl
jp
std
push
and
ffree
jns
add
push
mov
sbb
pop
fdivl
popl
aam
lods
xchg
lret
rcl
int3
mov
mov
xchg
inc
mov
jns
test
and
je
lds
insl
mov
xchg
nop
outsb
fiaddl
sahf
xor
cmpsl
cli
test
iret
cmpsl
in
pop
mov
sahf
or
pop
inc
mov
int3
push
pop
or
out
and
cmp
sub
add
ja
movsb
ds
push
xchg
sbb
lock
in
popf
outsl
cmp
loopne
flds
adc
cmpl
adc
fisubrs
and
mov
push
int3
add
jbe
xchg
push
dec
int
jnp
dec
adcb
out
push
push
or
push
xchg
push
rcrl
inc
shrl
lds
pop
adc
outsl
inc
addr16
jb
pushf
jl
mov
test
imulb
int3
xchg
xor
push
inc
int3
sub
add
pop
imul
xor
dec
in
mov
lahf
daa
jge
nop
call
xlat
jbe
mov
fs
popa
cmp
dec
mov
pop
fnstsw
xlat
jb
sub
xor
sbb
jb
pop
cmp
pop
in
sbb
movsb
or
addr16
mov
cld
test
and
or
mov
cmp
out
jmp
and
pop
js
or
ss
dec
cmp
loopne
notb
sti
push
fdivr
fidivs
pop
cmp
mov
test
cld
rorl
fsubrs
scas
inc
cmpsb
pop
dec
loope
pushf
andb
int3
sbb
imul
xorl
loopne
cmpsb
push
call
std
mov
ret
pop
dec
dec
scas
gs
cmpsb
inc
push
mov
cmpsb
pop
cmp
fiaddl
pop
cltd
mov
cmp
pop
or
stc
adc
adc
xchg
call
clts
imul
js
divb
xchg
dec
sub
das
cmp
std
pop
loop
mov
fcmovbe
outsb
daa
mov
dec
and
pop
dec
sub
jge
jecxz
pushf
push
repz
rcrl
fcomip
leave
test
stos
icebp
ljmp
sbb
jg
rorl
idivl
vcvtps2dq
sbb
or
insb
fistl
xchg
xchg
cmp
hlt
cwtl
aam
mov
fdivrl
push
or
movsl
sub
es
les
inc
xchg
dec
out
and
mov
rol
push
mov
sub
pop
push
or
cld
mov
negb
inc
pop
testl
mov
pause
sarb
xrelease
push
into
add
stos
and
push
mov
xchg
inc
lret
add
data16
cmp
nop
jle
test
mov
xchg
adc
and
aas
pop
movl
imul
shll
in
pavgw
pushf
mov
mov
add
addr16
fcmovne
and
and
pop
mov
xchg
lea
push
adc
mov
mov
notl
dec
sub
pop
cmp
mov
je
ret
shll
test
cld
fcom
dec
rorl
dec
int3
cli
mov
push
ret
and
pop
xchg
mov
sbb
xchg
mov
pop
leave
aad
iret
xchg
mull
xchg
jbe
clc
sub
loopne
add
js
sub
test
iret
int3
jb
xor
jp
shl
mov
mov
cmp
mov
in
loope
jns
and
subl
stos
and
out
cmpsb
outsl
or
iret
outsl
nop
jl
xchg
xor
mov
imul
sub
dec
dec
or
mov
daa
and
mov
mov
and
mov
pop
sbb
jnp
adc
out
jne
inc
xchg
in
orl
xchg
and
cmp
pop
ds
mov
cmp
jge
test
stos
xchg
cmp
or
int
test
fdivrl
mov
sahf
outsl
cmp
mov
jnp
and
mov
jb
cmpsl
outsb
xor
shrl
jp
sti
jecxz
pop
jnp
jo
mov
adc
lods
fwait
jge
test
testb
dec
scas
sbb
add
jbe
mov
sub
cmp
push
sub
xlat
leave
and
mov
jo
insl
outsl
roll
jns
push
ja
popf
mov
sti
fcoms
mov
dec
aas
mov
loop
sub
arpl
push
mov
pop
lock
jmp
outsl
push
sbb
filds
adc
idivb
lretw
xchg
push
cltd
bound
and
mov
mov
add
inc
stc
push
int
shr
test
hlt
sbb
insl
mov
and
ljmp
cwtl
cmp
jp
jge
imul
sbb
inc
das
xchg
pusha
fdivrs
inc
add
jl
jbe
cmpsb
mov
scas
rcrl
lcall
inc
add
lods
push
mov
pop
movsl
mov
inc
mov
out
fldl
pop
lret
int
popa
push
ja
mov
dec
lahf
jb
cmp
call
decl
int3
lds
pop
xchg
into
inc
xor
push
inc
adc
lds
out
repz
je
inc
in
test
or
addb
stc
jnp
cmc
in
jne
pop
popf
ja
lret
xchg
cmpsl
rorl
sar
adc
xor
add
sti
cmp
inc
div
pop
ljmp
push
loope
sbb
ljmp
adc
lahf
xor
xlat
ficoml
push
add
jno
ret
mov
xchg
shlb
sub
cmp
jns
out
enter
adc
mov
dec
sar
shrl
shlb
shr
xor
fwait
popl
or
sub
xor
adc
rep
cmp
jns
lea
sbb
adc
sub
mov
insb
mov
into
mov
or
inc
sahf
je
sbb
mov
push
inc
mov
sbb
fwait
out
sbb
push
mov
or
in
aas
fidivs
push
iret
cmp
inc
sub
fwait
push
push
mov
out
mov
inc
mov
xorl
inc
shlb
cmp
pop
cmp
cltd
dec
std
insl
push
xor
sbb
cmpsl
mov
mov
cld
jns
pop
leave
sbb
lock
inc
mov
sub
fs
mov
out
aad
pusha
movl
push
lret
and
fstl
dec
int3
mov
sbbl
arpl
mov
pop
push
ds
dec
jo
jge
js
jp
pusha
adc
int3
lock
cmpsb
dec
ret
pusha
xor
mov
out
stos
jg
jle
shr
test
sub
adc
test
cmp
jecxz
stos
shll
ds
xchg
push
js
jne
rcr
ret
jo
jno
xchg
in
add
cmp
sbb
out
stos
and
shl
push
loopne
inc
dec
in
mov
mov
pop
in
inc
xchg
scas
out
cmc
in
in
and
push
add
xchg
sub
or
or
movsl
and
jo
andl
outsb
nop
mov
fsub
mov
aaa
mov
adc
and
inc
in
inc
or
pop
scas
test
lea
popf
jno
stos
and
push
xchg
pusha
mov
xchg
jno
inc
xchg
sti
in
xor
jl
leave
sub
lock
sbb
pushf
sub
test
das
arpl
mov
sahf
adc
fcompl
popa
addr16
jb
pop
mov
and
xchg
test
mov
shll
cmp
cmp
ljmp
daa
add
push
inc
sbb
dec
loope
xor
dec
nop
rcrb
mov
pushw
cmp
cmp
xchg
cmpsb
lahf
mov
js
jae
push
dec
mov
jge
adc
sbb
xchg
sub
xor
lcall
inc
push
test
xchg
dec
sbb
mov
dec
or
sarb
cmc
pop
mov
push
mov
scas
mov
cmp
subl
ja
xchg
in
push
jl
test
in
das
pop
push
jb
fs
push
mov
mov
icebp
cmpsb
dec
pop
mov
pop
fistpl
mov
ret
add
dec
mov
push
mov
push
pop
rclb
stos
andl
mov
fs
lcall
sub
pop
cwtl
add
cmpsl
pusha
jecxz
loope
jbe
leave
lock
inc
push
add
data16
sub
push
inc
shlb
call
jmp
inc
or
jmp
test
fdiv
dec
mov
mov
jp
mov
cmpb
lahf
test
cmp
or
ret
int3
insb
in
mov
mov
jmp
aas
jns
mov
bound
cmp
int
inc
jmp
sbb
or
cli
pop
mov
lds
imul
outsb
clc
cmpsb
or
test
shrl
out
lahf
enter
repnz
jp
inc
mov
mov
lds
xor
push
scas
mov
cmc
lock
aaa
inc
mov
adc
dec
imul
push
outsb
and
jecxz
test
imul
testl
xchg
scas
scas
pop
mov
negl
xchg
mov
jb
mov
popf
inc
mov
xchg
pop
je
push
inc
sub
popa
dec
or
and
repnz
popf
mov
sbb
out
xchg
xchg
mov
in
cmc
sub
cwtl
ret
aas
xor
test
call
enter
jbe
js
imul
test
in
push
xchg
cmp
mov
cmc
xchg
jp
dec
je
pop
loop
jae
mov
xchg
jg
jmp
and
testl
mov
ret
shr
sbb
mov
ds
stos
stos
insb
jnp
int
fisubl
repz
inc
adc
faddl
push
lea
outsb
fistl
mov
and
test
dec
adc
cli
jge
in
loop
adc
adc
loope
mov
out
add
bnd
das
insl
fsubp
inc
int
movsl
inc
pop
add
es
je
in
mov
aaa
adcl
xor
cmpsb
dec
inc
push
je
shlb
leave
pop
notl
pop
leave
sbb
fdivl
iret
out
sub
push
mov
cli
inc
xchg
ds
lret
xlat
adc
dec
push
sub
fisubl
ss
and
jno
mov
dec
dec
in
fwait
mov
xlat
add
mov
pushf
adc
repz
pushf
dec
jecxz
push
movsb
lret
call
xchg
popf
jae
jne
dec
lods
mov
pushl
les
push
cmp
mov
xlat
imul
dec
in
test
mov
lods
jp
add
adc
test
int
scas
and
adc
jbe
loope
test
scas
daa
lods
stos
decb
int
iret
in
incb
testb
jnp
addr16
arpl
cmp
aam
ja
mov
call
sub
jb
jno
and
in
decl
arpl
or
sbb
popf
xlat
add
mov
jl
pusha
cwtl
adc
jbe
xchg
scas
ljmp
sbb
xchg
sub
fsts
dec
fisttps
push
mov
mov
xor
mov
xor
addr16
lock
lea
mov
ror
xor
sub
mov
push
xchg
cmp
into
sub
mov
mov
pop
mov
fiadds
lahf
movntq
out
pop
into
add
push
push
pop
mov
push
shll
inc
dec
mov
lea
dec
imul
pusha
imul
dec
aam
mov
test
mov
lret
dec
out
sbb
test
mov
push
push
adc
pop
mov
and
lahf
fistpl
mov
nop
les
into
sbb
jl
insl
hlt
rorl
mov
lock
inc
push
lret
mov
mov
gs
cmp
jnp
mov
jno
pop
cld
roll
pop
mov
jge
in
cmp
sbb
adc
shll
mov
enter
loope
adc
leave
sub
sbb
jo
xchg
in
dec
icebp
loopne
dec
fisttpl
xor
test
les
push
or
idivl
xlat
in
jp
or
mov
cmp
aam
jle
jnp
stos
xor
inc
out
test
pop
inc
cmp
cs
leave
popa
dec
mov
xchg
inc
mov
into
add
inc
rep
gs
xchg
cmpl
sub
pusha
add
hlt
push
adc
mov
cmpsl
mov
xchg
fs
push
mov
xchg
mov
int3
cmp
adc
and
jbe
jl
es
aam
add
in
xor
ljmp
outsb
jne
mov
add
push
pushf
and
movsb
dec
jecxz
orb
aam
jle
fsubl
test
test
inc
and
vpsubw
imul
mov
imul
int
push
push
mov
in
loop
sub
rcrl
pop
lret
mov
std
jns
cli
mov
mov
sub
mov
mov
pop
and
add
imul
pop
and
or
sbb
inc
push
cmp
stos
sbb
push
enter
sbb
fldcw
jae
sbb
iret
xchg
insb
pushw
add
and
sti
mov
xorl
mov
pop
pop
mov
jle
fmul
inc
shrb
ds
inc
scas
imulb
lea
ret
add
or
sbb
movhps
lods
fnstcw
xor
xor
sar
inc
jne
mov
and
cmc
pop
ss
jo
xor
mov
and
imul
adc
add
push
inc
dec
push
cmp
and
mov
xor
and
orl
inc
jnp
inc
in
and
xor
movsl
sahf
scas
cli
dec
inc
dec
lahf
lds
adc
push
ret
outsl
push
cmp
inc
push
mov
dec
jp
dec
and
pop
lds
inc
sub
aad
and
dec
movsl
loope
lods
cmpb
add
test
dec
or
cmp
jne
sub
ljmp
inc
gs
adc
negl
lods
nop
jno
imul
mov
add
fcmovnbe
jnp
xchg
mov
jecxz
pop
popa
sbb
xor
jo
dec
xchg
adc
jno
cmp
fisttps
aas
mov
mov
inc
adc
imul
stos
adc
xchg
leave
push
testb
push
mov
and
test
push
and
adc
mov
mov
jg
sub
and
dec
stos
sub
sub
cmpb
xor
push
sbb
divb
mov
jl
in
inc
faddp
xchg
imull
test
push
pop
and
push
repz
stos
inc
into
rcl
les
mov
xchg
jmp
dec
or
jnp
out
jle
mov
or
add
lods
fisttps
mov
pop
add
fwait
int
cmp
mov
fldt
arpl
mov
mov
or
mov
in
push
jmp
push
inc
call
push
mov
add
inc
cmp
pop
dec
and
jae
push
pop
xor
push
cmpb
loope
dec
jbe
dec
pop
pusha
sbb
fsubl
out
lcall
xchg
test
mov
or
hlt
mov
test
push
pusha
xlat
pop
jmp
cmpsb
mov
mull
or
push
cld
gs
repz
cli
inc
popa
mov
push
ret
cmp
enter
rolb
xorl
mov
push
pop
sbb
xchg
scas
cmp
mov
pop
sbb
cwtl
out
popl
pop
xchg
jno
frstor
adc
push
out
jp
div
int3
in
xchg
or
xor
xor
dec
pop
sbb
add
testb
adc
cmp
push
jo
sbb
je
enter
outsb
outsl
data16
shl
jns
dec
mov
test
jbe
jb
mov
adc
add
adc
jle
lock
imul
sub
xchg
push
pusha
dec
xor
mov
lret
mov
pop
out
enter
out
mov
call
lcall
pop
pop
dec
adc
mov
outsb
scas
dec
pop
jmp
pop
popa
cld
pushf
sub
dec
mov
stos
mov
pop
iret
sbb
jge
ret
loope
dec
cmc
mov
ss
cmp
xorb
adc
pop
sub
pop
inc
aam
mov
inc
xor
push
mov
gs
les
mov
sbb
jecxz
data16
dec
xor
xchg
into
pop
das
pushf
jle
jo
ja
fcomp
mov
jbe
adc
inc
jmp
ret
cs
cmp
inc
ficomps
xchg
daa
stos
or
sti
push
lret
arpl
adc
daa
jb
je
mov
and
mov
lock
dec
add
sbb
jle
sbbb
std
cmp
shlb
mov
mov
lods
lahf
or
outsl
cld
and
mov
sub
enter
imul
dec
xchg
pop
pusha
inc
push
lret
jbe
aam
push
xchg
movsl
negl
push
call
mov
subl
or
cwtl
mov
mov
push
stc
cmp
or
ret
dec
mov
pop
inc
add
or
call
mov
inc
roll
sub
dec
xor
loop
ficompl
xchg
mov
push
mov
push
mov
in
and
lret
test
mov
sahf
lods
ficomps
sbb
pop
xchg
aam
mov
test
mov
jno
sets
inc
xchg
mov
lahf
shlb
jg
stos
repz
push
push
xchg
in
cmp
inc
repnz
ljmp
push
push
fldpi
push
inc
mov
inc
jbe
test
sbb
push
dec
inc
scas
outsb
cmp
mov
mov
mov
xor
push
negl
sbb
push
adcb
mov
call
sti
std
push
push
test
xlat
mov
ja
pop
iret
adc
pop
inc
xor
fistps
ja
push
shll
jle
jb
sub
add
fs
cmc
and
xor
enter
sub
in
ja
fisttpl
mov
xor
movsb
hlt
fstpl
dec
cmpsl
rcrb
lds
cmp
stos
imull
imull
nop
xor
push
push
idiv
xchg
and
xor
inc
enter
mov
mov
call
push
std
out
out
xor
and
mov
sbb
ret
subb
mov
insl
pushf
fs
and
mov
add
inc
pop
push
ss
lcall
shrb
push
cli
sbb
mov
scas
jp
lahf
mov
dec
mov
dec
dec
and
jp
push
mov
dec
sub
repz
imul
sbb
inc
fwait
xor
repnz
sbb
mov
cwtl
and
add
dec
xor
shl
les
out
lods
orb
xchg
xor
lods
out
div
cmp
pop
mov
or
or
cmpsb
rcr
stc
and
and
mov
sbb
cltd
add
mov
addb
and
shl
aam
gs
scas
aas
fstpl
xlat
pop
mov
ficomps
fnstcw
sahf
mov
stos
mov
rcr
sbb
jb
xlat
adc
popf
stos
repnz
inc
fsubrp
sbb
push
das
inc
push
xchg
inc
dec
js
jmp
or
std
adc
xchg
jae
and
sbb
add
cmp
sub
dec
cld
push
dec
into
fiaddl
dec
cmp
shlb
sub
loop
cmpsb
movsl
and
pop
repz
sbb
cmp
inc
sub
pop
push
cmp
add
daa
in
inc
repnz
mov
mov
popf
push
enter
and
aas
les
push
and
loop
arpl
aaa
outsb
cmp
aaa
filds
test
and
out
or
mov
lcall
lcall
pop
xor
lods
mov
out
loope
sahf
popfw
and
lods
arpl
cltd
mov
aad
dec
lds
pop
adc
cs
xor
sti
ret
clc
jbe
jno
adc
je
push
repz
mull
aas
xor
fbld
add
xchg
dec
pop
xlat
mov
pop
incb
out
xlat
insb
jb
jmp
fs
mov
pop
iret
dec
jae
jmp
lock
xchg
cmpb
mov
xchg
sbb
call
cmp
inc
lahf
mov
cmpsl
pop
sbb
xchg
dec
outsb
out
test
jo
repnz
mov
and
js
repz
or
dec
xor
push
push
insl
into
xor
insl
ja
es
pop
mov
cltd
aad
inc
add
pop
cld
cli
roll
jns
xchg
mov
cmp
mov
les
dec
and
je
pop
sbb
les
push
stos
jbe
xor
and
outsl
xchg
mov
nop
repz
and
mov
addr16
mov
xchg
xchg
sti
push
jne
imul
roll
push
push
sbb
xor
push
pop
daa
aaa
push
xor
int3
and
test
mov
pop
xchg
adc
subl
lret
inc
push
scas
hlt
dec
pop
js
arpl
shrb
scas
rcrl
push
dec
jae
add
insb
add
fists
scas
dec
xchg
and
xor
jne
cmp
push
movsl
dec
mov
and
cmp
shl
roll
jno
fisttps
mov
jmp
lret
movsb
lds
das
jae
pop
mov
push
cmp
test
sub
pop
push
out
insb
out
repnz
sub
movsl
push
lret
shrl
adc
dec
push
mov
out
jp
mov
in
filds
jne
ja
jno,pt
mov
mov
repz
fisttpll
call
or
popf
subb
repz
aaa
dec
lds
push
lea
sbb
cli
xchg
cs
in
sahf
mov
clc
iret
lahf
pushf
jle
push
test
frstor
mov
ret
dec
outsb
decl
out
push
in
adc
jg
xor
out
sub
mov
cli
cmpsb
mov
mov
pop
inc
xchg
mov
stos
xor
xlat
call
xchg
insb
xchg
std
pop
mov
pop
xchg
xchg
loopne
sub
cmp
call
pop
cwtl
xor
push
push
adc
push
mov
push
pcmpeqw
pushf
mov
sbb
mov
mov
xchg
into
inc
stc
and
or
fisubrs
mov
jae
in
icebp
pop
jnp
xor
aad
scas
cld
adc
loopne
xor
mov
xchg
fistl
stos
mov
sub
sbb
lret
std
mov
imul
cmp
xchg
cmpl
scas
add
or
or
leave
in
adc
jp
push
stos
mov
jne
adc
mov
xorb
rdtsc
add
pop
mov
testl
cmpsl
mov
int
sbb
insl
and
insb
call
sbb
push
repz
pop
adc
sbb
inc
inc
divl
icebp
fstpl
je
iret
stos
xchg
dec
test
and
xlat
scas
add
sbb
daa
xor
mov
push
ret
add
addr16
bound
pop
std
jb
xlat
and
cli
sbb
das
ret
lcall
mov
scas
cmp
sbb
in
push
pusha
daa
lahf
ret
insb
inc
imul
add
or
mov
int
pusha
icebp
outsl
bnd
test
sbb
dec
fcompl
repz
pop
inc
loope
repz
jmp
xor
enter
adc
xor
sti
push
xor
rorb
clc
push
out
sub
aaa
add
cmp
shrb
mov
nop
xchg
mov
leave
mov
stos
test
push
imul
scas
rorb
cmp
out
pushf
lea
stos
jge
dec
cmp
push
mov
jne
pop
sub
adc
ficompl
xchg
mov
push
jmp
rcl
adc
sub
push
cmp
push
xchg
dec
int
cwtl
pop
or
stos
inc
pop
mov
mov
addb
dec
or
fxrstor
jnp
insb
call
test
push
insb
rclb
mov
mov
push
addl
insl
xchg
test
inc
xor
js
cmp
std
and
dec
das
das
mov
sti
sub
pop
mov
leave
mov
imul
dec
pop
xchg
xlat
shrb
push
arpl
dec
pop
ss
xor
dec
ss
push
outsb
mov
xor
mov
add
pop
nop
jge
or
add
pushl
push
movsl
hlt
and
rolb
imull
push
fwait
jle
lock
mov
movsl
out
out
push
mov
stos
sti
mov
ds
sbb
cld
add
xor
fnstsw
rcll
hlt
pop
stc
imul
cltd
xchg
xor
jle
jno
mov
les
or
adc
sub
add
pop
insl
push
jg
mov
daa
pushf
gs
cwtl
ja
mov
inc
sbb
lret
pop
cmp
fdivp
mov
bound
mov
adc
outsl
push
push
mov
jmp
adc
out
lcall
mov
cs
adc
inc
ljmp
mov
add
data16
mov
jecxz
iret
leave
dec
sbb
lahf
fstps
jno
je
inc
mov
adc
movsl
pop
orb
adc
fbld
dec
pop
mov
mov
sbb
xchg
xor
ss
add
or
mov
shrb
sbb
mov
sub
test
divb
sti
adc
call
inc
push
push
mov
dec
mov
mov
in
push
sub
push
mov
loope
movsl
jmp
ds
mov
and
pusha
test
inc
xor
cmp
sbb
cli
adc
mov
lods
push
mov
dec
inc
xor
iret
jmp
ds
xor
sub
test
cwtl
sbb
fstpt
push
and
cwtl
or
jne
loop
outsb
or
fcmovnb
sbb
icebp
and
jb
xchg
dec
push
cltd
jp
add
and
fwait
xchg
imull
mov
add
test
popf
mov
fildll
pop
xor
mov
mov
pop
addb
jmp
or
lahf
pop
mov
pop
ss
in
icebp
fstpl
cmp
leave
inc
xor
in
insl
xlat
scas
sbb
outsb
les
cs
inc
dec
sarl
or
shl
bound
loop
push
call
fsubrs
rolb
mov
mov
into
adc
loop
leave
aad
scas
jle
test
and
bound
push
mov
mov
mov
sbb
dec
nop
insl
nop
insl
cs
test
pop
jb
jno
test
pop
icebp
or
out
add
dec
mov
repz
cmp
cli
add
xlat
mov
call
inc
mov
sub
sub
xchg
cmpsl
pushf
addr16
test
jge
or
cs
arpl
ficompl
mov
and
js
out
mov
lahf
inc
xchg
mov
aam
enter
ss
movsb
popa
and
adc
sbb
and
mov
xchg
mov
setnp
outsl
testb
pop
jge
and
jge
lcall
jo
lahf
xor
xor
xchg
cmpsl
and
repnz
lock
mov
and
sbb
icebp
push
sahf
adc
inc
out
sub
mov
loope
mov
mov
pop
mov
xchg
mov
insb
or
js
jnp
popf
mov
lcall
inc
lds
les
add
cld
loop
push
sahf
lock
out
lret
bound
push
mov
dec
sub
pushf
xor
loope
cmp
stc
xchg
mov
pop
leave
lods
lods
subps
int3
and
dec
mov
lds
cld
fimull
xor
push
push
cmpsl
pop
pushf
pop
aas
cld
int3
ficoml
pusha
cmc
js
gs
bound
mov
cmc
shll
into
and
addr16
test
pop
mov
dec
inc
cmp
push
shlb
pushf
rolb
call
xchg
push
imul
mov
movaps
jg
xlat
shrl
lahf
ss
dec
mov
mov
loope
mov
push
sbb
sub
fsubrp
inc
aaa
lcall
pusha
pop
ficompl
test
icebp
jbe
mov
in
mov
shl
dec
fbld
pop
orb
int
insb
adc
data16
mov
inc
jbe
imul
ljmp
or
sbb
dec
push
sub
call
mov
mov
adc
dec
xor
rolb
dec
mov
mov
cmp
ss
jo
ret
jne
pop
daa
jo
jb
rorb
pop
sub
ret
cmp
push
lcall
loope
sbb
push
cmp
lahf
lock
mov
fildll
cmpsl
pop
mov
push
xchg
cmpsl
adc
lret
test
hlt
push
cld
popf
push
rcrb
out
mov
das
pop
fdivrs
xchg
nop
cmp
cltd
or
dec
sbb
inc
sti
jne
pop
xlat
aaa
clc
in
mov
sub
pop
pop
shr
pop
pop
dec
mov
fildl
cmp
loopne
mov
hlt
sbb
pop
jl
inc
lcall
push
sbb
mov
pop
mov
fwait
push
pop
xor
add
dec
outsb
repz
push
mov
cwtl
jb
sbb
fsubrs
or
push
xor
dec
aam
dec
push
dec
leavew
pop
lret
frstor
mov
cmc
jne
and
mov
or
add
jns
add
mov
pop
andl
test
inc
in
sub
arpl
jle
popf
mov
mov
jne
aad
inc
fnstenv
sub
out
lret
jns
xor
push
pop
leave
mov
stos
jns
in
push
xlat
das
add
pop
mov
in
push
xchg
test
push
jl
aas
sbb
pop
mov
scas
testl
addr16
fadds
jge
push
notl
push
xchg
inc
mov
clc
mov
stc
loopne
mov
xor
push
mov
jg
mov
jecxz
dec
cmp
js
push
xchg
sub
inc
jg
jnp
je
int
or
mov
sub
add
imul
mov
mov
add
xchg
pushf
pop
in
jmp
xchg
mov
out
and
add
das
imul
cmp
dec
sbb
add
mov
scas
jecxz
xor
addb
dec
mov
mov
pushf
sahf
add
xchg
and
mov
push
mov
cs
cld
jle
mov
fwait
loopne
ja
in
and
sub
push
scas
jns
xchg
fsubl
push
mov
cmp
push
je
add
and
iret
js
and
out
xor
cmp
loope
call
xchg
pop
lods
mov
xor
pop
sub
jle
test
test
ljmp
lea
fisubl
and
push
cmc
pop
fimuls
sti
cwtl
pop
lds
iret
pop
in
loop
fidivl
lock
or
inc
xorl
sbb
je
lcall
bound
or
pop
aam
das
mov
divb
shlb
hlt
mov
mov
push
adc
pop
cmp
jecxz
jb
dec
sti
mov
inc
call
arpl
imul
sbb
pop
test
iret
sub
out
call
pop
lret
mov
neg
or
nop
adc
testb
and
jecxz
jnp
std
daa
mov
cwtl
dec
pushfw
add
pop
aas
sub
dec
push
add
mov
popf
inc
insl
dec
or
popf
insb
sbb
xor
addr16
imul
insb
idiv
rep
cmp
push
sahf
inc
test
aas
ss
inc
sbb
outsb
inc
out
or
mov
mov
leave
adc
mov
pop
mov
mov
repz
mov
gs
inc
pop
push
fidivl
in
ss
fiaddl
scas
aam
insb
adcl
xor
mov
into
sbb
xorb
lods
movsb
add
inc
movsb
insl
xchg
or
pop
setnp
int3
mov
jnp
shr
jns
xor
jns
lret
addr16
inc
add
sbb
enter
xor
jno
je
pop
lods
lahf
or
add
xor
xor
dec
cltd
mov
mov
int
mov
and
in
and
pop
scas
sub
mov
push
pusha
inc
xor
jo
pop
popf
out
push
pop
ja
and
sub
mov
xor
sub
xchg
xchg
lds
pop
add
sbb
jae
out
repz
fdivr
push
xchg
pop
jmp
inc
adc
adc
es
inc
pop
xor
pop
dec
shll
fs
rcrl
mov
xor
inc
frstor
in
mov
cmp
sbb
pop
or
push
jle
jle
jb
xor
test
test
jmp
out
bnd
loope
fidivs
and
out
sub
xchg
adc
dec
stos
pop
pop
or
xchg
popf
das
loope
dec
fstl
add
rolb
jae
aam
xchg
leave
lcall
mov
mov
mov
js
repz
mov
pop
dec
xchg
sub
mov
cmp
sti
daa
cs
adc
scas
leave
ret
scas
out
jnp
inc
adc
cmpsl
into
jle
jp
adcl
dec
aam
or
clc
sub
ds
pop
icebp
pop
push
lahf
daa
scas
outsl
cmp
adc
pop
and
ret
cmpsl
pop
pop
and
cli
push
sbb
loope
mov
push
pop
cmp
dec
push
call
push
das
adc
mov
movsb
shr
divb
jle
inc
pop
fmull
xchg
popa
sbb
push
dec
repz
data16
ja
sarb
out
inc
xor
add
cmpsb
xor
je
or
lds
cmp
jmp
jge
loopne
fs
pop
xchg
pop
dec
movsb
flds
inc
inc
cmp
out
sbb
out
and
fwait
insb
mov
xchg
xor
cmpsb
in
sbb
dec
loope
pusha
push
xlat
mov
jmp
loope
and
xchg
in
int3
cmc
pop
xlat
addl
rcl
mov
pop
mov
les
mov
sbb
fnstcw
pop
lahf
dec
xchg
xor
popf
cmp
jmp
add
lret
pushf
sbb
jp
adc
pop
sub
mov
cmp
insl
out
or
popf
aas
nop
pop
in
push
or
mov
mov
movsb
xchg
sub
push
cld
push
lret
pop
xlat
int3
jnp
push
mov
ss
cmp
jg
push
adc
ljmp
lock
icebp
outsb
mov
xor
adcl
out
addr16
mov
mov
push
xchg
jno
sub
cmp
movl
mov
lret
daa
sbb
in
lds
xchg
dec
mov
dec
sar
inc
push
mov
adc
out
rorb
out
pop
mov
ja
ffree
add
stos
adc
into
mov
int
add
mov
sub
pop
sub
mov
mov
push
cmc
cwtl
ljmp
add
movsb
scas
mov
push
sub
cmpxchg
mov
jle
fdivrs
pop
mov
inc
loopne
fnstcw
push
sbb
sti
sub
pop
mov
inc
js
int3
nop
inc
jns
or
adc
jnp
dec
js
imull
std
repz
repz
fxam
pop
std
adc
mov
jl
pop
bnd
sub
movsl
in
mov
outsl
shrl
mov
and
fwait
icebp
mov
jnp
in
mov
xchg
outsb
pop
push
inc
nop
jns
scas
pop
lcall
push
scas
jo
shrb
fstpt
arpl
push
addr16
lock
dec
jns
test
in
fdivl
sbb
and
rcr
int3
and
les
cmpsl
subl
shrl
mov
xor
pop
repz
incl
lea
ret
sub
xor
int3
imul
frstor
aaa
mov
or
push
push
cmpsb
in
mov
cmpsl
cmp
jne
adc
ret
mov
inc
push
outsl
lea
sub
je
clc
push
mov
js
lret
in
jp
inc
jl
push
sub
jns
out
mov
pusha
mov
mov
ret
jp
xchg
and
adc
jmp
mov
dec
daa
add
pop
cmc
or
repz
into
rcll
pop
pop
enter
loope
sub
aam
movsl
nop
cmpsl
fsubl
jp
cmc
xor
push
ret
and
lcall
in
in
in
pop
dec
push
add
stos
jg
incb
mov
and
filds
xchg
stos
cmpsl
or
pop
dec
push
repnz
sub
popf
mov
push
leave
mov
jle
push
jg
icebp
add
mov
cmp
fiaddl
fs
push
and
cmp
fisttpll
dec
scas
insb
popf
add
or
push
mov
and
pusha
mov
mov
push
scas
mov
mov
adcb
nop
mov
inc
inc
and
std
dec
mov
hlt
arpl
movsl
adc
mov
out
mov
int
arpl
ljmp
pop
aas
pop
push
sub
adc
aaa
sbb
popf
mul
sbb
xchg
mov
insl
or
loop
jecxz
fwait
negb
dec
jae
jl
dec
adc
jae
lods
pop
pop
and
cld
sub
jmp
insb
mov
mov
je
les
sub
sbb
cltd
fstps
fstl
jo
jae
fs
mov
std
out
into
andb
and
mov
movsl
nop
outsl
stos
push
loope
js
sub
fbstp
test
pop
cmp
lahf
insl
add
sub
mov
ljmp
cltd
cmpsb
enter
adc
pop
sub
movsb
cmp
ror
pop
loope
rcl
cmp
push
mov
push
aam
cmp
imul
mov
mov
mov
xor
cmp
fnsave
test
push
aad
sbb
out
jl
inc
push
leave
arpl
cmp
movsl
and
ja
out
lret
lcall
xchg
repz
ljmp
call
jp
mov
add
xchg
cmc
popa
push
push
int
shl
sarl
leave
xchg
push
movsb
sbb
sub
inc
or
mov
and
fcoml
push
aam
pushf
ljmp
or
push
out
les
popf
std
mov
fbstp
pop
shl
jns
sub
or
xor
and
xchg
repnz
inc
mov
xchg
aaa
fidivs
jo
pop
push
inc
sti
xor
int
push
in
xor
rcrl
or
cmp
adc
lret
jmp
adc
fstpl
popa
push
mov
push
push
out
fwait
mov
in
pop
mov
cld
cmpsb
inc
push
sub
filds
xchg
das
call
mov
sub
fsubl
mov
mov
shrl
adc
xor
popf
xor
idivb
and
mov
cmc
pop
fcoml
push
mov
clc
add
rol
and
sbb
mov
jb
or
adc
inc
xchg
adc
dec
fcmovb
mov
add
jg
in
add
ret
clc
dec
in
mov
movsb
adc
stos
insb
ja
repnz
cmpsb
jo
stc
cltd
xchg
ret
sub
call
mov
in
jmp
movsl
dec
mov
int
cmp
mulb
jp
add
imul
lret
pop
addr16
fcoms
adc
cli
inc
fistpll
sbb
sub
es
dec
xchg
xor
es
lds
push
subl
or
imul
cwtl
xchg
cmp
dec
xor
sub
dec
mov
cmp
push
jg
imul
pop
in
cmpsb
adc
jb
into
fisubs
scas
adc
xor
fstps
js
add
leave
pop
flds
mov
inc
into
inc
mov
and
sbb
nop
movsb
jnp
inc
cmpl
test
jbe
mov
dec
outsl
xchg
pop
mov
out
cmp
js
pop
mov
mov
scas
ljmp
test
and
out
into
daa
push
or
ret
or
loope
pop
test
sbb
mov
lds
inc
push
insb
and
je
push
mov
mov
xchg
and
int3
mov
adcl
jl
lret
test
sub
or
jnp
aam
fsubl
jle
mov
sub
pop
jb
mov
pop
mov
pop
pop
xchg
rclb
sbb
xchg
mov
enter
cs
addr16
std
mov
push
inc
jg
mov
xor
popl
push
mov
mov
lret
lahf
lcall
mov
push
and
inc
arpl
addr16
mov
jp
repnz
mov
xlat
bound
es
les
sub
das
cmp
inc
add
pop
cmpsl
mov
repz
call
pop
mov
outsl
aas
mov
and
orb
out
hlt
ljmp
dec
add
xchg
sbb
arpl
idivl
inc
lea
mov
xor
and
adc
lcall
xchg
mov
sub
in
outsl
not
cld
or
push
sbb
dec
jno
je
sub
fistl
daa
mov
add
loop
imul
xchg
or
mov
sbbl
shl
in
pop
cli
and
insl
mov
fwait
movntq
fidivrl
arpl
rolb
adc
or
rorb
pusha
xor
sti
mov
mov
movl
das
fstpl
lock
xbegin
subl
inc
xchg
mov
push
push
stos
jmp
jmp
or
pop
scas
adc
cmp
mov
sub
sbbb
sbb
stc
push
inc
mov
xorl
sbb
push
xor
inc
pop
les
cmp
cld
sub
push
dec
mov
divl
je
and
mov
shlb
pop
pop
sbb
ret
mov
fiadds
xchg
lret
mov
jno
ljmp
mov
mov
arpl
jl
jp
aaa
pop
xchg
fmul
push
pop
lret
jae
push
jbe
push
push
sub
in
xchg
cltd
sub
mov
push
adc
jnp
cmp
insl
movq
push
daa
into
imul
hlt
mov
rcll
aaa
cmp
push
lahf
xor
decb
lea
pop
fs
out
push
loope
test
sub
stos
stos
out
popf
push
insl
jp
std
cwtl
jl
mov
xor
cmp
subl
mov
fnstcw
mov
cmp
dec
cmp
push
incb
ds
out
hlt
lret
repz
jns
mov
aaa
popa
jo
scas
jne
lahf
jns
std
inc
jle
pushf
lret
clc
sub
fistl
push
bound
and
mov
or
divb
hlt
sbb
sti
lods
push
jl
adc
enter
outsb
outsl
loope
and
xor
int3
fidivrl
mov
es
add
iret
enter
pop
div
repz
fs
cmp
nop
js
cs
pop
cmpsl
fsubrl
add
mov
mov
movsl
cmpsl
ja
cmp
test
fidivrl
add
std
push
jae
fstpl
dec
or
xlat
test
cltd
xor
adc
add
jb
mov
push
adcl
cmpsl
outsb
in
sub
les
inc
movsl
shlb
add
jp
setae
jmp
pop
daa
xor
sbb
movups
pushf
jo
mov
int
cmp
xor
adc
test
pop
cmpsl
or
inc
push
xchg
mov
arpl
mov
imul
aad
pusha
pop
jg
dec
inc
ljmp
popf
addr16
xor
jne
sub
sarb
fsubl
sbb
and
and
sti
xor
sti
add
cs
nop
mov
pop
sub
aas
sbb
into
sub
leave
jmp
mov
mov
jb
test
dec
dec
out
dec
stos
xchg
das
mov
adc
aas
scas
sub
ds
cwtl
xchg
cmp
arpl
lods
jbe
push
adc
mov
lret
and
mov
rcll
sbb
sahf
and
dec
inc
and
lret
mov
xor
sbb
adc
inc
add
adc
and
fnstenv
repz
imul
adc
cs
mov
cwtl
sub
or
xor
push
inc
mov
jbe
rcrl
xor
and
dec
cmpsb
cmp
cmp
hlt
std
es
in
cmp
pop
dec
int3
cwtl
cmc
inc
lea
and
sub
xlat
jnp
pop
push
xchg
or
test
cmpsl
cmp
pusha
shlb
jb
add
xchg
jl
std
das
pusha
jg
push
cmpsl
je
xor
inc
push
cmpsb
xchg
lret
test
pushf
pushl
cltd
jbe
xchg
lea
push
mov
xor
ud1
dec
insb
subb
out
pop
xlat
out
pop
and
lcall
jg
leave
sbb
push
movntps
frstor
mov
xchg
cmc
popa
and
sbb
push
shl
in
fistps
ss
movsl
mov
out
mov
enter
cltd
gs
dec
jae
lahf
and
int
es
sbb
leave
fdivrp
jnp
mov
adc
and
rcrl
pop
movsb
and
jmp
outsb
sbb
cmpsb
stos
or
cmp
or
scas
popa
jne
fnstsw
dec
jmp
loop
fwait
jg
cmpsl
cmp
mov
lea
gs
test
cld
xor
jle
test
repnz
xchg
movsl
pop
and
ret
pop
push
ja
out
fistpll
lcall
and
aam
mov
sti
xchg
dec
lea
jne
add
test
aas
xor
ret
shr
out
lcall
aaa
push
jge
xchg
cli
xor
xlat
in
sbb
lret
cli
mov
mov
call
push
sahf
mov
xchg
rol
pop
push
mov
lea
adc
mov
pop
scas
xchg
out
xchg
aad
daa
push
sbbb
cmp
ret
fiaddl
push
lret
lock
fwait
sub
ss
loopne
sahf
push
clc
push
inc
repz
cld
jp
std
jo
jp
ss
sub
jp
sub
out
jmp
mov
pop
imul
push
xchg
repz
in
test
outsl
aas
fadd
rcrb
pop
adc
cltd
hlt
sub
jb
xchg
or
jl
sti
aam
jnp
popf
mov
aam
xorb
cmp
loope
xchg
popa
or
fdiv
push
jle
push
das
ret
dec
add
test
ja
loopne
in
xchg
lea
pop
ja
xor
mov
insb
cmpsb
imul
sbb
xor
inc
cmp
jns
scas
mov
adc
movsl
clc
inc
push
decb
mov
cmc
pusha
sbbb
mov
repz
ret
and
pusha
inc
sub
push
mov
mov
sub
maxps
mov
imul
cmpl
sub
sbb
ss
mov
push
bswap
call
in
pslld
cmp
int
mov
inc
mov
arpl
cmpsl
in
xlat
or
xchg
jmp
dec
aaa
add
push
mov
mov
jae
out
jmp
sti
xchg
xor
dec
daa
loopne
cmovns
jge
dec
jl
sbb
pop
sbb
mov
dec
aam
stos
dec
ja
sti
pop
inc
adc
jecxz
xchg
push
xchg
test
scas
insb
jg
test
jb
jp
cld
push
cmc
jb
jo
pop
jbe
mov
mov
push
inc
pop
cwtl
cmc
call
cmp
push
gs
push
jl
inc
mov
clc
lock
cld
inc
inc
mov
cmpsl
test
inc
add
mov
xor
sbb
dec
mov
scas
push
cmp
rorl
xchg
popf
in
xchg
pop
push
rcrb
inc
lods
sub
or
test
cwtl
arpl
jp
pusha
mov
mov
push
fsubrs
xchg
out
out
dec
dec
cli
nop
ss
xor
pop
iret
mov
test
repz
mov
and
push
xor
jg
shr
out
aaa
lds
adc
lock
sbbb
add
mov
cmp
add
test
jge
movsl
push
loopne
cmpsl
mul
aad
dec
push
push
xchg
jecxz
sbb
stc
pop
fcmovne
adc
shlb
push
mov
rclb
std
mov
cmpsl
mov
and
out
test
sbb
into
cmc
cld
daa
cmp
bound
push
shl
mov
cmp
outsb
inc
das
faddp
sub
outsb
cmpsl
sbb
shll
jb
sbb
push
and
and
adc
cld
xchg
or
push
cmp
es
xchg
push
jle
ja
lahf
inc
inc
shrb
dec
jmp
mov
js
cmp
sarl
sahf
icebp
lcall
mov
adc
push
xchg
insb
xchg
hlt
push
sub
inc
mov
inc
cmp
xchg
es
push
cmp
mov
add
int
mov
loopne
idivb
je
mov
int
jecxz
test
mov
mov
cld
add
push
or
mov
out
cmp
clc
inc
dec
add
lds
fbstp
push
pop
lcall
lcall
dec
dec
je
sub
mulb
push
ljmp
jp
jnp
pop
sub
repnz
inc
dec
mov
pop
inc
mov
pop
jno
testb
or
and
mov
dec
and
adc
adc
mov
fidivrl
cwtl
out
stos
addb
stos
sub
push
pop
adc
mov
shrl
int3
faddl
pop
rcrl
ja
pop
and
hlt
push
push
lret
sahf
ljmp
movsl
fnsetpm(287
jb
pop
and
test
jecxz
xchg
imul
cmp
stos
cmp
jb
mov
jnp
sub
insb
lea
test
adc
push
rol
sbb
iret
std
mov
es
push
xchg
and
mov
sbb
outsl
push
mov
mov
ds
imul
mov
push
mov
lock
std
in
cmp
cmp
into
addr16
sub
test
sub
pusha
clc
cmp
mov
xchg
xchg
sbb
imul
dec
sub
adc
jb
fsts
push
dec
inc
add
daa
mov
pop
push
jge
pop
stos
mov
outsl
fs
std
pop
into
aam
es
gs
jp
fadd
mov
repz
adc
hlt
enter
in
sub
jb
jl
or
xor
stc
bound
inc
pop
xlat
push
addr16
add
cmp
xchg
ljmp
pop
es
and
ja
jae
test
insb
scas
cmp
push
xor
sub
mov
dec
outsb
push
cmp
sbb
pop
xorl
outsb
idiv
mov
fistpl
mov
rol
stos
dec
fadd
ret
hlt
outsl
shll
pop
fstps
fdivrl
lcall
bound
pop
scas
insl
add
mov
cmp
and
mov
ss
int3
testb
stos
jle
rcrb
mov
out
xor
inc
lds
nop
mov
mov
addr16
je
test
pop
dec
mov
int
lods
sbb
mov
movsb
pop
push
cmc
pop
sub
out
xchg
fmul
dec
dec
cmp
add
js
cs
xchg
jmp
lahf
jl
pop
rorb
insb
cmp
das
pop
sbb
mov
in
push
fisubrl
push
inc
dec
mov
loopne
jae
hlt
shrl
xor
push
stos
les
pop
iret
or
mov
in
xchg
in
dec
xor
push
push
repnz
fsts
fists
movsb
mov
lock
clc
sahf
leave
sub
repz
jmp
mov
jno
pop
sub
xchg
lahf
test
adc
das
add
sar
or
scas
xchg
out
mov
xor
sbb
pop
out
sahf
loopne
sbb
insl
dec
push
hlt
and
outsl
aam
rolb
sbb
clc
dec
sbb
push
inc
data16
push
lret
daa
mov
ror
shl
add
cltd
dec
test
push
movl
adc
push
dec
push
inc
mov
pop
add
add
lret
xor
mov
sub
rol
insl
xchg
add
int3
in
sub
cwtl
xlat
in
inc
into
clc
insb
lea
sbb
orl
xchg
cs
cmp
out
movsl
lahf
xchg
into
test
jp
fstl
insb
add
cli
xor
or
and
in
rol
inc
ret
test
or
into
setp
add
cltd
push
outsl
outsb
sub
pop
cli
push
scas
or
pushf
mov
mov
fsubrs
dec
fnsave
dec
fidivl
cmp
add
push
mov
outsb
imul
test
lcall
pop
mov
adc
inc
sarl
ds
loope
std
pop
pop
loop
dec
nop
mov
fidivrs
jge
and
mov
pop
outsl
test
es
ds
push
fldl
test
mov
inc
pop
lods
sti
fstpt
popf
inc
addr16
les
dec
in
pushf
mov
xchg
mov
mov
jo
xchg
decb
or
lret
sti
inc
inc
pshufw
xor
pop
sbb
sti
call
insb
sub
lods
sub
jnp
std
pop
xchg
cmc
outsb
in
gs
popf
int3
mov
mov
sbb
inc
out
inc
pop
pop
loop
jg
xchg
jmp
xchg
sbb
insb
out
test
popf
add
jecxz
or
pop
or
pop
shlb
cld
and
push
push
test
xchg
addr16
scas
aad
lods
fsubs
fcompp
mov
jb
jmp
mov
xor
adc
cltd
push
mov
mov
jmp
testl
jge
push
sbb
insb
xor
xchg
hlt
push
test
dec
mov
clc
xlat
or
stos
je
popf
or
push
dec
or
mov
mov
cmpsb
repnz
mov
fwait
push
xchg
xchg
cmp
scas
fsubp
inc
cltd
sti
cmp
rsqrtps
fdiv
mov
inc
test
adc
inc
xchg
push
jne
jne
push
mov
sub
ja
adc
out
lock
jbe
outsl
out
push
xchg
pop
sar
jle
loop
inc
mov
xchg
jb
push
out
dec
das
add
rcll
sti
dec
ljmp
sarb
pop
add
add
ja
into
leave
xor
sbb
test
push
inc
mov
rcrb
sub
pop
sbb
arpl
insb
push
jbe
fs
repz
mov
int3
mov
imulb
jmp
xchg
or
scas
and
out
mov
xchg
std
adc
sbb
jl
add
pop
add
mov
idivl
adc
push
adc
xchg
xchg
pop
xor
pop
pop
pushf
inc
aas
insl
jecxz
mov
test
pop
jno
inc
mov
fwait
test
cli
add
js
lea
and
fiadds
fisubl
add
shrb
cmp
daa
inc
and
mov
sub
daa
je
gs
xor
clc
or
push
mov
or
enter
dec
stc
or
clc
in
push
aad
in
jne
imul
movsl
jae
das
in
fwait
mov
lds
add
test
xor
mov
mov
cmp
ja
sub
ret
arpl
jp
jns
test
dec
add
rcrl
xor
pusha
xor
sbb
pop
cmp
popa
nop
mov
ljmp
das
xor
cmp
cmp
js
push
mov
cwtl
mov
scas
sahf
std
daa
iret
add
cs
mov
push
leave
mov
cmpl
sbb
out
mov
fwait
lcall
pop
mov
cmp
aam
sbb
aaa
jge
mov
bound
jb
and
je
add
xchg
out
repz
dec
mov
sub
sub
push
xchg
in
jmp
xchg
ds
jecxz
movsl
sbb
pusha
mov
xchg
mov
sub
xchg
xchg
roll
sbb
movsl
inc
jmp
sbb
xlat
int
daa
cld
aam
add
inc
mov
negl
cmp
mov
rorb
pop
mov
cli
push
jne
sub
cmc
rcrb
roll
xor
aam
leave
adc
pop
lret
and
mov
mov
jle
dec
jp
mov
out
das
cmpsl
mov
into
jnp
push
pusha
jecxz
sbb
mov
xchg
dec
ja
aas
pop
imul
cmp
test
ret
out
shlb
scas
pushf
mov
mov
jl
mov
jns
push
in
scas
icebp
push
ds
xorl
lods
and
and
shll
push
adc
movsb
jp
xchg
push
push
dec
test
int
adc
loope
in
mov
pop
add
xchg
and
popf
insb
dec
jl
xor
pop
adc
sar
addr16
aad
inc
lds
cmp
orl
out
repz
inc
xchg
mov
or
js
sub
and
test
mov
loopne
imul
adc
jp
inc
test
lret
sbb
mov
pop
mov
shlb
jb
fidivrs
fwait
icebp
jecxz
and
mov
jnp
inc
scas
pop
iret
mov
imul
mov
inc
xlat
jnp
and
jb
push
pop
fildl
fisubrl
cli
lea
jno
out
xchg
ret
fisubl
jecxz
dec
scas
push
xchg
mov
xchg
aad
sbb
inc
sti
test
mov
daa
into
leave
xchg
mov
dec
lret
and
push
cmc
ficoms
data16
adcl
clc
addr16
popf
mov
mov
lods
sahf
out
pushf
imul
cmp
popa
xor
or
sbb
and
sbb
ret
xchg
pop
fs
pop
ret
lds
pop
adc
or
ljmp
sub
dec
mov
into
es
adcb
pop
sti
xor
cmp
stos
or
aam
sbb
sbb
sbb
shl
into
jmp
std
dec
cmp
scas
bound
pop
pop
jge
sar
shll
cs
push
ja
out
out
dec
adc
xor
lock
aam
aas
ds
lret
push
adc
adc
rclb
decb
ss
mov
mov
orb
loopne
stc
jge
jmp
mov
mov
sub
xor
jge
mov
inc
sti
pop
lret
push
mov
adc
je
popf
jns
aad
fmuls
mov
push
enter
fisubrl
pop
mov
stos
aam
les
adc
add
pop
ret
push
dec
push
shr
repnz
clc
mov
imul
xor
xchg
dec
data16
fsubs
ss
out
push
loopne
inc
mov
addb
pop
add
out
ja
or
out
arpl
mov
ja
cmp
inc
add
mov
dec
mov
push
push
loope
push
mov
sbb
mov
adc
adc
sbb
inc
cmpsl
inc
sub
repnz
mov
fwait
jg
orb
es
adcl
test
mov
jle
jmp
mov
into
loope
dec
jge
pop
jne
inc
lds
sbb
cmp
sub
jmp
loope
scas
shrl
pop
shrb
pusha
leave
mov
fmull
andl
rcrb
lods
dec
jg
mov
dec
adc
fs
mov
nop
push
sbbl
sbb
out
loop
pop
push
or
mov
cmp
mov
sub
das
adc
rcll
mov
enter
push
lcall
es
sbb
shufps
push
fmull
arpl
fsubl
repnz
sub
aas
inc
hlt
inc
inc
inc
arpl
ja
out
pusha
lahf
sbb
imull
inc
pop
rclb
inc
or
jge
scas
pop
cmpsl
mov
add
mov
out
movsl
scas
mov
je
pop
dec
out
xor
popa
sub
fisubs
xor
jecxz
mov
aad
or
or
jb
scas
pop
mov
movsl
popf
les
into
cmp
icebp
inc
mov
imulb
mov
js
das
or
mov
icebp
je
rcll
bound
sti
mov
sub
aaa
rol
mov
aaa
sub
mov
das
cmp
lods
mov
out
pop
icebp
xor
fwait
ss
push
out
inc
movsl
jns
jno
sub
adcb
ljmp
mov
loopne
ss
lds
push
sbb
mov
push
fisubrl
cmp
ja
mov
adc
push
stc
adc
jp
lret
repz
outsb
add
xchg
mov
loop
out
dec
push
lahf
sti
pop
inc
dec
xchg
call
pop
fxch
xchg
push
xorb
fstps
cmpsb
in
push
stc
and
es
sarb
cld
inc
xchg
aas
in
cld
into
stc
loope
je
sbb
cmc
push
fwait
les
gs
push
mov
push
cs
jmp
popf
push
leave
jno
stc
lea
mov
jle
push
and
adc
cmp
mov
mov
mov
sub
jb
dec
and
pop
push
xchg
sbb
pop
jl
jl
outsl
out
ss
xchg
mov
pop
adc
ds
mov
jno
popf
fcoms
mov
sub
pop
inc
xchg
pop
xor
fwait
pop
js
and
bound
jl
xchg
xchg
push
stc
cmp
sbb
adc
adc
fldenv
ret
clc
push
dec
shrb
push
imul
pop
imul
inc
js
ds
repnz
out
sub
sbbb
lock
sbb
push
fwait
push
repnz
push
pop
dec
rorl
movsl
mov
punpckhdq
jno
adc
adc
and
xor
sti
stos
jnp
mov
jge
test
in
mov
pop
stc
sub
sbb
clc
add
std
aad
jge
das
xchg
fmul
inc
dec
sub
push
in
pop
daa
push
cwtl
iret
adc
cvttps2pi
das
loopne
ja
test
test
ret
adc
and
xor
xchg
lret
negb
pop
leave
repnz
outsl
xchg
bound
xchg
test
push
ss
out
inc
repz
fdivrl
ret
sti
sub
mov
nop
lahf
xor
mov
mov
in
cmp
sbb
in
and
ret
add
xor
xchg
push
cs
out
xchg
adc
ja
int3
mov
and
or
fiadds
fcmovb
test
dec
and
mov
mov
imul
aad
adc
out
js
pop
cmpl
je
jno
or
popf
imul
jmp
adc
into
fmull
hlt
sub
shll
dec
test
ljmp
enter
loopne
movsl
jb
xor
popf
rclb
push
lcall
jg
dec
test
inc
fcomi
movsl
add
lods
fs
mov
dec
clc
int3
fistl
xchg
inc
dec
test
mov
jecxz
insb
and
push
jbe
js
adc
adc
mov
test
dec
ret
mov
push
mov
lahf
sub
fst
fsts
mov
xor
loope
cmp
xlat
scas
out
repz
cltd
sbb
out
ds
lds
cmp
or
pusha
fstcw
push
push
mov
push
cmpsb
jne
push
dec
jl
les
add
inc
push
sub
xchg
fimull
push
adc
hlt
lret
cmpsb
stos
cld
add
pop
addl
ljmp
cld
cwtl
add
out
lea
mov
sub
test
xchg
mov
test
jp
sbb
mov
daa
dec
sarl
data16
leave
cmpsb
into
xchg
icebp
mov
or
arpl
mov
test
jo
jmp
shlb
aam
mov
loope
jno
push
jge
in
sbb
clc
popa
loopne
xchg
js
icebp
cmp
jmp
hlt
mov
sub
popf
das
int
fisubl
gs
test
arpl
insl
call
xor
clc
adc
mov
xchg
dec
pop
xchg
or
or
pop
mov
cmp
mov
fst
cmc
in
mov
lcall
jge
jp
or
hlt
cmc
in
jmp
cmp
pop
pop
sbb
insb
out
pop
insl
sbb
out
cmpsb
push
outsl
stos
and
lea
lock
rolb
int
shrl
bound
ss
inc
adc
stc
jnp
arpl
adc
ss
adc
and
adc
and
jnp
xchg
mov
cmp
lock
pop
mov
mov
mov
cmp
mov
outsl
cmp
data16
out
in
sub
inc
pop
inc
xchg
mov
popa
enter
in
bound
daa
add
and
pop
lock
jne
dec
rclb
jo
fimull
ret
mov
xchg
jmp
add
push
cmp
or
test
jnp
push
fstps
push
ficoml
fsubrl
stc
int
or
shrl
mov
mov
xor
xchg
pop
push
xlat
call
aas
add
add
out
sarb
orl
mov
jbe
loopne
stos
mov
xlat
sub
inc
pop
mov
repz
inc
cltd
xor
mov
sbb
add
out
out
push
cmp
dec
jle
inc
cwtl
xchg
and
lods
and
jae
sbb
jno
test
pop
push
hlt
arpl
add
sbb
cs
pop
scas
clc
mov
sbb
or
loopne
inc
scas
iret
xlat
mov
pushf
das
or
mov
and
cmpsb
sub
test
js
movsb
ret
mov
movsb
mov
imul
pushf
and
mov
mov
out
stos
dec
mov
add
push
aad
mov
pushf
mov
xchg
push
mov
pop
xor
in
dec
jne
lock
cmpsb
jge
loop
movsb
jle
sub
dec
xchg
std
lret
addr16
and
icebp
jp
mov
inc
int3
shrb
push
imulb
lret
ss
jno
mov
adc
inc
arpl
pop
mov
xchg
roll
scas
cmp
push
xchg
dec
inc
in
or
mov
mov
outsl
push
mov
xor
outsb
sbb
ret
fdivrl
cli
pop
les
jne
hlt
nop
cmpsb
jg
addr16
sub
scas
dec
jne,pn
popa
into
or
dec
jbe
fcomps
call
movsl
lea
cmp
xor
pushf
subl
push
dec
mov
jle
jb
cmp
cld
jl
je,pt
rolb
cmp
addr16
lahf
xchg
cld
push
int
mov
mov
add
fs
or
mov
out
inc
call
jnp
repnz
ds
sbb
add
in
aad
mov
and
push
sub
push
xchg
add
mov
mov
shll
inc
test
fwait
outsl
sub
ljmp
daa
push
mov
ret
or
xor
mov
and
or
sbb
pop
std
mov
out
fsubrl
or
out
push
inc
jae
pop
mov
pop
adc
sbb
lods
jmp
test
mov
loope
and
mov
mov
mov
xor
pop
stos
jp
pusha
pop
repz
push
daa
nop
mov
mov
pop
xchg
mov
mov
outsl
pop
dec
jg,pt
nop
xchg
scas
loop
addr16
ss
lea
push
mov
mov
mov
adc
or
int
cvtdq2ps
mov
gs
push
push
nop
in
jle
mov
in
ret
push
pop
jmp
ljmp
xor
sub
out
cmp
cmp
lcall
push
inc
sub
mov
fcmovnb
leave
sub
idivl
ret
add
in
movsb
rcrl
adc
push
sbb
cltd
xor
xchg
xchg
jge
call
ret
pop
sub
xor
mov
aad
pop
adc
or
mov
xchg
sub
dec
rcrl
or
in
and
shlb
cmp
call
xchg
pop
cwtl
fsts
sub
popl
rcr
pushw
adcb
push
loopne
int3
xchg
xchg
shl
movsl
ret
jb
adc
daa
pop
jecxz
fnstenv
add
pop
clc
fiadds
and
int
sub
or
cld
mov
and
les
inc
sbb
shll
dec
xlat
mov
cs
test
sbbl
mov
pop
scas
ficompl
pop
jecxz
ss
test
lcall
xor
js
mov
jae
push
pop
dec
aad
imul
push
data16
out
stos
in
lods
jae
adc
in
jle
sub
jp
repnz
lahf
sub
mov
pop
xor
aaa
jae
incl
mov
shlb
inc
push
fstpl
test
hlt
mov
cltd
movsl
jle
mov
loopne
lcall
xchg
mov
cli
popf
mov
dec
cmpsb
mov
sub
sbb
ja
xchg
jae
sbb
add
push
pop
popa
movsl
nop
sub
fbstp
and
ja
daa
lcall
int
fucom
lret
adc
mov
or
shll
ret
or
pop
sar
sbb
inc
sbb
scas
mov
adc
xchg
mov
ret
mov
in
mov
rorb
jbe
loopne
test
jg
jbe
cld
push
xchg
aaa
ljmp
push
or
xor
ret
hlt
dec
jmp
in
sahf
jl
pop
or
int
cltd
xor
outsl
insb
xchg
cmp
push
clc
xor
test
sub
push
jb
xchg
pop
jb
aas
sub
movsl
cmc
fdivr
call
fwait
add
sbb
daa
rclb
test
xor
cltd
sub
faddl
addl
maskmovq
testl
xor
push
xlat
cmpsl
stc
mov
lret
lods
cmp
aam
insb
and
mov
sub
sbb
mov
push
mov
js
jge
cmp
sub
mov
adc
test
sbb
xlat
fs
out
jnp
outsl
xlat
xchg
shll
andb
xor
dec
and
jmp
scas
lret
call
xchg
push
es
sub
cmpsb
ljmp
fucomi
xchg
push
bound
or
out
ss
and
out
lods
push
cmp
pop
pop
pop
xor
jno
mov
fyl2x
xor
xor
sub
in
scas
and
jg
clc
movsb
shrb
sub
mov
pop
add
jg
out
int3
dec
roll
mov
xchg
ljmp
pcmpgtd
ret
jb
ret
fcompl
and
cli
xchg
fwait
inc
push
xor
sub
xchg
nop
fnstcw
pop
add
xchg
sahf
roll
arpl
push
or
push
xor
rcll
jo
ret
mov
push
cmpsb
insl
inc
nop
sub
mov
inc
xor
and
imul
xchg
into
push
mov
push
cmc
xchg
nop
cltd
sbb
pop
push
inc
sbb
scas
push
bound
lahf
mov
test
fsubl
push
dec
clc
adc
nop
insb
inc
sub
mov
push
lret
mov
das
or
inc
xor
mov
mov
add
adc
dec
lea
aas
pop
jg
push
bound
adc
insl
jo
adc
mov
adc
dec
jae
jg
or
jne
and
lret
mov
dec
repz
pop
shrl
in
popa
pop
fnstcw
pusha
sub
lods
adc
lods
ret
pop
in
hlt
inc
mov
lret
add
mov
aaa
and
jbe
cli
insl
mov
stc
dec
ss
mov
lea
sahf
xchg
pop
lds
mov
in
sub
jmp
pop
popa
inc
in
or
cmp
add
mov
mov
sbb
cmp
xchg
iret
insb
in
dec
inc
lock
js
pop
xor
mov
jb
testb
add
mov
nop
push
out
pop
cltd
sub
cmp
or
pop
addr16
cld
dec
xorl
std
inc
cs
shl
jns
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
decl
ffreep
pushf
mov
adc
push
and
pop
mov
cmp
fwait
sub
test
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
pop
pushf
or
jl
adcl
in
cmp
popf
ja
enter
push
pop
and
repnz
lds
push
adc
stc
dec
loop
push
jge
push
push
dec
mov
mov
adc
adc
repnz
stos
sbb
xchg
jmp
mov
dec
xor
jno
jge
xchg
in
mov
push
leave
mov
mov
and
mov
sbb
xchg
call
mov
imul
jno
loopne
xchg
mov
and
cmp
or
cmp
and
adc
mov
cmp
fwait
imul
adc
movsl
cmp
test
mov
adc
push
pushf
push
add
imul
inc
and
adc
push
fnstsw
adc
push
pushf
mov
adc
push
pushf
in
or
push
inc
test
mov
adc
push
mov
adc
push
pushf
mov
adc
push
cmc
mov
sbb
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
jle
fdivrs
cmpsl
cmp
fwait
mov
test
mov
adc
adc
cmp
fwait
imul
mov
iret
je
les
adc
push
insb
mov
mov
cmp
fwait
mov
inc
test
mov
adc
push
jl
pop
mov
cmp
fwait
imul
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
push
pushf
mov
adc
ret
jo
stos
push
pushf
lods
pop
mov
fwait
enter
push
xlat
int3
push
xor
lea
xchg
loope
stos
push
sub
jmp
mov
xchg
cmpsl
push
mov
sub
sub
mov
ss
mov
jg
and
xchg
lcall
inc
jg
jg
out
cli
sbb
xor
inc
sbb
cli
loopne
loope
jl
push
das
cli
inc
push
mov
xor
std
ret
in
out
inc
lahf
pop
or
push
fdivl
push
and
pop
adc
pop
push
icebp
xlat
mov
pop
aaa
sbb
xchg
out
pop
ss
xor
imull
inc
int
cmp
ds
pop
mov
push
sub
loopne
das
les
xor
test
xor
ds
outsl
faddl
insb
cmp
repz
inc
fdivrs
mov
in
je
mov
hlt
mov
xchg
orb
insb
insb
pop
gs
hlt
mov
repz
xor
das
out
xor
int3
lret
hlt
sub
adc
leave
pushf
imul
or
cmp
lea
js
jl
mov
sbb
jg
and
and
dec
ret
repz
or
inc
push
sub
jg
or
out
xor
jge
inc
jns
shlb
les
or
outsb
ljmp
iret
inc
jne
and
mov
xchg
or
cli
out
repz
push
scas
dec
pusha
pop
sub
mov
hlt
in
adc
mov
pop
push
mov
xchg
fcompl
hlt
test
icebp
inc
rol
mov
les
movb
loope
xchg
push
outsl
adc
out
imul
sub
aaa
icebp
mov
shl
inc
cltd
dec
push
lret
push
cmpsl
cmpb
jns
insl
inc
jmp
or
das
dec
pop
cmp
sbb
mov
or
enter
cld
xchg
dec
or
sub
gs
sub
push
and
fs
sub
out
mov
push
dec
jbe
adc
cmp
inc
mov
xchg
push
out
xor
and
mov
mov
stc
loope
mov
lods
jmp
and
sbb
jg
cmp
ss
in
and
jb
rcll
ret
ret
jbe
mulb
or
adc
and
sub
cmp
dec
or
insl
mov
pusha
inc
in
leave
cmp
das
pop
push
in
nop
xchg
fldl
flds
adc
adcl
xor
les
aad
mov
adc
lock
jecxz
out
mov
scas
insl
dec
hlt
cmp
cli
xchg
dec
jmp
pop
loope
roll
dec
pop
cmovbe
cli
faddl
test
push
mov
jp
mov
test
mov
movsb
xchg
fnstenv
jl
lds
test
das
bound
sub
aad
mov
lods
xor
ja
cwtl
sbb
inc
or
sub
xor
cli
mov
cltd
movnti
daa
pop
pop
mov
add
cmc
adc
notb
sbbb
jmp
aas
inc
cli
ss
sbb
jb
jp
ljmp
jmp
mov
pop
xor
testl
fs
aam
jb
cwtl
ret
arpl
and
pushw
mov
out
decl
cwtl
test
dec
adc
repnz
mov
xchg
loopne
movsb
xlat
andl
into
call
pop
call
call
xchg
sbb
and
idivb
mov
mov
lds
shl
sbb
movsb
in
dec
loopne
xor
int
inc
pop
mov
push
imul
push
insb
addb
into
aam
xor
imul
sub
add
test
or
mov
jg
dec
xchg
fidivs
aaa
ds
out
inc
xorl
pop
inc
scas
lahf
or
into
or
adc
sbb
rep
add
pop
push
decl
iret
test
cld
xor
imul
rorl
inc
int3
or
xchg
iret
pop
fsubs
cltd
mov
mov
loop
sahf
xchg
xor
popa
adc
mov
mov
or
rcl
ds
and
js
cmpsb
std
rorl
pop
push
fcompl
or
test
dec
sub
xchg
repz
in
push
test
mov
sti
rclb
cmp
pop
arpl
jae
and
sti
push
inc
pop
cmp
adc
adc
mov
test
lahf
pop
es
cwtl
sbb
cmp
push
mov
sbb
pop
clc
incb
push
cmp
sar
add
stos
clc
movsl
xor
out
lock
and
jp
iret
sub
cli
into
out
gs
outsl
inc
xor
sub
in
lods
push
xor
or
call
or
out
lcall
mov
sbb
sub
jns
and
fcmove
ffree
push
push
add
xor
sub
jle
nop
push
in
or
mov
movsl
lret
xchg
xchg
dec
cmp
push
fwait
and
mov
mov
dec
add
loop
dec
enter
add
add
ret
push
shrb
cmp
push
sti
cmpsl
mov
stos
or
pop
cld
add
addr16
dec
in
push
test
sub
imull
ds
ljmp
cmpsl
icebp
aam
movswl
dec
sub
mov
popf
mov
push
adc
mov
inc
test
int3
dec
leave
ds
es
mov
decb
ljmp
sub
adc
mull
cmp
mov
pop
jecxz
mov
mov
out
sahf
cmc
pop
jl
cs
pop
jae
in
lods
jecxz
in
addb
into
xchg
aaa
shll
push
xor
xor
and
mov
jmp
dec
pop
sub
push
mov
pushf
mov
bound
push
mov
fwait
cmp
sbb
movsb
loopne
sub
in
jecxz
and
das
adc
bound
add
jge
sub
push
movsl
das
aaa
in
cmpsl
or
mov
test
mov
adc
clc
enter
mov
sub
cmp
testb
fcmovu
iret
xchg
out
xlat
dec
vmaxps
jae
jne
inc
or
mov
xchg
sub
test
imul
lds
inc
arpl
sahf
mov
movsb
testb
inc
push
lock
add
pop
sbb
nop
insb
roll
xchg
xor
and
and
decl
hlt
cmp
xchg
fwait
cwtl
sbb
jecxz
cmp
or
dec
and
jle
popl
xchg
inc
jae
cmp
dec
xor
or
adc
rorb
dec
not
add
push
pop
adc
fisubs
pop
push
or
pop
lods
adc
fcmovbe
fwait
pop
dec
subb
jns
les
cli
cmpsl
data16
testl
lea
add
xchg
lret
enter
jno
or
das
fisubrs
test
ret
mov
xchg
adcl
cmp
and
hlt
in
into
js
mov
jge
xchg
xchg
mov
popa
scas
dec
add
jno
and
int3
pop
sub
inc
cmp
cmp
xor
pop
stos
push
ret
repnz
push
cs
sahf
pop
xchg
sub
or
clc
or
or
das
inc
xchg
push
jge
push
andl
shll
xchg
insl
mov
xlat
sbb
sbb
jns
xor
mov
ss
push
test
jae
fsubr
push
sub
ja
in
inc
adc
push
pop
das
lcall
mov
daa
mov
jbe
imul
and
push
mov
ljmp
lcall
lret
inc
stos
jecxz
push
xchg
stos
arpl
or
add
in
cmpb
or
divb
sub
fistps
int3
mov
inc
push
bound
push
ret
imul
adcl
dec
nop
notl
sub
mov
insb
sbb
jl
mov
pushf
sub
jle
test
pop
adc
dec
sbb
outsl
jle
sub
lar
lock
sbb
fs
fimuls
pop
mov
ja
cmpsl
push
enter
aam
aam
cli
les
scas
xchg
mov
test
jmp
jg
lret
fwait
dec
pop
jne
cmp
out
xor
ds
mov
insb
mov
sbb
sub
ret
pop
leave
lods
sti
push
je
mov
cwtl
aas
cmc
push
inc
lcall
test
bound
inc
cmpsb
insb
gs
jmp
push
mov
fs
push
in
add
cmp
lock
push
xor
inc
sub
push
sub
popa
aaa
mov
test
testl
outsl
dec
mul
fnstcw
fcmovnb
and
das
cmpsl
stos
popa
xchg
adc
jge
repz
pop
xor
push
sti
mov
fstpt
fs
rcrb
je
outsb
das
push
lock
int
mov
or
cwtl
orb
mov
pop
or
adc
aad
push
imul
mov
pop
mov
push
cmp
and
scas
xor
xchg
push
aaa
sub
gs
rcr
inc
pushf
push
scas
stos
dec
loope
pop
call
inc
mov
fwait
add
test
or
into
mov
iret
jae
and
ja
sub
jp
xlat
and
outsb
enter
imul
pop
jmp
orl
mov
xchg
xor
cmp
mov
mov
call
ss
insb
or
add
int3
sbb
sti
ja
push
out
sbb
pop
scas
repnz
filds
mov
addr16
push
add
in
ror
outsl
testl
jno
xor
cmpb
lcall
fwait
pop
adc
push
imul
adc
and
ret
sahf
shrl
jne
cmc
add
pushf
subl
mov
hlt
cltd
enter
xchg
sbb
mov
cs
adc
out
mov
mov
mov
push
movsb
lahf
push
mov
cmpsl
jae
mov
mov
sbb
fsubp
js
mov
hlt
cmc
jg
mov
test
xchg
rcll
inc
pop
fcom
xchg
and
dec
lods
pop
jns
lcall
dec
sub
mov
xorb
and
pop
mov
test
sbb
or
scas
ss
push
daa
fcomip
mov
aas
or
pop
pusha
xchg
add
sahf
roll
sub
daa
jbe
pop
lea
testl
jecxz
pop
cmpsl
sub
cltd
dec
scas
xchg
add
popa
add
jo
fdivs
daa
mov
cmp
test
cwtl
sbb
pop
sbb
ss
popf
add
push
mov
jo
xchg
inc
mov
xchg
jle
xor
cmp
push
pop
cmc
loopne
mov
mov
in
sub
bound
jnp
push
jae
mov
out
or
lods
fs
xchg
cmp
dec
in
jl
int3
dec
lods
add
roll
or
push
add
outsb
fisubrs
out
ss
clc
int3
mov
hlt
rclb
xor
aas
or
lock
mov
cmp
sub
fidivrl
shrb
sbb
xchg
and
fwait
imul
sti
adc
sub
adc
not
jmp
sbb
pop
dec
adc
cli
lock
add
mov
popa
cmpsl
scas
js
inc
push
rcrb
fucomip
in
jns
push
int3
rcrl
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
