mov
or
push
sub
dec
movsb
mov
push
or
add
sub
inc
and
push
or
adc
add
nop
add
and
add
inc
adcb
adc
or
push
add
and
cwtl
adcb
andb
rorl
pushf
add
cmpsb
add
adc
add
add
or
xor
inc
add
add
xor
push
add
inc
add
add
or
addb
nop
and
sub
roll
pusha
and
and
adc
shlb
or
add
add
andb
or
or
addb
sbb
add
or
xchg
add
push
xor
mov
adc
inc
cmp
addb
adc
add
pusha
aaa
adc
and
and
or
push
push
add
and
and
cmovs
mov
push
add
add
adc
and
add
subb
mov
adc
cmp
add
add
xchg
add
and
inc
inc
push
pop
jb
dec
inc
addb
inc
or
adc
adc
inc
add
xor
and
inc
inc
and
inc
dec
mov
push
add
popa
and
push
inc
xchg
pop
adc
inc
add
sbb
adc
sbb
sbb
add
call
mov
add
add
add
pop
and
add
add
xchg
sbb
inc
or
addb
jecxz
adc
inc
adc
andl
test
add
addb
adc
add
cmp
add
sub
test
sbbb
add
add
add
add
or
inc
or
inc
inc
add
push
xchg
inc
add
xor
add
enter
rolb
add
test
push
adcb
sub
adc
nop
add
add
ret
pusha
and
jp
adc
add
or
push
add
rolb
sbb
test
add
add
adc
push
add
or
in
mov
add
and
addl
nop
dec
addl
sbb
xor
nop
sub
add
addb
test
mov
and
and
add
add
add
imul
inc
inc
mov
roll
adc
add
nop
add
imul
add
dec
add
pop
add
mov
dec
cwtl
ja
and
add
adc
pop
push
les
xor
sbb
inc
sbb
bound
inc
sbb
test
adcb
enter
add
cs
adc
push
rorb
adc
adc
inc
xchg
sbb
pusha
adcb
and
inc
and
add
add
add
mov
leave
les
inc
push
add
orb
add
add
add
inc
ds
adc
or
and
orl
rolb
or
adc
add
inc
flds
adc
xchg
add
add
nop
add
push
or
or
adc
add
adcb
and
inc
add
add
fmull
lret
push
add
push
or
push
adc
mov
mov
and
addb
xor
call
push
inc
adcb
add
test
add
and
loopne
inc
add
or
pusha
adc
xchg
xchg
add
adc
adcb
repnz
push
dec
pop
inc
inc
adc
push
inc
adc
add
ret
test
adc
add
add
xor
mov
or
addb
add
and
adc
push
adc
xchg
add
add
push
add
inc
dec
add
das
add
add
add
adc
add
les
adc
or
or
add
mov
add
mov
add
add
inc
add
nop
cwtl
mov
inc
or
xchg
int3
add
add
add
add
add
movsb
add
add
xor
xor
dec
popa
mov
and
addl
dec
add
jb
inc
add
or
and
inc
add
dec
add
add
add
and
and
add
loopne
mov
inc
adc
push
add
and
pop
or
mov
add
pop
or
mov
inc
les
rclb
push
or
add
mov
movups
addb
inc
add
add
and
add
or
nop
mov
nop
adc
add
or
adc
xchg
and
inc
pusha
andb
and
add
xchg
orl
mov
or
inc
roll
and
and
sbb
xor
andb
inc
inc
adcb
add
cwtl
adc
sub
or
add
add
add
inc
addb
and
adc
add
and
or
add
add
and
and
add
add
add
jno
add
cmp
pusha
mov
sbb
or
mov
adc
mov
andl
add
inc
add
inc
add
movsl
dec
add
loopne
roll
pop
add
inc
sbb
add
add
lea
adc
dec
mov
xor
and
inc
jmp
adc
add
sub
and
add
pop
and
add
test
fwait
adc
test
mov
dec
xorl
add
or
add
pusha
add
cltd
inc
or
and
adc
andb
push
subb
sarb
add
orl
inc
mov
and
mov
add
or
dec
arpl
mov
inc
nop
add
xchg
addb
sub
or
add
mov
nop
add
adc
adc
add
sub
add
add
add
or
or
and
pusha
adc
sub
call
or
xchg
add
add
or
or
mov
xchg
or
loope
addb
jo
arpl
or
imul
adc
and
pop
pop
dec
sbb
les
test
adc
sbb
add
and
and
inc
push
adc
add
add
add
nop
sbb
xor
add
shlb
add
mov
xor
or
rolb
sub
add
adc
mov
xor
push
inc
add
or
push
or
pushf
inc
dec
bound
xchg
add
mov
adc
orb
add
add
shlb
add
or
nop
mov
adc
inc
sub
mov
add
xchg
inc
adc
adc
add
jb
orb
add
xchg
or
adc
xchg
add
adc
enter
cmp
andl
cs
add
and
or
rcrb
and
or
mov
sub
test
and
or
add
or
or
nop
push
add
mov
rolb
add
xor
add
sbb
add
orb
add
inc
sbb
pusha
and
xchg
and
and
and
push
add
add
add
popf
adcl
and
inc
add
add
adc
nop
inc
imul
adc
lcall
sub
inc
add
inc
add
push
sub
add
sbb
push
nop
push
dec
xor
or
or
or
bound
mov
les
xchg
adc
adc
adc
and
sub
movsb
add
sbb
bound
and
push
add
or
add
add
test
adc
and
adc
or
xor
xchg
addl
and
sbb
xor
sbb
inc
add
or
nop
add
mov
add
add
pusha
inc
and
xor
test
dec
add
xchg
add
add
addb
test
xor
out
sbb
and
xor
cmp
lea
enter
add
mov
dec
add
adc
inc
nop
test
adc
mov
and
inc
andb
or
inc
orb
push
cmp
test
andb
xor
pop
mov
and
mov
test
sub
xchg
add
mov
dec
add
add
pop
mov
or
or
daa
and
mov
enter
add
add
and
or
adc
mov
inc
and
mov
inc
push
add
cmp
push
or
and
add
pop
rclb
xchg
add
or
adc
adc
add
and
mov
aam
pop
and
add
xchg
or
pop
sbb
add
xorb
add
xor
add
cwtl
xor
or
and
inc
adc
cwtl
mov
add
add
or
mov
gs
pop
add
add
add
inc
mov
adc
add
add
push
andb
add
dec
mov
or
adc
adc
or
sub
andb
enter
push
or
rolb
xor
inc
xchg
add
or
add
or
add
adc
or
add
or
test
shlb
rol
dec
push
mov
add
adcb
orb
cmp
mov
add
dec
sub
add
pop
add
add
inc
sub
sbb
add
sbb
sub
xor
sub
add
add
inc
imul
mov
mov
add
inc
mov
push
sub
sbbb
rclb
add
mov
nop
addb
or
inc
cs
add
adc
add
and
mov
add
adc
jns
xor
imul
or
sbb
inc
push
mov
and
inc
add
add
rolb
or
addb
xchg
add
fs
adc
add
orb
and
mov
dec
add
test
add
pop
pop
add
add
add
inc
push
add
adc
add
add
loopne
add
add
adc
sbb
or
sbb
or
test
adc
add
add
lds
inc
pop
add
ret
mov
fwait
imul
cmp
and
add
or
sub
push
xor
pop
inc
adc
add
jno
cwtl
add
xor
push
inc
sub
nop
and
xor
sbb
inc
inc
or
or
nop
add
addb
add
mov
xor
mov
add
mov
add
and
jg
or
push
sbb
add
mov
add
add
aad
add
mov
inc
add
test
cmp
adc
pusha
shll
mov
adc
mov
adc
inc
test
pop
add
add
inc
add
and
sbb
mov
addb
add
inc
xor
or
dec
inc
inc
adc
orb
inc
inc
add
movsb
sbb
add
mov
and
add
push
push
adc
addb
add
xor
add
or
push
and
adc
sbb
adc
or
inc
ret
or
add
sbb
or
and
or
inc
sbb
push
adc
adc
add
sub
mov
add
shll
xorl
or
push
sub
mov
adc
inc
push
or
add
add
and
addb
addb
and
push
mov
add
mov
and
add
dec
adc
push
add
andb
cmpsb
pusha
mov
adc
sbb
and
add
sbb
orb
or
movsb
adc
test
adc
mov
and
or
pusha
adc
or
or
in
mov
add
adc
pop
add
and
add
sbb
add
scas
inc
adcb
and
int
xorb
add
add
jne
cwtl
and
add
add
add
add
dec
addb
add
xor
inc
add
je
mov
mov
and
adc
rclb
adc
sub
mov
and
or
xor
mov
sub
add
and
and
and
jo
add
or
adc
andb
sub
or
add
inc
push
add
or
add
sbb
add
cmovb
or
or
adc
pusha
into
sub
addb
inc
addb
adcl
adc
mov
add
or
clc
sbb
add
sbb
addb
and
xchg
sbb
push
adc
xor
sbb
or
xchg
xor
add
inc
and
aad
add
inc
xor
add
or
or
sbb
roll
adc
addb
dec
or
rolb
or
add
inc
pop
cmpsl
or
andb
push
adc
xchg
and
xchg
add
and
pusha
and
jb
or
rolb
add
rolb
and
inc
push
push
add
add
pusha
subb
add
and
repnz
inc
add
add
and
add
and
and
gs
nop
and
or
addb
adc
sbb
popa
cwtl
add
adcb
add
add
popa
js
mov
and
add
sbb
les
or
inc
add
inc
add
inc
add
dec
sub
inc
rorl
mov
inc
fcomps
xor
and
sbb
push
inc
orb
add
lcall
add
cwtl
dec
add
xchg
add
inc
add
test
inc
fadds
addl
add
add
movsb
push
add
xchg
push
xorl
add
add
inc
adcb
inc
or
or
push
test
inc
xchg
sub
loop
add
adc
mov
mov
add
inc
add
or
sub
ret
add
add
add
or
sbb
adc
adc
and
adc
add
andb
add
sbb
or
inc
adc
xor
sub
addb
and
push
add
add
or
push
or
adc
inc
or
dec
and
add
dec
pop
sbb
sbb
add
adc
shlb
add
push
in
add
add
sub
xor
movsb
sbb
dec
and
and
inc
mov
adc
add
inc
inc
or
popa
pusha
rclb
pusha
or
pusha
and
and
inc
xor
xor
ret
enter
mov
add
les
mov
adc
add
popa
roll
adc
and
add
or
adc
add
adc
and
add
add
add
sbb
push
rolb
adc
or
sbb
adc
pop
rolb
outsb
xchg
push
rclb
add
add
xchg
add
jo
and
or
add
inc
mov
mov
push
adc
addb
add
add
daa
and
mov
push
test
add
push
add
mov
sub
add
addb
rolb
stos
pop
push
adc
xor
inc
addb
and
je
add
inc
or
and
inc
inc
cmp
add
nop
push
adc
xor
bound
and
popa
or
add
add
adc
cmp
nop
adc
adc
iret
add
xor
inc
push
sub
ret
and
add
cmp
mov
push
inc
sbb
inc
sub
andl
adcb
addb
add
or
inc
inc
push
orb
and
popa
mov
or
or
add
or
nop
xor
pop
or
add
and
jo
orb
dec
push
add
adcb
and
and
mov
inc
add
and
pop
inc
add
inc
add
add
add
mov
sub
or
pusha
and
loopne
mov
and
and
or
add
or
dec
lea
loopne
addb
pushf
sbb
and
adc
add
pusha
dec
in
andb
add
fmuls
inc
inc
inc
pusha
adc
inc
inc
cwtl
inc
ljmp
push
sbb
add
call
add
adc
adc
nop
adc
inc
or
and
add
push
adc
adc
add
and
add
adc
addb
enter
pop
adc
or
add
inc
or
add
add
mov
add
add
and
and
add
mov
xorb
add
add
and
test
sub
add
dec
add
nop
adc
subb
and
addb
andb
and
push
and
xchg
add
mov
fwait
mov
xchg
or
adc
leave
addb
adc
inc
inc
and
ret
dec
add
add
enter
and
add
add
add
push
or
add
add
add
add
add
mov
add
add
enter
add
mov
add
add
and
sub
mov
add
push
add
inc
or
adc
aam
add
outsl
adc
or
xor
lds
and
add
orb
adc
sub
adc
add
add
inc
add
mov
or
or
inc
shl
mov
inc
test
add
inc
or
sbbb
adc
add
or
and
add
or
add
nop
add
mov
add
adc
add
add
add
and
add
xchg
push
sub
or
add
add
add
push
enter
push
mov
or
and
and
add
and
or
add
xchg
push
xchg
adc
inc
andb
roll
add
inc
or
and
les
loop
adc
adc
xchg
inc
adc
or
and
fadds
test
addb
add
xchg
addb
or
xor
xor
popf
pop
push
mov
or
movsb
adc
add
cltd
add
xchg
and
aam
adc
shlb
add
and
inc
sbb
add
adc
mov
adc
add
ret
inc
pop
add
adcb
and
add
adcb
add
or
add
or
das
cmpsb
andb
inc
add
add
pusha
addb
add
or
addb
lcall
shll
and
adc
and
mov
and
pusha
xchg
add
and
mov
add
add
xor
mov
rcl
and
add
push
sbbb
adc
cmp
add
inc
sbbl
andb
mov
call
and
addb
mov
or
inc
add
adc
test
add
and
add
add
test
add
adc
inc
pop
add
add
add
rcll
xorb
adc
invd
pop
inc
xchg
dec
add
cwtl
add
xchg
inc
adc
push
and
and
adc
add
xchg
or
pop
adc
add
inc
sbb
adcb
mov
movsb
or
xor
inc
jo
xor
sub
xor
inc
add
add
or
rolb
pop
movsb
add
repnz
push
add
and
mov
xor
rolb
or
inc
add
add
orl
push
inc
mov
and
push
add
add
mov
jl
add
add
inc
inc
mov
adc
xor
inc
adc
or
add
mov
add
add
and
or
andl
push
add
xor
or
inc
add
adc
and
sbb
mov
inc
add
push
sub
lret
sbb
sub
mov
adc
pusha
inc
adc
add
add
add
adc
add
ds
mov
push
dec
inc
rolb
ret
cmp
add
movb
adc
inc
inc
adcb
loopne
addb
sbb
and
inc
add
and
and
or
nop
pop
xor
push
or
inc
add
add
add
or
pop
add
add
add
add
add
sbb
addl
sub
or
inc
add
enter
adc
xor
jo
add
or
xchg
pusha
or
inc
add
add
add
adc
mov
adc
add
adc
sbb
lret
ret
add
nop
add
add
add
add
adc
or
add
rolb
adc
adc
or
add
inc
rolb
adc
orb
cs
xor
rolb
adc
or
add
and
adc
sbb
inc
rolb
add
add
adc
inc
andb
adc
push
bound
xchg
mov
adc
and
or
pusha
addl
inc
pop
add
sbb
mov
push
and
or
add
fmuls
or
and
hlt
subl
nop
add
or
dec
adc
or
rorb
add
or
dec
or
push
and
mov
add
or
add
or
inc
dec
out
addb
inc
add
adc
adc
mov
dec
dec
inc
or
or
inc
adc
add
addb
inc
aaa
addb
add
adc
rolb
add
add
add
rorl
xor
adc
add
adc
mov
mov
mov
and
and
and
adc
adc
adc
mov
xchg
call
add
adcb
inc
cmp
mov
or
addl
adc
mov
and
shlb
nop
mov
inc
sub
add
mov
push
dec
ret
add
inc
imul
add
add
push
inc
gs
or
or
sbb
add
push
mov
inc
or
or
addl
dec
mov
add
add
add
xor
or
push
and
or
adcl
add
pop
and
add
push
sub
mov
xor
add
add
dec
adcb
or
or
add
push
adc
xchg
sbb
or
loopne
add
push
adc
push
adc
xor
add
mov
or
and
adc
mov
mov
andl
rcll
sub
add
test
adc
xor
or
addb
xor
add
addb
inc
or
or
xchg
inc
add
sub
adc
or
or
cmp
inc
sbb
adc
add
add
mov
add
adc
add
or
add
loopne
inc
pop
dec
sub
test
inc
push
and
nop
add
enter
xchg
adc
cwtl
test
add
and
or
adc
push
pop
mov
les
add
add
add
orb
add
add
and
or
adc
pusha
add
add
addb
mov
inc
pusha
cwtl
and
shll
add
add
sub
sub
add
aaa
nop
add
or
adc
add
les
or
and
push
add
sbb
mov
mov
movsb
sbb
addb
pop
push
add
mov
xchg
add
es
sbb
add
inc
or
add
loope
inc
jno
movl
or
add
add
add
add
inc
add
nop
and
xor
cmp
add
inc
inc
or
add
adc
jns
inc
push
add
and
mov
enter
sbb
inc
popa
add
or
and
adc
or
adc
xorb
enter
or
sbb
sbb
dec
xchg
add
add
add
addb
sbb
addb
ret
and
xor
xor
js
and
dec
add
add
sbb
or
mov
add
nop
data16
inc
xchg
adc
add
xchg
add
mov
add
addl
or
addl
push
add
adc
or
or
add
mov
add
or
and
inc
dec
dec
orl
add
test
inc
and
or
inc
nop
and
add
adc
inc
jbe
subl
test
adc
add
mov
and
inc
or
mov
inc
add
addb
adc
rclb
push
xchg
inc
add
add
add
add
addb
inc
sbb
add
add
or
orb
add
lret
add
test
xchg
mov
and
cwtl
sbbb
cmp
roll
add
mov
or
lock
inc
sub
sub
inc
sbb
inc
sub
inc
inc
adc
rorb
add
add
add
push
dec
add
dec
add
push
adc
addl
or
and
add
and
add
add
push
dec
add
add
sub
push
and
les
sbb
inc
nop
test
movsb
lea
adc
and
invd
and
and
xchg
dec
cmpsb
add
add
add
inc
adc
test
xor
or
or
push
and
call
bound
xchg
and
test
and
dec
cltd
or
add
shll
orb
add
adc
inc
add
add
dec
cmpb
fiaddl
adc
add
inc
addb
leave
dec
or
add
and
enter
sbb
sbb
and
adc
or
adc
and
add
inc
inc
or
bound
js
add
add
cwtl
mov
adc
add
cmp
add
addb
out
adc
mov
xchg
mov
add
lcall
add
adc
bound
mov
inc
dec
or
popa
orl
and
dec
and
adc
adc
sub
and
add
add
addb
and
or
and
add
add
lret
add
or
sub
add
and
addb
inc
subb
adc
enter
adc
add
or
mov
mov
sub
orl
inc
adc
call
add
add
and
rclb
or
mov
or
orb
and
cmp
adc
inc
or
test
adc
inc
pusha
inc
adc
xor
xchg
or
cmp
pusha
mov
add
mov
and
dec
addb
pusha
and
push
shlb
inc
inc
and
addb
add
add
or
lret
inc
adc
and
or
add
inc
mov
or
nop
and
shlb
orb
push
mov
lds
sbb
mov
add
es
add
mov
push
in
mov
and
inc
inc
mov
add
and
adc
addb
and
pop
add
sbb
mov
add
mov
add
add
or
add
dec
adc
jo
enter
add
addl
inc
push
add
mov
cwtl
add
push
pusha
inc
pop
and
push
adc
mov
inc
xor
addl
cmp
sub
and
add
push
and
add
adc
stos
push
dec
add
add
movsl
add
and
or
mov
mov
add
add
sbb
inc
add
sbb
adc
add
pusha
add
add
add
add
rorl
push
xchg
add
add
push
add
pusha
movsb
and
add
adc
and
add
and
add
or
xchg
dec
enter
aaa
or
pop
add
xor
addb
or
fs
add
mov
mov
addb
subl
mov
les
and
and
add
add
add
mov
push
and
subb
add
sub
int3
les
addb
inc
or
cwtl
dec
add
add
nop
push
add
or
bound
add
addl
adc
popa
popa
add
inc
mov
push
add
mov
mov
mov
adc
sbbl
inc
sub
and
add
pop
jo
loopne
inc
adc
xor
add
inc
push
nop
and
and
jbe
add
adc
add
and
push
add
and
add
add
push
inc
andb
addb
inc
add
dec
adc
orb
or
inc
push
adc
add
jecxz
sub
or
and
mov
addb
xor
add
dec
or
subb
push
adc
inc
push
inc
or
or
add
mov
add
inc
add
dec
adc
inc
mov
inc
sub
inc
sarb
pusha
add
inc
inc
popa
add
or
add
adc
add
add
add
sub
inc
mov
test
push
test
adcb
and
bound
add
addb
dec
or
mov
xchg
and
and
adc
cmp
les
and
adc
or
pop
sbb
rolb
subb
inc
orb
adc
xchg
inc
adc
and
inc
add
add
sbbl
es
mov
or
pusha
adc
dec
or
addl
push
add
or
pop
add
daa
adc
andl
inc
ds
add
sub
xchg
inc
or
repnz
xor
or
les
adc
roll
xor
adc
add
add
adc
add
rcrb
inc
addb
inc
inc
xchg
pop
jo
inc
xchg
ret
add
inc
rolb
sub
addb
mov
add
push
add
xor
add
test
push
add
add
push
add
add
mov
add
adc
or
push
add
rclb
push
dec
add
adc
pop
add
pusha
addb
add
js
adc
insb
test
add
push
addb
add
add
or
repnz
addb
or
and
mov
or
sbb
add
addl
or
add
orb
movsl
ret
sbb
or
add
dec
addb
addb
adcl
inc
ret
add
adc
jo
or
dec
or
inc
adc
loopne
and
adc
xor
and
inc
add
add
inc
and
add
add
push
sbb
add
add
push
and
add
inc
add
and
push
push
and
adcl
sbb
add
xchg
push
inc
inc
add
and
add
adc
push
mov
xor
inc
adc
add
lock
mov
add
push
inc
xor
add
add
sbb
rcrb
add
inc
jb
xchg
or
add
adc
or
inc
roll
or
or
add
dec
pop
inc
dec
add
and
and
add
and
roll
inc
add
mov
andl
and
adc
inc
and
inc
add
inc
xor
push
bound
lods
rclb
xor
add
xor
jne
addb
inc
nop
add
add
addb
rolb
inc
add
cmp
sbbb
adc
addb
or
mov
adc
xor
and
xchg
add
dec
nop
test
subb
inc
dec
or
adc
test
inc
inc
xchg
and
add
add
and
and
add
add
xor
add
inc
lcall
add
or
dec
add
sbb
sbb
sbb
ret
add
cmp
push
sbb
and
and
popa
adc
fs
push
add
pop
and
xor
add
add
inc
mov
mov
inc
pusha
add
or
je
add
orb
or
sub
enter
xorl
test
adcb
pop
les
shrb
xor
add
add
and
mov
loop
or
arpl
rolb
adc
inc
add
push
and
adc
test
addl
inc
mov
lea
or
bound
add
xchg
mov
push
add
add
rolb
add
sbbl
ret
popa
test
inc
pusha
add
xchg
and
adc
adc
add
pusha
add
dec
push
les
adc
xor
and
lea
add
and
aam
aam
add
adc
and
add
add
sub
inc
inc
xor
adcl
or
and
add
inc
add
ret
popa
jo
mov
pop
and
addl
adc
or
inc
or
xor
add
add
add
xor
addb
inc
shlb
add
add
inc
movsl
inc
inc
pop
add
add
add
add
or
test
add
and
inc
test
xor
and
call
andl
add
inc
xchg
add
test
push
sbbb
mov
push
enter
pushf
inc
add
xor
add
add
inc
mov
push
push
inc
or
add
cmp
adc
push
add
inc
addb
add
add
push
and
orl
and
add
adc
stos
add
pop
lret
sbb
cmp
pop
add
inc
add
sbbb
movsl
dec
inc
inc
add
pop
add
and
inc
mov
add
adc
subl
nop
lcall
and
and
add
add
or
xorb
cmp
adc
cmpsb
bound
adc
add
and
add
inc
xor
inc
adc
nop
add
int
add
adc
rolb
xor
and
add
add
add
data16
or
inc
mov
lcall
inc
xchg
add
test
add
orl
adc
and
push
adcb
add
add
or
ret
addl
add
addb
add
test
add
xor
mov
pop
inc
adc
and
loop
addb
arpl
dec
inc
add
sbb
inc
add
push
dec
add
xor
or
add
push
rcrb
cmp
js
dec
mov
inc
add
pop
inc
or
inc
inc
cs
cmp
xchg
or
xor
adc
lock
add
enter
and
xor
inc
push
pusha
adc
add
add
add
orl
mov
sbb
inc
add
push
test
inc
loop
or
add
adcl
add
and
add
pop
outsl
or
add
add
add
loopne
inc
or
nop
or
mov
xor
push
cli
dec
mov
and
xor
add
adc
pop
add
mov
xor
add
add
adc
adcb
add
sbb
inc
adcb
add
andb
push
add
add
add
add
add
xor
inc
or
add
add
mov
xchg
add
add
mov
add
inc
mov
add
xor
add
sbb
add
adc
inc
xor
add
and
roll
xor
push
or
add
mov
add
push
add
and
adc
add
add
inc
add
mov
add
inc
xor
or
inc
or
adc
push
mov
mov
popa
xchg
adc
add
addb
xor
loopne
and
or
mov
rclb
inc
or
add
inc
adc
and
or
mov
adc
add
pop
add
or
mov
pop
add
push
add
sub
add
and
add
xchg
pop
adc
add
mov
xchg
pusha
add
addb
inc
adc
add
and
movups
sbb
push
pusha
add
sbb
adc
jno
inc
or
sbb
and
addl
sbbb
add
fcomps
add
adc
xchg
mov
sbb
rolb
add
and
rolb
fcoms
add
xor
add
adc
rcr
test
add
leave
and
push
add
and
add
cmp
inc
adc
shlb
inc
add
add
add
addl
movsb
add
mov
and
sldt
inc
dec
inc
shlb
inc
adc
sbb
or
add
adc
add
inc
add
mov
add
and
ljmp
add
inc
adc
add
xor
mov
push
add
add
and
hlt
adc
pusha
xor
push
ret
addb
add
or
adc
mov
add
and
add
push
inc
sbb
or
add
clc
sbb
add
pusha
add
or
xor
mov
dec
pop
addb
xor
add
inc
add
andb
add
add
inc
adc
mov
shlb
add
adc
add
add
fisttpl
add
or
xchg
add
xor
rorb
inc
ss
mov
add
and
add
nop
sub
daa
sbb
mov
adc
push
add
pushf
inc
add
nop
outsl
pop
add
sbb
and
xchg
and
inc
or
add
add
or
add
push
add
dec
and
push
add
inc
add
add
out
popw
push
add
orb
add
mov
es
add
add
addb
pop
mov
or
and
or
adc
addl
inc
mov
or
addr16
adc
addb
push
add
add
test
sbb
add
add
adc
mov
push
pusha
outsl
or
adc
and
add
jo
cwtl
subb
sbb
push
cmp
adc
lds
mov
add
aas
and
add
xor
inc
inc
add
dec
inc
or
xchg
add
roll
mov
xor
or
adc
sbb
adc
mov
adc
add
mov
add
shlb
aam
add
adc
mov
sbb
add
mov
loopne
adc
ret
adc
lcall
addl
inc
add
das
xorb
adc
dec
add
add
add
mov
add
andl
inc
push
add
add
add
adc
sub
inc
sub
and
pop
adc
addb
add
test
sub
add
add
andb
xorl
imul
and
add
gs
and
add
sub
inc
xchg
cwtl
fadds
or
adc
nop
rolb
add
mov
mov
mov
inc
and
xor
add
pusha
or
inc
add
test
add
ret
and
add
push
adc
bound
or
xor
sub
pop
adc
addb
push
add
add
mov
cmp
push
mov
inc
add
or
adcb
dec
jo
rorl
dec
and
mov
adc
adc
add
test
int
mov
adc
xchg
xor
or
inc
es
sbb
or
dec
das
add
or
adc
add
arpl
add
push
inc
mov
and
xor
and
rolb
pop
inc
pusha
inc
inc
add
adc
addb
inc
adc
add
inc
push
mov
mov
pusha
add
ret
or
add
add
cs
add
mov
inc
inc
call
add
stos
and
inc
adc
jb
cmpb
add
nop
orl
leave
adc
add
xchg
cltd
inc
and
add
add
mov
xor
mov
and
sub
pusha
inc
inc
xor
dec
and
and
or
adc
inc
dec
xor
or
dec
rorb
test
add
add
inc
add
add
adc
and
cmp
add
inc
mov
adc
add
mov
add
rcrb
sub
add
inc
sub
adc
adc
and
adc
adc
mov
inc
and
push
sbb
add
and
sbb
or
push
push
add
push
add
lea
xor
add
inc
pop
roll
or
mov
adc
inc
aad
and
add
addl
adc
inc
mov
adcb
jo
add
inc
adc
or
lret
push
or
add
inc
sahf
add
adc
lret
adc
test
push
add
add
xor
add
or
add
dec
and
add
add
add
add
xchg
call
inc
mov
adcb
adc
dec
or
add
add
and
dec
mov
mov
inc
add
add
add
andb
dec
or
add
add
test
and
and
adc
add
add
add
inc
sbb
dec
add
dec
add
add
add
mov
ret
or
adc
adc
xchg
inc
xor
adc
nop
mov
add
and
add
mov
test
and
push
sbb
add
push
adcb
adcb
rclb
mov
ret
mov
add
jo
jb
sbbl
sub
add
add
es
add
inc
and
pop
and
sbb
shlb
add
add
adc
add
push
test
or
adc
nop
inc
nop
pusha
add
add
and
mov
add
dec
daa
inc
adc
sbbb
or
pop
and
add
add
inc
inc
add
es
push
add
addb
add
mov
or
addr16
nop
or
mov
add
add
mov
or
add
push
or
xchg
mov
jo
xor
or
add
adc
add
rolb
and
push
sub
add
lods
and
or
push
movb
or
add
or
andl
rclb
inc
and
loop
sbb
add
add
addl
and
or
add
data16
mov
pusha
push
add
push
add
add
and
or
add
inc
or
add
pop
out
push
ret
or
nop
and
push
add
sbbb
inc
shl
inc
and
xor
xor
push
add
add
ret
adc
mov
or
addb
or
and
add
adc
mov
and
rcll
popa
cwtl
inc
bound
add
mov
rolb
add
or
inc
mov
inc
nop
adcb
test
or
mov
sbb
pusha
mov
ret
add
and
and
dec
add
inc
xor
push
adc
add
test
or
scas
and
xor
in
sub
adc
and
push
adc
inc
add
adc
push
cmp
push
adc
add
add
add
or
in
inc
adc
inc
addb
jo
add
add
andl
inc
inc
add
inc
xor
mov
adc
pop
adc
add
or
inc
add
adc
or
add
jo
add
or
and
add
sub
inc
add
add
sbb
push
and
insl
inc
sub
inc
add
pop
or
add
cmp
add
add
or
or
add
adc
inc
add
and
add
add
add
or
inc
gs
mov
adc
adc
sub
add
and
add
add
inc
add
rolb
add
pop
shlb
add
sbb
inc
adc
and
inc
add
add
add
sub
add
push
push
loopne
mov
add
add
adc
add
add
adc
and
mov
adc
adc
inc
or
adc
adc
add
and
adc
adc
test
or
push
add
pop
or
dec
andb
adc
add
dec
test
and
rolb
into
inc
xor
and
add
inc
push
inc
adc
test
add
call
inc
adc
pop
and
inc
add
xor
adc
add
add
push
lcall
add
mov
and
or
inc
xor
mov
add
pusha
dec
and
push
inc
adc
pusha
or
xchg
inc
fimull
and
add
add
cmp
inc
sbb
mov
dec
inc
inc
pusha
addb
mov
adc
test
inc
or
enter
adc
andb
adc
and
xor
mov
or
add
and
add
adc
movsb
pop
push
adc
inc
or
adc
cwtl
xchg
inc
xor
add
mov
add
or
push
push
adc
test
add
adc
nop
adc
adc
inc
add
rolb
add
test
adc
movsl
and
es
stos
xchg
add
rclb
add
add
add
add
and
adc
and
xchg
add
add
inc
xor
inc
lea
adc
xchg
test
inc
xor
add
and
addb
and
sub
add
sbb
xchg
mov
and
jb
inc
push
orb
add
andl
and
xor
add
adc
sbb
addl
and
pop
or
xor
shlb
add
inc
test
xchg
or
mov
adc
inc
adc
inc
loopne
cwtl
cs
add
add
rorb
sub
or
add
orl
inc
and
add
pop
jg
inc
adcb
dec
nop
xchg
shlb
xchg
add
add
add
xor
push
movb
or
add
mov
pop
pusha
push
dec
add
xor
add
add
inc
adc
and
inc
add
cmp
push
shlb
inc
cs
nop
pop
xchg
and
dec
or
adc
adcl
adc
call
xorb
add
cmp
add
add
xchg
push
and
or
inc
mov
mov
and
add
or
add
add
nop
andb
xchg
push
or
cwtl
xor
sbb
add
and
cmp
adcl
nop
in
inc
pusha
sbb
or
push
addb
inc
adc
adcl
add
inc
mov
add
add
push
or
xchg
or
or
sbb
and
inc
xchg
pop
in
lock
mov
add
or
add
inc
and
inc
enter
add
add
and
and
push
xchg
es
fdiv
add
adc
lea
push
dec
add
sbb
add
adc
add
mov
xchg
add
rolb
inc
add
inc
add
xor
add
add
add
addb
and
add
push
add
adc
inc
and
pushf
pop
inc
adc
push
dec
and
test
adcb
mov
sbb
adc
arpl
lods
fiaddl
and
add
and
add
cwtl
add
add
inc
pusha
mov
add
inc
add
adc
ret
add
xorb
inc
add
inc
add
and
addl
sbb
inc
add
add
shlb
mov
add
sub
add
mov
add
and
adcl
sbb
and
add
add
add
stos
or
xchg
xchg
add
add
xchg
or
mov
addb
and
add
push
adc
addb
add
add
data16
loope
orb
xchg
addb
adcl
add
dec
sub
mov
add
mov
add
mov
loop
add
inc
sbbb
inc
add
addl
sbb
pop
add
jo
inc
adc
add
aam
add
dec
add
add
orb
adc
adcl
test
orb
adcb
add
adc
adc
dec
rolb
and
and
add
and
ret
mov
ljmp
or
push
andb
enter
push
adcb
xchg
add
insb
dec
inc
add
xor
add
push
mov
loope
inc
inc
orb
adc
adc
adc
adc
and
roll
icebp
xor
or
inc
les
add
dec
add
sub
or
or
loopne
add
mov
cmp
sub
inc
addb
inc
push
roll
inc
add
mov
push
and
add
shrb
test
and
mov
mov
add
adc
add
adc
xor
lea
add
test
cmp
andb
xor
rclb
mov
xor
je
pusha
pop
or
adc
xor
adc
add
xchg
ret
movsl
and
pop
lock
les
dec
or
or
push
orb
and
push
subl
dec
sbb
inc
or
bound
and
adc
add
daa
add
lret
and
xor
inc
mov
inc
cmp
adc
inc
add
dec
push
mov
add
fmuls
add
add
push
push
pusha
add
inc
add
dec
add
push
lea
addb
jo
and
add
orb
or
xor
or
pusha
or
adc
and
sub
adc
inc
or
and
and
add
cltd
inc
and
add
inc
add
inc
rclb
push
out
inc
cwtl
push
add
mov
add
cmp
pop
inc
add
xor
add
pop
pop
add
or
cmp
rcll
rclb
cwtl
adc
inc
inc
and
adc
cmpsb
inc
sbb
adc
add
add
pop
arpl
adc
add
inc
add
push
lcall
or
and
inc
sub
or
and
add
inc
add
inc
test
adc
inc
add
mov
add
or
add
lret
dec
add
inc
addb
adc
and
xor
and
mov
inc
push
cmp
push
dec
sbb
add
inc
hlt
or
addb
aam
add
push
adc
adc
add
sbbb
and
add
inc
shll
nop
adc
or
rolb
mov
push
test
and
sbb
test
add
inc
inc
and
sub
push
jo
inc
addl
movsl
rorb
add
add
push
and
xchg
add
mov
sbb
and
sbb
push
push
or
adc
inc
or
and
adc
sbb
add
loopne
dec
sbb
adcb
mov
adc
add
and
inc
and
adc
mov
add
mov
inc
add
addb
add
addb
and
pusha
xor
push
xchg
add
andb
sub
push
add
popa
adcl
or
add
push
and
sub
and
add
or
rolb
add
adc
addb
pop
int
sub
add
test
dec
nop
and
and
sub
add
adc
add
add
add
push
sub
adc
sbbb
add
add
or
inc
pusha
xchg
xchg
rclb
andb
add
movhps
xor
cwtl
sbb
mov
movsb
inc
add
mov
mov
lock
sbb
or
shll
rolb
inc
jno
push
add
xchg
xor
data16
add
sbb
adc
add
add
or
xchg
inc
adc
or
add
aas
adc
add
xor
inc
nop
adc
sbb
add
add
add
daa
sbb
jp
addb
add
rolb
mov
add
add
mov
add
inc
inc
add
xor
push
add
pusha
xchg
nop
sub
inc
and
orl
push
inc
or
xor
inc
add
inc
mov
inc
add
bound
sub
mov
sub
and
mov
dec
sbb
mov
add
mov
sub
and
sub
inc
inc
xor
inc
popa
and
popa
or
add
add
add
push
add
inc
sbb
inc
dec
add
and
sbb
add
adc
sbb
inc
add
nop
dec
iret
loopne
adc
inc
mov
add
add
push
add
add
inc
add
and
adc
add
add
inc
inc
xor
add
xor
nop
add
pop
or
add
add
add
add
add
mov
inc
add
adcb
dec
pusha
orl
add
adc
loope
and
sbb
adc
adc
add
inc
inc
rcr
add
mov
mov
arpl
push
sar
int3
pop
inc
add
and
add
addb
inc
push
cwtl
mov
adc
pushf
jno
xchg
adc
adc
inc
add
sub
jae
add
pop
inc
inc
pop
sub
rclb
rolb
adc
inc
and
orb
xchg
mov
or
dec
addl
movsb
add
pop
add
add
pusha
add
or
adcb
pop
mov
add
adc
add
add
cmp
pop
add
add
and
mov
add
popa
sbb
add
add
add
add
adc
add
sbb
rolb
add
and
flds
add
add
adc
test
sbb
and
xchg
add
lea
add
mov
and
and
adc
xor
adc
xor
add
popa
add
dec
test
add
push
and
add
bound
push
inc
inc
adc
and
sbb
add
push
add
and
sbb
sbb
inc
add
inc
add
or
or
lods
push
subb
adc
add
add
add
and
shlb
add
mov
inc
or
inc
push
adc
add
xchg
imul
add
add
sub
inc
add
push
mov
enter
movsb
push
push
push
rcl
test
mov
inc
inc
and
xchg
adcb
cmpb
mov
movsb
sub
adc
add
sbb
aad
add
inc
add
inc
and
adc
adc
roll
adc
addl
add
test
adc
cmp
add
movsb
push
add
xor
inc
mov
andb
into
inc
xor
sub
xor
add
adcb
roll
roll
xchg
add
mov
cwtl
add
addb
sbb
and
add
and
add
lret
inc
sbb
mov
inc
or
inc
adc
and
ret
add
inc
data16
add
or
add
scas
push
dec
inc
and
int3
rolb
xchg
add
adc
and
xor
add
inc
or
and
scas
addb
add
es
or
sbb
add
and
roll
or
addb
and
nop
cmp
lods
add
addb
and
xor
add
or
add
add
push
test
add
andb
mov
inc
inc
inc
push
inc
mov
add
dec
xchg
test
or
add
add
mov
nop
add
xor
xor
jae
rolb
and
mov
or
adc
iret
xor
and
mov
adc
popa
or
inc
and
adc
dec
movsb
sbb
xor
inc
inc
xchg
adcb
test
pop
dec
inc
push
add
add
andb
add
add
or
add
and
sbb
push
rolb
add
add
and
xchg
mov
or
mov
mov
and
or
inc
and
insb
test
icebp
adc
sub
and
sbb
inc
push
and
je
adc
adc
xchg
add
push
inc
or
mov
add
addb
add
pop
outsl
or
add
add
adc
inc
inc
rolb
add
add
or
in
movsb
bound
lcall
or
add
adc
adcb
add
orb
and
add
adc
add
or
inc
pusha
xor
mov
add
pushf
andb
add
add
and
jns
add
mov
inc
or
dec
pusha
add
inc
rolb
adc
and
xor
nop
mov
inc
rorb
in
or
inc
add
lock
rcll
add
mov
inc
sub
or
dec
shll
sbb
cmp
sub
and
and
inc
orb
and
inc
sub
add
inc
add
push
dec
gs
and
adc
add
or
xor
es
lods
or
and
jne
test
rol
or
and
inc
and
add
loop
adc
push
or
sbb
or
add
push
and
push
sbbb
and
addb
mov
add
adc
nop
push
rclb
mov
mov
je
lock
loopne
add
add
add
add
subl
les
sub
add
add
adc
and
sub
add
js
adc
rcl
push
or
inc
inc
sub
add
nop
and
adc
stos
add
and
cli
add
inc
addb
test
orb
and
test
mov
adc
lock
sbb
inc
jl
add
xchg
or
add
rol
inc
subb
es
cwtl
pop
add
or
subb
adc
and
mov
add
subb
push
add
or
and
push
dec
add
adc
sbbb
arpl
das
and
add
addl
add
add
xchg
in
or
add
add
adc
sub
or
dec
inc
adc
sub
adc
jns
or
mov
sub
cmp
push
sub
sbb
and
addb
inc
or
add
pushf
add
add
jno
andb
addb
xchg
xor
mov
add
and
filds
adc
adcl
sbb
or
add
adc
and
sbb
cwtl
adc
mov
add
add
stos
adc
inc
adc
mov
xchg
orl
add
sub
addb
add
adc
or
add
add
dec
in
add
mov
add
or
inc
add
inc
cmp
push
pusha
add
sbb
sbb
add
and
mov
add
andb
xor
add
or
inc
adc
rolb
add
add
aam
and
and
push
xchg
test
add
shlb
lahf
loop
adc
xor
rolb
and
int3
and
add
add
dec
xor
or
cltd
cmp
add
push
addb
pop
add
pop
add
add
adc
add
and
or
add
and
pushf
pusha
push
add
sub
or
adc
fwait
add
adc
add
test
dec
dec
enter
add
lret
or
inc
adc
xor
inc
and
jge
add
or
addb
int3
adc
adc
and
add
add
and
and
and
mov
and
nop
shlb
add
call
adc
or
adc
inc
mov
add
and
push
jb
pop
bound
adcb
inc
adc
jae
push
sbb
add
add
push
jo
mov
adc
adc
push
dec
adc
and
add
and
add
sbb
add
add
add
add
adc
adc
rolb
loope
add
inc
cwtl
add
adc
addl
add
adc
pop
lret
and
sbb
push
inc
add
sub
push
inc
and
adc
sbb
nop
or
add
xor
test
adc
add
inc
adc
add
add
inc
inc
shl
add
xor
and
add
add
sub
adc
adc
and
add
pop
or
inc
or
dec
push
add
and
push
add
add
adc
aaa
xchg
addb
add
add
and
add
jo
or
add
adc
add
add
andb
xchg
xor
inc
xor
xor
add
add
mov
sub
lods
insb
or
and
mov
mov
test
sbb
and
xor
or
dec
sub
arpl
cmpl
mov
add
add
sbb
or
addl
fdivs
mov
inc
inc
push
add
mov
lock
add
adc
xchg
add
rorb
test
add
and
add
xchg
xor
add
inc
or
xor
xor
xor
and
inc
push
add
add
inc
push
add
and
xchg
test
jl
pusha
add
xor
add
push
enter
stos
or
ss
inc
add
and
inc
add
nop
movsb
loop
and
push
and
cltd
rolb
rolb
push
add
sub
adc
inc
or
adc
sub
adc
adc
sbb
adc
push
dec
nop
or
adc
add
mov
bound
add
addb
cmp
adc
or
sbb
adc
adc
add
push
cltd
nop
mov
adc
call
push
add
pusha
mov
add
and
add
add
addb
add
mov
dec
or
and
add
inc
nop
or
dec
or
shll
adc
inc
add
push
or
sbb
or
inc
xor
mov
nop
add
inc
xor
add
lret
addl
add
add
add
sub
orl
add
push
and
or
sbb
add
enter
push
push
add
push
inc
and
add
add
add
adc
xchg
add
and
adc
or
inc
push
add
add
add
adc
test
xchg
add
xor
or
xor
sub
sbb
adcb
test
add
mov
dec
add
andl
adc
or
add
pop
ret
and
add
dec
add
inc
add
inc
and
push
add
push
sub
scas
sub
add
ret
mov
dec
or
push
movsb
andb
and
pushf
andb
push
loopne
adc
mov
add
mov
xor
add
dec
inc
sub
add
or
loopne
adc
repnz
movsl
add
pop
fwait
add
push
xchg
add
add
or
push
push
add
addb
and
or
add
and
push
or
add
push
adc
js
push
inc
or
pusha
and
xchg
add
add
adc
nop
sub
rolb
and
inc
push
rclb
shlb
sub
addb
push
add
and
dec
and
or
mov
xor
xchg
or
add
mov
adc
push
inc
inc
addb
movsb
inc
mov
or
or
rclb
or
or
addb
out
addl
inc
and
mov
inc
xchg
xchg
inc
ret
inc
mov
inc
dec
push
add
mov
adc
sbb
test
or
and
add
add
inc
inc
orb
or
inc
je
adc
add
enter
adc
add
and
add
sub
mov
push
movsb
xchg
and
inc
push
dec
add
sbb
jno
dec
rcll
inc
or
lods
adc
sub
mov
sbb
or
add
and
add
add
mov
add
or
rorl
adc
xchg
add
add
inc
xor
sub
and
add
adc
add
or
sbb
mov
add
add
dec
subb
lods
or
add
xchg
enter
or
sub
inc
and
pusha
add
add
inc
pushf
push
aad
inc
bound
inc
out
add
mov
arpl
adc
addb
and
popa
andb
sub
add
movsb
sbb
xor
inc
mov
mov
dec
or
mov
mov
adc
or
add
and
sbb
nop
add
add
push
push
fadds
and
adcb
push
sub
inc
push
push
inc
or
xor
leave
adc
add
adc
push
addb
outsb
or
adc
pop
add
das
sub
add
imul
adcb
test
add
add
test
mov
sbb
inc
add
xor
and
mov
mov
add
sbb
push
fmuls
inc
inc
daa
and
add
adc
inc
inc
mov
add
movb
push
or
add
arpl
sub
add
jo
sbb
add
call
addb
and
add
addl
adc
in
addl
add
mov
rclb
ret
add
movsb
add
or
and
push
add
sbbb
sub
mov
add
add
sub
mov
add
sbb
or
mov
nop
add
push
add
sub
nop
inc
add
mov
and
mov
test
pop
nop
add
push
addb
lea
inc
sbbb
mov
add
adc
add
add
mov
inc
and
push
adc
sub
xor
test
adc
or
ret
mov
push
inc
xchg
test
daa
fwait
das
and
test
inc
addb
add
adc
and
add
or
inc
add
sub
adc
add
add
sub
add
dec
push
and
mov
add
or
xor
and
orb
add
add
xor
xchg
test
adc
add
add
add
and
adc
mov
inc
mov
or
xor
sub
xchg
test
and
adc
push
add
popa
add
or
or
add
add
add
add
adc
xchg
or
adc
addb
add
push
push
mov
add
adc
inc
add
or
or
add
pusha
add
mov
push
dec
xchg
push
add
add
add
addb
and
pop
add
addb
mov
or
add
xor
addb
add
or
add
push
adc
or
inc
and
add
cmp
dec
add
or
bound
and
add
mov
and
rol
add
xor
and
pusha
add
or
adc
or
add
addl
add
addl
mov
add
adc
bound
add
test
add
add
addb
sub
rolb
add
add
je
add
xchg
xor
and
or
add
add
add
or
adc
es
add
add
movsb
adc
and
dec
inc
adc
and
add
mov
add
add
add
add
or
xor
or
add
xor
or
arpl
mov
bound
pop
es
adcb
add
push
or
pusha
add
add
add
or
arpl
add
inc
xlat
addl
inc
add
xchg
mov
or
inc
add
add
adc
add
inc
xor
add
test
or
inc
ret
addl
and
adc
add
add
adc
add
or
add
add
push
add
and
dec
add
inc
add
nop
add
add
add
add
and
or
push
jns
xchg
mov
nop
add
rcrb
adc
popa
dec
add
inc
enter
add
xor
inc
mov
and
imul
inc
adc
mov
add
add
add
add
add
mov
add
inc
fadds
add
add
mov
inc
or
arpl
and
and
add
and
and
push
mov
add
dec
add
inc
add
push
dec
fildl
add
mov
add
add
add
xor
add
adcb
adc
add
adc
and
adc
add
mov
imul
inc
push
add
or
add
add
or
adc
and
add
andb
add
adc
add
rclb
sub
sub
add
add
add
and
inc
add
nop
inc
sbb
or
add
push
inc
add
or
inc
add
inc
shll
addb
and
inc
or
add
add
inc
and
and
test
sbb
inc
rclb
add
add
fwait
adc
add
adc
or
orb
adc
add
inc
sbb
sub
pusha
addl
loopne
add
adcb
add
add
repnz
add
addb
jbe
addb
bound
adc
add
les
arpl
dec
or
add
nop
push
or
adc
add
and
and
adc
or
and
movsb
jo
xor
add
adc
add
xchg
add
and
adc
add
add
adc
inc
add
test
or
sbb
add
add
add
adc
jo
sub
and
adc
add
add
add
add
sub
inc
add
lahf
add
add
inc
orb
mov
add
andb
add
inc
bound
add
les
adc
mov
add
add
add
addb
push
adc
add
push
or
adc
inc
push
inc
bound
add
add
or
addl
add
nop
add
rolb
and
stos
and
add
xor
add
xchg
push
sbb
inc
mov
push
add
add
inc
inc
add
inc
or
adcb
addb
push
push
add
and
adc
addb
add
shll
inc
add
adc
inc
add
push
inc
addb
and
add
add
add
and
add
add
push
inc
add
add
add
mov
add
inc
popa
and
adc
add
add
adc
add
add
cmp
inc
sub
adc
or
adc
cmp
and
or
add
adc
add
fwait
add
xor
add
inc
loopne
add
inc
sub
add
add
add
inc
add
leave
add
add
xchg
or
adc
or
add
inc
mov
add
popa
adc
add
add
add
add
add
push
pop
inc
and
add
ret
inc
lock
adcb
add
add
add
add
inc
push
push
inc
inc
adc
js
add
add
pop
add
add
nop
add
andb
adc
add
adc
addb
mov
nop
inc
add
inc
xchg
add
add
inc
add
arpl
inc
add
adc
mov
mov
cltd
add
inc
add
add
enter
add
addb
and
mov
or
add
add
dec
add
sbb
mov
or
adc
inc
or
shll
push
add
adc
add
addb
or
add
add
add
xchg
adc
addb
or
push
inc
add
adc
and
push
nop
add
nop
add
add
add
adc
test
add
or
add
rorl
and
or
adc
add
inc
push
pusha
add
and
inc
dec
add
xchg
roll
add
add
pop
add
add
add
add
add
add
adc
inc
add
xchg
subl
inc
or
add
inc
dec
ret
add
add
push
push
add
add
add
xor
inc
and
inc
test
add
dec
adc
mov
and
push
sbb
xchg
add
add
add
inc
and
rorb
add
popa
mov
add
and
add
rorb
add
test
adc
adc
and
and
add
addb
and
inc
add
sub
inc
add
mov
jo
adc
mov
inc
roll
and
add
inc
and
add
and
add
add
adc
add
mov
mov
xchg
add
gs
add
add
push
dec
inc
sbb
add
add
add
add
add
dec
push
inc
push
add
and
add
add
xor
add
add
push
inc
add
nop
pusha
push
add
xchg
addb
and
mov
and
inc
add
add
or
adc
sbb
add
adc
adc
adcl
add
xchg
loopne
mov
shlb
or
add
add
add
mov
add
add
adc
add
addb
or
enter
test
or
and
or
add
adcb
add
sbb
add
push
mov
les
or
sbb
add
addb
rclb
and
addb
add
or
inc
test
add
inc
add
xor
add
add
adc
add
add
and
add
or
roll
xor
add
add
add
add
mov
inc
inc
add
add
and
add
add
pop
add
add
or
orb
or
andl
test
lea
ret
add
push
test
subb
rclb
es
or
xchg
sub
inc
inc
and
add
add
add
add
movsb
add
sbb
inc
or
inc
add
cmp
add
or
add
or
add
loopne
inc
adc
or
or
add
loop
mov
add
push
and
sbb
sub
add
andb
mov
add
adc
inc
inc
adc
les
loope
mov
and
add
add
add
add
inc
add
add
add
add
addl
add
add
add
add
add
add
add
adc
adc
add
add
orl
add
adc
inc
add
sbb
test
inc
add
adc
add
or
add
addb
adc
addl
add
add
add
mov
sbb
addb
jne
inc
add
adc
mov
add
cmp
inc
inc
and
sbb
or
add
mov
and
mov
int
adc
sub
addb
or
adc
add
add
or
add
adc
inc
sbb
add
add
add
add
add
cwtl
bound
cmp
add
add
and
add
sbb
inc
add
es
rolb
and
push
push
and
roll
add
adc
add
inc
add
add
inc
add
add
daa
xorb
or
dec
xchg
inc
adc
and
add
clc
leave
add
and
add
add
or
push
add
xor
push
inc
add
sbb
add
add
addb
add
add
xor
jno
addl
inc
and
inc
xor
inc
shlb
add
adc
add
inc
add
or
add
add
test
mov
inc
cmp
inc
popa
pop
adc
adc
or
add
add
pop
add
sbb
adc
mov
add
add
and
or
add
and
adc
addb
add
add
and
adc
sub
adcb
push
xchg
adc
add
dec
adc
add
popa
dec
test
sbbl
mov
adcl
and
inc
inc
add
and
add
add
inc
add
inc
inc
inc
addb
add
pop
add
add
add
inc
pusha
nop
inc
sub
add
and
add
sub
add
or
add
add
inc
add
addb
test
inc
add
inc
popa
and
inc
add
inc
add
inc
addb
or
inc
add
or
mov
or
inc
adc
add
dec
addb
add
sub
add
xorb
add
addb
add
roll
adc
jl
sbb
cwtl
adc
pusha
adc
or
inc
rolb
adc
add
adc
outsb
test
add
push
mov
inc
addl
inc
and
shll
lods
test
or
add
xchg
mov
inc
inc
add
inc
inc
pushf
fs
add
or
add
mov
inc
inc
adc
add
add
add
sub
add
adc
push
adc
and
add
addb
addb
add
sub
sbb
add
add
sbb
test
ret
cltd
movb
add
push
add
add
adc
xor
adc
inc
adc
add
or
or
add
inc
sbbb
and
add
add
mov
addl
xor
adc
and
and
add
add
add
and
add
add
adc
add
add
pop
add
inc
add
push
add
adc
dec
sbb
test
add
inc
in
andb
popa
mov
dec
dec
inc
pop
push
adc
add
adc
sub
add
add
and
inc
sub
adc
add
add
add
add
add
rolb
add
and
add
and
inc
add
xor
add
subb
dec
add
add
sub
andb
add
inc
inc
add
mov
add
add
mov
pop
add
add
add
sub
or
push
jb
add
xchg
add
add
add
pusha
pusha
inc
add
pop
inc
popa
inc
add
add
adc
and
adc
popa
dec
ret
xchg
add
adcl
add
add
and
add
mov
add
and
inc
push
or
addb
push
inc
add
add
push
add
mov
imul
andb
inc
and
and
sub
or
add
add
add
and
add
inc
or
nop
repnz
adc
adc
push
addb
add
roll
mov
inc
or
adc
add
or
movb
and
add
xor
mov
add
inc
and
add
add
adc
add
and
add
xor
or
inc
nop
and
add
add
add
addb
add
add
sbbb
add
push
loopne
pusha
adc
movb
inc
push
add
or
addl
add
mov
add
inc
data16
or
inc
adc
mov
and
and
or
add
inc
inc
rorl
inc
jo
xchg
or
inc
add
adc
and
add
inc
adc
in
add
pusha
inc
add
add
add
sbb
sub
add
add
ret
add
add
add
add
inc
push
add
inc
add
inc
add
and
add
inc
push
or
adc
dec
popa
add
adc
adc
inc
xor
inc
or
xchg
push
inc
add
inc
into
sub
add
add
mov
add
sbb
add
sub
add
addl
add
add
enter
add
inc
pop
inc
add
push
int3
inc
add
add
add
add
add
addb
add
xchg
or
add
adcb
add
add
movsl
add
inc
dec
pop
int
fsubl
xchg
xchg
xchg
divl
out
jmp
xchg
mov
mov
enter
shl
lds
fsubl
jmp
arpl
xlat
or
lcall
mov
jecxz
fbstp
in
fst
ljmp
mov
insb
pop
adcb
xor
pop
rep
cmp
or
mov
aad
aam
push
jo
mov
test
or
jp
les
mov
mov
lret
out
jae
mov
cmp
pop
mov
rcll
add
mov
mov
int3
fisttps
addr16
rep
cmp
mov
mov
mov
lea
icebp
gs
aaa
cs
jno
cs
xlat
insl
cmpb
cwtl
dec
sub
adc
mov
jns
dec
pop
add
cmp
mov
xor
cmp
mov
adc
dec
sub
mov
mov
and
xlat
jp
es
sarl
sbb
dec
adc
or
mov
jns
lcall
or
dec
sub
xor
jp
dec
mov
psrad
jns
rcrb
dec
sub
jae
mov
cmp
mov
shr
ret
outsl
lds
fstpl
mov
gs
fisttps
outsl
addb
lret
nop
or
dec
sub
hlt
fcomi
fs
mov
aam
inc
mov
nop
push
mov
lds
xchg
nop
in
mov
ret
outsl
cmp
inc
outsl
mov
or
cwtl
fbstp
dec
sub
shll
mov
shr
pop
push
inc
mov
aas
mov
xlat
pop
dec
xchg
inc
xchg
daa
mov
or
dec
enter
sbb
dec
mov
jns
dec
aas
fistpl
dec
mov
jns
dec
aas
lret
cwtl
dec
sub
and
ret
fwait
mov
mov
ljmp
test
dec
pop
rcll
in
or
xchg
mov
hlt
add
pop
sub
out
pop
hlt
das
repz
testl
pop
fcmovnu
hlt
arpl
insl
mov
iret
or
jbe
in
lret
xchg
ret
fstpt
pop
cld
and
gs
insl
pop
pop
and
test
daa
js
inc
ljmp
xor
insl
mov
arpl
shr
pop
mov
adc
or
xor
addr16
jb
js
in
mov
cmc
jnp
pop
jo
mov
mov
xchg
add
jo
mov
mov
movsb
jno
mov
mov
lcall
mov
xlat
insl
dec
sbb
les
lods
inc
shlb
popf
xlat
mov
xlat
sti
addr16
mov
dec
shl
popa
xor
stc
adc
adc
dec
inc
and
cmp
xchg
test
pop
sub
mov
sub
inc
adc
sbb
lret
out
jae
mov
cmp
add
and
sub
out
lcall
xor
cmc
outsl
xlat
push
mov
pusha
pushf
xlat
cwtl
addr16
pop
out
hlt
fbstp
mov
mov
popf
repz
ljmp
jo
dec
sub
hlt
daa
aas
dec
mov
mov
xchg
daa
mov
lret
lahf
fistl
mov
fcmovnbe
lock
les
jo
dec
sub
hlt
sub
aam
enter
jl
cld
das
test
cmp
and
xlat
jns
cmp
jo
icebp
xlat
jns
insb
enter
ficompl
push
enter
movsl
gs
jns
push
enter
lock
lds
cwtl
les
jo
dec
sub
hlt
and
gs
or
sbb
sub
xor
xchg
daa
mov
add
out
xchg
fwait
dec
sub
addr16
xlat
or
xchg
or
mov
out
mov
aad
ret
cmp
test
aam
pop
xlat
pop
ret
pop
shll
je
clc
jmp
addr16
enter
jns
mov
jns
inc
aas
lods
lcall
or
fs
jmp
cs
and
in
filds
sub
fdivs
adc
pop
hlt
jns
adc
sbb
xchg
shrb
pop
jno
xchg
pop
inc
mov
pop
lret
test
test
inc
aam
outsl
inc
jae
cmp
adc
xchg
or
sub
xchg
pop
adc
pop
or
test
pop
sbb
fs
fisttps
adc
aam
outsl
out
lcall
cmp
inc
pop
dec
mov
jns
mov
pop
or
insb
inc
mov
rep
mov
nop
lret
hlt
js
insl
js
ret
rolb
xor
scas
stos
dec
cwtl
les
jo
dec
sub
sbb
in
ret
insl
stc
cmp
test
xchg
push
ret
lahf
add
addr16
mov
aam
xlat
mov
jmp
lret
ds
mov
xor
lret
sub
sbb
mov
push
mov
test
adc
mov
push
and
mov
mov
in
jne
mov
fistpll
mov
sub
movb
mov
icebp
fisttpl
outsl
mov
mov
iret
repz
pop
clc
or
outsl
cmp
inc
daa
xchg
mov
mov
and
xlat
test
mov
ret
ja
xlat
mov
xchg
movsb
jnp
xlat
mov
push
inc
arpl
inc
cwtl
inc
dec
mov
jns
cld
out
fdivp
mov
loop
mov
negl
mov
inc
jb
das
jnp
enter
arpl
sub
aam
fsubs
add
mov
loopne
nop
ljmp
js
adc
dec
out
popa
cmc
cwtl
cli
xor
mov
mov
mov
pop
fwait
call
popl
out
pop
repnz
test
aas
xchg
ret
push
xchg
outsl
cld
filds
xchg
invd
mov
cmp
nop
fmul
xchg
movb
push
sarb
fsubs
xor
insb
test
cwtl
xchg
mov
mov
shl
xor
fcompl
ret
mov
pop
outsl
push
aad
insb
notl
cltd
sbb
shlb
in
or
mov
cwtl
test
push
in
inc
stc
hlt
add
scas
addr16
fsub
testb
lds
orl
ret
movsb
fs
and
pop
mov
jo
mov
push
inc
clc
pop
insl
xor
es
pushf
dec
add
pop
loope
je
arpl
sbb
pusha
xchg
or
pop
addr16
out
mov
mov
dec
sar
mov
and
in
jmp
or
mov
ljmp
or
lods
mov
xchg
mov
lods
mov
push
cld
imul
enter
jno
sub
adc
cmpsl
roll
test
xor
popa
addr16
arpl
sbb
pop
add
inc
mov
stos
mov
mul
cmp
xor
lds
imul
popw
in
sti
xorl
mov
mov
push
lcall
addr16
pop
dec
cmp
leave
sub
mov
into
jge
dec
adc
mov
jb
mov
test
insb
add
xlat
jmp
xor
mov
pushf
inc
mov
mov
xlat
pop
and
and
fs
aad
mov
lret
daa
lcall
sbb
mov
jo
lock
pop
mov
out
scas
testb
loopne
in
or
or
mov
and
add
ja
test
aas
mov
lahf
mov
mov
sti
repnz
les
jb
addr16
xor
mov
mov
addr16
sub
roll
nop
cwtl
gs
add
cmp
xchg
test
or
dec
mov
sub
dec
cmp
sbb
jmp
add
ss
adc
push
mov
mov
repz
push
loope
js
js
push
cs
test
xchg
stc
stos
xor
xchg
loope
dec
ljmp
lods
loope
mov
pop
leave
mov
inc
cmp
xchg
imul
sarb
stos
mov
or
mov
inc
sahf
and
outsl
mov
add
adc
fsts
mov
fwait
insb
leave
inc
jmp
add
cmpl
cmpsb
xlat
mov
loopne
xchg
mov
fdivs
sti
scas
cli
jns
jle
scas
mov
mov
andb
lods
inc
ja
movsl
mov
adc
insl
jmp
dec
xchg
fldcw
aam
popa
mov
pop
push
cmp
jge
jl
xchg
aad
cmp
addr16
sbb
jmp
sub
xor
mov
jecxz
push
mov
sbb
mov
xor
into
push
pop
jp
jb
rcll
mov
insl
test
lods
jo
mov
orl
sub
pop
pop
xchg
cmpsb
mov
out
inc
mov
dec
or
test
xchg
add
sub
lret
mov
xor
jle
outsl
imul
roll
add
cmp
fwait
sbb
int3
cmp
mov
xor
inc
enter
xchg
mov
push
sub
cmp
add
pop
fs
mov
test
jb
std
jne
adc
mov
sub
scas
mov
out
pop
mov
rclb
xchg
mov
sbb
stc
rorl
icebp
rolb
fisttps
xchg
fstl
xchg
mov
cmp
lahf
icebp
push
cli
inc
cmp
inc
fsubs
xchg
jb
xchg
xor
mov
dec
jle
repz
jb
inc
xor
loopne
jg
sub
lahf
mov
leave
adc
sbb
sub
inc
addr16
pusha
mov
outsl
xlat
fnstcw
cmpsl
and
test
xor
shrb
xchg
xchg
sahf
pop
mov
lods
xchg
insl
cmc
jno
xor
xchg
out
loopne
xchg
imul
fdivl
push
jb
popf
adc
popa
mov
mov
fidivs
mov
hlt
adc
xchg
sbb
popf
mov
mov
sub
mov
je
inc
out
sbb
mov
scas
out
shrb
xlat
lret
movsb
into
sub
ds
mov
scas
push
stos
addr16
xchg
jns
mov
mov
std
cltd
out
out
and
test
addr16
shlb
jae
int3
jp
in
mov
dec
mov
dec
xlat
adc
pop
adc
insb
and
mov
in
ljmp
ds
inc
out
xor
in
mov
addr16
repz
out
pop
and
mov
dec
stos
inc
cmpsb
movsl
sahf
xlat
rcrl
repnz
or
mov
hlt
aam
idivl
xlat
dec
xchg
mov
push
mov
add
mov
jae
inc
inc
enter
mov
clc
gs
or
cmpsb
jbe
cmp
xlat
jmp
mov
mov
jp
cmp
xlat
xchg
ja
pop
xchg
lods
lods
push
cmp
je
addr16
mov
cmp
jmp
add
push
push
jecxz
movsl
mov
lds
data16
mov
lcall
and
xchg
addr16
in
xlat
pop
sbb
jnp
xchg
ficoml
test
xlat
sub
daa
sub
cli
mov
iret
in
sbb
idivl
push
add
shrl
fdiv
sub
sub
mov
cmp
loopne
fisubrl
mov
adc
test
call
pop
cld
jns
pop
or
mov
fldl
ss
mov
insl
sbb
mov
sbb
add
ret
sub
push
mull
icebp
pop
popf
and
mov
add
cmpsb
sub
xlat
xchg
movsb
imul
call
xchg
cmp
pop
sbb
sub
xchg
mov
or
lcall
and
jnp
pop
mov
jecxz
push
jb
call
jecxz
xlat
lods
fwait
orb
out
data16
lds
test
mov
data16
fdivs
mov
mov
sbb
bnd
xor
test
jne
fstl
xchg
xchg
xchg
inc
pushf
pop
les
cmc
insl
mov
push
cmp
rcrb
out
adc
and
pop
dec
out
cmpsb
mov
sub
sbbb
addr16
inc
adc
lods
xchg
jmp
xchg
or
jg
cs
sbb
pop
mov
ss
mov
lods
lods
mov
enter
stc
mov
mov
xchg
lret
aad
test
inc
adc
mov
mov
sbb
mov
xlat
push
adc
in
test
jp
cmpsb
int3
lock
jle
dec
nop
loop
cltd
andl
movsl
mov
mov
mov
add
cmc
stos
fdivl
into
push
mov
rorb
xor
mov
out
adc
mov
inc
xor
inc
adc
shrb
cmp
shrl
shll
repnz
and
lret
push
lahf
pusha
mov
out
push
fstl
int
xor
test
add
xor
shrb
mov
pop
xchg
push
mov
cmc
xor
mov
jno
cmp
cmc
sahf
pop
and
sbb
lock
xchg
add
xchg
dec
adc
cmp
sbb
ror
and
and
sub
and
adc
dec
cwtl
int
mov
aaa
and
out
mov
fwait
xchg
mov
pop
out
xchg
inc
outsb
ret
int3
jne
dec
test
xchg
pop
sub
or
xor
addr16
mov
mov
adc
mov
and
mov
lods
iret
mov
pop
inc
sahf
enter
mov
xlat
sbb
mov
xchg
pusha
nop
sbb
and
xchg
push
fdivs
cwtl
adc
and
les
or
xlat
outsb
sub
out
lds
mov
addr16
dec
dec
mov
mov
rcl
adc
xor
mov
cmp
mov
scas
lea
jp
mov
int
mov
in
enter
inc
mov
xchg
dec
sub
mov
cmp
cmpsb
sub
je
imul
addr16
sarb
pop
in
mov
testb
pop
lahf
lret
mov
xor
cmpsb
sar
mov
jbe
add
mov
sti
jmp
popf
pop
and
jp
loopne
rol
push
in
lret
inc
xor
push
mov
mov
mov
pop
pusha
jle
or
fcoml
xlat
or
imul
xchg
in
sbb
in
mov
ret
ucomiss
imul
jmp
or
mov
pushf
mov
mov
cmpsb
dec
pop
jp
mov
add
lea
xor
sti
xlat
or
dec
and
push
dec
mov
inc
loop
sti
in
ficomps
addr16
and
and
sub
mov
add
push
xlat
jbe
mov
mov
sub
sbb
outsl
out
dec
xchg
bound
adc
out
addr16
mov
jbe
cmp
fadd
and
mov
mov
and
dec
xlat
cmp
popf
test
mov
loope
repnz
jno
addr16
dec
das
mov
decb
and
es
int
adc
sarl
push
and
mov
or
adc
imul
stos
lds
mov
pop
xlat
or
jge
aaa
pop
add
jmp
inc
mov
lods
and
cwtl
mov
in
cwtl
sub
sub
and
push
jae
mov
das
out
xlat
xlat
and
pop
adc
shll
sub
test
push
sbb
xchg
inc
inc
lods
iret
mov
jae
or
push
add
enter
and
outsb
inc
pop
fcompl
mov
push
jnp
adc
sti
inc
xlat
pop
inc
data16
mov
lock
fucomip
mov
add
lcall
mov
out
add
lds
fbstp
pop
xchg
repz
in
or
xchg
movl
out
stc
outsb
addr16
lods
fisubs
mov
mov
cmp
sub
xchg
mov
leave
arpl
mov
inc
cld
xchg
mov
push
movsb
push
jg
dec
popa
jg
xchg
mov
add
mov
rorl
cmp
stos
sbb
int
out
pop
add
push
xlat
sbb
xor
mov
lock
fdivrs
cmp
repnz
add
ljmp
pop
aas
mov
xlat
cmpsl
push
orl
repz
sbb
jae
mov
addl
inc
insl
js
addr16
dec
xchg
xlat
lods
sti
mov
and
mov
xchg
pop
mov
cmpsl
enter
fnstenv
es
push
or
stc
cmp
push
mov
jmp
jecxz
scas
addr16
sbb
adc
adc
push
dec
dec
call
adc
dec
pop
xorl
or
cmp
ja
inc
in
pop
sbb
sbb
lret
je
pop
xor
addr16
fistpl
mov
mov
inc
es
fwait
pop
in
pop
or
je
xlat
push
pop
or
cmp
push
mov
jmp
add
pop
or
popf
sbb
mov
mov
adc
xor
xchg
out
repz
sub
negl
andl
fucomi
addl
ret
loop
mov
daa
cmp
dec
test
add
cltd
test
test
or
cs
cmp
lock
mov
jo
mov
pop
dec
push
outsb
adc
pop
imul
loop
mov
mov
mov
testb
push
mov
pop
fwait
in
test
or
mov
inc
xor
xlat
test
repnz
jnp
fcompl
lret
addr16
adc
and
jne
das
sbb
aas
addr16
mov
and
add
mov
cmp
addr16
sub
imull
enter
ja
enter
dec
xor
sub
inc
fisubl
addl
push
xlat
push
fisubs
xchg
cmp
mov
jge
lret
fwait
mov
ja
bound
ss
inc
sbbl
dec
push
stos
mov
imul
mov
inc
in
int3
mov
xorb
jno
mov
inc
jecxz
movsb
jns
jg
sbb
mov
add
sahf
inc
mov
push
fnstcw
xchg
fnsave
xor
in
mov
mov
cld
ret
arpl
popf
push
push
push
std
int3
sbb
jecxz
das
pop
adc
xchg
jno
pop
jae
xchg
jae
int
xchg
cmp
xor
mov
clc
rclb
dec
mov
xchg
out
jmp
or
jo
inc
xorl
addr16
push
fidivs
enter
sbb
or
mov
mov
aam
test
pushf
scas
pop
cltd
adc
cmpsb
mov
inc
jno
js
mov
roll
or
xor
bound
fsubrs
cwtl
xchg
in
add
into
cmpsb
sarl
rcl
mov
push
add
mov
ret
scas
dec
xchg
lahf
in
call
mov
add
movsl
imul
push
mov
push
rclb
in
xlat
dec
mov
shll
sub
or
xchg
jmp
xor
mull
xor
das
cltd
pop
int
add
mov
loopne
fldl
mov
rcll
mov
inc
jecxz
dec
jno
cltd
lret
mov
mov
mov
imul
aam
in
insl
lock
scas
imul
mov
ret
data16
push
or
jecxz
leave
mov
push
ja
inc
inc
pop
lcall
call
inc
lret
cmp
inc
mov
addr16
push
adc
cmp
mov
fs
mov
stc
xchg
jle
add
jmp
lea
or
adc
pop
xchg
inc
mov
enter
push
pop
xchg
mov
shll
pop
idivl
xorl
pop
ljmp
ret
cmp
sub
in
cwtl
das
mov
decb
stos
cmp
jnp
mov
out
cwtl
mov
pop
pop
cmp
mov
ja
repz
fs
mov
subb
mov
adc
out
cmpsl
lahf
ja
pop
xor
inc
push
repz
add
test
cmp
addr16
fwait
popfw
hlt
mov
mov
aam
and
and
mov
add
adc
jbe
xlat
mov
rorb
andl
mov
jae
push
sbb
mov
movsl
jg
xor
xlat
data16
xor
add
xor
ret
test
pop
fsubl
push
lods
push
push
pop
mov
shl
sbb
xchg
enter
pop
repz
jno
jnp
addr16
scas
mov
adc
xor
mov
mov
cs
dec
push
jp
out
decl
jp
xchg
repz
loop
iret
lahf
mov
add
push
xchg
cmpsl
jg
xlat
daa
xor
xchg
push
xchg
sub
cmp
add
lret
cmpsl
rcrl
lods
jmp
sahf
adc
mov
sarb
js
xchg
test
stc
mov
xor
add
jns
popa
test
insb
jg
insl
inc
push
loop
adc
roll
mov
xchg
jecxz
stos
pop
jnp
xlat
dec
sbb
xchg
xchg
icebp
decb
jg
xor
cmp
dec
hlt
jae
lods
inc
outsl
mov
fsts
add
jnp
cmc
inc
daa
test
addr16
xchg
add
in
mov
ja
cmp
xlat
into
add
sbb
loop
pop
xchg
and
mov
clc
inc
dec
cmp
xchg
enter
sbb
lods
rolb
pop
fcom
mov
pop
stos
movsb
inc
in
mov
enter
out
andl
jle
pusha
mov
loop
cld
scas
xor
xchg
enter
out
stc
ljmp
pop
mov
outsb
pop
lods
sbb
nop
aam
adc
mov
popa
fidivl
aas
std
jno
xlat
xchg
mov
imul
lods
lret
sbb
pop
cmp
mov
out
mov
or
jmp
pop
xorb
jp
insl
pop
pop
xlat
jb
bound
das
icebp
push
mov
std
jge
fcompl
test
sbb
mov
and
out
aaa
push
into
push
jb
jb
xchg
mov
xchg
in
push
push
cmc
xlat
add
addr16
jg
mov
xchg
ret
sub
push
mov
sub
jp
mov
add
or
mov
ss
jo
push
mov
das
sbb
lds
xor
push
aad
inc
inc
mov
cmpl
sbb
shrb
jnp
or
rolb
mov
lea
and
loope
dec
and
dec
pop
ja
stos
and
cmp
daa
in
subl
loop
ljmp
movsl
mov
mov
es
cli
test
cwtl
andl
rcrl
mov
clc
or
jne
sub
and
add
mov
inc
sbb
cmpsl
cmp
dec
jae
sti
mov
jmp
mov
xlat
xor
nop
sub
sbb
jg
push
notl
loope
pop
fisubs
push
jmp
lods
movsb
xchg
add
movsl
lret
scas
lahf
lea
dec
lea
sarl
imul
int
stos
imul
data16
call
stc
lods
andl
and
cltd
xchg
clc
or
dec
aas
pop
ja
js
cmpsb
ret
sbb
stos
pop
or
adcl
pop
mov
out
xchg
lret
cmp
call
mov
jbe
xchg
outsb
hlt
mov
or
jmp
outsl
lock
inc
pop
mov
andb
xlat
jp
push
incl
jnp
mov
push
out
mov
push
rorb
imulb
or
mov
push
mov
popa
sbb
aad
pop
daa
dec
ret
loope
test
lods
mov
xlat
pop
sub
mov
add
and
addr16
outsl
int
mov
addr16
dec
push
xor
out
push
dec
mov
lahf
cmpsl
popl
add
push
pushf
cmpsl
jno
jne
mov
notb
jg
pusha
fists
stos
jns
loopne
add
mov
mov
inc
xlat
cs
fcomps
das
cmp
pop
insb
imul
push
jmp
mov
arpl
out
cmp
push
xchg
fnstenv
jno
xor
bound
push
std
fcompl
xor
sub
insb
mov
pop
insl
xor
lahf
xlat
cmpsb
xchg
xchg
add
ror
loopne
pop
sarb
fldt
sub
push
fdivr
push
xlat
lea
add
adc
in
cs
push
pop
jle
call
inc
lea
fmuls
clc
inc
adc
scas
jecxz
cmpsl
ljmp
jae
rcll
arpl
mov
js
pop
shll
cmp
dec
jns
mov
jmp
mov
jl
loope
mov
or
inc
test
cli
inc
pop
or
arpl
sbb
mov
jne
pusha
addr16
mulb
lods
arpl
push
and
cmp
inc
dec
cmpsb
dec
and
cwtl
ljmp
xchg
and
in
std
cmp
lds
push
ret
xchg
jb
inc
and
lds
popf
pop
iret
cli
mov
jmp
test
fs
int3
lea
inc
jns
decb
rorl
dec
insl
cwtl
addr16
icebp
daa
add
push
in
push
xchg
mov
fnstsw
nop
outsl
jecxz
add
mov
sub
xchg
mov
cld
mov
and
xor
add
out
dec
jbe
cmp
shlb
jge
loope
dec
xchg
mov
or
pop
jnp
cli
xchg
lods
mov
lock
inc
mov
sub
cmp
jp
mov
mov
popf
jecxz
test
sub
sub
sub
fwait
movsb
dec
fmuls
hlt
and
xlat
dec
popf
stc
sub
daa
or
shll
push
and
jmp
aam
fidivrl
mov
in
pop
out
push
push
stos
cmc
leave
push
aad
xlat
cmp
mov
pop
dec
mov
xlat
inc
xor
std
mov
add
insb
mov
bts
add
xlat
dec
insb
inc
dec
or
lds
ret
orl
mov
test
and
xlat
adc
xor
xchg
fbstp
mov
movsw
xlat
xchg
push
jge
test
andb
jno
sbb
xlat
fwait
test
pop
popf
negb
jno
pop
mov
leave
ret
cmp
and
pop
pop
xchg
cmpsb
add
leave
pop
xlat
mov
dec
adc
mov
jp
inc
andb
inc
addr16
cli
mov
mov
fiaddl
xlat
or
adc
lret
mov
sbb
jno
sub
mov
cmp
dec
in
loopne
xbegin
sbb
mov
or
sbb
pop
int
xlat
sbb
notb
cmp
push
scas
dec
sbb
or
or
ds
mov
ds
repz
lea
ret
inc
mov
popa
mov
push
jns
and
mov
ds
xchg
mov
mov
push
out
test
test
mov
lods
add
pop
sub
add
push
adc
inc
shll
pop
mov
fistpl
jo
jg
sbb
jo
popa
jo
mov
ljmp
js
test
mov
es
inc
ret
xchg
xchg
jp
fidivs
adc
cmp
js
hlt
stos
inc
popa
mov
sub
fisubrl
lods
fbstp
into
mov
sti
jne
mov
mov
xor
xchg
std
mov
lea
xor
add
add
adc
movsl
adc
xor
loop
mov
inc
pop
in
lahf
addr16
xchg
xor
dec
inc
dec
iret
and
push
sbb
addr16
fstl
cmp
inc
shlb
mov
push
andb
or
pop
test
add
ss
das
sub
stos
mov
push
test
and
test
xlat
imul
adcl
xchg
addr16
pop
mov
icebp
pop
test
addr16
push
fadds
loop
fs
mov
push
popf
jp
mov
inc
imul
addr16
lea
test
ss
mov
add
xlat
in
sbb
into
negl
or
xor
iret
lods
or
mov
mov
cs
in
pop
mov
or
movsl
gs
mov
dec
stc
pop
sub
push
mov
repz
jmp
insl
daa
pop
negb
fs
mov
cmpsl
insb
enter
xlat
mov
mov
inc
sub
xlat
push
cmp
pop
addr16
cmc
fbld
push
and
loope
into
push
lods
movsb
xor
mov
pop
sub
ja
addr16
rolb
insl
jbe
mov
std
push
xor
aaa
pop
xlat
xor
gs
mov
imul
add
iret
xchg
call
xor
dec
test
dec
pushf
out
dec
std
pusha
push
sti
mov
sbb
jb
push
cli
hlt
dec
xchg
xchg
adc
add
popf
inc
push
pop
jge
aaa
cmp
xlat
cmp
push
pop
or
mov
adc
daa
mov
std
sub
xlat
fwait
mov
loopne
fsubrl
scas
sbb
push
ds
mov
adc
gs
sbb
ror
jl
ret
sarb
jmp
cmc
in
xchg
mov
inc
mov
scas
xor
addr16
xchg
cmc
ret
cmp
mov
pop
mov
and
push
movsb
or
out
or
aam
jecxz
pop
dec
jns
aad
dec
test
and
pop
hlt
push
dec
leave
int3
je
fldenv
clc
sbb
ja
sbb
test
jae
bound
xchg
push
adc
sub
hlt
push
push
jno
jge
insb
mov
test
mull
pusha
cmpsl
adc
clc
rcrl
xor
stos
xor
cld
vpsubusb
mov
sbbl
xchg
out
enter
mov
mov
nop
sahf
lods
jnp
test
js
jmp
jo
add
adc
mov
stos
scas
arpl
xor
gs
mov
pop
cmp
ss
sub
adc
and
call
iret
fs
jmp
fisttpll
loope
cmc
inc
dec
addr16
cmp
or
jmp
mov
sbb
rcll
xchg
xlat
es
sbb
ret
mov
cmp
scas
nop
adc
loopne
ret
xlat
jl
push
cs
cld
pop
mov
mov
xor
push
sbb
adc
xor
call
clc
pushf
adc
push
inc
test
push
rcrb
repnz
ljmp
dec
nop
mov
cmpsl
fsubl
add
outsb
sub
mov
xor
mov
pop
pop
adc
idivb
inc
insb
sbb
stos
divb
cmp
ljmp
sub
mov
imul
leave
xchg
pop
mov
dec
sub
roll
lahf
rorl
push
dec
mov
inc
subl
stc
xchg
jno
lret
xlat
cwtl
bound
xchg
add
adc
pusha
bound
lods
rclb
fwait
addr16
push
pop
incb
in
mov
mov
sbb
repz
sub
stos
inc
insl
pop
scas
xor
dec
bound
mov
insl
insb
mov
xchg
insb
jle
adc
mov
sbb
mov
xlat
mov
test
pop
call
cmpsl
push
cld
xor
mov
xor
pusha
repz
dec
mov
lret
sub
in
xlat
in
adcl
sbb
mov
call
jbe
sub
xchg
mov
addr16
xor
aad
xor
cmp
lret
sbb
dec
sub
jnp
xlat
out
bound
out
dec
cmpsb
test
ja
cmp
jp
and
pop
std
adc
or
sub
and
xchg
push
mov
or
adc
int3
filds
clc
dec
lcall
xchg
les
push
sahf
call
xlat
in
pop
loope
test
push
nop
int
cwtl
sbb
adcl
adc
xor
testl
imul
fwait
fwait
ret
out
push
rcr
dec
sbb
cs
loopne
loop
out
push
mov
dec
xor
jnp
push
xor
xlat
clc
lods
fnstcw
mov
ffreep
mov
push
imul
cli
mov
xor
andl
mov
add
mov
pop
cs
inc
jns
punpckhbw
cltd
mov
pop
lods
cmp
sbb
pop
sub
loopne
les
aas
mov
test
push
loop
push
cmp
lea
push
xor
sub
popa
dec
jge
nop
stc
into
cld
aam
lahf
mov
test
xlat
sbb
scas
popa
pop
dec
cmp
xor
push
push
mov
inc
cmpsl
or
ret
xchg
inc
sarl
cmp
cmc
adc
mov
and
pushf
cmp
imul
aad
push
sub
out
mov
subb
js
push
push
mov
lret
test
bound
xchg
daa
ret
add
sbb
xor
xor
jg
and
inc
aaa
sbb
mov
or
push
inc
addr16
sbb
inc
xchg
aaa
cmc
xor
ds
ss
fidivrs
lods
outsl
mov
bnd
iret
mov
je
aam
stc
loop
insb
xchg
fwait
lock
out
pusha
mov
iret
std
mov
push
push
mov
pop
jge
adc
pop
mov
push
xchg
mov
push
ljmp
mov
iret
movsb
popa
stc
sahf
cmp
and
fs
arpl
decl
daa
xchg
les
out
scas
lods
hlt
push
jbe
xchg
sarl
push
cmpsl
rclb
pushf
rorl
shlb
pop
and
push
push
mov
jnp
cmpsl
push
cmp
ret
test
jmp
inc
and
stos
push
mov
push
lret
mov
push
mov
ljmp
aad
in
out
xchg
into
icebp
je
and
js
jl
sbb
pop
xchg
pop
orw
and
and
leave
or
mov
out
xlat
repnz
dec
cmp
pop
sbb
pop
pop
gs
dec
xchg
push
pop
aam
and
mov
aad
sbb
dec
or
es
jmp
xchg
dec
int
push
xlat
inc
imul
incb
fwait
sub
addr16
fmull
pop
lods
add
loopne
ja
xchg
push
adc
addr16
add
pop
mov
outsb
or
or
test
jb
inc
inc
sahf
fmuls
in
sub
mov
jbe
fldenv
orl
xchg
cmpsl
xlat
je
bound
cmp
fbstp
faddl
pusha
cmp
arpl
bound
xchg
es
xlat
fistl
jnp
push
mov
pop
mov
and
cmpsl
addr16
mov
movsl
xchg
out
adcb
push
mov
jecxz
dec
aad
xorb
jb
loopne
mov
pop
cmp
xlat
cmp
push
jg
repnz
push
mov
sbb
lcall
insb
push
mov
dec
mov
xchg
pop
sbb
cmp
pusha
rcrl
shl
dec
aaa
add
add
cmpsb
fwait
cmpl
adcl
lcall
mov
dec
adc
gs
mov
inc
jmp
adc
stc
shl
fnsave
add
nop
pop
adc
adc
aam
or
std
mov
jo
filds
adc
add
adc
adc
cmp
dec
inc
sti
addr16
jmp
xor
pop
or
xchg
dec
lea
sub
mov
mov
ficoml
xor
mov
aam
add
sbb
mov
mov
hlt
adc
and
bound
pop
insb
push
nop
rorb
adc
sub
adc
lret
push
sub
call
jp
lods
mov
xor
add
icebp
push
pop
dec
dec
cwtl
orb
xchg
and
push
adc
mov
int3
cli
test
add
or
test
mov
or
mov
cs
ror
mov
mov
or
clc
dec
and
xlat
es
push
sbbl
pop
fmul
addr16
xchg
jne
dec
push
cltd
cmp
sbb
jns
lods
mov
inc
fsubr
adc
ja
ret
mov
adc
cli
les
cmp
in
dec
clc
inc
cmp
adc
jno
jo
int
dec
fs
lret
sahf
push
xor
pusha
push
push
xchg
in
les
repnz
adc
cmp
xchg
or
jbe
mov
pushf
jb
pushf
in
fwait
xlat
pop
push
mov
jl
lods
cmpsb
jg
mov
subb
xchg
test
in
data16
cmp
xlat
mov
inc
lds
gs
das
mov
mov
sbb
mulb
inc
pop
insb
xchg
sbb
xor
shrl
jnp
add
mov
mov
xorb
sbb
fldcw
sub
test
jecxz
pop
lods
lds
lcall
cmp
xlat
push
push
enter
stc
xorl
xlat
pop
pop
push
aad
mov
inc
push
addr16
add
test
mov
in
jp
push
xchg
sbb
sbb
test
movsb
mov
stc
sahf
cs
ret
mov
xlat
and
out
mov
sub
push
sub
adc
cli
mov
lcall
fidivl
mov
cmp
mov
and
es
cmp
cmp
mov
xor
mov
in
out
xor
cwtl
and
movsl
dec
add
faddp
xlat
cmp
sub
orl
mov
out
or
rolb
pop
and
ds
lcall
repz
inc
add
or
popf
jp
cmpsl
add
dec
addr16
std
pop
js
mov
mov
jb
mov
push
mov
jae
pop
jg
fwait
jo
add
push
mov
and
mov
cld
mov
inc
jecxz
and
push
cli
jns
pop
repz
cltd
ss
mov
jns
filds
outsb
and
enter
nop
xlat
lods
dec
add
out
add
lods
mov
xchg
cmp
shll
inc
push
sahf
jb
mov
fwait
xchg
add
roll
jge
push
push
mov
mov
leave
cmpsl
jp
flds
jle
test
lret
xlat
out
data16
sub
mov
jbe
jl
jmp
enter
sub
sarl
xor
xor
mov
and
pop
and
ds
movsb
mov
push
ret
pop
idivl
lret
scas
aad
push
jae
setbe
xchg
mov
daa
out
fidivrl
loopne
addr16
push
xlat
inc
scas
js
flds
pop
cmp
xor
mov
mov
cwtl
mov
insl
ror
bound
cmp
aaa
stos
dec
dec
addr16
mov
ret
clc
mov
push
fs
cld
fwait
sub
xchg
sbb
xchg
ljmp
js
dec
push
stc
pop
mov
pop
mov
xor
xor
cmp
and
popf
sub
mov
stos
js
filds
push
mov
rcll
push
jge
addl
xor
pop
popf
push
clc
stc
and
lods
pop
xchg
aaa
in
mov
jge
or
int
out
test
add
scas
gs
rcr
mov
push
clc
and
arpl
in
cmpsl
test
fadds
dec
mov
test
fucomi
std
dec
push
push
shrl
jg
sub
jns
cli
andb
xor
mov
sbb
xor
jne
or
mov
fwait
sub
push
sub
shrl
inc
pop
mov
dec
test
inc
mov
pop
mov
xor
push
insl
mov
push
push
mov
xlat
divb
pop
push
mov
push
sub
and
pop
adc
mov
int3
in
pushf
sub
mov
sbb
fdivrl
sub
mov
bswap
ficoms
dec
int
pushf
or
mov
out
sbb
sahf
aam
addr16
iret
mov
mov
stc
lods
mov
leave
insb
dec
mov
mov
and
adcl
mov
cbtw
xlat
add
and
jno
jnp
xchg
dec
aam
lret
outsl
or
and
pop
scas
push
adc
sbb
outsb
cwtl
mov
push
inc
out
pop
lds
mov
mov
insb
loopne
nop
packsswb
pop
imul
imul
jge
mov
nop
mov
dec
mov
xchg
sub
push
jecxz
into
xchg
mov
mov
sub
pop
movsl
aas
mov
or
cmpsb
pop
imul
hlt
adc
mov
rcr
div
testb
sahf
inc
sbb
test
out
lock
shlb
or
out
jmp
ficompl
das
rolb
into
xchg
cmpsl
shl
mov
and
mov
jnp
out
js
rcrb
mov
js
les
insl
les
sbb
addr16
xor
lea
lods
jl
loope
mov
fdivl
mov
or
push
jmp
clc
addr16
push
sub
push
mov
xlat
das
pop
add
dec
test
xor
fistpll
mov
xor
adc
cmp
cmpsl
in
push
add
dec
mov
fisttps
lcall
out
adc
sbb
mov
fsubs
rcl
add
mov
aad
test
cmpsl
push
pop
mov
mov
push
fwait
cltd
jmp
mov
xor
mov
mov
and
mov
push
lret
scas
test
pop
out
shrl
out
addr16
js
addr16
sub
xor
jno
lret
hlt
outsl
loope
and
cmp
dec
test
inc
ja
xorl
inc
mov
push
loop
cmc
jno
sub
test
and
testl
addr16
jp
sub
lds
movsl
cld
inc
mov
mov
xchg
leave
mov
test
loopne
xlat
sbb
push
cmp
test
loopne
xchg
jb
dec
inc
cmp
jg
add
call
shll
xor
xor
xchg
xchg
xlat
pop
mov
inc
stos
lret
test
push
mov
pop
mov
daa
daa
test
repz
or
cltd
mov
lea
cmp
sbb
push
jo
insl
ja
std
pop
push
mov
in
xchg
cld
sub
and
fidivrs
mov
jns
mov
inc
dec
mov
pusha
nop
outsb
dec
dec
ficoml
fdivs
mov
fiaddl
call
cs
lret
mov
repnz
sbb
int3
or
scas
addr16
ja
test
stc
dec
mov
xchg
inc
sbb
adc
add
fwait
imul
xchg
cltd
negl
mov
fidivs
scas
clc
bound
adc
push
test
and
sar
jo
outsl
mov
popf
fsubp
test
aam
push
dec
add
inc
ror
sbb
mov
sbb
cwtl
pop
fisttps
movsb
mov
mov
cmpb
incl
int3
fisubl
xchg
cmp
inc
dec
loope
sti
enter
pop
dec
mov
mov
add
xchg
or
pop
sbb
mov
mov
sub
addr16
cltd
pop
jl
mov
lahf
jo
imul
insb
data16
mov
xchg
push
cmp
cmc
xchg
or
test
hlt
sbb
push
push
push
fscale
mov
push
subl
pop
xchg
pusha
cs
scas
les
xchg
add
inc
xchg
or
cld
fidivrl
pop
pop
in
mov
dec
clc
mov
mov
addr16
repz
pop
leave
lds
pusha
jge
add
std
sbb
testl
adc
sub
pushf
mov
test
jno
ja
pop
inc
push
fsubrs
add
xlat
add
ret
loop
and
shrb
in
fldcw
rcrl
lock
clc
mov
dec
xlat
dec
in
mov
addr16
hlt
gs
not
sub
mov
dec
pop
or
mov
mov
xchg
mov
pop
test
aam
cwtl
jns
sub
popa
cmpsl
addr16
icebp
add
push
ffreep
jge
mov
ja
lret
mov
mov
addl
ret
push
sub
cs
pop
add
test
xchg
lods
pop
repz
mov
xchg
pop
mov
ljmp
sbb
push
test
xor
mov
arpl
sbb
insl
sub
addr16
sti
fs
mov
push
pop
push
ret
cmp
shrb
mov
daa
mov
add
sub
jl
pushf
mov
lret
mov
mov
push
sub
setb
into
js
xlat
mov
jmp
dec
sub
sbbl
push
stos
mov
pop
jmp
jge
fsubrp
jb
outsl
lret
pop
jo
jbe
mov
cwtl
cmc
inc
mov
test
in
mull
push
mov
jg
or
mov
imul
loop
fsts
xlat
inc
cmp
inc
push
outsl
stos
mov
jmp
and
cmp
movsl
test
add
push
sub
lods
xchg
pop
xchg
jmp
imul
pop
and
adcl
pop
jb
mov
outsl
xchg
addr16
ljmp
mov
sbb
jns
addr16
sbb
ret
xor
pop
mov
icebp
mov
dec
dec
add
repz
sbbl
dec
push
mov
fsubrs
adc
xor
add
mov
hlt
aaa
dec
mov
adc
cmp
out
mov
inc
dec
xor
cmp
rcrb
aad
mov
mov
repz
cld
mov
cmp
or
popf
ret
push
es
cmpsl
rorl
mov
cld
jl
ret
add
or
mov
xchg
cmp
pop
mov
outsl
and
repz
bound
imul
xchg
dec
dec
mov
ds
scas
cld
jecxz
arpl
sbb
cmp
mov
add
push
je
addr16
dec
cmp
lods
scas
push
icebp
aaa
xchg
jne
cmpsb
out
addr16
inc
jg
ss
or
out
or
movsl
inc
call
mov
add
mov
shrl
mov
test
jl
lret
and
pop
mov
out
lahf
add
xor
xorb
out
mov
loop
ljmp
adc
out
aad
jle
inc
lock
imul
xor
adc
into
add
lds
sub
movsl
testl
js
dec
dec
pop
call
mov
test
jae
xor
pop
out
fisubrl
xchg
cmp
jnp
push
add
lea
mov
jecxz
int
and
jno
out
pop
into
lds
cmp
pop
sub
cmpsl
test
scas
inc
xchg
mov
sbb
addl
inc
jmp
in
mov
pop
in
incl
push
xlat
cmp
xor
xchg
adc
lods
sbb
adc
xlat
adcl
les
mov
imul
icebp
scas
test
mov
out
adc
movsb
int
faddp
pop
ss
call
jp
push
lret
sbb
and
daa
mov
and
in
repz
mov
aas
shr
mov
ds
fwait
sar
and
enter
jbe
push
jmp
xchg
inc
sub
rcrl
push
xchg
inc
cmpl
or
inc
cmp
sarb
mov
ss
xchg
pop
leave
movzbl
fistl
js
xchg
addr16
or
cli
sahf
or
inc
mov
iret
ds
dec
cmp
std
jae
cmpsl
orl
mov
sub
out
pop
sbb
mov
repnz
add
aas
imul
test
or
clc
xchg
loope
dec
push
add
sbb
enter
cltd
adc
test
movsl
std
and
jb
movzwl
jae
jmp
mov
ja
mov
mov
lcall
xchg
mov
enter
dec
sahf
mov
stc
ror
sub
mov
jae
xor
inc
aaa
mov
pop
add
sub
mov
push
outsb
out
jl
xchg
xor
push
push
add
mov
and
push
sub
mov
sbb
mov
adc
les
sub
mov
mov
roll
xchg
fisubl
sahf
mov
add
push
mov
lcall
jo
movsb
mov
inc
outsb
ret
mov
jnp
fcomps
arpl
aaa
inc
lahf
adc
sbb
ret
sbb
mov
xchg
test
lods
loope
in
test
popf
adc
add
cmp
iret
push
push
mov
ds
adc
inc
add
aas
mov
into
jbe
mov
adc
or
jg
push
ss
rcrl
mov
dec
mov
int
scas
lret
incl
xlat
sbb
dec
rcrb
pop
fisttpl
adc
xchg
sub
and
popa
sbb
mov
addb
cmpsl
icebp
in
cld
in
fisttpll
cmpsl
mov
test
mov
jge
fisttpll
push
push
mov
or
mov
jo
ss
stos
enter
int3
mov
xor
push
and
iret
inc
and
mov
sbb
test
les
stc
mov
roll
or
xchg
les
xchg
scas
jo
cmpsl
or
popa
jecxz
xlat
push
inc
or
add
jno
pop
repz
dec
mov
mov
pop
mov
ret
xchg
loope
xlat
out
aam
fdivrs
outsb
mov
add
stos
outsl
push
nop
sub
sub
inc
or
mov
fs
cmpsl
lods
mov
jo
clc
add
pop
shlb
shlb
mov
mov
xlat
test
out
enter
je
xchg
xchg
pusha
loope
outsb
xchg
xorl
shll
and
out
xor
xlat
iret
mov
pop
bound
in
xor
je
out
addr16
pop
mov
mov
int
or
pusha
push
shll
xchg
xchg
sub
notl
int
mov
pop
scas
xor
push
cmp
pop
enter
aam
dec
jns
aam
mov
fildll
adc
mov
mov
xor
mov
pop
out
testb
and
jb
mov
hlt
hlt
add
shl
imul
adc
divb
dec
in
dec
jle
cmp
hlt
xchg
adc
sub
hlt
pop
push
in
notb
fcmovne
jp
out
sub
std
adc
pop
mov
or
test
cmp
mov
mov
xchg
daa
lret
push
inc
addr16
insl
add
mov
jmp
xchg
out
fstps
jmp
jo
mov
xor
clc
ljmp
xchg
push
mov
ffreep
aaa
aam
ret
jl
jecxz
pop
inc
push
negl
in
sti
cld
iret
out
or
sbb
mov
stos
verr
fidivrl
adc
mov
pop
stc
fisubrl
rclb
pop
xor
aas
or
jbe
into
int
xadd
xlat
cmp
push
daa
xor
lea
add
sub
daa
xorl
xor
int3
in
test
cltd
mov
pop
pop
adc
stc
sub
pusha
cmp
push
pop
lahf
sub
mov
xlat
mov
xor
and
lret
push
sub
and
in
adc
sbb
jecxz
adc
repz
aad
mov
loopne
jmp
shl
sub
lret
mov
or
mov
scas
xchg
xlat
or
cmpsl
xchg
mov
out
pop
pop
and
addr16
jecxz
dec
mov
std
leave
push
cmc
fldenv
jno
in
cmp
test
jmp
push
lret
inc
shll
push
pop
out
rolb
cmp
inc
enter
rcrl
cmpsl
imul
imul
push
iret
adc
cmp
setae
mov
xor
nop
inc
mov
adc
jl
mov
or
xor
addr16
dec
sbb
scas
movsb
out
icebp
inc
lock
insb
jns
addr16
in
inc
xor
cli
and
mov
xor
xor
xor
mov
jbe
mov
daa
pop
pop
fstp
xlat
jge
cmp
test
shl
test
push
cltd
push
jb
and
les
cmpsl
in
out
roll
in
sub
mov
ficoms
push
pop
mov
sbbb
mov
xchg
mov
jbe
jb
mov
fs
ficomps
int3
into
pop
aad
lahf
call
push
pop
mov
jecxz
loopne
jb
pop
inc
das
inc
jnp
outsl
imul
push
mov
inc
xor
inc
call
cmp
aaa
push
imul
inc
jmp
loopne
dec
aad
call
ljmp
movsb
pop
jne
push
fistl
sub
dec
aad
subb
loope
and
inc
in
and
out
push
cli
mov
notl
loopne
je
int
jae
mov
pop
mov
xor
stos
jmp
jo
loope
pop
outsl
cmp
cltd
dec
lds
cmpb
and
test
sub
inc
mov
xchg
inc
sbb
fisttps
jns
js
sub
int3
in
mulb
popf
mov
mov
aaa
jmp
sarl
divl
mov
das
or
bound
out
iret
or
jge
xchg
es
xchg
xor
dec
int
mov
test
loope
jnp
es
cmp
jmp
lods
mov
lds
ret
pop
decl
push
fsubrs
xchg
xchg
cmp
sbb
fsubrl
imul
xor
jl
push
leave
roll
push
pop
jle
xchg
ret
mov
mov
jnp
das
mov
push
stos
cmpsb
xchg
mov
in
test
sbb
push
jns
pop
call
loope
call
and
cmp
add
sub
ror
sub
push
push
mov
or
push
push
mov
sbb
push
or
insl
out
stos
adc
repnz
cwtl
fistps
lahf
or
xor
mov
jmp
cltd
jg
aas
xor
jno
daa
sub
and
push
jbe
pop
popf
mov
aad
pop
mov
les
mov
push
in
fmuls
xor
iret
lds
mov
xchg
aas
add
xchg
std
dec
mov
addr16
and
dec
mov
mov
mov
out
sub
jle
and
pushf
test
rorb
mov
mov
and
pop
cmp
jl
into
imul
loope
out
push
rcll
add
das
scas
cwtl
xlat
clc
stc
arpl
sbb
push
mov
xorl
sub
cmp
fimuls
rolb
rcll
imul
sar
cli
pop
popl
je
aas
pop
jg
xlat
pop
cmpsb
sar
cltd
rclb
sbb
fs
fldt
popf
xchg
jno
loopne
scas
jnp
dec
dec
mov
fisttps
and
loop
mov
sbb
cmp
dec
inc
fcmovb
shll
xlat
out
iret
sub
adc
rolb
pusha
xlat
sahf
mov
jo
in
shll
adc
int
inc
xchg
jge
sbb
mov
jmp
cli
dec
es
jb
scas
mov
shll
inc
add
inc
push
cmp
lds
arpl
mov
je
push
lahf
sbb
stc
xchg
xlat
mov
outsb
jno
in
mov
mov
jp
mov
jp
sub
or
and
fisubrs
rcl
leave
imul
rol
pushf
and
pop
xlat
cmp
xlat
test
divl
mov
dec
inc
mov
loopne
addb
scas
sbbl
das
xchg
mov
nop
lds
xlat
mov
loop
test
lcall
xor
and
pop
outsb
mov
jbe
insl
add
popf
popa
pop
nop
push
jae
and
mov
scas
lea
ljmp
sub
int3
or
and
fsubs
mov
fs
and
test
mov
lret
sub
popa
in
mov
jecxz
adc
push
cmp
fsts
enter
push
and
xor
fisubs
mov
pushw
ja
sahf
mov
cmp
ret
xchg
jb
sbb
dec
pop
lock
xchg
xor
mov
dec
adc
pushf
enter
inc
cmpsb
leave
ret
mov
mov
pop
scas
xchg
daa
movsl
addr16
mov
shr
call
mov
test
xor
pop
xor
repnz
cmp
lods
pop
js
or
cmp
pop
fwait
jle
arpl
cs
add
pop
shrl
mov
mov
pop
mov
xchg
sub
insb
mov
mov
adc
dec
jg
incl
mov
cwtl
std
mov
mov
imul
sub
inc
int
fisubs
std
sub
xchg
fwait
je
push
push
pop
stc
push
xchg
in
out
mov
jecxz
push
mov
sahf
int
fwait
cli
mov
pop
mov
dec
ljmp
aaa
push
leave
jnp
inc
cmpsl
cmp
mov
sub
inc
mov
fs
jne
incl
idivl
dec
xchg
cmpsb
jnp
jo
aas
xlat
jnp
out
sar
shll
pushf
hlt
imul
repz
int3
aas
imul
stos
arpl
movsl
test
dec
daa
jp
xor
jge
sbb
rol
cltd
xlat
insb
and
cmpsl
gs
and
rorb
fcom
cmp
dec
mov
mov
repz
jns
les
mov
push
xchg
add
cmp
test
xor
leave
cmpsl
fisubs
lea
inc
shr
adcl
frstor
lret
xlat
daa
int3
rcl
xlat
jg
sub
out
dec
ss
inc
pop
xchg
test
sbb
movsb
mov
or
jns
ret
add
jae
and
enter
insb
in
pop
aad
inc
jne
lock
out
and
loopnew
mov
notb
mov
mov
pop
dec
iret
or
mov
jb
or
or
iret
adc
jmp
cmp
jecxz
clc
mov
mov
lahf
dec
push
addr16
pushf
jae
or
mov
xchg
or
movsl
inc
rorl
jmp
lret
xlat
and
and
adc
mov
dec
stc
imul
test
sbb
push
push
xor
mov
jo
lock
fcomip
cmp
xchg
stos
lods
adc
sbbl
xchg
push
loope
sub
scas
pushf
sbb
test
andb
cs
adc
and
mov
neg
or
xlat
and
ret
stc
addl
cli
xlat
cmc
or
jg
call
cmc
sub
push
vpackuswb
lcall
dec
pop
mov
inc
mov
dec
addr16
clc
mov
xor
int3
shl
lods
data16
jo
pusha
imul
push
sub
mov
aam
mov
in
nop
adc
icebp
jmp
mov
mov
shrb
int
sbb
push
mov
lret
hlt
sub
dec
sub
addr16
dec
scas
nop
in
lods
rcrb
mov
push
imul
clc
addr16
ret
xchg
lds
dec
lret
xlat
dec
sarb
cwtl
adc
mov
xor
ret
int
or
lods
shr
xchg
fcomip
addr16
popa
or
xor
cmp
mov
or
mulb
xchg
movsb
dec
stc
pop
add
mov
ret
gs
jge
addr16
stos
sahf
clc
mov
fcom
dec
enter
xlat
mov
pop
test
push
push
cmpb
adc
cmc
and
cmp
cmc
push
push
mov
xorl
outsl
cmp
push
inc
cwtl
icebp
and
mov
mov
jbe
sub
andl
add
xor
test
icebp
cwtl
mov
sbb
filds
cwtl
iret
aam
mov
lea
bound
xchg
mov
push
mov
hlt
enter
test
addr16
shlb
or
and
push
fwait
xor
or
icebp
sub
and
repz
inc
mov
mov
push
pop
mov
shll
mov
insl
imul
lret
mov
sti
inc
test
dec
int3
xor
shll
xor
lret
jp
pop
test
scas
popa
xlat
push
sub
cmpsb
mov
dec
jno
out
fld
inc
jne
test
cmp
ficoms
shrb
dec
popf
out
or
fisubrs
les
cmpsb
mov
inc
mov
fucomp
std
pop
xor
jle
scas
cmp
lods
lret
cmp
icebp
test
xchg
cmc
dec
jb
cmpsl
imul
pop
jge
test
push
mov
mov
add
jno
push
testb
push
orl
pop
test
lahf
cmp
jb
mov
push
mov
lock
in
sbb
xlat
rcrl
lret
test
fdivs
adc
loop
cs
mov
or
xchg
mov
and
xchg
pop
pop
inc
push
enter
mov
sbb
stos
shlb
pop
aaa
aaa
stc
mov
inc
jge
push
out
mov
xlat
dec
int3
pop
inc
adc
lcall
stc
lahf
rcl
imul
jns
pushf
push
inc
hlt
pop
fistps
push
pop
test
addr16
cltd
mov
mov
mov
xchg
in
sbb
jmp
jge
std
or
cmp
push
mov
lcall
xor
addr16
stos
cmpsl
and
fwait
inc
mov
out
idivb
mov
leave
cli
xlat
ss
push
cmpl
popf
enter
js
loop
push
imul
addr16
aaa
lods
mov
add
xor
popf
addr16
icebp
nop
lcall
xchg
mov
rcll
daa
sti
rol
mov
imulb
fistpl
mov
out
add
cmc
xor
stc
mov
xor
test
adc
jb
out
in
fmull
fsubrl
inc
inc
mov
mov
xchg
add
xor
mov
lds
sub
jnp
cwtl
aam
adc
cmp
sti
push
aaa
out
rorl
loop
dec
insb
mov
test
daa
xchg
shrb
loope
mov
out
dec
mov
jne
stos
sub
pop
cmp
stc
mov
adc
decb
addr16
mov
cltd
mov
cmp
cmp
xlat
push
bound
add
adc
into
ret
push
xchg
adc
xlat
sbb
mov
or
adc
es
xlat
mov
jae
xlat
mov
cltd
js
mov
jbe
insb
xchg
int3
xor
push
cmp
and
daa
stos
mov
sbb
sbb
cmp
mov
mov
mov
imul
mov
dec
cmc
pop
push
and
sbbb
adcb
mov
mov
fbld
roll
pushf
cmpsl
aad
test
mov
dec
add
mov
jb
mov
sbb
add
pop
add
lock
and
mov
aaa
cmpl
push
popf
scas
inc
and
pop
pop
in
pop
data16
out
insb
addr16
cld
or
mov
mov
stos
dec
xlat
in
xchg
and
mov
lahf
orl
xor
push
ret
xchg
aam
jb
movsb
cwtl
addr16
jecxz
pusha
inc
shlb
out
adc
sarb
pop
icebp
sbb
les
adc
js
xlat
sub
jno
arpl
dec
cmp
jne
pop
loope
sbb
mov
sub
lods
addr16
mov
adc
outsl
ss
out
xchg
cmp
jbe
push
xchg
loopne
dec
push
push
in
lods
data16
push
mov
add
push
fwait
in
xchg
imul
popa
push
adc
adc
testl
test
mov
stos
push
xor
loopne
das
fs
fwait
int3
test
arpl
js
popa
xchg
xchg
mov
mov
xor
int
sarb
out
out
xchg
and
daa
jmp
jb
lcall
adc
inc
dec
js
notb
inc
dec
dec
xchg
pop
pop
rorl
stc
dec
mov
loopne
ds
bnd
sbb
les
daa
mov
push
and
lret
dec
add
cmp
push
outsl
and
pusha
mov
insb
popf
jp
dec
scas
pushf
outsl
pop
mov
mov
pop
cmp
xor
int
lcall
movlhps
sbb
xor
andl
dec
jecxz
rorb
cmp
sub
jp
cmp
sbb
mov
and
jecxz
cld
cmp
lret
push
inc
je
pop
mov
lods
jb
adc
and
fidivl
aad
enter
stos
cwtl
daa
push
mov
cmp
cld
sbb
and
fcomps
xchg
xchg
sub
mov
out
mov
sbbb
and
addr16
mov
pop
mov
ljmp
shll
mov
xor
mov
and
and
dec
add
out
sbb
out
adc
pop
imul
out
jmp
stc
inc
cli
aam
in
lret
js
ja
or
fs
xchg
xchg
inc
or
sub
jle
leave
fisubrl
xor
cli
je
adc
fnstsw
mov
xor
in
ljmp
xchg
push
icebp
arpl
xlat
sbb
jp
sub
pushl
incl
pop
js
cmpsl
or
ja
out
xchg
pop
shrb
cmp
mov
jl
mov
or
fmuls
cwtl
ret
ficompl
dec
xlat
sbb
mov
orl
iret
sti
jp
and
mov
js
and
popa
sub
jl
push
insb
addr16
cli
scas
std
fsubl
add
mov
mov
adc
pop
cmc
push
xlat
stc
cmp
jecxz
loopne
mov
push
in
mov
mov
add
imul
roll
jge
mov
adc
ja
mov
xorl
testb
mov
pop
mov
mov
cs
push
pusha
push
sti
pop
inc
leave
pop
sub
fnstsw
mov
and
decl
ret
addr16
mov
lcall
pop
outsl
scas
jge
mov
cmpsl
dec
mov
dec
insl
adc
jbe
imul
ljmp
inc
fadds
xor
nop
addr16
mov
push
inc
out
mov
push
cmp
add
xor
out
outsb
mov
xor
mov
shr
lods
sbb
vshufpd
aad
test
or
jecxz
sbb
adc
cmp
or
inc
int3
cmpsb
push
addr16
jno
loop
leave
cwtl
push
out
hlt
testl
fsubs
gs
sbb
inc
lea
movsl
sub
inc
into
enter
add
lds
lds
sub
adc
clc
rcrl
out
jne
jne
push
xchg
popf
pop
mov
fwait
xlat
sbb
or
ljmp
orb
push
dec
adc
sub
or
int
test
xor
popf
inc
cmp
jmp
hlt
sarb
in
mov
fistps
inc
jo
cwtl
loope
dec
pop
jg
or
jmp
cltd
in
inc
aam
sti
sbbl
dec
lods
inc
clc
loopne
lahf
mov
push
mov
add
scas
imul
sbb
jmp
addr16
pop
and
mov
ficompl
imul
push
leave
xchg
ljmp
mov
test
sbb
mov
xor
fcmovb
cmp
mov
lea
arpl
mov
iret
push
clc
clc
cs
mov
mov
imull
pop
ja
push
mov
and
jns
adc
je
mov
cli
add
in
out
jnp
out
pop
lea
sub
add
adc
addr16
cmp
lds
int3
lods
dec
push
mov
loopne
rorb
fiaddl
lds
icebp
lahf
aaa
add
jg
fwait
out
in
bound
xlat
sbbb
fcomps
xor
mov
lret
dec
out
and
sub
jo
incl
sbbl
sbb
pop
lods
sahf
jae
into
inc
mov
mov
pop
cltd
xchg
out
lds
inc
xchg
cmpsb
xchg
dec
nop
and
push
cmp
or
dec
mov
mov
addr16
rcrb
leave
pop
std
xlat
push
sbb
nop
and
cmpsb
push
jle
addr16
inc
mov
ljmp
test
sti
subb
pop
cmp
jo
aaa
jmp
test
fs
cmp
imul
adcb
mov
add
jg
dec
stos
sbb
sbb
mov
adc
roll
mov
mov
lea
mov
add
mov
dec
jae
mov
aad
out
adc
pop
fcmovbe
jmp
rolb
jecxz
pop
push
sbbb
test
std
scas
pusha
aas
xchg
mov
daa
inc
int
push
outsl
cmp
xlat
aas
or
ret
cmp
mov
mov
mov
mov
fdivr
nop
xlat
aad
lea
fmulp
mov
sbb
std
loope
xor
pop
mov
sub
lock
shlb
sahf
adc
adc
xchg
add
sbb
push
mov
xchg
imull
clc
sbbl
test
sub
scas
push
pop
add
jecxz
add
lret
sub
setae
mov
leave
ss
xlat
shll
iret
mov
jmp
or
lret
add
movsl
aad
jnp
xchg
test
mov
stos
cmp
push
and
ljmp
dec
ret
enter
lods
mov
cs
adc
push
rorb
fdivl
repz
sbb
loope
in
fstl
roll
mov
sbb
mov
lret
push
out
es
addl
in
addb
or
xor
cmpsl
pusha
jns
add
pop
adc
sub
movsl
sub
nop
js
test
lods
out
inc
icebp
outsb
sbb
sub
enter
pop
dec
xchg
pop
popf
loop
cmpb
test
and
cld
dec
jge
or
in
addr16
pop
dec
pop
sbb
mov
sbb
stos
shrl
dec
xlat
lods
out
addr16
mov
test
adc
movsl
js
xlat
dec
pop
imul
lods
sti
andl
dec
sarb
pop
jns
push
xlat
jo
sbb
shlb
imul
add
mov
xchg
adc
pop
loop
mov
xlat
insb
clc
ret
jbe
adc
push
pop
mov
pop
cmpsl
mov
sbb
mov
enter
in
pop
addr16
cmpsb
test
rcll
scas
jp
or
push
cld
xor
xor
fwait
sub
sub
jne
clc
inc
mov
or
xlat
or
mov
bnd
mov
mov
sbb
dec
mov
jmp
cmp
jmp
jle
cltd
arpl
sub
mov
xchg
jle
popf
scas
push
jno
in
xor
sub
sub
out
fiaddl
mov
dec
sbb
jmp
divb
loope
mov
lret
jnp
jp
cmpsl
div
add
push
imul
ret
ljmp
in
in
pusha
mov
jbe
outsl
pop
dec
xorb
mov
arpl
imul
inc
push
in
xlat
dec
enter
lcall
pop
or
stos
add
cltd
jno
in
in
leave
cmovl
push
aam
push
sub
and
push
aam
push
xchg
jb
dec
sarl
ja
cmp
or
dec
in
sbb
xchg
jne
mov
movsb
mov
cmp
popa
mov
xchg
cltd
push
add
rcrb
add
sub
popf
push
mov
fs
cwtl
fwait
hlt
dec
xchg
icebp
popf
and
mov
mov
mov
pushf
add
outsl
dec
scas
jp
movsl
mov
cmp
push
leave
xchg
sub
fnstsw
dec
mov
lods
xor
mov
insl
inc
sub
packuswb
call
jecxz
push
loop
stos
inc
mov
loop
fdiv
mov
xor
gs
cwtl
arpl
and
inc
out
xchg
mov
or
sbb
sbb
lahf
jecxz
ret
shl
pop
test
addr16
fsubrs
fldt
sbb
xchg
and
int3
xchg
and
push
add
xlat
in
jb
insl
jne
and
sub
je
dec
jp
push
jno
mov
mov
lock
std
jb
fs
pop
mov
imul
or
xlat
xor
jae
cmc
add
xchg
xlat
shlb
sbb
lods
or
lret
cli
mov
je
mov
mov
push
in
in
add
xor
aad
andb
insb
mov
cwtl
xrelease
inc
mov
sub
inc
mov
fsubrl
data16
insl
inc
notb
aam
mov
mov
dec
cmp
pusha
sub
push
ljmp
sub
cmpl
in
lds
cs
lret
sub
and
sub
cld
mov
les
or
jecxz
xor
cmpsl
jle
test
push
lods
add
pop
sbb
aam
adc
and
and
mov
ja
testb
mov
insl
daa
or
mov
push
sbb
push
ja
in
jns
jb
rcrl
add
aaa
lods
orb
mov
push
fwait
lods
ret
mov
rclb
jno
inc
mov
rcll
dec
sub
out
mov
movsb
mov
cs
mov
sbb
push
mov
adc
mov
sbb
hlt
call
into
xlat
cmpsl
mov
stc
pusha
xchg
scas
repnz
jmp
lods
push
jmp
dec
and
mov
mov
push
push
out
add
push
xchg
daa
in
mov
dec
mov
mov
int3
cmp
addr16
es
arpl
aam
out
jne
sbb
push
pop
lcall
mov
and
insl
mov
insl
jb
mov
pushf
loope
jnp
scas
mov
js
test
scas
sub
mov
cwtl
xchg
mov
outsl
mov
mov
and
loopne
or
cmpsl
test
mov
daa
push
ret
aaa
lods
jmp
call
adc
inc
inc
mov
test
or
pop
imulb
mov
leave
jno
jmp
sbb
bound
xor
mov
jb
and
ret
fisubs
cmpsl
xchg
or
mov
mov
mul
pop
sub
out
or
jl
addr16
mov
stos
shrl
and
ret
add
addr16
aaa
mov
push
or
push
mov
imul
loop
in
sbb
sbb
jmp
add
lds
cmc
dec
loop
cld
loope
xchg
xor
pop
mov
jmp
lcall
dec
int3
push
and
jno
test
push
xchg
mov
sbb
addb
lock
xlat
cmp
dec
sbb
mov
jbe
lea
sbb
jmp
inc
lods
mov
out
lret
fsubr
ss
sbb
addr16
push
push
fwait
fwait
add
and
das
and
aaa
iret
pop
mov
inc
fadds
push
cmc
xchg
es
jl
add
push
jbe
push
into
sti
cmpl
shrl
inc
xlat
in
sahf
jb
lahf
shlb
push
icebp
push
adc
addr16
or
fmulp
fcomps
cmc
mov
pop
mov
xlat
and
idiv
mov
lcall
shll
loopne
incl
mov
fimull
mov
sbb
mov
pop
addl
daa
aam
sbb
jns
adc
inc
loop
pop
cmpsb
jae
mov
xor
lret
sbbb
push
push
or
pop
push
mov
cmp
push
mov
jno
ret
cmpsl
push
ss
in
dec
ljmp
cmpsb
mov
dec
cwtl
cmpsl
sbb
sbb
call
mov
pusha
xchg
xchg
ds
and
mov
xor
bswap
add
mov
push
in
out
pusha
xchg
sub
in
add
ss
addr16
dec
mov
into
loop
mov
pop
mov
stos
push
inc
enter
mov
push
adc
scas
aaa
xlat
ret
or
fildll
add
lods
mov
inc
xchg
xlat
hlt
cs
cmp
in
das
xchg
adc
lds
jbe
xlat
push
mov
std
cmpl
mov
int
pop
fsubrp
test
mov
rcll
xchg
push
cltd
adc
fwait
inc
jb
push
mov
out
jae
cmp
dec
inc
addr16
adc
test
fdivl
mov
mov
xlat
mov
aas
dec
mov
push
in
xchg
pop
data16
xchg
aaa
pop
xchg
addr16
or
and
fs
ds
xlat
dec
mov
sahf
dec
cwtl
fsubs
movsl
aam
imul
sbb
sub
rorb
sbb
xlat
jnp
test
ds
add
push
pop
dec
dec
or
iret
jb
dec
push
mov
sub
or
mov
das
pushf
lds
add
inc
testl
loop
push
push
mov
stc
jnp
shll
jo
xor
ss
xchg
imul
xor
xor
push
sub
dec
mov
xor
daa
push
cmpsb
pop
inc
xor
pop
test
addr16
cmp
movsl
lods
imul
jbe
push
xlat
loop
cwtl
jecxz
leave
fisubrs
pushf
test
jg
testl
js
aas
ret
out
insb
mov
mov
je
xlat
int
decl
xchg
ret
inc
stos
orb
ret
jo
call
xor
mov
in
sti
fwait
aam
les
xor
shlb
dec
mov
mov
aad
sbb
pusha
stos
xor
shrb
and
mov
push
inc
pusha
and
mov
sti
cld
jae
and
mul
inc
cmp
or
fs
pop
pop
push
scas
js
mov
pop
sahf
addr16
dec
popa
test
jmp
pop
push
dec
xlat
daa
pop
or
sarl
xor
scas
stc
test
pop
or
xlat
sbb
fwait
jecxz
lea
aam
xchg
std
repz
mov
add
mov
jg
cli
sti
maxps
xlat
mov
arpl
out
pop
xchg
in
pop
xlat
push
loope
mov
mov
addr16
xchg
mov
dec
mov
aas
inc
insl
iret
addr16
push
test
shl
fisubl
push
or
pshufw
pop
imul
sbb
push
xor
cwtl
or
sub
int
fiadds
loope
xchg
push
mov
dec
icebp
xor
jbe
lcall
xor
mov
sub
xlat
push
lret
adc
cltd
dec
push
rolb
jbe
sbb
addr16
mov
cli
shll
push
xchg
outsb
xlat
sbb
sub
mov
add
addr16
mov
sub
cmp
pop
and
mov
pushf
enter
fs
js
pop
push
lret
and
loopne
nop
push
push
into
jle
daa
push
mov
call
ret
add
shlb
and
mov
dec
insb
xor
cli
data16
xchg
xchg
cmp
sbb
jb
arpl
frstor
xor
xor
jns
push
outsl
mov
mov
fstpl
cmp
jg
xchg
add
aam
outsl
out
push
cwtl
push
jnp
jns
stos
les
int3
lods
cmp
push
cmc
xlat
mov
adc
test
ja
jp
jns
and
dec
stc
mov
mov
fadd
psubusw
jmp
jb
js
xchg
jne
cmp
push
pop
outsl
xor
inc
xor
mov
adc
loopne
fwait
aad
andb
in
sti
xchg
mov
iret
out
clc
pop
rcr
pop
in
mov
pop
cld
aam
push
prefetcht0
and
mov
mulb
in
scas
sti
mov
dec
ds
dec
mov
fidivl
add
out
rolb
pop
cmpsb
fsubl
mov
fidivs
lods
fldenv
or
cmp
lahf
cmp
mov
xor
rorl
pop
shll
xchg
dec
jae
xchg
mov
or
xor
push
aad
aam
dec
arpl
dec
sahf
lcall
dec
inc
out
xchg
imul
out
dec
imul
cmp
ja
lods
mov
gs
xchg
shrb
mov
push
cmp
mov
pusha
dec
xor
sbb
cmpsl
fists
inc
mov
movsl
gs
scas
push
pusha
mov
shrl
add
and
xor
mov
jb
add
ret
dec
xchg
mov
add
mov
movsb
cmp
push
in
jecxz
cli
mov
push
push
ljmp
xor
lahf
mov
data16
addr16
pop
rorb
xor
xlat
pop
jge
xbegin
push
and
enter
je
jl
addr16
jae
xlat
lock
mov
in
jnp
jno
out
mov
cmp
xor
pop
lahf
lret
xor
add
lret
gs
mov
xchg
jbe
xchg
pusha
leave
xlat
pushf
cmp
xor
mov
inc
pop
sbb
adc
outsl
cli
js
shlb
clc
pop
push
test
sub
test
popa
aad
adcb
pop
mov
fiaddl
addr16
cltd
movsb
es
divb
xor
sub
imul
bound
cmc
and
mov
sub
shll
addr16
jecxz
push
imul
in
adc
mov
popf
cmc
mov
or
jb
testl
mov
mov
mov
rolb
testb
rolb
in
popf
hlt
add
cmc
out
push
div
addr16
mov
in
sahf
inc
cmp
push
cwtl
nop
imul
adc
xlat
andps
push
ljmp
movsl
stos
cmpsl
pusha
daa
movsl
sub
aaa
inc
testb
add
aad
pop
js
dec
inc
adc
pop
push
scas
inc
dec
in
mov
ljmp
divb
mov
mov
repz
or
jae
sbb
dec
repnz
mov
lea
aaa
setg
test
adc
ja
mov
add
dec
inc
sbb
aas
mov
cmp
loop
mov
into
mov
js
jne
imul
ret
or
xchg
xchg
mov
loop
add
or
push
sub
popf
aaa
movsb
pop
rcr
push
andl
adc
push
cmp
mov
inc
xlat
sub
push
push
inc
aas
jg
push
xlat
mov
ror
xlat
xchg
in
dec
lods
jg
inc
adcb
push
out
xlat
test
push
mov
aam
sbb
fidivs
adc
jbe
rcll
scas
insl
pop
divb
aas
enter
stc
je
testb
fisttpll
xchg
pop
xlat
fsubl
push
rorl
mov
pop
mov
cltd
pop
outsl
push
stc
jmp
pop
hlt
insw
lahf
addr16
mov
inc
dec
inc
or
xor
sarb
mov
adc
add
inc
dec
push
imul
inc
sub
or
andb
jmp
mov
in
mov
sti
in
scas
lret
pop
inc
shrl
sarl
les
mov
sti
mov
adc
pop
push
ficomps
mov
cmpsb
sbb
xlat
mul
mov
sbb
fwait
cmc
pop
mov
movsl
rcl
sub
and
out
xlat
pop
mov
pop
bound
mov
inc
sub
sbb
mov
sbb
addr16
punpckhwd
mov
pop
movsb
cmp
lds
cmp
mov
jnp
xlat
and
push
or
enter
enter
bound
orl
xchg
adc
mov
push
mov
ret
aam
jp
cli
pop
ljmp
adc
mov
insb
mov
clc
cmp
push
xor
jbe
into
and
add
cmpsl
outsl
scas
add
imul
cmpb
lea
hlt
je
xchg
mov
xlat
out
and
rcll
in
sbb
cmpl
fistl
mov
stc
fldt
lods
xor
xor
mov
lock
dec
push
sahf
mov
sub
lret
outsb
ss
lahf
push
ljmp
and
mov
daa
cmc
push
lcall
or
or
or
mov
push
sarb
xlat
dec
lea
inc
dec
push
mov
shrl
adc
cmpsb
push
adc
adc
pop
push
test
sub
dec
popf
data16
sti
xchg
mov
test
js
jnp
xchg
sub
pop
sbb
pop
sub
adc
sbb
mov
aas
sahf
neg
aad
add
mov
mov
xchg
icebp
int
inc
fcoms
push
popf
in
fistpl
xchg
xchg
sub
mov
sahf
dec
pop
xchg
movsb
xlat
aam
cmovp
jle
and
rolb
shrd
sub
adc
test
cli
in
cmpsb
arpl
lret
jo
mov
icebp
dec
shll
in
mov
jle
mov
aaa
enter
insl
inc
gs
pop
mov
loope
pop
test
dec
pushf
or
add
adc
test
or
mov
call
xlat
repz
mov
mov
sub
xlat
iret
cmpsl
ds
mov
inc
fimuls
cltd
neg
addr16
jns
pop
xchg
lods
out
mov
push
test
mov
inc
shll
das
or
sub
aas
mov
les
shr
cmp
pop
inc
cmp
mov
push
jmp
lds
fnstenv
xchg
dec
test
lods
jns
test
clc
rcrl
dec
ja
not
sbb
cmpsl
mov
cmp
push
mov
mov
or
jbe
adc
dec
fists
into
shll
dec
mov
or
xor
int
inc
setno
jl
cmp
xor
mov
and
jo
aad
xchg
pop
mov
jno
neg
mov
mov
in
cli
aam
repnz
dec
lret
xor
mov
mov
fwait
xor
repz
mov
add
inc
push
fwait
iret
ret
jns
stos
addr16
push
or
mov
pop
andb
addr16
mov
bound
mov
mov
loop
cmp
scas
in
adc
add
and
cmpl
cs
xor
faddl
fcomip
and
pop
popf
pop
leave
fnstcw
nop
js
loope
dec
bound
jns
push
aas
inc
dec
dec
inc
loope
insl
mov
xchg
inc
inc
cmp
cltd
mov
inc
cwtl
xor
cmp
int3
add
add
test
mov
and
lret
dec
xchg
mov
call
or
les
in
aaa
je
pop
add
sahf
dec
mov
aad
fiaddl
rcrb
jae
and
pop
aam
jl
nop
xor
push
sbb
mov
xchg
idiv
push
repnz
sub
dec
int
dec
mov
mov
cmp
inc
dec
out
jns
adc
and
mov
icebp
add
movsb
cmp
pop
ljmp
sub
imul
push
mov
leave
andl
les
push
push
orl
sbb
mov
jl
inc
fstps
cmc
test
lret
dec
mov
pusha
leave
inc
cmp
jns
shll
pop
xlat
sbb
sbb
push
mov
nop
mov
addr16
imulb
add
jle
lods
out
sbb
in
jo
mov
mov
daa
pop
lea
mov
das
push
sahf
js
xlat
inc
out
lods
push
pop
shll
fwait
jg
ss
lcall
sub
sarl
dec
sbb
jmp
mov
aam
icebp
push
cwtl
adc
mov
xor
pop
std
test
add
arpl
add
add
push
les
xchg
lds
fmuls
pop
flds
lret
add
xchg
mov
xorl
xor
or
mov
mov
insl
out
mov
mov
xor
sbb
roll
sbb
push
cmpl
dec
rclb
cmp
push
stos
data16
cmp
cld
cmpsl
adc
jmp
jnp
mov
pop
adc
cltd
pop
mov
pusha
cs
fmuls
fcomp
outsl
jg
mov
je
sub
push
jae
sbb
xlat
addr16
arpl
dec
mov
lret
xchg
jl
mov
arpl
mov
loope
in
mov
notl
rorb
mov
inc
out
mov
enter
inc
gs
push
pushf
xlat
push
jne
mov
xor
add
xchg
cmp
shlb
loopne
aas
mov
and
repz
cwtl
insl
xor
jecxz
cmpsb
jmp
dec
cmp
sti
xor
fsubs
in
dec
mov
mov
ficoml
inc
sub
addr16
mov
mov
sbb
addr16
ljmp
add
cmp
fcoms
and
int3
jno
fs
dec
mov
aaa
push
xor
cmp
stc
and
inc
xlat
mov
in
lahf
pop
xor
mov
outsb
jg
xlat
adc
jno
in
scas
or
mov
cmp
xlat
les
mov
mov
sbb
push
cmp
hlt
push
dec
cld
int
fmuls
scas
ja
cmp
mov
call
mov
mov
imul
cmp
dec
imul
mov
pop
rcrl
or
jle
lret
test
add
sub
cmpb
and
mov
mov
andl
xlat
scas
adc
arpl
js
mov
mov
mov
mov
mov
mov
push
aad
stos
sbb
dec
jbe
in
imul
jl
xchg
sbb
das
daa
adc
xchg
inc
pop
orl
clc
int
pop
or
mov
arpl
std
pop
and
movsb
xlat
testl
ret
push
test
in
int3
mov
mov
in
fildll
sub
jno
cmp
insl
vunpckhps
insl
and
xchg
jl
shrb
and
inc
mov
data16
movsb
scas
dec
leave
xchg
fistpl
rcll
adc
pop
mov
mov
mov
daa
lahf
sbb
xchg
aas
movsb
jle
pop
mov
loope
pop
lahf
inc
cmp
sbb
cmp
inc
and
push
sub
gs
jp
xchg
sahf
call
ja
xchg
dec
mov
stos
cvtdq2ps
lcall
mov
inc
scas
fwait
pop
fadds
and
out
in
pop
arpl
sub
push
stos
pop
and
fisttps
test
sub
test
cs
jmp
test
sti
lea
cs
dec
add
out
pop
sbb
xlat
or
sbb
mov
into
jnp
daa
adc
outsl
enter
outsl
rorb
and
insl
addr16
adc
mov
ret
adc
jl
popa
ljmp
xlat
les
dec
inc
bound
adc
or
fdivrp
cmpsl
mov
incl
jns
sbb
xlat
js
mov
xchg
lea
pusha
arpl
cmp
pop
out
sti
pop
test
sub
mov
xchg
rorb
dec
cwtl
inc
inc
push
mov
addr16
xchg
repz
xchg
rorl
mov
out
sbb
xor
mov
ficomps
fistpll
pusha
clc
mov
test
push
sbb
or
jecxz
adc
jle
push
shlb
mov
popa
xlat
or
push
xor
ds
negl
lods
rcrb
imul
adc
xchg
lods
bound
sub
loopne
call
sub
repz
push
fpatan
out
push
mov
adc
ss
out
out
int
popa
es
or
mov
push
push
or
rolb
pop
mov
fs
test
outsl
jns
mov
jne
leave
dec
ror
mov
lahf
aas
add
inc
or
addr16
push
sahf
cld
and
mov
loope
arpl
xor
insl
mov
push
cwtl
iret
jge
mov
bound
shll
push
xor
and
inc
cmpb
xlat
out
loop
test
popf
pop
inc
push
jne
xlat
mov
xchg
dec
mov
rol
push
mov
movsl
push
addr16
sub
mul
in
sub
dec
rorl
out
pop
mov
dec
das
add
or
out
loopne
xlat
test
mov
sbb
pop
and
mov
insl
xchg
test
mov
cmp
pop
addr16
div
outsb
mov
mov
stc
jo
xlat
push
fmul
arpl
xchg
lret
mov
sub
dec
addr16
jae
addr16
clc
sbb
xchg
es
adc
jnp
sub
gs
cmp
pop
push
addr16
add
jno
fildl
ss
push
jp
push
gs
enter
adc
xlat
jnp
daa
fcomps
mov
cmpsb
mov
ja
jns
adc
addr16
cwtl
xchg
fs
xor
mov
pop
jmp
ss
pop
xchg
inc
addr16
in
scas
dec
decb
sub
or
pop
popf
pop
mov
sbb
push
iret
hlt
fmull
mov
add
jp
jnp
jb
push
sub
jns
inc
aam
sub
mov
xchg
dec
mov
stc
and
jecxz
inc
addr16
pop
loop
xor
cmc
clc
mov
dec
mov
lret
mov
sub
add
jecxz
cmp
mov
movsb
mov
jb
je
xlat
shr
out
and
jmp
xlat
nop
cmpsb
push
xchg
out
stos
arpl
ds
mov
in
imul
cmc
lret
jae
inc
lea
int
int3
xchg
mov
out
cld
lcall
xchg
or
stc
jmp
jno
xor
cmp
pop
addr16
mov
cmpsb
dec
xchg
cwtl
mov
test
jecxz
hlt
xchg
push
xlat
and
cs
dec
cmp
out
std
imul
xchg
mov
sbb
mov
push
out
push
pop
sub
lock
rorb
sbb
mov
fbld
sub
in
decl
mov
inc
fs
mov
mov
cmpsl
shll
mov
or
dec
into
test
loopne
fwait
scas
push
cmp
cli
mov
push
pop
jl
and
enter
push
ds
and
jmp
mov
xchg
xor
shrb
jbe
stos
or
fisubl
pusha
js
or
out
cmp
add
je
push
je
jno
mov
mov
xchg
mov
lret
dec
push
addr16
repz
es
out
push
mov
addr16
aad
push
xor
lahf
mov
sbb
jo
dec
scas
out
push
pop
xor
addr16
sbb
jns
mov
fstl
push
push
enter
mov
in
xchg
cmpsl
xchg
jae
sbb
aas
add
xlat
and
lcall
test
hlt
dec
data16
mov
cmp
fdivl
enter
or
pop
cmpsl
mov
mov
pop
dec
imul
inc
add
mov
mov
jo
lahf
xchg
sub
mov
pop
mov
int
pop
push
scas
mov
xchg
pop
outsl
and
gs
mov
dec
sahf
les
pop
xor
cmpsb
cli
xorb
mov
adc
addr16
xor
mov
and
jns
idivb
sbb
add
dec
lret
out
xchg
mov
sarb
mov
push
stc
push
rcll
mov
arpl
test
pop
addr16
aas
maskmovq
dec
mov
scas
int3
ljmp
inc
mov
das
call
lret
xchg
add
pop
and
mov
lds
pop
dec
jns
push
xlat
xor
sbb
mov
mov
lret
add
pop
jmp
mov
xor
adc
jnp
pop
mov
orl
pop
jne
mov
rclb
ret
xor
adc
ja
sahf
aaa
xchg
and
jmp
sub
pop
enter
mov
push
jnp
jl
sub
test
mov
and
mov
out
fnstsw
pusha
add
mov
test
xlat
jo
and
js
cmp
fcoms
out
in
addr16
add
sub
jbe
mov
in
mov
sbb
ret
inc
imul
lods
divl
shlb
xlat
dec
inc
and
mov
adc
loopw
mov
dec
shll
mov
in
xchg
xor
adc
outsb
ja
out
xlat
mov
or
sbb
cld
cmc
lahf
mov
jge
jbe
adc
mov
and
xor
fsubrl
es
xchg
ds
les
out
addr16
jge
jo
into
dec
mov
cmp
mov
ret
mov
mov
push
mov
mov
push
pushf
into
scas
dec
sbb
mov
push
aad
inc
mov
mov
add
cmp
mov
faddl
subb
xchg
js
cmp
stc
mov
repz
xchg
push
sahf
dec
aaa
je
jb
frstor
xchg
jae
into
roll
xor
lds
pop
sbb
adcl
mov
dec
jecxz
outsb
cmpl
inc
add
cld
popf
sbb
cmpsl
jmp
mov
xor
shl
cs
addr16
addr16
pop
mov
pop
fisubrl
data16
test
subl
or
mov
js
xchg
out
insb
jnp
adc
js
out
negl
pop
dec
loopne
and
sbb
dec
ret
mov
fldl
arpl
mov
jno
jl
xlat
mov
int3
jns
jge
loope
dec
lcall
addr16
out
and
jne
jle
or
outsb
ret
push
addr16
mov
xor
movsb
aad
mov
dec
das
pop
mov
add
jmp
or
ret
aaa
or
es
inc
pop
mov
sub
jecxz
xlat
jge
das
dec
out
mov
les
push
gs
ja
mov
cmpsb
add
inc
cmp
jmp
mov
add
xlat
jge
mov
mov
inc
pop
stos
pushf
pop
or
mov
inc
es
in
aad
ljmp
or
stos
addr16
pop
and
pop
sub
mov
mov
dec
cli
pusha
dec
mov
xor
testl
dec
xchg
xorl
out
addr16
mov
mov
inc
popa
hlt
inc
mov
or
inc
nop
loope
mov
jge
popa
mov
push
mov
xlat
sub
or
loopne
adcl
cmp
addr16
add
fwait
add
push
cmp
frstor
clc
rcrl
in
adc
pop
lret
cmp
cmpsb
adc
into
shrb
xchg
test
or
jge
roll
push
mov
mull
lret
outsb
jmp
and
xchg
xor
jg
dec
call
lea
mov
or
loope
jg,pt
xchg
aam
mov
outsl
pop
cmp
sti
movsl
mov
ja
mov
out
jbe
shrb
mov
repnz
mov
dec
or
sar
ja
shlb
cmpsb
fmul
or
pushf
sub
mov
mov
icebp
mov
imul
xlat
sbb
cmp
shl
jae
lret
dec
mov
cld
fdivl
outsl
xchg
lods
mov
in
dec
aas
sarl
mov
addb
pop
ret
mov
sbb
or
orb
mov
test
or
push
adc
sbb
imul
xor
imul
imulb
push
in
push
shlb
imul
xchg
or
or
and
outsl
repz
and
mov
fisubs
xchg
aam
scas
ljmp
sbb
jb
pushfw
sahf
add
sub
push
sub
dec
sbbl
xor
out
xor
add
cmp
push
popl
sbb
out
das
enter
cmpsb
mov
dec
aam
mov
fimull
push
aad
dec
pop
xchg
mov
xchg
jns
mov
mov
mov
push
xlat
inc
ljmp
xchg
shll
ss
mov
adc
xchg
mov
out
dec
loop
addr16
xor
sub
les
into
outsl
push
fwait
dec
mov
fisubrs
or
xor
scas
mov
xlat
in
scas
xor
pop
mov
push
cmp
es
lret
repz
out
fnstenv
cmp
lods
mov
pushf
xchg
je
shl
addr16
or
cs
jle
and
rcrb
out
adc
push
ret
and
cmpsb
mov
orl
mov
xor
sub
mov
adc
and
add
sbb
push
mov
mov
xchg
inc
mov
test
xlat
aad
rcl
gs
mov
scas
stos
movsb
in
pop
je
push
int
xor
or
push
fcoml
xchg
sbb
daa
daa
or
hlt
mov
mov
sahf
in
rcr
xlat
push
in
mov
push
inc
mov
fstl
xchg
lods
sub
loope
mov
ud0
xor
pop
ja
mov
test
mov
cld
repnz
int
mov
jnp
push
adc
lret
daa
add
scas
xor
xchg
es
jno
mov
inc
xchg
xor
imul
les
mov
mov
or
adc
dec
roll
clc
xchg
mov
dec
mov
test
jge
pop
xlat
cmpsl
gs
cld
enter
stos
in
ficomps
mov
out
xor
lock
and
dec
aad
lods
xchg
mov
scas
data16
mov
fsubrp
mov
xchg
rorb
sub
xlat
imul
and
add
xchg
ds
adc
ljmp
jle
gs
mov
out
jno
push
fcmovnb
pop
movsb
aas
mov
shrb
push
es
mov
adc
mov
cmp
aam
call
mov
in
loop
jnp
xlat
int
xor
stos
mov
fisttpl
mov
mov
adc
jl
and
div
xchg
lods
pop
add
xlat
cmp
loope
mov
mov
out
jp
jle
adc
adc
and
mov
or
cld
and
pop
inc
mov
mov
movsb
mul
cmp
cmpsb
out
jmp
push
sbb
sub
pop
pop
xor
stos
les
or
inc
inc
gs
rorl
addr16
movsb
bound
adc
jae
jb
int
fsubl
aaa
mov
jne
xchg
out
fnstenv
rorl
or
jecxz
pop
push
mov
mov
sub
loop
adc
sbb
daa
imul
leave
cmpsl
out
loope
mov
pop
arpl
sbb
push
jle
jmp
sub
aaa
js
inc
mov
mov
icebp
pop
inc
addr16
pop
cmp
data16
jb
addr16
xchg
imul
scas
jb
cmp
push
or
test
mov
pop
and
mov
push
repz
inc
jnp
xor
test
jne
mov
icebp
mov
insl
lret
sbb
xchg
bound
scas
mov
mov
mov
push
jae
pop
out
and
inc
scas
nop
lock
mov
fwait
popa
jae
aad
sbb
push
push
sti
mov
mov
dec
adc
xchg
push
sub
mov
mov
call
outsb
mov
or
sbb
cmp
mov
imul
push
rclb
not
stos
push
add
outsl
mov
in
push
scas
int3
aad
addr16
sbb
outsb
pop
pop
mov
mov
fs
add
xchg
xlat
cli
dec
push
xor
mov
or
mov
or
into
jb
or
mov
cltd
push
mov
mov
pop
adc
fcoml
test
bound
mov
mov
mov
push
addr16
push
lahf
repnz
adc
add
xorl
xor
arpl
arpl
add
sarl
cmp
sbb
adc
jb
popw
enter
push
xor
andb
nop
test
call
pop
or
mov
sub
lds
add
xchg
fsubs
cmp
std
xchg
pop
scas
insl
shrb
mov
sahf
sub
mov
xlat
xchg
outsb
xchg
xor
mov
add
sbb
sub
cli
xor
repz
repnz
push
rcll
pop
adc
aam
aaa
lahf
daa
pop
daa
mull
add
mov
andb
sub
xlat
fisubrs
or
movsb
and
mov
and
mov
icebp
fwait
popf
movsb
pop
jle
pop
and
mov
movsb
js
pop
adc
xlat
dec
xchg
ficoml
cmp
inc
push
jno
ljmp
sub
in
test
fbld
fwait
xlat
xor
inc
xor
scas
fidivs
ficomps
mov
outsl
dec
mov
push
or
mov
shll
pop
test
mov
roll
inc
and
fidivrs
mov
push
je
mov
lcall
xlat
leave
aam
das
adc
int
loopne
lret
inc
fmull
lods
ss
push
pop
ja
cld
scas
mov
dec
sub
mov
adc
xchg
cwtl
or
xor
mov
jae
mov
jecxz
xlat
lret
push
push
insl
push
add
mov
or
addr16
sub
inc
test
leave
nop
push
push
mov
mov
push
orl
addr16
or
out
mov
cld
test
divps
xor
cmp
jp
cmp
adc
sub
dec
mov
push
fcmovb
in
test
clc
mov
clc
lret
sub
push
jmp
cwtl
pushf
in
add
cmp
push
addr16
add
cld
mov
mov
lods
jae
mov
cwtl
sarl
in
mov
mov
ficompl
iret
or
jns
mov
iret
test
clc
daa
pop
stos
pop
addr16
rcrl
sti
and
addl
aaa
mov
xor
sub
inc
sub
enter
xchg
xor
fldt
lods
cmp
into
xchg
mov
addr16
dec
mov
outsb
jmp
cmp
xchg
inc
loope
add
xchg
inc
enter
dec
sarb
dec
ret
ret
xor
pop
outsb
mov
daa
pop
in
jne
pop
daa
mov
dec
sti
xchg
in
sti
fs
enter
sub
fbstp
icebp
mov
jae
clc
xchg
pop
xor
addr16
std
sahf
xor
popa
push
add
into
or
jne
or
dec
lods
push
rclb
cmpsl
xchg
mov
cld
inc
arpl
push
jno
test
jno
mov
pop
call
xchg
xorl
xchg
pop
mov
movsb
or
aam
stos
fistpll
cmp
fucomi
mov
inc
sbb
repz
xlat
adc
add
or
jb
ds
dec
popf
lcall
movsb
inc
mov
ret
lods
pop
mov
aaa
adc
mov
sub
dec
sub
add
jb
les
roll
push
mov
cmp
addr16
or
leave
jae
sub
sub
stc
cmp
adc
lods
das
addr16
ss
arpl
jne
shrl
decb
out
mov
clc
dec
mov
push
xor
mov
add
mov
xlat
inc
mov
mov
mov
cmp
jge
inc
mov
and
xchg
lcall
sub
xlat
imul
test
daa
mov
fcmovnbe
call
xlat
and
call
scas
xchg
mov
cmp
and
cmp
test
cmc
jnp
add
xor
mov
and
in
rorb
rcll
jbe
xchg
mov
push
jne
rolb
dec
imul
mov
sahf
mov
scas
mov
rcl
pop
mov
popa
mov
mov
std
push
rcll
popf
xchg
cmp
jae
popa
stc
mov
dec
dec
push
stos
cmp
xlat
in
aaa
cmp
push
inc
mov
and
cmpsl
push
sahf
push
loope
cltd
icebp
outsb
mov
or
or
enter
mov
push
out
xorl
repnz
addr16
jb
dec
add
jp
pop
mov
pop
cmpsl
aad
mov
mov
mov
movsl
xchg
sub
jmp
lock
cli
pop
mov
xchg
mov
adc
sar
fstps
outsb
or
or
test
stos
push
imul
and
push
sti
lock
add
fimull
nop
out
cmp
pop
adc
mov
in
push
add
pop
mov
test
xchg
inc
sti
rorl
sbb
sub
sub
xlat
mov
mov
in
push
xlat
cmp
xchg
out
cmp
fisttpll
sbb
pop
add
outsl
mov
repz
dec
mov
outsb
jg
cli
mov
and
arpl
or
call
addr16
lret
cli
inc
mov
mov
adc
ja
out
add
inc
and
dec
cli
mov
mov
and
xlat
sub
js
sub
rcrl
repz
or
dec
mov
mov
fwait
push
je
shll
loope
insb
sub
jae
mov
push
cmc
fdivrs
xchg
jp
jmp
out
in
out
inc
stc
lcall
dec
lock
mov
cmp
push
add
mov
xchg
push
jo
mov
movsl
mov
inc
imul
outsb
sti
xlat
out
mov
jb
sbb
jb
mov
jno
fiaddl
jecxz
aam
out
decl
ret
xor
ret
cmpsb
scas
jns
jmp
jb
jb
sbb
ficomps
jg,pt
adc
imul
add
js
mov
inc
aaa
or
jecxz
adc
loope
xchg
adc
mov
fstps
iret
orb
movsl
push
pop
mov
into
add
jg
mov
gs
xrelease
xchg
iret
sbb
xor
and
ss
or
bnd
imul
pushf
cmp
shlb
jmp
fwait
add
pop
enter
or
or
xor
pop
stc
mov
push
fnstenv
pop
loope
shl
mov
ds
dec
iret
and
sub
shlb
dec
jnp
mov
pop
insb
lock
and
or
jmp
data16
jmp
jmp
leave
orl
push
fwait
sbb
xlat
test
loope
mov
add
pop
leave
xchg
and
xchg
xlat
xor
mov
and
cmp
ja
addr16
iret
pop
pop
and
jg
or
sub
add
sbb
push
fstpl
loopne
stos
popa
loopne
push
mov
cmpsb
xlat
bnd
test
shlb
xlat
push
sar
sbb
insl
cmpsl
jmp
adc
pop
shlb
add
cmp
jo
bound
mov
daa
test
xlat
gs
sub
push
aas
jae
shl
add
mov
lock
push
popf
pushf
lds
fcmovnbe
filds
cmpsb
leave
pop
mov
repz
cwtl
psrld
jle
fwait
in
ds
loopne
mov
cmpsb
imul
inc
divl
mov
jb
rep
in
mov
icebp
test
fs
jge
push
cmp
leave
push
andb
mov
xchg
notl
xchg
dec
out
jno
mov
add
fsubr
lea
push
or
cmpsl
sbb
dec
cmp
sub
inc
dec
sbb
dec
icebp
icebp
mov
xchg
std
cmp
push
mov
mov
ret
sbb
ja
jno
cmp
cmpxchg
cmp
shlb
mov
test
mov
int
jae
cld
rolb
jnp
mov
addr16
popf
inc
ljmp
pushf
aam
and
pop
xchg
mov
and
push
push
clc
mov
sbb
sub
popf
int
mov
dec
mov
xchg
cmpsb
cld
fs
xchg
xlat
mov
cmp
shll
adc
out
inc
xlat
jb
inc
push
fstpl
pop
mov
fs
jg
or
mov
adc
or
mov
or
dec
add
pop
push
movsl
add
lcall
pusha
pop
adc
cmp
cmp
sarb
cli
xlat
mov
pop
js
mov
jle
movsb
or
fildll
cmp
pop
ljmp
mov
rclb
mov
push
push
mov
loopne
cmp
xchg
push
pusha
out
push
test
dec
xor
pop
int3
xchg
lcall
outsl
add
push
shrb
xchg
enter
movsl
int3
xchg
out
sbb
stos
xlat
xchg
outsb
mov
mov
mov
jmp
enter
popa
data16
out
orl
mov
aaa
fldenv
add
sbb
popf
mov
lea
jmp
add
decb
and
jo
xchg
cmp
imul
lret
aaa
outsb
mov
mov
mov
jmp
sbb
add
leave
jbe
xlat
lock
aam
sub
jno
sbb
addr16
cs
adc
aaa
mov
and
inc
test
mov
data16
leave
movsl
daa
pop
push
xchg
cmp
popf
mov
or
push
add
dec
sub
sub
adc
jl
add
out
lea
out
mov
mov
mov
outsl
pop
sbb
jg
insb
lcall
imul
mov
insl
ljmp
xchg
insl
scas
push
dec
jge
in
addr16
inc
jae
idiv
mov
xchg
sbb
inc
xlat
sub
mov
xchg
lret
sub
jmp
xchg
mov
mov
inc
roll
mov
fimuls
mov
push
inc
push
adc
insb
xchg
add
jne
push
and
cmpsl
inc
cmp
hlt
cmp
jo
mov
and
cld
fwait
into
divb
push
imul
or
cli
mov
dec
and
mov
imul
push
repnz
popf
sbb
addr16
jae
sbb
rcrl
adc
pop
mov
add
pop
mov
dec
insl
lret
lods
sbb
mov
mov
imul
std
inc
xlat
enter
jp
xchg
xchg
dec
scas
arpl
pop
fmull
out
mov
inc
cmp
imul
sbb
outsl
pop
dec
call
cmpsb
add
jle
push
sbb
add
mov
cld
rolb
mov
cmp
fildll
dec
mov
bound
pop
cli
mov
mov
fmull
addr16
cmp
mov
out
sub
xlat
lcall
cltd
std
gs
or
aam
hlt
push
xchg
xlat
arpl
js
mov
mov
inc
push
into
pop
in
je
int3
loope
add
mov
jge
movsl
stc
int
jae
mov
fiaddl
test
mov
jl
jge
mov
jns
jl
cmpsl
das
jp
imul
outsb
mull
xlat
test
ds
ret
hlt
jp
fwait
rol
ficompl
mov
mov
addr16
jle
push
ja
and
out
jbe
xlat
repz
lods
dec
movsb
adc
cmc
xlat
fnsave
addr16
jbe
xchg
jnp
ret
xchg
jecxz
ljmp
pop
in
inc
aas
hlt
addr16
test
imul
dec
dec
lcall
int3
scas
xchg
push
mov
mov
lcall
sub
insl
mov
loope
popf
inc
cld
xor
mov
xchg
mov
imul
pop
mov
loop
add
xorb
pop
fldenv
mov
jecxz
lcall
enter
neg
pop
mov
cmp
and
jp
in
jmp
in
test
les
inc
fildl
sub
push
mov
in
leave
push
and
sahf
addr16
mov
mov
mov
sbb
jmp
xor
shll
imul
mov
lds
mov
mov
fisubrs
mov
mov
mov
rcl
iret
xchg
sahf
jmp
add
sarl
pop
faddp
or
jnp
adcl
std
mov
enter
mov
mov
inc
mov
adc
and
xor
lret
dec
cld
fwait
sub
inc
and
popa
imul
mov
jae
fstpt
lods
sahf
xchg
mov
popf
stos
rcll
stc
jae
mov
push
addr16
adc
mov
pop
scas
cmp
pop
and
pop
enter
mov
addr16
jg
int
mov
mov
inc
movsb
cmpsl
mov
addr16
and
lcall
cmc
fcmovnbe
addr16
loope
add
leave
mov
bound
mov
inc
xlat
shl
xchg
int3
mov
and
pop
stc
xlat
mov
inc
popf
xor
push
daa
mov
add
xlat
pop
clc
subb
hlt
cmp
mov
push
jne
push
jecxz
sahf
addr16
iret
mov
cmpl
sub
xlat
mov
out
mov
iret
out
popa
lods
lds
divb
xchg
nop
add
add
adc
pop
fnstcw
jmp
mov
xor
mov
pop
outsl
es
jecxz
mov
into
inc
mov
cmp
cmp
loopne
adc
mov
out
sbb
arpl
mov
cltd
jo
rcll
mov
jne
mov
rorl
mov
aad
lcall
clc
pop
mov
mov
loopne
adc
insb
aam
leave
repnz
es
test
in
sbbb
mov
iret
push
jecxz
xor
pcmpeqb
xchg
imul
lds
xlat
sti
movsb
lods
cld
jmp
inc
mov
jecxz
lcall
mov
arpl
repnz
ret
cli
int3
push
mov
push
popa
mov
jnp
in
lcall
rclb
dec
xlat
push
adc
sub
sub
mov
cmpsl
rcl
mov
data16
dec
dec
xlat
loop
add
xchg
loopne
mov
call
negb
call
add
or
push
jns
lods
pop
mov
xchg
xchg
jg
imul
sbb
add
dec
pop
repz
or
shrb
fisttps
shll
out
ret
addr16
dec
or
mov
mov
xor
jnp
fcmovu
jb
std
xlat
lahf
jb
cmp
jl
mov
inc
mov
and
test
xlat
push
in
dec
push
pusha
dec
xchg
mov
jl
out
pusha
push
bound
dec
daa
in
mov
sub
add
frstor
add
mov
xchg
cmpb
xlat
pop
or
xor
cmc
fdivrs
mov
pop
mov
aam
cmpsb
xchg
jle
loope
mov
sub
mov
cltd
test
and
in
xor
aas
inc
xlat
ljmp
test
push
leave
nop
push
fs
or
or
mov
and
pop
daa
call
xorl
aas
xlat
lret
cld
cmp
ljmp
mov
addr16
pop
jb
jecxz
mov
push
shll
xchg
add
fsubl
jl
xchg
dec
fnsave
xchg
mov
lret
and
addr16
xor
stos
mov
xchg
mov
pop
pop
loope
sub
ret
rcl
shll
je
mov
iret
mov
aaa
push
or
and
faddl
and
dec
mov
cmpsl
leave
push
sbb
add
jmp
loopne
rorl
mov
push
jns
xchg
pop
inc
frstor
filds
ja
mov
cmc
sbb
or
imull
xlat
adc
fucomip
dec
mov
jb
in
cld
mov
mov
xor
arpl
dec
dec
test
std
cmp
out
jns
incl
mov
movsl
fs
pushf
pop
jp
das
fs
popa
loopne
inc
cmp
mov
sbb
pop
mov
add
and
xlat
testb
jle
dec
mov
adc
stos
cmpsb
sti
aaa
mov
inc
push
sub
enter
mov
enter
add
mov
addr16
jns
ljmp
orb
mov
dec
mov
mov
xchg
out
xor
pushf
repz
mov
cmpsl
cltd
inc
lods
test
pusha
sbb
shrl
loopne
insl
pop
jl
popf
insl
cmpb
int3
shll
add
xchg
ror
addr16
pop
sbbb
ret
push
mov
pushf
sahf
mov
xchg
xlat
or
jg
add
icebp
push
sbb
pop
icebp
inc
cwtl
jle
fmuls
and
repnz
addl
mov
inc
loop
mov
push
enter
sti
and
add
popa
stos
adc
outsl
int
push
lock
movsl
inc
jns
mov
and
mov
push
addb
sti
je
sbb
movsl
movsl
std
mov
ljmp
or
xlat
dec
popf
mov
in
cmpsl
mov
in
mov
mov
fbld
lret
sbb
out
std
mov
push
lea
lods
mov
mov
add
inc
into
and
dec
cmp
das
bound
outsb
xchg
lret
xchg
repz
ret
nop
ret
xchg
in
push
dec
cli
jl
imul
fxch
out
or
jns
mov
adc
cmpsb
data16
fcmovbe
adc
cmp
in
mov
and
fwait
jae
xor
xor
mov
mov
xlat
cmpsl
imul
ds
push
sbb
add
jle
ss
or
das
rclb
ss
jmp
lds
lods
push
mov
ljmp
nop
cmp
jb
xchg
pop
push
push
pop
pop
and
lods
xlat
jbe
cmpsb
lods
sbb
or
pop
xchg
jnp
push
outsl
fcmovnbe
lea
aad
mov
mov
sub
xchg
xor
adc
cmp
cmp
es
dec
push
mov
shrb
cmp
push
sbb
push
push
jne
stc
mov
dec
lods
outsb
jo
mov
push
cs
mov
fwait
arpl
xor
xchg
xchg
lods
add
mov
or
insl
pop
mov
sub
fstl
cmp
jb
in
ljmp
cmp
or
push
mov
xor
lock
popa
insb
mov
inc
adc
sbb
lds
popw
shlb
xchg
pop
xor
stos
jno
xor
jo
rcl
data16
mov
fdivrl
mov
fnstenv
cli
jmp
adc
sub
and
movsl
repnz
jbe
jecxz
mov
and
out
mov
adc
adc
mov
push
sub
mov
pop
test
out
mov
xor
mov
test
ja
aam
cmp
or
add
sub
fisubrl
rorb
add
sbb
cvttps2pi
outsb
test
adcl
enter
lock
mov
dec
insb
xor
jl
jo
mov
cmpsb
shl
pop
ja
call
pop
stc
sub
jmp
inc
in
into
inc
sbb
loop
lcall
push
popf
in
icebp
pop
mov
shll
push
add
lret
mov
cmpsl
pop
push
fstpt
inc
jae
mov
sub
xlat
fisubrl
mov
imul
cltd
scas
sub
in
fsubl
mov
push
sbb
cmp
outsb
inc
adc
adc
add
mov
jmp
movsb
lock
pusha
xor
negb
xchg
or
jb
jp
imul
shrb
adc
mov
movsb
pop
and
andl
pop
call
lock
inc
aad
out
fisttpl
jae
xchg
dec
xchg
cs
dec
push
lds
stos
dec
ret
divb
xor
xor
xlat
pusha
sub
cmp
add
out
shll
into
add
inc
aad
xor
insb
icebp
adcl
lods
dec
adc
mov
stos
xchg
cmp
insl
mov
xor
int3
mov
push
fs
leave
inc
std
into
mov
clc
lahf
negl
leave
int3
scas
adc
jp
lods
mov
inc
inc
jno
mov
addr16
or
das
into
push
sahf
lods
jp
inc
mov
push
jbe
pop
sub
mov
jne
xchg
xlat
mov
pop
inc
enter
pop
mov
mov
mov
std
pop
aam
fisttpl
insl
loope
mov
dec
pop
fidivl
stc
dec
enter
fbld
mov
dec
push
lea
outsb
inc
frstor
and
xlat
out
scas
dec
inc
stc
mov
xchg
pop
adc
int3
xlat
push
mov
rolb
pop
xchg
or
mov
adc
cmc
cld
pushf
loop
test
in
pop
sbbl
test
cld
jno
shr
jp
jp
sub
ret
lock
repz
popw
push
out
or
leave
inc
clc
bound
pop
ficompl
mov
into
imul
stos
fs
mov
pop
fmuls
inc
shlb
jl
dec
sarl
pop
addr16
data16
mov
and
into
push
fcmovu
mov
addr16
std
aaa
sarl
mov
addb
fldcw
outsb
sub
mov
pusha
sub
loope
cmp
ljmp
mov
mov
pop
sub
pusha
lahf
sbb
push
or
sbb
test
and
mov
push
stc
jmp
mov
pop
sbb
jp
jg
sub
scas
inc
stc
roll
sarl
sub
imul
xchg
test
loop
sub
mov
enter
ss
jne
sub
mov
lea
addr16
and
dec
xor
faddp
mov
cltd
dec
pop
out
lods
add
mov
lret
dec
fsub
data16
in
scas
test
imul
outsb
shr
scas
mov
lret
jle
mov
or
dec
mov
sbb
and
aam
xchg
pop
mov
call
adc
mov
loopne
dec
dec
int
jno
insb
cmp
rcrb
sub
mov
mov
lods
sbb
and
divb
mov
inc
push
lret
adc
xchg
and
dec
cmp
or
mov
pusha
in
inc
push
push
movsb
int3
addr16
mov
adc
dec
cwtl
notb
outsb
std
jo
mov
imul
test
mov
arpl
inc
sahf
mov
sarb
cmp
dec
mov
jg
aaa
and
loope
mov
inc
enter
cmp
xchg
lea
xlat
out
xchg
or
js
mov
push
xchg
inc
lret
bound
call
clc
out
test
neg
out
push
das
xchg
loop
xor
adc
xchg
cmpsb
cmpsl
dec
mov
inc
andl
addr16
das
rclb
cmp
lods
or
pusha
add
mov
pushf
mov
bound
not
or
das
mov
pop
mov
les
push
xlat
adc
mov
icebp
imul
fcomps
mov
inc
or
sub
cmp
pop
push
pop
lock
int3
adc
les
cli
aad
jo
cli
mov
xchg
inc
push
push
inc
ja
lahf
xor
xor
scas
mov
icebp
jecxz
xchg
jnp
call
xlat
gs
sbb
mov
mov
sbbl
inc
inc
mov
push
ret
sbb
push
mov
xor
std
jge
add
dec
mov
xor
adc
sbb
push
cmpsl
jbe
push
xlat
in
cmp
mov
adc
and
pusha
mov
add
shl
mov
mov
jae
xlat
scas
sarl
fwait
mov
sbb
jbe
lcall
inc
sbb
mov
mov
pusha
cmp
push
xor
mov
xchg
push
mov
mov
pop
sbbl
xchg
jmp
pusha
or
and
push
int
xchg
mov
iret
mov
movsl
das
sbb
xchg
mulb
mov
mov
adc
mov
xor
cmp
rcll
aaa
andb
pop
inc
lahf
push
jg
lock
out
push
mov
mov
mov
into
gs
test
sub
movsl
outsb
xlat
cwtd
and
mov
sbb
divb
xlat
call
jg
sbb
push
pop
aaa
mov
dec
push
pop
mov
push
xchg
addr16
jp
insb
dec
inc
mov
out
push
dec
jecxz
test
push
inc
call
pop
pop
lcall
cmp
std
mov
mov
out
mov
push
and
cmp
fistpll
push
jmp
out
push
jae
sub
inc
cld
stos
xlat
cmp
pushf
sub
lahf
sbb
mov
xor
jbe
call
leave
call
out
mov
nop
xchg
lret
cmp
mov
fnsave
fwait
inc
lahf
cmp
stc
addr16
jae
jmp
cmc
fists
fs
in
in
mov
dec
and
insl
ret
jecxz
mov
lods
mov
xor
xor
dec
push
or
popf
leave
mov
push
imul
dec
sar
xlat
cmp
xor
mov
stos
inc
pop
mov
add
clc
push
inc
pop
xchg
outsl
mov
out
cltd
movsl
mov
ret
push
call
ja
push
fisttpll
mov
or
sbb
sub
or
or
jb
cltd
in
mov
dec
sub
jo
cwtl
test
push
lock
lret
hlt
jmp
add
jmp
sarb
cwtl
pop
stos
push
pop
addb
imul
mov
mov
or
jmp
lcall
rcrb
add
pusha
xchg
popf
push
dec
sub
pop
cmp
sahf
xchg
xchg
dec
in
addr16
inc
push
in
cltd
sbb
mov
mov
test
and
or
daa
mov
stc
mov
cmp
jno
test
ljmp
jbe
rorl
xor
cld
pop
mov
xchg
add
ljmp
je
outsl
cmpb
xor
or
and
jnp
lret
out
out
adc
mov
out
mov
fldenv
jae
cwtl
xor
mov
pop
add
sbb
cmp
out
sbb
lret
jle
rcr
shll
lahf
inc
shlb
mov
jecxz
xchg
daa
std
out
mov
inc
mov
outsb
jg
pop
lret
outsw
add
mov
cmp
in
insl
mov
or
push
lcall
test
pop
dec
add
mov
push
arpl
xlat
ja
and
jb
int
push
pop
push
cmpsl
pop
out
mov
mov
mov
shll
or
sti
mov
push
rclb
sarb
rorb
pop
xlat
cwtl
ss
adc
cmpl
adc
enter
addr16
mov
mov
andl
mov
xchg
mov
push
mov
scas
and
push
cmp
and
add
and
push
ret
add
shr
or
xor
shl
scas
insl
xor
lahf
testl
ja
mov
sti
push
sub
xlat
and
faddl
aas
test
inc
lods
mov
enter
shlb
leave
and
xchg
lcall
ljmp
mov
outsl
lds
mov
cmpsl
sub
mov
mov
adc
pusha
out
rcl
add
mov
scas
xor
loope
addr16
push
sbb
sarl
xchg
sarl
mov
cld
adc
dec
outsl
mov
sub
xchg
mov
push
data16
fwait
fwait
push
or
cmp
inc
jmp
scas
addr16
xor
mov
orb
xor
sub
mov
pop
xchg
xchg
adc
adc
mov
and
cmpsb
jns
xor
xchg
test
icebp
add
xchg
inc
cli
sar
push
out
inc
fimuls
add
inc
mull
adcb
lods
repnz
mov
xor
sarl
scas
mov
sbb
ljmp
cmp
mov
cmpsl
sub
mov
cltd
cmp
pop
leave
addr16
xchg
stos
pop
jb
mov
add
dec
push
sbb
mov
pushf
pop
xor
mov
mov
es
and
fistps
mov
jns
cmpsb
mov
scas
outsb
xlat
add
gs
jns
orl
lock
aam
adc
push
fld
mov
cmpsl
pop
mov
movsl
xor
xchg
imul
mov
test
add
xchg
das
fwait
repnz
push
inc
and
sub
sub
test
xor
pop
cwtl
pop
lret
xlat
sbb
rolb
push
fidivs
test
icebp
jne
addr16
adc
cmp
repz
xchg
loope
xor
jae
adc
in
mov
insb
sbb
mov
fadds
jo
inc
hlt
mov
sbb
out
push
repnz
cmpl
and
cmp
mov
out
ret
jns
push
dec
add
mov
icebp
out
cmpsb
dec
fcoms
pop
cmp
jae
jg
lret
pop
jp
or
icebp
add
xchg
in
mov
rclb
sbb
jnp
xlat
hlt
jo
cmpsb
push
addr16
mov
cmp
out
mov
cmp
push
inc
xor
std
out
cmp
sti
or
aam
xlat
mov
repnz
out
pop
jge
adc
lret
popl
push
pop
fdivrs
sarl
adc
and
in
fwait
dec
inc
aas
cmp
shrb
fwait
pop
movsb
pop
int
jns
nop
mov
cld
or
jne
xchg
sub
addr16
daa
add
pusha
bound
cmp
xchg
dec
jne
cmp
inc
in
in
sub
xchg
xlat
stc
xchg
mov
dec
popa
pop
mov
fsubs
pop
jg
sub
mov
jbe
dec
jnp
jge
pusha
cmp
mov
dec
mov
xchg
jecxz
test
pop
mov
jge
stos
addr16
aam
inc
bound
xlat
add
push
loopne
push
pop
movsb
mov
sub
fwait
imull
addr16
jb
push
push
jp
jbe
jno
pop
mov
js,pt
stos
push
loopne
inc
dec
div
jge
stc
dec
mov
stos
inc
lea
ss
and
mov
pop
inc
iret
adc
sbb
xchg
arpl
aas
and
xchg
dec
xor
and
mov
leave
or
push
lock
mov
add
add
orb
testl
xchg
jmp
mov
loop
enter
jmp
je
mov
pop
sub
or
push
pop
out
iret
into
repnz
mov
imul
push
loop
xor
add
mov
cli
mov
inc
adc
xchg
test
mov
dec
or
add
dec
xor
mov
sti
push
stos
divb
fdivp
mov
add
xor
shl
jle
idivb
fldenv
hlt
sbb
call
popa
mov
pop
js
ljmp
mov
ss
jle
fwait
jns
mov
pop
fs
fcmovnbe
mov
fistl
jns
mov
imul
loopne
pop
jo
xchg
data16
ret
sbb
sbb
mov
mov
jno
loopne
mov
aaa
sub
insb
adc
out
mov
inc
aad
lcall
sbb
addr16
and
dec
mov
mov
fabs
aad
cmp
cs
dec
subl
movsl
xacquire
add
sbb
xor
addr16
pop
jns
loope
jge
inc
adc
xchg
cmp
adc
aam
inc
stos
lret
xor
or
mov
int3
push
les
gs
sub
shll
xchg
and
xchg
in
andb
jle
and
cmpsl
adc
pop
dec
mov
js
sbb
loop
mov
inc
cmpsl
test
repz
push
fs
dec
cmp
leave
cs
daa
or
shr
inc
psraw
sub
stc
fmuls
xlat
sub
das
jge
test
jno
cmp
hlt
mov
or
loope
mov
xorl
mov
stc
cmc
loope
mov
pop
sub
mov
loopne
call
stc
loope
xlat
push
shlb
mov
mov
icebp
jne
fucomp
movsl
xchg
roll
jl
add
lahf
inc
dec
mov
out
cwtl
data16
sbb
push
mov
sbb
xlat
data16
out
hlt
inc
test
xchg
jge
dec
sbb
jne
hlt
test
frstor
addr16
jl
icebp
inc
loope
pushf
mov
cli
lods
dec
aas
push
add
out
in
imul
sar
shll
pop
jno
jg
ret
and
int
pop
int3
rcr
jne
stos
sub
and
sub
addr16
fimull
arpl
xor
mov
call
negl
subb
cmpsb
outsw
outsb
xlat
sub
dec
xor
cmp
ja
and
push
jp
jns
push
push
enter
inc
mov
cmp
dec
idiv
cmp
xlat
pop
adc
lea
dec
jecxz
outsl
and
inc
cmp
cmpsl
shll
xchg
call
rolb
pop
jge
imul
mov
les
mov
btc
packuswb
adc
mov
shll
mov
es
mov
cmpsb
mov
in
xchg
mov
pop
rcrl
dec
in
pop
call
popf
pop
mov
pop
loopne
xlat
rcll
xor
push
daa
ja
rclb
jp
xchg
fisubrs
dec
xorb
push
inc
movsb
and
je
repnz
xlat
sbb
in
cmp
outsb
pusha
stc
dec
sub
mov
jbe
mov
mov
pop
sti
lcall
push
jge
xor
mov
xor
in
adc
ficoms
cld
xor
ss
push
or
subb
mov
popf
xchg
mov
mov
xor
push
jle
aam
xlat
xlat
in
push
ss
int3
dec
jne
lods
push
xor
bound
inc
imul
sbb
mov
lock
mov
fdivl
cltd
out
cmp
sbb
xchg
out
aaa
push
dec
loop
pop
sub
mov
pusha
cltd
or
iret
xor
push
movsb
shr
push
test
and
mov
adc
push
divb
popl
mov
data16
xor
inc
pop
pop
mov
or
out
mov
insb
jnp
insb
and
icebp
loop
push
ljmp
push
adc
xchg
xchg
call
addr16
adc
mov
dec
add
dec
mov
adc
push
pop
adc
push
pxor
rcrb
mov
jnp
test
addr16
add
sbb
add
adc
sti
rorb
dec
inc
lret
int
addr16
jo
arpl
and
mov
sub
out
jmp
dec
enter
xchg
mov
push
lock
stos
cli
in
neg
pop
push
gs
enter
push
mov
and
dec
ret
cmpsb
fidivrs
ficompl
js
pusha
pop
pop
sub
shlb
cmp
sub
mov
fldcw
add
add
pop
xchg
mov
fcmovnbe
lret
cmp
loopne
aad
shrb
icebp
sti
dec
int
pop
cmpsl
inc
push
mov
ljmp
test
stos
addr16
outsb
mov
mov
out
mov
xlat
xchg
cmpsb
out
cmpsl
push
imul
call
pop
in
mov
out
sbb
mov
inc
pop
push
mov
and
cmpsl
mov
shlb
xor
sub
mov
movsl
add
inc
shll
aam
xor
pop
addr16
xor
dec
test
mov
aaa
es
inc
jbe
push
adc
xor
out
mov
gs
in
jmp
enter
stos
pushf
shll
inc
mov
aad
icebp
insb
mov
enter
mov
cmp
addb
or
mov
sbb
push
mov
xor
cmp
out
cmpb
xor
int
jl
adc
cmp
lret
scas
iret
mov
xlat
aad
mov
sub
scas
daa
mov
mov
pop
loope
adc
inc
nop
lret
icebp
push
ficoms
or
mov
aaa
xlat
les
fsubr
fldenv
sbb
jle
int
pop
fisttpl
pop
int3
jp
roll
add
push
dec
dec
test
jb
xlat
cwtl
adc
enter
stos
popa
cmpb
fnstsw
fistps
pop
ss
push
jmp
aam
icebp
fs
jb
shrl
movsb
xor
xchg
lea
cmpsl
inc
mov
xchg
sub
loope
sbb
lods
pop
daa
jle
push
negl
inc
and
xor
mov
xchg
outsb
dec
fcomps
aad
cmp
les
sub
imul
shlb
xor
cmp
and
shrl
aad
mov
add
push
sub
or
fs
addb
addr16
xor
add
mov
and
popa
test
xchg
jmp
mov
repz
lock
pop
jo
shl
shll
lods
ret
mov
scas
lcall
cld
mov
mov
mov
xchg
push
rcrb
mov
cld
les
in
repnz
xchg
lods
inc
mov
cmp
addl
shrb
mov
push
nop
shrl
inc
dec
ds
push
fstpt
lods
insb
aam
and
or
outsb
aad
jns
insb
sbb
insb
dec
test
ss
cmp
addr16
lods
jge
fwait
xlat
mov
rorb
sti
pop
pop
js
add
mov
movsl
push
jnp
or
sbbl
jno
mov
cltd
mov
cltd
lret
add
and
imul
rcrl
push
adc
xchg
shlb
jnp
cmpb
mov
sbb
imul
or
xchg
f2xm1
push
mov
imul
and
mov
lods
fbld
test
rcll
ror
mov
fnstcw
lods
fcmove
btr
or
pop
popf
mov
fstpt
push
add
push
ljmp
sub
xchg
mov
mov
push
xor
cmpsb
lock
adc
jg
xchg
jg
negb
push
iret
pop
movsb
popa
push
or
das
mov
pusha
sub
in
icebp
popa
iret
das
add
mov
movsl
lret
dec
js
nop
mov
inc
out
fsubrs
popa
inc
mov
add
xchg
shrl
fnstenv
sub
mov
jne
daa
test
xor
push
lds
xchg
in
out
xchg
cmpsl
xchg
je
lods
sbb
pop
xorl
shlb
dec
rcll
sub
stos
in
jno
mov
pop
or
setg
lret
push
pop
gs
push
lret
mov
aam
shrb
push
xlat
mov
jo
test
fs
xchg
loopne
outsl
stos
and
adc
sbb
ds
pop
mov
push
pop
push
test
xor
clc
aaa
and
lea
sub
insl
or
adc
fdivrs
or
inc
dec
inc
and
repnz
mov
cmpl
mov
jbe
mov
enter
mov
jno
mov
ja
xor
andl
jmp
push
mov
dec
stc
in
sahf
clc
mov
pop
sub
scas
dec
add
das
js
jns
sub
out
pop
pop
dec
xor
movsl
loop
pusha
outsb
cmp
lcall
jno
inc
test
cld
movsb
cltd
mov
inc
push
sub
fisubrs
push
aaa
jno
xlat
aam
mov
inc
filds
xchg
mov
mov
out
push
mov
or
fmulp
adc
add
mov
fistpl
push
hlt
pop
repnz
xchg
das
out
pusha
and
push
mov
xchg
xchg
inc
cmpsl
imul
sti
mov
mov
mov
mov
xchg
xchg
roll
jg
or
mov
and
cmc
movsl
cli
adc
mov
imul
dec
mov
fnstsw
in
std
pop
pop
outsl
movsb
xchg
stos
add
adc
rorl
mov
xor
fisubrs
adc
dec
movl
loope
adc
rorb
lock
fs
mov
clc
or
jnp
ss
mov
leave
lds
xor
sti
push
sub
ror
cmp
xor
cmp
data16
fsubs
push
mov
int3
clc
lret
mov
rolb
inc
cltd
and
mov
rcrl
jne
pop
pop
add
dec
je
out
push
lret
pushf
xor
xlat
adc
out
icebp
mov
push
push
aad
out
aas
sbb
lret
dec
ljmp
mov
push
add
jb
pop
mov
addr16
repnz
inc
bound
xchg
mov
mov
xor
xchg
shr
addr16
clc
addr16
nop
lcall
gs
dec
lods
mov
popf
xor
fcoml
and
test
and
inc
cmp
mov
stos
push
and
xchg
dec
cli
movsb
lock
jl
faddl
aas
cmpb
iret
push
or
test
mov
add
jl
mov
xchg
sbb
mov
pop
cld
aas
loopne
mov
movsb
test
leave
push
je
dec
push
addr16
xchg
shlb
movsb
repnz
xlat
shl
pop
lods
lahf
clc
dec
movsb
push
xchg
jmp
loop
pop
jbe
xlat
outsl
orb
xor
clc
loopne
push
xlat
mov
rorb
repz
sub
inc
push
ljmp
push
adc
imul
mov
mov
mov
pushf
sarl
mov
inc
sti
fbstp
pop
fisubs
sub
mov
mov
jb
mov
cwtl
jnp
arpl
out
jne
and
js
and
xlat
pop
adc
daa
mov
jne
stc
xchg
jno
mov
loopne
repz
imul
fs
loopne
pop
adc
xlat
lods
jno
xchg
and
and
stos
pusha
pop
fs
pop
cmc
scas
enter
mov
pop
sub
sahf
ja
jecxz
in
lods
add
jbe
iret
out
pop
dec
fbstp
sar
fldpi
push
imul
push
or
lock
mov
xorb
addr16
outsb
pop
popf
push
rol
inc
jecxz
lock
sti
hlt
gs
cmp
cmp
cmc
popa
push
jnp
xlat
hlt
pop
stc
inc
js
negb
and
mov
loope
lock
mov
lea
pusha
push
jb
pop
into
cmpsl
pop
xor
mov
test
sahf
mov
into
sub
mov
dec
inc
cmp
hlt
repz
xchg
push
das
stc
mov
mov
pop
mov
or
lret
sbb
mov
add
mov
cs
jmp
leave
es
pop
das
inc
adc
out
xchg
or
jbe
shll
jge
sbb
push
mov
lods
xchg
loop
rcl
movsl
test
fidivrs
hlt
push
adc
faddp
pusha
xchg
sub
into
test
daa
int3
pusha
movsl
sti
pop
ror
push
lods
jge
fisubl
jg
scas
pop
sbb
test
mov
inc
scas
push
bound
pop
xor
xlat
pop
cmp
jo
js
mov
inc
data16
cmp
cs
addr16
mov
pop
or
addr16
jae
xor
iret
jo
sbb
movl
or
cmp
addr16
mov
sarb
leave
mov
lock
mov
enter
test
loope
adc
xor
jno
push
cmp
repz
sub
pushf
pop
mov
popa
bound
ret
or
sbb
dec
inc
out
cmpsl
nop
les
mov
pop
sbb
sti
push
fadds
push
xchg
push
dec
insl
ss
jno
push
test
adc
addr16
icebp
and
mov
fsubrp
test
loope
mov
and
sub
icebp
lock
out
mov
ret
out
sbb
lds
mov
adc
cmpl
leave
cs
inc
rcr
or
or
data16
je
loop
push
sub
xchg
or
xlat
and
sbb
pop
sub
test
cmpsb
push
add
fsubrl
outsl
push
pop
test
mov
aas
sti
fcoms
jecxz
shlb
sbb
dec
mov
loope
push
xchg
pop
xchg
les
test
leave
jg
mov
cwtl
lahf
add
xchg
jmp
out
inc
call
pop
pop
repnz
and
pop
push
sbb
adc
mov
jge
std
fidivl
in
lcall
sarl
lds
out
lret
aaa
jnp
shlb
imul
or
inc
shrl
mov
ljmp
push
mov
je
int
cmpsl
pop
test
adc
cmp
mov
pop
cmpsb
scas
mov
xlat
scas
cmp
aam
cmpb
lret
imul
cmp
not
mov
push
sbbb
adc
aas
xlat
jp
stos
das
sub
mov
cmpsl
sub
addb
jno
xchg
mov
xchg
out
jnp
fadd
xchg
enter
cmpsb
into
sub
xor
pop
scas
shll
mov
adc
fimull
addr16
cmpsb
imul
jg
mov
paddsb
fwait
das
mov
rorl
in
jmp
outsl
bound
mov
adc
outsl
fbstp
dec
mov
pushf
dec
jl
push
ljmp
sbb
xor
scas
add
mov
gs
rolb
js
enter
mov
xlat
push
jge
push
add
sahf
mov
andb
enter
dec
fildll
pop
stc
mov
test
lods
and
adc
push
dec
and
or
mov
push
shl
addr16
sahf
insb
imul
mov
clc
and
add
sbb
fcmovbe
pop
pop
fsubr
shll
sti
bound
adc
xlat
test
mov
jno
xor
xchg
mov
jl
pop
pop
jmp
and
pop
arpl
add
mov
xlat
cli
push
jg
mov
jnp
cmp
xor
xchg
dec
adc
xlat
add
xor
out
cmpsl
xchg
dec
sub
jns
mov
outsb
mov
pop
xor
or
fldcw
lret
int
mov
cmc
mov
or
dec
pop
scas
or
push
sbbl
pusha
addr16
pop
mov
es
adc
std
enter
push
mov
fwait
mov
mov
shlb
int3
and
xor
loop
and
es
cld
cmp
das
inc
push
and
xchg
push
inc
stos
cmpsl
adc
into
mov
pop
std
xchg
test
cmpl
pop
rol
and
xlat
push
data16
ret
out
inc
mov
pop
int
sbb
jae
push
int
mulb
shlb
jne
lods
insl
jnp
push
fiaddl
xor
cltd
pop
int
mov
arpl
jp
sti
ljmp
mov
clc
gs
shlb
gs
lret
adc
call
das
pusha
jo
ljmp
mov
daa
adc
xchg
test
bound
addl
or
mov
lret
mov
sahf
movsl
pop
into
xchg
cs
xlat
aaa
add
das
sbb
sub
dec
lea
addr16
in
xchg
cmp
jl
mov
clc
ret
les
dec
insb
daa
cmpsb
addr16
in
in
adc
iret
inc
sbb
lock
stos
icebp
push
popa
je
imul
push
inc
imul
or
mov
mov
adc
mov
mov
xchg
aad
mov
mov
push
lea
mov
stos
rcr
adc
daa
sbb
jl
xor
add
xor
outsb
movsb
jbe
aaa
jne
sub
mov
inc
shl
shlb
xlat
ror
jle
dec
add
test
sub
ljmp
xchg
jae
les
and
dec
mov
and
add
arpl
mov
cs
imul
mov
cwtl
mov
int
inc
repz
mov
add
cli
cs
lea
imull
filds
dec
jnp
imul
sti
xchg
xadd
push
push
xlat
rol
jns
seta
push
xchg
negl
push
jge
dec
xchg
and
xchg
cmp
push
xor
dec
stc
sarb
js
mov
mov
sbb
scas
pop
movsb
xlat
pop
push
ja
xchg
pushf
mov
in
lahf
cmp
cmp
addr16
sbb
andb
int3
pop
mov
xchg
fwait
ret
in
test
jbe
mov
inc
scas
add
das
rorb
mov
jae
adc
sbb
cmp
cmp
int3
fdiv
movsb
popa
ss
add
dec
adcb
xlat
lret
jle
repz
data16
addr16
test
xor
jno
jmp
sahf
adc
sub
inc
les
xchg
mov
scas
lods
in
jmp
popa
out
push
lcall
cwtl
push
dec
mov
mov
adc
jno
data16
lahf
mov
jg
jae
inc
les
cmpsl
sub
enter
push
dec
std
mov
lret
mov
push
out
cmp
jbe
popa
adc
xlat
adc
fdivr
insb
mov
mov
addr16
sub
pop
add
pop
mov
adc
jl
aam
fcmovnbe
outsl
inc
roll
mov
jg
loope
pop
jmp
dec
or
addr16
and
fnsave
or
mov
icebp
js
test
mov
scas
jae
ss
or
jecxz
std
xchg
mov
mov
fistpll
mov
mov
addr16
mov
daa
scas
mov
sbb
rorl
jp
mov
dec
xchg
pop
scas
cmp
push
mov
inc
and
out
pushf
js
or
das
inc
push
adc
cmp
mov
inc
test
call
test
lods
inc
pop
fidivrs
stos
mov
jae
lods
jne
dec
or
and
xor
jle
mov
or
dec
jnp
cmp
out
rcll
adc
xor
fwait
outsl
ret
pop
add
mov
inc
dec
ffree
jl
imul
imul
mov
jo
mov
leave
push
adc
hlt
push
pop
mov
push
cmpsb
outsl
add
sbb
cmpsl
aad
jne
aaa
nop
es
icebp
nopl
lods
jg
jne
mov
pop
stos
inc
and
fnstsw
and
movb
out
pop
icebp
je
sbb
test
lock
push
mov
xor
ret
pop
clc
and
dec
daa
sub
mov
cmpl
jmp
cli
fwait
jnp
rolb
decl
dec
addr16
cmp
insb
mov
out
aaa
icebp
jge
ja
fbld
pop
pop
push
test
out
jg
addr16
sbb
cmpsl
mov
jle
dec
ljmp
jp
cmp
aad
dec
push
enter
iret
in
sub
mov
test
xor
add
outsb
inc
imul
ljmp
gs
stos
xchg
lea
outsb
xchg
sbb
jmp
ljmp
jge
sub
mov
mov
xor
add
addr16
loop
ss
mov
pop
rorl
and
push
inc
enter
jnp
mov
and
loopne
repz
leave
stc
pop
mov
aaa
jp
xor
in
jg
fcomps
inc
dec
lahf
mov
xchg
stos
arpl
and
cwtl
out
xchg
xchg
mov
subb
and
stos
les
xorb
mov
cs
sbb
jecxz
mov
add
xlat
jo
cmp
mov
test
mov
fld
pushf
fidivl
push
ljmp
pop
pop
stc
sarb
pop
mov
jno
repz
sahf
dec
std
addr16
adc
mov
fiaddl
scas
adc
adcb
into
je
les
push
pop
or
mov
cmp
mov
popf
stos
and
leave
pop
rorb
inc
mov
cmp
cmp
sbb
mov
cmp
pop
lock
popa
jns
xchg
sbb
out
testb
loop
mov
push
mov
mov
outsb
out
mov
sbb
xchg
mov
mov
addr16
iret
inc
es
sub
mov
dec
test
sbb
mov
cmpsb
test
ret
ret
mov
cmc
cli
das
jg
sbb
push
cltd
sbb
int3
test
outsb
add
addr16
dec
jb
push
out
or
mov
pop
test
int3
xlat
jbe
in
jb
and
ja
ds
icebp
pop
addr16
mov
or
mov
jno
sahf
rcll
cmpsb
pop
mov
or
inc
mov
aam
clc
aas
push
dec
mov
sub
inc
and
fmuls
mov
mov
xchg
loop
jmp
push
movsl
shlb
in
pop
dec
fstl
cmp
scas
orb
add
lock
je
scas
imul
adc
insb
push
or
mov
push
ljmp
push
das
mov
fisttpl
movsl
call
sahf
jle
pop
test
andb
mov
test
sub
mov
cmp
jle
mov
out
insb
inc
push
dec
cli
sub
rclb
push
jae
jmp
loop
push
add
cmp
mov
ja
inc
or
cwtl
addr16
scas
cmp
dec
jl
shlb
shlb
xor
cmp
rclb
mov
pop
adc
out
out
arpl
xchg
iret
xchg
pusha
xlat
je
enter
mov
nop
add
nop
sahf
cmpsl
fnstenv
mov
aam
add
xlat
decb
enter
dec
sbb
stos
xchg
or
lret
lods
xlat
jl
clc
loope
movsb
pushl
fldt
out
lods
movsl
ljmp
xorl
stos
pop
and
pop
push
cltd
addr16
pop
jo
stos
and
insl
mov
xchg
jbe
and
sahf
mov
inc
mov
sub
cmp
xlat
es
lods
ror
pop
filds
inc
loope
rol
jge
sub
dec
rorb
aas
push
xor
in
pop
loop
rep
scas
pusha
push
jp
cmp
sub
cmpsb
and
dec
into
mov
pop
xchg
jle
and
sbb
jl
add
repnz
fsubrl
dec
insl
xchg
jbe
mov
fcomps
mov
clc
dec
pop
outsb
divl
add
cmpsl
xchg
jae
push
adc
sbb
xor
mov
push
jno
mov
sub
stc
cmpsl
pop
mov
jmp
sbb
dec
push
fnsave
ss
fdivs
cmp
fidivrl
xlat
xor
lret
cld
sbb
mov
clc
out
xor
imul
pop
mov
pushl
add
out
rorb
sbb
inc
inc
and
pop
lods
mov
and
mov
or
in
mov
add
xor
inc
inc
jmp
jnp
xor
cmpsl
fistps
mov
add
rcll
or
lds
pop
mov
out
add
sbb
in
leave
ljmp
sbb
adc
xor
addr16
loopne
jb
mov
mov
adc
mov
call
cmp
dec
push
negl
mov
or
mov
jbe
enter
mov
mov
sbb
pop
fs
mov
cmpsl
sbb
push
into
xchg
push
jae
andl
push
xor
mov
sbb
cld
decb
mov
dec
icebp
or
mov
jmp
dec
pop
test
arpl
fdivp
mov
xlat
shlb
sbb
loop
mov
stc
pusha
mov
movsb
int3
test
pop
pop
ss
jmp
push
add
dec
push
dec
jg
roll
fs
movsl
test
mov
and
xlat
or
mov
or
ret
push
mov
mov
shr
imul
mov
pop
jp
mov
xchg
mov
lds
or
es
cmp
adc
data16
add
inc
adc
stos
mov
rclb
in
lods
scas
fsubs
push
pop
addr16
push
jo
dec
mov
insl
adc
cwtl
dec
mov
sub
mov
sbb
xchg
ret
lods
jecxz
xor
sub
and
xchg
xchg
mov
xchg
push
mov
jno
mov
int
add
adc
and
xlat
xchg
mull
push
sub
sub
imul
inc
xchg
pop
jnp
xchg
mov
mov
pop
loope
push
shlb
gs
in
pop
loope
mov
out
rorb
cmp
xor
xchg
pop
or
xor
imul
mov
sub
test
scas
jnp
pop
in
sub
xchg
test
jnp
fisttpll
xchg
xlat
cmp
mov
shrb
out
xlat
jae
inc
cmp
pop
out
out
pop
test
repz
mov
adc
mov
mov
or
sub
sub
in
adc
pop
incl
xor
add
ljmp
adc
dec
fs
adc
inc
add
shrb
pushf
mov
movb
out
inc
sbb
lret
xchg
xlat
xchg
pusha
cltd
pop
int
jg
mov
shrb
lods
clc
jg
movsl
xchg
sbb
xchg
movsb
ds
int
fcmovnb
sarb
cmp
xchg
repz
xor
mov
loop
movsl
cltd
jnp
popa
cmpsl
shll
shlb
push
enter
mov
adc
jmp
enter
adc
and
mov
addr16
jnp
xchg
roll
mov
ja
inc
shl
inc
loopnew
mov
dec
out
mov
or
int3
lock
xlat
je
orl
sarb
add
adc
xor
cs
mov
shl
mov
out
mov
lcall
sub
add
jo
mov
mov
jg
cltd
jo
mov
out
mov
mov
lods
outsl
cmp
xchg
into
addr16
cmp
mov
ljmp
xlat
testl
xor
dec
das
addr16
shrl
ficompl
jo
stos
dec
inc
sbb
sub
ja
cmp
das
stos
mov
test
sti
movsb
and
mov
sub
push
mov
xchg
aaa
gs
jmp
daa
imul
insb
fs
repz
and
push
int3
jno
mov
fdivrl
pop
test
andl
push
add
or
xchg
lret
lds
repz
fs
push
fildl
sub
fidivl
xor
adc
jp
cmp
mov
out
cmp
cmp
aaa
pop
cmc
xlat
push
cmp
or
fmuls
test
adc
mov
mov
rorb
lret
daa
popa
iret
movsl
jno
jno
cli
lsl
popaw
gs
add
pop
pop
cld
adc
pop
enter
rcll
sbb
sbb
push
mov
pop
mov
xorb
adc
cmp
std
pop
xchg
xchg
fsubs
xor
push
mov
mov
mov
xchg
out
add
jecxz
xchg
cmp
inc
out
popa
cmp
mov
stos
fbstp
xor
or
mov
testb
xor
push
ficoml
hlt
xlat
mov
sti
cmp
or
add
arpl
sub
jae
or
outsl
xchg
fstps
push
jns
rcl
divb
mov
mov
and
pop
sub
jo
mov
scas
push
dec
jl
fisubrl
loopne
pushf
enter
mov
sbb
sub
insl
sbbb
xlat
call
xor
or
cwtl
xlat
inc
mov
jnp
repz
mov
rcll
pop
mov
xlat
add
fnstenv
iret
xor
mov
mov
cltd
pop
flds
xchg
ljmp
scas
rolb
push
dec
inc
aas
enter
lods
mov
rcl
iret
arpl
pop
xchg
sbb
subl
sysexit
mov
pop
outsb
decb
not
and
scas
pop
mov
jnp
mov
mov
xchg
pop
cmpsl
jno
add
xchg
mov
xlat
mov
pop
mov
test
loope
scas
pop
addr16
inc
ret
or
popf
mov
push
inc
xchg
cmp
sbb
xlat
pusha
xchg
ror
daa
add
into
iret
and
bound
in
inc
mov
push
mov
sbb
xchg
sbb
xchg
notl
addr16
gs
dec
mov
inc
sub
or
imul
call
hlt
dec
push
dec
push
or
inc
cli
xchg
into
or
and
xlat
pusha
test
xor
or
ret
int3
mov
addr16
add
addr16
push
loop
lods
loopne
jl
mov
sub
shrl
jne
pop
negl
push
in
sbb
lret
dec
cmp
iret
insl
test
ljmp
lret
call
popa
or
mov
imul
sub
sbb
sub
jl
xor
dec
shll
cmpb
pop
icebp
pop
jns
mov
loope
ds
incl
pop
xlat
test
out
jl
mov
jns
mov
adc
sub
out
negl
dec
test
mov
dec
pop
in
fwait
adc
xchg
aas
cmp
iret
jle
mov
popa
fnsave
sahf
int
add
jns
mov
add
lret
pusha
leave
addr16
sub
data16
in
jmp
cmc
outsl
int
and
jb
movsl
jb
leave
pop
xchg
adc
mov
mov
arpl
dec
add
push
dec
dec
mov
xchg
arpl
aas
pop
pop
pop
scas
mov
mov
movsl
test
je
mov
inc
testb
cmp
mov
mov
call
daa
loope
mov
in
cwtl
in
icebp
pop
shlb
clc
sarl
inc
mov
out
in
sub
test
mov
ds
inc
mov
sub
jbe
lret
inc
pop
push
adc
pop
mov
cmc
enter
addr16
fnsave
mov
pop
loope
fcoms
adc
sub
orl
lret
jecxz
xlat
incb
and
xlat
js
cmpsb
cmp
xchg
das
push
add
push
cmp
in
fisubs
cmp
lret
jmp
mov
mov
mov
dec
out
testl
jmp
sub
fdiv
sub
addr16
xor
stos
and
xlat
sub
sbb
xchg
lret
sub
xlat
popa
sbb
add
sub
and
int3
pop
push
stos
ss
shrl
cmp
jp
test
cmp
pop
test
dec
out
sti
mov
addr16
mov
inc
or
and
aaa
mov
and
lret
push
mov
sar
jnp
ret
inc
pop
loope
ret
inc
and
fldt
dec
and
add
xchg
notb
sub
scas
addr16
es
jae
in
mov
inc
mov
push
inc
insl
in
ficoms
jg
mov
inc
ret
jmp
pushf
adc
xor
adc
jecxz
xor
fsubs
roll
test
daa
lea
inc
xor
add
inc
clc
roll
and
jl
jmp
xlat
inc
fucomp
mov
jg
mov
mov
sbb
repz
fidivrl
xorb
xor
pop
mov
sub
les
and
je
inc
mov
in
jle
popl
jp
mov
jo
sbb
addr16
mov
cmp
outsl
jge
lock
mov
mov
enter
sub
jle
pop
loopne
stos
xchg
xor
dec
mov
mov
popf
dec
jmp
mov
push
hlt
outsb
xchg
xor
inc
mov
inc
mov
add
mov
pusha
imul
in
daa
cmp
aas
and
sbbl
mov
lahf
mov
mov
inc
push
stos
and
dec
xlat
add
sub
fmulp
pop
mov
mov
jp
outsb
repnz
int3
nop
push
adc
mov
xchg
mov
jge
mov
sbb
sub
test
adc
add
xor
xor
aas
jb
mov
or
out
jmp
rorl
lock
imul
mov
and
mov
shll
jg
cld
xor
inc
push
jecxz
adc
jns
inc
inc
repz
mov
repnz
icebp
insb
idivb
pop
mov
pop
xchg
jbe
push
sub
xchg
lret
inc
stos
fisttpll
push
scas
mov
dec
ds
ret
sbb
addr16
sub
cltd
ss
lds
adc
pop
movsb
inc
xlat
jae
pop
lcall
inc
mov
scas
xchg
addr16
stc
ffreep
fwait
xchg
cli
pop
mov
add
push
add
test
cmp
loop
jmp
je
inc
adc
cmp
xlat
mov
aas
cltd
and
sahf
pop
mov
sbb
or
push
cmpsl
je
daa
mov
xchg
mov
shrb
out
and
sbb
aaa
lahf
lahf
repz
xchg
add
inc
sub
outsl
pushf
stos
int3
fwait
test
aad
mov
mov
movhps
mov
hlt
xchg
jmp
pop
inc
loopne
push
cmp
pushf
push
sub
enter
pop
adc
fsubl
clc
orb
into
cwtl
aam
mov
adc
leave
pop
cld
adc
mov
sub
ds
daa
adc
lods
mov
or
outsb
cmpsl
jb
repnz
cwtl
pop
xlat
je
pop
dec
out
xor
shl
pop
xchg
addr16
shrl
or
pop
out
pop
loop
push
mov
lret
jns
mov
sbb
les
dec
mov
cli
mov
shll
dec
jecxz
js
fcomps
fcompl
inc
mov
mov
mov
inc
in
mov
outsb
mov
in
dec
add
cmpsl
aad
pop
fwait
add
icebp
loop
sub
jecxz
and
mov
adc
push
push
je
test
cmpsb
add
lcall
leave
adc
fcomps
inc
mov
xor
inc
sub
sbb
push
std
pushf
out
inc
or
mov
mov
sbb
mov
test
ds
mov
cmp
mov
lock
addr16
sbb
pushf
cld
fcoms
or
aam
adc
sbb
xorl
test
std
mov
ret
adc
cmp
popf
sbb
adc
pop
das
mov
rorb
sub
icebp
test
push
add
daa
add
jmp
add
push
hlt
test
cmp
sarl
xlat
jg
xor
lods
lcall
shrb
mov
outsb
ds
test
fsts
pushf
lods
push
or
push
cmp
pop
mov
xchg
push
dec
mov
sti
insl
jle
mov
hlt
addr16
in
cmpsb
cmp
jge
and
out
mov
out
std
mov
mov
jle
push
adc
xchg
lahf
xlat
insl
lea
faddl
das
mov
in
enter
add
pusha
add
scas
mov
rorb
aaa
aad
jmp
sbb
test
je
repnz
inc
xchg
xor
mov
je
sti
pusha
leave
or
xlat
stc
in
xchg
mov
mov
hlt
xor
mov
int
mov
sub
pusha
imul
mov
push
mov
sti
mov
out
xchg
xchg
and
repnz
xlat
in
lret
int3
mov
pop
outsb
roll
or
js
cmc
pop
cmp
mov
int3
mov
movb
sbb
mov
jb
xchg
sti
lahf
mov
xlat
fisttpll
mov
ja
stos
call
and
and
mulps
and
outsb
fld1
pop
mov
stos
leave
test
mov
outsl
mov
pusha
cmpsb
rcrb
imul
push
lret
fs
mov
jmp
sub
test
xlat
test
movsb
shlb
and
push
mov
js
lahf
jne
add
daa
sub
lea
vsqrtps
push
popa
add
jle
lods
les
or
mov
mov
mov
addr16
jbe
mov
push
mov
xchg
bound
mov
nop
pop
push
mov
dec
es
cli
push
mov
adc
adc
rcl
bound
sub
fiaddl
cmp
out
sbb
pop
mov
cmp
fsubl
aad
add
shlb
jge
mov
dec
popf
into
xlat
dec
popf
int
xchg
int3
stos
jge
mov
imul
lret
aaa
scas
pop
push
pop
cltd
sbb
add
aaa
scas
adc
pop
jno
es
lahf
fldenv
movsl
sub
call
push
clc
clc
addr16
mov
lock
xchg
xor
mov
cmp
loopne
sarb
imul
dec
pop
sbb
ds
xor
inc
xlat
adcb
xchg
adc
mov
sub
rcr
xlat
ret
sub
xlat
out
xchg
mov
xor
sahf
flds
fmull
push
lock
xor
adc
mov
das
mov
pusha
xchg
cmp
mov
inc
and
in
lods
dec
ret
jl
mov
jl
es
test
jbe
aas
jle
movsb
ret
xchg
insb
and
ret
scas
xor
mov
je
xlat
xchg
shlb
mov
mov
xchg
mov
sbb
xchg
divb
lret
xor
mov
mov
mov
jnp
aaa
sbb
mov
daa
int3
jae
int3
popf
fstps
pop
pop
mov
sbb
aam
shll
loope
in
fld
aam
pop
push
pop
rclb
mov
xchg
scas
mulb
pop
xor
xor
addb
mov
int
mov
into
and
aad
adc
testl
stos
hlt
rcl
push
pop
push
sub
pop
mov
cmc
mov
inc
push
xchg
xchg
fstps
xlat
rcr
aam
inc
aaa
stc
xchg
mov
subb
test
xchg
sbb
and
aaa
leave
mov
push
xlat
test
nop
pop
mov
fcmovu
jp
mov
adc
xor
mov
inc
or
mov
cmpsl
sub
mov
mov
push
xorb
inc
fldt
outsb
jle
std
popf
adc
xorb
pop
pop
add
push
out
mov
and
lock
xchg
cmpsb
lea
test
in
mov
mov
xchg
ret
adc
dec
xlat
mov
push
cmpsl
mov
mov
pop
lea
pop
cltd
test
push
jnp
cwtl
rcll
mov
fs
aaa
xlat
imul
push
fcoml
xchg
icebp
mov
and
addr16
test
inc
insb
test
pop
flds
out
movsb
cs
cmc
clc
das
addl
mov
push
mov
mov
dec
mov
ret
xorb
es
adc
pop
and
sub
popf
test
and
mov
icebp
ror
and
sub
and
inc
ret
fcomps
leave
or
pop
std
shl
daa
mov
das
clc
mov
mov
mov
dec
push
mov
jecxz
mov
shll
and
cmp
rcll
sub
xchg
push
jge
push
das
ja
fistpl
lock
lcall
xor
push
loop
sbbb
or
mov
mov
movsb
mov
or
hlt
xchg
stc
mov
inc
imul
imul
jne
sub
arpl
sti
mov
outsl
fst
aam
pop
test
shlb
enter
jmp
xor
lret
out
mov
cwtl
int
gs
mov
movsl
jns
daa
sbb
cs
sub
xor
or
int3
mov
gs
xor
mov
mov
pop
out
gs
mov
push
cli
xchg
pop
enter
adc
or
mov
add
and
aaa
or
jb
sub
mov
and
mov
cmp
xchg
rcrl
jae
inc
outsb
fwait
xlat
std
jl
dec
das
or
sahf
sbb
pop
mov
cmp
loop
shll
dec
cltd
data16
mov
push
fdivrs
xor
jmp
sti
hlt
inc
mov
jbe
pop
bound
adc
call
mov
mov
mov
adc
divb
ss
sub
or
dec
das
inc
imul
pop
jne
cmpsb
mov
xchg
add
hlt
sub
push
mov
jmp
jecxz
dec
adcb
mov
add
stos
leave
data16
rcrb
addl
out
and
mov
pop
and
xor
cmc
arpl
popf
sbb
mov
outsb
inc
pop
mov
outsb
and
adcl
inc
mov
xorb
adc
adc
fwait
cmp
adc
orl
fbld
dec
jo
fwait
daa
or
mov
pop
scas
cmp
cli
cmovno
das
jmp
adc
mov
or
jl
jne
lods
test
push
aam
les
jg
jns
mov
push
cmp
clc
xlat
mov
imulb
add
and
jns
xor
test
popf
or
inc
in
sarl
pop
and
sub
in
int
jno
push
addr16
xor
outsl
cmpsb
inc
dec
fmull
xor
cmp
mov
mov
out
xlat
jb
fadds
cmp
jbe
mov
insb
mov
popa
movsb
push
insb
mov
pop
scas
mov
mov
ljmp
mov
jecxz
leave
mov
xor
addr16
jb
mov
pop
fdivr
pop
cwtl
jo
mov
mov
sub
cmpsb
out
es
dec
jmp
push
roll
les
fsubrs
or
lea
dec
inc
jle
stc
jl
pop
aas
push
mull
addr16
dec
adc
pusha
lcall
stos
cmpsb
jle
test
jecxz
iret
scas
mov
jns
push
insb
out
jmp
mov
insb
imul
dec
call
rorb
ret
push
cwtl
sub
add
dec
addr16
adcb
dec
inc
mov
notb
shll
cmp
addr16
lds
fistpl
mov
or
cmp
sub
dec
data16
imul
mov
push
inc
lock
xlat
pop
in
sub
enter
pop
dec
and
jnp
jne
shll
int3
insb
mov
les
push
je
ja
ja
pushf
data16
iret
pop
loopne
lods
rcr
mov
cmpl
aaa
xlat
pop
push
ret
pop
xor
jl
imul
movsb
xchg
sub
fcoms
sbb
pop
imul
push
jae
or
sbb
mov
mov
aaa
jno
shlb
addr16
cmp
addl
push
test
dec
insl
xchg
xor
xlat
sub
mov
cmc
shlb
push
dec
loopne
addr16
and
sti
mov
xor
divl
addr16
pop
mull
push
xchg
daa
cmp
xlat
xchg
jle
addr16
fs
add
enter
hlt
push
dec
lret
setae
pop
in
int
addb
mov
lret
cmpsl
sub
rcl
cwtl
inc
outsl
adc
jg,pt
inc
call
mov
pusha
outsb
test
cli
loope
xor
mov
mov
icebp
pop
call
addr16
jno
movsb
imul
pop
sbb
mov
addr16
add
mov
popf
imul
js
jmp
mov
sbb
sub
aas
in
mov
push
aam
jnp
mov
cmc
push
pusha
aad
call
cmp
pop
dec
fmull
ret
dec
mov
sbb
je
movsb
cmpsl
mov
xlat
jg
mov
test
mov
test
or
lods
push
adc
mov
add
ss
xchg
mov
mov
ret
xchg
je
dec
rcrl
cld
mov
cmpl
mov
mov
lret
jns
pop
jle
xchg
lods
ljmp
dec
mov
movsl
jbe
outsb
inc
pop
jno
daa
data16
pop
sub
lahf
and
push
mov
sbb
fistpll
xor
popa
pop
mov
sub
lcall
lods
and
sbb
adc
xchg
lods
lret
mov
jne
pop
loopne
cli
or
or
xor
push
mov
movsl
pop
lahf
ljmp
inc
xor
enter
mov
cmp
cmpsb
jecxz
pop
jg
rol
sub
mov
cmpsl
sahf
push
jno
adc
inc
push
int
xlat
neg
in
jp
inc
mov
push
enter
add
lret
call
in
mov
cmc
inc
andb
imul
dec
push
adc
shll
data16
imul
add
rclb
addr16
addb
or
mov
es
nop
mov
jle
cmpb
mov
jb
sub
add
cld
jecxz
mov
jb
xchg
outsb
jns
mov
lret
cmpsl
call
jp
mov
xor
add
or
addr16
sbb
push
xchg
mov
or
jb
mov
mov
mov
movsl
movsl
push
xchg
push
mov
leave
mov
outsb
adc
lret
outsl
push
jl
js
adcl
mov
cmp
iret
addr16
pusha
xchg
repnz
cmpsb
mov
push
xchg
shr
inc
cmp
xlat
jmp
cmc
and
mov
mov
mov
lret
rcrl
imul
pop
insl
sbb
mov
outsb
push
mov
sub
xchg
loope
mov
add
scas
cmp
push
popa
out
lods
popl
out
insb
test
fdivl
outsb
jne
mov
fwait
sbb
mulb
addr16
adc
mov
xchg
and
mov
addr16
popa
sub
mov
fwait
push
fs
call
in
mov
lret
rolb
or
xchg
and
add
push
out
adc
pop
sub
mov
sbb
add
mov
pusha
repz
pop
dec
sbb
pop
add
pop
dec
dec
call
jns
xor
add
push
ret
sub
mov
subb
mov
ret
mov
sub
push
push
jno
mov
ja
push
iret
sbb
and
data16
roll
nop
pop
addb
mov
and
add
enter
xor
sbb
add
outsb
nop
test
cmpl
into
outsb
mov
call
enter
fdivl
pop
mov
js
xor
or
mov
loope
cwtl
cld
mov
popa
inc
jns
fcomp
sti
jnp
addr16
xchg
cmova
xchg
push
jb
jg
cmpsl
leave
xor
addr16
adc
ljmp
pusha
push
xchg
and
aaa
andb
ds
fsub
mov
mov
adc
pusha
cmc
xlat
mov
arpl
and
xor
xchg
pop
lods
js
mov
rcll
outsb
repz
test
shlb
sub
cmpsl
mov
mov
or
push
les
jecxz
adc
mov
xacquire
stc
push
inc
lret
jns
movsl
cld
dec
aaa
mov
mov
sbb
fmul
xchg
mov
sub
adc
xlat
or
cld
out
lret
pop
mov
sbb
scas
test
addr16
ja
push
cmpsl
pop
push
mov
int3
dec
fs
fwait
pop
jmp
mov
xchg
mov
add
js
out
iret
fs
ret
xchg
dec
mov
push
mov
out
xlat
cmp
or
jmp
sub
jle
addr16
xor
pop
test
jp
mov
sbb
call
lret
and
mov
dec
mov
imul
lcall
sbb
filds
lahf
mov
les
cmc
pop
in
jmp
mov
sub
mov
jo
jnp
addr16
lret
sub
mov
jnp
pop
mov
sub
cmp
in
mov
pop
adc
xor
pop
xchg
movsb
daa
mov
xchg
push
mov
pop
cmp
jle
fisubs
cmp
mov
xor
sbb
sub
jae
js
mov
roll
mov
push
add
mov
lods
mov
xrelease
mov
pop
out
test
fsubrp
xlat
std
sbb
ret
sbb
xlat
stos
mov
adc
andb
mov
mov
insl
jns
mov
mov
in
ret
xor
and
mov
cmp
cmp
push
push
lret
lret
scas
aas
sub
mov
mov
fistps
pushf
push
imul
scas
sbb
xlat
jno
mov
jp
clc
ss
inc
dec
mov
test
jl
test
mov
js
lods
shlb
mov
push
sub
and
inc
aam
or
mov
pop
dec
test
inc
mov
addr16
xchg
or
mov
and
pop
jge
dec
stos
loopne
xchg
stos
mov
jle
push
jle
ja
cmpsb
pinsrw
xor
mov
sti
pop
push
fadd
pusha
push
shll
je
xchg
aad
pop
sbb
hlt
scas
fldcw
sysret
vprotw
xchg
mov
mov
pushl
jmp
xor
mov
nop
sbb
push
pop
out
sbb
mov
fucomp
call
inc
mov
insb
je
addr16
xor
gs
hlt
mov
fcomps
jno
pop
xlat
test
inc
andb
mov
test
aas
mov
sahf
rcr
fstl
or
dec
dec
ss
icebp
mov
movsb
mov
outsb
mov
imull
mov
xchg
ds
inc
push
aas
mov
pop
loop
rcl
inc
or
xchg
arpl
jg
ret
xchg
jge
push
pop
push
jo
lret
mov
add
mov
dec
cmp
sahf
push
ret
xlat
inc
inc
sub
mov
mov
addr16
lods
mov
outsl
mov
add
and
fcomps
mov
stc
mov
lahf
lods
rcr
wbinvd
ret
push
lahf
adc
push
xchg
xor
mov
mov
rorl
xlat
lods
in
push
mov
cmpsb
pop
sbb
in
inc
fisubs
scas
stc
mov
mov
enter
test
shrl
fcoms
addl
jb
xor
xor
dec
pusha
fbld
cmp
pop
mov
xchg
inc
pop
cmpsb
lret
and
mov
in
sub
pcmpeqd
test
testl
in
inc
fs
lods
nopl
push
and
jmp
and
ljmp
daa
sub
cld
rcr
mov
add
stos
mov
ss
fistpll
pop
sarl
add
jb
cli
cvtdq2ps
lcall
int3
mov
daa
and
pop
push
mov
out
mov
xor
cmp
mov
out
aas
and
add
mov
icebp
out
adc
add
pusha
sahf
sbb
push
decl
inc
mov
int
add
or
addr16
mov
push
popa
jns
mov
mov
jle
mov
xchg
xlat
lret
mov
mov
push
or
push
add
outsb
mov
push
insb
out
sub
cs
loopne
int
mov
push
sbb
les
push
xchg
sbb
jnp
inc
pop
in
cmpsl
ficompl
and
aad
outsb
js
mov
push
mov
dec
out
nop
fmuls
mov
mov
xchg
lods
mov
adc
mov
adc
fs
lea
dec
cmp
sar
lock
movsb
mov
xchg
loop
pop
mov
mov
lods
mov
or
dec
jl
mov
lret
xchg
mov
xlat
pop
sti
icebp
mov
in
jo
sub
sub
dec
jle
adc
or
jne
lret
aas
subb
in
xorl
mov
test
inc
dec
jo
jp,pn
loope
fdivs
add
popa
stc
and
ja
cwtl
gs
in
lock
mov
outsl
cli
ret
xchg
cs
je
add
lea
mov
inc
sbb
rcrl
fnstsw
sub
mov
dec
je
xchg
es
dec
jae
gs
sbb
test
xorb
sbb
inc
dec
sub
mov
lea
mov
sbb
cmpsl
sahf
into
push
sbb
adc
xor
inc
pop
and
add
sbb
insb
inc
addr16
pop
test
cmpxchg
dec
and
xlat
jle
mov
push
ljmp
jg
loope
pop
pop
addr16
push
es
loop
push
jl
out
push
aaa
sub
or
loop
cld
xor
sub
add
ret
mov
ss
enter
sbb
fists
scas
fildll
mov
repz
out
push
sti
outsl
mov
inc
dec
jecxz
loopne
int
mov
push
ljmp
jp
imul
lds
push
pop
addr16
xor
jo
ret
or
in
mov
sarl
inc
sub
mov
xlat
dec
jns
xchg
pop
je
or
test
sbb
imul
xor
push
sbb
dec
enter
cmpb
stc
mov
aam
xor
shll
dec
mov
mov
xor
pop
subl
or
testl
mov
mov
mov
int
cs
push
add
sub
sbb
femms
and
mov
xchg
cmp
movsb
insb
addr16
pushf
cmp
movsl
push
in
mov
popf
pop
jb
sarl
mov
out
cmp
test
jge
pushl
loopne
jmp
add
shr
clc
mov
xchg
addr16
lea
xor
call
fs
xlat
aaa
push
mov
pushf
mov
faddl
dec
pop
mov
pop
sub
in
jl
bound
mov
insl
xlat
jg
bound
or
add
mov
mov
into
push
jmp
pop
out
ret
pop
out
cwtl
pop
sbb
cmp
js
push
fwait
ja
fcoml
lods
call
fstp
cmp
movsb
into
das
les
jo
mov
adc
pushf
mov
push
xlat
test
dec
movsl
sub
jo
cmp
les
hlt
jmp
sub
scas
dec
stc
aam
jb
addr16
inc
pop
bound
pop
shl
xor
sti
inc
and
dec
sub
orl
dec
mov
fadd
cmp
insb
push
addb
cmpsl
sbb
js
jb
ja
lret
daa
sbbb
je
mov
int
je
popf
lret
cmpsb
js
jbe
addr16
lcall
nop
cmpsl
stos
pop
dec
aaa
mov
sbb
repz
shr
pop
fadd
inc
push
xchg
test
push
int3
int3
dec
idivl
xlat
add
les
push
xlat
outsl
cld
pushf
cmp
shll
xchg
cmp
js
int
jo
in
pop
push
cs
repz
mov
add
int
or
adc
lret
fucom
sub
mov
jmp
ljmp
sub
sbb
cmp
lret
arpl
cs
mov
cmp
sub
lret
scas
pop
mov
int3
lcall
xlat
add
ffreep
imul
fwait
inc
mov
fiadds
mov
jb
iret
dec
mov
add
push
dec
stos
dec
aaa
jg
ss
sbb
push
vmread
mov
out
pop
pop
shll
das
sub
orl
mov
aas
rcrb
jmp
xlat
loop
xor
jp
mov
pusha
adc
adc
dec
pop
insl
insl
movsl
sub
js
aam
mov
or
inc
pop
xor
sub
dec
push
mov
imul
addr16
inc
push
inc
mov
sbb
aad
popa
jo
xlat
adc
popf
sarb
pop
out
or
inc
sarb
cmpsb
rol
sub
lods
lods
mov
jb
out
mov
addr16
dec
push
jle
push
mov
movsb
adc
cmp
rorb
cmp
mov
insb
repz
mov
jmp
test
mov
inc
rcrb
xlat
xor
mov
xchg
xchg
xchg
test
xchg
fldt
jns
fsubs
scas
cld
push
lds
mov
fldt
fcmove
sub
fildll
cltd
je
mov
aad
int3
mov
andl
fists
lcall
cmp
adc
mov
negb
dec
mov
fs
scas
mov
int
pop
scas
mov
mov
int
sub
mov
mov
inc
fcmove
in
inc
out
jl
mov
mov
cmp
dec
testb
in
data16
cmpsb
or
lcall
incl
dec
sbb
xchg
enter
jb
push
xchg
addr16
mov
cmpsl
xchg
test
push
sub
in
js
lods
fcmovu
sbb
add
in
adc
xchg
mov
int
inc
mov
lahf
shrb
aad
mov
js
push
sub
std
fimull
mov
aaa
test
aam
mov
jb
testb
and
ljmp
xor
lcall
ror
push
add
pop
dec
sbb
mov
mov
test
xlat
pop
jge
movsl
xor
pop
in
movsl
in
addr16
int
add
or
push
mov
mov
test
out
mov
mov
clc
stos
ret
sub
lret
daa
add
fildll
lods
xchg
loop
mov
ret
je
les
jecxz
mov
dec
lret
lods
cli
mov
iret
mov
dec
pop
cmp
xchg
inc
and
jb
mov
cmc
movsb
testb
in
add
sub
cwtl
mov
mov
loop
sbb
loope
sti
jbe
pop
scas
ljmp
and
jle
and
cmc
scas
sbb
or
gs
rorl
xchg
adc
mov
pushf
aaa
cld
or
add
outsb
mov
lcall
jl
hlt
pushl
fnstcw
sub
fnstenv
iret
dec
adc
fs
in
mov
adc
ss
repz
xchg
sub
fistpll
shrb
enter
stc
add
push
dec
push
adc
pop
jl
xor
in
pop
mov
es
push
scas
scas
dec
imul
ss
sbb
lods
repz
pop
xlat
jb
xchg
mov
push
sarl
in
pop
outsb
sub
adc
xor
sbb
mov
rcr
push
les
andb
outsl
pusha
or
enter
mov
jmp
mov
sbb
mov
push
mov
cltd
or
or
mov
fcmove
pop
adc
push
mov
cmp
push
or
pushf
mov
and
jae
pop
pop
das
adc
repnz
cmp
or
sbb
cmpsl
fsubs
xchg
mov
pop
push
inc
insl
and
ss
xor
lret
xor
loope
xor
mov
and
mov
xlat
xlat
jne
sbb
mov
in
cmp
mov
fisubl
scas
aaa
adc
pop
mov
into
jl
and
sbb
rep
mov
out
jnp
int3
inc
aam
test
lret
xchg
cs
mov
dec
mov
jno
jecxz
shr
sbbb
cmpsl
jmp
inc
andl
adc
xlat
dec
adc
fldl
mov
adc
mov
mov
mov
push
mov
xor
pop
dec
xchg
xchg
xlat
jge
loopne
enter
or
jbe
fildl
or
mov
push
pop
call
jl
add
adc
fs
inc
lods
and
pop
mov
test
add
jg
adc
push
or
add
push
cmpsb
xlat
mov
orl
jge
and
sbb
and
mov
mov
sub
jbe
enter
mov
sbb
push
stc
and
push
pop
add
mov
dec
xchg
lds
arpl
mov
push
and
movsb
mov
addr16
clc
mov
cmp
mov
dec
fists
in
leave
ret
push
sub
push
test
loop
das
ja
xlat
add
cltd
fisttps
fldt
sti
addr16
jmp
sbb
dec
loopne
addr16
mov
mov
out
adc
mov
jmp
repz
adc
insb
sub
pop
mov
mov
adc
popa
out
push
jecxz
add
pop
sub
push
lcall
xchg
wbinvd
ret
lods
insl
mov
sbb
sbb
loope
jne
mov
jmp
sbb
jecxz
scas
sub
add
gs
imul
xlat
test
pusha
or
outsb
scas
lds
mov
cmpl
xchg
xlat
imul
cmp
addr16
cmp
xchg
fisubs
xchg
mov
lahf
mov
mov
inc
xor
int
scas
sub
mov
clc
xchg
inc
fdiv
cmc
mov
or
adc
in
adc
push
jg
loopne
out
loop
pop
ja
cmp
jo
shrl
lods
cli
xor
fwait
js
scas
cmpsl
push
xchg
std
andb
test
or
addb
adc
mov
push
pop
icebp
repnz
sub
loop
shlb
dec
loop
mov
xor
xor
push
xlat
inc
push
mov
in
insl
in
je
sbbl
mov
mov
imul
int3
or
add
xor
push
test
scas
mov
xlat
add
jmp
call
add
divb
mov
push
pop
or
div
aam
leave
popf
pop
sub
mov
xor
addr16
fiaddl
sub
gs
pop
jle
mov
add
mov
mov
loopne
push
shll
icebp
fs
mov
mov
mov
xlat
lcall
jae
test
lcall
add
int
xor
jno
xlat
stos
and
jns
and
mov
ja
dec
push
int3
int
mov
xor
insl
or
push
adcb
pop
fidivrl
mov
mov
mulb
mov
pop
popa
jl
mov
lds
std
xlat
xor
xchg
inc
jb
mov
sub
fs
xor
int
adc
out
push
mov
loop
push
jns
adc
xlat
xchg
cli
push
sbb
popa
jmp
cmp
adc
or
outsl
cs
jno
loopne
xor
repnz
sbb
sbb
js
or
outsb
pop
fcmovnbe
jbe
push
into
addr16
xor
push
jg
and
cmc
insl
or
das
popf
repz
ja
xor
jns
addr16
adc
test
aas
test
lcall
arpl
enter
addr16
and
fcos
mov
mov
xor
lcall
pop
adc
jge
jo
xor
sahf
add
stc
mov
inc
adc
pop
fmuls
addr16
ds
mov
roll
or
mov
add
mov
sbb
xlat
stc
imul
inc
sub
mov
add
sub
or
aas
dec
or
fs
fsubrs
xchg
imul
mov
mov
or
imul
jmp
shrb
loopne
jecxz
jp
loopne
addb
fidivrl
jno
jmp
test
and
leave
movsb
aaa
subl
dec
pmaxsw
push
in
pop
stos
lret
sbb
mov
push
popf
sub
out
push
cli
mov
pop
lock
xchg
mov
mov
lea
cmpsl
in
inc
mov
mov
mov
scas
sbb
xor
es
mov
mov
iret
mov
fstps
cmc
sbb
sbb
testl
lods
xchg
and
daa
mov
dec
cmp
add
add
pop
sbb
rolb
ret
adc
inc
push
out
lods
and
sbb
sub
jne
fldcw
or
call
cmpsl
mov
cmpsb
cmp
xchg
push
add
shll
movsl
pusha
mov
in
cs
mov
stos
sub
push
rorb
enter
pop
jmp
xchg
test
mov
pmulhuw
lret
xlat
sahf
xchg
aaa
cwtl
test
ret
inc
cmp
addr16
int3
ret
mov
sbb
enter
test
xchg
mov
ret
js
aas
aas
nop
iret
mov
lcall
in
jl
notb
lret
cmp
dec
fidivs
sub
pop
fdivrl
cld
hlt
addr16
xchg
mov
push
or
mov
lret
mov
cli
dec
movsb
mov
idivb
movsb
enter
mov
adc
mov
add
mov
jmp
xlat
xor
mov
popa
xchg
mov
fisttpll
and
shr
pop
mov
mov
mov
pop
call
in
shrl
jle
hlt
rorl
xor
out
add
jns
mov
mov
lea
push
jno
mov
stc
repnz
int3
stos
mov
add
mov
inc
and
xchg
loop
fwait
lods
xlat
das
pop
push
jo
mov
mov
dec
adcl
pusha
push
out
xchg
js
mov
pop
inc
leave
pop
in
push
jbe
and
mov
mov
sahf
scas
adc
mov
movsb
mov
jnp
cltd
jnp
lock
sti
int
mov
cvtpi2ps
rolb
push
xor
xchg
pop
xlat
nop
addl
stc
cmp
inc
pop
add
les
rcr
xor
repz
sbb
or
xlat
sbb
mov
dec
inc
loopne
and
test
shrb
jae
jecxz,pt
adc
xchg
lds
das
sti
shlb
mov
jns
mov
xor
jno
insb
imul
mov
jne
hlt
kandnb
cli
mov
cmpsb
add
mov
popf
push
jbe
les
movsl
lods
cmpsl
mull
aas
leave
ljmp
cmp
fisttpl
add
xor
repnz
ret
pop
ljmp
fsubs
mov
xor
fucom
out
ss
cmp
mov
mov
iret
push
mov
xchg
mov
mov
imul
mov
push
lods
push
mov
fs
push
inc
mov
jb
adc
xor
pop
pop
les
push
adc
cmc
rep
imul
jnp
leave
fs
mov
bound
pop
outsb
pop
mov
jnp
adc
and
aad
and
mov
js
dec
repz
xor
pop
ljmp
push
adc
xor
repz
pop
pop
ja
push
and
sbb
dec
mov
xchg
dec
pop
jne
sar
inc
add
jns
xorb
mov
dec
mov
lea
or
xlat
sbb
sbb
mov
adc
rclb
sbb
movsb
xor
test
push
mov
rcl
inc
data16
mov
dec
pop
call
pop
push
dec
sarb
ljmp
sub
jbe
mov
pop
push
hlt
shrb
mov
adc
pop
insl
and
aam
outsb
das
mov
les
gs
loopne
addr16
ret
in
dec
rclb
mov
jb
aam
jp
pop
xlat
push
repnz
push
dec
push
push
mov
xlat
pop
fdivp
xchg
and
fisttps
and
rolb
jp
rcrl
pop
dec
jle
mov
adc
sbb
xchg
inc
jp
xor
mov
push
mov
xor
stos
pop
arpl
mov
sbb
out
out
sub
flds
addr16
int
dec
mov
shlb
xchg
addr16
movsb
push
xor
shlb
test
ret
push
sbb
fists
bound
add
mov
outsb
or
cld
inc
mov
jg
adc
data16
fcom
push
cmp
sbb
push
das
xchg
adc
cmpsb
insl
inc
fsubrs
or
sti
addr16
gs
std
xchg
repnz
pop
mov
pop
fiaddl
mov
cmp
outsb
lods
jmp
test
ss
mov
fstl
incb
mov
mov
and
movsb
xlat
mov
xor
jae
and
movsl
mov
pop
jae
dec
pushf
adc
mov
inc
pop
aad
jns
sti
lock
arpl
or
pop
pusha
adc
addl
inc
or
mov
daa
jno
out
jns
shlb
and
lcall
imul
sub
loop
test
sbb
cmp
and
addr16
clc
shrb
outsl
xor
mov
sub
add
imul
adc
ds
sbbb
or
mov
mov
out
ljmp
and
pop
call
sahf
jae
adc
xlat
xor
mov
dec
xchg
jns
sbb
out
mov
fildll
jmp
or
imul
sbb
cmpsl
cs
cmp
jecxz
mov
inc
out
ds
es
or
sub
pop
mov
xor
adc
adc
pop
outsl
or
inc
inc
xor
testl
addr16
enter
je
aas
mov
mov
xchg
jg
jl
ret
ret
iret
jno
pop
inc
mov
loop
pop
push
scas
scas
dec
inc
popf
or
dec
mov
xor
loope
fwait
jne
icebp
sbb
xor
ljmp
mov
shlb
mov
push
jg
addr16
jbe
ljmp
mov
adc
cmp
icebp
rorl
lods
xor
sub
jge
clc
or
pusha
lds
in
mov
dec
je
mov
and
out
lret
ret
data16
xchg
lcall
fwait
shlb
dec
das
xor
rolb
pop
or
adc
mov
cmpsb
test
cmc
out
xlat
sbb
add
out
rcrl
xlat
fdivr
ds
mov
inc
xor
pop
cs
idivb
dec
mov
sbb
repnz
test
pop
sub
pusha
adc
aad
ss
or
adc
mov
cmp
jns
adc
inc
cmp
out
mov
scas
jne
mov
mov
sbb
sub
mov
jns
adc
mov
cmpl
pusha
jmp
pop
cli
clc
add
cmpb
jp
jle
mov
dec
mov
push
pop
mov
jg
jle
sti
jno
add
int3
adc
inc
aad
ja
into
into
dec
dec
pop
mov
add
adc
pop
mov
aas
sbb
or
cld
addr16
dec
frstor
fisubrs
pop
rorb
xlat
inc
mov
xlat
lea
fwait
inc
xor
mov
mov
cs
xchg
pusha
lock
sub
xor
mov
xlat
pop
je
call
std
aad
cmpsb
jge
adc
push
ss
pop
std
cmp
insl
mov
xchg
jmp
xchg
add
xchg
out
fs
or
call
pop
pop
push
mov
xchg
jns
cmpb
int3
js
fnstcw
cmp
mov
dec
lcall
push
cmp
enter
mov
insb
dec
mov
mov
xlat
data16
cmp
and
push
mov
push
or
sub
lods
fdivs
and
int3
ja
les
call
repz
mov
nop
push
push
shlb
int3
cld
xchg
lods
cmp
xor
test
lea
in
adc
js
push
xchg
push
les
cwtl
adc
fsubs
mov
mov
mov
push
hlt
not
push
out
jnp
lods
xor
sub
mov
into
xchg
sbb
pop
xchg
push
mov
mov
and
dec
inc
aad
aam
ss
sub
mov
icebp
fdivl
pushf
cmp
nop
xlat
or
ret
sarl
ljmp
mov
xchg
or
fimull
pop
push
and
ret
push
int3
cwtl
into
dec
aaa
inc
mov
cmpsb
xor
stc
bound
jns
outsl
or
push
pop
sti
addr16
jne
adc
popw
xchg
test
seta
xlat
scas
in
outsl
mov
scas
mov
sbb
push
lret
or
sbb
adc
dec
mov
popf
adc
jp
jo
mov
jnp
mov
lahf
lea
mov
shlb
add
mov
fbld
scas
lods
pop
pop
jp
aas
addr16
arpl
les
gs
lret
mov
fstl
push
lret
push
sbb
out
lret
jmp
loopne
sub
lea
dec
arpl
das
xor
icebp
add
aad
xor
and
arpl
test
pusha
es
jne
xlat
sahf
es
jmp
pop
cmp
mov
mov
addr16
das
xlat
orb
fnstsw
filds
or
pop
jae
mov
jp
das
add
cltd
and
push
push
xor
addr16
imul
sub
ss
aad
push
call
xchg
andb
icebp
or
xlat
std
add
sub
push
or
lods
mov
sub
xor
loop
sbb
or
cmp
inc
push
sbb
sub
mov
jns
sbb
imul
lds
mov
cmpsl
addr16
fnstenvs
popf
sub
out
fs
shll
cmp
sub
mov
jmp
mov
insb
lods
ljmp
outsb
aad
xor
jae
jecxz
xlat
add
sub
jbe
mov
stc
cmp
sbbb
xchg
sub
jecxz
out
jo
xlat
push
jl
mov
sbb
hlt
movzbl
cmpsl
dec
or
int
sub
fisttpl
xchg
or
hlt
pmulhw
mov
fs
adcb
or
loopne
insb
popa
jbe
add
loopne
add
pop
test
mov
jo
cltd
imul
addr16
mov
lods
jp
sbb
sar
mov
mov
mov
pop
pop
imul
add
jno
or
push
xor
xlat
mov
adc
pop
data16
jmp
mov
jp
sub
mov
sbb
cmp
mov
xchg
js
sub
repz
outsb
dec
or
jmp
adc
or
int
add
int
jecxz
addr16
sub
jno
leave
and
stos
push
xchg
push
pop
dec
pop
adc
rcll
mov
jg
ds
and
and
popf
xor
xlat
xchg
shr
xchg
andb
test
outsb
ja
and
in
jmp
dec
repnz
call
xchg
iret
loop
push
xor
mov
not
dec
cmc
sbb
sbb
fisubl
mov
testl
cmp
push
push
dec
xchg
filds
pushf
sub
mov
xlat
arpl
ss
cmovb
orl
and
xlat
stos
lds
xor
jmp
loopne
sahf
jnp
mov
and
int3
mov
insb
xlat
fdivrs
fidivrs
jp
xorl
cmovs
test
pop
loop
mov
mov
daa
addb
pop
shlb
inc
cltd
nop
xor
mov
cmp
fs
inc
mov
fwait
stc
mov
cmc
mov
bound
sbb
sbb
mov
pop
jne
cmpsl
daa
or
xchg
ret
mov
repnz
sub
mov
fs
mov
pop
je
xor
ljmp
mov
popf
shll
jmp
mov
addr16
jbe
push
mov
xlat
pop
mov
pop
xor
sbb
xchg
jecxz
lods
jb
sbb
testb
dec
mov
pop
push
mov
dec
jecxz
add
push
mov
mov
data16
cmp
or
idivb
mov
xor
dec
arpl
js
push
adc
fiadds
sbb
in
sbb
cmc
xlat
add
addr16
jl
jne
sbb
and
aam
psubq
cmp
mov
test
xor
cli
out
jnp
mov
adc
aas
notb
ljmp
dec
testb
fstpl
dec
ss
and
and
or
cmp
mov
mov
lods
mov
aad
scas
insl
push
jo
lods
stos
pop
adc
dec
xor
sbb
add
addr16
sti
test
jle
lods
and
pushf
rorl
test
icebp
mov
cmpsl
inc
scas
js
shlb
push
stc
stc
adc
xor
mov
outsb
aaa
out
add
adc
les
and
jp
adc
movsl
divb
xor
jmp
or
in
dec
jle
stos
js
movsl
add
cltd
fwait
rcl
icebp
scas
cmp
nop
mov
out
mov
test
sbb
pushf
mov
out
lea
outsl
imul
loop
adc
data16
mov
mov
xor
mov
pop
std
hlt
add
mov
ja
jb
sti
push
add
jecxz
sub
aas
aad
fiadds
adc
mov
inc
ficoml
or
jnp
sarb
mov
xchg
leave
jbe
sub
sbb
mov
cwtl
mov
addb
pop
and
addr16
in
xor
addr16
xorb
sahf
mov
xlat
sbb
push
jmp
in
mov
sahf
push
adc
and
push
addr16
xor
scas
stos
sub
pop
shrb
jne
arpl
sub
sbb
js
out
mov
mov
adc
pushf
add
orb
jbe
dec
loop
les
aas
pop
in
les
pop
sar
scas
fldl
fcmove
dec
mov
xchg
pop
xchg
lahf
or
sbb
fnsetpm(287
and
xchg
jns
mov
xlat
aaa
icebp
mov
jle
xchg
pop
insl
mov
lea
xlat
cmp
xor
adc
cli
xchg
push
orb
mov
in
jnp
sbb
push
nop
popw
stc
movsb
mov
jg
imul
jp
cmc
filds
push
mov
out
stc
jae
divb
jo
ret
data16
clc
inc
pop
jl
sahf
mov
mov
lods
rcll
das
nop
ret
clc
stos
inc
movsl
cli
dec
test
scas
add
push
mov
sahf
pusha
addr16
sub
aaa
or
gs
push
mov
ds
and
dec
mov
xchg
jg
in
mov
mov
mov
cmpsb
xor
xor
arpl
nop
jle
mov
sarl
push
adc
xor
nop
mov
mov
ds
xlat
insl
dec
clc
jne
fwait
lock
sarl
cld
pop
sysenter
xor
lea
cwtl
cmp
lahf
mov
xchg
mov
cld
push
mov
arpl
mov
xlat
out
mov
pop
lcall
jo
addr16
add
xchg
lret
mov
pop
loope
addr16
int3
xchg
das
call
mov
adc
jb
xlat
mov
adc
ss
outsb
stos
cmpsl
mov
mov
sbb
bound
sbb
sub
cmpb
pushf
js
bound
cmp
mov
mov
mov
pop
jmp
xchg
test
stos
ljmp
loop
jae
sub
fiaddl
aam
stos
fwait
or
in
add
xor
cmpsb
dec
mov
test
shl
jno
push
sbb
push
inc
and
xlat
pop
jb
xor
test
dec
sarb
or
jmp
and
xor
push
xchg
stc
into
mov
jecxz
cmp
mov
std
imul
and
adc
andl
out
test
decb
lea
dec
loope
xor
fldl
mov
mov
dec
lds
xor
je
popf
mov
in
push
push
dec
addr16
out
lds
push
aad
stos
dec
scas
cmc
push
and
pop
lret
jae
jl
push
mov
aaa
push
lea
add
sbb
xchg
mov
mov
out
dec
popa
sbb
movsl
adc
push
popa
jne
pop
mov
add
mov
mov
das
fisttpll
push
je
dec
jmp
arpl
mov
andl
loop
or
hlt
xor
cwtl
add
mov
lods
mov
loop
push
fnstcw
push
xor
lea
stos
int3
xchg
addl
and
add
xchg
add
inc
outsb
mov
or
mov
les
cltd
lret
sahf
or
out
adc
popa
dec
sbb
mov
popl
mov
loopne
or
dec
sbb
or
stos
lock
insl
aam
inc
bound
adc
mov
push
in
add
cmpsl
jge
subl
and
mov
test
pop
outsl
push
mov
add
divb
pushf
aam
lahf
add
mov
fcoms
imul
pusha
mov
fwait
pop
xchg
lds
addr16
add
mov
dec
rolb
in
or
jnp
jno
xchg
cmpsl
shrb
mov
adc
jecxz
mov
fsubs
hlt
fwait
addr16
fs
iretw
fs
xchg
sub
jg
je
mov
jge
mov
or
mov
imul
andb
vxorps
movsb
hlt
mull
lahf
push
xor
xchg
sbb
test
inc
push
cmp
dec
and
or
jae
pop
cmp
in
mov
ss
lock
iret
rorb
pop
mov
pop
mov
jnp
out
adc
lahf
in
mov
mov
jecxz
inc
pop
push
fnsave
mov
rcl
sbb
push
test
mov
jbe
test
push
cmc
adc
add
mov
int3
pcmpeqd
enter
ljmp
mov
dec
mov
adc
aam
cmp
sub
sub
je
push
mov
ljmp
mul
cs
mov
movsb
int3
in
or
sub
cmp
mov
mov
out
addr16
add
mov
test
stc
fs
ds
mov
xor
jae
jno
xchg
fdivrs
mov
sub
inc
add
mov
ret
enter
or
xlat
cmp
inc
and
dec
aam
insl
testl
sbb
adc
add
aas
sbb
inc
je
js
xor
pop
sub
inc
mov
pop
int3
mov
jmp
inc
xor
cs
sub
nop
and
lock
das
cli
dec
or
mov
int
mov
pop
inc
addr16
std
xchg
pop
test
pusha
cmp
push
andb
iret
sbb
scas
mov
imul
push
rorl
jmp
push
xor
shlb
pop
pop
inc
out
test
loop
sub
rcr
mov
or
out
sub
mov
lahf
icebp
xchg
push
pop
stc
sahf
lret
mov
aad
mov
inc
xchg
daa
dec
add
dec
mov
push
addr16
mov
ret
hlt
pushl
sbb
addr16
xor
dec
add
scas
shrl
lods
add
mov
outsl
jmp
fdivl
sti
sub
loope
std
arpl
and
les
inc
data16
inc
mov
stos
test
cld
cld
mov
mov
mov
lret
inc
imul
dec
call
mov
or
int
outsb
lods
dec
push
jns
push
in
xor
jo
mov
shl
mov
ljmp
addr16
mov
jl
and
in
push
jnp
mov
data16
rorl
jg
sarb
mov
sub
aaa
or
stc
mov
test
in
xlat
cli
push
mov
and
jmp
pop
repz
add
loope
jp
test
aad
sbb
mov
outsl
push
pusha
frstor
scas
mov
lret
out
mov
scas
sub
mov
inc
icebp
push
pop
int
lcall
mov
mov
test
push
sub
ret
mov
insl
sbb
mov
test
addr16
lahf
xor
jmp
mov
xlat
lock
call
mov
insb
xchg
outsl
xchg
xor
pushf
ret
push
mov
sub
mov
xchg
fdivl
push
repnz
cmp
mov
pop
xchg
mov
inc
add
xchg
xchg
jmp
jp
mov
cli
lret
mov
push
sub
negb
mov
inc
out
mov
mov
out
jb
es
mov
pop
lret
popa
pop
iret
or
lret
jge
xor
xchg
bound
push
fistl
pop
jbe
xor
sub
stos
in
cmp
mov
std
cltd
ja
pop
lods
cld
push
out
mov
add
mov
testb
ficomps
sub
xlat
outsl
cwtl
push
daa
jl
add
pop
sahf
movsl
pinsrw
push
xlat
lods
nop
push
jo
cmp
test
or
push
pop
outsb
mov
pop
in
sub
xor
leave
lahf
out
dec
icebp
add
add
push
mov
fsubr
call
cmp
pop
pop
pop
push
test
pop
orb
daa
jo
test
sbb
cmpsl
lds
sahf
shll
mov
dec
push
test
sbb
ret
add
idiv
cli
mov
mov
dec
mov
sub
inc
fisubl
shll
inc
push
inc
testb
jmp
mov
pop
loop
addr16
les
mov
pop
jno
pop
or
inc
imulb
mov
add
fnsave
sti
jp
xor
mov
lcall
jne
mov
mov
adcb
and
test
scas
pop
repnz
jl
lods
mov
test
sbb
ss
idivl
xrelease
dec
rorb
cmp
adc
mov
daa
rcr
mov
ss
adc
dec
rcrb
cs
mov
xlat
rol
pop
cmp
pop
and
hlt
icebp
mov
inc
mov
lods
push
add
aas
and
mov
mov
rcr
xchg
xchg
test
popl
jae
cwtl
sub
ficomps
mov
jecxz
mov
lcall
pusha
lods
aas
and
int3
ljmp
jmp
addl
test
adc
lods
mov
mov
mov
popf
addr16
andb
jp
cmp
enter
cwtl
repz
xlat
fwait
mov
pop
push
mov
pop
fldl
cmp
ljmp
negl
mov
ljmp
ja
sbb
in
repz
mov
xlat
dec
cmp
add
pop
bound
push
addr16
adc
inc
add
jnp
mov
mov
enter
pop
dec
rcrb
movsl
mov
or
stc
leave
ds
mov
inc
enter
mov
out
mov
movsl
mov
in
fs
nop
xchg
and
loope
cwtl
roll
jno
fnstsw
in
out
out
cli
mov
mov
lcall
sub
cmp
sub
push
addr16
daa
nop
repz
xchg
mov
shlb
or
outsb
adc
call
or
push
lock
cmp
and
xchg
cmp
imul
xlat
into
cs
adc
mov
fs
ljmp
cmp
xor
into
es
imul
in
xor
aam
cmpsl
mov
repnz
push
cmp
jmp
fdivrs
pop
and
push
jecxz
aas
aaa
lock
in
sbb
int3
jae
jle
pop
enter
mov
jns
mov
adc
xchg
clc
cmp
cmp
divb
inc
fmull
sub
pop
add
aas
rcll
repz
sar
cmpsb
mov
mov
shrb
sub
push
or
flds
outsl
mov
xchg
adc
adc
xor
mov
push
adc
fcmovbe
cmc
or
mov
mov
push
loope
mov
in
jecxz
add
ret
sbb
add
loope
sbb
cwtl
fnstenv
movsl
xchg
daa
sub
xlat
inc
mov
sarl
in
or
push
fwait
jmp
jle
sub
fwait
aas
or
out
mov
shlb
loopne
cmp
cmc
jge
xchg
daa
leave
push
mov
push
xchg
shrb
cmpsb
mov
icebp
jno
clc
inc
adc
stos
adc
lods
insb
loopne
pop
add
push
jp
divb
in
xorb
add
cmp
adc
add
push
out
addr16
xor
jmp
push
imul
outsb
mov
xlat
movsl
fistl
add
test
jl
inc
push
jo
xlat
daa
insl
dec
loopne
loopne
dec
mov
sub
movsb
push
cli
data16
mov
jne
pop
insb
mov
fisubs
cmp
jle
stos
data16
clc
mov
stos
les
mov
sti
imul
clc
shrb
xchg
mov
xchg
es
push
inc
cmp
int
clc
shll
add
fstps
pop
outsb
sbb
sbb
fisttps
lret
lahf
adc
sbb
addr16
pop
sub
mov
arpl
mov
fnstcw
mov
jbe
cmpsb
into
leave
loopne
fdivl
je
icebp
aad
scas
call
mov
stos
mov
lcall
inc
or
xchg
clc
xor
dec
push
inc
xchg
jb
adc
fwait
cmpsl
pop
hlt
push
fs
sti
or
lcall
int3
jne
pop
addr16
arpl
aas
lods
aas
mov
test
push
call
sbb
xlat
mov
lods
cmp
aaa
dec
insb
xor
push
xor
sub
xchg
mov
hlt
fstpt
xlat
sahf
das
sub
inc
and
sub
cmp
inc
xlat
out
mov
pop
stc
icebp
pop
mov
inc
lret
dec
push
mov
imulb
in
icebp
cmp
aad
int3
addr16
enter
mov
hlt
mulb
je
dec
jle
icebp
or
int3
add
pop
int
pop
stos
popa
int3
jo
mov
pop
nop
push
mov
seto
cmpsl
pop
jmp
fwait
inc
cmpsb
mov
mov
dec
cmp
lahf
outsb
pop
add
sahf
mov
xchg
les
orl
add
shll
mov
mov
lods
xchg
mov
push
lock
sbb
mov
and
or
cmc
xchg
lret
lcall
dec
jo
lods
push
imul
xlat
enter
hlt
lock
or
scas
scas
popf
mov
and
pop
add
mov
in
mov
cltd
xor
inc
dec
and
js
cmpsl
and
sub
xchg
mov
aad
and
pop
sbb
rcrl
cld
lret
fwait
adc
mov
sbb
xor
dec
jb
mov
mov
aaa
mov
divl
das
mov
jno
lods
mov
pop
mov
inc
test
icebp
xchg
test
xlat
pop
cmp
jns
imul
mov
subb
add
push
outsl
cmp
push
lcall
adc
cwtl
or
lret
push
subl
imul
dec
mov
fdivrp
and
inc
js
addr16
subb
add
xchg
cwtl
mov
jb
sbb
mov
sub
jno
leave
push
jns
aaa
pusha
jl
jns
movb
add
cmpsb
ret
dec
xchg
add
push
adc
mov
hlt
push
jne
cmpsb
mov
dec
xchg
nop
int3
insl
iret
jne
repnz
rcrb
addr16
mov
icebp
movsb
movsl
dec
push
mov
xor
xchg
lods
xlat
adcb
or
fimull
adc
dec
mov
mov
pop
fdivrl
xlat
lds
shlb
mov
ret
scas
xor
xchg
push
xlat
aad
cmp
icebp
jno
push
mov
mov
xchg
mov
in
xlat
pusha
cmp
or
jnp
or
mov
cwtl
dec
and
repz
adc
clc
jp
mov
cmp
ret
addr16
mov
jg
sbb
mov
push
int
mov
std
test
sub
dec
shrl
xchg
mov
shl
loopne
inc
stos
cmp
inc
and
in
addr16
inc
fld
add
push
xchg
insl
jecxz
pmullw
add
mov
xchg
xchg
pop
dec
js
or
iret
cmp
fcmovu
mov
push
insl
stos
pop
and
mov
push
or
imul
aaa
cmp
repnz
repnz
jmp
dec
cmp
outsl
fstpl
daa
daa
sbb
mov
mov
adc
jecxz
cld
cmc
out
call
loopne
and
xor
xlat
gs
jnp
stc
daa
lods
testb
lds
pop
add
or
cmpsl
mov
push
lcall
pop
repz
lret
pusha
push
push
fmuls
cmpl
jmp
mov
lahf
push
adc
and
adc
jns
and
jnp
sbb
sbb
xlat
jecxz
imul
mov
es
xor
jb
popf
dec
into
pop
xchg
xchg
jbe
sahf
push
xchg
xlat
dec
mul
cmp
mov
sub
shlb
aaa
xchg
lods
in
mov
pop
insb
jb
fnsave
mov
mov
mov
std
lock
push
xlat
sub
ss
movsl
push
inc
in
mov
jne
push
push
nop
ret
inc
mov
daa
imul
push
jno
mov
test
xor
mov
je
and
or
jns,pt
popf
push
aam
and
xlat
popa
data16
xchg
andb
imul
mov
and
loop
push
shlb
or
sarl
cli
loop
mov
xchg
pop
mov
push
lock
pop
gs
mov
test
sti
shrl
jne
jl
stc
mov
xchg
add
add
aad
out
scas
inc
imul
ss
mov
lods
pop
addr16
mov
addr16
mov
nop
jnp
mov
movsb
cltd
sbb
push
notl
dec
scas
into
mov
out
mov
fisubrs
jg
enter
scas
lock
imul
sar
or
adc
orb
int3
sbb
or
stos
out
sub
dec
mov
bndstx
les
or
mov
jp
jb
pop
push
sub
cmp
xchg
pcmpgtb
xlat
jnp
cmp
rcrb
cs
mov
je
mov
pop
push
xchg
xchg
or
cmp
and
test
imul
mov
inc
pop
xlat
mov
mov
rorl
sti
push
inc
addr16
xor
imul
aam
adc
mov
rcrb
mov
inc
movsb
in
cmp
popl
dec
imul
movsl
mov
fdivrl
and
jmp
jo
mov
push
pushf
ljmp
mov
adc
push
aaa
and
mov
in
lods
rorl
loope
add
cmpsb
sbb
pop
mov
es
scas
int3
jae
or
xchg
and
cmpsb
add
adc
lret
cli
push
push
inc
mov
data16
or
mov
movsb
sbb
push
loopne
mov
out
ret
mov
pop
push
out
movsl
sub
aam
inc
loopne
mov
xchg
pop
mov
stos
jo
fstp
test
addr16
data16
test
fdivp
and
adc
or
cs
imul
mov
or
pop
mov
pusha
inc
xlat
push
test
movsb
dec
iret
sbbl
adc
in
loope
movsb
mov
fsubl
movsb
lods
hlt
xchg
ret
sub
addr16
xchg
popa
cmp
xorl
xlat
mov
dec
loopne
jecxz
mov
jle
pop
aam
in
xlat
jp
rorl
stc
cmpsl
adcl
scas
shrb
pop
xchg
mov
dec
or
mov
push
push
push
addr16
enter
ret
rclb
in
test
imull
daa
mov
and
loopne
in
fcmovne
xor
test
xchg
push
shlb
sbb
xor
xlat
out
lds
mov
in
sbb
mov
mov
xor
xor
jae
dec
shll
push
repz
repnz
mov
icebp
mov
sub
pop
jns
hlt
push
cmc
dec
xlat
add
orl
or
and
xchg
out
jo
lret
call
cmp
int
jae
cmp
sbb
dec
stos
shll
dec
into
pop
push
xlat
ret
mov
ficoml
sub
in
icebp
insb
mov
dec
push
push
sbb
mov
push
add
xlat
pushf
add
jle
xor
data16
in
lret
cmp
cmpsb
fs
cmp
arpl
divl
fisubs
mov
gs
in
add
shrb
add
mov
xor
in
repz
mov
and
scas
and
xor
fnstcw
xrelease
inc
lret
mov
jg
xor
lcall
jb
adc
fdiv
mov
js
cmp
lahf
inc
pop
int
mov
dec
cwtl
rorb
pop
mov
mov
mov
xchg
cmpsb
push
ja
imul
je
pop
mov
fdivrs
out
mov
ja
ljmp
push
sbb
sbb
jge
mov
sahf
mov
adc
in
ret
xlat
xchg
or
fidivs
imul
jo
imulb
les
insb
daa
xchg
xor
inc
rcrl
mov
mov
jne
mov
xchg
mov
fwait
enter
push
mov
nop
jg
mov
sbb
js
or
mov
mov
jmp
xlat
andb
stc
movsb
clc
repnz
inc
inc
or
push
mov
xlat
mov
pop
jns
xchg
cmpsb
push
mov
sub
mov
add
mov
add
mov
push
sub
push
add
push
add
sub
sub
mov
mov
sub
sub
sub
sub
and
sub
and
mov
mov
sub
cmp
je
add
cmp
je
xor
sub
add
add
cmp
jne
mov
mov
xor
or
add
or
or
cmp
jne
cmp
je
cmp
jne
mov
mov
sub
test
je
mov
mov
add
xor
cmp
jne
add
add
cmp
jne
sub
xor
cmp
je
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
je
xor
cmp
je
cmp
jne
sub
add
cmp
jne
cmp
jne
mov
mov
and
test
je
mov
test
jne
mov
cmp
je
and
mov
sub
mov
mov
cmp
je
cmp
je
cmp
jne
mov
and
mov
add
add
sub
mov
sub
sub
cmp
jne
mov
sub
mov
test
je
xor
cmp
je
mov
add
mov
add
cmp
jne
add
mov
xor
mov
add
add
add
add
sub
sub
and
add
cmp
je
mov
add
mov
or
sub
sub
or
and
and
cmp
jne
mov
cmp
je
cmp
jne
mov
sub
cmp
je
mov
sub
xor
sub
add
add
or
add
mov
add
sub
add
xor
or
or
add
sub
mov
mov
add
cmp
je
cmp
je
mov
cmp
jne
sub
mov
cmp
jne
mov
mov
add
test
jne
sub
mov
cmp
jne
mov
mov
sub
or
cmp
je
sub
cmp
jne
mov
cmp
jne
xor
cmp
je
mov
add
sub
add
cmp
jne
mov
mov
test
je
mov
mov
add
add
and
cmp
jne
mov
add
mov
cmp
je
cmp
jne
cmp
je
add
mov
add
or
mov
cmp
jne
sub
xor
mov
mov
and
sub
add
mov
mov
sub
and
mov
cmp
jne
cmp
je
cmp
je
cmp
jne
add
mov
or
or
mov
cmp
je
cmp
je
sub
add
mov
mov
cmp
jne
cmp
je
mov
test
je
sub
cmp
je
mov
sub
add
mov
mov
add
mov
sub
and
test
jne
xor
xor
and
or
sub
sub
add
cmp
je
xor
sub
add
mov
add
cmp
je
mov
mov
sub
and
xor
cmp
je
cmp
jne
mov
sub
mov
sub
cmp
je
mov
mov
sub
add
sub
add
sub
cmp
je
mov
xor
add
sub
mov
sub
mov
mov
sub
mov
sub
test
je
and
mov
and
cmp
jne
mov
cmp
jne
mov
sub
mov
add
sub
sub
cmp
je
mov
and
mov
sub
cmp
jne
and
mov
sub
add
test
je
sub
mov
mov
cmp
je
add
mov
mov
sub
add
test
je
or
sub
cmp
je
test
je
mov
sub
mov
add
sub
cmp
je
mov
or
mov
cmp
jne
cmp
je
mov
mov
add
sub
cmp
jne
add
mov
mov
add
mov
cmp
jne
cmp
je
mov
xor
sub
cmp
jne
xor
cmp
jne
and
add
add
cmp
jne
cmp
jne
mov
sub
sub
sub
mov
xor
mov
add
xor
add
add
add
cmp
je
sub
xor
cmp
je
mov
sub
or
and
sub
add
xor
mov
sub
cmp
je
sub
cmp
jne
sub
mov
add
xor
and
cmp
jne
mov
mov
and
sub
or
cmp
je
cmp
jne
add
add
mov
mov
cmp
jne
xor
mov
mov
cmp
jne
add
and
mov
cmp
je
cmp
je
mov
mov
add
mov
add
sub
sub
add
cmp
jne
add
add
or
sub
mov
mov
add
and
test
je
mov
mov
add
cmp
jne
add
mov
add
cmp
jne
and
test
jne
mov
cmp
je
mov
cmp
jne
add
add
add
cmp
je
mov
sub
cmp
jne
sub
mov
mov
and
add
sub
sub
sub
add
or
sub
add
add
add
sub
cmp
je
and
sub
cmp
jne
mov
mov
add
and
cmp
je
mov
sub
mov
add
test
je
sub
and
and
mov
sub
mov
add
sub
add
cmp
jne
mov
sub
mov
sub
cmp
jne
mov
mov
add
xor
cmp
je
and
and
mov
mov
cmp
je
cmp
je
and
sub
mov
add
mov
cmp
je
add
mov
cmp
je
add
add
mov
add
mov
sub
cmp
je
mov
sub
or
mov
sub
cmp
jne
mov
mov
add
test
jne
xor
mov
mov
sub
cmp
jne
mov
sub
sub
sub
sub
test
jne
xor
xor
add
sub
sub
add
cmp
je
mov
sub
mov
sub
add
or
push
push
call
mov
and
mov
add
add
sub
mov
or
call
cmp
je
add
mov
and
mov
push
call
and
add
mov
call
sub
cmp
je
mov
mov
add
mov
add
mov
add
sub
and
sub
sub
test
jne
test
jne
mov
mov
sub
cmp
je
cmp
je
mov
mov
add
cmp
je
test
je
cmp
jne
sub
xor
mov
sub
add
cmp
je
mov
add
add
mov
sub
add
cmp
jne
and
mov
mov
cmp
jne
cmp
jne
add
add
mov
mov
or
xor
add
add
mov
or
cmp
je
mov
cmp
jne
test
jne
cmp
jne
add
xor
add
mov
sub
cmp
jne
mov
sub
mov
sub
sub
sub
sub
add
cmp
je
cmp
je
mov
sub
mov
add
and
cmp
jne
or
xor
xor
add
sub
or
sub
sub
sub
sub
cmp
jne
mov
test
je
mov
cmp
jne
add
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
or
test
jne
cmp
jne
and
cmp
je
or
add
mov
cmp
je
mov
and
or
cmp
je
add
mov
or
add
sub
or
add
test
jne
add
add
and
mov
mov
sub
sub
and
cmp
je
test
jne
sub
mov
cmp
jne
add
sub
cmp
jne
cmp
jne
cmp
je
mov
test
je
sub
cmp
je
and
add
sub
mov
cmp
je
xor
mov
sub
and
cmp
je
add
sub
mov
mov
and
cmp
jne
cmp
je
add
test
jne
add
add
mov
add
or
sub
mov
cmp
je
cmp
jne
test
jne
sub
and
mov
sub
sub
and
mov
mov
sub
sub
cmp
jne
mov
sub
add
sub
add
mov
mov
and
xor
mov
mov
add
add
cmp
je
and
cmp
je
sub
or
mov
cmp
je
sub
cmp
je
mov
mov
add
sub
add
sub
cmp
jne
xor
add
mov
or
add
add
and
cmp
jne
sub
mov
mov
or
add
and
add
cmp
je
add
sub
and
add
mov
mov
and
add
cmp
je
mov
sub
cmp
jne
mov
cmp
je
mov
sub
and
sub
add
test
je
mov
mov
cmp
jne
mov
add
mov
add
cmp
jne
mov
add
mov
sub
sub
sub
and
or
cmp
jne
mov
cmp
jne
mov
sub
add
sub
add
xor
cmp
je
mov
mov
sub
add
test
jne
mov
xor
cmp
je
mov
add
mov
sub
sub
mov
add
cmp
jne
cmp
jne
and
mov
and
cmp
jne
mov
cmp
je
cmp
jne
sub
mov
sub
add
add
add
sub
mov
cmp
jne
mov
test
je
mov
xor
sub
mov
sub
or
cmp
je
mov
add
mov
and
sub
test
je
mov
test
je
sub
sub
mov
xor
sub
add
add
add
sub
and
sub
cmp
jne
sub
mov
mov
or
sub
sub
add
mov
and
mov
cmp
je
sub
add
mov
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
mov
add
mov
and
mov
add
cmp
je
sub
cmp
je
mov
mov
sub
cmp
je
mov
sub
mov
xor
sub
mov
add
cmp
jne
xor
sub
mov
add
add
sub
cmp
jne
and
mov
mov
sub
and
or
sub
cmp
je
mov
cmp
jne
xor
mov
cmp
je
add
cmp
je
sub
cmp
jne
sub
xor
mov
add
add
add
and
and
add
sub
add
add
add
sub
test
jne
add
sub
test
jne
mov
add
sub
sub
sub
cmp
jne
mov
sub
mov
and
mov
add
cmp
je
mov
mov
sub
sub
cmp
je
mov
mov
add
test
jne
cmp
jne
mov
and
mov
add
add
add
sub
sub
cmp
jne
cmp
je
mov
and
or
mov
sub
add
xor
and
mov
and
or
test
je
mov
add
mov
sub
mov
sub
xor
add
add
mov
mov
add
test
je
mov
sub
mov
cmp
jne
and
add
sub
mov
mov
sub
sub
test
jne
mov
cmp
jne
sub
mov
test
je
xor
add
cmp
je
cmp
jne
sub
mov
xor
cmp
je
and
cmp
je
mov
mov
sub
mov
cmp
jne
test
je
test
je
xor
sub
mov
add
sub
cmp
jne
cmp
je
mov
cmp
je
mov
mov
or
cmp
jne
mov
cmp
je
mov
cmp
je
xor
and
test
je
sub
mov
mov
add
cmp
je
add
mov
test
jne
cmp
jne
cmp
je
add
mov
cmp
jne
mov
or
mov
sub
or
sub
cmp
je
mov
sub
cmp
jne
and
sub
mov
mov
add
test
je
xor
add
xor
mov
test
je
mov
add
mov
sub
sub
and
sub
add
mov
add
sub
sub
mov
mov
test
je
mov
mov
and
cmp
jne
mov
sub
mov
cmp
je
mov
sub
mov
sub
sub
sub
and
cmp
jne
add
xor
and
xor
sub
or
add
cmp
je
sub
mov
mov
add
cmp
je
and
and
mov
xor
mov
add
sub
sub
sub
add
cmp
je
mov
add
add
sub
sub
add
add
add
lea
cmp
je
mov
mov
add
test
je
mov
mov
cmp
jne
test
je
cmp
jne
cmp
jne
mov
mov
test
jne
cmp
je
mov
test
jne
and
or
mov
xor
add
sub
cmp
je
test
jne
mov
add
add
mov
add
or
and
add
add
sub
mov
sub
mov
cmp
jne
sub
mov
mov
sub
cmp
je
sub
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
mov
mov
sub
cmp
je
mov
add
sub
cmp
je
sub
mov
mov
and
cmp
jne
cmp
je
sub
mov
mov
cmp
je
add
sub
mov
xor
and
add
add
sub
sub
add
or
push
add
mov
mov
add
xor
sub
push
and
add
mov
mov
sub
and
add
and
cmp
jne
add
add
and
cmp
je
mov
cmp
je
cmp
jne
add
mov
mov
and
or
cmp
jne
mov
or
xor
add
test
je
mov
or
mov
sub
cmp
jne
and
add
mov
mov
cmp
jne
cmp
je
xor
cmp
jne
add
xor
cmp
je
cmp
jne
cmp
jne
mov
cmp
jne
mov
xor
add
sub
add
sub
cmp
je
xor
cmp
jne
add
mov
cmp
jne
mov
cmp
jne
sub
sub
and
mov
mov
and
cmp
jne
sub
cmp
je
mov
cmp
je
cmp
jne
and
add
and
cmp
jne
cmp
jne
mov
cmp
jne
xor
cmp
jne
and
mov
sub
mov
cmp
je
mov
and
xor
or
mov
and
and
sub
test
jne
mov
mov
cmp
jne
sub
cmp
je
or
mov
sub
mov
cmp
jne
sub
add
and
sub
mov
cmp
je
mov
add
test
je
mov
sub
mov
and
cmp
jne
cmp
je
cmp
jne
mov
add
mov
mov
or
add
and
and
add
and
cmp
jne
mov
mov
cmp
je
add
mov
add
mov
add
cmp
jne
sub
cmp
jne
mov
test
je
mov
cmp
je
mov
mov
add
sub
and
cmp
je
mov
cmp
jne
mov
mov
and
cmp
jne
cmp
je
add
sub
xor
mov
sub
cmp
jne
mov
mov
or
or
sub
and
and
cmp
je
add
sub
sub
call
mov
mov
sub
cmp
jne
cmp
jne
cmp
je
test
je
cmp
jne
add
or
add
xor
mov
sub
cmp
je
and
mov
or
mov
add
add
add
sub
add
sub
cmp
je
sub
mov
mov
mov
mov
sub
sub
add
shr
add
mov
mov
sub
or
sub
sub
cmp
jne
sub
add
and
add
mov
mov
sub
add
and
sub
mov
add
test
je
sub
add
cmp
jne
mov
mov
add
sub
cmp
je
sub
mov
mov
or
mov
add
xor
sub
call
mov
mov
sub
sub
sub
cmp
jne
cmp
je
cmp
je
add
cmp
je
cmp
jne
mov
sub
mov
mov
sub
cmp
je
test
jne
sub
or
add
mov
mov
sub
add
add
add
and
mov
cmp
je
sub
xor
mov
xor
mov
and
add
sub
add
cmp
jne
sub
mov
cmp
je
mov
sub
add
mov
or
add
and
and
sub
cmp
jne
add
mov
sub
cmp
jne
xor
or
mov
cmp
jne
cmp
je
sub
sub
cmp
jne
mov
mov
add
or
and
add
and
sub
cmp
je
or
pushl
push
pushl
call
mov
sub
mov
sub
add
add
addl
cmp
je
add
mov
mov
sub
mov
sub
add
test
je
add
mov
add
mov
add
sub
sub
and
cmp
jne
mov
sub
cmp
jne
mov
mov
sub
cmp
je
add
add
mov
and
or
mov
test
je
cmp
je
mov
cmp
jne
mov
add
mov
add
cmp
je
mov
add
cmp
jne
mov
add
mov
and
and
add
sub
and
cmp
je
sub
mov
cmp
je
mov
mov
sub
or
add
add
sub
cmp
je
cmp
je
mov
or
mov
add
sub
add
sub
call
mov
and
add
sub
sub
sub
add
and
mov
and
sub
mov
add
mov
test
je
mov
cmp
jne
mov
add
mov
cmp
je
add
and
mov
mov
sub
and
or
sub
cmp
je
mov
and
pop
cmp
jne
mov
pop
cmp
jne
mov
sub
or
add
pop
add
mov
and
mov
add
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
and
add
mov
push
mov
xor
sub
add
add
add
add
add
add
push
mov
mov
sub
cmp
je
sub
mov
mov
sub
cmp
je
cmp
je
add
mov
and
cmp
je
or
sub
mov
add
add
mov
add
sub
sub
add
add
push
and
add
add
sub
mov
mov
add
add
sub
sub
add
cmp
jne
test
je
add
mov
sub
sub
add
movl
mov
mov
test
jne
add
cmp
je
add
call
mov
or
mov
cmp
je
cmp
je
mov
mov
cmp
jne
mov
or
test
je
and
add
add
mov
add
cmp
jne
sub
mov
sub
add
cmp
jne
add
call
mov
mov
sub
and
add
cmp
jne
mov
and
mov
cmp
jne
cmp
je
add
mov
mov
sub
add
or
cmp
jne
mov
xor
or
sub
sub
sub
mov
mov
sub
call
xor
mov
add
add
xor
mov
sub
mov
add
mov
add
mov
or
test
je
xor
mov
sub
and
add
add
mov
cmp
jne
xor
sub
mov
cmp
jne
add
cmp
jne
add
mov
sub
sub
cmp
jne
mov
cmp
jne
mov
mov
or
or
cmp
jne
sub
cmp
je
add
test
jne
or
or
xor
sub
mov
mov
add
add
test
jne
mov
mov
add
add
sub
cmp
jne
mov
mov
cmp
je
sub
or
or
mov
mov
add
add
test
je
mov
sub
mov
add
test
je
sub
mov
sub
cmp
je
sub
cmp
jne
mov
mov
or
add
add
mov
add
sub
mov
test
je
mov
sub
mov
add
sub
cmp
je
test
je
sub
cmp
jne
mov
add
cmp
jne
sub
and
mov
or
sub
add
xor
sub
mov
cmp
jne
mov
mov
add
sub
and
cmp
je
mov
sub
mov
or
add
add
cmp
je
xor
mov
sub
cmp
jne
mov
mov
and
sub
sub
sub
test
jne
test
je
sub
add
mov
xor
and
add
sub
sub
mov
mov
cmp
je
add
mov
sub
mov
and
add
sub
sub
mov
mov
sub
add
mov
add
add
cmp
je
mov
test
jne
mov
cmp
jne
xor
add
add
mov
cmp
je
mov
sub
cmp
je
sub
mov
sub
cmp
je
or
add
and
test
jne
cmp
je
mov
mov
test
jne
sub
add
mov
mov
or
sub
add
xor
add
or
sub
sub
or
add
add
sub
or
cmp
je
test
jne
xor
sub
mov
cmp
je
add
mov
add
sub
mov
add
cmp
jne
mov
add
mov
or
cmp
je
cmp
jne
sub
sub
xor
mov
and
sub
add
and
sub
cmp
je
xor
add
mov
cmp
je
sub
sub
sub
xor
cmp
jne
mov
test
je
sub
sub
add
cmp
jne
add
cmp
je
add
sub
or
add
and
add
sub
cmp
jne
mov
cmp
jne
mov
mov
add
cmp
jne
sub
cmp
je
and
add
mov
mov
cmp
jne
cmp
jne
mov
sub
add
sub
mov
sub
mov
or
sub
add
mov
xor
sub
xor
and
add
sub
add
mov
mov
cmp
je
mov
mov
sub
add
sub
sub
sub
push
call
mov
mov
sub
cmp
je
mov
mov
cmp
jne
mov
and
cmp
jne
add
sub
test
je
xor
add
mov
cmp
je
add
cmp
je
mov
sub
or
mov
cmp
je
xor
mov
sub
and
sub
sub
mov
or
je
add
addl
sub
lea
mov
sub
cmp
jne
xor
mov
add
add
test
je
sub
mov
xor
mov
sub
add
inc
mov
cmp
je
add
and
mov
add
mov
and
cmp
je
mov
xor
cmp
jne
test
jne
mov
sub
cmp
jne
cmp
jne
add
cmp
je
mov
sub
add
cmp
jne
cmp
jne
or
mov
mov
add
cmp
jne
mov
mov
sub
sub
add
add
cmp
je
mov
add
cmp
jne
mov
add
sub
cmp
jne
mov
sub
mov
and
sub
cmp
jne
mov
mov
sub
sub
sub
cmp
jne
mov
cmp
jne
cmp
jne
add
add
mov
mov
mov
cmp
je
mov
cmp
jne
xor
add
sub
xor
cmp
je
mov
mov
sub
sub
sub
add
add
cmp
je
test
je
mov
test
jne
mov
sub
add
add
sub
cmp
je
cmp
je
add
mov
cmp
jne
mov
xor
and
sub
and
add
test
jne
cmp
jne
cmp
jne
mov
mov
and
add
add
or
test
je
cmp
jne
cmp
jne
sub
mov
mov
cmp
je
and
and
cmp
je
mov
mov
add
sub
cmp
jne
sub
add
mov
mov
and
mov
and
or
sub
sub
sub
add
mov
mov
test
je
mov
mov
add
add
sub
and
sub
or
add
mov
add
add
cmp
je
cmp
jne
add
sub
xor
sub
mov
cmp
jne
sub
add
mov
sub
cmp
je
add
cmp
je
add
add
add
mov
sub
mov
add
add
cmp
je
mov
xor
sub
sub
cmp
je
cmp
jne
cmp
jne
cmp
je
or
sub
mov
or
and
add
mov
add
or
sub
mov
mov
mov
add
cmp
jne
mov
mov
sub
cmp
je
and
mov
add
mov
add
sub
mov
sub
mov
sub
mov
mov
sub
cmp
je
cmp
jne
sub
mov
mov
or
and
add
add
sub
and
cmp
je
xor
or
and
test
jne
mov
xor
add
add
xor
sub
or
add
sub
pop
sub
pop
add
pop
xor
mov
add
add
add
sub
cmp
jne
mov
add
cmp
je
mov
sub
mov
cmp
je
add
sub
and
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
sub
add
push
mov
sub
push
or
push
mov
mov
add
test
je
cmp
jne
cmp
je
sub
sub
xor
test
jne
sub
mov
mov
cmp
jne
mov
add
mov
add
sub
sub
sub
add
sub
rdtsc
add
sub
mov
sub
add
mov
mov
sub
sub
add
mov
add
add
mov
cmp
je
add
add
pop
cmp
je
and
cmp
je
mov
add
add
mov
add
sub
test
je
mov
add
xor
sub
pop
mov
cmp
jne
sub
mov
sub
mov
add
test
jne
xor
cmp
jne
sub
mov
cmp
jne
cmp
jne
add
sub
add
add
cmp
je
cmp
jne
add
mov
or
mov
add
add
sub
cmp
je
add
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
push
and
sub
add
add
or
mov
add
mov
cmp
jne
mov
or
mov
add
cmp
je
mov
add
mov
sub
add
add
cmp
je
mov
cmp
je
mov
mov
or
cmp
je
sub
mov
cmp
je
mov
add
sub
add
sub
push
xor
sub
or
cmp
je
mov
mov
add
sub
cmp
jne
mov
mov
sub
sub
test
je
test
je
cmp
jne
cmp
je
add
mov
sub
xor
add
and
add
sub
add
sub
sub
push
cmp
jne
mov
add
sub
mov
xor
sub
mov
mov
mov
mov
add
add
test
je
mov
mov
and
add
mov
cmp
je
test
je
cmp
jne
mov
test
je
mov
add
sub
sub
add
add
and
sub
add
test
je
xor
mov
cmp
je
cmp
jne
mov
mov
cmp
jne
and
mov
add
mov
or
xor
and
cmp
jne
mov
and
cmp
jne
mov
sub
add
add
mov
cmp
je
mov
mov
cmp
jne
and
xor
xor
mov
cmp
je
add
sub
and
sub
mov
sub
add
mov
mov
sub
xor
cmp
je
sub
add
and
mov
sub
sub
mov
sub
add
sub
sub
decl
mov
mov
sub
sub
negl
sub
xor
mov
cmp
jne
sub
add
mov
xor
cmp
jne
cmp
je
sub
cmp
je
and
add
mov
jmp
mov
sub
mov
cmp
je
sub
mov
add
sub
sub
sub
cmp
jne
mov
mov
add
cmp
jne
mov
and
mov
cmp
je
sub
sub
mov
mov
xor
add
cmp
je
or
add
xor
sub
mov
or
sub
add
add
test
je
sub
sub
add
xor
xor
or
cmp
jne
mov
sub
mov
and
test
jne
sub
mov
sub
sub
mov
cmp
je
add
sub
mov
mov
sub
cmp
je
mov
mov
and
cmp
je
mov
cmp
je
xor
or
and
and
mov
sub
sub
add
and
and
sub
add
sub
or
add
sub
mov
xor
test
je
mov
sub
add
mov
sub
cmp
je
cmp
je
sub
sub
cmp
jne
mov
mov
cmp
je
mov
cmp
je
add
mov
cmp
jne
mov
mov
and
add
or
sub
cmp
je
test
je
sub
cmp
je
cmp
je
add
mov
mov
add
add
sub
add
cmp
je
mov
sub
cmp
jne
sub
cmp
jne
mov
mov
mov
mov
cmp
je
add
add
test
je
add
cmp
je
mov
mov
mov
cmp
jne
and
sub
cmp
jne
mov
sub
mov
cmp
jne
sub
mov
add
or
mov
add
add
cmp
jne
mov
cmp
je
xor
mov
and
sub
add
or
add
cmp
je
mov
mov
and
cmp
je
mov
mov
cmp
je
add
test
je
add
mov
and
sub
mov
sub
mov
sub
cmp
jne
and
xor
cmp
je
mov
sub
and
add
mov
sub
or
add
test
jne
mov
xor
add
cmp
jne
and
add
cmp
jne
sub
mov
cmp
je
add
add
xor
pop
test
je
add
pop
test
je
and
pop
mov
mov
add
sub
sub
cmp
je
mov
mov
cmp
je
mov
add
and
add
add
cmp
je
cmp
jne
mov
add
mov
sub
or
sub
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
mov
push
mov
xor
cmp
jne
sub
mov
mov
sub
cmp
je
mov
or
test
jne
xor
mov
mov
add
xor
sub
push
cmp
jne
test
jne
mov
mov
and
add
sub
sub
sub
sub
push
sub
mov
mov
sub
add
sub
mov
mov
sub
and
sub
or
cmp
je
cmp
jne
mov
add
test
jne
sub
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
sub
sub
cmp
je
sub
add
sub
cmp
jne
sub
or
push
xor
sub
sub
mov
sub
add
sub
push
mov
cmp
je
sub
push
add
mov
add
mov
sub
sub
cmp
je
mov
mov
sub
sub
test
jne
mov
mov
or
or
and
sub
sub
push
add
mov
mov
add
mov
xor
sub
add
mov
add
sub
test
je
mov
mov
sub
sub
sub
add
call
mov
cmp
jne
sub
and
add
cmp
je
cmp
je
cmp
jne
xor
mov
sub
and
add
sub
and
cmp
je
add
mov
mov
sub
add
mov
test
je
mov
add
and
add
cmp
je
mov
cmp
je
and
mov
xor
sub
cmp
je
or
xor
and
add
add
or
mov
mov
cmp
je
and
mov
and
mov
sub
sub
mov
mov
sub
xor
sub
test
jne
mov
and
mov
cmp
je
and
mov
or
cmp
jne
mov
add
cmp
jne
add
mov
cmp
jne
cmp
je
add
mov
mov
sub
mov
cmp
jne
xor
sub
and
mov
sub
or
test
je
add
or
mov
cmp
jne
and
mov
cmp
jne
sub
mov
cmp
je
cmp
jne
cmp
je
cmp
jne
mov
xor
sub
and
xor
add
add
sub
sub
cmp
jne
sub
cmp
je
mov
add
sub
mov
xor
add
and
test
jne
xor
sub
mov
add
or
add
and
mov
add
mov
sub
sub
cmp
je
cmp
je
mov
mov
cmp
jne
mov
add
test
je
mov
sub
xor
mov
cmp
je
and
and
xor
mov
sub
add
cmp
je
mov
test
je
mov
add
add
sub
add
mov
mov
xor
sub
cmp
jne
sub
or
xor
and
xor
add
or
cmp
jne
add
sub
add
mov
test
jne
xor
sub
mov
add
add
test
jne
test
jne
sub
mov
mov
mov
cmp
jne
sub
mov
sub
sub
sub
add
mov
xor
sub
sub
xor
cmp
je
cmp
je
mov
and
cmp
jne
mov
sub
xor
and
sub
add
xor
or
cmp
jne
mov
mov
or
test
jne
xor
add
sub
cmp
jne
or
mov
add
mov
cmp
je
xor
cmp
je
mov
sub
sub
mov
add
sub
mov
add
cmp
je
add
sub
add
cmp
jne
and
cmp
je
add
mov
xor
cmp
je
and
cmp
je
sub
cmp
je
sub
sub
cmp
je
add
add
or
je
mov
and
repnz
mov
addl
mov
add
jmp
cmp
jne
mov
and
mov
sub
cmp
je
mov
sub
mov
and
cmp
jne
xor
add
cmp
jne
xor
sub
mov
mov
xor
mov
add
sub
sub
cmp
jne
mov
sub
sub
or
add
mov
sub
sub
add
and
add
mov
xor
cmp
je
mov
or
sub
or
add
pop
mov
cmp
je
sub
mov
mov
or
add
and
cmp
jne
sub
sub
sub
pop
and
test
jne
cmp
jne
cmp
je
add
mov
sub
cmp
je
sub
pop
mov
sub
leave
ret
