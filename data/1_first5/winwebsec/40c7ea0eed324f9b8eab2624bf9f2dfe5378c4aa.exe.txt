jo
in
sbb
repnz
lock
mov
dec
mov
pop
orb
std
out
fwait
pop
mov
mov
sub
daa
xchg
clc
enter
xchg
lds
or
std
dec
clc
fnstcw
popl
jno
mov
xor
in
in
cmp
das
or
mov
or
mov
adc
xchg
bound
cmpl
add
mov
popa
inc
jecxz
jge
jne
dec
jno
stc
repnz
es
fs
rorl
push
sarl
sub
add
bound
cmp
xchg
push
loop
add
ja
loope
inc
sti
sbb
xchg
dec
scas
rcrl
inc
fs
and
sub
mov
je
lret
xlat
dec
rorl
sti
jne
jecxz
or
inc
inc
add
data16
fimuls
pop
repnz
add
je
mov
xchg
jge
sub
jnp
fwait
pop
ja
in
pop
pop
icebp
mov
or
out
jae
fisttpl
icebp
adc
ja
into
aam
imul
mov
das
xor
mov
inc
ret
inc
mov
outsb
cwtl
test
idiv
adc
ret
inc
stos
pop
test
js
insl
adc
pop
or
sub
jmp
in
jae
inc
sbb
jb
cltd
aas
and
mov
mov
inc
mov
repnz
icebp
in
or
dec
mov
lahf
ljmp
mov
cwtl
lods
scas
ss
loop
xchg
jns
cmc
lret
sub
lret
jno
jae
insl
mov
pop
xchg
out
cmp
test
pop
std
cmp
ficompl
testl
sub
jp
mov
xchg
sub
inc
test
xchg
dec
cltd
xor
jb
xchg
fs
imulb
in
pop
sbb
add
fs
inc
loopne
cmc
fisubrs
and
sbb
mov
ret
pushf
fisubrl
fdivrs
jg
cmpsb
jbe
or
sbb
andb
xor
je
xchg
paddsb
cmp
stos
incl
in
or
lea
lahf
xchg
aas
mov
loopne
addr16
mov
pop
xchg
jo
aas
sub
pop
lcall
cwtl
fdivrp
adc
cmp
mov
pop
ljmp
add
jnp
pop
lret
scas
ljmp
adc
pop
inc
outsb
xchg
sahf
dec
jno
decl
aaa
popa
jg
negb
jb
and
lods
aaa
mov
flds
je
orl
xlat
stc
lret
aad
test
jbe
pop
je
in
hlt
ret
or
push
repnz
aaa
mov
popf
sbb
sub
test
lret
mov
loopne
xor
jecxz
lahf
pop
xor
cli
sbb
dec
pop
out
fwait
popa
outsl
jae
sbb
jb
or
cwtl
inc
jb
std
rcll
mov
mov
call
enter
fs
xor
js
xchg
outsb
fldenv
cmpsb
xlat
push
add
ret
fbld
and
cmp
repnz
sahf
inc
inc
xchg
jmp
dec
rcrb
lcall
movsl
std
jno
jmp
lds
xlat
and
mov
mov
and
cmp
lret
xchg
lods
push
aad
jnp
hlt
inc
std
cwtl
mov
inc
imul
and
sti
stos
fcomps
sbbb
imul
mov
mov
sub
sbb
cmp
rcr
dec
not
je
xchg
aad
cmp
and
dec
cmp
add
jp
fcoml
int
cmpsb
mov
inc
sbb
mov
cld
inc
dec
pop
nop
add
int3
cmp
jbe
sbb
adc
mov
in
inc
aad
cmc
mov
sarb
sbb
xchg
xor
push
sub
mov
mov
push
pop
pop
pop
jnp
std
popa
sub
std
sub
pop
lahf
dec
sarl
or
xchg
mov
aas
mov
notb
int
aad
leave
sbb
mov
jno
cmpsb
mov
ljmp
dec
fnsaves
rcr
jle
jns
and
testb
jo
adc
jno
mov
dec
les
data16
mov
cmp
or
insl
out
pop
movl
dec
jge
les
xor
enter
push
fldl
test
outsl
out
lods
or
dec
fcmovnb
movsl
out
add
xlat
sub
faddl
pop
xor
mov
addr16
xor
aas
mov
cwtl
sahf
out
je
push
orb
test
dec
gs
pop
aam
pushf
sub
mov
out
lcall
xchg
daa
imul
pop
clc
push
lret
jbe
xor
cmp
shr
sti
mov
adc
jbe
cli
xor
lret
add
lds
push
ret
inc
test
or
xorl
fcoml
xor
ret
les
mov
jp
inc
repnz
arpl
xchg
in
mov
pop
mov
pop
pop
and
stos
out
jnp
mov
icebp
add
pusha
cltd
and
add
lahf
lods
xchg
xlat
fwait
test
dec
push
pushl
adc
movsl
gs
jae
inc
mov
pop
cmp
jmp
sbb
pop
xor
jno
fisubs
std
daa
dec
adc
mov
jb
jb
adc
mov
mov
aaa
ds
nop
in
test
mov
insl
dec
std
fistpl
gs
sbb
xor
and
rorl
or
cmpsl
lret
xchg
jle
icebp
xlat
in
inc
jns
mov
inc
fldcw
jbe
lds
sub
inc
insl
push
jns
xchg
fmulp
lds
mov
pop
push
xchg
cmp
ret
mov
insb
xchg
sbb
ficoml
push
jb
cmpsb
dec
mov
jg
jo
fbld
xlat
or
inc
add
mov
test
mov
or
jae
movsl
mov
cmpsb
jecxz
fdivrl
xor
mov
shll
push
pop
into
or
mov
cltd
mov
dec
mov
enter
jnp
in
inc
lea
cwtl
sub
int
xchg
or
lock
test
or
sub
mov
mov
fcmovnb
sbbl
jne
pop
movsb
dec
fsubs
mov
xchg
xor
sub
mov
bnd
test
mov
dec
or
push
pop
idiv
int
and
mov
jg
lea
dec
mov
imul
push
cmp
xor
jge
push
pusha
popa
xchg
hlt
push
or
push
sbb
push
xor
lods
roll
dec
jecxz
cmp
repz
lahf
xlat
nop
xor
lahf
pusha
fsubrl
dec
push
cmp
push
cld
push
das
pop
and
mov
cmp
imul
leave
push
les
icebp
mov
cmp
xor
pop
sarl
dec
sub
ret
sub
and
enter
pop
inc
std
aam
fimull
lahf
testl
push
lahf
stc
cld
adc
jecxz
xchg
mov
outsl
test
out
rolb
bound
cmp
sub
out
shrb
les
mov
popf
lret
scas
mov
arpl
inc
mov
repnz
mov
jecxz
cmpsl
inc
add
and
es
xchg
test
mov
add
mov
ss
cli
add
adc
cli
test
scas
int3
inc
popf
xor
xlat
push
lret
jg
pop
and
sbb
jge
pop
mov
mov
dec
mov
mov
jecxz
lret
lods
jb
sub
sbb
ret
cmp
hlt
jno
gs
pop
pop
int3
xchg
pop
rorl
lcall
mov
fldcw
imul
sub
xor
insb
dec
mov
ljmp
fstps
xor
cli
mov
fldt
in
jne
pop
adc
rorb
adc
addr16
add
aas
jge
pop
insb
lret
and
mov
pushf
lahf
scas
sub
push
adc
cmp
cmc
lds
stc
loopne
in
cmp
and
sbb
das
stc
sbb
std
dec
inc
cmc
push
filds
add
test
cltd
sbb
daa
movsb
mov
mov
pop
mov
jo
popa
jbe
gs
push
loopne
fwait
ret
cmp
arpl
inc
mov
js
pop
in
fs
pop
mov
fnsave
adc
xor
out
pop
push
add
mov
scas
loopne
imul
xor
push
or
lea
in
sub
bound
fnstsw
jnp
test
or
dec
int
mov
mov
or
cli
ror
repnz
cmp
lock
dec
sub
mov
in
rcrl
xchg
out
cmp
push
dec
xor
into
stos
sti
insl
mov
gs
aam
push
xchg
rolb
xor
cmp
ret
dec
push
mov
lods
adc
dec
lret
les
mov
fcoms
jbe
mov
dec
pop
pop
jo
orl
cmpsl
es
xlat
loopne
std
xchg
cmp
xchg
xor
sbbl
aas
sub
xor
out
hlt
ret
inc
adc
addr16
pop
dec
jb
jl
cmp
xchg
pop
dec
ja
lret
adc
aaa
lret
dec
mov
fisttpl
push
das
xor
rcrb
ret
stos
frstor
push
int
call
or
or
loopne
inc
mov
jne
stc
or
call
icebp
dec
sbb
inc
or
adc
fsubrl
mov
sbb
ficoml
enter
xor
adcb
push
ljmp
fcomps
mov
lret
lea
daa
or
push
nop
outsl
and
call
addr16
mov
mov
imull
xor
dec
cld
cltd
dec
push
stos
movsb
xchg
xchg
inc
or
fnstsw
scas
xor
dec
out
mov
mov
mov
dec
imul
xchg
add
aad
push
pop
add
fs
in
jns
sub
inc
push
xor
or
dec
and
dec
aam
sti
fists
int
cmpsb
les
pop
lds
and
mov
mov
cwtl
jmp
jl
lods
mov
mov
clc
clc
out
test
jp
jno
out
jbe
in
frstor
js,pn
imulb
dec
shl
out
fsubrs
call
movsl
ret
adc
add
cmp
test
push
jnp
cli
lret
sarl
inc
and
inc
push
mov
mov
stc
dec
push
push
outsb
sbb
outsb
or
pop
pop
xorl
lret
clc
out
gs
cld
outsb
addr16
adc
pop
cmpsb
fidivrl
push
aaa
das
adc
and
xchg
mov
popa
xor
dec
add
arpl
scas
adc
xchg
test
scas
je
sub
mov
nop
mov
stc
xchg
xor
adc
cmp
data16
subl
push
in
add
aam
lds
pop
into
inc
sbb
and
pop
lods
xchg
dec
cmp
cmp
pusha
cmp
sub
sbb
jmp
leave
cmpsl
loope
mov
shlb
frstor
int3
mov
and
adc
scas
sbb
lret
into
push
lret
repnz
fildll
lret
dec
aam
nop
xchg
inc
repz
dec
mov
xchg
lea
outsb
filds
fs
jmp
inc
ret
mov
inc
jo
push
and
lods
rcl
xchg
mov
test
cmp
dec
dec
inc
mov
dec
arpl
push
cli
add
lret
cs
gs
jmp
mov
hlt
xchg
in
or
cmp
js
push
sub
mov
mov
cmpsb
mov
push
mov
mov
xchg
imul
mov
push
int3
adc
push
imul
cltd
lds
das
pop
aas
popa
out
xor
cwtl
iret
lds
popa
data16
push
fmuls
mov
loope
dec
cs
jge
jmp
pop
shlb
sub
push
mov
or
std
out
cmp
cmpsb
ss
sbb
daa
dec
mov
xchg
xchg
add
xor
sub
xor
repz
adc
gs
jp
lea
mov
cmpsb
out
outsl
divl
pop
fs
inc
fs
loop
inc
jbe
aaa
loop
mov
out
dec
and
imul
jo
test
jnp
addr16
push
fcmovu
or
push
push
popf
hlt
mov
sbb
daa
aas
cld
jns
mov
xor
repnz
lea
sub
test
mov
pusha
sub
jge
lods
leave
in
xchg
imul
xchg
arpl
iret
sub
fwait
insb
in
or
dec
cmp
insl
dec
sbbl
insb
add
inc
mov
cmp
iret
leave
push
lock
iret
and
and
mov
test
add
adc
pop
xor
mov
popf
in
lods
lret
sub
mov
negl
mov
adc
cmp
mov
inc
jne
dec
int
mull
iret
faddp
cmp
xchg
mov
mov
jg
jne
lcall
pop
rorb
add
lea
int3
mov
mov
inc
pop
xchg
jecxz
xlat
push
aaa
ret
jge
insl
or
aaa
movsb
int3
iret
das
mov
cmpsl
mov
jbe
mov
pop
adc
call
lock
mov
loop
aaa
add
stos
xor
pop
mov
aad
mov
xlat
push
push
push
pop
xlat
je
test
add
sbb
jmp
push
sbb
push
or
popa
lcall
movsl
inc
fidivs
mov
pushf
mulb
xor
leave
out
sbb
or
notl
cltd
xor
push
xor
mov
jae
ret
and
sub
out
push
out
cmp
cmc
add
jp
pop
xchg
cmpsb
mov
ljmp
xor
sbb
sti
in
ret
pop
fsub
xor
jl
fsubl
fcompl
loop
pop
fsubrl
or
inc
outsb
cmp
repz
addr16
cmp
jmp
pushf
movsb
jae
push
enter
stc
or
icebp
hlt
andb
xlat
mov
push
js
jle
jae
xchg
pop
in
mov
ret
and
gs
pop
pop
mov
sub
add
jmp
adc
or
idiv
gs
out
mov
jl
push
sub
ffree
fimull
or
cmpsb
dec
dec
xlat
in
mov
push
iret
sbb
div
lods
fs
cmc
and
dec
adc
jmp
adc
mul
dec
insb
push
pop
daa
xor
inc
roll
inc
jecxz
fisttpll
mov
dec
jae
and
hlt
push
jo
das
mov
jbe
loopne
sbb
repz
int3
clc
enter
xchg
or
jmp
pop
sub
xorl
xchg
fildl
ljmp
push
or
sbb
jle
aad
enter
jnp
adc
xchg
push
jne
inc
into
mov
or
and
lcall
ljmp
mov
push
jl
push
mov
push
lea
das
stos
movsb
dec
cmp
mov
mov
aas
xor
ljmp
mov
out
xchg
add
out
add
inc
cmp
lret
cld
insb
sub
sub
mov
orl
pop
push
call
fiaddl
sbb
fsubrs
js
icebp
lods
mov
xchg
cmp
inc
and
aam
pop
mov
daa
fs
push
mov
jge
jl
cmp
addr16
fs
stos
or
dec
xlat
xor
mov
jns
jle
adc
add
stc
mov
push
dec
ljmp
and
ret
jp
sub
iret
arpl
or
xchg
icebp
push
fcompl
fcomi
decl
sbb
pop
popf
push
inc
fidivrs
jg
aas
mov
pop
sub
jl
push
push
mov
mov
pop
lods
imul
jg
and
in
icebp
push
fidivl
js
dec
pop
push
jge
pusha
lods
and
nop
fiaddl
ret
push
cmpsb
movsl
imul
ljmp
ret
jmp
cmpsb
add
jg
addb
dec
int3
sbbl
xchg
xchg
ds
fnstsw
inc
aas
xchg
cli
das
idivb
paddw
mov
subb
fwait
adc
out
ljmp
shll
aad
mov
ljmp
in
dec
out
ljmp
sbb
pushf
jbe,pn
and
scas
xor
fistps
mov
lds
es
mov
andl
xchg
dec
popf
xor
pop
add
outsl
or
push
xchg
lret
fsubrs
sbb
or
shlb
cmp
xor
sarl
or
push
mov
add
shll
pop
movsb
jge
js
stc
das
inc
ret
push
mov
pop
mov
jp
daa
and
pop
cld
icebp
aam
sub
lea
cmpsl
pop
sub
out
xchg
pop
cmp
aad
lea
call
insl
mov
daa
jae
dec
ret
mov
add
mov
and
std
mov
lds
jo
mov
sub
lods
pop
ss
dec
pop
out
lods
inc
stos
leave
repnz
mov
mov
mov
das
inc
pop
popa
xchg
shrl
cli
int3
cwtl
pushl
ss
sbb
or
in
sub
dec
push
lods
mov
or
cmc
loope
lock
push
popa
hlt
xchg
mov
dec
sub
mov
add
and
mov
or
popf
xor
aad
loop
rcl
rorb
lods
cmp
into
and
in
mov
inc
or
and
std
stc
fs
sub
aad
mov
call
test
orl
loop
push
or
int
lds
jle
lea
test
xor
lret
aad
out
into
jbe
add
imul
sbb
mov
das
sbb
mov
inc
stos
xchg
jg
or
mov
add
loope
cwtl
movsl
sub
jecxz
cmp
insl
mov
and
mov
xchg
cmp
cmc
mov
dec
lock
cmpsb
in
cltd
pop
push
jmp
adcb
call
push
pusha
push
loope
cmp
mov
mov
fcoms
movsb
dec
dec
aad
or
mov
xor
push
and
insb
add
sbbb
fs
push
ljmp
lock
pop
sub
inc
and
test
sahf
mov
cld
sub
cmp
push
mov
negb
test
inc
jl
xchg
lahf
dec
inc
cmp
cli
movsl
loope
dec
fildll
dec
std
xchg
add
adc
das
clc
mov
shl
imul
aaa
xchg
sub
xlat
shlb
jb
ja
mov
inc
enter
mov
adc
xchg
out
mov
int3
not
mov
out
repz
jl
movb
mov
adc
out
shrb
in
lcall
jo
push
andl
jg
punpckhbw
test
mov
hlt
mov
jne
add
xor
sub
xchg
fdivs
mov
cmp
test
pop
sub
mov
push
jno
mov
push
scas
cli
rorb
push
mov
mov
stos
dec
loopne
out
shll
sub
dec
push
mov
jbe
inc
cld
and
jbe
test
jl
mov
and
lods
jp
aas
sbb
xchg
pop
xchg
gs
pop
pop
subl
mov
xor
sub
xlat
in
out
mov
lea
in
cmp
adc
push
pop
out
pop
or
mov
sbb
ss
mov
adc
arpl
fnsave
das
xor
inc
movsl
icebp
insl
jo
je
aaa
je
sub
or
mov
cmc
fucomip
lcall
pop
aad
fstps
pop
add
jbe
cmp
cltd
out
cmpsb
cmpsl
cmpsl
in
cltd
jp
cld
push
aad
scas
cmpl
call
fcompl
inc
mov
testl
fucomp
cmc
test
jne
scas
hlt
in
scas
fptan
repz
and
lds
popa
adc
mov
xchg
dec
dec
add
cwtl
cwtl
stos
push
cli
dec
out
xor
das
rcrl
xor
test
inc
leave
mov
jg
jmp
push
jecxz
mov
xchg
jp
es
mov
push
loop
jne
mov
in
or
mov
or
test
or
add
out
xchg
iret
or
add
iret
sub
mov
or
push
mov
or
sbb
or
pop
mov
loop
and
fldcw
dec
insl
in
inc
cmp
nop
sub
sarl
dec
fisttpll
pop
pop
push
fs
ds
bnd
les
pop
hlt
loopne
pop
sbb
xlat
inc
ljmp
negl
and
xor
je
xor
cmp
ret
jg
cli
addb
xor
pop
out
aam
jmp
dec
aas
scas
cs
pop
mov
xchg
pushf
jb
fadds
pop
mov
dec
movsl
movsb
cmpsl
daa
outsl
add
in
or
lret
repz
repz
push
test
jge
bound
push
mov
xor
cmp
cld
jnp
push
aam
mov
ljmp
jnp
mov
movsb
arpl
add
mov
mov
mov
and
pushf
sub
cltd
mov
ljmp
xor
push
outsb
xor
push
mov
rclb
xchg
mov
ss
enter
pop
cmpsb
mov
js
inc
into
lock
fwait
nop
pop
sbb
xor
or
sub
push
ljmp
xchg
repnz
in
lods
add
inc
movsl
scas
imul
adc
xor
out
rcll
push
stc
fdivr
push
repnz
sbb
movsb
add
sub
adc
or
mov
scas
loopne
fmul
lahf
in
pop
push
mov
push
and
mov
push
lock
xor
popa
pop
into
fwait
push
jle
sbb
fsubrs
imul
inc
push
scas
add
popf
jne
sbb
mov
adc
xchg
mov
xchg
or
int3
test
arpl
out
xchg
xor
fldl
mov
jecxz
push
rorl
sbb
fcmovnu
in
dec
add
mov
jne
push
mov
fld
in
jle
mov
pushf
jle
pusha
dec
in
push
fisubs
and
aad
jno
jns
mov
inc
shl
cmc
xor
pop
xor
stos
daa
into
pop
cli
dec
lock
testl
hlt
daa
hlt
xor
repnz
bound
jmp
jne
xor
and
ljmp
add
or
jl
cmp
sbb
xor
lea
mov
jnp
cmp
pop
fsubs
inc
inc
nop
jmp
ret
ljmp
jo
ret
not
lret
jb
lahf
push
dec
mov
call
mov
push
and
int
sub
xchg
jno
lds
and
subl
lcall
mov
sti
sub
xchg
rorl
lret
ljmp
xchg
stc
lds
adc
fnstenv
inc
jl
jbe
insb
push
fsts
sbb
cwtl
jnp
rcrb
sub
inc
testl
pop
gs
movsl
repz
pop
fidivrs
sti
fidivl
mov
xor
sub
lea
and
test
mov
jae
adc
mov
dec
mov
or
leave
jno
add
sbb
or
cli
jge
sub
rclb
mov
add
jge
cs
push
lds
gs
les
mov
imul
jmp
dec
inc
or
mov
or
loop
dec
mov
mov
stc
and
cmc
xor
xor
jecxz
iret
lds
test
cmpsl
std
mov
or
sbb
or
lcall
stos
xchg
shlb
lds
inc
sbb
dec
test
jne
sub
lcall
or
mov
adc
inc
cmp
lahf
insl
pop
hlt
in
adc
pushl
jmp
out
lcall
bnd
dec
pop
repz
mov
out
jo
imul
jle
repnz
xor
cs
pop
sbb
mov
mov
arpl
enter
mov
add
xchg
inc
cmp
int
fmull
scas
sub
loope
inc
sahf
mov
popf
mov
out
adc
jnp
pop
mov
jo
bound
add
cmp
mov
bound
in
addb
dec
sbb
imul
dec
inc
stos
shrb
push
mov
adc
dec
sbb
addr16
pushf
xor
aas
xchg
dec
pushf
inc
mov
xchg
xchg
insb
and
les
cmpsl
xor
movsb
cmp
push
aaa
mov
and
fildl
cmp
fiadds
sub
in
adc
pushf
mov
cwtl
jae
stos
or
scas
push
dec
scas
insb
mov
test
lret
fistl
sbb
adc
js
data16
mov
cmp
out
out
stc
add
clc
insb
push
or
mov
fldenv
add
sbb
add
cmc
inc
negl
outsl
mov
les
or
or
add
mov
ss
pop
enter
mov
xchg
insb
adc
adc
xchg
into
ficomps
pop
add
inc
andb
mov
enter
pop
pop
xchg
sub
lahf
cltd
test
aam
scas
std
iret
push
mov
bndstx
push
cli
add
xchg
xor
xor
lock
mov
pop
push
popf
setl
xchg
outsl
add
push
push
aad
push
sub
add
dec
mov
cmc
pop
js
stc
sbb
rcr
dec
jns
mov
push
sub
fildl
arpl
cmpl
fsubr
mov
pusha
shl
imul
sbb
hlt
xor
ss
mov
xchg
int3
mov
inc
mov
dec
test
mov
lret
or
loopw
or
mov
mov
cwtl
push
jmp
jb
inc
push
gs
pusha
sbb
idivl
scas
pop
xchg
fsub
jmp
call
stos
js
scas
out
dec
and
xchg
out
insb
xchg
int
push
xor
sbb
int
inc
loope
ror
js
mov
mov
cwtd
les
cltd
cmc
push
loopne
xchg
mov
aaa
leave
adc
lret
lea
add
scas
mov
and
cmp
mov
xchg
cmpsb
sub
push
jp
pop
stos
dec
dec
xchg
cs
lods
pop
loope
adc
add
cmp
cmpsl
mov
dec
or
sub
bound
js
push
dec
mov
mov
jno
in
dec
xchg
icebp
cmp
fs
cs
jp
pop
sbb
fyl2x
mov
dec
add
jmp
in
mov
xor
xor
stos
jp
xor
ret
mov
lahf
xlat
mov
dec
out
rolb
rorl
sbb
dec
cld
cmp
clc
inc
enter
iret
fcmovbe
and
inc
jno
dec
leave
stc
push
data16
mov
int
cmc
fsub
pop
ss
and
mov
sub
fists
shrb
out
shlb
in
call
nop
fcoms
xor
dec
or
fidivl
xchg
sti
lock
int3
icebp
pushf
cmp
adcl
adc
adc
aad
sti
jne
sahf
mov
xchg
add
or
enter
add
repnz
outsb
cmp
push
test
frstor
ljmp
xchg
scas
outsb
push
scas
lret
sar
pop
mov
adc
jmp
out
test
sub
push
push
sarb
mov
iret
mov
sub
dec
dec
shll
pop
popa
jle
repz
mov
out
and
push
jns
adc
jge
popf
lret
lcall
sbb
nop
ds
stos
xor
into
lods
mov
sub
outsl
aas
cmp
sbb
push
out
push
dec
rorb
fnstsw
lods
shrl
popf
imul
adc
jb
cld
int3
shll
mov
dec
mov
insb
mov
xchg
mov
inc
pop
rorb
pop
and
sbb
mov
loope
cmp
in
mov
fldl
xor
dec
lahf
pop
lds
test
iret
mov
mov
pop
sahf
sbb
and
mov
cmpsl
into
fcmovb
jne
xlat
cmpb
hlt
movsb
rclb
test
push
jg
push
frstor
sub
lock
pop
dec
pop
repz
or
aam
mov
xchg
pusha
negb
sub
xchg
lcall
jl
push
jnp
into
sub
pushf
and
sbb
inc
mov
dec
lcall
jp
jge
sub
test
pop
lcall
das
lahf
and
cltd
jne
and
jns
or
mov
and
hlt
fs
adc
in
xchg
and
test
jae
inc
cli
icebp
mov
test
lret
adc
pop
ret
push
pop
insl
out
int
xchg
enter
fnstcw
jg
and
cmp
nop
or
push
mov
sahf
cmp
xchg
sub
fs
pop
xchg
dec
sbbb
inc
or
ret
ja
lock
inc
mov
imul
sub
dec
add
or
inc
cmp
cs
lds
add
ss
js
jge
and
and
inc
xchg
mov
scas
cmc
divb
int3
in
fwait
mov
mov
mov
sub
push
loope
jge
sub
and
add
cmp
nop
xor
xor
jmp
insb
and
push
inc
jmp
subb
inc
out
pop
loopne
or
cmp
ret
rcrl
movsb
dec
add
jg
lcall
loopne
rclb
or
inc
dec
int3
adc
in
mov
cmp
or
mov
pop
scas
lods
mov
lods
push
outsl
test
pop
fiadds
stos
mov
jns
add
iret
pop
sub
sahf
jmp
fldt
aam
jl
dec
fisubrl
and
pop
push
inc
bound
pop
cmp
stc
mull
das
mov
and
xchg
enter
xlat
cmp
or
sbb
out
test
js
or
inc
outsb
sbbl
sets
jae
int
xchg
repnz
push
sbb
in
and
das
jnp
popf
stc
lea
and
adc
fstp
xor
clc
test
sbb
pop
push
out
es
inc
mov
adc
xchg
lea
cmp
push
int3
mov
push
and
xor
test
inc
cld
lret
mov
adc
lcall
jno
scas
outsb
lahf
call
adc
or
bound
aaa
je
inc
dec
outsb
jne
lea
dec
or
cmpsb
pop
sub
push
mov
outsb
xor
sti
loop
mov
imul
out
add
pop
mov
cmp
add
lods
loopne
insl
inc
or
xchg
addl
cltd
cmc
in
mov
scas
sahf
inc
int
loopne
xchg
pushf
inc
incl
in
das
sub
dec
insb
inc
cmovle
xor
in
sahf
scas
pushf
jb
stos
insl
imul
outsl
sbb
xchg
inc
lea
jle
jge
adc
jb
lcall
cmpsl
xchg
imul
jne
push
mov
push
les
xor
add
pushl
mov
je
cmp
sti
xchg
mov
movsl
sub
jle
push
push
mov
fcomi
pop
gs
sub
push
cld
shll
mov
mov
xor
push
fwait
xor
inc
inc
and
fxch
fstps
in
jae
jg
adc
inc
lods
stos
pop
aas
pop
mov
cmpsl
xchg
mov
frstor
mov
inc
sbb
ret
adc
cmp
xor
adc
add
jecxz
lock
xchg
mov
and
pop
imul
jns
jecxz
push
sbb
dec
test
and
xor
ja
pop
out
dec
int
xor
call
mov
push
rcrl
cmp
mov
iret
cltd
dec
bound
cld
lcall
mov
and
fxch
hlt
inc
divb
dec
icebp
inc
mov
cmpsb
roll
divps
xchg
jmp
mov
sbb
pusha
push
jbe
mov
popa
jne
add
pop
das
mov
and
or
cmp
xor
xor
jae
cmp
popfw
notb
mov
stc
mov
lea
fiaddl
xchg
inc
sbb
loop
dec
cmc
nop
roll
outsl
test
jp
xor
dec
popa
pop
notl
mov
lods
movsb
loop
test
loopne
sub
sbb
les
add
push
out
mov
lods
aas
arpl
cmp
mov
aad
cwtl
mulb
aam
lcall
xchg
or
dec
out
mov
loope
adc
hlt
cld
es
jg
rcll
iret
xchg
ja
pop
ret
jl
ficomps
pushf
testl
ljmp
fisubs
cli
repz
in
lock
dec
rorl
pop
mov
ficompl
leave
jle
lret
inc
sub
mov
bound
mov
aad
cmp
fisttpl
orl
mov
stos
dec
aaa
pop
sub
out
cli
push
push
in
mov
cmp
mov
andb
dec
sbb
lea
fsubrl
xor
xchg
mov
mov
sbb
les
jns
pop
mull
int
hlt
stc
add
fildl
fisubrl
pop
bound
cmp
gs
insl
aas
xchg
mov
shrb
pop
inc
movsl
adc
sub
xchg
push
mov
inc
into
pop
jg
inc
std
pop
jb
adc
mov
lods
arpl
scas
das
popa
outsb
ds
cmp
nop
movsl
scas
sbb
mov
in
insb
pop
fwait
int3
aaa
repz
outsl
lds
test
imul
pop
push
rclb
cmpsl
loope,pt
jo
hlt
sbb
add
pop
bound
xchg
mov
cmp
outsl
mov
jmp
xchg
jns
aas
notl
cmp
add
dec
dec
pop
pop
jb
outsb
popf
movsl
xor
push
ds
push
mov
cmpsl
das
test
aad
rorl
out
stos
xor
cmp
mov
out
push
aaa
test
test
repnz
in
xchg
push
sub
inc
gs
mov
and
pop
out
xchg
jg
bound
xchg
push
mov
aaa
dec
add
sub
mov
lret
in
mov
dec
jb
in
incl
sti
cmpsb
cltd
xorb
rcll
fsts
pop
loop
cmc
push
lcall
pop
jnp
ss
mov
std
cltd
xor
dec
pop
je
test
push
mov
or
mov
call
aam
popa
mov
icebp
add
push
mov
out
in
pop
call
bound
ljmp
lahf
lock
jno
test
mov
adc
jle
jecxz
dec
jl
xchg
ret
out
fwait
ret
enter
push
xor
jnp
sbb
ret
add
cmp
dec
sub
add
pop
dec
movsb
loop
int3
pop
lahf
testl
fisttps
dec
xchg
xchg
jle
lcall
pop
hlt
sbb
movsl
orb
inc
pop
cmovbe
and
adc
popf
js
in
fcomi
fdivrs
lods
dec
test
mov
fidivs
or
testl
test
mov
mov
fs
inc
lock
jnp
xor
mov
mov
jecxz
das
jp
test
push
jo
test
cmp
outsl
push
cmp
pop
insb
hlt
jns
aaa
aad
mov
cmc
out
jmp
fwait
adc
daa
sub
test
inc
push
sbb
ja
cmp
outsl
imulb
add
cwtl
leave
cmpsl
inc
lock
or
mov
mov
jmp
sub
mov
pop
mov
mov
sbb
test
push
insl
stos
dec
jp
lea
test
or
loop
lods
ljmp
ja
pop
adc
or
dec
cmpl
pop
pusha
xchg
enter
xchg
div
xchg
dec
push
inc
psubusw
dec
and
mov
stos
cmp
or
fldl
imul
jp
icebp
push
mov
shr
mov
and
test
arpl
mov
mov
arpl
jg
imul
clc
push
pushf
das
pop
pushf
mov
sub
lods
jne
test
cltd
nop
mov
ljmp
lret
aas
mov
jp
add
in
or
nop
jbe
lcall
sbb
arpl
inc
test
cmpsl
int
add
xor
ss
pop
and
or
cmp
xchg
test
cmp
jb
clc
pop
xchg
ss
xchg
mov
jbe,pn
sbbl
pmulhw
test
loope
or
aam
lea
jp
test
cmp
pop
xchg
and
ffreep
mov
add
loop
jno
and
pop
scas
cmpsl
dec
cs
jl
add
add
and
stc
stos
push
movb
xchg
jp
cmp
mov
inc
xchg
fwait
push
and
outsl
push
ret
push
xor
int
and
or
push
mov
sbb
xchg
push
inc
fbld
es
dec
adc
stos
add
arpl
into
jbe
cmp
stos
negl
mov
lods
inc
cld
push
repnz
pop
addr16
mov
iret
andl
pop
pop
loopne
fwait
stc
or
cmc
mov
out
sarb
inc
adcb
les
adc
and
mov
xchg
jl
xlat
mov
loop
fsubrl
jae
and
xor
dec
daa
stc
push
in
nop
rol
pop
add
lods
jae
add
mov
ret
in
pop
inc
pushf
popa
add
call
lea
test
cmp
sbb
lret
xchg
fwait
daa
add
inc
scas
pop
pop
dec
sbb
ds
and
outsl
sbb
add
pop
jns
mov
dec
xchg
push
test
mov
add
scas
add
mov
cmp
aad
mov
sbb
mov
hlt
imul
sub
cld
adc
pop
and
dec
cli
jle
imul
nop
add
dec
mov
jne
mov
pop
xor
or
add
or
push
jge
inc
rcr
repnz
mov
mov
test
sub
inc
test
sbb
inc
loope
out
incl
pop
mov
jae
repz
mov
je
cmp
sbb
into
mov
dec
cmp
and
jnp
xchg
fstl
sub
push
jae
or
jne
add
sub
shll
sbb
subl
call
hlt
in
push
repz
xchg
jbe
cwtl
scas
notb
sbbb
out
loopne
hlt
ja
xchg
add
clc
popf
cmc
sbb
xchg
pusha
stc
push
lcall
push
pop
int3
mov
aaa
pop
sub
xor
adc
femms
adc
sub
xorb
rol
addr16
cld
in
std
mov
xor
ret
ss
sbb
insl
adc
out
repnz
cld
mov
inc
dec
scas
mov
fwait
cltd
add
dec
or
sahf
leave
xchg
mov
add
add
fistpll
xor
xor
xchg
mov
loopne
outsb
and
pop
ret
sbb
pop
in
pop
notl
jnp
mov
aad
add
mov
dec
mov
cmpsb
push
inc
js
pop
adc
or
dec
mov
jo,pn
ja
mov
and
push
sbb
fdivrs
cld
jo
sub
jnp
jbe
and
aad
jbe
jge
sahf
xor
cmc
das
mov
inc
xchg
inc
rclb
mov
iret
adc
and
in
and
or
and
sbb
into
xor
add
xchg
out
in
mov
shrb
mov
pop
pop
ret
add
mov
fs
and
pop
pop
pop
mov
sbb
bound
faddp
push
xchg
add
cmc
mov
xchg
lret
mov
cmp
bound
fcos
lret
lds
adc
add
lock
push
xor
iret
test
pop
or
pop
sub
inc
scas
cmovne
mov
mov
jno
cmp
sub
xor
mov
xchg
or
push
xor
rolb
insb
jno
inc
mov
test
rcrl
out
cmc
push
mov
aad
add
push
push
xor
stos
mov
mov
rol
push
popf
aaa
ret
sbb
rcl
jae
sub
les
rcll
dec
jae
jo
push
inc
out
rorl
cmpsb
lret
mov
into
ss
icebp
js
les
push
mov
lahf
repz
mov
bound
or
cmpsb
imul
inc
leave
lret
fsubs
mov
xchg
dec
jmp
sub
xor
jg
xchg
in
dec
call
ss
cs
cmc
call
pop
sar
mov
adc
pop
lods
adc
nop
lahf
xchg
sbb
mov
add
cltd
mov
popf
add
mov
or
and
xor
ss
push
imul
or
and
arpl
addr16
shll
nop
sub
or
movsl
lods
pop
shrb
push
dec
bound
mov
lds
sub
cwtl
xchg
fwait
sub
lcall
ss
mov
pop
aas
jo
ds
mov
sbbb
xor
les
jecxz
loopne
ss
in
and
add
test
in
jns
aas
pusha
mov
fsubrl
sub
ljmp
inc
xchg
push
mov
adcb
mov
or
out
test
lock
lea
xchg
iret
je
imul
lods
add
mov
repz
xchg
sub
push
test
int3
pop
lods
jns
jge
loope
sar
dec
mov
xor
mov
scas
popa
mov
addr16
mov
and
xchg
imul
jne
adc
dec
mov
cld
mov
jl
idivb
inc
pop
lret
clc
push
ss
adc
jo
xchg
gs
cwtl
and
in
mov
jnp
lahf
jp
xor
aaa
clc
hlt
jge
add
repnz
cmp
xchg
rorb
or
imulb
enter
and
push
lret
xchg
or
mov
push
frstor
jbe
mov
mov
shlb
scas
out
sbb
lods
test
sub
pop
rorb
movsb
aad
pushf
test
and
add
and
push
ret
scas
xor
sub
imul
jnp
fdecstp
arpl
add
jns
mov
push
xchg
nop
push
out
sub
int
hlt
sahf
lea
stos
xchg
push
lahf
dec
adc
shrl
cmp
lea
jne
sbb
mov
pop
out
xchg
repnz
fiaddl
dec
movsb
mov
mov
jb
mov
pop
in
sahf
cmp
push
bound
rorl
jns
sbb
repz
and
jl
adcl
mov
int
adc
mov
ja
add
or
fists
sti
or
jmp
pop
or
xchg
xor
in
incb
inc
scas
cmc
sti
jb
sub
jno
mov
or
push
push
pop
push
pop
movsl
ds
pop
aaa
pusha
jge
pop
outsb
jl
mov
push
mov
dec
mov
mov
inc
push
cmp
outsb
jge
adc
pop
pusha
jb
imul
xchg
inc
pop
fs
dec
or
loopne
cld
xchg
or
gs
in
cmp
mov
push
popa
mov
pop
or
jle
call
adc
dec
inc
and
xchg
dec
mov
lcall
dec
inc
jo
rol
adc
call
pop
jecxz
sub
fwait
popf
shlb
addr16
jge
jbe
imul
into
push
mov
sahf
mov
cmp
ret
push
arpl
xlat
push
out
push
and
add
pop
out
and
adc
test
pop
mov
stc
pop
movsb
lahf
jnp
imul
sbb
push
add
mov
sbb
push
push
lds
pop
fs
jae
inc
lds
cmc
xor
in
pop
testl
pop
adc
leave
lahf
loope
fwait
andb
test
std
xor
add
aas
imul
xor
lret
clc
adc
adc
or
out
lcall
out
and
xchg
dec
mov
push
in
xchg
aam
in
cmpsb
test
cmp
mov
jle
ljmp
jge
mov
sub
ja
dec
mov
gs
cmpsl
vmwrite
mov
pop
and
push
jge
pop
in
push
pop
pusha
lods
ret
aaa
fwait
rcl
mov
or
aaa
shl
xor
mov
sub
xchg
test
xor
push
gs
stos
sti
out
mov
ljmp
or
adc
jle
outsl
scas
add
outsb
pusha
fs
jnp
aaa
frstor
mov
jb
adc
bound
hlt
adc
inc
sbb
mov
pop
das
sub
je
mov
ret
push
cmp
jecxz
pusha
dec
mov
pushf
ds
lods
pop
test
mov
ret
fdivrl
xchg
lcall
jno
fwait
popa
jne
cmpsl
sbbb
outsl
pop
jecxz
mov
lods
push
pushf
xchg
je
out
mov
push
js
jg
scas
cld
shlb
orl
iret
lods
or
cmp
push
jb
jo
add
shr
cld
gs
sub
fisubrs
push
mov
out
aaa
mov
push
das
and
loopne
xor
fwait
cli
scas
test
mov
or
aaa
daa
xor
clc
pop
cltd
test
lahf
sbb
push
mov
loopne
xchg
loope
lods
ljmp
and
xlat
adc
and
sbb
jp
inc
mov
ds
sbb
pushf
inc
lahf
jae
sub
cmp
pop
push
jl
push
cld
xor
clc
repz
popa
loopne
sub
mov
outsl
xchg
xor
cs
cli
jbe
arpl
in
inc
pop
rcll
mov
jp
sbb
push
cmpb
add
enter
or
or
jle
inc
js
imul
mov
repz
fcoms
pop
movsl
and
inc
jne
outsl
pop
lcall
mov
xlat
nop
mov
jmp
lods
dec
inc
clc
and
mov
mov
fnstenv
test
push
jecxz
inc
inc
mov
pop
cld
and
in
lds
mov
mov
cmpsb
cmp
add
imul
int
dec
adc
dec
ja,pn
pop
mov
test
cmc
pop
scas
push
popf
outsb
in
adc
mov
pop
mov
cmpb
mov
push
sub
push
sub
push
out
add
into
loop
pusha
aad
dec
pop
or
test
cld
jl
scas
rolb
jp
and
sub
push
inc
xor
sar
dec
imul
lds
and
adc
shlb
mov
push
or
das
push
ds
cmpsl
mov
es
add
cmp
or
inc
cmp
sub
cmp
xchg
cmp
outsb
test
add
repz
hlt
lea
inc
shll
fs
cmpsl
or
adc
jmp
push
ret
int
scas
sbb
out
xor
dec
and
das
lods
fdivr
in
xor
cli
mov
xor
mov
and
call
dec
int3
ljmp
out
scas
adc
push
inc
pop
mov
addr16
mov
cmp
leave
mov
in
dec
mov
lods
insb
mov
dec
sarl
adcb
fisttpll
cmpsl
sahf
scas
pop
int3
cmpsb
mov
inc
dec
xchg
and
mov
repz
cltd
xlat
or
in
int3
dec
xor
iret
or
xchg
aam
js
mov
scas
inc
ret
jno
jo
inc
cmp
jmp
movsl
xchg
sbb
dec
icebp
scas
adc
pop
int
inc
and
pop
das
inc
mov
mov
repnz
das
dec
pop
cmpsb
imul
mov
in
jmp
pop
lods
in
cmpsb
xor
and
cmc
add
xor
sbb
aas
and
in
mov
mov
inc
shlb
dec
xor
insb
fs
and
addr16
repz
lods
sbb
bound
clc
iret
cli
test
pop
data16
add
inc
rolb
or
xchg
pop
movsl
xor
shll
push
mov
jmp
leave
or
out
nop
cmp
loopne
pop
pop
loop
mov
daa
push
pop
sub
dec
push
push
out
gs
adc
pop
sub
fadds
pop
in
dec
rclb
mov
jnp
cmc
jbe
fistl
mov
add
or
jl
out
pop
arpl
lds
mov
cli
cltd
xchg
and
loop
movsb
test
mov
or
dec
rcr
push
repnz
lock
stos
jp
inc
add
jle
xor
sbb
mov
adc
cmp
das
lea
ss
test
xor
cmp
push
fisubrl
lods
scas
cltd
lahf
push
xor
test
sub
rcr
sbb
mov
jg
push
push
pop
or
push
mov
scas
push
insl
xchg
sti
add
xchg
ret
mov
subb
leave
es
andl
aad
or
nop
rcll
insb
movsl
or
jno
lods
push
push
mov
loopne
mov
pop
add
jecxz
and
decl
lods
std
mov
in
xchg
add
aaa
loope
mov
xchg
sbb
bound
xchg
nop
jecxz
inc
pop
mov
inc
movsb
insl
inc
roll
cltd
cmp
xchg
xchg
pop
mov
or
mov
sbb
int
imul
adc
and
xchg
cli
inc
mov
jbe
inc
inc
dec
dec
inc
hlt
aaa
in
push
mov
push
cmpsb
cmp
inc
push
fldt
mov
incl
js
sar
xchg
and
xor
inc
dec
js,pt
sub
loop
aad
xor
jbe
push
mov
mov
xchg
decb
daa
icebp
lcall
jmp
int
pushl
inc
jno
pop
imul
outsl
xor
and
xlat
xchg
popf
mov
test
jnp
sbb
lea
stos
jb
xchg
push
scas
adc
pop
roll
xchg
and
pop
mov
repz
ficoml
in
jmp
jo
iret
pop
rcrl
cld
xor
daa
sar
lret
test
call
or
mov
xor
and
add
stos
addr16
jno
jecxz
add
sbb
in
dec
aas
ret
and
fs
test
movsb
clc
pushf
and
ljmp
pop
ljmp
movsb
push
xchg
arpl
mov
ss
mov
xchg
leave
mov
xchg
ds
mov
repnz
pop
fdivrs
js
mov
rolb
in
clc
mov
xchg
bound
insl
mov
in
push
or
dec
inc
and
das
hlt
adc
stos
dec
nop
mov
add
cmp
dec
fs
sahf
xchg
jnp
popf
movsb
mov
fdiv
adc
jecxz
nop
in
mov
fimull
or
out
or
outsb
add
mov
push
xchg
leave
in
daa
iret
jmp
cld
jge
mov
imul
loopne
fcomip
mov
and
push
mov
sarl
xor
mov
jp
and
and
stos
sbb
and
or
insl
adc
xlat
inc
inc
cli
mov
insb
inc
in
and
jo
out
xor
mov
xor
push
and
js
push
outsb
popa
dec
push
lret
dec
pop
pop
xor
and
test
stos
lods
sub
hlt
dec
mov
pop
sbb
mov
jle
ud0
and
cmp
data16
cmp
enter
add
lock
lods
xchg
or
xlat
add
add
jnp
cmp
ja
push
mov
pop
xchg
imul
cltd
add
inc
subb
pop
mov
lea
dec
add
mov
es
shlb
cmp
outsl
push
pusha
lods
in
in
xor
nop
leave
adc
jge
or
xchg
add
sbb
mov
sbbb
mov
mov
clc
faddl
sub
call
jle
xchg
arpl
push
scas
rcrl
sub
rcrl
pop
add
jo
stos
fisubs
int
mulb
add
push
jno
in
pop
out
lea
pushf
push
add
sub
push
sbb
adc
movl
je
sahf
cmpb
mov
movsb
or
hlt
jo
xor
add
xchg
imul
jg
mov
mov
pop
ret
push
std
shll
insb
pop
cmpsb
mov
jnp
mov
sub
push
bound
mov
shll
and
lods
push
mov
xchg
xchg
sbb
mov
jae
into
xor
ja
push
adc
fsubs
dec
mov
repz
mov
adc
enter
lret
dec
lock
stos
or
or
int3
out
mov
nop
dec
sti
add
pushf
xor
and
shll
std
lret
mov
sub
jp
push
inc
or
call
subb
loopne
nop
call
jp
dec
pop
cmp
or
jmp
sub
data16
inc
fisubl
inc
or
outsl
cmp
out
mov
cli
mov
xchg
lds
aad
mov
sub
sub
stos
fs
mov
icebp
inc
movsb
xor
cmp
fbstp
add
sbb
js
sub
jge
imul
loopne
daa
and
aad
mov
jmp
add
or
subb
ret
aad
je
pop
movsl
pop
inc
fstpt
notb
xor
lret
int3
xchg
mov
jl
xchg
pop
lods
fcmovu
rcll
or
cmp
cltd
cltd
push
jnp
inc
jns
fnstenv
and
adc
fiaddl
inc
dec
cltd
add
add
imul
mov
imul
fadds
mov
rorl
xor
add
cli
out
or
adc
or
fwait
test
sbb
sbb
xchg
push
out
adc
xchg
call
je
test
jg
jecxz
in
das
outsb
into
pop
idivb
arpl
sti
shrb
sub
inc
dec
xor
lods
leave
push
mov
inc
ret
aam
cltd
imul
jecxz
pop
bound
mov
popa
jge
jbe
sbb
jp
inc
aas
mov
lcall
lds
das
and
icebp
inc
pusha
jne
xchg
imul
mov
cld
es
pop
push
mov
repz
push
add
fs
test
gs
jmp
add
scas
cwtl
aaa
dec
mov
fildll
inc
and
stos
jns
xchg
and
clc
movsl
xchg
movsl
xchg
xorl
mov
mov
jg
scas
fildl
rcll
aas
daa
inc
push
xchg
xor
dec
dec
sahf
je
dec
test
pop
and
mov
loope
cltd
jne
push
push
fwait
xchg
push
add
movsb
mov
scas
sub
jne
insl
cmpsb
push
sbb
add
mov
cmp
push
call
xlat
sub
dec
sub
jae
sbb
lret
icebp
hlt
iret
inc
sub
imul
cmc
push
imul
ror
mov
sahf
mov
sbb
mov
in
es
mov
movsl
cwtl
rcr
std
clc
jp
mov
xor
sub
cmpsl
pop
mov
rorb
mov
fwait
shrb
into
xchg
mov
imul
sub
imul
sbb
fwait
pop
mov
jno
jecxz
int3
xor
dec
xor
dec
mov
or
fadds
dec
xchg
jl
or
jmp
dec
stc
xchg
push
and
mov
jne
mov
and
pushf
call
cmpsl
imul
mov
loop
mov
inc
ret
mov
adc
fidivl
es
je
cmp
jg
push
mov
lods
cmpsl
cmpsl
adcb
nop
jno
cmp
sbb
xchg
and
repnz
inc
sarb
into
clc
pop
lcall
sbb
cmpb
jno
cld
inc
pop
hlt
mov
jle
leave
inc
repz
lods
cld
add
xchg
adc
mov
call
enter
jmp
xor
cli
roll
adc
in
divl
push
jmp
add
push
ds
int
aam
mov
sub
push
lahf
repnz
movsl
dec
cmpsl
fcompl
sbbb
out
inc
jg
mov
push
arpl
jl
test
imull
iret
cwtl
sub
add
inc
outsw
mov
enter
or
inc
or
xlat
jno
loopne
dec
add
inc
xchg
mov
mov
cmc
jle
jae
pop
cmp
or
bnd
and
adc
jle
mov
or
in
mov
sbb
mov
ja
xchg
xor
in
outsl
mov
cmp
mov
mov
cmpsb
inc
test
popf
jnp
mov
rcll
rcrb
call
ret
jbe
cmp
push
push
or
cmpsb
jmp
cmp
xchg
adc
sub
aas
lea
hlt
aam
in
xchg
dec
sbb
xchg
xchg
stos
lock
sahf
outsb
arpl
roll
pusha
and
fsubs
out
add
stos
fldenv
lods
mov
lret
xchg
loop
aaa
stos
push
repz
ds
pop
fxch
adc
and
mov
pop
pop
sbb
or
popa
outsl
iret
movsb
push
mov
jns
lcall
sbbl
xchg
push
mov
test
loop
jns
sbb
rcl
sub
sarl
lods
push
into
pop
mov
test
sub
push
pop
fwait
daa
imull
xchg
sub
js
push
add
inc
push
mov
inc
mov
popa
jb
adc
mov
adc
ret
mov
jns
push
outsb
addr16
mov
and
insb
cmpsb
adc
mov
dec
ds
mov
xor
push
pop
pushf
add
xor
cltd
pop
sub
and
rorl
mov
and
cmp
add
ja
push
int3
pop
push
sbb
loop
push
scas
cmp
pop
xchg
shlb
cmc
leave
lahf
in
mov
and
fimull
and
std
or
dec
leave
fidivs
cmp
jle
sarl
mov
jg
repnz
pop
nop
fistpll
add
fistpl
loope
pop
mov
push
out
movsb
and
push
mov
outsl
inc
sbb
dec
push
into
jl
ljmp
or
sub
mov
mov
out
add
jae
sbbl
adc
daa
mov
cmp
aad
shll
mov
mov
fisttpl
jae
cmpsb
pop
daa
fwait
lods
dec
adc
and
iret
fstpl
incl
lahf
or
stc
int
sbb
or
imul
jp
xor
loop
fiadds
mov
aas
sbb
mov
inc
addr16
and
rcll
add
fwait
cwtl
xchg
loopne
pop
adc
or
dec
jmp
jl
test
mov
sahf
jo
mov
jne
cmp
sbb
fs
rcr
or
inc
jecxz
sbb
inc
inc
lret
ss
lock
addr16
add
push
pop
dec
cmp
xor
sarb
pop
sbb
push
out
lock
iret
insl
cwtl
daa
fdivs
scas
stc
xor
pop
lea
jbe
cmpsb
outsl
push
jo
clc
out
mov
sub
repz
repz
dec
movsl
adc
lret
fildl
push
inc
fcoml
pop
sahf
pop
sbb
daa
and
pop
jmp
mov
repz
pop
out
and
sahf
daa
filds
loopne
lahf
inc
sbb
inc
notl
mov
mov
sbb
push
ficoms
sub
adc
std
add
loope
xchg
add
daa
dec
dec
jge
dec
cmp
test
xor
inc
add
cmp
or
shr
aas
add
lret
in
and
xlat
push
or
mov
das
shll
mov
das
imul
sub
push
jb
mov
or
pop
jge
add
mov
loopne
or
insl
popa
push
mov
and
ret
stc
add
rolb
cli
inc
aas
pop
cli
cs
and
ljmp
pop
cmpsb
add
call
and
cmpsb
pop
adc
fmul
mov
dec
lcall
and
mov
xor
ret
cld
cltd
popf
popf
sub
pop
jae
fsubr
iret
daa
mov
fmull
cmp
imul
jmp
jns
dec
sbb
test
filds
dec
and
data16
xchg
and
dec
pop
mov
or
punpckldq
frstor
shlb
int3
fwait
ss
fdivl
call
fildl
cmp
dec
xchg
test
fcompl
pop
stos
push
dec
les
cltd
mov
cmp
jl
andb
add
push
insl
into
jne
mov
xchg
lcall
pop
sahf
test
push
int
sbb
inc
xor
lock
daa
pop
cmp
jp
cmp
imul
pop
push
inc
sahf
popa
hlt
dec
ret
dec
pop
jns
pusha
movb
lock
inc
test
frstor
or
push
cmpl
test
andl
dec
sbb
push
jo
je
lods
cmpsl
hlt
add
add
iret
test
outsl
sub
and
cwtl
cltd
inc
inc
outsb
imul
aaa
dec
adc
mov
out
mov
clc
daa
sbb
lods
jge
dec
cli
mov
repz
pop
repnz
sbb
int
mov
xchg
sbb
hlt
jecxz
jmp
movl
dec
cmp
nop
leave
mov
inc
xlat
clc
inc
fisubl
shr
addr16
pop
jb
js
sbb
sub
out
add
rclb
fnstcw
insb
movsb
mov
xchg
xchg
adc
mov
cmpsb
dec
gs
xchg
outsb
inc
sahf
or
or
fiadds
push
fistpll
ds
mov
jns
addl
xchg
lock
iret
push
mov
ret
mov
rorb
repnz
push
fists
pop
mov
adc
bound
lcall
repnz
movsl
stos
inc
xchg
call
das
das
lods
xorb
xchg
popa
int
pop
jg
sub
clc
sub
fs
lret
sbb
push
and
pop
testb
ljmp
in
adc
mov
push
repz
movsb
sbb
ljmp
dec
dec
mov
push
jnp
pop
hlt
xchg
adc
push
jp
adc
add
rolb
and
stos
xchg
bnd
pusha
icebp
add
sti
loope
sbb
in
dec
pop
repnz
pop
insb
out
hlt
sub
out
rcrl
pop
scas
idivb
jnp
outsl
insb
cmp
test
jl
cli
adc
cmp
add
jno
add
mov
sbb
rcr
in
xor
sbb
movsb
loope
mov
mov
pop
ret
ja
mov
push
repnz
xchg
mov
sahf
jae
loope
sub
shll
pop
add
jb
push
fsubl
push
aas
movsb
outsl
xor
enter
xor
adc
push
std
pop
mov
jle
outsl
mov
adc
xlat
push
sti
push
push
mov
mov
insb
repz
push
and
mov
subl
mov
lea
std
mov
add
fnstenv
push
mov
leave
repz
repnz
mov
loope
fstps
add
xlat
adc
iret
ds
jnp
pushf
test
int3
push
stos
sbb
mov
mov
cmp
sbb
mov
jp
into
sbb
push
stos
loope
leave
dec
mov
mov
test
xchg
dec
cs
inc
xlat
mov
mov
flds
imul
mov
clc
pop
or
mov
pop
mov
mov
mov
and
inc
icebp
jae
leave
aam
shlb
dec
sbb
sbb
mov
dec
mov
shl
ss
mov
jbe
cmp
scas
mov
sbb
daa
add
or
sub
clc
adc
imul
xchg
sub
inc
pop
jge
sti
je
or
gs
or
lcall
mov
push
repnz
roll
sbb
shll
cmp
filds
getsec
mov
jecxz
or
fdiv
xchg
xchg
iret
sbb
pop
in
repz
adc
jo
and
cmp
or
nop
pop
test
add
mov
push
cmp
pusha
push
pusha
ja
dec
push
pop
hlt
mov
pop
shlb
dec
jnp
inc
inc
aad
mov
xchg
xchg
minps
sub
aad
sbb
test
rcrl
add
mov
cwtl
sbb
jge
test
xchg
add
stos
push
jecxz
shlb
jnp
mov
aas
cmc
cwtl
or
addb
mov
mov
leave
dec
add
pop
test
inc
push
fwait
repnz
flds
lock
pop
sbb
aam
mov
aad
xor
inc
and
scas
lods
out
inc
in
xlat
nop
lahf
int
clc
int
fsubrs
out
in
pop
xor
shll
scas
fldl
mov
sti
bound
mov
jmp
dec
stc
cmpsb
push
cmpsb
fadds
gs
call
pop
addr16
add
dec
jae
mov
push
mov
xor
lahf
or
jne
xor
jbe
pop
ja
adc
jbe
sub
inc
je
xor
push
in
pusha
hlt
fstps
sbb
xchg
test
sbb
inc
ret
xchg
mov
inc
and
xchg
sbb
out
jle
cwtl
inc
jne
aaa
cmpb
subb
or
xchg
scas
jp
lret
test
sbb
and
jl
xor
lods
xor
iret
in
or
icebp
in
mov
jp
mov
mov
dec
loopne
std
mov
js
jne
loope
pop
pop
cmpsl
sbb
data16
and
jg
cmp
test
bound
and
fstl
add
subl
add
ja
icebp
cmp
std
lret
js
lods
mov
xchg
mov
test
in
pop
inc
inc
sbb
out
push
and
fcomps
jne
std
cwtl
xchg
stos
in
nop
loop
and
mov
inc
add
xchg
es
mov
loopne,pt
pop
pop
insb
sbb
icebp
push
mov
cmp
ds
dec
xor
jl
mov
rclb
sub
cli
in
cli
pop
jb
cmp
mov
adc
xlat
dec
pop
cmp
jae
cmc
outsl
jae
xchg
test
mov
adc
and
jg
and
lret
mov
ds
mov
mov
roll
cmp
pop
je
out
mov
movsl
and
adc
xchg
pop
rcrl
pushf
in
inc
cmc
add
mov
movsb
and
ljmp
pop
hlt
ja
daa
cmp
cld
xor
pop
xchg
dec
lock
mov
int
ja
mov
das
lahf
cli
hlt
xchg
pushf
sub
xor
ss
sbb
imul
inc
mov
add
cld
cmp
outsl
in
in
lahf
mov
add
out
push
das
out
repnz
cmp
rclb
in
pop
ds
mov
inc
sarl
hlt
dec
push
mov
inc
push
jmp
mov
sbbb
cmp
fidivrl
or
fistl
xchg
hlt
jae,pn
cmp
jmp
ficoms
xchg
sbbb
and
mov
jl
sub
xorb
cwtl
bnd
imul
sub
shll
mov
aaa
mov
xor
les
add
data16
mov
rorb
bound
mov
sahf
mov
jmp
or
mov
xchg
clc
sbb
mov
stos
shrb
inc
test
lea
push
and
lahf
adc
lods
imul
sar
sub
xor
stc
rcl
or
je
inc
mov
cmc
adcb
adc
xchg
jbe
inc
ret
cld
fimuls
mov
scas
jmp
movsb
fnstcw
in
aas
imul
addb
jl
cs
aas
sbb
sbb
mov
dec
xchg
mov
lods
mov
test
lret
pop
inc
rclb
mov
repnz
gs
push
and
icebp
jg
mov
ja
adc
jmp
xor
and
pop
lcall
fisttpl
mov
mov
mov
ljmp
xchg
vmread
ljmp
xor
xor
cltd
mov
dec
push
nop
lock
lcall
mulb
dec
leave
pop
aas
lahf
shll
in
inc
sarb
clc
pop
xor
ds
and
stos
loop
dec
pop
shlb
adc
mov
jp
aaa
push
aam
rclb
adc
test
sub
sub
pop
and
js
mov
lea
or
inc
icebp
cmp
sbb
or
sub
sbb
fimull
lods
push
pop
int
sbb
inc
stos
cmc
sbb
into
xchg
movsb
mov
mov
fcoml
mov
bound
mov
cs
cmp
push
into
fadds
xor
lahf
icebp
inc
xor
xor
xchg
adc
cmp
adc
leave
fdivs
aam
sbbl
sti
rsm
clc
xchg
int3
jl
mov
sbb
mov
mov
div
sub
test
push
xor
fildl
add
pop
sub
add
jns
jg
adc
cmp
pop
loop
dec
sub
outsb
imul
sahf
mov
sbb
loopne
mov
adc
les
or
pop
ja
add
jb
cwtl
sahf
jne
adc
sub
jg
hlt
mov
inc
inc
flds
sub
in
cmpsl
shrl
and
icebp
dec
push
lret
xchg
xchg
stos
je
add
mov
call
pop
adc
or
out
xorb
lret
test
repz
movsl
fldenv
jbe
pop
rcrb
test
jecxz
decb
fwait
sub
aam
movsb
or
push
xchg
lahf
jns
jmp
nop
movsl
add
int3
shl
pop
sub
xchg
aas
and
add
xor
imul
mov
cmc
cli
movsl
in
inc
add
lods
jg
jmp
jb
cmpsl
adc
das
sub
push
adc
dec
push
fmull
sbb
cmp
adcl
mov
cmp
mov
int
call
fcompl
jno
dec
xchg
hlt
mov
and
cmp
push
scas
jae
push
fwait
negb
push
in
fmuls
push
stos
lods
xchg
push
sub
nop
push
icebp
jl
pop
ja
lret
mov
push
sbb
adc
add
orl
dec
jl
cltd
jb
divl
mov
and
add
outsl
add
xchg
pop
clc
xchg
shrl
pop
jge
mov
add
add
mov
fisttpl
sub
add
loopne
or
xchg
mov
mov
inc
cmp
test
orl
lods
jb
mov
xor
dec
pop
cli
and
iret
mov
test
sub
mov
arpl
das
lcall
jmp
jl
imul
stos
xorb
mov
sbb
adc
jle
jns
xchg
mov
inc
popf
or
xchg
in
pop
ret
sarl
mov
xchg
divl
ja
dec
out
push
jno
or
fs
cmc
in
stc
je
negl
cmp
repz
adc
push
inc
mov
dec
fwait
cmp
aad
rcll
mov
xchg
aaa
roll
das
jg
pushf
mov
adc
push
mov
inc
fiadds
nop
and
add
aaa
clc
shrl
movsl
jmp
fidivrs
xor
aaa
testl
sbb
sbb
mov
mov
xchg
int3
lods
or
repnz
loopne
push
lods
cmp
pop
dec
in
test
pushl
call
ljmp
stos
mov
sahf
aam
mov
sbb
cmp
inc
and
rcrl
cltd
inc
push
aam
idivb
cmp
sti
push
enter
mov
mov
cmp
jns
mov
in
sub
or
xchg
inc
sub
xchg
jl
lods
loop
push
sub
test
pop
sub
pop
sbb
push
fsub
scas
xor
mov
mov
repnz
sbb
cltd
nop
ss
sti
mov
mov
popa
movsb
mulb
dec
sbb
xchg
ss
rorl
push
mov
je
and
dec
mov
ficoml
inc
insb
int3
outsl
mov
jbe
sub
pop
mov
imul
dec
jmp
xchg
push
ret
sti
int3
jp
insb
cmc
stos
jg
in
test
dec
push
dec
or
or
ror
push
jle
dec
hlt
pop
movsl
lahf
into
aad
shl
pop
stc
jnp
aam
adc
sti
iret
aam
push
xchg
sub
ja
xor
rcrl
mov
sub
rcll
inc
daa
aad
dec
das
jl
loop
int
dec
pop
xlat
push
sbb
out
notl
imul
xchg
sbb
je
pop
push
inc
out
ljmp
and
xchg
jnp
je
mov
push
push
jne
gs
into
mov
stos
pusha
lret
stos
mov
pop
call
dec
int3
jns
and
and
sbb
stos
sbb
sub
push
pop
xchg
popa
fists
aas
out
xchg
push
das
pop
and
jnp
inc
movsb
xchg
sbb
adcl
mov
sbb
mov
xor
sbb
adc
mov
data16
cld
adc
cmp
mov
lds
outsl
std
scas
dec
fwait
mov
fiadds
dec
mov
stc
cmc
inc
shll
out
mov
repnz
push
lcall
pop
jae
push
and
add
mov
sbb
mov
jb
out
dec
cmc
cmpsl
fnstcw
inc
cld
fcoml
pop
mov
mov
enter
movl
pushl
add
push
jl
movsl
outsb
lds
lahf
cmp
in
dec
roll
test
popa
mov
pop
mov
out
test
aad
cs
mov
mov
mov
rcl
cli
or
lds
ds
xor
lret
test
mov
inc
mov
imul
adc
ret
fsubr
aam
scas
mov
xor
xchg
into
aam
sarl
pop
popa
bound
stos
adc
lods
pop
negl
bound
sbb
stos
jp
dec
fs
sub
push
insb
imul
popa
dec
out
add
jecxz
sahf
xchg
mov
lock
jg
add
js
xchg
icebp
mov
push
fldl
fwait
add
orb
jo
or
clc
sbbb
fcomps
pop
movsb
cmc
xor
test
cmp
pop
mov
jno
or
iret
enter
shr
xchg
pop
cmc
or
loopne
test
push
adc
jbe
or
mov
jnp
imul
out
jae
sbb
jmp
cmp
iret
lret
pop
pop
push
mov
cs
fs
scas
outsb
bound
clc
jmp
mov
pop
imul
addr16
dec
sbb
jl
test
orb
outsl
mov
or
jl
jb
gs
pop
mov
push
jle
outsb
adc
lret
enter
mov
int3
inc
std
movsl
or
or
mov
test
dec
lods
xor
jmp
and
pop
ja
pop
sbb
jne
mov
rcrl
sub
out
xor
rclb
mov
pop
clc
in
rclb
push
add
or
jbe
in
jnp
cmp
loop
sbb
aad
mov
lret
hlt
insl
imulb
pop
jle
pop
dec
xor
add
or
cli
push
fnstcw
ficoml
cmc
sub
pop
push
mov
xlat
imul
mov
xorb
aad
inc
sbb
push
gs
scas
jmp
jg
ror
lds
xor
cmp
hlt
or
sub
and
inc
scas
or
mov
add
sub
cmp
cwtl
dec
lds
mov
ret
mov
adc
jmp
push
addl
loope
cli
shlb
mov
popf
test
int3
orl
xlat
and
nop
xchg
popf
and
lods
flds
fsubrs
pop
dec
mov
push
test
aad
adc
imul
jmp
push
pop
lods
cmp
icebp
and
dec
sbb
jmp
sub
sbb
sarb
aam
mov
cli
out
shl
ficomps
or
adc
jmp
ss
and
aaa
or
xor
or
dec
incl
cltd
sbb
pop
or
inc
or
div
sub
xchg
push
xchg
outsb
ret
jle
addb
cld
and
dec
daa
data16
push
push
imul
repz
int3
inc
bound
imul
mov
mov
sbb
pusha
lock
sub
push
movsb
xchg
icebp
mov
mov
xchg
arpl
pop
enter
add
sub
jbe
addr16
sbb
sbb
fnstenv
xor
ds
adc
fstpl
sbb
cli
iret
xor
push
std
push
xor
push
lea
std
mov
aaa
mov
sbb
jnp
pop
jae
clc
scas
cmp
cmp
mov
repnz
push
jp
lret
or
jl
inc
loope
and
and
test
stos
mov
cli
cmp
scas
xor
imul
aad
mov
pop
ret
rcrl
mov
mov
test
xor
mov
xchg
daa
jecxz
xor
les
mov
dec
adc
push
out
mov
adc
lock
and
mov
push
xchg
fimuls
fldt
movsb
mov
mov
add
mov
xorb
into
test
imul
jae
jmp
and
jmp
xchg
dec
inc
inc
and
sub
inc
int3
mov
xchg
jp
pop
xor
push
mov
mov
scas
mov
xlat
loope
inc
lret
mov
in
rclb
xchg
inc
and
add
fisubrs
iret
sbb
ja
dec
push
pop
loope
lods
add
jb
add
xchg
in
xchg
xchg
mov
insl
mov
xchg
and
sub
insb
xchg
push
out
cli
call
mov
lock
mov
fsub
sbb
or
xchg
inc
xlat
fistl
xchg
inc
add
adc
xor
push
dec
das
pusha
sti
pop
jp
cbtw
aam
mov
lahf
or
or
lret
cmpsl
cmp
aam
inc
imul
jno
iret
stos
dec
or
and
iret
and
xlat
adc
mov
hlt
fldl
mov
inc
fwait
adc
jl
adc
pop
mov
cs
push
sbb
arpl
pop
or
lds
out
int3
jge
dec
xchg
test
jae
lahf
ds
imul
stos
sub
pop
mov
fs
xchg
pop
imul
sti
cwtl
add
xchg
in
aad
xchg
ret
or
adc
roll
cwtl
xlat
stos
push
stos
cmpsl
jo
int
or
inc
cmp
test
sbb
add
xchg
jno
sbb
bound
sub
add
stos
outsl
stos
icebp
jmp
pop
out
lods
sbb
or
xor
cwtl
cmp
lretw
fbstp
sahf
sbb
cmpsb
stc
jnp
cwtl
dec
sub
pop
inc
ja
scas
stc
mov
xor
mov
xor
mov
dec
pop
out
imul
stc
lea
and
and
jmp
and
adc
imul
sbb
aam
movsl
sub
pop
loop
test
push
mov
data16
sti
inc
dec
mov
fldcw
gs
out
repz
pop
iret
mov
test
mov
jmp
cmpsl
lea
push
dec
or
or
in
imul
sub
xor
mov
jns
in
dec
push
adc
inc
ljmp
and
adc
mov
push
xor
jo
xor
outsb
addb
and
mov
and
out
sub
int3
jmp
xor
nop
xor
sub
mov
and
aas
xor
fsubrs
fcoml
jp
pop
push
sbb
xchg
fs
xor
inc
adc
ret
sahf
sub
xor
in
push
and
movsl
xor
cmp
and
xchg
orb
and
pop
pop
loopne
shrl
decl
enter
pop
cmp
xchg
sbb
xor
pop
pop
inc
xchg
cmpsb
sbb
aas
inc
add
into
or
movsb
rolb
fnstcw
aas
test
jmp
cs
sarb
add
or
std
adc
loopne
mov
push
add
fisubl
push
sbb
jnp
xchg
lret
jns
dec
test
jo
out
aam
xchg
test
jl
mov
adc
aad
rcll
or
sar
sbb
jbe
and
push
orb
sbb
das
loope
jmp
sub
mov
or
mov
into
andb
aaa
mov
mov
sti
jge
fwait
and
cmp
sub
pusha
cs
mov
lret
cmp
pop
sbb
pop
cmp
out
in
sbb
ret
cltd
out
cld
dec
stos
addr16
sub
sti
dec
cmp
ficompl
mov
pop
ljmp
les
jo
insl
ds
xchg
xor
mov
scas
jl
and
mov
icebp
sbb
sbb
cmp
popa
cmp
gs
or
lcall
inc
push
inc
data16
aas
sub
xchg
les
pop
out
jg
pop
stc
push
sub
les
fcom
sbb
push
sbb
arpl
jbe
popf
cmp
imul
jnp
pop
stc
add
mov
nop
sahf
pop
mov
in
mov
call
pop
pop
test
fistl
mov
mov
out
xchg
sub
dec
leave
mov
incl
fwait
icebp
or
xor
mov
fists
cmpsb
sub
jle
mov
mov
test
roll
jmp
push
mov
clc
cmp
movsb
test
inc
aas
shrb
nop
xorb
add
jge
xor
xor
cld
out
xchg
lret
sub
xchg
and
xchg
inc
pop
inc
outsl
mov
cmpsb
sahf
sub
repnz
loopne
mov
scas
cmp
or
shrb
mov
xchg
cwtl
fwait
pop
push
fs
adc
pop
add
pop
and
dec
and
cmp
dec
or
movsb
cs
adc
mov
inc
in
push
sub
jle
sbb
mov
add
out
loopne
adc
xchg
push
pop
insb
fnstenv
es
pushf
insl
mov
sub
loopne
clc
in
mov
push
xor
or
ss
pop
ds
call
dec
mov
cli
or
arpl
arpl
or
scas
xchg
ret
pop
pop
jle
inc
dec
insl
mov
pop
push
loopne
mov
mov
add
jmp
ror
fcoml
popa
dec
jno
ss
cmpsl
out
and
mov
xchg
mov
dec
cmp
loope
std
adc
pop
mulb
cmp
lcall
stos
and
cld
sub
sub
xor
sti
test
pop
scas
js
cmp
mov
test
loopne
adc
pop
or
or
scas
sbb
jne
int
mov
movsb
adc
out
mov
xor
std
out
mov
in
cmpsl
add
xor
cmpsb
cvtpi2ps
gs
mov
lock
scas
mov
mov
mov
lcall
cmp
test
push
fdivrs
dec
pushl
push
or
or
lods
and
in
mov
lods
cmp
and
sbb
and
ret
mov
cmp
inc
mov
mov
std
pop
out
int3
cmc
xor
push
mov
stos
push
push
add
icebp
mov
sbb
adc
cmp
fiadds
xor
aaa
pop
loopne
stos
add
jle
push
or
xor
pop
xchg
mov
subb
nop
adc
pushf
xchg
adcb
cmp
aad
rolb
jno
gs
dec
push
fdiv
or
sub
clc
std
test
pop
xchg
arpl
das
sahf
xor
orb
sbb
test
bound
or
xchg
das
or
mov
insl
out
mov
mov
mov
sub
add
inc
int
pop
xchg
arpl
pop
dec
pop
data16
out
sub
xor
cmpsb
or
sti
std
es
ds
stos
in
pop
xchg
imul
and
imul
fistpll
mov
mov
mov
fldt
inc
jne
dec
mov
icebp
inc
movsl
push
movsb
jbe
dec
ja
std
ret
cmp
scas
inc
rolb
cs
and
pop
xor
dec
inc
dec
outsl
ljmp
movsb
test
out
dec
fcomps
out
popa
sub
mov
sbb
leave
xchg
cltd
int
testl
fs
addr16
xchg
and
pusha
test
push
loop
arpl
in
mov
out
insl
jmp
daa
inc
xchg
cli
dec
int
jecxz
mov
sbb
cmp
idivb
std
inc
fdivr
xchg
lods
into
jno
xchg
movsb
push
inc
fbstp
jmp
insl
pop
mov
mov
jge
mov
adc
out
gs
outsb
ss
fs
rcrl
fdiv
cmpsl
pmullw
iret
xlat
pop
mov
jmp
les
scas
or
pusha
je
mov
xchg
xor
pop
push
sbb
ds
xchg
sub
jge
iret
mov
mov
outsl
pop
push
jecxz
sub
idivl
lcall
mov
clc
cmc
subb
aam
pop
fisubl
and
cmp
mov
mov
push
sbb
scas
test
adc
popf
lret
sbb
arpl
fwait
mov
loop
mov
mov
adc
das
pop
xor
cs
test
lret
leave
ds
fiadds
test
fsub
scas
es
jns
lret
sub
lcall
sub
dec
and
xorl
jl
xchg
xchg
push
xchg
mov
int3
inc
repz
jecxz
xlat
fbstp
sub
push
jne
pop
mov
push
or
push
dec
enter
scas
hlt
push
adc
add
lods
mov
cmp
popf
shrl
jge
arpl
pop
add
clc
cmp
jp
jmp
in
or
out
dec
sarl
mov
inc
and
adc
mov
sub
xchg
cmp
pop
imul
adc
mov
lcall
cmpsl
or
push
data16
sbb
in
push
mov
push
inc
enter
lods
aad
mov
push
jl
test
sbb
test
pop
push
repnz
cwtl
cmp
jb
into
mov
ja
into
add
sub
test
pop
add
stc
sarb
mov
sub
pushf
inc
int
inc
push
jg
cmpsl
jl
jnp
jp
pop
push
mov
ja
push
enter
rcrl
sbb
hlt
mov
cmp
jb
xchg
mov
push
push
popf
aaa
cli
xchg
lcall
push
mov
add
stos
ljmp
or
adc
clc
in
add
adc
testl
imul
mov
loope
add
push
iret
mov
test
imul
cli
push
clc
std
ret
ret
ljmp
jg
cmp
mov
es
shl
ficoml
mov
jmp
push
add
ds
cltd
pop
pop
mov
sub
cltd
cli
mov
idiv
data16
mov
push
xchg
push
iret
jmp
ficoms
inc
mov
sar
fs
bound
outsb
movl
pusha
mov
push
mov
pushw
or
sbb
out
les
cs
hlt
pop
sbb
seto
scas
mov
mov
and
loope
out
sbb
sbb
inc
addr16
lret
mov
mov
fcoms
jle
js
xchg
sub
int
fld
hlt
adc
inc
sbb
adc
lds
cmpsb
pop
add
lret
aas
jmp
std
push
or
lods
mov
fprem1
test
dec
cmp
cmpsb
cmp
mov
add
bound
push
mov
dec
int3
call
popa
mov
mov
lods
int3
jmp
xor
xor
lcall
lahf
xor
pop
dec
push
shl
stos
ljmp
icebp
jae
je
div
sbb
jae
add
sub
push
mov
cmp
loope
in
addr16
dec
mov
pusha
inc
mov
jp
add
jbe
cwtl
jmp
mov
inc
lds
cmpsl
pop
fdivs
sbb
imul
mov
js
dec
dec
xor
inc
out
push
sahf
imul
xchg
adc
jmp
std
loopne
aaa
sub
mov
add
dec
nop
mov
sub
or
mov
notb
push
sub
and
movsb
mov
pop
dec
xchg
std
push
mov
fists
and
jnp
pop
jg
jmp
pop
inc
mov
fwait
loope
pushf
adc
pop
mov
and
sbb
xor
jmp
jge
dec
ds
xor
xchg
repnz
mov
mov
sub
ljmp
and
loope
aaa
pop
lahf
mov
sti
push
idivl
dec
mov
or
pop
mov
mov
xor
mov
js
int
rep
or
inc
xchg
sbb
incb
movsl
in
pusha
into
mov
scas
fsubrp
mov
cmp
xchg
imull
mov
push
push
in
leave
ret
jb
push
add
clc
pop
cmp
sbb
and
lock
xor
dec
rcrb
and
xor
cltd
stos
xchg
dec
lret
mov
jl
imul
pop
mov
jmp
push
push
inc
xor
pop
fcompl
pushf
lret
loop
fwait
in
push
add
roll
inc
mov
cmp
in
ss
fsub
jecxz
dec
fcomps
lret
or
popl
mov
js
sbb
enter
lds
fnstenv
test
pushf
stc
jnp
jecxz
aaa
add
inc
mov
or
xchg
mov
dec
mov
or
dec
ds
xchg
imul
fdivrs
dec
das
loopne
adcb
clc
cmp
xor
add
dec
pop
fstps
dec
dec
jne
push
push
sub
stos
xor
jns
sbb
or
sbb
xchg
dec
xchg
das
adc
imul
and
add
call
cwtl
stos
mov
and
jp
xchg
xor
and
comiss
mov
xchg
pop
cld
roll
jp
sub
popa
mov
add
cs
xchg
xor
jno
jecxz
inc
sub
mov
add
cmp
mov
mov
mov
xchg
sub
lahf
sbb
and
out
dec
push
out
popf
and
arpl
lods
pop
cmp
push
fwait
push
xor
jge
shr
ss
jmp
lods
repz
sbb
mov
lods
cmpsb
cmp
mov
scas
fildl
into
push
loopne
sti
gs
mov
leave
mov
ja
xchg
push
add
loop
xchg
ljmp
roll
add
rorl
mov
inc
or
popa
outsl
push
jl
ror
dec
subl
aas
add
out
stc
imul
gs
dec
into
adcl
sbb
xor
or
adc
sbb
dec
xchg
jg
insl
inc
mov
rcrl
jb
push
xlat
movsl
dec
push
out
fnstsw
jl
mov
push
sub
roll
fiaddl
dec
popf
mov
push
xor
fidivl
mov
cmp
xchg
das
subl
push
inc
or
push
jns
mov
int
pop
mov
nop
test
addr16
jmp
jnp
mov
int3
pop
dec
ljmp
xchg
pop
cli
pop
repz
jmp
xchg
xor
lods
cmpsb
sahf
jmp
mov
sbb
dec
rorb
das
sbb
inc
adc
pop
pop
xchg
and
push
lock
orb
pop
xor
movq
inc
pushf
out
out
and
cmp
mov
mov
cwtl
cld
mov
aam
bound
int
and
out
insb
and
das
mov
push
mov
xlat
mov
psubw
std
cmc
xorb
loope
lea
ss
xchg
and
pop
mov
out
repz
cld
lcall
adc
mov
sbb
fnstenv
push
imul
movsb
lret
and
daa
sbb
cltd
cwtl
fcom
mov
or
pusha
pop
subl
add
addr16
mov
push
jno
mov
leave
bound
shlb
push
ss
mov
add
mov
int
mov
ret
fstpt
js
hlt
scas
imul
call
pop
popf
inc
mov
cmp
xchg
xchg
outsb
jbe
clc
in
jae
push
push
xchg
or
lret
arpl
in
or
xor
mov
test
ss
das
fsqrt
or
imul
and
mull
inc
leave
call
int
push
mov
aas
call
mov
lahf
mov
and
cmp
es
sub
mov
push
aas
in
mov
cld
hlt
adcb
xor
aad
lea
mov
fwait
sbb
cmpl
xchg
jle
pop
mov
dec
xchg
push
addr16
jmp
pop
and
xor
push
fmulp
adc
in
insl
xor
adc
xchg
aaa
cmp
fmull
jno
dec
xchg
ja
into
movsl
pop
sarb
and
aam
mov
iret
cmp
sub
out
inc
pop
cli
dec
hlt
int3
pusha
in
pop
add
xor
ja
xchg
inc
mov
jne
or
xchg
inc
fbld
shl
movb
and
fwait
add
insb
aas
adc
pop
in
icebp
stos
ret
aad
mov
cmc
inc
jne
pop
ficoml
js
mov
js
icebp
int3
inc
jge
mov
cmp
js
xlat
adc
push
and
ficomps
inc
xor
in
xchg
push
in
xchg
adc
mov
data16
mov
sbb
pop
sahf
add
pop
outsb
lea
adc
shll
fnstcw
enter
pop
mov
cld
mov
push
dec
les
cmpl
add
rcrb
stc
in
popa
iret
mov
inc
xchg
test
xchg
fsqrt
pusha
incl
push
push
les
add
in
cmp
cmc
push
pushf
or
add
aam
imul
mov
ja
sub
sbb
test
inc
lahf
sti
xchg
jl
loopne
xchg
jmp
scas
push
cmpsl
add
out
dec
push
jmp
fcmovb
rclb
xchg
dec
popf
pop
and
test
sub
loopne
test
aad
or
mov
inc
or
pop
xchg
sbb
loope
inc
inc
mov
popa
test
nop
mov
or
xchg
stc
movsl
add
pop
mov
xchg
pop
mov
xor
mov
popf
jb
pusha
adcb
std
pop
loope
inc
cmpsl
js
xor
movsb
jg
in
xchg
add
mov
dec
mov
cmp
ret
mov
inc
in
aas
shll
inc
fcmovnbe
sub
jb
in
mov
xchg
cli
fs
outsl
dec
hlt
cmp
pusha
jns
in
xor
lret
mov
xor
cli
ljmp
xchg
rclb
and
test
inc
cltd
cmp
insb
fstps
cmpsb
lret
adcl
cmp
cmp
mov
adc
sbb
ss
mov
fucomp
call
sub
loop
xchg
dec
jg
loop
ljmp
adc
stc
ret
and
mov
decb
test
rolb
lods
adc
jo
outsb
inc
dec
ljmp
sbb
pusha
leave
std
je
or
andl
loopne
movsl
mov
jae
or
or
fst
loope
popf
lods
insb
cmp
dec
mov
push
or
mov
or
or
das
aas
or
stc
pop
call
dec
mov
leave
stos
or
aas
push
std
xor
xchg
shlb
enter
cmpsb
adc
das
inc
mov
mov
jl
fsubrs
fwait
int3
push
ret
xchg
out
lea
jg
popa
mulb
jne
jo
cmp
inc
in
loopne
idivl
and
mulb
jb
sub
stc
inc
ret
sub
daa
in
push
mov
jmp
mov
push
dec
insb
jmp
out
mov
xor
sbb
mov
adc
scas
mov
push
leave
push
scas
out
push
sub
int3
jnp
or
loopne
pop
and
add
pop
fs
insb
test
mov
sbb
mov
add
push
stos
jl
clc
scas
popa
pop
pop
or
aaa
xchg
jge
fdivs
pop
loopne
add
add
nop
or
loop
dec
sbb
or
mov
lea
add
adcb
push
jns
sbb
push
inc
enter
movsl
out
add
cmpsb
ja
inc
or
arpl
and
faddp
fisttps
jg
aad
leave
insb
inc
mov
filds
mov
jle
outsl
dec
or
jg
cltd
sbb
lahf
mov
pop
push
sub
test
xchg
int3
xchg
mov
and
cmpsb
and
xor
test
xchg
push
lcall
mov
sbb
orl
rol
incb
xchg
xchg
adc
icebp
jae
cmp
xchg
mov
jne
es
add
rorb
xchg
fstl
addr16
adc
and
add
dec
add
pop
jnp
lret
es
sbb
adc
sahf
push
popa
addps
xchg
push
xchg
mov
or
sub
jge
lods
inc
xlat
pop
xor
hlt
adc
inc
pop
sub
testl
stos
adc
adc
xchg
icebp
arpl
mov
in
xor
adc
mov
rolb
add
xlat
add
mov
adc
inc
cmc
clc
fmull
jbe
or
cli
js
cs
push
pop
mov
push
add
mov
dec
mov
pop
sahf
ret
cltd
movsl
in
inc
adc
int3
fnstenv
aas
ljmp
and
or
jmp
and
out
aas
cmpsl
fistl
clc
mov
loop
sub
fcoml
cmpsb
sbb
in
rsm
cmpsl
ljmp
add
dec
mov
adc
inc
out
jmp
fisubrs
adc
cs
mov
cmpsl
cmp
dec
in
sub
mov
jno
rcl
clc
mov
push
call
adc
cmp
stc
jmp
add
mov
fucompp
xor
add
xchg
sub
das
testl
ss
movsl
pop
jg
shlb
xchg
lahf
daa
fcomp
cmpsl
adc
in
push
aad
test
test
push
sti
lret
aaa
ja
jp
add
cwtl
push
pop
dec
cli
rclb
pop
outsb
test
adc
pusha
testl
popf
jl
jns
jno
fsts
aam
cli
lods
adc
mov
mov
and
pushw
testl
mov
popf
fistps
sub
xorl
xchg
hlt
and
icebp
cld
and
hlt
fnstenv
loope
ja
scas
and
mov
leave
js
test
push
scas
stc
call
push
push
dec
xchg
ljmp
mov
jns
push
cwtl
xor
aam
mov
pushf
sub
mov
dec
cmc
js
jmp
mov
pop
out
xchg
aad
cmp
push
psadbw
in
add
test
lods
fisttps
rol
out
subb
js
loop
movsl
call
or
stos
nop
movsb
pop
in
pop
cmp
lock
stos
inc
fs
xchg
dec
mov
push
std
sbb
addr16
xchg
or
stos
push
lds
or
adc
pop
mov
and
push
inc
pushw
lock
mov
xor
mov
xchg
je
or
not
jae
sti
ja
int
mov
cmp
pop
cmp
notb
out
mov
fcompl
std
ljmp
fbld
xchg
or
fidivs
repz
ljmp
je
dec
sub
rclb
lcall
mov
sub
mov
pop
cmc
insb
out
mov
out
fstpt
sbb
jl
gs
mov
into
movsb
fnstcw
rcr
cmp
div
shll
nop
mov
pop
inc
pop
xchg
and
adc
xor
jns
push
ficompl
sahf
push
daa
sub
fisttpl
je
cmpsl
addl
nop
lea
sub
aaa
xchg
out
and
inc
call
outsl
pop
xor
in
arpl
pusha
les
push
jecxz
faddl
dec
int3
xlat
sahf
and
sbbb
enter
mov
in
mov
scas
into
stc
and
cld
outsl
inc
sarl
sbb
xor
sub
mull
test
sbbb
cs
mov
xchg
add
mov
jae
insb
push
aam
adc
cmp
mov
add
loopne
cwtl
into
inc
ds
inc
scas
pop
xor
fcoms
xor
lds
insl
das
inc
lock
cwtl
imul
pop
add
into
repnz
mov
inc
push
and
mov
push
dec
push
outsl
cmp
icebp
enter
jge
test
xchg
push
pop
loop
cmpsl
cmp
jge
aas
xchg
pusha
aaa
in
jecxz
shlb
in
push
push
xor
jecxz
in
cmpsl
add
add
add
leave
dec
lods
fistpl
cmp
sub
inc
movb
adc
cmp
mov
cmp
push
mov
mov
fsubrs
inc
xlat
mov
imul
fldt
sbb
mov
jns
dec
mov
into
iret
pop
cmp
mov
jne
cmp
mov
or
and
cmc
cmc
push
addr16
mov
jno
shll
les
fsubp
stos
lea
inc
hlt
pop
jae
into
addl
cmp
dec
cmp
jno
jb
jmp
enter
pop
xor
adc
movsb
aas
pop
xchg
or
or
fisttps
sti
test
popf
mov
in
cs
xchg
lods
jnp
sub
lahf
adc
test
scas
pminub
dec
cmp
pop
dec
pop
loop
xlat
ds
repz
mov
xor
fldt
mov
mov
sahf
sbb
notl
mov
dec
ds
adcb
hlt
sahf
fsubrs
test
xchg
jae
xchg
daa
or
and
test
jnp
ficoml
push
dec
xchg
xlat
fdivrs
mov
mov
lret
outsl
mov
push
mov
test
pop
in
pop
mov
pop
imul
in
loopne
xchg
fldt
sbb
mov
movsb
mov
std
mov
dec
cltd
jmp
mov
sbb
mov
push
subl
je
pop
lea
lret
addr16
insl
out
xor
ss
lea
push
cmc
mov
scas
test
test
push
mov
jp
mull
cmc
jl
cwtl
divl
xchg
xor
ret
jmp
dec
insb
movl
adc
cmc
addr16
fwait
mov
xor
push
cli
das
dec
pop
jbe
ficoml
fwait
lret
add
imul
rclb
and
test
mov
xor
js
push
stos
stc
into
xor
shrl
stc
mulb
mov
into
lahf
pop
lret
xlat
inc
mov
mov
mov
je
repnz
lea
scas
push
cmp
shll
cs
mov
scas
mov
dec
jae
inc
mov
mov
mov
pop
jbe
loopne
fcomp
mov
mov
aad
dec
xchg
sbb
outsl
scas
jns
nop
mov
push
xchg
int3
nop
fldenv
mov
outsl
jp
sahf
in
adc
mov
inc
in
test
or
xchg
mov
or
lock
das
cmpb
mov
xchg
lods
jle
mov
lret
inc
adc
adc
mov
mov
cwtl
pop
or
push
jo
xchg
mov
sarl
sbb
dec
ljmp
hlt
pop
ss
mov
pop
cmc
jb
pop
sub
xor
xchg
mov
outsl
cmp
xchg
mov
inc
adc
scas
or
std
repz
push
adc
mov
insl
mov
add
ds
imul
and
cmpsb
ja
add
movsl
adc
or
js
cmp
mov
xor
pop
aad
ds
push
pop
mov
cmpl
adc
dec
popf
ret
xor
outsl
jge
fldcw
repnz
and
dec
mov
insb
out
dec
mov
into
int3
adc
sub
es
icebp
jg
cmc
faddl
xor
pushf
mov
enter
mov
mov
sbb
imul
lret
movsb
ds
call
mov
inc
cmp
xchg
arpl
inc
lret
fldenv
cld
push
scas
inc
call
add
mov
je
out
shll
arpl
mov
sub
ljmp
movsb
popa
mov
inc
or
movsb
mov
loop
shrb
inc
ds
inc
mov
xor
mov
xor
popa
jae
testb
xchg
jg
xor
lds
fsubrs
mov
in
inc
add
imul
xor
mov
push
push
push
ljmp
xor
aaa
mov
jp
pop
mov
xor
pop
icebp
aam
loop
push
and
inc
pop
xor
int3
sahf
mov
adc
es
jbe
out
sbb
and
jg
vdivsd
jp
clc
out
jmp
pushf
lock
or
jle
out
in
lods
ds
pop
mov
data16
dec
cwtl
xchg
inc
push
jle
ret
push
in
aaa
inc
adc
in
loope
pop
pop
jl
pop
xchg
sub
test
insb
xchg
lock
bound
insb
loope
push
repnz
lock
push
scas
sub
lods
pop
punpckhwd
sbb
and
add
add
cwtl
ljmp
mov
in
dec
sub
mov
scas
mov
mov
dec
cwtl
jl
mov
jg
fcmovbe
add
mov
les
jo
movsl
jns
push
mov
add
cmc
iret
lods
loope
cmpsb
fiadds
jg
divb
ja
cwtl
jecxz
and
ss
popf
lds
xchg
push
or
stos
cltd
push
rcll
js
push
sti
pop
iret
shl
xor
test
pop
test
mov
aam
outsb
lock
push
jo
push
ret
mulb
ss
mov
mov
xchg
js
pop
fistpll
enter
sbb
out
lret
aas
clc
mov
cmpsb
sarb
idiv
push
clc
scas
mov
aaa
xlat
popa
cmp
xchg
pop
xor
xor
roll
or
jo
nop
push
pop
xchg
pop
imul
pop
push
mov
jecxz
cli
xor
mov
das
mov
sbb
dec
call
ja
lret
or
int
movsb
pop
jbe
scas
jo
push
bound
lret
pushf
les
mov
nop
mov
icebp
enter
sub
xchg
jmp
xchg
int
sub
mov
jo
adc
addr16
insl
dec
hlt
es
movsl
jne
add
scas
jmp
sub
and
es
fwait
cmc
je
cmp
push
lret
popf
movhps
ret
rep
and
mov
rcrb
js
mov
or
stos
out
nop
leave
pusha
pushf
push
out
in
jmp
dec
or
rcll
inc
leave
sub
mov
cmp
in
xlat
pop
inc
mov
clc
jae
sbb
nop
icebp
fimull
cmpb
dec
les
mov
mov
lahf
mov
cmp
sub
mov
mov
ficoml
iret
jl
or
into
push
inc
add
nop
js
push
pop
sbb
test
ffree
lahf
add
not
adc
loope
cmpsl
subb
mov
cmc
xlat
or
bound
and
mov
fidivs
mov
repnz
jp
mov
stos
pop
sub
sarb
mov
rcrl
pop
cwtl
push
ss
mov
pop
aad
mov
xchg
fsubl
lods
mov
mov
shlb
movsb
cmp
jp
inc
inc
rcrl
push
jle
and
push
mov
sub
mov
movsb
dec
icebp
cmp
jp
or
cmp
pop
jb
xchg
mov
popf
xlat
sbb
mov
enter
cmp
data16
mov
mov
add
sbb
gs
push
inc
scas
add
mov
scas
in
push
xchg
std
cli
sbb
inc
add
dec
fs
pop
dec
pop
leave
mov
pop
incb
dec
dec
fwait
cltd
add
cmpsl
dec
loop
jb
jmp
daa
fcom
lods
in
es
lret
les
lret
fisubs
ds
sbb
sub
mov
mov
mov
andl
and
call
cmpsb
mov
scas
xor
test
lcall
cld
dec
daa
mov
or
xchg
jno
popf
imul
aad
fwait
out
mov
sub
lret
mov
outsb
mov
ja
hlt
pop
lcall
cltd
pop
pop
roll
in
outsl
xchg
adc
sbb
adc
sub
hlt
xor
sbb
rcrb
sbb
xchg
adc
xchg
mov
ljmp
xor
and
adc
inc
ja
and
into
inc
pop
xchg
push
or
xor
push
cmp
mov
mov
and
cmp
pop
adc
dec
fildl
dec
cwtl
cmp
xchg
mov
andl
mov
stc
stos
add
rclb
inc
xchg
xchg
in
sbb
or
fcmovne
pop
add
loopne
and
xchg
pop
pop
dec
jg
pop
repz
fdivrl
mov
jno
mov
je
fs
mov
loop
xor
div
cmp
sub
bound
push
lahf
sub
insb
insl
sub
xor
mov
push
jbe
stc
and
cltd
lret
loop
jmp
sti
ja
insb
sar
push
push
clc
xor
cmp
xor
repnz
mov
nop
mov
pop
mov
sbb
dec
cli
loope
sub
adc
inc
xlat
rclb
jg
in
and
and
clc
pusha
sti
sahf
push
ja
data16
fsincos
dec
xlat
add
shrl
dec
dec
andb
imul
pop
xor
ds
out
jnp
inc
or
imul
xchg
mov
popa
dec
movsb
fiaddl
pop
hlt
mov
sahf
mov
or
or
mov
and
sub
sti
sub
pop
push
mov
lahf
sahf
xchg
iretw
pop
in
lahf
hlt
cld
daa
mov
mov
lods
test
dec
add
xchg
cmp
iret
jae
adc
pop
out
js
mov
stos
bound
dec
mov
ljmp
iret
cltd
adc
rorb
int
and
lds
jo
adc
or
mov
dec
mov
or
or
add
pop
sub
push
add
les
mov
xor
shlb
aam
int
dec
adc
mov
outsl
addl
push
inc
ja
fs
push
pop
mov
mov
add
mov
cmc
imul
fdivr
shll
adc
aaa
jl
ja
mov
pushl
inc
ret
sarb
push
fwait
jbe
imul
cltd
shl
lods
xor
xor
mov
js
cltd
cmpsl
mov
ret
inc
pop
inc
ss
inc
sbbb
icebp
adc
mov
or
sub
test
cmpsb
testb
lock
ficoml
mov
fcmovb
sub
imul
jge
mov
sbb
pop
inc
int3
inc
into
mov
mov
mov
sbb
les
mov
and
jns
dec
mov
das
mov
test
lods
ret
outsw
mov
gs
or
mov
cwtl
stos
push
rorb
roll
fwait
loop
sub
es
fdivrs
int
or
inc
arpl
lock
js
mov
ds
cmpsb
mov
push
sbb
lock
inc
jmp
jge
xor
cmp
and
xchg
inc
push
mov
fnsave
xor
mov
addr16
gs
mov
push
in
inc
inc
lock
sahf
out
lods
mov
addb
push
popa
xlat
xchg
adc
hlt
dec
out
push
les
cs
fs
int
fucomip
sub
leave
push
arpl
mov
add
mov
jge
mov
sub
pop
movsb
fs
xchg
cwtl
sbb
cld
fcomps
mov
in
or
mov
or
dec
testl
es
aam
jo
imul
pop
stos
out
xchg
mov
mov
push
je
mov
mov
fwait
or
mov
and
add
leave
dec
push
stos
mov
pop
sti
enter
jge
xchg
cli
xchg
ret
cmp
sub
lret
dec
cmp
xchg
adcb
mov
ret
lods
leave
xchg
lds
fiadds
adc
and
cld
data16
adc
sbb
js
sub
int
push
adc
jbe
rcr
mov
xchg
mov
pop
mov
push
dec
jmp
test
lret
sbb
popf
xchg
inc
lret
mov
sbb
dec
sub
inc
dec
fwait
xor
std
das
mov
pusha
pop
dec
pusha
jns
test
je
movsb
in
push
sbb
sahf
imul
add
jle
test
ret
cltd
rol
sti
add
sub
cmpsl
les
dec
push
or
sbb
inc
inc
dec
mov
xchg
mov
push
iret
fnstenv
and
shlb
pop
mov
sbb
push
push
and
mov
cli
shlb
dec
sub
dec
lahf
jne
xchg
cmp
lcall
mov
lret
mov
add
xlat
dec
fnstcw
ljmp
push
out
jbe
in
mov
cmp
repnz
lds
cwtl
mov
dec
cltd
adc
jmp
mov
cmp
icebp
jb
icebp
arpl
pusha
sahf
mov
jo
dec
cmp
lods
jbe
test
sbbb
imul
mov
cwtl
pop
or
or
bound
cmc
or
adc
xor
addr16
xchg
fists
cmc
jecxz
adc
pop
lcall
pop
ret
daa
and
mov
out
and
and
mov
adc
mov
popf
push
es
dec
les
cmp
and
mov
in
stos
fistl
mov
mov
jle
popa
sub
sub
daa
xor
in
dec
xor
xor
test
mov
push
mov
xchg
pop
add
mov
or
xchg
push
loop
mov
neg
or
mov
imull
cli
push
push
adc
inc
out
fs
mov
imul
fcmovnu
aaa
push
out
push
pop
outsb
push
cltd
adc
xchg
push
mov
lcall
sarb
add
cmc
mov
sbb
popf
xor
xchg
cmp
sbb
push
movsl
xor
jge
push
and
fisubl
mov
shlb
inc
cmp
sub
outsb
sti
enter
or
lods
or
mov
ljmp
outsb
push
ljmp
dec
sbb
fs
sbb
fbstp
jns
insb
cwtl
push
test
addr16
sbbl
and
jbe
xchg
testl
inc
jl
and
push
cmpsl
fsts
jge
sarl
add
sarb
test
add
cmp
cltd
sbb
mov
cli
jo
fbld
enter
mov
shll
cmc
push
lea
xchg
xchg
sahf
sbb
mov
or
mov
imul
xor
std
lret
add
inc
jge
xchg
or
sub
jns
iret
cmpsl
and
adc
push
sbb
out
push
pop
shr
incl
sub
pushf
fcoms
fsubrl
ljmp
call
hlt
repz
es
or
inc
or
sbb
sub
jmp
iret
aad
jle
in
add
jmp
cs
sbb
lods
stos
out
adc
push
xor
push
lock
xlat
lds
dec
xchg
sub
lods
adc
xchg
in
out
clc
rorl
out
xor
inc
nop
xor
mov
jno
mov
outsl
sub
movsb
inc
sbb
shll
pop
add
mov
adc
scas
aaa
push
push
inc
mov
cs
ds
mov
xor
into
popf
lods
sti
fists
repz
cltd
in
jo
ss
fisubs
mov
mov
push
and
fcom
mov
push
pushf
mov
outsl
lahf
inc
sub
push
sbb
and
or
movsl
daa
lods
out
in
sar
jns
or
adc
jnp
push
or
ja
mov
call
pop
push
jnp
cld
sti
shrb
pop
push
cmp
and
jecxz
dec
fisubl
cmpsb
scas
lods
cmp
hlt
and
out
mov
xor
jno
xor
mov
cli
push
subl
jno
sbb
addr16
daa
sub
sbb
loopne
push
ret
lds
mov
xor
jns
sbb
fdivrl
dec
icebp
inc
or
fdivrl
aad
test
mov
mov
mov
out
stos
test
xor
jae
fcoms
jo
int
adc
sbb
shufps
push
dec
xchg
outsb
mov
adc
jp
cmp
inc
les
rorb
mov
arpl
ljmp
sbb
iret
enter
mov
mov
sbb
pop
push
in
xlat
loopne
xchg
fstpl
push
sub
stos
jno
shlb
push
ss
cltd
jle
xlat
lahf
lods
pop
and
mov
mov
lret
int3
or
scas
jmp
dec
xor
push
inc
mov
leave
cltd
xor
pop
mov
lret
sbb
outsb
xchg
dec
repz
dec
xor
mov
std
and
push
mov
and
mov
xchg
pop
outsb
sbb
push
xchg
loope
mov
ljmp
pop
pop
pop
aas
jno
push
clc
inc
mov
in
lret
sub
pop
adc
jnp
dec
lahf
aaa
xchg
xor
les
cmp
faddl
push
xorl
aad
mov
fsubrs
iret
gs
stos
dec
test
mov
mov
push
insl
out
cltd
or
mov
mov
scas
subl
pop
test
mov
and
sbb
jle
clc
inc
sahf
pop
xlat
jge
scas
jbe
and
xchg
add
push
and
xor
add
cmc
lea
mov
pop
adc
jmp
mov
hlt
sbb
aam
ljmp
adc
adc
xor
cmp
cwtl
pop
jge
sbb
roll
icebp
shrb
ds
push
ss
or
inc
ljmp
pushf
les
loopne
pop
mov
xor
jo
jo
mov
cwtl
pop
shrl
mov
daa
and
fsubl
dec
cli
andl
xor
ss
pop
int
and
dec
mov
sbb
adc
lods
ljmp
dec
ds
movsl
push
and
mov
repz
xchg
xor
jnp
sub
jno
xor
insl
sub
ds
cltd
mov
and
adc
xchg
mov
das
loopne
fcmovu
sahf
sbb
mov
movsb
int
add
and
sbb
je
adc
push
add
enter
adc
xchg
mov
or
pop
push
pop
aad
mov
xchg
in
loop
mov
jp
and
ret
mov
hlt
outsl
pop
mov
outsb
notl
mov
inc
pop
arpl
and
lea
xor
fildll
mov
sbb
fisubrl
cmp
daa
ljmp
or
jnp
pusha
mov
std
dec
outsl
rcll
bound
insb
out
and
std
fldl
scas
and
cld
and
fcom
loopne
ret
and
jp,pn
imul
pusha
out
fnstsw
cmc
outsl
cmp
hlt
cmp
mov
mov
xor
cmp
jl
shrl
cmpsb
add
xchg
fdivl
in
int3
shrb
lcall
and
xor
daa
lahf
stc
pop
mov
fdivrs
sarl
popf
jecxz
test
add
cmpsb
cmp
cmp
ljmp
mov
leave
sub
insl
icebp
mov
dec
insl
jnp
pop
jl
stos
mov
push
or
subb
xor
scas
sbb
and
push
fsts
push
popf
scas
push
add
xor
or
and
js
xor
test
mov
testl
xchg
cwtl
cwtl
and
cwtl
push
sarl
and
imul
add
jbe
mov
and
in
push
adc
jp,pn
ljmp
or
sbb
mov
loop
out
lock
mov
jge
lret
jmp
inc
jmp
mov
jae
sbb
jbe
movsl
jno
add
outsb
xor
dec
add
je
jg
adc
push
rolb
rcr
lods
sub
jns,pn
cli
shl
sbb
jl,pt
sub
cmc
paddusb
out
xchg
lcall
cmpsb
shll
jecxz
aas
enter
repnz
xchg
repnz
dec
rorl
mov
rorl
divl
jmp
ljmp
mov
jmp
cmp
or
mov
or
scas
lret
out
xor
popw
imul
leave
xlat
mov
jge
loope
mov
gs
in
scas
mov
dec
loope
testb
stos
sbb
fisubl
lss
push
jl
mov
imul
push
movb
fldt
mov
and
lods
add
fdivrl
sub
cmp
mov
lret
push
dec
xchg
mov
insb
negb
lahf
adc
jmp
and
mov
jp,pn
jne
movsb
shll
shl
cwtl
int3
jbe
sbb
inc
cs
sub
cltd
mov
clc
popf
add
dec
test
mov
iret
fbld
aam
outsl
jp
cmp
fcmove
rorl
and
repz
imul
mov
inc
push
es
inc
push
sbb
lea
aaa
in
and
dec
jno
adc
xor
pop
sub
rcrb
out
jg
adc
lahf
jb
push
xor
inc
cmp
mov
addr16
inc
sarb
pop
pop
sar
add
imul
test
test
aas
pusha
call
mov
lock
jnp
push
insb
sbb
mov
and
jge
jl
shll
inc
sbb
sbb
xlat
pusha
push
push
sub
leave
aad
xchg
pop
xor
xchg
rcl
pop
xchg
xlat
imul
lock
pop
shl
out
ret
test
cs
xchg
inc
in
bound
xchg
push
mov
popl
leave
in
mov
dec
or
dec
lret
pop
push
popa
inc
test
xchg
mov
xchg
cmp
xor
outsb
inc
mov
jb
add
mov
cmp
mov
out
or
stos
sub
or
mov
dec
stos
jge
inc
test
imul
and
imull
cmc
inc
loopne
xchg
xor
mov
leave
add
aas
inc
in
iret
mov
mov
fisubl
pop
jp
mov
cmp
xor
and
rcrb
and
mov
movsb
xchg
sahf
pop
call
mov
cmpsl
sub
cmp
pop
cmpsl
in
in
jns
inc
pop
xchg
stos
int3
jp
dec
fisubs
xchg
push
sbb
test
leave
xchg
adc
or
inc
ljmp
mov
and
jp
jmp
xchg
add
jbe
fs
mov
dec
ljmp
xchg
out
rol
stos
mov
push
jb
mov
fldl
mov
fsts
cmc
aam
mov
fdivs
repnz
adc
add
cmp
outsl
pop
jmp
into
xchg
push
pop
jae
roll
mov
scas
xchg
mov
in
pop
ljmp
popf
or
mov
pop
jmp
test
stos
hlt
xchg
outsl
js
jnp
test
xchg
fs
sub
and
dec
or
call
jo
and
pop
or
push
jb
daa
mov
jbe
sub
xor
test
cmp
lock
pop
add
in
ss
loop
arpl
pop
cmpsb
fdiv
cmc
cltd
and
inc
fidivrs
mov
js
out
fbld
add
cmpsl
sbb
pop
popf
sbb
pop
outsb
inc
ret
sbb
out
dec
shlb
pop
mov
or
scas
fmull
inc
cmp
mov
pop
xor
stos
push
push
mov
jmp
repnz
in
and
pop
adc
test
test
ljmp
mov
or
pop
pushl
dec
xchg
in
ret
outsb
xchg
and
cmpsb
mov
lea
push
mov
cmpb
subl
sub
jl
push
call
jae
mov
add
imul
sub
es
or
mov
mov
xor
xlat
add
outsl
jns
or
jle
int3
sahf
int
movsl
fisubrl
push
cli
xchg
inc
inc
pop
mov
xlat
inc
fwait
not
mov
mov
adc
idivl
addb
jle
push
adc
dec
lods
ret
into
test
test
sbb
xchg
cli
mov
mov
lcall
mov
loopne
in
sub
in
xor
idivb
in
add
ds
inc
bound
je
inc
aas
dec
and
sbb
inc
mov
andb
jnp
cwtl
insl
rol
movsl
mov
sbb
jbe
mov
mov
mov
mov
or
pushf
inc
hlt
rorb
les
lock
or
xor
cmp
jae
sbb
or
lock
pop
adc
shlb
mov
hlt
dec
jae
xchg
sbb
xlat
sub
xchg
je
adc
cmpl
gs
fildl
int3
movsl
repz
cmp
xor
jb
add
mov
nop
negb
ss
adcl
mov
mov
sub
jmp
sahf
sub
pop
jbe
mov
cmp
cld
test
xor
cs
fwait
in
xchg
pushf
mull
fbld
inc
cmc
xor
clc
aam
je
xor
mov
inc
cmp
and
and
loop
mov
lock
add
cli
scas
dec
inc
xor
leave
scas
stos
lods
cmp
negb
arpl
aam
mov
pop
xor
or
addps
xchg
push
arpl
push
add
in
pusha
mov
and
mov
xchg
jns
cld
adc
stc
add
pop
xchg
dec
push
xchg
into
push
adc
xchg
imulb
in
pusha
shlb
psllw
adc
fs
pop
std
add
add
push
lcall
dec
sarb
ret
rcll
arpl
add
enter
pop
cwtl
cmp
nopl
sbbb
les
push
insl
out
hlt
dec
sbb
bound
jno
sub
cltd
add
rolb
cmp
mov
aam
popf
or
das
andl
jo
les
clc
into
jno
mov
add
xchg
sti
shrl
xor
sub
mov
and
mov
lret
sti
inc
cs
sahf
das
mov
nop
cmp
cmpsb
xchg
jno
mov
push
inc
out
sti
into
in
sbb
js
imul
addr16
cltd
out
in
std
mov
xor
jns
in
dec
sti
mov
fsub
and
jmp
jb
les
std
test
ret
fld
or
or
pop
inc
jb
pop
adc
sbb
lods
repz
lahf
aas
int
clc
lahf
xchg
fdivrp
enter
xchg
bnd
xchg
cmp
inc
xchg
inc
mov
pushf
add
mov
repz
jo
shrl
lcall
and
mov
filds
out
jmp
iret
pop
popa
xchg
mov
dec
xor
jl
push
jge
rcrl
and
push
adc
stc
fstpl
scas
pushf
fldcw
mov
mov
jns
out
lods
outsl
jle
movsl
ffreep
divb
out
jnp
stc
xchg
xchg
dec
xchg
mov
xor
filds
and
in
sarb
xchg
xor
add
xor
incl
fdivs
sub
cmp
xor
movsl
dec
icebp
fisttps
or
fucom
pop
pop
inc
jge
push
xor
jg
js
xor
movsl
pop
mov
test
ss
rol
add
adc
pop
test
mov
mov
adc
dec
or
mov
stos
xor
cwtl
fmull
fsubr
scas
pop
pop
mov
inc
and
pop
stc
jbe
xchg
add
cmp
fisttps
enter
mov
int
fcomp
inc
dec
cmp
pop
clc
fldcw
stc
or
nop
mulb
addr16
mov
dec
les
fdivl
outsb
clc
push
ss
add
call
loop
inc
mov
mov
push
je
fcoms
mov
or
and
fldt
push
mov
les
sbb
aas
test
lea
fs
lret
xchg
fnstsw
mov
test
repz
sub
test
aaa
out
cmp
notb
mov
push
or
xor
ret
out
mov
daa
lods
repz
insb
inc
add
cmp
ret
mov
dec
mov
mov
mov
mov
es
xchg
cmp
mov
cmp
add
leave
or
pop
hlt
and
add
mov
push
sub
cld
dec
aam
mov
data16
in
inc
and
hlt
mov
sbb
xchg
test
xchg
out
jecxz
nop
xor
andl
std
cs
cmp
jge
mov
sub
pop
add
mov
pop
popa
xchg
cli
mov
fsub
ss
xor
pop
shl
mov
icebp
lds
sub
shl
and
popa
fucomi
test
lret
enter
out
enter
cmpsb
xchg
mov
push
lret
orb
dec
shrb
jo
js
ret
mov
outsb
xchg
fsubrs
add
xor
mov
pusha
cmpsb
pop
out
add
sub
mov
adcl
pop
bound
mov
std
hlt
adc
jne
shll
das
js
inc
xchg
or
pop
xor
jo
clc
push
sub
fcompl
dec
and
pop
test
adc
lea
mov
xor
rcll
xor
mov
xchg
hlt
aad
cmp
inc
orl
and
pop
insb
or
insb
sub
and
shufps
inc
stc
pop
fsubs
pop
mov
and
xchg
decb
sub
sub
xor
jno
popa
imul
and
dec
stc
outsl
dec
cmp
test
adc
aad
jmp
push
test
lahf
sub
mov
or
fldenv
push
cmpsl
repz
movsb
sti
les
xor
inc
cmpsl
adc
pop
je
inc
aad
pop
ja
loop
cli
inc
push
imul
or
ja
imul
sub
fcmovu
push
push
sbb
fwait
ret
sbb
jne
sahf
add
mov
inc
jmp
jb
ss
je
int3
dec
jmp
cmp
dec
adc
out
mov
sub
shrl
dec
pop
xchg
das
vmovss
adc
pop
sarl
or
mov
cwtl
dec
xchg
xchg
out
mov
xor
cmp
aam
sti
mov
mov
push
testl
jae
sub
scas
ss
push
test
push
mov
mov
jo
push
js
mov
pop
popa
mov
cltd
fnclex
repnz
inc
fists
add
add
inc
cmpsb
popa
pop
mov
iret
pushw
popa
pop
psubsb
sbb
lock
daa
dec
lock
insb
cmp
fcomi
lea
sti
lock
push
aam
mov
xchg
fiadds
mov
popf
pushf
xchg
pushf
xchg
stos
add
mov
pop
lahf
pop
xor
lods
mov
sub
xchg
fwait
jmp
or
xor
mov
das
mov
jl
cld
cmc
fdivrs
xor
mov
dec
add
push
fs
es
lods
pop
call
call
roll
mov
add
mov
mov
jo
cmp
cli
pop
in
loopne
sub
mov
lods
cmc
movsb
xchg
js
rcrb
movsb
mov
ss
stos
popf
jo
iret
jl
pop
in
les
jo
push
movsl
fstl
adc
inc
jne
mov
inc
jl
push
sbb
mov
out
push
adc
ja
jne
jno
sti
aad
dec
call
rcr
inc
test
mov
inc
ja
shrb
jge
call
and
jge
adc
sub
xchg
add
stos
xor
fcmovu
xchg
repnz
add
mov
out
clc
imul
xor
ret
mov
push
mov
rep
and
bound
popf
sbb
xchg
scas
addr16
jb
out
jmp
fnstsw
out
fsubl
jne
loopne
and
pop
or
add
mov
shl
push
and
mov
pop
fdivr
mov
xchg
mov
fcomps
pop
andl
pop
mov
test
imul
add
sarb
pop
xchg
push
mov
std
xor
pop
cmc
in
rcl
dec
cli
ja
xchg
jle
jae
wbinvd
inc
dec
inc
jae
and
enter
push
aaa
jecxz
pop
and
rcl
in
xor
sub
pop
inc
fwait
cmp
pop
inc
sub
and
test
jp
test
inc
xchg
inc
xor
dec
jge
in
fs
dec
repnz
shlb
dec
stc
adc
stos
outsb
push
test
cltd
rclb
xor
jle
cmp
cmpsl
sub
data16
push
mov
icebp
sbb
mov
pop
lds
cld
mov
mov
mov
push
inc
dec
inc
scas
dec
inc
jmp
in
popa
push
pop
sub
push
cmp
stos
fwait
xor
ss
mov
jmp
push
sbb
rcll
scas
fildll
sub
pusha
jns
cmp
pop
aas
lahf
push
mov
ss
or
mov
and
push
aas
insb
xchg
push
fcom
jmp
cli
inc
mov
ret
aam
subb
test
ja
inc
ds
clc
js
sbb
mov
insb
or
lret
ss
xchg
in
sti
insl
inc
cmp
push
gs
scas
mov
dec
fadds
inc
ja
push
loope
and
dec
fdivr
pop
cld
popa
cmp
jb
push
lcall
xchg
xchg
mov
push
lods
pop
hlt
out
ljmp
xchg
mov
idivb
cli
sbb
daa
pop
gs
xlat
gs
dec
and
movsb
ss
fldenv
enter
and
add
imul
inc
lcall
xchg
jmp
into
mov
out
std
jae
jo
ds
roll
sbb
je
rcr
inc
insb
sub
add
mov
loopne
mov
je
daa
push
mov
push
ret
test
xchg
pop
mov
mov
push
aad
push
push
ljmp
jg
arpl
jae
test
jl
imul
mov
mov
cmp
jecxz
jl
dec
dec
pop
mov
push
push
adc
sbb
adc
xor
aad
push
out
in
or
jno
lcall
frstor
fdivrl
jecxz
outsb
pop
aam
out
pop
aas
test
or
sbb
sbb
out
xchg
pause
sbb
loopne
sbb
fdivs
imul
test
mov
push
sbb
test
or
mov
adc
ja
sbb
dec
add
sub
cmp
insl
cmpsb
mov
js
out
adc
test
add
lahf
mov
xchg
lcall
sbb
iret
rolb
pusha
adc
das
push
lods
movsb
push
mov
stos
out
mov
and
popa
inc
push
xchg
in
dec
lret
mov
fsubrs
dec
mov
ljmp
dec
jecxz
pop
imul
mov
int
and
sti
pop
fstps
mov
out
in
mov
pop
mov
xchg
in
jns
mov
adc
lds
push
inc
fcmovbe
in
mov
push
sarl
insb
ret
sahf
xchg
jnp
rcll
sbb
pop
and
gs
adc
mov
xlat
pushf
fistpll
sub
and
out
push
pop
mov
out
pop
or
inc
dec
negl
adc
sarb
rcrl
shll
mov
sub
int3
out
push
out
inc
bound
scas
push
push
cmp
push
popf
mov
mov
inc
in
stos
scas
scas
insb
repz
ret
int
sbbb
dec
add
lahf
fxch
and
xor
mull
add
push
int
jge
imul
cltd
push
fwait
shlb
adc
ja
pop
and
add
insl
fs
jno
sub
xchg
fidivl
lret
mov
je
jmp
leave
jmp
out
fdiv
outsb
add
cmp
and
mov
mov
fdivr
clc
pop
jo
fistpll
pop
lret
mov
push
push
or
or
adc
nop
jns
jbe
in
testb
shlb
inc
cmp
cmp
lahf
subb
loop
cs
push
data16
pop
filds
cmp
cmp
xchg
inc
sti
icebp
push
cmp
add
repz
sub
lcall
cltd
mulb
mov
sahf
idiv
xor
xorb
sub
insl
cmp
and
ljmp
in
mov
mov
mov
out
mov
xlat
sub
and
insb
mov
imulb
nop
or
inc
out
call
movb
pop
mov
hlt
push
sbb
lret
int
sbb
lret
gs
mov
sub
and
fstl
das
sarb
push
jb
mov
clc
xlat
out
out
out
or
scas
sub
das
push
cmp
jno
mov
pop
stc
lock
popl
push
and
jbe
jp
cmpsb
inc
mov
mov
in
mov
insb
sub
out
push
je
mov
xor
xchg
test
push
sub
xchg
inc
icebp
or
int
aam
mov
cld
in
ret
jne
shl
push
adc
out
es
sbb
insb
es
jns
mov
mov
aam
inc
push
mov
adc
adc
js
dec
fnclex
call
add
sub
or
cwtl
ret
adc
jne
loop
pushf
sbb
and
outsb
cmp
fwait
bnd
inc
xchg
push
ja
and
ss
add
push
mov
insb
cltd
mov
notl
test
loop
or
imulb
test
inc
inc
jecxz
popa
mov
xor
sahf
in
xchg
testl
xchg
lcall
xor
ret
cmc
mov
cmp
sub
les
sti
inc
and
mov
or
call
dec
cs
inc
adc
fdivl
xchg
ret
fidivrs
lret
aam
jae
xlat
fstl
sahf
leave
sbb
xor
push
mov
and
insb
fucom
jne
push
dec
adc
cwtl
loopne
jb,pn
mov
lcall
xchg
cmp
and
inc
arpl
sbb
cltd
adc
pop
cmpsb
call
mov
mov
add
data16
out
mov
icebp
fbld
push
jg
jmp
jb
lcall
mov
dec
ja
cmpsb
lea
adc
jle
dec
and
mov
popa
jge
or
sarl
cwtl
or
into
cld
jecxz
add
xor
pop
in
hlt
fidivl
fisttps
cmpsl
inc
scas
aaa
sbb
arpl
mov
sti
jp
cwtl
inc
pusha
pop
xchg
pusha
in
dec
pop
mov
mov
sarl
or
shlb
pop
addr16
mov
les
cmp
pop
repz
out
push
xor
pop
xor
in
es
lock
out
jo
fildl
ja
lahf
cmp
and
loop
addr16
aad
sub
push
mov
popa
cmp
push
add
jbe
adc
sarb
pushf
out
fsubp
int
adc
adc
lret
adc
inc
sbb
inc
xor
xlat
pop
sub
jl
ret
mov
mov
fdivs
push
sub
xchg
push
lods
hlt
arpl
jge
sbb
push
shrl
hlt
jo
nop
jno
fdivl
pop
in
pop
out
mov
xchg
push
inc
lea
push
fadds
std
mov
clc
loop
out
fiadds
pop
sub
into
jne
jge
scas
pusha
or
mov
push
add
filds
out
rclb
icebp
pop
jns
mov
cmp
jle
cli
fs
and
fsts
adc
outsb
pop
inc
cmp
inc
outsl
pop
pop
sbb
lock
or
push
mov
aas
cmpsl
insl
add
loopne
push
pusha
shrl
sti
or
adc
push
add
sar
aad
cwtl
sbb
scas
cmp
test
arpl
push
adc
idivb
cwtl
push
mov
enter
add
push
mov
mov
das
lcall
cmp
mov
sbb
insl
ret
jp
mov
mov
jbe
adc
inc
lahf
inc
or
popf
mov
orl
in
dec
sbb
sbb
sbb
lods
int
test
sahf
js
imul
jo
pop
test
rdmsr
sbb
push
or
push
jb
scas
xor
punpckhwd
adc
jmp
xchg
addr16
mov
lock
xchg
add
dec
or
outsb
pop
xchg
add
adc
hlt
sub
lahf
jp
ret
icebp
stos
mov
push
inc
xor
inc
xor
inc
mov
dec
pushf
lcall
fsub
popa
in
stc
xchg
das
popf
and
sub
adc
outsb
test
fisubrs
fs
sub
add
lahf
out
push
inc
loope
sbb
cmpsb
jle
dec
push
push
sbb
xchg
push
aam
pop
daa
out
popa
xchg
in
jnp
add
cli
xor
test
ret
sarb
sbb
jp
dec
iret
outsl
dec
pop
stos
jmp
pop
lahf
or
inc
mov
icebp
sbb
lahf
xchg
scas
in
daa
push
clc
push
imull
add
insb
fimull
add
outsb
cmp
mov
into
pop
jecxz
aas
and
xchg
dec
cmp
andl
fisttpll
shrl
in
inc
lcall
cmc
or
jae
cmp
cltd
pusha
stos
aas
movsb
shlb
and
adc
push
mov
lahf
sbbl
cmp
test
bound
mov
lock
and
cs
test
ja
sub
mov
xchg
fnstcw
call
xchg
jl
fwait
mov
lods
scas
inc
jno
xchg
adc
out
and
ja
cmpsl
inc
add
rcrl
jle
mov
call
or
sti
adc
loope
dec
cs
xchg
jg
cmc
aad
fldcw
or
mov
add
xor
scas
add
dec
mov
mov
fistpl
into
inc
jg
dec
adc
push
jnp
rolb
repz
xchg
fwait
adc
adc
inc
pop
add
jnp
loope
inc
loopne
add
pop
add
mov
mov
fwait
push
aaa
fsubrp
in
add
pushl
ret
push
cmp
cmp
nop
movsb
fwait
loop
adc
inc
dec
dec
pushf
xor
adc
sbb
mov
cmc
xor
pop
daa
cmc
int3
sbb
jl
int3
lcall
in
cmp
testl
enter
push
scas
add
sbb
addl
push
jp
dec
and
mov
sub
xor
pusha
push
mov
es
jle
mov
mov
dec
xchg
popa
fildll
jae
sarb
cltd
inc
pop
not
xor
pop
jns
ffreep
cmp
mov
and
ljmp
push
jl
inc
fdivs
bound
aas
enter
mov
aad
mov
sbb
mov
rcll
fcompl
call
xchg
mov
ja
xchg
into
pop
mov
push
mov
test
lret
in
mov
aaa
inc
out
mov
inc
sub
pop
fcompl
jl
cmp
rcrl
nop
and
mov
pop
push
std
testb
pop
mov
mov
icebp
inc
mov
cmp
pop
sbb
pop
rclb
sbb
push
mov
adc
push
repnz
outsb
pushf
data16
out
adc
xor
inc
pusha
iret
cmp
xchg
adc
out
cmp
adc
lcall
out
xchg
movsb
or
xorl
out
std
ljmp
fildll
fldenv
sub
mov
xlat
mov
and
pop
arpl
push
iret
jmp
inc
js
shl
or
mov
bound
pop
dec
rorb
mov
mov
je
repz
jae
push
repz
adc
outsl
dec
add
push
cs
lret
inc
mov
push
sub
outsl
fwait
dec
jne
xchg
or
scas
xchg
xchg
mov
or
and
andl
mov
dec
fstps
mov
es
leave
jns
notl
inc
popf
call
add
int
sbb
inc
enter
in
sub
nop
fildl
hlt
cs
push
push
xor
inc
into
mov
xchg
xchg
data16
push
stos
outsb
add
sub
daa
in
inc
and
mov
bound
pop
pop
pushf
jns
sbb
test
and
outsl
mov
mov
mov
or
stc
add
mov
cmpsl
jae
insl
int
and
and
xchg
jle
jbe
jbe
loopne
pop
inc
xchg
add
xchg
push
pop
fistl
pop
outsl
mov
ret
jnp
pop
and
and
xchg
int
push
sbb
fwait
cli
inc
mov
out
pop
ss
sub
jae
sti
mov
sahf
pop
lret
lret
inc
int3
sbb
cltd
sar
clc
add
in
je
adc
flds
inc
dec
subb
cmpsl
mov
iret
cs
jb
push
stos
mov
mov
xchg
js
cwtl
mov
out
jmp
insb
mov
inc
push
xor
mov
jge
pop
stc
add
neg
cmp
dec
add
push
inc
ficoms
fwait
xor
fcmovnu
lods
fisubs
push
int
pop
pop
and
in
mov
fsubrs
mov
jecxz
pop
and
shrl
mov
lcall
pop
adc
jle
cld
jmp
jae
leave
or
sbb
inc
jle
sub
dec
push
pop
cmp
xor
cmc
jle
mov
bound
ljmp
xchg
decl
cli
pop
scas
leave
int
jg
int
cld
bnd
adc
inc
fdivp
mov
jle
loop
cmpsl
ss
pop
jno
mov
mov
frstor
add
mov
xor
mov
xchg
inc
xchg
fistpll
mov
mov
jae
ret
mov
lods
add
adc
xor
jb
outsb
std
lea
mov
mov
cwtl
or
xor
arpl
push
xor
lea
sahf
or
loop
mov
stos
ficoms
dec
lcall
mov
int
mov
pusha
mov
push
push
les
mov
jne
shll
arpl
addl
push
pop
xchg
inc
inc
ss
in
cmpsb
mov
or
push
sub
fcmovnu
leave
inc
cmp
sbbl
es
ret
lcall
cs
imul
adc
mov
inc
lock
xchg
fildl
pop
imul
out
nop
push
daa
inc
in
cmpsl
adc
popf
out
imul
xchg
test
jecxz
testl
mov
movsl
sub
add
mov
stc
cltd
jmp
and
cmpl
push
aad
stc
or
scas
xor
inc
adc
mov
mov
fmul
das
mov
cmp
xor
movsl
hlt
test
xor
mov
ret
mov
cs
fucom
stos
cmp
and
cmp
or
mov
adc
cmpsb
xchg
mov
lret
adc
out
int3
xchg
loop
push
cltd
pop
jmp
sbb
popf
das
mov
add
jb
mov
das
mov
ljmp
daa
jp
and
sub
adc
insb
inc
ja
mov
inc
ret
mov
xchg
jmp
repz
shrb
mov
push
cmp
push
adc
pop
ror
in
pusha
fxch
lock
movsb
clc
pop
mov
bound
adcb
jl
cli
scas
nop
adc
sub
ud0
aaa
popa
push
sbb
xchg
xor
fcmovnu
add
ret
ss
xchg
pop
dec
mov
push
mov
cmp
fcomps
arpl
mov
sbb
mov
aaa
decb
lods
pop
push
in
insl
sbb
sbb
dec
pop
insb
xchg
pop
inc
sti
dec
jmp
xchg
sub
movsb
push
test
pop
dec
cld
dec
and
push
mov
sbb
pop
out
cmpb
imul
xor
sbb
aam
cmpsl
and
lcall
pop
push
test
jne
subb
sub
xchg
pushf
nop
ss
mov
popa
push
ss
imul
es
xchg
in
lea
sbb
insl
xchg
xor
les
fdivrs
ret
fcmovbe
add
in
push
pop
dec
jae
sub
je
outsl
dec
movsl
adc
and
jecxz
test
arpl
out
dec
push
outsb
enter
and
insb
sbb
dec
mov
add
inc
scas
into
lcall
xchg
add
pop
add
sar
sti
loopne
or
dec
iret
aad
mov
jne
push
jl
sbb
xchg
xchg
mov
pop
sbb
jae,pt
adc
add
xlat
faddl
push
fisttpll
sub
aas
mov
adc
pusha
or
dec
stc
std
in
ja
cmp
movsb
cmc
push
pop
loope
lods
jp
daa
stos
out
inc
popf
adc
enter
test
inc
xor
push
mov
fsubr
adc
mov
inc
pop
pop
push
mov
iret
xchg
pop
inc
enter
adc
xchg
jb
or
mov
fxch
and
cmpsl
or
lcall
pop
test
cltd
push
scas
mov
pop
scas
jmp
mov
lcall
dec
dec
mov
mov
jmp
xchg
fsubr
aam
and
wrmsr
lods
rcrl
ljmp
jp
mov
andb
repnz
dec
mov
xor
mov
adcl
cwtl
nop
mov
and
jb
test
dec
and
test
les
jnp
mov
stc
fistpl
or
dec
cli
mov
mov
dec
mov
jl
lret
ret
stos
test
or
dec
loope
in
std
push
sbb
in
aas
out
lds
xor
shrb
or
add
inc
test
mov
sbb
out
and
xchg
mov
dec
ret
mov
cli
mov
inc
sub
jge
js
dec
aas
mov
test
pop
loope
enter
int
mov
dec
cltd
xchg
jle
lret
enter
xor
stos
sbb
jb
mov
sbb
scas
ret
lock
outsb
lret
js
jae
cli
mov
cltd
outsb
rol
mov
insl
sbb
nop
adcl
jl
jmp
fmuls
and
movsb
or
inc
push
fs
and
ja
lock
cmp
xchg
loope
sub
jb
in
int3
mov
xchg
adc
sbb
sbbl
dec
sub
jl
iret
aam
pop
push
jo
sub
stos
test
mov
jle
push
mov
push
aad
inc
shlb
insb
inc
push
mov
in
pop
hlt
popa
inc
adc
aam
dec
xor
lcall
jno
dec
xchg
sbb
jns
xchg
or
inc
pop
sbb
cmp
jmp
lret
adc
push
mov
push
mov
rcrl
or
int
in
inc
shld
repnz
lret
loop
xchg
push
addr16
pusha
popa
xchg
nop
addl
or
mov
test
daa
inc
xchg
inc
outsb
mov
mov
cmc
or
subb
out
addr16
mov
pop
mov
add
jle
sbb
or
mov
and
dec
mov
jne
inc
inc
int
adc
cwtl
lcall
cmpb
faddp
push
sti
int3
int
or
xchg
out
cmpsb
cli
jbe
xchg
jnp
shlb
shll
and
dec
push
add
shlb
jno
mov
bound
and
stc
nop
movsl
aam
sub
out
mov
or
das
enter
shlb
sahf
add
ss
hlt
sbb
frstor
mov
aas
daa
mov
dec
js
dec
push
jnp
rorb
loopne
push
cmp
js
cli
sub
lods
jle
pop
pop
lds
xchg
mov
push
movsl
cmp
fcmove
sbb
seto
mov
lret
cli
push
and
jae
xchg
dec
dec
and
mov
dec
and
mov
add
jmp
arpl
xchg
xchg
sub
xlat
jl
mov
pop
loop
es
ret
jg
mov
push
inc
mov
push
ja
daa
adc
in
jmp
xchg
lret
xor
jbe
pop
pop
push
push
jae
insl
push
ds
sahf
inc
fildll
mov
adc
cwtl
adc
push
cld
imul
adcb
jmp
push
dec
lahf
mov
jne
popa
out
mov
into
and
fs
mov
cmp
fs
jae
or
aad
mov
into
jecxz
fmul
mov
fmul
bound
dec
test
add
pop
ja
mov
test
ret
leave
pop
movsl
push
sti
std
push
sbb
arpl
xchg
cmc
test
xor
push
mov
sub
cmc
imul
repz
in
or
push
popa
xor
test
jo
aam
sbb
fstpt
or
sub
popa
js
popf
mov
xchg
mov
push
mov
icebp
andb
mov
dec
or
es
lods
dec
hlt
lods
mov
in
xchg
test
jmp
insl
outsb
ret
pop
out
pop
inc
jg
and
xchg
popa
pop
xor
dec
and
pop
negb
sbb
daa
negl
mov
fs
aas
call
cmp
sbb
loop
sbb
jns
sbb
push
pop
pop
lret
and
je
push
jmp
mov
cmp
jno
loope
jae
cmp
push
imul
fisttps
cmp
fcoms
daa
xchg
cs
sbb
or
or
lcall
jl
push
inc
arpl
xor
jne
sub
sbb
fsubp
divl
ret
test
inc
shl
repz
mov
shrb
stos
pop
shl
jg
fcompp
mov
or
mov
add
jnp
das
push
in
inc
test
inc
imul
mov
mov
arpl
mov
cmp
negl
mov
mov
shll
xor
mov
addr16
sbb
dec
sub
fisubrs
rcrl
xor
or
sub
jg
loope
add
add
enter
aad
inc
cmpsb
and
jnp
mov
les
arpl
hlt
scas
pusha
les
mov
int3
scas
and
xor
repz
jl
cmpsb
fistps
mov
mov
roll
cmp
add
pop
or
es
scas
rcr
loop
dec
jnp
push
ja
sbb
popf
sub
or
je
sbb
sub
jnp
mov
lcall
xchg
loope
aas
or
clc
test
push
or
jle
and
sahf
and
sbb
mov
ret
movsl
inc
jp
adc
jge
ret
fsubrs
sbb
mov
push
nop
orl
movsl
pusha
repnz
je
xorb
cmp
xor
xchg
aaa
mov
cmpsl
or
cmp
push
jl
shrl
out
rorb
push
or
es
into
mov
inc
popa
jno
loope
into
xlat
out
insb
sbb
mov
and
test
cli
fxtract
test
movsl
outsb
sahf
addl
xchg
sbb
aas
and
and
daa
outsb
shl
rcr
pop
imul
mov
cmp
sbb
pop
mov
jl
add
jo
lret
in
movsb
lret
and
iret
dec
pop
cwtl
xor
and
adc
and
repz
mov
in
push
lea
repz
clc
pop
and
xor
mov
fmul
loope
adc
push
mov
push
cld
mov
test
fisttpl
xchg
loopne
lods
mov
in
and
mov
jns
ret
repnz
pushf
xchg
pop
pusha
adc
add
xchg
push
sahf
pushl
sbb
mov
cltd
sub
push
xor
in
push
or
add
daa
loope
fnstenv
inc
fwait
rcrl
dec
push
cmpsb
xchg
jns
movsl
pushf
outsl
sub
and
loope
sub
dec
pop
xchg
inc
int
icebp
leave
bound
cmc
ja
int
fimull
xlat
fisttpl
orl
pop
sbb
clc
cmpsl
mov
fnsave
ja
addr16
pop
repnz
stos
add
push
cmp
pop
push
jno
mov
jge
je
lods
mov
fwait
ds
insl
mov
push
dec
xor
push
add
sub
xchg
scas
lahf
jmp
pop
out
add
lahf
cvtps2pi
mov
sub
mov
cld
repz
sahf
pop
int
sbb
sti
outsb
scas
push
push
xchg
xor
stos
jp
orb
xchg
std
stos
xchg
push
xor
xor
xorb
cmp
add
inc
and
shlb
imul
and
sbb
in
mov
and
mov
ss
iret
shr
into
out
movsb
xor
xor
or
sub
sub
loop
inc
xor
nop
pusha
scas
popf
xor
scas
fwait
push
adcb
push
xchg
or
push
loop
imul
add
lods
cmp
gs
das
xor
popa
in
pushf
adc
test
aas
and
scas
outsb
sarb
mov
movsb
cltd
loope
cmp
movl
insl
sbb
push
stos
xlat
mov
and
mov
mov
cwtl
mov
dec
add
cmp
decb
xchg
xor
cwtl
mov
lods
sbb
loop
stos
or
sub
mov
jp
jne
imul
nop
jb
adc
lods
pop
inc
pop
sar
sarl
dec
add
repnz
mov
popa
inc
or
cmc
mov
lret
stos
in
fstpl
sub
ja
and
mov
dec
jle
adc
xor
clc
cmp
sarb
cld
inc
jl
jg
gs
pop
jnp
imul
xor
inc
rcrb
cmp
data16
xor
xor
mov
lret
adc
push
push
dec
xchg
sub
lret
nop
dec
mov
inc
push
inc
lods
jbe
jae
xchg
jmp
dec
jp
enter
cmp
nop
mov
outsl
add
push
test
call
add
pop
adc
cmp
shll
jnp
daa
mov
or
mov
in
mov
lahf
outsl
jg
mov
and
into
mov
jnp
xor
jbe
dec
mov
ljmp
adc
xchg
inc
mov
xlat
mov
pushf
or
out
dec
add
or
in
out
mov
jo
movsb
jb,pn
ss
mov
aad
cmp
ljmp
xor
scas
cmp
popf
in
cli
xchg
in
sbb
mov
adc
enter
insb
aam
je
stos
add
mov
or
mov
lret
loopne
sub
mov
test
add
lret
cmp
jmp
jnp
cli
jbe
push
out
adc
dec
ror
cmpl
icebp
adc
stos
cmp
pop
scas
sub
or
movsl
fmull
lcall
loope
cmp
ds
out
ret
mov
sub
or
xchg
and
imul
push
dec
cmp
jns
rorl
inc
jecxz
add
mov
and
mov
es
movsb
ja
jle
inc
int3
mov
dec
push
popl
push
dec
js
dec
and
pop
xchg
xor
sub
imul
jbe
lret
pop
aam
mov
pop
xchg
cmp
repz
imul
aas
jo
movsb
jmp
outsl
stc
dec
das
sub
lea
xchg
push
call
jle
xchg
mov
adc
orl
pushf
adc
clc
mov
mov
pop
mov
fxch
out
mov
or
pushf
mov
add
cltd
push
add
or
jp
add
dec
xlat
push
cmc
mov
or
daa
ret
aam
test
sub
push
lock
or
fiaddl
inc
sub
adc
sub
add
popf
push
pop
jle
and
mov
incb
xchg
mov
loop
xor
fnstenv
cwtl
mov
andl
mov
inc
into
arpl
sub
out
cmp
xor
jnp
jg
hlt
scas
xor
xchg
xor
sub
inc
mov
pop
mov
ret
fstp
inc
pop
mov
inc
mov
sbb
jae
repz
int3
dec
loop
lock
lret
gs
sahf
scas
sti
push
mov
cli
addr16
pushf
cwtl
push
icebp
adc
push
xchg
aam
out
maxps
js
ss
push
push
mov
dec
sub
testl
test
loop
mov
or
adc
adc
cmp
insb
push
add
push
dec
push
add
cld
stos
je
int
rolb
lods
dec
xchg
inc
push
in
jl,pt
jne
fs
add
enter
int3
popa
mov
jecxz
push
fldt
push
cwtl
in
mov
xor
xchg
out
or
loope
test
aad
and
xor
in
bound
cli
in
incl
adc
popf
sub
rolb
lcall
push
mov
and
adc
div
mov
fidivrl
in
out
cmp
leave
insl
mov
pop
dec
pop
pop
jge
outsb
rcrl
dec
daa
imul
in
bound
add
mov
in
arpl
cli
fwait
jo
mov
in
scas
cli
push
add
adc
mov
cli
idivb
dec
jae
or
roll
enter
adc
mov
xor
insl
dec
add
int3
icebp
xor
enter
dec
test
jmp
mov
push
pop
add
iret
stos
cmc
jmp
adc
inc
in
adc
cmp
ret
int3
test
xchg
out
sahf
sahf
fsubrs
cmpsb
negb
or
cmpsl
jnp
dec
fwait
jne
push
nop
mov
inc
mov
sahf
mov
cwtl
loopne
mov
push
loopne
iret
push
je
orb
fs
sub
mov
mov
mov
testl
outsb
fwait
mov
jmp
mov
pop
push
mov
inc
lcall
mov
stc
push
mov
outsl
and
jg
sbb
pop
aas
pop
stos
cmp
stos
push
lret
push
clc
cbtw
or
insb
loope
pusha
mov
inc
add
dec
test
cmc
je
std
faddl
cmc
pop
xor
xchg
push
push
jns
adc
aaa
sbb
add
mov
sahf
add
fcmovnu
push
adc
add
pop
pop
mov
sbb
popa
shl
push
test
inc
and
mov
mov
adc
cld
jle
mov
mov
inc
or
adc
adc
popa
push
pop
sbb
mov
push
xor
ret
out
mov
sub
cmp
cmc
and
cmc
cmp
mov
daa
test
shlb
pop
xchg
push
out
pushf
dec
xorb
sbb
jecxz
cmp
jnp
cld
andb
aad
gs
in
das
lea
icebp
popa
lret
jno
cmp
dec
adc
push
sub
imul
gs
mov
pop
sbb
rcl
xor
sbb
out
inc
and
add
jnp
or
adc
jecxz
sbb
pop
loope
mov
int
jne
pop
lcall
test
aas
and
es
pop
dec
cmp
mov
jne
or
push
and
movsl
mov
out
add
pop
dec
aaa
lahf
fs
mov
stos
inc
shrl
xor
pop
shrl
dec
add
int3
pop
out
sahf
lahf
xchg
jecxz
cmc
and
out
sbb
and
or
out
add
push
dec
ret
outsl
scas
mov
xchg
shl
out
movsl
aam
je
push
out
fimuls
inc
div
rolb
arpl
push
roll
xor
fs
daa
xchg
mov
icebp
mov
lret
stc
cmp
loope
mov
jmp
pusha
mov
cmp
test
add
push
sub
rclb
dec
cs
jo
stc
movsb
mov
ljmp
insb
dec
jae
jl
pop
stos
and
xor
xchg
mov
outsl
mov
inc
pop
dec
ss
cmp
imul
repnz
mov
stos
add
lock
cmpsb
sub
inc
or
fs
fs
movsl
mov
add
lea
cwtl
dec
dec
into
mov
out
push
fsts
sbb
xor
adc
pusha
jne
clc
push
por
mov
pop
popa
inc
rcrl
mov
inc
stos
mov
xchg
mov
mov
inc
fstl
sbb
sbb
lock
cmp
and
sbb
cltd
sti
ljmp
test
imul
inc
xlat
xlat
inc
inc
jno
fs
lcall
push
into
sub
jno
adc
sahf
popf
lods
mov
push
rcr
pop
or
adc
pop
es
pop
fs
jmp
les
add
fcomps
push
push
and
hlt
movsb
mov
ja
daa
fdivs
mov
cmp
es
jge
repnz
push
shl
push
pushf
xchg
or
mov
std
jae
data16
dec
jp
xor
jno
out
cwtl
mov
mov
inc
scas
fstps
xorb
inc
pop
lea
add
push
loop
int3
push
or
mov
add
int3
sahf
stos
fdivrl
test
insl
push
mov
fbstp
nop
inc
adc
negl
push
dec
inc
xor
loope
es
xchg
cmp
jg
mov
pop
push
push
je
lea
pop
push
mov
jnp
test
adc
hlt
movb
aad
cltd
jb
into
lcall
fadds
cs
int
lods
adc
shrl
add
fisubrs
sub
or
jg
ljmp
xchg
outsl
push
mov
into
popa
fst
cmp
mov
mov
fs
cmp
iret
dec
repz
dec
cmp
and
sub
jp
lock
cmp
cmp
cmp
lret
jp
jmp
stos
aad
cs
outsb
jle
sbb
sbb
xchg
fisttpl
inc
mov
pop
negl
mov
iret
sbb
mov
leave
test
xor
test
pusha
mov
ficoms
xlat
jge
shl
sub
ss
mov
lahf
sub
mov
jo
push
or
jbe
adc
icebp
push
lds
jo
xlat
or
sub
dec
add
mov
fldt
test
pop
dec
push
test
loop
fdivr
inc
into
push
pop
clc
daa
push
cmp
stos
das
sub
repnz
js
js
loopne
add
pop
xor
js
cmp
jmp
add
out
cmp
xchg
sub
insb
push
adcl
cmp
mov
mov
shl
call
jecxz
aaa
xor
add
icebp
icebp
aam
jmp
mov
push
lret
mov
mov
mov
ss
mov
cmpsl
cltd
cmpsb
das
je
xlat
in
dec
xor
icebp
out
jle
xchg
jecxz
movl
dec
fwait
ss
jecxz
or
push
popf
sbb
insb
or
in
cmp
mov
cmp
rcrb
hlt
or
fdivr
inc
pop
sbb
xchg
add
push
xlat
inc
mov
xchg
sub
dec
add
mov
xor
mov
or
lret
fimuls
add
jo
imul
jle
shlb
ret
fsubrl
adc
rcrb
jecxz
mov
call
mov
lret
fisttps
in
cmp
add
inc
add
xor
leave
xchg
clc
leave
roll
xor
push
adc
sbbl
lds
lods
fwait
stc
adc
dec
cmp
inc
bound
pop
clc
ds
push
divb
pop
mov
es
add
sbb
je
and
addr16
cmp
add
mov
lret
enter
push
lods
dec
icebp
call
loop
je
sahf
ss
clc
push
mov
add
mov
push
push
dec
lahf
dec
push
cmp
sahf
lret
movsl
test
mov
inc
jnp
dec
fnstsw
popf
xchg
sbb
add
ficoms
imul
mov
sbbb
jb
or
sbb
mov
scas
mov
divl
sahf
in
mov
xchg
push
repnz
ss
jg
cmc
cmc
ds
push
aad
and
scas
mov
mov
push
or
arpl
mov
cltd
pop
or
xchg
and
sbb
sub
popa
mov
inc
jae
add
mov
jno
rorb
testl
mull
pop
pop
xorl
loopne
push
add
xor
incl
pop
mov
sbb
jge
ljmp
insl
not
xchg
sub
inc
jbe
jno
adc
insb
or
fsub
inc
jno
mov
lret
sub
loop
mov
lds
les
cltd
fidivs
dec
shl
push
add
push
or
pop
jmp
push
and
cmp
aas
push
mov
imul
cwtl
push
and
or
stos
nopl
cmp
inc
and
sbb
in
ret
int
inc
ljmp
movsb
dec
dec
xchg
and
lcall
inc
add
inc
lods
lret
xchg
aam
push
cld
inc
lcall
jecxz
outsb
loopne
insl
sub
xor
addr16
cmpsl
jno
sub
mov
jne
sbb
out
clc
xor
sti
add
lahf
jg
cmp
in
push
jle
push
clc
std
je
ss
inc
int
test
inc
nop
divl
adc
gs
add
push
lea
add
cmp
add
notb
pop
fs
inc
mov
les
addr16
jne
xor
mov
lods
lea
and
add
cmp
xlat
aad
lods
and
outsb
je
pop
setp
xor
adc
jo
cltd
add
or
popf
call
das
sub
in
xor
lea
mov
pop
mov
or
mov
rcr
cli
cmpsb
icebp
das
mov
mov
push
insb
jge
sub
add
and
loope
imul
inc
cli
pop
mov
stos
dec
add
stos
scas
sub
int3
sti
cmc
xchg
inc
test
pop
fsubs
jl
cld
int3
pop
hlt
leave
mulb
add
nop
mov
xor
gs
insl
js
clc
xchg
mov
shrb
cmc
xchg
xor
stc
or
gs
call
mov
pushl
popl
add
push
outsl
cmp
jge
inc
gs
sub
mov
iret
mov
mov
popa
push
push
fnstsw
ja
mov
lock
jge,pn
out
js
and
jg
ret
cmpsb
xchg
in
adc
push
jo
push
fnstsw
dec
in
sahf
iret
dec
cs
lret
lcall
push
lret
jle
push
pop
mov
sar
xchg
movzbl
and
xchg
mov
and
dec
sbb
fidivl
imul
sub
idivb
pop
imul
push
mov
les
rcrl
popa
scas
mov
int
ss
push
je
lock
icebp
jmp
inc
dec
or
ret
xor
jp
mov
stos
fsubl
nop
sbb
mov
rcrl
push
jl
pushf
call
outsb
jecxz
shrl
or
not
push
loope
inc
and
or
mov
inc
loop
dec
add
mov
xor
push
idiv
jno
and
aad
push
cmp
mov
pop
mov
int3
sub
imul
stos
dec
xlat
push
dec
cmp
cmpsb
adc
ret
or
mov
jo
js
pop
pop
mov
pop
out
sub
pushf
jne
add
cmpsl
movsl
jecxz
mov
dec
cmp
xchg
cmp
pop
scas
insb
sbb
jg
outsb
outsb
fbstp
pop
into
fcmovb
mov
cwtl
jo
lahf
std
xchg
das
mov
xor
xchg
and
insl
dec
sbb
cmp
pop
fldenv
insl
add
shrl
stos
ret
push
mov
std
pop
out
aaa
lds
add
fisubl
lods
jp
test
std
adc
fstl
loopne
xor
gs
cs
dec
mov
in
enter
sarb
sub
ljmp
mov
add
cmp
cld
mov
in
dec
push
inc
lods
loopne
scas
fadd
daa
fst
inc
jne
fwait
adc
or
xchg
adc
addr16
cmp
sub
pushf
int
xchg
add
mov
mov
cmp
in
fs
mov
scas
lret
lahf
xchg
mov
cltd
ljmp
std
fsub
xchg
xor
inc
sub
in
ds
std
into
mov
cwtl
fnstcw
mov
lods
loope
push
pushf
jnp
incb
sbb
xor
addl
es
hlt
bnd
pop
and
out
cmp
in
cli
dec
adc
movsl
out
dec
mov
inc
test
xor
and
loop
mulb
dec
lods
std
cmp
test
sti
and
add
out
in
in
loope
mov
rcll
ja
cmp
cwtl
mov
jbe
dec
push
js
xchg
sub
pop
addb
ret
gs
pop
pop
aaa
aad
outsb
movsb
aas
inc
and
inc
sbb
mov
xchg
pushf
add
inc
adc
sub
sub
sub
iret
xchg
fwait
pop
pop
xchg
pop
xchg
das
outsb
pop
jae
rorb
int3
fdivl
rorl
fs
sbb
cmp
pop
nopl
mov
jmp
out
repz
sti
mov
insl
loopne
or
push
nop
jae
pop
mov
test
out
dec
pop
das
pop
les
sub
pop
jb
aam
cltd
in
jp
mov
lods
test
dec
sub
faddl
in
fs
push
mov
sub
push
sub
mov
and
out
pop
jl
and
push
mov
pop
sub
scas
xchg
arpl
fmul
aad
dec
lret
jno
lret
cmp
lea
adc
xchg
test
loop
xchg
call
stos
pop
mov
or
xchg
cmp
mov
mulb
xchg
xchg
dec
outsb
add
dec
pop
aam
scas
pop
std
in
stc
je
push
insb
lds
shlb
xchg
divb
sbb
mov
xchg
in
mov
in
jmp
sarb
cld
xchg
xchg
dec
sbb
fistpll
xchg
sbbl
int3
pusha
inc
adc
xor
dec
loopne
dec
pop
daa
pop
rcr
add
es
or
insl
jge
int3
test
cmpb
testb
int
push
cli
pop
stc
movsbl
test
mov
hlt
dec
pop
and
xor
push
jns
iret
hlt
jle
loopne
das
clc
out
jecxz
sbb
cli
and
pop
ds
pop
aas
rcrl
sub
sbb
movsb
lahf
mov
insl
repz
mov
adc
cmc
sbb
mov
das
js
lret
adc
nop
aad
pop
mov
movsl
adc
imulb
aad
inc
cmpsb
mov
ljmp
movsl
and
sti
sbb
aad
int
push
cmpl
pop
cmp
mov
popf
cmp
jmp
sub
scas
out
push
jp
mov
popf
mov
xor
out
lods
leave
cwtl
sbb
lret
and
in
xor
cmpsb
or
lea
dec
cmp
ljmp
inc
ret
mov
xor
pushf
or
xchg
mov
sbb
imull
dec
jnp
sub
sub
int3
mov
lahf
lahf
xchg
mov
sub
test
enter
cmp
push
jl
and
or
lahf
lods
mov
mul
mov
sbb
add
jge
fmuls
xchg
out
addr16
shrb
fs
test
mov
add
clc
push
xor
scas
inc
addb
mov
bound
mov
aaa
mov
lock
xor
lcall
mov
ror
mov
clc
aam
lods
pushf
xchg
mov
mov
sub
icebp
outsl
rcll
arpl
push
out
cmpsb
adc
adc
sub
cmpsb
mov
movsb
call
pop
flds
outsb
lods
call
out
xchg
stos
push
push
mov
dec
adc
sub
mov
aam
js
bound
sti
inc
negb
sbb
repnz
scas
popa
lahf
outsb
and
mov
lods
mov
andl
cli
jge
shll
ja
adc
xor
jmp
stc
lea
jb
out
fbstp
das
ja
inc
lea
imul
sub
adc
mov
test
inc
cli
aas
xorb
cmp
jl
sbb
pusha
stos
jge
adc
mov
sub
jae
shrb
jmp
mov
dec
dec
and
out
insb
xor
call
cli
aam
and
inc
and
pushf
stc
jge
jns
jmp
inc
jo
inc
cmp
mov
adc
es
or
testl
hlt
push
test
add
adc
sub
sub
sbb
jge
ficoml
outsl
jae
cmp
psrlq
mov
xor
lea
jmp
dec
mov
sub
mov
push
test
mov
mov
out
jge
cmpsb
adc
dec
pusha
or
movsb
rolb
mov
cmp
mov
cli
inc
or
shl
sub
mov
ficoms
or
jecxz
sub
int
lret
enter
mov
movsl
add
repnz
jo
lock
mov
repnz
pop
or
jl
xchg
adc
mov
aas
in
dec
scas
and
push
inc
adcl
jo
or
ss
pop
stos
xchg
adc
adc
xor
ror
xor
cli
pop
push
lods
mov
add
xchg
sub
rcrl
cmpsl
mov
xchg
sbb
jg
sahf
fisubs
shrl
sbb
lcall
push
test
xlat
sbb
data16
call
jl
xor
stos
mull
insw
inc
cmpsl
push
sub
aam
loop
and
aaa
mov
cltd
test
test
jbe
scas
xchg
or
push
cmp
cmp
inc
into
fmul
int3
aam
das
or
int3
push
dec
test
mov
icebp
int3
daa
adc
cmpsl
inc
out
push
mov
icebp
xlat
mov
pop
cwtl
addb
sbb
das
or
lock
push
test
addr16
xchg
dec
ja
js
leave
adc
and
popa
pop
dec
sbb
popf
dec
stos
xchg
repz
adc
mov
mov
scas
push
lret
xor
adc
mov
sub
mov
rcrb
dec
cmp
das
mov
mov
cmp
shr
add
mov
testb
cmp
mov
sbb
fadds
in
add
test
mov
mov
das
inc
xlat
inc
sub
mov
rolb
sahf
movsb
jmp
push
pusha
dec
xor
cmc
sub
pop
push
andl
std
push
jo
mov
cmp
aam
sub
out
or
cmp
push
loopne
fimull
fiaddl
push
jp
sbb
cmc
outsl
aam
cmpsl
lahf
push
orl
cmpsl
mov
jmp
jbe
add
or
cs
push
loop
in
adc
mov
lret
pop
xor
xorl
nop
pop
adc
icebp
sub
sbb
mov
fld
mov
adc
cmp
jns
adc
push
jno
and
xchg
push
sti
cld
xchg
push
sahf
mov
in
lods
push
pop
outsb
outsb
mov
outsl
and
xor
cltd
fisubrl
test
jnp
daa
lcall
fdivrs
je
mov
nop
inc
scas
stos
mov
add
mov
call
xchg
mov
les
or
iret
pop
lock
or
in
hlt
adc
movsl
out
stos
sbb
xor
sub
cmp
xlat
lret
cs
sbb
pop
outsl
push
and
daa
leave
sahf
lret
dec
fildl
mov
jo
pop
sub
lret
adc
or
jmp
mov
addr16
xorb
and
pop
jns
xchg
aad
cmp
sbb
mov
inc
or
sbb
xlat
push
adc
nop
shld
mov
in
ja
mov
insl
jl
inc
hlt
xchg
push
jb
fmull
adc
test
add
scas
lret
std
add
mov
dec
nop
pop
inc
sub
rcr
jb
mov
or
or
enter
pushf
adc
fisttpll
stos
lods
lock
fcoml
repnz
pushf
jl
fucomip
lcall
push
and
stos
stos
and
insb
mov
movsl
sbb
mov
push
iret
jge
pop
nop
ja
sbb
lods
mov
push
cld
or
xchg
je
push
pop
je
adc
add
in
jns
adc
rcrl
xor
sbb
scas
clc
mov
ja
jl
outsl
stc
mov
sahf
jae
xchg
xchg
notl
pusha
add
icebp
outsb
mov
lahf
rclb
cmp
mov
and
dec
sbb
sahf
jns
jle
inc
mov
minps
imul
sbb
fmul
adcl
cmp
enter
mov
push
and
pop
pop
stos
xor
jne
and
sbb
cmp
jae
mov
or
mov
or
adc
and
sub
pop
xor
shlb
aas
xchg
mov
xor
icebp
into
cmp
xchg
xchg
mov
enter
xor
adc
sub
mov
pop
ds
push
push
xor
call
xchg
decb
mov
mov
mov
pop
bound
cmp
fwait
inc
sbb
lods
dec
sbb
or
push
or
and
movsl
push
mov
dec
mov
cmpsl
dec
dec
xor
stos
enter
sbb
jnp,pt
repz
addr16
aam
mov
mov
cwtl
icebp
push
cld
add
loop
out
xchg
xlat
sbb
pop
mov
xor
fdivl
dec
sarl
ror
jne
and
sbb
xor
in
pop
push
push
mov
scas
xchg
sti
icebp
insl
dec
pop
icebp
ret
rcr
xor
mov
gs
je
pop
stos
jb
mov
sbbb
push
fstps
push
sub
insb
mov
pop
cmp
aad
movsb
cmpsb
mov
pop
push
inc
in
fsubs
dec
and
aam
out
sub
test
ret
cmc
mov
sub
push
jne
adc
outsl
int
les
pop
movsb
pop
lret
and
int
push
loope
outsl
adc
in
push
out
daa
lods
movsl
std
leave
mov
inc
dec
int3
cmp
movaps
andb
lock
repz
and
push
insb
icebp
cmp
pusha
push
cltd
mov
bound
jae
cmpsl
jp
ljmp
push
out
js
mov
push
cld
or
ror
ret
dec
pop
sbb
cmc
lods
filds
pop
std
cmc
ret
sbb
xor
xchg
dec
jne
je
push
stc
jle
sub
mov
inc
stc
repz
in
push
ret
movsl
cltd
fsubrl
or
neg
test
sub
mov
pop
xchg
mov
and
lret
mov
jnp
inc
repnz
adcb
xchg
cmp
mov
lock
mov
aad
add
cltd
mov
adc
or
mov
sub
jl
mov
aas
not
push
mov
into
add
dec
cmp
mov
adc
in
imul
mov
pop
cld
sbb
out
xchg
adc
insl
adc
add
enter
sbb
arpl
pop
dec
imul
imul
insb
sbb
inc
out
out
sbb
imul
mov
xor
push
sub
cmpsl
xchg
mov
out
lods
lds
xchg
add
mov
lcall
sarb
cmp
imul
sbb
loop
shlb
addr16
add
inc
cmp
js
movsl
and
xchg
sbb
mov
shrl
lds
inc
pop
cmpsb
jle
pushf
arpl
fwait
je
push
xlat
sti
or
sarl
jo
xchg
push
push
imul
repz
push
sbb
jne
idiv
cld
inc
aam
repz
icebp
push
in
adc
frstor
sbb
maskmovq
notl
and
mov
aam
or
xor
xchg
test
data16
cwtl
mov
or
jl
mov
pop
mov
fwait
daa
arpl
out
push
rol
pop
in
xchg
cmp
aam
push
enter
mov
bound
adc
mov
jne
insb
jmp
xor
push
push
push
aad
or
inc
jns
inc
inc
ljmp
mov
xor
movsb
insb
loopne
adc
xor
cmp
push
loopne
loopne
mov
and
cmp
add
push
or
cld
add
push
repz
sub
xor
stos
repz
xchg
leave
adc
idivl
xchg
and
dec
call
ret
fadds
fmuls
das
packsswb
jno,pn
jmp
cmp
add
cwtl
mov
sub
mov
mov
jbe
gs
jmp
mov
xchg
cs
lret
inc
gs
jp
aam
xchg
sbb
xchg
into
push
outsb
adc
and
jl
enter
je
pusha
repz
shrb
or
loope
aas
sub
mov
fcomps
push
sub
aas
pop
mov
pop
mov
pop
neg
xchg
aaa
sbb
cld
mov
inc
add
popa
addr16
sbb
into
notb
push
lret
sub
ret
adc
jb
shll
push
push
fidivs
xor
xor
push
lods
sbb
ja
push
loope
outsl
cli
cmp
test
movsl
and
movsb
subl
jmp
into
push
adc
in
mov
adc
cwtl
outsb
popa
mov
and
clc
int
in
sub
jbe
aaa
out
or
xor
repnz
ret
mov
xchg
sbb
std
loope
sbb
repz
and
loop
inc
pop
cmp
jb
push
lret
cli
cmp
dec
sub
add
xchg
aaa
or
mov
stc
shrb
add
push
roll
adc
cwtl
loopne
fimull
dec
cmc
or
adc
sbb
cwtl
and
roll
or
pop
mov
out
iret
cmc
gs
scas
aaa
ja
pusha
mov
rolb
jb
ret
in
pusha
mov
fwait
jns
sbb
inc
cmp
mov
xchg
aaa
push
mov
or
push
add
inc
sbb
push
arpl
or
xchg
add
aad
ja
lock
jne
stos
movaps
or
sbb
push
sbb
adc
sub
cmpsb
and
jmp
xchg
push
imul
jmp
push
test
cwtl
int
lock
mov
adc
bound
bound
mov
and
dec
loope
mov
sub
stos
insl
or
mov
jae
clc
iret
pop
adc
leave
mov
loope
movsb
cli
mov
and
jnp
aam
jg
daa
mov
inc
mov
popf
je
cmp
dec
lahf
gs
jbe
ljmp
icebp
mov
sti
cmp
das
cmp
add
jl
jg
bound
rcrb
shrb
sub
push
sbb
inc
pop
fwait
insb
cmp
mov
hlt
cmp
xchg
hlt
dec
lret
stos
mov
push
add
out
test
pop
xorl
push
movsb
jmp
or
or
lods
adc
jge
fmull
mov
bnd
and
xchg
jle
movsb
sub
mov
ret
push
mov
push
cld
pop
or
xor
cmp
test
push
adc
push
push
cmc
cmp
inc
adc
ret
outsb
or
cmp
inc
xor
jnp
pop
dec
in
mov
lahf
inc
push
icebp
and
push
movaps
stc
mov
aam
imul
cmp
cli
push
and
insl
out
cs
sbb
inc
pusha
mov
cmc
cmpl
sub
xchg
bound
test
sub
or
addr16
cmp
jb
push
mov
scas
add
cli
insl
cmp
xlat
sub
imul
and
mov
lcall
cmp
inc
inc
or
shr
push
aaa
loopne
outsl
repz
out
out
fsubrs
fldcw
sub
int
lret
shl
lds
adcb
dec
sahf
dec
mov
mov
mov
inc
mov
mov
fldt
jg
xchg
or
js
ss
or
jmp
dec
mov
pop
add
popf
mov
stc
out
mov
rol
fstpl
xor
sbb
push
mov
in
mov
or
insl
mov
pop
sbb
pop
std
xchg
xchg
and
ficoml
adc
mov
xor
fwait
aaa
movsb
rcrb
pop
mov
mov
ss
or
jge
imul
push
mov
xchg
loop
lods
pop
lret
ret
cmpsl
ret
repnz
mov
popl
cmp
xchg
push
movsb
xor
jne
stc
jno
mov
sti
push
inc
imul
fwait
lcall
and
loope
jle
lods
push
mov
lock
xchg
ds
fimull
fldcw
insl
aad
fbld
inc
sahf
dec
shll
frstor
in
push
add
adc
xor
out
out
out
lock
lock
into
out
cwtl
lret
imul
and
icebp
mov
or
or
dec
mov
and
sbb
mov
jmp
dec
jno
adc
shr
sub
aaa
imul
loope
les
hlt
cld
std
xor
sbb
sbb
test
test
mov
xchg
iret
pop
xor
cld
inc
lea
mov
pusha
sti
mov
stos
jnp
lcall
sbb
and
imul
fcmovnbe
xchg
and
daa
sti
cmp
lret
mov
mov
add
jmp
jo
test
out
sub
xchg
inc
pop
rclb
pop
add
repz
push
cmp
pusha
mov
lea
cmp
xor
adc
in
mov
xor
xlat
mov
add
iret
jnp
xchg
bound
cmp
movsl
pushf
mov
sub
fsub
sahf
insb
add
jle
push
movsl
rcl
mov
xchg
add
push
and
mov
popf
gs
sbb
add
nop
jne
push
jg
popa
out
div
popa
and
sub
jb
mov
lcall
lock
lahf
mov
dec
lock
jl
xor
sti
jb
adc
scas
mov
fsubs
cmpsl
push
out
push
fcoms
lret
push
ljmp
out
arpl
xor
push
sbb
stos
cmp
fildll
ds
leave
push
cmpsb
xchg
ljmp
pushl
insb
jo
adc
dec
push
inc
ds
ret
cmp
bound
cli
sti
rol
lods
out
mov
sbb
xor
mov
ljmp
fildll
cmp
movsl
in
sub
adc
pop
add
icebp
inc
hlt
in
jae
and
sar
sti
aaa
cmp
lret
pop
outsb
out
imul
xor
adc
push
push
fwait
mov
jg
mov
cmp
call
xchg
adc
jp
mov
flds
cld
mov
sbb
sbb
jmp
rorb
cltd
cmp
ret
lds
insl
fiaddl
ss
js
imul
xchg
test
in
pop
adc
add
stc
dec
cld
mov
out
test
add
push
test
testb
mov
addr16
inc
loope
push
sub
mov
clc
clc
mov
pop
mov
int3
sbb
sbb
xor
sbb
insl
jge
aaa
xchg
or
in
push
xchg
lahf
jae
cmc
ror
pop
dec
mov
rol
or
adc
and
leave
ja
sub
push
shll
mov
jns
mov
xor
outsb
insb
sbb
mov
ljmp
mov
sarb
or
cmp
mov
inc
mov
adc
xor
std
out
les
xchg
out
xor
ret
push
xor
cmp
xor
mov
popf
ds
or
lahf
addr16
pop
cmp
xor
shll
push
jo
lods
fcmove
xchg
addl
or
fistpl
iret
sbb
pop
lret
iret
push
inc
jecxz
pop
data16
pop
push
cs
cmp
pop
push
cmp
divb
mov
pusha
ljmp
sbb
xor
xchg
sub
arpl
or
test
pop
imul
sub
push
sahf
scas
jns
fdivs
dec
arpl
stc
sarl
ret
dec
mov
popa
leave
outsl
sbb
aaa
mov
frstor
aaa
jb
inc
jnp
in
sbb
pop
sbb
adc
hlt
push
adc
cmp
dec
adc
push
test
insl
fwait
gs
pmaddwd
cmp
test
jg
lret
and
push
daa
inc
icebp
int3
and
cmc
pop
fdiv
cmp
pop
or
dec
repz
jmp
in
sahf
push
adc
nop
xlat
mov
add
inc
movsb
aas
xchg
fdivrs
dec
mov
fs
sub
mov
jmp
sarl
push
pop
pop
xchg
leave
dec
mov
fmulp
and
jg
sub
sbb
jae
sbb
clc
pop
pusha
jle
sbb
pop
test
push
daa
movsl
test
and
mov
jns
mov
in
scas
subb
icebp
xchg
jns
mov
lret
inc
xchg
idivb
push
fs
mov
fcmovnbe
pop
sarl
out
sub
mov
add
mov
sti
sbb
mov
imulb
loope
icebp
push
inc
in
pop
mov
cmpsl
addr16
sbb
in
and
test
cmp
out
dec
sbb
dec
enter
cmp
das
pushl
dec
movsb
add
je
fcomi
lds
pop
dec
incb
js
sbb
fsubs
jmp
jne
mov
mov
and
daa
in
dec
fiadds
inc
fistps
lahf
or
mov
sub
cltd
pop
xor
mov
sahf
leave
adc
inc
mov
lret
jg
sbb
sahf
mov
or
stos
push
push
ja
test
mov
xchg
iret
imul
cmp
popa
adc
inc
je
loope
pop
jmp
sti
call
lahf
and
mov
add
rclb
push
xchg
mov
jle
push
pushf
imul
push
into
imul
je
lds
mov
inc
jbe
jge
xchg
rclb
cmp
sub
dec
xchg
mov
cmp
fcoms
fadds
leave
cmp
iret
and
dec
sbb
outsb
mov
xlat
mov
jmp
mov
sbb
loope
and
mov
mov
pminub
testl
adc
ficoms
sahf
mov
jno
sub
push
out
adc
inc
mov
std
jge
mov
bound
fistpl
rcrl
lea
pop
stc
pop
jnp
in
adc
inc
fs
cmc
jg
rclb
sbb
dec
cld
stc
pop
adc
inc
xchg
jns
insl
pop
imul
test
lret
aas
lea
jb
test
ljmp
jmp
clc
jnp
mov
xor
rolb
clc
arpl
push
fwait
jae
je
repz
cmp
inc
jo
out
mov
test
push
xlat
sarl
push
addr16
ljmp
inc
mov
cmpsb
pop
mov
xor
fwait
mov
xor
mov
mov
in
scas
aas
arpl
adc
xchg
ficoml
pop
test
in
pushf
sbb
imul
xor
push
adcb
push
inc
sub
push
aas
or
sub
mov
adc
cmp
andb
xchg
xchg
addr16
pop
jmp
xor
dec
jp
cltd
push
or
cmc
pop
jmp
xchg
cmp
or
roll
ja
es
add
fisubl
xchg
xchg
jecxz
ret
pop
xchg
mov
sarl
stos
call
imul
sub
loopne
fldt
jle
fistps
imul
jno
pushf
push
mov
push
loope
insl
dec
dec
add
insl
sti
xchg
cwtl
xchg
dec
add
inc
fwait
stos
fildll
jb
adcb
call
cmp
xchg
loope
aam
and
push
push
in
aas
ret
fistl
xor
jb
loop
inc
test
and
in
insl
ljmp
mov
jb
jecxz
fs
and
test
sub
ljmp
mov
xchg
push
in
cwtl
clc
loop
sub
mov
adc
sub
lods
fs
xchg
xchg
xor
mov
cs
fsubrs
fmull
pop
sbb
jbe
add
sbb
mov
sub
adc
xor
mov
adc
and
ret
sbb
dec
ds
pop
shl
jnp
jmp
scas
jbe
and
xchg
mov
in
jmp
hlt
or
insl
jo
enter
lea
add
xor
movsl
stos
cwtl
push
jbe
rolb
lahf
mov
mov
sar
ffreep
push
and
mov
fmull
notl
cwtl
push
jl
mov
push
dec
xchg
dec
lret
bound
movsb
add
jo
std
daa
icebp
jecxz
mov
sbb
loope
cmp
cmp
push
jg
dec
dec
inc
mov
cmp
daa
push
adc
clc
lcall
dec
mov
xor
lea
mov
sbb
xchg
push
dec
test
mov
fmull
jle
movsl
cmp
aas
in
neg
push
push
xlat
stos
lcall
sti
push
movb
out
daa
gs
into
add
movsl
pop
jl
cmpsb
in
push
xchg
mov
mov
jns
int
call
cmp
sub
dec
mov
push
add
sahf
lcall
cltd
adcb
lea
sahf
push
shrl
xchg
daa
repnz
addl
movsl
movsb
insl
jle
or
push
cmpb
mov
inc
cmp
hlt
and
repz
dec
sbb
mov
jnp
jp
pushf
lcall
sbb
bound
push
xlat
fistps
fs
out
lret
jp
push
stos
push
sub
stc
test
ret
sbb
or
xchg
cmp
nop
jge
test
pusha
fdivr
pop
mov
inc
jo
dec
dec
jne
test
insl
lods
iret
xor
outsl
imul
mov
ss
imul
mov
xor
sahf
dec
cltd
sti
shlb
jbe
mov
xchg
push
mov
mov
inc
pop
add
lods
adc
jge
inc
dec
int3
and
mov
add
mov
bound
cmp
cmc
lcall
mov
adc
aaa
push
repz
sbb
into
mov
dec
dec
pop
in
xchg
cmp
cmp
leave
inc
sbb
inc
in
in
pop
loop
test
imul
dec
jmp
in
sub
or
xchg
mov
pop
lahf
pop
and
xchg
ret
ss
out
mov
mov
xor
inc
inc
fcoml
xor
add
imul
jno
sub
xor
push
add
cltd
aam
dec
inc
dec
inc
aam
sub
es
xor
ljmp
in
int
outsb
cmp
movsl
jge
pop
in
pop
imull
add
fimuls
adc
adc
andl
cmp
dec
loop
out
int
jl
mov
into
cmp
jg
and
jge
daa
add
mov
mov
into
das
xchg
jae
pusha
aas
mov
push
pop
push
test
cltd
mov
sbb
cli
stos
sub
jle
ret
std
lret
hlt
mov
jl
sahf
aaa
je
in
inc
adc
inc
sbb
inc
lock
mov
adc
adc
jmp
push
ljmp
push
add
and
jg
lcall
mov
cli
sub
sbb
pop
lcall
push
divb
stos
jno
jmp
pushf
cmp
leave
xor
mov
mov
loope
in
insb
dec
adc
push
cli
fsubr
adc
cltd
fs
or
mov
hlt
mov
jmp
inc
aaa
jp
dec
fneni(8087
push
loope
xchg
inc
stc
xchg
dec
xlat
sbb
mov
imul
lcall
ja
dec
mov
lods
push
jg
mov
mov
or
push
lret
data16
sub
mov
lcall
loopne
outsl
jecxz
mov
pop
inc
lahf
jo
gs
leave
call
fwait
stc
mov
pop
fistpl
stos
movsb
xchg
loope
in
pop
gs
xchg
xor
insb
std
adc
fs
outsl
jmp
inc
out
mov
aas
cmp
test
and
dec
mov
icebp
popf
jecxz
outsl
cmp
add
fwait
xorl
ja
les
lods
dec
adc
cmpsb
popa
dec
xchg
or
ret
xlat
mov
jg
pushf
ret
mov
jbe
cmc
mov
and
lock
mov
ret
pop
add
and
pop
push
inc
les
outsl
movsl
sahf
in
or
inc
hlt
push
lock
mov
and
ficompl
ss
cmpsl
subl
mov
into
fs
push
popf
lcall
or
pop
jg
jo
test
xchg
imul
or
nop
cs
cmpsb
add
inc
pop
arpl
dec
mov
sub
pop
dec
sbb
push
xor
xor
fnsave
lods
xchg
aas
fdivrp
sub
push
jbe
sub
int3
sbb
out
jnp
sbbb
xor
pop
inc
sub
or
ss
es
or
stos
stc
or
push
jno
ljmp
mov
push
add
mov
jmp
mov
push
cwtl
xchg
in
lret
popl
inc
mov
xor
outsb
fxch
repz
leave
xchg
loope
cmp
or
aaa
lcall
fstps
data16
mov
icebp
insl
mov
sarl
jge
out
mov
into
je
xor
push
mov
stos
out
mov
push
inc
jge
or
jg
insb
gs
pop
pop
stc
pusha
fs
cli
cltd
leave
js
imul
xchg
ffreep
out
sbb
xor
out
push
loopne
inc
sbb
push
add
jae
fstpl
lcall
fwait
rcll
mov
cmp
outsb
sahf
stc
into
fnsave
shlb
clc
and
gs
out
inc
sub
xorl
add
cmp
pop
pop
dec
shrl
shrl
xorb
jbe
mov
lds
ljmp
lret
shlb
enter
mov
cmpsl
in
sub
out
ror
in
aaa
jb
pushf
lds
fisubrs
jnp
push
outsl
inc
pushf
and
or
dec
addr16
mov
add
cmp
jmp
push
cmp
xor
test
adc
cmp
out
push
cmp
roll
push
loop
rcll
into
das
movsb
test
and
lea
sbb
mov
ss
stos
addr16
std
xor
mov
xchg
fwait
xor
jne
inc
cmc
sub
lds
pop
or
mov
xchg
mov
push
mov
push
add
aaa
mov
inc
jnp
mov
add
cmc
pop
je
jae
pop
xor
pop
dec
xor
adc
adc
cmp
dec
mov
aaa
fisubs
test
es
jl
jecxz
out
mov
fistpl
mov
add
jmp
imul
push
cmpsl
jno
cmp
fsubs
subl
pusha
scas
stos
sub
xor
scas
dec
cld
adc
mov
icebp
leave
inc
bound
mov
mov
pop
rcrb
add
jg
loop
mov
xor
sbb
mov
cmp
sbb
mov
repnz
mov
inc
setno
cmpl
call
sti
repnz
cmp
int3
fisubl
call
push
daa
pop
fsubrp
in
xchg
mov
outsb
loop
mov
leave
pushf
xchg
or
arpl
cmpsl
test
sub
xchg
adc
mov
test
fdivrs
popf
lcall
shl
mov
dec
mov
mov
add
xorl
sarb
inc
aaa
mov
movb
sub
pushf
loope
mov
sub
mov
call
mov
add
fdivp
jecxz
out
jns
jecxz
mov
sub
mov
fcmovnb
pop
addr16
in
call
ss
in
xchg
pop
repz
in
stos
out
rcl
jbe
pop
out
dec
in
jge
in
cmp
arpl
pushf
data16
sbb
or
int
and
out
mov
fsts
push
jmp
mov
nop
xor
lcall
mov
es
mov
cmp
aaa
arpl
mov
mov
sub
pop
adc
dec
sub
test
out
call
outsl
cmp
cld
shlb
lods
push
mov
iret
cltd
lahf
xor
mov
fsub
ret
loop
ss
ljmp
loopne
je
push
xor
into
xor
inc
dec
insl
inc
xchg
pop
sub
xchg
das
movb
mov
push
std
pop
sbb
pushf
rcl
pop
or
jge
mov
test
popf
dec
repnz
ret
xor
mov
sahf
hlt
pop
jecxz
in
cmp
cmc
inc
fs
and
lahf
add
jle
push
rcrl
and
cmp
psubd
testb
pop
xchg
add
jno
mov
fmuls
cmpsl
mov
jl
je
out
test
lock
push
jmp
mov
subl
test
pop
cmp
mov
test
pop
push
jae
xor
mov
cmovle
adc
xlat
jne
fsts
sbb
xchg
je
adc
int
int3
lahf
pop
or
icebp
xchg
sub
xchg
xchg
sti
decl
out
adc
arpl
test
mov
and
popf
inc
jg
jo
fcmovne
decb
dec
jb
std
fwait
xor
lcall
mov
xor
incl
in
cmp
clc
fwait
jae
popa
adc
cmp
imul
sub
xor
mov
aam
cmp
lods
lret
mov
cmp
cltd
cmpl
dec
pop
cmc
adc
inc
push
add
ret
faddp
rcrl
in
data16
jbe
repz
mov
inc
mov
sub
dec
negl
jns
sbb
ja
outsb
fistpll
dec
push
mov
inc
incb
jp,pt
int3
and
and
push
lods
xchg
add
int3
xchg
add
pop
imul
stc
out
or
jl
sbb
fldt
leave
pop
scas
mov
cmp
in
lret
out
add
out
sbb
sbb
rcrl
aam
pop
ds
in
fimuls
mul
xor
mov
stc
dec
cmpsl
neg
dec
pinsrw
xor
adc
push
and
mov
sbbl
out
dec
addr16
stc
push
insb
cmp
and
and
or
xlat
xchg
ret
lret
or
mov
stos
test
and
fdivs
sub
aam
sbb
push
outsb
pop
and
sub
test
mov
in
xchg
pop
sub
shll
in
divb
call
pop
fildl
jl
xor
fwait
insb
dec
out
mov
dec
ja
add
inc
dec
call
lcall
inc
sub
pop
add
test
das
call
mov
rcr
popa
lret
inc
daa
data16
cmp
xor
push
mov
lods
stos
ljmp
dec
in
enter
adc
test
add
sub
jne
sub
xchg
insl
mov
test
push
jb
inc
outsl
jge
outsb
inc
xor
jnp
or
xor
dec
inc
cmp
dec
sub
push
adc
repz
fiaddl
lret
adc
xor
int
cli
sub
enter
in
adc
add
jo
ret
rcll
adc
mov
mov
pushf
lods
js
test
lea
loopne
inc
adc
sub
inc
push
sub
test
mov
mov
adc
cli
cmp
mov
xor
sbb
or
mov
ret
dec
fld
jle
gs
adc
mov
test
ds
lods
or
sub
in
push
scas
dec
sub
xor
js
xor
lar
inc
sti
xchg
lcall
xchg
and
sub
pop
addr16
sbb
repnz
sbb
cmp
test
mov
xchg
stos
and
mov
inc
push
xorl
xor
outsb
rolb
or
jle
push
jmp
fcmove
xchg
outsb
push
jbe
mov
adcb
pop
push
mov
sub
inc
adc
jl
fmuls
and
mov
out
cmp
scas
mov
or
jp
div
das
pop
cmpsl
and
ret
mov
js
outsb
jle
stc
shll
fsubrl
mov
cmp
mov
out
loope
add
sub
push
xor
xchg
add
pop
imul
std
jge
sbb
inc
in
sub
lock
int
fucom
sahf
cmc
loopne
sbb
shl
in
pop
sbb
xchg
mov
test
inc
in
sbb
cmp
jg
push
shll
jmp
ds
js
sub
jns
sbb
cmp
sub
sbb
fmuls
push
je
call
ja
daa
loope
cmp
scas
mov
stos
mov
repnz
pop
out
in
mov
out
mov
lcall
out
pop
pop
pop
xchg
sbb
andb
mov
mov
fldl
or
repnz
xchg
mov
ljmp
pop
addb
movsl
shrb
xchg
add
mov
xor
mov
add
arpl
hlt
loope
and
test
mov
adcl
or
lds
or
push
and
mov
imul
les
in
mov
les
xor
pop
jg
lret
jg
pop
scas
ret
push
aaa
cli
cwtl
stos
pushf
pop
sbb
dec
gs
or
dec
jbe
data16
stos
sub
in
jbe
jns
dec
imul
loop
push
es
pusha
addr16
imul
in
xchg
mov
dec
int3
mov
dec
bnd
repnz
cmp
jb
or
push
mov
ret
push
mov
mov
jmp
sbb
fisubs
fucomi
push
inc
shll
repnz
jbe
or
cmpsl
scas
test
jg
popa
dec
gs
inc
add
inc
xor
pop
inc
push
cmpsl
fcompl
shlb
outsl
xchg
inc
sbbb
mov
adc
push
aaa
push
pop
ret
jbe
push
fists
push
cmp
icebp
mov
stc
xchg
xchg
ret
add
push
test
mov
add
lret
adc
fucomi
clc
pop
fbld
stc
dec
sbb
sbb
mov
leave
scas
rol
stos
je
cmp
inc
sbb
scas
fildl
or
aas
dec
or
jae
int
fists
pushf
sahf
fsubrp
xchg
jecxz
mov
sbb
cmpsb
push
xchg
loop
lods
cmp
xchg
pop
test
pusha
std
or
sbb
test
dec
in
shlb
push
dec
test
xchg
jmp
xchg
divb
add
orl
cmpsb
inc
ss
sbb
fcoml
fwait
in
rclb
in
fildll
imul
add
mov
lcall
sbb
cltd
mov
mov
stos
xor
mov
cltd
cwtl
es
aam
mov
test
pop
mov
cmpsb
mov
lods
add
iret
lods
lret
cmp
and
enter
push
lods
dec
in
pop
fwait
jb
gs
or
inc
test
loope
lods
test
push
pop
push
cmc
mov
stc
loopne
fnstenv
sbb
xor
lock
sbb
loopne
fcoml
pop
jae
insl
xchg
push
icebp
jne
xor
fs
in
xchg
enter
ret
and
jnp
aaa
outsl
xor
stc
mov
inc
bound
popa
addr16
dec
fldenv
imull
push
push
sbb
dec
xor
xchg
or
mov
stos
xchg
dec
mov
dec
pop
aam
sbb
or
sti
enter
insb
mov
call
out
rclb
scas
loop
xlat
ja,pt
mull
out
adc
std
fstpt
mov
ljmp
sub
sub
lret
sti
shl
cmp
xchg
faddl
outsb
insb
lcall
adc
jno
sbb
mov
jle
push
fldenv
jbe
rorb
dec
adc
es
stos
mov
movsl
fidivrl
mov
jmp
arpl
jo
jle
call
incb
push
inc
cld
pop
subb
dec
xchg
and
cli
jmp
cli
insl
mov
mov
movsl
jmp
shrb
pop
lods
adc
nop
fistpl
xchg
cmp
pop
mov
cmp
mov
lods
push
inc
aad
aas
jmp
inc
lods
leave
xchg
std
ds
mov
iret
mov
jle
mov
lahf
push
dec
addr16
fimuls
cltd
icebp
mov
push
cmp
pushw
jp
dec
push
fnsetpm(287
fs
mov
jcxz
inc
mov
pop
pop
jns
dec
fwait
pop
xchg
mov
sahf
pop
add
rcrl
fwait
push
aad
inc
mov
mov
lret
lret
cli
adc
xor
pop
xchg
pop
mov
orb
in
shll
fldenv
add
pushf
sub
xchg
inc
dec
xchg
pusha
ljmp
mov
ret
add
mov
inc
xchg
leave
not
mov
ja
xchg
cmp
int
or
pop
xor
sub
pushf
xchg
mov
cmp
jp
mov
xor
shll
aad
mov
aas
inc
in
js
data16
mov
pop
in
fcomps
xor
arpl
sbb
repnz
sarb
icebp
lds
fcom
jnp
in
into
clc
push
cwtl
or
outsl
pop
imul
cmp
scas
dec
dec
pop
es
push
inc
or
add
in
sarb
xchg
adc
xchg
mov
pushl
or
or
push
add
pushf
lret
lods
dec
pop
mov
cmp
jecxz
ss
jle
loopne
in
out
adc
mov
loope
mov
idivb
xor
pop
pop
mov
mov
dec
or
jmp
sbb
filds
out
arpl
xchg
push
dec
test
out
and
add
leave
imul
sar
push
add
mov
call
insl
jns
dec
push
jecxz
ja
loope
and
or
shl
mov
cmpsb
xlat
fsubrs
popl
enter
jne
jns
xchg
mov
out
popa
fadds
mov
icebp
test
stos
inc
mov
iret
test
mov
sbb
mov
sub
scas
jp
sub
mov
enter
sub
gs
mov
inc
jmp
mov
clc
shrl
cli
insb
add
data16
bound
clc
inc
xor
cmp
xchg
test
in
jbe
and
test
aaa
mov
xchg
ss
les
jae
and
addr16
sbb
jb
ficompl
fistps
outsb
xor
and
sti
out
pop
mov
test
xor
xor
ds
outsb
pop
iret
inc
clc
ljmp
xchg
cmp
inc
loopne
imul
pop
mull
lret
rcll
lock
sbb
fwait
xor
pushf
mov
xchg
aaa
mov
mov
mov
dec
xchg
dec
rorb
cmp
mov
push
mov
cwtl
adc
std
and
dec
pop
fldenv
hlt
cmpsl
mov
leave
pushl
push
imul
lock
push
inc
inc
cld
fcoms
in
addr16
cmpsb
mov
js
lods
mov
addr16
shr
stos
lods
fldt
sub
pop
test
fsubrs
sbb
push
mov
lret
dec
je
jmp
daa
out
inc
mov
dec
push
mov
sub
cmp
insb
cmp
mov
mov
out
pusha
mov
push
jl
mov
mov
push
mov
pop
and
push
sbb
fsubs
mov
lods
xchg
and
fadds
inc
fdivrl
sbb
lret
int
mov
jg
bndstx
sbb
bound
xor
pop
xor
mov
call
aad
jne
std
sarl
jbe
outsb
nop
xchg
and
cs
imul
inc
addb
mov
mov
jl
out
pop
pop
loopne
lea
leave
dec
mov
and
sahf
add
sub
pop
dec
and
push
loope
insb
xor
mov
xchg
adc
mov
push
add
xor
and
jb
es
fcmovu
mov
xor
jns
jns
ret
add
test
push
les
int3
inc
pop
jle
popa
fldt
test
fildll
mov
cmc
sti
movsb
notl
cmp
push
mov
or
jo,pn
jle
fsubrl
or
addr16
dec
call
ret
cmp
cmp
xlat
in
pop
cld
and
lcall
out
add
jge
xchg
maskmovq
notl
xlat
cmpsb
dec
mov
dec
xchg
cltd
or
push
int
fwait
cmp
mov
add
repnz
repnz
inc
dec
mov
fisubrl
pushf
ret
xchg
ret
pop
scas
outsl
scas
mov
mov
pop
sbbl
jo
sub
push
imulb
fwait
pop
stc
xchg
lock
push
cmovnp
shl
push
jp
stc
adc
bound
xor
pop
jbe
add
daa
mov
sub
das
stc
or
pop
test
addb
test
hlt
sbb
ljmp
ljmp
pop
mov
leave
shll
lods
mov
inc
fisttpll
loope
fwait
popf
hlt
test
scas
lret
int
in
and
sbb
movsb
and
adc
jbe
pushf
clc
mov
arpl
jg,pn
xchg
add
addr16
add
cwtl
pop
xor
cltd
jb
sbb
shrl
adc
in
pusha
mov
fwait
data16
jge
cmp
inc
push
or
pop
xchg
or
aaa
push
sbb
int
push
mov
or
mov
pop
shrl
cltd
or
out
cld
cmpsb
fildl
sbb
cltd
inc
test
sar
sti
push
scas
fstl
rep
cli
jl
jbe
inc
daa
mov
bound
ds
and
mov
das
pushf
xor
incb
rorl
sub
adc
xor
movsb
push
shrb
push
push
jp
dec
lahf
jp
mov
xor
jb
mov
aaa
mov
out
movsl
outsb
sub
inc
cmp
jbe
xor
xlat
cwtl
jecxz
adc
nop
jmp
mov
mov
test
jnp
fstl
and
mov
sbb
sbb
push
dec
add
out
add
mov
xor
xor
add
mov
xchg
mov
in
rcrb
jnp
jl
or
jnp
lods
inc
jno
fs
or
fs
insl
jmp
lods
lods
xchg
test
sbb
faddl
push
xor
push
and
mov
push
sbb
pop
nop
cmp
mov
inc
mov
arpl
inc
add
push
in
pop
jne
mov
call
jbe
ss
mov
mov
inc
add
test
mov
and
jb
xchg
lret
sub
int3
jns
scas
push
mov
jl
mov
repnz
jnp
shl
mov
sbb
cmpsb
xchg
gs
into
roll
and
push
or
arpl
pushf
fsubl
jmp
pop
mov
imul
shl
jmp
lods
test
xor
push
test
mov
cwtl
lea
push
cmp
xchg
lret
lods
stc
cmp
dec
push
add
pop
jge
cmpsl
jl
mov
jo
jl
xchg
xchg
lea
imul
test
lcall
mov
lds
nop
in
or
test
mov
bound
push
and
lock
sar
jge
pop
and
lds
cmovs
int
aam
cmp
ret
into
leave
dec
add
imul
push
jae
out
inc
mov
gs
push
jle
popf
push
push
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
decl
inc
dec
iret
shll
lcall
sbb
ja
xor
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
mov
insl
mov
cltd
push
jb
mov
sub
cwtl
and
mov
les
outsb
bound
out
xchg
jnp
mov
xchg
dec
pop
aad
shlb
lcall
inc
pushf
aaa
inc
jecxz,pt
xor
jecxz
dec
inc
mov
or
and
lds
mov
and
mov
cmpsb
stos
shlb
dec
push
push
inc
rclb
xchg
dec
sarl
clc
bound
push
push
jecxz
dec
xor
pop
fimull
in
mov
fmul
xor
cli
mov
cmp
dec
shll
jb
aaa
inc
mov
sbb
sarb
cwtl
mov
inc
sbb
iret
shlb
lcall
adc
iret
xor
sbb
shlb
mov
inc
sbb
mov
xor
lcall
sbb
iret
shlb
lcall
sbb
iret
cmpb
lcall
sbb
iret
shlb
or
shlb
lcall
sbb
iret
shlb
lcall
push
fbld
push
push
adc
icebp
inc
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
mov
mov
inc
sbb
iret
shlb
sahf
mov
adc
std
test
lcall
sbb
loope
inc
sar
mov
inc
sbb
aas
shlb
sbb
iret
shlb
lcall
sbb
das
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
sbb
iret
shlb
lcall
xor
mov
jge
outsl
test
cmp
into
jb
cmp
or
pop
inc
adc
popf
cmp
jge
in
andb
lcall
mov
repnz
test
mov
aaa
dec
ds
incb
outsl
pop
cmpsl
mov
jb
xchg
sbb
fdivrs
pop
lret
jle
stos
jne
fsub
push
repz
jmp
sahf
sti
cmove
clc
pop
arpl
push
lods
mov
mov
in
xor
fwait
sub
push
outsb
pop
out
push
push
xchg
jmp
lcall
aaa
push
test
movsl
jecxz
lds
lock
dec
ds
sub
outsl
icebp
inc
imull
test
xchg
fldenv
cmp
pusha
pmulhw
mov
xchg
enter
daa
sub
xchg
rolb
sub
test
aaa
cmp
movsl
sti
dec
dec
lret
fisubs
inc
mov
lds
repz
or
xchg
leave
daa
aaa
ret
in
sbb
pushf
jne
fwait
std
fidivrl
inc
enter
pop
sub
iret
add
leave
shll
adc
cmp
push
sub
repz
ss
outsb
lahf
sbb
iret
mov
scas
shr
nop
xlat
jge
subb
push
ficomps
nop
xor
xchg
push
cmp
cmp
or
inc
in
dec
mov
mov
mov
loope
jno
fmulp
test
ss
mov
test
in
or
pop
sahf
pusha
pop
xchg
shrl
rcrl
pusha
arpl
sub
push
rol
adc
gs
outsb
pusha
push
mov
xchg
pop
push
mov
dec
mov
popa
leave
sbb
arpl
sbb
lock
lea
mov
mov
shl
xchg
test
jno
outsb
fs
mov
insl
xor
testl
sub
pushf
xlat
inc
jnp
pop
sub
pop
push
insb
inc
daa
fldl
push
das
es
ja
or
or
inc
loope
jmp
cmc
pop
mov
cli
ret
jns
adc
js
pop
xchg
jmp
inc
jmp
mov
xchg
outsb
xchg
or
xchg
push
cmp
aam
xor
test
adc
pop
loop
sub
stos
lods
mov
loope
mov
popf
cmp
mov
dec
fwait
push
scas
bndldx
mov
in
mov
add
jmp
in
sbb
inc
repz
adc
dec
sahf
xlat
adc
stos
xor
cmp
mull
mov
mov
sub
pushf
push
xchg
inc
int3
cwtl
mov
mov
fcmovu
lahf
mov
or
in
and
push
dec
je
mov
xlat
fcompl
jnp
push
ficoms
stos
jo
shl
sbb
mov
sub
cmpsl
push
sub
cmp
mov
outsb
inc
lods
mov
mov
mov
leave
fcmovb
repnz
hlt
fsubrl
xor
bnd
jb
aaa
add
fdivrp
jl
cmp
push
gs
pop
mov
inc
mulb
sbb
lods
pop
mov
pop
sbb
call
xchg
int3
jle
bound
sub
jb
push
sbb
adc
mov
movsb
dec
repnz
mov
xchg
mov
push
in
cwtl
xor
imul
int
lahf
mov
ret
jle
inc
cmpsl
or
pop
sbb
dec
sbb
xlat
enter
jns
xor
or
or
mov
imul
dec
stc
rorl
and
mov
call
pusha
mov
daa
mov
push
cmp
test
adc
test
sti
mov
inc
fistpl
ja
push
push
pushf
xor
dec
repz
mov
xor
sub
xchg
fnstsw
jle
outsb
lods
out
push
leave
ficomps
idivb
mov
push
das
popa
jp
test
jne
push
repz
lds
push
repz
cmp
in
loopne
and
test
mov
add
test
iret
pushf
inc
rclb
jle
ret
push
and
das
mov
xchg
outsb
jmp
mov
xor
jo
cmpsl
jg
mov
ja
cli
xlat
xchg
pushf
les
mov
in
int
shlb
bound
mov
or
add
lock
movsl
mov
lods
orb
mov
fs
mov
stos
jecxz
aas
dec
in
dec
ja
push
sbb
test
scas
lods
cmp
nop
jge
jnp
or
cli
and
movb
mov
pop
xor
movsb
inc
cwtl
adc
jbe
scas
mov
mov
xchg
aaa
cmp
mov
mov
push
push
mov
cmp
das
cmp
cmp
dec
fisttpll
jns
dec
adcb
mov
xchg
mov
jo
lcall
scas
subl
mov
and
bnd
cmp
sbb
scas
and
push
and
sub
xor
outsl
or
and
add
lret
cmp
repnz
mov
aad
push
xlat
loop
in
and
mov
les
cli
loope
ret
cmp
ja
lods
data16
or
sbb
sbb
and
jnp
fmulp
dec
adc
and
mov
nop
sbb
mov
jnp
push
testl
shll
sbb
mov
mov
inc
aas
jmp
sub
lea
add
fs
decb
jg
jge
out
int
push
enter
cmpsb
lock
mov
sub
sub
push
mov
mov
mov
xor
ss
push
add
inc
pusha
sbb
push
sbb
adc
gs
pop
adc
mov
jmp
ss
inc
ret
xchg
mov
call
cld
int
jge
sbb
push
mov
and
or
cld
iret
sbbb
dec
out
ss
jecxz
jge
mov
dec
frstor
ja
out
shr
cld
test
imul
xor
adc
movsb
push
mov
and
jl
fs
cltd
cld
pop
cld
xor
push
in
loopne
nop
mov
adc
push
pop
imul
and
into
xor
ja
xchg
pop
movsb
adc
das
inc
shrd
in
mov
ret
or
cwtl
mov
push
fs
xchg
out
in
push
sbb
dec
adc
in
and
lds
das
out
jg
xchg
or
mov
mov
std
movl
cmp
pop
repnz
fistps
push
sub
out
xor
mov
pop
cli
mov
sub
movsb
xchg
add
push
js
mov
fs
push
dec
mov
cmovs
push
stos
adc
mov
push
ds
sub
or
adc
faddp
cmp
push
mov
push
push
outsl
pop
movsl
jbe
cmp
mov
jne
imull
sub
lds
dec
stos
cmp
orb
into
cmp
fwait
loopne
sbb
inc
pop
mov
jecxz
mov
cwtl
and
mov
xchg
pop
jmp
dec
pop
loopne
and
stc
xor
xchg
mov
test
xor
ret
sti
test
test
mov
data16
ljmp
xor
xchg
ret
mov
icebp
shll
pop
ja
push
push
outsl
xorl
test
jno
notl
mov
cmp
xor
loop
scas
jno
repz
mov
aad
insl
dec
pop
push
push
push
cmp
lods
jecxz
call
adc
jmp
pop
sahf
jmp
dec
sbbb
mov
out
lcall
jne
xchg
sub
jl
sub
sbb
mov
imul
loope
test
mov
add
or
mov
push
pop
sub
mov
pop
out
xchg
movsb
mov
ficompl
insb
and
loopne
inc
test
test
sub
xor
sub
mov
loope
xor
push
pop
mov
out
ja
test
stos
adc
jecxz
cmpsl
xchg
xor
xor
jl
dec
aad
pop
push
imul
jl
aaa
pop
lods
lds
pop
lock
inc
push
mov
ret
cmp
pop
add
in
pop
imul
adc
lods
cmpsl
sbb
push
pop
or
js
and
mov
xchg
nop
jg
sti
sbb
loopne
shrb
arpl
repz
xchg
hlt
jg
jle
and
xlat
push
insl
pop
mov
outsl
imul
popa
lret
xor
clc
je
sbb
shr
add
mov
stos
sbb
mov
das
sbb
mov
test
popa
in
aaa
or
or
xchg
jle
leave
jecxz
test
mov
cmp
pop
roll
test
ficoms
add
outsb
xchg
sub
jg
mov
cmpsb
cli
aas
leave
cmc
out
ja
sti
xor
fwait
add
xor
dec
dec
cmc
call
push
pop
add
add
jo
das
dec
or
arpl
rcrb
lock
test
xor
aas
loop
in
add
push
movsb
jg
dec
arpl
insl
push
ss
ljmp
push
dec
cmpsl
push
or
sahf
mov
dec
bound
push
popa
xchg
dec
popf
sbb
in
xchg
fisttpl
dec
lea
push
inc
push
sbb
cmp
hlt
rorl
loope
push
and
aad
push
adc
add
js
aas
decb
outsl
mov
pushl
fdivr
jg
or
mov
fbstp
cmpsb
cltd
add
sub
xor
stos
inc
pusha
daa
xlat
mov
and
sbb
inc
pop
sahf
lods
out
xchg
sahf
xor
movsl
xlat
mov
repz
in
cmp
aad
pop
cmpb
mov
divb
jb
notl
aam
in
xor
mov
test
sbb
dec
sahf
mov
inc
jae
add
dec
pop
and
inc
out
mov
push
sbb
pusha
ffreep
icebp
idivl
mov
and
ss
lock
invd
nop
daa
add
pop
push
add
or
outsb
xchg
pop
inc
cli
adc
pop
xchg
adc
cli
out
cwtl
aaa
scas
mov
xchg
js
mov
lret
xchg
inc
dec
push
mov
das
jle
out
sbb
imul
jg
mov
into
ret
lock
fs
add
cld
push
in
pushf
sbb
movsb
add
in
insb
mov
sbb
cmpsl
xor
rorl
lods
stc
inc
repnz
nop
or
lahf
mov
ja
xchg
sbb
cmpsb
out
pushf
rorb
imul
pop
sub
or
jge
sub
mov
pand
adcl
fisttpll
pop
or
sbbl
ss
mov
push
bound
ljmp
pop
xchg
cmovns
ss
cmp
inc
in
sbb
or
pop
adc
or
push
jl
in
imul
inc
insl
test
mov
push
xchg
int3
cli
dec
sbb
test
sbb
fdivl
adc
iret
sub
jb
hlt
fwait
cmp
sbb
mov
sti
decl
lcall
cmpl
cmc
add
and
aas
outsl
pop
mov
pop
in
sbb
lods
add
jge
addr16
push
sbb
xchg
jmp
int3
repnz
mov
jg
lds
insl
add
popa
inc
jno
pop
sahf
andb
rclb
pop
out
or
xor
pop
jo
push
ss
inc
insl
lahf
int3
xor
or
push
hlt
push
adc
pop
aas
out
push
test
roll
in
sti
fadds
les
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
