sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
outsl
and
test
pop
add
cli
aad
xchg
and
testl
jne
xor
in
xchg
jae
pop
lods
leave
fcmovnbe
sub
jecxz
jecxz
insl
add
nop
cltd
sub
insb
repz
shll
add
jle
cmp
inc
and
cmp
fcmovne
div
test
cld
dec
sbb
and
dec
jmp
dec
out
pop
movsb
mov
icebp
lock
lds
out
movsb
fsubl
adc
loopne
xchg
scas
sub
lahf
fmull
int3
cmpsb
adc
xor
xorl
add
and
cli
pop
mov
pop
fmull
data16
inc
into
dec
repz
out
lods
nop
add
xor
sbb
shlb
shl
inc
icebp
int3
mov
sub
xchg
mov
ret
into
sub
adc
jne
lods
xor
out
xor
sub
loope
and
and
inc
mov
mov
mov
sti
mov
xchg
xchg
mov
jb
dec
rcrl
lods
add
add
bound
incl
pop
lods
es
out
mov
icebp
shll
lds
cmp
inc
icebp
push
ljmp
mov
pop
out
insl
jae
adc
fisttps
sub
sbb
iret
xorl
aam
cmp
add
fsubrs
in
clc
pop
xor
outsl
sbb
lea
pop
sub
or
mov
mov
fwait
push
jbe
into
das
in
inc
dec
imull
pop
scas
push
stos
adc
fsubrp
dec
jle
and
cmc
mov
sub
mov
add
jl
stc
rcr
jo
xlat
mov
cmp
jne
dec
sbb
jb
xchg
out
sarl
aam
lock
daa
popa
push
jno
testl
shr
mov
push
xchg
scas
cmp
jle
lret
jge
imul
out
out
enter
xor
inc
jg
gs
xchg
ljmp
ljmp
test
pop
lcall
fdiv
jle
mov
imul
inc
mov
fneni(8087
mov
inc
sbb
mov
pop
pusha
outsl
outsb
cmpsl
cmc
pop
mov
jns
xchg
lods
data16
jns
add
movl
test
stc
test
sti
fmuls
lds
jl
pop
add
jge
mov
int
outsl
push
andb
popf
sbb
jo
ds
jmp
cli
xor
push
inc
inc
inc
movsb
pop
pop
jnp
and
cmp
inc
mov
dec
or
inc
inc
ds
push
stos
or
jae
push
and
iret
movsb
shrl
movsl
sbb
int
into
inc
cmp
mov
call
xor
call
jne
int
negb
rorb
sbb
stos
cmpsl
cmp
nop
in
ret
pop
dec
ret
outsb
sbb
fidivl
das
pushf
xchg
dec
sbb
out
jno
ret
fsubrp
xchg
clc
insl
std
jbe
out
mov
lcall
mov
std
scas
or
and
jne
adc
jge
push
ja
into
movsb
aaa
sub
xchg
outsb
sub
cld
adc
mov
loop
popf
pusha
jge
fnstenv
sub
xchg
and
ss
jnp
testl
xor
pop
mov
pop
mov
cltd
jne
jg
add
or
mov
and
adc
sti
push
cmp
sbb
fisttps
cmpl
jp
or
mov
in
int
mov
mov
aaa
xchg
xchg
out
xchg
pop
inc
and
stc
loop
insb
ret
lods
pop
imul
add
notb
repz
mov
fisttpl
leave
jg
int3
fisttpll
adc
or
xor
cltd
in
push
xchg
mov
je
pusha
sbb
ljmp
cltd
sar
xchg
test
test
out
je
and
enter
xor
pop
xchg
movsl
jne
jae
pushf
lahf
shrl
or
lock
push
push
xor
dec
leave
xchg
fidivrl
loopne
rorl
mov
mov
call
jle,pt
jb
cmpsb
fldt
lahf
loope
rcll
js
xchg
sub
pop
insb
sub
in
out
xchg
push
mov
andb
sub
mov
dec
pop
call
cwtl
sub
mov
rcrl
lret
sahf
inc
mov
mov
push
mov
ffreep
add
mov
rcrb
lea
lcall
imul
or
mov
notl
push
mov
dec
jno
fimull
dec
mulb
movsb
mov
dec
and
mov
push
xchg
sub
movsl
xchg
add
mov
aam
fsubrs
adc
fld
rcrb
mov
es
mov
jb
inc
mov
out
imul
pusha
aas
andl
mov
pop
loope
leave
xlat
cmp
mov
push
fistpll
adc
rorb
in
adc
adc
add
cmp
repnz
and
mov
stos
imul
int
adc
movsl
int
movsb
cmpsl
push
push
mov
adc
jb
mov
addr16
iret
jo
or
mov
pop
jle
or
mov
lods
mov
push
push
dec
in
scas
jg
add
mov
sbb
ret
inc
add
inc
pop
cmp
add
xlat
mov
popf
and
repnz
jo
in
in
cmp
or
lahf
xlat
imul
scas
mov
dec
daa
push
cmp
imul
mov
outsb
mov
addr16
adc
adcb
push
bound
mov
cli
add
add
mov
shll
into
pop
ret
sub
or
mov
jl
fimull
dec
add
jbe
mov
fs
lcall
jmp
pop
dec
loopne
insb
cmp
mov
fistl
xchg
pand
enter
shll
jbe
adc
push
imul
push
jns
add
push
inc
sti
scas
sub
negb
ds
test
xor
add
inc
stc
stc
xor
pop
add
in
lock
mov
repnz
loopne
inc
jg
sti
sbb
mulb
pop
sub
mov
add
xchg
pop
cmp
shlb
les
push
addr16
or
and
or
ret
insb
loope
jmp
xchg
out
sti
flds
pusha
aas
cmp
movsl
daa
xchg
mov
sbb
cmp
in
pop
js
stos
es
mov
inc
add
mov
ret
inc
cwtl
xor
hlt
loop
xchg
loop
jae
cmpl
mov
popa
out
pop
insb
ror
fdivr
out
jbe
nop
mov
rorl
adc
or
addr16
lcall
testl
repnz
mov
xor
pop
or
push
sub
or
test
ja
sahf
jae
sub
lret
icebp
push
mov
mov
adc
sbb
les
test
insb
icebp
or
scas
sti
cmp
mov
ret
sbb
in
ret
test
sub
xchg
ret
push
pop
iret
out
jne
pop
and
adc
imul
shll
pop
ss
sub
andb
sarl
jl
xchg
pusha
sbb
jne
inc
movsb
jne
fwait
outsb
sub
andb
push
push
mov
push
les
dec
inc
repnz
jp
fdivl
out
out
jns
or
adc
dec
sbb
rorb
js
lea
cld
jnp
dec
fwait
rcr
aam
fs
dec
xor
mov
cmp
ffree
sub
mov
ja
xor
dec
pushf
fnstcw
pop
popa
mov
cmp
das
sbb
mov
xchg
js
sub
mov
rcll
dec
arpl
int
push
add
xchg
mov
push
decl
mov
fcmovne
jno
mov
inc
sbb
cmp
in
pop
dec
int
repnz
pop
in
notb
int
mov
bound
sub
mov
pop
shl
cmc
cmp
mulb
mov
icebp
leave
inc
gs
pop
adc
movsb
mov
and
cmp
fnsave
or
cmp
mov
pop
es
xor
mov
loop
stos
push
into
das
xchg
mov
in
loope
test
jp
mov
cld
inc
mov
js
jmp
icebp
add
lock
inc
mov
push
fs
xor
cmp
sahf
dec
rolb
in
mov
jl
lahf
jl
xchg
mov
shrl
scas
cmpb
sahf
mov
adc
das
mov
enter
jg
das
in
inc
aam
mov
add
aas
arpl
cmp
arpl
into
and
push
outsb
lahf
dec
add
lock
lods
push
push
add
popf
cmc
jbe
scas
testl
lret
inc
test
mov
or
and
push
mov
mov
push
push
or
mov
push
test
cmp
loope
notb
std
xchg
push
leave
ret
sub
push
rcrl
sub
mov
push
xchg
das
mov
test
popf
mov
bound
ftst
mov
aaa
add
test
cwtl
ljmp
dec
sahf
iret
rcrb
test
mov
les
scas
jl
or
sbb
scas
cmp
pusha
mov
and
xor
into
pop
or
adc
sti
addr16
test
pop
jle
xlat
pop
lds
call
insb
fsubrp
fwait
jns
sub
or
out
in
lcall
ret
cmp
cmp
inc
push
sahf
push
mov
stc
add
push
insl
flds
add
lods
cmp
lods
cmp
test
in
pop
orb
pop
inc
add
sub
adc
cmp
sarb
jecxz
fstpl
ficoms
or
adcl
gs
out
pop
push
inc
dec
jae
insl
aaa
lock
dec
jmp
xchg
mov
mov
outsb
inc
mov
lahf
mov
lahf
fcmovnb
add
popa
cmp
mov
cmp
out
arpl
dec
adc
ds
or
mov
xchg
mov
push
mov
sbb
mov
pop
hlt
cwtl
or
and
je
dec
mov
loopne
mov
jae
and
add
inc
cmp
pop
fstl
les
push
addr16
sub
cs
insb
and
fwait
out
add
icebp
mov
int
dec
xchg
pop
jnp
mov
and
outsb
xchg
js
out
add
popl
lcall
popa
pop
je
pop
addb
mov
xchg
xchg
pop
imul
mov
add
cltd
add
push
adc
or
jmp
cmp
or
scas
lret
arpl
test
fstpt
xchg
ficomps
cmpsb
clc
mov
fisubl
mov
mov
mov
icebp
dec
sbbl
loope
push
movsb
jle
in
adc
pop
data16
push
dec
push
js
adc
pop
test
ds
pop
pop
stc
push
loop
mov
outsb
sub
or
xor
sub
jmp
lds
inc
std
sti
insb
cli
lret
sbb
in
mov
jne
pushf
je
sub
enter
pop
lret
lret
stos
mull
cmpsl
das
lret
fstl
lea
addr16
leave
icebp
and
mov
mov
mov
jns
mov
cmc
xchg
and
enter
push
inc
out
pop
mov
adc
dec
cmp
jo
incl
leave
ja
js
out
into
dec
mov
stos
ret
mov
lods
enter
xor
jnp
xchg
and
inc
pop
inc
orl
out
adc
push
push
es
cwtl
push
insl
mov
mov
pop
cmpsl
push
inc
mov
pop
je
popa
hlt
test
lods
shlb
sub
int
pushf
decb
es
data16
adc
mov
or
call
add
ret
ljmp
adc
mov
fadds
jmp
jge
mov
mov
fistpll
es
push
mov
ss
adc
push
int
lahf
mov
rcl
pop
imulb
inc
ret
jecxz
fmuls
mov
mov
cmp
dec
fidivrs
and
jge
adc
je
mov
add
shr
pop
or
dec
test
data16
dec
loope
add
add
pop
xor
lods
ret
test
jbe
pop
mov
mov
xor
mov
lods
pop
in
test
lea
xchg
inc
pop
push
vmread
xor
cwtl
scas
or
mov
sbb
cmp
js
fstl
push
pop
add
dec
test
mov
jb
in
jne
sub
int
aas
dec
test
jl
in
clc
cld
fisubrs
mov
mov
add
xor
int3
icebp
mov
aam
test
jne
rol
push
jb
or
inc
sbb
std
cmpsl
gs
add
xor
ret
inc
insb
push
ret
cmc
add
mov
popa
sub
sbb
ds
cld
push
dec
xchg
aaa
movsb
xor
fdivrs
cmpsl
and
pop
icebp
lea
cs
jbe
mov
xchg
and
cmp
jnp
add
loope
sub
jmp
sub
imul
cmp
add
adc
arpl
add
push
push
test
xchg
add
and
hlt
mov
add
adc
stos
sahf
enter
xor
sub
pop
mov
mov
outsb
idivl
call
inc
add
xor
aam
or
lcall
jmp
mov
lret
lahf
fs
push
out
subl
pop
lahf
gs
mov
pop
mov
rcr
loop
mov
inc
les
cmp
add
dec
loope
data16
inc
cmp
mov
int
sbb
jbe
push
cmp
push
pop
and
dec
lods
insl
xlat
std
xor
and
repz
cmpl
pop
mov
cmp
les
pop
xor
out
outsb
mov
lcall
insb
or
xor
sbb
hlt
adc
inc
cmp
pop
or
xor
out
imul
jecxz
jae
dec
std
add
xlat
push
lahf
cltd
fwait
test
shlb
daa
or
mov
pop
jmp
or
and
adc
lret
bound
mov
scas
and
outsl
ja
push
adc
xor
pop
sub
ret
lods
mov
mov
mov
roll
mov
sub
jne
or
ret
repz
pop
test
mov
adc
mov
push
mov
pop
jg
fwait
inc
sbb
pop
int
pop
idiv
leave
aam
or
sbb
cmpsl
cmp
mov
rcrl
adc
push
sub
xchg
mov
roll
insl
pop
cmp
ss
dec
clc
mov
xchg
xchg
push
and
mov
add
push
sbb
sbb
xor
sbb
sub
stc
or
ret
sysenter
adc
jne
sbbl
sbb
mov
xchg
shlb
push
aaa
sub
sahf
repz
push
ficoml
xchg
dec
add
in
lods
fmulp
ficompl
lcall
jne
cmp
jl
int3
adc
and
push
aaa
divl
outsl
and
dec
loop
insb
andb
lods
cmp
cmpsb
push
mov
lds
push
gs
jne
sbb
inc
ret
cmp
fucomip
les
mov
mov
mov
fsubp
pop
iret
sub
lods
jg
fistps
cmp
or
xchg
hlt
jb
adcl
repz
and
addr16
daa
adc
repnz
sbb
jl
pushf
xlat
loop
mov
mov
call
mov
pop
rcr
fadds
sarb
mov
cmp
mov
dec
or
test
mov
roll
sbb
cmpsl
sbb
out
push
nop
test
loope
loopne
ret
dec
pop
add
push
scas
sbb
inc
jns
test
and
bound
adc
mov
mov
mov
xchg
cli
movsl
insb
fsubl
les
arpl
adc
inc
mov
outsl
gs
cltd
repnz
push
out
lods
mov
xchg
repnz
push
fnstenv
pushf
jae
jge
jl
scas
mov
pop
bound
fisubrl
and
fcomps
into
addr16
xor
xor
pop
mov
fidivrs
je
nop
mov
xchg
pop
lret
cli
jns
sub
add
andb
sbb
lahf
mov
incb
xchg
mov
jecxz
pop
outsb
push
inc
push
adc
mov
rol
sti
outsl
jo
cmp
dec
stc
xchg
xchg
sub
xor
cmc
inc
bsf
add
or
cmp
lahf
push
mov
push
jno
ret
cs
xchg
cmpsl
jle
dec
xor
xchg
pop
jo
sbb
fstps
cmpsb
or
pop
les
int
lds
cmp
cmp
push
push
sbb
adc
xor
imul
xor
and
ds
adc
mov
pop
mov
rolb
call
adc
mov
es
pop
mov
cmp
sahf
lea
stos
cmpsb
push
ret
scas
cmpl
dec
cs
imul
call
xor
test
or
add
cmp
daa
xchg
mov
popa
ret
sbb
jns
in
adc
inc
neg
aam
sbb
pop
mov
scas
ljmp
ds
leave
cmpb
jl
rcr
inc
bound
jns
daa
repnz
inc
and
sbb
pushf
in
pusha
add
in
sbb
dec
dec
cmpsl
fwait
sub
call
les
dec
jnp
lock
call
ret
add
push
fs
mov
popf
dec
mov
jle
push
stc
in
mov
xchg
mov
cmp
repnz
or
jp
out
xchg
sub
iret
dec
je
sbb
je
in
xchg
scas
jbe
aas
in
jbe
out
js
repnz
xlat
aaa
movsl
xor
add
push
lods
mov
pop
ja
jmp
aas
fsts
fldt
xchg
in
jle
mov
or
or
or
fcoms
inc
leave
ljmp
aaa
sub
and
jno
scas
shll
add
aad
insl
into
test
mov
cmp
imul
push
repz
psubb
add
dec
sub
jl
mov
and
adc
sub
mov
lahf
fstps
lds
add
cmpl
test
and
rol
in
pop
pop
scas
and
xchg
xor
dec
push
mov
inc
sub
iret
cwtl
jecxz
in
movsb
push
ret
icebp
in
jmp
add
mov
push
lret
add
xor
jle
scas
sbb
push
pop
call
lret
jle
add
mov
and
in
dec
and
arpl
retw
push
push
or
pusha
pop
inc
dec
jmp
pop
push
mov
int3
add
xor
lcall
out
adc
add
mov
addr16
jo
push
and
aas
in
and
imul
pop
mov
adc
pop
xlat
fs
shll
dec
dec
stos
jmp
loopne
cmp
jg
push
sub
add
push
pop
in
fs
pop
fucomp
in
shrb
pushf
xchg
jmp
outsb
push
sbb
lcall
cli
jl
call
daa
inc
push
mov
add
iret
leave
sbb
sahf
int
js
mov
sbb
or
into
sub
rcl
push
sbb
fisttpll
daa
mov
bound
mov
adc
push
lods
int3
pop
jne
push
adc
insb
shlb
sahf
xchg
mov
push
iret
int3
pusha
rorb
iret
jmp
sahf
mulb
fdivl
cmpsl
testl
popa
push
push
loopne
jmp
jns
sbb
mov
or
sbb
xchg
lock
mov
ljmp
mov
jge
fs
out
rcr
int
dec
das
add
pop
sub
xchg
cmpl
addr16
cmp
mov
cwtl
scas
push
aaa
add
push
xchg
and
subl
xchg
pop
pop
lret
shll
mov
mov
or
inc
mov
repz
std
cmp
sub
mov
int3
icebp
pop
jecxz
into
sahf
movsb
sti
ljmp
out
lock
cbtw
inc
imul
sub
mov
sbb
fmuls
mov
mov
adc
mov
pcmpgtb
pop
clc
dec
iret
test
jns
push
xor
sahf
loopne
arpl
iret
and
aas
mov
xor
inc
pop
sti
inc
push
dec
pop
test
mov
adc
mov
xor
les
and
test
ja
sbb
popf
mov
push
mov
mov
jnp
clc
jp
jns
or
lock
push
jns
add
and
out
or
sarl
ret
jns
fsubr
sbb
sbb
mov
mov
mov
lock
mov
cwtl
pop
fldl
jae
or
push
dec
loope
fdivrl
es
add
pop
mov
fstps
mov
sbb
popaw
test
js
test
adc
fadds
inc
stos
mov
push
pop
xchg
push
inc
into
mov
in
push
loopne
lds
cmp
stc
lcall
mov
pusha
xchg
pop
mov
mov
pop
pop
es
test
push
mov
les
imul
push
iret
imul
adc
pop
fbstp
xchg
mov
jmp
sbb
repz
scas
sbb
xchg
fdivs
cwtl
sbb
out
or
mov
fwait
stos
xchg
sbb
ficompl
mov
ffree
add
dec
jle
push
repz
cmp
mov
xchg
flds
ret
clc
pop
mov
xchg
sbb
iret
inc
sbb
aad
pushf
mov
cmp
out
sti
sbb
jnp
pop
pop
cmp
data16
jge
rcll
dec
mov
pop
adcb
cmp
xor
sahf
stos
repz
cs
mov
in
stos
xor
mov
jmp
jb
xchg
mov
add
or
std
inc
ret
jo
pop
adc
clc
test
stos
push
xchg
test
lods
test
jmp
xchg
rcll
cwtl
add
pusha
sbb
cmpsl
jge
jmp
std
mov
push
sub
neg
rolb
cli
adc
jmp
sbb
fisubrl
shl
sub
aam
mov
cmp
shrl
lods
or
sub
negl
jg
pop
dec
mov
add
arpl
lret
dec
inc
daa
push
or
dec
xchg
repz
add
sub
lret
xor
std
jmp
dec
adc
fsubrs
cli
mov
and
jo
mov
rol
add
jecxz
popa
xlat
mov
fs
xchg
xchg
adc
pop
cld
pop
mov
pushf
jbe
mov
aam
mov
popf
ss
sub
in
mov
xchg
cld
jecxz
xor
outsb
dec
push
repz
sbb
sub
xchg
add
jno
sbb
or
orb
mov
add
mov
das
inc
or
daa
or
sti
or
jp
pop
add
jge
mov
mov
incb
xor
push
rorb
mov
test
lock
jle
adcb
cmp
cld
lret
sub
mov
lock
mov
hlt
add
ficoml
filds
or
test
xchg
xchg
divl
loopne
rcl
pop
arpl
ds
mov
sbb
xchg
rorb
jmp
fidivl
or
es
and
push
sbb
xchg
add
cmp
das
xchg
rcrl
inc
cmp
cmc
outsb
fisubs
icebp
outsb
mov
sbb
test
ss
or
jb
in
daa
cmp
mov
jge
mov
js
adc
enter
andb
iret
mov
arpl
pusha
jecxz
pop
loop
adc
push
adc
pushf
insb
cmpsb
pushf
rcrl
mov
icebp
iret
xor
jns
xor
add
out
out
pusha
mov
pop
and
out
lret
cmp
pusha
cs
mov
rorl
rol
xchg
mov
sbb
insb
adc
mov
adc
dec
loope
or
int3
push
gs
pop
pushf
mov
or
add
sbb
cmp
rcl
push
sbb
adc
or
mov
add
mov
and
in
iret
data16
loope
xchg
push
and
sbb
sub
out
mov
fdivr
pop
lds
and
in
shlb
rcl
xor
or
push
push
push
inc
xchg
incb
cmp
lahf
insl
arpl
inc
add
add
sbb
or
lock
mov
sub
lods
adc
push
push
in
mov
mov
or
mov
mov
fwait
xorb
add
fcoml
inc
iret
inc
jo
das
push
sahf
dec
inc
fmuls
mov
jge
sahf
sub
inc
imul
lret
cmpsl
sub
aaa
mov
dec
and
jmp
xchg
cmp
sbb
in
and
std
pop
loopne
or
ss
bound
mov
rcrl
movsl
pop
mov
fdivrl
mov
sub
sbb
pop
inc
idiv
mov
mov
mov
sbb
mov
mov
rcll
or
dec
inc
enter
mov
push
into
or
data16
loop
cli
jae
pop
cs
dec
and
ret
mov
pop
cmpsw
in
ds
addr16
dec
sti
iret
and
repnz
sbb
addr16
mov
xchg
pop
inc
pop
fmulp
enter
pop
mov
ret
mov
iret
loop
aad
sbb
aad
cwtl
mov
js
in
and
xchg
ds
push
cmpsb
dec
cs
dec
cwtl
rclb
xlat
pusha
inc
add
add
xorb
cmp
pushf
fidivrs
cs
xchg
mov
sbb
cltd
push
and
jbe
dec
jno
inc
je
cli
adc
fcomps
jb
cmpl
push
enter
cs
and
mov
cld
ss
scas
lret
mov
sbb
dec
sbb
cli
call
push
cmpsb
mov
lods
testb
push
test
shl
vprotq
xor
jnp
gs
dec
jle
mov
mov
push
fwait
insb
lcall
and
addr16
mov
adc
jo
xchg
pushl
mov
je
incl
in
imulb
popf
fistl
mov
sub
in
sbb
lcall
dec
pop
cmp
adc
popa
mov
or
push
repz
dec
ja
or
cltd
mov
movsl
cltd
aas
lret
pop
das
mov
mov
idiv
stc
mov
or
xchg
cmc
jmp
dec
mov
cli
mov
add
and
iret
pop
add
and
fsubr
sbb
into
and
icebp
ds
sub
jp
aad
push
sub
pop
mov
test
mov
stos
decl
loopne
xchg
xchg
jns
pop
push
nop
inc
stos
push
add
jnp
lods
lock
xchg
orb
mov
enter
push
and
sti
ds
pop
sbb
icebp
jge
dec
cmp
xchg
mov
scas
test
mov
insl
push
mov
adc
adc
pop
push
test
jmp
or
ds
sti
daa
pushf
xchg
lock
adc
cli
cmp
sbb
cmp
mov
stos
outsl
pusha
inc
pop
jg
lcall
adc
test
push
inc
lea
ljmp
daa
orl
and
movsb
gs
popf
xchg
jbe
cmp
sub
mov
fildl
testl
das
pop
std
mov
mov
aas
js
aam
loop
cs
add
and
sbb
leave
xchg
xchg
outsb
cmp
popf
std
cld
rcrb
push
jno
jo
and
mov
jle
ja
mov
jno
test
adc
stos
loope
pop
inc
cmp
enter
cmp
cmp
sub
aad
or
pop
imul
add
and
mov
sbb
adc
push
cmpsl
aam
dec
fiadds
pusha
push
push
push
mov
cld
loop
cld
fiadds
sti
pop
mov
divl
and
push
je
xchg
cmpsl
mov
out
sbb
add
mov
dec
shl
fmull
ret
cmc
hlt
push
pushf
scas
push
mov
pop
jae
dec
lea
scas
icebp
stos
cs
xchg
mov
cld
inc
movsb
outsl
je
out
rclb
dec
xchg
cmp
xor
pusha
sub
pop
pop
jne
cs
fxam
insb
mov
ret
jno
sub
rcll
sbb
out
dec
mov
mov
dec
sub
xchg
push
pop
and
mov
pop
movsl
incb
aaa
mov
sbb
fcom
ret
mov
dec
aas
lea
mov
push
pop
mov
inc
mov
or
sub
cmc
xor
addr16
or
sbb
cmp
cmp
aam
aam
xlat
add
daa
push
or
aas
je
decl
repz
cmc
ror
mov
icebp
push
push
jae
xor
bound
xor
lcall
pop
or
ljmp
add
mov
jecxz
mov
aaa
mov
mov
enter
inc
add
bound
pop
xor
add
scas
lret
sti
push
repz
mov
xchg
out
mov
gs
sub
jo
fsubrp
push
inc
and
inc
sbb
adc
mov
adc
aam
push
push
ss
or
popf
arpl
nop
popa
push
dec
pop
push
push
cwtl
xor
pop
dec
sbb
outsb
roll
sub
iret
or
sti
inc
outsl
fwait
push
mov
femms
xchg
cld
xchg
xor
pop
jne
shr
sbb
inc
std
inc
pop
lods
xchg
mov
mov
mov
or
movsl
add
pop
mov
mov
clc
pusha
xchg
hlt
iret
test
cmpsb
dec
vmwrite
popa
lret
ret
dec
test
xor
sbb
xor
inc
fisubrl
or
nop
jno
in
push
imul
jecxz
push
pop
dec
push
mov
fs
out
enter
sub
call
xchg
fadds
or
roll
jo
loop
xor
sar
cmp
std
daa
push
pusha
out
add
arpl
std
cmpb
push
lock
lds
mov
popf
inc
xor
mov
add
xchg
sbb
gs
and
addb
ror
loop
adc
in
lar
jo
test
daa
scas
xchg
in
push
mov
cltd
or
or
aam
jmp
shll
xchg
into
add
push
clc
add
lcall
dec
fcoml
cmp
dec
orb
inc
popa
dec
xchg
push
inc
testl
adc
popl
push
movsl
stos
mov
sti
adc
jl
dec
cmp
nop
push
sub
push
add
and
xor
in
in
stos
xchg
or
pop
lods
sarl
fisubrl
mov
pop
lock
push
dec
inc
fimull
mov
mov
add
cmpsb
inc
push
shrb
mov
adc
xor
push
into
mov
adc
in
xchg
dec
xchg
xor
inc
xchg
inc
push
add
push
sub
or
and
hlt
push
imul
cmp
cmp
inc
scas
iret
cmp
adc
test
pop
mov
push
add
jge,pn
push
mov
mov
sbb
shll
inc
and
pop
in
or
dec
pop
shld
xchg
lock
lahf
fucomp
sub
icebp
lahf
add
std
jmp
or
aam
cli
aam
out
sub
pop
adc
cmp
sbb
fxtract
dec
inc
test
mov
ja
imul
push
cld
add
adc
out
push
inc
lods
ret
gs
shrb
jecxz
xor
ja
hlt
add
hlt
inc
push
mov
cs
inc
dec
sbb
cwtl
pop
mov
pushf
push
in
dec
mov
or
xor
sahf
push
xor
cltd
xchg
pop
mov
jg
outsb
adc
pop
pop
popa
repnz
pop
adc
pop
mov
mull
iret
daa
and
gs
push
sbb
daa
js
push
push
pop
bound
jnp
sti
pop
lret
gs
out
cltd
mov
insl
push
unpckhps
out
inc
cmpl
mov
aam
das
add
or
mov
js
dec
mov
pop
sbb
dec
dec
test
fidivrs
pusha
shl
lds
add
pushf
and
arpl
sbb
or
xchg
out
test
mov
dec
jg
gs
jl
andl
pop
ss
jne
pop
push
cmp
cwtl
int
out
cmp
xchg
or
pop
arpl
mov
cmc
dec
mov
scas
testl
cmp
push
cs
and
inc
push
jecxz
jns
ret
and
adc
xchg
repz
or
gs
test
mov
andl
xchg
outsb
add
mov
lods
jecxz
sahf
lods
ds
outsl
sahf
cmpsb
mov
push
fwait
movsl
test
fistps
pushf
add
jb
inc
ja
inc
mov
rcrl
ret
fwait
mov
imulb
or
inc
add
sbb
push
cmp
pop
add
fistpll
jmp
test
lods
mov
pop
sbb
push
sub
and
xchg
out
outsl
outsl
addr16
jbe
and
rcrl
hlt
xor
cld
lcall
xchg
inc
popf
mov
repz
lret
add
xor
dec
cmp
add
in
inc
repz
or
jne
orl
mov
aam
mov
push
pop
push
scas
push
cmp
mov
les
fmuls
jmp
push
scas
jmp
subl
mov
mov
add
mov
divl
sarb
cli
adc
xor
push
inc
jae
test
jnp
inc
dec
inc
or
dec
inc
jns
xchg
into
fwait
aam
xor
pusha
and
aaa
push
dec
add
xor
push
pop
imul
adc
sti
es
mov
push
cmpsb
out
gs
add
jle
push
cmp
adc
and
stos
mov
in
pop
test
push
and
jae
xorb
pop
in
insb
cmp
or
sbb
dec
mov
adc
jle
scas
ljmp
out
adc
fisttpl
lods
test
xchg
dec
mov
aas
jle
cmc
mov
test
inc
push
rcll
js
pop
cld
sub
cmp
das
dec
dec
sbb
ja
bound
mov
repnz
mov
lcall
inc
cmpsb
push
ret
add
cmc
cmp
cli
repnz
jg
popf
sub
pusha
cmp
and
or
sahf
je
test
mov
jb
and
mov
mov
scas
adc
aad
ss
je
pop
aam
push
aam
pop
inc
push
aam
sbb
mov
pop
cld
bound
push
sbb
sub
sub
jbe
sbb
subb
enter
ret
in
jns
pop
and
and
ds
sbb
stos
imul
inc
stc
cmp
das
jmp
or
fs
pop
sub
or
out
sahf
scas
rep
cs
fwait
pop
rcl
popf
jecxz
sub
pop
stos
scas
mov
icebp
sub
test
add
and
xorl
lahf
dec
sub
xchg
std
xor
jns
push
mov
fsub
out
lret
repnz
or
imul
fdivr
inc
adc
mov
add
add
xchg
nop
push
pop
jl
imul
scas
mov
jbe
mov
and
hlt
notb
test
ljmp
dec
daa
push
cmp
jns
je
or
pop
cmc
add
mov
push
fbld
jp
dec
loopne
sub
push
mov
xchg
inc
sub
mov
mov
imul
push
xorb
inc
inc
lahf
imul
mov
xchg
cmp
es
leave
cld
aaa
aad
jle
cld
mov
inc
enter
ret
popa
dec
scas
cli
icebp
sbb
int3
dec
sbb
jge
jne
sub
jo
nop
jno
pop
les
out
inc
insb
std
cmp
pushf
out
mov
mov
into
dec
mov
dec
push
sbb
cmpl
test
sahf
pop
nop
test
in
subb
dec
inc
xlat
adc
stos
add
adcl
mov
fisubs
push
mov
repz
xchg
rcl
jns
mov
cmpsb
aas
out
push
or
loop
push
pop
pop
pop
shl
rorl
je
jnp
and
sbb
daa
aaa
mov
in
aas
jle
cs
xor
jge
out
push
add
cmpsl
inc
sub
jle
dec
aaa
inc
adc
mov
test
adc
mov
movsl
pop
rclb
movsb
aaa
pop
addr16
pop
mov
out
xchg
push
addl
xor
fdivrl
pop
fidivrl
lret
and
sbb
add
xlat
repnz
stos
test
inc
pop
das
dec
pop
aas
or
lret
cld
cmpsl
shll
push
mov
loope
cmpsb
rcrl
int3
notl
cwtl
je
mov
nop
scas
clc
gs
mov
shl
mov
popl
repnz
icebp
aas
or
and
adc
push
pusha
shrb
dec
or
addl
pop
adc
movsl
adcl
xlat
repz
in
cmp
mov
sbb
ret
std
sarb
or
fcomp
ss
addl
stos
cli
andb
pop
imul
push
loopne
ds
call
sbb
or
fdivs
out
add
loope
shrb
mov
sbb
sbbb
jbe
add
and
fnstenv
ret
js
adc
sti
ss
lahf
jl
push
mov
repz
shlb
inc
push
pushl
daa
sub
lahf
das
lock
cld
sbb
xorb
mov
ret
push
and
jecxz
jle
push
mov
xchg
out
insb
ja
jp
es
je
or
dec
push
cwtl
mov
das
daa
ficompl
in
dec
inc
xlat
loop
into
es
xor
in
iret
add
add
bound
imul
fnstenv
sub
mov
dec
inc
call
add
loop
out
cmp
lahf
xchg
cmpsl
xchg
aad
sysenter
sbb
sarb
mov
push
in
lcall
testl
aad
mov
pop
les
pop
cs
in
lea
lods
inc
dec
popa
subl
stc
xchg
push
add
mov
cmpsl
push
or
ret
adc
movb
leave
and
cmc
cmpsb
sbb
cltd
xorl
or
cli
push
ja
mov
test
add
cmp
mov
mov
jb
or
push
dec
lret
sub
push
rolb
xor
ds
push
cmpsl
push
daa
mov
into
pop
push
inc
mov
jbe
cs
adc
xchg
rcrb
push
stos
aam
sub
ficomps
pop
mov
mov
pop
es
fmuls
shrb
out
jge
pop
push
xchg
ret
jg
sbb
cmpsl
xlat
pop
out
mov
pushf
rorb
bound
aam
sbbb
push
lods
call
cs
pcmpgtb
push
cltd
out
popa
fnstsw
fisttpll
cmp
lods
hlt
inc
call
cmp
cwtl
stos
in
inc
inc
pop
pop
repz
xlat
dec
jmp
xchg
dec
out
jge
movl
pop
and
pop
push
sbb
dec
jp
loop
push
xor
sbb
lcall
popf
mov
in
gs
mov
lds
adc
sbb
xor
ror
mov
ss
das
inc
cld
mov
pushf
push
les
addr16
rol
adc
mov
and
xor
inc
pop
stos
insb
adc
and
pop
xor
mov
add
push
xor
add
aas
clc
pop
inc
sub
xchg
mov
roll
arpl
out
xorb
inc
mov
inc
mov
daa
in
xlat
xor
pop
out
je
cmp
cmovb
imulb
mov
sub
sbb
imul
xchg
dec
mov
into
dec
testl
push
lods
or
sbb
mov
movsb
sub
rorl
xor
ss
xchg
adc
test
sbb
pop
mov
cmp
push
inc
insb
xor
and
negb
mov
jp
into
pop
mov
mov
mov
pop
outsl
pop
jle
mov
lret
jmp
cmpsl
fmull
shll
loop
jg
mov
jno
push
insl
inc
pop
jl
adc
hlt
adc
cltd
imul
pop
jmp
push
mov
fwait
mov
test
mov
xor
mov
js
js
je
fimuls
sbb
push
leave
push
sbb
mov
out
adc
or
int
jecxz
leave
scas
inc
cli
test
push
stos
xlat
loopne
or
mov
xchg
inc
push
pushf
rcr
mov
adc
movl
lea
mov
add
xor
jno
push
cmc
scas
aam
xlat
mov
fs
dec
ret
adc
out
loopne
jb
scas
pop
mov
loope
ja
fs
bswap
or
ljmp
sbb
mov
or
and
or
sub
cmpb
and
jns
testl
loopne
cmp
addb
test
xchg
imul
cld
dec
and
mov
leave
sgdtl
loop
syscall
jp
and
fistpll
inc
mov
pop
and
add
mov
mov
lods
dec
sub
shr
or
dec
dec
je
fidivl
push
fs
mov
pop
cmc
cwtl
jns
mov
scas
mov
out
cltd
in
sub
rcr
jb
data16
pop
push
push
inc
sbb
sbb
icebp
push
shll
pop
xchg
test
jmp
inc
mov
repz
fidivs
jge
inc
push
imul
pop
outsl
in
pop
subb
xorl
inc
xchg
test
jo
movsb
mov
cmp
jmp
sub
in
xchg
mov
stos
jg
xchg
loopne
xchg
ss
mov
pop
pusha
mov
shrl
or
xor
loopnew
inc
in
arpl
cli
mov
out
bound
mov
adcb
les
mov
mov
xchg
add
jnp
das
lods
add
lods
push
insl
test
xor
mov
mov
insl
mov
jo
fidivl
aad
or
jmp
cmp
push
sbb
cmp
divb
push
adc
cmp
out
int
lret
xchg
pop
push
data16
pop
leave
daa
adc
pop
adc
cmpsl
pop
inc
aas
cmp
jge
mov
sahf
mov
cmp
push
or
and
fmuls
dec
sti
inc
scas
cmp
imul
aam
mov
imul
div
jno
mov
orb
loope
test
adc
repnz
mov
xor
jno
push
leave
sbb
loope
shll
lock
mov
lcall
push
and
lods
scas
pop
pop
popa
jnp
enter
pop
xchg
pop
pusha
xchg
stc
mov
lret
hlt
lahf
repnz
xor
jmp
and
out
jb
lods
or
pop
xor
add
and
lcall
stos
jl
xcrypt-ofb
cmpsl
jmp
iret
or
int
movsb
mov
icebp
adcb
mov
push
lods
lock
mov
sarb
push
and
test
push
insl
jge
icebp
add
push
inc
roll
pop
xor
nop
adc
fiaddl
sbb
sub
inc
je
mov
mov
sbb
das
push
jmp
xor
xlat
xor
cmpsb
orb
loopne
xchg
pop
popf
cld
dec
addr16
sbb
iretw
das
xor
fsubp
mov
imul
push
pop
mov
mov
aaa
inc
paddb
insb
mov
xor
adc
pop
mov
pushf
adc
mov
stos
int3
mov
sbb
mov
daa
icebp
mov
push
loop
add
push
fisttpl
fmuls
inc
outsl
ret
inc
in
lcall
adc
jecxz
add
shrb
nop
shrb
jno
jg
jb
adc
imul
xor
lahf
inc
mov
sub
mov
dec
cld
in
mov
stos
movsl
test
cli
pop
cmp
mov
pop
aaa
sbb
xor
pusha
fdivrl
push
pop
mov
jb
popa
insl
roll
or
sub
lret
bound
jo
rcrl
or
dec
cmp
addr16
gs
adc
shlb
mov
cmp
enter
xor
out
push
lret
cmp
lds
dec
dec
fadds
push
movsb
es
fstpl
cmp
ret
rcrl
mov
jne
dec
jne
ss
push
jbe
scas
int3
sbb
subb
int3
stos
ret
jg
cmp
push
inc
jg
jae
pop
imul
roll
mov
stos
roll
mov
outsb
cmp
cmovne
jp
or
pop
add
lds
lahf
push
xchg
mov
outsl
aas
mov
mov
loope
inc
out
dec
push
mov
sub
cmp
popf
sar
orb
add
in
movsl
sub
shlb
cmpsl
in
add
sbb
lock
cmp
jmp
aam
pop
out
xchg
cmpsl
mov
and
pop
outsb
lahf
xchg
fs
lcall
enter
mov
adc
jl
arpl
hlt
cmpsl
pop
dec
add
mov
mov
idivl
aad
adc
or
fiaddl
jb
scas
dec
mov
xadd
bswap
iret
add
jae
rep
push
arpl
xor
rcrb
loope
mov
pop
stc
and
sub
sahf
sahf
insl
aam
pushf
xchg
scas
mov
shlb
mov
jp
ja
incl
lods
xchg
xchg
mov
pop
rcll
test
test
roll
loopne
lods
gs
mov
xor
jge
lahf
sarl
movsb
mov
fisttpl
cli
push
test
out
js,pn
push
sbb
adcl
xor
fcompl
inc
mov
add
inc
dec
lret
loope
jne
int
sub
in
fimuls
xor
xor
mov
sub
je
pop
sub
xor
pushf
ss
movsb
push
dec
xlat
ret
in
push
xchg
frstor
mov
adc
adc
int3
inc
dec
cmp
push
push
loopne
inc
jbe
lods
jae
mov
adcb
out
insl
shll
stos
popa
pop
and
push
add
test
dec
and
lcall
xor
lods
movsb
sbb
add
insl
roll
inc
inc
stos
mov
adc
pop
mov
jb
xor
pop
jmp
pusha
adc
popf
pop
push
insl
dec
loopne
hlt
inc
cs
das
and
hlt
add
pop
inc
cmp
loopne
jl
daa
fistl
push
negb
mov
push
lea
ja
cmpsb
fnstsw
mov
dec
imul
cmp
push
add
and
and
scas
sbb
jp
fisubl
maskmovq
idivl
inc
mov
inc
lret
jnp
cmp
pusha
scas
movb
int
aaa
adc
test
sbb
mov
ret
inc
cld
cmp
cld
add
js
pushf
mov
push
loopne
es
xchg
lods
pop
inc
xchg
subl
shll
push
or
call
jno
adc
aad
and
insb
rclb
dec
sbb
jecxz
lea
add
daa
and
incb
xor
push
je
pop
pop
cli
pushf
jno
ljmp
cmp
add
adc
jle
popa
lret
jbe
jnp
leave
mov
jmp
add
pop
push
stos
mov
lea
arpl
xchg
scas
mov
ds
int
out
pop
imul
sarb
shll
fiadds
testb
addb
rol
pop
adcb
mov
adc
fstps
jge
mov
fdivl
outsb
lret
pop
cltd
sbb
mov
or
mov
lds
cmp
pop
fdivs
jb
jecxz
stos
mov
cmpsl
or
mov
repz
testb
xor
pop
push
mov
xorb
ljmp
lea
push
test
mov
idiv
mov
adc
movsl
cs
adc
test
mov
in
jno
xor
sar
sub
push
jmp
ljmp
mov
in
or
or
xchg
pop
xchg
mov
sbb
or
sbb
sti
pop
jle
mov
stc
jle
nop
xor
jmp
outsl
pop
push
xchg
mov
push
es
lea
push
jle
mov
sbb
ss
pop
or
cmp
gs
pop
ljmp
xchg
inc
cwtl
mov
cld
repz
sub
jl
xchg
jg
adc
js
int
add
rorl
add
push
mov
sarb
jae
divb
xor
in
arpl
mov
int3
int3
ja
in
dec
cld
pop
push
jno
dec
xor
test
mov
pop
xor
paddusw
pop
adc
lret
dec
inc
cmp
jle
popf
in
xchg
out
mov
fs
and
lea
mov
jmp
inc
int3
ret
mov
jae
int3
xor
ja
subb
insb
pop
pusha
sahf
push
ret
mov
sbb
add
and
xchg
pop
pop
ret
jns
push
jp
cld
jnp
in
rcrl
hlt
sar
mov
xor
insb
out
pop
inc
adc
and
add
andl
pop
cmc
push
inc
push
cmp
add
jb
dec
push
addl
ret
push
enter
pop
cmp
mov
and
pop
out
dec
out
stos
cli
push
bound
mov
xchg
mov
aam
pop
or
loopne
aam
pop
add
scas
push
mov
ret
or
xlat
push
pop
push
sbb
stc
fdivp
inc
test
push
mov
jb
mov
mov
rolb
push
sahf
push
push
test
xor
repz
or
adc
int
adc
pop
aam
cs
test
jnp
dec
sub
cli
dec
cmp
leave
adc
rcll
repz
cmp
add
mull
mov
andl
lock
dec
clc
mov
idiv
and
sub
inc
int
mov
mov
fwait
mov
ja
aam
push
inc
cwtl
jnp
or
stc
stc
les
inc
leave
enter
dec
or
aam
fstl
push
inc
pop
dec
mov
stc
lock
shlb
jmp
out
xor
jge
insl
repnz
sub
mov
xor
pop
iret
aaa
push
push
in
jne
in
dec
cmp
lea
add
ss
cltd
stos
dec
adc
sub
sahf
je
call
push
in
jg
mov
or
mov
sti
adc
repnz
jge
sbb
jne
imul
adc
sub
sbb
lcall
push
rcll
pop
sbb
push
push
and
add
xchg
and
xchg
xchg
or
xor
push
jbe
add
int3
jp
jp
sti
lahf
or
adc
mov
cwtl
enter
xor
xlat
test
imul
lahf
cmp
orl
cld
sub
push
mov
movsl
dec
loop
push
sbb
mov
call
out
shlb
jbe
shrl
adc
xchg
data16
xchg
bound
xchg
push
jle
sarl
and
int
xor
xchg
das
insb
pop
inc
adc
dec
pop
imul
movsb
sbb
hlt
pop
ljmp
xor
and
inc
aaa
fisubrs
ret
add
inc
or
adc
in
jmp
js
push
add
loopne
jge
fsubrl
scas
push
jae
fisttpl
and
push
sub
ret
cld
fdivl
sub
jle
xchg
jp
cli
sub
das
cmp
lret
push
test
mov
dec
mov
jg
enter
repnz
rcl
bound
cli
bound
adc
sti
and
lret
mov
pop
jno
mov
jl
bound
dec
mov
adc
xor
lret
int3
divb
test
shrb
nop
fistpll
mov
mov
lods
cmp
popl
or
std
sbb
or
and
cmp
add
mov
xor
pop
push
fstl
cmc
jge
es
or
jge
mov
xlat
clc
popa
fucomp
mov
cltd
pop
xor
fs
lret
shlb
in
and
dec
inc
pop
sti
stc
sbb
push
inc
popa
mov
mov
test
incl
jno
pop
mov
add
jle
dec
pushf
fs
orl
xor
adc
inc
cmc
dec
jge
add
gs
xchg
dec
xchg
inc
lods
lods
mov
cmp
mov
lcall
mov
test
adc
rorb
test
lret
xadd
andl
xor
imul
sbb
ss
jno
addr16
fisttpll
bound
xchg
push
mov
jae
mov
lods
in
fildl
stos
and
ds
mov
mov
inc
imul
sbb
in
rcrb
outsb
jno
xlat
push
jecxz
xchg
push
dec
dec
push
bound
xchg
ljmp
xor
inc
aaa
jp
mov
loopne
out
insb
ljmp
cmp
push
sbb
cmp
mov
pop
ss
mov
inc
mov
inc
fldt
test
ds
inc
lods
push
stc
jecxz
jo
inc
push
pop
roll
rcrl
jge
and
cmp
adc
hlt
or
mov
cs
jb
ret
xchg
stc
jb
xchg
cmpsb
hlt
outsb
push
sub
or
test
pop
pop
cmp
sti
mov
xor
jmp
adc
lods
xchg
rcr
add
or
xchg
mov
hlt
out
fsubrl
jp
test
xchg
lret
sbb
jno
popa
mov
jae
imul
sbb
es
mov
mov
mov
mov
xlat
pop
push
xorb
sbb
ret
or
or
fwait
test
gs
cld
adc
dec
roll
call
call
inc
das
inc
push
add
mov
xlat
je
jl
xchg
inc
mov
into
imul
mov
push
or
leave
and
xor
push
or
xchg
mov
mov
inc
lods
mov
scas
js
ljmp
insb
mov
movsl
leave
mov
fcompl
mov
xchg
xor
push
jbe
cmp
and
inc
gs
in
imul
repnz
jmp
mov
icebp
mov
pop
mov
pop
xchg
xor
mov
pop
ret
out
lcall
cmpsl
jno
js
imul
movsl
inc
setnp
mov
xchg
push
jp
cmc
hlt
cmp
cld
jns
or
push
push
fildll
rclb
xchg
mov
adc
test
fcoms
ret
sub
dec
imul
push
or
mov
add
push
dec
sub
ds
sub
jnp
cmp
pop
jge
fs
dec
mov
cli
hlt
fimull
mov
fmuls
mov
pop
aaa
lods
loope
xor
in
leave
jb
arpl
adc
dec
test
sub
pop
xchg
inc
cmp
jp
fst
xchg
mov
cli
sub
mov
sub
cmpsb
stos
push
data16
adc
je
test
jb
imul
cmp
inc
negl
test
test
mov
mov
sub
loopne
and
sar
pop
or
sbb
dec
fildl
inc
jbe
aas
push
mov
mov
out
ret
xlat
les
cmpxchg
inc
inc
fs
sbb
popa
insb
and
mov
pop
xchg
ds
fisubrl
mov
shrl
popa
add
movsl
test
xlat
imul
imul
mov
mov
or
jb
xor
fwait
es
movsl
jae
inc
arpl
inc
pop
loop
push
sarb
ljmp
shll
xchg
repnz
xor
mov
adc
dec
xchg
inc
bound
sbb
mov
adc
or
js
sbb
sub
sahf
adc
mov
mov
leave
pushf
lea
jno
stc
sbb
or
out
shrl
js
mov
lock
add
rcrl
or
test
or
out
jmp
jmp
cmpsl
test
addr16
cmc
fisubl
enter
enter
inc
sbb
and
inc
lock
mov
push
mov
jno
fdivp
icebp
dec
xor
push
adc
sub
or
stc
test
ret
add
je
jns
adc
mov
mov
lret
xchg
push
insb
jne
xchg
mov
adc
jno
ret
xchg
sub
lcall
mov
cwtl
adc
sbb
and
repnz
shll
in
shrb
stc
push
inc
push
xchg
jl
add
rclb
jo
out
incl
sub
stos
xor
push
sbb
mov
nop
in
ret
cmc
rcll
rol
jns
outsb
adc
adc
xor
adc
mov
xchg
xor
jno,pt
in
xchg
ficomps
pop
in
scas
call
jbe
lods
sub
mov
adc
adc
jns
or
xchg
daa
mov
mov
pop
inc
nop
push
dec
cmc
jp
cmpsl
mov
fidivs
adc
mov
test
outsl
xchg
outsb
pop
fmul
mov
popf
jmp
mov
aaa
lods
enter
adc
push
pop
movsb
rolb
repz
cmp
and
jmp
mov
shll
push
xchg
jmp
sbbl
mov
call
mov
pop
imul
or
mov
xor
xchg
clc
rolb
pop
aam
mov
out
loop
dec
fstl
jmp
push
out
dec
sub
ret
push
fs
sahf
ret
jecxz
sub
mov
dec
pop
sub
xor
icebp
mov
or
into
fwait
repz
out
inc
pushf
clc
inc
xor
pop
sub
pushf
imul
movsb
and
test
sbb
hlt
add
push
fstp
das
in
pop
lahf
push
push
xchg
test
xchg
mov
mov
sarb
daa
js
into
push
clc
repnz
cmp
adc
adc
xor
pop
inc
jo
test
jl
shl
sti
push
rcll
adc
test
fbstp
xor
ret
mov
imul
push
out
cmpsl
inc
stos
rol
cmp
jnp
pop
pop
lret
jb
fcoml
ficompl
mov
push
dec
xchg
jnp
nop
jb
or
jmp
cwtl
jl
ja
cli
jno
testl
out
add
test
mov
fwait
and
lea
loope
cmc
cmp
dec
loope
fildll
repz
imul
fldt
loopne
sub
and
out
subl
push
add
fistl
jecxz
dec
and
add
cs
les
rolb
mov
lcall
pop
inc
movl
outsl
jb
dec
js
mov
es
adc
enter
push
jns
lods
dec
pop
sti
push
push
and
mov
cmpsl
out
out
add
push
cmp
sahf
push
mov
ss
adc
fcomps
and
cld
enter
ljmp
sub
mov
test
mov
adc
and
fwait
call
sub
and
jg
mov
shrb
push
pop
jg,pt
xor
stc
es
out
xchg
incb
loopne
inc
fiaddl
jecxz
leave
xor
loope
mov
fimuls
push
andl
movb
or
repnz
and
push
push
in
fsubrs
adc
int
inc
ucomiss
aaa
pop
das
loopne
test
or
sub
sahf
jns
mov
mov
das
ret
stos
adc
popf
pop
jbe
mov
testl
stos
mov
push
sbb
cltd
cmp
xchg
mov
movsb
sbb
rcr
out
inc
out
lods
mov
rcrl
mov
dec
aam
inc
xor
sub
sbb
ret
jbe
jne
stc
jmp
movsl
cmp
cld
rcrl
add
loope
jns
addr16
cmpsb
outsl
test
mov
dec
inc
in
or
inc
outsb
int
and
orl
int
add
dec
ljmp
aaa
lods
subb
jae
jae
push
xchg
out
int3
js
xchg
jmp
inc
bnd
les
icebp
cmp
dec
cltd
dec
inc
rolb
je
xchg
push
push
int3
into
sub
mov
icebp
in
cmpsl
imul
mov
cltd
fwait
lahf
test
pop
dec
in
sbb
or
lret
pop
mov
and
popf
push
pop
inc
dec
mov
sbb
adc
cmc
cmpsl
cs
xchg
in
add
mov
xor
sarl
je
test
sub
pop
sbb
div
in
arpl
jle
jno
out
xchg
imul
mov
mov
adc
adc
hlt
inc
shlb
mov
inc
pop
jmp
pop
jg
cld
roll
sbb
fistl
and
jbe
mov
lret
fld
jg
jmp
inc
test
pop
ljmp
mov
mov
mov
mov
mov
test
enter
jecxz
mov
sbb
jno
mov
mov
cltd
adc
test
ds
xorb
jl
or
test
cld
dec
leave
in
push
pop
xor
lahf
jnp
pop
sub
out
lcall
push
mov
mov
xor
mov
xchg
rcrb
pop
dec
das
jno
add
repnz
ret
arpl
shl
xor
push
lea
rcrb
fmuls
add
int
aaa
repnz
out
imul
lds
divl
jo
sub
and
mov
xor
lret
xchg
out
pop
iret
and
test
xor
pop
push
pusha
add
and
inc
aam
insl
ret
jns
icebp
and
cmp
enter
mov
adc
andl
add
dec
sbbl
or
aad
ljmp
call
scas
mov
jmp
inc
xchg
adc
testl
scas
push
hlt
test
adc
cmpsl
pop
and
or
jg
cld
in
cmpsl
xor
hlt
sub
dec
jne
adc
in
add
addb
xchg
mov
shlb
jae
pop
or
ljmp
arpl
mov
insb
fdivrs
mov
sub
fsubr
mov
jecxz
cmpsl
mov
or
add
loop
mov
adc
xor
lret
add
es
mov
fsubl
inc
and
int
aam
dec
fs
sub
push
pop
adc
andl
stos
fisubrs
add
xchg
add
mov
cmp
stos
xorb
sbb
xchg
inc
sbb
stos
mov
cwtl
dec
mov
xchg
dec
mov
jg
cli
mov
ss
push
bnd
sbb
jle
loop
fs
inc
pcmpeqw
or
nop
stos
popa
xchg
mov
dec
sbb
mov
pop
testb
jo
xor
movsl
loop
movsb
jecxz
mov
or
mov
inc
dec
enter
xrelease
xor
and
xchg
stos
dec
call
push
pushf
push
call
or
mov
xor
xchg
jge
ljmp
mov
xor
jb
jmp
xor
push
add
add
leave
mov
mov
fimuls
std
jg
out
cwtl
mov
ss
and
sbb
cmpsl
lock
test
push
dec
mov
lahf
mov
dec
repz
jl
ret
sbb
jg
popa
sbb
pop
xchg
push
and
sbbb
lcall
pusha
not
jle
cmpsb
loopne
stc
hlt
movsl
or
movsb
xchg
lret
fadd
lahf
or
mov
ds
pop
mov
daa
jecxz
or
xchg
push
inc
dec
pusha
movsl
in
out
lock
pop
pop
add
adc
cvtdq2ps
stc
sbb
out
icebp
jnp
mov
lock
frstor
popa
sbb
xchg
mov
pop
xor
mov
jb
jne
pop
outsb
mov
das
adc
leave
in
fstp
xchg
out
icebp
jae
xor
lds
pop
lock
push
push
stos
sub
mov
pop
cwtl
pusha
xor
rcrl
adc
cmc
pusha
adc
jb
mov
pop
mov
fucomp
jne
outsb
push
test
scas
inc
sbb
inc
adc
dec
cld
xor
fisttps
mov
popa
aad
push
shll
jns
lret
outsb
rorl
ret
insb
movsb
xor
inc
pushf
pop
in
mov
inc
arpl
xor
jecxz
push
sub
mov
sarb
xor
mov
in
cmp
push
hlt
cmp
lcall
gs
push
jecxz
adc
fs
mov
jns
push
nop
cld
aas
in
pop
divb
rcr
sub
sub
mov
inc
les
or
cmp
inc
jbe
jg
cld
insl
rorb
xor
out
push
out
jmp
jmp
out
dec
ja
insb
mov
xor
jnp
sub
dec
jo
cmp
jnp
aad
loop
sti
js
xchg
adc
movsl
pop
add
test
mov
sub
movsb
xchg
lahf
inc
mov
pop
xor
jb
out
push
lret
adc
repnz
je
add
scas
push
iret
leave
add
mov
jl
insl
cli
inc
aaa
xor
jo
jne
inc
aad
test
xor
mov
dec
in
imul
pusha
shrl
dec
movsb
cwtl
sub
pop
andl
fmulp
sub
cmp
push
mov
sbb
mov
sbb
outsb
imul
jno
gs
shl
adc
mov
scas
jo
lret
push
fistpl
fcmovu
sbb
or
add
sbb
bound
orl
hlt
or
jl
clc
movb
aaa
mov
jp
ffreep
imul
xlat
xchg
xor
sbb
mov
jbe
rcr
nop
hlt
std
pop
jg
mov
mov
mov
mov
sub
pop
test
aas
fldl
mov
out
add
xchg
pushf
mov
adcl
insl
jle
je
add
sbb
dec
rclb
sbb
dec
fildll
adc
shlb
or
inc
add
add
fildl
mov
ds
sub
sahf
dec
push
jg
inc
roll
fsubr
xchg
xor
je
jmp
pop
popl
sbb
mov
ret
test
mov
push
cs
inc
scas
inc
cmp
jb
je
mov
cmp
xor
shll
mov
pop
and
pop
imull
fisubl
dec
loope
xchg
int
jg
dec
xor
repz
stos
addl
add
aas
stc
nop
pop
aam
cmp
add
mov
clc
ret
ds
jo
shlb
push
outsb
cld
sbb
cli
add
dec
ja
xchg
ss
das
lret
dec
sti
add
push
add
test
sub
repz
ja
mov
or
jae
adc
call
insb
popa
hlt
ljmp
push
ficoms
xor
cmp
mov
loope
mov
nop
sub
jp
push
mov
xchg
xor
sbb
jo
mov
filds
shlb
mov
in
es
add
fisubs
sbb
xor
cmp
and
ljmp
stc
mov
scas
or
xor
xor
xchg
movl
loop
add
cmpsl
inc
add
or
cmp
lcall
outsb
xor
sub
lods
push
add
aas
or
xchg
or
push
dec
or
jge
push
add
jae
in
inc
loopne
push
in
loopne
and
lahf
dec
pop
out
jl
pop
pop
cli
push
xchg
or
xchg
scas
ret
andb
jbe
push
push
xchg
dec
mov
mov
dec
sbb
jmp
inc
inc
jmp
notb
movsb
push
iret
lods
jp
ss
in
sub
popf
adc
pop
pop
clc
inc
push
lods
ret
mov
push
out
xor
es
cld
mov
mov
fnstenv
jo
out
inc
faddp
insl
mov
repz
call
test
or
movsl
cmpsb
fldcw
test
lahf
jge
sahf
mov
jp
lret
or
mov
jmp
mov
jl
fucomip
push
mov
inc
test
aaa
jl
test
bound
dec
mov
sbb
adc
jecxz
push
pop
bound
insb
out
push
sbb
ljmp
pop
pop
pop
pop
fsubs
popa
sbb
cmp
jne
xchg
mov
jns
ret
and
icebp
pop
out
movsl
xchg
xor
xchg
aas
add
stos
cs
ss
pushl
repz
jl
xchg
lods
js
adc
cmp
in
adc
xchg
cmp
push
lds
or
xor
rclb
cmp
mov
aaa
pop
sbb
jae
jmp
stos
in
ss
cltd
mov
dec
dec
mov
and
cmpl
mov
xor
mov
sbb
cwtl
adc
hlt
lret
mov
sub
gs
dec
pop
aam
mov
js
push
sbb
mov
xor
int
lods
mov
sub
les
adc
imul
pop
adc
xor
cmp
cmp
inc
aas
push
mov
popa
sub
mov
pop
insl
call
addl
outsb
pushf
iret
out
xor
jns
imul
movsb
mov
dec
and
adc
pop
or
data16
push
imul
or
dec
popa
xchg
xchg
inc
dec
iret
and
fdivs
arpl
popf
nop
imul
test
fdivr
inc
sbb
add
imul
xorl
pop
inc
out
or
dec
pusha
mov
push
sarl
sbb
or
mov
shlb
push
jb
jo
xchg
insb
add
inc
add
pop
mov
push
jmp
ja
je
push
mov
cmc
sbb
js
mov
icebp
push
popa
vandps
dec
test
rep
mov
add
jl
xor
shll
flds
jbe
or
or
test
dec
sbb
dec
in
lock
inc
sub
call
cmp
inc
cltd
inc
out
inc
dec
out
jne
mov
jl
imul
or
mov
repz
xchg
in
insl
pop
rorl
pop
cmpsb
inc
mov
xchg
sbb
lcall
xchg
push
cltd
fucom
or
mov
out
test
imul
mov
adc
push
push
jg
sbb
jp
adc
sbb
stc
push
mov
ljmp
fidivrl
nop
cmp
aam
sub
cmpsb
stos
cmp
push
mov
into
stos
comiss
shlb
in
imul
sub
cmp
addb
jl
fldcw
leave
pop
or
xor
cld
xchg
in
or
and
dec
jg
jns
sub
or
sbb
push
xor
xchg
addr16
jno
arpl
popa
cs
push
push
pop
push
push
lods
cs
sarb
lcall
aaa
lea
push
jmp
ret
jae
pop
xchg
cmp
es
loop
adc
pop
adc
pop
fdiv
sbb
xor
in
adc
jle
cmp
scas
aad
test
or
xchg
mov
mov
daa
fwait
and
add
shll
cli
cmpsl
cmp
pop
mov
inc
js
jae
das
and
ret
add
scas
xchg
cmp
fdivrl
sbb
mov
divl
out
add
lods
data16
dec
pop
mov
sub
inc
pop
and
nop
cli
push
push
mov
mov
ss
leave
add
mov
xor
imul
xchg
sbb
mov
cmp
mov
push
cmp
jl
repnz
scas
loopne
add
push
loope
dec
ret
ret
sarl
mov
das
jp
push
xchg
int3
pop
and
dec
sbb
lahf
sahf
xchg
mov
lods
xchg
hlt
mov
adc
or
mov
push
and
pop
cwtl
pop
push
ljmp
mov
stos
pop
jl
mov
aaa
pop
mov
lea
sbbl
inc
lahf
aas
adc
in
sub
in
mov
dec
pop
loope
aaa
xor
mov
xchg
out
mov
inc
mov
jecxz
into
lods
stc
jb
daa
lret
xchg
or
popa
pusha
cld
mov
lods
jecxz
shrb
fs
das
mov
icebp
add
sti
lock
stos
call
js
jg
push
xchg
mov
cwtl
ret
mov
sub
fisubl
cmp
fucompp
decb
sbb
inc
jg
inc
add
and
les
fisubs
outsl
imull
ja
cmp
mov
mov
pop
loop
cmp
imul
dec
test
les
outsl
jmp
sahf
adc
movsb
xor
int
or
and
js
add
push
sbb
sub
jae
lock
cld
test
stos
xchg
mov
aaa
lds
repnz
js
gs
adc
repnz
sub
add
xchg
ret
and
sarb
shl
ficomps
mov
pmullw
pop
mov
fs
push
adc
push
push
jb
mov
test
clc
loope
out
out
xor
std
and
xchg
arpl
mov
and
aad
sub
jae
or
mov
lret
jae
sbb
gs
adc
jecxz
adc
jg
rcpps
mov
dec
jne
neg
mov
lea
adc
mov
cli
jae
lds
inc
les
addr16
not
test
and
es
bound
push
sbb
jne
call
daa
test
enter
pop
aam
imul
dec
cmc
xchg
mov
push
stc
fwait
push
lods
aaa
test
loop
repz
xchg
mov
cmpsl
pop
lods
loopne
push
jg
pushf
sbb
or
dec
cmc
out
lods
dec
cli
insb
and
mov
and
pop
pop
cltd
sub
jmp
dec
sub
adc
push
pop
and
sti
sbb
xchg
pop
lea
mov
ja
nopl
fstl
aas
ja
lahf
mov
lods
pop
lret
mov
mov
ret
mov
rorl
out
xchg
xchg
fsts
out
and
fidivs
fwait
cltd
roll
xchg
sub
ss
jle
and
stos
frstor
pop
ret
lea
or
testb
insl
imul
mov
test
push
stc
pusha
ret
repz
mov
xchg
lret
sbb
push
xor
dec
xchg
ret
into
sbb
push
fwait
insl
icebp
mov
mov
pop
push
ret
leave
and
mov
je
inc
push
lret
push
in
xchg
jne
out
dec
imul
pop
pop
dec
cmp
andl
lds
lret
pop
sub
and
or
push
outsb
mov
push
and
mov
test
cmp
add
arpl
mov
movb
daa
pusha
push
inc
jmp
jno
adc
sti
cmp
add
imul
mov
jbe
test
or
fwait
out
or
popf
jnp
sub
push
mov
pusha
push
ficoms
daa
cltd
push
fwait
cli
out
jb
add
or
mov
ret
inc
lods
xchg
adc
int3
jp
pop
pushf
scas
mov
lds
mov
jnp
dec
adc
sbb
and
and
adc
stos
adc
mov
addb
iret
adc
inc
jp
pop
in
jbe
dec
mov
lods
jo
xor
pushf
dec
into
lcall
fcomps
std
sbb
xor
or
push
fstpt
daa
and
xchg
aas
sbb
xchg
imul
pop
or
sub
cmpsb
mov
mov
mov
mov
xchg
mov
out
push
mov
sbb
adc
testl
shrb
out
inc
sub
sub
adc
jnp
pop
adc
aad
sub
lahf
sahf
mov
dec
pop
dec
add
js
loop
cs
aam
add
mov
inc
adcl
pop
enter
cmp
pop
or
dec
cmpsl
clc
test
test
sbb
cli
or
xor
and
mov
repz
movsl
xchg
cmc
rcl
fcoml
imul
or
ds
xchg
mov
mov
stos
push
xor
inc
cmc
fiaddl
sbb
subl
call
and
fildl
call
not
mov
cmp
dec
mov
shll
fmuls
inc
jp
inc
aad
enter
lcall
popf
aas
pop
rolb
je
push
mov
and
xorb
and
sbb
gs
inc
lahf
mov
xlat
loop
push
es
mov
adc
aas
cmpl
xor
jne
lock
and
push
lds
mov
ret
and
adc
pusha
mov
dec
pop
dec
xchg
pop
andb
shlb
mov
lods
div
inc
decb
aas
cs
lahf
enter
mov
sbb
adc
nop
and
add
insb
gs
stc
push
adc
fcomps
xchg
adc
xchg
sub
mov
pop
imull
cld
cmp
mov
cli
inc
cmpb
mov
adc
js
int3
or
sub
cld
mov
addr16
repz
hlt
mov
push
push
push
int3
xlat
sahf
fcompl
pop
and
idiv
add
sbb
and
lcall
fdivrs
mov
lods
mov
out
inc
mov
mov
outsb
inc
xor
inc
test
xor
mov
popf
sahf
les
in
xlat
rcl
mov
pop
scas
aad
ror
sbbb
xchg
inc
scas
rcl
xor
jbe
cld
pusha
mov
call
fcmovnb
popf
rcrb
mov
dec
popl
push
mov
cmp
xchg
dec
jae
mov
dec
cli
test
jg
push
rorl
fidivs
imull
jg
jns
ret
imul
js
int3
in
lods
dec
push
shll
cwtl
sbb
mov
mov
je
leave
in
ja
test
pop
sbb
sbb
bound
or
or
jnp
jge
out
mov
sbb
adc
lcall
jmp
rcl
addr16
sub
pop
mov
in
addr16
mov
lods
adc
hlt
and
add
popf
dec
cs
fdivp
mov
scas
mov
pop
dec
aaa
and
loope
lret
dec
shlb
lock
hlt
inc
aam
sbb
fsubs
mov
add
pushf
cmp
xchg
mov
inc
mov
cmp
dec
mov
add
mov
fbstp
push
movsl
cmp
lahf
pushf
hlt
mov
icebp
push
negl
add
mov
add
in
sub
mov
xor
jmp
subps
cmp
pop
loopne
inc
shll
add
lret
mov
xor
mov
xchg
and
lds
pushf
loope
addb
push
push
repnz
lea
and
xchg
pop
insl
shrl
sbb
cmp
inc
inc
addr16
fstp
add
xor
mov
out
aam
fstpl
jl
ljmp
rcrl
in
mov
mov
in
sbb
jle
pop
pusha
ret
js
pop
dec
nop
iret
je
jbe
std
push
out
xchg
or
lods
mov
xchg
cld
pop
pop
scas
push
cli
pop
out
and
gs
jno
sub
mov
mov
mov
add
jns
fwait
mov
add
pop
inc
pop
std
xchg
dec
pop
mov
fs
mov
test
fbstp
push
fsubl
adc
cli
test
bound
or
cmp
loope
rcrl
push
adc
shll
cli
xor
dec
ret
test
test
lds
std
cmp
lret
or
mov
loop
mov
roll
popf
mov
ret
mov
out
pop
or
pop
ss
inc
dec
mov
push
sbb
push
dec
stos
imul
push
adc
inc
xor
mov
mov
pop
xlat
leave
jo
iret
cltd
fadd
and
inc
sub
and
scas
adc
mov
jnp
adc
int
outsb
inc
push
imul
sbb
sahf
dec
sbb
aad
sbb
jmp
cmp
std
mov
push
add
push
enter
push
jp
gs
dec
ret
clc
xor
xchg
ret
mov
adc
movsl
cmp
lea
and
pop
cmpsb
mov
sub
clc
shll
xchg
jns
mov
cmc
add
dec
outsl
call
sub
repnz
push
dec
movsb
inc
xlat
jnp
inc
popf
adc
dec
loopne
je
jne
adc
jp
inc
int
mov
ljmp
adc
or
cmp
clc
or
nop
push
jmp
fwait
movsb
mov
mov
popf
mov
sub
lret
xchg
push
rclb
bound
or
jg
test
pop
xchg
push
mov
adc
pop
add
sarb
xor
mov
cmp
sbb
push
add
push
push
pop
shlb
mov
adcl
sbb
cmc
icebp
out
inc
out
dec
push
pop
mov
punpckldq
movsb
cmp
dec
fs
push
fnstsw
sbb
adc
fcmovnb
or
lds
inc
fwait
xchg
push
jge
cli
xor
daa
lea
dec
push
pushf
and
xor
pop
sbb
mov
leave
xorl
sbb
into
sar
xchg
adc
add
insb
aam
sbbl
mov
sbb
test
inc
data16
stc
sub
dec
cmc
jmp
mov
negb
adcb
int
mov
in
push
or
scas
fwait
stos
inc
sbb
sbb
and
out
inc
sub
inc
xchg
lcall
ljmp
xchg
mov
arpl
loop
sbb
or
push
mov
xchg
mov
movsl
sub
lcall
scas
pop
xchg
cmpsl
leave
xor
in
jae
push
inc
pop
ljmp
cwtl
repz
movsl
or
and
jbe
ss
jne
clc
sbb
push
adc
xchg
jp
xlat
pushf
cmp
stos
inc
pop
cmpsl
inc
sahf
cli
std
or
popf
leave
inc
cmc
inc
mov
clc
mov
push
cmpsl
sbb
mov
loop
dec
xchg
cli
bound
and
mov
dec
xchg
mov
dec
mov
lds
arpl
sahf
xchg
outsb
push
out
sbb
scas
out
sub
inc
test
pop
mov
mov
xor
std
jns
outsl
add
or
in
xchg
xchg
imul
lods
sub
rcrl
out
jge
add
adc
insl
pop
fs
mov
call
cmp
shrb
inc
repnz
mov
inc
fidivl
dec
mov
dec
in
enter
mov
outsb
push
push
das
call
push
pop
frstor
adc
or
test
xor
inc
sub
pusha
xor
ljmp
loope
inc
xor
stos
bnd
push
pop
lds
xor
pop
or
jnp
pop
test
xor
jns
push
sub
xor
popa
insb
shlb
aaa
adc
mov
sbb
jo
iret
leave
lds
push
xor
push
nop
lcall
xlat
sub
in
add
mov
sbb
pop
sub
mov
out
sub
dec
test
xlat
mov
dec
int3
int3
lods
mov
inc
xor
push
cmc
fistpll
xchg
jno
cwtl
push
sbb
fidivrs
insl
test
or
pop
repz
into
daa
shll
nop
xor
call
in
sar
push
movsl
fmull
mov
sbb
jle
inc
mov
cmp
adc
dec
cmp
test
inc
out
dec
insl
in
jno
in
fwait
mov
adc
push
outsl
rcrb
in
das
shrb
jg,pn
ja
fincstp
dec
jnp
mov
scas
aam
repz
js
outsl
xor
andl
and
xor
popa
icebp
in
fdivl
push
lcall
or
mov
ss
push
insl
or
ljmp
push
ja
push
xor
out
xchg
cmp
stos
mov
xchg
jecxz
cmp
ds
jno
sbb
jge
repnz
fidivl
or
add
xlat
add
shll
sub
mov
push
movsl
pop
int3
fisubl
adc
imul
mov
aas
ljmp
mov
and
mov
adc
movsb
push
xchg
hlt
mov
inc
cmp
add
mov
jecxz
fists
sub
clc
inc
dec
pop
xchg
mov
jae
pop
add
pop
das
test
sub
xchg
push
cmc
pop
xor
setno
daa
cmpsl
leave
push
or
and
mov
cwtl
stos
push
xchg
mov
ret
out
ret
lret
mov
cmp
or
jb
add
ds
push
mov
ficoml
and
sbb
outsl
jne
add
arpl
dec
fiadds
mov
scas
jno
xlat
sub
clc
and
push
add
and
fs
xchg
ficoms
cmpsb
dec
fsts
mov
add
mov
and
cmc
lods
mov
add
test
cmpsb
fwait
xchg
pop
stc
jmp
cwtl
push
adc
xchg
xchg
pop
out
stc
insl
pop
jbe
cltd
lret
fnstsw
pop
dec
or
sub
jae
xor
cs
testl
mov
pop
add
add
mov
les
fs
in
clc
adc
and
adc
inc
sahf
xor
or
inc
xor
pop
popa
lock
mov
imul
jl
mov
mov
cmp
push
cmp
add
xchg
je
add
pop
addr16
ds
dec
filds
pushf
add
cmp
sub
add
pushf
imul
mov
pusha
and
mov
rcrl
add
push
cmp
leave
cwtl
push
in
hlt
cltd
or
clc
loope
shll
bound
stc
int
scas
and
lret
xor
movsl
cmp
jg
test
lods
add
xlat
push
sub
icebp
sti
xchg
cmp
jg
loopne
cmc
mov
shlb
sub
in
std
gs
xor
out
pop
test
gs
xor
push
ret
enter
popa
dec
psubd
mov
mov
scas
imul
push
cmpsl
shlb
pop
ljmp
jge
aad
push
or
repz
mov
inc
mov
lret
mov
out
pop
and
jbe
jecxz
cmpsb
stos
adc
dec
adc
cmc
sbb
pop
mov
xchg
pop
push
mov
xchg
dec
add
and
or
xlat
lods
push
jno
xlat
dec
cld
mov
sub
jo
bndldx
jle
stos
mov
test
mov
pop
mov
cmpsb
push
push
push
mov
add
shrb
mov
jb
fildl
sub
stc
xchg
dec
add
cmp
fldl
call
mov
cmp
out
in
lahf
out
pop
int
mov
sub
push
pop
daa
mov
aad
push
mov
out
cld
sti
cmc
movsl
aas
cmc
cmp
or
mov
loop
shlb
mov
out
jnp
fsts
mov
jmp
sti
inc
sub
loop
add
mov
inc
rclb
cmpsl
push
es
arpl
sbbb
repnz
push
pop
je
dec
fxch
add
push
shll
into
lea
jecxz
jne
cmpsb
mov
pop
jle
std
popl
add
and
insl
gs
stos
inc
ret
ja
push
cmp
js
addr16
jp
and
push
jmp
cli
nop
stos
pop
les
in
jmp
sub
mov
aas
popf
int
test
inc
inc
aam
or
movl
je
mov
or
pushf
clc
dec
shl
mov
dec
daa
or
adc
mov
xchg
notb
stos
adc
inc
inc
hlt
aaa
dec
flds
int
adcb
xchg
push
movb
dec
inc
stos
cmpsl
jl
xor
inc
sbb
jmp
movsl
mov
add
mov
mov
fmuls
pushf
or
mov
xchg
pop
loope
insb
jl
int
repnz
mov
cmp
mov
mov
lods
int3
out
inc
pop
xchg
ds
or
sti
push
mov
push
ds
or
insb
arpl
out
jne
outsb
sbb
dec
sbb
or
cltd
das
inc
mov
scas
mov
fwait
icebp
inc
push
mov
in
test
cwtl
daa
not
test
dec
test
in
call
subl
and
jae
xor
sub
out
mov
pop
jbe
in
add
mov
xchg
sbb
cmp
xchg
int3
outsb
pusha
in
mov
pop
enter
mov
clc
cmpsb
scas
shl
test
jne
movsl
mov
jmp
cmpsb
test
jnp
push
cwtl
xor
or
sub
cmc
mov
pop
push
xorl
inc
insl
push
dec
xchg
lock
xchg
repz
sub
push
int3
popf
cltd
mov
push
stos
cmpsb
in
int3
adc
data16
rorl
sub
pop
popf
loop
sti
add
or
repnz
lret
jp
add
scas
xchg
scas
pop
movsb
sbbl
dec
jo
lock
cwtl
mov
js
mov
and
repz
orb
lea
pop
negb
inc
outsl
adc
into
mov
iret
bound
inc
add
insl
ret
mov
pop
dec
aad
sub
icebp
call
mov
ret
sarb
lret
scas
mov
nop
jns
pop
std
stos
movsl
mov
sub
in
lahf
jae
jge
orb
jecxz
arpl
jmp
jno
adc
xchg
lods
push
and
inc
cmp
std
push
into
inc
mov
in
movsb
mov
sbb
adc
adc
outsb
push
xchg
sbb
add
dec
xor
mov
sub
icebp
xor
dec
lret
icebp
sbb
xor
jnp
lret
push
fucomip
ljmp
mov
movsl
xchg
inc
and
dec
sbb
mov
rclb
in
or
sub
xorl
and
xchg
add
pusha
mov
in
imul
cmpsl
pop
jo
cmp
cmp
std
or
out
popa
leave
into
xor
and
pop
xchg
sbbl
or
das
pop
adc
jb
out
adc
scas
aaa
es
and
dec
mov
cmp
and
mov
push
leave
sbb
mov
data16
loopne
cs
dec
xchg
lcall
outsl
sbbb
cmp
les
adc
sbb
add
sar
adc
pop
in
insb
stos
fisttpll
and
fdivrp
das
fldcw
es
lret
sub
mov
rorl
cltd
mov
out
fcoms
push
xor
cmp
push
aaa
push
into
sub
cld
adc
adcl
or
repz
repz
repnz
dec
xchg
and
push
lods
and
adc
hlt
test
call
mov
add
scas
data16
add
or
and
icebp
icebp
adc
loop
fs
in
sub
cmp
push
pop
mov
adc
ljmp
adc
add
xor
cmp
jle
testl
ja
mov
jg
popf
shrl
dec
lcall
dec
dec
adc
out
or
jge
jo
cwtl
popf
push
aam
and
pop
stos
jae
cmp
je
arpl
adc
mov
cmc
data16
popa
js
xor
int
sub
mov
mov
push
rclb
in
hlt
stos
mov
sub
sbbb
subl
out
clc
ja
enter
push
fisttpl
mov
xchg
jns
add
fdivrp
dec
or
lcall
scas
pusha
cmp
cmpsl
sub
xchg
xlat
pop
add
insb
mov
pop
sub
mov
pop
std
add
cltd
and
movsl
jnp
fcmovnb
insl
mov
mov
sarl
in
add
mov
xlat
mov
jbe
fldcw
mov
or
loope
pop
and
mov
fdivr
les
mov
fs
out
in
aaa
mul
les
into
adc
inc
or
sub
pop
pop
jl
or
mov
lods
sub
sbb
sbb
dec
cld
fadds
add
push
adcl
int
das
add
addb
leave
not
repz
jbe
js
scas
cmc
pop
jl
shrb
sub
repz
lcall
inc
ljmp
adc
sbb
iret
repnz
aad
je
dec
sbb
lcall
adc
mov
insb
sbb
mov
iret
cmp
lods
cmp
les
cmp
sahf
xor
xorl
daa
push
mov
aam
lods
xchg
fstl
xchg
dec
xchg
and
pop
push
shlb
test
pop
stc
sub
mov
popf
and
or
xor
cmp
in
aas
jb
je
mov
pop
adc
push
sti
or
mov
movsb
orl
cmc
test
add
and
jb
aad
push
sub
fcmovu
jno
push
push
jmp
cltd
lods
jp
jo
push
lea
pop
push
movsb
rcll
int3
in
xchg
sbb
sbb
int
add
sarl
sbb
incl
cmp
outsl
jno
pop
dec
je
and
push
or
sbb
mov
into
dec
movl
xlat
sbb
and
popa
clc
lods
andb
xchg
cmp
xor
dec
push
push
jge
repz
rcrb
cltd
popa
jle
inc
outsb
std
mul
push
cwtl
in
jmp
add
rorb
andb
stc
push
or
cmp
adc
xchg
mov
dec
or
xchg
dec
add
cmpsl
in
or
shlb
fdivp
imul
outsb
add
push
data16
sbb
addr16
dec
add
push
sub
mov
lock
or
or
stos
or
ffree
insl
cmp
mov
dec
pop
mov
lea
xchg
xor
mov
or
stos
ss
insl
xor
inc
add
sbb
daa
movsl
cmp
hlt
inc
ds
aas
pop
aaa
push
ss
icebp
aam
sbb
adc
out
mov
lods
fistpll
mov
dec
jae
int3
ss
es
stos
sbb
lock
cmc
int
lods
pop
adc
dec
stos
xchg
imull
cltd
int3
xadd
daa
adc
xchg
lcall
rcr
cmp
dec
mov
ret
mov
ret
bound
scas
test
fadd
pop
imul
jb
mov
fists
out
xor
lahf
sbb
sub
lods
add
hlt
cmpsb
push
arpl
subb
add
add
cmp
ljmp
into
mov
xchg
add
mov
cmpl
icebp
jo
imul
call
mov
push
sbb
push
scas
in
hlt
pop
push
jp
pop
stos
jmp
data16
push
mov
cmp
inc
popa
aad
add
cwtl
pop
jg
cmc
cmp
in
cmc
or
mov
ds
in
imul
dec
cmpsb
dec
or
aad
cltd
xor
out
clc
jns
shrl
xchg
mov
jbe
xor
arpl
xchg
pushf
ret
lds
mov
or
scas
rcr
sarl
aas
addps
sahf
int3
mov
or
shll
dec
mov
xor
movsl
decl
stos
clc
xorl
mov
out
cmp
add
pop
mov
cmpsl
mov
fbstp
cwtl
xor
jp
testb
sbb
loope
in
cmp
sbb
cmp
rclb
call
cmp
pop
inc
or
or
push
xchg
lods
xor
mov
rcll
movsl
repz
out
dec
mov
xor
fcoms
loopne
cwtl
aam
inc
bound
pop
or
in
scas
sbb
fsts
xor
mov
cmp
pop
dec
das
les
cmp
cltd
xor
or
xor
jmp
ljmp
mov
pop
or
ror
mov
shll
stos
mov
inc
rolb
or
sub
push
inc
js
pop
or
push
data16
lret
mov
scas
push
sti
push
jl
ljmp
push
add
outsl
push
jne
sbb
insb
cmp
ss
out
pop
sarb
and
inc
pop
mov
dec
cmp
and
mov
repz
push
and
inc
test
adc
xor
xchg
test
call
aaa
mov
jmp
popf
push
lahf
xor
aaa
push
loopne
xchg
mov
sti
cmp
loop
cli
aaa
imul
lock
stos
sub
in
in
mov
jmp
sbbl
nop
lahf
jg
pusha
jmp
rolb
testl
jle
cmp
xor
mov
sbb
jb
add
adc
xlat
out
sub
rol
xchg
jae
mov
push
shll
cmp
inc
fistpll
hlt
clc
into
push
popa
in
cltd
jbe
shrl
inc
imul
stos
push
mov
inc
js
cs
pusha
scas
dec
sbb
sahf
pop
sti
cmp
std
popf
mov
into
movsl
adc
shlb
hlt
jle
fmul
adc
mov
push
dec
mov
aas
fabs
cmp
orb
jbe
lret
into
mov
and
xchg
imul
jae
sbb
mov
fldln2
sub
bound
or
xor
xor
shl
sub
dec
out
mov
sbb
andl
das
addb
inc
sub
in
lea
fidivrl
divl
mov
mov
sti
push
or
or
pop
aas
dec
sbb
mov
dec
inc
jae
mov
and
fldcw
lret
pop
jmp
dec
dec
mov
mov
ds
insl
inc
push
xor
xor
in
fimuls
adc
and
arpl
add
xor
sbb
adc
sahf
loop
dec
pop
jge
dec
cmp
xchg
sbb
mov
shll
lea
push
add
ret
cmp
xor
push
loopne
and
xchg
push
or
jg
and
cmp
inc
jge
shlb
xchg
ja
xchg
scas
xchg
jns
shrl
mov
into
cs
inc
or
out
fwait
fwait
push
mov
push
ficoml
lods
imul
and
sbb
scas
out
test
mov
bound
mov
outsl
cs
push
aam
adc
enter
or
mov
jl
and
inc
sub
xchg
outsb
mov
add
sub
dec
cld
push
adc
push
enter
icebp
push
add
push
outsb
pop
popf
rorl
repnz
cmp
out
and
jb
dec
aaa
sub
daa
pop
xchg
dec
cs
lahf
fdivrs
pop
testl
movsl
dec
dec
mov
sub
lods
sub
mov
push
cmc
out
jge
int3
jne
cmpsl
sub
filds
sub
cmp
ret
lods
pop
cmpsl
or
mov
push
add
out
mov
adc
cmp
cmp
ror
ret
and
mov
testb
icebp
mov
mov
jle
and
and
movsl
lods
xor
das
sti
test
add
add
enter
push
dec
movsb
nop
addb
dec
and
test
mov
aas
jmp
xor
fsubl
dec
adc
mov
xchg
sbb
mov
dec
scas
in
pop
dec
mov
jne
scas
jo
inc
int3
hlt
jecxz
add
add
xor
cmovnp
inc
cmp
push
out
popa
dec
in
fs
mov
cmpsl
mov
xchg
pop
outsb
loop
arpl
iret
fcmovnbe
cmp
andb
inc
repz
js
and
mov
cmpsb
testb
mov
or
add
push
scas
imul
ret
sub
mov
push
cld
sarb
in
xor
inc
mov
fwait
adc
movsl
jnp
add
xorl
dec
pop
addr16
fisubs
push
jmp
bound
negl
movsb
mov
out
xor
daa
icebp
call
negl
imul
ja
inc
jae
mov
push
pop
fisubrs
xchg
cmpsl
movsb
cli
adc
call
cmp
adc
lock
push
push
xchg
jnp
inc
test
mov
popw
xor
andb
ss
sbb
and
inc
das
int
fstpl
addr16
or
xor
xchg
add
push
subb
sbb
in
cmpsl
jle
lahf
mov
and
dec
imul
pop
imul
ficomps
insb
mulb
pop
fcmovne
fcoml
sti
mov
inc
fiaddl
cwtl
shrb
or
out
and
jbe
clc
sarb
in
idivb
sub
test
shl
pusha
mov
push
ret
shlb
enter
cmp
daa
mov
fdiv
sbb
adc
dec
adc
lock
cmp
mov
out
mov
scas
mov
jae
push
ficoms
and
lcall
jle
lret
mov
pop
cmp
pushf
or
sbbb
pop
push
cmpsl
fisubrl
les
imul
les
addl
xchg
jg
or
sbb
xchg
loop
inc
or
cmpb
scas
je
xorl
mov
ja
jnp
pop
mov
mov
lea
xlat
loop
in
jl,pn
call
aad
pop
bound
aam
inc
inc
mov
push
add
test
sbb
mov
ljmp
gs
cmp
adc
incb
call
and
dec
jge
rclb
mov
notl
enter
in
sub
sti
jbe
pop
sti
in
or
mov
cmp
in
sarb
in
js
js
sbb
fstpl
aad
popf
mov
xchg
flds
push
xor
push
fdiv
out
or
insb
lea
jbe
fiaddl
push
pop
sti
push
mov
addl
add
inc
jno
push
xorb
push
not
push
sar
sbb
lods
xchg
aam
cmp
xchg
fmuls
cmp
jo
cmp
js
loopne
cmp
cmp
dec
cmp
and
push
icebp
mov
jmp
mov
pop
or
cltd
in
js
gs
mov
out
cmpsb
std
mov
jle
xchg
lret
mov
inc
xor
mov
fistpll
ja
push
call
or
sub
add
ss
cwtl
jmp
fidivs
or
aam
iret
xor
sbb
lock
mov
loope
xchg
movsl
dec
call
push
jp
pop
addr16
jg
ds
mov
xchg
loop
add
icebp
push
lds
cmp
test
ret
repnz
out
jo
add
aaa
push
pop
push
mov
pop
cmp
mov
sub
sbb
pop
notl
repnz
dec
lea
imul
imul
mov
call
dec
loope
imul
bound
and
dec
add
inc
ss
imul
cwtl
dec
in
adc
xchg
loopne
shrb
adc
pop
xchg
push
int
and
incl
jg
popa
std
test
push
sub
pop
sahf
xlat
rcpps
rolb
sub
dec
sub
loopne
jbe
out
or
mov
mov
lret
ja
mov
pop
xor
cmpl
mulb
clc
add
xor
fwait
popf
mov
adc
mov
xchg
pslld
xor
add
cmpsl
dec
stos
sub
xchg
arpl
pop
fisttpll
stc
pop
iret
bound
lds
cmpsl
adc
mov
mov
lods
add
int3
sbb
xlat
and
test
push
xchg
or
scas
xchg
arpl
push
in
pushf
xchg
mov
mov
dec
mov
push
and
jbe
inc
bound
subb
bound
inc
or
leave
add
imul
aas
push
scas
je
pop
out
and
pop
mov
lret
mov
mulb
divb
js
data16
xchg
dec
mov
cmc
xor
mov
mov
mov
mov
out
inc
sbb
repz
inc
inc
pop
iret
dec
lahf
jae
aad
cmp
add
push
call
ljmp
sub
dec
popa
clc
xchg
pop
inc
shl
adc
sbb
mov
mov
add
sbb
lcall
inc
aas
mov
lret
xchg
cmc
mov
in
jl
sub
pop
iret
inc
cmp
aam
mov
jns
lock
cli
enter
cs
or
push
cmc
sub
lock
mov
sub
icebp
adc
xor
pop
xchg
negb
cwtl
out
int
inc
xchg
jne
mov
push
dec
mov
jns
jno
and
sbb
add
jae
pop
xor
xchg
pop
lods
push
in
mov
cmp
sbb
xchg
jo
popf
push
mov
or
and
xor
jle
into
mov
sahf
xchg
ds
stc
subb
mov
test
lret
mov
jnp
popf
shll
and
roll
ss
push
push
and
mov
pop
icebp
add
mov
add
inc
loopne
pop
mov
jg
dec
or
jl
and
pop
in
jnp
adc
mov
mov
lock
ss
icebp
sbb
filds
and
iret
lds
and
stos
scas
aaa
fcmovu
mov
subb
adc
push
and
adc
aad
pop
push
pushl
pusha
imul
sahf
in
cltd
int
push
pop
sbb
ret
stos
mov
jmp
pop
mov
ds
mov
loopne
xor
gs
lods
aam
adc
mov
dec
inc
and
sti
out
pop
mov
daa
push
jmp
rclb
nop
scas
add
clc
jmp
adc
iret
sub
lret
jns
cs
rorb
frstor
or
fbld
mov
xchg
mov
je
dec
fmull
and
mov
or
inc
nop
xchg
adc
rol
ret
sub
pop
mov
and
xchg
pop
int3
icebp
ret
xchg
cmc
daa
sahf
cmp
dec
cmp
hlt
add
push
dec
mov
nop
pop
dec
subl
inc
xor
test
pop
repnz
pusha
andl
inc
lods
outsl
jo
push
sub
jl
sbb
add
sub
addr16
adc
into
stos
xchg
cwtl
add
fs
int
dec
cmp
push
xor
orb
fwait
lret
pop
cld
je
inc
cmpsb
xor
adc
test
dec
xor
lock
daa
sbb
or
inc
in
imul
xor
test
adc
ds
mov
vorpd
jb
mull
pop
sub
or
pop
xchg
and
jg
cwtl
hlt
les
imul
push
outsl
cmc
adc
cli
es
cmp
sarl
adc
mov
nop
mov
ret
popa
sub
jb
aas
jns
test
das
or
jl
mov
dec
les
popa
ss
iret
mov
andb
add
jecxz
test
sbb
push
stc
shll
aas
addr16
mov
les
push
fldt
jecxz
pop
gs
sub
daa
or
jns
inc
jecxz
aas
stos
adc
inc
stos
add
push
xor
bnd
loop
mov
mov
jg
scas
jg
mov
je
test
pop
mov
jl
sbb
icebp
dec
sbb
test
lods
ss
bound
loope
sahf
fdivr
pop
insb
and
hlt
fldenv
and
repnz
shrb
mov
dec
add
int3
mov
cmpsb
pop
add
cmp
xchg
imul
cmp
inc
push
imul
cmp
push
inc
adc
aaa
cmp
or
imul
paddusw
jno
lahf
push
clc
aam
cmp
pop
mov
adc
pusha
inc
or
lods
mov
cmp
mov
mov
std
jg
std
and
jge
sarb
mov
adc
mov
stos
rcrl
mul
into
jnp
jae
pop
push
mov
rcrb
pop
and
mov
mov
jl
orb
and
testb
sub
adc
push
mov
movsb
stos
out
imull
xor
pop
bound
sbb
cmc
cmp
pop
scas
xchg
and
push
pop
cmp
shr
rcrl
repz
adc
xchg
aas
push
mov
rorb
fidivrs
and
lret
out
rcr
xor
pushf
sbb
mov
sbb
stos
imul
mov
sbb
sbb
bound
lea
out
xlat
ret
enter
xchg
stos
imul
imul
sbb
xlat
aam
shll
adc
movsl
mov
out
dec
push
cmc
aad
fcoms
enter
push
cmp
test
mov
ds
adc
dec
jne
pop
adc
xor
loope
addl
mov
mov
push
fadds
cmp
popf
jnp
adc
cs
lcall
fldenv
mov
icebp
and
jecxz
push
xor
mov
sub
scas
adc
data16
sbb
int3
mov
add
pop
and
bound
loopne
je
movsl
inc
cwtl
sub
pop
jmp
mov
sbb
and
sub
mov
lea
pusha
xor
cmc
xor
xchg
into
sbb
stos
imul
pop
lret
pop
stc
mov
pop
jp
pop
lods
mov
jle
mov
lock
sub
lods
fisttpl
outsl
das
mov
int
lods
and
in
push
or
sbb
adc
pop
sar
mov
mov
lret
hlt
ds
dec
stc
mov
pop
push
mov
and
mov
inc
xor
sar
pop
lcall
pop
and
inc
into
or
pop
mov
pop
lahf
adc
pop
adc
mov
shrb
mov
mov
cmp
sub
lahf
dec
xchg
fdiv
push
idivb
mov
std
scas
adc
adc
fcoml
cmp
cmp
aad
pop
fdivl
lea
sub
mov
sbb
in
jmp
and
les
inc
mov
add
xchg
add
insb
movsl
daa
mov
or
jl
or
xchg
ja
mov
push
lods
xchg
push
rorb
outsl
push
int3
sbb
inc
and
cmp
out
fsubrs
subb
mov
mov
mov
scas
or
dec
sbb
pop
sbb
push
adc
jg
mov
add
fldenv
es
xchg
lods
pop
pop
cmp
sbbl
and
std
pop
mov
or
jo
cmp
adc
movb
dec
jnp
mov
clc
fidivs
out
mov
xchg
daa
add
pop
pop
xchg
mov
pop
test
jb,pn
rorl
cltd
pushf
xor
inc
lea
xchg
or
cmp
push
lret
aam
mov
fwait
xchg
cwtl
adcl
mov
jmp
xchg
nop
scas
dec
xchg
test
xor
sub
notb
xchg
mov
inc
loop
adc
lret
adc
sub
or
lock
pushf
ficomps
jle
jle
add
dec
cmp
and
arpl
pop
lahf
cmpl
xchg
jb
pop
movsb
jmp
inc
pop
fnstcw
fmull
pop
cmc
imul
push
push
dec
dec
pop
iret
out
ret
or
int3
pop
adc
mov
lock
mov
or
rcrb
std
mov
cmp
pop
or
pop
rcrb
jle
les
jbe
popa
mov
aaa
xchg
call
cmpsl
mov
push
xorb
notb
and
dec
sub
ljmp
xchg
push
aaa
xchg
cli
sub
pop
scas
xor
pop
fs
fdivl
sub
mov
adc
push
pop
lret
xchg
insb
rorl
jp
jae
roll
aaa
insl
rcrb
lahf
iret
aam
test
xor
push
jns
add
mov
push
push
pop
mov
pop
nop
push
push
outsb
test
ljmp
cmpsb
shl
out
xor
sub
gs
out
jge
lods
call
loope
int3
pop
mov
out
jmp
and
mov
cmp
notb
sarl
std
xor
sbb
je
fucomp
test
insl
sbb
mov
xor
outsl
in
imulb
sub
mov
jmp
pop
dec
jno
mov
arpl
test
and
rcll
or
mov
xchg
ret
in
pop
loop
add
lret
push
xor
iret
bound
jle
jb
mov
les
dec
loopne
imul
cmp
jmp
rclb
out
sub
nop
je
in
dec
dec
imul
cmpsl
aad
sbb
js
mov
aas
dec
xor
jge
aaa
add
jb
xchg
xchg
test
dec
mov
pushf
clc
cmpsl
add
icebp
mov
add
fisttpl
adc
jg
mov
inc
cli
add
mov
adc
fcmove
out
cmp
push
test
mov
jle
dec
in
dec
ss
pop
push
xor
jp
push
rcll
fisttpl
stc
popa
test
add
sti
inc
or
pop
push
movsl
gs
divb
call
mov
aam
fsubrl
enter
pop
xchg
repnz
cmp
popa
addr16
aas
or
out
rcl
mov
mulb
aam
lcall
mov
push
ficompl
andl
ja
xlat
fwait
testl
pop
mov
cmpsl
jmp
or
mov
cmc
mov
sub
mov
dec
xchg
sbb
dec
or
sbb
sub
cmpsb
or
in
negb
gs
sub
sbb
pminub
jmp
sahf
scas
mov
dec
xchg
sub
pop
push
xchg
mov
out
xor
and
mov
push
iret
out
mov
cs
xlat
sub
inc
frstor
sub
xor
fwait
test
lods
rcrb
out
sub
pop
add
xchg
cmp
fldl
dec
jnp
and
out
insl
mov
movsb
xchg
push
or
add
push
push
push
sbb
mov
lcall
repz
inc
sub
lcall
in
sub
rcrb
jno
int
orl
lock
loopne
jo
das
ljmp
ret
and
jbe
inc
pop
adc
xchg
fisubrl
mov
sub
ret
cmpsl
gs
pop
movsl
pop
js
xchg
push
xchg
mov
push
loop
decb
dec
aaa
mov
jp
mov
je
rcl
jg
add
test
xchg
jle
cmp
add
push
sahf
lret
aas
andl
adc
fwait
sub
arpl
xlat
icebp
frstor
and
jne
loop
sbbl
stos
push
js
dec
test
add
les
push
xchg
repnz
fwait
test
sbb
push
dec
out
stos
push
mov
xor
mov
add
mov
adc
pop
mov
test
cmpsb
inc
mov
inc
in
clc
push
mov
mov
mov
fildl
or
inc
jo
or
popf
pusha
stos
lods
sbb
sahf
sbb
cmp
fstpt
mov
fwait
pop
inc
clc
xchg
push
in
xchg
cli
add
jecxz
mov
dec
out
xor
xorl
test
xor
enter
or
pop
test
outsl
mov
ss
add
lods
dec
push
mov
jle
lret
mov
subl
hlt
rcl
mov
xor
cmpsb
andl
mov
mov
mov
and
or
pop
mov
js
jnp
sbbl
stc
call
scas
mov
pop
and
fs
xor
stos
jnp
sub
test
es
mov
mov
fldl
les
in
add
push
lcall
and
in
jno
adc
nop
inc
jb
cmp
lcall
push
xor
dec
popl
xchg
and
into
push
mov
in
mov
out
sbb
mov
fisubl
es
xchg
sti
clc
scas
and
fsubr
and
into
jle
mov
mov
xchg
mov
pop
inc
scas
xchg
xor
mov
jnp
xor
sbbb
addr16
cmp
dec
push
out
scas
and
adc
push
dec
or
or
cmc
mov
pop
aam
push
xor
jno
inc
mov
outsl
rclb
cmp
pop
bound
dec
fwait
pop
pop
mov
popl
xor
fistl
pop
nop
sbb
xchg
jmp
mov
xor
filds
xchg
jbe
adc
jne
add
mov
movsb
dec
xor
test
mov
or
inc
jnp
jb
fs
roll
test
cmp
push
jge
lods
enter
jp
repz
and
mov
mov
adc
sub
xor
ds
lahf
mov
pop
aad
aam
add
stc
adc
lods
leave
adc
scas
push
nop
xor
cltd
xor
add
dec
fcomp
mov
push
mov
movsl
decl
dec
rorb
mov
mov
imul
xchg
pop
jl
inc
pushf
adc
cmpsb
into
cmp
xchg
loop
addr16
je
leave
adcb
outsl
cmp
test
shl
xchg
stos
scas
sti
inc
xchg
push
adc
or
inc
mov
inc
lret
mov
fidivrs
xchg
aam
leave
dec
sti
inc
sbb
popa
cli
in
cmpsb
icebp
int3
das
scas
in
ljmp
out
sbb
mov
addl
sub
test
xlat
adc
jge
fidivs
movsb
jg
sub
mov
jle
ljmp
adc
mov
xor
fwait
pop
cmpsl
not
test
ficoml
fs
data16
xchg
or
mov
ljmp
in
fiadds
pop
sti
sbb
outsb
aas
cltd
xchg
lahf
in
jb
movsl
fwait
dec
scas
call
dec
popa
in
les
push
aas
stc
lcall
rcll
dec
imul
testl
pop
js
ret
inc
mov
test
inc
popf
lock
xor
ret
mov
stos
jmp
mov
xchg
sarl
repz
mov
int
cmpsb
subb
hlt
or
out
add
push
jno
out
inc
into
out
jns
cmp
dec
rclb
add
pop
pop
loop
push
cmp
jno
popa
and
jae
sub
mov
xchg
movsb
or
push
test
pop
scas
dec
cmpsl
ds
cmpsl
inc
pop
ss
or
mov
sbb
push
fmull
mov
stc
adc
xor
mov
mov
repnz
stos
jmp
addr16
stc
xor
dec
inc
in
adc
sbbl
cmp
roll
adc
add
inc
and
and
rclb
jo
cmpl
cmpsb
jp
movsl
push
pop
inc
test
pop
leave
inc
fbld
mov
cld
pop
leave
stos
sub
push
mov
push
cmp
imul
sar
dec
cltd
add
outsl
mov
push
xchg
lea
jge
fcompl
test
push
mov
in
mov
xchg
fists
movsl
in
xor
pop
mov
jl
js
push
adc
and
jmp
push
add
aas
inc
mov
xor
rcr
ret
sub
jns
pop
cmp
fistl
ret
mov
and
xor
hlt
mov
popa
test
in
push
sub
and
je
repz
xor
loopne
pop
test
cmpsl
adc
adc
or
mov
mov
dec
mov
fisttps
nop
adc
or
out
and
mov
sbb
loope
push
insl
mov
inc
orb
sbb
pop
addr16
add
mov
fs
in
call
xor
out
iret
xchg
rcr
cmp
ljmp
xlat
jno
pusha
es
adc
dec
xor
push
pusha
jne
mov
mov
and
out
inc
cmp
dec
aam
push
mov
stos
aam
or
mov
gs
push
int3
inc
outsb
pushf
sbb
add
adc
fsubrs
out
cmp
fiaddl
mov
pop
out
dec
pop
cmpsl
cmp
and
ja
stc
push
rclb
int
jecxz
aam
mov
xor
repnz
jns
xchg
jbe
cli
in
jg
lods
and
gs
cltd
daa
adc
repz
mov
outsb
push
adc
or
mov
sahf
or
les
mov
adc
out
je
sbb
mov
pushf
addr16
roll
rorl
sarl
mov
push
enter
pusha
nop
or
push
loop
sbb
loop
mov
arpl
sub
xchg
cmp
pop
pop
cmp
pop
sbb
shlb
scas
mov
add
psubsb
xor
fistps
int3
shlb
inc
or
pop
mov
or
jne
xchg
gs
and
shll
fisubl
jmp
mov
imul
mov
stos
icebp
adc
mov
xor
jo
xchg
inc
adcb
sub
pop
pushf
aad
adc
adc
push
insl
add
seto
in
push
cmp
push
sti
sub
dec
pop
ficompl
incl
cmp
push
push
stos
jp
adc
leave
mov
xchg
push
pop
xor
orl
xor
insb
sarb
jnp
mov
and
xor
sub
aaa
cli
hlt
clc
lahf
lods
jp
cmp
jmp
lods
push
push
xlat
dec
inc
add
mov
pop
jecxz
decb
loope
fisubl
add
add
repz
mov
mov
enter
xchg
or
rorl
mov
mov
push
mov
inc
in
fidivrs
test
ja
sbb
and
shr
jnp
leave
push
test
clc
clc
mov
sub
sbb
cmp
popa
fiadds
jl
adc
mov
push
sbb
jl
out
adc
sbb
dec
adc
incb
test
mov
sbb
ret
pop
fbstp
dec
push
dec
mov
mov
leave
loop
aas
scas
mov
ret
test
mov
rcll
movsl
or
cmpsb
sarl
fwait
ds
sbb
data16
jp
adc
and
shrl
aas
cli
rcrb
aam
fidivs
movsl
cmp
enter
stos
cmpsl
xchg
dec
loop
popl
jns
iret
hlt
iret
or
in
call
mov
push
adc
xchg
pop
lods
lods
mov
outsb
and
mov
add
sti
mov
subb
popa
in
mov
cmp
sub
fldcw
and
test
pusha
mov
ljmp
lods
js
cld
daa
jno
and
test
aad
jp
fld
negl
inc
icebp
dec
or
jl
mov
fcomps
mov
sbb
fdivr
ret
push
mov
jecxz
pushw
ds
repz
leave
sbb
aaa
ror
pop
lods
or
sahf
popa
mov
adc
repz
enter
add
adc
jnp
gs
pushf
iret
xchg
pop
jbe
rorl
inc
jbe
rcrl
dec
adc
push
pusha
jecxz
test
mov
xlat
insb
jecxz
clc
adc
in
mov
bound
in
lods
jecxz
add
sbb
rcrl
mov
out
dec
ss
clc
jp
fdivrs
imul
xchg
shrl
fsub
popa
sub
aam
jecxz
out
stos
mov
jecxz
dec
pop
cmp
mov
ljmp
test
icebp
sub
js
cmpl
dec
and
sti
test
insl
scas
dec
popa
shll
push
cwtl
mov
imul
imul
push
mov
in
and
mov
xchg
sub
xlat
or
insl
ret
dec
push
xor
pop
cltd
adc
and
loope
push
xchg
xchg
scas
or
ja
sub
or
stos
pop
lds
scas
push
xchg
jns
mov
cmp
sbb
push
aad
loope
inc
or
stc
notl
pop
inc
ret
xchg
adc
adc
push
fmuls
gs
std
dec
adc
push
cmp
in
push
nop
add
hlt
arpl
daa
mov
xor
pop
and
icebp
jbe
sub
decl
push
xchg
push
mov
pop
sbb
in
pop
stos
adc
popf
xchg
imul
push
addb
add
out
in
shl
cwtl
add
jmp
mov
cmp
fcmovb
jg
test
jmp
in
adc
scas
pop
inc
cld
add
sub
mov
push
and
cwtl
jp
insl
jb
jnp
scas
loope
pusha
daa
hlt
cmp
adc
mov
jae
jb
sbb
cmp
cmpsb
cs
imul
outsb
test
jns
mov
inc
dec
sti
dec
pop
sub
mov
test
jbe
lcall
cltd
mov
aas
data16
or
sbb
andl
add
pop
dec
jnp
add
lock
adc
sbb
int3
and
call
mov
hlt
nop
cwtl
mov
pop
xor
inc
das
lcall
jmp
das
imul
mov
xchg
rcrl
lahf
fdivrl
mov
xor
cmc
pop
std
fmuls
cld
jne
xorb
outsb
cmp
sbb
mov
out
xlat
jg
sbb
test
lcall
dec
adc
xor
jbe
or
out
lcall
inc
adc
std
loope
mov
inc
fs
fiadds
or
xchg
imul
imul
fs
test
or
mov
lea
in
bound
arpl
sbb
arpl
sbb
xchg
adcl
notl
add
rcl
into
jb
lret
inc
and
adc
icebp
mov
jg
idivb
jb
dec
loopne
lock
fcomi
mov
mov
ss
icebp
sub
jp
in
cmp
mull
leave
add
lds
das
sahf
fimuls
sbb
pop
jecxz
jns
xor
sbb
out
xor
movsb
inc
inc
lea
lods
jge
inc
int
pop
add
hlt
outsl
mov
das
sbb
xor
push
into
mov
mov
icebp
cmpsl
adc
sti
sahf
mov
movsl
mov
cwtl
xor
or
in
js
mov
loop
sti
fsts
daa
out
xchg
imul
leave
les
jl
cmp
idivb
out
sub
pop
gs
inc
scas
or
movsb
sbb
cmp
push
jl
mov
inc
adc
xchg
dec
add
push
cmc
insb
add
mov
clc
leave
dec
lret
sub
int3
mov
sub
popf
cmpsb
cld
shlb
mov
les
jb
and
push
xchg
roll
mov
and
mov
test
and
pop
std
outsl
jle
mov
idivb
clc
imul
sarb
mov
push
and
inc
imul
jp
and
ss
pushf
test
xchg
inc
ljmp
pop
xchg
mov
mov
sti
lea
out
addl
fstl
lret
mov
xor
and
cmp
mov
pop
mov
jmp
xchg
stc
jecxz
inc
dec
jno
jnp
fs
out
xchg
mov
aam
and
clc
icebp
inc
mov
or
jb
mov
ret
out
push
pushf
inc
jmp
pop
dec
fidivs
sti
jbe
sub
aas
jns
mov
pop
sub
xor
into
popa
in
test
mov
insl
pop
jns
cmovle
add
arpl
les
jmp
add
arpl
push
ret
pop
jno
xor
je
popl
sbb
pop
jecxz
pop
mov
mov
repnz
mov
mov
dec
das
cs
stos
xchg
sti
pop
add
movsb
mov
mov
daa
mov
sahf
xlat
mov
in
inc
adc
push
or
mov
in
xor
stc
lods
or
sub
lock
jne
xchg
jp
movsl
shlb
dec
sub
repz
mov
mov
shrl
xchg
js
das
pushf
sub
js
lret
adc
sbb
fimull
or
insl
sub
loopne
mov
dec
imul
jg
hlt
stos
add
push
pop
sub
int3
in
call
lods
jae
mov
cwtl
fidivrl
inc
cltd
cli
xchg
dec
cmpsl
ljmp
add
add
mov
jns
jmp
arpl
outsb
addr16
lahf
cmp
aaa
bound
lods
test
test
cmp
fs
sarl
xor
mov
mov
jns
sub
insl
add
lret
in
aam
inc
xchg
xchg
xor
shrb
push
mov
mov
movsl
mov
das
pop
cli
jb
repnz
shrb
test
cmp
mov
add
outsl
insl
stc
inc
inc
dec
hlt
adc
push
outsb
push
inc
adc
ss
lods
lods
hlt
insb
std
pop
cltd
add
dec
dec
jecxz
jge
inc
jno
add
cmpsl
xchg
or
in
lds
fcoms
cmpsb
sub
push
jl
and
mov
jbe
cmp
xchg
dec
ljmp
ss
jae
fidivl
aas
jmp
push
adc
int
stc
inc
mov
push
mov
bound
dec
jp
daa
mov
jo
dec
aad
mov
in
int
and
push
inc
cmp
orb
sbb
test
aas
jb
in
jmp
std
sbb
movsl
test
pxor
jl
arpl
fdivl
jmp
ret
mov
cwtl
add
adc
push
sbb
ret
scas
and
and
dec
xor
nop
sahf
xlat
add
out
mov
cs
dec
stc
mov
jl
jo
sti
pusha
push
jl
xor
stos
test
pop
push
sbb
out
mov
roll
mov
inc
lds
cmp
testl
adc
push
mov
aad
dec
dec
pop
cs
mov
jmp
add
scas
xchg
xchg
out
and
push
rolb
bound
fisubl
xchg
dec
mov
clc
ret
pushf
sbb
adc
divl
and
lcall
leave
roll
fwait
and
mov
add
xor
xchg
push
cmp
dec
jecxz
lock
sub
pop
add
push
shl
and
js
ds
sub
sti
add
mov
dec
int3
flds
jae
insb
popf
aaa
ja
push
lret
jecxz
pop
les
cltd
rclb
push
and
add
add
rorl
dec
cmp
dec
pop
jmp
aaa
inc
push
dec
pxor
mov
or
aad
addr16
sbb
pusha
cmp
mov
sarl
push
ficomps
fiaddl
fistps
push
adc
mov
in
fwait
jae
outsb
test
or
jp
or
jno
enter
das
loope
dec
pop
adc
popa
js
inc
mov
jo
cltd
mov
jo
ss
jge
dec
or
divb
lcall
out
adc
jae
and
sbb
outsb
cltd
stos
test
adc
insl
stc
pop
dec
pop
divl
adc
rcl
cmp
jae
and
mov
sahf
mov
jecxz
fsub
pop
jecxz
dec
lods
imul
mov
addr16
gs
in
mov
in
add
xchg
mov
aas
xchg
lods
add
pop
stc
add
mov
inc
pop
mov
dec
call
mov
pop
adc
push
sbb
xchg
mov
cmp
sbb
sub
mov
fimull
and
std
lret
imul
jmp
dec
ffreep
nop
out
dec
dec
jl
ds
xor
cltd
outsb
xchg
xlat
jno
and
inc
dec
push
and
out
mov
popf
jae
push
pop
fisubrs
dec
mov
aaa
sbb
inc
add
scas
inc
jo
pusha
xchg
pop
gs
ror
daa
clc
imul
adc
loope
aad
cmp
sbb
mov
pop
add
cmp
jle
enter
cwtl
xchg
fdivr
xchg
mov
insl
add
pop
cmp
sbb
sub
repz
or
push
lock
push
mov
mov
ds
sti
mov
fcoml
pop
jg
aad
clc
mov
push
push
xchg
xchg
add
mov
adc
mov
imul
xchg
hlt
pop
daa
inc
push
push
or
mov
ja
push
and
inc
ljmp
into
inc
push
pop
sahf
jb
pop
xchg
ljmp
insl
in
repnz
fldcw
test
sbb
sbb
movsb
scas
movsl
xor
ficoml
enter
xchg
out
xchg
aaa
dec
mov
test
loope
push
cmpsb
loope
sub
orl
pop
mov
or
inc
ret
mov
pop
cltd
repnz
adc
mov
mov
aam
imul
inc
fstps
push
push
arpl
push
jl
push
mov
push
cli
xchg
out
fistpl
clc
lods
pop
inc
mov
nop
lods
jge
mov
mov
mov
xchg
inc
imul
push
jo
sbb
cmpsb
jno
and
xchg
mov
cmp
mov
cs
outsl
jp
jne
mov
sbb
arpl
mov
sbb
mov
push
adc
xchg
add
out
scas
xor
cmc
stos
notl
push
inc
into
out
lea
dec
int
cmp
movl
subb
insl
loopne
push
fcoml
pushf
es
mov
shl
sub
dec
sbb
pushf
jbe
sbb
pusha
popf
call
leave
js
aad
or
mov
mov
in
fs
arpl
call
sahf
jno
in
stc
roll
add
mov
sub
movb
pusha
push
adcb
aad
push
int3
jno
add
jle
mov
xchg
cmp
cli
addr16
jb
push
int3
adc
in
test
xorb
stos
xchg
xchg
popf
loope
loopne
mov
inc
mov
dec
imul
das
mov
subl
popa
das
sbb
or
or
pop
xchg
jecxz
push
adc
cmp
push
mov
pusha
dec
lds
test
pop
stc
mov
cwtl
call
cmc
pop
jp
cmp
cmp
fists
lahf
rcrb
xor
mov
xor
cwtl
mov
filds
out
lea
jle
insl
xchg
mov
mov
cmpsl
and
in
inc
fs
shrl
inc
test
ss
call
fs
enter
pushf
add
lea
jge
jmp
push
jmp
xchg
movsl
fcom
mov
jmp
arpl
scas
loope
adc
fwait
aad
sbb
shlb
jne
sbb
jmp
pop
mov
adc
fstps
push
scas
adcb
aad
aad
sti
or
lods
addb
rorl
loop
push
mov
lds
cmp
pusha
jb
into
decb
dec
std
lret
icebp
cmp
lods
les
stos
loop
or
fmull
fst
repnz
jb
cli
and
or
sbb
jmp
outsb
loope
repnz
xchg
cmp
add
pop
cmp
push
leave
or
dec
push
sbb
jne
jns
mov
nop
roll
stos
mov
push
dec
imul
roll
movsl
mov
jecxz
lret
pop
dec
mov
movsb
insb
int3
push
jnp
sub
cltd
or
add
les
mov
mov
lret
sbb
cmp
inc
mov
cltd
inc
jno
ss
pop
arpl
mov
stos
dec
add
xor
sub
mov
pop
push
cmpb
rcll
xchg
lods
or
outsb
pop
cmpsb
jl
rclb
mov
sbb
ljmp
ljmp
dec
push
xchg
jb
xchg
jo
lret
xchg
in
hlt
jno
mov
pop
jle
mov
lods
iret
pop
push
fxch
fs
stos
push
je
andl
test
sbb
les
enter
fisubs
fsubl
fisubl
sub
movsb
repnz
and
jno
jno
imul
mov
ss
inc
not
mov
jl
fcoml
ficoml
rolb
hlt
adcb
test
pop
gs
jbe
sub
loopne
cmp
out
push
int3
in
in
test
int3
or
fdivrs
cmp
push
out
mov
pop
jl
add
push
bound
cmp
adc
jne
cli
call
addr16
imul
inc
inc
stos
repz
sub
out
in
mov
into
outsb
push
daa
inc
jecxz
pop
add
das
out
adc
imul
cmpsb
jmp
jecxz
movsb
mov
push
add
adc
rcl
dec
imul
sub
sub
cmp
sub
and
jl
aad
in
xchg
aad
mov
cmp
xor
inc
xchg
gs
adc
scas
imul
ret
ss
mov
jg
xchg
mov
std
xchg
inc
aad
cmp
rorb
iret
repnz
pmulhuw
cmc
sbbl
push
xor
push
addr16
shll
mov
push
sub
mov
sahf
icebp
imul
popf
xchg
pop
lahf
xorb
cmpl
addl
mov
dec
jb
leave
add
or
lahf
neg
addw
mov
pop
xchg
daa
jmp
xchg
adc
lods
or
lods
cmp
xchg
lods
push
nop
lret
dec
jecxz
inc
out
sbb
sarb
push
popf
and
lahf
adc
sbb
sbb
and
and
nop
adc
sub
mov
push
rorl
jne
je
test
fnstenv
xchg
and
psrlw
jnp
stos
repz
das
aad
push
push
xchg
dec
ja
or
in
sbb
add
rorl
jp
outsl
popa
jmp
aad
push
push
lahf
mov
xchg
outsl
insl
sbb
add
dec
call
mov
jmp
dec
cli
decb
scas
mov
push
pop
pop
stos
daa
ljmp
push
inc
out
fisttpll
repz
repnz
addb
lock
push
insl
rcr
testl
das
test
inc
adc
nop
push
and
dec
fsubl
add
loope
test
in
adc
xchg
and
cmp
iret
jl
xor
sub
xchg
vxorps
mov
popa
inc
cwtl
mov
and
lds
add
fnstenv
dec
into
aaa
sub
mov
mov
sahf
cmp
psraw
mov
pop
arpl
xchg
das
sbb
pop
stos
pop
ljmp
call
push
ror
mov
sub
in
push
testl
jbe
imul
lds
pop
repz
cs
xor
std
xchg
xchg
test
push
or
sub
cwtl
stc
mov
cmpsb
and
repnz
bound
jno
cmp
dec
into
mov
push
jnp
mov
add
push
push
and
mov
push
push
rorl
mov
sbb
mov
repz
lea
outsl
sarl
jne
dec
xchg
out
or
mov
xor
jmp
out
inc
jns
inc
mov
mov
inc
rorl
loopne
ljmp
das
mov
fidivrs
inc
in
aas
sbb
mov
sbb
imul
pop
lret
insb
gs
mov
rcll
aaa
cld
jno
xchg
lret
inc
push
and
pop
cmp
rep
dec
addl
push
xchg
sub
cmp
sub
imul
fmulp
dec
push
push
and
xchg
inc
mov
in
cld
ret
fcmovne
xor
je
and
aas
int
dec
cld
and
inc
lock
adc
mov
andl
mov
jae
adc
push
sub
and
xorl
pop
in
xchg
xlat
pop
mov
iret
sti
push
ret
fsubrl
movsl
xchg
and
dec
adc
inc
inc
inc
fwait
mov
int
xchg
push
pop
inc
sbb
lods
adc
es
and
jnp
sub
fwait
mov
nop
add
lret
xchg
repnz
pop
jp
and
xchg
adc
jge
xchg
fistl
sub
sbb
sahf
and
inc
lods
xchg
gs
mov
cli
sub
and
fldt
mov
sub
test
push
mov
fldt
pop
pop
mov
sahf
jmp
mov
lret
xchg
mov
sub
jl
pop
lret
adc
rcll
sahf
cmc
stc
stc
xlat
cli
mov
aad
sub
in
mov
into
sbbb
stc
add
cmp
mov
mov
jl
xchg
cltd
pop
add
cmpsl
ja
dec
jnp
fisubl
scas
cmp
adc
mov
out
jle
addr16
mov
and
loope
pop
cld
aas
dec
into
scas
fiadds
test
test
cmp
cmp
rolb
xor
cltd
dec
movb
movsl
lahf
sub
out
or
es
adc
mov
roll
pop
imul
pop
mov
in
adc
dec
sub
ret
repnz
inc
imul
cmp
cmp
jecxz
or
mov
out
push
nop
sbb
nop
cmp
and
sbb
mov
mov
push
and
idiv
cld
sub
insl
sbb
push
xor
and
mov
xchg
pop
push
addr16
pop
or
ljmp
mov
in
imul
and
pop
sub
inc
push
sbb
xchg
sbb
or
adc
jp
and
mov
jge
sub
jns
mov
pop
mov
and
mov
rorl
mov
xchg
test
jl
sarl
out
lods
add
clc
pop
jb
lcall
les
mov
sub
fidivl
xchg
mov
xor
push
sbb
fdivs
mov
pop
rorl
imul
jb
inc
mov
pop
cmp
pop
adc
bound
sub
xor
and
loope
incb
ds
lcall
les
mov
xor
push
leave
cli
aaa
jp
and
out
in
ret
lcall
fwait
mov
stos
add
mov
pusha
jmp
cmpsl
icebp
or
pop
pop
bnd
dec
leave
lock
sbbl
jae
adc
sbb
notl
inc
cmpsb
push
aas
into
popa
cmp
sti
mov
adcb
lret
mov
imul
das
mov
nop
subb
sbb
sbbl
pop
adc
lds
and
dec
fwait
lret
fs
push
rcrb
mov
loope
mov
out
shlb
adc
or
mov
lret
inc
xor
inc
stos
test
push
cmpsl
jge
xor
adc
xchg
push
push
call
in
hlt
outsl
cmpsb
in
dec
pop
inc
insb
cmpl
mov
and
out
shll
shrb
push
cmp
jle
cli
lea
popf
nop
roll
sbb
sahf
call
fscale
xor
test
call
jb
call
push
sub
dec
mov
add
aas
out
pusha
xchg
sub
xor
andl
sub
xchg
mov
mov
std
stos
cs
shrb
std
pushf
lods
mov
dec
dec
imul
hlt
aad
mov
test
adc
ss
mov
loope
adc
pop
and
push
push
xchg
test
lea
insb
add
inc
push
cmp
mov
xor
adc
ja
lds
mov
or
das
jecxz
sub
ja
lret
sti
inc
movsl
and
ljmp
enter
and
pusha
imul
gs
sbb
jl
xchg
inc
sub
xchg
add
mov
stos
sbb
mov
jnp
xchg
call
std
int
lret
jp
sub
cmp
mov
mov
adc
xchg
mov
adc
add
loope
jbe
mov
jo
mov
ret
loopne
js
push
add
shlb
and
mov
inc
adc
sbb
mov
dec
pop
mov
mov
sbb
loopne
js
jno
xchg
insb
adcl
fs
push
int3
daa
je
xor
push
push
jp
pop
ljmp
cwtl
pop
jmp
pop
decl
popf
test
sti
int
push
dec
mov
leave
jno
mov
add
stos
pop
leave
push
jge
andl
pop
xchg
push
mov
and
adc
leave
test
test
insl
and
rcll
lret
out
decl
test
or
push
jb
adc
push
xlat
in
pop
push
sbb
mov
push
test
xor
movsb
inc
arpl
jno
pop
sub
cmpsl
and
fcomip
inc
sub
subl
scas
add
in
sub
seto
addr16
xchg
stos
leave
lods
rolb
nop
ja
addr16
dec
pop
in
jle
out
push
into
sti
jnp
shlb
cmp
js
cmp
inc
mov
xchg
sub
rol
inc
mov
pusha
out
fmulp
lret
xor
adc
mov
xchg
pop
les
loopne
mov
inc
mov
test
pop
mov
loope
xor
jno
dec
test
sti
add
icebp
add
push
lret
loopne,pn
in
mov
daa
je
inc
outsl
jne
jnp
cmpsl
add
dec
js
mov
sbb
mov
pop
into
adcl
sahf
rcrl
sbb
or
inc
sbbl
push
cwtl
push
sbb
sbb
mov
inc
mov
adc
test
mov
test
inc
mov
leave
push
pop
sub
fwait
mov
movsb
fisttpl
cmp
mov
lds
loopne
imul
push
jae
stos
adc
vphaddudq
pop
mov
test
popl
pop
and
mov
inc
pop
inc
adc
lahf
les
mov
adc
adc
cmp
in
addl
mov
movsb
cmp
icebp
or
adc
add
popf
xlat
fisttps
sti
mov
cmp
cltd
f2xm1
jg
stos
dec
jbe
push
mov
xchg
and
jno
xchg
xchg
ret
sbb
arpl
add
sarl
xchg
shl
sti
jecxz
rorw
bnd
push
push
fisttpll
add
add
jp
dec
je
add
pop
je
es
fdivrl
cs
rorl
xorl
pop
jmp
push
mov
aas
loopne
adc
bound
data16
dec
jb
sbb
ret
mov
std
ret
adc
cmp
mov
cltd
add
mov
out
jnp
ss
jb
dec
adc
jnp
sub
push
aad
loop
bound
ljmp
jns
test
mov
mov
fmulp
push
mov
adc
int
fisttps
test
xchg
negb
push
lcall
lcall
adc
hlt
int
roll
jbe
and
mov
sub
mov
lahf
xchg
arpl
adc
pushf
add
aaa
mov
jns
inc
cli
adc
les
movsl
filds
aad
stc
into
sahf
xchg
sub
pop
fs
fnsave
aaa
outsb
inc
ret
jbe
xor
sbb
sub
cmp
xchg
jns
out
sbb
int3
int3
lret
icebp
dec
add
adc
hlt
movsl
xor
mov
inc
lahf
out
jmp
testl
mov
inc
into
push
cmp
div
mov
dec
adc
aas
push
daa
imul
out
mov
xor
adc
mov
or
add
aam
fnstcw
cmp
adc
out
arpl
outsb
sbb
jno
mov
mov
cwtl
mov
dec
stc
scas
xchg
scas
cmpsl
adc
dec
sub
lods
icebp
sub
in
mov
lock
int3
mov
call
xchg
jl
push
cltd
adc
in
jbe
xchg
out
bound
fs
ds
mov
inc
mov
shl
cmp
mov
stos
mov
in
mov
js
xchg
scas
xchg
dec
divl
test
lock
ret
pop
mov
scas
addr16
mov
mov
and
adc
orb
je
mov
out
mov
das
ds
adc
mov
test
inc
jecxz
jecxz
push
dec
mov
loopne
out
xor
in
mov
xor
les
ret
adc
cmp
add
add
rol
outsw
xor
jb
pop
repz
xor
sahf
sbb
inc
or
jae
mov
push
nop
cltd
and
flds
xor
repnz
out
dec
out
pushf
gs
lret
xorl
adc
push
add
inc
inc
mov
scas
push
dec
adc
mov
addr16
roll
das
fistl
mov
test
or
loopne
aas
push
test
sahf
adc
adc
rcr
xchg
sub
cmpsb
imul
mov
mov
sbb
cmpsl
loopne
pop
fnsave
adc
fs
mov
repnz
cmc
cmp
adc
jb
xchg
xchg
imul
aam
cwtl
push
push
or
fisttps
jb
pusha
jns
dec
dec
and
cmp
push
loop
sbb
fisubs
outsb
dec
jg
pop
cmpsl
rcl
jnp
fldl
test
jb
pop
jnp
xchg
sbb
addl
fdivr
dec
sub
lea
cs
push
mov
push
mov
or
or
mov
jp
mov
enter
cmp
repnz
incb
cmp
cs
mov
mov
pop
push
mov
sub
negb
insl
fbstp
scas
mov
pop
push
pop
and
lock
inc
or
mov
xchg
mov
mov
test
and
or
mov
mov
imull
loope
mulb
bsf
iret
in
or
rcll
adc
xchg
jge
stc
js
mov
pop
loope
inc
out
pop
xor
pop
std
xor
mov
inc
scas
movsb
mov
or
push
sbb
jmp
and
adc
imul
dec
test
xchg
out
pop
adc
cmpsb
cmp
push
fwait
mov
loop
std
or
in
jns
mov
xchg
je
mov
inc
jp
pop
fsubl
pop
repz
push
in
lods
and
push
or
push
ljmp
and
mov
das
push
lds
pop
int
test
push
popf
mov
lcall
pusha
pushf
push
or
fsubl
aaa
sbb
ret
push
scas
push
cmpsb
xor
mov
mov
inc
bound
aas
pop
xchg
mov
lcall
ja
or
ja
push
xchg
or
dec
sbb
js
jo
test
dec
mov
pop
fidivl
std
mov
lods
push
je
cmpsb
cltd
or
in
loope
notb
test
push
dec
fadds
cld
cli
adc
cmpl
movsb
sub
cmp
cmp
pop
jae
jp
insb
push
xchg
and
mov
jne
adc
add
cmp
pop
jl
dec
stos
mov
cmp
add
cmp
mov
jns
aad
loopne
cmpl
xor
inc
in
cmp
pusha
in
mov
out
mov
fs
or
fcoml
out
cltd
es
adc
int
shll
mov
mov
mov
push
pop
je
cs
cmp
sbb
out
bound
repz
std
push
jne
bound
hlt
cwtl
clc
fcmovu
enter
sbb
jg
add
xchg
sub
sbb
addr16
inc
es
ljmp
call
jg
es
out
popa
xchg
data16
jmp
mov
cwtl
test
divl
sbb
xor
faddl
int
and
int3
nop
test
imul
test
pop
daa
add
jle
inc
insl
and
test
jmp
lret
rol
jne
test
sahf
hlt
mov
xor
inc
push
js
push
out
pop
repnz
lcall
jmp
lahf
ja
push
call
jbe
cwtl
cmp
mov
jge
fidivrl
int3
sti
rorb
cld
ret
push
and
in
xchg
jnp
jno
fidivs
lret
cmp
ret
repz
jae
jge
mov
mov
jo
push
and
imul
cwtl
out
jae
and
adcl
cld
clc
jbe
adc
repnz
mov
mov
sub
outsl
and
mov
sarw
mov
inc
lret
lods
inc
ljmp
pop
lods
sub
cmp
sbb
sub
outsb
mov
pop
call
adc
mov
xchg
xor
and
jp
gs
daa
xor
outsb
mov
pop
cmp
pop
pop
sahf
jle
xchg
shlb
adc
jl
mov
decb
rcrl
jle
cli
pusha
imul
loop
jno
notb
test
addr16
icebp
lods
jg
mov
push
xorl
add
push
stos
mov
das
mov
xchg
inc
cwtl
fcoml
xchg
add
xor
dec
push
shrb
testb
jmp
flds
jecxz
jle
lret
mov
push
stc
loop
ljmp
mov
adc
jge
and
popf
jne
jno
scas
pop
subl
rcrb
jno
cmp
or
push
mov
xor
and
jg
in
cmp
mov
inc
cmp
subl
adc
jns
int
ja
or
lds
cltd
ss
xor
xchg
fimuls
push
jns
dec
jl
aaa
cmp
rcpps
imul
cmp
jp
sub
pop
mov
cmp
rorb
cmp
sub
loop
adc
pop
popa
and
shrl
jle
hlt
xor
pop
mov
jmp
xor
int
mov
jge
mov
lods
jg
and
neg
test
int
loope
push
aam
mov
mov
test
jmp
or
cmpsl
jmp
and
aaa
dec
inc
dec
mov
jbe
out
and
pop
test
cmp
movsb
xor
mov
pop
std
ljmp
mov
arpl
stos
pop
mov
rcll
mov
filds
shl
jge
mov
or
adc
in
sti
add
rcr
icebp
mov
jge
jno
lds
dec
xchg
mov
push
xchg
push
insl
pop
sarl
jb
dec
jp
jno
cs
mov
cli
sbb
lock
push
clc
push
add
or
xchg
hlt
xor
in
popf
pop
mov
call
insl
sub
push
mov
fsubrl
icebp
icebp
xor
mov
mov
test
push
mov
mov
mov
jge
mov
xchg
push
jo
aaa
cmp
xchg
call
mov
cltd
leave
std
mov
jge
test
fidivrs
scas
xor
sti
cld
sbb
mov
mov
add
sbb
jge
popf
xchg
fs
pop
test
dec
ficoms
jo
insl
mov
xor
mov
pop
loopne
popf
ret
adc
push
jae
shl
dec
mov
jecxz
rcrl
mov
sahf
add
cmp
or
xchg
cli
fdivl
xchg
pop
pop
lods
out
ret
jnp
mov
push
push
mov
dec
inc
mov
rolb
fisttpl
nop
cmp
add
repz
pop
jge
dec
jecxz
push
jns
xor
push
mov
xchg
jo
mov
roll
jp
rolb
test
fsubrp
es
mov
add
jb
test
or
cld
cmpsl
push
arpl
loope
cmp
jo
mov
push
dec
ljmp
xlat
lock
fisttps
movsb
in
ja
add
gs
push
and
pop
insl
pop
jle
je
std
jae
jno
loop
push
cli
cli
in
mov
or
dec
out
or
jge
dec
loope
jnp
xchg
jbe
int
xchg
xchg
fsubr
and
ret
orl
iret
je
xchg
in
add
sbb
push
mov
mov
cmp
xchg
loope
insb
sub
and
es
cmpsl
notl
imul
imul
mov
push
push
subb
mov
sub
add
scas
inc
lods
fwait
mov
bound
jb
or
mov
inc
or
test
bound
lods
aas
pop
xchg
or
cmpb
dec
test
or
std
adc
out
dec
cs
fcmovu
sub
in
flds
dec
or
rep
push
inc
lret
xchg
xor
popa
mov
mov
jb
insl
out
outsb
jae
into
mov
or
arpl
sbb
in
es
xchg
or
adc
testl
mov
js
cwtl
mov
xchg
popf
bound
cmp
adc
movsl
pop
push
mov
push
sbb
lods
test
inc
hlt
dec
in
push
inc
bound
aad
mov
ret
xchg
fisubrs
mov
sub
push
inc
or
mov
fcomi
ret
jp
dec
sahf
arpl
adc
lods
enter
xchg
cmp
pop
add
lcall
mov
push
sbb
dec
mov
les
sbb
int3
mov
rcrb
and
sbb
dec
into
inc
push
fwait
outsl
sbb
out
inc
aaa
scas
cld
mov
cmpsb
mov
in
pop
cmp
scas
stos
or
rcrb
push
int3
push
fsub
push
lock
dec
jle
and
std
outsb
mull
and
int3
loop
repz
test
or
sbb
sub
lcall
mov
jmp
inc
inc
rorb
in
lret
insl
fs
test
xchg
imul
add
faddl
outsb
xchg
mov
xchg
cmpsl
jb
push
hlt
test
xchg
repnz
scas
es
and
das
stc
pop
out
sbb
inc
int
sub
cmp
shl
mov
push
aam
insl
repz
icebp
ljmp
lahf
sub
pushf
push
mov
les
fcoml
cld
fstpt
jmp
dec
stc
add
add
mov
into
aaa
adc
lock
test
mov
cwtl
jne
xchg
into
xchg
jle
cs
sub
add
roll
pop
inc
pop
cld
jg
xchg
in
addl
sbb
fsub
mov
pusha
add
and
and
cmp
inc
rclb
sub
push
and
ficompl
jbe
mov
sahf
fisubs
jp
xchg
xor
in
push
mov
nop
mov
sub
or
dec
das
pextrw
xchg
add
inc
and
mov
cmpsl
pop
dec
and
sbb
jo
mov
movsb
cmp
popf
xor
lret
jno
sub
jp
sbb
adc
imul
fnstcw
cmovle
aam
in
or
cmpsb
in
out
nop
mov
push
sbb
jecxz
jp
xlat
lds
adc
sbb
aam
add
cmpsb
add
push
aam
inc
outsb
outsl
add
jp
fst
das
es
mov
insb
lods
fwait
cmpsb
dec
arpl
xor
int3
push
es
lock
lods
shlb
loop
add
ljmp
push
aaa
jl
mov
inc
xor
push
mov
divb
int
sbb
dec
push
pop
push
shrl
aam
mov
shl
ret
shl
fimull
cs
add
lds
adc
ss
and
stc
mov
pop
lock
mull
data16
adc
pop
xchg
inc
and
pop
mov
sbb
int
fwait
test
jmp
call
iret
dec
jae
mov
jo
inc
push
push
clc
mov
sub
ja
dec
popa
xor
add
ljmp
xlat
mov
adc
mov
das
add
in
jge
push
push
xor
insl
arpl
jne
call
jmp
mov
or
push
mov
jmp
shr
test
out
and
fidivs
add
es
jne
inc
or
jns
sbb
push
push
fs
pusha
repz
loopne
inc
mov
cmc
mov
shll
push
cmpsb
mov
fwait
pop
add
cs
sub
repz
mov
sub
ficoms
xlat
gs
push
and
mov
lahf
jmp
out
aas
hlt
test
fwait
dec
xchg
mov
out
pushf
mov
jmp
fisubrl
mov
push
jns
and
pop
ss
cmpsl
sar
sbbl
push
js
jnp
and
out
push
ljmp
stos
je
xchg
testl
arpl
jns
pop
pusha
add
outsb
hlt
cs
lds
lods
mov
mov
test
push
dec
andl
push
int3
mov
pop
pop
dec
jg
adc
out
lcall
mov
or
sbb
mov
aam
imul
mov
dec
cmpl
enter
loope
cmp
mov
sbb
xor
outsb
xchg
xchg
stos
iret
mov
jmp
cmp
mov
mov
clc
stos
sub
and
xlat
cli
mov
push
frstor
push
fucomp
in
mul
dec
fimull
mov
mov
mov
daa
lea
ret
jle
sub
dec
mov
ja
inc
jge
xor
stos
dec
sti
ret
rcll
imul
mov
pusha
add
cmc
leave
dec
movsl
push
call
add
test
inc
or
sub
or
stos
in
je
sti
mov
xchg
dec
repnz
cmc
ss
add
nop
push
pop
ret
sub
mov
pop
pop
das
mov
push
movsl
and
mov
and
jle
repnz
arpl
inc
sti
ja,pt
stos
jae
mov
pusha
fmull
es
jnp
in
aam
bound
adc
aas
mov
xorl
and
lret
pop
sbb
adc
stc
popa
negl
and
and
sbb
sub
sub
adcb
shll
mov
mov
inc
pop
xchg
jb
xor
jl
adc
mov
test
push
andl
dec
sbb
sub
rcl
xchg
sub
stos
pop
out
sbb
inc
pop
out
call
lea
rorl
cltd
inc
mov
daa
mov
xchg
push
rcrb
icebp
faddl
jg
jg
fsubs
xchg
insl
mov
ficoml
fisubs
jecxz
roll
incb
daa
push
cmpsl
loopne
push
lret
sub
inc
and
sbb
xchg
test
sahf
gs
add
inc
ret
lea
mov
testl
adc
inc
push
aam
movsl
ficomps
leave
push
mov
inc
xchg
mov
and
mov
jb
outsl
push
push
bound
fcomps
xchg
mov
fidivrs
sti
pushf
mov
xor
sub
add
jbe
jns
mov
jmp
xchg
jo
adc
inc
sub
push
aaa
add
dec
hlt
lds
cmp
pusha
data16
loopne
sub
popf
mov
popa
aam
leave
sub
dec
loope
adc
enter
test
pop
imull
test
cmp
mov
loop
adc
test
cwtl
add
and
xor
jbe
sarb
jle
push
pop
or
shll
mov
in
ja
mov
fistps
leave
pop
mov
in
test
ljmp
shr
pop
sbb
push
jl
in
push
gs
pop
dec
jp
lds
push
int
test
aad
mov
inc
or
movl
mov
or
fcoms
adc
jnp
dec
mov
cmp
sahf
and
mov
push
push
pop
adc
insb
push
jmp
stos
imul
movsl
sub
push
pop
les
shlb
and
pop
jo
mov
lock
leave
pop
out
je
sbbl
jbe
cltd
mov
ficoml
addr16
cmp
push
clc
lcall
or
testl
fsubs
xor
imul
push
or
or
stos
lock
mov
aas
push
xlat
popa
jl
daa
and
repnz
ss
inc
notl
sbb
ret
jecxz
mov
and
cmp
test
cmp
jp
or
jle
mov
jae
mov
lods
daa
fs
dec
ss
icebp
faddl
gs
adc
addr16
push
jle
fcomps
adcb
adc
jp
and
mov
js
sbb
adc
stos
pop
aam
xor
jmp
jae
iret
rclb
data16
mov
mov
push
mov
mov
idivl
cmp
jl
imul
jecxz
lcall
mov
lds
loop
mov
ds
mov
jp
inc
lock
fcmovbe
or
xor
outsb
jnp
out
mov
pop
je
adc
mov
into
cmc
mov
mov
or
adc
jb
es
iret
es
pop
ds
out
pusha
adc
sub
into
push
adc
pop
xchg
sarb
pop
aad
dec
scas
je
lods
push
ss
mov
in
imul
lahf
sub
cmp
lret
pop
icebp
jno
mov
stc
js,pn
adc
sub
out
sbb
in
je
and
scas
cmp
fdiv
xchg
or
pop
pop
pop
es
mov
mov
mov
or
mov
pop
push
loope
jno
fnsave
ljmp
adc
js
aas
dec
cmp
addb
mov
mov
dec
sub
mov
inc
xor
and
xchg
push
mov
xor
inc
das
mov
sbb
pop
test
lods
pop
hlt
in
rcrl
dec
xor
xor
jecxz
mov
in
ficoms
inc
into
mov
pop
push
jmp
stc
mull
ficompl
std
mov
into
mov
sarb
jecxz
in
hlt
fnstcw
jbe
xchg
ret
scas
cmpsl
push
daa
hlt
shl
pop
repz
adc
loope
add
adc
inc
pop
movsb
and
negb
pop
outsb
jo
pop
and
test
in
lods
cwtl
or
cwtl
out
or
cli
mov
insb
out
mov
xor
out
jmp
jo
cmpsl
cmp
pushf
pop
jmp
mov
pop
loope
sub
mov
xor
iret
xor
cmpsl
xor
xchg
add
shrl
cmp
fcomip
nop
in
mov
ret
out
dec
mov
scas
mov
andl
movsb
movb
push
xor
jmp
outsb
mov
cmpsl
sub
faddl
rcrl
sbb
pop
adc
or
mov
add
adc
xor
jp
enter
cs
cmp
idiv
or
inc
mov
mov
imul
and
or
or
mov
mov
adcb
mov
add
jmp
push
in
sbb
shl
cld
mov
clc
dec
and
jmp
ficoms
fwait
and
mov
aam
js
outsb
int
xchg
push
sbb
test
xchg
inc
dec
push
pop
ja
repz
mov
adc
pop
movsl
addr16
scas
mov
xchg
call
dec
shll
ret
out
and
sub
push
inc
cmp
loope
xor
loope
sub
or
cmp
cmp
xor
mov
pop
mov
dec
and
test
pusha
jae
cmp
jl
iret
xor
inc
and
push
or
mov
je
enter
cwtl
ljmp
fstps
sub
inc
lret
mov
dec
mov
fwait
aam
dec
scas
imul
pop
gs
sub
add
pop
rcr
pop
test
lea
push
jno
mov
pop
inc
xchg
mov
cmp
and
and
enter
inc
push
cmp
mov
mov
mov
test
popf
es
in
adc
xor
int3
add
mov
lahf
mov
inc
jmp
mov
mov
sbb
inc
insb
and
ret
inc
fnstenv
jbe
cmp
xchg
aaa
pop
outsl
negb
push
adc
cli
xor
lret
sti
xor
pop
cmp
gs
inc
adc
pop
and
cs
mov
jae
scas
sbb
mov
inc
add
mov
pop
out
fwait
and
xor
or
or
jmp
pop
mov
sbb
jecxz
cmc
push
in
or
xlat
mov
jbe
mov
add
sub
or
repz
push
adc
and
movsb
lret
push
push
mov
adc
leave
cs
cli
mov
mov
push
sbb
xchg
mov
jmp
repz
jp
ret
out
fstpl
push
fisubl
inc
push
mov
fstps
stos
push
pop
imul
ss
or
push
fsubs
sub
addr16
push
cwtl
jmp
pop
out
fwait
andl
or
push
sbb
push
add
xchg
jg
mov
leave
inc
lock
pop
dec
sub
xchg
popa
in
mov
adc
stc
xor
or
enter
dec
sub
push
jle
rorb
cmp
mov
cltd
andl
int
mov
pop
stc
pop
add
addr16
adc
sahf
ret
sbb
push
into
sarl
dec
jno
push
mov
xor
enter
int3
mov
mov
pop
push
jg
loopne
push
hlt
cld
jge
daa
xor
notb
in
das
fs
mov
dec
add
nop
jno
repz
dec
add
adc
xchg
test
mov
insl
fwait
dec
dec
nop
fistl
cmp
das
pop
test
arpl
rol
dec
adc
xchg
add
lods
pushl
xor
ret
mov
stos
push
sub
loope
sub
mov
adcb
repnz
inc
pop
add
andb
jb
sbbb
pop
sti
jo
aam
xchg
dec
jb
int3
ud0
mov
mov
dec
nop
leave
jb
cwtl
mov
inc
and
pop
xchg
pop
sbb
push
fucomip
push
repnz
int
imul
sub
sahf
faddl
sub
dec
or
sbbl
inc
imul
icebp
repz
sbb
add
xchg
push
sbb
nop
push
push
and
notb
ret
repnz
ret
testb
push
xor
lods
jg
jnp
rorl
movsb
cmp
ss
decb
or
mov
pop
add
adc
push
out
mov
xor
into
aad
inc
ret
lds
loop
add
cmp
fidivs
cmpsb
pop
mov
dec
push
aaa
aaa
ret
ja
and
mov
data16
cwtl
int3
rolb
das
xchg
ret
imul
xchg
sub
add
xor
mov
sbb
mov
mov
mov
cmp
dec
inc
adc
sbb
dec
fimull
sub
shlb
adc
mov
cltd
sub
xlat
repz
xchg
xor
sbb
or
push
fwait
cld
pop
adc
dec
ljmp
cvttps2pi
adc
stos
sbb
and
popf
insb
lret
adc
push
sbb
xchg
out
out
lret
pop
push
pop
rolb
mov
push
adc
jns
sub
nop
push
jle
dec
fsubp
out
lods
nop
sub
dec
xchg
fiadds
ljmp
sahf
lods
xor
adcb
inc
mov
xchg
pop
add
inc
iret
mov
cld
and
lahf
push
inc
adc
or
mov
in
loop
adc
inc
ja
in
dec
and
mov
leave
call
psllq
test
outsl
mulb
pop
cltd
ret
icebp
lret
mov
push
stos
jg
jl
mov
inc
push
imull
add
or
push
sub
les
fisubl
daa
xchg
or
jns
fstl
mov
movsl
or
pusha
data16
mov
js
push
sbb
lods
push
pop
mov
imul
insb
lahf
dec
out
into
out
pop
push
pop
loopne
in
jbe
enter
loopne
push
mov
lahf
mov
sahf
stos
mov
xchg
and
jp,pn
push
das
je
lds
sbb
add
lods
inc
mov
push
stc
or
stos
ds
and
and
mov
inc
arpl
dec
push
xor
dec
insb
int3
dec
adc
dec
fnstsw
push
lock
insl
les
arpl
and
mov
xchg
jl
pop
aaa
jne
lea
cmp
subb
push
cltd
iret
test
mov
rcll
jb
addr16
sbb
adc
xchg
test
rcrb
adc
mov
fstpl
mov
push
adc
sbbb
lahf
dec
movsb
cwtl
rclb
aaa
aam
add
inc
ja
insl
cmp
scas
cmpsb
sub
dec
mov
das
push
mov
hlt
or
jno
or
mov
addr16
mov
sbb
mov
inc
shl
clc
add
notb
into
daa
popf
jno
mov
or
fmuls
mov
pop
mov
or
mov
pusha
and
mov
sahf
cmp
sbb
es
xlat
xchg
fcompl
out
aas
nop
sbb
aaa
jno
arpl
repz
clc
fpatan
sbb
in
aas
lock
insl
adc
sub
popf
jle
and
xor
test
jnp
xor
sahf
jne
daa
out
icebp
test
mov
push
shrl
subb
mov
push
push
xchg
in
jmp
sti
sub
arpl
daa
in
add
mov
sub
push
sti
clc
mov
mov
jne
pop
adc
das
shll
sub
lds
xchg
pop
pusha
iret
jmp
ret
cmpsl
jge
mov
cmp
cmpsl
or
push
dec
xchg
outsb
test
fldcw
cmp
sti
mov
add
xchg
test
bnd
mov
lods
pop
enter
les
flds
push
mov
mov
jnp
aaa
push
pop
jecxz
clc
cld
adc
push
cmp
ffreep
leave
cld
jge
fmul
mov
jnp
pusha
sbb
or
mov
aas
cwtl
or
lods
lcall
or
push
add
mov
mov
lea
cmc
daa
push
cmp
stc
je
mov
sub
adc
mov
clc
cltd
mov
test
loope
je
stos
cwtl
pusha
ja
xor
imul
pop
ss
inc
call
mov
sbb
mov
dec
pop
js
sub
ret
inc
mov
push
lret
fcmovb
mov
pop
pusha
aam
fcmove
int
cld
daa
rclb
cmp
repnz
pop
push
outsb
js
cmp
orl
cmp
push
push
in
xchg
clc
inc
mov
dec
push
mov
mov
push
outsb
pusha
outsb
dec
mov
shl
mov
sub
in
add
fisubrs
leave
stos
gs
out
cmp
out
scas
pop
movsl
add
hlt
lret
rolb
pop
push
enter
sahf
sbb
or
lds
pop
test
cltd
ja
ja
lret
inc
jg
adcb
mov
enter
xor
push
cltd
or
inc
stos
stos
push
and
jns
or
lods
mov
call
rcll
call
fwait
cmp
pushf
jns
and
rolb
add
out
pop
sti
mov
popa
scas
pop
sarb
xchg
fistpl
xchg
jnp
fwait
std
aad
add
sbb
push
loop
or
out
xchg
push
jecxz
loopne
add
or
sbb
bound
cmp
mov
movsl
sbb
roll
out
inc
mov
push
pop
arpl
or
mov
pop
fs
cltd
adc
inc
push
xor
loopne
adc
or
mov
mov
loope
jle
xchg
inc
adc
and
xor
in
gs
xlat
add
jbe
out
pop
outsb
adc
pop
pushl
bnd
sub
ss
inc
dec
xchg
mov
dec
rcl
adc
sub
sbb
push
mov
push
adc
jno
inc
push
sahf
cs
aaa
inc
xrelease
and
and
jge
jbe
and
ret
outsb
sbb
or
ljmp
inc
out
lock
sub
fucompp
repz
fldenv
lods
mov
mov
inc
dec
dec
je
test
mov
and
pop
lds
lea
cmp
outsl
inc
arpl
lds
lcall
mov
xchg
clc
jmp
or
test
cmpsb
int
and
fists
sub
mov
stos
sbb
pop
xchg
fs
popf
repz
fs
xchg
psubsb
addr16
nop
pop
nop
dec
inc
sarl
add
jno
mov
fsubrs
xchg
je
arpl
xchg
outsl
pop
mov
sbb
add
iret
mov
scas
cwtl
sahf
hlt
clc
sub
xor
cltd
movsl
mov
idivl
mov
rcrb
xchg
movsl
dec
lods
push
aad
test
in
or
jae
sub
or
ljmp
sahf
popa
hlt
adc
mov
out
loope
fisttpl
dec
ror
xchg
in
adc
imul
shlb
jno
gs
mov
divb
cmp
push
sahf
lret
adc
mov
dec
push
sbb
imul
les
hlt
xchg
inc
clc
mov
sbb
imul
xor
add
pushl
xor
mov
push
data16
lret
rorb
dec
cmp
push
daa
cmp
rcrb
test
in
push
dec
adcl
pop
jle
or
xlat
cmp
ror
xor
xlat
mov
sub
lods
popl
jo
aas
rcrb
cmp
fmull
pop
ja
xor
push
into
pusha
xor
sub
adc
cmp
jns
xchg
or
dec
in
aaa
scas
je
cmp
add
xor
pop
pop
add
mov
xchg
add
aas
push
popa
popf
addr16
mov
aas
test
lods
lea
or
ret
cmc
lods
sub
aam
push
daa
cmp
shll
cmp
sbb
jge
in
jp
stc
or
cmp
mov
or
adc
push
sub
mov
cmp
mov
sub
shrl
push
es
mov
cmpl
rorb
loope
push
xor
sbb
into
loope
popa
cmp
or
rcrb
cwtl
hlt
std
cli
or
scas
mov
push
and
dec
inc
ds
xchg
lret
outsb
push
or
sbb
scas
fstpl
scas
arpl
clc
mov
in
jb
das
and
dec
es
inc
scas
mov
bsf
lods
sub
in
sbb
lea
arpl
cmpsb
daa
cmovs
pop
sbb
in
subl
and
pop
pop
mov
cmpsl
jo
sbb
bound
mov
shrb
and
addb
jp
rolb
idivb
push
bound
add
idiv
push
push
and
xchg
les
mov
addl
fsubrs
nop
or
inc
adc
push
cmp
jnp
mov
add
add
shrb
push
adc
loopne
sub
mov
xchg
popf
andb
adc
xchg
pop
pop
jp
mov
data16
sahf
pop
movsb
jno
cmp
or
push
lock
movsl
adc
ds
in
cmpsb
jae
push
adc
push
jbe
enter
imul
into
mov
jecxz
fistps
mov
dec
dec
mov
jl
xor
cmp
xor
test
lods
xchg
leave
sbb
xchg
popa
adc
xor
fidivs
dec
jne
mov
xor
enter
fisubs
mov
mov
subl
mov
xchg
mov
xchg
ds
js
pop
jns
adc
cmp
add
stos
mov
xor
or
or
repz
inc
mov
fdivr
std
int3
jge
fistpl
fidivrl
sti
adc
sub
jmp
outsb
out
sub
fldenv
fs
jmp
jb
clc
xlat
test
mov
dec
cs
imul
daa
inc
and
inc
inc
ljmp
out
jle
add
int3
jb
cmp
xorb
lret
loope
cmpsl
jae
mov
jo
inc
push
lcall
cmpsb
loopne
jle
dec
jp
adc
popa
fsts
outsl
ds
add
add
hlt
imul
push
lcall
jo
stos
push
inc
jae
push
rorb
je
mov
dec
or
mov
int
divb
dec
xor
cmpsl
jns
imull
xchg
adc
out
call
dec
out
int3
fbld
xor
sbb
jb
test
sbb
jns
lods
and
in
into
outsl
cmp
push
add
adc
stos
cmp
mov
sahf
js
in
cli
lods
int3
jl
jle
das
roll
mov
push
add
pop
jecxz
dec
add
add
stos
insb
xlat
xor
pop
mov
fsub
cmpsb
mov
push
stc
leave
push
ja
sti
mov
mov
or
sub
lods
out
inc
rorl
pop
fwait
popf
ss
lahf
and
adc
jnp
xor
insl
dec
xchg
pop
mov
rcll
xor
movsb
mov
std
jb
ret
icebp
mov
and
mov
dec
and
aas
mov
movsl
data16
xchg
sub
and
aad
in
push
adc
mov
test
jle
ljmp
imul
les
aam
dec
and
cltd
xchg
sub
loope
sub
out
jbe
aam
mov
mov
lea
mov
je
xor
stos
fdivl
mov
jmp
nop
dec
pop
sub
xchg
addr16
mov
call
mov
mov
cmpb
pop
aas
jae
mov
push
cmp
cmp
lahf
outsl
xchg
mov
mov
xor
fisttpl
dec
mov
add
mov
lock
cli
out
dec
mov
cmp
mov
mov
out
jp
push
mov
cmpsb
add
adc
adc
mov
inc
mov
repz
dec
or
nop
pop
and
cmp
int3
cmp
jg
aam
jp
jno
sbb
je
je
mov
mov
pop
xchg
jg
sub
inc
ret
or
dec
add
cmp
stos
sahf
inc
add
xchg
mov
cmpsl
pop
ss
lods
sbb
pop
push
lcall
scas
gs
xchg
xlat
mov
dec
or
pop
add
lret
xor
fldl
mov
mov
pop
mov
fisubs
jge
inc
in
lea
je
dec
repz
dec
inc
neg
xchg
fwait
mov
sub
icebp
push
jle
subb
push
test
sahf
lret
decb
sbb
jmp
or
ss
xchg
pop
lret
inc
pop
je
adc
sbb
mov
loop
les
push
xchg
es
mov
jmp
aad
push
bound
xor
in
jne
jmp
mov
out
xor
hlt
js
jp
and
rcrl
aaa
hlt
je
xchg
movsb
stos
imul
pop
icebp
cmp
cltd
fstl
sbb
cs
mov
mov
cmc
jg
sub
stos
movsl
sbb
andl
xor
subb
addr16
dec
clc
es
aas
xor
in
mov
movl
xchg
xchg
and
iret
mov
xor
icebp
stos
inc
pop
ljmp
cld
and
stos
test
mov
insb
and
loopne
mov
fucomp
std
sub
outsb
les
or
lret
sti
lret
loop
call
repnz
jno
mov
dec
cmp
cmp
sbb
lds
adc
mov
and
jae
mov
mov
add
push
ss
fisubrl
and
mov
outsl
cmpsl
xchg
pop
mov
ss
push
loop
fisttps
inc
inc
push
jmp
je
mov
inc
fcompl
jo
popf
push
lds
push
shlb
inc
dec
jl
mov
nop
add
dec
mov
adc
rorb
filds
popa
test
add
out
das
daa
add
das
jl
xor
or
das
call
cmp
sub
jb
int
data16
mov
add
mov
leave
add
shlb
add
dec
jnp
cwtl
mov
inc
xchg
sub
inc
sbb
pop
inc
mov
add
ljmp
mov
push
pop
dec
stc
push
ficomps
dec
pop
lds
inc
push
mov
mov
rcrb
inc
addr16
inc
jns
or
repz
or
adc
in
in
leave
leave
cwtl
scas
mov
imulb
mov
sub
lahf
ficoms
pop
xchg
push
sub
into
aaa
cmp
push
mov
sub
jae
cmpsb
sbb
push
mov
paddb
jmp
mov
adc
jnp
hlt
mov
xchg
cmpsl
sbb
pop
in
adcl
subb
add
dec
xchg
pop
fisubrl
mov
fdiv
out
gs
fildl
in
inc
push
test
pushf
xchg
push
stos
sub
inc
pop
jp
pop
and
pop
aas
jae
lods
imul
mov
pop
rcrb
mov
sub
in
dec
adc
inc
pop
mov
or
inc
add
sub
out
in
pop
adc
and
rcll
addl
js
ja
xchg
push
adc
or
int3
inc
pop
shrb
sbbl
inc
xlat
in
lds
rcr
cld
jb
cmp
inc
push
mov
fisttpl
push
aad
lahf
mov
inc
sub
or
clc
jns
jns
inc
mov
push
adc
out
lahf
mov
xchg
xor
xchg
sbb
pushf
mov
or
cmpsl
scas
fcompl
push
mov
in
xchg
enter
sub
ss
xchg
ret
or
jae
ds
aaa
jle
inc
fsts
test
es
gs
jecxz
xchg
mul
pushf
xor
pop
negb
lods
shrl
mov
mov
adc
push
cmpsl
out
mov
mov
movsb
fildll
jo
jmp
fs
jnp
ret
js
xchg
fdivrl
push
push
mov
pushf
sbb
sbb
mov
jecxz
jg
icebp
jge
cmp
sbb
add
mov
mov
pop
daa
push
xlat
jp
add
in
jbe
lret
jmp
in
or
lret
cmp
call
dec
adc
push
enter
pop
sbb
sbb
lret
scas
repz
in
cmc
sahf
dec
mov
pop
into
push
adc
imul
fdiv
jmp
cmp
rorl
fdiv
out
cltd
jbe
popl
cli
aad
and
xchg
push
addl
movsl
push
in
jbe
fs
fdiv
push
add
dec
and
mov
xchg
xchg
or
mov
push
mov
cwtl
fadds
dec
loop
pop
hlt
icebp
aaa
add
std
xchg
sbb
ret
js
mov
add
lods
ja
and
xchg
repz
ret
fidivrs
push
xor
sub
rclb
jg
inc
sub
inc
je
faddl
clc
mov
pop
cmp
cmp
aad
and
in
call
jnp
mov
fstl
dec
in
xor
push
xor
jne
fwait
in
loopne
mov
sbb
sahf
aas
jns
fnstcw
rol
dec
outsb
cmc
cmc
sahf
push
test
insl
pop
movsl
out
adc
sub
stos
adc
or
add
xchg
mov
mov
shll
or
test
adc
call
sahf
add
cwtl
inc
xlat
mov
pop
hlt
add
dec
lods
inc
cmp
pop
and
fmull
std
mov
ret
jle
sahf
cld
cmpsl
imul
shll
pop
cmovo
sub
test
daa
fildl
dec
dec
mov
loope
sub
jns
mov
dec
es
fists
lods
jge
fstps
nop
and
mov
sub
add
pop
loope
dec
stc
out
pop
add
mov
std
dec
dec
call
btr
daa
inc
rclb
jbe
mov
mov
mov
adc
jmp
inc
andps
hlt
inc
frstor
stos
push
jmp
jmp
jge
mov
xchg
xchg
in
es
stos
inc
mov
cltd
jmp
sbb
cltd
cmp
push
pop
test
fisubrl
push
or
jno
jle
fwait
clc
int
pop
inc
lea
push
pop
mov
in
ret
pop
addr16
xlat
test
mov
in
adc
sub
testl
mov
and
fwait
push
sub
pop
cmp
mov
add
aam
jb
test
data16
adcl
and
sbb
out
inc
lds
mov
jbe
nop
test
or
cmpsb
into
stos
push
les
xchg
test
mov
test
dec
int
push
popa
adc
in
mov
hlt
sub
mov
jge
dec
inc
inc
push
cld
xor
xor
outsl
imul
mov
jge
and
iret
sub
sub
push
jbe
pushf
outsl
lds
outsb
mov
movsb
pop
cld
pop
jns
mov
jbe
add
mov
pop
jb
cmp
dec
xchg
jp
xchg
insl
cwtl
movsb
loopne
push
mov
out
loop
inc
jp
push
stc
mov
test
cmp
lea
mov
push
mov
xor
xor
sub
xchg
or
aad
xchg
and
andl
add
mov
scas
cmp
sub
lahf
cld
xchg
dec
test
or
mov
sub
mov
enter
push
imul
mov
or
in
lret
cmp
ffreep
inc
dec
repz
gs
jmp
ret
mov
cmp
rorl
test
sarb
test
into
insl
mov
and
out
jmp
mov
lret
push
ljmp
mov
or
adc
enter
xor
jnp
test
into
jbe
repnz
lods
cmp
mov
cli
cmpl
sub
xchg
push
mov
test
dec
and
out
rolb
jnp
cmp
jecxz
fcoms
imul
push
jmp
pop
je
mov
sub
call
inc
inc
orl
stos
add
sub
adc
clc
sub
fs
adcb
ja
jo
dec
push
xchg
jge
fidivrl
cmp
dec
or
mov
mov
dec
pop
bound
insl
xor
xchg
adcl
test
stos
aam
in
stc
js
inc
testl
add
jp
or
lea
push
sub
mov
inc
sub
pop
nop
inc
adc
out
xor
and
test
sbb
dec
and
gs
mov
xor
add
add
rol
mov
dec
and
stos
dec
mov
xlat
xchg
int
ja
mov
pusha
and
jp
sub
mov
mov
mov
inc
lods
daa
ss
dec
je
cmpsb
or
jae
sub
shr
inc
fnstsw
aam
insl
add
bound
mov
rcrb
inc
push
cmp
sub
orl
sub
xor
into
and
jae
cmpl
dec
out
pop
mov
xor
in
fcomps
xchg
je
push
sub
mov
inc
mov
cli
or
dec
mov
adc
xchg
fidivrl
imul
pop
outsb
jno
je
push
pop
test
sub
lock
jl
insb
mov
add
sahf
stos
add
push
jno
fst
shrb
pushf
xor
lea
mov
inc
push
repnz
sub
fnstenv
fnsave
mov
cmp
xchg
cmp
sahf
cli
es
pop
mov
mov
xchg
add
pop
pop
dec
dec
and
adc
repz
pop
lock
add
push
mov
jp
loope
repnz
push
pop
cld
stc
imul
sbb
sti
mov
lahf
mov
or
sti
into
insb
mov
repnz
cmp
lods
add
daa
mov
ljmp
fldenv
nop
xchg
cmp
xor
adc
lret
mov
loope
jge
fidivrs
repz
ffree
ss
pop
push
xor
sbb
pop
xchg
ds
pop
adc
mov
inc
je
adc
sub
add
in
int3
popa
jnp
xchg
repnz
mov
dec
xchg
vpcmpeqw
fiadds
gs
mov
cmp
mov
aas
les
jo
cmp
sub
stos
test
adc
repz
sti
fwait
xchg
push
pusha
sub
dec
lret
popf
into
fbstp
jns
sbb
dec
popa
push
mov
and
cs
push
shl
mov
push
gs
movsl
pop
cmc
jl
xor
dec
in
sub
pop
lahf
add
shlb
adc
sub
add
push
lret
push
xabort
stos
aad
sub
std
out
mov
push
nop
jecxz
popf
test
in
push
pop
push
jae
subb
test
xchg
sbbl
cmp
in
mov
push
sub
mov
icebp
hlt
in
push
cmpsb
shr
cmpsb
ljmp
in
jg
inc
push
into
addr16
scas
shrb
mov
mov
stos
lahf
xlat
xchg
xchg
mov
jmp
popw
mov
adc
jne
sbb
int3
ss
js
push
stos
popf
mov
into
ret
dec
dec
lods
jge
movsl
hlt
inc
mov
lods
orb
out
add
cmp
and
aam
pusha
mov
xchg
cli
xchg
add
sbb
call
arpl
push
es
ret
xor
push
fcoms
js
mov
dec
or
xor
push
jne
jbe
stos
ret
mov
dec
fisubrl
in
mov
leave
push
imul
jge
idivb
add
sbb
std
sub
ret
pop
mov
mov
sub
mov
jno
xor
cmp
cmp
aas
testb
pushf
sbb
and
lahf
fwait
test
mov
or
sahf
adc
mov
mov
mov
add
xor
lahf
imul
mov
jg
jp
call
xor
nop
mov
inc
cmc
mov
dec
lahf
mov
push
out
inc
lcall
rcrl
ror
or
fisubs
ljmp
stos
lock
sbb
sahf
xchg
pushl
into
pop
adc
mov
sub
mov
adc
ret
into
mov
jo
sarb
mov
cmpsl
mov
inc
xchg
insl
aam
pop
call
push
mov
testb
adc
imul
inc
adc
cmp
jle
movsb
fldl
mov
dec
jo
rcr
imulb
adc
cli
push
mov
and
repz
in
sti
cs
xchg
div
stc
out
fstps
dec
das
subl
or
xor
mov
or
jo
ror
stos
loop
scas
sub
push
and
lcall
adc
sub
mov
dec
ror
inc
imul
sub
hlt
push
lret
jmp
xor
jp
out
loopne
sub
mov
insl
xor
push
push
pop
addl
mov
sbb
js
xchg
leave
ja
inc
popa
mov
push
inc
dec
mov
out
mov
mov
xchg
pop
adc
sarl
fldenv
popa
xor
ljmp
xchg
jo
mov
push
notb
in
fs
adc
adc
insl
fdivrp
add
dec
jl
ds
nop
adc
xchg
ret
popa
push
mov
aad
rolb
es
push
nop
gs
mov
mov
jae
adc
movsb
inc
es
mov
jp
push
push
ret
dec
push
imul
fisubl
mov
out
test
insb
jnp
sbb
xor
std
add
stos
add
dec
cmc
test
fmull
test
in
outsb
inc
les
pusha
sub
add
loopne
lret
loopne
inc
inc
fstpl
ja
mov
xchg
or
mov
push
adc
nop
fsubs
inc
call
jmp
ret
rcll
subl
in
ret
das
jmp
dec
inc
rcrb
pusha
dec
outsl
fistpl
inc
loopne
imul
xchg
inc
mov
int3
shr
sbb
movsb
cwtl
mov
adc
mov
bound
lea
mov
popf
push
xchg
fsubrs
fs
hlt
sub
inc
adc
int3
ret
push
push
stos
mov
dec
mov
ret
cmpsl
loope
ja
hlt
mov
sbb
ret
add
cmpsb
cmp
popa
jl
cmp
fsubs
inc
jmp
xor
sbb
icebp
pop
shl
arpl
push
outsl
test
fstpl
mov
pop
ret
lcall
adc
in
lods
lcall
jp
lds
cmp
sbb
mov
mov
mov
add
lcall
push
fcompl
repnz
pop
add
shll
or
test
mov
cli
add
push
repnz
sub
cmp
push
mov
dec
xchg
test
push
es
pushf
sti
add
adc
icebp
bnd
pop
push
ljmp
push
lods
mov
nop
pop
loopne
mov
jmp
hlt
push
xor
shll
cmpsb
pushf
xlat
or
aaa
leave
cmc
xchg
mov
lock
jle
inc
and
pop
jb
lods
shr
hlt
or
mov
xchg
add
push
add
and
sbb
test
mov
mov
pop
adc
mov
add
call
shl
inc
iret
mov
lcall
pusha
mov
lds
xchg
mov
xchg
lahf
dec
shll
inc
andb
cmp
negb
add
cltd
sbb
sbb
test
aad
add
xor
int
sbb
clc
sbb
fwait
cli
cmp
adc
ljmp
sub
cmp
sub
push
sub
inc
scas
sbb
mov
stos
jo
pop
sbb
std
sub
aas
adc
lds
jae
loop,pn
sbb
adc
mov
xlat
jl
mov
mov
inc
je
fildl
sub
pop
stos
adc
stos
and
into
cwtl
insb
bound
cmp
js
mov
xor
negl
jge
dec
lods
cmp
js
lods
std
jno
and
adc
xor
pop
adcb
mov
lods
sbb
in
xor
sbb
movsb
orl
xchg
jb
loopne
xor
cs
sbb
lret
add
cmpsl
jmp
adcb
sub
jno
adc
cwtl
outsb
mov
int
mov
in
aaa
cmp
sub
add
cltd
cmp
aaa
inc
notl
and
js
inc
adc
and
dec
or
pop
inc
and
lahf
jecxz
bound
jecxz
cld
pusha
push
pop
lahf
jb
movsb
in
divb
inc
insb
xor
stos
lds
inc
test
sub
ret
sti
hlt
out
lcall
push
cmpsb
pop
jl
cmp
xchg
fdiv
and
mov
int3
sbb
mov
nop
adc
pusha
mov
mov
sbb
xlat
test
fnstcw
pop
dec
sub
push
mov
inc
lea
xchg
testl
sbb
pop
fimull
fwait
jb
clc
inc
inc
pop
sbb
jecxz
and
pop
push
nop
outsl
data16
call
or
repnz
sbb
test
imull
and
fdivrs
push
pop
pop
es
xchg
mov
popa
pop
pop
mov
lahf
sbb
addl
cli
clc
bound
xor
cmp
mov
jb
inc
jnp
ja
ss
scas
fwait
jns
and
stos
sbb
sub
fsubrs
xchg
adc
lock
sub
lahf
in
add
inc
pop
jnp
popf
sub
inc
push
bnd
test
leave
pop
iret
xor
mov
mov
xor
mov
lahf
mov
mov
sub
push
adc
cmovbe
outsl
sub
adc
push
jbe
jp
push
inc
test
cmc
sbb
lods
xor
sub
xchg
lds
pop
sub
aas
xor
addr16
mov
int3
jl
in
lcall
test
outsb
std
mov
cwtl
or
push
dec
xor
or
inc
loopne
adc
push
cs
stos
mov
lea
add
mov
notb
adc
inc
mov
ds
aad
lock
in
sahf
pop
pop
mov
inc
jno
stos
icebp
pop
std
imul
rolb
xor
jge
inc
xchg
rorl
test
loopne
sub
dec
movsl
cltd
lea
sub
lock
xlat
push
xchg
dec
pushf
fcmovnu
jnp
xor
inc
stos
aam
adc
lahf
in
add
and
stos
fsubrp
daa
inc
out
rcl
dec
insl
jbe
outsl
sub
mov
or
aad
push
sub
loop
and
fcomip
push
cmp
inc
sub
loop
xor
mov
adc
adc
xchg
push
sbb
push
xchg
loopne
mov
inc
call
pop
sbb
pop
cmp
cld
lods
scas
out
push
push
or
js
xchg
cmp
inc
fstp
lcall
in
je
repnz
rorl
adc
aad
push
addr16
mov
adc
lods
lds
add
test
mov
inc
adc
subb
pop
fldl
push
mov
mov
push
sub
andl
sbb
outsl
add
xor
jge
push
or
jg
and
std
lret
mov
outsl
flds
push
test
xchg
or
mov
loopne
ss
mov
or
out
xchg
test
insl
addr16
jecxz,pt
mov
les
cmp
jmp
push
push
rclb
mov
stos
outsb
mov
or
sub
inc
inc
push
adc
loop
lea
push
dec
pop
nop
mov
cmp
cli
int
and
aaa
push
add
test
fwait
or
inc
int
test
aad
adc
xor
les
pusha
outsb
mov
aaa
leave
mov
mov
in
int3
int3
repnz
clc
mov
stos
shr
and
shl
jno
je
inc
das
inc
fstps
cltd
push
stos
jge
sbb
adc
xchg
xchg
dec
stc
pushw
stc
mov
push
scas
hlt
fwait
mov
mov
icebp
xor
lret
sub
or
dec
call
jae
test
in
test
cmp
mov
dec
push
dec
lods
out
jp
lret
test
rcrl
jb
rclb
add
aad
inc
dec
xchg
pop
adc
je
mov
xchg
data16
sti
push
int3
jae
ret
pop
pop
and
mov
mov
dec
or
xlat
and
mov
pushf
fldenv
cld
add
pop
rorb
cmovae
in
xor
mov
cs
mov
mov
insb
cld
lods
xchg
and
stc
mov
lret
mov
frstor
cwtl
imul
insb
lahf
cli
add
dec
xchg
orb
xchg
outsl
xor
nop
xor
leave
or
xchg
sbb
dec
lea
mov
jnp
or
pop
mov
sbb
das
aam
cmpsb
hlt
xchg
jb
mov
mov
call
cmp
cmp
mov
clc
out
nop
test
pop
out
pushl
not
cmp
mov
out
sbbl
push
repnz
mov
adc
lret
dec
sti
push
sbb
dec
cmp
es
xchg
sahf
rcrb
fisubs
out
enter
and
cwtl
aaa
icebp
jne
pushf
rcll
data16
add
rol
pop
gs
in
std
nop
in
pop
stos
in
push
iret
movsl
jg
outsl
loopne
mov
dec
lock
pop
outsb
cmc
jecxz
jecxz
test
mov
adc
or
clc
ret
push
dec
jae
scas
dec
mov
lods
jbe
cmp
pusha
cmp
or
pop
notl
dec
leave
in
iret
adcb
jp
jp
stos
xchg
jle
push
adc
call
and
fs
xchg
mov
pop
nop
pushf
xchg
mov
mov
stos
loop
repz
in
loope
jbe
adc
sub
stos
ja
pop
sub
add
repz
insb
mov
mov
mov
iret
in
jb
cmpsb
xchg
xor
mov
int3
es
fcmovnbe
pop
rcr
notb
mov
enter
jno
push
outsb
stc
rcrl
test
cmp
sub
shlb
fstpl
sbb
dec
dec
arpl
test
mov
mov
out
mov
je
arpl
and
xor
xlat
jbe
jns
imul
inc
lock
mov
out
inc
xchg
inc
xchg
xor
aam
daa
push
cmp
cs
sarb
add
cmpsl
mov
xchg
xor
lret
fstl
xor
dec
inc
clc
cmp
sub
xor
shll
adc
stos
dec
pop
push
adc
outsl
pusha
mov
cmpsb
push
add
pop
in
sbb
in
pop
cmp
jne
shll
push
loope
es
jns
psrlw
mov
inc
dec
outsl
xchg
aam
cmp
dec
ret
int3
gs
sbb
sub
addl
xor
jbe
loop
test
aad
mov
dec
xor
jmp
lahf
leave
ljmp
cld
pop
jmp
push
into
outsb
ds
inc
es
push
dec
xchg
iret
add
rcl
add
push
cmp
popa
nop
test
lret
outsl
jmp
dec
dec
inc
sbb
lahf
rcr
sbb
push
test
outsb
mov
iret
add
aaa
push
fisttpll
scas
and
jae
sbb
pop
or
stc
adc
dec
add
fdiv
or
inc
and
mov
push
jle
loop
or
lea
fdivrs
push
ss
into
out
dec
pop
ss
arpl
icebp
mov
or
jecxz
repnz
nop
xchg
jp
pushl
xorl
jnp
repz
out
mov
or
jbe
pushf
cmp
lock
outsl
mov
cmp
into
fadds
push
ret
lods
mov
test
fcoml
pop
push
mov
jge
lds
call
dec
add
das
popf
lods
sahf
and
pop
cwtl
or
fimuls
xchg
es
out
mov
out
push
shlb
in
addl
sahf
lret
je
repz
test
aam
inc
repnz
sbb
xchg
imul
arpl
inc
xor
xor
xchg
es
jle
gs
jns
cmc
and
pop
popa
jo
mov
lret
out
bound
xor
stos
jge
stc
pop
rcr
stc
push
into
ljmp
sub
lret
pop
inc
data16
xor
mov
bound
mov
rorl
ds
push
xchg
aas
imul
xor
sub
repz
scas
ret
xor
pop
dec
jns
push
add
sub
dec
js
mov
or
outsl
sti
mov
clc
mov
lods
stos
inc
pop
jecxz
xor
inc
mulb
mov
mov
push
jbe
and
jle
push
mov
je
stos
enter
int
jg
pop
dec
add
fs
xor
fwait
pop
pop
jb
mov
jnp
mul
cmc
xor
js
jg
pop
push
sbb
clc
xor
xchg
testb
insl
inc
xor
out
push
out
cmpsl
xchg
into
xchg
ljmp
jge
and
fistpl
mov
ret
adc
rcr
jmp
pop
jno
or
cmp
mov
xor
dec
mov
push
aaa
xchg
mov
in
enter
cmc
inc
fstl
sbb
data16
push
mov
adc
push
bound
les
popf
sbb
test
pop
push
ret
xchg
in
mov
mov
and
cmc
sbb
insl
cld
mov
cwtl
xchg
mov
jecxz
and
sti
or
mov
xchg
bound
fcoml
dec
adc
mov
push
stos
cmc
jno
test
jmp
pop
dec
mov
add
aaa
or
leave
push
inc
clc
mov
pop
loop
push
imulb
sbb
cmpsb
add
inc
pop
pushf
sbb
mov
sbb
out
dec
lds
push
fcmovbe
icebp
jmp
cmc
lcall
clc
les
mov
cmp
cwtl
clc
fisttpll
insl
dec
mov
clc
es
lahf
xor
cmp
aad
setnp
cmp
popf
jnp
push
aad
and
pop
dec
mov
xchg
shll
fstl
fs
sub
fiadds
dec
add
ljmp
sbb
dec
leave
es
mov
je
lret
scas
dec
test
imul
in
repz
mov
in
iret
sub
cltd
scas
mov
jg
bound
sbb
pop
sbbb
mov
dec
or
push
popa
xor
lret
ja
in
call
pop
or
and
jecxz
movsl
mov
repnz
sbb
lods
add
and
adc
add
add
jne
sbb
call
pushf
xchg
fldcw
popl
adc
in
cmp
adc
in
aad
cwtl
cmp
pop
das
idiv
fistpl
mov
orl
jg
pop
fstl
inc
js
cmp
mov
cmp
xor
mov
jp
gs
sbb
call
addr16
xor
and
pop
cltd
add
fistl
dec
xor
mov
sbbl
decl
push
push
xchg
jl
adc
sbb
inc
mov
test
inc
popf
jns
mov
fmul
cmpsb
ss
or
mov
insb
in
mov
cmp
mov
pushf
adc
das
lahf
lret
xchg
jno
outsl
ficoms
popf
ss
or
dec
sub
push
inc
in
addr16
pop
xor
sbb
dec
shl
test
mov
addb
sarl
lods
and
sub
or
push
mov
mov
addb
lret
adc
push
jnp
dec
test
push
mov
adc
decl
mov
mov
dec
push
push
jno
aam
in
je
add
fnsave
xor
fwait
mov
lcall
daa
pop
test
test
lods
aam
dec
adc
push
sti
adc
pusha
mov
arpl
stos
add
sbb
push
and
mov
adc
lahf
testl
js
clc
out
cmpsl
push
icebp
shll
faddl
jle
cmp
sarb
sub
sbb
push
stc
pop
jns
sub
mov
loop
inc
jl,pn
xor
adc
ficoms
cmp
dec
lret
mov
xor
xor
pop
and
hlt
inc
push
xor
mov
fwait
in
cmp
aam
push
in
fcoml
or
icebp
cmp
jmp
inc
rcrb
out
or
stos
add
rolb
into
jge
cltd
popa
pop
add
xor
fiadds
cmp
repz
rorb
jbe
insl
xor
sbb
inc
movsl
out
jo
fstps
mov
cltd
bnd
xchg
aas
je
push
shll
sub
add
xor
and
loopne
mov
pop
mov
mov
mov
repnz
fstpl
dec
xchg
fsubs
in
mov
popw
insb
fst
ja
xor
sub
mov
insl
sub
jle
imul
jmp
pusha
leave
loope
rcrb
into
rclb
mov
adc
push
js
movsb
push
push
movsb
out
mov
std
mov
xor
pusha
jp
cmpsl
lea
pop
mov
incl
xchg
mov
cltd
xor
arpl
jbe
mov
cmp
adc
fnstsw
pop
mov
inc
sbb
pop
cli
mov
out
aam
mov
mov
addb
jl
movsl
cmp
or
std
imul
pop
repnz
cltd
addr16
cld
sti
clc
xchg
fwait
push
not
push
flds
xchg
popa
mov
std
dec
hlt
add
lcall
mov
pop
xchg
int3
stc
outsb
mov
jge
mov
push
jmp
dec
das
in
insb
pop
out
rcrb
add
sbb
out
fiadds
jecxz
cmp
sbb
je
lods
hlt
ljmp
mov
adc
xchg
pop
out
pop
add
fisubrs
out
into
mov
jae
in
call
stc
nop/reserved
mov
dec
in
xchg
inc
sahf
sbb
dec
aad
mov
xchg
or
push
gs
mov
and
mov
out
mov
xchg
pop
ja
aas
fadds
lret
imul
jnp
sti
sbb
frstor
mov
lds
sarl
xchg
xchg
cmp
or
mov
rolb
imul
cld
inc
cmpsb
adc
push
ret
test
xor
js
adc
lcall
inc
repz
xlat
and
lret
clc
sbb
mov
in
cltd
dec
leave
daa
mov
lock
jae
roll
dec
sub
imul
mov
inc
pop
enter
into
or
ret
fistl
sbb
push
loope
xchg
mov
inc
cli
jle
in
out
lret
shrl
xorb
ja
aaa
je
cs
cmp
lea
lret
push
ljmp
flds
pushf
movsb
mov
insb
xor
xor
mull
cmc
out
or
inc
xchg
cwtl
pop
std
hlt
mov
or
outsb
mov
cld
adc
popa
popa
shl
jg
les
adc
out
xlat
mov
fstp
mov
mov
test
xor
sbb
ret
push
or
decl
mov
in
adc
loop
outsb
mov
or
ja
and
imul
lea
jnp
or
adc
mov
push
pusha
shll
push
out
addr16
lea
ficoms
sbb
inc
mov
stos
popa
fsubrs
cmp
xor
push
stc
mov
lods
push
into
sub
stc
mov
xchg
pop
mov
inc
mov
jae
out
enter
mov
xlat
dec
sub
test
push
dec
lret
cld
iret
and
aam
aaa
mov
and
fcomip
fcoml
mull
lds
cmp
sbbb
pop
dec
or
mov
add
cmp
xor
bound
push
cld
sbb
push
rsqrtps
dec
or
popa
mov
pushf
ret
loope
addr16
sbb
lds
aam
sarl
cltd
sub
cmpsl
and
out
push
cmp
jae
ds
mov
stos
cmp
adc
lds
add
jmp
bound
or
in
xor
sbb
stos
pop
xchg
das
push
das
xor
jge
inc
std
xchg
dec
inc
in
sbb
sbb
test
fcompl
ljmp
test
dec
sub
je
nop
stos
and
sub
mov
sub
repz
pop
xchg
push
outsl
push
outsb
push
or
push
mov
int3
nop
bound
mov
and
inc
pusha
test
xchg
sub
mov
and
aas
dec
stos
xchg
clc
xchg
icebp
hlt
jb
imul
test
in
das
enter
fdivp
sbb
add
inc
js
push
dec
int3
out
mov
lds
jo
mov
mov
pop
cld
and
mov
sub
mov
add
or
mov
xor
inc
cld
push
inc
pop
xor
mov
sub
imul
jnp
and
lahf
xlat
xor
cld
push
push
std
sbb
test
xorl
repnz
mov
pop
pop
out
pop
inc
in
push
imul
lret
in
aam
mov
sahf
cli
sbb
mov
js
adc
xor
divl
jl
fcmovnb
popf
jecxz
nop
pop
roll
test
jns
mov
mov
or
or
dec
mov
cmp
push
and
enter
push
arpl
push
out
test
push
stos
cmp
xchg
mov
xchg
dec
xchg
das
jg
push
inc
xchg
push
cmp
imul
mov
or
push
aaa
xchg
scas
and
scas
inc
mov
cmp
sub
cmp
pop
or
jle
and
sbb
mov
cld
scas
shlb
in
pusha
imul
xchg
popa
xchg
repnz
fmuls
subb
sbb
enter
loop
imul
inc
and
js
inc
jbe
fs
fdivrl
jmp
fmulp
addr16
in
std
pop
orl
inc
sahf
out
int
xlat
ret
fstpl
jno
push
addb
icebp
insl
jmp
shrl
xor
clc
pop
inc
cmpsl
xor
sub
lock
in
repnz
dec
and
or
dec
cmpsl
mov
int3
push
nop
stos
loope
adc
les
insb
je
sahf
mov
insb
roll
or
outsl
insl
scas
outsl
mov
loop
push
sub
adcb
incb
pop
mov
in
pop
cmp
pop
stos
das
stc
ja
cmc
push
sub
lret
test
rcl
and
fisttps
jbe
pop
xor
fstpl
xlat
fcoms
rclb
lods
push
aas
popf
into
or
mov
ret
adc
lock
xchg
shll
xor
xchg
test
add
std
jg
data16
stc
dec
incl
pop
mov
inc
popa
loop
outsl
addr16
lret
adcl
in
mov
xchg
inc
sub
test
push
xor
subb
out
imul
in
jno
sub
mov
repnz
fsts
les
jae
pop
push
ljmp
int
or
mov
xor
std
add
cmp
clc
xor
dec
sub
sbb
xor
fisttps
rcl
dec
xchg
cmp
push
sbb
mov
roll
cmp
sbbb
pop
lahf
mov
int3
addr16
inc
movsl
and
sub
and
mov
inc
cwtl
xor
fisttpl
sbb
js
add
xor
cmpsb
sub
push
inc
sahf
cli
or
adcb
je
dec
xor
pop
add
pusha
adc
adc
add
fstpt
mov
xor
icebp
outsl
xchg
jecxz
addr16
sarl
xchg
lock
adc
mov
test
insl
inc
cmp
push
stc
loop,pn
ja
xchg
hlt
xchg
sub
mov
push
das
int
and
xor
test
jl
and
fists
jle
scas
je
jg
out
icebp
cmp
xchg
shlb
repz
mov
sub
roll
add
and
bound
xchg
ja
jnp
stos
pop
jp
imul
shlb
aam
inc
ret
xor
ljmp
inc
cmp
push
or
lret
outsb
sahf
dec
sub
sarb
mov
and
sbb
jmp
jl
in
push
in
arpl
decl
aad
in
cli
jg
ret
fucom
sbb
dec
sub
jecxz
jae
inc
push
mov
lcall
fsubl
test
int
out
shl
repz
shll
mov
out
xor
flds
cli
lret
jae
mov
add
pop
inc
sarl
pusha
push
adc
or
imul
mov
into
push
sbb
mov
scas
dec
cmpsl
out
sarb
pushf
sub
test
aaa
ja
scas
dec
sub
mov
dec
leave
push
lods
daa
sbb
pop
clc
loope
mov
mov
lcall
adc
mov
nop
enter
push
add
lret
rcrb
fstpl
aad
cmp
fbld
adc
call
add
psubusw
cmp
adc
jmp
test
pop
xchg
inc
repnz
mov
fidivl
fnsave
es
jno
sarb
fcom
push
loop
xchg
sub
cmc
pop
or
test
into
je
pop
sub
stos
stos
sbb
dec
aaa
hlt
addr16
xchg
inc
repz
sar
mov
ret
pop
ds
or
xor
ds
push
push
les
xchg
les
or
inc
and
fildl
pop
aad
mov
mov
xchg
cmc
dec
es
mov
fadds
inc
sbb
jge
insl
lock
xchg
ja
mov
testb
pushf
mov
jge
sbb
insl
inc
cmpps
lock
and
mov
jno
mov
imulb
divb
es
rclb
dec
movsb
ja
cmp
nop
jne
push
and
cmp
movsb
ret
cmp
and
mov
pop
mov
rorl
into
movsb
arpl
fwait
call
xchg
mov
fidivrl
cmp
dec
outsl
xor
mov
xor
mov
push
sbb
mov
jmp
mov
das
inc
sbb
xor
in
rorl
cmpb
jo
pop
mov
repnz
out
dec
cltd
ds
rclb
xchg
ljmp
adc
icebp
inc
cmp
cld
sbbl
repnz
aaa
jne
lds
mov
movsl
in
push
pop
sbb
mov
adc
subl
aam
repnz
mov
mov
call
loop
sbb
dec
or
dec
jge
out
testb
shrl
adc
movsl
icebp
jle
adc
mov
cltd
jmp
lret
mov
jp
sub
mov
rorb
int
out
adc
cmp
ret
xchg
mov
fisubs
or
mov
stos
fistps
outsl
push
loop
push
xchg
push
outsl
add
inc
fmull
jno
jno
icebp
mov
inc
sub
dec
push
bound
popa
dec
and
or
sbb
sbb
movsl
scas
adc
pop
mov
adc
aad
push
loop
dec
xlat
jp
mov
fstpl
fimuls
ja
sbb
jp
cmpsl
push
shrl
data16
scas
fidivrl
les
mov
xor
inc
push
cmp
xchg
das
pop
or
push
jp
jge
dec
mov
xor
sub
adc
adcl
lock
push
inc
jmp
dec
into
xchg
int3
xchg
cmp
xor
push
add
pop
dec
es
xor
test
lahf
sti
jle
push
push
push
pop
push
shll
lret
sti
mov
jp
or
cmp
aaa
or
mov
pop
loope
cmpsb
or
or
in
notl
inc
xor
out
clc
or
cs
pop
lock
in
xchg
push
rol
or
cwtl
mov
cld
mov
mov
fidivrl
loopne
add
js
imul
loop
inc
dec
or
sub
dec
sbb
xchg
gs
push
sub
or
loope
cmp
outsb
icebp
sub
fidivrs
xor
popa
xchg
rcrb
inc
sbb
in
sti
int3
mull
call
leave
xchg
aad
jecxz
lock
cmc
sbb
xor
aam
jg
sbb
das
push
inc
lods
sbb
ja
mov
aam
add
mov
test
std
mov
sub
dec
xchg
jae
inc
lcall
fs
ljmp
xor
sub
insl
inc
xchg
push
aad
dec
jp
cltd
jge
mov
mov
fsts
pop
subb
cwtl
insl
lcall
daa
xchg
hlt
flds
and
add
fidivrs
stos
xor
mov
inc
adc
xor
mov
mov
icebp
popf
cmpl
sti
xchg
push
rorb
and
popa
ljmp
loop
inc
sbbl
les
xchg
lods
inc
sbb
mov
sbb
clc
adc
scas
gs
rcll
add
lods
lret
dec
pop
les
mov
push
lret
sub
and
out
and
pop
adcl
add
testb
cmp
shr
mov
outsl
cmp
hlt
jge
add
adc
mov
arpl
and
add
ret
cs
or
jg
and
push
lret
int
jg
cmpl
sbb
push
cmp
arpl
and
cmp
dec
lcall
fmulp
xchg
andl
push
inc
ljmp
loop
or
mov
pop
negl
icebp
fwait
aad
sub
xchg
rolb
cmc
sub
lock
cmpsb
dec
fiaddl
jae
xchg
jmp
sub
pop
in
into
bound
and
push
movsb
mov
jle
sub
jge
sub
iret
xor
and
push
and
call
push
xchg
jg
inc
bound
xlat
fldcw
testb
ja
cmp
sarl
mov
in
xchg
pop
pop
push
push
jae
add
add
imul
lret
imul
js
or
mov
xchg
xor
adc
push
sbb
push
xlat
sti
sbb
sub
loop
les
sub
jne
in
inc
or
push
inc
mov
push
in
pusha
xlat
adc
dec
aad
mov
adc
loop
repz
decb
pusha
dec
fnstcw
daa
sbb
arpl
dec
out
out
mov
stc
jnp
jne
mov
push
imul
or
mov
cmp
cmpsb
pop
jne
rcrl
stos
scas
cmp
jge
fsubl
cmp
pop
xchg
mov
mov
loop
mov
out
dec
sub
push
gs
aad
sbb
adc
cli
pop
cmp
jg
dec
leave
insl
lahf
in
pop
out
sbb
pusha
sahf
and
push
sahf
jle
ss
imul
testb
sti
mov
xor
cmp
shlb
pusha
out
fwait
outsb
xor
movsl
pop
cmp
rcrb
sbb
add
loope
out
orl
inc
mov
xchg
aas
fidivrs
xlat
fsubr
jnp
pop
ds
mov
pop
mov
mov
lret
stos
inc
mov
add
aad
mov
cmp
sub
pop
cld
jge
stc
xorb
nop
data16
jl
push
adc
xchg
idivl
scas
xorb
popa
xchg
popa
clc
dec
out
cld
xchg
sbb
sbb
popf
and
add
popa
sub
in
cli
inc
fimull
xchg
je
ds
and
pop
test
movsl
mov
arpl
dec
cs
cmp
movsl
mov
scas
push
push
xchg
pop
mov
xchg
ret
push
sub
das
sbb
sbb
cmp
xchg
xlat
or
pop
das
xor
xchg
andb
imul
aaa
sub
ficompl
test
push
mov
mov
mov
xchg
cmp
into
mov
mov
fs
loopne
fcomip
shlb
out
push
inc
in
sub
mov
pop
mov
mov
dec
push
xor
aaa
add
dec
add
cld
mov
push
sbbb
pop
and
inc
mov
inc
and
push
outsb
cs
in
add
test
xor
sbb
mov
sub
roll
rorl
jnp
or
adc
insb
js
pop
push
adc
ss
or
sub
inc
jp
out
sub
loop
xchg
and
xor
jmp
leave
push
mov
fimuls
jbe
ljmp
popa
imul
mov
icebp
mov
sbb
lods
mov
sbb
jp
insl
notb
dec
mov
jecxz
push
and
xchg
and
cmp
adc
mov
pop
lods
dec
pop
dec
out
fwait
js
and
sahf
or
imul
xorl
cmp
cltd
repz
loopne
in
in
mov
scas
mov
mov
add
loop
andl
lahf
mov
inc
pop
mov
xchg
lods
inc
lods
fimuls
add
jl
sahf
cmp
inc
mov
pushf
clc
movsl
cwtl
outsl
dec
mov
scas
and
mov
cmpsl
and
jmp
stc
pop
pop
and
sbb
dec
jle
imul
adc
sub
gs
push
fsts
ss
jae
xchg
push
or
and
loop
insl
jnp
movb
jb
cmpl
inc
repz
and
loopw
push
push
sub
sub
bound
aad
mov
cmc
adc
pop
cmpsl
xchg
jbe
sub
stos
mov
inc
movsb
js
sahf
cmp
adc
loop
or
xchg
sub
and
sbb
xor
jmp
xorb
fmuls
inc
aad
lret
test
loope
roll
pop
adc
imul
push
mov
in
addb
xchg
sub
mov
push
push
xor
jae
enter
mov
bound
imul
lahf
not
jmp
inc
cmp
mov
dec
enter
cmp
or
push
sub
sub
shll
dec
das
imul
or
jmp
xchg
rcrb
dec
jb
stos
sbb
cltd
cmp
inc
lahf
icebp
xor
sub
lods
ss
movsb
xor
out
lcall
arpl
xchg
xchg
and
inc
ss
loop
xor
push
lds
inc
and
insb
and
addr16
xor
and
hlt
bound
pop
mov
rcl
loop
adc
dec
ret
jg
pop
mov
in
pop
js
pusha
push
outsb
test
lret
movsb
sbb
cmp
popf
mov
and
adcb
es
hlt
cs
inc
inc
hlt
test
gs
movsl
fdivrl
scas
and
aaa
lods
jno
cmc
cli
sbb
sbb
add
out
out
jmp
xchg
and
aam
push
or
enter
and
and
repnz
lock
pop
pop
push
jae
dec
mov
mov
mov
inc
dec
test
sub
movsl
insl
adc
outsb
test
std
shl
pop
xchg
jg
jmp
sub
sbb
lahf
inc
icebp
es
add
mov
out
cmp
sbb
mov
lcall
ret
mov
jp
inc
stos
add
lahf
fildll
testl
push
adc
enter
dec
jno
sarl
dec
xchg
cmp
icebp
inc
sub
loop
mov
inc
jle
roll
mov
js
dec
int
xchg
lock
and
mov
fldt
adc
gs
lahf
jl
aam
imul
mov
orl
andl
fisubs
mov
sbb
inc
cmp
jne
cltd
xor
or
xchg
sarb
testl
or
add
out
mov
add
jae
dec
pop
cmp
push
daa
xchg
adc
sub
pop
push
into
inc
inc
adc
movsb
repz
int3
daa
xor
aam
stos
out
xor
arpl
ja
and
in
enter
data16
pop
dec
adc
or
push
daa
rcll
bound
push
ffree
in
loopne
jnp
jns
cli
mov
aam
pop
cmp
mov
and
push
add
ficomps
sub
cltd
adc
mov
enter
sbb
ja
fs
out
jb
test
add
movsb
in
mov
or
pushf
scas
in
fisttps
fsubp
xchg
repnz
cwtl
xchg
adc
push
fimull
lahf
test
lods
out
shl
xchg
lea
inc
pop
out
es
adc
inc
adc
fisttps
pop
outsl
stos
jmp
nop
pop
iret
adc
adc
sti
fldz
lods
stos
cmp
imul
sub
and
sub
dec
or
mov
lcall
mov
cmp
push
pop
dec
in
and
lcall
adc
mov
dec
iret
bound
loopne
stos
pop
test
es
adc
mov
sub
and
cli
jne
adc
inc
adc
test
pop
sbb
lods
incl
cmpsb
inc
mov
fwait
aaa
dec
rcl
adc
icebp
xchg
cmp
inc
adc
sahf
ret
mov
fs
insb
sahf
lea
jbe
ja
andl
pushf
xorl
pop
fcomp
sub
jmp
mov
jge
push
mov
dec
xor
or
inc
stc
push
jne
adc
fmull
add
nop
add
sarl
stos
dec
clc
pop
push
test
sub
cwtl
ficoms
dec
push
jl
xlat
lahf
adc
and
movsl
push
inc
mov
push
ljmp
dec
sub
orl
clc
ret
es
jne
imul
shlb
push
movsl
and
mov
stc
mov
mov
xchg
pushf
js
sbb
jne
sub
das
cmp
test
insb
push
lods
imul
jns
dec
adc
popf
fisubs
add
shlb
stos
push
lcall
xor
sbb
add
mov
aaa
fs
fldl
dec
cmpsb
push
ljmp
inc
es
jp
pop
insb
xor
mov
push
cmp
inc
or
mov
jl
rol
mov
pop
popf
rcll
int3
and
mulb
xchg
sbb
or
lahf
cmp
sbb
jge
popf
jns
sahf
orb
sbb
shlb
lret
cmp
push
dec
outsb
data16
add
jg
lret
and
test
ret
pop
ja
orb
xor
or
push
in
fiadds
roll
or
jp
jne
imul
jp
mov
xchg
pop
xor
popf
fsubs
inc
pop
inc
mov
stos
xchg
fsts
sbb
aad
jg
adcl
das
inc
xchg
lret
fs
icebp
xor
out
mov
sub
mulb
cmp
jp
call
fs
jbe
inc
jecxz
push
cmpb
std
adc
pop
dec
xorb
ss
fs
push
icebp
mov
or
jl
pop
or
push
cwtl
sti
lcall
outsb
clc
lds
adc
cmp
popf
cmc
push
sbb
shrl
into
test
lahf
xchg
pusha
dec
push
mov
das
inc
aam
adcb
into
mov
xchg
push
xchg
add
ret
setp
das
mov
sub
and
jbe
fisttps
stos
jns
mov
pop
xchg
push
aad
mov
xchg
xchg
imul
push
xor
js
cli
and
lods
push
xor
and
in
mov
lret
out
and
add
jp
shlb
aam
mov
lods
and
popf
xor
add
pop
mov
xor
push
imul
sarl
sti
addr16
fisttpll
mov
lcall
jns
jnp
call
xchg
mov
sbb
je
xchg
and
testl
push
aaa
lods
adc
xor
not
xor
aas
add
adc
shr
and
jecxz
ret
lcall
dec
xchg
push
ret
call
rorb
adc
pusha
mov
enter
insl
pop
xchg
lcall
sub
or
std
loopne
loopne
add
pop
bound
js
mov
in
lods
and
test
mov
adc
das
stos
sti
lcall
cmpb
rcrl
popa
cmp
dec
and
daa
mov
leave
mov
mov
adc
mov
lock
bound
adc
je
out
mov
scas
in
out
out
mov
xchg
out
ss
sub
xchg
add
dec
aaa
jle
fnsave
inc
mov
imul
add
jmp
in
in
sub
sarl
outsl
cmp
adc
popf
push
daa
inc
jg
call
mov
push
jae
jb,pn
lret
sbb
inc
xor
mov
sub
or
shl
aam
inc
loopne
xchg
das
stos
ss
push
pop
or
push
push
sbbb
cmp
cld
pushf
loop
sahf
mov
xchg
mov
mov
or
ja
das
sub
jge
inc
ret
push
mov
arpl
pushf
mov
or
test
sub
pop
mov
sub
and
std
lds
pop
adc
stos
xchg
inc
cs
mov
jle
sbb
mov
iret
ss
icebp
add
push
sub
sti
clc
push
inc
mov
xchg
or
push
pop
jae
loopne
das
mov
jns
sarb
inc
imul
aad
into
pusha
add
cld
or
mov
cmp
xchg
dec
push
mov
inc
mov
cmp
fs
pop
lret
icebp
sbb
mov
inc
push
inc
ret
sbb
xchg
fidivrl
orb
movsb
add
lcall
mov
std
jmp
test
int
inc
push
mov
nop
cmp
lret
addb
loope
push
adc
data16
adc
pushf
sbb
adc
sub
mov
pop
inc
sbb
shrl
repz
mov
lea
shrb
inc
inc
rclb
xorl
adc
sub
cmc
cwtl
add
inc
mov
push
inc
push
stos
leave
scas
push
and
or
mov
stos
add
std
das
mov
xchg
dec
jmp
push
mov
pop
dec
jle
inc
mov
imul
aad
xlat
loop
jo
test
dec
insb
insl
push
adc
int3
out
test
push
sbb
adc
cmc
dec
sbbb
cmpsl
jbe
enter
int3
xor
xchg
insl
or
out
cmp
inc
jbe
mov
lret
add
and
mov
xchg
pop
adc
add
jo
lss
mov
add
fsubrs
or
out
sub
pop
js
push
mov
sub
sahf
daa
ds
pop
xchg
mov
popf
jl
testb
xor
pop
fsubrs
xchg
adc
xchg
sahf
mov
cwtl
xor
daa
mov
inc
mov
dec
divb
and
jge
push
mov
sbb
int
jmp
cld
outsb
outsl
cmp
dec
jle
jecxz
inc
int3
or
out
push
mov
dec
mov
lods
sbb
jge
xchg
xchg
sarb
je
pop
xchg
dec
outsb
das
stos
inc
sbb
adc
popf
and
sub
push
ficomps
sbb
frstor
ret
push
lea
mov
push
jg
push
jmp
imul
push
lret
xchg
outsl
out
pop
clc
fildll
jmp
repnz
sbb
shl
lods
push
repz
pop
jecxz
hlt
cld
push
rep
cwtl
test
pop
test
xchg
sub
je
jae
or
xchg
xor
test
mov
in
jg
xchg
push
nop
call
or
sbb
dec
pushf
mov
adc
mov
mov
addb
aaa
xor
xchg
jo
cmp
movsl
ficomps
inc
cmc
adc
frstor
sarb
into
xchg
mov
iret
sub
lcall
lock
jns
inc
lock
mov
xorl
in
hlt
or
pop
in
cmp
es
inc
mov
out
mov
loop
mov
bswap
cltd
add
adcb
mov
mov
nop
outsb
mov
jle
jecxz
js
adc
mov
xor
aaa
and
mov
sti
icebp
sahf
pop
aaa
or
mov
stc
cmc
into
icebp
insb
nop
sbb
cmp
repz
or
mov
insl
xchg
aam
nop
out
mov
ja
ret
xchg
mov
leave
inc
scas
jnp
push
sar
clc
fs
int
mov
aas
mov
dec
sti
and
pop
jge
fcoml
pop
ljmp
stos
bound
push
push
out
outsb
jae
divl
or
jge
out
jle
fs
mov
xor
sbb
sarb
das
inc
pop
mov
fsts
and
inc
pop
xchg
push
add
jbe
int3
es
and
add
in
sti
lret
dec
shrl
addr16
pop
lods
ljmp
cltd
mov
sbb
pushf
or
loopne
fbstp
insl
les
outsb
jp
sbb
in
dec
inc
lds
imul
out
mov
jb
cmp
lds
sbb
sti
leave
mov
sbb
inc
roll
dec
push
mov
cmp
xor
cmpsl
add
mov
and
push
cld
hlt
out
or
les
aas
cld
ljmp
pop
into
mov
mov
iret
dec
adc
scas
dec
sub
xchg
into
xlat
cmp
mov
dec
shll
fistps
adc
fisubs
cmp
add
sbb
nop
sub
les
xor
pop
insl
fcmovnb
popa
sahf
inc
jo
dec
or
shrl
imul
xor
inc
sub
stos
mov
test
andb
call
jns
mov
cmp
pop
and
lods
ljmp
loopne
sahf
push
push
mov
movsl
pop
fildl
movsl
scas
mov
sbb
ss
or
stc
inc
pop
imul
and
push
subb
fs
les
inc
call
cli
mov
dec
test
cmc
aas
fsubs
mov
addr16
mov
popf
xchg
ljmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
decl
shrl
imul
stos
loope
pop
sub
mov
mov
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
addr16
sub
andb
add
cmpsb
movsl
mov
int
insb
flds
in
stc
sarl
add
mov
pop
outsb
cmp
pop
hlt
fnstenv
fucomi
sbb
adc
pop
shrb
pop
inc
add
pop
std
and
jmp
out
arpl
pop
inc
mov
and
paddw
adc
sub
jb
pop
push
lahf
sti
test
test
cmp
or
cmp
fisubs
cmp
cmpsb
insl
hlt
fnstenv
fldt
imul
push
repz
in
lds
stos
loope
pop
fs
and
loope
sbb
mov
mov
pop
imul
mov
imul
push
pop
imul
stos
loope
pop
addr16
rolb
loope
pop
addr16
lds
mov
imul
push
pop
imul
mov
adc
cmpsb
sahf
lds
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
fsubp
push
pop
addr16
test
add
nop
in
pop
arpl
xchg
inc
hlt
adc
sahf
stos
loope
pop
imul
fadds
repz
stos
mov
pop
addr16
cmpsl
lds
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
imul
stos
loope
pop
and
and
lds
subps
fwait
xor
out
repnz
add
daa
lahf
push
push
xchg
mov
dec
imul
dec
or
cli
cmp
outsb
adc
mov
jb
out
cmp
test
test
inc
inc
js
lods
movsb
fcmovnb
sbb
insl
insb
add
push
sbb
pop
pop
call
dec
push
fmuls
ljmp
fs
jecxz
sbb
mov
push
xchg
andl
loope
lea
insl
dec
dec
fwait
repz
ja
mov
js
mov
lahf
dec
mov
sbb
mov
pop
push
lcall
in
repz
test
adc
inc
sbb
clc
xchg
out
lahf
insl
lcall
xchg
push
int3
sbbl
jne
or
lret
jns
sbbl
jecxz
and
jbe
mov
xor
cmp
pop
mov
mov
or
inc
outsb
push
cmpsl
mov
mov
pop
aam
sbb
sub
faddp
mov
xor
into
mov
inc
mov
les
dec
cmp
fwait
pop
xor
mov
lahf
mov
enter
pop
xor
dec
or
mov
xchg
lahf
pusha
adc
divl
mov
jb
push
sub
and
jmp
push
lahf
repz
fstps
mov
jb
xlat
mov
fistpll
sub
arpl
in
leave
or
cld
cmp
jecxz
loopne
scas
sahf
decb
test
shr
sbb
test
mov
jae
xor
jae
rcl
xchg
unpcklps
push
loopne
inc
loop
std
sub
mov
shlb
das
dec
lcall
sbb
arpl
movb
arpl
add
outsb
jg
sub
mov
xchg
es
pop
add
mov
push
pop
add
inc
fadds
stos
sub
inc
vmovss
push
add
repnz
sub
sbb
jae
jne
sarb
lods
cmc
or
sub
int3
pusha
pop
sbb
ds
lock
mov
inc
dec
or
adc
xchg
dec
mov
sbb
mov
dec
add
bound
mov
jb
adcl
sub
adc
fnstenv
decb
mov
cmp
cmpxchg
ja
pop
and
or
dec
dec
arpl
push
int
jne
lret
xchg
and
cmc
sbb
scas
pop
jb
mov
ret
and
pop
push
xor
cld
test
mov
imul
add
jge
popa
decb
lea
imul
test
aaa
cmc
pop
pop
je
mov
add
sbb
sbbb
jae
out
fidivl
nop
add
lea
repnz
mov
outsl
stc
sar
rdtsc
xor
or
xchg
leave
sub
js
fiaddl
add
mov
popaw
mov
ds
jle
jbe
clc
sbb
rcrb
adc
dec
jmp
dec
dec
pop
pop
dec
das
popf
mov
mov
lods
cmp
clc
testl
in
jbe
add
mov
mov
lahf
jp
push
push
cli
aas
aaa
int3
data16
in
aaa
pop
stc
mov
sbb
sbb
pop
mov
cli
ret
or
test
not
mov
daa
xorb
lds
decl
lods
stos
pop
jge
cmp
rorb
aaa
dec
pop
xchg
daa
pop
cmc
add
insl
data16
loop
pop
imul
dec
sahf
jle
inc
sarb
jns
or
jp
scas
xorl
popf
icebp
xor
mov
mov
aas
mov
or
fldcw
js
aaa
int
jns
cld
or
xchg
es
int3
fucomip
call
jae
mov
sbb
movsb
ficomps
push
movsb
jge
scas
mov
inc
xchg
xchg
insb
clc
mov
push
orl
fsubrl
testb
pop
pushf
lods
lret
pop
pop
popf
pusha
xor
cmp
dec
lcall
xorb
dec
jb
out
cwtl
fnsaves
xchg
xor
add
mov
xchg
xchg
push
adc
outsl
jnp
push
mov
cmp
js
mov
jmp
jp
test
fdivrp
add
add
repnz
lahf
pushf
fcmovnbe
add
cmp
adc
pop
xchg
lret
mov
lods
aam
cmpsb
mov
adc
pushf
fwait
adc
jmp
mov
push
adc
gs
sbb
lock
aas
in
movl
xor
cmp
lods
mov
scas
andb
fbstp
leave
cld
dec
cmc
xor
xlat
dec
stos
shrb
xor
xor
cltd
pop
outsb
sub
mov
pop
pop
repnz
test
das
xchg
adc
xorb
std
push
leave
adc
js
mov
enter
rcrb
das
push
add
dec
arpl
icebp
mov
fcoms
out
push
jae
in
icebp
dec
in
mov
sbb
lea
jno
out
loope
stc
or
fdivrl
add
cmpb
insl
inc
sbb
adc
ret
cmp
lods
in
divb
sub
xchg
adc
sub
push
dec
xchg
nop
pop
out
test
leave
and
scas
mov
jecxz
and
mov
mov
mov
pop
dec
mov
jo
stos
mov
mov
cmp
pop
jae
in
loope
adcb
mov
mov
ficoml
inc
out
pop
cmc
pusha
mov
mov
xor
push
inc
push
stos
adc
outsl
adc
in
imul
popa
fwait
xor
fists
push
subl
push
mov
pusha
mov
add
or
in
in
call
add
out
adc
add
fxtract
shrl
lret
loop
jbe
sbb
pop
mov
stc
not
fs
mov
jle
pop
push
stc
rol
in
add
dec
shlb
rol
push
lcall
hlt
and
lret
fistpll
cmc
imul
insl
loope
inc
cld
insl
call
hlt
dec
sub
xchg
sbb
inc
dec
adc
test
das
jmp
cld
idiv
lods
dec
inc
lods
scas
repz
fiaddl
jns
es
sbb
arpl
insl
pop
shl
dec
pop
jae
xchg
ret
shlb
xchg
jge
mov
dec
mov
mov
jne
xor
ja
xchg
xchg
and
movsl
push
imul
mov
cld
fistl
mov
repz
jl
ja
and
negb
push
push
out
adc
xchg
push
lods
mov
mov
lret
xchg
das
sahf
fistl
sbb
stos
sbb
test
test
add
mov
sub
jg
fwait
ljmp
and
mov
lock
arpl
lods
rcrb
loopne
negb
push
stc
inc
fwait
push
out
movsb
and
adc
mov
lcall
and
cmp
aas
test
pop
jmp
test
xchg
clc
mov
gs
std
dec
imul
test
ret
decl
in
mov
cli
and
xor
push
cmp
mov
repz
lret
and
das
ret
mov
adc
xchg
or
int3
xchg
call
jae
rcrb
and
aad
and
push
cltd
inc
add
ficomps
js
push
ljmp
les
xchg
lea
fimuls
iret
push
cli
jb
sti
div
int
int3
sbb
add
inc
bound
pop
cmp
cltd
decb
cmp
mov
loopne
dec
mov
push
mov
jecxz
outsl
cld
adc
cmc
in
mov
and
sbb
aad
fwait
pushf
xor
mov
or
std
test
inc
repz
lock
lock
pop
jmp
sub
jmp
sbb
stos
jne
mov
and
hlt
mov
jmp
adc
push
jbe
shll
sub
push
sbb
pop
scas
and
lods
insb
sbb
xchg
lcall
and
jno
ljmp
das
sbb
out
fdivl
fstps
push
and
xor
sub
inc
inc
les
lods
mov
js
inc
jecxz
pop
dec
out
fidivrs
out
out
das
ret
cmpsl
lock
adc
sub
aas
cmpsl
adc
inc
add
push
pop
adc
int3
test
test
add
sti
or
pop
push
lahf
int3
lods
inc
xlat
lret
or
adc
xor
or
je
mov
lahf
push
push
pop
or
out
push
iret
pusha
daa
pop
sbb
xor
xor
mov
mov
fwait
mov
jmp
fdivrs
gs
mov
inc
mov
ret
pop
sub
jl
sbb
and
in
fbstp
int3
jp
lods
xchg
xor
sbb
lcall
out
inc
and
pop
xchg
dec
dec
adc
ss
add
and
mov
pop
xor
rcrl
lds
movsl
test
mov
mov
bound
or
jmp
enter
lcall
jle
add
addb
or
mov
enter
fcmovbe
subl
push
cmp
sub
popf
push
jmp
pop
mov
mov
pop
and
jg
shrb
push
fldenv
xchg
mov
mov
and
xchg
std
hlt
out
sbb
add
outsb
cmc
jle
into
jg
xor
test
xchg
cld
rcrl
jbe
stc
fistps
pop
cmpsb
push
push
xor
fsubrp
mov
xor
push
repnz
fcmovne
bnd
loopne
test
add
out
fcmovbe
stos
sbbl
xchg
xchg
loop
ss
movsb
test
sub
cld
test
mov
hlt
ds
out
leave
fwait
outsb
test
nop
pop
adc
ret
aam
out
lret
push
sub
nop
mov
jge
in
pop
cmpsb
jae
mov
push
icebp
xor
push
insl
not
je
adc
push
iret
or
push
dec
jbe
xlat
adc
movsl
aaa
addr16
add
hlt
ss
int
fidivl
imul
dec
cmp
insb
outsl
out
ret
pop
push
bound
add
mov
lcall
pop
fidivl
imul
mov
adc
stos
cmp
repnz
xorb
lock
mov
and
push
jle
push
mov
iret
dec
int
in
jl
xor
bound
push
or
outsb
pop
jge
pop
mov
push
push
push
into
js
pop
lahf
fistps
pop
push
mov
add
or
sbbl
jmp
jmp
dec
imul
test
dec
push
int3
push
pop
rolb
inc
jbe
outsb
jbe
mov
jp
lds
enter
shlb
repz
imul
out
leave
lcall
xor
jno
push
add
xchg
popf
mov
cwtl
push
pusha
movsb
les
movsl
nop
mov
ds
dec
dec
xchg
bound
xor
jnp
mov
mov
sarl
mov
fimuls
or
rcll
xchg
lahf
pop
xchg
movsb
loope
popf
or
jmp
in
cmp
add
mov
or
xor
sbb
sub
and
mov
jo
mov
cmp
imul
sti
addr16
pop
fldt
sub
aad
cmpb
cmc
inc
dec
test
xor
aas
ljmp
fs
subb
test
in
push
lret
xchg
mov
or
dec
jns
xor
jg
jg
cmpb
add
test
in
and
pusha
fistpl
sbb
mov
jmp
and
into
pop
cli
and
mov
fwait
test
and
subl
imul
imul
icebp
mov
insl
push
test
add
repz
ds
cmp
outsl
cmp
lods
call
lcall
xchg
dec
jae
sbb
std
or
cs
int3
call
pop
sbb
fsubp
sti
mov
cmp
push
scas
je
inc
push
jg
jno
stc
int3
call
adc
out
cmp
jg
dec
jle
and
insl
popf
jae
xchg
push
mov
sbb
pop
push
pop
xor
add
fs
insl
xchg
je
pop
sub
jno
loope
pop
inc
daa
push
loop
push
or
cli
addr16
cmp
imul
add
mov
dec
mov
sbb
loope
push
popf
push
and
pop
stos
imul
and
mov
sub
cs
push
mov
cld
leave
addb
and
icebp
or
addr16
repz
sbb
lcall
clc
xchg
test
shr
outsb
mov
imul
clc
mov
push
xor
outsl
mov
add
cmc
ljmp
add
lock
or
inc
dec
inc
in
pop
or
inc
fisttpll
int3
daa
push
fidivl
jnp
cmc
mov
xchg
clc
sbb
xchg
jge
xor
enter
and
add
rcrl
add
in
push
sbb
out
xor
cltd
aad
cs
pusha
mov
and
mov
fsubrl
int
and
or
jmp
push
jg
pop
push
or
jle
rclb
mov
mov
mov
cld
xchg
push
mov
das
mov
push
cli
dec
dec
sbb
xchg
push
jg
or
mov
sbb
cli
add
in
push
push
mov
leave
xor
xlat
and
rcrl
jg
inc
arpl
ja
jb
imul
or
jns
outsl
adc
arpl
loop
sbb
lea
xchg
ret
push
ret
cmpsb
jbe
adc
out
mov
push
and
adc
or
xor
rcrl
push
or
sub
mov
mov
jecxz
mov
cwtl
fs
popa
in
cli
push
or
or
popa
cli
dec
mov
rorl
pusha
and
sub
and
xor
data16
mov
enter
sub
movsb
cltd
inc
lods
adc
mov
adc
stc
jp
xchg
jmp
mov
dec
mov
outsl
dec
stos
push
pop
shlb
mov
int3
repnz
xchg
sub
cmpsb
or
fnstenv
cmp
xor
add
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubl
add
popa
inc
add
popa
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
arpl
movsb
arpl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
addl
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
inc
add
addl
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
test
movsb
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
