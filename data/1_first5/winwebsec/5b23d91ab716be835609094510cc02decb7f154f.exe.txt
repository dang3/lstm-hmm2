mov
push
sbb
adc
mov
mov
add
bound
adc
or
add
sbb
and
xchg
imul
add
add
int
push
addb
adc
insb
sbb
add
sub
ret
add
xorb
mov
mov
and
adc
add
or
nop
or
lods
adc
or
and
adc
add
add
test
inc
or
rolb
or
insb
sbbl
addb
addl
inc
add
or
mov
add
or
add
shlb
or
add
and
add
dec
lock
shlb
add
orb
aaa
addb
and
add
or
add
pop
push
inc
mov
adc
add
add
mov
rclb
and
orb
add
add
xor
add
sub
add
add
add
mov
nop
addb
push
movsb
sbb
pusha
test
add
add
fs
xor
insl
and
rorl
dec
pushf
adc
lds
or
lret
add
inc
mov
and
inc
inc
test
add
mov
sub
mov
push
inc
add
addb
inc
mov
add
in
xchg
dec
cmp
adc
and
icebp
adc
add
adc
or
test
add
sub
daa
jns
or
and
sub
add
addl
mov
xchg
mov
or
inc
add
add
add
push
add
pop
aam
enter
inc
add
add
add
xor
jo
mov
orb
sub
add
and
add
add
and
add
or
push
add
nop
xor
add
dec
inc
add
test
or
add
or
addl
add
add
subb
sub
inc
sbb
inc
inc
sub
inc
inc
movsl
dec
add
adc
add
or
inc
sbb
sbb
loop
inc
mov
addb
sub
and
loopne
add
orb
add
pusha
add
adc
xchg
add
add
add
adc
add
adc
add
pop
roll
orb
add
rolb
test
add
mov
xor
add
addb
and
ret
outsb
aam
inc
add
adc
inc
add
sub
xor
and
sbb
cmpb
add
mov
add
xor
dec
ret
adcl
push
add
pusha
addb
xchg
addb
xlat
inc
insb
cwtl
push
add
or
add
and
out
test
sub
mov
addb
jo
pusha
or
add
test
or
subb
addl
add
sbb
add
or
js
add
add
add
adc
push
adcb
ret
push
or
sbb
or
sbb
add
add
or
add
sbbl
mov
and
add
addb
andb
push
and
sbb
add
inc
add
add
loopne
or
inc
add
enter
movsb
lds
push
adc
add
adc
adc
add
add
inc
xor
cvtpi2ps
and
or
add
arpl
adc
dec
add
push
add
movsb
adc
or
add
sbb
push
xor
add
orb
fwait
add
and
mov
lcall
sub
add
adc
adc
or
and
pop
add
mov
movsl
adc
add
and
add
add
jo
fadds
or
pop
and
adc
orb
addb
and
add
popf
adc
adcb
add
and
adc
mov
sbb
shlb
mov
sub
pusha
add
xor
add
addl
add
inc
add
add
adc
adc
add
adc
xor
cmp
adc
dec
adc
sub
add
add
dec
adc
test
or
addb
or
addb
add
add
or
inc
inc
dec
inc
and
add
and
test
adc
inc
and
and
add
inc
loope
test
xor
add
or
xchg
add
add
add
xor
add
popa
mov
adcl
inc
add
adc
adc
sbb
sub
add
add
jo
and
sub
mov
xor
addb
cwtl
and
or
and
add
add
and
inc
push
addb
add
jb
rcrl
add
sbb
inc
test
push
inc
ret
xor
sbb
inc
inc
add
rolb
orb
and
adc
push
add
inc
inc
add
enter
and
and
add
insb
mov
or
inc
andl
inc
add
pusha
add
nop
add
or
mov
add
or
inc
sub
or
adc
add
mov
inc
addb
les
add
adc
add
andl
cmp
xchg
and
xchg
push
mov
or
and
or
add
addb
inc
dec
addb
add
subb
add
inc
aam
and
movsl
addb
sub
sbbb
ret
add
leave
or
test
inc
and
add
bound
add
ret
xchg
push
test
push
ret
add
add
xchg
push
mov
xchg
adc
and
je
push
or
mov
mov
inc
add
push
add
adc
and
add
xor
or
sbb
add
sbbb
add
add
add
dec
inc
and
adc
pop
push
add
mov
add
add
add
sub
orl
rolb
lret
mov
add
addb
add
pop
add
xor
dec
add
add
arpl
and
pusha
and
dec
add
xchg
add
inc
or
push
mov
add
pusha
and
cmp
mov
add
or
add
adc
add
and
or
xor
pop
enter
push
cmpsb
adc
bound
add
push
add
push
inc
orl
and
test
jo,pn
sub
inc
and
inc
add
addl
and
and
mov
and
shlb
adc
add
js
and
push
addl
or
add
add
or
add
add
push
push
shrb
push
push
push
inc
adc
loopne
mov
call
push
adc
mov
and
mov
add
add
cmp
add
inc
add
inc
lods
pop
push
nop
inc
dec
add
add
add
add
add
mov
sub
inc
or
push
or
push
fcoms
mov
xchg
push
pusha
xor
add
inc
movsl
push
inc
nop
dec
add
bound
add
andb
add
test
addb
inc
in
inc
adc
or
test
dec
xor
and
or
clc
orb
add
inc
pusha
add
pusha
inc
and
xorb
rorb
cwtl
adc
xor
mov
inc
adc
adcb
addl
pop
addl
adc
xor
test
sbb
mov
add
mov
mov
and
les
inc
add
xchg
lds
add
add
dec
sub
inc
inc
adc
add
add
addb
add
and
push
xor
mov
pusha
lret
and
inc
hlt
mov
add
pusha
add
and
adc
test
add
add
add
mov
and
add
add
add
add
or
test
and
add
and
mov
popa
addb
add
and
aam
and
sub
and
push
push
andb
add
add
inc
addb
or
aam
or
pop
mov
add
adc
or
shrb
mov
add
adcb
cmp
add
sahf
shlb
mov
adc
add
add
sub
mov
inc
inc
addb
add
push
test
adc
and
lods
add
or
dec
sub
inc
addb
xor
add
rolb
and
mov
add
bound
and
adc
push
and
add
adc
nop
lcall
mov
or
les
or
add
popa
or
mov
add
adc
inc
mov
or
xor
aam
andb
andb
repnz
inc
add
or
dec
add
inc
sub
or
add
addl
test
push
and
loopne
or
add
mov
mov
or
andl
inc
xor
js
addb
inc
inc
xchg
js
add
shrl
push
or
inc
inc
andl
add
push
push
mov
adc
cwtl
add
jo
addb
push
add
add
lret
add
add
add
add
nop
add
xchg
and
nop
sub
add
adc
sub
xor
add
add
push
add
cmp
push
add
adc
and
and
and
stos
and
add
aam
sub
mov
ret
mov
and
add
test
test
dec
add
xchg
xchg
and
push
inc
xchg
or
ret
add
or
sub
and
add
andl
inc
push
add
adc
add
add
or
mov
mov
and
and
addb
adc
pop
rcrl
or
and
and
and
add
add
add
jno
and
push
adc
rcrb
inc
and
pusha
add
sub
inc
push
dec
xor
push
add
push
inc
inc
push
je
adc
and
mov
add
adc
add
movsb
add
inc
push
add
mov
pusha
test
add
mov
xchg
sbb
add
sub
or
jae
add
add
addb
or
and
and
add
and
mov
sbb
add
add
adc
ret
mov
adc
add
adc
add
sbb
mov
inc
add
add
mov
add
add
or
xor
xchg
ret
sbb
add
inc
push
and
add
add
and
jecxz
or
adc
mov
add
or
dec
xchg
rclb
or
js
inc
test
mov
test
sbb
bound
add
and
inc
add
xor
add
pop
xchg
adc
imul
push
or
add
ret
add
addb
add
add
fisubrl
test
xor
push
add
inc
andb
or
sub
cmp
loopne
add
add
sbb
dec
inc
push
add
add
add
add
or
add
inc
adc
inc
je
add
sbb
inc
test
test
xchg
and
adc
add
and
add
and
adc
add
adc
test
and
and
xor
nop
and
or
add
push
add
push
or
add
add
andb
and
and
add
or
adc
adc
push
add
inc
nop
cmp
add
adc
add
add
xorb
test
daa
add
cltd
add
sbb
add
or
push
push
and
subb
inc
xor
add
shlb
add
add
mov
sub
jo
and
and
cwtl
cmp
dec
adc
add
xor
inc
adc
add
xchg
add
sbb
enter
adc
or
add
add
and
dec
shll
add
add
and
or
add
push
rclb
add
sub
xchg
and
push
and
inc
inc
add
adc
mov
cmpsb
adc
add
add
shlb
add
inc
movsb
adc
add
and
imul
sub
cmp
or
adc
popa
loopne
xchg
and
shlb
and
lods
add
inc
adc
xor
addb
mov
add
add
add
mov
adcb
add
sub
and
sbb
mov
add
and
xor
dec
mov
add
add
add
test
xor
push
push
pop
push
sbb
loopne
push
nop
or
and
sbb
adc
inc
add
add
addb
adc
mov
inc
or
add
inc
and
add
xchg
add
add
inc
xchg
inc
push
add
push
push
cwtl
gs
inc
add
add
add
dec
add
int
inc
inc
and
rclb
add
add
pop
test
nop
pusha
sbbb
addl
push
mov
inc
or
and
and
add
push
add
orl
add
inc
inc
inc
xchg
pusha
add
loope
addl
and
add
add
test
push
add
add
call
add
add
nop
add
add
push
orb
shll
xor
xor
sbb
inc
enter
nop
add
and
mov
push
adc
adc
add
and
mov
or
add
dec
test
dec
sbb
shlb
xor
imul
add
sbb
ljmp
xor
adc
test
inc
inc
adc
and
add
and
adc
and
ss
inc
mov
add
addl
test
adc
add
and
add
sbb
and
sub
and
add
xchg
add
add
adc
shll
add
test
and
add
or
inc
add
add
fiaddl
loop
add
and
pop
add
dec
ret
inc
and
popa
jo
xor
or
pop
adc
xor
or
and
xchg
add
loop
add
add
scas
adc
adc
mov
adc
aam
or
or
mov
xchg
stos
or
pusha
and
and
or
add
addb
and
arpl
adc
push
or
jno
pusha
mov
mov
adc
add
inc
push
adc
push
dec
and
sbb
jmp
push
and
adc
and
mov
add
or
and
add
xor
xchg
adc
inc
les
xchg
test
add
mov
adcl
add
test
dec
and
add
sbb
add
add
mov
js
add
popa
add
add
add
loopne
push
inc
add
add
dec
add
adc
adc
push
add
leave
rcrb
addb
or
mov
inc
adc
insb
push
add
add
adc
and
add
or
add
and
movsb
mov
add
push
add
sbbl
add
inc
add
shll
shlb
rolb
rclb
or
and
adc
ret
pusha
adc
addb
push
hlt
mov
add
xor
and
nop
movsb
bound
add
and
inc
add
or
inc
dec
or
add
and
rcl
add
sub
and
aad
add
xchg
inc
or
add
nop
push
adc
adc
andb
add
or
addb
push
and
or
add
mov
rolb
adc
popa
push
outsb
add
dec
sbb
pusha
mov
inc
andb
add
or
mov
or
sbb
or
insb
add
add
add
mov
push
add
push
cmp
addb
addl
inc
inc
rolb
inc
sbbb
xchg
add
or
add
sbb
or
inc
xchg
inc
cmp
or
and
inc
xor
add
dec
inc
js
adc
add
shlb
inc
mov
and
mov
and
add
or
and
mov
or
adc
les
ror
and
add
adc
add
and
push
jb
add
andl
and
add
add
or
push
add
push
adc
test
mov
pop
mov
subb
mov
or
push
push
and
or
adc
cmpsl
les
inc
mov
xor
or
and
add
test
add
add
add
loope
orb
add
addb
orb
add
or
adc
es
addb
or
add
and
or
add
dec
inc
inc
addb
inc
pusha
push
add
test
add
or
sub
add
xchg
add
sub
add
add
and
add
add
add
test
or
and
mov
and
adc
xor
loopw
mov
add
and
addb
inc
or
loopne
cwtl
cwtl
add
dec
inc
sub
adc
and
adc
inc
inc
or
push
push
orb
orb
or
or
push
adc
push
add
add
push
mov
and
add
adc
xor
mov
dec
mov
test
push
or
sbb
sub
and
adc
pop
jno
push
add
pusha
lcall
test
adc
adcb
dec
mov
movsb
and
loope
add
adc
and
cmpsl
add
inc
rorb
xor
add
and
inc
adc
bound
add
adc
xchg
and
dec
add
lods
add
sub
and
push
dec
and
and
adc
add
add
add
test
sbb
shlb
and
inc
sbb
inc
orb
add
loopne
add
loope
test
cwtl
pop
add
jp
adcb
test
add
xchg
and
add
test
inc
add
sbb
addb
and
add
and
movsl
xor
add
mov
nop
adcb
pushf
shll
push
pop
inc
pusha
and
inc
adc
pushf
mov
mov
andb
roll
dec
adc
add
adc
addl
imul
inc
or
add
dec
inc
add
push
push
add
add
lods
mov
and
mov
bound
addl
test
add
add
add
roll
and
inc
mov
loopne
add
addb
or
add
sbb
add
addb
mov
add
add
push
bound
add
add
mov
sub
adcb
and
add
add
add
add
sahf
mov
and
mov
adc
mov
add
add
sub
dec
and
cmpsb
mov
add
inc
or
or
add
sub
add
ljmp
inc
add
inc
mov
rorl
push
adc
add
into
add
add
rolb
add
inc
push
les
xor
add
movl
add
test
test
and
inc
or
inc
adc
add
add
xor
andl
push
add
in
dec
adcb
add
pop
pusha
inc
add
gs
add
add
or
add
inc
mov
or
push
dec
cmp
add
adc
add
xor
push
and
and
add
and
inc
and
test
js
add
and
add
xor
add
or
mov
add
adc
add
or
and
adc
or
or
sub
or
add
inc
or
inc
repnz
andb
adcl
add
cli
sbb
insl
rolb
inc
add
adc
add
popa
add
bound
or
add
add
dec
and
add
test
add
adc
mov
adc
cltd
and
adc
addb
xor
add
nop
loope
adc
mov
sub
push
add
push
sub
add
and
sub
add
add
add
adc
and
add
bound
dec
mov
inc
adc
inc
inc
loopne
adc
add
movsl
nop
add
ret
nop
add
xchg
jl
sub
and
or
xchg
push
adc
es
adc
add
or
xchg
adc
pop
test
rorb
and
test
adc
add
addb
add
mov
movb
xchg
dec
mov
adc
mov
inc
add
add
xor
sub
sub
xorb
mov
or
adc
adc
sbb
push
jo
sub
and
push
addl
and
add
test
mov
adc
rcl
add
adc
popa
adc
and
rolb
add
test
xchg
inc
add
or
adc
add
or
loopne
and
add
add
add
bound
sub
or
addl
mov
test
add
or
inc
les
dec
mov
inc
les
push
adc
add
andl
add
add
xchg
add
and
add
or
add
add
and
andb
inc
adc
inc
inc
cmp
and
or
lods
xchg
xor
inc
push
imul
mov
add
or
add
adcb
push
sbb
and
add
add
add
add
push
or
and
pusha
add
xchg
and
inc
add
and
sub
add
and
add
and
add
and
adcb
and
roll
and
add
and
add
and
dec
or
addb
and
inc
pushf
or
imul
add
roll
xorl
push
and
push
imul
rol
add
push
nop
mov
adc
dec
test
mov
push
or
popa
shlb
and
adc
mov
addb
sub
and
pusha
or
add
imul
adc
dec
adcb
add
add
inc
or
sub
and
adc
shrb
add
adcb
and
xor
add
adcl
inc
mov
addb
inc
add
push
or
test
add
cltd
sbb
push
push
sub
adc
cld
or
rorb
add
add
xor
sub
rorb
adc
add
lsl
or
xor
inc
mov
nop
adc
mov
add
add
sbb
mov
mov
test
and
adc
add
sub
pusha
int3
add
movsb
addl
add
dec
add
mov
push
and
adc
push
push
add
dec
dec
adcb
pop
andl
adc
and
cmp
add
push
add
inc
cmpsb
stc
or
adc
or
xor
and
or
push
push
pusha
add
adc
add
add
and
mov
push
add
add
inc
cmp
orb
addb
sahf
and
cmp
xchg
sub
add
add
mov
add
cmpsb
add
and
jo
adc
add
adcl
pusha
inc
and
pusha
sbb
xor
adcl
add
mov
jl
es
add
add
nop
add
add
xchg
adc
test
or
or
add
mov
or
add
xor
or
add
mov
or
add
nop
inc
and
or
add
push
sbb
and
xor
adc
inc
mov
and
cltd
and
bound
add
and
pusha
in
and
jo
dec
addb
inc
nop
inc
mov
add
adc
adc
xchg
subb
push
add
and
or
or
add
add
push
or
inc
andl
add
and
add
add
push
addb
add
dec
add
es
pusha
add
push
dec
addb
adc
add
inc
adc
and
adc
add
xor
xchg
add
add
adc
cmp
inc
add
add
add
leave
add
adc
stos
add
insb
xchg
roll
addb
andb
add
lods
sbb
and
add
inc
pop
rolb
xchg
push
andl
shlb
add
or
add
add
cwtl
add
nop
add
add
movsb
movsb
test
add
adc
add
add
mov
add
adc
dec
add
sub
loop
add
or
addb
inc
enter
cwtl
add
add
add
pusha
sbb
xchg
push
adc
push
inc
add
test
push
and
xor
sbb
adc
add
or
jne
add
andl
add
add
inc
inc
sbb
ss
add
add
and
orb
inc
or
subl
add
adc
sbb
add
sbb
inc
push
cmp
inc
and
add
and
add
and
sbb
andl
fimull
add
add
adcb
push
shlb
xchg
add
and
es
and
or
test
xchg
addb
or
sub
add
inc
add
in
xor
or
and
mov
in
sub
test
add
and
unpcklps
rolb
js
xchg
mov
add
add
add
or
xchg
mov
test
adc
bound
inc
imul
and
sbb
dec
mov
mov
inc
shrb
xor
adc
push
add
inc
add
daa
add
jmp
and
xor
test
add
enter
add
or
dec
and
loopne
inc
or
adc
add
mov
pusha
orb
inc
and
add
or
rol
adc
and
push
and
loopne
add
or
add
cmp
add
add
and
and
and
dec
xor
mov
dec
test
dec
or
mov
inc
sub
bound
dec
or
daa
add
or
call
adc
add
add
add
shlb
add
inc
and
ret
and
mov
aad
fwait
add
add
add
inc
aad
add
sbb
sbb
or
addb
add
inc
add
inc
sub
aaa
add
test
add
add
fsubs
add
add
daa
cmp
add
movsb
or
adc
push
and
addb
sub
sbb
inc
add
lods
add
sbb
xorl
addb
cmpb
add
and
pushw
xchg
add
dec
or
push
fs
add
inc
inc
add
mov
inc
add
inc
add
add
sbb
push
add
popa
les
xchg
pop
inc
inc
push
cmp
fadds
xor
adcl
dec
adc
add
add
add
ret
inc
addb
and
add
adc
or
inc
add
and
mov
sbb
add
xor
push
inc
or
inc
add
push
add
add
or
xor
add
sbb
and
add
addb
or
add
push
mov
inc
and
mov
add
or
add
and
push
mov
add
mov
adc
addb
and
inc
add
add
add
add
or
push
cmp
mov
mov
push
add
inc
or
add
add
add
and
cmpsl
inc
inc
add
add
push
dec
inc
nop
add
pusha
mov
add
or
mov
add
or
push
sbb
adc
add
sbb
or
add
ret
adc
push
adc
add
sbb
push
xor
add
and
adc
sub
add
pop
inc
add
dec
dec
add
arpl
inc
adc
loopne
and
xor
sub
add
inc
addb
or
sub
push
adc
and
add
push
add
push
add
adc
xchg
sbb
add
add
jo
add
es
add
add
push
add
add
inc
addb
add
inc
addb
add
andl
adc
or
int3
and
dec
add
add
or
xor
add
icebp
adc
push
cmp
sub
xor
add
add
adcl
add
push
adc
sbb
mov
jo
inc
add
and
dec
or
pusha
add
test
or
add
add
mov
xchg
xor
sbb
adc
andb
movsb
inc
inc
cmpsb
mov
xor
dec
rclb
cltd
out
inc
inc
rol
add
or
add
and
and
dec
push
or
adc
or
or
or
leave
xor
inc
adc
sbb
or
add
adc
xchg
and
adc
push
dec
xor
inc
sbb
mov
inc
add
add
add
add
add
loopne
nop
and
adc
xor
and
dec
add
add
add
adc
inc
xor
inc
add
or
test
add
test
xor
and
add
add
scas
sbb
and
jnp
movsl
adc
subb
addb
or
adc
enter
and
and
cs
add
mov
dec
and
adc
add
pushf
andb
add
or
adc
add
cmp
xchg
cmpsb
add
sub
add
or
add
add
sub
mov
sub
addb
adc
push
adc
add
add
dec
sbb
test
shrb
push
sbb
insb
sbb
sbb
add
rclb
add
add
adc
nop
and
dec
add
xor
add
adc
add
nop
add
add
addb
test
push
inc
add
add
inc
mov
pusha
mov
add
adc
sbb
add
andl
inc
adc
adc
push
xchg
repz
adc
add
lds
inc
add
into
adcb
xchg
addl
add
call
inc
push
pusha
xor
adc
push
dec
and
add
add
xchg
push
inc
add
and
and
mov
test
add
add
inc
inc
add
and
and
inc
add
add
or
or
nop
adc
push
adcb
adc
sbb
mov
add
imul
xor
push
push
adc
addb
rolb
add
or
cwtl
addl
jno
and
push
and
cmp
add
or
or
pushf
or
fs
inc
aam
test
sbb
and
xchg
add
push
or
jo
adc
or
add
and
and
sbb
inc
add
or
and
lea
xor
push
adc
add
xchg
or
add
add
adc
inc
ret
add
add
add
add
es
or
adc
adc
adc
add
sub
and
inc
inc
and
sub
inc
addl
and
add
inc
inc
inc
test
xorl
xor
call
and
mov
or
add
test
inc
orb
or
add
or
inc
in
add
dec
add
inc
adc
and
add
and
addb
xor
adc
adc
dec
add
adc
xor
and
andb
rolb
dec
add
push
mov
test
mov
add
ret
sub
addl
lea
xor
xor
adcl
pop
or
ret
xor
push
add
loopne
push
and
or
adc
and
add
mov
andb
cmp
push
inc
inc
inc
orb
lods
mov
and
mov
xor
orb
add
add
add
push
adc
add
adc
sbb
shll
inc
mov
xorb
add
and
in
mov
push
add
add
add
sub
add
push
adc
add
add
add
and
inc
push
orb
add
lea
pusha
or
pusha
and
adc
xor
xchg
test
mov
add
addl
add
adc
or
cmp
rol
and
cmp
and
mov
mov
shlb
sbb
mov
add
xchg
dec
xchg
inc
sub
popf
orb
mov
or
or
push
mov
addl
push
test
xor
addb
dec
sub
add
push
and
mov
nop
sbb
adc
or
add
sbb
pusha
nop
add
add
add
jo
ljmp
add
adc
xor
rolb
add
or
and
or
xchg
add
push
add
adc
orl
add
push
lock
or
sub
and
add
add
push
add
or
or
nop
pop
or
push
add
push
cmp
dec
add
adc
sbb
push
mov
and
or
add
and
add
or
inc
adc
or
inc
add
add
and
xchg
pop
js
adc
push
bound
adc
add
mov
bound
add
push
pop
inc
and
add
add
shrl
adc
or
push
add
or
adc
add
add
adc
add
or
add
test
mov
and
add
xor
ret
add
test
add
push
add
and
or
mov
sub
add
xor
mov
sub
add
cmp
inc
mov
and
add
andb
inc
fs
mov
pusha
orb
add
add
adc
inc
inc
nop
add
nop
dec
or
mov
mov
add
xchg
and
inc
xorb
or
and
rorb
xorb
add
mov
je
test
add
or
push
or
inc
lea
add
andl
dec
sub
sbb
add
or
inc
and
push
and
inc
add
inc
or
add
mov
adc
adc
mov
add
sbb
test
add
or
xchg
test
or
test
inc
add
adc
mov
xor
push
inc
and
pusha
add
sbb
add
xchg
add
roll
and
add
adc
and
or
dec
adc
sbb
pop
adc
adc
pusha
add
addl
adc
inc
or
mov
inc
push
or
test
cltd
add
test
and
inc
add
add
adc
rclb
adcb
and
xchg
pusha
mov
or
test
cmp
test
adc
add
xor
sub
adc
push
push
add
or
add
add
add
repnz
shrl
pop
adc
push
ds
jns
add
xchg
dec
adc
andb
addl
push
and
enter
or
add
and
add
push
inc
mov
mov
mov
test
dec
inc
mov
xor
xchg
or
xchg
xchg
add
and
bound
sub
add
add
add
or
jo
add
mov
xor
addb
addb
sub
add
add
push
lret
inc
add
add
sbb
adc
xchg
and
add
or
add
add
mov
add
add
or
xor
add
adc
add
sub
add
sbb
movl
inc
add
or
cmp
inc
xor
cwtl
dec
adc
sub
dec
and
inc
adc
adc
inc
mov
loopne
pusha
cmpsl
and
adc
adc
add
adc
sub
pop
addb
push
or
leave
add
add
add
adc
add
add
add
jo
sub
inc
test
inc
add
cs
bound
push
dec
and
inc
mov
in
les
jb
add
and
adc
and
add
sbb
xchg
pusha
adc
add
add
add
adc
and
or
loopne
add
xor
sbb
test
and
mov
push
inc
cwtl
add
push
add
dec
adc
inc
push
inc
and
or
add
nop
pop
orb
sub
addb
add
push
add
adc
adc
inc
inc
imul
stos
add
enter
add
les
and
push
jo
fwait
add
and
les
or
and
or
add
push
inc
add
add
push
push
or
inc
mov
dec
add
mov
or
adc
test
adc
or
mov
dec
adc
sub
and
dec
inc
bound
add
or
xor
add
addl
mov
addl
xchg
and
lcall
jb
adc
adc
inc
add
sub
jbe
add
mov
rorb
add
inc
dec
es
inc
add
add
or
and
cmpsl
add
subb
andb
pusha
push
and
adc
sbb
add
and
xchg
push
bound
mov
es
sub
add
add
add
and
add
popa
adc
nop
lock
and
adc
cmp
adc
ret
add
inc
popf
add
inc
and
and
sub
adc
inc
inc
test
sbb
add
add
popa
add
sub
push
and
add
insb
adc
dec
rolb
addl
add
mov
inc
adc
repnz
add
adc
add
inc
arpl
and
and
bound
adc
sbb
cmpsl
add
shlb
rolb
inc
mov
sbb
and
add
sub
adc
mov
rolb
push
or
add
mov
adc
test
nop
add
mov
in
adc
xchg
add
or
enter
mov
pop
and
xchg
sub
mov
jbe
and
add
xchg
add
roll
and
enter
mov
dec
add
push
movsb
and
or
adc
rorb
xchg
sub
addb
add
xchg
add
cmp
sarl
and
or
adc
xchg
aam
addb
inc
adc
add
add
add
mov
dec
nop
adc
add
xor
or
and
xorb
popa
inc
push
inc
or
dec
add
and
or
add
add
and
add
pop
push
add
or
sub
adc
sub
and
rcll
or
mov
add
cmpsb
or
add
xchg
rolb
add
and
push
inc
add
or
inc
mov
push
add
add
add
ror
add
roll
xor
push
dec
add
sub
inc
mov
and
cmpsl
int3
add
mov
mov
addb
popa
mov
add
inc
add
push
jo
and
and
mov
adc
addb
orb
adc
add
or
inc
or
sahf
pusha
xor
adc
sbb
adc
and
and
add
add
mov
call
adc
sbb
ljmp
and
push
and
sbb
adc
mov
adc
add
add
xchg
adc
enter
pusha
add
ret
push
add
and
inc
xor
daa
add
push
add
xor
cmpb
nop
addb
push
mov
movups
add
xchg
popa
inc
or
adc
push
jo
adc
add
repz
and
add
add
inc
dec
les
add
sbb
adcb
pop
add
sub
dec
adc
add
loopne
add
andb
pop
sub
or
mov
les
adc
add
push
or
add
add
sbb
test
rolb
mov
add
mov
addb
push
add
inc
and
and
rolb
call
ror
lret
rorb
or
lret
add
dec
pop
xor
adc
adc
adc
and
adc
mov
add
test
add
ret
dec
and
add
add
andb
inc
andb
sbb
add
mov
subb
cmp
out
add
add
adcb
addl
inc
pop
sub
nop
nop
or
dec
dec
addl
inc
push
andb
and
dec
xor
add
cmp
or
add
push
add
dec
inc
andb
push
sub
and
dec
xchg
mov
and
shll
push
test
and
lock
sub
inc
and
add
add
bound
daa
push
add
imul
mov
push
addb
addl
adc
dec
or
dec
lock
mov
add
add
or
add
add
addb
cltd
add
sub
adc
fs
add
add
or
dec
sbb
push
adc
add
or
cmp
add
loopne
inc
adc
jno
xchg
add
inc
pop
adc
push
and
arpl
or
and
sub
and
sbb
add
inc
and
xorb
pop
or
adc
enter
mov
add
add
addb
adc
add
sub
and
push
sbb
sub
add
add
stos
mov
or
add
addb
movsb
push
inc
add
push
add
add
or
add
aaa
push
sub
inc
mov
inc
add
dec
addb
add
push
add
add
add
sbb
xor
add
or
push
adc
inc
add
inc
or
or
addb
and
mov
add
add
add
push
test
and
add
xchg
or
mov
add
push
add
dec
sub
mov
adc
add
add
add
add
or
enter
add
adc
or
mov
orb
or
inc
or
xorb
sbb
and
or
sbb
mov
sub
and
adc
dec
add
or
and
add
rclb
and
add
and
nop
and
add
adcb
add
add
add
add
flds
sub
cmp
mov
add
dec
sub
xor
pusha
inc
mov
add
or
add
fs
add
or
or
lea
inc
push
inc
add
inc
add
mov
subb
push
add
add
add
add
pusha
inc
add
sbb
sub
xchg
pop
add
pop
add
rolb
or
or
xorl
inc
xor
add
adc
popa
mov
add
adc
sbb
lds
pop
add
adc
add
push
add
and
cmp
add
adc
and
or
add
xor
loopne
add
cli
and
add
orb
and
add
mov
sub
dec
and
mov
or
push
cmp
inc
adc
nop
addl
add
adc
aaa
add
and
or
bound
xor
add
xchg
xor
push
adc
sub
mov
add
add
andl
dec
inc
and
inc
xor
add
add
add
adc
and
or
xchg
or
enter
and
add
andb
or
add
add
add
xor
push
or
inc
inc
cmp
xchg
roll
sub
and
leave
andl
push
add
fsubrs
sub
dec
add
add
add
xchg
add
test
adc
push
or
inc
and
add
add
je
add
or
add
addb
push
dec
add
inc
je
loope
inc
add
or
push
inc
adc
and
and
mov
or
add
adcb
adc
bound
mov
or
add
add
and
test
xchg
adc
es
insb
and
mov
xchg
add
push
or
pop
inc
adc
adcb
and
inc
mov
or
add
add
add
int
and
add
push
or
adc
sbb
inc
ss
test
or
add
inc
add
sbb
or
push
xchg
add
addl
add
add
push
inc
add
add
inc
sbb
add
and
inc
add
in
lock
add
or
add
adc
test
or
orl
enter
or
or
add
mov
add
add
addb
or
pusha
andb
xor
adcl
inc
sbbl
mov
inc
test
adc
dec
add
and
jo
mov
sbb
and
adc
inc
pushf
mov
subb
or
and
out
test
adc
jno
add
add
add
add
cmp
mov
sbb
push
adc
ret
and
and
enter
add
sub
ret
and
inc
or
push
and
loopne,pn
add
push
add
dec
nop
mov
adc
mov
add
add
adc
add
sub
or
inc
mov
fmuls
inc
add
add
sub
imul
adc
sbb
push
add
addb
add
adc
xor
mov
add
pusha
push
and
nop
and
add
roll
add
mov
add
bound
rclb
mov
add
and
add
addb
andb
adc
xor
add
rol
add
or
adc
and
adc
adc
shl
mov
add
sbb
or
mov
adc
adc
adc
and
cmp
movsb
test
addl
add
or
sub
and
movsb
adc
add
and
add
dec
add
inc
or
adc
mov
inc
ret
add
or
inc
les
mov
cld
add
lret
add
nop
pop
xchg
or
and
ret
inc
sub
dec
adc
adcb
push
add
push
mov
add
push
cwtl
add
pop
addl
and
and
add
add
add
add
adc
sbb
nop
add
nop
inc
sbb
add
add
sub
and
inc
and
add
inc
addb
addb
add
adc
add
add
xor
push
inc
adc
add
or
add
inc
daa
inc
nop
add
add
rcrb
mov
add
add
add
jno
push
sub
or
and
pop
test
add
cltd
addb
insb
push
pusha
add
add
xor
mov
shlb
sbbb
inc
adc
add
inc
add
orb
push
push
add
add
andb
or
adc
add
xor
pop
add
scas
movsl
add
and
adc
push
adcb
add
sub
inc
fs
add
adc
pop
or
inc
popa
and
in
add
xor
inc
add
mov
stos
movb
xor
adcb
mov
and
add
jo
addl
je
ret
pop
dec
jb
dec
inc
or
add
pop
xor
sbb
pusha
add
add
adcb
gs
adc
movsb
add
inc
adc
movsb
adc
or
adc
or
and
adc
test
loopne
add
mov
mov
nop
add
dec
inc
add
or
and
mov
mov
mov
sub
mov
and
test
addl
sbb
adc
xchg
push
sub
dec
xchg
or
add
add
mov
mov
adc
add
or
sub
and
lods
mov
adc
addb
xor
popl
mov
mov
mov
rcll
and
stos
les
adc
push
mov
add
adc
add
inc
add
test
cmpsb
add
adc
sbb
inc
sbb
ror
xchg
sbb
sub
or
mov
es
add
inc
adc
loope
and
push
andb
rolb
bound
test
add
xor
or
inc
mov
add
add
inc
add
test
pusha
or
dec
ret
inc
add
addb
add
inc
add
xor
cwtl
push
mov
addb
xor
or
pusha
add
mov
inc
add
adc
add
and
add
lds
sub
rolb
xor
sub
and
inc
push
and
sub
push
add
and
sbb
or
xchg
push
or
and
add
xchg
add
addr16
dec
xchg
inc
adc
les
orl
add
cmp
push
inc
adc
dec
or
or
das
pusha
push
or
pop
lock
sbb
xchg
inc
add
inc
jo
add
push
add
rorb
sbb
xchg
cwtl
add
cmpsb
mov
shll
dec
add
adc
inc
add
and
mov
and
dec
add
or
sub
add
adc
or
lods
pop
xadd
dec
add
add
ror
add
rolb
and
push
call
xorl
and
orl
or
add
add
dec
add
xor
add
adc
add
xorb
andb
add
add
and
add
inc
add
sub
adc
inc
or
or
and
and
push
adc
add
or
jb
cmp
or
shlb
or
addb
add
add
lock
sub
call
inc
dec
and
test
adc
adc
adc
add
add
orb
cmpsb
inc
movsl
add
addb
cwtl
rclb
add
dec
jo
add
ss
or
or
add
or
and
andl
mov
add
addb
cli
add
mov
nop
cwtl
add
add
daa
dec
sbb
and
inc
add
sbb
add
andl
and
daa
inc
add
and
or
add
adc
lcall
adc
and
add
mov
mov
xor
and
nop
adc
push
xor
add
sbb
add
add
shlb
nop
andb
adc
addl
inc
mov
or
xor
nop
and
mov
push
add
addb
inc
jo
adcb
sub
into
add
push
add
inc
add
add
adc
inc
mov
add
sbb
xchg
test
cmp
addb
sub
sub
xchg
and
add
add
xchg
inc
or
add
adc
and
or
cs
add
add
or
js
andb
adcl
push
rolb
xorb
addl
dec
and
inc
popa
add
dec
and
enter
add
cmpsl
push
inc
add
or
dec
adc
add
push
mov
arpl
or
xor
add
mov
inc
add
add
imul
and
add
inc
adc
sub
pusha
or
popa
sub
or
es
pusha
and
orb
sub
or
add
cmp
or
add
or
adc
add
inc
pushf
add
push
inc
xchg
add
or
add
xor
add
dec
and
addb
push
inc
add
add
sub
add
and
mov
and
add
add
lods
adc
add
addb
and
sbbb
dec
adc
or
xchg
add
rolb
and
add
add
ret
dec
nop
mov
inc
out
add
pusha
add
add
xchg
push
nop
imul
dec
cmp
inc
add
mov
push
add
dec
mov
xchg
sub
sub
adc
add
mov
add
add
add
or
inc
addl
add
cmp
jo
and
inc
adc
add
call
sub
andb
add
add
loopne
fsubrs
addb
and
pusha
or
xor
cmp
add
rorb
add
adc
or
adc
add
enter
add
loop
dec
in
jl
sub
or
xor
andl
inc
rclb
add
inc
xorb
mov
inc
sub
or
jo
addb
addl
adc
addl
inc
add
and
addb
andb
add
and
xchg
add
subl
add
and
xor
xor
inc
subb
inc
loopne
add
shlb
sbb
dec
add
mov
mov
dec
add
add
nop
sub
dec
add
add
cmp
and
adc
inc
add
in
and
add
add
push
push
or
or
pop
add
rclb
or
or
dec
add
dec
inc
and
adc
xchg
and
push
test
or
and
add
xchg
add
mov
push
and
or
sub
add
add
add
inc
pop
add
and
shlb
add
orb
add
lods
sbbb
and
add
orb
adcb
addb
xor
add
push
loop
push
pusha
js
lcall
enter
adc
push
nop
add
adc
loop
add
add
add
adc
add
add
xor
and
sbb
mov
add
push
dec
or
sbb
inc
sub
dec
add
sbb
push
push
and
add
add
rolb
xorl
mov
add
xchg
push
js
adcb
or
adc
add
or
adcl
add
add
sbb
sub
and
add
adc
sbb
mov
or
adc
inc
add
add
push
movsb
adc
or
adc
add
mov
inc
dec
nop
push
or
andb
adc
or
push
xchg
sub
inc
adc
rolb
sub
push
push
or
pop
and
dec
mov
inc
and
adc
add
pusha
sub
push
add
addl
add
xorb
or
xor
add
rolb
and
dec
mov
scas
and
and
cwtl
and
and
lcall
pusha
lret
add
add
imul
and
and
add
test
or
inc
and
or
add
nop
inc
addl
and
or
adc
andl
inc
inc
dec
loopne
adc
sub
inc
jb
add
cmpsb
and
add
and
add
add
or
adc
and
add
push
ret
or
inc
sbb
inc
dec
adc
inc
inc
pop
mov
cmp
inc
sub
xchg
inc
or
add
mov
sbb
xchg
or
push
inc
addl
add
adcb
sbbb
add
repnz
adc
pusha
adc
sbb
sub
shll
inc
lds
adc
add
rclb
add
rolb
or
lea
mov
bound
shlb
fisubl
xor
add
adc
pusha
add
cmp
add
push
push
addb
add
pop
add
adcl
add
or
inc
inc
fsubrs
or
call
sbbb
adc
mov
rolb
inc
mov
or
xor
sub
or
adc
pushf
call
or
and
add
enter
add
adc
add
inc
add
and
dec
jbe
bound
and
inc
inc
push
pop
addl
andl
push
add
add
adc
adcb
shlb
mov
rolb
adc
add
adc
enter
push
adc
mov
inc
or
sbb
push
inc
add
xor
add
add
add
dec
nop
add
cmp
and
dec
orl
add
mov
mov
inc
pusha
add
pusha
shlb
mov
adc
popa
add
or
push
add
push
add
adc
add
add
or
mov
add
or
sbb
loopne
add
add
add
add
aam
push
or
add
add
add
adc
or
imul
push
or
dec
shlb
push
lcall
inc
mov
or
and
add
sbb
or
and
push
xor
push
dec
or
adc
add
adcb
dec
pusha
inc
inc
adc
xchg
jo
sbb
sub
mov
add
sub
and
add
lds
inc
add
addb
add
icebp
push
add
repnz
inc
push
adc
inc
orl
inc
add
loope
and
inc
inc
adc
add
xor
adc
xor
and
andb
jo
inc
sbb
pop
dec
or
add
inc
enter
and
and
add
push
ret
add
push
mov
outsb
push
enter
add
and
or
and
push
and
add
add
add
stos
add
fs
mov
add
mov
add
push
loop
add
xor
and
adc
mov
inc
pop
inc
nop
inc
in
lea
loopne
xor
add
or
or
lcall
dec
add
push
add
andb
inc
sub
add
adc
add
push
add
add
or
jae
add
and
or
addb
add
push
loope
push
xor
sbbl
es
or
sub
or
adc
add
adc
add
call
and
cwtl
and
or
sbb
push
push
add
inc
inc
imul
addl
adc
or
popa
or
or
adc
add
or
xchg
loopne
adcb
inc
fdivs
mov
xor
or
std
add
or
add
add
push
or
cmp
inc
add
or
or
mov
push
xchg
adc
and
xor
xor
add
and
add
adc
adc
mov
add
add
add
push
and
add
les
pusha
cmpsb
lret
adc
add
add
pop
mov
add
or
adc
adc
xchg
add
inc
add
adc
add
inc
xchg
inc
add
or
or
or
add
mov
add
xchg
addb
pusha
or
dec
push
add
and
add
or
and
mov
mov
adc
add
mov
add
add
adc
fisubl
or
add
push
inc
rorb
or
inc
sub
nop
mov
or
push
push
jp
push
add
les
push
fsubs
add
inc
xor
dec
add
add
mov
adc
rorl
add
add
and
leave
xor
adc
and
pusha
test
add
add
sub
or
nop
or
js
push
nop
addl
and
test
add
or
inc
push
add
push
adc
addb
adc
add
mov
test
les
ret
sbb
pop
sbb
insb
adc
lock
add
sub
mov
adc
bound
popa
sbb
sub
push
add
pop
push
add
dec
push
or
or
or
or
push
push
test
inc
bound
xor
or
or
push
add
mov
inc
and
inc
les
sub
inc
add
orb
pusha
pusha
nop
or
sbb
or
pushf
or
or
inc
sub
cwtl
orb
inc
add
inc
lcall
add
popa
popa
sbb
add
and
add
rclb
add
xor
sbb
add
and
push
dec
xorb
or
mov
inc
movsb
add
and
inc
inc
inc
adc
add
popa
adc
push
adc
test
inc
mov
add
inc
push
loope
add
inc
add
cmp
inc
movsl
add
add
add
test
or
add
add
jno
add
sbb
andb
add
inc
add
push
sbb
lcall
in
add
adc
and
or
mov
add
push
add
call
push
add
test
add
xor
add
or
add
fs
add
xchg
add
add
jb
and
adc
add
orb
xor
sub
addb
inc
addl
adc
add
adc
mov
xor
or
lea
push
inc
enter
xchg
adc
test
cmp
and
or
or
jno
cmp
inc
lea
push
pop
adc
add
push
sub
addl
add
adc
inc
nop
nop
push
cmp
adc
add
icebp
push
push
xorl
mov
cmp
nop
add
adcb
xor
adc
or
or
or
xchg
andb
test
add
add
sbb
mov
and
mov
inc
inc
mov
add
or
mov
addl
inc
push
or
add
push
push
in
sub
and
pusha
adc
cwtl
mov
add
je
sbbb
add
add
lods
and
inc
sub
orb
inc
adc
add
adc
and
rolb
inc
andb
xor
adc
inc
sbb
sbb
or
lods
xor
and
ljmp
sbb
add
push
test
inc
and
dec
inc
inc
mov
adc
push
lea
push
add
sub
addb
dec
add
add
dec
adc
sbb
adc
push
add
mov
add
push
and
or
mov
adc
push
mov
add
add
and
add
adc
add
adc
and
adc
enter
inc
add
adc
add
xor
inc
or
repnz
add
jb
push
arpl
lcall
push
rolb
or
push
add
add
add
push
add
add
dec
dec
adc
inc
andl
inc
mov
add
add
cmp
add
add
rorb
mov
sbb
inc
addb
test
add
dec
adc
mov
inc
add
add
cltd
sbb
sbb
xchg
xor
or
push
or
add
rolb
add
add
push
adcb
xchg
and
les
inc
cmp
pop
or
adcl
adc
add
and
xor
and
dec
xchg
sbb
and
push
and
add
add
xchg
adc
pusha
add
push
inc
loopne
add
xchg
add
xchg
or
add
or
push
sub
add
sbb
or
subb
mov
ret
add
test
add
inc
mov
adc
add
sub
add
and
orl
rclb
hlt
loope
add
addb
mov
add
orb
adc
add
dec
add
pop
inc
pusha
and
andb
mov
push
add
or
adc
and
xchg
push
add
inc
mov
jo
addb
dec
cmp
jmp
movb
adc
adc
and
or
add
adc
add
adc
inc
or
sbbb
add
inc
xchg
inc
je
inc
mov
and
add
or
inc
adc
add
pusha
and
dec
add
addb
mov
fs
mov
xchg
and
add
or
cs
or
movsb
add
and
push
addb
cwtl
add
inc
sub
add
add
or
xorb
dec
add
or
mov
add
or
cmp
add
mov
adc
xor
add
mov
xor
or
add
inc
and
and
add
cwtl
xchg
add
daa
add
sub
add
addb
or
xor
mov
push
or
andb
add
add
add
movsb
or
adc
sbb
adc
jb
lret
mov
add
adc
add
adcb
add
adc
pusha
adc
nop
or
add
push
add
add
add
and
inc
add
add
add
add
xor
add
add
ret
or
sub
or
or
sub
add
pusha
or
push
add
addl
adcb
add
addb
add
sub
sub
inc
sub
and
push
mov
add
push
add
bound
rolb
or
push
add
dec
andb
add
and
add
and
or
sub
pusha
and
test
add
and
adc
add
push
and
add
add
xchg
add
adc
cmp
push
addb
add
xor
or
pop
repnz
add
add
xchg
or
add
or
orl
nop
inc
push
xor
sub
jo
add
sbb
adc
or
add
xor
bound
add
adc
mov
add
rclb
rolb
adc
add
add
add
add
add
add
add
add
add
and
inc
sub
loope
dec
add
rol
mov
or
and
add
add
andb
push
cmp
inc
subb
and
test
inc
add
adc
xchg
add
add
inc
rclb
add
push
or
add
mov
lds
and
add
pusha
mov
or
add
sbb
add
sub
and
add
adc
adc
and
add
pop
jo
adc
add
dec
add
add
add
push
or
adc
or
add
add
add
movsb
adc
add
add
inc
sahf
mov
add
add
add
add
and
mov
add
sbb
push
mov
add
or
adc
pusha
ret
add
addl
adc
inc
and
inc
add
lods
adc
inc
add
add
insl
add
add
and
add
and
dec
and
dec
add
ret
or
popa
add
sub
add
and
add
push
or
inc
inc
add
inc
inc
add
add
inc
ret
add
add
add
add
or
in
test
mov
orl
add
add
add
test
adc
or
and
add
xorb
es
add
inc
and
or
and
inc
roll
and
and
add
and
addl
movb
add
inc
nop
and
jo
adc
push
and
and
lret
loope
and
and
orl
add
or
sub
adcb
xor
inc
push
adc
or
rolb
add
add
addb
dec
xor
mov
add
and
sbb
and
add
or
inc
adc
inc
inc
adc
add
or
add
add
or
or
movb
add
inc
add
add
add
rorb
or
mov
jo
mov
pusha
add
add
inc
movsb
inc
repnz
or
add
xchg
adc
add
pusha
add
pop
adc
push
roll
add
add
adc
inc
pop
add
add
add
add
push
dec
push
inc
add
add
push
add
xchg
add
mov
push
or
andb
add
add
add
pusha
add
addb
sub
dec
popa
add
and
adc
add
pusha
add
pusha
add
inc
adc
roll
add
inc
and
adc
mov
xor
add
inc
inc
insb
inc
or
sub
xchg
xor
bound
or
sub
sub
inc
and
inc
add
adc
test
inc
mov
addb
and
or
add
xchg
or
rclb
add
and
add
xor
and
inc
xchg
inc
add
add
andb
add
add
add
add
add
addb
add
and
add
add
adc
add
add
adc
addl
add
inc
add
and
and
movb
add
ss
adc
add
mov
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
cmp
leave
mov
push
add
add
add
add
and
add
adc
addb
ret
add
add
add
andb
add
or
jae
add
adc
add
inc
sub
je
add
sub
add
test
mov
add
inc
andl
add
sbb
add
and
adc
adc
adc
mov
repz
inc
add
add
inc
add
push
add
add
add
adc
adc
popa
popa
popa
inc
add
mov
add
lcall
add
lods
lds
inc
xchg
ret
add
add
rclb
add
sbb
add
add
add
bound
xchg
inc
add
add
push
add
add
add
add
add
add
or
mov
add
and
add
addb
and
or
dec
addb
add
inc
and
inc
add
or
inc
addb
add
mov
add
and
mov
inc
andb
add
or
push
leave
sbb
dec
add
and
or
rclb
or
push
add
or
and
adc
adcb
add
adc
and
mov
inc
xor
add
test
add
addb
and
add
add
jb
and
addb
adc
lock
enter
lea
rorl
add
cmpb
andb
andb
or
add
add
add
add
inc
pusha
add
jno
and
inc
add
xchg
insb
orl
add
add
add
add
add
add
and
add
addb
adc
pusha
adc
adc
adcb
add
add
or
add
adc
add
add
add
or
add
les
mov
add
andb
sub
add
push
add
inc
add
dec
and
xor
add
adc
test
push
add
add
inc
and
test
adc
inc
or
add
add
push
bound
add
or
add
add
add
adc
enter
add
and
add
jno
add
add
jae
add
and
xchg
sub
test
and
addb
and
lcall
or
add
popa
add
addl
add
inc
mov
mov
and
and
pusha
mov
test
mov
inc
inc
add
adc
add
imul
addb
and
and
and
rolb
add
xor
add
add
inc
push
mov
add
add
sub
add
and
adc
rcrl
roll
add
addb
adcb
dec
add
add
inc
add
add
and
mov
cmp
add
addb
orb
add
add
add
adc
add
add
add
mov
push
add
inc
mov
and
push
adc
or
popa
add
push
mov
add
inc
add
and
add
add
or
add
add
mov
add
mov
add
inc
add
add
add
add
add
roll
mov
or
sub
and
test
xchg
adc
inc
dec
add
and
add
add
or
or
inc
add
rolb
or
add
add
add
push
add
movsb
inc
addb
add
inc
nop
inc
and
or
and
add
add
add
add
inc
add
dec
xorl
pusha
add
addl
inc
add
and
inc
rolb
test
add
addb
add
add
and
adc
addb
add
mov
and
roll
push
inc
popa
inc
mov
andb
push
inc
or
shlb
add
sub
add
andb
andb
and
addb
and
sub
test
adc
or
adc
add
cwtl
adc
adc
and
add
add
adc
mov
mov
xchg
add
cmp
addb
andb
mov
push
or
or
add
or
add
add
push
and
mov
add
add
add
add
pop
add
adc
orb
and
xor
es
nop
and
pop
adc
and
add
addb
add
add
inc
int
or
dec
inc
sub
add
push
test
add
add
inc
add
add
add
and
add
add
add
inc
or
add
and
inc
addb
mov
add
ret
and
or
add
add
inc
jb
or
add
inc
shlb
addb
addb
or
inc
adc
add
and
add
nop
inc
test
add
xor
inc
push
inc
add
mov
add
xchg
and
add
bound
add
add
ret
inc
add
adc
add
and
and
or
bound
and
cmp
add
mov
xorb
add
add
adcb
or
add
nop
adcb
fs
mov
add
add
adc
pop
jb
and
and
add
dec
pusha
orb
or
mov
or
imul
inc
pop
add
or
add
mov
inc
add
adc
add
orb
test
add
inc
arpl
and
add
add
add
inc
inc
sbb
clc
mov
rcr
adcb
add
and
xor
inc
outsl
addb
adcb
mov
add
add
push
inc
add
add
nop
add
push
add
pop
rclb
or
addl
adc
push
xchg
add
adc
push
add
add
add
sbb
or
add
add
and
add
ret
inc
add
inc
and
add
sub
add
add
xor
addl
add
add
add
add
add
add
or
les
add
or
add
inc
inc
insb
mov
and
roll
add
add
xchg
add
adc
sub
sub
test
add
or
add
add
inc
add
cltd
add
add
adc
add
add
and
adc
push
add
inc
add
adc
and
add
adcb
add
or
add
add
add
add
adc
test
add
add
add
and
add
orb
add
rorb
and
or
movb
ret
rolb
add
adc
inc
add
add
mov
mov
inc
jmp
add
ret
sbb
add
and
mov
addb
pop
mov
pop
add
add
add
dec
xchg
add
add
inc
inc
pushf
add
add
or
inc
or
adc
or
addb
add
and
add
inc
add
add
push
add
inc
adcb
adc
push
add
add
mov
add
add
addb
inc
and
add
add
add
push
push
add
or
adc
or
inc
addl
adc
sub
inc
adc
add
dec
lcall
mov
addl
or
or
nop
add
add
or
push
add
in
or
adcb
adc
addb
add
mov
add
inc
mov
and
add
inc
add
andb
test
pushf
xor
push
or
add
popa
add
add
add
push
add
push
inc
and
add
adc
adc
leave
sub
add
add
int
add
and
or
and
and
or
and
add
add
add
or
add
xchg
add
and
add
pusha
or
or
add
into
add
push
inc
addl
add
pusha
add
adc
or
or
or
add
mov
add
or
inc
add
and
rolb
or
and
add
adc
dec
add
add
mov
mov
inc
or
and
inc
dec
addb
add
and
add
inc
xchg
add
inc
dec
add
adc
inc
push
subb
add
add
andl
add
mov
or
and
add
mov
mov
inc
jp
adc
or
addb
addb
add
inc
add
add
ret
sbb
add
add
add
add
add
inc
add
adc
add
adc
test
add
add
inc
inc
lods
and
and
inc
add
add
pushf
add
add
dec
and
inc
adcl
fildl
add
add
inc
addb
inc
add
and
enter
add
inc
in
inc
xor
addb
add
and
xor
add
xorl
inc
inc
adc
add
or
add
mov
adc
add
inc
rolb
addb
adc
inc
andb
imul
or
add
add
addb
add
add
add
add
add
addb
add
or
addb
add
add
and
mov
addb
add
addl
and
inc
add
and
add
inc
lock
cmp
and
or
and
add
add
add
mov
ds
add
dec
mov
roll
add
and
adc
add
mov
testl
push
pop
push
xchg
mov
fstpt
jmp
jge
dec
stc
jle
push
mov
xchg
stos
mov
mov
stos
mov
nop
lea
cmpsb
mov
push
hlt
push
lret
inc
testb
jg
jno
movsl
fists
push
inc
mov
push
hlt
mov
adc
xchg
pop
xchg
loope
xlat
pop
idivb
fcoml
mov
fs
push
ret
mov
scas
mov
das
jnp
icebp
scas
ljmp
stos
into
test
data16
mov
das
mov
mov
fcompl
test
test
mov
loope
fisubs
cwtl
pushf
dec
jns
pop
xchg
or
leave
pop
cmp
roll
add
pop
stc
ja
js
jbe
roll
add
adc
mov
mov
adc
mov
cmpsb
test
jp
cmpsb
xchg
sti
fidivrl
clc
mov
insb
std
adc
xor
jno
mov
mov
shlw
jnp
cmp
pop
push
mov
add
smsw
test
sbb
addb
shr
push
lods
into
test
data16
das
jnp
icebp
and
ljmp
jae
mov
xchg
adc
movsb
out
mov
popf
mov
jle
add
pop
push
jmp
add
iret
xchg
mov
mov
jo
mov
aaa
sbb
adc
mov
aam
sahf
mov
ret
xor
call
data16
test
cld
sbb
push
imul
cmc
cmpsb
mov
inc
data16
and
ret
rolb
jne
push
cs
add
test
mov
ss
cmc
repz
push
in
rorl
pop
cmp
into
popl
ficoml
cld
aad
pop
aas
pop
fcomip
mov
aad
cli
fimull
rcll
push
sub
iret
add
das
cmpsb
mov
std
rcl
imul
push
or
mov
mov
hlt
aad
xchg
sub
jle
xlat
stc
fisubl
sbb
mov
jp
pushl
pop
fsubl
decb
sub
pop
insb
js
mov
mov
popf
xchg
scas
xchg
popa
sub
cmpsb
mov
xchg
push
cmc
lret
loop
mov
lea
push
test
popf
push
popa
mov
pop
pop
lds
pop
cli
jb
das
cmpsb
mov
lock
mov
push
pop
xlat
sahf
js
cmpsb
sbb
out
xchg
xchg
mov
in
mov
xchg
out
mov
adc
mov
jge
decb
hlt
decl
and
je
rcrw
add
js
sbb
mov
push
scas
mov
das
jnp
icebp
mov
jp
mov
test
int
ret
pop
cltd
push
call
mov
and
lea
cmpsb
mov
test
iret
xchg
push
cmpsb
mov
es
or
aas
data16
xchg
popw
iret
std
cmpsl
jle
lea
movsl
adc
aas
data16
int
dec
xlat
movsl
mov
xlat
pop
xchg
shll
sar
std
push
aam
add
iret
add
adc
xor
mov
popa
or
push
mov
pop
ds
mov
addr16
out
movsl
fdiv
add
test
sub
xchg
or
movsb
mov
out
movsl
lock
xlat
xchg
incb
sar
std
push
add
add
iret
stc
cmp
xchg
or
movsb
mov
push
dec
test
lea
call
lods
rorb
cmp
test
sub
xchg
or
pop
xchg
push
in
inc
shrl
mov
xor
adc
sbb
mov
xchg
in
push
in
mov
adc
mov
push
pop
movsl
rol
fldenv
sti
pop
pop
xchg
jne
inc
mov
sbb
test
pop
sbb
jle
jne
aam
mov
sbb
xchg
sahf
pop
mov
fldt
pop
xchg
xor
push
cmc
popf
adc
pop
mov
pop
imulb
mov
cmc
mov
xorl
cld
cltd
xor
mov
popf
jns
or
lret
push
les
repnz
jmp
leave
sub
push
lret
lea
movsl
out
mov
pop
loope
fcompl
test
cmp
lcall
jo
test
mov
xchg
int
cwtl
adc
mov
popf
jl
xor
mov
fidivl
clc
mov
imul
xlat
shlb
std
push
insb
xchg
data16
xor
andb
pop
aaa
sbb
mov
lcall
cmp
or
mov
sbb
sub
xor
push
cmc
test
jae
or
dec
xor
mov
ret
sbb
sub
mov
clc
xlat
mov
cmpsb
imul
lret
push
mov
dec
xor
mov
pop
inc
pop
xchg
push
das
shlb
mov
popf
adc
pop
xlat
mov
stos
mov
cmpsb
mov
gs
lea
pop
lret
mov
or
jmp
jo
mov
ds
sbb
mov
push
rcl
lds
ss
mov
or
aaa
mov
mov
xchg
mov
cmp
stos
inc
xor
xchg
sti
cmp
cli
jg
dec
in
insb
aam
jmp
jns
inc
out
xor
in
fsubs
mov
dec
out
mov
pop
nop
test
enter
addr16
sub
push
jecxz
leave
iret
and
test
jb
mov
xchg
xor
mov
scas
mov
in
jmp
push
pop
xchg
adc
icebp
xchg
jne
inc
inc
pop
ljmp
push
xor
xchg
pop
push
cmp
push
cmp
jp
cmp
mov
aas
in
mov
xchg
dec
xor
xchg
jge
es
dec
shlb
add
xor
mov
out
pop
aas
stc
insl
rorb
aas
popa
shr
or
out
test
pop
xchg
shrb
mov
mov
cmp
xchg
xor
inc
xchg
cwtl
iret
or
pushf
or
mov
xor
adcl
mov
in
sti
imul
mov
scas
jbe
mov
mov
out
cmp
daa
dec
mov
xor
aad
test
pop
aam
xchg
mov
into
mov
outsl
xor
inc
xlat
pushf
mov
adc
shll
nop
sbb
ljmp
loopne
movsb
jns
mov
fdivrs
dec
xor
xor
pop
jl
add
iret
pop
inc
mov
imul
js
mov
mov
cmpsb
popl
inc
lock
push
test
iret
mov
imul
les
mov
fisttpl
jbe
out
cmc
popf
scas
cmp
pop
sbb
sahf
jl
shrb
mov
jle
fsubrs
sub
mov
es
mov
in
jno
cmpsb
cmp
add
orb
int3
lds
lea
inc
adc
mov
dec
test
in
mov
or
dec
push
test
cmc
xchg
inc
push
cs
mov
jb
and
lea
push
das
sbbl
mov
jbe
out
xchg
inc
pop
outsb
push
mov
cmc
push
and
push
lcall
pop
dec
mov
xchg
jnp
jae
xchg
in
insl
lea
dec
outsb
lcall
hlt
test
movsl
fwait
sub
call
add
jl
or
sub
or
push
adc
xor
cmpsb
ret
push
dec
mov
pop
inc
adc
adc
sti
pop
mov
sub
adc
testl
in
dec
push
mov
adc
ds
pop
sub
jg
aad
mov
gs
xor
clc
bound
add
adc
mov
rorl
loop
mov
mov
adc
mov
les
pop
xchg
mov
outsl
xchg
insb
lea
sub
and
mov
cmpsb
ror
sub
mov
xor
clc
rorb
push
ret
mov
aam
aad
sbb
bound
fcmovne
xor
ret
das
stos
fs
xor
daa
mov
push
mov
loope
mov
xor
in
mov
stos
and
sub
fimuls
lahf
fnstcw
mov
imul
and
stc
sub
hlt
cs
aam
pop
add
inc
lret
test
testb
sbb
jnp
mov
sbb
xchg
stc
decl
sub
imull
enter
out
mov
mov
outsb
sub
fdivrl
lea
inc
push
or
cli
mov
lea
lahf
sub
pushf
cs
test
out
push
pop
adc
inc
loope
fcoml
xor
nop
pop
fisttps
cmpsb
pop
pop
adc
in
mov
orb
out
out
pop
mov
or
xchg
imul
mov
fmulp
int
jecxz
push
cmpb
lea
cmc
roll
rorl
dec
movsl
popa
popa
inc
mov
jp
xchg
mov
xor
and
cmpsb
enter
shlb
das
gs
mov
movsl
stos
xchg
fstl
mov
adc
xor
pop
int
add
out
jmp
mov
sbb
addr16
mov
or
mov
aad
lock
mov
and
pusha
lock
les
mulb
int3
lds
adc
adc
cmp
lea
test
cmp
les
jbe
and
cli
mov
sbbb
jmp
mov
test
mov
loope
aad
mov
hlt
fwait
push
movsl
int3
fnstenv
push
mov
jge
hlt
mov
test
negb
dec
jnp
mov
les
pop
lret
jo
movsb
inc
cmpsb
test
sbb
mov
or
bound
imul
push
mov
sub
cmp
xlat
jne
cmc
cwtl
jmp
out
sbb
xchg
imul
mov
mov
div
es
push
adc
cli
lea
in
repz
mov
dec
outsl
std
pop
sub
out
mov
push
arpl
dec
lahf
frstor
pusha
push
stc
popf
js
jecxz
ror
dec
push
mov
jno
ret
jnp
sahf
in
dec
jge
mov
pop
or
jle
in
xor
mov
xchg
pop
jns
dec
cmc
int3
or
sub
inc
cli
adc
push
pusha
lea
sar
pop
aad
leave
inc
out
shrl
jle
adc
movsl
loope
cmp
scas
or
mov
mov
pop
testb
push
das
rolb
pop
scas
into
lods
jp
in
arpl
add
mov
iret
loopne
xlat
dec
stos
fwait
iret
decl
das
adc
cmp
test
dec
sub
add
mov
lods
sbb
sub
addr16
and
push
pop
call
mov
jmp
bound
call
mov
dec
cmpsb
jne
es
cltd
fisubrl
mov
pop
and
js
add
xor
std
out
in
dec
out
sbb
dec
add
rcrb
jbe
lods
ficoms
shl
movsl
jecxz
inc
outsb
das
push
in
mov
sarl
lea
shlb
xor
test
dec
jp
das
scas
das
jne
dec
pop
sbb
mov
jo
lock
ficompl
rcrb
jg
dec
push
cmp
jnp
aam
mov
push
mov
lret
lea
fstl
cmp
add
out
and
and
shl
dec
mov
sahf
jne
xor
in
mov
adc
subl
add
test
cmc
adc
sub
mov
popf
mov
push
jae
lret
sub
or
add
push
adc
push
mov
jae
imul
jno
imul
das
fidivl
adc
sbb
stos
adc
push
das
add
mov
pop
cmpsl
inc
loope
pop
fstl
cmp
sbb
mov
rcll
clc
and
mov
mov
xchg
ss
add
sub
mov
movq
mov
sbb
shrl
lret
mov
decl
je
cmp
xor
push
mov
lahf
jae
sub
xchg
inc
mov
int3
mov
jno
push
aaa
nop
jg
mov
inc
bts
sub
dec
and
mov
jge
push
inc
adc
ret
or
or
mov
fldenv
push
xchg
xchg
xor
test
lea
lret
into
jb
cs
jecxz
dec
gs
mov
lock
out
test
mov
mov
adc
jge
cmpsb
sub
ss
mov
pop
xchg
subb
xchg
jecxz
nop
and
data16
outsb
push
cmpsb
mov
loop
xchg
aaa
ss
aam
mov
adc
aad
std
insl
cmp
mov
pop
sbb
xchg
sub
bound
mov
shll
cmc
cltd
inc
inc
imul
mov
mov
and
test
dec
push
dec
sbb
or
or
fs
popl
mov
jp
out
in
mov
xchg
add
mov
sub
roll
fdivrp
int
das
inc
push
inc
mov
movsl
clc
xor
sub
or
xor
mov
movsl
add
xchg
popf
outsb
adc
xchg
push
fwait
mov
cmpsb
daa
sbb
jge
fldl
mov
outsl
cmp
push
pushf
movsl
cmc
xchg
bound
push
cs
mulb
popf
pop
push
leave
out
inc
cmpsb
xlat
inc
mov
xchg
mov
xchg
mov
cltd
movsb
jno
jmp
mov
mov
cmp
mov
das
inc
lea
add
fmuls
movsl
push
add
in
pusha
mov
mov
aam
rolb
pop
jmp
stos
pop
das
xor
insl
jmp
adc
jbe
insb
mov
daa
add
push
cld
inc
je
sub
fbld
xor
push
add
ret
pop
xchg
xor
xchg
pop
cltd
enter
or
ja
insb
dec
fsubrl
and
cli
stc
and
push
cmpsb
aad
in
mov
and
inc
mov
lea
sub
inc
adc
cs
inc
fwait
ret
lea
pop
lcall
add
jg
popf
sub
jl
xor
or
sub
into
push
jmp
jb
dec
rcr
or
inc
dec
jo
cs
ss
jecxz
lea
inc
and
inc
fidivs
xor
xchg
lea
sub
push
or
mov
cmpb
push
in
fidivrl
sbb
sub
xor
das
xchg
add
shr
cmp
mov
xor
and
push
stc
pop
xchg
sub
xchg
push
cld
lods
xor
ljmp
cltd
lea
aaa
scas
pop
pushf
sub
das
scas
lea
ljmp
cmp
adc
pop
icebp
test
jl
and
jbe
fucomp
fldcw
movl
mov
cmpsb
push
or
sarl
iret
inc
sub
sbb
mulb
js
mov
jecxz
cmp
jno
orl
sub
scas
sbb
adc
ja
pop
repz
lea
loop
cld
into
pop
das
cmp
nop
mov
and
adc
lods
insl
sahf
mov
add
mov
andl
jnp
das
scas
mov
imulb
cmp
int
aas
mov
push
loop
out
sti
and
fsts
push
xchg
mov
popf
fadds
dec
lea
xor
sbb
xchg
mov
cmp
xchg
mov
ja
xor
stos
daa
scas
mov
mov
std
or
cld
mov
into
mov
repnz
mov
mov
test
add
sti
ja
add
mov
in
mov
inc
popf
cmp
std
pop
inc
cmpsb
ja
jg
hlt
shlb
out
dec
iret
jb
arpl
int3
std
and
jmp
lcall
aaa
or
jl
mov
fcmovnb
in
inc
cmp
inc
sbb
mov
xchg
xchg
and
dec
arpl
or
arpl
test
es
setle
mov
or
mov
loop
stc
scas
pop
sbb
inc
aam
pop
or
xchg
stos
mov
in
decb
cld
mov
enter
mov
xlat
xchg
or
jmp
movsb
mov
in
xchg
push
jbe
aad
jbe
loope
ret
sub
inc
fcoms
scas
lock
mov
cmc
movsb
sbbb
adc
pop
adc
push
adc
pop
jle
popf
xchg
sbb
mov
sub
das
mov
xor
push
or
xor
push
mov
scas
mov
xlat
sub
test
jne
mov
lds
ss
inc
lock
out
inc
je
cmpsl
scas
mov
add
int
int
imul
outsb
push
add
add
mov
mov
xor
lods
mov
jne
xchg
test
mov
outsl
repz
testl
xchg
das
out
and
add
push
test
add
movsb
xchg
andb
sbb
adc
lea
es
fsts
xchg
inc
push
add
cmpsb
mov
push
lret
or
or
jge
loope
push
das
xor
pop
call
push
push
inc
outsl
sar
xor
sub
sub
stc
ljmp
push
cmpsb
call
test
scas
inc
mov
loop
test
xor
xor
call
and
jae
arpl
lea
test
push
das
cmp
mov
or
cmpsb
ss
add
jae
sti
pop
rclb
mov
jle
xor
js
lea
add
xor
movsl
iret
fsubs
imul
popl
add
outsl
cmp
mov
or
push
jne
inc
sub
lds
movsl
lea
lods
lret
cld
add
nop
sbb
xchg
es
or
jo
mov
pop
ljmp
roll
lods
adc
mov
andl
arpl
push
cmpsb
jae
inc
cmp
jle
add
jmp
xchg
xor
push
movsb
push
rorb
mov
fnstenv
pushf
adc
cli
cs
xchg
dec
test
out
pop
fsubrs
pop
das
scas
add
imul
xchg
mov
or
xor
stc
jl
test
cmp
mov
pop
sti
dec
lret
adc
subl
insl
jo
icebp
fstps
int3
sub
sarb
int
mov
data16
mov
mov
dec
mov
jp
movsl
test
lcall
cld
out
pop
call
pop
mov
xchg
xchg
movsl
push
and
cmp
in
ss
outsl
sbb
xorb
out
out
lea
dec
das
das
fcompl
ds
xor
stc
push
test
call
fsubrl
xchg
nop
ret
test
in
fistl
pop
inc
push
outsl
arpl
cltd
sbb
cmp
das
test
push
loop
mov
jnp
push
fnstsw
lea
ja
outsb
dec
xor
inc
ljmp
aam
dec
inc
adc
and
mov
xchg
xchg
fnstcw
xcrypt-ecb
mov
das
push
dec
cmpsl
jmp
jnp
call
mov
sbb
gs
cmpsb
mov
call
sar
sbb
dec
pop
popf
fstpl
subl
cld
jno
ljmp
cltd
cld
cs
scas
dec
cmp
mov
jne
cmpsb
dec
jb
and
add
bound
daa
sbb
cmpsb
jb
nop
cld
divl
dec
mov
jmp
stos
xchg
pop
jne
dec
out
sub
das
or
shll
cmpsb
sub
push
xchg
sbb
dec
call
icebp
out
bound
add
push
nop
jp
ret
mov
cwtl
adc
dec
test
lods
pop
xchg
dec
iret
xor
scas
and
pusha
inc
xchg
mov
sub
mov
std
or
das
mov
jb
jg
movsl
inc
int3
fidivrl
pop
sbb
sub
adc
or
arpl
lock
ds
cld
jo
inc
ss
adc
sahf
shrl
sbb
das
psraw
stos
push
enter
cs
jle
push
dec
and
shlb
orb
out
sbb
fwait
mov
sbb
test
movsb
push
mov
dec
in
nop
pop
jmp
lahf
xchg
or
stc
lods
cmc
cmp
fidivs
mov
or
pop
das
xor
push
mov
lret
out
fisttps
mov
fnstsw
jne
lret
mov
jb
das
aam
incb
dec
cmpsb
mov
fistpll
mov
xchg
or
lea
cmp
das
or
add
push
incl
push
pop
daa
cmpsb
arpl
inc
jg
dec
sbb
scas
add
push
data16
xlat
popa
in
xor
arpl
out
mov
xchg
loop
push
es
rcll
lock
scas
lea
faddp
or
mov
push
lea
adc
push
sub
mov
mov
push
jns
lds
lock
adc
fiadds
push
mov
xor
das
add
das
pop
mov
xchg
cmpsb
mov
shlb
dec
mov
xor
mov
outsb
sbb
icebp
incb
mov
xchg
push
add
push
push
adc
imul
xchg
fnsave
sbb
or
mov
prefetch
cmpsb
mov
insb
imul
xchg
pop
push
xor
xor
orb
sub
mov
pop
das
add
dec
cmpsb
jp
mov
les
cmpsb
cs
xchg
cmpsb
nop
mov
cmc
sbb
shrl
mov
add
iret
jecxz
xchg
mov
sbb
cmpsb
or
push
cmp
les
mov
mov
imul
cmc
les
sbb
stos
frstor
sub
cmp
adc
mov
imul
pop
out
jp
test
mov
fnsave
sahf
lds
cltd
mov
pop
out
fstpt
aad
int3
cmc
and
mov
leave
pushf
lea
dec
mov
pop
das
cpuid
dec
and
inc
jge
cwtl
dec
adc
pushf
push
in
pop
pop
and
and
std
movsl
push
cmp
das
sub
aaa
mov
movsl
mov
loope
add
jbe
iret
mov
adc
xchg
loopne
or
add
and
test
cmpb
das
push
and
mov
addr16
cmpsb
push
imul
movsb
sbb
das
std
aas
enter
lret
mov
cwtl
add
int3
mov
test
loope
fistpll
dec
or
mov
pop
add
or
mov
sbbb
sub
scas
jno
lret
xor
je
iret
cmp
mov
sbb
pop
jbe
les
shlb
rorb
repz
arpl
and
bound
es
push
pop
scas
mov
push
lds
and
mov
adc
cwtl
popa
das
int
inc
add
das
add
or
mov
ja
add
imul
lea
push
jmp
inc
pop
ret
arpl
mov
push
sub
ret
out
cli
loopne
mov
test
lret
add
jp
mov
jle
cmp
mov
and
test
je
mov
mov
cmpsb
jno
outsb
lret
sub
push
pop
xchg
int
scas
jno
rcl
mov
sbb
cmp
test
mov
jb,pn
pop
jbe
mov
popa
int3
lret
lcall
cmpsb
mov
mov
cltd
sbb
fmulp
xchg
push
sub
imul
dec
mov
leave
loope
and
pop
pop
lea
lahf
loop
outsl
mov
das
rclb
xchg
adc
imul
das
push
add
ret
inc
jecxz
fbld
jmp
enter
in
mov
push
das
jae
and
mov
mov
sbb
mov
ss
lea
pop
ds
cmp
mov
xor
cwtl
and
xlat
jae
scas
xchg
ljmp
inc
leave
push
fidivrl
mov
push
jno
jmp
sub
jnp
daa
or
xchg
fldenv
xchg
rclb
aad
sub
mov
popa
fisubl
dec
mov
dec
fs
inc
push
sbb
dec
rcrl
sbb
xor
les
and
sahf
aam
xchg
lds
pop
mov
sarl
xchg
mov
push
pop
fisttpl
or
xchg
out
xchg
js
out
cmp
mov
xchg
or
cli
and
shl
jne
dec
xchg
cmpsb
sti
aas
sbb
cli
xor
sub
cmp
insb
cwtl
mov
jnp
inc
sub
out
sahf
das
mov
aad
xchg
stos
jae
cmpsb
int
dec
pop
shll
cs
mov
xchg
insl
xchg
mov
mov
mov
mov
xor
xchg
inc
clc
scas
mov
jns
jg
cmp
fists
inc
scas
movsb
jae
and
adc
mov
movsl
mov
adc
and
push
sbb
adc
clc
mov
dec
inc
inc
mov
stos
push
or
add
mov
jo
mov
arpl
mov
xor
fisttps
dec
int
push
xchg
mov
je
lahf
enter
outsl
mov
fcom
or
sbb
mov
cmp
xor
fwait
xchg
setp
add
scas
and
mov
stc
das
out
xchg
cmpsb
aas
xorb
mov
ljmp
lea
adc
add
xor
push
sbbb
cmpsb
lock
in
jno
xchg
mov
arpl
aad
into
push
repz
mov
xchg
or
dec
sbb
inc
cmp
daa
cmp
mov
xor
sarb
icebp
lea
sbbl
xor
sbb
ljmp
push
lock
fidivrs
add
movsl
xor
mov
int
nop
out
into
cs
mov
lret
xchg
and
xor
cwtl
mov
outsl
es
lahf
aad
lea
mov
mov
arpl
or
cmpsb
xchg
pop
in
icebp
push
mov
lret
xchg
lods
movsb
mov
bound
jp
scas
fimuls
imul
sbb
xlat
adc
push
push
push
sbb
sub
cmp
daa
adc
imul
pop
aas
mov
out
pop
jmp
mov
in
cld
inc
cli
out
fs
inc
lea
add
pop
ljmp
xchg
and
cmpsb
ja
cmp
adc
add
nop
inc
sub
fmull
cltd
cmpsl
add
das
push
out
scas
pop
push
xchg
loop
rcrl
lods
das
xchg
xchg
gs
pop
faddl
pushf
test
xchg
outsb
int3
aad
xchg
push
cmpsb
xchg
mov
mov
push
inc
les
popa
imul
cli
pop
mov
das
ds
fadds
bound
outsb
lret
mov
lret
lret
fistl
or
cmpsb
movsb
repnz
adc
adc
pop
lea
mov
sub
sub
decl
ljmp
sbb
fildll
push
pop
and
xchg
ljmp
mov
cmc
sub
pop
test
jl
xchg
push
mov
rcr
icebp
jp
das
and
movsb
stc
not
jmp
jns
push
fs
xchg
and
mov
out
push
repz
inc
xor
stos
mov
jmp
mov
jge
test
fmull
lea
mov
xor
and
xor
and
aad
mov
loope
int
scas
push
cmp
xchg
or
cmc
test
and
jb
xor
loope
sbb
sbb
stos
cmpsb
loopne
lcall
cmp
lea
mov
jae
add
ljmp
push
orl
ficomps
shrb
in
hlt
push
mov
push
movsb
xchg
cs
test
movsl
insl
pop
or
leave
add
in
sbb
jae
imul
jo
or
cmc
movsl
or
or
mov
sbb
je
push
inc
mov
cmpsb
leave
jno
ret
mov
roll
cmpsb
ds
sti
xchg
out
pusha
decl
movsb
imul
aam
jbe
lret
rcrl
add
lret
pop
add
sahf
cmp
cmp
popa
jecxz
add
hlt
hlt
mov
ret
mov
lds
std
mov
pushf
and
jg
ja
into
jb
cmc
scas
pop
lods
dec
xor
mov
sbb
popf
mov
les
mov
fsubr
lret
pushf
lods
pop
mov
mov
aas
cmp
cwtl
cmpsb
and
mov
decb
ficoml
clc
lea
xchg
xor
stc
stos
out
iret
orl
mov
mov
das
mov
push
out
rclb
iret
xchg
daa
xor
cmp
aad
add
sbb
lret
fmull
xchg
dec
sbb
scas
pusha
pop
mov
cs
orb
and
rcr
xor
mov
cmpsb
mov
cwtl
push
fimull
popa
sbb
lea
inc
add
sbb
das
mov
mov
imul
test
aad
in
add
sti
dec
mov
inc
xlat
cs
std
mov
inc
je
adc
mov
pop
inc
aad
dec
stos
lea
insl
adc
das
push
out
lret
stos
insb
cmpsb
inc
jp
jne,pn
mov
mov
shlb
aaa
push
push
sub
mov
mov
rcl
loope
mov
daa
sbb
inc
add
mov
ljmp
sarb
cmp
pop
xchg
das
lea
ja
dec
xlat
inc
mov
das
jo
and
stos
mov
or
das
cli
sbb
pop
push
imul
das
sub
jg
fstps
mov
or
mov
lea
lods
aas
adc
cmpsl
cmpsb
iret
stc
sti
iret
out
or
mov
out
xlat
adc
fstpt
imul
nop
sbb
gs
mov
or
xorl
fs
inc
cmpsb
leave
pusha
popa
dec
sbb
jb,pn
cmp
dec
xchg
cmpsl
mov
xor
mov
pop
jl
mov
push
lea
xchg
sbb
roll
cmp
mov
mov
into
inc
mov
out
mov
inc
orl
rclb
pop
out
jp
mov
aas
dec
aad
out
dec
cmpsb
inc
or
loop
push
xlat
test
inc
adc
mov
leavew
mov
decl
or
ljmp
xchg
cmpsb
xchg
xor
js
mov
hlt
push
push
fisttps
push
xor
fnsave
pushf
lods
enter
mov
mov
xor
mov
lea
fwait
out
jge
clc
adc
fsubs
xchg
xor
xchg
mov
pop
mov
dec
xchg
push
es
dec
cmpsb
dec
ds
es
loopne
testl
lea
lods
inc
xorl
enter
cs
jb
or
mov
sbb
rclb
lahf
mov
mov
or
jmp
cmpsb
mov
scas
and
mov
popf
stos
push
aas
or
dec
dec
mov
cs
sti
add
fs
ret
out
jecxz
mov
and
pop
shl
in
enter
xchg
test
cmc
sahf
pop
icebp
xor
shll
and
insl
mov
outsl
mov
xor
fmuls
mov
test
mov
shll
imul
dec
xor
cmp
cmp
cmpsb
fsubp
and
add
ljmp
mov
sub
int3
std
enter
inc
loop
sbbb
insl
in
data16
int3
sbb
pop
lods
pop
dec
xor
mov
lds
push
enter
cltd
lahf
cmp
mov
in
in
fcompl
push
shrb
or
cs
cmp
fidivl
jb
scas
xor
jnp
cmp
xchg
in
and
out
aam
push
mov
mov
rorl
jl
xor
fldl
outsb
imul
addb
movsl
inc
cld
or
xchg
scas
mov
pop
jle
jge
jg
outsb
outsb
inc
pop
in
adc
ds
inc
pop
jne
cmpsb
lcall
bound
lcall
lret
jbe
sbb
pushf
loope
pop
repz
dec
in
test
cmc
outsb
stos
cmp
cmpsb
cltd
dec
lock
ret
mov
push
pop
lock
fcmovnb
lods
ficomps
xlat
xor
mov
clc
xchg
in
xor
push
lods
jnp
jbe
inc
sub
lret
mov
outsl
add
addr16
push
xlat
mov
pushf
xor
mov
lea
cwtl
popa
push
cltd
inc
ja
xchg
adc
adc
and
mov
mov
dec
out
mov
jo
mov
test
mov
stos
adc
jmp
call
dec
cmc
xchg
imul
int3
xor
sub
inc
cmp
pushf
das
cmp
lcall
icebp
mov
ja
fwait
push
fwait
and
repz
or
int3
cmpsb
mov
push
sbb
mov
fcmovb
mov
adc
popf
aas
rorl
sbb
in
insl
fcmovnbe
stos
sub
insl
xchg
mov
pop
jg
std
fwait
jp
xchg
pop
dec
mov
mov
jl
addb
jg
test
sbb
xchg
movb
sbbb
cmpsl
inc
hlt
scas
and
cmp
pop
roll
or
cmp
mov
and
inc
in
adc
outsb
jns
xchg
daa
adc
cltd
xchg
das
scas
pop
clc
xchg
or
shll
mov
lods
test
enter
mov
and
add
in
fisubs
jge
pop
inc
mov
mov
dec
clc
xor
pop
jp
lret
ja
adc
jg
test
push
std
mov
jmp
adc
rol
popf
mov
xlat
and
sbb
mov
jmp
jecxz
jge
adc
mov
mov
mov
and
roll
in
fcomps
icebp
lahf
mov
in
or
inc
stos
loope
mov
add
xor
dec
push
pop
in
jne
xchg
ret
mov
mov
and
mov
pushf
fidivl
movsl
cmp
sbb
in
sbb
popf
loop
inc
sbb
fwait
jb
inc
mov
movsl
pop
mov
lea
xor
mov
sub
lock
pop
mov
ss
scas
in
sub
or
jne
mov
mov
cmp
outsl
ljmp
lahf
fsqrt
and
sub
dec
cmc
aam
mov
mov
test
aad
inc
das
fistpl
aad
xor
mov
cmpsb
icebp
stos
mov
outsb
mov
xchg
test
dec
cmpsl
jecxz
sub
pop
iret
aad
mov
xchg
das
add
int
stc
aad
movsl
dec
pusha
mov
push
sbb
cwtl
out
ljmp
fdivrs
mov
cmpsb
jle
mov
sub
aaa
or
out
fwait
mov
xor
les
mov
adc
sbb
jae
sbb
cmp
sub
sahf
lret
jne
inc
cmpsb
mov
shl
mov
jge
inc
xchg
mov
dec
xchg
rol
mov
sbb
push
xchg
jge
iret
in
mov
sub
das
cmpsb
or
add
sbbb
lock
xchg
mov
xor
test
fcmovbe
cmp
sub
xlat
outsb
stos
mov
inc
test
or
or
mov
lea
and
shl
std
xor
dec
cmpb
xchg
cmc
xchg
sbb
fcmovnbe
aam
adc
in
cmpsb
das
dec
sub
jmp
outsb
mov
neg
jecxz
in
jg
sub
pusha
mov
out
mov
push
mov
out
scas
das
daa
or
xchg
aas
dec
ret
das
ljmp
out
pop
cli
rcr
pushl
mov
xchg
popf
in
movb
inc
xor
in
ficompl
adc
in
repz
clc
pop
das
outsl
pop
subl
repnz
mov
scas
pop
das
cmpsl
sbb
mov
and
in
sub
inc
in
mov
xor
mov
push
cmpsb
stos
jmp
and
jmp
mov
out
jp
jnp
in
jle
cmpsb
pop
pop
repnz
rolb
dec
out
js
and
lahf
insl
adc
lea
loope
add
mov
rcr
ja
in
pavgb
xlat
add
sub
inc
or
ror
fmuls
push
jo
inc
fists
cltd
aas
jg
fisttps
jnp
clc
sbb
sbb
add
mov
stos
jmp
xchg
das
pop
sbb
push
bound
hlt
mov
cltd
jae
sahf
mov
test
push
repz
outsl
push
shrl
cmp
sti
pop
pop
idivl
mov
scas
sahf
add
jp
icebp
pop
adc
test
xor
in
in
push
adc
mov
adc
inc
mov
jae
dec
int
or
jge
xchg
sub
out
push
adc
mov
aad
bound
jne
mov
sbb
je
mov
mov
test
sub
test
call
ljmp
add
test
maskmovq
mull
mov
and
shll
icebp
pop
jmp
out
loope
mov
dec
pop
data16
test
or
xor
lods
cmp
push
push
test
push
sub
das
pop
mov
cli
test
fmul
dec
ret
inc
cmp
mov
or
lea
rcr
adc
pop
sub
adc
imul
push
iret
stos
push
push
rcrl
cwtl
imul
xor
add
lcall
jb
jns
adc
lea
xor
bound
rorb
jge
lret
icebp
out
mov
cmpsb
pushf
or
inc
xchg
cmpsb
shl
sbb
cmpsb
lahf
jmp
arpl
cmpsl
int
inc
or
out
lea
outsb
or
jecxz
js
data16
arpl
mov
mov
inc
rcll
mov
jl
jno
inc
mov
or
push
push
pop
inc
mov
scas
push
push
mov
sarl
and
pop
stos
daa
cmp
scas
iret
mov
mov
aas
dec
in
inc
mov
xchg
enter
jecxz
sub
stc
cwtl
xchg
or
xchg
lea
jne
cltd
pextrw
mov
mov
cmpsb
sbb
push
sub
popa
mov
sahf
lcall
adc
or
mov
xor
out
or
adc
call
mov
outsl
flds
inc
shl
sub
das
andb
mov
lahf
ficoml
popa
pushf
lods
xchg
shll
mov
dec
and
cld
out
data16
pop
cmpsl
cmc
sti
fistps
iret
push
das
sbb
insb
shll
jmp
js
lock
test
shrb
stos
cmp
in
push
fmuls
enter
orb
in
in
and
and
fistpl
or
sub
jl
ss
fcomp
movsl
mov
mov
das
rcll
aam
rclb
out
xor
push
mov
mov
and
cmp
ret
fstp
sub
dec
push
ljmp
sahf
lret
testl
fwait
xchg
xlat
jns
inc
cs
mov
movsb
shll
mov
cmc
mov
jecxz
xor
divb
pop
orl
mov
cmp
lcall
hlt
cmp
test
cmpsb
shll
lods
dec
nop
mov
dec
imul
adcb
aaa
mov
xlat
fimuls
add
lret
mov
ret
and
stos
ja
cmpsb
enter
sub
faddl
int3
stos
pop
lea
sahf
rol
stc
cmp
mov
ret
jb
mov
mov
scas
das
pop
add
stos
lcall
mov
mov
inc
add
push
push
leave
xchg
test
ss
and
dec
in
xchg
sbb
add
and
lahf
adc
mov
aas
mov
imul
cmp
add
or
filds
mov
jb
mov
cld
js
shrb
mov
ljmp
push
in
adc
mov
lret
rclb
enter
and
xchg
xchg
movl
aas
popl
mov
sbb
les
lcall
mov
les
lret
xchg
xchg
xchg
movsb
mov
pop
sub
lcall
add
xchg
cltd
inc
stos
sahf
mov
push
jbe
jae
sahf
pop
outsb
xchg
out
push
ret
das
sub
fs
xor
add
cs
mov
rcrl
xchg
push
pusha
add
clc
icebp
lea
incl
das
dec
fdivs
pop
push
cmp
adcb
subl
xor
mov
adc
and
roll
shl
into
mov
ret
or
push
jne
mov
mov
pop
std
rcrl
jb
leave
in
in
and
push
pop
adc
inc
pop
loopne
arpl
out
pop
arpl
lds
xchg
cltd
repz
sub
sarb
adc
xchg
or
mov
sbb
popa
mov
inc
es
or
es
pop
sbb
jmp
mov
inc
aad
aad
inc
into
loopne
arpl
arpl
fs
and
mov
inc
push
sub
into
pop
scas
pop
xor
ret
lret
inc
pop
or
data16
movsl
pop
filds
das
mov
sbb
ljmp
cmp
in
popf
pushf
cmp
mov
neg
lods
jne
clc
rcrl
ss
mov
mov
xor
push
das
shl
push
pop
push
aas
fcompl
test
fs
popf
jmp
cmp
and
iret
into
pushf
jp
cmpsb
pop
and
fistps
add
mov
pushf
jne
lea
rorl
das
bound
fs
lret
ror
cmpsb
xlat
push
sbbb
cmp
cmpsb
imul
or
lcall
jp
xor
push
and
loop
data16
mov
xchg
pop
dec
pop
dec
ret
subb
xchg
adc
jne
movsl
aas
nop
mov
lea
and
and
mov
cltd
movsl
sbb
or
add
outsb
xchg
or
int
mov
rolb
fsts
in
mov
call
mov
pushf
rcll
loopne
pop
mov
cmpsb
inc
adc
fs
icebp
cmpsb
repnz
jge
das
insl
adc
pusha
ficompl
popa
mov
add
clc
aam
loop
ret
cs
cmpsb
enter
and
rolb
dec
mov
inc
cmp
loope
in
mov
pop
xor
xchg
leave
lds
xchg
outsl
popf
movsb
gs
pushf
and
leave
cmc
or
addr16
notb
mov
lea
push
fwait
xor
mov
xor
xor
cld
sahf
inc
aas
jle
fisubl
mov
and
gs
sbb
fistpl
add
adc
jb
lea
int3
in
jecxz
imul
pop
das
cwtl
pushf
movsb
jmp
mov
addr16
mov
movsl
arpl
scas
cmp
push
jno
and
mov
mov
sbb
adc
pop
sbb
lock
fs
fmull
and
adc
cli
lahf
dec
lods
xchg
inc
cmp
inc
scas
jle
mov
movsb
and
jg
cmc
lea
cmc
mov
fldl
xchg
das
ja
push
jmp
inc
out
push
dec
jnp
das
inc
mov
inc
orl
outsb
cwtl
daa
cmpsl
dec
dec
shl
and
aam
xchg
cmp
push
cmp
xchg
fbld
daa
inc
xlat
sub
inc
nop
insb
cmpsl
das
push
repnz
test
pop
das
mov
pop
push
jmp
aaa
jl
jno
cwtl
inc
jnp
mov
mov
mov
cmp
lea
jno
test
jbe
jo
or
mov
aad
cltd
cmc
xor
pusha
dec
pop
loopne
jle
scas
imul
loope
push
jae
stos
jb
aad
lea
mov
das
push
xlat
cmp
pop
xor
subb
xchg
cmpsb
sub
xor
or
mov
adc
addl
arpl
lods
mov
ds
mov
repnz
out
and
mov
enter
and
jl
cwtl
mov
movsl
mov
ror
mov
mov
sbb
jb
jb
sub
scas
stos
idiv
dec
sbb
int
std
xchg
cmp
and
mov
dec
jnp
mov
ret
mov
stos
loope
inc
hlt
inc
sti
xchg
cwtl
scas
out
jmp
xchg
jmp
sub
insb
rcll
clc
cmpsl
sti
lea
lcall
inc
pop
mov
out
movsl
test
adc
pop
or
jno
mov
inc
or
mov
or
or
and
daa
lods
int
lea
fstl
icebp
cmp
out
sub
es
adc
popf
data16
or
add
sti
es
mov
xchg
ljmp
fadd
fiadds
lcall
repz
fimull
xor
cmp
and
inc
mov
jmp
lock
repz
fstps
adc
decl
das
pop
xchg
ja
dec
lcall
das
iret
and
xor
push
push
xchg
add
cs
dec
addr16
negb
cmp
inc
mov
imul
lea
in
das
gs
ja
fistpll
push
cwtl
lea
fcoml
das
mov
aad
mov
push
cmpsb
shr
fcomp
jl
test
mov
and
fisttpl
scas
pop
rcr
std
inc
popf
inc
stos
mov
out
jbe
data16
jo
mov
jns
mov
aad
ds
mov
push
sbb
xchg
filds
push
out
add
jne
cmpsb
or
sub
mov
mov
pop
fmuls
xchg
les
mov
mov
xchg
scas
add
mov
in
cmpsb
into
stos
lea
rolb
xchg
pop
mov
mov
inc
xlat
mov
jp
jne
push
out
sbb
dec
lea
pop
adcb
xor
out
mov
pop
test
cmc
jp
xchg
adc
mov
test
js
ljmp
ds
fsubr
xor
add
adc
das
lock
aam
push
clc
out
mov
mov
inc
sbb
das
aaa
or
fsub
movsb
xchg
pushf
sti
cltd
xor
fcmovu
ljmp
lods
pop
jo
jge
repz
lods
cmp
fstpt
xchg
dec
mov
mov
test
mov
shlb
cs
jnp
mov
jge
jg
pop
mov
xchg
sub
repnz
scas
scas
std
push
insb
cmpsl
pushf
repnz
mov
dec
loopne
push
in
std
pushf
cmpsb
repz
pop
outsb
rorl
mov
add
ffreep
in
lea
sbb
std
sub
jp
fwait
xchg
gs
loop
sbb
iret
xchg
dec
adc
mov
xchg
jo
mov
adc
and
out
aad
lea
cmpsb
push
imul
iret
adc
std
insl
mov
sti
or
cmp
les
cli
fidivs
cmpsb
lock
sub
cld
xor
mov
push
outsb
adc
lea
sbb
fstl
fisubrl
adc
inc
mov
push
mov
dec
mov
mov
lea
and
dec
cmc
jns
cli
movsl
lret
rorb
ret
dec
xor
std
mov
xchg
mov
scas
or
ss
pop
add
outsl
sbb
or
mov
into
xchg
subl
sbb
mov
sub
test
fsubp
xor
inc
data16
outsl
pop
cmp
cld
dec
cmp
outsl
bnd
in
cmp
test
jns
test
sarl
sub
mov
dec
jmp
mov
mov
xchg
pop
cmp
lea
mov
cs
inc
sbb
leave
ret
add
mov
cld
sbb
pop
or
sahf
xchg
es
lods
push
rcll
sbb
imul
fistl
dec
mull
aad
dec
and
or
test
out
fnsave
mov
push
adc
mov
xor
inc
pop
xchg
xchg
mov
das
test
xchg
dec
mov
arpl
jno
aaa
adc
sub
add
imul
adc
ret
cmpsb
loopne
inc
pusha
adc
jbe
mov
and
xor
fnstenv
repnz
ret
jge
insb
loopne,pn
movsb
roll
mov
outsl
cmpsl
mov
daa
rolb
jle
bound
hlt
mov
inc
loopne
pop
scas
ljmp
addr16
mov
sub
xor
xchg
mov
and
rcrl
pop
xchg
inc
lcall
negl
dec
inc
dec
xor
mov
andb
jl
pop
jbe
jle
adcl
mov
dec
inc
shll
insl
bound
orb
and
dec
mov
adc
in
push
push
adc
cmpsl
into
and
sub
nop
or
das
add
sub
cs
jl
ret
xchg
arpl
dec
sub
rorb
and
aas
push
cmpsb
xchg
aam
aas
mov
cmc
scas
push
cli
or
sti
aam
and
shrb
cmpxchg
cld
mov
jmp
stos
lea
jmp
mov
push
or
leave
inc
add
out
xor
int3
cs
jmp
cli
hlt
movsl
out
stc
xchg
mov
pop
rol
xor
sub
mov
push
addl
jns
outsb
scas
jl
cs
pop
xor
ljmp
lds
sbb
je
jmp
sahf
scas
or
in
or
lock
ljmp
nop
stos
xchg
nop
outsl
cwtl
xchg
movsl
into
gs
mov
jg
and
mov
jp
jnp
outsb
mov
das
pop
mov
add
mov
sbb
add
loope
cmpsb
out
iret
pop
xor
shrb
jg
add
sub
aas
scas
add
lea
gs
das
cs
cwtl
push
cmp
cmpsb
cmp
stc
push
repnz
jo
dec
popf
mov
or
push
andb
mov
xchg
lahf
mov
jmp
or
cmp
or
fbld
in
xchg
inc
out
aaa
popf
xor
into
inc
sbb
std
jns
call
and
out
ljmp
inc
inc
or
test
dec
xor
clc
and
mov
cmpsl
jo
test
xchg
outsb
jp
ret
outsl
cmp
lea
jo
jo
mov
dec
bound
dec
jle
cmpsb
outsl
add
movsl
enter
mov
in
xchg
lea
lods
xchg
add
xchg
jle
nop
cmp
inc
movsb
add
push
faddl
sub
xchg
lcall
pop
push
adc
ljmp
xchg
dec
push
addl
cwtl
in
sbb
cli
cs
add
mov
cmp
dec
into
push
xchg
xchg
lods
mov
cmpsb
xorb
daa
scas
adc
mov
adc
pop
fisttpll
aas
dec
xchg
xor
mov
xchg
fildl
out
push
mov
jae
sub
mov
jg
rorl
xor
leave
ror
cmpsl
addr16
jge
fidivrs
inc
sbb
fsubs
mov
outsl
sub
lss
adc
sahf
mov
cs
mov
sub
shl
test
ja
sbb
cmp
fdivs
test
movsl
sub
or
mov
daa
je
out
setp
scas
rorb
stos
daa
lods
sahf
sub
jb
sbbb
mov
fldl
imul
push
adc
mov
xor
jg
das
mov
ret
out
es
xchg
aas
push
lea
cmp
cmp
add
push
push
mov
shll
lcall
add
clc
in
aaa
dec
insl
jb
sbbl
lahf
cmpsb
add
sahf
inc
push
popa
adc
sbb
jg
lret
sbb
cld
cmc
sub
xor
popa
inc
jns
shrb
inc
mov
ljmp
jmp
xchg
cmp
lods
xchg
adcb
add
mov
sbb
or
addl
dec
cmp
sbb
sub
pop
sub
lret
repz
sub
sub
inc
enter
int
or
insb
inc
outsl
in
dec
mov
div
fsubs
jp
das
push
jge
mov
popf
mov
cmc
nop
mov
ret
out
lcall
inc
shll
xor
sub
mov
orb
adc
fsubrs
ds
inc
rolb
movsb
call
lods
lock
repnz
mov
jle
das
gs
inc
loope
stos
pop
jmp
jge
push
sub
mov
das
push
mov
popf
jl
mov
and
adc
cmp
loop
mov
pop
inc
and
pop
subl
jb
stc
in
mov
fsts
fs
stos
fsts
pop
lea
das
mov
rcrb
push
jmp
mov
in
cs
mov
lea
xor
das
mov
or
sbb
int
mov
aad
xlat
jecxz
cltd
gs
cmp
rorl
adc
aad
mov
andb
repnz
dec
movsb
xchg
pop
pusha
icebp
data16
in
jnp
xor
cmp
pop
sarb
mov
nop
pop
add
cld
xchg
mul
movsl
and
orl
push
add
add
sbb
push
lea
enter
popf
cmp
mov
xchg
xor
jmp
rcl
adc
mov
mov
clc
mov
dec
lea
lds
lahf
insl
pop
ret
cs
in
ja
xor
xchg
aam
rcrl
cmp
or
mov
pop
sbb
jo
call
add
jge
mov
sub
nop
sbb
sbb
sbb
jb
pop
lea
imul
sub
xchg
hlt
movsl
fwait
push
popf
mov
lret
andl
mov
mov
leave
lahf
xchg
mov
enter
bound
mov
imul
xchg
adc
cs
fistpl
addl
adc
xchg
pop
pop
dec
xchg
xor
push
push
out
cmp
rol
mov
sti
or
mov
sub
push
repnz
std
mov
pop
lea
dec
push
scas
mov
iret
cs
mov
mov
lahf
mov
push
and
into
xchg
xor
add
icebp
mov
cmp
lods
loopne
mov
mov
in
jo
xor
pop
push
fistpll
mov
fucomi
xchg
sbb
cmp
scas
xlat
cmp
mov
mov
cmp
int
mov
inc
lock
sub
aaa
int
adcb
and
lret
outsl
mov
add
loope
ja
sbb
pop
xchg
mov
movsb
das
mov
push
or
cmp
rorb
xlat
xor
das
xor
in
test
dec
mov
imul
loope
xor
mov
xor
aam
in
pop
das
aas
movsb
pop
and
pusha
sbb
movsl
mov
and
mov
dec
mov
cmp
bound
mov
mov
popa
jmp
mov
repnz
cmpsl
imul
xor
mov
inc
test
cmpsl
adc
lahf
stos
lock
fsts
repz
fsts
or
lds
adc
das
bound
out
fldenv
mov
insl
std
add
adc
push
les
xchg
cmpsb
sahf
jae
xor
arpl
mov
sub
pop
fisubl
sti
scas
lcall
mov
push
cmpsb
in
inc
inc
sahf
shll
fbld
dec
popa
aam
cmp
mov
std
dec
adc
dec
add
sbb
into
push
ror
leave
mov
xchg
outsl
fwait
or
xor
pop
iret
mov
lret
pop
dec
cmpsb
push
inc
mov
push
dec
fadds
xor
fildl
or
int3
lock
jge
sbb
xchg
cmpsb
xchg
insb
ja
in
or
cmpsl
stc
add
and
adc
jg
xor
xchg
sub
shl
sub
adc
add
imul
xor
out
mov
sub
push
mov
lret
pop
mov
popa
push
xchg
jp
inc
ret
insl
push
dec
push
push
fsubrs
mov
das
pop
and
fistl
or
mov
sbb
and
xor
enter
mov
cwtl
xchg
or
andb
sbb
dec
mov
push
fimuls
andl
lahf
cli
or
adc
fldenv
push
not
jmp
mov
test
lea
mov
jl
push
mov
jnp
punpckhwd
loop
inc
cmc
js
scas
mov
xchg
lea
xchg
ds
gs
and
cmp
movsb
or
call
sarl
lea
mov
pop
jne
insl
pop
mov
out
movsl
fisttpl
das
inc
fwait
hlt
loopne
loope
pop
cmpsb
imul
mov
sub
into
push
push
sbb
cs
mov
outsl
inc
rorw
shll
adc
testb
jnp
push
outsl
inc
inc
pop
jns
movsl
iret
adc
xchg
inc
out
xor
hlt
jnp
or
or
pop
jl
stos
cmp
pop
fs
sbb
inc
adc
xchg
inc
sub
cld
dec
cmp
sbb
das
lods
xchg
mov
jne
fwait
push
movsl
jne
daa
cmp
sbb
jecxz
xchg
mov
jo
lcall
push
push
cmpsb
pop
leave
add
mov
mov
test
das
cmpsb
xor
lret
nop
mov
movsb
lods
mov
inc
pop
lods
cs
push
sub
scas
xor
push
scas
cmp
adc
push
clc
das
das
sbb
fldcw
std
sub
mov
mov
xor
jbe
das
sbb
push
cmpsl
pop
and
popa
clc
cltd
jb
pusha
add
sar
inc
cmpsl
fldz
mov
xchg
push
orb
addr16
lea
xor
adc
arpl
das
lea
xor
ret
mov
int3
hlt
cmpsl
mov
sbb
jg
xchg
movsl
xchg
jns
shll
popa
push
stos
int
xor
arpl
shlb
bswap
lds
mov
push
movsb
mov
testl
mov
lds
jp
mov
pop
mov
xor
fistpl
mov
in
sub
jg
cmpsb
fwait
inc
xchg
ljmp
icebp
xchg
push
lcall
loopne
aaa
cmpsl
mov
add
out
jno
cs
mov
roll
pop
cmpsb
and
pusha
xlat
jne
xchg
mov
or
and
mov
inc
mov
push
std
test
mov
push
sub
mov
in
mov
mov
xchg
out
ret
sub
inc
int
in
outsl
xor
xchg
in
push
push
xor
jge
cmpsb
iret
mov
sub
fsubr
sti
xor
xchg
adc
cmpsb
jno
or
push
mov
rol
imul
in
fsubrs
cs
or
pop
in
adc
mov
push
inc
popa
mov
sahf
sarb
inc
cs
push
sub
sbb
mov
aad
xchg
xor
enter
popa
sub
sbb
decl
popa
and
das
clc
testb
and
aaa
ljmp
lods
and
repz
jns
xchg
cs
dec
pop
inc
jmp
das
enter
pop
jle
scas
mov
popf
outsb
inc
call
imul
mov
cld
add
outsl
adc
cmp
fimuls
pop
and
push
push
decb
enter
rorl
cmp
movsl
nop
and
shll
inc
les
arpl
pop
mov
insl
loope
xor
arpl
xor
push
jle
leave
cmpsb
cmp
mov
fnstenv
mov
pusha
mov
fcmovnbe
cltd
pop
lcall
insb
repz
stos
xor
cltd
xchg
in
mov
outsb
lods
sahf
push
es
dec
add
cmpsb
mov
fsts
mov
icebp
lea
jl
jbe
inc
sub
popf
test
fs
and
mov
pusha
pop
fldenv
mov
in
jbe
das
lret
imul
or
test
adc
dec
ret
jp,pt
add
mov
movsl
jp
xchg
or
jl
push
pushf
xchg
or
jb
sbb
or
js
jmp
mov
mov
mov
ror
jmp
in
stc
cli
cwtl
sbb
mov
lods
stc
jns
dec
adc
add
cmp
xor
int3
movsl
mov
mov
sub
ret
xchg
dec
icebp
out
movsl
sub
push
push
mov
je
mov
pop
and
mov
mov
mov
and
xchg
dec
sub
mov
push
stos
dec
pop
push
scas
aaa
lea
movb
xor
pop
cmpsb
pop
out
push
sti
sub
enter
stc
mov
xor
scas
push
out
and
cmpsb
mov
scas
adc
pushf
add
jno
jno
enter
shll
lea
movsb
pusha
es
pop
fldcw
mov
fstpt
xchg
jmp
cli
pop
das
fs
pop
sahf
cmpsb
and
movsl
add
mov
lret
cmp
xchg
or
jecxz
cs
rorl
in
mov
mov
std
xchg
and
stc
adc
and
aad
add
cmp
out
lcall
pop
add
inc
out
ja
mull
mov
shlb
call
scas
testl
xor
aas
stc
mov
sbbl
and
push
ds
fdivs
xor
sub
pop
xor
jo
leave
ss
iret
cltd
lods
push
cmp
and
adc
out
add
aad
mov
xlat
sub
sbb
mov
iret
and
rcl
dec
addps
in
or
jne
dec
subl
imul
and
icebp
addr16
cmp
fcoml
mov
jmp
jno
mov
pushf
sysenter
lea
or
mov
cmp
movsb
ficoms
jbe
orl
les
lret
push
or
lea
xor
aam
test
pop
pop
imul
jecxz
jb
test
jae
int
data16
divl
in
into
mov
movsl
mov
jne
and
das
dec
mov
mov
dec
ret
cs
mov
sysret
xchg
sub
movsl
cld
in
in
pop
cmp
scas
cld
add
inc
cmpsb
adc
or
jle
testl
sub
out
xor
xor
leave
jnp
frstor
mov
ficoml
jbe,pn
aam
idiv
mov
subb
push
insl
push
das
repz
jle
mov
jge
jmp
into
aaa
das
addb
cmpsb
dec
sbb
jnp
notb
daa
idivb
add
lea
cli
test
xor
int
fadds
hlt
rorl
inc
add
mov
adc
inc
push
dec
mov
xlat
pop
in
leave
sub
out
stos
mov
ljmp
push
lds
jg
push
jno
les
sub
cld
mov
xor
jns
test
pop
fstl
ljmp
sbb
mov
cmp
xchg
test
add
inc
mov
loopne
pop
lea
arpl
fucomi
fildll
inc
scas
nop
scas
lret
ret
mov
adc
dec
ja
lods
loop
lea
inc
std
in
jo,pt
mov
int3
ja
cltd
ss
push
adc
int
adc
cmp
das
xor
leave
shlb
clc
cmpsb
or
fldl
das
test
xor
test
out
shl
mov
repnz
cmpsb
mov
sub
jmp
es
mov
das
dec
add
pop
pusha
pop
push
push
mov
sbb
xor
insb
movl
lea
lds
mov
or
orb
ja
mov
add
jecxz
or
insl
and
inc
mov
inc
outsl
xor
jle
fcoml
adcl
cmc
js
and
xchg
ret
lea
xchg
icebp
sub
mov
inc
inc
push
lds
insb
pop
add
push
adc
cs
stos
shrl
movsb
pop
add
std
cs
or
pop
cmpsb
xchg
mov
xchg
in
push
cmp
cmp
add
jl
icebp
mulb
mov
cmpsb
mov
das
hlt
sub
pop
sbb
jmp
cmpsb
xchg
sbb
push
rcr
fnstenv
push
sub
push
add
cld
je
inc
push
cs
adc
fistl
andb
sub
jge
das
sarb
outsl
dec
scas
push
ss
into
dec
xor
mov
xchg
in
test
test
mov
in
push
into
cs
movsl
rclb
out
popa
or
dec
mov
addl
jl
cmpsb
add
mov
mov
xchg
or
pusha
test
jp
xor
mov
mov
not
mov
repnz
xchg
sarl
xlat
cmpsb
icebp
mov
sbb
lcall
add
inc
lret
iret
orl
and
stos
popf
push
mov
xchg
cli
jge
inc
in
sub
cs
shr
mov
cs
ret
xor
je
or
sbb
gs
into
loopne
std
xchg
cmpsb
inc
icebp
cmp
xchg
int
rorl
movsl
add
das
and
out
adc
out
aaa
andb
xchg
popa
hlt
or
sub
cmpsb
sub
iret
enter
dec
mov
adc
xchg
hlt
sub
jmp
test
test
mov
or
repnz
addr16
aam
or
cmp
inc
mov
es
mov
movsl
mov
imul
jge
imul
mov
or
and
into
out
sbb
pop
das
ds
jg
push
lods
pusha
jecxz
pop
push
mov
mov
inc
xor
lcall
adcl
xchg
int3
ficoml
out
pop
imul
xchg
repz
push
notl
das
or
adc
mov
nop
ja
mov
cmpsl
cmp
ja
data16
enter
lret
ror
call
and
movsb
lea
xchg
and
mov
xchg
cmp
lahf
cmpsb
xchg
adc
jo
jns
pop
aas
mov
inc
xor
cmp
lret
adc
aam
jg
add
movsl
addb
sbb
je
push
dec
aas
outsb
dec
dec
popa
sub
cmp
stos
cmc
mov
lret
mov
xchg
dec
insb
aad
scas
rcrl
jmp
call
mulb
cmpl
mov
out
xchg
rorl
test
cld
stos
mov
dec
ret
outsb
into
jp
push
lods
sub
mov
cmc
and
sub
lock
imul
jno
and
mov
xchg
push
adc
and
mov
dec
inc
mov
jae
xchg
mov
into
pop
mov
dec
ss
out
jo,pt
inc
test
in
repz
pop
in
in
outsb
lret
cs
sub
mov
push
mov
or
gs
stc
addb
jl
mov
add
xor
lea
lcall
pop
dec
mov
jb
push
movb
in
das
test
cmpsl
lea
mov
sub
jl
mov
imul
jbe
or
movsl
repz
insb
stos
insl
ljmp
xchg
data16
sub
cmpsl
pusha
sbb
out
lds
sub
test
jb
jae
out
mov
fiadds
xchg
or
jge
xchg
mov
imul
jnp
fistps
jg
mov
mov
mov
sub
sub
or
mov
lea
out
cmpsl
mov
cmp
lahf
jo
lds
cltd
jnp
pop
mov
or
jo
mov
sub
adc
lret
push
xchg
xchg
rorl
popf
rol
les
mov
mov
mov
sub
loopne
xor
fucom
int3
push
inc
rorb
pop
mov
movsb
lds
push
lret
xlat
fdivrp
push
and
sub
dec
in
dec
mov
ljmp
in
sub
jg
das
out
inc
sbb
cwtl
dec
ret
cmpsb
sbb
fs
push
mov
ss
mov
sbb
mov
push
push
adc
scas
lea
cmp
push
data16
movsl
and
aas
xchg
pop
inc
mov
enter
xor
mov
jno
scas
mov
das
je
jne
in
ds
test
mov
push
mov
lcall
sub
sbb
sahf
fcmovnb
inc
jl
sahf
pop
aas
pop
pop
or
das
add
xchg
xchg
loope
imul
push
pop
test
scas
mov
jno
mov
test
icebp
movsl
sbb
faddl
mov
sbb
gs
lahf
mov
sbb
mov
loopne
push
bound
or
inc
sti
adcl
push
popa
aaa
push
inc
sub
shlb
dec
mov
or
xchg
cmp
fwait
cli
dec
leave
add
sub
mov
and
test
xchg
add
or
sar
mov
sahf
enter
pop
pop
in
mov
in
xor
mov
fcoml
cmpsb
daa
nop
loope
jmp
out
cmp
sub
or
test
cmpsb
iret
in
mov
push
mov
or
mov
dec
insb
push
jge
sbb
ficomps
xchg
dec
cwtl
pop
mov
push
sub
ret
das
imulb
or
ds
xchg
mov
loope
add
pop
pop
xchg
xor
imul
pop
gs
aaa
pop
jae
push
add
insl
mov
cmpsb
cmp
mov
cmp
xlat
in
mov
lahf
pop
mov
jge
jmp
insb
cmp
repz
cmp
or
jmp
jbe
sub
sahf
sbb
in
fwait
mov
mov
cmc
jns
inc
test
add
addr16
jge
jecxz
lea
add
mov
xor
int3
paddusw
pop
lea
ja
lret
adc
jns
add
xlat
mov
test
out
adcb
xchg
scas
lcall
xchg
jle
cwtl
bound
ja
pop
push
mov
cmpsb
int
test
xchg
jl
mov
fidivl
lea
arpl
mov
sbb
or
lea
inc
jge
shlb
sub
add
fidivs
movsl
fdivr
call
xor
icebp
out
aad
mov
xchg
in
and
cs
mov
mov
and
lea
out
or
out
mov
insb
sbb
push
add
fisttpl
dec
or
fs
mov
jle
daa
cmpsb
stos
cs
xchg
mov
sub
ljmp
jns
xchg
scas
call
mov
mov
lcall
add
add
mov
sub
jp
lods
in
dec
mov
bound
movsb
push
das
pushf
sti
popa
ljmp
in
les
jge
cmp
push
ret
imul
lea
mov
cmpsb
clc
mov
rorl
lds
nop
les
mov
mov
cmp
inc
cmpsb
scas
inc
cmc
ljmp
jns
add
loopne,pn
jl
andl
push
cmc
push
push
fwait
sti
sbbb
insb
into
lds
outsb
rclb
lods
and
shrl
fistpll
inc
xchg
fwait
xchg
cwtl
orl
fbld
pop
clc
jg
lcall
cmpsb
fbld
xchg
in
fadds
out
movsb
add
cmp
jp
das
push
lods
insl
test
pusha
mov
add
cli
push
mov
out
sbb
call
into
dec
mov
repnz
jo
xchg
test
movsl
mov
pop
adc
and
cmp
mov
sub
xlat
imul
in
mov
stos
push
inc
jbe
or
mov
aaa
les
push
call
in
jne
cmp
call
mov
dec
jge
cmp
mov
daa
xchg
ret
aad
add
scas
pop
push
inc
orb
xchg
movsl
xchg
iret
mov
jbe
pop
mov
scas
filds
movsl
iret
xchg
std
jg
pop
mov
scas
jecxz
negb
add
scas
std
fcomp
pop
mov
cli
pop
lods
dec
push
loope
loop
jmp
lds
imul
or
xchg
cwtl
decb
das
sbb
lods
mov
movsb
xchg
xor
add
icebp
inc
cmpsb
hlt
sbb
mov
enter
cmpsb
pop
cmpb
and
arpl
out
mov
daa
test
sarl
push
push
nop
mov
pop
push
popa
xchg
push
xor
test
lret
test
icebp
rorl
sub
xor
enter
movsl
cmp
cld
and
loopne,pn
cmp
rolb
loop
push
andb
fwait
mov
pop
das
ret
in
pop
pop
jno
push
xchg
enter
mov
arpl
xchg
jge
add
out
jge
push
push
add
in
inc
lds
cmpsb
jnp
jl
pusha
imull
scas
mov
shrb
stos
mov
push
fbstp
test
into
sahf
data16
or
pcmpeqd
scas
push
cwtl
lock
jl
mov
push
inc
jae
dec
mov
sub
mov
mov
das
bound
clc
aas
cmpsb
sub
mov
adc
xchg
jp
dec
and
xchg
cmc
dec
js
cmp
aas
and
adc
cmpsl
aad
jnp
jl
lcall
mov
cmpsb
ret
ds
or
xor
loop
test
cmp
sbb
sub
and
jle
pop
popa
lea
inc
js
popl
xchg
jno
mov
ss
mov
lcall
fsubrl
movsl
in
test
stc
jne
andb
stos
sbb
mov
addb
xchg
sbb
icebp
orl
dec
mov
das
xor
inc
cmp
mov
pop
int
lcall
nop
xor
aam
lret
pop
jmp
dec
mov
fistl
les
ret
das
outsb
jb
adc
mov
je
push
jo
popf
rcrl
es
sti
ret
cmp
sbb
xor
cmp
mov
pop
push
rcr
mov
pop
lea
and
push
mov
cs
push
sbb
addr16
lock
mov
xor
pop
ficoms
mov
cwtl
into
mov
jnp
cmpsb
or
mov
push
jo
push
cmp
bound
xor
enter
mov
je
fwait
popa
mov
in
mov
mov
jg
adcb
ret
stos
jecxz
test
into
int
jl
cs
add
movsl
imul
sub
push
fld
ljmp
pop
or
das
mov
imul
cli
cmp
jl
dec
rol
xchg
ret
jmp
jle
cli
out
mov
sarb
mov
ss
pop
pop
inc
cs
daa
lret
dec
sub
jne
loopne
lea
mov
sbb
xor
lahf
cmpsb
jmp
mov
pop
div
mov
adc
cltd
fistl
aam
add
daa
rclb
add
mov
mov
and
mov
inc
mov
cmpsb
pop
xor
rorb
cs
jl
mov
push
sbb
cmp
jae
sti
faddl
movsl
cmp
jecxz
cmpl
mov
push
fisubs
dec
aam
and
fcmovnu
mov
cld
cmpsl
rorl
dec
xor
and
jl
repnz
in
stc
inc
aad
loope
jo
sub
arpl
add
xchg
arpl
subl
stos
mov
int3
repnz
fisttps
sbb
sub
cmp
iret
out
dec
xor
push
and
adc
xchg
or
test
pop
push
scas
jno
out
test
mov
out
pop
xchg
jae
pop
gs
cmpsb
jae
sbb
out
pop
loopne
cld
push
pop
lock
mov
dec
inc
mov
rcr
or
pop
inc
das
jle
add
mov
adc
lsl
addr16
das
das
add
sbb
or
dec
dec
mov
insb
and
cwtl
or
mov
add
cmpsb
mov
mov
test
out
push
out
or
push
mov
sbb
fwait
in
test
xchg
leave
jl
pop
xor
das
dec
movsl
adc
cld
push
jno
hlt
popf
dec
lea
push
aaa
sub
or
sbb
out
out
sub
mov
add
inc
push
and
mov
jecxz
add
test
cmp
dec
shl
repnz
xor
push
cs
mov
aad
xor
rcrl
dec
das
loopne
adc
daa
mov
cmp
repz
sbb
cmp
out
in
sarl
mov
ja
fbld
add
scas
stos
mov
outsl
inc
shll
dec
sub
xor
ret
ret
icebp
cmp
push
pop
cwtl
fmul
test
mov
jbe
lret
sub
cmp
jmp
subl
sti
or
aaa
idivb
rol
lds
xchg
rol
dec
cmpsb
push
and
dec
fbld
cmpsb
ficomps
loopne
jecxz
test
loop
mov
in
fnsave
cwtl
pushf
lea
popf
out
or
lcall
stos
sub
sar
pop
enter
das
icebp
xor
das
sub
cmpsl
inc
adc
pop
popa
movsl
sbb
shlb
cmp
call
fldt
cmpsb
mov
or
out
hlt
test
mov
aam
pop
mov
xor
das
out
mov
sub
ss
lea
dec
iret
mov
or
repnz
movsl
repnz
mov
mov
fnsave
stos
or
aaa
xchg
ss
imul
cmp
pop
jmp
jae
push
cmpsb
in
adc
cmp
bound
add
push
sbb
and
add
lds
jns
gs
cmpsl
push
mov
cltd
insl
inc
push
test
jl
push
popa
mov
xor
hlt
jbe
lea
icebp
xor
xor
shll
int
lea
pop
vucomiss
in
stos
call
push
fiaddl
jp
sub
sahf
dec
dec
ret
mov
sbb
mov
add
jnp
dec
sahf
lret
xor
ljmp
cmpsb
and
adc
fwait
sbb
jne
jbe
push
iret
cmp
cmpsb
stc
test
outsb
mov
lret
mov
and
dec
push
sbb
int
das
mov
sti
call
test
push
insl
hlt
test
xchg
mov
in
fcomps
outsl
test
cmpsb
repz
fsubp
sbb
mov
sub
add
cwtl
mov
js
or
test
fidivrs
cwtl
bound
ss
shlb
mov
push
notl
dec
inc
mov
lahf
aaa
mov
xchg
lea
scas
push
aaa
xlat
or
adcl
ret
das
push
ss
stos
in
aas
and
mov
push
cld
or
jp
enter
and
aam
mov
insb
arpl
xchg
repz
mov
aam
les
inc
push
adc
out
or
das
mov
repz
mov
xor
es
ficoms
mov
pop
test
lea
sahf
addb
add
cmp
push
fwait
xor
lea
dec
sti
cld
fcompl
das
fsub
mov
mov
add
adc
inc
push
test
xchg
jp
cmpb
cmp
jo
das
test
pop
push
and
or
mov
jg
adc
das
or
mov
scas
push
test
loopne
das
cmpsl
mov
pop
in
xor
sub
ja
inc
inc
mov
loope
pop
cmp
pop
ret
inc
mov
mov
or
mov
dec
jae
add
scas
sbb
shll
lea
lret
fsts
mov
daa
mov
jb
mov
xchg
lcall
dec
add
in
pop
add
lea
lret
das
mov
bound
cmpsb
cli
mov
xchg
loopne
cltd
fs
mov
stos
xchg
mov
fstp
pop
out
das
or
xorb
sbb
cmc
or
xchg
xor
adc
jns
mov
add
xor
sub
cmpsb
adc
sti
sbb
testl
mov
lods
push
inc
dec
les
jbe
mov
insb
dec
in
leave
out
mov
cmpsb
ret
inc
dec
aaa
mov
stc
mov
cmpb
jne
add
outsb
inc
dec
sub
jmp
mov
or
jae
add
xchg
int
scas
jno
in
push
cld
mov
xor
jecxz
jmp
icebp
lcall
lret
ret
mov
scas
shll
into
jmp
call
fimuls
je
loopne
xor
mov
xor
mov
stc
outsl
into
add
sti
jge
cmpsb
sahf
icebp
mov
loope
scas
nop
mov
lret
inc
jge
addr16
fadds
mov
cmp
jmp
push
xor
movsb
fimuls
rcrl
cs
pop
lret
mov
cmpsb
push
inc
in
push
rcr
movsl
add
xor
loopne
sbb
mov
jnp
pop
rcll
xorb
loope
arpl
popf
shlb
jle
dec
push
inc
xchg
das
mov
fadd
and
sub
cmpsl
and
push
ljmp
divl
xchg
cmpsb
imul
lret
pushf
hlt
icebp
sbb
movsb
push
xchg
shll
sub
mov
mov
cmp
aam
pop
cmp
lods
dec
repnz
sub
in
in
aam
jns
shrb
data16
jnp
sub
adc
push
mov
dec
lds
inc
lods
jp
or
std
xor
xor
or
pop
dec
xchg
mov
cmp
int3
sub
ds
lea
jnp
in
mov
sbb
repz
in
xchg
stos
dec
das
xchg
mov
movsl
js
dec
push
dec
sarb
sub
lea
lahf
cwtl
xchg
das
dec
int
int3
mov
mov
adc
push
and
das
bound
mov
cmpsb
jb
shll
push
jne
cmpsl
push
in
ret
dec
in
or
and
scas
les
mov
rolb
add
out
ljmp
cmp
cmc
in
jb
fsubrs
jl
lret
das
dec
lods
mov
sbbl
jbe
jb
imul
xchg
mov
cmpsl
mov
lret
ret
cmpsb
and
jns
mov
or
sub
shlb
jbe
inc
push
lahf
mov
lds
mov
test
inc
pop
mov
mov
cmpsb
out
into
mov
testl
lea
xor
mov
xor
les
leave
enter
inc
mov
cli
lds
cmc
sbb
lea
es
jmp
stc
sbb
inc
or
fcoml
xchg
cltd
fwait
or
outsl
pusha
fldenv
loop
das
scas
call
inc
sbb
push
movsl
adc
mov
sbb
push
mov
test
xchg
imul
or
sub
adc
pop
add
imull
mov
sub
out
or
jno
lods
lret
add
shr
pop
dec
cmpsb
dec
std
mov
lods
ret
mov
sbb
enter
xchg
adc
push
pop
pop
cmpsb
push
pushf
scas
mov
xorl
add
aad
add
adc
mov
jb
or
jl
sbb
mov
andl
mov
add
sbb
ret
rolb
cmp
jmp
int3
and
out
sbb
test
xor
bound
fwait
jecxz
aas
mov
repz
lret
aam
mov
push
fisttpl
shll
dec
adc
ret
rorl
pop
pushf
shrl
dec
das
cwtl
jl
pop
xor
arpl
push
add
cs
dec
xchg
dec
sbb
aas
cmp
cs
loopne
jle
in
pop
mov
push
mov
test
js
cmpsb
mov
iret
push
mov
jbe
lea
leave
mov
imulb
das
cmpsl
popf
jbe
stos
pop
mov
leave
and
mov
popa
jp
mov
cmp
sub
dec
xlat
cs
add
cmpsl
cmpsb
mov
mov
add
push
sub
lea
sbb
sti
mov
movsl
xchg
jp
mov
add
sahf
mov
push
pushf
das
in
inc
adc
cmpsb
or
lea
dec
fisttps
cmp
mov
mov
xchg
sbb
cs
mov
inc
cmpsb
jnp
pop
push
xchg
push
movsb
jge
decl
or
sbb
mov
add
mov
movsb
cs
mov
jge
subb
inc
cmc
inc
xchg
inc
mov
imul
sti
mov
dec
lea
adc
aad
loop
decl
or
lea
push
sbb
loopne
push
push
js
push
mov
xor
popa
subl
hlt
push
rol
sbb
lret
pop
or
adc
fcoml
sahf
sbb
aas
mov
fimuls
inc
xor
xor
pusha
into
gs
sbb
mov
jmp
call
popa
in
add
in
pop
popa
arpl
out
call
and
ret
icebp
xchg
movsb
je
jno
fucomi
insl
lods
push
xchg
and
inc
cltd
pinsrw
sbb
cmp
dec
inc
lea
jae,pn
jecxz
mov
es
push
mov
std
fsub
mov
je
fmull
fldt
imull
push
lea
test
jbe
fimull
mov
rcrb
notl
xchg
jge
adc
js
jb
das
push
pop
or
cmpsb
rcrb
mov
pop
pop
xor
push
ss
and
mov
sbb
cld
dec
cmpsb
imulb
bound
mov
sub
int3
roll
sub
jo
cs
push
addb
mov
pushf
int3
movsl
and
mov
lret
lods
xchg
sbb
sub
cs
xor
cmpsb
or
rcrb
and
cltd
inc
mov
scas
addr16
mov
mov
icebp
cs
jmp
push
dec
and
ja
mov
xchg
fs
xor
mov
stos
fildl
pop
rep
imul
stos
stos
jg
adc
mov
es
mov
xchg
sbb
jno
sbb
or
and
jmp
popf
cmp
dec
fdivr
jns,pn
jo
xchg
popa
lea
lret
repnz
add
jbe
aad
mov
insl
mov
jns
dec
ds
fwait
push
das
vmwrite
test
pop
lea
lods
neg
xor
test
sbb
push
mov
mov
sti
xor
inc
cmpsb
push
add
cmc
int
dec
xor
mov
push
jb
mov
loopne
cmpsl
xchg
daa
bnd
das
mov
jle
jnp
cmp
inc
push
mov
cwtl
xlat
in
sub
jp
xchg
aaa
ficoml
outsl
lods
lds
dec
mov
fsubrl
pop
mov
repz
outsb
shrl
and
adc
das
imul
clc
inc
incl
int3
outsb
js
adc
mov
mov
popf
mov
cmp
mov
aaa
rcrl
movsb
mov
call
ror
scas
mov
aad
sub
jb
lea
dec
fadd
in
push
xor
mov
out
aad
ret
in
das
filds
mov
das
mov
or
clc
adc
xchg
das
xor
mov
add
pop
ds
lea
movsl
push
dec
mov
mov
xor
mov
cmc
mov
fcomps
cmc
xor
inc
cli
insl
adc
jno
lcall
rorl
daa
pop
cmp
fistpll
aas
popa
push
movsb
lea
lods
out
dec
das
call
mov
in
lea
cmc
incb
xchg
fcmovnb
enter
lret
daa
mov
sub
mov
notl
out
das
adc
std
int
or
mov
inc
daa
inc
shl
or
movsl
in
mov
xchg
xchg
sahf
push
jb
imul
int3
adc
std
jb
cmp
mov
pusha
out
jmp
gs
push
imul
push
cmpsl
repnz
mov
fstl
xchg
mov
shll
mov
sub
adc
lods
pop
orb
push
jno
xor
mov
or
pop
xchg
imul
test
cmpsb
push
mov
aas
xchg
xchg
xor
sub
es
add
mov
cs
iret
adc
pop
in
mov
nop
arpl
aaa
arpl
push
aam
fldenv
cld
adc
cmp
mov
xor
cmp
mov
xor
lea
pop
push
xor
out
std
rolw
pop
xor
je
shll
mov
sbbb
sub
lea
xlat
icebp
sub
fiadds
lea
cmpsb
push
loop
jle
ja
and
sub
xchg
or
je
xchg
mov
inc
bound
into
sbb
mov
and
cld
pushl
mov
call
or
das
lahf
stos
sahf
inc
lods
sub
push
jl
dec
stc
inc
cli
dec
inc
pop
lret
xor
add
or
jp
imul
add
sbb
ror
fildll
jae
loope
adc
movsb
fisttps
js
xchg
sub
pop
das
insl
je
in
xor
xor
push
mov
sbb
lea
andl
cmc
adc
sub
add
aaa
ret
mov
add
jnp
bound
call
or
push
push
aas
jo
jae
popa
cli
call
xchg
inc
lea
cmc
cmpsb
out
jp
push
add
pop
cld
xchg
xchg
mov
and
xor
test
movsb
scas
mov
lea
ret
or
and
inc
fs
or
test
daa
jno
adc
mov
push
or
lea
ljmp
or
cltd
push
mov
aad
and
ret
ss
xchg
cmpsb
mov
dec
push
in
cld
mov
mov
enter
or
mov
jae
sub
jno
lahf
cmc
sbb
sub
mov
push
or
loopne
in
mov
jl
pop
push
ljmp
xchg
pop
enter
mov
mov
sub
stos
mov
insb
aam
mov
cmc
out
xchg
mov
jl
aas
and
push
lea
pop
out
bound
adc
and
jbe
pop
jnp
movsb
fs
mov
xor
mov
dec
addr16
pop
js
mov
ja
xor
das
sbb
int3
popa
cmpsb
insl
xchg
add
push
mov
add
or
xor
fwait
arpl
dec
das
filds
int
xchg
and
push
outsb
sbb
and
xchg
cmpsb
nop
push
jnp
loopne
push
mov
addr16
cli
loope,pn
roll
mov
out
mov
cmc
adc
in
movsl
das
mov
dec
ret
inc
in
movsb
jae
test
outsl
cmp
les
mov
dec
add
mov
out
and
jl
sbb
inc
mull
pop
repz
popa
nop
xchg
fcoml
enter
pop
push
xchg
add
lea
xor
cmp
mov
inc
cmpsb
cmc
lcall
dec
jae
jb
or
push
jnp
or
sarb
push
push
lahf
das
push
ja
xchg
clc
pop
mov
loope
jnp
xchg
jae
out
inc
or
inc
cmpsb
mov
mov
cwtl
mov
cmp
enter
xchg
idivl
fdivl
add
fdivrl
cmp
mov
out
cmc
lea
loopne
lea
in
pop
mov
das
into
or
sbb
push
scas
ss
mov
subb
bound
rcrl
inc
mov
sub
mov
inc
mov
mov
cld
jb
jb
add
sub
sarl
mov
push
stos
pop
adcl
add
aam
ss
dec
and
mov
jge
imul
inc
cmpsb
pcmpeqd
mov
cmpsb
stos
out
push
jnp
adc
mov
xor
cltd
jae
bound
push
fldenv
repz
and
pop
jmp
cmpsb
js
jl
movsb
push
cmp
aam
test
xorb
push
cltd
jle
fsubrs
xor
icebp
pusha
mov
mov
icebp
dec
add
or
sbb
adc
pop
aam
std
mov
imull
sub
hlt
pop
push
loope
mov
xor
test
add
adc
pusha
push
mov
sub
mov
js
lret
push
mov
sub
xor
mov
jp
sbb
or
sti
mov
mov
inc
cmp
lods
fsubl
in
fisttps
lea
jo
jmp
lea
out
addr16
sub
imul
sbb
jmp
lcall
nop
fwait
xor
loop
push
push
arpl
stc
mov
lea
insb
scas
mov
lahf
and
jnp
xchg
adc
push
mov
dec
xor
imul
dec
cltd
mov
sbb
and
and
ja
jno
fnstcw
dec
pushf
or
or
xor
out
jns
sub
pop
psubusw
cmpb
push
andl
movl
sbb
push
push
shrl
clc
jge
mov
lea
hlt
nop
movsl
add
cmp
outsl
test
adc
add
cld
sub
cmp
sub
outsb
sub
cmpsb
cmp
dec
test
in
mov
pop
ljmp
in
jno
mov
push
das
mov
jbe
jnp
mov
lret
insl
add
inc
or
and
lea
or
hlt
or
mov
jb
clc
add
repz
cmp
enter
sbb
push
xchg
fwait
nop
xchg
inc
and
les
out
faddl
jge
clc
into
and
aas
lea
test
das
test
mov
pushf
dec
ja
xchg
aad
jecxz
lcall
cwtl
push
push
rcrl
mov
das
sub
inc
mov
andb
adc
xor
add
xchg
pop
lea
jae
js
pop
icebp
test
loope
test
push
pop
push
scas
lea
lret
iret
sbb
les
mov
sub
push
sti
push
sbb
pop
bound
xchg
outsl
shll
push
lock
cmpsb
xor
rol
mov
sbb
imul
inc
mov
inc
flds
fstp
cwtl
dec
cli
rorb
pushf
cmp
fiaddl
movsb
xchg
cmp
fdivrl
aaa
rolb
fs
sbb
dec
inc
xor
mov
std
pushf
mov
in
pop
cmp
mov
jecxz
sbb
andb
cmpsl
xor
add
mov
jb
mov
sbb
lahf
adc
xor
jb
xor
loope
pop
mov
jnp
std
lea
jp
sub
outsl
sbb
cs
push
or
sub
mov
in
adc
test
enter
in
xor
andb
in
mov
pop
jo
outsl
xchg
mov
stos
scas
xchg
push
out
inc
or
jg
inc
push
cmc
sahf
sbb
xlat
and
pop
or
xchg
das
in
mov
fdivrs
add
adc
jae
int
stos
les
dec
fdivrl
pushf
aam
pop
sub
in
mov
in
push
and
ret
jl
shufps
rcrb
mov
outsb
js
inc
pop
mov
push
js
sahf
or
lret
clc
popa
lea
call
flds
addb
ljmp
mov
cs
popf
or
dec
cli
movsl
jb,pn
add
ror
cli
mov
adc
inc
and
jge
mov
cmpl
xor
retw
mov
mov
lea
xor
push
xor
cli
sub
ljmp
mov
or
fwait
clc
dec
mov
aaa
adc
mov
in
in
pop
lcall
xchg
xor
dec
adc
fisubl
test
out
leave
push
clc
das
jle
sub
sti
stos
ret
push
bound
test
mov
cmpsb
mov
or
lcall
push
hlt
movsl
out
sbb
inc
cmp
fbstp
call
jmp
push
jb
jmp
sub
mov
pop
bound
data16
sbb
jle
mov
daa
mov
lods
mov
adc
adc
shrb
mov
cmpsb
sbb
arpl
out
outsl
loope
xor
mov
outsb
or
push
lock
sar
enter
movsb
stc
sub
mov
mov
lods
cmp
cmpsb
lds
loopne
and
cmpsl
pushw
addr16
mov
test
bound
cwtl
xchg
sbb
lea
cs
adc
pop
or
out
lea
das
push
jmp
aas
cmpsb
shlb
enter
divb
data16
sub
fistpll
lock
test
mov
push
xchg
dec
jno
pop
rcll
xor
jb
sub
mov
pop
mov
lods
insb
cmp
mov
add
sub
dec
xchg
sbb
jbe
das
jp
iret
sbb
sti
cmpsb
cmpsl
arpl
dec
std
mov
movsb
das
add
and
lret
sbb
dec
repz
ja
push
mov
out
inc
fiaddl
pop
iret
movsb
add
xor
repnz
bound
sahf
pop
sbb
dec
cmpsl
jnp
jne
mov
mov
xor
lcall
adc
mov
outsb
js
push
fstp
hlt
sub
in
and
daa
repnz
lods
inc
mov
add
pop
mov
push
push
xchg
js
or
mov
push
mov
mov
push
jnp
ficoms
cld
xchg
das
jns
lcall
dec
or
push
add
into
ljmp
out
adc
mov
lcall
fcomps
push
cld
cs
cmp
jge
ret
cmpsb
add
xchg
jg
mov
insl
mov
inc
cmpsb
xchg
or
fcomps
aam
mov
or
frstor
or
xor
mov
dec
lret
mov
inc
rcr
leave
shrl
jmp
xor
jg
repnz
sub
pop
cmpsb
lcall
cmp
xor
sub
mov
push
xchg
cmpsb
test
das
and
adc
stos
sti
rolb
std
in
mov
add
xchg
sbb
xchg
hlt
and
aam
adc
mov
stos
andps
and
test
out
scas
mov
mov
rclb
daa
nop
jae
shrl
enter
jae
data16
pop
or
sbb
dec
adc
imul
das
fsubl
mov
cmpsb
jno
xchg
in
or
mov
pop
mov
stos
lea
mov
movsl
das
clc
ss
cmp
mov
or
dec
les
sub
pop
jo
inc
jecxz
sbb
cmpsb
sbb
mov
leave
or
push
push
lock
arpl
std
popf
rorl
or
inc
scas
jbe
movsb
mov
jg
lea
jne
scas
lahf
inc
inc
lea
sub
sub
or
ss
pop
dec
cmpsl
stos
xor
xchg
aaa
cltd
dec
ret
fdivr
mov
mov
xchg
mov
sub
les
push
inc
xchg
xchg
inc
stc
xor
lea
sub
mov
add
aad
imul
add
fbld
mov
nop
mov
and
arpl
ja
mov
xor
pop
rcrl
fs
scas
sub
mov
out
cs
push
inc
es
iret
in
jo
adc
into
imulb
mov
cmp
shlb
loop
arpl
cltd
lea
fisttpl
repz
loop
lea
rclb
call
xor
jne
jg
daa
imulb
xchg
inc
in
dec
adc
mov
sahf
mov
cmpsb
push
xor
pop
mov
out
dec
andb
mov
lock
mov
add
jns
in
cld
cmp
sbb
jno
das
inc
mov
lods
adc
add
sub
add
sbb
das
lods
rcrb
movsb
jo
push
fimuls
into
mov
inc
jg
subl
adc
cmpsl
mov
mov
push
clc
pop
add
outsl
out
test
das
or
mov
jge
fisubrs
shl
sub
inc
inc
movl
fldz
add
or
imul
mov
and
stos
jo
fists
mov
test
movsl
push
inc
lods
sbb
mov
int
cld
add
mov
lcall
dec
mov
clc
mov
inc
xor
in
dec
dec
ret
stos
mov
or
das
or
sub
pop
dec
es
lds
sub
add
mov
mov
push
out
leave
push
fdiv
or
add
or
lea
jecxz
cltd
jmp
aam
adc
cmpsl
stos
or
cmpsb
je
xor
xchg
insb
jb
loope
sbb
jae
lea
mov
ret
xor
out
movsb
jl
ret
push
inc
dec
cmpsl
push
sti
xchg
das
outsl
or
stos
outsb
mov
cs
cli
and
mov
fnstenv
or
jbe
dec
test
add
push
xor
lea
loop
fldenv
mov
jecxz
dec
mov
mov
pop
gs
dec
daa
mov
jg
cmp
cmp
stos
mov
inc
int3
ja
pop
pop
test
lret
push
cmpsb
adc
sbb
xchg
push
pop
sub
xor
call
aam
jmp
pop
jnp
in
fldt
shl
leave
mov
sub
sub
mov
xor
push
repz
je
mov
fidivrl
test
in
xchg
push
loopne
push
jg
mov
shr
aam
loope
or
aas
and
mov
add
mov
pusha
add
out
repnz
in
dec
mov
jb
mov
fwait
fwait
imul
jmp
sbb
lods
mov
stos
call
push
pop
push
mov
cmp
std
xchg
inc
inc
jle
cmpsb
cld
push
fidivs
les
xorl
lods
adc
dec
mov
mov
popf
sahf
mov
fiaddl
insl
sub
and
adc
sub
xchg
mov
or
adc
mov
scas
xlat
xchg
xchg
iret
pop
rolb
dec
cmp
jbe
mov
cmp
or
pop
icebp
out
cmp
lea
in
adc
sbb
push
cwtl
xor
loope
rcl
inc
cmp
lods
inc
cmp
cli
aad
iret
pop
sub
mov
jmp
lahf
xchg
dec
in
or
ds
pop
pop
out
xchg
add
fs
cmpsl
push
push
xor
in
or
aam
push
jb
loopne
fdivl
cmpsb
icebp
push
sub
and
push
aaa
mov
push
aaa
pop
test
lea
sub
and
mov
or
incl
sbbl
fwait
push
lret
add
int3
mov
cmp
mov
fmuls
das
mov
xchg
jge
sub
mov
fwait
scas
mov
lcall
dec
das
xor
sbb
lock
mov
shlb
std
pop
cld
xchg
pushf
and
mov
dec
pop
int3
inc
inc
add
mov
xchg
call
popf
xor
das
cld
or
adc
cld
lahf
int
div
adc
movsb
lahf
xor
xor
out
mov
out
nop
mov
mov
pop
stos
cmp
iret
mov
lea
lahf
sbb
and
sbb
push
pop
loope
mov
add
push
dec
notl
gs
xchg
data16
cmpsb
or
out
insb
jecxz
push
inc
mov
xorb
xchg
test
or
scas
mov
fwait
and
mov
push
lods
cmp
imull
mov
push
out
xchg
popa
sub
jmp
roll
mov
les
mov
ss
lea
sbb
addr16
movsl
loopne
lods
popf
stos
or
nop
mov
insb
jmp
jl
movsb
xchg
pop
dec
push
xchg
mov
and
imul
add
js
scas
addl
lock
aad
adc
in
fbstp
cs
das
pop
icebp
hlt
int
sub
andl
bound
das
movsl
gs
adc
das
rcl
insb
negl
fists
push
adc
mov
fbld
mov
int3
stos
add
lea
cmp
sub
pop
mov
jp
ret
push
cmpsb
push
cld
push
shlb
mov
xchg
insl
sub
xchg
jle
xor
dec
cmpl
xchg
sbb
jne
push
int
push
out
lea
xchg
add
mov
fs
cmp
imul
das
dec
mov
xchg
mov
movsl
and
rorb
push
lret
cmp
mov
movsl
cld
sbb
test
xor
xchg
lods
and
adc
mov
inc
mov
das
cmp
popf
cmp
arpl
aad
xchg
test
popa
out
or
or
mov
leave
ret
sbb
mov
hlt
outsb
xor
fisubl
jmp
sub
push
mov
sti
xchg
sbb
leave
cli
mov
pop
mov
pusha
jmp
lea
ds
cltd
mov
mov
andl
cmpsb
pop
incb
pop
cli
hlt
out
mov
adc
into
lds
test
aas
lahf
push
movsl
fs
into
and
stos
sbb
cltd
push
pusha
dec
sub
sti
std
jne
push
sbb
inc
cmpsb
jae
lahf
lret
and
roll
mov
das
int
or
push
pusha
mov
xor
pop
aas
popf
xor
sti
arpl
mov
fdivrl
lods
insl
in
int3
sti
sub
adc
div
fidivs
jae
fld
add
adc
jmp
mov
dec
lret
cs
xor
sub
jne
lods
push
js
movsl
mov
pop
and
push
and
jnp
mov
cmp
arpl
or
psubsb
mov
mov
adc
call
mov
lods
idivb
add
push
dec
out
jno
outsl
ret
cmpsb
outsb
shll
mov
sahf
lret
aad
cmp
add
stos
filds
repnz
cld
cmpsb
sbb
jae
inc
icebp
aad
push
mov
fcom
stc
mov
das
jl
gs
cmp
hlt
mov
ljmp
mov
es
nop
adc
mov
jae
sub
jnp
out
add
repz
fidivrs
das
scas
inc
jbe
and
cmpsb
pop
cmpsb
inc
in
jne
pop
out
in
add
push
sub
mov
gs
dec
xchg
mov
fldt
int3
inc
sti
in
sbb
or
sbb
das
call
or
or
mov
repnz
adc
call
test
sub
lea
xchg
mov
lcall
ds
shll
stc
pop
mov
lock
lea
cmpsb
fidivrs
enter
add
rol
out
js
test
insl
das
rcr
les
xchg
sbb
testb
push
je
cld
push
pop
adc
out
adc
lret
mov
int
fwait
addr16
das
push
push
mov
push
jmp
in
xlat
cli
mov
stos
out
insb
addr16
add
outsb
jo
repz
mov
push
cltd
mov
xchg
fidivl
jle
sarl
arpl
daa
imul
lret
jns
xchg
add
ror
fsubl
jg
xor
movsb
cmp
es
pop
mov
in
cmp
inc
add
add
lea
sub
mov
sub
or
inc
jge
push
inc
or
mov
sub
xchg
pop
lea
xchg
leave
and
and
push
pop
rol
shll
add
xchg
ret
jbe
pop
out
movsl
sbb
adcl
xorl
xchg
cmp
aas
sub
inc
mov
js
mov
call
jp
bound
notl
call
push
sarb
nop
les
das
ret
shlb
lahf
cmpsl
test
xor
stos
xor
push
pop
dec
leave
js
lea
cld
cmp
fsubrs
in
mov
in
pop
inc
in
fldcw
or
or
push
test
adc
mov
xchg
xor
pusha
shl
cs
ss
sarl
int
fistpl
sti
sahf
lods
dec
push
aam
mov
fistl
xchg
rcll
outsl
lret
shl
jmp
iret
aaa
pushf
int3
xor
mov
ror
or
test
jge,pn
cli
jno
int
leave
movsl
sbb
bound
lods
pop
lods
scas
lock
sti
mov
or
loopne
dec
js
lea
xchg
mov
jno
pop
inc
loope
inc
out
leave
ds
push
jmp
cmpsb
mov
cmp
or
inc
lds
sbb
shr
and
fcompl
inc
xchg
int3
fldcw
in
or
xchg
cmpsb
cmp
test
mov
jg
orl
repnz
aas
sbb
jge
sbb
pop
sub
ja
sbbl
lea
roll
das
sahf
add
mov
mov
mov
incb
dec
in
xchg
aaa
adc
fisubl
ljmp
xchg
dec
inc
clc
in
pop
mov
mov
mov
enter
jge
cmpsb
pop
out
jnp
lcall
ret
or
lahf
cmpsb
jo
xchg
sahf
dec
lea
mov
fldt
mov
aad
mov
sbb
pop
or
clc
icebp
out
movsl
sub
and
lcall
sub
nop
xchg
cmpsb
scas
addr16
pop
rorl
cltd
xchg
fisttpll
pusha
sahf
add
lea
cmpsb
ljmp
scas
pop
fs
xor
mov
imull
xor
in
cltd
fs
push
loopne
mov
test
or
mov
je
in
hlt
sahf
sbb
inc
addr16
ds
xorl
out
lods
out
jmp
std
jmp
test
fucomp
add
and
dec
xchg
dec
pop
sub
mov
cs
iret
es
pusha
jbe
cmpsb
scas
cwtl
arpl
jne
pushf
lahf
ret
fstpl
xchg
mov
jecxz
and
xlat
adc
repz
out
add
xor
and
dec
js
int3
jb
cltd
dec
lret
testb
mov
lods
push
incb
mov
and
xchg
leave
repz
pop
xchg
sub
inc
das
xchg
cmp
dec
mov
sub
jnp
cmp
xor
mov
out
adc
mov
jne
dec
inc
or
subb
push
push
sti
lret
and
and
mov
lret
cmpsb
pop
sub
std
lret
aaa
lcall
fnstenv
push
mov
and
mov
es
mov
stc
cmp
bound
adc
ficompl
sahf
fildll
ficompl
or
loop
jg
inc
add
sahf
lods
mov
jo
and
mov
mov
jae
movsl
or
mov
mov
adc
mov
imul
mov
leave
lret
or
mov
adc
sti
jo
into
and
loop
pushf
ja
sbb
mov
sub
lret
data16
push
pop
in
hlt
fcom
ljmp
je
xlat
leave
cmp
pusha
fdivrl
mov
mov
in
jl
adc
adc
jne
pop
cld
mov
and
and
mov
and
mov
mov
mov
ret
orb
subb
outsl
cmpsb
fs
daa
lds
sarl
mov
lahf
jmp
data16
pushf
jg
daa
xchg
cmpsl
xlat
cmpsb
cmp
jbe
fiaddl
jo
push
fadd
repnz
lea
enter
sub
outsb
and
cs
test
mov
mov
push
sbb
in
movsl
enter
mov
mov
scas
loop
mov
jge
mov
rcrl
push
fimuls
idivb
mov
dec
imul
mov
into
fimuls
or
outsb
shlb
push
cmp
mov
jno
sbb
mov
push
xchg
mov
jbe
aaa
xchg
pop
mov
rcr
cmp
mov
push
mov
inc
sti
push
mov
mov
lea
add
sub
push
bound
adc
movsl
xor
cli
mov
jns
inc
lea
cmp
out
out
cli
cli
cld
movsl
push
arpl
fiaddl
jb
shrl
scas
pop
in
mov
dec
stc
ljmp
fnstsw
mov
dec
loope
sbb
lea
mov
xor
xor
out
cmpsb
push
aam
mov
jmp
aaa
das
mov
add
and
fcomi
test
imul
jecxz
mov
lret
andb
in
cli
hlt
imul
xchg
mov
rcrb
scas
int
rolb
clc
in
and
jne
xor
and
and
test
xchg
popa
addr16
pushf
fsubr
cmp
xor
xor
push
jb
mov
cmpsb
insl
pop
sub
mov
dec
jmp
jbe
cmp
icebp
and
popa
xor
xor
cld
outsb
shlb
push
push
js
inc
push
pushf
mov
add
cs
mov
pop
sahf
sbb
iret
movsl
xchg
mov
inc
xchg
push
das
pop
or
adc
xor
and
cltd
push
mov
mov
lods
sbbl
pop
mov
add
cltd
das
sbb
lea
lahf
ret
jmp
jecxz
imulb
push
push
cmpsb
pop
fwait
jnp
adc
pop
test
push
cmp
xor
mov
lret
movsl
cmp
in
add
idiv
push
repnz
pop
mov
and
out
adc
jb
inc
mov
inc
lods
stos
out
cltd
out
add
cli
repnz
inc
push
jge
fdivp
pop
cmp
dec
sahf
ljmp
cmpsl
xor
xor
or
outsl
lea
lock
cs
mov
add
out
pop
out
mov
mov
orb
test
rolb
in
les
dec
lea
mov
or
add
jno
push
mov
mov
inc
mov
sahf
scas
fstpl
out
repnz
and
cmp
clc
lahf
xchg
lcall
jno
jl
pop
das
mov
ljmp
jp
out
mov
mov
ret
xchg
xor
pop
inc
xchg
cmpsb
pop
push
mov
mov
mov
jge
inc
mov
or
mov
shll
and
mov
pop
leave
push
sub
iret
incl
scas
movl
xor
ficoml
xchg
icebp
fadd
sbb
mov
sbb
nop
jmp
add
ja
shl
dec
aaa
cltd
fs
sub
cs
sarl
pop
repnz
orb
scas
lods
inc
and
aas
aam
or
rcll
fisttps
ss
icebp
fimull
xor
bound
popl
xor
mov
outsb
add
enter
push
pop
push
cmpsb
or
arpl
dec
pop
fld1
lahf
out
xor
test
movsb
lods
and
xor
call
cmp
mov
ljmp
xchg
dec
xchg
inc
or
or
mov
add
ss
push
adc
mov
repz
push
mov
mov
xor
aam
pop
sti
xor
mov
insb
pop
test
out
inc
comiss
cmp
test
mov
adc
popl
lret
lods
adc
sti
cmp
fisttps
stos
shlb
ss
jb
xchg
mov
mov
aad
cmpsl
mov
aas
popa
repnz
and
das
jp
jmp
shll
sub
xchg
out
add
test
lea
aas
mov
sub
popf
add
and
stos
lods
out
xor
andl
fidivrl
mov
adc
lret
fisubl
fstps
mov
loopne
fldcw
xchg
add
icebp
inc
xor
sbb
push
mov
sbb
data16
mov
les
xchg
repz
pop
mov
add
jmp
fs
arpl
sti
xchg
cmp
mov
inc
inc
add
bswap
test
sub
jge
mov
and
orl
adc
xchg
arpl
xchg
imulb
lods
inc
cwtl
gs
or
inc
jae
push
int3
mov
popa
andb
pop
aas
push
daa
das
int
inc
push
roll
cmpsb
movsl
fwait
add
mov
lcall
xor
xchg
arpl
pop
lds
sub
es
loop
xor
sbb
jmp
ficomps
ret
sub
inc
cltd
iret
sub
les
jno
stos
sub
xor
pushf
repz
aam
inc
nop
imul
cs
push
inc
mov
xchg
jp
mov
aam
les
call
scas
lea
out
fisubrs
fdivl
cld
cmp
fwait
mov
fsubrs
lds
lret
sbb
movsl
jg
aam
mov
fwait
add
cmp
aam
into
sbb
xchg
cmp
mov
mov
flds
mov
aam
xchg
mov
cs
das
flds
xchg
cltd
add
cmp
xor
dec
cmpsb
in
mov
xchg
mov
mov
xor
sub
pop
cmp
sbb
into
add
enter
sahf
ret
add
std
nop
sub
sub
repnz
mov
cs
divl
sahf
sbb
insl
cmpsb
cld
nop
loop
out
pushf
jmp
inc
cs
movsb
or
into
and
mov
imul
jg
cltd
lahf
lea
test
call
cld
fwait
daa
cmpsl
sbb
cmpsb
xlat
outsb
sbb
mov
js
orl
and
loope
mov
mov
xchg
xchg
or
hlt
or
loop
lahf
add
inc
sbb
inc
lods
cmpsb
adc
jb
add
das
icebp
fdivl
mov
sti
xor
cld
movsl
daa
xor
ret
mov
push
dec
push
mov
aas
cld
cld
pop
mov
enter
mov
lea
dec
fists
rolb
mov
arpl
push
in
movl
inc
in
push
dec
insl
mov
pop
add
sbb
ja
ss
mov
mov
lret
cs
fs
dec
push
ja
cmpsb
jae
mov
sub
dec
repnz
xchg
pop
cmpsb
push
adc
mov
xchg
dec
or
mov
dec
cmpsb
mov
pop
xchg
mov
jo
lahf
jbe
sub
faddl
pop
das
jge
lods
sahf
cmp
fists
lea
rcl
jo
mov
lods
dec
nop
dec
lcall
jp
lock
outsl
push
mov
ror
and
lods
mov
cmpsb
push
jl
cmp
push
nop
mov
adc
mov
fwait
ret
sub
mov
incl
pop
pushf
fisubs
loopne
pop
dec
sbb
jae
or
fildll
in
nop
js
and
jbe
insb
imul
cli
or
cmpsb
cmpsl
cli
repnz
jo
xchg
xchg
inc
popa
hlt
orb
push
jb
fisttpll
popf
sub
xchg
insb
sub
adc
push
mov
pop
and
push
or
aaa
and
fsubrl
or
fbstp
ljmp
mov
xor
lods
sub
fisubrs
aam
shlb
arpl
pop
jp
shl
dec
cmc
adc
pushf
jge
jne
push
xchg
jb
daa
xor
cwtl
sub
or
lea
cmp
mov
adc
mov
sbb
pop
sbb
add
inc
das
je
mov
cmp
punpcklbw
inc
sub
jecxz
lods
or
push
mov
adc
mov
cwtl
js
xchg
xchg
cmpl
mov
fs
loop
jae
pushf
jbe
xor
jmp
es
aad
sub
lea
jmp
jae
xchg
fdivrl
push
pop
std
ret
xchg
inc
ret
clc
out
sbbb
xlat
xor
add
in
pop
rcrb
xchg
lret
gs
ret
das
cmpsl
push
dec
mov
adc
push
add
mov
xchg
nop
scas
fsubs
xor
sbb
fcoml
dec
cmc
js
lea
cwtl
inc
and
xor
mov
cmpsb
lahf
jbe
jbe
push
mov
mov
or
cmpsb
es
ror
or
and
out
lock
movsl
fsubs
ret
push
loopne
jmp
popa
dec
ljmp
and
inc
fmuls
or
loop
cltd
aad
stc
repnz
mov
cmpsb
lock
movsb
mov
orl
int3
das
arpl
lock
fstpl
sbb
sahf
pop
je
imul
rcll
cmpsb
pop
xchg
je
imul
jb
inc
shlb
push
out
in
rcl
das
sbb
inc
mov
push
orb
xor
pop
and
cmpsb
hlt
jno
cmp
mov
inc
lods
stc
rcrl
sub
jg
mov
xor
xor
lds
jns
sub
cs
mov
adc
adc
lea
cmpl
in
pop
lds
bound
shll
addr16
mov
das
pop
dec
das
inc
push
and
movsl
mov
adc
mov
add
fists
nop
sbb
and
or
data16
dec
mov
insl
sbb
add
fmull
jbe
insb
lea
sub
mov
mov
movq
push
lret
push
outsb
and
add
jmp
pushf
push
lea
inc
je
gs
rcr
pop
jmp
cmpsl
hlt
idivb
dec
sub
mov
and
push
adc
pop
mov
divl
daa
clc
jb
sbb
nop
mov
and
mov
dec
or
sbb
and
push
jae
fmuls
jmp
sbb
jae
push
movsl
mov
xchg
cmpsl
nop
das
and
xchg
scas
mov
js
dec
mov
in
cld
xor
lds
lea
and
xor
mov
xor
fcmovnb
pop
sbb
das
movb
sarl
sarl
scas
lock
pop
pop
cmp
inc
das
xchg
jg
push
or
lods
cmp
mov
faddl
dec
jbe
and
lcall
inc
lea
and
dec
xor
out
lds
and
jns
ja
xchg
inc
sub
inc
je
and
out
fiaddl
mov
or
sub
xlat
dec
jne
jno
sub
pop
test
dec
push
dec
insb
xlat
cs
mov
mov
xchg
pushf
scas
cmp
push
je
jmp
cs
popf
dec
imul
xchg
pusha
nop
lds
dec
icebp
or
cmp
pop
inc
pop
dec
push
imul
das
cmp
outsb
xor
scas
push
push
cmpsb
std
popa
xchg
in
xchg
mov
jno
addb
lods
adc
stos
inc
mov
fbstp
fdivrs
mov
push
mov
push
cmpsb
inc
push
adc
pop
pop
cmp
mov
jbe
cmpsb
stos
mov
aam
test
jo
sbb
fsubs
mov
movsb
cmpb
cltd
sbb
cmpsb
lahf
push
cmpsl
mov
sahf
sbbl
add
xlat
sub
movsb
loope
jno
lea
jnp
cmp
and
mov
push
faddl
mov
imul
sti
sub
xlat
pop
shlb
loope
mov
lock
push
xchg
mov
jp
sub
mov
daa
jl
mov
add
shlb
lcall
add
imul
hlt
clc
jns,pn
add
les
mov
sbb
call
jle
xorb
cs
pop
xchg
add
sub
add
loope
das
cmp
jno
mov
push
mov
movsl
mov
mull
nop
mov
or
popf
xchg
cmpsl
or
inc
pop
xor
pop
shll
mov
push
pushf
xor
fs
or
jne
pop
xchg
sar
out
lods
sbb
filds
dec
repnz
xchg
pop
imul
jns
sti
mov
icebp
mov
lods
stos
xor
push
mov
add
arpl
mov
mov
das
aaa
push
inc
outsb
sbb
movsb
lahf
push
or
mov
es
dec
jl
mov
xor
int
mov
dec
js
lea
sub
es
cmp
cld
inc
push
popf
inc
cmpsb
dec
in
insl
jno
aad
pusha
xor
jg
pop
sahf
outsl
cmpsl
cmpsb
fwait
jmp
mov
shlb
mov
xor
xchg
cwtl
rclb
push
dec
cmpsb
cmp
mov
in
in
dec
mov
outsl
sub
sub
in
aad
shlb
and
cmpsb
mov
xorb
and
dec
das
cmc
adc
test
cmpsb
jl
adc
adc
call
lock
xor
xchg
fimull
jge
fs
movb
xchg
or
fs
inc
cmc
dec
jmp
or
mov
push
stc
clc
xchg
cmpsb
jo
arpl
sub
sbb
pop
jno
xor
jo
repnz
dec
cmpsb
jb
lahf
pop
dec
mov
dec
and
arpl
adc
or
cli
out
pop
mov
jecxz
pop
or
cmpsb
pop
adc
and
leave
mov
out
test
dec
sbb
and
clc
test
pop
sbb
dec
lahf
popa
sub
js
mov
icebp
adc
out
cld
jb
push
mov
dec
add
sahf
out
mov
imul
mov
xlat
out
mov
leave
mov
popf
mov
or
cmpsb
mov
pusha
mov
mov
lea
push
ljmp
scas
enter
jecxz
and
cs
mov
ss
test
push
out
aas
xlat
lods
cmp
jbe
inc
lea
cwtl
lcall
push
loopne
jecxz
jb
in
push
movsl
mov
rcll
dec
push
push
into
cs
jp
out
cwtl
push
mov
mov
mov
pop
mov
ss
mov
cld
cmpsb
dec
in
rorb
jp
rcrb
sub
repz
mov
insl
sbb
and
ljmp
sti
movsl
into
adc
mov
int3
mov
cwtl
or
pop
dec
test
cmpsl
aad
pop
mov
shl
xchg
inc
xor
mov
aas
popf
dec
and
xor
jne
fcoms
mov
xchg
jecxz
mov
ds
mov
sbb
pop
ljmp
outsl
and
push
fdiv
subl
cwtl
adc
pop
loopne
mov
dec
stc
testb
lea
sub
shrb
pop
shrl
addb
dec
mov
xchg
call
pop
mov
mov
add
addr16
adc
or
nop
sbb
mov
lea
cmc
ds
cs
in
sbb
cltd
inc
jmp
addr16
push
scas
mov
das
ret
sbb
xchg
repnz
cmp
mov
mov
dec
push
xchg
xchg
xor
in
adc
loope
bound
dec
jae
loopne
and
stos
or
or
das
inc
daa
aaa
adc
cmpsb
loopne
and
movsl
mov
push
fcomps
sub
aas
jle
das
roll
mov
cmpsb
ljmp
sub
ficoml
and
push
scas
push
mov
cs
out
xorl
cs
test
mov
das
mov
ror
je
fadd
jg
popf
stos
sub
mov
sbb
jne
xor
es
inc
sbb
ja
push
outsb
add
mov
js
loopne
xchg
pop
pop
dec
cmp
cmp
and
and
xchg
aad
cs
inc
cmp
bnd
lea
pusha
dec
inc
insb
and
das
xchg
mov
pop
sti
xlat
jnp
stos
fdiv
pop
mov
or
inc
lea
mov
das
cmpsb
sbb
xor
xchg
cmpsl
adc
and
aam
xchg
push
sub
lods
jb
fidivrl
and
lods
push
loope
mov
ret
out
pop
repz
into
popa
add
test
inc
mov
xchg
aam
test
cmp
cs
inc
movsl
mov
adcb
jno
stos
jg
ficoms
xor
jmp
das
hlt
or
cmpsb
cmp
shll
lods
xor
in
cmc
mov
mov
shrl
cmp
pop
mov
loop
mov
lea
dec
out
incb
and
scas
xlat
xchg
lret
xor
push
lea
xchg
fbld
scas
stos
aaa
das
js
push
pop
fwait
mov
dec
mov
mov
xor
cmp
scas
push
jge
xor
cmpsb
into
push
cmpl
loop
push
lea
xsha1
cmpsb
dec
mov
loop
jg
and
addr16
loop
and
sti
cmpsb
arpl
sbb
sbb
inc
sub
mov
inc
mov
addr16
out
pusha
and
xor
ds
mov
faddl
shll
fldl
mov
xor
cmc
aad
mov
mov
mov
mov
cmc
vpsubusw
mov
cwtl
adc
jmp
jae
push
mov
test
jae
cmp
mov
inc
xor
addb
loopne
mov
into
loop
loope
ss
xchg
jg
mov
les
iret
add
push
sbb
les
sbb
aad
cli
sub
push
lods
out
out
adc
xor
sub
das
lea
das
jge
mov
dec
cltd
faddl
out
pop
mov
sub
mov
jp
dec
add
int
inc
stos
cwtl
or
mov
mov
mov
subb
jl,pt
into
sub
cmp
adc
jno
inc
je
add
ret
or
jne
ljmp
shlb
addr16
dec
mull
and
mov
push
popf
ja
shl
inc
jne
push
lods
lock
in
mov
shrl
scas
push
cltd
call
insb
ja
cmp
add
jae
movsb
es
lds
add
add
pop
ja
icebp
gs
cli
lret
pop
xchg
iret
imul
test
lea
notl
dec
inc
dec
pop
push
inc
cmp
adc
sub
sub
xchg
cmpsb
inc
repnz
xchg
cwtl
or
xchg
pop
arpl
daa
subb
pop
lods
jg
cmpxchg8b
lea
fstl
ret
or
sub
add
jecxz
mov
dec
je
mov
imul
lea
popl
or
xor
cmp
push
lea
out
adc
add
mov
addr16
cmp
push
in
ljmp
inc
or
xchg
lret
dec
cltd
mov
int3
or
std
roll
ss
das
sub
neg
movsl
pop
jb
stos
or
dec
mov
xchg
fmuls
xchg
push
jno
inc
add
aam
pop
mov
jmp
push
inc
imul
das
sub
sub
mov
xlat
sbb
push
movsl
mov
pop
cmpsb
fsubrs
xchg
dec
aam
push
mov
leave
aam
jno
inc
lea
pop
push
mov
add
lret
xor
adc
inc
or
loopne
push
cld
xor
aas
imul
add
rorl
mov
push
pop
mov
std
adc
mov
mov
pop
adc
pop
xchg
das
push
filds
leave
inc
adc
xchg
out
jp
cmpsl
jnp
iret
jns
xchg
fwait
imul
scas
lahf
pop
push
data16
xlat
jne
mov
in
cs
test
subb
jecxz
xor
call
mov
jmp
sbb
js
cs
sar
or
fsubr
mov
mov
imul
push
fmull
adc
pop
loope
add
xchg
cs
stc
andb
jb
sbb
and
call
insl
jp
mov
cmpsb
dec
cmpsb
lea
shlb
daa
das
movsb
ljmp
movsl
sub
push
cld
ljmp
out
cltd
out
lea
ds
mov
cmp
ss
fs
pop
mov
sbb
pop
mov
and
shrl
pusha
xlat
imul
in
pop
loop
xchg
xchg
inc
lds
stc
test
dec
inc
call
mov
or
popl
and
mov
jb
mov
scas
lea
enter
fildl
into
mov
cmp
push
mov
repnz
icebp
push
enter
mov
or
fimuls
jl
es
pop
pop
fdivrl
hlt
int
fucom
jmp
imul
and
mov
movsl
out
xchg
cmp
inc
movsl
add
jle
bound
adc
sahf
aam
xor
mov
hlt
sti
dec
ljmp
ret
inc
mov
das
sub
hlt
sub
stos
mov
je
pop
lret
aad
mov
out
sub
call
cltd
addr16
or
das
push
mov
jmp
popa
cmpsb
fnstenv
in
mov
dec
add
inc
fimuls
insl
cmpsl
jp
icebp
es
mov
mov
or
sahf
lea
daa
mov
inc
loop
out
not
fucom
mov
test
test
xchg
adc
in
and
cmp
sbb
ss
inc
jns
cli
into
xor
mov
loopne
add
jae
fmull
xchg
mov
fsub
icebp
pop
jp
out
pop
scas
lea
shlb
imul
cmpsb
rclb
push
dec
aas
hlt
rcr
inc
lret
outsl
sub
add
adcl
sbb
jbe
pop
xor
xchg
mov
popa
jns
iret
xor
mov
inc
mov
mov
jp
push
out
lea
cmp
xchg
das
in
stos
mov
cmpsb
in
scas
sub
push
arpl
cmp
cltd
mov
ja
cmpsb
in
cmc
sbb
out
mov
cmp
outsb
dec
mov
pushf
xorb
mov
dec
mov
into
stc
mov
dec
jne
orl
cmpsb
xor
notb
jmp
scas
dec
and
dec
lahf
mov
dec
test
es
mov
mov
mov
jge
xchg
jmp
subl
jl
push
mov
and
sub
adc
scas
popa
inc
stc
mov
pshufw
xchg
arpl
fprem
fisubrs
in
xlat
xchg
push
out
mov
cmp
cmpsl
das
or
popf
addr16
xor
pop
push
and
shufps
dec
xchg
sbb
mov
cmp
dec
mov
pop
xor
pop
scas
mov
pusha
sbb
mov
cld
aas
push
lret
aam
adc
mov
xor
jmp
not
mov
mov
inc
jge
xchg
iret
inc
cmpsb
lcall
loop
xor
nop
mov
into
mov
push
cs
cmp
hlt
popa
cmp
cmp
xlat
addl
inc
int
and
xchg
jecxz
fbld
cmc
xchg
xchg
out
mov
dec
jno
gs
or
inc
adc
loope
hlt
mov
in
fcom
flds
sub
cmpsb
xchg
cmpsb
sahf
dec
iret
xchg
stc
add
into
int3
mov
sub
out
orl
jmp
loop
dec
ja
sarb
dec
xchg
xlat
fidivs
mov
xchg
les
lea
iret
cwtl
shrl
xchg
call
cmpsb
pop
mov
xchg
pop
push
lea
out
imul
fsubr
mov
shr
or
fwait
mov
sbb
movsl
loope
inc
es
aaa
rcrb
cltd
jne
call
lret
les
jmp
cwtl
inc
cmc
je
adc
jnp
mov
cmp
enter
and
xlat
jbe
adc
xor
jmp
scas
jge
jp
or
mov
pusha
sahf
das
mov
ds
call
out
mov
xor
ret
adc
frstor
inc
cmpsb
fisubrl
jl
mov
shrl
daa
lods
cmpsl
mov
jecxz
mov
mov
aaa
mov
pusha
inc
or
mov
mov
loop
in
and
repz
das
repz
jnp
dec
jl
cmpsb
and
ljmp
push
int
shl
add
pop
ljmp
rcl
and
int
mov
shrb
jge
cmp
loopne
loope
sub
pop
sbb
sahf
xor
inc
cs
lods
adc
shlb
je
arpl
loopne
or
divl
pop
add
pop
mov
dec
sbb
sar
xchg
test
inc
lods
cmc
mov
push
cmpsb
movsb
test
enter
sar
push
mulps
addb
cmp
rep
xchg
mov
fisttpl
sub
mov
xor
ret
or
scas
xor
mov
aas
fdivrs
or
das
ficoml
out
iret
std
xchg
in
lock
insl
jle
call
lea
or
cs
shl
cmpsb
pushw
out
fbld
push
call
lea
or
das
dec
sbb
dec
cmpsb
popa
leave
sub
clc
mov
adc
mov
hlt
pop
jnp
mov
movsb
lret
mov
inc
adc
push
movsl
cwtl
aaa
aas
push
add
out
push
mov
lock
xor
lahf
or
out
pop
pop
cs
repz
mov
cmc
int3
aam
sbb
lea
mov
ss
jecxz
cmp
std
xchg
push
mov
int
push
orl
cmpb
adc
sbb
shlb
sub
mov
mov
add
iret
stos
in
out
pusha
inc
add
xor
mov
pop
mov
sbb
loopne
lea
hlt
popf
out
mov
mov
popf
out
push
xchg
lods
mov
cmpsb
cmpsb
mov
and
mov
clc
mov
push
mov
dec
mov
or
or
cmp
xorb
and
insl
leave
sub
add
lret
xchg
movsl
sub
nop
jae
cmp
lods
aas
xor
ss
lods
adc
pop
test
lds
testb
inc
fs
lea
xlat
cwtl
repnz
dec
xchg
inc
or
cli
or
jnp
bsr
jno
out
mov
mov
aam
xchg
and
lahf
fcmovb
xchg
pop
add
xchg
daa
mov
cwtl
movb
mov
ss
das
and
push
test
test
dec
or
mov
and
push
movl
call
rolb
inc
popf
das
jle
cwtl
gs
sbb
imul
stc
int
mov
cmc
pop
mov
dec
or
cmp
pop
subb
add
cmpxchg
call
call
dec
lea
push
sbb
pop
xchg
rcrl
xchg
inc
in
lods
repnz
mov
dec
ss
jbe
inc
scas
xor
dec
fiadds
cmpsb
imul
xchg
out
in
cld
popa
xor
mov
dec
pushf
inc
stc
push
daa
mov
in
cli
lods
pop
jnp
rcr
push
sbb
pop
fs
loop
mov
and
pop
jl
lods
cmp
cmp
sub
adc
inc
lret
xor
push
cmp
rcl
and
ret
sub
cld
lret
xchg
movsb
fistpl
push
fsubr
lock
xchg
dec
loopne
stos
mov
das
sub
add
movsl
or
addr16
inc
dec
mov
jne
call
jbe
mov
xor
int
mov
pushf
dec
cmp
inc
lea
js
jmp
mov
fwait
lock
or
xchg
movsl
inc
cmp
jmp
in
pop
iret
mov
rcrb
cmpsl
mov
pop
das
inc
fbld
fwait
cld
jg
push
dec
mov
jbe
enter
ja
dec
arpl
cmp
into
jo
and
sbb
jns
ret
jne
std
or
dec
das
sbb
cltd
pop
hlt
movsl
mov
and
and
stos
loop
shll
mov
dec
scas
mov
inc
push
lret
xchg
push
xor
ret
in
or
in
cmpsb
adc
sub
jo
arpl
fdivp
cmp
lea
or
bswap
xor
in
cmpsb
xor
lahf
repz
xchg
mov
push
cmp
dec
call
out
mov
lock
push
nop
scas
mov
arpl
imul
hlt
jo
mov
sub
sub
stc
rolb
mov
mov
adc
jnp
cmp
xor
stc
sbb
ss
and
inc
cmpsb
cmp
pop
mov
insb
test
inc
rorb
or
push
push
or
out
add
inc
push
push
lea
popf
imul
push
dec
and
lea
mov
lea
rol
in
repz
xchg
sbb
rcll
jno
fs
shll
icebp
mov
leave
out
or
cmpsb
cwtl
das
test
and
and
adcw
mov
inc
mov
xchg
jge
mov
mov
xor
aad
scas
gs
mov
mov
mov
push
mov
iret
push
mov
add
pop
negl
push
movl
sbb
data16
in
xor
notl
stc
jno
iret
bound
mov
or
xor
jno
movl
rolb
in
cmp
adc
aas
cmp
iret
leave
jnp
jp
mov
mov
mov
cwtl
mov
in
or
lahf
xadd
push
shl
mov
jmp
jns
fldcw
mov
popf
lret
dec
add
mov
xor
jo
lds
sub
js
ljmp
mov
popf
std
clc
mov
and
cmpsl
shrl
loopne
adc
sahf
push
mov
cmp
sub
test
mov
popa
bound
cltd
xchg
pushw
dec
insb
movsb
mov
imul
rcll
mov
push
cmc
jle
and
popf
movsb
arpl
int
loop
dec
lret
mov
hlt
rclb
push
clc
mov
das
fprem
adc
mov
int3
mov
sub
xchg
repnz
mov
out
lcall
icebp
or
mov
shlb
imul
call
cmp
sarb
or
xchg
popf
xor
push
sub
stc
or
subb
daa
jl
cmpsb
mov
inc
loopne
xchg
sub
mov
push
pusha
idivl
imul
mov
aam
lea
dec
fs
cmp
mov
mov
loopne
lcall
lahf
mov
out
test
ret
fildll
fwait
xchg
mov
pmuludq
or
cmp
scas
or
pop
dec
mov
jno
mov
ljmp
movsl
dec
adc
mov
add
data16
iret
xchg
cmpsb
adc
pop
shll
add
and
cs
mov
mov
loopne
pop
pop
and
cmpb
test
xor
aad
in
es
mov
mov
inc
mov
ret
out
adc
imul
lea
add
loopne
jmp
dec
inc
ret
cs
dec
jns
fldenv
xlat
sahf
mov
stc
add
repnz
mov
pop
das
lea
ljmp
testl
sub
arpl
push
fadds
lds
and
mov
fdivrs
or
nop
rcll
shl
rolb
lea
push
dec
das
adc
dec
sbbb
jae
xorl
clc
and
jle
xor
mov
aas
pop
mov
inc
scas
jl
mov
clc
and
mov
repz
dec
mov
into
cmpsl
ss
aaa
movsl
lret
sub
int3
movsl
or
sub
fadds
mov
sub
mov
dec
mov
outsb
mov
push
mov
test
cmpsl
jmp
ss
mov
mov
loop
mov
cmpsb
lret
rcrb
cmp
aad
inc
shll
imul
mov
jmp
dec
xchg
das
dec
loop
xor
sahf
jl
cmpsb
rep
ljmp
popa
pop
xor
mov
mov
out
add
xlat
cmp
jb
push
jbe
push
lea
into
cmp
testb
cs
push
bound
sbb
mov
cmp
les
sub
jo
adc
xchg
das
ret
bound
aam
push
mov
movsb
das
dec
mov
push
xchg
cmpsb
sbb
fdivrl
shlb
int
dec
stc
adc
cmpsb
adc
mov
mov
xchg
stos
mov
div
imul
cmp
sbb
ja
push
mov
das
adc
imul
orb
addr16
out
mov
incb
js
out
mov
sbbl
das
jl
lret
jg
movsl
lods
or
dec
add
pop
imul
and
lods
aas
roll
fbstp
sbbl
jno
pop
enter
inc
mov
jbe
fwait
adc
mov
mov
cmc
push
lds
jg
ret
lods
mov
mov
fidivrs
movsl
lock
out
addr16
xchg
mov
addr16
ret
jbe
mov
or
sbb
and
jae
adc
push
pop
adc
cltd
xchg
lahf
add
xchg
aas
dec
inc
mov
pusha
dec
and
flds
out
scas
sbb
mov
sahf
scas
pop
outsb
jae
inc
lea
ljmp
cmp
aad
sbb
cmp
ret
mov
into
nop
into
mov
jne
cmpsb
mov
mov
xchg
out
out
pop
fldcw
push
xor
mov
ljmp
dec
mov
dec
outsl
lret
lea
mov
mov
mov
push
add
xchg
xchg
sub
hlt
dec
sbb
ja
lea
pop
xchg
cmp
das
aam
bound
mov
or
arpl
cmp
xchg
mov
dec
mov
mov
or
jno
jmp
adc
or
rcrl
cmc
shlb
outsb
flds
pop
inc
jg
inc
xchg
dec
imul
adc
dec
lea
inc
scas
pop
sbbl
mov
lea
in
dec
mov
stos
jle
test
or
dec
xchg
or
leave
iret
mov
daa
mov
sbb
dec
add
pop
adc
mov
scas
jmp
lds
es
mov
mov
jb
xchg
or
xchg
dec
stc
smsw
mull
inc
xchg
outsb
nop
ret
test
add
mov
les
rorb
scas
cs
addr16
arpl
int3
fimuls
dec
add
lea
pop
cltd
das
cmp
mov
sub
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
call
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
call
push
call
add
add
push
push
call
add
push
call
add
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
call
add
cmp
jne
push
call
add
call
push
call
add
push
push
push
push
call
add
cmp
je
add
mov
push
push
push
push
call
add
call
push
push
push
call
add
cmp
je
mov
push
push
call
add
push
call
add
test
je
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
cmp
je
mov
add
mov
and
push
push
push
call
add
or
mov
mov
mov
push
push
call
add
sub
cmp
jne
push
call
add
xor
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
push
push
push
push
call
add
sub
push
call
add
mov
call
push
push
push
call
add
mov
sub
mov
mov
call
push
push
push
push
push
call
add
add
call
or
push
push
push
call
add
cmp
jne
push
push
push
call
add
mov
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
call
add
push
push
call
add
push
call
add
push
push
push
push
call
add
cmp
je
cmp
je
add
sub
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
push
call
add
call
mov
push
push
call
add
push
push
call
add
mov
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
call
add
mov
and
add
mov
push
push
push
push
call
add
push
push
push
push
call
add
add
add
cmp
jne
mov
xor
call
push
push
push
push
call
add
sub
call
sub
push
push
call
add
push
push
push
push
call
add
push
call
add
add
mov
push
push
call
add
call
mov
and
mov
cmp
jne
add
sub
mov
cmp
je
and
sub
mov
mov
test
jne
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
cmp
je
push
push
push
push
call
add
add
mov
call
push
push
push
call
add
sub
xor
call
push
push
call
mov
xor
sub
test
je
mov
mov
sub
mov
sub
add
add
add
sub
add
add
or
sub
test
jne
push
push
push
push
call
add
mov
mov
cmp
je
cmp
je
mov
cmp
jne
test
jne
mov
add
cmp
je
mov
mov
cmp
je
mov
add
xor
mov
or
add
sub
cmp
je
or
mov
cmp
jne
xor
mov
add
cmp
jne
sub
and
xor
xor
cmp
jne
add
sub
xor
xor
mov
and
sub
add
and
sub
add
add
add
add
or
sub
mov
mov
and
sub
mov
sub
xor
mov
sub
sub
mov
mov
add
add
add
sub
and
and
and
sub
and
or
xor
or
sub
add
add
cmp
jne
mov
add
cmp
jne
mov
sub
mov
add
sub
add
mov
sub
sub
cmp
jne
mov
add
add
cmp
jne
cmp
jne
cmp
je
mov
mov
or
or
cmp
jne
mov
test
je
mov
cmp
je
mov
mov
cmp
jne
add
add
and
add
mov
mov
sub
add
and
mov
or
cmp
jne
add
cmp
je
sub
xor
add
mov
add
or
cmp
je
test
je
add
sub
sub
mov
push
push
push
call
add
push
push
push
call
add
mov
call
push
push
call
add
push
push
push
push
push
call
add
call
mov
mov
or
sub
cmp
jne
sub
mov
push
call
add
push
push
push
push
push
call
add
call
cmp
jne
push
push
call
add
mov
push
push
push
call
add
push
push
call
add
call
call
push
push
push
push
push
call
add
mov
push
push
push
call
add
call
call
sub
cmp
jne
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
call
add
sub
sub
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
cmp
jne
mov
push
push
push
push
push
call
add
cmp
jne
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
or
sub
and
add
push
push
push
push
push
call
add
xor
cmp
je
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
call
add
mov
push
push
push
push
push
call
add
sub
cmp
jne
push
push
push
push
push
call
add
sub
cmp
jne
mov
test
jne
add
push
push
push
push
call
add
push
call
add
push
push
call
add
cmp
jne
mov
xor
push
push
push
push
call
add
mov
sub
push
push
push
push
push
call
add
cmp
jne
push
call
add
cmp
jne
mov
push
push
call
add
call
push
push
push
push
call
add
add
push
push
push
push
call
add
or
call
or
call
sub
call
push
push
push
call
add
sub
push
push
push
push
call
add
call
mov
and
call
or
mov
push
push
call
add
and
push
call
add
push
push
call
add
and
push
push
push
push
push
call
add
cmp
je
call
push
push
call
add
cmp
je
mov
push
push
push
call
add
cmp
jne
push
push
push
push
call
add
mov
mov
push
push
call
add
or
push
push
push
call
add
add
push
call
add
sub
push
push
push
call
add
and
cmp
je
sub
push
push
push
call
add
add
push
call
add
sub
and
add
push
call
add
mov
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
sub
sub
mov
push
push
push
push
call
add
mov
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
add
push
push
push
push
call
add
lea
cmp
jne
mov
mov
sub
cmp
je
mov
and
mov
mov
cmp
je
and
cmp
je
mov
sub
add
sub
cmp
je
sub
cmp
jne
add
add
cmp
jne
cmp
jne
and
push
mov
cmp
jne
cmp
je
mov
push
call
add
push
push
call
add
or
push
push
call
add
push
push
push
call
add
call
or
mov
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
call
add
sub
push
push
push
call
add
and
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
shr
and
push
push
call
add
mov
mov
push
push
call
add
push
push
push
push
call
add
and
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
call
add
cmp
jne
mov
mov
xor
call
push
push
push
push
push
call
add
cmp
jne
push
push
push
push
push
call
add
mov
call
push
call
add
sub
cmp
jne
push
push
push
push
call
add
push
push
push
push
push
call
add
call
sub
mov
xor
push
call
add
mov
mov
push
push
push
push
push
call
add
mov
sub
push
push
push
push
call
add
push
push
call
add
pushl
push
pushl
call
mov
mov
add
push
call
add
sub
or
addl
and
mov
add
and
add
mov
add
push
push
push
call
add
and
push
push
call
add
add
push
call
add
push
call
add
xor
push
push
push
push
call
add
mov
cmp
je
mov
cmp
jne
mov
cmp
je
add
cmp
je
mov
add
add
or
mov
cmp
je
mov
mov
and
sub
test
jne
add
mov
and
sub
mov
add
cmp
jne
or
and
or
add
and
cmp
je
sub
cmp
je
xor
and
mov
cmp
jne
cmp
je
mov
mov
add
or
add
test
jne
cmp
jne
mov
add
sub
cmp
jne
mov
add
sub
test
jne
sub
mov
mov
add
add
and
and
call
mov
sub
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
cmp
je
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
cmp
jne
push
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
push
push
push
call
add
cmp
je
push
push
push
call
add
mov
add
push
push
push
push
push
call
add
call
call
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
call
add
sub
call
push
push
push
push
push
call
add
sub
push
push
call
add
push
push
call
add
push
push
call
add
or
or
add
push
call
add
call
mov
mov
push
push
push
call
add
mov
mov
call
push
push
push
push
push
call
add
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
add
push
push
push
push
call
add
test
je
or
or
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
push
push
call
add
sub
push
push
push
call
add
add
call
and
cmp
jne
xor
push
push
call
add
cmp
jne
mov
mov
add
pop
sub
sub
pop
call
pop
call
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
push
push
push
push
push
push
call
add
push
mov
xor
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
mov
call
push
push
call
add
movl
mov
sub
and
xor
mov
push
call
add
call
call
add
mov
push
push
call
add
push
push
call
add
call
mov
or
sub
mov
call
push
push
push
push
call
add
call
cmp
jne
mov
sub
mov
call
push
push
push
push
push
call
add
mov
sub
or
sub
push
push
push
call
add
push
push
call
add
xor
and
add
push
push
push
push
push
call
add
mov
add
sub
mov
cmp
jne
mov
sub
mov
cmp
je
or
mov
add
sub
mov
sub
sub
sub
sub
xor
add
cmp
je
cmp
jne
push
push
push
push
push
call
add
push
call
and
mov
mov
sub
add
mov
or
je
and
sub
addl
mov
cmp
jne
add
lea
sub
add
inc
mov
and
sub
mov
cmp
je
mov
add
add
cmp
jne
cmp
je
cmp
jne
add
add
sub
mov
cmp
jne
sub
add
mov
mov
add
and
sub
sub
cmp
je
mov
mov
or
sub
cmp
je
add
add
mov
sub
cmp
jne
test
je
add
cmp
je
cmp
jne
sub
xor
sub
mov
sub
and
sub
add
sub
add
test
jne
sub
cmp
jne
mov
sub
mov
mov
sub
push
push
push
push
call
add
push
push
call
add
mov
and
push
push
call
add
mov
sub
cmp
je
mov
mov
cmp
jne
mov
cmp
jne
add
and
add
and
sub
cmp
jne
xor
add
add
add
xor
sub
or
mov
mov
cmp
jne
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
add
pop
sub
pop
and
push
push
push
push
push
call
add
push
push
call
add
push
push
call
add
call
mov
call
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
push
call
add
cmp
je
mov
push
push
push
push
push
call
add
xor
add
call
push
push
push
push
call
add
test
je
sub
cmp
jne
mov
add
test
jne
cmp
jne
push
push
push
call
add
push
push
push
push
call
add
call
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
add
cmp
jne
push
push
push
call
add
cmp
je
mov
push
push
push
call
add
and
push
push
push
push
push
call
add
call
push
call
add
mov
add
and
pop
call
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
push
push
push
push
call
add
push
cmp
je
xor
mov
push
push
push
push
push
call
add
push
mov
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
rdtsc
mov
mov
sub
sub
add
add
and
sub
mov
mov
sub
add
add
xor
mov
add
pop
mov
mov
sub
cmp
je
mov
mov
cmp
jne
sub
sub
and
sub
sub
add
add
sub
add
pop
cmp
je
mov
mov
test
je
add
add
or
add
sub
add
xor
pop
cmp
jne
sub
cmp
je
mov
cmp
je
xor
mov
sub
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
call
push
call
add
mov
cmp
je
mov
test
jne
cmp
je
mov
sub
mov
test
je
or
add
mov
xor
or
cmp
jne
test
jne
test
je
mov
add
or
mov
add
sub
add
add
mov
and
mov
add
and
mov
add
add
test
je
cmp
jne
cmp
je
mov
mov
cmp
jne
and
sub
and
sub
add
cmp
jne
mov
add
sub
sub
cmp
jne
add
or
cmp
je
add
or
mov
cmp
jne
add
cmp
jne
and
or
decl
mov
test
je
cmp
je
sub
mov
addl
mov
sub
add
cmp
je
mov
or
xorl
cmp
je
mov
mov
add
mov
or
cmp
je
and
mov
jmp
push
push
push
call
add
mov
call
call
mov
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
call
add
push
push
push
push
push
call
add
mov
cmp
jne
or
cmp
jne
mov
push
push
push
push
call
add
add
call
mov
call
call
push
push
push
push
call
add
push
push
call
add
call
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
cmp
je
mov
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
add
mov
push
push
push
push
call
add
push
call
add
mov
call
push
push
push
push
call
add
push
push
push
push
call
add
add
push
push
push
push
call
add
cmp
jne
mov
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
call
add
test
je
push
call
add
sub
cmp
jne
add
mov
mov
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
call
sub
call
cmp
je
push
push
push
push
call
add
test
jne
add
pop
mov
mov
push
push
push
push
push
call
add
pop
call
pop
cmp
jne
mov
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
xor
mov
push
push
call
add
mov
mov
mov
add
call
call
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
call
add
push
call
add
push
push
push
call
add
push
push
push
push
call
add
call
xor
or
cmp
jne
mov
xor
push
call
add
sub
push
push
call
add
and
call
add
push
push
push
push
call
add
sub
push
call
add
push
call
add
push
push
call
add
mov
push
push
call
add
add
push
push
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
call
add
mov
mov
sub
sub
push
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
call
mov
add
mov
or
sub
add
mov
mov
push
push
push
push
call
add
mov
push
push
call
add
push
call
add
add
mov
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
sub
add
push
push
push
call
add
mov
push
push
call
add
mov
push
push
push
call
add
push
push
push
push
push
call
add
mov
add
mov
push
push
call
add
add
mov
sub
mov
mov
add
and
sub
sub
add
xor
mov
mov
cmp
jne
mov
and
mov
sub
or
add
sub
add
test
je
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
or
cmp
jne
add
add
add
add
add
cmp
je
xor
mov
and
sub
or
cmp
jne
mov
sub
add
add
sub
sub
sub
or
je
add
mov
mov
cmp
jne
mov
add
xor
cmp
je
mov
cmp
jne
or
sub
cmp
je
mov
and
and
sub
repnz
push
push
push
call
add
push
push
push
call
add
addl
push
push
push
call
add
jmp
push
call
add
push
push
push
call
add
push
push
push
push
call
add
mov
and
sub
pop
cmp
jne
mov
pop
mov
sub
xor
and
add
cmp
je
cmp
jne
cmp
je
mov
mov
sub
cmp
jne
mov
xor
cmp
jne
or
and
mov
and
cmp
jne
add
mov
sub
mov
test
jne
xor
cmp
jne
add
sub
test
jne
mov
cmp
jne
sub
add
mov
pop
mov
add
mov
cmp
je
add
mov
sub
cmp
je
add
add
sub
cmp
jne
mov
mov
sub
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
push
xor
mov
push
push
call
add
call
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
call
add
and
sub
push
push
call
add
sub
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
call
push
push
push
push
call
add
pop
push
call
add
pop
or
push
push
push
push
call
add
push
push
push
push
call
add
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
push
push
push
push
call
add
push
mov
push
xor
sub
mov
push
push
push
push
call
add
push
push
call
add
call
test
je
mov
push
push
call
add
push
cmp
je
push
push
push
call
add
mov
push
push
push
push
call
add
call
mov
push
push
push
call
add
and
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
call
push
push
push
push
call
add
pop
push
push
push
call
add
pop
call
call
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
push
mov
push
call
add
mov
call
push
call
add
push
push
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
push
call
add
push
call
add
push
push
call
add
pop
push
push
push
push
call
add
push
push
push
call
add
pop
push
push
call
add
push
push
call
add
pop
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
push
push
push
push
call
add
push
push
call
add
push
push
call
add
mov
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
xor
and
push
push
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
mov
sub
add
push
push
push
push
push
call
add
push
call
add
push
push
call
add
test
je
push
push
call
add
mov
push
push
call
add
push
call
add
and
xor
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
cmp
je
push
push
call
add
push
push
call
add
mov
and
mov
push
push
call
add
sub
and
and
sub
push
push
push
push
push
call
add
push
call
add
add
push
push
call
add
sub
push
call
add
pop
call
pop
push
push
push
call
add
pop
mov
push
push
push
push
call
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
add
call
xor
mov
call
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
pop
and
push
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
call
pop
cmp
jne
push
push
push
push
call
add
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
call
add
push
mov
call
push
sub
push
call
add
push
mov
push
push
call
add
mov
push
push
push
push
push
call
add
call
mov
push
call
add
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
pop
xor
call
push
push
push
call
add
pop
push
push
push
call
add
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
call
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
mov
mov
call
cmp
je
sub
push
push
push
push
push
call
add
cmp
je
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
pop
and
cmp
je
sub
push
push
push
push
push
call
add
pop
push
push
push
call
add
push
push
call
add
pop
cmp
je
mov
and
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
call
add
push
push
push
push
call
add
push
xor
xor
sub
sub
push
push
push
push
call
add
push
push
push
push
call
add
push
cmp
je
mov
push
push
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
push
call
add
push
push
push
call
add
push
call
add
and
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
sub
sub
test
jne
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
call
add
xor
push
push
push
push
push
call
add
mov
mov
push
push
push
push
call
add
call
push
push
push
push
call
add
push
push
push
push
push
call
add
pop
and
push
push
call
add
pop
sub
push
push
push
push
call
add
pop
mov
push
push
call
add
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
call
push
test
je
push
push
push
call
add
call
push
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
mov
xor
push
push
call
add
sub
pop
sub
pop
call
pop
add
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
call
add
push
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
mov
call
push
push
push
call
add
call
pop
and
push
call
add
pop
mov
add
push
push
push
call
add
pop
push
push
call
add
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
push
mov
sub
push
test
jne
or
push
add
cmp
jne
test
je
cmp
je
mov
mov
test
jne
cmp
je
mov
and
cmp
je
and
xor
add
mov
add
mov
sub
cmp
je
mov
cmp
je
mov
add
sub
mov
sub
cmp
je
mov
mov
add
mov
sub
sub
add
add
add
mov
mov
test
jne
sub
and
mov
and
xor
sub
sub
add
cmp
jne
cmp
jne
add
mov
mov
mov
sub
add
add
add
pop
mov
cmp
je
add
and
mov
sub
cmp
jne
mov
add
or
cmp
je
cmp
je
cmp
jne
mov
add
cmp
jne
mov
xor
mov
and
cmp
je
mov
cmp
je
sub
test
jne
cmp
jne
add
mov
add
xor
mov
cmp
jne
and
add
and
pop
add
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
mov
push
add
push
mov
cmp
je
mov
add
sub
and
mov
cmp
je
cmp
je
or
cmp
je
mov
cmp
je
mov
add
cmp
jne
mov
sub
mov
and
or
push
mov
sub
cmp
je
add
mov
mov
add
add
cmp
jne
add
cmp
jne
mov
add
cmp
jne
mov
sub
and
xor
add
cmp
jne
sub
mov
mov
or
and
or
cmp
je
mov
sub
cmp
jne
add
add
cmp
jne
mov
test
jne
sub
mov
add
add
mov
sub
add
cmp
je
add
mov
add
mov
mov
sub
mov
mov
and
sub
mov
cmp
je
add
add
test
jne
cmp
je
mov
cmp
je
mov
mov
or
xor
cmp
je
mov
mov
mov
sub
sub
sub
sub
or
mov
add
add
pop
add
pop
sub
pop
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
add
mov
push
mov
mov
and
cmp
je
add
push
sub
push
add
add
add
mov
mov
or
cmp
je
and
sub
add
test
jne
sub
or
sub
or
add
sub
test
je
cmp
je
xor
xor
or
and
and
and
sub
cmp
je
cmp
je
mov
mov
sub
add
cmp
jne
add
mov
cmp
jne
cmp
je
add
mov
sub
test
jne
test
je
sub
xor
sub
cmp
je
test
je
xor
mov
sub
sub
add
cmp
je
add
add
mov
test
jne
sub
sub
pop
mov
test
jne
sub
xor
sub
mov
add
cmp
je
add
mov
sub
mov
add
mov
cmp
jne
mov
xor
mov
add
cmp
jne
cmp
je
mov
and
or
cmp
je
add
add
add
pop
cmp
je
add
pop
add
mov
cmp
je
cmp
jne
or
mov
sub
add
cmp
jne
mov
add
add
sub
sub
cmp
je
cmp
jne
mov
sub
mov
add
add
cmp
je
sub
sub
cmp
je
sub
test
jne
sub
mov
cmp
jne
sub
add
sub
leave
ret
