sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
pushf
dec
sub
lcall
and
fisttpl
mov
insl
and
loope
sbb
enter
push
pop
mov
inc
pop
dec
xor
aas
rolb
in
cwtl
or
push
fdivp
fmuls
test
jbe
dec
fsub
xor
rcll
out
add
insb
fsubs
sbb
imul
sbb
xchg
test
push
xor
fistpl
bnd
hlt
lds
popf
cmp
inc
inc
rclb
cmp
pop
mov
pop
mov
loope
cmpb
jo
arpl
dec
or
jg
dec
pop
nop
mov
mov
sarb
je
cltd
pop
sub
add
sbb
or
cld
in
cmp
pop
int
out
dec
ljmp
jmp
xchg
enter
xchg
pop
dec
je
outsl
push
xor
les
xchg
or
push
ljmp
mov
cmpsl
xor
adc
ljmp
in
mov
cli
xlat
dec
mov
or
fbstp
or
ljmp
cwtl
push
mov
ss
ja
inc
cmp
and
jne
push
sbb
cmp
je
cmp
or
pop
sub
shlb
sub
mov
addr16
out
mov
pop
add
cmp
stos
in
sub
cmp
rcll
in
mov
adc
mov
push
mov
fbstp
cmp
mov
lahf
inc
or
adc
cmp
adc
jae
sbbl
lock
cmpsl
inc
mov
xor
imul
add
insl
mov
fcom
sub
pop
in
xchg
xchg
dec
in
out
or
sub
pop
imul
inc
fld
int3
and
mov
pop
lea
test
push
push
push
push
outsl
jnp
addr16
xchg
mov
mov
cmp
aaa
adc
or
cmp
fwait
in
mov
mov
icebp
fnstenv
xor
add
loop,pn
std
into
andl
xchg
das
mov
rorl
aam
out
mov
sbbb
sub
xor
pop
push
xchg
jno,pn
ja
int3
pop
inc
sbb
sbb
scas
jbe
and
rcl
clc
mov
test
sbbb
add
lods
mov
mov
in
adc
jle
add
push
or
xor
ds
loope
das
js
dec
mov
pop
lods
jne
pusha
into
int
pop
xor
daa
popf
lahf
movsb
das
pop
and
xchg
add
pop
xor
jp
mov
push
push
adc
bound
lcall
aam
lods
lock
push
xor
add
aad
nop
ficompl
loopne
xchg
ret
mov
jns
ja
xchg
pop
hlt
xor
aas
mov
xchg
sar
adc
lock
js
xchg
mov
adc
pop
add
cmp
fsubl
mov
push
sbb
sub
xchg
scas
cmp
les
dec
inc
repnz
mov
movsl
mov
xchg
cli
push
dec
sub
scas
hlt
inc
sbb
and
sbb
fnstcw
iret
pop
cmp
fucomi
icebp
rolb
cli
mov
dec
sahf
imul
mov
repz
push
pop
inc
lods
aas
mov
imul
push
in
inc
mov
mov
cwtl
push
jmp
int3
fyl2xp1
mov
pushf
notl
xlat
fs
mov
in
aaa
mov
sti
das
mov
fmuls
mov
jo
mov
push
mov
sarb
mull
sbb
inc
inc
mov
jae
fstl
xor
pop
rorl
std
xchg
jle
or
mov
nop
mov
mov
xchg
mov
sbb
mov
in
insb
push
leave
mov
stc
push
fisttpl
stos
pusha
aad
ljmp
mov
mov
or
aad
subb
push
out
sbb
push
or
lock
inc
loop
ret
movsb
ss
pop
cltd
aas
push
aas
jne
jle
xor
lock
fldcw
into
jae
les
in
adc
ret
xor
bsr
in
sub
mov
push
or
cmp
lds
jns
sbb
and
fisubrs
add
push
fwait
xchg
insl
pop
push
xor
adc
fs
xchg
icebp
adc
xchg
jne
dec
jbe
xchg
pusha
adc
inc
in
hlt
jp
lcall
cmp
push
inc
mov
movl
or
push
sub
gs
pusha
movl
movsl
ja
pop
icebp
sbb
fisubrs
hlt
out
pop
xchg
pop
mov
fsubl
hlt
xchg
inc
mov
push
mov
lcall
clc
loope
sub
xlat
sub
cmc
dec
pusha
and
push
aas
enter
aas
sbb
int
mov
and
mov
ljmp
shll
mov
fsubs
jle
pop
andb
sbb
ss
push
mov
sbb
out
push
fistps
clc
mov
mov
repz
stos
xor
out
jnp
push
daa
movsl
scas
sti
jno
aam
adc
inc
push
sub
sub
mov
pop
rcll
pop
andw
or
int
mov
xchg
push
pop
pop
add
repnz
add
cmp
loope
cmp
sbb
or
xchg
mov
sub
sbb
jg
aaa
pop
imul
cmp
bound
mov
and
hlt
leave
mov
imul
shr
sub
mov
push
into
in
pop
xchg
xchg
dec
push
push
mov
cs
into
data16
xor
pop
ds
push
xlat
popf
int
xchg
add
jmp
iret
shll
popa
cmp
out
nop
cmp
or
dec
in
or
pop
filds
sub
or
in
jns
mov
adc
pop
insb
mov
dec
sub
mov
std
fsts
add
fldl
or
dec
int
mov
in
xchg
and
dec
or
pop
cwtl
jl
fwait
pop
loop
test
push
xchg
or
ja
mov
jg
and
jnp
push
adc
lcall
sbb
lods
rcrl
xchg
stc
xorl
in
fcompl
push
cmp
mov
mov
and
sub
scas
hlt
dec
repz
popf
inc
fisubrl
fisubrs
cmpsb
xchg
jmp
and
rcr
or
dec
cwtl
cltd
dec
pop
dec
add
inc
fs
inc
scas
xchg
xlat
adc
mov
sbb
push
jae
dec
adc
les
call
or
out
andl
inc
push
mov
loope
outsb
push
add
jg
xchg
mov
sarb
ja
push
cmp
ret
into
add
js
sub
shll
jns
pop
roll
cs
leave
cli
pushf
out
jge
std
pop
cltd
push
mov
mov
in
stc
mov
int
cltd
xor
les
jnp
in
add
js
sub
xchg
fsubrl
and
lea
mov
dec
mov
inc
imul
aam
out
push
stc
mov
gs
mov
dec
cli
xor
xchg
dec
xor
inc
hlt
cmc
add
or
sub
and
xchg
fwait
push
aam
mov
push
xchg
xor
sbb
xor
inc
out
sti
cmpl
push
out
imul
iret
inc
push
das
mov
push
inc
call
adc
jp
inc
jmp
pop
mov
cmp
ret
inc
inc
movsb
xchg
ds
dec
lock
adcb
push
sub
fcmovb
sbb
inc
dec
loop
icebp
lods
and
dec
cmp
or
and
or
add
cmp
lods
or
inc
out
mov
add
xor
inc
iret
mov
adc
jne
push
ret
jge
aaa
xchg
inc
out
adc
mov
insb
mov
and
sub
pop
sub
inc
js
push
jp
fcmovb
mov
mov
ds
add
xor
aam
or
iret
jge
jl
or
data16
iret
aam
je
ds
pop
cmp
movsb
fdivrl
cmp
push
xchg
fwait
in
push
push
mov
add
aaa
xor
ja
push
mov
xchg
xor
ret
in
leave
cmpsl
int
xor
into
or
cld
pop
nop
adc
mov
in
sbb
push
outsl
inc
out
dec
sub
loopne
pop
loope
fldl
adc
cld
adc
in
and
rorl
movsl
je
cld
pop
inc
sub
dec
dec
sbb
and
jl
add
inc
xlat
orl
in
fidivrs
xlat
call
adc
repz
mov
loop
aaa
cld
lock
ss
push
push
mov
das
imul
xchg
leave
imul
xor
cltd
mov
dec
lea
jmp
mov
lret
mov
lock
sub
inc
mov
repz
bound
push
jge
and
ds
lret
pop
jmp
insl
sub
andl
hlt
inc
insl
mov
enter
pop
and
push
mov
xlat
int3
shll
stos
addb
sub
mov
inc
das
or
fbld
std
jl
mov
jne
xor
mov
pop
out
dec
in
stos
mulb
push
mov
jl
jb
shlb
dec
ds
sub
movsb
out
xor
in
jo
and
dec
and
pop
fists
dec
jnp
or
cld
jl
lret
pop
shlb
jae
repnz
xor
ljmp
dec
imul
sbb
push
int
push
pop
es
push
in
cmp
adc
mov
out
jg
mov
dec
sahf
negb
push
insl
in
add
leave
xchg
filds
lods
jb
cmpsl
xchg
and
loopne
lret
inc
pop
adc
inc
fs
adc
pushf
push
lea
xor
fsubrl
inc
xor
cmc
ljmp
push
and
rolb
xchg
loopne
popa
popa
add
cwtl
sbb
scas
jnp
cmpsb
mov
fucom
fcoms
test
sub
mov
mov
insb
rclb
pop
enter
mov
pop
xchg
adc
dec
sub
jmp
in
add
stos
dec
sbb
call
aaa
out
adc
inc
loope
push
lret
lcall
sbb
out
test
in
fildll
pop
and
or
add
inc
inc
imul
and
push
rcrl
mov
xchg
out
xchg
mov
jns
inc
push
addb
arpl
fildl
mov
shlb
jbe
adc
aas
dec
int3
rorl
sub
lret
jnp
je
adc
push
mov
cmp
mov
out
push
lds
out
push
fldt
jmp
sahf
cwtl
and
hlt
cmp
dec
cli
pop
aas
outsl
sti
out
adcl
out
out
push
adcl
cmp
pushl
leave
data16
push
negb
pop
cmp
outsb
cmp
xchg
push
lea
pushf
int
divl
xchg
dec
jecxz
in
bound
call
mov
shr
xor
dec
aaa
stos
std
fistl
mov
mov
add
add
push
lds
adc
cld
cmp
add
inc
mov
jl
xchg
hlt
roll
push
xor
cs
jg
sub
cmp
andl
xor
push
in
push
xchg
imul
pop
mov
jb
sub
mov
fwait
adc
in
clc
insb
xchg
dec
cs
inc
sub
push
mov
xor
in
in
leave
enter
fs
cmp
push
cltd
imul
shrl
jecxz
sar
add
push
jmp
stos
push
int3
cmpsl
inc
test
xchg
sub
in
popf
mov
push
push
sbb
int
inc
push
push
addr16
dec
fsubrl
mov
mov
sub
push
test
push
mov
add
adcb
adc
jb
push
or
and
imul
sahf
loopne
je
fstpt
scas
stos
pop
push
ss
lods
ljmp
jbe
push
imul
and
leave
sahf
sub
nop
cmp
sbb
out
or
mov
enter
sub
mov
rsqrtps
and
shrl
dec
pushf
pop
loope
add
push
jg
shrl
xor
loopne
loop
and
inc
lret
addl
ficoml
stos
lods
cli
mov
mov
clc
call
or
mov
cmp
mov
fimull
add
cmp
mov
pop
push
ficompl
lahf
and
xchg
lahf
fs
mov
adc
add
out
inc
adcb
repz
fildll
ret
mov
and
dec
xor
or
movsl
dec
lcall
xor
jae
es
arpl
cmc
mov
xor
gs
xchg
mov
cmpsb
adc
mov
fwait
cli
cs
mov
cwtl
xor
and
or
cs
push
in
hlt
sahf
xchg
mov
outsb
inc
dec
and
insb
cli
test
xor
popa
mov
dec
insl
xlat
cmpsb
insb
shll
add
mov
dec
insb
inc
xor
pop
add
pop
in
dec
aas
insl
mov
into
adc
adc
mov
not
xchg
push
ret
add
jb
int3
inc
ret
ja
andl
cmp
push
mov
outsl
lret
xor
cmpsl
cmp
mov
push
std
aad
xor
pop
out
xor
jl
mov
lds
fs
push
and
sti
inc
repz
dec
mov
test
inc
lea
stos
rcrl
subb
mov
mov
insb
xor
nop
inc
push
push
dec
je
mov
leave
testl
stc
aaa
inc
cmpsb
imul
es
data16
sarb
add
jle
data16
and
clc
mov
mov
jno
shrl
and
adc
pop
xlat
adc
clc
push
lds
nop
ss
pop
ret
jo
jns
outsb
sbb
sbb
jne
mov
shlb
bound
cmp
adc
cltd
int
pop
aas
sti
mov
push
sub
pop
js
and
std
xchg
aad
push
or
insb
rol
daa
icebp
push
jl
cmpsl
xchg
sbb
mov
addr16
adc
or
outsb
dec
fbstp
xchg
sub
arpl
push
inc
movb
sub
movsb
notb
lret
cmp
mov
sub
pop
js
or
insl
adc
sbb
arpl
roll
insl
jg
jbe
xchg
push
dec
filds
push
loope
scas
inc
jbe
mov
xor
push
and
in
mov
and
cmp
sub
test
ss
adc
imul
out
pop
push
fwait
aas
push
mov
js
insl
jmp
mov
sub
repnz
test
cld
fisubs
or
movsl
and
lret
popl
lcall
cmpl
pop
mov
adc
sub
add
xor
mov
lret
push
jecxz
ret
inc
aam
mov
mov
lret
in
add
icebp
mov
jmp
jge
push
or
sahf
cmp
cmpsl
jo
or
mov
jmp
mov
cwtl
mov
stos
rorl
jle
and
sub
pop
and
ja
out
fstl
mov
and
dec
imul
imulb
inc
repz
ja
push
roll
arpl
lret
xchg
test
jl
pop
pop
jmp
jo
xchg
dec
jae
pop
sub
or
jecxz
cmpsb
jp
push
xor
fisubrl
data16
lret
sub
mov
sbb
mov
stc
out
xchg
sahf
dec
sbb
inc
mov
ficomps
aam
cmp
out
or
and
repnz
std
fdivrp
mov
xor
xor
pop
pop
divb
dec
adc
repnz
xchg
ljmp
pusha
cmp
dec
inc
jle
and
std
jecxz
out
rcrl
mov
xlat
inc
cld
hlt
mov
adc
jae
fisttpll
push
pop
popa
aad
xor
movsb
jns
xchg
push
sti
push
inc
dec
sbb
leave
mov
div
ljmp
pushf
xchg
lock
xchg
push
jns
inc
push
add
mov
lret
mov
mov
in
inc
mov
dec
jbe
and
xor
stos
je
cmp
jmp
out
fnstenv
mov
out
mov
adc
adc
dec
out
cwtl
mov
negl
dec
imul
xchg
xchg
xlat
iret
daa
out
sbb
xchg
mov
shll
out
lea
jne
fwait
and
lahf
cmpsl
leave
cmp
and
jns
je
dec
adc
insl
cmc
jbe
fmuls
ljmp
mov
mov
neg
testb
sbb
shlb
arpl
pop
insl
scas
lock
push
hlt
in
or
sahf
or
mov
faddl
cwtl
push
les
cmp
xchg
sub
scas
pusha
push
xchg
dec
add
clc
pop
mov
xchg
das
push
pop
pushf
mov
jecxz
jns
jns
cli
xchg
xlat
jle
mov
xchg
inc
pop
inc
jl
inc
mov
pusha
jl
jae
cmpb
aaa
mov
jnp
rcll
test
addl
xor
jp
jle
fs
nop
pop
pushl
lret
popa
jne
inc
in
ja
add
loope
dec
imul
popa
mov
inc
andb
pop
xor
loopne
lret
mov
jae
test
push
push
dec
jnp
pop
sub
ficoms
pop
inc
das
inc
sbb
fsubrp
jge
jnp
jnp
js
fsubr
push
xor
inc
xchg
dec
in
and
inc
pop
mov
pop
mov
push
ljmp
sub
fst
jne
sbb
bound
cmovns
xchg
and
adc
cld
out
negl
das
add
lock
lods
jb
sbb
or
mov
jo
movsb
mov
outsl
test
jo
in
insb
mov
insb
xchg
and
cli
in
push
mov
mov
and
mov
jae
mov
test
in
out
mov
mov
shlb
into
fwait
hlt
notl
push
in
dec
scas
js
and
inc
movsb
ret
or
mov
adc
xorb
mov
sbb
daa
xchg
notl
xorl
ror
ljmp
andb
push
ds
sbb
lss
push
inc
fldt
adc
add
mov
inc
jg
ja
and
test
int
aas
call
push
cli
mov
out
cmpsb
xor
mov
xlat
xchg
pop
pop
in
jp
fsubrs
fwait
cmp
fidivs
subb
iret
xor
loope
or
or
push
sbb
adc
pop
sub
je
push
jo
or
mov
adc
mov
iret
mov
jbe
mov
push
cmp
xlat
data16
mov
stos
mov
mov
dec
mov
push
int
shlb
lret
gs
adcl
dec
lret
or
stos
push
xchg
pusha
push
in
shll
or
ret
enter
push
xor
pop
adc
pop
mov
in
and
lock
cmp
outsb
and
jge
jbe
mov
cmp
incl
aam
push
sub
es
das
sbb
paddsw
scas
mov
loop
ljmp
xchg
mov
sahf
xchg
gs
imul
sbb
mov
clc
ds
inc
mov
or
adc
xchg
xor
cmc
inc
xor
jmp
or
addr16
jae
fdivl
rcrb
and
pop
cmp
icebp
js
lods
arpl
mov
adc
mov
pop
dec
fnstsw
stos
and
cmpsl
lods
push
pop
add
push
inc
push
cmpsl
es
add
jmp
mov
shlb
push
cwtl
and
cld
inc
lcall
xchg
stos
fisubrl
fcomip
or
xor
jae
cltd
push
and
sbb
dec
es
ficoms
sub
adc
push
std
sub
pop
shrl
lcall
push
out
add
mov
inc
sbb
add
sbb
in
insl
mov
scas
adc
xchg
push
cmpsb
sti
movsb
mov
mov
or
loopne
movsl
cltd
movsb
aas
popa
push
fdivrs
repnz
mov
out
mov
or
loope
push
add
adcb
pop
or
pop
inc
mov
sub
push
cmpsb
cmpsb
xchg
and
or
repz
push
out
pop
or
repnz
adc
jg
rorl
in
mov
js
sbb
outsb
cmc
fistpl
lea
sub
add
mov
xor
xchg
jecxz
fwait
push
gs
sub
and
or
out
sub
je
pop
xor
popf
cli
lahf
adc
daa
mov
scas
sbb
pop
aad
jl
mov
or
push
sti
fidivrs
xchg
test
icebp
addl
pop
sub
lods
loope
dec
mov
aam
mov
imulb
mov
test
sti
jns
imul
ja
mov
popa
cmpsb
cli
fdivs
fimull
mov
sub
pop
cli
mov
inc
fwait
or
sahf
cmp
repz
pop
gs
dec
movsl
in
jmp
pop
mov
add
xchg
ss
and
xlat
xchg
leave
xor
and
loope
hlt
inc
cmp
adc
sub
dec
sbb
iret
jnp
in
imull
pop
xchg
sbbl
in
inc
xchg
rclb
int3
adc
and
jg
pop
or
pop
cmp
xor
fbld
pop
test
cld
clc
push
cmpsb
xchg
fcompl
or
bound
arpl
jmp
push
jb
outsb
push
mov
cld
jge
cltd
add
dec
test
inc
out
loopne
notl
xor
decl
push
push
add
dec
inc
and
mov
out
pop
add
hlt
loop
addr16
outsl
mov
rclb
mov
ret
mov
adc
cmp
divl
sub
mov
push
mov
les
popf
mov
es
dec
das
xlat
sub
faddp
fiaddl
and
mov
sbb
push
repz
jns
popa
inc
cmpsl
rcll
push
inc
or
sbb
and
dec
mov
cmp
jae
pushf
out
sbb
jno
daa
les
push
pop
orb
xchg
mov
sub
lods
aaa
add
in
xchg
and
jle
gs
cmpsl
imull
hlt
ja
sbb
hlt
xchg
ret
sbb
pop
cmpl
out
sti
pop
mov
fsubs
sbb
sbb
ja
in
negb
or
inc
mov
inc
loopne
add
shll
jp
rcrl
int3
and
je
aam
jmp
and
xor
mov
sbb
cmp
push
out
repz
jne
mov
les
mov
fsubrl
adc
fwait
cli
aam
mov
orl
mov
faddl
mov
imul
es
scas
orl
mov
addr16
lods
out
sub
xchg
ret
mov
jecxz
imul
dec
dec
add
mov
jmp
sbb
ficoms
jbe
ds
xor
dec
fidivrl
or
cmp
jne
xor
xchg
cmpsl
push
out
push
add
arpl
jo
adcw
gs
cmp
mov
jle
je
loopne
push
hlt
lret
shll
inc
jge
or
add
push
int3
cmp
sbb
mov
jle
popl
sub
cmp
cltd
test
cld
jae
in
push
jecxz
cli
add
mov
mov
gs
leave
addr16
cmp
sbb
pop
inc
pop
mov
in
mov
aam
cmpsl
call
ret
mov
cld
test
imul
gs
roll
adc
mov
cmp
lds
adc
js
addb
repnz
xchg
lcall
cmp
adc
and
add
sbb
fdivs
jle
lahf
cmp
or
jae
xchg
sbb
adc
std
ljmp
fs
jo
pushf
push
jl
inc
idivl
loope
aad
cmp
adc
mov
cld
push
lock
jne
pop
jle
pop
jns
adc
cltd
sarb
aam
mov
jns
cltd
into
std
gs
xor
pop
sbb
jge
xchg
push
xchg
pop
iret
scas
fwait
push
std
dec
or
incb
mov
flds
nop
jecxz
mov
pop
mov
push
fisttps
fisttps
pop
aad
hlt
lods
jp
mov
jno
xor
lahf
rorl
dec
xor
sahf
lods
cmp
and
ror
stc
js
adc
mov
cwtl
inc
cs
adcb
nop
mov
dec
lret
pop
icebp
insb
aad
cwtl
ret
outsl
push
mov
cwtl
insb
shlb
mov
and
test
pop
je
clc
mov
hlt
clc
iret
cmpsl
lcall
lcall
pop
pop
jg
xor
arpl
cmpb
add
mov
xor
sub
mov
cmp
pop
fimull
xor
mov
lds
sbb
xchg
jae
cmp
push
sbb
test
inc
mov
packuswb
lods
into
xchg
mov
jno
jb
test
dec
sub
adc
test
pop
jmp
scas
push
lcall
adc
mov
out
les
and
pop
xor
dec
pop
clc
stos
scas
ret
pop
lds
aas
out
add
inc
sbb
push
cmc
in
add
in
clc
sub
and
xor
adc
pop
movsl
pop
inc
pop
inc
jmp
bnd
es
int3
or
movsl
cld
cmp
fdivl
repnz
test
lret
mov
dec
xor
jno
push
mov
xor
int3
push
push
mov
add
xlat
sbb
sahf
dec
enter
movsl
adc
xchg
and
inc
push
idivb
mov
in
out
pop
and
test
test
add
cmp
pusha
mov
mov
push
aas
and
jne
loop
inc
fs
fdivl
sbb
cmpsl
and
iret
sub
jnp
sbb
pop
movb
mov
mov
cmp
push
stos
test
sarb
cli
test
out
and
cmp
add
xchg
movsb
sub
mov
sarl
or
xor
enter
dec
jne
ss
enter
inc
loopne
fistpl
xor
or
cmp
test
mov
cmp
lods
mov
out
repz
mov
outsl
movsb
fidivs
inc
jns
mov
ds
loope
mov
lock
dec
jg
xor
adc
repnz
cmpsl
jmp
xor
and
shll
lods
pop
daa
sub
bound
pop
repnz
dec
test
mov
into
sti
outsl
pop
xor
lea
rcll
das
or
fiadds
mulb
mov
cmpsl
mov
xchg
adc
cs
test
cmpsb
out
xor
dec
arpl
jae
mov
decb
fs
js
shl
es
xor
push
mov
imul
xchg
adc
inc
ds
stos
fists
or
scas
cmc
pop
xchg
mov
fmull
mov
sub
inc
jo
cmpsb
sahf
cmp
pslld
sub
cmpsl
or
cmc
adc
mov
test
es
jle
pop
adc
sbb
mov
xchg
pop
in
leave
mov
divb
inc
mov
imul
or
dec
jne
jle
cmp
in
mov
outsl
into
sahf
mov
push
cltd
cmpsl
sbb
lods
cs
xor
jle
adc
mov
cmp
or
movsb
test
lret
sub
lret
loopne
pop
pop
les
sbb
ror
loopne
sub
push
aas
xlat
pop
push
loopne
mov
addl
push
push
xchg
dec
sub
adc
lret
popa
xchg
inc
xor
outsl
aad
jge
test
ja
xor
ljmp
fimull
inc
in
jmp
in
xchg
or
test
std
fadd
lods
hlt
mov
xlat
push
adc
fdivl
icebp
loope
sub
cwtl
xor
push
int3
dec
out
cltd
sahf
rcr
cld
lret
inc
cs
enter
packuswb
stos
adc
in
mov
jge
mov
in
mov
lds
popa
xor
bound
bound
mov
pushf
ret
mov
xchg
scas
hlt
sub
mov
outsb
xor
jns
dec
mov
outsl
inc
xchg
fsubl
cmpsb
adc
pop
imul
stos
push
jecxz
arpl
test
sub
xchg
sub
inc
jnp
inc
imul
cmp
loop
dec
out
jne
xchg
test
out
mov
xor
mov
dec
xchg
mov
cwtl
push
gs
xor
mov
leave
cmpsb
mov
popa
add
ficomps
fwait
test
or
in
cmpsb
cmpsb
aaa
push
ds
imul
stos
sub
aaa
pushf
push
mov
xchg
sahf
xchg
shr
int3
subl
scas
pop
mov
cmpsl
pusha
push
aad
nop
ljmp
mov
dec
int
aaa
xor
or
cmp
push
pop
js
jo
push
mov
insb
popa
push
pop
jb
xlat
dec
lods
loope
pushl
xchg
aas
push
cmp
pushf
out
jecxz
or
xor
xchg
outsl
loopne
inc
cmp
dec
lock
loopne
adc
fstl
outsl
scas
test
ja
xor
pop
pop
scas
xchg
mov
xor
cltd
xchg
in
popa
outsb
aam
add
or
lcall
jns
lret
pop
push
xor
jge
adc
sbb
jns
adc
ficoml
iret
je
pop
pop
js
jmp
test
scas
xchg
cld
lret
lahf
pop
test
scas
mov
push
or
pop
xchg
add
pop
adc
jmp
adc
xchg
mov
scas
push
adc
shrl
push
jo
dec
out
cmp
add
mov
cwtl
cld
jle
sarb
mov
mov
add
sub
or
sarb
es
sqrtps
in
mov
xchg
push
dec
adc
or
dec
int3
shlb
out
sub
fildll
fsubs
test
repnz
mov
aam
popf
and
cmc
scas
lret
pop
mov
jno
stos
lds
in
int
movsb
or
and
mov
iret
call
mov
cmp
mov
pop
xchg
mov
test
and
ljmp
sbb
jnp
lds
add
loop
push
insl
lea
cmp
jg
lret
ret
inc
std
xchg
mov
mov
in
sti
cmpsl
les
std
rclb
pushf
dec
xchg
bound
adc
or
pop
repz
aaa
mov
xlat
xchg
inc
repnz
subb
push
or
sbb
jmp
adc
jecxz
ret
inc
lret
repnz
pop
inc
ret
adc
nop
dec
imul
jmp
pop
add
xchg
test
lcall
test
or
add
or
or
aaa
dec
daa
or
xor
mov
repnz
sub
sub
xchg
push
cmpsl
dec
mov
xchg
lods
arpl
pusha
imul
dec
xchg
jb
xchg
fcmovnb
pushf
and
adc
in
sub
je
dec
jmp
push
fldenv
mov
mov
aas
aad
jmp
jno
outsb
cltd
mov
es
xor
ret
lods
jno
ret
imul
sbb
push
movsl
push
mov
xlat
sahf
imul
cmp
call
lea
mov
mov
ret
add
dec
sub
fmull
incl
fists
cmp
cs
push
push
int3
lret
clc
pop
ja
add
mov
sbb
out
int
mov
test
dec
cmpsl
cld
fwait
mov
or
and
inc
add
xchg
mov
dec
mov
push
pop
enter
aad
stos
es
xor
or
fstl
out
das
repnz
negb
push
xchg
mov
sbbl
gs
dec
imul
xchg
mov
call
dec
loopne
xchg
jg
dec
lahf
pop
inc
mov
bound
out
cwtl
ljmp
out
hlt
addr16
xor
lds
jae
push
sbb
pop
sub
cmp
arpl
push
cmp
faddl
mov
mov
jnp
cmp
movsb
mov
adc
lret
pop
movsl
fadds
cmp
inc
dec
dec
arpl
les
call
cmp
adc
fidivl
push
xchg
fsubrl
and
jo
in
insl
fisubrs
pushf
inc
jns
jp
sub
xchg
xchg
push
pop
gs
lcall
or
mov
mov
mov
sbb
fnop
addr16
adc
push
sbbl
cmpsl
mov
or
rorl
mov
cmp
test
sbb
add
xlat
cmp
mov
jo
cmpsl
inc
repz
mov
out
inc
std
mov
movsl
xchg
stc
dec
mov
xor
sub
cs
sahf
mov
loop
jne
or
lods
ljmp
and
xchg
pushf
js
ljmp
ret
je
mov
out
lahf
sub
xchg
inc
xchg
sub
jecxz
and
cltd
pop
pop
xor
lods
js
mov
addr16
and
adc
mulb
popf
sarl
add
call
data16
inc
mov
mov
or
inc
dec
cmpsb
mov
mov
rol
xlat
jmp
jl
icebp
sbb
mov
mov
xor
sbb
xor
push
cmp
popa
inc
pop
xchg
cmp
ffreep
std
mov
mov
arpl
or
or
mov
add
pusha
sarb
xchg
sahf
pop
xlat
dec
jnp
lock
lea
stc
ljmp
inc
adc
fwait
sbb
scas
mov
jns
and
shll
push
loopne
xabort
mov
mov
in
sub
mov
outsb
sbb
out
jbe
and
mov
xchg
xchg
addl
outsb
nop
pop
or
in
sub
mov
inc
hlt
xchg
pop
or
mov
pop
lahf
xchg
clc
jbe
std
adc
sub
push
and
add
arpl
out
pmulhw
pop
mov
push
and
call
sti
daa
popa
sbb
cli
jmp
es
mov
xor
dec
fistpl
lcall
rolb
mov
shll
stos
pop
lea
in
int3
xchg
lock
mov
cmp
pusha
loopne
push
sbb
mov
stc
lret
inc
adc
sbb
bound
iret
in
jge
test
push
shrb
shrl
lea
adc
cmpsb
fiadds
and
ljmp
sub
push
out
add
shlb
or
test
mov
fadds
xor
fwait
imul
cmp
icebp
adc
shlb
cmpsl
jl
pop
push
es
pop
mov
mov
jecxz
mov
mov
faddl
je
sbb
loope
push
xor
push
test
inc
mov
sahf
es
add
mov
loope
aas
stos
in
lcall
stos
jno
or
clc
xor
sub
inc
gs
mov
notl
push
mov
push
fstl
inc
cmp
in
cmp
jnp
shlb
arpl
lock
lock
jnp
test
pop
lock
pop
add
icebp
int3
pop
xchg
cs
push
out
inc
adc
lods
and
fldt
push
mov
mov
adc
pusha
sub
add
inc
mov
leave
jbe
arpl
push
popa
loop
cwtl
lds
lahf
test
push
out
shll
iret
daa
mov
ds
popa
clc
lahf
repnz
aam
scas
cmpsb
sub
pop
dec
popa
mov
adc
push
mov
or
and
mov
mov
xchg
fisttps
enter
xchg
add
pop
pop
outsl
inc
cmc
lods
bound
add
cwtl
imul
outsb
into
jle
or
jecxz
scas
push
cmpsl
add
adc
aam
xlat
xor
inc
pop
subl
jb
cmp
push
pop
push
inc
push
pop
mov
mov
and
mov
cmpsl
xchg
mov
jb
test
mov
dec
lea
enter
in
fcmovne
test
std
arpl
and
sbb
pop
mov
in
mov
ds
cmp
jmp
test
test
pop
sbb
das
inc
push
dec
or
inc
xor
movsl
fsubl
ds
cmp
in
cs
mov
inc
movsl
mov
faddl
xchg
in
dec
enter
inc
cs
push
cs
clc
mov
sub
insl
add
mov
cli
out
jp
pop
sbb
xor
and
push
inc
mov
cmp
fstpl
loope
outsb
xor
fdivrs
in
fistps
inc
lods
pop
loopne
jbe
loope
dec
fcom
adc
add
sti
mov
jae
inc
add
jnp
imulb
mov
pop
mov
cmp
repnz
stos
cmc
test
jl
out
cmp
rcll
jp
pushf
sub
cmpb
dec
add
jnp
inc
mov
icebp
pusha
icebp
js
push
or
sub
test
jmp
subl
mov
movsl
jge
popf
and
mov
jp
sbb
pop
pop
cmp
loope
imulb
xlat
xlat
dec
hlt
mov
lods
out
cmpsl
dec
inc
mov
data16
lret
lock
cmpsl
cld
mov
daa
lea
and
mov
loopne
sub
pushf
lahf
fdivrs
mov
cwtl
inc
aas
daa
mov
mov
dec
jle
ja
dec
and
sbb
shr
test
lock
xor
lods
push
mov
jno
dec
repnz
sbb
sbb
cltd
jb
in
xor
jbe
ja
dec
loope
sub
jge
aam
jle
stc
xor
pusha
xchg
ss
push
jbe
add
adc
mov
xchg
outsb
dec
cli
jge
add
sub
push
push
push
clc
sub
or
cmp
addr16
push
ja
sbbl
jnp
daa
mov
cmp
push
or
push
ficoms
aad
mov
in
pop
stos
xchg
cmp
mov
pop
sarb
inc
lret
stos
mov
repz
sub
pusha
adc
cmc
fcompl
mov
std
movsb
rcrl
sub
xor
pop
lret
lock
fcmovnu
pop
into
pop
icebp
mov
enter
and
inc
fisubs
sub
repnz
push
inc
sti
sub
pop
xchg
dec
ds
adc
xlat
test
fwait
push
or
jnp
sub
loop
cmp
mov
or
mov
lea
cmpsb
addr16
xorl
pop
cmp
out
mov
sbb
call
std
shl
ss
cld
rcrb
out
mov
pop
xchg
dec
shrl
sub
sub
xlat
ret
pushf
daa
pop
cmp
cmpsb
out
push
pop
mov
adc
call
push
movsb
sub
dec
orl
ljmp
adc
js
ret
xchg
sti
or
movsb
out
dec
jno
dec
cmpsb
push
imul
aaa
mov
push
loopne
push
cmp
mov
enter
test
adc
enter
shll
sub
jae
fildl
cmp
pop
add
jl
pop
mov
dec
orl
inc
test
jbe
jns
mull
or
lock
fwait
aad
xor
cmp
mov
lcall
ljmp
gs
ss
adc
ja
fstpl
fdiv
xchg
arpl
aad
movsb
fistps
mov
push
lds
jne
inc
push
mov
fimuls
movsl
lahf
movsl
adc
mov
mov
mov
mov
int3
test
aas
lds
popf
xchg
inc
sub
jbe
inc
test
jbe
xor
sub
mov
push
stos
push
je
mov
and
xchg
xor
repnz
call
cld
mov
dec
scas
dec
cmp
sbb
jb
js
jno
into
ja
adc
fistpl
and
push
iret
sbb
and
inc
repz
loope
dec
enter
iret
pusha
sub
aas
mov
cltd
arpl
jmp
jb
sub
loop
test
cmc
inc
jle
jbe
and
mov
loopne
xchg
pop
sti
jbe
jo
push
loopne
jecxz
inc
mov
aad
stos
fcmovne
jae
jp
add
cmpsb
decb
fwait
mov
jmp
jae
sbb
add
outsl
push
pop
mov
mov
sub
idivb
cli
addr16
xor
or
neg
xor
mov
sub
ret
out
bound
add
nop
xchg
adc
fs
adc
push
push
sub
ss
js
jle
aam
lock
fldt
xchg
mov
fld
loopne
popa
insb
je
adc
in
out
mov
or
cmp
jno
test
push
fstp
push
in
xchg
ja
out
loop
xchg
xor
inc
mov
adc
sahf
loope
xchg
cmp
xchg
cld
jecxz
or
dec
xor
enter
or
dec
add
push
lods
jb
imul
sub
jbe
ljmp
sahf
lods
cmp
add
aad
movsl
push
std
int
inc
test
inc
push
push
jnp
std
cld
fisttpl
scas
lcall
mov
imul
mov
xor
xor
push
jae
cli
dec
movsb
xchg
sub
pop
jmp
icebp
dec
push
xchg
mov
and
mov
mov
dec
adc
cmc
lahf
inc
fisubl
and
push
nop
insl
add
lods
int
movsl
mov
or
and
lods
insl
ds
aas
pusha
pushf
or
ret
in
and
xor
jmp
mov
in
and
or
test
call
pop
pop
dec
jbe
pop
jno
inc
mov
push
je
movsb
outsb
xchg
or
add
jmp
jb
hlt
loope
push
mov
mov
fmul
inc
dec
jg
fsubrs
xchg
push
jns
test
repnz
pop
xor
push
push
mov
iret
jbe
push
mov
xor
mov
lret
fldl
sub
pop
scas
cmpsl
mov
nop
dec
pop
ror
xchg
cmp
addl
test
adc
outsl
cmpsb
popa
push
push
mov
xlat
fdivr
add
in
mov
int
out
fcom
cmpsl
sub
bswap
fisttps
mov
mov
pop
xchg
jae
pop
lods
xchg
and
sbb
iret
imul
bound
popf
sub
and
std
leave
cli
into
ss
les
ljmp
lea
das
ss
xchg
inc
xor
mov
mov
jne
inc
daa
lods
dec
rcll
push
into
mov
mov
shll
mov
inc
mov
lret
xor
inc
sbb
sub
mov
popa
inc
jb
clc
mov
xchg
aad
in
push
cli
int3
or
xchg
cmove
aas
mov
ret
imul
mov
pop
shlb
rol
sbb
call
popa
inc
mov
filds
and
aaa
pop
insb
sub
and
pusha
inc
pop
pop
jp
shr
scas
std
fld
inc
sbb
dec
mov
xchg
jmp
adcb
add
std
add
dec
addr16
imul
and
lret
sub
fldenv
out
mov
inc
inc
imul
pop
cmc
insb
push
int3
clc
jmp
mov
cs
sub
and
xchg
cmp
or
sub
mov
push
fs
mov
cmp
push
leave
cs
ds
push
mov
mov
push
in
enter
xchg
sahf
xor
in
push
push
call
loope
dec
inc
imul
cmp
mov
sbb
pop
fs
inc
pop
sbb
orl
dec
dec
push
das
jae
ljmp
inc
mov
rorl
sub
daa
sti
inc
fbstp
add
pop
idivl
push
rcl
xchg
add
rclb
enter
jbe
mov
jmp
xor
pop
jne
nop
pop
inc
leave
ret
push
xor
jno
fnstsw
in
outsb
sbb
aaa
enter
inc
fisubrl
or
stos
aad
aad
stc
push
loope
cmp
dec
jo
dec
mov
cmp
pop
xchg
shrb
inc
cmpsl
pop
push
sbb
int
ret
insb
outsb
movsb
jg
adc
stos
dec
fisubrl
jecxz
icebp
ds
mov
mov
jne
mov
testb
leave
cmpb
push
ljmp
mov
imul
mov
test
push
jb
call
mov
xor
xor
fisubrl
mov
lods
pop
stos
fnstcw
imul
sub
xor
loopne
xor
pop
fsub
sub
push
or
pushf
rdtsc
lods
push
xchg
mov
add
lods
sub
fisubrl
daa
inc
scas
out
mov
push
and
cmp
mov
xchg
pop
scas
lret
push
in
es
aad
shlb
cmp
push
push
lds
cltd
stos
out
adcl
push
fwait
mov
aaa
xchg
stc
subb
pop
int
cld
add
push
and
jnp
mov
push
sahf
cmpsb
push
movsl
xorl
je
push
out
enter
sub
cmp
cwtl
jmp
je
cmovno
orb
xchg
adc
bound
xor
inc
ja
scas
push
xchg
cmp
xchg
jbe
dec
call
clc
ss
orl
pop
adc
or
stos
sbb
clc
aaa
sbb
pop
test
sbb
jle
icebp
cmp
pop
mov
mov
cmp
xchg
fimuls
movsl
je
push
cmp
ljmp
test
jbe
movsb
adc
test
mov
sarl
cld
int3
movsb
or
in
cld
es
fwait
repnz
dec
ds
push
cltd
xchg
mov
or
add
ja
mov
lock
or
loope
or
xor
ljmp
pop
pop
pop
fisubs
lea
mov
shlb
cmp
inc
or
outsl
push
push
cmp
aad
lret
cs
movsl
int3
adc
repz
xor
cmp
outsb
addr16
stc
aas
into
sbb
cmp
xlat
idiv
xchg
out
inc
call
in
shll
mov
lea
add
mov
add
mov
pop
jge
movsl
aaa
sub
and
sbb
mov
fistl
mov
adc
mov
adc
or
imul
add
scas
jns
je
fsubrl
xor
pop
mov
mov
push
pop
neg
out
sub
adcl
sbb
aam
repnz
ljmp
mov
push
xor
adcb
cmp
inc
xor
movsl
xorl
addr16
mov
daa
mov
adc
mov
popf
stos
inc
fisubs
sbb
addr16
xor
stos
sbb
cmpsl
jle
lret
cmp
xlat
cwtl
ja
dec
adc
aam
push
dec
or
stos
fistpl
fists
mov
cld
push
test
gs
inc
clc
push
mov
fnsave
sub
mov
adc
sti
jecxz
jno
dec
scas
cmp
and
js
mov
jne
sarl
push
mov
jmp
movsb
lret
or
xor
xor
mov
mov
lret
cli
dec
movsb
inc
out
or
pop
mov
in
add
or
or
cli
mov
rorl
rcrb
clc
popf
inc
lods
push
mov
pop
das
pop
leave
dec
popa
iret
stos
pop
jmp
addl
in
sub
std
stos
mov
test
clc
cld
cli
cmp
ret
mov
stos
cmp
idivb
add
fs
pop
shll
pop
xor
pop
or
or
ja
sbb
lahf
icebp
jo
pop
inc
test
pop
roll
lahf
xchg
inc
xchg
cmpsb
popf
sub
cmp
xchg
sahf
add
jno
cmp
insb
jmp
and
mov
xor
lods
leave
repz
or
insl
push
and
adc
sbbl
js
lcall
fidivrs
xchg
ss
fdivs
nop
call
mov
push
dec
pop
shlb
lods
rolb
lret
xorb
lods
cmp
in
dec
or
pop
xchg
test
and
out
test
adcl
cmpsb
jnp
sbb
aaa
in
out
mov
xsave
add
jl
mov
xor
std
mov
lods
cmp
xlat
xlat
sbb
or
flds
pop
xchg
fs
jle
out
dec
jo
enter
adc
icebp
incb
rcrl
repz
mov
ret
ss
fisubrl
sbb
decl
fcmove
xchg
aad
in
addr16
dec
cmp
pop
xchg
aas
dec
add
in
cld
pop
shll
jbe
add
push
and
mov
adc
inc
movsl
int3
mov
lock
or
cmc
push
int3
ret
sbb
test
xchg
push
ret
jno
pop
shrl
dec
popf
insl
sub
iret
js
adc
bound
or
lahf
cmp
lcall
loopne
lcall
mov
adc
mov
gs
popf
push
pop
loope
jbe
xchg
pop
xchg
jl
jbe
jl
xchg
mov
out
jecxz
sbb
adc
sub
push
cmp
test
cld
out
fimuls
push
scas
mov
mov
daa
xor
dec
scas
int
add
push
es
push
xlat
add
scas
inc
adc
pop
add
adcb
mov
add
mov
int3
scas
xchg
roll
sub
mov
mov
jb
scas
sbb
iret
out
push
daa
int
fdiv
addr16
lds
pop
lods
outsb
cmp
push
lret
inc
movb
sbb
aaa
inc
push
cwtl
cld
cmc
adc
jo
cld
test
sub
push
aas
xchg
cmp
jge
sub
push
int3
pop
imul
push
stc
xchg
mov
xchg
mov
push
call
bound
pop
add
inc
loope
es
and
insl
mov
pop
mov
fsubrl
cmp
inc
cmp
sub
mov
inc
pop
leave
jmp
push
stc
ljmp
jg
and
jne
pop
fdivl
lret
dec
shl
aam
aam
push
jmp
jnp
and
loope
icebp
push
aaa
adc
jno
or
lods
incb
pusha
pop
cs
mov
mov
add
scas
jb
inc
lcall
and
push
sub
inc
jmp
xchg
add
dec
push
movsb
xchg
sub
and
inc
or
cs
cmp
pushf
push
mov
pop
xor
enter
jle
icebp
rcll
dec
ljmp
adc
mov
add
push
aad
xchg
ja
and
sbb
jmp
push
mov
adc
push
xchg
in
test
daa
mov
or
imul
fucomi
adc
sbb
fildll
sub
xor
and
or
jb
fistps
xor
arpl
test
test
stos
and
bnd
pop
push
sbb
mov
ret
jge
jns
push
out
pop
push
cld
add
pop
lret
pop
adc
inc
push
mov
ja
push
test
test
add
adc
xor
jb
andb
inc
iret
sti
jg
sti
insb
cltd
jmp
inc
adc
xchg
pop
xchg
xlat
fwait
inc
xchg
fists
inc
fcmovnbe
pop
lret
mov
aam
fdivl
test
incl
adc
and
mov
push
loop
lret
rolb
lods
mov
adc
mov
push
push
pusha
cmc
xor
mov
xchg
cmp
dec
fisubrs
adc
cs
xchg
push
repnz
lret
fidivrs
or
push
test
sub
mov
aam
mov
mov
roll
inc
rclb
push
das
in
push
iret
lock
add
jle
push
std
scas
pop
fildll
inc
fists
lret
adc
out
cmc
rorl
pop
mov
ljmp
test
fsubrs
mov
fisttpl
dec
sub
std
jmp
adc
out
mov
scas
lds
xor
sbb
xchg
ljmp
imul
xlat
ret
fwait
sti
lahf
dec
dec
test
pop
outsl
xchg
gs
inc
mov
pop
subb
es
inc
outsl
sbb
adc
pop
in
stos
and
loope
mov
mov
outsl
xchg
mov
xchg
mov
aaa
xchg
dec
xor
cmpsb
mov
push
sbb
ficoml
loope
fcomp
inc
stos
adc
test
sbb
inc
nop
test
adc
push
mov
std
test
lds
and
lret
js
inc
xorb
popa
mov
arpl
loope
or
xor
lds
cmpsb
sti
and
movsl
inc
push
call
jmp
loop
jnp
inc
ljmp
mov
shrb
mov
sahf
add
ret
out
fcomps
les
into
xor
ss
sahf
mov
mov
push
mov
gs
or
mov
fidivl
ja
jge
dec
pop
sub
ja
pop
mov
mov
dec
sub
outsb
push
or
inc
sub
mov
sub
or
pop
mov
arpl
fs
pusha
sbb
cmpsb
jmp
push
mov
add
jo
loop
ret
xchg
insb
repz
jmp
jno
sbb
inc
lods
jnp,pn
mov
pop
push
mov
mov
xor
jbe
mov
sbbb
clc
dec
mov
aam
dec
push
mov
fstpl
mov
xchg
mov
movsb
dec
fimuls
xchg
stos
cmp
or
xchg
mov
mov
push
jns
and
xor
adc
cmp
mov
jno
stc
mov
lcall
jne
mov
or
in
mov
mov
pop
in
subl
mov
fstl
mov
push
mov
es
push
cltd
shll
add
dec
cmp
adc
out
adc
fistpll
push
jge
shlb
out
bts
jae
mov
in
mov
mov
stc
xor
push
adc
xchg
int3
lcall
adc
adc
fistpll
inc
inc
dec
je
ja
sub
xchg
and
aas
xchg
sub
ret
mov
int3
aad
xor
aad
out
loop
mov
mov
mov
xor
and
popa
aam
mov
jb
xchg
loopne
and
lock
fisttpll
stos
cmp
cli
pop
addl
push
mov
scas
mov
dec
testb
xchg
cmp
xor
sbb
shrl
stc
fcmovne
push
mov
gs
cltd
inc
fwait
sub
mov
xor
pop
adc
sbb
cmp
ss
roll
outsb
dec
repz
fmulp
pop
xchg
inc
cmpl
in
lds
movl
insb
pushl
iret
in
out
mov
add
pop
and
push
imul
aam
cld
ret
imul
sbb
lods
push
xor
adc
sahf
dec
ficomps
scas
mov
inc
mov
mov
jp
sub
and
xchg
sub
add
in
daa
imul
jb
in
lods
push
sbb
dec
aam
out
ss
push
lods
lret
mov
and
and
ss
push
addr16
movsb
hlt
ja
icebp
mov
pop
sbb
fcompl
sar
test
and
pop
inc
cwtl
add
mov
push
fdivl
std
pop
pop
test
add
or
lock
sbb
and
aam
xchg
mov
pop
sbb
and
inc
aad
psubusw
icebp
dec
dec
ds
xor
sub
out
jo
sub
andb
push
mulb
push
push
je
sbb
pusha
daa
sub
cmc
dec
pushf
inc
jmp
and
jno
dec
stc
jnp
je
je
mov
sub
mov
iret
icebp
push
call
cltd
xchg
repz
and
jl
and
out
sbb
xchg
and
inc
mov
jge
push
push
ss
insl
adc
mov
xor
inc
inc
jns
lods
fsubrl
aam
pop
pusha
test
pop
pusha
mov
add
mov
imul
or
movsb
push
ja
jg
push
test
push
shl
jne
sub
jbe
cmp
in
into
mov
sarl
in
in
lods
fisttps
and
test
testl
outsl
jg
aas
push
jmp
sub
jnp
and
inc
pop
ret
inc
outsl
xor
out
je
jb
mov
cmp
sahf
xchg
imul
negb
dec
sbbb
pop
sahf
jg
movsl
clc
mov
cmp
stos
fbld
lock
jae
sti
xor
inc
cmc
jg
add
test
fbstp
add
in
sub
and
jecxz
bound
xchg
cmpsb
xchg
lfs
les
test
mov
int
mov
mov
int
test
mov
sub
fimuls
aam
je
fbstp
insb
xchg
ja
sub
jp
push
jl
into
push
and
sbb
rcrb
mov
cmp
fdivs
adc
jp
nop
pop
xchg
in
bound
mov
ficoml
rcl
xor
das
cltd
sub
pop
and
sub
jge
dec
cltd
adc
jmp
lds
fldt
inc
xor
or
decl
frstor
out
push
xchg
xorl
or
sbb
cmpsb
popf
or
into
lock
jae
jb
out
jge
in
push
xor
ret
mov
add
adc
in
int
mov
pop
enter
mov
popl
mov
pop
dec
add
ja
mov
adc
fadds
out
lcall
outsl
adc
or
push
daa
pop
mov
jge
inc
add
int
add
clc
iret
stos
out
shl
js
cltd
mov
lcall
dec
push
js
dec
push
gs
jo
mov
sbb
and
sub
lds
cld
mov
xor
jge
enter
or
dec
loop
lret
mov
and
outsl
adc
cltd
dec
out
xor
sbb
out
push
js
and
out
repnz
add
aaa
adc
mov
pop
cltd
sub
sbb
addb
orb
ret
out
and
cmp
ffreep
inc
ljmp
adc
push
in
push
ja
sub
lcall
jnp
sub
adc
scas
cmp
ja
cmp
cmp
pop
in
loopne
lahf
sbb
in
mov
test
cmp
loopne
mov
pop
aas
xchg
sbb
fsubrl
or
divb
add
dec
xchg
cmp
fwait
mov
sahf
xchg
repnz
out
push
mov
les
inc
mov
xchg
iret
xor
pop
ljmp
stc
addr16
addr16
xchg
mov
shrb
aad
mov
or
cmpl
les
push
lahf
push
jb
sub
sbb
add
pop
daa
push
sbb
lret
push
clc
repz
inc
and
pop
push
fbld
push
std
inc
movsl
rorl
dec
ds
sbb
add
and
dec
xor
adc
loopne
loope
lea
aas
mov
dec
mov
repnz
stos
or
ret
lds
fwait
push
mov
jp
and
sti
pop
inc
cmp
jp
sbb
sub
add
sbb
imul
xor
and
sub
adc
outsb
pop
outsl
cmpsb
fs
ret
dec
cmp
ds
dec
fwait
pop
dec
lret
repz
cmpsb
adc
xor
pop
jno
add
shll
jo,pn
sbb
mov
ja
cmc
xchg
hlt
push
xchg
fsts
push
mov
std
mov
scas
mov
leave
aam
je
pop
stos
push
xor
xor
and
jbe
pop
cmpsb
add
jg
enter
lahf
dec
shlb
pop
enter
jnp
and
aas
loope
not
sub
sub
add
repz
imul
rolb
stc
rep
sarb
jno
adc
inc
mov
add
jb
and
loop
stos
pusha
in
sbb
in
ss
cmc
pop
ret
sbbb
pushf
loop
gs
xor
cmp
mov
out
addr16
mov
sahf
cmpl
mov
loopne
fcmove
push
fbld
push
jecxz
and
insb
sar
sbb
orb
adc
in
ret
xchg
stc
pusha
dec
mov
xchg
fwait
js
xorl
shrb
andb
and
xor
or
in
stc
jl
test
mov
inc
xchg
mov
jmp
and
add
xor
inc
addr16
jecxz
stos
xchg
inc
dec
insb
xor
enter
stos
pop
std
adc
mov
int
jb
sti
mov
mov
mov
xchg
outsb
cmp
stc
and
and
shr
leave
push
sbbl
or
aaa
adc
and
mov
add
in
out
out
and
mov
rol
fistpll
mov
xchg
pushf
inc
push
mov
test
je
jecxz
add
jmp
int
mov
shlb
jp
mov
pop
mov
test
stos
jmp
jle
dec
jb
je
adc
daa
rclb
xor
jae
jle
jae
das
add
je
insl
nop
xchg
stos
cmpsb
loop
ss
rorb
arpl
jo
insl
xor
dec
push
xorl
fdivl
sti
jp
mov
push
pop
cs
jne
push
xchg
sbb
push
xchg
cmp
push
imul
lahf
jns
aaa
mov
in
xlat
dec
int
jl
lods
cs
dec
jo
lock
std
lds
push
pop
push
movsl
shr
jne
arpl
dec
adc
sbb
cmp
push
aas
fsub
pop
in
mov
mov
fs
dec
enter
sub
adc
scas
fsubrs
addr16
out
jo
inc
cltd
xlat
jnp
xchg
jo
clc
rclb
push
lcall
ss
call
loope
mov
fmuls
and
bound
pop
loope
jb
fisttps
dec
push
lods
cmp
loope
mov
mov
jnp
cli
fnclex
and
inc
lcall
jecxz
jmp
pop
sbb
pop
cmc
in
lods
pusha
fldcw
mov
pop
mov
inc
es
cwtl
std
out
mov
dec
aad
cmp
mov
mov
lds
nop
mov
xchg
mov
jnp
and
mov
test
pop
rcr
scas
or
std
lcall
int3
int3
sbb
movsl
ret
pop
push
rcl
ds
push
xchg
or
popa
push
adc
leave
xchg
test
mov
xor
into
lods
jle
jns
dec
jmp
lea
or
ffreep
in
xchg
loopne
imul
pop
mov
data16
lea
pusha
bound
js
lds
popa
mov
and
mov
lret
ljmp
stc
fbld
mov
add
leave
mov
and
push
pop
cltd
fsubrl
ljmp
xchg
jns
addr16
and
add
cltd
cmp
and
loopne
and
xor
cld
sub
inc
dec
fldenv
and
loope
nop
gs
push
std
xchg
pop
mov
pusha
cmpsb
repnz
cmp
and
inc
cmp
cmc
sub
xlat
xor
out
icebp
sahf
xchg
test
stos
fisubrs
mulps
and
inc
jle
fs
fimuls
push
and
mov
in
andb
mov
push
aad
or
mov
addr16
fstpt
addr16
sbb
cmp
xor
lahf
je
loopne
sub
lock
add
mov
fnstsw
das
sbb
inc
or
jge
fsubl
push
add
cmp
ja
xchg
jne
enter
xchg
rcrl
ret
xor
adc
add
in
test
and
mov
int
lret
sub
cmp
aad
adc
cmpsb
or
jmp
mov
pop
cmp
out
inc
mov
jnp
call
cmp
adc
push
dec
sbb
dec
adc
and
jnp
fidivs
mov
or
inc
push
sti
cmpsl
pop
pop
mov
ret
adc
addr16
mov
out
mov
push
adc
dec
mov
dec
popf
pop
iret
hlt
mov
ljmp
cmp
mov
mov
fsubl
mov
and
pushf
dec
push
icebp
cmp
fstps
jge
pop
outsb
xchg
lods
xchg
iret
pop
mov
mov
imul
or
xchg
mov
shl
mov
push
adc
xor
xor
ret
dec
pop
cmc
fwait
outsl
test
add
inc
push
cs
das
add
loop
in
xchg
insb
pop
cmp
mov
std
mov
jbe
sbb
aaa
push
adc
fmulp
addb
mov
in
or
fcompl
mov
hlt
stc
mov
ja
sub
mov
and
inc
mov
je
mov
pop
mov
popa
jae
cmpsl
ret
cmp
or
or
xor
jl
mov
jl
pop
push
fcomps
cmovbe
fisttpl
xchg
inc
or
push
cmp
mov
out
inc
fcompl
mov
xor
fistps
or
pop
arpl
ds
mov
test
es
lea
test
mov
xchg
ret
sbb
mov
lcall
mov
mov
sub
icebp
jmp
dec
test
out
xchg
dec
out
mov
mov
scas
rolb
das
in
lcall
lods
addr16
leave
and
or
daa
jae
loop
test
inc
scas
or
push
inc
xor
clc
adc
sbb
jae
cli
sahf
mov
out
xchg
bound
cwtl
cmp
mov
sbb
push
fs
mov
inc
in
mov
call
cmp
and
xor
lods
and
shlb
and
fildl
inc
daa
and
inc
int
add
icebp
mov
pop
sub
xchg
sub
outsl
dec
inc
and
mov
jmp
mov
add
jg
out
leave
lcall
cmpsl
xchg
inc
aaa
jmp
pop
ss
pop
mov
enter
cmp
shr
mov
in
icebp
icebp
xchg
or
add
lods
loope
jo
cli
cltd
mov
popf
push
arpl
rorl
jl
pop
xor
out
xchg
xor
jl
dec
test
stos
dec
out
pop
lods
and
jmp
mov
or
sbb
sub
and
or
xlat
jno
mov
push
xchg
xlat
lret
stos
cmp
shll
add
pushf
jg
mov
mov
sahf
add
dec
cmp
outsb
lret
ret
enter
lods
and
adc
mul
jg
retw
das
cmpl
call
rorb
sbb
jp
sub
mov
std
mov
enter
lret
jmp
loopne
rcrb
idivb
subb
jnp
lret
jo
or
or
cs
dec
mov
sbb
jb
and
or
in
call
jno
xor
fwait
jecxz
cmp
lret
je
mov
aad
out
mov
int3
adc
cmpsl
stc
fs
lods
xchg
xor
insl
and
and
test
dec
mulb
fildl
jg
and
ret
jl
fsub
nop
test
test
mov
xchg
push
out
add
adc
mov
sub
int3
jo
push
jns
pusha
mov
jbe
inc
xor
xor
lret
cmp
int
xchg
xorb
scas
and
outsb
and
pop
jge
jno
inc
push
add
dec
xchg
cs
int
adc
xor
cs
cmp
jbe
mov
lock
mov
pop
inc
dec
outsb
fdivl
bound
fcmovne
lahf
test
jmp
pop
cwtl
push
jge,pn
imul
mov
cmpb
out
arpl
sti
scas
sahf
movb
dec
ret
xor
ja
mov
dec
jg
xor
cmp
mov
call
fstps
add
cmp
cli
test
loopne
sti
sbb
in
adc
push
out
rcrl
add
fidivl
lods
push
push
pop
or
imul
aas
push
andl
jl
arpl
dec
push
inc
cmp
cmp
inc
add
orb
movl
jno
in
fsubrs
mov
sbb
sbb
push
jb
mov
dec
nop
dec
scas
push
and
cltd
stos
ja
mov
ja
cmp
lds
sub
inc
or
clc
out
in
cmpsl
hlt
aad
addr16
push
mov
inc
mov
ja
adc
cmp
xlat
dec
mov
test
fwait
jg
mov
pop
add
pop
jae
add
inc
add
sub
jmp
dec
mov
push
bound
inc
push
inc
pop
leave
outsl
test
mov
test
cmc
in
cmc
jbe
loope
popa
xor
rcrb
push
sbb
sbb
pop
data16
stc
xor
mov
add
movsl
xor
lock
icebp
push
cmp
push
icebp
xchg
or
hlt
call
jg
mov
fsubrl
popf
jecxz
nop
aaa
jae
xor
pop
adc
pop
xorl
movsl
mov
push
cmp
mov
das
or
dec
and
adc
pusha
sti
cmp
sbb
adc
lock
or
mov
in
pop
mov
iret
ss
loop
insl
shl
cwtl
push
sbb
js,pt
gs
comiss
mov
jge
xchg
xlat
xchg
xchg
xlat
stos
xchg
mov
cmpsb
pop
mov
fiadds
add
notl
pop
pop
call
add
dec
neg
outsl
mov
push
mov
mov
ja
filds
jno
jns
or
rcl
shll
sub
xchg
or
int
lret
das
sub
ds
or
shll
imul
jbe
cmpsl
test
dec
add
les
pop
rcl
rcrl
xchg
add
dec
pop
in
rorb
sarb
filds
cmpsb
les
cmp
jmp
mov
add
dec
and
sub
fwait
pop
dec
mov
push
dec
mov
xchg
ljmp
mov
adc
inc
shlb
mov
mulb
fsubrs
es
push
add
xchg
jb
pusha
je
adcb
dec
push
or
mov
mov
arpl
cmp
arpl
dec
or
pushf
xchg
or
int
adc
outsl
ja
sarl
orl
jae
nop
stc
test
out
rorl
xchg
dec
cmp
mov
mov
push
cmp
dec
xchg
mov
and
mul
popf
mov
jmp
out
jno
pop
xchg
cmpsb
inc
xor
nop
addb
cmp
push
pop
xor
mov
imull
ret
test
pop
les
xchg
add
das
push
imul
lods
add
pop
je
in
mov
jmp
xor
mov
push
sbb
gs
xchg
ljmp
lret
inc
fistl
dec
mov
mov
mov
lods
repnz
xchg
arpl
jnp
push
push
push
je
jmp
xchg
pop
xchg
mov
mov
call
popf
movsl
add
sbbb
mov
iret
out
add
dec
adc
cmp
xchg
jne
daa
out
divl
push
fs
xchg
js
fdivrl
xchg
sub
jmp
cs
mov
rol
cmc
test
sarl
outsb
and
ficoms
cmp
out
rcll
scas
andb
dec
ljmp
fwait
ss
xchg
and
pop
test
inc
jecxz
sub
xchg
dec
mulb
dec
mov
and
pop
dec
adc
pop
push
insl
int
adc
or
aaa
adc
add
je
dec
mov
cld
bound
sub
repz
pushf
inc
inc
cwtl
jmp
mov
cmpsb
xchg
cmp
push
xor
and
mov
xor
lods
xchg
scas
add
rolb
test
and
insb
inc
sbb
sub
fbstp
in
and
leave
jmp
lods
xor
bound
lock
push
imul
das
in
jnp
push
push
je
call
test
nop
push
adc
hlt
and
mov
push
push
adc
and
fldlg2
frstor
push
dec
pop
nop
jecxz
pop
repz
mov
sbb
lods
mov
push
ljmp
xor
repnz
add
shlb
cmc
xor
in
mov
jg
std
sti
test
in
inc
in
xchg
mov
leave
ss
fwait
jmp
adc
cmp
xchg
add
push
mov
push
clc
lods
shll
sub
xchg
xchg
push
adc
xchg
cmp
insl
or
aad
sbb
xor
fisttpl
sbb
mov
mov
out
inc
jmp
inc
sub
sti
push
std
xchg
and
negl
add
call
add
out
ljmp
and
and
sub
or
xor
push
dec
pop
jl
fimull
pop
xchg
add
pop
scas
int
cltd
divb
enter
mov
mov
in
ret
push
pop
arpl
fnsave
popl
cmp
jmp
popa
jno
cwtl
nop
push
rorb
lods
sbb
fisttpll
jno
ja
test
mov
mov
test
inc
popa
lods
cs
addb
sub
repnz
sbb
sbb
fwait
repnz
jno
sub
in
rorb
mov
call
jae
dec
loope
not
jb
idivl
sub
shlb
lock
lds
scas
testb
mov
aas
jnp
push
sbb
sbb
pop
sbb
inc
or
aaa
cmp
sahf
mov
jl
jno
shll
cmp
sbb
lea
sbb
roll
push
lret
popa
daa
or
daa
test
push
roll
orb
lods
ljmp
aad
pop
mov
cmp
jb
mov
push
push
scas
sbb
cld
jae
lret
add
xor
or
loope
sbb
cmp
out
aas
scas
dec
fcmovnb
sbb
add
notl
push
insb
enter
mov
sub
pop
jmp
inc
inc
add
mov
outsb
cs
out
push
cmpsl
das
mov
mov
dec
pop
in
bound
stc
andl
sub
push
mov
sub
clc
shrb
jge
sub
add
mov
dec
and
and
dec
int
mov
xchg
or
and
cmpsl
popf
lds
cwtl
movsl
je
cmp
lahf
in
push
loope
mov
cwtl
sub
arpl
out
sub
adcb
dec
or
scas
into
xchg
and
sti
cli
jl
sbb
xor
pop
push
mov
sbbb
or
jmp
mov
aas
push
sub
js
std
rcrl
aad
pop
push
scas
ffreep
pop
and
dec
sbb
sub
loope
js
push
add
mov
fidivs
test
mov
test
xchg
repnz
clc
adc
loope
outsl
orb
js
and
xor
cmpl
or
mov
sub
pop
popf
loopne
xorl
mov
int3
out
xchg
push
mov
dec
cmpsl
test
testb
lret
lock
push
mov
xchg
dec
pushf
out
pop
fwait
adc
cmpsl
cmp
jno
adc
pop
mov
mov
enter
jg
daa
out
mov
cs
cmp
mov
sbb
jg
icebp
test
cmpb
insl
pop
outsl
jae
lcall
cmp
sahf
icebp
mov
add
xlat
rcrb
cltd
loope
push
jecxz
filds
push
xor
outsb
ret
fbstp
mov
mov
xchg
js
dec
cli
sbb
push
or
xchg
push
das
out
cmp
jno
repnz
aad
pop
sbbb
hlt
cli
je
cmpsb
adc
lds
notl
movsl
mov
pop
arpl
fldcw
lcall
outsl
gs
jle
into
mov
xor
mov
inc
inc
xor
test
mov
inc
sub
or
mov
arpl
pop
lods
dec
inc
movnti
test
dec
jns
add
sub
repnz
sub
sub
fcom
or
inc
pushf
imul
test
ja
mov
jl
and
mov
fdivs
xchg
scas
insl
jg
xchg
cmp
xchg
or
or
or
sbb
aas
movsb
jecxz
stos
xor
mov
out
inc
sub
or
jbe
add
arpl
addr16
mov
pushf
aad
into
add
pop
stos
fldcw
push
inc
jmp
xchg
fcmovnbe
lods
push
cwtl
mov
repz
in
rorb
cmp
mov
fcompp
sub
daa
xchg
notb
outsb
out
data16
loopne
adc
xor
loopne
cwtl
mov
das
sbb
mov
cltd
sbb
add
mov
pop
push
push
andb
outsl
pop
test
movsb
xor
out
mov
xchg
aam
sbb
and
sbb
test
das
mull
lea
pop
mov
pop
ficompl
js
mov
push
cld
nop
das
in
xchg
loopne
mov
addb
ret
jg
mov
lods
pop
cs
clc
mov
add
aad
or
pop
test
push
jmp
dec
cmpsl
xchg
insb
pop
and
pushf
mov
cmp
andb
inc
fs
inc
pop
lods
addr16
or
loopne
pop
lods
mov
mov
mov
mov
jo
and
fmull
jb
sti
faddp
stos
jle
mov
fdivs
xor
inc
mov
gs
inc
fcoml
sub
jnp
and
dec
xchg
jmp
xchg
adc
pop
and
lret
in
mov
inc
dec
xchg
push
inc
pop
imul
aad
adc
adc
das
push
cmp
inc
cld
jle
and
or
push
inc
aas
mov
int
notb
loopne
out
push
scas
or
adc
aaa
cs
pop
dec
loope
mov
jb
cld
pop
adc
jns
mov
pushl
dec
leave
lret
add
adc
or
dec
mov
pop
jl
pop
and
cmp
cmp
shrb
jb
test
and
cmp
push
neg
mov
lock
iret
ds
arpl
popa
lret
out
push
fdivs
sub
mov
pusha
ss
cmp
cmpsb
inc
or
stc
jns
mov
loop
sbb
or
lea
jmp
lahf
cmp
rcl
xor
pop
imul
mov
mov
ficompl
or
call
push
pop
xor
call
cwtl
popf
in
into
cwtl
fidivl
xchg
sbb
jno
rol
pushl
cmp
call
jae
jns
lods
rcpps
cltd
pushf
in
mov
lahf
mov
test
push
mov
mov
xchg
adc
das
adc
fldenv
jle
and
test
push
adc
dec
ret
sahf
fistpll
xchg
movsl
xlat
xchg
mov
mov
fimull
push
movsb
cmpsl
shll
inc
inc
jo
add
push
loop
xor
sbb
scas
in
dec
nop
or
ja
dec
outsb
push
dec
int
in
lret
inc
mov
cmp
imul
sbb
enter
lods
mov
mov
inc
jp
shll
insb
mov
xlat
push
mov
mov
sbb
sbb
aad
push
outsb
jp
pop
jne
mov
movzwl
iret
fcompl
xchg
and
lcall
stos
icebp
dec
jg
incb
sbb
stos
xor
decl
repnz
xchg
jle
mov
xchg
leave
xor
pop
xchg
push
inc
jns
mov
test
pop
pop
data16
ret
push
idivl
pop
sub
inc
popa
jbe
adc
loop
adc
in
mov
jbe
icebp
push
or
inc
mov
in
out
jle
mov
lahf
adc
mov
push
mov
push
ljmp
jnp
cltd
xor
cmp
mov
xor
scas
iret
pop
add
add
sbb
dec
dec
lds
inc
or
push
mov
and
ret
and
jne
imul
or
hlt
push
cwtl
js
mov
mov
andb
adc
dec
mov
pop
icebp
mov
lods
iret
mov
fidivl
lret
insb
inc
pop
mov
stos
fiadds
sub
push
push
jae
pop
cs
lock
mov
and
lahf
push
dec
ss
or
push
sti
adc
jecxz
addr16
inc
add
in
push
inc
xor
stc
mov
decl
cwtl
sub
ja,pn
divl
lds
xor
addr16
pop
xchg
popf
jb
pop
add
sub
xchg
push
dec
into
sar
faddl
fnstsw
scas
push
lds
inc
pop
fwait
movsb
pop
in
test
fiaddl
repnz
cmc
enter
jae
sbb
mov
pop
std
into
arpl
fisubrs
pop
in
dec
jecxz
stc
sarb
xsaveopt
pop
aam
or
mov
cmovg
mov
lock
add
je
mov
cltd
or
sbb
ds
and
jbe
in
mov
shll
leave
popf
hlt
repnz
sub
sbb
sub
dec
pavgw
mov
call
dec
inc
lcall
lds
ficompl
gs
daa
cmpsb
push
out
jb
repnz
cmp
sub
and
sar
lahf
mov
test
aam
dec
data16
mov
jmp
mov
fidivrs
mov
mov
insb
cmpl
push
jge
loop
and
xchg
arpl
xchg
jp
mov
mov
xor
jg
and
out
fiaddl
push
mov
xchg
push
cld
dec
push
add
sbb
out
fisubs
pop
or
pushf
cmp
subl
cli
or
loop
addr16
stos
fimull
sub
inc
fildl
sub
sbb
popf
xor
scas
popf
js
scas
xchg
cld
mov
inc
das
out
stos
clc
lahf
mov
pop
or
out
nop
jo
fdivl
lret
fnstsw
push
fldcw
or
xor
and
dec
popa
aaa
xchg
outsl
sbb
cmp
fists
xchg
xchg
fcmove
test
js
inc
jne
repnz
repnz
sub
and
pusha
imul
nop
fs
pop
jae
cmp
in
jns
rcr
jae
imul
in
nop
mov
sahf
aas
andl
popf
jbe
ss
fldcw
lods
xor
push
cmp
ret
add
insl
scas
pusha
jge
cmp
sahf
movsl
lock
and
pop
out
mov
xchg
or
dec
test
dec
sbb
roll
fwait
inc
pop
addr16
out
out
outsb
push
inc
pop
mov
push
lea
pop
pop
or
daa
adc
cmc
fisttps
jl
jecxz
insl
icebp
dec
mov
mov
jecxz
and
sbb
mov
ret
stos
xchg
inc
scas
mov
sub
xor
mov
repnz
mov
ret
xchg
push
imul
lea
imul
xchg
decb
lock
mov
outsb
daa
iret
orl
mov
lods
cmpsl
es
xchg
adc
jns
pop
and
push
leave
stc
lock
aas
aam
outsl
push
jg
fucomi
adc
jmp
dec
lret
dec
insb
dec
jmp
xchg
cltd
loop
mov
in
jle
jl
cmpsb
aam
andb
jnp
das
popa
in
and
add
stos
addr16
mov
mov
xchg
pushf
push
out
ret
call
mov
xor
dec
je
xlat
lcall
mov
mov
mov
jmp
fstpl
xchg
mov
outsb
test
inc
adc
add
jge
scas
inc
ljmp
mov
sub
stos
cmc
cmpsb
sti
das
push
insl
call
dec
mov
lret
lea
mov
xchg
inc
add
jne
push
xchg
test
out
dec
add
and
inc
repnz
cwtl
adc
xchg
dec
inc
stos
sub
test
push
test
sub
add
repz
pusha
mov
cmp
testb
sahf
mov
je
sub
add
les
cmp
push
jae
int3
xchg
xchg
adc
icebp
pushf
out
pop
inc
inc
out
xlat
aam
and
fs
lea
inc
mov
ds
cltd
fsubs
repnz
fwait
sub
popa
add
les
nop
in
push
xchg
addb
lea
pop
jp
sub
sbb
xor
add
adc
xchg
mov
hlt
mov
pop
push
push
add
lods
mov
lea
jg
std
int3
sub
add
outsb
pop
das
or
out
test
mov
sbb
iret
mov
jae
push
sub
cmc
lods
sbbb
sub
iret
orb
inc
lods
test
mov
gs
sar
and
and
and
insl
dec
xor
jmp
call
xchg
inc
cmp
push
xchg
sub
enter
sub
std
std
cmp
cmc
pop
data16
jns
and
bound
and
scas
mov
out
cltd
add
cmp
ret
in
xchg
xchg
cmp
pop
inc
stc
fmuls
cmp
cmp
in
pop
cs
dec
fdivl
mov
adc
pop
lret
iret
pop
or
push
ds
xor
push
mov
mov
fcomps
lea
push
cmc
movsb
ficomps
jnp
xchg
leave
call
pop
sahf
pusha
sub
outsb
xor
aam
dec
vsubpd
jl
jno
cmp
imul
dec
cmpsb
scas
xor
dec
aam
dec
inc
mov
lret
sub
dec
ret
dec
mov
cmp
outsb
ror
and
or
inc
fwait
iret
ljmp
fists
cmp
in
cs
pop
sbb
cli
push
ljmp
mov
popa
push
lret
ret
rolb
mov
adc
sub
or
push
jo
cmp
dec
xlat
mov
mov
clc
cmp
pushf
repnz
ret
int
bound
pusha
les
inc
mov
and
test
mov
mov
adc
add
jne
cmpsl
repz
movsb
add
sbb
jno
dec
loopne
addr16
jno
je
subl
aas
arpl
xchg
mov
in
negb
dec
xchg
popf
sub
cmc
movsl
or
scas
sarl
cwtl
inc
sbb
mov
icebp
or
xlat
lods
sti
pop
ret
js
fldt
jae
pop
lea
fstps
stc
jmp
cmc
xchg
les
xlat
mov
jge
adc
dec
mov
mov
mov
and
xchg
sahf
mov
jno
or
add
push
call
sub
pop
js
add
mov
insl
or
aam
mov
jnp
mull
scas
js
in
mov
lods
repnz
std
xor
out
aam
imul
cltd
ljmp
or
sahf
mov
sub
xor
orl
dec
pop
js
fidivs
sbb
xor
lret
scas
jle
mov
pop
sub
jbe
jmp
repz
inc
inc
aam
mov
lahf
mov
xor
mov
pop
mov
mov
mov
lcall
mov
fwait
or
sahf
sbb
push
push
xor
push
insl
insb
cwtl
in
jne
and
jl
mov
out
add
popf
sbb
jne
insb
push
pop
and
out
push
pop
mov
push
dec
cmpsb
xchg
push
xchg
insb
sbb
outsl
out
mov
icebp
scas
xchg
jmp
push
cmp
loope
mov
rorl
sub
sahf
hlt
pop
xlat
in
push
daa
loopne
mov
and
push
dec
jl
out
jnp
test
mov
add
pop
aad
mov
push
bound
ja
jg
jp
rcr
mov
push
mov
jno
mov
popf
or
ror
decb
push
mov
shl
lea
pop
ljmp
fld
xchg
cmpb
sbb
test
xor
sub
aam
aad
jb
imul
repz
rorb
lods
loop
movsb
mov
divl
shrl
sbb
aad
add
dec
dec
mov
cmp
fnstsw
pop
pushf
in
sub
fsubs
cmpsb
out
lea
fdiv
das
push
int3
push
ja
fstpt
repz
or
add
out
adcl
add
adc
fidivs
xor
fwait
xchg
iret
dec
add
ret
in
dec
es
cli
lahf
pop
sbb
aas
mov
stos
and
xchg
mov
sbb
sub
scas
decb
mov
jp
out
xor
inc
js
xchg
div
fidivl
xchg
fs
pop
lods
sub
mov
lods
jno
bound
lds
mov
or
ror
movsl
shrb
cld
ret
test
push
test
mov
cli
lds
mov
cmpsl
int3
lods
rol
nop
ljmp
or
jnp
fadds
or
mov
pop
dec
push
mov
fidivl
ss
push
dec
lret
movsl
shrb
movsl
ljmp
adc
sbb
or
imul
int3
and
inc
adc
inc
into
ss
movsb
mov
pop
lock
lods
xchg
jns
shll
jg
or
mov
pop
jne
arpl
out
and
xor
jle
fisubs
adc
pop
dec
aaa
js
fwait
or
mov
insb
popf
iret
pop
push
fisubrl
mov
ret
pop
je
cmp
insl
scas
sbb
dec
xchg
adc
pop
lar
cmp
sub
icebp
inc
or
mov
in
sbbl
mov
xor
loop
stos
jg
aas
pop
jnp
mov
xor
insl
adc
mov
xchg
and
mov
call
dec
lahf
iret
aaa
test
or
xor
adc
js
ljmp
mov
insl
add
xlat
cmp
mov
pop
or
dec
inc
lods
es
gs
arpl
jb
popa
out
xor
jne
jmp
idiv
mov
lret
std
data16
inc
iret
pop
push
stos
mov
push
inc
push
cmp
mov
push
incb
pop
and
pop
add
xchg
xchg
in
sbb
and
clc
fdiv
push
xor
hlt
inc
or
sub
ja
dec
and
mov
mov
iret
inc
inc
stc
mov
sub
fidivrs
shr
add
out
jmp
les
push
pop
xor
aas
test
push
mov
dec
sub
fsub
add
xchg
cmp
mov
mov
popf
aas
push
loope
or
cmp
dec
mov
loop
scas
push
sub
push
pop
push
pop
orl
mov
repnz
fcmovbe
xor
add
inc
dec
sbb
clc
sbb
and
popl
cmc
mov
sub
and
fildl
out
out
test
pop
mov
jmp
jne
cwtl
inc
push
xlat
ljmp
fwait
sub
test
imulb
in
jecxz
dec
cmp
sub
push
push
lods
cmc
or
das
ffreep
clc
push
push
test
pop
jnp
cmpl
in
outsb
xchg
movsl
add
lock
rcrl
aad
mov
nop
mov
popa
bound
cmp
and
cltd
or
mov
fnstsw
addr16
sub
adc
jb
adc
push
push
ret
stc
xchg
adc
sub
mov
xchg
cwtl
adc
push
mov
mov
xchg
jmp
or
sbb
fs
or
lods
push
addr16
xchg
adc
ja
dec
mov
push
inc
fsts
bound
sub
clc
mov
inc
ror
into
clc
int3
and
lcall
clc
adc
push
leave
daa
pop
fmulp
outsb
std
adc
and
push
push
jecxz
cmp
ret
or
or
jno
fcomi
inc
rcrb
seta
hlt
cltd
enter
enter
pop
test
sub
xchg
pop
lea
pmaxsw
xor
mov
sti
stos
int
cmp
scas
gs
rcrb
daa
imul
insl
gs
sti
dec
in
push
stos
mov
mov
inc
ret
cli
mov
xor
subb
mov
jno
jmp
jg
int3
les
enter
jo
dec
xlat
push
js
push
push
cmp
rcrb
insb
dec
bound
and
sub
pop
sub
lods
repnz
mov
cmpsb
daa
adc
push
pop
repnz
data16
and
mov
adc
fwait
mov
bound
enter
imul
mov
leave
lahf
std
arpl
fmul
or
adcl
out
aam
or
mov
inc
loopne
add
inc
mov
ds
pop
adc
lods
test
jp
and
pop
ret
inc
gs
cmpl
bound
clc
mov
or
fstl
pop
int
push
xchg
cltd
mov
pop
out
or
scas
xor
mov
mov
adc
ja
pushf
sbb
bsr
scas
aad
mov
and
mov
xor
addb
sub
test
jne
mov
jno
flds
inc
sbb
pcmpgtd
aam
xor
pushf
pusha
sub
pop
push
sbb
dec
sub
and
xchg
pop
or
shl
mov
lds
jl
mov
imul
sbb
push
fmulp
and
mov
fldl
lret
xor
mov
mov
and
and
dec
jmp
scas
mov
sub
dec
jo
sbb
in
push
mov
andl
xorl
or
mov
cmpsl
adc
inc
pop
cmpsb
imul
mov
dec
repnz
jl
mov
fmull
in
lock
ljmp
mov
cmpsb
cmpsb
je
lods
xor
sarb
lods
push
sahf
adc
rcrb
aas
dec
and
mov
les
ja
cmpb
cmp
aaa
mov
push
sbb
ds
push
pusha
pusha
or
mov
fcmovne
dec
clc
adc
pop
pop
add
jno
in
cmc
out
insl
jp
xor
xlat
mov
xchg
negb
ret
repnz
dec
push
fsubrl
je
dec
jl
cmp
lret
roll
or
lods
mov
xor
std
mov
push
and
cmp
mov
mov
xchg
jl
mov
mov
inc
pop
out
cwtl
test
xchg
push
and
scas
out
or
sub
pop
lahf
xor
in
inc
inc
mov
in
cmpsl
pop
sti
mov
test
stc
fwait
dec
movsb
outsl
pop
xorl
ret
adc
rolb
mov
mov
lock
mov
sti
or
sahf
cltd
xchg
stos
pop
sbb
dec
mov
imul
push
add
rolb
dec
lds
outsl
adc
xchg
insb
or
mov
pop
movsb
lcall
aam
push
sbb
movsb
pushf
mov
push
mov
mov
jecxz
jae
insl
mov
mov
insb
push
leave
lret
leave
adc
aad
xor
lea
leave
sbb
push
inc
jne
and
daa
loopne
push
cmp
push
imul
or
pop
xor
dec
inc
cmp
dec
jo
inc
int3
into
nop
add
sub
cmp
jae
popf
xchg
ss
movsb
call
xor
pusha
push
aam
sub
add
popa
into
jbe
or
mull
add
xor
xchg
cmp
roll
sub
dec
test
pop
xchg
rep
adc
jo
add
jmp
rolb
mov
mulb
sub
scas
mov
push
push
xchg
pushf
clc
fsubp
inc
out
adc
jmp
mov
jle
jg
fadd
push
mov
mov
test
dec
int
dec
pop
push
dec
xor
jp
cmpsb
sbbl
les
cmp
pop
mov
jbe
in
sbb
lds
out
mov
cmpl
fmuls
clc
mov
sub
or
test
pop
push
inc
es
push
movsl
or
add
mov
xor
in
or
lods
iret
cmp
mov
add
aad
cmpsb
test
stos
sarl
cwtl
sbb
incl
jno
pushw
push
xchg
in
jb
sub
xor
sbb
mov
lods
jge
inc
in
outsb
sbb
enter
sub
cmpsb
fnsave
iret
test
ljmp
jp
ja
dec
xor
or
out
mov
dec
jmp
leave
mov
adc
push
outsb
adc
movsl
mov
pop
sbb
clc
cmp
mov
fcmovne
mov
in
icebp
mov
sub
push
loopne
cwtl
loop
enter
dec
adc
mov
mov
sub
sti
xchg
jb
cmp
cld
push
sbb
dec
rcrb
pop
jle
gs
mov
cld
loopne
add
shlb
shlb
testb
sbb
pop
outsb
push
or
adc
test
movnti
jecxz
cwtl
push
ret
adc
dec
stos
subl
mov
xchg
jl
test
and
mov
xor
lahf
mov
cmp
cmpsb
lea
pop
shrb
insl
fwait
pop
lods
outsl
inc
and
lea
shr
into
pop
and
dec
popa
shrb
pop
xor
dec
out
cmpsb
sub
jecxz
mov
xlat
pop
mov
std
nop
fidivs
xor
sbb
into
jnp
xchg
push
xchg
adc
movsb
inc
sbb
loope
cmp
sar
push
xchg
in
mov
push
ja
or
ret
fisttps
dec
fildll
push
adc
loopne
scas
in
pop
out
adc
or
mov
pop
sbb
fidivl
push
jae
mov
pushl
mov
mov
or
jecxz
xlat
cmp
cmp
pop
pop
push
dec
inc
fsubs
maskmovq
notl
fists
loope
cld
jb
push
imul
xor
adc
rcr
jg
mov
int
add
sub
into
push
ss
pop
adc
dec
sub
sti
jno
adc
pop
sub
rcrl
bound
out
xchg
ljmp
dec
data16
and
inc
mov
adc
fcmovbe
dec
cmp
mov
and
movsb
mov
add
push
sub
mov
enter
push
test
xchg
xlat
mov
sbb
hlt
jo
and
mov
fidivrl
push
sbb
fldl
xor
mov
and
adc
cmp
sub
insb
mov
ss
mov
adc
fistpll
cltd
rcrl
xor
aaa
add
lret
xchg
sti
or
add
cmp
pop
fiadds
sbb
lcall
cmpl
js
pop
nop
pushf
shrl
pushf
mov
ljmp
arpl
mov
adcl
les
push
lcall
mov
cli
mov
sbb
popa
scas
fwait
in
jl
push
jbe
fldenv
out
inc
shlb
cli
mov
cmp
ljmp
ds
and
add
jno
cmp
xchg
bnd
mov
pushf
and
or
mov
xlat
in
aas
xchg
cli
or
mov
xchg
xchg
lcall
dec
lods
jge
push
dec
adc
sub
aas
enter
sahf
mov
jno,pn
fcomi
leave
stc
nop
ds
test
add
xor
testb
imul
dec
mov
sub
cld
xor
sub
pop
sbb
inc
mov
adc
orl
and
sbb
insb
xchg
jbe
and
adc
cmpsl
xlat
mov
jo
add
rcl
jb
daa
mov
dec
rcrb
ljmp
lods
push
int
ret
fisubs
cmp
mov
pop
cwtl
push
ret
pop
add
addr16
add
inc
sub
sbb
cmp
xchg
sbb
sarb
mov
enter
pop
pop
push
and
stc
fdivs
push
dec
cld
push
cmpsb
mov
inc
dec
int3
scas
outsb
pop
lcall
mov
adc
ds
shrb
adc
lock
mov
jno
and
adc
out
inc
sbb
aad
xchg
sub
or
jecxz
mov
pop
cltd
sub
sub
xor
push
add
sub
hlt
fildl
sbb
xchg
sub
loopne
jp
or
and
clc
dec
cmp
iret
jmp
push
pop
fadds
out
mov
xchg
mov
xor
add
fwait
sti
cmp
jb
aam
outsl
sub
cltd
or
addr16
popf
lret
incb
xchg
adc
mov
cmpsl
aas
mov
imul
add
inc
mov
out
mov
mov
daa
jae
push
inc
or
mov
pushf
addr16
stos
lods
mov
fistpll
add
nop
out
push
add
clc
sbb
testb
mov
sbb
jb
icebp
negb
sbb
js
dec
decb
in
jbe
cwtl
stos
mov
or
and
popf
mov
call
xchg
push
and
add
push
fbstp
inc
push
test
fs
push
or
fsubrl
mov
pop
xchg
cmp
xor
icebp
add
sub
scas
rcrl
mov
xor
cs
add
jmp
mov
seto
mov
insl
xchg
pop
add
xor
call
lods
dec
pop
iret
xor
pop
pop
outsl
add
int3
popa
xor
jbe
and
jecxz
xor
mov
xchg
arpl
dec
in
jmp
jb
mov
stc
outsb
xor
negl
sub
pushf
jbe
mov
push
cwtl
adcl
test
or
sub
scas
mov
mov
cmp
pop
dec
in
cli
cmp
pushf
sbb
xchg
xor
fidivrs
aas
sbb
cmp
pop
fs
lods
jne
cmpl
inc
or
lock
inc
inc
sub
adc
inc
outsl
mov
mov
shl
mov
xchg
mov
ret
mov
sbb
push
or
adc
push
adc
xchg
and
jge
mov
lahf
mov
jns
cmp
mov
and
cmp
xchg
pop
andb
cmpsl
dec
xor
loopne
icebp
in
in
inc
xchg
sub
aas
xchg
xor
test
adc
inc
cmpl
int3
scas
sahf
mov
lret
or
mov
outsb
std
loope
dec
or
int
int
mov
insb
inc
sbb
push
scas
dec
cltd
mov
lret
lds
fdivr
movsl
es
aas
repz
push
inc
into
call
stos
rcl
xchg
ficoml
jl
aaa
sbb
cmp
clc
movb
dec
adc
xchg
sub
in
outsb
or
push
or
fs
cmp
aad
leave
jl
fstl
dec
into
add
adc
push
out
daa
xchg
dec
lock
mov
iret
jmp
dec
es
pop
ret
pop
adc
mov
je
scas
and
mov
out
and
mov
and
lea
add
out
pop
repnz
xchg
jo
pop
enter
dec
jg
dec
shll
or
repnz
cmp
inc
push
mov
cld
ret
lahf
sbb
out
cmp
mov
cmp
add
dec
cmp
inc
and
lods
mov
divb
ja
in
lret
push
push
adc
xchg
mov
imul
xchg
dec
mov
pop
adc
cmp
pop
dec
insb
mov
ja
mov
and
inc
or
xor
inc
sbb
mov
xor
push
adc
pop
adcl
notb
rcr
xor
lahf
stos
loopne
mov
or
push
push
adc
rcll
aaa
and
inc
push
inc
lret
ret
popf
jmp
push
data16
jl
hlt
insb
or
pusha
jae
push
roll
sub
jnp
inc
inc
dec
xor
and
test
ljmp
pushf
dec
addr16
mov
push
int
insb
push
cmp
xchg
out
sti
adc
lcall
insl
inc
shll
imul
push
mov
and
imul
imul
xlat
and
sub
inc
jl
mov
loop
stos
lret
cmp
jae
popa
lea
fdivrs
mov
rcr
cmpsl
push
pop
ss
imul
adc
test
hlt
cmp
je
rcl
outsl
add
sbb
nop
arpl
fadd
sbb
es
das
jmp
imul
push
outsl
or
mov
mov
fwait
adc
fisubrl
movsb
or
mov
push
cwtl
stos
aam
jno
popf
and
in
adcl
ret
xchg
shr
fdivr
xlat
cmp
push
inc
pop
pusha
inc
add
loop
fdiv
jno
nop
ffreep
inc
pop
lret
xor
inc
or
pop
and
or
inc
dec
stos
cltd
mov
outsb
sub
adc
jp
decb
pop
fistps
dec
je
jne
out
outsb
aad
call
push
popa
into
mov
xchg
cmp
inc
mov
aas
out
inc
pop
jecxz
add
adc
cld
movsb
in
in
jg
fadds
push
mov
mov
test
xchg
punpckhwd
lahf
gs
cmc
or
pop
lahf
xchg
adc
int
and
ret
push
adc
xchg
imul
xor
test
push
and
adc
addr16
sbb
into
out
cmpsb
inc
leave
add
popa
mov
inc
rclb
and
subb
sub
xchg
das
sbb
fsub
shl
mov
jbe
mov
rcll
push
out
repz
popf
loopne
fisubrs
insl
adc
and
sbb
cmp
xchg
sar
adc
pop
mov
jo
mov
xchg
testb
clc
fsubl
test
outsl
push
dec
mov
les
lret
mov
pop
rcl
jecxz
outsb
sub
arpl
or
nop
sbb
repz
outsl
fbld
add
sub
jne
ljmp
adc
es
fldcw
sbb
imul
xor
cwtl
sub
mov
fstpt
pop
cmp
adc
push
fwait
dec
push
insb
pop
aam
push
add
adc
or
aad
dec
ljmp
mov
and
imul
sahf
bound
cwtl
xor
fsub
mov
imul
mov
test
push
fists
es
pop
insb
shll
jmp
mov
pop
in
mov
outsb
subl
push
insl
fnstsw
dec
and
sbb
sub
imul
stos
aam
repz
adc
sarb
mov
hlt
nop
sub
mov
adc
xor
out
dec
jno
lock
jecxz
fildl
fadds
pop
sbb
or
scas
movsl
mov
shrl
mov
daa
cmc
negb
cmp
push
jns
xor
mov
fnsave
mov
mov
push
int3
loop
inc
pop
pushl
mov
add
jge
jne
fcoms
mov
pushf
cld
xchg
into
or
daa
mov
pop
mov
push
outsl
insb
cmp
inc
add
lock
inc
in
fiaddl
ds
or
inc
mov
push
and
das
int
repz
pop
int
pop
push
or
sub
dec
add
adc
sahf
or
fs
pop
pop
dec
js
fisttpll
jge
xor
enter
sbb
out
aas
test
sar
icebp
xchg
sub
push
movsb
test
add
xor
loop
push
fsubs
mov
out
fbld
icebp
adc
lret
popa
pop
push
je
cmpsb
cmp
add
dec
test
mov
outsb
imul
push
movsb
and
xchg
loopne
mov
xor
jge
cs
insl
out
jno
mov
mov
fadd
xchg
sub
lods
sub
lahf
mov
lds
sub
out
jmp
mov
ret
sti
test
jmp
push
push
lcall
das
mov
iret
lea
jo
stc
lods
mov
jecxz
loope
sub
iret
sub
pushf
int3
sub
filds
push
jecxz
pop
or
stos
icebp
xchg
ljmp
iret
daa
sub
aam
decl
popf
pop
cs
shll
gs
add
xchg
fists
out
adc
movsb
cwtl
jne
sbb
xchg
cmp
ss
add
inc
cmpsb
push
or
and
inc
inc
or
fnsave
jge
nop
into
sub
jns
push
mov
leave
mov
sub
xor
jge
das
cmp
adc
scas
adc
cli
adc
pushf
mov
dec
fistps
push
mov
jnp
loope
int3
cld
push
and
mov
nop
dec
mov
repnz
jecxz
push
inc
int
xchg
mov
sub
push
pop
mov
xor
pop
insb
inc
repnz
sub
adc
lret
or
movsl
fs
std
insb
in
int3
loopne
mov
stos
add
cld
jae
sbbl
and
push
pusha
add
je
or
outsl
ljmp
mov
lret
fistl
mov
dec
shlb
sub
das
and
adc
and
aam
fcomps
gs
outsb
mov
mov
ret
lret
rcrl
insl
push
pop
and
es
pop
arpl
push
sub
or
xchg
daa
fstcw
cmp
aam
lds
mov
mov
push
and
imul
test
xor
bound
dec
adc
push
in
ss
fs
add
add
push
cld
andb
dec
push
add
cmc
cmp
pop
adc
jo
pushf
pop
aam
push
push
jge
inc
add
adc
sub
add
push
mov
jmp
mov
push
xchg
sti
xor
sti
push
into
leave
push
fidivrl
fbld
pop
mov
repnz
jl
adc
int3
clc
test
dec
jns
fwait
dec
add
lods
pop
cmp
sub
mov
pop
aas
popa
inc
divb
or
mov
jg
in
cmc
xchg
ds
faddp
cmc
add
mov
mov
cmp
push
js
or
cmpsb
sahf
cmpsl
gs
shr
bound
mov
int
fcomip
cmpsl
xlat
aad
dec
pop
fbstp
mov
fdivl
jne
ja
repz
in
decb
sahf
paddd
push
bound
push
dec
das
hlt
and
pop
push
adc
mov
mov
sti
sahf
dec
push
in
xchg
lahf
loope
daa
sbbb
and
rcr
ret
mov
jge
xchg
xor
pop
mov
push
sbb
int3
adc
pop
call
imul
stos
test
sub
push
sub
sub
jle
insl
ret
dec
xor
inc
test
cmpsb
popl
call
mov
add
push
mov
js
sbb
sub
jnp
outsl
cmpsb
nop
cmp
xor
std
mov
xor
test
mov
je
insb
sti
xor
sbb
gs
dec
lods
mov
or
pinsrw
test
push
movsb
push
pop
jmp
pop
test
push
pop
inc
hlt
add
mov
push
mov
out
repnz
or
sbb
push
or
dec
jo
cmp
loope
cmp
jl
and
pop
jno
and
js
mov
lods
mov
divl
jmp
push
cmpsl
jns
sbb
je
dec
sub
movsl
add
cmp
sti
push
mov
loopne
lock
sbb
sub
outsl
cmpsb
sbb
repnz
inc
sbb
sub
out
xchg
sbb
fwait
movsl
dec
fcomi
and
int
shll
inc
lods
call
icebp
jo
sbb
adc
fcompp
popa
xchg
ret
jmp
or
adc
movb
jnp
ret
fdivrs
xorb
mov
sub
enter
inc
in
cmpsl
imul
rcrl
mov
mov
sub
imul
in
ja
cmp
cmp
inc
popf
inc
loop
mov
jae
mov
dec
loope
xlat
test
es
jbe
lea
addl
jl
stc
mov
or
jle
adc
or
push
mov
jle
push
add
popa
out
loope
xchg
cmp
loop
jno
into
cmpsb
xor
jnp
xchg
sub
xlat
or
pop
arpl
sbb
sbb
fnsave
lahf
movsb
cltd
mov
push
adc
or
repz
jp
in
jb
and
mov
jno
sub
imul
or
adc
ljmp
add
aas
repnz
fnstsw
adc
sbb
sbb
inc
lahf
add
sub
mov
mov
xor
iret
jmp
loopne
data16
push
mov
mov
test
sbb
in
adc
mov
std
lret
mov
jne
aas
mov
sbb
mov
sub
rcrb
test
sub
into
pop
xchg
xchg
pop
popf
stos
jle
push
mov
adc
fimull
pop
inc
lods
inc
sbb
daa
lods
xchg
repnz
pop
jl
mov
aam
xor
popf
sub
sti
jmp
pusha
jmp
popf
lcall
pop
and
ljmpw
out
xor
repz
jle
ja
xchg
nop
clc
ljmp
aam
cmpsb
out
xor
orl
cltd
and
or
out
in
out
and
jg
mul
mov
mov
xchg
jo
orb
mov
stc
ret
sub
push
pop
push
sub
fmulp
mov
mov
divb
rcrl
test
inc
and
incb
and
mov
ficompl
cmpsb
xor
icebp
xor
push
jle
jne
jge
fildll
jns
inc
orl
shrb
das
add
add
nop
cld
addl
pop
push
mov
into
xchg
movsl
or
loope
les
push
add
mov
xchg
mov
mov
jg
mov
adc
lahf
xchg
push
popf
cmp
jb
xchg
sub
lods
divb
lods
ficompl
push
dec
pushf
in
dec
pushf
popf
ds
push
jge
add
popa
inc
inc
and
mov
in
lea
jns
push
call
loop
mov
mov
jg
sbb
lods
outsb
or
xchg
xor
mov
lock
ficoml
iret
enter
dec
in
aaa
jns
sbb
sbb
inc
mov
jns
cmp
jecxz
addr16
or
add
adc
inc
pushf
or
xchg
sbb
jg
push
and
adc
fnstcw
add
mov
pop
nop
sub
push
xchg
pop
push
cmpsb
ret
lock
int3
int3
bndstx
or
rorl
mull
mov
cmp
out
ja
pop
xlat
sub
psubd
fwait
repnz
mov
mov
pop
aad
mov
bound
loopne
dec
lods
xchg
pop
inc
mov
fcmovnbe
cltd
std
xchg
fwait
outsb
jb
cmp
insl
adc
cmp
call
and
jl
scas
and
ds
fcoms
scas
sub
int
and
mov
repz
mov
sub
and
or
pusha
mov
cmp
mov
xchg
add
test
sub
mov
repz
stc
ja
dec
or
jne
scas
cmp
lods
iret
pop
inc
jbe
add
pop
insb
sub
jb
aaa
test
mov
push
mov
cmp
jle
or
lock
nop
pop
push
call
and
push
inc
insl
sbb
sub
jo
sub
add
xchg
out
or
out
mov
dec
sbb
pop
and
into
ja
mov
into
in
mov
pop
dec
pop
mov
mov
xor
sub
ja
fsubp
mov
inc
jne
lock
adc
andb
out
and
jo
subl
int3
dec
push
das
insb
je
jmp
cmp
ja
cmc
jae
inc
pop
pop
ret
in
add
js
inc
andl
les
add
or
out
push
test
cli
cmp
in
mov
push
push
dec
iret
out
sub
mov
cvtps2pi
pop
push
pop
and
adc
sub
mov
lds
bound
sbb
sub
into
leave
sbb
loop
cmpsl
dec
pmulhw
shrl
scas
enter
scas
test
mov
push
test
xchg
fildl
and
mov
cmp
pop
shlb
cmp
lock
bound
scas
rcr
addr16
cmp
or
test
xor
push
and
xchg
cmc
sbb
mov
and
jmp
or
mov
in
lods
fs
adc
adc
enter
out
cmpsb
ret
mov
inc
call
mov
cmc
dec
mov
str
jge
lods
imul
jns
mov
pop
data16
and
movsb
rol
dec
fs
jle
inc
repnz
data16
movsl
test
dec
ds
insl
incl
mov
sbb
pop
pop
mov
lock
adc
or
cld
mov
in
xchg
into
dec
push
pop
aas
imul
pop
inc
xor
mov
nop
aad
or
mov
out
mov
jge
adc
pop
and
sar
mov
add
aad
mov
test
ret
ss
jg
cmp
out
add
or
int
dec
pop
mov
mov
enter
mov
cmp
cmp
dec
or
xchg
dec
arpl
inc
mov
gs
push
pop
ret
mov
sbb
pop
pop
sbb
sarl
add
jns
or
push
and
mov
inc
dec
add
xchg
fcmovnu
imul
push
dec
ljmp
inc
inc
daa
cmp
sub
jne
pushf
jle
fs
loopne
call
fisubs
lea
mov
pop
mov
inc
push
shlb
jle
add
xor
ret
jnp
sub
pop
jl
pop
ja
mov
xor
add
lds
pushf
insb
adc
adc
xor
adcb
lahf
cmpsl
sbb
repz
sub
sub
dec
in
jno
pusha
sub
inc
es
jmp
xor
out
test
push
cli
fsubrs
jbe
filds
dec
lret
fbstp
xor
add
rorl
call
repz
cmp
repz
push
outsb
mov
or
xlat
sarb
insl
in
ds
sbb
dec
inc
pop
pop
je
shrl
pop
imul
mov
cmpsb
add
pop
daa
fistpl
lods
xor
or
jle
sbbl
sub
aad
addr16
push
pop
flds
adc
mov
sbb
out
inc
jl
clc
cmc
mov
xchg
repnz
adc
iret
mov
dec
in
les
xor
push
sub
jbe
dec
cmp
cmpsl
push
xor
push
push
push
add
mov
cmpb
and
cmp
scas
das
mov
out
mov
push
or
push
in
loop
dec
adc
shl
inc
cmp
push
mov
clc
jbe
addb
into
add
mov
lcall
sbb
pop
lret
test
adc
adc
fstl
repz
addr16
jle
add
sahf
jecxz
add
je
push
sub
cltd
mov
cs
push
je
push
jb
fwait
icebp
in
add
mov
lods
jne
es
dec
mov
ret
pop
push
pop
test
push
stc
push
mov
movsb
mov
mov
pop
adc
mov
xchg
into
xor
push
hlt
icebp
scas
and
sbb
fs
xchg
sub
jge
pushf
cmpsl
lahf
push
pop
push
inc
inc
inc
inc
scas
and
movsb
cmp
daa
addl
bound
mov
and
icebp
and
inc
xchg
or
xchg
add
jl
je
cmpsl
inc
call
cmp
movsb
dec
push
sbb
movsb
sti
das
out
pop
inc
or
cmp
or
inc
or
das
adc
sahf
andl
movsb
add
xchg
jnp
pop
push
push
mov
movsb
ja
inc
out
or
aad
rcr
add
icebp
or
je
xchg
xchg
sub
cmpsb
jne
add
sbb
insl
imul
rcll
and
lret
adc
or
push
test
dec
bound
pop
inc
stos
out
xchg
cmp
subl
imul
enter
cmpsb
sbb
scas
inc
pushf
test
or
mov
dec
out
cmpsl
pop
shlb
mov
pop
std
pop
cmp
sarb
aas
stos
insl
push
xor
push
fcmovnu
jno
mov
loope
mov
std
fldl
js
inc
hlt
mov
and
push
lcall
xchg
sar
subb
scas
adc
add
push
arpl
test
movsl
pop
jle
push
mov
gs
xor
dec
shrl
mov
pop
rcl
test
ret
push
icebp
jae
fcmovnu
fwait
adc
jmp
dec
ret
push
mov
sub
jge
push
mov
xchg
inc
cmpsb
lds
ret
push
cld
cmpsb
dec
mov
cmp
mov
and
push
xor
rcr
sahf
push
adc
lret
xchg
scas
inc
shll
daa
and
lcall
add
fs
out
dec
addr16
lahf
addr16
mov
and
mov
ss
inc
dec
les
lcall
push
inc
lods
mov
adcb
das
nop
mov
adc
dec
mov
mov
pop
mov
cmp
jle
push
bound
pop
sub
and
mov
xchg
jmp
fnsave
lods
popa
xchg
push
stos
sub
les
push
sub
xchg
rorb
xchg
pushf
xchg
gs
push
fdivr
adc
jecxz
xchg
fldl
pop
sub
dec
mov
test
cmp
nop
xor
inc
xchg
scas
dec
jnp
leave
rcrl
fsubp
add
cs
or
pop
aaa
outsb
mov
add
xorl
lods
lods
pop
out
add
ja
mov
sbb
push
sub
sbb
inc
das
xchg
lock
cld
cld
int3
aas
jmp
movsb
cmp
lock
mov
shlb
cwtl
sub
pop
xor
cmc
xchg
push
js
stos
clc
arpl
sbb
mov
mov
faddl
sbb
xor
pop
movsb
in
jno
cld
jmp
pop
jl
mov
lods
jnp
div
sbb
adc
mov
ret
sub
frstor
xchg
adc
lcall
scas
mov
sbb
fstl
ja
dec
lds
ljmp
xchg
movsl
mov
fistpl
imul
cmp
jnp
ja
cltd
xchg
int
sbb
in
jae
pop
enter
dec
rcrb
cmc
adc
fldt
int
sbb
dec
cmp
jecxz
jmp
mov
jb
idivb
js
cmp
lahf
cmpsb
xor
enter
in
cltd
mov
repz
lahf
dec
fiaddl
fisubrs
xchg
mov
xor
or
inc
int3
outsl
fcomip
fsubrl
xchg
idivl
aad
fwait
iret
fsubl
decb
mov
test
jle
fadds
jo
pop
sbb
in
fwait
scas
loop
lcall
repz
icebp
mov
xchg
mov
stos
push
or
cmp
lret
cmp
mov
aas
nop
stc
andb
out
adc
fsin
lcall
mov
daa
and
and
xchg
add
cmp
clc
ficoml
in
lahf
adc
adc
in
push
jae
sarl
push
daa
cltd
loopne
inc
mov
into
mov
fldl
in
xor
push
int3
jnp
mov
jecxz
mov
rcl
lods
push
xchg
mov
arpl
pop
imul
mov
das
das
rcr
jb
inc
addr16
iret
push
mov
mov
ss
dec
fsubp
and
mov
mov
or
in
jmp
push
sarb
loop
pop
adc
and
int
jb
xor
mov
rcrl
xor
xchg
add
inc
dec
repz
aas
loope
repnz
out
test
push
shr
jbe
pop
pop
xor
push
cmp
into
mov
jno
std
fnstcw
ret
sbb
insl
inc
pop
xchg
scas
adc
push
aam
outsb
xchg
icebp
icebp
in
xchg
sbb
clc
fidivrl
cmpl
sub
imul
ret
adc
push
push
ret
inc
not
mov
ja
jno
sti
sbb
aam
xchg
popf
add
dec
cli
pop
jae
stos
sahf
stos
scas
and
sahf
cmc
cmp
pushf
daa
movsl
mov
lcall
pop
mov
lea
or
mov
jmp
andl
loopne
out
rcrb
enter
outsb
mov
movsb
lea
add
and
and
xchg
stos
repz
hlt
icebp
imul
scas
mov
inc
cmpsl
mov
xor
rorl
sbb
sti
stos
test
fidivl
and
fwait
jg
inc
int
js
mov
les
sub
les
and
aas
fcmovb
push
mov
mov
xchg
loope
add
mov
cmp
fstpt
jp
lret
pop
icebp
insb
mov
mov
adc
mov
lret
sub
xchg
mov
pop
dec
mov
mov
mov
push
movsl
rcll
jo
mov
pusha
pop
push
jecxz
inc
imul
js
in
inc
jle
pop
popf
sbb
mov
mov
push
mov
rcll
bound
xchg
rorb
push
pop
imul
sub
dec
dec
idiv
push
lods
arpl
fsts
insb
mov
adc
stc
test
les
shlb
mov
push
sub
cmc
push
fs
pop
and
ss
or
jns
ja
dec
push
je
dec
sbb
movsl
adc
movsb
ret
fucom
dec
stos
jnp
pusha
sbb
cmp
les
mov
jae
mov
inc
and
icebp
mov
aaa
jge
adc
aaa
pop
into
sti
mov
mov
lods
xchg
xor
mov
adc
cmp
cmp
pop
cmp
xchg
mov
pop
mov
out
xor
mov
insb
in
jl
and
cmpsb
sbb
ss
cmp
mov
jb
ret
push
mov
in
mov
fidivs
xlat
or
icebp
push
adc
push
push
inc
adc
mov
pusha
pop
int3
sub
cmp
mov
into
pop
out
movsl
mov
insb
scas
and
in
lods
pop
scas
dec
int3
test
bound
xchg
data16
mov
sbb
mov
sub
xchg
cmpsb
mov
je
and
xor
pop
les
enter
jbe
xchg
into
sbbb
cld
sahf
cs
push
insb
jnp
mov
aaa
out
mov
les
test
scas
call
add
inc
cmpsb
mov
inc
jae
nop
es
cltd
int
arpl
lahf
fsubs
cmp
dec
inc
into
jle
repnz
gs
sbb
out
mov
fwait
mov
stc
lock
shlb
pop
mov
outsb
pop
or
mov
addr16
xchg
mov
or
rclb
xlat
pop
imul
push
pop
fucom
jecxz
insl
push
sahf
clc
scas
cmp
repz
test
rorb
jecxz
rcl
iret
push
pushf
sbb
pop
pushf
pop
in
sbb
jp
mull
lds
lods
mov
lods
loopne
mov
sub
add
shr
pop
lds
cmp
gs
cli
mov
add
nop
repz
inc
pop
incb
aad
lcall
push
mov
pop
push
lds
xchg
aaa
int
movl
in
mov
dec
adc
and
pop
mov
xchg
lea
ja
lock
pop
cmp
aam
out
sbb
add
mov
mov
mov
nop
fs
aas
pop
shl
mov
mov
mov
add
test
mov
pusha
fsubrs
xor
xchg
test
fwait
cmp
jbe
mov
xchg
repnz
sub
pushf
add
cltd
mov
push
shrb
fsubl
mov
mov
mov
imul
std
bound
inc
and
test
mov
stc
cmp
adc
jo
loope
sub
add
xchg
sbb
into
inc
imulb
or
sbb
mov
sahf
cli
inc
fimull
pop
in
dec
fs
add
icebp
mov
or
adc
and
mov
lods
mov
or
cmp
add
sub
sbb
test
imul
popa
sahf
orl
mov
hlt
jns
loope
mov
pop
out
bound
movsb
pusha
push
roll
mov
mov
inc
ja
push
and
test
fwait
push
pop
push
call
push
xor
pop
xchg
hlt
dec
aam
dec
popf
push
and
jns
subps
sbbl
in
or
loop
dec
shrl
andb
movsl
xor
imul
push
jnp
popf
rcr
and
mov
addl
js
jg
ret
xor
loope
imul
cmpsl
int
test
xor
jecxz
add
fsts
mov
sbb
push
mov
lock
sbb
mov
xor
sbb
xchg
icebp
fs
pop
js
in
popf
push
push
push
mov
push
stc
nop
scas
dec
icebp
andl
and
xor
mov
xor
sub
cmp
movsl
shr
cmc
xchg
jbe
pop
inc
std
jno
mov
mov
mov
xor
adc
mov
outsl
push
notl
incb
inc
scas
inc
ret
das
mov
sub
in
rcll
inc
mov
leave
lahf
or
mov
xchg
xor
adc
pop
xor
mulb
jnp
enter
inc
jp
push
mov
dec
jno
aaa
add
sub
push
jle
mov
cmp
dec
out
popf
pop
inc
mov
jbe
inc
rcrb
out
lcall
jo
cmp
mov
mov
iret
push
push
lods
mov
rcrb
mov
gs
lret
sub
add
ljmp
scas
mov
fwait
inc
xchg
mov
hlt
pop
stos
cmp
stc
push
cmpsb
pop
sbb
sahf
or
push
cli
add
sbbl
mov
add
pop
xchg
hlt
pop
jo
inc
xor
and
push
lods
aam
mov
push
out
cmc
xchg
je
dec
out
hlt
fidivs
and
xchg
scas
adc
mov
jg
nop
bound
smsw
mov
sbb
cli
ret
sbb
movsl
stos
hlt
adc
imul
call
dec
cmp
sub
cmpl
mov
jns
sti
incl
jae
popa
movsb
jge
and
mov
push
jne
jle
aas
xchg
je
cltd
insl
aaa
mov
out
jg
aas
movsl
popf
loope
adc
sarl
imull
pop
lret
or
jl
ret
into
es
addl
xchg
push
dec
in
movsl
clc
jns
add
xor
xor
movsb
push
push
sti
jno
aad
out
icebp
xchg
add
push
sub
jecxz
rolb
movsl
lods
push
pop
aad
jp
xlat
or
out
ds
in
xor
popa
fistps
pop
and
pop
pop
inc
out
mov
pop
jo
xchg
adc
cmpsb
inc
les
mov
mov
scas
pop
push
xlat
xchg
sub
fiadds
mov
int3
arpl
in
xor
popf
jmp
test
das
out
lock
sub
aas
call
test
rolb
shlb
mov
ss
mov
in
mov
shll
shll
lcall
jnp
mov
mov
xor
popa
bound
clc
es
inc
mov
dec
jae
or
mulb
or
xchg
stos
adc
mov
and
fstl
outsl
rcrb
decb
jbe
not
mov
push
mov
ret
popf
testl
es
lock
cmp
fcmovu
arpl
mov
xchg
mov
mov
adc
sahf
mov
pop
stc
loop
subb
int3
stos
jnp
shrb
cmp
std
aaa
dec
in
in
and
jo
stc
add
xor
adc
add
loop
std
das
mov
je
ljmp
shl
adc
shlb
inc
sub
jnp
and
cmpsb
scas
push
add
lods
jb
xorb
inc
js
mov
cli
test
paddw
push
push
mov
inc
ljmp
into
insb
add
or
imul
fcoms
xor
rorl
pushf
sbb
mov
xchg
xchg
ss
ret
stc
cmp
inc
fmul
ljmp
ja
and
mov
ljmp
pop
mov
andb
sahf
stos
pop
imul
je
or
testb
stc
imul
popa
inc
pusha
fldcw
in
ja
in
hlt
mov
cmp
js
fdivrp
dec
lahf
jbe
cltd
ds
pop
pushf
mov
sub
gs
jmp
xchg
xorb
ror
xor
xlat
adc
cmp
xchg
negl
in
fmul
int
mov
and
cltd
hlt
cmp
scas
outsb
xchg
outsb
nop
clc
js
les
loop
or
and
ret
and
mov
loopne
addr16
mov
jmp
xor
mov
jge
jae
insb
sub
fwait
sahf
sbb
jecxz
test
push
repnz
sti
pop
aas
or
xchg
lret
in
cmpsl
sub
mov
inc
mov
mov
and
popf
adc
insl
ror
out
xor
jne
lahf
or
aam
cmpsl
mov
enter
loopne
mov
mov
inc
test
cli
imul
push
repz
fisttps
adc
xchg
sahf
imul
add
inc
ss
insl
fsubl
dec
push
pop
push
imul
ret
mov
iret
inc
xlat
add
arpl
outsb
inc
sbb
jno
jl
les
add
mov
push
push
add
int
imul
dec
sub
mov
xlat
cwtl
out
mov
cmpsb
decl
push
je
and
or
jbe
cmpb
cwtl
out
rorb
xchg
fwait
ja
and
push
popa
pushf
xor
jmp
cmp
or
loop
xchg
into
xchg
setb
fbstp
lret
shl
lret
mov
xchg
add
cli
sbb
and
test
cmpsb
cmp
dec
sarl
ret
cmp
push
mov
dec
xor
sbb
push
gs
sub
inc
xchg
insl
pop
pop
mov
test
lret
inc
fs
cs
test
mov
and
retw
ja
adc
cli
int
pop
jmp
fisubrl
aad
test
xchg
arpl
fsub
mov
cmp
cmp
ret
xlat
mov
mov
out
iret
jo
jb
test
push
cli
aas
mov
push
mov
loop
loope
testl
mov
cmp
xchg
mov
ficoms
inc
call
les
inc
fsubrl
nop
out
out
pop
jp
push
jmp
addb
cmp
lea
movsl
jno
rcrb
lret
orl
push
pushf
cwtl
mov
push
rorl
into
adc
xor
push
cwtl
add
cmp
mov
mov
stos
mov
pop
xchg
cmp
in
sahf
xchg
cmp
insb
out
lea
sbb
arpl
push
xor
lock
scas
movsl
pop
mov
lea
outsb
xchg
pop
pushf
adc
xchg
xchg
mov
xor
jb
add
pop
xor
push
pop
test
fmull
pop
sbb
sbb
mov
stc
and
cwtl
fmuls
cmpsl
adc
xor
xchg
push
xor
mov
and
cmp
jb
sahf
pop
stos
cli
add
adc
xor
push
pop
addr16
or
mov
sbb
pop
repz
or
jge
jl
xchg
les
aam
inc
and
clc
xchg
dec
jg
ljmp
into
xor
insb
mov
dec
cmp
aaa
or
adc
sub
ja
aas
jnp
out
outsl
mov
inc
sub
ja
jb
daa
divb
mov
gs
imul
mov
xchg
or
mov
sbb
mov
and
stos
cmp
clc
fmuls
xchg
mov
push
mov
cmp
mov
dec
sbb
dec
insb
pushf
xchg
sbbl
call
ljmp
das
aam
in
bound
call
jnp
or
push
fcmovnb
inc
mov
mov
adc
ds
and
xchg
sub
ret
mov
jge
mov
mov
inc
jnp
mov
insl
rolb
addr16
movsb
ret
and
jb
inc
xchg
jae
ficoml
or
pop
inc
ljmp
pop
out
fmull
je
or
in
fistl
fidivs
pop
gs
out
out
sbb
daa
fdivs
in
or
pop
arpl
cmp
inc
add
clc
push
mov
insb
insl
mov
pop
inc
rorl
dec
pop
outsl
scas
mov
add
dec
mov
and
outsb
push
and
sbb
stos
pop
flds
mov
mov
das
ret
dec
or
imul
mov
add
jbe
lahf
lock
ljmp
rcrl
sti
adc
mov
push
xor
pop
cmc
out
mov
insb
shrl
xchg
fcompl
gs
xchg
xchg
xlat
push
es
aam
ret
test
cltd
or
shrl
imul
jbe
dec
adc
push
mov
sub
ss
fisubrs
sbb
mov
cs
gs
test
cmp
inc
dec
xchg
rorl
stc
inc
add
aam
data16
jge
pop
xor
pop
push
xchg
movsb
xchg
sub
mov
rolb
mov
dec
pop
xlat
pop
bound
movsl
mov
cmpsl
pop
out
dec
mov
dec
imul
cmc
cmp
adc
loope
mov
arpl
mov
dec
mov
das
sahf
jmp
xor
jne
test
cld
stos
popa
repz
nop
imul
adcl
jae
stos
in
lock
and
aas
lods
mov
push
daa
dec
inc
es
dec
arpl
mov
int
lret
sub
jle
repnz
jecxz
mov
xchg
imul
stc
mov
jbe
inc
arpl
pop
lds
push
dec
add
mov
jmp
aaa
cmpsl
xlat
xchg
fistpll
sub
sub
push
stos
jno
mov
popa
mov
sub
sub
sti
dec
fildll
mov
pop
add
ret
lods
sti
call
sbb
sub
mov
push
mov
jmp
mov
in
jne
movsl
xchg
insl
mov
mov
and
cltd
and
loope
lods
pop
cltd
jle
jecxz
xor
sbb
loopne
xchg
add
and
push
add
wbinvd
xor
pop
add
mov
cltd
jecxz
or
xor
push
and
sbb
daa
icebp
aad
les
ret
sbb
mulb
adc
mov
dec
jae
pop
inc
push
daa
out
mov
in
xor
mov
jle
and
cwtl
push
sbb
mov
mov
pop
stc
cmp
and
jnp
popa
mov
lret
test
icebp
pop
mov
sbb
push
and
out
subl
adc
int3
divb
mov
jo
push
push
fwait
mov
insl
cltd
adc
add
fwait
sbbl
mov
inc
and
cmp
add
dec
mov
scas
mov
test
mov
mov
push
aas
popl
xor
pop
fiaddl
and
aam
sub
fcmovne
ds
mov
and
out
insb
mov
jle
sahf
ss
test
out
push
jge
mov
lods
jmp
cmpsl
xor
ret
xchg
inc
pop
inc
outsl
and
lods
jge
and
fwait
cltd
shlb
hlt
out
lds
add
jp
cmpsb
mov
mov
adc
call
fldcw
movsb
std
pop
push
mov
test
mov
dec
cmpsl
cwtl
call
push
push
sub
insl
or
cltd
xchg
iret
mov
xchg
push
ja
push
dec
add
scas
add
cmpsl
cld
xchg
fnstenv
mov
fdiv
fsubrs
xchg
adc
ja
gs
cmp
inc
push
dec
mov
pop
and
andb
push
std
rolb
insb
roll
int3
ljmp
out
or
xchg
xor
sbb
imul
mov
xchg
or
ss
lret
cmp
mov
xor
jg
push
xchg
cli
sub
push
jge
adc
fcoms
fsubs
repz
xor
mov
mov
cs
jp
aam
shl
mov
dec
fwait
mov
pop
push
jbe
xor
arpl
jle
fldenv
jbe
in
push
fisubrs
mov
dec
cmpl
aam
stos
mov
add
in
sti
test
jbe
les
repnz
push
inc
in
mov
sub
js
fisttps
js
inc
test
xchg
scas
ret
push
fldl2t
push
leave
cwtl
ss
bound
cmp
xor
cwtl
gs
andb
test
adc
in
loope
daa
test
mov
xor
imul
call
shl
dec
ljmp
jbe
xchg
jb
sbb
mov
jl
fdivrs
in
sbb
inc
lds
pop
and
pusha
out
cmpsb
pop
or
mov
inc
add
mov
sub
outsl
mov
jl
gs
mov
add
int3
rolb
xchg
xor
pop
hlt
jge
xor
pop
shll
mov
stc
mov
outsb
mov
cmp
insb
lock
jge
dec
jo
add
pop
idivl
sbb
and
leave
shrl
iret
xlat
push
cld
dec
clc
cmpsl
popa
xchg
cmp
lock
roll
and
in
stos
jl
or
mov
cmp
nop
add
xor
xor
mov
pop
cmpsl
fbstp
inc
mov
inc
movsl
mov
nop
inc
sub
jp
movsl
inc
lods
cmp
jl
sub
clc
out
int3
fisubs
pop
enter
out
jge
push
fisttpll
sbb
fiadds
dec
dec
lcall
push
loopew
add
ftst
sarl
rorl
mov
xlat
or
pop
mov
insb
jmp
fidivs
push
add
xor
sbb
jo
sub
repz
imul
lods
dec
sub
mov
sbb
fdiv
outsl
aam
and
mov
int
adc
outsl
jl
subl
addl
ds
sarb
inc
cmc
push
cmp
pop
lret
and
jae
mov
add
cmpsl
data16
ja
test
pop
lds
outsl
loope
jae
das
pop
int
mov
icebp
sarb
cltd
mov
aad
dec
clc
leave
pushf
ss
loop
negb
aam
adc
imul
cwtl
mov
icebp
xor
jae
out
dec
fildl
cmp
ret
and
shll
outsl
push
lret
popa
mov
sbb
ret
stc
mov
sbb
jge
lods
in
jp
sti
jnp
rol
subb
jl
orb
sub
cmp
out
into
pop
loop
mov
das
sbb
pop
sub
sbb
dec
push
movsl
xor
imul
clc
pusha
int3
je
push
iret
jmp
pop
jbe
mov
mov
pop
xchg
mov
rorb
fdivl
jbe
out
pop
xor
push
jge
or
fsts
arpl
push
xor
add
gs
arpl
and
int
pushw
push
rcr
jmp
adcb
rep
imul
sbb
mov
mov
aas
jge
loop
andl
xchg
gs
decl
cmp
popa
ljmp
xchg
xchg
ds
pop
pop
rcll
iret
rcrl
or
fimuls
sub
pop
sbb
push
cmp
inc
pop
lret
pop
push
xor
out
scas
aad
loopne
sub
jae
xchg
cli
cmp
jb
push
push
pop
fwait
loop
icebp
xlat
ss
std
int
jne
mov
testb
dec
xor
xorl
daa
loope
ficoms
lds
push
adc
pop
pop
dec
cmp
clc
or
fldenv
pop
mov
popa
loope
push
sub
cmpb
pusha
daa
nop
lods
pop
mov
inc
cmp
sbb
xchg
and
mov
xor
mov
jmp
inc
ja
jbe
jb
test
sahf
xchg
fwait
jne
or
in
jp
xor
es
das
loopne
outsl
mov
lret
mov
add
pop
xor
clc
sbb
mov
push
xchg
push
imul
push
fcoml
aas
mov
mov
sbb
in
lea
or
inc
pop
cli
outsb
xchg
push
pop
cwtl
popa
repnz
scas
fidivs
dec
and
out
test
mov
repz
ds
into
sbb
lcall
loopne
adc
mov
dec
jae
xchg
clc
inc
into
pop
stos
sbb
push
rorl
jns
fdiv
gs
into
shlb
add
sub
dec
pop
inc
pop
sbb
sbb
jge
jb
loope
pushf
cmc
push
bound
cmp
stc
cltd
add
ret
dec
push
pop
or
sbb
sarb
jmp
sub
mov
pop
data16
adc
clc
push
xchg
cmp
rcrl
xor
mov
pop
xchg
jb
or
cmc
adc
loop
repz
rcrb
aad
jae
pop
int3
mov
mov
scas
scas
inc
arpl
or
mov
mov
mov
subb
sub
inc
pop
pop
cmp
or
mov
sarl
xchg
mov
lds
dec
cmpsb
mov
test
xchg
scas
out
xor
fmul
sbb
es
enter
jle
int
or
mov
add
cmp
add
mov
mov
xlat
and
mov
es
in
add
mov
xchg
shll
mov
fwait
js
mov
insb
lods
movsb
and
pop
pop
xchg
jo
and
adc
sbbb
add
call
test
std
pop
mov
inc
je
add
aad
sub
int
sub
out
push
cmpsb
pusha
xchg
xchg
xor
in
cmp
gs
ja
aas
repnz
icebp
pop
andps
dec
subb
loopne
pmaddwd
dec
cltd
cs
rclb
push
sub
pop
dec
imul
push
lock
xchg
jae
xor
out
pusha
fbstp
enter
test
int3
insb
jmp
inc
jge
aaa
dec
faddl
mov
ds
sti
lea
into
sub
insl
fsubrs
lods
sub
inc
inc
loope
fwait
stos
sbb
push
int3
sti
icebp
repnz
ljmp
into
xchg
mov
sbb
dec
push
or
test
loopne
mov
and
xor
bound
adc
fnstsw
or
inc
jno
mov
addl
fnsetpm(287
mov
je
xor
adc
xor
jns
xchg
jmp
into
add
js
pushl
jnp
xor
jl
loop
xchg
jbe
popf
mov
roll
jg
jae
int3
arpl
icebp
cli
aas
leave
pop
sub
jbe
out
cmpsl
add
fldcw
pop
into
xor
inc
push
lock
xor
lahf
cli
mov
mov
gs
loope
mov
in
pusha
out
xchg
fdivrl
imul
rcll
ss
loope
ljmp
ljmp
add
fidivrs
sahf
test
cmp
pop
std
adc
cmpsl
or
sbbl
jne
movsb
sbb
mov
push
fwait
sub
mov
mov
pop
test
xchg
add
sbb
inc
pushf
ret
adc
inc
pop
dec
sbb
nop
push
nop
ja
cltd
sub
nop
lea
cli
movsb
orb
fsubl
xchg
cmp
popf
jae
mov
shll
aad
fadds
aam
ret
lods
mov
and
lock
adc
fldt
imul
jo
adc
pop
dec
inc
ds
fstpt
add
std
test
lret
sahf
mov
jge
sbb
push
or
mov
ss
stc
outsb
lods
loope
sbb
out
mov
cmp
loope
orl
outsb
iret
or
loopne
popf
aaa
ja
insl
mov
dec
mov
daa
or
lret
dec
cmpl
stos
aad
mov
push
repnz
fisttpll
js
push
imul
aam
pop
fistps
cmpsl
ret
out
mov
or
mov
adc
pop
faddp
sbb
aas
adc
push
mov
les
leave
je
cmpsl
arpl
mov
clc
in
adc
jne
inc
bound
cmpsl
inc
jg
cmpb
jmp
test
test
sbb
lods
jle
jl
fidivrl
stc
or
dec
xchg
bnd
pop
mov
fsubl
leave
jmp
xchg
gs
movb
test
push
sub
add
mov
cmp
and
jmp
xchg
mov
shlb
xor
xchg
pop
jmp
outsl
push
and
sbb
arpl
cmp
sbb
into
mov
xchg
push
pop
cmp
and
es
push
adc
xchg
jns
inc
push
dec
test
cltd
adc
dec
xor
sub
in
movsb
add
aam
outsb
and
xor
xor
into
mov
xchg
movsb
roll
pop
sub
mov
adc
push
test
or
movsl
call
pop
mov
and
inc
and
dec
xor
je
cmp
cs
cmpsl
cmp
cmpb
mov
rcrb
xor
xchg
incb
shl
lods
daa
fucomi
iret
mov
or
cmp
dec
pop
add
leave
data16
add
sarl
data16
and
push
cltd
or
imul
xchg
inc
scas
pop
push
mov
sbb
aas
std
fdecstp
scas
mov
dec
arpl
jnp
aaa
clc
adc
into
scas
nop
push
lds
lea
pop
sti
out
and
lods
arpl
or
sub
xor
das
test
fisttpll
rcll
dec
push
adc
cmp
stos
aaa
pop
jmp
iret
scas
mov
xor
dec
pop
inc
sub
xchg
outsb
push
sbb
jne
mov
mov
stos
pop
xchg
cmpsb
jl
cmp
adc
push
push
cmp
js
int
inc
mov
imul
mov
int
mov
arpl
test
aas
mov
push
sbb
jnp
sbbl
out
std
insb
push
add
iret
fiaddl
add
push
sub
xor
cmpsl
mov
jnp
dec
mov
rolb
daa
loop
aas
repnz
xor
xchg
push
faddl
shlb
mov
lea
inc
js
lock
ret
sarb
adc
mov
mov
jmp
xchg
xor
push
aam
pop
ljmp
or
rcrb
ljmp
sub
cld
daa
cmp
fisttpl
mov
push
gs
lcall
dec
dec
xchg
jecxz
cmp
ds
adc
cli
sub
mov
rcr
cli
test
or
mov
sbb
in
lock
xor
xor
pop
xor
fisttpll
orb
mov
or
xlat
sbb
pop
push
xchg
add
xlat
mov
mov
push
pop
or
int
xlat
jl
aas
daa
bound
loopne
movsl
cmp
test
loop
pop
andb
inc
xchg
jmp
cmpsl
popa
lock
lods
nop
dec
fisttpll
mov
push
fwait
mov
shr
sub
insb
int3
xor
lods
cmp
insl
cmp
jmp
or
sahf
cmp
pop
inc
mov
aad
mov
es
scas
fcomps
cli
mov
imul
push
sbb
jmp
adc
push
or
dec
pop
lods
aad
xchg
hlt
add
and
fimuls
push
fcomip
hlt
sbb
aam
or
dec
jbe
sbb
dec
sub
outsl
push
mov
xlat
imul
push
lahf
mov
scas
mov
jns
rcr
add
push
imul
cmp
mov
pop
and
or
ja
sub
dec
negl
push
jbe
add
fcoml
aas
push
mov
test
mov
into
jo
movsl
xor
dec
movsb
pop
mov
in
loope
sbbl
pop
stos
xchg
das
ficoml
xchg
es
stc
sahf
mov
sti
clc
popa
outsb
out
pop
or
or
repz
hlt
ja
dec
lods
jne
je
cmpl
sbb
jecxz
sbb
jns
jae
repnz
mov
sbb
pop
adc
dec
inc
and
mov
inc
call
inc
jmp
and
sub
es
jle
sbb
sub
sbb
cmpsb
enter
pop
lea
je
pushf
sub
push
mov
dec
inc
nop
lea
outsl
cmp
cmp
fldl2t
xchg
lahf
dec
aaa
cmpsb
or
mov
in
push
or
xor
mov
and
push
sti
popa
negb
or
mov
inc
sbb
enter
ficoms
clc
push
sarb
or
stos
jg
ss
lea
int3
cmp
in
pop
jl
xor
push
adc
sub
xor
rcll
movsl
mov
pop
and
enter
std
sub
ret
test
mov
ret
and
and
les
add
insl
cmpsb
loop
jg
ss
pop
pop
xchg
xchg
or
stos
ds
std
shll
imulb
test
pusha
xor
add
pop
insb
sub
fld
xchg
sub
xorb
inc
stc
dec
adc
jb
xor
inc
add
add
and
insb
dec
test
pop
mov
lods
dec
mov
sbb
ss
and
movsb
cmp
mov
sbb
sub
imul
jnp
pushf
incl
adc
fs
xor
push
jae
sbb
packsswb
mov
mov
or
mov
imul
ss
fidivs
icebp
lret
test
inc
leave
or
dec
arpl
dec
adc
xchg
and
mov
push
cmpl
repz
or
inc
nop
gs
xchg
cmp
xchg
dec
sti
out
and
in
pop
out
jl
or
pop
xchg
lret
out
pop
lcall
dec
push
int
les
fiaddl
dec
cmpsl
xor
push
or
imul
popf
scas
inc
ja
xor
pushf
test
or
pop
mov
fsub
addr16
and
lods
ret
std
xchg
jle
stos
test
js
push
std
pop
xchg
xor
ljmp
dec
lahf
movsb
sarb
out
mov
test
pop
mov
xor
movsl
inc
xchg
sub
inc
or
pop
cltd
inc
leave
cli
sub
jl
mov
js
pop
or
pop
int
stos
pop
sbb
pop
add
fisttpll
fsts
bound
xchg
pop
and
adc
jo
ret
sbb
ss
xchg
add
pop
lcall
jmp
jmp
mov
ja
xchg
mov
xor
inc
jb
cmp
push
repnz
pushf
cmp
cmp
and
shll
add
int
imul
add
xor
mov
jbe
movsb
stos
insl
mov
in
out
fwait
cmpsl
inc
cmp
and
int
mov
add
push
lods
xor
xlat
repnz
orl
cmp
sbb
lret
frstor
jnp
pop
jnp
push
cmp
jle
divl
pop
aad
ror
mov
jle
popf
ss
sub
jl
stc
icebp
adc
push
loop
inc
adc
movsb
cmpsb
cmp
mov
aas
pop
push
bound
pop
mov
movsl
cmp
popf
or
jecxz
aas
push
cmpsl
fs
adc
ljmp
sub
lahf
sarb
sahf
dec
sub
stc
pop
outsb
loope
push
cmp
loope
sbb
jg
popa
call
mov
into
popa
ret
push
mov
dec
adc
push
gs
dec
subb
out
add
mov
outsb
xchg
sti
push
int3
jne
cmp
aam
lea
into
lods
inc
push
out
jo
test
xor
xchg
lock
clc
pop
cli
lea
add
jns
add
clc
rcr
shlb
push
data16
in
push
cmp
imul
test
mov
filds
lds
lret
ss
shlb
mov
mov
pop
loopne
lret
xor
stos
inc
pop
decb
sbb
push
dec
dec
push
or
sub
add
dec
mov
add
into
sub
icebp
enter
stc
ret
scas
and
mov
shrb
sti
adc
xor
jns
lahf
outsl
mov
and
aaa
or
das
sub
inc
push
aaa
pop
pusha
divl
or
sub
jmp
lret
incb
lea
or
mov
rolb
jne
dec
cmc
sbb
cmc
push
sahf
mov
daa
pop
or
repnz
xchg
or
jecxz
leave
imul
fwait
pop
xchg
rorb
ds
jns
and
les
aas
dec
and
mov
subl
test
push
inc
mov
dec
pop
icebp
lcall
inc
fidivrl
das
bound
daa
dec
push
icebp
cmp
cmp
aam
aaa
hlt
or
aad
pop
push
repz
movsl
sbbb
vprotw
or
pop
xor
inc
stos
push
push
push
cmpb
xor
pop
ss
aam
sahf
push
aad
or
xor
leave
mov
and
mov
xlat
xchg
jg
jne
lods
ret
inc
or
cmp
imul
jp
int
push
adc
mov
pop
daa
jle
rcl
das
mov
mov
imull
pushf
jge
mov
add
mov
cmp
leave
sub
fbstp
mov
pop
pop
and
out
push
imul
pushf
movsl
movsb
inc
push
sbb
js
fmulp
cmp
jge
or
in
sbb
adc
repz
add
daa
push
jge
sbb
add
xchg
lock
in
and
in
or
inc
insb
enter
sbb
jge
insl
icebp
push
fucom
or
ds
xor
sbb
mov
sbb
stc
dec
and
cmp
pop
clc
sbb
mov
bound
sahf
sar
or
ret
lock
bound
mov
loope
vminss
jmp
gs
or
jge
sub
negl
xchg
mov
jecxz
addr16
in
sub
pop
idiv
push
adc
jp
mov
clc
xlat
pop
negb
repz
out
ljmp
and
mov
repnz
int
fwait
adc
pop
arpl
outsb
push
and
jae
xor
mov
jp
xchg
aas
mov
movsl
jbe
std
les
add
and
mov
xor
je
rcr
lcall
aas
or
mov
cvtsi2ssl
push
mov
sbb
push
lret
xor
icebp
mov
cmc
lahf
lods
stc
cli
cmc
movsl
dec
adc
adc
shrb
push
mov
aam
xor
rcrb
sbb
cld
adc
jne
scas
jmp
decl
fwait
add
shr
inc
add
push
mov
mov
aas
addl
and
shrl
xchg
loope
or
mov
int3
test
add
add
mov
cmpb
out
arpl
stc
loopne
adc
push
mov
sbb
cmp
data16
pop
xchg
aad
scas
mov
jnp
and
dec
add
push
hlt
xor
xor
inc
sub
fnstenv
add
mov
nop
fnclex
mov
mov
mov
aam
cld
in
inc
add
dec
xor
aam
aam
jecxz
sti
ret
cmc
push
dec
call
jne
mov
jl
xor
scas
xor
test
xor
cmc
rcl
test
orl
and
xor
and
xor
cmp
icebp
inc
out
fcomps
bound
mov
jb
push
call
xchg
repz
xadd
pmaddwd
les
cmp
subb
lret
inc
gs
call
mov
sahf
adc
outsl
adc
nop
sti
les
fisubrs
and
fistpll
cmp
inc
repz
fcompl
sub
mov
add
cmp
lret
sbb
cmpsb
insb
out
lea
mov
mov
clc
pushl
jmp
dec
pop
cmp
stc
pushf
rcll
cld
mov
dec
push
rclb
movsl
fs
adc
in
mov
adc
mov
dec
sbb
dec
shrl
test
sub
clc
je
xchg
fsubs
mov
imulb
sbb
or
adc
jl
push
sub
push
add
repnz
xchg
jp
int
mov
les
ret
fs
sub
xchg
rcrl
mov
rorb
dec
mov
xor
and
jp
ret
jne
ret
ficompl
int
cld
icebp
int
adc
jae
sbb
mov
orb
mov
dec
bnd
jmp
icebp
inc
movsb
shrl
inc
fisttpll
mov
push
xchg
mov
cmp
in
mov
sub
mov
mov
and
mov
mov
jo
xchg
dec
add
sbb
mov
mov
push
inc
fmull
movsl
test
push
mov
nop
mov
call
repz
ficomps
mov
out
pop
mov
cmp
int
clc
dec
es
insl
mov
dec
ds
sbb
aad
daa
cmpsb
mov
jecxz
add
in
jb
test
inc
pop
and
dec
ds
dec
inc
mov
lods
fldenv
mov
mov
add
cmpsb
pop
adc
imul
rorb
jb
sub
and
cltd
pop
mov
mov
and
lcall
jo
rcll
fidivs
jne
mov
pop
and
pop
xor
sbb
sub
aad
jbe
fs
add
ljmp
sahf
jae
scas
lock
shrl
dec
xor
out
adc
xor
out
dec
scas
loop
leave
negb
sub
xor
je
xchg
inc
mov
and
les
repnz
push
jg
ret
sub
sarb
and
fisubs
mov
pusha
sbb
lods
push
divl
sti
and
inc
ja
add
fdivp
lret
cmpsl
add
in
test
dec
mov
and
sub
xor
push
jo
dec
mov
ja
jp
push
out
rcrb
icebp
jnp
frstor
repz
sub
dec
xor
stc
adc
inc
leave
int3
ljmp
mov
out
dec
pop
add
loop
mov
rolb
and
mov
lods
xchg
mov
aam
pop
fs
mov
jno
inc
insl
addr16
cmp
inc
xchg
leave
idivb
xor
push
xlat
push
jb
mov
ja
or
dec
mov
jmp
xor
inc
adc
fcompl
in
or
sbb
or
insl
add
mov
and
pop
xor
in
insb
loope
lret
sub
lods
or
pop
push
xchg
mov
xor
lahf
mov
jne
pop
cmp
repnz
pushl
loopne
outsl
pusha
and
inc
xchg
sbb
lods
bound
loopne
std
sub
add
push
nop
xchg
and
sbb
rclb
or
shlb
jge
mov
push
xor
or
lret
push
cs
push
cmc
js
in
dec
add
inc
into
insl
sub
sbb
jge
inc
inc
pushf
in
dec
cmpsl
hlt
dec
daa
dec
xor
jmp
xor
jge
leave
adc
sahf
shlb
imul
mov
pop
jne
mov
sub
jb
xchg
shl
aaa
popf
pop
xchg
loope
mov
negb
mov
cmp
mov
pop
mov
cli
int3
or
jge
fsubs
arpl
ret
dec
push
loopne
or
push
pop
xchg
jae
xchg
data16
insl
mov
call
push
in
addr16
adc
sub
push
jo
popa
addr16
mov
pop
mov
adc
push
jae
adc
das
popf
cltd
push
int3
pop
dec
addb
test
ja
xor
insl
inc
mov
add
movsl
mov
jo
and
daa
test
out
mov
and
xor
fists
out
fsubrl
aaa
xor
sbb
push
pop
inc
imul
cmp
je
dec
xchg
bound
inc
sub
jbe
out
data16
repz
adc
push
pop
sub
pop
fisttpl
jo
and
inc
sahf
or
shr
iret
enter
in
lods
cmp
fdivs
fisubrl
push
arpl
cld
adc
adc
sub
bswap
dec
or
add
xor
mov
xchg
pop
mov
add
ljmp
loop
rcr
repz
mov
sti
mov
dec
hlt
fsubrl
pushf
test
inc
jle
sub
mov
leave
sub
push
aad
popf
xor
jne
lret
pusha
sahf
mov
push
lods
sub
adc
mov
xor
lds
jne
add
and
lods
orl
lahf
movsl
mov
cmp
jno
dec
push
adc
xor
repnz
mov
adc
push
popf
gs
movsl
ja
sbb
insl
js
sub
sbb
pop
negb
pop
data16
push
cltd
cmpl
lahf
imul
or
divb
adc
aam
xchg
adc
xchg
and
dec
cmp
pushw
jmp
add
push
pop
pushf
mov
in
lods
stos
imul
arpl
cmp
mov
fisubl
xchg
or
mov
insl
jne
sub
ds
and
xchg
fmull
fnstsw
sub
mov
lods
pop
fnsave
cmp
xchg
ret
popa
jle
in
pushf
sbb
stc
out
std
mov
andb
jo
inc
inc
push
mov
mov
jmp
out
popf
xchg
int3
xor
pop
mov
mov
jns
inc
cs
mov
mov
lds
pop
add
sbb
sub
jecxz
andb
jecxz
cmp
dec
mov
mov
pop
jp
jecxz
loop
sbbl
and
je
or
in
ret
in
into
fistl
jae
mov
out
movsb
xlat
xchg
mov
popf
pop
clc
addr16
icebp
or
rcr
fnstenv
testl
ret
sbb
xchg
adc
inc
dec
incb
adc
imul
sub
test
pop
cmpsb
xchg
mov
and
pop
adc
subl
gs
xchg
in
xor
fimull
add
js
push
xor
xchg
mov
fisubl
mov
pushf
out
shll
push
pop
lcall
push
pop
dec
ja
imull
test
fiaddl
xchg
add
test
lea
cmp
sbb
dec
sub
fildl
ljmp
inc
add
add
xor
dec
push
sti
test
mov
or
xchg
mov
push
fistl
hlt
leave
testb
scas
clc
jmp
pop
insb
push
pushf
stos
cwtl
xor
aaa
jns
mov
stos
lahf
fwait
xchg
push
push
push
lods
xchg
xchg
mov
fs
shr
xchg
adc
dec
mull
xchg
rcrb
xchg
aas
dec
roll
jl
fs
xor
sahf
std
and
sarl
xor
pop
push
adc
dec
lcall
jns
and
mov
fidivrs
pushf
das
lahf
xor
mov
sbb
xchg
das
loopne
jge
add
cltd
jle
cmpsl
dec
lods
adc
je
mov
or
jge
jbe
sub
stos
jo
xor
lods
adc
push
sbb
xlat
push
and
adc
stc
pushf
mov
cmp
psllw
push
aaa
into
xor
jns
in
loopne
pop
and
stos
andl
aas
pop
repz
jecxz
fcompl
fsubrl
ljmp
mov
in
mov
or
push
xchg
mov
pop
lea
imul
add
cmpsl
mov
sub
inc
pop
clc
aam
aas
pop
sbb
xchg
push
addl
out
cli
cmp
mov
mov
jmp
adc
pop
adc
fnstenv
sahf
jnp
out
out
jl
and
dec
xor
sub
lods
mov
imul
cwtl
mov
in
repz
fs
mov
push
lret
push
mov
xor
mov
adc
sub
fiaddl
lcall
frstor
shlb
jle
lcall
insl
stos
inc
xchg
mov
jge
adc
sub
lahf
and
notl
mov
lods
pop
bound
test
scas
ds
fstpt
hlt
test
push
sub
cmpsl
cmp
mov
push
xor
pop
xorb
xor
xchg
imul
jmp
mov
mov
xor
mov
cmp
mov
inc
mov
ja
and
sbb
fbstp
sub
pushf
bound
dec
cmpsw
jecxz
xorb
or
lock
and
add
fdivl
inc
push
cmp
inc
fiadds
sbb
dec
cmp
sub
in
mov
pop
sahf
dec
xchg
shr
mov
xor
mov
xchg
or
sub
cli
push
movsl
bound
cmp
xchg
xchg
icebp
lret
insb
and
lods
mov
cli
imul
fmuls
std
cmp
data16
into
les
ljmp
in
lret
jmp
xchg
cmp
dec
cmp
mov
and
cmp
jg
es
mov
lds
sbb
pop
clc
mov
daa
pop
xchg
aaa
repnz
lods
inc
push
or
mov
int
cmp
loope
or
inc
push
sub
xor
rol
mov
xchg
sub
sub
mov
mov
cmc
mov
notb
setl
inc
and
fidivs
insl
dec
mov
dec
insl
rorl
adc
sarb
xchg
sbb
sub
mov
lock
xchg
inc
or
push
bound
inc
lret
enter
cmp
mov
imul
mov
pop
icebp
add
mov
fs
pushf
push
aam
cmpsb
in
jae
orl
cmp
push
inc
cmpsb
lea
out
jo
orb
neg
out
cmpsl
push
and
jno
lods
sbb
xchg
mov
rorl
jno
and
ss
cld
out
fnstsw
das
dec
test
xchg
lods
into
push
mov
jnp
lcall
dec
xor
or
jnp
stos
mov
sbb
jb
jl
cld
add
repz
cmc
das
cld
les
pop
aad
push
aad
mov
push
mov
aaa
inc
mov
push
pop
sub
sbb
mov
shlb
popf
adc
int3
xor
jbe
xchg
mov
gs
in
and
dec
or
push
jb
ja
adc
cli
mov
add
adc
je
xchg
icebp
je
out
std
cmpsb
xchg
cmp
add
out
sub
cmp
jbe
pop
cmp
sbb
adc
and
call
lret
mov
add
pop
pop
pop
lods
cmp
ret
aad
and
jmp
sbb
or
jle
adc
mov
fwait
jnp
jmp
clc
sbb
scas
add
mov
int
xchg
inc
roll
mov
mov
insl
lock
lahf
test
clc
in
lcall
push
add
jnp
inc
xor
gs
jns
push
pop
cmp
js
dec
leave
add
scas
mov
xor
mov
cmp
test
pop
cmp
push
aas
inc
mov
popa
icebp
popf
aaa
cmc
movsl
xchg
fisttpll
clc
xchg
mov
inc
xchg
ds
ljmpw
in
dec
out
filds
dec
push
xor
or
mov
inc
mov
les
outsb
xlat
sbb
jae
pop
daa
xchg
stc
popa
shll
cs
stc
jg
ret
jne
mov
call
dec
das
mov
jns
mov
xchg
sbb
enter
push
lahf
xchg
xchg
xchg
nop
lcall
adc
push
je,pn
stc
dec
inc
cmp
adc
ljmp
imul
xor
test
fstps
mov
jmp
lds
dec
push
cmp
pop
out
sahf
outsl
fs
cmp
in
scas
add
cmp
cmp
sysexit
aaa
loope
sbb
int
sti
dec
lahf
dec
in
ja
scas
mov
or
mov
out
inc
xchg
std
xor
cmp
jl
sub
jecxz
iret
mov
or
sbb
ret
mov
dec
adc
cs
dec
mov
scas
jmp
popf
arpl
jl
cli
mov
aas
mov
repz
jp
in
aad
fdivr
leave
jmp
xchg
add
dec
push
pop
sub
int
cmp
inc
int
sbb
andl
fiaddl
sbb
xchg
inc
divb
jns
mov
add
xchg
ficoms
xchg
pusha
dec
jo
add
out
add
test
insl
or
add
sti
xchg
cltd
push
js
sub
adc
pop
popf
jnp
dec
es
lock
jne
lea
jns
jecxz
mov
dec
push
xor
push
or
aas
ljmp
jnp
out
repz
inc
das
sbb
pushf
xor
not
gs
xor
into
movsb
rolb
dec
xor
imul
jnp
push
sbb
cmpsb
mov
push
test
popa
cs
mov
xor
pop
movsb
jecxz
data16
sbb
popf
mov
inc
xor
hlt
mov
jb
shr
fcmovnbe
xchg
mov
adcb
push
cmp
push
rorl
sbb
and
out
mov
inc
inc
xchg
cmp
adc
mov
mov
cmp
das
mov
jp
xor
xchg
mov
leave
xor
out
cmp
xlat
ret
push
fcomps
addr16
int3
sbb
les
add
sahf
in
mov
out
push
scas
out
scas
rcrl
jo
rcr
test
lods
mov
insl
jae
int
mov
xchg
mov
sbb
or
jp
sub
mov
jnp
inc
jecxz
das
hlt
mov
sarb
xchg
jge
cld
xlat
cmc
fnstsw
sbb
pop
jl
hlt
jnp
mov
inc
addr16
lcall
mov
fdivrs
lock
jo
inc
xchg
adc
or
ja
mov
dec
gs
iret
mov
mov
cli
fs
push
lods
push
test
or
aaa
jmp
push
call
and
std
inc
jnp
test
mov
cmp
inc
mov
rcrl
xchg
call
xchg
out
lock
ret
dec
push
adc
inc
arpl
mov
mov
xchg
sub
cmp
push
push
and
in
pusha
imul
movsl
sbb
ret
fisubl
mull
cmpsb
arpl
sub
and
hlt
adc
push
inc
xor
iret
xchg
push
mov
insb
sarl
lret
pop
fistpll
ffree
iret
mov
xchg
in
fisubrs
pop
nop
std
cmp
loope
shll
sub
call
sbb
or
push
xchg
test
or
mov
adc
icebp
adc
jo
arpl
mov
pop
pop
ret
sub
outsl
popf
xchg
rcrb
pop
test
mov
pop
sub
sbb
movb
mov
pop
pop
jg
lods
lahf
aas
ret
rcl
ret
subb
aam
mov
shrl
push
lret
enter
ja
scas
xor
mov
es
jbe
and
dec
push
incb
sbb
insb
sti
adc
dec
shrb
dec
add
subl
or
dec
sbb
pop
loop
test
dec
inc
mov
addr16
sbb
cs
mov
adcl
mov
pop
or
addl
dec
stc
dec
cmp
dec
ret
dec
aas
bound
fstpt
jns
push
xor
icebp
testl
jl
mov
xor
xchg
jne
pop
popf
adc
loop
mov
pop
insb
fildll
shl
cmpb
jnp
aad
push
inc
inc
mov
loopne
in
loope
in
pop
xchg
add
ja
jmp
test
adc
mov
lahf
stc
stc
mov
dec
xor
cmovs
mov
jecxz
cs
sbb
aaa
cs
xchg
inc
sbb
cs
mov
pop
inc
sbb
cli
lds
lds
cmp
sbb
int
sbb
cld
dec
xor
mov
sbb
xor
or
or
sub
jne
jp
sbb
push
es
lock
dec
jecxz
icebp
dec
mov
inc
cmp
push
sub
mov
push
jecxz
xor
fisubl
stos
mov
lret
shrb
or
or
add
aaa
scas
xchg
jbe
jb
into
aaa
sti
jnp
movsl
cmovns
push
stos
jg
addb
icebp
push
push
xor
into
dec
xchg
xchg
insl
and
out
pop
outsl
xchg
fldenv
jo
sub
mov
fisubrl
imul
pop
aas
adc
out
add
xor
pop
push
jl
iret
xchg
cs
lea
pop
insl
cmp
jge
nop
cmpsb
push
mov
lret
mov
push
xor
ds
mov
clc
xor
cmpsb
loop
dec
ret
mov
ljmp
rclb
mov
into
adc
inc
lods
mov
call
xor
jg
jge
fisttpll
ret
pop
test
cltd
cmp
sbb
popa
lea
mov
fs
movsb
push
dec
push
push
sub
cmp
mov
test
test
addb
idiv
mov
cmpsb
es
aam
jo
les
jns
in
pop
int3
push
fiaddl
push
pop
pop
fcoml
jl
add
xchg
in
mov
jb
cmp
and
xchg
adc
push
or
sahf
stc
jl
in
lock
or
into
hlt
loope
bound
push
aad
lods
inc
lcall
push
ss
inc
sbb
xchg
ds
push
pop
fdivrl
jle
jecxz
imul
loopne
push
jbe
lret
or
fs
popa
lahf
mov
jl
xor
movsb
xlat
lret
inc
cld
or
sarl
sbb
dec
pop
stos
insb
sub
jbe
loopne
outsl
sti
dec
lods
aam
xchg
and
test
and
loop
mov
push
idivl
je
xor
scas
add
push
or
ljmp
aas
aas
hlt
push
pop
sub
and
das
ss
add
call
jmp
mov
add
dec
mov
cmp
imul
outsb
in
inc
xlat
adc
outsl
xor
pop
sbb
std
sbb
lcall
cmp
in
push
cmc
fwait
int
jo
sub
mov
out
jbe
aas
shrl
test
aam
jbe
sti
cmp
add
and
mov
test
jmp
leave
mov
repz
or
fcompl
idivl
ret
xchg
push
nop
fildll
inc
test
outsl
rolb
push
jno
mov
es
inc
or
or
roll
xor
dec
in
bound
jbe
jo
pop
call
cmp
ret
jne
mov
ds
movsl
loop
fucomp
cmpsl
push
repz
fcoml
mov
sbb
jnp
pushf
push
ss
call
repz
out
loop
cwtl
int
xchg
js
fnstcw
jmp
sbb
test
loopne
mov
xor
xchg
in
loope
out
cld
cli
adc
insb
pop
dec
mov
jae
xor
cwtl
out
out
mov
mov
int3
xchg
aas
cmpsl
outsb
jecxz
add
push
stos
lret
pusha
inc
popa
jb
or
jbe
test
xchg
pop
xor
add
push
lret
jns
sub
or
call
or
add
mov
in
mov
test
pop
inc
mov
cmp
int
xchg
je
fs
aam
js
cltd
scas
sub
and
cmpl
inc
aad
cmpsb
into
repnz
jbe
pop
lret
stos
ljmp
xrelease
inc
lock
ljmp
xor
and
sub
js
fsub
je
pop
or
faddl
adc
cmpsb
jmp
pushf
push
inc
and
jge
mov
inc
dec
pushf
clc
aas
mov
mov
in
lock
enter
das
inc
jo
cli
push
bound
push
jne
dec
mov
int
lcall
ret
jno
push
pop
lea
icebp
and
inc
or
shrl
xchg
xlat
fdivrp
mov
mov
xchg
clc
fmuls
sub
mov
jno
and
mov
inc
stos
push
pop
out
scas
pop
dec
mov
cli
nop
aad
dec
imul
scas
push
and
push
dec
call
and
pop
test
in
jbe
mov
int3
pop
out
out
popf
push
mov
jbe
enter
mov
mov
lret
mov
out
lret
cmp
xorl
test
add
mov
mov
test
push
pushf
es
push
cltd
mov
fidivs
xchg
push
fisubs
dec
dec
test
pop
pop
or
add
loopne
in
fcmove
add
add
fistps
xchg
mov
or
mov
add
fldenv
sbb
xor
arpl
setg
mov
mov
push
hlt
sub
bsf
ret
std
roll
xchg
mov
xor
inc
ret
sbb
sub
cltd
jne
insl
and
inc
or
js
mov
xlat
fmuls
decl
jns
xor
dec
mov
in
pop
xor
in
ficompl
xchg
xor
inc
pop
nop
pop
pop
scas
test
cmpl
dec
lret
lret
mov
push
das
popf
xor
jl
and
pushf
test
jmp
js
int3
mov
push
sub
cltd
inc
push
jge,pt
scas
lods
add
push
popa
mov
cmp
or
adc
fnstsw
mov
mov
iret
inc
or
add
repz
pop
daa
aas
adc
pop
out
dec
inc
xor
stos
jmp
cli
pop
cmc
mov
scas
cmp
mov
mov
js
not
pop
aaa
mov
cmp
daa
mov
xchg
enter
out
mov
imul
mov
mov
lcall
push
jle
je
mov
out
cld
insb
fwait
xchg
jmp
sub
and
jecxz
pusha
aaa
xor
popf
repnz
adc
in
in
iret
dec
ljmp
gs
sti
mov
js
and
mov
push
and
shll
pushf
sbb
stc
arpl
ret
repz
inc
jge
lcall
iret
sbb
mov
mov
cmp
xor
fistpll
sub
addb
mov
test
mov
pop
lods
xor
js
ljmp
out
jg
jge
or
xlat
push
xlat
mov
mov
or
scas
mov
ja
imul
or
repz
jp
movsl
dec
dec
jbe
xor
dec
jbe
shlb
mov
cmpsl
nop
xchg
push
shll
insb
jmp
jecxz
mov
jge
adc
pop
fs
loopne
aaa
aaa
mov
subl
and
sub
fstpl
adc
push
mov
mov
and
jg
dec
inc
xor
sub
sbbl
andl
mov
fiadds
add
cmp
int3
dec
mov
notl
add
jecxz
sarl
pushf
icebp
popf
mov
cmp
jecxz
aam
data16
sbb
jbe
jbe
cli
lcall
inc
aad
cmpsl
test
xchg
sbb
sbb
mov
push
inc
dec
jnp
pop
push
in
xchg
mov
aad
pop
xor
cltd
cmp
lods
fildl
fs
lds
push
aaa
or
lret
xchg
xchg
add
jge
imul
dec
pop
movsb
ret
pushf
xchg
cs
enter
lcall
rcll
fcoml
into
push
mov
mov
cmp
pop
adc
ljmp
ret
jmp
dec
jmp
push
dec
pop
testb
imul
iret
mov
pushf
add
ss
or
ljmp
cli
int3
stc
ret
dec
cmp
scas
pop
xor
push
pushf
mov
out
loop
rcrl
and
popf
in
cmp
lcall
scas
addr16
loop
jns
mov
rcr
arpl
lods
inc
push
imul
jo
sub
movsl
cmpsb
push
scas
mov
xor
add
push
ret
jne
js
pop
dec
cmpb
ret
popa
stos
jl
add
mov
mov
mov
notl
ret
in
jge
inc
loop
add
rclb
mov
jmp
and
jb
adc
adc
ja
mov
icebp
mov
inc
pop
mov
inc
and
sbb
xchg
shrb
jns
add
adc
add
and
push
add
push
push
mov
lcall
mov
inc
cld
xchg
out
imul
or
lods
jns
jno
mov
jmp
adc
js
pop
into
xor
and
bound
aas
sub
or
jp
xlat
lret
ds
jne
push
xchg
hlt
clc
add
pop
dec
addl
in
lods
inc
andb
xor
jmp
ret
subl
mov
insl
xor
pop
mov
fmulp
stos
fnstenv
fcomip
test
adc
scas
call
das
xchg
test
xchg
mov
sub
mov
mov
cltd
add
iret
adc
jbe
shlb
call
xchg
and
inc
cmp
jecxz
out
ficomps
push
mov
mov
inc
jbe
jno
imul
shrl
add
imull
sbb
jae
push
subl
popf
lods
or
int
inc
push
jbe
out
cmpsb
mov
add
leave
mov
cmp
test
bound
stos
pop
out
inc
push
push
and
sub
inc
lcall
mov
insb
dec
loop
inc
scas
aaa
xchg
jg
cmp
add
pop
and
jbe
fimull
jl
movsb
xor
fidivs
lods
mov
in
mov
outsl
mov
ja
gs
ror
repz
xor
leave
cli
sub
xor
imul
rorb
shrb
and
xchg
cmp
xor
je
aad
cmpsb
jle
mov
fnstenv
lock
inc
cmp
adc
inc
es
stos
repnz
xorl
sub
add
std
cld
add
sahf
dec
inc
inc
xor
or
mov
or
add
jne
repnz
cmp
jg
cld
imul
aas
cltd
outsb
ja
sarb
inc
or
adc
jp
outsl
fidivrs
push
xor
data16
outsl
adc
das
shlb
bound
xchg
in
iret
sub
adc
add
pushf
xchg
lea
movsl
sub
daa
in
fildll
test
mov
bswap
aad
inc
xor
rolb
xchg
or
adc
ljmp
xchg
outsl
sub
xor
ss
pop
lods
jae
push
add
insl
imul
or
out
ret
mov
rcr
ja
mov
mov
sub
mov
repnz
out
in
and
pop
mov
push
or
cmp
shll
or
out
rorl
and
mov
out
mov
pop
mov
cwtl
jnp
cwtl
pop
jae
push
dec
rolb
pop
lds
pop
inc
add
cmp
out
dec
xor
jge
jae
out
fs
mov
js
cmp
in
int
pop
jbe
mov
xchg
dec
pop
mov
xchg
shll
push
sub
push
jne
cmp
lret
and
add
popa
lea
fsub
fldt
and
idivl
mov
mov
push
test
push
xor
jle
jae
insl
or
mov
mov
inc
xor
enter
and
push
xor
jae
cmpsb
sbb
clc
negb
push
mov
jb
lds
xchg
push
dec
mov
mov
loopne,pt
mul
shr
sbb
xor
cmp
test
sub
xor
cmpsb
scas
rcl
pop
fnstcw
rorl
xchg
xor
pop
sti
xor
and
cmp
nop
mov
enter
out
jl
sub
les
inc
ja
mov
lret
dec
mov
sbb
sub
jmp
sbb
lret
push
sar
add
mov
fcomp
cld
pop
mov
and
xor
jg
dec
mov
jo
mov
into
xor
loope
flds
lahf
outsb
movsb
out
arpl
mov
push
xor
stos
jbe
out
fs
mov
or
mov
mov
jl
into
mov
adc
push
adc
int3
sbb
aad
repz
hlt
or
mov
sub
or
out
cmp
adc
mov
pop
push
pop
enter
loope
inc
mov
lea
mov
jb
jnp
xor
divb
sub
fsts
popa
pop
gs
ds
ss
clc
pop
push
cld
inc
lahf
scas
mov
inc
mov
lods
sbb
mov
test
mov
mov
cmc
adc
jns
xor
add
or
call
xchg
aaa
pop
or
fnstcw
add
and
lods
sahf
aaa
aad
dec
fstpt
icebp
outsb
add
in
insb
test
lcall
lcall
test
mov
cltd
cmp
xor
adc
sbb
insb
xchg
mov
cltd
inc
dec
dec
adc
pop
xlat
jge
push
cmp
mov
les
aaa
ljmp
loopne
mov
test
sub
mov
adc
outsb
push
in
or
push
pusha
adc
sub
aaa
std
jne
rorb
fs
xlat
lods
add
in
sub
pop
ljmp
sub
push
mov
loopne
ror
inc
stos
int3
lods
mov
out
js
call
repz
push
xor
adc
mov
into
aam
dec
pop
pusha
shlb
rcrl
fwait
push
lcall
rcl
or
dec
sub
mov
ljmp
dec
push
dec
out
bound
or
mov
ja
gs
cmpsb
mov
inc
call
mov
sahf
fmul
cs
lret
je
sti
adc
rolb
jmp
jp
push
popa
cmpsb
pop
popa
adc
bound
adc
push
scas
into
add
sub
daa
mov
sbbb
mov
test
outsb
fcoms
pushf
jmp
mov
dec
push
fs
dec
hlt
cwtl
jns
lock
adc
jbe
loop
inc
sub
test
insl
sbb
jnp
ljmp
inc
cmp
push
stos
xor
push
pop
out
mov
outsb
push
movsl
nop
in
push
xor
dec
andl
dec
dec
cmpsl
sti
and
cmp
imul
in
pop
out
xchg
ret
xor
sbb
in
cmp
xchg
dec
loopne
cmp
cwtl
jae
pop
popa
cmc
or
dec
push
lcall
sar
cmp
add
rclb
dec
add
cltd
and
jl
cmp
push
idiv
ds
lods
hlt
adc
push
push
notb
sbb
jl
stos
repz
cli
mov
cmpsb
inc
decl
mov
inc
push
push
out
jecxz
adc
mov
ret
insl
push
push
dec
out
rorl
cld
cmp
xor
addb
fists
xor
movsl
pop
cmpsl
and
or
stc
cmp
mov
fsubr
jns
mov
rcrb
out
adc
mov
inc
jmp
pushf
dec
aas
outsb
mov
pop
xchg
pusha
jecxz
mov
test
sbb
jp
push
jb
jo
dec
mov
mov
push
iret
pop
loop
in
mov
sub
test
test
xchg
scas
jle
jmp
ja
xor
mov
and
mov
int
or
inc
loop
mov
shll
mov
push
aaa
inc
lock
lods
jns
lods
sbb
inc
pop
jle
aaa
lret
lods
sbb
cmpsl
mov
aaa
push
in
push
mov
sub
jbe
xchg
push
inc
or
mov
ret
sarl
data16
push
ja
mov
add
push
ret
inc
js
pop
idivl
jle
mov
enter
pop
dec
cmc
shrb
lret
gs
xchg
sahf
mov
mov
mov
or
add
pop
cmc
dec
pop
ds
clc
pop
rclb
mov
or
add
mov
cld
sub
add
roll
stc
cltd
sbb
mov
pusha
pop
or
xchg
clc
xor
or
movsl
xchg
adc
pop
int3
mov
add
mov
add
xor
xchg
cltd
inc
push
in
add
pop
dec
iret
js
clc
das
and
test
ret
jle
out
jnp
subb
mov
sbb
dec
gs
lcall
lcall
mov
mov
fistl
outsl
xchg
add
pop
lds
fst
add
and
xchg
inc
pop
mov
sar
mov
xlat
cwtl
xchg
nop
xchg
mov
bound
mov
add
jns
das
repz
cmp
xor
jmp
outsb
xor
movsb
jg
jo
jns
lahf
dec
test
arpl
sub
mov
mov
in
cmp
cwtl
add
cmpsl
push
in
mov
lods
dec
repz
cmp
xor
mov
xchg
ja
nop
jae
outsb
and
ljmp
sub
ja
sbb
shrl
icebp
pop
lret
loope
sbbl
adc
fdivr
dec
emms
push
mov
sti
sahf
inc
mov
fst
popf
loopne
cmp
pop
push
push
cmp
push
mov
or
mov
jl
mov
lea
stos
loope
lods
int3
jl
ret
and
rorb
xchg
lret
jbe
jmp
xchg
subb
push
mov
popf
pop
add
push
lock
xchg
pusha
add
sub
cwtl
hlt
insb
or
clc
xor
jns
cli
sub
pop
loop
sub
ljmp
sbb
sub
pushl
out
sbb
imul
jns
add
stos
xor
push
lds
ja
cmp
test
mov
jle
lea
scas
xor
jnp
pusha
scas
mov
insb
sub
lahf
out
sub
mov
pop
add
lds
cmp
push
pop
rcl
xchg
enter
mov
mov
es
movsb
int3
xor
push
lods
xor
sti
add
dec
shll
rcrb
cmpb
mov
pop
inc
insl
xchg
push
xor
pop
mov
mov
adc
ret
je
outsl
cltd
inc
inc
popl
stos
pop
mov
test
daa
mov
and
cltd
pop
popf
ss
jl
jbe
iret
xor
sbb
push
popa
cmp
and
movsl
lods
fisubrl
test
xor
shrl
push
dec
xchg
cmc
add
cmp
arpl
and
push
out
sbb
mov
sbb
mov
lock
sub
repz
daa
or
mov
outsb
add
xor
loop
jmp
fs
jno
add
sub
pop
dec
scas
jne
pop
clc
outsb
jns
xor
jmp
fstpt
jb
lret
test
dec
sub
cli
sbb
pusha
dec
sti
clc
filds
icebp
add
sahf
and
add
add
mov
inc
cmpsl
xlat
mov
inc
in
test
inc
xchg
std
xorl
dec
dec
iret
ret
xchg
mov
push
inc
arpl
imul
out
lods
and
pop
cs
stc
aam
mov
std
call
sahf
add
jge
ja
repnz
dec
adc
cmpsl
hlt
mov
rorl
jp
testl
mov
bound
add
xor
imul
or
cwtl
in
es
repnz
cmp
fcos
js
pop
xchg
out
lahf
push
push
push
dec
xchg
or
pop
je
xor
dec
fadds
jg
inc
sub
outsl
test
xchg
jne
shlb
cmp
or
btc
jecxz
cmp
data16
and
mov
cmp
in
inc
lds
mov
sub
loope
jae
mov
or
repnz
repnz
in
call
add
aaa
fisubrs
fidivl
aad
aaa
xor
clc
mov
data16
jnp
lret
dec
or
lret
adc
xor
or
mov
aam
push
int3
sub
repz
sbb
mov
shlb
cmpsl
push
repz
sahf
xor
sbbb
js
sub
pop
add
inc
sbb
adc
jbe
out
aaa
jge
push
ljmp
iret
imul
in
sbb
and
pop
lock
in
xor
mov
fmuls
sbb
add
mov
test
popf
dec
cmp
ja
out
xchg
ss
pop
sbb
es
cld
outsb
aas
fadd
dec
push
push
out
jns
and
test
adc
rcll
incb
rcrb
push
cwtl
xchg
mov
ret
bound
ds
mov
cld
jb
cmp
jp
daa
add
pop
mov
jns
add
in
js
xchg
cmp
cmp
pushl
movb
xchg
lret
sarb
in
fcoms
or
mov
dec
test
orl
cld
les
les
adc
in
xchg
ja
sarb
pop
pusha
push
xchg
jecxz
insb
mov
ja,pt
xor
xchg
imul
add
pop
and
jl
xchg
out
mov
mov
mov
es
imul
call
dec
mov
push
jbe
sbb
sbb
shlb
push
popa
sub
clc
je
and
or
adc
mov
push
stos
push
mov
fidivs
xor
loop
and
fwait
jmp
popf
lea
out
adc
sub
inc
test
push
sbb
test
or
mov
xchg
xor
insl
inc
or
sbb
fs
xchg
push
mov
test
mov
push
jp
xchg
sbb
pop
cltd
mov
and
hlt
or
pop
int
stc
jecxz
sub
out
mov
or
or
out
push
sub
rorl
les
pop
sub
xlat
push
test
out
fistps
and
pop
mov
fwait
dec
xchg
sahf
lods
test
pop
dec
out
jae
imul
jecxz
test
les
mov
jge
inc
sbb
stos
sub
xorl
mov
out
lret
loop
hlt
push
mov
aam
dec
push
push
lock
push
or
mov
cmp
and
pop
clc
popf
adc
dec
insb
cmp
imul
inc
cmp
ja
mov
jo
mov
aaa
mov
sahf
mov
pushf
and
outsb
in
ds
pop
or
inc
xchg
mov
cmpb
stc
xchg
jae
sbb
mov
call
mov
jbe
jp
dec
sbb
and
sub
scas
dec
pop
dec
pop
aaa
mov
cmpsb
cwtl
movsb
in
popa
mov
rcr
mov
rcr
filds
sub
stos
cld
sahf
pop
call
je
imulb
cmpsb
cmp
push
xor
mov
sub
aas
inc
push
cld
mov
inc
and
push
ss
leave
out
into
lock
add
jb
ja
dec
sbb
cmp
jnp
lock
mov
push
ja
xchg
or
int3
add
adc
sub
fmul
mov
adc
out
jbe
sbb
sbb
stos
lea
imul
popl
xchg
and
outsb
xor
jmp
push
adc
add
aaa
test
movsl
das
add
lret
push
lea
push
insb
shrl
xchg
js
aam
xchg
pop
fisubs
sti
xor
cmovg
sar
std
mov
mov
pop
cs
lds
lret
adc
inc
fs
jne
dec
loop
cmp
repnz
loope
shlb
jge
arpl
adc
push
and
rcl
and
je
jge
mov
addr16
cltd
cmp
mov
mov
cltd
movsl
jae
cmc
add
iret
orb
adc
jns
addr16
arpl
pusha
lret
dec
rcll
and
push
lahf
pop
dec
loopne
inc
mov
pushf
movsb
aaa
or
scas
stos
ljmp
xchg
inc
push
sub
sarl
sbb
xor
lahf
sahf
into
cmp
int3
cwtl
dec
aad
insl
push
fcoml
aam
sahf
inc
pushf
mov
push
inc
sti
aas
lods
jg
rcl
fmuls
jp
pop
rcrb
out
pop
lods
into
inc
mov
pop
stos
adc
pslld
subb
insl
in
push
push
adc
jmp
mov
xchg
imul
test
lds
sahf
mov
scas
and
insb
cwtl
mov
lret
jae
fidivs
gs
insl
insb
jae
cmpsb
dec
sbb
xchg
arpl
or
es
mov
das
add
add
dec
cld
fucomip
and
vaddsubps
lcall
jmp
push
rorb
sbb
mov
clc
cmpl
pop
sbb
gs
or
xor
xchg
dec
or
loope
jl
vminpd
out
div
push
sbb
jge
adc
insb
cmpsb
fnstsw
xor
aaa
add
dec
sti
clc
push
xchg
push
bound
or
xchg
sub
test
add
jge
jb
mov
es
cmp
push
stc
mov
sbb
mov
push
dec
mov
idiv
movsl
xchg
pop
mov
aaa
mov
xchg
cs
nop
dec
nop
std
or
punpckldq
mov
imull
and
jo
pop
cmc
rolb
mov
sbb
test
out
popl
gs
inc
insb
rcll
pop
jbe
jbe
addr16
loope
add
xchg
mov
push
inc
cmpb
cmpsb
dec
jge
dec
scas
xor
out
lcall
or
push
ljmp
loopne
shll
jne
test
or
cmp
bound
mov
adc
out
int3
fabs
dec
mov
jo
div
inc
loope
pop
repz
jbe
dec
outsl
xlat
dec
xor
shrb
aam
mov
les
add
mov
xchg
jecxz
jnp
lahf
gs
add
xor
fbstp
and
mov
or
xor
add
mov
sub
jmp
xchg
call
add
repz
loopne
xchg
jns
jmp
fiadds
add
push
sub
pop
leave
into
push
xor
jp
and
lods
pop
dec
cmp
aas
push
pop
por
push
popa
xor
dec
xor
mov
mov
sbb
std
out
push
jp
sbb
mov
sub
pop
push
stos
jb
and
cmpsl
fs
cld
sahf
iret
scas
in
jne
sbb
and
xor
lock
sti
iret
push
mov
add
mov
addr16
xchg
mov
jp
mov
and
pop
mov
fildll
mov
adc
adc
pop
mov
sbb
or
add
enter
mov
push
pop
sub
notb
arpl
pop
adc
mov
add
iret
mov
sti
pop
mov
xchg
int3
add
hlt
ficompl
stc
mov
notl
pop
stc
lods
lret
mov
decb
rolb
js
lds
ds
cmpsl
mov
movaps
mov
fisubrl
bound
jb
fcmovnb
cmp
and
inc
ret
jae
mov
inc
cmp
jmp
sarl
repz
insl
inc
add
aam
sbb
inc
sub
out
mov
jp
ss
cmp
cmp
or
test
inc
or
mov
lahf
adc
push
mov
dec
pop
fs
pop
fwait
xchg
iret
lret
sub
xlat
cmp
pop
call
inc
imul
idivb
dec
pop
adc
pop
outsl
ret
adc
pop
add
cmp
and
push
mov
mov
call
mov
ret
insb
mov
xor
popa
stos
data16
cwtl
sub
cli
dec
ja
mov
pushf
cmp
adc
pop
xchg
dec
sahf
jbe
pop
inc
stos
sbb
jae
inc
inc
movsb
inc
fnstenv
xor
add
pop
ja
enter
push
push
sub
sahf
leave
cmp
or
sub
jb
rclb
cmpsl
std
xchg
sub
dec
iret
clc
sbb
rcrb
call
fildl
dec
xlat
lods
mov
js
pop
push
xchg
dec
outsb
sub
out
dec
inc
add
inc
sbb
testl
xchg
sbb
gs
push
aad
enter
cwtl
adc
test
mov
repz
fs
std
insb
xchg
mov
lret
mov
sub
or
jg
cmpsl
out
pusha
ret
dec
xor
int
je
or
ja
out
leave
jno
push
int
lcall
and
xchg
mov
push
repnz
mov
mov
mov
pushf
in
mov
jl
shll
rcr
ja
cltd
dec
stos
nop
cmp
or
or
or
hlt
sub
lods
aaa
push
insb
insl
mov
sbb
push
push
push
xchg
jno,pt
xchg
pop
cmpl
out
adc
leave
icebp
stos
loop
mov
mov
adc
cs
scas
pop
inc
pop
push
test
push
into
cmpsb
jne
jecxz
push
inc
nop
fcmovnu
pop
adc
sbbl
and
mov
mov
call
jae
jne
out
mov
mov
leave
cmp
aaa
pushf
fsubrs
inc
aam
inc
fisttps
xor
push
ljmp
stos
outsb
loop
mov
outsl
orl
sub
cmp
dec
shll
lret
pop
or
or
daa
lret
cmpsl
adc
shlb
icebp
lds
pop
mov
fstl
testl
mov
jl
in
leave
cmp
ret
pop
mov
in
jl
fisttpll
xchg
inc
lcall
xor
scas
adc
mov
push
mov
mov
stc
or
pusha
sub
adc
mov
iret
dec
or
gs
push
andb
es
xchg
jmp
je
inc
adc
push
jmp
mov
pop
mov
xchg
xor
mov
pop
push
xchg
mov
sbb
push
movsl
int3
or
divb
cs
cmp
mov
insl
xchg
jmp
int
push
cld
repz
or
push
test
add
sti
ljmp
pushw
lods
or
add
adc
push
jmp
pop
insb
mov
lock
add
pop
cmc
push
fbld
stos
jl
xchg
fcomp
stos
inc
pop
push
mov
jl
xchg
mov
shll
into
sub
lahf
out
aam
and
pushf
adc
in
pusha
inc
inc
loopne
insb
je
cmpsb
xchg
hlt
fsubrl
into
pop
stc
dec
dec
hlt
in
mov
jb
jp
and
lret
pushf
dec
push
dec
cmpsb
fbstp
cs
ss
push
pop
pop
xor
imul
rorl
and
inc
and
testb
inc
sbb
push
and
insb
dec
inc
test
sti
or
call
dec
mov
cmc
sbb
loope
add
gs
fstl
popa
lock
mov
mov
bound
lahf
loopne
pop
mov
orl
mov
aad
adcb
xor
in
inc
pop
pushf
popa
or
push
enter
push
fsub
add
test
shlb
xchg
adc
mov
fisttpl
ds
insb
jae
call
push
mov
in
pop
xchg
cli
stc
mov
push
scas
jmp
mov
adc
popf
inc
fs
test
xor
jp
out
jo
cmp
xorb
mov
push
mov
test
ss
test
jl
movl
push
out
bound
inc
out
lea
mov
add
sbb
aam
xchg
sti
add
sti
cmpsb
orl
push
push
jecxz
stos
pop
test
xchg
push
jmp
mov
loopne
mov
call
outsl
add
lods
lcall
orps
jnp
pop
test
stc
xor
inc
rcll
mov
push
and
push
test
cmp
daa
jnp
inc
in
lds
and
dec
shll
pop
lahf
pushf
subb
mov
out
pusha
es
push
jno
add
popa
sub
xchg
inc
shlb
stos
in
ficompl
fdivl
ja
cmp
lret
pusha
cmpb
leave
cli
xchg
pmulhw
push
push
adc
or
push
ja
or
cmp
cmpsl
add
mov
jl
ja
int3
gs
dec
cmp
dec
orb
mov
mov
mov
ffree
scas
stos
fdivl
inc
mov
dec
mov
cmp
ja
mov
test
es
pop
fisttps
ja
popf
push
push
or
pop
lods
pop
frstor
int
leave
mov
pop
push
sub
jo
out
push
mov
out
fsubrl
loop
and
cltd
in
test
xlat
jbe
sub
aad
sub
add
adc
inc
popf
push
or
mov
hlt
lret
cld
sub
xchg
or
repnz
mov
je
inc
cwtl
or
shlb
data16
mov
add
push
xchg
sbb
dec
push
mov
arpl
xor
or
jecxz
scas
mov
int
cmp
inc
jl
clc
stos
stc
lods
or
inc
xchg
insl
fsubr
xchg
add
sub
sti
push
imul
mov
fdivrl
testl
ret
or
rorl
aaa
or
mov
adc
popf
aas
ds
ljmp
call
fisubl
cld
xor
in
scas
mov
shl
xor
ss
ret
in
fmulp
int
pop
push
sub
popa
adc
push
jge
out
push
loopne
js
add
pushf
inc
jne
shl
in
jbe
cmp
in
adc
inc
add
nop
daa
idivl
lds
jo
push
inc
xchg
pop
xchg
ret
cmp
mov
loop
lahf
test
cmp
insl
push
sbb
or
ret
loop
js
xor
dec
sahf
fldt
push
push
cmc
cmp
clc
dec
xor
pop
and
stos
repnz
test
add
mov
push
lcall
mov
sahf
xchg
pop
divb
addr16
jle
iret
clc
jbe
inc
loopne
inc
xchg
xchg
sub
mov
cmp
int
push
mov
add
mov
scas
into
scas
lods
push
popa
jae
cld
push
stos
dec
cmp
mov
rcrl
sbb
test
inc
scas
repz
faddp
std
in
pusha
iret
dec
push
inc
pop
jnp
push
jne
das
mov
int
jmp
xchg
pop
xchg
ret
jo
fistpl
test
je
adc
jge
push
push
push
mov
cmove
ja
push
adc
add
mov
movsb
pusha
cwtl
mov
cltd
pop
loop
iret
add
rolb
ficoml
mov
loop
loopne
icebp
xor
dec
pop
sub
xchg
arpl
les
inc
ffree
lods
xchg
lret
js
sahf
inc
subl
int3
dec
shl
js
mov
outsb
in
mov
pop
call
gs
movsl
es
dec
les
popa
jmp
lahf
pop
mov
adc
int3
jp
or
jb
mov
scas
inc
mov
rclb
and
sbbb
test
rcrb
repnz
ss
adc
dec
loop
push
loop
push
aam
orl
imul
test
mov
jle
xchg
mov
fimuls
sbb
and
fistps
mov
sub
and
adc
sbb
xchg
test
push
test
and
lret
int3
pop
rorl
xor
leave
jo
jle
dec
cmp
adc
nop
pop
outsb
les
mov
out
pop
iret
roll
mov
fmuls
dec
cmp
xchg
xchg
inc
out
and
ret
ljmp
and
add
mov
hlt
push
and
in
sbb
popa
in
cmp
xlat
sbb
lret
call
mov
pop
stos
sub
xchg
loopne
pop
jp
and
aaa
loope
icebp
mov
lods
lret
cmp
lcall
jg
push
mov
mov
pushf
dec
jle
mov
push
int3
dec
frstor
jle
cmp
int
xchg
push
sbb
orb
adc
push
adc
into
jmp
mov
xchg
xor
inc
xor
add
jecxz
cmp
fimull
shll
scas
and
pop
pop
pop
push
sti
arpl
sbb
push
inc
xor
daa
pop
mov
sub
xor
or
stc
jmp
insb
outsb
inc
pop
lock
daa
push
sti
sub
ret
mov
es
adc
or
push
arpl
jge
xlat
or
imul
jno
mov
pop
stos
das
jp
fmulp
cmp
pop
adc
test
inc
xor
mov
push
sbb
daa
cmp
xchg
jns
lds
cmp
sti
outsb
push
jmp
repz
pop
shll
nop
or
lcall
fstps
push
pop
sbb
jns
pop
stos
inc
movsb
cmp
jge
mov
mov
xchg
lea
outsl
dec
out
mov
rcll
ljmp
sub
xor
xor
sub
cmpsl
adc
cmpsb
sbb
inc
mov
dec
lea
add
icebp
adc
in
arpl
lcall
pop
in
ret
imul
fdivrs
sbb
test
test
addr16
stc
xor
cmc
inc
jmp
in
cli
scas
ds
cmpsl
sarb
addr16
mov
mov
dec
imul
mov
cli
sahf
add
or
cmp
enter
in
pushfw
loop
pop
mov
jmp
dec
into
ja
pop
bnd
mov
insb
movsw
ja
test
cmp
adc
daa
adc
ror
xchg
fildll
push
dec
fdivrs
stos
and
pop
cmpsl
xchg
push
ljmp
add
cmp
data16
addr16
pusha
pop
pop
mov
fiaddl
nop
cltd
dec
scas
es
pop
sub
ss
mov
clc
pop
test
and
insl
dec
adc
addr16
nop
or
int
dec
mov
jno
dec
pop
pop
dec
sub
enter
lret
outsb
fwait
inc
add
std
fstps
mov
adcb
aas
mov
xor
loop
push
dec
int
repz
sbb
pop
jg
out
cmp
scas
pop
xchg
test
pop
add
ss
mov
sti
mov
dec
mov
adc
shrb
mov
dec
xor
xor
adc
scas
mov
sub
cmpsl
sbb
fs
ret
xor
jmp
sbb
mov
fcomi
test
adc
dec
daa
rolb
rcrb
enter
popa
push
das
mov
mov
push
dec
pop
and
xor
sbb
or
and
sbb
xchg
xor
fnstenv
movsl
xchg
icebp
scas
dec
jmp
mov
test
stc
fwait
xorb
xchg
cmp
xchg
cmc
insb
imul
mov
mov
rcll
fmulp
aas
dec
orb
nop
mov
sub
pop
aas
cs
aas
xchg
cltd
into
push
pop
lock
out
sub
pop
scas
add
dec
idiv
or
faddl
sub
mov
hlt
mov
cmp
or
inc
add
xor
adc
scas
shll
insl
add
inc
push
sti
cmp
pop
repz
or
stos
and
fistps
in
aas
or
mov
out
jbe
sbb
popa
fsubrl
in
pop
rcl
mov
out
xchg
clc
into
add
shll
inc
call
fxsave
std
cmpsb
dec
xchg
add
in
mov
xor
xlat
jo
sbb
or
mov
xchg
lcall
pop
dec
clc
lcall
lret
lods
dec
fildl
stos
rcll
adc
adc
mov
jle
clc
mov
push
ds
cli
mov
cwtl
xchg
movsb
int
cmp
xor
add
in
ffreep
stos
and
jp
test
pop
push
jmp
or
sti
int3
imul
scas
mov
mov
repnz
outsl
cmp
mov
fs
sub
xor
xor
aaa
xchg
test
adcb
push
aad
jmp
pop
bnd
pop
ja
mov
jge
jnp
out
push
cmp
mov
addr16
adc
inc
stos
iret
pop
adc
aaa
add
push
loop
fdivr
lea
fisubs
and
pusha
shrl
leave
cli
pop
jl
pop
in
aad
rol
in
insb
cmpl
inc
fs
cmp
test
jmp
adc
xchg
ret
jp
add
gs
push
jmp
pop
xlat
dec
push
lds
ds
pop
pop
jne
and
add
sub
lret
roll
popa
xchg
fildll
fsub
xlat
int
and
mov
std
pop
mov
adcb
test
in
cmpsb
clc
or
adc
or
movsl
mov
mov
cmp
fcomps
andl
in
pusha
pop
jmp
cmp
adc
lret
aam
rcll
cli
in
pusha
lock
xchg
push
cmp
mov
rcr
test
jle
mov
mov
sub
sub
scas
pop
aad
imul
pop
out
ljmp
and
xchg
shll
mov
xorl
insl
pop
or
inc
fsubrp
test
out
sbb
mov
hlt
cmp
mov
inc
push
les
mov
shlb
in
les
cmp
ret
push
jns
ja
mov
push
dec
mov
mov
lods
pop
sbbl
sbb
add
adc
in
ja
jnp
imul
call
loop
cmp
push
mov
stos
ja
jb
cs
stc
add
push
out
subb
mov
imul
xor
adc
cmpsb
jge
xchg
daa
in
sub
loopne
ret
push
sub
inc
lahf
mov
scas
insb
mov
lahf
aad
ret
sbb
icebp
cmp
jno
enter
mov
dec
mov
sub
and
pop
adc
mov
aas
push
sub
and
je
subb
insl
or
daa
call
aaa
cmp
adc
es
inc
fistpl
mov
insl
add
mov
ds
lds
cmc
rcll
ficomps
dec
sbb
jmp
arpl
mov
iret
mov
inc
mov
out
in
jne
jbe
pop
xor
aad
xor
scas
push
xchg
int3
mov
dec
fs
add
mov
cltd
xchg
loopne
pop
int
mov
mov
stos
or
jae
popa
jg
pushf
loope
test
int3
call
mov
jle
fmul
cmc
jae
and
stc
movsb
push
sahf
inc
in
lret
mov
ds
arpl
loopne
dec
orb
outsb
cli
icebp
xor
out
negb
push
xchg
or
mov
xchg
ret
push
cmp
jl
je
xchg
push
negb
dec
and
call
sbb
mov
pop
push
lods
into
stc
data16
leave
push
xlat
inc
loop
sti
pop
inc
scas
fwait
imul
imul
cli
rolb
scas
pop
jbe
fstps
js
jno
jno
inc
mov
lock
sub
xor
loopne
mov
out
js
inc
pop
rol
push
cmpsb
insb
aaa
sub
push
addr16
push
inc
pop
cmp
sub
lret
fwait
inc
or
scas
push
iret
stc
mov
mov
repz
scas
stos
dec
and
leave
pop
push
ror
add
es
jbe
add
mov
cs
out
cmpsb
pop
mov
ud2
mov
mov
cmpsb
out
pop
sti
jb
push
fadds
andb
das
es
addr16
ljmp
ljmp
jbe
cltd
mov
jne
cmpsl
mov
arpl
xlat
sbbl
sbb
sti
cs
cmp
sar
je
lret
insl
lock
das
scas
or
or
or
leave
imul
xor
nop
lahf
pop
outsb
cmp
dec
cmp
inc
dec
mov
add
push
push
inc
sarb
pop
jns
and
pop
repz
or
ss
loop
std
in
repz
and
cmp
test
xor
pop
dec
push
mov
dec
fadds
mov
cs
iret
sbb
pop
subb
sbb
filds
sti
ret
aad
mov
xor
dec
add
add
ja
enter
xchg
and
cs
lret
lock
inc
pop
notl
jmp
cmp
lcall
cmpsl
sahf
sub
loop
push
pop
inc
mov
clc
fs
pusha
mov
into
test
mov
sti
sub
aad
push
fcomps
adc
pop
inc
mov
push
sarl
daa
inc
int
sbb
add
xor
cmc
cmp
arpl
add
mul
pop
mov
mov
rorb
test
bound
shrb
adc
mov
mov
fstl
cmp
push
arpl
movsl
scas
cli
dec
in
rorl
xlat
fbstp
lret
in
js
jmp
cld
push
lods
hlt
nop
cmpsb
cmpsl
push
xor
mov
cwtl
repz
and
sub
pop
xor
js
testl
adc
sti
aam
inc
mov
mov
arpl
xchg
ss
je
loope
push
les
push
inc
push
add
fwait
pop
add
add
std
ds
mov
outsb
repnz
fsubrl
into
adc
test
cmpsl
cmp
mov
jne
add
push
xchg
xchg
lret
out
scas
cmpsl
pop
imul
dec
or
push
inc
stc
out
mov
js
in
shrl
dec
rorl
ja
cmp
lods
shr
mov
cvtps2pd
mov
adc
test
inc
subl
inc
jno
cmp
sbb
movsl
cmp
mov
jne
hlt
leave
leave
adc
adc
inc
pop
cmpsl
jnp
stos
or
adc
xchg
sbb
xor
aaa
mov
fstpt
add
dec
cmp
in
call
xchg
dec
jns
pop
iret
pop
cmp
push
stc
inc
push
jle
movsb
js
aam
loope
shll
in
in
pop
xchg
xor
and
dec
push
subb
shll
mov
mov
dec
push
xchg
adc
pop
mov
push
pop
cwtl
test
nop
mov
mov
inc
mov
push
in
xchg
es
into
or
outsl
add
sbbb
cmp
repnz
stos
lahf
and
cmp
jno
testb
js
dec
aad
nop
mov
mov
pop
and
in
sahf
in
sub
daa
or
jb
les
rcll
mov
dec
repnz
movsb
mov
repz
fwait
mov
pop
pop
mov
push
xchg
nop
xchg
lea
ret
mov
jmp
dec
mov
and
add
cmp
mov
bswap
movsb
sbb
add
jg
movsb
mov
daa
inc
test
xchg
xor
movsl
aad
int
idivl
aad
nop
jno
mov
je
push
jmp
cmp
pushf
cltd
push
outsb
and
andb
mov
in
adc
mov
jnp
jmp
dec
daa
shlb
cmp
cmpsl
jecxz
add
loope
nop
cmp
stos
scas
iret
inc
jecxz
pop
cli
and
popa
movsb
xor
adc
inc
mov
andb
dec
dec
mov
push
mov
add
cmp
cmpsl
loop
in
out
jae
popa
repz
adc
xchg
inc
jecxz
mov
jb
push
cwtl
pop
pop
dec
push
mov
adc
pusha
hlt
in
or
xchg
xchg
out
push
xor
mov
into
fbstp
movsb
adc
sti
into
repz
sbb
mov
outsb
adc
imul
cltd
cmpsb
test
jnp
inc
mov
mov
xchg
xchg
pop
adc
int
sub
ror
ret
dec
movsl
cmc
mov
dec
jo
movsl
repnz
cwtl
lret
movsb
pusha
mov
call
lock
popa
xchg
lds
cmp
dec
es
mov
or
es
ret
mov
mov
test
test
orl
jl
loope
ljmp
xchg
fmul
xchg
jmp
insb
shlb
rcrb
cmp
popa
xchg
sbb
push
mov
and
jbe
popf
inc
movsb
xor
or
pop
ljmp
mov
xchg
xor
push
xchg
movsb
push
jl
push
test
cmc
dec
xchg
ss
pop
mov
leave
pop
scas
fsubl
mov
movsl
mov
mov
cs
cmp
std
addr16
and
xor
ss
cmp
push
subl
loope
add
inc
sbb
sbb
xchg
imul
arpl
out
das
adc
xchg
mov
sub
inc
rol
mov
cli
and
push
fsts
js
push
mov
int
fsubrp
out
mov
and
pop
ret
lds
mov
test
loopne
test
lods
pop
cli
pop
push
pop
fstl
inc
cmp
pop
inc
inc
jg
cmp
jns
mov
out
xchg
sbb
es
stos
mov
mov
sbb
loopne
jp,pt
dec
pop
inc
push
lock
outsb
je
sahf
cwtl
mov
cli
mov
pop
add
push
jb
push
out
and
sar
push
int3
jle
jecxz
jnp
repnz
inc
inc
inc
and
adc
nop
inc
movsl
mov
call
xchg
into
shll
fsubs
imul
aas
adc
cmp
sub
in
mov
cmp
arpl
push
mov
jp
mov
pop
mov
iret
mov
jbe
stc
add
addr16
repnz
cmc
cwtl
and
ret
outsb
std
ja
pop
aas
jecxz
lds
mov
xchg
ss
leave
stc
jo
xor
sti
jb
imul
mov
loopne
or
xchg
cmpsb
inc
xor
sub
out
inc
mov
xchg
insb
xlat
mov
shlb
stos
jae
pop
pop
jo
ret
sbb
aaa
xor
push
in
lahf
fadds
imul
mov
in
mov
inc
mov
flds
inc
push
pop
popf
out
pushf
add
lods
jl
pop
out
pop
cltd
or
sbb
lcall
adc
dec
fisttpll
pop
sub
mov
cmp
shlb
jns
cmpsl
and
es
imul
mov
push
dec
in
mov
enter
pop
inc
loope
aas
ljmp
rorl
ja
sbb
out
xchg
xor
pop
arpl
lds
loope
cwtl
add
mov
dec
xchg
sub
fisttps
cwtl
mov
sbb
in
aas
inc
push
in
and
sub
push
stc
outsb
cmp
dec
add
stos
dec
push
js
cs
add
push
inc
mov
adc
aaa
xchg
adc
pop
lahf
mov
out
lds
jns
nop
rorl
and
and
dec
or
adc
or
adc
in
xchg
xchg
scas
aam
adc
loope
add
cmpsl
mov
inc
testl
inc
jo
dec
stos
rorl
jae
mov
inc
insb
adcb
leave
nop
jp
scas
out
insl
pop
out
outsl
mov
aad
fimuls
fistpll
jl
int
loopne
sti
int3
shlb
dec
sbb
subl
sbb
aam
inc
push
push
dec
scas
lret
sub
cli
mov
mov
loope
andl
sbb
inc
iret
cmp
aas
and
or
testl
jle
movsb
sahf
xor
jns
xchg
ret
cmpl
fdivp
add
jnp
rcrl
repnz
or
inc
inc
jle
adc
adc
xrelease
xor
adc
cmp
std
jne
jbe
jmp
mov
stc
fdiv
ror
mov
jp
shrl
xor
aas
mov
mov
jl
ficoms
daa
lcall
shll
bswap
mov
imul
sub
push
in
daa
mov
mov
cmp
sbb
xchg
dec
mov
aas
jbe
inc
inc
imulb
sbb
addr16
and
jle
and
jecxz
sbb
add
cmpsb
hlt
mov
xor
test
sub
lret
or
or
pop
mov
pop
std
test
scas
repz
repz
pop
mov
sbb
sbb
movlps
jo
and
inc
sbbb
cmp
fiaddl
fsubrl
ljmp
pop
in
inc
test
mov
mov
leave
out
out
subb
xchg
stc
jl
mov
bound
dec
inc
add
cmp
bound
pop
jbe
inc
xchg
ret
jecxz
out
pop
pop
cmc
ficomps
js
fildll
les
sti
add
push
mov
shlb
or
subl
mov
or
push
fadd
sub
repz
jb,pt
pushf
sub
mov
arpl
lock
add
ja
mov
shll
mov
dec
adc
enter
stos
imul
cmp
or
ret
das
and
sub
and
jge
mov
push
pusha
xchg
push
push
push
mov
ret
xor
in
jge
movsb
xchg
jp
test
and
add
inc
stos
sbb
sbb
iret
outsl
sub
les
pop
cs
mov
loop
clc
ljmp
cmpsb
xchg
clc
insb
std
cmp
in
sbb
cld
aad
sar
push
jp
lods
sbb
push
icebp
xchg
dec
xorl
loope
fdiv
pop
dec
sub
mov
loope
mov
imul
sub
mov
fcmovnbe
shll
dec
inc
cmpsl
call
repz
into
cmp
pop
jp
inc
sub
cmp
ja
andb
xor
add
jae
sub
rcrb
imul
jl
add
dec
pusha
mov
xor
js
push
xor
outsb
ja
cmp
xchg
dec
or
jmp
pusha
data16
outsl
dec
repnz
xor
iret
mov
sbb
push
xchg
jecxz
lods
jnp
cld
inc
jge
xchg
jb
mov
add
mov
out
sbb
and
daa
or
sub
outsl
addr16
test
repnz
xchg
jmp
imul
lock
or
out
movsb
mov
lret
sti
pop
aad
xchg
sub
out
nop
dec
mov
push
mov
mov
fsubrl
int
ficompl
gs
pop
push
and
fsubrp
xchg
test
jp
sbb
cli
scas
xchg
or
xor
arpl
stc
movsl
outsb
xchg
sub
mov
xchg
mov
xchg
add
jno
es
inc
loop
rcrb
mov
mov
aaa
lds
int
lret
and
mov
inc
test
int3
pop
sbb
jns
ret
and
jp
xchg
xor
scas
lds
and
inc
test
adc
jp
ror
in
sete
add
cmp
repz
cs
daa
push
xchg
xor
xchg
faddl
aas
pop
jmp
mov
xchg
and
lcall
adc
out
push
xchg
add
push
ljmp
add
test
mov
dec
inc
popa
arpl
xor
jmp
in
insl
stc
clc
movsl
scas
jbe
mov
rcll
jmp
xchg
imul
das
aad
fldenv
xor
mov
xor
adc
dec
and
mov
mov
jge
mov
push
faddl
insb
rorl
push
or
inc
add
int
jne
mov
fdivrs
sahf
fucomip
stos
ds
adc
and
mov
cmpsl
add
stos
daa
pushf
jl
loopne,pn
lret
imul
fs
mov
test
mov
inc
fiadds
decl
shll
and
sub
imul
outsl
mov
mov
push
xchg
and
pop
ficomps
out
cmc
jne
inc
std
mov
pop
sub
ljmp
adc
repz
in
out
lret
xchg
out
mov
lods
adc
out
or
nop
mov
into
test
and
and
cli
scas
dec
test
stos
lahf
sub
xchg
xchg
loopne
push
lret
outsl
lds
jmp
jmp
out
sbb
sbb
in
outsb
push
sti
push
inc
mov
sbb
push
dec
pushl
repnz
lds
bound
out
cld
dec
lea
xchg
xchg
xchg
xchg
push
andl
add
xor
push
dec
xchg
and
lcall
jae
mov
sti
cmp
js
ret
mov
xchg
mov
fwait
test
push
adc
fmul
and
je
xor
push
fimull
add
rol
mov
ja
inc
push
shrl
pushf
sbb
loopne
cmp
and
or
aaa
xchg
xor
inc
les
sahf
mov
cmp
sbb
mov
pop
and
sbb
add
nop
call
adc
out
xor
out
push
test
mov
mov
lahf
or
es
cmp
cs
mov
adc
pushf
inc
cmp
iret
pop
addl
test
rcrb
stos
inc
pop
cmp
cmp
jno
pusha
sub
ss
push
fwait
dec
push
insb
shlb
sbb
xchg
sub
jb
jmp
movsl
loopne
enter
jb
xor
or
imul
fdivrs
mov
lods
cmpsl
cmpsl
inc
sahf
sub
rcr
clc
stos
lock
cmp
mov
sub
push
iret
jmp
or
jle
adc
in
das
aad
jl
testl
add
std
adc
xchg
sub
aad
xchg
fs
mov
ror
ljmp
sbb
jb
aad
fsubrs
movsl
mov
pop
xorb
xor
test
xor
xchg
mov
pop
lock
lcall
sub
movsb
xor
call
cmp
test
pop
cmp
jno
push
inc
movsb
pop
push
or
and
ljmp
xchg
scas
imul
push
xchg
clc
mov
jle,pt
fcompl
jg
xor
popf
mov
xchg
imul
inc
sub
pop
cmp
xchg
xor
sbb
call
sub
mov
inc
ja
scas
enter
popf
icebp
or
mov
add
mov
iret
mov
popf
cmp
jo
into
push
adc
cmp
mov
xor
pushf
sbb
and
lret
imul
ds
xchg
mov
push
faddp
fadd
repz
xchg
jg
xchg
push
das
popf
iret
mov
mov
dec
pop
cmpsb
push
pop
pop
sub
iret
mov
jmp
fdivrs
push
in
test
out
xor
ret
shr
mov
pop
stos
push
call
lods
rol
out
fdiv
stc
cmp
popf
sti
cmp
and
sti
arpl
dec
inc
loopne
sbb
pop
ljmp
pop
sbb
outsl
inc
fcoms
lods
aaa
mov
xor
adc
jae
sbb
js
fdivp
fmul
pop
adc
push
jae
lea
sub
mov
jns
testb
push
ljmp
sub
cmpl
pop
adc
clc
xchg
addl
mov
stos
stos
adc
sahf
jo
loop
or
int3
mov
test
mov
popf
cmpsb
and
popf
enter
loope
std
xchg
cltd
push
dec
std
fildl
mov
movsb
add
in
std
pusha
push
loop
pop
dec
sbb
fsubs
or
mov
int
nop
sub
test
add
sbb
fistpl
sub
jmp
notl
pop
mov
ja
mov
push
lcall
sub
mov
jae
and
xor
push
lock
cmc
hlt
cli
sbb
mov
mov
div
rol
push
aas
push
inc
jge
movsl
mov
das
imul
dec
or
xor
leave
pop
ljmp
mov
pop
pmuludq
pop
sti
mov
das
mov
push
dec
loope
inc
dec
pop
xor
test
sbb
daa
sbb
movsb
fwait
add
out
test
adc
sub
out
lcall
rcl
pop
lcall
roll
insb
cmc
popa
out
inc
orl
or
lods
fwait
add
inc
scas
dec
add
imul
add
jl
ja
stc
push
loopne
aad
sbb
push
dec
test
xchg
ja
shll
ret
movsb
push
dec
mov
mov
idivl
ret
cmp
js
incl
xchg
das
ret
mov
inc
push
repz
aaa
cmc
cmc
sbb
cmp
out
jbe
mov
aas
cmc
adc
popf
push
inc
jge
push
xchg
scas
stos
jae
mov
cmp
in
or
scas
cmovns
rcrl
jmp
aam
inc
pop
insl
outsl
push
sub
or
enter
outsb
sarb
mov
xchg
mov
dec
inc
dec
out
ror
xchg
daa
push
sarb
cmp
or
lock
and
out
adcw
movsb
push
cmp
test
in
mov
inc
dec
mov
sub
jmp
pop
lods
pop
inc
push
cltd
mov
adc
movsb
pop
sbb
or
imul
pop
mov
sub
jns
mov
xchg
clc
adc
hlt
iret
mov
adc
cmp
jp
aaa
xor
subl
das
push
cmpsb
les
inc
ja
cli
mov
sbb
push
jnp
mov
xor
dec
outsb
outsb
lds
sub
push
add
push
cmp
sbb
and
push
and
lcall
push
mov
sub
out
fisubl
js
ja
pop
push
popa
push
fdivs
mov
inc
fsubrs
addr16
sbb
mov
sahf
fmuls
aas
pop
sub
and
push
push
sbb
rol
adc
jbe
lret
xchg
push
stos
xor
adc
lea
popa
bound
leave
aad
test
enter
pop
jno
mov
and
loopne
dec
pop
push
fdivrs
call
shl
out
jns
scas
jno
and
xchg
push
fdivrl
shl
out
xchg
jb
add
in
mov
sbb
rcr
sbb
or
cmp
icebp
inc
xlat
repnz
add
pop
xor
xchg
push
mov
xchg
xchg
cld
inc
out
lock
cmc
in
push
cmp
and
sti
imul
or
or
xchg
xchg
iret
mov
divb
sbb
inc
mov
stos
aas
int3
enter
fstpt
movsb
jle
or
jp
nop
std
sub
add
xchg
pop
push
and
pop
clc
ret
mov
pop
loop
dec
insl
xor
sub
mov
xlat
cmpsb
ja
out
dec
ljmp
repnz
arpl
mov
adc
jne
outsl
out
mov
js
mov
or
sarb
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
jmp
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
jbe
mov
dec
pop
sbb
adc
js
mov
xor
sbb
xor
lods
jmp
int3
rclb
sub
or
rclb
jecxz
dec
jge
inc
fmul
mov
push
pop
mov
sbb
std
dec
stos
in
and
sbb
pop
test
fisttpl
push
lock
sub
adc
push
xlat
rolb
sarl
test
std
dec
stos
in
mov
dec
test
inc
daa
xor
mov
mov
jnp
cltd
dec
add
dec
rorb
push
lea
mov
mov
pop
add
or
int
imul
pop
test
fmul
outsb
test
inc
pop
inc
inc
fmul
mov
or
test
fcomp
mov
or
inc
enter
mov
inc
pop
test
fmul
mov
or
dec
fmul
mov
or
test
fmul
sahf
test
inc
dec
test
enter
mov
inc
pop
test
fmul
mov
add
inc
fmul
mov
out
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
int
lods
iret
mov
or
inc
loop
mov
dec
pop
imul
fmul
mov
or
mov
or
inc
fcomps
cmp
test
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
or
inc
fmul
mov
and
pop
mov
pop
iret
rol
ret
xchg
ret
or
xor
cmp
fadd
mov
mov
inc
nop
xlat
test
sbb
iret
test
andl
scas
sahf
ficomps
sub
fidivrl
vzeroall
or
nop
lods
shlb
add
cmp
xchg
ret
xor
jno
in
mov
mov
sbb
out
movsl
dec
mov
dec
push
scas
push
mov
gs
add
mov
mov
jp
sub
push
outsl
repz
imul
inc
add
imul
aaa
xor
dec
cmp
mov
imul
or
in
push
jge
jnp
pop
push
mov
lahf
gs
ja
lods
ds
or
push
cmp
dec
rolb
jb
sbb
jl
or
test
push
daa
or
inc
pop
adcl
in
test
add
std
call
jns
mov
jg
repnz
pop
test
xchg
stos
dec
cmp
inc
inc
movsb
mov
cmpsb
test
pop
popa
and
in
dec
add
add
and
cli
cmp
or
sub
stos
lock
add
rorl
sub
adc
iret
inc
out
stc
imul
mov
mov
xchg
adc
in
mov
mov
in
rcl
pop
cmpb
int3
js
shlb
fs
jecxz
and
test
dec
dec
rorl
adc
mov
push
cmp
push
aaa
jno
pop
addr16
fstps
xor
pop
pushf
or
push
data16
add
data16
fs
push
daa
nop
sbb
pop
int
rcrl
xor
rcl
mov
lret
mov
push
je
jmp
sbb
add
lea
scas
pop
pop
enter
cli
jb
imul
call
dec
mov
outsl
xchg
xchg
ror
jo
inc
inc
out
adc
lahf
ss
mov
or
adc
das
ja
lea
lahf
mov
xor
imulb
or
stc
mov
loopne
push
dec
adc
cld
leave
xor
add
ja
mov
into
mov
xchg
lea
jnp
mov
push
in
mov
jbe
sub
cld
dec
repz
mov
cmp
test
mov
int
shlb
and
sahf
mov
cmc
mov
repz
push
test
add
push
mov
test
outsl
fiadds
jae
or
add
mov
mov
sbb
call
data16
or
fimuls
ja
push
sbb
scas
dec
adc
and
in
scas
dec
add
xor
add
mov
dec
outsb
in
out
gs
jo
push
inc
insb
outsl
sbbl
test
dec
sub
fsts
fsub
mov
cmp
scas
and
inc
sub
lret
scas
lock
fdivrl
into
enter
jb
xlat
push
jle
cmpsb
test
aas
pop
pop
dec
rorl
sahf
loop
ljmp
xor
xor
add
jl
pusha
sbb
rorl
test
push
mov
lret
xacquire
fiadds
mov
push
adc
daa
mov
sti
ret
fimuls
xchg
adc
cmp
mov
mov
dec
subl
and
mov
adc
inc
inc
imul
mov
jbe
das
cmpsb
add
pop
add
stos
test
js
in
loop
cmp
inc
jno
mov
lcall
aas
cmpsl
out
mov
ret
xor
pop
jbe
aaa
out
mov
sbb
pop
imul
pop
jo
in
mov
inc
sbb
int3
filds
clc
and
mov
mov
lods
in
ja
scas
lods
int3
leave
imul
and
push
cmp
dec
out
test
cmc
sub
dec
dec
into
ds
sbb
or
aad
add
es
mov
jo
lret
test
xor
add
sahf
pusha
fsub
fld
insb
in
inc
jb
loop
stos
movsl
mov
sbb
fldz
xor
mov
aam
mov
loop
fcoml
jge
mov
stos
repz
mov
xchg
fisttpl
inc
in
hlt
xchg
add
add
pop
jl
loop
aas
iret
and
mov
xchg
xor
and
pop
sysexit
std
cmpsb
or
hlt
pusha
mov
daa
mov
hlt
hlt
add
push
iret
sbbb
add
loope
mov
xchg
dec
es
push
jmp
jbe
dec
pusha
out
jbe
int
xchg
cwtl
xchg
lret
cmc
sub
inc
cmp
jmp
jnp
xchg
das
sbb
sub
cld
pop
std
imul
jne
sub
jae
pop
fstps
popa
mov
js
xchg
mov
in
jecxz
jne
xchg
cmpsb
clc
inc
fisubrl
out
push
add
or
adc
xchg
dec
or
pop
sbb
fnsave
mov
inc
inc
in
jle
into
sub
into
xorl
into
cmp
push
pushf
ja
repnz
dec
out
jne
dec
cmp
data16
xor
sbb
fnstenv
data16
test
sahf
jne
sub
xchg
dec
insl
ficoml
fcmovne
lahf
lock
movsl
loope
test
xorl
sbb
add
adc
xchg
xor
cmpsb
push
pop
pop
dec
mov
repnz
daa
stos
out
cmp
cli
js
fadds
dec
add
sahf
lret
jmp
dec
inc
hlt
sub
sahf
andb
cmp
adc
jmp
insl
cmp
jp
xchg
adc
cs
lods
lods
pop
pop
or
test
and
pop
iret
insl
aad
xchg
lahf
icebp
fst
or
dec
call
repnz
icebp
push
cwtl
pop
sub
mov
sbb
fwait
inc
out
lods
cmp
stc
lcall
in
inc
fisubrl
cmp
les
sarb
pop
pop
xchg
inc
dec
fbld
pop
push
divb
test
imul
pushf
ss
sub
mov
ret
rol
sar
clc
arpl
pop
mov
push
pushf
mov
and
mov
push
xchg
mov
out
cmpsl
push
adc
stos
mov
fwait
shlb
or
and
inc
mov
inc
bt
and
loop
sar
mov
push
aas
insb
xchg
or
hlt
ss
loop
fisttpll
mov
sub
data16
rclb
xor
shlb
and
add
jo
popa
pop
mov
xchg
jp
test
pop
fucomip
inc
mov
out
add
pop
ret
mov
lret
mov
cmc
push
inc
faddl
insl
mov
and
xchg
adc
pop
roll
imul
jno
pusha
mov
or
loopne
jge
shlb
stos
pop
lea
pop
jle
fnsave
subb
lcall
rcl
gs
in
mov
test
sbb
pop
push
mov
xlat
and
outsb
push
cmp
and
rdtsc
mov
enter
aaa
cmc
fisubrs
gs
sub
aad
rol
enter
sahf
aad
sbb
out
xchg
sahf
sbb
cltd
add
sarl
addr16
lods
mov
fcomi
add
push
mov
xor
dec
jbe
shl
clc
insb
stos
cmp
pusha
mov
lcall
stc
cmpsl
jns
popa
jbe
icebp
in
jg,pn
push
pop
or
gs
icebp
movb
dec
ljmp
rorl
add
sub
test
stc
lcall
ret
xor
inc
mov
inc
xchg
jae
pop
push
icebp
sbb
dec
mov
add
pop
lods
push
popf
mov
test
mov
mov
inc
push
lea
lahf
imul
lcall
or
mov
xchg
das
enter
imul
pop
mov
loopne
fdivl
adc
cmc
subl
ret
sti
popf
aas
pop
jbe
sbb
mov
mov
mov
test
pop
in
pop
push
in
mov
push
imul
fisubl
into
je
sub
jecxz
sub
sti
cmp
mov
aaa
lahf
or
inc
incb
aad
aas
jp
xchg
sbb
xchg
jl
shlb
mov
push
push
add
and
push
mov
sahf
xor
push
in
test
xchg
mov
lea
inc
push
xchg
xor
sub
push
and
sahf
push
and
jge
jae
daa
movsl
int3
addb
popf
sbb
icebp
stos
sbbl
loopne
mov
call
cmpl
lahf
or
hlt
mov
jmp
fsubs
in
xchg
daa
mov
mov
add
jbe
bound
ret
aam
jmp
fisttpll
mov
inc
xor
cmp
sbb
lds
sub
jb
js
mov
addb
loop
push
pop
mov
push
call
mov
pop
popa
cmp
push
xchg
mov
movsb
jmp
mov
inc
ljmp
lock
xor
out
in
dec
fs
jmp
sti
push
dec
and
xlat
jmp
or
mov
in
rorb
inc
jns
data16
adc
or
out
out
jp
cmp
dec
lcall
inc
lret
data16
scas
pop
jnp
cwtl
jo
jl
jp
sti
jo
movl
cmp
adc
cmp
jmp
ds
aaa
cmpsb
xchg
divb
or
cmpsb
mov
xchg
jge
xchg
push
outsb
out
je
xchg
popf
rcll
shl
pop
dec
enter
loopne
mov
xor
push
test
mov
mov
jecxz
or
out
jmp
and
imul
sbb
add
out
lcall
repnz
sbb
lret
mov
xchg
mov
mov
ljmp
cmpsb
sub
or
xchg
out
icebp
bound
mov
sub
rorb
scas
js
xor
push
inc
stc
fldt
adc
test
mov
or
sub
loope
sti
aas
std
pop
int3
push
inc
add
rcrl
push
and
ds
inc
test
fistpll
fisubrs
adc
in
dec
stos
adc
je
insl
repz
jge
int
sub
and
mov
xor
mov
and
testl
xor
jno
fdivrs
rolb
inc
sbb
jbe
inc
jae
lods
add
scas
mov
jmp
aaa
adc
call
pop
iret
fucomp
das
dec
sbb
lcall
test
nop
adc
add
xchg
loop
inc
add
sbb
jge
scas
add
push
mov
in
aas
dec
insl
mov
mov
cmp
dec
clc
lret
sub
ret
dec
ret
pop
add
mov
dec
mov
xchg
adc
sub
fld
inc
mov
and
in
add
jg
sbb
mov
nop
jecxz
lcall
stos
movsb
outsl
jp
in
cld
cmpsb
es
xchg
sub
mov
ljmp
sbb
popa
mov
rclb
xor
pushf
shrl
jle
inc
mov
rorl
sti
mov
ja
ja
lds
stos
xchg
jecxz
out
sub
in
mov
xor
or
mov
outsb
sub
inc
mov
mov
cmp
loopne
pusha
std
icebp
sub
xchg
pop
ret
fsubrs
scas
cmp
out
or
mov
inc
sub
loop,pt
stc
es
inc
or
ljmp
adc
ja
fmuls
outsl
test
push
jge
leave
add
fbstp
cwtl
hlt
clc
xchg
jmp
sbb
pop
call
push
adc
out
sti
outsb
das
pushf
lock
push
into
mov
inc
rcrb
mov
fs
sbb
push
jmp
pop
pop
shlb
jne
fnstcw
movsl
std
sti
icebp
xchg
popf
aad
xchg
out
mov
out
sub
mov
js
xchg
xor
stc
jecxz
add
fucomip
mov
mov
int3
cmp
scas
mov
repz
loop
mov
ficoms
lret
push
js
sub
aam
lds
jae
into
and
inc
bnd
popa
mov
sub
dec
das
push
jno
or
push
push
out
clc
jecxz
insb
mov
movsb
mov
daa
push
pop
pushf
xor
lock
rcrb
ljmp
xor
aaa
or
lret
ret
lods
rorl
mov
aaa
lods
mov
adc
mov
mov
mov
cwtl
push
pop
push
mov
sub
add
adc
rorb
iret
imulb
and
or
fsubs
cs
push
movsb
or
aaa
loop
pop
dec
out
call
ljmp
or
inc
pop
jno
lea
mov
xchg
fwait
cltd
jmp
mov
push
push
dec
mov
sti
push
pop
aaa
arpl
cmp
ret
xor
arpl
pop
add
add
pusha
push
mov
rcrl
sbb
xor
sub
add
mov
xor
dec
lock
fs
rorl
rcrb
pop
or
in
push
sub
iret
adc
clc
cld
mov
pop
movsl
lds
push
shrl
adc
iret
push
jns
inc
lcall
push
std
xchg
xchg
or
xlat
pop
out
les
pushf
sbb
cltd
push
leave
add
lods
test
sbb
add
cmp
jl
imul
enter
int
iret
imul
xchg
dec
cmc
adc
mov
cmp
sub
aas
cmp
or
adc
ss
lea
jne
notb
bound
cltd
mov
xchg
push
int
mov
push
iret
xchg
int3
jae
adc
jo
pop
push
popf
mov
leave
ds
pop
insb
insb
and
mov
rol
mov
jl
imull
xor
in
mov
aad
das
gs
pop
adc
mov
mov
push
mov
dec
movsl
scas
jmp
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
