push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
lea
push
push
call
test
je
mov
add
mov
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
lea
push
call
call
mov
push
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
lahf
adc
mov
jecxz
mull
repz
xor
testb
mov
cltd
push
lahf
adc
jge
push
in
jbe
insl
shrl
push
mov
test
sub
iret
mov
jmp
jo
negb
scas
daa
sarb
cs
push
in
push
xchg
scas
mov
add
push
xor
movsb
arpl
stos
and
arpl
dec
or
fsubp
jge
dec
decb
cld
popf
loopne
and
mov
jge
push
ret
loop
and
inc
or
pushf
or
mov
mov
shr
push
inc
xchg
mov
out
ljmp
pusha
mov
cmpsb
lods
dec
cmp
adc
xchg
push
js
stos
sbb
push
sbb
pop
test
in
nop
adc
mov
cmp
and
or
das
adc
and
stc
push
push
sub
or
add
mov
nop
mov
and
push
sbb
and
bound
cmpsl
mov
push
insb
outsb
fsub
inc
outsl
dec
fcom
rorb
loopne
push
test
rcll
cs
outsl
pop
pop
jmp
test
mov
js
jp
lahf
test
hlt
mov
ficomps
std
jo
ja
nop
repnz
mov
push
nop
fsubl
jnp
mov
xor
dec
arpl
mov
xchg
inc
hlt
cmpl
mov
mov
testl
mov
ljmp
in
movsb
pop
dec
and
adc
adcl
xchg
dec
fadds
lcall
mov
out
das
and
sub
sbb
mov
push
sti
push
adc
aam
jbe
cmpsl
lea
lock
lcall
pop
je
push
push
mov
data16
leave
push
mov
mov
adc
nop
fisubl
inc
jl
and
sub
xchg
lahf
inc
jns
dec
sub
out
lea
jge
adc
and
test
addr16
jmp
sub
xor
popa
xor
pusha
pushf
and
nop
jno
mov
adc
sahf
adc
shlb
dec
insl
adc
sbb
insb
incb
dec
sbb
push
sbb
arpl
push
add
push
cmp
mov
xchg
mov
int
jb
xor
sub
lahf
std
into
shll
out
je
jb
mov
lret
out
xchg
mov
icebp
mov
ficoms
mov
xor
mov
push
mov
mov
out
leave
pop
mov
and
fucom
jo
out
sahf
fnstcw
loopne
call
std
test
sbb
xlat
mov
in
mov
sub
pop
mov
push
nop
mov
insb
rol
mov
pop
fildll
jg
and
push
rcl
adc
icebp
sbb
lcall
movsl
mov
dec
sbb
mov
dec
pop
pop
fnstenv
outsl
int
mov
addr16
mov
mov
jns
inc
cld
or
sbb
iret
mov
incl
icebp
mov
int
push
cmpsl
shrb
cmpsl
xor
jb
push
fmuls
lds
jg
mov
pop
cld
cmp
xor
sbb
popf
inc
cmp
xchg
or
mov
aas
xchg
dec
dec
aad
pop
loop
and
aad
out
jp
pusha
mov
cmpsb
or
fimuls
nop
push
mov
loope
test
outsb
fsubrl
rcrl
xor
cli
mov
movsl
inc
in
and
stc
mov
shll
adc
mov
aaa
fisubs
fcmovu
xchg
ljmp
dec
inc
or
push
data16
pop
push
gs
mov
dec
push
xor
mov
in
in
insl
sub
cltd
ret
testb
mov
xor
scas
jp
pop
jo
pop
mov
sti
jnp
into
push
push
notl
or
or
in
lds
push
imul
mov
xor
xor
xchg
pop
repz
pop
neg
sub
jnp
jnp
or
jnp
loopne
je
test
outsl
dec
sbb
sub
push
add
sub
mov
adc
lea
xchg
mov
cs
mov
add
sbb
ret
lods
push
mov
rorb
stc
mov
lods
test
inc
mov
stos
sub
outsb
cmc
in
or
popa
hlt
loope
movsl
jle
inc
mov
fdivl
mov
fisubs
inc
jo
rcll
jae
inc
xchg
adc
jo
ja
or
imul
dec
ds
je
cwtl
or
mov
scas
and
sti
mov
jecxz
movsl
mov
std
insl
dec
sbb
gs
stc
call
imul
test
cwtl
gs
pop
test
xchg
pop
and
flds
loopne
or
inc
sbb
xor
add
jb
cli
xor
in
adc
lahf
sarb
mov
lcall
cmp
mov
jge
xchg
sti
stos
out
mov
xchg
ficomps
jbe
imul
data16
enter
mov
mov
inc
in
decb
jl
jns
inc
sbb
ret
mov
lcall
jl
subl
test
push
xor
push
xor
je
in
ljmp
add
sub
inc
jle
xor
xor
mov
cmp
xchg
add
iret
lahf
ja
sub
mov
ret
mov
inc
cmp
popa
shrl
stc
mov
dec
push
cmp
and
mov
repnz
jecxz
loopne
decl
pushf
xor
push
daa
mov
sahf
mov
mov
or
pop
inc
push
addb
xor
rcll
ja
fcmovu
pop
daa
enter
pop
test
leave
dec
addr16
shl
sbb
test
scas
out
mov
ljmp
push
std
shll
fsts
sbb
mov
test
sub
add
mov
dec
or
aaa
or
int3
movsb
out
push
rclb
mov
icebp
aaa
pop
movsb
int
mov
push
jmp
mov
lea
ficoml
cmp
push
sbb
push
mov
jae
add
cltd
std
pop
shlb
clc
jge
push
lahf
fsts
pop
xor
mov
mov
add
xor
xchg
out
push
dec
xchg
sbb
or
je
pop
inc
and
xor
pop
bound
popl
mov
pop
and
lea
mov
sub
loop
cmc
xor
ljmp
pop
outsb
ja
push
sbb
add
push
je
movsl
test
outsl
stc
nop
lods
fwait
in
and
adc
mov
mov
inc
mov
xchg
fsubrs
inc
cltd
jns
xor
push
mov
push
adc
js
jns
pop
mov
pop
or
ret
or
and
out
mov
mov
call
loop
ljmp
lret
jnp
mov
test
inc
cld
adc
popf
out
add
inc
mov
xchg
dec
or
std
add
jo
xor
mov
and
je
mov
lcall
sahf
inc
ret
dec
mov
mov
xchg
mov
cli
cmc
xchg
xchg
push
xor
sti
mov
mov
inc
lcall
addb
shlb
add
adc
push
xorb
lods
scas
add
push
mov
inc
int
nop
push
and
aad
dec
lret
dec
mov
jno
lea
mov
in
adc
push
pop
stos
mov
std
adc
loop
jge
add
loopne
or
test
jae
mov
adc
add
xchg
add
push
rorl
xor
inc
inc
and
mov
add
out
xor
push
inc
dec
mov
inc
pop
andnps
daa
push
loop
ljmp
xor
xchg
jb
movsl
daa
icebp
pop
mov
sbb
sbb
insl
push
mov
clc
mov
mov
and
add
popaw
jnp
push
repz
add
jmp
push
stos
lods
or
gs
mov
int
es
dec
jbe
mov
out
sbb
jns
mov
in
aas
pop
sbb
jl
shlb
lret
mov
dec
rcrb
fbstp
sbb
inc
sbb
test
out
imul
adcb
dec
dec
push
add
xchg
jo
lea
test
popf
popf
mov
dec
rcrb
add
les
in
dec
outsb
jns
push
sub
xor
xor
xchg
lock
pop
icebp
xor
push
fsubs
sti
mov
lods
push
mov
jno
mov
xor
and
ret
pop
and
xor
and
mov
test
jp
or
fidivs
mov
stos
sub
sub
mov
lea
loop
lock
inc
pop
ljmp
int
dec
sub
lds
les
insb
and
mov
xchg
cmp
dec
cld
cmc
shl
pop
ds
ds
dec
sbb
ret
std
cmp
jae
fwait
xchg
fneni(8087
iret
sub
ss
mov
and
clc
push
cwtl
xchg
aas
repnz
data16
outsb
cmp
mov
xor
std
cmp
ss
int
cmpsl
icebp
or
das
sub
add
push
cmp
push
lret
loope
sub
mov
xor
les
repnz
loopne
addr16
test
outsl
pop
sub
fst
ja
adcl
cmpsb
fwait
fs
mov
mov
sahf
sub
ja
mov
adc
pop
enter
sahf
xchg
jns
jg
loopne
or
sbb
ljmp
adc
mov
data16
aaa
or
xchg
imul
or
insl
pop
stos
xor
sbb
out
add
shr
and
ljmp
pop
out
push
inc
pusha
fbld
stc
daa
and
push
cmpsb
mov
push
sbb
stos
jae
dec
adc
mov
mov
cmp
shl
lret
mov
sub
lods
dec
dec
fsubrp
push
out
and
popf
test
jbe
inc
adc
icebp
jns
push
je
or
inc
xor
or
mov
adc
sub
fnstenv
mov
stc
clc
in
mov
xor
mov
lret
xor
aas
inc
sbb
mov
cmpsl
inc
sbb
shlb
fstpl
xor
pop
into
into
mov
mov
add
es
das
pop
jns
jbe
pop
xor
or
mov
pop
pop
rcll
sbb
sub
jnp
dec
mov
jl
pusha
flds
iret
dec
shl
cmp
shll
mov
sub
lods
movsl
in
sarb
mov
jmp
lods
js
inc
dec
mov
xchg
cmp
jns
lock
cmpl
mov
enter
lret
fwait
and
inc
ss
pushf
or
fcmovne
xlat
cmpsb
push
jl
lods
pusha
fildl
clc
or
xchg
or
loope
jb
sbb
jecxz
scas
or
pop
pushf
imul
and
cli
pop
fiadds
lods
jnp
test
mov
nop
nop
adc
sbb
or
sti
fldcw
fsubs
jns
xchg
mov
mov
cli
or
popf
jmp
jp
into
sarl
jno
xchg
pop
inc
insb
mov
test
cltd
inc
adc
xchg
insb
jo
mov
and
sub
faddl
add
push
or
mov
or
rcl
inc
inc
stos
bound
and
push
push
fdivs
sahf
mov
aaa
mov
inc
xor
xor
xchg
dec
je
add
lock
xlat
jmp
xor
xor
inc
cwtl
jae
sbb
push
jno
sbbl
in
mov
jl
loope
adc
test
ljmp
jg
iret
fs
inc
loop
aam
insl
xor
and
pushl
roll
in
ficoms
pop
mov
sti
or
lcall
jmp
mov
jp
std
ficoml
mov
inc
sahf
mov
cmpsb
or
mov
mul
stc
stos
mov
inc
repz
xchg
outsw
xor
mov
aad
ret
iret
xchg
xchg
movsb
dec
fucomp
rcrl
push
push
mov
ljmp
and
sbb
jmp
scas
jp
imull
je
jle
cmpsb
and
enter
lock
or
push
lods
dec
jnp
mov
scas
dec
xchg
xor
dec
insb
lahf
jno
cmp
xchg
rolb
xchg
mov
jo
jnp
aam
mov
mov
lods
mov
in
into
or
sub
clc
lret
sti
pop
mov
fstps
xlat
mov
test
xor
sbb
jg
xchg
movb
ja
in
setno
jp
and
or
aad
pop
aaa
sbb
xchg
out
jne
loop
andl
xchg
shrb
loopne
std
push
lods
cmpsb
out
mov
cmp
cmp
cmp
push
push
icebp
daa
ret
push
dec
push
scas
mov
cltd
imul
add
sub
mov
in
push
sbb
inc
add
adc
jno
adc
sub
or
mov
xchg
cmp
leave
ret
mov
push
pop
loopne
cwtl
popf
inc
cmpsb
lods
popa
faddl
push
cmp
clc
fadds
dec
inc
movl
movsb
cmpsb
fs
lret
xor
ret
mov
inc
jno
and
inc
mov
in
in
iret
push
dec
out
ljmp
in
dec
loop
jb
ljmp
and
enter
cltd
jno
jno
repnz
shlb
je
dec
inc
pop
dec
repnz
sbb
aad
mov
ss
pop
xlat
loop
arpl
imul
mov
fisttpl
stc
dec
dec
pop
clc
xchg
xorb
adc
stc
dec
nop
mov
fisttpll
mov
jle
mov
sub
mov
dec
pop
pop
push
out
or
sar
enter
test
sbb
mov
clc
in
scas
adc
fmuls
sub
mov
fwait
pop
test
dec
add
dec
push
data16
inc
es
les
scas
aaa
adc
sbb
ja
iret
dec
je
jnp
setnp
cmp
push
ret
xchg
jno
js
or
outsb
fnstenv
and
or
lods
addb
in
jg
ret
push
repnz
outsl
bound
lcall
inc
or
mov
and
addb
loope
or
adc
pop
xchg
adc
sar
fldcw
inc
add
shlb
inc
mov
rorl
and
testl
inc
in
mov
push
cmp
clc
push
cmp
push
ss
insb
rcrb
in
mov
jae
push
out
jge
cmp
je
add
in
xorb
cmp
stos
mov
popf
xor
pop
mov
dec
inc
mov
mov
ret
inc
sub
popf
jle
sub
pop
dec
xor
mov
imul
cld
in
fsts
or
pop
hlt
mov
aam
ret
jecxz
mov
jge
out
mov
add
mov
test
cmp
cmpsb
adc
sub
jmp
rclb
push
sub
shl
int
inc
addl
movsl
push
inc
jmp
sahf
xor
xor
out
xchg
add
pusha
test
or
pusha
pop
clc
cmp
or
call
jmp
outsb
add
jl
and
sbbb
mov
in
ficoml
add
cltd
mov
loope
sbb
add
add
sub
or
jmp
movsl
add
xchg
sub
out
cmp
icebp
negb
pop
enter
lea
stos
out
popf
out
sbb
cmp
push
jmp
mov
lret
int3
cmp
sbb
mov
sbb
cmp
add
std
inc
mov
std
mov
push
cmc
out
testb
stos
pop
pop
nop
out
pop
icebp
and
sbb
rcrl
mov
daa
and
and
add
dec
bound
push
jae
dec
ja
mov
fld
test
mov
fisttpl
mov
add
inc
push
adc
and
mov
jp,pt
pushf
enter
push
dec
rclb
pop
loopne
and
and
ljmp
adc
xchg
xor
daa
sub
mul
in
rcrb
sbb
jb
jge
aaa
imul
loopne
movsb
std
fidivs
mov
pop
jnp
sarl
movb
stos
add
movsb
xchg
fstpt
sub
pop
data16
mov
ret
stos
adc
xchg
push
mov
mov
outsl
imul
xchg
mov
mov
ja
popf
movsl
fcmove
pop
neg
add
mov
int3
mov
dec
cmp
xor
sub
fsubrl
push
push
sub
and
push
ljmp
sub
decb
mov
xor
aad
test
test
xchg
cld
out
cltd
sar
int
xorl
insl
sbbl
shr
dec
jp
jae
mov
out
leave
sbb
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
