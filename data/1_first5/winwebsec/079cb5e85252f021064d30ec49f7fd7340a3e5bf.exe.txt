sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
lahf
xor
xchg
inc
dec
xchg
pop
sbb
cltd
mov
push
cmpl
iret
adc
jecxz
and
mov
ljmp
test
and
mov
xor
jbe
adc
mov
stos
lods
js
je
std
add
and
fidivrl
cli
clc
inc
not
and
nop
cltd
loopne
orb
enter
pop
adc
xor
add
stos
mull
mov
sahf
testl
movl
sub
incb
sahf
mov
or
cmp
addr16
cmpsl
mov
cmc
push
fs
out
lods
in
xchg
pop
les
orb
mov
inc
inc
xchg
and
xor
jne
push
mov
mov
adc
dec
xchg
in
xor
flds
movsl
sahf
or
jmp
xor
xchg
incb
and
cmp
xchg
daa
xchg
ss
cmp
les
xchg
add
pushl
pop
inc
jle
scas
outsl
pop
dec
jg
test
dec
fildl
jno
ja
push
clc
or
lods
or
push
add
aad
fwait
mov
ljmp
lcall
add
insb
pop
dec
mov
pop
pop
mov
dec
adc
in
idivb
in
jmp
inc
loopne
cld
call
cmpsl
push
add
sbb
les
mov
and
jge
dec
mov
push
in
hlt
push
loope
les
push
pop
mov
dec
inc
idivl
fcmovnb
dec
insb
push
dec
shlb
add
out
mov
mov
push
cli
lock
mov
nop
cmpsl
cmp
jp
mov
lret
pop
mov
dec
ss
pop
push
or
xchg
pop
mov
aas
aad
icebp
popf
and
inc
adc
rorb
in
push
imulb
push
rorl
mov
jmp
imul
jae
cmpsl
mov
mov
in
push
pop
xchg
call
out
out
mov
mov
cld
xor
adcb
insl
in
sbb
mov
aaa
shr
jmp
xchg
in
xorl
daa
fwait
add
loope
dec
xchg
sub
iret
cltd
das
clc
push
sub
imul
or
push
and
imul
sbb
add
sbb
push
enter
push
jmp
ror
dec
push
xchg
inc
addl
mov
mov
sub
in
ret
lock
mov
adc
lea
mov
ja
sbb
fmul
call
or
push
pop
imul
pop
jnp
testb
jbe
inc
enter
pop
dec
xor
inc
aaa
scas
out
es
sbb
jo
cltd
fmul
jecxz
jo
and
pop
jno
cld
pop
shl
inc
arpl
aaa
mov
jmp
loop
fisttps
in
pop
mov
mov
scas
mov
out
orb
movsl
int
arpl
cltd
stos
mov
lock
or
pop
adcb
dec
mov
clc
sbb
faddl
mov
add
adcl
push
push
or
daa
xorl
mov
cmpsl
xor
popa
out
mov
jmp
je
movsb
cli
and
test
sub
leave
mov
adc
cmpsb
and
or
push
jmp
xor
sbb
mov
rcl
mov
shrb
sub
cwtl
pop
and
daa
loop
std
aaa
daa
movsl
inc
js
in
mov
mov
outsl
fwait
adc
movsb
rcrl
adc
xor
mov
sbb
mov
push
or
push
and
xchg
and
and
xchg
test
lods
jb
into
out
arpl
ljmp
mull
and
fidivrl
jp
mov
sarl
rclb
sub
xor
mov
js
xor
cwtl
adc
out
jl
lds
cld
ret
push
push
or
std
aas
inc
pop
nop
inc
rcl
xchg
lock
xor
pop
pop
inc
mov
mov
lods
mov
mov
sub
outsl
sub
out
rclb
adc
insl
lcall
xor
in
scas
mov
fmull
lock
in
frstor
stos
add
inc
or
cs
push
gs
adc
movsl
cmp
out
mov
sbb
push
and
or
in
fldl
mov
xor
push
mov
jns
mov
sub
insl
and
jmp
push
inc
and
jno,pn
das
sbb
int
push
ret
in
inc
in
rolb
add
mov
xor
mov
mov
rol
mov
cltd
mov
pop
mov
xchg
inc
leave
sbb
mov
jp
cli
sub
add
adc
dec
scas
mov
mov
mov
push
mov
cmpsl
roll
mov
movsb
mov
stos
inc
mov
fsubr
shrl
lret
jae
dec
shll
push
inc
mov
nop
jnp
push
add
jae
test
mov
cmp
adc
decb
cmp
bnd
outsb
loop
add
adc
sub
adc
cs
mov
or
imul
mov
andb
jl
mov
adc
mov
adc
push
or
mov
cmp
or
in
aam
pop
sbb
adc
mov
xor
adc
push
filds
sub
push
je
lods
mov
adc
inc
mov
mov
aad
int3
xchg
fwait
xchg
aaa
push
add
push
outsl
adc
lea
adc
mov
sbb
lahf
cltd
cmc
cmp
jp
xor
mov
inc
test
xchg
xchg
cmc
std
movsl
push
out
lock
xor
xor
push
push
mov
adc
iret
notb
js,pn
jnp
daa
adc
insl
andb
sub
pop
pop
enter
adc
scas
dec
das
aaa
out
add
repnz
and
cld
call
testb
adc
push
fwait
int
dec
dec
sub
and
mov
mov
lds
push
pop
dec
loope
mov
jmp
sub
xchg
inc
inc
ljmp
mov
fmull
fiaddl
cmp
fidivl
mov
push
and
push
repnz
cltd
jg
sub
into
pushl
xor
cmpsl
xchg
push
cmp
incl
sub
cli
push
push
and
sub
add
into
pop
addr16
fsubrl
push
inc
add
out
adc
pop
xor
lds
dec
cmc
sbb
xor
je
jns
xchg
icebp
out
ret
jbe
lock
jbe
push
andb
sub
cmp
pop
xor
aam
xor
sub
lods
pop
fwait
outsl
pop
leave
sbb
xchg
xor
in
or
popf
aad
in
movsl
pop
cmpsl
push
jno
mov
jb
adc
cmp
insl
clc
enter
or
xchg
or
xchg
xlat
ljmp
pop
mov
pop
leave
mov
inc
jmp
mov
push
hlt
lea
arpl
outsl
enter
mov
sbbb
iret
bound
push
fst
mov
stos
add
jb
pop
in
add
cli
sub
adc
outsb
xchg
daa
or
lock
in
mov
aaa
pop
daa
pop
aaa
inc
cltd
push
stos
mov
ss
repnz
dec
sahf
jb
stos
xor
xchg
jp
je
pop
push
clc
in
imul
roll
inc
cwtl
sti
js
sbb
lods
inc
pop
push
sub
sub
mov
mov
lock
addb
lcall
jg
cmpsl
jmp
lds
dec
xor
lods
mov
out
js
pushf
sti
imul
and
xlat
rcrb
ds
mov
mov
pop
xor
outsl
adc
les
add
aaa
jmp
and
jae
fwait
xchg
mov
cmc
or
bound
pop
inc
scas
xor
orb
popf
bnd
popl
movsb
pop
xor
sub
push
xlat
pop
cmpsb
jmp
stos
mov
sarb
repz
dec
hlt
pop
out
lds
xchg
data16
dec
lgs
out
rcrl
cmp
orb
xchg
mov
xor
inc
or
and
mov
pop
ljmp
mov
mov
adc
ror
mov
mov
pop
add
ja
or
add
mov
cli
xchg
cmp
outsl
insb
rol
xlat
jge
pop
and
jne
mov
sub
sub
push
into
pop
xchg
dec
loopw
sub
mov
adc
mov
lret
ljmp
mov
aas
sbb
mov
xor
xor
andb
push
sbb
ret
mov
push
loopew
push
ja
push
in
jne
outsl
gs
push
adc
leave
cmc
dec
ds
test
mov
testb
push
sub
loop
mov
repz
imul
xor
icebp
mov
dec
stos
push
jne
sub
or
inc
pop
or
rolb
xor
enter
sub
cmp
out
push
cli
adc
in
cmpsl
data16
push
out
push
adc
pop
daa
sahf
test
rolb
out
insb
push
xchg
xchg
and
sub
cmovge
dec
aad
mov
pop
mov
dec
pop
xor
je
popf
mov
push
in
jb
fs
inc
cmp
xchg
movsl
pop
clc
lcall
cwtl
add
xor
ljmp
jno
lock
std
aam
push
or
rorl
inc
pop
data16
mov
aad
push
mov
xor
pop
divl
dec
add
cmp
mov
xchg
in
xor
inc
add
inc
fistps
lds
out
cwtl
or
cmpsb
dec
inc
mov
pop
in
jbe
jne
in
cmp
cwtl
out
bound
stos
sbb
adc
push
mov
xor
xchg
lret
inc
dec
inc
push
add
cmp
sub
ljmp
sub
xchg
scas
iret
in
xchg
ficoms
out
and
sarb
mov
es
inc
clc
sub
mov
fucomi
adc
mov
dec
mov
push
xchg
or
es
xor
lods
pop
push
adc
lret
sub
lods
outsl
adc
cmpsl
push
mov
push
adc
sub
push
hlt
mov
mov
lcall
mov
push
orb
pop
sarl
cs
mov
add
js
pop
ja
dec
and
add
or
add
cmp
pop
ret
test
ret
adc
mov
das
cmpsl
out
sbb
cs
mov
adc
fsubp
inc
mov
lret
mov
fistpl
dec
pop
lcall
or
movsb
push
std
gs
dec
add
sbb
sahf
cmp
sbb
call
and
adc
xchg
sbb
aas
push
mov
lret
xchg
in
rcll
jp
fbstp
xor
cmp
dec
mov
sub
xor
xorb
pop
mov
loop
in
adc
push
push
decl
in
adc
push
fsubrl
mov
gs
jecxz
mov
sahf
sub
push
add
pop
push
lret
xchg
xchg
pusha
bound
inc
mov
test
sbb
adc
in
mov
in
loop
mov
sbb
adc
pop
fisubrs
pop
hlt
cmp
lods
inc
clc
daa
xchg
pop
test
cwtl
mov
hlt
sti
and
xor
imul
adc
fisubrl
ret
pop
cmp
imul
sub
into
fldt
pop
leave
mov
mov
shlb
jae
xchg
stc
mov
pop
xchg
aad
mov
rcrl
mov
movsl
pop
xchg
fdivrs
xor
mov
aaa
int
jg
sub
cmp
lcall
push
add
insb
fwait
leave
add
sbbb
fcoml
xchg
xchg
adc
sbb
lods
stc
bound
push
sub
imul
repnz
fwait
push
and
sbb
imul
xchg
dec
fwait
push
pop
es
dec
mov
repnz
outsb
push
mov
mov
daa
ret
frstor
sub
push
xchg
jno
sub
jno
adc
dec
pusha
sub
push
jl
add
clc
aam
data16
daa
push
adcb
mov
mov
popa
add
xor
jl
jle
movsb
jae
jnp
in
les
mov
out
sub
cli
fbld
cli
fs
xchg
sahf
jp
pop
andl
add
movsl
andl
mov
push
fildl
inc
xor
xchg
outsb
sbb
repnz
iret
jns
sub
out
sub
nop
cwtl
lahf
clc
insl
add
rorl
mov
inc
fdivrl
daa
xchg
loopne
mov
clc
mov
or
loop
das
dec
repz
out
dec
fldenv
sub
in
stc
mov
inc
inc
mov
enter
jmp
mov
jnp
aaa
and
dec
cli
jae,pn
lcall
test
std
stc
mov
mov
out
xor
hlt
cs
push
and
stos
xor
or
dec
stos
jge
repz
mov
mov
mov
lock
mov
idiv
dec
jmp
adc
push
push
test
fxch
cmp
sub
inc
push
jo
fidivl
xor
adc
adc
cwtl
xchg
adc
loopne
movsl
insb
aam
bound
lods
dec
in
xchg
xor
repnz
imul
sub
fs
les
addl
daa
pop
adc
cltd
in
jmp
xor
out
mov
iret
xor
sbb
or
in
int
test
cmc
or
mov
or
fsubrl
ficompl
inc
add
and
imul
lds
add
test
add
das
xor
inc
insb
mov
mov
cmpsl
mov
pushf
outsl
jge
fmuls
filds
sub
sub
xlat
call
ss
push
adc
lcall
inc
mov
inc
lea
add
hlt
lret
xor
xchg
pop
or
cmp
mov
cmp
adc
jmp
adc
sub
stos
push
es
dec
sti
push
push
sub
add
push
aam
add
nop
scas
cli
daa
push
cs
pop
pop
stc
jmp
push
mov
xor
mov
pop
shlb
daa
jb
std
aad
lretw
mov
call
xchg
push
jp
or
mov
and
shlb
jb
cs
mov
mov
xor
fisubrl
xor
inc
gs
dec
clc
jb
ds
mov
cmpsb
sub
imull
adc
shll
xchg
mov
sub
subb
out
arpl
mov
jno
aas
test
cmpsb
push
jg
adc
enter
cld
mov
mov
ss
fs
movl
fwait
stos
xor
xchg
jb
loope
xchg
inc
mov
inc
sub
lcall
add
push
rcrl
push
pop
sub
xchg
sti
lods
adc
inc
pop
jno
adc
das
stos
pop
lcall
mov
add
out
jmp
data16
mov
ss
cmp
insb
and
xchg
mov
push
mov
pop
add
lahf
jmp
adc
jle
fdivl
sbb
xchg
ss
sub
lds
mov
inc
jmp
jg
mov
cmp
je
sbb
mov
mov
mov
push
fisubrl
cmp
xchg
push
mov
fldt
mov
adc
cmp
enter
stos
mov
pop
sti
test
dec
jg
sbb
int3
retw
outsl
popf
inc
inc
mov
popf
mov
cmpsb
inc
sbb
push
sbb
push
stc
not
push
fisttpl
mov
repnz
dec
loop
into
in
int
jne
inc
jno
mull
push
sbb
mov
mov
outsl
sbb
xor
std
test
jp
add
out
pop
and
jl
ret
roll
mov
inc
sub
aaa
jmp
sarl
fistps
adc
lock
fisubl
jne
jle
arpl
jno
push
push
jnp
in
into
fists
repz
insl
nop
loopne
rcrb
xchg
or
jg
push
mov
dec
push
ja
adc
inc
jb
jl
in
jg
jle
cmpsb
cmp
mov
mov
mov
inc
inc
lea
xchg
pop
cmp
cmp
in
out
dec
dec
das
lock
dec
pop
loope
jg
xor
mov
fwait
rcrl
mull
cli
jo
fs
push
inc
mov
sbb
xor
insl
jle
cmp
scas
lea
adc
sti
lds
sar
or
inc
xor
je
pop
push
ljmp
or
xlat
lea
js
aam
je
add
jae
shr
stos
aaa
lds
in
pop
add
clc
pushf
pop
mov
lea
inc
leave
daa
pop
fcmove
sub
cmp
push
sbb
popa
movsl
adc
sub
std
sarb
push
jno
adc
push
in
or
cmp
sahf
jg
jmp
inc
mov
imul
dec
cltd
mov
fisubs
fdivrs
mov
push
ss
call
add
cld
sti
je
mov
bound
ds
cmc
xor
repnz
testl
rol
repz
popa
push
push
mov
push
add
xchg
lds
jno,pt
sub
push
fisubs
xchg
pop
and
into
pop
add
inc
fxtract
jbe
pop
xchg
pop
cmp
iret
xor
movsl
dec
clc
fdivl
repnz
mov
xchg
test
lock
or
insl
pop
jg
nop
pop
fs
or
mov
cld
mov
mov
push
add
jg
lret
mov
fsubr
or
popa
psubb
jb
pop
jmp
in
and
clc
iret
dec
int3
outsb
add
adc
lea
scas
inc
lcall
sbb
mov
cltd
ljmp
dec
into
fs
mov
lret
pop
dec
ja
cld
cmp
lods
es
dec
inc
sbb
scas
repz
mov
insl
out
test
cltd
lods
inc
jbe
mov
js
ret
movl
jb
fwait
cmp
orl
and
mov
in
and
imul
jns,pt
shrl
xchg
fnstcw
ds
cltd
into
jmp
adc
xchg
xor
outsl
pop
jne
inc
sarl
jmp
insb
in
fsubrs
add
xor
test
call
hlt
and
and
mov
dec
mov
dec
add
jmp
fsubrs
sti
xor
cltd
inc
sbbl
jmp
cmp
xor
and
jmp
mov
hlt
mov
stc
sub
xor
mov
and
in
mov
ret
call
in
dec
pop
outsw
xchg
jge
sub
imul
sub
outsl
scas
outsl
cmp
mov
out
je
mov
jne
rolb
rolb
cmp
rorb
sbb
mov
push
scas
inc
std
mov
adcb
mov
repz
inc
add
xor
pop
pop
fmuls
add
cmpsl
xchg
and
sub
lea
imul
inc
ficoml
pushf
pop
fwait
push
addr16
xchg
fwait
jae
clc
aaa
rorb
cmp
dec
xchg
push
out
pusha
fucom
jle
maxps
dec
cmpsb
pop
pop
ds
jg
adc
ja
shlb
pop
ret
jp
movsw
loopne
hlt
jg
js
mov
adc
subl
inc
pop
sub
fstpl
jl
js
add
xchg
leave
iret
add
and
fistl
orb
and
mov
sub
sti
push
fstps
pop
outsb
movsb
xchg
cld
cltd
adc
insl
mov
jmp
sti
push
das
fisttpll
and
jle
cmp
xor
popl
insl
jmp
cmpsb
sbbl
and
rolw
pusha
jle
dec
or
adc
popa
mov
push
or
adc
outsl
popa
out
add
int
dec
movnti
sbb
out
je
inc
gs
xchg
xchg
scas
xor
sahf
aas
pop
add
loopne
fimull
sbb
test
ret
push
xor
pop
sbb
addr16
mov
sub
jb
fsubl
repz
dec
enter
sub
sbb
sti
lods
fs
jp
cwtl
test
xchg
scas
mov
pop
push
adc
movsl
shr
push
adc
push
insb
adc
dec
cltd
xor
mov
fwait
sbb
mov
jo
jb
repz
add
cltd
pop
add
out
jmp
enter
cli
lahf
xchg
call
push
or
cwtl
push
call
and
ret
sbb
dec
cmp
lret
sbb
shrb
imul
insb
and
lahf
addr16
xchg
bound
push
icebp
insb
shll
and
stc
push
outsl
or
pop
cmpsl
stos
lea
add
pusha
dec
xchg
jle
inc
nop
push
rclb
ret
cmp
push
pop
cmp
enter
jno
add
scas
icebp
fwait
or
lods
outsb
loop
add
pop
pop
mov
in
aam
push
push
stc
mov
daa
mov
lret
or
pop
cmp
jmp
outsb
xlat
lret
xchg
loop
iret
out
cmp
insb
insl
xor
push
mov
popl
mov
sbb
push
sbbb
loopne
mov
inc
pop
es
pop
mov
rcrl
shrl
pop
sub
push
xchg
fcomi
jb
xor
lcall
imul
adc
xor
les
pop
hlt
jb
add
adc
ss
and
sbb
mov
add
jnp
lahf
adc
xchg
cli
mov
lcall
das
sbb
lahf
mov
jge
xor
cld
imul
stos
jg
mov
inc
inc
adc
and
jle
mov
sub
call
cmc
jp
fs
pop
dec
sbb
jmp
sub
cli
movsl
icebp
push
xchg
mov
addl
mov
mov
out
ret
lock
imul
cld
incl
daa
iret
call
or
clc
inc
mov
shrb
inc
xor
adc
pusha
test
sub
test
cmp
sub
scas
stos
lods
fs
lds
pop
ja
xchg
ss
sahf
mov
cld
ret
call
loopne
adc
mov
in
call
lods
inc
sbb
addb
mov
push
and
popf
je
mov
mov
inc
and
notb
or
add
pop
call
dec
fadds
bound
in
mov
shr
xchg
xchg
loope
fnstsw
lcall
dec
movsl
push
adc
sub
mov
shr
shll
repz
addr16
and
jns
in
in
mov
jne
aas
or
lock
fidivrs
cwtl
sub
pushl
lcall
xor
ret
outsl
xchg
dec
mov
dec
push
cmp
jbe
dec
add
inc
inc
icebp
xchg
into
in
lret
roll
test
popa
push
mov
pop
sti
xorb
ret
cmp
mov
nop
sahf
cli
and
jle
and
cltd
ljmp
aam
xchg
push
stos
cmp
sarl
int3
sbb
push
icebp
sbb
mov
adc
rcrl
mov
mov
cmpb
jge
pusha
sub
cwtl
leave
adcb
test
js
dec
push
andl
adcb
rcr
dec
mov
aas
stos
arpl
lds
or
scas
movsl
dec
std
out
mov
data16
mov
add
jle
sbb
cmp
sub
hlt
sbb
cmp
add
jbe
movsb
pop
jne
xchg
xchg
imul
loop
lcall
les
decl
lahf
jle
xchg
leave
xor
push
adc
push
inc
cmp
push
js
push
mov
mov
adc
push
sbb
fcoml
movsb
add
xchg
lret
addb
xchg
mov
cld
pop
ret
gs
lock
mov
and
adc
int
dec
and
out
push
push
outsl
xor
push
rcrl
les
sbb
mov
dec
fiadds
xlat
cld
sub
bound
mov
lods
lahf
xchg
lods
xor
stos
dec
fldt
add
fs
dec
loop
xchg
insl
push
into
gs
mov
xor
jp
mov
mov
into
dec
aam
jno
ljmp
loopne
fstpl
add
call
pop
mov
ret
lret
nop
mov
repnz
inc
sarl
push
or
mov
cmp
jmp
lahf
xchg
aad
fdivrs
push
sbb
cmp
xchg
xchg
mov
shl
or
add
jge
mov
fcomps
xor
mov
lods
addr16
mov
adc
cmp
arpl
jle
out
dec
pop
push
and
mov
xchg
insb
roll
loopne
clc
pusha
fnstsw
xor
aas
xorb
push
leave
mov
inc
ja
mov
xchg
cmp
cs
aaa
test
les
xor
bound
pop
add
std
jo
loop
cld
sti
lret
add
dec
mov
test
and
pop
cld
test
xchg
into
sbb
sub
call
dec
fcmovnbe
dec
push
xor
ret
shrb
sub
xchg
xchg
jnp
pop
addr16
inc
sbb
xchg
push
aas
xor
xchg
das
out
mov
ds
xchg
clc
out
jns
adc
pushf
ret
cld
ret
not
gs
and
in
loop
push
aaa
adc
aaa
cmovo
out
addr16
and
sbb
mov
lods
shrb
xlat
mov
mov
xorb
shrl
mov
jne
pop
outsl
add
movsb
add
push
pop
fld1
mov
out
out
and
xor
jecxz
dec
mov
nop
mov
jo
hlt
mov
loopne
mov
or
int
cs
jge
sbb
mov
clc
insl
imul
sbb
fcoml
cmp
cmp
xchg
add
movsb
push
jecxz
dec
mov
sbb
fisttps
lods
ss
pop
xchg
aas
jecxz
in
jge
dec
xchg
xor
testb
shll
push
shrb
sbb
adc
add
jno
pop
fcoms
mov
pop
dec
cmp
int
dec
movb
mov
out
sti
frstor
mov
cmp
aam
push
mov
or
jo
dec
push
test
and
jnp
adc
mov
dec
lret
call
mov
mov
xor
fcompl
xor
lods
pushf
mov
sub
shr
dec
shll
jle
and
xchg
push
clc
add
movsb
mov
mov
lret
inc
outsl
cmp
subb
imul
mov
out
or
mov
sbb
cmpsl
loope
or
cmp
xchg
pop
dec
fsubp
bswap
sub
mov
jo
imulb
ja
sarb
loopne
aas
push
lret
sub
cltd
push
fwait
cmp
mov
dec
jbe
jmp
jb
arpl
mov
dec
js
pop
jp
cmpsl
aam
mov
push
xchg
out
jmp
roll
sbb
into
push
push
nop
into
cmp
jmp
dec
cmp
cld
mov
jg
imul
add
cmovp
jl
dec
dec
fwait
fs
les
push
fadds
fmull
adc
cmc
aas
icebp
dec
scas
push
xor
arpl
arpl
jns
cs
nop
std
xchg
or
lcall
ljmp
pop
pop
jns
out
pop
enter
repz
or
inc
jbe
test
xor
xorb
jbe
aaa
aad
mov
adc
and
movsb
cli
mov
sub
ds
push
add
fistpll
inc
lret
jmp
push
push
fdivrp
xchg
cmc
fistpll
leave
sahf
dec
imul
jecxz
and
mov
mov
mov
shrb
or
incb
and
cli
cmpsl
pop
outsb
rcrb
or
inc
adc
aam
in
sbb
pushf
inc
loopne
mov
addl
and
push
push
daa
pop
inc
add
xor
xor
pop
hlt
sub
subb
ret
lods
in
jo
aas
scas
and
aaa
jge
fdivs
pop
popa
es
bound
cmp
fcomip
into
push
icebp
std
jmp
push
leave
and
dec
aam
cmpsl
mov
fwait
cmpsl
fwait
mov
jnp
or
cli
lock
mov
scas
push
fistpll
repz
int
aas
cmpl
fwait
imul
xor
lods
xor
rcl
jo
or
jbe
pop
mov
add
pop
movsl
cwtl
pop
mov
jmp
pop
dec
and
and
cli
movb
cmp
and
push
lret
orb
clc
mov
push
ret
fildll
ret
sub
lret
popa
mov
mov
pop
orb
pop
lock
add
fucomi
adc
int3
push
mov
popl
test
ja
and
inc
outsb
cmpl
ds
int
in
or
lods
std
pop
inc
out
gs
xchg
xchg
pop
mov
adc
addr16
add
and
es
sbb
test
push
shr
dec
cs
inc
xchg
jl
mov
jge
or
aas
fldl2e
cwtl
push
xchg
inc
pop
stc
xchg
sub
lret
leave
test
lods
xorl
jl,pt
arpl
into
mov
push
test
xchg
dec
mov
add
dec
push
in
mov
sbb
mov
xchg
mov
inc
fistpl
xchg
pop
mov
fidivs
inc
fsubs
loop
mov
icebp
out
inc
or
jg
pop
sbb
jmp
push
cmp
mov
push
shr
shl
inc
lock
jle
xchg
inc
stos
inc
into
sbb
movsb
adc
or
and
loop
gs
aad
das
jl
jmp
fstpt
or
imul
notl
or
lcall
dec
sub
dec
pushf
xor
push
sub
fdivrs
dec
pop
test
mov
addb
dec
inc
imul
push
jae
mov
push
mov
bound
and
repz
sbb
lret
pop
scas
xchg
pop
enter
pushf
jmp
jne
jbe
cs
sub
mov
dec
pusha
push
fwait
xchg
xlat
cmc
test
shlb
push
and
mov
fsubrp
dec
mov
fcoml
fs
aaa
loope
rol
push
add
ljmp
icebp
inc
cs
cmp
and
and
out
jnp
xor
mov
xchg
dec
in
cmp
pop
sub
pop
push
xchg
popa
cld
scas
xlat
stc
inc
setne
jmp
xchg
lods
or
or
sbb
push
adcb
dec
outsb
insl
scas
jo
insl
loop
ficoms
adc
fidivl
mov
xor
xchg
mov
jmp
add
movsl
mov
cmp
movl
dec
cmpsb
cli
cmp
in
xorb
xchg
and
xchg
mov
dec
mov
dec
or
push
fcoms
rclb
cs
out
rcll
inc
imul
pushf
push
sbb
std
push
push
dec
test
sub
cmpsl
xor
xor
sarb
dec
and
or
lcallw
push
or
les
cltd
add
lods
mov
add
sbb
ss
mov
jo
shr
add
cmpsl
nop
cmp
pusha
insb
fwait
scas
in
mov
xchg
aaa
mov
mov
push
popa
dec
xor
sub
pop
in
aad
inc
mov
dec
clc
mov
mov
fwait
mov
mov
lret
dec
sub
sbb
stos
fs
fadd
sub
or
xchg
add
push
xchg
cld
lahf
inc
out
jnp
decb
pop
aaa
sub
lock
popa
xchg
adc
imul
pusha
push
push
dec
cli
mov
insl
cmp
pop
sub
mov
cld
fldcw
lods
lods
inc
and
enter
aaa
aam
clc
fsubs
jae
dec
jno
scas
lahf
mov
filds
das
or
ficoml
jnp
mov
pop
psrld
cwtl
fstl
cld
js
filds
rcrl
lahf
and
sbb
aas
in
sub
sbbb
movsl
jle
ret
cmp
leave
pop
popl
sub
or
and
lods
fidivrs
sub
jge
mov
fs
jp
sbb
push
mov
pusha
dec
flds
push
adc
mov
cmp
mov
jns
fadds
imul
test
sub
inc
shlb
adc
sbb
inc
aas
mov
rcrl
lock
jp
pop
sub
xchg
xor
inc
dec
rcl
mov
jecxz
jns
aas
dec
pop
jge
adcb
xchg
lods
and
imul
in
out
scas
fs
sub
dec
or
in
inc
inc
mov
iret
subl
hlt
cmp
jbe
test
pop
lods
push
js
in
mov
push
push
std
cmp
xchg
jno
dec
xor
or
and
inc
xor
std
inc
and
data16
mov
mov
iret
or
xor
sbb
add
loope
test
push
lahf
fsubrs
adc
lcall
sub
std
inc
add
mov
mov
mov
inc
lret
je
repz
rolb
scas
in
push
sbb
bnd
pop
sub
jge
xchg
outsl
cmp
flds
cmc
repz
or
sbb
aam
and
dec
test
lods
popl
sub
ljmp
repnz
dec
push
inc
jno
addr16
sub
xchg
in
lock
out
popf
push
lods
leave
add
icebp
repz
arpl
in
insl
repnz
es
test
xor
inc
pop
sub
sbb
mov
push
test
dec
mov
cmp
dec
cmpb
pop
out
ja
addb
roll
cltd
dec
jp
xor
pop
adc
and
rolb
movsl
lahf
pop
push
in
ret
sbb
movsb
ss
add
fldenv
inc
outsb
dec
lea
sarl
aaa
sbb
repnz
std
cmp
push
insb
leave
mov
call
insb
push
pop
dec
outsb
arpl
adc
int3
jb
movsl
jl
pusha
xchg
adc
popa
cmp
icebp
adc
cmp
aam
ret
out
sub
in
sbb
add
fcoms
in
push
inc
pop
cmpsl
sbb
rcr
pop
dec
xchg
add
dec
cli
lcall
push
call
mov
sbb
fisttpl
in
aaa
push
icebp
pop
dec
jbe
in
add
ds
or
fs
mov
add
push
gs
dec
cmp
add
mov
lea
xchg
pop
mov
inc
xchg
xor
mov
add
cltd
iret
out
jmp
jne
xchg
clc
and
call
add
minps
mov
xchg
sub
lock
loopne
fs
mov
in
sbb
or
mov
add
cs
jge
std
push
cmp
into
call
adc
jge
pop
jmp
movsb
fidivl
sbb
inc
pop
rorl
out
pop
and
and
push
dec
fucom
jmp
cld
mov
cmpsb
xchg
lcall
or
sub
push
xchg
pop
loopne
sbb
pop
test
pop
mov
and
adc
jno
fisubrs
enter
fstps
jb
into
outsb
cmc
and
cmc
testl
mov
pop
adc
inc
jle
and
imul
mov
mov
bound
cli
out
xor
jg
dec
popa
jno
sbb
loopne
or
je
jne
notb
int
cmc
sub
cmp
xchg
or
dec
lahf
or
fs
divb
sahf
jmp
dec
test
mov
test
test
mov
jne
jno
lods
cmp
mov
pushf
add
ficoms
add
jb
cmpsb
pop
mov
xchg
addr16
popf
lock
mov
insl
pop
fwait
sbb
ljmp
jmp
cmp
lods
cmp
xchg
call
lods
cmp
sbb
ss
aaa
js
cmpsb
and
pop
inc
iret
and
or
std
xchg
scas
shl
imul
cld
inc
sub
lods
sub
ficoml
scas
or
inc
je
pop
add
pushf
sti
mov
dec
addr16
adc
pop
fprem1
data16
sarb
pop
jl
sub
inc
ljmp
mov
stc
adc
xor
add
outsb
pusha
arpl
xchg
jge
or
add
das
in
lret
in
fsubs
adc
xchg
das
aaa
leave
cmpb
dec
shlb
push
push
int
out
jle
jnp
sti
or
cmp
test
jecxz
sbb
sbb
bound
lods
mov
in
into
sub
insl
sub
in
adc
cmp
pop
add
movsl
outsb
lea
fcmovu
mov
jno
es
ss
add
fisubl
test
push
inc
and
xchg
sbb
push
add
xchg
jae
in
xorb
sub
out
and
lret
cmc
dec
clc
idivl
test
sbb
xchg
inc
cmpsb
jne
cmpl
idivb
fisttpl
xchg
dec
dec
jns
mov
rolb
jnp
sub
fs
push
ret
jecxz
lahf
jns
in
sbb
popf
je
mov
or
js
lret
xchg
jmp
push
xor
scas
push
xchg
cmc
aas
test
mov
icebp
and
cmp
push
inc
lods
dec
cmp
inc
adc
ret
aaa
or
jno
iret
mov
inc
jno
std
cmc
push
pop
jno
mov
xchg
inc
pop
pop
aas
dec
cmp
add
popa
sahf
std
cmp
jge
out
sbb
in
jmp
push
ret
mov
loopne
inc
lret
inc
js
std
inc
js
cltd
mov
or
sub
repnz
push
dec
insb
push
out
mov
aad
push
push
add
and
rclb
mov
test
dec
inc
int3
pop
xor
lea
jl
jae
rolb
fiaddl
push
xchg
push
mov
out
pop
dec
out
inc
jbe
ljmp
shrb
arpl
sub
inc
inc
sahf
jge
inc
xor
cmpsb
jno
test
daa
in
xchg
mov
mov
fst
adc
mov
dec
clc
leave
jmp
lods
dec
xor
popf
xor
mov
jle
out
cmp
xchg
sub
pop
xor
cmp
pop
fdivrs
out
es
mov
xor
aas
xlat
jo
sahf
push
ficoms
lret
lds
sbb
mov
fcoms
pop
fiadds
sar
es
pushf
mov
aaa
mov
and
daa
or
cmc
loopne
add
pop
rcrl
inc
sbbb
cltd
repz
stos
or
test
test
enter
aas
pop
fldcw
push
in
inc
lock
scas
lret
xchg
lret
movsl
inc
pop
sub
in
xchg
daa
or
inc
sbb
scas
sbb
push
push
xchg
clc
fbld
sarb
movsl
pusha
xchg
and
movsb
frstor
imul
adc
mov
dec
test
jmp
loopne
out
sub
rol
lahf
stc
cs
push
sahf
cmpsl
stos
add
cltd
jecxz
sbb
ljmp
add
push
and
les
repz
or
xorl
push
and
test
sbb
mov
pop
insb
es
imul
inc
sbb
dec
jp
xor
dec
jnp
pop
ljmp
lock
loop
leave
shlb
jl
icebp
and
fwait
dec
fisubs
lcall
mov
jmp
xor
fisubrs
cwtl
rol
arpl
mov
aam
js
mov
mov
push
mov
jecxz
cmovae
mov
sub
cmpsb
and
dec
loopne
call
lret
pop
idiv
lds
push
mov
push
test
fiadds
imul
push
mov
aam
xlat
dec
xor
addl
inc
mov
hlt
pop
mov
mov
popf
push
pop
push
dec
or
jp
mov
inc
aam
and
and
lods
xchg
scas
jbe
add
repz
das
sub
lret
aam
out
sub
mov
daa
mov
es
cli
rclb
dec
faddl
mov
ror
aam
lret
int
jae
sbb
cwtl
mov
and
pushl
mov
or
scas
push
cmp
out
or
xchg
mov
mov
out
out
inc
imul
cld
add
es
and
and
jns
out
xor
xchg
add
jb
add
mov
sub
mov
sub
shrb
addr16
dec
push
sbb
xlat
in
stc
sub
loop
testb
add
jle
sbbb
int3
imul
pop
mov
push
add
mov
add
cmp
repnz
push
xor
and
nop
in
jecxz
cwtl
aam
add
inc
iret
push
sbb
add
mov
es
lock
or
mov
out
cmpsl
adc
divl
push
cmp
push
lahf
cltd
jb
test
cmc
inc
inc
test
shll
push
push
shll
data16
or
and
and
loopne
mov
pop
lret
dec
add
mov
and
js
sbb
adc
test
mov
je
and
push
pop
sub
enter
movsl
xchg
dec
in
mulb
nop
or
aad
scas
in
stos
add
push
sub
push
aaa
ja
mov
or
imul
pushf
xchg
or
or
test
sti
adc
dec
les
push
push
std
loop
cs
movsl
dec
mov
pop
mov
mov
not
cmc
imul
jle
sbb
mov
adc
dec
sti
cmpsb
mov
jecxz
cmp
scas
int3
loopne
mov
loope
ret
jo
in
mov
lods
sbb
add
lds
jle
sbb
mov
dec
and
add
aam
jnp
push
outsl
mov
arpl
xor
mov
dec
sub
push
and
dec
divb
addb
int
mull
shrb
adc
add
mov
mov
inc
movsb
sbb
xchg
inc
or
sbb
cld
push
outsl
or
sbb
pop
mov
bound
fs
sub
lcall
ret
mov
lds
cmp
jbe
rolb
push
fadds
lods
addb
and
icebp
sub
leave
mov
lods
das
sbb
mov
mov
test
ds
scas
sub
mov
or
subb
outsb
pop
outsl
mov
mov
clc
inc
lds
jmp
mov
mov
das
mov
pop
pop
pop
mov
xchg
mov
xchg
repz
popf
push
adc
addr16
and
cmp
mov
lret
loopne
rolb
push
imul
subb
mov
hlt
or
rorb
insl
inc
mov
push
fstl
cmpl
cmpsb
lahf
fldt
adc
push
pop
xor
mov
mov
test
in
mov
sub
xlat
and
mov
movsb
shrl
popl
ret
fstl
push
mov
pop
sub
sbb
add
scas
sub
addb
adcl
add
setno
repz
stc
push
sbb
xchg
jae
stos
push
sbb
ljmp
cli
mov
andw
xchg
jle
lock
add
leave
lret
sub
and
ret
out
test
jne
jnp
dec
and
sub
inc
test
and
dec
sahf
xor
movsb
xchg
add
jl
popa
loope
mov
jecxz
dec
pop
lret
jnp
sarb
inc
fdivrl
mov
fdivrl
adc
lods
mov
or
push
sti
xchg
mov
ljmp
lds
mov
mov
arpl
jge
add
pop
outsl
pusha
test
push
cmc
mov
sti
sbb
out
or
mov
shr
sub
fmull
mov
mov
sub
adc
add
sbb
cmp
enter
sub
pop
or
das
ret
lods
sub
sub
lock
or
jb
jle
cs
rorl
ret
out
jmp
dec
inc
aam
out
mov
jno
stos
cmp
movsb
clc
jns
xor
mov
pop
ss
xchg
fdivs
sti
cmpsl
add
jnp
push
sbb
cmpsb
js
mov
dec
dec
cmpsl
adc
mov
sub
jnp
clc
mov
shlb
in
out
jne
in
icebp
mov
pop
hlt
sub
das
xchg
pop
sbb
stos
or
and
cmp
loope
cwtl
inc
fs
shll
dec
xor
xor
mov
enter
fdivrs
std
adc
cltd
mov
jge
pop
or
rep
push
pop
loope
inc
in
inc
mov
repnz
test
xchg
push
xchg
xchg
inc
jns
pop
dec
mov
sbbb
mov
aad
adc
cmp
xchg
cmp
clc
lods
push
icebp
and
les
mov
cmp
pop
jnp
or
loopne
mov
pop
mov
pop
jbe
mov
pop
movzwl
inc
xlat
fisubs
lock
loopne
rolb
push
int3
push
jmp
pop
inc
jns
arpl
add
inc
rorb
push
shll
xor
lods
push
insb
sub
aam
pop
jno
xchg
sub
gs
mov
inc
scas
push
push
lods
fisubrl
hlt
mov
hlt
rcll
je
sub
xor
in
testl
fstpl
adc
fwait
pushf
and
daa
test
cltd
mov
out
sub
jbe
xchg
scas
mov
in
push
push
push
add
mov
lret
pop
ljmp
cs
inc
lret
jno
rol
shrb
jge
mov
movsl
add
cmpsl
mov
in
or
loopne
mov
add
jno
movsl
fwait
jne
lods
or
mov
gs
lahf
in
mov
cmp
mov
shll
dec
xchg
in
sbb
movsl
sahf
mov
jl
wrmsr
inc
into
mov
call
push
lock
inc
pop
je
fwait
pop
xor
adc
push
xchg
xor
mov
mov
repnz
call
je
pop
lock
pop
jmp
test
push
scas
push
xchg
lods
push
enter
mov
sub
add
andb
aaa
jo
and
jb
or
add
xchg
and
clc
out
insl
jno
in
and
leave
sub
inc
aas
test
mov
ljmp
popa
imul
lcall
push
cmp
sub
mov
loop
icebp
push
push
shrl
xchg
xchg
arpl
push
or
xor
dec
andb
pop
mov
shrb
dec
mov
sbb
fwait
xor
adc
mov
lods
mov
lock
jo
sbb
filds
jbe
push
aam
inc
pop
or
sahf
pop
je
aad
xchg
adc
push
cmpsb
push
orb
js
test
and
lods
xlat
and
or
lcall
scas
loopne
arpl
cmpsb
imul
pop
test
ja
das
fwait
add
dec
inc
rcll
pop
mov
imul
sub
cmpl
in
add
cmp
insl
mov
cld
adc
mov
mov
xchg
adc
and
or
or
fwait
dec
jl
daa
and
repz
xor
lods
sbb
fisttpl
sbbl
mov
jle
rclb
clc
pushf
pushf
loopne
jle
jbe
dec
lcall
scas
data16
xchg
add
add
jge
jle
aad
or
fmull
bound
cli
rcll
adc
data16
mov
pop
outsl
dec
mov
shll
adc
add
jne
repnz
js
cmp
cwtl
push
push
mov
test
lahf
les
in
aam
jg
mov
push
and
dec
cmc
std
adc
xchg
out
out
fwait
lret
mov
mov
jle
rcl
idiv
and
imul
inc
add
pop
test
push
sbb
out
push
testb
out
or
subb
ja
xor
pop
lods
jne
imul
inc
push
scas
js
scas
push
fs
out
lret
add
pop
enter
hlt
fisubs
pop
mov
inc
and
fiadds
inc
mov
hlt
ret
and
sub
sbb
arpl
popf
dec
mov
cmc
lcall
cmpsl
adcb
testl
dec
lods
or
lock
pop
lret
pushf
mov
fwait
sbb
push
sbb
flds
push
shlb
loope
fsubs
lods
push
pushf
push
jae
outsl
mov
mov
test
xchg
mov
xchg
jge
sbb
cld
lds
mov
add
clc
or
jae
bound
dec
ja
outsb
sub
mov
and
push
mov
aaa
aam
add
sbb
les
loop
cmp
mov
int3
push
and
ret
cmp
aas
mov
pop
ror
cmpsl
repz
lods
dec
sbb
inc
lahf
xlat
fnsave
movsl
ret
mov
push
lcall
clc
movsl
lods
out
sti
fisubrl
or
lock
mov
mov
mov
adc
fstpl
imul
enter
inc
je
sahf
dec
push
in
push
sbb
pop
test
jno
mov
pop
aas
clc
mov
mov
xchg
out
call
data16
scas
hlt
dec
push
ret
daa
fnstenv
mov
nop
loop
ss
pop
and
cmp
shrl
popa
mov
mov
testl
pop
repz
jnp
in
stc
push
jb
or
cli
lret
popf
shlb
adcb
dec
jecxz
mov
mov
push
adc
dec
sti
ljmp
xchg
in
add
inc
jnp
gs
jns
cmpsb
push
call
test
mov
mov
add
xor
sub
mov
add
dec
int
fisubrs
sbb
test
xchg
add
mov
ret
pop
mov
in
popa
imul
sub
mov
leave
les
cld
push
push
mov
sarl
stos
pop
ss
pusha
loop
adc
sub
loope
pop
mov
in
cmpsb
and
notl
xchg
pop
scas
sti
repnz
or
mov
mov
add
xor
and
lahf
push
sbb
mov
adc
loop
jmp
mov
outsl
rcrb
adc
push
mov
imul
clc
and
call
lock
ret
loope
push
andb
mov
test
inc
mov
xchg
pop
adc
mov
and
out
mov
xchg
cltd
push
les
mov
daa
mov
xchg
ret
mov
xlat
shll
aad
dec
repnz
push
gs
orl
out
mov
divb
add
rol
sub
sub
aam
add
jmp
push
cmp
mov
inc
shll
add
cmp
mov
jo
push
test
sub
inc
and
xor
stos
cmpsb
add
jbe
push
push
push
ja
pop
jae
daa
popl
inc
mov
lds
cld
mov
sub
leave
cli
sbbl
xchg
test
fwait
sbb
and
cmpsb
adc
ret
aam
push
push
xchg
mov
aad
push
sub
and
cli
dec
test
out
push
add
loop
cmp
shlb
and
xor
sbb
add
les
push
pop
and
add
cmp
push
fcoml
push
xchg
movsb
jb,pt
js
or
adc
imul
pushf
pusha
jb
jae
mov
mov
pop
dec
arpl
repz
sbb
int3
lds
mov
sahf
mov
es
xchg
and
lea
into
and
pop
dec
xor
pop
pop
mov
mov
stos
push
mov
xor
inc
inc
dec
mov
loope
cmp
inc
jge
repnz
ljmp
add
add
lea
jb
daa
scas
sbb
push
or
xchg
jmp
loop
pop
imul
mov
cmp
pop
sbb
inc
or
mov
xor
xor
cmp
into
adc
hlt
xchg
dec
cmp
imul
or
adc
cltd
and
add
les
push
add
or
mov
cli
scas
test
lret
inc
adc
lods
fisttpll
ficoms
pop
xor
mov
loopne
movsb
inc
and
dec
inc
cmp
js
lods
jmp
mov
es
iret
ret
add
push
sbbl
inc
daa
add
ret
je
jns
sahf
rorl
inc
xor
rcrb
xchg
jnp
push
or
push
pop
xor
pop
and
push
xor
push
aas
dec
cli
pop
roll
call
shr
jmp
fdiv
hlt
out
cmc
aaa
insb
sti
fistl
inc
mov
push
mov
mov
fimuls
ja
scas
jl
iret
aas
addr16
in
bound
mov
xor
pusha
or
inc
inc
or
ljmp
aas
loop
popa
adc
mov
pusha
sbb
mov
sbb
int
imul
testl
dec
adc
lcall
out
addr16
dec
xchg
sub
xor
and
cmpsl
fldl
fisubrl
aam
jge,pt
rorb
mov
outsl
pop
xor
inc
mov
inc
xchg
loope
rcl
arpl
out
cmp
rcll
mov
ss
pop
push
jo
mov
insb
ljmp
or
inc
stos
push
cmpsl
inc
fsubs
adc
sub
icebp
outsb
pop
insb
mov
mov
pop
xchg
cmp
ja
aas
pop
push
dec
mov
push
imul
insl
push
shl
movsb
rolb
arpl
ds
lds
sbbb
std
mov
jae
ret
xchg
push
repnz
pop
mov
cmpsl
xor
repz
and
sub
mov
jecxz
pop
mov
xor
stos
and
inc
fldenv
call
sti
iret
dec
mov
cmc
lcall
and
and
repnz
jne
xor
fstl
lods
fst
andl
xor
ja
ret
fmull
mov
mov
sbb
and
das
js
mov
mov
out
xor
retw
clc
cmpsb
out
xchg
cli
lds
inc
sub
sub
inc
jge
and
pop
xor
js
xor
sbb
dec
sub
or
mov
shll
cmpsl
inc
imul
div
and
insb
and
das
xchg
adc
insl
movsl
lea
ja
mov
cmp
mov
mov
bound
dec
sbb
out
dec
notb
inc
cmpsl
into
and
ds
mov
mov
adc
lock
sbb
shlb
out
inc
mov
imul
lods
dec
mov
pop
sbb
or
cli
or
mov
cmp
adc
mov
lcall
gs
lret
xor
cmp
std
or
push
loopne
xor
jo
jnp
add
sar
and
adc
mov
addr16
jg
mov
addr16
aas
add
lods
imul
movsl
ja
pop
jb
repnz
in
xchg
loop
mov
leave
call
dec
das
push
jge
pusha
cmp
dec
loop
in
imul
sub
faddp
inc
cmp
fnsave
jo
insl
je
mov
imul
inc
lret
stc
popa
test
cmc
jle
out
sub
or
dec
aaa
stc
push
mov
sti
add
int3
mov
and
das
xlat
inc
cmp
dec
sbb
adc
arpl
dec
jne
cmp
cmpsl
sub
pop
dec
cmp
mov
mov
add
jo
pop
mov
dec
push
ret
rorl
ss
pushf
data16
sub
cmpsl
sbb
jmp
jp
ret
mov
cmc
push
mov
ja
mov
in
into
mov
repnz
sbb
xchg
imul
fnstsw
aam
xchg
stos
sahf
rclb
and
fs
add
cmpsl
rorb
pop
dec
mov
dec
add
pop
inc
dec
push
scas
inc
addr16
inc
stc
je
mov
add
pop
pop
addr16
lds
mov
xchg
jnp
or
jb
mov
and
mov
and
jmp
inc
mov
mov
or
ret
dec
repnz
repnz
lock
addr16
in
gs
shll
sahf
shl
add
sbbl
sub
outsl
xchg
pop
jge
push
or
ret
and
insb
mov
cmp
lea
sbb
rcr
pushf
jo
ja
nop
out
mov
inc
out
push
cmp
movsl
xor
pushf
shl
aad
int
mov
xchg
cltd
push
mov
dec
clc
orl
xchg
xchg
or
movsl
bound
outsl
outsb
xchg
in
fwait
xor
js
cmp
out
inc
sub
gs
push
cmp
push
mov
sbbl
inc
or
movsl
insb
mov
dec
lcall
pop
daa
mov
jb
imulb
pop
pop
mov
xchg
jg
add
ja
pop
push
dec
sub
ja
xchg
pop
cs
jl
dec
lds
cltd
mov
mull
adc
jmp
mov
ja
sub
jmp
mov
dec
jp
mov
loopne,pt
movsl
fidivrs
push
dec
dec
pop
loopne
ret
dec
aaa
xor
pushf
fisttpl
fstl
adc
jns
mov
push
fisttps
fidivl
jg
xor
rcll
xor
js
cwtl
adc
in
mov
inc
call
pop
test
jne
test
sbb
xchg
sbb
lret
loope
adcb
cmp
int3
es
mov
popfw
mov
push
outsl
xchg
and
mov
addr16
mov
jge
pop
loopne
rclb
sbb
push
adc
inc
call
imul
stos
je
hlt
add
test
xchg
xchg
jge
imul
mov
ja
addr16
aaa
inc
push
xchg
push
add
mov
mov
loope
mov
mov
sbb
into
dec
cmp
push
ss
popf
dec
add
cmp
lcall
sbb
popf
addr16
ds
ja
pushf
push
dec
insb
or
xor
push
and
lret
mov
insb
sbb
dec
insl
ljmp
and
pop
pop
test
into
popf
push
add
or
cmc
shl
sbb
and
or
mov
cmp
std
scas
push
pop
mov
mov
pop
neg
pop
repnz
mov
cltd
mov
pop
inc
and
shr
push
pop
or
gs
jecxz
aam
lahf
adc
push
mov
shl
mov
imul
jmp
dec
stc
and
xor
mov
sahf
addb
or
ret
sarb
test
outsb
movsb
sbb
inc
into
lcall
in
push
dec
jg
or
add
ja
mull
jns
inc
jp
add
rcrb
or
repnz
jmp
sti
pop
loopne
aad
xor
sbb
test
dec
and
popf
xchg
pushf
adc
cmc
fsqrt
pop
pushf
aad
inc
xchg
loopne
dec
icebp
cltd
cmp
add
and
push
mov
ds
jg
test
daa
lds
adc
mov
jecxz
repnz
in
adc
pop
xchg
es
idivb
and
stos
call
add
push
sbbl
adc
inc
mov
nop
jns
mov
mov
outsb
stos
vmwrite
data16
cld
icebp
or
jg
push
pop
enter
xchg
pop
push
loope
mov
lds
cli
or
cwtl
loopne
mov
scas
repnz
inc
pop
jl
mov
ljmp
lock
lock
mov
pop
mov
xchg
or
adcb
mov
adc
dec
nop
mov
jo
test
mov
jecxz
xor
push
lds
cltd
jns
mov
movsb
repz
xchg
test
loopne
mov
mov
stos
and
xchg
syscall
ss
pop
cld
aad
out
repz
insl
and
push
fstps
inc
repnz
cmp
mov
jo
pop
or
mov
jnp
out
aad
adc
ficoml
add
filds
ds
jle
hlt
and
sbb
pusha
mov
out
mov
xchg
mov
fstl
fidivs
lods
mov
in
pop
push
mov
cmp
push
cmp
pop
xchg
jbe
rcll
adc
out
or
pop
pop
std
mov
mov
adc
push
cmp
fcomps
aas
lahf
sarl
cmp
test
mov
mov
push
mov
or
out
ja
test
jae
mov
mov
fcoml
int3
jb
jns
xchg
popf
insb
outsb
imul
push
test
dec
mov
out
inc
jno
lock
jmp
push
repnz
adc
mov
js
in
scas
inc
aad
nop
in
xor
cld
xchg
jp
pop
xchg
xchg
push
push
xchg
push
push
jecxz
push
jae
popf
addl
jns
stos
pushf
in
inc
std
mov
fistpll
in
push
ret
pop
mov
cmpsb
lret
and
cs
jno
add
sub
int
rorb
cltd
repz
mov
xchg
fucomp
clc
pop
add
adc
ss
sbb
daa
mov
sbb
sub
cmp
push
pop
push
fimuls
mov
dec
mov
fidivrl
pop
lods
jo
out
movsb
adc
fdivs
nop
jg
popf
insl
mov
or
fadd
repz
mov
inc
js
jg
adc
sbb
pop
and
and
xlat
dec
push
out
lret
push
cmp
and
sti
mov
or
test
and
insb
fildll
cltd
mov
daa
shl
lds
movsl
pushf
loop
mov
stc
or
cmpsb
jae
aam
pushf
add
repnz
cmpsb
mov
pop
xor
test
or
fwait
mov
negb
imul
test
dec
xor
add
rol
loopne
mov
sub
aam
je
xchg
ja,pn
jno
mov
mov
lds
pop
cmp
mov
jmp
pop
push
test
hlt
cwtl
pop
adc
sbb
lock
lods
jae
scas
mov
mov
loop
sbb
jbe
and
mov
or
push
mov
sub
lea
cmpsb
cld
imul
xchg
fs
adc
push
xchg
ficompl
aas
mov
cmpsl
jbe
pop
push
sbb
mov
iret
out
shll
cwtl
add
pusha
fldenv
icebp
xchg
outsl
jb
ret
subl
shlb
popf
inc
cld
push
js
inc
pop
mov
cmp
push
int3
andb
jg
adc
sub
or
enter
xor
sub
xchg
imul
jo
out
rolb
mul
aas
jl
rclb
adc
nop
test
adc
in
data16
insb
cltd
push
out
mov
insl
pushf
xor
push
js
fs
pusha
pop
push
lods
outsl
jbe
cli
mov
jmp
gs
adc
loop
and
jne
xor
dec
cmp
or
pop
ret
mov
xchg
pusha
scas
cmp
mov
mov
jno
inc
outsb
stos
loope
nop
mov
jns
mov
jle
sub
in
or
dec
stos
dec
nop
les
test
xchg
cmp
fisttpll
fneni(8087
jne
mov
mov
add
add
mov
iret
dec
push
jns
pop
or
mov
push
shrb
aam
negl
mov
xchg
jl
or
cmp
test
ljmp
adc
repnz
sbb
push
mov
xchg
shll
sahf
xlat
cs
mov
mov
add
add
push
cmc
dec
stos
insl
pushf
push
inc
pop
ret
aaa
xor
push
adc
test
cmp
xlat
scas
sub
fisubrl
cltd
cmp
lret
jge
push
aad
ljmp
mov
stc
jecxz
xchg
cmp
repz
sbb
inc
mov
cmp
sbb
iret
push
add
sub
xor
pop
fwait
push
adc
cmp
or
mov
xor
fcmovne
push
xchg
imul
pop
dec
in
mov
cltd
mov
adc
and
mov
or
jb
out
dec
xor
lds
jae
je
leave
ret
lahf
add
mov
in
dec
ds
push
fwait
inc
sub
jmp
sbb
push
int
xor
jo
ret
pop
sub
sub
push
shrb
pop
test
lret
popa
cmp
mov
repz
stos
clc
mov
in
dec
notl
jae
adc
addr16
pop
std
aam
inc
aaa
jmp
mov
sub
jbe
fnstenv
leave
scas
addr16
lret
or
lcall
adc
inc
movsl
inc
push
cmpsb
loop
ljmp
inc
inc
xchg
mov
or
mov
xor
mov
ror
mov
mov
repnz
pop
lret
or
xor
dec
mov
ljmp
pop
or
ds
pop
mov
xchg
dec
and
pushf
sub
daa
add
sbb
inc
pushf
lds
mov
lds
xchg
inc
mov
shll
xchg
hlt
popl
adc
inc
fbld
pop
dec
ja
out
dec
add
push
mov
fists
pop
lret
xor
and
or
gs
jne
inc
scas
stc
aam
jge
jg
in
ss
mov
les
jno
pop
lods
cli
jae
out
jb
repnz
inc
hlt
lods
pop
addb
je
jg
xor
pop
or
add
xchg
adc
inc
xchg
add
out
jno
in
aas
and
jb
lret
sbb
sbb
adcb
dec
push
inc
nop
nop
xlat
faddl
jge
pop
icebp
sti
lret
jno
stos
scas
movsb
jb
push
adc
cs
xchg
xor
gs
push
sahf
ja
dec
inc
subl
push
jmp
and
movsl
in
push
sar
loopne
mov
movsb
jecxz
add
jne
es
dec
clc
cmpsl
sti
insb
lea
shlb
jno
adc
or
movsl
dec
rol
xor
in
sbb
in
cmp
pop
pop
test
data16
xor
out
lods
sub
pop
lcall
movsb
adc
aam
mov
leave
xor
xor
jl
test
and
ficoms
rdmsr
dec
pop
mov
in
or
loop
fs
mov
sbb
sub
fstp
sub
rol
sbb
mov
mov
fnstcw
mov
push
pop
aas
jo
pop
and
insl
mov
dec
inc
cli
push
lods
js
xchg
les
lds
jnp
movsb
test
push
sbb
sbb
sahf
int
mov
lret
sahf
test
push
cmpsb
into
imul
cmp
addr16
in
or
test
addr16
lea
xchg
frstor
out
icebp
fldenv
roll
outsl
or
lock
andl
outsb
mov
pop
fldl
sbb
aad
aas
jecxz
dec
sbb
add
stos
stos
inc
movsl
mov
sub
mov
iret
aaa
push
leave
ss
es
bound
fst
subb
cmp
mov
sbb
out
mov
cwtl
loope,pn
push
fstps
jnp
psllw
mov
sub
lret
aas
arpl
aad
xchg
cwtl
pop
jnp
in
nop
inc
pusha
mov
or
adcl
dec
lcall
xchg
jnp
cmp
out
sarb
popf
mov
pop
mov
fnstenv
push
rcrl
xchg
and
int
pusha
decl
sub
stos
mov
pop
sbb
mov
push
outsb
into
fst
in
lea
ret
mov
xor
loop
xchg
xor
leave
jo
adc
lcall
jb
and
je
jno
mov
add
flds
nop
enter
addr16
cmp
mov
or
add
loop
mov
dec
sub
shrl
or
xchg
ficoml
fbstp
cli
pushf
ljmp
sbb
into
dec
stos
jne
repnz
insl
ljmp
jle
out
aaa
add
pop
cltd
jle
pop
repz
inc
es
jo
inc
xor
mov
add
lret
and
cmpsb
and
aad
mov
cmp
xor
adc
inc
popa
jo
faddl
xchg
imul
ja
rcrb
pushf
mov
cmp
dec
inc
pop
xor
pop
lahf
aam
shlb
jl
nop
je
or
jo
ljmp
inc
jp
mov
mov
mov
sbb
test
pop
jbe
ret
xchg
mov
and
lea
int
lret
xchg
in
dec
pop
cmp
imul
icebp
xchg
inc
jge
or
jbe
sub
cwtl
clc
adc
add
stos
jbe
pushf
ret
lret
mov
cmp
lea
dec
out
cwtl
push
xor
and
xor
mov
enter
mov
add
jmp
adc
sub
and
iret
adc
cmp
out
test
into
lahf
sahf
or
jne
mov
pop
inc
insb
movsl
sbb
insb
imul
jmp
in
aaa
in
or
push
add
out
xchg
dec
lahf
jno
loope
decl
adc
shll
inc
shr
inc
cs
fldenv
cwtl
jae
xchg
insb
mov
push
bnd
dec
add
sub
bound
mov
mov
push
pop
sbb
add
stos
mov
sbb
or
and
loop
fwait
dec
push
shrl
mov
scas
inc
dec
mov
jns
es
dec
stos
jno
insb
inc
or
inc
dec
xchg
jo
mov
mov
mov
pop
sbb
imul
xor
lods
push
outsl
mov
xchg
mov
imul
sbb
fs
sahf
aad
xchg
enter
ja
xlat
xchg
and
xor
imul
pop
in
mov
mov
xor
sub
pop
leave
mov
lcall
fwait
and
pop
outsl
data16
cli
lock
iret
cltd
add
push
inc
pusha
or
jnp
or
xor
into
fsub
or
sahf
xchg
jbe
lcall
popa
data16
movsb
push
xchg
cwtl
pop
adc
mov
add
mov
xor
cltd
and
or
xlat
push
cmp
or
outsb
test
aad
dec
mov
mov
movl
bound
pop
dec
rcrb
or
mov
and
sbb
fsub
xchg
xorl
mov
arpl
fbld
cmp
cli
pop
cmp
xor
sbb
mov
rorb
mov
fnstcw
or
cmp
adc
faddl
rcrb
std
inc
jo
xor
out
xchg
sti
xchg
adc
leave
shrb
push
and
add
and
pushf
je
ljmp
vfrczpd
or
pushl
adc
sub
cmp
test
sar
pop
xchg
dec
push
push
mov
push
movsl
sbb
jge
mov
into
jbe
pxor
xchg
mov
sbb
push
dec
fidivrs
aas
xor
movsl
add
outsb
pop
pop
hlt
jbe
ljmp
push
and
pop
push
dec
cli
mov
fs
xor
nop
enter
jl
jmp
lcall
and
xor
xchg
sarb
lds
clc
mov
or
mov
out
push
jnp
icebp
xor
sbb
inc
sbb
sbb
js
ret
cs
daa
inc
jge
or
out
push
aam
cs
push
loope
std
pop
cmp
arpl
fs
add
dec
in
aas
out
pop
fistpll
pop
rorl
je
sub
test
mov
mov
mull
push
xchg
and
js
dec
add
adc
ds
ljmp
or
mov
jbe
cli
mulb
enter
idivl
bound
aas
vpunpcklbw
pop
dec
shlb
adc
jle
xchg
and
add
fdiv
popf
pop
mov
inc
fsubl
pop
mov
mov
mov
xchg
js
xchg
fs
cli
movsb
dec
pop
lds
icebp
and
xchg
in
add
repz
incb
scas
in
lcall
test
push
push
dec
or
dec
repz
dec
test
adc
pusha
ret
fcmovu
pop
jle
jbe
mov
enter
dec
lods
cmpsb
dec
std
cmpsb
mov
repnz
add
dec
cmc
dec
mov
std
mov
mov
or
daa
movsl
in
xorb
mov
mov
cmp
mov
add
sbb
std
addr16
lea
dec
dec
cmp
cmp
addl
inc
mov
jmp
push
dec
out
nop
ret
jb
mov
and
loop
pop
cmp
and
xchg
dec
in
inc
je
rcl
sbb
cwtl
sbb
out
mov
pusha
or
pop
out
pop
pop
mov
jns
jle
lds
das
sahf
jae
test
jbe
cli
scas
cmc
loop
and
xor
pusha
inc
push
inc
mov
or
imul
inc
xor
pushf
dec
xchg
pop
rcll
clc
jb
xor
xchg
and
insl
test
jp
fcomi
mov
js
dec
sahf
push
pop
or
sbb
pop
js
das
dec
cmpb
int3
aaa
popf
cmc
testb
mov
and
test
xlat
test
dec
jl
and
js
fwait
lea
mov
and
cmpsb
ror
pop
in
int
dec
sbb
mov
aam
sti
inc
test
cmpsb
in
mov
test
out
test
pop
out
inc
mov
mov
dec
mov
jl
insl
ret
ret
in
icebp
or
or
lea
adc
in
mov
jecxz
jecxz
jbe
fdivrs
sbb
jecxz
bound
cmp
ds
jmp
lods
add
or
data16
push
push
sahf
dec
add
cmp
fcmove
jns
sahf
leave
cmpsl
out
cmpl
dec
or
xor
push
sbb
or
jp
inc
addr16
shl
xchg
or
fldt
xor
incb
loopne
or
mov
ss
pop
pop
pusha
jns
es
pop
incl
iret
neg
cmc
xor
adc
mov
mov
imul
insl
xor
jecxz
repnz
adc
out
outsl
jle
xchg
cmp
sbb
push
gs
hlt
int
sbb
rolb
shl
jo
jae
xchg
xorb
std
sbb
fxch
mov
cs
sar
insl
in
jl
pop
cmp
pop
ja
into
jnp
bound
cmp
sahf
leave
xchg
mov
sub
xor
xor
in
mov
das
pop
popf
ficomps
and
ja
fistps
out
or
lods
xor
sub
loop
cmpsb
mov
mov
push
icebp
inc
mov
repz
je
imul
sti
sbb
in
push
mov
roll
xor
inc
xchg
fistpl
lahf
jno
pop
mov
jle
add
push
sub
aaa
insl
es
idiv
stos
mov
or
aaa
jne
inc
push
imul
lret
jmp
mov
jmp
sbbb
movsb
cmp
shl
ja
in
sub
je
xor
jbe
or
push
pop
cmpsl
and
repz
mov
xor
shrb
xchg
enter
add
dec
xor
fcmovnbe
ja
lret
bound
mov
sbb
mov
xchg
mov
cmp
cmp
and
out
mov
test
lcall
fdivrl
push
cmc
xchg
mov
jecxz
xlat
lahf
mov
mov
cltd
jae
or
ret
repnz
clc
mov
test
cmp
pop
and
test
inc
pop
lcall
add
imull
mov
popa
out
mov
pop
shll
dec
stc
xor
xchg
mov
hlt
xchg
mov
jl
sbb
mov
imul
cmp
jns
dec
fnstcw
or
mov
out
in
and
jl
cwtl
imul
add
jns
mov
ss
stos
orb
out
rcrb
dec
cmp
fstp
mov
shrb
or
adc
imul
into
out
mov
pop
rep
insb
enter
jns
ljmp
out
inc
pop
sbbl
jb
and
test
and
jg
ljmp
rorl
cwtl
jns
jecxz
mov
xlat
test
sbb
insb
cld
in
sarl
mov
mov
mov
test
or
std
xchg
and
pop
std
pop
mov
sbb
test
or
fisubl
mov
js
fstpl
mov
and
and
xor
dec
push
mov
ret
fcomi
mov
mov
test
mov
leave
sub
test
lea
sbbl
push
xlat
pushf
lods
dec
push
xchg
enter
fisubrs
push
push
cmp
jp
sbb
and
dec
popa
sbb
scas
mov
insl
inc
popf
mov
jae
ds
mov
cmp
popa
out
movsl
mov
cld
test
popa
jns
ficomps
pop
dec
pop
addr16
xchg
inc
repnz
addr16
mov
js
cmp
cmc
mov
bound
divl
popf
test
sarl
or
cwtl
xchg
daa
daa
lret
shrb
push
filds
fsubl
xor
clc
mov
jae
fs
sbb
sub
xor
cmp
insl
cmp
fcoml
cltd
jns
in
sti
mov
sti
xchg
jecxz
and
fadd
inc
fs
fldl
cwtl
push
ds
mov
shll
mov
stos
icebp
sbb
std
std
dec
xchg
imul
add
inc
test
cltd
js
mov
es
and
dec
jecxz
pop
adc
data16
adc
add
cmpsl
mov
push
push
jle
gs
xor
sub
orb
pop
or
pop
pushl
and
pop
cmpsl
fistps
pushf
inc
jbe
sahf
adc
jno
mov
add
jnp
push
push
test
dec
mov
push
xchg
jne
enter
jge
inc
and
test
shlb
rorl
push
mov
add
outsl
xorl
insl
xlat
ficompl
call
test
cmp
mov
dec
inc
mov
loopne
jg
loopne
ljmp
dec
shr
sub
scas
test
fldenv
cmpsb
sahf
clc
dec
decb
sbb
stos
or
push
leave
or
outsl
in
sub
sbb
das
fwait
mov
mov
fs
xor
sub
inc
cmp
cld
pop
cmp
cli
cs
adc
out
mov
dec
xchg
inc
sbb
xchg
push
repnz
out
pop
jbe
or
xor
loop
push
in
or
enter
or
adcb
arpl
jo
scas
test
fidivs
pop
in
pop
movsb
inc
test
pop
imul
cwtl
popa
cwtl
div
cmp
jns
xor
or
and
sub
cwtl
shl
ss
idiv
cld
push
rcrb
add
out
and
cmp
xchg
out
push
pop
lods
adc
movb
scas
fmuls
dec
lret
cli
pop
and
sbbb
adcb
repnz
mov
mov
cld
shrl
mov
fs
lret
iret
inc
leave
or
aaa
jb
inc
inc
push
cltd
sub
jg
sub
sub
mov
xlat
sub
ss
call
jns
fadd
ss
aaa
inc
cmp
xchg
fistps
cmpsl
ret
add
jmp
push
mov
mov
push
mov
mov
in
adc
xor
outsl
pmaddwd
push
jge
fwait
jns
mov
add
scas
movsl
xor
outsb
data16
or
outsb
pop
pop
in
insb
add
or
pushf
fdivrs
enter
pop
loope
jl
mov
mov
in
aad
rcrb
cmpsb
addr16
xchg
jge
cmp
cld
sbb
cmc
jns
into
test
aas
jb
aad
out
cld
jns
repz
fs
call
xchg
pop
pop
dec
sub
push
push
cmc
pop
jbe
addr16
mov
syscall
mov
jo
sub
add
stc
loope
fnstcw
xor
pop
dec
mov
aaa
jo
das
insl
jbe
out
mov
aas
movsl
mov
dec
cltd
rcll
mov
mov
fistl
test
into
rcrl
dec
fistpll
xchg
test
in
dec
lods
cmp
call
mov
inc
cmc
scas
dec
ret
call
sbb
clc
cltd
sbb
test
mov
std
and
or
jge
add
in
in
add
jecxz
jo
jle
out
xchg
xchg
pop
lcall
jne
and
insb
inc
or
mov
xchg
jmp
mov
lret
aas
in
adc
js
sbb
scas
shll
in
xchg
into
mov
mov
xchg
pop
hlt
push
cmc
subl
pop
dec
roll
sub
enter
imul
add
jo
push
out
push
mov
inc
xorps
in
stos
loopne
in
xor
xor
repnz
loop
xchg
fidivl
jnp
cmc
dec
jb
lods
test
test
inc
xor
cmp
cs
addr16
outsl
dec
add
mov
and
les
mov
gs
loopne
fidivs
sub
sarb
push
fmull
jp
inc
jmp
out
cs
lods
outsl
ds
popa
aas
add
inc
jl
sub
jmp
mov
popf
push
add
and
and
in
or
push
mov
jle
lods
sub
dec
lret
lock
insb
sub
stos
mov
ret
or
iret
cmp
and
mov
sbb
dec
push
jbe
sarb
add
xor
jg
dec
loope
cmp
rcrl
xchg
pop
xor
lds
mov
pop
mov
xlat
adc
scas
insl
ss
lds
enter
sub
orb
insb
and
jmp
clc
pusha
in
fnsave
sbb
adc
rorl
add
stc
push
add
mov
stos
sbb
adc
xchg
cli
xchg
jle
in
sti
mov
mov
ret
cmp
mov
stc
or
lret
sbb
aaa
orb
mov
jge
js
call
fldl
addr16
imul
mov
inc
mov
pop
aam
mov
add
aad
and
mov
inc
incl
mov
jnp
or
or
lcall
popf
adc
fistpl
sub
bound
out
clc
or
xchg
nop
cmp
cmp
fcomps
fwait
push
pop
es
push
sbb
in
pop
xchg
mov
lods
in
inc
insb
dec
add
rcrb
sti
loope
mov
cmp
out
leave
jno
adc
ljmp
fildl
insl
jmp
insl
iret
repnz
fldenv
stos
das
xchg
push
test
adc
jne
adc
jbe
dec
cmp
test
imul
xchg
mov
les
loopne
push
loope
lcall
sbb
test
sub
add
scas
jb
das
out
insl
lcall
mov
lods
dec
movsl
push
mov
xor
or
out
mov
pop
daa
in
fdivs
repnz
fisttpl
clc
aam
inc
xchg
je
pop
adc
movsl
pop
mov
dec
popf
dec
arpl
outsb
xchg
mov
xor
pop
mov
adc
ss
or
sub
xchg
dec
inc
sbb
imul
addr16
lds
aam
ret
lcall
xchg
mov
adc
xchg
pushl
sbb
les
jns
rorl
stos
shlb
push
mov
cmp
push
inc
jno
fisubs
mov
xchg
insl
mov
mov
sbb
mov
outsb
push
shrl
les
inc
jne
out
push
dec
aas
lcall
pop
mov
cli
push
push
adc
xor
das
mov
mov
jp
sub
xor
daa
push
mov
scas
mov
stos
adc
xor
xchg
inc
test
push
std
mov
loope
out
pushf
lods
outsl
push
or
cmc
cmp
je
or
fsubrs
outsb
shrl
xchg
pop
and
xchg
sbb
js
rcll
pop
push
mov
aas
cltd
push
jle
mov
pop
insb
mov
stos
mov
adc
subl
lcall
sbb
out
jmp
gs
xchg
jne
jae
ss
stc
mov
push
mov
cmp
mov
and
xor
adcb
lods
mov
xchg
insb
int
inc
sbb
sub
aam
push
xchg
loope
ljmp
push
lcall
jne
cmc
pop
cmpsl
fwait
rol
daa
pop
and
sbb
les
stos
xchg
push
jmp
pop
call
mov
sub
sahf
flds
inc
imul
fbld
in
iret
mov
xorb
inc
pop
aad
stos
lcall
call
cmpb
mov
fisttps
movsl
mov
aad
and
repz
dec
test
movsb
ds
adc
fistpll
cmp
rclb
ljmp
shl
test
cmp
mov
pop
pop
pop
cs
mov
mov
push
or
mov
mov
jp
js
test
fucom
mov
or
cmpsl
xchg
push
arpl
push
jmp
mov
mov
int3
mov
sub
les
imul
inc
jecxz
mov
or
addr16
sti
pop
lret
fmul
inc
je
xchg
loope
scas
adc
xor
pop
cli
inc
cmp
cmc
sbb
xor
xchg
scas
into
fsincos
lock
xchg
xchg
outsl
enter
loope
cmp
iret
dec
add
repnz
or
mov
inc
idivl
xor
jmp
add
sbb
cmp
jne
lahf
movsb
jnp
in
and
mov
loope
insb
imul
out
fisttpl
icebp
and
leave
mov
mov
mulb
xor
add
fwait
imul
lcall
ret
xor
adc
pop
ja
pop
or
shlb
cmp
push
sbb
sbb
pushf
lods
cmp
out
call
mov
or
jo
fsubrl
xchg
ss
inc
insl
sbb
je
hlt
add
add
dec
mov
sbb
mov
cs
lods
addr16
movntps
cld
popf
sbb
and
or
push
pusha
ss
push
shll
xchg
shrb
aas
and
add
and
daa
jge
out
out
mov
arpl
cs
pop
arpl
mov
mov
sbb
xor
jp
bound
mov
cmp
mov
xchg
sbb
sbb
out
std
jp
dec
popf
das
xchg
xor
cmp
aam
lods
mov
lea
and
cmp
ljmp
jno
sbb
cmp
pop
xor
sbb
js
pop
inc
jg
popa
jno
pop
sbb
add
push
and
repz
aam
and
rcll
mov
sub
fs
push
adc
and
stos
sub
std
adc
icebp
lea
cmp
gs
jns
mov
rclb
mov
dec
sti
dec
pop
or
ret
push
xor
or
pop
sub
and
mov
jno
push
outsb
sbb
pop
aaa
insb
mov
push
push
repz
imul
jge
mov
lea
push
shll
dec
repnz
xchg
xor
mov
jns
mov
inc
jb
mov
jecxz
stos
push
mov
stos
fwait
push
out
lds
int3
jmp
outsl
or
leave
fidivl
or
jge
or
js
xor
aaa
std
inc
jmp
iret
popa
mov
cmp
mov
into
sub
inc
loopne
and
popf
inc
repnz
std
lock
or
jbe
rol
or
add
fcompl
adc
cmpsb
jp
mov
out
stc
push
xorl
or
lods
cltd
repnz
xchg
out
mov
lds
cmp
mov
push
cmp
mov
nop
inc
iret
push
pop
iret
inc
popa
push
inc
adc
popf
arpl
lock
ret
outsl
out
and
push
mov
push
cmpsb
dec
stos
sub
sbb
xchg
jbe
aad
mov
mov
ds
pusha
repnz
mov
mov
adc
mov
push
jne
mov
std
inc
mov
lret
inc
stc
sbbl
add
pop
adc
jbe
adc
dec
add
or
mov
fiadds
mov
fldcw
pop
xchg
movsl
pop
lret
push
fmuls
jge
cmpxchg
sbb
xor
or
iret
mov
enter
decl
jp
mov
mov
fnstcw
jg
mov
xchg
arpl
adc
js
pop
aam
mov
cmc
pop
pop
negb
stos
jge
sbb
popf
ja
stos
mov
or
mov
scas
push
cmp
je
outsl
imul
xchg
inc
or
dec
aaa
sbb
mov
mov
lcall
pop
repz
adc
in
dec
xor
xor
cmc
loopne
stc
jge
stos
mov
add
or
ret
jmp
xor
mov
popa
addr16
fmul
inc
addr16
add
repz
subl
test
xchg
repnz
sub
aam
and
adc
je
dec
outsl
push
rol
data16
inc
mov
out
scas
pop
and
pop
sarb
add
mov
std
mov
data16
int3
outsl
pop
stos
insb
mov
std
fisttps
and
mov
out
in
and
mov
push
int
dec
sbb
lret
inc
sub
add
cld
rolb
test
inc
or
lds
lods
and
mov
pop
xchg
push
add
pop
sbb
cmp
xchg
in
mov
rclb
cmc
push
fcom
pop
sub
sbb
cwtl
popa
test
setl
or
xchg
fcompl
lret
inc
adc
aaa
and
std
mov
jmp
inc
insl
jb
and
mov
or
mov
in
pop
stos
shrl
sbb
cwtl
pop
movsl
hlt
mov
sbb
sbb
loop
bound
add
adc
out
mov
cwtl
jbe
push
and
in
les
nop
inc
stos
cmc
sbb
adc
jle
dec
pop
pop
aam
repnz
xchg
ss
dec
test
lock
lds
rcll
lock
les
or
pop
dec
pushf
call
mov
fstl
and
mov
lret
mov
xlat
and
pop
std
jno
inc
insl
or
push
out
stos
or
out
pop
inc
stos
das
dec
cmp
sbb
iret
shrl
and
lods
jnp
outsb
jnp
add
or
sub
pop
or
lcall
nop
mov
mov
mov
in
add
add
ja
xchg
rclb
mov
insb
push
mov
lock
push
xchg
sub
popf
xlat
pop
das
mov
fstpt
xor
cmp
leave
sbb
mov
bound
pop
pop
ss
sbbl
dec
shll
andb
stc
mov
mov
mov
jle
pushf
in
sub
scas
cmp
mov
das
push
jg
mov
inc
push
fnstenv
lahf
shr
or
repnz
pop
aad
and
push
fdivs
sbb
out
jmp
jnp
inc
lds
inc
mov
xchg
daa
cs
aas
mov
adc
dec
mov
lret
mov
adc
jmp
xor
push
inc
xor
sbb
test
mov
pop
sti
cmp
repnz
lidtl
sub
das
cs
push
jecxz
dec
aas
test
mov
pop
push
test
or
and
and
xchg
popl
and
ds
mov
daa
inc
push
or
jp
mov
loopne
pop
mov
sub
dec
sub
sahf
in
lods
mov
jb
mov
push
mov
clc
pusha
xchg
pop
and
jle
mov
xchg
jb
loop
inc
leave
add
xchg
xlat
les
jmp
xor
pop
pop
stos
insl
scas
cmp
into
mov
fcoms
sub
pop
sub
sbb
ds
fcoms
out
daa
push
fsub
aad
mov
mov
mov
inc
inc
xlat
jmp
jecxz
sti
rorb
jl
shrb
mov
orps
movsb
inc
mov
movsl
popa
lret
lahf
cmpsb
adc
in
sub
dec
sbb
pop
dec
inc
lcall
cmpl
shr
fnsave
cli
xchg
out
jl
es
or
lock
jmp
imul
sahf
jp
idivb
imul
push
sub
hlt
adc
and
xchg
imul
or
mov
call
push
in
or
test
and
jecxz
and
push
fbld
sti
push
jbe
shrd
outsb
sbb
mov
mov
sbb
dec
or
jecxz
jg
pop
ret
insl
adc
mov
push
pop
std
sub
fldcw
jne
inc
in
mov
pusha
out
mov
mov
xchg
dec
aaa
mov
mov
mov
sub
and
fidivs
pop
gs
outsl
movsl
pop
lods
mov
jae
in
xchg
les
cmp
sbb
push
stc
les
mov
jge
clc
ret
sahf
adc
or
jnp
xlat
sub
loope
lods
push
push
rol
sub
jmp
repz
daa
movsb
sub
inc
xchg
xor
cmc
cmp
jbe
xor
push
das
aad
jb
xor
adc
pop
fmull
sbbb
push
add
ljmp
outsl
arpl
cmp
or
cmp
sbb
lds
mov
cmpsb
mov
mov
xchg
fdivrp
hlt
in
out
push
push
sbb
iret
cmp
jmp
lods
test
jg
add
cmp
cwtl
std
inc
cwtl
test
mov
shll
cwtl
adc
sti
inc
mov
loope
mov
cld
aam
push
clc
mov
std
jno
je
insb
cmp
rol
sbb
fisubrs
dec
lock
sbb
imul
outsl
stos
testl
pusha
sahf
inc
dec
mov
or
push
pop
xor
cwtl
push
sub
push
cwtl
aas
mov
addr16
cmp
loop
push
into
test
or
sub
adc
xchg
pop
xchg
adc
mov
mov
push
dec
xor
push
clc
out
dec
sbb
jl
xor
pop
add
iret
xorb
movsb
mov
mov
adc
inc
fsts
stos
jl
and
or
pop
fnsave
push
imul
inc
int
nop
ret
pushf
jmp
xor
or
dec
hlt
out
fxch
icebp
xor
dec
sbb
imul
out
mov
ljmp
xchg
sarl
sbb
adc
jmp
mov
xchg
jo
inc
jp
xor
jae
jl
xchg
cmp
rorl
lcall
add
ret
lds
popf
imul
cmc
mov
pop
in
in
cld
cwtl
enter
fstl
jne
xor
iret
push
js
sub
mov
xchg
pusha
jl
sub
out
enter
rorl
jmp
sub
cwtl
cmp
xchg
out
push
xchg
adc
rorl
mov
push
and
or
out
jns
jns
addr16
and
inc
xchg
test
arpl
adc
aam
xchg
push
out
jns
scas
movsb
mov
lret
mov
popf
jno
mov
and
cli
std
cld
aad
sbb
sbb
jne
sub
test
xchg
subb
xchg
mov
mov
push
or
cli
ds
lahf
mov
jo
mov
mov
ret
add
mov
cmp
std
cmpl
adc
inc
or
out
inc
push
xor
sbb
inc
push
lahf
test
loopne
in
dec
push
stc
jecxz
xor
push
movsl
mov
jmp
fdivs
mov
ss
repnz
outsb
push
push
jge
ljmp
pushl
out
addr16
ret
jge
orb
roll
fldt
sub
xchg
in
fisttpl
push
cmp
fsub
xor
xchg
cs
dec
pop
cmpsb
fcmovnbe
cmpsl
stos
mov
icebp
xor
fmuls
mov
xor
shrl
sub
cmpsl
bound
cld
pop
daa
xchg
cmpsb
pop
pop
in
sti
mov
enter
cmp
mov
popf
das
adc
movsl
mov
fstpt
push
imul
xor
add
mov
daa
mov
movsl
std
jecxz
mov
adc
movsl
fimuls
jmp
dec
hlt
aam
pop
pop
add
mov
imul
mov
push
cmpsb
xor
push
repnz
les
push
in
and
movsb
sti
add
in
lods
rcll
or
and
push
ja
xor
enter
push
sub
jne
arpl
int3
xor
pop
pop
xchg
mov
mov
subl
sbb
sbb
addr16
xchg
inc
or
jmp
xor
sbb
sbb
mov
pusha
jle
mov
jbe
mov
es
pusha
jmp
movsb
xchg
subb
andl
call
lret
jo
pop
in
outsl
fmulp
fistl
hlt
add
jne
out
movsl
jo
ret
cmc
cmp
sub
mov
push
fidivs
call
fwait
xchg
jbe
aaa
mov
mov
dec
retw
and
mov
pop
mov
mov
rcll
lret
aaa
imul
aaa
dec
pop
cwtl
xor
out
lret
sub
dec
mov
cld
loopne
pop
ret
jl
insl
dec
dec
out
clc
sbb
sbb
outsb
cmp
sub
sub
or
outsl
jmp
outsb
xor
cmp
hlt
push
cmp
fcmovnb
inc
stos
add
sahf
fcomps
nop
adc
jecxz
inc
fs
lret
addr16
das
scas
adc
out
cmpsl
insb
push
rclb
push
sub
or
fisttpl
mov
imulb
pop
push
testb
mov
or
and
popf
test
out
std
aam
cmp
frstor
inc
loopne
stos
out
xor
xchg
outsb
mov
xchg
jne
pop
bound
or
jb
ja
fwait
mov
lock
movsb
lret
leave
movsb
sub
jb
rorb
mov
mov
inc
jmp
dec
nop
idivb
add
mov
test
inc
pop
push
xchg
cmp
icebp
mov
mov
push
sti
ljmp
movsb
mov
imul
dec
fnsave
in
les
push
lcall
mov
movsb
push
movsl
jns
mov
xchg
sbb
adcl
in
imul
sub
lock
cmpsb
sti
xchg
fwait
sbb
jnp
arpl
loope
xor
test
mov
xchg
xchg
aam
fldcw
mov
mov
cmp
mov
jecxz
mov
movsb
insl
xorl
out
xor
popf
je
dec
outsl
xchg
jp
or
pusha
adc
pop
popa
xorl
push
mov
inc
outsb
or
adc
jbe
pop
push
addr16
out
lds
sub
jns
and
out
fcompl
ds
push
cmp
in
ja
sbbl
adc
outsb
or
pop
jno
rorb
imul
pop
xchg
jb
sub
add
xchg
decb
mov
xor
jg
pop
out
jb
mov
adc
leave
pop
push
fwait
push
out
ret
lret
xor
pop
lock
insl
data16
dec
and
or
dec
iret
idivl
jo
ror
pushf
cmp
adc
lods
sbb
pop
imul
add
pushf
cwtl
enter
ljmp
or
jge
test
pop
dec
pop
lret
inc
rcrb
fmull
fimuls
cmp
sub
cmpsl
das
arpl
pop
adc
or
adc
push
mov
and
sbb
xchg
push
jno
imul
xchg
xchg
mov
leave
das
xchg
std
xchg
in
mov
push
incb
hlt
rclb
inc
or
push
push
stos
cli
stc
push
imul
ret
push
dec
fcoml
lret
mull
inc
push
push
nop
dec
rorb
xorb
add
test
dec
out
push
aaa
lock
into
and
jl
push
mov
dec
sar
or
decb
fucom
cld
dec
leavew
fucomi
mov
mov
test
loope
xorb
fsts
sbb
int
addl
mov
fwait
pusha
jp
jmp
inc
pop
ljmp
jmp
mov
sbb
push
xchg
jecxz
add
scas
dec
sbb
or
pop
orl
push
pop
mov
cmc
push
or
jb
inc
pop
std
lds
mov
mov
push
cs
xor
xor
data16
xchg
mov
xchg
add
test
xor
stos
cli
out
or
lds
cltd
aas
loope
fidivs
and
gs
mov
into
push
mov
cs
imul
xlat
cli
mov
rcrl
call
sbb
scas
mov
push
mov
dec
add
cs
push
test
popa
imulb
ret
mov
popf
fidivrl
push
inc
push
xor
test
fimuls
sub
test
insb
insl
jecxz
xor
sbb
cmp
push
insl
popf
pop
adc
dec
dec
enter
xor
out
sub
sbb
mov
es
das
fnstcw
inc
xchg
xchg
stos
add
jns
int3
sub
sbb
hlt
or
insb
add
jle
orl
fdivrs
movsb
fimuls
mov
and
add
jb
cmp
aas
pop
ds
xchg
lret
enter
out
test
enter
mov
and
mov
mov
sbb
mov
ret
nop
call
pop
rol
out
lret
int3
mov
pop
aad
test
push
stc
sahf
aas
in
dec
cmp
cmc
loope
icebp
ffreep
es
pop
fucomip
jl
out
fwait
cltd
test
adc
sarl
mov
pop
xchg
mov
jne
push
pop
inc
fldt
mov
in
jl
pop
bound
pushf
push
xor
call
pop
xchg
push
xchg
dec
mov
xchg
std
or
inc
jne
inc
in
add
or
shrb
mov
mov
lret
fdiv
add
mov
jno
push
jns
jle
insl
add
addb
mov
dec
outsb
xor
sub
and
add
xorb
fpatan
js
orb
cli
or
aas
stc
out
in
xor
cmpsl
testl
jno
iret
xchg
in
pop
mov
out
cld
push
push
fstpl
mov
sarl
dec
adc
jno
movsl
stos
test
outsl
out
es
xchg
es
int
push
and
outsl
insb
aad
ljmp
and
jle
movsl
les
and
pusha
sub
repnz
push
lea
xchg
mov
sub
and
add
jnp
pop
adc
pushf
mov
cltd
push
aad
cmp
jnp
les
pop
leave
pushf
mov
add
xchg
xorb
sub
jno
mov
jmp
mov
insl
cmpsb
hlt
mov
hlt
clc
adc
push
cld
add
xchg
stc
les
cmp
repnz
pop
pop
pop
mov
clc
dec
xchg
lcall
adc
lea
pop
sbb
xlat
les
add
movsl
mov
mov
or
xor
cmc
leave
in
fisttps
mov
movsl
cmp
stc
sub
add
mov
add
inc
or
add
cld
scas
iret
push
out
adc
in
les
push
or
adc
add
rcrb
repz
pop
in
sahf
mov
shll
lea
add
nop
sbb
jbe
mov
lret
loop
jne
fldenv
and
test
mov
mov
lods
stos
sub
cltd
inc
jo
call
and
cs
xchg
cwtl
push
lahf
dec
mov
stos
aad
push
mov
inc
popf
sub
xchg
mov
xchg
push
sub
adc
mov
and
lods
das
mov
insl
ja
pop
cmp
mov
xchg
in
jge
shlb
repz
xor
sub
sbb
add
aam
fcoms
test
jo
sbb
lods
pop
and
hlt
cmp
aam
adc
cmp
mov
leave
fcmovb
leave
cmpsl
mov
es
jb
pop
jnp
and
and
jnp
sbb
frstor
andb
out
fwait
shlb
fldt
mov
xor
repnz
out
inc
fwait
add
out
test
or
xor
repnz
gs
and
push
or
push
mov
or
cltd
mov
movsl
or
lcall
fimuls
dec
dec
stc
loope
mov
mov
xchg
adc
int3
addr16
movsl
pop
fwait
aam
inc
cmp
and
mov
repz
mov
mov
fsub
mov
fldcw
aaa
and
dec
cli
sbb
pusha
in
cmp
ljmp
jp
leave
out
and
je
mov
fcoms
inc
dec
enter
xor
or
push
lods
test
out
mov
mov
inc
aad
lret
push
add
fidivl
push
push
out
cltd
call
fldt
adc
outsb
out
sub
or
add
fisttpll
dec
or
xchg
adc
adcb
sub
adc
mov
jp
mov
pop
ret
pop
pushf
cli
jb
mov
mov
inc
xlat
out
imul
jns
inc
inc
insl
fidivl
popf
xorb
stos
popf
scas
icebp
mov
jle
fistpll
cwtl
cld
or
add
cwtl
dec
loop
add
mov
in
push
sub
add
or
fs
hlt
add
mov
ss
icebp
fmulp
pop
js
mov
pop
lock
arpl
sbb
loope
cmp
jnp
xchg
out
nop
insl
cmp
faddl
jl
mov
mov
insb
sahf
pop
test
ret
xchg
mov
jmp
fwait
mov
xchg
mov
testl
mov
mov
mov
sub
dec
pop
in
xchg
aad
iret
mov
xchg
mov
or
lcall
add
jecxz
push
jg
nop
das
mov
popl
jecxz
shrb
pusha
lds
add
sbb
ja
mov
in
cmp
xor
cwtl
cltd
mov
push
xchg
jo
mov
and
int
push
fs
sbb
loopne
pusha
cmp
loope
mov
mov
adc
repnz
cmp
std
leave
adc
and
out
cmp
stc
repnz
cli
cld
cmpsb
add
dec
mov
adcl
shl
mov
push
mov
push
andl
or
insb
sbb
mov
mov
mov
aam
fcomps
mov
xor
insb
mov
test
xchg
testl
dec
cmpsb
mov
cld
ret
dec
or
pushf
jae
aaa
xorl
loop
cld
jb
fldt
ss
cmc
out
cmp
mov
insl
fwait
mov
jne
push
jb
into
adc
mov
nop
xor
sbb
out
call
or
cmp
add
enter
cs
or
push
lock
jecxz
andb
sub
in
xor
ficompl
mov
xor
test
in
bnd
inc
fiadds
cld
sub
xlat
push
popa
ljmp
adc
jecxz
insb
mov
jg
pop
dec
lcall
push
stos
xlat
or
mulb
js
inc
sti
jae
inc
pop
adc
mov
mov
inc
sub
cmp
xchg
fwait
div
inc
xchg
jecxz
scas
push
add
cmc
jns
lahf
cmpb
and
inc
jne
repz
out
ljmp
fdivl
sub
pop
lock
rcr
sbbl
mov
lea
sub
rorb
mov
pop
and
mov
mov
rorb
imul
inc
addr16
in
movsb
mov
add
jle
mov
jne
test
movsw
aam
in
xchg
fisubs
or
dec
fdivs
and
adc
xchg
mov
or
lea
data16
cmp
push
or
xor
cmp
lcall
pop
jbe
loopew
rcll
dec
fldl
pop
adc
clc
daa
dec
fwait
aam
sbb
js
jp
jb
into
mov
sub
inc
pop
xorl
mov
dec
cwtl
push
or
xchg
xor
scas
insl
mov
nop
dec
lock
xchg
aaa
push
stos
add
pop
call
dec
mov
push
popl
xor
sub
ja
mov
scas
add
stos
sbb
add
xor
sub
repnz
xorl
dec
inc
out
mov
lahf
dec
imul
nop
mov
scas
mov
and
jle
outsl
and
xor
push
lahf
sub
mov
jl
bound
inc
mov
mov
clc
jmp
leave
push
sbb
pop
and
fwait
or
fs
pop
aaa
add
rorb
popa
dec
mov
push
jecxz
lret
mov
fisubs
mov
addr16
daa
sbb
adc
and
dec
les
lret
pop
mov
mov
fdivs
pop
push
inc
add
mov
mov
push
cmp
popf
push
push
pop
dec
clc
push
test
cmp
loopne
ljmp
test
out
inc
jp
mov
xchg
mov
clc
cmp
ficomps
xlat
int
add
mov
aad
push
jl
sbb
out
jecxz,pn
inc
mov
jns
arpl
pop
pop
dec
adc
pushf
mov
sub
fisttpl
je
cmp
mov
pop
sbb
inc
loopne
jp
jae
enter
add
lods
iret
inc
lods
pop
inc
js
ljmp
stos
push
push
xor
outsb
add
sbb
rcl
pushf
pushf
xor
xor
adc
cld
out
lret
test
or
cmc
dec
fwait
add
or
add
jmp
sbb
dec
test
pop
and
je
xchg
in
jle
lahf
iret
and
sub
nop
out
lds
lahf
out
std
inc
xchg
mov
xchg
mov
inc
push
sbb
fdiv
jbe
dec
repz
out
add
xor
push
nop
decl
int3
movsl
xchg
dec
cmc
mov
int
mov
lahf
popa
insl
or
or
popa
and
int
cmp
sub
sbb
jns
ljmp
fld
adc
mov
push
inc
lods
icebp
cld
aaa
pop
test
movb
push
mov
sti
int
xchg
push
add
sbb
por
ss
cmp
sti
je
cmp
mov
imul
xchg
cmp
dec
imul
mov
jb
jp
ficompl
push
dec
xchg
sbb
pop
imul
movsl
daa
jecxz
mov
cli
outsl
cmpsl
and
leave
xor
dec
shrl
sub
das
mov
mov
loope
jno
cmp
adc
inc
dec
xlat
shll
dec
xchg
es
outsb
or
lods
push
push
xchg
andl
push
cmp
push
cmpb
xchg
and
jb
mov
jg
jle
jg
ficoms
xchg
jns
jne
mov
adc
lret
nop
push
aaa
out
or
faddl
into
es
ja
into
in
xor
cltd
stos
sub
test
adc
xor
hlt
xor
lods
pop
push
in
sub
andl
shl
fdivl
testl
std
dec
mov
push
bound
outsl
test
les
outsl
add
inc
xchg
shrb
sbb
and
push
rclb
scas
lcall
pusha
add
cmp
mov
and
push
lds
pop
push
sbb
adc
jnp,pn
jle
arpl
dec
in
mov
push
shlb
aam
sub
fwait
movsb
push
out
cmpb
fdivrl
and
into
xlat
faddl
xchg
shrl
fsubl
pop
imul
pop
dec
jae
dec
push
mov
and
push
add
push
jb
sub
repz
aam
fisubs
adc
stos
mov
xor
pop
repz
jbe
ljmp
cmp
cltd
pop
cmp
imul
loope
repnz
sub
cmpsb
outsl
push
pop
fs
pusha
scas
jp
xor
sub
ret
ror
xor
sahf
hlt
test
jno
mov
mov
mov
jne
sbb
aam
fptan
es
inc
ret
lcall
inc
lgs
mov
push
dec
jmp
jmp
test
jge
dec
popf
sbb
cli
xor
dec
adc
lods
aaa
sub
shrl
out
int3
dec
out
and
movsb
push
push
data16
sub
push
aam
rorb
insl
jno
or
inc
mov
cli
lret
or
movsb
xchg
mov
in
popa
adc
inc
push
lea
or
push
mov
pop
ja
iret
enter
lds
mov
hlt
mov
pop
lcall
dec
pop
mov
jno
popf
cld
jg
xchg
mov
outsl
ljmp
mov
sub
inc
or
imul
out
aad
push
rorb
ret
jmp
stc
in
jmp
enter
std
lahf
sbb
mov
scas
std
push
add
in
push
int
dec
mov
inc
dec
pop
xor
cmp
pop
aam
mov
mov
fstpt
push
sbb
add
lahf
push
or
xchg
xor
pop
ljmp
in
cmp
fcomps
pop
mov
shll
mov
mov
push
mov
push
movsb
sbb
repz
lahf
lahf
jns
arpl
mov
loop
popa
and
nop
in
push
gs
arpl
and
data16
shrl
cmp
lret
cmc
ljmp
dec
xor
inc
jmp
cmc
xor
pop
test
jnp
cmp
xor
xchg
push
bound
movsl
fistl
sti
push
mov
sub
les
mov
aam
stc
std
into
sbb
and
outsb
loopne
push
int
inc
idivl
sarl
orb
inc
ja
fstpt
xchg
fistpl
xchg
add
scas
outsb
jle
cltd
dec
nop
xchg
jbe
fwait
mov
leave
mull
jb
iret
stos
lcall
jl
jnp
push
mov
mov
sub
imul
adc
movsb
outsb
or
vpcmpgtw
pusha
addb
mov
mov
aad
pop
fsub
mov
add
adc
shl
test
mov
dec
outsl
das
push
mov
pop
sbb
sub
sarb
nopl
dec
xchg
mov
imul
lret
mov
nop
pop
bound
ds
shr
aas
lret
fdivrs
sbb
call
mov
xor
testb
popa
into
inc
mov
mov
rol
test
cmp
ror
fwait
cwtl
gs
and
or
outsb
add
jb
cmpb
or
mov
mov
mov
clc
pop
movsb
inc
pushf
mov
and
and
push
in
add
mov
insb
mov
jecxz
shll
shl
cmp
xor
cs
jl
ret
xor
pushl
fcmovu
push
sbb
xor
pop
pop
les
mov
mov
imul
call
test
push
adcb
xchg
repz
mov
out
push
sbb
dec
cs
inc
test
and
shll
jne
inc
jge
adc
mov
aas
bound
mov
inc
xchg
movsl
sbb
dec
cmpsl
push
mov
xlat
les
cmp
sbb
push
sbb
addr16
mov
pop
stos
test
push
mov
dec
shrl
shrl
sub
sbb
jmp
mov
mov
fisttpll
cmp
aam
push
xchg
aaa
sub
scas
inc
in
mov
push
movlhps
jg
sti
je
gs
jmp
lahf
mov
adc
ja,pn
sub
mov
fmulp
xchg
mov
popf
push
scas
pop
push
loope
bound
jg
xchg
jge
cmp
fprem1
xor
loopne
add
or
fildll
mull
xchg
pop
nop
je
push
lea
imul
sbb
ret
loopne
mov
rolb
in
cmp
gs
dec
add
std
sub
test
adc
or
in
mov
dec
movsl
imul
and
out
mov
jle
cmp
dec
inc
pop
orb
ja
fwait
inc
gs
adc
insb
jg
daa
not
push
mov
lods
es
pop
pop
in
ret
xor
inc
or
dec
push
daa
xchg
jle
and
js
add
or
sub
push
pop
mov
je
push
mov
fadd
fwait
scas
mov
pop
sbb
lods
xorl
int
or
scas
push
jmp
and
add
or
loope
cmp
adc
dec
js
sbb
xor
rol
call
popa
add
jno
iret
pop
mov
pop
sbb
push
xor
adc
push
popa
adc
xchg
xchg
fyl2x
rorl
pop
or
push
push
cmp
push
xchg
mov
and
fidivrl
jo
xchg
popf
test
sbb
aam
and
xchg
push
out
or
rcrb
fisttpl
subb
dec
xlat
cwtl
cmp
sbb
repz
and
sbb
ret
repnz
mov
inc
push
js
xchg
lret
inc
ret
cs
lcall
mov
adc
js
out
rcr
mov
fldt
clc
pusha
inc
dec
mov
xchg
pop
or
jmp
dec
out
mov
sub
imul
daa
adc
adc
adc
push
scas
lea
cmpsl
sbb
mov
icebp
mov
dec
aad
sbb
sarl
andb
and
push
aam
call
sbb
cld
adc
test
rolb
inc
and
push
enter
inc
cltd
push
cmp
xchg
cmp
mov
js
and
stos
test
xor
ds
xchg
pop
pop
xor
jecxz
push
sub
dec
add
push
sahf
pop
pop
enter
gs
mov
lret
ljmp
or
call
push
scas
ficoms
xchg
nop
mov
outsl
dec
push
lcall
cmpsb
addl
into
stc
outsb
orb
repz
or
mov
jg
arpl
lea
sbb
xchg
cmc
aam
into
test
mov
or
movsb
popf
lret
adc
jecxz
push
or
mov
mov
cld
faddl
push
mov
xchg
cmp
pop
xlat
mov
xchg
lods
mov
inc
inc
pop
divl
sbb
cmp
xor
pop
fildl
rcll
push
jae
nop
insl
fiaddl
out
and
pop
xchg
inc
xchg
pop
xor
jmp
sbb
add
or
or
jbe
fwait
iret
int3
das
or
dec
jno
jns
push
add
and
in
add
push
adc
add
push
mov
or
xor
sbb
pop
xor
test
test
std
mov
inc
leave
jmp
dec
mov
xchg
xor
jmp
fnstsw
mov
cld
add
ds
dec
sbb
fdivrl
fldl
bound
aam
stos
xlat
outsb
sbb
fstpl
dec
outsb
fwait
ds
lahf
in
adc
jmp
xchg
push
movsb
mov
ljmp
adc
sbb
mov
data16
in
sbb
fs
sahf
mov
movsb
js
xor
outsb
cmpsl
xchg
aam
mov
xchg
aaa
repnz
fcompl
cmpsb
push
mov
jbe
lea
test
pop
popf
aam
xor
repz
pop
lds
enter
add
jg
xchg
xchg
or
push
sub
mov
fldenv
lret
pop
lahf
jo
mov
jp
out
jge
dec
or
ror
add
negl
pop
das
inc
mov
shrl
fcmovnb
clc
fdivl
insb
push
repz
dec
cmc
mov
push
push
dec
mov
push
jl
lock
ja
ljmp
push
sub
adc
dec
call
inc
int3
pusha
jns
aas
in
fildll
adc
jl
lcall
cmpsb
jp
cmp
loopne
mov
lds
cmpsb
and
std
mov
lahf
inc
scas
jle
jbe
push
and
or
ja
adcb
call
push
xchg
rorb
addr16
and
insb
ss
lods
mov
lcall
xor
push
outsb
fwait
adc
sarl
adc
ds
dec
mov
mov
sub
xchg
dec
jmp
repnz
dec
xor
push
and
decb
aam
scas
hlt
aam
std
mov
cmp
sbb
pop
stos
aas
lret
mov
outsl
outsl
call
inc
mov
mov
test
movsb
cmp
testb
push
dec
in
std
mov
push
hlt
xchg
xor
push
arpl
loop
aad
and
dec
inc
jbe
ja
sub
sahf
pop
jg
incl
leave
andb
mov
add
push
pop
jo
mov
and
push
insb
pop
xchg
cmp
rcrb
jb
mov
lcall
xor
jbe
mov
std
lds
jbe
lret
les
lods
add
push
movsl
mov
sti
dec
shrb
movsl
fisubrs
cmp
xor
push
pusha
or
shrl
mov
mov
push
pop
mov
lods
aam
lods
cmp
xor
cmpsb
ss
push
dec
nop
push
sarl
push
into
jno
insl
or
call
jae
loope
aam
enter
push
fxch
push
das
mov
fs
mov
inc
fcmovb
pop
add
ljmp
fadd
sub
jg
sbb
sub
lret
jbe
or
sub
pop
jg
push
mov
iret
adc
mov
adc
fisttpl
rorl
in
cmpsl
xchg
mov
lock
scas
leave
sahf
xorl
nop
jne
inc
jecxz
cmp
mov
pop
push
cld
fs
call
add
add
stc
jp
es
cmp
insb
jbe
out
sti
jmp
cltd
inc
lret
lods
arpl
loop
mov
pusha
rorl
sar
pop
sahf
mov
enter
dec
enter
fisttpl
add
xchg
out
pop
xchg
imull
mov
mov
jno
lock
or
std
adc
xor
stc
xor
sbb
ret
adc
lcall
jbe
sbb
sbb
mov
push
enter
dec
sbb
cmp
insl
sbb
cs
cwtl
mov
int
xlat
mov
inc
clc
mov
je
mov
jecxz
or
fwait
pop
lock
fldt
es
xor
push
in
dec
sub
dec
repz
shrl
xor
enter
ds
lods
xchg
fcomps
and
mov
rolb
movsb
and
xor
cmp
inc
mov
push
cltd
scas
loopne
sarl
hlt
gs
movsl
cmp
jae
and
in
int
and
mov
adc
mov
jmp
pop
fbstp
jo
es
aad
mov
lcall
shll
and
testl
mov
xchg
pop
jns
roll
hlt
cmp
stos
xchg
repnz
mov
fildll
imull
mov
sub
pop
cmp
sub
fs
stos
mov
and
divb
cli
adc
ret
add
and
xchg
fs
stc
push
sub
call
push
cs
fldt
pop
xchg
lret
xlat
int
gs
fimuls
test
imul
sub
lret
sarl
jnp
mov
iret
xchg
jge
inc
jge
inc
movsl
movsb
or
xor
and
sbb
cmp
addr16
mov
jbe
gs
mov
stc
aas
repz
loope
xchg
push
xor
add
ja
push
mov
test
mov
in
push
xchg
jnp
xor
test
inc
loop
push
ja
jno
pop
dec
aas
cltd
cmp
pop
icebp
dec
pop
inc
ja
xchg
inc
shrb
shrl
sub
cmc
adc
xlat
outsl
ja
push
mov
jmp
add
fmull
out
stos
push
sbb
adc
dec
or
xchg
xchg
mov
das
cltd
jne
mov
inc
dec
and
cmp
pop
mov
dec
faddp
push
insb
test
xchg
jp
mov
cmp
cltd
add
pop
xchg
in
and
cs
sti
or
push
int
je
test
lods
mov
bound
dec
xchg
imul
mov
push
rcrb
frstor
out
pop
mov
pushf
sbb
inc
sub
push
push
mov
int
mov
xor
pop
lcall
mov
cltd
or
jge
inc
test
sub
icebp
cwtl
mov
mov
push
imul
addr16
pop
sbb
cmove
jbe
in
add
test
shlb
roll
lret
aam
mov
out
add
sub
mov
sbb
pushf
in
in
scas
cmp
lea
sbb
lret
xchg
and
mov
cltd
notl
adcl
adc
dec
pop
dec
add
pusha
mov
xor
cmp
adc
mov
sub
into
loop
push
nop
rcrl
and
in
ljmp
xor
addr16
subb
sub
stos
fcoml
jle
sub
pusha
mov
fs
mov
je
enter
inc
gs
cmp
jecxz
pop
inc
sbb
or
mov
imul
outsb
hlt
xchg
mov
in
cs
ret
adcb
pop
cmp
out
cmpsw
pop
ds
jl
imulb
dec
int3
scas
in
sbb
das
mov
fs
adc
mov
fs
inc
shrb
mov
mov
in
into
out
adc
mov
jae
fcoml
push
addr16
loope
js
mov
inc
dec
mov
and
loopne
setle
je
xchg
push
pusha
dec
out
mov
scas
jge
int3
jnp
cmp
imull
scas
and
cmp
rcr
js
int3
and
out
insl
add
dec
and
pop
fwait
gs
ja
jae
jmp
fcoml
cmp
shl
loop
mov
push
mov
in
mov
dec
enter
xchg
ds
fimull
je
addr16
cmpsl
inc
or
mov
mov
fmuls
shlb
inc
xchg
divl
sbb
daa
addr16
ds
push
rcr
push
aaa
cmpsb
inc
fnstsw
loop
xor
inc
das
mov
inc
and
insb
leave
sub
push
push
inc
cmp
adc
aad
jne
in
lret
xor
xlat
sbb
sub
pop
push
xor
mov
sbb
inc
cmp
stos
int3
xchg
cmp
imul
lahf
or
cmp
push
pop
lret
pop
lahf
xchg
out
pop
mov
fstpt
mov
out
jle
push
mov
data16
pop
push
inc
jl
ljmp
add
cs
xchg
pop
dec
fsubr
imul
add
mov
jbe
push
mov
call
test
movsb
xor
int
ja
aam
push
push
stos
leave
mov
adc
jbe
push
cmpsl
or
clc
nop
test
aad
fisubs
push
sub
std
stc
sub
cmp
arpl
in
jo
xchg
jae
mov
sub
repnz
push
shlb
mov
fwait
jne
cld
sbb
push
fcompl
add
mov
mov
sbb
fdivl
dec
or
aam
push
stos
mov
dec
int
int
jmp
movsb
repz
jno
movsb
popf
lods
int3
pop
repz
lock
xchg
push
sbb
imul
icebp
leave
sub
aam
fsts
sub
push
push
dec
cmc
mov
mov
xor
lds
daa
jge
pop
pop
dec
cmp
roll
mov
mov
xchg
shl
aaa
shrb
mov
pop
shrl
or
sbb
adc
sub
inc
sbb
rolb
push
sbb
cmp
les
mov
out
cli
xchg
loop
out
mov
loopne,pn
data16
mov
jmp
std
cwtl
mov
ds
jbe
bound
ss
lret
pusha
nop
stc
dec
popa
dec
push
push
movsb
mov
push
jnp
pop
jle
sarb
mov
lds
insl
arpl
outsl
add
cmp
add
xchg
adc
scas
sarl
test
pop
ds
xor
jge
divl
pushl
pop
cmp
cld
and
sub
shrb
sbb
sub
out
mov
pop
or
jae
xor
mov
sbb
rclb
pop
call
movsb
push
jg
mov
cli
out
test
nop
daa
lahf
lods
add
ficoml
sub
repnz
xor
movsb
pop
cltd
xchg
aam
cmc
dec
pushf
mov
push
sub
xchg
jns
pop
lock
sbb
adc
or
sbb
cmpsb
pop
cmc
inc
or
inc
adc
scas
ss
jg
pop
mov
and
cli
jae
pop
imul
les
icebp
sahf
imul
cmp
or
jmp
or
or
mov
fiadds
pop
cmpsl
push
outsl
sahf
js
jnp
sbb
dec
mov
sbb
pushf
insl
push
sbb
stos
cmp
cli
push
xlat
inc
repnz
loopne
test
jmp
pop
and
imul
loopne
dec
fldl
push
sub
sbb
and
cwtl
imul
xor
push
jnp
bound
jne
or
in
mov
int3
and
je
test
or
dec
pop
or
pop
imul
adc
sub
mov
loop
sbb
aaa
inc
mov
aaa
lret
testl
add
pusha
dec
cli
mov
jo
xchg
cwtl
sub
push
push
cmpsb
shlb
mov
cmp
ljmp
lea
shr
outsl
scas
lods
push
clc
stos
mov
pop
in
cmpsl
ss
or
in
sbb
lret
adc
and
aad
pusha
adc
rolb
pop
mov
sahf
lods
data16
mov
fs
mov
push
cmp
sahf
incl
mov
xor
lea
jmp
xor
xor
rolb
sbb
loop
inc
cmpsl
orl
into
out
mov
push
jae
add
pop
add
insl
cs
imul
arpl
cld
sti
mov
dec
mov
sbb
mov
rcll
dec
push
xchg
pop
mov
outsb
shll
xchg
ss
xchg
inc
push
xor
loop
int
in
push
or
shrl
cmp
nop
inc
pop
aaa
mov
xor
insl
mov
fcomps
fstpt
std
cmp
mov
sbb
shrl
loope
mov
das
mov
pop
mov
sarb
and
lds
movsb
adc
add
cmp
jge
xor
mov
stc
jmp
jno
push
lods
call
inc
or
and
mov
sub
out
mov
iret
addl
or
push
dec
js
sub
mov
cs
pop
sbb
cmpsl
xchg
fmull
pop
xor
push
xchg
pop
sbb
and
inc
insl
stc
gs
xchg
and
lret
xchg
jbe
ljmp
sub
fsubp
std
pop
pop
cs
jae
or
outsb
movsl
movsb
imul
es
xor
ljmp
mov
mov
test
dec
fdivrl
lock
xlat
fidivl
loope
push
adc
dec
sarl
add
cli
in
cmp
lods
insl
pushf
cmp
enter
xlat
pop
pop
adc
faddp
out
adc
scas
lds
cltd
adc
mov
jo
leave
mov
push
adc
nop
dec
in
and
jbe
test
icebp
or
xorb
jecxz
test
jl
fucomp
cmp
fwait
jno
jae
cmp
jmp
pop
cli
ja
sbb
repnz
sahf
lahf
sbb
insb
lret
lcall
scas
dec
in
lods
out
lods
adc
mov
outsl
mov
mov
les
push
and
xor
sub
shrb
mov
aas
jge
in
lahf
push
nop
pop
loopne
sbb
xchg
or
subb
mov
and
adc
in
lret
cmpsb
in
or
nop
cmp
sti
jl
out
and
arpl
das
fldl
jl
stc
xchg
call
lods
pop
subb
jnp
xor
fidivrl
pusha
call
aas
inc
in
add
hlt
out
xchg
sub
cli
sub
test
cmp
ja
aam
pop
out
sub
sub
xor
addr16
sbb
lods
ret
mov
shll
idiv
shll
xchg
mov
lods
enter
mov
mov
mov
or
rolb
push
mov
enter
popa
and
mov
ret
clc
mov
out
test
xor
pop
dec
dec
ss
lods
sbb
fdivrp
js
mov
or
add
cmp
aaa
out
dec
out
sub
rorb
sub
xor
cmp
cltd
iret
push
mov
scas
pusha
stos
add
andb
fadd
xlat
test
jecxz
cmc
sub
xchg
dec
xorl
mov
rcll
push
jbe
loopne
and
out
pop
das
sub
push
or
inc
sbb
test
xor
add
adcl
xor
cmp
xchg
fs
loop
xchg
lds
fildll
loopne
push
shlb
push
push
test
lret
dec
pop
mov
jae
or
dec
ficompl
sbb
push
inc
out
inc
dec
inc
lret
mov
xor
movsb
mov
in
loopne
in
stc
dec
mov
rcrb
sub
push
shlb
mov
sbb
aaa
jmp
lods
jbe
mov
cmpsl
enter
daa
jge
in
clc
sbb
jbe
mov
cmp
mov
jnp
out
andl
pop
or
inc
pcmpeqw
xor
repz
bound
insl
enter
inc
lock
das
dec
ret
mov
jae
out
mov
out
inc
int
je
jle
mov
out
into
rorb
fsubrl
or
dec
incb
add
adc
fcoml
lcall
andl
and
popf
sbb
dec
ss
jb
ja
aad
lret
inc
loope
sahf
aas
sub
xchg
push
and
inc
or
jbe
push
xchg
pop
cli
inc
ja
loopne
ja
mov
mov
xor
push
or
out
push
sub
adc
mov
pop
inc
xlat
pop
cli
cltd
imul
inc
popf
add
cmpsb
jmp
data16
or
pop
inc
xor
cmp
xchg
pop
and
or
insl
mov
pminub
movsb
shll
loop
pusha
cmp
js
xlat
sbb
adcl
mov
jbe
es
jge
loope
mov
mov
std
adc
mov
adc
jne
in
or
or
pop
mov
cmpsl
cmp
inc
dec
ss
test
std
mov
js
mov
jno
xorl
add
pop
xchg
and
loop
fbld
neg
insl
int3
cmp
lret
sub
jg
ret
add
mov
jp
movsl
cmpps
roll
and
mov
lcall
mov
inc
dec
cmpsl
mov
xchg
cwtl
lcall
sub
dec
xchg
and
fadd
inc
jge
int3
pop
jne
adc
std
push
pushf
adcl
mov
ljmp
movsb
mov
aam
mov
nop
jno
das
xor
add
mov
lods
mov
dec
pushf
xor
sub
dec
adc
cli
js
dec
cld
je
sbb
stos
lret
clc
or
lods
jne
pop
xchg
sbbl
lods
and
movsb
xchg
xchg
cld
loopne
dec
dec
dec
mov
lcall
lods
pop
sub
jmp
jg
mov
xor
mov
xlat
sbb
je
add
loopne
nop
add
mov
insb
push
enter
sbb
cmpsl
sbb
adc
lock
stos
icebp
out
and
sub
and
push
dec
push
movsb
cmpsl
and
mov
adc
cmpb
ljmp
mov
cmp
add
shll
test
sbb
sbb
into
cwtl
insl
jo
cmpsb
aam
xchg
cwtl
cltd
sub
call
pop
dec
aaa
hlt
fwait
sbbl
and
mov
and
adc
add
filds
movsl
or
push
sbb
xchg
jbe
ficoml
addr16
or
rcr
add
add
jecxz
xchg
push
push
push
ret
and
out
mov
push
subb
aad
fbstp
adcb
push
xlat
xchg
repz
lds
mov
addl
fistl
sti
adc
sub
out
push
xchg
imul
sub
mov
movsl
and
mov
arpl
shll
sub
push
sbb
stc
repnz
fs
xchg
lock
mov
stos
mov
add
out
pop
xlat
jno
inc
mov
jle
cmp
jne
pop
andps
stos
aam
pop
mov
pop
int
popf
and
lock
push
pop
cmp
ss
hlt
and
cmp
jmp
es
mov
lahf
add
inc
xchg
and
fbld
or
icebp
pop
mov
shrb
pop
lea
and
mov
cs
or
mov
bound
imul
push
pop
mov
pop
and
ficompl
dec
movsl
push
pop
nop
or
stos
out
mov
cmp
inc
movsb
in
xchg
std
mov
nop
fiaddl
mov
cmp
aaa
sarl
mov
jecxz
sbb
ds
dec
hlt
lock
lea
fimuls
stos
cmp
in
hlt
cmc
leave
imul
in
outsb
jle
cmp
fiadds
in
jbe
add
mov
push
adc
dec
fidivrl
addr16
ret
imul
add
arpl
jecxz
sub
cmc
dec
and
test
cmp
add
into
adc
aaa
or
lds
addr16
inc
rcrl
mov
cmp
lahf
pop
repnz
les
xor
add
das
pusha
int
mov
sbb
pop
aaa
mov
lret
fxch
inc
and
cmp
or
sbb
inc
xchg
pop
lods
int
int
adc
ud1
adcl
aam
or
sub
js
jle
xchg
test
imul
jbe
rorl
test
movsl
stos
fdivs
dec
mov
daa
adc
repnz
std
jl
out
repz
int3
and
fcmovbe
movsb
daa
ljmp
xor
cltd
inc
adc
negb
insb
ss
mov
adc
call
sub
and
mov
movsb
out
mov
add
xor
test
jbe
jmp
mov
push
mov
push
outsl
stc
push
and
adc
fcomps
mov
fmull
lods
xchg
out
int3
sti
cmp
dec
in
xchg
jnp
in
setle
mov
push
in
fwait
lret
leave
mov
adc
int
lods
test
push
pop
sub
sbb
push
push
adcb
mov
lds
sar
ljmp
inc
lahf
sub
sbb
pop
cmp
push
loope
push
ret
mov
xor
jge
aam
mov
xchg
and
imul
xchg
pop
and
js
jg
pop
leave
dec
and
and
xchg
cmp
and
cmp
das
in
push
sbbl
inc
pop
jbe
lea
mov
mov
mov
and
pop
and
fildll
sub
pop
push
mov
aaa
cwtl
scas
cltd
sarb
push
and
push
dec
loope
inc
movsb
test
jns
bnd
cmp
mov
ds
mov
jecxz
sbb
movb
push
mov
pop
xchg
roll
ds
add
and
mov
cmpsl
push
movsl
movb
add
rcrb
inc
les
cltd
movsl
leave
mov
aad
lret
stos
mov
push
push
jp
pop
aas
inc
loopne
iret
rorb
cli
int
sbb
mov
mov
vpmacsww
pop
sbb
nop
dec
or
mov
push
cwtl
push
push
pop
repz
test
cmp
sub
aas
lcall
cmp
js
xor
or
mov
out
aas
jo
icebp
pop
mov
lods
cmpsb
std
pop
arpl
mov
dec
dec
jnp
mov
xchg
jmp
pusha
jno
add
orb
das
jo
mov
ret
push
js
inc
inc
shll
daa
add
test
es
jbe
adc
push
xor
push
pop
fwait
lds
dec
insl
jne
jl
or
mov
lcall
pop
add
inc
into
lret
addb
jl
repz
push
mov
sub
lock
jnp
xchg
push
jns
pop
icebp
aas
rorl
scas
jo
loope
xchg
xor
mov
mov
in
ljmp
negb
fadd
aas
stos
decl
push
pop
sbb
test
xor
into
imul
imul
xchg
adcb
xor
xchg
cmp
ljmp
mov
or
mov
lea
iret
cld
rol
jae
push
in
nop
jge
xchg
push
mov
cwtl
cmp
xor
rolb
in
enter
pop
jge
dec
into
mov
sbb
push
dec
cwtl
jo
rolb
sub
fistl
sbb
inc
cmc
push
inc
inc
and
inc
cmp
mov
inc
out
add
dec
in
stos
xlat
popa
sti
xchg
pop
sbb
jbe
enter
sub
pop
lahf
cli
mov
jmp
dec
lods
mull
or
daa
int
hlt
ja
push
mov
add
repnz
cmp
mov
or
loope
jg
mov
mov
sub
add
add
cltd
push
arpl
jae
mov
adc
ret
adc
xchg
inc
jmp
mov
push
imul
out
inc
mov
out
enter
cmp
into
xchg
mov
cmpsl
cmc
stc
push
adc
mov
sbb
test
or
xlat
sub
xchg
mov
test
fidivl
or
lds
and
cltd
loopne
mov
lret
pop
jl
or
jne
mov
mov
repnz
push
nop
shlb
fimuls
jo
push
lahf
push
aaa
xor
mov
dec
cmp
negl
xor
sbb
clc
daa
and
xchg
insl
adc
aas
jb
scas
dec
test
cmpsl
and
mov
daa
call
outsl
push
xchg
test
dec
and
ret
and
shlb
gs
and
lods
cmp
into
pop
ljmp
cmp
repz
xchg
mov
lods
je
sub
xor
jne
ud1
iret
jle
test
stos
sbbl
dec
inc
pushf
lds
iret
mov
jmp
mov
enter
or
push
sbb
lcall
mov
fstl
inc
test
add
stos
xchg
aas
push
shr
sub
adc
into
xorb
repz
xor
push
sub
jecxz
clc
sbb
loopne
fstpt
adc
adc
xchg
or
inc
lret
mov
cli
mov
jmp
mov
jae
cwtl
pop
pop
aad
dec
clc
or
rclb
dec
add
lods
test
ds
mov
jmp
sub
popf
mov
lock
and
addb
cmp
or
fmul
mov
push
adc
adc
int3
mov
inc
adc
jge
scas
jne
movsb
out
cli
out
xor
fildll
je
ss
inc
fstp
loope
rcrb
scas
and
cmp
push
aad
popf
lods
or
adc
dec
mov
push
outsb
out
call
xor
or
scas
xor
push
jmp
xchg
cmpsl
pmullw
jno
sbb
mov
inc
cmc
mov
out
dec
xchg
pop
jbe
mov
sbb
ret
add
dec
push
and
or
add
subl
outsl
jecxz
dec
sbb
jne
mov
jbe
dec
ret
jle
xor
xchg
ficoms
and
test
or
pop
fstpl
cwtl
push
push
mov
es
pop
out
cmp
gs
xchg
lea
push
push
push
pop
fidivl
sbb
mov
push
sub
cmc
insl
xchg
cld
pop
mov
sahf
inc
inc
push
push
fwait
iret
mov
push
aaa
jecxz
leave
dec
add
sub
jo
stos
imul
ret
and
inc
push
push
mov
int3
adc
cmp
jo
mov
imul
adc
loop
mov
jge
ja
mov
inc
jae
pop
cmp
out
and
inc
cmp
xor
dec
add
into
mov
iret
icebp
cmp
sti
push
jne
enter
outsb
repz
jmp
jg
push
loope
hlt
cmpsl
push
out
push
rcrl
xchg
daa
das
xor
pop
jne
mov
adc
pop
fs
lea
int3
sbb
ret
adc
clc
xchg
and
scas
jle
mov
pop
loop
or
bound
fs
fistpl
push
ret
mov
dec
jle
pop
and
adc
jne
fdivrl
or
and
jno
and
jp
xchg
outsl
shrb
maskmovq
idivl
push
and
js
sub
cli
aad
shrl
push
inc
shlb
test
adc
lcall
popa
cmp
cmp
repz
mov
sub
ss
out
add
jmp
push
sbb
push
sub
inc
testl
inc
xchg
add
test
add
loop
out
js
jmp
scas
push
jl
xchg
mov
dec
push
xchg
das
dec
inc
pop
enter
dec
shlb
call
stc
cmp
leave
jmp
daa
cs
cmpsb
sahf
jecxz
loope
mov
mov
push
sub
ss
out
sub
out
push
push
pop
loope
xor
gs
mov
add
mov
in
or
notb
das
lret
scas
cltd
mov
cs
outsb
pop
adc
pop
inc
jge
loopne
sub
dec
push
xor
push
sti
in
ficompl
adc
out
pop
in
jecxz
inc
pop
sub
fwait
xchg
push
lahf
lods
adc
inc
into
sbb
push
in
sar
xor
mov
cmpsb
idivb
push
nop
repz
inc
xchg
mov
je
cmc
ljmp
xor
imul
scas
sbb
int
fcom
je
in
imul
fbstp
stos
pusha
mov
fstl
push
mov
scas
jae
pop
out
mov
mov
mulb
mov
ja
mov
push
xchg
mov
cmp
push
mov
mov
jno
pop
mov
mov
movsl
dec
aaa
pusha
mov
popl
jmp
ficomps
adc
lds
dec
push
mov
push
mov
sbb
mov
icebp
push
insl
xchg
push
cwtl
push
ss
hlt
pop
cmp
loop
adc
outsb
stos
cmp
push
jecxz
pushf
lock
std
out
push
test
call
fwait
adc
test
sub
adc
inc
xchg
es
push
dec
add
lret
nop
jne
add
dec
stos
pop
divl
jl
inc
fstl
pop
add
lock
in
lock
or
or
adc
cmp
cmc
push
dec
push
in
add
sub
call
push
pusha
mov
add
out
repz
stos
aam
enter
cmp
leave
push
push
out
xchg
ficompl
js
divl
sbb
imul
in
jl
inc
push
sti
shlb
adc
dec
fstl
mov
cmp
ret
inc
repz
aaa
mov
pop
and
sahf
dec
adc
sub
mov
pop
in
shrb
push
sub
mov
int
lcall
push
lds
fldt
push
sbb
lahf
mov
jmp
scas
outsl
ss
inc
mov
xchg
or
or
into
pop
pop
ficompl
scas
les
mov
pop
das
mov
movsb
inc
adc
shll
or
rcrl
inc
adc
jg
pop
popa
and
int
repz
subl
xchg
jne
les
gs
nop
lea
push
pop
mov
xor
data16
inc
add
and
fstl
pushl
or
mov
add
stc
repnz
push
xchg
mov
push
jnp
cmpsl
mov
scas
mov
xor
or
insl
bnd
stos
movb
mov
int
fdivrl
sbb
out
addb
xchg
fs
or
orl
pop
push
jnp
nopl
icebp
ror
cmp
xchg
xor
lock
js
push
int3
shrl
jno
test
xor
or
data16
adc
lock
jo
pop
cs
push
lds
ffreep
sbb
sbb
adc
outsl
out
inc
jmp
lcall
xor
ret
xchg
add
mov
enter
bound
dec
sbb
xor
neg
scas
movsb
je
add
ss
push
scas
jb
mov
cwtl
push
xchg
jle
dec
cwtl
or
lods
adc
sbbl
xchg
push
jg
inc
loop
fldt
cmc
inc
pop
out
scas
pop
cltd
lahf
inc
cwtl
ja
lods
outsl
xchg
repz
sti
data16
jl
inc
out
and
test
xor
or
mov
jae
imul
scas
arpl
mov
bound
sub
xor
adc
xchg
inc
push
jbe
inc
inc
addr16
fmuls
ss
mov
add
notl
or
adc
push
popl
arpl
call
mov
dec
test
jg
add
cmpb
cmc
cmpsb
jae
sub
sahf
dec
into
pop
cmpl
jp
dec
in
and
mov
fcoml
popa
sub
jp
pop
inc
and
repz
int3
cmp
fdivp
outsb
mov
lahf
mov
mov
sti
or
sbb
add
lock
shll
scas
pop
adc
enter
sub
xor
or
leave
inc
stos
je
dec
inc
mov
push
pop
ficomps
mov
jge
fwait
xor
aam
jmp
lret
sti
stos
outsb
push
mov
test
adc
push
shrb
push
lds
into
and
jae
dec
cmp
inc
mov
adc
xchg
push
and
xchg
pop
push
jne
cmpsl
je
jb
sub
or
out
movsb
cmpsl
add
repnz
cwtl
jnp
subb
addr16
pop
ret
enter
scas
mov
cltd
push
sub
insb
or
and
mov
ficompl
xchg
test
mov
ljmp
cli
add
cmpsb
inc
mov
cld
jl
pop
and
dec
sub
in
mov
xchg
add
popa
mov
addl
jo
stos
xchg
mov
jmp
add
mov
pop
call
and
hlt
pop
mov
sti
js
and
or
mov
xchg
stc
ds
leave
aam
repnz
out
xchg
sbb
push
lea
cmpsb
and
pusha
cld
movsb
xor
ror
adc
dec
ds
xor
out
lahf
ss
jmp
add
pop
das
jae
xor
mov
and
xchg
jo
jge
adc
xchg
cmp
fs
mov
mov
mov
sbb
pushf
test
push
cmp
sub
enter
pop
insb
testl
xchg
lret
test
push
cs
ret
bswap
outsl
push
pop
lcall
pusha
jp
jmp
dec
in
push
pop
push
lea
xor
int3
shll
add
push
adc
jne
mov
add
push
loopne
jmp
lea
sbb
xchg
cmp
mov
cltd
mov
pop
lds
jle
dec
hlt
mov
mov
les
and
mov
pop
dec
adc
mov
je
sbb
ja
lret
mov
je
enter
out
inc
jmp
pop
fs
out
cmp
xor
loope
sub
pop
loope
in
sbb
and
sti
shrl
mov
mov
js
jae
pop
pop
pop
roll
loopne
and
insl
ds
dec
nop
adc
sub
xchg
cs
mov
sarb
sub
mov
scas
pop
jo
push
push
adc
cmp
and
add
and
cltd
insb
add
mov
stos
xor
shlb
cwtl
inc
jmp
push
or
cmc
nop
stos
hlt
rorb
or
dec
xor
sub
out
pop
jnp
es
in
jle
sbb
pop
sbb
xchg
xlat
and
aas
xorb
addr16
sub
xor
inc
add
cmp
pop
sub
rorl
js
lock
in
jno
add
pop
shlb
test
in
out
into
cmp
or
insl
mov
cmc
add
mov
mov
std
shll
or
jecxz
sbb
outsb
popa
sbb
sbb
dec
xchg
fistpll
jmp
enter
in
mov
mov
and
jae
lcall
mov
or
and
lods
add
cmp
in
jb
sbb
loop
or
jbe
lds
aas
sub
bound
mov
push
jmp
or
ljmp
bnd
cmp
dec
into
fdivs
pop
ljmp
jge
dec
outsl
idivl
loopne
filds
jnp
mov
cmp
push
push
mov
jge
xchg
jge
inc
cmp
xchg
rorb
leave
in
popa
dec
add
or
push
pop
and
out
pop
push
getsec
outsb
fiadds
push
xor
push
push
sub
loopne
mov
mov
cltd
sub
scas
dec
negb
addb
hlt
fsubrs
xchg
int3
popf
lret
cmp
push
shl
data16
aad
cli
loope
add
jl
mov
shrl
pop
sub
jbe
stos
insb
jnp
pop
mov
aam
loope
pusha
pop
pop
xor
out
push
testl
push
ret
xlat
fdivrs
in
cmp
cmp
pop
scas
sbb
xchg
idivb
mov
ss
or
arpl
adcb
aad
stc
xor
xchg
sti
jmp
dec
in
sub
out
cmp
fwait
inc
lock
sub
nop
call
adc
pop
lods
mov
bound
out
outsb
lds
inc
push
in
lret
pusha
ja
mov
outsl
add
jb
outsl
lahf
push
out
cmp
roll
mov
inc
push
xchg
shlb
jl
xchg
xchg
mov
mov
adc
rclb
mov
mov
test
pop
dec
push
pop
jle
mov
xchg
inc
jnp
inc
pop
push
test
dec
outsl
dec
xlat
jns
sti
jo
mov
test
add
mov
xchg
int3
push
xchg
dec
popa
jnp
movsl
les
lods
out
out
push
gs
shl
notl
test
cld
pop
pusha
mov
push
popf
rclb
xor
sub
push
cmp
mov
jl
jo
push
inc
sahf
jns
adc
mov
pop
jo
shrb
loope
push
cmc
adc
push
fs
and
jmp
test
mov
loope
add
mov
ds
aas
lea
lret
in
jle
enter
out
test
mov
jno
cmp
or
mov
pop
push
out
bound
pop
sub
mov
nop
es
subl
cmp
in
sbb
mov
imul
inc
lea
xchg
xor
test
insl
sub
leave
jnp
mov
xchg
jl
pushf
loop
sub
dec
dec
add
adc
xchg
repnz
mov
cwtl
stos
das
adc
sub
mov
jle
and
sub
out
stc
das
pop
xchg
ret
and
ljmp
and
pop
movsb
push
add
and
insl
gs
aas
push
mov
or
in
stc
xor
sub
sti
cltd
les
mov
mov
xor
data16
shll
push
push
mov
pop
or
inc
xor
and
mov
jmp
sbbl
push
ror
mov
inc
mov
pop
sbbb
je
mov
in
push
cmp
adc
dec
inc
clc
dec
sub
hlt
dec
test
dec
xchg
js
adcb
xor
jb
jo
jb
sub
cld
pop
out
rolb
shll
pop
popa
mov
add
rcrl
xchg
int
xchg
repz
push
lock
call
jo
mov
sub
mov
fisttpl
xchg
push
and
repz
pop
add
rol
or
dec
pop
sti
sbb
repz
dec
jecxz
pop
push
mulb
icebp
inc
mov
xchg
xchg
inc
pushf
mov
test
or
xchg
mov
add
sahf
pop
pop
cmp
inc
jno
sahf
mov
subl
sbb
adc
lret
out
stos
cwtl
fsqrt
repnz
aad
adc
sub
repz
jne
push
push
cmpsl
icebp
dec
mov
push
repnz
daa
lods
sub
mov
xlat
insl
je
sbb
mov
stos
mov
push
dec
out
push
cmp
arpl
or
add
push
fadds
jbe
mov
imul
insb
mov
in
sbb
aam
inc
out
leave
add
mov
fistl
jl
and
inc
jp
sbb
xchg
inc
mov
inc
rcll
xchg
mov
ret
dec
lcall
repz
js
pop
add
sbb
dec
ljmp
notl
cwtl
xchg
dec
nop
rorb
mov
push
out
pop
std
adc
pop
inc
or
mov
or
mov
xor
lods
scas
jge
out
out
mov
dec
fdivl
sbb
pop
adc
or
insl
xchg
xchg
je
addr16
dec
pop
cli
add
cmp
call
adc
aas
in
inc
or
and
cmp
loop
jl
ss
or
jbe
push
add
xchg
arpl
mov
xor
mov
xlat
arpl
stos
test
adcl
dec
sub
mov
or
leave
mov
sbb
or
lret
jne
cmpsb
call
push
mov
dec
add
mov
or
lods
add
insb
cmpl
stos
sub
test
jmp
push
ja
nop
enter
pop
push
add
dec
sbb
pop
push
leave
ds
dec
sub
cli
jp
cmc
stos
imul
sub
mov
sbb
dec
int3
imul
shrl
loopne
test
or
mov
ret
mov
test
mov
xor
adc
cltd
pop
pusha
in
fs
js
je
add
push
sub
adc
xor
sbb
fisubl
mov
pop
test
push
movsl
es
pop
popf
loope
xchg
out
push
adc
xchg
in
ja
js
mov
xchg
into
insb
and
cmp
push
push
jbe
fbld
insb
test
cmp
fisttps
add
xchg
or
mov
paddsw
sub
and
sub
std
clc
mov
fs
or
push
out
out
pop
add
movsl
mov
jmp
mov
mov
lock
fnstcw
cmp
mov
jecxz
movsb
add
movd
mov
mov
test
ss
repnz
cltd
jb
jmp
jns,pt
fmuls
leave
in
xor
adc
jae
sarb
scas
lret
mov
ret
xor
data16
pop
adc
xor
mov
mov
cmp
insb
es
mov
add
fsubl
mov
xor
pusha
divb
mov
orb
fistpl
leave
sub
repz
jle
mov
add
push
sbb
adc
hlt
cmp
fxch
xorl
lock
int3
push
jb
jo
cmp
jg
out
pushf
les
cmp
mov
movsl
cmpsl
cmp
fwait
mov
shlb
dec
les
xor
aam
push
and
clc
ret
cltd
hlt
mov
and
shrl
pusha
lods
lods
mov
add
daa
pop
adc
ja
pop
enter
mov
pushf
lcall
pop
ljmp
xor
push
in
push
jbe
pop
orb
dec
sub
cmc
je
jae
pusha
sbb
icebp
and
mov
mov
and
sbb
jmp
es
clc
inc
bound
xchg
icebp
out
cmp
jg
adc
xlat
sahf
into
gs
jns
stc
inc
xchg
jo
arpl
int
push
add
dec
mov
imul
shr
adc
sahf
xlat
imul
xor
push
out
add
enter
adc
sub
push
lea
add
fnstenv
push
jle
sub
lret
cmp
cmp
into
inc
enter
pop
push
movl
mov
arpl
test
cmp
inc
inc
dec
mov
fucomip
pop
inc
les
push
jo
adc
mov
popa
push
cmp
lock
xchg
mulb
mov
push
in
jp
and
and
fsin
in
sub
in
add
sbb
push
lods
shl
leave
pop
repz
pop
pop
rcrl
mov
add
jns
pop
sbb
scas
aas
and
pusha
fistpll
mov
xchg
aaa
loopne
and
rorb
out
lea
into
jge
sahf
or
sbb
shrl
pop
shrb
mov
or
imulb
inc
jg
fldenv
jl
sub
mov
sbb
xor
dec
out
jbe
sbb
mov
jns
adc
rorb
cwtl
int3
mov
enter
dec
or
aad
sti
or
add
notb
popa
rorl
mov
dec
xor
lret
and
pop
sub
dec
aad
cmp
or
jns
loope
xor
loop
sbb
sbb
mov
push
fdiv
mov
lcall
cmp
out
inc
or
mov
data16
aad
and
inc
lea
mov
sub
aaa
or
in
pop
repz
imul
mov
popa
mov
test
cltd
xchg
fcomip
mov
stos
pop
repz
mov
loope
jp
in
mov
adc
cmpl
xor
jno
test
pop
leave
xchg
mov
cld
or
mov
sbb
stos
sub
das
and
pop
dec
xchg
fistpl
mov
loope
bound
pop
addr16
insl
adc
inc
mov
pop
jb
out
lret
bound
xor
out
int
ret
stc
and
insb
dec
sbb
mov
adc
xchg
std
dec
imul
std
and
or
aad
mov
sbb
jnp
sbb
inc
imul
test
es
adc
jo
mov
adc
mov
testl
inc
mov
in
dec
dec
mov
lock
or
and
inc
mov
stc
xchg
loop
shl
dec
pushf
mov
fbld
cmp
aaa
sub
gs
mov
or
ja
or
sbb
xchg
add
sbb
ljmp
jg
and
push
mov
iret
loop
adc
inc
push
xor
fisttps
mov
mov
ret
cmc
sbb
pop
imul
and
adcb
add
popf
xchg
push
push
and
dec
jo
adc
jp
out
pop
xchg
ljmp
dec
cmp
sbb
or
movsl
xchg
mov
xchg
jmp
sarb
dec
scas
enter
fildl
sbb
dec
jns
test
sub
loopne
cmpsb
xchg
adc
xlat
hlt
sub
dec
push
mov
fildll
mov
xchg
sub
ss
xchg
scas
call
loop
iret
inc
mov
mov
fst
std
mov
jp
test
add
adc
pop
cltd
cmp
adc
pop
pop
daa
add
shlb
int
jns
push
dec
sti
sub
mov
loop
and
sub
aam
mov
aam
rcll
mov
inc
out
push
sub
xor
cmp
xor
or
mov
inc
cld
nop
cmp
out
mov
scas
stos
jo
and
inc
fisttpll
jne
and
mov
mov
pop
out
pop
clc
inc
xchg
xchg
pop
daa
xlat
imul
ds
pop
xchg
testl
aas
sub
inc
mov
aas
rolb
pusha
adc
and
in
sbb
mov
out
scas
pop
cmp
pop
daa
add
xor
pushf
fsts
or
fistpll
loop
push
cld
pusha
or
les
hlt
lea
ffree
xlat
adc
inc
lcall
scas
mov
hlt
xchg
ljmp
sub
enter
out
and
or
mov
dec
cmc
sub
push
hlt
xchg
dec
mov
add
jns
icebp
jecxz
scas
iret
cmpsl
xor
pop
mov
jo
insb
scas
movsb
bound
and
adcl
dec
ss
sub
jmp
jecxz
fadd
xchg
js
fmuls
fcomip
pop
jl
adc
mov
fidivrl
lea
out
lahf
cmp
mov
cmp
mov
jg
fwait
sub
test
idiv
and
aad
add
push
daa
push
pop
out
lahf
imul
movsl
mov
ljmp
adc
sbb
lahf
xchg
xchg
loope
fimull
pop
sbb
hlt
ret
and
dec
std
movsl
imul
lret
jae
mov
repz
and
inc
mov
mov
sbb
cwtl
or
dec
cs
jmp
adc
dec
shll
push
xchg
push
loop
push
and
mov
jb
add
sub
cmp
scas
stos
mov
pop
test
jl
lods
fimull
fcomi
fiaddl
icebp
and
mov
sub
cmp
or
fistps
adcb
mov
push
or
leave
psubusw
add
or
lcall
xchg
sarl
cmp
popf
fcomp
lock
mov
xlat
frstor
rcl
xlat
aad
cmpl
mov
loope
nop
rcrb
pop
es
arpl
mov
push
fmuls
in
adc
inc
lds
out
stos
push
xor
inc
in
outsl
sar
stos
scas
push
pop
mov
sub
sub
jns
stos
cmpsl
adc
iret
xchg
cmp
jb
int
popa
pop
enter
cmp
stc
sub
ljmp
inc
push
push
push
sub
mov
ljmp
je
loopne
add
fidivrl
push
or
fwait
pop
int3
lea
out
sbb
insl
test
mov
fnstsw
push
rcrl
repnz
push
push
or
or
ljmp
popa
inc
inc
outsb
cmpsb
mov
outsb
fsubr
fisttpll
dec
cmp
jmp
scas
jb
loopnew
hlt
mov
sti
sbb
inc
mov
dec
mov
cmpsb
lret
pop
out
in
jae
adc
rclb
sbb
jge
das
fldl
xlat
xchg
and
stc
mov
pop
xchg
mov
sbb
sbbb
fs
ljmp
jle
pop
push
add
xlat
into
inc
xchg
mov
xchg
mov
dec
xor
fldt
imul
xchg
shrb
into
lea
mov
inc
shlb
paddq
out
das
arpl
int
aas
ja
movsl
dec
push
add
add
inc
bt
mov
push
sbb
or
addr16
dec
jae
popf
imul
sub
push
lcall
leave
xlat
stos
mov
or
mov
cld
lret
pop
inc
cmp
cmc
mov
xchg
adc
push
shl
mov
dec
sbb
and
adc
mov
test
sub
or
test
cwtl
dec
leave
pushf
cmp
xlat
mov
lcall
xor
pop
jle
add
in
insb
out
push
mov
mov
adc
popa
pop
in
fsubrs
jle
cmp
or
sti
sbb
es
into
or
test
mov
out
insb
fnsave
jp
loop
dec
mov
ss
insl
cmp
loopne
sub
pop
test
fnstenv
ret
jno
incl
xor
repz
fisttpl
std
mov
cld
cmp
mov
out
cmp
lret
ficomps
pop
push
xorb
inc
jb
cmp
ror
getsec
jb
or
hlt
repnz
xor
mov
pop
movsb
and
add
fistpll
cmovo
arpl
adc
pushl
movsb
aam
pop
aam
jbe
cwtl
rorl
subl
maskmovq
add
fildl
in
xor
jns
or
pop
push
sbb
xor
lods
mov
ds
fs
shl
fwait
lods
xchg
mov
lea
inc
jp
xor
ret
and
xchg
xchg
jo
push
cwtl
fdivs
push
mov
arpl
lret
in
push
enter
stc
or
push
clc
test
ljmp
xor
je
inc
addr16
aas
arpl
dec
cmp
hlt
push
ljmp
push
xchg
pushf
insl
xor
pop
pop
push
adc
dec
rorl
mov
jg
lods
mov
jle
mov
push
xchg
add
lds
inc
adc
fistl
mov
jne
xchg
and
int3
subb
pop
inc
scas
insl
fistpll
out
push
and
and
cmpsb
aam
popf
adc
in
int3
xchg
push
xchg
jnp
cmp
rcrl
rcr
lahf
stc
insb
mov
cmpsb
xchg
mov
imulb
dec
shl
sub
inc
mov
xor
jae
cs
inc
pop
adc
call
sub
and
test
lods
push
shrb
lods
cmpsl
cwtl
cmc
repnz
cmp
mov
xor
in
lret
sbb
repnz
mov
push
mov
mov
dec
in
jl
fcoms
push
xchg
push
xor
movsb
scas
mov
mov
dec
jge
negb
adc
add
push
inc
push
inc
stc
mov
xor
cmp
add
pushf
adc
cwtl
adc
daa
addr16
cmp
insb
xchg
sarb
clc
add
sbb
stos
and
mov
lds
and
or
in
push
stos
sbbl
add
adc
or
mov
pop
lock
add
fstpl
adc
ljmp
arpl
adc
loop
fldcw
cltd
cld
sub
jae
add
aaa
cltd
bound
sahf
push
mov
iret
mov
sub
push
dec
mov
lds
pminub
stos
les
mov
inc
xor
roll
fstps
outsb
inc
int3
sbb
dec
les
and
fnsave
cmpsb
xchg
push
cli
popf
aam
sahf
outsl
popf
aas
adc
and
and
fsub
dec
mov
mov
imul
incl
dec
idivl
mov
pop
das
test
jge
push
jns
jecxz
jp
sarb
inc
or
xchg
jb
js
outsb
test
and
add
sbb
sub
xor
fdivrs
sub
xchg
fwait
sbb
and
notl
outsl
in
cli
inc
loope
cmpsl
jae
sub
xor
or
push
mov
mov
pop
cltd
out
ja
jb
fwait
inc
leave
ret
shrl
jmp
mov
push
addl
pop
pop
or
cli
mov
jns
xor
jns
pop
cltd
xor
sbb
mov
lea
jo
out
dec
hlt
scas
movsl
push
repnz
addr16
inc
cmp
js
mov
or
mov
add
pop
enter
cmp
aad
lret
mov
push
jae
xchg
xchg
int
xchg
jle
and
pushf
mov
cmc
outsl
bnd
jae
mov
leave
mov
mov
je
push
push
xchg
adc
xchg
push
rcrl
add
xchg
cwtl
sbb
mov
add
in
xor
fisubl
outsl
or
add
clc
push
mov
nop
std
push
in
or
add
jg
jle
push
or
jge
dec
flds
xchg
cwtl
fld
inc
js
adc
in
enter
sub
xor
fisubs
push
into
jp
loopne
inc
nop
cmp
cmp
fnstenv
addr16
sub
je
fstps
or
divps
push
in
adc
cld
or
notl
pop
orpd
into
add
mov
mov
repz
dec
rcrb
or
add
outsl
dec
sar
lods
lods
and
pop
xorl
jecxz
and
imul
mov
je
mov
movsb
adc
mov
fbld
stos
push
les
jae
jnp
push
mov
pop
fidivrs
mov
test
je
mov
jg
stos
icebp
ljmp
lahf
jmp
or
hlt
or
mov
jmp
add
out
loope
bound
cmp
dec
imul
insl
out
rorl
sub
loop
push
insb
mov
int
repz
dec
gs
mov
out
mov
insl
jmp
rcrl
fsubrl
mov
mov
dec
mov
addb
push
mov
add
sbb
dec
cmpsl
pop
shrb
mov
insl
scas
loop
mov
and
sbb
insb
push
popa
xchg
push
ret
sub
cwtl
pop
pop
mov
cmp
jnp
gs
jge
sub
pushl
ja
sbbl
fidivs
rcll
adc
loop
cmp
cmpsl
pop
jo
sub
outsl
fldcw
xchg
jg
loopne
push
movsl
dec
sbb
mov
cmpsl
fistpl
and
shlb
or
ret
add
mov
sub
cmpsl
inc
cmp
adc
cmp
mov
push
xchg
negl
xchg
and
out
jmp
mov
dec
adc
jecxz
gs
add
inc
adc
fdivl
sub
inc
cli
imul
sub
jp
xor
stos
xor
leave
outsb
pop
dec
mov
jl
mov
hlt
aas
nop
dec
and
push
mov
lcall
test
mov
jge
fimuls
mov
mov
std
dec
out
shll
scas
adc
jecxz
loopne
jbe
pop
stc
xchg
add
mov
xchg
mov
pop
aaa
xchg
les
xchg
mov
pop
push
push
inc
lret
or
fyl2xp1
lock
outsl
addl
ret
inc
push
add
sub
and
out
lret
mov
int3
sbb
mov
push
negl
mov
cmp
cmp
ss
add
or
mov
add
das
les
loope
mov
cwtl
push
nop
push
repnz
ds
bound
xor
pop
mov
dec
mov
lods
adc
rcrb
loope
cwtl
fwait
inc
jge
in
lcall
mov
sub
std
and
pop
sub
mov
cmp
icebp
add
jbe
xor
mov
in
lea
pop
out
test
inc
pushf
lret
data16
inc
inc
imul
iret
cmp
mov
jle
daa
movsl
mov
movsl
int3
outsl
cltd
inc
sbb
mov
xchg
dec
adc
xlat
es
push
int
cmp
pop
inc
jns
test
and
mov
pop
sub
and
pop
fwait
mov
mov
loopne
sbb
dec
gs
mov
in
iret
mov
mov
mov
imul
fcoms
scas
ret
enter
loopne
sub
mov
out
test
rcll
xor
xchg
jae
sub
out
sbbl
into
addr16
jmp
lret
push
ss
dec
mov
adc
jbe
movsb
sbb
imul
ficompl
push
aad
je
pop
mov
lret
dec
sub
sar
adc
xchg
loop
sbb
cld
ret
lret
jmp
notb
jp
or
pop
das
imul
subb
into
rcll
aam
nop
mov
mov
jno
cli
mov
pop
cli
pop
pop
jle
fisttps
inc
add
arpl
pop
push
xor
sub
fadds
shrb
cwtl
adc
cmpsb
lret
lock
xchg
fdivrl
dec
inc
in
sbbb
cwtl
inc
sbb
inc
sbb
jnp
fstpt
imul
mov
movsb
shl
aad
xchg
fnstsw
pop
inc
push
sbb
mov
idiv
add
fwait
enter
pop
dec
ljmp
ds
mov
pop
notb
lds
fnsave
xor
inc
dec
cmc
adc
jb
dec
and
mov
jo
aad
loopne
mov
outsl
repnz
and
or
push
cwtl
js
outsl
aaa
dec
jns
les
xchg
lods
iret
in
fwait
pusha
cmp
push
subl
and
das
pop
mov
mov
inc
cmp
xchg
out
pop
sti
add
push
mov
cltd
in
outsb
or
fldenv
inc
mov
in
or
and
ret
mov
pop
fwait
popf
and
fisttps
sbb
sbb
xchg
int3
jl
xchg
fwait
inc
adc
mov
jecxz
or
sbb
cmpb
dec
jg
nop
or
add
jo
sbb
mov
hlt
pop
xchg
add
mov
fimuls
insl
ret
iret
inc
outsl
and
adc
sahf
and
shrb
inc
mov
cwtl
shll
orl
push
out
stc
sbb
xor
fs
xor
cltd
cwtl
outsl
out
nop
out
dec
cmp
xor
mov
jae
fsubrl
mov
pop
dec
call
data16
and
xor
xchg
jno
movsl
mov
dec
in
adc
push
and
pop
jmp
fwait
push
pandn
and
stos
pop
sarb
aam
mov
push
xor
imul
mov
xchg
jg
pop
xor
call
pop
aaa
insl
sub
out
int
and
fs
in
fwait
mov
xor
loopne
test
call
mov
mov
lods
lahf
daa
testb
push
dec
lods
xchg
inc
into
cmp
addr16
adc
jo
dec
stos
push
lcall
aaa
push
adc
sti
test
clc
jle
scas
int
cld
mov
mov
jae
jl
pop
mov
cld
inc
cld
fadd
scas
sbb
sub
pop
mov
mov
pop
seta
ss
push
inc
clc
add
pop
jne
lcall
cmp
cltd
push
fdivrl
jecxz
adc
ds
repz
lods
and
aad
call
stos
scas
add
jae
mov
fistpl
jp
js
jnp
clc
negl
inc
int3
in
xchg
clc
scas
leave
push
in
es
gs
dec
popf
pop
add
xor
rcrb
add
push
cmp
loope
lock
call
sub
mov
dec
mov
pushf
lret
pop
sbb
mov
addl
rcrb
lahf
fbld
cs
mov
enter
sti
dec
push
shl
ret
leave
xchg
mov
loope
cwtl
pop
sahf
or
test
sub
dec
sbb
scas
xor
stos
test
call
out
fdivrs
pop
inc
icebp
cmp
icebp
push
and
jmp
aam
leave
xchg
xchg
fidivrs
test
mov
movsb
pop
flds
fbstp
push
mov
pop
fcomps
xchg
sarl
data16
or
in
cmovns
lock
push
loope
mov
leave
rorl
xchg
mov
subb
dec
lret
out
std
add
and
dec
fwait
cwtl
push
dec
mov
mov
fdivrl
inc
cld
mov
jno
sbb
fldl
xor
jne
xchg
cmp
loopne
arpl
imul
int
icebp
test
xlat
lds
jmp
xchg
or
insb
adc
pop
pop
and
lcall
mov
insl
push
and
jne
insb
xchg
xor
xchg
xchg
mov
dec
data16
sub
inc
dec
jge
es
ljmp
cli
mov
lret
adc
cmp
pop
mov
mov
fldt
and
loope
cmp
aam
out
stos
sub
movsb
xor
inc
pop
xchg
xchg
into
inc
add
jmp
push
leave
repnz
clc
mov
cmp
repz
mov
test
cmp
pop
mov
pusha
add
cmp
shll
dec
mov
ss
or
add
gs
pop
or
jle
jae
stc
mov
icebp
or
popf
or
xchg
clc
inc
jno
ret
testl
les
sarb
test
sahf
jmp
xor
push
xchg
int
sti
int
in
js
dec
dec
cmp
cmpsl
jle
cmp
cmpsb
pushf
mov
add
inc
cmpsl
xchg
popf
sarl
inc
fldenv
adc
pusha
jl
pop
js
in
stc
and
or
inc
jl
das
stos
mov
scas
rcrl
inc
pop
pop
sbb
leave
insb
mov
mov
adcl
xchg
pop
loope
pop
es
int3
ss
aas
mov
test
test
mov
inc
arpl
into
fadds
cmp
xlat
sub
jae
adc
adc
lret
pop
in
lods
or
jne
mov
imul
lods
aad
cmp
inc
fwait
dec
ljmp
lea
push
movsb
int
mov
push
sub
leave
add
mov
flds
dec
adc
xor
scas
xor
daa
fisubs
out
add
or
std
pop
cltd
and
lahf
jge
outsb
mov
mov
jo
lods
xchg
test
and
pop
mov
inc
call
jp
inc
int3
enter
jmp
dec
mov
fcoml
or
stos
lret
dec
add
arpl
movsl
cmp
pop
push
mov
aad
je
xor
mov
shll
push
mov
adc
inc
push
pusha
test
leave
repnz
mov
adc
scas
je
pop
out
push
insl
inc
or
aam
sub
mov
fistps
xor
push
pop
cmp
add
ss
aad
and
adc
push
test
jmp
mov
test
ss
gs
shl
mov
ja
xchg
std
mov
xorl
sub
sub
pop
xchg
dec
xchg
sbb
stc
out
insb
dec
movsb
sahf
mov
pop
fisttps
pop
pop
adc
cmp
mov
addr16
sarl
loopne
jno
int3
jg
fmulp
and
mov
pop
shll
arpl
fists
imul
sbb
hlt
sub
pop
and
jnp
cmc
jge
mov
xchg
stc
push
or
or
jb
out
push
xor
sub
call
push
mov
xchg
in
cmp
lock
pop
fisttps
cmp
addr16
xchg
sub
push
mov
test
aaa
xchg
add
dec
sbb
lahf
outsb
add
jo
sbb
lods
xor
notl
push
lds
fs
or
add
mov
dec
jle
in
repz
iret
mov
je
push
fwait
fs
sti
pop
dec
lds
and
mov
push
jle
jne
fstl
cmp
inc
inc
orb
mov
lret
xor
push
inc
idivb
bound
arpl
ljmp
loope
sbbb
mov
and
data16
lcall
divb
sahf
inc
fwait
sub
sbb
or
cmp
xchg
or
jge
inc
movsb
cmp
mov
out
movsl
fldl
and
addl
add
push
sub
push
and
stos
fdivs
lret
arpl
in
mov
push
daa
mov
cmp
cmpsl
jp
jle
sub
dec
dec
fucomi
nop
inc
xchg
sbb
dec
test
movsl
cmc
ds
jns
jae
mov
jb
xchg
and
sbb
pop
sub
jbe
es
cmp
out
popa
and
flds
into
lahf
push
inc
test
pop
inc
in
mov
addl
pop
adc
push
push
jecxz
sahf
mov
fadd
cld
pop
jmp
dec
push
sbb
push
movsb
push
mov
out
jbe
sub
call
jmp
xchg
cmp
pop
lea
adc
les
insb
pop
mov
and
or
in
mov
add
mov
fbstp
in
in
outsb
pop
aaa
jo
dec
and
insb
pop
xchg
and
push
xchg
push
fistps
test
jns
fisubrl
in
jno
or
arpl
rcrb
out
adc
std
movsl
lea
inc
cs
je
inc
dec
xchg
fdiv
inc
mov
ficoml
sbbb
int
test
or
mov
add
add
push
ljmp
cmp
arpl
jne
outsl
loopne
sub
outsb
push
sbb
sbb
or
jne
inc
enter
add
fisubrs
pop
lock
mov
push
mov
insl
scas
cmpsb
adc
cmp
sbb
dec
jne
dec
shll
adc
xor
jmp
mov
cmpsl
or
mov
and
addr16
hlt
in
in
mov
mov
outsb
lahf
sub
push
outsl
popf
outsl
seta
sub
sbb
pop
jl
push
push
sbb
push
daa
insl
cwtl
in
js
insb
mov
jecxz
ret
xor
cmp
cmpsb
sub
mov
out
ljmp
jmp
xor
jp
nop
je
scas
cmp
cmp
daa
flds
rorl
inc
and
pop
cmp
and
imul
lods
lods
adc
and
or
mov
sbb
lcall
xchg
lods
jp
push
clc
push
cld
int3
push
daa
jmp
dec
fwait
pushf
push
xchg
pop
and
push
jne
inc
mov
fadds
ja
lcall
and
imul
mov
call
mov
and
adc
sub
in
out
inc
xor
add
dec
inc
mov
sbb
inc
and
shll
pop
lea
repz
out
fdivp
inc
stc
or
mov
or
mov
mov
loopne
out
xchg
xor
or
fs
mov
cmpsb
test
outsb
ret
mov
dec
leave
fdivrl
jg
xchg
jg
ret
dec
mov
mov
pop
mov
mov
out
inc
aas
sub
test
lret
sahf
sbb
gs
mov
popf
inc
sti
imul
mov
les
loopne
jnp
mov
mov
push
into
bound
sub
sbb
jge
cwtl
test
jns
xchg
test
push
aas
xchg
out
sub
jnp
dec
dec
xor
in
pop
stos
sbb
add
testl
jecxz
dec
enter
pop
lock
push
shll
ret
lods
subl
mov
hlt
enter
mov
mov
sub
adc
pop
test
jge
xchg
cmpsl
jbe
loop
js
xchg
imul
leave
popf
or
call
repnz
test
jge
outsb
dec
or
jae
and
add
call
fcmovne
mov
movb
ja
out
and
pop
data16
push
nop
adc
xor
fs
movb
xchg
aad
inc
cs
rolb
push
out
test
and
int3
cmc
iret
xor
or
mov
jnp
mov
mov
ss
movsl
xchg
add
and
aaa
sub
pop
aaa
leave
jnp
pop
mov
flds
push
sahf
icebp
adc
pop
xchg
adc
jge
orb
gs
adc
dec
mov
sbb
das
mov
lds
mov
inc
lods
cmp
lahf
incb
push
aam
push
mov
and
fsubr
aad
or
lcall
idivl
leave
iret
ljmp
stos
dec
jbe
mov
xor
aam
inc
mov
arpl
arpl
gs
je
faddl
cmp
adc
mov
adc
jmp
push
adc
mov
or
outsb
out
lcall
jbe
std
or
sbb
movsb
shrb
mov
xor
neg
loop
jne
iret
dec
out
nop
xor
dec
cmpsl
cli
or
adc
pushf
cltd
movsl
mov
jno
sbb
mov
ss
scas
xor
mov
js
mov
shrl
sub
cld
push
lods
or
cmp
ds
xchg
pushf
data16
ret
mov
and
mov
or
cmpsb
pop
add
enter
gs
dec
or
scas
mov
mov
sbb
iret
push
pop
cmp
mov
mov
or
adc
fcom
shr
je
out
std
inc
and
adc
mov
xor
outsb
jae
jns
shrb
dec
lods
repz
jb
lock
into
jle
fmul
out
jecxz
cmp
inc
cmp
pop
das
adc
mov
xchg
jl
sbbl
push
xchg
jno
rcrb
test
jno
aaa
pop
push
adcl
out
xor
inc
inc
dec
mov
push
subb
fwait
loopne
pop
mov
je
repz
mov
xor
int
es
inc
mov
xchg
jmp
in
bnd
lret
push
mov
mov
or
dec
jle
push
test
shll
daa
adc
nop
xor
add
xchg
pop
mov
xchg
cwtl
mov
fistl
fisttpll
sbb
jns
into
pop
jmp
int3
adc
popf
inc
jp
inc
fnstenv
inc
dec
push
sbb
mov
in
adc
lcall
push
add
loop
ret
lods
fwait
repnz
int3
pop
mov
lcall
and
add
xor
insb
mov
xchg
dec
std
fldl
mov
push
jae
xor
jnp
xchg
sbb
daa
jmp
sbb
xor
dec
cmpsl
jnp
mov
xor
pop
mov
pop
popa
jne
stos
mov
cld
sub
or
movb
data16
fidivrl
mov
aas
scas
je
test
xchg
pop
sub
or
sbb
dec
or
adc
add
mov
aas
mov
xor
mov
test
pop
push
xchg
sub
testb
jb
pop
cwtl
fs
cmc
test
popf
aas
or
push
rorb
imul
push
or
push
imul
in
out
mov
das
clc
rclb
push
shrl
mov
push
adc
es
mov
icebp
xlat
push
xchg
mov
mov
jns
lods
adc
int3
addps
push
hlt
xchg
jnp
mov
xchg
xor
dec
dec
or
jbe
mov
mov
lods
rcll
push
jle
ret
pop
test
ja
jb
pop
inc
pushf
add
xchg
cmp
cmc
fistl
jecxz
add
repnz
nop
mov
scas
mov
add
notb
pop
repnz
mov
jo
xchg
jecxz
arpl
adc
test
pushf
inc
addr16
out
shrl
push
inc
jns
mulb
and
scas
fs
lea
ret
sbb
lret
mov
sbb
cmc
xlat
imulb
insb
aaa
or
call
mov
sbb
add
or
call
sub
leave
clc
cmpsb
add
incl
in
fs
in
testb
in
aas
or
xchg
jle
scas
rolb
push
xchg
je
stos
mov
and
jbe
xchg
hlt
jge
scas
mov
std
sbb
call
jecxz
and
xchg
mov
aad
jg
mov
mov
push
cmp
mov
js
ficoms
std
cs
jg
xor
clc
fisubrl
mov
fcoml
mov
push
jmp
mov
or
testl
cmpb
add
fwait
and
and
lods
iret
push
popa
nop
pop
jno
pop
mov
fadds
test
cmp
repz
jb
cwtl
fs
or
iret
sbb
sbb
xchg
or
scas
mov
insl
nop
icebp
js
stc
stos
mov
mov
cmp
mov
jmp
in
cli
into
in
test
jp
mov
push
pop
push
and
cmpsl
ja
xchg
imul
test
mov
mov
inc
movsl
pop
or
xchg
inc
xchg
leave
lods
xchg
adc
cmp
cld
cmpsl
jbe
push
sbb
pop
or
test
popf
jns
nop
and
dec
xlat
push
mov
adc
sub
push
mov
cli
in
fistps
and
mov
cli
dec
mov
mov
jno
lcall
sahf
mov
jmp
push
jb
and
inc
mov
bound
mov
in
sbb
or
mov
jmp
inc
dec
shll
jle
cli
pop
dec
pop
mov
in
xor
orb
enter
jno
add
fmuls
out
aaa
cmp
std
dec
sbb
aas
cmpsl
loope
addb
mov
push
repz
adc
jge
out
xchg
fstps
imul
inc
fstpl
dec
adc
dec
or
dec
jle
out
in
mov
xor
fisttps
inc
mov
push
add
ficompl
push
sub
lock
adc
lret
or
aam
rcrl
imul
testl
inc
jmp
cld
cmp
lds
cmp
sub
into
or
mov
out
cld
cld
inc
sub
or
loope
pop
and
dec
push
imul
into
jl
mov
int
pop
mov
mov
and
mov
or
sbb
sub
pop
ljmp
push
pop
or
sbb
mov
icebp
test
test
inc
jne
jmp
xchg
add
xchg
js
xor
pop
and
mov
push
inc
std
sahf
xor
inc
mov
jg
outsl
dec
scas
stc
outsl
gs
lods
inc
adc
or
sahf
dec
inc
jo
dec
clc
mov
cltd
mov
mov
enter
gs
cmp
movsb
push
out
bound
jle
pop
xchg
inc
push
sbb
aad
cmp
not
leave
lods
test
jp
cmp
aad
popa
iret
fnstenv
enter
fsubrl
or
jnp
in
rorb
movsb
and
inc
mov
lods
je
jmp
or
push
add
xchg
dec
pop
lds
out
das
add
fistpl
cmp
ss
scas
or
push
pop
sbb
lahf
add
notl
add
push
int3
addr16
fdivr
mov
ret
adc
mov
daa
and
iret
cmp
dec
ja
imul
push
fbld
inc
push
dec
loope
test
mov
fistpll
ss
cmp
lcall
dec
mov
push
push
fdivr
sbb
ljmp
mov
pop
add
jecxz
rorb
testl
pop
lret
arpl
mov
out
jns
fldcw
inc
loop
mul
or
fwait
sub
or
sbb
pop
mov
dec
neg
pop
lods
xchg
and
inc
aaa
icebp
insl
fdivrs
fs
les
push
into
adc
loopne
add
pusha
sub
cs
mov
testb
repz
add
iret
mov
shrl
push
outsl
stos
mov
mov
add
outsb
insb
mov
jge
pop
enter
dec
mov
jge
sub
mov
add
rclb
sub
or
add
test
xchg
or
mov
or
stos
ret
fisttpll
fwait
dec
mov
fnstenv
pop
fcoml
push
insl
test
jb
rcr
xor
cltd
movsb
push
dec
and
dec
jns
fisubrs
inc
push
sub
push
mov
pushf
pop
nop
shl
inc
pop
inc
mov
xor
mov
cmpsl
add
adc
insb
pop
dec
sarb
jb
and
fcos
and
lock
dec
mov
cli
mov
mov
scas
andl
call
daa
por
lods
lock
shlb
push
les
icebp
add
loopne
fisubrs
push
idivl
cwtl
hlt
aaa
inc
in
mov
sub
mov
dec
adc
xchg
mov
or
hlt
dec
insl
shrl
daa
sub
jae
in
sub
mov
jp
out
mov
addr16
jp
ret
pop
pusha
imul
xor
pop
add
push
jecxz
test
cmc
mov
test
fs
es
mov
out
test
loopne
adc
and
cmp
and
push
or
rolb
sbb
jne
pusha
outsl
xor
mov
and
mov
test
mov
negb
push
mov
jns
mov
ret
and
int
mov
jae
nop
mov
mov
addl
adc
lock
iret
addb
sub
sub
aad
sbb
scas
imul
inc
vpaddb
inc
push
lods
not
mov
das
mov
cmp
stos
push
and
jb
test
repz
cmp
icebp
mov
int
flds
rcrl
jmp
and
push
je
xchg
mov
xchg
scas
and
mov
ljmp
adc
xchg
jp
cmpsb
fcmovu
or
lahf
lock
push
sub
out
aad
addl
imul
stos
fimuls
sbb
out
loop
push
xor
cs
cld
test
das
xchg
mov
lock
sahf
mov
sarb
cwtl
mov
fnsave
mov
or
and
fdivl
push
jno
add
fldcw
ficoml
insb
iret
fldenv
fdivl
mov
hlt
cmp
fstl
scas
adc
adc
hlt
repz
mov
jb
cmp
adc
stos
adc
pop
xchg
and
sbb
cmp
ljmp
test
imul
jle
mov
flds
sbb
or
sti
push
pop
xor
jo
mov
hlt
cmp
ficomps
push
cmp
mov
mov
clc
xlat
push
nop
ds
mov
out
rcrb
mov
jecxz
add
xchg
shrb
inc
mov
push
or
sub
adc
je
packsswb
jl
and
sbb
mov
cmc
lcall
rolb
push
sarb
pop
fwait
sbb
data16
and
loop
stos
add
test
cli
mov
pop
and
cmp
sbb
js
xchg
sbb
enter
test
sub
fiaddl
add
sarl
les
lret
sub
call
int
or
addl
out
ljmp
mov
hlt
in
jb
sbb
sub
icebp
lret
xor
inc
ss
shl
mov
aas
mov
clc
into
xchg
xchg
fnstsw
cmp
das
sbb
cwtl
and
jne
pop
xchg
push
imull
adc
push
jge
pop
out
jg
sbb
inc
std
jp
cmp
stos
mov
in
orl
das
jl
lret
inc
int3
dec
xor
adc
or
pop
sub
lret
push
dec
adc
mov
pop
mov
sbb
hlt
and
sbb
leave
xchg
sbb
sbb
imul
sti
pop
mov
mov
dec
in
sbb
push
mov
leave
repnz
arpl
das
mov
push
arpl
xchg
adc
sub
out
push
clc
aas
pop
jmp
fsubrp
cli
xorb
in
rorl
push
or
fld
pop
pop
pop
clc
clc
dec
fstp
and
or
jmp
frstpm(287
adc
mov
sar
cmc
mov
pop
test
xor
clc
mov
cs
add
pop
pop
add
test
mov
imul
mov
inc
xor
xchg
xchg
mov
cld
fldl
mov
mov
pop
out
and
add
mov
scas
jns
mov
test
lahf
push
xchg
fsts
jnp
pop
pop
pop
ljmp
pop
icebp
mov
inc
imul
subb
stos
cs
test
fs
scas
push
cmp
jg
ret
xor
mov
jnp
in
push
nop
enter
mov
ja
stos
outsb
rolb
mov
sub
xchg
fwait
sbb
xchg
cmp
lmsw
xchg
push
lcall
pop
fildll
push
in
and
mov
inc
adc
gs
sbb
decb
xchg
pushf
adc
pop
in
push
mov
pop
in
push
insl
xchg
cli
pop
cmp
lahf
sub
inc
push
add
cltd
push
testb
fs
repnz
fs
aaa
aad
jmp
leave
sub
jne
imul
sub
in
dec
je
or
xchg
pushw
sbb
ss
xchg
lret
jo
ret
sub
mov
mov
mov
sub
mov
and
stos
cmp
dec
mov
push
push
push
fisubs
mov
dec
push
ljmp
xchg
fisttps
xchg
fnstcw
sub
scas
sub
idivb
push
negb
dec
fadds
pop
sub
push
insb
int
sbb
inc
call
cmp
dec
movsb
dec
push
out
pop
mov
sub
cwtl
stc
divb
add
repnz
into
dec
dec
mov
test
lret
add
fdivs
ja
dec
clts
xor
inc
lret
dec
sub
in
stos
jge
cmp
bound
aad
ja
outsb
pop
push
inc
rorl
inc
daa
aam
leave
xchg
adc
pop
adc
aaa
mov
adc
rorb
add
xchg
xchg
daa
mov
das
arpl
sub
mov
fwait
and
inc
fmuls
push
mov
in
xchg
dec
pop
movsb
mov
call
scas
aam
mov
insb
pop
aad
clc
jp
xor
negb
sbbb
cwtl
mov
mov
jbe
loope
add
jne
cmp
imul
jns
sbb
sbb
pop
or
add
add
inc
cmc
nop
fs
add
dec
push
test
loope
push
daa
push
or
push
dec
test
inc
fdivs
dec
jns
outsl
leave
xchg
add
add
clc
aam
add
xlat
ja
out
pop
icebp
cmc
jg,pn
data16
xchg
les
je
pusha
inc
sbb
push
lock
push
sbb
ds
sbb
jbe
dec
sbb
fwait
shll
push
call
repnz
iret
out
sbb
mov
and
mov
mov
and
scas
popa
rcll
cs
shlb
pop
int
sbb
mov
cmp
xor
lcall
fwait
or
jge
jl
stc
cwtl
pop
filds
pop
popf
push
jp
mov
nop
inc
pop
shll
outsl
out
jp
inc
jp
or
clc
adc
fwait
push
xchg
lods
xlat
cmp
jo
mov
mov
xchg
or
dec
lods
test
sub
xchg
or
fsubrl
mov
test
inc
popf
cmp
cmp
into
mov
shlb
jnp
pop
sbb
pop
pop
stos
rcrb
shlb
jae
inc
mov
repnz
repz
aad
fdivl
loop
vmovntps
xchg
sbb
js
mov
or
ja
popa
lods
and
scas
cmp
aam
and
jmp
push
pop
pop
and
jecxz
inc
jg
push
aas
insb
loope
stos
mov
subb
cmovl
inc
jno
popa
daa
dec
int3
sbb
pop
push
dec
out
insl
mov
rorl
mov
mov
xor
adc
test
aam
fstl
jns
mov
mov
repz
inc
mov
je
nop
mov
fcmovnu
repz
mov
xchg
cwtl
pusha
lods
jo
xchg
bound
and
jmp
jo
dec
out
stos
jne
mov
cmp
lock
or
ret
inc
push
testb
es
sbb
fcoml
xchg
adc
lret
test
mov
and
push
sti
jno
stos
outsl
or
adc
or
stos
cs
dec
sub
lods
mov
mov
inc
shll
stos
xor
ja
push
xor
js
aaa
outsl
jnp
add
pop
mov
cmp
nop
adc
fs
mov
jo
mov
push
cmpsl
repz
es
repz
fidivrs
test
into
or
imul
cmp
dec
shrl
or
insb
mov
out
repz
mov
mov
sti
mov
loop
jo
icebp
loop
aam
in
into
hlt
add
and
adcb
cmp
aas
stos
sub
mov
push
bound
or
lret
jnp
leave
jae
data16
out
stos
mov
stos
xchg
cs
addr16
mov
pop
lods
popw
ret
pop
pushf
stos
and
and
pushf
repz
add
jns
mov
scas
and
repnz
push
cmp
divb
leave
cmpsb
cli
out
movsb
mov
inc
mov
lcall
xchg
enter
mov
and
ja
ljmp
dec
pop
outsb
mov
fs
sbb
bound
xlat
int3
pop
insb
cmp
and
push
pushf
add
dec
aaa
xor
xor
jecxz
jns
mov
nop
hlt
sub
outsb
mov
ja
js
stc
bswap
std
aaa
xor
and
or
imul
lods
stos
push
pushl
test
add
pop
mov
cltd
int
xor
push
dec
ljmp
add
daa
jae
jnp
mov
inc
adc
fidivrs
outsb
shlb
jne
fsubs
ja
sub
leave
mov
xchg
stos
aas
movsl
mov
mov
mov
pop
rcll
outsb
and
jge
daa
in
pusha
lahf
xor
sbbl
push
cmpsb
sbb
sbb
dec
push
jmp
scas
cmc
cmp
mov
mov
pop
shrb
ljmp
pushf
mov
mov
inc
push
outsl
ret
xor
insb
mov
xor
addb
mov
lods
in
aas
add
pop
dec
cltd
sub
mov
lret
add
sbb
xor
fld
shlb
imul
push
mov
repz
jmp
ds
or
flds
rclb
sbb
dec
mov
into
sub
xor
test
add
leave
cmpsl
insl
leave
cwtl
cmc
pop
pop
aas
insl
push
cmp
sub
sub
insb
lret
or
dec
iret
int3
pop
cmp
aad
fs
or
fld
jge
add
ljmp
inc
push
or
mov
jmp
jmp
lea
pop
pop
nop
fs
popf
dec
hlt
jns
sub
mov
jnp
inc
lods
add
jg
fisubrl
pop
call
out
scas
into
icebp
sub
fnstsw
sub
push
jo
das
je
je
enter
xchg
ss
insl
stos
das
js
mov
lret
mov
outsl
push
or
push
int
ret
jbe
mov
cmp
push
movb
jb
test
aad
aam
push
or
aas
sbb
popl
lahf
pop
movsb
sbb
dec
in
sahf
mov
outsb
xchg
inc
enter
jb
pop
adc
int
test
adc
sub
lea
dec
pop
dec
pop
clc
inc
inc
mov
int
pusha
mov
and
xor
leave
xchg
sub
push
mov
mov
daa
inc
out
bound
mov
jl
dec
stc
dec
sub
insl
dec
xor
aad
cmp
popf
enter
sbb
je
shlb
movb
xlat
sub
adc
ret
mov
call
mov
mov
cmp
aas
test
faddl
mov
dec
lods
or
stos
push
call
ret
mulb
dec
push
xchg
adc
pop
mov
insb
in
int3
mov
jl
lock
adc
push
xor
in
addb
int
inc
ret
hlt
push
sarb
lret
lds
adc
and
mov
pop
or
jmp
ret
das
pop
sbb
mov
jl
and
dec
stos
out
sbb
pop
sbbl
pop
cmp
adc
mov
xor
xor
add
stos
dec
lea
addr16
mov
enter
outsb
fsubl
xchg
and
xor
adc
mov
push
sti
mulb
jno
lds
cmp
fsubp
or
jno
mov
pop
cmpsb
push
xlat
rclb
arpl
das
scas
dec
push
insb
xlat
mov
or
jl
bound
xchg
mov
and
sub
mov
jge
leave
sbb
pusha
inc
fstpt
or
sub
testl
pop
pop
pop
pusha
mov
hlt
xchg
adc
inc
mov
push
popa
adc
inc
mov
cmp
aad
icebp
repz
negl
inc
lret
sbb
xor
lahf
hlt
out
cmp
jbe
and
sbb
xor
push
cltd
mov
stc
aam
mov
and
push
outsl
xor
data16
shlb
lock
out
pop
push
mov
movsl
inc
jp
push
mov
lahf
push
into
rcll
gs
xchg
int
add
movsl
gs
fists
fnsave
xchg
sub
mov
outsb
xchg
pop
loopne
fsub
lcall
fadd
cmp
imul
xor
xchg
into
dec
mov
mov
and
out
mov
mov
and
stc
bound
xor
xchg
test
pop
sub
loopne
inc
jne
xchg
adc
cli
loop
shlb
pushf
int3
hlt
popa
lahf
jne
push
jmp
lea
pop
test
xor
repnz
test
pushf
and
lret
icebp
sbb
aam
je
mov
ss
stos
jnp
pop
iret
cmp
inc
jle
maxps
imul
xor
fstpl
add
in
jne
and
jne
enter
nop
test
jle
xchg
sub
leave
loopne
push
loop
popf
mov
icebp
jb
mov
mov
lods
jmp
adc
and
xchg
pop
into
ret
inc
add
movsl
movsl
fdivr
push
mov
adc
incl
es
mov
rol
je
addr16
movsb
test
inc
dec
mov
mov
sub
shlb
xchg
mov
and
out
fistpll
nop
cs
loop
in
inc
fcoms
enter
icebp
sub
mov
out
out
adc
push
ffree
stos
cbtw
popa
insl
jmp
fcoms
ret
push
insl
in
adc
dec
pop
pop
adc
jns
push
lret
out
xor
mov
and
add
cmp
rolb
lea
cltd
clc
xlat
xor
movsb
jge
adc
sbb
ret
mov
mov
negl
loop
aam
dec
xor
mov
imul
ja
mov
xor
cmp
cmpsb
fs
add
cli
js
stos
adc
data16
lcall
mov
sarl
pop
rclb
and
scas
cmpsb
jmp
cmp
cltd
jae
pop
or
and
insl
gs
and
inc
imulb
xor
dec
push
add
mov
clc
and
cmp
push
stc
ds
rcrb
in
sub
mov
test
xorl
sub
adc
xchg
pop
pop
xor
stos
pushf
jp
dec
xor
push
repnz
jmp
test
fidivs
pop
pusha
bound
dec
mov
sti
aad
arpl
mov
lahf
movsl
lods
call
ficompl
shl
icebp
ficomps
sbb
push
inc
pusha
jbe
adc
sbb
les
test
push
fnstsw
scas
cmc
bound
pop
and
or
es
mov
jmp
cltd
mov
lock
jp
xor
mov
adc
mov
mov
lods
xor
aam
mov
andb
mov
jle
pop
sbb
add
xor
add
xchg
lods
sbb
push
mov
jno
les
cmp
dec
jae
mov
pop
mov
pop
jmp
repnz
sbb
lahf
pushf
cs
test
in
add
aam
xchg
movsb
push
push
rol
std
ficoml
dec
cmp
cmp
mov
aam
repz
fcomi
mov
shlb
sbb
aam
cmp
pop
gs
add
add
cmpsl
addr16
mov
bnd
mov
sub
sbb
data16
movsb
dec
mov
jno
outsl
pop
add
ja
push
leave
jns
mov
repnz
movsb
inc
pop
js
imul
imul
hlt
mov
imul
orl
or
sbb
xor
rcrb
xchg
jp
mov
scas
sahf
or
push
mov
inc
push
mov
pusha
sub
sub
out
dec
bound
je
lock
fsubs
inc
sub
jbe
pusha
mov
sub
fbstp
aaa
pop
sub
dec
dec
stos
adc
mov
inc
call
sbb
and
into
lret
push
insb
sub
xlat
cmp
mov
fsts
aam
jge
js
mov
mov
popa
or
xlat
cwtl
mov
sbb
test
push
test
jne
inc
mov
es
scas
pop
mov
xchg
mov
and
scas
fldpi
cltd
or
mov
stos
push
scas
push
jo
inc
lea
sti
add
and
movsb
xor
in
mov
loope
scas
sbb
or
mov
cltd
inc
push
jns
aas
arpl
xchg
out
iret
xchg
call
xchg
mov
dec
cmp
pop
scas
adc
adc
jae
mov
enter
fwait
popa
gs
xor
mov
add
cmpsl
pop
into
adc
add
outsb
or
addl
or
cltd
cmpsb
aaa
mov
lock
jne
subl
mov
fimull
pop
js
xor
inc
lcall
and
ss
and
sarb
inc
mov
addr16
or
test
std
in
pop
lea
pop
pop
hlt
test
pushf
pop
cltd
mov
icebp
sbb
push
sahf
imul
lds
jae
jo
out
inc
sbb
ja
ds
cmpsl
mov
push
xchg
push
cmp
sbb
sub
push
out
out
insl
adc
iret
popa
cli
jo
xchg
xlat
cmp
prefetch
sub
push
sti
mov
clc
pop
add
sub
xor
sahf
clc
leave
aad
fisubs
stos
in
mov
and
mov
push
sbb
call
leave
adc
cmc
or
push
shl
and
xor
xor
sti
nop
push
push
std
in
test
dec
mov
lret
orb
imulb
xchg
mov
cmp
adc
jmp
pop
jns
addr16
rcl
jmp
jmp
hlt
mov
cwtl
subl
mov
mov
xor
and
or
mov
or
lret
lods
out
cmp
cmp
add
push
dec
popa
sahf
push
mov
mov
out
jb
scas
rep
jle
sbb
loope
cmp
xchg
leave
xor
xor
xchg
rol
mov
imul
mov
adc
jg
cmp
decl
jl
inc
mov
loop
inc
push
ret
stc
test
or
mov
mov
dec
adc
repz
mov
xchg
jns
idiv
xchg
rclb
lret
and
or
mov
or
mov
test
sub
mov
daa
mov
ss
fnstcw
mov
iret
in
pop
mov
and
mov
jo
leave
mov
arpl
mov
sbbb
call
pop
rolb
add
mov
or
cs
sarb
nop
mov
lods
ja
xor
nop
mov
movsl
pushf
cmp
ret
lret
sbb
leave
insb
xchg
xlat
xchg
sub
xor
jp
and
into
test
xlat
push
jb
call
pop
jns
sub
inc
loope
push
cmp
pop
push
xchg
ret
jge
push
iret
fadds
jnp
dec
cmp
dec
cli
insl
and
or
adc
jecxz
xor
push
xor
fldenv
mov
mov
orl
scas
push
in
jmp
xor
push
or
xchg
cld
push
stc
out
fsubp
xchg
jl
pop
pop
shl
inc
or
out
mov
sbb
xchg
fldenv
test
sbb
movsl
xor
call
jecxz
push
push
pop
inc
inc
test
rcrl
mov
adc
pop
jns
pusha
out
xchg
test
inc
test
rorl
ljmp
nop
repz
rolb
add
sub
xchg
sub
std
test
adc
fwait
mov
fidivl
dec
pusha
mov
hlt
dec
mov
ljmp
sub
loope
xchg
mull
imul
call
sub
int3
sbb
aad
xchg
sti
outsb
cld
imul
cmc
mov
inc
push
push
lcall
aas
inc
and
popa
cmp
nop
inc
aaa
jne
test
pop
dec
pushf
in
dec
mov
test
test
ret
jmp
and
adc
lcall
repnz
dec
cmp
push
das
cmp
and
jge
adc
test
daa
pop
xchg
addr16
out
lock
je
mov
cld
xor
push
fidivs
xor
jb
add
add
push
push
adc
mov
and
int3
fdivrs
jmp
hlt
jl
call
icebp
jle
insl
sti
push
ljmp
aam
test
movsb
ljmp
or
test
add
inc
jl
push
sub
mov
js
inc
mov
jno
adc
add
push
adc
scas
pop
or
pop
add
pop
cmpl
adc
push
or
sbb
cli
ss
xchg
in
xor
and
push
jge
orb
cmp
ror
fcmovbe
out
out
adc
mov
sbb
pop
mov
push
sti
xor
sbb
popa
jle
insl
xchg
bound
cmpsl
mov
sbb
mov
stos
sti
inc
outsb
sbb
int3
pop
or
test
popf
jae
xor
jb
ljmp
mov
aad
xchg
mov
ret
jle
cmp
cmp
cmp
das
filds
mov
int3
outsb
shrl
adc
mov
mov
cmp
xor
pushf
cltd
sbb
scas
push
push
inc
add
lods
cmp
cli
mov
je
inc
dec
and
lahf
lahf
rorl
les
lret
mov
lods
aaa
fs
nop
adc
dec
add
cmp
ret
cmp
xchg
aam
dec
dec
xor
mov
push
gs
dec
rclb
call
icebp
mov
data16
stc
pop
shrb
xchg
xchg
sub
or
sub
push
sarb
inc
imul
fistpl
cli
test
out
mov
adc
pop
daa
jmp
rolb
pop
sub
and
pop
inc
lods
xor
jl
gs
push
mov
xchg
aad
pop
sbb
lret
test
and
gs
sbb
push
data16
fistpll
imul
and
add
and
daa
and
or
insb
mov
adc
repz
clc
outsb
cmpl
test
mov
xchg
pop
pop
mov
and
jg
jb
inc
es
mov
loopne
sub
pop
mov
mov
das
and
cmp
or
inc
mov
fsubrs
test
jne
loope
lahf
sahf
inc
add
mov
push
out
or
cwtl
cmp
int3
inc
jg
test
mov
dec
xor
rorl
test
pop
dec
xor
sbb
pop
and
lret
cmpsl
push
lods
aaa
pushf
mov
mov
mov
test
jne
flds
loope
filds
jecxz
cwtl
mov
in
aam
cmp
gs
pop
push
loop
lds
fldl
jno
fsubrl
add
cmp
and
nop
loop
mov
inc
sbb
pop
sbb
mov
cmp
jno
jl
jbe
jo
dec
ret
push
fisubs
jle
nop
pop
roll
lods
adc
xor
iret
pop
cmpsb
sub
sbb
xchg
jmp
movsl
pop
sub
imul
les
and
inc
shr
arpl
cmp
and
ret
leave
and
daa
sbb
aaa
mov
pop
add
insl
push
mov
aam
ljmp
or
dec
mov
jae
adc
loopne
mov
lcall
lods
jge
sti
loop
mov
lret
inc
movsb
pop
aaa
mov
in
mov
cltd
in
fidivrs
push
push
xchg
pop
nop
push
jns
sub
andb
mov
inc
dec
in
pusha
iret
iret
xchg
push
divps
aas
push
mov
push
and
push
xor
mov
fwait
xchg
cmpsl
iret
bound
xchg
pop
pusha
popf
pop
jne
jne
mov
inc
int3
nop
dec
xchg
repz
mov
jmp
xor
aam
mov
dec
jp
mov
cs
mov
ret
or
test
and
les
dec
add
das
inc
shlb
movsl
mov
rcr
inc
dec
imul
push
stos
lods
jne
scas
adc
push
std
inc
jp
mov
xchg
shlb
gs
pop
negb
dec
aaa
stc
pop
pcmpgtw
xor
pop
xor
loopne
jl
out
sbbb
and
mov
or
repz
mov
ret
jne
rcrb
rcl
sub
pop
sub
cmp
dec
jo
mov
and
inc
decl
popa
lods
repnz
push
inc
sub
jl
data16
xchg
cmpsb
or
sbb
dec
sbb
add
movsl
xchg
loop
pushf
xchg
imul
sbb
sub
mov
dec
scas
cmp
insb
pop
pop
movsb
adc
or
lea
fstpl
fistpl
jbe
out
sub
inc
push
pop
mov
and
add
mov
xchg
mov
adc
sub
mov
inc
addr16
cmpsb
dec
inc
xor
jae
out
mov
and
int3
or
jp
adc
sub
popw
xlat
sub
daa
push
daa
pop
pusha
fs
mov
dec
ljmp
cmpl
cmp
int3
stos
dec
xchg
and
in
insl
scas
nop
ret
lock
std
iret
xchg
mov
pop
outsb
mov
addl
pushf
xlat
inc
adc
fs
scas
fld
addr16
adc
mov
cmp
and
lods
push
out
stc
jle
clc
ljmp
jge
push
test
setb
in
pop
shll
aad
enter
int
cmp
inc
std
inc
adc
sub
sbb
jmp
xor
in
sbb
shlb
dec
lods
sbb
fs
rcrb
mov
in
outsl
test
adcl
push
loop
mov
out
or
mov
sbb
aam
loop
pusha
ss
add
or
adc
add
cmpsl
sbb
rcll
mov
push
rorb
dec
push
faddl
cmpl
icebp
ret
orb
cltd
or
clc
cld
mov
ffree
jp
fs
insl
jg
dec
push
adc
mov
sbbl
aad
mov
lahf
int3
popf
sub
mov
mov
test
leave
in
lods
in
insb
out
dec
addr16
dec
pop
ljmp
ret
mov
xchg
cs
xor
xor
lods
repnz
shlb
int
sbb
enter
xchg
mov
stos
add
jmp
rclb
cmp
xchg
mov
pop
adc
cmp
xchg
std
scas
xlat
and
movsl
xor
mov
bound
repnz
aad
mov
lods
push
jmp
mov
xchg
mov
lea
scas
dec
mov
notl
or
mov
insl
dec
fcmovne
or
sbb
pop
sbb
mov
pop
shr
push
mov
sub
hlt
push
jbe
idivl
incl
xlat
bound
push
imul
lea
fdivrl
aam
cwtl
orb
and
shll
dec
mov
sbb
je
nop
sbb
and
ror
icebp
and
xor
adc
outsb
int3
jecxz
push
stos
add
pop
xchg
call
clc
fdivrs
dec
push
lret
mov
mov
jbe
sbb
dec
adc
jp
filds
test
cs
push
xchg
mov
push
cltd
add
dec
shrl
gs
roll
cmp
out
and
sub
test
jns
fsubs
or
outsb
mov
jle
iret
jbe
xlat
push
jp
jae
dec
popf
xchg
xchg
stos
leave
std
or
lahf
insb
mov
lds
decb
xchg
inc
inc
cmp
cmpsl
lock
pop
inc
jbe
test
loopne
dec
gs
jbe
cld
cltd
pop
in
adc
jae
and
xor
je
inc
sti
divl
enter
add
mov
je
add
jg
adc
mov
mov
and
jl
pop
aaa
std
insl
stos
popa
insb
scas
jle
lds
sub
xor
fstl
fs
xchg
nop
shll
lret
nop
aam
mov
test
pushf
adc
cmp
fmul
test
shr
and
popa
out
xchg
outsl
xchg
or
das
dec
loopw
jb
lds
in
xchg
xor
jecxz
adc
push
movsl
mov
int3
int3
jno
mov
add
and
inc
xchg
fcoms
xchg
or
push
mov
leave
sbb
fistpl
ret
adc
push
out
xchg
mov
sbb
push
and
push
jg
add
mov
dec
inc
bound
insb
pop
mov
outsb
in
adc
fmull
sub
cmpsb
icebp
xor
xor
pushf
pop
mov
xchg
jmp
xchg
mov
xor
jbe
xchg
roll
fs
andb
jb
sbb
and
add
cmp
add
jmp
inc
arpl
cmp
adc
sub
mov
cmp
xlat
aam
sub
mov
mov
mov
mov
jo
xor
xchg
dec
cli
or
inc
and
popf
pop
movsb
js
mov
shlb
std
mov
dec
sub
jle
in
pushf
sti
mov
jl
addr16
lea
xor
hlt
fdivl
dec
scas
jo
es
dec
xor
movsb
lcall
ljmp
movsb
cli
pop
dec
jo
xorb
rcll
sbb
inc
push
loop
sbb
or
add
jne
sub
div
xor
cmpsb
std
mov
mov
dec
sub
lahf
icebp
pushf
repz
jne
rorl
shll
pop
or
mov
pop
sahf
sub
outsb
out
imul
and
sbb
arpl
lods
aaa
pop
outsl
arpl
pop
adc
jo
enter
movl
sub
in
int3
or
pop
inc
into
jno
mov
xlat
insb
sbb
sub
pop
pop
xor
shl
xor
popf
in
add
push
pop
scas
shrl
pop
jae
cld
stos
test
sbb
sbb
mov
cmp
pop
xorb
dec
inc
jl
or
adc
mov
mov
inc
cmpsb
add
loopne
jb
cmp
mov
jno
sub
fwait
loopne
push
xchg
mov
adc
mov
adcl
mov
inc
pop
outsl
fisubrs
addr16
adc
or
icebp
jmp
sbb
xchg
jno
jg
push
pop
cld
sarb
dec
ret
sub
xchg
sbb
jmp
or
idivb
adc
ret
xchg
scas
bound
xchg
out
lret
ljmp
cwtl
loopne
mov
iret
push
cmp
mul
lcall
aam
notl
mov
sahf
dec
add
and
push
hlt
leave
and
push
pop
movsb
jnp
cmp
fisttpll
push
sub
sub
jl
sub
popa
mov
pop
es
inc
sub
lahf
cmp
daa
out
es
push
ret
or
stc
mov
adc
jge
fidivrl
popf
stc
push
sub
or
out
jge
and
rcl
push
xor
xchg
aaa
out
outsb
leave
add
dec
test
mov
scas
int
xchg
push
sbb
mov
jecxz
pop
jp
add
shl
shrb
mov
sbb
mov
out
push
lods
push
push
fdivrl
in
lahf
dec
ret
mov
jecxz
jle
or
nop
pop
or
xchg
test
call
jb
jl
lret
push
pop
sub
outsb
mov
xchg
shrb
into
lock
or
and
xchg
pushf
ja
inc
int
sahf
sbb
and
cli
adc
cmpsl
jb
pop
mov
sub
mov
sbb
jmp
adc
xor
test
popa
lods
inc
adc
iret
std
xchg
xchg
fisubl
push
out
push
cwtl
jbe
hlt
ds
addl
cs
adc
jl
dec
loope
orb
pop
jne
push
fimuls
xor
jne
pusha
movlps
mov
daa
mov
sbb
fcmovb
ja
mov
mov
sbb
mov
or
mov
aaa
stos
mov
push
gs
andb
ss
push
fwait
and
sbb
mov
xor
imul
adc
movsb
or
ljmp
mov
mov
cmp
incb
sub
ljmp
and
inc
cwtl
cltd
and
fildll
and
movsb
mov
cmp
inc
push
movsb
idivl
shlb
rcr
and
sbb
xor
scas
hlt
jge
mov
es
pop
mov
mov
addb
mov
mov
negb
aad
pop
xor
xchg
in
cmp
mov
pop
cmp
xchg
cmp
outsl
inc
mov
add
aaa
push
enter
lock
scas
adc
and
push
imul
inc
fisubl
js
jecxz
push
fwait
or
push
aas
push
adc
outsb
mov
rol
and
pop
adc
inc
push
push
cmp
adc
add
push
pop
outsl
mov
push
bound
mov
mov
pop
sub
test
stos
dec
and
and
ss
cwtl
push
loop
shrb
mov
mov
popf
jb
jo
cmp
push
std
push
popf
imul
aad
push
nop
push
sbb
cwtl
mov
mov
fnstcw
inc
xchg
xor
loopne
gs
sbb
aad
inc
push
or
pop
addl
mov
add
pop
push
fcmovnbe
mov
mov
divb
pop
lret
mov
add
dec
jb
std
in
addr16
mov
mov
push
aad
loopne
sbb
or
inc
cmp
push
cmc
outsl
sbb
adc
sub
cmpb
mov
inc
mov
test
in
add
adc
arpl
testb
loop
push
cmp
mov
mov
mov
jge
ret
mov
or
lret
xchg
inc
pushf
mov
ret
sarb
int
div
pop
cmp
xchg
pop
add
jb
inc
adc
mov
cwtl
sahf
and
jns
movsl
jo
addr16
ret
lea
xor
or
std
dec
mov
test
shrl
aas
pop
pop
das
mov
mov
xchg
xchg
jnp
loope
inc
and
fstps
icebp
mov
lods
pop
mov
jle
pop
aas
repnz
push
inc
sbb
ss
xchg
mov
aaa
gs
xchg
testb
dec
sti
pop
sbb
or
jge
push
adc
hlt
inc
adc
cmpsb
shrl
inc
mov
xchg
sbbl
or
jb
les
clc
imul
pop
cld
push
pop
int3
push
jecxz
aad
or
out
and
les
inc
dec
dec
imul
cmp
test
lds
repz
aad
xor
mov
les
insb
in
icebp
xchg
jne
jmp
add
outsl
cmpsb
pop
push
inc
add
shll
pop
gs
mov
sub
adc
jne
jmp
rcrb
outsb
adc
jo
sub
and
ja
loop
jbe
jae
ror
jbe
test
mov
outsb
xchg
jns
jmp
js
xchg
xchg
incl
loope
cmp
int3
cs
fsubs
push
pop
mov
mov
mov
in
xchg
das
ja
in
inc
aam
in
pop
sbb
fisttps
cs
jae
mov
dec
std
push
or
xor
mov
or
fwait
xchg
sub
cmp
or
xchg
and
inc
es
movsl
pop
js
popa
push
xchg
loopne
rcll
insl
push
xchg
push
adc
inc
arpl
inc
imul
xchg
dec
popf
push
iret
push
adc
cmpsl
js
aaa
push
jecxz
pushl
sub
loop
fs
fadd
mov
dec
dec
inc
fisttps
add
push
pop
push
sub
mov
lods
mov
lds
sbb
insb
ret
mov
mov
jp
daa
mov
loop
pusha
push
mov
lds
push
sti
cwtl
bound
pop
jmp
and
orl
insb
cmp
jne
pop
insl
or
sahf
dec
rorb
gs
mov
into
and
jo
stos
in
mov
ret
int3
cwtl
int3
push
loopne
mov
rclb
incb
and
and
pushw
cmpsb
vcvtss2si
pop
or
jo
scas
outsl
pop
shll
push
inc
xchg
je
push
icebp
ljmp
mov
xchg
arpl
mov
sbb
inc
inc
lret
aam
dec
leave
icebp
sbb
int3
and
aad
mov
inc
aad
popa
sub
sbb
xor
in
lock
pushf
sti
push
fstps
rolb
out
adc
jb
gs
cmp
shll
mov
cmp
sub
popa
or
jo
mov
mov
dec
pop
js
sbb
sub
sub
mov
es
in
mov
and
inc
or
int3
iret
stos
or
iret
adcl
movsl
subl
cld
xchg
push
mov
xchg
jo
jb
add
js
iret
les
pusha
xchg
mov
pop
out
mov
and
imul
xlat
ja
mov
cli
or
add
cmp
jecxz
inc
popa
mov
lods
sbb
sub
aam
mov
push
or
daa
sub
les
out
aam
sbb
mov
push
fld
ror
inc
xchg
xorl
popa
push
mov
xor
ret
mov
xchg
call
add
es
in
cltd
fcoml
in
test
cmc
inc
fsubl
mov
xor
and
test
outsl
mov
jns
sbb
push
cld
push
lods
or
xor
int3
sub
sbb
add
pop
je
stc
cmpsb
imul
lahf
or
fadds
add
out
or
mov
jl
lcall
pop
test
stos
jns
ffreep
iret
mov
and
stos
jo
out
push
jnp
push
shll
in
shr
jge
sbb
ljmp
lret
mov
imul
mov
cld
fldenv
js
std
idivl
sub
and
aam
imulb
test
flds
push
push
mov
jp
jg
ficomps
nop
or
sbb
adc
xor
ret
fidivl
cltd
or
aad
call
fwait
cmpsb
push
dec
fildl
int
and
sbb
cmovge
adc
sbb
sub
sbb
sbb
mov
in
repz
pop
pop
cltd
sbb
cltd
mov
jmp
sbb
out
xchg
sbb
mov
inc
push
jmp
pop
cmp
out
jecxz
pop
iret
mov
outsb
das
out
jmp
insb
jge
pop
adc
pop
xor
push
iret
or
and
jl
xchg
add
inc
fbstp
mov
push
push
jge
sub
inc
cmp
sub
sahf
jmp
ds
xor
inc
push
cld
daa
jecxz
bnd
jl
shll
sub
shl
outsl
jb
js
nop
nop
dec
sbb
test
stos
push
int
pop
gs
popf
and
stc
cld
out
lahf
sub
lock
subl
jbe
lock
imul
xlat
push
cld
jno
leave
xchg
sbb
repz
cmc
push
std
dec
pop
fdivrl
jl
add
mov
adc
sub
ret
lret
sbbl
pop
cmp
jno
mov
inc
inc
push
mov
data16
pusha
shll
lea
psubw
dec
jbe
sub
inc
mov
fs
inc
jae
ja
pop
mov
mov
sbb
sbb
mov
cmpsl
xchg
mov
xor
add
mov
pop
sub
mov
jno
out
xor
cmp
movsb
test
and
mov
push
addl
push
xchg
adc
add
call
dec
mov
pop
mov
push
xor
and
ds
repz
push
jecxz
cmc
jl
mov
add
bound
mov
xchg
ret
mul
insb
test
in
xor
cltd
jo
movsl
ffree
dec
add
mov
or
add
sbb
in
outsb
nop
dec
pop
ret
xor
std
adc
push
mov
pop
lea
mov
faddl
adc
mov
mov
js
mov
xorl
mov
add
sahf
push
jmp
mov
fcoml
aaa
cmp
xchg
xchg
sub
mov
shrl
add
push
dec
andl
fnstcw
fstps
loopne
jae
js
shll
dec
bound
dec
lock
out
fsubl
adc
out
or
mov
dec
int
mov
ret
inc
lret
or
daa
cmp
repz
leave
sahf
test
mov
insl
xlat
lea
lock
and
xchg
mov
out
popf
mov
sbb
loope
cmp
in
add
mov
mov
nop
mov
xor
sbb
enter
cmp
test
out
frstor
scas
xor
xchg
cmp
int3
aam
pop
in
sbb
shll
es
outsl
inc
xchg
cmp
dec
subl
negl
std
test
shrb
into
dec
mov
add
cwtl
sub
out
outsb
lcall
push
mov
stos
inc
sbb
push
adc
pop
push
mov
lods
jl
mov
in
scas
pusha
mov
stc
fadds
inc
out
jecxz
rep
sbb
mov
aam
mov
cmp
mov
js
inc
xor
scas
xchg
push
les
rolb
or
lea
insb
stc
dec
loope
jbe
adc
mov
bound
cli
stc
sbb
ret
jae
aam
js
je
add
hlt
cmp
mov
mov
mulb
lods
aam
jp
dec
mov
sub
push
pushf
testb
aad
icebp
imul
sbb
testl
loop
pandn
adc
sbb
iret
dec
or
cmp
pop
in
aas
cmp
into
push
lahf
mov
push
iret
or
dec
mov
xchg
fucomip
outsl
cmpsl
int
push
or
repz
pusha
cmp
or
dec
ret
call
push
inc
pushf
xchg
fcompl
out
push
gs
fisubrl
add
cmp
je
jae
popf
add
movsb
icebp
dec
aad
xchg
fimull
fwait
lds
loop
cmp
enter
out
mov
mov
xor
cli
dec
je
jl
mov
push
fdivrs
test
jl
arpl
mov
mov
inc
cli
andb
inc
jmp
adc
or
outsl
pop
push
andl
cwtl
dec
sub
mov
xchg
add
in
xor
jae
sub
ljmp
mov
xor
mov
mov
xchg
cmp
loope
or
or
xchg
mov
pop
pop
pop
lea
int
mov
fisubl
mov
insl
mov
jnp
imul
xchg
icebp
call
aam
mov
mov
repnz
fsubl
cltd
adc
mov
jae
lods
sarb
push
jp
shlb
lret
sub
inc
jo
scas
pop
dec
jns
dec
je
add
lds
pop
pop
push
sti
or
and
clc
xor
sahf
ss
xor
test
movsl
xchg
shlb
iret
xchg
mov
clc
leave
cld
dec
das
add
lret
ret
xor
cld
cmp
add
and
jnp
dec
ljmp
inc
adcb
stc
push
lock
fcoms
mov
fdivs
loop
clc
bswap
mov
lds
inc
cli
jae
popf
fnsave
add
hlt
or
pushf
dec
inc
fstpl
mov
mov
stos
xchg
inc
dec
fwait
dec
sti
add
inc
jmp
mov
icebp
and
outsb
pop
adc
in
mov
popa
sbb
imul
push
cmp
test
fistpl
or
aaa
int
jp
loope
mull
ret
test
lcall
or
xchg
je
aad
sub
enter
andb
pop
xor
int3
sub
pushf
mov
sbb
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
ljmp
xlat
daa
adc
sbb
jnp
lahf
adc
pop
xor
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
rorl
cmp
in
xor
adc
push
xor
inc
push
xor
jo
inc
sbb
dec
jle
push
pop
xor
push
pop
push
les
cmp
js
sub
add
mov
cmp
sbb
addl
in
sub
and
sbb
into
stos
pop
insb
add
sub
cmp
hlt
pop
pop
test
dec
popa
jmp
and
jno
cmpsl
adc
and
mov
mov
cmp
jp
sbb
xor
outsb
pop
jno
jmp
cmp
lods
cmpsb
insb
dec
pop
inc
adc
addl
sbb
daa
adc
aaa
cmp
inc
jl
jnp
daa
adc
gs
daa
jno
daa
std
cmp
sbb
jnp
lcall
sbb
jnp
adc
fs
daa
adc
addr16
daa
xchg
xorb
push
xor
mov
daa
adc
cmp
or
aaa
adc
sbb
jnp
daa
adc
sbb
jo
dec
adc
data16
es
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
push
je
inc
cmp
cmp
daa
adc
bound
adc
push
xor
sbb
or
inc
pop
push
xor
sbb
pop
sbb
and
es
daa
adc
sbb
jnp
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
sbb
jnp
daa
adc
and
cmp
push
inc
daa
add
pop
jnp
or
shlb
fisubrs
loopne
add
push
shlb
mov
mov
xchg
out
dec
bound
jne
int3
lahf
xchg
outsl
inc
or
dec
fisubrl
shrb
push
insl
mov
sbb
pop
dec
inc
jnp
popf
icebp
loopne
pusha
pop
xchg
cmp
popf
mov
sbb
pusha
mov
insl
cmp
mov
fsubrs
stc
adc
cmp
jl
jns
xchg
inc
jne
mov
in
push
pop
cmp
fstps
or
jl
lds
jl
push
adc
lods
pop
add
std
out
les
lahf
test
js
adc
mov
ficompl
pop
ja
cs
das
xchg
jne
cmpsb
cmpsb
add
mov
mov
repnz
and
lea
add
hlt
insb
mov
into
in
or
jb
mov
cmpsb
adc
dec
dec
jbe
in
xor
ss
jne
aad
jno
in
ret
jno
or
inc
shlb
lock
jne
jecxz
ss
or
sahf
leave
mov
lret
inc
repnz
sbb
push
mov
fimuls
dec
enter
cmp
enter
lods
popf
popf
mov
xor
add
or
lcall
test
pop
push
xorl
out
pop
sar
xchg
jnp
fbld
out
sbb
inc
cld
add
cli
mov
int3
push
dec
enter
fwait
dec
add
xor
movsb
jmp
xlat
movsl
in
inc
mov
sbb
adc
jg
jp
sub
jl
popf
pop
sub
cld
sub
in
lahf
ss
xrelease
and
sbb
aaa
adc
or
mov
int
add
add
xor
repz
inc
lock
push
or
loop
stos
push
movsb
cmc
inc
cwtl
dec
and
pusha
jp
xor
stos
out
rcll
imul
dec
mov
mov
xchg
imulb
push
push
cmc
inc
cmp
sub
movsb
pop
inc
imul
pushl
pop
or
lcall
ret
cmp
dec
and
int3
repnz
or
jns
sbb
das
mov
ret
out
mov
adc
xor
mov
repz
outsl
int3
mov
push
addb
jmp
inc
jg
mov
cmpsl
jle
pop
fiadds
das
in
mov
mov
ficompl
jne
in
or
shll
pop
jp
nop
ficoms
or
loope
loope
repz
scas
or
sbb
sub
mov
mov
insl
jmp
lcall
pop
aas
mov
jo
mov
push
movsb
leave
popa
outsl
inc
dec
xchg
xchg
nop
ljmp
fistps
je
in
mov
ror
rorl
shrl
sbb
xchg
das
and
in
or
xchg
mov
call
cmpsb
mov
in
insl
xchg
sti
xor
std
mov
rol
jl
inc
xlat
outsb
int3
dec
imul
adc
mulb
sti
movsb
xor
push
mov
jne
dec
in
fdivrl
push
leave
push
jp
imul
out
dec
jecxz
pop
pop
imul
lcall
orl
jmp
xor
je
mov
outsb
jae
imul
rorl
cmp
movsl
pusha
aam
lods
scas
insl
push
lds
jge
test
and
addr16
mov
fwait
jge
xor
in
rcl
dec
adc
sbb
sahf
xchg
mov
das
jae
push
jp
mov
fisttpll
sti
pop
sub
mov
inc
or
pop
mov
pop
ss
dec
push
cmpsb
add
push
cmpsl
out
xchg
inc
std
iret
bound
cmp
out
divb
andb
fsubr
sub
inc
push
leave
xor
push
xor
popf
mov
jl
bnd
das
mov
outsl
lcall
jb
mov
scas
fdivl
sbb
adc
mov
stos
gs
arpl
cmp
test
rorl
mov
xor
pop
adc
dec
push
cmp
sbb
jbe
adc
or
pushf
mov
and
mov
push
lds
decl
cwtl
ja
int
mov
dec
inc
push
stos
mov
test
ret
imul
nop
adc
inc
adc
aas
dec
test
int3
jmp
and
sub
cld
jns
addr16
fwait
inc
or
mov
shll
pop
out
fwait
in
jae
incl
lock
addr16
lock
call
fadd
movsb
lock
testl
jg
pop
or
inc
idivl
jno
scas
sbb
ss
sar
pop
mov
sbb
leave
lods
nop
popf
outsb
mov
xchg
and
in
pop
adc
dec
repnz
xchg
jne
mov
mov
dec
mov
adc
pop
add
test
ds
inc
fbld
cmc
sub
xorb
inc
jno
cld
gs
pushf
sbb
call
ret
repnz
les
xor
das
roll
aaa
cli
daa
aad
push
fimuls
jbe
inc
mov
pop
les
lret
inc
mov
cwtl
sti
mov
mov
xor
clc
cmp
int
dec
mov
icebp
xor
out
jo
xor
xchg
ljmp
shlb
stos
adc
dec
gs
testl
xchg
test
shrl
mulb
shrb
jnp
cmpsl
push
pop
sbb
jno
pop
pusha
rcll
and
push
lahf
jecxz
and
das
jnp
scas
imull
cmp
mov
je
sub
and
fstps
into
sub
notl
cmp
adc
adc
xchg
cli
inc
movsl
xor
test
sub
bound
jp
xor
stos
inc
push
shrl
in
lea
add
aam
cmp
dec
or
xchg
test
iret
cwtl
sbb
mov
mov
lret
mov
lea
or
and
mov
xchg
push
dec
cmpsb
sbb
push
stc
in
pop
adc
mov
jecxz
mov
sbb
push
xchg
mov
cs
and
sti
push
cwtl
lods
lods
adcb
lods
jnp
loop
and
and
sub
jp
adc
mov
mov
add
xchg
xor
sahf
push
push
jg
pop
sahf
pop
lock
or
out
shlb
dec
cltd
scas
sub
adc
rcrb
popa
jns
test
test
in
mov
loop
sbb
push
push
or
popa
push
lcall
pop
es
mov
fbstp
test
fxtract
sbb
and
adc
and
mov
mov
cmpsb
outsb
ds
mov
mov
incb
shrb
mov
shrb
dec
lret
das
or
lret
push
pop
push
jo
fwait
test
testl
fbld
mov
std
inc
test
test
hlt
jnp
cmp
in
outsb
jmp
shlb
iret
add
xchg
jp
and
or
mov
shll
psllq
or
iret
mov
sbb
into
out
cli
push
rolb
sbb
aas
sub
mov
fisubs
or
cmp
fsub
shrb
in
push
lahf
mov
icebp
mov
jle
jae
cmp
lea
push
push
in
jns
outsl
add
scas
lahf
clc
jo
mov
adc
jae
and
pop
jbe
mov
je
ss
cmpsb
xchg
out
push
or
bound
repz
mov
dec
in
sbb
pop
repnz
add
sub
cmp
sbb
idiv
jbe
pop
push
andl
cmp
lods
imull
jns
inc
xchg
push
mov
aaa
addr16
ror
fwait
mov
mov
mov
adc
daa
pop
out
inc
push
adc
stos
push
outsl
sub
sbb
shll
clc
inc
in
into
inc
int
inc
mov
jp
sbb
mov
sarl
cmp
bound
ds
mov
std
cs
xor
addr16
loopne
pop
call
es
lret
sbbl
insl
in
adc
mov
movsb
sti
outsl
inc
sti
sub
pusha
pushl
test
mov
jecxz
mov
mov
aaa
adc
and
sub
push
lods
fwait
aad
in
outsb
and
xor
push
mov
test
inc
jae
push
mov
mov
mov
sbb
les
scas
mov
xor
jns
ss
mov
dec
xor
jns
jge
pop
dec
cmpsl
pop
cs
inc
jb
repnz
mov
jecxz
adc
lcall
xor
adc
mov
sub
jne
rcr
jno
and
cmpsl
xchg
jmp
or
xor
or
push
pop
xchg
int3
cmp
fistps
inc
mov
xchg
mov
call
lret
xor
sub
test
xor
out
xor
dec
ds
xchg
aaa
rol
cmc
dec
cld
pop
dec
test
sbb
and
cmpsb
leave
fnstsw
loope
loope
test
pusha
push
add
or
stos
pop
stos
xchg
jmp
frstor
iret
rorl
xchg
sub
out
push
scas
gs
dec
popa
sub
ds
mov
popa
mov
aas
jae
sub
sahf
scas
scas
push
sbb
push
mov
nop
clc
les
loope
and
mov
or
mov
popf
fwait
pop
pop
aad
out
pushf
mov
mov
ret
jg
psllw
aad
inc
pusha
jge
fnstsw
cmovnp
cld
adc
aas
inc
dec
xchg
iret
mov
ret
pop
nop
ffreep
inc
push
cs
sub
fsubrs
adc
jns
dec
lret
cmp
lahf
jmp
imul
sti
scas
cltd
xor
out
xchg
stos
push
test
inc
lods
push
inc
shlb
gs
icebp
adc
push
fsts
jecxz
aaa
add
call
and
imulb
inc
jle
push
mov
mov
stos
ljmp
inc
arpl
shr
jne
mov
mov
into
xchg
xchg
leave
lret
lock
jmp
clc
daa
mov
add
jae
mov
in
out
mov
insl
xor
aas
daa
pop
loope
mov
or
mov
add
fbld
sbb
xchg
mov
push
in
adc
xor
adc
in
out
enter
negl
pop
adc
cmc
pop
pop
inc
sbb
lcall
cs
mov
push
or
cmpsl
jbe
mov
adc
nop
nop
dec
adc
in
roll
sub
mov
xor
xor
das
sbb
daa
enter
daa
push
fisubl
lods
dec
sahf
ja
and
inc
lahf
test
mov
into
add
xchg
xor
inc
mov
sub
push
lea
push
stc
insb
imulb
jmp
adc
data16
inc
insl
mov
mov
test
jecxz
shlb
xchg
adc
sub
fistpl
push
hlt
xor
data16
jbe
mov
mov
xor
loope
sbb
cltd
andb
or
sub
ss
cmp
pop
dec
push
adc
pushf
and
adcl
fwait
jns
and
loope
icebp
inc
push
sub
inc
inc
push
jbe
call
aad
repz
es
pop
mov
loope
scas
inc
add
jns
stos
jl
mov
pop
push
testb
loope
inc
call
test
sarl
aas
cmp
test
data16
mov
pop
popa
or
push
sbb
dec
pop
imull
jmp
dec
mov
int
int3
xor
test
loope
pop
in
mov
aad
pop
jb
sbb
push
jle
jo
outsb
sbb
add
lahf
jg
test
test
shr
imul
dec
imul
in
in
lcall
add
jb
loope
pushl
or
ja
jb
dec
pop
lock
cmp
cmp
mov
shl
cmp
jg
fdivrs
insb
and
repnz
jo
ja
lret
insb
loopne
pop
jmp
pop
xor
nop
xchg
mov
sbb
push
and
mov
xchg
fimuls
sbb
loop
xor
dec
pop
push
jmp
ds
sub
ljmp
daa
lods
incb
rcl
adc
sbb
flds
in
sbb
loope
insl
mov
js
inc
mov
cmpsb
scas
jbe
xorl
fcomip
and
roll
xchg
pop
jbe
jle
les
fadd
pop
out
hlt
xchg
mov
push
in
or
mov
stos
xchg
push
outsl
inc
jns
mov
adcl
mov
loopne
pop
roll
popl
push
cltd
push
xor
mov
inc
aam
das
pop
or
and
fs
xchg
xor
mov
and
int3
mov
or
xchg
arpl
dec
lcall
sub
mov
fistps
addr16
cmp
mov
out
fmul
sbb
push
mov
push
jns
push
rcrl
lcall
xchg
data16
push
sub
pop
mov
push
mov
repnz
pop
mov
mov
mov
mov
repz
adc
bound
pop
add
cmp
shr
jo
xchg
lds
sub
lret
out
int
shll
jns
in
loope
inc
je
push
fcmovnu
sbb
sbb
aam
aam
fstl
bound
rcll
cmc
ljmp
pop
pusha
rorl
inc
mov
mov
ds
and
push
mov
jp
mov
fsubs
jns
arpl
push
scas
xchg
cmp
inc
add
xor
cmp
jmp
int
sarb
push
fstl
inc
push
dec
mov
lods
mov
and
push
mov
jb
xchg
outsb
daa
xchg
add
ss
mov
mov
addr16
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubl
add
popa
inc
add
popa
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
arpl
movsb
arpl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
addl
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
inc
add
addl
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
test
movsb
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
