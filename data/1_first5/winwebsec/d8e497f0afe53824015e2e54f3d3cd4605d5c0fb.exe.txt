push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
aaa
jecxz
pop
push
lods
cmp
dec
out
sbb
push
fsubl
fs
fistpl
adcl
inc
push
adc
in
cmc
lret
je
mov
push
je
jno
out
push
sub
insl
pop
fs
jg
int
dec
clc
push
jle
adc
in
xor
fstps
ja
or
lcall
inc
xchg
in
jle
jns
push
cltd
roll
xor
sub
xlat
fiadds
movsl
push
and
fmull
inc
orb
mov
push
roll
sub
aam
and
sbb
fcmovnbe
sub
mov
xchg
mov
lds
pop
flds
ficomps
inc
ss
cmp
and
test
and
inc
inc
and
or
push
shlw
gs
dec
insb
cmp
push
mov
pop
jns
test
orb
pushf
jmp
inc
in
mov
cld
cmp
push
data16
xchg
cmpsb
int
nopl
xchg
imul
hlt
std
mov
into
mov
sbb
xlat
xchg
scas
mov
mov
push
or
ds
mov
movl
imul
in
scas
es
pop
adc
mov
loope
mov
mov
fsubrl
jecxz
mov
xchg
cmp
fdivrl
mov
ret
lahf
hlt
xchg
cmp
nop
pop
inc
push
ds
leave
sbb
mov
inc
push
add
lds
loopne
push
in
sbb
addr16
sub
xchg
or
mov
mov
mov
int
adc
daa
call
cmp
add
test
lea
push
jno
stos
xchg
push
pop
daa
sarl
or
sbb
xchg
aas
pop
push
aad
dec
push
and
adc
pop
mov
add
shll
mov
dec
call
mov
cmp
push
sbb
sub
imull
jo
outsl
lods
outsl
mov
pop
in
sbb
or
mov
mov
dec
or
sub
outsl
mov
icebp
jnp
cwtl
sub
inc
mov
xchg
xor
push
jmp
lea
sbb
aaa
sarl
ljmp
or
scas
ret
push
or
pushf
add
test
push
jg
call
cli
daa
iret
ds
lds
lret
sub
jp
aas
inc
or
mov
mov
jns
and
mov
loope
xchg
and
push
scas
pop
mov
ret
loopne
adc
lods
pop
push
xchg
aam
cmp
in
cmp
push
andb
or
lahf
mov
out
add
cmp
int3
pusha
in
jae
fdivl
jbe
xchg
mov
pop
repz
lods
sub
inc
int3
xor
cmpsb
jge
adc
clc
cmp
sbb
cmc
inc
inc
in
js
mov
dec
repnz
cltd
pop
std
dec
mov
mov
shlb
mov
lds
pop
iret
out
push
xor
jnp
add
mov
xor
mov
cmc
cs
or
cmp
test
repnz
ljmp
outsl
push
xchg
inc
mov
addr16
cmp
fsubl
mov
add
mov
fldenv
test
cwtl
cwtl
scas
xchg
jnp
xor
sub
and
ds
dec
sub
and
push
roll
bnd
in
clc
or
or
xor
sub
inc
xchg
ret
scas
cmpsl
inc
int
fsts
pop
cltd
xchg
addb
data16
imul
dec
ljmp
adc
and
mov
jo
sar
fisubrl
pop
mov
notl
les
inc
clc
jno
rclb
mov
mov
pop
mov
add
sub
stos
aam
cltd
xor
shlb
lods
xor
xchg
or
mov
test
mov
outsl
repnz
and
fistpl
jmp
test
and
jb
and
mov
aas
out
sub
aad
fildl
sub
xor
adc
jae
mov
outsl
xor
movsb
call
loop
je
aad
aas
or
jno
vshufps
pop
aas
dec
cmp
in
sub
or
loopne
dec
test
xchg
dec
and
test
pop
mov
dec
loopne
das
jae
sbb
test
lock
pop
cmpsl
fsub
psubsw
lea
mov
int3
stos
adc
dec
inc
loopne
sub
daa
lahf
sub
leave
cld
movb
adc
lret
jo
or
mov
jl
aad
cwtl
push
dec
aam
xchg
mov
outsl
movsb
xchg
int
ss
xchg
inc
clc
cmp
xchg
scas
into
push
sti
dec
outsl
sbb
lret
stos
and
stos
sub
decb
into
mov
add
sub
test
jp
leave
addr16
pop
aad
scas
dec
int3
push
cmp
cld
and
testb
movsb
mov
ja
sub
pop
fs
les
pop
stos
dec
push
aam
inc
add
xchg
ficoms
fnstcw
xchg
push
inc
jns
pop
jl
mov
xor
add
jne
dec
add
dec
xchg
cld
sbb
aam
das
pop
pop
addr16
xchg
add
or
adc
stos
mov
inc
pop
in
cmc
push
dec
mov
xchg
or
lahf
push
jne
cmp
jbe
outsl
pop
push
shrb
cmp
jecxz
bound
mov
sbb
pusha
adc
push
repnz
or
and
mov
xor
ljmp
sbb
gs
cmp
inc
insl
ja
iret
add
popa
pushf
lds
xorl
inc
leave
adc
mov
jbe
sbb
fucomp
daa
test
cwtl
lret
dec
into
cmpsl
push
or
adc
lahf
sbb
ds
jecxz
xor
add
sub
pop
adc
jl
arpl
lock
and
push
jp
insl
push
ljmp
dec
jle
pop
pop
out
movsb
xlat
out
add
push
adc
leave
and
cmp
lock
gs
sbb
sbb
lcall
divb
or
dec
pop
mov
adc
out
jl
shrl
popa
mov
addl
push
mov
jbe
inc
mov
imul
mov
mov
add
ja
sub
push
rcll
xor
stc
or
or
pusha
jne
jb
fs
mov
shlb
out
cmp
add
daa
scas
dec
pop
pusha
cmp
fmul
iret
jge
in
test
cli
cmp
cmpsb
sbbb
mov
cmpsl
or
loope
dec
cmpsb
outsb
cmp
pop
sahf
sbb
scas
repz
push
test
popf
pop
bound
inc
xlat
dec
enter
sub
ret
mov
std
jg
loop
mov
adc
push
fdivrl
outsb
xchg
popa
bound
lahf
rorb
clc
test
and
mov
fidivrs
xchg
mov
mov
repnz
add
sub
push
push
xor
sbb
or
cmp
ljmp
fbstp
ds
ret
add
ds
jge
dec
adc
stos
jg
es
jo
into
mov
jnp
negl
fdivr
adc
dec
inc
pushf
cmp
test
int3
lds
fstpl
in
mov
pop
push
das
or
dec
mov
adc
aas
push
lea
lret
adc
sub
xor
cmc
xchg
cld
push
adc
or
cmpsb
xchg
andl
add
push
aam
cmp
aaa
dec
xor
jnp
and
js
mov
and
fdivrl
and
sti
ror
mov
pop
mov
decl
inc
xor
sbb
cmp
into
cmp
pop
mov
mov
pop
hlt
mov
mov
pop
cmp
imul
loop
ja
pop
push
cmc
dec
fdivp
leave
xchg
jo
xchg
pop
mov
fisttpll
cmp
enter
jo
cmpsl
adc
dec
jbe
xchg
movsl
jb
cmp
bound
cmp
fsubrl
aad
pop
das
jp
in
mov
xor
cmp
sbb
aad
dec
mov
mov
mov
lock
xchg
adc
out
out
inc
pop
xchg
sub
jns
stos
add
stos
push
imul
fs
inc
out
loop
insl
mov
pop
stc
xchg
dec
call
pushf
mov
std
mov
into
or
add
cmpsl
cli
fiadds
xchg
loop
lret
xor
jns
mov
add
test
push
adc
daa
add
icebp
cmp
daa
ds
iret
pop
stos
mov
mov
dec
jb
inc
daa
ret
push
in
mov
imul
movsb
pop
push
nop
aam
push
sub
cmpsl
mov
loop
ljmp
cmp
mov
nop
sub
nop
xor
mov
add
imulb
mov
inc
push
cmpsb
pop
cmp
xchg
dec
lock
aam
add
cld
push
jmp
xchg
pusha
jo
mov
push
mov
push
push
push
jae
cmp
adc
adc
dec
fildll
ljmp
arpl
idivl
addr16
pop
out
ja
mov
ficomps
push
mov
xor
dec
mov
xchg
aad
bound
stos
repz
inc
adc
call
xchg
sti
leave
mov
mov
xor
sub
add
jnp
jb
or
dec
inc
jl
cmp
sarl
inc
inc
sbb
xor
hlt
adc
xchg
fnsave
insl
pop
bound
dec
adc
ret
push
les
fldcw
push
pop
or
mov
cmp
xor
leave
jl
pop
testl
adcb
loopne
cmp
in
loop
ret
inc
test
jnp
rorb
push
mov
lcall
in
jae
cmc
fcmovb
fisubrs
and
or
test
lcall
mov
in
ret
inc
jae
cwtl
xchg
sub
outsb
shl
fisttpll
ss
lea
adc
jl
dec
fs
loopne
push
cmp
cmp
pop
add
mov
sbb
lods
dec
fisttps
decb
ja
sarl
inc
lds
push
lods
pop
outsb
leave
or
lods
mov
out
fucompp
popf
into
xchg
fdivp
orb
add
movsl
gs
in
jle
loopne
imul
push
push
adc
xor
nop
cwtl
or
imul
cmp
jae
mov
xchg
ljmp
inc
push
test
xor
sbb
int
imul
and
nop
add
mov
out
sbbb
cmpsb
pusha
leave
dec
inc
mov
std
push
fsubr
mov
dec
clc
nop
xchg
xor
inc
mov
pop
jg
std
int3
sub
cmp
int
cs
scas
jge
addl
pop
mov
sub
mov
inc
into
out
xor
mov
sbb
daa
negb
ds
dec
cmp
mov
xchg
adc
arpl
inc
movsb
adc
sbb
sbb
mov
scas
inc
jns
adc
inc
push
mov
jge
jno
xchg
xchg
nop
dec
sbb
negb
insb
push
rorb
jne
mov
jmp
insl
rcr
loope
sbb
jae
adc
enter
sarl
pop
orb
xor
dec
int
xor
mov
imul
sbb
push
daa
imul
sarb
adc
sbb
xor
jl
mov
push
pop
sub
xchg
pushf
pop
cmpsl
mov
sbb
adc
cli
jnp
push
sbb
add
pop
dec
mov
inc
lods
and
pop
sbb
xchg
sbb
insl
mov
sub
adc
mov
mov
leave
ficompl
lds
or
or
pop
cmpsl
inc
cmp
inc
pop
xchg
leave
jmp
and
xorl
setl
cmpsl
mov
inc
xor
mov
int
inc
cmpsb
ficoms
fisubl
or
and
lcall
xorb
js
insb
mov
xchg
mov
cmp
shll
xchg
insb
int
pop
adc
movsb
push
or
sbb
mov
cli
mov
mov
lahf
cs
cmpsl
xchg
add
data16
mov
dec
and
dec
lret
pop
aam
add
fistpll
shll
cmp
fs
add
imul
add
inc
stc
or
test
pusha
mov
sbb
sbb
jae
pop
add
xlat
push
outsb
xor
inc
cmp
out
jns
dec
xlat
xor
jnp
pop
mov
xor
adc
cmpsl
pop
cmc
hlt
stc
outsb
fiadds
dec
cmp
ljmp
cmp
in
insl
int3
imul
sub
pop
push
lds
into
xchg
sbb
adc
cli
and
adc
sub
in
ljmp
test
js
sahf
adc
inc
xor
nop
push
insl
icebp
aad
sub
fnstsw
stc
std
sbb
mov
sub
scas
leave
dec
mov
xchg
xchg
jbe
lock
xchg
cmpb
mov
cld
incl
inc
pusha
adc
dec
add
sub
dec
rolb
call
cmp
cli
mov
jne
jne
sub
dec
aaa
pop
adc
addb
or
imul
xchg
jge
cmpsl
repnz
push
out
xor
insl
testb
lret
movb
fistps
addb
push
mov
push
cmp
imull
into
das
xor
aaa
add
xchg
xchg
mov
ss
dec
mov
js
push
push
fsubrl
mov
pop
in
cmp
push
lds
movsb
insb
inc
inc
stos
outsl
daa
mov
mov
jecxz
adc
mov
pop
jle,pt
add
jae
xchg
scas
mov
imul
call
jae
dec
mov
sarl
fldenv
mov
mov
sbb
mov
fwait
mov
sbb
ret
addb
push
pop
push
cwtl
call
outsb
enter
push
jl
xchg
mov
out
repz
ja
mov
sub
ljmp
xchg
int3
inc
jbe
add
push
fnstcw
xchg
dec
cmp
jge
mov
xchg
and
pushf
mov
dec
adc
mov
dec
dec
mov
jmp
or
xor
add
sub
jle
js
xchg
mov
inc
lea
jmp
mov
cwtl
or
cmpsb
add
pop
mov
xor
and
out
hlt
and
mov
test
mov
lahf
cmp
adc
call
pop
sub
and
popf
nop
jecxz
add
inc
sub
sbb
add
into
fiaddl
pop
gs
in
out
cltd
pop
jne
sbb
lcall
rorl
pop
fsub
lds
fldt
shrl
aad
mov
xor
mov
cmp
cmp
pushf
call
pop
daa
push
dec
jne
sbb
mov
mov
jb
shrl
mov
sbb
mov
mov
cli
cmp
xor
mov
inc
xor
xchg
xlat
fcompl
int
inc
jecxz
test
subl
insl
pop
rolb
xchg
int
cmp
inc
dec
cmp
hlt
inc
lret
jge
lcall
stc
fcmovnbe
test
nop
mov
cs
out
and
or
aaa
scas
das
mov
sahf
mov
pop
jbe,pt
sub
xor
mov
xor
inc
enter
bound
hlt
adc
add
xchg
jae
xor
push
addr16
sbb
std
jl
add
lock
mov
test
lret
jnp
sub
add
fimuls
mov
aad
jmp
push
and
add
jne
xchg
movsb
xor
out
gs
pop
pop
mov
mov
jp
xor
sub
inc
or
subl
into
xlat
dec
in
xchg
aaa
push
and
out
xchg
test
out
and
neg
ret
mov
mov
push
adc
pusha
pop
movsl
push
mov
jecxz
dec
cmp
xchg
fnop
jle
dec
aam
mov
adc
sbb
or
jle
xchg
adc
insb
inc
or
or
aaa
cli
lahf
test
pop
add
mov
mov
stc
or
push
sbb
lock
mov
jp
cmpsl
out
jle
shll
jp
scas
enter
and
sub
insb
shr
sbb
push
mov
fldcw
aam
dec
push
sub
mov
test
popa
xchg
fs
sbb
jnp
cld
icebp
mov
insl
fcompl
mov
sbb
clc
jne
cmpsb
adc
jmp
push
push
jp
ss
push
cmp
cmp
cmpb
lods
rcrl
xor
jae
lds
cli
cs
arpl
dec
mov
dec
std
xchg
sar
mov
lea
ret
mov
ss
mov
mov
mov
inc
insl
and
rcr
idiv
addb
mov
or
cltd
out
js
andb
inc
jmp
jne
movsb
aad
mov
insb
int
lods
out
ficompl
sarl
adc
pop
in
fwait
stos
and
sub
dec
xchg
call
dec
or
out
sub
push
cld
loopne
pop
xchg
inc
in
jl
jo
push
push
mov
fucomi
sahf
mov
std
scas
push
arpl
xor
lods
xor
pop
jmp
mov
mov
es
push
data16
jb
std
cwtl
and
pop
rolb
addr16
rol
mov
dec
imul
fcmovnbe
jp
xchg
inc
inc
dec
lods
push
and
mov
cmp
pop
sbb
jne
cmp
dec
fistpll
loop
cld
cmp
dec
pop
cmc
sti
daa
mov
and
bound
inc
mov
cmp
jne
mov
pop
not
dec
ds
adcl
adc
in
dec
scas
or
test
xor
push
xchg
push
ds
sti
dec
nop
jns
inc
cmc
inc
icebp
jo
dec
mov
dec
mov
inc
fsubl
adc
imulb
test
push
cmpsl
punpcklwd
add
pop
out
sbb
mov
mov
jo
sar
inc
clc
in
dec
sub
cmp
or
lea
fdivl
mov
mov
lock
es
lret
cmpsl
add
and
xchg
stos
cs
xchg
outsl
addr16
rcr
xchg
mov
lahf
fwait
pop
movsl
enter
pop
sub
pop
xor
add
or
sahf
xor
mov
inc
lahf
pop
and
imul
push
movsl
loopne
test
sub
pop
lret
pop
jge
pushf
popa
mov
shr
xchg
mul
xor
pop
std
mov
loope
push
in
out
push
push
sbb
add
lds
loopne
push
mov
lahf
jns
clc
rcrl
mov
scas
pop
pop
mov
pop
inc
dec
push
and
mov
push
xchg
mov
jle
dec
xchg
mov
pop
rorl
or
push
adc
bound
mov
jo
pusha
pop
ret
cwtl
push
pop
pop
xchg
or
ret
int
cld
and
or
mov
mov
es
xchg
and
hlt
int3
dec
mov
repnz
lods
ss
push
fyl2x
mov
call
cwtl
iret
mov
repz
aam
push
mov
scas
lea
fstl
incb
dec
loope
pop
rcr
fwait
popf
outsb
cmpsl
jp
push
mov
add
adc
push
fninit
mov
xor
lock
int
js
mov
push
outsl
and
pushf
aaa
and
cltd
jecxz
and
push
jle
cmp
xchg
mov
sub
aad
aaa
mov
aaa
out
movb
mov
push
loop
in
shll
xchg
ljmp
dec
push
je
jge
xchg
cmp
aad
jo
sub
pop
jp
mov
repz
inc
add
repnz
jp
nop
loop
fsubl
xor
gs
adc
xchg
inc
jae
sub
fs
pop
cmp
sub
cmp
cltd
addl
xor
xor
jne
call
mov
cwtl
and
arpl
mov
mov
push
or
jl
sti
jl
sbb
movsb
pop
pop
xchg
or
inc
dec
pushf
movsb
rorl
insl
int
repnz
jle
and
mov
and
jmp
dec
or
shl
sbb
out
inc
shrl
jns
enter
out
xchg
xor
lods
fildll
pop
aad
jnp
nop
rclb
rcll
ret
pop
cmp
andl
ret
icebp
cltd
sbb
mov
lcall
adcl
ja
movsb
xchg
jle
loopne
cmpsb
aam
inc
pop
stos
sti
clc
sbb
loopne
fneni(8087
push
jmp
fistps
loope
movsl
mov
push
dec
mov
push
jp
sub
std
scas
or
jle
lock
notl
mov
mov
mov
loopne
push
jb
mov
mov
add
mov
movsb
jno
pop
fcomip
das
aas
std
adc
out
pop
mov
jo
stos
imul
mov
sbbl
ljmp
pop
add
sbb
mov
pop
lar
mov
sbb
xor
rcll
cmp
mov
inc
cmp
xchg
arpl
rcll
inc
dec
lds
fsubp
std
inc
test
push
cwtl
rol
out
jbe
push
sub
test
push
stos
inc
pop
out
sbb
fnstsw
inc
or
push
fcoms
shll
in
or
mov
movsl
xor
xor
fisttpl
mov
dec
pop
mov
xor
or
xchg
cmp
movsl
pop
stc
out
sti
std
push
call
mov
push
out
enter
loope
jns
popf
push
jecxz
mov
jecxz
dec
in
push
jg
push
cli
mov
push
stc
ss
ds
or
adc
sbb
cld
pop
pop
wbinvd
icebp
in
loopne
pcmpgtd
mov
jmp
mov
jp
test
ja
jge
pop
lods
inc
stos
stc
rolb
das
sbb
or
das
cmpl
aas
xor
shlb
mov
adc
in
addr16
jno
idivb
pop
xchg
push
imul
les
dec
std
sbb
mov
push
pop
aas
xchg
mov
mov
ret
xlat
rep
and
cmp
loope
iret
mov
adc
bound
sti
fildl
inc
int3
pop
lcall
fimuls
mov
hlt
stos
cmpsl
and
push
sub
push
pushf
or
repnz
jle
push
mov
lret
popfw
and
add
push
nop
sbb
jnp
jae
cmp
sub
jmp
lret
cmc
or
sub
lea
fildll
jnp
add
icebp
jae
int3
rorl
ja
lods
xchg
int3
push
pushf
dec
adc
lods
pop
fdivrs
clc
hlt
inc
inc
or
test
and
add
fst
or
push
js
jge
sub
sub
fadds
andb
imul
das
xchg
adc
in
dec
adcb
dec
inc
push
testl
fcompl
cmp
pop
nop
push
sub
push
lcall
adc
inc
or
pop
cmp
mov
out
leave
push
sbb
movb
je
shrl
xor
jmp
rcr
lcall
jb
xchg
jmp
rcll
scas
sbb
adc
and
mov
idiv
push
adc
jbe
push
mov
lret
in
sbb
pop
push
out
push
clc
out
ss
int
xchg
nop
jecxz
cltd
repnz
mov
mov
mov
lea
push
pop
loope
lds
mov
fsubrs
out
sbbb
mov
outsb
out
and
orb
insb
pop
dec
sbb
into
jo
push
inc
stos
and
testb
pminub
dec
je
jmp
jb
outsb
and
jle
loope
xchg
push
ficoml
or
aad
fistpll
in
sub
add
aam
flds
ja
scas
incb
sbb
and
cwtl
inc
out
in
mov
jmp
repz
add
leave
aas
jg
fsubrp
pop
addr16
nop
jae
sub
push
jbe
call
or
decl
and
sbb
xor
add
leave
mov
bound
mov
aad
dec
sub
jbe
std
cmp
mov
mov
inc
inc
cmc
adc
rcll
lahf
xchg
mov
fsubr
mov
sub
jb
fistl
adc
adc
pop
mov
xor
enter
mov
push
insl
jo
in
add
popa
sbb
rep
or
cmp
iret
pusha
ds
push
jg
inc
sub
adc
cvttps2pi
xchg
or
pushf
pop
xor
xchg
loopne
sbb
movsb
mov
cmp
sub
sbb
movd
test
mov
ds
pop
pop
adc
insl
fxch
enter
mov
pop
push
ds
xchg
popf
mov
nop
test
enter
mov
sti
and
cmp
mov
rcl
pop
nop
mov
cmpsb
push
in
popa
jmp
jo
xchg
inc
or
cmp
mov
rorl
mov
sbb
insb
dec
lods
xor
ja
dec
xchg
jnp
outsl
xchg
or
je
lahf
push
imull
lret
xlat
lods
in
sub
sub
shl
xchg
jmp
pop
std
inc
imul
cmp
jmp
pop
testl
push
sbb
les
addr16
fstl
iret
inc
or
cmp
ret
mov
add
jmp
pop
out
adc
into
mov
imul
outsb
pop
es
or
push
push
es
mov
enter
fwait
outsb
mov
push
in
imul
gs
jecxz
jl
arpl
jns
mov
dec
pop
push
mov
fs
je
int3
imul
inc
shrl
cmp
mov
cmp
lock
pop
mov
jnp
jle
loope
lock
pop
data16
push
sahf
stos
mov
cld
xor
jno
xchg
sub
aas
xchg
mov
or
stos
repz
cli
ds
les
aas
inc
pop
jmp
xor
lods
jo
jns
xchg
insb
xchg
adc
pop
push
sbb
fistps
or
inc
insb
insb
mov
xchg
jnp
pop
sub
and
repz
mov
add
jge
bound
movsb
push
fidivrs
push
pop
sti
push
add
push
sti
fwait
arpl
sub
mov
ret
dec
test
and
mov
inc
jge
fst
cs
push
sbb
and
das
aad
push
sub
or
cmp
mov
mov
mov
repnz
bound
lret
push
dec
jmp
shrd
faddp
cmc
sub
dec
inc
sub
mov
mov
mov
inc
fldt
iret
and
inc
rorl
lock
addr16
or
jns
decb
mov
sahf
xchg
rcll
mov
adc
jecxz
xchg
loopne
or
mov
pop
imul
cmp
inc
push
and
push
and
dec
xchg
outsl
fcmovnb
jo
or
mov
dec
sbbb
inc
popa
pop
push
xchg
push
les
pop
out
xchg
xchg
aas
dec
cmp
lods
pop
subb
and
das
xor
js
pop
adc
cmpb
sub
push
cld
lods
enter
std
xchg
xchg
jge
push
aad
mov
pop
adc
and
adc
ja
inc
ret
fnstenv
cmp
jp
shlb
cmpsl
in
jg
lret
cld
sbb
mov
sub
loopne
testl
mov
imul
and
jmp
stos
outsb
add
lret
cmpsl
divl
addb
mov
enter
add
jae
inc
lcall
adc
in
inc
cmpb
jno
hlt
out
adc
fs
pop
jmp
mov
test
bound
push
test
scas
ljmp
xchg
mov
inc
pop
sbb
cltd
popl
jecxz
pop
imul
or
mov
xchg
rcrl
mov
scas
aad
pop
and
insb
jge
sub
cmp
mov
pop
je
xchg
shrl
into
cmc
in
push
push
xor
pop
es
xlat
push
pop
mov
or
mov
xor
and
in
lret
idiv
adc
sbb
xor
push
jnp
jns
movsb
out
mov
xor
jmp
dec
mulb
push
xchg
xchg
mov
es
call
mov
repz
sub
and
mov
lds
jae
je
jl
dec
ljmp
sub
inc
mov
cmp
inc
mulb
and
insl
sti
stos
cmp
lret
mov
fucomi
jle
adc
jb
jg
dec
xchg
mov
lds
shll
xchg
mov
mov
and
cmp
daa
repnz
xchg
lods
mov
mov
aam
jae
ret
adc
sbb
out
mov
mov
dec
enter
icebp
mov
mov
fdiv
rol
xchg
testl
stos
jge
loope
aas
mov
fwait
lea
stos
push
cmp
fisubs
adcb
js
pop
aad
push
ja
cmp
cmp
fisubs
int3
jbe
push
push
movsl
mov
xchg
jmp
mov
adc
adc
aad
push
adc
bound
mov
jae
fimuls
loop
test
cmp
loopne
or
mov
and
or
xlat
fdiv
faddl
les
out
lret
jle
cmp
push
push
pop
push
dec
ja
das
pop
push
clc
addr16
gs
dec
out
cmp
enter
mov
bound
xor
mov
movsl
push
sbb
stos
insb
mov
push
add
cmpsl
xchg
mov
jo
sub
hlt
in
sbb
pop
and
pop
rol
adc
mov
cmp
ret
inc
lds
sahf
lea
mov
lock
cs
or
shll
insb
aam
icebp
call
int
xchg
mov
in
ret
jg
jb
push
rcr
xchg
cmp
add
mov
fiaddl
ds
mov
enter
add
mov
mov
pop
cmc
jp
enter
popf
enter
inc
inc
or
cmp
cmp
in
sti
dec
and
cmc
pop
and
in
outsb
fldenv
sbb
stos
cmp
test
xor
or
das
mov
adc
inc
mov
icebp
test
dec
rcl
subb
push
icebp
loope
push
ja
jmp
mov
outsb
repz
sub
dec
sbb
cld
fisttps
xorb
jnp
out
push
stos
out
xlat
mov
les
sbb
in
push
addl
vprotw
xchg
push
call
mov
pop
or
xchg
jmp
gs
sar
aam
jl
jns
shll
into
in
mov
jo
and
mov
or
iret
push
addr16
inc
xchg
jb
pop
mov
sbb
mov
inc
dec
sub
mov
xor
sub
xchg
mov
push
outsb
dec
mov
stos
push
cmp
pop
pop
pushf
lcall
cmp
repz
push
inc
rolb
fistl
xor
dec
loope
mov
mov
xlat
into
or
out
mov
xor
test
jmp
cld
xchg
stc
jne
sahf
mov
in
cld
xchg
mov
in
rclb
sbb
decl
icebp
sub
das
pop
pop
cmp
mov
and
in
xor
mov
sub
iret
or
shl
inc
clc
rol
popf
mov
dec
cmc
jecxz
movsb
jnp
sub
push
cli
push
in
insl
in
mov
mov
mov
cmp
arpl
or
outsb
mov
enter
in
int3
pop
pop
jp
fisubrs
popl
xchg
rcll
xor
popa
xchg
jb
in
push
jbe
subb
stos
jns,pt
jge
test
sbb
and
adc
sub
mov
mov
lock
inc
cwtl
cli
test
rolb
loope
enter
sub
pop
ret
int
mov
sbb
leave
movsb
stc
or
pop
shll
push
mov
daa
adc
je
fdivrs
or
jge
fisubrs
in
push
cmp
adc
pop
outsl
sahf
movsl
in
mov
call
sbb
fwait
lret
push
aad
mov
fwait
xchg
stos
insb
in
dec
sub
mov
xor
in
mov
pop
js
mov
adc
push
sbb
xor
push
cmp
int
sub
add
pop
in
test
aaa
inc
dec
mov
ret
mov
xor
sbb
jmp
mov
nopl
jns
addl
in
dec
dec
add
in
les
aas
sti
repz
inc
into
and
jge
dec
out
pop
cld
out
icebp
int
test
xchg
xchg
imul
jnp
decl
rdpmc
loop
inc
dec
in
inc
cmpsb
loop
pusha
mov
adc
add
lock
aaa
or
mov
mov
fwait
inc
adc
in
mov
les
mov
xorl
loop
or
ds
mov
clc
jg
loopne
mov
lds
mov
and
cmp
pop
mov
out
xchg
adc
outsb
mov
adc
out
inc
loop
andl
sub
enter
mov
shl
stc
and
mov
push
mov
addb
cld
dec
mov
outsl
test
loope
nop
lods
in
adc
mov
xlat
or
pushl
mov
jmp
pop
push
add
jecxz
mov
test
adc
repz
xor
jmp
cmp
cld
cmp
mov
pop
adcl
add
cmpsb
adc
jb
push
mov
notl
test
scas
aad
loopne
dec
add
jecxz
scas
repnz
cs
xchg
jnp
cmp
dec
aas
dec
pop
mov
xor
insb
aad
xchg
push
sub
cmpsb
xchg
cmp
xchg
mov
mov
xchg
sbb
popf
push
xchg
repz
data16
cli
icebp
rcl
fs
push
test
sbb
or
adc
pusha
jmp
or
sub
push
xlat
iret
jb
push
bound
cli
dec
test
jb
sbb
sub
xchg
xchg
sub
mov
js
cmp
gs
jmp
mov
hlt
mov
shrl
mov
insl
in
mov
mov
mov
cmpb
jp
xchg
scas
adc
mov
jns
mov
pandn
das
inc
jmp
push
daa
dec
xchg
in
mov
xchg
push
adc
or
lret
xchg
ret
pop
aad
iret
stos
sbb
mov
out
or
xchg
fsts
pop
pop
mov
lcall
mov
pop
push
cmp
cmp
sub
mov
inc
rorl
aas
or
xor
mov
mov
adcb
lcall
lds
dec
sub
push
cmp
fldenv
mov
jne
mov
push
cmp
jo
stc
push
xchg
or
xchg
jne
jecxz
or
je
dec
test
mov
adc
test
sub
add
mov
push
cmp
sarl
ss
popf
xchg
cmp
ds
mov
in
into
aam
and
push
rolb
pop
or
inc
adc
loop
mov
dec
repnz
sbb
push
lods
inc
inc
jge
gs
adc
and
sub
cs
push
lret
mov
xor
fisubrl
aaa
das
cli
mov
and
mov
leave
xchg
cld
dec
fwait
pop
femms
cmp
test
test
in
aas
lock
cwtl
sbb
and
call
push
pop
andl
ljmp
out
fmul
nop
cwtl
arpl
out
jo
mov
ret
mov
mov
pop
push
push
and
fcoms
or
dec
pop
or
into
pop
je
push
pop
jmp
movsb
loop
es
insl
xor
add
test
push
mov
and
push
loope
stos
fildl
push
mov
jnp
jg
and
call
xor
stc
lea
add
mov
cmc
fxch
jg
aaa
add
dec
or
jg
xor
in
dec
shrb
outsb
les
sbb
fldcw
idiv
pop
jp
sub
dec
shr
push
cltd
sub
addr16
push
movsb
jns
stos
stos
pop
in
add
stc
cmc
fwait
or
jns
test
mov
xchg
adc
pushf
dec
add
push
popa
and
sub
xlat
push
add
cmp
stos
jmp
or
sahf
mov
push
lods
pop
test
xchg
or
dec
aad
pop
add
pop
add
jp
mov
lea
pop
add
negl
daa
cmp
xor
mov
imul
sub
jb
pop
loopne
push
sub
testb
push
ficompl
cmc
and
shrb
mov
mov
push
lret
stos
mov
int
fmul
into
loopne
cs
mov
xlat
sbb
ljmp
sub
out
mov
mov
jne
out
xlat
arpl
es
sbb
fs
dec
out
inc
mov
mov
lea
adcb
cwtl
mov
inc
lods
jle
je
imul
outsb
adc
add
pop
cltd
std
mov
shlb
jns
cmp
xlat
or
sub
pop
and
and
icebp
scas
mov
loop
loop
jg
xor
outsb
movsb
sub
add
stos
push
rol
cltd
in
in
xchg
mov
mov
sub
inc
dec
pushf
fmull
sub
paddd
adc
dec
fwait
cmp
pop
jmp
sub
lods
neg
pushf
mov
push
or
jne
into
jbe
das
cs
sbb
lods
pop
std
movswl
jne
jae
pop
inc
fwait
dec
lds
sbb
ljmp
xchg
stc
or
pop
imul
jns
and
je
loope
mov
stc
pop
scas
mov
xchg
sub
xlat
mov
out
push
add
enter
jnp
pop
push
fdivrs
xchg
mov
adc
or
rcrl
gs
iret
out
add
imul
popa
mov
or
mov
pop
sub
xor
loopne
or
in
aaa
aam
icebp
ret
jg
and
cmc
adc
test
xlat
xchg
cld
ljmp
loope
push
sbb
das
js
push
xchg
sub
cli
das
into
xor
roll
fnstcw
movsl
adc
stos
mov
out
lea
adc
rol
dec
cmp
xor
xorb
jp
push
and
jl
imul
inc
mov
cmpl
xlat
adc
jne
cmc
or
gs
lret
jbe
add
push
imul
push
stos
and
adc
mov
addr16
jecxz
sub
out
in
sub
fwait
mov
loopne
pop
mov
out
lahf
je
rcrb
cmpsl
xor
mov
ss
or
cmp
cwtl
sbb
sub
pop
cmp
push
pop
sbb
jl
xchg
pop
scas
xor
iret
sbb
out
cmp
out
push
pop
xor
jecxz
lahf
lods
jb
fmuls
mov
hlt
xchg
dec
test
icebp
in
cmp
es
xor
dec
cmc
lea
shrl
fadd
in
fsubrs
in
mov
jne
dec
xor
movsb
out
aas
inc
pop
in
popf
add
fisubrl
data16
test
repz
nop
loop
cmp
xor
movsb
inc
cmpsl
ret
push
pushf
stos
out
inc
lea
push
push
sub
inc
cwtl
dec
shlb
sub
arpl
lds
or
jb
out
sub
jne
pop
jno
in
pop
xor
lret
pop
ds
outsl
mov
pop
cmp
loop
cmp
mov
dec
mov
add
lret
cwtl
jbe
cmp
mov
sub
inc
mov
push
mov
lahf
lret
mov
jecxz
clc
mov
push
mov
cmpsb
cmp
aad
leave
test
lret
mov
mov
and
popl
jge
ljmp
imulb
imul
add
pop
inc
sub
dec
and
outsl
icebp
loope
push
mov
lcall
adc
add
cmc
int3
aad
inc
scas
pop
imul
xor
cmp
gs
leave
adc
inc
xlat
dec
jmp
bound
xchg
outsb
ja
push
bound
xchg
sbb
push
movsb
jmp
cmpl
andl
out
jmp
xchg
addr16
imul
adc
outsb
int
out
mov
adc
ficoms
and
andb
jb
in
mov
hlt
test
push
push
int
xchg
xor
ss
movsb
dec
pop
enter
sub
inc
add
xchg
push
loop
add
out
adc
jge
add
push
jo
in
pop
nop
xlat
xchg
lock
xlat
inc
les
cwtl
cli
pop
cmp
cltd
out
sub
inc
pop
push
test
adc
andb
sub
mov
and
cmpsb
ljmp
add
and
cmp
mov
mov
jno
cwtl
and
mov
jns
push
xor
fcmovu
cli
add
adc
mov
sti
fwait
shll
sbb
rolb
jl
push
jne
leave
fcomps
scas
jne
jmp
les
xchg
fdivrs
add
adc
jo
push
cmp
scas
in
test
ficoml
and
fs
pop
out
ljmp
subb
jle
jg
push
pop
cmp
test
or
jb
aad
push
pushf
enter
lods
lods
mov
sub
push
inc
cmpsl
cmpsb
hlt
pop
in
lods
cmp
mov
int
lcall
xor
mov
cmp
out
into
push
pushf
out
outsb
dec
out
pusha
test
jg
xor
add
cmc
dec
sarl
xchg
je
or
cmpsb
sbb
dec
subb
inc
iret
push
add
mov
xor
loopne
out
jb
insb
mov
outsl
andb
ja
or
shlb
mov
out
inc
fiaddl
fsubl
stos
mov
mov
sub
push
shl
stos
stos
repz
out
sti
mov
pop
out
shrl
push
xchg
fwait
inc
push
lea
sbb
push
mov
bound
inc
cmc
pushf
ljmp
pop
aad
mov
jg
out
pop
jg
negb
pop
in
rcr
iret
mov
ret
push
jb
sub
inc
aam
loopne
clc
movsl
fcomps
jne
and
dec
iret
and
inc
mov
das
sti
and
mov
cmp
fsubrl
divb
enter
push
sti
or
cwtl
test
mov
dec
xlat
xor
pop
push
and
les
incl
or
mov
aaa
sbb
in
mov
xchg
repz
scas
daa
xor
in
and
dec
mov
sbb
pushf
test
xchg
add
and
jmp
test
mov
sbb
mov
xchg
pop
and
loop
and
or
mov
and
out
cmpsb
mull
lods
data16
cmp
outsl
nop
lods
mov
test
daa
pop
mov
sbb
push
inc
cs
scas
adc
cmpsb
lea
dec
test
dec
and
lahf
fs
pop
jg
nop
and
jnp
push
mov
push
push
push
loopne
icebp
mov
ds
jae
push
daa
dec
sbb
movsb
arpl
test
dec
cmp
xor
test
xchg
sti
fnstcw
pop
and
push
push
stos
dec
gs
mov
movsb
idivl
cmpps
sbb
das
sbb
mov
cmpsb
stos
or
insb
add
xchg
fwait
mov
adc
mov
cwtl
scas
sub
mov
scas
pop
mov
test
mov
punpcklwd
and
push
sub
imul
adc
outsl
sub
sub
jl
shr
cmp
in
sbb
jo
hlt
inc
or
lret
cmp
jns
xor
data16
test
mov
inc
pop
mov
xchg
fidivrs
bound
adc
negl
lcall
outsb
sub
mov
enter
call
movsb
dec
outsl
clc
jae
notl
and
int3
popa
lret
sbb
xor
cmp
sub
addl
pop
test
sbb
fsubl
jge
mov
ja
mov
fwait
mov
jbe
inc
pop
sbbl
pop
xchg
and
jnp
cmp
and
ret
xchg
pop
shlb
dec
ja
inc
cld
js
pop
sti
ja
cmp
pusha
jecxz
movsl
push
lds
jo
fnstsw
sbbl
addl
xchg
push
adc
rclb
mov
ret
xchg
cwtl
xor
out
and
sub
jns
shr
push
ds
jmp
push
pop
pushf
mov
push
out
popf
adc
mov
mov
jbe
push
lods
ret
adc
inc
push
add
cmp
stos
pop
dec
fisttpl
or
popl
iret
into
xor
xor
pop
or
sub
xchg
pop
dec
mov
clc
stos
sub
mov
fcoml
aad
cltd
scas
orps
xchg
mov
mov
imul
loopne
je
mov
dec
dec
mov
in
push
in
aam
movsb
mov
out
popl
jo
ret
push
pushf
mov
das
cmp
aam
jl
sbb
cld
ss
in
cmp
mov
push
sti
lret
insb
popf
out
push
mov
out
sahf
push
out
mov
xchg
shll
mov
push
push
lret
jno
orps
xor
pop
pusha
clc
inc
testl
or
outsb
scas
and
push
fildl
push
shll
cmpsb
cmpsl
movsl
jecxz
xor
movl
int3
sbb
xor
and
dec
mov
inc
insb
nop
fsubr
pusha
push
sub
test
jnp
sub
jne
mov
inc
popa
fs
pop
pop
mov
add
mov
loopne
or
mov
add
shll
lahf
jno
jg
idiv
xchg
jecxz
shl
popf
aas
imulb
dec
arpl
adc
push
mov
imul
notl
movsb
lods
leave
outsb
xchg
lods
xor
aaa
sbb
ss
jl
adc
out
flds
ljmp
jecxz
push
xchg
adcb
adc
and
push
loopne
sbb
push
jmp
and
fwait
sbb
xchg
jns
ret
mov
xchg
into
repz
or
mov
ja
push
mov
pop
int
sahf
push
mov
jnp
int3
out
jns
pop
mov
lods
gs
addr16
adc
push
lds
repz
or
or
fs
fs
mov
mov
pop
cmp
lcall
mov
xchg
repz
cltd
xchg
and
aad
filds
outsl
and
flds
lret
cmp
pop
insl
popa
xor
testl
hlt
pop
sub
mov
mov
pop
or
xchg
out
int
cmp
cmp
xchg
pushf
lds
jb
xor
fs
adc
dec
mov
pushf
xor
mov
and
and
mov
clc
pop
and
sbb
inc
out
lods
orb
sahf
push
faddl
gs
into
outsl
mov
add
push
xchg
push
sub
das
rorb
push
sub
ds
sbb
jp
js
and
mov
adc
ja
hlt
dec
jmp
pop
jbe
xor
mov
scas
mov
adc
mov
scas
ret
cltd
addr16
mov
insl
and
adc
xchg
mov
mov
ljmp
in
fistl
xchg
xor
fbld
dec
push
lock
dec
sti
fsubrs
sti
daa
pop
jns
add
outsl
inc
scas
into
jo
cmc
adc
test
pop
xchg
push
scas
jne
loopne
push
xchg
mov
ljmp
aaa
adc
xchg
icebp
push
movsl
inc
adc
stos
mov
jno
or
sub
das
out
ss
pop
sub
jb
fists
into
scas
push
sarl
jmp
sub
subb
daa
int
popa
dec
mov
add
repz
fimuls
int
cmc
pop
sbb
push
jge
mov
sub
push
xchg
pop
out
add
inc
rol
xchg
jnp
mov
adc
repnz
fs
cmpsl
lods
pop
lcall
nop
pusha
decl
insl
xor
flds
sbb
divl
out
mov
aaa
pop
fwait
mov
sub
out
shl
outsb
or
loopne
lock
outsb
daa
push
and
lods
repz
push
inc
leave
mov
add
nop
pop
add
sarb
stos
es
aad
shlb
mov
test
add
lea
push
add
mov
cwtl
mov
cmp
mull
jmp
cmp
aaa
dec
ror
nop
dec
loop
xchg
pusha
sbb
in
xchg
cmp
sbb
mov
inc
adc
les
cmp
pop
mov
add
cmpb
mov
push
js
in
nop
pop
and
add
cmp
mov
cmp
daa
cmpsl
in
mov
jno
cmc
jp
shlb
pusha
jp
fnstenv
addl
enter
cmp
in
fsubr
fsub
test
incb
es
orl
xchg
fs
mov
loope
inc
push
cmp
push
imul
daa
adc
mov
pop
or
stc
jg
lahf
repz
lea
das
cvtpi2ps
cmp
xchg
sbb
cmp
xchg
jle
add
shrl
cmp
and
std
mov
dec
xchg
stos
in
dec
add
pop
mov
outsb
and
scas
cs
fisubrs
xchg
cmp
or
lds
cmp
jne
jg
adc
cmp
add
lods
sub
dec
push
outsl
xchg
push
jae
rcll
mov
pop
cwtl
cli
les
loop
push
rcr
ret
sahf
or
ret
lcall
mov
in
scas
and
mov
in
xchg
stos
aas
lock
push
jne
or
test
out
xchg
ljmp
cmp
jge
xchg
add
jnp
cmp
push
add
xlat
inc
fstp
mov
cmp
fstpt
insl
or
std
inc
dec
bound
push
sbb
pop
pop
cmp
dec
loop
ss
out
jle
push
inc
ja
inc
push
test
mov
pop
mov
inc
dec
mov
scas
aam
add
loope
cmpsl
aad
mov
sbb
pop
mov
mov
and
dec
xchg
push
or
mov
int
xor
push
cli
cmp
fwait
add
or
xchg
cmpsl
push
sub
bnd
int3
jae
shr
or
outsl
xchg
xlat
sahf
daa
sub
mov
idivl
scas
xor
popa
ret
mov
dec
cli
jecxz
pusha
adc
fsubs
cltd
cmp
lods
pop
jne
je
jmp
mov
lret
push
fistps
and
push
andb
mov
push
push
das
stos
xlat
pop
jmp
pop
dec
sub
sub
nop
cli
pop
out
inc
pop
push
cmc
rcl
dec
inc
rcll
cmp
sub
shrl
pop
psubsb
mov
or
lds
cs
sahf
mov
sahf
jo
mov
sbb
cmpsb
and
fcomps
cltd
mov
negb
repz
ljmp
das
lods
and
loope
sarl
outsb
orl
pop
out
daa
xchg
insb
xlat
movsb
mov
mov
jae
in
mov
inc
mov
lods
fdivr
sub
mov
mov
inc
js
je
inc
xor
pop
arpl
cmp
nop
rep
adc
dec
adc
pop
gs
adc
dec
test
pop
push
or
clc
xor
or
jle
mov
int3
pop
decl
mov
out
sub
add
outsb
in
in
sub
sub
mov
add
mov
push
push
pop
aad
inc
int3
add
ret
mov
xor
rcll
rol
aam
adcb
xor
dec
push
imul
dec
sbb
es
add
inc
ds
test
sub
push
adcb
jbe
aad
daa
inc
pop
enter
push
dec
dec
xor
js
jmp
pop
out
aam
arpl
cmc
sbb
add
mov
sbb
mov
sub
sub
aad
push
cmpsl
addl
mov
push
cwtl
es
xor
repnz
push
test
cmpsl
lods
dec
xor
into
mov
test
xor
xchg
cmpsl
ss
pop
add
jnp
enter
and
xor
jno
adc
out
lock
jecxz
dec
ret
mov
mov
sbb
jne
adc
jae
jbe
imul
push
push
cmpsl
sbb
inc
sub
adc
stos
call
sbb
mov
sbb
inc
inc
fs
ds
loop
xor
out
addb
aad
in
cmp
pop
mov
cmp
dec
sti
rcrb
and
inc
fnstcw
pop
scas
or
imul
push
dec
in
popa
std
rcrb
fdiv
sub
mov
push
je
insl
test
inc
fldenv
lods
pop
mov
fwait
aaa
pop
pop
or
test
je
xchg
mov
cmp
cltd
iret
push
mov
pop
jae
movsb
insb
lcall
mov
shll
popf
fnstsw
or
nop
add
aaa
jo
dec
sbb
and
setle
adc
jnp
sub
xchg
cmp
sahf
test
jnp
pushf
lret
mov
test
test
vcvtpd2psx
xchg
xor
and
push
scas
lcall
movsl
xchg
xchg
ss
pusha
fstpt
or
inc
cmpsb
shlb
insl
xor
pop
in
push
or
scas
out
cmc
adc
test
aaa
ficoms
loope
fdivr
fnstcw
daa
ljmp
push
cmp
js
mov
movsl
xlat
mov
sub
leave
imul
push
inc
testb
mov
add
outsb
push
in
enter
sbb
add
in
cmc
mov
call
push
push
xchg
inc
ljmp
xor
jmp
add
imul
dec
mov
sub
sub
adc
cmc
test
dec
mov
lahf
xchg
lods
mov
pop
xchg
out
sbb
jecxz
and
js
mov
mov
push
fildll
pop
and
sbb
lds
inc
push
je
lods
lret
lds
out
jae
ss
add
icebp
daa
dec
rcrb
or
inc
stc
shlb
mov
push
std
loop
inc
inc
mov
pushf
adc
jbe
xchg
jae
adc
dec
mov
adc
div
out
jnp
xchg
loopne
stos
fidivl
jge
sbb
es
jno
aas
mov
ffree
cmp
dec
cltd
sub
loope
inc
add
sahf
test
ja
fnsave
addr16
push
mov
mov
xor
clc
cmp
sbb
out
fisubl
mov
sbb
fldenv
mov
rol
dec
pop
std
pop
jnp
and
test
neg
lods
sub
cltd
sbb
mov
out
pop
into
sub
mov
sub
adc
push
pop
cwtl
jge
inc
adc
pop
jb
call
insb
and
push
adc
test
imul
pusha
lds
jmp
adc
out
scas
out
push
push
ret
shlb
or
pop
xor
mov
mov
aas
rcll
imul
es
push
fwait
ljmp
adc
adc
inc
sbb
and
mov
xor
pop
mov
cmp
into
test
lcall
stos
inc
sbb
adc
aaa
sbbb
xor
mov
loop
mov
xor
scas
adc
out
push
mov
test
sarl
cmp
loopne
int3
pop
scas
into
imul
dec
fidivrs
inc
add
mov
je
loope
mov
fs
outsb
or
jb
xchg
dec
cli
pop
adc
fwait
mov
xchg
ds
jns
and
les
adc
dec
inc
xor
jge
inc
mov
lcall
movsl
shll
cmpsl
popf
sarb
dec
xchg
mov
mov
mov
test
stc
clc
fiaddl
jae
adc
sbb
fimuls
mov
xchg
das
jb
out
add
push
mov
pop
push
push
xrelease
mov
jp
shll
jns
inc
popf
lds
push
jmp
xor
pusha
sbb
pop
dec
filds
daa
pushf
or
adcl
jmp
sbb
xchg
ret
addl
mov
mov
cmpsl
repz
clc
dec
xchg
push
sbb
mov
jecxz
add
mov
loop
jnp
xorl
fs
daa
mov
jg
sti
shll
mov
test
movsl
imul
and
xlat
mov
push
clc
dec
adc
cmp
mov
fcmovbe
add
add
inc
add
gs
mov
dec
pop
insb
leave
jp
jp
sbb
pop
jmp
fs
lods
and
fnop
mov
aaa
xor
xchg
sti
lahf
dec
xor
orl
lahf
rcr
add
add
ret
adc
fldcw
xor
jo
call
hlt
fsubs
out
out
movsl
pop
sbb
dec
popa
xor
outsb
les
stos
shlb
mov
lea
sti
pusha
idivl
push
mov
lds
das
std
sub
jne
inc
pop
push
arpl
popf
cwtl
hlt
out
xchg
aad
pop
dec
jle
sbb
je
scas
arpl
and
cmp
je
icebp
sbb
cli
out
mov
push
movb
inc
loopne
add
push
push
inc
xchg
out
fwait
xchg
aam
outsb
pop
adc
outsl
and
scas
xchg
xchg
rcr
push
imul
jnp
xchg
mov
popa
andb
repnz
pusha
mov
jae
lret
addr16
hlt
outsb
out
mov
and
sbb
add
aaa
pop
scas
out
scas
push
push
inc
addr16
inc
and
arpl
imul
or
xchg
pop
mov
adc
mov
mov
rolb
sbb
call
jl
stos
add
push
cmpl
add
push
xchg
cmp
pop
in
lahf
scas
or
dec
insl
sar
hlt
dec
mov
mov
adc
int3
aam
jp
xor
into
cmc
dec
xor
int
fwait
lcall
mov
insb
cmp
mov
xor
or
stos
lods
pop
adcb
inc
sub
dec
sbb
gs
nop
pop
fcom
ret
push
dec
sbb
mov
cmp
cmp
xor
sbbb
cwtl
xchg
pushf
cmpsb
mov
ss
add
jne
insb
scas
addl
or
in
dec
push
sub
and
dec
sub
das
inc
js
mov
test
sahf
push
ljmp
aam
loope
cmp
fiaddl
add
repz
test
mov
mov
jmp
mov
dec
mov
mov
pushf
stos
add
cmpsb
inc
dec
push
test
pop
jmp
dec
lods
xchg
lock
adc
mov
cmpsl
inc
ss
movsb
fcmovnb
push
inc
cmpsb
test
pop
jecxz
mov
jbe
sbb
lock
xor
push
loop
arpl
lods
data16
inc
je
out
xchg
and
pop
daa
lret
outsl
push
xchg
lods
dec
ja
inc
hlt
add
insb
lock
test
lret
rclb
push
lret
lcall
sub
jbe
mov
add
mov
scas
and
out
test
sub
jae
imulb
or
push
and
xor
pop
mov
in
sbbl
adc
cwtl
jns
xlat
xor
cld
lret
loopne
push
test
in
pop
and
push
ficomps
sti
lret
leave
sbb
push
scas
mov
outsb
dec
pop
xor
mov
into
insb
dec
xchg
push
adc
call
push
push
std
ljmp
stos
dec
mov
sub
gs
popa
ja
clc
lret
mov
test
scas
or
addr16
ja
and
imul
mov
jno,pn
scas
add
push
and
mov
loope
mov
fcoml
jl
pop
mov
out
shl
dec
dec
add
mov
fcomp
cwtl
sbb
movsl
sub
xchg
scas
orb
push
cli
cmp
dec
outsb
sti
cwtl
mov
mov
cmpl
pop
sahf
adc
imul
test
das
sahf
push
mov
xor
ja
sahf
mov
lahf
pop
push
stos
xor
push
bnd
xor
add
pop
mov
dec
negl
addl
jecxz
mov
cmp
cltd
pop
rcrb
imul
lock
and
out
dec
movsl
add
xchg
adc
js
in
pusha
inc
hlt
repnz
push
or
pushf
or
or
xor
cld
jmp
das
and
jg
sub
pop
fnstsw
movl
push
lret
mov
out
int
fdivrs
mov
clc
push
sbbb
xchg
xor
out
cltd
push
adc
cmpsl
cwtl
and
xor
fwait
pop
mov
ret
in
adc
andb
dec
stos
flds
ret
inc
das
call
adcl
mov
outsb
mov
mov
popa
lahf
pop
pop
out
lcall
jbe
xor
clc
cld
pop
mov
add
pop
adc
push
mov
jmp
pop
std
ja
sub
fldt
lods
xchg
sub
jns
fsubl
daa
dec
jnp
cmpl
push
shl
sti
and
sub
cmp
lea
add
insl
sub
add
inc
adc
xchg
mov
aam
mov
and
cmp
mov
mov
mov
loop
mov
mov
cltd
and
pop
aad
sbb
imul
insl
sbb
jp
or
dec
in
sbb
jg
xor
fimull
jbe
in
sbb
mov
xchg
andb
inc
data16
inc
mov
mov
sub
add
xor
jmp
jb
xchg
push
pop
mov
bound
pushf
mov
movsb
xchg
cli
fidivl
bound
test
jne
nop
ficomps
mov
aaa
jl
xchg
test
movsl
jno
dec
dec
cld
jno
aam
dec
js
add
adc
or
out
data16
lcall
out
xor
xchg
outsl
aad
iret
sub
cli
popa
sub
xor
movsb
divb
mov
sub
adc
sub
xchg
std
shlb
xchg
add
insl
outsl
mov
xchg
mov
or
mov
clc
cmp
mov
test
dec
cmc
dec
arpl
push
insl
mov
inc
and
adcb
jmp
loopne
xchg
cmp
xor
add
outsb
and
fcomps
inc
fwait
into
arpl
cmpsl
or
shrl
out
xchg
adc
add
xchg
push
and
ljmp
aad
xchg
je
sbb
dec
icebp
jbe
and
cli
lock
mov
pop
fidivrl
and
pop
xchg
cli
lock
test
and
decb
sarb
xchg
mov
fidivrs
stos
mov
add
gs
inc
adcl
and
addr16
fcmovb
push
stos
push
cmp
in
push
movsb
cli
out
scas
inc
inc
cmp
inc
xchg
aas
push
negl
jno
fxch
mov
movsl
testb
aaa
inc
push
lahf
std
rcrb
cld
pop
aad
pop
jl
adc
scas
xchg
dec
or
adc
xor
xchg
inc
sbb
mov
adc
pop
adc
jb
add
sti
punpckhdq
pop
mov
xchg
mov
push
arpl
in
les
and
dec
and
cmp
je
fsub
repz
cltd
push
dec
movsl
mov
popa
dec
dec
shll
ret
cli
mov
mov
cmp
mov
fucomip
and
adc
push
cmp
cmp
lcall
xor
add
sub
sarl
nop
int3
sub
scas
mov
push
sub
lods
ljmpw
aam
dec
ret
and
push
pop
and
push
andb
data16
scas
repnz
addr16
sbb
mov
mov
inc
pop
jl
mov
popa
xor
loop
adc
pop
jl
sbb
outsb
xlat
imul
imull
pop
add
mov
mov
mov
add
lods
xor
lcall
fdivl
int
push
scas
fsubl
push
pusha
lret
adc
out
jle
mov
ljmp
idiv
pop
push
stc
jecxz
mul
mov
inc
jb
rcl
ljmp
sbb
rorb
testb
js
ret
stos
push
loop
jno
sub
adc
push
stos
push
cmpsl
xchg
mov
lock
sbb
xchg
mov
hlt
nop
dec
movsb
aam
and
jae
jbe
gs
mov
cmc
and
and
outsb
mov
adc
jle
push
jmp
jno
sub
jne
lods
mov
stos
lock
dec
insb
aaa
test
dec
cld
or
inc
inc
push
inc
sub
jne
pop
je
scas
pop
mov
scas
arpl
js,pt
jno
into
or
cmpsl
arpl
add
aas
mov
cmp
jo
jl
rorb
dec
repz
in
js
mov
push
pop
add
adc
push
jp
inc
or
dec
and
mov
mov
bound
mov
insb
pop
pop
and
shrl
lret
cmp
movsb
push
ret
test
or
inc
pushf
lahf
push
out
xor
fndisi(8087
pop
sbb
dec
add
push
dec
pop
aam
stos
fcomps
popf
mov
rcll
cmpsb
test
mov
lahf
loopne
push
jl
inc
scas
and
fsts
ja
sbb
pushf
inc
leave
sbb
cltd
bound
cs
cmp
pop
xchg
jge
sbb
push
dec
inc
sbb
pop
pop
pop
out
add
or
add
mov
add
in
mov
in
mov
dec
fcmovnu
and
dec
in
xchg
jp
jbe
mov
arpl
andl
idiv
adc
or
je
sbb
call
int
jbe
cmpsl
mov
mov
jbe
inc
sbb
faddl
xchg
shlb
nop
pop
enter
enter
jbe
testb
insl
shrb
test
nop
cld
test
or
mov
sbbl
mov
dec
xchg
inc
and
pop
push
in
lods
ret
inc
mov
push
pop
xor
dec
aas
insl
imul
scas
inc
jo
add
or
clc
jp
ret
or
icebp
push
mov
jb
js
or
xchg
enter
cwtl
push
int3
dec
xchg
inc
ss
in
enter
sbb
dec
dec
cmp
pushf
mov
mov
loopne
and
popa
sub
data16
xlat
int
mov
push
mov
stc
xor
rcll
push
mov
ljmp
cmc
in
adc
xor
ret
pop
xlat
stc
fcomps
sahf
sbb
mov
leave
leave
pop
pop
mov
push
fistl
hlt
add
dec
int
scas
xor
icebp
cmp
mov
add
shrb
out
roll
loope
shrb
xor
and
push
inc
in
and
in
push
add
jmp
inc
mov
sub
jne
inc
xor
loope,pt
rclb
imulb
mov
cs
loope
lcall
mov
aam
and
jmp
rolb
cmp
das
mov
sbbl
pop
lea
cmp
das
out
pusha
xlat
fnsave
or
mov
aam
lea
pop
pusha
add
cwtl
inc
xor
subb
and
rclb
inc
sbb
pop
sbb
add
fisubrl
sti
loope
scas
movsb
lods
pop
jge
dec
test
push
sbb
sbb
cmp
and
mov
mov
inc
mov
pushf
adc
roll
dec
inc
arpl
pop
xchg
rclb
lcall
into
loopne
lods
sub
or
rorb
push
and
inc
dec
or
mov
pop
rorb
mov
push
add
and
ret
cli
sub
mov
xchg
ja
fistpl
and
lds
add
jle
xchg
cmpsb
xchg
or
push
xchg
or
fldt
das
repz
fwait
push
aad
adc
push
sbbb
pop
add
pop
pop
loopne
das
loopne
mov
or
pushf
ficompl
hlt
fstps
mov
lcall
in
xor
mov
push
sub
shl
pop
repnz
push
jle
rcll
shll
les
sbb
mov
mov
ret
in
xchg
inc
adc
mov
ss
mov
into
inc
or
adc
fwait
jl
push
lea
mov
loope
orb
mov
insb
xor
js
push
lds
mov
fdiv
mov
jnp
lock
or
inc
test
mov
dec
pop
daa
stc
dec
jmp
sbb
mov
test
adc
mov
loop
xor
dec
sbb
and
adc
in
arpl
scas
xchg
aaa
jmp
fxtract
sbb
and
mov
mov
enter
mov
mov
sub
rorb
aam
into
or
mov
pusha
mov
mov
leave
out
sbb
mov
mov
loope
dec
lcall
repnz
imul
arpl
pop
lcall
jp
inc
shrb
in
lea
or
pop
jno
shr
add
cmpsl
mov
lods
mov
jo
mov
es
and
push
popa
enter
sti
aas
xor
out
xor
mov
fbstp
push
imul
das
sarb
mov
xchg
decb
stos
push
sub
adc
jmp
fisubrs
jo
les
loope
mov
pop
xchg
xchg
adc
sub
sub
mov
mov
dec
sbb
adc
rol
xor
push
lods
stc
das
mov
std
mov
adc
push
lret
inc
xor
movsl
aaa
or
fdivs
lcall
clc
mov
mov
sbb
cmp
test
out
cmp
aam
mov
in
in
push
test
shlb
ljmp
lret
push
addr16
inc
inc
imul
jge
mov
sub
jecxz
mov
mov
jnp
enter
xor
mov
orps
insl
pusha
sub
cmp
add
in
cmp
mov
insl
and
pushf
xchg
xchg
pop
and
sbb
cltd
sbb
in
cmova
pusha
mov
mov
xor
ret
iret
add
lock
jno
je
push
xorl
push
sbb
outsb
mov
gs
movsb
dec
ds
in
and
xchg
jp
sbb
pushl
dec
or
mov
cwtl
sub
push
push
sub
fucom
jge
sub
ds
lret
dec
and
scas
and
mov
test
call
pop
xchg
aaa
ljmp
aas
stos
aam
jb
int3
int3
lahf
cmp
out
inc
xchg
fcomi
adc
popa
jbe
push
scas
das
das
enter
mov
jbe
test
push
aad
xchg
lahf
xor
cmpsb
test
aas
jl
pushf
cmp
sbbl
xor
ljmp
repnz
sbb
lret
pop
rolb
xchg
sbb
hlt
repz
lods
pop
cmp
addl
ss
fisubl
rcl
xlat
incl
sub
sbb
enter
ds
push
jl
test
mov
and
imul
pop
imulb
and
es
addr16
inc
cld
cld
lahf
push
add
mov
mov
aad
cli
inc
push
into
enter
fwait
stc
loope
ret
movsb
mov
inc
sbb
jnp
pop
lods
stc
call
pusha
sahf
xchg
inc
pop
rorl
and
inc
shl
xorl
add
pop
dec
std
push
fnstcw
xchg
arpl
mov
lahf
rclb
add
pop
int
in
cmpsl
repnz
repnz
xchg
or
push
clc
movsl
or
daa
sbbb
mov
and
mov
cmp
jbe
subl
xor
mov
andb
lret
jmp
repnz
cltd
add
jnp
xchg
or
sbb
loopne
into
js
push
ficoms
xchg
cmp
out
jle
loop
lea
adc
sub
dec
out
pop
and
jle
fistpll
xchg
sub
or
fsubl
shrb
jge
mov
fwait
mov
shl
aad
dec
jmp
xchg
fs
mov
in
push
es
sti
cmp
cld
repnz
jmp
data16
adc
fnstenv
mov
ss
mov
aad
mov
mov
add
jo
cmp
rorb
cmp
jge
dec
jae
mov
or
jmp
aad
add
nop
mov
lea
subb
sbb
push
push
adcb
fcoml
or
es
or
scas
shll
lods
clc
dec
jg
ljmp
inc
mov
sbb
std
stos
test
xchg
mov
lods
icebp
adc
jge
adc
mov
push
adc
fs
out
mov
cwtl
cwtl
xor
pop
lods
cmpsb
mov
sub
sbb
in
sbbb
data16
and
scas
ljmp
scas
push
aaa
test
lods
push
out
inc
pop
ljmp
addl
hlt
outsl
movsl
lds
lret
cmpsb
popa
iret
inc
sarb
add
scas
stc
mov
into
mov
xchg
sbb
sbb
or
icebp
leave
jb
movl
test
pop
xchg
pcmpeqd
inc
sub
push
add
or
out
test
or
retw
or
add
push
push
gs
mov
decb
adc
fdivs
and
jg
push
xchg
push
sbb
cmpsl
lahf
insb
sbb
test
adc
cltd
add
jp
mov
inc
jg
std
test
ljmp
and
adc
sbb
mov
out
adc
mov
pop
mov
push
mov
xchg
push
add
rcrl
push
fcompl
mov
pop
pusha
and
or
les
pop
sub
inc
lods
shll
dec
icebp
and
pop
stc
and
xor
pop
ja
je
mov
mov
push
or
inc
gs
cmp
fs
jbe
enter
jp
jb
jb
pop
loopne
xchg
push
xor
lock
mov
sti
pop
xchg
xchg
or
mov
pop
ret
pop
repz
push
leave
test
add
push
lret
cld
lcall
jno
add
sbb
popa
sbb
adc
in
icebp
out
stc
jne
test
push
pop
mov
ds
cwtl
sar
hlt
popf
cli
lret
jne
insb
aad
outsl
sti
mov
mov
add
jge
mov
inc
ret
xchg
icebp
cmp
ljmp
xchg
mov
push
sub
popa
jle
in
lock
mov
loop
jnp
jb
dec
sbb
xchg
pop
out
imul
stos
mov
aaa
ret
insl
addr16
in
mov
imul
or
adc
pop
lcall
jno
or
sbb
adc
push
cli
or
ret
sub
mov
inc
in
xchg
cmpsb
sbb
movsl
jbe
dec
stos
shrl
movsl
sub
mov
add
or
enter
lret
lret
lock
dec
push
pop
lcall
mov
popa
mov
mov
sbb
sub
int
sahf
fbld
add
cwtl
arpl
fnop
arpl
loop
pop
enter
dec
sub
stos
and
pusha
in
adc
decl
adc
subl
dec
ja
loopne
aam
jmp
shl
adc
mov
fimuls
loop
jae
xlat
and
push
adc
xchg
mov
sub
jg
jbe
fs
xor
cmp
pushf
data16
lea
sti
jle
cld
cltd
xchg
cmp
push
jne
dec
pop
inc
cs
shrl
test
scas
leave
outsl
jl
shlb
repz
cmp
push
dec
imul
push
mov
repnz
addr16
adc
mov
sub
push
jl
mov
xchg
cmp
xor
push
push
xchg
sbb
add
xchg
insl
lret
in
dec
sub
js
sub
xchg
rolb
sub
je
push
sub
stc
popf
xor
rcrb
or
cmp
pop
mov
fstpt
cmp
mov
and
repz
xchg
cld
aam
mov
mov
out
dec
mov
jl
enter
sub
cmp
dec
push
push
mov
scas
and
cltd
mov
outsl
jecxz
in
inc
mov
add
xor
push
xchg
fs
xor
mov
dec
adc
andb
jge
mov
jo
call
sti
inc
movsl
frstors
push
gs
cmp
stos
inc
int3
shl
sti
push
pop
mov
mov
test
lcall
sbb
ret
pop
pop
mov
push
popf
ret
std
inc
jle
ja,pn
fs
repnz
clc
stc
test
inc
inc
popa
dec
sub
xchg
push
mov
push
jbe
push
gs
mov
cmpsb
andl
fwait
or
mov
int
data16
pusha
add
adcl
or
enter
adc
cmp
aas
adc
scas
mov
lods
or
in
sub
cmp
mov
inc
aam
cwtl
shlb
std
add
cmpsl
gs
mov
lea
xlat
fisubl
xchg
push
push
cmp
xchg
push
sub
mov
clc
hlt
es
mov
pop
in
addr16
cmp
sub
dec
inc
xor
stos
ret
mov
aam
repnz
sub
ljmp
sarb
ret
in
sahf
adc
or
fs
mov
sub
pop
mov
dec
movb
repnz
sti
movsl
daa
pop
dec
out
jns
loopne
xor
cmp
cld
mov
movsl
dec
push
ss
fsts
out
cwtl
push
push
ljmp
dec
ljmp
out
xchg
shr
out
imull
test
cs
sub
lds
push
iret
mov
aam
imul
jmp
push
clc
adc
aas
dec
adc
movsb
push
dec
pop
mov
fildll
ja
cwtl
test
jl
pop
dec
xor
insl
and
scas
dec
andps
out
push
jp
imul
jne
mov
lahf
and
mov
push
push
lea
fsubs
add
jnp
xchg
movsl
pop
jo
cltd
add
pop
push
inc
push
rcrb
cwtl
fxch
mov
xor
mov
or
dec
fsts
ficoms
xor
bound
mov
movsl
push
dec
dec
jge
mov
notb
pop
dec
dec
fstp
inc
loope
fadds
es
popa
jp
sahf
insb
push
aas
sub
jns
xlat
mov
dec
lcall
and
adc
sti
jno
xchg
and
js
mov
or
adc
cmp
inc
in
pop
xchg
sbb
mov
int
xchg
and
nop
pop
adc
pop
cs
fistpl
dec
jb
in
or
jle
mov
push
loope
xchg
push
sbb
ss
push
mov
adc
addr16
orb
mov
jno
push
xor
jmp
stos
test
lock
test
lret
lret
das
jnp
iret
and
icebp
repz
sub
or
xchg
std
movb
pop
sub
out
scas
lods
adc
mov
adc
sarb
addb
inc
xchg
mov
pop
rcll
addr16
push
mov
outsl
lahf
shl
lret
xlat
cmp
push
mov
inc
cmp
lds
or
cmpsl
pushf
dec
into
fcmovbe
jle
ret
ljmp
in
pop
ficompl
adc
jle
je
in
loopne
mov
xlat
and
iret
test
nop
jne
inc
decb
mov
test
inc
loopne,pn
jbe
push
loop
mov
pop
ret
loopne
xchg
les
sub
adc
adc
stos
nop
fs
lods
inc
sahf
idivl
mov
loopne
mov
fildl
mov
or
adc
divl
inc
add
xchg
pop
mov
push
test
jbe
cs
inc
dec
inc
adcb
mov
add
stos
adc
mov
or
out
sub
mov
jmp
repz
and
sti
push
in
pop
sbb
inc
mov
or
inc
clc
inc
mov
push
cmp
lahf
xchg
inc
inc
push
std
push
in
inc
mov
dec
imul
or
push
or
pop
imul
mov
je
jno
pusha
pop
add
sub
jl
adcl
xchg
andl
dec
sbb
add
cmp
aaa
push
addr16
daa
adc
lret
int3
pop
xlat
or
lock
and
fbstp
jns
shr
out
and
mov
and
stos
mov
icebp
pop
xor
pop
nop
xor
cmp
dec
and
push
jne
sbb
lret
pop
xchg
sub
fstl
pop
mov
jecxz
out
into
jns
mov
lahf
jno
faddl
inc
push
pop
enter
jmp
cmp
int
loopne
cmp
hlt
test
push
xchg
ja
sub
sub
enter
movsl
or
adc
ret
inc
ret
popa
shlb
jl
fiaddl
jg
fs
mov
cld
outsl
xor
mov
aaa
and
loopne
xor
mov
aad
ret
fcom
inc
adc
jl
push
inc
popa
pop
js
push
jmp
xchg
xlat
iret
movsl
ja
xor
adc
mov
dec
pop
mov
aam
xchg
cltd
jb
cmp
mov
and
das
clc
xor
gs
sahf
jmp
jge
hlt
push
rcl
jb
int
mov
lea
inc
mov
outsl
mov
cmpsl
mov
movsl
arpl
adc
sbb
lods
cmpsb
mov
adc
sbb
mov
or
dec
lods
mov
imul
dec
lret
jbe
loopne
dec
leave
mull
inc
push
push
arpl
loop
push
leave
mov
pop
in
sbb
push
adc
stos
and
or
lock
jg
pop
add
mov
push
mov
int3
shl
mov
scas
dec
pop
dec
inc
iret
pushf
int3
adc
xchg
sub
mov
pop
mov
iret
lcall
andb
pop
les
out
mov
bound
lock
movsb
xchg
or
insb
cmpsl
pop
in
jb
js
cmp
fmuls
sbb
or
aaa
fcoms
inc
mov
mov
jo
iret
mov
aaa
stos
lahf
mov
icebp
ja
out
inc
push
aaa
sbb
icebp
mov
bound
cmp
into
xor
dec
adc
aad
ljmp
adc
mov
cmp
sub
pop
mov
pop
and
push
pop
les
push
push
subl
shll
pop
sub
add
lret
xchg
dec
or
sti
rorb
test
lods
cltd
xlat
pop
rcl
push
in
push
jmp
push
pop
hlt
bswap
inc
and
stc
and
push
xlat
adc
movl
inc
stc
sti
add
lretw
xor
sbb
je
mov
xchg
jnp
dec
lahf
inc
ja
imulb
cmc
pushf
loop
enter
test
add
xchg
dec
xchg
fdivrl
jl
in
jne
jbe
jo
rdmsr
pop
data16
int
in
dec
and
lret
lock
loopne
adc
pop
je
in
pushf
mov
xlat
pop
xchg
xor
xor
and
fcomps
mov
incb
pushf
es
cmp
dec
add
adc
test
cmp
lahf
xchg
icebp
cld
fwait
jg
or
pop
pop
mov
jae
je
mov
shrl
mov
popf
push
push
gs
data16
pop
data16
add
adc
fs
pop
or
shr
pop
scas
std
and
push
pop
and
xchg
pop
outsb
sarl
push
jl
mov
mov
test
mov
aad
pop
ret
iret
imul
sub
insb
push
mov
mov
sahf
lea
sti
pop
mov
dec
movsl
ss
out
out
insl
cmp
addr16
mov
pusha
aas
aaa
leave
rorb
shl
out
jae
sbb
adc
dec
aaa
cs
mov
and
xlat
ret
sub
lea
or
stos
out
adc
mov
jo
aad
adc
push
sub
cmp
mov
nop
push
adc
cmc
setl
xor
pop
xchg
out
sub
test
sbb
fidivrs
sub
inc
cmp
adc
popf
add
cwtl
cld
inc
mov
pusha
stos
and
and
ficoml
in
and
jp
mov
push
sbb
cmpsb
dec
rcl
leave
imul
andb
cli
into
push
rorb
mov
bound
jne
pop
xchg
push
add
into
stc
outsl
cmpsl
mov
daa
in
inc
retw
loop
mov
lahf
std
inc
lahf
mov
xor
lock
lahf
negb
sbb
enter
in
adc
int
add
std
jge
loop
xchg
inc
or
fsubrs
insl
pop
mov
add
and
jns
adcb
gs
cmp
mov
mov
in
add
mov
int3
jbe
mov
mov
xchg
into
mov
xchg
cmp
push
mov
daa
xor
adc
xor
sbbb
cld
andl
sbb
sar
mov
cmp
sbb
jg
bound
push
arpl
in
jle
mov
dec
push
sub
mov
jl
push
cwtl
mov
xor
cmpsl
xor
adc
or
push
push
dec
outsl
enter
inc
or
frstor
inc
stos
imul
push
rcl
mov
inc
mov
push
mov
int3
pop
jae
add
sub
jb
mov
imul
sub
jge
dec
aaa
mov
jns
insb
cs
repz
pop
fstps
cmpsl
leave
xchg
sbb
jg
shld
xor
sub
shlb
sub
aad
lahf
cmpsl
dec
adc
ja
inc
daa
jne
cmp
shlb
into
aaa
daa
addr16
sbb
lcall
aam
or
outsl
in
repz
dec
push
popl
fimuls
mov
mov
js
pop
pop
cli
inc
add
popf
stos
or
sub
popa
inc
inc
imul
add
mov
xor
xchg
leave
xchg
cmp
pop
xor
dec
repz
js
pop
cwtl
cmpl
xchg
lcall
in
mov
xchg
negl
inc
inc
fimuls
movsl
add
in
adc
es
pop
dec
push
not
ja
je
dec
or
adc
sbb
adc
das
or
fistl
inc
sbb
mov
imul
sti
inc
jae
stos
pop
test
mov
ljmp
mov
xchg
clc
cmp
cli
ret
lods
dec
js
clc
scas
sub
insl
cmp
fdivrl
push
roll
adc
or
mov
cli
leave
sti
mov
addr16
or
cmp
sbb
push
dec
push
push
repnz
std
scas
fwait
xchg
sarl
mov
adc
roll
xor
cwtl
cmpsb
pop
dec
inc
inc
jno
jns
or
add
aaa
fsts
out
dec
dec
sub
xchg
cmp
push
add
addr16
push
test
xchg
inc
or
add
sbb
xlat
movsb
and
sbb
or
sahf
pop
xor
call
psubsb
dec
dec
mov
in
adc
mov
in
dec
ds
sarb
stc
int3
and
std
inc
test
sub
or
std
sub
in
loope
and
sub
lahf
xchg
aaa
mov
inc
movsl
js
les
repnz
sahf
mov
mov
dec
out
mov
dec
adc
int
mov
mov
mov
sbb
cmp
adc
inc
sbb
les
mov
cmc
outsl
psllw
pop
test
gs
sbb
imul
outsl
lret
pop
movsl
dec
nop
or
dec
mov
inc
hlt
add
cmpsl
lods
inc
clc
adc
push
cmp
out
stc
aas
sub
lods
dec
jmp
sbb
xor
lret
leave
data16
and
mov
fs
lock
sbb
xchg
dec
es
pop
inc
sub
jmp
outsl
mov
mov
out
pop
adc
into
pop
mov
test
sub
jbe
sarl
imull
lea
sub
and
in
xchg
fwait
addr16
repz
xor
sbb
ds
scas
ds
mov
cld
dec
and
xchg
dec
sub
xchg
scas
cmp
stos
stos
jno
add
push
jecxz
or
or
outsl
sub
fwait
aam
mov
push
push
scas
std
nop
lods
cmpb
mov
daa
out
sar
lahf
lcall
or
add
repz
mov
bnd
mov
sub
movsb
les
and
test
ja
cmp
or
jne
xor
int3
push
lret
in
std
int3
and
cltd
andb
cmc
sub
subb
and
fs
xor
jp
cmp
mov
rolb
in
fdivl
out
fdivl
push
adc
lods
xchg
push
sbbl
push
inc
cmc
mov
push
scas
adc
jae
push
pusha
hlt
lea
and
loopne
neg
cmp
int3
movsl
mov
push
mov
adc
test
mov
ret
cmp
adc
andl
mov
pop
adc
inc
jmp
addb
xchg
repz
sub
adc
cmp
pushf
loope
test
and
adc
mov
add
cmc
push
xchg
jge
pushf
fsubrs
inc
ret
je
rclb
pop
inc
push
int
sahf
in
popf
bound
sar
popa
stc
mov
mov
pushf
stos
jns
inc
pop
and
push
inc
push
and
leave
fnstenv
sahf
add
popf
fadds
ljmp
hlt
int
xchg
pop
ror
test
inc
sbb
lods
sbb
sbb
cld
loope
pusha
adc
mov
in
xchg
mov
icebp
sbb
outsb
ret
push
jp
loopne
fsubrs
daa
add
push
xchg
pop
dec
jne
pop
scas
add
xchg
movsl
mov
ret
test
jmp
xor
inc
xchg
sbb
insl
or
pop
inc
gs
mov
pop
in
mov
jmp
in
dec
cmp
enter
in
inc
movsl
add
dec
repnz
loop
mov
pop
insb
push
daa
cmc
bound
movsb
mov
dec
sbb
fsts
icebp
mov
loop
popf
in
add
mov
cmovl
sbb
aaa
and
sbbl
faddl
call
iret
cmpsb
arpl
xchg
inc
xchg
out
lret
or
andl
jmp
sbb
fxtract
sbb
mov
fld
sub
mov
fcmovnb
test
inc
mov
imul
lods
loope
mov
test
and
xchg
or
insb
cld
loop
mov
leave
xchg
popf
scas
outsl
adcb
adc
int
shlb
rcll
sti
adc
leave
jle
mov
shll
sahf
cltd
cli
push
sbb
lret
xor
cld
xor
cli
mov
mov
cmp
jmp
mov
stc
inc
jbe
push
lret
rolb
jg
lahf
jns
fildl
pop
nop
das
and
dec
fwait
or
push
outsb
cmc
lock
pop
jmp
push
mov
cmp
movsl
in
jb
in
daa
mov
push
sarl
cmpsb
mov
fsubrs
std
pop
loop
sbb
mov
jno
out
sbb
dec
in
imul
sbb
fmull
cmpl
pop
sti
sti
bound
inc
adcl
adcl
inc
dec
in
dec
pop
inc
cmp
and
jo
pop
sbb
nop
cltd
dec
cmpsl
xchg
adc
mov
loop
adc
mov
or
xlat
sbb
sti
fs
add
stos
mov
adc
adc
mov
stc
arpl
push
pop
or
std
leave
jns
leave
and
std
inc
xlat
jle
pop
mov
xchg
inc
xchg
loop
push
call
in
hlt
pop
cmpsl
cltd
into
in
adc
jb
push
pop
fsts
jecxz
sbb
mov
or
mov
jecxz
iret
jae
jno
in
std
or
adc
cs
cs
stc
mov
dec
dec
dec
aad
mov
fdivrs
sub
out
xor
mov
outsb
daa
push
out
inc
daa
push
xchg
mov
movb
out
js
mov
lea
iret
xchg
insb
inc
cmp
mov
sbb
mov
dec
cmp
pop
or
fwait
fwait
sub
pop
testb
sahf
or
lods
into
dec
imul
imul
dec
mov
pop
les
sbb
xchg
jae
ljmp
cmp
or
dec
popa
fldl2t
cli
shll
jne
mov
bound
fsubs
mov
or
lret
loope
push
xlat
fcompl
andl
mov
mov
push
or
aad
or
mov
push
inc
cmp
iret
sbb
rolb
inc
xor
cmp
std
pusha
test
add
xchg
andl
mov
mov
out
push
mov
xchg
repnz
inc
fs
push
xchg
sub
sbb
bound
push
movsb
jnp
lret
add
push
popa
fstps
mov
sbb
or
into
xchg
adc
and
and
roll
fstps
cmp
into
fsts
pop
repz
insl
insb
adc
arpl
ret
sub
cltd
sbb
cmp
mov
xor
mov
sub
out
jmp
std
shrl
iret
pusha
fimuls
mov
jnp
add
sbb
mov
mov
dec
pop
imull
shll
xlat
jno
mov
in
out
or
and
xor
in
adc
not
mov
in
jecxz
xorb
and
fdivrs
stc
sbb
pop
sti
push
dec
or
cmp
jmp
jl
lret
mov
and
dec
std
movsl
mov
shlb
or
icebp
xor
adc
push
in
je
mov
jp
ds
xchg
ja
insb
and
mov
or
rcrl
mov
notl
popa
fcmovne
inc
shrb
xor
daa
or
fistl
inc
xchg
pop
call
mov
sti
movsb
sbb
or
sub
jge
mull
add
in
or
adc
pop
gs
push
and
mov
xchg
sbb
sub
or
aad
pop
mov
pop
pop
popa
jnp
xchg
xchg
scas
out
xchg
test
aam
xor
les
dec
mov
loopne
mov
insb
or
push
aas
add
imul
cmp
inc
mov
in
je
sub
or
sub
xchg
sarb
popf
rcrl
lcall
pushf
sbbl
insb
jnp
incb
dec
or
out
outsl
lret
cmpsb
aad
push
add
rclb
sahf
cwtl
mov
addr16
dec
aas
das
push
sbb
or
inc
imulb
rorl
les
nop
push
icebp
pop
and
cmp
cmp
xchg
push
inc
daa
faddl
sub
add
mov
mov
cmp
repnz
or
sub
xor
or
or
out
jo
or
rcl
mov
es
gs
pop
in
xacquire
xchg
mov
jecxz
mov
in
insl
in
dec
mov
cmp
pop
add
pop
nop
fsubrs
mov
push
jb
test
add
jbe
lds
sub
push
or
cli
dec
pop
and
inc
mov
add
push
int3
jb
jmp
pop
negb
inc
ret
in
int
mov
out
int3
jmp
pop
add
push
push
jp
ja,pt
ss
fidivl
xor
inc
in
push
loopne
imull
mov
outsl
mov
gs
nop
aam
sub
xlat
stos
xchg
aad
std
cli
outsl
sub
dec
ret
cmp
imul
ret
mov
scas
pop
sbb
mov
pop
sub
pushf
xchg
or
jecxz
pop
add
or
pop
fwait
es
add
int3
aaa
pop
sub
and
pushf
and
scas
mov
jmp
pop
adc
ret
adc
imul
mov
push
mov
mov
roll
pop
out
bound
pop
jnp
fnstsw
lods
cld
test
gs
scas
mov
aad
push
in
sbb
mov
call
pushf
dec
popf
jmp
jecxz
negl
imul
mov
sbb
inc
add
insl
icebp
inc
pop
mov
add
mov
xor
ds
xchg
inc
pop
jns
aas
and
out
pop
fdivs
arpl
add
addr16
push
je
mov
lret
dec
and
push
mov
repz
jle
test
fwait
mov
jecxz
arpl
dec
aaa
movsl
and
mov
loopne
jbe
jle
fistpll
cmpsl
aaa
js
mov
in
mov
sub
test
sbb
lret
sub
mov
or
adc
add
lods
inc
or
xor
jno
test
pop
sbb
sti
mov
js
daa
outsb
push
or
imul
pop
gs
int
xchg
and
and
lret
xchg
cmp
push
out
or
xchg
sub
fs
mov
outsl
jne
daa
sbb
inc
push
lret
aas
lods
loope
dec
push
loope
pop
xchg
divb
std
inc
or
pop
sbb
jl
xor
mov
popa
ret
pop
adc
sub
jl
adc
push
scas
js
push
mov
in
fwait
stos
enter
aam
lahf
pop
inc
out
loopne
sahf
daa
cmp
mov
test
cmpsb
inc
fstl
and
int3
and
fbstp
lock
ss
cmpsb
pop
mov
nop
ret
ja
daa
fs
aas
mov
enter
out
xchg
pop
inc
and
jno
sbb
push
lods
in
aad
scas
xor
jp
pop
mov
cmp
dec
cmp
inc
imull
sub
inc
test
pusha
rcl
les
or
dec
fdiv
cld
lods
aad
mov
stc
cmpb
push
es
mov
mov
mov
mov
mov
jb
fists
inc
mov
xor
jp
popf
arpl
xchg
xor
stc
mov
sbb
mov
sbb
fsubs
loopne
das
imul
in
sbb
jnp
scas
inc
enter
mov
dec
mov
daa
test
loope
aas
and
push
jle
jp
cmc
nop
xlat
or
mov
pop
add
mov
loop
in
or
or
ret
jb
jle,pt
or
scas
cmp
adc
insb
cmpsl
mov
insb
mov
dec
add
add
xlat
pop
and
in
cmpl
inc
rcrb
insb
test
test
out
dec
pop
push
int
mov
mov
sahf
cmp
xor
adc
xchg
enter
test
out
mov
mov
data16
cmp
xor
fbstp
push
jp
xchg
mov
pop
jae
jns
aad
sub
adc
mov
sti
add
and
or
push
fsubrl
bound
dec
jb
cmpsl
dec
clc
call
jo
fs
and
adcb
lock
xlat
mov
sbb
xlat
xchg
mov
pop
cmpsb
js
mov
mov
js
in
sbb
dec
jo
xor
dec
daa
or
jns
sbb
shll
jmp
add
mov
jmp
cmp
cmc
xchg
bound
sub
inc
or
sbb
cmp
in
jns
jmp
inc
mov
es
ret
push
push
adc
inc
fldenv
jecxz
mov
mov
pop
dec
adc
jp
fisttpl
cld
mov
repnz
fisubl
addr16
out
mull
add
dec
lahf
push
into
jnp
inc
mov
ret
xor
int3
add
inc
add
inc
jp
push
iret
mov
push
loope
mov
pop
pop
inc
in
inc
push
in
mov
jge
and
ret
sub
sub
pop
inc
push
dec
test
xchg
inc
jns
mov
push
scas
mov
std
nop
aam
jle
add
add
outsb
adc
or
fldenv
cmpsl
cmp
add
jne
xchg
mov
mov
sbb
lock
lods
into
cmp
mov
bound
cwtl
mov
xchg
mov
pop
jg
mov
lock
insb
xor
imul
cmp
mov
lock
pop
fs
dec
das
jge
mov
insb
cmp
xor
in
inc
sub
xor
inc
mov
push
inc
cmc
into
fcmovnb
adc
cmp
imul
test
dec
sbb
out
mov
mov
and
and
sub
dec
inc
call
aad
mov
jl
adc
jge
jne
push
dec
sarl
cmc
mov
and
sub
mov
dec
xchg
cmpsb
lahf
jnp
jnp
sbb
cmp
andl
adc
imul
sbb
nop
cwtl
cmp
imulb
mov
xchg
mov
fwait
mov
ds
sbb
aaa
iret
xchg
dec
in
fwait
lods
pop
frstor
or
cmp
out
outsl
mov
mov
lret
cmpsb
scas
jno
test
movsb
adc
mov
push
jp
fsubr
mov
loopne
out
mov
pusha
imul
les
sbb
lock
dec
mov
mov
xor
call
cmpsl
popa
popa
repz
stos
aad
addr16
test
test
icebp
add
in
pop
add
in
in
daa
push
aaa
cmp
and
xlat
cmpsb
imul
pop
adc
push
aas
push
adc
inc
jp
mov
out
ss
add
mov
mull
cmc
mov
or
mov
mov
test
das
jno
adc
inc
xor
mov
call
je
movsl
mov
pop
and
mull
xor
cmp
push
jo
ds
ljmp
cli
cmp
in
arpl
jg
jecxz
push
dec
addb
jae
repnz
mov
xor
lea
scas
ja
or
decl
loopne
push
stos
test
iret
inc
push
sbb
xlat
or
test
mov
lods
mov
jmp
push
inc
sbb
sub
add
lods
call
je
xchg
les
xlat
mov
pop
cld
sub
pusha
cld
mov
jmp
rep
pop
mov
fs
xchg
movsl
imul
dec
cmp
das
jp
mov
inc
adc
fildl
or
push
inc
inc
test
fists
aaa
or
enter
ret
sbb
add
ficoml
cmpsl
adcb
jge
cmp
mov
sti
mov
bound
inc
pop
insl
mov
mov
mov
fldpi
adc
sub
sub
pop
adc
cwtl
sub
notb
imul
push
je
rcrb
mov
lcall
and
push
dec
sti
push
les
dec
shlb
push
aas
xchg
xor
mov
popf
push
dec
movsl
jl
fdivrs
mov
jl
and
inc
mov
pop
push
in
pop
movsl
mov
pop
mov
mov
clc
sbb
das
or
adc
ds
jo
and
lret
arpl
ret
and
fwait
inc
lret
xchg
daa
mov
pop
test
das
push
mov
cmp
cld
adc
ja
pop
xor
int3
sbb
mov
lods
scas
cs
jns
dec
in
je
and
andl
arpl
out
jp
jne,pn
loope
push
xchg
loopne
movsl
dec
push
dec
pop
sub
outsb
scas
inc
popa
mov
scas
mov
je
cwtl
inc
loopne
mov
mov
xorl
or
adc
mov
or
xor
aas
movl
enter
push
iret
or
ret
jge
lcall
std
fstl
mov
fwait
cmp
xor
das
loop
adc
jno
sbb
adc
pop
ret
dec
jbe
stos
mov
repnz
int3
scas
or
sbb
fildll
push
fdiv
idiv
icebp
cmpsb
aas
cmpb
inc
lcall
add
push
push
addr16
lahf
hlt
lods
lods
pop
into
jnp
stos
ds
mov
adc
and
mov
out
adc
sub
mov
pusha
xchg
mov
testb
lds
movsb
push
test
jle
int
std
mov
sbb
mov
mov
movsl
dec
sub
pop
jl
sbb
sbb
sbb
pop
push
pop
jb
dec
or
inc
lea
out
mov
mov
fcmovu
xchg
mov
jl
les
lock
cmp
sub
and
pop
add
in
push
hlt
sti
mov
call
lret
mov
mov
bnd
in
cmp
cmc
lsl
adc
sahf
push
out
sahf
sub
pop
or
test
insl
dec
sti
push
cs
outsb
in
xchg
push
bound
cmp
ficompl
lea
into
sub
out
in
jge
sbb
shll
paddb
pop
or
out
pusha
sahf
pop
out
mov
cmpb
into
addr16
shlb
add
inc
mov
fnsave
xor
jl
loopne
cltd
arpl
dec
outsb
popf
imul
movsb
cli
sbb
adc
mov
mov
addl
add
mov
pop
add
call
xchg
scas
or
jg
lret
mov
dec
in
out
inc
mov
add
mov
pushf
leave
vhsubpd
cmc
lret
out
sbb
and
insl
in
call
push
out
adc
adc
mov
scas
sti
fildll
push
push
jecxz
push
xlat
jle
vpshab
pushf
lods
xor
jnp
loope
pop
in
loope
ret
jae
push
int3
mov
add
sub
testl
adc
stc
cmp
cli
jmp
adc
enter
stos
mov
movsb
mov
lret
ret
js
pop
mov
mov
cvtps2pd
movsl
stos
ja
xchg
sbbb
aam
push
xchg
dec
cmp
lahf
push
xor
jge
xchg
cli
dec
cltd
add
or
sub
push
pop
sbb
mov
popf
ret
jnp
add
xchg
mov
insl
lcall
dec
jge
or
movsb
mov
movsb
mov
iret
scas
adc
cmp
adc
mov
popa
dec
add
inc
mov
test
xchg
incb
inc
push
mov
push
cwtl
mov
adc
add
clc
dec
inc
xorl
jge
inc
push
or
add
add
mov
out
cmpsl
cmp
and
mov
dec
mov
stc
cmp
nop
mov
imul
adc
rcl
cltd
mov
inc
repnz
xchg
int3
sbb
hlt
mov
fnstenv
or
rcrl
dec
cmp
xor
outsl
or
pop
ss
push
adc
ja
mov
xor
lds
sahf
jns
sbbl
in
aam
pop
dec
xchg
je
jbe
dec
mov
fstpl
xchg
cmpsl
loopne
inc
std
xchg
data16
pusha
cmc
push
push
mov
out
mov
xchg
sub
jno
outsl
push
ret
push
xchg
push
inc
dec
scas
js
popa
add
push
scas
xchg
sbb
sti
xor
addr16
jg
jge
sahf
jp
cmp
add
mov
sub
rcrb
dec
cmc
add
mov
cmc
ljmp
lcall
stos
push
pusha
mov
dec
cwtl
pop
pop
repz
and
push
pusha
cmpl
cld
aaa
pop
es
aad
inc
std
dec
mov
cmp
or
in
push
sub
in
rcl
dec
cli
inc
jge
js
jbe
dec
adc
and
stos
test
aas
into
adc
pop
adc
add
pop
inc
jbe
cmp
adc
adc
aas
xor
lods
std
or
es
xor
test
call
jle
or
mov
arpl
loope
jmp
ss
pop
or
insl
mov
mov
xchg
add
lahf
and
into
sarl
xchg
jns
data16
cmp
in
and
cmpsl
inc
dec
dec
imul
xchg
sub
int
pop
repnz
mov
adc
sub
xchg
or
test
push
sbb
int
adc
xor
sbb
stos
mov
ret
add
sub
fsubs
add
mov
push
pop
movsb
fstpl
sbb
or
push
scas
mov
aad
sbb
ja
test
and
jnp
sbb
fsubrs
lret
jne
dec
sahf
addr16
cmp
mov
je
in
stc
xor
andl
jle
inc
push
push
mov
shll
cmpsl
sbb
popf
std
jb
movsb
divb
jp
sub
notl
push
movsl
fldenv
sub
mov
sbb
scas
stc
popf
sub
inc
push
adc
pop
inc
hlt
out
jle
jge
sbb
dec
mov
std
cmp
mov
mov
lods
dec
stos
neg
les
push
xor
cltd
addr16
dec
adc
and
imul
cli
xchg
ljmp
and
pushf
cld
out
jmp
shlb
add
outsb
rclb
sbb
ljmp
pop
push
mov
fwait
test
mov
scas
and
mov
lods
repz
and
jg
stc
xchg
into
adc
cmp
dec
push
fidivrl
xor
jmp
dec
in
loopne
push
daa
inc
shr
cs
stos
scas
fcoms
enter
aam
sarb
shll
mov
lods
xor
or
aas
daa
jb
sub
in
pop
ds
fsts
lcall
push
jle
pop
xchg
shrb
rorb
add
loopne
mov
into
cmp
outsb
cwtl
aad
lret
inc
push
push
mov
int3
scas
sbbl
insl
or
movsb
xor
leave
aas
jno
pop
jge
and
inc
stos
rcll
call
repz
dec
xchg
sub
scas
jo
xchg
imul
lret
mov
pop
ja
lods
sbb
idiv
inc
mov
inc
jb
negl
lea
aam
outsb
movsb
inc
out
jmp
lcall
or
popa
dec
push
stos
fwait
mov
les
push
mov
movsl
inc
mov
cld
imul
cld
mov
out
je
repz
js
xchg
cvtdq2ps
dec
lock
push
cmp
mov
gs
jo
xor
ret
ret
push
push
push
jl
push
xchg
mov
sbb
outsl
out
mov
xchg
mov
or
insb
data16
adc
paddb
xchg
icebp
outsb
mov
lods
inc
dec
ljmp
dec
push
lahf
loopne
mov
inc
pushf
pop
mov
mov
sbb
mov
mov
xchg
mov
cmp
adc
inc
dec
jnp
addl
inc
out
lods
xlat
and
ljmp
add
int
jnp
inc
pop
mov
push
or
js
and
ss
fcmove
cmp
lret
cmp
sub
xlat
jbe
jbe
sub
sti
int3
imul
lahf
sub
xlat
xor
xchg
xor
mov
fwait
xchg
inc
dec
or
dec
inc
inc
jbe
sub
add
mov
pop
xchg
dec
push
decb
aas
mov
pop
jp
addr16
fisubrs
xor
str
ret
mov
ret
mov
sbb
sti
ss
mov
adc
or
jecxz
push
xor
mov
dec
in
sbb
add
jmp
ljmp
fs
adc
fidivl
pushl
stc
lods
cvtdq2ps
and
cmc
lea
sbb
jbe
mov
jns
sbb
dec
inc
push
xlat
sub
inc
jb
dec
mov
dec
dec
push
sahf
lods
cmp
and
inc
loop
jmp
cwtl
int3
xlat
dec
push
xor
lds
movsl
jo
xor
lea
and
sub
sbb
test
push
scas
movsb
fsub
push
add
pop
mov
mov
mov
and
test
insb
push
add
out
popa
cmp
test
movsl
fisubs
mov
std
add
cmp
mov
mov
jnp
adc
xor
xchg
iret
popf
inc
mov
add
lret
outsl
loop
mov
mov
insl
add
aas
mov
cmp
lcall
push
push
cmpsb
pop
pop
lods
xchg
ret
push
cmp
movsb
movups
push
hlt
sbb
cmp
xor
pop
cmp
sbb
fwait
gs
or
mov
mov
pop
dec
mov
mov
movsb
mulb
daa
iret
loop
fdivp
jl
sbb
jo
xchg
out
es
cmpsb
sbb
or
inc
insl
outsb
cmp
pop
inc
stos
test
out
jb
repnz
paddusw
xchg
adc
ret
pop
in
add
jns
fwait
stos
sbb
cltd
push
sbb
adc
mov
stc
jno
mov
pushf
push
pop
lahf
aam
addr16
es
jl
out
xor
push
jp
inc
cmp
pop
jne
jbe
shr
and
dec
notl
mov
sub
or
ds
dec
mov
ja
xchg
push
jmp
ja
add
ror
jae
pop
arpl
pusha
call
pushf
das
inc
sarl
data16
sahf
or
insb
cmc
jmp
mov
and
push
lods
pop
movsb
mov
aas
insb
xor
stos
push
xor
test
xor
xchg
movsb
test
sub
xchg
xor
jecxz
fidivs
adc
mov
add
pop
arpl
fistl
iret
out
and
int
repnz
push
cmpsb
addr16
cmpsb
inc
xchg
inc
sbb
inc
and
sahf
xor
leave
mov
xchg
mov
dec
sub
pushf
popa
inc
cli
pop
mov
or
xchg
dec
add
xchg
add
sub
cli
mov
pop
jbe
leave
dec
mov
dec
mov
rol
outsl
divb
js
out
mov
idivl
mov
mov
inc
mov
and
mov
aad
pop
adc
fnstenv
std
sti
js
cmpsb
in
adcl
fs
clc
cmc
jecxz
xchg
add
in
into
jno
pop
sti
aas
test
jno
inc
bound
idivl
loope
push
inc
or
xchg
sub
or
ret
mov
aam
in
std
adc
mov
ds
arpl
test
hlt
pop
jnp
cmpsb
js
push
or
cs
jle
fwait
lods
cmp
xchg
ret
mov
arpl
in
add
add
xchg
out
xchg
lahf
int
nop
sub
lods
cmpsb
cmpsb
push
sbbl
add
fdivrs
pop
xchg
pop
sbb
xor
lock
outsb
mov
test
add
ret
push
js
test
lret
pop
imul
xor
sub
jno
adc
cmp
test
xor
cmp
std
sbb
out
les
dec
push
xor
jo
fnstenv
cwtl
ja
movsl
jge
add
movsb
hlt
je
mov
loopne
add
cmpsl
xchg
sarl
test
cltd
fidivrl
add
loope
jbe
mov
clc
inc
in
icebp
std
adc
iret
imul
pop
outsb
aaa
int
int
dec
es
or
jp
mov
pop
pop
add
or
sti
lret
xchg
andl
inc
jae
mov
clc
mov
int
int3
jo
es
stos
mov
shlb
movsl
push
ljmp
bound
ret
sarl
pushf
jge
mov
pop
into
cmp
js
or
loopne
leave
xor
mov
xor
mov
lcall
popa
jno
mov
lods
mov
xchg
dec
sub
daa
outsb
mov
add
push
mov
push
repz
and
xorb
cmp
mov
mov
jl
imulb
cwtl
lock
in
sbb
mov
push
jmp
inc
inc
cltd
aam
in
iret
pop
sub
movsb
xlat
xchg
xor
sub
jecxz
sub
mov
in
and
xorl
or
dec
jb
notb
mov
pop
int
jmp
cmp
sbb
sub
cmpsb
push
or
sub
xor
out
or
xchg
adc
std
adc
push
jnp
jg
testb
test
andl
mov
xchg
xchg
sub
int3
test
mov
out
jo
leave
jno
dec
shll
push
outsl
and
mov
fsubrl
xchg
pop
mov
testl
scas
xchg
cli
andl
inc
stc
stos
dec
insl
out
mov
mov
dec
scas
scas
inc
pusha
in
lahf
mov
jle
stc
shl
imul
arpl
sub
mov
mov
xchg
bound
fsts
xchg
xlat
js
arpl
idivl
cmp
xchg
mov
cli
xchg
pusha
pop
enter
sti
cvttps2pi
pop
into
pop
and
mov
push
jge
cli
mov
mov
icebp
sub
mov
stos
cmp
and
mov
push
jge
push
add
sahf
xchg
repnz
aad
aam
addl
xchg
mov
push
sub
jbe
pusha
popf
dec
and
xor
inc
mov
push
cmp
xor
lahf
dec
sbb
sub
push
and
shll
xor
sub
xchg
lds
movsl
les
fidivrl
inc
mov
ret
out
push
jnp
push
and
bound
aaa
hlt
pop
insb
std
add
js
inc
xchg
ds
insl
inc
les
ljmp
andb
mov
popa
jge
cld
ds
fwait
ss
dec
in
mov
sbb
push
mov
rol
out
test
cwtl
mov
adc
sbb
jo
iret
ret
je
aaa
out
mov
mov
das
scas
es
dec
and
scas
mov
lods
jl
loopne
or
test
je
and
lret
test
nop
lahf
test
mov
mov
add
cmc
dec
mov
xor
ds
adc
fisubrs
repz
movsl
fnstsw
mov
out
xchg
sbb
push
jge
push
xor
int3
shrl
call
hlt
cmp
xchg
sbb
in
dec
repnz
cs
lds
xchg
nop
fwait
sub
sub
push
fimuls
jl,pt
cmpsl
aaa
decl
jno
mov
push
in
mov
sub
cltd
lahf
jnp
hlt
inc
xchg
jbe
lret
ret
xchg
jne
in
push
mov
ret
xlat
push
sub
les
mov
mov
lds
push
repz
mov
inc
pop
inc
push
adc
mov
add
lahf
pop
ffree
xchg
mov
cwtl
leave
lahf
ss
pop
push
xor
insl
jp
iret
enter
push
push
js
lock
loopne
push
ds
idivl
das
stc
test
dec
cmp
pushf
jo
fcoml
or
lcall
lock
ret
leave
push
xchg
mov
in
and
inc
or
test
repnz
js
push
repnz
test
leave
xchg
daa
fisttpll
mov
sub
adc
sbb
mov
in
dec
and
scas
add
popl
cmp
xchg
mov
cmp
jmp
and
inc
adc
cs
pop
lret
or
sub
lret
sbb
or
cwtl
popf
in
test
les
mov
adc
dec
ret
xor
call
adc
xchg
and
frstor
push
shrb
pop
fldt
adcb
mov
cmpsl
inc
dec
iret
push
cmpsl
leave
aam
dec
add
pushf
mov
xchg
mov
sub
sub
outsl
ljmp
lock
adc
jae
mov
insb
jno
mov
shlb
insb
lea
mov
outsb
insl
fucomp
mov
stos
jno
iret
out
movsb
jp
pushl
sub
test
push
ror
dec
ret
js
xor
pop
test
add
out
dec
fsts
lock
xchg
insb
dec
test
lods
addr16
sub
push
jb
or
loop
loopne
pop
dec
int3
dec
or
int
and
aam
addr16
fistl
pop
and
mov
jmp
jns
jo
dec
test
mov
rcrl
jb
fnstsw
pushf
aas
out
add
stos
cmpsl
push
dec
inc
push
insl
shlb
inc
repnz
ljmp
sub
movsl
shrb
sub
sti
xchg
jno
jecxz
out
push
dec
inc
mov
adc
lret
xor
pop
push
dec
pop
lret
call
leave
ds
xchg
adc
lods
ja
lea
mov
shll
test
sti
arpl
mov
inc
mov
and
sar
inc
adc
cmp
shll
outsl
push
or
jb
shufps
or
incb
jp
cli
sarl
jl
ds
jecxz
clc
pop
sbb
mov
leave
push
jnp
mov
mov
cli
xchg
dec
xor
sbb
cmpsl
cmp
push
mov
jl
dec
daa
int
push
imul
mov
add
cmova
add
dec
or
icebp
repnz
shl
cmc
and
cmpsb
mov
and
ja
xchg
test
aam
push
out
das
or
xchg
decb
arpl
icebp
mov
sbb
in
outsb
outsb
add
mov
fwait
popf
lock
repz
ret
js
and
shlb
aas
and
andb
cmc
sub
sub
clc
cmpsl
or
dec
in
testb
pop
in
pop
insb
adc
sub
ficomps
mov
fisubs
repnz
out
fwait
les
and
nop
std
push
js
xor
mov
mov
loopne
test
inc
shlb
xor
popa
xchg
adc
mov
add
inc
dec
add
in
sub
inc
jl
out
popa
shl
test
je
fnstenv
movsb
cltd
pop
dec
dec
sbb
dec
jg
jae
frstor
sbb
outsl
les
jb
jno
mov
cli
inc
nop
roll
jg
ret
nop
stc
mov
xor
xor
iret
adc
cmpsb
out
outsl
pop
data16
test
gs
fistps
push
popl
clc
mov
movsb
adc
in
sbb
in
mov
mov
mov
pop
sbb
xchg
lds
popa
mov
repnz
mov
loop
stc
dec
loopne
xor
adc
xlat
jecxz
pop
push
sti
rorb
loopne
pushf
add
inc
pop
mov
jg
cmc
stos
and
fcoml
arpl
stc
adc
lock
fwait
mov
jle
pushf
jnp
arpl
or
sbbb
cld
pushf
test
pop
adc
or
test
ds
xchg
imul
repnz
add
cmpb
call
jns
dec
nop
jno
sahf
cmc
inc
pop
or
lcall
inc
xchg
jecxz
sbb
mov
xor
pop
dec
dec
cmc
pushf
aaa
jl
push
cwtl
push
inc
lret
push
jle
lret
or
jg
ljmp
jbe
add
fimuls
cmp
lods
test
and
push
cwtl
sahf
jg
inc
jns
push
rcrl
mov
ret
dec
add
sbb
mov
cmc
fwait
mov
insb
pop
push
mov
aad
cmp
mov
push
push
cmpsl
push
sub
ja
or
enter
mov
or
add
xchg
cmpsl
in
cmc
aaa
cld
out
cwtl
xchg
xor
xchg
inc
ljmp
in
xchg
loop
je
jp
mov
cmpsb
pop
add
imul
hlt
and
cmc
add
shr
xchg
and
inc
or
jno
imul
cmp
hlt
add
add
push
dec
stc
js
incl
dec
mov
stc
xchg
test
ret
pop
cmc
cmp
adc
out
sub
sbb
scas
sti
repnz
hlt
lret
iret
loope
ret
dec
pop
stos
fdivrl
movsb
push
push
inc
jbe
cld
in
loopne
negl
cs
fisubrl
inc
ret
sub
nopl
lea
mov
pop
fbstp
cmc
shlb
mov
pop
dec
iret
imul
xor
cs
insl
loope
mov
push
lock
fldl
xor
adc
movsb
sbb
cmp
les
in
push
inc
lahf
test
out
jecxz
loop
sti
mov
jecxz
push
and
xchg
andl
mov
pop
sbb
je
out
sbb
rorl
arpl
in
lods
mov
mov
aam
xor
pop
mov
out
push
outsl
mov
mov
mov
mov
inc
out
aam
fs
inc
loop
and
sub
inc
enter
out
pop
or
mov
pop
add
push
or
xchg
movb
inc
inc
pusha
clc
and
mov
ficompl
cld
cmp
lds
insl
outsl
je
test
fnsave
pop
sbb
xlat
sub
pushf
arpl
enter
aam
stc
mov
mov
leave
shll
loope
push
push
int3
lret
lds
sub
je
push
out
rorb
xchg
fcompl
lahf
jmp
cmp
mov
jns
frstor
cmc
ds
or
test
inc
bound
dec
jb
fucomip
or
xchg
pusha
out
xlat
or
and
xchg
pop
sbbb
add
push
je
lcall
ret
xchg
pusha
testl
xlat
and
imul
dec
test
mov
sbb
cli
aam
fcomi
stc
mov
je
fldl
clc
adc
xor
mov
lock
dec
push
andb
test
mov
pusha
dec
js
movsl
movsl
ja
mov
adc
mov
andb
popa
xchg
xor
int3
adc
push
mov
test
pop
mov
fwait
jnp
jp
mov
scas
dec
push
jmp
xor
and
ljmp
lcall
mov
nop
xor
cmpsl
adc
pop
and
incl
imul
mov
iret
push
pop
lds
inc
leave
outsb
shl
lret
sbb
mov
lds
in
out
xor
adc
insl
lock
push
push
cmc
aad
push
mov
mov
push
ss
adc
insl
int3
inc
lea
jbe
cwtl
push
and
inc
inc
loopne
sub
popa
cmp
insl
call
mov
dec
mov
mov
jmp
fstpl
das
sub
je
ja
xchg
test
mov
xor
outsl
loop
dec
pop
jae
pop
adc
xchg
pushf
repz
add
push
test
decl
push
pop
and
mov
insl
push
ja
or
icebp
jecxz
fdivp
out
das
js
test
jge
pop
test
xor
or
cmp
inc
test
loopne
mov
sub
cli
cltd
sbb
stos
mov
loope
mov
insb
fstpl
mov
mov
in
inc
sbb
inc
fisubrl
jne
pop
fs
outsb
int
xchg
mov
inc
jnp
lea
out
add
dec
mov
sbb
mov
add
sub
aaa
or
fsts
gs
aad
push
cmc
push
in
dec
retw
dec
jo
jge
mov
dec
pop
adc
inc
adcb
sbb
je
mov
sub
bound
rolb
pop
add
inc
lret
cmpsl
incb
cmp
sarl
leave
add
subl
mov
and
fidivrl
lcall
and
test
fcomps
out
push
lock
jne
fbstp
loop
lock
jl
xor
insl
sbb
test
inc
fistpll
sbb
pop
daa
aam
inc
pop
or
dec
cs
aad
mov
dec
push
mov
lea
divl
push
out
shrb
inc
out
push
jg
lea
cmovno
or
fisubl
arpl
test
fbld
xchg
or
out
mov
cmc
jnp
fldt
sub
jmp
mov
imul
fs
lds
push
sbb
mov
pushf
sub
xchg
pop
xlat
movsl
push
sbb
jbe
inc
xchg
int3
add
cmp
into
pushl
add
movsl
mov
lods
cmp
pop
imul
sub
adc
test
push
sbb
idivb
adc
stc
cmc
into
push
cs
faddp
cmp
xchg
clc
jae
mov
loope
je
roll
mov
pop
sbb
mov
lock
sbb
jae
out
scas
mov
in
mov
jecxz
inc
adc
cltd
jnp
adc
stos
sbb
sahf
mov
aaa
or
in
push
outsb
int3
pop
xchg
xlat
sub
mov
xor
push
into
mov
xchg
sti
and
mov
xchg
jecxz
insb
mov
jo
flds
das
jne
test
sbb
scas
insl
std
pop
jb
dec
lahf
pop
sub
mov
cltd
cmpl
stos
fistps
mov
in
sbb
push
cld
add
inc
shlb
imul
dec
mov
cmp
sub
stos
movsb
cmp
lods
pop
lds
push
mov
fidivl
or
jmp
test
add
dec
loope
cmp
mov
pop
nop
mov
dec
adc
push
mov
int
enter
xchg
pop
movsl
lret
fisttpl
xor
fcomps
imul
push
xchg
negb
sub
daa
and
sub
int3
dec
mov
and
cmp
jae
and
xchg
pop
aaa
in
lods
push
mov
fnstenv
imul
pop
cmp
add
test
xchg
mov
xchg
cltd
int
and
insl
les
mov
mov
cli
jne
subb
xor
insb
xor
fiaddl
push
mov
daa
lahf
insb
jl
pop
xor
dec
mov
data16
dec
dec
cltd
add
dec
setne
and
and
adc
sbb
push
fcoml
in
aad
les
push
loope
ret
jo
loopne
addr16
mov
push
subb
mov
movsl
push
in
ret
lods
and
loop
xchg
out
inc
sbb
jbe
mov
in
mov
nop
lcall
fstpl
pop
outsb
aad
mov
jl
inc
outsb
sbb
dec
push
jne
inc
inc
xor
sbb
add
mov
out
dec
aam
jmp
cld
xchg
cld
push
cmp
mov
in
jecxz
jne
lea
sub
out
adc
dec
scas
and
mov
push
out
sbb
mov
mov
jns
lods
add
sbb
nop
fsubs
outsl
mov
mov
mov
and
jns,pn
mov
xchg
xor
das
add
ret
dec
mov
sub
and
je
push
rorb
lcall
push
jnp
lret
iret
jge
inc
pop
jl
add
add
pop
rcll
pop
in
jecxz
mov
enter
sbb
inc
aam
sub
cmc
jae
and
out
and
je
lods
push
rcrb
sbb
jmp
cmp
jmp
clc
ret
fucomip
push
mov
mov
mov
push
sub
pop
add
mov
scas
adc
outsl
xchg
mov
and
add
jnp
pop
mov
cltd
lret
fisttpll
sbb
add
out
pop
int
xor
push
inc
dec
dec
mov
loopne
jge
cs
mov
fs
add
pop
call
sub
push
fwait
inc
data16
movsl
xlat
or
inc
insl
and
cmp
adc
or
inc
lods
sbb
call
mov
rcll
clc
pop
loop
test
pop
pop
add
stos
mov
push
int3
cmp
stos
cmp
mov
loopne
cmc
xchg
mov
sti
imul
xchg
xlat
fiadds
mov
cmp
rorl
stos
movzwl
inc
test
out
mov
out
repz
insl
xchg
loop
insl
adc
cwtl
leave
cmp
adc
mov
sub
mov
xchg
faddp
mov
pop
or
adc
fdivs
pop
xor
mov
test
mov
ret
roll
jae
push
sub
lret
loopne
popf
mov
or
or
sub
shl
outsb
mov
mov
fdivrl
mov
and
add
and
fsubrs
loop
and
mov
aad
push
xchg
js
cmpsb
sbb
testl
jl
mov
out
push
int
out
insl
pop
rcrl
insb
mov
les
aam
rclb
xor
clc
mov
lods
test
mov
jl
orl
enter
pop
das
jbe
js
xchg
shlb
out
outsb
mov
push
js
inc
mov
xor
std
out
pop
add
lods
push
dec
add
push
mov
insl
lock
xchg
fwait
cmp
dec
in
xlat
roll
je
push
iret
scas
jae
jl
jns
and
inc
into
insl
rcll
jns
push
mov
jp
push
jb
or
xchg
mov
cmpsl
mov
lods
adc
jae
ret
cs
sub
pop
in
adc
out
in
daa
sahf
lret
cmp
push
xchg
call
popf
xchg
lods
scas
or
mov
xor
xlat
jge
inc
outsb
push
fidivrs
push
cwtl
jmp
sbb
mov
jp
add
jge
and
lea
pop
mov
lret
mov
push
xor
xchg
jae
stc
hlt
mov
fnsave
dec
dec
rcll
push
pop
jp
xchg
jge
pop
je
ret
lds
jne
inc
subl
cmp
push
hlt
lods
xor
shrl
mov
add
shll
loop
movsl
jo
cmpsl
and
sub
xchg
idiv
xchg
stos
xchg
or
mov
mov
stc
dec
mov
jo
fbstp
aaa
addr16
jmp
jne
or
subl
outsl
push
jb
lret
push
lds
ljmp
sbb
shll
lahf
aad
test
das
jmp
ljmp
pop
mov
sbb
mov
shlb
add
jle
int
jle
push
dec
inc
orb
loop
and
out
jbe
mulb
add
fcompl
push
lea
testl
jns
mull
mov
in
mov
sahf
outsl
or
xor
mov
mov
xchg
inc
test
loop
mov
xchg
xchg
mov
aad
mov
fsubrl
jp
fstpt
xchg
decl
mov
gs
push
xchg
mov
jnp
pop
testb
dec
es
inc
and
inc
adc
std
call
push
mov
jge
or
cmp
aaa
cli
xor
jmp
aad
inc
hlt
aaa
test
cld
cltd
addr16
xchg
mov
ja
mov
ret
sbb
mov
dec
mov
pop
iret
pushf
mov
push
add
insl
shl
mov
cmpsb
push
dec
fstpt
mov
or
dec
add
js
clc
ja
sti
lock
lods
bound
es
jns
shlb
enter
popa
mov
movsb
rol
jne
mov
imul
pop
in
cs
addr16
mov
xlat
mov
or
jg
dec
pop
add
shrl
lods
and
adc
add
cmp
outsb
lods
mov
divb
mov
sbb
sbbb
ret
adc
push
scas
jmp
sbb
jb
in
sbb
rcrl
mov
inc
aam
push
fstpl
dec
mov
fists
aaa
call
test
lods
pop
outsl
xlat
rcrb
sub
jb
insb
aam
data16
mov
xorb
adc
push
fists
outsb
xchg
xchg
cmp
adc
xor
push
inc
imulb
loop
in
fildll
pop
mov
inc
in
xchg
scas
ss
das
enter
pop
testl
test
dec
aam
aad
sub
fs
mov
dec
bound
mov
mov
gs
dec
dec
add
std
fwait
std
pop
jmp
gs
lahf
sbb
sbb
mov
or
ss
add
stos
and
sahf
inc
xorl
sbb
xchg
inc
pop
inc
sub
cmp
enter
or
mov
mov
popa
int3
test
jb
rclb
or
in
cmpb
pop
test
push
sahf
lea
rcrb
mov
jne
jo
jo
rolb
test
adcl
push
stos
cs
jne
add
pop
mov
fsubr
in
arpl
cmp
mov
movsl
cli
jbe
mov
add
fisubrl
pop
cmp
daa
or
pop
mov
insl
or
push
ret
mov
rclb
popl
push
fcompl
mov
and
arpl
xchg
mov
push
xor
in
andl
ss
cmp
pop
mov
inc
popa
int
mov
xlat
pop
mov
jae
mov
pop
ljmp
pusha
adc
mov
movsl
push
cmpsb
cmp
popf
cmp
sbb
aas
push
or
sbb
repz
mov
pop
out
or
xchg
aaa
mov
ss
or
pop
sbb
aad
lahf
pop
mov
arpl
adc
jo
or
jae
or
dec
and
sbb
xchg
insl
or
adc
jb
aas
adc
mov
out
rcrb
mov
mov
mov
and
icebp
push
mov
pop
cmp
sbb
mov
xchg
adc
sub
push
in
lcall
fists
in
mov
pop
mov
jnp
mov
movsl
or
sti
push
scas
push
xchg
adcl
rcrl
sahf
ss
or
jmp
sbb
jge
sbb
cmpsl
orb
frstor
sbb
or
ret
add
ja
or
test
dec
bnd
aam
and
add
mov
xchg
jnp
iret
daa
push
jb
cmp
inc
in
insb
mov
mov
cmp
bnd
mov
sarl
ror
mov
lcall
mov
divl
loop
aam
add
call
xor
lods
push
loop
ffree
xchg
arpl
or
addr16
repz
adc
xor
daa
mov
mov
es
dec
ss
push
popf
push
ret
test
add
push
notb
add
push
mov
xor
mov
ds
pop
stos
movb
sbb
fisubrs
dec
in
mov
arpl
cmpsl
stc
inc
push
cmp
cmpl
push
mov
in
add
jmp
pop
in
mov
adc
outsb
mov
cmp
test
xor
out
es
xchg
lock
sarl
cmc
or
test
mov
pop
sub
lcall
pop
cmp
outsb
dec
adc
stos
data16
outsb
inc
push
aaa
mov
mov
ss
faddl
dec
stos
mov
in
sub
cwtl
sahf
aad
adc
test
lret
xchg
adc
xchg
and
push
cmpsb
cld
xchg
cmpsl
mov
lock
decb
fstps
dec
jbe
movsl
cmpsb
pop
pop
lods
ret
stos
or
push
bound
sbb
aaa
jmp
sbb
insl
mov
jne
sub
mov
pop
jno
push
and
fucomip
push
iret
mov
pop
repz
frstor
or
aas
cld
in
fwait
cwtl
js
fdiv
sahf
jle
negb
dec
inc
lods
adc
lret
stos
sbb
js
cwtl
sub
insb
aaa
loop
jmp
cmp
xchg
in
inc
mov
pop
je
aad
xchg
jmp
mov
lea
emms
xchg
xchg
push
xor
mov
cmp
or
lea
mov
leave
data16
adcl
imul
xchg
pop
loope
push
enter
sarb
inc
leave
push
loope
jge
fsubrs
mov
mov
popf
mov
orb
and
mov
xorb
sahf
push
int
lcall
dec
xor
lcall
mov
fstpl
rorb
push
insb
push
popa
in
push
push
out
into
inc
dec
xchg
ja
push
or
cmpsl
movsb
les
dec
inc
mov
pop
mov
mov
mov
jge
mulb
or
push
jne
xchg
loopne
test
es
movsl
popa
adc
mov
mov
rcr
or
inc
das
in
mov
movsb
out
mov
test
js
and
data16
add
sbb
imul
sahf
adc
dec
mov
or
inc
pop
add
jne
mov
orl
popw
pop
pop
cmp
xchg
aaa
jmp
jmp
push
or
imul
neg
pop
outsb
ljmp
mov
mov
pop
xchg
inc
bswap
push
push
dec
fnstcw
insb
in
mov
or
insb
push
xor
or
fidivs
xor
in
or
lcall
cmp
gs
subb
push
and
and
lods
sbb
xchg
int
cmp
mov
stos
adc
ljmp
mov
push
push
xor
mov
fcmovnb
das
push
mov
int3
lods
sub
adc
les
mov
jp
mov
xchg
jbe
push
sti
mull
lcall
cli
mov
xchg
cmp
push
pop
lahf
adc
adc
mov
push
jl
xor
mov
push
test
push
mov
mov
cmp
popf
jge
or
js
pop
xor
sub
lock
pop
loope
and
fcmovnu
mov
push
nop
mov
push
insl
cmp
mov
into
jne
inc
data16
cmpsl
pop
inc
mov
mov
inc
sub
xor
mov
jns
and
or
fwait
dec
popf
shrb
adc
cltd
pushf
lods
or
outsb
ret
pop
jl
and
nop
adc
dec
mov
adcl
leave
sub
cmp
nop
mov
add
pop
aam
jb
mov
dec
stos
mov
xchg
enter
repz
and
mov
push
aam
loope
pusha
and
and
insl
ret
mov
shl
sbb
mov
les
and
jb
imul
icebp
dec
mov
cli
mov
xchg
cmp
stc
fisubl
aas
inc
stc
fwait
pop
std
scas
push
insb
sbb
xchg
push
sub
scas
inc
mov
inc
lahf
sub
xor
movl
movl
xchg
adc
jns
inc
and
jo
roll
mov
mov
aam
mov
push
repnz
shrl
jne
pop
stos
das
pop
xor
mov
mov
roll
in
lret
cwtl
xchg
repnz
popf
nop
or
or
dec
mov
hlt
pusha
pushf
fisubrl
jb
stos
fmul
sti
inc
mov
das
xchg
dec
xchg
pop
mov
xchg
movsb
jb
mov
sbb
mov
jmp
or
jle
rcrb
shl
hlt
add
dec
jno
mov
inc
xchg
loope
in
outsb
test
std
xor
jae
mov
xor
sbb
sub
scas
mov
mov
xchg
and
roll
dec
repnz
xlat
jno
xor
mov
add
fs
push
adc
cld
data16
xlat
mov
cmpsb
loop
dec
and
xchg
fs
mov
fstpl
cmp
xchg
cmp
push
jno
cltd
sahf
ret
xor
ficoml
fnstcw
mov
daa
adc
js
imul
sub
sub
sahf
dec
stos
ret
imul
jae
ds
das
stos
sub
add
adc
cwtl
mov
outsl
xchg
js
mov
push
hlt
lds
mov
fidivl
pop
add
leave
inc
xchg
pop
push
xor
mov
pop
jb
xor
inc
daa
mov
stc
in
cmp
mov
jecxz
into
xchg
cmpsb
jne
roll
aaa
data16
mov
and
sarl
jnp
jbe
leave
pushf
sti
test
pop
sub
lcall
push
jb
iret
jb
jl
add
inc
mov
stos
cld
xchg
fsts
mov
cmpsb
xor
ljmp
mov
xchg
shl
pop
mov
std
stos
bound
xchg
sub
outsb
stos
mov
sub
xchg
and
or
ljmp
js
imul
and
rcrl
xor
sub
inc
aas
xchg
push
sbb
sub
inc
mov
cli
dec
cwtl
repnz
sub
aas
mov
mov
mov
push
int
outsl
enter
cli
fs
xor
shlb
stos
xchg
push
lahf
add
adc
jno
movsw
mov
or
add
test
dec
push
movsl
ds
pop
xchg
mov
sahf
clc
xlat
test
rcrl
clc
and
test
inc
imul
sbb
adc
adc
jle
mov
xchg
add
jns
add
push
push
ret
and
jge
fildl
clc
repz
mov
sti
add
fisttps
mov
outsl
fs
movsb
jo
mov
in
imulb
add
adc
shrl
xchg
cmpsl
cmp
dec
dec
mov
cmp
arpl
add
ja
fbld
push
jge
es
pop
mov
push
call
add
cmp
sahf
inc
add
push
aas
lahf
jbe
lods
loopne
jb
add
idivl
daa
sbbl
cltd
jns
ss
fbstp
xlat
dec
outsb
adc
cld
xchg
xchg
pop
leave
pop
testl
sbb
add
xchg
pop
mov
popf
aad
cli
icebp
pop
jecxz
icebp
aaa
mov
scas
jl
mov
lea
push
inc
mov
out
mov
insb
das
sbb
push
push
and
divb
je
xchg
and
repz
inc
xchg
out
not
xchg
cmp
pop
sbb
inc
adc
fsts
fcompl
push
xchg
adc
inc
cmpsl
xchg
mov
idivl
xlat
scas
inc
add
aaa
push
lahf
aaa
es
cmp
mov
cmp
lret
add
popf
leave
adc
roll
insb
cld
dec
sbb
call
sub
arpl
cmp
fdivr
std
cli
orb
pavgb
xor
or
negb
adcl
mov
rolb
jb
nop
and
adc
daa
cmpsb
movsl
loopne
inc
scas
mov
xrelease
bound
mov
js
mov
sbb
ljmp
movsl
pop
pop
push
sahf
dec
lods
push
mov
push
mov
xchg
pushf
stos
mov
mov
lea
mov
and
xor
inc
in
das
xchg
cmp
rolb
sub
push
loop
pushl
aad
dec
adc
fwait
push
mov
test
rcl
lahf
ja
push
fs
and
stos
mov
push
cmp
lods
or
and
les
sub
or
jl
icebp
push
lahf
dec
xchg
les
repnz
pop
cmp
and
sbb
cmp
mov
jb
in
fwait
or
mov
mov
aad
and
fs
sbb
sbb
je,pn
std
sub
andb
loop
mov
stos
pushf
xchg
repnz
pushf
leave
popf
ja
cmp
cmpsl
mov
ds
movsb
inc
and
cli
enter
mov
movsb
shlb
fistl
and
mov
mov
neg
xchg
popa
mov
stc
push
or
sub
decb
js
push
pop
and
add
xchg
jbe
jle
jle
inc
mov
xchg
insb
fcomp
int
sahf
inc
xchg
or
dec
shrb
outsb
dec
push
adc
aad
stos
fsubs
jnp
cmp
jns
push
lcall
dec
jle
ret
stos
lea
mov
mov
out
aas
hlt
cli
loopne
mov
loope
xchg
jecxz
xor
mov
stc
in
lcall
mov
mov
pusha
pop
pop
mov
movsl
add
xchg
and
or
xlat
movsl
adc
jae
imul
movsl
jae
loop
cmpsl
mov
mov
ret
test
or
mov
and
inc
testl
adc
sub
mov
or
and
pop
push
jge
subl
pop
jmp
xor
pop
das
inc
add
xchg
out
mov
pop
xchg
stc
add
pop
pop
jnp
mov
jle
and
rcll
call
loop
nop
mov
push
pop
subb
sbb
repz
cld
inc
xor
pop
and
add
je
stos
jne
sbb
in
and
pushf
lea
or
lret
je
cwtl
repz
scas
xchg
popa
orb
faddl
xor
daa
inc
cmp
lea
jne
mov
jns
jo
fisubs
iret
test
rep
iret
jnp
outsl
pop
jno
adc
sbb
push
lods
jae
mov
neg
sbb
addl
adc
into
mov
xchg
lea
jo
ret
sbb
test
loopne
insl
in
mov
insl
add
imul
rcrb
int
jae
and
imul
sar
push
pop
ss
out
xchg
adc
lock
add
std
icebp
push
js
dec
stos
pop
mov
pop
push
scas
inc
jg
xchg
mov
movsl
insl
and
xchg
fidivs
inc
mov
insb
ljmp
xor
and
xor
mov
movsl
pop
push
jge
idiv
stc
push
leave
push
out
or
fsubs
mov
popf
jmp
and
bound
aas
pop
mov
pop
inc
nop
mov
dec
jp
outsb
mov
mov
xchg
jnp
jge
push
xor
dec
fs
ret
ss
xor
mov
lret
aam
xchg
in
in
rcrb
test
inc
sbb
arpl
inc
sbb
aas
lods
call
sbb
mov
lods
clc
mov
fwait
cmp
and
aaa
push
aas
int3
sub
shl
xor
test
clc
mov
inc
pushl
sub
lret
scas
ss
fstpl
popf
or
mov
fs
movsl
cmp
adc
xor
or
inc
push
pop
sbb
fwait
bound
or
dec
jb
jns
and
push
mov
jp
fcoml
push
sbb
out
jg
or
insl
push
jg
loopne
mov
shr
xor
dec
mulb
pop
inc
xchg
insl
call
inc
cwtl
cwtl
andb
xchg
pop
fcomi
in
dec
and
aad
psubb
adc
insl
xorl
cli
sbb
adc
hlt
xor
fwait
xchg
arpl
mov
shlb
jle
jg
hlt
push
pop
aas
adc
popf
push
jmp
or
shlb
in
fiadds
pushf
jmp
nop
or
xchg
test
cmp
loop
loop
les
int3
aaa
jb
or
dec
add
inc
sbb
xor
sub
cltd
ret
das
pop
xchg
mov
sub
push
or
int3
ljmp
popa
and
xor
aaa
sub
stos
push
push
test
jo
dec
jle
push
pop
cmp
inc
or
hlt
ret
loope
bound
popf
mov
mov
call
adc
cmc
faddp
enter
xchg
rol
push
sbb
jge
mov
push
mov
sbb
or
sbb
mov
cmpb
outsb
in
mov
xlat
mov
inc
mov
repz
inc
stos
pop
insl
lods
sub
ret
clc
or
mov
inc
or
imul
hlt
jnp
hlt
sub
sbb
push
add
mov
adc
cs
out
lods
insb
sbb
out
imul
add
rcr
push
add
hlt
sbbl
loop
ret
mov
rclb
int3
pop
mov
fucom
negb
jp
out
fsts
lret
in
sbb
push
jns
push
mov
xchg
stos
mov
pop
repz
mov
stos
dec
sbb
mov
mov
sarl
cltd
movsb
sub
mov
gs
mov
adc
pusha
sarl
or
bound
addr16
xor
scas
repz
cmp
sahf
data16
ljmp
add
mov
loope
in
or
mov
out
push
add
or
in
dec
rclb
icebp
loopne
in
cmpsl
xor
aaa
push
lods
mov
pop
mov
ret
or
mull
fs
movsb
aaa
fdivrl
sar
bound
pop
push
out
add
hlt
adc
push
xor
repz
push
rcl
pop
mov
cmp
stc
fistpl
addr16
test
pop
mov
push
jbe
loop
push
cmp
jecxz
mov
das
pushf
insb
cmp
pop
and
in
negl
sub
outsb
sub
iret
imul
inc
jg
jge
inc
xchg
sti
xchg
aam
pop
mov
out
push
push
fidivrs
pop
xchg
out
adc
mov
or
nop
push
or
js
pop
lods
addr16
pop
mov
xor
out
jle
imul
pop
repz
push
sarb
aad
pop
pop
pop
fwait
adc
cmp
dec
jae
lret
cmpsb
jge
inc
andl
cmpsb
pop
push
xchg
pop
push
mov
inc
stos
pushf
pop
outsl
add
jae
or
cmc
pop
jecxz,pn
push
fwait
mov
fs
adcl
cmpl
test
sbb
addb
ds
and
loopne
stos
inc
xor
xchg
pop
fs
mov
sub
lret
mov
cmp
flds
mov
arpl
sbb
dec
mov
and
std
ret
xorb
mov
cmpl
push
ja
out
js
sahf
sub
dec
push
or
add
xchg
or
in
clc
push
dec
lret
das
add
dec
decl
sbb
sub
xadd
inc
xlat
inc
lahf
repz
dec
pusha
add
scas
push
cli
mov
inc
inc
xchg
sub
popa
in
mov
dec
enter
js
cmp
ret
adc
pop
outsb
test
xchg
jo
test
hlt
movsb
insb
and
push
rcr
xchg
jl
and
insl
pop
shrl
pop
cmp
cwtl
cli
sub
mov
push
mov
enter
je
ds
sbb
ja
mov
and
insb
into
mov
or
negb
push
out
hlt
pushf
insb
int
jne
xchg
stos
cltd
testl
mov
aaa
arpl
lods
and
mov
scas
pop
push
xor
int3
mov
lahf
pop
push
mov
stos
mov
les
sub
mov
or
mov
adc
movsb
push
dec
loope
adc
fstpl
cmp
mov
adc
popf
movb
lret
mov
inc
inc
fisubrl
int
frstor
fldenv
rcrb
mov
popa
inc
add
xchg
inc
punpckhbw
bound
stos
lret
xor
sbb
test
pop
push
shll
xchg
fcomi
scas
jo
mov
mov
int3
sbb
jb
push
mov
or
loope
fists
add
enter
outsl
jns
xor
cltd
xor
lock
cmpsb
ljmp
push
xor
cld
or
dec
and
faddl
or
inc
push
inc
fsubs
xor
testl
std
mov
sahf
fsubrl
jnp
into
mov
pop
mov
adc
stos
loope
lahf
xor
xor
fnstsw
pop
inc
pop
cwtl
lret
jno
lock
mov
jmp
addb
push
pop
push
hlt
cmp
mov
jb
ss
and
lods
pop
lahf
jns
inc
rcrb
out
sbb
add
mov
stos
or
jecxz
sti
push
adc
adc
dec
push
sahf
or
cltd
mov
fldl
mov
xlat
push
sbb
leave
dec
lret
orb
insb
repnz
xchg
pop
push
mov
or
pop
push
int3
mov
insl
je
mov
add
movsb
or
cmc
popa
and
add
push
xchg
adc
jne
mov
xchg
xor
lret
mov
sub
xor
call
mov
out
xor
out
add
jno
lods
cmc
add
mov
and
mov
ss
jbe
mulps
in
add
call
sub
add
int3
mov
push
adc
pop
pusha
cmp
inc
rolb
dec
jle
inc
sub
add
repz
sub
cs
xorl
scas
fcoms
mov
adc
popf
push
cmpsb
popf
mov
xchg
out
in
cmp
pop
lods
sahf
dec
or
and
fsts
mov
loopne
jbe
inc
mov
mov
xchg
push
shlb
dec
jmp
outsl
test
and
inc
insl
and
cmp
xor
xchg
xchg
mov
add
and
pop
andb
jno
add
inc
or
cwtl
popa
fisttpll
and
test
repz
jns
subl
lock
pushf
pop
repnz
or
jge
add
and
pop
pop
iret
pop
mov
das
insl
push
ljmp
ret
dec
jns
inc
mov
push
popf
mov
xor
inc
mov
dec
and
jns
xor
out
in
adc
pop
inc
int3
mov
dec
std
mov
cwtl
nop
pop
pop
outsl
out
mov
mov
mov
cmp
imul
test
add
test
fdivr
dec
rorb
test
es
dec
fisttpll
push
lock
cmp
mov
loop
sub
jns
clc
mov
inc
add
xchg
add
dec
lret
push
pop
mov
adc
dec
lock
or
or
jbe
ret
fisttps
mov
mov
mov
mov
aad
jl
dec
adc
lret
lods
addb
cltd
je
dec
xlat
pop
adc
sti
dec
stos
push
mov
or
inc
dec
cltd
sbb
das
xor
fcompl
xor
sub
sub
xchg
pop
orl
repnz
sbb
push
inc
out
mov
adc
shlb
sub
cmp
and
es
mov
jb
ret
add
pushw
fsts
inc
xchg
mov
nop
in
or
les
cmpsl
cmp
inc
push
and
push
imul
vcvtdq2pd
cmpsb
and
jle
iret
rclb
scas
mov
mov
jo
xor
mov
or
lods
into
inc
lods
insb
jb
inc
and
mov
xor
mov
ret
enter
adc
jb
aam
xchg
sub
add
mov
adc
sub
xor
scas
daa
lcall
fsubs
in
pop
inc
mov
out
mov
fiadds
pop
stos
jmp
dec
ss
mov
sbb
or
je
cmpsl
shl
xchg
add
int3
sbb
pop
cld
push
adc
jb
test
push
jne
arpl
clc
xchg
push
sahf
into
and
add
mov
mov
lret
cli
jne
mov
pop
stc
popf
lock
mov
es
mov
pop
in
cmp
inc
and
inc
xchg
les
stos
mov
add
dec
dec
ret
fwait
xchg
addr16
jnp
dec
jno
inc
xchg
mov
cmpl
dec
notl
repnz
adc
sahf
pop
mov
adc
cwtl
or
sarb
add
mov
repnz
sbb
cmp
xorb
inc
cmp
fabs
mov
and
aad
out
and
add
clc
divl
outsl
push
jae
cmp
xor
hlt
inc
add
pushf
and
jae
sbb
adc
imul
sub
adc
stos
dec
add
repnz
rep
scas
je
out
stos
mov
aad
push
dec
ror
mov
sbb
and
cwtl
mov
ret
data16
insb
mov
subb
in
xor
dec
jge
dec
cs
aad
repnz
call
divl
pusha
cmp
add
loope
sbb
divl
arpl
mov
test
pop
xchg
outsb
test
pop
sub
jb
and
xchg
movsl
int3
fcoml
sbb
lret
fs
xchg
dec
pushf
mov
xor
outsl
test
pop
add
xor
adc
sbb
or
aas
fisttpl
jbe
lret
pop
push
inc
adcb
xor
in
sbb
jae
and
test
jge
sarw
add
push
and
punpckhwd
xchg
or
stos
enter
xor
lcall
mov
xchg
mov
leave
out
dec
insb
and
xor
cli
out
or
sbbb
std
jecxz
push
loope
std
inc
cs
stos
sbbl
loop
adcb
pop
jne
outsb
mov
or
in
stos
dec
lcall
push
out
pop
mov
ss
lret
cmpl
push
xchg
or
mov
insb
mov
push
mov
hlt
fcmovu
push
lret
or
adc
ljmp
std
xor
lds
add
sbb
sti
je
ret
mov
xor
add
loopne
loop
test
sahf
cltd
in
shr
adc
mov
sub
sbb
mov
inc
rcll
mov
jb
std
jecxz
mov
push
fs
xchg
nop
pop
push
scas
sbb
add
mov
leave
xor
mov
dec
repz
pop
es
lods
rorl
adc
fisubl
xchg
xchg
les
ret
push
addr16
sbb
mov
es
call
jmp
shr
jbe
enter
and
push
mov
js
out
cld
data16
inc
xchg
xchg
addr16
mov
sarl
sub
ljmp
cmpsl
repz
mov
daa
add
lahf
ds
outsl
dec
imul
or
mov
insb
aas
in
iret
xchg
mov
fidivrl
sbb
sbb
fisubs
addr16
pop
test
or
sbb
jo
mov
mov
lock
xchg
add
je
rcrb
mov
loop
das
mov
lock
movsl
mov
add
iret
sbb
mov
add
std
push
xchg
fwait
lcall
sahf
movsb
sbb
outsl
iret
shlb
mov
popf
dec
mov
insl
cmp
lock
in
ja
lcall
add
mov
mov
out
lods
rcl
push
hlt
loope
addr16
jo
push
rolb
int
xor
mov
inc
out
cmp
icebp
pop
inc
je
cmc
add
inc
push
mov
shr
mov
lock
add
ds
sbb
xor
fidivrs
jl
ss
outsl
add
fistl
xor
dec
lock
aaa
outsl
in
lret
aaa
mov
in
mov
movsb
xchg
adc
xchg
and
out
add
out
pop
scas
xchg
adc
lret
sub
jle
pushf
cmp
xchg
loope
push
or
dec
pop
pop
add
xchg
clc
shrl
push
add
pop
jge
cmp
mov
adc
ret
push
mov
xchg
call
and
addb
call
xor
fstpl
fidivrl
add
pop
xor
loopne
repnz
sbb
pop
jg
adc
aaa
or
aas
scas
add
enter
mov
shll
pop
lea
push
das
in
pop
pop
je
data16
aad
mov
mov
jne
or
cltd
mov
cmpsb
dec
sub
push
jnp
jp
push
mov
int3
iret
dec
lds
inc
mov
decl
pop
mov
mov
xlat
movsl
dec
fidivrl
pusha
iret
lret
pop
mov
sub
cmp
xchg
mov
jle
inc
dec
sbb
inc
jb
imul
mov
cmpsb
shlb
in
mov
fcom
add
mov
adc
and
arpl
call
popf
fdiv
pop
ficoms
rcrl
xchg
jno
faddp
les
xchg
test
or
mull
cmp
and
xchg
jecxz
add
adc
jmp
mov
dec
repnz
lret
pop
mov
lahf
and
xchg
or
sti
cli
xor
xor
cmp
jnp
push
popf
ret
pop
out
xchg
xchg
cli
pop
bound
das
mov
xchg
ja
or
xchg
je
jecxz
scas
xor
stos
jae
xor
cs
jnp
push
daa
in
bndldx
maskmovq
negl
mov
adc
mov
dec
mov
enter
int
cmp
aam
dec
dec
in
xchg
pop
ja
mov
into
mov
push
xor
xchg
ljmp
push
das
adc
daa
mov
stc
pop
std
fsubs
ret
mov
stos
lock
xor
leave
sbb
xchg
cli
pop
sbb
cmp
jae
mov
out
pop
sbbl
insb
mov
lret
push
jns
andl
sbb
and
push
ljmp
inc
xchg
fsubs
xor
testb
inc
jecxz
mov
and
dec
push
push
mov
scas
stos
jns
xchg
cs
fisttpl
das
flds
loopne
mov
movsl
pop
jp
fcmovnbe
xor
mov
arpl
cmp
cmp
pusha
sub
sbb
inc
shll
mov
dec
dec
and
sbb
popa
cltd
inc
or
es
dec
mov
mov
lahf
cmp
push
mov
push
jbe
cmpsb
adc
cwtl
or
mov
mov
mov
mov
mov
mov
add
mov
mov
adc
loopne
add
repz
add
popf
and
or
inc
stos
jl
outsb
outsl
adc
cmp
xchg
les
fs
out
sub
adc
jae
insb
sbb
cmp
or
test
or
adc
dec
repnz
add
xor
or
aas
setge
fstps
cmp
inc
pushf
or
or
mov
scas
dec
cmp
inc
mov
pop
out
xor
sub
jnp
test
push
aas
jl
ret
push
dec
mov
jnp
dec
xchg
sbb
fmull
cmp
popa
lahf
jmp
jnp
lcall
xchg
jns
les
sub
mov
outsb
xlat
pop
test
in
stc
test
add
idivl
divb
into
add
jecxz
dec
sti
rolb
sub
xor
xchg
movsb
jl
inc
pop
dec
fldenv
lods
mov
les
sbb
movsl
ja
stc
out
lcall
mov
int
nop
loopne
jg
outsb
std
mov
rorb
xor
sub
add
jg
mov
jecxz
insb
popw
aam
int3
push
test
fstp
popa
cmp
fildl
cli
test
and
into
nop
stos
adc
mov
and
pushf
mov
aas
pushf
xor
daa
dec
lods
andl
jnp
cmp
xor
sti
rol
inc
movsb
rcrl
inc
xchg
jne
push
mov
push
fimull
popa
lret
out
jmp
movsl
aaa
dec
cmp
call
scas
fdivs
sbb
cmp
pop
movsb
xor
out
add
dec
subb
lret
test
dec
pop
dec
jb
leave
mov
push
and
cmp
int
cltd
js
mov
arpl
outsb
ret
in
push
mov
lret
xchg
push
cmp
push
sub
xor
jl
mov
scas
test
jmp
cmc
loope
adc
jnp
into
fmull
out
or
popf
jne
popa
push
dec
inc
jmp
xor
mov
popa
ss
jno
inc
rclb
or
add
repnz
push
cmp
repz
jne
xchg
pop
out
ret
cmp
mov
add
push
add
pop
pop
addr16
push
and
jnp
icebp
sbb
call
loope
out
out
mov
scas
sbb
into
roll
fnstcw
push
sbb
jns
dec
jb
outsb
icebp
xchg
add
pop
jnp
imul
sub
test
orb
xor
or
insb
xor
stos
push
add
xchg
pop
outsl
fwait
mov
stos
xchg
out
ds
xor
addr16
ret
sbb
jns
jbe
dec
mov
jb
xor
xchg
out
jbe
adc
stos
nop
test
pop
jg
xchg
loop
xor
scas
sbb
loope
push
lock
fldenv
dec
lret
setne
fmull
xchg
sbb
pop
push
mov
push
mov
mov
ret
in
mov
frstor
mov
dec
cmp
insb
sbb
dec
addl
into
xor
cmpsb
ret
cmp
mov
repz
popa
xchg
and
jp
leave
mov
fldl
sbb
cwtl
addr16
pop
xchg
mov
inc
push
sahf
test
fwait
and
loop
xchg
aaa
test
inc
fs
mov
test
mov
adc
dec
nop
pop
dec
mov
test
addr16
in
xbegin
gs
aaa
jl
or
jbe
xchg
pop
outsl
in
stc
inc
mov
or
dec
inc
fs
cmp
and
pop
mov
xlat
xor
call
jne
out
adc
ds
push
push
pop
or
and
outsb
push
and
and
std
pushf
mov
fwait
in
sub
lcall
dec
fdivr
fstl
jne
pop
and
or
cmp
fisubs
jnp
xor
push
dec
mov
jb
mov
insl
in
daa
mov
mov
test
aad
and
outsl
inc
out
popf
in
out
js
push
pop
or
sub
fimull
fs
sub
pxor
jecxz
imulb
mov
ja
push
sub
sbb
jmp
jo
repnz
repnz
mov
cld
ljmp
sbb
push
pop
sub
cld
sbb
sub
fisttps
rclb
out
call
pop
es
les
xchg
mov
pop
xchg
js
xchg
mull
fwait
jp
imul
or
sarb
xchg
std
lock
xor
pop
cmpsl
mov
js
outsb
pop
dec
jns
lret
xor
pushf
mov
add
shlb
dec
xchg
fwait
ret
cmpsb
push
imul
popf
xor
addr16
pop
adc
pop
or
scas
sarl
xchg
ss
mov
in
rcll
xorb
inc
push
jecxz
sub
add
push
sbb
stc
pop
loop
imul
jae
fdivrs
jg
pmulhuw
jmp
cmp
or
cmp
xor
cmp
loopne
adc
dec
sti
adc
nop
in
js
mov
rcrl
je
push
xchg
mov
mov
bound
test
adc
dec
xor
cwtl
loop
mov
mov
push
xchg
movl
fiaddl
call
ret
add
and
xor
mov
jbe
in
mulb
and
loope
mov
mov
fsubl
cs
in
mov
xchg
jnp
pop
pop
rolb
inc
into
daa
inc
ss
adc
adc
icebp
mov
scas
loop
mov
in
dec
adcl
jp
mov
shlb
mov
or
ja
jns
pop
pop
bswap
les
test
xchg
xchg
mov
mov
test
pop
pop
je
pop
mov
lods
sti
lods
mov
sahf
cmp
gs
in
dec
sti
xchg
fwait
rcll
push
iret
mov
jge
mov
lea
or
scas
or
sar
add
add
popl
xchg
mov
mov
dec
dec
cmpsb
mov
aam
popf
mulb
cmpsb
movsb
dec
das
repz
mov
mov
pusha
pop
hlt
mov
dec
push
lea
add
mov
mov
xor
push
sbb
mov
int3
jno
jp
les
sbb
jmp
in
add
xor
aad
repz
mov
lcall
mov
pop
movsb
dec
cmp
jne
dec
dec
aad
in
dec
sbb
stos
fldcw
xchg
cli
mov
mov
xchg
call
mov
adc
push
lds
add
mov
jno
pop
mov
sbb
sti
scas
pop
rolb
popa
lret
aad
inc
sub
push
icebp
jbe
aad
mov
rcrl
scas
pop
and
pusha
mov
es
ret
push
xchg
xor
or
movsb
add
dec
popf
push
fisubl
inc
mov
inc
cli
fistps
cli
or
push
popf
jmp
ret
push
or
lahf
xor
pop
add
pop
push
xchg
adc
pop
mov
stos
cmpsl
aam
mov
inc
xchg
pop
stc
jne
cmp
inc
std
iret
lret
in
fnstenv
xchg
iret
add
and
mov
lret
cmp
cmc
jbe
dec
add
jge
fsubl
test
xchg
mov
test
and
je
ds
sub
jns
fisttpl
adc
lods
div
sahf
shl
test
out
mov
scas
inc
mov
xor
sbb
inc
ds
mov
in
mov
repz
xlat
dec
cmpsl
xchg
xchg
cmp
pandn
and
mov
in
lret
fsts
bound
push
in
icebp
into
pop
lods
mov
fidivs
cmp
mov
ss
xchg
cmp
push
cwtl
cmpsb
dec
dec
dec
dec
aaa
fisubrl
test
add
sahf
dec
pushf
inc
movsl
mov
xchg
or
ret
inc
pop
imul
or
out
jbe
ds
xchg
stc
jne
push
or
and
push
leave
loop
xchg
sbb
nop
sbb
addl
xor
mov
out
add
out
cmp
addr16
fcoms
sub
pop
cmpsl
int3
jl
pop
and
cmp
aad
hlt
add
out
push
lret
out
sarb
pop
jns
negb
push
pop
push
jg
out
dec
cwtl
adc
push
jno
int3
pop
xchg
or
clc
gs
jp
cmp
imul
scas
lahf
xor
pop
rorl
out
pop
inc
rcr
push
mov
push
loopne
cltd
push
insl
sbb
jecxz
shl
or
pop
repnz
mov
popa
inc
and
int3
add
inc
lahf
mov
dec
enter
mov
adc
cmp
sub
mov
stos
ss
imulb
enter
jae
push
nop
aaa
xchg
inc
jp
pop
xchg
sub
cwtl
jg
push
xchg
jl
inc
mov
dec
pop
lcall
sbb
sti
adc
out
dec
sahf
es
fbld
in
fisubl
xchg
add
ja
pop
dec
lret
out
popf
push
jmp
push
xchg
lret
out
or
sub
dec
aaa
jge
fnstsw
jbe
ret
pop
xchg
jo
mov
mov
xchg
shll
out
jge
shrl
jg
in
xchg
add
jle
pop
pop
or
lock
in
cmpsl
fmuls
clc
iret
lods
fs
mov
int
pop
daa
cmp
pop
and
jmp
mov
sub
andl
mov
dec
lock
mov
cli
jmp
popf
pshufw
push
cmpsl
xchg
and
stos
pop
mov
stos
out
aad
mov
xchg
mov
imul
cmc
iret
sbb
dec
dec
inc
and
jecxz
mov
dec
mov
stos
sarb
cmp
jns
cli
add
sbb
jl
xor
repz
js
cmp
mov
pop
bound
add
add
and
loopne
addr16
pop
aas
add
mov
cmp
dec
call
ss
inc
test
idiv
test
lret
xchg
dec
stos
nop
mov
scas
les
jns
rol
sbb
jecxz
sbbb
cmp
mov
je
xor
mov
jmp
test
xchg
rcll
push
cmp
into
and
les
addr16
fistpl
shrl
andb
dec
sub
and
testl
out
lods
lods
sub
cltd
fcmovnb
sbb
xor
mov
mov
inc
push
les
cmc
add
ror
call
jle
and
xchg
in
mov
ljmp
popf
lods
push
inc
test
outsl
xor
add
lea
fwait
scas
daa
xchg
scas
bound
inc
out
mov
bound
lock
out
xchg
daa
inc
sbb
testl
andl
cmp
mov
cmp
ss
out
loop
and
cmpsl
cld
pop
ljmp
sub
pop
sbb
xor
aas
adc
mov
sbb
xor
mov
out
testb
sbbl
and
xchg
call
adc
push
mov
push
lods
or
stos
jle
repz
imul
mov
sbb
test
mov
icebp
inc
in
mull
push
repnz
gs
outsb
mov
lret
into
sbbl
out
pushl
es
pop
adc
fcoml
mov
pop
mov
ja
xchg
sarl
stos
insb
or
push
push
xor
repnz
icebp
sti
adc
imul
call
mov
ficomps
outsl
push
cld
out
fdivs
arpl
gs
decb
pop
movsl
mov
loopne
jle
adc
lret
mov
cmpsb
sub
aad
outsb
mov
jmp
insl
cltd
jle
imull
or
jp
jae
ss
jmp
or
fnstcw
mov
pop
insb
sub
dec
cmp
jb
pusha
mov
mov
iret
jne
repnz
mov
adc
aas
int3
cwtl
add
pop
fidivrl
inc
repnz
sbb
repnz
sbb
and
jp
push
es
ds
push
mov
cmpsl
inc
aam
inc
xlat
or
insb
sbb
jnp
movsl
outsb
call
lret
fidivrl
int
outsb
mov
test
in
std
xor
add
hlt
mov
imul
xchg
inc
or
int3
pop
lds
clc
das
les
mov
mov
out
mov
dec
mov
jg
mov
pop
pop
adc
nop
out
jbe
cs
fxch
shrb
push
pop
das
and
pushl
lcall
cmpsl
data16
lea
dec
inc
outsl
add
push
xor
stos
nop
cmp
push
ljmp
push
fistpl
cmpsl
adc
pushf
or
fidivrl
nop
inc
testb
xor
jno
ss
out
insb
sub
push
dec
pop
pop
mov
sahf
add
sbb
roll
push
sbb
push
mov
loope
sbb
mov
mov
pushf
xor
push
xchg
ljmp
pop
push
dec
clc
insb
imul
mov
or
push
mov
fisubrl
or
je
jmp
pop
enter
punpcklwd
cs
mov
xor
jo
pop
sbbl
xchg
adc
popf
xchg
aaa
mov
inc
push
and
scas
imul
out
or
ret
jge
pop
sarb
fists
adc
je
sbb
sbb
cmp
enter
cmp
pop
lret
imul
jno
das
sub
nop
add
imul
jns
daa
gs
and
and
add
pop
test
orl
loopne
outsb
fnop
inc
lret
xchg
stos
and
sub
fcoms
dec
lret
jg
lcall
cmp
xor
mov
or
cmp
scas
addb
stos
inc
lahf
inc
cmp
sub
cmc
shrl
leave
and
cmp
pop
jmp
sbb
outsl
rcrb
aad
and
fwait
xchg
mov
test
pop
sub
mov
lahf
in
jo
and
nop
mov
add
push
xchg
out
cmp
mov
popl
loope
jmp
push
push
imul
fsts
ret
aaa
lcall
clc
popf
test
es
cmp
in
je
lods
stos
cltd
lock
fsubl
pusha
movsb
cmpsb
pusha
cmpsb
push
fs
or
pop
fmul
mov
adc
dec
ss
jle
pushf
mov
cmp
add
cmp
mov
aas
push
mov
paddb
cmp
out
jp,pn
call
mov
jl
push
sahf
mov
sbb
push
adc
jl
add
arpl
cmp
test
rclb
adc
into
test
ret
push
subb
mov
adc
iret
push
add
test
bound
je
push
inc
test
sbb
push
mov
aas
shll
mov
loope
push
flds
movsb
jmp
jo
into
daa
inc
mov
sarb
or
push
cmpsl
dec
add
aam
or
push
mov
mov
cmp
ret
jmp
lds
sub
jge
sahf
cld
int3
inc
push
int3
xchg
inc
jp
aam
icebp
mov
popf
sbb
sub
fs
cmp
lret
xchg
imul
iret
pusha
mov
stos
add
gs
loopne
mov
pusha
and
or
xor
rcrb
dec
aam
daa
sub
mov
lcall
xor
aaa
add
ret
int
add
rol
movsl
pop
insb
repz
rol
test
mov
ja
jecxz
loopne
outsl
mov
jns
fstpl
ret
adc
cs
cmp
mov
xorl
dec
mov
and
dec
sbb
sub
cmpsl
add
mov
pop
imul
cld
cmp
aas
push
and
or
push
fsubl
cmp
mov
negl
mov
test
mov
cltd
cmp
cli
sbb
leave
push
add
in
mov
cli
jmp
or
sti
push
xchg
jo
sbb
aam
push
jbe
or
fs
repz
push
jns
arpl
les
xchg
pop
ficoml
jb
cs
test
js
sarb
and
ret
sub
outsl
push
outsb
jmp
and
xor
mov
xor
test
call
sub
fcomps
sti
fadd
cmc
or
mov
and
cmpsb
inc
xchg
mov
shrl
cmp
aaa
mov
rolb
sub
ds
div
idivl
aas
xchg
cli
out
aam
lods
pop
mov
decb
aad
hlt
cmp
ret
and
xor
mov
push
dec
xchg
cltd
lcall
sbb
xchg
xchg
and
dec
dec
push
imul
outsl
inc
arpl
sbb
push
addl
adc
in
lret
cli
shll
xchg
rorl
inc
push
dec
in
jmp
clc
inc
inc
sbb
inc
repz
icebp
seta
ljmp
data16
aas
cmp
or
dec
lock
sar
mov
or
push
push
std
popf
jo
pusha
add
adc
and
inc
in
arpl
scas
jae
sub
mov
push
adc
mov
jg
pop
cmpb
cwtl
shrl
das
xchg
mov
xchg
add
push
cmp
mov
ret
sti
sbb
and
int
test
jp
iret
sub
or
fsubrl
pop
aas
jl
adc
cs
add
mov
xchg
hlt
pop
popa
cld
shll
fsts
xor
pop
fidivl
dec
inc
out
xchg
jns
sub
push
xchg
in
out
pushf
sti
mov
jmp
scas
dec
rcl
push
bound
jl
rcl
mov
jne
dec
add
push
mov
add
pop
inc
and
jmp
rolb
push
cmpsl
xchg
adc
adc
dec
stos
mov
jne
xchg
dec
jnp
mov
dec
sbb
add
sub
adc
aaa
ds
movb
in
js
scas
xlat
xchg
cmc
decl
stos
push
stos
ja
arpl
cmp
call
in
ss
divb
pop
push
sbb
mov
data16
shr
fcmovnbe
cld
aam
mov
cmp
xor
pop
orb
iret
adc
push
shrl
mov
loope
test
daa
mov
and
push
test
mov
stos
cmpsl
mov
sub
xchg
mov
mov
push
int
mov
or
sbb
mov
lret
sub
jbe
jno
repnz
mov
sbb
movsb
fisttpl
dec
cs
and
dec
call
sub
addl
testl
jb
or
movsl
ds
mov
cmpsl
jmp
inc
sbb
xor
paddb
sbb
shlb
jge
mov
jl
in
mov
sarl
pop
mov
and
mov
adc
daa
mov
mov
in
out
mov
adcl
xor
dec
push
popa
insl
and
jae
fs
es
xor
xor
jnp
movsl
xor
repz
lcall
idivl
xchg
loop
cmpsb
pop
repnz
xchg
out
lret
mov
imul
push
scas
inc
cli
jns
inc
loope
scas
jl
fisttpl
or
imul
call
gs
fisttps
stos
mov
and
orl
cmpsb
sbb
add
lahf
and
lock
mov
bound
mov
aaa
pop
jne
push
jmp
pushf
pop
mov
outsb
xlat
hlt
push
or
cltd
add
lret
in
enter
cmp
sub
test
push
push
mov
fwait
rcll
ficomps
pop
xlat
jne
repnz
xchg
cmp
addl
sbb
cmc
cwtl
sahf
insb
lock
fiaddl
fldenv
inc
jle
into
mov
pop
sub
or
xor
xor
mov
dec
fisttps
jo
pop
icebp
lods
dec
addr16
or
movsl
imul
fidivs
mov
inc
iret
adc
test
scas
cld
jns
sub
jbe
jecxz
jno
divb
dec
push
in
jae
lea
jnp
push
in
ret
lea
sbb
jecxz
ret
mov
jge
add
jbe
cmp
test
mov
add
adc
adc
dec
stos
adc
xchg
imulb
outsl
in
ljmp
and
jbe
rcrl
inc
shll
mov
fimull
push
sbb
jno
jns
push
test
pop
filds
lahf
ds
adc
xchg
cli
subb
push
xchg
testb
inc
pop
pop
push
in
out
lea
jmp
rclb
sbb
mov
push
movsb
dec
andl
iret
jno
ljmp
stc
mov
mov
dec
fistl
mov
dec
mov
cmpb
inc
pop
outsl
add
dec
mov
cmp
xchg
pop
dec
lret
xchg
inc
lahf
sbb
push
ss
arpl
mov
mov
pusha
fcomps
repnz
in
adc
loopne
xchg
out
mov
pop
popf
push
push
dec
jb
loope
pop
cwtl
xchg
insl
pop
or
or
stos
or
rcr
orl
aas
data16
dec
xchg
adc
cwtl
jbe
lea
nop
movsl
movsl
insb
iret
insl
fcmovb
mov
test
xchg
add
fs
pop
movsl
inc
xchg
push
dec
xchg
ds
and
mov
subb
mov
scas
mov
and
pop
imul
inc
inc
pop
jp
lret
ret
cld
add
ds
dec
sub
lds
into
test
ret
in
mov
test
or
and
call
mov
cmp
xlat
sub
add
cmp
cmp
scas
pop
mov
sub
mov
repz
movsb
add
mov
jno
push
scas
ret
cli
fmul
andb
int
js
pop
cmp
and
xchg
mov
in
cmpsb
cmc
adc
lret
les
push
jae
cmp
orl
mov
ss
es
or
in
mov
xor
fbld
cmp
jmp
mov
or
lods
jecxz
outsb
loope
xor
shl
xchg
adc
stc
clc
iret
xchg
sti
jl
and
adcb
cmp
data16
fadds
lahf
jno
in
cmp
lock
outsb
and
test
or
ja
fsubr
sub
js
pop
popf
insb
and
mov
sahf
subl
stos
aad
cmp
and
adc
xchg
push
lcall
xchg
inc
and
dec
fucomi
xchg
lahf
das
mov
mov
hlt
mov
sbb
cmp
cltd
mov
push
repz
aaa
rcll
jp
xchg
sub
dec
mov
xor
mov
hlt
inc
int3
xor
or
daa
jae
sub
inc
jg
popa
dec
and
cmpsl
pop
icebp
call
ss
add
jl
or
loopne
dec
mov
mov
dec
pop
mov
push
ljmp
insl
xor
cmp
jb
rcrb
pop
or
dec
push
dec
leave
stc
cmp
sbb
das
mov
lods
pop
push
adc
mov
inc
pop
dec
sbb
pop
scas
jno
push
and
pop
inc
push
icebp
mov
pop
add
cwtl
mov
inc
add
mov
xor
test
mov
cmpsb
xor
aaa
pop
push
xchg
jmp
pop
test
fidivs
scas
movsl
xchg
cwtl
or
cs
cmp
leave
fisttps
inc
orb
xchg
xchg
adc
push
pop
jbe
sbb
add
cmp
insb
push
pushl
push
pop
adc
imulb
stc
notb
pop
mov
mov
mov
push
xchg
cmpb
imul
loopne
xchg
aam
test
jp
aas
loopne
mov
push
mov
cli
xchg
adcl
xchg
pop
sub
sub
mov
jge
out
cmp
adc
adc
adc
xchg
adc
pop
lea
sbb
xchg
or
stc
movsb
sbb
push
add
aas
fs
mov
cwtl
sub
adc
sbb
pop
jmp
scas
mov
sub
hlt
in
outsl
dec
mov
and
mov
in
jg
cs
fwait
add
adc
je
lret
pushf
into
icebp
fidivl
jmp
pop
in
jno
sub
mov
jle
leave
test
mov
rolb
in
add
jnp
jp
insb
iret
fcmovne
aad
dec
pop
out
jl
ja
das
and
pop
imul
cmp
add
xlat
shll
jb
mov
mov
popf
jbe
adc
push
loope
sub
mov
in
xchg
mov
xchg
test
jb
cmc
ror
cli
mov
lods
fidivrl
aaa
data16
outsl
push
rcrb
mov
jcxz
adc
cmp
add
dec
sbb
inc
inc
push
cmc
mov
cmp
inc
xlat
inc
popf
adcb
adc
cmp
sbb
xor
cmp
js
ficoms
jno
repnz
adcl
bound
andb
mov
aam
leave
mov
lahf
xchg
movsl
clc
xchg
mov
movl
lods
into
mov
mov
xchg
outsb
sub
mov
out
add
lcall
mov
leave
ds
cmp
pusha
jl
mov
aas
icebp
adc
mov
jle
inc
push
sub
push
jbe
fcomps
fsqrt
mov
sub
mov
clc
lahf
xor
std
mov
push
movsb
push
lahf
jno
xchg
push
xor
shll
pop
ds
rol
mov
or
mov
jo
mov
inc
jge
xchg
jecxz
pop
test
sti
iret
xor
stc
push
mov
mov
jp
cmp
nop
fiadds
add
sub
and
sbbl
sub
and
fcomps
pop
push
pop
shll
cmp
mov
jb
stos
pop
pop
inc
xchg
popa
int
push
pop
sub
into
ja
cmp
lods
fs
lods
aaa
jnp
dec
mov
add
lods
pop
jbe
cwtl
mov
push
ficoms
add
incl
sahf
fsubl
jge
xchg
jns
mov
je
test
loopne
mov
out
or
xor
std
jns
jge
psubw
mov
jae
lods
cmp
outsb
push
popl
lret
mov
mov
ja,pn
lcall
jecxz
ja
test
pop
push
xor
pushf
xor
loop
pop
cmpsl
xlat
lret
pushf
int
push
lds
imul
fnstcw
ror
pop
lea
mov
inc
js
push
loop
inc
jge
sub
fldt
jo
leave
dec
cmp
jns
fs
ss
pushf
jmp
add
xchg
inc
outsl
mov
mov
mov
imulb
lret
lret
popf
adc
sbb
adc
mov
popf
mov
push
inc
fstl
js
sub
rcrb
testl
and
jb
xor
fcomi
repnz
dec
aaa
sbb
icebp
loopne
aam
and
enter
inc
sar
add
sub
adc
inc
out
enter
and
pop
cmpsl
mov
xor
sbb
jge
xchg
sarl
ret
xchg
inc
psubw
cpuid
cmp
ja
add
nop
dec
inc
mov
pusha
jecxz
lods
sbb
cs
icebp
gs
mov
movsb
lds
xchg
push
jb
dec
movlps
push
pop
jecxz
xor
pop
cmp
mov
mov
push
xor
push
shll
push
jns
mov
push
sub
aad
in
andb
inc
das
in
dec
dec
adc
scas
cs
dec
push
adc
imul
rorl
daa
push
sbb
aas
aaa
dec
cwtl
cwtl
push
mov
xchg
fldz
loopne
sbb
imul
sbb
sarb
mov
dec
or
stos
test
ret
adc
popf
xor
push
and
add
mov
xlat
mov
stos
inc
dec
sbb
fsubr
popa
dec
dec
cmc
xor
std
in
arpl
jl
out
aad
pushf
inc
clc
push
fs
jne
adc
cmp
sbb
sti
ret
xchg
mov
xchg
fsubrs
jae
sub
lcall
fistpll
imul
movsl
jae
inc
cmp
fisubrl
aas
bound
jno
cmp
loop
pop
in
sub
push
sbb
adc
ja
jbe
ret
loop
mov
imull
sbb
jb
in
mov
out
ljmp
sbb
fsubs
imul
sbb
pop
dec
andb
mov
inc
inc
mov
pop
pop
loop
lods
adc
aam
pop
mov
mov
pop
stc
inc
mov
inc
stos
test
push
inc
bswap
sbb
push
mov
enter
and
mov
imul
sub
dec
jl
loopne
subb
cld
lods
loop
bnd
sub
jmp
push
mov
out
ljmp
sub
sub
or
push
and
jbe
movsb
push
cld
movsb
cmp
and
mov
inc
inc
inc
into
sahf
in
ret
outsl
nop
pop
data16
rolb
hlt
push
sbb
cmp
inc
das
movsl
ljmp
clc
fnstcw
lea
jne
in
push
out
inc
sub
jp
adc
data16
add
in
jnp
dec
js
adc
sbb
lret
cmp
and
int
jge
fstpt
mov
xlat
xchg
rorl
mov
jmp
mov
and
cmp
xor
mov
lods
mov
iret
sub
clc
mov
mov
loopne
lock
mov
leave
mov
cmp
fcoms
mov
xchg
xchg
aad
stos
push
fsubrl
icebp
mov
jb
mov
vphadddq
add
pop
enter
cli
xchg
lret
mov
ret
gs
jmp
loop
or
testb
push
pop
add
cmc
jmp
fcmovbe
in
lret
out
jnp
shlb
dec
jb
js
pop
push
daa
cmpsb
ret
cmp
or
fimuls
icebp
outsb
mov
xor
xorb
adc
mov
push
dec
aam
pop
mov
out
mov
lock
inc
inc
mov
jbe
or
movsb
dec
adc
leave
xlat
pop
leave
pusha
inc
adc
inc
pop
or
push
rorl
cmp
cmpsl
push
mov
addr16
enter
mov
loope
xchg
adc
mov
sbb
clc
cmp
add
jae
mov
xor
dec
xor
in
add
fists
mov
in
out
jg
sahf
jl
jg
faddl
dec
jmp
lods
fistl
push
dec
push
add
jmp
not
insb
mov
dec
dec
xchg
xor
stos
sub
sahf
push
pop
pop
nop
xchg
dec
add
xchg
outsb
scas
ja
cmp
or
dec
cmp
dec
loop
in
dec
add
sahf
jle
push
push
lods
inc
cmp
sub
and
pop
and
in
ret
push
push
mov
dec
add
and
lock
push
mov
cmp
arpl
test
jge
mov
xor
jge
inc
add
mov
push
push
out
xor
adc
pop
test
pop
mov
sahf
fstl
ficoml
loop
xor
data16
jno,pt
mov
enter
xchg
dec
jo
lret
lret
xor
or
dec
pop
xchg
jbe
sbb
shll
mov
sub
cmp
jae
jae
clc
shlb
mov
out
repz
mov
adc
push
mov
adc
aas
add
sahf
pop
rcll
pop
movsb
dec
popf
inc
jle
mov
add
ss
jns
idivl
out
call
iret
sbb
xor
sbb
xchg
mov
int3
inc
add
pop
lcall
cmp
jno
fincstp
pushf
sub
repz
ret
push
pop
pop
or
pusha
sti
mov
loope
mov
sub
push
adc
inc
cmovbe
aaa
or
aam
ret
cmp
mov
push
in
pusha
dec
mov
fcmovnu
cmp
add
out
aam
mov
jge
adcl
fdivs
jo
mov
xchg
addr16
aas
popf
mov
shll
sbb
rclb
push
inc
addr16
jno
test
or
mov
cwtl
clc
sub
jmp
mov
adc
icebp
sub
popf
scas
xchg
pop
and
scas
mov
jmp
test
jecxz
fiaddl
rcll
mov
sbb
jnp
pop
shrl
jo
sbb
rcrl
xlat
arpl
push
or
das
outsl
cmp
shr
add
push
mov
imul
lods
cmc
in
mov
or
dec
inc
push
fpatan
and
bound
orl
jns,pt
fcomps
push
inc
pushf
in
cmpsb
jg
inc
inc
pop
push
lea
push
cmp
lea
or
int
inc
mov
add
jmp
or
inc
fdiv
ret
and
pop
mov
xchg
out
ret
lock
adc
scas
lock
jae
xor
psrad
jg
loope
stos
push
sub
inc
mov
out
rorb
subps
addr16
or
pop
rclb
sbb
jp
aam
ret
and
mov
pushl
push
nop
jmp
pop
sub
sbb
aad
cli
fs
mov
dec
pop
mov
pushf
cmpsb
mov
int3
lea
in
push
jae
test
dec
pop
pop
xchg
dec
push
xchg
repnz
lds
push
mov
cmp
pop
push
fiaddl
lock
aad
loop
xchg
or
pop
inc
cmp
jmp
mov
enter
sbb
mov
out
pop
cltd
scas
pop
sbb
add
lahf
sbb
iret
cmpsb
lret
pop
scas
mov
push
pushf
xor
or
out
daa
add
rcrb
outsl
orb
fimull
pop
aad
mov
xor
decl
mov
cltd
fwait
sti
jae
inc
and
mov
arpl
ja
addr16
cmc
scas
inc
fstpl
push
stos
pop
imul
in
push
lods
loope
mov
mov
mov
or
xchg
inc
in
cmc
shlb
outsl
dec
bound
xchg
leave
adc
je
mov
xchg
cld
aas
test
addl
arpl
shll
insl
adc
outsb
nop
fnstsw
out
leave
xchg
sub
jne
mov
push
les
sbb
jne
dec
lods
and
dec
adc
test
clc
fcoms
in
pop
pop
sub
loop
push
pop
cli
fdivs
xchg
push
push
xor
lods
sbb
sub
and
and
in
out
cmp
out
in
fiadds
xchg
movsb
push
or
cmpsb
lahf
push
mov
xlat
jmp
js
ror
aaa
ss
mov
mov
xor
es
mov
sub
shll
mov
out
sub
lahf
or
add
mov
stos
movsb
bound
insb
jge
mov
xor
scas
gs
jge
add
xchg
push
je
mov
sbb
jb
movsb
scas
enter
cwtl
xorw
and
inc
inc
loop
lret
cmp
int3
das
gs
adc
pop
pop
or
dec
xor
cmpsb
jle
mov
or
je
sub
shlb
call
jo
jg
cmp
xor
movsl
loope
pmulhw
outsb
and
fistpll
cltd
sbb
xchg
sbbl
mov
cmc
ds
mov
mov
dec
and
push
pop
jl
imull
xchg
inc
sbb
test
in
inc
mov
mov
push
shll
sub
pop
pop
mov
add
push
jo
imul
ret
dec
orps
dec
fcmovbe
leave
pusha
insl
cwtl
cmp
or
iret
and
movsl
pop
popa
cmp
dec
push
lea
loopne
dec
bound
lods
push
mov
jg
inc
xchg
mov
aas
and
or
jp
mov
push
dec
int
xorb
inc
cmp
dec
mov
out
loop
dec
lock
push
jns
mov
or
mov
inc
ret
jbe
push
jle
js
das
out
pusha
adc
jmp
mov
push
cld
push
xchg
sub
push
lahf
and
das
aam
push
inc
inc
nop
and
cmc
push
dec
add
aam
int3
mov
pop
jmp
mov
jl
mov
psubq
fdiv
out
mov
fwait
mov
jbe
jo
cltd
lods
ret
repz
push
pop
pop
imul
push
jne
loopne
data16
loopne
jl
mov
sbb
pusha
jb
outsl
mov
into
xor
mov
es
loope
and
jo
out
mov
pop
xchg
xchg
test
sbb
cmp
cmpsl
cmpsb
mov
sbb
or
and
repnz
jb
rorl
ja
push
in
xchg
jo,pn
xor
jp
cmp
or
out
fwait
mov
aas
xchg
cmpsb
cli
outsb
js
imul
push
add
push
and
add
loopne
jne
inc
dec
lret
fcmove
xchg
aad
inc
mov
add
lods
pop
and
and
fwait
push
in
mov
fsubrl
and
add
push
movsb
mov
xchg
mov
mov
inc
pop
jecxz
mov
and
sub
jl
cltd
dec
fstl
ret
cltd
sarb
sbb
out
mov
mov
nop
ret
cmp
mov
adc
pop
sub
and
xlat
fidivl
jne
outsl
ret
fucomi
pop
scas
shl
pop
fcom
mov
ss
add
lret
popf
or
test
adc
and
rorb
mov
xlat
mov
jl
pop
xchg
inc
fs
je
pop
dec
adc
inc
dec
in
orb
inc
in
pop
popf
outsb
add
orb
addr16
ret
and
sahf
sahf
inc
jae
xchg
inc
sub
jmp
ret
cltd
ds
into
ljmp
fwait
pop
jns
rcll
ss
pop
jno
xchg
jle
pop
pop
dec
push
xor
fisttpll
in
mov
xor
mov
std
aam
mov
mov
and
pop
add
xor
xchg
aas
cmpsb
stc
jns
adc
xchg
xorl
and
sbb
cmp
stos
xchg
ja
jecxz
repnz
xchg
cmp
repnz
push
cmc
stc
mov
sub
iret
pcmpgtd
jne
int3
loope
jmp
leave
inc
xchg
or
mov
mov
add
in
push
jg
xor
pop
rorl
mov
dec
mov
add
insb
cmp
sbb
cmpsl
movsb
mov
ja
add
fcoms
sti
aaa
dec
xor
lret
mov
cld
cmp
mov
add
xchg
stos
shl
cmp
jmp
gs
push
lods
or
mov
mov
std
adc
inc
sub
xchg
dec
sbb
push
jge
test
insb
add
mov
fsubrs
adc
lock
xchg
rcll
lahf
or
and
ret
pop
pop
lds
dec
push
cmpsb
push
repnz
jnp
subl
leave
mov
jg
shl
push
test
mov
push
lcall
dec
pusha
pop
mov
cmp
xchg
test
jmp
iret
adc
ss
cmp
andb
imul
xor
dec
outsl
cmpb
sub
cmp
and
cmp
inc
inc
lods
pushf
pop
xchg
or
dec
mov
and
or
aaa
sub
daa
pop
cmp
push
sahf
test
push
scas
int3
in
mov
insl
mov
pop
lods
std
rcll
testl
cmpsl
mov
shlb
mov
inc
repnz
scas
testl
sbb
push
mov
cmp
hlt
or
or
pop
xchg
add
ret
sub
push
sub
cltd
call
fiadds
shl
cmovb
adc
or
cmp
out
sub
cli
leave
jg
adc
rorl
sbb
jns
jl
daa
pop
push
rorb
sub
sahf
mov
push
and
lock
add
fbstp
mov
lea
fldlg2
and
and
and
add
jle
pop
sub
push
fwait
adc
jp
mov
sub
jle
repz
sbb
inc
or
lahf
int3
testb
cwtl
cmp
adc
xorb
mov
add
inc
push
std
dec
out
jne
jae
pop
shlb
es
xchg
imul
lods
jbe
outsb
add
stos
adc
shlb
push
push
cltd
daa
xchg
inc
inc
jnp,pt
jg
cwtl
xor
lods
jae
xchg
sub
lock
cmp
pop
nop
sahf
mov
cltd
sbb
dec
or
shlb
and
stc
icebp
std
adcb
push
pop
mov
or
movsl
mov
scas
or
mov
pop
or
xchg
or
xchg
movsb
f2xm1
mov
dec
sarl
incl
testb
xor
lock
and
es
nop
sahf
jns
negb
ret
jno
cmc
loop
hlt
ds
mov
shrb
ljmp
jne
iret
cltd
lods
leave
pop
cmc
cmp
dec
pop
stos
fwait
shrl
cmp
fucomp
in
push
rorl
jl
sbb
popa
addr16
adc
push
in
or
cmp
bound
add
add
inc
jnp
outsb
mov
or
pop
xchg
mov
cmp
loop
adcl
mov
movb
xorl
movaps
call
insb
int
xor
pop
jmp
xchg
add
add
or
inc
nop
inc
cmp
xor
movsb
jecxz
imul
int3
dec
fs
mov
dec
mov
hlt
inc
dec
std
xchg
outsb
shrb
push
scas
pop
sub
lret
mov
xchg
int
mov
sahf
jno
mov
adc
test
sarl
sbb
and
sbb
push
push
mov
pop
inc
loop
fwait
not
leave
push
movsl
bnd
and
or
xor
push
xchg
inc
mov
mov
and
pushf
mov
mul
pop
movsl
ret
mov
inc
dec
rorb
xchg
jecxz
loope
loopne
leave
mov
into
aaa
pop
ret
imul
insl
movsb
push
inc
adc
jnp
ljmp
xor
jno
je
in
sub
or
jno
loop
dec
fsubp
aaa
cmp
dec
mov
mov
adc
cmpsb
js
stc
rcrb
nop
mov
sub
repnz
loop
jg
cmc
jecxz
xor
xchg
insb
cmp
pop
or
push
push
imul
dec
call
adc
lods
push
js
adc
mov
inc
mov
fst
cmp
cmp
stc
popf
xchg
xchg
pop
cmp
pop
js
jae
in
sbb
push
cwtl
dec
outsb
test
stos
into
into
dec
push
mov
imul
cs
mov
mov
ret
xor
inc
fldl2t
mov
and
in
cmp
mov
aam
sbb
cmp
cmpsl
pop
addr16
add
in
mov
aad
leave
filds
xor
mov
into
in
adc
insb
jmp
xchg
sub
clc
inc
mov
and
xchg
jp
clc
loopne
jp
push
adc
sbb
or
adc
lock
ret
fsubl
sbb
ja
outsb
pop
cli
mov
out
jp
js
cmp
lds
adc
iret
cmc
mov
mov
lds
out
adc
sbb
mov
xor
xchg
into
mov
mov
hlt
mov
mov
and
mov
les
and
out
sbb
jge
btr
data16
mull
xchg
mov
fucomip
push
inc
scas
xlat
ja
outsl
addr16
inc
call
cmc
push
fistpl
cmc
mov
int3
push
movsl
xchg
adc
outsl
aaa
and
jb
rcrb
or
aam
inc
mov
pop
pop
jns
lds
out
pop
xchg
adc
lcall
std
add
push
mov
sub
scas
add
sbb
arpl
popa
push
dec
cmp
jle
sbb
cwtl
xor
pop
jbe
lea
mov
ret
xorps
js
and
popf
mov
cmp
fisubrs
inc
subl
shlb
pop
insl
xlat
es
push
cmpsl
cli
mov
dec
fldl
fsts
ss
sbb
jge
or
dec
sub
mov
fldcw
mov
mov
jg
lcall
pop
pop
sbb
cwtl
xchg
xor
jae
ss
push
out
xorb
scas
sahf
jecxz
mov
jb
cwtl
popa
mov
repz
fs
add
hlt
js
repnz
lcall
sbb
pop
cmp
mov
xchg
mov
adc
out
in
inc
mov
ror
loopne
fdivrp
cmp
fdiv
xchg
cmc
lcall
daa
adc
mov
mov
add
pop
bound
ds
jae
mov
and
dec
into
cmp
mov
push
or
shl
out
xchg
jl
int
paddusb
aaa
cmpsl
fcoml
jp
in
repz
or
push
movsb
je
mov
adc
pop
push
dec
pop
dec
gs
gs
mov
imul
fucompp
lock
mov
add
dec
repnz
in
xchg
add
jg
jbe
mov
jg
cwtl
mov
pop
or
push
mov
leave
repz
xlat
inc
popa
daa
lods
mov
sub
in
mov
sbb
push
ds
lcall
nop
mov
hlt
lods
shlb
or
data16
addr16
jb
dec
lock
fcmovnb
insl
cmc
xchg
les
mov
es
dec
fcomps
jnp
add
repz
mov
add
add
cmp
mov
pop
mov
cmpsb
lods
arpl
movsb
stc
sub
add
bound
faddl
daa
xor
shlb
rcr
enter
aad
cs
hlt
jge
xchg
bound
sub
dec
into
xchg
subl
in
cmpsl
add
repz
lahf
cmc
movsb
stos
test
or
lock
int3
mov
dec
cwtl
xor
sbb
rclb
inc
inc
pop
mov
xchg
shl
xor
mov
outsb
sbb
loop
mov
or
and
adc
out
push
jno
inc
fld
add
fimull
push
testl
ljmp
adc
adc
mov
outsb
into
pushf
out
jg
jns
fisubrs
xorl
movsl
lret
or
cmp
popa
stos
nop
or
flds
aaa
testl
sbb
pop
jno
add
jb
out
mov
sarl
imul
jns
sub
push
ss
imul
push
test
sbb
shr
mov
sbb
stos
pop
inc
push
scas
mov
lret
dec
xchg
aas
daa
ljmp
enter
fs
inc
mov
mov
sbb
repz
ficoml
pop
sarb
sbb
ja
add
sti
outsb
hlt
lea
and
mov
mov
mov
movsl
addb
scas
jge
adc
jae
dec
jo
push
sub
out
enter
out
sub
dec
ret
fiaddl
shlb
mov
inc
adc
loope
sub
fists
xchg
lcall
rorb
jmp
or
push
jb
out
fdivrp
pop
subl
in
leave
hlt
mov
stos
lahf
testl
mov
imulb
sub
push
cmp
jae
jbe
jecxz
or
fnstsw
mov
cli
or
aam
xchg
gs
sbb
pop
loopne
jb
dec
or
mov
jns
push
ss
fcomi
arpl
dec
cmp
ss
arpl
imul
dec
sbb
or
dec
cs
mov
stos
jl
add
xchg
cmp
cmp
rcll
cmp
push
arpl
dec
xchg
cmp
jp
popf
rorl
or
sub
push
andl
repnz
sbb
mov
mov
pop
in
inc
adc
add
xlat
lds
xchg
mov
pop
call
mov
mov
pop
lret
dec
pop
mov
ret
andl
xor
popa
push
jmp
fs
pop
outsb
lods
add
mov
fistps
test
xchg
call
lret
push
inc
inc
xor
add
push
bound
or
rcrl
push
sub
setnp
aad
es
ljmp
push
das
test
inc
imulb
loop
and
mov
out
cmp
push
pavgw
pop
imul
pop
popf
mov
jbe
xor
fldcw
and
insb
add
add
add
add
repz
jnp
mov
popf
js
and
cmpsb
ss
mov
inc
inc
xor
inc
mov
push
mov
sbb
sub
mov
mov
jmp
or
rcll
mov
jbe
pop
push
out
and
aam
and
xor
insl
imul
mov
stos
test
jmp
xchg
xlat
popf
cmp
add
push
inc
outsb
lods
pop
xchg
cs
pop
sbb
jne
out
insl
int
cmovo
fs
into
fwait
mov
mov
outsb
dec
and
int3
mov
cltd
imulb
fisubl
mov
mov
lods
jge
mov
dec
addr16
mov
add
filds
sahf
rolb
or
xlat
push
lret
imul
sub
iret
inc
sub
push
inc
inc
stos
sbb
or
sbb
mov
aad
adc
cmc
dec
xorl
sar
test
xlat
xor
mov
push
mov
imul
pushf
push
out
inc
icebp
push
clc
and
mov
mov
mov
dec
pop
lds
pop
mov
out
xchg
pop
sub
adc
into
push
clc
dec
sub
inc
xchg
mov
lcall
rolb
ret
repz
lret
clc
popf
lret
dec
jne
loopne
dec
cli
cmp
xor
inc
fs
inc
pusha
mov
lods
or
shll
lods
push
xchg
jne
nop
jg
push
lahf
pop
pop
fimull
jno
rcrb
bound
mov
xor
cs
mov
mov
aaa
imul
mov
xchg
push
mov
div
test
mov
cli
ds
mov
into
adc
xchg
pusha
gs
mov
cmp
lock
outsb
aaa
adc
xor
fmuls
imul
cmpsl
ja
ds
pop
xor
in
arpl
lahf
and
dec
or
adc
inc
mov
ret
inc
pop
push
xchg
mov
inc
mov
and
stos
push
sahf
std
fdivrl
mov
mov
out
imul
cld
inc
pop
insl
lds
or
insb
adc
cmc
xchg
xchg
aad
xor
mov
and
xor
les
adc
jmp
and
mov
insb
out
jb
mov
adc
xor
sbb
sbb
adc
dec
push
stos
pop
pop
inc
es
imul
hlt
cmp
adc
outsl
and
mov
jl
jp
insl
add
inc
lock
mov
icebp
std
xlat
inc
dec
movsb
aad
cmpsl
mov
in
fcoml
mov
mov
les
and
mov
dec
sti
sub
enter
sbb
rolb
xor
mov
cmp
loope
mov
ficompl
test
imul
lret
pop
or
sub
push
and
sub
jnp
jno
pop
pop
xor
call
xor
pop
movsl
adc
inc
jb
mov
mov
lret
dec
adc
mov
loopne
ret
fimull
inc
cs
idivb
repnz
andl
lds
dec
lock
inc
dec
push
lret
subb
mov
fcom
adc
xchg
fcoms
dec
adc
xchg
jno
and
mov
sub
test
daa
not
ret
scas
xlat
popf
test
push
orb
notl
push
inc
aad
stc
jno
addr16
pop
sar
cmpb
dec
shrl
inc
mov
mov
pop
or
fs
jp
std
mov
and
aas
pushf
push
aad
lods
jns
xchg
dec
cmp
movsl
mov
or
cmpb
xchg
aaa
or
inc
and
sbb
adc
cld
jb
into
outsb
adc
lret
test
incb
std
shll
sbb
flds
xchg
sbb
cmp
out
xor
mov
vhsubps
ret
cwtl
fildl
stos
adc
nop
mov
pop
inc
mov
jecxz
roll
mov
or
dec
xor
jns
xor
inc
mov
pop
iret
jnp
movsl
adc
lods
mov
jle
sbbl
subb
xchg
dec
dec
out
aad
movsl
sbb
jne
mov
std
js
mov
stc
arpl
sub
push
or
xor
jmp
lret
loopne
test
add
cwtl
jge
ret
mov
sbbl
cs
or
xor
inc
insb
mov
orb
and
lret
add
stos
push
push
imul
cmp
and
or
pop
daa
minps
movsl
adc
xchg
aaa
lahf
ds
lahf
sahf
faddl
xor
dec
adc
add
pop
ja
call
push
mov
ja
popf
std
ljmp
sbb
jmp
sbb
cmpsb
into
sahf
push
cwtl
jns
lcall
les
pop
add
aad
xchg
in
ffreep
cmp
jecxz
dec
test
sbb
out
adc
xchg
pop
xor
je
addr16
jne
cmpsb
mov
popa
cmp
js
mov
in
and
adc
xchg
push
sub
add
mov
gs
pop
mov
mov
xchg
scas
push
mov
scas
adc
je
add
rcrl
pop
inc
jo
stos
push
shrl
sub
test
push
sbb
inc
orl
fs
cwtl
inc
xor
xchg
sbbl
push
jg
fstl
imul
call
arpl
lret
mov
movsl
out
pop
test
lea
rclb
popa
outsb
outsl
repnz
pop
cltd
jns
ss
inc
jo
mov
mov
mov
mov
cltd
sarl
sub
cmpsl
pop
enter
lcall
mov
jne
cld
inc
dec
and
jae
int
push
imul
jnp
dec
pop
pop
or
sbb
sbb
fistps
stc
sbb
or
loop
sub
sub
fdiv
push
movsl
jmp
gs
mov
mov
mov
xor
pop
stc
cmp
ficomps
das
xor
mov
int3
inc
adc
pushf
aas
sub
arpl
push
push
outsl
add
jne
mov
shlb
cmpl
outsb
test
cmp
fwait
mov
mov
mov
sahf
mov
dec
mov
in
mov
and
imull
dec
xor
repz
ljmp
test
cltd
or
jmp
xor
mov
add
movsl
aaa
add
xor
sub
mov
xchg
push
arpl
jns
mov
push
mov
je
rolb
sub
aas
in
jge
jno
pop
mov
xor
push
mov
inc
cmp
mov
adc
lds
in
fwait
adc
leave
push
pop
jge
popf
dec
std
adc
je
dec
jo
enter
loop
ret
cmp
dec
add
mov
mov
push
std
pop
xchg
xor
push
push
mov
dec
lcall
imul
push
push
lods
push
in
mov
dec
push
inc
mov
push
shr
dec
test
test
and
mov
mov
mov
mov
enter
cld
neg
push
in
std
or
jmp
or
mull
mov
or
xchg
jb
cmp
call
les
xchg
loop
jge
addr16
and
push
cmp
pushl
dec
pushf
push
bound
inc
ss
sub
pop
xchg
lahf
fs
movsb
js
test
sbb
scas
out
xchg
xchg
add
clc
arpl
cmpsw
mov
lock
mov
test
cmp
cmp
xchg
movsb
dec
push
repz
ja
test
movsl
into
push
clc
dec
fstl
in
inc
lret
ret
jae
jo
mov
jnp
test
ds
cwtl
sbb
sub
push
in
adc
fucomip
mov
mov
jmp
jo
push
pusha
cmp
jne
mov
mov
dec
mov
pop
sbb
ret
mov
cmp
ret
inc
in
push
nop
mov
cmpsb
int
not
lahf
test
test
mov
testl
adc
out
jg
out
mov
sub
jp
pop
je
imul
fcomip
lds
cmpsl
sbb
sub
or
mov
jecxz
popa
rol
sbb
inc
fldcw
inc
rcll
nop
jle
int3
nop
nopl
jl
inc
xchg
jne
repnz
push
add
lea
pushf
cmpsl
aam
gs
fisubs
mov
lock
adc
out
push
mov
int
and
ret
mov
push
insb
outsb
je
repnz
sar
insl
cli
test
incl
bnd
jg
ss
push
xchg
movsl
xchg
pusha
repz
cmp
cmpb
enter
dec
rcll
or
jbe
nop
sbbb
push
movsl
rolb
ret
jle
mov
es
add
xor
push
pusha
ss
ljmp
add
dec
or
test
push
cltd
mov
push
call
sbb
das
mov
int3
push
andl
xchg
adc
sbb
jecxz
xchg
hlt
je
out
out
or
fwait
stc
movsb
or
sub
sbb
sub
push
jno
add
xor
mov
mul
lret
das
cmp
in
cmp
pop
sbb
pop
lods
cld
out
adc
iret
sarb
inc
scas
lcall
shrl
sbb
push
pop
pop
sbb
sub
mov
pushf
icebp
and
push
filds
mov
xor
fsubr
imul
lods
mov
cmpsl
xor
mov
jno
and
jp
push
stc
popa
rclb
push
fbld
jl
in
xchg
ficoml
incw
cmpsl
xchg
enter
ret
out
cmp
cmpsb
cmp
push
pop
jbe
aam
jecxz
dec
jg
repz
and
movsl
mov
and
insl
add
pop
ljmp
aam
jmp
xor
ja
lock
sarb
inc
jge
push
test
pop
lock
mov
mov
sbb
mov
imul
mov
adc
fldenv
ret
adc
cmc
andl
add
push
sbb
sub
pop
and
js
mov
and
test
bound
jno
testl
aaa
or
jne
or
lods
scas
gs
test
xchg
add
sbb
jp
rol
orl
sar
push
lcall
aad
jnp
pop
les
popf
lea
and
lods
mov
mov
ljmp
sub
addb
je
popa
loope
adc
repnz
iret
cmpb
xchg
ljmp
stos
ds
xor
out
jae
xchg
outsl
mov
scas
call
fbld
shll
ss
test
repz
xor
stc
inc
or
fxch
lahf
sub
data16
xor
cmp
iret
iret
push
mov
inc
dec
int3
dec
in
jle
and
aam
push
std
adc
js
push
mov
mov
cmp
push
push
popf
repz
outsl
jo
ret
xchg
in
ljmp
in
inc
inc
movsl
sahf
and
insb
rol
adc
push
add
push
pop
mov
push
rcrb
pusha
lahf
jle
adc
jle
inc
ret
mov
andb
add
pop
leave
ret
shlb
pushf
mov
sarb
push
sahf
jle
sbb
jne
sbb
pop
lcall
push
add
inc
jecxz
aaa
jns
pop
or
mov
xor
popa
dec
cmp
lahf
push
push
in
and
in
movsl
in
lods
das
cltd
sub
sub
cltd
xlat
into
add
push
pop
jne
orl
xchg
sbb
push
push
or
mov
ja
int
jmp
mov
add
sub
fstpl
mov
xlat
mov
adcb
xlat
xlat
mov
aas
es
push
test
mov
mov
fsubrl
or
lret
jae
jp
out
scas
shr
add
sbb
js
gs
icebp
pop
shlb
cmp
sbb
outsb
and
pop
push
out
loopne,pn
clc
bound
fidivrl
lods
inc
in
cmpsl
dec
mov
mov
sub
loop
div
test
les
ret
imul
out
das
je
inc
cmpsl
jae
test
cmc
jge
or
aas
dec
stos
inc
mov
les
adc
push
sarb
aas
push
loop
call
jae
sti
inc
scas
push
das
fcomp
into
pop
test
xlat
push
sbb
push
insb
subb
push
add
test
testb
mov
cmp
pop
sub
rcrl
push
js
mov
sub
dec
inc
or
in
sbb
adc
ret
test
sub
je
fs
in
inc
xchg
push
push
mov
gs
mov
movl
adc
sbb
in
sub
stc
lods
cmp
xor
cmp
jl
or
dec
sbbl
or
les
mov
out
or
dec
inc
pusha
sub
dec
sti
sub
xchg
xchg
fs
mov
int3
scas
sbb
outsb
fdiv
sub
inc
mov
ss
data16
xchg
jecxz
cmpl
adc
cli
cmp
lods
pop
xor
mov
insb
mov
mov
lds
int
add
adc
mov
pop
and
inc
add
pusha
int3
cmc
out
adc
shlb
push
icebp
in
push
mov
dec
xchg
cld
out
test
call
adc
xor
loope
pop
lcall
xchg
in
test
dec
lock
cmp
push
adcb
jecxz
mov
sbb
mov
add
repz
dec
call
insb
ss
inc
and
jo
mov
ret
in
shrb
idivb
bound
fistps
push
inc
cmp
push
lea
in
test
andl
and
in
jno
lods
ja
sbb
inc
xor
xor
pop
push
dec
or
lcall
push
loopne
push
cmp
lea
adc
sbb
cmp
cmpsl
adc
aaa
mov
rolb
repnz
addr16
push
sub
mov
call
aad
and
pop
push
xchg
lahf
testb
inc
adc
shlb
bound
jnp
ds
mov
inc
mov
mov
cmp
cltd
dec
repnz
sub
cmpl
push
in
push
enter
filds
fnstenv
std
loopne
cmp
jne
imull
nop
out
hlt
hlt
xchg
in
bnd
xchg
and
push
pop
jae
bound
push
mov
jo
mulb
sbb
fbld
stos
inc
xchg
or
imulb
repz
mov
and
ret
sub
sahf
out
scas
or
push
jp
scas
fbstp
negl
cmp
pop
and
inc
jns
push
repz
outsl
add
mov
rcl
aas
jmp
add
stos
lods
mov
adc
fldenv
inc
mov
inc
popf
addr16
dec
out
test
js
adc
push
mul
hlt
mov
pop
js
rep
dec
adc
arpl
mov
mov
inc
rcrb
xchg
mov
inc
sub
mov
mov
andl
mov
add
xor
push
rorb
pusha
jne
inc
enter
int3
mov
popa
sbb
pop
cmpsb
mov
push
fsubl
in
mov
fadds
mov
adc
rclb
lret
ficoms
iret
or
cmpsl
xor
mov
jg
aaa
cmc
inc
negb
push
sbbb
lock
movsl
push
xchg
mov
mov
cmp
rcr
aaa
fmuls
cld
je
jns
pop
aas
jnp
push
daa
das
iret
mov
jle
dec
add
push
cmpb
imul
jo
test
fwait
insb
andb
or
mov
lret
das
pop
addr16
or
shlb
decl
adc
fistpll
mov
push
das
mov
mov
and
mov
mov
popf
out
pop
inc
push
es
push
dec
xchg
cld
subl
ret
gs
xchg
add
xorl
scas
aas
dec
sub
cmpsb
jg
out
mov
push
xchg
sti
in
or
push
rcrl
jg
in
push
stc
loope
test
xor
or
cmpsl
xor
inc
jmp
mov
xchg
loopne
outsb
mov
leave
mov
or
push
add
pop
in
in
pop
sbb
pop
mov
and
pop
adc
jle
scas
add
jl
orb
fisubl
and
xor
lea
loop
hlt
subb
imul
fistpll
repz
push
jmp
xor
push
ja
inc
pop
mov
leave
ds
and
push
pushf
jnp
mov
add
into
fdivl
loope
mov
out
sub
mov
leave
cs
stc
jns
jbe
jns
in
vdivsd
push
jns
cmp
lods
ss
gs
push
xchg
and
xlat
pop
loope
dec
add
ja
sti
or
cmp
icebp
subl
jecxz
ja
outsb
icebp
imul
test
sbbl
sbb
ds
adc
mov
pop
cmp
bound
xchg
cmp
xchg
mov
idivl
push
aad
dec
or
jmp
sahf
sub
lds
test
sub
pop
cs
xor
adc
pusha
enter
js
cltd
adc
mov
sub
enter
adc
jne
push
out
mov
insl
cwtl
xchg
outsl
mov
xor
adc
and
and
sarb
mov
push
mov
xlat
fucom
or
jbe
pop
daa
imul
or
jl
in
ss
cltd
and
xchg
mov
shrd
and
push
call
out
or
mov
cwtl
data16
jbe
or
pop
inc
mov
mov
jl
xchg
inc
adc
mov
xor
repnz
mov
mov
loopne
cld
mov
adc
sub
add
jecxz
push
sub
jae
jmp
jnp
inc
sti
inc
inc
mov
out
cmpsl
sub
xchg
mov
bound
test
jle
shrb
adc
and
mov
call
cmp
repz
xor
mov
mov
loop
adc
in
out
clc
xlat
jbe
inc
in
insl
mov
cmp
fdivp
aas
dec
adc
loop
jmp
mov
std
ljmp
stos
pop
in
push
cmpsl
and
gs
ljmp
bound
loop
mov
push
sbbb
js
add
inc
cwtl
dec
daa
arpl
sbbb
mov
pop
or
data16
push
shl
sbb
push
cwtl
jne
xchg
cmpsl
cmc
cltd
rcrb
push
cmpsl
arpl
ja
sub
inc
xor
inc
sti
pop
jge
xchg
loop
jnp
rcrl
inc
mov
xchg
or
adc
test
pop
jp
mov
push
jo
cmp
adc
sub
ss
cs
or
mov
push
sub
sub
pop
sub
mov
out
xchg
xchg
pop
fisttps
jg
push
or
fsubs
inc
test
cmp
dec
mov
or
loopne
jecxz
stos
mov
mov
ja
loope
mov
push
nop
sbb
lahf
stc
int
movsl
cmp
pop
dec
jp
bound
sub
pop
clc
dec
lods
mov
dec
sarl
repz
pusha
ficoms
inc
cmpsb
call
ds
push
mov
aas
mull
test
lock
mov
cmc
std
mov
das
call
repz
pop
test
cmpsb
push
arpl
scas
imul
push
push
gs
mov
or
adc
sysenter
sbb
mov
dec
push
xchg
add
aam
jle
das
mov
push
add
in
out
fdivrl
sbb
shll
push
mov
or
inc
testl
aam
add
sbb
mov
loop
sub
sub
shrb
or
xchg
mov
out
nop
sbb
xchg
fimuls
pushl
mov
mov
sti
sub
xor
inc
fldt
lods
decl
stc
in
cmpsb
out
mov
and
cmp
xchg
pop
dec
in
dec
mov
call
push
shlb
or
add
inc
nop
icebp
mov
mov
cmc
sbbb
loopne
pop
decb
jae
scas
fs
lcall
iret
daa
pushf
icebp
mov
movsl
push
and
dec
dec
int
lea
sbb
pop
adc
mov
push
cmpsl
and
and
xor
mov
fsts
js
add
shl
mov
sbb
inc
cmp
jb
popl
mov
aad
ljmp
neg
sbb
fwait
jne
adc
sbb
adc
adc
push
rcr
add
xor
xchg
xor
test
inc
or
jno
sbb
push
xchg
cltd
popf
mov
push
lahf
cmp
loope
mov
xlat
out
outsb
fidivrs
arpl
mov
sub
sub
jecxz
shl
arpl
enter
or
push
jp
ja
mov
mov
jns
jge
push
sbb
mov
shr
rcll
pop
lods
pop
mov
lods
and
jmp
sub
test
and
pop
mov
dec
outsl
pop
pop
mov
lss
xchg
pop
xchg
fidivl
and
ljmp
mov
test
leave
mov
fidivrl
fimull
push
in
pop
insl
mov
mov
add
filds
xchg
pop
pop
mov
lods
mov
or
aad
mov
in
cld
push
out
mov
lock
jp
sti
shll
or
loope
mov
arpl
xchg
sub
pop
push
dec
stos
inc
and
popf
xchg
jbe
ja
lahf
mov
xor
jmp
cmp
and
mov
rorb
imul
lret
call
fnstcw
jecxz
loope
movl
push
shll
sub
ret
call
cld
mov
mov
movsl
sub
and
push
sarl
lea
xor
push
insb
mov
dec
fadds
mov
popf
xor
mov
mov
xchg
fidivrs
iret
adc
jae
test
push
cmp
ret
mov
jns
adc
push
in
jnp
jno
cmp
jmp
loop
sahf
test
orb
add
int
sub
mov
fdivl
and
xchg
sar
sub
into
fcoml
mov
add
rolb
arpl
out
xlat
push
cmp
mov
out
in
add
jns
xchg
mov
clc
push
inc
push
sahf
std
inc
xchg
pushf
fcoms
lods
dec
sbb
and
cli
inc
popa
jle
in
cmp
push
ja
loope
fisttpl
pushf
aaa
notb
imul
fisttps
outsl
push
cmpsb
jae
xchg
mov
outsl
fdivl
mov
rclb
leave
mov
jae
enter
fisubrl
push
cmp
cmpsb
mov
sub
in
push
inc
dec
sbb
xlat
and
stos
jnp
cmp
iret
adcb
in
sub
xchg
or
cmpb
test
dec
sbb
stos
pop
mov
and
fadd
sbb
ja
push
notb
pop
out
stc
aad
out
negl
or
or
sahf
mov
push
rolb
lret
cmp
cltd
scas
ret
sub
cli
test
icebp
add
sbb
jle
jb
cmp
sbb
icebp
andb
mov
cmp
mov
mov
push
dec
setbe
sti
adc
pop
mov
fstl
sub
andb
sub
mov
cmp
jle
jge
jl
or
add
xor
jno
jle
popf
mov
addr16
xor
fistl
push
jl
es
adc
or
into
mov
push
lret
bswap
xchg
pop
sbb
lret
inc
popl
cmp
aad
ja
call
enter
icebp
repz
call
int
mov
push
popf
inc
shrb
push
cmp
pop
jl
lds
in
mov
ljmp
lahf
jmp
xchg
or
add
stos
lret
jecxz
je
dec
xlat
cmp
iret
fsub
int
mov
popf
xchg
loopne
mov
fwait
adc
dec
enter
sbb
stos
push
loop
mov
xlat
ljmp
add
test
pop
pop
mov
sub
push
popa
jmp
mov
jo
mov
testl
scas
mov
inc
and
sub
fdivrl
mov
inc
add
vandnps
aas
jmp
inc
imul
inc
scas
cld
cld
ds
inc
xchg
ret
lcall
inc
out
push
hlt
test
outsl
imul
addl
mov
cmp
out
and
stos
andb
inc
adc
rcll
mov
push
mov
mov
add
sub
xor
cmp
ret
mov
out
add
jns
enter
lret
add
adc
ret
jge
adc
sti
xor
mov
lods
lahf
lret
mov
cmp
mov
add
pushf
pop
pop
ret
mov
stos
fs
das
mov
test
bound
cmp
adc
ret
pop
xor
xor
push
xor
inc
or
push
test
adc
sbb
jle
lahf
jl
jbe
nop
add
mov
inc
clc
test
lea
dec
repnz
dec
inc
add
xchg
add
loopne
inc
nop
fisubrl
mov
xor
pop
sarl
or
push
jae
push
dec
push
sbb
jnp
push
cmp
or
lea
mov
arpl
jnp
and
pop
cld
sub
jno
adc
xchg
outsl
mov
and
lods
mov
cmp
cld
add
ljmp
sub
jns
jmp
sbb
lods
add
lret
and
xchg
popa
icebp
das
insl
scas
sbb
cltd
aaa
mov
cmp
add
xchg
test
pop
mov
pop
cmp
cld
mov
inc
jno
and
dec
sub
pop
fwait
pop
xchg
aad
cmp
outsb
negl
out
lea
xchg
pop
mov
jo
out
push
xor
jg
cmpsl
inc
mov
shlb
pusha
xor
push
xor
pop
ror
mov
loop
lods
mov
or
in
mov
dec
jle
xchg
adc
and
fisubs
xchg
loop
mov
fwait
scas
sbb
cmpsl
nop
push
loop
add
jecxz
ljmp
fisubs
inc
cltd
mov
repnz
out
test
cmp
mov
push
pop
pusha
std
fdiv
adc
adc
jecxz
int
adc
pusha
mov
mov
shr
fisttps
movsb
or
push
dec
je
cmpsb
ret
add
lods
jns
sti
dec
xchg
lcall
inc
add
loopne
adc
stos
lret
add
repnz
or
hlt
stos
mov
pop
test
dec
and
and
faddl
cmp
iret
imull
add
dec
push
cs
inc
aaa
cmp
dec
aas
scas
aam
mov
xor
xor
icebp
xchg
test
iret
inc
ret
mov
pop
jl
push
push
or
mov
cltd
mov
std
sbb
cltd
and
and
fwait
loopne
mov
sbb
cmp
repnz
mov
sbb
les
int
jge
sbb
in
xor
test
test
sbb
push
xor
push
jb
and
xor
fsubrs
in
insb
enter
pop
movsl
adc
add
test
and
push
ds
mov
fnstcw
push
xorb
mov
leave
bound
jns
enter
enter
xor
jb
or
int3
roll
pop
in
jp
mov
xchg
imull
dec
addr16
lock
cwtl
dec
xor
les
in
or
inc
mov
jge
xor
mov
out
mov
fisttpl
mov
into
imull
leave
inc
fdivrl
jmp
fdivrl
push
movsb
jbe
cwtl
sbb
mov
and
data16
sub
in
aad
xor
mov
inc
in
aas
shll
mov
or
and
or
inc
push
ljmp
or
xchg
inc
leave
mov
call
jmp
adc
clc
mov
nop
sub
addr16
xor
push
lea
add
inc
xor
pop
xor
jp
fmuls
sbb
push
jge
dec
cmp
add
dec
dec
xchg
mov
xchg
push
xchg
cmp
jbe
sbb
push
mov
imul
mov
rcr
pop
pop
mov
cmp
ret
and
jne
pop
pop
sbb
mov
clc
cli
pop
movsb
imul
cld
or
fstl
into
or
out
adcb
sti
mov
pushf
stos
xor
bound
popf
aad
cwtl
mov
sbb
fsubrl
cmp
cli
mov
push
ss
adc
test
jl
add
sub
and
cmp
es
lods
dec
movsb
insb
inc
daa
cmp
mov
decb
mov
stc
jg
adc
mov
mov
es
pop
or
xor
jge
mov
test
into
dec
inc
insb
lcall
or
out
addb
cmc
nop
cmp
cld
mov
nop
mov
dec
pop
popa
cmpsl
mov
cwtl
or
sub
jl
inc
test
notl
pop
push
jge
in
push
push
dec
or
cmp
and
inc
fstl
cwtl
int
sti
and
out
sbb
fcmovnb
jg
cmp
sbb
lcall
ja
lcall
jle
mov
pushf
pop
lods
jnp
jbe
pop
daa
sbb
in
mov
mov
mov
cs
subl
jecxz
movsl
mov
outsl
dec
leave
sub
push
mov
stos
lock
aam
icebp
mov
or
jae
xchg
dec
int3
push
or
mov
enter
mov
leave
dec
mov
mov
cmp
stos
sahf
stos
dec
and
shll
inc
ret
or
xor
or
ficomps
push
daa
and
jecxz
xor
mov
push
add
int3
jb
dec
or
cmp
daa
iret
sub
xor
scas
in
aam
out
dec
imul
cmp
in
js
movl
aad
sub
loop
sbb
aad
adc
add
repnz
sarb
stos
movsl
ljmp
mov
ljmp
xchg
fmuls
add
dec
jecxz
lea
rcrl
or
imul
sbb
push
jp
movsb
jmp
call
mov
dec
enter
adc
push
xorl
sub
repnz
inc
and
fwait
in
push
push
xlat
cli
mov
mov
mov
insb
repnz
icebp
lds
xchg
jae
mov
jp
pop
in
int
mov
nop
sbbl
dec
mov
fnstsw
push
xor
out
sub
adc
daa
inc
roll
enter
bound
sti
pop
lret
lods
cmp
aad
pusha
out
and
pop
cli
xor
leave
and
sub
sub
aas
inc
cmp
lock
fsubrl
add
sahf
test
addr16
in
push
ljmp
neg
pop
mov
cmp
hlt
sub
dec
and
add
out
pop
jo
adc
and
fidivs
pop
or
repnz
insb
sbb
int
ret
movsl
jno
push
sarb
xchg
out
sbb
pop
loopne
or
and
sbb
mov
mov
loop
repnz
enter
mov
push
lcall
add
aad
mov
mov
sub
jno
xor
xor
repz
lea
int
jecxz
jo
fidivrl
xor
mov
adc
push
mov
cli
scas
push
fcoms
cmpl
je
ja
leave
jmp
push
mov
mov
jbe
jnp
sbb
push
mov
cld
xchg
sbb
jae
ret
mov
int
test
jb
pop
outsb
rcl
and
xor
lret
cmp
mov
sti
push
fldcw
or
pop
dec
mov
adc
inc
das
mov
mov
ss
lret
inc
push
xchg
lods
lret
add
mov
pop
insl
dec
sub
pop
add
push
test
cld
mov
mov
rdtsc
mov
adc
mov
jae
scas
xchg
bound
pusha
test
fwait
mov
mov
jmp
fwait
add
dec
push
add
sbb
sub
outsb
mov
lock
fbstp
stos
push
add
out
in
cmp
add
push
ficompl
xor
loopne
rcr
shl
ret
pop
aad
shlb
jne
cmp
pop
int
imul
inc
jg
lcall
addr16
call
mov
jne
and
pop
ss
xchg
rcr
mov
sub
bound
insl
insb
stos
add
xchg
mov
push
das
add
daa
mov
icebp
mov
pop
sbb
or
push
jne
jae
loopne
idiv
int
test
popa
mov
mov
loopne
push
mov
pop
mov
les
cmp
lahf
fdivr
inc
xchg
or
mov
arpl
cld
push
aaa
insl
stos
fcmovnu
lcall
inc
hlt
je
xchg
aam
cli
push
fadds
cli
mov
dec
push
pop
pop
xor
inc
inc
dec
mov
pop
inc
pop
jo
in
and
xchg
fst
movsb
cmpsb
pop
sbb
pop
test
into
subl
int3
in
and
imul
cltd
inc
movsb
lock
daa
mov
popa
or
mov
aas
ret
fprem1
mov
sbb
and
loop
mov
repnz
xchg
pushf
pop
out
mov
sbb
xor
mull
or
xlat
imul
shr
mov
add
add
es
jae
js
sbb
dec
ds
es
sub
jle
jnp
adc
cmpl
insb
mov
mov
stos
int
mov
out
mov
outsl
sahf
add
add
ja
rcrb
lods
dec
sbb
jp
outsl
mov
data16
test
push
aaa
cli
cmp
mov
test
push
adc
roll
dec
push
pop
icebp
mov
insl
add
inc
ds
jmp
or
mov
cmp
jb
push
jnp
movsl
pop
insb
test
enter
push
fldenv
nop
push
jp
inc
cmpsb
lahf
mov
mov
clc
jo
and
js
add
cltd
adc
mov
inc
and
in
push
in
mov
xchg
sub
xchg
sbb
adc
arpl
xchg
nop
xchg
bound
shlb
mov
cli
test
fcoml
imul
lret
ds
push
pop
cmp
and
pop
cmp
mov
pusha
aad
mov
mov
xchg
dec
or
into
lea
subb
adcb
sbb
push
shl
imul
sarl
aas
jge
in
pop
mov
pop
cmc
clc
pop
pop
stos
push
nop
fwait
xchg
pop
std
or
fiadds
pop
mov
pop
shlb
adc
inc
mov
jns
in
adc
add
sbb
lods
xchg
es
stos
or
mov
sbb
mov
aaa
xor
or
push
pop
ljmp
aam
mov
or
scas
int
jno
lods
icebp
dec
imul
push
out
fcomp
adc
mov
cwtl
or
das
divl
pop
enter
fwait
les
ror
dec
adc
popf
in
inc
nop
xor
in
push
fbstp
mov
cmp
daa
jg
dec
fnstenv
inc
xlat
pop
movsl
cmp
shlb
test
in
adc
adc
pushf
nop
ret
sub
jnp
sbb
dec
stos
adc
jbe
fcomip
mov
sbb
cmpsl
rol
jle
outsl
insl
cld
movsb
movsl
js
in
fsubrp
lods
push
cmp
sbb
pop
andb
xor
lods
dec
fcom
xchg
mov
mov
ret
mov
fsts
pop
mov
jmp
xor
movsl
mov
pop
xchg
cmp
fidivrl
out
jge
sbb
jmp
out
ss
into
push
xchg
inc
pop
mov
dec
dec
mov
xchg
test
repnz
adc
mov
aam
sbb
push
jb
scas
push
daa
cmpsb
xor
mov
or
movsb
imul
dec
insl
and
outsb
push
mov
repnz
sahf
mov
mov
pop
jmp
cmc
xchg
and
pusha
fidivl
add
sahf
ds
hlt
scas
outsb
aas
je
adcl
mov
insb
or
xor
xchg
ret
fs
in
adc
cmpb
rclb
xlat
loope
mov
mov
shll
sub
or
into
nop
dec
mov
mov
mov
ss
cld
shll
out
shrb
out
pop
pop
mov
mov
dec
mov
push
push
adc
adc
rcll
sbb
imul
out
test
pop
sti
pop
mov
imul
add
jmp
push
test
dec
add
es
pop
jge,pt
adc
ja
xchg
mov
std
dec
jecxz
fsubrl
sbb
adc
push
aas
xor
jp
and
out
add
lock
push
pushl
inc
or
mov
mov
sub
adc
cmp
adc
adc
call
dec
pop
xchg
inc
push
sub
jo
xchg
in
or
jae
add
ss
xor
xchg
aad
rorl
cmp
stos
mov
add
pop
clc
sub
outsb
cmp
mov
arpl
pop
add
movsb
cmc
cmp
movsb
sbb
pushf
dec
shrb
and
stos
push
sti
cmp
shlb
dec
pop
xor
pop
push
ret
popf
xchg
jp
and
in
add
lret
call
shll
out
mov
push
xchg
mov
loop
pop
sbb
xorb
inc
arpl
push
stos
xchg
clc
and
lods
jmp
movsb
pop
movsl
lea
and
je
scas
add
cwtl
imul
out
in
movsb
pop
sub
mov
aam
sub
cmp
xchg
ds
nop
ds
jl
mov
mov
xchg
jecxz
pop
int
dec
cmpsb
adc
aad
xor
inc
xchg
xchg
nop
adc
ds
dec
xchg
cli
das
or
movsb
int3
cmp
out
xchg
das
push
fisubs
adc
inc
lcall
int3
cmpsb
fs
js
or
stos
popa
dec
rcll
pop
popa
arpl
inc
mov
shl
je
mov
pop
or
xchg
push
dec
loop
js
subl
std
jecxz
xchg
outsb
out
lock
cmpsl
out
imull
mov
add
and
subb
rol
ret
sar
fdivrl
icebp
enter
mov
mov
test
stos
mov
jg
stos
ljmp
aad
js
add
jmp
test
sub
ds
aam
mov
xchg
pusha
in
es
jo
stc
std
mov
rorb
dec
dec
xchg
xor
test
dec
pop
dec
jl
lahf
add
ss
divl
mov
push
stc
jb
mov
in
adc
out
add
scas
bound
adc
adc
adc
jns
addr16
pushf
jo
or
dec
adc
xchg
enter
sahf
mov
dec
mov
out
int3
xor
shlb
xchg
aam
lcall
mov
jp
add
les
loope
int
test
push
and
mov
mov
jnp
fimuls
mov
adc
xchg
pop
jmp
jp
mov
call
nop
popf
popw
testb
jo
mov
cmp
xchg
add
xor
push
arpl
mov
test
pop
push
mov
adc
mov
outsb
call
imul
mov
data16
popf
movsb
fidivs
mov
push
lods
popf
and
addr16
aas
sbb
dec
imul
sbb
mov
push
call
dec
les
jns
out
andl
xchg
cmp
push
shrb
mov
stc
shl
les
xchg
ljmp
adcl
xor
in
dec
repz
add
hlt
push
in
pop
jecxz
jecxz
aad
mov
shl
lds
das
add
mov
out
fmulp
sbb
mov
mov
into
mov
das
add
and
inc
fiaddl
push
jmp
mov
jbe
loope
xor
out
shr
sbb
sub
or
iret
testl
sbb
mov
push
testb
shl
inc
xlat
mov
cld
pop
test
je
cld
xor
ss
bound
pop
dec
insl
mov
dec
dec
lds
in
icebp
inc
push
int3
subl
outsb
mov
lcall
pop
pop
addb
ds
rcl
and
idivb
inc
pop
xchg
and
pop
aad
fdivr
in
xor
add
hlt
mov
mov
test
push
lock
add
lahf
inc
dec
repz
push
int3
push
andb
push
mov
jmp
xchg
pop
push
or
add
add
lcall
loopne
sub
icebp
push
outsl
push
shll
xor
cs
mov
pop
pop
test
mov
mov
aad
scas
xchg
mov
mov
in
scas
insb
outsb
popf
cmpsb
and
xchg
push
adc
into
and
pop
xor
incb
test
add
jmp
imul
add
xchg
pop
xlat
mov
fistl
sbb
inc
cmp
out
xchg
or
mov
add
inc
fsub
into
cmpsb
repnz
mov
in
inc
mov
lds
pop
mov
out
rol
push
mov
sub
out
movsb
out
mov
ljmp
nop
fldl
add
mov
sbbb
pop
adcl
and
inc
rcl
lret
adc
bound
testw
iret
fimuls
cmpsb
xor
lcall
jle
xchg
pusha
cld
mov
movsl
xchg
ljmp
push
cmp
push
in
in
out
bound
push
inc
xchg
mov
and
sarb
int3
jbe
loopne
sti
aad
test
mov
je
roll
inc
imul
xor
xor
clc
mov
fwait
orb
push
xchg
fucomp
scas
ja
mov
loop
mov
xor
mov
xor
xor
test
scas
xchg
aam
mov
mov
lret
cmpsl
cltd
loope
sbb
and
adc
add
xor
pop
push
into
dec
dec
lods
jno
push
and
sti
or
push
bound
mov
es
cmp
mov
sbb
xor
cltd
pusha
insb
lds
insb
test
add
jge
mov
shlb
inc
mov
subb
adc
mov
push
outsb
cmpsb
or
sti
and
jmp
jge
mov
fdivrl
js
sub
dec
lret
fsub
fisubs
negl
and
pop
add
add
jnp
loopne
xchg
dec
in
dec
cmpsb
cltd
lods
pop
sub
cs
into
sub
sub
xchg
orb
pusha
ja
lods
mov
popa
sub
in
mov
mov
aas
call
mov
cmpsl
jp
and
cmp
testb
shll
mov
inc
enter
xchg
pop
cld
jl
push
dec
and
outsl
inc
daa
lods
ja
cmc
arpl
outsb
mov
or
inc
lods
lock
push
ds
mov
mov
pop
mov
jnp
pop
inc
and
cmp
mov
or
lcall
sbb
jb
ss
loopne
push
add
dec
sti
gs
lahf
fimull
cli
sbb
mov
jmp
movl
push
sbb
rolb
and
daa
inc
loopne
loop
dec
repnz
aam
pop
jae
or
mov
mov
mov
mov
cmp
das
pop
mov
or
out
mov
and
arpl
push
jl
sbb
icebp
out
and
lcall
sarl
add
add
aam
push
loopne
icebp
into
sti
fisubrs
fildll
mov
movsl
pop
push
scas
sub
call
insl
jo
mov
cltd
adc
jno
out
cmpsw
mov
or
push
xchg
lahf
movsl
mov
jns
jg
dec
jmp
or
mov
jp
les
sahf
sub
sub
aam
ljmp
jae
xor
int3
inc
fwait
sbb
jg
lods
mov
aas
add
int
cmp
jmp
loopne
out
addr16
add
mov
rcll
gs
test
sbb
xchg
inc
inc
into
jge
pop
cmp
xchg
rcrb
mov
xlat
out
push
mov
out
pop
testl
jbe
rcrb
xor
ret
fsubrl
xchg
sbb
add
stos
adcb
jno
cmp
in
sbb
inc
xor
negb
add
adc
fdivl
gs
mov
xchg
imul
jb
lock
jne
and
pop
inc
adc
fwait
ret
mov
js
cmp
insl
cmp
mov
test
inc
sub
jp
shl
push
add
cmp
pusha
cli
cltd
cs
popa
sub
faddp
lea
fsubrl
imul
scas
loop
daa
jg
adc
push
xchg
sti
fisubs
int
iret
ljmp
mov
xchg
in
or
daa
fcmovnb
lea
mov
call
ja
jmp
fisttps
sahf
dec
mov
fs
ja
xor
stos
fbld
and
loopne
and
lock
shlb
mov
or
pop
mov
cmp
repnz
ljmp
hlt
movsb
xor
xchg
sahf
mov
es
jnp
add
mov
inc
mov
test
sub
and
cmp
cltd
movsl
call
ss
inc
cmp
xor
xor
add
sbbl
jae
sbb
stc
cld
lods
sti
sbb
push
adc
popf
mov
inc
outsb
es
mov
adc
popf
mov
pop
pop
ja
sub
adc
mov
push
dec
loop
jbe
cmp
repnz
in
aam
add
subb
jbe
push
push
pusha
inc
and
les
imul
popf
inc
mov
dec
lret
sbb
or
outsl
out
les
cmp
test
jge
sbb
popf
je
imul
push
push
sti
mov
fcoms
jb
es
adc
fcoml
dec
pop
xchg
pop
in
popa
flds
jb
mov
dec
pop
addr16
push
inc
pop
das
xchg
and
mov
pushf
and
loop
lods
xchg
movsb
pop
das
mov
out
out
adc
lods
pushf
push
andl
adc
jp
in
fstpt
mov
inc
mov
test
adc
icebp
les
mov
sub
xor
pushf
lods
mov
ret
pop
bound
cld
fdivl
adc
das
cmp
out
std
cltd
movsb
in
and
jbe
ds
fiaddl
jg
push
int3
idivb
or
pop
inc
das
subb
pop
fdivl
stc
outsl
popf
fwait
cmp
int
mov
jmp
je
bound
sar
dec
jle
nop
pop
mov
xor
adc
ret
cwtl
test
sub
pop
add
xorl
mov
add
test
cmp
sarl
in
outsl
jnp
inc
dec
jae
push
imul
mull
shrl
nop
cmp
fcoml
movq
jge
nop
mov
pusha
shl
lock
inc
cli
negl
dec
loopne
pop
and
std
sbb
pushf
lea
leave
xchg
fsubr
adc
in
jb
es
xchg
imul
mov
fidivrs
imul
mov
dec
jae
pushf
mov
daa
xchg
int
inc
bnd
pop
or
lock
das
ror
repz
movsb
adc
dec
out
cmp
lret
push
and
mov
push
imul
mov
push
push
adc
outsb
in
cmp
aad
sub
outsl
cmp
pushf
xor
loope
imul
or
lds
jae
mov
insl
xchg
mov
push
and
and
mov
popa
fbld
cmpsl
jo
imul
mov
cmp
push
mov
fsub
fisttps
jne
popl
inc
pushf
mov
mov
stc
rcll
xchg
pop
and
mov
and
outsb
enter
adc
out
xchg
xor
jp
imul
cli
dec
or
xor
push
mov
cmp
push
mov
ficoml
add
adc
std
xchg
cld
lock
fmull
push
ljmp
cmp
xlat
out
cs
dec
lahf
lret
fcomps
jnp
sahf
pop
xchg
iret
cmp
mov
and
mov
jp
jmp
sbb
jne
int3
movsb
xor
iret
push
ficomps
mov
bound
mov
popf
enter
add
or
mov
xchg
addl
adc
mov
into
and
cmpb
xchg
mov
push
in
ret
cmp
mov
cmp
loopne
xor
aaa
mov
inc
adc
push
add
addl
cmpsb
ficompl
movsb
jecxz
loop
ds
fsubp
mov
shlb
xor
cmc
push
lock
ljmp
push
fwait
mov
sub
out
roll
pop
xor
in
jle
std
jnp
movsl
nop
sub
mov
dec
add
test
pop
mov
lods
in
stc
push
push
shll
imull
push
inc
fdivrl
pusha
out
mov
mov
repz
and
jle
js
jne
mov
pop
jae
add
cld
cwtl
outsb
inc
and
add
call
xchg
cmpsl
xchg
popa
cmc
push
sub
nop
decb
dec
inc
sarl
fs
in
call
cs
and
insl
xor
fwait
ret
cmp
or
outsl
jg
daa
pop
or
lea
pusha
in
std
cld
jnp
add
or
sub
pushf
dec
cli
mov
and
jo
mov
int
cs
repz
jp
jmp
fnstsw
jmp
aas
cmp
adc
mov
je
pushf
mov
popf
add
scas
pushf
leave
xchg
inc
ret
ja
in
push
sub
repnz
repz
adc
push
ss
cmp
outsl
xor
jno
mov
push
into
cld
daa
stos
pusha
addb
daa
call
loop
test
ret
cwtl
iret
cs
jbe
pusha
stos
aas
ljmp
mov
lret
das
xor
or
cmpsb
adcb
stos
adc
jmp
lea
dec
pop
and
aaa
push
cmpsb
mov
xchg
jmp
or
push
push
js
sub
test
adc
jecxz
cli
shlb
push
mov
xchg
jb
adc
vpmacsdql
xor
mov
xor
fildll
clc
ret
test
xor
out
inc
je
or
idivb
fisttpl
push
ljmp
dec
dec
leave
sbb
jg
pop
cli
jmp
dec
test
mov
jmp
jmp
int3
cmpsb
or
mov
mov
daa
jnp
call
xchg
lea
jne
cmc
dec
pop
or
fistl
add
popa
dec
bound
insb
call
div
cmp
xchg
xchg
mov
mov
jns
fs
fdivl
pusha
push
ret
push
sahf
mov
aad
int3
jle
enter
js
sub
ret
push
xchg
aam
cli
ja
xchg
xor
lds
je
lahf
lahf
or
in
mov
and
sub
mov
in
hlt
shr
xor
lods
aaa
add
and
out
add
add
xor
ficoms
sbb
or
shl
xchg
dec
aad
push
loope
aaa
scas
and
fdivrs
push
fucomp
jp
jno
call
int
mov
sub
xchg
punpcklwd
test
push
mov
les
sbb
imul
aaa
out
adc
xlat
mov
fdivp
or
pusha
push
push
leave
arpl
cld
rcl
gs
cld
int
stos
imul
into
inc
jno
push
icebp
imul
movsl
fcompl
sbb
fidivs
push
subb
jecxz
dec
sbb
out
das
mov
lock
mov
lds
push
imul
fadd
or
pop
into
inc
dec
or
mov
incb
mov
pop
dec
jns
je
cmp
xor
adc
lret
ja
push
inc
mov
sub
dec
jl
cmp
xchg
xchg
repnz
mov
pushf
adc
inc
jns
aas
inc
mov
sbb
mov
lds
dec
test
sub
arpl
arpl
aad
or
lods
mov
imul
pop
or
xor
adc
push
popf
inc
sbb
sbb
stc
sub
aad
dec
in
push
sub
mov
adc
mov
movsb
sbb
add
lcall
lock
inc
push
jge
cmp
jge
adc
test
in
fbld
adc
mov
addr16
stos
lahf
jle
and
mov
mov
cli
nop
dec
xor
xchg
mov
sub
leave
imul
gs
fistpll
ds
jp
dec
clc
mov
push
sarb
stos
lcall
pop
pop
add
mov
add
mov
movsl
xchg
data16
movb
mov
and
dec
or
nop
xchg
mov
je
fwait
dec
pop
inc
cld
hlt
mov
sbb
aad
and
push
mov
adcl
sbb
cs
mov
cmc
mov
sub
mov
jne
dec
dec
mov
mov
mov
or
inc
lea
testl
sar
insl
push
push
cmp
imul
add
pop
or
jbe
mov
call
test
ds
and
rcrl
scas
sbb
xchg
fwait
cmc
dec
xor
call
add
xorb
call
cmp
rorb
addr16
orl
sbb
pusha
stos
pop
orb
lds
into
cmp
lock
jns
test
pop
mov
hlt
push
pop
lahf
loopw
mov
in
shlb
fcoms
int
mov
sub
shlb
cli
idivb
in
iret
loope
sub
sti
mov
cmp
or
ror
mov
sub
jne
outsb
icebp
cmc
or
test
push
aam
dec
lea
sub
jp
das
mov
add
mov
cmc
hlt
or
sub
and
push
mov
fstl
and
inc
ret
fidivrl
mov
dec
aas
sub
pushl
cld
jge
addr16
dec
aas
into
loope
out
inc
push
int3
dec
mov
mov
insl
outsb
ja
cltd
push
mov
subb
mov
repnz
sub
xchg
in
sbb
cmp
in
or
sub
adc
iret
adc
lods
adc
jbe
iret
cmpsl
cmp
and
loop
out
adc
aaa
loope
pop
faddl
adc
mov
jo
xor
es
pusha
outsb
es
dec
push
cmp
outsl
adc
mov
ljmp
outsb
xlat
nop
dec
jmp
movsb
cmp
jb
in
pop
fildll
sub
daa
out
xor
test
mov
jmp
lock
add
or
mov
cmpsl
xchg
push
out
lcall
ja
push
fwait
lcall
rorl
lahf
test
add
cwtl
mov
mov
sub
ret
xor
stos
inc
inc
sbb
lock
daa
jns
mov
int
scas
jo
and
pop
sub
xor
lret
repnz
xchg
sub
and
call
aad
pop
and
sbb
mov
idivl
repnz
push
inc
pushf
cmpsl
dec
dec
popl
fwait
out
lar
mov
jns
orl
mov
adc
mov
addr16
into
int
jge
sbb
pop
jae
lret
mov
dec
movl
mov
je
jno
jo
std
xchg
push
popa
ljmp
shr
or
fldl2e
pop
popa
hlt
sbb
sub
notl
jle
dec
shrb
jl
pop
dec
xor
mov
jnp
pop
push
jo
jmp
fdivp
jecxz
ffree
mov
mov
adc
mov
mov
shrb
push
jl
inc
imul
sub
clc
insl
sub
inc
push
cld
xchg
lea
jo
aam
xchg
sub
aad
aam
push
fildl
std
mov
aaa
inc
adc
stc
leave
lock
jno
arpl
fldenv
add
into
aad
cld
push
ljmp
shrb
insl
aaa
and
mov
push
adc
ret
jmp
inc
test
jns
add
push
lods
xchg
adc
dec
fxch
sarl
dec
fisubrl
jne
std
les
mov
mov
in
jns
gs
mov
test
out
push
lds
jp
es
out
inc
mov
das
dec
daa
outsl
lret
mov
aam
loope
imull
loopne
jno
adc
xlat
dec
shll
adc
adc
xchg
cmpsl
enter
jmp
mov
jae
or
cltd
sbb
or
inc
cmc
xchg
roll
mov
je
div
insb
ja
cmc
movsl
in
fidivrs
ret
add
cltd
lret
jmp
inc
les
and
inc
outsl
rclb
ljmp
jnp
cmp
or
or
jns
and
stc
jmp
lret
xchg
adc
rcrl
lcall
imul
out
aam
mov
out
jp
push
pop
lcall
leave
popf
outsb
stos
ficoml
xchg
pop
pop
les
bound
mov
shll
mov
jl
jae
pop
sub
sarb
cmp
pop
and
cwtl
jmp
movsb
jae
and
pop
lds
xorl
inc
sub
inc
jl
pop
push
mov
push
inc
stc
icebp
fiadds
adc
out
adc
jecxz
rclb
cmpsb
add
push
dec
xchg
jmp
xorl
push
mov
cmp
sub
inc
fdivrl
add
ss
adc
jmp
xor
leave
push
call
mov
sub
jg
mov
sbb
pop
mov
xchg
mov
rclb
jp
and
negb
inc
pop
dec
jecxz
insl
adc
in
loopne
pop
pop
xor
nop
mull
imul
cltd
loope
adc
mov
dec
mov
and
jne
mov
aad
cs
shrw
out
mov
int3
cmp
cli
pop
ficompl
mov
push
imul
shll
lds
dec
sub
in
mov
jb
aad
shll
push
xlat
roll
xor
sub
in
sbb
mov
cmp
lahf
insl
push
jp
out
add
jg
fdiv
inc
and
adc
int3
jns
jg
mov
pushf
jp
repnz
dec
sub
inc
push
xchg
inc
jle
ljmp
icebp
std
enter
sub
lret
or
pop
inc
cli
mov
push
mov
xor
movsb
ret
add
pop
pop
jo
ficoms
in
inc
insl
notl
xor
add
and
mov
and
pop
shlb
shrb
in
scas
icebp
js
and
daa
in
xchg
xor
and
pop
push
xor
sbb
rolb
sbb
test
push
xchg
pop
xor
sub
push
int
xchg
jp
xchg
pop
cwtl
sub
jl
lods
and
or
jecxz
jle
jg
dec
adc
push
ja
hlt
ja
stos
out
iret
pop
out
lcall
call
pop
push
in
fsts
jno
icebp
inc
test
mov
sub
jmp
jg
div
outsl
inc
fcomi
cmpsb
js
pusha
inc
adc
je
fimull
mov
fwait
imul
fsubrs
jp
lods
das
addr16
cmc
ja
stc
and
mov
lds
sbb
out
inc
js
cmc
lahf
addr16
rcll
call
lret
xor
ret
cmpsb
jo
lods
insb
sti
cli
dec
roll
jl
pop
mov
jecxz
mov
jnp
dec
cmpsl
outsb
jecxz
repnz
adc
cli
xor
pop
je
xor
dec
leave
add
repnz
aam
mov
or
cli
cmp
pop
jp
int3
sub
xchg
cmp
mov
das
jge
mov
enter
cmc
mov
fstps
xor
mov
push
addr16
leave
mov
shll
xchg
cmp
adc
stos
in
popa
or
dec
inc
cmpsb
andb
out
scas
popa
aaa
xchg
sbb
jno
lsl
jecxz
loopne
jl
movsbl
mull
xchg
rorb
adc
pop
xchg
popa
jne
je
xor
into
cmpsl
icebp
jmp
outsb
pushw
mov
inc
lret
cmp
jp
sahf
es
push
jns
push
and
jae
rorl
ja
sub
sub
loop
pop
sub
sbb
loope
mov
inc
outsb
sbb
sub
sub
sub
inc
fists
jo
stos
mov
les
mov
popa
add
push
das
dec
std
push
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
scas
mov
test
daa
xchg
into
mov
adc
mov
loope
loop
mov
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
cs
in
mov
enter
in
movsb
sti
scas
int3
out
mov
rclb
cmpsl
cmpsb
test
or
stc
push
stos
jmp
mov
mov
fisttpl
hlt
addr16
push
imul
int3
xchg
dec
pusha
add
std
jae
pop
inc
fnstenv
adc
sbb
daa
mov
xchg
cmp
jl
adc
repnz
lcall
imul
mov
sbb
sbb
fidivl
les
sub
clc
dec
xchg
jl
mov
dec
cli
insl
icebp
adc
scas
addl
into
mov
test
daa
xchg
into
mov
test
bound
mov
test
daa
xchg
into
inc
loopne
stos
test
mov
and
test
fs
ret
mov
mov
test
daa
into
mov
lods
mov
mov
movsb
jecxz
mov
cmc
iret
mov
movsl
loop
pop
lods
mov
mov
mov
loop
mov
into
mov
mov
ret
mov
mov
test
daa
iret
mov
into
popa
int3
loop
sahf
test
daa
xchg
into
mov
test
daa
xchg
ret
loop
mov
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
or
mov
loop
stos
test
aaa
xchg
lret
out
mov
xchg
mov
jmp
mov
mov
test
daa
push
into
ret
mov
test
daa
xchg
into
mov
mov
in
mov
mov
in
mov
mov
lods
mov
mov
mov
test
daa
xchg
add
loop
mov
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
into
mov
test
daa
xchg
gs
int3
loop
mov
out
popa
push
mov
mov
push
sbb
out
push
lcall
out
push
mov
dec
jne
adc
pop
mov
push
cmp
pop
dec
orl
add
and
inc
out
xor
mov
lds
xchg
cltd
std
or
ljmp
push
mov
pop
test
iret
inc
mov
pop
or
fstpl
xor
frstor
pop
imul
pusha
mov
jecxz
insb
stos
cmp
ds
cmpb
pusha
outsb
pop
dec
ja
cli
sub
or
je
sub
fs
cmp
sub
mov
push
scas
jle
outsl
xchg
dec
das
pop
add
daa
je
popa
out
jns
movsl
or
cwtl
imul
xor
dec
cli
mov
jnp
insb
outsb
mov
xchg
lret
outsb
mov
aaa
xor
frstor
outsl
dec
add
enter
jnp
pusha
das
shlb
mov
push
pop
push
jae
or
push
xlat
hlt
fs
pop
adc
mov
xchg
or
jnp
into
ljmp
jno
cld
stc
sarl
pop
jmp
sub
inc
xchg
out
clc
cld
rcrl
add
mov
pop
push
jl
jg
push
push
repnz
or
fsin
js
sub
dec
xor
in
adc
mov
xor
pop
inc
inc
nop
xchg
lds
sbb
sbb
adc
pop
popa
loopne
stc
fstpl
out
aad
mov
mov
cmc
adc
mov
ja
mov
fnstcw
test
sub
pushf
sbb
insl
aad
outsb
scas
int
add
aam
mov
js
pop
push
aaa
and
pop
fs
sbb
push
idivb
adc
pop
xchg
sub
xchg
lahf
jg
cmp
sub
cmp
int3
mov
int
and
jae
imul
lahf
cmp
or
adc
xchg
mov
lods
dec
or
adc
push
mov
jbe
mov
add
fsubr
shl
sbb
mov
les
push
inc
sahf
sub
ja
push
js
push
mov
fidivs
lods
pusha
jmp
js
cmpsl
fadds
mov
movsb
fldcw
jbe
in
frstor
sbb
and
aam
dec
das
int3
xor
mov
inc
stos
test
in
lret
inc
mov
pop
sti
mov
jo
adc
dec
stos
jg
xchg
ret
pop
aam
or
aaa
xor
mov
repz
mov
push
push
dec
into
ret
jbe
inc
outsb
lret
pusha
add
jmp
movsb
xlat
test
and
add
adc
lret
cmpsl
lcall
mov
stos
sub
aam
out
add
leave
or
or
jmp
nop
xchg
jmp
lea
arpl
jg
int
dec
lcall
jo
adc
lods
and
or
xchg
lret
enter
push
pop
loopne
pop
xchg
push
dec
stos
push
incl
aaa
jnp
adc
mov
sub
hlt
mov
les
add
aas
push
mov
fnstenv
int3
lcall
sbb
jne
mov
dec
scas
jg
outsl
xchg
dec
mov
jge
adc
mov
xor
pop
add
add
lock
xchg
xor
fiadds
add
xor
pop
pop
push
push
lcall
dec
xchg
jg
mov
inc
popf
outsl
push
sbb
push
lods
inc
sbb
add
sub
jo
pop
mov
lock
push
and
or
add
cld
scas
cltd
xlat
sub
mov
sub
mov
jb
std
sarb
scas
bound
push
cmpsl
push
notb
out
cld
ds
xor
mov
lcall
and
ss
lret
xchg
movsw
xchg
xchg
or
sbb
and
mov
das
push
daa
imul
push
mov
frstor
lret
ffree
jnp
popa
add
xchg
adc
xchg
stos
and
inc
pop
and
out
cmpsl
mov
sub
lds
and
sbb
jo
ja
mov
pop
iret
push
jl
daa
nop
cwtl
inc
outsl
das
push
fs
das
pop
xor
and
sub
cmc
push
shll
addr16
xchg
jl
mov
imul
pop
cmp
jb
sbb
push
daa
mov
xchg
sarl
mov
repz
ficomps
fmull
loop
and
pop
xchg
roll
sub
sbb
pushf
ja
xchg
push
cmpsb
dec
repnz
mov
cmpsb
sub
push
adc
dec
push
aaa
xchg
add
aad
dec
xchg
sbb
loope
cld
sbb
test
mov
mov
mov
mov
in
loope
mov
out
cwtl
xchg
insb
cmp
mov
xchg
loope
addb
loope
pop
addr16
outsb
popa
add
xor
mov
aaa
mov
mov
pusha
lods
enter
mov
popa
hlt
cmp
pop
fidivrs
ds
xchg
rep
or
dec
dec
adc
xchg
lcall
pop
xor
mov
rorl
loopne
aad
out
push
mov
shlb
cmpsb
mov
mov
inc
jmp
bound
jb
and
enter
fstpl
xlat
xchg
xchg
jle
ljmp
mov
mov
push
dec
loop
dec
push
pop
shrb
dec
pop
cs
shl
repz
mov
repz
int3
leave
cmp
dec
in
and
ret
pop
add
mov
stos
mov
lret
in
std
movsl
xor
lahf
xchg
xor
mov
xchg
incl
or
inc
mov
in
pop
pop
ds
mov
rcrb
loop
jnp
cmp
or
aam
pop
inc
out
jl
or
loopne
mov
pusha
lods
popf
stos
enter
add
push
fldl
cmp
sbbb
ret
mov
push
lea
ja
cmp
mov
and
push
and
or
rorb
mov
dec
mov
mov
push
test
cmp
push
hlt
cmpsb
mov
fdivrp
aad
mov
int
inc
adc
call
xor
push
aad
sub
mov
adc
or
icebp
jb
mov
pop
ror
xchg
sbb
push
jnp
pop
adcb
lea
adc
xlat
jecxz
negl
repz
dec
mov
mulb
es
adc
inc
sbbl
mov
subl
inc
call
hlt
shl
push
mov
inc
cmp
jb
pop
xlat
lock
or
sbb
mov
outsl
or
ret
cmp
push
xor
ljmp
shll
popf
and
fildll
testl
ja
xor
outsl
mov
cli
dec
inc
cmp
test
jmp
mov
shll
push
pusha
es
dec
stos
jns
and
out
mov
int3
pop
lds
or
cmpsb
pop
insb
sbb
fnstcw
pop
mov
lea
mov
push
scas
roll
xchg
mov
out
ljmp
cmovb
adc
fwait
or
jle
in
cld
inc
cs
mov
fs
in
les
int3
pushf
test
in
adc
inc
test
dec
mov
dec
cli
sub
push
gs
mov
mov
sbb
push
dec
cwtl
jmp
insl
pop
shrb
jge
xchg
cmpsl
outsl
outsb
sub
dec
out
mov
int3
cmp
mov
jb
les
xchg
mov
sbb
fadd
popa
jmp
mov
adc
jb
aaa
sbb
dec
mov
data16
imul
inc
es
cs
aad
mov
call
out
ret
aad
out
or
inc
addl
mov
mov
in
fsubrp
aam
pop
mov
psrad
arpl
push
ud0
andl
inc
xor
mov
movsb
aad
fimuls
loopne
xchg
adc
out
push
jbe
mov
add
in
fidivl
rcll
xchg
repnz
loope
push
js
pop
or
stos
ret
mov
fs
or
dec
inc
rcrb
popf
popf
and
mov
jge
idiv
sbb
jae
arpl
mov
pop
dec
clc
jle
add
cmpsl
and
fstl
inc
mov
ja
in
push
add
add
imul
iret
into
jne
jl
cwtl
inc
ljmp
movsl
repz
ficoms
sub
lock
mov
push
enter
ja
dec
sub
xchg
jae
cli
dec
jge
in
add
aad
sub
insl
stos
lcall
andb
sbb
jb
shl
add
bound
or
xor
adc
ja
inc
lods
pusha
enter
out
push
add
rcl
mov
adc
leave
cli
sub
or
xchg
pop
out
outsl
pop
sbb
clc
bound
or
sub
popa
inc
jne
mov
jmp
nop
push
jno
loop
movsl
and
enter
out
icebp
pop
and
divb
adc
sbb
add
mov
repnz
sahf
fs
outsl
incb
ficompl
dec
or
jmp
loopne
stos
popf
or
jg,pn
fnstenv
flds
xchg
loopne
stc
out
push
or
and
dec
add
cmp
push
xchg
scas
mov
push
cmpl
mov
lret
test
mov
mov
lret
cmp
sbb
and
and
pop
fxch
lea
test
adc
addr16
fsubs
cmp
mov
jnp
pop
xchg
adc
add
inc
std
in
mov
popa
pop
aam
fwait
add
xchg
mov
loop
mov
lods
mov
daa
mov
mov
cmp
ja
dec
and
pop
inc
pusha
push
and
pop
stos
add
add
fcoms
mov
mov
cltd
mov
cmpsb
adc
sub
jns
xchg
fs
les
lods
jle
test
out
jge
bound
mov
mov
pushf
cmp
shll
mov
lds
es
sbb
cs
int
sbb
push
jo
out
pop
cmc
aaa
js
cli
loopne
xchg
movsl
add
insb
lock
adc
out
out
testb
imul
xor
decl
dec
dec
sbb
sahf
ss
jecxz
adcl
les
dec
jnp
inc
mov
and
je
cld
loopne
loop
jge
adc
push
cltd
sbb
mov
pop
es
subb
dec
lea
ja
lock
or
mov
int
sti
ja
arpl
lock
cmp
cmp
cwtl
xor
imulb
jmp
rorl
inc
pop
test
cmp
rcrb
cmp
mov
push
fcmovnbe
inc
fbstp
inc
jg
or
mov
stos
inc
rorl
or
push
aam
add
pop
fisttps
mov
adc
mov
xorl
out
ljmp
rorl
in
pop
jb
nop
cltd
inc
pop
sub
cs
fisttps
inc
sub
mov
push
rcll
cmpsl
and
jnp,pt
lds
cmp
push
scas
inc
push
in
mov
scas
roll
rcll
mov
ljmp
movsl
inc
stc
outsl
inc
gs
punpckhwd
test
mov
mov
cltd
lock
ret
ljmp
lds
jnp
jno
jne
in
ja
in
pop
mov
xorb
fdivs
pop
test
push
sahf
popa
mov
fs
pop
outsb
ret
dec
and
fimuls
cmp
fnsave
mov
jns
imul
jne
sti
jae
lcall
fs
jns
rcrl
push
mov
insl
cltd
cli
push
cmp
in
push
leave
pop
mov
xchg
cmp
scas
push
ja
movsb
cmp
inc
sbb
clc
cmpsb
pop
fwait
stos
xchg
jle
mov
push
popf
push
push
out
adc
push
xchg
fists
and
cmp
clc
stos
cmp
dec
mov
push
notb
mov
mov
bound
cmc
enter
cmp
lcall
xor
rcl
pop
sbb
les
jl
rcll
out
sub
outsb
adc
xchg
inc
or
push
jg
lods
push
mov
or
stos
cmp
xor
add
js
xchg
movsl
sub
jecxz
sbb
xchg
push
add
sub
fstl
ja
jle
add
sub
imul
pop
ret
mov
push
shll
cmp
fiaddl
test
inc
lret
dec
adc
xor
test
inc
xchg
adc
insl
xchg
in
sub
mov
or
inc
outsb
mov
ret
mov
inc
sbb
arpl
mov
inc
jbe
fs
xchg
and
sbb
sbb
les
lret
xchg
mov
jns
stos
dec
vpand
cs
add
loope
dec
paddd
pop
mov
push
pushf
in
pop
cwtl
jb
loop
or
mov
jno
fsubs
jns,pt
push
ljmp
push
push
scas
jne
out
gs
add
adc
repz
mov
in
adcb
jns
add
add
cmp
or
decb
jp
sub
lcall
cmc
cltd
int
sbb
leave
in
addr16
xchg
mov
pop
jecxz
adc
jl
mov
fnstenv
add
ret
lahf
ds
cwtl
inc
outsb
fisttpl
cli
adc
stos
mov
out
in
mov
cmp
add
mov
and
ja
test
cmpsl
jecxz
add
and
in
xchg
xchg
out
das
dec
mov
xchg
mov
add
stos
addb
jno
outsb
arpl
or
jp
and
jns
add
lahf
xor
mov
out
jo
adc
sub
out
adc
pop
xchg
aaa
repnz
das
sub
leave
adc
popf
sub
subb
inc
mov
fiaddl
and
pop
adc
movsb
xchg
call
adc
cmp
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
