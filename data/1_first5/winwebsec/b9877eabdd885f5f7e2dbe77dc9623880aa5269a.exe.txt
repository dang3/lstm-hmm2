push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
add
cmpsb
cmpsl
pop
nop
aad
repnz
fwait
or
xor
mov
push
sti
jne
test
or
jg
inc
push
in
popf
mov
mov
cmpsb
testb
in
lcall
add
lods
add
cmp
mov
jnp
cmp
imul
or
hlt
mov
mov
inc
es
pause
fwait
mov
jle
push
mov
push
imul
negb
add
xlat
cmp
push
in
testb
sarb
and
xor
cmp
xlat
adc
out
or
test
sub
cmp
mov
shl
dec
or
cmp
xor
sbb
add
js
push
xor
subb
out
cmp
xlat
inc
inc
repz
nop
fcmovne
push
lahf
sahf
movsb
hlt
push
rcl
popf
pushf
and
ficomps
push
sub
shl
mov
dec
cwtl
inc
adc
out
std
sub
dec
icebp
mov
loope
fists
xchg
lock
mov
pop
fcmovb
cmp
in
jne
add
jne
in
mov
jp
repz
mov
repz
les
jno
xchg
sbb
and
jno
jecxz
in
in
divb
xchg
xchg
dec
popf
xlat
mov
add
jp
loop
out
call
mov
xor
xor
pop
xchg
sub
mov
xchg
aam
mov
idivb
inc
pushf
xlat
mov
push
dec
push
imul
shl
lahf
sbb
outsb
mov
sub
jp
hlt
gs
inc
xor
mov
shrb
xor
int3
dec
push
jmp
xlat
dec
push
jno
sub
and
mov
lock
push
imul
out
and
addr16
and
inc
les
xor
push
push
mov
stos
notl
in
fs
xor
mov
hlt
jmp
add
js
mov
int
jecxz
ds
ja
sub
adc
jnp
cmp
and
mov
mov
es
and
mov
out
add
jnp
in
push
ljmp
dec
mov
es
roll
stc
adc
adc
jle
stos
loop
mov
adc
lret
iret
jge
adc
fisubrs
sub
sub
pop
push
sbb
lock
ret
add
shrl
in
sahf
xor
daa
call
mov
mov
mov
aaa
sbb
push
nop
and
inc
lahf
stos
scas
cmp
dec
xchg
int
ret
sarb
subps
fmul
rolb
fildl
mov
bound
sarb
icebp
int
dec
cmpl
dec
pop
in
or
sub
dec
push
mov
xchg
cwtl
fdivs
insb
push
dec
cmpsb
push
mov
repnz
mov
or
push
or
mov
inc
fdivrp
add
lcall
add
mov
or
js
dec
jae
test
dec
mov
ret
bound
test
push
pushl
addr16
mov
pop
test
sbb
je
lret
jae
jns
ss
jo
aas
push
mov
icebp
mov
lahf
int
adc
jmp
lds
xchg
add
ljmp
xchg
mov
push
ds
push
push
and
sub
popa
movsb
std
dec
out
cmp
xchg
jp
stos
jp
or
sti
popa
xchg
adc
outsl
icebp
mov
push
daa
dec
shrl
pusha
iret
inc
jp
pop
pushf
jae
loop
in
movl
pusha
jecxz
ja
jnp
inc
mov
fs
mov
sub
iret
addr16
rolb
fsubl
movsl
imul
mov
cmpb
scas
pusha
mov
js
scas
cmp
fisttpll
or
push
mov
mov
add
add
mov
cmc
add
gs
cltd
dec
sub
paddsw
xor
xor
movsb
xchg
das
dec
stc
sbb
adc
push
test
pop
pop
xor
inc
subl
sub
mov
xorl
ret
sbb
mov
dec
je
xor
jns
jmp
ss
push
hlt
js
cmpsl
adc
sub
addb
add
insl
adc
pop
aad
pop
or
fistps
test
pop
aaa
pop
mov
adc
adc
or
jl
fstps
divl
sbb
and
pop
pop
in
push
inc
and
imul
or
jns
push
cmp
pusha
aaa
jmp
int3
sub
mov
xchg
jge
xchg
mov
cli
sbb
mov
test
adc
cmpsl
rolb
cmp
xchg
or
stos
loope
ret
das
sub
xchg
xchg
daa
xchg
push
fadds
mov
ja
popa
mov
mov
dec
mov
decb
scas
cmpl
or
out
jno
pop
rclb
int3
mov
loopne
mov
lret
enter
jb
dec
movsb
setno
bound
push
mov
and
jnp
jge
ljmp
pop
test
das
pop
daa
rolb
js
fidivl
cmpsl
fldl
adc
mov
insl
stos
add
cld
xlat
cmc
nop
xchg
lds
dec
loop
jo
lcall
in
mov
jnp
lret
dec
ret
jge
mov
movsl
push
mov
mov
and
scas
sti
mov
dec
mov
adc
sti
imul
jle
push
mov
add
push
inc
bound
shlb
jge
cmp
and
mov
int
scas
adc
fwait
out
lahf
mov
dec
adc
dec
imul
cltd
and
inc
or
out
enter
mov
sbb
maskmovq
testl
in
clc
rolb
xchg
sar
stc
pushf
flds
mov
xchg
insb
jg
xchg
test
dec
nop
push
jns
loope
add
and
aad
jns
pop
dec
adc
dec
imul
pop
push
stos
loop
mov
adc
imul
ja
ficoml
arpl
vpmacswd
int
xchg
rorl
dec
notl
movsl
nop
mov
mov
add
loop
lret
movsl
cwtl
leave
and
sahf
mov
cmc
das
ss
sub
shrl
addl
addl
jecxz
push
repz
pop
sub
test
mov
xor
stos
mov
outsb
lcall
call
xchg
mov
mov
xchg
insb
hlt
dec
sub
jp
adc
cmp
adc
int
inc
cmc
pop
fs
cmc
mov
adc
and
test
stos
cli
leave
xchg
jle
dec
xchg
mov
mov
fwait
push
lret
pop
dec
mov
mov
sbb
negl
fsubs
pop
pop
call
daa
sbb
out
aam
les
xlat
imul
sub
lds
rcrb
ds
lods
inc
jge
in
mov
ret
ret
loop
mov
lret
sti
pop
cmpsl
inc
push
scas
dec
addr16
pop
mov
adc
cltd
pop
jno
sub
mov
jne
repnz
adc
out
add
mov
xor
cmp
pop
dec
ret
jmp
test
aam
fnstcw
hlt
push
dec
sti
lds
mov
and
sub
wbinvd
fiadds
or
xchg
sar
or
sbb
addb
inc
xchg
jbe
ljmp
leave
je
fiadds
imul
pop
lods
das
sbb
cmp
call
int
jae
mov
test
and
cmpsl
mov
or
xor
or
mov
jmp
pop
mov
push
pop
stc
sub
and
ret
sarl
cs
stos
shr
mov
pusha
add
rorb
out
cld
adc
popa
add
fsubrl
cmpsl
push
mov
repz
fnstenv
lret
push
cmp
mov
lods
sub
push
and
mov
jns
shrl
dec
mov
cmp
out
gs
xchg
insb
adc
cmpsl
or
outsb
add
out
mov
adc
ss
lea
das
movl
push
in
dec
fimuls
pop
int3
adc
xchg
inc
dec
mov
out
mov
mov
add
insl
dec
mov
sbb
pop
es
popf
xor
fmul
aas
je
es
inc
dec
insb
mov
shll
jl
push
popf
sub
outsl
sti
scas
cmp
jne
in
sub
inc
xor
and
jae
dec
push
push
test
jl,pt
sbb
fwait
mov
pop
lock
cmp
jns
movsl
in
dec
mov
ficomps
lret
xor
test
inc
jmp
xor
nop
fidivrs
popf
repz
stos
pop
bound
jp
mov
jle
stc
mov
dec
xor
add
mov
xor
jmp
adc
lcall
add
shlb
push
ljmp
mov
in
pop
cmp
add
add
xchg
and
sbb
loope
mov
adc
jns
xchg
aad
or
movsb
jecxz
lea
pop
xchg
and
loopne
loope
push
enter
push
mov
popf
rorb
aas
pop
lahf
cwtl
lret
mov
ljmp
movsb
add
adc
ja
and
test
pop
mov
insb
push
bound
cmpsb
andb
stos
test
loope
outsb
or
xor
push
mov
repnz
fs
cli
cmpsb
popf
push
inc
test
mov
arpl
push
filds
iret
imul
pusha
and
subl
sub
sub
pushf
insl
stc
inc
pusha
ret
mov
scas
dec
and
shll
popa
jb
add
or
insb
cli
push
orb
hlt
mov
jbe
mov
and
mov
sbb
mov
xchg
xor
add
sbb
arpl
stc
cmp
cmp
pop
testl
inc
hlt
nop
or
dec
mov
lods
mov
cmpsl
mov
xchg
movsl
notb
xor
xchg
lock
es
xchg
xor
lods
arpl
sub
test
add
inc
inc
inc
jmp
dec
xchg
push
cmp
cmp
mov
add
mov
loopne
aas
xchg
jle
mov
cli
push
pop
mov
inc
add
mov
imul
xor
jns
int3
mov
jbe
aam
push
push
pop
ss
pop
hlt
xchg
sub
inc
mov
sub
add
pop
je
push
clc
add
lret
mov
int
push
mov
or
fisubrl
testb
adc
cwtl
rolb
gs
sub
mov
jecxz
dec
adc
stos
push
cmp
mov
repnz
rolb
or
orl
inc
xor
lret
cmpsl
cmp
adc
dec
jns
jae
jnp
rcrb
in
push
mov
pop
push
fsubl
xchg
lods
andl
leave
adc
inc
cltd
rcrb
daa
inc
xlat
jge
lcall
xor
inc
shll
clc
dec
shll
xchg
cmp
cmp
adc
sub
inc
sub
je,pn
and
add
into
outsb
dec
push
aad
jne
push
sub
loope
clc
pop
pop
lret
jmp
sbb
xchg
pushf
out
mov
cmc
popf
loop
pop
jp
cmp
in
scas
jmp
xor
lcall
inc
mov
cmp
stc
stos
mov
sub
xchg
cmp
mov
insl
mov
nop
das
sti
notl
out
add
out
incb
inc
add
push
or
ret
xor
fstl
icebp
cmpsb
inc
pop
loop
pop
push
inc
and
mov
ds
dec
pop
div
gs
adc
in
dec
sbb
sub
sbb
mov
pusha
lock
sub
dec
aad
test
pop
mov
scas
pusha
out
add
sub
and
mov
sub
dec
jno
push
addb
inc
fsts
adc
aaa
cmp
or
cs
push
fucomi
addb
cmp
das
sbb
insb
mov
dec
insl
cwtl
pop
xchg
adc
pop
ficompl
pop
mov
push
xor
loop
test
mov
movsl
inc
ret
sbbl
and
out
int3
icebp
mov
popa
imul
scas
aaa
mov
dec
mov
jp
mov
and
jns
mov
dec
lret
or
stos
mov
mov
xlat
sub
jp
iret
in
xor
pop
push
xchg
icebp
dec
inc
jmp
mov
int
jl
jne
fs
mov
add
idivl
pop
cs
mov
push
sbb
sbb
data16
xor
mov
pop
mov
jecxz
jbe
dec
jmp
mov
lret
ficoms
dec
addps
je
push
or
cli
addr16
nop
clc
cmpsl
adc
repnz
aam
adcl
lock
jle
mov
push
stos
andb
jl
ja
aas
cmc
push
add
pop
incb
mov
mov
out
xor
ds
daa
ror
mov
aad
gs
push
ret
in
insb
lcall
lret
sti
in
adcl
fisttpl
fnclex
repnz
add
out
out
pusha
inc
repz
mov
jne
xchg
adc
cmp
push
inc
add
fimuls
lock
xor
lcall
clc
out
cmc
lret
xchg
stos
xchg
sarb
je
ja
xchg
adc
popf
stos
push
push
sbb
and
andl
add
lock
into
inc
cmp
or
jle
mov
cmpsb
mov
scas
and
mov
das
shll
lods
mov
pop
scas
jo
in
dec
mov
movsl
out
std
inc
sahf
and
adc
in
aad
sti
add
xor
loope
lahf
cmc
sahf
sub
or
mov
inc
in
pop
out
inc
test
dec
pop
add
ret
sbb
pop
pushf
and
inc
push
or
inc
pop
push
mov
stos
cs
test
inc
ljmp
mov
imul
xchg
movsb
inc
or
xor
nop
jb
cmc
mov
cmpsb
pop
mov
into
pop
sub
mov
repnz
cli
cmp
pop
mov
jl
adc
inc
xor
fldenv
xchg
cmpl
adc
lahf
cmp
repnz
xchg
data16
jmp
pop
aas
rclb
cli
mov
in
jge
mov
fwait
je
cmp
inc
stos
data16
adc
andl
imul
xor
gs
popa
fdivl
xor
fstp
popf
jo
inc
fiaddl
or
jbe
mov
and
mov
inc
faddl
es
push
jl
sub
sub
add
lods
ss
stos
aaa
sar
addb
das
and
jl
ret
movsb
rol
xor
mov
ret
xor
xchg
add
sahf
dec
dec
xchg
cmp
xorb
dec
adc
sbbb
int3
movb
cmp
jns
and
insl
mov
lcall
enter
lret
lock
ja
push
ret
or
pop
enter
jmp
je
mov
imul
inc
outsl
mov
mov
dec
rcll
push
stos
bound
imul
add
jns
je
shrb
sub
mov
jle
jmp
repz
sbb
cmc
mov
stos
and
inc
cmp
insb
and
std
test
dec
cmp
jae
gs
sub
mov
xor
xchg
xchg
vpand
sbb
push
lds
lea
fwait
push
ja
imulb
or
daa
add
cli
mov
xchg
lods
inc
iret
inc
xchg
in
add
aam
ss
insl
jo
iret
add
or
orb
push
xchg
push
xor
or
cli
dec
xlat
mov
negb
pop
adc
mov
imul
dec
daa
and
fsubl
xchg
push
pop
or
xchg
stos
dec
fidivrl
sub
scas
shlb
je
cltd
add
mov
fists
stos
outsb
mov
jne
push
orb
nop
sub
push
imul
scas
pop
fistl
scas
mull
in
mov
cwtl
popf
scas
je
xchg
scas
jmp
jmp
mov
out
nop
or
dec
inc
pop
mov
lahf
ret
mov
push
mov
pop
jns
mov
jae
in
or
icebp
add
dec
clc
push
test
xchg
sub
mov
mov
fs
int
incl
add
es
gs
jbe
daa
jnp
ljmp
mov
mov
push
and
push
and
sahf
xadd
fcoms
ljmp
aaa
shlb
int
mov
dec
jns
test
repnz
or
dec
icebp
std
ret
push
adc
ja
mov
sub
xchg
sub
lods
jno
adc
int3
xchg
sub
dec
pop
xorb
cmpsl
lods
and
add
imul
mov
clc
repnz
lods
gs
mov
sub
pop
push
mov
cmp
mov
add
test
xchg
push
aas
loope
xor
push
bound
das
in
mov
pop
sahf
fiaddl
data16
ljmp
cli
fwait
mov
or
jge
addl
cmp
mov
dec
repz
cmpb
jae
cmpsb
rcl
pop
es
push
ljmp
aas
lcall
sarl
and
insb
orb
mul
jg
aam
xor
cmp
es
scas
cmp
sub
xchg
pop
pop
int3
jge
and
enter
add
push
lods
mov
cmp
sbb
adc
fs
dec
insl
sbb
jecxz
adc
pop
or
out
inc
pop
cmp
add
adc
shll
mov
mov
add
aaa
fidivl
lods
push
das
outsb
add
pop
cwtl
lret
xchg
bound
cmp
outsl
and
sub
arpl
and
scas
out
inc
adc
jmp
pushf
stc
inc
mov
jecxz
ljmp
enter
loope
sbb
in
out
dec
idivb
push
push
sbb
pop
xchg
sbb
push
push
jae
mov
sub
mov
jnp
es
ret
in
mov
sub
lods
jb
sarb
or
mov
stos
fcomi
and
jo
shl
divl
cmp
icebp
mov
and
add
popf
int
xchg
addr16
or
int
add
xchg
fadd
ficomps
cld
js
js
adc
push
icebp
lea
and
add
or
xchg
mov
xor
jp
adc
jg
cmp
in
in
sbb
add
dec
cs
out
arpl
pusha
clc
dec
cmp
jecxz
daa
jle
in
mov
out
fstpl
pop
xchg
mov
in
ja
test
add
dec
cmp
lcall
dec
inc
rcr
xorl
xor
mov
xchg
mov
stos
inc
pop
jns
ljmp
data16
push
inc
sub
and
mov
lret
adc
xchg
or
flds
in
loop
push
scas
xor
pop
push
popf
push
push
inc
and
sbb
fildl
call
mov
dec
out
mov
sub
jo
bound
ret
clc
adcl
stos
lods
shlb
dec
testb
jmp
shlb
out
ljmp
sbbb
pop
mov
mov
repnz
dec
or
xor
and
fsubr
out
jbe
mov
jmp
lcall
out
push
lea
sub
scas
mov
fmull
cld
aas
mov
mov
mov
out
repnz
mov
dec
sub
pusha
mov
xchg
mov
out
out
jae
push
jmp
push
xchg
adc
dec
add
fwait
loop
hlt
push
adc
das
push
incb
fwait
dec
jecxz
mov
and
ljmp
fdivl
pop
xor
in
pop
mov
test
push
lods
adc
or
add
mov
cmpsl
push
sbb
xchg
mov
pop
out
jge
cmp
mov
sub
push
xor
and
xchg
jl
cmp
mov
mov
lea
push
movsb
xor
mov
xor
jne
sub
iret
repz
jb
sbb
lret
mov
das
insl
jl
das
movsb
pop
loopne
adc
cmp
mov
movsl
pop
xor
ds
fsts
add
bound
ja
xchg
sti
sub
add
adc
cmp
dec
rcrb
xchg
addr16
or
call
fidivrs
popa
inc
and
cmc
js
push
cmc
pop
push
shl
mov
sbb
xorb
scas
cmpsb
mov
insb
mov
hlt
pop
movq
aam
sbb
mov
ljmp
xchg
lods
jb
xor
outsl
mov
add
lds
addr16
ja
daa
and
loope
popa
pop
icebp
daa
lahf
jecxz
mov
sbb
pushf
loopne
jbe
xchg
movsl
stos
cmc
mov
jl
cmp
xchg
ss
adc
adc
dec
insb
int
icebp
mov
leave
mov
push
cwtl
mov
cmpsl
test
pop
jno
mov
or
shlb
dec
jnp
or
scas
iret
lret
pusha
cmp
jns
xchg
out
sub
jp
and
mov
gs
pop
fidivs
xor
mov
popf
jo
adc
loop
mov
push
inc
iret
sbb
jecxz
ja
cs
icebp
repz
int3
cltd
cmp
inc
and
fnstenv
jo
add
testl
test
mov
popa
mov
push
lods
push
pusha
fbstp
int3
lods
fimull
mov
and
mov
adc
ret
pop
xor
pop
cltd
xchg
add
mov
jo
aad
mov
and
push
imul
push
ds
cmp
or
adc
mov
pusha
iret
inc
cld
and
scas
in
fsubrl
stos
mov
push
loop
xchg
lret
cmp
push
in
add
mov
dec
aaa
aas
pop
popf
sbb
or
sub
push
mov
inc
fsubl
mov
sub
imul
push
mov
lret
xor
pshufw
mov
js
ljmp
and
pop
lods
lods
mov
sbb
outsl
and
jae
pop
sub
out
xbegin
mov
cmp
and
jo
xchg
mov
jle
and
lds
push
pop
divb
sti
fs
xlat
pop
xchg
cltd
xor
xchg
mov
mov
mov
sbb
mov
in
xor
push
adc
push
lea
pop
sarb
sub
inc
leave
fiadds
mov
out
pop
jno
lea
sub
arpl
add
push
dec
data16
inc
dec
mov
gs
ret
sub
testl
scas
dec
jo
pusha
push
faddl
fwait
out
les
shl
mov
or
sti
aam
or
sbb
sbb
aaa
xor
jns
pop
rolb
cs
test
inc
push
sbb
mov
test
addr16
xchg
mov
in
loope
addr16
dec
scas
adc
shll
sub
ud2
mov
hlt
xor
cmc
jnp
pop
rolb
mov
into
ret
sub
add
push
data16
add
shlb
fimuls
stos
scas
js
and
mov
in
sub
adc
jl
sub
scas
xchg
adc
scas
fistl
jnp
push
cli
xorb
add
mov
xchg
xchg
add
faddl
in
jo
sbb
push
ss
in
sbbb
add
insl
cltd
nop
aam
gs
cmc
pop
icebp
xor
dec
stos
aam
nop
pop
repz
sbb
lcallw
outsl
je
mov
dec
out
sbb
popa
push
xor
sbb
jne
and
rep
rcll
mov
addb
sbb
cmp
sarl
cmp
fldenv
hlt
xchg
and
inc
lcall
pop
mov
scas
dec
pop
adc
pusha
hlt
sbb
ljmp
int
out
fcompl
std
or
test
xchg
rcrl
mov
xchg
daa
loopne
cld
or
das
sbb
arpl
mov
aas
push
or
pop
cmc
cwtl
fadds
sub
push
jecxz
hlt
jmp
pop
xchg
inc
push
insl
in
sbb
insb
adc
mov
sysret
and
jne
push
test
sub
sbb
or
jecxz
fmull
lcall
shlb
adc
std
test
das
imul
lods
mov
lahf
out
cmovle
aam
adc
orl
sub
add
xchg
outsb
mov
dec
std
lahf
in
dec
pusha
cmpsl
sbb
out
fisubs
orl
push
sub
imul
iret
mov
imul
outsl
mov
dec
sti
clc
lret
mov
je
pop
cmp
mov
imul
mov
ja
div
insl
push
mov
jl
orb
das
ds
pusha
jecxz
sub
dec
adc
adc
or
dec
mov
mov
jbe
repz
jae
out
mov
xor
shll
pop
pop
or
scas
mov
fistl
sbb
dec
pop
nop
and
sbb
mov
and
or
arpl
fucomp
inc
cmp
mov
cmpsl
inc
sub
pop
xchg
push
sbb
ljmp
fcmovnu
test
mov
sub
cltd
sub
cmp
in
mov
xor
imul
test
out
test
xorb
orl
arpl
pop
inc
xchg
xchg
fdivl
or
dec
adc
add
int
imul
imul
sahf
aad
jge
lret
inc
and
cmpsl
imul
sub
imul
addb
add
add
dec
rcrl
ljmp
rep
inc
xchg
mov
outsl
outsb
nop
cli
repz
jle
test
xchg
add
bound
push
out
inc
shll
aaa
fwait
ret
addr16
xor
cmp
pop
bound
decl
jle
pop
push
jg
ja
shll
je
movsl
cltd
or
mov
xchg
adc
jb
lret
inc
pop
cmc
xchg
jb
xchg
inc
sub
outsb
cs
stc
clc
mov
loope
pop
daa
cmpsl
adc
jnp
insb
je
scas
unpckhps
inc
iret
je
icebp
inc
jns
repnz
int3
mov
sbb
ffreep
flds
lock
leave
jbe
imul
adc
fs
sbb
fsqrt
ljmp
xor
xchg
mov
fsubl
pop
jne
loope
popf
mov
leave
jno
add
lret
pop
int3
push
or
mov
cmp
cmpsl
sbb
adc
mov
int
mulb
rorb
shrb
test
mov
push
inc
lret
add
lods
mov
addr16
lock
jno
aas
inc
cmp
xlat
cltd
push
orl
arpl
int3
icebp
loop
lods
lea
cli
cmp
mov
outsb
cwtl
insl
in
ja
mov
cmp
les
mov
das
and
dec
shrl
xor
insl
push
dec
enter
mov
xchg
push
outsb
xor
and
pusha
and
or
repz
xchg
lahf
aam
adc
outsb
test
jne
pop
jg
fiadds
adc
mov
test
cwtl
cld
daa
popf
cs
cwtl
jb
xlat
cli
arpl
mov
jns
adc
push
push
stc
jbe
arpl
mov
enter
fneni(8087
fdivrp
adc
test
test
mov
aaa
cli
dec
aad
push
lods
sub
sub
les
movsb
sbb
cmpsb
iret
je
rcrb
ficomps
dec
in
int3
imul
inc
movsl
lods
clc
insl
cli
mov
imul
das
push
mov
mov
ljmp
js
push
cmp
dec
mov
jmp
or
insb
ror
cmp
popf
mov
mov
std
aas
orb
insl
fwait
cmc
shrl
or
or
adcl
mov
sbb
outsb
lds
mov
cmp
lods
dec
push
mov
xchg
mov
sbb
shrl
dec
repz
cmp
sbb
lahf
lods
into
pushf
cld
inc
out
xchg
insb
jp
cli
mov
mov
and
in
test
xor
and
or
leave
push
dec
cmp
cmp
pusha
loope
scas
aad
das
jle
mov
cmp
or
xchg
rcr
mov
out
xor
cmp
sub
jmp
xchg
mov
jne
add
outsl
ss
cmp
mov
xchg
mov
adc
inc
fmuls
mov
loop
and
and
or
out
pop
sbb
inc
insl
fwait
adc
fldl
xor
dec
lret
test
dec
jmp
xchg
das
xchg
scas
cmp
cmp
xchg
stos
push
jo
xor
pusha
scas
push
jle
or
imul
mov
out
loopne
call
cmp
gs
add
lods
aad
sbb
out
sti
imul
fldlg2
scas
pushf
mov
popf
add
push
clc
and
mov
stc
test
fldcw
cli
pop
mov
cmp
negb
ret
xchg
test
jb
and
repz
and
lret
call
or
jbe
lret
bound
shll
fwait
xor
cmp
or
ds
sti
arpl
xor
lds
mov
lcall
jbe
loope
lea
mov
in
jmp
inc
or
jnp
or
test
and
pop
mov
xchg
scas
jmp
mov
les
mov
ja
loopne
test
out
sub
pop
das
rcl
sbb
orl
mov
iret
fldenv
out
cmpsb
sbb
mov
loop
rcll
xor
loop
adc
mov
or
add
jno
sarb
pop
mov
mov
sbb
xor
aas
jg
insb
jnp
mov
sarb
cmp
mov
cmpsl
inc
aam
jg
cwtl
nop
aam
sub
js
ljmp
clc
aad
dec
fildll
and
popf
movsl
jbe
mov
sub
push
and
dec
or
popf
pop
jbe
enter
stc
adc
xchg
jle
push
lea
push
pop
push
lods
fs
cmc
add
and
xor
inc
inc
pop
cmc
pop
adc
mov
addr16
lds
test
or
mov
loop
xchg
xor
inc
je
or
fs
xor
push
push
rcrb
pop
movl
mov
pop
daa
stc
mov
mov
and
mov
addr16
jecxz
stos
add
fsubrl
xor
dec
cmpsl
sahf
xchg
iret
jns
popf
cmovns
jecxz
jae
and
lods
adc
imul
pop
jbe
and
mov
stos
jne
jg
fstps
or
negb
cmp
stos
int
cmp
ja
pusha
ret
out
inc
mov
ljmp
inc
out
setp
push
das
shll
shll
mov
lcall
xor
fwait
rcrl
and
sub
mov
mov
xchg
xor
in
hlt
jb
pop
pop
xchg
outsl
lahf
jae
mul
jle
sbb
or
mov
jne
xor
cmp
add
xchg
mov
hlt
push
mov
fwait
movsl
inc
jg
bound
xor
sbb
xor
push
outsl
into
xor
mov
loopne
mov
push
pop
es
outsl
xchg
dec
enter
cwtl
dec
push
psubusw
cmp
pushf
enter
cmc
and
xchg
loopne
and
jmp
mov
std
pop
mov
add
adc
or
ds
lock
test
xor
loopne
pop
mov
fstpl
dec
pop
jno
xor
jg
dec
nop
data16
mov
sahf
sahf
mov
mov
sbb
jp
or
sub
subb
push
repnz
stos
pop
cmp
xor
int3
jne
push
sbb
inc
add
add
cmp
leave
dec
in
cs
mov
push
je
fstpl
aaa
mov
pop
repz
into
jno
jb
pop
lahf
adc
repnz
lods
cwtl
cmpsb
psllw
and
rorl
xor
stc
dec
cmpsb
pop
aam
into
cwtl
shrb
out
sbb
mov
das
jg
jne
mov
mov
mov
ror
adc
lock
sub
adc
nop
jb
push
ret
hlt
mov
or
xor
mov
mov
lods
sbb
mov
shrd
test
mov
loopne
ss
xor
in
adc
xor
sub
cmpsb
adc
shll
xorb
stos
inc
cmpsb
jge
leave
out
in
mov
mov
xchg
mov
xchg
rorb
sub
shlb
and
dec
inc
enter
int
loopne
scas
inc
mov
xor
ret
testl
xor
jl
mov
sub
mov
lock
loop
testl
leave
nop
mov
jecxz
inc
add
jg
mov
sub
das
push
mov
incb
insb
mov
jg
jge
mov
pusha
aad
movsb
or
dec
into
das
mov
xchg
into
inc
mov
std
rcrb
sbb
mov
dec
dec
sbb
inc
shll
xchg
movsb
sub
hlt
cmc
sbb
aaa
nop
pop
jnp
mov
insl
push
movsl
js
inc
jmp
ds
je
bound
lret
push
int
leave
movsb
pushl
in
mov
les
popf
insb
sub
mov
pop
aad
add
and
mov
cli
add
add
and
shrl
loope
mov
xchg
lods
leave
lret
mov
jg
cmp
lahf
and
out
ss
mov
enter
mov
fcompl
xor
call
shll
adc
jne
xlat
jp
dec
fwait
stc
nop
mov
cmp
xor
movsl
lcall
insl
int
imul
lock
pop
rclb
jp
fcmovbe
sub
cmpsl
rcrl
cmc
sub
pop
pop
aas
and
fidivrs
stos
xor
loop
jle
popf
xor
mov
adc
mov
cmpb
aaa
cmp
hlt
daa
mov
scas
stos
outsb
cmp
scas
ljmp
es
mov
mov
lcall
inc
jno
dec
pop
imul
pop
jno
loopne
or
stc
pop
das
sub
dec
jmp
xchg
and
or
lahf
lods
mov
xchg
popf
jnp
stc
xor
jg
push
pop
nop
mov
add
dec
aam
lock
mov
in
ljmp
in
imul
sub
add
lea
push
jp
cmpsl
mov
movsl
icebp
xchg
test
push
mov
add
xor
and
sbb
jl
mov
es
frstor
jge
push
push
or
inc
or
push
jne
xchg
cmp
adc
sub
sub
out
sbb
dec
pop
sbb
push
std
pop
and
pop
xor
sti
mov
sub
stos
ja
ret
fldt
out
inc
dec
ja
hlt
and
rorl
andl
stc
sbb
jmp
xchg
scas
jb
push
mov
iret
xor
push
scas
mov
mov
ret
lock
pop
cmp
rclb
subb
jg
enter
mov
leave
pop
repz
add
mov
data16
cld
sbb
sti
mov
cmp
add
in
cmc
sbb
jnp
mov
int3
pop
mov
mov
cmpsl
mov
fdivs
psubb
mov
push
shl
mov
cmpsb
in
adc
js
ds
aad
cmp
xchg
lods
dec
pop
jnp
stos
pusha
mov
lods
scas
test
pop
scas
stos
cwtl
xchg
int3
inc
dec
and
mov
into
cld
dec
inc
js
mov
fdiv
popf
ret
inc
sbb
fsts
inc
cmc
pushf
or
inc
arpl
pop
inc
pop
popa
inc
jne
xor
jmp
fwait
sahf
adcl
adc
pop
jb
xchg
xor
popa
fdivp
in
push
out
addl
aas
mov
push
push
mov
fldcw
scas
sub
adc
inc
pusha
aas
jbe
shrb
mov
insb
loop
sub
and
daa
inc
dec
xchg
xlat
add
stos
cmp
pop
das
or
insl
mul
mov
mov
jle
mov
cmp
movsb
rol
sbb
arpl
aas
jno
test
ja
iret
cli
mov
cmpsl
daa
cmp
shld
ljmp
mov
jnp
push
push
out
stc
mov
mov
or
xor
mov
out
pop
fistl
repnz
inc
jo
popa
push
inc
add
cmp
jne
fwait
inc
xor
lods
mov
jecxz
mov
add
dec
into
bound
mov
outsl
sbb
push
mov
adc
in
je
mov
ds
enter
jnp
loopne
cmp
rcrb
jbe
dec
mov
aas
mov
xor
pusha
push
aaa
ror
daa
inc
adc
arpl
sub
push
mov
inc
sub
sbb
xor
aad
fucomip
jns
fld
sub
jge
or
and
add
scas
leave
mov
in
dec
push
pop
dec
mov
fstpt
inc
jmp
mov
add
sahf
mov
fisubs
stos
test
adc
xchg
inc
popa
push
sbb
loopne
insl
int
stos
pop
xchg
adc
lods
push
and
fs
popa
push
mov
mov
outsl
sahf
add
jle
test
mov
pop
inc
lret
mov
js
scas
sti
fwait
mov
dec
pop
stos
push
jle
jmp
dec
lods
mov
cmp
add
addl
fcomps
popf
sbb
push
adc
in
dec
or
inc
or
je
lahf
push
shl
adc
fstps
stos
adc
jne
mov
in
shll
js
jecxz
pop
sub
mov
xchg
push
sbb
inc
xchg
sub
mov
int3
xchg
mov
sub
test
popf
cmp
stc
mov
pop
stos
mov
xchg
xchg
into
sub
fxch
xchg
lock
mov
aad
mov
sahf
adc
mov
popa
fsubrl
scas
sahf
sti
mov
data16
jae
sbb
mov
les
je
test
sbbl
rcrb
lea
arpl
push
hlt
mov
add
imul
mov
mov
data16
mov
add
jmp
lcall
inc
jbe
outsb
cli
ljmp
out
xchg
push
rcrl
xchg
fiaddl
jle
push
inc
lcall
addb
imul
stos
xchg
xorps
insb
push
sub
lahf
int3
jno
cmp
mov
in
mov
jle
sti
xor
jo
inc
addr16
repz
sbb
test
dec
pushaw
arpl
sub
mov
push
cmp
lods
shl
add
sbb
ja
outsb
add
jge
dec
outsl
mov
push
fdivrl
sbb
sti
pop
xor
xchg
jl
dec
sbb
into
cmp
or
jl
adc
data16
push
xor
cwtl
xlat
aam
jmp
push
mov
inc
and
xor
add
fld
mov
leave
push
call
sub
cmp
xor
inc
mov
pop
mov
add
mov
jns
fcmovne
xor
cmp
and
sub
out
cmpl
sub
jp
scas
imul
shll
sbb
sarl
rol
mov
scas
or
push
pop
rorl
divl
add
scas
xchg
cmp
cmp
test
rclb
inc
sub
push
dec
movsb
int3
sar
cwtl
notb
fnsave
test
pop
or
out
mov
dec
rorl
imul
mov
lret
fnstsw
test
push
pop
aas
daa
pop
jge
jg
cmp
adc
pop
insb
push
or
daa
adc
xchg
xchg
mov
stc
xchg
sbb
stos
lret
adc
inc
jp
into
mov
fcmovu
sbb
in
mov
pop
jecxz
mov
adc
leave
pop
notl
popf
aad
imul
push
cmp
mov
or
push
dec
lahf
adc
lret
add
fs
add
scas
pavgw
mov
lods
xchg
mov
js
pavgb
dec
xlat
in
insb
pop
pop
push
mov
pop
add
test
mov
addr16
repnz
jno
inc
aas
xchg
xor
dec
xchg
mov
jnp
lret
adc
or
jno
mov
pop
subl
cmp
mov
xor
mov
jnp
xor
icebp
sbb
mov
jl
push
mov
stos
stc
repnz
adc
lret
pop
gs
stos
add
xchg
daa
add
xor
mov
and
add
inc
xor
pop
jbe
mov
dec
scas
xchg
aaa
mov
aam
jecxz
fistpl
push
cmp
dec
sub
mov
push
pop
hlt
pushf
scas
xor
cmpsl
mov
push
pop
mov
cmp
les
loopne
mov
push
cmp
jle
aaa
pop
sbb
dec
inc
int
ficoml
mov
je
mov
cwtl
lret
jbe
xor
xchg
int
and
add
outsl
mov
pushf
adc
test
cmp
add
sub
sub
pop
jge
mov
jecxz
dec
cmp
xchg
andl
cmpsl
add
jnp
inc
push
das
mov
mov
mov
es
xchg
xor
lds
xchg
xchg
sti
mov
stos
add
addr16
sub
sbb
in
pop
cmp
pop
subl
xchg
jg
jecxz
je
jecxz
jle
jge
mov
inc
imul
jge
cmp
std
mov
mov
je
jge
addr16
std
imulb
je
fstps
sub
dec
aam
xor
push
xchg
aaa
sub
dec
fildl
movq
aad
xchg
mov
mov
jbe
mov
cld
cmp
outsl
sar
inc
in
mov
popf
fisubs
sub
cmp
popf
cli
enter
imul
fsubl
leave
sbb
mov
push
adc
jo
fcom
mov
loop
xchg
adc
sbb
dec
icebp
xchg
cmc
pop
imul
gs
daa
cld
inc
mov
sbb
push
push
push
mov
stos
sub
lds
outsb
xchg
lahf
or
aad
sub
sbb
mov
jg
inc
mov
inc
cmp
ds
sbb
mov
mov
mov
data16
mov
insb
adc
or
sahf
xchg
dec
xchg
mov
adc
std
push
sbb
mov
push
rcl
mov
and
out
jno
pushf
sub
cmp
outsl
roll
and
mov
cmp
inc
test
das
or
jle
neg
shll
scas
pop
lret
cmp
rcll
sbb
inc
and
mov
les
addr16
jbe
sub
sbb
iret
mov
cvtdq2ps
leave
pextrw
dec
loope
mov
sbb
icebp
fstpl
in
arpl
lock
mov
lods
std
cs
jns
jg
ret
mov
fcmovnbe
popf
inc
mov
dec
fisubl
inc
add
mov
pop
xchg
and
addr16
scas
ret
and
mov
adc
out
and
leave
inc
iret
or
movsl
xor
sbbl
and
stos
or
jb
cld
decl
test
pop
pop
das
out
mov
or
mov
arpl
xchg
cltd
push
xchg
cmc
repz
sub
sbb
mov
mov
les
dec
jge
mov
lcall
stos
dec
xor
sbb
imul
loopne
sub
cli
xor
mov
lahf
adc
lret
ret
jbe
mov
push
rcrl
xchg
push
jnp
fcoms
push
idivl
das
call
call
sbb
clc
push
movl
lret
mov
popa
pop
sub
mov
cwtl
sub
mov
fstps
sub
sbb
push
push
and
inc
jns
mov
jns
cmc
testl
ja
dec
fsubrl
sarl
pop
xchg
or
xchg
jl
fisttpl
lcall
pop
fsts
cwtl
jbe
sahf
pusha
push
clts
imul
lahf
jl
aam
popf
sbb
sahf
std
out
add
add
mov
cmc
jp
lret
xchg
out
idiv
cli
notl
sub
icebp
movsb
int
cmp
jp
and
cvttps2pi
in
pop
and
cmc
cwtl
std
gs
mov
mov
lcall
cmp
jno
dec
cmp
mov
adc
xor
adcl
je
mov
int
ret
add
mov
mov
decl
fcompl
adc
jbe
loop
aad
data16
fistpll
loop
xor
fdivs
lods
dec
inc
xchg
mov
or
and
push
or
xchg
bnd
jmp
mov
cltd
xchg
inc
into
jnp
ret
inc
mov
popa
pop
push
sbb
cmp
decl
adcb
call
pop
flds
mov
cltd
mov
pusha
mov
cwtl
mov
jne
lcall
cld
xchg
shll
sbb
and
shrl
popa
outsl
jnp
shlb
mov
adcl
jnp
jp
repz
into
and
adc
jmp
shlb
pop
rcl
setp
je
movsb
add
insb
cmc
movsb
mov
mov
adc
push
mov
rcrb
dec
and
imul
in
or
jb
movsl
push
mov
dec
and
xor
call
in
or
aam
stos
dec
data16
sbb
mov
in
and
js
inc
test
inc
dec
icebp
out
xor
aad
and
xchg
mov
adc
lods
push
rolb
int
inc
popa
dec
mov
fnstsw
jl
mov
sarb
pop
fmull
mov
subb
push
int3
mov
out
inc
push
and
aam
xchg
xor
push
dec
imul
or
push
mov
dec
xchg
lods
xchg
inc
iret
mov
scas
push
popa
xor
test
push
cmpsl
lods
mov
sbbb
jae
imul
jmp
xchg
mov
popf
xchg
in
jg
xor
mov
and
aas
add
fadd
fidivl
push
adc
adc
ljmp
mov
cmp
pop
int
adc
aaa
test
leave
push
stos
pop
xor
xor
mov
fsubrl
push
cmpsb
xchg
lret
xlat
pop
jp
push
and
mov
dec
mov
inc
arpl
pop
xchg
loopne
mov
adc
push
imul
mov
movsl
int
sub
pop
dec
sbb
ja
jo
dec
dec
aaa
mov
xchg
push
pop
sarb
out
or
in
movsl
fsubr
idiv
stc
push
mov
push
push
ss
out
lret
xchg
push
xor
adc
pop
imull
xchg
xchg
jbe
sarb
sub
and
daa
mov
xchg
mov
and
lea
add
xchg
push
sarb
das
out
shl
icebp
or
int
popf
ficomps
clc
jbe
cmp
pushf
iret
sub
jl
inc
fildll
mov
cmp
xchg
pop
clc
fidivrl
outsl
test
inc
xchg
movsb
mov
xor
test
lahf
mov
xchg
jns
in
push
dec
cs
mov
xchg
lock
loopne
loop
ss
es
mov
stos
out
lods
add
jne
dec
jae
popa
pop
loopne
ljmp
das
outsb
xor
pop
sbb
mov
mov
scas
mov
daa
fsubr
or
pop
mov
xor
sub
inc
das
mov
and
rcll
loopne
cmpb
rorl
pop
or
mov
ficomps
sub
lcall
add
push
pop
adc
dec
jb
add
add
mov
mov
sbb
loope
cmp
xchg
mov
sbb
push
aas
dec
and
int3
aaa
mov
pop
or
jp
jnp
fwait
clc
or
cltd
push
ret
pop
lods
fcoml
out
xchg
pop
push
adc
xchg
add
push
fisubrs
repz
aam
jnp
cmc
jb
dec
aad
gs
loopne
xor
daa
adc
in
mov
test
mov
xchg
out
push
inc
dec
fwait
mov
adc
sub
cli
or
jmp
pop
repnz
sarl
lock
mov
push
pushf
sub
subl
dec
andb
stc
nop
push
or
mov
sub
sbb
lahf
inc
adc
gs
cmp
or
xlat
fnstcw
sbbl
call
sti
movsl
iret
gs
hlt
add
pop
pop
fbstp
add
add
imull
scas
push
cmpsb
push
ja
jae
pop
fcomp
xor
bound
adc
mov
add
adc
bound
push
sub
mov
jae
mov
and
jmp
jno
icebp
mov
mull
mov
js
or
imul
mov
mov
adc
sub
sub
dec
cmp
mov
sbb
cmp
leave
call
mov
pop
sub
mov
mov
shl
out
inc
push
fdivrs
mov
pop
and
mov
fstps
clc
rclb
int3
lcall
inc
rcrl
sub
aam
scas
push
icebp
call
mov
fsts
mov
dec
cwtl
das
or
icebp
xlat
shrb
orb
insl
dec
repz
int3
mov
outsb
movsl
call
clc
push
iret
pushf
push
dec
dec
mov
in
cmpsl
js
out
in
sub
cmpsb
sbb
pop
scas
jbe
xor
lcall
popf
push
xchg
in
loop
xchg
sti
adc
out
xlat
ret
and
sbb
adc
clc
call
pop
les
dec
clc
mov
inc
push
and
loop
nop
add
adc
imul
xor
sti
subl
insb
push
iret
das
decl
xor
in
dec
jb
sbb
xchg
lods
sub
cmp
pop
mov
iret
bound
andb
sub
cs
jecxz
cld
xlat
xchg
cmp
push
xchg
and
mov
pop
pop
dec
cltd
movsb
cmp
loope
xchg
js
insl
add
cmp
mov
cmpsb
sbb
jmp
dec
jp
inc
lret
or
push
filds
je
fildll
leave
insb
jmp
jg
mov
cltd
mov
cmp
pop
inc
inc
and
popf
call
mov
cmpl
rol
and
jno
fndisi(8087
lods
inc
stc
xchg
cmc
mov
mov
das
fs
fcompl
into
sub
insb
arpl
loope
std
xchg
cmp
push
xchg
das
fmull
hlt
imul
stos
sub
pushf
and
push
fldenv
jp
mov
repnz
std
stc
fs
std
in
addr16
dec
mov
cmp
mov
out
lods
mov
mov
data16
test
dec
or
test
mov
xchg
fstpt
cwtl
push
pop
cld
movsb
pop
and
js
data16
dec
lds
mov
sub
jne
sti
daa
jae
test
icebp
cmc
sub
lcall
inc
pop
sti
pop
in
stc
les
pop
mov
inc
or
les
sbb
movsl
int3
lret
lods
or
out
add
cli
fistpl
mov
fwait
xor
fsubrp
scas
outsl
cmp
jno
pop
idivb
jnp
xchg
hlt
push
insb
testl
adc
xchg
lods
inc
es
xchg
outsb
aad
add
sbb
and
add
xchg
iret
xchg
mov
loope
out
mov
adc
xor
or
push
aam
aaa
icebp
arpl
out
push
fnsave
inc
push
loop
repz
mov
aam
les
add
pop
inc
movsl
adc
insl
mov
fildl
pop
sub
jle
fsubl
bound
xor
add
and
cmp
push
int3
mov
jl
notl
sbb
hlt
enter
outsl
stos
call
dec
jne
cmp
mov
in
inc
dec
nop
pop
xchg
xor
cmpsb
fsub
outsl
push
popa
in
popa
pusha
jns
inc
test
std
add
inc
test
rcll
leave
or
test
mov
lock
ljmp
call
pop
leave
aad
sbbb
mov
mov
ja
cli
push
pop
xchg
rcrl
sarl
adc
cmp
cmc
stos
or
add
lods
xorb
push
mov
push
xor
je
pop
sti
cli
xor
xchg
cmp
sbb
shl
sbb
fsts
push
das
pop
fdivr
mov
push
mov
in
pop
jecxz
adc
and
add
mov
adc
push
inc
dec
cli
xchg
outsb
and
hlt
lea
sbb
cmp
aaa
popa
mov
push
call
jbe
dec
ja
aas
repz
adc
cmc
or
in
js
aam
inc
lret
mov
insb
sahf
test
and
jge
push
push
dec
inc
jmp
xor
sub
adc
in
xor
mov
and
push
dec
aam
jecxz
mov
out
pop
and
fistpl
sub
in
fidivrl
xchg
sub
and
sbb
call
mov
les
cs
orb
popl
mov
pop
cmpsl
cmpsb
nop
sub
jl
sarl
mov
jg
fcom
xchg
loopne
cltd
js
pop
fnsave
jno
loope
pop
inc
xchg
jns
mul
stc
cmp
cmc
mov
sub
adc
outsb
test
mov
fdiv
add
js
test
adcl
test
mov
rorl
sub
xchg
int
jecxz
mov
and
jae
sti
jl
shl
mov
fucom
fdivrp
addr16
sarb
pop
stos
inc
ja
or
gs
dec
fs
mov
sub
in
adc
jge
int
arpl
pop
cmc
ds
sbb
sti
push
cmp
or
jecxz
dec
push
js
aas
jg
cli
fnstcw
fidivrs
in
leave
aas
sub
loopne
scas
jno
test
decb
outsb
pop
inc
and
xorb
sub
or
orb
push
adc
gs
and
jnp
shlb
int3
out
mov
cmp
inc
cs
xchg
or
clc
addps
aad
dec
pop
cmpsb
jmp
fsubrl
addr16
pop
xor
dec
lret
in
jae
mov
cld
bound
test
cltd
sbb
imul
mov
movsb
pop
out
mov
lock
cltd
xor
and
mov
test
cmovge
add
fldcw
into
in
test
sbb
repz
js
push
test
outsb
decl
push
inc
pop
mov
dec
adc
cmc
mov
cmpsb
adc
ds
and
xor
jne
push
div
pop
es
sub
popa
pop
jo
fdivs
popf
or
jl
cmpsb
dec
cmp
jb
mov
je
enter
dec
jmp
xchg
pop
pop
inc
lods
jle
fisubrl
mov
iret
add
mov
mov
inc
sbb
pushf
enter
jo
pop
inc
pusha
aam
mov
xchg
les
test
mov
pop
cmpsl
int
push
mov
push
iret
stos
and
movsb
cmpsl
jo
leave
insb
mov
mov
fcoml
or
mov
lahf
test
fwait
push
stc
sub
mov
imul
jg
add
mov
xor
push
sbb
mov
das
vcomiss
loope
fsubr
mov
push
out
push
jmp
dec
xor
mov
xchg
adc
pop
or
xchg
push
jg
pop
and
sub
xor
ss
ss
push
pushf
mov
imul
dec
inc
mov
outsb
pushf
pop
daa
sbb
push
xchg
mov
push
pop
test
pushf
mov
mov
xlat
xchg
pop
cs
aad
add
cltd
pusha
repnz
add
sbb
enter
and
mov
jbe
sar
sub
nop
mov
cltd
insb
adc
inc
mov
add
sbb
inc
mov
std
jle
lret
jo
adc
inc
mov
mov
sub
push
inc
fldenv
icebp
aad
clc
xchg
mov
ds
xchg
fidivrs
mov
push
cwtl
iret
inc
mov
stos
lret
add
test
pop
add
js
inc
sbb
or
or
push
dec
shrl
and
ret
mov
cmp
pop
enter
ret
jb
inc
push
inc
xchg
mov
arpl
inc
or
cmpsl
pop
call
mov
fcmovu
and
imul
sub
fwait
fidivrs
adc
pusha
sbb
pop
sbb
mov
sub
or
shll
in
dec
in
in
add
pop
mov
adc
mov
push
outsl
push
mov
fwait
test
and
jmp
push
xchg
test
push
lock
loope
stos
icebp
cmp
push
aam
jl
lcall
adc
aad
jg
push
mov
cmp
and
mov
add
ds
lods
jp
inc
fsubp
jle
insb
adc
lret
repnz
ret
imul
loop
sub
pop
add
test
cmp
stos
and
out
cli
ret
and
or
inc
lret
mov
into
pop
inc
and
add
push
repnz
inc
add
xor
movl
push
cmp
mov
jnp
mov
loope
aad
jns
imul
xchg
adc
jbe
xchg
shrb
cli
ljmp
xchg
repz
rcrb
filds
and
test
cwtl
pop
and
inc
insb
iret
mov
push
xlat
out
mov
inc
xor
sahf
or
ret
loopne
ljmp
sub
outsb
mov
inc
jecxz
dec
hlt
int
cmp
cmc
out
nop
mov
in
movb
adc
adc
es
cmp
icebp
pop
scas
sub
pop
roll
add
stos
pop
enter
subb
jae
jmp
jne
jno
imul
push
divl
cmp
cwtl
in
inc
cld
ret
scas
xchg
outsl
xchg
cmp
cmp
mov
loop
mov
fidivl
mov
out
jle
sbb
mov
sbb
or
adc
mov
dec
popf
mov
insl
cmp
sahf
xorl
fistpll
lret
adc
add
aam
fcomi
jo
pop
andb
jno
pop
inc
lcall
adc
pushf
cwtl
rcrl
or
rcrb
mov
and
and
mov
shlb
rcll
cmp
aam
cmp
stos
xchg
sbbb
cld
in
ret
pop
mov
std
das
pop
sbb
cld
sub
lret
rolb
lea
data16
nop
aam
cltd
xchg
mov
push
xchg
ss
sub
and
mov
rolb
jnp
enter
xorl
adc
push
push
mov
add
fsubp
jp
lea
lods
incl
sub
call
cmpsl
out
xchg
jp
pop
mov
and
inc
imul
inc
es
andl
dec
and
xor
insl
loope
mov
sub
mov
cmp
mov
xchg
pop
sbb
mov
mov
xchg
pushf
repz
hlt
dec
or
clc
add
les
mov
pop
cmp
shl
jge
push
pop
in
insw
pop
sub
js
leave
or
dec
sub
jg
dec
add
rorl
mov
jge,pt
repz
xlat
or
aas
fisttpl
pop
test
jmp
rcrb
adc
flds
dec
push
rorb
repz
fiaddl
push
push
xchg
aad
jo
mov
lret
sbb
xchg
sbb
std
js
test
inc
bound
les
stos
lcall
dec
stos
rcll
adc
jae
cmc
mov
ret
and
add
mov
push
lret
push
adc
mov
fsubr
mov
mov
sbb
xlat
or
fdivrp
sbb
sbbb
xor
movsl
sbb
jmp
arpl
push
dec
push
and
push
lea
mov
xor
leave
fstpt
inc
sbb
pop
lret
ja
dec
jns
mov
lods
xchg
push
ja
les
cmpsl
dec
orl
into
lea
enter
into
testb
xlat
mov
adc
out
es
mov
dec
mov
xor
aam
out
inc
fs
repz
repz
fsts
outsb
out
fistpll
add
sub
inc
or
pop
inc
jno
cltd
push
aaa
dec
xor
popf
or
jne
pop
adc
push
sbb
and
or
mov
jp
aas
call
push
sahf
test
cli
frstor
and
insb
nop
stos
jo
mov
scas
mov
cmp
mov
pop
jns
insb
imul
cmp
mov
out
xchg
das
mov
sub
xlat
int
jns
or
ljmp
test
loop
mov
push
mov
mov
notl
daa
mov
sbb
mov
pop
mov
xchg
lock
xchg
in
push
call
lcall
xorl
scas
out
push
sbb
mov
lret
and
repz
fnstsw
ret
adc
sti
jle
out
push
adc
jbe
and
mov
negb
scas
xchg
sub
lock
cmpsb
leave
sbb
test
mov
adc
jb
into
xor
repnz
fidivrl
and
jecxz
xchg
mov
icebp
jno
sbb
mov
div
pop
daa
lret
mov
lock
xchg
jge
adc
cs
inc
fwait
into
add
mov
aaa
inc
and
xchg
add
fidivl
cmpsb
xchg
push
or
or
mov
mov
sbb
repz
xchg
jecxz
outsl
arpl
enter
or
sub
arpl
inc
ljmp
repnz
sub
jns
cmp
inc
or
inc
pop
out
ret
sub
and
sub
sbb
pop
or
inc
test
ds
push
ss
movsl
out
stc
push
iret
jmp
jno
in
jnp
and
dec
leave
inc
je
in
mov
arpl
icebp
sub
ja
loope
mov
dec
lock
jns
repnz
sbb
dec
xor
aad
shl
xor
cmp
popf
cmp
movsl
addr16
cmp
inc
mov
pop
cmpsb
data16
mov
dec
jp
stos
xor
rorl
call
cmp
ret
fsubp
dec
pop
aaa
outsl
push
mov
push
inc
mov
pop
pushl
imul
inc
push
jns
adc
hlt
dec
rolb
inc
xor
ljmp
rolb
lods
loopne
lea
jle
xchg
frstor
fwait
lret
hlt
lods
mov
or
xor
aam
push
jbe
xor
pushw
jno
or
cmp
fsubrs
lahf
pop
ficompl
mov
push
movsb
movsb
xchg
inc
insl
mov
fisubs
repnz
push
dec
insb
les
je
mov
scas
fwait
pop
mov
cmp
imul
mov
cli
call
mov
pop
jge
push
nop
and
stos
popa
out
mov
test
out
jae
shrb
and
jp
dec
sahf
in
dec
movsl
sbb
bound
add
mov
sub
jmp
add
sub
adc
ret
dec
movsl
adc
les
push
stos
imul
push
in
lcall
int
negl
push
shrb
push
or
shrb
mov
js
pushf
or
push
inc
jp
cmp
mov
mov
sbb
outsl
xchg
mov
popa
bsr
cld
xor
xor
inc
push
stc
out
les
cmp
subps
loope
lods
ss
test
inc
je
mov
pop
xchg
or
adcb
pushf
sub
adc
jp
icebp
imul
insl
xor
cmc
popf
ljmp
imul
jbe
std
xchg
sahf
mov
mov
and
inc
in
popa
call
lock
pop
xchg
hlt
push
fwait
mov
lods
and
out
mov
xchg
pop
ficompl
hlt
arpl
pop
adc
jecxz
test
mov
call
push
in
outsl
xorb
mov
dec
pop
pop
sbb
ljmp
in
xchg
and
xchg
dec
mov
jnp
mov
mov
pop
stc
or
lahf
dec
outsb
xor
and
cs
fldenv
mov
es
movsl
fildl
mov
sbb
test
dec
les
mov
test
push
sub
mov
sbb
rorl
pop
hlt
daa
add
xor
addr16
pusha
lret
rcr
bound
pusha
inc
imul
adc
addr16
outsl
in
aas
movsl
mov
or
inc
imul
xchg
sarl
cmp
sbb
sub
pop
xchg
xchg
jmp
repz
mov
cltd
pop
sbb
jp
scas
iret
aas
jmp
les
pop
mov
lock
in
mov
mov
mov
inc
mov
dec
std
add
int3
jecxz
mov
jne
outsl
mov
sbb
pop
dec
and
jo
xchg
gs
inc
ljmp
add
hlt
mov
jg
stc
notl
test
xor
add
sbb
int3
test
xchg
inc
stos
push
in
jge
test
aad
inc
repz
call
pop
dec
mov
jbe
repz
sbb
pushf
or
andb
sub
jb
mov
test
sub
outsl
adc
sbb
sbb
repz
add
loopne
in
sub
lods
cmp
mov
clc
mov
test
lds
jnp
nop
in
cli
call
sbb
out
imul
fnstsw
mov
rcr
ljmp
jb
jae
and
scas
call
outsb
xchg
xlat
push
lret
mov
push
sub
lods
adcb
xchg
adc
xor
pop
stc
pop
pop
cld
lahf
jmp
lods
fmull
mov
jmp
hlt
cmc
lods
out
fisttps
cwtl
jo
adc
mov
adc
push
cwtl
dec
ljmp
mov
inc
xor
xchg
das
inc
hlt
dec
sbb
add
xor
mov
lret
ljmp
inc
movsb
dec
ret
test
repnz
and
pop
bound
shlb
hlt
jp
dec
lea
pusha
pop
push
xor
mov
jne
loope
popa
addr16
mov
cltd
hlt
cltd
sub
insb
icebp
adc
daa
pop
jge
xor
inc
ror
loopne
mov
adc
adc
ret
jp
std
or
fwait
mov
gs
push
adcl
xor
mov
mov
pop
test
adc
repz
pop
icebp
and
inc
rol
insb
shrl
ds
xor
das
shlb
shlb
sub
sub
popa
dec
add
icebp
cltd
out
fsubp
in
xchg
jae
adc
or
sbb
or
addb
adc
negb
test
into
sbb
js
loop
mov
sbb
gs
les
stc
les
pop
subb
rorb
out
lea
rorl
cltd
jecxz
repnz
test
fidivrs
jo
ljmp
sti
xchg
cld
dec
daa
shlb
push
bound
or
roll
icebp
outsl
xchg
out
cld
jo
mov
js
lret
insl
nop
enter
fbstp
shll
addb
push
mov
outsl
sbb
xor
jns
int3
or
cltd
arpl
xor
sbb
inc
je
xchg
adc
aaa
and
popf
and
popf
and
adc
fs
mov
add
sub
rcrl
movsb
cmp
das
or
loopne
aas
popa
cmp
mov
dec
mov
ljmp
add
out
sbb
rorb
fucom
cmpb
test
xor
out
addr16
xchg
dec
sarb
cmc
stos
enter
shlb
mov
popf
xchg
dec
push
mov
mov
push
adcl
ret
inc
pop
and
lock
mov
shl
cmp
mov
jns
push
jnp
cmp
jnp
nop
pop
jbe
outsb
xor
cld
cmc
js
in
mov
jno
mov
ficoml
adc
mov
adc
shr
sbb
popa
mov
fwait
shrl
loope
dec
mov
and
add
xor
mov
and
add
sbb
mov
aad
or
inc
les
xor
jge
push
adc
pop
adc
mov
out
jns
imul
dec
and
cli
sub
or
sbb
int
push
sub
aaa
pop
push
jg
push
cwtl
xlat
or
adc
or
andb
adc
sub
hlt
outsl
xchg
or
jne
cwtl
sub
pop
out
int
add
stos
pop
mov
push
xor
or
out
ds
mov
add
add
mov
lcall
js
mov
xchg
movb
idiv
and
repnz
dec
das
adc
aad
adc
dec
js
aas
adc
dec
pushf
add
add
in
movsl
push
push
pop
pop
ret
insl
jp
dec
pop
pop
xor
int
lahf
pop
xor
jle
ffreep
clc
mov
iret
lret
xorb
sbb
out
sbb
icebp
jns
cld
pop
push
daa
mov
mov
push
and
sub
jb
jns
jns
test
and
je
sub
stc
test
jle
neg
and
aas
dec
sti
pop
push
test
stos
cmc
pop
mov
push
rcrb
lds
aad
movsl
and
std
mov
lock
mov
and
adc
mov
push
decl
call
call
dec
jl
sbb
mov
add
push
mov
cmpsl
mov
add
aad
adc
movsl
nop
fsubl
mov
pop
in
fnstcw
gs
insl
cmp
sub
in
and
inc
mov
stc
jecxz
inc
outsb
imul
lret
push
out
stc
pusha
mov
add
sub
mov
xlat
fstpl
mov
aam
loop
bound
adc
stc
ret
adc
push
pop
cmp
mov
xchg
push
mov
mov
xor
movsb
and
insb
pop
andl
mov
fwait
mov
in
ret
mov
dec
sahf
shll
stc
xor
inc
jmp
bound
inc
sbbb
mov
xchg
insb
xlat
inc
and
rorb
gs
adc
push
lods
pop
popa
lret
lahf
xor
je
pop
mov
dec
js
leave
mov
int3
outsl
sbb
add
sbb
xor
sbb
addr16
stos
sti
inc
jle
inc
stos
into
mov
jno
out
and
or
ljmp
bound
adc
movsl
scas
xor
cmpsb
or
idiv
push
and
iret
lcall
sbb
pusha
adc
jbe
mov
fwait
leave
leave
xlat
movsb
sub
xor
aad
jecxz
or
mov
rorb
mov
scas
mov
and
adc
scas
xor
pop
push
jge
fs
mov
adc
jmp
cmp
jae
loope
in
fisubrs
ficomps
imul
jecxz
inc
cmp
mov
inc
or
outsl
fs
jg
sub
inc
jo
lds
pop
mov
mov
sbb
test
sbbb
daa
insl
mov
arpl
pop
jle
testl
pop
arpl
jge
push
xchg
inc
leave
jbe
mov
insl
mov
push
mov
mov
arpl
sbb
jb
adc
loope
pop
add
pop
nop
repnz
cmpsl
pushf
cmp
mov
mov
and
lret
pop
sar
push
jbe
int
loope,pt
push
jbe
or
mov
mov
cmp
dec
jle
mov
inc
rcrb
mov
cmp
xchg
ds
in
push
xchg
call
push
aam
jb
stc
xchg
mov
aas
adc
shl
mov
inc
add
jo
and
adc
fsubp
arpl
xor
int3
jecxz
aas
shrb
mov
mov
sub
pop
add
pop
iret
push
mov
mov
mov
fdivl
and
push
sub
cmp
rcll
jg
sbb
jmp
push
and
loopne
in
das
ja
jno
inc
shlb
lock
shr
pop
int
adc
cmc
ja
iret
xorb
xchg
cld
push
lods
leave
xchg
pop
inc
dec
daa
js
mov
repnz
or
shl
or
sub
push
pushf
sub
ret
push
jne
popf
push
andb
push
stc
lahf
pop
lds
jo
shlb
movsb
cmp
sub
inc
dec
sbb
and
mov
fiadds
mov
lea
jp
cmp
jp
and
cmc
hlt
mov
fstl
push
jnp
dec
pop
or
mov
rcll
test
in
ret
orb
bound
mov
scas
shlb
jns
int3
lods
push
ds
loop
pop
into
mov
out
mov
fdiv
test
enter
lret
mov
ljmp
cmp
xchg
push
sub
mov
nopl
aam
push
lods
dec
sub
adc
mov
iret
es
sbb
sbb
iret
ljmp
mov
out
jo
jg
push
jg
jle
repz
xor
addr16
dec
mov
mov
ja
cmp
xor
push
mov
cmp
xchg
mov
dec
jecxz
lret
mov
cmp
es
bound
sub
hlt
bound
push
push
xchg
jg
xchg
xchg
push
inc
sub
lret
adc
push
jne
mov
xlat
sub
dec
and
roll
ret
xor
cmp
pop
je
push
mov
out
cltd
jmp
scas
xor
xchg
sbb
add
dec
bnd
in
inc
imul
xor
ss
mov
loopne
push
scas
sub
ja
mov
dec
cmp
pop
dec
mov
sbb
jp
or
xchg
loop
adc
mov
cmpsb
sub
shrb
dec
in
mov
shll
push
fistpl
ljmp
pop
mov
jno
pop
mov
lea
outsl
push
outsb
and
fsubrs
jne
cmp
cmp
inc
insb
jbe
dec
test
sbb
and
out
mov
jge
cmc
call
jne
out
fbld
or
push
mov
push
cmp
inc
mov
pop
mov
add
ja
sar
je
mov
outsl
add
test
fwait
sahf
in
test
mov
ret
add
fdivr
xorb
lret
push
les
mov
cmc
jno
cli
push
xor
mov
xor
je
inc
push
pop
mov
jl
rcr
jne
or
adc
ds
cwtl
inc
xor
mov
add
aaa
test
pop
jmp
mov
mov
loop
xor
sub
and
mov
sbb
pop
jbe
std
fldenv
in
leave
dec
mov
inc
xchg
cmpsl
mov
test
fimuls
adc
stos
int
shll
dec
adc
jmp
pop
ja
push
out
inc
fisubs
cmp
push
pop
mov
jo
inc
scas
insb
xor
cmp
push
and
jp
or
dec
inc
xor
loop
xor
movsl
push
cmp
cmc
xor
shr
daa
push
addb
push
inc
jg
sub
mov
adc
sahf
adcl
pop
jmp
adc
nop
aad
pop
ret
incb
adc
xchg
sbb
test
and
push
pusha
cmp
push
adcb
add
jb
push
mov
addr16
icebp
or
mov
imul
out
nop
pop
std
sahf
addr16
jne
leave
sub
and
cltd
cmp
sub
inc
xor
and
add
rcl
adc
or
add
push
and
cmp
xor
fidivrs
push
arpl
pop
mov
out
mov
daa
int3
ss
push
divb
xor
test
movsl
jmp
xchg
fs
sub
push
xchg
pop
cltd
adc
jbe
pushl
es
cmp
cld
add
shlb
pop
ds
push
loop
adc
xchg
jnp
xchg
iret
mov
mov
sbb
and
outsl
flds
xchg
cmovae
icebp
push
js
jge
imul
dec
xchg
std
xor
jno
jle,pn
enter
test
and
jmp
aad
aad
mov
jno
data16
in
and
or
mov
push
inc
test
xchg
ja
and
sbb
movb
stc
lds
xchg
cmp
mov
scas
popf
out
imul
xchg
stos
or
rolb
pusha
jno
mov
jl
cmc
sbb
push
dec
push
rcrb
push
and
cmp
xlat
int3
xchg
lret
fnsave
mov
shl
adc
push
mov
add
div
fistpll
insl
xor
xchg
cmp
and
imul
jnp
xadd
cmp
stos
mov
inc
mov
and
pop
clc
dec
loop
cltd
aas
loopne
cmp
hlt
fsubp
sarl
add
add
mov
gs
sahf
xor
mov
or
cltd
gs
jae
mov
push
in
rcr
call
add
dec
lock
inc
cmpsb
icebp
xor
mov
push
addr16
mov
insb
movsb
dec
mov
cmpsl
or
or
or
fcompl
mov
notb
lcall
aad
jo
push
pop
mov
sub
or
mov
xor
aas
pop
in
ljmp
pop
mov
mov
lods
mov
xchg
mov
jnp
sbb
popa
in
xchg
cmp
pop
or
dec
out
daa
dec
xor
shr
fstl
mov
adc
mov
and
mov
jecxz
mov
icebp
xchg
incb
mov
dec
ljmp
push
out
xchg
lahf
sbb
push
fstp
subl
ds
xor
call
repz
adc
mov
mov
pop
inc
pop
adc
xor
roll
jl
outsb
xorb
ret
fs
or
add
jge
mov
in
pop
notb
into
cmpsb
inc
scas
xor
push
aaa
aaa
push
mov
sbb
jns
iret
jnp
repz
out
xchg
mov
ss
rorl
jg
push
push
jb
mov
fisttps
mov
pop
or
aam
lcall
inc
xchg
add
lret
stc
mov
test
dec
jae
es
push
lds
sub
data16
mov
jbe
insb
jmp
lret
pop
insb
push
dec
outsb
lock
iret
cmp
push
push
loope
cmp
sub
loop
or
dec
addb
loopne
jnp
cmc
andb
mov
stos
fnsave
mov
js
fidivrl
ljmp
adc
out
or
push
push
jp
movsl
mov
push
jg
popf
xchg
loop
pop
jp
mov
xchg
jns
shlb
lret
das
ud1
test
mov
fistpl
movsb
lret
arpl
pop
sub
pop
out
push
jnp
sub
xor
xchg
cwtl
bound
sti
and
inc
add
jl
mov
jp
lret
in
jg
outsl
mov
mov
jle
mov
into
sbb
subb
jae
xchg
out
jp
xorl
xchg
stc
ja
mov
sbb
mov
enter
push
les
sbb
std
push
cmp
loopne
movsb
out
xchg
or
lods
stos
pop
ret
add
outsl
loop
pop
adc
sub
jbe
mov
into
mov
stos
sbb
sub
mov
rcll
sub
sbb
mov
adc
adc
stos
jmp
jecxz
mov
push
hlt
cmp
mov
mov
and
out
mov
sub
and
jo
jb
xchg
dec
xchg
dec
mov
push
daa
sbbl
xchg
jb
in
les
sbb
xor
out
arpl
inc
pop
push
pop
mov
cmp
sub
out
dec
sub
addr16
inc
push
les
mov
xor
adc
xchg
mov
lods
lcall
mov
mov
arpl
pop
daa
adc
lcall
mov
orps
mov
inc
jbe
cli
adc
xchg
clc
leave
and
stc
xchg
add
call
in
sti
shrl
add
cmp
mov
sub
jle
in
insb
cmp
mov
leave
xchg
adc
cmp
dec
sub
or
jge
cli
les
out
push
inc
mov
bound
lods
mov
add
inc
sbb
mov
fs
mov
push
add
lret
sbb
lahf
fisttpl
lods
out
sub
xor
cmpb
scas
jle
and
inc
inc
lods
push
loop
call
adc
cmp
stc
cmpsb
mov
push
in
stos
push
xchg
fmull
sbb
fs
mov
add
or
sbb
xchg
mov
lcall
cmc
and
cmp
jge
inc
aaa
mulb
xchg
xor
cmp
adc
jl
sbb
cltd
jns
ficoml
call
sub
or
inc
aas
bound
mov
pop
sbb
xor
cli
test
xchg
mov
cwtl
out
cmc
xchg
or
or
repnz
call
pop
push
xchg
pop
shlb
shr
push
out
es
cltd
add
pushf
cmp
mov
es
mov
aas
cmp
xchg
adc
je
and
fcom
leave
sbb
cld
rcrl
or
sbb
and
pop
fldt
add
adc
push
loopne
outsl
movsl
int3
cmpsl
inc
jno
cmp
lret
je
out
repz
xchg
ret
cmp
mov
push
jne
repnz
mov
jg
cld
ret
jmp
mov
test
jp
imul
aaa
inc
jae
mov
mov
dec
je
data16
cmc
xchg
mov
and
sbb
mov
mov
add
popa
dec
inc
cmpsb
sbb
repnz
fsubp
xor
fsubs
les
push
test
dec
pop
adc
mov
es
aas
js
xchg
in
popa
push
and
pop
mov
enter
in
sbb
out
pop
fisubs
jge
call
push
or
cwtl
push
inc
addr16
xchg
xor
xlat
fistpl
cmp
xchg
nop
dec
les
cs
cmp
mov
je
cltd
lods
xor
pop
icebp
jo
cmpb
movups
xor
xchg
xor
inc
dec
das
in
adc
mov
lret
test
adc
sti
cltd
rorb
leave
xchg
push
and
incl
sbb
lcall
jge
push
mov
and
pop
in
bound
sbb
mov
es
popa
mov
stos
out
add
pop
sahf
pusha
mov
mov
out
cmpsb
rorb
fldl
cmp
in
cmp
mov
clc
stc
stc
clc
mov
and
hlt
ds
loope
or
into
pop
into
xor
push
shrb
and
jg
sub
xchg
outsl
mov
jo
popa
mov
lret
mov
loop
cmpsb
dec
mov
push
xchg
stc
lods
int3
int
orl
mov
test
xor
dec
aad
cmp
jo
mov
scas
mov
in
sbb
xchg
dec
outsl
or
enter
mov
or
mov
jg
sub
hlt
and
hlt
mov
insb
mov
xlat
add
xchg
and
dec
insb
xor
mov
cld
mov
inc
add
into
pusha
xor
cmp
cmovg
ja
popf
shrb
flds
fadd
test
sarb
mov
push
repz
inc
pusha
mov
xorl
sbb
dec
xchg
daa
in
add
out
popa
xor
sbb
hlt
cmovbe
cld
or
mov
sub
add
lcall
loope
jmp
pop
test
pop
jo
ret
scas
pushf
shr
std
aam
test
pushl
and
push
push
int
dec
push
es
seto
push
mov
jecxz
mov
jns
xchg
stc
push
pop
mov
ja
mov
ljmp
xlat
fs
mov
lret
mov
lods
out
inc
jne
fsubl
pop
mov
sub
jo
lcall
jns
imul
fdivp
daa
stc
scas
sub
scas
push
loope
loope
dec
mov
mov
sbb
xchg
adc
iret
mov
sti
adc
jle
in
andb
pop
fwait
push
test
or
sbb
pop
pop
mov
outsl
push
mov
shll
jp
clc
cmp
sarb
fiadds
inc
cmp
add
add
daa
lods
pushf
inc
lea
outsl
aam
out
pop
mov
jg
aaa
test
mov
in
lds
movsb
dec
leave
test
inc
mov
push
loope
mov
les
imul
push
in
ja
xchg
testl
out
sbb
hlt
out
rep
mov
adc
mov
mov
cli
test
or
jns
and
outsl
daa
scas
add
adcb
jae
xor
adc
mov
out
pop
adc
or
sbbl
mov
ret
stos
mov
sub
push
lret
mov
and
test
pop
pop
xor
imul
pushf
pop
jecxz
out
mov
mov
inc
cmp
add
pop
adc
adcl
cmp
outsb
xor
jge
lods
aas
inc
pop
popf
call
xor
xchg
pop
and
outsb
or
jg
leave
push
popf
adc
push
cwtl
fldln2
sbb
mov
es
mov
loop
mov
lret
lret
pop
nop
inc
mov
xor
fldl
dec
movsb
mov
add
enter
shll
insl
out
xor
pop
mov
jnp
and
fwait
sub
xchg
jge
sbbl
mov
aas
mov
leave
call
add
in
and
xchg
nop
xor
xor
cld
lahf
idivl
jo
ds
cmpsb
push
sbb
adcl
push
jb
ss
jae
sbb
das
inc
jo
cmp
jae
faddl
inc
sub
test
pop
out
fdivl
loope
push
or
fimull
stos
dec
xchg
loop
adc
lea
mov
lock
pop
mov
in
cmovs
sub
cmp
fsub
flds
mov
inc
bound
mov
ja
pop
fists
add
out
scas
loope
aaa
adc
es
mov
pop
dec
rep
cli
jle
fisttpl
ljmp
dec
xor
jbe
inc
sbb
test
scas
dec
pusha
dec
in
mov
pop
imul
fcoms
cld
test
sbb
movsb
sbb
scas
mov
jnp
push
negb
push
std
lods
and
dec
cld
popa
test
jns
clc
mov
pop
xor
mov
dec
and
add
lahf
sar
insl
adc
mov
push
inc
mov
jp
jge
or
jge
cmp
dec
jo
push
adc
pop
sbb
push
in
in
push
loopne
out
sbbl
adc
sarl
and
lock
cli
jns,pn
mov
fisubs
sti
xchg
ret
mov
pop
inc
and
clc
mov
pop
push
add
inc
xor
in
inc
scas
jno
cli
rcll
popa
dec
lods
inc
mov
sbb
and
ret
sub
mov
sti
ret
imul
mov
and
pop
aaa
test
dec
cmp
in
daa
rcl
jg
dec
shl
or
push
mov
adc
in
inc
dec
xor
cs
lea
js
fisttpll
in
pop
mov
cltd
fnsave
sub
arpl
lea
popa
jl
fcomp
push
mov
or
jbe
imul
cltd
and
aas
icebp
andl
sbbl
stc
aam
cltd
cmp
sarb
cmp
lock
jl
push
or
bound
add
je
xor
rorl
and
xlat
pop
inc
and
cmpsl
xor
dec
push
inc
mov
fcoml
cvtps2pi
inc
jle
out
pop
jge
mov
test
mov
nop
inc
sub
adc
aad
adc
inc
and
jecxz
fidivrl
lahf
mov
arpl
xchg
dec
mov
repnz
andl
cmp
xchg
push
out
mov
fsub
sbb
loop
sub
jg
jmp
int3
jae
fnstsw
addr16
out
int3
mov
fsts
mov
ret
daa
cli
adc
add
xchg
push
cmp
mov
adc
cli
sti
gs
cmp
insb
mov
sarl
mov
push
inc
adc
xchg
mov
es
cld
in
fsubr
dec
xor
aad
loope
leave
arpl
data16
push
push
jge
mov
imul
push
sub
test
mov
cltd
inc
out
sbbb
popa
sub
inc
lea
and
stc
inc
jne
adc
mov
lret
xor
adc
stos
add
jno
mov
clc
shll
cmp
ret
andb
sahf
jne
out
int
lcall
in
addb
lds
daa
xorl
loop
xor
jg
adc
add
ficoms
dec
vcvtpd2psx
push
xchg
jno
sub
faddl
mov
adc
jns
xchg
mov
xor
or
jns
scas
or
or
jle
push
leave
mov
push
es
cmc
imul
subl
add
and
push
sbb
adc
fisubs
push
cmp
repz
xor
aam
fnsave
insb
dec
adc
popa
in
adc
or
aam
lods
pop
pop
jne
mov
lods
jo
sbb
adc
mov
mov
push
and
cmp
insl
dec
xchg
cltd
jg
xor
dec
or
lret
nop
dec
mov
sbb
pop
mov
shll
js
rolb
gs
add
ja
mov
into
adc
pop
pop
mov
rolb
out
xchg
dec
stos
sub
cmp
push
sti
into
ljmp
sub
push
loope
cli
jns
xchg
jno
dec
xchg
daa
repz
pop
jne
xor
add
add
adc
xor
lock
or
das
mov
stos
fnstenv
pop
or
je
sub
mov
jne
cltd
out
push
sub
icebp
out
sbb
adc
push
cwtl
xchg
pop
pop
pop
out
push
addb
mov
lock
lahf
or
sahf
inc
dec
cmp
mov
mov
in
mov
popa
aad
sbb
adc
inc
dec
add
ret
scas
cwtl
mov
mov
pop
lret
pop
cli
stos
jns
inc
das
xor
outsl
jbe
mov
gs
shlb
push
movsl
and
mov
push
add
mul
cmp
cltd
pop
pop
lret
int
sbb
iret
fucomip
hlt
into
in
imul
jae
jb
inc
cmp
and
mov
adc
dec
insb
xchg
sub
negb
test
fcmovnbe
ljmp
std
xchg
pop
add
sbb
je
jl
mov
and
lds
faddp
cs
xchg
fstl
repnz
or
testb
leave
push
sub
rorb
mov
jecxz
data16
sub
and
bound
ficoms
in
xchg
and
negb
jmp
enter
xchg
rolb
jnp
adc
push
lock
cmpsl
lahf
xchg
insl
lahf
sub
daa
and
movsl
movsb
or
dec
mov
xchg
inc
rcl
pop
and
push
test
jae
into
out
mov
mov
movb
cmp
aas
and
cmp
xorb
add
aam
xor
mov
xchg
jecxz
or
sbb
ds
xchg
push
xchg
mov
scas
inc
sahf
sub
pop
xchg
inc
incb
loop
dec
mov
push
pop
insb
stos
daa
jo
loopne
je,pn
cmp
add
adc
ja
test
shrl
push
push
fadd
mov
mov
aaa
add
xchg
pusha
dec
out
shlb
mov
pop
add
dec
fs
iret
xchg
adc
push
arpl
xchg
outsb
dec
out
dec
ss
inc
pop
nop
jno
cwtl
add
inc
sbb
dec
hlt
mov
pop
mov
pcmpeqb
rcrb
adc
mov
push
fldt
ljmp
and
cmp
push
mov
adc
fmulp
dec
pop
fdivrp
rcrl
pop
adc
or
cmp
test
mov
jb
scas
push
jnp
push
loop
mov
daa
mov
cs
fistpl
call
and
lahf
mov
or
mov
stos
cmc
sbb
pop
adc
test
push
or
cmpsb
sub
xchg
bnd
mov
pop
addl
and
xor
mov
jl
xchg
adc
dec
and
roll
loope
xor
cmp
sub
cmp
sbb
cmc
ds
inc
sar
add
lret
adc
jno
dec
rcl
add
push
adc
cmp
xor
out
mov
sub
fcomp
into
insb
dec
adc
mov
cli
xchg
mov
pop
push
xchg
outsb
sti
scas
jo
fcomps
fistpll
or
loope
xchg
daa
out
into
les
das
xorb
pop
mov
pop
test
loope
ficompl
jl
mov
mov
sub
dec
jae
aam
push
xchg
popf
out
in
lods
repz
addr16
data16
xor
xchg
inc
fcoml
bound
out
out
inc
loope
scas
xchg
scas
push
add
pop
or
cmp
mov
shl
dec
mov
in
xchg
mov
push
cmpsb
inc
push
sbb
mov
inc
dec
jne
mov
and
rorl
jmp
imul
js
mov
mov
push
mov
pop
or
arpl
repnz
jae
mov
push
xor
xlat
call
xchg
std
dec
cltd
not
sub
pop
test
jno
pop
sbb
fimuls
int
mov
pop
cmp
ljmp
scas
dec
mov
loope
in
sahf
add
fiadds
bound
dec
mov
les
in
add
andb
popa
xor
int3
cmc
adc
push
dec
insb
cltd
je
jmp
fsts
cwtl
adc
add
add
pop
and
pop
stos
sub
pop
loope
nop
push
ja
out
roll
shlb
lahf
mov
ficompl
fidivrs
decl
testl
xchg
xor
jmp
scas
fists
sbb
inc
sbb
popf
xor
outsb
push
sub
mov
loope
addl
mov
inc
stos
pusha
adc
sbb
adc
pop
sub
in
ljmp
lods
cmp
movsb
xchg
out
scas
stc
lahf
inc
xchg
sbb
mov
adc
cmpsl
movsl
cmp
je
sub
jae
mov
cmp
sub
ja
mov
lds
xchg
fsubr
fsubrp
in
mov
lods
dec
mov
js
xor
xchg
mov
imul
jecxz
daa
ljmp
pushf
jmp
sbb
cwtl
or
arpl
sub
loope
xor
lods
or
and
fs
pusha
xchg
mull
icebp
stos
sub
ljmp
nop
out
ret
repz
or
int3
les
add
leave
cmpsb
push
mov
mov
sbb
mov
lea
outsl
pop
addb
out
pop
clc
scas
sbb
in
adc
test
or
sub
daa
xchg
pop
outsb
mov
out
imul
call
fildl
int3
sarb
outsl
add
ret
inc
fldenv
test
push
pop
ja
sub
lret
jmp
add
xor
adc
out
inc
inc
dec
loopne
jl
mov
mov
mov
add
fdivs
adc
jle
jmp
sbb
mov
jge
test
pop
emms
lods
sbb
sbb
and
das
xor
fldcw
fdivl
jno
push
mov
sahf
imul
in
sbb
mov
pop
in
jge
imul
jecxz,pn
cmpsl
or
mov
mov
jns
stos
out
xor
mov
fistl
mov
inc
jle
mov
enter
lea
sti
add
mov
xor
pop
xchg
lret
int3
imul
repnz
cmp
push
dec
jl
and
test
jae
cs
arpl
or
popa
xor
outsb
xor
xchg
mov
in
fstl
scas
jae
stos
jns
jno
mov
push
scas
jnp
repz
popa
pusha
mov
jmp
mov
shrb
or
jo
jne
xchg
and
or
cmp
mov
cltd
mov
dec
jle
jp
push
pusha
sub
xor
mov
mov
shl
push
push
movsl
mov
lods
test
out
mov
adc
xor
push
push
out
sbb
sti
or
lds
je
sbb
inc
sti
daa
loop
push
inc
sbb
push
mov
out
jnp
pop
into
pop
mov
mov
push
or
cmp
imul
aad
test
and
lret
xlat
xor
call
sbbb
loopne
or
cmpsl
cmp
adc
mov
mov
mov
pusha
dec
stos
test
pop
cmp
jo
dec
out
sarb
sbbl
dec
xchg
cwtl
lret
dec
add
into
sub
mov
jae
xor
pop
cwtl
aam
in
lock
mov
jae
les
lea
das
inc
ds
dec
test
or
subl
rorb
adc
shll
jge
jbe
je
rol
xor
mov
add
inc
mov
lock
stc
lcall
popf
movsb
push
dec
out
mov
push
and
pushf
lea
imul
push
push
cvtdq2ps
std
adc
sbb
and
das
xor
out
roll
add
jno
cmc
les
sub
mov
jb
push
sub
cmp
out
inc
icebp
push
push
imul
lret
mov
leave
bnd
mov
sahf
inc
das
mov
add
lds
pop
adc
jo
outsb
bound
cmp
daa
push
rol
dec
jecxz
aas
rol
push
testb
cmc
sti
xchg
shr
in
jg
cmp
pop
xor
lret
push
adc
inc
jle
cmpl
ror
mov
sub
rcr
mov
adc
orl
jle
movsb
cs
mov
jb
test
jae
fisttpll
je
mov
ror
jno
adc
xlat
and
cmpsb
lock
shrb
aam
les
push
sbb
sbb
ss
mov
dec
lret
pop
pop
cmp
push
inc
fcmovu
push
lock
gs
mov
sbb
jmp
sbb
mov
aad
iret
push
push
push
pop
sub
push
mov
adc
repnz
pop
xchg
ret
dec
adc
shl
flds
mull
cmp
sub
xor
lods
and
ret
in
filds
test
pop
fchs
popa
sbb
and
xchg
aad
lods
jl
xchg
inc
adc
fnstenv
and
cmp
aam
gs
pop
fildl
or
jae
push
xchg
lret
xor
addr16
scas
inc
push
cmp
insl
xchg
and
mov
mov
adc
gs
pop
in
dec
fsubrp
fwait
mov
std
sbb
aad
cltd
inc
dec
inc
loope
lock
daa
mov
rcl
das
clc
jbe
adc
aaa
notb
inc
cmc
sub
enter
jecxz
push
push
or
scas
cmp
push
popa
xchg
mov
stos
hlt
fidivrs
sub
add
pop
push
bound
inc
shrb
das
sbb
dec
leave
mov
mov
jnp
cmp
and
fmull
dec
pxor
loopne
xchg
xor
cld
pop
cmp
aas
pop
pop
push
maskmovq
int3
sub
or
mov
rcrb
pushf
sub
dec
hlt
pop
cwtl
adc
add
pop
jge
push
inc
pop
call
dec
cmp
pushf
xor
and
inc
lds
cmc
bound
call
addr16
mov
adc
cmpsl
and
mov
add
loop
mov
sbb
popa
imul
inc
mov
mov
jecxz
ret
and
xchg
mov
lock
es
es
cs
data16
adc
icebp
cmp
sbb
aam
mov
push
jnp
add
xor
scas
jbe
push
and
pop
jl
sbb
icebp
scas
and
mov
repz
mov
pop
movsl
scas
and
inc
adc
stc
inc
jecxz
xchg
pusha
push
or
mov
push
leave
rol
xorl
stos
mov
add
cmpl
movsl
outsb
lahf
sub
cltd
mov
movsl
popa
sub
lret
sbb
loop
mov
js
int
adc
mov
cmpsl
ret
movb
and
jecxz
fistpll
sub
dec
stos
push
cmp
xor
dec
or
aam
adc
add
xchg
stc
repz
insb
dec
cmc
hlt
push
xchg
inc
fcmovu
stos
adc
and
negl
add
push
loop
adc
push
aam
call
pop
mov
push
or
xchg
out
and
adc
xor
hlt
fcomp
and
cmp
pop
adc
pop
out
lahf
je
xor
stos
aas
enter
pop
lds
lahf
imul
fistpl
push
cmp
and
adc
or
pop
int3
xchg
sbb
fndisi(8087
shll
scas
mov
push
push
xorl
fmul
fwait
sub
mov
stos
add
inc
push
gs
jmp
mov
lcall
xchg
sbb
cltd
stc
leave
adc
push
add
movsl
push
out
push
sarl
pop
mov
adc
sub
jge
jbe
loope
lret
das
test
adc
dec
cltd
rclb
lods
mov
pop
sub
gs
cli
stc
loop
add
sbb
aad
ja
mov
aad
out
cmp
mov
sbb
add
adc
and
std
mov
das
into
pop
loop
jno
sub
gs
xchg
ret
jb
out
xchg
int
cmp
jecxz
cld
mov
push
int
ds
mov
sub
lock
add
push
xor
sbbb
inc
lahf
mov
ret
xchg
in
cwtl
mov
mov
inc
jg
sbb
fsubrl
popl
push
push
add
dec
xchg
shrb
aas
xchg
mov
xor
arpl
dec
fildll
test
idiv
push
pop
outsl
lret
xchg
add
push
sub
loop
int3
stos
movsl
push
scas
imulb
xchg
call
sbb
add
pop
adc
and
fistl
jns
aaa
and
dec
adc
pslld
dec
jae
ss
xor
pop
sbb
and
add
xor
fidivrl
adc
cmp
movl
xor
jmp
cwtl
out
fadd
jns
inc
jns
in
insb
jge
add
test
outsl
loope
xor
addr16
adc
jne
inc
cmp
hlt
dec
pop
andl
les
jmp
stos
dec
xchg
cld
xchg
lock
inc
stos
push
ss
inc
insb
push
push
ja
dec
stc
adc
add
mov
cwtl
movsb
pop
movsb
stos
aad
inc
push
aad
push
and
loop
mov
imul
imul
into
loope
sbb
push
adc
lods
addr16
jo
push
jbe
mov
xchg
mulb
mov
vpsadbw
jbe
sub
es
sub
jno
adc
jp
push
fcmovb
cmc
inc
rcll
inc
lret
xor
das
sti
and
inc
inc
adcb
stos
mov
lret
xor
data16
mov
or
jb
xor
ljmp
sbb
js
shll
cmp
mov
or
cmp
lods
jnp
loope
jmp
jns
ret
mov
push
push
mov
data16
adc
cwtl
sti
jmp
daa
fidivs
xchg
mov
lahf
mov
pushf
xchg
loop
xor
shr
or
cmc
mov
stc
aas
inc
lock
in
xchg
mov
les
jbe
ret
cmpl
lret
repnz
sbb
scas
outsb
shl
dec
mov
mov
insl
dec
dec
add
call
cwtl
pop
sbb
stos
lea
ret
xor
std
lret
subb
in
mov
fidivrs
in
movsb
pop
xor
out
lds
test
call
push
jp
sbb
orl
jge
sarb
mov
ljmp
jnp
pop
ja
push
jae
push
push
push
xlat
mov
sbb
jecxz
pop
stc
hlt
repnz
scas
pushf
sub
push
jns
daa
icebp
ljmp
stos
jp
inc
mov
or
ja
outsl
or
mov
mov
testl
mov
outsb
scas
stc
fwait
xor
aaa
xchg
jp
pop
jns
mov
cmp
fwait
add
das
roll
jnp,pn
loopne
ljmp
lret
push
pop
popl
pop
jg
shll
enter
fisttpll
dec
push
mov
inc
mov
shlb
shlb
lahf
repz
aad
pop
pop
push
inc
dec
mov
xor
adc
inc
imul
fcmovnbe
adc
addr16
pop
insl
lahf
jl
ret
push
sub
pop
cld
and
cs
mov
cli
pop
stc
xor
rcr
push
jle
mov
push
xchg
cmc
dec
mov
leave
sbb
xchg
outsl
dec
ljmp
in
lret
addr16
psadbw
adc
orb
lds
cmp
lret
cli
ret
jbe
xchg
jle
fisubl
add
shr
inc
mov
enter
rolb
sbb
cmp
ret
mov
movsb
or
xor
push
gs
push
mov
jle
in
mov
xor
ljmp
inc
push
insw
pushf
push
cwtl
cld
fstps
jecxz
inc
lret
xchg
xchg
fiadds
pop
mov
ljmp
xlat
mov
nop
mov
bound
xor
push
xchg
int
sti
cmp
insb
xor
pop
mov
push
cmpsl
push
mov
xor
popf
mov
rorb
lods
movsl
dec
xor
lds
adc
jbe
jmp
xorb
pop
testl
mov
scas
imul
sarl
push
inc
dec
jb
int
movsb
xchg
cmp
js
cmc
mov
into
pusha
lahf
mov
dec
cmpsb
shlb
jle
std
frstor
and
andb
mov
loop
push
les
shlb
mov
shl
testb
rcrl
mov
pop
scas
push
das
bound
test
in
jecxz
cmp
pop
xor
cld
jnp
iret
scas
adc
pushl
lret
jle
mov
dec
mov
add
sti
fimuls
ljmp
pop
mov
xor
sbb
dec
shll
mov
mov
and
and
adc
mov
xor
loop
push
pop
fisttpl
sahf
mov
inc
aam
cwtl
mov
add
xor
fists
xchg
jns
jne
jg
aas
leave
adc
outsl
sub
push
sbb
jae
xchg
hlt
cvtps2pi
repnz
cmc
out
aam
aad
add
jecxz
cld
jg
jo
mov
xchg
mov
movsl
stos
arpl
mull
jge
push
hlt
test
les
hlt
les
xor
fisubs
in
mov
in
mov
or
mov
leave
stos
mov
or
int3
and
popa
sub
insl
and
fiaddl
inc
add
in
jne
lahf
out
pop
xchg
rcll
mov
add
pop
lret
add
adc
insl
jbe
stos
mov
lods
xor
add
outsl
sahf
xchg
xchg
mov
adc
cmp
iret
loopne
push
stos
and
or
cli
xchg
xlat
rorl
pop
inc
jno
mov
jmp
cli
ja
inc
inc
lret
rcrb
mov
aad
mov
std
cmp
dec
mov
or
pop
push
add
xchg
xor
jnp
repz
mov
adc
xchg
test
cmp
jg
adc
scas
and
dec
sbb
xor
jge
jnp
inc
add
mov
ss
pop
dec
jp
popf
fisttpl
xor
fstpt
fidivs
xchg
or
cwtl
pop
das
loope
pop
dec
jp
je
shl
xchg
jae
daa
test
cltd
sub
cs
aad
jle
mov
test
inc
mov
pop
inc
fwait
cmpsl
test
adc
ja
push
out
dec
pop
mov
inc
jbe
push
mov
sbb
movzwl
cmovge
jae
scas
rclb
or
enter
and
pop
fwait
add
js
out
addl
mov
mov
fisubrs
incl
inc
mov
clc
jae
jg
testb
inc
dec
in
push
mov
xor
call
mov
stc
or
rclb
and
aaa
negl
scas
mov
push
out
push
aam
push
lock
js
cwtl
loopne
adc
dec
daa
cmpsb
pop
xchg
cli
mov
pop
adc
mov
aam
mov
inc
imul
mov
cltd
or
iret
sub
aam
std
mov
js
mov
jno
cmpsl
in
out
jle
jbe
daa
rol
push
out
sbb
mov
push
ds
sbb
mov
repz
mov
imul
cmp
cs
inc
fcmovb
xchg
adc
sub
clc
popf
mov
lret
aas
cmp
dec
fneni(8087
fildll
push
or
pop
pushf
xchg
mov
jge
cwtl
sbb
das
insb
iret
push
lcall
popa
mov
cmp
push
in
int
mov
push
dec
pop
sbb
pop
movl
add
sarb
pop
or
inc
fwait
dec
xor
xchg
lret
in
pop
popf
clc
in
pop
mov
int
in
mov
jae
dec
mov
popf
in
sarl
mov
push
cmp
lods
cmc
xchg
sub
inc
sbb
and
dec
ss
ljmp
mov
rcrl
pusha
clc
adc
imul
icebp
adc
add
jl
leave
fistl
mov
cld
or
test
ret
in
dec
sbb
lahf
cwtl
push
jp
orl
scas
jo
push
clc
mov
fcmovnb
stos
pusha
jge
inc
cmp
push
cmp
pop
loope
sub
imul
pop
push
lea
cmp
fmull
scas
adc
lret
fimull
imul
mov
icebp
pop
pop
sbb
dec
fdivl
sarl
cmp
xlat
mov
sub
jmp
outsl
in
stos
subl
adc
dec
into
jecxz
lea
inc
dec
xchg
or
imul
xchg
jnp
mov
xchg
popf
ret
dec
pop
jmp
orb
lods
int
pop
in
ja
std
sbb
mov
push
loop
scas
cmp
inc
inc
out
push
repnz
inc
scas
int
sub
pop
jbe
ds
and
and
push
bound
push
in
fistl
pop
dec
push
shlb
push
or
dec
loopne
imul
xchg
pop
movsl
ljmp
push
lock
in
cwtl
or
or
fwait
pop
popa
nop
aas
xlat
rclb
data16
test
ret
sub
js
leave
inc
adc
xor
incb
outsl
ljmp
add
scas
push
push
jmp
and
shlb
jmp
cmpsb
lret
jae
test
fdivr
adcb
inc
aad
test
jecxz
repz
loope
and
lahf
iret
stos
xorb
jecxz
push
mov
mov
add
fnsave
inc
cmp
aaa
and
push
and
stos
lock
cmp
loopne
xchg
xlat
add
and
dec
mov
xchg
cmp
aas
pusha
iret
or
subb
xorl
pop
call
and
xchg
imul
pop
inc
aas
mov
mov
cmp
lcall
shlb
ret
xchg
lods
mov
nop
push
dec
push
pushf
pop
ret
in
mov
dec
xor
adc
lahf
pop
cli
and
push
pop
mov
pushf
sbb
hlt
sbb
stc
xor
xchg
jmp
mov
mov
mov
in
xchg
or
mov
push
inc
inc
sbb
mov
jnp
shll
mov
repz
dec
jl
dec
repz
shlb
xor
ret
popa
retw
pop
pop
dec
push
and
or
push
mov
xlat
jmp
xlat
mov
lods
cmp
in
lcall
call
jecxz
push
sub
inc
jg
cmp
xor
enter
repnz
decl
mov
daa
xor
cmpsl
movsb
mov
scas
jecxz
and
adc
pop
je
ds
push
or
pop
mov
repz
testl
cmp
and
pop
jbe
cld
js
scas
jnp
movsb
call
imul
lcall
icebp
lods
arpl
es
dec
in
sarl
out
push
mov
out
mov
stos
mov
stc
xlat
dec
iret
adcl
fdiv
and
mov
push
sub
adc
push
xor
out
subl
and
sbb
sub
outsb
sub
cmp
daa
inc
loope
loop
adc
jp
mov
int3
pop
lret
fimuls
ret
aaa
fistl
and
mov
mov
push
mov
popw
dec
sbb
std
sbb
push
cmp
lret
rorl
scas
xchg
movsb
or
int
das
dec
lret
arpl
popf
sub
mov
jecxz
lret
ret
push
lretw
mov
repnz
xlat
subl
cmc
lods
inc
and
pop
jo
sub
mov
pop
push
mov
clc
ret
push
bound
inc
add
xor
and
jbe
and
icebp
rcrb
jg
mov
out
add
popa
push
jle
loope
inc
rol
std
or
fidivl
jmp
js
lock
mov
lock
shll
jge
lcall
and
push
shll
aas
sbb
xor
stos
dec
icebp
imul
adcb
bound
fiadds
mov
xchg
inc
cld
add
rcll
ljmp
cmpsl
adc
movsl
fisttps
cmpb
insb
mov
fsubrl
es
xchg
xor
xchg
mov
fs
mov
test
je
mov
pop
repnz
mov
rcll
out
jo
sub
lahf
lret
jbe
popf
iret
testb
sahf
in
inc
push
adc
aam
pop
push
add
xor
jle
gs
jns
out
add
rcl
adc
lret
dec
add
int3
cwtl
fbld
add
adc
roll
push
out
mov
or
lea
adc
push
std
test
mov
scas
dec
add
sbb
push
pop
mov
popa
push
and
cltd
out
mov
pop
add
bound
into
xchg
cmp
or
repnz
insb
pop
pop
sub
ficoms
shll
xchg
xchg
insb
xchg
lret
ss
xchg
or
mov
cltd
xchg
int
stos
xchg
sub
and
popa
inc
sti
fists
jns
aad
loopne
lret
pop
and
mov
popf
cmpsb
cltd
sbb
and
popa
iret
insb
stos
inc
push
in
mov
int3
rcrb
sti
popf
mov
in
cld
jg
mov
leave
push
scas
or
and
mov
xorb
insw
mov
scas
stc
lahf
lods
addr16
into
xor
or
add
adc
cs
xchg
cwtl
xchg
popa
jo,pn
pop
shll
outsl
dec
fwait
dec
pop
pop
jo
roll
push
sub
pause
outsb
pop
das
movsb
jp
dec
das
mov
push
loop
jle
or
pop
enter
inc
mov
mov
lock
leave
adc
jecxz
cld
rcrb
xchg
dec
dec
stc
out
jno
aad
and
ret
mov
enter
shl
andb
sbb
xchg
inc
dec
sub
or
call
adc
mov
mov
movsl
outsl
mov
mov
lret
cmp
arpl
dec
push
addb
arpl
push
jbe
mov
xor
cwtl
js,pt
sahf
and
mov
sahf
mov
aam
outsb
cmp
sbb
inc
sti
fbld
adc
pop
sub
xchg
sub
pop
out
shlb
arpl
or
in
jge
sbb
pop
adc
aaa
jae
push
adc
add
dec
jae
push
data16
nop
movsl
movsb
rolb
pop
mov
jnp
jecxz,pn
popa
add
pop
mov
or
pop
lea
sub
shrl
lcall
or
popf
mov
jns
rcrl
hlt
aam
xor
push
lea
out
nop
sti
lret
cltd
adc
rorb
sub
xchg
gs
mov
mov
into
and
push
adc
lret
jecxz
sarl
stos
mov
mov
push
dec
stos
stos
mov
int
xchg
fimull
pushf
pop
push
jns
and
dec
sbb
aas
test
jg
inc
pop
and
inc
push
xchg
xchg
lds
cwtl
xrelease
mov
cmp
out
mov
fldenv
repz
xchg
fistps
pop
pop
xor
add
in
jno
add
xchg
inc
inc
loopne
fldcw
inc
inc
push
daa
lahf
push
das
std
sub
stos
fstpl
loop
rclb
add
sub
nop
pop
scas
push
ret
xchg
pop
mov
lods
out
idivb
jnp
or
jbe
and
cltd
popf
lahf
stos
cmpsl
lret
les
add
aad
or
dec
jmp
cmpl
inc
jnp
aad
cmpsl
mov
bound
jae
fdivs
xchg
cmp
lea
push
sarb
mov
sub
enter
push
add
out
cmp
add
pop
into
in
and
mov
sub
push
cmp
in
jp
adc
xchg
xchg
rorl
sbb
and
sahf
inc
dec
push
xor
arpl
inc
insb
pop
sub
lret
outsb
ja
loop
out
push
xchg
inc
jno
sub
and
mov
sub
inc
out
jle
xor
mov
xor
imul
and
push
cltd
xor
xor
leave
pusha
sbb
enter
iret
mov
test
daa
mov
iret
lahf
popf
push
js
jp
lds
stos
push
inc
mov
and
out
fdivl
orb
jae
inc
in
adcl
shll
pop
ret
fidivrs
adc
pop
into
fcmovbe
leave
je
cmc
mov
push
push
adc
cltd
add
nop
push
fdivrs
cmpsb
out
mov
roll
sub
dec
ret
icebp
mov
push
test
cs
cld
test
and
fidivl
lea
adc
lcall
andb
test
arpl
add
into
sbb
cmp
fnstcw
push
sub
scas
aad
jmp
int3
repnz
jns
sub
mov
inc
push
test
add
js
mov
scas
dec
iret
jnp
pop
inc
aas
mov
mov
mov
leave
sub
cmp
jp
push
dec
packuswb
lret
push
inc
loopne
iret
mov
clc
inc
push
xchg
jp
pop
push
pop
cmp
mov
adc
loope
scas
mov
jbe
cmp
cmpb
xor
sbb
cmp
inc
pushf
mov
test
in
sub
int
imul
cmp
stc
repnz
push
arpl
jo
in
outsb
hlt
inc
lcall
cmp
repnz
add
clc
pop
loop
push
xor
sbb
in
lcall
int
mov
mov
repz
mov
loope
test
sbb
loop
cwtl
mov
sub
or
sbb
xchg
push
mov
xchg
xchg
addr16
loopne
js
decb
int
popa
xchg
sub
or
outsl
mov
push
testl
test
and
int
dec
cmp
push
loope
jb
fstps
jmp
xor
pop
push
vmovmskps
dec
repnz
sahf
out
jnp
mov
sub
xor
push
cmp
outsl
cltd
push
rcrb
adc
mov
hlt
push
xchg
mov
sub
mov
add
sub
stos
arpl
fcomi
pop
out
es
mov
cs
mov
adc
popf
ffreep
sbb
push
ficompl
daa
mov
xchg
jecxz
enter
ret
jnp
push
fidivl
pop
cmpsb
push
sub
fisttps
sbb
mov
mov
cmc
cmc
shll
sbb
aam
fisubrs
imul
cmp
sub
mov
and
xor
repz
dec
fistps
push
cwtl
repnz
dec
push
ds
push
movsl
xor
sub
xor
jmp
add
pop
popa
iret
enter
add
cmp
xchg
dec
cmp
mov
cli
xor
faddp
push
dec
lods
cltd
subl
imul
cltd
mov
jnp
std
add
jg
cmpsl
xor
lds
mov
xchg
pop
out
inc
pop
xchg
outsb
aaa
xchg
cwtl
jge
cmpsl
rorl
xor
popa
sbb
jne
scas
mov
add
cmp
sub
test
rorb
or
aam
pop
lods
pop
lock
lret
aad
pop
aas
imul
cli
notw
call
mov
pop
imul
mov
xor
dec
lret
mov
xchg
push
push
cld
jmp
out
cltd
cld
jae
stos
dec
inc
test
lea
mov
arpl
mov
push
push
cmp
jne
dec
inc
adc
jne
sub
mov
scas
imull
inc
xchg
stos
fimuls
jg
fmull
int
fldl
mov
and
lock
clc
clc
fwait
xor
pop
aas
es
cmp
mov
addb
in
pop
pop
add
dec
int3
sbb
push
in
cli
loop
or
xchg
push
inc
pop
pushf
data16
lds
mov
push
and
sti
mov
icebp
pop
clc
fstps
inc
push
lea
aaa
scas
or
mov
daa
in
and
cmpsb
icebp
mov
nop
ret
sbb
adc
jb
shrb
and
mov
cwtl
mov
xor
jl
xor
dec
test
mov
inc
test
pop
cwtl
cmp
adc
xchg
add
mov
add
ss
shll
ljmp
add
sarb
in
jne
push
lcall
pop
fldcw
sbb
push
pop
pop
mov
or
imul
popf
jbe
data16
xor
push
pop
sbb
fidivs
xchg
fsubrl
int3
into
dec
and
mov
xchg
xchg
icebp
mov
sbb
ss
inc
lds
xor
pop
jae
enter
pop
fists
mov
dec
add
outsb
xchg
mov
push
pop
adc
das
jo
mov
add
daa
adc
or
xor
lods
xchg
out
in
call
jae
mov
ljmp
and
shrb
fs
daa
pop
mov
adc
cmp
sub
cs
cltd
inc
cmp
push
test
xchg
jb
popa
xlat
daa
aad
in
and
add
cld
ljmp
inc
mov
pop
testb
jp
jno
out
popa
daa
sub
or
das
data16
lock
out
ds
xchg
in
adc
mov
inc
arpl
loop
ret
mov
fisttps
sbb
cmpsl
mov
js
cmp
cmc
call
popf
divl
in
mov
or
out
mov
mov
adc
mov
dec
subb
lds
in
pushf
ja
int
rclb
pop
xor
or
mov
cmp
shl
adc
add
pop
jmp
es
stc
hlt
mov
cmp
movsl
cmp
aad
jmp
int3
mov
sbb
dec
inc
outsb
arpl
and
arpl
xchg
cmp
out
and
jo
mov
xchg
in
push
imul
jl
jmp
fs
push
jne
imul
icebp
fadd
rcrb
sub
sub
mov
icebp
mov
dec
pop
fnsave
ja
mov
clc
mov
push
stos
mov
ret
pop
xor
enter
sbb
sub
enter
add
sbb
dec
mov
sub
xor
sbb
pushf
das
mov
gs
pushf
push
jno
sub
loop
mov
push
test
mov
daa
outsl
mov
in
inc
inc
cld
cmp
int
cmp
mov
fsubs
xor
es
hlt
int3
lock
iret
notb
ret
loop
hlt
push
jmp
mov
stos
dec
mov
or
mov
out
dec
cmpsl
pop
push
incb
pop
sub
subl
sbb
cli
pop
push
inc
jle
mov
and
jbe
push
int
aam
subl
xchg
pop
cwtl
cmc
leave
in
or
ss
inc
add
in
fucomi
push
das
enter
or
push
shlb
addr16
mov
je
iret
cmpsb
lcall
cmpsl
mov
adc
outsb
test
or
popa
pop
mov
cld
rcl
cmp
packuswb
es
mov
dec
fwait
call
dec
pop
fistps
mov
sub
inc
adc
stc
xor
sub
pop
sub
fbld
daa
shrl
loope
dec
ret
pop
mov
mov
or
scas
inc
stos
push
sub
and
rcr
gs
jbe
retw
adc
dec
in
dec
out
push
clc
fs
inc
cwtl
in
stc
xchg
das
repnz
subl
xlat
and
add
and
cmp
xor
sub
push
mov
pop
aas
jno
or
xor
arpl
push
jle
scas
mov
int
test
push
mov
out
rcll
push
xchg
mov
push
test
add
xchg
jne
out
cs
pop
dec
jne
out
in
gs
aad
out
sbb
sbb
sub
push
fwait
add
mov
sbb
mov
or
mov
fcoms
mov
cmc
subb
aaa
sbb
mov
lods
mov
mov
jae
and
jmp
push
mov
lods
push
pop
cmpsb
je
aas
test
xchg
push
fnstenv
cmp
jp
inc
in
or
cld
out
push
push
scas
icebp
addl
mov
js
xchg
sar
push
int3
mov
or
rcr
add
hlt
sbb
and
jge
sbb
mov
daa
lret
dec
jle
and
test
nop
pop
mov
push
pop
mov
push
pushf
adc
dec
xor
iret
xchg
pushf
insl
pop
fmuls
js
add
rcl
cmc
push
std
jl
sbb
dec
jp
enter
lcall
dec
mov
add
jge
test
xchg
lea
adc
idiv
cwtl
lods
mov
and
addr16
cld
adc
push
hlt
inc
sahf
pop
outsb
lea
or
aam
fisubrs
add
or
pop
sbb
and
sbb
jge
or
int3
push
mov
push
call
pop
addr16
shl
jne
ud0
mov
fs
xchg
mov
mov
jne
mov
scas
jo
or
imul
clc
dec
in
or
imul
in
push
or
or
jecxz
sub
clc
cld
addl
dec
inc
gs
dec
fwait
repz
inc
mov
lea
xor
lahf
inc
push
or
add
cmpsl
add
popf
scas
aaa
jp
addr16
and
adc
incb
adc
mov
push
sub
or
sbb
pop
movsb
xor
ja
bound
arpl
loope
push
jns
stos
popf
add
and
dec
pop
andb
cwtl
jbe
jae
sub
mov
loope
orb
xor
call
mov
cmc
scas
jmp
adc
xor
adc
and
addr16
sahf
pushf
inc
stc
add
pop
in
aas
fwait
insl
mov
or
push
push
sbb
xchg
insb
cmp
dec
mov
out
popf
inc
inc
in
xchg
out
cmp
pop
sub
mov
sbb
mov
fisubrs
add
and
jle
insb
xchg
or
push
imul
pop
or
mov
dec
push
or
mov
fs
insl
in
les
call
imul
pushf
rep
loope
outsl
fsubr
cs
mov
xor
mov
lods
mov
fildll
fsubrl
push
aam
dec
and
adcl
or
mov
arpl
pop
sub
dec
and
addb
lea
sub
movsl
pop
sbb
mov
push
mov
es
leave
ucomiss
mov
pavgb
adc
lret
mov
xchg
xor
sti
cmp
repz
jecxz
inc
sub
in
aam
test
jp
inc
xchg
cmc
push
adc
push
adc
imul
jno
push
xor
inc
jp
mov
sub
nop
add
sub
xchg
jl
sbb
dec
dec
mov
mov
imul
push
dec
pop
popf
xchg
cmp
addr16
add
shrb
mov
push
enter
rol
leave
lock
jns
add
push
adc
and
ficompl
mov
sub
xchg
pushf
cmp
lahf
ds
lahf
lcall
and
mov
lods
iret
push
in
ds
adc
pop
adc
add
es
mov
stc
mov
jbe
out
ss
ret
mov
mov
hlt
cmp
add
iret
or
xchg
jg
jecxz
sti
jne
cmp
pop
ja
push
movsl
cld
aas
push
clc
daa
push
xchg
adc
xchg
cmpsl
rcll
add
sti
dec
int
pop
test
pop
jmp
das
or
fdivl
or
vxorps
mov
cmpsb
mov
shl
adc
cmp
std
pop
inc
subl
pop
pop
jne
xchg
push
and
sbb
icebp
xchg
cmp
fstl
or
lds
loop
push
jbe
mov
data16
aas
icebp
rol
sbb
lret
adc
cmp
and
push
sbb
or
mov
rcrb
lret
pop
pop
enter
and
fwait
lahf
sbb
sbb
nop
add
cmp
in
cltd
in
andl
jecxz
sarb
or
adc
fwait
mov
ret
scas
outsb
rcrl
repnz
mul
mov
mov
sub
cmpsl
jmp
cmpsb
mov
pop
test
xchg
pop
enter
dec
jle
aad
xor
dec
jle
jae
ljmp
ja
jbe
in
xchg
jne
xchg
movsl
push
push
scas
adc
push
mov
decb
fs
bound
or
gs
or
dec
stc
or
xchg
pop
sub
and
sub
lcall
jb
in
pop
sub
imul
fisttpl
int
stos
push
fmull
mov
out
je
aaa
mov
xchg
jbe
imul
nop
fldt
sbb
xlat
xchg
jb
cmp
dec
loope
pop
add
pop
incl
cmp
dec
xchg
pop
adcl
adc
mov
push
mov
stc
mov
adc
addb
movsl
fcom
repnz
or
xchg
jno
xchg
push
pop
subl
aad
addr16
mov
repz
cmpsb
mov
out
test
ss
in
xor
and
hlt
xchg
fisubrl
sub
iret
jb
loope
jbe
sarb
sbb
jbe
adc
dec
shll
sbb
add
or
cwtl
pop
push
cli
int3
lods
xlat
das
int3
lds
push
push
je
into
jo,pt
adc
mov
arpl
dec
cwtl
lods
mov
jg
lea
add
insl
arpl
adc
pop
rcrl
out
jbe
mov
fwait
aaa
xchg
inc
int3
aam
movsb
pop
jnp
jne
adc
pop
fcoml
leave
repz
btr
lds
stos
adc
jmp
push
adc
in
sub
cmpsb
subb
mov
lea
out
dec
fld
cmc
adc
stos
cmp
add
addr16
out
push
lahf
xchg
mov
mov
icebp
cwtl
into
xchg
jo
xchg
cmp
loope
mov
and
hlt
jbe
mov
out
mov
adc
dec
gs
mov
out
fsubrs
fsubrl
outsl
cmp
adc
incb
hlt
push
int
jne
pop
dec
mov
cmp
daa
shlb
xchg
rorb
push
loopne
insl
test
fwait
or
cwtl
cmpsl
fstp
adc
ret
sub
movsl
test
xchg
dec
push
mov
outsb
mov
leave
push
cs
ss
out
mov
lds
aas
adc
arpl
sub
push
imul
call
dec
cli
outsb
loop
jmp
cltd
and
inc
mov
sub
call
popf
ja
arpl
das
inc
pop
stos
cmc
mov
cli
mov
jp
stc
stc
test
push
fucom
insb
scas
inc
pushf
add
mov
incb
sbb
test
adc
pop
insl
fs
in
test
mov
push
clc
stos
cltd
mov
cmp
mov
mov
push
repz
fimuls
movsb
sbb
insb
mov
fsubr
mov
xchg
lret
jnp
fs
mov
jnp
jp
cs
inc
arpl
fdivs
xor
shll
push
daa
push
inc
adc
xchg
aam
and
cmp
jo
sub
imul
ret
mov
inc
add
fwait
push
xlat
xchg
xlat
loope
and
and
mov
xchg
sbb
push
insl
jo,pt
iret
sbb
inc
ljmp
addl
icebp
mov
in
aam
cli
mov
ljmp
cli
iret
int3
cmp
outsb
sub
xchg
cmp
sbb
lds
loope
mov
rep
adc
xchg
out
push
mov
add
and
lret
xchg
fmuls
adc
jo
cmc
fistpl
ret
xchg
xchg
push
shr
mov
jb
jmp
mov
or
mov
mov
jmp
sub
lods
mov
in
mov
cmp
mov
sbb
push
stc
outsb
jo
pusha
inc
sub
mov
mov
rolb
movsb
lds
daa
or
fs
jg
arpl
cwtl
icebp
jmp
lods
int
jns
cmp
push
dec
add
push
int3
adc
push
sbb
mov
sbb
pop
adcb
inc
mov
icebp
sbb
dec
mov
mov
testl
sbb
leave
imul
addr16
and
cmp
lret
fdiv
mov
fidivrl
lret
mov
insl
add
dec
pop
lcall
fs
cltd
xchg
in
int3
roll
sub
adc
in
xor
rcrl
xor
jmp
jnp
fldcw
out
xchg
clc
or
inc
test
pop
xlat
in
stos
mov
stos
sbb
ja
out
jbe
dec
loop
cmpsl
push
and
and
inc
jno
orb
jae
mov
les
xor
xor
jns
inc
cmpsl
sbb
jae
ret
push
sub
movsb
sbb
bound
andb
js
jmp
fisttpll
in
test
loope
push
nop
mov
fs
and
add
out
inc
dec
pusha
xchg
pop
jb
fdivrs
mov
jg
iret
dec
leave
cmp
outsl
and
lcall
push
movsl
push
pop
push
ds
aas
stos
fstl
jo
mov
ljmp
aad
xchg
xchg
and
jl
pop
pop
push
dec
dec
popf
popa
or
mov
jae
out
inc
add
in
pusha
pop
add
jno
mov
adc
jp
lods
cltd
jl
dec
arpl
dec
add
dec
loope
pop
and
mov
push
lea
loopne
xlat
and
ret
push
int
push
jg
adc
jo
push
sbb
pop
popf
xchg
jbe
lock
jnp
or
jnp
and
imul
fimull
std
cmp
loope
pop
imul
ss
pop
inc
out
inc
push
pushf
jmp
dec
iret
cld
cmp
dec
lret
lret
cmp
call
dec
mov
sbb
sbb
or
hlt
inc
scas
outsb
stos
mov
push
cmp
cs
sbb
imul
fnop
es
pop
pop
jmp
jmp
push
or
test
mov
cmp
dec
push
pop
mov
outsl
jae
lods
mov
add
repz
lahf
data16
pop
add
test
in
jae
mov
faddl
aad
add
inc
add
xchg
add
in
xor
sub
lea
sti
inc
or
insl
sbb
inc
jae
cmp
enter
or
and
dec
adc
jp
scas
jnp
push
repz
sub
pop
shrb
andl
xchg
divb
jle
aad
dec
mov
jns
out
adc
mov
test
mov
jp
lea
ret
or
sbb
or
jbe
pusha
test
gs
inc
sbb
pop
sbb
jne
xor
ret
pop
repz
lods
movb
sahf
or
lds
into
faddl
mov
jnp
js
xor
hlt
cmp
dec
pop
fadds
push
push
gs
lret
loope
and
adc
fldcw
out
pusha
sbb
jb
inc
push
pusha
cmc
lret
push
pop
jno
pop
cwtl
xlat
dec
push
xchg
addr16
in
and
and
mov
mov
add
sbb
push
mov
stos
cmp
cltd
sub
ds
mov
mov
scas
xor
outsl
js
and
inc
scas
sbb
popa
cltd
cmpb
push
sub
push
and
adc
bound
jns
jo
fsts
sbb
or
icebp
or
or
out
dec
aaa
xor
mov
bound
inc
ds
sub
test
lcall
sub
lret
xchg
sub
je
or
fstps
je
and
pushl
xchg
fists
sub
movsl
adc
insb
bound
movsb
xor
dec
mov
sub
outsl
pusha
ret
shll
scas
mov
subb
data16
sub
rcrl
mov
orb
clc
std
sub
and
call
in
xchg
lahf
rorl
test
dec
loopne
dec
lret
mov
pop
inc
xchg
xchg
push
clc
jns
jl
pop
loopne
jmp
insb
push
mov
int
js
hlt
in
inc
inc
or
fadds
push
push
mov
sahf
adc
xor
sub
fucomip
or
movsb
out
xor
inc
test
push
es
and
lods
sbb
shrl
enter
les
sub
lret
or
sbbl
sbb
es
scas
in
dec
cld
pusha
rclb
adc
mov
sub
outsl
add
popf
test
shrl
mov
cmp
pushf
xor
or
ss
insl
dec
mov
inc
push
mov
xchg
leave
lahf
xor
gs
or
push
xchg
sbb
fildll
pop
rclb
icebp
dec
sbb
xchg
add
scas
mov
mov
xchg
mov
sbb
fistpll
push
aad
gs
sbb
data16
mov
xchg
fdivrp
ds
jge
mov
xchg
xor
xchg
daa
jb
outsb
dec
mov
lahf
fstpt
mov
mov
xor
lahf
call
jne
or
pop
scas
rorb
repnz
add
push
std
cmp
fsubrl
shl
adc
push
mov
outsl
adc
cmc
mov
mov
xchg
cmp
cmp
inc
jl
or
cmp
out
cli
sub
adc
push
movsl
cmp
scas
lods
mulb
dec
ja
inc
pop
xor
dec
pushf
aas
dec
add
loope
jmp
sbb
dec
mov
scas
je
adc
pop
and
stos
sub
dec
hlt
jp
nop
out
push
push
dec
xor
jbe
mov
std
mov
jae
cmp
jno
sbb
sbb
mov
in
xchg
cli
sti
popa
mov
ss
inc
jne
ljmp
inc
or
cmp
out
rcll
xor
pop
xchg
aam
inc
jmp
inc
pop
scas
test
lcall
in
jg
xchg
stos
or
and
aam
push
mov
dec
lret
inc
pop
pusha
push
fsubr
insb
lret
imul
loop
mov
fsub
aas
add
lock
push
fimull
sub
mov
mov
pop
or
cld
dec
mov
inc
sub
and
and
pop
fildll
cmp
xchg
inc
jbe
leave
test
in
out
sub
lea
mov
popf
out
out
insb
dec
daa
mov
fdivs
lret
retw
nop
imul
out
xchg
push
mov
lcall
xchg
pop
into
lock
test
es
xor
push
sbb
fdivrl
adc
pop
loope
push
inc
mov
iret
aaa
xchg
push
inc
mov
dec
and
lahf
push
mov
mov
pop
aam
adc
loope
adc
push
scas
cmp
movsb
fistpll
push
fldcw
xor
sbb
mov
mov
sub
cmc
popa
or
out
push
fisttps
jmp
xor
sub
jle
add
add
pop
xor
dec
lds
xor
cmpsb
cmp
lahf
jae
push
dec
mov
mov
aam
xor
or
inc
movsl
xchg
shl
lcall
cmc
andl
and
pop
sti
sub
xlat
jb
push
mov
jbe
ficoms
lret
test
std
ret
inc
stos
nop
dec
inc
mov
push
cwtl
xor
out
push
sbb
pop
cmp
in
lock
xchg
popf
into
jnp
lret
jg
xor
movsl
int
push
call
mov
mov
outsl
insl
dec
xor
dec
loopne
or
test
push
mov
les
test
pop
pop
add
and
lds
add
add
imul
test
test
hlt
in
movb
ret
jb
int3
in
jmp
das
mov
push
jae
jle
ljmp
rcl
fwait
push
jns
cmpsb
add
cmp
ret
imulb
lret
pop
std
rorb
ret
fisttpl
adc
and
dec
pushf
popf
cwtl
pop
push
mov
loopne
mov
daa
fs
inc
push
movsb
jg
mov
inc
lret
es
enter
je
sbb
popf
mov
dec
notb
inc
push
jge
mov
cmp
mov
loope
mov
scas
add
mov
fwait
inc
and
sti
pop
push
jns
push
adc
push
repnz
lods
scas
fcmovbe
lods
dec
int
and
iret
shrb
mov
mov
in
sbbb
mov
std
sub
dec
lods
fwait
ror
fwait
adc
mov
mov
sbb
out
sbb
xor
dec
pop
std
jl
mov
sbb
inc
sahf
leave
scas
push
js
adc
orl
sub
push
fbstp
mov
aad
jo
dec
add
mov
mov
gs
jae
sbb
andb
test
xchg
data16
sti
fcoms
sahf
mov
rclb
scas
pusha
scas
cltd
incl
adc
stos
mov
data16
pushf
jl
mov
dec
and
sub
dec
rorl
xchg
repz
mov
sbb
fwait
or
daa
push
movsl
xor
repz
loope
inc
pop
sbb
sub
sahf
scas
fidivrs
mov
in
sbb
punpckhwd
ret
jg
call
repz
cmp
lret
pop
andb
repnz
sbb
and
inc
mov
hlt
js
movsl
andb
gs
jno
mov
mov
mov
mov
push
mov
out
mov
cmpsb
or
mov
test
xchg
jge
mov
in
cld
pop
mov
add
pushf
adc
insb
pop
scas
iret
shlb
lahf
add
fmul
mov
sub
addr16
cmp
pop
wbinvd
mov
jne
pop
pop
mov
cwtl
fdivrp
mov
imul
stos
add
imul
in
cmp
lods
jne
cmc
leave
ljmp
xchg
rorl
sub
cmpsl
fs
mov
xchg
sbb
sub
fidivs
wrmsr
xchg
mov
push
mov
jecxz
or
sahf
sub
adc
and
pusha
mov
add
fsubl
shlb
ds
in
sti
and
fidivrl
jge
push
insl
imul
cmp
add
movsl
std
jge
mov
xchg
mov
popa
sub
jbe
int3
dec
cmp
int3
xchg
jno
ret
flds
js
push
sbb
bound
popa
ds
pop
or
cmp
cmp
jmp
push
shll
jns
rol
dec
add
dec
sbb
pop
jno
aad
adc
test
and
hlt
mov
lea
dec
pop
sbb
inc
and
xchg
mov
and
dec
fimull
jnp
stos
dec
fmul
push
faddl
adc
les
loop
adc
jl
cltd
lret
cmc
scas
mov
out
add
ja
movsl
outsb
pop
dec
in
inc
xchg
aam
xor
loop
dec
push
lret
popa
lock
or
mov
imul
shlb
cmp
mov
ficomps
push
xchg
dec
and
ficoms
mov
mov
lea
ds
xchg
add
popa
mov
sti
pop
add
pop
fstpt
test
popa
pop
test
movsl
jo
ja
push
scas
lock
adc
mov
adc
jle
pop
inc
jne
jp
mov
mov
mov
in
scas
jne
lods
stos
xor
sub
dec
add
pop
rolb
mov
mov
sahf
out
cmpsl
mov
aad
stos
outsl
in
repz
lret
mov
push
inc
xor
mov
fcoml
push
pushf
xchg
cmp
int3
lcall
daa
clc
xchg
popf
fstpt
shlb
cmpsl
enter
out
pop
js
xchg
cmpb
cltd
popa
std
pop
lret
repnz
xchg
inc
jle
rol
adc
dec
shlb
jecxz
loopne
add
ret
mov
ds
cltd
es
pop
in
ror
gs
mov
repnz
das
enter
xor
or
xlat
fists
push
push
data16
mov
sti
je
mov
mov
sbb
pop
xchg
addl
and
xchg
mov
shr
xor
add
add
push
xchg
push
aam
mov
cld
lret
repnz
adc
pop
fcmovnu
insl
lds
and
and
pusha
aad
fdivl
shrb
rclb
pusha
xor
cwtl
xchg
cld
cwtl
fincstp
ficoml
add
cld
mov
shr
or
aam
dec
addr16
shll
daa
dec
pusha
movsl
imul
test
inc
jmp
lcall
and
es
int
jecxz
ret
scas
inc
cltd
push
fldcw
clc
jbe
inc
das
push
cltd
cmp
hlt
push
sbb
mov
jge
adc
inc
add
adc
xchg
cmp
out
movsb
mov
xchg
mov
sbb
mov
outsb
fwait
test
addr16
cmp
add
sub
int
ret
cs
mov
test
push
inc
jo
sub
mov
adc
or
pop
fcoml
aam
in
test
xchg
mov
in
pop
addr16
idivl
adc
or
push
dec
lret
test
or
dec
ret
mov
sahf
mov
cmpsb
sub
scas
xchg
or
shll
mov
mov
popa
ljmp
sti
adc
packsswb
push
outsb
in
inc
sbb
jle
jg
dec
mov
rcrb
push
jmp
mov
rcrl
lahf
push
mov
xchg
scas
push
add
test
pop
adc
lcall
push
add
loop
mov
or
cmc
pop
std
fs
dec
jb
pushf
jmp
ss
fistps
xchg
das
xchg
lret
icebp
mov
in
out
and
lret
cmp
jns
xor
push
pop
xlat
fs
jl
jl
lock
leave
movsb
push
repnz
sub
dec
fistps
arpl
call
out
inc
push
clc
xor
push
cli
jle
xlat
sbb
push
jno
jae
push
cmp
or
popl
xchg
jle
insl
pop
dec
lret
adc
push
outsl
push
sbb
in
pop
jne
mov
shll
lahf
inc
pop
or
shll
imul
gs
shlb
ja
pop
les
or
adc
call
shll
subb
lea
repz
and
mov
in
ljmp
bnd
mov
xchg
xchg
sarb
ret
push
loop
xor
inc
mov
imull
movsb
mov
cmc
inc
test
xchg
mov
push
call
add
rorb
out
daa
mov
out
scas
sub
inc
jp
cmp
jg
std
push
lea
sarb
shrl
xchg
mov
popf
jo
inc
mov
sbb
fbstp
movsb
push
adc
mov
add
push
jae
popf
sub
pushf
dec
loope
mov
jnp
popa
andl
lret
cs
push
icebp
ret
ss
or
sbb
mov
pop
dec
stc
sbb
test
pop
pop
sbb
add
mov
icebp
or
data16
cmp
nop
lods
out
and
std
in
add
cmpsb
movsl
test
jl
popa
inc
mov
and
mov
fnop
xor
test
loopne
andl
pop
int3
pslld
movsb
jl
mov
clc
das
rcrl
jae
loope
dec
xor
push
test
mov
es
mov
sti
mov
push
adc
mov
and
push
fiadds
mov
imul
cwtl
nop
cmpsl
inc
cmp
mov
cmpsb
out
aaa
jnp
mov
mov
push
mov
mov
in
gs
pop
pop
insb
pop
gs
sbb
imul
mov
cmp
dec
jae
jmp
jecxz
xchg
cltd
xchg
scas
cli
mov
inc
dec
popa
das
lret
leave
fstpl
mov
lret
push
fsubl
cmp
adc
mov
pushf
into
fiaddl
ljmp
xchg
jl
sbbb
jg
outsl
add
inc
arpl
push
add
mov
rcl
push
sbb
or
faddl
int
xchg
cld
jge
add
push
sub
adc
push
test
mov
out
inc
push
adc
pushf
inc
popf
or
pop
jle
mov
addr16
sbb
mov
popw
inc
dec
mov
movsl
ds
rcl
push
adc
push
imul
subb
scas
inc
nop
push
clc
aas
push
sub
lds
call
or
cmp
mov
loop
cs
push
xchg
cld
adc
fists
insl
cmpsl
lret
mov
inc
adc
inc
xor
jbe
lods
fisubl
mov
add
adcb
mov
adc
sbb
add
out
fs
movsl
pop
fs
in
bound
pop
mov
and
addr16
mov
mov
movsl
and
push
inc
sub
cmp
and
or
inc
sti
in
dec
arpl
in
cwtl
jl
mov
fisubrs
rcll
jne
aad
dec
push
push
in
push
and
shll
bsr
cmp
mov
or
stc
and
mov
mov
leave
lock
jae
xchg
cwtl
mov
add
cmp
dec
pop
ja
sbb
pop
jl
jle
in
test
xorl
ss
divl
and
enter
imulb
insb
movsb
or
ljmp
repnz
shlb
aam
fistpll
mov
loop
ret
shll
xor
mov
loope
cli
mov
xchg
mov
fs
in
popa
mov
pusha
ds
addb
and
pusha
pusha
lds
repz
cmp
aam
pop
xchg
xor
ret
xchg
xchg
cwtl
aad
call
inc
jg
jmp
mov
out
scas
fldt
jmp
sbb
inc
cltd
mov
in
scas
jbe
add
push
mul
enter
dec
cmp
mov
add
push
jb
push
push
cmpl
add
and
jb
push
fistpll
push
xchg
adcb
jp
popf
mov
xor
fistl
push
push
pusha
adc
arpl
inc
xorb
insl
mov
insl
push
pop
sarl
imul
push
mov
test
push
fidivrs
cmp
out
or
sbb
pop
stos
mov
fstp
mov
fldl
fnstcw
out
jle
sbb
ds
xor
call
jecxz
inc
popa
popf
xor
jp
mov
push
inc
fistpl
push
fcmovnu
mov
jl
lds
add
aad
jnp
cmp
pop
and
mov
sub
jns
jbe
stc
into
das
mov
jo
sub
cmp
jmp
pop
mov
or
and
inc
fucomp
mov
jbe
jbe
and
outsl
cmp
jl
and
mov
stos
ret
push
int
push
dec
sub
mov
mov
in
or
mov
fwait
nop
mov
mov
mov
mov
aad
lods
push
xchg
rcll
cltd
mov
call
ljmp
test
imul
fsubrl
data16
fsubp
xorb
into
shrb
mov
add
test
mov
cmp
cmpsb
dec
sbb
js
pop
dec
mov
push
rcr
je
scas
inc
xchg
lret
inc
aas
add
mov
pop
das
enter
mov
sbb
movsl
test
xchg
add
add
sub
xor
fcmovb
clc
adc
cmpsl
mov
sub
and
into
dec
and
in
outsl
or
jle
pop
pushf
pop
jnp
cmpsl
adc
xchg
add
sub
xchg
aam
mov
push
pop
jge
or
shll
pop
push
lods
push
mov
cmp
mov
push
in
or
sub
jae
int
jmp
xor
or
and
mov
pushw
xor
and
cwtl
rorl
sub
jo
and
ret
xor
testl
sti
sub
aas
xlat
xchg
sbb
dec
cmpsb
addl
push
inc
iret
les
sbb
dec
in
push
inc
outsb
push
fnsave
movsb
shlb
sub
pushf
add
sbb
inc
jmp
push
jmp
rcrb
xor
mov
and
jo
jge
jb
pushf
adc
ja
cs
mov
loope
lret
movsl
xchg
es
scas
shl
push
fdivr
ja
fiaddl
movsl
xor
inc
mov
xchg
test
xchg
subl
inc
or
dec
adc
mov
jmp
cmp
call
mov
add
lea
adc
inc
or
sub
push
sbb
sub
lea
sti
add
cmpsl
out
cs
pop
add
push
add
test
mov
jno
stc
icebp
xchg
lock
xor
popf
sbb
jo
sbb
xor
xorb
mov
stc
sbb
dec
leave
repnz
adc
pop
sbb
pop
stc
and
mov
mov
and
mov
scas
xor
inc
mov
adc
imul
jb
xchg
lea
icebp
hlt
pushf
cmp
je
dec
mov
iret
mov
lret
inc
jg
pop
lea
sahf
fucom
inc
adc
mov
fbld
jae
stos
ret
insl
mov
pop
mov
fbld
es
out
sub
xor
nop
sbb
repz
add
jnp
in
sbbl
int3
dec
dec
add
out
test
stos
mov
cld
lea
mov
mov
mov
pushf
push
dec
jg
lret
add
pop
fmull
mov
cmovge
xchg
ljmp
movsl
int3
sub
hlt
pop
push
mov
insb
aam
adc
jno
std
xchg
push
cld
test
cmp
lcall
enter
loope
test
add
mov
fwait
cmpsb
sub
fdivrl
sub
test
das
mov
jg
dec
imul
pop
nop
call
dec
pushf
xor
mov
aas
mov
lods
adc
jmp
add
sub
adc
pop
mov
loopne
xchg
loope
mov
or
ficomps
outsl
pop
jnp
leave
push
std
jo
xchg
mov
mov
iret
in
cmc
lret
testb
and
out
cmp
sbbb
jns
out
and
adc
jp
stos
js
ss
fs
loop
lret
xchg
scas
cmp
xchg
fcmovnu
xorl
mov
push
pop
jno
sahf
xchg
les
mov
flds
fisubs
push
inc
sub
sbb
pushf
and
jo
lahf
ret
sti
scas
lock
pop
pop
into
ljmp
mov
mov
dec
divl
loopne
rcl
orb
mov
sub
lret
add
sbb
test
cmpsl
mov
fldt
aaa
ljmp
mov
push
popl
or
push
lds
mov
xchg
mov
push
test
loope
and
jmp
cmp
subb
cmp
inc
cmpsl
mov
jmp
pop
pop
in
sub
adc
iret
cld
aaa
sub
rorb
xor
jmp
scas
cmp
jmp
bound
aam
leave
xor
mov
mov
test
rcrb
das
or
mov
hlt
and
mov
fstps
shlb
clc
mov
inc
gs
xchg
pop
sbbb
sbb
mov
out
scas
negl
das
stos
xor
mov
and
mov
push
inc
std
ret
add
fsubrs
mov
lcall
insb
and
push
xor
lds
test
gs
icebp
daa
enter
mov
aaa
into
jge
mov
mov
adc
mov
repnz
pop
push
js
jg
test
in
sbb
sar
fsubrl
xchg
or
add
outsl
sbb
or
lcall
iret
inc
negl
adc
fs
dec
daa
fadd
fistps
lea
adc
hlt
shl
sbb
dec
jge
shlb
std
fistps
mov
in
dec
sbb
add
ja
adc
xlat
pusha
test
push
sbb
sub
push
mov
js
add
loop
mov
imul
inc
push
push
rcl
pop
mov
xchg
loop
scas
mov
xor
inc
add
push
fidivrs
jl
in
outsl
or
daa
je
jle
inc
pushf
sbb
and
ds
int3
lods
insl
mov
out
cld
cpuid
xchg
roll
xchg
xchg
xchg
push
jecxz
mov
adc
push
sbb
rcrl
mov
fcoms
imul
dec
mov
pushf
mov
xlat
cmp
stos
sbb
sbb
xchg
mov
or
insb
pop
xchg
lock
in
ret
push
cwtl
mov
pop
pop
push
cli
jne
add
mov
xchg
xlat
jge
mov
movsb
jle
leave
out
xchg
and
aam
in
int
cmp
bound
mov
jge
adc
lock
and
nop
push
sub
aam
cmpsb
cltd
repnz
lret
loop
jnp
jne
mov
ss
pop
jp
pop
in
aad
cmc
mov
cmp
inc
adc
sbb
xchg
repz
inc
les
repnz
sub
xchg
xor
pop
enter
shlb
imul
faddl
sbb
pop
jno
clc
xchg
test
cmp
jle
out
xrelease
outsl
push
mov
xor
xchg
and
mull
loope
int3
pop
stos
popf
inc
push
xor
add
sub
mov
lahf
xor
add
mov
add
ret
pop
pop
jno
ret
add
aaa
orl
mov
mov
nop
jmp
incb
xor
pusha
push
xchg
aad
push
jmp
ljmp
scas
pop
call
jo
jne
cmp
xor
fmuls
xor
mov
and
insl
in
in
cmc
stos
ret
and
fnstsw
pop
in
sbb
in
test
fs
push
xor
pop
test
lods
xchg
xor
imul
sub
jnp
stos
lods
mov
add
in
imul
imul
push
cs
sub
ss
rorb
pushf
cmp
aam
ja
repz
sub
outsl
sub
push
out
lods
lret
fsubs
dec
cmpsb
xor
clc
and
jbe
fdivr
sub
mov
pop
or
cmp
fnstenv
adc
sar
sub
cmpsl
cld
cmp
and
and
sub
cs
cmp
loopne
xchg
fwait
and
jne
sub
dec
adc
rcll
lock
sub
ror
and
inc
shll
in
scas
sbb
sbb
std
imull
daa
scas
pop
xchg
inc
pop
dec
fsubr
lret
mov
rcrb
cmc
dec
aaa
adc
xchg
in
push
push
add
movsl
pushf
add
data16
add
fiadds
mov
pop
pushf
gs
dec
divb
push
stos
cwtl
jp
ret
sub
pushf
cmp
push
loope
sahf
outsl
leave
imul
in
cmp
mov
subl
gs
xor
aas
es
mov
sbb
inc
cmp
int3
jge
xchg
les
outsb
pushf
mov
mov
push
add
fsub
mov
stos
jbe
aas
push
inc
lahf
pop
sahf
and
sahf
fsubrs
lds
xchg
lds
cwtl
pop
cmp
sbb
xchg
or
testl
mov
add
pop
pop
lods
mov
loopne
mov
mov
sbb
cltd
test
mov
add
sbb
lock
inc
xor
jbe
scas
dec
cld
or
outsb
cwtl
fwait
das
por
mov
lock
inc
mov
xor
jg
gs
fst
idivl
dec
jmp
sbb
add
jg
pop
cld
and
mov
cmp
sub
fcompl
aas
aaa
out
jnp
adc
lret
sarb
jae
mov
das
imul
jns
loope
push
scas
xorl
sub
dec
test
mov
orb
test
jg
je
sub
xchg
mov
xor
mov
jae
or
push
push
xor
mov
xchg
push
sbb
cmp
cli
das
hlt
xlat
adcl
aam
daa
sbb
fisubrl
rclb
adc
push
out
mov
push
add
sbb
jle
insl
mov
xchg
scas
mov
cmpsb
push
or
sub
cltd
jno
test
push
int3
out
in
jae
lea
mov
call
pop
test
loopne
xor
and
notl
jp
cmp
sub
cmpsl
gs
jge
addb
shr
jnp
lret
ds
out
cmp
jmp
xchg
popf
inc
sbb
ror
test
pop
aaa
sbb
lea
sahf
mov
add
pop
lods
into
ja
daa
mov
or
lahf
je
or
cmpsl
test
push
cmp
hlt
cmp
cmc
dec
repz
jnp
int
xor
sbb
push
mov
sahf
clc
push
adc
add
push
jo
push
xchg
and
pop
cmp
xchg
stos
rorl
xor
mov
mov
into
gs
mov
int
sub
inc
push
flds
cmp
sub
and
push
pop
mov
shrb
movsb
sbb
popa
xlat
jae
inc
mov
push
sub
push
out
jmp
xor
mov
aas
push
or
add
sbb
sbb
adc
ljmp
inc
pushf
sbb
loop
lock
fwait
xor
into
ljmp
inc
aam
rcl
fldt
fcmovnbe
mov
lds
in
xorl
sti
sub
pop
or
popa
loope
inc
leave
push
or
icebp
fst
pop
aad
out
adc
and
ds
pop
sbb
jns
cltd
cs
aas
mov
mov
jb
shrb
fistpll
cmp
ljmp
fildl
fs
pop
mov
fmuls
call
or
call
rcll
cmp
pop
xor
mov
push
mov
xchg
xor
or
and
cmc
lahf
sub
jmp
add
cmp
cmp
xchg
fildl
add
inc
xor
mov
xchg
mov
fsubp
outsl
imul
push
lcall
jns
cli
call
fs
icebp
stos
inc
ja
sub
in
mov
adc
ljmp
add
push
push
dec
pop
fwait
jns
daa
mov
fldenv
lret
test
mov
cld
push
in
sarb
or
pop
testl
std
inc
mov
xor
or
dec
ret
dec
add
cli
pop
data16
cmp
cmp
add
inc
pop
dec
fwait
loope
inc
test
push
adc
leave
fmuls
inc
into
jmp
loopne
push
cmp
fcoms
jnp
lods
sbb
xchg
add
ret
cmp
adc
call
pop
fidivs
and
push
outsl
inc
mov
mov
insl
jb
mov
add
loope
or
lea
push
test
sub
xchg
fnstsw
xor
adc
cmp
test
mov
add
cmp
pop
dec
inc
push
js
addl
push
push
or
imul
xor
inc
and
iret
dec
cmp
shl
out
jmp
std
lret
add
std
lret
xchg
add
insl
pop
stos
popf
push
rorb
movsb
rclb
dec
push
movsl
xchg
in
sahf
mov
inc
sub
pop
in
mov
xor
cmpsb
rorb
jns
push
push
aam
cltd
lret
pop
or
cmp
iret
popf
push
out
pop
mov
js
negb
outsb
iret
imul
mov
mov
daa
in
insb
test
cmp
inc
mov
push
addr16
lods
sbb
xchg
mov
insb
es
mov
mov
movsb
test
fwait
pop
sbb
jg
push
shll
xor
cmp
sbb
or
repz
or
xor
cmpb
lods
and
sbb
add
mov
repz
orb
push
pop
adc
inc
into
loopne
xchg
out
loopne
push
clc
popf
sar
cltd
add
xor
push
push
out
mov
ja
jl
dec
pop
call
and
push
mov
add
lea
adc
cmp
mov
aad
cmp
shr
xchg
or
xor
mov
js
pop
imul
inc
or
out
xchg
mov
mov
inc
xlat
fisubrl
insb
les
add
sub
mov
sbb
cs
stos
sub
cld
jp
xchg
nop
jae
jmp
jecxz
arpl
bswap
sarb
xchg
and
inc
push
hlt
sti
inc
fisubrs
mov
lods
in
jecxz
mov
mov
sub
cmpsb
xor
adc
mov
add
fisttpl
jns
jnp
push
xchg
jnp
sub
jb
stos
mov
or
cwtl
jae
and
jp
shlb
out
insl
push
loop
mov
lret
cmp
push
movq
mov
cmp
jbe
in
popf
cmp
xor
jg
iret
je
lret
enter
nop
lock
dec
arpl
push
aam
ja
jle
cmc
dec
in
aad
imul
dec
sbb
xchg
add
sbb
lds
test
es
in
dec
in
sbb
popa
mov
out
sbb
fisttpl
arpl
adc
imul
cld
dec
ds
imul
in
leave
push
xorl
out
aas
push
push
ljmp
ss
push
sub
pop
sti
jge
add
loope
out
xor
push
ret
xchg
mov
mov
movsl
mov
or
xchg
subb
lods
adc
sub
jl
arpl
inc
notl
lcall
add
xor
xchg
test
sub
push
xchg
out
add
outsb
insb
jb
addr16
bound
rep
mov
pop
jle
inc
mov
sti
sbb
cli
negl
adc
sub
dec
cmp
jno
xchg
xlat
or
inc
aam
jno
test
mov
and
sbb
repnz
hlt
outsl
dec
jb
pop
xchg
mov
pushl
push
xchg
cmp
push
iret
repnz
add
fidivrl
xchg
cmpsb
in
es
and
and
cmp
push
jno
adc
jnp
popa
divl
movsb
insb
int3
push
mov
ret
mov
pop
jp
xchg
sbbl
adc
andl
inc
daa
movsb
inc
shlb
rcll
imul
inc
test
xor
cmp
cmp
sub
lahf
popa
shlb
scas
sbb
mov
je
in
sub
dec
jne
mov
loope
add
or
js
adc
out
xchg
loopne
popf
outsb
push
jnp
inc
xchg
popa
pop
pop
add
pop
enter
pop
lods
lret
insl
sub
repnz
loop
pop
xchg
imulb
stos
add
shrb
ficoms
fstl
mov
fnstenv
mov
mov
cmpsb
inc
mov
pop
push
shlb
xchg
xor
sbb
inc
aam
imul
dec
outsl
in
pop
lret
sarl
movl
out
iret
sub
push
mov
inc
push
enter
or
mov
mov
enter
add
out
cld
adc
test
sub
in
pop
mov
inc
ljmp
aad
mov
cs
cld
loopne
pusha
ds
jbe
test
mov
test
jge
lods
call
cli
dec
bswap
aas
movsl
cmp
push
aam
sti
ror
nop
xchg
push
pop
fimuls
xor
gs
sbb
sarl
pop
dec
daa
mov
stos
xor
repnz
sub
mov
sbb
ljmp
pop
fbstp
xor
push
xchg
push
push
jbe
cwtl
xchg
mov
lods
lock
lods
scas
sub
pushf
negb
lret
xor
mov
xor
dec
pop
iret
cmpsl
out
xchg
sub
and
xchg
iret
xlat
stos
movsl
pop
movsb
mov
lahf
push
xor
sbb
mov
fisubrl
pop
push
mov
call
sub
pop
popa
movsl
cmpb
leave
pop
jl
jge
test
dec
push
cwtl
xor
pop
loop
xchg
sbb
xchg
and
cli
scas
mov
adc
aas
dec
loope
arpl
xchg
and
adc
xchg
add
shll
fucomip
adc
pop
pop
xor
mov
xor
arpl
pop
lret
sub
jbe
roll
fchs
bound
mov
xor
jle
add
lock
arpl
cmp
cmp
and
jecxz
psubb
cli
mov
push
jae
dec
aad
xchg
mov
rep
pusha
scas
scas
aam
leave
add
lods
adc
pop
jb
popf
inc
movsb
adc
sbb
nop
and
clc
cmc
dec
out
and
mov
sub
dec
outsb
scas
loope
aam
cmp
cmp
push
inc
push
jbe
popa
jnp
rclb
pushf
mov
ss
pop
and
fdivrl
int3
jle
adc
mov
cmp
stos
push
jae
movsl
int
arpl
push
dec
mov
add
jmp
dec
das
mov
lock
repz
dec
jmp
nop
or
dec
mov
push
cmp
push
pop
rorb
mov
mov
cmp
dec
mov
sbb
xchg
iret
sbb
jmp
sbb
call
sub
xchg
testb
in
add
push
push
cltd
movsl
stc
push
popa
dec
pop
pop
push
push
int3
dec
lret
in
lds
pop
arpl
popl
add
jge
jecxz
ljmp
cmp
ja
mov
sub
inc
xchg
dec
pop
sub
pusha
or
push
imul
adc
add
xor
and
lods
xchg
inc
int3
out
cli
dec
in
test
adc
dec
xbegin
rorb
or
sbb
lahf
js
adc
pop
lret
xor
mov
test
xlat
aad
adc
cld
aas
jb
out
jecxz
adc
adc
mov
adc
xchg
scas
lods
ficoml
mov
xlat
pop
lret
push
jne
es
sbb
inc
das
ljmp
icebp
xor
xchg
stc
ret
sbb
inc
insl
pop
lret
stos
call
out
dec
jne
es
mov
jp
int3
js
mov
stos
or
in
xchg
lret
sbb
sbb
jge
mov
jge
filds
sub
jmp
je
mov
test
movsl
xor
roll
push
fsubs
ja
jnp
pushf
mov
fs
clc
jbe
inc
mov
and
add
enter
into
mov
push
add
sahf
jp
pop
push
pop
and
clc
and
mov
mov
mov
adc
or
das
jg
cmp
sub
mov
push
jo
dec
and
test
dec
jbe
cmp
pop
lcall
jge
les
std
mov
clc
push
stos
xor
jne
in
push
imul
int3
lahf
fwait
push
mov
loope
jbe
ljmp
push
sub
gs
stc
sub
stc
pop
faddp
jmp
cmp
jl
testl
sub
mov
jnp
pop
mov
test
inc
jmp
lret
lods
les
push
addr16
les
push
es
mov
addr16
daa
loopne
mov
ds
add
adc
and
out
jb
mov
inc
push
push
pop
add
adc
mov
mov
add
add
xchg
cmp
pop
cwtl
adc
fcmovne
bound
or
pop
out
dec
xchg
sub
lcall
cmpsb
test
fmulp
ret
dec
sub
pop
sbb
xor
cwtl
and
ljmp
push
movl
es
cwtl
mov
icebp
sbb
jp
adc
das
repnz
arpl
or
mov
scas
jecxz
mov
lahf
outsl
push
sub
mov
mov
stc
xchg
out
adc
mov
mov
ret
addr16
lcall
cmpsb
aaa
xor
xlat
pop
push
sbb
stc
cltd
aad
imul
jno
dec
inc
in
fwait
outsb
pop
ja
push
mov
imul
repz
push
or
push
nop
jecxz
cli
sbb
ja
mov
aaa
mov
inc
adc
idivb
mov
or
mov
aaa
sbb
push
les
xchg
xchg
mov
fsubrs
mov
sub
pop
or
loop
push
mov
jae
fdivrl
dec
vmread
es
xlat
out
aaa
inc
cmp
inc
or
or
rcll
inc
mov
stos
inc
jmp
mov
jno
test
outsl
and
mov
jne
lret
scas
arpl
shrb
sbb
arpl
int3
js
xlat
adc
mov
jg
sub
into
rorl
dec
decl
cmpb
dec
cmp
mov
cmp
mov
mov
jl
jmp
lret
jge
xor
in
mov
shrb
inc
insl
clc
cs
sbb
xor
cwtl
fmul
test
imul
xor
out
daa
int
lcall
inc
insl
pop
sbb
mov
out
insb
cmp
das
mov
adc
pop
enter
add
push
bound
and
ljmp
into
lods
outsb
cmp
scas
cmp
icebp
xchg
adc
xlat
sti
fcmovnb
inc
pop
imul
das
bound
jl
nop
cmovle
gs
sbb
pop
cltd
mov
cmc
inc
incl
ja
jmp
add
xor
js
add
scas
cmpsb
adc
ret
repnz
aas
push
scas
add
repnz
std
cld
orb
mov
orl
sahf
sub
xchg
dec
sub
enter
outsb
pop
mov
mov
pusha
push
loop
mov
adc
mov
sub
mov
enter
sbb
imul
add
incb
push
dec
mov
jl
mov
into
push
ljmp
mov
mov
mov
std
lcall
out
cli
jbe
lcall
sti
loop
xor
adc
in
shl
inc
mov
inc
daa
sbb
dec
negl
mov
xchg
sub
repnz
jno
in
xchg
jae
push
cmp
cs
lcall
ds
xor
ret
inc
addr16
aaa
loopne
fbstp
and
mov
pop
and
push
pop
mov
dec
mov
adcl
jb
sub
xchg
or
cmpsl
insl
loop
sbb
cli
insl
gs
inc
jbe
or
out
loopne
ss
pop
ljmp
add
mov
pop
sub
aas
mov
push
dec
fs
adc
add
cld
pop
addr16
das
and
dec
aam
inc
in
fidivs
inc
sub
jl
insb
mov
daa
mov
loopne
jb
sbb
or
adc
stos
test
cmp
sbb
fcmovb
imul
sti
or
lea
dec
and
lock
int3
cwtl
mov
in
pop
scas
or
cmp
outsl
fidivl
sarl
or
fnsave
aam
xchg
mov
cmp
or
mov
push
in
push
add
enter
jl
fisubrs
sbb
loop
sbb
sti
adc
sub
jns
bound
jmp
sbb
mov
mov
in
or
fs
rcrb
mov
dec
xlat
int
imul
repnz
cmp
xchg
and
or
or
adc
or
and
pusha
cmp
lea
loop
addb
jo
stos
xor
xchg
arpl
cwtl
or
dec
mov
sbb
pushl
and
add
mov
cmpb
sbb
jo
mov
dec
sub
je
jo
loopne
and
and
xor
call
dec
mov
or
jle
inc
test
cmp
daa
xor
fwait
push
push
dec
ret
arpl
cwtl
push
cmc
mov
inc
xchg
mov
outsl
inc
scas
es
cmpsl
lock
mov
daa
es
fbld
dec
push
sbb
ss
add
lods
mov
daa
mov
sti
ret
inc
or
es
popa
out
mulb
mov
dec
loope
mov
addb
cmp
enter
xchg
xchg
mov
repz
shrb
dec
add
rcll
jae
rcrl
or
push
ljmp
arpl
add
cmp
cmpsl
addl
mov
es
mov
xchg
dec
js
xchg
xchg
filds
shlb
int3
mov
add
mov
pop
fcoms
pushw
js
adc
lock
aad
xor
mov
jmp
das
into
and
jl
out
adc
jecxz
fimull
push
fstpt
popa
popa
lea
cld
inc
or
pop
jle
sub
repz
push
scas
mov
cli
jae
jecxz
in
adc
int3
jne
sar
mov
inc
cmp
addr16
jl
ret
in
push
or
jmp
lcall
sub
and
push
push
or
mov
mov
outsl
rcrb
push
fnsave
add
test
gs
test
shlb
rorb
scas
dec
mov
cmpsb
push
mov
dec
rol
cmp
xor
and
xor
stos
cs
mov
push
inc
sub
cmpsl
rolb
movl
lea
daa
ja
test
jne
movsb
stos
dec
mov
inc
jl
nop
jnp
jnp
mov
out
pop
js
data16
pcmpeqw
les
mov
add
dec
cmp
mov
push
cmp
rolb
dec
jb
in
mov
aam
in
in
xlat
stos
xchg
jae
xchg
sbb
cmp
imul
pop
cmpsl
mov
loope
shlb
push
xchg
test
movsb
add
mov
fsubl
push
and
daa
imull
stc
repz
lcall
ret
test
ror
dec
rol
hlt
sub
rol
rcrb
ficomps
adc
sbb
divl
jne
incb
test
dec
fiaddl
push
push
jnp
movsl
cltd
hlt
push
mov
out
jle
add
push
arpl
jp
adc
and
into
push
in
lock
aaa
inc
daa
and
sbb
push
fists
jecxz
pop
dec
call
mov
fsubl
bound
in
push
fwait
or
in
test
stc
sub
cmc
enter
cmp
lahf
call
outsl
ja
mov
inc
or
cli
fs
add
aam
add
in
mov
popf
xlat
push
pop
mov
popa
lahf
jbe
dec
outsb
mov
jne
stos
mov
sub
xor
mov
inc
int3
inc
jg
jecxz
lcall
hlt
test
inc
jg
push
xor
ss
in
jno
hlt
repz
test
cmc
add
push
cmp
gs
xor
lock
ss
lods
cmp
stc
insl
les
nop
pop
repnz
xchg
inc
std
push
inc
sti
push
sub
popa
and
pop
sub
sbb
test
cwtl
shrl
and
dec
jo
sub
xor
push
ror
dec
sbb
adc
sbb
movsl
mov
in
shll
add
pushf
clc
push
lret
cmpsl
out
mov
cmc
push
dec
or
push
out
test
das
mov
dec
loopne
jecxz
lods
subb
dec
cmp
inc
sbb
ja
push
pop
out
ret
cmp
or
call
jae
push
scas
dec
stos
jb
ss
fwait
call
dec
outsl
or
xor
pop
movsb
in
mov
lret
mov
sbb
test
adc
std
in
cmovb
data16
mov
lock
ret
clc
stos
stos
xchg
xor
je
aas
into
lds
scas
insb
js
pop
adc
inc
xor
xor
xchg
adc
jno
add
xor
std
leave
cli
mov
xor
leave
lds
and
fstps
lods
in
in
les
push
js
jbe
jecxz
idiv
testl
fdivrs
push
mov
cmpsl
adc
lahf
fs
sub
hlt
mov
add
insb
adc
repz
inc
mov
cmp
ret
daa
push
outsb
xchg
inc
outsl
leave
push
fneni(8087
sahf
dec
sbb
or
cs
in
inc
daa
pushf
notl
daa
mov
jmp
sbbb
int
mov
pop
mov
xor
lds
fsubs
ret
cwtl
out
fisubs
mov
or
fwait
jo
ss
jbe
test
sub
repnz
push
lods
lock
push
rol
stc
xchg
enter
xchg
repz
push
sbb
pop
fprem1
iret
testb
icebp
add
pop
cmp
ljmp
add
dec
inc
ficoml
pusha
cmp
dec
adc
ss
jae
sub
addr16
or
jmp
mov
xchg
mov
enter
icebp
imul
popf
inc
jp
je
add
or
lods
inc
or
pop
fwait
addr16
fcmovu
and
dec
mov
push
pop
addl
pop
ret
inc
fsubrs
stc
lea
cmp
out
dec
flds
push
hlt
fwait
inc
xor
mov
pop
ds
icebp
arpl
dec
nop
mov
outsl
pop
and
jo
mov
push
repz
xchg
lret
leave
icebp
adc
out
into
in
int
mov
enter
cli
xor
ret
lock
jne
pop
aad
rcl
stos
repnz
out
popf
inc
jo
cld
adcl
xchg
pop
je
sbb
push
icebp
or
ja
clc
add
cmp
mov
testl
cmp
jle
xchg
les
inc
push
pushf
mov
lret
and
mov
lds
and
aam
cmpsb
inc
adc
jns
mov
dec
rcrl
les
push
stos
and
cmp
dec
sub
mov
addr16
cmpsb
or
data16
jg
cmp
dec
sub
mov
movsb
mov
adc
jmp
cltd
dec
dec
rorb
addr16
mov
fbld
int3
js
outsb
insb
xchg
sbb
lods
sti
add
shlb
mov
xlat
int
dec
pop
adc
push
lea
sbb
lahf
aam
pop
push
jns
and
add
shlb
mov
pop
mov
mov
xor
daa
jnp
xor
dec
jb
lea
mov
push
stos
xchg
or
cwtl
insb
add
cmp
ret
pop
hlt
test
mov
sbb
fisttpl
pop
jbe
mov
insl
popf
pop
ror
add
and
imul
enter
jecxz
incb
push
mov
jo
popf
mov
mov
bound
xchg
int3
loop
pop
faddp
cltd
out
data16
mov
arpl
out
insl
out
mov
mov
mov
sbb
jl
push
clc
pop
dec
fcmove
mov
jle
sbb
or
push
addr16
sub
push
adc
inc
lods
ret
sbb
out
cmp
mov
add
scas
pop
rcll
cmpsl
jecxz
push
lods
inc
mov
test
xchg
repz
std
mov
imul
imul
cmp
inc
jo
dec
out
fstpl
pop
test
and
gs
aas
cli
mov
xchg
mov
pop
mov
fistpl
test
or
push
mov
lods
xor
scas
mov
jle
popf
adc
cmp
xor
xor
adcb
or
and
push
sbb
fiadds
fs
or
filds
rclb
sbb
add
pop
or
cltd
fwait
and
lods
inc
pmullw
xchg
push
shll
cs
ret
xchg
jp
nop
scas
cld
cltd
les
jl
push
mov
xor
and
dec
jno,pt
and
dec
ret
mov
mov
out
xchg
sub
sub
scas
fmuls
inc
scas
add
jmp
push
dec
inc
movsb
jbe
adc
cmp
mov
xor
fwait
and
jecxz
jecxz
pop
jns
pop
xchg
jb
xlat
xchg
push
shrl
inc
sub
out
pop
push
int
adc
push
js
in
into
test
das
add
out
shlb
mov
idivb
rcrl
lahf
movb
popf
pusha
dec
and
cmpsb
dec
sbb
xchg
movsb
mov
mov
xorl
push
test
adc
add
aas
inc
aaa
loope
ss
ror
xor
or
lock
xchg
cmp
gs
push
mov
push
sbb
test
mov
sub
mov
rcrl
repnz
lahf
pop
adc
outsb
hlt
out
sarb
pusha
jnp
mov
iret
rcr
pop
cmp
push
sub
or
xorl
arpl
add
sbb
xor
and
pop
jmp
cltd
outsb
xchg
adc
rol
adc
xlat
lret
sub
push
cmpl
xchg
dec
fdivl
jbe
jl
sub
mov
jo
mov
out
mov
push
push
inc
fs
test
movsb
push
movsl
mov
xchg
jl
movb
xchg
sar
lock
jne
xor
mov
cmp
sbb
xchg
pusha
jbe
push
in
sub
mov
ljmp
pushf
mov
inc
mov
cmc
leave
sbb
mov
imul
sub
or
repz
jmp
dec
in
mov
xchg
mov
out
push
mov
inc
aaa
out
int3
in
and
jbe
mov
gs
cmc
pop
je
push
cmp
add
dec
int3
lret
dec
xlat
jae
mov
jl
xor
cmc
stos
insb
sbb
hlt
repz
lods
call
std
xchg
je
movl
roll
in
test
inc
rsqrtps
jecxz
cmpsb
mov
jae
hlt
adc
dec
jno
jae
or
aaa
push
imul
push
leave
lods
xor
popf
test
or
pop
aas
das
jl
push
push
dec
xchg
movsb
ss
shrl
in
daa
or
fcompl
in
jle
cs
xchg
adc
inc
lods
add
leave
iret
outsb
adc
or
outsl
cmpsl
dec
add
std
in
ljmp
scas
ljmp
gs
or
add
mov
sbb
scas
push
mov
sbb
fldt
pop
lock
mov
bound
out
std
cmpsl
mov
lahf
and
scas
dec
pop
imulb
clc
mov
cmp
push
enter
stc
adc
pop
pushf
jae
adc
test
repnz
test
pushf
xchg
and
adc
inc
lahf
jo
ret
mov
cs
xchg
sub
mov
and
ret
movsl
sbb
loop
pop
and
jne
popf
out
int3
imul
jle
cmc
test
push
push
mov
mov
call
xor
add
adc
jne
and
lods
jge
mov
mov
mov
int
aas
repz
jns
push
pop
cmp
sbb
aas
mov
addl
in
pop
sbb
xchg
fnsave
dec
sbb
sahf
sbb
hlt
pop
inc
mov
dec
je
lret
test
mov
icebp
loopne
pop
scas
lods
pop
push
popl
push
cmp
adc
fstl
test
adc
sahf
pushf
xchg
loopne
push
mov
mov
dec
mov
dec
repz
pop
mov
and
sbb
jb
shlb
cmpsb
mov
lods
cmp
push
pop
pop
addr16
jle
cmc
pusha
stos
adc
shrl
outsl
sub
fcmovne
xchg
mov
lds
xchg
jae
stos
orb
mov
cwtl
dec
sub
jge
mov
sub
cmp
stos
push
call
push
iret
loopne
jb
cmp
push
dec
pop
sbb
jno
cmp
and
xchg
push
push
sub
push
and
sahf
hlt
sub
imul
daa
xchg
pop
cmp
decl
jo
roll
mov
mov
enter
and
ffree
cmpsl
and
push
add
cmc
je
and
aas
outsb
sub
les
pop
in
or
fisubrl
xor
push
lods
mov
pushf
xchg
pop
out
loope
mov
and
in
or
sub
out
jne
loop
ljmp
icebp
or
push
xchg
ret
pop
push
sub
jge
popf
lret
adc
add
push
or
and
into
je
sbb
mov
add
dec
mov
mov
push
lds
dec
cmovl
fdivrp
cmpl
pusha
or
cwtl
je
jbe
mov
ret
adc
mov
add
je
ret
es
push
and
or
mov
dec
sub
and
inc
jle
jle
out
je
add
sbb
daa
push
insl
adc
lahf
outsb
jle
insb
stos
rol
pop
sbb
sahf
popf
and
dec
arpl
std
and
and
cmp
jbe
cwtl
push
xchg
mov
mov
inc
jnp
xchg
cltd
mov
jp
dec
jnp
inc
push
mull
xor
dec
dec
lods
or
cmp
lods
dec
cmpsb
xchg
int3
dec
add
mov
iretw
jns
or
mov
insb
jne
data16
or
stos
aad
dec
or
mov
push
test
xchg
int3
pop
pushf
mov
aad
test
mov
push
pop
pop
mov
sbb
popf
mov
push
push
fisubl
push
test
jg
jo
sub
push
dec
nop
repz
notl
mov
dec
neg
stc
jl
push
push
mov
cwtl
push
iret
stos
add
loopne
sub
gs
dec
testl
aaa
push
pop
mov
inc
pop
push
bswap
mov
lcall
ret
push
lahf
dec
jg
jne
cmp
jb
cmpsb
or
push
cmp
loopne
xchg
sub
cmp
int3
int
in
sub
xor
xchg
dec
jp
fimull
loope
aaa
or
clc
xor
adc
push
dec
fisttps
out
cld
inc
stos
movsb
stc
movsb
in
mov
cli
jns
push
lods
add
test
xorb
push
test
stos
push
hlt
mov
xlat
pop
push
sub
xchg
fs
cli
mov
add
sti
inc
or
call
adc
out
xchg
xor
pop
push
jecxz
popa
and
cmp
sbb
mov
inc
mov
and
fdivr
mov
dec
cmc
push
pop
or
scas
adc
ret
sbb
inc
pop
push
fcmovbe
mov
in
fidivrs
int3
mov
jmp
repz
sbb
movsb
inc
mov
fmull
and
mov
or
cmp
aad
xchg
cmpb
sbb
loop
adc
dec
mov
adc
xchg
fdivs
push
orb
jge
stc
and
push
fs
dec
js
sti
sbb
lds
sbb
dec
stos
fwait
sbb
es
shll
mov
pop
test
enter
push
loop
outsl
xor
xorb
lahf
lret
pop
mov
ja
jne
push
ret
repnz
sub
hlt
bnd
fadd
sub
test
ds
mov
ret
sub
dec
cmp
dec
lds
push
and
pushf
push
sub
mov
mov
insl
imull
cli
lock
jae
xchg
mov
stos
mov
pop
cmc
mov
pop
jns
inc
popf
or
into
push
outsl
xor
test
push
or
addb
adc
fnstcw
cmp
dec
pop
mov
fidivs
out
xchg
jbe
push
mov
shl
fsubrp
inc
pop
sar
in
aas
cmp
mov
xchg
ret
xchg
xor
stos
mov
pop
cmp
ret
push
ficoms
push
push
xor
add
sti
push
test
xor
sti
jne
mov
pop
mov
or
dec
mov
push
pop
in
dec
and
test
or
dec
les
mov
imul
sbb
nop
imul
imul
inc
mov
jmp
mov
int3
inc
mov
data16
pop
into
mov
jmp
addr16
mov
add
imul
push
lea
jns
mov
dec
dec
mov
xchg
xchg
mov
cmp
out
decl
lock
stos
jl
lahf
sbb
test
xchg
mov
push
test
adc
dec
adc
pop
and
cld
mov
dec
gs
dec
bswap
xchg
mov
add
ret
clc
mov
stos
inc
cmc
jecxz
mov
shlb
dec
and
xor
scas
jbe
pop
outsb
loope
loope
loope
sbb
dec
adc
jp
out
lcall
cmp
sbb
lret
sub
test
scas
or
mov
sub
movsl
sub
or
lock
popf
add
sub
sbb
out
cwtl
test
adc
pop
cmc
or
sub
std
daa
and
jecxz
mov
imul
and
loope
popa
adc
adc
and
lret
out
cmpsl
inc
sub
cwtl
in
mov
ljmp
and
out
shrl
inc
das
and
mov
inc
lea
je
push
subb
daa
adc
imull
imulb
popa
lret
or
leave
cmpsb
push
mov
mov
jnp
add
lcall
xchg
sbb
rcrb
pop
push
hlt
and
lret
stos
xor
xchg
movsl
into
cmp
pop
inc
dec
fcoms
mov
gs
mov
not
aaa
mov
aaa
shll
jo
cmp
prefetcht0
fisubrs
gs
ret
imul
fildll
aad
js
lcall
fxch
xchg
das
or
or
icebp
adc
icebp
ret
sbb
mov
sarb
adc
daa
pusha
mov
scas
jecxz
arpl
fsubrl
ja
outsb
int3
pop
aam
pusha
pop
xchg
mov
ficoms
insb
mov
xor
stos
push
aaa
ret
inc
and
inc
xor
jmp
mov
xor
lcall
xchg
xchg
js
and
sbb
xchg
sar
aas
mov
outsl
test
rolb
add
and
inc
lret
cmc
xor
je
adc
fcmovnb
push
xor
rcl
imul
jl
stos
jg,pt
jp
jle
inc
addr16
mov
adc
xor
mov
xor
push
cld
pop
inc
mov
inc
shlb
sbb
pop
or
mov
fsubrl
out
sub
dec
dec
and
popf
and
in
mov
ljmp
cli
ljmp
movsl
jge
lods
cmp
xor
sbb
mov
and
or
sub
push
pop
jb
sbb
out
lock
sbb
or
pop
mov
inc
cli
sub
push
jne
pop
mov
mov
test
dec
pop
sub
std
leave
jle
les
lods
xchg
scas
push
mov
fadds
mov
mov
add
and
imul
or
xor
push
cmpsl
and
mov
jmp
inc
dec
and
jmp
jp
sbb
pop
xchg
sarb
scas
mov
lods
jmp
add
push
lret
les
xchg
inc
jnp
rclb
mov
mov
cmp
outsl
hlt
bound
and
cvtpi2ps
mov
mov
dec
or
dec
cwtl
push
mov
ret
push
add
inc
scas
aad
or
ljmp
cwtl
push
mov
repnz
outsl
dec
adc
mov
push
out
xor
jo
xchg
mov
jno
mov
xchg
loopne
in
sti
push
fsub
mov
pop
mov
movsb
mov
stc
call
adc
mov
dec
sahf
fsubr
mov
in
fwait
jmp
idiv
sbb
ret
test
mov
imul
xchg
and
push
nop
or
dec
add
mov
adc
pop
sbb
push
adcb
mov
test
pop
xchg
sbbb
es
es
aad
leave
jg
add
sbb
cmp
popf
jmp
imul
sub
mov
sub
insl
mov
divb
mov
push
rol
or
mov
adc
fstps
popa
mov
or
sub
cmp
pop
adc
or
cmpxchg
cmp
and
ljmp
jb
push
adc
clc
sbbl
push
cli
inc
je
loope
add
xor
mov
cmp
push
push
push
sub
hlt
stos
mov
fnstsw
cmc
mov
loop
ret
stos
ljmp
aam
add
or
ja
sti
mov
sbb
sahf
jmp
mov
cli
and
mov
adc
lret
xor
shll
inc
inc
sbb
dec
nop
mov
inc
gs
push
jmp
sbb
jmp
adc
mov
sahf
loopne
out
in
ret
sbb
xor
jl
jg
push
sbbl
icebp
mov
cli
aam
sbb
cwtl
pop
mov
popa
adc
pop
pop
sarb
pushf
and
mov
rolb
pop
fcomps
and
lahf
push
retw
mov
or
lds
loop
rcl
add
std
ret
arpl
mov
dec
pop
xchg
and
xlat
in
mov
add
pushf
aaa
xor
push
sbb
out
jnp
mov
sbb
xor
fwait
les
pushf
popa
cmpsb
push
out
add
sub
xchg
mov
or
out
mov
fwait
cs
cmpsl
pop
adc
hlt
jne
in
mov
imulb
ljmp
jp
mov
dec
pop
inc
pop
call
push
outsb
sarl
in
or
and
mov
push
sub
pusha
push
and
mov
iret
or
inc
aas
stos
hlt
mov
sbb
pop
lea
cs
outsl
adc
fwait
jl
lea
pop
xor
outsl
and
rcrl
push
clc
mov
pop
adc
or
cld
leave
pop
jge
mov
insl
loope
out
mov
xor
pushf
mov
int
and
jb
popa
push
mov
cmp
leave
je
std
mov
sub
add
clc
lds
sbb
jp
stos
sbb
ja
adc
xchg
pop
mov
mov
pop
es
dec
xchg
and
cmpsl
ret
dec
lahf
cmp
cmc
lods
in
fsts
rol
pop
mov
push
add
jae
inc
lret
jb
push
xchg
add
popa
or
clc
cmp
andb
repz
ret
std
imul
es
add
xor
adc
add
out
dec
xchg
or
add
sbb
int
mov
dec
divl
add
addr16
dec
adc
movsb
add
and
fildll
add
mov
pop
or
inc
addr16
rcl
push
inc
inc
in
ja
out
mov
dec
imul
stos
ja
fs
mov
push
mov
jnp
jno
cli
test
adc
sbb
push
push
imul
arpl
add
scas
insb
jmp
sbb
adc
mull
shlb
cltd
loop
mov
jns
xchg
aas
rcll
pop
ret
dec
and
movsb
mov
pop
mov
call
rcrl
out
xor
and
dec
pop
mov
push
xchg
js
out
xor
mov
add
shlb
scas
ja
clc
and
std
leave
ljmp
insb
jmp
cld
inc
ljmp
imul
mov
shl
ficoml
lock
pop
or
jecxz
add
sbb
jmp
subl
insl
andb
ljmp
adc
mov
leave
dec
push
adc
gs
or
loope
xchg
movsl
lret
jb
test
xchg
lds
mov
push
pop
lahf
int3
iret
lahf
sbb
rep
fistl
fidivs
jp
push
arpl
and
jg
inc
jns
and
insb
rol
adc
xor
leave
movsl
adc
popa
aam
cmc
and
adc
iret
das
and
add
cltd
pop
sti
sahf
ds
psllw
int3
xor
dec
mov
push
or
fwait
push
push
inc
mov
cmc
mov
sti
xchg
out
das
jno
stos
or
mov
in
push
push
add
sahf
sub
shrb
and
sbb
dec
ss
stc
cmp
xchg
pop
aam
add
xor
aas
mov
cmpb
scas
sbb
pop
popf
arpl
jecxz
and
movsb
pop
inc
xchg
das
pop
inc
loopne
xor
sbb
in
rol
in
xor
sbb
daa
aaa
pop
addr16
lea
xlat
ss
mov
call
mov
sbbb
std
inc
mov
ret
xchg
ret
out
push
xor
ret
mov
mov
adc
jle
mov
xchg
leave
aad
xchg
notb
and
push
xor
cmpsb
psadbw
xor
mov
ljmp
or
mov
inc
daa
push
movsl
cltd
xchg
xor
sub
cs
push
or
icebp
pop
pop
lea
and
lahf
lcall
jbe
cmp
xlat
addr16
bound
test
mov
arpl
push
outsl
sub
sbb
pusha
xor
mov
fnstsw
ret
lcall
sbb
fimuls
das
outsl
inc
mov
in
adc
xchg
hlt
and
xor
mov
mov
int
in
mov
add
arpl
sbb
ret
test
pop
dec
bound
pop
loop
cmp
loop
fists
inc
fwait
and
mov
sbb
lahf
dec
in
push
cmp
sub
xchg
imul
mov
fsubrl
add
nop
lahf
or
std
sbbl
stos
pop
mov
sbb
xor
test
jo
jl
xor
mov
inc
xchg
jns
sbb
filds
and
insb
call
mov
mov
ds
add
xchg
nop
out
movsbl
test
je
cwtl
and
fmull
jmp
test
cmp
push
out
xchg
insb
out
xchg
jno
pusha
rorb
lret
cld
mov
push
mov
mov
scas
je
cmp
out
sbb
js
leave
lods
fcomps
push
sub
outsl
mov
xor
and
push
cmpsl
daa
loope
aaa
mov
add
and
cli
xchg
jbe
ss
jbe
pop
cmpsb
shlb
sbb
mov
adc
stos
sahf
mov
sbb
pusha
mov
sarl
jb
shlb
fwait
out
sub
xor
out
jmp
lock
mov
sub
fldl
repnz
push
pop
imul
sub
mov
adc
cmc
mov
mov
movsb
jecxz
mov
int
xchg
cmp
cmp
and
leave
mov
shr
out
fs
sbb
jl
mov
or
mov
fidivl
aad
fcmovnb
jae
aam
negl
fcomps
or
sbb
dec
lods
xor
icebp
cs
daa
enter
xchg
stos
leave
mov
pop
das
aaa
xor
in
mov
fldenv
push
das
sahf
mov
sbb
jmp
jb
jl
aam
sub
xchg
cltd
jl
stc
stc
imul
pop
and
lret
push
xchg
jl
shrl
jl
fsubrp
lret
aas
mov
and
dec
arpl
sysenter
jnp
fsub
xor
mov
pop
jbe
insb
es
xor
loopne
mov
sbb
clc
sti
rorb
xor
sti
mov
aas
adc
rcrl
mov
inc
jmp
add
mov
js
pop
fcoms
lds
loopne
xchg
loope
push
iret
and
xor
ja
repz
add
push
lods
jg
and
int
push
rcll
lock
mov
add
arpl
scas
fstps
fdivrs
mov
sbb
data16
pushf
xchg
je
cmpsl
dec
mov
popf
jns
and
pop
js
pop
test
shll
or
test
cs
sbb
cmc
in
dec
shr
mov
cs
out
lds
mov
mov
jnp
lret
iret
movsl
jo
fld
mov
sahf
ret
push
pop
push
fldl
mov
pop
das
cli
test
hlt
mov
jne
mov
fiaddl
add
cwtl
jbe
aad
jmp
into
insb
pushf
sbb
repnz
out
or
sbb
outsl
cmp
inc
jmp
inc
fistps
rclb
xchg
or
add
lea
xchg
mov
or
or
rcrl
out
subl
mov
mov
pop
dec
lods
iret
cwtl
mov
push
imul
mov
rol
notl
mov
in
clc
adc
cmpsl
test
fs
pop
push
dec
add
dec
out
jp
fbstp
flds
xchg
int
push
js
leave
jg
iret
inc
orb
mov
mov
fistpl
jns
xchg
lret
fcomps
xor
dec
pop
xor
mov
mov
lret
sub
ja
leave
mov
sbbl
mov
mov
js
int3
ret
fnstcw
test
sahf
psrlw
in
pusha
lahf
ret
fnstenv
push
xchg
mov
and
inc
out
pop
insl
push
fwait
rol
out
push
adc
dec
sahf
and
in
xchg
inc
subl
cltd
xor
das
xchg
popa
mov
lods
in
ret
sub
lods
mov
out
scas
mov
push
loope
sti
mov
mov
mov
sbb
lret
or
cld
sub
lods
sub
rclb
jno
mov
mov
popf
loope
xor
pop
push
iret
pushf
mov
cld
out
mov
bound
cld
inc
jge
out
inc
scas
push
mov
adc
jle
cmp
int
sub
lcall
in
jmp
or
mov
leave
push
dec
pop
pop
imul
idivb
xchg
mov
adc
mov
xor
sub
or
arpl
mov
ja
rcrb
popa
mov
ja
push
movsb
scas
push
movsb
ss
addl
aaa
jno
loopne
sbb
js
push
inc
pop
aas
int3
mov
cmpsl
mov
push
sbb
pop
dec
push
mov
lock
or
bound
mov
js
sbb
pop
and
jbe
push
mov
pop
push
test
sar
mov
add
sarl
orl
pop
push
mov
stos
ret
jle
adc
lock
xchg
push
stos
fisubrs
dec
sub
int3
addr16
movsl
xor
jae
mov
xor
jo
mov
loope
out
orb
xchg
mov
js
int
lret
out
mov
adc
add
shrl
sbb
add
push
inc
jl
imul
add
mov
push
xor
and
in
sarb
pusha
test
dec
rcll
adc
leave
dec
or
sbb
sarl
movsb
push
ficompl
test
or
data16
sub
push
inc
and
inc
leave
aas
dec
mov
sti
lret
and
lods
aam
lret
pop
sub
daa
leave
and
mov
jp
cltd
or
dec
pop
fcomps
aaa
rcrl
das
mov
ss
pop
push
pushf
cmpsb
popa
ss
inc
std
push
mov
mov
fisttpll
sub
sbb
testb
push
xor
test
je
push
sbb
xchg
aam
push
out
mov
clc
jl
jge
rcll
mov
fdivs
das
adc
fninit
inc
repz
jge
incb
cmc
fildll
pop
pop
pop
jmp
mov
es
or
dec
scas
add
sbb
sub
push
mov
xor
sub
cmpsl
repnz
shl
fisubrl
inc
jae,pn
push
je
jmp
xchg
push
movsl
in
hlt
pushf
sbb
dec
xor
lods
daa
imul
or
lods
sub
loop
mov
cwtl
push
adc
jmp
mov
dec
mov
mov
sub
int3
fildll
adcl
or
xor
xorb
dec
cwtl
inc
xchg
xchg
jno
outsb
and
sbb
insb
sbb
outsb
mov
loopne
fs
imul
int
adc
add
adc
cmpsl
in
cmp
jg
sub
mov
add
imul
and
sbb
xchg
je
mov
in
pop
shll
lea
jmp
xchg
in
pop
mov
mov
loope
mov
js
cs
aam
mov
push
mov
bound
xchg
mov
daa
dec
cwtl
iret
iret
push
rcrb
int3
mov
mul
mov
popa
ljmp
pop
scas
sbb
arpl
sbb
js
idiv
repz
xor
mov
fcoml
cltd
out
xor
cmp
pop
adc
and
pop
loopne
fstps
mov
jle
outsb
xor
xchg
popf
push
jb
je
sti
mov
sbb
and
and
push
dec
jae
xchg
mov
jns
pop
jmp
mov
pop
mov
dec
push
sub
sbb
xchg
dec
inc
cli
fsts
add
jb
jmp
or
lea
sahf
push
mov
cmp
push
out
addr16
adc
xchg
bndstx
and
push
mov
mov
int3
cmc
loop
lret
xor
pop
fisubrl
das
cmpsl
adc
cld
lret
gs
and
sahf
dec
fcmovnb
enter
mov
pop
add
mov
out
xchg
dec
fisubrl
pop
nop
mov
bound
adc
jnp
cmpsb
scas
xchg
into
mov
dec
xchg
ljmp
mov
sbb
in
and
xchg
inc
shll
inc
mov
mov
push
mov
xchg
ljmp
add
jb
out
cmpsb
popf
adc
stos
arpl
or
fbld
mov
sbb
aam
mov
imul
sub
frstor
and
sbb
cmp
lea
inc
xor
lds
cmp
jnp
mov
push
push
pop
ss
es
jb
aaa
test
xchg
mov
fwait
jp
pcmpgtd
insb
dec
jbe
call
test
sbb
xchg
out
sub
gs
into
dec
sub
scas
pop
sbb
out
inc
gs
iret
mov
in
subb
pushf
pushf
js
dec
aam
cmc
sti
test
sub
scas
rclb
inc
or
add
in
cli
dec
jae
add
mov
je
mov
mov
ds
adc
mov
and
jb
cmpb
fdivl
nop
mov
ret
add
adc
call
lret
dec
sbb
stc
rcrb
cs
shr
aam
std
pop
movsb
movsb
jmp
push
outsl
jl
mov
xor
leave
je
jbe
ljmp
in
add
pop
inc
jge
cmc
xchg
or
xchg
sbb
jl
pop
mov
xchg
ljmp
add
shlb
cmpsl
xor
outsl
inc
pop
ret
aaa
cmp
push
and
outsb
test
dec
cli
jb
dec
push
mov
xchg
push
test
push
test
in
shl
jnp
push
mov
sub
push
cmpsl
mov
xor
xchg
ss
mov
inc
rcll
jb
arpl
mov
pop
nop
test
add
push
mov
jecxz
rep
xchg
pop
repz
int
aas
xor
adc
xor
stos
stos
add
mov
lret
mov
mov
push
mov
addr16
sbb
xchg
add
xchg
leave
inc
jle
es
sbb
push
addr16
stc
std
inc
fbstp
jecxz
lea
dec
hlt
or
shrb
mov
inc
iret
jno
push
mov
fldenv
mov
mov
loop
add
adc
inc
std
xchg
or
cmpsb
sub
cmp
and
stc
imul
adc
fwait
push
push
shll
leave
imul
rorb
xlat
push
add
adc
jns
mov
sub
jg
daa
cmp
cmp
scas
adc
jae
xor
jbe
and
pop
lcall
iret
jle
jne
fucomp
push
mov
cld
cld
int3
jle
mov
sar
and
pop
sub
cwtl
mov
in
movsb
push
push
jmp
sub
or
mov
pusha
adc
test
aam
mov
sarb
adc
sbb
pop
inc
push
mov
fidivrl
popf
mov
sub
mov
lahf
addl
or
test
mov
pop
xor
mov
cmp
test
push
out
in
mov
jp
inc
xchg
lock
test
test
bound
adc
test
xor
push
or
push
and
lea
jge
and
fnstsw
call
mov
mov
flds
push
popw
outsl
mov
cmc
arpl
fldenv
sub
ret
jg
in
aaa
shr
cltd
inc
lret
mov
sarl
adc
ret
inc
jp
dec
add
mov
ret
testb
jo
jl
add
insl
mov
dec
and
add
movhps
outsb
mov
cwtl
dec
jo
adc
pop
push
mov
idivl
addr16
sub
xor
out
mov
shrb
and
insb
sub
cmp
dec
push
movsl
or
or
data16
pop
in
xchg
pushf
mov
fidivl
sub
popf
test
jl
ret
xor
xor
ret
negl
xor
in
dec
sbb
push
cld
int
movsl
cmp
jo
test
aaa
insl
inc
es
inc
mov
test
movsb
pop
dec
stos
popf
dec
ds
xchg
push
push
or
xor
loopne
pusha
jp
jle
push
mov
psubb
and
inc
push
inc
xchg
mov
loop
stos
sbb
shlb
mov
push
push
lret
adc
xchg
aam
loopne
cmp
sub
mov
cmp
jb
mov
lock
subl
sahf
notl
fwait
stos
add
xor
inc
dec
mov
fadds
addr16
call
adc
outsl
int
sub
xchg
mov
mov
xchg
or
xor
adcb
cmp
and
sbb
aas
and
bound
in
ljmp
mulb
xlat
loopne
fcomi
loopne
mov
dec
dec
mov
mov
mov
int
into
sbb
or
xor
dec
dec
dec
inc
adc
repnz
sub
mov
xor
inc
aaa
push
xor
and
push
sub
inc
mov
push
in
xor
in
pushf
fmuls
inc
inc
jbe
adc
es
or
ja
pusha
push
inc
hlt
scas
mov
adc
cmpl
loopne
xor
mov
std
shlb
inc
sarl
stc
inc
xchg
cli
xchg
xchg
enter
or
fsubrl
out
mov
cmp
ja
xlat
sbb
sbb
ret
in
mov
add
mov
in
lahf
xchg
fs
sub
movsl
add
push
adc
pushf
sti
out
arpl
jnp
fisubl
sub
pop
outsb
lahf
out
and
pop
push
inc
xchg
enter
jl
nop
test
inc
fsubrp
loop
test
sbb
and
iret
sbb
cltd
stos
sub
add
dec
add
mov
icebp
std
pop
add
sub
pop
push
cltd
popf
add
and
imul
cmc
xor
ret
pop
mov
push
mov
mov
stos
mov
fcomip
aam
nop
std
inc
inc
out
mov
cmp
inc
sbb
xor
fcmovb
add
push
ret
sub
lret
hlt
sbb
or
cmp
mov
jns
inc
stos
inc
imul
pop
bound
or
and
xor
or
sarl
in
shl
lds
cmp
inc
pop
inc
add
push
cmp
xchg
test
add
jle
jbe
push
cmp
lret
push
dec
js
lret
cmp
jl
je
fadds
mov
fucomip
aam
jmp
push
sbb
lods
in
xor
mov
and
sbb
xchg
iret
cwtl
xchg
repnz
xlat
cmpsb
sbb
mov
sarb
cmp
call
loop
rcrl
add
or
ficoml
outsb
mov
sbb
insb
scas
jecxz
mov
sub
sub
sbb
lcall
hlt
mov
jmp
negb
xchg
stos
pushf
cmp
push
mov
jl
test
sarb
sbb
xor
pop
cmp
add
into
push
mov
ljmp
out
cs
cmp
jle
xor
daa
arpl
sub
cmp
mov
xchg
dec
xlat
aad
inc
cmp
rcll
mov
xor
out
in
mov
add
ljmp
or
jae
mov
lret
mov
adc
push
inc
and
lcall
test
cmp
movsb
and
xchg
mov
xchg
mov
arpl
mov
adc
xor
popf
enter
push
or
js
jbe
fsts
pusha
jge
cmpsl
inc
mov
dec
insl
xchg
outsb
xchg
xchg
jmp
adc
add
inc
scas
push
xchg
jno
out
cltd
add
or
ja
out
sbb
and
in
leave
pop
or
sarl
shr
pop
ret
mulb
fcmovu
pop
mov
mov
adc
lock
inc
sysexit
out
adc
adc
mov
dec
mov
jae
loop
mov
dec
cwtl
addr16
daa
nop
xchg
enter
je
ja
pop
mov
je
mov
jne
clc
shlb
dec
jg
cmc
push
lret
push
loope
jl
jge
pop
test
popf
xchg
inc
sbb
mov
ret
outsb
cmpsl
push
sub
shrb
out
add
and
push
add
inc
jle
sbb
mov
xor
movsb
enter
pop
xor
js
xchg
jbe,pt
sbb
mov
mov
mov
scas
fidivl
fs
xchg
in
rolb
lods
cwtl
repnz
lds
inc
fistpll
jge
xor
aad
addl
dec
mov
test
add
sar
andl
pop
sub
hlt
dec
sbb
fs
sarl
inc
jecxz
out
cmpsb
dec
lret
mov
jo
ret
push
xchg
fmull
adc
pop
mov
idivl
xchg
sub
std
jbe
fsubr
mov
cmp
loopne
adc
xchg
xor
pop
pop
jo
jne
adc
lret
test
sbb
inc
push
cmpsb
into
sub
in
int3
xchg
test
xor
outsb
lret
xchg
dec
das
mov
xchg
outsb
sbb
out
sub
sub
sbb
loopne
dec
inc
xor
ljmp
adc
cltd
and
and
repnz
pop
insl
pop
js
stos
les
mov
lcall
push
mov
dec
fwait
inc
mov
or
xchg
cmc
or
leave
aaa
mov
sub
stc
adc
pop
sbb
imul
dec
dec
data16
sbb
add
and
ret
loope
lahf
sbb
jb
xchg
pop
fsubrs
cmpsb
daa
icebp
fldt
lret
push
outsb
inc
ds
or
or
or
stc
jge
sarb
ja
inc
outsl
fmul
outsl
enter
pop
mov
or
or
sbb
mov
cmp
xor
xchg
or
orl
daa
pusha
jl
xor
out
cmp
sbb
aas
mov
lcall
jle
cmpsl
push
xor
pop
xor
xchg
sbb
lret
mov
push
sti
mov
cli
mov
jns
push
jne
cmp
sub
cmpsl
icebp
movsb
lcall
adc
mov
xor
jg
ret
mov
sbb
sub
scas
dec
stc
push
imul
and
jns
cmpsl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
call
mov
push
call
lea
push
lea
push
call
test
jne
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
call
movl
jmp
movb
movb
push
call
movb
movl
mov
push
call
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
push
push
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
push
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
movl
call
mov
push
push
push
push
mov
call
call
push
push
push
push
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
call
lea
push
call
push
call
cmpw
push
je
push
call
push
call
add
jmp
call
cmp
push
int
xor
popf
adc
jae
popa
pop
push
int
xor
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
ror
negb
xor
out
pop
add
not
fcomip
and
push
stos
jp
mov
jg
adc
push
mov
and
out
addr16
push
push
sahf
repnz
cltd
stc
ja
jge
aaa
std
pop
push
int
xor
mov
jle
enter
cmpsl
cld
fsubrp
inc
jp
pop
aad
push
xor
sub
mov
scas
roll
xor
fcomps
sti
decb
lahf
mov
out
pop
das
loop
ja
pop
pop
xchg
sub
jp
les
out
adc
sbb
push
add
push
test
xchg
sbb
aas
pop
nop
int
xchg
inc
mov
enter
xor
jo
js
pop
sbb
jle
cwtl
jo
cmp
rcl
negb
cmp
shlb
lock
adc
jo
cmp
pop
push
int
xor
jo
cmp
shlb
jne
cmp
pop
push
int
xor
pushf
adc
jo
cmp
shlb
negb
aas
fstps
int
and
jo
cmp
shlb
pusha
jae
fstps
int
xor
push
js
mov
push
int
add
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
adc
xor
jo
sub
xor
and
jle
push
push
int
xor
jo
sub
mov
adc
push
push
int
xor
jo
cmp
shlb
push
jae
cmp
int
xor
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
shlb
jo
cmp
clc
xchg
sub
je
pop
in
mov
roll
pusha
mov
cmp
pop
mov
mov
inc
dec
dec
push
xchg
jmp
out
rclb
push
adc
pmulhuw
lods
mov
push
loopne,pt
or
or
popf
adc
mov
sub
call
test
pop
dec
pop
pop
lahf
mov
fwait
imulb
jb
cmp
fnstcw
mov
xchg
fnstsw
jns
lea
out
aad
and
cmp
mov
popf
mov
fdivp
jne
sbb
adc
imulb
xchg
adc
bnd
and
int3
adc
sbb
sbb
mov
stos
inc
xchg
mov
cmpsl
mov
jns
xchg
rorb
and
out
outsb
arpl
mov
cltd
mov
lret
jmp
jmp
popa
sbb
add
test
repnz
or
pop
das
leave
imul
mov
push
dec
pushf
stos
outsl
decb
jae
push
jb
adc
loopne
mov
mov
out
lret
pop
iret
out
movsb
fidivl
ror
leave
mov
popa
in
adc
fildll
ds
je
int3
mov
ljmp
popa
mov
in
cmpsb
je
mov
cmp
push
jp
mov
movups
and
inc
mov
dec
mov
cmp
rclb
and
cmpsb
xor
test
lret
xchg
int3
sbb
stc
int
insb
mov
xchg
xchg
ds
mov
pop
or
into
out
adc
mov
insl
je
mov
sbb
movb
insl
les
mov
push
dec
jp
cli
xlat
test
cmp
cmpsl
xchg
push
push
jge
test
scas
mov
ja
jmp
xchg
scas
fldenv
xor
das
jae
and
and
mov
pop
mov
xchg
sub
addr16
es
jae
hlt
mov
in
insl
adc
xchg
mov
or
push
mov
cmp
loop,pn
outsl
sahf
cmp
outsb
loopne
mov
jae
xchg
fisttpl
bound
cmp
push
or
and
and
inc
xchg
aam
mov
xchg
jle
scas
or
lods
test
ret
adc
lret
jle
scas
ret
mov
add
rorl
outsl
mov
mov
mov
sbb
cli
add
inc
push
pop
out
mov
in
imul
iret
pop
cld
iret
fbstp
aaa
push
loop
test
xorl
jbe
rolb
js
push
in
movsb
aas
mov
sbb
and
jmp
fpatan
xchg
sbb
adc
and
and
xchg
cltd
inc
repz
mov
mov
jno
stos
or
jae
sbb
test
fsubrl
pop
or
cmp
mov
jge
loopne
dec
inc
add
lahf
les
mov
mov
stos
sub
fstps
jp
stos
mov
sub
inc
cmpsl
das
aam
push
add
mov
add
roll
lock
sti
data16
out
or
es
int
add
jp
cmp
xchg
sub
in
jns
or
dec
push
bound
cmp
push
popa
dec
adc
jae
adc
pop
nop
xchg
inc
sub
jle
cwtl
cmp
mov
cmp
inc
jb
xchg
pushf
mov
cmpsl
orb
adc
stos
pop
xchg
jo
aad
add
mov
add
cld
sbb
test
scas
in
data16
pop
push
inc
sarl
fwait
xchg
testb
dec
or
inc
inc
movl
xchg
mov
adc
movsb
xchg
js
mov
rolb
pusha
xchg
mov
xchg
xor
mov
jg
add
daa
or
mov
inc
jg
mov
cmp
out
mov
lcall
mov
inc
push
mov
sahf
daa
xor
imul
pop
loope
ss
pop
push
mov
add
push
daa
in
repnz
cmc
scas
sub
adc
test
push
rclb
sub
jg
inc
mov
loopnew
imul
int3
repz
add
push
cs
rorl
mull
jb
hlt
inc
pop
nop
push
add
jmp
test
inc
xor
push
inc
loope
mov
rolb
ret
sub
cmp
bound
dec
sbb
sub
arpl
mov
lss
fwait
mov
push
mov
cmpsl
dec
mov
stos
ds
movsl
je
jmp
xchg
xchg
jle
in
lcall
push
popf
mov
xchg
cmp
sti
mov
push
push
and
lret
xchg
das
cmp
xchg
stos
mov
xorb
or
aas
jecxz
jl
jmp
mov
fwait
push
push
jae
fucomip
dec
les
xor
iret
mov
cwtl
hlt
ss
xor
rcll
lahf
jns
cmpb
inc
sbb
inc
mov
mov
mov
mov
in
cltd
ja
into
dec
test
pop
fidivrl
call
adc
negb
sub
rol
insb
clc
push
sarl
push
dec
xchg
jb
pop
dec
inc
and
lock
sub
adc
cld
lret
mov
dec
mov
mov
ss
or
test
cmp
jno
cwtl
call
lea
lret
jnp
mov
mov
inc
in
dec
push
push
lock
or
cmpsl
pop
repz
pop
mov
arpl
mov
divb
push
sbb
sbb
pop
negl
insl
push
or
sub
xor
stos
push
add
push
jecxz
cmp
adc
aam
sub
dec
sbb
aas
mov
adc
mov
data16
and
scas
jne
sbb
es
test
or
cld
rol
push
jne
xchg
aad
push
in
mov
outsl
push
hlt
xorb
scas
enter
jnp
shlb
ljmp
mov
and
xchg
testl
lret
inc
push
mov
shrl
movb
jne
sbb
sub
int3
cmp
jg
mov
fmuls
das
xchg
pop
and
data16
mov
jnp
pop
loopne
pop
daa
jecxz
cmpsb
and
pop
in
outsb
cmp
and
ss
jp
in
inc
inc
dec
test
test
pop
movsb
sbb
cltd
cltd
movsb
clc
mul
lret
xor
jae
enter
imul
xchg
cmpsb
dec
ja
les
push
xchg
pop
mov
sub
xor
sbb
mov
es
inc
dec
in
push
push
and
cltd
dec
lret
int3
lods
jo
or
sahf
je
mov
fs
pop
inc
push
sar
dec
sbb
out
mov
jle
stos
mov
imul
test
outsl
push
into
mov
pop
jb
adc
push
jle
cltd
roll
outsl
add
movswl
fiaddl
lret
adc
sbb
icebp
fldenv
imul
fdiv
scas
movsl
shll
xchg
lock
imul
scas
cmp
jl
push
sbb
idiv
dec
cmp
or
dec
lods
dec
pop
xor
mov
neg
xchg
xor
das
pop
push
mov
adc
jg
jmp
cmp
mov
dec
add
add
stos
call
pop
aas
mov
inc
outsb
out
rcrl
loop
mov
fcmovb
call
sahf
dec
pop
sbb
jno
jmp
fiaddl
xchg
cmpsb
sbb
test
lock
or
cmc
mov
or
cwtl
mov
popa
out
rclb
add
push
mov
lods
or
nop
inc
cwtl
and
xchg
push
mov
sbb
fidivrs
xor
push
xchg
nop
xor
addr16
ljmp
ljmp
inc
mov
sub
push
or
ret
sahf
or
bound
and
sahf
pop
add
or
je
les
sbb
lret
movsl
std
jno
jmp
loopne
mov
mov
mov
imul
sbb
cmc
xor
out
xlat
rcrb
mov
gs
in
pushf
mov
pop
jbe
jp
std
je
stc
jae
fcoml
adc
sub
jp
stos
stc
xchg
ljmp
jnp
nop
cmp
mov
cmpb
inc
mov
xchg
fs
adc
xor
js
enter
in
xchg
lock
mov
xor
cmp
int
add
and
cmpps
arpl
xchg
inc
scas
pop
sbb
mov
cmp
dec
lcall
sbb
cmp
outsb
dec
push
xchg
fnstsw
sbb
adc
cmp
push
push
fistpl
leave
pop
cmp
es
das
pop
xlat
gs
mov
aad
lods
fistps
mov
jae
push
hlt
faddl
fisttpll
aas
and
scas
push
xor
js
aas
dec
add
jp
sbb
sarl
sub
cs
das
outsl
mov
dec
cmp
push
dec
xchg
testb
test
jns
scas
pusha
mul
rcrb
mov
mov
mov
mov
mov
lds
mov
popl
jne
mov
sahf
push
daa
inc
or
incb
inc
and
adcb
xor
inc
or
mov
sarl
into
jnp
xor
mov
cld
lea
in
insb
push
mov
frstor
mov
pop
popl
xchg
scas
mov
xor
addb
or
cld
fsubrs
out
push
or
and
enter
push
and
in
dec
fmulp
inc
gs
jl
jl
in
in
out
lock
pop
push
icebp
cwtl
cmpb
movsb
mov
and
push
iret
das
aas
ljmp
mov
mov
ficompl
pmulhuw
or
mov
mov
inc
icebp
add
jmp
in
xor
pushf
cmp
js
push
iret
xchg
mov
clc
mov
mov
das
outsl
sbb
pop
cmp
or
clc
int
push
jae
into
jne
arpl
adc
fnstcw
scas
les
sub
or
lods
stc
pop
xor
jp
and
ficompl
mov
lret
stos
push
mov
xchg
test
call
inc
ss
dec
mov
movsb
std
mov
push
rclb
sti
jecxz
mov
fcoms
xor
sbb
mov
test
sbb
sub
mov
xchg
mov
inc
add
and
mov
mov
int
and
cmp
fs
mulb
jbe
or
daa
je
mov
mov
leave
cmpsb
cmp
scas
fucomi
rclb
mov
ret
stos
sbb
mov
jecxz
test
mov
and
push
pop
aas
cwtl
mov
jbe
in
lock
divl
in
loopne
cs
or
pushf
push
dec
push
push
mov
inc
inc
xchg
jp
mov
dec
in
fwait
mov
neg
je
fildl
leave
mov
idivb
popa
das
jl
sub
push
mov
int3
adc
xchg
fdiv
or
mov
imul
mov
adc
mov
addr16
xchg
add
cmp
fmul
push
repz
stos
cld
rorb
or
lock
stos
aam
push
and
cmp
lds
pop
pop
icebp
das
out
adc
jecxz
sub
push
das
cltd
in
dec
insb
jo
imul
lret
test
xor
xor
mov
orb
sbb
adc
mov
mov
add
mov
cmp
ficoms
xchg
and
jg
mov
xor
in
fisubrs
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
inc
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
imul
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
imul
mov
add
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
imul
loopne
inc
add
imul
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
push
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
imul
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
