push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
test
je
mov
add
mov
call
mov
movzwl
cmp
jne
movl
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
push
call
mov
push
call
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
call
mov
push
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
lahf
cld
jmp
push
pop
mov
aad
aaa
sbb
test
mov
fimull
add
sarb
inc
je
pop
out
jecxz
in
jge
cmp
adc
cmp
shrb
test
cmp
and
std
add
jno
mov
movsb
push
test
cld
inc
es
cmpsb
and
sbb
sub
mov
mov
fmull
push
inc
or
enter
fimull
loop
test
push
daa
out
cltd
sbb
mov
inc
or
movsb
test
xchg
shll
insl
rorl
xor
shrl
loope
fs
pop
or
loope
bound
xor
arpl
dec
and
les
sbb
sbb
rcr
sbb
cld
inc
in
push
iret
add
enter
cmpsb
mov
mov
push
int
cli
gs
cmp
inc
addb
pusha
add
xor
std
into
adc
jg
addr16
in
ljmp
bound
adc
mov
or
sbb
rorl
out
sub
dec
fmuls
sbb
out
insb
popf
imul
inc
push
scas
and
mov
jecxz
inc
lods
cmp
lods
push
icebp
cmpsb
add
movsl
fildll
adc
fdivrs
push
lahf
dec
jne
adc
fdivrp
test
cmpl
jp
popl
mov
jl
mov
aas
mov
mov
test
pop
jg
fstpl
mov
push
jns
negl
clc
insl
lea
fsubr
pop
lcall
dec
std
idivl
insb
pusha
out
pop
std
xchg
mov
mov
call
cwtl
repnz
inc
xchg
xor
jne
rep
mov
sti
loopne
mov
xor
sbb
cmp
movsl
lods
sub
and
push
push
dec
and
xlat
fldcw
and
add
cmp
out
or
xor
inc
loopne
cmp
push
add
fcompl
mov
lds
add
pusha
or
sbb
jmp
add
cwtl
sub
iret
rcll
notl
and
mov
or
divl
ja
out
jb
mov
std
or
bnd
les
cmp
add
cmpsl
enter
sbb
shlb
adc
movsl
xor
loope
mov
xchg
pop
mov
or
cmp
call
inc
jnp
scas
loopne
xor
mov
int3
popl
push
inc
mov
fs
cmpsb
cmp
add
in
fcomip
pop
push
test
push
pushf
out
arpl
xchg
fnstcw
pop
push
iret
icebp
xchg
stos
js
cmp
in
jmp
cltd
or
xor
jnp
leave
stc
loopne
or
out
cmc
or
stos
jo
enter
mov
faddl
pop
dec
repnz
sbb
add
xchg
cld
sbb
dec
mov
dec
jbe
out
mov
cmpsl
xchg
jge
dec
adc
xor
repz
push
dec
and
sarb
fiadds
cmp
pop
sub
imul
outsl
xor
add
shll
cld
cmpsb
xchg
lods
popf
lds
dec
mov
pop
aaa
ss
ja
cs
ficompl
push
or
aaa
lock
adc
addr16
fstl
mov
mov
subb
mov
pop
inc
and
gs
sahf
or
add
mov
mov
loop
dec
push
aas
test
sbb
add
mulb
loopne
mov
jne
fsubl
adc
dec
dec
mov
xor
push
adc
arpl
ss
pop
pop
fidivrs
iret
and
ljmp
sub
push
icebp
in
push
fimuls
pushf
jge
cwtl
jge
jecxz
sub
in
mov
sbbb
dec
pop
xchg
add
inc
fwait
outsl
mov
test
add
mov
xlat
dec
cmpsb
fdivrs
mov
mov
sbb
mov
je
lds
mov
add
mov
enter
adcl
pop
cmp
hlt
ficomps
fnstenv
divl
ss
sbb
sbb
outsl
xchg
icebp
iret
jecxz
adc
cmp
inc
pop
adc
and
daa
mov
cmc
mov
xorl
ljmp
xchg
je
dec
xchg
int
sub
push
subb
pop
jae
icebp
or
mov
sub
xchg
mov
out
mov
in
pop
call
gs
and
push
jno
jae
movsl
nop
and
leave
loop
push
pop
mov
xchg
sub
sahf
arpl
stos
daa
jne
aad
out
push
mov
in
cmp
in
mov
lcall
adc
lahf
filds
rclb
mov
dec
out
popl
mov
add
push
push
jl
pop
cli
and
lock
and
pop
imul
ss
cmp
xor
mov
or
sub
movsl
xor
insl
int3
pop
sbb
int3
adc
inc
data16
in
xchg
bound
cmp
popf
mulb
cmp
ljmp
push
pop
ljmp
in
imul
pusha
dec
gs
imul
sbb
mov
fmuls
sbb
lahf
ret
sarb
sbb
add
test
fnstcw
push
pop
imul
cmpsb
test
jbe
out
rol
mov
stc
cmp
cmc
xor
pop
jl
dec
sbb
fs
pop
xor
mov
outsb
sub
jp
inc
nop
pop
inc
adc
aad
and
push
mov
push
and
mov
cmc
lock
xchg
sbb
js
ss
push
inc
inc
mov
lods
enter
sahf
add
lcall
add
inc
out
ja
adc
call
mov
cpuid
je
add
or
fstp
fucomip
adc
roll
inc
sbb
or
mov
cmp
mov
inc
lea
fwait
divl
adc
cmpsb
mov
inc
add
lds
jge
jmp
das
dec
mov
sahf
lods
ficoml
push
inc
negl
adc
test
push
mov
jge
jecxz
dec
cli
inc
lods
pop
xor
xor
pushf
mov
push
shl
js
jge
xor
xchg
in
or
pop
lods
mov
or
enter
xchg
mov
mov
cltd
adc
cmpsb
fwait
pop
inc
push
jecxz
mov
cmp
or
xorl
cltd
ret
or
jl
cwtl
inc
test
xchg
jmp
add
lcall
mov
xacquire
xor
call
in
mov
insb
or
addr16
or
in
ret
adc
lret
std
int
pop
mov
jbe
mov
shlb
les
inc
xchg
cmc
jne
xor
sbb
pop
add
jbe
push
xchg
dec
data16
mov
xchg
push
orl
inc
jl
push
sbb
mov
jnp
inc
xor
ljmp
adc
aaa
stos
and
gs
fbld
add
or
push
into
mov
lods
hlt
sahf
sub
jnp
loopne
inc
mov
and
je
xorb
pop
dec
push
jmp
test
sbb
scas
xchg
pusha
pusha
cmpsb
add
in
cmp
mov
insl
insb
lret
movsl
ret
mulb
lods
mov
shl
pop
arpl
and
add
pushf
test
dec
xor
jecxz
cmp
mov
repnz
pop
stc
enter
nop
cmp
imul
out
cmp
scas
call
fsubr
rclb
mov
and
out
mov
jmp
addr16
and
inc
mov
aaa
or
jmp
sub
addr16
sarl
daa
mov
sbb
movsl
add
sbb
jl
ret
add
sbb
inc
jae
icebp
dec
sub
stos
imul
popf
ds
js
mov
push
nop
lret
push
add
bound
sub
jo
mov
mov
jae
das
cmc
bound
pop
loope
jnp
pop
scas
in
cltd
push
sahf
inc
inc
ljmp
lahf
pop
xchg
add
ret
pop
mov
add
call
mov
pop
test
sbb
jmp
in
popa
add
in
fnstcw
stc
xchg
inc
mov
xlat
aas
sub
push
dec
pop
cmp
out
mov
add
xchg
mov
push
repz
jns
int
or
daa
mov
jl
mov
js
jnp
inc
cmp
pop
inc
fs
and
cmp
pop
push
push
or
push
pop
daa
cmp
pusha
fstps
push
test
adc
in
mov
push
cmp
jno
cmpsl
adc
in
imul
or
aas
push
xchg
sub
adc
iret
cltd
lret
cmp
add
fs
sub
ret
adc
cmp
into
mov
pop
lahf
or
push
addps
add
outsl
and
test
aad
or
and
setl
arpl
xchg
mov
jo
lock
inc
or
cli
dec
stos
jnp
mov
adc
inc
mov
xchg
lret
mov
jb
lret
sub
mov
jg
jo
mov
pop
rorb
lcall
mov
or
repnz
loope
andl
adc
add
mov
hlt
loope
fnstsw
mov
inc
arpl
rorb
sbb
fdivrl
repz
jecxz
or
in
les
jge
adc
fdivp
xlat
cmp
pop
out
scas
mov
xor
mov
or
into
scas
cmp
xor
cwtl
cwtl
xchg
dec
bnd
in
in
add
mov
fwait
mov
mov
add
cltd
or
jns
sbb
dec
mov
adc
add
rorl
lret
add
outsl
mov
stc
pop
sbb
gs
loop
icebp
test
push
cmc
push
mov
sub
sbb
or
mov
or
lods
mov
and
mov
lret
adc
dec
xchg
xor
dec
stos
popa
pop
insl
mov
sbb
addl
sub
ljmp
and
adc
pop
out
mov
movlps
aam
push
sbb
mov
push
test
repnz
fldcw
xor
pop
addr16
adc
inc
sub
dec
in
pop
test
mov
pop
enter
loop
int
and
lret
inc
outsl
shl
fs
inc
aad
fcoms
cwtl
pusha
sub
jecxz
addb
outsl
sub
mov
mov
arpl
jl
js
in
push
mov
lea
das
mov
test
sarb
adc
ret
divl
dec
outsl
xchg
cwtl
push
dec
pop
mov
mov
adc
mov
mov
pop
outsl
rcrl
push
mov
mov
paddusw
sub
rorl
push
aam
mov
add
jmp
mov
jns
mov
inc
into
inc
xor
mov
imul
pop
mov
js
and
movsl
es
dec
sarb
and
xor
fnstenv
mov
mov
mov
pusha
insb
call
int3
mov
ss
ret
jl
idiv
repz
les
int3
repz
push
cmp
mov
cmp
dec
repz
sahf
jl
xor
dec
lea
in
out
negl
adc
pop
jmp
xchg
pop
pusha
rclb
ss
push
jecxz
jmp
push
xchg
and
add
sub
pop
and
mov
add
push
je
loopne
adc
pusha
mov
loopne
ret
and
pop
mov
ret
lock
cmp
ljmp
cmp
and
test
into
and
sbb
xor
es
push
add
cmp
mov
sbb
stos
jnp
mov
incl
xor
or
idivl
sub
or
jle
aaa
popa
lret
sub
arpl
cli
xchg
add
xchg
sbb
outsl
pop
pop
inc
add
sub
ffree
push
add
adc
inc
cmp
dec
xor
sub
out
dec
mov
mov
daa
or
stos
add
in
fs
dec
hlt
stc
xchg
ret
jns
adc
jg
add
decb
pop
inc
lret
xor
xchg
fstl
fwait
cs
push
je
es
int
and
and
jle
fsubp
aas
cmp
or
dec
xor
std
add
sbb
mov
enter
sub
jnp
xchg
push
adc
addr16
je
adc
dec
movsbl
test
jae
pushf
adc
lods
cmpsl
insb
pop
xor
cmpsl
js
jp
cmpsl
push
lock
adc
xchg
add
push
xor
inc
inc
inc
rorl
cmp
pop
sbb
movsl
mov
sub
add
xor
sbb
repz
xchg
cs
clc
nop
insl
push
leave
and
cmpsb
xlat
push
add
or
les
orb
mov
jne
std
dec
nop
in
sbb
sbb
inc
cltd
aad
xor
mov
jg
mov
aam
test
dec
xchg
push
or
lods
sub
popa
pop
dec
test
out
lea
ret
daa
movsl
sub
jle
les
push
jns
mov
aam
outsl
and
cmp
outsb
push
inc
pop
pusha
sbb
rcrb
insl
sbb
add
jge
inc
lea
mov
in
daa
mov
dec
xor
push
fidivrl
inc
fsubrl
ror
imul
mov
sub
lods
fdivs
sbb
jg
jge
mov
push
popa
into
lahf
xor
out
and
cwtl
jmp
nop
fwait
dec
roll
popa
loope
int
or
add
lds
test
in
mov
push
iret
adc
mov
cltd
lret
xlat
ds
sbb
imul
jno
imul
je
std
mov
gs
test
mov
in
and
pop
push
neg
dec
sub
outsb
nop
gs
stos
mov
jbe
in
repz
inc
jnp
ret
pop
pop
and
ja
out
cmpsl
adc
stc
std
mov
mov
xchg
xchg
movsl
subb
data16
xor
lock
les
cs
call
jmp
jne
std
jae
stos
jbe
dec
fs
rol
cli
cli
cs
pop
adc
aaa
sti
lahf
sub
shlb
je
mov
or
jae
ret
cmp
stos
sbb
in
jbe
cmp
or
xchg
add
push
jl
fcmovbe
and
and
ds
loopne
scas
in
adc
sub
lret
call
imul
jns
lcall
xorl
mov
cmpl
xchg
and
mov
outsb
or
lcall
mov
das
into
fadd
orb
mov
outsb
scas
mov
pop
aad
mov
xor
adc
mov
sub
scas
jo
sarl
jmp
aad
mov
call
bound
hlt
cld
jg
xor
insl
pop
addr16
push
rcr
push
movsl
push
loope
push
adc
sahf
mov
xchg
add
test
sub
pop
push
mov
mov
xor
loope
gs
ja
cwtl
push
mov
imul
pop
fidivs
sub
icebp
cwtl
iret
daa
gs
jns
mov
lea
sub
adc
pushf
xor
and
adc
push
fcmovu
dec
jg
ret
in
aad
insb
inc
rol
or
out
imul
pop
movsl
loope
xor
push
jge
cmpsb
out
add
lods
scas
pshufw
sub
or
adc
sbbb
call
rcrb
cld
and
xchg
cmp
mov
push
mov
addr16
cmc
sub
xor
rep
cmpsl
mov
out
popa
out
sub
push
xor
out
xchg
mov
mov
add
imul
and
pop
es
jg
xor
jl
push
mov
adc
or
icebp
in
nop
cmp
mov
in
xchg
jmp
push
push
lock
repnz
out
js
faddl
mov
rol
in
incl
adc
add
paddsb
pop
dec
xor
shll
push
int3
in
or
aad
inc
pop
cmp
fsubs
mov
fidivl
scas
sub
mov
stc
iret
fisttps
jl
ret
inc
loop
xor
push
pop
sbb
int3
pop
in
pusha
xor
push
jmp
mov
lock
mov
sub
lret
xchg
dec
and
loope
icebp
or
cltd
cmp
cwtl
mov
mov
mov
or
loopne
jge
pop
pop
dec
inc
jmp
fsubrp
les
das
push
push
pop
icebp
dec
cmpsb
add
cmpsb
cld
pop
xchg
mov
jne
adc
test
push
xchg
add
in
dec
in
xchg
mov
mov
pop
popf
clc
mov
sub
in
pop
gs
shlb
cmpsb
pop
divl
insb
imul
or
sbb
dec
inc
inc
rolb
xor
test
mov
int3
inc
xchg
or
xor
lods
ret
xchg
xor
sbb
pop
addb
xchg
dec
imul
cltd
gs
push
jae
std
es
cmpl
outsb
roll
daa
or
pop
loopne
sbb
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
