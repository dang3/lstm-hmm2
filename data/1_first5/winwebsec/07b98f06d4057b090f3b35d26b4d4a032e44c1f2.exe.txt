push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
jne,pt
ljmp
push
ds
stos
sarl
jae
jle
adc
or
fcmovu
out
mov
jae
and
inc
push
mov
add
cmp
adc
arpl
cmp
fcmove
inc
mov
dec
pop
dec
cld
add
fdiv
leave
jbe
xor
insl
cmpsl
in
outsb
les
stos
pop
stc
jns
fdivrl
jno
sbb
pop
test
leave
xchg
pop
sbb
fcmovbe
jle
in
mov
imul
push
ljmp
mov
fidivs
pop
cli
jns
jecxz
mov
inc
mov
loop,pt
mov
in
fidivrs
mov
inc
mov
mov
and
insb
in
cmp
imul
sbb
orb
adc
mov
push
pop
test
loope
mulb
xor
fdivrl
cltd
rclb
pop
repnz
out
inc
pop
lret
or
popf
pop
sbbb
xchg
jge
hlt
push
cmp
popf
xchg
push
lods
test
jl
mov
push
push
jne
cwtl
sub
mov
mov
dec
jne
pop
cmp
jg
cli
lcall
rolb
imul
dec
int3
sub
dec
loop
pop
aam
adc
rcrb
scas
fs
leave
in
add
sbb
bound
addr16
rcrl
fwait
inc
add
test
in
pop
push
add
je
rol
in
or
or
jle
jbe
outsl
ret
stos
repnz
int3
jb
popw
imul
insl
push
pop
loop
lcall
jecxz
ja
sub
in
cmpl
adc
pop
jno
enter
gs
ljmp
xchg
lahf
sbbb
push
les
jp
mov
or
mov
add
add
popf
ljmp
mov
pop
and
imul
data16
loope
and
add
hlt
inc
cld
adc
sub
xchg
push
xor
stos
xchg
test
inc
jle
aaa
sbb
dec
in
ficoml
dec
test
xchg
pop
pop
shrb
aas
cltd
pop
movsb
stos
les
fs
push
fwait
lahf
push
push
dec
dec
pop
pusha
outsb
stos
arpl
xchg
add
inc
outsb
jp
leave
mov
and
cld
sbb
shlb
xor
pusha
xchg
or
movsl
outsl
pusha
int
pop
insb
loopne
fwait
push
adc
in
dec
mov
jo
and
icebp
push
xchg
ds
adc
dec
popf
inc
jb
xchg
fmuls
mov
jmp
repz
jnp
or
xor
repnz
aaa
pop
cmc
xor
dec
scas
lahf
pop
sub
dec
mov
nop
xlat
sub
aam
sahf
xlat
pop
sti
imul
fcomps
jg
aam
inc
cli
sbb
and
idivb
js
in
cmp
popa
push
xchg
je
inc
cltd
negb
or
jge
pop
popa
jns
jge
repz
inc
fs
cs
in
pop
and
xchg
jne
dec
lods
or
cmp
push
pop
mov
dec
mov
push
sbb
cmpl
popa
jecxz
mov
mov
repz
test
jle
dec
jp
and
ret
and
insl
adc
add
imul
cmpsl
out
stos
and
jne
jae
enter
cld
repz
pop
bound
sbb
adc
or
mov
pushf
cld
nop
or
les
loop
enter
add
js
xor
out
push
cltd
scas
rcrb
push
dec
or
sbb
xchg
add
in
lods
inc
mov
pop
ds
dec
xor
xorb
in
rolb
xchg
js
pop
adc
dec
and
sub
pushf
into
nop
hlt
es
sti
sub
and
gs
dec
ret
test
xchg
or
mov
repz
sub
pop
sbb
mov
add
push
push
mov
sbb
mov
jmp
dec
mov
ret
bound
inc
shll
adc
and
mov
lods
subb
xor
pushf
push
dec
push
sti
sub
mull
mov
xor
loop
bound
push
push
adc
iret
adc
out
out
imul
mov
pop
scas
jnp
ret
pop
xchg
sub
lret
pop
test
mov
or
nop
shll
pop
fwait
pushf
das
fdiv
scas
stos
sbb
lock
and
dec
dec
adc
xchg
mov
imul
inc
shll
and
icebp
cmp
and
fldcw
xorps
dec
pop
pop
das
mov
mov
int
dec
call
xlat
stos
mov
sbb
jns
ficomps
mov
sbb
inc
jle
xchg
fidivl
mov
mov
repz
leave
sbb
inc
mov
call
lds
loopne
xchg
sub
inc
jle
dec
andl
jne
mov
pop
pop
dec
sti
lds
jae
or
mov
adc
and
add
and
int3
fistpl
pop
lods
pop
xchg
jae
dec
inc
sbb
xchg
call
cmp
das
or
and
cmpl
dec
clc
or
das
push
out
popf
jns
test
repz
xor
mov
xchg
shl
ja
and
mov
jno
pop
rcrb
jo
test
out
pop
lret
dec
std
and
aas
fwait
addr16
mov
data16
popf
movsb
cmp
push
add
bound
add
xchg
jecxz
scas
sbb
xchg
lock
or
sbb
inc
mov
push
add
jb
mov
insb
adc
int3
xorb
mov
out
inc
push
out
mov
popf
push
jg
int3
xor
xor
sbb
adc
lods
mov
mov
mov
adc
jp
pop
popa
mov
dec
ljmp
push
push
or
je
lods
mov
idivl
xchg
pop
notb
and
rcl
fwait
pop
stos
push
nop
or
aad
pop
mov
fcmove
inc
int
bound
adc
mov
inc
jle
lea
add
or
adc
out
xchg
ja
loope
sub
mov
ljmp
pusha
cmp
sbb
add
or
mov
xchg
xor
inc
xor
in
lock
pop
adc
out
xlat
lods
andl
push
push
icebp
fcmovne
jmp
pop
hlt
jl
xchg
ss
fbld
or
addb
out
pop
das
mov
adc
adc
shrb
sub
jbe
inc
push
mov
mov
int3
das
jnp
enter
add
push
insb
aas
in
add
aaa
loope
lcall
out
add
push
inc
daa
cmpsb
xchg
xchg
xor
arpl
rol
add
mov
xor
sbb
lret
pop
xor
sbb
jnp
xor
jno
xor
or
test
xchg
ja
cmpsl
cmpsl
mov
cmp
xor
in
adc
or
jne
mov
int3
pop
out
sbb
lcall
jecxz
and
or
mov
push
mov
sub
jl
stc
sbb
ret
pushl
and
mov
lods
repz
xor
int
pushf
loope
loop
fisubrl
fimuls
mov
in
jno
loopne
or
loope
mov
pop
xor
add
aas
out
dec
cmp
ret
jle
cltd
out
pusha
test
push
stos
mov
js
lret
dec
mov
pop
test
bound
lret
add
push
subl
dec
mov
sbb
movsb
stos
int3
push
jbe
fsubp
jno
fistl
addr16
dec
cld
ret
imul
jae
jg
pop
mov
mov
pushf
cmpsl
mov
mov
stos
insb
mov
mov
push
clc
or
dec
xorps
or
stos
jb
mov
and
int3
add
shll
movsl
adc
push
jle
or
xadd
mov
int3
fidivs
sbb
xor
push
adc
sub
cmpsb
sbb
aam
pop
jl
je
mov
aam
mov
aad
jns
mov
or
ljmp
stos
cmp
lret
mov
xor
popa
cli
inc
jns
pop
or
dec
jg
xor
jnp
sub
push
rclb
xor
or
or
jnp
call
clc
push
mov
pop
mov
add
mov
popf
sti
xchg
add
pop
jno
insb
stos
test
data16
sbb
or
dec
js
jg
ret
popf
daa
mov
mov
inc
aad
pop
inc
sub
je
sub
sub
mov
jns
jb
sbb
clc
push
cmp
mov
lret
xchg
loope
sub
mov
pusha
pop
lahf
hlt
daa
or
push
stc
mov
jnp
add
outsb
ja
add
cmp
mov
out
dec
pop
mov
lret
jmp
mov
out
jecxz
and
shlb
das
jle
ljmp
clc
loopne
test
sarl
addr16
movsl
pop
fistps
sbb
xlat
mov
test
lcall
push
mov
loopne
lods
adc
cld
push
dec
jne
shrl
jmp
ss
or
mov
out
xor
insl
mov
mov
jae
fwait
ljmp
mov
or
aaa
jns
pop
jb
sbb
dec
call
int
out
sbb
push
aam
jno
repnz
daa
and
push
xor
xor
iret
adcl
pop
out
push
inc
jb
mov
adc
insb
mov
outsb
push
aam
mov
aaa
push
insl
inc
ss
pop
popa
mov
mov
dec
jg
lods
fldenv
jns
sub
xchg
jp
out
sub
outsb
les
xor
mov
scas
gs
rcrb
int
mov
in
pop
ja
or
adc
mov
enter
adc
aad
dec
les
cmpsb
cmp
or
xlat
mov
jg
mov
lcall
cwtl
int
mov
pop
fsubs
iret
fs
cld
out
push
jg
mov
out
addr16
mov
jle
jmp
shrb
fldt
out
cmp
and
pop
inc
cmp
mov
push
cld
add
sub
jb
fsubs
mov
fwait
test
inc
orb
jae
add
mov
sbb
imul
mov
sub
mov
mov
fwait
jl
add
xor
loop
cltd
push
pop
fbstp
add
xor
add
les
push
inc
fisttpll
dec
lcall
jns
ja
lds
aaa
ja
out
and
xchg
fisttpl
adc
adc
out
insl
clc
add
pushf
jae
insb
scas
mov
xchg
ffree
inc
pop
jg
push
or
pop
lret
and
sub
ss
je
mov
pop
movsb
xor
icebp
pushf
sub
push
mov
mov
mov
neg
sbb
cs
out
sub
subl
cmp
pop
inc
test
ret
aaa
pop
enter
add
mov
cld
xchg
fs
ss
add
adc
sub
daa
ror
mov
sbb
stos
pop
lods
ret
jecxz
jp
jg
lcall
mov
mov
or
push
ljmp
out
mov
adc
icebp
out
sub
cli
mov
xchg
adc
repnz
dec
inc
nop
xchg
test
mov
cmpsb
test
dec
loope
cs
call
test
je
mov
dec
push
sbb
pop
inc
popl
sub
dec
xchg
push
inc
sbb
out
sub
jecxz
mov
aas
jl
sub
sti
xchg
mov
jle
sbb
shl
daa
jle
jp
adc
lods
lahf
xchg
mov
loopne
or
lret
bound
mov
stc
ds
pusha
mov
cmc
adc
sbb
sar
adc
xchg
dec
outsl
sti
pushf
orl
stc
or
mov
push
add
pop
push
inc
or
imul
push
sub
dec
push
in
jp
es
inc
into
in
enter
cmp
int
pop
loop
pop
cwtl
xor
mov
mov
cmp
notl
xchg
mov
stc
add
lock
lret
lcall
pop
jns
outsl
xor
dec
dec
jnp
or
jle
test
mov
repnz
dec
ret
repnz
aad
jmp
sub
cmpsb
dec
scas
mov
dec
xchg
jp
push
mov
inc
jne
mov
popa
jbe
out
pop
add
pusha
jmp
les
shlb
push
add
mov
sti
ret
pushf
js
mov
mov
scas
imul
insl
mov
loopne
xchg
test
jecxz
mov
pop
les
fbstp
and
mov
jbe
aad
xlat
cld
lret
lock
sub
testb
scas
in
fmuls
pop
or
xor
or
jne
add
xchg
icebp
dec
xchg
fwait
rcrl
pop
or
jle
out
repnz
fwait
es
push
js
pop
cmpsl
add
or
mov
xchg
adc
mov
or
lahf
testl
jmp
aas
ret
data16
pop
negb
push
test
cmp
clc
pop
pop
lcall
and
pop
jo
xchg
in
std
int
sahf
pop
mov
movsl
lods
dec
scas
push
mov
sbb
cwtl
in
sbb
lock
mov
xor
xchg
add
jae
xor
or
jb
insb
xor
arpl
test
lock
clc
jbe
jp
push
andb
xchg
push
jmp
inc
adcb
jge
push
xchg
popf
data16
scas
pop
mov
aas
shll
fwait
clc
mov
ljmp
xorl
shll
orb
push
cmp
inc
jne
fisubl
std
in
cwtl
mov
xor
dec
ds
aaa
sbb
leave
add
bound
fsts
jl
lods
xor
les
mov
sbb
push
cmp
das
add
add
scas
addr16
andb
pop
cld
rolb
fdivrs
lahf
adc
std
outsl
leave
jno
lods
mov
repz
xchg
pop
mov
xor
mov
das
pop
jns
dec
mov
scas
test
aam
dec
push
loope
xor
mov
mov
push
test
xchg
pop
pop
mov
pop
repnz
jmp
fisubrl
lea
stos
push
in
mov
xchg
adc
fnstenv
scas
mov
out
insl
pop
pop
lock
shl
cmp
cltd
jne
mov
enter
cmp
es
es
movsb
mov
pop
int
mov
jne
inc
testb
outsb
cmp
popa
js
fwait
jmp
push
push
dec
mov
out
jns
jb
push
mulb
add
ficoms
andb
mov
jb
and
stos
loope
lock
push
xlat
sub
mov
aad
lcall
fistl
ret
leave
jmp
out
add
dec
lds
mov
inc
jbe
inc
mov
or
repz
daa
pop
pop
dec
pop
xor
sub
push
jb
adc
sbb
xor
aad
mov
mov
nop
add
or
push
mov
mov
dec
and
cmovns
idivb
test
mov
cld
shlb
sub
out
inc
sub
jle
imul
inc
aas
mov
dec
xor
lea
jp
mov
pop
jg
or
dec
xor
push
out
xor
sbbl
pop
std
insl
mov
xchg
scas
and
outsl
js
inc
insl
mov
sbb
roll
xor
add
jp
mov
lock
sbb
add
cltd
loopne
lods
push
orl
scas
lods
jmp
mov
or
push
and
jo
je
add
mov
mov
adc
or
shlb
adc
in
push
adc
jno
and
mov
jo
rcll
inc
and
mov
or
scas
sub
test
jmp
jno
cmpsl
add
lods
push
andl
aas
pop
xchg
lret
scas
inc
xchg
ret
jb
pop
cmp
rorl
inc
insl
add
sarb
mov
mov
cmpb
int
es
rorl
or
ljmp
out
subl
call
mov
jbe
xchg
and
ds
sbb
mov
ret
cs
lret
clc
and
fisubl
xchg
sub
je
testb
add
cmp
int
mov
add
push
adc
sbb
pop
cmp
jp
jl
mov
ss
arpl
jg
stc
jo
dec
sub
fldcw
inc
xlat
xor
xchg
adc
aas
cmp
xchg
or
xor
cmp
aas
xchg
sahf
pop
jp
and
leave
mov
pop
add
sbb
mov
pop
pop
xor
add
or
in
lret
mov
lea
mov
jge
pop
int
mov
sub
mov
loope
mov
and
in
ljmp
dec
cmp
mov
cld
xor
addl
out
pop
push
push
into
xor
xchg
add
xchg
xchg
out
inc
sub
jae
pop
or
xor
aam
inc
pop
mov
testl
in
xchg
lret
mov
fisubrs
push
testl
xor
popf
outsl
stc
adcb
ficoms
add
jb
mov
mov
adc
in
cmp
imull
mov
mov
cli
into
shrb
sub
fisubs
in
mov
dec
mov
repnz
mov
stos
or
out
test
sub
xlat
cmpsl
aam
call
sbb
imulb
push
jmp
mov
jns
sahf
mov
scas
cltd
cmpsl
jo
adc
jns
fs
xchg
fcomps
push
push
pop
popf
pop
push
xor
sbb
aam
movsb
dec
fcomip
or
add
repnz
ret
outsl
jl
ja
add
lods
xor
inc
mov
cwtl
dec
rclb
pop
scas
testb
push
pushl
xchg
adc
xchg
loopne
jmp
xchg
out
pop
nop
or
cmpsl
imul
pop
aam
sarb
pushf
daa
cwtl
aam
inc
aad
cmc
mov
cmp
subl
jle
sbb
sub
xchg
dec
fldl
std
int3
xchg
cmp
iret
pop
push
fistps
adc
lods
rol
push
sub
das
mov
push
mov
inc
push
push
in
stos
or
mov
imul
sub
pop
das
rorl
xchg
mov
in
mov
loop
xor
cmp
inc
leave
jge
jp
adc
or
into
xor
out
mov
ja
sbb
lods
xor
inc
stos
dec
aam
jo
bound
test
fs
jae
call
out
fnsaves
gs
cmp
lods
jmp
mov
jp
ss
mov
aaa
jl
xchg
cwtl
sbb
adc
loopne
cmc
rcll
cmp
ret
xchg
jge
out
or
cs
mov
jl
or
dec
jne
xchg
sub
sub
pop
mov
scas
aaa
add
xor
pop
xor
or
aas
push
jge
push
out
mov
sub
and
ds
jg
and
adc
mov
push
mov
js
mov
sub
insb
ss
int
stc
data16
dec
add
ficoml
mov
add
mov
pop
ret
int
mov
xchg
movsb
push
bound
fisttpl
repnz
gs
xchg
ds
add
xchg
mov
pop
pop
add
inc
fnsave
mov
aam
in
jecxz
loope
pop
mov
push
clc
stc
fwait
sbb
lods
sub
push
bound
pop
mov
aas
dec
mul
in
xor
ljmp
mov
sbb
fbstp
lcall
test
scas
nop
pop
rol
push
shl
icebp
popf
xchg
lret
mov
aaa
xlat
pop
xor
rol
ficoml
test
shrb
das
jle
enter
in
jne
ds
mov
and
int
lods
int3
or
ficomps
and
inc
or
jbe
adc
cmpsl
outsl
cmp
dec
sahf
leave
push
test
adc
pop
hlt
dec
xor
lds
int3
ret
lea
iret
jae
dec
gs
dec
and
pop
sahf
mov
mov
and
out
testb
xor
movl
dec
out
adc
mov
fisubl
lods
mov
jbe
xor
jmp
imul
xor
insb
jecxz
or
dec
shrb
sbb
push
mov
xor
test
push
xor
hlt
cmp
outsl
testb
sub
test
mov
mov
pop
cmp
xchg
insl
or
and
or
es
scas
inc
xor
sbb
movsl
mov
popf
push
hlt
andb
lods
js
and
imul
sub
adc
or
push
pusha
mov
and
or
dec
xor
xchg
idivl
mov
cmpl
xchg
in
cmc
mov
pop
into
fninit
aaa
das
iret
mov
jno
loop
inc
sub
xor
out
mov
inc
pop
add
out
leave
out
jb
loopne
adc
xlat
jae
lock
sub
inc
in
jp
mul
xchg
in
pushf
sub
ljmp
dec
adc
lds
out
cmp
movsl
add
and
pop
stos
sbb
sub
xchg
cmp
push
faddl
imul
test
push
or
cmpb
jmp
push
add
in
mov
push
dec
mov
pop
cli
xor
stos
pop
jne
pop
imul
cmp
into
jmp
and
and
mov
or
xchg
mov
cmp
addr16
rcll
push
mov
sahf
jl
sti
ja
cmp
mov
stos
add
dec
mov
lcall
dec
cmpl
sbb
dec
xor
dec
add
sbb
fs
mov
ljmp
leave
pop
dec
nop
shlb
jp
cmc
ljmp
inc
cmp
xor
pop
xchg
add
sarb
dec
out
pusha
sub
cli
aas
mov
adc
inc
xor
cwtl
aad
sub
push
lods
fisubrl
test
xor
xor
gs
mov
hlt
xor
pop
pop
test
pop
fwait
xchg
ds
loop
push
sub
stos
aaa
cmpsb
icebp
outsb
lods
lahf
cmp
outsl
or
push
mov
int
jb
xchg
les
addb
add
cltd
push
fistl
dec
mov
test
jle
gs
ret
mov
mov
cs
xchg
incl
dec
jmp
xchg
push
jp
jp
adc
iret
std
rcll
xchg
mov
push
ret
jo
popa
popa
divl
cltd
mov
dec
push
mov
mov
cmc
and
call
cmc
adc
ds
mov
dec
shlb
insl
push
xchg
aad
ds
cmp
jmp
sahf
fisubrs
mov
sbb
sahf
stos
jmp
mov
loop
cltd
cmp
cmp
fldenv
movsl
mov
or
pop
mov
add
std
xchg
cmp
stos
add
int3
jp
lcall
mov
mov
popa
scas
mov
dec
inc
xchg
cli
int3
test
mov
xchg
pusha
and
push
movsl
lret
in
in
scas
fcom
pop
ret
repnz
aad
shlb
inc
cmc
mov
outsb
mov
int3
jp
jp
mov
pop
aam
sbb
inc
mov
mov
call
mulb
stos
inc
push
sbb
jecxz
out
and
xor
pop
leave
sub
addr16
xchg
js
sub
in
mov
lods
aaa
inc
rcrb
lea
add
mov
movsl
mov
inc
xlat
jge
lds
inc
mov
movsb
pop
test
and
inc
lahf
stc
shlb
sbb
jne
or
or
sarl
jns
lea
movsb
mov
jl
loope
sbb
out
rolb
inc
das
mov
push
mov
and
out
sub
jmp
xor
shll
loope
jmp
cmp
sbb
fidivs
scas
jne
call
and
cli
add
cwtl
mov
or
sbb
sbb
loopne
dec
rol
cmovne
add
adc
fs
mov
insl
mov
loop
outsb
or
mov
and
insb
in
pushf
dec
cmpsl
call
out
xchg
xchg
cs
popf
rcrb
xchg
clc
das
push
je
pop
mov
repz
mov
in
push
pop
push
imulb
mull
repnz
inc
ret
cwtl
pop
fwait
jo
xor
mov
xchg
lret
bound
cmp
pop
add
and
inc
mov
bound
xchg
and
repnz
dec
dec
mov
or
jle
sti
mov
icebp
xchg
cli
push
aaa
mov
xor
push
pop
lds
pop
dec
push
outsb
xor
xchg
sub
out
stos
jo
xchg
pop
jb
dec
xchg
push
pop
fwait
arpl
movl
wbinvd
add
std
data16
test
mov
push
sbb
daa
add
bound
push
inc
int
gs
add
test
pop
shrb
or
pushf
add
pop
mov
push
fwait
in
dec
jnp
xlat
cmp
dec
lock
jg
jnp
and
add
and
pop
mov
or
je
lret
into
rolb
jl,pn
fstpt
mov
adc
shlb
mov
xchg
icebp
add
dec
and
aaa
cwtl
inc
sbb
jp
pop
shlb
mov
xchg
out
mov
mov
outsb
ds
xchg
in
xorl
jae
fwait
mov
xor
loopne
xor
mov
fucomi
inc
add
je
pop
pushf
mov
pop
jle
icebp
shlb
inc
les
stos
ss
cmpsl
cmp
into
dec
cld
inc
xlat
fldt
jne
add
out
lods
or
mov
sbb
cmp
sub
scas
and
sub
hlt
sub
out
pushf
not
loope
mov
aaa
push
loope
scas
test
inc
jnp
push
faddl
mov
mov
sti
or
loope
cmp
loop
pushf
test
pushf
cmp
adc
adc
xchg
mov
inc
out
add
fsub
xor
push
xor
addl
jmp
push
add
mov
inc
popf
dec
cmp
mov
shll
cli
pop
sub
xchg
popa
jb
lods
mov
repnz
imul
dec
out
push
sbb
xor
lods
jae
aam
push
xchg
fs
lret
xor
push
sbb
inc
pop
stos
jno
mov
ffreep
mov
or
sbb
jg
jl
sub
rcrl
or
add
mov
negb
stos
ret
mov
hlt
cld
mov
or
sahf
push
xor
mov
mov
sbb
aaa
jae
mov
sbb
sahf
in
ljmp
pop
aam
loop
pop
fildll
js
sub
subb
xchg
mov
sbb
and
icebp
pop
ret
cmpl
and
xor
mov
push
loope
jl
stc
dec
int
mov
adc
xor
inc
adc
push
jbe
ret
call
repz
mov
popl
popa
ja
xchg
lcall
xchg
dec
push
int
sbb
jle
gs
cmp
xor
les
or
inc
adc
insb
sbb
lcall
or
cmpsl
rorb
repnz
scas
pop
repnz
lds
nop
cmpl
pop
sub
ds
mov
mov
or
pushf
sbb
inc
cwtl
jne
shlb
mov
dec
xor
in
in
in
push
add
mov
xchg
and
pop
cmp
xor
push
mov
fwait
xchg
roll
mov
push
jnp
ljmp
fldl
push
sub
popf
mov
jbe
push
dec
pop
arpl
cmpsl
rol
xor
lcall
mov
lds
and
lcall
pop
movsb
lods
xor
movsb
or
or
sbb
movsl
mov
hlt
cmp
stc
cld
jb
jecxz
rclb
jecxz
dec
push
test
movsb
xor
pop
inc
lahf
pop
xor
leave
sbbl
dec
in
or
mov
lds
nop
or
ret
mov
mov
mov
pop
insw
mov
aam
ljmp
das
outsb
jae
jge
sub
add
ljmp
push
iret
xchg
pushf
cmp
or
out
inc
cmp
movsb
mov
in
rcrl
fistpl
cmp
sub
fcompl
cmc
inc
lds
mov
iret
jmp
jb
cmp
mov
cmpsl
inc
ficompl
mov
add
fnstsw
xor
mov
cmp
insb
mulb
inc
mov
les
popf
jecxz
test
sbb
dec
mov
outsl
mov
aam
aaa
mov
mov
xchg
adc
xchg
movsb
push
mov
das
dec
sbb
cmp
sbb
push
loop
mov
sub
shlb
sub
pop
jno
loop
shlb
dec
push
ja
push
lods
pop
and
in
flds
mov
push
dec
pop
jg
sub
mov
es
lahf
mov
sbb
js
scas
ffree
sbb
pop
xor
ldmxcsr
push
in
xor
movb
es
and
pop
mov
mov
leave
inc
mov
test
inc
ss
not
jae
mov
push
cld
pop
cltd
sbb
cmp
inc
pop
scas
pop
jge
pop
bnd
sub
fwait
xchg
pop
mov
aas
inc
mov
mov
popf
fs
int
cmp
sub
cmpsb
pop
out
fsubrs
or
ja
lret
pop
lods
call
fwait
jbe
in
addr16
xor
clc
jo
add
push
dec
mov
dec
pop
adc
ja
jmp
movsl
shr
lock
into
scas
xchg
fs
xchg
pop
movb
call
ret
cmp
xchg
sbb
pusha
cmp
bound
mov
js
sub
arpl
sahf
sub
push
ds
lods
popa
inc
adc
movsl
cmp
cmp
cmpsb
xchg
xchg
pop
mov
mov
or
mov
adc
imul
dec
flds
push
dec
inc
pop
xchg
lock
mov
into
cmp
js
popf
xchg
cwtl
jbe
mov
fwait
xchg
cmp
mov
fists
data16
movsb
xor
xor
out
push
sub
negl
xchg
cmp
push
mov
js
xchg
ror
out
stos
sub
pop
sbb
pop
sbb
dec
fisubrl
mov
loop
iret
push
mov
xchg
ret
sbb
sub
addl
rcr
jb
data16
out
pop
or
inc
xor
jb
dec
lcall
xor
sub
lds
and
pop
test
or
ret
out
jo
xor
ss
pop
mov
imul
mov
jle
pushf
addr16
cmp
sbb
and
pop
xor
pop
clc
sbb
or
lret
int
jmp
push
push
cld
sub
adc
mov
or
mov
or
int3
imul
lcall
mov
sbbb
xor
in
push
xor
aas
cli
adc
adc
into
sub
and
xchg
and
add
pop
add
add
lods
dec
add
or
jge
movsb
mov
and
sbb
sub
or
fdivr
imul
jb
lahf
fstl
imul
mov
repz
add
fidivl
lret
scas
mov
mov
int3
inc
xor
loopne
std
lods
cmp
push
jae
sub
and
cmc
adc
dec
jmp
add
test
dec
pop
and
jae
sub
dec
push
ds
into
mov
jge
inc
push
das
jb
add
cmpb
xchg
psubw
adc
add
push
ja
les
idivl
bound
push
pop
loop
loopne
mov
jne
add
jb
pusha
rcll
out
or
add
xor
push
bound
mov
ss
jle
cmp
aas
xor
mov
inc
or
xchg
push
pop
pop
imul
dec
andb
or
lock
push
or
cmp
push
in
andb
and
aad
pop
xchg
pop
or
or
mov
and
stos
fwait
ljmp
mov
iret
inc
lods
adc
jge
xor
iret
mov
notb
fsubl
cmp
push
push
aas
sub
xor
jnp
stc
sarb
or
lock
or
pop
pop
adc
sbb
fildll
fdivr
pop
adc
faddl
and
int3
in
decb
push
adc
aad
xor
fdivs
lret
mov
orl
add
mov
and
ds
sub
test
add
or
lahf
ja
enter
popf
into
xchg
or
jo
pop
push
outsl
sbb
orl
adc
test
ljmp
push
pop
or
jmp
cmpl
inc
insb
pusha
mov
dec
in
xor
ss
cwtl
mov
mov
dec
cmc
and
push
or
fwait
loop
mov
das
sbb
jnp
push
test
outsl
jbe
jno
lock
mov
in
sub
push
xchg
cmpsl
scas
xchg
andl
push
pop
pop
xor
out
fwait
mov
in
fsub
cmpl
fistpll
push
and
push
jbe
sub
xor
mov
stos
jl
test
mov
and
cwtl
out
lret
or
cmpsl
jecxz
pop
loope
jns
imul
lds
xor
out
mov
jl
fadds
ljmp
fbld
pop
popf
cli
mov
out
repz
ljmp
add
fldcw
inc
pop
dec
and
mov
movb
div
andb
enter
hlt
xor
xchg
pop
inc
jmp
in
nop
cmp
mov
xchg
pop
push
ljmp
ret
pop
pop
sbb
lods
loopne
cli
cmovs
and
outsl
addr16
pop
sub
repz
pop
inc
push
iret
cmc
sub
ljmp
in
dec
mov
test
pop
enter
int
xor
and
enter
mov
cld
nop
pop
push
xor
pop
sbb
ljmp
in
shlb
mov
pop
fs
inc
adc
push
nop
add
xor
mov
imul
push
les
dec
js
and
jnp
dec
cmp
jecxz
cmp
sahf
cli
loope
nop
sti
xorl
negb
sub
out
cmp
push
mov
or
mov
sbbb
lds
fistps
push
cli
repz
repnz
push
pop
pop
pop
in
movsl
push
add
loop
jb
adc
push
ret
pop
out
fsubrl
sarl
push
push
xor
and
sub
and
and
sub
mov
mov
jmp
fsubr
sub
lcall
pushf
arpl
lods
std
fists
arpl
mov
inc
stc
aad
sub
ret
xchg
fisubl
and
pop
sbb
push
pop
rolb
and
ret
sti
push
inc
push
loop
adc
xchg
cwtl
and
push
fwait
and
sub
cmp
shlb
jmp
xchg
xlat
xor
das
loope
add
int
xor
pop
pop
inc
arpl
dec
cmp
jecxz
pop
cmp
pop
std
cwtl
inc
scas
push
cltd
pop
mov
add
subl
in
pop
or
mov
sub
fcomps
mov
cmp
fimull
pop
or
cmp
push
repnz
xchg
sub
jmp
xor
sbb
inc
nop
jb
arpl
jmp
repz
cmpsl
add
push
inc
lods
jle
scas
xchg
jne
push
and
sub
mov
cltd
dec
jnp
push
aaa
mov
dec
fwait
enter
fisubrs
les
test
dec
or
xor
popf
es
pushf
jns
and
lock
cmp
nop
mov
lock
in
push
push
lods
sub
cmp
ror
fcmovb
jo
cli
inc
pop
pop
cld
dec
sbb
add
mov
shll
inc
jbe
pop
ljmp
lret
ret
sbb
std
clc
pop
and
rcrb
xchg
mov
fcmovb
in
and
xor
mov
lcall
mov
ljmp
into
cmp
cmp
push
lea
bound
mov
mov
sub
push
arpl
inc
cmc
std
pop
stos
rcr
insb
movsb
stos
pop
mov
mov
ficoml
fucomip
adc
loopne
dec
or
mov
sub
cmp
into
lcall
les
mov
push
cmp
push
bound
sbb
in
jns
jbe
outsb
inc
or
data16
pusha
cltd
mov
add
or
fbstp
outsb
pop
fdivr
mov
test
jp
das
cmp
jae
call
mov
mov
lahf
and
adc
cmp
scas
cmp
add
icebp
jecxz
jle
enter
fwait
cmp
and
loopne
stos
mov
mov
jl
adc
push
lahf
jns
cmp
mov
js
aas
imul
test
dec
icebp
std
lcall
pusha
cs
jb
cmp
jae
dec
lcall
imul
fidivrl
add
inc
inc
sahf
mov
lahf
sti
sbb
lock
lods
mov
xchg
repz
fistpl
sbbb
sbb
jle
pop
les
mov
fimuls
std
in
xchg
pause
jecxz
adc
xor
fcompl
clc
fists
mov
jb
cmp
adc
out
ja
arpl
testb
sbb
in
mov
mov
ficoms
rcrb
stos
sub
adc
lret
and
repnz
das
mov
cltd
cmpsb
cmovo
add
test
call
dec
xchg
jns
cltd
mov
cmp
dec
or
scas
stc
les
int3
and
cli
mov
dec
test
inc
js
cmp
sub
hlt
sbb
or
xor
in
in
mov
mov
add
mov
inc
xchg
mov
inc
or
or
int3
fildll
int3
mov
aad
mov
fldt
push
lock
movsl
xor
in
cmp
push
test
lods
cltd
mov
jmp
xchg
xchg
aas
jge
in
inc
xor
fstp
lret
cmp
scas
mov
push
out
lods
mov
cmp
mov
test
mov
pop
vmwrite
add
lea
jmp
cmp
in
fld
imul
sub
arpl
jne
insl
bound
insb
xor
lea
cmpsl
xchg
and
add
lock
cmpsb
cmpsb
daa
out
xchg
pusha
pop
nopl
lods
arpl
inc
sub
cmp
jl
ja
mov
and
mov
jns
lea
sbb
hlt
das
outsl
pusha
inc
mov
push
imul
stc
insb
cmpsb
cmp
mov
out
movsl
cmpsb
js
jb
dec
cmp
cmp
enter
inc
iret
out
or
or
loope
stos
push
mov
cmc
loopne
jge
dec
push
mov
ss
push
arpl
adc
jno
mov
push
pop
xor
hlt
popf
lret
sbb
mov
shlb
out
add
fsubrs
xor
dec
sahf
lret
in
test
mov
imul
push
imul
or
scas
call
lock
imul
adc
dec
inc
dec
lods
iret
xchg
mov
loop
pop
xor
mov
or
test
test
or
push
dec
jl
in
jb
insb
subl
movsl
sbb
dec
imul
sahf
pop
mov
dec
jecxz
inc
jne
psrld
cli
add
jo
mov
les
ja
dec
pop
mov
push
shll
jo
dec
sbb
cmp
mov
dec
mov
sbb
aad
cld
pop
xchg
mov
leave
mov
push
addb
xchg
rorb
ret
jmp
sub
dec
adc
mov
int3
shl
aaa
lcall
arpl
cmpsl
sbb
dec
adc
dec
xchg
mov
aam
fidivrl
sbb
mov
mov
and
jae
dec
addr16
mov
pop
mov
mov
js
shlb
inc
push
dec
cmp
jg
and
mov
xlat
push
jnp
mov
push
clc
test
push
popf
jl
mov
in
dec
jno
les
jo
cmpsb
in
cmc
push
mov
jbe
jae
push
push
test
aaa
inc
push
ret
xchg
repz
adc
loope
int3
ss
and
mov
jmp
mov
push
xor
jne
rolb
add
mov
or
mov
fldl
add
xlat
pop
loopne
mov
xchg
fsubl
js
lret
test
jne
cmp
pusha
faddl
push
add
sbb
dec
inc
in
dec
cs
repz
stos
or
jecxz
pop
fisttpll
and
push
iret
shrl
xchg
add
shll
sbb
shrb
jbe
jp
dec
pop
add
insl
stos
jmp
hlt
mov
jecxz
lods
es
add
pop
jbe
pop
in
push
es
and
bound
inc
movsb
sub
jmp
mov
cmp
xor
cmc
rolb
nop
scas
bound
sub
mov
xchg
inc
les
enter
fiadds
adc
jo
test
outsl
mov
mov
pop
dec
js
mov
std
aam
out
xor
out
mov
xor
cli
inc
cmp
pop
in
and
stos
push
ret
ficomps
insb
cmp
mov
xor
xor
ror
lahf
mov
in
jne
pop
pop
aam
rclb
imul
mov
orb
mov
mov
pop
call
cmc
inc
movsb
dec
addr16
jne
cmp
lahf
dec
push
jae
xor
mov
and
xchg
out
jecxz
in
jae
xor
or
cmpsl
ja
mov
int
pop
es
push
mov
in
pusha
clc
mov
sbb
arpl
push
jle
call
subl
cli
mov
add
push
mov
outsl
ret
push
xor
clc
sub
xchg
cs
xchg
xchg
push
or
aad
xchg
xor
fs
movsb
xchg
xor
pop
lock
test
add
popf
adc
movsb
repnz
cld
xchg
xchg
jg
sahf
inc
or
cmp
repnz
orb
adc
js
pop
jecxz
insb
jnp
pop
sub
sbb
icebp
cmpsb
mov
shrl
xchg
sub
push
xor
or
fidivl
mov
pop
mov
jno
faddl
in
stc
fstl
sub
std
pop
sbb
in
push
adc
inc
pop
or
clc
fwait
mov
cmpsb
fdivl
mov
xor
mov
push
mov
jg
push
xchg
sbb
mov
cmpsl
shrb
das
sub
sub
mov
mov
pop
scas
or
sub
cmpsl
sub
mov
ret
cmp
mov
xchg
ret
dec
mov
nop
mov
push
mov
xor
dec
lcall
pushf
insl
mov
inc
aam
loope
mov
fistps
cmp
sar
mov
stos
jge
ljmp
jno
mul
sub
dec
cmp
jge
jge
mov
adc
xchg
mov
mov
push
dec
mov
pop
dec
cmpsb
icebp
cmp
das
ja
lods
push
sbb
pop
loopne
aas
xorl
cs
int3
ljmp
stc
xchg
cmp
mov
mov
cmpsl
imul
mov
pop
ret
inc
arpl
xor
les
xchg
or
jb
fildl
mov
lock
pushf
or
cmp
pusha
or
pushf
add
or
nop
fadds
pop
rolb
in
in
adc
jne
pop
sbb
in
xor
loope
xor
xchg
mov
dec
mov
mov
loop
lret
xor
and
pop
nop
xlat
imul
xor
mov
add
push
call
jmp
int
pop
jbe
cmpsb
and
out
and
adc
aam
cwtl
jp
mov
movsl
sbb
insl
sahf
sub
mov
or
push
dec
cmp
aam
lea
jecxz
and
jle
outsb
scas
lcall
xlat
inc
aam
in
int
test
push
pop
adc
push
test
arpl
sub
xor
rclb
movsb
xchg
movsb
in
in
jge
call
add
clc
sub
fistpl
lock
or
mov
pop
test
dec
shlb
push
adc
aam
xlat
mov
inc
mov
push
and
or
scas
stc
xor
add
movl
aaa
popf
jns
push
rcrl
addb
or
lock
insl
push
movsl
push
lea
and
std
mov
sbb
jno
aaa
add
nop
cmp
es
stc
dec
jnp
dec
push
dec
mov
in
mov
lds
movsl
cltd
sub
cld
mov
push
pop
mov
es
push
sbb
sub
stos
test
iret
push
cmpsl
lahf
jae
nop
jne
js
jmp
xchg
enter
ljmp
inc
into
sub
pusha
push
fs
dec
pop
xor
mov
pop
lds
jo
jae
es
jae
lcall
subl
sub
mov
ja
pusha
rcl
push
cmp
push
jecxz
test
enter
roll
mov
dec
ljmp
jmp
mov
xor
in
mov
inc
aas
aas
sbb
arpl
jge
mov
nop
push
insl
jl
ss
cmpsl
sbb
mov
sub
fmuls
mov
cmp
add
pop
std
jns
cmpsl
add
jle
and
add
test
loope
nop
inc
lds
lods
add
cmp
sarl
and
mov
scas
pop
mov
dec
out
clc
ljmp
aas
sbb
jmp
push
inc
fisttps
add
aad
xor
inc
icebp
repz
jbe
lods
out
dec
imul
ja
mov
and
scas
xchg
outsl
outsb
mov
sbb
push
add
add
cmpsl
fs
push
pop
insl
sub
xchg
pop
jne
idivl
fistl
ficoms
icebp
mov
call
pusha
cmpsb
repnz
neg
push
mov
sahf
pop
push
inc
repnz
out
loopne
iret
or
mov
xor
jecxz
adc
adc
push
scas
data16
outsb
sbb
sbbb
cmc
sbb
int
jns
and
nop
mov
dec
fldcw
push
xchg
sub
inc
es
cmp
pop
inc
shlb
bound
jb
inc
stos
int3
add
outsb
jmp
iret
jl
mov
mov
aas
jno
out
fstpt
out
push
lods
adc
mov
cmpsl
pop
call
mulb
in
cmc
jns
sahf
add
ljmp
lcall
popa
or
push
test
bound
int
in
jae
fwait
lock
lret
pushf
mov
fisubrl
std
inc
out
shl
jns
inc
dec
lea
push
pushl
push
jns
ds
loopne
test
scas
dec
lds
arpl
std
es
inc
jle
xor
iret
sub
iret
xchg
mov
pop
leave
or
push
xor
mov
in
fidivrs
push
jge
inc
inc
add
dec
divl
and
push
jge
dec
cmp
into
ss
adc
pop
dec
cmp
pop
pop
sbb
and
cwtl
mull
push
add
repz
jp
and
inc
jbe
cmp
clc
mov
aad
xchg
lret
addr16
call
aam
sahf
data16
jno
ljmp
pushf
ljmp
push
imul
sbb
cmpsl
out
jecxz
icebp
lret
repz
dec
daa
mov
dec
pushf
hlt
xchg
inc
dec
xchg
es
movsl
mov
mov
repnz
adc
cmp
arpl
pop
cltd
imulb
pushf
add
dec
lret
sarb
inc
xor
bound
loopne
mov
cmp
in
jmp
scas
mov
xchg
gs
pop
fisubl
fildl
fists
cmp
mov
loop
sahf
notb
sub
mov
imul
push
add
shlb
mov
imul
jno
inc
mov
xchg
insl
xchg
dec
out
mov
sbb
es
testb
in
and
in
dec
dec
add
inc
fs
jge
xchg
sbb
push
sub
in
js
push
dec
fdivrs
jmp
loopne
mov
xor
call
adc
cli
lods
and
frstor
push
fidivs
pslld
cmp
in
inc
xchg
and
xchg
adc
das
ret
xor
xor
mov
testl
sub
or
inc
push
mov
mov
sub
mov
jbe
stos
xchg
and
fisubs
mov
mov
fidivrl
pop
addr16
stos
enter
fwait
xchg
test
cmp
adc
sub
aaa
lahf
sbb
repnz
sub
aam
push
mov
fimuls
shll
arpl
pop
mov
jne
dec
add
adc
mov
subb
mov
inc
cmp
inc
mov
dec
dec
push
or
repnz
mull
shlb
xchg
jge
stc
frstor
in
or
or
lret
lret
std
out
test
or
xchg
popf
pop
jne
mov
es
mov
xchg
das
push
lods
fisttpll
cmp
shrl
cwtl
cmp
inc
int
xlat
adc
adc
inc
dec
lcall
pop
lcall
pop
imul
pop
xchg
mov
pop
repz
dec
sbb
aas
mov
xchg
inc
push
pop
scas
rcl
je
push
sbb
aad
mov
or
popf
push
push
xchg
pop
mov
dec
sbb
into
mov
mov
sub
imul
mov
pop
jbe
jp
repnz
adc
fwait
in
pop
gs
xchg
das
repz
add
mov
pop
out
idivb
or
loopne
mov
mov
adc
and
sbbb
sti
out
stos
jnp
bound
aam
mov
data16
call
test
or
shlb
mov
sbb
push
inc
inc
jge
xchg
cmp
loope
pop
mov
insl
jl
es
fcom
jnp
pop
mov
insl
jnp
outsb
xor
mov
andb
mov
push
loop
cmp
mov
dec
lcall
lret
cmpsb
fists
or
adc
out
rcr
mov
jnp
outsb
push
jle
call
mov
cs
aam
cmp
jns
mov
jns
scas
xchg
mov
cmpsb
push
sbb
icebp
imul
repnz
inc
inc
mov
sti
sarl
sub
shl
pop
mov
sete
jmp
orl
inc
mov
testb
xchg
fcoml
jp
mov
pop
cmc
inc
mov
cmp
xor
adc
out
imul
push
cmc
xor
jns
ja
mov
jp
adc
inc
xor
call
dec
lds
dec
xchg
inc
cmc
shll
test
pop
ret
iret
cmp
cmc
mov
in
sub
push
jne
aad
cmp
stos
pusha
push
xchg
out
rorl
mov
movsb
pop
pop
mov
insb
imul
fdivrp
bound
lret
lcall
dec
mov
push
xchg
add
imul
out
inc
jae
xor
adc
sbb
push
stos
push
paddd
leave
mov
enter
adc
imul
fldenv
subb
shrl
xchg
out
and
add
xchg
loope
or
pop
addr16
mov
push
jp
das
ror
clc
inc
hlt
mov
push
push
and
or
fistpll
xchg
xor
mov
std
mov
xor
pop
ds
fnstcw
rclb
cmp
andb
or
mov
sbb
mov
scas
loopne
test
mov
cmp
mov
mov
sub
pop
xchg
pop
lret
jge
out
jne
inc
jp
mull
push
fimuls
adc
das
sbb
fwait
jne
or
andb
sub
adc
addr16
pop
testl
gs
mov
fcomps
into
sub
or
cmp
push
imul
loope
lods
push
add
int
mov
xlat
imul
or
push
push
fwait
std
xchg
movl
push
push
sbb
push
daa
ja
int
std
mov
mov
sub
jo
lahf
inc
pushw
xor
dec
mov
mov
ds
mov
lods
ficoml
push
iret
leave
cmp
add
mov
lods
xchg
dec
outsb
dec
mov
lods
pop
mov
std
ffree
sbb
sbbl
das
setb
in
or
or
fs
out
stos
addr16
pop
jbe
jno
or
insl
jle
les
sysenter
jge
out
add
inc
bound
and
arpl
mov
push
adc
in
adc
or
xchg
subb
pop
ss
push
repz
push
dec
inc
jg
stc
std
out
cli
lods
cpuid
xlat
test
dec
add
jb
xor
insb
ljmp
and
xchg
ficomps
out
xchg
hlt
xchg
movsl
repnz
push
aad
cmp
xchg
addr16
das
test
mov
cwtl
cltd
call
mov
enter
loope
cli
pop
mov
hlt
and
jbe
lock
arpl
pushl
lcall
jmp
cli
adc
xchg
mov
cmp
dec
mov
imul
ljmp
out
add
jge
dec
jge
fucomip
xor
rcpps
lods
cld
jo
adc
xchg
adc
sbb
nop
int3
add
pushf
sub
dec
shlb
add
fidivs
adc
loopne
addr16
je
idivb
jg
clc
cmp
popf
inc
fwait
mov
sbb
fldpi
push
inc
sarb
xlat
inc
cmp
imul
cmp
ljmp
mov
mov
aas
icebp
xchg
jecxz
fwait
adc
adcl
xchg
add
dec
ja
cmc
adc
push
jb
es
lret
out
fmuls
xchg
stos
jmp
inc
jne
andb
inc
aas
fst
test
notl
cmpsb
mov
test
mov
fnstenv
mov
mov
push
mov
aam
fsubs
fdivrl
es
out
fildll
lods
sub
mov
xchg
jmp
mov
enter
pop
rcll
test
rorl
int
icebp
xchg
into
mov
test
test
loope
call
out
int3
es
fldl
sub
and
notl
mov
repnz
adc
mov
adc
bound
fldt
mov
shrl
repz
enter
sbb
and
adc
mov
test
in
ss
lret
cmpsl
add
pop
jo
mulps
cltd
pop
pushf
push
in
daa
or
mov
outsl
rolb
ss
mov
jae
mov
dec
sub
adc
aaa
in
and
inc
lret
xchg
hlt
insb
xchg
xor
xor
dec
arpl
mov
cmp
movsb
inc
lret
in
sbb
adc
in
lea
inc
imull
cmpsb
jle
sub
daa
adc
sbb
pop
sbb
push
mov
jno
insl
ficoml
ret
icebp
mov
daa
add
fildl
push
data16
pop
ss
rcrb
sub
xor
subl
fists
mov
inc
ret
sub
fmull
mov
insl
daa
adc
mov
adc
jne
add
cmpsb
xchg
iret
inc
add
scas
int3
cmp
fists
mov
mov
mov
push
scas
pop
in
cmpsl
inc
mov
cmp
mov
aam
jbe
mov
inc
mov
aaa
daa
mov
lea
pop
mov
pop
repnz
movsl
stos
mov
mov
mov
mov
dec
xchg
in
push
ds
fiadds
sbbb
les
jg
pop
test
stc
repnz
ficoms
ja
fwait
out
pop
movsb
inc
int3
xchg
fisubl
jl
jge
xlat
push
lds
xchg
inc
mov
mov
sbb
lret
jnp
in
sbb
add
out
jp
outsb
ret
xchg
push
mov
fwait
mov
mov
addr16
push
push
xchg
enter
jnp
xor
xchg
sbb
adc
std
loop
dec
push
xlat
pop
cwtl
cmp
push
and
xor
jge
call
cmp
mov
cmp
xchg
dec
dec
ds
pop
cmp
adc
or
xchg
pop
icebp
cmp
push
mov
xor
dec
dec
sub
icebp
aaa
adc
rorl
adc
loopne
fisubl
loopne
lret
mov
sub
fadd
add
jmp
jne
sti
adc
xor
mov
clc
mov
inc
jecxz
or
or
call
mov
push
mov
jl
jbe
stos
imul
js
xchg
sahf
mov
rolb
popf
sbb
shlb
push
jl
jnp
adc
lret
mov
cmc
adc
cs
pusha
jbe
and
or
adc
or
and
lret
shll
xchg
sub
push
pop
or
xchg
pop
ficoml
rcrl
push
or
ljmp
jecxz
in
dec
cmpb
xchg
pop
rcrb
pmulhw
fs
lock
adc
dec
mov
mov
sub
xchg
mov
or
scas
fiadds
mov
clc
mov
les
inc
scas
add
mov
daa
insb
mov
daa
mov
imul
mov
out
ss
aam
mov
in
cmp
aas
and
mov
daa
lret
add
lcall
mov
sbb
inc
lcall
push
fimuls
xchg
adc
dec
mov
ret
sbb
shll
sub
mov
les
fwait
cmpsb
jmp
sub
scas
dec
push
popf
outsb
jmp
ljmp
and
pop
xchg
dec
fadds
rorl
push
fwait
push
pushl
aas
cli
sbb
fs
jge
xchg
fbstp
adc
sbb
add
stc
jnp
in
add
xchg
jg
ror
sbb
test
xchg
movsl
sub
add
dec
xchg
test
sahf
mov
rcl
push
rcr
mov
sarl
inc
push
and
cmp
in
cld
push
jl
ja
outsl
hlt
loope
push
sbb
xchg
pop
jle
jns
mov
push
fimuls
daa
pop
add
lret
mov
lods
adc
push
mov
int
or
cmp
mov
dec
sub
or
xlat
cmp
push
inc
inc
enter
xchg
push
jle
ds
cmp
ret
or
std
sub
or
pop
cltd
mov
push
popa
pop
dec
mov
jle
movl
int
or
xor
lods
and
or
push
pop
mov
jecxz
adc
mov
daa
inc
xor
daa
scas
sbb
cmp
pop
xchg
loopne
cmp
movsb
iret
mov
clc
repz
sub
ja
cmp
dec
stc
add
dec
loopne
in
adc
and
lcall
mov
cmp
cmp
xlat
dec
jns
je
in
ss
cmp
jns
outsb
out
mov
cmp
pop
inc
add
and
mov
dec
push
imul
cli
insl
cmc
gs
xlat
cmp
cmp
xor
sbb
pop
cmp
shlb
aam
scas
add
xchg
mov
pop
gs
mov
sub
xor
ss
shrb
mov
js
ljmp
mov
ror
notl
push
mov
test
mov
fidivl
adcb
rorl
push
gs
arpl
xor
inc
js
xchg
out
andl
inc
mov
clc
js
xlat
pushf
sarb
lock
push
aas
cli
movsl
dec
sub
jno
cmp
cmpsl
dec
cltd
cmpsb
cmp
push
mov
or
std
enter
dec
subl
mov
xlat
and
mov
jmp
push
xchg
dec
mov
ret
xor
xor
int
out
repnz
or
push
inc
cmp
aaa
push
xchg
dec
pop
adcl
push
xor
mov
jg
jge
jecxz
xchg
mov
sub
ja
sarl
xlat
pushf
rclb
mov
popf
mov
fucomi
add
jb
ror
fists
mov
out
mov
mov
repnz
aas
sahf
pop
shrl
xchg
and
pushf
and
mov
mov
push
jl
mov
nop
cmp
xchg
inc
lret
push
cmpb
xor
cmp
sbb
or
ficoml
bound
cli
mov
dec
inc
in
scas
mov
inc
jb
scas
movsb
xor
daa
in
jge
rorl
mov
xchg
fidivs
sbb
nop
sbb
movsb
jle
sub
or
mov
push
clc
les
sbb
adc
jne
mov
int3
add
and
mov
dec
or
pop
shll
lods
adc
and
mov
pop
xchg
or
cmova
fisttpl
adc
cli
push
popl
xor
nop
xchg
out
fldl
cmp
mov
and
sahf
jle
push
and
por
int
outsb
xchg
repnz
xchg
add
ret
das
stos
adc
repz
jnp
rclb
cmpsb
sub
ja
push
movd
push
and
push
test
js
push
in
inc
test
add
xor
cltd
mov
mov
xlat
cmp
mov
xor
movl
jo
jbe
jecxz
sub
or
push
mov
loop
add
fcmovnb
xor
les
push
int3
psubq
loop
addr16
xor
sbb
inc
jmp
loop
add
cli
cmp
pop
mov
adc
add
cmp
or
fwait
and
lods
push
jmp
xchg
inc
jb
movsb
mov
xorl
push
fists
xchg
sub
push
mov
lret
pop
sbb
adc
push
inc
xor
into
jmp
mov
mov
shll
lods
bsr
add
fistpll
xchg
imul
cmp
dec
out
fistpll
lock
movsb
inc
add
mov
adc
inc
dec
lret
dec
es
arpl
push
sub
inc
jne
btc
mov
insb
stos
test
inc
enter
dec
bound
and
fwait
test
and
pop
inc
mov
cmp
pop
mov
dec
scas
fidivrs
arpl
mov
pop
lods
mov
out
pusha
push
cwtl
cmp
dec
or
push
icebp
mov
arpl
mov
adc
cmpsb
or
cli
aam
fbstp
sub
out
push
inc
fiaddl
cld
jno
aaa
sub
out
mov
push
push
cli
mov
cs
jb
mov
iret
enter
sbb
or
adc
jl
lea
xor
and
xchg
dec
ss
jecxz
popf
out
pop
movsb
lock
arpl
sub
ret
lret
mov
jae
ret
les
xlat
pop
outsl
xchg
in
ds
in
loop,pt
jg
mov
pop
movups
and
ljmp
cmp
cmpsl
xchg
pushf
or
sahf
nop
out
mov
ds
sub
mov
pop
test
mov
or
cltd
and
popa
aad
adc
cmp
mov
inc
add
mov
mov
sbb
out
es
jle
push
inc
pop
dec
push
fmul
in
or
add
pop
inc
and
in
es
out
lds
dec
movsb
leave
xlat
fstps
pop
iret
xor
xchg
mov
push
xchg
push
jge
or
das
push
and
sub
sbb
adc
mov
loopne
and
or
repnz
cli
pop
pop
ret
xchg
dec
push
test
ljmp
bound
xor
cmp
sub
adc
imul
in
ss
mov
dec
jno
sub
inc
scas
cmp
sub
sub
aas
out
inc
xchg
mov
dec
shrb
nop
jbe
aad
fmull
mov
pusha
or
stos
orb
add
and
push
filds
mov
enter
mov
out
stos
cmpb
test
cmpsb
imul
lock
push
test
into
gs
mov
xor
and
cmp
pop
in
inc
div
int
cld
lea
inc
enter
sti
stos
aaa
fs
mov
mov
jl
or
mov
jg
cmp
popf
jl
pushf
sbb
cmpsl
orl
sub
adc
shll
mov
fcoml
add
stc
xchg
and
sub
xchg
xchg
pusha
xor
rcrb
inc
mov
ljmp
add
sbb
sti
shl
shl
sub
nop
hlt
cmp
aam
inc
mov
ja
arpl
push
add
fs
cmc
clc
cltd
ds
int
or
mov
movsb
push
test
push
pusha
pop
push
movsb
sbb
jb
cmp
push
fists
js
dec
jbe
mov
ss
push
mov
rcll
arpl
and
or
andb
jecxz
dec
stc
or
fidivrs
cmc
or
addr16
popa
fcmovne
or
jg
adc
sub
mov
daa
mov
in
xor
jg
movsb
xor
dec
xchg
mov
push
scas
xor
rolb
sub
pop
mov
sub
bound
and
adc
push
cmp
push
iret
adc
jb
mov
fucomp
enter
sbb
fxch
insb
fdivs
xchg
jge
sti
cmp
mov
push
cli
cmp
sar
repnz
je
std
movsb
fcomip
enter
andb
clc
inc
mov
xor
add
lds
inc
ret
lcall
mov
lods
xchg
sub
daa
inc
xchg
mov
jbe
xchg
jmp
xchg
xchg
imul
shlb
or
cmp
loopne
push
fs
inc
mov
test
inc
mov
fwait
dec
dec
mov
and
dec
dec
subl
dec
lea
js
stos
mov
aam
xchg
jecxz
addr16
adc
sti
loopne
clc
stos
dec
stos
lods
pop
adc
jl
jns
stc
pop
sub
aad
xor
cli
pushf
push
sub
jne
sub
hlt
enter
enter
loopne
pop
inc
out
sub
clc
jecxz
icebp
lret
js
push
jnp
lds
adc
mov
lods
pop
jns
inc
outsl
sub
orl
xor
or
in
jnp
test
mov
aad
ret
push
das
fsubr
sbbb
mov
dec
cmpsl
dec
aaa
xchg
jg
xor
lds
jge
loopne
mov
int3
out
sub
xor
push
std
lcall
daa
push
sbb
pop
test
sahf
popf
xchg
imull
sbb
in
adc
sbb
ja
in
in
adc
mov
sbb
xor
push
jo
push
mov
fnstsw
arpl
pushf
movsb
dec
pop
shl
add
jns
loope
add
ficoml
dec
lods
je
cmp
ljmp
fistpll
and
sbb
jl
aad
push
decb
out
jge
xchg
shll
inc
xchg
popf
fwait
call
mov
lret
dec
aad
cmp
jl
and
into
loop
xchg
sbb
push
pop
jne
mov
xlat
nop
sub
es
scas
mov
decl
out
xchg
add
je
cmp
sub
imul
or
js
cmpsl
dec
push
pop
mov
clc
cmp
call
es
mov
fcompl
or
xchg
lods
out
js
popf
xchg
rcll
sub
insb
pusha
out
enter
sbb
insb
inc
sbb
notb
mov
mov
pop
or
sbb
out
lods
into
pop
sbb
repz
arpl
jp
mov
cmp
sub
int
jecxz
cmp
stc
mov
xchg
int3
bnd
aad
push
push
sbb
scas
pop
sti
xor
push
sti
out
adc
push
popf
mov
push
mov
rclb
in
push
das
cmpsb
mov
xchg
ds
repz
test
sbb
inc
push
inc
add
sti
mov
xchg
adc
repz
sbb
push
pop
jg
adc
pop
mov
imul
jecxz
out
jne
mov
pop
fwait
in
push
xchg
cs
jbe
inc
mov
test
aas
xor
sub
inc
pop
sub
daa
mov
mov
xchg
fsubrs
mov
pop
xchg
inc
or
adc
dec
daa
mov
push
test
nop
fcoms
lahf
in
popa
mov
insl
fildll
jnp
inc
loopne
mov
shrl
cmp
mov
shl
ds
sbb
dec
xchg
lret
jae
out
push
push
xor
cmp
sti
out
fidivrs
loope
scas
imul
mov
movsb
push
gs
or
int3
es
add
daa
sbb
lcall
push
mov
inc
test
out
out
push
mov
lcall
adc
scas
js
mov
mov
ret
imul
test
ffreep
and
clc
sub
mov
mov
fnsave
xchg
std
aas
pop
cld
dec
cmpsb
jno
int
outsl
outsl
ljmp
mov
inc
mov
ret
enter
mov
pop
pop
cs
enter
pop
cmpsb
xor
loope
lahf
aad
jne
adc
mov
bound
out
mov
xchg
adc
dec
das
mov
sub
cmpsl
fcomps
xchg
push
test
mov
clc
cmpsl
mov
call
jae
mov
je
popf
adc
call
mov
jle
mov
fwait
lret
int3
orl
mov
ss
xlat
and
jg
mov
out
jo
pop
in
and
es
hlt
or
cmc
fs
mov
test
pop
mov
pop
jae
push
adc
sub
loopne
in
jbe
filds
in
out
mov
sbbb
or
test
shll
mov
dec
sub
inc
pusha
in
add
pop
cwtl
sub
stos
sbb
sub
jmp
mov
mov
and
and
jecxz
xor
dec
dec
jecxz
jb
in
mov
jnp
mov
pop
cwtl
mov
and
mov
jmp
sti
sbb
mov
outsl
xorl
inc
jne
gs
repz
ss
mov
cmp
mov
xlat
lahf
gs
adc
dec
jge
sar
ja
shll
jg
push
jnp
adc
in
lcall
fdivl
pushf
out
mov
insl
pop
mov
test
enter
outsl
pop
mov
push
leave
push
rcl
repz
cmc
lret
mov
mov
and
insb
xchg
cmp
loope
mov
push
pop
add
test
dec
imull
negl
cmp
fldcw
mov
adc
loop
insb
push
fildll
mov
jae
xchg
outsl
mov
cmp
stc
adc
add
add
add
sub
rorl
clc
test
mov
xlat
sbb
dec
inc
mov
leave
xchg
pusha
inc
sub
sub
add
xchg
push
push
mov
pop
mov
fimull
lahf
test
lods
add
or
add
gs
pop
dec
repz
jl
push
or
mov
jmp
das
adc
lock
and
cmpsl
bound
rclb
mov
add
fadds
push
xor
inc
fs
cs
rcr
repnz
cs
sub
jbe
jns
jno
imul
fldcw
rcr
xor
fdivs
fisubs
popf
mov
xchg
imul
sub
jmp
xchg
inc
lcall
bound
dec
lahf
mov
mov
mov
ret
sub
pop
leave
add
sub
xchg
cmpsb
clc
add
repz
outsl
jo
cmpsb
imul
outsb
fnstsw
pop
std
maskmovq
negl
mov
or
sarb
pop
ffreep
dec
adc
cmc
inc
stos
neg
jbe
fnstenv
mov
xor
mov
push
push
cmp
stc
call
rorb
and
arpl
fisubrl
cs
mull
push
std
fidivs
cmovg
jbe
adc
add
cmp
hlt
cmp
out
sbb
cli
pop
or
jnp
adc
inc
push
push
add
fsubs
aaa
jnp
pop
mov
bound
fs
jmp
mov
test
in
clc
mov
jp
subl
mov
xor
adc
push
fwait
pop
jo
idiv
bound
mov
out
jl
fdivrs
xchg
pop
test
xor
lods
push
js
xchg
scas
sbb
sub
pop
sbb
lcall
inc
adc
push
mov
test
dec
jo,pn
pop
adcb
rcll
mov
es
loope
popa
pushf
adc
pusha
xor
xchg
cmp
out
inc
pop
jo
sub
dec
mov
mov
xor
and
adc
jmp
mov
mov
movsl
sub
mov
gs
dec
jle
pop
subb
cmp
mov
pop
aas
jo
xor
push
inc
adc
pop
sub
inc
inc
lock
pop
xor
xchg
out
mov
aad
fmuls
cmc
cmp
pop
lds
mov
lds
dec
cmp
jno
insb
movsb
icebp
inc
stc
xchg
stos
xchg
push
xchg
dec
or
pop
jle
fidivl
shr
sub
faddl
std
shlb
xlat
sub
shrb
arpl
dec
shll
or
test
mov
jecxz
stc
xor
adc
push
into
daa
sahf
sarl
pushf
inc
or
xor
andl
insl
sbb
mov
cmp
sbb
mov
push
sbb
mov
pop
jb
jnp,pt
jae
jno
es
inc
bound
addr16
mov
ret
xchg
insb
cltd
ret
ja
mov
fildl
lret
repnz
push
lods
pop
xchg
hlt
lahf
outsl
cmpsl
xchg
loop
pop
sbb
incb
call
loopne
scas
addb
cmpsl
imull
push
inc
fs
negl
pop
jg
ja
jmp
jnp
mov
mov
sbb
pop
mov
push
push
call
int
fidivrl
aas
push
dec
fidivrs
cmp
dec
nop
add
jo
mov
cltd
or
test
adc
and
adc
add
mov
popa
adc
sti
and
add
popa
and
cmp
mov
pop
lcall
xchg
popa
mov
filds
xchg
ja
dec
xor
call
pop
aad
cwtl
daa
dec
push
push
jmp
xor
adc
xlat
inc
into
sub
test
enter
sbb
mov
mov
psubsw
in
xchg
push
loopne
mov
ret
scas
stos
fstp
sbb
and
pop
inc
loope
push
icebp
pop
inc
pop
int3
cmc
aad
out
xchg
pop
sub
outsb
push
loope
je
les
orb
clc
fisubs
add
add
fistpll
dec
inc
jbe
and
sahf
sahf
xchg
loopne
pop
mov
xchg
or
ja
popa
jbe
mov
push
and
cli
jle
fdivrs
and
jnp
aad
sub
jno
jo
mov
cmpsl
pop
cmp
negl
sti
push
in
dec
imul
inc
jno
mov
pop
add
iret
cwtl
cld
leave
dec
fldenv
popf
mov
push
mov
rorb
rclb
lret
adc
jecxz
mov
pushf
push
pop
ljmp
push
movsb
insb
in
push
mov
jle
jb
cmp
inc
pushf
dec
notl
sbb
sbbl
in
or
push
jl
in
fstps
mov
xchg
add
cmc
daa
cli
jmp
es
pop
inc
cmp
pushf
imul
inc
js
pop
and
mov
sti
xchg
pop
stc
sbb
enter
cmp
cmp
jnp
std
xchg
adc
cmp
iret
scas
or
inc
lret
sub
ss
sbb
mov
sbb
cmc
cli
cmp
loope
fisttpl
jae
adc
jecxz
fwait
dec
jmp
adc
mov
pop
xchg
xlat
lahf
dec
or
insl
lret
ds
iret
sbb
sbb
test
dec
test
and
shrl
imul
mov
sub
mov
ret
aaa
jmp
jge
dec
cmpsl
scas
cmc
scas
lock
cltd
aad
popa
stc
les
add
call
ret
daa
pop
add
fnstenv
or
jbe
cmp
jb
lcall
xchg
pop
cmpsb
or
fldt
mov
and
aaa
cwtl
pop
sub
stos
test
in
shll
sub
cmp
pop
adc
or
mov
cmc
ds
cmpsl
add
popf
les
inc
jns
movsl
aas
sub
sbb
dec
negb
add
in
mov
ret
and
in
adcl
mov
mov
jge
in
in
sub
std
repnz
loopne
ljmp
cmpsl
inc
int3
lods
mov
clc
sbb
jge
mov
mov
push
sub
out
test
pop
dec
int3
dec
scas
ret
pop
jp
pop
das
test
mov
cmpsb
fwait
inc
sbb
jmp
ret
add
dec
pop
cs
icebp
rol
vhaddpd
cmc
adcl
jbe
mov
cmp
ja
sub
or
out
inc
xchg
mov
jno
jge
mov
sbb
add
pop
push
xchg
clc
cli
in
fnstsw
lock
cmp
sub
push
stos
jg
jnp
inc
dec
pusha
cmp
test
sub
mov
dec
lea
int3
jge
pop
mov
sbb
sub
hlt
das
add
loop
add
and
stos
subl
jmp
inc
cmp
test
test
nop
pop
loop
imul
mov
jle
mov
pop
mov
dec
negb
sub
testl
adc
fcmovnu
sbb
cmp
test
xchg
mov
cmp
testb
call
js
xchg
or
push
in
sbb
popf
sub
rorl
adc
xchg
push
or
sbb
cli
popa
add
dec
push
inc
les
aaa
out
aaa
out
push
inc
cltd
dec
loop
sub
jns
cmp
shr
cmpsl
and
hlt
gs
xchg
mov
sbb
in
out
loop
push
lret
sti
sahf
daa
pop
movb
mov
push
loop
stc
xor
js
push
lcall
cwtl
arpl
cmpsl
fnop
push
add
and
inc
mov
fwait
pop
mov
xchg
nop
sub
rcl
sub
push
cli
jge
pop
xor
test
jnp
jb
test
or
imul
rcl
jb
or
inc
push
negb
inc
mov
sub
xchg
xor
xchg
scas
repnz
xchg
js
repnz
jl
dec
or
dec
push
add
sbb
in
and
mov
lea
cs
xchg
or
push
mov
mov
ret
fs
push
sbb
aad
outsb
sbb
sub
out
insb
xchg
sbb
shrb
gs
push
sbb
mov
jg
icebp
dec
fdivl
cmp
jl
xchg
popa
call
aas
jl
mov
jmp
js
add
out
adc
jb
fisubrs
cld
sti
dec
xchg
pop
jecxz
rolb
les
loope
adc
ss
out
hlt
pop
ss
jnp
shr
loop
xor
movsb
mov
inc
hlt
mov
push
mov
inc
cld
inc
mov
cmp
dec
xchg
pop
cmp
sarb
xchg
sub
sbb
cmp
aad
testb
lea
dec
ret
scas
loope
fnstsw
jle,pt
and
je
std
lcall
lods
or
call
insb
ret
inc
shl
jmp
inc
inc
cltd
inc
jne
shll
and
mov
inc
mov
fimull
pop
ret
jnp
adc
xor
out
or
push
jb
outsl
cmc
sub
outsb
in
push
jb,pn
in
mov
push
xchg
hlt
mov
fldenv
outsb
mov
sub
push
mov
sti
daa
call
sub
sbb
add
or
aaa
adc
jg
lds
pop
cli
outsb
adcl
sbb
insb
into
inc
nop
fimuls
xchg
dec
xlat
fmull
pop
out
mov
popf
sbb
xchg
in
inc
sahf
push
adc
mov
push
cmpsb
xor
fidivs
clc
pop
shll
pop
orb
out
add
xchg
sub
mov
insb
call
pop
mov
push
sub
aaa
and
notb
mov
imul
out
bound
xchg
test
repnz
push
lret
icebp
fsub
sbbl
rcl
inc
pop
ror
inc
es
test
pop
pop
dec
fsubs
ret
mov
ja
sbb
movsb
inc
sarb
andl
shlb
and
loop
xchg
sub
repnz
push
out
inc
mov
jl
mov
loope
xor
ds
incl
out
loope
hlt
outsb
or
cli
cmp
sbb
mov
pop
cmp
sbb
shrb
mov
jmp
leave
popa
push
mov
fwait
add
mov
mov
sub
lcall
xor
inc
rclb
mov
clc
sub
dec
out
test
ret
loop
cltd
inc
lret
sbb
xor
mov
mov
adc
and
push
mov
jne
xor
sbb
push
jo
or
test
xor
pop
lods
add
xchg
das
clc
pop
stos
mov
popa
or
dec
pop
scas
dec
jle
pusha
pop
outsb
out
lcall
xchg
jp
daa
push
lret
popf
add
mov
or
pop
clc
loope
pop
mov
dec
mov
mov
xchg
cmp
aad
repz
ljmp
insb
xchg
fcoml
test
aad
mov
aaa
lea
cmpsb
push
movsl
mov
test
cmc
daa
or
cmp
pop
pop
mov
xchg
out
sub
jns
cmp
pop
push
pop
arpl
roll
lock
xor
pushf
aas
pushf
sbb
insl
shlb
cmp
sub
cld
addr16
loopne
xchg
push
dec
and
sub
sti
sub
and
inc
outsl
das
pop
inc
mov
xorl
jno
mov
loope
rclb
sub
into
mov
in
ja
pop
stos
cmp
std
sahf
cld
or
inc
pop
xchg
mov
int3
xchg
gs
jle
movsl
xchg
mov
and
cmc
mov
cwtl
sbb
mov
scas
xor
ja
mov
mov
add
mov
mov
int3
arpl
test
lock
in
cmc
or
xor
add
jae
inc
xor
pushf
xor
pop
jle
mov
js
dec
popa
imull
mov
mov
aaa
adc
mov
into
jle
outsb
inc
clc
inc
lods
add
adc
pusha
pop
repz
cli
fsubs
and
xor
inc
out
shrl
clc
scas
lea
movsl
daa
pop
xchg
bnd
lock
add
fldcw
testl
enter
or
in
push
push
popf
ficomps
loop
loopne
jns
fnsetpm(287
aaa
jge
shlb
rcll
sub
pop
inc
jg
mov
xor
ret
cltd
mov
and
mov
push
dec
sbb
addr16
mov
shlb
xchg
adc
test
mov
gs
mov
roll
test
hlt
ret
jo
cmpsb
mov
sbb
jl
jg
mov
dec
sub
ljmp
jmp
test
out
mov
and
aaa
aas
sbb
adc
out
jl
mov
push
xchg
or
fisttpll
int
jbe
mov
or
adc
dec
mov
mov
popf
xor
mov
in
jnp
fidivrs
add
sar
stc
mov
inc
pushf
jl
movl
test
mov
xor
and
adc
adc
cld
add
mov
dec
repnz
aas
add
data16
gs
push
call
xor
push
data16
adc
push
dec
js
shll
popa
inc
jb
popa
jae
pop
push
mov
test
fs
lock
bound
aaa
mov
sbb
outsb
fwait
dec
and
movsb
xor
loope
mov
or
xchg
adc
cmovg
aam
pop
in
adc
pop
adc
pop
push
leave
into
mov
mov
imul
dec
push
imul
test
shlb
iret
call
cmp
cltd
mov
adc
repnz
cltd
in
scas
cmpsb
movsb
movsb
sub
push
mov
repnz
xor
jo
ljmp
pop
inc
loope
out
mov
xchg
fists
cli
jecxz
cmpsb
pop
push
andl
ficoms
insl
stos
add
xor
sar
push
scas
and
lods
rolb
out
orl
daa
adc
out
push
mov
mov
clc
dec
movsl
cltd
divb
bound
imul
ss
clc
mov
adc
add
ret
inc
shrl
pop
lds
testb
repz
scas
ja
or
pop
gs
popf
into
mov
cs
pop
cmp
cltd
jp
shl
adc
in
into
enter
mov
cltd
push
xlat
push
outsb
pop
int
sbb
push
jns
pop
mov
xchg
sbb
in
and
push
stos
mov
jmp
ds
mov
xor
dec
sbb
repz
push
movsb
decl
fcmovnu
cmp
mov
cli
lcall
inc
out
or
cmp
pop
pusha
adc
icebp
sub
int
jae
sub
incb
call
ret
push
insb
pop
cmp
mov
sti
mov
aam
fcompl
stos
xchg
loop
or
sti
movsl
fisubrs
cmc
shll
mov
and
jp
ficompl
jne
dec
add
jo
leave
inc
iret
xor
int3
sahf
lods
jb
push
push
mov
test
adc
mov
loopne
dec
cmp
mov
lret
and
push
sahf
push
cmp
mov
pushf
sub
outsb
fsubrs
enter
dec
mov
sub
imul
sub
jae
outsl
insl
inc
push
out
std
push
or
sbb
sub
jp
inc
mov
dec
popa
sbb
rolb
mov
push
jne
xor
mul
or
lret
add
mov
pushf
and
cld
cs
inc
notb
into
cmpsl
mov
cmp
or
orb
out
lahf
push
jle
mov
mov
mov
nop
shrl
mov
jge
inc
orb
jmp
adc
rcll
jle
movsl
in
cmp
flds
or
mov
or
dec
xor
cmp
std
out
shrb
dec
mov
lock
pop
push
mov
fiadds
aaa
mov
sub
push
pop
adc
aas
mov
rcrb
dec
shlb
loopne
jnp
repz
xchg
cld
stc
pop
inc
fisttpll
dec
pop
jno
mov
jle
sub
popf
je
adc
add
cwtl
jbe
popl
sti
dec
das
rclb
imul
xchg
inc
add
repnz
test
testl
sbb
outsl
insl
popf
data16
call
fsts
inc
pusha
adc
inc
xchg
adc
nop
adc
outsl
cmpsb
arpl
pop
cltd
pop
addr16
repnz
mov
es
mov
xchg
push
out
pop
mov
and
lods
fistpl
js
movsl
mov
insl
pop
std
jbe
xchg
mov
int3
inc
pop
mov
fbstp
jnp
jae
aaa
add
repz
or
adc
push
and
add
inc
mov
mov
push
cltd
aaa
pavgw
dec
imul
cwtl
cmp
push
and
ret
aas
pop
aam
fwait
mov
and
js
and
sbb
sub
cli
sub
movsb
adc
inc
cld
xor
xchg
cs
jb
div
mov
sub
xchg
rcrb
orb
mov
sbb
repz
sti
in
and
inc
repz
adc
push
adc
adc
adc
scas
scas
mov
lods
jno
add
pop
pop
mov
cmpsb
add
push
adc
mov
aaa
bnd
push
loop
addr16
arpl
sbb
push
and
mov
aas
jmp
inc
cmp
push
mov
xchg
notb
push
push
inc
lods
les
xor
mov
cwtl
cmp
mov
notl
pop
std
adcl
xchg
push
ret
mov
jle
adc
sbb
ljmp
fdivs
jg
test
or
cli
mov
jb
lods
unpcklps
and
mov
inc
or
ds
jbe
rcrb
mov
rorb
push
cwtl
call
xor
test
pop
push
lcall
std
xchg
pop
test
movsl
clc
fld
add
xchg
inc
rcll
push
push
inc
lods
add
enter
xor
mov
test
cmp
jno
mov
push
xor
xchg
rorl
add
sub
or
dec
aam
stos
mov
and
pop
imul
and
scas
cli
nop
sbb
jb
ds
in
cmp
dec
sahf
jecxz
fstl
addr16
dec
aad
mov
sbb
dec
cmp
push
or
mov
pop
rcll
mov
xchg
cwtl
inc
sub
std
mov
addps
insl
inc
xchg
daa
not
push
mov
andl
sti
pop
aad
out
pop
out
popf
inc
cmpsb
xchg
mov
insl
icebp
cmpsb
mov
sbb
cmp
dec
pop
mov
pop
in
fcompl
xchg
in
divl
leave
fcompl
dec
push
xchg
shlb
clc
xchg
mov
dec
jb
dec
jecxz
ret
addr16
pop
sbb
aad
loopne
pusha
aad
or
add
inc
inc
mov
scas
push
adc
push
adc
stc
addr16
rol
push
adc
inc
mov
push
insl
test
push
cmp
jmp
or
push
fistl
dec
jmp
sub
mov
push
cwtl
movsl
xchg
dec
or
adc
es
fimull
sbb
in
sbb
jmp
lahf
pop
fildl
push
or
xchg
or
iret
sbb
ss
cli
dec
push
pusha
cmpsl
sub
scas
shr
call
xchg
iret
dec
scas
repz
dec
push
xor
std
test
cmp
dec
dec
das
adc
in
mov
push
shll
pop
stos
dec
pushf
or
cwtl
and
ja
and
sbb
icebp
stc
fwait
loope
shlb
dec
test
ficomps
in
pop
fnsave
lods
fcomps
imul
cmp
outsl
hlt
hlt
and
fs
sbb
outsl
gs
mov
dec
mov
leave
lods
and
popf
jmp
adc
pop
dec
mov
sbb
mov
xor
or
mov
loope
dec
ret
cmpsl
nop
fcomip
and
stos
sbb
pop
adc
push
sbb
or
mov
pop
sub
roll
sbb
inc
in
jge
ds
push
pop
and
sub
xchg
push
in
sbb
add
and
test
repz
leave
sub
pop
pusha
sbb
fnstenv
pusha
cmpsl
into
or
cmpsl
add
and
lock
inc
scas
xor
push
or
arpl
movsl
pop
push
xor
call
mov
cmp
nop
sbb
xchg
pop
in
cli
in
sbb
movl
popf
outsb
xor
xor
jp
insl
stos
or
push
add
test
push
fidivs
std
cmp
or
cmp
push
cmc
mov
mov
or
mov
mov
dec
rolb
mov
fsubl
mov
loope
neg
mov
and
outsb
insl
pop
icebp
cli
xor
in
lock
sub
mov
es
enter
jne
sbb
mov
xchg
push
push
std
insb
mov
adc
cmp
add
mov
mov
pushf
adc
sub
test
pop
ljmp
xchg
xchg
in
xor
dec
sahf
adc
mov
insl
fs
push
cli
je
or
or
gs
dec
jmp
xchg
daa
inc
push
sahf
scas
xlat
or
pop
or
ds
cmpsl
shll
pushf
push
jg
sub
mov
sbb
xlat
push
mov
add
popa
cli
fldcw
inc
sbb
and
mov
ja
inc
pop
mov
mov
jbe
mov
roll
mov
jno
mov
adc
rcl
xlat
arpl
xor
imul
xchg
mov
pushf
es
nop
jbe
adc
or
sbb
mov
out
xor
cld
inc
gs
cli
inc
dec
cltd
jno
repz
add
fwait
pop
push
jnp
loope
mov
arpl
dec
or
je
xlat
and
out
shll
in
inc
cmpsl
lods
mov
mov
std
test
rclb
test
es
js
jecxz
push
data16
movsb
std
leave
mov
add
scas
fisubrl
adc
mov
pop
pop
jno
out
jo
stos
lods
int3
xlat
pop
out
adc
dec
xor
or
pop
lods
cs
aas
dec
sbb
inc
mov
push
jnp
inc
fwait
lret
iret
mov
sub
and
hlt
insl
jl
popf
xchg
ds
aas
aaa
sub
sti
cmc
add
shlb
pop
dec
dec
mov
mov
mov
push
mov
lods
xor
cld
dec
inc
stc
mov
mov
xchg
int3
dec
add
mov
fiaddl
pop
dec
pop
xchg
nop
popa
rclb
inc
js
xchg
push
nop
ficoml
cmp
movsl
dec
jns
jmp
call
and
sub
jl
jmp
inc
or
or
cs
or
xor
cli
mov
aam
cmpsl
into
daa
pop
adc
sub
mov
cmp
lods
push
mov
mov
jmp
add
sbb
fldenv
jo
sub
cs
xchg
push
jg
cmc
rolb
and
mov
sub
subl
xchg
adc
cwtl
sbb
dec
out
lahf
std
and
dec
sahf
ja
mov
push
addr16
inc
mov
aaa
in
xchg
push
test
cmp
mov
aam
push
scas
xchg
push
test
cmp
mov
clc
push
dec
in
inc
dec
ja
mov
push
pop
repz
stc
push
sti
or
insb
inc
push
push
test
push
clc
fs
repz
fs
pop
movsl
dec
call
je
pop
inc
sbbb
sarb
rclb
mov
sub
and
push
fstps
push
decb
rcrb
inc
sub
dec
or
push
mov
cmc
jbe
daa
and
mov
addb
aas
mov
out
in
xor
pop
mov
rolb
pop
lret
jecxz
push
sbb
nop
dec
cld
cld
cmp
in
insl
aad
sub
adc
out
dec
push
rorb
lret
cltd
cmp
aad
sti
in
sti
pop
or
jecxz
add
and
rorb
mov
xlat
inc
repz
cmc
cmp
into
or
loop
fwait
mov
addr16
xor
fdivs
pop
or
pop
and
lahf
cmp
shlb
push
and
sub
popa
cmp
push
pop
fidivrl
mov
jne
mov
push
scas
insl
shlb
je
mov
inc
xchg
in
repnz
popf
sarb
insb
mov
daa
loope
ds
clc
mov
xchg
fsubrl
inc
cmp
ss
mov
aaa
xchg
lret
test
outsb
out
divb
rcrl
xlat
add
into
jge
mov
push
sahf
enter
adc
leave
xchg
inc
test
mov
sub
stos
mov
rclb
outsb
sub
dec
fsubrl
mov
repz
mov
inc
lahf
and
js
inc
mov
push
leave
in
cmpsl
out
rcll
mov
push
inc
or
cmc
fucom
lock
fs
ret
mov
cld
mov
xchg
fwait
or
xlat
testb
lcall
fistl
sbb
xor
mov
pop
xchg
inc
cmp
mov
mov
sbb
push
pop
in
add
fiadds
jecxz
rorl
leave
fldenv
stos
jg
insb
into
repz
jo
add
cmpsb
cmp
pop
mov
mov
jge
hlt
pop
mov
or
fistps
negb
rcrl
insb
cmpsb
in
mov
sub
movsl
sub
cmc
inc
or
mov
negb
ss
icebp
inc
int3
fs
data16
nop
loopne
loop
adc
icebp
out
fwait
call
cmp
and
push
call
xor
out
ret
xchg
pop
cli
stc
and
sub
popf
lock
jne
xlat
and
or
popf
dec
sbb
adc
pop
xchg
add
adc
sbb
jecxz
or
sbb
add
xchg
stc
insb
jge
ljmp
xchg
xlat
ss
loope
lret
call
icebp
js
andl
or
fwait
outsl
adc
pop
and
add
dec
and
bound
push
cmp
loop
leave
sbbb
cmp
out
push
repnz
add
jmp
lahf
inc
push
mov
je
xchg
sahf
les
push
lcall
adc
mov
add
fdivrl
pop
fxch
mov
das
mul
mov
dec
fwait
sbb
adc
mov
pop
add
pop
out
loopne
push
pusha
mov
mov
sub
inc
add
in
pop
xor
mov
jo
xchg
dec
dec
repnz
mov
pop
sbb
cld
cmpsb
xor
stos
mov
adc
mov
dec
leave
cwtl
mov
or
xor
sahf
movsl
shll
scas
imulb
int
rol
out
loopne
mov
lea
icebp
mov
rcl
fwait
lret
jo
lret
jbe
xchg
mov
mov
nop
stos
enter
xor
cmp
dec
neg
imul
lods
cmpsl
jb
mov
mov
test
cmp
xchg
xchg
insb
test
add
cli
push
jle
pop
pop
xchg
js
mov
and
insl
daa
lret
jmp
int3
adc
mov
push
mov
stc
lods
xor
mov
scas
jno
mov
xor
js
les
loop
lods
ja
mov
dec
xchg
cli
xlat
dec
xchg
adc
in
stos
push
sub
loop
mov
mov
xchg
insl
push
pop
repnz
fwait
add
enter
pop
mov
or
add
lock
sbb
sbb
movsl
inc
rol
cmpl
jne
cmp
pop
mov
mov
mov
lods
mov
adc
outsb
sub
out
jae
call
out
sub
inc
lcall
arpl
scas
das
mov
sbb
add
xlat
pop
int
xchg
mov
pop
hlt
outsl
pop
xchg
icebp
add
fbstp
test
mov
fucomp
adc
xchg
mov
sub
or
adc
mov
or
dec
push
cmpsl
and
rolb
push
jno
xchg
fsubl
mov
ret
cmp
push
stc
jb
adc
dec
popf
cmp
loop
lds
out
jl
lcall
sub
arpl
mov
dec
fdivr
jne
adc
mov
pop
xchg
dec
xchg
and
in
and
adc
inc
or
mov
lret
dec
inc
mov
outsb
fwait
pop
add
in
sub
mov
jo
add
fisttpll
js
cltd
sahf
xchg
mov
add
dec
inc
mov
mov
fdivr
negb
xor
call
fsubs
fcmovne
adc
or
mov
leave
mov
inc
mov
js
mov
fildll
fnstcw
cmpsl
mov
mov
jmpw
sub
add
jne
push
jmp
mov
hlt
sbbl
pop
push
mov
test
insl
pop
mov
daa
xor
and
cmpsb
sbbl
cli
inc
jne
lret
inc
sarl
bound
inc
lods
negl
inc
ret
sbb
sbb
js
in
daa
ret
jno
sbb
add
clc
js
ja
jb
sub
push
xor
aam
mov
icebp
and
int3
int
jno
iret
call
mov
mov
cltd
push
outsl
jecxz
mov
inc
mov
call
lds
cmpsb
leave
add
or
add
pop
adcb
imulb
xchg
cli
lods
jnp
xchg
cmp
cmp
dec
push
inc
xchg
mov
fdivrl
data16
dec
pop
sbb
sbb
cld
sub
jno
jo
dec
xchg
in
in
mov
inc
test
jmp
call
xchg
fs
mov
insb
sbb
pop
test
cmp
enter
dec
push
sti
mov
stc
loope
xor
pop
das
ret
sub
add
outsb
loopne
push
xorb
and
inc
data16
stc
mov
popa
cs
push
in
jne
int
inc
xchg
mov
xorb
test
cltd
call
adc
ret
adc
pop
xor
xor
mov
jge
in
pop
loope
nop
jo
pop
cld
es
sub
inc
adc
or
popf
mov
mov
stc
int3
push
bound
or
jl
fnstenv
xor
mov
mov
shlb
in
xor
test
cmp
loop
mov
mov
nop
stc
jmp
xchg
lds
fldt
and
inc
ds
jle
pop
lahf
add
cmp
jns
roll
scas
jge
cmp
mov
pop
cmp
mov
ret
test
lea
popa
mov
push
lods
in
mov
jae
cs
lahf
fisubs
sbb
adc
mov
mov
stos
icebp
inc
sub
mov
fstpt
divl
fstpl
mov
xchg
cmp
cwtl
mov
dec
xchg
jns
jae
xchg
lahf
bound
push
jg
cltd
adc
inc
imul
cmp
loopne
push
rcrl
out
inc
insl
push
std
xchg
pusha
adc
fdivs
cmp
jnp
inc
sarl
cli
pop
rol
popa
push
mov
cmp
lret
inc
leave
mov
mov
xor
push
movsb
cmpsb
xchg
sub
rcrb
mov
ret
inc
dec
cli
cs
cwtl
mov
add
and
mov
lahf
int3
pop
push
cmp
sbb
sbb
in
mov
lret
adc
lahf
cwtl
xchg
jne
outsl
inc
bound
lods
pop
sub
frstor
pushf
xorb
pop
outsb
lods
sbb
ljmp
repnz
sub
inc
jae
roll
pop
imul
scas
out
adc
div
sub
sub
dec
jae
lcall
sarb
mov
jp
xchg
popf
imulb
mov
jecxz
jl
or
out
lcall
inc
jnp
es
pop
mov
rcll
mov
add
mov
sbbb
ret
or
mov
lods
sti
popf
pop
loopne
push
or
cmp
dec
adc
por
jle
inc
lahf
push
adc
add
ds
mov
mov
in
mov
es
inc
in
cmp
push
subl
xchg
xchg
movsb
or
sbb
mov
ljmp
cmp
fmuls
shlb
and
mov
jmp
inc
cmp
sbb
enter
dec
or
nop
sbb
fs
and
sbbb
adc
cmp
xor
dec
movsb
inc
add
add
pop
pop
adc
jne
movsl
iret
aad
adc
cld
int
int
cmp
cwtl
stos
inc
cmp
inc
test
cmp
out
xor
sahf
sbb
arpl
pop
outsb
imul
andl
inc
jns
and
pop
or
inc
cmpl
es
and
jge
or
lcall
push
mov
cli
xchg
imul
popa
push
cmp
sarl
loop
pop
mov
xchg
int3
inc
mov
xchg
jge
lea
mov
cld
idivl
lock
mov
mov
idiv
mov
xchg
inc
inc
roll
mov
test
mov
orl
insl
enter
loope
fists
xor
repnz
lds
mov
pop
or
pop
shr
sbb
jmp
pop
sbb
scas
cmpsb
adc
shlb
xor
mov
sbb
cmp
les
mov
add
icebp
xlat
jge
test
xchg
fisubrs
pushf
ss
loop
out
fwait
mov
ret
in
push
mov
stos
sahf
enter
add
cmpsl
ljmp
cwtl
cld
mov
cmp
adcb
subb
aas
jns
stc
sub
pop
les
sub
mov
xchg
dec
loope
mov
mov
dec
dec
sub
push
and
adc
jae
push
add
call
xor
int3
inc
das
in
aam
imul
in
xchg
jecxz
jo
push
adc
pop
mov
pop
push
loopne
hlt
test
ds
lret
stos
inc
add
in
mov
push
pop
out
cmp
sahf
add
hlt
inc
fs
fists
cmpsl
pushf
pop
lods
in
cmpb
dec
adc
fwait
mov
int3
jecxz
ret
push
add
or
es
xor
and
push
lret
adc
mov
mov
pushf
jle
xor
or
xor
push
mov
pop
repz
add
pop
movsl
repz
mov
test
mov
or
or
jl
sub
cltd
divb
or
mov
mov
out
pop
xchg
or
cld
movsb
jns
sbb
addb
fisttpll
push
popa
push
repnz
push
cmp
addr16
mov
push
pusha
ss
fsubs
inc
lods
push
sbb
sub
mov
into
cmpsb
mov
pop
pop
stc
fwait
movsb
out
test
inc
out
fistpll
dec
out
cmc
or
outsl
mov
fs
bnd
nop
lea
aam
stos
cmp
or
imul
sbb
dec
in
fnstsw
cmp
mov
imul
mov
mov
adc
pop
xchg
mov
or
js
mov
aam
and
mov
outsb
shl
insl
sub
fistl
mov
ret
cs
lcall
and
inc
pop
fsubr
fcomps
jb
jp
xor
roll
and
add
mov
mov
add
mov
mov
pop
add
insb
cmc
nop
test
ffreep
push
dec
daa
int3
cmp
es
out
lds
cmpsb
push
sub
test
sbb
mov
cli
enter
mov
or
cmp
add
aad
outsl
cli
mov
push
fs
out
mov
pop
jne
adc
out
sub
fadds
mov
loopne
or
test
pop
mov
lret
ds
je
das
mov
dec
xchg
stos
int3
int3
stc
lret
addr16
loop
mov
cmp
test
xchg
fidivrl
scas
dec
sbb
es
fsubs
daa
or
loopne
mov
or
adcb
andl
or
les
sbb
hlt
pushf
icebp
jecxz
dec
hlt
xchg
imul
pusha
jmp
xchg
cmp
xlat
rol
cmp
cmp
shrl
test
movsb
call
and
or
mov
xor
sbb
dec
into
lock
push
dec
xchg
inc
xchg
adc
mov
cld
fimull
and
inc
cmpsb
and
jp
add
jo
push
push
shll
push
cmp
ja
xor
and
scas
fs
xchg
mov
adc
sarl
outsl
jl
leave
push
or
popl
push
cmp
shrb
pand
jg
xlat
fadds
jl
adc
shlb
cld
mov
flds
rclb
jp
aam
xlat
enter
testl
cmp
cmp
push
adc
outsb
pop
pop
and
sti
inc
sub
arpl
push
sarl
inc
iret
dec
mov
adc
adc
fistps
jb
ret
sbb
out
cld
xor
pop
xor
dec
addr16
lock
mov
jns
and
lret
adc
pushf
mov
jb
insb
out
hlt
in
or
rcr
std
push
jle
jae
jo
push
sub
rolb
popf
add
int
jo
inc
inc
and
mov
inc
fstl
std
push
mov
dec
inc
fnstcw
and
fstps
jo
das
sub
notl
loope
mov
cmpb
lock
mov
mov
mulb
hlt
stc
sub
data16
dec
out
mov
pushf
dec
sub
mov
dec
mov
sarb
jbe
test
out
jnp
pop
cld
cmp
testl
mov
js
and
pop
adc
fs
repnz
stos
cmpl
std
mov
inc
test
in
bound
mov
mov
cmc
jmp
mul
lds
lock
lods
scas
fldenv
lret
sub
mov
out
or
sti
push
insb
daa
jno
mov
jge
sub
movsb
call
cld
fs
jp
pop
push
mov
inc
icebp
test
sbb
movsl
xor
or
sti
mov
jge
jg
and
iret
mov
cmp
or
arpl
std
rclb
insl
arpl
fidivrl
mov
jl
std
icebp
leave
mov
cmp
into
fs
int
dec
add
js
mov
repz
push
movsb
pop
push
sub
in
jge
mov
inc
das
gs
addb
mov
stos
adc
inc
cmp
inc
xor
mov
in
clc
cwtl
subl
ljmp
lds
cmp
jge
pusha
pop
rcrb
and
sub
call
mov
loopne
or
add
dec
les
cmp
arpl
mov
dec
adc
addl
fsubrl
out
lods
inc
xor
gs
pop
mov
imul
int3
dec
cmpsb
push
stos
sub
rcll
xchg
in
and
mov
lret
adc
cs
ja
das
imul
aam
inc
jno
jbe
int3
cmp
pop
ja
xor
jl
mov
in
jge
push
inc
and
mov
mov
jge
sub
pusha
shll
sub
jmp
loop
jg
outsl
mov
mov
orl
fwait
bound
in
add
jnp
fldl
negl
popf
or
iret
je
xor
xor
call
cmpsb
push
xchg
sbb
cmp
daa
mov
mov
jb
adc
dec
push
inc
rolb
test
push
loopne
addr16
mov
push
push
push
flds
cmp
lcall
lret
ret
xor
mov
xchg
sbb
jmp
sbb
test
and
or
xchg
roll
rorl
out
adc
push
or
xlat
adc
xchg
ret
add
sbbl
pop
or
in
movsl
xor
push
cmc
push
jo
mov
cltd
push
jl
cmpsb
loope
stc
roll
mov
cmp
and
sbb
js
lods
in
and
mov
orl
adc
outsl
jp
and
adc
roll
add
xchg
aam
mov
mov
call
push
mov
sub
ficoml
mov
fistl
or
mov
pop
jecxz
lcall
pop
jo
xchg
xor
data16
cmp
push
imulb
or
pop
dec
roll
pop
xor
push
paddusb
adc
adc
leave
in
aas
add
adc
cli
aas
cmp
mov
jns
scas
sbb
xor
popa
iret
push
fnsetpm(287
dec
pop
mov
mov
sbb
js
ss
lods
and
out
and
add
ja
lret
sub
insl
mov
insl
dec
cmp
mov
std
pop
or
or
mov
pop
out
pop
imul
mov
cmp
dec
scas
scas
arpl
dec
cmpsl
jmp
mov
out
aas
loope
jecxz,pt
mov
outsb
je
xchg
dec
xchg
push
mov
fists
mov
lods
mov
int3
mul
bnd
and
push
and
sub
cmpsb
xchg
lret
mov
push
jg
sbb
or
daa
scas
mov
cs
fidivs
cltd
cmpsl
sbb
mov
add
jp
or
cs
jg
sbb
push
push
out
aam
inc
sub
jg
pushf
sbb
hlt
das
fcom
repnz
adc
cmpl
cmp
xchg
mov
push
xor
adc
divb
mov
mov
pop
mov
add
ret
out
mov
stos
sahf
aad
push
cmc
mov
stos
lock
push
pop
add
pop
test
pop
out
loopne
sahf
mov
mov
xchg
movsl
adc
adc
lahf
mov
repz
test
nop
mov
roll
inc
sbb
cli
inc
shrb
sbb
jne
scas
push
fdiv
sbb
cld
scas
gs
mov
outsl
jo
pop
shrb
mov
or
cli
cmp
add
push
data16
ljmp
pop
outsb
enter
in
cmpl
hlt
iret
aas
sahf
and
popf
xchg
jnp
inc
rcll
test
push
imul
aad
cmp
cmp
add
jns
push
mov
inc
rclb
jne
aam
mov
xlat
cli
xor
mov
xchg
test
cmpsl
cmp
jl
mov
push
jno
arpl
fisttps
pop
stc
mov
int3
dec
mov
jnp
xchg
pop
jge
rorl
mov
ja
pop
pop
dec
push
cmpsb
mov
ja
xchg
pop
psrlw
jmp
cmpb
in
stc
mov
or
fisttpl
iret
dec
or
in
jns
std
fisubrs
xor
loope
jb
out
rcr
shr
inc
xor
cmp
mov
jl
test
pop
xchg
cwtl
pop
sbb
sub
cmp
add
push
and
mov
out
mov
bound
out
dec
cmpsb
inc
fcmovnu
sahf
cmp
test
xor
jbe
xor
xchg
lret
push
or
mov
jns
and
jge
insb
xor
push
adc
sbb
xor
clc
imul
ror
and
ljmp
jp
inc
jae
lcall
fdivr
jae
call
mov
adc
add
ss
and
push
int3
addl
ss
cmp
cmp
push
or
sub
lock
mov
push
lret
in
inc
push
inc
pop
adc
push
push
mov
pop
pop
repz
inc
stos
aaa
adc
pusha
test
jg
dec
mov
sub
js
jo
out
imul
leave
inc
mov
lret
sbb
in
push
fs
pop
and
ljmp
cwtl
and
inc
imul
dec
cs
or
repz
int
pop
mov
mov
ret
add
sbb
xchg
push
scas
or
ja
loop
mov
shll
adc
dec
mov
loope
sub
sub
nop
aam
adc
mov
xchg
sub
xchg
push
adc
push
sbb
push
dec
adc
xor
sbb
inc
call
shll
stos
fnstsw
inc
pop
lret
inc
pop
nop
aaa
lods
cmp
sti
lahf
mov
nop
pusha
pop
sub
je
sub
xchg
fwait
mov
jg
add
call
cmp
out
sti
repnz
int
mov
jmp
in
jecxz
mov
icebp
sbb
mov
push
xchg
sbb
or
divb
outsl
clc
sti
xchg
pushw
lods
gs
scas
inc
cmp
negl
pop
push
sub
ljmp
and
fldt
xchg
mov
out
push
ds
or
cltd
xchg
push
or
or
dec
rcrb
inc
nopl
fs
jns
add
outsl
add
push
inc
fbld
fistl
dec
mov
or
jge
lods
sbbl
jbe
mov
jns
imul
ret
and
fcoml
jnp
mov
cmp
icebp
jmp
repz
pop
push
xchg
fdivl
mov
adc
ljmp
fistps
in
dec
jne
push
lods
out
dec
sbb
imul
std
jp
mov
xor
pop
xchg
divl
sub
fs
dec
xor
fcomps
ss
pop
ja
je
jp
ret
push
cli
scas
mov
lock
dec
sbb
aas
icebp
ds
inc
loop
xchg
outsl
xor
jbe
sub
orl
push
mov
aaa
mov
test
shrl
inc
loop
sbbb
test
inc
sahf
insb
adc
loop
cwtl
push
scas
pop
std
and
imul
shr
cld
shl
sbb
es
subb
mov
ds
push
mov
jno
je
leave
ret
movsl
xchg
ss
mov
repnz
pop
push
lods
in
fxch
add
fistpll
in
mov
pusha
or
decl
call
pop
jl
adc
adc
jb
pop
ret
dec
addr16
jmp
mov
jnp
repnz
xor
inc
or
das
test
sub
ret
sbb
nop
ds
rcll
int
push
mov
mov
lock
jae
push
mov
mov
jns
pop
out
sti
lret
add
jge
int
add
cmp
loope
cmpsb
sub
mov
aaa
test
or
out
daa
dec
xor
add
xchg
lret
mov
push
sub
xor
jb
test
adc
mov
aas
not
jmp
push
js
jge
jg
fwait
sti
in
or
or
scas
push
test
inc
fwait
jge
rcrb
dec
arpl
jo
popa
mov
aam
cmpsl
int
je
mov
push
sub
test
ljmp
nop
daa
addl
stc
sbb
cmp
rcr
pop
dec
cwtl
std
mov
mov
adc
adc
push
stos
mov
ja
jg
gs
inc
call
inc
jge
loopne
cmp
out
int3
mov
les
sbb
jae
or
jmp
sub
cmp
xchg
out
pop
fistps
dec
add
or
cmp
aam
aam
jo
mov
sar
nop
xor
test
dec
fcompl
arpl
sbb
xlat
sub
cmp
fs
add
and
test
lods
sub
mov
les
lods
test
sahf
cmp
add
cmpsl
and
xchg
int3
cmpl
jmp
leave
mov
int
ja
dec
xor
cmp
inc
mov
and
mov
lahf
imul
xchg
iret
add
loope
jle
jo
std
and
mov
xor
lea
out
xor
mov
bound
and
addb
vshufpd
pop
mov
dec
js
cmp
orl
sub
std
cld
dec
nop
push
pop
sahf
mov
fwait
dec
lret
jae
or
mov
xor
into
mov
jae
xchg
fs
jne
mov
and
cli
jns
pop
pop
mov
jno
idivl
push
xor
sbb
movsb
mov
in
adc
sahf
sarb
xor
movsl
loope
cmp
hlt
mov
pop
push
hlt
fisttps
cmc
scas
mov
cmp
aad
stc
dec
loope
addb
xchg
dec
mov
lock
arpl
imul
mov
sub
jne
test
orb
test
inc
dec
sub
stos
pop
inc
out
jb
pop
stos
jmp
sub
xor
outsl
sbb
or
sub
push
ffreep
fwait
add
ret
or
adc
lods
fidivs
aas
ficoml
adcl
loope
pushf
mov
xchg
sub
and
mov
insb
loop
pop
inc
inc
stc
sbb
pop
mov
aaa
inc
adc
loope
rclb
ror
jecxz
cwtl
mov
and
stos
push
repnz
lods
call
sbb
lret
xchg
mov
pop
jp
int
xor
or
push
cmc
testl
jb
out
push
adc
stc
movsb
ret
sub
ja
in
ljmp
sarl
mov
pop
jno
shlb
xchg
seto
cmc
adc
ret
repz
cmp
and
sub
jo
aaa
pop
push
mov
mov
insb
pusha
ror
leave
bound
mov
mov
sub
mov
adc
cli
sbb
sbb
dec
xchg
aaa
inc
test
cltd
pop
sbb
mov
jnp
or
xchg
sbb
out
out
enter
or
mov
xor
ret
jmp
jnp
and
dec
inc
pop
repz
hlt
adc
dec
dec
xchg
dec
in
lods
test
les
fadd
adc
dec
movzwl
mov
in
jge
dec
xchg
xchg
inc
xchg
mov
sbbb
gs
mov
imul
fwait
push
mov
mov
cli
fstpl
jnp
lret
in
mov
imul
and
sub
add
mov
add
subl
and
mov
or
aam
sub
icebp
test
push
sbb
nop
addr16
aam
inc
pop
cmpsb
dec
dec
jnp
arpl
nop
leave
add
movsl
sub
add
adc
jnp
movsb
aaa
ret
mov
inc
outsb
idivl
xchg
pop
xor
inc
lods
mov
push
inc
dec
out
shrb
jae
mov
jl
pop
inc
xlat
into
fadd
xor
mov
mov
enter
xchg
jae
gs
adc
cs
mov
mov
rorl
lahf
jl
or
pop
xchg
loope
out
add
mov
xor
mov
decl
decb
cmpsb
jmp
aas
sub
sbb
hlt
pushf
add
push
fnsave
popf
pop
sbb
aaa
test
sbb
xor
mov
fs
cmc
pop
or
or
test
xor
mov
rep
out
stos
fiaddl
cmpsb
mov
push
pop
pop
or
mov
xchg
push
daa
aad
lods
in
cmpb
das
insb
mov
in
nop
xor
sbb
xchg
das
add
dec
pop
rol
mov
fnstsw
hlt
cmp
xlat
int
push
lods
imul
xchg
fcomps
in
mov
rcl
and
pop
mov
das
out
xchg
movsb
and
jl
mov
mov
test
dec
scas
out
jmp
push
fadd
push
mov
std
loop
cmp
sbb
xchg
mov
mov
sbb
int3
sti
sti
cmpsb
jl
imul
jp
jo
idivb
add
test
movsl
das
xchg
outsl
inc
xchg
imull
and
jp
cmp
add
cmp
sub
jno
adc
test
js
push
inc
inc
arpl
cli
push
dec
daa
mov
cltd
mov
mov
gs
sahf
or
clflush
dec
jecxz
rorl
test
scas
inc
out
adc
add
ret
pop
in
jne
jb
data16
mov
lret
mov
aad
insl
loopne
sbb
lock
test
push
adc
dec
ljmp
dec
daa
movsl
mov
pop
pop
adc
scas
das
nop
insl
and
fisttpl
dec
filds
sbb
xchg
jno
loop
xor
inc
fisttps
clc
mov
pop
stos
sub
cmp
jo
arpl
add
adc
inc
jns
push
loop
push
mov
mov
adc
add
scas
pop
and
mov
or
orl
in
push
and
sbb
sbb
jno
clc
arpl
add
inc
inc
test
xchg
and
jae
mov
inc
jmp
xchg
cmp
xlat
sti
ret
int3
ret
imul
imul
ror
sub
pop
insl
imul
icebp
xchg
push
push
mov
sti
ffreep
xchg
sbb
mov
inc
fsubl
and
mov
aaa
and
test
andb
pop
adc
test
ret
lahf
mov
pop
mov
inc
push
jo
sbb
adc
mov
push
cmpsl
mov
repz
stos
in
pop
arpl
movsl
sub
out
cld
jge
fcmovnu
inc
add
mov
xor
out
sbb
and
leave
scas
in
imul
aad
push
sub
enter
mov
in
mov
adc
push
inc
mov
repz
inc
xlat
mov
add
out
pusha
xchg
int
in
and
ds
inc
cmp
cmp
mov
pop
test
inc
xor
or
and
push
jecxz
repz
cmp
int3
movsl
cmpsl
js
and
rol
lods
mull
inc
les
cld
enter
adc
xchg
addr16
mov
out
push
xchg
xchg
in
addr16
es
movsl
mov
pop
arpl
push
or
imul
mov
cmc
push
cmp
cmp
mov
cltd
add
push
dec
xor
fisubs
lret
sbb
cltd
pop
hlt
cmp
iret
std
cwtl
xlat
xor
repz
daa
cmpsb
loope
ds
push
pop
clc
sub
pusha
out
mov
mov
jb
inc
cmp
inc
jp
mov
inc
push
stos
hlt
popa
or
stos
fildll
push
pop
mov
cwtl
mov
add
add
push
push
push
cld
or
mov
pop
inc
pop
lcall
jbe
cwtl
rclb
xchg
push
sbb
lods
and
ss
inc
popf
insb
lret
lods
cmpsl
mov
cmovnp
rol
xchg
and
fstpt
sbb
jecxz
dec
test
add
lahf
jmp
pop
cwtl
sub
int3
cmp
ss
mov
push
cmpsb
sub
arpl
ret
and
jnp
mov
mov
xchg
test
inc
xchg
inc
out
lret
cltd
dec
in
push
es
pop
pop
enter
cmp
cwtl
adc
dec
aad
dec
xchg
rorb
xchg
jge
push
ret
cwtl
sbb
das
mov
pop
xchg
js
out
data16
push
push
shl
pop
ljmp
stc
mov
mov
dec
movsb
js
inc
or
jae
iret
cmc
jg
jno
leave
fcomps
ret
adc
jmp
stc
and
scas
or
mov
bound
push
daa
out
and
dec
dec
jl
cs
sbb
cmpsl
test
pop
or
xorb
fdiv
sarb
clc
push
es
enter
add
xchg
test
mov
testb
divb
or
mov
pushf
test
imul
aas
fcmovnbe
jbe,pn
mov
movsl
or
xchg
mov
dec
mov
shr
rcl
inc
enter
push
ror
lods
xchg
outsb
push
mov
xchg
pop
in
cmp
sahf
sar
int
mov
jnp
imul
shll
and
fwait
xor
lahf
sbb
sbb
xor
dec
jecxz
cmp
in
sub
shll
incb
mov
mov
xchg
mov
hlt
mov
js
into
int3
push
ss
fwait
popfw
icebp
shll
push
mov
adc
and
mov
push
cmp
mov
je
fs
int3
fstpl
adc
mov
or
aaa
mov
mov
sub
or
sub
fnsave
insl
cmp
push
jns
xlat
fiaddl
sub
adc
fsub
dec
std
pop
mov
pop
mov
mov
outsb
pop
lret
mov
cwtl
and
adc
pop
sub
cmp
dec
in
loopne
inc
and
test
lock
sar
ljmp
in
mov
aaa
sahf
adcl
clc
aas
inc
push
mov
add
enter
sbb
js
das
sbb
sbb
push
xchg
cmp
mov
or
fistpll
xor
inc
sub
shrl
xchg
les
testb
pop
mov
jl
sbbl
fs
xlat
lcall
jg
icebp
mov
adc
rcr
aas
adcb
adc
aas
ds
dec
pop
add
ss
ds
adc
fucomp
or
sub
fs
jle
mov
in
hlt
jmp
dec
in
jnp
mov
insl
mov
pop
int
mov
push
nop
pop
xchg
xchg
mov
in
in
imul
std
dec
lods
mov
mov
cld
cmp
xchg
xchg
pushf
ss
or
mov
mov
loop
inc
and
dec
jbe
incl
icebp
cmpsl
out
sar
cmc
sbb
jno
jmp
mov
mov
out
fists
add
or
div
and
inc
pop
fildl
sbb
xor
outsb
mov
sbb
cmovne
or
iret
lock
or
pushf
rcll
push
pop
mov
jnp
iret
push
and
dec
int3
push
dec
sub
cmp
mov
adc
daa
andb
cli
jnp
pop
or
xor
xchg
xchg
repnz
ja
gs
cmpsl
push
mov
lea
jno
mov
mov
mov
dec
cmc
add
inc
cmp
dec
sbb
or
ljmp
lods
jecxz
adc
cwtl
dec
or
aas
inc
into
test
and
sbb
loop
std
lock
ja
cmp
inc
in
jno
loope
sub
ja
clc
fisubs
inc
mov
push
out
mov
out
addr16
and
mov
cmp
xchg
sbb
insl
cmp
inc
mov
dec
cli
rorb
mov
or
add
int3
mov
mov
jae
add
pop
xchg
pushf
fimull
cld
in
xchg
cli
outsb
rcll
fwait
pop
inc
psubsw
adc
outsl
int3
sarb
jnp
pop
push
and
mov
pusha
mov
pusha
nop
pop
adc
jge
push
xchg
repz
movsl
adc
jb
cmpb
push
pop
jp
xor
cmp
mov
lahf
mov
rolb
addr16
ficomps
add
or
inc
lea
nop
popf
sahf
shll
push
dec
jb
pop
mov
jl
pop
push
arpl
mov
ret
test
push
xchg
xor
pop
cmp
adc
mov
add
jg
sub
int3
xlat
xchg
aam
and
int3
test
xor
sbb
popf
and
pop
mov
sbb
push
es
cwtl
scas
mov
imul
gs
pop
xchg
xor
lods
add
aad
add
mov
xor
lds
in
lods
pop
mov
lahf
repnz
add
je
xlat
push
fsubl
test
enter
test
dec
aad
insb
jns
xchg
ret
cli
clc
jae
popa
pop
mov
mov
jp
add
lds
dec
adcl
mov
and
push
cmp
or
fldcw
cmp
adc
pop
adc
and
mov
jno
out
mov
push
xchg
adcb
xchg
ret
dec
imul
mulb
mov
or
fcoml
test
fdivp
lret
lods
fwait
setns
xor
sbb
mov
mov
jb
cwtl
lcall
pushf
inc
mov
adc
cmp
out
mov
sbb
inc
out
aad
sbb
clc
mov
nop
out
loope
push
icebp
scas
push
cmc
aad
mov
mov
xchg
or
in
daa
inc
sarl
and
sbb
lahf
pmaxub
cltd
repz
push
mov
push
jne
sub
fimuls
test
je
xchg
int
jo
ret
popf
xchg
std
push
sbb
int3
push
dec
fs
add
push
popf
inc
cld
arpl
cmc
xor
sub
xchg
repnz
test
pop
js
jge
cmp
into
lods
loope
imulb
mov
sbb
add
adc
das
xchg
mov
pusha
mov
ret
push
ret
lret
xchg
popl
popa
sti
mov
mov
scas
fists
sti
or
outsl
push
imul
out
sub
cs
les
fsubl
or
and
popf
negb
inc
in
mov
cltd
aaa
mov
dec
adcl
mov
loopne
movsb
and
cld
cmp
gs
nop
bt
fiadds
bound
mov
loop
xor
loop
shrb
icebp
add
cmp
cmpsb
rolb
lds
push
test
ds
ja
aam
jnp
pop
push
rcr
rorb
adc
repz
cmpsb
std
sub
sub
in
jl
lock
jbe
mov
bound
push
xchg
jge
add
sub
or
lret
or
lock
mov
fnstsw
cwtl
cli
dec
cltd
nop
sbb
jp
pop
push
out
add
mov
inc
fmuls
popa
leave
jmp
clc
inc
mov
mov
lock
out
stos
das
cmp
fldt
repz
sub
dec
sti
pop
aad
push
add
je
aaa
leave
lret
aaa
xor
test
enter
inc
and
shr
cli
es
push
aas
mov
adc
je
pop
xlat
xchg
cli
fcoml
jmp
call
jnp
dec
es
cmpsb
pop
jno
dec
xchg
dec
in
ret
dec
iret
iret
loop
xchg
jl
push
mov
sub
lret
nop
icebp
xchg
pop
cld
and
mov
loop
jbe
test
add
mov
cld
je
shrb
xchg
leave
push
jecxz
shlb
xor
push
repz
mov
push
sbb
insb
test
std
mov
mov
repnz
cwtl
std
lcall
cs
inc
pop
sub
in
pop
pop
or
mulb
xchg
push
sbb
and
xchg
jmp
ret
outsb
xchg
jmp
pusha
pushw
push
mov
jp
shll
jl
jle
pushl
mov
stc
out
outsl
jg
sub
fdivrl
pop
gs
adc
xlat
sub
mov
adc
sub
xor
sahf
jle
inc
ja
dec
int
jnp
mov
loope
jno
xchg
or
test
add
das
cs
sub
adc
jne
cmp
push
leave
leave
bound
rorl
dec
xor
daa
lods
pop
frstor
roll
icebp
jno,pt
loop
hlt
mov
jge
and
cmp
xor
mov
cmp
aad
jb
push
add
fcmovnbe
mov
insl
in
mov
es
xchg
out
aad
mov
sahf
stc
jg
push
or
add
dec
sub
jb
fdivrl
xchg
in
sbb
pop
xlat
dec
lcall
mov
and
xchg
movsb
insb
in
pop
ret
dec
cmp
mov
lods
jae
test
mov
sbb
popl
xchg
push
out
cld
dec
adc
shrb
popa
test
in
sahf
inc
cltd
push
sarl
andb
aam
and
in
sub
rorl
dec
lea
sbb
ret
das
mov
xor
pop
mov
addr16
ret
bound
fldt
push
dec
scas
in
leave
and
xor
imul
dec
in
jmp
repz
leave
insb
inc
push
mov
push
sbb
xor
push
addr16
cmp
mov
ds
push
in
and
out
fs
aam
add
and
add
inc
mov
push
mov
stc
mov
outsb
mov
enter
testl
imul
or
loop
mov
xchg
push
xor
pop
fiadds
jno
adc
xchg
stos
xor
shll
dec
mov
in
dec
add
push
or
mov
fdivrs
jmp
cmp
sub
jmp
imul
sub
inc
jb
sbb
in
je
adc
sti
pop
aaa
pop
icebp
pop
jecxz
jns
adc
push
insl
mov
aaa
in
xchg
jge
add
ja
movsb
cli
lods
add
outsl
jno
mov
pushf
push
movsb
cwtl
or
inc
stos
and
jbe
inc
mov
iret
cld
movsl
sahf
lods
xor
push
popa
xchg
cmp
add
xchg
or
xchg
add
push
cli
inc
in
in
sub
push
gs
add
dec
aam
jno
jno
rorb
xchg
cwtl
xor
fisttpll
add
jg
mov
jae
xchg
mov
insl
xchg
aas
out
shll
in
loope
mov
xchg
xlat
es
mov
int3
decl
fistl
dec
add
test
ss
in
jmp
dec
jae
fisttpl
adc
in
adc
mov
push
call
fs
jge
adc
fstps
insl
adc
pop
sub
push
cwtl
sub
js
mov
lds
or
adc
popf
testb
pop
je
push
sbb
gs
outsb
stos
stc
inc
test
push
jmp
scas
jno
inc
mov
mov
push
das
jae
js
mov
lret
cmp
adc
ds
mov
mov
jns
adc
push
pop
xor
cmp
gs
shlw
sub
jae
stos
lcall
mov
outsb
mov
sti
xor
xor
mov
leave
repz
cmpsb
sub
getsec
in
xlat
iret
inc
out
cwtl
div
add
jg
call
addr16
test
sbb
mov
ss
cmp
rorb
mov
in
test
jg
rolb
jp
fdivrl
cmp
ret
pop
pop
movq
insl
lods
fdivrs
ljmp
mov
rolb
sbbb
sbb
lea
mov
es
and
in
popa
mov
xlat
rcrb
in
mov
test
jl
xor
sahf
gs
cmp
fisubs
enter
ret
insb
cmp
or
stos
fsubr
xchg
inc
je
sub
aam
jl
icebp
xchg
xchg
sbb
adc
mov
mov
mov
lods
mov
xchg
pop
add
fwait
jle
mov
aam
xor
sbb
cltd
push
dec
movsb
push
dec
add
jb
jp
pop
sub
and
mov
pop
mov
mov
pop
pop
testb
xchg
add
fsubrs
lock
dec
call
fistl
jp
leave
dec
rorl
cmp
and
and
clc
out
mov
or
sbb
dec
ret
pop
mov
push
push
add
fwait
jge
add
test
inc
popf
add
xchg
loop
pop
in
and
imul
mov
pop
jb
fsubrl
cmp
in
cmp
add
mov
pop
lret
imul
les
lods
cmpsl
sarl
jb
jg
dec
lret
stos
mov
pop
imul
cmp
rolb
adc
iret
xchg
adc
sub
or
mov
out
mov
gs
xor
xchg
imul
out
jge
mov
lea
bnd
lahf
adc
xchg
and
in
cmpsl
and
test
xchg
xor
dec
inc
push
pop
xchg
movsb
and
and
cli
fs
mov
jl
rclb
fisubs
push
repnz
not
ljmp
gs
mov
or
mov
xchg
imul
mov
aaa
sub
pop
pop
in
sti
jl
xchg
or
pop
adc
xor
lcall
daa
movsb
push
or
xchg
sub
les
movsb
jge,pt
dec
pop
fldcw
das
test
mov
xchg
bound
js
pop
mov
popf
sub
in
sbb
fistpl
push
sarb
pop
repz
mov
mov
pusha
xchg
xchg
inc
sub
negb
mov
cmp
push
add
shll
adc
adc
shrb
lahf
cld
sub
mov
mov
push
loop
dec
sbb
incb
xor
mov
sbb
jg
xchg
jg
inc
popa
repz
movsl
jl
sub
testl
pushf
ret
pop
fmuls
mov
push
fwait
xchg
xor
sub
ret
lcall
cmpsl
leave
pop
insl
movsl
push
out
jmp
mov
leave
mov
sub
dec
sbb
jb
or
int
in
gs
popa
dec
jb
inc
add
cltd
add
xor
sbb
push
pop
mov
loope
popf
rorb
or
mov
jg
xor
insb
mov
mov
mov
movzwl
pop
and
or
popa
inc
adc
xor
pop
jnp
mov
jecxz
fidivl
test
jns
pushf
loop
and
mov
sarb
ret
cmp
dec
jo
dec
fcmovnu
sti
out
jnp
int
leave
addr16
int3
xchg
fdivs
adc
cmp
pop
pop
sub
sub
xchg
mov
mov
pop
sti
lods
xorb
sti
scas
insb
leave
jmp
ret
daa
popa
cmp
jg
cs
sar
push
imul
push
sarb
daa
inc
sbb
mov
mov
jl
add
jae
fidivrl
dec
aad
cmc
hlt
mov
out
ja
psubusb
and
add
std
in
aam
add
imul
int
adc
pop
ret
xor
cmpsl
push
cmp
sbb
xchg
cli
sbbl
mov
adc
mulb
mull
xor
mov
sub
xor
dec
push
xlat
jo
mov
subl
and
mov
call
push
inc
cmp
mov
sbb
xchg
popa
cmc
inc
orb
xor
xchg
pop
fcmovnb
push
movl
sbb
out
subb
addr16
lds
and
push
ficoms
imul
ret
les
test
mov
adc
lcall
inc
sbb
pop
ljmp
jg
mov
pop
or
push
out
xchg
push
mov
mov
ljmp
xchg
push
and
lcall
test
xchg
ds
and
jnp
aaa
sub
lcall
lahf
mov
jae
imulb
imulb
pop
dec
andl
push
mov
xor
push
push
bound
int
insl
xor
push
jp
inc
in
adc
adc
aaa
mov
insl
test
js
lret
sub
mov
mov
lea
cltd
rcr
mov
cmp
mov
mov
mov
stc
outsl
out
ds
jne
cmp
mov
inc
xchg
leave
mov
ljmp
mov
out
jno
xchg
outsb
sarl
cli
decb
inc
mov
subl
and
roll
shlb
sbb
adc
enter
xchg
int
mov
mov
loopne
mov
jle
lods
lret
movb
out
sbb
fildl
adcl
cmc
mov
call
loope
adc
cmpl
adc
xchg
mov
lds
mov
cmp
ficoms
cmp
and
lods
lock
ja
mov
sbb
push
hlt
add
push
aaa
xlat
adc
and
jnp
pop
sti
add
xchg
and
push
cmp
adcl
rclb
es
mov
testl
push
jo
ds
jno
fadd
lret
push
je
imul
sti
jmp
ljmp
scas
pop
jl
sbb
xor
jnp
popa
dec
xor
jno
mov
or
jae
in
icebp
test
jmp
jns
cmpsl
inc
and
scas
les
pop
sbb
pop
adc
repnz
ficompl
adc
mov
mov
sub
jp
push
cmp
push
mov
outsb
jb
pop
mov
adc
push
jo
sub
iret
push
inc
call
loopne
sub
roll
lods
adcl
jo
repz
rorl
sbb
xchg
fcmove
or
and
cmpsb
push
test
pop
insl
out
adc
sarl
pop
mov
fsubl
cli
adc
adc
in
ret
int
and
aaa
inc
in
dec
repnz
pushf
jae
insl
orl
xlat
add
arpl
or
movsl
inc
popa
push
pusha
or
daa
jns
push
mov
sarl
adc
sbb
mov
add
mov
jmp
add
mov
fdivrl
xlat
jb
insb
cmp
test
push
jnp
fimuls
ss
test
xlat
sub
mov
lock
aas
bound
fbld
or
add
mov
test
xor
push
push
mov
sub
aad
gs
add
mov
jne
inc
jbe
scas
cli
mov
loop
aaa
rolb
mov
mov
out
sbb
sub
sbb
pop
loope
stos
and
sbb
insb
gs
mov
outsb
sub
pop
cmp
nop
jae
jp
xor
bound
testb
ds
mov
out
pop
jge
insb
push
push
cmc
push
dec
and
cltd
mov
add
pop
pop
nop
pop
mov
int
xlat
mov
sbb
ja
pop
lock
inc
notl
lea
push
je
pop
add
adc
xchg
lods
jbe
notb
int
inc
cmpsb
pop
popf
or
xor
dec
movsb
and
lods
xchg
dec
insl
fldl
xlat
lods
lods
adcl
jnp
in
ret
and
data16
push
inc
sti
or
ret
ds
cmp
pop
fisubl
sub
sub
ljmp
les
or
sbb
xlat
lcall
aad
loop
fadds
popa
xchg
mov
or
xorb
push
out
les
xlat
mov
clc
sbb
jecxz
repz
lret
lahf
dec
cmp
ljmp
dec
loope
dec
add
mov
cwtl
add
sbb
cmp
test
sbb
cmc
gs
cld
ret
cmp
sub
inc
loope
mov
pop
mov
xchg
cmp
inc
adc
sub
xor
cltd
lods
push
stc
mov
adc
jae
shlb
xchg
pop
iret
shlb
aaa
jle
xor
std
in
xchg
adc
in
divl
push
cmc
fmuls
sub
add
or
jne
int3
fisubrs
jnp
sub
stos
mov
aaa
mov
push
outsl
add
daa
sub
daa
jecxz
test
das
inc
inc
test
daa
leave
push
sbb
lahf
jecxz
enter
pop
fcomip
inc
inc
cmp
xchg
lds
out
sub
and
inc
clc
jp
clc
ss
lods
jp
and
sub
mul
data16
push
dec
cmp
xor
push
and
lcall
ds
lock
cmp
mov
jae
mov
mov
cmp
pop
pop
movsb
and
mov
cmpl
sbb
mov
mov
push
cli
ror
xor
scas
orb
cmc
dec
popa
adc
xchg
cltd
push
insb
and
cmpsl
push
push
clc
jb
sarb
xchg
repz
ficoms
repz
cltd
lods
push
sub
jp
xor
arpl
sbb
andl
rorl
mov
mov
add
out
test
jp
mov
xchg
mov
sbb
in
push
rcr
jno
mov
jp
dec
mov
movsl
cmp
hlt
push
sbb
shl
orl
cmp
pop
fisubs
fnsave
mov
repz
push
and
xchg
and
pcmpeqd
xlat
push
test
in
fdivs
pop
adc
cmc
adc
mov
cs
sti
sub
and
inc
jge
cs
push
out
movsb
jmp
push
mov
in
inc
and
push
push
sti
and
out
dec
insb
or
test
lds
daa
je
pop
xlat
jge
lods
push
stos
ss
cmp
cs
inc
sub
jecxz
cwtl
push
sbb
adc
gs
outsl
add
pop
enter
and
in
movsl
mov
rclb
iret
movsl
insb
decl
fldenv
push
push
scas
aam
and
xchg
test
jg
loope
fnstsw
pop
dec
jmp
stos
repnz
negb
sbb
push
les
lods
or
pop
loope
and
cmpsb
test
sbb
cmpsb
adc
dec
das
stos
loop
jno
cwtl
add
jge
lcall
lds
mov
fildll
xchg
cmp
pmullw
mov
mov
in
push
cmpsl
xchg
inc
xor
shrb
data16
or
sti
out
out
std
pop
push
xchg
imul
jnp
push
loopne
jns
sub
dec
mov
dec
push
or
xor
and
or
push
or
jo
or
ds
pop
jbe
and
jnp
push
test
dec
inc
aaa
xchg
adc
stos
popa
push
test
clc
jae
inc
adc
loopne
push
push
aas
mov
add
lahf
cmpsb
jno
jo
in
test
icebp
mov
into
cmp
cwtl
lods
imul
into
cs
les
and
add
adc
test
popf
outsb
mov
je
outsb
mov
mov
out
test
jb
cltd
or
movsl
testl
bound
das
bound
add
lods
push
add
in
xchg
in
outsb
repz
fcoml
pop
dec
setnp
roll
mov
adc
std
call
mov
insl
jmp
adc
fcomip
inc
loopne
popa
sub
leave
jnp
xchg
and
cmp
mov
dec
arpl
jge
mov
xor
xchg
jge
daa
icebp
test
and
in
aaa
jmp
mov
ds
outsb
subb
inc
adc
hlt
out
push
aad
xor
push
sbb
cld
mov
rorb
pop
mov
and
inc
ja
cmp
and
mov
jns
mov
xor
clc
stc
std
cmpsl
mov
rcrl
push
dec
inc
push
mov
xor
mov
mov
pop
cld
dec
nop
jno
jge
mov
sub
inc
in
shrb
pop
mov
scas
inc
mov
jecxz
xorb
mov
dec
mov
mov
jbe
xlat
sub
dec
push
test
test
repnz
ror
sbb
xchg
aas
fdecstp
rclb
mov
dec
push
mov
dec
or
push
int3
mov
add
adc
out
cmc
mov
xchg
rol
sahf
jecxz
cltd
pop
jb
sbb
sub
mov
xchg
sar
mov
pop
xor
pop
sbb
mov
insb
jne
outsl
sub
or
xor
jg
das
cmp
call
mov
mov
xorb
adc
dec
mov
and
lahf
loopne
dec
and
inc
sub
push
test
loopne
scas
repz
or
sahf
test
or
sub
cltd
inc
cltd
push
and
sbbl
mov
ret
and
xchg
aad
out
aaa
andl
fsubs
stc
xor
outsl
sub
add
xor
lcall
je
dec
pop
mov
lea
pop
data16
cmp
sub
pop
fsubs
jnp
addb
adc
ja
arpl
push
push
cmp
cmp
lcall
dec
cli
jbe
hlt
aaa
fldt
jno
mov
jl
xor
mov
sub
push
xor
leave
or
push
mov
cmp
adc
loop
mov
xor
repz
stos
cltd
addb
mov
popf
mov
push
adc
lods
fwait
mov
pop
leave
mov
dec
lcall
ljmp
sti
in
inc
repnz
jecxz
jmp
arpl
aam
or
popa
popa
add
lahf
jo
push
xor
inc
gs
add
inc
inc
pop
push
sbbb
dec
jl
inc
int
ror
cmpsl
dec
leave
inc
dec
mov
jp
inc
push
inc
out
icebp
cmp
sahf
xor
xchg
and
xchg
sar
sub
dec
dec
jp
xor
sub
mov
push
xchg
jno
mov
adc
in
pushf
xchg
int3
cmp
jp
pop
out
and
daa
jne
in
aaa
sbb
jg
lahf
daa
xor
jb
movsb
sub
pop
lock
adc
xor
imul
sub
push
loopne
push
mov
lds
sbb
pop
repnz
into
in
inc
mov
pop
xor
xchg
ljmp
rorb
inc
cs
adc
out
dec
lret
loope
push
mov
jns
xor
dec
cltd
xor
dec
cmc
or
out
cmpsb
xchg
and
pop
or
mov
lea
xor
ja
adc
inc
enter
pop
ja
fst
repz
pusha
adcb
lcall
pop
xchg
push
xchg
adc
imul
pop
fidivrl
rcl
iret
aam
mov
mov
test
daa
popa
ljmp
fs
push
mov
mov
mov
fldenv
clc
mov
int
cmp
push
mov
ficomps
in
jne
xor
dec
xlat
std
insb
push
mov
mov
in
xor
lods
and
jno
ret
xchg
aad
push
jo
out
mov
jns
dec
arpl
sub
push
mov
lods
jb
jnp
sbb
xchg
and
cmp
pop
push
add
ds
test
lock
sbb
pop
mov
lds
mov
in
push
mov
sub
adc
push
shll
mov
cli
jecxz
push
cmpsl
lea
das
ror
push
sub
leave
ret
xchg
clc
shr
push
adc
popa
mov
xlat
pop
push
adc
mov
and
mov
sub
cltd
adcl
js
jo
sbb
push
rcll
sub
cmp
mov
dec
push
inc
sbb
cld
lds
adc
shrl
xor
add
mov
in
mov
xchg
aad
mov
idivb
aas
orl
pop
push
inc
cmp
jno
test
imul
je
pusha
dec
dec
jbe
into
movsl
push
mov
and
dec
xchg
cmp
icebp
pop
fcomps
xchg
leave
cmpsb
fbstp
and
addl
xor
loope
clc
in
mov
cmc
mov
popa
movsl
mov
test
test
mov
shll
shll
and
mov
fwait
lds
add
adc
aaa
jb
movsl
shlb
mov
stos
mov
jbe
test
flds
stos
test
or
or
jle
stos
xchg
dec
jle
out
mov
ds
mov
movsl
loopne
outsl
fisubl
addl
xor
and
pushf
clc
or
negl
icebp
fsubs
out
xor
push
fnstenv
xor
add
sub
xor
movsb
fs
sub
mov
adc
xor
popl
loope
add
iret
sub
sub
mov
pop
mov
push
iret
jbe
and
mov
daa
mov
mov
repnz
aam
xlat
add
mov
mov
sbb
push
lods
mov
xchg
mov
stos
jne
mov
repnz
test
adc
out
sahf
or
and
jb
jnp
mov
mov
dec
and
out
jns
pop
daa
ja
add
outsl
jl
lods
aas
test
mov
and
push
pop
insb
inc
and
dec
jg
xlat
shlb
stos
or
pop
std
movsb
or
sub
cs
inc
push
scas
test
data16
test
pop
mov
push
and
pop
dec
mov
cmp
pop
not
into
out
sub
push
aaa
out
int3
iret
xchg
push
xchg
loop
popf
add
repnz
cmp
push
push
pop
divps
pusha
pop
dec
dec
stos
fs
lds
cli
lea
and
jo
rcrl
sub
adc
mov
pop
cwtl
inc
out
pop
mov
daa
xor
in
push
xor
sub
fs
lods
lcall
sub
jb
sbb
cmp
imul
pop
jbe
mov
insl
je
dec
dec
movsb
jb
push
lods
mov
andl
in
or
dec
jge
mov
add
add
in
aaa
sbb
add
mov
pop
popa
xchg
pusha
lret
xor
stos
xor
imul
sub
sbb
adc
out
ss
mov
rclb
pop
jg
mov
mov
cld
adc
push
fimuls
pop
test
das
add
jge
imul
scas
push
dec
dec
add
fcompl
cwtl
and
pop
sbb
stos
cmp
push
in
inc
add
test
jb
in
cmp
loop
sub
or
aad
cld
je
mov
or
outsl
cld
dec
push
pop
fldenv
movsb
or
push
push
or
lods
sti
mov
shlb
shrb
adc
cmp
xchg
push
repnz
xchg
popl
das
jo
pop
cltd
insb
lret
daa
xchg
roll
pushf
loop
outsb
dec
movsl
mov
imul
jnp
xor
hlt
jle
pop
mov
aad
das
lahf
into
sbb
cld
xchg
sub
adc
loopne
aaa
jae
jmp
xchg
out
jmp
mov
in
cmp
orl
in
xor
test
sbb
popa
stc
mov
mov
mov
nop
pusha
pop
lret
push
fistps
pop
inc
sbb
mov
add
daa
add
add
jb
roll
ja
inc
push
rclb
or
sbb
mov
xchg
call
or
pop
out
mov
ja
cli
nop
in
aad
and
nop
lock
lods
mov
sbb
pushf
add
lods
fbstp
mov
mov
jnp
jmp
mov
xchg
ja
sbb
lcall
call
sub
les
push
sbb
in
push
mov
iret
ss
pop
test
mov
stos
mov
inc
push
in
push
sub
dec
fsts
mov
sub
and
xlat
inc
sub
out
jbe
mov
pop
insl
cmp
sbb
add
lcall
xchg
cld
pop
xchg
pop
popf
fnstsw
add
mov
push
inc
add
add
push
xchg
push
mov
outsb
movsl
xchg
sbb
in
std
aam
add
lea
push
stos
loope
lock
lret
std
mov
mov
push
xor
cld
shll
iret
inc
mov
and
insb
xor
mov
inc
cwtl
push
hlt
bound
cmpsb
cld
xchg
notl
pop
int3
dec
dec
outsl
out
ret
fdivp
cli
in
aaa
sti
xchg
xor
add
cmc
addr16
push
or
adc
mulb
mov
xor
movsb
sbb
mov
sbb
and
or
mov
addr16
sti
js
data16
hlt
cli
mov
jbe
fs
cmp
inc
out
fsts
dec
lods
xor
shrl
xchg
pop
test
mov
dec
cld
scas
jo
or
es
dec
test
add
in
add
dec
mov
lods
mov
leave
jl
fsubp
aaa
lret
sub
jle
psubsw
mov
out
sub
and
cmp
mov
fmull
cmpsb
out
cs
iret
pop
sub
out
and
and
or
stos
sbb
dec
fidivrs
xchg
xor
scas
aaa
addb
dec
decl
cld
push
jae
mov
cmp
jbe
repnz
or
mov
ljmp
xchg
popf
sub
insl
mov
out
mov
mov
sbb
adc
sub
xchg
inc
cltd
xor
and
and
out
ficomps
pop
mov
out
subb
vphaddbq
fidivrs
lret
out
xor
pop
mov
jno
jae
fistl
nop
cmc
montmul
cmpsb
add
repnz
je
sbb
sub
sbb
push
dec
or
mov
mul
mov
lock
pop
xor
pop
xchg
dec
aaa
inc
cmp
daa
test
fcmovb
je
lret
aas
shll
test
lds
faddp
add
mov
and
mov
pop
push
mov
mov
popa
ljmp
mov
bnd
sbb
xchg
das
mov
sub
inc
imul
faddp
nop
shrl
jae
mov
jno
pop
movsb
mov
sbbl
jo
jg
jb
add
adc
sbb
std
mov
mov
pop
mov
cmc
je
out
mov
mov
jns
dec
fisttpll
cmp
mov
mov
push
clc
iret
add
adc
imull
cli
lods
sete
leave
lcall
mov
ficoms
jmp
add
data16
imul
or
mov
mov
ss
dec
pop
test
mov
js
jb
cmp
xchg
sbbl
mov
dec
mov
sub
in
mov
fadds
xchg
rolb
enter
lahf
inc
mov
push
add
inc
inc
andl
mov
stos
jmp
in
mov
mov
fs
outsb
cs
add
rorb
in
popa
cltd
popa
mov
push
lahf
imul
adc
xlat
xor
shl
ret
in
rclb
jae
fucomp
aaa
add
jbe
sub
jnp
push
cmp
outsl
pop
imul
aam
addr16
dec
push
inc
adc
and
ds
push
insb
rcrl
out
subl
movsl
scas
sbb
ss
fwait
xchg
jne
stc
jecxz
lret
add
dec
sbb
pop
jge
sbb
fmull
lahf
pop
and
aad
fcmovnu
inc
xchg
or
mov
add
stos
mov
cmpsl
fwait
test
cmpsb
cmpsb
cwtl
inc
jne
incl
sub
jg
xor
push
stc
test
fists
loopne
push
insl
or
shrl
inc
scas
mov
sbb
jecxz
jmp
xchg
xor
adcb
lea
test
sbb
subb
pop
rcll
pop
cltd
ljmp
shld
sahf
fimull
leave
or
inc
shl
fsub
add
outsb
ds
or
test
sub
dec
mov
push
hlt
cli
shll
mov
dec
arpl
loope
inc
push
in
inc
jmp
addl
popa
daa
imul
mov
push
lock
jmp
arpl
adc
sbb
xchg
dec
sbb
sbb
iret
ss
sbb
les
inc
scas
scas
and
fsubr
pushf
push
js
jnp
cmp
xchg
movsl
xor
mov
in
insb
insl
pop
sar
xchg
mov
dec
mov
testb
mov
xchg
mov
add
movsl
clc
mov
wbinvd
enter
iret
dec
xchg
jae
jmp
dec
test
mov
or
shrb
adc
pusha
mov
sub
and
cld
or
sbb
or
push
aad
xor
pop
call
push
cmpsb
xchg
into
repz
cmp
iret
jne
cmp
les
insl
imul
cwtl
jbe
cmpl
fld
cmpsb
pop
add
mov
loopne
ret
add
cmp
js
decb
in
dec
nop
jne
ja
mov
mov
popf
pusha
ss
outsb
inc
and
pop
jp
push
repz
push
out
xor
ljmp
mov
loop
shr
mov
add
scas
cmpsl
mov
scas
ja
testb
push
test
shr
xor
xchg
add
inc
sub
out
pop
arpl
add
mov
add
mov
mov
pop
mov
dec
cmc
sub
inc
mov
fwait
iret
add
xchg
les
into
add
jmp
outsl
jns
aas
imull
aaa
cmpsl
hlt
push
jbe
cmpsl
inc
xchg
arpl
aam
sub
pop
fiadds
addl
add
jp
jno
jbe
adc
sar
aaa
jl
das
gs
fisubl
cli
cmp
pusha
sub
mov
inc
jl
cs
roll
jne
in
hlt
push
in
push
sbb
inc
bound
add
mov
lock
lret
xchg
gs
in
or
mov
mov
mov
xchg
loope
add
arpl
sub
mov
or
jne
cwtl
or
aaa
adc
js
test
add
imul
je
dec
rclb
mov
and
or
xchg
and
ret
mov
mov
out
lods
mov
dec
sbb
data16
inc
xor
push
and
xchg
xchg
pop
mov
inc
xchg
push
push
add
or
add
xchg
xor
test
inc
jbe
jp
xor
sti
movsl
arpl
rorb
stos
cmp
lahf
lret
sbb
nop
stos
add
jns
pushf
xchg
inc
mov
sub
ret
insl
loope
sti
insb
adc
add
sub
inc
jb
lods
lret
or
jmp
sbb
mov
sbb
jne
sub
sbb
ror
dec
mov
add
clc
test
jg
ds
lret
sub
xchg
cmp
shll
stc
shll
imul
in
addl
cmp
xchg
cmp
jne
adc
mov
jnp
jne
bound
mov
cmpsb
movlps
xchg
insl
fwait
dec
or
out
stos
pop
sar
push
push
mov
test
dec
push
mov
push
pop
inc
xor
dec
cli
ljmp
jnp
cli
mov
sbb
sar
pop
test
divb
xchg
dec
mov
rcll
imul
mov
push
dec
out
cmp
sbb
ds
pop
ret
push
push
test
adc
orb
pop
mov
sbb
cmp
adc
into
jno
mov
add
jne
push
xchg
adc
mov
fwait
std
push
jne
int3
jl
bound
push
adc
mov
mov
sarl
jge
jmp
jo
add
xor
test
push
popa
in
jmp
push
sub
andb
in
sub
loop
icebp
sbb
nop
out
mov
push
mov
push
jnp
out
push
jns
imul
dec
scas
mov
lods
test
das
add
repnz
hlt
mov
push
cltd
lea
dec
stc
or
mov
lahf
pop
mov
cmpl
mov
xor
in
out
ret
mov
sbb
lock
arpl
inc
pop
enter
gs
popl
xchg
call
xor
sub
rclb
rcll
push
insl
in
xchg
xlat
pop
paddsw
mov
lahf
xor
jno
adc
ja
push
aaa
stc
fcoms
jnp
lea
enter
sub
sub
enter
mov
rcl
mov
fst
test
push
push
sti
pop
cmp
lcall
repnz
stc
and
lea
cmp
add
lods
and
push
cmpsb
int3
and
ror
and
push
mov
sub
fisttpll
jge
je
sbb
mov
and
xor
shrb
or
lock
popa
orb
cmp
popa
pusha
jl
pusha
jns
dec
hlt
pop
inc
mov
fisubl
jp
xor
in
ss
mov
pop
pop
rclb
cmpl
mov
aas
sub
ret
mov
xor
es
lods
sbb
mov
dec
das
mov
and
adc
mov
add
dec
subl
dec
pop
inc
fldt
jno
mov
cmpsl
push
fstl
xchg
xchg
int3
inc
xchg
xor
into
outsb
mov
sbb
pop
dec
fsubrs
loopne
mov
popa
hlt
test
mov
dec
jecxz
add
jg
and
pop
sub
adc
int
mov
xor
and
mov
adc
adcl
test
stc
sub
mov
sbbl
daa
fstl
ret
je
idivb
inc
mov
pop
adcb
in
lds
mov
push
loopne
loopne
pop
mov
jb
and
lcall
add
xchg
push
sub
out
sub
leave
mov
pop
or
mov
mov
mov
mov
adc
aas
lcall
in
push
idivl
push
insl
int3
ja
inc
ja
or
xor
outsl
adc
popa
into
stos
dec
fwait
and
cmpsl
jbe
jp
add
repz
inc
mov
or
xchg
pop
sahf
ret
outsl
in
sub
and
adc
aas
xor
xlat
movb
xchg
iret
dec
sbb
adc
push
mov
rcrb
add
lahf
imul
jle
das
add
mov
pop
fldenv
mov
pop
xchg
sub
jns
dec
mov
in
jle
or
sbb
inc
mov
sahf
xor
lcall
pushf
jb
push
dec
xor
add
int3
and
xchg
and
inc
sbb
mov
sbb
les
lcall
mov
cmp
stos
adc
xor
loope
inc
xlat
in
push
push
mov
xorb
out
bnd
adc
sbb
sub
lds
shrb
aad
cwtl
es
xor
jne
jbe
iretw
bound
add
test
push
sub
shlb
mov
dec
cwtl
stos
or
jle
pushl
popa
mov
movsl
mov
add
mov
mov
sahf
xchg
mov
inc
add
fistpll
mov
lcall
jmp
dec
jnp
jae
repz
xor
and
mov
adcl
dec
xchg
les
lcall
cld
inc
mov
cltd
scas
push
mov
hlt
sub
or
or
negb
in
ljmp
pop
cltd
and
pop
xchg
jbe
push
into
shrb
mov
sub
sub
push
enter
aaa
bound
mov
loopne
sub
xor
ds
mov
fisubrl
clc
push
jb
pop
pop
push
jmp
jo
imul
imul
es
push
or
push
xchg
or
push
cmp
push
pusha
mov
add
xorb
jecxz
or
xchg
or
ljmp
filds
mov
pusha
mov
fidivrs
adc
mov
mov
pop
mov
add
sub
jmp
push
dec
stos
dec
mov
cli
xor
mov
xchg
xchg
loope
dec
into
dec
mov
les
push
cmpsl
jge
or
jle
cld
int
xor
enter
mov
mov
add
sar
lret
sub
clts
mov
call
lret
or
repnz
mov
cli
rol
fisubrl
test
mov
pop
imul
xchg
mov
aam
mov
inc
test
stos
xchg
stos
cmpsl
lret
ja
mov
mov
jp
cmp
fisubrs
jae
jne
cmpsl
enter
inc
fstpt
cmp
mov
divl
ds
and
mov
fistl
mov
pop
cmc
dec
hlt
mov
mov
cmpsl
lods
mov
sarl
mov
fwait
test
inc
cmpsl
xor
pushl
inc
and
outsl
pop
ret
insl
xchg
lret
inc
pop
push
sti
jnp
push
shrl
xchg
inc
xchg
adc
push
pushf
xchg
dec
sahf
call
clc
lcall
xor
dec
jl
dec
and
push
xchg
or
mov
inc
mov
test
into
mov
clc
push
inc
lock
and
mov
imul
mov
xchg
xchg
jnp
pop
inc
lret
inc
mov
cwtl
addb
jmp
inc
pushf
repnz
jbe
sahf
lods
push
and
add
clc
mov
arpl
gs
inc
mov
xor
fucomip
test
push
jns
mov
cmp
mov
out
mov
sub
iret
lahf
fwait
movsl
xchg
jno
ja
inc
fcomps
andb
jg
mov
add
adc
pop
out
sub
nop
test
int3
cld
fdiv
aas
xlat
sbb
out
adc
movsl
les
and
xchg
into
jl
push
mov
scas
arpl
gs
shlb
repnz
ret
adc
push
test
or
test
mov
pop
mov
mov
call
stos
mov
adc
sub
xor
or
mov
cltd
pop
sub
inc
test
decl
xchg
call
pop
mov
jbe
mov
mov
mov
jle
int3
xchg
pop
push
and
jnp
shlb
add
jbe
sub
jmp
add
pop
jno
test
pop
jl
insl
mov
cwtl
aas
scas
popa
cmc
shrb
scas
add
add
rol
inc
aam
fstpt
or
int3
outsb
adc
stos
data16
push
adc
repnz
mov
icebp
inc
ljmp
inc
or
jb
adc
pop
js
stos
hlt
ja
xchg
loopne
adc
nop
dec
call
sbb
scas
inc
popa
insb
jae
jge
fisubrs
xchg
jg
outsb
xchg
add
xor
jns
stos
mov
cli
mov
mov
test
push
insb
cmp
mov
mov
sbb
pushl
jns
ds
mov
xor
inc
lods
cs
std
fiaddl
das
int3
daa
xor
and
mov
pop
vmovntps
push
mov
jp
jecxz
mulb
pop
movsl
pop
mov
xchg
sub
inc
push
push
fmull
jp
fldenv
or
push
mov
lea
loope
pop
dec
xor
loope
sbb
push
mov
mov
stos
in
xor
fbstp
aam
test
fcoml
insb
mov
test
test
dec
ret
stc
test
popf
sub
jle
sbb
add
xlat
movsb
pop
cmova
xchg
adc
sbbb
and
push
push
imul
push
fndisi(8087
and
popf
int
jne
popa
cmp
shll
movsb
test
fldl
call
and
aad
mov
pop
fwait
xor
outsb
sub
adc
sti
mov
xchg
aad
outsl
push
movsb
lea
insb
mov
fs
lcall
cwtl
bnd
call
jg
xor
or
mov
push
sub
mov
mov
sbb
jb
lret
jne
cli
jle
xor
insl
punpckhbw
xor
insb
ss
out
daa
int
cmp
and
lds
jae
push
push
cli
cwtl
xor
out
pop
scas
out
lcall
jbe
mov
sbb
mul
cs
dec
insb
push
or
sub
push
gs
arpl
dec
adcb
or
mov
sub
fidivs
push
pop
test
push
enter
and
jne
mov
ja
sarl
nop
std
aad
enter
mov
dec
loop
xchg
dec
inc
test
push
divb
mov
negb
cmpsb
xor
or
pop
mov
mov
xchg
insl
fcoml
cmp
scas
test
movsb
mov
mov
fldcw
sub
inc
pusha
std
cmpsb
pop
fsubrs
cltd
dec
adc
mov
sbb
mov
push
push
mov
rorl
and
cmp
or
cmpsb
jno
jnp
xchg
pop
and
addb
cli
add
idivl
adc
mov
dec
dec
mov
inc
pushf
leave
mov
cltd
lahf
addr16
or
push
cmp
rcr
mov
enter
shl
mov
add
std
and
in
je
aad
dec
in
sub
mov
xlat
std
mov
push
lock
inc
mov
jns
xor
cmp
mov
movsb
sti
or
outsb
stc
push
dec
sbb
cmc
js
push
iret
repz
loope
cmp
push
bts
insb
ja
inc
xchg
xor
mov
clc
repz
mov
es
mov
movsl
sti
lret
leave
sbb
subl
adc
mov
je
push
fcmovnbe
in
in
mov
iret
mov
inc
jge
out
mov
in
and
fwait
pushf
sbb
addb
scas
or
inc
dec
pop
mov
popa
cmpsl
xor
adc
jmp
push
xlat
addl
mov
fs
jbe
or
das
in
and
sbb
mov
pop
and
icebp
inc
cld
das
dec
sub
aaa
mov
add
cli
je
or
mov
inc
sub
or
gs
push
pop
loope
mov
enter
lret
mov
daa
hlt
inc
mov
test
add
push
out
or
mov
daa
loope
daa
jno
ret
adc
out
pop
sbbb
js
repnz
and
sub
adc
xor
mov
dec
push
jns
fsubrl
add
xor
nop
ret
into
cld
push
cld
jle
lods
lods
pop
mov
pop
dec
and
fnstcw
pop
mov
stc
push
cmpl
hlt
push
mov
test
out
out
xchg
adc
pop
loope
jno
lods
sub
data16
inc
or
cltd
xor
push
addb
xor
fst
bound
add
leave
mov
sub
and
testb
lret
popf
sbb
xchg
mov
cmp
mull
pop
push
mov
push
sahf
mov
ss
xor
mov
jno
js
sub
jp
mov
mov
pop
testl
rolb
sbb
mov
push
das
les
sbb
call
lcall
hlt
push
sub
cmp
pop
int
insl
dec
jecxz
sbb
mov
loope
js
sbb
repz
dec
mov
rcll
out
jmp
mov
jp
lret
outsl
or
mov
cmc
ret
xchg
dec
adc
aam
cld
cmp
xchg
dec
jbe
inc
stc
push
xchg
out
sub
hlt
jecxz
lcall
dec
push
mov
push
mov
adc
fst
sbb
mov
push
fcmovbe
fsubrs
sub
adc
cmc
mov
mov
jle
push
out
sub
outsl
outsl
and
inc
mov
xchg
popa
push
enter
dec
push
xchg
and
cltd
adc
test
jp
xchg
fdivrs
aas
mulb
xor
push
cmp
pop
and
ja
ret
loopne
or
xchg
movsb
fisubs
loop
inc
lods
xchg
ret
sbb
sub
lods
stos
xchg
dec
add
dec
pop
sub
lahf
sbb
jge
fwait
daa
mov
or
icebp
sbb
push
xor
stc
xor
push
lods
xor
adc
addr16
jmp
xor
add
mov
iret
jmp
arpl
cmpsb
rcrb
adc
jnp
mov
aad
sub
out
data16
scas
pop
lods
dec
or
inc
jo
cltd
xorb
and
push
popa
sbb
cmp
sub
inc
rorl
xchg
and
cltd
inc
fwait
pop
repz
jb
mov
add
ja
sbb
cmpsb
mov
daa
mulb
pop
fidivs
jae
push
xor
xchg
lock
xor
push
rorl
mov
cld
xor
cwtl
mov
add
or
iretw
or
out
cmp
dec
inc
fisttps
mov
pop
loopne
xchg
pop
adc
pop
jmp
adc
jle
aas
xor
cmc
stc
ljmp
mov
icebp
pop
pop
and
aas
leave
mov
mov
mov
cmp
int3
xor
pushf
sub
dec
lret
jnp
add
and
adc
or
cmpsl
mov
cmp
repnz
inc
ret
jl
bound
sub
xor
in
ds
loope
xchg
mov
stos
outsb
cmc
xor
jno
jno
in
sbb
dec
jg
fdivs
mov
jg
loop
ds
aaa
icebp
cmp
mov
cmpsb
xchg
pop
sbb
cmpsb
ja
iret
shlb
mov
cwtl
xchg
addb
les
mov
pop
andl
sub
inc
cmp
push
scas
test
insl
or
push
mov
jmp
xchg
stos
mov
dec
cmp
mov
dec
scas
out
movsl
ret
sub
fdivrl
imul
cmpsb
fcmovnb
shl
fiadds
fucomip
outsl
or
dec
jno
sub
mov
scas
je
pop
mull
mov
xor
das
mov
inc
lock
fiaddl
jae
aas
lahf
addps
sarb
dec
scas
sbb
inc
rcrl
inc
outsb
add
fldl
xchg
ficoml
or
inc
mov
rclb
out
lock
mov
stos
popf
ljmp
pop
sub
add
dec
ja
sub
loopne
sbb
push
pop
adc
pop
cmp
pop
push
sub
xchg
pop
pop
lcall
fcoms
dec
outsb
jle
sub
int3
arpl
pop
mov
gs
sahf
push
sti
je
sbb
sbb
jno
mov
mov
add
cmpsl
inc
shlb
fwait
push
sbb
sub
push
mov
cmpsb
mov
add
in
mov
mov
pop
adc
test
enter
cmp
xchg
rclb
insb
lods
sar
xchg
dec
fwait
mov
test
mov
les
je
or
and
das
add
aam
pop
xor
rorb
adc
mov
inc
lret
push
movsb
movsl
add
jo
mov
sub
lock
mov
rorl
popf
add
jp
popf
icebp
cmp
cli
sub
pop
mov
test
sbb
push
mov
jle
xchg
push
negb
mov
mov
jl
fwait
mov
movsl
sbb
sub
sub
pop
push
push
in
popf
in
sbb
sub
mov
je
xchg
stos
stc
cmpsl
js
dec
lret
xchg
and
not
xor
mov
add
loop
inc
push
mov
out
push
shr
and
cmp
sbb
jnp
movsb
inc
ret
push
imull
and
mov
pop
ljmp
addr16
mov
cmp
cmp
sahf
shll
rolb
int
jb
test
inc
and
or
sbb
fidivs
scas
addr16
jns
and
cmpsl
sub
jl
hlt
clc
adc
shlb
fldcw
and
cmp
insb
stos
stos
movsb
mov
ret
test
ret
fstpt
mov
pushf
lods
or
push
movsb
fcmovnu
out
adc
sub
mov
in
outsl
sbb
sahf
shll
out
inc
mov
leave
incl
out
sub
inc
stos
repz
les
leave
inc
pop
inc
mov
outsb
lock
filds
sub
insl
movsb
xchg
testl
aaa
jns
imul
ret
cs
enter
mov
aaa
lods
dec
push
ret
or
jns
xor
mov
xor
mov
out
les
into
xor
cmp
push
adc
cwtl
xor
decl
andl
xlat
cmp
inc
cmpsb
fnstsw
paddsw
in
adc
inc
adc
mov
pop
cmp
bound
out
rcrl
insb
cs
ret
imul
je
xchg
shrl
daa
mov
sub
push
lods
jno
es
jbe
fcmovnu
push
test
pop
out
sub
out
ljmp
mov
clc
sbb
pop
xchg
inc
lret
int3
enter
mov
sbb
idivl
cmp
call
cmp
mov
mov
and
mov
addr16
mov
ljmp
add
add
add
iret
mov
enter
std
lock
jl
cmp
sti
lods
iret
rcr
or
push
hlt
mov
fildll
pop
jge
aaa
mov
popf
xlat
aad
in
xchg
push
adc
xor
inc
ja,pn
sbb
adc
inc
add
arpl
hlt
aaa
std
sub
xchg
cmp
mov
in
mov
jno
mov
xor
xor
cmpsb
fwait
xor
out
pop
pop
aam
leave
data16
sarl
mov
inc
mov
mov
inc
mov
xchg
jo
inc
mov
nop
mov
lahf
pop
stos
pop
or
pop
stc
lahf
jle
movsl
shlb
ret
popa
push
js
push
es
fiadds
leave
mov
push
or
fwait
mov
popf
loope
xor
insl
xlat
in
pop
mov
inc
aaa
pushf
ljmp
jmp
lea
mov
ds
loope
push
rcrl
in
lcall
test
mov
je
jnp
mov
pop
lret
shrl
jg
push
popf
cs
mov
lret
jg
clc
in
xchg
les
sbb
test
imul
xchg
lods
cs
in
lods
or
jle
cld
mov
sahf
subl
pushf
dec
mov
test
sbb
jmp
sub
adc
enter
cmpl
inc
lds
push
pop
xor
inc
incb
inc
xchg
in
outsb
push
mov
xor
fmull
inc
scas
sbb
and
jge
aam
push
fcmovbe
lret
xchg
or
push
or
ret
test
sbb
sti
out
dec
add
pop
rcr
stc
lahf
push
ficomps
sub
dec
mov
xor
jp
add
dec
popf
std
lock
lock
int3
stos
mov
arpl
adc
ja
ss
repz
pop
gs
pusha
scas
cld
outsb
adc
sub
js
test
cli
fbld
xchg
sbb
das
dec
dec
or
in
add
mov
jno
out
cmpsb
sbb
pop
adc
and
nop
mov
imul
dec
aam
push
js
inc
xchg
lods
cli
popf
fisubl
dec
add
fdivp
mov
jmp
ret
mov
jle
loope
adcb
inc
pop
insb
and
sub
movsl
cmpsb
push
outsb
add
ficoml
sbb
mov
loopne
loop
jbe
std
jecxz
ret
popf
pusha
dec
stos
or
stos
fidivl
pop
pop
mov
inc
cmp
pop
mov
sbb
pop
pop
sahf
jecxz
fstpl
pusha
pop
mov
scas
cmpb
sub
adc
mov
fildll
cltd
fs
out
sbb
xor
push
leave
adcl
mov
mov
mov
sub
gs
lds
jmp
cmpl
or
mov
adc
pushf
cmpsl
jl
movl
add
je
inc
in
pop
insl
adcl
adc
in
mov
jge
jmp
test
jno
ds
mov
repnz
xor
addr16
test
xor
or
pop
les
andl
out
or
lock
push
leave
insb
arpl
dec
mov
dec
int3
xchg
mov
gs
dec
iret
lea
lcall
mov
ds
inc
inc
xor
dec
cmp
add
or
in
stos
sbb
push
add
mov
das
repnz
rorb
or
add
ret
adcb
and
push
in
jnp
xor
arpl
xor
out
sbb
jecxz
mov
shld
xor
rcll
sbb
cmc
cmpl
jb
cs
fisubl
lods
xchg
inc
xor
loope
int
call
and
inc
cmp
jbe
incb
in
ja
inc
lahf
outsl
mov
mov
cltd
xchg
fnsave
iret
pop
insl
movsl
je
add
ds
mov
sahf
mov
dec
loopne
dec
dec
adc
in
stc
in
iret
loopne
jo
fisttps
cmpsl
daa
rorl
lea
mov
addr16
xchg
xorl
inc
cltd
push
out
or
mov
fxtract
out
and
xchg
adc
jg
xlat
hlt
cltd
dec
lret
test
dec
pop
fimuls
push
mov
dec
sbb
cmp
jle
sub
aad
iret
sahf
imul
shrl
jb
js
mov
mov
roll
cld
daa
sub
loop,pt
mov
bound
fwait
xor
push
and
push
sub
pxor
jbe
fiaddl
inc
mov
clc
xchg
imul
or
add
cmc
push
outsb
fcom
out
dec
pop
mov
stos
cmp
dec
dec
movsb
add
pop
xchg
stc
sbb
outsb
mov
dec
add
xchg
bound
inc
dec
out
ljmp
dec
xor
lea
icebp
lods
lods
jne
cs
adc
mov
ret
fwait
pop
jno
movsb
xchg
cmpsb
sti
aas
pop
push
push
jg
jno,pn
push
and
cmp
test
mov
int
fwait
loopne
mov
xor
or
sti
jge
mov
into
fs
cmpsl
fistpl
mov
into
jbe
cmc
push
cmp
bound
sub
add
adcb
js
jecxz
jae
xchg
dec
push
ss
xor
aas
rorb
leave
xor
shll
sti
bound
add
push
sbb
pop
dec
mov
inc
lcall
mov
xor
mov
repnz
xchg
dec
mov
dec
xchg
pop
dec
pop
mov
daa
test
mov
clc
popa
adcb
out
scas
push
repz
cmp
addr16
scas
les
cltd
jb
mov
jno
mov
clc
lock
out
dec
xor
divb
lds
xor
popa
push
popf
icebp
lea
mov
sbb
dec
pop
xchg
xchg
mov
or
shlb
fcmovne
testb
movsb
pop
loopne
pop
dec
in
loope
cmp
cmpsb
outsb
jl
mov
loop
push
cmpsb
daa
rorb
adc
push
negl
lahf
stos
into
mov
shll
das
cltd
xchg
ljmp
in
adc
pop
lcall
div
mov
lea
testb
sub
lret
repnz
into
arpl
data16
adc
push
test
cmp
shll
jns
loop
mov
or
inc
xor
jae
addb
aaa
adc
pop
jns
xchg
mov
jmp
enter
lret
sbb
push
add
iret
clc
ss
and
movsl
inc
je
push
jo
push
mov
popa
sbb
inc
or
sbb
std
jmp
mov
push
cli
rol
dec
lcall
lods
in
into
fildll
jo
movsl
lahf
lret
mov
mov
out
mov
sahf
mov
cs
dec
ss
cmc
ja
mov
xor
movsl
ret
mov
dec
xor
orb
enter
loop
cmc
imul
xchg
lods
dec
loope
jmp
mov
push
mov
pop
pop
push
sbb
aad
jle
enter
mov
cmpsb
pop
lea
imul
mov
int
pusha
xor
movntps
push
adc
bound
add
xor
jmp
out
ja
dec
fwait
push
adc
test
cmc
xchg
mov
popa
pop
sbb
pop
mov
aas
pop
xchg
mov
xor
stos
inc
and
hlt
outsl
or
push
mov
mov
lods
cmp
mov
cmpsb
mov
testl
das
jno
repz
inc
lods
mov
jne
sar
lret
movsb
lret
addr16
rcrb
xor
in
outsl
mov
out
sar
aam
jb
mov
testb
inc
sbb
popf
shrl
orb
popl
and
ret
jns
pop
mov
loop
adc
scas
sub
lods
mov
sub
cmpb
sbb
fwait
sub
cwtl
cmp
stc
fsubs
ficoml
mov
cmp
repz
add
lea
daa
inc
jns
test
popf
repnz
out
add
stos
call
mov
inc
mov
pop
test
mov
push
daa
mov
fidivrs
ret
loop
jnp
adc
jp
js
test
xchg
jae
fstpl
divl
xchg
cmp
xchg
inc
or
mov
stos
leave
mov
sti
inc
mov
add
pop
sbb
ficomps
adc
aad
inc
lret
outsl
mov
ds
pop
fisttpll
dec
add
and
adc
xchg
mov
imul
lret
jge
mov
xchg
aaa
and
test
sbb
sbb
xchg
test
jecxz
movsl
jne
daa
lods
sub
int
repnz
rolb
push
cmp
inc
mov
push
mov
pop
inc
mov
mov
out
loop
decb
imul
inc
lcall
xor
push
jnp
cld
insb
mov
jecxz
ja,pt
in
jle
and
cmp
and
xchg
js
lahf
inc
dec
in
shlb
xor
loop
mov
add
sbb
push
cmp
and
jns
jmp
jp
mov
cmp
iret
jecxz
sub
xchg
xchg
and
movsl
sbb
sbb
jg
fsubr
add
ds
aam
icebp
push
notb
ror
inc
div
inc
mov
mov
or
inc
iret
xor
arpl
bound
pusha
sahf
punpckhdq
ljmp
je
push
mov
mov
jnp
sbb
test
test
movsb
ja
cwtl
mov
stos
pop
xchg
and
and
cltd
mul
rclb
je
and
loope
pop
sbb
mov
xchg
jo
or
jo
mov
mov
push
add
stc
inc
xlat
cmp
jmp
push
cmp
lea
xor
out
stos
outsb
orb
movsl
in
inc
es
in
mov
mov
out
pop
pushf
push
dec
mov
leave
cs
jno
inc
fnstcw
nop
cltd
jl
push
sbb
sbb
xchg
das
and
xchg
cwtl
popa
cmp
out
scas
dec
add
jno
cltd
das
add
ja
sbb
pusha
lcall
mov
ljmp
inc
dec
bound
sbb
mov
jmp
inc
xor
cmp
sahf
push
inc
add
movsl
dec
movsl
loopne
fsubs
or
aaa
push
cmpsb
popf
inc
sbb
out
dec
mov
and
add
cmpsl
test
call
jg
xor
cwtl
out
add
mov
shr
call
stos
shl
mov
or
ss
push
push
roll
mov
add
daa
test
mov
pop
nop
pop
dec
lahf
ss
jbe
jae
sbb
cmp
adc
dec
out
push
cmp
dec
xor
test
or
mov
data16
push
add
push
imul
sahf
arpl
std
lcall
scas
cmp
sbb
inc
ret
iret
adc
fs
repnz
sbb
test
xchg
lahf
sub
sbb
lods
dec
loope
sbb
sbb
jno
jge
ret
call
push
enter
cmp
xchg
mov
xchg
sub
test
es
sbb
in
dec
push
mov
sbbb
xor
std
push
inc
or
add
pusha
ds
dec
aaa
mov
pop
pop
test
cmp
mov
jle
inc
scas
mov
pop
push
je
pop
mov
cmp
fmuls
lret
scas
adc
push
ror
lahf
mov
ret
mov
inc
sbb
outsl
sarb
add
clc
cli
jb
push
xchg
sbb
add
ss
lahf
push
jmp
cmpps
sub
xor
jg
mov
fst
loopne
ret
add
test
push
mov
fdivrp
test
inc
fdivrs
cmp
fs
aam
or
aas
js
mov
lret
inc
jle
lret
cwtl
cs
xchg
and
rcr
cs
fiaddl
mov
mov
in
push
jae
pop
xchg
and
outsl
movq
scas
sbb
icebp
movsb
mov
shll
mov
dec
inc
imul
inc
push
mov
inc
mov
dec
inc
xorl
pop
inc
popf
mov
mov
xor
push
mov
xchg
fldl
clc
shr
je
loope
mov
dec
push
cmpsb
lea
movsl
mov
sahf
out
mov
push
pusha
lahf
sbb
cld
ss
mov
cmp
dec
or
test
mov
stos
and
int
loopne
jns
lods
push
popf
imulb
int
les
scas
in
cmp
pushl
bound
mov
in
fucom
add
int
shr
fs
lds
mov
dec
imul
ss
xor
sub
or
or
out
popa
popf
push
xor
fs
gs
or
sbb
sub
mov
je
int3
out
add
loop
mov
mov
scas
sub
pop
popf
jno
rclb
loop
in
jmp
push
fwait
outsb
mov
jns
out
arpl
inc
rcrl
fcmove
fildl
lds
cmp
out
loope
dec
add
outsl
fidivrl
rcrb
cmp
sbb
inc
leave
pop
mov
pusha
mov
es
outsb
xchg
cmp
mov
jo
je
popa
mov
in
sahf
je
mov
mov
in
shl
sbb
out
cli
mov
or
ljmp
and
mov
jge
jns
int
dec
or
cmc
pushf
xor
jne
lds
stos
add
in
xchg
mov
daa
mov
int3
cmp
lods
je
pusha
mov
mov
shrl
js
mov
inc
inc
cmpsb
xchg
mov
insb
sub
popf
into
insb
jecxz
ss
rcll
sbb
cmc
aam
fxam
sti
aam
je
pop
or
jmp
xor
pop
outsl
add
mov
sub
jne
out
int3
cld
lds
daa
adc
sahf
loopne
lods
add
repz
mov
imul
pop
jp
push
cmpsb
in
or
mov
dec
mov
mov
xchg
fldln2
xor
mov
popf
lock
cmp
add
push
movsb
ss
xor
rcrl
dec
rolb
push
xlat
mov
aad
xchg
pop
popl
popf
and
js
out
dec
adc
sub
stc
movd
sub
dec
jns
sub
adc
pop
int
push
sti
add
xor
pop
sub
out
cli
push
mov
cli
sub
repnz
bound
pushf
imul
stc
int3
cmp
xchg
mov
jnp
lds
sar
xchg
ljmp
repz
cmp
ret
call
aaa
push
dec
xchg
sahf
in
mov
orb
sub
fistps
pop
les
add
mov
dec
idivb
movsl
lock
jg
sub
orl
xor
ds
jo
insb
push
mov
push
call
pushf
inc
sbb
loopne
jl
mov
adc
cmp
push
mov
mov
incl
sbb
std
lret
dec
imul
dec
and
test
movsb
cmp
std
addr16
add
add
je
daa
es
arpl
scas
push
xlat
mov
pusha
jle
lods
push
sbb
xchg
and
jo
mov
dec
rcrb
mov
cmp
inc
jg
push
pop
mov
sub
negb
repz
jnp
or
push
jae
mov
adc
xor
or
in
movsl
sbb
arpl
cmpsb
mov
sbb
stc
mov
stos
jne
jno
ds
jp
mov
xor
lcall
push
cmp
adc
push
lds
or
pop
scas
outsl
adc
inc
stc
cld
les
fsincos
dec
xlat
mov
xor
mov
jp
in
repz
scas
imul
inc
push
push
xchg
mov
and
imul
int
pop
rolb
out
enter
addl
sbb
in
in
mov
imul
enter
aaa
xor
les
jp
testb
call
mov
xor
sti
flds
mov
or
cmc
lea
push
cmc
stos
jno
lcall
int3
in
repz
sbb
xchg
inc
push
filds
incl
jne
pop
sbb
popa
jg
sbb
inc
ret
mov
fwait
push
mov
sub
fcoml
in
add
dec
popf
push
sub
pop
or
cmpsb
push
push
push
ret
mov
xor
lahf
mov
cmpsl
aad
das
mov
aaa
mov
orl
dec
push
imul
sub
push
dec
loopne
cltd
lods
psubw
or
insb
int3
js
nop
hlt
jg
add
sub
cmp
fdivrl
and
mov
fidivs
lret
cmpsl
cltd
xchg
cwtl
cs
ja
ret
push
sbb
fnstenv
cmp
shll
lahf
sbbl
xchg
add
mov
fldenv
inc
mov
push
fcompl
lds
mov
xorl
mov
jns
inc
adc
mov
mov
in
in
lret
lret
sarl
and
enter
cmc
adc
mov
cmp
dec
or
lds
pop
mov
add
rorb
in
dec
das
fisttps
rcrb
jnp
inc
lods
adc
hlt
ss
dec
xchg
lock
int3
roll
mov
in
push
push
xchg
xlat
xchg
jecxz
repz
js
dec
repz
mov
lods
loopne
mov
jl
sub
or
inc
jne
pop
inc
icebp
dec
js
sarb
push
aaa
fistl
test
pop
dec
stos
fsubrs
adc
fxtract
mov
lods
cmpsb
nop
fisttps
les
stos
loopne
divl
jl
add
add
xor
call
out
inc
in
addl
sahf
in
loop
std
jbe
dec
ljmp
xchg
fwait
out
jb
and
aas
mov
jns
or
fwait
pushf
test
fucom
test
pop
mov
mov
fnsave
and
lret
add
xor
mov
sbb
add
sbb
push
dec
push
push
aam
aas
icebp
aad
xor
nop
jae
lods
push
mov
cmpsb
lret
dec
jne
daa
aam
mov
pushf
mov
nop
andl
inc
cmp
mov
ljmp
jne
out
sbb
and
imul
add
xchg
xor
jb
dec
xchg
shl
mov
push
add
out
pop
lret
xchg
push
jg
shll
cmp
insl
adc
icebp
xor
mov
ja
and
fisubrs
add
push
xlat
popf
jg
scas
add
packuswb
js
jns
and
or
add
sahf
insl
mov
int3
lds
pop
ret
and
cmp
cmp
stc
cmp
jl
cmp
cmp
jmp
jbe
iret
loopne
sub
and
clc
jno
xor
lods
inc
jo
sub
inc
sbb
jne
leave
loope
popa
sti
xchg
aas
xor
ror
sbb
jo
idiv
out
out
rorl
xchg
shrl
jp
push
pusha
in
dec
addr16
aad
sbb
sar
outsb
fstpt
cmp
iret
mov
int3
mov
lcall
jge
and
filds
jbe
testl
sub
jp
push
inc
es
daa
pop
mov
cmp
lret
mov
subl
test
nop
inc
imul
mov
mov
add
sub
mov
mov
xorl
add
cmp
lahf
jge
icebp
movsb
push
idivl
pop
int
xor
inc
pop
ret
sub
mov
out
mov
stc
and
jnp
and
rcll
sbb
or
xor
stc
ror
and
mov
pusha
outsb
stos
mov
xchg
cmc
mov
push
jo
cmp
jmp
push
js
lock
lock
ficoml
push
stos
daa
out
or
loop
jmp
imul
fs
sub
pop
mov
mov
jle
subl
dec
jno
cmpsl
lret
popa
pop
push
je
add
rcr
data16
lahf
cmpsb
mov
rcrb
or
es
ds
shll
pusha
mov
sub
sbb
lock
test
pop
mov
bound
mov
aas
sub
lret
or
or
sub
jbe
inc
sub
jbe
sub
inc
adc
cmp
ljmp
mov
out
jle
test
fsubs
sti
or
lea
inc
pop
fsubs
adc
mov
add
mov
mov
int3
cmpsl
mov
mov
lcall
das
mov
push
mov
call
sub
cmp
cltd
push
rorl
ret
addr16
call
mov
addr16
data16
ds
jmp
sub
into
testl
negb
js
push
sarb
cmp
leave
ja
aas
jbe
cmp
addb
out
inc
fidivrs
bound
clc
mov
loope
pop
repz
mov
and
or
xor
mul
cli
int3
int3
mov
faddl
jbe
shlb
dec
or
and
mov
stos
shlb
or
enter
rcrl
loope
push
andl
jae
movsl
xor
out
stc
and
ljmp
xor
xchg
mov
stos
rol
mov
xchg
adc
jge
dec
pop
mov
xchg
outsl
sbb
rcl
into
xchg
and
inc
mov
sbb
in
mov
pop
xchg
insb
int
push
jle
shrb
js
stos
push
call
add
int3
cmp
dec
dec
jg
cmp
add
mov
test
shrl
xchg
pop
aam
enter
cmpsb
xor
pop
mov
jnp
adc
push
inc
ljmp
lods
dec
sbb
xlat
xlat
sub
cltd
aaa
in
jmp
push
dec
cmpsb
add
mov
and
dec
movsl
or
fwait
mov
and
and
sub
jne
jb
pop
outsl
sbb
cmp
into
int3
mov
and
scas
pusha
jmp
xchg
xchg
lea
cwtl
mov
jmp
cmp
push
push
es
cmp
cld
je
xchg
addr16
pop
sub
rcrl
jno
push
fildl
cmc
jg
cltd
push
adc
pop
xor
push
and
in
jp
jo
int3
adc
mov
and
inc
hlt
pop
andl
inc
push
mov
enter
and
jo
movl
push
das
sbb
roll
inc
jne
dec
fiadds
mov
jl
jb
dec
mov
std
sub
adc
jae
sbb
cmc
push
inc
adc
mov
test
sbb
sub
loope
fwait
or
jae
scas
stos
aad
pop
push
mov
dec
and
iret
cmc
js
es
cmp
mov
daa
and
aad
fmull
nop
test
sub
jnp
push
dec
xor
subl
jle
pusha
je
insb
aas
jl
inc
loopne
loope
sbb
fisttpll
test
push
lods
scas
adc
jno
iret
bound
std
adc
xchg
xorb
mov
sbbb
pop
sbb
dec
test
pop
iret
outsb
lea
imul
out
mov
fstl
aas
popa
movsb
mov
or
push
rcll
fstp
cltd
jae
cwtl
popa
cmp
cmp
subb
mov
shl
outsb
dec
les
movsb
stos
rcl
std
cmpsl
icebp
leave
jg
ds
stos
dec
or
in
repnz
mov
loop
mov
movsl
sub
and
inc
jge
pop
stos
loopne
les
mov
pop
lret
in
cmp
add
jns
and
iret
lea
lods
pop
cwtl
adc
add
cmp
push
inc
mov
movsl
jmp
sbb
inc
push
movsl
loopne
lea
xor
add
cmp
add
hlt
jmp
pop
xor
lcall
xor
push
ret
ljmp
das
loopne
mov
sbbb
sub
mov
bound
cli
add
shl
cs
push
cltd
pop
fildl
loop
je
sub
pop
out
xchg
cmpsl
mov
xor
cmpsl
sbb
and
jns
mov
dec
mov
aas
lahf
mov
call
icebp
xor
cs
mov
nop
lods
imul
jne
and
dec
pop
add
jge
mov
mov
cmc
adc
sub
andb
shrb
adc
stos
in
jge
call
repnz
call
cmc
xchg
xchg
sbb
add
loop
or
les
repz
push
dec
imul
push
lea
or
test
mov
jge
sbb
adc
inc
or
and
cmp
mov
repz
loop
cmpb
aam
dec
loope
clc
je
cli
dec
cmp
pop
xor
mov
pop
cwtl
add
cli
popa
movsb
rcrl
jns
or
hlt
jecxz
add
int3
js
pop
mov
jl
cmp
dec
lcall
jmp
jp
out
inc
mov
shrl
out
jbe
pop
fmuls
lahf
out
sbb
int
arpl
lret
aas
push
cmp
or
cli
sbb
push
lock
mov
mov
pop
out
jge
mov
cs
aaa
std
in
lock
pushf
mov
jbe
lret
mov
jmp
or
push
sub
in
out
mov
mov
mov
push
insb
imul
fidivrs
fnsave
cli
jb
xchg
dec
jle
mov
rcrb
pop
or
sub
pop
adc
cmp
sbb
call
bound
jnp
xlat
movsb
pop
imul
leave
lea
movsb
adc
outsb
mov
jecxz
xlat
in
rolb
dec
xor
sub
test
outsl
xor
xor
sarl
inc
or
xor
setae
or
pop
dec
es
jge
jns
pop
cmp
in
xchg
push
out
pop
adc
je
loope
add
cs
sub
pushf
aad
and
or
mov
xor
mov
test
mov
ficoms
mov
outsl
xchg
xchg
rorb
cli
imul
orl
fcoms
sub
popf
mov
or
insb
mov
mov
mov
pop
sub
or
jge
cmp
out
imul
xor
sbb
subl
mov
test
push
mov
jle
in
jg
jb
movsb
leave
mov
and
sub
sbb
mov
rclb
inc
pop
aad
arpl
clc
xor
cmp
or
mov
push
js
pushw
jnp
add
in
outsb
cs
scas
cmp
iret
jb
leave
adc
and
nop
dec
pusha
sbb
mov
mov
pusha
pop
stc
repnz
jbe
out
dec
inc
cmp
push
in
out
leave
xchg
daa
imul
addb
inc
mov
lret
add
ret
stc
jmp
adc
xor
addr16
pop
stos
out
test
dec
sbb
inc
pop
loop
adc
and
in
into
ss
popf
push
mov
or
jne
dec
stos
imul
test
xchg
lods
repnz
mov
dec
dec
add
out
mov
fidivs
bound
jo
jg
xor
mov
enter
out
daa
fadds
and
loope
mov
pushf
push
mov
xchg
cmp
cli
mov
call
sahf
push
hlt
and
popf
nop
xor
or
std
clc
push
jg
mov
gs
cmc
sub
scas
xlat
xor
leave
fcoms
inc
cmpsb
testb
test
add
add
je
pop
add
cs
xchg
mov
mov
stos
mov
mov
cmc
adc
lret
sarl
clc
cmp
test
int3
shlb
scas
or
push
pusha
sbb
xchg
addl
or
xlat
push
dec
mov
adc
sti
lods
mov
and
inc
jmp
dec
rcll
pop
push
xor
in
mov
ficompl
sar
aad
and
xorb
cmpsb
and
push
inc
xchg
sarb
stos
mov
inc
test
xor
sbb
sti
push
jbe
scas
inc
pop
mov
add
out
cmpsb
mov
inc
stos
and
int3
inc
bound
std
mov
mov
add
jmp
or
and
pop
sbb
aad
add
mov
lahf
xchg
mov
cmp
stc
aad
dec
repz
jno
push
or
aaa
into
in
les
iret
data16
stos
jns
or
int
xchg
aam
pop
fwait
and
ret
lret
and
insb
div
leave
jne
sarb
sub
sbb
into
and
push
clc
sahf
outsb
xor
in
outsl
ret
adc
sbb
cmp
xor
xor
mulb
pop
push
add
xor
pop
add
pmullw
subl
jge
mov
enter
pop
xor
cmc
mov
lds
jo
sti
xor
cmp
sbb
out
cmc
ja
nop
adc
ret
xorb
cmp
setns
xor
mov
mov
cli
mov
sar
ret
and
and
movl
mov
sub
add
ss
xchg
adc
jo
inc
xor
mov
add
xor
and
pop
insl
lahf
jno
xlat
repnz
cld
or
xor
inc
call
jmp
sti
push
mov
jge
addr16
ja
fwait
mov
out
addr16
pushf
inc
iret
lea
bound
jge
cwtl
mov
ds
cmp
push
xchg
rcll
inc
cmp
jnp
aad
or
lcall
adc
aas
mov
popf
shrl
add
push
out
xchg
inc
mov
xor
das
sbb
loopne
insl
pop
xorl
pop
xchg
xchg
mov
pusha
dec
sub
lds
scas
lds
mov
cmc
and
adc
and
cs
pusha
sbb
sub
rcrl
incb
mov
leave
mov
pop
mov
shrb
mov
jne
add
pop
lcall
test
mov
or
stos
xor
mov
mov
cld
jb
mov
jo
dec
scas
test
add
dec
mov
push
pop
es
or
adc
cmc
fs
mov
jl
push
fsubrs
repnz
xchg
add
push
dec
jne
shrb
subl
push
lahf
and
and
in
lahf
sti
insl
push
cmpsb
mov
xchg
rorb
imul
imul
js
popl
int
into
cli
sub
mov
jg
push
aad
mov
test
int
repnz
fs
les
cmc
call
outsl
jmp
sub
xchg
push
add
cmp
mov
aad
pop
clc
mov
leave
push
jecxz
imul
xchg
push
mov
lahf
loop
loope
frstor
fsubrs
out
in
mov
jmp
pop
sub
ds
mov
jp
xchg
imul
addr16
or
pusha
dec
mov
fstps
pop
sbb
sub
push
and
out
subl
leave
lcall
mov
scas
mov
push
fsubl
in
ljmp
stc
mov
loop
cwtl
mov
jecxz
notb
lods
inc
inc
jo
pop
cmp
in
mov
mov
mov
std
fistpl
jecxz
inc
in
mov
ljmp
mov
lahf
jle
cmp
push
lahf
cmp
pop
pop
loope
jge
mov
mov
inc
stos
les
popa
xchg
xchg
daa
sub
mov
popf
mov
dec
insl
mov
mov
adc
add
or
jnp
das
pop
and
stc
outsb
lcall
jns
in
aaa
call
dec
sub
inc
je
dec
lea
xchg
xchg
sbb
inc
inc
sbb
sar
mov
mov
mov
sbbb
jg
loop
mov
loop
in
fisttpll
nop
push
test
repz
lods
lahf
push
cmp
ja
ljmp
dec
mov
xor
jge
jns
mov
cmpsl
je
test
pop
cwtl
mov
jl
or
xchg
test
mov
int3
ret
dec
aas
faddl
sti
lahf
enter
mov
push
jne
push
mov
mov
sub
jle
aaa
push
mov
dec
push
cli
cmc
push
mov
mov
pop
js
mov
iret
xor
icebp
cld
xchg
jne
lcall
int
lret
and
and
testl
pop
ret
sbbl
jg
xor
lds
out
std
test
mov
jae
scas
adc
das
dec
int
test
mov
mov
test
mov
stos
lcall
sub
mov
jecxz
and
sub
dec
and
add
pop
dec
cmc
in
jns
fstpt
mov
js
scas
add
dec
stc
jne
add
call
das
cs
push
xor
ljmp
je
push
push
push
mov
nop
cs
mov
inc
lods
call
adc
les
jb
ja
pop
aas
push
xchg
mov
js
or
into
jae
fst
mov
test
repnz
jmp
pop
xlat
leave
jo
data16
add
mov
testl
xlat
pop
or
and
inc
jg
jno
bound
push
cmp
out
sbb
mov
jmp
lea
add
lods
test
mov
mov
inc
inc
fstps
dec
shrb
into
cmpsb
into
mov
insl
movl
sub
cmp
inc
adc
lret
jecxz
fnstenv
xor
inc
mov
lcall
iret
fiaddl
subb
mov
dec
adc
popa
add
mov
or
jmp
pop
push
xor
mov
push
mov
sbbb
lds
dec
xor
jae
jno
cmpsl
dec
mov
mov
ret
xchg
lret
adc
push
pop
cli
add
imul
xor
enter
xorb
dec
push
dec
pop
shl
xchg
mov
and
lock
jecxz
adc
mov
fisubs
loopne
jne
jae
sub
or
clc
cmpsb
mov
push
sub
dec
mov
mov
pop
sbb
jns
and
out
mov
xchg
sub
sub
incb
lcall
rcll
pop
xor
or
sbb
push
adc
jge
and
lock
shrl
xchg
adc
pop
inc
popa
cmp
cltd
pop
pusha
sub
jl
mov
lahf
mov
jg
cs
or
mov
stc
mov
sub
adc
xor
insl
mov
lret
or
stos
push
sbb
movsw
lcall
push
pop
lahf
push
dec
inc
iret
mov
dec
int3
or
xlat
jg
addr16
bound
idivb
xchg
daa
shrl
ljmp
aam
mov
mov
inc
and
pop
call
lds
jne
lea
jp
mov
movsb
aaa
fildl
arpl
sahf
loop
mov
cld
mov
inc
insl
lock
mov
sub
or
mov
adc
test
mov
mov
or
fcomp
enter
lret
cli
dec
in
std
xchg
lret
pop
sbb
jecxz
fprem
cli
daa
ja
xor
mov
sub
cmp
aas
outsb
mov
sarb
jl
bound
mov
movsl
lahf
mov
push
inc
cmp
or
mov
xchg
call
imul
bound
mov
je
or
call
cmp
push
cmp
popf
cmp
ss
rcrl
pop
movsb
push
and
insl
stos
loope
sbb
data16
push
stos
imul
movsl
sbb
mov
push
out
push
pop
inc
ja
cmp
repz
mov
pop
aas
clc
and
lock
jbe
mov
imul
repnz
pop
pop
lea
dec
addr16
shlb
mov
jne
and
rclb
sub
enter
jp
add
lds
dec
loopne
pop
repz
lods
cmp
jmp
popf
dec
cs
or
out
pop
movsl
lods
int
jecxz
mov
loop
inc
adc
sub
icebp
outsl
lcall
and
cs
inc
arpl
movsb
dec
into
sub
lods
and
mov
cmp
mov
shlb
xor
jae
xchg
shlb
je
xor
loop
fsubl
add
repnz
xchg
sbbb
mov
les
sahf
mov
sbb
lods
fwait
mov
roll
outsb
xor
cmp
fnstenv
lcall
inc
jno
jae
mov
dec
mov
mov
es
pop
and
fcmovnbe
dec
sub
mov
lods
bound
insb
int3
push
popa
inc
es
popa
ja
aam
in
mov
push
dec
or
lret
bnd
xchg
sbb
dec
push
daa
test
mov
and
mov
mov
inc
fisubrs
pusha
loop
dec
adc
js
adc
scas
lret
rcrb
leave
sbb
int
jecxz
shll
insb
ret
pop
adc
pop
push
fs
mov
xchg
push
fistl
inc
add
jg
sbb
addr16
jo
cmpsb
inc
xchg
fisttpll
inc
and
dec
std
cld
test
loopne
loop
clc
arpl
into
jbe
inc
neg
or
inc
add
imul
sbb
adc
lds
cmp
dec
mov
dec
pop
xchg
sbb
xchg
and
mov
ja
data16
jo
dec
nop
fstl
jl
sub
cmp
push
stos
scas
push
fnstcw
dec
out
sub
out
dec
inc
aas
add
xchg
cmp
mov
in
ret
insb
xlat
in
out
sti
test
outsl
pop
daa
jmp
setno
cmp
add
cmp
scas
cmp
mov
ret
xchg
hlt
les
roll
pop
fisttps
adcb
add
and
in
inc
test
sahf
ret
sbb
add
aaa
sub
cs
pop
lock
je
loopne
sub
mov
and
xlat
jmp
test
fwait
xchg
mov
cmp
out
push
and
mov
dec
jge
jno
into
adc
faddp
mov
movsb
aas
ret
dec
pop
push
push
adc
jb
mov
mov
aas
and
iret
or
dec
push
or
inc
mov
js
and
sub
add
fldl
jl
push
sub
sarb
mov
lretw
movsl
pop
push
outsl
popa
fwait
mov
mov
inc
das
xchg
cmp
mov
jbe
orb
mov
sub
ja
push
fcmovbe
and
xor
mov
ret
in
add
gs
aam
push
jecxz
or
pop
fisubrs
push
jl
jg
mov
xchg
mov
pop
daa
add
adcl
and
inc
jmp
hlt
movsb
mov
data16
pop
push
arpl
pusha
scas
jmp
inc
inc
movsl
or
dec
jo
in
pop
or
fnstcw
enter
adc
mov
inc
stos
icebp
cld
pop
icebp
popa
fstps
addr16
fidivs
sar
popa
xchg
xchg
jge
jo
jl
jge
jae
in
flds
test
xchg
cmp
test
mov
lock
adc
inc
push
les
push
in
ljmp
lcall
cmp
push
das
jmp
iret
pop
faddl
shll
add
pop
or
imull
add
push
add
stos
mov
lret
ja
lcall
mov
jo
movsb
xchg
dec
and
pop
push
push
xor
popf
mov
aaa
mov
push
insb
pop
insb
bound
jo
aaa
outsb
bound
adc
lret
inc
pop
mov
add
aas
es
cli
mov
sub
xlat
push
in
pop
ret
jmp
andb
ret
sahf
sub
or
xchg
mov
rcrl
cli
jecxz
pop
pop
out
ret
or
scas
pusha
pop
lcall
ss
dec
leave
mov
mov
fwait
and
test
mov
push
sub
stos
cli
jle
dec
mov
int
popa
out
cmp
movsl
mov
inc
sub
cwtl
movsl
xor
jbe
xor
lock
pop
mov
xor
or
pop
fmull
adc
icebp
lock
pop
les
xlat
jb
jns
pop
cmp
mov
xchg
sbb
sbb
or
xchg
add
push
insl
add
in
loop
das
fs
or
jnp
lret
scas
or
adc
inc
inc
push
dec
xchg
xchg
cmpsl
push
mov
fisubs
lret
lahf
popa
adc
lods
sbb
mov
inc
ret
xchg
sub
data16
mov
add
cltd
jle
arpl
mov
adc
addr16
jecxz
xor
aam
lods
cwtl
mov
xchg
aam
stc
cs
jns
scas
jle
sbb
loop
in
rorl
jne
xor
jmp
mov
nop
push
loopne
mov
popf
xchg
popa
pop
int
inc
pop
adc
cmpsl
les
mov
mov
repz
roll
lahf
sbb
jp
sub
lds
mov
incb
and
loop
mov
add
jne
addl
dec
mov
dec
jp
clc
dec
and
sbb
mov
cli
sbb
push
inc
pop
or
cmc
xor
sbb
enter
movsl
test
push
in
push
lret
dec
out
jp
aam
out
nop
adc
movsl
jecxz
lods
sbb
test
cmp
mulb
mov
test
pop
out
push
jno
je
ret
and
xor
loop
subb
xchg
inc
sub
stc
ds
inc
std
xor
mov
int3
inc
stc
dec
or
adc
gs
mov
sahf
mov
lahf
mov
insb
cmc
adc
mov
cld
loop
mov
rol
dec
testb
imul
rcl
mov
cltd
mov
dec
cmp
pop
clc
dec
cmp
lcall
pop
jmp
insl
insl
stc
sbb
daa
xchg
xchg
xchg
cmpsb
iret
and
stos
pop
leave
mov
test
mov
dec
xor
xchg
arpl
adc
andl
insl
pushl
or
sbb
adc
flds
test
js
test
shlb
imul
loop
inc
arpl
shrb
dec
ret
hlt
jl
stc
mov
sbb
in
sub
mov
repz
pop
outsl
mov
rolb
jecxz
fadds
out
sbbl
negb
imul
jmp
inc
inc
pop
ss
ds
mov
add
cs
int
add
stos
xorl
sub
xchg
pop
pusha
sbb
iret
enter
nop
ljmp
fimuls
mov
xchg
cmp
push
inc
xor
pop
sbb
mov
sub
bound
xchg
sbbl
xchg
or
mov
int3
jne
xchg
push
test
test
out
mov
jnp
shll
xchg
push
mov
xchg
or
dec
pop
add
mov
pop
mov
push
sar
dec
inc
jle
in
test
stos
mov
mov
popl
aaa
pmullw
cld
mov
out
test
les
mov
cltd
mov
pop
or
gs
sub
push
mov
cli
mov
xchg
push
or
inc
out
push
test
fs
cwtl
ljmp
pop
aaa
pop
push
mov
bound
cmp
and
or
cwtl
xchg
loopne
pop
scas
leave
dec
or
into
lret
dec
xor
push
cmc
cmc
and
outsl
push
mov
inc
mov
movsb
ds
lea
push
hlt
lret
push
adc
adcl
sbb
sbb
out
andb
and
jne
pushw
in
cmp
jbe
aaa
inc
pop
rep
rcl
dec
mov
push
xchg
jg
insb
mov
and
jecxz
fisubl
movzwl
leave
inc
mov
push
aad
shrb
pop
add
mov
pop
inc
sub
xchg
mov
pop
or
mov
jecxz
mov
xchg
or
lock
enter
sbb
mov
daa
pushf
mov
lods
scas
jg
addr16
rorb
iret
addr16
imul
sar
mov
mov
mov
cmp
inc
jl
inc
arpl
out
aas
and
push
fwait
testl
pop
push
outsl
int3
sbb
icebp
sub
outsb
bswap
imul
mov
dec
add
mov
ret
aad
imul
adcb
loop
push
add
adc
mov
cmp
movsl
shrd
popf
cs
ret
bound
inc
pop
inc
push
xchg
mov
push
jo
inc
pushf
dec
mov
jmp
loope
dec
mov
nop
divl
popa
jl
dec
es
add
mov
dec
mov
sub
outsl
xlat
fsts
or
int3
add
clc
mov
and
aad
mov
xchg
push
test
mov
push
add
inc
mov
adc
cwtl
mov
enter
outsl
movsb
lods
ds
push
jmp
dec
pop
push
dec
in
repz
mov
loopne
popf
imul
test
mov
or
stos
scas
xor
int3
insl
rorb
dec
dec
jnp
fnstsw
xchg
xchg
jnp
insb
lcall
jmp
and
jp
xor
mov
fimull
push
or
cmp
hlt
mov
push
jbe
xchg
dec
sbb
pop
outsl
mov
push
jno
pop
xor
sub
inc
mov
in
push
test
fs
iret
imul
fsts
jb
mov
clc
outsb
xchg
jbe
xchg
jb
push
scas
dec
jmp
xchg
ljmp
fstpt
movsb
push
pop
jle
mov
cld
pop
das
mov
adc
pop
jae
fdivs
jge
nop
lock
push
loopne
adc
mov
ret
shrl
cmp
mov
out
push
cmpsb
jnp
int3
in
in
pusha
je
jle
mov
xchg
in
scas
add
lods
jns
adc
lahf
mov
adc
adc
mov
imul
int3
insl
or
in
icebp
movsb
mov
mov
icebp
insb
aad
and
and
orb
pop
xor
insl
scas
sub
dec
sub
rclb
jb
icebp
scas
imul
xchg
sbb
lock
cmp
out
fmull
ss
dec
and
scas
fsub
jb
inc
inc
xor
fcmovnbe
add
dec
sub
sbb
add
shrb
scas
fdivrl
cmp
dec
lret
cld
insb
and
enter
aad
jne
and
sbb
rcll
ja
rcr
pop
xor
pop
lock
cs
push
and
sub
xchg
inc
clc
cli
and
pop
js
dec
dec
inc
iret
das
pop
lock
fbld
xchg
std
loopne
xor
xchg
fldz
loopne
jo
mov
mov
inc
push
aas
push
cs
sti
popf
mov
push
jne
out
adc
je
ja
pop
inc
add
inc
inc
or
mov
xchg
adc
push
push
push
aam
mov
addr16
dec
ficoml
and
fstpt
adc
xor
push
shlb
int3
mov
add
xchg
xor
sub
jle
mov
pop
xchg
mov
dec
add
xor
dec
adc
mov
fstpl
in
cwtl
fcomps
add
sbb
lret
pop
or
js
fists
push
push
stc
pop
aad
cmp
jno
inc
popa
sbb
repz
push
xor
jne
shll
mov
cmpb
sti
mov
bnd
push
pop
mov
add
lret
lods
cli
mov
rcrl
shll
nop
sub
repz
dec
dec
xor
dec
cmp
leave
outsb
dec
cmpl
cwtl
ss
xlat
mov
xor
ror
stc
fucomp
dec
xor
in
push
sbb
test
int
mov
rcr
popa
lods
add
jbe
nop
inc
lret
pusha
addr16
loop
inc
add
loope
add
stc
adc
outsb
je
aam
shrb
and
fwait
dec
sub
xchg
dec
mov
dec
xlat
call
push
std
repnz
fsts
in
bound
outsl
push
loopne
mov
add
push
sub
cmp
and
sbb
mov
leave
xchg
orl
outsl
in
add
push
jmp
xor
or
add
xor
orl
aas
jb
lret
imulb
mov
mov
negb
mov
push
cmp
ljmp
lret
pop
lcall
fstpt
push
in
imul
imul
in
push
mov
inc
and
iret
popa
cmc
add
push
ficompl
mov
mov
clc
sbb
inc
pop
xor
pop
and
xor
inc
cli
push
inc
add
dec
push
push
xor
sub
mov
test
cli
sub
mov
ljmp
in
pusha
arpl
sub
and
cmp
mov
test
dec
divb
add
insb
cmp
ljmp
out
sahf
ret
xchg
adc
or
ss
lcall
mov
out
xor
loope
and
push
inc
decb
aam
testb
sahf
daa
push
pop
push
scas
stos
jnp
stos
adc
and
ja
arpl
ret
adcb
icebp
xchg
mul
fisttpll
push
jecxz
sbb
sbb
push
sub
scas
jo
aas
add
xchg
or
mov
fucomp
in
insb
xchg
pop
jne
mov
leave
and
pop
pushf
insl
xchg
je
addr16
or
outsb
lea
ret
xor
rcrl
insb
push
loopne
adc
ss
add
or
imulb
nop
xor
lea
repz
mov
mov
xor
pop
xor
fistpll
sbb
orl
mov
orb
loopne
sub
imul
xchg
push
addl
inc
add
push
arpl
movsb
insb
out
jno
sarb
jno
pop
jmp
std
mov
or
cwtl
les
inc
mov
dec
pop
xchg
jns
dec
sahf
pop
stos
mov
int3
dec
cmpb
mov
push
mov
loopne
clc
cmp
xchg
shrl
js
in
aas
js
sbb
inc
mov
adc
sub
sbb
out
xor
fstpt
sub
pop
pop
or
test
clc
mov
add
push
pop
pusha
int3
push
adc
nop
dec
inc
mov
aam
test
push
mov
inc
in
mov
rolb
call
ret
xor
ds
cld
shrb
cld
clc
js
pop
ficoml
add
push
push
push
cli
fisubl
pushf
and
mov
stc
popf
add
inc
insl
push
sub
mov
icebp
push
add
mov
faddl
push
push
mov
cmc
in
adc
outsl
aad
jmp
roll
les
jecxz
jno
jp
sub
adc
std
aas
and
or
subb
addb
sub
jecxz
iret
pop
cmc
fxch
xor
mov
lods
lock
jns
int3
sbb
pop
hlt
jnp
inc
xor
xchg
call
fs
push
adcl
loope
xchg
pop
jb
divb
jp
inc
test
sub
push
xchg
jno
outsl
add
out
sbb
in
xchg
jmp
bound
jo
inc
dec
pop
sbb
or
jo
popf
dec
call
jnp
ret
mov
pop
dec
cs
mov
in
shrb
mov
pop
lcall
loopne
xchg
leave
cmp
sub
pop
xchg
mov
mov
cli
loopne
jp
or
sbb
imul
outsb
cmp
mov
js
pop
bsf
stc
inc
jb
and
mulb
notl
sahf
jle
fistpl
adc
rcl
fucom
or
lcall
jnp
jo
rolb
jo
testb
or
fbstp
jne
dec
and
test
iret
lds
loope
shll
ret
cmpsb
push
inc
pop
dec
add
lds
jp
cli
pop
mov
popf
imul
jo
jmp
sub
jbe
dec
or
out
mov
pop
jns
adc
in
adc
jle
xchg
pop
sub
mov
out
and
xor
repz
popl
lahf
cld
cmp
leave
dec
lcall
lret
js
add
fwait
das
cmp
icebp
imull
rcll
or
jp
xor
daa
push
jns
bound
addr16
test
mov
pushf
cmp
xor
add
pop
pushf
test
push
dec
out
int3
jle
int
jp
mov
scas
or
or
adc
push
loope
inc
mov
and
adc
sbb
lods
pop
aam
adc
pop
push
push
out
subb
shll
add
in
add
lcall
divl
andl
aaa
adc
push
aaa
idivb
xchg
repnz
push
cmp
in
fsubrl
rcll
aas
leave
mov
xorl
inc
inc
shl
push
or
test
xchg
xchg
cmp
inc
sbb
mov
out
jle
sub
sub
lahf
cmpsb
and
loop
sarb
aam
pop
jo
repz
lods
xor
xchg
push
mov
sub
testb
xchg
jbe
xchg
in
push
pop
lea
rolb
jae
mov
xchg
xchg
xchg
add
int
pop
sbb
shrb
push
inc
inc
inc
lods
lret
movntps
push
jne
icebp
push
xor
add
mov
mov
out
adc
add
mov
loopne
mov
mov
movsb
xor
shrb
sub
js
push
cmp
or
mov
cld
mov
mov
xlat
pop
jle
jb
xorb
xlat
xor
add
pop
or
test
or
mov
loop
and
dec
add
out
inc
mov
shlb
lds
push
ja
mov
pop
inc
leave
outsb
stc
jl
sbb
stc
aaa
fcompl
mov
mov
mov
sub
mov
lahf
sbb
cmpb
sbb
push
mov
pop
rcrl
sub
or
jmp
leave
mov
das
sbb
or
insb
test
xchg
sub
stos
testb
adc
cmp
aaa
sbb
xor
lret
nop
inc
pop
ss
inc
stos
pushl
inc
jle
or
mov
sbb
pop
fmull
sub
loopne
stc
pushf
adc
jp
pop
jne
cltd
push
pop
sbbb
jo
jne
and
push
fisttpll
lcall
fldenv
insl
jl
cmp
imul
mov
jmp
enter
int3
scas
adc
mov
in
test
repnz
enter
add
int3
sbb
fdivs
mov
push
pop
dec
hlt
jle
dec
lods
out
push
movsb
dec
xchg
xor
jo
push
push
adc
push
and
push
mov
je
aaa
xor
jp
push
sub
mov
adc
dec
fistl
fs
jmp
jle
and
aas
and
sub
push
xor
push
lods
lods
adc
hlt
subb
sub
push
sub
fwait
sbb
cli
mov
cmc
sti
push
adc
add
sbb
inc
cmp
leave
mov
hlt
or
fistps
mov
mov
add
movsl
mov
sbb
pop
imul
sbb
test
call
xor
repnz
add
testb
pop
cmp
cmpsl
rcl
adc
or
daa
fimuls
jl
jg
sarb
aad
sbb
dec
popa
daa
mov
adc
xchg
pop
xor
push
dec
movsb
push
xchg
adc
lock
add
lret
sahf
loope
sahf
clc
rol
pop
cmpsb
cmp
inc
dec
call
inc
inc
push
push
addl
orl
dec
pop
out
xchg
jne
aad
add
xorb
movsl
out
das
dec
mov
pop
stos
insl
and
jb
or
fcompl
push
and
push
sbb
aad
adc
cmpsl
fisubrs
in
fimuls
xchg
mov
lret
sbb
in
sarb
sahf
xor
push
mov
xchg
mov
movsb
inc
lahf
jecxz
adc
stc
lret
xor
cmp
pop
ja
cmp
mov
dec
sbb
sub
cld
mov
mov
xchg
mov
xor
or
mov
in
jno
jmp
dec
lods
lea
xor
imul
pop
ret
mov
sbb
or
and
repnz
sti
push
out
ja
push
mov
idiv
leave
cmp
popf
lock
or
out
arpl
fildl
sub
dec
je
push
imul
mov
fsubp
cmp
data16
push
pop
ja
into
dec
in
pushf
sbb
shr
push
lret
pop
shlb
pop
xorl
pop
fimull
lods
test
sbb
xchg
inc
sub
mov
call
or
daa
addr16
mov
movsb
sub
orl
lods
sub
lods
pop
outsb
pop
jae
cmp
dec
inc
cltd
subb
xchg
add
arpl
or
popa
adc
jp
sub
push
inc
cmp
popa
in
in
roll
movsb
xor
leave
xorb
or
mov
xchg
mov
xchg
fisubrl
push
sbb
scas
xor
push
icebp
push
shrb
lock
bound
das
out
test
clc
insl
leave
imul
stos
inc
stc
fbld
and
mov
jbe
pop
and
ret
pop
dec
mov
inc
adc
mov
das
lahf
fld
adc
icebp
push
movsb
sbb
mov
jae
lods
popa
mov
out
and
or
scas
lcall
lods
jo
in
inc
pop
daa
dec
fdivp
mov
mov
pop
mov
subl
adc
mov
sub
xlat
out
jle
dec
mov
xchg
mov
pop
fldl
sbb
xor
shlb
pop
loopne
dec
out
inc
imull
outsl
mov
repnz
jmp
lods
jns
das
repz
cmp
mov
hlt
mov
int3
out
cmp
sub
sbb
scas
jb
adc
jno
cld
pop
in
nop
loope
loopne
leave
xchg
pop
lret
lods
dec
cmpsb
fiaddl
mov
test
mov
adc
das
jecxz
in
repnz
xchg
pop
or
xchg
movl
or
outsb
push
mov
insb
mov
stos
fadd
ret
rclb
push
ret
mov
inc
cmpl
movsb
imul
sbb
lahf
leave
hlt
leave
repnz
repz
das
iret
pop
fstpt
mov
push
mov
xchg
stos
addr16
outsl
jbe
push
aaa
xor
ror
dec
jnp
lret
jmp
pop
sub
lods
dec
loope
sub
popf
inc
sub
orb
sbb
add
in
fmull
cmp
xchg
ret
daa
cli
rcr
mov
mov
cmp
cltd
mov
nop
ljmp
jne
sub
push
sar
fsubrs
sar
rcll
or
gs
sbb
and
mov
dec
popf
inc
mov
popa
sub
dec
negl
sub
int3
mov
mov
dec
aam
mov
sbb
std
jb
xorl
ss
sar
shl
insb
cmpsb
daa
cs
jle
lret
imul
loopne
fcmovu
mov
out
mov
add
dec
push
mov
jo
insb
cmc
iret
fs
fsubr
mov
movsb
or
cmp
mov
or
clc
xorb
fucomi
fstps
push
xchg
push
test
es
push
cmp
xchg
sarl
adc
ljmp
sbb
out
test
das
xchg
lock
repz
cmpl
cmp
mov
xor
jle
mov
es
jp
or
into
xor
pusha
add
enter
xor
dec
fwait
cli
mov
int
mov
mov
jb
sub
movsb
insb
enter
sbb
lock
shrl
arpl
ljmp
outsb
inc
ret
inc
inc
ljmp
cmpsl
cmp
mov
dec
pushl
jbe
xchg
xor
adc
idivb
call
xchg
sub
xchg
mov
mov
mov
shrl
or
xor
cmc
ret
pushf
sti
jge
pop
push
inc
dec
ficoms
in
mov
cmp
outsb
stos
jl
rorl
popf
adc
aam
lcall
or
pop
and
imul
sub
and
insb
inc
in
popf
in
call
xchg
je
adcb
out
ret
xor
popf
jbe
jecxz
adc
pop
inc
ds
mov
add
jp
pop
or
int
fsubrp
push
fsubrs
inc
or
jnp
cltd
movsb
lret
push
dec
out
jmp
push
sub
adc
mov
loop
adc
mov
inc
xor
push
cld
and
stos
push
mov
or
sbb
in
jge
mov
push
mov
and
add
and
pop
scas
imull
loop
dec
cmp
adc
lea
aas
and
ret
xor
lods
movsb
add
mov
lahf
xchg
pop
pop
pop
xchg
push
rcrl
mov
iret
or
neg
push
ja
inc
sbb
out
sub
mov
push
dec
cld
stc
push
mov
mov
out
adc
and
and
mov
out
jg
pop
pushf
mov
imul
aaa
jns
fistl
mov
sub
mov
frstor
faddp
cli
fnstenv
adc
icebp
and
and
xor
inc
shl
or
fs
dec
push
jae
stos
ljmp
popa
lea
mov
sbb
or
rcr
sbb
fcmovnbe
add
sub
adc
push
adc
mov
mov
sub
mov
sub
push
sbb
pop
out
daa
xchg
sub
out
xchg
into
call
fidivrl
das
inc
test
add
push
lods
movsb
jo
mov
int3
pusha
inc
push
inc
hlt
rclb
adc
sbb
xchg
xchg
aad
lea
cmp
dec
cmp
add
xor
insb
ret
filds
xor
inc
mov
imul
mov
out
cld
mov
inc
mov
pop
outsl
and
insb
mov
in
mov
sub
out
scas
or
sti
int
outsl
or
add
adc
fistl
mov
jbe
dec
mov
scas
xchg
ss
xchg
dec
lcall
push
ret
in
mov
pop
int
lock
fcompl
push
and
sub
cmpsb
or
popa
sbb
mov
pop
je
mov
rolb
jno
arpl
add
ret
out
xor
imul
fucomp
push
xchg
mov
cs
andl
mov
jl
ljmp
and
lods
sub
push
mov
dec
cmpsb
push
dec
dec
mov
test
fdivs
test
add
add
aaa
orl
imul
mov
push
cmp
cmp
es
clc
or
xchg
mov
repz
mov
add
int3
pop
rorl
icebp
lcall
int3
negl
dec
push
dec
adc
es
pop
in
inc
imul
imul
jp
aaa
lock
call
xchg
xchg
roll
dec
sbb
mov
push
cmc
add
cmp
stos
push
repnz
xor
mov
fstl
in
js
popf
lods
jle
jg
leave
or
push
mov
inc
jnp
pop
icebp
cmc
fs
cmp
pop
push
jne
sub
ljmp
test
pop
lea
jl
xor
cld
test
incb
inc
mov
fmul
popf
or
mov
out
cmp
jo
push
stc
push
in
dec
push
xchg
test
cltd
xchg
add
jno
fistpl
ficoml
dec
cmp
in
inc
int3
xlat
jmp
pop
hlt
loop
inc
mov
hlt
sub
xchg
out
sub
sti
jo
ficoms
mov
test
into
push
nop
je
and
inc
mov
mov
xchg
popa
mov
out
lcall
push
xchg
cmpsb
xor
dec
das
pusha
mov
sbb
inc
fidivrs
test
mov
fsubr
orl
insl
push
arpl
daa
inc
mov
sub
push
mov
xor
xor
imull
dec
inc
lea
pop
sub
shl
and
lods
add
test
inc
imul
fmull
nop
mov
and
mov
popa
pop
dec
mov
je
add
in
bound
mov
lods
out
jecxz
and
mov
inc
mov
mov
dec
dec
xchg
je
rcl
dec
mov
inc
sub
mov
dec
sub
push
jg
sti
inc
test
mov
mov
mov
jge
push
cmp
adc
push
mov
push
pop
mov
faddl
push
jl
ljmp
and
xchg
cmp
sbb
mov
push
inc
insb
lock
bound
sbb
push
shl
adc
dec
or
jne
jl
notl
scas
adc
in
pop
pop
int
mov
mov
push
pushl
mov
movsb
fmuls
int3
inc
leave
hlt
nop
add
xchg
push
loopne
lret
leave
add
adc
dec
lret
movsb
dec
adc
pop
insl
or
outsl
or
cmpsb
or
fldenv
lret
stc
pop
pop
adc
std
loope
sbb
fbld
push
sub
mov
mov
sbb
lods
out
jb
mov
adc
and
out
loope
mov
outsl
sub
repnz
clc
add
jns
cmpsb
cld
adc
add
jo
lds
xor
testb
fcom
lret
out
sbb
mov
mov
out
pop
arpl
movsb
or
call
cmp
rorl
lock
pop
inc
xlat
js
inc
nop
adc
fidivs
add
cmp
jg
cmp
pop
ret
jmp
cmp
cltd
add
dec
sub
icebp
out
xchg
fisubl
test
add
dec
stc
mov
mov
xlat
xor
or
xchg
push
test
scas
sub
test
mov
dec
and
lods
scas
push
mov
jge
lea
sub
clc
rorb
mov
lret
das
cmpsb
clc
lcall
imul
ret
dec
lcall
nop
adc
icebp
xchg
and
lahf
mov
fld
mov
cld
fucomp
lahf
repz
lcall
sub
mov
aad
cmc
inc
mov
and
rcr
add
ss
or
push
add
imul
push
push
dec
fildl
cmpl
mov
cmp
movsl
lods
mov
sbb
jns
outsb
js
out
pop
jnp
sub
or
or
jecxz
icebp
int3
push
lods
clc
mov
mov
iret
jo
lea
test
adc
xchg
mov
adc
loope
cli
testl
insl
and
cmp
jle
mov
popf
jno
aas
pop
in
imul
jbe
inc
push
cmpb
out
jp
push
cltd
outsb
negl
fwait
loopne
mov
adc
sbb
aas
mov
ds
jb
adc
dec
in
jmp
or
mov
xor
pushf
test
daa
fstp
nop
insb
outsb
jmp
push
mov
call
sarl
add
test
lahf
insl
mov
shl
xchg
pop
mov
cwtl
icebp
jg
jnp
lea
aam
aad
jl
push
pop
imul
notl
xchg
movsl
mov
popa
jmp
incl
test
sub
insb
mov
repz
int3
enter
cmp
jne
mov
jae
ljmp
loopne
mov
int
imul
mov
movsl
stos
fildll
repz
mov
xchg
mov
pop
mov
add
jno
fsubl
je
roll
cwtl
dec
xor
pop
jo
xchg
aas
cwtl
mov
and
iret
subl
fdiv
sub
jg
mov
lds
adc
std
or
imul
dec
bound
cltd
jecxz
mov
and
in
inc
rcrb
sti
mov
and
out
daa
jp
mov
sub
jmp
lock
or
cwtl
mov
lods
sbb
jnp
cli
addr16
insb
jbe
adc
and
loop
cmpsb
sbb
andl
and
icebp
mov
push
push
out
mov
aam
lret
adc
adc
stos
cld
test
shll
in
aas
jl
addr16
jbe
iret
xchg
mov
mov
inc
xor
cmpsb
inc
lea
arpl
test
adc
add
xor
cmc
inc
cmp
sbb
xor
insb
inc
cs
mov
cmp
cmpsl
dec
ja
xchg
cmp
sbb
sti
out
inc
stos
inc
shufps
inc
xlat
scas
and
imul
jmp
aaa
push
sub
popl
std
ret
push
mov
fnstenv
lods
fistpl
pusha
aam
and
fidivl
pop
stos
lods
dec
and
out
stc
loope
mov
movsl
inc
dec
sbb
xor
jecxz
add
les
filds
cmp
mov
adc
das
dec
test
out
sbb
nop
jnp
mov
dec
sbb
sbbb
pop
in
imul
add
xor
clc
out
stos
adc
icebp
pop
xor
jae
push
insl
push
sahf
inc
mov
repz
cmp
nop
bound
ljmp
and
sub
inc
lcall
add
or
daa
cmpsl
repz
je
xchg
mov
int3
inc
inc
sub
aam
cmp
and
push
adc
dec
and
sarb
add
push
iret
mov
gs
adc
test
sti
mov
xchg
adc
stc
rolb
pop
mov
mov
cmp
rcrb
sbbb
sbb
loope
stc
xchg
cmp
stc
nop
loopne
cli
into
out
lods
pop
or
lock
mov
mov
out
jns
pushf
and
or
adc
mov
arpl
pop
andb
sub
jp
cmp
mov
ret
lret
cmp
push
and
pop
orl
cli
jecxz
pop
popa
shll
xchg
sbb
orb
jnp
cmpsl
repnz
pop
push
lods
push
pusha
mov
mov
aad
hlt
mov
xchg
loope
pusha
into
shll
insb
mov
xchg
call
add
push
jmp
and
pop
std
lods
mov
test
mov
aaa
cmpsl
cli
cmp
pop
lods
loope
mov
and
dec
incb
iret
sub
jo
addr16
mov
ret
pop
jmp
mov
es
mov
nop
leave
fwait
popa
aas
xchg
roll
aaa
int
rcr
adc
or
inc
xchg
insb
mov
cmp
mov
je
std
fisubrs
push
cmp
ret
cmpl
xor
es
mov
ljmp
cltd
add
mov
mov
pop
out
fsts
lahf
cltd
lret
sbb
out
push
clc
dec
imul
mov
hlt
stos
add
push
or
xchg
test
mov
sub
je
sbb
aas
rolb
cs
scas
xchg
jecxz
lock
adc
mov
aam
fwait
pop
arpl
lods
stos
or
inc
cmpl
ja
loopne
cltd
cmpsl
jae
shrl
push
arpl
aaa
inc
pop
jge
xorl
into
mov
leave
push
or
sti
stos
out
dec
mov
in
xor
outsb
cmp
xchg
sub
fiaddl
xor
xchg
mov
mov
jmp
fwait
mov
sahf
loopne
call
pop
add
dec
loopne
aam
int
int
mov
fidivrl
xor
pushl
xchg
iret
insl
pop
push
stos
ljmp
adc
dec
sub
je
push
loopne
inc
rdmsr
fstpt
enter
cmp
into
je
repz
lods
add
pop
mov
ljmpw
and
lds
idivb
xchg
cs
xor
mov
stc
inc
loopne
lret
fdivl
imul
mov
mov
pop
std
xor
jle
fstpl
dec
and
cltd
sub
add
mov
imul
cs
mov
insb
sahf
sbb
add
mov
call
or
cmp
test
insl
pop
jne
adc
fcoml
xchg
aaa
push
adc
jmp
or
fisubs
dec
pop
xor
dec
sbb
add
jns
int
sbb
sub
jbe
shll
hlt
xchg
arpl
into
notl
mov
inc
xor
cmpsb
call
subb
rolb
sbb
or
fistl
inc
insb
orb
out
orb
push
lret
stc
cmpsl
dec
jne
dec
mov
sub
out
xlat
stos
push
jmp
and
cli
jl
icebp
inc
or
enter
repnz
gs
ja
enter
pop
fistpl
lock
les
mov
mov
insl
add
push
ljmp
mov
xor
add
pop
xchg
ret
cmp
cs
loopne
sub
jno
movsb
aaa
mov
mov
rcll
imul
adc
jle
push
sti
pushl
arpl
jae
pop
fistps
imul
fwait
push
in
push
lods
xchg
add
push
dec
das
dec
popa
cwtl
mov
xchg
lods
push
cmp
dec
outsl
xor
popa
lock
inc
and
dec
push
jmp
hlt
cmpsb
fisubrl
mov
enter
icebp
cld
push
and
or
push
or
pop
push
repnz
and
jb
push
add
mov
or
scas
dec
movsl
sub
fwait
mov
popf
mov
call
jg
insb
cli
push
inc
cmpsl
aas
push
xor
xor
mov
lds
xor
push
insb
dec
adc
loop
xor
sahf
popa
fwait
lods
mov
xchg
gs
xchg
pop
stc
lods
mov
mov
jbe
dec
loopne
sub
jnp
enter
scas
fcmovnb
scas
roll
nop
mov
push
int3
das
dec
cmp
adc
cmp
test
outsl
or
test
js
cmp
mov
push
pusha
sbb
nop
or
test
dec
fcoml
push
int
push
aaa
js
ds
fpatan
fists
inc
stc
jo
inc
sub
pop
push
pop
xor
out
mov
lods
sub
lahf
daa
sarl
cmpb
inc
mov
mov
pop
sub
inc
xlat
add
mov
inc
jg
sbb
push
fistps
ljmp
out
nop
test
mov
mov
mov
mov
stos
fidivrs
lahf
push
lret
aad
jb
lock
adc
mov
sbb
or
lahf
xchg
movsb
cld
sub
sahf
sahf
aad
call
push
jo
lea
xchg
xor
inc
jns
mov
das
data16
add
dec
loopne
mov
movsl
or
fstpt
movsb
adc
and
and
xor
push
cs
xchg
sbb
jb
lods
in
mov
sub
mov
cmpsb
lahf
sub
aad
pop
nop
xor
xorl
push
mov
mov
cmpsb
or
inc
jp
dec
jno
je
dec
ret
ret
mov
loopne
push
addr16
pop
mov
sub
add
cmpsl
clc
mov
iret
or
jae
nop
aad
enter
adc
js
pop
gs
fisubl
in
push
pop
or
sub
mov
mov
repz
mov
fucom
mov
test
xor
js
out
in
lret
jle
or
xchg
iret
ret
imul
sub
repnz
cs
cmpsb
jp
push
lret
inc
shll
mov
imul
jge
push
daa
push
mov
push
faddl
mov
mov
lods
pop
mov
test
push
addr16
cmp
sub
sbb
push
inc
hlt
je
icebp
sbb
outsb
and
fs
scas
imul
pop
jne
shrb
enter
mov
xor
cwtl
ds
js
pushf
movsl
pop
addr16
pop
fwait
sub
mov
mov
mov
cmp
ja
pushf
pop
mov
mov
fistpl
cmp
cmpsl
aaa
mov
pop
insl
fadd
pop
xor
jbe
add
or
fdivl
and
rcr
push
sti
cli
imul
cmp
in
cli
insl
inc
xchg
adc
fimuls
inc
bound
fcomip
lods
lahf
dec
lds
push
pop
inc
mov
xchg
stc
sbb
shlb
mov
or
and
addr16
lock
or
adcb
mov
faddl
testl
sbb
inc
jp
xchg
and
dec
mov
scas
cltd
sbb
xlat
cmp
inc
jnp
sub
dec
insb
movsl
sub
test
bound
mov
fdivl
mov
inc
fwait
dec
mov
movsl
call
ret
mov
add
inc
jl
daa
dec
lret
popf
invd
jl
add
rcl
inc
cwtl
mov
jp
ja
inc
lods
pop
or
mov
or
lea
mov
xlat
ss
pushf
xlat
aas
sub
ds
cltd
in
insb
jae
adc
in
shrb
jne
mov
sbb
adc
cld
xchg
mov
loope
xor
iret
cmp
mov
leave
in
call
lock
pusha
rolb
adc
dec
push
adc
mov
adc
sahf
xor
xor
push
and
mov
adc
xchg
or
push
fisttpll
dec
pop
ret
and
push
fstl
cmp
dec
inc
sub
mov
cmp
popa
aam
mov
int
sub
inc
dec
test
push
xor
inc
sub
fldcw
test
lahf
fcoms
test
inc
ljmp
test
rol
pop
lret
arpl
pop
jb
loop
test
lods
inc
mov
and
scas
inc
sub
xchg
scas
sarb
jecxz
mov
mov
repnz
add
pop
lds
sahf
pop
outsl
or
lret
adc
and
rclb
inc
sub
into
mov
pop
gs
jnp
mov
mov
add
ljmp
push
in
and
insl
gs
aad
or
jecxz
ds
mov
int
sub
and
push
stc
sub
mov
xchg
fs
pop
jae
je
mov
aas
jge
jmp
xor
jle
gs
dec
test
imul
scas
dec
dec
adc
les
out
mov
mov
stos
xchg
mov
arpl
dec
cmpsl
imul
jl
xchg
sbb
push
jb
sbbl
test
pop
xchg
leave
sub
lret
mull
roll
lods
outsl
add
cli
popa
cld
adc
lcall
arpl
and
fcomip
cmp
clc
fwait
stc
sub
inc
imul
dec
jns
mov
adc
test
jnp
ljmp
cmpsb
and
jg
push
les
jo
mov
xor
pminub
pusha
cmpsl
negl
jmp
cmp
xor
cli
push
pusha
les
adc
sti
addr16
or
pop
out
stc
sub
dec
push
adc
inc
ret
mov
mov
xchg
pop
lods
sbb
dec
sub
mov
mov
adc
add
cltd
cwtl
push
stos
mov
cld
out
pop
xor
into
adc
or
xchg
daa
lods
int3
leave
addr16
xchg
notl
js
dec
sbb
shrl
hlt
lea
repz
mov
jbe
xlat
and
mov
adc
test
int
ret
gs
pop
scas
nop
push
call
mov
mov
jg
popa
das
push
or
cmpsl
adc
fisttpll
adc
in
jl
mov
aad
in
loopne
sub
pop
xchg
insb
outsl
mov
jns
mov
ja
test
fldcw
xchg
shll
nop
pop
iret
add
mov
in
imul
ja
scas
mov
push
cs
lcall
arpl
push
adc
add
shrb
xchg
outsl
pop
jne
hlt
std
pushf
add
outsl
cmp
sub
ret
mov
ss
je
mov
jp
dec
out
xor
fidivrs
cltd
inc
fcompl
call
mov
and
mov
jo
cltd
push
xchg
mov
out
gs
push
loope
stos
clc
loope
cmpsb
or
mov
adc
mov
inc
sbb
sbb
xchg
pusha
outsl
jle
mov
and
fadds
adc
push
sub
push
das
xor
out
xchg
sub
daa
inc
je
test
pop
and
push
jae
cmp
repz
icebp
stos
pop
int
mov
mov
adc
and
inc
sub
addr16
enter
aam
mov
imul
mov
orl
test
dec
sbb
fdivs
loopne
mov
xor
mov
nop
jne
inc
popf
stos
jecxz
dec
scas
lock
xor
xchg
movsb
inc
inc
push
mov
sti
leave
lea
int
stc
add
dec
and
cli
ja
inc
mov
insb
xor
add
lds
add
jbe
sub
js
dec
scas
ljmp
cmp
dec
jl
aam
outsl
xchg
into
imul
push
and
cmc
pop
or
pop
pop
jns
push
in
jp
imul
bound
cmp
sti
adc
pop
sbb
xchg
mov
mov
jo
xchg
cwtl
mov
ret
dec
cmp
scas
jecxz
sub
push
pop
adc
repnz
and
in
dec
das
ss
mov
into
mov
mov
adc
dec
jecxz
cmpsb
lcall
and
sub
pop
and
scas
adc
xor
inc
imul
inc
or
dec
int3
or
dec
stos
cld
pop
lods
nop
sub
pop
cmc
icebp
xchg
aam
stos
ss
mov
flds
clc
pop
orb
jnp
addr16
mov
push
mov
mov
mov
enter
mov
dec
rcrl
jl
mov
sbb
loope
outsl
jg
iret
sbb
xchg
sub
jne
mov
mov
lock
pusha
fimuls
sbb
ret
xlat
pop
lret
aad
movsb
flds
por
insb
fidivrs
sbb
inc
add
inc
pop
xchg
repz
cmp
and
and
enter
mov
shlb
dec
and
in
mov
pusha
jnp
inc
mov
rol
or
jae
or
xchg
inc
mov
test
xor
sbb
lea
jbe
mov
xchg
fisttps
sub
insl
pop
imul
push
rcr
push
shr
sub
popa
sar
and
pop
inc
sbb
fwait
jbe
pop
fsubrl
das
sbb
das
inc
lret
pop
pop
xor
shr
mov
adc
or
cmp
dec
std
mov
notb
jle
inc
jmp
mov
jp
sbb
and
and
jle
leave
insl
xchg
cld
xchg
cltd
imul
jge
cli
mov
leave
mov
shlb
pop
pop
xlat
inc
push
movsl
jl
gs
fs
mov
dec
fcoml
xor
test
or
scas
sub
or
icebp
push
xor
test
inc
push
leave
or
fisubrl
pop
adc
shr
int
mov
popf
push
push
pop
sub
mov
andl
imul
or
push
mov
lahf
fwait
mov
or
pop
das
or
adc
cmp
push
mov
pop
insb
sbb
inc
add
jo
fcomp
pop
loopne
shrb
addr16
movsb
add
cmpsl
mov
push
mov
jg
cmp
push
xor
or
stos
enter
subb
and
add
dec
cltd
inc
movsb
mov
lea
sbb
loopne
sbb
aas
je
dec
insb
add
lds
or
outsl
mov
cmpsb
lods
add
arpl
and
popa
fisubrl
sbb
inc
dec
lahf
loop
sbb
outsl
xchg
out
mov
mov
imul
notb
outsb
lds
add
mov
xor
xor
jnp
das
in
sub
arpl
cmp
mov
insl
adc
xor
ret
jo
cmpsl
iret
mov
mov
outsl
aad
add
push
iret
inc
in
inc
push
test
xchg
lcall
inc
imul
aam
sub
fdivrs
decb
cli
cld
xchg
in
movsl
jle
or
pop
or
xchg
sub
aas
jl
mov
mov
pushf
scas
das
push
push
mov
stos
sbb
cmpsb
pop
jno
jo
push
out
sarl
cmpsb
xchg
pop
dec
test
add
add
adc
rclb
mov
dec
sub
in
dec
rorb
jl
adc
nop
mov
mov
lahf
cmpsb
push
clc
push
xchg
outsl
lods
push
push
jp
mov
push
sbb
push
mov
xchg
add
push
mov
add
call
lret
int3
mov
orb
leave
jbe
inc
sbb
mov
ljmp
xor
mov
cmp
mov
pusha
jns
mov
fists
ret
clc
mov
inc
mov
mov
in
pop
mov
arpl
xlat
adc
shll
test
jns
scas
and
dec
fwait
sbb
test
jge
mov
data16
mov
scas
lahf
lds
xchg
add
inc
push
cld
ss
xor
movsl
adc
xchg
stos
xchg
lock
test
inc
dec
movsb
push
mov
ds
movsb
fsubl
or
loopne
jns
mov
mov
imul
sub
cltd
mov
inc
stc
hlt
and
sti
jg
mov
jbe
inc
mov
dec
clc
into
arpl
mov
xchg
mov
cli
xchg
jo
test
mov
adc
dec
int
mov
sbb
pushf
and
sub
ss
inc
push
add
nop
out
movl
cli
ror
inc
in
mov
cld
xchg
xchg
pusha
dec
bound
stos
mov
lock
inc
inc
push
movsb
test
out
mov
mov
int3
cmp
out
aam
mov
xor
push
repz
and
mov
daa
push
pop
dec
sub
pop
test
and
fwait
inc
mov
sub
push
sbb
addr16
call
mov
cmp
lcall
testb
adc
or
negb
mov
push
in
dec
arpl
mov
push
ljmp
sub
inc
pop
mov
jmp
mov
inc
nop
shrl
cwtl
push
jb
pop
nop
mov
and
and
gs
mulb
jl
mov
adc
and
in
mov
mov
das
adc
stos
sbb
je
xchg
pop
daa
push
add
fildl
subl
test
adc
ret
lret
adc
into
push
sbb
push
pop
mov
in
out
call
mov
pop
or
shr
mov
dec
icebp
xchg
inc
mov
insl
stos
call
inc
adc
addr16
add
xchg
xchg
test
inc
insl
cmp
and
fs
adc
sti
xchg
repnz
movsb
roll
lock
rcrl
and
fs
jle
sbb
addb
jns
xor
jg
movsl
and
incb
jns
mov
mov
jg
mov
push
ss
fsubrl
ja
pop
and
enter
xor
jb
mov
and
dec
aaa
and
xor
inc
jmp
pop
jle
data16
jo
lea
repnz
mov
jae
xchg
gs
in
xchg
inc
mov
das
ds
js
icebp
aas
mov
cmp
push
movsl
xchg
daa
or
out
push
dec
loopne
jp
repz
xchg
push
push
jl
jmp
bound
or
add
insl
push
aad
pop
or
add
js
mov
enter
cmc
lock
add
or
das
lretw
dec
fistpl
xchg
or
fsubl
jg
daa
jno
int3
and
fisubs
into
mov
aas
push
rorb
js
jo
mov
jno
mov
in
enter
xchg
adc
xchg
das
sti
or
lcall
rcll
xlat
jb
test
fcomps
pop
jge
test
scas
jae
das
dec
imul
mov
outsb
jne
aam
push
outsb
mov
xor
nop
pop
inc
jne
aad
mov
sub
inc
scas
or
jnp
xchg
in
cmp
bound
push
push
jns
fdivr
cmp
xchg
and
icebp
xchg
icebp
inc
xchg
adc
sub
lahf
mov
hlt
pop
mov
aaa
ja
stos
mov
bound
hlt
jb
mov
cmp
fildll
pop
shrb
dec
hlt
lcall
ss
enter
jg
and
mov
ret
gs
cld
mov
dec
adc
ss
or
aas
xlat
or
pop
mov
inc
mov
mov
xchg
jno
xor
call
jne
push
in
xorb
lcall
decl
mov
jl
loope
dec
fsubs
xor
repnz
mov
pop
mov
test
dec
push
stos
sbb
jbe
aad
jmp
add
out
dec
dec
mov
pop
repnz
sbb
cmp
scas
movb
movb
repz
mov
lds
xchg
test
stos
popa
fdivrl
xchg
inc
inc
mov
fmuls
sub
clc
push
cmp
out
cmp
mov
mov
scas
cltd
clc
push
and
imul
cmp
cmp
cmp
jg
push
jmp
push
dec
dec
andb
pusha
jbe
pop
icebp
adc
out
add
outsl
gs
xor
mov
mov
int3
mov
cmp
adc
js
arpl
mov
icebp
aaa
repnz
cld
int
mov
shrb
stc
mov
sbb
ficoms
fwait
daa
inc
shrb
addr16
pop
outsl
mov
test
aam
push
push
sub
cmc
inc
adc
iret
lea
sahf
sub
mov
pop
out
repz
in
cmp
ret
hlt
pop
out
inc
stc
mov
push
in
lock
mov
jb
cmpsl
aam
adc
dec
rclb
inc
mov
add
pop
in
push
or
or
mov
dec
mov
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
cwtl
mov
push
addr16
jmp
jmp
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
sbb
pop
cmp
mov
push
cmpsl
cmp
orl
mov
xchg
gs
cltd
cmpl
xchg
dec
inc
sbb
xchg
cmp
in
cmp
addr16
jmp
fld
outsb
or
and
or
aad
outsb
or
add
xlat
pushl
es
push
dec
daa
das
out
int
popa
xchg
sub
xor
shll
ret
mov
loope
cmp
or
aad
outsl
or
nop
or
lret
lock
daa
jae
mov
or
sub
ljmp
sub
cmpsb
jg
mov
push
jb
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
pop
cwtl
push
cmp
hlt
jo
lods
js
or
push
addr16
jmp
push
xlat
loope
sti
add
push
test
jmp
adc
loopne
cli
or
sti
hlt
push
aad
xor
or
pop
addr16
jmp
push
xlat
loopne
decl
fcompl
addr16
jmp
push
aam
aaa
cli
or
push
push
js
jmp
push
aad
leave
decb
fistps
daa
cmc
push
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
ljmp
jmp
push
aad
xor
push
fldl
je
jmp
sbb
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
out
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
or
jmp
push
aad
cmp
or
push
addr16
out
hlt
push
shl
aaa
stos
dec
sahf
sub
cmp
hlt
push
aad
pop
cli
or
mov
push
aad
push
cli
or
fisubrs
mov
xor
or
push
addr16
jmp
push
aad
aaa
fimull
dec
push
xor
loopne
clc
or
push
inc
js
jmp
push
aad
mov
or
push
addr16
jmp
push
aad
aaa
cli
dec
fstpl
cmpsl
je
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
jmp
push
aad
aaa
cli
or
push
addr16
inc
mov
cli
sbb
push
dec
mov
sbb
aaa
xor
add
shl
xchg
and
orl
jne
std
sahf
push
test
cmp
xor
lcall
sub
lds
push
xor
sub
cli
add
aaa
inc
cmp
popa
sub
movsl
int
stos
cmp
bound
insb
dec
xchg
mov
les
out
inc
jl
insl
mov
rolb
dec
lds
mov
jle
lahf
sub
or
nop
stos
xor
or
ret
rclb
ficomps
xchg
mul
aaa
sbb
jns
adc
adc
cmp
xlat
mov
sbb
xlat
jne
adc
sbb
mov
bound
pop
outsb
std
loop
out
mov
fmuls
jp
xor
mov
aaa
fwait
outsl
test
fdivl
int
lret
fcmove
lcall
adc
sbb
dec
hlt
fdivr
sub
les
int3
cmp
dec
test
mov
out
mov
pop
popf
mov
test
mov
push
push
cwtl
sub
out
push
addl
insl
in
ljmp
pop
popa
mov
add
stc
cmpl
sti
fmulp
pushf
pop
dec
xor
dec
or
push
jno
push
xchg
dec
adc
dec
or
push
sub
arpl
cmp
int3
push
test
hlt
jle
dec
shl
lock
mov
mov
leave
mov
mov
mov
inc
outsl
lea
aaa
lock
add
xchg
sti
pop
out
fisubs
xor
mov
cld
mov
adc
ret
shlb
mov
jo
push
mov
xor
mov
jle
aaa
xchg
in
jno
cmp
cwtl
mov
insl
popf
mov
fucom
in
jle
or
pop
loope
aaa
adc
testb
dec
push
ficoms
jecxz
pop
lods
jg
int3
fistpl
loop
push
incb
bound
aas
push
pop
xor
jno
pop
sub
add
fnstenv
int
pop
mulb
rclb
pop
lret
push
rcl
xor
cmc
outsl
jl
and
jl
xorl
pop
and
pop
mov
aam
aas
sbb
iret
inc
cs
aad
xchg
jg
sbb
add
push
es
push
mov
in
jbe
popa
inc
dec
dec
cmp
mov
dec
mov
je
arpl
sub
lock
jno
inc
dec
pushf
mov
add
xor
mov
mov
xor
push
mov
mov
dec
test
inc
sar
xor
and
xchg
jg
cmc
outsb
cmp
lock
sahf
hlt
pop
mov
flds
lcall
dec
mov
fs
and
xchg
jp
outsl
iret
sub
out
sub
outsb
mov
push
sub
pusha
mov
dec
out
xchg
sbb
lods
add
sbb
xor
jne
jp
shrl
out
pop
ds
cmc
adc
pushf
fnstcw
sbb
fsubrs
nop
cmp
cmp
testb
fs
sbb
cs
cmp
cwtl
xchg
lahf
mov
sbb
scas
stc
outsb
fldenv
dec
jp
mov
cmp
and
sbb
pop
out
or
and
adc
movsb
cmp
cltd
mov
cltd
inc
lods
loope
cmpsl
je
dec
xchg
cmp
xchg
xor
std
mov
sbb
adc
inc
sub
loope
sbb
aas
xchg
mov
mov
cmp
or
je
inc
sarb
mov
orb
jbe
test
xor
out
dec
pop
ja
sub
xchg
xlat
xor
jge
fdivs
sarl
hlt
cmp
outsl
inc
mov
movsb
test
das
sbb
cmp
aas
fistpll
ljmp
jg
mov
popf
xor
push
divb
sbb
add
mov
pop
cmp
outsb
or
gs
push
loopne
push
mov
jno
jg
int
jns
and
js
pop
push
mulb
test
in
cwtl
adc
adc
fdiv
test
ret
pop
mov
rcr
pop
repz
xor
fs
xor
js
loop
je
xchg
jnp
jmp
fadds
ljmp
cmpl
xchg
mov
aad
mov
call
mov
and
stos
adcl
xor
adc
dec
jne
leave
in
xchg
sbb
sbb
mov
mov
push
nop
xchg
adc
push
punpckhwd
imull
dec
sub
mov
sbb
sbb
add
push
jae
pop
inc
shl
push
push
lret
shlb
mov
or
test
mov
scas
add
mov
add
inc
and
idiv
jg
frstor
and
sbb
das
je
shlb
lcall
jne
xor
or
sub
loop
jo
in
mov
out
int3
adcb
repnz
sub
cmc
xor
ret
cmp
mov
sbbl
in
and
pop
mov
int3
popf
dec
xchg
ret
pusha
sbb
test
xchg
jo
mov
arpl
bound
shll
adcl
add
adc
int3
push
sub
mov
ret
adc
scas
outsb
push
xchg
jge
mov
stos
cmp
imul
adc
imul
and
xlat
out
lcall
mov
dec
cli
scas
push
mov
or
jne
pop
pop
sbb
fwait
lods
push
movsb
or
jg
xlat
add
jo
xchg
mov
push
jg
xor
add
lds
scas
jno
rolb
inc
stos
ja
add
pop
pop
mov
or
push
mov
in
jecxz
inc
jmp
call
xchg
cwtl
jmp
dec
pop
and
sub
ja
dec
or
notl
pop
xor
movsb
dec
pop
or
cld
pop
scas
pop
mov
cmp
dec
mov
or
test
and
inc
pushf
xor
xor
jl
mov
mov
popf
add
and
sbb
sbb
add
jecxz
xchg
ficompl
cmp
mov
into
add
mov
jns
loope
mov
cmp
sti
fmuls
int
pop
mov
bound
mul
pop
daa
shrl
fisubs
sbb
sub
pushf
add
sbb
pop
in
jl
and
xchg
mov
xor
pop
jmp
sbb
adc
add
pop
in
xchg
aam
jecxz
stc
in
add
out
stos
std
std
test
fcomps
pop
pop
dec
jne
not
or
stc
into
mov
scas
jp
push
ss
pop
sub
repz
push
cli
dec
cli
mov
test
js
cld
mov
pop
jo
sbb
hlt
push
inc
mov
cmpl
insl
xor
mov
cmp
push
pop
cmc
bound
aad
xor
cld
addr16
fstp
pop
cmp
test
sbb
xlat
xor
push
sbb
cmpsb
add
or
int
pop
mov
cmp
mov
push
mov
and
aaa
cmp
scas
loopne
ss
mov
lods
lods
push
lcall
push
pop
xchg
sbb
push
jp
outsl
cmp
push
xchg
fs
dec
mov
xor
cmp
stos
ss
idivl
call
int3
pushf
in
and
out
pavgw
sbbb
out
xchg
dec
jb
in
icebp
pushl
aaa
mov
mov
sbb
inc
mov
adc
mov
adcl
cwtl
pop
and
and
and
add
and
push
movsb
push
dec
arpl
jge
and
rcrl
rcrl
aas
push
sbb
mov
xchg
jbe
repz
mov
push
sub
mov
mov
jne
rolb
leave
push
sub
xor
lahf
test
movsl
sbb
xchg
stc
aad
in
mov
or
inc
stos
push
sti
fcmovnu
nop
xchg
scas
inc
jp
stc
jne
xor
inc
mov
scas
sub
pop
mov
test
dec
jecxz
sarl
jno
hlt
in
xlat
test
movsl
les
daa
and
mov
lcall
xor
or
or
aad
xor
adc
mov
cmp
adc
clc
jecxz
lret
or
fbld
xorb
iret
adc
arpl
addr16
adcl
sub
dec
rcl
jl
stos
mov
jae
mov
outsb
mov
lock
sbbb
and
or
mov
mov
das
xlat
push
jae
and
mov
jp
push
test
aas
inc
push
or
in
mov
out
push
sub
in
mov
jmp
or
push
subl
popa
pop
dec
or
sub
or
stos
call
inc
mov
xor
mov
hlt
xor
xchg
inc
addr16
mov
pop
stos
pop
or
ret
fcomps
inc
fnsave
add
inc
xchg
sarl
xchg
inc
mov
lret
dec
mov
rclb
mov
mov
pushw
and
jb
out
sbb
jno
jg
jb
ljmp
aaa
daa
jmp
mov
dec
add
stc
pop
pop
int
xchg
push
mov
pop
jno
jg
gs
and
test
pop
xor
ljmp
add
xor
fsubrs
cli
and
cwtl
cmp
popf
rcrl
mov
jecxz
adc
or
shlb
mov
xor
aad
push
scas
lods
push
dec
cltd
xor
jecxz
or
popa
push
sbb
xchg
xchg
push
lcall
jle
sbb
mov
cmp
cmp
mov
data16
nop
sbb
lahf
lret
pop
mov
in
push
mov
mov
ds
jno
lret
xchg
cmp
dec
idiv
fs
jno
lea
je
xchg
in
pop
push
cmp
or
lds
loopne
div
adc
fs
lcall
dec
adc
pop
dec
sub
push
inc
lds
dec
rcrl
mov
adc
lahf
inc
nop
aaa
rcr
ficoml
xor
ja
mov
jo
in
nop
sbb
xchg
dec
mov
in
stc
rcrb
out
jne
ss
mov
mov
or
mov
fsts
push
push
je
aad
xor
fbld
das
ja
lods
jmp
push
jle
push
das
in
push
jb
shll
xor
pop
xchg
mov
imul
adc
js
xor
icebp
pushf
aam
cmp
or
sahf
dec
in
stos
jle
pusha
jb
sub
fisttps
in
pop
in
andb
cmp
das
mov
mov
rcl
stos
dec
das
dec
js
int3
cmp
and
push
aam
out
rolb
cld
fwait
pop
ds
movsb
std
inc
jno
pop
movsl
inc
sbb
push
in
daa
arpl
popa
cmc
sub
adc
popf
adc
or
push
cmc
xchg
mov
and
aam
and
push
iret
hlt
push
cs
sti
jle
mov
push
in
pop
mov
cmp
ficompl
adc
inc
pop
ficomps
lods
movsb
jge
cmp
stos
or
lock
data16
add
mov
shll
sti
addl
movl
mov
lds
inc
enter
ret
inc
inc
call
sub
imul
jge
or
push
out
inc
into
es
stos
xchg
aad
jl
jl
test
sub
lahf
pop
push
pop
out
and
jmp
xchg
xchg
dec
add
fs
mov
outsb
push
mov
data16
in
xchg
addl
lahf
push
test
push
or
insl
leave
jae
pop
push
repz
iret
out
das
push
fld
or
cmpsb
cwtl
shlb
and
loop
mov
push
pop
lea
pushf
adc
call
xchg
mov
jl
das
jo
push
mov
lock
int3
xchg
add
rorl
mov
in
mov
inc
or
movsl
das
test
shrl
pop
int3
cmpsb
push
mov
lcall
cmpsb
aam
cmpb
sbbb
fidivl
inc
fisubl
pop
add
jg
sub
push
push
cmp
and
faddl
scas
or
xorb
int
or
inc
call
imul
dec
loopne
dec
xchg
popa
push
out
mov
das
push
out
and
test
loope
std
fdivs
fiadds
popf
mov
lret
inc
jne
sub
jl
int3
cmp
pop
xchg
cmpsb
push
rolb
jno
aaa
sub
and
adc
insb
inc
cwtl
jmp
aam
mov
adc
ss
sahf
pcmpeqd
add
mov
add
add
jmp
pop
les
push
mov
lcall
push
mov
push
cltd
inc
and
xor
iret
fstps
inc
mov
aaa
xor
xchg
add
pop
sarb
lds
insl
mov
shl
add
sahf
insb
into
enter
cmp
les
std
ret
mov
xchg
lret
fs
xchg
and
mul
push
add
fdivl
rorl
xor
test
daa
sub
loopne
fcom
xchg
imul
dec
jle
insl
xor
imull
data16
int
ljmp
or
or
pop
cmp
mov
ret
sbb
aaa
repz
jmp
cs
xor
fcomp
inc
fldcw
jne
and
mov
cli
mov
inc
fldenv
fsubrp
jl,pn
pop
and
push
xor
adc
ss
inc
lea
mov
mov
hlt
sub
mov
jp
adc
pop
mov
sbb
dec
in
cli
xchg
iret
lea
or
es
aas
fwait
cmp
dec
xor
js
std
mov
rcl
mov
popf
push
divb
inc
in
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
