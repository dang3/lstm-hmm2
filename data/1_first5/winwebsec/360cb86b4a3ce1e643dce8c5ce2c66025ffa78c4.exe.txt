jge
push
rolb
pop
bnd
mov
lds
test
rorl
mov
cmp
xchg
aam
sti
jmp
repnz
pop
mov
rcll
xor
sbb
mov
sti
or
jge
mov
arpl
or
add
sub
in
insb
push
loop
test
push
jnp
mov
add
pop
sub
pop
jnp
xor
shlb
inc
add
xchg
and
repnz
mov
lods
pop
test
xorb
xchg
cmpl
xor
shll
jb
sbb
pop
push
mov
cmp
cs
sub
push
movb
xchg
cmp
bound
jnp
and
sarb
sarb
xchg
sar
out
fwait
add
stos
jns
mov
enter
dec
aas
sbb
or
test
enter
sti
in
pop
dec
in
out
cmpsl
mov
fs
jp
jmp
xchg
scas
jp
push
pop
loop
daa
dec
sbb
jnp
test
jle
xor
adc
shlb
ffreep
popa
out
popa
add
sbb
and
jns
pop
cmpsb
xor
pop
fsubrs
popf
mov
outsl
sub
or
inc
leave
pop
mov
push
clc
mov
scas
cs
sbb
ja
push
mov
inc
gs
sbb
sbb
enter
pushf
fwait
out
aas
jmp
xchg
mov
mov
push
and
in
cld
les
xor
xchg
aam
clc
pop
mov
mov
test
test
clc
inc
aad
fsubrs
push
push
into
in
inc
xor
xor
or
das
and
add
jno
sub
jno
dec
or
lret
addr16
data16
adc
pavgb
or
jmp
jnp
dec
test
inc
loop
shlb
push
nop
ret
xor
shrb
xor
sub
addr16
xor
enter
in
imul
cs
sbb
xchg
inc
adc
repnz
mov
int3
icebp
lahf
loop
rcll
fsubrl
fisubl
push
mov
xlat
adc
popf
jecxz
imul
in
movsl
out
or
cld
stc
xchg
pop
adc
push
push
fistpll
sbbb
mov
mov
cmp
je
mov
xchg
test
mov
pusha
lods
sti
les
jl
test
sar
adc
jno
ret
xorb
leave
cmovg
mov
test
es
lret
aas
ret
std
mov
sti
inc
sbbb
jnp
mov
popa
jmp
insl
fiadds
imul
stos
es
insl
xlat
xor
lods
sub
nop
sbb
jne
aad
xchg
add
std
int
sbb
mov
repnz
inc
arpl
pop
cli
sbb
sbb
sbb
adc
dec
mov
daa
mov
adc
outsl
data16
pop
xchg
sub
push
xchg
test
lret
movsl
adc
sbb
gs
pop
icebp
leave
rolb
inc
out
mov
pop
int3
mov
clc
push
sbb
das
decb
loope
adc
repnz
decb
inc
mov
repnz
mov
jb
icebp
sahf
inc
lret
jne
inc
jne
sbb
aaa
mov
inc
jecxz
push
sbb
and
sbb
push
fstl
jl
xor
cs
pop
lds
aad
sbb
fwait
jle
testb
xchg
gs
pusha
adcl
jp
leave
or
sbb
decl
gs
xchg
push
inc
cmp
lea
imul
or
lods
bound
in
xor
pop
and
push
cmp
cmp
aaa
xor
jb
adc
pop
out
int
pop
xor
mov
mul
jno
push
aad
mov
popa
popa
jne
addr16
xchg
xchg
mov
cmp
jb
cmp
lods
dec
idivb
pop
xchg
pop
orl
int
popa
mov
outsl
dec
mov
sub
aas
leave
and
dec
scas
movsb
sub
into
mov
ds
or
lret
fdivrl
insb
mov
stos
enter
mov
cmp
outsb
fs
cmp
decl
stos
adc
push
aaa
xorb
testb
jnp
lahf
push
test
cmp
ljmp
or
xchg
insl
xchg
push
cwtl
sahf
fstpt
addb
pop
or
mov
in
sub
jmp
dec
push
mov
pop
lods
cmpsl
bound
test
or
out
xor
dec
mov
es
mov
sub
xlat
add
iret
ficoms
and
cmpl
push
xor
sahf
sahf
stos
mov
add
cmpl
dec
adc
and
out
popa
outsl
add
jl
adcl
int3
nop
mov
in
cmp
inc
stos
pop
imul
cltd
lahf
mov
jp
xchg
leave
jae
adc
rcll
push
aas
in
aad
mov
daa
jno
ljmp
fsubrl
sbb
push
fisubrl
outsb
fstps
aaa
jmp
shll
loope
sbb
sub
lods
mov
ja
ffreep
jo
inc
int
ret
add
orl
imul
adc
aaa
and
and
adc
test
lret
repnz
dec
lret
xchg
popa
notl
popa
out
hlt
sub
mov
fisubrl
shlb
imulb
fcomip
cmp
adc
es
xchg
add
xor
fwait
xchg
jmp
jecxz
and
test
fs
sub
mov
or
and
xor
mov
sub
jns
pop
xchg
pushf
sbb
xchg
loope
inc
xchg
call
push
aaa
jae
loope
std
dec
lahf
test
fs
mov
enter
lds
loopne
call
stos
imul
fistpl
loopne
push
jp
jmp
sti
rcll
fbstp
xchg
mov
push
xchg
sbb
pop
ret
les
scas
inc
push
push
push
and
push
shr
into
and
mov
mov
sbb
mov
mov
pop
ret
sbb
cmpsb
push
cs
jbe
mov
mov
inc
jl
out
dec
mov
movsb
cwtl
loopne
sub
xchg
push
ficoms
pop
cwtl
xadd
pop
pushf
and
mov
data16
inc
xor
popa
inc
in
out
roll
mov
jnp
add
popa
lock
rcll
lods
idivl
add
adc
mov
outsl
mov
pop
pop
xlat
xchg
mov
ror
and
scas
pop
and
dec
xor
xchg
cld
sbb
andb
mov
mov
jmp
lret
xchg
scas
into
outsl
inc
cmp
ret
add
cmp
stos
jg
pop
xchg
xchg
xchg
icebp
imul
jp
aam
push
add
push
lret
mov
das
pop
pop
cmp
sbb
ss
dec
inc
sbb
ror
xchg
push
imul
repnz
popf
lods
aam
in
pop
xchg
xchg
inc
sarb
mov
mov
in
outsb
sub
xchg
lods
or
into
lods
and
inc
jnp
mov
lcall
or
pop
imul
js
pop
imul
fwait
repnz
inc
adc
ret
icebp
movsl
aas
outsb
test
xchg
or
sbb
xchg
add
push
xchg
jg
dec
xchg
jbe
push
inc
mov
sbb
sbb
fldt
test
packuswb
lcall
imul
push
hlt
loope
pop
test
loop
fildll
in
xor
pop
mov
sub
les
push
ret
stc
xchg
popf
sbb
or
jmp
testb
jae
xor
xchg
rorb
mov
icebp
jo
loope
cmp
popf
shlb
cmp
push
jle
dec
scas
inc
outsb
push
push
shll
lcall
inc
pop
jns
movsl
dec
out
cmp
into
mov
movsb
adc
inc
int3
push
push
imul
sbb
jb
jp
fs
push
cmp
inc
es
inc
xor
adc
dec
bnd
mov
lds
inc
bound
cmpsl
cmp
xor
push
cmp
stos
mov
mov
cmp
dec
mov
push
pop
mov
push
sub
xor
fldenv
cwtl
mov
sub
ss
lds
bound
sub
add
add
mov
or
and
xchg
fs
cmp
pop
pop
push
jp
mov
and
popa
filds
add
sbb
pop
fldl
fsubs
out
jbe
add
inc
cmp
aas
pop
es
cmc
movsb
shlb
pop
mov
lret
add
loope
cmc
in
testb
jg
pop
das
movsl
ret
and
scas
negl
nop
push
or
in
mov
cltd
cwtl
xlat
iret
mov
fiadds
pusha
cltd
rorl
popa
push
cmp
pop
pop
mov
adc
rorb
jae
jno
popa
jg
orl
add
jg
xor
out
divb
dec
inc
enter
vpunpckldq
pop
mov
jmp
enter
hlt
push
jns
fdivrs
xchg
mov
lahf
add
mov
xchg
push
mov
cs
mov
mov
cli
cmp
sub
cmp
rorb
inc
enter
std
ss
push
mov
xor
bound
add
sub
out
xchg
inc
or
add
push
sarl
pop
jge
addr16
jge
pop
add
test
add
jmp
movsb
int
xchg
out
dec
mov
mov
je
mov
enter
ljmp
sbb
ja
xchg
xor
mov
out
jge
sub
addr16
out
shrl
inc
push
mov
hlt
inc
arpl
addl
xchg
test
dec
dec
jecxz
cmp
lret
andl
xor
push
mov
xchg
pop
fdivr
sub
imull
push
icebp
lock
xor
out
or
add
arpl
mov
and
xor
fildl
pushf
cmpsb
hlt
dec
mov
push
mov
in
movsb
or
or
cmpsb
sbb
ja
push
rcrl
in
mov
xchg
loope
ret
xor
out
xor
sub
and
mov
scas
cmp
popa
or
adc
lds
mov
and
sbb
dec
cld
lcall
pop
jl
fwait
cmp
fsubs
call
repnz
es
xchg
pop
fisubrs
les
mov
add
xchg
xor
bound
cli
mov
push
mov
sub
push
and
or
cmp
daa
lcall
xorb
shl
scas
sub
lods
add
adc
std
xchg
mov
clc
pop
aaa
or
int3
fidivs
addr16
jmp
xchg
mov
mov
or
mov
out
ss
loope
and
imul
sbb
xchg
pop
mov
cld
scas
add
inc
push
insb
add
leave
int
adc
arpl
cs
xchg
mov
sahf
and
jne
ja
and
dec
pop
mov
ret
sbb
insl
pop
and
and
out
push
cmp
lret
pop
or
jb
cmpsb
pop
aas
dec
jbe
idiv
leave
clc
xchg
in
fisttps
aad
incb
push
pop
xchg
repz
dec
daa
pop
dec
sbb
mov
rorb
loopne
inc
std
mov
or
jecxz
es
bound
int3
mov
addr16
lods
daa
push
jl
pop
jb
adc
inc
clc
xchg
jge
ss
add
inc
movl
inc
fld
add
out
push
or
mov
push
call
lret
pop
mov
test
adc
xchg
rcll
loopne
jmp
std
or
lods
lock
push
jge
pop
mov
and
icebp
xchg
push
push
fwait
xchg
and
cmp
push
sbb
sbb
sbb
stc
adc
dec
fstpl
mov
or
mov
popf
mov
sahf
push
shll
mov
mov
or
sub
scas
les
or
adc
add
outsb
cs
daa
cmc
inc
mov
mov
inc
or
scas
aad
jo
push
jmp
jns
jae
mov
xor
pop
stos
dec
add
repnz
inc
or
repz
sub
sbb
rorl
push
mov
fildll
aad
xor
xchg
ja
cmc
sbb
mov
aas
xchg
jbe
out
pop
ja
out
and
or
imul
or
dec
push
cwtl
xor
jle
frstors
push
cmp
pop
cmpl
ja
in
daa
cmpb
popa
das
es
fidivrs
sub
xchg
and
jmp
xchg
leave
inc
nop
out
stc
cmp
inc
int3
insb
add
in
dec
add
ret
imul
and
or
notl
repnz
imul
pop
js
into
iret
clc
jno
add
dec
inc
rcl
pop
pop
daa
push
sub
or
dec
cltd
cltd
pusha
jecxz
dec
fistpll
jge
inc
inc
cmp
or
repz
out
fwait
insl
lret
push
das
loopne
xchg
in
cwtd
inc
into
hlt
dec
inc
xchg
rcrb
xchg
daa
rolb
addr16
jae
jb
jb
fsubrl
iret
inc
jmp
adc
bound
add
and
hlt
mov
add
lcall
sbb
cmc
sbb
mov
sub
cli
ljmp
mov
hlt
call
add
and
shrl
call
dec
jmp
pop
fs
insb
mov
xchg
out
popf
lahf
push
andps
adcl
lods
cmp
sbbl
minps
cs
or
xor
xchg
xor
adc
mov
aam
scas
gs
xchg
movb
repnz
lods
pop
call
cwtl
sub
insl
and
mov
jnp
and
cld
dec
lods
adc
lock
fnstsw
popf
loopne
or
fs
xchg
in
push
jns
dec
mov
ljmp
xchg
push
ret
push
or
xchg
hlt
stos
push
xor
mov
stc
arpl
repnz
jmp
into
outsb
or
dec
sti
sbb
jp
lods
jl
or
dec
xor
sbbl
adc
add
sub
mov
inc
mov
sahf
pop
scas
jnp
cmc
inc
insl
pop
mov
repz
nop
cwtl
enter
lea
ljmp
jmp
and
add
cmp
cmpsl
sub
xchg
add
out
cltd
cmp
aad
and
sbb
ficoml
aaa
sbb
dec
or
mov
leave
fldenv
cmp
fwait
add
inc
cmpsl
out
sbb
retw
out
xchg
mov
je
inc
inc
xlat
or
inc
adc
ret
add
mov
xor
lahf
cli
js
mov
cltd
xchg
out
icebp
mov
sbb
sub
jns
adc
sbb
in
fisubrl
sub
fisubrs
inc
jnp
scas
outsl
or
xchg
add
and
clc
adc
out
pop
cmp
xchg
xor
push
cmpsb
adc
or
cmp
repnz
test
or
dec
xchg
push
ljmp
sbb
adc
pop
cmp
js
iret
push
mov
add
xchg
pop
data16
mov
cmpsb
scas
xchg
push
mov
xchg
les
cmpsl
inc
xor
jne
or
dec
and
mov
add
lret
enter
adc
and
ja
lock
and
scas
mov
or
fidivrs
insl
jmp
insl
jle
cmp
scas
adc
push
push
out
clc
mov
clc
cwtl
aaa
fisttps
mov
scas
adc
adc
mov
jle
lea
dec
pop
imul
gs
push
push
jae
scas
push
mov
sahf
jo
dec
push
mov
out
jae
int3
or
or
aas
pop
push
xchg
sub
sub
pop
roll
flds
fcom
adc
std
cmp
roll
mov
mov
mov
int
mov
sub
inc
or
imull
and
lock
cmp
and
roll
scas
popf
ss
sar
stc
and
shrl
push
inc
xor
sub
sub
stc
mov
jne
xchg
in
push
test
in
call
hlt
adc
into
jno
dec
mov
subb
dec
lret
test
and
lcall
movsb
xchg
test
adc
test
or
iret
mov
jnp
mov
xchg
ds
sbb
scas
pop
sbb
cmp
sub
call
jb
pop
jns,pn
stos
sub
jecxz
ror
cmp
xor
jmp
sub
fbld
test
inc
push
mov
imul
insl
mov
mov
pop
loopne
jo
cmp
mov
pop
pop
setb
mov
insl
sbb
mov
leave
in
or
mov
jbe
xchg
out
sbb
sub
roll
ds
jge
push
ficomps
xor
adc
mov
sbb
sbb
xchg
mov
xchg
lahf
jecxz
sbbl
stc
push
aaa
mov
stc
inc
push
push
bound
mov
jle
aas
pop
inc
cmpsb
cmp
mov
sub
lds
lods
clc
jbe
inc
cmpsl
cmp
roll
je
sarb
pop
sbb
inc
subb
cli
inc
insl
cmp
stc
mov
inc
jns
pushf
jne
stc
in
outsb
repnz
pop
mov
mov
cmc
inc
sbb
pop
jp
and
mov
push
cwtl
cmp
packssdw
insb
testl
ret
sub
sbb
inc
outsl
fnstenv
inc
ret
incl
ret
xlat
push
xchg
cmp
ret
jnp
and
add
sbb
push
push
xchg
ljmp
ds
mov
mov
mov
push
ret
and
mov
mov
sbb
cwtl
js
scas
lret
in
std
mov
mov
stc
pushf
inc
jg
popa
arpl
and
push
jbe
mov
pop
pop
lret
push
mov
addr16
push
sbb
jae
imul
inc
fs
inc
in
mov
outsb
nop
jb
lahf
lods
xor
pop
jg
aas
pop
jge
mov
shll
jbe
ja
outsb
push
repz
fstpl
ljmp
sub
xchg
xchg
iret
and
jno
lods
daa
pop
add
push
fdivr
clc
mov
lret
insl
jne
sub
shlb
int
pop
and
cmp
xchg
test
pop
jl
popf
add
mov
and
push
or
fidivrl
cmp
imul
es
and
nop
cli
fadds
jno
popf
fisttpll
inc
inc
ficomps
scas
cmp
push
pop
dec
or
mov
inc
xchg
cmp
fnstenv
sub
lods
mov
mov
sub
or
inc
cmpsb
fildl
fnsave
mov
jne
xchg
sub
lret
jnp
xor
xchg
mov
dec
add
dec
xchg
mov
sahf
or
fldlg2
mov
and
fcompl
xor
inc
dec
fistpll
outsb
adc
data16
popa
mov
mov
lahf
sub
mov
or
in
repz
adc
fs
int
dec
mov
lcall
sub
rcrb
push
xlat
mov
sub
mov
jl
mov
xchg
sub
xchg
cmp
fnstsw
jno
call
repz
mov
loope
dec
mov
popa
mov
and
outsb
xchg
dec
adc
push
sbb
lret
arpl
shlb
push
sbb
xchg
insb
sub
xchg
mov
mov
sub
stc
dec
jp
stos
aas
std
pop
stos
fisttpl
and
shrb
cli
adc
xchg
pop
push
test
cli
cli
xchg
mov
dec
test
pop
mov
in
ret
pop
icebp
inc
cmp
aad
je
sub
lcall
mov
test
fcom
mov
rorl
xchg
lret
cmp
pop
dec
aad
inc
mov
cmp
xor
cmp
iret
push
push
sbb
cwtl
aaa
ja
negb
xor
and
cmp
or
ljmp
adc
nop
jmp
int3
jo
mov
jae
mov
outsb
imul
mov
scas
shll
std
mov
jmp
rol
push
jnp
js
mov
pop
dec
int
inc
push
stos
seto
inc
mov
jbe
ret
test
repz
insl
loope
hlt
xchg
fmull
mov
sub
mov
ljmp
cmpsb
xchg
stc
in
call
out
gs
enter
sarb
leave
mov
popa
pop
mov
mov
xor
clc
and
pop
iret
iret
or
aas
xlat
loopne
lods
outsb
ret
push
pushl
mov
xor
out
aad
add
adc
rorl
inc
cmp
pop
movsb
enter
adc
fs
xchg
out
pushf
insl
pop
adc
mov
sub
mov
nop
add
xchg
pop
scas
int3
mov
nop
push
push
std
addb
cli
adc
imul
xor
jnp
mov
cmp
and
lds
lcall
push
jge
push
cmp
pop
pop
pop
and
push
lcall
lods
mov
add
or
push
adc
in
into
add
jne
stos
in
ficoml
daa
inc
push
inc
repz
fistpl
xor
adc
ljmp
in
out
xor
pop
push
push
or
lds
mov
fistpl
xor
mov
dec
inc
imul
xchg
xorb
rcrl
outsl
cmp
insl
inc
iret
mov
xchg
pop
mov
pop
pop
leave
lods
mov
mov
push
and
add
sbb
cmp
push
add
dec
aad
push
xor
jmp
into
mov
pop
mov
push
dec
inc
rorb
cmp
and
sahf
out
inc
inc
add
jne
and
sbb
insl
pop
shlb
int
adc
mov
shl
imul
test
pop
push
lds
mov
inc
sbb
stos
dec
lahf
or
inc
mov
ret
add
lret
add
xchg
sub
sbbl
imul
ffree
orb
xchg
popa
setae
je
imul
jno
out
jl
enter
icebp
inc
mov
mov
cwtl
pop
mov
push
and
call
ss
push
or
pop
xchg
jo
inc
mov
outsb
add
xchg
inc
sub
mov
or
fwait
jp
fstps
sbb
xor
jae
dec
inc
or
cmp
fistl
push
cltd
jns
mov
test
sbb
xchg
and
jno
add
and
sbb
pop
ss
mov
sub
es
xor
pusha
mov
popf
dec
adc
stc
xor
clc
add
and
scas
mov
jmp
enter
aaa
mov
inc
mov
sub
scas
dec
insb
in
repz
mov
push
mov
xor
mov
or
add
xchg
leave
and
pop
imul
cmp
or
mov
sub
lea
test
mov
push
pop
cld
xorb
adcl
imul
mov
leave
xor
ja
add
repnz
inc
imul
addl
imul
push
repz
cli
pop
mov
cmp
or
push
lret
scas
pushf
push
add
adc
scas
mov
push
adc
fs
jmp
sbb
loop
add
pop
lret
cmc
mov
adc
in
push
jge
rcr
pop
xchg
inc
test
jbe
leave
xor
sti
pop
dec
imul
das
iret
jge
lods
int3
mov
addr16
imul
fs
icebp
mov
jmp
das
inc
cmpsl
lcall
loope
jno
jne
popf
cmpb
cmp
fdivrl
shll
add
lret
cmpsb
sub
pop
push
lods
ficoms
and
mov
mov
inc
xchg
mov
sub
es
fbstp
and
lds
repnz
adc
in
repz
pop
jo
jns
xor
faddl
or
adc
stos
mov
jno
ja
ja
fiaddl
leave
scas
scas
arpl
outsb
mov
jnp
sub
int
jno
stc
leave
and
lock
dec
pop
push
test
in
jne
mov
cs
xchg
push
imul
pushf
push
into
movl
dec
fidivrs
xchg
roll
cltd
popa
mov
mov
das
shr
inc
xchg
pop
in
aad
mov
punpcklbw
jbe
xchg
lret
sbb
add
cmpsb
scas
ftst
test
test
hlt
adcl
ljmp
stos
xorb
aaa
lret
and
mov
repz
aaa
push
adc
inc
std
jge
scas
inc
sub
lahf
jne
fisubrs
adc
xlat
xchg
fcompl
movsb
lds
call
inc
jae
push
outsl
sub
fistl
fisubrs
lret
push
movsl
add
pop
xor
and
cmpsl
icebp
arpl
inc
or
xchg
rcll
pop
lcall
lret
inc
sub
pop
dec
mov
pop
push
ds
adc
aaa
nop
nop
popa
mov
sti
lcall
xchg
push
out
xchg
out
insb
sub
loopne
push
outsb
fmull
lods
push
add
loop
adc
ja
imulb
mov
test
idiv
xor
push
mov
xlat
dec
jle
mov
xor
mov
adc
pop
subl
call
push
test
cmp
test
inc
imul
popa
fwait
dec
andl
cs
iret
ljmp
xchg
insb
aad
out
fimull
fimull
das
pushf
xchg
jge
dec
stos
cmpsb
mov
sbb
or
adc
stos
sbb
loopne
cmc
ss
xchg
ljmp
pop
ljmp
stos
mov
push
repz
test
ret
int
mov
add
cmp
xor
push
sub
mov
sub
mov
mov
adc
dec
adc
dec
jg
push
mov
mov
aam
mov
pushf
lock
cmp
daa
data16
stos
shll
ljmp
mov
jge
sbb
jb
mov
stos
loopne
inc
add
ds
in
mov
inc
fcompl
sbb
clc
loop
mov
test
sub
in
dec
outsl
scas
movsl
jns
lods
imul
mov
out
mov
xorl
fsubl
xchg
inc
fidivs
jb
mov
cmp
ficoms
cmovb
pop
cmp
in
sbb
stos
in
mov
mov
jae
clc
mov
inc
fistps
xchg
aad
adc
roll
inc
es
inc
push
mov
int
jnp
daa
sbb
lahf
stos
cs
dec
and
iret
cmp
cmpsb
jle
jne
fstl
in
mov
arpl
out
jo
add
mov
in
xchg
icebp
test
xchg
cmp
dec
loop
sub
pop
jne
lcall
push
and
lret
ror
pop
jns
nop
fs
and
fistpl
das
in
ficompl
movsl
scas
jecxz
incb
mov
mov
xor
clc
sbb
clc
es
in
dec
rorb
pusha
lahf
rcrb
mov
adc
and
lock
rorb
add
or
pop
pop
xor
repz
out
jg
sbb
sbb
ljmp
ss
adc
lds
adc
mov
out
mov
mov
bound
add
cmp
imul
pop
js
js
cld
les
aad
in
adc
hlt
adc
faddl
add
dec
fmulp
dec
popa
cmp
xchg
imul
cmp
icebp
movsb
movsb
dec
divb
mov
mov
aas
mov
fisubrs
stc
push
dec
cs
push
cli
cmp
adc
gs
pop
into
shll
es
inc
call
ficoms
push
aam
cmp
add
pop
jle
xor
hlt
jnp
sbb
sbb
push
pop
push
nop
lret
enter
pushl
cmp
pop
repnz
enter
push
repnz
pushf
mov
push
jb
xchg
aad
icebp
fxch
lret
xor
cltd
jno
clc
mov
xor
or
mov
cmp
sbb
mov
cmp
dec
ret
stos
xchg
arpl
adc
les
pop
or
xchg
push
jo
push
add
cmp
xchg
jge
cmp
and
push
xor
mov
sbb
movsb
xor
xchg
sub
pop
dec
daa
mov
dec
cmp
pop
and
mov
dec
or
xchg
dec
fbld
pop
dec
mov
repz
and
push
arpl
sub
mov
inc
rcrb
jl
jae
fdivrl
aaa
xchg
test
sub
cmp
sbb
bound
lods
out
add
jnp
ja
daa
add
sbb
and
pop
pop
fcmovne
std
dec
or
mov
sbb
or
lret
cmp
cltd
stos
xor
and
or
jecxz
push
mov
je
jl
lods
in
pop
movsb
scas
sub
add
int3
pop
push
addr16
shlb
loopne
rcll
cmp
test
addr16
shll
push
loop
pop
mov
jne
add
jecxz
inc
imull
inc
inc
or
add
sti
sbb
jb
push
lcall
add
lcall
or
mov
jecxz
xchg
jecxz
cmp
xor
nop
xchg
mov
mov
daa
testl
sub
shrb
pop
loopne
out
and
and
cltd
bound
sbb
or
sbb
testl
lods
lods
fnstcw
jo
lret
sti
fimull
bnd
data16
fistl
je
into
js
mov
pop
sahf
push
push
call
int
dec
movsb
mov
sub
lods
popa
and
sbbl
cmpsb
pop
adc
lds
andb
xchg
inc
fsubr
xchg
jmp
mov
ret
jmp
mov
adc
inc
jb
insl
fwait
mov
ret
adc
out
or
pop
mov
stos
lea
sbb
or
imul
addl
popl
sbb
inc
push
rcr
out
mov
and
stos
pop
xor
jmp
xor
pop
test
xchg
mov
out
push
cs
pop
xchg
pusha
cld
lret
lods
add
icebp
or
jns
inc
mov
in
addr16
dec
jno
stos
push
adc
xor
pop
or
lock
ja
xor
xchg
pusha
icebp
mov
lret
neg
lcall
subb
xor
mov
aam
fistpl
repz
cmp
inc
lods
inc
insb
std
mov
ds
and
jbe
mov
mov
ret
mov
push
in
mov
popf
cmpsl
test
in
scas
push
in
pop
andb
push
adc
sub
jae
jbe
pop
mov
popa
mov
cmp
in
insb
pop
nop
sub
push
jp
enter
testl
jbe
icebp
push
imul
mov
rorl
rclb
je
imulb
das
or
pop
inc
pop
aad
xchg
and
and
shrb
jge
shlb
repz
lods
push
mul
test
lock
mov
std
rorb
fisubs
cli
aad
das
lock
push
mov
hlt
mov
sbb
stc
jns
gs
xchg
or
or
push
mov
lds
jbe
ret
pop
pop
outsl
xor
sti
lods
es
inc
and
mov
mov
jl
popa
sbb
inc
and
inc
in
or
lcall
cmp
ja
sbb
pushf
out
xchg
mov
push
ja
mov
clc
dec
dec
or
xchg
pop
mov
iret
ljmp
jp
and
push
adc
insb
sub
daa
movsl
lret
loope
mov
pop
xchg
lahf
rorb
mov
test
and
and
in
push
inc
add
adcb
repnz
int
faddp
das
push
xchg
call
aas
cmp
div
and
push
jbe
fld
xchg
pop
xor
xchg
mov
xor
int
out
mov
inc
cwtl
xor
inc
add
dec
push
inc
xor
lahf
aam
popf
out
jmp
inc
lcall
mov
in
push
jbe
or
mov
popf
sub
enter
jno
faddp
and
mov
repnz
xchg
leave
sub
dec
pop
lcall
cmpsl
jnp
sbb
test
lds
stos
ds
and
clc
je
add
repz
pop
dec
in
stos
jns
lea
and
inc
movsb
int
aam
cmp
pushf
lods
fwait
sub
sbb
xorl
mov
mov
adc
ja
inc
mov
shl
pop
in
fdiv
daa
ja
pop
push
iret
add
push
iret
mov
pop
call
js
add
idivl
xchg
mov
mov
mov
lahf
jp
mov
shll
add
cmpsb
fs
ret
add
sbb
and
push
sub
mov
push
xor
add
xchg
jmp
subb
mov
cmp
jbe
sub
lods
outsb
or
jne
cmp
sub
clc
out
sub
push
ficomps
or
sub
push
aas
fwait
ds
lahf
adc
pop
or
nop
lock
out
xchg
arpl
lods
sub
daa
cmp
xlat
and
xchg
les
cmc
and
testb
add
cmp
popa
jnp
push
push
loop
jne,pn
cmc
in
loope
mov
loop
push
mov
cmc
fdivs
pop
out
lods
cmp
rclb
or
outsl
test
or
test
mov
lods
adc
pop
or
arpl
stos
dec
adc
sahf
adc
mov
adc
imul
cld
pop
push
std
mov
xchg
sarb
mov
mov
jns
sub
shl
mov
fcompl
jns
jo
ficomps
pushf
mull
clc
pushf
in
fmul
mov
mov
or
ret
int3
testl
pop
mulps
and
dec
push
aam
mov
test
lock
aaa
addr16
loopne
shll
pop
inc
neg
adc
mov
loop
ret
push
sbb
adc
dec
dec
out
sub
mov
xor
dec
inc
mov
jmp
das
cmp
mov
fldcw
mov
fldcw
out
int3
insl
add
arpl
jne
mov
inc
in
rclb
adc
add
mov
adc
mov
icebp
notl
pushf
movsb
cmc
inc
shl
push
sbb
push
repz
pop
and
rol
cld
pusha
push
lcall
in
push
cmp
movsl
out
xchg
dec
sbbb
xorb
rclb
js
cmp
movsb
mov
jo
sub
aas
mov
cs
jnp
mov
jnp
add
jnp
jecxz
mov
fs
jge
loop
add
push
repz
cmp
pop
es
mov
cmpsl
lock
mov
inc
ss
jg
loopne
jno
cli
inc
dec
push
inc
js
jae
sahf
pop
or
fildl
adc
and
pop
mov
stc
mov
icebp
adc
jns
sub
lods
loopne
fld
pusha
sbb
fildl
pop
stos
pushf
movsl
pop
dec
or
lods
lret
lret
cmpsl
jg
or
lea
cmc
call
xchg
adc
jnp
dec
mov
jbe
xor
jge
jg
je
popf
push
mov
adc
xchg
sub
and
int3
lahf
lcall
mov
mov
cmpsb
js
ss
mov
dec
lret
jae
mov
xchg
fs
test
mov
sbb
xchg
cmc
add
jmp
cmc
lret
xor
inc
mov
sub
pop
int3
pop
pop
lcall
aam
jnp
and
add
imul
lahf
fbld
into
xchg
jmp
shrb
pop
inc
outsl
aam
nop
das
cmp
ljmp
ret
shrl
fdiv
sub
or
push
loope
jo
mov
dec
pop
jmp
jmp
outsb
mov
inc
test
aas
lahf
inc
push
adc
sub
sbb
movsb
cli
mov
in
add
jg
andl
or
aas
les
ja
lods
js
loop
sub
fstp
out
ficomps
sub
dec
loop
push
pop
pop
and
mov
sahf
shlb
out
xchg
leave
sub
inc
sub
shl
jecxz
out
push
das
mov
aaa
repz
mov
imul
ffree
and
lcall
adc
push
jns
call
in
mov
setb
inc
push
cmc
push
pop
nop
mov
sub
int3
inc
and
push
add
xor
dec
xorl
dec
push
xchg
lea
mov
ficoml
std
bound
sbb
and
mov
hlt
shrb
fisttpll
fucom
cmp
xchg
and
jle
mov
push
lds
rorb
idivb
int3
mov
cmpsl
daa
cmpsl
dec
and
mov
push
xchg
jp
cli
test
mov
test
inc
fldt
clc
divl
std
jns
push
adc
loopnew
out
loope
push
or
mov
adc
shlb
or
fsubp
mov
icebp
shrl
and
in
inc
test
out
call
inc
loop
pop
loop
dec
adcl
sub
xchg
mov
test
pop
add
add
hlt
mov
pushf
jo
aaa
or
and
jb
dec
mov
fidivs
xchg
repz
cmp
aam
rcrl
mov
cmc
loop
in
leave
push
in
lcall
jne
adc
lahf
pop
cmp
adc
pushf
scas
addb
lcall
inc
sub
ljmp
mov
xor
jl
lock
cmp
lea
dec
movsl
sbb
mov
sub
das
push
fidivrl
aam
mov
ficompl
fidivrl
leave
sbb
pop
mov
sbb
adc
ret
imul
dec
test
jecxz
leave
pop
in
push
lahf
mov
bound
cs
sbb
cmp
negl
sub
test
clc
mov
mov
cltd
das
mov
mov
pushf
xchg
aam
mov
leave
ja
lahf
repz
jno
ret
aaa
xchg
into
das
inc
inc
out
or
add
mov
sbb
imul
fnstenv
xor
ror
cmp
jo
stos
and
js
mov
loop
lret
shrl
jb
pop
dec
push
ret
in
cmc
shr
mov
and
jno
dec
mov
jg
std
push
xor
pop
fbld
and
popf
dec
jp
test
ss
xor
js
int3
cmpl
jmp
cmp
jno
ror
xor
mulb
cmp
jge
mov
push
ret
sub
stos
popf
push
loope
mov
and
mov
imul
and
cmc
jo
push
mov
imull
lods
loope
add
shlb
jle,pn
leave
mov
adc
addb
in
rorl
fcomps
add
icebp
js
sub
dec
lret
in
roll
mov
mov
jnp
addr16
adc
stos
jp
repz
and
jge
dec
enter
add
clc
xor
push
inc
ficoms
add
jb
popa
test
mov
pusha
xchg
jmp
rol
stos
xor
xor
pop
aam
adc
or
jl
daa
imul
mov
fs
bnd
mov
nop
repz
enter
xchg
shl
mov
out
into
push
pop
outsl
popf
dec
fwait
xchg
push
imulb
cmp
pop
out
mov
decl
add
scas
pop
mov
or
popf
divb
mov
stos
ja,pn
pushl
sub
sub
ja
add
lods
jae
mov
sbb
mov
pop
inc
sbb
jmp
icebp
outsb
in
xchg
cmp
push
rorb
lods
mov
sbb
pop
loope
or
jecxz
in
pop
das
stc
hlt
popa
cmp
scas
jne
shl
xor
adc
stc
mov
icebp
test
and
mov
cld
fcoms
push
idivl
loopne
jo
cs
mov
out
fwait
inc
fimuls
aaa
sub
popa
in
enter
popa
fwait
adc
push
pop
rcll
sbb
xor
mov
inc
and
jmp
in
bound
adcb
in
mov
inc
and
stos
mov
jge
add
add
outsb
add
mov
ret
jno
clc
push
xchg
outsl
fisttpll
cli
pushf
leave
leave
icebp
pop
lret
repz
jne
adc
xor
cmc
stos
or
xor
or
sub
outsb
daa
call
movb
mov
push
adc
pop
ja
jl
xchg
dec
mov
adc
or
sub
addr16
or
mov
jp
and
sbb
xor
ja
shlb
lods
test
sbb
ss
ret
lahf
inc
or
lahf
sahf
mov
shlb
int3
add
dec
mov
mov
push
cltd
pop
jle
xor
and
or
aaa
add
cmp
mov
aaa
jmp
cmp
inc
push
loope
adc
sbb
mul
sbbb
adc
imul
cli
jno
fistps
sbb
dec
pop
pop
lahf
daa
shlb
lcall
int3
xchg
sbb
xchg
inc
sub
pop
add
movsb
mov
lods
outsl
xchg
stc
pop
aaa
fs
mov
hlt
lea
inc
xchg
mov
pop
stos
fisubl
push
and
in
jnp
inc
lock
mov
dec
cmp
sbb
leave
xor
jb
or
ret
pop
add
hlt
mov
es
sarl
test
mov
out
lds
ret
xchg
lcall
lods
and
jnp
inc
push
xor
xchg
push
test
test
mov
jne
mov
sahf
add
push
aam
pop
roll
xchg
test
mov
shl
sub
mov
xor
cmp
aam
dec
shr
pushf
shll
adc
mov
xchg
cmpsl
daa
xlat
mov
dec
mov
lods
fstps
inc
pop
sub
xchg
sbb
xchg
xchg
mov
sarb
xchg
cmpsl
or
inc
scas
nop
mov
jmp
cmpsl
and
mov
adc
cmp
jae
fnstsw
add
sbb
popf
test
enter
out
push
outsl
mov
jge
loope
and
fs
cmpsl
mov
mov
inc
lahf
out
les
jbe
fbstp
fcoms
dec
inc
rcrl
pop
dec
jno
cmpsb
cltd
xchg
adc
outsb
lcall
cli
jg
mov
mov
mov
rcrl
push
xor
sbb
addr16
mov
add
mov
or
sub
cld
jno
inc
fs
dec
rclb
cmp
test
aaa
mov
es
dec
xchg
aam
lds
sub
pop
cli
imul
push
mov
test
jge
adc
jbe
jcxz
jle
dec
mov
push
add
cwtl
push
inc
mov
pop
cld
inc
aas
push
daa
mov
lret
iret
lret
nop
lea
push
out
cmp
in
inc
xlat
pop
pop
push
shlb
subl
orl
cmc
lods
jle
dec
loop
test
mov
std
dec
mov
sub
das
jae
mov
lcall
fwait
jbe
imul
outsb
mov
jno
aam
add
lcall
es
sbb
hlt
mov
arpl
pop
xchg
js
mov
seto
lock
mov
aam
adc
cltd
repz
sbb
jp
fwait
xchg
in
mov
jg
sub
movsb
xor
jb
inc
subl
xchg
push
pop
cmp
sub
fisubrs
cmp
lock
mov
push
sub
jno
movsb
scas
sub
fst
jmp
mov
push
sahf
and
push
or
mov
std
arpl
loop
data16
xchg
xchg
jg
js
in
inc
repnz
mov
mov
or
add
mov
xchg
enter
or
stos
shr
pop
lahf
add
in
adcb
jne
lods
push
movsb
loopne
and
inc
aaa
out
bound
mov
rep
add
jmp
insl
xchg
leave
or
push
mov
add
jge
fmulp
jecxz
cld
fldt
jmp
xor
pop
or
dec
push
rclb
iret
and
lcall
enter
mov
xor
pop
cmpsb
stos
sbb
pusha
cmc
or
iret
int
mov
add
add
repnz
out
push
stos
add
xor
jbe
stos
pushf
pop
les
shlb
jnp
movsb
in
rcrb
pusha
push
jmp
lds
fcompl
movsl
mov
sub
fwait
out
dec
inc
addr16
cmc
dec
jbe
adc
aad
subl
hlt
in
jl
imul
cmp
jnp
and
inc
icebp
push
clc
push
loop
xchg
outsb
sub
push
fwait
dec
je
sbb
inc
cmp
iret
adc
and
or
inc
pop
mov
adc
rorl
or
mov
push
push
adc
xchg
lret
cmp
xor
outsb
push
ja
mov
nop
cmc
sbb
sub
mov
mov
dec
sub
jmp
xor
pushf
jmp
jno
lds
popa
sub
int
xchg
mov
or
jmp
cmc
cmc
jo
je
push
shl
dec
arpl
cmpsb
xor
mov
cmpsl
sbb
push
xlat
out
lods
push
flds
sbb
sbb
enter
outsl
pop
pushf
gs
in
cmp
cmp
pop
pop
and
dec
movsl
jns
push
pusha
mov
xchg
or
xor
xchg
mov
out
int
jp
lock
es
cmc
aaa
push
mov
xor
sbb
jbe
subb
aam
xlat
xchg
jb
push
jecxz
xor
gs
imul
rorl
cmp
adc
xchg
inc
arpl
pop
lret
jp
push
hlt
jnp
mov
mov
idivl
cmp
cli
push
rcl
leave
push
ds
dec
mov
adc
mov
mov
aad
insl
fisttpl
cmp
arpl
sbb
loop
push
jmp
fsubr
movsl
pop
push
pxor
pop
xchg
pop
int
cmpsl
mov
cmp
dec
pop
clc
decl
insb
dec
insb
pusha
xor
push
adc
jle
pusha
mov
adc
push
jmp
push
jl
lret
sbb
mov
pusha
mov
or
repz
push
pop
mov
fldenv
scas
movsb
mov
add
sbb
push
push
or
sub
fs
sbb
addr16
sub
cmc
pop
imul
ret
gs
jo
sub
cmpsb
js
pushf
inc
stos
pop
std
and
popf
mov
sub
push
add
cmpsb
jp
jge
or
and
stos
popl
and
jae
das
call
dec
dec
repnz
and
xchg
jb
sbb
aaa
in
cwtl
dec
jp
stc
mov
gs
add
xor
movsl
add
lods
cwtl
lret
push
popa
add
jecxz
pop
fcoms
repz
xor
mov
iret
cmp
in
movsbl
out
js
insl
lds
xchg
xor
in
xchg
cmc
push
sbb
lret
sti
repz
shrb
pushl
cmp
xor
inc
inc
cmp
ss
pop
cwtl
pop
add
aas
dec
mov
dec
test
xchg
push
sahf
fsubrl
pandn
shll
add
sub
shlb
mov
int3
push
es
mov
aad
mov
or
lea
mov
pop
ljmp
sub
jecxz
cs
daa
mov
enter
test
dec
aam
in
inc
xor
mov
mov
cmp
pop
push
lds
push
or
test
lds
cmpsb
add
pop
mov
daa
std
in
mov
mov
insb
addl
sbb
mov
mov
insl
iret
js
mov
fs
push
mov
cmp
adc
arpl
fdivr
mov
push
mov
lods
pop
xlat
sbb
xor
out
xchg
push
insb
out
push
or
mov
and
lahf
push
or
daa
dec
mov
addr16
ss
or
lret
cmp
push
and
cmp
mov
or
mov
and
stos
jmp
and
pop
ret
daa
pop
das
add
mov
sub
inc
jnp
adc
cs
cmc
and
out
fisubrl
or
adc
daa
push
addr16
and
rcrl
outsb
adc
sub
xchg
add
cld
push
pop
repz
add
push
dec
jno
lods
adc
inc
sbb
sub
push
subl
rep
pop
xchg
int3
pop
pop
dec
add
aas
push
or
adc
jecxz
rolb
lret
mov
pop
jecxz
int
idivb
in
clc
js
pop
pop
aad
or
aam
xchg
incb
xchg
pop
retw
push
adc
loopne
cmp
jge
addr16
enter
out
ret
fwait
xor
out
mov
nop
jns
popf
cld
fimuls
mov
stc
xchg
aam
test
dec
test
sbb
push
pop
inc
out
pop
mov
aam
cmp
lret
mov
push
in
add
and
mov
fcmovnbe
adc
push
mov
inc
fwait
lahf
sub
fldl
insb
jo
adc
aad
push
mov
push
push
adc
sbb
xchg
jg
mov
mov
jp
imul
jnp
insb
mov
pop
jb
aaa
les
loopne,pn
popf
xchg
leave
adc
test
mov
outsb
sbb
movsl
and
mov
cmp
dec
inc
inc
adc
out
dec
bound
imul
jl
in
imul
gs
ret
cwtl
add
cmp
pop
fistl
outsb
icebp
out
jmp
and
adc
daa
out
pop
subl
cmp
pop
les
lea
inc
inc
mull
arpl
adcb
fs
es
cmp
fisttpl
and
add
jl
aaa
xor
xlat
add
xchg
add
pop
loop
mov
outsl
dec
jl
mov
mov
addr16
lahf
add
mov
mov
out
hlt
dec
pop
dec
rclb
xor
loope
mov
or
rcrb
push
rorl
mov
pop
jmp
movsb
inc
push
movsb
xchg
sbb
es
out
jle
jnp
pop
dec
mov
mov
jmp
jns
and
dec
push
sbb
and
push
jae
lock
lods
adc
mov
test
jns
and
jae
ds
pusha
cmpsl
mov
cmp
add
inc
mov
jmp
inc
cltd
dec
sub
mov
mov
pop
pushf
ljmp
push
outsl
lret
push
sub
pusha
dec
int
push
pop
jb
sub
adc
adc
dec
xor
sub
into
sarb
dec
mov
int3
fcmovne
push
sbb
jns
or
je
insl
icebp
stos
mov
fsin
jl
lods
inc
lret
jmp
pop
inc
push
stos
stos
mov
frstor
inc
call
dec
cmpsb
int
sahf
outsl
insb
jne
xor
and
adc
jne
movsl
addr16
fsubl
stos
int3
sub
ud0
cltd
out
test
outsb
aad
push
stc
mov
bound
imul
mov
fnstcw
dec
bound
lea
pop
push
sarl
mov
and
shlb
lock
cmp
lcall
stos
loopne
jecxz
jg
and
add
pop
emms
jbe,pt
scas
xor
mov
loope
pop
fistpll
ret
fcmove
lods
pop
fxch
mov
dec
push
adc
clc
addr16
cmpsl
pop
mov
sub
mov
xor
sbb
xor
shrb
iretw
in
je
jo
repnz
inc
jecxz
mov
mov
scas
and
fiadds
js
jne
cli
mov
mov
jo
lock
rcr
lds
inc
test
push
mov
les
sbb
sbb
aaa
mov
ss
xor
test
mov
idiv
dec
into
mov
xchg
sarb
stos
pop
sbb
aam
inc
mov
ret
js
pop
inc
mov
adc
sub
out
dec
mov
sub
mov
in
adc
jecxz
jno
jmp
lods
xorb
leave
jle
bound
mov
pop
mov
std
pop
popa
add
pop
push
imul
ret
sbb
xlat
add
cld
out
clc
inc
aam
pop
repz
or
rorl
jg
imul
and
and
js
adc
push
xor
pusha
gs
xchg
jnp
mov
mov
mov
dec
test
cmp
xor
loopw
fldenv
pop
xchg
pop
push
lcall
xchg
xchg
sub
push
mov
cmp
ljmp
sub
outsb
shlb
notb
push
fisubs
js
fldt
adc
jbe
adc
dec
cld
mov
pop
cmp
sub
mov
xchg
cli
pop
xchg
cld
mov
sti
xor
xor
xchg
pushf
push
mov
xor
mov
out
adc
xchg
push
sub
test
ja
cmp
lret
inc
lcall
ljmp
push
mov
cli
push
mov
lcall
and
loop
popa
out
test
int
adc
xchg
jle
in
sahf
mov
pop
or
popa
cmp
ss
xorb
int
mov
mov
bound
sub
and
sbb
xchg
insb
xchg
or
and
mov
mov
out
out
sub
mov
insb
xor
cs
jp
jb
mov
repz
aam
ficompl
lods
cmp
aas
insl
push
xchg
stos
repz
inc
ret
push
or
cmp
jge
lret
scas
xchg
fisubs
out
scas
lret
not
inc
xor
lcall
sub
clc
push
and
cmp
push
and
adcl
shll
mov
sbb
popf
cmpsb
ret
lea
sub
pop
ljmp
sub
fcompl
sbb
aaa
dec
in
ja
or
xchg
sbb
lods
jmp
scas
fadd
xor
fsub
ds
nop
dec
aam
sub
jno
push
mov
jnp
daa
xor
aam
push
mov
cmpl
sub
stos
rolb
loopne
decb
xchg
fucomi
fucomp
xchg
xor
jb
lods
sbb
jno
add
clc
pop
aaa
add
jbe
in
arpl
inc
push
in
test
mov
jnp
cltd
add
fs
and
filds
dec
push
inc
mov
lock
outsl
pop
in
cmpl
or
or
inc
int3
mov
push
sub
mov
adc
movsl
sti
insb
mov
int3
es
into
fists
xchg
sub
scas
sbb
inc
cmp
dec
sub
stc
cwtl
ja,pn
testl
int
add
adc
xchg
mov
fidivrs
sub
pop
stos
fs
into
fstps
in
and
sub
mov
insl
lods
pop
jae
cltd
out
jmp
insb
push
and
dec
jne
push
pop
dec
fwait
push
mov
add
jecxz
pop
mov
ja
xchg
dec
ja
divb
leave
fwait
xor
push
mul
xchg
pop
jb
fwait
into
out
mov
addr16
xor
movsl
or
add
loopnew
cmc
sbb
xchg
mov
xchg
out
ljmp
jle
pop
dec
pop
xchg
outsb
push
xchg
add
inc
lret
push
xchg
sub
rdtsc
inc
and
pop
movsb
nop
xchg
js
lea
pop
inc
xchg
dec
xchg
pop
sub
or
sub
sbb
and
int3
mov
orb
adc
adc
into
ret
pop
dec
nop
or
sbb
pusha
jle
xchg
addr16
arpl
push
jae
cmpsl
mov
iret
dec
pop
ss
dec
sub
int3
jle
cltd
inc
out
iret
xor
int3
mov
divb
inc
mov
pop
mov
out
mov
sub
shr
mov
and
and
shl
pop
pop
pop
xor
outsl
loopne
fldcw
sbb
out
mov
jo
xor
imul
mulb
and
cmp
loop
inc
adc
and
mov
cmp
aaa
inc
rorl
shrb
ss
jbe
js
push
lret
pop
pop
xchg
in
sbb
inc
jae
lret
out
rolb
clc
jmp
mov
mov
or
pusha
dec
movsb
in
pop
pop
cmp
xchg
cmpsb
xor
mov
ss
lods
cmpsb
lock
mov
mov
rorb
add
adc
call
iret
test
push
fpatan
mov
std
pop
lcall
arpl
mov
jno
or
repnz
outsl
inc
test
cmpsl
testb
mov
xchg
mov
sbb
fcmovnbe
outsl
push
cmp
cmp
psubsw
loop
es
and
xor
lods
inc
dec
push
mov
push
jp
les
shl
rolb
lret
and
mov
call
dec
jg
push
aad
test
rorb
andl
movsl
cmp
inc
popf
jne
fdivl
pop
mov
inc
mov
lds
shlb
mov
or
scas
mov
fwait
adc
pop
jns
test
pop
sub
loop
repz
pop
test
pop
lods
call
dec
xor
out
cmp
push
xor
pop
xor
pop
and
push
daa
jmp
out
add
push
mov
call
dec
jbe
sub
xchg
fcomip
leave
lods
sbb
repz
shrl
test
pushf
loop
pop
jecxz
jge
sahf
or
xor
xlat
lret
xchg
jge
or
add
scas
sub
push
adc
xchg
icebp
into
call
dec
shlb
cwtl
jnp
mov
mov
adc
mov
aam
clc
xchg
mov
xchg
pop
mov
pop
call
adc
je
push
loop
adc
push
mov
fldt
sbb
push
fcmovne
cs
adc
ret
popf
enter
pop
mov
mov
inc
mov
xor
inc
sbb
in
cwtl
leave
xrelease
sub
inc
dec
mov
cltd
test
nop
add
ficomps
push
push
pop
mov
testl
xorl
repnz
mov
mov
cmp
es
lahf
xchg
cmp
icebp
imul
cmp
jo
inc
movb
sub
push
mov
ds
mul
pop
dec
lret
sub
mov
mov
stos
jp
scas
lcall
jge
pop
imul
sbb
ret
arpl
test
into
pop
fcmovu
out
jne
jno
jl
pop
scas
testl
push
addr16
in
aas
in
scas
jmp
ljmp
icebp
cmp
jo
jle
les
iret
stc
inc
popf
and
fmuls
in
mov
xor
dec
jge
xlat
push
mov
jns
insl
push
jae
out
movsl
adc
jmp
je
lea
jp
rolb
test
xchg
shlb
fdivp
aad
popf
out
jp
out
dec
sub
outsb
outsl
jo
shll
sub
jge
ror
push
push
mov
stc
shll
push
add
sub
div
pop
sbb
mov
sub
popa
leave
jo
mov
adc
leave
fcoms
movsb
sti
cli
xor
jle
mov
push
add
xor
cmpl
lods
push
mov
iret
mov
xor
xor
call
lock
pop
cmp
fildl
inc
cmpsl
inc
ficompl
pop
pop
arpl
add
push
nop
and
aaa
or
int3
cmp
push
out
xchg
mul
xor
mov
filds
xlat
test
repz
test
mov
shll
jl
addb
call
pop
jmp
and
outsb
mov
sub
pop
cld
cmp
mov
pop
mov
adc
aam
cmp
or
add
add
pop
movsb
pop
cmp
sbbb
test
pusha
ljmp
lods
test
repz
or
and
xchg
mov
inc
iret
adc
mov
sti
fldcw
pop
or
mov
ljmp
xchg
ret
es
out
aad
shll
or
loope
or
lret
jno
ds
xor
mov
xchg
ret
fildll
or
jne
and
mov
repz
push
dec
dec
scas
cmc
sbb
dec
leave
xchg
add
int
repz
insl
repnz
or
mov
pusha
lock
in
inc
mov
jle
add
cld
add
pop
int3
pop
cmovae
fisttps
add
add
test
das
popa
cwtl
rcrl
jl
ret
mov
or
adc
adc
neg
pop
sub
jb
add
inc
mov
pop
sub
mov
jp
sbb
cmp
pop
iret
dec
xlat
dec
popa
push
inc
negl
out
sub
iret
adc
fmull
sub
mov
ja
dec
pusha
add
xchg
scas
nop
stos
ret
pusha
jmp
pushf
and
call
stos
jmp
scas
stc
bound
sahf
push
jp
xchg
and
pop
or
jnp
push
xor
repnz
daa
dec
mov
push
js
jl
bound
sbb
xchg
inc
xor
pusha
jmp
mov
or
mov
lods
pop
test
jb
and
jge
xor
jnp
int
ret
psubsw
adc
ljmp
xlat
push
inc
test
je
pusha
jmp
test
push
cmpsl
mov
mov
loop
push
cld
sub
sbb
cmpsb
sar
pop
pop
loop
fsubr
repnz
jns
cmpw
ss
outsl
out
daa
int
push
mov
pusha
mov
and
sub
add
aas
loop
dec
ret
push
rorb
sbb
orb
in
clc
inc
jl
jmp
lods
sub
imul
jmp
test
and
lret
inc
sub
fdivl
mov
sbb
cmp
pop
daa
shlb
roll
ret
addr16
cmp
test
jns
fcomi
fnstcw
add
inc
pushf
in
shll
repz
icebp
sub
pop
in
cltd
or
cli
cmp
inc
gs
and
add
test
mov
xor
gs
in
outsb
xor
add
cmp
fisttpl
enter
div
pop
mov
xor
std
or
scas
jp
out
inc
lahf
aam
aam
sbb
cltd
test
and
sub
xor
inc
test
or
push
xor
fldcw
pop
jmp
mov
lret
das
ss
sub
xchg
jl
and
orw
stc
lea
es
jmp
aaa
inc
xchg
jge
lods
in
lcall
mov
xchg
mov
push
cs
lcall
push
cmpsl
pop
outsl
push
sti
xor
xor
mov
push
ss
and
lods
xchg
dec
cmpb
push
jns
in
jne
into
dec
add
cmp
push
pop
inc
jg
mov
int
or
mov
xor
sarl
dec
jp
loopne
add
sbb
fsubrl
shl
fisubl
outsb
imul
fimull
add
inc
clc
daa
adc
jo
mov
xor
lahf
lahf
push
push
xchg
inc
and
xchg
jo
mov
rcrl
sub
out
sbb
inc
xchg
mov
adc
rcr
dec
jb
sbbb
inc
loopne
pop
xchg
out
out
push
test
adc
andl
decb
xor
ds
push
mov
xchg
push
push
or
lods
jg
jle
int
dec
shl
mov
adc
filds
imul
fwait
jne
adc
sub
pop
add
jne
arpl
push
jne
loopne
jmp
push
negl
pop
shl
test
cmp
xchg
adc
push
loopne
xor
mov
jne
scas
bound
mov
adc
sbb
cmpsl
cmpsl
add
js
test
mov
ljmp
cmp
popa
jbe
inc
in
push
cmc
xor
xchg
and
ret
pop
sbb
lods
subl
lock
dec
sbb
xchg
jb
jecxz
lret
inc
or
push
push
rcrl
cli
lock
xlat
and
dec
mov
or
bound
pop
mov
loopne
cmp
add
sbb
push
pop
outsb
outsl
mov
lds
pushf
enter
adc
aas
repz
mov
inc
lret
insb
hlt
push
fdivs
dec
jb
jo
fsub
repz
pop
inc
mov
push
mov
sbb
adc
aad
and
jno
call
xor
lcall
adc
xor
pop
pop
mov
mov
test
mov
xchg
jle
mov
aam
xchg
fnsave
pop
or
push
scas
jae
and
jecxz
xor
and
pushf
cli
test
and
cmp
loope
push
ljmp
cli
int3
cmp
add
mulb
cmpsl
sbb
outsb
call
jmp
pop
mov
fucomi
add
lods
js
xor
dec
lret
lods
cmpsl
loope
fisubrl
adc
sub
mov
mov
mov
sbb
and
or
sbb
xchg
pop
push
in
rcrl
xlat
cld
and
push
push
stc
test
out
xchg
das
adc
sbb
mov
das
jbe
imul
cmp
movsl
lods
lcall
mov
push
add
xchg
xchg
lret
mov
sbb
xor
or
ret
dec
stos
xor
push
adc
add
addl
lea
pop
nop
inc
add
rorl
sub
cmpsl
sahf
pop
jno
scas
mov
or
into
jp
dec
add
out
mov
cmp
lods
jmp
push
lock
xchg
mov
cwtl
cmpsb
mov
mov
sbb
mov
scas
sub
xchg
das
icebp
sub
es
fldenv
pop
loope
mov
jle
mov
cmp
test
mov
and
inc
sub
gs
mov
fwait
xchg
dec
lds
in
scas
addb
lea
jne
dec
add
mov
jbe
pop
fisttps
rolb
test
sbb
jns
add
icebp
pop
leave
enter
iret
and
fcmovnb
sub
pop
add
inc
out
pop
icebp
and
xor
push
std
lea
lcall
or
fmull
lock
jo
mov
xor
lods
adc
mov
ret
daa
cwtl
mov
or
js
dec
xchg
xchg
mov
push
push
sub
dec
cmp
repz
sub
pop
ret
rorb
rol
or
mov
neg
sbbl
in
call
shrl
push
sti
pop
mov
mov
cmp
shlb
xorb
out
mov
mov
adc
dec
push
lods
aas
adc
les
in
popa
sbb
aad
inc
pop
mov
in
ss
stc
mov
pop
roll
push
push
lret
mov
mov
and
in
or
dec
jnp
mov
shr
jo
or
mov
je
in
and
xchg
pop
jne
xchg
mov
mov
mov
xchg
int
pop
xchg
inc
in
push
mov
adc
ljmp
sbb
loop
cli
pop
adc
push
test
pop
pushf
andb
movl
jb
aas
inc
aaa
rcr
repz
ja
in
or
and
pop
mov
or
cmp
mov
in
sub
cmp
cmp
ret
inc
clc
int3
in
out
mov
loop
fwait
xchg
fld
jle
mov
mov
sbb
mov
in
ja
jae
incb
pop
shrb
pop
sbb
inc
xor
cmp
ljmp
mov
jg
dec
repz
loop
jge
sub
hlt
scas
push
fcomp
out
cwtl
mov
sub
subb
jecxz
or
outsl
lds
pop
dec
push
cltd
sbb
xor
sub
adc
xor
fucom
xor
pop
fildl
inc
mov
sahf
mov
mov
sbb
add
sbb
dec
repnz
and
stos
sbb
pop
jl
jp
outsb
xchg
fcmovne
hlt
adc
xchg
jbe
test
xchg
es
and
mov
cli
gs
push
rol
push
je
or
push
mov
cmpb
mov
out
dec
xlat
mov
xchg
push
cmp
mov
cli
stc
stos
mov
adc
aam
movsb
lahf
xchg
jo
enter
mov
ja
sti
jl
dec
int3
rorb
stos
pushf
mov
cmp
jae,pn
mov
and
cmpsb
es
sub
cmp
mov
fisttps
add
inc
mov
jmp
mov
daa
and
js
fadds
outsl
movb
fmull
cmpsl
xor
xchg
std
out
jge
xlat
xchg
push
push
test
xchg
stc
dec
mov
aas
pop
pop
pop
add
sub
inc
mov
cmc
xchg
aaa
insb
push
shll
fstpl
fcomps
insb
test
xchg
and
dec
xchg
ljmp
int
aam
or
insl
lcall
cmp
cmp
and
mov
ss
push
es
js
shl
faddp
push
imul
lcall
add
pop
out
sub
jae
fldenv
push
jp,pt
and
sahf
mov
sbb
mov
lock
sbb
mov
loopne
pop
aaa
cld
adc
mov
dec
xchg
xchg
xchg
sub
cmp
inc
rcr
dec
or
adc
lock
xor
jbe
jo
sbb
ror
cwtl
adc
add
imulb
aad
pop
fwait
dec
pusha
xchg
adc
jge
in
les
add
lahf
pop
adc
jg
dec
sahf
push
or
inc
arpl
ret
ss
addb
add
pop
imul
jl
lcall
mov
jns
pop
add
ja
sbb
push
outsl
xchg
xchg
nop
or
mov
rol
mov
jg
fwait
inc
ss
nop
cmpsb
rcrl
orb
mov
ds
in
out
stc
cmp
jbe
mov
dec
in
mov
inc
leave
push
in
dec
in
loop
cld
nop
dec
sub
jg
and
lret
pop
mov
inc
hlt
mov
sbb
sahf
push
mov
mov
xchg
and
stos
out
push
adc
inc
xchg
mov
adc
ret
push
fistps
inc
sub
xchg
sarl
loopne
add
fisttps
xchg
adc
decb
and
push
lcall
xor
cwtl
ret
adc
out
fidivs
push
dec
sbbb
pop
push
test
cld
adc
cld
fnsave
mov
mov
adc
sub
push
push
and
ret
xchg
sbb
lea
or
cmpsl
shlb
clc
std
ror
test
jno
imul
std
xchg
imul
push
insl
rcrl
les
mov
mov
shll
lss
stos
add
jne
das
and
gs
push
add
mov
jecxz
rorl
inc
stos
push
fstpl
add
loopne
scas
push
in
add
xor
roll
lock
or
adc
push
mov
mov
jbe
movsl
iret
mov
cmpsb
sahf
adc
adc
or
sbb
cwtl
pop
pop
leave
xor
sub
test
dec
arpl
cmpsb
mov
test
sbb
mov
push
mov
out
addr16
negb
jbe
pop
in
lss
pop
mov
repz
rol
mov
call
inc
add
jns
loop
insb
addr16
das
add
jo
cmp
jmp
pop
leave
pop
dec
fcomp
dec
or
mov
out
in
add
icebp
popf
jecxz
jp
xchg
ret
cmpsl
sub
jl
cmp
pusha
mov
sub
and
mov
shlb
outsl
push
dec
mov
push
xor
imul
lock
sbb
cmp
mov
jle
or
ds
xorb
bnd
popa
inc
lret
mov
adc
aas
icebp
repnz
std
outsb
lret
jno
mov
xchg
dec
jg
adc
shrl
les
pcmpgtd
das
xchg
xchg
cmp
dec
dec
mov
push
xor
std
xchg
jp
mov
dec
mov
lcall
cmp
pop
mov
out
mov
rcrl
divl
shll
xor
lods
and
mov
xchg
iret
dec
imull
xlat
jp
in
and
or
jmp
mov
sbb
jmp
mov
rcrb
hlt
std
out
clc
and
ret
int3
xchg
push
pop
mov
movb
inc
fistl
xchg
imul
in
sub
or
adc
in
inc
pop
in
push
aam
sarb
xor
insl
push
lret
mov
das
bound
lahf
lcall
xchg
loope
ret
clc
js
sub
inc
cmp
mov
ds
in
mov
call
dec
sub
insl
xorl
in
es
jne
sub
mov
xlat
jp
xchg
imul
sbb
sub
push
lcall
cmc
cmp
imul
iret
fsubl
fisttpll
push
fildll
popf
add
jmp
xlat
xchg
outsb
enter
xchg
ds
cmp
xchg
mov
fs
gs
pop
shrl
cmpl
jle
sbb
mov
aam
in
mov
xchg
push
pop
inc
cmpsl
nop
dec
int3
rorb
int
and
cmp
dec
mov
test
stos
gs
xchg
repnz
lods
dec
in
cmp
add
repz
lcall
mov
push
add
cmp
mov
push
push
ret
out
adc
lret
adc
jmp
and
out
xchg
sub
insl
jae
mov
fnstenv
mov
mov
repnz
lcall
vcmppd
and
inc
sbb
sbb
cltd
jge
fdiv
movsb
cwtl
and
fildll
leave
nop
mov
cltd
popa
sbbb
sub
inc
out
pop
das
xchg
testl
pusha
pop
shrl
lcall
rorb
push
sahf
aam
pop
sbb
mov
addr16
es
pop
xor
jecxz
sbb
mov
out
aaa
bound
mov
push
sbb
push
push
xchg
subl
pop
xchg
test
jne
aad
repz
data16
call
pop
flds
fsubr
mov
test
nop
xor
push
and
cli
or
add
xlat
sub
or
pushw
or
xor
jl
clc
jge
xlat
cmp
or
or
inc
movsl
rol
xor
pushf
in
push
mov
ret
hlt
inc
xor
mov
xor
xor
adc
rclb
mov
mov
cmpsb
jl
ss
and
aad
popf
aas
sub
xchg
push
imul
insl
fsubrl
cld
js
imul
stos
testb
aaa
sbb
mov
arpl
popf
push
in
push
dec
mov
in
test
mov
push
mov
pop
jb
std
push
movsb
loopne
pop
dec
cmp
mov
aad
fdivs
aad
mov
pop
sbb
and
fmulp
pushf
jle
imul
or
push
sub
loop
lea
push
dec
xchg
xor
cmpsl
xor
add
push
pusha
cmp
icebp
mov
sub
pop
je
pop
fmuls
mov
add
push
mov
jo
hlt
sub
xchg
and
mov
pop
arpl
shr
mov
inc
cwtl
push
sti
push
jnp
mov
out
movsb
and
lcall
es
push
push
inc
data16
lock
xor
fists
ljmp
mov
mov
in
cmp
loop
sub
xchg
xchg
inc
add
mov
inc
lahf
aam
sbb
pop
jp
mov
js
pop
mov
in
sub
xchg
mov
sahf
insl
mov
and
sub
repnz
pop
out
add
aad
jl
js,pt
mov
cmp
sbbl
out
pop
jno
jmp
jb
shr
lahf
mov
and
push
ss
fstpt
dec
std
subl
fwait
mov
and
cmpsl
xor
push
repnz
loope
stc
xchg
cltd
mov
rcl
loope
imul
mov
mov
jge
fistpl
jnp
adc
mov
lock
push
mov
push
cmp
and
sub
fistpll
pop
aas
sub
push
adc
push
outsl
pop
shll
fstps
sbb
lods
aam
hlt
pop
xchg
lods
ds
ffreep
ret
mov
in
push
fsubp
jge
and
insl
ret
sub
inc
pop
imul
push
pop
fisubl
sbb
imul
sahf
jecxz
sub
movsb
mov
adc
sub
sbb
std
dec
push
rcl
lock
jb
push
pop
and
mov
std
and
mov
dec
mov
inc
rdmsr
fwait
jne
adc
dec
and
cmpb
xchg
or
mov
dec
adc
mov
testl
xor
jp
aad
stos
pop
hlt
lahf
pop
adc
mov
jb
push
mov
xchg
push
andl
lret
rorb
fisubrl
pushf
xchg
ds
fnstenv
movsb
test
clc
pop
jmp
fdiv
pop
call
out
jae
mov
mov
push
xor
call
mov
push
cmp
push
push
adc
dec
fstp
loope
mov
test
push
pop
mov
jne
daa
shlb
lret
dec
mov
sub
jmp
push
or
sbb
mov
mov
scas
cld
xor
lret
cmp
mov
outsb
pop
or
adc
xchg
jne
call
or
jl
lds
adc
sbbl
or
mov
cmp
int
or
stc
or
push
nop
cmp
pop
bound
cmp
push
arpl
out
xchg
inc
lahf
and
scas
in
xchg
movsb
es
pop
push
fwait
pxor
add
mov
out
push
je
ss
leave
pop
and
dec
insl
daa
push
inc
or
fildl
arpl
jg
xor
jp
cld
push
pop
aaa
les
xor
add
imul
fwait
adc
dec
outsb
in
lock
into
or
out
pop
mov
jp
int
lcall
je
mov
popf
and
mov
add
xchg
inc
pop
pop
mov
xchg
lods
inc
scas
and
in
jge
lahf
adc
pusha
aaa
std
pop
mov
cmp
in
stos
jo
jns
pop
add
es
fs
jge
pusha
icebp
pop
loope
test
push
lahf
xor
mov
test
mov
pop
mov
jnp
notl
aam
push
jmp
jb
inc
je
cmp
push
aaa
pop
fildl
movsl
mov
inc
push
in
cltd
pop
aaa
fs
sub
imul
jno
pop
mov
pop
test
inc
ret
ljmp
xchg
sub
js
and
dec
pop
inc
ret
fwait
xor
pop
mov
rolb
xlat
mov
loope
and
int3
aaa
shlb
adc
scas
mov
or
dec
fsub
mov
jecxz
outsb
cmp
and
cmpsl
xor
cmp
loope
filds
adc
cmpl
lahf
add
push
sub
pusha
sbb
add
mov
repnz
push
adcl
shll
inc
jbe
sti
fdivrs
xchg
adc
mov
mov
les
jle
inc
into
xlat
xor
mov
add
mov
stc
fisttpl
es
jge
mov
push
add
jge
mov
dec
out
and
mov
inc
gs
add
mov
lds
pop
andl
dec
push
loop
pusha
mov
and
jae
push
in
sub
inc
or
dec
pop
loope
ret
lret
sahf
loop
mov
rcrl
fistpll
ja
xchg
cld
scas
mov
pop
int
mov
ret
cmp
je
add
out
mov
add
dec
es
insb
add
cmp
inc
cmp
xor
jge
mov
jns
mov
ds
popl
shlb
mov
out
xchg
test
pop
dec
out
mov
sahf
in
jmp
push
andb
pusha
movsb
mov
sahf
mov
mov
movsb
insl
out
cmpsb
aad
adc
repnz
or
or
aam
mov
jb
adc
jl
cmp
rclb
loope
mov
mov
nop
inc
sub
js
or
pop
mov
cmp
adc
test
xchg
and
pop
movsb
and
ss
fistpll
test
push
dec
jl
iret
daa
in
mov
push
aam
mov
or
pushf
cmp
sub
adc
push
sub
push
push
cmp
movsb
xorb
and
jo
popf
out
mov
aaa
inc
cmp
mov
cs
sar
lods
out
dec
sbb
data16
adc
xor
rol
movsl
rcrl
mov
gs
sbb
mov
sub
fsubs
nop
rcll
push
popf
push
adc
sbb
insb
les
pop
repz
insb
add
push
into
mov
add
sub
gs
xchg
outsl
fwait
dec
notl
pusha
mov
or
cs
pop
into
pop
sahf
inc
lcall
sbb
jae
cltd
in
jae
inc
mov
orl
cli
mov
lret
dec
sbb
xlat
cmp
adc
pop
add
sti
xchg
das
test
push
rcrl
mov
mov
in
jno
adc
test
cld
loopne
fwait
dec
mov
cmpl
sub
push
loopne
notb
mov
repz
dec
lock
xor
imul
fdivl
sub
xor
pop
mov
xchg
out
jno
cwtl
int
fdivl
inc
add
pop
rcrl
mov
push
imul
push
test
orb
imul
sbb
aaa
insb
dec
jle
ret
and
xchg
ds
mov
jmp
and
cmpsb
mov
or
xchg
stos
push
adc
sub
mov
mov
in
pop
iret
inc
out
inc
xor
adc
adc
lds
dec
ja
mov
es
pop
push
imul
xor
push
pop
or
or
jge
xchg
divb
push
push
lods
in
cmp
lahf
pop
stos
pop
insb
and
mov
or
jp
shl
mov
mov
aam
or
lret
das
jle
lds
movsb
fdivrs
cmp
stos
bnd
aas
and
cmp
and
adc
cmp
push
lea
je
gs
cltd
push
and
jl
arpl
pop
pop
cmp
xor
data16
andl
aam
insl
xchg
pop
filds
inc
arpl
andb
xchg
lds
xor
arpl
call
mov
mov
scas
loop
and
and
in
xchg
gs
rcl
out
pop
imul
xchg
jg
cmpsl
mov
push
shlb
sbb
andb
mov
push
das
in
push
pop
in
mov
xor
inc
jbe
pushf
xor
and
mov
ss
sbb
xchg
mov
pop
xchg
inc
lds
push
gs
xchg
js
xchg
loop
mov
out
mov
loopne
fwait
xchg
pop
lea
sub
ss
mov
dec
jmp
rolb
stc
in
xlat
jge
and
aad
in
fiaddl
jno
rorl
xchg
in
ds
sarl
dec
lret
or
cmp
inc
lds
std
cmp
adc
adc
loopne
mov
mov
mov
ljmp
clc
or
icebp
dec
pop
mov
hlt
ret
dec
les
sub
clc
popa
lods
inc
mov
loope
out
push
jne
mov
fistpll
iret
push
xchg
in
jp
inc
not
xchg
xor
fnstsw
test
add
adc
adc
xchg
add
movsl
push
addr16
je
sbb
lret
xlat
cmp
jg
add
fcompl
loope
int3
and
aaa
repz
mov
cmpsl
xor
and
mov
call
and
cmp
sahf
dec
xchg
push
sbb
xlat
cmp
loope
mov
jg
mov
xchg
adc
jle
sub
pusha
xor
inc
pop
stc
jbe
adc
adc
pusha
mov
mov
jb
ss
fbld
push
cmpsl
mov
js
ret
div
mov
movsl
call
push
out
xchg
out
lret
pop
jb
jnp
nop
push
in
mov
scas
data16
imulb
stc
jns
fisubrl
adc
int
pop
cmp
jmp
jne
mov
jne
cmp
inc
cmc
aas
dec
out
in
sub
sub
lret
pop
outsl
loop
out
jb
std
add
ret
pop
xor
stc
inc
sarl
in
cmc
rcll
jnp
lods
and
xchg
dec
inc
push
out
xchg
and
mov
add
xor
out
lret
dec
xchg
xchg
insl
cltd
mov
in
sub
addr16
xor
xchg
les
adc
inc
mov
mov
dec
std
mov
jno
mov
fnstenv
in
mov
push
xchg
movsb
out
mov
sub
scas
rclb
mov
or
push
jo
inc
sbb
stos
push
mov
inc
cld
lcall
mov
mov
shrl
pop
fs
sbb
in
xor
pop
add
aam
test
mov
mov
addl
push
fmull
adc
fstps
pop
aaa
jecxz
out
inc
xchg
lods
lea
sar
sbb
shlb
mov
scas
sbb
lock
dec
xor
shrl
inc
cltd
push
mov
and
pop
cmp
std
mov
pop
cmp
jg
movb
or
mov
in
or
or
adc
jl
clc
imul
ds
popa
cmpsb
call
mov
mov
sti
shrl
mov
je
adc
mov
mov
push
sbb
dec
icebp
xor
sub
adc
pop
mov
xchg
fdivl
inc
mov
das
aad
out
lds
sbb
repnz
pop
arpl
cmp
sbb
imul
scas
mov
repnz
xor
jnp
dec
loope
cld
xchg
lods
add
xchg
adc
iret
je
xchg
outsl
shr
adc
dec
inc
movsb
xor
push
sbb
dec
push
les
testb
test
push
xor
and
mov
ljmp
gs
mov
adc
pop
cld
xchg
push
outsl
stos
js
lods
add
or
hlt
inc
aaa
push
xor
and
ret
cmc
jne
mov
into
mov
test
dec
dec
lret
jg
xchg
cld
pop
mov
out
xor
jl
loope,pn
push
jle
out
cli
push
sub
cwtl
xor
jge
push
pop
aam
int3
xchg
imul
xchg
or
scas
nop
adc
das
clc
movsb
scas
mov
aas
pop
stos
dec
sar
dec
pusha
xchg
jnp
jnp
mov
rolb
aaa
push
sbb
sub
jge
fucomip
std
jo
jmp
mov
shlb
ljmp
xor
mov
cmpb
cmp
mov
loop
lret
addr16
call
into
adc
sti
or
xchg
xor
mov
sub
push
stc
out
mulb
insl
or
inc
ret
add
pop
cmp
cmpsl
pop
loop
mov
sbb
aad
mov
or
push
dec
jbe
cmp
cld
in
pop
cmp
jecxz
and
dec
pusha
inc
xchg
xchg
repz
fists
ficoms
shrb
std
xor
push
and
dec
popa
xchg
sub
stc
sbb
mov
inc
pushf
aas
jno
mov
call
fstpl
cmp
clc
clc
lock
mov
xor
jo
in
xchg
ficomps
pop
lcall
push
loopne
mov
testb
hlt
xchg
scas
sti
mov
mov
jne
enter
les
dec
dec
mov
xor
lea
and
push
gs
repz
lds
jns
and
xchg
jno
ljmp
out
adc
outsb
pop
fisttps
shlb
lods
fwait
and
push
mov
dec
fadds
push
jns
cmp
push
pop
sub
dec
add
inc
ds
push
mov
out
dec
cmp
inc
adc
jmp
cltd
jbe
mov
sbbl
in
add
jbe
nop
jge
stc
pop
sub
lret
les
sub
movsb
fs
mov
mov
shll
mov
fmul
and
xchg
push
add
jmp
pop
addl
jmp
notb
push
inc
jbe
enter
adc
mov
push
sarb
inc
scas
mov
dec
or
mov
add
mov
push
mov
out
push
mov
xchg
sub
dec
push
xchg
and
xor
jb
shlb
pop
xor
scas
gs
pop
daa
mov
out
std
push
fisttps
rorb
sub
mov
inc
dec
or
scas
cmp
dec
fisubs
sbb
inc
lock
dec
jecxz
cmc
sub
hlt
pop
jnp
fwait
cmp
cmp
mov
sub
cltd
jmp
addr16
adc
pop
fstpt
push
out
notb
mov
jmp
push
jmp
mov
mull
leave
aad
jg
xor
inc
mov
jmp
in
xorl
outsb
or
outsb
in
lods
inc
add
enter
out
cmp
cmp
mov
loop
xchg
mov
pop
lods
dec
and
pop
fcompp
xchg
insb
hlt
jo
adc
push
sbb
mov
jbe
roll
cmp
popf
std
mov
dec
mov
fsubrs
jbe
test
adc
shrb
mov
imul
jmp
popl
push
movd
jmp
popf
inc
daa
sub
push
inc
popf
inc
ret
jne
and
mov
xor
dec
mov
inc
mov
xchg
mov
fisubrl
or
jbe
mov
cmp
sbbl
and
js
cmp
sbb
cwtl
cld
fmul
arpl
arpl
cmc
cltd
stos
jg
push
push
inc
mov
stos
push
xor
in
mov
sbb
repz
iret
jg
inc
inc
xchg
push
jo
jmp
arpl
into
scas
mov
jo
jb
into
outsl
std
pop
xchg
mov
int3
leave
cmpl
imul
inc
int
or
mov
cmp
stos
jg
nop
xchg
pushf
lods
push
cmp
pop
xor
fimuls
popa
dec
les
mov
and
mov
sub
mov
insb
rorb
xchg
call
jnp
jmp
adc
jle
xor
loopne
stc
jb
push
insl
insl
mov
jle
pop
popl
cli
sub
pushf
jle
push
mov
inc
cmp
js
dec
jp
pushf
cmp
mov
ret
fincstp
mov
icebp
mov
popa
sar
pop
mov
out
add
divps
jecxz
push
scas
rolb
inc
inc
clc
sub
daa
push
jg
and
ret
pop
mov
push
mov
and
daa
pop
lahf
and
fldlg2
jmp
daa
mov
push
fdivrs
or
or
jp
xor
mov
or
sarb
xor
out
sub
out
je
out
push
incb
stc
or
std
and
jae
or
addr16
ficoms
into
in
cld
cmpsl
fidivrl
scas
jg
mov
mov
push
mov
xchg
lock
pop
int
xor
mov
outsl
fld
shll
stc
inc
cmp
ja
pushl
sarb
dec
sbb
std
mov
fldt
push
scas
push
lcall
add
sub
sub
enter
inc
std
cmpsl
dec
push
dec
shlb
adcb
mov
inc
mov
je
sbb
adc
lret
repnz
insl
negb
lret
mov
out
push
dec
jmp
ret
popf
or
push
inc
leave
vaddsubps
sbb
repz
rorl
aas
sub
add
push
nop
or
lock
mov
sub
hlt
xchg
sbb
xchg
fadds
aas
push
mov
jnp
mov
stc
fwait
arpl
out
popa
fwait
mov
sub
jmp
jno
cmp
mov
sub
fldenv
dec
cmp
loope
std
pop
test
xor
pusha
jmp
fsub
jg
aam
mov
popf
lahf
push
loop
dec
pop
fcomi
push
iret
loopne
adc
mov
shll
ret
mov
cmp
xchg
test
inc
js
push
dec
mov
bound
cld
cmp
add
or
inc
fsubrs
fidivrs
sbb
cmpsl
adc
and
cmp
xchg
hlt
adc
sbb
jno
clc
scas
into
pop
or
rcrb
mov
jecxz
pop
mov
rcl
aad
clc
cmp
sbb
dec
lods
or
and
mov
sbb
cmp
jmp
imul
hlt
push
in
nop
in
mov
mov
lds
adc
jne
mov
jge
xor
add
push
push
push
jp
mov
pop
xor
int3
out
sub
adc
sub
inc
test
imul
jmp
ljmp
mov
test
inc
adcb
push
xchg
or
mov
push
sub
mov
xchg
jmp
in
add
xchg
dec
popa
pop
cmp
cmp
xchg
adc
stos
loope
xchg
je
shlb
mov
cmp
xor
imul
dec
lahf
inc
inc
ret
lds
pop
ss
mov
into
repnz
sbb
outsb
dec
sub
jbe
dec
enter
cmp
xor
in
mov
or
std
pop
dec
loopne
push
decl
and
xor
fldt
xor
hlt
and
nop
push
paddusb
lea
fdivs
roll
outsb
pop
lret
jmp
frstor
mov
pop
mov
dec
pop
mov
mov
adc
jg
or
mov
or
cld
jae
inc
out
gs
add
cltd
jge
inc
xchg
shr
fidivrs
testb
pop
clc
pop
mov
fldt
cmc
movsb
idivb
sub
jo
ds
pop
inc
xlat
or
pop
fdivs
scas
mov
in
ficoms
push
inc
push
jb
lret
ret
lock
nop
xor
mov
stc
in
repnz
adc
js
aas
rcll
loopne
and
xchg
int3
dec
aas
inc
sar
test
xchg
adc
xchg
mov
mov
push
arpl
mov
icebp
data16
aam
sbb
xor
ret
lods
mov
ret
mov
mov
adc
cld
idiv
mov
fists
fcmovne
ret
push
mov
inc
scas
cmp
pushf
sub
dec
and
int
push
push
stos
cmp
cmp
int
dec
pop
lret
jbe
push
adc
int
push
pop
push
in
daa
jp
jne
mov
mov
jp
add
add
adc
loope
outsl
out
xchg
pop
cmpsb
test
xor
jae
std
call
mov
pop
enter
mov
inc
sahf
and
add
pop
xchg
lods
mov
cmpsl
lret
jmp
mov
dec
jl
dec
dec
inc
and
sarl
test
aaa
jp
into
popf
loopne
mov
inc
jb
or
and
adc
xor
mov
scas
daa
test
push
test
mov
mov
mov
lret
push
imul
stos
xchg
inc
sub
test
sub
jl
fists
mov
cmpsl
pop
and
shll
mov
mov
fisubrl
rcll
loopne
subl
adc
pop
pushf
jae
and
addb
and
dec
push
push
pop
sub
arpl
dec
inc
inc
xchg
test
loop
in
xor
out
lock
and
aad
and
aas
and
push
xchg
aam
cwtl
inc
idiv
mov
sub
test
lods
push
int
adc
and
pop
into
mov
ret
xor
mov
cs
nop
push
mov
jnp
add
insl
push
mov
push
repnz
fiaddl
fsub
popf
js
push
pop
mov
lods
or
mov
adc
bound
clc
jne
sbb
test
push
sub
pop
sub
int3
es
sub
sarl
insb
dec
mov
pop
push
jle
xchg
shlb
imul
js
shll
adc
mov
mov
cmpsb
sahf
and
jle
aaa
test
popa
mov
and
jno
mov
xlat
xor
je
push
iret
andb
push
mov
dec
jmp
aaa
addb
cmpsl
pop
xor
movsl
repnz
inc
mov
aas
jbe
pop
sbb
lahf
insb
jle
push
mov
mov
jmp
xchg
mov
pop
mov
aaa
sub
push
adc
mov
ljmp
mov
insb
lahf
mov
repnz
iret
cmp
cmc
mov
pop
orb
sub
sub
jmp
sub
dec
xor
sbb
cmp
stos
adc
sbb
movsb
subb
sti
xchg
addl
pop
int3
jno
sbb
movsl
inc
push
jg
cwtl
sub
inc
fs
inc
in
mov
cltd
mov
test
jl
negl
cwtl
movsl
fmulp
inc
shll
adc
adc
dec
and
sbb
rcl
into
xchg
sub
fisubrl
cmp
fdivr
mov
push
dec
xchg
aas
cmp
cmp
xchg
out
inc
ret
add
jno
dec
push
cmp
cmp
sti
adc
xchg
cmp
frstor
clc
daa
loope
mov
addr16
jmp
and
stos
pop
fs
sbb
cmp
lret
mov
xor
push
cltd
orl
xlat
pop
js
stos
iret
fcmovu
inc
inc
cmpsb
dec
cmp
pop
cmpsb
sub
cwtl
outsl
mov
rorb
inc
pop
mov
or
inc
cltd
xlat
mov
push
out
adc
push
stc
jb
mov
mov
sub
inc
iret
jnp
mov
and
push
movsb
adc
into
mov
inc
ret
les
and
mov
add
mov
ret
jae
push
movsl
mov
dec
lret
inc
inc
repz
bound
icebp
out
push
adc
jecxz
xchg
pusha
push
pop
cmp
xor
cmp
ds
loop
cmpsb
cmp
cmc
mov
add
stc
in
fstpt
stc
mov
loope
xlat
add
push
xchg
push
pop
jns
mov
xor
or
or
bound
cmp
xchg
pop
xor
test
loope
mov
scas
push
sbb
pop
dec
shr
sub
mov
outsl
popf
jle
imul
sbb
jnp
dec
or
xchg
aam
pop
lods
adc
mov
addr16
cmc
xchg
and
shll
push
mov
mov
sub
roll
icebp
loope
or
fnstenv
and
movsb
call
es
cwtl
movsb
mov
test
inc
cwtl
lret
pop
fsub
mov
push
cmp
push
xor
std
jne
dec
pushf
pop
popa
sub
negb
and
xor
dec
sbbl
mov
fstpt
xchg
cld
or
cmc
push
sub
cltd
add
loope
ss
ficompl
mov
hlt
cmpsl
leave
dec
and
das
xor
inc
xchg
mov
jle
test
fwait
pop
lods
jne
adc
mov
lcall
ror
icebp
push
stos
fsts
in
jmp
pop
test
push
xchg
mov
and
loope
pushf
mov
mov
inc
iret
cmp
fdiv
and
je
add
jb
mov
dec
inc
jbe
add
nop
adc
bound
push
ja
in
nop
cmpl
xchg
xor
jns
mov
and
in
insl
mov
dec
jp
cld
icebp
xorb
cmc
xlat
jb
ret
sbb
mov
rclb
jbe
add
or
xchg
push
pop
test
xor
rep
and
pop
hlt
cmp
das
and
mov
pop
mov
lret
cmp
int3
insb
scas
sbb
xchg
jbe
imul
mov
call
int3
aam
negl
inc
in
pop
or
aam
jg
das
jmp
fidivrs
xchg
lods
mov
cmp
xor
adc
xor
mov
ja
in
jl
ljmp
ss
or
adc
and
ret
mov
mov
cmp
xchg
das
call
jge
jecxz
sar
icebp
ds
adc
andl
data16
jb
push
push
gs
aam
outsl
lcall
xor
xor
dec
je
adc
fwait
stc
sbb
sbb
scas
mov
add
or
xor
pop
xor
call
aaa
mov
jge
jge
xchg
les
mov
gs
cmp
in
loop
shlb
pop
test
xchg
add
subb
sbb
xlat
fs
jle
popa
push
out
lods
jle
cmp
out
or
insl
sbb
stc
ret
stc
ret
pop
in
nop
in
pop
popl
xchg
xchg
push
sub
sbb
jg
in
push
pop
xchg
cli
mov
mov
pop
fistpl
jge
xchg
xor
mov
sbb
lock
rcll
cmp
sub
es
pop
ds
pusha
mov
mov
cmp
add
or
sbb
sub
mov
sub
jp
pop
adc
xorl
adc
and
mov
mov
pop
inc
decb
push
ret
push
in
or
imul
pusha
test
and
push
inc
add
or
or
popf
fs
popa
sahf
sbb
mov
fsubrs
movsl
imul
pop
sub
in
out
fistps
rorb
mov
sub
mov
mov
sub
iret
pop
iret
mov
pop
ljmp
notl
nop
enter
repz
arpl
out
scas
and
mov
xchg
sti
jno
das
mov
loopne
imull
fcomp
inc
and
aam
xchg
pop
fcompl
push
ja
stos
adc
dec
xchg
ret
jl
xchg
mov
pop
jmp
pop
imul
clc
pop
cld
negl
cmovs
sub
dec
dec
lods
ja
fucom
mov
or
notb
mov
lea
popf
xor
pop
js
or
xchg
outsb
push
leave
jbe
dec
xchg
xchg
add
xchg
sub
jno
lea
addl
rolb
jle
repz
ja
dec
dec
es
sbb
mov
xchg
xor
pop
pop
sar
cmp
test
aad
stc
cmp
pop
cmp
push
jns
mov
les
loope
sub
std
loop
jg
lcall
cmp
cmp
test
jl
mov
fldenv
push
leave
pop
adc
adc
loope
xor
and
insb
inc
pop
pop
xchg
scas
mov
or
pop
clc
jl
xor
push
push
repnz
cmc
xchg
lret
and
cmp
pop
loopne
jnp
sub
mov
shll
cs
jne
jo
insb
lods
sbbl
push
inc
arpl
mov
lods
xchg
lods
mov
add
push
xor
jmp
xchg
sahf
outsl
sub
dec
and
leave
mov
fsubs
mov
movsl
inc
cmpsb
cmpsl
test
sub
inc
mov
dec
xor
xchg
pop
daa
dec
hlt
out
daa
dec
popa
scas
jo
pushf
fcoms
fndisi(8087
cmp
ljmp
pop
stos
shl
out
out
fs
repnz
ret
mov
pop
dec
xchg
jg
lds
call
fdivrl
ficompl
mov
sub
inc
fisubl
lcall
mov
push
push
push
je
cld
pop
mov
xchg
pusha
pop
ret
push
sahf
iret
jnp
inc
sbb
lds
ret
mov
sbb
xchg
arpl
xor
cld
or
ss
aas
ds
cmp
mov
push
out
sbb
sahf
xor
cli
jge
push
neg
jnp
fs
push
mov
shlb
mov
shrb
rolb
cmpsb
lea
xorl
mov
scas
test
mov
cli
jl
xor
psubusw
mov
iret
and
pushf
inc
adc
add
ret
xchg
adc
sbb
lods
pop
push
pop
mov
lcall
mov
pop
jnp
mov
ret
or
xchg
xchg
mov
mov
push
push
mov
mov
pop
ret
in
push
inc
cmp
cmp
int3
mov
jmp
mov
notb
nop
pop
pop
out
arpl
stc
cmp
xchg
test
or
mov
pop
aaa
test
jmp
xchg
sbb
push
mov
in
or
dec
push
movsb
cld
daa
cmp
int
lods
loopne
jns
in
xchg
sbb
fmull
inc
div
pop
inc
jl
loope
mov
dec
jns
or
dec
ljmp
adc
sbb
ficompl
dec
sbb
add
aam
push
or
cmp
popa
fidivl
cltd
cmc
cmp
inc
stos
insl
roll
xchg
dec
and
roll
and
mul
sub
ds
out
out
ljmp
into
aad
mov
lea
pop
sub
xor
jo
test
ffree
xor
in
xor
xchg
sbbl
cmp
sti
cmp
xchg
imul
mov
jns
pop
dec
or
add
rol
sub
inc
popl
es
in
fiaddl
sbb
add
in
in
mov
or
stos
mov
pop
cmpsb
pop
jge
pop
xchg
fisubl
cmpsl
cmc
ss
push
pop
testb
aas
ret
std
ret
in
xor
aas
test
adc
rorb
xor
jbe
dec
or
imul
push
aas
cmp
iret
cltd
sti
sbb
pop
sub
dec
test
loop
clc
sbb
fistpl
xor
xchg
in
sbb
stos
mov
mov
scas
inc
inc
fsubs
fsub
push
popf
cwtl
jmp
xor
pop
negl
dec
enter
lahf
xor
divb
shrb
test
adc
xlat
pop
xor
lock
and
inc
xlat
mov
or
data16
or
push
es
in
xchg
std
ja
mov
mov
ja
xchg
out
outsb
and
cmpsl
pop
aam
fs
sbb
or
insb
inc
mov
call
xchg
dec
mov
sti
add
mov
aam
xchg
mov
jbe
cmp
add
aas
jmp
lcall
push
lahf
pop
test
dec
push
sub
cld
dec
and
imul
andb
mov
lock
xor
mov
loopne
lret
mov
cmpsb
mov
sbb
aam
sbb
and
pusha
sub
sahf
and
stc
stos
in
dec
dec
pop
cmc
pop
pop
mov
lods
fisubrs
push
adc
adc
in
jae
cmp
inc
fadd
outsl
push
xchg
inc
adc
pop
xor
aas
or
lea
mov
inc
sub
cli
and
pushf
mov
rcrb
xchg
add
cld
fdivrs
xor
push
inc
sbb
arpl
arpl
popf
pop
in
adc
loopne
fwait
cmp
pop
push
push
aam
sbb
adc
sub
test
and
sub
xchg
rcll
aas
das
jne
sub
jb
mov
lahf
pushl
aaa
sbb
push
mov
and
xor
push
orl
mov
mov
dec
pop
cmc
jns
push
xor
dec
ja
stos
lds
mov
pop
aas
mov
lret
leave
inc
mov
push
sbb
jbe
jle
lea
cmp
jns
ficomps
fadd
pop
pop
cmp
pop
test
pop
call
call
push
cmp
mov
out
repnz
shll
xchg
xchg
sub
jg
rcll
lahf
jne
or
aam
leave
sbb
int
cmp
inc
pop
mov
in
mov
lds
sbb
iret
add
mov
jo
cli
push
add
inc
ret
xchg
xchg
push
repnz
and
cli
das
je
ljmp
test
shll
cmp
inc
mov
inc
xor
dec
fdivl
mov
inc
jge
jle
or
mov
mov
xor
into
scas
pop
dec
aad
mov
add
outsl
mov
jp
mov
arpl
decl
les
or
fucomip
fadd
or
cld
cmp
push
mov
jecxz
cwtl
cmp
cmpsb
jmp
push
iret
mov
push
idivb
mov
pop
lock
shlb
imul
lret
add
adc
stos
lods
cld
jmp
shrl
pop
out
xchg
inc
or
cwtl
fadds
inc
stos
mov
ds
dec
and
imul
sahf
pop
lods
xchg
stos
test
xor
mov
sbb
push
push
mov
and
push
or
ror
jge
push
or
xchg
sbb
daa
xchg
mov
mov
mov
iret
dec
jl
push
inc
ret
clc
xor
jnp
jb
mov
test
and
or
mov
or
push
lds
pop
mov
roll
ret
jae
dec
push
push
jecxz
pusha
push
jl
adc
les
ds
clc
cmc
mov
hlt
adc
pop
mov
lods
std
push
mov
cmpsl
push
popa
outsl
sbb
inc
aam
mov
stc
sub
xor
and
lret
mov
test
sbb
jge
jb
out
ret
mov
inc
mov
add
jno
or
jl
shrl
test
shrl
inc
mov
pop
xor
cs
addl
and
adc
cltd
out
mov
stc
add
adc
call
test
mov
pushf
or
pop
add
inc
mov
inc
jnp
jle
xor
sbb
mov
mov
js
rclb
fldcw
stc
jo
ja
jno
jbe
popf
mov
daa
push
lret
addr16
push
mov
or
test
pop
xchg
enter
pop
rcrb
stc
shlb
dec
daa
lcall
movsl
fstps
fnstenv
test
or
in
out
mov
mov
xor
xorb
adcb
sub
cmc
insb
incb
call
cmp
push
insb
sahf
cmpsb
xor
sub
pop
je
dec
fsubrs
cld
jle
sub
rcrl
adc
xchg
and
cli
fldl
je
pop
ret
lcall
leave
nop
sbb
fstpt
test
loopne
popa
hlt
cmp
mov
inc
pusha
outsl
cltd
adc
mov
mov
rorl
jle
scas
dec
dec
pop
cmp
rclb
stc
fcomps
xchg
sub
jp
mov
mov
bound
fimuls
dec
int
in
xor
loop
jmp
pop
xor
frstor
lcall
rorl
repz
nop
fbld
lds
and
inc
inc
cmp
std
popa
sti
rcrl
lds
lods
push
div
lock
test
call
or
push
push
dec
jg
mov
inc
lahf
inc
and
js
loope
mov
mov
pusha
lds
adcb
adc
inc
or
jo
es
dec
lcall
mov
movsb
leave
fidivrs
stos
jbe
les
sub
xchg
xor
sbb
pop
call
lret
stos
ja
test
inc
cld
jmp
xor
pusha
loope
sbb
push
lcall
push
sbbb
inc
imul
cltd
enter
mov
jecxz
mov
cmp
xchg
adc
mov
loop
jecxz
lcall
push
add
jns
outsl
loope
sbb
cwtl
pop
clc
mov
mov
jmp
cmp
movsb
dec
les
imul
out
adc
cmpsl
loope
fucomi
mov
mov
mov
mov
aas
cli
sub
pop
and
push
out
negb
lret
cmp
mov
push
repnz
scas
clc
movsl
leave
mov
pusha
sub
lahf
mov
pop
leave
xchg
cmp
movsl
mov
iret
std
lret
scas
sub
cmp
pop
cmp
mov
jmp
sbb
cmpsl
lret
jecxz
mov
sub
pusha
cmpsl
adc
andl
jge
loope
push
insb
pop
test
push
jmp
aam
dec
pop
add
call
push
ljmp
ja
push
xorl
in
mov
test
mov
inc
mov
mov
pushl
test
int3
jbe
push
clc
fdivrs
push
xchg
adc
shr
ss
int
and
pop
flds
push
test
xlat
push
test
pop
rcll
repz
xchg
cmp
mov
add
xor
das
mov
add
sbb
pop
in
data16
mov
xchg
lock
pushf
sub
sbb
jnp
pop
jge
jmp
ret
ds
jle
sub
sbb
pop
push
call
mov
popa
pop
in
xorb
adc
cmpb
inc
shrl
adc
dec
inc
pop
jmp
neg
aad
pop
or
jp
push
lock
mov
xchg
mov
cmp
loope
push
cmp
sub
cs
es
popf
pop
mov
or
lea
xchg
xchg
push
inc
cmpsb
clc
xlat
repnz
or
push
sbbb
cli
aaa
inc
dec
sub
xchg
add
lds
sbb
fidivl
jns
add
mov
stc
popf
nop
scas
mov
fucomp
push
or
fistpll
rorl
stc
push
mov
push
sub
in
pop
pop
arpl
cs
adc
push
push
sub
xor
fwait
cltd
adc
fimull
outsl
movsb
stos
or
mov
pop
add
push
insl
push
mov
adc
lods
stc
pop
in
jle
imulb
push
je
stos
mov
enter
sbb
dec
subl
orl
out
jbe
dec
setbe
lods
int3
subb
sbb
test
out
test
or
lret
jl
jl
jecxz
inc
add
movsl
pop
jp
sbb
or
ret
xor
sahf
aam
iret
test
and
lret
sub
orb
sub
rclb
addr16
and
inc
aad
dec
sbbb
inc
xchg
popa
mov
push
out
adc
push
in
clc
xchg
dec
mov
jge
aas
out
js
outsl
stos
sbb
shr
ret
imul
jp
inc
jae
inc
pushf
and
jns
bound
addr16
ds
lcall
repnz
dec
les
paddd
and
testb
in
push
sub
daa
adcb
or
je
or
xchg
cmp
xlat
popf
xor
mov
mov
sub
frstor
std
repz
push
fsts
imul
repz
push
dec
jmp
iret
idivb
cmpsb
jg
int
leave
inc
push
js
ret
sahf
jnp
xchg
shlb
pop
movsb
pusha
jl
inc
cltd
push
sub
xlat
sbb
cltd
push
sti
jns
xor
test
mov
repz
adc
and
out
pop
lcall
lods
fists
xchg
pop
push
jo
mov
inc
jmp
rclb
addb
sub
mov
lcall
fstpl
lds
xor
push
mov
jp
dec
sbb
shrl
jg
jg
or
and
aas
in
pop
jecxz
push
push
test
addr16
dec
or
push
insl
xlat
iret
and
ss
bndstx
jae
add
call
jecxz
aam
adc
jnp
xchg
lods
pop
ret
sub
iret
insl
ja
pushf
les
and
pushf
xchg
jge
xor
push
push
jbe
loopne
xchg
cmp
jg
aad
or
cld
imulb
xor
les
pop
cwtl
pop
mov
push
sbb
pop
out
cmp
aas
pop
and
sbb
in
xchg
pop
lcall
jo,pn
or
rcrb
aad
or
into
fs
out
adcl
outsb
sub
daa
out
sub
mov
je
xchg
loopne
inc
test
dec
mov
inc
aad
xchg
jg
dec
add
jecxz
ss
and
mov
or
adc
scas
out
mov
dec
out
test
inc
cld
cltd
lcall
jle
sub
gs
cld
xor
pop
shrl
sbb
xchg
add
ja
iret
xchg
cmp
jns
cmp
loopne
ljmp
int
out
stos
sarl
or
push
mov
mov
enter
sub
xor
sbb
dec
inc
in
xor
out
add
test
mov
pop
pop
ret
xchg
push
inc
mov
mov
iret
and
mov
pop
push
inc
js
jnp
adc
xchg
test
out
inc
xor
sub
push
fwait
setno
pop
sbb
int
xor
movsb
loopne
adc
sub
push
jno
repnz
push
adc
jge
das
loopne
cmp
pop
jmp
pop
xchg
cltd
mov
add
leave
adc
pop
mov
adc
cli
jne
adc
xchg
ror
adc
push
adc
imul
fwait
inc
or
icebp
pop
outsl
ss
data16
or
xor
xchg
inc
push
js
pop
stc
leave
test
jbe
push
push
add
nop
inc
mov
sahf
jge
in
daa
mov
sbb
xor
mov
or
and
repnz
clc
dec
outsl
cmc
mov
lcall
aas
stc
inc
mov
cwtl
arpl
daa
rcll
lcall
fstps
and
cmp
in
fwait
xlat
pop
jae
clc
xchg
xor
pop
xchg
shlb
sbb
push
xchg
arpl
fstpt
lods
subb
cmp
movsl
pop
jb
cltd
pop
icebp
cs
rcrl
inc
cmpsb
adc
jge,pt
adcb
xchg
vshufps
jl
sub
mov
lret
xor
add
call
jo
mov
jp
aas
lods
jns
ret
inc
xor
jge
mov
loope
push
rclb
adc
test
pop
adc
mov
cmp
sarb
jecxz
lcall
bound
mov
or
and
add
ja
push
adc
shl
fcomps
inc
movsl
gs
mov
lea
test
cmpsb
mov
or
mov
lds
fbld
xor
or
pop
mov
clc
fidivl
cmpsl
push
jg
inc
fdivs
fimuls
dec
es
dec
mov
fstpl
and
inc
arpl
aaa
dec
mov
push
sub
call
inc
icebp
or
mov
lods
push
sbb
jmp
push
mov
mov
jecxz
dec
les
xor
sub
gs
or
adc
pop
xlat
adc
imul
in
ret
xchg
fwait
push
and
dec
testl
iret
sub
movsb
and
lock
ja
jnp
clc
pop
outsl
pop
pop
dec
iret
fistl
insb
ret
js
pop
mov
dec
js
xchg
je
or
fwait
outsl
lahf
imul
sub
out
adc
push
int3
mov
leave
icebp
jns
sbb
mov
mov
in
movsl
adc
mov
adc
fwait
jecxz
movsb
sub
idivb
sarl
loop
dec
outsl
push
into
xor
jae
les
out
sbb
pop
ja
mov
cmc
and
adc
les
adc
stos
push
gs
bswap
mov
jp
mov
xchg
sbb
and
std
out
loop
imulb
push
pop
fldt
popa
mov
mov
jmp
bound
dec
xor
bound
ffree
mov
cltd
mov
fcoms
movsl
iret
insb
or
mov
mov
xor
imul
daa
push
mov
stos
lods
rcll
or
cltd
xor
xor
imul
or
mov
in
fdivs
in
sub
xchg
in
xchg
insb
mov
pop
in
stc
pop
js
jne,pt
adc
aas
pop
push
popa
lret
out
jno
rclb
adc
pushf
shll
outsl
std
add
xchg
pop
daa
mov
lds
jb
out
pop
out
cmc
sub
test
insb
push
lahf
ss
adc
inc
enter
mov
ss
pop
test
js
push
pop
rcrl
mov
xorl
test
fisubrs
nop
out
out
mov
xchg
xor
and
aam
inc
push
ljmp
xchg
jecxz
mov
int
rcll
shlb
test
hlt
lret
into
jae
outsb
dec
pusha
sahf
repz
incl
jns
inc
sbbl
mov
lea
dec
xlat
and
pop
xor
mov
xchg
push
dec
mov
xchg
enter
cmp
add
cmc
arpl
add
inc
mov
mov
fdivp
push
out
mov
sbb
enter
pop
movsl
outsb
sahf
mov
cld
iret
pop
pop
dec
movsl
jg
adc
push
mov
mov
jne
aas
dec
xor
mov
icebp
sti
pop
fnstenv
faddl
ss
stos
repnz
cmpsl
cmp
ret
mov
push
cs
pop
mov
mov
mov
js
insl
push
push
mov
loopne
or
cmp
out
in
pop
inc
or
mov
mov
xchg
inc
sahf
xor
pusha
mov
cmp
push
mov
adc
jnp
push
mov
mov
jge
roll
inc
int
jge
iret
add
std
addr16
loope
ret
mov
mov
and
lcall
call
movlps
arpl
push
push
cmp
lret
add
shlb
mov
data16
sub
inc
xorb
jo
daa
loop
test
clc
xchg
jl
fiaddl
movsb
sub
fisubrs
jnp
jg,pt
jmp
mov
call
jl
imul
insl
mov
ss
add
pop
cmp
push
int
mov
adcl
rclb
pop
popa
mov
stos
push
sbb
iret
lret
cmp
cli
inc
lahf
popf
push
out
scas
xchg
jge
xlat
push
stc
sbb
xchg
jb
push
flds
mov
ret
shll
or
ret
push
jbe
imul
cmp
adcb
imul
adc
mov
cmpb
shll
pop
mov
and
lock
cltd
cs
adc
test
lock
jle
mov
imul
cmc
mov
daa
inc
push
pop
fisubl
xor
pop
daa
idivl
pop
cld
fs
lods
add
inc
jbe
mov
mov
jb
cmp
lds
test
xlat
push
push
aas
push
arpl
and
fwait
test
sti
add
jecxz
aam
lods
repz
sbb
jmp
or
cs
pop
rcrb
xor
int
ficompl
jb
popa
je
push
and
xchg
movsl
outsl
imul
sti
ret
imul
mov
frstor
xchg
jne
mov
lret
pusha
cld
das
loopne
mov
add
pop
pop
jle
hlt
les
and
stos
inc
xor
inc
sbb
lcall
add
mov
rep
fcoml
insb
add
inc
sbb
add
sar
sub
sub
movsb
pop
sub
sahf
fidivrs
test
sbb
xchg
pop
pop
mov
xchg
adcl
xlat
hlt
sahf
pop
push
sub
fcmovbe
pop
jae
stos
cmpl
mov
push
jne
xchg
xchg
arpl
icebp
sti
push
mov
jmp
ds
mov
xlat
frstor
jle
adc
jle
jnp
mov
xchg
int3
pop
aam
ret
pop
call
rcll
imul
push
icebp
out
daa
mov
cs
cltd
std
xchg
mov
dec
jmp
adc
pushw
jbe
lret
rcrb
jle
mov
loopne
jno
push
hlt
ljmp
adc
out
cmp
cltd
jge
xor
push
cltd
push
int3
jecxz
and
mov
mov
dec
dec
fdivrp
add
pop
sbb
lea
mov
pop
nop
test
cld
sub
cli
add
push
mov
xor
std
shrl
lods
sbb
in
fcomps
or
pusha
mov
pop
in
fmuls
xlat
dec
int3
sbb
sub
seta
mov
pop
xchg
fcomps
testl
push
inc
out
out
stc
loop
adc
inc
lods
loop
mov
fsubl
jne
std
push
sbb
push
push
pop
test
sbb
xor
fcomps
repz
into
aad
daa
xlat
js
xchg
jmp
xchg
jno
pop
add
mov
sbb
imul
push
test
nop
icebp
je
mov
and
pushf
pop
pop
xchg
jb
dec
out
movsb
add
faddp
sub
pop
jecxz
push
and
add
inc
jo
in
loopne
jnp
iret
xorl
sbb
loopne
dec
fucom
movsl
aam
pop
pop
outsl
and
dec
dec
inc
dec
cmp
cmc
adc
rclb
inc
mov
loop
mov
addb
in
pop
js
insl
call
cmp
push
cmp
adc
sbb
cmpsl
je
jnp
and
push
imul
fadds
icebp
jo
sbb
clc
call
in
push
cli
push
mov
pop
data16
sub
and
std
mov
adc
sti
rorb
dec
loope
gs
mov
adc
xor
mov
jbe
stos
and
rclb
xor
sub
mov
daa
ja
insl
xor
notl
stc
push
stos
jns
jecxz
mov
sub
push
jne
cli
mov
pop
cltd
gs
shlb
cli
push
mov
push
cmp
nop
push
pop
add
dec
push
dec
movsb
mov
dec
popa
sub
jbe
lret
insb
fs
fidivs
mov
sbb
mov
fwait
pop
lea
cld
push
xlat
lahf
sbb
adcl
jecxz,pt
and
and
or
movsl
adc
jno
cmp
pop
in
shrb
sub
mov
dec
daa
sub
pop
lcall
int
dec
sub
lods
mov
pop
and
jae
mov
js
sarl
out
ret
adc
cmp
add
pop
pop
jne
ja
dec
cmp
push
xor
adc
test
pop
push
sub
inc
gs
int
in
add
ret
int
je
jo
shrb
out
popa
add
push
inc
mov
jg
pop
add
rcrb
lods
push
test
addr16
sub
hlt
cmp
insb
or
cmp
outsl
popf
mov
aaa
cltd
rcrl
mov
aaa
or
jle
inc
in
dec
sub
arpl
mov
ja
ret
gs
dec
cld
fcmovne
scas
in
push
and
push
ljmp
pop
lret
outsb
mov
int
mov
add
pop
inc
std
adc
mov
and
bnd
fildl
dec
movsb
mov
mov
mov
push
jae
into
mov
jmp
mov
int
xchg
in
decb
lret
stc
test
je
cmc
sbb
inc
cmp
xchg
out
mov
mov
inc
fbstp
mov
loop
jbe
mov
mov
jbe
sbb
mov
scas
adc
pusha
fistl
mov
int3
sbb
inc
adc
inc
sarl
negb
clc
cmp
test
mov
or
int
lahf
push
ljmp
adc
xor
jnp
dec
add
inc
jle
mov
cmp
aam
xor
cmpsb
ja
inc
outsb
cltd
jmp
int
pusha
jle
dec
scas
clc
xor
inc
je
jp
lahf
imul
sbb
xlat
adcl
seta
jl
jno
aam
cs
daa
sub
clc
push
dec
mov
pop
ss
sbb
icebp
cmp
sbb
mov
daa
add
fisubrl
lods
jmp
mov
xor
cmpsl
add
push
inc
out
into
cs
mov
sar
das
mov
iret
mov
std
sub
out
mov
rol
xchg
stos
cmp
sbb
lret
inc
mov
pop
jbe
insl
sar
mov
cmp
fwait
shll
idivl
jno
loopne
insb
clc
xchg
popa
mov
lods
mov
mov
mov
xchg
xor
rol
push
cmp
adc
sbb
inc
adc
sub
or
in
push
loop
jno
dec
aad
add
insl
sub
ret
push
or
adc
cmp
jle
into
sbbl
out
fwait
xor
dec
mov
add
xor
xor
js
xor
nop
xchg
jp
and
mov
in
in
xlat
repnz
movsb
or
movsl
mov
sti
xor
loop
jle
frstor
rep
or
addb
push
iret
dec
movb
and
dec
fcoml
dec
cmp
mov
sar
sahf
xor
es
adc
lea
mov
sub
aas
addr16
stc
fdivl
push
lods
pop
data16
fbld
xchg
add
loop
imul
xor
loope
sub
out
inc
or
iret
enter
lds
inc
mov
lidtl
cmp
je
xorl
or
and
leave
add
push
inc
lahf
sarl
lahf
or
cmpsl
test
lret
fsts
out
jb
push
cmp
xchg
mov
movsl
mov
in
addr16
sbb
insl
mov
roll
es
mov
cld
hlt
mov
inc
xchg
xchg
adc
sbb
cmp
fnstenv
ficoml
sbb
xchg
test
cmpl
jns
addr16
lods
dec
aam
adc
hlt
cmp
xor
pop
clc
cwtl
push
das
mov
xchg
or
or
inc
sub
or
int
sub
xor
gs
pop
pushaw
std
add
mov
jle
push
andl
cltd
or
sub
pusha
and
test
jne
aad
inc
push
pop
xor
inc
ficompl
sbb
push
jno
dec
in
shrb
fsubl
cld
popa
inc
mov
test
xor
mov
cmpsl
cmc
xor
cmp
mov
add
std
in
mov
sub
or
mov
jae
dec
mov
ja
shr
sub
pusha
nop
mov
sbb
dec
in
jb
in
adc
mov
jb
pop
xchg
and
data16
sahf
sbb
and
incl
xchg
dec
dec
push
stc
mov
out
int3
jg
cmpsl
es
fwait
leave
das
sub
and
cld
bound
dec
mov
or
add
les
jg
test
adc
add
ds
out
jg
xchg
xor
pop
ret
sub
mov
loop
nop
fsubrl
into
jge
cmpsb
cmp
xor
and
popa
mov
lahf
mov
mov
leave
test
and
jge
scas
sbb
cmp
sbb
outsl
rcl
into
pop
inc
ret
add
mov
loop
cli
leave
js
cmp
cmp
outsl
cmp
adc
lods
fldenv
pop
cmp
stc
jns
in
mov
fistps
xlat
push
jno
push
out
leave
pushf
std
das
cmp
mov
adc
stos
adc
bound
movsb
pushf
and
cmp
je
insl
cli
sub
fisttpl
pop
sub
je
sub
orb
pushf
sbb
in
mov
pop
push
fwait
xchg
scas
pop
cmp
add
std
xchg
movsl
push
pop
push
data16
push
xorl
rcrl
test
loope
movsb
addl
cmc
fbstp
lods
xor
dec
xor
int3
arpl
adc
lahf
shl
loopne
outsb
jno
in
pop
inc
lea
add
cmc
xchg
mov
sbb
aas
dec
mov
add
or
xor
jnp
xor
in
dec
sub
addr16
loopne
add
fwait
xor
cmpsb
loop
call
xchg
push
rclb
xchg
clc
mov
jae
ljmp
dec
pop
stc
loopne
fidivrs
ret
inc
mov
fmulp
adc
je
xchg
pop
pop
loope
adc
mov
jecxz
aas
add
xchg
cmp
mov
lcall
pusha
in
and
sbb
orb
sub
sub
cmp
mov
fisttpl
xor
mov
mov
lret
mov
cmp
lret
mov
dec
scas
mov
sbb
scas
loope
roll
aad
insb
and
mov
pop
into
fwait
sarb
in
sbbb
enter
je
popl
fidivs
mov
pop
ds
mov
pop
pop
add
pusha
out
ret
jno
in
push
sti
adc
subb
loop
cwtl
repnz
popf
xchg
in
stos
cmp
mov
movsl
addr16
ds
dec
pop
jl
mov
into
into
cs
aad
sbb
xchg
flds
stos
inc
xchg
or
push
push
mov
js
fcmovnb
andl
jmp
mov
sub
dec
xlat
mov
fwait
mov
xlat
xor
enter
jo
sub
call
jnp,pn
sub
add
loop
mov
stos
fisttpll
xchg
lds
mov
cmp
pop
cltd
fwait
pusha
and
adcl
adc
jb
sbb
or
push
cwtl
jbe
fcomp
in
lret
test
jle
fldenv
sarl
out
dec
mov
insl
sub
daa
add
jo
sbb
rcrb
test
dec
in
inc
ret
lret
push
sub
adc
cmc
test
pushf
cmpl
inc
mov
clc
stos
insb
and
divb
mov
add
insb
push
cld
push
add
push
pusha
push
enter
out
iret
push
sarl
notb
scas
imul
daa
mov
inc
pop
mov
add
xor
data16
arpl
std
cwtl
xchg
inc
xor
leave
shl
add
arpl
out
add
pop
xlat
fs
inc
or
xchg
imul
add
adc
lea
arpl
or
mov
jae
decb
cmp
call
mov
ss
ja
sbb
sarl
dec
or
sub
adc
dec
roll
push
cmp
fidivl
mov
insl
xchg
jno
pop
add
nop
jae
xor
lods
sub
ljmp
in
jle
scas
jnp
insb
pop
dec
jle
xor
dec
xor
mov
pop
clc
mov
push
xchg
xor
movsl
or
adc
fs
bound
jo
mov
fldl
andb
xor
xor
cmpsl
lods
cmpsl
add
pop
cmp
dec
popf
scas
lock
lods
and
out
xchg
aas
jb
sub
insb
cmp
jge
mov
ds
adc
push
fldenv
sbb
repnz
int3
push
adc
or
sahf
daa
dec
sbbl
jmp
fwait
mov
adc
mov
xor
inc
jne
aas
pop
or
adc
mov
out
int3
xor
fs
cwtl
outsl
xchg
jecxz
pushf
repz
or
dec
pop
out
push
lret
aas
stc
jo
lcall
loope
in
push
sbb
loop
cmp
pop
aaa
not
subl
jmp
sti
bound
addr16
subb
mov
stos
gs
data16
jno
sbb
imul
out
cli
jae
gs
pop
or
push
xor
push
iret
or
into
adc
in
movsl
mov
inc
push
and
push
mov
sbb
shr
enter
mov
adc
push
xchg
fisttpl
mov
stc
je
clc
test
ja
jns
cmp
sub
sbb
pop
mov
daa
test
push
cltd
mov
stos
or
decl
mov
pusha
enter
push
inc
icebp
pop
add
iret
dec
add
test
in
or
xor
inc
inc
and
add
ret
ds
jle
into
lretw
js
add
mov
push
mull
out
out
arpl
pop
mov
and
or
rorb
lods
mov
mov
cmpsb
adc
xorps
jae
sub
and
jl
fisubrs
xchg
mov
push
xlat
cmp
jno
xchg
xchg
push
mov
push
fsin
inc
lods
inc
movsl
mov
lret
xorl
mov
and
jbe
add
push
fisubl
sub
push
adc
cmc
cmpsl
push
mov
xchg
push
ja
test
jl
cmp
push
daa
jmp
push
arpl
clc
cmp
jno
xor
xchg
push
shlb
test
mov
push
pop
imul
fistl
or
inc
lcall
jnp
jnp
dec
sub
fidivrl
mov
and
stc
cld
outsl
push
jae
xchg
inc
scas
pop
rclb
sub
inc
addr16
mov
cmp
addr16
inc
xchg
rorb
add
cltd
push
aam
call
mov
into
xor
stos
push
cld
sbb
je
dec
add
or
fldenv
pop
jae
mov
loopne
sbb
dec
pop
sbb
dec
cmp
mov
mov
and
lods
pop
mov
repz
jecxz
ret
cld
sarb
popf
adc
inc
fnstenv
xchg
jle
jae
repz
pop
xor
mov
test
lock
jl
clc
or
lds
xlat
addb
add
mov
adc
cli
xorl
insl
push
lret
push
add
mov
repz
pop
pop
mov
into
jmp
imul
cmc
sbb
pop
ror
out
cltd
jp
lret
out
inc
adc
mov
mov
xchg
fwait
xchg
dec
push
aas
shrb
hlt
ffreep
xor
mov
js
or
xlat
jne
xchg
stos
cs
ror
jmp
sbb
mov
sbb
xor
les
push
mov
addr16
mov
and
loope
xor
int
mov
in
jno
add
xchg
mov
xchg
fs
inc
out
pop
call
xchg
inc
cmp
jb
dec
jle
xchg
iret
iret
inc
mov
stc
out
ljmp
jno
out
push
xor
call
out
test
mov
push
jecxz
in
scas
mov
adc
dec
dec
fldl
mov
or
faddl
jmp
fwait
lea
dec
jbe
inc
xchg
xor
xchg
sahf
ficoms
flds
xchg
inc
cmc
xchg
aam
mov
loopne
out
mov
es
jno
ja
sahf
mov
mov
sub
sub
mov
scas
jb
cmp
adc
loope
ret
dec
testl
xchg
aam
mov
inc
cmc
fbstp
mov
xchg
lahf
in
cltd
aam
aas
jmp
loop
xchg
repz
popa
pop
sbb
aad
and
lret
or
das
dec
cmc
pop
aad
mov
cs
sti
lcall
or
ja
mov
jae
sbb
lcall
fimull
push
arpl
jno
sub
push
and
das
add
shlb
add
ret
out
sbb
pusha
lods
mov
and
mov
inc
xor
cmpsb
mov
test
mov
out
call
dec
aas
in
xchg
mov
mov
test
lds
lock
mov
jecxz
dec
nop
cmpb
pop
insb
fcomps
fcoml
aam
shlb
lret
jecxz
js
cli
mov
add
repnz
ds
dec
adc
xor
test
lods
shll
fcomps
sti
clc
mov
inc
test
fstpt
fsubrs
xor
scas
ret
inc
rcrl
fs
fs
je
sbb
lods
push
popa
jmp
data16
xchg
jp
jae
xchg
inc
and
push
cmp
sub
in
push
mov
and
push
inc
jmp
cs
xor
mov
add
mov
imul
adc
sub
movsb
sub
rep
pop
dec
repnz
jo
sahf
dec
push
jnp
mov
mov
bt
xor
rcl
insl
inc
repz
or
sub
inc
push
clc
dec
or
add
or
fisubrs
loop
cmp
pop
std
lds
call
jns
fwait
in
rcrb
lods
mov
dec
or
mov
pop
cmpb
mov
repz
mov
adc
push
loopne
cmp
mov
mov
test
pop
sbb
popf
inc
inc
out
add
cmp
and
fwait
jb
lahf
sbb
pop
mov
shlb
xchg
and
or
pop
dec
mov
mov
leave
mov
movsl
and
and
sub
in
sbb
mov
ds
ja
sub
jl
pushf
cmp
cmp
loopne
insb
mov
mov
cmp
mov
dec
mov
scas
sahf
adcl
cs
outsl
sbb
add
cld
leave
cmc
mov
sbb
adc
insl
jne
fs
add
dec
sbbl
cs
jb
xchg
addb
pop
push
sbb
push
mov
pop
adc
addr16
push
mov
rcrl
jb
cwtl
in
pop
xor
nop
hlt
pop
pop
mov
fsubr
or
sub
inc
fstl
cmpsl
into
int
jne
iret
mov
dec
imul
and
xchg
or
pop
and
dec
in
mov
jnp,pt
scas
cwtl
test
pusha
ror
mov
pop
push
dec
sbb
jmp
xchg
test
jns
roll
cmp
pop
add
int
or
add
loope
inc
sbbl
jmp
ljmp
clc
adc
lahf
push
adc
nop
pop
dec
sahf
cmp
sub
xchg
les
cwtl
fs
add
mov
pusha
sti
push
rcrb
scas
and
xchg
inc
stc
or
xchg
push
or
xor
pop
cmpsl
shr
pop
inc
cltd
ljmp
stos
addl
imul
pop
mov
pop
ffreep
orb
in
repnz
testl
out
mov
ja
xchg
iret
jns
sahf
add
mov
mov
lods
andl
inc
adc
jp
sbb
cwtl
cmp
jno
lock
popa
sub
orl
push
mov
cld
ret
cmc
sbb
push
inc
sbb
sub
fdivs
cmc
adc
cmp
int3
inc
dec
fs
cltd
hlt
xor
les
movsb
xor
mov
pop
fisubrl
sbb
mov
mov
xor
in
cmp
mov
push
mov
rcll
jnp
fnstsw
ss
mov
orb
outsb
pop
in
cmpsl
adc
les
push
jmp
jmp
or
push
jno
sti
lea
dec
fs
lcall
insl
and
test
clc
shl
push
pop
test
cmp
jg
negl
lock
add
fimull
xchg
fwait
ss
repnz
lret
movsb
ficompl
shlb
test
add
jno
fwait
xor
popa
push
test
xchg
lods
mov
jge
js
inc
xchg
jp
outsb
jo
sbb
xor
adc
test
or
int3
adc
push
stos
lret
int
dec
rorb
or
pop
pop
lcall
push
push
xchg
loop
scas
in
pop
push
sub
sbb
stos
gs
sbb
mov
aas
push
aas
jb
xchg
pusha
ds
and
loop
es
mov
divl
out
pop
inc
je
jae
cmp
loop
mov
mov
mov
push
cmp
xor
insb
mov
xorl
pushf
or
lcall
popa
add
andl
mov
adc
push
leave
xchg
mov
and
pushf
or
mov
pusha
les
shll
pop
mov
lea
push
push
rorl
test
xor
push
xchg
sub
sbb
lock
shlb
pop
adc
jl
movb
push
xchg
jnp
mov
push
pop
dec
and
xor
push
push
mov
fistl
sahf
je
mov
jl
jge
rol
dec
xor
stos
arpl
sbb
jge
sbb
and
fxch
rolb
stc
mov
add
es
dec
in
call
jl
push
dec
inc
adcb
cmpsb
repnz
ret
sub
inc
mov
jo
push
push
dec
clc
mov
clc
push
xor
mov
es
sbb
jge
ljmp
cmp
ss
or
jb
xor
out
cli
xchg
xchg
xor
call
jbe
cmc
sarl
lahf
mov
shlb
inc
ds
fadds
insb
mov
mov
push
ret
pop
pop
xor
push
sar
jae
cmp
ret
pop
out
mulb
sbb
popa
cmc
jge
cld
jmp
pop
dec
fs
sbb
les
mov
pop
inc
pop
push
xchg
xchg
and
xchg
add
js
enter
push
ficoml
inc
aas
jns
sbb
jp
bnd
sti
loopne
mov
pop
xor
cwtl
fsub
push
mov
movsb
cmpsb
cmp
std
shlb
pop
in
push
add
insl
stos
cmp
lods
pop
cs
movsl
adc
ret
mov
stos
lret
cmpsb
bound
mov
fisttps
fstpl
adc
nop
xchg
push
shlb
mov
adc
je
mov
gs
pop
xor
sub
ficoml
jae
push
push
jo
ds
rorl
fs
sbb
push
fistl
ds
fs
xor
jmp
aas
rcl
cmp
dec
add
push
ss
and
push
leave
sti
cli
enter
outsb
mov
gs
aas
pop
mov
adc
sub
push
or
inc
inc
xchg
xor
popf
addr16
int
lock
lock
sbb
inc
insw
imul
out
jo
cmpl
sub
push
insb
add
mov
pop
addr16
dec
bound
cli
sbb
lds
mov
mov
dec
dec
test
fst
ds
repz
mov
sbb
inc
ss
push
adc
outsl
inc
mov
cmp
mov
adc
cmp
mov
jecxz
mov
dec
lds
xchg
lret
push
xchg
cmc
fnstcw
lcall
sbb
cmp
push
out
imul
or
mov
inc
and
sarb
dec
mov
inc
roll
xlat
mov
mov
fsubrl
insb
sub
hlt
in
outsl
popa
sarl
test
outsb
imul
pop
in
cmp
push
dec
cmpb
movsl
jb
cld
cli
rol
inc
jg
rcrb
daa
imul
lcall
mov
sbbl
jmp
fsubr
inc
sub
push
add
mov
inc
test
mov
xchg
inc
push
or
add
mov
out
ret
dec
fcomps
je
sub
adc
pop
jo
or
negb
inc
in
and
sti
xor
adc
repz
jle
mov
or
push
cmp
bound
sbb
mov
pop
fbld
mov
or
push
cli
jno
add
xchg
insb
xor
addb
or
rolb
adc
mov
xorl
push
jo
rcll
mov
cli
sti
jge,pt
pop
mov
icebp
sub
sbb
popa
mov
adc
push
mov
aas
jp
xchg
dec
mov
pop
pop
test
sbb
pop
push
push
outsb
xchg
push
add
add
mov
push
pop
inc
mov
addb
aam
jmp
inc
xchg
lahf
jae
loope
lds
jnp
cltd
push
push
cmp
push
mov
jecxz
popa
mov
outsb
xor
shll
bsf
mov
scas
add
fs
push
cltd
scas
or
jmp
cmpsl
cmp
xchg
mov
popf
repnz
mov
mov
dec
inc
loopne
xchg
cwtl
fidivs
xchg
pop
mov
xchg
int
or
xor
bound
frstor
xchg
pusha
shrb
fstp
bswap
xchg
mov
lock
cmpsb
addb
mov
loopne
sbb
cmp
mov
repz
daa
fbld
add
jb
and
stos
scas
scas
fcmovnbe
adc
mov
ret
and
mov
nop
jp
add
out
fcoms
sbb
mov
out
ss
cmp
fidivs
cwtl
fimull
icebp
insb
push
pushf
mov
std
lods
pop
mov
es
cli
cmp
push
sbb
add
inc
and
pushf
in
sub
jnp
bound
adc
js
idivl
addr16
sti
jge
pusha
fsts
mov
bound
push
cmpsb
sti
fidivrl
scas
mov
or
xchg
or
fwait
jmp
mov
xchg
movsl
mov
lcall
push
scas
push
sub
push
cli
cs
dec
aad
cmp
sbb
dec
mov
stos
popa
test
mov
xor
call
ds
pop
mov
sub
js
lcall
jne
shl
shlb
ret
sbb
xor
data16
es
cmp
stos
inc
adc
cmp
add
test
andl
mov
push
jl
jbe
pop
sarb
and
imul
xchg
int
lret
in
mov
jno
hlt
sbb
pusha
push
mov
cmp
out
push
mov
insb
mov
lret
push
push
jns
sub
js
push
inc
sub
fistps
aaa
and
add
stos
jns
xchg
or
xorl
sub
dec
insb
pushf
adc
mov
rol
xchg
xchg
addr16
jno
pushf
out
add
and
cli
xlat
push
cltd
xor
int
popa
push
adc
mov
xchg
cmpsl
push
or
ror
outsl
cli
xor
lea
jb
push
aam
pusha
inc
inc
sbb
or
popa
xchg
test
icebp
scas
sbb
in
mov
mov
std
mov
cmp
mov
jg
cmp
adcl
xchg
jmp
call
jle
lcall
jmp
jne
cmp
fstl
mov
jge
xchg
pop
pop
add
xor
out
cmp
xor
sarl
xchg
es
mov
sub
fcoml
inc
ret
pop
sub
cmp
loopne
mov
pop
xor
push
out
cmp
inc
lahf
adc
pop
pop
adc
movd
inc
push
gs
pop
add
data16
sbb
ljmp
fsub
and
pusha
cmp
mov
je
out
movsl
jmp
rcrb
or
je
ret
xor
in
aam
lds
add
dec
stc
or
push
cld
orl
jbe
push
negb
test
or
gs
pusha
mov
jno
pop
xchg
test
mov
int3
xor
mov
mov
enter
pusha
push
aas
mov
mov
pop
xlat
movsl
or
test
cmp
xchg
lahf
lods
sbb
movsl
clc
pop
cmp
mov
imul
mov
pop
es
fidivrs
rcl
add
mov
sbb
xlat
pop
clc
test
xlat
dec
in
leave
add
sbb
add
mov
scas
pusha
outsb
and
xchg
imul
ret
repnz
aam
ret
dec
pop
add
xchg
insl
test
mov
orl
xchg
movl
lfs
mov
add
fs
xor
push
mov
jp
sbb
add
add
xchg
lcall
jecxz
mov
push
xlat
lea
add
jmp
mov
mov
and
xchg
mov
fdivs
arpl
mov
rep
pop
jp
cwtl
cmpl
hlt
jg
icebp
xchg
repnz
cld
es
pop
sar
jmp
mov
sbb
enter
cli
andb
cmp
and
xchg
sub
jecxz
imulb
lock
fwait
scas
jnp
aam
ljmp
adc
cmpl
push
dec
and
push
stc
sahf
inc
adc
jns
test
mov
outsb
mov
mov
push
fidivs
frstor
out
or
sub
int
and
xor
pop
into
and
mov
mov
sub
push
mov
xor
adc
mov
out
sub
jl
jp
cmp
leave
outsb
mov
nop
cmp
ja
cmpl
pop
or
fwait
das
fs
mov
stos
insb
insb
popf
pusha
loop
pop
stc
jb
lds
test
addb
jo
nop
stos
gs
cmp
pop
outsb
js
jnp
ds
jae
ret
sub
xor
sbb
scas
jp
std
inc
pop
call
inc
sbb
hlt
cmp
and
mov
push
pop
pop
push
xchg
fisttpl
inc
jne
jecxz
lods
iret
xor
xor
cmp
sub
dec
scas
add
add
jecxz
jb
test
push
inc
fidivrs
mov
stos
scas
popf
mov
iret
adc
fwait
sbb
jne
leave
mov
fsub
xor
jo
pusha
cmpsl
loop
pop
xor
inc
inc
das
lds
xchg
pop
inc
pop
int3
insl
and
into
into
addr16
xor
je
cli
or
mov
push
lahf
fadd
repz
test
sbb
ficomps
je
adc
pop
xlat
and
dec
outsb
adc
add
rclb
or
rcll
cmpl
leave
pop
out
push
jle
icebp
repnz
stos
fs
inc
xchg
les
int3
mov
sub
std
movsl
xchg
mov
inc
out
mov
leave
fwait
lahf
enter
xlat
mov
inc
cmp
push
iret
pop
or
sub
loop
add
sub
mov
pop
aas
inc
push
mov
and
adcb
lea
fsubrl
and
hlt
mov
push
add
lret
xor
aad
mov
or
xor
sbb
mul
imul
pushf
and
pop
int3
mov
js
fstl
fidivrl
repz
pop
adc
sbb
mov
ficomps
pop
std
push
dec
sarl
or
repnz
xor
adc
or
mov
mov
and
imul
mov
inc
test
jns
cwtl
sub
jmp
sbb
sbb
push
dec
and
pop
add
push
cmp
sbb
jns
lock
add
xchg
cs
and
inc
mov
mov
scas
int3
cmp
shlb
mov
cld
xlat
pop
xor
pop
cmc
push
ljmp
xchg
push
pop
jp
jne
das
sbb
mov
cmp
icebp
mov
dec
mov
add
adc
arpl
push
stc
hlt
pushf
push
adc
imul
jno
mov
loop
add
and
sub
and
jle
stc
pop
jge
dec
jae
stos
sub
lcall
repz
imul
daa
mov
sar
push
dec
data16
xchg
push
shlb
lcall
mov
mov
test
sahf
iret
lods
pusha
insl
push
stc
push
dec
push
frstor
add
div
mov
int
mov
dec
sub
iret
xchg
inc
gs
jb
imul
push
in
mov
int
fstpt
rclb
adcl
xchg
add
mov
cltd
aam
pop
loop
loope
sbb
xor
mov
lods
add
inc
stc
fs
std
nop
or
xchg
mov
sub
jge
mov
lea
xor
adc
or
lret
fidivl
xchg
jb
push
test
insb
cmp
jne
inc
pusha
stos
inc
mov
mov
lock
dec
xor
outsl
inc
fucomi
dec
out
sbb
or
and
repnz
add
cmp
and
push
andl
dec
sub
sub
and
lods
loopne
dec
lret
xchg
into
mov
andl
mov
hlt
jmp
and
inc
sahf
sbb
mov
aas
push
sub
jb
sbb
and
movl
sbb
call
iret
fidivrl
je
xchg
hlt
and
adc
adc
xchg
or
inc
add
pop
mov
dec
rcrl
sub
es
adc
push
cmpsl
fisttpll
push
addb
cmp
or
jge
inc
sub
and
roll
enter
fcoms
adc
out
add
loop
sbb
fdivl
clc
inc
adc
push
adc
int
mov
nop
or
mov
mov
leave
incl
pop
push
call
enter
adc
sbb
loope
mov
aaa
push
xchg
jae
fyl2xp1
addr16
imul
js
and
je
push
std
dec
loope
dec
icebp
or
push
out
and
fsub
ret
out
inc
je
sbb
mov
cmc
cmp
sbb
out
dec
xchg
add
or
inc
outsb
repnz
imul
cmpl
cmc
xchg
pusha
repnz
int3
andb
sub
add
idivl
loopne
mov
pop
test
sbb
rorb
mov
out
dec
testl
push
scas
jo
jmp
xchg
mov
or
fyl2x
out
xor
mov
sub
movsb
mov
dec
pop
jb
lcall
cmp
xor
and
mov
xchg
or
jp
rcrl
int
mov
nop
jne
daa
adc
pop
lidtl
repnz
test
pop
sbb
mov
xchg
mov
data16
mov
and
xlat
cld
jp
dec
subl
aaa
cmp
insl
icebp
int3
cmc
ret
add
jbe
mov
jg
mov
mov
mov
sbb
imul
je
mov
inc
cmpsb
jo
xchg
loopne
fsts
rcr
pushf
mov
sbb
push
popa
jmp
jnp
nop
xor
mov
adc
popf
imul
pop
lods
test
mov
pop
lock
fdivrl
jge
xchg
mov
jl
ret
push
adc
push
adc
aaa
or
mov
cmp
push
orb
cwtl
mov
jmp
push
mov
pop
es
sbb
dec
dec
sbb
fldcw
mov
popa
dec
push
adc
jne
add
test
adc
icebp
fcompl
sbb
inc
add
xchg
les
cmpsb
sub
test
fucom
lods
xchg
xor
leave
mov
fstps
int3
jmp
outsb
mov
pop
aaa
insb
pop
insb
xchg
pop
leave
mov
lcall
int3
dec
or
inc
jbe
lcall
ffree
cld
lret
sub
orb
cltd
cmpsl
in
sub
mov
mov
imul
loop
adc
xor
jecxz
mov
mov
cli
fdivl
jle
rorl
sti
icebp
mov
frstor
mov
jbe
xor
fiadds
dec
lcall
adc
xor
cmp
inc
cwtl
hlt
adc
mov
jp
aam
add
push
aaa
or
jg
stos
lds
xchg
insl
gs
out
push
pusha
clc
mov
xchg
xor
cmp
data16
cmp
mov
jl
cmp
dec
incl
pop
out
sub
add
sbbl
gs
sbb
push
aaa
or
fcmovne
std
mov
cmc
pop
pop
in
xchg
sbb
or
push
stos
add
push
cmp
and
mov
push
add
loopne
cmc
dec
out
jle
out
pusha
jno
xchg
mov
testb
cmpsb
call
cli
cwtl
movsl
cmp
sahf
popf
enter
add
fimuls
inc
inc
adc
xchg
stc
xor
xchg
dec
pop
dec
pop
xchg
xchg
mov
pop
and
fcomps
insb
std
enter
iret
dec
xchg
lock
sahf
or
mov
jbe
jmp
adc
cmp
nop
outsl
je
andl
mov
pop
arpl
cwtl
mov
sbb
popf
insb
clc
mov
arpl
and
jb
daa
pushf
pop
stc
repz
aas
sahf
fisubl
xchg
leave
inc
jge
push
mov
les
aam
cmp
xor
jl
ss
ret
xchg
and
in
sbbb
push
sub
cld
jecxz
jne
inc
cmp
xor
fisubrs
call
insl
lods
pop
add
data16
adc
sbb
sti
adcb
and
push
or
pop
inc
adc
xchg
add
xor
clc
das
and
jmp
ds
sbb
mov
mov
mov
sbb
lret
sub
pop
ret
scas
outsb
and
sahf
xor
mov
add
pusha
inc
je
out
add
fwait
cmc
rorl
xor
mov
push
movsl
xchg
lods
cmpsl
inc
in
aam
idiv
cmp
das
daa
xor
mov
outsb
out
out
push
pop
out
sbb
insb
pop
lock
push
sub
dec
loop
rcrl
call
cmp
cltd
xchg
cltd
test
inc
out
sbb
jbe
adc
jmp
lahf
jne
mov
pop
lods
sbb
jbe
rcl
dec
sub
inc
test
ret
lock
push
imul
lcall
sti
test
dec
insl
incl
sub
mov
mov
aaa
add
outsl
mov
sbb
xor
and
testb
ret
popa
out
inc
push
fucomip
sbb
mov
xchg
scas
in
push
mov
addl
dec
add
jno
outsb
in
sub
stos
mov
int
mov
mov
push
js
test
sbb
add
movsl
adcb
cld
popf
xor
scas
arpl
push
mov
popa
movsl
mov
jle
in
inc
andl
and
jg
loopne
loopne
mov
sub
sub
push
or
adc
incl
cld
les
add
mov
out
movsl
loopne
data16
nop
fs
aad
pop
mov
push
bound
xorb
cmp
orl
insl
sbb
stc
insb
aas
and
into
jmp
movsb
shlb
cld
and
lods
xchg
push
sahf
or
test
pop
push
pop
cli
mov
int
pushf
jecxz
imulb
and
cli
add
jbe
into
push
inc
fdivr
gs
repz
imul
sbb
inc
cs
add
movsl
in
dec
imul
leavew
xchg
jmp
inc
xor
mov
dec
pop
jp
and
bound
enter
cs
loope
cmc
ret
xor
or
add
repnz
jns
lahf
repnz
das
hlt
pushf
mov
cmp
add
dec
or
sub
aam
popf
ds
nop
cwtl
inc
stos
js
lcall
cmp
mov
push
iret
sbb
bound
in
dec
pop
movsb
xor
movsl
dec
xchg
cmp
mov
outsb
data16
xor
mov
dec
ror
xor
add
imul
jb
mov
call
mov
fbld
pop
fsubl
or
cltd
pop
jnp
push
adc
les
popf
repnz
xor
leave
call
jmp
gs
sub
loope
cli
mov
sbb
jbe
mov
mov
mov
inc
rcrl
xchg
cltd
dec
ja
fimuls
sbb
jnp
xlat
icebp
xorl
cld
cmpsl
push
ret
adc
mov
pushf
mov
mov
push
imul
mov
cmpsl
leave
xchg
icebp
mov
xor
pop
popf
arpl
jno
insl
in
mov
push
enter
into
push
sar
imul
std
inc
mov
sub
ret
mov
fwait
or
adc
icebp
dec
push
cs
add
insl
xchg
dec
xor
jb
inc
stos
cmpsl
pop
hlt
add
sbb
in
pop
inc
movsl
pop
lds
pop
mov
jns
idiv
push
addr16
call
inc
bound
xchg
xchg
dec
jno
cmp
sub
push
sbb
lea
ja
test
cs
movl
mov
cs
je
mov
mov
sbb
xor
xchg
pop
enter
lret
pop
aaa
lods
ficomps
push
cmp
into
add
loop
out
mov
lods
add
pop
cmpsl
add
jle
inc
out
pop
or
jbe
push
dec
ret
adc
sub
lods
mov
pcmpeqw
fldcw
cltd
jg
xchg
mov
ret
stc
pop
inc
pop
lcall
lea
mov
aas
sbbb
int
or
push
sti
push
mov
adc
add
scas
lds
ds
jbe
add
add
sbb
and
aas
in
mov
jae
sub
dec
rolb
test
aaa
sarb
lods
gs
xor
popf
xchg
ljmp
cmp
ss
cmc
jns
div
mov
outsl
in
int3
repnz
jns
pop
and
xor
das
daa
mov
sub
mov
mov
andl
jge
popf
int3
lret
jl
sbb
call
lea
jmp
iret
test
ljmp
ja
or
les
fwait
cmp
add
es
out
cmp
int
adcl
popa
enter
add
cltd
jg
scas
xlat
cmp
cli
or
data16
mov
mov
xlat
nop
pop
add
xor
mov
mov
adc
loope
adc
stc
inc
add
mov
test
jg
rorl
fildll
pop
jp
out
lds
cli
daa
jnp
jge
pop
notb
pop
ljmp
xorb
iret
loope
sbb
cltd
jo
add
inc
lret
arpl
sub
add
sbb
rcrl
dec
and
and
and
movsl
cmpsl
add
dec
test
cmp
jns
rol
pop
les
scas
cmpsb
mov
int3
cmp
divl
or
mov
dec
int3
insl
bound
pop
xor
adc
fbstp
xchg
mov
fs
out
fists
mov
iret
pop
cmp
outsb
xor
push
jmp
clc
ja
lahf
sbb
sbb
inc
ret
xchg
fwait
mov
fistps
insl
sbbb
rolb
mov
roll
push
dec
aam
pop
xor
jnp
xor
push
shrl
sub
jmp
pop
lods
repz
out
lds
push
push
int3
sahf
cmpsl
xorl
sti
or
xor
fsubs
mov
mov
repnz
insb
lahf
mov
es
mulb
incb
cmp
inc
mulb
inc
dec
push
mov
clc
in
sbb
fs
arpl
add
stos
push
pop
xchg
sbb
in
repnz
mov
xchg
pop
and
add
addr16
sahf
cmp
aaa
nopl
jmp
or
jnp
adc
mov
jp
test
aad
push
and
div
call
dec
cmpb
cmp
das
inc
movsb
cltd
sbb
xorps
jae
cmpsl
add
sti
mov
lock
jnp
adc
jns
pop
xchg
jl
mov
hlt
mov
cmp
xor
jecxz
rclb
adc
aam
rolb
cmpsb
incb
sub
mov
arpl
lock
cltd
outsl
lock
orb
ja
push
lods
adc
dec
enter
pop
out
xchg
and
rcl
jo
loope
mov
push
fldenv
xchg
xchg
aad
lods
movl
mov
loope
setne
add
mov
cmp
cld
mov
xor
mov
push
movsl
mov
xchg
aad
mov
nop
push
js
loope
das
mov
push
xchg
push
clc
dec
add
pushf
sbb
and
push
frstor
inc
mov
sbb
in
jns
inc
cmc
adc
jle
repz
repnz
pop
push
adc
adc
test
lret
mov
les
pop
aam
cmc
sbb
inc
mov
jno
xchg
nop
adc
or
mov
push
lahf
popf
cwtl
in
movsb
test
mov
cmp
pop
fwait
je
dec
sbb
fldcw
mov
add
pop
aam
mov
xchg
sbb
insl
daa
dec
dec
je
jmp
test
push
inc
shll
add
cmpsb
push
and
in
mov
fs
jmp
rcrl
mov
jb
in
movsb
scas
clc
in
sti
test
mov
fwait
in
dec
rcll
leave
cld
enter
movsb
cld
push
xchg
adc
lret
sar
push
stc
cmp
and
push
fs
ljmp
popf
arpl
ja
mov
fdivp
idivl
xor
lds
insl
imul
fstps
add
fdivrs
popa
rcr
push
adc
ljmp
sub
scas
std
sbb
push
enter
loop
nop
jge,pt
add
mov
xor
and
and
push
daa
pop
lret
cmp
arpl
negl
mov
jmp
xor
sbb
push
mov
add
clc
scas
rcr
call
aaa
aad
clc
mov
stos
push
test
int
cmp
cmp
mov
lret
movsb
ja
call
cmc
jg
push
or
loopne
lret
lcall
mov
push
rorl
inc
push
ret
outsb
push
repnz
mov
cmp
in
xchg
sbb
rcrb
mov
mov
xor
ljmp
repz
pop
xor
aaa
dec
dec
mov
mov
mov
sahf
insl
pop
pop
dec
cmpsb
stos
pop
inc
adc
stos
fsubrs
add
dec
fildll
adc
jae
mov
dec
loop
jbe
mov
movsb
push
call
outsb
and
mov
mov
xlat
int
or
inc
mov
adc
and
push
push
jns
js
movsl
stos
cs
mov
xor
fisubs
xchg
test
add
cmpsb
inc
mov
loopne
int
mov
movsl
roll
xor
out
enter
and
testl
aam
jl
xchg
pop
jne
loopne
xchg
cmpsl
jl
jb
xchg
adc
lcall
or
jecxz
push
outsb
cmc
call
or
adc
out
fwait
xchg
cmp
sbb
mov
mov
jp
ret
xchg
cmpsb
xchg
inc
inc
inc
mov
cld
add
add
stc
mov
stc
insb
mov
loopne
fisubrs
mov
clc
repz
adc
dec
lock
pop
inc
mov
out
sbb
add
jl
cmp
shrl
xchg
push
imul
cmc
adc
add
lret
jo
adc
mov
jno
xchg
pop
test
sub
stc
mov
pop
ret
add
sbb
rol
xor
lock
xor
xchg
xchg
inc
lods
rcll
add
imul
loopne
adc
pushf
scas
jge
pop
xchg
push
sbb
sbb
fdivs
xchg
dec
lahf
aam
add
lret
or
test
das
mov
mov
mov
mov
hlt
lcall
in
pop
push
xor
dec
mov
mov
pop
cmp
rorb
aaa
fsubrl
xor
call
insl
sub
insl
fsubp
int3
clc
jl
loop
xor
or
mov
sub
inc
pop
xchg
int
sub
imull
rolb
dec
jne
xchg
stc
je
imul
cmp
mov
inc
xlat
push
mov
jae
test
in
xor
call
fcomps
popa
xor
cmp
pop
mov
push
sbb
stos
pop
mov
push
aas
cwtd
fidivs
clc
ret
es
fldt
xchg
out
jg
test
jge
jnp
mov
sar
pop
mov
dec
lea
xchg
outsl
xrelease
loopne
ds
xor
pop
ja
fmulp
cwtl
or
aaa
sbb
fnsave
adcb
xor
xor
in
pop
pop
into
in
push
jbe
or
adc
dec
add
jns
mov
outsb
sub
mov
repnz
adc
dec
xor
in
jle
mov
and
popf
imul
or
sub
inc
lea
movsl
cmpl
lods
inc
pop
pusha
test
mov
adc
sub
dec
dec
sti
mov
out
inc
das
fistl
or
jl
shlb
mov
shr
push
hlt
cmpsb
dec
cmpsl
and
aad
loop
mov
hlt
mov
addl
fsubs
mov
negb
and
cmc
iret
and
mov
mov
loopne
and
das
sbb
cmp
imul
pusha
pushf
leave
mov
mov
dec
ja
mov
jns
out
loop
loop
out
aam
dec
mov
jle
push
aas
mov
sub
mov
cwtl
iret
add
pop
lahf
insl
jmp
jge
and
xchg
outsb
inc
jl
or
inc
aad
pop
pop
mov
lods
ret
divl
mov
mov
mov
aam
in
movsl
pop
jg
insl
mov
xchg
jmp
adc
push
fistps
scas
sbb
adc
imul
mov
idivb
sbb
mov
in
nop
imul
lea
mov
in
jmp
or
stos
add
movntq
pop
push
sbb
and
loope
in
sub
jo
jg,pt
mov
std
js
aam
pop
push
iret
rcll
jnp
test
frstor
pop
xor
dec
stos
push
adc
pop
js
test
jb
aad
imul
test
insb
dec
xor
lahf
or
jbe
dec
dec
xchg
push
fildl
inc
xchg
adc
or
xchg
dec
lahf
xor
mov
out
bound
jne
test
pop
lea
dec
cwtl
add
dec
outsb
add
cwtl
xor
lods
jmp
in
cmp
es
out
push
adcl
mov
cmp
push
data16
movsl
dec
jne
ds
sarl
test
aas
add
xor
xchg
sbb
pop
add
stc
shlb
pushf
mov
fcom
fprem
xchg
test
imul
cltd
cmp
jae
inc
sbb
das
mov
call
imul
push
iret
cli
pop
js
adc
push
stos
and
dec
out
inc
mov
xchg
push
leave
out
add
and
mov
cmp
movsb
sub
adc
mov
pop
inc
leave
jo
inc
push
adcb
out
shl
add
cmp
push
push
fnsave
xor
jae
jge
add
loope
adc
test
pop
inc
or
add
adc
jmp
sbb
jp
mov
sub
sbb
jle
cmpsl
inc
mov
jns
sub
push
push
inc
pop
pop
xchg
leave
icebp
dec
cmp
pop
jmp
scas
rorl
push
pop
cmp
cwtl
push
pop
fisttpll
jbe
fdiv
aam
gs
insl
insb
sub
sub
dec
cmpps
into
xor
cltd
xor
insb
push
fidivs
xchg
pop
imul
jmp
out
testb
inc
testb
adc
mull
inc
ficoml
mov
ret
out
out
insl
fsubs
movsb
lods
pop
pop
push
cltd
lret
add
xchg
cmp
orb
sub
fcompl
xlat
imul
xchg
ds
arpl
fmulp
nop
mov
sti
mov
ret
and
stc
repz
mov
sub
sub
iret
xchg
xchg
mov
push
insl
daa
test
loopne
cmp
pop
xchg
lret
dec
jge
in
rol
push
jecxz
int3
push
mull
and
clc
xchg
jl
ret
lcall
cmp
pop
lods
xor
and
sbb
mov
ret
add
push
jns
and
mov
lret
jge
inc
mov
sbb
jne
add
pop
fwait
cwtl
add
xchg
sbb
cmc
loop
stos
mov
mov
cmp
push
jl
or
mov
adc
scas
pop
fmuls
jb
loop
pop
xorb
lcall
mov
or
loope
test
cltd
mov
in
adc
dec
or
jmp
pop
dec
cmp
mov
ja
fsubr
sub
fcoml
mov
jl
nop
adc
inc
ret
add
pop
adc
cmp
ret
out
icebp
iret
scas
jl
mov
and
jb
add
scas
xor
xchg
fmuls
ror
les
mov
jmp
out
dec
sub
cmpsl
push
das
adc
inc
cli
pushf
fsubr
fbstp
jmp
pop
push
and
cmpsb
ljmp
test
arpl
and
cmp
repnz
cmp
mov
add
shll
in
bound
das
test
in
mov
and
mov
int3
call
imul
ja
xchg
shll
add
ds
aas
jmp
mov
hlt
add
fildl
cmp
mov
cmp
pop
iret
ret
cld
jns
dec
jecxz
rolb
add
mull
mov
mov
dec
sub
sti
xlat
pop
push
pop
das
lret
xchg
je
mov
fstpl
lcall
xchg
icebp
and
loop
mov
mov
imul
imul
dec
sbb
xor
xor
es
mov
jo
xor
xchg
cmp
loope
repnz
mov
xchg
punpckhbw
xchg
in
fcoms
movsl
es
test
sub
lcall
lock
jb
shrl
in
in
arpl
add
ret
mov
lahf
mov
cwtl
adc
notb
adc
lret
mov
pusha
jb
push
xchg
les
cs
std
jge
js
mov
pop
in
insb
test
and
call
and
in
lret
out
test
jae
cmpl
jbe
xchg
jge
daa
xchg
shl
push
push
mov
mull
pop
push
enter
and
jbe
f2xm1
lock
dec
push
les
shrl
cwtl
mov
sbb
jns
leave
or
mov
cmpsl
cmp
mov
shlb
add
je
sti
in
je
out
dec
test
pop
dec
aas
mov
int3
call
sbb
bound
shr
cs
xor
dec
push
mov
cmp
repz
dec
add
repz
jle
and
jecxz
or
nop
xlat
stos
jl
leave
leave
dec
scas
scas
mov
cld
adc
out
repz
loopne
xchg
jmp
adc
adcl
in
cmp
into
inc
pop
dec
pop
mull
mov
rorl
dec
xor
inc
ja
xchg
sbb
pop
jmp
aaa
add
cmp
add
lret
in
mov
out
ljmp
xor
pop
test
push
jmp
push
pop
cmpsb
aad
and
and
mov
loopne
xor
mov
bswap
popf
sbb
notl
mov
aas
sahf
add
cmpb
jmp
fcomp
push
cmp
call
lcall
or
pop
subl
push
xor
mov
jnp
sbb
aas
or
bound
fwait
leave
push
pop
mov
jno
add
pop
lods
and
mov
icebp
dec
hlt
mov
pop
insl
imul
inc
push
or
add
and
pop
xor
mov
cmp
jnp
das
retw
jp
push
jnp
xor
in
in
test
xchg
pop
mov
xor
cmp
jae
dec
rcrb
xchg
fmul
ret
fs
jae
adc
ret
sub
adc
loop
add
inc
andl
mov
add
sub
cli
mov
and
fstps
pop
loopne
dec
insb
inc
inc
pushf
pop
daa
rclb
data16
clc
jge
push
mov
xchg
das
mov
addl
jns
scas
inc
add
xor
add
aaa
mov
scas
adc
mov
fucomp
jb
sbb
jg
sub
fucomp
pop
dec
adc
and
psrlw
push
add
ret
mov
enter
test
loopne
pushl
int3
bound
popa
lret
fcomi
outsl
fnstsw
in
cmp
jae
icebp
divl
and
push
mov
add
stos
adc
dec
lret
lahf
cmpsl
and
jb
pop
pop
add
mov
cmp
xchg
adc
sub
mov
xchg
sbb
pop
data16
cs
cmp
push
push
cwtl
stos
call
mov
pop
push
add
sbb
popf
mov
lret
jae
loope
imul
sbb
mov
arpl
push
je
and
bound
mov
xor
adc
sub
fdivrp
jge
and
out
cli
insb
insb
cmpb
mov
push
xor
clc
push
lock
rolb
int3
jae
push
push
aad
das
lahf
xchg
dec
test
xchg
mov
int
mov
aam
out
dec
mov
sub
push
jecxz
xchg
xchg
cmp
sub
xchg
jp
mov
and
push
xchg
sub
rolb
imul
jbe
push
and
insb
adc
mov
stos
stos
xor
fisttps
adc
sbb
inc
lret
xchg
mov
or
cmpsb
jp
inc
into
ss
rol
aam
dec
filds
push
mov
test
scas
jns
push
aad
mov
adc
stc
leave
int3
pop
jmp
imul
cmc
aad
pop
jbe
add
mov
mov
xchg
test
bound
mov
xor
inc
pop
jae
add
lcall
fnstcw
in
ds
inc
loopne
cmpsl
adc
shr
dec
call
mov
xor
fmuls
mov
out
fmull
sbb
mov
fbstp
or
xchg
inc
push
fcmovu
fdivl
ficompl
cli
mov
push
pushf
sub
faddl
and
sbb
sbb
cmpl
loope
push
testl
pusha
jno
and
loopne
mov
or
test
stc
jl
cmp
push
mov
ss
repz
fldl
pop
out
rcr
mov
xor
add
jae
rclb
and
add
jg
sub
ljmp
pop
cmpsl
sub
xchg
jle
stos
and
pop
out
xor
shll
out
push
and
mov
cli
inc
xchg
xor
les
jnp
push
dec
notl
mov
sub
repnz
loopne
pop
add
sti
mov
sarl
daa
or
pushf
or
xchg
mov
cmp
pop
dec
cld
hlt
mov
pop
dec
push
fdivr
mov
das
jle
movsb
mov
adcl
scas
jae
mov
cld
cmp
mov
sbb
push
scas
sub
pop
add
or
fcomps
add
mov
outsb
mov
das
cmpsl
dec
xchg
lcall
xor
pushf
insb
imul
cmp
in
iret
sbb
jg
inc
inc
iret
or
out
aaa
repz
inc
sbb
cmpsl
push
jns
jae
sti
xchg
mov
pop
fists
mov
push
repz
shr
xor
je
mov
fcoml
jmp
add
inc
jnp
pop
les
add
pushf
stc
adc
jae
jo
push
lock
lahf
mov
icebp
and
mov
mov
jecxz
jge
loop
jl
or
mov
popa
inc
repnz
rclb
cs
clc
mov
add
ret
ss
shr
cmp
nop
cmp
mov
mov
and
inc
repz
mov
dec
lock
out
loope
pusha
jne
loope
jmp
sub
ret
idivl
pop
cmc
repnz
cmpsl
filds
test
mov
mov
mov
adc
aam
cwtl
sti
pop
and
out
adc
pop
mov
movsb
fildl
stos
subb
in
rcrl
jge
cwtl
testl
das
xchg
sub
lcall
into
push
out
add
and
inc
loop
sub
js
mov
out
std
cmp
mov
pop
adc
in
test
fstp
fsubrl
into
repnz
nop
sub
mov
push
popa
pop
test
sbb
xor
mov
pop
xchg
add
cld
rcrl
dec
icebp
movlps
and
bound
clc
push
mov
push
stos
jne
ldmxcsr
mov
icebp
aad
mov
inc
lock
rcrl
pop
andl
jle
mov
xchg
push
inc
jl
cmc
jl
inc
fdivr
shr
xor
jecxz
inc
xchg
loop
xchg
or
sahf
or
sub
sarl
fisubrs
add
dec
fcompl
push
xor
in
push
enter
and
sub
fsts
inc
rcrl
lods
jmp
sub
les
mov
mov
cmp
lcall
out
mov
xchg
icebp
cmpsl
and
cld
call
in
stos
in
lock
push
js
test
or
cmpsb
jecxz
push
mov
inc
mov
mov
ret
mov
push
mov
cmp
mov
pushf
mov
shr
pop
int
xchg
sbb
pop
or
aas
adc
and
loop
add
xchg
pop
add
inc
jmp
rcll
xchg
loope
mov
outsb
and
ret
push
and
sbb
push
push
jnp
push
lahf
rclb
sbb
inc
mov
icebp
pop
jo
xchg
adc
loopne
pusha
imul
xchg
xor
fdivrl
pusha
sub
inc
std
xchg
sbb
fwait
shll
pop
dec
mov
shll
cmp
or
test
mov
cltd
or
mov
cmp
sti
push
nop
xor
pop
push
lret
out
fwait
mov
cmp
fs
xor
mov
sbb
sub
jne
inc
imul
xor
adc
addr16
add
cli
ret
int3
mov
aaa
mov
cltd
andb
mov
xor
and
cmp
loopne
inc
shlb
jnp
adc
movsb
cmpsl
call
aaa
dec
enter
sbb
jge
lea
push
push
repz
in
sarl
iret
pop
pushf
fsubl
xor
out
lret
cli
out
pop
and
mov
cmp
pushf
addr16
loop
scas
jmp
pop
xchg
pop
mov
and
xor
and
mov
sbbl
int3
scas
rol
in
loopne
sbb
push
pop
xor
outsl
inc
aaa
mov
cmpsl
fneni(8087
iret
enter
jle
xlat
push
and
dec
push
fldenv
push
inc
sahf
pusha
mov
push
repz
int3
jmp
add
push
cmc
xor
stos
into
cmp
fisttpll
fwait
pusha
ficompl
dec
push
jg
sub
cld
mov
outsb
push
imul
ret
xor
lret
shrl
adc
daa
mov
mov
push
add
pop
dec
mov
pop
push
mov
ja
fistl
or
fisubrl
jo
inc
scas
pop
dec
cmp
test
cmpsb
inc
in
cmc
sbb
movsl
xlat
out
push
push
cmpb
add
xchg
cltd
sarb
sti
daa
jg
push
sub
push
lahf
dec
xchg
sub
pop
addb
stos
sub
xor
ret
data16
testb
aas
movsl
mov
testl
fcompl
mov
xchg
fs
push
pop
mov
pop
stos
mov
xchg
push
mov
mov
push
and
xchg
jg
flds
gs
push
aam
jb
xchg
and
mov
inc
andb
daa
xchg
pop
loope
test
push
daa
inc
cmpsb
paddq
cmp
cmp
idivl
shrl
repnz
and
nop
jno
xchg
aad
test
pop
sbb
fyl2x
cld
adc
inc
aam
cmp
and
cmp
sub
push
das
test
inc
push
dec
andb
lret
clc
imul
call
sub
adc
mov
add
idivb
adc
mov
shrb
mov
xor
lea
popf
inc
sub
or
or
mov
adc
sub
or
jl
lods
notb
andl
std
outsb
mov
inc
push
mov
fnsave
inc
fsts
adc
cmp
inc
sbb
jae
mov
mov
stos
cmp
aam
push
cmp
xchg
dec
call
int
js
mov
mov
stos
in
dec
cmp
fmuls
test
or
and
shl
es
call
inc
cmp
scas
sub
outsl
inc
les
rorb
sub
jge
data16
mov
jge
or
mov
push
dec
jge
jmp
push
inc
repnz
lods
stc
and
daa
and
sub
loope
cmp
fs
cmpsl
loope
xchg
mov
lock
test
push
mov
stos
sahf
inc
ds
adc
xchg
xlat
dec
cmp
sub
stc
and
filds
add
jae
mov
pop
gs
push
stos
ret
mov
xor
iret
daa
jb
out
mov
mov
xchg
test
sbb
lcall
cmpb
test
andl
idivb
test
sahf
or
add
adc
xchg
pushf
or
aas
fldt
or
cmpsl
into
call
imul
add
loopne
lods
mov
out
test
mov
ss
fimull
lcall
dec
jne
pop
xchg
dec
rdpmc
fsub
fmull
push
test
stos
imul
fbld
mov
or
xchg
lahf
data16
sub
inc
and
xchg
hlt
lret
je
inc
or
fldl
pop
inc
inc
xchg
mov
cmp
and
push
mov
addr16
adc
adc
daa
mov
pop
mov
repz
push
enter
mov
push
cwtl
pop
dec
pop
enter
outsl
cwtl
push
in
pop
jo
cmpsb
inc
flds
inc
jmp
aam
cmp
and
cltd
lds
jnp
scas
mov
in
fs
cld
xor
outsl
mov
jecxz
leave
cmc
jmp
mov
lods
daa
add
inc
sahf
or
sti
das
test
test
stos
sub
pop
mov
imul
lods
pop
and
in
add
repnz
in
stos
and
adc
ljmp
dec
imul
pop
xchg
adc
imul
ja
add
dec
push
aad
stc
mov
loopne
or
pop
and
loopne
and
cmp
jmp
xchg
mov
xor
mov
test
mov
imulb
cmp
aaa
or
add
and
jae
vmovntpd
fs
dec
dec
xchg
sbb
or
xchg
pusha
aam
xor
imul
out
insl
cmp
xor
push
vandps
sub
pop
mov
dec
jb
loop
push
pop
inc
add
int3
cli
and
aas
data16
insb
inc
pop
ret
jecxz
js
xor
cld
outsb
adc
xor
fmull
leave
aam
mov
imull
jo
cmp
xor
xlat
aaa
sbb
ficoms
mov
pop
stos
inc
shr
sbb
mov
mov
add
cld
xor
mov
dec
or
xadd
cwtl
push
push
aas
cltd
xor
subps
pop
cmpsb
inc
and
mov
popf
iret
fcmovbe
adc
subl
adc
xchg
iretw
mov
push
outsb
dec
mov
or
fcmovu
ret
xlat
push
dec
jbe
add
out
testb
adc
push
jecxz
adc
push
inc
mov
shl
pop
xor
and
jbe
dec
pop
mov
push
aad
fimuls
rclb
jbe
inc
inc
cmp
insb
inc
inc
fldcw
divl
pop
jne
popf
sbb
sbb
sbb
or
cwtl
lea
cmp
push
cwtl
inc
lret
ja
pushf
xchg
jo
add
xchg
rclb
lret
imul
dec
ret
roll
dec
roll
dec
and
mov
in
mov
adc
xchg
lret
xchg
es
jb
les
je
enter
or
rol
scas
jmp
mov
jmp
xor
jg
scas
dec
jbe
or
push
xchg
xchg
push
lds
mov
in
mov
cmp
and
in
shrb
js
das
mov
movsb
pop
inc
das
ret
popl
jecxz
shll
lret
push
dec
out
push
js
cltd
and
std
and
pop
pushf
iret
mov
xchg
lahf
dec
push
mov
scas
orb
add
bound
outsb
push
pusha
icebp
repnz
cld
dec
mov
shld
dec
mov
jb
and
add
outsl
ds
repnz
lahf
ret
xor
das
shlb
sub
sbb
mov
pop
repz
mov
add
pop
hlt
cmp
xchg
pusha
loope
jmp
fistps
aad
mov
jle
mov
sbbl
pop
loopne
cmp
mov
dec
rorb
clc
xchg
xchg
das
addr16
and
mov
mov
hlt
scas
cltd
call
das
mov
mov
push
lret
sub
and
cmpsb
pusha
push
and
add
loop
into
dec
cmp
xchg
mov
inc
pop
xchg
xchg
inc
xor
lock
repz
imul
iret
sub
cld
je
sub
xor
mov
xor
jp
pop
out
mov
mov
xchg
add
mov
jbe,pt
fcoms
pushf
dec
cwtl
push
dec
jo
lret
hlt
pop
fnstenv
cmp
inc
stos
insb
sbb
pminub
pop
xor
or
out
test
lds
lahf
idivl
loop
and
cmp
imul
and
lret
shrb
popa
mov
mov
jo
loope
jg
inc
gs
xchg
mov
pop
xchg
enter
add
jmp
mov
jmp
dec
jae
cld
scas
adc
jnp
push
repz
xchg
rcll
test
jns
inc
push
shl
or
mov
outsb
xchg
push
std
stos
pusha
movsb
arpl
call
test
shll
insb
pop
xchg
lret
xor
rcrb
out
xor
cmpl
or
dec
push
push
push
cmp
orb
dec
pop
add
hlt
jns
pop
movsb
add
inc
aaa
aad
sub
scas
mov
ja
pusha
dec
jno
enter
pop
sbb
push
movsl
insb
jae
mov
and
mov
jp
cmp
test
adc
leave
xchg
jle
stos
outsb
cmp
cmp
xor
out
aad
clc
push
into
xchg
imul
adc
inc
lea
daa
push
sbb
das
mov
jmp
xchg
test
push
cli
je
gs
lods
movsl
and
xchg
test
lret
aam
arpl
imul
outsl
jns
mov
push
ficoms
xor
pushf
fwait
insl
add
inc
add
xchg
cld
pop
arpl
aam
mov
int
arpl
mov
cmp
xchg
rclb
fidivrl
mov
cmc
xchg
cmp
loop
lahf
cmpsl
in
sub
or
pop
mov
inc
sbb
xor
call
mov
mov
push
adc
inc
mov
lock
lods
and
and
xchg
es
pop
fwait
push
lds
xchg
cli
mov
add
jmp
jns
stc
sbb
pop
sbb
loopne
mov
addr16
dec
mov
out
decb
mov
fimuls
cmp
scas
mov
push
add
add
jl
sub
es
lret
push
cmc
inc
mov
in
ret
mov
add
push
push
lds
sbb
stc
aad
mov
mov
pop
enter
inc
mov
pop
cmc
test
mov
dec
cli
sbb
xlat
pop
les
mov
push
outsl
stos
jnp
sbb
aaa
mov
push
aam
add
sbb
pop
fidivs
xorl
ret
push
cmp
push
push
jns
sbbb
por
andl
jno
lea
cmp
fistpl
sbb
jl
flds
decl
push
insl
fucomp
sti
jg
aaa
sub
mov
add
shrl
shr
mov
fucomi
xor
fdivrs
fs
push
ret
pop
cmc
sbbb
cmp
inc
sti
outsl
incb
shlb
xor
je
dec
xacquire
fucomi
ds
subl
mov
adc
xor
test
sub
push
jae
and
and
and
adc
loope
adcl
shl
or
push
stc
outsl
mov
inc
dec
lret
xchg
xchg
rcl
cmp
pop
loop
frstor
jmp
enter
call
jle
je
dec
push
pop
mov
pop
and
shrb
gs
arpl
jb
cltd
fsubs
jl
fcoms
mov
inc
movsl
pop
mov
sub
dec
push
scas
aam
into
lret
push
ja
enter
mov
out
inc
fcomip
mov
or
or
adc
push
cmp
pop
repnz
sub
xchg
cld
sti
push
das
call
jmp
or
out
mov
daa
pop
push
jb
xor
mov
jnp
fsub
xchg
sahf
aad
dec
mov
out
cltd
sbb
jl
scas
sbb
pop
add
adc
add
insb
les
jg
sbb
add
push
mov
mov
mov
sbb
in
xchg
dec
adc
outsl
pop
rcrl
pop
adc
mov
mov
or
mov
out
sbb
push
fs
push
call
pusha
clc
push
xchg
dec
out
push
dec
lock
mov
xor
push
mov
and
lea
or
and
test
into
adc
cld
pop
flds
or
shll
mov
outsb
jmp
or
ret
xlat
jno
mov
lods
in
adc
divl
mov
inc
shll
mov
shll
scas
int3
stos
ja
and
sub
stos
ss
ret
outsl
sub
ret
outsb
push
stos
and
mov
pop
das
loop
mov
pop
lret
mov
sub
aaa
pop
mov
arpl
daa
stc
xchg
mov
lahf
adc
xchg
adc
and
std
sbb
pop
mov
adc
jg
stos
mov
mov
xchg
jl
jmp
bound
pushf
xor
inc
cmp
cmp
and
divb
cmpsl
mov
insb
jnp
jne
movsb
inc
mov
mov
shr
mov
fistpl
pop
xor
iret
push
mov
daa
cld
pop
xor
jo
push
sub
cmp
mov
call
lods
xor
adc
push
cmp
call
push
outsb
shrl
push
pop
arpl
shll
movsb
cmpsl
add
sub
fisubs
cmp
push
push
fs
rclb
cwtl
js
sysret
jae
xchg
inc
mov
mov
aam
mov
inc
cmpsb
pushf
test
sahf
nop
sahf
mov
jge
sub
in
cmpsl
pop
xor
cmpsl
pop
mov
mov
int
mov
enter
insl
push
loop
pop
stos
daa
and
jmp
movsb
mov
xchg
xor
call
mov
movsl
jo
or
notb
jecxz
cld
dec
mov
sbb
xchg
push
stc
or
pop
adcl
cltd
push
and
cli
jmp
leave
xor
push
dec
add
mov
aas
iret
movsl
push
mov
cld
into
xchg
mov
cmpl
push
loope
fwait
xchg
dec
adc
push
out
roll
mov
out
int3
push
add
push
fisttpll
adc
loope
adc
mov
sahf
push
dec
and
pop
ds
xchg
dec
and
jns
dec
or
ds
jmp
mov
leave
push
bound
pop
dec
xchg
cmp
bnd
xchg
xchg
pop
jns
inc
sbb
xchg
cmpsb
mov
divb
sti
mov
cmpsb
fidivs
scas
icebp
dec
ss
mov
push
fwait
xchg
sub
inc
mov
cwtl
jl
and
inc
stos
loope
sahf
out
sbb
scas
adc
sub
js
jns
mov
and
inc
mov
sbb
sbb
das
rolb
or
ss
out
xchg
in
sub
xchg
adc
xchg
sbb
jle
ficompl
mov
fidivrl
dec
cmc
dec
repz
movsl
push
sub
cmp
stos
xor
cmc
in
xchg
mul
ds
jb
insb
jb
test
jp
push
pop
and
insb
pop
ljmp
inc
lret
mov
fidivs
jg
imul
push
adc
sub
and
mov
cmpl
sbb
ficompl
jecxz
and
das
dec
sti
fsubl
xchg
push
mov
je
push
pop
adc
xchg
and
insl
into
mov
enter
mov
push
aas
mov
and
mov
or
rolb
pminsw
cmpsb
gs
xchg
fidivrl
push
push
add
cmovg
mov
mov
test
mov
cmc
lahf
add
lods
stos
xor
movsl
jle
cmp
push
rcll
aas
les
ret
push
lock
sub
rcrb
inc
in
pop
rol
mov
mov
into
mov
sub
pop
lock
int3
or
or
pop
loopne
in
andl
inc
and
aad
andb
insl
push
cmp
int
cli
gs
and
inc
push
dec
push
push
mov
cmp
mov
xchg
arpl
push
aaa
hlt
sbb
dec
dec
in
packsswb
sub
adc
stc
pop
imul
dec
ljmp
push
xchg
ljmp
jno
mov
mov
pop
loope
ja
lock
int
enter
add
cmp
aaa
scas
aas
stos
fs
xchg
jno
jmp
sahf
cmpsl
pop
inc
lret
dec
es
dec
movb
mov
or
or
push
jmp
scas
dec
cmp
ret
jmp
sahf
dec
test
je
sbb
clc
fs
dec
jmp
xor
lods
cmp
mov
fstps
mov
cltd
push
jp
mov
inc
dec
xor
add
add
lahf
or
mov
repz
std
divl
inc
repnz
scas
ljmp
sbb
and
sbbl
cltd
subl
imul
adc
add
sbb
add
aam
mov
bound
inc
in
push
or
pop
jne
adc
dec
fcmovnb
lcall
jb
stos
movb
ljmp
call
pusha
xchg
int3
cs
addr16
cmp
push
cld
push
into
into
cmpsl
pop
xchg
nop
xchg
pushf
mov
bsf
mov
adc
sub
mov
sar
aad
int
pop
sub
pop
xorl
cwtl
aam
aad
pop
fiaddl
fiaddl
pushf
xor
jns
push
cs
add
xor
sbb
out
pop
add
imul
jno
icebp
call
lret
pop
gs
mov
pop
mov
repnz
add
mov
xchg
and
cmp
aad
mov
lahf
pop
test
sub
es
mov
jns
jno
add
test
jo
imul
pop
push
test
ljmp
jnp
lret
cmp
dec
jle
addr16
daa
imul
je
pop
push
nop
fildll
and
mov
nop
cmpsb
inc
std
pop
or
test
xchg
sub
aaa
jne
push
jp
pop
cmp
bound
into
in
mov
cltd
jae
ds
and
cmp
pop
mov
test
or
sbb
fwait
int3
dec
mov
add
sub
inc
and
inc
ja
mov
lods
call
pop
mov
lock
fwait
cld
scas
add
test
int3
lock
mov
sbb
pop
imul
leave
xchg
ljmp
sbb
or
sub
adc
xchg
xor
add
adc
jp
lret
aas
test
inc
adc
push
negb
fdivr
mov
pop
mov
sti
repnz
fldl
pop
push
cmp
repnz
in
mov
jmp
xor
inc
cmpb
push
and
cs
adc
or
lret
test
in
mov
jmp
ljmp
mov
mov
test
inc
scas
test
imul
insb
adc
pop
imul
jns
cmp
ror
mov
push
xlat
add
lret
cwtl
mov
movsl
fsts
jmp
in
in
decl
lcall
jg
fcomp
adc
sub
loop
enter
mov
add
inc
cmp
cmp
lods
loope
int3
movd
fistps
mov
inc
xlat
jns
adc
ss
fstpl
mov
inc
pop
xor
pop
mov
jo
pop
pop
ficompl
xor
pop
js
in
push
pop
outsl
fidivs
push
inc
push
xchg
pop
xchg
dec
adc
cmp
fs
adc
movsl
push
loop
pop
clc
sub
fstps
loope
xor
loope
jno
es
adc
push
aam
aad
dec
cmp
xchg
data16
in
loop
cmp
mov
and
inc
pop
fcmove
inc
xchg
xchg
push
push
add
push
movsb
add
or
or
sub
ljmp
or
push
sub
in
mov
lock
sub
ja
ret
fcoms
lret
pusha
dec
mov
mov
jecxz
jb
jb
mov
sbb
aas
stos
pop
jecxz
shll
cmp
mov
cmpsl
sub
jb
dec
dec
xchg
push
sub
sbb
fistl
and
clc
cs
fidivl
jp
jge
repnz
inc
jno
and
jb
bound
leave
xchg
fs
sub
xor
xchg
inc
lcall
loopne
or
mov
lahf
outsb
aad
cwtl
in
push
mov
fbstp
fmul
xchg
jno
pushf
sub
mov
lods
scas
clc
lds
repz
or
sub
lcall
imul
xchg
loop
addl
xor
iret
leave
sar
pop
gs
fstps
mov
sbb
sahf
stos
out
into
loop
xor
lock
mov
mov
push
cltd
rcl
sarb
jnp
mov
dec
inc
mov
push
ja
cmc
imul
lret
jo
jbe
dec
sbb
mov
lods
fwait
jo
jmp
xor
orb
jmp
loopne
and
out
cwtl
pop
xor
and
pop
in
cmpl
and
movsl
gs
sti
lea
stos
add
add
shl
pop
loopne
lds
dec
rcr
inc
jns
mov
jns
out
cltd
roll
ja
dec
xchg
mov
lret
paddsb
inc
or
mov
sbb
jge
sub
mov
and
out
icebp
pop
fsubl
xchg
pop
sub
les
push
add
adc
dec
pushf
or
test
cmpsb
xor
test
pusha
jns
xchg
roll
test
cwtl
jo
and
pop
bound
cmp
jecxz
shrl
pushf
pop
jmp
inc
sub
sub
inc
hlt
cmpl
xchg
das
and
sub
adc
xchg
rorb
push
scas
lret
addr16
std
mov
test
stos
sysenter
mov
outsl
mov
outsl
mov
pop
jle
xlat
mov
jnp
jg
test
sub
outsl
xchg
inc
test
pop
aam
das
mov
inc
cmpsb
arpl
sub
cmpsl
rolb
mov
aaa
cmpl
push
push
or
mov
fxch
push
mov
pop
daa
jne
jmp
add
push
mov
fdivp
push
test
push
pop
adc
xor
sbb
aaa
push
inc
xor
sahf
push
lret
fdivrs
and
enter
cli
pop
mov
cmpsl
sub
mov
adc
in
movsb
add
loope
into
daa
xchg
pop
cwtl
loop
mov
stc
sub
lret
push
je
jne
frstor
fisttps
mov
inc
pushf
gs
gs
sarb
pop
inc
arpl
jne
xchg
sub
clc
mov
pusha
into
jmp
imul
and
cmp
pushf
cli
sahf
rcrl
enter
aad
and
movsl
push
pop
jb
js
and
loope
add
mov
adc
lret
cmpsl
jb
arpl
add
mov
jmp
inc
lret
or
and
cwtl
sar
add
xor
jb
pushl
mov
cli
popf
push
mov
imul
cld
aad
loope
mov
pop
mov
sub
xchg
test
cmp
or
out
lea
mov
sub
scas
inc
cmp
jno
dec
cmpsl
cs
dec
faddl
fbstp
rol
xor
iret
movsb
filds
ret
cs
adc
in
cmp
ss
fstp
xchg
out
sbb
loopne
cli
outsl
repz
add
mov
cmp
in
sbb
lea
adc
out
add
jg
cmp
mov
mov
jecxz
sub
cmp
ret
xchg
and
pop
adc
jl
into
subb
iret
pop
jno
ret
inc
nop
or
outsl
paddsw
sbb
aam
jo
inc
js
inc
or
stc
and
es
loope,pn
sbb
fildl
jmp
sqrtps
and
pop
out
les
xchg
loope
sbb
jl
mov
mov
movl
sub
sbb
jecxz
mov
or
push
out
ss
outsl
js
arpl
pop
imul
adc
inc
sub
aad
ljmp
inc
jmp
push
inc
mov
adc
addr16
jp
mov
test
mov
adc
xor
and
adc
push
push
mov
pop
popf
lret
xchg
lret
mov
insb
jmp
inc
outsb
sbb
xor
jle
sbb
xor
jb
or
cmp
xor
mov
repnz
mov
fwait
adc
fisubrl
push
movsb
ljmp
mov
mov
ss
lahf
mov
mov
jle
lret
jnp
ficoml
push
xor
pop
sub
les
rcrl
iret
mov
cld
out
mov
dec
cltd
dec
dec
xor
idivl
xor
push
out
sub
mov
push
sub
dec
sti
lods
les
lret
int3
stos
ret
mov
jp
movsl
imul
pop
ljmp
sub
lcall
add
ja
sub
push
enter
sahf
pop
fucom
sub
sbb
xchg
and
lods
inc
sbb
jmp
loop
pop
ljmp
int3
in
ret
jecxz
cmc
xchg
pushf
jle
xor
scas
imul
lret
pop
cmp
add
push
or
xor
and
push
mov
fnstenv
pop
popa
int
fsubrl
sahf
in
popa
iret
jmp
sbb
es
pop
mov
inc
mov
and
test
loop
clc
clc
push
in
mov
mov
mov
xchg
jae
nop
imul
mov
and
out
repnz
sub
inc
fucomi
shlb
mov
or
aad
js
addb
jb
fcmovu
out
addb
lea
xor
insb
scas
mov
das
or
es
mov
ret
xchg
add
fwait
scas
jae
jne
arpl
mov
lret
sub
adcb
in
stos
je
imul
and
add
xchg
in
out
xchg
cs
test
xchg
sbb
xchg
stos
shll
sbb
add
ljmp
lea
lods
mov
rcrb
dec
pusha
push
cwtl
cmp
sti
imul
sub
cmp
outsl
jecxz
mov
inc
add
mov
and
sub
sbb
rcll
lcall
scas
push
xchg
addr16
das
pop
fadd
fnsave
jo
adc
xlat
loopne
rcrl
sub
adc
push
ds
nop
subb
jno
andl
enter
mov
aaa
in
cmpsb
mov
mov
nop
sbb
scas
jnp
adc
in
jge
and
dec
cmp
pop
push
pushf
mov
lods
add
sub
addr16
mov
adc
xchg
sub
jmp
ja
mov
xchg
or
xchg
adc
adc
sub
push
push
sbb
mov
out
out
call
lea
leave
dec
push
adc
outsb
jno
push
mov
sub
fcompl
add
pop
jecxz
mov
stos
mov
sub
push
lods
clc
mov
xchg
mov
arpl
add
adc
test
cli
das
xor
sub
mov
lock
sub
movsb
pop
mov
push
push
in
xor
sub
lret
add
test
mulb
push
jns
or
inc
ljmp
sub
xor
imull
mov
iret
pop
sbb
das
add
movsb
test
pop
or
xor
push
cmp
xchg
filds
cltd
mov
jo
cs
call
in
cmpsl
xchg
mov
sbb
clc
xchg
push
or
xor
mov
inc
sbb
dec
fimull
pop
cmp
push
sti
ljmp
mov
lcall
test
stc
sbb
sbb
sti
cmp
aaa
push
jle
sbb
xchg
add
pop
sub
aaa
das
dec
cs
cmpsl
pop
add
sub
inc
sbb
mov
mov
das
cmpsl
insb
pop
pop
pop
into
jne
test
sub
jo
pusha
jmp
xor
jp
leave
pop
aad
or
or
adcl
xlat
movsl
daa
notb
push
enter
lret
xor
adc
movsb
adc
fiaddl
es
call
mov
fldcw
pop
mov
test
ret
int
pop
jmp
mov
rcrl
sbb
mov
or
loopne
je
lret
mov
inc
xchg
aas
movsl
adc
loop
movsl
cmp
idivl
inc
push
mov
cmp
pop
dec
add
dec
popa
lea
sbb
and
jne
xor
xchg
xchg
mov
cmp
popf
mov
outsb
pop
dec
movsl
xlat
arpl
mov
sar
rolb
cmpsb
int
lea
mov
add
dec
sbb
adc
sub
sbb
les
xor
push
out
xor
outsl
dec
dec
sbb
mov
outsb
inc
cmc
loop
cmpsl
and
xor
inc
dec
lea
dec
test
add
hlt
cmpsb
in
arpl
frstor
jbe
pop
movsl
fwait
mov
xchg
mov
sbb
gs
shrb
iret
das
fistps
jecxz
lahf
shll
outsb
mov
sahf
cmpsl
sub
add
xchg
out
pop
loop
mov
sub
adc
pop
add
leave
cmpsb
xchg
and
lcall
xor
dec
push
jb
or
int3
lea
sti
or
inc
dec
mov
in
push
mov
cmp
nop
jp
les
leave
or
pop
out
test
inc
dec
test
fs
adc
mov
inc
mov
loop
test
fildl
sub
dec
in
movsl
pop
or
ret
and
mov
xor
mov
rcrl
cwtl
lods
jle
dec
inc
popf
mov
dec
mov
sub
sub
push
dec
xor
pop
imulb
jmp
js
jl
cmp
bound
push
pop
cltd
stos
inc
lahf
syscall
add
or
dec
rorb
or
adc
or
mov
jmp
mov
mov
lds
js
push
cld
jl
mov
insb
in
jbe
pop
mov
sub
mov
out
dec
add
adc
push
mov
push
in
lock
cmpsb
aam
cwtl
fcoms
mov
jle
jl
jmp
subb
xor
sub
pusha
leave
jmp
lcall
and
xchg
aas
icebp
pop
stc
and
daa
in
push
clc
xor
pop
mov
sarl
push
repz
lahf
cld
repz
arpl
cmpl
sub
aad
dec
repnz
lcall
lds
sbb
out
push
pop
cltd
cwtl
pop
sar
or
push
dec
jne
mov
push
mov
les
mov
xor
push
push
mov
cltd
fsubs
pop
push
pop
adc
push
xchg
pop
cmp
or
and
adc
and
sbb
mov
fcomp
pop
xchg
mov
and
pop
and
sti
mov
in
cmp
or
in
fdivrs
sbb
int3
xor
jae
rorl
imul
mov
cs
cmpsl
add
xchg
idivl
movsb
jne
aas
jmp
jl
rcl
outsb
ja
mov
ret
mov
scas
lcall
test
dec
mov
pop
outsl
subl
xchg
jb
jb
lods
mov
lock
pop
insl
and
out
mov
add
push
popf
sub
cli
sahf
sahf
ret
pop
mov
out
mov
xor
fwait
push
imul
iret
inc
xchg
lods
push
fdivrl
stos
inc
jg
icebp
push
sbb
xchg
adc
fadds
jns
and
push
push
ljmp
rcrl
xchg
popf
jne
jno
sub
inc
pop
sub
fisubrl
xchg
iret
or
and
jne
push
cld
sbb
stc
lahf
arpl
lods
sahf
jo
lods
insl
push
mov
dec
scas
ret
frstor
mov
loope
jl
repz
imul
in
and
pushf
jne
rorb
fstpt
jmp
dec
cmp
sub
or
xor
in
add
daa
mov
and
sbb
xchg
xlat
sub
lds
outsb
cmp
pop
out
jb
push
mov
movsl
mov
push
xor
cltd
sub
das
cltd
xchg
sub
mov
out
stc
shll
dec
push
pop
jmp
iret
dec
and
xor
cwtl
push
jb
mov
xchg
and
dec
inc
mov
jg
adc
sti
fs
loop
add
sub
or
pop
sub
or
or
push
xor
popf
xchg
leave
cmp
ja
call
lret
xor
imul
cs
loopne
cmp
push
xor
fcmovb
pusha
pop
sbb
inc
scas
pop
lods
sub
push
pop
ds
ja
imul
jb
inc
jl
nop
adc
in
inc
xor
inc
cmp
push
mov
cmpl
nop
out
jle
mov
pop
pop
inc
mov
mov
and
jne
pop
mov
insb
mov
inc
daa
dec
push
cmp
stos
adc
js
xchg
or
pop
pop
push
xchg
insl
inc
and
adc
fs
push
cmc
sbb
mov
push
sahf
repz
xchg
push
xorb
out
fcomps
imull
mov
shr
push
lahf
clc
xchg
test
loop
jbe
sub
lea
loop
sarb
fstpl
ss
clc
push
and
push
out
pop
mov
movsl
frstor
data16
clc
jle
insl
mov
add
movsl
xor
aad
lds
jmp
dec
xchg
lock
cmpsl
mov
ror
cmp
out
lods
and
adc
in
fdivs
cwtl
or
mov
push
cwtl
out
lods
xchg
int
mov
cmp
movsl
popf
pushf
and
mov
mov
xchg
cli
dec
jle
fwait
dec
adc
push
shll
inc
leave
mov
dec
push
add
dec
adc
cmp
aaa
pop
mov
jbe
stos
sub
pop
repnz
add
fldl
inc
in
pop
xor
adc
sbb
mov
mov
sahf
cmp
xor
cmp
mov
test
sahf
mov
adc
fstps
mov
jb
xchg
bound
xchg
repz
mov
jmp
pop
iret
data16
cmp
mov
imul
cmp
and
fimuls
dec
push
test
stos
xchg
loop
insl
cmpsb
mov
stc
or
test
pusha
cwtl
js
or
adc
std
in
jmp
notb
pop
dec
xlat
mov
hlt
sub
pop
push
call
xor
divb
or
sub
stc
or
add
xchg
jp
loope
jle
mov
dec
pop
xor
sub
and
mov
int3
outsb
ja
xor
test
popf
ljmp
xchg
push
mov
xchg
sbb
cmp
xchg
daa
mov
hlt
xor
sub
ja
mov
pop
std
pop
mov
jno
ljmp
inc
push
sub
and
dec
push
sub
lds
test
lahf
in
call
cmc
mov
lds
in
mov
and
sub
daa
pop
loop
sahf
leave
jp
cmpsl
lds
xor
loope
push
data16
cmp
ss
lea
dec
jne
or
jle,pn
cmpsl
push
fs
jecxz
and
dec
pushf
pop
int
cmp
xor
dec
pop
das
inc
call
outsl
sbb
push
ror
cld
mov
mov
pop
icebp
inc
fisttpl
push
xchg
lret
sbb
cltd
fsubrs
scas
js
dec
push
in
xor
mov
inc
jmp
les
gs
add
and
mov
cli
jge,pt
jae
mov
pusha
cmp
xor
jnp
stos
daa
mov
incl
push
loope
inc
jg
mov
jne
push
lods
or
pop
iret
lret
orb
lret
push
mov
dec
add
sti
daa
dec
and
loope
not
shrd
stos
test
inc
jmp
jno
popf
fists
call
jle
push
and
adc
pop
loop
sub
invd
lock
sti
mov
push
xchg
movzwl
fists
xchg
call
decb
xor
jnp
or
jns
ret
xchg
mov
and
jge
push
adc
inc
or
xor
in
mov
adc
lcall
cli
sahf
fwait
xchg
repnz
in
xlat
scas
push
in
int
bnd
inc
cli
add
pop
lods
in
ret
push
and
pushf
lods
test
leave
and
leave
adc
imul
push
into
ret
mov
sub
cs
and
int
adc
jnp
pushf
ja
dec
insb
inc
add
xchg
outsl
cmp
aad
sub
dec
sbb
xchg
icebp
jnp
push
pop
outsl
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
shlb
jp
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
bound
pop
jae
lret
inc
test
mov
push
lret
or
test
jg
ds
test
mov
cltd
mov
pop
scas
xor
sbb
adc
pop
add
jp
ljmp
adcl
adc
cmp
xor
js
lock
test
and
sub
xchg
push
in
adc
adc
cltd
mov
ja
rcrb
cmpsl
ljmp
loopne
push
lock
push
in
mov
jecxz
add
movsb
int
adc
in
pop
jg
jne
test
cmp
jg
adc
jns
xchg
ljmp
mov
call
rcrb
daa
jmp
xchg
ljmp
rclb
add
scas
jle
sbb
inc
lcall
jle
mov
push
data16
sub
test
sbb
jmp
xchg
ljmp
fcoms
mov
test
sbb
fcoms
jmp
xchg
ljmp
fcoms
jmp
sub
test
sbb
jmp
xchg
ljmp
aam
dec
call
mov
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fdivrs
mov
out
cld
test
clc
test
inc
daa
jmp
inc
out
cld
test
sbb
mov
test
sbb
cltd
or
mov
test
sbb
sbb
push
xlat
loopne
xchg
mov
test
rorb
jp
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
fcoms
jmp
xchg
ljmp
notl
sti
jp
rcrb
jle
xor
ja
dec
jnp
dec
cmp
lret
loope
std
pop
ja
jge
push
jp
and
arpl
insl
mov
fisttpl
testb
jno
sbb
outsb
and
ret
iret
sbb
jl
fmull
jno
and
mov
addl
push
xchg
imul
xchg
out
mov
push
fmuls
cmp
ret
adc
xorb
lcall
icebp
sub
shrd
test
pop
je
fiadds
push
mov
out
xor
mulb
or
sbb
int3
mov
sub
sbb
pop
push
cmc
mov
ficoml
sti
mov
ret
mov
cmpsb
sub
ret
popl
pop
test
clc
sbb
dec
jg
test
jb
sahf
je
cmp
push
xor
inc
mov
out
sub
mov
stos
cmp
mov
ds
xchg
repz
in
leave
daa
aas
jnp
mov
pop
jmp
xchg
push
adc
push
outsl
mov
pop
sub
fimuls
pop
out
inc
pop
or
sub
filds
and
ljmp
push
mov
or
push
cld
mov
xorl
mov
nop
sbb
xchg
aam
dec
push
xchg
outsb
push
dec
mov
sub
jnp
stos
lcall
push
cmpsl
out
movsl
cs
mov
mov
sti
add
adc
mov
inc
lcall
hlt
pop
ds
sub
in
movsl
xchg
jmp
cli
insl
cmp
xchg
std
pop
insb
ret
jno
jle
sbb
je
cmp
mov
dec
mov
pop
incl
mov
push
xor
xor
call
aam
and
adc
xor
jb
in
mov
push
testl
mov
pop
addl
xchg
leave
pop
stos
hlt
jae
sarb
push
fs
jl
int3
stc
out
out
test
pop
fmuls
xchg
in
add
ds
lds
lds
lock
sub
adc
pushl
sub
xor
addr16
divb
ds
mov
adc
xchg
lahf
nop
add
aaa
cwtl
sub
mov
cltd
dec
and
push
lcall
jl
into
hlt
repnz
shrl
add
mov
insb
cmp
push
xchg
in
lahf
fs
addb
js
push
xchg
cmc
mov
loop
mov
push
mov
in
xchg
insb
push
es
add
cwtl
mov
les
inc
movsl
cs
xor
imul
lahf
inc
jbe
pop
ljmp
enter
push
mov
stc
mov
out
jmp
fidivrs
scas
add
and
cmc
mov
in
dec
lods
popa
das
cmp
push
push
sahf
pop
jnp
push
sbb
xchg
out
pop
int3
pushf
and
xor
mov
xchg
mov
push
add
jno
jge
mov
add
into
dec
lds
push
loopne
and
lret
adc
clc
push
aaa
ja
nop
dec
cmc
popl
or
andb
cli
pop
inc
insb
inc
jns
leave
add
sub
das
daa
mov
xor
sbb
mov
leave
pop
or
test
adc
push
shlb
and
mov
sbb
dec
cmp
jmp
movsb
insb
aad
test
stos
push
movsl
dec
ljmp
sub
je
insb
ret
aas
je
aam
jmp
pop
inc
inc
call
lret
mov
pop
repz
push
mov
out
das
dec
fxch
in
add
xor
adcl
aam
add
jmp
loopne
aaa
sbb
or
hlt
shlb
dec
call
cmc
adc
dec
sbb
sub
fs
mov
adc
mov
adc
lret
mov
dec
inc
popa
nop
mov
mov
std
test
ror
add
test
into
mulb
movsb
mov
in
sbb
int3
xchg
out
lock
mov
inc
test
sarb
and
pushf
adc
cmpsb
inc
xchg
jae
push
ret
data16
jle
and
ljmp
stc
cs
repz
add
add
aas
xchg
pop
stc
mov
adc
lods
sub
adc
mov
mov
int
mov
cmpsb
lret
xchg
enter
push
mov
xchg
inc
xlat
repz
sbb
mov
jne
push
jns
out
pop
xlat
loope
aam
push
cmpsb
jb
push
mov
xchg
sub
mov
push
andb
jge
push
push
lods
mov
rcll
sub
cltd
pop
dec
jmp
push
out
jmp
imul
jne
sbbb
sbb
or
or
xor
push
cltd
xchg
inc
addb
icebp
insl
icebp
cs
pop
insb
and
mov
and
hlt
loopne
into
fmuls
sbb
or
out
mov
sbb
aaa
push
lea
jno
fdivl
bound
imul
mov
mov
xchg
lea
xchg
lahf
nop
jl,pt
imul
je
sbb
sub
push
and
adc
sarl
adc
jmp
daa
pop
adc
pop
mov
pop
push
push
loop
mov
cmc
out
add
xorl
test
xor
ja
int3
inc
dec
jmp
dec
jle
adc
and
inc
imul
and
js
fisubrl
addr16
int3
outsl
mov
add
mov
ds
pop
and
pusha
cmp
mov
fcmovnu
xchg
sub
fisubrs
cli
dec
dec
xchg
and
dec
jp
cmp
mov
jmp
mov
icebp
dec
mov
andb
adc
and
jbe
push
mov
pop
add
xchg
dec
fbld
out
push
loope
mov
or
inc
sub
ljmp
push
jge
js
push
dec
push
push
jns
add
dec
jp
or
sbb
mov
test
mov
repnz
mov
repz
adc
mov
addr16
push
adc
jl
je
mov
mov
cwtl
jne
adc
shll
push
add
or
sbb
nop
dec
mov
pusha
push
add
sbb
adcl
mov
out
stos
fisttpl
push
mov
testb
jle
jmp
mov
sbb
shll
addr16
sahf
mov
lds
rol
push
sub
push
divb
sub
scas
adc
out
inc
lock
mov
or
icebp
mov
mov
sub
clc
cs
mov
mov
cmp
pusha
xor
stos
adc
outsl
pop
sbb
mov
std
mov
fisubl
aad
lahf
cmp
dec
sub
or
imul
inc
mov
loope
jno
lahf
sbb
insb
call
pushf
clc
shrl
repz
cmp
cld
idiv
or
pushf
loope
icebp
mov
sbb
scas
pushf
add
pop
adc
cmp
aam
cmc
and
stos
mov
gs
movsl
cmpsl
js
outsl
mov
dec
cmpsl
sahf
sbb
mov
arpl
in
lods
enter
xchg
jb
or
in
sub
jae
loop
and
jp
xchg
shrb
add
inc
xchg
sahf
ds
mov
or
mov
pusha
bound
mov
xchg
add
mov
sub
xchg
or
jge
outsl
loop
out
repz
ret
iret
inc
hlt
jp
dec
or
loope
loopne
inc
or
add
shr
insl
cld
mov
sbbl
mov
enter
push
outsb
pop
scas
and
mulb
pop
add
int
movsl
add
je
adc
mov
mov
pop
movsb
sbbb
data16
pop
xor
push
mov
int
out
or
test
inc
mov
stos
jecxz
lret
pusha
rclb
xor
pop
out
cmp
enter
les
loope
sbb
mov
jbe
mov
and
cld
sbb
or
mov
sarl
lret
push
inc
xchg
outsl
sub
test
and
add
mov
push
negb
les
cmp
xor
sbb
ja
mov
lahf
stos
jns
mov
pop
xor
cmp
and
adc
sarl
aam
lods
leave
sub
leave
jl
std
xor
jmp
leave
dec
xchg
push
inc
sub
dec
sbb
mov
sub
in
bound
scas
mov
lcall
pusha
addb
push
mov
sub
test
andb
pusha
xchg
pop
add
adc
dec
inc
add
mov
and
push
lods
enter
dec
nop
ss
pop
jno
inc
dec
dec
cld
mov
jbe
dec
aaa
or
fisttps
cmpsb
repz
adc
sub
repz
pop
flds
push
movsb
dec
mov
cli
jno
ljmp
and
pop
push
subb
jb
mov
leave
rorb
mov
sbb
push
adc
sahf
push
mov
mov
icebp
sti
fisttpl
push
mov
cwtl
xor
aam
mov
int3
in
push
enter
in
mov
sahf
cltd
test
scas
shlb
mov
cld
outsb
lock
jnp
loopne
push
out
adc
int3
andl
out
movsb
filds
adc
ret
adc
or
mov
cmpsb
ja
dec
lcall
lock
addb
in
jae
xlat
adcb
push
add
pop
xchg
repz
gs
mov
jns
shlb
mov
icebp
bt
push
xlat
scas
rcrl
jne
in
daa
xor
popf
roll
pop
movsl
es
xor
mov
mov
jp
jae
movl
add
repz
push
inc
sub
aad
sub
xor
mov
and
cmp
xor
lahf
inc
jnp
sub
and
leave
and
jl
sti
adc
rorl
icebp
cmpsl
pop
call
clc
sub
cmp
lcall
push
cwtl
ds
int
jp
cwtl
je
ss
or
je
xchg
jmp
sub
xchg
cmp
in
daa
fstp
fidivrs
push
xchg
push
mov
inc
and
cli
cli
aam
clc
pop
add
inc
in
loop
mov
je
aam
or
ret
arpl
in
in
inc
push
loopne
add
insl
jno
es
and
jp
dec
cli
paddusb
out
mov
insb
pop
in
imul
mov
ljmp
dec
out
into
pusha
push
cmp
in
xchg
sub
jnp
add
jns
add
les
push
sub
aam
jae
rolb
pop
mov
mov
pop
jns
das
in
sub
inc
dec
mov
and
pusha
jge
cmp
cmp
cmpsl
mov
jecxz
scas
mov
sub
push
bound
cmpsb
cmp
scas
dec
mov
shrb
jp
jae
pop
andb
jnp
sahf
movsb
enter
pop
shl
into
imul
insl
mov
inc
cmc
cmp
or
push
sub
mov
push
insb
or
cmc
stos
aam
cld
into
hlt
or
adc
sbb
lods
aad
enter
cwtl
jge
lcall
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
