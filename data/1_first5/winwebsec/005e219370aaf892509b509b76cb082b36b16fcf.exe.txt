push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
inc
icebp
js
add
pop
int
and
stos
dec
aad
xchg
inc
dec
imul
dec
jecxz
sahf
dec
testb
xor
xchg
inc
out
pop
xlat
pop
adc
repz
rep
fmull
cmp
dec
idivb
stos
add
inc
push
stos
sahf
cltd
nop
jecxz
sub
fbld
mov
aam
mov
lret
or
dec
add
mov
inc
mov
ret
mov
fdivrl
test
nop
add
adc
and
mov
mov
movl
add
and
add
cwtl
addl
in
jge
gs
sbb
cmp
aas
sbb
ss
inc
adc
movsl
ret
pop
lahf
outsb
pop
out
pushf
pop
mov
dec
addr16
imul
inc
adc
dec
arpl
xor
arpl
dec
and
rcrb
stc
movsb
sub
xchg
sub
cwtl
repnz
je
jge
stc
add
daa
mov
jnp
mov
xor
das
xchg
push
ss
jmp
fsubrp
sub
xchg
leave
in
xorl
jle
mov
leave
jp
ljmp
jmp
test
ficoml
and
in
daa
lret
stos
jbe
mov
pop
jbe
xchg
and
insl
pop
xor
iret
test
pop
movsl
ja
push
and
lea
ss
pop
mov
test
mov
aaa
sbb
jns
out
addr16
mov
pop
sti
mov
xchg
cmp
pushl
jmp
iret
pop
incb
call
jb
dec
inc
push
dec
mov
mov
dec
push
lret
lock
push
pop
aaa
cmp
arpl
xchg
adc
add
add
mov
mov
pop
xchg
push
jno
enter
mov
cmp
sbb
cmc
incl
mov
push
jp
inc
cmpsl
cmp
add
test
out
xchg
rcr
outsb
xchg
and
fmuls
jo
adc
add
pushf
lods
mov
mov
out
int
mov
xchg
mov
mov
jmp
cwtl
jl
cld
lea
movsb
out
cmp
clc
aad
adc
cmp
orl
jmp
mov
cmp
js
ret
insl
and
push
repz
xor
mov
xlat
fsts
jge
xchg
inc
negl
pop
inc
hlt
lods
push
fldl
xor
inc
repz
add
mov
xlat
popf
jbe
arpl
aam
xor
pushf
dec
scas
imul
sub
mov
push
flds
mov
push
out
mov
xor
ja
sbb
in
xor
mov
push
cs
jnp
xor
sub
jns,pn
dec
lret
mov
mov
pop
ret
lds
mov
or
iret
sub
or
test
fisttpll
mov
pushl
testb
loopne
test
jle
add
in
push
fwait
jecxz
sbb
adc
shrb
fstl
cmpsb
or
or
jb
fstpt
mov
arpl
sarb
mov
push
or
inc
push
sbb
mov
sbb
ja
jno
push
xchg
mov
testb
mov
icebp
mov
mov
or
mov
cmp
ds
mov
jae
inc
insl
jb
lret
andl
jnp
mov
mov
rclb
or
cmp
and
shll
jnp
cmp
lahf
pop
ds
cltd
jmp
jbe
out
mov
push
jmp
enter
ja
xor
adc
sub
mov
dec
jl
jg
out
add
jo
dec
scas
testl
mov
and
shll
push
adc
pop
mov
mov
mov
test
cmp
pop
out
jge
gs
sub
push
out
xchg
push
inc
fstpl
jns
arpl
shll
adc
and
fcoml
mov
mov
sbb
inc
mov
inc
sub
cmp
cwtl
les
adcl
test
push
decl
mov
jg
jp
lahf
lods
mov
fwait
cmp
fstp
lcall
out
icebp
adc
xor
cmp
pop
shlb
xchg
sbb
scas
icebp
mov
mov
or
mov
arpl
ja
imul
out
test
aas
shll
or
or
push
add
fxch
push
lea
cmp
shrl
insb
ror
test
rcl
movsl
je
pop
cwtl
push
adc
jae
loopne
inc
or
lods
pop
cmp
jl
sub
lcall
push
jns
mov
mov
sbb
ja
lods
lock
jae
std
cmp
imul
mov
sbb
inc
movb
sarb
jmp
call
mov
ficompl
in
sbb
adc
cli
hlt
frstor
mov
push
sahf
xchg
fidivs
popf
ret
mov
int3
xchg
jge
sbb
or
or
sbb
mov
add
xor
test
js
dec
aam
shlb
lret
push
mov
fistpl
xor
fs
xchg
jp
fisttpll
lret
arpl
add
and
xchg
fldenv
pop
ret
or
xlat
out
lahf
cmp
jmp
mov
inc
pop
mov
repz
and
les
mov
jge,pn
pop
xchg
dec
lods
ja
or
mov
mov
aad
rorb
insb
mov
jmp
pop
shlb
pop
jnp
xor
and
add
cmp
mov
and
push
pushf
scas
fdivrs
leave
aaa
fs
push
xchg
sarl
dec
push
dec
jmp
jae
jp
imul
mov
insl
push
xchg
lea
test
adcb
mov
fistpll
cltd
lods
into
or
iret
mov
enter
in
in
sub
jmp
dec
mov
out
or
notb
add
je
inc
loopne
inc
lcall
mov
xor
and
xchg
aas
inc
mov
xor
xorl
fwait
sahf
mov
mov
mov
pop
cmc
xor
ja
adc
jo
loop
xchg
lea
push
notb
pusha
jne
dec
shr
xchg
pop
imul
push
pop
mov
mov
mov
daa
mov
sub
and
jbe
rcrb
mov
loop
movsb
fsub
ljmp
push
push
jne
mov
adc
loopne
inc
lret
or
pop
sarl
repz
lret
xchg
fcomip
xchg
scas
inc
out
push
pop
inc
inc
cmc
jmp
int3
lea
jo
adc
cmc
fstps
sbb
add
in
dec
repz
xchg
jne
pop
inc
sbb
cmc
jg
xchg
sub
outsl
jb
cmp
mov
mov
push
in
xlat
dec
bound
mov
mov
xchg
mov
bound
lahf
jne
mov
cltd
int3
dec
gs
xchg
inc
aam
fcmovu
movsb
mov
fbld
sbb
dec
dec
mov
push
pop
xor
imul
popa
test
xchg
je
sub
xchg
int3
insb
jle
jae
je
xchg
mov
add
pop
icebp
sahf
sub
arpl
lds
lret
repnz
mov
stos
imul
lahf
push
dec
and
les
std
jmp
and
push
mov
and
push
sbb
popa
aam
dec
xchg
xor
or
stos
insb
sbb
ret
movsl
nop
lods
and
stos
bound
popf
mov
cld
ret
adc
adc
dec
lcall
cmp
icebp
ret
dec
enter
xor
mov
mov
int3
push
sub
test
and
push
adc
mov
cmpsl
xor
fwait
out
ss
add
xor
dec
xor
inc
pop
repz
lea
lea
add
inc
ja
and
jno
pushf
add
lret
cmc
jno
xchg
test
in
cmpsl
pusha
sbb
in
push
test
imul
cs
repnz
lret
sbbl
add
pop
push
and
sbb
adc
pop
xchg
push
and
dec
pop
inc
and
mov
addb
icebp
jle
imul
jmp
jb
roll
push
not
jecxz
cmp
test
addr16
xor
into
adcl
sbb
inc
or
mov
sbb
xor
cmp
pop
rcrl
mov
mov
mov
xor
enter
mov
mov
stos
clc
adc
ss
jmp
or
das
loop
imul
addr16
cltd
push
xchg
sub
xchg
jo
adc
xor
lahf
mov
lock
arpl
pop
push
push
xor
jne
iret
sbb
rol
fsubl
fs
lea
mov
add
imul
lods
mov
sbb
adc
pushf
inc
mov
xchg
js
mov
dec
mov
ljmp
mov
push
adc
xchg
movsl
in
mov
mov
cmpsb
and
sbbl
and
mov
pusha
stos
popa
push
or
out
es
dec
or
mov
mov
push
in
hlt
and
jle
out
dec
jne
daa
lahf
dec
shlb
test
cmp
insb
mov
push
sarl
js
dec
imul
mov
outsb
cmp
outsl
or
mov
clc
fiadds
out
loope
in
cmp
ficomps
ret
or
shr
xor
inc
mov
psubsw
push
ja
in
sti
mov
and
add
or
std
ror
jbe
adcb
xchg
aam
xchg
inc
sub
imul
pop
int
jo
outsb
in
sbb
mov
mov
pop
mov
mov
sti
es
lds
mov
add
jle
mov
test
pop
adc
cmp
aad
mov
rcrl
bound
loopne
pop
sbb
cmp
stc
pushf
xchg
into
xchg
testb
je
push
mov
inc
lcall
push
sbb
and
mov
aad
sub
scas
cmc
je
mulb
cmp
xor
sub
ror
lods
or
add
add
xchg
arpl
popf
movsl
xlat
sbb
xchg
clc
cmp
mull
outsl
out
mov
dec
push
lahf
outsb
sbb
lcall
push
push
sub
push
movsl
sbb
adc
pop
inc
inc
cmpsl
fisttpl
pushf
movsl
fwait
sbbl
out
push
dec
dec
xchg
and
push
and
mov
adc
call
jg
int3
jg
xlat
add
popl
clc
jecxz
fwait
pop
mov
js
push
test
outsb
gs
push
push
sbb
pop
sbb
fs
loope
lret
test
std
out
sub
sbb
dec
jl
stos
cmpsl
push
fsubs
inc
hlt
add
cmp
addb
adc
sub
fadds
xchg
fnstenv
sub
jno
fst
pop
add
test
jne,pt
aam
pop
adc
aad
insl
mov
aaa
shrl
loopne
fadds
cmc
pop
xchg
jmp
lret
cmpsl
sti
sub
pop
jae
stos
mov
xchg
roll
aas
jns
lock
xor
call
lcall
roll
in
lret
stos
pop
stos
xor
out
xchg
sub
fcomps
jno
xchg
fadd
mov
jmp
rcrb
out
mov
imul
imul
cmc
or
mov
sub
or
push
fistpl
jg
outsl
stos
adc
movsl
or
push
jge
sub
jb
pop
fcoms
jns
fdivrl
push
mov
sub
cld
daa
push
lock
cmpsl
pushf
push
mov
std
int3
movsl
xchg
pop
and
clc
push
cmp
mov
jbe
mov
mov
mov
movsb
push
jle
xchg
mov
jl
shr
or
std
and
cmp
aas
pop
je
pusha
movb
fwait
scas
xchg
pushf
fcoms
pop
outsb
dec
inc
fisttpl
outsl
push
lcall
mov
imul
push
dec
push
outsl
fwait
inc
mov
cmc
mov
pop
cs
aaa
xor
fldt
cmp
ljmp
mov
leave
daa
and
ja
in
jmp
mov
in
sub
add
mov
clc
sub
adc
aas
loopne
movsb
mull
loop
mov
inc
push
dec
arpl
and
ret
and
jecxz
stos
jb
test
mov
and
sti
loope
fbld
cmp
fsubrl
iret
sahf
jo
push
leave
stos
mov
ror
fsubrl
sub
jge
cmpsl
inc
repz
sbb
out
loop
stos
jae
jnp
inc
add
data16
lcall
push
and
dec
push
out
cmp
in
inc
add
cli
sub
lret
jnp
call
cmpsb
aaa
ljmp
cmpsl
into
gs
icebp
push
mov
flds
add
rorb
aas
lds
xlat
aad
hlt
sahf
scas
pop
or
jmp
pop
sbb
mov
jg
lea
xor
or
xor
add
xchg
je
push
out
pop
cli
js
mov
es
jne
rcll
xchg
push
and
xchg
out
je
dec
lea
xlat
sbb
pushf
call
and
mov
dec
in
outsb
or
rorl
mov
add
inc
mov
inc
cs
cmpsb
aam
out
xchg
sub
dec
xchg
inc
pusha
imul
fldenv
jg
cmp
mov
and
aas
pop
std
sbb
in
pop
fs
push
rol
imul
cmpl
xchg
adcl
roll
ret
out
push
mov
cli
fildll
clc
adc
sub
ret
test
in
outsl
bound
xlat
fisttps
orl
cmp
int
test
vrcpps
ret
seto
mov
jno
ljmp
ficoms
sub
loope
outsb
mov
sbb
adc
lods
push
xchg
test
mov
orb
js
add
jmp
iret
inc
xlat
xchg
loope
pop
dec
in
icebp
popa
mov
shll
jl
data16
inc
in
int3
xor
clc
clc
lds
flds
xchg
sub
mov
cmc
lods
hlt
pop
cmp
cmp
jbe
mov
cmp
stc
push
test
test
popf
movsb
sbb
xchg
cld
dec
adc
sub
xor
bound
xchg
cli
sbb
inc
scas
xchg
lods
lcall
xor
jns
test
mov
or
test
push
pop
jle
mov
mov
fisttpll
cli
dec
inc
mov
stos
or
push
ss
into
pop
cmc
sub
sub
das
repz
pop
subl
frstor
dec
adc
ret
insb
sbb
int3
data16
mov
out
shll
rcl
enter
dec
les
int3
ja
test
inc
sub
test
sub
fstl
popf
imul
addr16
test
mov
popa
push
jg
mov
and
adc
fists
je
imul
in
jb
lret
shrl
mov
call
cmp
add
movsb
dec
pop
mov
stos
mov
cmp
or
cvtpi2ps
sbb
pop
dec
pop
cmpps
sbb
cld
sahf
mov
push
addb
lcall
and
nop
popf
push
test
pop
jg
insl
es
push
add
or
sahf
cmp
sbb
fidivrs
aaa
sub
cli
scas
int
int
int3
faddl
dec
sbb
sub
sbb
dec
sub
cmp
sarl
dec
push
in
sub
inc
push
leave
out
add
popf
mov
mov
cmp
jns
pop
adc
jbe
sbb
sahf
inc
aad
aas
xlat
ret
test
mov
or
pushf
xchg
and
imul
inc
pop
std
mov
xlat
mov
adc
mov
adc
xchg
sub
adc
jae
cmc
andb
push
shlb
jns
dec
stos
push
ss
adc
jb
xchg
xchg
cwtl
loopne
popa
dec
lahf
cmp
insb
and
cs
mov
jmp
hlt
call
mov
scas
jp
add
mov
xchg
add
hlt
ret
push
inc
in
mov
loopne
fcoml
sbb
insl
and
pop
data16
fisttpl
dec
movsb
xor
xchg
aas
pop
lahf
stos
pop
cwtl
jg
popf
shl
das
and
movsb
daa
and
jge
scas
aas
cmp
pop
into
and
enter
pop
ret
push
mov
popa
pop
add
pop
pop
and
movsb
sub
fistps
jmp
dec
outsl
push
xchg
into
xchg
stc
add
mov
mov
aaa
adcl
popf
jbe
add
xchg
cmc
mov
or
lds
mov
stos
jle
scas
sbb
shlb
xlat
jns
inc
mov
sbb
xor
xchg
dec
aam
sbb
fldl
adc
call
cmp
sub
cmpsb
inc
outsb
adc
ljmp
and
push
aam
outsl
push
push
adc
leave
cmp
jecxz
inc
aaa
setbe
popa
scas
dec
rcrl
loopne
rcrl
sub
into
sbb
outsl
xchg
test
in
loop
imul
pop
pop
ja
adc
test
fstpl
cmpsl
scas
leave
std
push
cmp
insb
insl
xchg
lods
pop
mov
inc
jle
mov
add
push
leave
xor
xchg
cmp
jge
push
dec
sub
lea
push
or
movsl
sahf
sbb
dec
add
push
stos
hlt
shl
pop
push
xchg
dec
lcall
mov
int
push
je
cmpsl
xor
sbb
popf
cs
mov
sub
andb
pop
lds
xor
add
xchg
stos
jbe
ds
xchg
repz
pop
js
cmpsb
int
inc
lret
cltd
jne
orb
mov
cmp
lods
inc
sub
repnz
sbb
lahf
iret
fstps
mov
mov
add
xchg
and
push
inc
std
lds
xor
or
jnp
pusha
xchg
outsl
ljmp
cmp
adc
pushf
stos
test
xchg
lock
mov
lret
bound
rcrb
repz
test
rolb
push
mov
inc
enter
push
cltd
pop
dec
loope
jno
pop
lret
imull
jnp
xor
sarb
jb
dec
in
int3
sbb
xor
adc
cmp
call
xchg
xchg
push
mov
imul
ret
mov
pusha
les
andl
sub
mov
mov
fstps
ds
jo
sahf
stc
loope
psubb
push
add
jp
stos
out
fnstenv
or
hlt
add
mov
and
push
pop
andl
icebp
hlt
lds
loop
cltd
inc
sbb
pop
fldl
jecxz
in
shll
fcmove
clc
push
scas
sbb
fcomp
dec
loope
or
mov
jp
sub
inc
jle
sbb
div
or
mov
psrlw
jl
jp
in
pop
insb
out
in
mov
fsubrl
mov
ja
fimull
pop
repz
int
rol
mov
fwait
sbb
in
dec
push
lcall
adc
dec
xor
mov
fdivl
lret
lret
movntps
test
or
in
push
jmp
xchg
mov
rorb
adcb
cmc
mov
dec
stos
or
repnz
lods
dec
popf
fisttpl
cmpsl
lret
lods
sahf
lea
xor
dec
xchg
pop
sbb
adc
out
or
das
dec
jecxz
cmc
iret
dec
lds
fsubr
xor
cwtl
lret
push
fldenv
xor
andb
xchg
xor
cmpsb
xchg
push
lret
sbb
aad
lock
repnz
xchg
cmpsl
mov
jge
pushf
sub
lods
cs
rcl
mov
in
sub
mov
ret
ret
in
dec
lods
fadds
push
cmp
xchg
loope
in
cmp
push
std
mov
sbb
ds
bound
lods
mov
inc
stos
mulb
add
shll
mov
out
xchg
ds
insb
jo
add
stos
inc
test
fadds
lret
push
pop
lret
cmp
mov
rclb
inc
mov
vpaddsb
jmp
fdivrl
pop
adc
ljmp
adc
mov
icebp
mov
sti
pop
inc
into
jo
daa
sbb
pusha
das
dec
sbb
fldt
je
pop
mov
sarb
adc
pop
fidivl
ror
mov
lret
dec
xchg
test
outsl
xchg
repnz
add
into
shlb
cmp
rcrl
loop
xor
cmpsl
int
int
leave
or
jbe
mov
and
aad
lret
popf
mov
addr16
adcl
or
sahf
mov
sahf
jge
mov
cwtl
cmp
bound
ficoms
je
jae
std
fwait
insl
jbe
mov
pop
xor
lods
push
fcoms
push
or
pop
mov
cld
popl
and
test
dec
mov
push
std
xorb
les
jmp
test
fisubl
test
adc
mov
push
add
cli
ja
in
xchg
jecxz
test
fimull
repnz
jecxz
mov
ljmp
jns
jg
int3
cmp
mov
mov
mov
dec
outsb
or
addl
outsb
adc
je
ret
out
lret
mov
xor
inc
mov
ja
sbb
mov
jg
call
mov
add
nop
scas
movsl
xchg
test
cmp
inc
and
call
pop
push
aas
jnp
orl
sahf
pop
mov
lods
fcmove
jnp
sbb
dec
sti
add
lea
dec
inc
cmp
or
sub
xor
fisttps
cmpsb
scas
jbe
mov
fstl
fs
xor
bound
mov
jle
lcall
shlb
out
mov
pop
jle
push
shrb
mov
sbb
jg
adc
arpl
loope
pop
mov
sub
xchg
pop
or
sub
push
mov
sub
stos
xor
adc
cmp
cltd
lock
sahf
sub
sbb
out
sub
cs
push
imul
std
jle
mov
lret
mov
pusha
push
xlat
or
sub
mov
cmp
dec
jle
xor
mov
mov
jbe
jns
mov
bnd
daa
test
xchg
inc
inc
or
mov
fcompl
jg
out
int
sub
mov
lock
inc
mov
mov
push
and
ret
xchg
mov
push
mov
dec
adc
out
and
fmull
jnp
movsb
add
push
les
sti
sub
add
jb
dec
jae
cmp
cmp
aaa
movsl
mov
push
dec
je
or
stos
aam
scas
dec
adc
dec
adcb
outsl
addr16
dec
and
cmp
push
sti
cmp
mov
jns
adc
popa
out
or
sub
sub
outsb
sbb
pop
xchg
popa
inc
pop
jnp
jb
out
stos
mov
ret
in
aad
jno
loop
lret
mov
pop
in
cmpsl
outsb
add
shll
test
fisttps
push
xlat
gs
outsb
leave
cmp
add
out
pushf
add
dec
scas
std
xchg
and
sub
pushl
sbb
std
and
pop
sub
sub
outsb
push
pop
cli
dec
ret
dec
push
jecxz
aas
push
mov
pop
sub
adc
or
xor
and
and
xchg
or
dec
mov
inc
cmp
jmp
subl
popa
aam
ljmp
aas
adc
popf
and
inc
mov
stos
jb
es
addr16
adc
lret
pop
hlt
divb
add
repnz
sbb
adcb
repz
push
add
or
xchg
cltd
pusha
in
sbb
ljmp
call
or
test
push
shll
in
nop
les
lock
push
cmp
hlt
out
jle
xchg
dec
in
push
pop
adc
mov
out
and
pop
push
mov
outsl
lahf
cmp
and
aas
xchg
xor
sbb
mov
leave
movsb
inc
int3
and
mov
cltd
dec
scas
mov
push
mov
inc
js
loop
shl
lahf
outsl
add
sbb
jge
rcll
js
push
inc
dec
push
xchg
xor
inc
fs
int
jb
dec
sbb
pop
fnsave
sti
jb
sub
sti
pop
add
jmp
mov
xor
pusha
fsubrp
aam
sbb
lea
cltd
pop
jp
dec
dec
jnp
jo
mov
movsb
movsb
sub
scas
dec
jp
sub
loope
cmp
mov
mov
inc
jno
lods
mov
sbb
sbb
xchg
data16
adc
dec
cmp
dec
mov
add
repnz
sub
popf
jg
pop
add
repnz
xchg
sti
mov
fucomip
leave
xorb
filds
sbb
sbb
and
gs
or
mov
xchg
dec
aas
cltd
pop
inc
mov
imul
or
mov
subl
dec
cld
cltd
mov
fsubl
adc
mov
test
dec
xor
push
daa
outsl
dec
shlb
repnz
push
mov
and
imul
std
dec
std
mov
cmp
sbb
test
mov
sti
xchg
int3
xchg
loopne
mov
dec
sub
fcoml
jecxz
lock
out
sub
stc
or
pop
test
insb
loop
mov
ss
sbb
fadd
and
xor
push
test
mov
xchg
jge
mov
add
xor
adc
mov
icebp
xchg
push
test
cmp
int3
pop
sub
push
aam
and
sti
into
xchg
insl
fyl2x
sbb
into
in
pop
add
cmp
ds
xor
popa
pop
push
lcall
push
aas
fmuls
mov
mov
mov
lods
fwait
idivb
mov
mov
dec
push
push
outsl
popf
mov
sahf
idivb
sub
bound
push
add
mov
loop
push
sbb
mov
add
adc
ja
cmc
sarl
add
jno
push
adc
lcall
ret
leave
jmp
ds
mov
sub
ret
push
imul
in
popa
in
xchg
pop
sbb
add
mov
fnstenv
jnp
mov
cmp
jmp
hlt
fdiv
out
push
popf
adc
xchg
je
int
data16
lcall
mov
out
jmp
stc
test
out
iret
push
xor
ficomps
inc
lods
mov
sbb
stos
mov
add
pop
scas
jmp
xchg
push
test
arpl
adc
rcll
loope
out
cmp
adc
cmpsl
lcall
and
xor
and
sub
xchg
cmpb
cmpsb
pop
lahf
pop
mov
faddp
mov
dec
or
jge
mov
adc
rolb
or
and
inc
jno
dec
push
hlt
xor
lret
test
pushf
push
and
pop
pusha
addr16
jbe
loopne
add
cli
pusha
cmp
sub
repnz
out
in
ret
jp
sub
jo
pop
adc
leave
test
dec
jnp
stos
rcll
bound
xchg
dec
dec
push
movsl
push
push
mov
sbb
pop
repz
sarl
add
sub
popf
mov
icebp
jbe
imul
or
mov
mov
xchg
push
pusha
pop
inc
les
jo
adc
sub
andl
mov
and
into
repz
or
mov
fadd
inc
aas
and
jle
stos
adc
fistl
push
dec
xor
push
pop
sub
cwtl
ja
es
clc
add
insb
xor
jb
and
int
and
movsl
xlat
repnz
push
jge
mov
jg
call
andl
adc
loop
or
lea
mov
les
les
in
xchg
lock
lcall
mov
mov
daa
lcall
push
clc
shll
sbbl
jnp
scas
mov
sbb
in
mov
call
int
xchg
fidivrl
fs
cli
test
push
imul
jb
push
adc
out
fs
mov
xchg
imul
mov
cmpsl
in
sbbl
adc
aad
pop
les
sub
xor
and
loopne
adc
jne
orl
int
push
sarl
or
mov
xor
stos
inc
pop
mov
mov
xor
mov
push
fisttps
cmp
pop
xchg
in
mov
test
adc
xlat
and
movsl
mov
lahf
repz
xchg
cmp
jno
faddp
adc
push
dec
sub
or
cs
loope
pop
dec
cmp
jg
fcompl
mov
mov
add
int
cmpsb
dec
pop
dec
test
push
xor
lock
and
cmp
ljmp
push
jb
sub
test
jmp
inc
xor
cltd
mov
adc
mov
mov
leave
mov
cmp
cmp
leave
inc
xor
dec
adc
xchg
lock
xchg
xchg
addb
enter
lret
scas
adc
lahf
ret
push
or
mov
nop
cmp
test
xor
lcall
subb
xchg
jge
mov
fmulp
pop
aad
push
sti
cmpsl
jecxz
lods
jle
fstl
call
dec
add
insb
add
hlt
and
mov
xor
xchg
push
mov
jl
or
sti
push
cmova
pop
mov
jns
xor
xchg
lret
xor
sub
mov
cmp
mov
inc
outsb
sbb
popf
jp
outsl
xchg
sbb
xchg
sbb
dec
mov
insb
fwait
pop
insb
pslld
mov
cli
push
test
mov
imul
fstp
pusha
lea
ficompl
stos
and
push
imul
mov
repz
jnp
xor
inc
out
fcmovnu
or
inc
add
aad
imul
push
adc
mov
into
nop
or
lock
adc
sbb
popa
shl
mov
aaa
adc
inc
sub
cmp
in
sub
cmp
cmpsl
mov
lea
mov
sahf
jo
or
imul
cmp
add
pop
ljmp
std
rcr
inc
insb
insl
cwtl
testl
and
lret
xchg
add
sub
lcall
je
or
insb
adc
sbb
dec
mul
cmp
roll
mov
lea
sub
dec
lods
and
movsb
push
dec
sbb
leave
lcall
cmp
ret
adcb
dec
jmp
cmpsl
adc
adc
adc
mov
push
mov
push
cltd
cmpsb
rcrb
dec
mov
pusha
push
inc
inc
push
fnsave
push
clc
repz
sub
out
or
loop
arpl
inc
nop
xor
mov
es
dec
jnp
xchg
daa
xlat
mov
shll
or
test
scas
ljmp
add
jae
cmp
pop
pop
pushf
cmp
lcall
shrb
jl
mov
in
mov
jns
push
arpl
and
aaa
xor
pop
adc
xor
xchg
leave
mov
inc
pop
jmp
dec
ss
mov
out
add
or
je
movsb
mov
in
jb
enter
jg
cmpl
mov
arpl
bound
sub
jge
orl
fists
arpl
les
mov
xor
dec
pop
jmp
hlt
adc
movsl
daa
daa
push
sarl
hlt
ljmp
push
cld
js
pop
push
lea
pop
cmpsb
inc
inc
or
fsubrs
int3
in
in
ja
cmp
into
je
jmp
fbld
aas
subb
es
ja
or
ja
pop
bound
pop
idivl
jne
sub
das
mov
xlat
lds
das
stos
pushf
nop
cmp
mov
add
pop
cld
test
xchg
add
data16
repnz
repz
cmp
fsubl
loop
mov
mov
mov
scas
jge
pushf
out
bound
push
xor
sub
cmp
add
jns
in
push
jb
lcall
imul
sub
int3
aad
es
mov
sbb
pop
out
lods
cmpsl
push
sbb
loope
mov
mov
movsb
pop
pop
repz
mov
iret
pop
sub
aam
lods
dec
xor
xchg
inc
xchg
fdivr
mov
xchg
lds
fbld
js
or
dec
sti
push
push
push
mov
push
or
xchg
mov
push
stos
jle
insb
add
mov
imul
push
dec
push
js
popa
sub
push
inc
fldcw
xor
jecxz
jmp
mov
repnz
imul
mov
stos
fs
sbb
or
fwait
imul
dec
mov
pop
pop
add
mov
inc
std
cmp
push
dec
mov
mov
inc
sbb
enter
sbb
cmp
ret
mov
and
lret
push
push
push
cmpsl
rorl
int
loope
add
decb
mov
sub
sub
insl
jo
jnp
imul
out
hlt
cmpsb
hlt
rolb
into
sub
jbe
mov
pusha
popa
inc
xchg
cli
shrb
push
fdivrs
mov
and
and
test
xor
loope
cmc
push
or
loope
mov
pop
sbb
mov
or
or
nop
js
int
mov
shl
pushf
and
dec
ret
jbe
and
decl
pop
lock
add
call
je
or
jbe
dec
loop
mov
xchg
sbb
fimull
mov
test
xchg
push
pop
push
dec
pushf
jne
jne
test
and
test
xchg
jb
mov
loop
ja
insl
arpl
push
push
inc
sub
addl
testl
cwtl
loope
lock
jecxz
loop
test
ljmp
xchg
movsl
xor
rcl
xchg
sbb
pop
inc
cmp
push
push
dec
push
cltd
add
xchg
inc
out
hlt
or
xlat
jbe
pusha
mov
fsts
dec
push
or
mov
js
mov
ja
fstpt
lcall
xchg
rcl
xlat
movsb
sub
inc
ljmp
dec
jne
jne
push
xchg
push
rol
fadds
or
icebp
cmp
xchg
ret
and
out
mov
or
fdiv
jmp
push
mov
in
mov
shl
sti
adc
addl
cli
ljmp
push
shll
nop
push
mov
push
loopne
repz
in
mov
mov
inc
and
and
and
or
mov
jecxz
cmp
testb
or
sti
cmp
addb
aas
nop
outsb
and
jo
mov
icebp
xchg
subl
or
pushf
loopne
or
inc
mov
mov
movsl
add
add
dec
mov
cmp
adc
jnp
enter
jge
jae
imul
inc
ficoms
xor
push
sbb
xor
test
xchg
pavgb
jg
cmpsb
imul
enter
negl
sbb
dec
loop
test
rol
incl
xchg
adc
imul
jge
mov
jmp
push
loop
jae
out
mov
pop
loop
inc
sub
push
push
jns
jp
or
cmp
jbe
insl
and
add
push
rcr
xor
fs
shll
aas
jo
scas
mov
out
mov
mov
mov
test
not
xchg
and
mov
ljmp
mov
push
mov
aad
adc
ja
mov
push
mov
std
sub
jne
ljmp
mov
fs
push
icebp
or
mov
sbb
repz
and
inc
out
xor
mov
data16
sub
in
or
shrl
push
jns
sub
mov
mov
cli
fisubrs
stos
lds
or
sbb
popf
scas
mov
or
or
dec
jo
repnz
xor
mov
xor
and
mov
popf
dec
or
stos
mov
test
push
ja
scas
enter
out
cmp
je
movsl
push
in
out
or
mov
jns
jb
dec
cmpsb
push
bound
popa
in
test
xchg
arpl
xchg
lods
mov
xchg
aam
pop
cmpsb
jg
lds
mov
cwtl
jns
fistpl
pop
and
test
xchg
test
cmp
and
jnp
int3
lock
push
loop
testl
adc
in
clc
les
adc
xor
ss
mov
leave
mov
sub
insl
cmp
cmc
sub
cmp
xchg
testl
pop
sub
mov
in
mov
xor
mov
or
adc
cmc
out
lds
pop
fmull
std
sbb
fcmovnu
push
dec
imul
cmc
enter
roll
fwait
xchg
and
pop
pop
pop
xorl
insb
aad
add
into
mov
insb
push
inc
iret
push
ljmp
loope
shlb
cmp
cli
push
lahf
inc
mov
pop
inc
fdivs
add
into
jg
subl
sbb
mulb
ficomps
jne
mov
xchg
cmpsb
enter
mov
lock
rolb
inc
mov
imul
inc
call
out
shl
or
ror
dec
xchg
fnstenv
pop
and
lret
sti
jns
pop
pop
fs
lods
sbb
fstps
mov
call
jmp
jmp
ficoml
dec
or
js
cli
push
mov
push
sub
orl
les
mov
int
mov
test
or
ror
push
jle
loop
mov
push
aam
rcrb
lcall
push
lods
sub
dec
aam
mov
or
and
cmpsl
hlt
push
dec
mov
in
sbb
sti
lret
test
xchg
dec
cmp
into
push
and
jge
mov
int3
in
loop
mov
stos
test
mov
call
jg,pt
pop
and
or
fcoms
adc
mov
and
mov
cmpsl
mov
xchg
and
shlb
pop
mov
dec
int
pop
push
cmp
test
les
jge
sahf
mul
add
test
push
jae
cmp
and
xchg
push
sbb
sti
sub
sbb
pop
test
or
adc
mov
xor
adc
loopw
pushf
mov
mov
mov
dec
or
imul
cmp
add
ds
inc
or
push
in
cmp
or
push
or
das
in
add
mov
in
cmp
dec
les
andl
lahf
sarl
pop
pop
jmp
addr16
sbb
xor
adc
sub
cltd
cmpsl
inc
xchg
je
dec
lock
xchg
pop
and
fsubrs
jo
aad
mov
pusha
add
and
popa
or
xor
mov
add
fs
jecxz
and
jp
push
test
cli
movsb
pop
fdivp
ja
xchg
enter
pop
xor
les
or
clc
movb
jecxz
flds
sti
sbbl
xchg
gs
or
jp
dec
or
inc
in
movsb
adc
shlb
lret
mov
jecxz
xchg
stos
inc
aam
movsb
xor
pop
incl
fildl
ds
xchg
sbb
add
iret
jae
jnp
mov
pushf
adc
cmp
push
pop
push
push
xchg
hlt
cmpsb
sbb
dec
dec
scas
div
cwtl
ja
inc
aaa
enter
cmp
mov
and
inc
outsl
sti
and
movsb
std
roll
pop
jnp
add
xor
frstor
xor
and
insb
inc
push
lret
jmp
cmpsb
dec
pop
cmp
ror
sub
mov
mov
test
sub
sub
ret
add
xor
inc
xlat
pop
aas
and
in
add
leave
sbb
or
dec
mov
hlt
xor
mov
into
pusha
sbb
jnp
pop
daa
jo
lret
lods
mov
sbb
pop
into
notl
push
push
or
sub
xor
iret
lcall
inc
lcall
test
inc
or
test
loop
lods
mov
push
loope
xchg
mov
test
insb
mov
cltd
cmpl
or
jne
mov
xchg
popf
mov
loope
xor
aad
movsb
outsl
cltd
jecxz
mov
test
fwait
push
cmp
bound
jp
sbb
mov
xlat
sub
mov
pop
test
cmc
popa
test
clc
aaa
xchg
sub
ret
sbb
and
ss
jb
mov
sbb
daa
stc
xor
adc
dec
hlt
int3
and
inc
add
out
sub
xchg
adc
cltd
stos
add
or
in
jg
xchg
push
lea
add
add
adc
lcall
dec
stos
movsl
sahf
fildl
mov
push
ds
sub
push
ss
repz
xor
out
dec
or
pop
adc
pop
mov
lret
jae
pop
add
nopl
fimuls
ja
xor
dec
sbbb
in
pop
push
jl
lock
scas
scas
cs
test
cli
xor
sahf
outsb
addb
sub
xorb
pop
shll
or
cli
push
jbe
or
mov
jmp
jae
xchg
fwait
notl
pop
pop
mov
icebp
push
xor
mov
sub
add
aad
xchg
iret
or
sub
add
mov
mov
fs
xlat
js
or
fdivrl
sbbl
fwait
mov
adc
out
inc
sub
and
lods
out
mov
xchg
dec
pop
adc
add
gs
incl
sub
jae
pop
cmp
clc
pop
xor
jmp
das
adcl
outsl
xchg
test
clc
push
dec
cmpsl
cwtl
xlat
mov
cmp
push
pushf
movsl
mov
stos
movsl
mov
dec
cmc
jmp
data16
pop
sub
les
mov
ficoms
ret
dec
lcall
push
or
cltd
jmp
es
outsl
or
mov
arpl
adc
rclb
aas
icebp
and
adc
or
pop
dec
loopne
inc
xor
out
dec
aas
iret
out
stos
imul
loope
rcrb
int
ljmp
xor
inc
shlb
repnz
js
sub
jg
not
mov
incl
hlt
adc
in
in
ret
or
inc
pop
add
cmp
int3
cmpl
lahf
jb
aam
cmp
push
inc
ljmp
cld
xchg
jo
cmpsl
or
stos
jno
sub
jg
inc
sbb
adc
jne
xor
inc
fbstp
fmuls
inc
jbe
xor
lea
aam
enter
dec
jno
fdivl
mov
lcall
cmp
das
sub
ss
fldl
ljmp
and
sub
insl
cld
sbb
fs
sbb
mov
outsb
addr16
in
clc
das
jo
mov
out
and
jl
jns
xor
jp
push
mov
and
fildll
xchg
in
push
addb
push
and
mov
mov
sub
adc
ret
shll
add
and
push
in
aam
sbb
shll
xor
test
loop
gs
jp
shlb
cmp
movl
ret
pop
popw
cwtl
mov
dec
sub
popa
lods
bound
fs
sub
add
sbb
in
cmp
adc
xchg
nop
ret
mov
insb
sub
sub
xor
leave
push
push
pop
sbb
sub
nop
jge
mov
call
mov
loop
add
sbb
adcl
and
imul
dec
add
push
fs
dec
loope
add
jp
data16
mov
and
sbb
andl
into
jp
cmpl
aam
add
aam
lea
pop
jp
movsl
or
pop
outsl
mov
pop
ror
mov
add
dec
movsb
lds
push
or
es
addr16
push
xchg
jne
jmp
in
xor
add
mov
dec
rcr
mov
or
out
mov
insb
sbb
sbbl
sub
cld
pop
inc
or
jae
xor
mov
push
cwtl
lods
loop
mov
jl
mov
sbb
fidivrl
inc
cmp
stos
iret
add
xor
inc
into
xor
xchg
cmp
aam
add
enter
add
out
jb
xor
and
imul
xchg
mov
imul
push
ficomps
inc
nop
das
mov
cmp
daa
fsubl
sub
mov
scas
xor
jne
push
mov
mov
data16
inc
je
fdivs
in
fmul
mov
in
loopne
data16
movsb
test
scas
jmp
rol
pop
or
cmp
dec
imul
pop
stos
pop
out
das
jno
nop
pop
out
mov
lods
or
sub
jp
test
push
adc
xchg
or
stc
std
push
dec
sbb
bound
xchg
mov
and
xor
and
rclb
xor
xor
or
call
sbb
jle
shll
fwait
imul
mov
fbstp
popa
xor
sub
stc
dec
fbstp
mov
cmp
inc
dec
popf
insb
mov
adc
adc
imul
mov
mov
popa
add
arpl
icebp
shlb
xor
loopne
xchg
rorb
enter
push
xor
dec
dec
lahf
sbb
pop
or
test
sub
out
stos
jnp
mov
call
add
adc
das
mov
ds
pop
xchg
inc
or
in
jp
cmp
sub
sahf
jmp
ret
sbb
call
iret
or
cmpsl
mov
dec
lahf
insb
push
mov
into
in
sbb
mov
lods
sub
inc
cli
notb
mov
xchg
and
mov
fisubl
shrb
push
ljmp
xchg
and
popa
mov
sbbb
loopne
pushf
add
or
jg
cmp
mov
adc
xchg
push
xchg
jns
sub
std
ds
mov
xor
daa
push
arpl
or
sti
push
sbb
andl
dec
jge
lret
dec
je
and
dec
scas
test
stos
dec
lds
popa
add
imul
push
xorb
call
sbb
in
mov
data16
push
cmp
into
imul
xorl
jbe
mov
mov
popf
cmp
pcmpeqb
lret
out
xchg
imul
adc
add
ss
stos
cmp
popa
jns
dec
rcll
leave
jno
into
sub
fidivrs
je
les
es
mov
imul
dec
shll
fwait
mov
push
ror
mov
fs
popf
xchg
test
or
adc
mov
sets
das
loop
shll
imul
adc
sub
inc
pusha
jno
pop
mov
pop
mov
add
pushf
inc
scas
mov
sarb
cmp
rorl
bound
sbb
mov
cmp
push
mov
loope
inc
xchg
pop
into
scas
lret
mov
add
sub
sbb
xchg
or
or
push
or
fimuls
add
push
sbb
jo
lcall
daa
dec
sub
and
popf
pop
push
dec
jnp
jae
and
fs
int
hlt
xchg
xchg
sti
mov
sbb
cmp
stos
lea
cmp
xor
int3
in
add
xor
and
sub
add
jl
es
hlt
sub
cmp
rclb
icebp
push
lea
mov
in
rorl
repz
push
sbb
xor
sub
mov
xchg
xor
rcrb
push
pop
ss
fiaddl
cmpl
push
movsb
mov
pop
inc
sub
and
hlt
or
push
mov
test
les
sbb
sbbb
jp
outsl
bound
cmp
out
inc
cmp
andb
ret
add
test
adc
lods
dec
sbb
aam
popf
addr16
jmp
dec
lea
push
jmp
add
mov
xchg
inc
push
movsl
rolb
mov
jnp
xor
cmp
aaa
or
inc
jbe
push
cmp
les
jbe
sar
in
xchg
jle
in
jmp
mov
cmpsl
inc
in
movsb
ret
das
pop
jno
mov
mov
int3
dec
rolb
inc
jge
sub
repnz
push
or
sub
lcall
pusha
xor
mov
jle
cmp
fildl
push
adc
rolb
arpl
xor
stos
lods
or
sbb
jbe
and
and
sti
mov
ja
xchg
cwtl
out
fwait
lret
into
cmp
test
jns
aam
subb
lret
sbb
xlat
xor
addr16
lcall
push
and
jg
inc
pop
cmpsl
popf
cli
rol
imul
xor
unpcklps
add
add
inc
push
pop
xchg
adc
daa
neg
rorb
jnp
push
fldl2t
dec
rolb
nop
cmp
call
fwait
inc
imul
xchg
inc
imul
cmp
repnz
sti
mov
mov
fnstcw
pop
jmp
data16
fxch
or
fidivs
jnp
mov
hlt
sub
jge
cmpsl
fisttpll
xor
and
and
pop
dec
mov
fcmovnbe
scas
sahf
xchg
jmp
add
mov
stc
aam
test
sbb
clc
mov
hlt
insl
adcb
stc
shrl
in
les
and
bound
les
push
adc
mov
lock
jl
and
in
inc
lods
mov
cmp
push
or
es
jmp
repz
and
pop
sub
lock
aas
rolb
flds
dec
dec
inc
xchg
pop
jmp
cmp
xorb
sub
inc
or
and
scas
outsb
imul
movsl
xor
addr16
cmp
in
cmp
push
xor
pop
pop
jno
notl
mov
cli
push
adc
jb
mov
mov
and
mov
cmpsb
and
scas
in
push
stos
js
add
in
in
ds
mov
and
xlat
adc
sub
dec
out
jmp
xchg
or
sub
or
sub
push
mov
out
cs
lock
cmpsl
std
es
push
pop
and
inc
and
mov
push
fld
lods
fistl
lahf
outsb
add
push
enter
jge
xchg
adc
add
js
or
ss
xlat
inc
out
mov
das
in
jl
dec
daa
js
lock
pop
std
sbb
out
add
sarl
sub
or
sub
mov
clc
push
mov
stos
lcall
scas
dec
dec
push
or
xlat
push
sbb
outsb
xor
mov
xchg
lds
lds
adc
lret
out
dec
jno
and
popa
inc
adc
and
fcmove
inc
sbb
es
xchg
enter
mov
add
jno
pusha
jno
test
enter
pop
out
inc
outsb
pop
test
test
sbb
int3
jo
cld
fistl
pop
sbb
inc
mov
repnz
mov
testb
or
or
out
hlt
or
call
adcl
fldenv
insl
xor
ss
repz
or
int3
les
mov
daa
adc
dec
ljmp
cs
pop
lret
lods
pop
mov
loopne
and
movsb
push
out
push
mov
ret
mov
pop
dec
adc
push
lret
adc
cmp
jbe
adc
pop
xorb
or
out
mov
pushf
jle
pop
sarb
incb
push
cmp
ss
mov
in
out
dec
or
fmuls
dec
pop
lds
sbb
pop
xchg
sub
popa
lahf
mov
aam
cmpl
filds
mov
cs
adc
pop
mov
or
mov
adc
js
and
or
pop
dec
and
inc
decl
cmpsb
nop
jne
sahf
mov
mov
jecxz
push
into
cmp
mov
jg
pop
xor
pop
inc
push
stc
shrb
vpmovsxwq
fidivs
loopne
cli
xlat
aam
aas
stc
push
popf
push
cmp
data16
sbb
xchg
pop
sbb
and
stc
dec
cmp
loop
mov
cmp
cwtl
sub
cmp
iret
je
fiadds
jg
push
sahf
cwtl
pop
imul
add
or
xchg
imul
inc
mov
adc
cmp
and
mov
xchg
and
mov
lods
mov
loope
fsubs
jo
adc
test
push
pop
fucom
ficomps
cli
mov
test
setge
out
filds
enter
mov
repnz
dec
cmp
or
addr16
sbb
stos
shll
sbb
test
popf
movsl
rcrl
push
bound
push
cmp
test
jl
sub
cwtl
sbb
test
gs
sub
scas
in
sti
sbb
shrb
mov
call
cmpsl
mov
mov
cmp
ds
jmp
cwtl
mov
std
pop
jle
pop
mov
sub
mov
xchg
pop
clc
in
imull
push
adc
insl
aam
push
mov
cmp
xchg
mov
push
ret
scas
pop
mov
inc
mov
repnz
pop
or
mov
and
lods
mov
ret
jge
and
pop
scas
push
mov
push
leave
xchg
mov
inc
shl
push
or
test
xorl
test
cmp
lcall
or
cmp
push
repnz
insb
mov
add
or
push
add
ror
idivl
sbbl
mov
outsb
jno
add
fidivl
repz
lret
fcmovb
in
push
movsl
cmpl
xor
pushf
cs
repz
out
out
cs
jno
dec
and
xorb
cld
iret
pop
cmc
mov
hlt
ret
bound
mov
daa
lret
das
jnp
lahf
xchg
scas
mov
add
inc
dec
lods
leave
or
mov
lea
mov
push
pop
add
inc
inc
sub
fdivr
je
cmc
cltd
arpl
dec
and
loope
lods
mov
mov
cmp
mov
dec
cwtl
dec
in
add
das
jle
xchg
iret
pushl
cmpb
jno
add
mov
jnp
jbe
inc
fdivl
jmp
push
sbb
cmpsl
xor
pop
sub
aaa
mov
loop
xchg
inc
lock
dec
aad
adc
outsl
adc
inc
mov
les
mov
test
push
popa
mov
out
mov
daa
fisubrl
mov
xor
cmc
xchg
lods
xchg
push
push
cmp
mov
cmpsb
push
addb
addps
push
add
call
pop
sbb
xchg
push
jmp
daa
inc
jg
repz
cmp
mov
inc
outsb
mov
pop
adc
push
mov
mov
sbb
mov
mov
sbbl
cmp
adc
mov
mov
dec
pop
cltd
sub
jbe
scas
inc
pop
sub
mov
rol
add
popa
decl
hlt
xchg
stos
pop
es
out
sub
int3
push
and
mov
testl
pop
imul
mov
inc
inc
mov
push
repnz
lcall
pop
mov
jp
push
pop
ret
je
sti
jle
dec
jecxz
sub
pusha
loop
mov
scas
in
imul
lret
lret
or
sbb
push
push
testb
insl
dec
sbb
and
inc
inc
sbb
icebp
mov
sbb
xor
loop
sahf
mov
add
ficomps
jbe
rorb
test
stc
push
jmp
fdivrs
mov
xchg
inc
push
divl
push
sub
mov
inc
add
std
add
jle
mov
cmp
inc
push
shl
xchg
jmp
xor
pop
arpl
push
imul
dec
popa
testl
pop
add
jne
or
and
mov
pop
jle
pop
dec
hlt
add
pop
sub
add
incb
aaa
aaa
pop
call
gs
repnz
and
dec
cmp
gs
xor
xlat
cmpsb
mov
cmp
cmc
jae
shll
pop
std
lret
sub
mov
lar
add
daa
ljmp
arpl
call
daa
sbb
repnz
cs
lods
xor
lods
mov
adc
sar
mov
scas
out
mov
mov
in
mov
dec
adc
test
call
std
sub
lods
in
mov
call
cmp
cld
cmp
test
dec
sub
fidivs
lret
out
into
aaa
pop
das
xchg
xor
stos
repnz
or
test
movsl
sub
mov
dec
adc
push
enter
fadd
std
daa
dec
pop
and
andb
xchg
int
mov
pop
cwtl
sub
and
adc
mov
enter
in
pop
mov
add
pusha
and
xchg
adc
mov
data16
mov
icebp
std
sbb
push
push
subl
sub
leave
adc
loope
push
lret
mov
mov
and
jne
push
mov
xchg
jl
je
test
sbb
mov
jge
jg
icebp
cmpsb
jg
stos
ja
mov
ficomps
cmpl
sub
sbbb
xchg
and
ret
adc
push
pop
adc
cmpsl
adc
aad
sti
rorl
jecxz
notl
mov
imul
sbbb
cmp
dec
dec
rorb
std
jnp
add
jb
cli
icebp
xor
mov
push
ljmp
std
and
pop
scas
jb
daa
jg
xor
js
sbb
pop
xchg
in
test
cmpsb
add
dec
jb
fwait
test
jno
pop
mov
test
hlt
int
ret
add
dec
sub
cmp
insl
cmp
imul
xchg
stos
sub
xchg
frstor
adc
jnp
cwtl
loope
aaa
ror
or
xchg
mov
pusha
dec
mov
sbb
repnz
mov
in
cwtl
sub
mov
jg
pop
sbb
and
push
sbb
push
mov
pop
cmp
xchg
int
pop
outsl
sbb
cltd
icebp
mov
lods
mov
inc
push
push
loope
or
xchg
dec
lds
out
in
push
add
push
sbb
int3
shrb
mov
xchg
xor
pop
stos
mov
bound
dec
ss
mov
mov
jl
mov
push
mov
and
adc
xchg
fwait
outsl
and
inc
mov
push
inc
hlt
mov
les
sahf
adc
jo
push
icebp
test
cmp
dec
cltd
sbbl
sub
loop
lock
out
jl
nop
test
sbb
shrb
test
sub
addl
stos
jns
pop
cmc
add
dec
je
out
ljmp
outsl
ficomps
jg
jno
ds
ljmp
lret
or
aad
mov
jbe
inc
push
mov
lret
adc
out
xchg
orb
push
test
daa
pusha
or
rcll
cmp
popa
and
sub
daa
pop
jp
jmp
daa
scas
clc
cmpsb
lea
and
cmpsl
bound
jecxz
test
sbb
andb
push
and
xchg
mov
mov
insb
mov
arpl
lods
mov
xchg
sti
pop
loopne
or
jbe
iret
fldt
push
lea
pop
arpl
dec
cmpsb
jbe
cmp
cli
repz
adc
sahf
dec
or
lret
int3
lret
xlat
adc
loope
in
xlat
and
imul
stos
xchg
sbb
add
ret
daa
jecxz
jae
lds
aas
mov
jp
sbb
jg
add
sbb
mov
pop
call
icebp
lods
fwait
inc
push
fildl
cmpsl
dec
pop
shrl
mov
xchg
lret
xchg
jbe
cmp
adc
popa
aam
jecxz
int
fimull
pop
mov
xor
in
sbb
sbb
push
xchg
cs
xchg
pop
push
sti
ja,pt
or
mov
add
ljmp
lock
movsb
and
aas
inc
cmp
pop
push
dec
ret
xor
lea
pop
jmp
add
lcall
xor
cmp
sbb
fisubs
add
loope
cmp
stos
lcall
insl
or
add
imul
push
js
pop
lock
xor
dec
inc
cltd
inc
inc
daa
inc
ds
mov
pop
pop
xchg
push
pop
xor
xchg
fstpl
nop
jbe
mov
sbb
int
push
outsl
mov
or
aaa
push
scas
mov
lock
int3
popf
aad
aaa
int
nop
xor
jae
pop
or
cmp
stc
loop
cld
xchg
jecxz
mov
sub
mov
sbb
aas
dec
out
jmp
jae
sarl
decl
fistl
xor
in
sbb
cld
sbb
movb
decl
dec
inc
sub
negb
add
xor
cwtl
in
shr
mov
sub
repz
ljmp
scas
out
gs
mov
test
push
fwait
shrl
in
cltd
clc
enter
in
std
add
or
sub
fists
pusha
fisubrs
add
pop
mov
cmp
sbb
push
xor
dec
inc
add
insb
movsb
jne
into
xchg
int
repz
outsb
sub
loopne
pusha
dec
mov
in
push
lea
call
or
data16
dec
push
in
dec
push
mov
xchg
mov
sub
jb
mov
add
or
mov
int
pop
mov
inc
add
movsb
out
dec
inc
inc
pusha
inc
and
xchg
push
cltd
pusha
mov
push
dec
mov
and
rcll
and
ss
cmp
in
popf
add
xor
xor
ljmp
jb
lcall
mov
mov
sub
push
add
xor
jns
cltd
and
fstl
mov
xor
fcomps
stc
or
mov
hlt
pushf
in
in
xor
sbb
inc
mov
mov
dec
pop
push
adc
rclb
aad
out
mov
dec
pop
jbe
jg
adc
adc
push
fadd
je
ret
lahf
or
cmp
bound
jne
jne
and
enter
xchg
js
pop
out
fldcw
pop
aad
jecxz
adc
xor
dec
sub
insl
inc
mov
in
icebp
adc
inc
pop
jae
sahf
out
sub
shll
out
cmp
dec
push
add
pop
inc
mov
sub
int
cli
rcll
push
add
lods
push
loopne
lahf
nop
jno
call
movsl
and
jmp
xor
push
jno
push
icebp
add
fs
sbb
mov
push
stos
push
shlb
fistl
orb
test
insl
mov
popa
ret
add
icebp
push
daa
unpckhps
addr16
out
pop
push
jne
rclb
fistps
arpl
in
xchg
sbb
sbb
mov
adc
jp
adc
jbe
das
std
pop
movsb
or
popa
add
xchg
pop
add
add
push
test
pop
push
pushf
in
dec
int3
and
cld
cmp
test
ja
mov
fidivs
mov
gs
testl
enter
mov
xor
dec
push
push
mov
inc
jmp
ret
mov
lret
ss
lcall
aad
pop
jns
lahf
jo
or
fidivl
je
dec
and
into
mov
add
popf
sbb
popa
mov
shl
pop
inc
adc
jne
sti
icebp
xchg
mov
pop
xchg
mov
lret
mov
and
xchg
or
dec
mov
das
outsb
mov
and
imul
dec
cmpsl
and
cmp
push
in
daa
ds
enter
sub
mov
fdivrs
std
xor
mov
addr16
mov
cmpsl
dec
adc
push
xor
stc
icebp
dec
pusha
mov
inc
jl
pop
nop
cli
ret
jmp
adc
and
popa
or
jle
les
inc
cmp
lea
cmpsl
fwait
mov
or
add
cmp
push
jle
jge
mov
insb
imul
mov
je
push
loop
fcomp
bnd
push
es
ds
sub
addr16
xchg
rclb
hlt
addl
shrl
cltd
scas
arpl
inc
lcall
imul
xor
mov
and
mov
pop
pop
ja
ja
cmp
add
stos
cmp
add
and
pop
mov
stos
addb
jno
pusha
ret
lret
or
sub
or
notb
bound
xor
mov
inc
int
dec
das
inc
aam
inc
fists
leave
pop
add
cli
nop
mov
in
outsb
ss
and
jl
mov
test
push
inc
jl
xchg
das
in
push
push
inc
int3
pop
xchg
and
push
call
jmp
inc
xchg
jae
sub
bound
lods
test
int
add
and
mov
or
popa
xor
ljmp
inc
pusha
pop
and
xor
hlt
outsb
repz
pop
aam
pop
test
mov
push
fldenv
push
and
jo
inc
in
adc
jns
dec
sub
mov
xchg
dec
mov
loop
cltd
adc
addb
adc
push
rorl
add
xor
enter
iret
cwtl
mov
aam
mov
adc
aas
xchg
pop
cli
pushw
push
imul
xchg
add
xor
aas
jns
popf
inc
add
sub
in
sbb
mov
popa
mov
inc
dec
sbb
mov
xor
negb
mov
adc
test
fmulp
ljmp
je
test
cld
xchg
aad
mov
data16
insl
adc
aas
xchg
xchg
popa
stos
sahf
mov
roll
dec
push
imul
add
js
mulps
pop
push
jg,pn
inc
jb
lea
dec
xchg
mov
into
outsl
mov
push
mov
add
mov
push
pcmpeqb
mov
xchg
aam
pop
pushl
xor
jo
add
or
jge
sbb
repnz
pop
and
mov
mov
jno
jo
movsl
dec
lahf
scas
inc
repz
lret
daa
and
insb
sub
add
insb
imul
jne
loopne
jle
fisttpl
stos
push
lret
fimull
rorl
mov
push
push
cmp
das
pop
xchg
mov
or
mov
lods
xchg
cmpsl
sub
out
inc
incb
pop
push
pop
ficoms
mov
movsb
or
or
push
mov
dec
adc
aam
push
inc
sbbl
jle
lods
or
addr16
jbe
leave
leave
adc
out
and
pop
sbb
dec
sbb
add
push
pushf
inc
aaa
push
inc
test
jbe
sti
jg
sbb
jbe
sbb
xor
or
arpl
fldenv
mov
push
fiaddl
adc
xchg
and
push
dec
mov
sbb
add
int
out
and
xor
cmpsl
mov
into
cmp
lods
push
movsl
or
xchg
jo
xchg
negb
mov
xor
hlt
add
aam
cwtl
jno
inc
shrl
cli
orl
xchg
and
fwait
mov
popa
xchg
lcall
jae
pusha
imul
or
popl
push
cmp
lock
and
jne
mov
and
pop
out
jo
xchg
jnp
jecxz
xor
xor
or
xor
aam
clc
aaa
cmp
push
add
cmp
xor
pop
xchg
popf
inc
in
subb
pop
and
add
imul
jge
jecxz
adc
sbbl
xchg
xchg
sbb
fadds
orl
push
sbbb
dec
xchg
mov
jle
or
xor
fsubs
push
out
scas
mov
repz
mov
call
mov
cmp
or
mov
mov
xor
cmp
cmp
lods
and
xor
mov
mov
xchg
scas
and
int3
subb
mov
out
ret
and
scas
cmp
push
mov
data16
jmp
test
bound
jno
stc
cmp
xchg
inc
out
scas
jns
shll
popa
xor
mov
dec
filds
cmp
pop
mov
mov
add
push
push
xlat
and
fisubl
xchg
jg
pop
mov
push
lret
leave
mov
mov
ss
popf
push
push
mov
mov
push
movsb
adc
and
aas
jmp
pop
inc
stos
xlat
dec
mov
cmpsl
int
xor
sub
ret
daa
lret
pushf
mov
sbb
pop
or
shll
jg
les
add
mov
into
lahf
xchg
dec
in
lret
mov
cmp
fdivl
and
lahf
xchg
xor
cmc
add
stc
insl
rolb
daa
out
jl
jns
cmc
sbb
lods
xor
stos
loopne
jne
cmpl
inc
push
inc
test
iret
fprem
das
cmp
lea
inc
adc
rcll
test
mov
enter
add
aam
neg
arpl
cld
pop
push
jp
pushf
jno
xchg
xchg
call
cmc
jl
dec
push
fwait
cwtl
and
pushl
xchg
mov
lcall
mov
cmp
and
sub
push
push
inc
bound
mov
icebp
mov
adc
adc
shl
xor
adc
test
or
sbbb
dec
cmp
inc
popf
lret
xchg
inc
das
sarl
mov
js
sbb
in
jns
xchg
pop
push
iret
pushf
xor
lahf
xchg
hlt
xor
mov
mov
jp
adc
or
ljmp
movsl
add
push
add
mov
enter
rcrb
mov
add
js
jbe
push
inc
or
cmp
sub
sahf
fs
fdivl
push
and
popf
lods
loop
inc
cld
mov
push
mov
ror
xorps
pop
ds
ret
dec
lods
xchg
xchg
jl
lret
and
and
fld
in
cltd
cmc
xor
pop
rorb
jle
xchg
cmp
inc
iret
add
cmp
push
jmp
sub
mov
mov
push
pop
call
loop
loopne
cmp
pop
testb
mov
and
cwtl
sub
mov
in
loop
int3
lock
hlt
cmc
cmp
cmp
cmp
aad
mov
movsb
sub
pop
push
push
repz
mov
push
mov
xchg
test
add
cs
and
idivl
and
pusha
popf
loope
jns
cld
mov
sub
les
mov
add
sbb
adc
xor
sub
or
js
cmp
ret
mov
and
fwait
cmpsb
pop
or
inc
dec
and
in
dec
dec
outsb
xor
add
inc
daa
inc
in
jecxz
or
icebp
aas
insb
mov
xor
jae
rorl
xchg
popf
aaa
lret
add
int
cli
sub
push
push
ja
ds
sub
xor
ljmp
lods
xchg
test
add
call
mov
mov
mov
mov
adcb
xlat
das
lret
lock
out
ljmp
arpl
adc
inc
push
ljmp
inc
ja
dec
mov
ret
hlt
addb
fldl
dec
dec
pop
ja
in
jmp
adc
mov
sub
dec
mov
outsl
cli
fsubrl
xchg
mov
mov
xor
pop
mov
and
nop
push
aas
out
in
jmp
mov
pop
pop
out
imul
pop
jmp
cmpsb
cmp
fwait
add
push
push
sbb
cwtl
sarl
imul
inc
mov
cmp
jo
dec
cmp
pusha
xlat
jl
inc
xor
subb
add
cmp
jno
inc
cmpsl
stc
jmp
loope
cmp
mov
test
adc
fwait
mov
or
jge
xchg
adc
shlb
push
fwait
mov
fwait
sbb
jnp
jecxz
testb
mov
dec
mov
pop
cmpl
das
mov
jae
fsub
loope
ret
test
lock
jb
mov
dec
mov
add
scas
addr16
aad
mov
cs
xor
pop
cmp
dec
test
jbe
dec
xchg
insl
xchg
jmp
mov
xor
hlt
push
cmc
loop
cmpsl
hlt
or
out
mov
outsb
dec
lock
xchg
fs
pop
rcll
cmp
jge
mov
cmp
add
and
pop
aam
sub
jg
adc
out
pop
or
clc
outsb
scas
adc
repnz
sahf
arpl
pop
pop
mov
dec
mov
cmpsb
addr16
xchg
dec
sub
sarl
shrl
xor
mov
imul
repz
push
pop
mov
and
icebp
les
cmpsl
sahf
pop
nop
push
push
int
std
movsl
lahf
out
sub
in
dec
sahf
stos
or
pop
mov
hlt
jae
rcr
mov
je
sbb
int
fwait
and
adc
or
or
movd
stc
mov
cmp
mov
push
in
test
or
incb
shr
sub
sbb
cs
jb
loopne
xorl
dec
sbbl
loope
dec
out
mov
movsb
loop
in
push
dec
mov
out
outsb
pop
or
popa
push
push
jecxz
dec
xchg
data16
mov
add
test
insl
int
orb
xor
cmc
rcrl
ja
imulb
dec
popa
test
adc
jo
sbb
bound
cs
or
bound
lret
sbb
fs
icebp
sub
push
push
jno
mov
bound
dec
into
lea
xchg
xchg
out
mov
popa
stc
fmull
xor
vprorvd
sub
xchg
and
xchg
pop
sbb
mov
mov
scas
adc
adc
inc
xchg
inc
out
jl
ljmp
cs
iret
pop
push
mov
dec
popa
aad
jae
adcl
jge
aad
and
mov
mov
xchg
out
lods
xchg
ja
push
inc
decl
sub
andb
imul
popa
dec
sbb
pop
cmc
fcmovne
rcrl
lods
mov
inc
xor
jl
push
or
stc
cmpsb
dec
lret
cmp
mov
push
jae
xchg
loope
andl
inc
push
or
pushf
addb
mov
outsb
fnstenv
fsubs
divl
add
cmp
xchg
je
ss
push
scas
cld
ret
cmp
rorb
test
sbb
mov
lds
hlt
cli
xor
mov
lcall
sbb
mov
sahf
sbb
cmp
mov
sub
stc
dec
cs
dec
cmp
in
cmp
pop
xchg
jmp
dec
xchg
movsl
mov
cmp
lahf
cmp
repnz
negl
sub
inc
jecxz
adc
cmp
out
testl
pop
mov
inc
sbb
mov
dec
out
daa
sbb
mov
pop
hlt
fwait
push
es
xchg
jnp
es
cld
dec
insb
in
movsl
xchg
xor
aaa
loope
mov
xchg
cmpb
inc
lcall
orl
pop
dec
mov
push
pop
cmp
gs
in
push
sbb
xchg
pushf
outsb
cs
or
xorl
out
aad
and
dec
add
sub
stos
jge
fbld
scas
lret
das
int3
mov
jmp
dec
test
sub
sub
xchg
push
xchg
push
adc
xor
mov
loop
push
mov
rol
movsb
xchg
int3
xchg
shll
sub
xor
cmp
clc
xor
cmpsl
loopne
add
or
mov
add
jmp
movsb
mov
aad
test
sub
and
sub
imul
push
push
cmp
jmp
ud1
fists
push
cmp
in
call
mov
mov
scas
xchg
leave
test
mov
inc
out
and
inc
test
mov
inc
ds
insl
dec
cmp
repnz
loope
movsl
xor
insl
jp
push
xor
sti
jns
mov
insl
add
mov
lret
test
dec
xchg
mov
or
sbb
or
push
push
cmc
jbe
icebp
xor
into
inc
xor
iret
sub
mov
loope
pop
pop
xor
push
mov
mov
pushf
mov
dec
add
xor
mov
lcall
mov
ss
xor
lret
jg
pop
adc
incl
adc
push
inc
and
inc
fldcw
jbe
jne
shll
mov
push
xchg
pop
mov
clc
cmc
cltd
mov
pop
testl
cmp
xchg
lock
cwtl
add
in
sub
call
sbb
mov
jne
adc
sub
insb
jecxz
dec
mov
pop
arpl
aaa
jno
lods
xor
int
int
daa
cld
adc
shll
verr
flds
lahf
dec
lods
inc
rcrl
xor
shrl
push
xor
imul
jg
test
pop
stc
pushf
lcall
and
stc
mov
fucomp
xchg
imul
pop
sbb
aad
xor
shlb
sub
leave
jl
stos
cli
mov
sub
stos
rcrb
into
cmc
sti
sti
sbbl
cmc
stc
test
daa
sbb
xor
cmp
subl
add
call
fadds
mov
adc
fs
and
ja
pop
and
pop
pop
scas
mov
insl
mov
roll
insl
dec
cmp
popf
out
lock
jge
mov
mov
jg
fs
xchg
and
outsl
pop
je
aas
pop
cmp
push
adc
sti
sub
jns
out
movsb
daa
cmp
stc
dec
inc
test
jecxz
loopne
inc
jge
inc
stc
adc
insb
pop
dec
lret
and
mov
xchg
jmp
mov
mov
mov
inc
in
leave
cmp
das
xchg
and
enter
out
roll
iret
loop
aam
jbe
sbb
popa
jno
popf
das
mov
mov
or
mov
mov
add
add
jecxz
pop
sarl
inc
mov
inc
add
adc
push
lds
movsb
cwtl
in
push
jbe
inc
imul
insb
push
and
xor
push
xchg
mov
push
jno
sub
es
pop
xchg
sbb
xor
pusha
add
mov
popf
sub
jge
fiadds
aad
mov
punpckhbw
mov
mov
cmpsl
sahf
xor
sbb
pop
loop
popf
sub
in
push
mov
movsb
ds
cmp
into
push
loop
addl
imul
mov
jecxz
xor
fists
push
lds
outsl
sub
pop
jb
fsubrl
cs
in
movsl
dec
stos
loope
bound
call
add
sahf
pop
aaa
sbb
insb
jnp
jns
lret
xchg
adc
es
fstps
enter
sti
inc
inc
insl
mov
int3
push
push
and
movsl
pop
stc
xchg
xor
lcall
push
dec
stos
sbb
inc
adc
xor
push
mov
cltd
adc
dec
dec
inc
pop
jns
push
inc
inc
out
adc
sub
and
les
add
jb
push
jmp
mov
jl
mov
faddl
das
ret
xorl
outsl
incl
xor
push
fs
popa
push
xchg
scas
adc
push
mov
cld
in
mov
xor
sub
dec
mov
loope
pop
push
mov
push
xchg
out
imulb
push
inc
sarl
adc
bound
dec
stc
fs
and
adc
pop
adcl
jae
mov
aam
xor
inc
data16
outsb
mov
and
push
cmp
je
lret
std
call
imul
add
xor
shll
mov
dec
mov
shlb
sbb
adc
push
inc
xor
bound
jmp
push
bound
mov
jnp
sarb
scas
push
mov
lea
pusha
and
mov
and
adc
popa
xor
mov
mov
inc
pushf
sbb
insb
divl
mov
ljmp
ja
sub
fwait
lea
push
std
pop
jnp
cmp
es
into
cmp
mov
mov
cwtl
mov
cs
sti
lret
in
repz
adc
pushf
ljmp
dec
mov
outsl
pusha
andl
insb
jg
mov
jmp
test
xchg
pop
mov
mov
mov
pop
sti
lret
aam
aad
in
outsl
inc
je
call
xchg
pop
hlt
sbb
adc
mov
ljmp
push
mov
outsl
mov
mov
xchg
xchg
push
xchg
pushf
cs
adc
push
adcl
nop
add
push
fwait
cli
enter
mov
ss
xor
pop
movsl
js
and
or
and
in
icebp
adc
test
dec
out
pop
push
or
lods
lcall
or
mov
rcl
ljmp
out
test
jbe
adc
xchg
pop
push
pop
adc
xor
cmp
cli
cmpsl
cmp
mov
xchg
pop
dec
mov
repz
cmpsl
adc
bound
aas
lcall
insl
stos
push
cmp
dec
insb
mov
cmp
je
or
nop
mov
cmp
lret
or
cmp
je
movsl
cmp
popa
adc
loope
or
adc
aaa
push
jns
sbb
mov
ds
cwtl
sub
pop
lea
xor
jbe
mov
scas
sahf
lods
sbb
pop
add
imul
and
inc
jb
in
out
mov
jns
shll
push
stos
pop
jmp
xchg
push
pop
imul
and
fiadds
out
mov
pusha
xchg
leave
xchg
sbb
mov
push
cmp
cmp
aam
xor
push
add
fs
ljmp
rorl
push
outsb
roll
test
lret
adc
dec
lahf
lods
jle
or
dec
and
xchg
pop
add
addb
adc
mov
loop
ret
add
popf
mov
push
popf
pop
out
test
in
sahf
xor
xchg
push
clc
bound
push
popf
scas
xor
imul
sti
dec
and
sbb
in
adc
lret
xchg
inc
sub
rol
mov
repz
vfnmaddpd
dec
jbe
push
imul
or
add
and
adc
int3
sti
xor
xor
int3
or
xchg
mov
mov
mov
or
xchg
addr16
push
mov
data16
adc
adcb
add
lret
jbe
adc
fcompl
lods
cmp
pop
or
dec
cmp
xor
sub
jno
mov
cld
dec
int3
pop
inc
jp
les
sbb
jl
sub
ljmp
mov
push
int3
cmp
fadds
jns
cltd
int
imul
mov
fbstp
xchg
pop
dec
rclb
xchg
or
lods
shlb
in
adc
mov
fnstcw
mov
ret
aas
aam
nop
lea
shll
mov
inc
push
testb
xchg
inc
sahf
rol
lret
test
mov
fisttpl
rcrb
shlb
or
fldenv
sub
jne
mov
in
inc
jb
mov
pop
aaa
xchg
je
gs
mov
or
and
enter
in
xor
aam
bound
mov
jle
stc
leave
mov
inc
mov
adcb
inc
out
mov
clc
and
nop
adc
leave
movsb
jo
mov
xor
in
outsb
or
mov
fsts
push
stos
jl
xchg
ret
fsubrl
jmp
jp
imul
xor
fs
in
push
lret
es
inc
pop
pop
shl
fadds
mov
imul
add
cmpsl
outsl
out
xchg
sbb
mov
andb
mov
lods
mov
addr16
mov
js
clc
jl
ds
lret
mov
adc
jmp
xchg
js
inc
mull
adc
pop
fnsave
push
stos
arpl
adc
pop
incl
stos
xchg
lahf
sub
push
mov
xlat
jecxz
dec
cld
jge
sbb
fwait
int
rclb
dec
cmp
or
aam
jmp
xchg
inc
pop
push
gs
dec
pop
mov
stos
add
jbe
inc
out
xchg
in
lahf
inc
dec
dec
cmovg
cmp
in
xorl
lea
adc
lods
jmp
mov
ret
add
or
mov
cltd
inc
mov
sub
lock
lret
in
xor
xchg
in
mov
mov
insb
dec
enter
stc
arpl
cwtl
xchg
mov
mov
jg
and
adc
movsb
xor
aad
sub
into
or
out
pop
sbb
fnstsw
fnstsw
clc
lods
rolb
xor
arpl
pop
imul
mov
or
dec
fadds
stc
lret
jl
fstpl
dec
add
jg
mov
mov
and
fidivrl
cmp
cmp
stc
push
pop
out
jbe
or
sbb
push
xchg
je
incl
lock
roll
push
mov
mov
je
lock
cmp
repz
xor
scas
or
pop
fmull
cmp
dec
mov
ljmp
jae
pop
aam
idivl
jnp
adc
addb
fnclex
iret
xlat
pop
push
repz
mov
sarb
fstpl
lods
jmp
ret
pop
mov
pop
icebp
xor
adc
and
xor
jle
pop
std
call
push
jle
fdiv
cmp
push
sbb
push
mov
inc
ret
pop
rclb
pop
stos
jg
push
sbb
cmp
pop
dec
inc
orb
and
cltd
and
dec
std
rclb
mov
push
add
mov
jg
pop
push
jp
xchg
sub
fs
push
iret
daa
imul
repz
int3
push
xchg
lods
loopne
scas
dec
stos
and
xchg
ret
xor
cmp
xchg
or
ljmp
pusha
setno
mov
xchg
add
mov
js
mov
cmpl
mov
fistl
fistl
testb
outsb
inc
or
jne
adc
adc
xor
insb
xchg
xchg
inc
adc
xor
and
xor
adc
mov
adc
cli
in
dec
mov
add
movsl
ja
adc
pop
pop
push
xchg
jne
test
sarl
cmp
add
xchg
push
adc
pop
cmp
mov
sbb
into
cmp
jns
cltd
fld
xor
cwtl
pop
inc
enter
xchg
fwait
dec
hlt
cmp
push
sbb
xorb
lret
jle
pop
dec
stos
ss
mov
ljmp
adc
xchg
mov
mov
pop
sbb
loopne
sbb
movq
mov
mov
sahf
mov
fcmovnu
dec
test
mov
xor
int3
pop
scas
cs
add
js
out
mov
mov
ljmp
push
cmp
push
cmpsb
push
sbb
aaa
fisubl
shl
jae
loop
leavew
adc
aaa
and
test
sbb
ret
mov
test
jbe
sub
push
mov
jmp
mov
jae
fs
shrb
jo
sub
lods
sbbl
sub
scas
mov
popa
xor
dec
dec
mov
lea
push
aaa
ds
add
jbe
or
jbe
daa
xor
sub
notb
push
sbb
pop
inc
pushf
movsl
sarl
test
subl
xor
aam
jp
enter
xchg
ss
pop
cli
mov
cli
xor
imul
mov
pop
xchg
movsb
cmp
and
fs
in
mov
mov
mov
leave
adc
push
adc
out
orb
cwtl
push
lret
mov
pop
pusha
stc
push
xchg
lcall
cmp
in
cmp
imulb
mov
nop
hlt
jo
pop
stos
xchg
mov
sbb
pop
loop
sbb
mov
mov
mov
test
mov
rolb
mov
push
dec
in
loopne
lcall
mov
aam
hlt
repnz
fwait
daa
fsubs
les
aam
mov
out
pop
push
add
je
pop
cltd
xor
dec
mov
pop
mov
mov
in
adc
pop
dec
stos
mov
aam
xor
sub
adc
insb
ja
imul
add
xor
std
adc
xchg
stc
fisttpl
jno
scas
mov
nop
cs
push
xorl
lock
inc
fildll
les
imul
mov
mov
sahf
loopne
mov
dec
aaa
inc
shl
jecxz
sbb
push
jge
aam
push
sti
jecxz
mov
xlat
adc
mov
mov
mov
movsb
lcall
imul
les
lret
addr16
sbb
cwtl
cmpsl
inc
jmp
test
rcrl
arpl
fdivs
cmp
into
mov
jo
sbb
push
out
pop
adc
out
rorl
loopne
les
test
lahf
cmpb
sbb
subl
sbb
mov
xchg
adc
ret
and
sub
pop
mov
bound
lret
outsb
jecxz
enter
lcall
push
pop
jp
sbb
mov
and
push
dec
adc
xor
mov
push
repnz
daa
test
mov
jg
push
add
lods
ret
loop
add
cltd
jmp
sbb
mov
xchg
push
fldt
mov
int3
lahf
dec
cmc
cmc
lcall
fstl
xor
push
loop
jb
insb
repz
test
daa
sub
adc
lods
add
mov
pop
pop
ret
jbe
inc
daa
loope
or
aas
push
dec
pop
loop
je
xor
cmp
mov
or
xchg
push
jmp
sub
cli
add
jp
les
jmp
mov
pushf
mov
xor
scas
sub
jnp
outsl
push
lods
and
sub
inc
add
and
add
movsb
outsl
lret
dec
jecxz
ficompl
dec
xor
loopne
mov
aas
fninit
dec
ja
and
sahf
icebp
in
and
adc
mov
adc
push
lea
ljmp
into
lea
mov
subb
inc
mov
inc
lret
inc
pop
mov
add
aaa
cmp
ds
lds
sbb
and
js
or
stos
enter
jmp
das
stc
movsb
jle,pn
cmp
cmpb
xor
in
clc
fwait
inc
jae
xchg
jmp
mov
push
or
jecxz
cs
xchg
xor
jno
call
aad
out
jl
or
ret
sub
pusha
or
in
iret
add
fidivrl
and
in
mov
outsb
mov
push
addb
pop
sbb
dec
pushf
cmp
inc
arpl
stc
sbb
push
xor
xor
pop
jl
vmovq
mov
pop
ds
jo
gs
out
and
in
cmp
je
js
or
dec
mov
int3
dec
loopne
mov
stc
insb
and
add
and
sbb
or
divl
pop
negl
out
cmc
sbb
outsl
sbb
lahf
xor
jle
mov
sahf
insl
sub
icebp
jle
cmp
cmp
xor
rcpps
mov
inc
cmp
sub
ja
xchg
repz
jmp
sub
lret
enter
xlat
push
mov
stos
fwait
mov
sub
adc
xchg
enter
in
gs
out
dec
cmp
xchg
repnz
pop
fnstenv
adc
call
jo
out
cmp
fwait
mov
outsb
fisttps
or
xchg
aas
inc
push
int3
inc
enter
shrb
les
add
mov
push
mov
sti
xor
dec
xor
mov
test
add
jb
lods
pop
pop
fisttpl
out
ss
popf
pop
xor
sub
cmp
push
mov
icebp
pusha
pop
xor
adc
mov
comiss
cmp
push
jmp
jmp
cmp
movsb
stos
cltd
leave
lcall
xchg
shlb
mov
adc
ret
imul
jno
xor
rcrl
dec
test
mov
roll
popf
ja
sub
sbb
pop
pop
jle
scas
jnp
cmp
arpl
or
mov
jl
mov
sbb
adc
add
push
adc
daa
inc
cmc
pop
and
dec
dec
clc
inc
mov
je
jmp
repnz
mov
jl
jb
shll
pop
mov
or
pop
sti
jb
dec
sbb
nop
pop
test
mov
int
shlb
test
mov
into
pop
psubusw
xchg
adc
sub
je
lock
sbb
add
pop
pop
in
cmp
in
jle
adc
popa
add
addb
or
out
imul
and
push
ret
sbbl
and
pop
adc
cmc
data16
int3
mov
sbb
dec
cmpsb
jecxz
int3
outsl
dec
sbb
sub
sub
and
shlb
cld
ret
jge
mull
sub
pop
dec
test
jl
mov
cmpl
pop
leave
sub
cmc
cld
push
lds
cli
shll
inc
out
jo
sbb
pop
xor
negb
sub
test
scas
out
addr16
lret
addr16
and
mov
mov
je
pop
fcmovne
xchg
sarb
stos
xchg
jl
pop
mov
sti
out
pop
cld
add
sub
out
mov
loopne
stos
ret
fists
repnz
dec
xorl
pop
or
pop
adc
sub
test
push
cmc
and
jl
jg
jle
mov
pop
xor
xchg
mov
data16
sbb
hlt
push
cld
xchg
lods
ror
add
pop
imul
and
lods
sub
pop
lock
imul
imul
inc
mov
adc
mov
add
data16
fnsave
jp
stos
cmp
sub
jno
scas
sub
xor
insb
std
mov
sbb
sub
mov
pop
jg
cmpsl
jae
push
jb
fstl
dec
xor
xorl
fprem1
imul
xor
fwait
enter
xchg
lock
bound
dec
pop
in
lret
jo
and
ret
sarl
mov
or
bound
mov
sub
je
push
cmpb
mov
mov
dec
or
mov
and
push
dec
mov
mov
push
add
mov
sbb
pmaxsw
pushf
or
sbb
and
xchg
cmpsl
push
add
fdivrl
cs
hlt
and
imul
pop
push
mov
mov
insb
sub
add
in
addb
aas
fsubrl
dec
xor
pop
test
jl
mov
pop
or
pop
push
addb
mov
fidivrs
adc
shrl
xor
test
call
rcrl
icebp
mov
mov
int
int3
push
lock
xor
cmc
shrb
adc
out
fcomps
imul
sub
add
sbb
loopne
sar
or
shrl
cld
imul
mov
repnz
xchg
inc
dec
sub
rorl
mov
sbb
bound
jmp
jle
mov
std
mov
adc
dec
or
stos
je
add
in
push
cmp
xor
lock
inc
in
imul
adcl
cmc
imul
leave
fcmovu
hlt
jp
and
adc
test
or
leave
jne
sti
mov
cmp
loop
dec
xchg
sub
sbb
xlat
mov
push
sbb
jns
xchg
ficomps
xor
loop
cvtdq2ps
pop
mov
fdivrl
mov
iret
sub
repz
pop
jl
das
xchg
xchg
sbb
jns
jo
retw
xchg
gs
add
mov
in
jmp
jmp
cmp
inc
mov
test
repz
loop
mov
ret
pushf
mov
dec
push
imul
pop
jg
stos
arpl
scas
jecxz
lock
adcb
xor
jp
xchg
div
arpl
mov
mov
cmp
mov
outsb
cltd
pop
outsb
movl
in
frndint
push
data16
repnz
data16
enter
les
mov
push
mov
int3
bnd
adc
mov
test
jbe
xor
push
sbb
inc
cmp
pop
mov
gs
jbe
push
nopl
xchg
push
lahf
ss
enter
sti
sbb
jge
jg
xor
xchg
movsb
mov
jns
lret
pop
sbb
rcrb
sub
and
test
or
das
inc
pop
lods
mov
lock
add
scas
test
mov
std
rorl
orl
out
lret
inc
mov
sti
mov
mov
insl
daa
pop
push
jae
jns,pt
xor
adc
xor
sub
mov
js
xor
push
mov
xchg
jno
push
jp
mov
dec
sub
jae
push
pop
pop
js
das
es
or
popa
out
stos
sub
adc
adc
in
pushf
lret
js
adc
or
insl
ds
movsl
push
lret
jno
loopne
jmp
in
push
adc
fildl
dec
xchg
inc
jg
or
in
jnp
jg
or
fwait
cmp
jg
push
sahf
aad
lods
pop
and
test
mov
push
cmp
xchg
lret
or
push
pop
sbb
mov
lds
lahf
sbb
xor
sub
sub
mov
fcmovnb
sbb
roll
or
enter
and
xor
pop
xor
xchg
dec
mov
arpl
jge
mov
add
in
das
inc
xchg
negb
int3
mov
xchg
aam
cmp
sub
lds
in
xchg
arpl
push
mov
andb
cmp
mov
cmp
jmp
pushf
xor
movsb
fsincos
jge
sub
pop
popf
gs
out
jo
cmp
lock
fstpl
jg
jns
pop
sub
push
and
imul
mov
and
fwait
xchg
xchg
shrb
inc
aas
inc
jmp
repnz
sub
mov
pshufw
xchg
push
xorl
fld
cmpb
bound
xchg
dec
add
shll
stos
push
and
xchg
dec
lea
lea
push
inc
int3
out
jl
aam
inc
push
pop
pop
mulb
push
imul
xchg
das
in
orl
div
das
sbb
daa
xor
add
xor
decb
xor
mov
push
jns
cmp
in
in
pop
enter
push
sbbb
sub
aaa
inc
in
jbe
mov
repz
and
mov
int
repz
adc
test
add
hlt
pop
pop
fs
mov
xlat
lahf
fcoms
mov
cs
mov
scas
jp
test
sub
adc
ret
in
xchg
jmp
sbb
jmp
into
dec
inc
test
push
sbb
inc
and
out
mov
xor
scas
adc
scas
sbb
add
mov
xor
inc
mov
add
fsubl
mov
adc
push
or
mov
add
and
and
mov
push
mov
xor
jge
inc
and
adcl
lcall
xchg
cmc
ret
pushf
jo
cltd
stos
out
push
repnz
clc
stc
cmp
popa
leave
mov
and
or
lea
cli
movsb
out
insl
stos
cmp
xlat
pop
mov
and
or
cmp
add
aad
xchg
out
bound
mov
jns
pop
push
jp
jmp
popa
movsl
jle
es
jecxz
or
mov
push
xchg
xchg
divb
subb
xor
mov
aas
and
push
mov
sbb
pop
test
mov
add
cmpsl
shll
daa
sub
sbb
popa
popf
cmpsb
jle
mov
ret
dec
add
mov
cld
and
pop
sbb
pop
ror
mov
lahf
in
xchg
mov
outsl
jo
dec
enter
icebp
fldenv
mov
popf
loop
mov
ss
das
push
cmp
outsl
cmp
xchg
mov
test
pop
pushf
mov
or
mov
sub
push
sbb
out
sub
jle
jg
jb
inc
pop
mov
fisttps
je
nop
outsl
adc
mov
ljmp
loope
divl
pop
lcall
add
xlat
out
jge
jecxz
mov
xchg
jge
mov
jp
arpl
dec
test
jb
inc
xchg
jae
test
xchg
xchg
pop
or
jmp
pop
mov
andb
push
in
orb
or
xchg
les
and
lcall
aaa
sbb
pop
jo
jno
dec
test
mov
xor
adc
or
es
imul
andl
cmp
jp
jp
imul
cmp
mov
sub
push
out
sub
cs
push
jo
incl
iret
aaa
pusha
jae
js
insb
and
xor
pop
sbb
cmp
cld
popf
lock
bound
mov
pop
mov
adc
mov
jne
stos
aam
stos
stos
mov
and
ljmp
xchg
pop
cmpsl
cmp
dec
xchg
sbb
adc
nop
daa
lock
xor
pop
jmp
es
mov
cmp
cltd
inc
add
ret
mov
insl
std
mov
add
out
dec
test
mov
pop
test
ds
push
mov
out
test
inc
xchg
xorl
jp
mov
xchg
xor
aam
mov
lcall
xchg
pop
fnstsw
dec
and
fldcw
inc
jnp
scas
insl
add
xchg
xchg
lahf
sbb
jmp
or
jmp
pop
xchg
mov
adc
mov
movsb
lahf
into
in
mov
repnz
mov
jns
fdivp
aam
daa
cmp
push
dec
adc
jnp
xchg
cltd
mov
rcrb
dec
dec
stos
push
fstpt
and
xor
xor
outsl
insb
imul
sti
lods
dec
in
bound
cld
outsl
les
jmp
fidivrl
popf
nop
std
movsl
aam
push
adc
dec
sub
pop
fwait
sub
jmp
shrl
cld
fisubl
into
jmp
dec
sbb
adc
repz
cmp
int
xchg
dec
cld
in
mov
mov
and
xchg
sbb
scas
fiadds
sbb
pop
dec
mov
push
push
and
mov
shlb
pop
jge
add
adc
dec
dec
mov
push
inc
cmp
or
ja
mov
xrelease
push
jbe
xchg
or
or
loope
mov
xor
ret
cld
incb
mov
mov
or
loope
pop
arpl
in
mov
pop
or
push
mov
jne
jo
leave
pop
jp
dec
pop
adc
cmp
cld
cmp
and
movsb
int
ss
aad
fidivl
sub
add
sbb
enter
imul
xchg
fwait
xorb
in
and
ret
std
lods
cmpsl
push
cwtl
or
loope
test
in
pop
mov
pushf
mov
mov
push
cli
das
test
mov
mov
insl
pop
lahf
lahf
ret
mov
jbe
pusha
fdivr
jge
shlb
cmp
sub
pushf
cs
in
into
int3
cmp
pop
xchg
lds
cmp
jg
addr16
in
les
leave
mov
adc
lcall
das
jg
leave
push
push
loop
pop
fcompl
mov
xor
cltd
cs
into
mulb
or
lock
push
jb
inc
arpl
and
pop
imul
ljmp
jg
lret
xchg
pop
inc
sub
bound
pop
mov
test
pop
pop
jmp
movsl
incb
cltd
lock
data16
ret
pop
js
inc
mov
jmp
xchg
stc
or
orb
out
and
mov
mov
movsl
xor
xorb
sbb
add
jcxz
mov
lcall
jmp
in
call
cmc
faddl
mov
push
in
push
inc
aas
mov
jp
jne
sub
push
sub
push
clc
dec
sub
lods
je
jo
mov
into
or
pop
dec
mov
sahf
mov
shrl
cmp
sahf
pushf
pop
mov
lcall
adc
jae
andb
outsb
out
xchg
or
test
and
dec
pop
mov
jmp
fs
imul
add
pusha
inc
jo
adc
mov
jmp
sbbb
sbb
and
movsl
test
add
inc
lret
into
leave
xor
cmp
mov
lret
inc
pusha
inc
pop
mov
cmpsb
or
lahf
ss
mov
imul
adc
xchg
cld
add
sub
push
push
jmp
ss
cmpsb
les
lea
xor
xor
sti
mov
push
shrl
sbb
xchg
js,pt
cmpsb
aas
pop
or
pusha
and
sub
arpl
int
cmp
mov
xchg
xor
mov
repz
test
and
mov
inc
cmp
js
aas
mov
lret
orl
scas
mov
arpl
xchg
and
mov
gs
xorb
rcrl
dec
dec
xor
mov
mov
leave
and
outsb
sarb
mov
shr
dec
xchg
jb
cmpl
cmp
jg
out
or
jg
stos
xor
mov
popf
push
leave
push
xor
cmp
and
icebp
adc
outsb
inc
out
mov
jle
call
jae
sbb
sbb
call
or
cld
int
repnz
dec
mov
sub
sub
subl
and
loop
mov
sbb
lea
inc
pop
mov
add
jno
imul
sub
shlb
jmp
pop
pop
sbb
add
or
adc
xchg
push
sbb
mov
aam
sbb
jns
cmp
pop
cld
fsts
push
sub
fs
inc
cmpsl
enter
nop
arpl
testl
xchg
testb
inc
cmp
fsub
rcrb
hlt
mov
ja
sti
lcall
xor
mov
sub
call
mov
movsb
dec
and
push
addr16
push
inc
dec
lcall
or
pop
cltd
mov
test
leave
rcrl
stos
adc
inc
jb
je
jns
out
xor
loope
xchg
pop
pop
mov
mov
loopne
sbb
rorb
imul
xor
jne
mov
mov
sbb
fs
std
mov
mov
jnp
sarl
pop
popf
scas
std
jle
jno
shll
xchg
mov
rcl
cld
mov
ljmp
lret
sbb
and
or
pop
das
aam
mov
stc
out
rcrl
and
jmp
test
rol
pop
addr16
sahf
lret
jne
xor
out
lods
aam
adc
out
mov
out
sbbb
pushf
dec
xchg
addr16
test
fs
xchg
sub
cmp
xor
cmp
sub
je
dec
jae
or
xchg
ds
sub
xor
cmp
ss
jg
push
mov
pop
scas
sub
dec
lock
mov
fstpl
leave
out
mov
xor
lret
in
jns
mov
sbb
arpl
mov
sarb
repz
jmp
movsl
loope
out
adc
ljmp
lock
shll
mov
leave
push
jno
push
dec
jnp
in
lock
sahf
movsl
and
sbb
and
arpl
repz
mov
in
mov
cmp
dec
sub
inc
jae
xchg
cmc
or
mov
mov
les
jp
iret
das
xor
inc
push
stos
test
xchg
add
cmp
call
aam
das
sbb
aad
or
jnp
mov
mov
inc
rolb
mov
fcmovu
or
ds
push
push
fsubl
test
aaa
cmp
pop
jae
enter
iret
xchg
add
cmpsl
add
scas
loopne
lods
loope
sti
mov
mov
adc
push
dec
or
in
ss
jg
mov
mov
test
outsb
cld
pushf
movsb
imul
inc
loope
jo
lock
jbe
cmp
sub
shl
and
mov
out
les
pop
add
inc
int
add
mov
nop
pand
sar
incl
mov
xor
pop
cmc
mov
addr16
int3
nop
mov
in
lahf
ds
cmp
popa
bound
or
cmc
sarl
and
arpl
mov
mov
push
mov
scas
es
push
jp
aam
sti
push
adc
mov
shlb
cli
and
push
bound
push
out
and
mov
push
rorl
mov
cmpsl
push
push
mov
js
gs
jl
jne,pt
fs
aam
test
stos
mov
movsl
jae
out
repz
mov
mov
adc
dec
fidivrl
cwtl
xchg
and
sahf
xor
or
hlt
rolb
adc
cmp
fs
aad
int
icebp
inc
mov
adc
mov
std
fwait
test
mov
inc
movsb
lods
dec
jmp
and
dec
dec
sbb
shll
clc
or
gs
mov
into
outsl
push
adc
xchg
mov
insl
sub
mull
fsts
jg
shl
jmp
and
jo
out
rcrb
gs
sub
int3
add
sahf
xchg
push
in
or
add
aas
dec
lahf
push
jle
sub
insl
or
leave
mov
or
nop
dec
mov
sbb
sub
pop
and
stc
cwtl
in
mov
xchg
pop
dec
inc
int3
pop
ja
out
adc
pop
push
stos
sub
lret
je
lock
push
push
fcmovne
stos
es
scas
dec
stos
jbe
add
mov
sbb
lret
mov
jp
aaa
sbb
lret
fcoml
xor
jae
mov
pop
pop
push
or
out
stos
call
js
testb
jb
sbb
rolb
rcr
ret
or
mov
mov
push
cmp
dec
sbb
pop
push
sub
xchg
cmp
popf
inc
test
popf
je
flds
fdivrl
mov
dec
aas
mov
add
xchg
clc
scas
popf
mov
push
imul
and
sub
jbe
cli
push
scas
iret
popf
mov
lods
jb
aas
dec
ljmp
adc
pusha
mov
leave
jno
and
xchg
sbb
and
pop
shlb
out
fnstenv
inc
cmp
fisubrl
xchg
outsb
repnz
mov
orb
inc
mov
fmul
mov
pop
scas
and
cmpsb
in
adc
cmp
cmp
push
jmp
and
adcl
repz
xchg
inc
xor
mov
ret
lret
sub
add
mov
frstor
jno
push
cmc
inc
loopne,pn
cmpsb
pushf
sbb
cmp
xlat
ljmp
ljmp
cmpsb
das
andl
mov
dec
sub
or
dec
push
nop
mov
icebp
repnz
int3
popa
lcall
dec
push
dec
lret
insb
cmpsb
push
scas
pusha
pop
or
bound
mov
ljmp
xor
cmp
gs
orl
push
mov
nop
scas
adcl
or
sub
fildl
mov
jae
xlat
je
lock
stos
in
add
lret
or
push
mov
sub
cmp
sbb
xorl
iret
mov
fstpl
test
xor
ljmp
cs
jp
daa
mov
add
stos
repnz
pop
xchg
lahf
jbe
dec
sbb
arpl
mov
jbe
call
imul
jnp
lock
adc
mov
repnz
stos
adc
xchg
cwtl
add
out
pop
pop
pop
lods
lahf
mov
rol
cltd
imul
sbb
sti
rcrb
rsm
dec
mov
jp
data16
mov
cmp
out
cmp
jno
mov
out
notl
sbb
add
xchg
xchg
andb
sub
inc
xor
xchg
inc
cmp
pop
cmpsl
jl
jnp
fwait
inc
gs
mov
rolb
add
es
adc
cmp
xor
std
jno
mov
and
in
loopne
mov
adc
jge
mov
idivl
or
scas
call
and
fimuls
dec
sti
es
call
jne
dec
push
fisubs
mov
cld
jle
outsl
lret
pop
shl
popa
push
imul
and
loopne
jmp
mov
nop
mov
sbb
jae
mov
cmpsb
dec
jecxz
xchg
aad
testl
std
push
mov
sub
pop
addl
aaa
or
icebp
pop
dec
lcall
test
adc
cmp
int
jnp
ljmp
mov
cmp
test
sahf
out
outsl
mov
ss
addr16
ffree
add
adc
fwait
out
shr
xchg
mov
jnp
shl
icebp
and
cmpsb
orl
jp
iret
outsl
scas
test
stos
ficomps
xor
jb
pop
inc
test
mov
test
jne
jecxz
cmp
xchg
cmc
mov
loop
add
mov
xor
nop
les
imul
and
sbb
dec
rol
pop
xchg
repnz
mov
ja
inc
xchg
ds
pop
cmp
out
push
test
sub
jge
xor
lret
push
mov
ret
adc
sbb
and
jns
cmp
pop
pusha
lahf
bound
sub
mov
std
inc
dec
cwtl
or
xchg
jecxz
xchg
or
mov
bnd
mov
mov
push
iret
repnz
cltd
ret
sarl
or
cmovns
gs
stc
and
in
je
push
notl
fldcw
pop
popf
or
lret
xchg
ss
dec
insb
fnstenv
add
loop
faddl
pop
js
cltd
mov
fisttpl
test
mov
mov
jmp
testb
pushf
dec
pop
mov
xor
cmp
mov
pop
test
lock
and
pop
jno
xor
cmp
sub
cmpsb
shrl
int
pop
xor
pop
in
cmp
jg
adc
ret
pushf
sbb
xchg
pop
jg
cmpsb
pop
out
rol
sub
sarb
add
mov
adc
sub
loope
mov
addl
sbbl
scas
shll
std
test
push
xor
add
xor
push
sub
loop
push
mov
xchg
mov
cmp
shll
scas
inc
les
and
sahf
bound
insb
xchg
stos
push
stos
fildll
pop
mov
sub
in
stos
push
dec
outsb
push
add
stos
out
xchg
sub
dec
aad
mov
xor
and
notb
sbb
fs
ret
popf
xchg
pusha
pop
enter
idiv
xchg
bound
and
jae
jge
bound
xor
push
jl
xlat
inc
out
cmp
or
adc
aam
inc
adc
jle
test
mov
scas
mov
mov
jns
pop
js
add
in
mov
xchg
popf
insl
mov
jno
jae
out
shl
aaa
inc
aas
out
aad
cmp
cmpsb
sti
pusha
fldcw
enter
pushf
cmp
bnd
jle
mov
push
sub
lcall
push
or
sbb
js
pop
pop
ret
mov
enter
sbb
mov
mov
mov
stos
sbb
inc
sbbl
pop
mov
leave
aaa
ljmp
pop
hlt
mov
jle
lret
pop
jb
into
sbb
lock
sbb
inc
call
mov
scas
ljmp
stc
ja
fisttpll
push
cld
inc
sub
xor
scas
dec
jle
dec
daa
mov
and
addr16
and
in
jb
sub
xor
inc
sub
dec
mov
pop
push
sbb
sti
mov
inc
sbbl
stos
dec
push
mov
mov
and
pusha
or
jae
es
add
loop
add
cmp
mov
outsl
cmp
adc
and
out
clc
je
data16
insb
pop
bsr
xlat
pop
test
andb
loopew
cmp
mov
xorl
cmp
lret
or
addr16
lret
ljmp
mov
jl
pushf
adc
dec
fidivl
dec
mov
fisttps
int
push
jne
cs
and
loopne
dec
mov
sbb
mov
out
insb
dec
mov
mov
popf
mov
in
aaa
mov
xor
sbb
dec
and
orl
ds
xorl
cmpsl
xor
nop
cmpsl
shrl
inc
mov
fwait
mov
out
adc
xor
pop
movsb
xor
mov
lock
cmp
pop
xchg
lods
int
ja
and
jmp
pop
mov
popa
lret
cmp
popa
test
sbb
scas
or
fnop
mov
sub
ljmp
adc
ret
push
rcll
mov
insl
jmp
pop
in
xchg
in
out
cmp
jecxz
dec
sbb
sti
ss
dec
shr
cmc
fstps
xor
mov
fs
in
roll
lret
shr
push
adc
cmp
fldt
pop
push
xor
dec
or
adc
jp
hlt
or
sbb
xor
or
cmp
push
push
repnz
lock
cltd
push
cmp
mov
loop
sbb
pop
pop
stos
cli
inc
push
sti
jnp
inc
int3
pop
fidivrl
std
das
add
pushf
adc
push
mov
std
dec
test
mov
aad
std
jo
cmc
iret
jns
ja
dec
mov
fstpl
leave
in
pop
and
loopne
lods
jns
mov
fcmovnb
mov
lods
iret
push
mov
fcmovnb
outsw
cmp
aam
nop
out
ficoml
repnz
sub
inc
pop
xchg
jmp
cmp
xor
les
add
jo
inc
jmp
add
sarl
repz
pop
mov
mov
insl
inc
adc
iret
xchg
int
stos
aaa
lret
inc
mov
mov
or
scas
add
enter
hlt
or
scas
fcomip
and
daa
cmpsl
cmp
push
push
mov
imulb
in
inc
cmp
adc
xchg
fcoms
mov
std
sub
xchg
inc
adc
enter
mov
push
les
rorl
mov
lahf
mov
adc
jae
es
mov
and
sub
xchg
pop
and
xor
fwait
js
lret
and
int3
lods
push
jle
enter
fsubl
xchg
jae
mov
add
fidivrl
jns
aas
mov
lods
mov
sbb
stc
std
fs
cmp
aaa
xchg
outsl
mov
stc
cmp
add
rcrl
pop
mov
repnz
add
es
inc
lods
cmp
sar
dec
fisubs
or
lret
shl
std
push
inc
testl
push
mov
dec
xchg
shll
dec
int
mov
jns
push
sub
js
jns
cmc
sti
outsl
jnp
xchg
xchg
inc
insb
ficomps
inc
mov
or
push
in
sbb
pop
jge
pcmpgtw
mov
in
rcrb
std
push
imul
or
jg
sbbl
mov
movsl
int
andb
adc
cmpsl
mov
mov
xchg
loopne
outsb
orl
pop
and
pop
mov
xchg
adc
sbb
xchg
dec
push
inc
inc
sahf
loope
insb
mov
push
pop
lods
cmp
fsts
dec
mov
mov
je
cmp
xchg
mov
daa
mov
adc
xchg
xor
adc
js
push
xchg
outsb
dec
jb
xacquire
mov
adc
scas
push
xor
sbb
jno
mov
push
daa
xor
add
gs
jnp
mov
out
inc
repnz
ljmp
pushf
mov
and
in
xor
mov
xorl
add
cltd
push
inc
lret
imul
out
mov
out
hlt
push
push
add
mov
jl
popf
mov
cwtl
xor
push
cmpsb
mov
mov
mov
int
jne
or
cmp
sub
sub
jb
les
mov
andb
add
fucomp
insl
xchg
push
push
fistps
sbbl
mov
fs
jmp
or
pop
xchg
add
aam
and
push
imul
mov
mov
cld
movsb
jge
xor
mov
mov
or
jle
pushf
jns
mov
sbb
pop
push
subb
jnp
pop
out
pop
mov
add
dec
ljmp
jbe
addb
mov
sbb
mov
push
in
in
push
xchg
add
inc
lock
lea
lcall
popf
sub
test
into
or
shll
push
pop
rolb
mov
movl
ss
mov
add
sarb
in
addr16
sbb
es
bound
jmp
mov
jne
mov
movsl
int
jno
or
mov
mov
jne
mov
sub
imul
scas
push
int3
inc
cmp
dec
fdivp
mov
jg
xor
pop
add
jo
cld
jnp
and
cmpsl
mov
xor
test
pop
add
into
jg
lods
mov
imul
mov
sbb
leave
imul
pop
lret
test
or
imul
lods
mov
and
outsb
cmpsb
dec
dec
sbbb
aam
adc
cmpsl
adc
xchg
mov
mov
lea
les
add
test
scas
adc
xchg
jmp
add
lret
bound
pusha
pop
into
push
and
test
scas
xchg
mov
jnp
jecxz
mov
cmp
fcompl
mov
fdivrs
xor
xor
enter
mov
mov
rcl
jns
xchg
add
push
push
hlt
fmull
sahf
sti
pushf
xor
dec
sti
or
mov
out
mov
rcrl
ds
jg
enter
test
movsl
jo
test
ficoms
shrb
cmp
xchg
jbe
cs
fnstenv
sub
shl
movsl
jp
xor
jnp
and
out
pop
jb
call
sub
inc
pop
jle
adcb
sub
shlb
dec
fiadds
jge
and
jae
imul
movsl
pop
mov
addb
cltd
loope
or
mov
andb
dec
mov
jmp
movsl
aad
inc
out
jae
enter
ret
dec
stos
popf
in
push
xor
cltd
or
mov
push
or
add
pop
jno
pop
mov
xchg
pop
xor
notb
pop
mov
mov
or
lods
addb
sahf
in
fsubrs
jl
mov
pabsd
insl
pop
xor
in
jae
les
mov
add
test
dec
testb
sbb
jle
mov
xor
push
arpl
jns
jecxz
mov
jb
rcl
xor
mov
sub
jecxz
mov
repz
mov
dec
pop
dec
or
adc
out
or
push
xchg
pop
in
jge
pop
stc
adc
shll
sub
mov
inc
cltd
xorb
fwait
in
xchg
lods
test
js
inc
jmp
data16
sub
repnz
jle
adc
mov
and
push
lcall
cld
andb
mov
bound
pop
pusha
mov
aas
jmp
add
stc
pop
or
push
repz
fcoml
mov
sbb
inc
shll
inc
sub
into
test
xlat
sahf
or
dec
lret
cld
popf
pushf
push
sub
std
or
mov
jno
dec
sub
test
xchg
fs
sbb
add
dec
xor
aad
cmpb
add
and
pop
pop
pushfw
andb
test
pop
cmpb
sbb
push
xchg
mov
aaa
cmc
loop
lods
outsb
inc
in
xchg
lods
ds
mov
in
imul
pop
iret
jns
scas
inc
inc
es
dec
ret
push
fstpt
mov
sbb
mov
cmpb
out
ficompl
jno
inc
inc
jo
push
adc
imul
insb
cmpsl
cld
inc
out
pop
dec
add
fimuls
scas
orb
ds
push
fs
ljmp
imul
push
insl
push
and
push
cmp
iret
popa
xor
data16
lods
cmp
out
push
push
pop
dec
jns
dec
imull
pop
mov
sub
std
pop
out
subb
repz
xor
outsb
in
lods
imul
inc
popf
stc
dec
sub
outsl
lods
ret
mov
dec
push
js
dec
repz
jle
xchg
pop
pop
arpl
fsts
orl
xchg
pop
cmp
ljmp
shll
out
adc
jmp
lcall
test
int
or
int
mov
add
and
stos
pop
pop
daa
jecxz
and
dec
adc
in
movsb
jle
push
gs
daa
push
xor
adc
xchg
andl
fwait
lods
cmp
cwtl
pop
dec
lret
int
mov
lods
pop
cmp
fdivl
inc
mov
or
dec
push
push
add
pop
cmp
negb
ret
pop
enter
in
loop
xchg
dec
pop
mov
mov
dec
mov
int3
or
inc
cld
ja
fisubrs
jns
in
lahf
mov
sbb
sub
in
mov
xchg
and
jae
ds
mov
fidivrs
sti
pop
jnp
mov
mov
add
call
pop
mov
dec
popf
addr16
fimull
testb
xor
loop
inc
jg
inc
je
inc
loop
scas
xchg
add
ljmp
or
test
fucomp
pusha
call
jno
xor
lea
add
xor
icebp
mov
pop
jmp
mov
imul
clc
mov
daa
je
lea
fisttps
jno
adc
sbb
jl
jb
loop
fisubs
cmc
lods
adc
xchg
adc
aad
clc
pop
es
jecxz
or
sarb
dec
loope
je
lret
clc
cmp
inc
fwait
stos
xor
aaa
xorl
jl
iret
and
jo
iret
mov
notl
sti
dec
es
push
aas
xchg
faddl
xor
push
dec
lods
cmpsl
fmuls
and
test
push
add
nop
imul
or
test
sbb
dec
and
cmovge
and
test
ja
push
push
ja
addr16
inc
add
pop
test
sbb
int3
lahf
lock
loopne
dec
in
mov
sub
cmp
leave
int3
fs
push
push
cli
dec
and
in
adc
int
xor
pop
gs
fld
add
xor
push
push
cli
xchg
loope
sbb
cmp
add
add
sub
lds
jbe
mov
pop
js
mov
lret
mov
mov
sbb
je
and
dec
cmpsl
pop
mov
out
faddl
cwtl
jmp
int3
rorl
xchg
fs
dec
iret
lock
stc
mov
jge
and
test
sarb
and
mov
mov
jo
jo
xor
insb
mov
jb
xor
enter
stos
movsb
xchg
sbb
adcb
fstps
pop
cmc
and
mov
add
insl
fbld
fwait
inc
cmc
data16
mov
mov
outsb
mov
push
pop
popf
pop
subb
test
mov
jnp
push
push
mov
mov
xor
xchg
daa
add
xlat
sbb
addr16
cs
in
mov
and
mov
data16
aas
sub
jl
mov
lcall
pop
stos
push
jle
test
sub
movsl
rorl
aad
xchg
loop
pop
mov
cmpsb
fwait
mov
cmp
cltd
push
jo
mov
repz
cltd
jo
jnp
lods
push
and
mov
cmp
mov
in
mov
stos
xchg
adc
fsubr
loop
pushw
pop
inc
not
movsl
test
aas
idivl
lods
insb
das
and
xchg
rorb
insl
fsts
mov
shlb
outsl
sbb
fwait
out
adc
sti
sti
cltd
sub
les
xor
js
jns
out
pop
das
mov
scas
lcall
outsb
fnsave
and
icebp
adc
call
cmc
rcl
cmpsl
in
enter
sub
and
outsb
popf
push
jns
mov
inc
add
lahf
mov
aaa
lahf
mov
shll
mov
fs
or
in
fwait
cs
fwait
add
pop
fldt
jns
mov
and
fnstcw
or
sarl
mov
jne
push
inc
cltd
cmc
shrl
fxch
xlat
ret
inc
mov
fdiv
lahf
inc
aaa
repz
cltd
cmp
shrb
and
add
mov
dec
jecxz
mov
test
and
and
cld
cwtl
in
in
mov
xchg
or
in
fistpll
arpl
mov
popa
daa
adc
filds
sti
and
loope
fisubs
jmp
xchg
pop
inc
or
adc
mov
add
inc
dec
mov
pop
adc
push
xchg
mov
leave
shll
pop
xchg
fildll
fwait
xchg
test
lea
pop
sbb
jb
adc
xor
icebp
xchg
test
add
cmpsl
pusha
cmc
cmp
or
mov
pop
jns
push
and
rolb
clc
pop
out
lret
mov
daa
jne
and
mov
adc
bound
fnsave
add
gs
sub
in
fwait
dec
lods
imulb
lret
xor
movb
add
cmp
imul
jbe
dec
imul
shl
adc
xchg
clc
inc
sarl
push
push
subb
test
sarb
in
inc
pop
mov
cltd
arpl
sbb
fnsave
int
ret
xor
fisttpl
add
insl
xor
dec
pop
mov
dec
cmp
xor
mov
cmp
fsub
push
adc
ret
cmpsl
jmp
inc
sub
roll
aas
insb
pop
jno
fisttpll
jno
rcr
icebp
or
cmc
mov
cmpsl
mov
pop
nop
sbbb
xchg
test
mov
cmp
pop
call
push
xchg
cltd
adcb
rcrl
rorb
inc
adc
loopne
or
inc
pop
out
mov
jmp
dec
test
ja
mov
fidivrl
push
test
in
dec
dec
mov
cwtl
jl
imul
jne
das
jne
int3
fs
pop
sbb
adc
fcmovu
xorl
xlat
sbb
mov
mov
and
loope
jecxz
std
xlat
dec
shll
or
fidivs
add
dec
push
rorb
fstps
jge
aas
lods
dec
or
dec
loop
sbb
pop
mov
xchg
dec
xchg
lods
or
cmp
fiadds
sub
arpl
pop
fistpl
sbb
jle
inc
pop
cs
insl
xor
inc
cmpsb
mov
push
hlt
vmovupd
ret
mov
mov
sub
cli
add
push
mov
scas
icebp
sti
xor
and
jle
rcll
dec
inc
stos
push
xor
cmpsb
pusha
xchg
lret
loope
jne
adc
mov
ss
xorb
xchg
bound
iret
cmp
push
sub
pushf
ds
inc
data16
xchg
adc
push
add
mov
inc
int
daa
in
ljmp
rcr
pushf
xchg
and
test
inc
push
pop
jb
loop
xor
cmp
negl
xor
inc
jne
push
in
ret
cs
pop
repnz
dec
mov
jo
inc
fwait
cltd
push
push
xor
push
pop
jge
jge
jbe
xchg
mov
icebp
cmc
add
cmc
jo
xor
cmp
insl
push
dec
inc
mov
adc
lahf
ret
fxtract
fnstcw
rcrl
stc
inc
mov
sub
adc
ja
aaa
or
xlat
mov
loope
dec
sub
stos
push
movl
xorb
jo
insb
bound
repnz
adc
xor
into
mov
xlat
jmp
in
xor
push
clc
xorb
cmpsl
bound
es
aam
lea
fcoms
pusha
pop
out
stos
aas
add
dec
add
push
and
imul
pop
lds
cwtl
cld
adc
jg
in
int
inc
movsb
stc
jg
xchg
and
xchg
sub
push
or
mov
cli
cld
rorb
popa
bound
pushf
pop
imul
jmp
add
out
jne
add
subb
pop
or
pop
shrb
sub
je
or
jnp
pop
test
loopne
fidivl
int3
fs
popa
loop
jne
scas
mov
ss
dec
out
outsb
lods
clc
mov
push
adc
jo
cmp
pushf
mov
mov
mov
push
fdiv
or
out
mov
jb
sbb
add
or
mov
les
mov
dec
ret
iret
and
lods
jg
mov
ljmp
push
in
lret
call
xor
add
jae
adc
jecxz
xor
and
cmp
jmp
cmp
jb
iret
popf
add
insb
addr16
cmp
int
lods
mov
add
mov
xchg
mov
xchg
sub
dec
sub
adc
mov
add
in
push
jl
movsb
jge
pop
lret
or
imul
jl
adc
lds
lods
jle
or
cli
les
jno
sub
push
out
lods
popf
stos
dec
pop
push
ja
mov
jb
cs
dec
lock
fidivrl
or
mov
xchg
test
and
loopne
pop
mov
mov
sub
mov
xchg
mov
es
daa
hlt
ds
fsts
call
xor
jno
xchg
cmp
fistl
mulb
adc
pop
or
shl
ljmp
fidivs
dec
stos
sti
mov
out
mov
shlb
stos
add
mov
mov
lcall
push
rcrl
icebp
out
mov
fneni(8087
fimull
push
xor
mov
mov
push
sti
sahf
or
fnstsw
inc
inc
cmp
mov
xchg
jno
push
push
icebp
inc
lds
rorl
or
lock
sub
or
into
imul
xchg
push
pop
leave
cmp
ja
loope
lock
xchg
jnp
lret
dec
enter
in
aam
dec
out
cld
pop
mov
mov
icebp
xchg
inc
movsl
sub
adc
add
pop
dec
jo
fstpt
cmp
push
push
push
dec
leave
inc
pop
fwait
xchg
push
iret
xlat
es
dec
mov
rorb
mov
xchg
loope
push
adc
sub
mov
das
jmp
fisubrl
call
les
jno
add
jno
lods
adc
cltd
shlb
hlt
mov
sub
fdivl
fidivs
hlt
adc
fisubl
test
pop
ss
jp
pushf
push
and
rcrb
je
jg
mov
inc
inc
mov
das
add
mov
lea
jecxz
jl
stc
leave
test
aad
xor
dec
jge
add
clc
decl
mov
jg
rcl
inc
std
repnz
shll
out
vmovaps
push
sbb
sub
aas
and
test
jg
or
int
ljmp
jle
or
sub
xchg
pop
paddd
mov
push
movsl
and
xchg
mov
xor
ja
or
mov
push
xchg
gs
cmp
mov
addl
fimull
cmp
add
aaa
add
sahf
push
xor
mov
jno
inc
cmpb
roll
inc
pop
adc
daa
fists
pop
ljmp
clc
jl
out
pop
add
jecxz
aad
xchg
data16
shr
push
cmp
es
add
repz
jmp
ret
mov
incb
xor
rorl
lea
sbb
and
adc
pop
fwait
ret
sahf
mov
add
sub
shr
nop
or
daa
repnz
test
hlt
out
sbb
add
test
mov
scas
out
mov
inc
shlb
cmp
int
add
jmp
push
test
fisubs
cmp
test
cmp
iret
add
sarb
push
xor
aas
jnp
pop
xchg
mov
sbbb
xchg
inc
or
push
dec
sbb
xsha1
cmpsb
push
pop
push
fldl
or
shrl
pop
xchg
and
sbb
pop
pusha
lret
loope
popf
jae
repz
pusha
mov
shll
jbe
in
daa
out
popa
or
pop
sbb
dec
add
in
arpl
aas
adc
jle
xchg
popf
cli
and
loop
adc
pop
mov
sahf
orb
lcall
and
inc
xchg
clc
mov
push
incl
push
xor
rcrb
lock
cmp
push
dec
lahf
lods
popa
xor
pop
xor
jae
imul
fmuls
cmp
out
xor
sbb
fbstp
mov
cwtl
jb
scas
xor
ja
mov
jnp
lret
imul
cmpsb
or
in
mov
and
pop
cmp
xlat
adc
sub
int
repz
nop
or
test
dec
and
test
mov
mov
ja
lea
xchg
loope
sbb
es
adc
sub
dec
bound
movsb
jns
sbb
scas
cmp
sub
daa
push
and
gs
lret
mov
mov
sub
jecxz
cmp
pop
int
imul
sbb
or
fxch
imul
sub
add
inc
fst
mov
lahf
mov
dec
push
mov
mov
mov
loope
loope
ljmp
xchg
push
iret
add
add
popf
adc
jns
cmc
fisubl
xor
loope
je
pop
add
cs
mov
jp
jno
xchg
push
shrl
jp
movsb
mov
insl
ljmp
aas
push
enter
out
adc
mov
pop
hlt
push
xchg
dec
movq
mov
in
mov
adc
arpl
stos
cmc
mov
cmp
push
test
mov
cmc
dec
xor
push
jecxz
flds
les
iret
es
stc
mov
insl
lods
shr
movsb
dec
jo
in
jmp
or
mov
test
adc
cmp
add
or
cld
adc
ja
cmp
jmp
dec
pop
repnz
lds
or
xchg
and
push
ds
in
mov
dec
jbe
xor
jb
dec
xchg
jge
mov
hlt
mulb
inc
xlat
and
cmc
xchg
in
and
bound
mov
repz
mov
mov
cmc
pop
fmul
xchg
scas
sbbl
mov
pop
in
xor
xlat
pop
mov
mov
mov
fwait
or
adc
js
outsb
pop
mov
int
add
dec
scas
pop
inc
mov
sub
fwait
xchg
daa
mov
bound
push
pop
xor
fiadds
mov
xchg
push
in
mov
mov
xor
sbbb
jnp
mov
outsl
xchg
out
pop
nop
inc
xor
cltd
mov
dec
add
mov
mov
jle
and
push
mov
lods
test
les
mov
dec
cld
mov
mov
daa
jns
stc
cltd
aad
xchg
cmp
into
jmp
mov
es
js
jecxz
mov
adc
sbb
xchg
cmp
adc
ja
sbb
outsl
iret
adc
xchg
sti
pusha
andb
rol
jbe
xchg
outsb
pop
jne
mov
cld
stc
aad
clc
sub
jb
inc
hlt
mov
shlb
push
aas
out
cwtl
pusha
enter
pop
add
addb
pushf
vphsubbw
xchg
and
inc
and
in
arpl
jbe
iret
aad
lds
inc
in
cwtl
test
lcall
rcll
gs
adc
xor
fidivrl
and
inc
nop
mov
sbb
mov
adc
loope
mov
lock
sahf
mov
lods
scas
ror
cmp
out
mov
push
inc
movsl
cs
mov
stos
pop
test
dec
push
cmc
pop
jno
pop
jno
es
and
lret
mov
ret
addr16
mov
mov
dec
or
pop
dec
mov
jmp
xchg
inc
cmp
cmp
push
xchg
addr16
or
pop
xlat
jecxz
das
xchg
mov
inc
or
pop
mov
and
cmp
stc
ret
test
mov
hlt
push
into
divb
lret
insl
xor
pop
aam
std
loope
fs
push
pop
lods
rorl
dec
pusha
jle
add
daa
push
je
fsqrt
ljmp
add
or
movsl
pop
sbb
jge
adc
outsl
scas
je
mov
lcall
mov
sarl
pop
gs
adc
cmpl
addr16
push
add
mov
or
mov
sub
mov
dec
sbb
or
repnz
push
leave
jle
lods
flds
shll
cs
enter
rorl
pop
out
in
xchg
dec
inc
ds
mov
rcrb
aaa
out
xchg
sarl
aad
xchg
mov
sub
hlt
pop
jnp
pop
mov
in
pop
xor
sub
inc
cmpsb
les
mov
mov
call
fstpt
sahf
aaa
test
lahf
xchg
orb
dec
push
fwait
mov
push
rol
ljmp
add
fs
mov
shll
icebp
inc
xchg
clc
mov
gs
dec
shr
xchg
push
popa
call
add
sbb
xchg
dec
out
adc
dec
inc
mov
jae
gs
imul
je
mov
dec
daa
repnz
shl
addr16
hlt
jg
ror
push
sub
xlat
push
inc
fstpt
push
daa
cmp
xchg
dec
inc
arpl
and
xchg
xor
aad
ja
jne
pop
aad
outsl
jo
out
push
incl
sahf
dec
pop
cs
xchg
jb
sub
xchg
in
test
mov
sbb
sbb
dec
cmp
sbbl
cmc
sbb
push
dec
push
push
push
in
xor
and
xlat
dec
and
lahf
adcl
cmp
mov
in
into
movsl
xor
mov
jp
xchg
and
pop
push
push
adc
pop
mov
dec
je
mov
xchg
or
clc
out
sbb
push
in
dec
std
mov
imul
stos
ljmp
add
dec
mov
dec
aam
ror
les
scas
adc
lods
outsl
mov
sarl
lods
cmpb
rcl
mov
xor
lret
inc
jle
dec
lods
jb
lret
out
dec
jmp
jecxz
cmp
arpl
mov
inc
mov
cmp
xchg
call
cld
mov
cltd
sti
xor
and
repnz
decl
lahf
into
mov
call
dec
mov
push
int3
out
ret
js
add
lret
enter
cmc
inc
inc
pop
push
testl
rcrb
ljmp
mov
popa
mov
loopne
xor
adc
mov
push
mov
mov
or
testb
add
sbb
sub
pop
jge
pop
mov
jecxz
mov
mov
popf
sub
nop
sub
movsb
fistpll
push
sarb
repz
cwtl
cmpsl
gs
in
and
repnz
cmp
ss
pop
adc
test
lea
mov
imul
mov
gs
mov
mov
out
xchg
lods
jecxz
ret
and
lret
addl
xchg
xor
call
rcll
imul
test
out
insb
cld
test
inc
lock
sub
stos
ja
pushf
xchg
ja
ror
lea
ret
jo
xchg
sub
push
or
xor
ja
or
into
sbb
daa
cmp
xor
push
std
push
jmp
cwtl
jns
jnp
movsl
sbb
xchg
jl
fistl
repnz
jno
cmpl
int3
std
jbe
sbb
mov
les
sub
loop
inc
int
add
pop
mov
pop
jno
loope
pop
xchg
dec
adc
pop
and
enter
or
cli
into
push
aad
stos
aam
mov
cmp
icebp
test
out
jl
inc
cmp
js
cld
in
adcb
lods
ss
aaa
inc
loopne
adc
push
shrl
dec
pop
movsl
jecxz
jb
mov
movsb
mov
pop
mov
xor
pop
or
fcomi
mov
outsb
shrl
enter
leave
nop
ret
int
push
test
aam
inc
cmc
dec
and
sbb
pop
add
fdiv
hlt
addb
mov
sbb
in
pop
call
push
daa
mov
dec
pop
or
test
lods
subl
and
inc
mov
scas
jmp
and
add
popf
lcall
bnd
fsubp
int3
aam
sbb
popf
daa
inc
lds
icebp
fisttpl
sbb
stc
dec
adc
push
sbb
sti
je
cmp
jmp
cmp
mov
mov
leave
fs
sbb
xlat
and
insb
leave
dec
push
js
stc
aas
mov
lret
jno
pop
jns
std
stos
std
dec
xchg
cmp
aad
lods
je
in
push
mov
push
imul
loop
pop
push
mov
mov
sub
jb
loope
push
add
sub
inc
xchg
mov
rcrl
and
ret
cmp
mov
mov
inc
dec
arpl
dec
ret
jb
push
ret
lock
lock
jae
sub
or
push
out
hlt
fwait
rorl
es
add
gs
jmp
add
jl
inc
jle
mov
xchg
xor
gs
pop
sub
aaa
in
xchg
xchg
cltd
iret
cmp
clc
inc
or
dec
daa
inc
mov
outsl
loope
scas
inc
outsl
repnz
pop
imulb
clc
push
jne
push
push
push
sti
out
pushf
int
jno
mov
test
stos
push
push
and
bound
sub
or
or
cmp
movsl
lods
repz
mov
rolb
test
inc
sub
dec
ds
dec
js
in
inc
cltd
out
stos
aaa
daa
js
fs
lock
push
jge
and
mov
sbb
arpl
icebp
outsb
pop
jl
enter
mov
add
andb
fnsave
push
xchg
cwtl
push
out
loopne
mov
adc
loope
and
cmpsb
incb
fstl
pop
and
jo
sub
lret
and
loop
hlt
mov
fidivrs
and
cltd
enter
mov
jg
jle
stc
cmp
mov
int3
test
jns
xlat
xchg
mov
jg
aam
xchg
inc
daa
mov
stc
int
inc
sbb
xchg
jno
mov
es
mov
scas
and
fiaddl
or
jo
xchg
dec
mov
mov
and
enter
into
sbb
pop
cltd
aas
pop
sub
lods
aas
cmp
sbb
addr16
mov
add
je
mov
aas
xchg
push
jbe
push
xor
das
dec
inc
xchg
rcr
repnz
sub
adcl
push
in
stos
pusha
mov
and
cmp
jp
mov
inc
stos
gs
or
push
push
dec
jns
jns
mov
rcrb
in
jecxz
xchg
xrelease
movsl
dec
into
cmp
and
push
pusha
push
rolb
fwait
scas
or
les
push
in
pusha
pop
jg
mov
test
mov
inc
jp
icebp
cmpsl
xchg
enter
lods
mov
mov
xchg
push
pop
roll
sbb
dec
add
fs
in
cld
push
xor
and
mov
test
repz
push
popf
bound
adc
dec
jbe
jo
sbb
cmp
sub
lea
ror
adc
push
inc
and
sub
pop
cmp
pop
jbe
or
push
xor
ljmp
test
mov
in
lea
mov
addr16
mov
sub
sbb
js
inc
and
mov
pop
rcll
es
stos
push
pop
mov
ds
mov
pop
fwait
xchg
mov
xor
gs
ror
xchg
fadds
mov
in
pushf
sub
xlat
imul
xchg
jmp
ljmp
mov
push
xchg
push
pop
je
sbb
ret
cmc
inc
jo
push
jae
sub
or
cld
mov
shlb
in
bound
or
cmp
es
jb
mov
test
ficoms
ja,pn
pusha
push
out
aaa
out
inc
mov
sbb
xchg
lahf
cmc
pushf
mov
dec
lods
mov
outsb
mov
cli
push
adc
repnz
fsub
dec
scas
push
iret
xchg
sbbl
mov
cmp
ja
int3
jle
or
cli
push
push
mov
rcrl
jle
hlt
loope
in
jl
push
sub
xor
in
pop
adc
ja
cld
mov
leave
dec
dec
jne
test
cwtl
outsb
jmp
adc
sub
sub
loope
jne
pusha
lcall
lods
roll
cltd
push
inc
push
lret
pop
outsl
xor
add
dec
jp
dec
add
lock
call
addr16
es
sbb
sahf
aam
stos
push
dec
pop
adc
xchg
sbb
mov
ds
scas
cmp
or
xchg
mov
dec
mov
fidivrs
inc
adc
and
ja
sub
jno
push
imul
xlat
ljmp
mov
sbb
adc
test
push
sbb
pop
sbb
sub
pop
lock
sub
sbb
es
pop
shll
mov
das
shlb
sbb
lods
fistps
jge
xchg
push
jle
mov
add
xchg
xor
loop
sbb
lret
sarb
mov
dec
in
subl
push
in
mov
aaa
in
jne
fwait
aad
lahf
or
cld
dec
pop
pop
mov
lods
insl
push
xchg
arpl
jnp
ds
mov
shl
mov
xor
push
repz
into
pop
loopne
cld
scas
xor
or
cmc
cltd
xor
int
ja
adc
mov
push
lock
shll
in
bound
mov
lods
or
dec
or
cmp
and
add
pop
dec
aaa
sahf
push
sbb
jne
out
xor
and
mov
adc
stos
ret
mov
ret
mov
inc
add
loope
sub
daa
gs
dec
pusha
outsl
and
push
jns
lret
lock
les
ds
inc
add
sbb
daa
lock
das
mov
dec
or
sbb
sbb
sarb
inc
cmp
clc
cmc
pop
inc
imul
xchg
jmp
out
and
jnp
mov
pop
movsl
and
add
hlt
xor
stos
mov
int3
add
jmp
shll
test
mov
pop
icebp
test
xchg
inc
jns
jmp
loope
fistpl
mov
add
or
sbb
sahf
inc
popa
sti
push
push
mov
pop
les
mov
daa
cmpsl
jbe
daa
inc
and
sbb
dec
jg
into
sbb
addr16
scas
adc
sub
or
stos
mov
sub
fildll
aas
adc
cmp
outsb
push
and
dec
jbe
lock
mov
in
xorl
xchg
outsl
sbb
enter
jmp
add
mov
jns
cmp
mov
push
insb
test
enter
jp
cmp
iret
bnd
je
adc
push
mov
scas
bound
xchg
xchg
add
mov
jmp
jecxz
sub
pop
pop
pop
in
fsubrs
je
jp
dec
or
sub
inc
js
cmp
pusha
and
cmpb
lret
cmp
jecxz
iret
push
and
inc
or
repz
orb
jg
sar
jnp
ss
push
cmp
shr
out
into
sbbb
scas
add
inc
popf
out
dec
mov
cmpsl
xor
or
es
jp
nop
cmp
test
push
dec
mov
rcr
xlat
ljmp
in
popf
lods
mov
loop
pushw
push
test
mov
and
sbb
mov
ljmp
sbb
ret
cmpsb
sub
mov
loopne
push
push
sbb
mov
push
test
and
mov
xor
sub
xor
loop
inc
jge
fldcw
or
in
inc
test
jp
fldl
and
lds
gs
adc
daa
inc
test
xchg
test
fs
sbb
cmc
bound
aaa
insb
sbb
add
ja
and
mov
jge,pn
push
push
jnp
repnz
mov
jmp
push
add
lret
notl
stc
mov
xor
imul
cmc
mov
xor
aam
or
jge
popf
inc
enter
divps
lds
mov
outsl
loope
cltd
mov
mov
cld
sti
xor
inc
jnp
and
pop
call
inc
clc
rorb
orl
mov
cld
xchg
lock
cmp
aad
sub
mov
push
ljmp
xchg
mulb
adc
push
test
aad
inc
push
or
mov
out
and
xchg
je
js
rol
lea
cmovle
jnp
outsb
jb
ljmp
sbb
mov
fmuls
out
adc
mov
dec
push
dec
xor
mov
xorl
les
loopne
imul
cwtl
scas
adc
lahf
mov
fdiv
lcall
vpavgb
scas
in
xor
daa
pop
cmp
hlt
test
xor
insw
into
bound
jb
sbb
fdivrl
das
cmp
movsb
pop
mov
adc
or
test
fisubs
incb
ljmp
sar
popa
and
shrb
ds
ds
scas
adc
cmp
cmp
pcmpgtb
pop
sub
out
pop
cmp
and
fdiv
aam
movsl
cs
fstl
into
cwtl
adc
pop
jp
notb
pop
lea
pop
cld
pop
adc
es
sti
mov
jno
dec
call
xor
jp
mov
clc
pop
push
mov
lcall
jecxz
aaa
jne
cmp
shlb
push
dec
int
scas
pop
sbb
sub
loopne
push
push
je
shlb
test
sbb
scas
fcmovne
ja
xchg
test
fyl2x
leave
cld
mov
mov
dec
mov
dec
nop
cmc
mov
sbb
inc
iret
add
lds
aaa
dec
dec
jmp
push
xchg
les
iret
pop
xchg
xor
pushf
fisubs
sbb
mov
cmp
out
add
addr16
insb
pop
fbld
sub
lea
xchg
push
xlat
mov
test
sahf
jo
add
rcl
mov
push
in
mov
inc
push
imul
movsl
or
jns
cld
rcrl
es
jg
jne
outsb
ret
push
mov
mov
or
shlb
or
sub
mov
dec
jg
lret
cli
sub
aaa
dec
idivl
imulb
mov
and
test
mov
repz
and
imul
icebp
or
sub
int
pop
adcb
xchg
jns
push
dec
push
je
stos
mov
push
lods
inc
push
movsl
popf
mov
inc
adc
test
aam
lret
cwtl
sti
sub
mov
scas
popa
pop
pop
adc
mov
xor
hlt
and
mov
test
pop
movsb
movsl
push
mov
je
xor
cs
fucomp
adc
xor
push
fstps
aad
add
sub
cli
in
inc
sahf
mov
adc
stc
outsb
mov
test
or
jno
xchg
push
int3
mov
sub
ret
shrb
and
jl
or
mov
hlt
cmp
iret
xchg
push
jbe
jge
incb
int3
and
ds
add
pop
jae
add
pop
fbld
jge
xchg
aad
sbb
add
popf
sub
into
mov
lock
push
pop
ss
int
cltd
ffreep
and
xchg
movsl
lock
xor
and
push
arpl
into
and
bnd
sub
out
add
cmp
dec
pop
sub
je
pop
adc
dec
inc
les
das
int
push
mov
ja
xor
out
stc
test
mov
movl
out
fcomi
test
out
mov
xor
dec
lret
cmp
push
add
xchg
lds
jae
out
sub
leave
pusha
movsb
dec
and
pop
mov
add
jo
inc
sbb
pop
inc
or
ret
fsts
cli
inc
mov
scas
add
mov
mov
sub
push
inc
xchg
cmpsl
fcmovb
sbb
xchg
imul
dec
add
push
jbe
dec
add
sti
jno
adcl
xchg
fists
movsb
das
xorl
fsubrs
movsl
push
jo
push
fbld
add
mov
jl
test
adc
xchg
lcall
push
lret
ss
adc
test
jbe
int
jnp
lcall
shrb
xor
mov
ret
jbe
mov
adc
mov
andb
fsubs
jo
xorb
cld
mov
enter
mov
cmp
fwait
std
mov
sbb
sbb
adc
lods
stos
pop
cltd
in
add
or
pop
imul
or
call
mov
dec
jle
repnz
aad
adc
or
addr16
or
cmp
lret
pop
jp
daa
sti
fwait
outsl
mov
xchg
mov
lcall
movsl
jmp
mov
or
add
mov
pop
push
lret
jb
dec
push
subb
or
add
loope
add
test
and
pushf
push
pop
orb
or
aam
clc
xchg
into
mov
lahf
xor
repnz
jne
pop
pop
ja
push
xor
xor
adc
lret
sub
add
cmc
pop
into
sbb
je
fs
loopne
jg
std
mov
mov
xchg
cmpsl
bound
in
pop
js
xlat
sub
jae
popf
pop
mov
adc
sbb
jmp
xchg
loope
or
pusha
inc
or
adc
mov
in
push
fs
mov
repz
shll
cli
jp
push
addr16
shlb
mov
sbb
cwtl
and
push
movsl
dec
enter
jg
int
les
and
dec
lahf
mov
cmp
movsb
inc
lcall
lds
sub
aam
xchg
inc
ljmp
xor
imul
xor
notb
out
std
and
pop
dec
sub
shll
inc
sub
data16
cmp
and
add
rcrl
icebp
cmpsb
popf
push
mov
and
add
daa
outsl
negl
pop
jae
in
xchg
adc
jnp
imul
mov
inc
and
adc
push
sbb
rcll
dec
lock
xor
in
and
dec
adc
lea
pop
jl
inc
test
mov
setne
inc
cmp
movsb
pushf
test
dec
movsb
js
pop
jmp
xchg
mov
or
enter
repnz
xchg
jnp
mov
sbb
in
xchg
push
add
mov
repnz
adc
sbb
pop
cmp
jb
jl
and
loope
sbb
jg
mov
data16
popf
jmp
call
lods
les
fcompl
sbb
sti
ror
shr
pop
dec
add
add
bound
mov
mov
les
sbb
add
push
xlat
mov
cmp
inc
cmp
stc
mov
daa
dec
fdivl
pop
push
sub
mov
js
adc
hlt
divl
and
mov
add
stos
es
stc
inc
mov
out
jl
jne
popf
divl
das
ret
xchg
pop
or
mov
dec
test
pusha
mov
xor
xchg
lods
sbb
or
pop
loope
in
cmp
sub
jae
mov
cld
mov
and
insb
sub
ja
dec
mov
jge
xchg
add
daa
push
mov
cmp
test
sti
repnz
and
sub
ss
sub
icebp
mov
add
movsb
sub
jg
ret
mov
dec
lods
scas
test
ja
mov
orl
and
mov
sbb
mov
fistps
mov
mov
sub
sub
and
cli
test
and
lods
je
gs
outsl
sub
in
addr16
push
mov
sbb
xchg
inc
iret
push
in
sbb
out
icebp
sbb
mov
ljmp
ret
push
ljmp
leave
dec
mov
in
inc
mov
lea
inc
out
and
cmp
mov
push
sub
jb
mov
push
add
adc
mov
pop
dec
fistps
fnstsw
inc
mov
inc
ret
push
cmpsb
jbe
jne
test
lahf
es
aam
cmp
jbe
fwait
fstpt
adc
jo
push
push
mov
mov
jp
push
pop
xchg
fiaddl
sbb
rorb
or
or
jb
out
jne
sbbl
jbe
mov
cmp
and
pop
push
jl
lea
mov
lods
lea
iret
push
popf
xor
and
xchg
mov
or
dec
xchg
jl
jnp
xor
andl
push
data16
and
fs
mov
sub
daa
sub
adc
aad
ss
lods
fisttps
jae
xchg
sub
mov
cmp
or
lods
mov
imul
aaa
ja
adc
adc
xor
ja
xchg
les
pop
mov
loop
icebp
aad
int
loope
ss
lds
adc
dec
sbb
mov
gs
xor
cltd
std
inc
dec
fistps
jmp
mov
enter
enter
sbb
cmpsb
and
scas
test
out
stos
es
sub
and
arpl
and
rorb
repnz
shrl
scas
enter
xlat
movsl
bswap
sub
dec
out
fnstenv
adc
repnz
dec
bound
icebp
mov
scas
jg
ret
outsl
adc
push
lcall
mov
mov
lret
and
ffree
test
aam
adc
and
xchg
push
shlb
push
or
sahf
aad
ror
imul
pop
sbb
xor
roll
xchg
and
sbb
aam
pop
popa
add
jae
les
dec
jmp
dec
or
insl
scas
xchg
adc
sub
insb
int
shrb
jo
mov
ja
and
sbb
out
mov
sti
ljmp
jl
mov
repnz
fdivrs
call
fisttps
ret
iret
subb
mov
out
cmp
daa
cltd
pop
int3
jge
lods
icebp
mov
push
ja
pop
dec
xor
ljmp
lret
mov
scas
pushf
lret
inc
nopl
lret
hlt
std
add
jl
xchg
or
adc
push
adc
fdivl
or
inc
jns
sbb
inc
cmp
pop
push
data16
cltd
xor
mov
jecxz
sub
call
and
scas
add
cs
sar
out
fdiv
cmp
jl
outsl
inc
mov
sub
mov
mov
add
add
lods
repnz
mov
arpl
or
add
and
repz
cld
push
mov
dec
orl
lock
sbb
jl
dec
mov
je
lcall
cltd
or
push
pop
sub
shlb
mov
fisubs
adc
sbb
in
cld
cmp
in
iret
push
clc
mov
cmpsl
vpshufd
lret
sub
xor
fsubrl
sarb
lret
cmp
and
xor
aad
sbb
xor
outsb
adc
mov
enter
lahf
add
inc
loope,pt
sub
cld
mov
out
shll
jns
and
inc
dec
or
aad
push
and
movsb
jne
mov
pop
push
test
mov
cld
adc
adc
dec
leave
or
lock
mov
mov
sbb
adc
mov
out
push
xchg
insb
jl
inc
in
adc
pusha
das
in
xor
lock
mov
sub
jl
sbb
adc
push
cmpsl
adc
stc
rep
cmpsl
jle
cs
jb
mov
pop
hlt
mov
popf
xchg
dec
pop
ljmp
sbb
data16
push
mov
push
cmp
add
sbb
push
sbb
loope
outsl
mov
xor
scas
pusha
inc
mov
loop
lret
in
or
push
inc
xor
in
scas
fchs
mov
ja
imul
je
movsb
es
cmc
adc
insl
sub
pop
pop
testl
pop
clc
lds
lea
lcall
dec
pop
test
cmp
stc
lods
clc
inc
xlat
cmp
add
hlt
jg
cmp
push
gs
lods
call
stos
cmp
fadd
lret
mov
pop
mov
aad
sbb
ss
imull
movsl
call
icebp
lcall
jne
mov
add
jmp
xchg
stos
jb
gs
push
mov
dec
mov
cmp
stos
sbb
push
mov
testl
and
ficomps
sbb
jge
adcb
repz
dec
mov
pop
fists
ret
adc
jb
inc
lahf
xor
negl
lcall
pop
popa
aam
std
test
mov
sbb
and
in
pop
ficoms
xchg
jo
sbb
mov
xchg
fld
jecxz
int
jns
xor
mov
xchg
sahf
or
pop
push
ret
loopne
mov
cs
xchg
pop
mov
addr16
or
mov
jle
frstor
aaa
stos
mov
mov
push
mov
stc
add
push
sbb
pop
mov
and
lods
dec
mov
jmp
rcl
and
es
xor
lcall
cwtl
push
movsl
dec
ret
ret
cmp
stos
pop
or
outsb
pop
sbb
int3
pusha
cmc
pop
fs
push
insb
inc
subl
cld
mov
es
and
pushf
adc
add
lcall
or
pop
jmp
inc
inc
ljmp
xchg
xchg
nop
lea
xor
std
pop
xchg
mov
cmp
mov
fistl
fildl
cmp
sub
fld
and
jbe
cwtl
pusha
xor
into
iret
fimuls
outsb
pop
movsl
and
jp
add
add
push
or
jmp
movsl
leave
test
push
lret
pop
inc
in
xchg
xor
lea
fidivs
loop
loop
and
mov
aas
and
fstpl
scas
inc
mov
add
jno
lret
arpl
cmpsb
mov
cmp
push
and
jne
add
cmp
xchg
dec
push
pop
xlat
cli
addl
and
in
or
stos
and
push
pop
sahf
je
sbb
data16
jmp
popa
push
in
inc
loope
js
out
jg
aad
dec
pop
sbb
rorl
scas
fsubrl
fld
movsb
and
pushf
dec
insl
clc
mov
fistpll
push
icebp
sarb
in
les
cmpsb
hlt
pop
enter
stos
fsubs
addr16
inc
push
loope
mov
cwtl
mov
leave
das
cmp
dec
mov
lds
testb
daa
xchg
sbbb
xchg
mov
xchg
enter
dec
mov
and
jae
mov
or
dec
pop
xor
testl
cli
int3
js
test
pop
pop
popf
xchg
jo
addl
les
ljmp
cmp
out
mov
ficomps
in
test
lods
jae
inc
xor
xor
lods
fcoml
mov
mov
sub
pop
jmp
lds
jle
repz
jmp
ja
daa
or
mov
mov
in
push
mov
leave
push
lcall
cmpl
push
inc
js
js
xor
insb
sti
mov
cmp
dec
push
lret
enter
aaa
sbb
push
sarl
scas
cli
subl
fstpl
ljmp
aas
sub
divl
jp
je
lahf
std
pop
fldenv
add
sti
push
push
js
adc
orl
cmp
mov
je
dec
jg
sbbl
push
mov
test
nop
dec
les
aam
stc
cmp
aas
inc
xor
jecxz
or
jmp
xchg
dec
sub
inc
fwait
dec
and
or
outsb
dec
testb
cli
cmpsb
sub
insb
mov
inc
xchg
inc
inc
imul
iret
inc
xor
fistl
cwtl
push
in
gs
and
jo
and
aam
inc
add
adc
adc
outsb
inc
jae
fwait
jl
push
jnp
icebp
push
or
scas
cmc
mov
jmp
dec
pusha
jno
dec
dec
mov
cmp
xor
push
fldcw
xchg
fistpl
jbe
sub
nop
inc
ss
lret
outsl
lea
xchg
and
adc
in
repnz
popf
hlt
adc
and
addr16
mov
adc
sbb
into
cltd
or
xchg
dec
or
fcmovne
cli
mov
xchg
shr
and
cmpsb
cmp
fldenv
dec
in
ret
xchg
mov
cmpl
lods
jbe
ds
addl
daa
dec
cs
pop
arpl
lods
adc
addb
lret
jl
andb
sub
bound
cli
sbb
int
mov
stc
mov
jecxz
into
sbbl
push
inc
ljmp
jno
rolb
xchg
add
sbb
in
ds
xchg
popa
fwait
movsl
jle
sub
pop
testl
movb
js
pop
adc
ret
loop
loopne
test
sbb
dec
xchg
test
iret
clc
rcr
pop
aam
es
pop
push
fimull
xor
aad
cmp
sub
scas
inc
das
or
clc
cmp
cmpsl
popa
ret
scas
das
or
cs
out
shl
jecxz
cmp
sbb
jno
aad
xchg
leave
cmp
xorl
jle
jge
lahf
test
decb
and
scas
jo
cmp
mov
scas
add
cmp
sbb
lock
add
inc
xor
cmp
shrb
add
outsb
or
dec
push
bound
nop
insb
loopne
movsb
mov
sbb
push
dec
sti
aam
nop
push
scas
fldl
cs
mov
inc
ja
adc
cmp
orl
ds
push
or
pop
orb
in
es
fsubp
mov
jnp
xor
jns
je
pop
imul
lret
jmp
mov
out
sbb
sub
xchg
sub
xchg
jle
add
fimull
mov
insb
push
sbbl
cmp
fimuls
jnp
pop
push
imul
add
mov
mov
push
fiaddl
dec
dec
les
sub
call
lret
in
and
call
mov
shll
or
in
xchg
mov
enter
adc
pop
pop
lea
enter
pop
and
push
idivb
add
loopne
dec
repz
pusha
dec
loope
sbbl
stos
imul
push
or
xchg
fdivr
mov
test
pop
incb
pop
in
xchg
pop
lret
xor
cmp
fcompl
mov
rolb
pop
mov
push
fsubs
xor
xor
and
jmp
movsb
int
lahf
stc
mov
or
xchg
jecxz
inc
mov
mov
xor
mov
insb
mov
mov
push
or
ja
push
loop
call
xchg
jnp
fcmovnb
jmp
ret
mov
fidivs
and
or
xchg
lcall
ret
cmp
imul
cmpsl
repnz
out
add
mov
mov
testl
dec
stc
loopne
mov
push
or
mov
push
lea
in
testb
inc
fists
xor
lahf
movsl
mov
mov
scas
sbb
xchg
in
add
push
into
xchg
int
inc
inc
mov
les
insl
mov
repnz
inc
scas
mov
jmp
dec
imul
add
cmp
dec
xor
mov
pop
mov
inc
pop
push
std
icebp
push
jge
pop
xor
es
add
orl
inc
mov
rolb
sub
in
mov
adc
or
cmp
shll
inc
mov
test
out
std
adc
pop
inc
gs
jle
movsl
movb
cmp
or
out
lahf
xor
inc
jge
hlt
iret
push
dec
xchg
sub
add
popa
adc
jmp
fbstp
out
push
dec
adc
adc
add
cmp
shll
lock
push
in
sbb
push
sahf
filds
nop
adc
jns
movsb
out
bound
outsl
xor
jno
mov
or
add
cltd
in
cmp
popa
cmpsb
cmp
jle
movsl
xchg
push
outsl
inc
push
xlat
xor
cmp
xor
cmc
ret
mov
das
sub
mov
adc
mov
dec
imul
mov
add
repnz
ret
loope
mov
inc
lahf
sub
mov
adcl
call
cld
mulb
jmp
ret
cmp
inc
dec
inc
jnp
mov
das
push
fists
stos
add
push
dec
loopne
push
cmpsb
cltd
dec
mov
mov
adc
mov
and
fsubl
fistps
ss
or
fiadds
mov
push
shll
dec
adc
or
push
mov
jo
popa
mov
inc
cli
pop
and
enter
int3
and
das
inc
iret
push
push
ja
mov
test
cmp
lods
andb
or
fisubrl
add
out
pop
push
inc
leave
inc
outsb
out
and
jg
dec
and
fsincos
mov
mov
pop
jmp
mov
leave
popa
insl
lahf
pop
and
fiaddl
push
inc
mov
ret
sbb
xor
iret
je
loope
jns
or
xchg
ret
mov
jnp
xchg
sub
aad
or
sbb
mov
aam
inc
imul
sahf
mov
jp
stos
dec
xchg
sbb
fs
jle
cltd
sbb
test
aam
push
enter
add
loopne
jbe
push
int
in
add
jo
stc
jb
mov
imul
dec
push
enter
fs
out
repz
inc
push
adc
inc
xchg
enter
sbb
aad
inc
daa
sbb
lods
sub
pop
dec
inc
iret
je
xchg
fnstsw
ficoml
ret
pop
pop
and
mov
sub
inc
mov
dec
xorl
mov
call
xchg
popf
lock
loop
mov
aas
leave
mov
mov
leave
lock
addr16
ja
dec
add
popa
or
dec
xchg
ja
jmp
inc
popf
jb
jmp
pop
and
xrelease
push
xchg
in
xchg
repnz
loop
mov
push
xorl
cltd
add
push
pushf
loope
in
dec
lds
cmp
cltd
pop
clc
nop
lock
sbb
xchg
pop
js
mov
fildl
mov
mov
mov
in
push
fidivs
inc
push
pop
adc
cmpsb
out
xor
mov
xor
roll
inc
mov
movsb
scas
ljmp
mov
pop
lea
lods
icebp
leave
insl
rol
inc
fwait
stc
dec
push
movsl
mov
loop
test
mov
ljmp
adc
popf
jp
mov
dec
jbe
jo
or
test
insb
sbb
bound
cmp
mov
ja
adc
mov
hlt
aad
mov
stos
add
mov
and
pop
sti
jmp
mov
mov
test
sub
imulb
int
fwait
dec
jae
iret
cmp
add
pop
pop
xor
or
or
rorl
cmc
xchg
stos
rclb
pop
sbb
jle
jbe
jmp
out
imul
insl
sahf
push
popf
sti
dec
pop
bswap
mov
nop
xchg
adc
std
ss
dec
das
push
and
mov
cmp
into
adc
popf
incb
shl
sbb
push
mov
insl
es
adc
into
addr16
sbbl
cltd
cs
scas
sub
adc
push
mov
jmp
lret
test
aaa
inc
add
aam
movsl
test
cli
punpckhwd
xchg
mov
notb
xlat
in
inc
and
fs
stos
lret
jb
pop
popf
imul
mov
xchg
xchg
pop
mov
mov
iret
pop
mov
add
mov
lahf
mov
push
xlat
fnstcw
insb
call
fwait
movl
mov
push
mov
hlt
aad
mov
dec
jnp
jnp
inc
xor
push
call
sub
adc
cltd
mov
pop
pop
push
sarb
test
lock
stos
fs
cmpsb
mov
xchg
aam
xchg
out
mov
jnp
dec
add
in
scas
inc
out
insl
dec
jp
imul
dec
mov
dec
pop
test
divb
jle
cmp
pop
push
adc
push
pushf
aam
clc
xchg
repnz
jg
sub
mov
fincstp
call
mov
je
daa
dec
mov
push
sbb
inc
sbb
frndint
lret
jne
andb
mov
inc
adc
loop
sbb
fldt
inc
mov
push
jl
cmp
inc
mov
push
faddl
lahf
dec
insl
push
pop
jbe
sar
xchg
aas
add
sub
stc
add
or
fnstcw
dec
pop
ds
inc
pop
call
jge
pop
lahf
decb
mov
inc
fstpl
mov
cmova
cwtl
inc
adc
jbe
hlt
loopne
movl
repz
insl
stc
mov
dec
sbb
enter
add
data16
out
fwait
jns
fnstsw
inc
push
inc
adcl
out
mov
adc
shlb
hlt
mov
pop
push
ds
xchg
ret
xchg
sbb
mov
inc
repz
xor
inc
das
cld
outsl
jmp
inc
dec
mov
mov
push
insb
int
mul
push
nop
cli
aaa
cmp
shl
and
cld
pop
jge
xchg
dec
rorl
fiaddl
mull
cmpsb
mov
xchg
fs
xor
stos
xchg
mov
in
notl
mov
sub
add
shll
inc
pop
lods
pop
adc
std
xchg
pusha
mov
or
outsb
xchg
in
push
mov
cld
je
leave
xchg
jp
mov
xchg
lods
outsl
cltd
pop
mov
test
int3
add
mov
sbb
loope
or
mov
mov
arpl
div
mov
dec
jecxz
loopne
sub
dec
and
pusha
movb
and
pop
cmp
in
in
stc
push
pushw
popa
cltd
test
sti
sub
out
or
sub
fsubs
xor
mov
daa
pop
in
repz
push
mov
mov
in
es
loope
imul
mov
push
sbb
mov
sbb
xchg
mov
rcrl
out
repz
jno
jle
push
stos
popa
gs
mov
or
push
push
mov
test
pop
aas
stc
mov
inc
js
xor
jp
sahf
enter
rorl
lea
movsb
inc
xchg
dec
ja
ss
mov
jno
mov
push
mov
or
mov
sbb
pop
mov
ja
loope
stos
cld
and
imul
arpl
fistl
jge
hlt
mov
push
ljmp
jbe
mov
out
in
and
test
pop
movsl
ret
add
sbb
pop
adc
in
outsb
ja
lcall
mov
xor
sahf
aam
lahf
cmpsl
gs
mov
cmpsb
lret
fscale
sub
or
js
fsubrl
pop
cmpsl
cwtl
mov
inc
dec
or
pusha
jae
loope
or
int
insb
ja
fisttpll
sbb
stos
sub
lds
sbb
lahf
shr
test
decb
mov
std
or
insb
addr16
dec
inc
clc
add
test
cmp
cmp
push
inc
xor
int
mov
mov
pop
mov
test
and
adc
inc
inc
pop
pop
mov
adc
cmpl
iret
cs
add
sub
inc
and
inc
jge
mov
adc
add
mov
xlat
sub
fwait
mov
xchg
and
cli
xchg
sbb
mov
lcall
lret
inc
lcall
push
jmp
lds
and
push
inc
dec
arpl
cmp
or
push
cs
jge
fcmovnu
inc
fdivs
add
or
mov
adc
mov
shll
inc
into
outsl
jb
push
daa
xchg
sub
pop
scas
xorb
ds
lods
into
inc
add
clc
or
jbe
mov
sar
mov
mov
push
movsb
dec
std
out
mov
out
pop
and
xchg
scas
out
mov
test
xchg
aas
mov
adc
cmc
into
pop
sbb
sbb
push
aas
push
mov
test
aaa
and
mov
lds
sbb
mov
bnd
adc
push
adc
push
scas
add
cmp
jne
rcrl
mov
xchg
push
xor
fdivrl
inc
stos
dec
sahf
mov
jnp
aam
insl
xchg
ljmp
lcall
inc
dec
repz
lock
mov
and
xor
add
cmpsl
ficompl
movsl
xor
inc
mov
mov
inc
adc
inc
sub
scas
lods
pop
out
add
pop
orps
push
mov
mov
xor
adc
mov
cmp
popa
mov
outsb
jp
and
inc
sbb
cmpsl
inc
xchg
cmp
and
push
push
imul
shrb
jns
xlat
lods
cltd
mov
sbb
inc
call
mov
pop
cmp
aas
imul
xchg
dec
outsl
dec
sbb
mov
into
cmp
pusha
sub
and
les
stos
les
mov
ret
subb
add
sbb
mov
lods
adc
xchg
adc
orl
insl
mov
fsubl
and
in
icebp
leave
inc
inc
js
mov
dec
popf
lea
sub
scas
loopne
sub
pop
pop
xchg
movsb
push
dec
jae
jcxz
or
mov
je
dec
imul
sbb
lods
cltd
xor
jmp
mov
enter
je
daa
pop
xor
xor
popa
icebp
je
jle
pop
icebp
push
cli
loop
dec
add
mov
out
fidivs
lahf
pop
stos
add
divl
xchg
imul
jecxz
iret
pop
push
enter
cmp
pop
sub
pop
ja
add
insl
sub
ds
fld
test
divb
and
xor
push
insl
aam
fmuls
jge
add
aaa
shlb
arpl
sbb
jbe
jo
jle
sbb
outsb
jl
xchg
bound
iret
data16
push
jo
push
xlat
ret
jp
notb
shrb
and
std
loope
movsb
push
and
insl
ss
dec
dec
mulb
push
push
sarb
mov
leave
ljmp
enter
ror
ds
adc
and
push
adc
cmc
xchg
xchg
popf
mov
sub
and
sbb
sbb
xchg
das
sbb
or
popf
dec
in
mov
es
xor
sti
hlt
into
sub
fisubs
cmp
sub
loope
test
pop
into
adc
popf
lods
insb
adc
and
jge
pop
cmp
add
and
dec
je
xchg
add
add
push
repnz
lods
repz
incl
aad
sarb
pop
sbb
push
mov
or
iret
xchg
mov
push
aas
addl
clc
frstor
xor
cmpb
sub
je
pushf
xor
add
arpl
push
das
xor
popa
out
or
and
adc
loopne
and
cmp
loop
mov
popf
xchg
xor
add
xchg
ds
jmp
push
and
lods
movsl
outsb
iret
rcll
sahf
push
mov
jns
daa
sub
into
inc
jge
mov
or
pusha
and
dec
ret
or
jge
mov
shrl
cmp
es
pop
add
std
pop
bound
sub
xor
and
sub
out
adc
sub
pop
inc
mov
push
sbb
pop
xor
push
imul
repz
cmp
cld
xchg
and
sub
into
inc
pop
imul
lahf
lea
mov
repz
cmpsb
popf
sbb
rolb
dec
and
push
scas
lret
mov
xchg
adc
imul
call
or
testl
mov
cltd
sarb
jge,pn
mov
mov
das
push
stos
pushl
les
fwait
aad
pushf
jnp
and
scas
orb
imul
cld
mov
sbb
inc
mov
js
stos
lods
jns
insb
lods
cli
sti
sbb
popa
push
cltd
mov
orl
fidivrl
aad
scas
sbb
cmp
mov
mov
je
addr16
in
in
addb
adc
and
repz
sbbl
mov
xor
jb
xor
shl
in
mov
jp
xchg
clc
aam
and
pop
cmpsb
lahf
push
and
movsl
jbe
addb
pop
test
mov
pop
sub
push
pop
push
mov
jg
pop
cmp
and
and
sbb
mov
sbb
je
or
jne
jle
mov
xchg
insl
leave
xlat
adc
movsl
adc
cmpsb
jbe
pop
and
push
fisubrs
add
mov
jp
in
xchg
mov
mov
pop
inc
jnp
mov
pusha
stc
xor
outsb
xchg
stos
push
push
subb
mov
aas
mov
test
push
and
lret
sub
repnz
mov
pop
sub
roll
or
inc
mov
mov
push
shlb
or
dec
mov
dec
add
add
das
push
pop
xchg
das
scas
xchg
lods
ss
jl
xor
das
xlat
xlat
int3
jl
in
or
sahf
int3
sub
jl
push
xchg
mov
mov
lea
push
adc
sub
out
jge
mov
addr16
lods
popa
enter
cld
test
xchg
dec
outsl
fadds
pop
insl
push
adc
inc
sbb
pop
or
add
mov
pushf
test
dec
push
js
xor
aad
in
sbb
jmp
pop
adc
ds
xchg
jnp
lods
enter
gs
mov
repnz
xchg
cmp
mov
xchg
dec
xor
mov
sbb
pop
movsl
fists
add
jno
or
jns
rcr
add
fwait
xor
push
sbb
and
pop
dec
test
shlb
rcll
cmc
pop
clc
push
sbb
rorl
stc
cmp
pop
loope
mov
jecxz
aad
scas
outsl
add
pushf
ljmp
add
je
bound
adc
push
sub
fidivrl
push
cmpsl
es
aaa
data16
ds
jge
lods
or
stc
es
enter
add
cmc
add
aas
in
mov
mov
imul
xchg
pmulhuw
mov
add
mov
xchg
cmp
push
push
push
divl
xor
ret
push
movsb
mov
cld
mov
pop
test
or
and
cmpsb
out
inc
popa
and
xchg
neg
fmull
shll
mov
mov
adc
xorb
push
xchg
clc
test
pushf
sub
lods
mov
push
inc
cmp
fildl
mov
mov
dec
and
pop
inc
mov
pop
sub
int
sub
push
scas
call
repnz
inc
fldl
repz
mov
and
es
xchg
inc
cmp
xor
dec
sub
jecxz
mov
repnz
test
cmp
push
stos
mov
ret
pop
mov
mov
gs
int
test
mov
mov
jmp
lret
or
adc
rol
push
sbb
pop
cwtl
test
mov
aaa
cmc
pop
sbb
ficoms
scas
and
pop
shrl
popa
inc
les
sbb
mov
cmp
lock
mov
gs
ret
cld
push
out
loope
inc
xor
sbb
sti
mov
imul
sbb
adc
mov
lock
xchg
lock
inc
mov
dec
push
frstor
mov
mov
mov
out
lds
mov
fldt
add
int
cltd
repnz
leave
orl
xor
out
arpl
inc
add
mov
in
test
mov
sbb
mov
dec
sbb
or
jp
dec
sbb
pop
jnp
fcoms
cmp
shll
gs
or
lock
cmc
fisttpl
loopne
adc
daa
pop
fcomi
or
or
jnp
cwtl
and
in
out
push
insl
jbe
lods
mov
stos
int
cld
xor
hlt
push
cld
sub
mov
mov
sub
out
in
push
imul
sbb
cltd
adc
repnz
ja
push
cltd
pusha
popf
call
push
mov
int3
adc
ret
loopne
int3
mov
into
add
aaa
and
movsl
data16
pmaxsw
iret
insl
fiaddl
andb
mov
popf
xlat
pop
adc
shrb
ret
mov
mov
lcall
mov
rcrb
xor
dec
add
xchg
pop
adc
sub
ja
mov
adc
push
sbb
and
mov
lods
sub
push
mov
mov
lret
add
aas
and
pop
test
xor
add
lods
ds
les
xchg
lds
sbb
rorl
adc
enter
jge
or
enter
in
sub
push
sarb
andb
jmp
adc
jg
and
dec
fdivrl
loop
subl
jmp
test
mov
add
in
imul
ret
aaa
pop
scas
stos
stc
fnstsw
int3
ret
je
push
adc
addr16
rcrb
jg
adc
cs
and
out
je
mov
andb
adc
mov
test
insb
sub
jne
push
pcmpgtd
mov
pushf
cmpsb
push
adc
sub
test
lock
pop
jo
xchg
jnp
add
pop
push
mov
scas
add
push
mov
cmp
add
jnp
pushf
std
push
iret
out
stc
gs
sahf
mov
add
cs
cmc
xor
mov
jb
mov
dec
popf
shrl
xchg
mov
aam
push
mov
push
cmp
stos
jno
hlt
in
push
jecxz
sub
add
xchg
repz
icebp
lcall
sbb
ficomps
cli
xor
jle
aam
sarb
lds
jne
call
jle
sar
jnp
scas
add
ficoms
popf
push
ficompl
add
push
sbb
movsl
movsb
sub
loopne
mov
int
push
jne
daa
and
dec
fsubl
xchg
imul
adc
push
and
sub
lods
add
js
pop
aam
jp
push
insl
sub
inc
jmp
cmp
int
and
lret
arpl
mov
sahf
std
xchg
push
inc
add
nop
movsl
mov
pop
pop
sbb
or
aas
mov
mov
add
push
adc
movsl
loopne
shrb
jecxz
cmp
jge
lahf
mov
sahf
push
into
push
mov
fmuls
lods
or
mov
or
cmp
adc
enter
lcall
rcll
or
imul
int3
fcmovne
dec
sbb
dec
push
add
rol
repz
adc
movsb
mov
in
or
inc
mov
ljmp
mov
popa
scas
mov
loope
xor
and
movsb
popa
adc
cvtdq2ps
int3
push
pop
stos
lahf
test
je
and
int
cmp
iret
dec
jmp
jne
lods
pop
dec
adc
cwtl
bound
jbe
into
js
inc
inc
mov
loopne
or
add
mov
xor
ss
xchg
rol
imul
mov
cli
ret
push
loope
arpl
mov
insl
cmp
pop
push
or
inc
lds
cmp
fdivl
lea
and
inc
mov
sti
out
stos
jne
shl
inc
or
icebp
mov
xchg
inc
data16
push
cmp
adc
fsubrs
jge
or
ret
sbb
mov
xor
or
and
adc
push
addb
dec
add
xchg
sbb
xchg
int
lods
jo
leave
and
add
mov
ljmp
inc
add
inc
cmp
aas
lock
fmull
stos
loop
jno
inc
adc
jl
fsub
or
cmp
adc
shrl
sti
mov
test
jg
ret
sub
call
sub
sti
mov
cli
test
outsl
fmull
mov
add
push
std
insb
andl
insb
push
sbb
push
stos
or
jnp
sub
add
inc
pop
mov
push
pop
dec
jbe
hlt
repnz
popa
pop
jb
mov
movsl
mov
out
dec
out
mov
lods
popf
into
arpl
ja
xor
pushf
pop
and
push
push
xchg
out
ficoml
int3
pop
sbb
sbb
aaa
or
jle
loope
cmp
sub
pop
filds
icebp
enter
imul
pop
js
orl
call
push
add
pop
lea
lahf
dec
push
fdivs
add
stc
sbb
jge
adc
loope
jnp
jle
xor
test
in
jne
ret
cmpsl
movsl
mov
pop
and
mov
nop
jecxz
inc
mov
fisubs
std
iret
lcall
and
xor
mov
push
hlt
jno
push
dec
lock
aad
xchg
mov
je
lret
cs
repz
push
push
test
dec
lds
gs
and
movsb
mov
pop
cmp
sbb
orb
popf
adc
pusha
pop
xchg
xchg
test
cs
dec
iret
push
sbb
fisubrs
data16
ret
js
fisttpl
inc
rorb
push
fdivs
sbb
or
std
adc
insb
out
or
xchg
test
mov
jnp
cwtl
pop
push
in
jecxz
inc
xchg
or
fsubrs
or
movsb
mov
xchg
lahf
lcall
fdivl
test
dec
inc
pop
jge
adc
aam
hlt
jp
loopne
pop
cmp
add
jb
incb
insl
mov
das
jb
pushf
mov
rorb
pop
and
syscall
cwtl
inc
fsubs
imul
ds
fisttpl
pop
jl
inc
or
enter
test
mov
decb
std
jnp
xor
cmp
sbb
pop
loopne
movb
and
test
std
jle
pop
leave
pop
loopne
sub
aas
and
add
mov
mov
mov
push
cs
int3
gs
and
loop
and
xchg
pushl
jle
sub
or
lods
fnstsw
lea
mov
add
mov
rcrl
das
cmp
add
pushf
out
or
scas
popa
mov
jb
iret
arpl
cmp
ret
nop
in
shlb
lock
sub
data16
leave
outsl
and
gs
pop
dec
aam
jb
mov
adc
xchg
xchg
hlt
xchg
sub
jns
fisubl
cmp
out
insl
data16
inc
insb
fldl
call
xchg
xchg
cmp
dec
test
fldcw
movsl
push
dec
jl
cmpsl
cmp
movsl
mov
fwait
outsb
outsb
movsl
push
jne
ss
int3
js
lcall
xchg
hlt
out
xchg
sahf
mov
and
jp
ret
testl
mov
sub
inc
pop
nop
and
roll
mov
cmpsb
lods
sbb
mov
inc
adc
hlt
xchg
or
cmp
inc
out
roll
cmpsb
xor
ss
cmpsl
in
aas
mov
fnsave
jmp
sub
dec
jo
push
jne
in
dec
xchg
stos
xor
cld
into
ds
adc
add
das
sub
jl
in
jnp
stos
sub
jnp
xor
cmp
or
push
adcl
mov
inc
or
or
fidivl
xor
mov
or
leave
enter
adc
cwtl
and
xchg
pushf
in
outsb
cmp
inc
aaa
mov
add
cmp
in
pcmpeqw
mov
loop
pop
pop
ja
pop
sub
lcall
xchg
add
xchg
mov
mov
and
das
int3
fsubr
pop
cmp
mov
push
mov
popa
inc
leave
sbb
dec
push
or
xor
xchg
movl
inc
insl
push
pop
cwtl
repz
test
lea
pop
sub
cvttps2pi
dec
scas
das
shr
sbb
clc
adc
je
pop
cmp
shl
adc
or
lock
push
popf
pop
cmp
push
test
or
mov
fwait
xor
push
or
xor
jp
push
and
les
sub
mov
clc
daa
cmp
ret
loope
shl
mov
xchg
xlat
pop
daa
xchg
mov
iret
mov
bound
dec
cmp
popf
mov
pusha
dec
pop
out
fincstp
cmpsb
pop
inc
fmull
dec
mov
roll
push
mov
jne
push
pop
dec
or
lret
cmp
jl
xor
lods
sti
insb
mov
xor
rcrb
mov
das
sbb
xchg
aam
aam
mov
scas
in
xchg
loopne
push
fwait
mov
xor
jnp
pop
call
xor
add
xchg
xor
pop
inc
adc
rcrl
lock
arpl
pop
pop
mov
inc
pop
or
push
mov
sub
mov
cmpsb
push
in
je
sbb
jp
mov
cmp
mov
iret
cmp
push
cmp
mov
jp
scas
shlb
leave
dec
stc
rorl
daa
das
xchg
ficompl
out
dec
adc
out
pop
mov
aas
imul
fstps
mov
nop
mov
dec
lock
push
popf
mov
mov
add
daa
cmp
push
adc
and
cmp
iret
mov
push
test
or
pop
jb
int3
or
mov
and
sub
mov
sbbl
add
inc
cs
nopl
nop
sbb
mov
iret
xor
neg
fcompl
outsb
mov
jbe
mov
cmpsb
addr16
insb
dec
cmp
xchg
dec
dec
jmp
test
lret
in
xchg
push
sub
xor
test
xchg
push
dec
imul
lea
cmp
dec
test
lret
push
popf
xchg
jno
mov
int3
ss
xchg
cmp
cmpsl
movsb
mov
add
mov
sub
mov
xor
rcrb
push
push
dec
out
xor
xlat
nop
int3
es
into
xchg
adc
test
or
repz
fwait
xor
cmp
mov
jne
sbb
lods
in
cmp
out
pop
popa
cmpsl
cmpsl
mov
leave
fcoml
cmp
fs
pushl
mov
xchg
dec
loop
in
popa
push
test
test
add
inc
leave
or
cld
stos
sub
xor
shlb
leave
dec
das
sbb
mov
rcr
out
dec
xchg
cmpsb
mov
pop
xor
push
hlt
in
pop
repnz
fs
jno
scas
and
cmc
and
and
js
clc
aad
ds
test
dec
push
adc
hlt
pop
sbb
repnz
fistl
xchg
rolb
xchg
or
or
add
mov
xchg
mov
andl
jp
xlat
sbb
int
push
inc
xor
pop
clc
iret
xor
dec
mov
adc
ss
fmulp
pop
loop
fdivl
inc
sti
xchg
into
fists
arpl
xchg
cmp
out
sti
cmpsl
add
aad
mov
jl
xchg
jmp
push
dec
movsb
pop
pop
jne
jmp
roll
cwtl
cmp
sub
aam
call
std
repz
lock
mov
daa
dec
mov
lea
dec
and
mov
add
gs
xor
dec
pop
cmpsl
fnstcw
testl
sbb
scas
neg
cwtl
dec
pop
inc
in
fndisi(8087
loope
gs
outsl
lcall
div
inc
lods
movsb
jmp
lods
sub
or
imul
into
inc
fs
pop
inc
aam
push
movsl
sti
jne
mov
cmp
mov
loop
rcrl
popa
wrmsr
pushf
fsts
xchg
sbb
mov
pop
push
dec
dec
lret
add
test
pop
or
jae
mov
add
jns
mov
cs
mov
pop
xchg
mov
ljmp
aaa
cmp
jl
mov
dec
ret
jge
mov
xchg
aam
mov
sub
incl
scas
pop
and
jmp
idivl
pop
fsubl
jp
cmp
sbb
inc
sub
jge
push
mov
push
mov
and
lret
lea
push
mov
adc
push
jge
dec
sbb
subl
dec
inc
mov
int3
add
sar
jne
adc
mov
pop
mov
fucomp
dec
push
test
rcr
jp
dec
jo
cs
pusha
pop
mov
nop
clc
inc
sti
out
dec
pop
jns
xor
fcom
mov
cmp
adc
and
ret
pop
cmp
mov
fxam
stc
mov
push
sbbb
sbb
repnz
lret
and
push
pop
rcl
into
ljmp
adc
fmul
rorw
add
pusha
call
lds
or
push
or
scas
scas
movsl
or
sahf
inc
into
pop
rorl
and
js
sbb
aas
xchg
mov
adc
push
cmpsb
leave
int3
xor
flds
imul
scas
pop
jne
arpl
sbb
xor
scas
sahf
pushf
sub
or
push
shll
inc
cmp
push
pusha
pop
sub
sub
add
jnp
push
cmp
cmp
lahf
fs
sti
xchg
in
je
cltd
or
bound
mov
mov
cli
out
mov
or
js
and
test
cmp
xor
das
add
arpl
sub
dec
cmp
icebp
sti
sub
test
xor
popf
pop
imul
mov
mov
sub
js
pop
or
or
repnz
xor
cmp
data16
cmpsb
add
mov
dec
out
pop
adcb
in
fcmovb
mov
sahf
gs
xor
xor
addr16
adc
aas
mov
outsb
in
icebp
call
fld1
fidivrl
comiss
ja
inc
sar
out
cmp
enter
je
mov
jne
adc
addl
arpl
fbstp
fsubs
push
test
out
out
aaa
jle
sbb
sbb
jnp
les
mov
xor
adc
jns
hlt
mov
inc
cmpsb
sbb
das
lock
imul
dec
xlat
dec
jno
sub
fcmovnu
sti
add
xchg
inc
test
push
clc
add
push
dec
push
stos
sbb
dec
and
push
xorb
mov
jnp
mov
sub
aaa
popf
mov
out
data16
mov
lcall
push
adc
loop
lret
and
xchg
push
pushl
sti
test
lds
bound
push
rclb
push
stos
mov
jmp
dec
jno
mov
push
xor
xchg
pusha
xchg
push
arpl
pop
cmp
inc
cltd
repz
js
adc
jnp
mov
and
dec
aaa
lret
dec
adcl
ds
push
adc
cs
push
fisttps
mov
dec
or
shlb
sub
insl
pusha
cmp
and
lock
rorl
pavgb
in
mov
push
pop
cmpsb
pop
into
and
xor
push
repz
inc
in
pop
mov
xlat
adc
mov
mov
adc
pushf
xor
hlt
imul
adc
data16
add
inc
cltd
add
loope
sbb
sub
sub
popf
fnstcw
adc
push
push
enter
fistps
mov
pop
xchg
into
daa
jge
mov
push
and
scas
cmpsl
mov
stc
and
popf
push
or
sahf
loopne
add
pop
mov
xorb
jle
outsb
xchg
addr16
push
mov
lret
sbb
or
sub
not
ficoms
adc
das
jecxz
or
iret
push
adc
insl
inc
sbb
xchg
jmp
movsl
push
ds
jo
rcll
push
inc
imul
sahf
lret
or
mov
pop
cmp
jp
or
inc
mov
fisubrl
mov
std
add
lds
int
pop
xor
arpl
xchg
adc
push
addl
and
dec
inc
or
and
xchg
jbe
aaa
movsb
push
xor
sbb
fwait
cmpsl
int
nop
lock
les
push
jns
arpl
sbb
xchg
std
in
cmpsl
call
pshufw
xchg
mov
fst
insl
xor
outsl
shll
mov
jmp
in
scas
mov
sti
inc
rcrl
pop
fwait
add
shrb
mov
stos
push
dec
push
loopne
jecxz
popf
mov
fs
leave
adc
cwtl
push
mov
xor
ljmp
jecxz
add
push
jae
mov
inc
loop
dec
int3
mov
push
out
pop
sub
lcall
mov
and
aad
push
add
int
pop
fcoms
stos
xor
cs
mov
xchg
pop
mov
adcb
sbb
push
adc
xchg
xchg
inc
aam
in
jns
popa
jb
xor
imul
jbe
mov
movsl
addl
inc
nop
add
lahf
pop
movsb
fisttps
push
xchg
in
adc
shlb
arpl
inc
inc
mov
cmpsl
rolb
mov
movsb
out
mov
mov
or
icebp
mov
dec
pop
xchg
arpl
gs
mov
xchg
inc
add
cpuid
jne
ret
jmp
js
arpl
mov
gs
xor
lcall
xchg
push
repz
jnp
ljmp
mov
icebp
cmpsb
enter
inc
mov
sbb
xchg
scas
and
jae
mov
pop
enter
push
bound
mov
into
dec
int
jle
fwait
mov
shll
lea
test
fsubs
mov
daa
and
testl
lret
daa
sub
pop
sbb
add
mov
cmpsl
jecxz
imul
inc
fiadds
mov
mov
pop
jbe
lods
rcr
inc
sub
lods
xchg
test
xchg
fsubr
mov
push
movsl
cmp
pushf
push
mov
test
outsb
jno
jl
lea
mov
jg
or
stos
pusha
pop
test
es
hlt
hlt
in
test
inc
adc
stc
lock
xor
nop
sub
cmp
pop
lods
cli
adc
dec
and
jae
add
and
push
xchg
cli
std
inc
mov
ror
leave
icebp
push
repz
mov
adc
in
mov
xchg
sbb
push
pop
xor
sti
popa
shll
pushl
lods
mov
push
xor
sbb
adc
mov
pop
ret
pop
mov
cmp
loopne
dec
lcall
dec
push
les
jnp
shrl
ds
dec
inc
ret
ljmp
mov
add
data16
fsubrs
gs
mov
xchg
int
es
jbe
mov
adc
xor
mov
cmp
mov
popf
dec
sbb
repz
clc
call
out
jg
pop
mov
popf
adc
jp
sub
inc
outsl
sarl
xchg
stos
inc
and
xchg
ret
test
push
rcr
mov
in
inc
jne
cmp
arpl
les
out
aas
outsb
push
int
pop
jns
daa
dec
dec
mov
orl
pop
pop
mov
jle
movsb
inc
add
lds
pop
push
lea
sbb
loop
cld
in
inc
xchg
mov
pop
bswap
inc
movl
sbb
adc
lds
ds
syscall
cmp
shlb
jge
cwtl
pop
xlat
adc
test
mov
mov
inc
mov
sub
dec
cmp
mov
imul
lods
jg
xorl
xor
out
or
mov
data16
mov
push
mov
cmc
ret
jo
ficompl
sub
fcomi
inc
inc
icebp
shll
xor
adc
les
mov
and
jb
mov
lods
or
movsl
mov
leave
pop
mov
push
imul
jne
repnz
sub
int3
leave
push
jmp
mov
dec
cwtl
pop
stos
sar
jo,pn
sti
mov
cmpsb
cltd
ds
jl
jp
mov
aaa
add
out
loope
jb
mov
in
mov
lea
outsb
dec
loope
inc
jecxz
add
xchg
jne
inc
pop
aaa
mov
inc
movsb
cmpsl
les
sbbb
pop
fistpll
lcall
repnz
adc
mov
sub
xor
jb
icebp
adc
mov
add
sti
and
iret
or
add
jl
cmp
cmp
jmp
mov
test
pop
test
pop
adc
push
sbb
adc
mov
mov
divl
add
rclb
inc
sbb
jno
inc
out
or
shr
inc
rcll
and
call
mov
ret
or
and
adc
xor
cs
pop
add
mov
call
jns
idivl
mov
es
sub
repnz
in
cs
inc
pop
mov
out
xchg
imul
dec
mov
xchg
and
sti
xor
jns
lret
add
fdivrl
adc
add
lret
movsl
xchg
in
inc
sbb
mov
dec
jns
or
pop
cmp
sbb
mov
xchg
pop
inc
inc
or
pushf
frstor
inc
fstps
sbb
cld
nop
addl
lahf
rclb
sbb
ret
ss
bsf
xchg
add
les
daa
push
pop
push
add
mov
mov
push
sub
addr16
iret
mov
bound
jp
rcrb
cmp
cli
in
or
mov
cli
cmp
stos
add
pop
mov
ror
insl
pop
adc
mov
imul
add
pop
inc
sbb
mov
dec
scas
test
jno
pop
call
fistpl
ret
rcl
or
or
fsubs
into
add
shlb
cmp
inc
scas
ret
hlt
inc
fnstsw
add
nopl
inc
push
ret
scas
add
inc
mov
jns
xor
rcr
aam
cmpsl
cmp
leave
adc
in
popf
je
fistpl
xor
xor
decl
push
sub
cmpsw
sbb
mov
push
adc
mov
sar
xchg
fistpll
and
int3
scas
and
and
mov
xchg
cltd
pusha
mov
cmp
repz
lds
or
rclb
or
cmp
aaa
inc
out
xorl
imull
xor
sub
push
push
jo
aaa
sub
push
jno
lahf
jo
adc
pushf
mov
cmp
or
out
pop
lods
cwtl
xor
int
mov
cmpsl
aaa
repz
lea
mov
or
popf
aam
mov
jno
adcl
inc
cld
xor
dec
imulb
repnz
movsl
and
mov
mov
push
sti
push
mov
push
lahf
ljmp
je
or
or
jo
stc
sub
dec
adcl
rcrl
lock
push
add
fwait
mov
ljmp
inc
sub
adc
fbld
int
into
push
icebp
cmp
sbb
dec
outsl
or
push
push
lret
mov
pop
inc
or
fdivrl
and
adc
and
jecxz
xor
cmpsb
xchg
stc
jae
decl
cmp
mov
arpl
or
in
mov
mov
cmp
pop
jmp
jg
orl
ds
test
icebp
shlb
hlt
push
fwait
mov
les
into
push
pop
mov
in
inc
push
hlt
cltd
cmpsl
test
sahf
pop
call
test
xchg
rolb
sarb
adc
adc
cmp
fs
lods
lret
jnp
or
jp
stc
push
ja
cmp
or
fsubrs
in
sarl
xlat
push
mov
rcll
stc
mov
leave
cmpsb
jle
inc
jmp
inc
sbb
cmp
and
sbb
mov
cmpl
jbe
cmp
and
adc
je
std
jmp
in
sub
shll
push
jnp
mov
jecxz
pop
addb
push
inc
lds
insl
or
inc
fisubl
push
repnz
in
and
xor
lcall
xor
mov
rcrl
adc
dec
mov
shll
lds
out
cs
sarl
mov
and
loop
je
pusha
and
icebp
inc
sbb
pop
pop
js
adc
jp
movsb
aas
nop
and
lcall
frstor
dec
mov
jmp
and
addl
sti
cmp
ljmp
ljmp
pop
hlt
aas
cli
jge
lcall
jns
and
sahf
add
mov
ss
mov
fsubp
movsl
out
inc
loop
sub
mov
je
mov
sbb
test
inc
cltd
popa
push
in
rorb
fyl2x
roll
or
xor
aam
push
imul
xchg
clc
lret
push
xchg
pop
xor
stos
mov
stos
push
cld
push
sbb
rorb
cmpsl
mov
adc
insb
cmp
loope
adc
fs
pshufw
pusha
mov
and
push
not
popa
xor
lcall
mov
lds
mov
das
movsb
mov
inc
clc
in
outsb
aad
and
inc
cmpsb
jae
repz
call
dec
enter
insl
cltd
mov
psubd
xchg
mov
xor
mov
xchg
or
sahf
pop
mov
dec
sub
pop
fistl
xor
xor
mov
cmc
lods
int3
xor
push
jmp
mov
fiaddl
push
cwtl
mov
mov
in
inc
cld
xchg
sub
sub
in
mov
test
into
rol
inc
xchg
pop
cmp
mov
cmp
gs
daa
or
mov
lods
sub
cli
outsl
das
mov
push
lret
mov
add
cmp
es
je
outsb
ljmp
mov
inc
test
xorb
sub
or
mov
iret
mov
pop
cmpsb
test
xchg
in
movsl
js
pop
cmp
call
das
daa
repnz
mov
mov
mov
jle
ret
dec
xchg
inc
in
dec
enter
fstp
vmovhps
sub
mov
inc
nop
add
and
adc
push
add
leave
jne
pop
scas
mov
xchg
out
jnp
dec
mov
js
lahf
out
or
ljmp
inc
dec
jecxz
into
and
jle
mov
push
in
insl
aad
pop
test
mov
lret
jecxz
mov
or
out
js
or
mov
iret
push
pop
xchg
sub
jae
mov
lahf
mov
push
insl
jb
add
mov
cmpsl
cmp
fisttps
jmp
jmp
mov
rcll
push
in
enter
mov
pop
cmp
movsb
xorl
or
or
and
test
cmp
mov
shl
mov
adc
cwtl
icebp
jge
jns
and
pusha
lods
push
pop
rcrb
mov
call
daa
cmp
adc
loope
and
xchg
pop
mul
sbb
cs
clc
ret
xchg
fsubp
cmpl
mov
add
lods
jbe
scas
mov
insl
xchg
rcll
push
outsl
cli
imul
adc
ja
pop
cltd
imul
negl
pop
xor
sbb
mov
dec
mov
mov
cmp
dec
pushl
jecxz
cmpb
push
cmp
xchg
imul
insl
pop
push
dec
aad
fs
mov
dec
and
and
lds
sbb
clc
aaa
sahf
fs
packuswb
cmc
cmp
dec
fwait
jbe
repz
xchg
cmpsb
and
popw
sbb
popf
cmp
or
outsl
add
scas
loope,pt
repz
xchg
xor
add
and
fstps
ss
cmp
mov
les
jecxz
sbb
push
or
ficoml
ret
outsl
or
add
cld
adc
lods
or
and
mov
or
add
push
mov
jl
mov
mov
iret
jcxz
test
imul
lret
sti
and
sub
dec
push
rorl
or
lahf
or
dec
les
or
cmp
pop
out
and
jae
mov
out
pop
dec
jbe
jp
roll
jp
dec
movsb
mov
cmpsb
cmp
les
out
enter
or
mov
mov
inc
xor
test
dec
cmp
xchg
xlat
mov
dec
aam
loope
xchg
jecxz
xchg
mov
cmpsb
push
jp
push
mov
enter
ds
inc
or
lods
or
inc
sub
outsb
nop
les
pop
loope
pop
es
xchg
jbe
loop
out
pop
xor
outsb
mov
adc
push
adc
sbb
push
add
ljmp
fwait
add
mov
enter
jp
lds
or
mov
mov
pushf
or
pop
sbbl
xor
cli
out
out
mov
push
mov
aaa
mov
ds
cmp
aaa
jmp
fisttpl
sbb
or
cmp
rol
stos
mov
scas
cmpsl
adc
push
pop
hlt
xor
sub
cmpsb
call
fistps
loope
lock
in
inc
rolb
add
pop
hlt
xchg
cmpsb
or
add
cs
add
js
pushf
cmp
shl
scas
aam
jge
in
inc
pmaddwd
pop
pushf
cs
ret
mov
cmpb
mov
lods
shrb
addr16
out
sub
imull
daa
sti
push
mov
aam
inc
fwait
and
sti
xchg
push
mov
std
mov
sti
xchg
pusha
pop
js
scas
in
xchg
inc
roll
xchg
cli
mov
lahf
sub
stc
xchg
push
jmp
out
pop
aaa
movsl
xchg
scas
cmpl
dec
ret
adc
and
dec
push
pop
rol
enter
popf
mov
test
jns
add
stos
push
mov
xchg
fidivrl
inc
inc
cmp
xor
clc
in
pop
stc
mov
in
mov
jb
xorb
mov
stos
f2xm1
mov
in
push
jbe
adc
test
loopne
lret
sbb
push
mov
into
stos
mov
arpl
xchg
jmp
int
cltd
xorb
int3
pop
xchg
mov
stos
pusha
js
outsl
out
lock
ret
push
ret
sub
pop
rolb
js
lret
cld
mov
or
inc
lret
mov
cmp
push
addr16
xor
adc
movsl
adc
sti
and
fwait
adc
ret
xchg
add
aaa
ret
in
mov
stos
test
sub
jae
popa
cmp
je
mov
cmp
in
lock
adc
pop
cmpsb
iret
push
insb
or
scas
outsb
sbb
popf
lahf
sbb
roll
add
dec
sub
insb
movsb
mulb
or
ds
fcmovnu
sub
insb
dec
xchg
jle
outsb
adc
pop
pushf
fdivl
xchg
push
fcomip
jmp
in
sbb
lret
push
shll
in
out
inc
lds
ret
mov
stc
jmp
ret
jp
aaa
sbb
sahf
out
repz
cmc
sti
lret
std
jle
ret
jnp
jb
add
cwtl
out
mov
push
outsb
pop
mov
fstl
mov
mov
push
mov
mov
inc
popa
dec
jns
shrl
mov
mov
mov
pop
ret
fnstenv
arpl
adc
xor
fsubrp
fisubl
scas
cmp
test
addr16
test
adc
lock
mov
fwait
ret
fdivrl
and
shll
mov
xor
divl
cmpsb
jge
pop
adc
fwait
shll
adcl
lret
sbb
push
insl
aas
xchg
adcb
and
jl
inc
cltd
pop
add
fisubrl
jge
rcrb
mov
arpl
mov
pop
adc
nop
xor
inc
daa
push
sub
ja
mov
pop
xor
push
sub
inc
inc
mov
inc
out
jp
testl
xor
inc
hlt
and
push
inc
xchg
test
mov
jo
sbb
rcll
pop
rorl
mov
imulb
fwait
push
stos
imul
inc
imul
sub
mov
imul
popf
add
fst
adc
loop
imul
xchg
sbb
rorl
mov
dec
ljmp
push
int
out
jb
xchg
pop
mov
mov
xchg
cmp
aam
xchg
sbb
les
in
jae
or
fwait
call
xor
xchg
add
shll
es
or
ds
mov
push
rcrb
pcmpeqd
mov
mov
movb
sub
nop
dec
popf
cmp
xor
mov
test
jmp
test
inc
jmp
or
adc
vpand
and
xchg
add
xor
mov
mov
loopne
xchg
and
push
and
cmpsb
mov
xchg
sbb
insb
pop
ja
orb
adc
pop
aam
mov
cmp
bound
jecxz
inc
bound
les
push
loopne
mov
rolb
and
imul
or
mov
daa
fcomip
stc
adc
es
repnz
decb
pop
mov
and
sahf
fdivrl
mov
cmp
or
jns
jb
imul
cwtl
dec
jne
or
enter
sti
hlt
sub
popa
pop
sbb
cmp
mov
sub
mov
gs
adc
adc
lcall
lock
mov
pushf
sub
aaa
pusha
fst
or
loope
dec
lds
outsb
adc
mov
mov
ret
and
sarb
stc
in
and
xchg
push
and
add
mov
test
aad
lret
push
decb
popf
fldenv
pop
and
sbb
bound
loopne
leave
cmp
cwtl
and
shr
jbe
adc
in
fsts
jp
xor
sbb
nop
or
arpl
adc
jnp
add
test
jns
mov
stos
mov
xor
aaa
mov
subb
mov
gs
fcoml
popa
xchg
and
push
pop
lret
gs
inc
pop
add
sbb
out
into
and
movsb
fcomip
pop
mov
call
inc
inc
stos
adc
xchg
inc
shlb
aam
es
cmp
addb
outsb
imul
add
mov
pushl
fcomps
push
jp
xor
lahf
adc
inc
dec
ret
cmc
jo
ret
jno
adc
clc
xchg
outsb
and
in
mov
add
push
jmp
mov
aam
pushl
cwtl
mov
pop
fisubrs
pop
cmp
fs
in
adc
mov
inc
stc
cltd
fidivs
mov
enter
fisubl
cmp
clc
int
out
std
mov
jmp
iret
rcrl
pop
es
leave
mov
fcmovb
jns
sub
pop
add
push
xor
sub
pop
lcall
add
mov
rcl
push
ret
je
ficompl
mov
scas
jmp
mov
jnp
push
data16
aaa
dec
pop
push
dec
outsb
inc
jmp
and
lret
imul
sahf
pop
ffreep
sub
imul
jo
and
out
inc
es
cwtl
repz
or
jge
add
outsb
cmp
insl
pop
outsl
leave
xchg
mov
pop
fbstp
inc
les
pop
pop
mov
dec
cmpsl
mov
push
cwtl
xchg
inc
pop
movsl
mov
xchg
jge
and
out
dec
fildll
sahf
push
pop
cmp
roll
lret
lods
divb
pop
cmc
les
cmp
popa
sbb
movsb
aaa
push
push
pop
mov
aas
pop
sub
daa
lahf
mov
or
cmpsl
sub
dec
fdivl
pusha
fdivl
inc
popa
aad
dec
popa
cli
add
addb
daa
lea
push
fwait
mov
js
rcrb
insl
into
movsb
test
or
int3
std
and
inc
mov
jbe
aas
and
aas
push
add
stos
jo
and
in
xor
dec
and
shll
movsb
orb
add
test
insl
pop
xchg
fisubs
cld
imul
dec
bound
pushf
or
push
movsl
dec
and
mov
xchg
sti
or
insl
and
sbb
les
arpl
pop
mov
adc
dec
clc
push
dec
addl
add
les
add
cmpsb
push
jo
xor
push
pop
aam
mov
push
out
ljmp
add
or
xor
cltd
ja
movsb
in
mov
jae
pop
je
sarb
leave
jmp
sub
pop
or
dec
push
add
dec
inc
push
rcrl
dec
mov
xchg
jb
stos
sbb
mov
inc
push
mov
sub
cmp
daa
pop
sbb
or
daa
xchg
jns
push
and
jle
xor
lcall
adc
xchg
jmp
cltd
inc
scas
pop
and
push
or
xchg
inc
inc
lds
jbe
vpcmpgtd
adcl
dec
xor
das
out
xchg
pop
lods
pandn
xor
movl
xor
mov
jl
push
adc
ret
ss
data16
out
cwtl
lahf
push
dec
pop
in
push
mov
push
ss
pop
cmp
xor
scas
sarl
shrl
inc
cmp
pusha
fdivl
mov
push
mov
enter
and
mov
jg
add
push
shrb
jmp
pop
sbb
out
sub
jnp
xor
push
shl
in
lods
fcmove
pop
xlat
pop
push
mov
jbe
adc
das
add
imul
test
divl
or
mov
jne
sub
orl
mov
mov
adc
inc
mov
xchg
out
jo
das
fwait
lcall
test
inc
or
mov
sub
mov
cld
out
xchg
pop
popa
sahf
xchg
iret
sti
fdiv
aas
int3
popa
int3
inc
pop
mov
shlb
out
out
adc
aad
ret
ja
push
sarl
pop
call
gs
out
xchg
repz
in
sbb
das
xor
pusha
ljmp
sbb
pop
add
mov
push
out
sbb
es
push
dec
xchg
negb
scas
xchg
loope
mov
fldl2t
lcall
fildl
outsb
rcr
decb
adc
sahf
xor
sub
sbb
loopne
inc
stc
out
ljmp
dec
mov
jb
fcompl
or
fldenv
push
lock
les
pop
push
out
xor
inc
mov
sub
pop
das
jg
divb
repnz
jp
sbb
dec
add
lds
mov
jmp
inc
xchg
clc
cmp
popf
loopne
push
hlt
jo
mov
inc
pop
dec
test
js
or
inc
mov
arpl
inc
icebp
enter
jmp
adc
mov
jle
stos
pop
mov
pop
mov
lock
mov
jne
arpl
cmp
push
mov
xorb
out
arpl
jnp
jne
jmp
adc
stos
mov
pop
fld
leave
add
xchg
scas
sub
pop
in
mov
int
in
mov
and
out
popa
inc
mov
mov
shl
jge
jmp
mov
subb
or
adc
aad
push
mov
es
push
insl
xchg
lods
divl
je
jl
icebp
lods
mov
mov
jno
lcall
mov
push
mov
popa
xor
mov
xor
mov
mov
lods
shr
clc
insl
ret
jns
stos
cs
insl
movsl
aas
popf
jns
or
or
sub
popf
daa
sub
adc
das
pop
lret
adc
xchg
lock
icebp
daa
dec
scas
sub
mov
cwtl
sbb
or
push
sbb
cmpsl
sub
jmp
inc
cmp
pop
mov
mull
jecxz
mov
inc
nop
adc
test
sar
mov
mov
mov
scas
sub
mov
mov
stc
adc
dec
cmpsb
orl
les
clc
xlat
add
cmpsl
mov
push
pop
mov
push
rorb
and
cwtl
jo
not
xlat
or
rclb
cmp
cwtl
jbe
push
bound
pop
pop
ljmp
inc
jge
mov
sbb
push
js
push
sub
insl
xlat
pop
pop
fistl
ficoms
gs
cmc
ret
sbb
pusha
inc
data16
pop
bound
push
test
pop
sbb
adc
test
lcall
notl
sahf
and
stc
push
and
mov
ret
pop
movsl
mov
and
sub
and
paddsw
cmp
cmp
fcmovnbe
faddl
xor
data16
lods
xchg
and
test
inc
pop
dec
xchg
mov
sub
loope
aaa
mov
dec
xchg
jl
loop
push
arpl
aas
pop
pop
mov
inc
adc
test
cmpb
pop
mov
popf
inc
jl
fs
add
jno
jne
sbb
and
adc
sub
jecxz
mov
test
movhps
xor
mov
iret
push
in
mov
dec
mov
pop
in
mov
sub
xchg
popf
popa
mov
mov
movsb
xor
xchg
sub
jno
jecxz
mov
dec
jl
push
mov
mov
mov
sbb
xlat
jmp
cwtl
jle
orl
mov
mov
arpl
or
mov
push
dec
cwtl
rcrb
pop
sub
cmpsb
fcmovnb
inc
movsb
lcall
nop
lds
pop
rcrb
inc
jnp
aas
test
or
jns
inc
cmpsb
clc
mov
dec
popa
push
mov
pop
sub
insl
test
push
pop
sub
mov
mov
pop
push
cld
mov
test
push
loop
je
mov
sub
xchg
mov
rcr
adc
cmp
mov
enter
mov
fists
push
ss
jmp
shrb
inc
and
sub
loop
aad
adc
push
mov
scas
cmpsb
dec
movb
push
mov
js
jecxz
mov
cmp
rol
mov
lcall
sbb
jns
and
fisubs
sub
adc
jecxz
enter
dec
movsl
int3
movsb
mov
sarb
bound
jns
into
jl
and
mov
inc
and
lret
xchg
roll
lret
ficoml
fldl
mov
popf
sbb
fisubl
mov
enter
fwait
jge
xor
or
jbe
sub
push
test
cmc
and
shl
sbb
insl
loope
adc
sbb
jns
push
mov
xchg
inc
adc
cmpsl
mov
mulb
scas
insb
or
jns
xor
mov
in
pushf
ss
sub
mov
negl
add
in
inc
data16
int3
push
adcb
xchg
sub
pop
push
faddl
movsl
es
je
sbb
push
push
mov
or
sub
out
mov
cli
sub
dec
lods
fwait
icebp
mov
shll
in
mov
pop
out
mov
fistpl
cs
mov
std
adc
es
adc
call
push
xchg
int3
mov
rorl
xor
aad
insl
cmc
inc
and
sti
sbb
pop
mov
dec
sub
orb
scas
cltd
cmp
mov
cmpsb
int3
xchg
pop
sbb
cmp
rorb
in
pop
inc
icebp
mov
nop
pop
ret
int3
aas
insl
adc
mov
lret
adc
xchg
mov
push
in
jno
mov
cwtl
shll
out
pop
push
popf
cld
out
dec
push
icebp
scas
or
add
shl
into
adc
scas
add
push
mov
jns
add
pop
push
cmp
sbb
pop
pop
jge
cli
aad
pusha
inc
mov
mov
push
loopne
adc
xchg
dec
cli
andl
hlt
lods
add
mov
jecxz
aad
add
fidivl
call
or
pop
jmp
rorl
inc
push
cli
shll
into
hlt
sub
jb
dec
mov
repz
mov
mov
into
rcll
orps
test
cli
jnp
jno
xchg
mov
iret
dec
mov
xchg
sahf
stos
jp
add
sti
push
stos
dec
int
negl
loop
push
inc
cmp
imul
je
cmp
jae
fldt
xchg
mov
xchg
popa
mov
insl
out
pop
add
xor
mov
incb
mov
and
stc
jo
dec
mov
xchg
out
inc
push
cmp
orb
mov
sbb
fs
sub
gs
mov
sub
iret
sub
out
movsl
jno
dec
push
sbb
adc
pusha
addl
cmp
jne
cmp
push
mov
sarb
sub
nop/reserved
and
je
repz
mov
aas
or
outsl
int3
fsubl
mov
mov
scas
aam
insl
mov
lcall
imul
mov
loope
sub
jae
bound
jge
pop
es
inc
push
cmp
test
in
mov
mull
aam
mov
lret
xorb
sub
inc
sub
inc
in
add
adc
mov
in
and
xchg
pop
or
jb
stc
mov
push
cmp
in
xchg
mov
xchg
sub
jge
and
lds
mov
pop
sub
into
inc
movsb
cmc
sub
xor
aad
jno
fsubrp
faddl
inc
mov
in
out
push
ljmp
addps
scas
and
xchg
cmp
and
sub
pop
push
cltd
fisubrl
popa
cmpsl
mov
nop
sbb
push
inc
imul
mov
lds
jmp
mov
cli
or
push
mov
mov
sbb
cmc
mov
jge
xchg
mov
lds
inc
shlb
outsb
lea
faddl
stc
pop
cwtl
and
jb
mov
inc
js
sub
jno
ds
jbe
lret
ja
push
push
cli
sub
and
push
xchg
mov
lret
jae
pop
popl
jge
cltd
mov
aam
add
or
jns
fistps
add
sub
ret
les
scas
push
popa
sub
cli
sbb
inc
roll
or
xchg
push
push
frstor
hlt
movsb
push
insl
sub
xchg
lret
pop
ret
jle
pushf
lret
cmpsl
sbb
jnp
mov
mov
loop
sbbb
lret
push
sbb
ror
jmp
js
xor
push
in
push
push
sti
aam
mov
inc
sbb
js
test
fnsave
ljmp
mov
cmpsb
mov
addl
inc
sub
pop
cmp
mov
jnp
inc
xchg
cltd
xor
jle
ja
ljmp
dec
inc
jp
xor
ret
aad
cs
mov
cmp
xchg
push
ja
mov
jmp
loopne
inc
das
cli
xlat
into
and
jge
cmp
sbbl
or
test
mov
scas
clc
lea
dec
cmp
inc
xor
rol
fwait
sarl
mov
popa
push
xchg
inc
pop
imul
stc
or
mov
dec
es
jl
lret
push
xchg
sbb
and
inc
xchg
in
push
jns
mov
mov
xor
mov
out
je
xchg
incb
and
cmpsb
push
adc
mov
xchg
add
enter
push
cmp
xchg
mov
xchg
aaa
mov
mov
mov
inc
dec
mov
call
jge
out
nop
dec
popa
lock
push
or
lret
cld
popf
xor
sub
dec
insl
sub
dec
mov
mov
mov
jmp
pusha
push
inc
leave
inc
imul
xchg
mov
sahf
repnz
loop
mov
cmp
xor
repz
push
shl
lea
xchg
das
lcall
cs
jno
pop
outsl
cmp
daa
adc
pusha
xchg
xor
xchg
movsl
mov
popf
or
into
inc
lods
in
pop
or
cmp
xchg
and
fdivp
pop
jae
xlat
xorl
scas
enter
outsl
mov
cmp
outsb
and
dec
daa
daa
push
in
pop
leave
stos
test
or
mov
cmpsl
xchg
jecxz
and
negb
mov
loop
cwtl
jl
push
pop
cld
mov
add
cmpsl
ficompl
aad
push
or
mov
mov
mov
test
jg
or
mov
sti
stos
mov
cwtl
mov
pop
xchg
out
pushf
sub
in
adc
lea
mov
and
sbb
sub
pop
mov
push
sbb
clc
jb
inc
clc
cltd
and
stos
scas
jecxz
lret
adc
dec
loop
mov
std
pop
loope
push
and
rcl
cmpsb
addl
mov
mov
jne
loop
hlt
or
fldt
lret
lods
or
xor
or
rcrb
mov
cmp
or
movsb
push
sti
aas
add
lods
daa
shll
pop
sub
lods
lds
jmp
into
lahf
imul
test
lret
jo
mov
xor
add
or
std
adc
lcall
stos
lods
mov
adc
leave
fldl
lock
aam
inc
out
jp
mov
push
test
jnp
cmp
scas
cmc
sbb
fucom
insl
pmulhw
lock
mov
fstl
or
sub
or
mov
insl
ret
inc
js
mov
xchg
sub
jmp
inc
inc
jbe
add
aam
dec
in
sub
call
mov
mov
xchg
xlat
shl
adc
sahf
inc
dec
push
push
sub
dec
push
dec
int3
xor
xor
outsb
jbe
mov
lock
mov
lea
dec
mov
mov
outsl
pop
xlat
repz
test
xlat
fst
jb
insl
mov
call
xchg
aas
int
xchg
loopne
stos
cmpsl
lret
dec
fisubl
push
dec
xchg
sbb
cmp
jl
cmp
mov
mov
sbb
cld
pop
sahf
pop
ss
cmp
sub
scas
mov
mov
shl
sub
mov
popa
std
xor
and
test
sbb
adc
test
xor
lret
push
xor
mov
jb
movsb
fadd
mov
sbb
insb
mov
inc
mov
ds
scas
or
mov
sub
jecxz
jg
aam
mov
js
sbb
sbb
leave
loopne
ja
jnp
adc
faddl
cs
popa
mov
outsb
sub
adc
sub
pusha
and
in
das
or
dec
add
cs
int
and
mov
dec
iret
gs
xchg
or
mov
popf
gs
pop
loope
sbb
fisttps
fsubl
ret
fwait
pop
dec
mov
dec
cli
jg
and
mov
pop
nop
mov
fsts
ret
pop
inc
or
mov
jae
fwait
mulb
fstpt
in
mov
push
ljmp
or
das
jge
sbb
push
push
jecxz
das
or
xor
push
out
int
das
or
cmc
adc
push
mov
mov
stc
rorl
or
rorl
aaa
lea
fwait
mov
dec
push
fisubrs
push
push
lds
mov
jne
dec
dec
int3
aas
sub
add
mov
mov
lahf
fwait
popa
stc
push
adc
sub
adc
in
pusha
jnp
mov
loope
pop
loop
fs
sub
xchg
in
adc
sahf
cmc
sbb
inc
pushf
mov
push
mov
mov
cs
mov
sarl
push
and
push
fst
cmc
lds
test
vpcomuq
or
in
test
ss
ret
out
outsl
loopne
mov
mov
mov
cmpsl
xor
and
pop
jle
pop
mov
cmp
xchg
bnd
xchg
sarl
adc
jle
ljmp
mov
test
xchg
das
jg
imul
inc
cltd
mov
mov
xor
ret
sbb
mov
dec
xlat
ds
out
pop
sbb
sbb
pop
cmp
out
loop
mov
daa
shll
lret
adc
inc
cmovnp
xor
fstl
sub
mov
push
push
xchg
adc
sahf
outsl
shrl
xchg
push
frstor
dec
mov
lret
jmp
push
adc
leave
sbb
rorl
cmc
mov
xchg
pop
movsl
outsl
aaa
lcall
jle
in
clc
xor
add
pop
cmp
pop
ljmp
enter
mov
sub
adc
ja
data16
mov
xchg
insb
or
or
jno
jle
dec
push
xor
jecxz
dec
cmp
xor
les
sbb
out
mov
sub
in
dec
xchg
xor
fmull
popf
fstpl
out
cmp
push
jo
fdivrl
stos
imul
stos
add
mov
adc
xchg
bnd
sub
ficomps
lods
orb
sub
addb
push
jecxz
adc
jge
cmc
insl
icebp
push
les
mov
fstl
stos
sbb
into
decb
cmpb
movsl
popa
xor
ret
pop
or
arpl
lcall
jns
jno
sbb
adc
xchg
call
sarl
imul
cmp
imul
cwtl
fstps
mov
or
movsb
push
jmp
dec
lods
mov
outsb
dec
cmp
and
sbb
daa
je
rcrb
scas
dec
pop
or
testl
imul
loope
fildll
jecxz
and
imulb
push
mov
jne
inc
cmp
and
pop
lahf
in
dec
enter
nop
jb
or
jae
ss
lods
push
fcoml
loop
jnp
fld
jmp
movsl
call
or
mov
dec
adc
adc
or
inc
cld
jl
adc
push
sub
cmp
fistpll
clc
stos
into
cmc
cmc
insl
and
cltd
sti
jle
cmp
push
dec
add
add
dec
add
cltd
pop
rcrb
cmp
bound
jno
sub
int3
scas
adcb
out
dec
push
sti
loop,pt
dec
push
mov
adc
mov
loope
pop
aam
mov
push
push
jmp
sbb
sub
jno
fimuls
xor
mov
mov
popa
xchg
sbb
cltd
test
cld
add
xor
ret
adc
push
fcompl
sbb
in
push
xor
push
mov
in
ljmp
xchg
xchg
sub
mov
das
xchg
and
mov
testb
pop
mov
mov
inc
fldt
leave
push
adc
dec
hlt
sub
xchg
pop
and
mov
cmp
jne
cs
push
repnz
pop
ljmp
rcll
adc
insl
cld
cmpsb
lcall
insl
push
push
pop
cmp
jnp
ljmp
aaa
push
test
popf
jge
push
mov
jl
fidivs
das
or
clc
je
or
cmp
cmp
outsb
sbb
pop
test
movsb
aaa
or
sub
push
imul
rcrb
stc
and
sub
popa
es
rclb
rcrb
sbb
mov
xorb
je
pop
es
call
out
pop
mov
lahf
mov
xor
lcall
bound
add
xchg
add
repz
repnz
jb
jmp
cmp
jge
cwtl
mov
add
xlat
test
jl
shll
pop
sbb
xor
fidivs
sti
subl
sbb
push
out
ja
ficomps
push
rcrb
jb
add
mov
pop
dec
and
sub
xorb
xchg
iret
push
pop
jmp
xor
aad
roll
test
jbe
ja
sub
mov
mov
sahf
sub
sbb
fistpll
mov
push
sbb
into
sub
xchg
pusha
les
insb
push
shlb
add
inc
std
xchg
fwait
push
inc
jge
mov
lret
jmp
test
fcoml
sub
inc
movsl
fwait
xor
sbb
lods
fidivrs
push
inc
mov
jne
sub
sub
mov
mov
lock
xchg
sbb
shl
xchg
cmp
pop
xchg
mov
sub
pop
fstps
cmp
loope
sti
mov
or
lcall
lea
jecxz
ror
bound
mov
cmpsl
repz
pop
das
mov
sub
inc
add
pop
mov
adc
add
push
push
stos
sbb
nop
jo
cwtl
adc
dec
lds
je
cs
ret
popf
dec
add
cmp
dec
daa
and
sahf
jl
inc
rcr
stos
inc
mov
andb
enter
and
lea
sbb
je
cltd
cli
push
dec
mov
rclb
lea
mov
popf
or
xor
fcompl
scas
inc
outsb
lcall
mov
mov
test
cwtl
xor
scas
or
std
add
syscall
xchg
mov
fs
cmp
aas
out
adc
sub
cmp
pop
jno
loope
rorb
in
stos
pop
jb
mov
shrl
nop
push
iret
ret
movsb
cmc
cmp
popf
shrl
mov
es
mov
nop
or
xor
mov
lret
lret
jl
pop
cmp
js
and
clc
push
movsl
sbb
repnz
xchg
fwait
cmp
mov
cmpb
mov
aam
daa
sub
cwtl
mov
fld
cmp
push
dec
add
mov
nop
pop
push
sbb
fnstcw
rcl
lea
arpl
xchg
push
lahf
fs
lods
push
sti
push
das
scas
loopne
ds
insb
or
sbbl
mov
aas
and
cmp
sbb
xchg
inc
mov
das
rorl
fchs
stos
je
jecxz
jno
ficompl
push
adcb
sbb
add
add
jg
fstps
cmpsl
adcl
adc
cs
imul
movsl
in
cs
stos
lcall
pop
push
cmpsb
pop
cmp
inc
cltd
jns
sti
aaa
pusha
cmp
cli
test
lcall
sub
sub
dec
fldcw
sub
xor
inc
fwait
xchg
lock
pop
out
ror
cmpsb
cmpl
pushf
mov
and
sub
jl
mov
fbstp
fucomi
mov
adc
dec
je
rep
xor
add
stc
sub
jl
dec
lds
xchg
cltd
lret
repz
std
aad
cltd
jl
in
icebp
dec
inc
sarb
jp
mov
int3
adc
nop
xchg
fldt
cmpsl
sbb
cmp
sub
adc
icebp
iret
push
fs
mov
sub
jp
adc
cmp
ficompl
xor
cltd
jnp
pop
cmp
sti
push
out
xlat
leave
stc
pop
cmp
cs
push
push
or
lret
add
jmp
and
subl
mov
filds
push
xor
shrb
sahf
sub
in
aas
aas
adc
arpl
mov
in
mov
sub
xor
sub
mov
mov
negb
lea
and
push
jp
cmpsl
out
movsb
cmp
mov
jmp
sbb
mov
cmp
or
mov
xchg
mov
mov
mov
scas
vpbroadcastw
int3
adcb
and
icebp
jl
mov
inc
enter
adc
shll
xchg
add
pop
clflush
sbb
xchg
aad
push
into
sbb
adc
out
xor
fcomps
sarb
mov
lcall
fcompl
or
daa
push
xor
sbb
mov
xabort
jge
jmp
jbe
pop
dec
cmc
dec
pop
jbe
ja
out
and
popa
clc
fidivs
cmpsb
dec
push
adc
jb
add
test
fbld
test
sahf
inc
push
pop
ret
push
or
xor
mov
pop
pop
pop
pop
inc
cltd
idiv
xchg
pushf
adc
push
jmp
jg
jae
push
jae
sti
outsb
jp
loop
jecxz
std
insb
mov
xor
ret
jno
fidivl
fimuls
or
in
or
aad
pop
jno
push
pop
leave
xchg
mov
cmp
inc
pop
enter
mov
fdivrp
cmp
in
outsb
sub
sti
inc
roll
jae
stos
sub
pop
sar
sbb
jecxz
mov
add
pop
out
lods
push
dec
xchg
dec
insl
mov
cltd
dec
dec
lods
mov
or
and
pop
and
cmp
jno
cmp
inc
std
sub
in
dec
fidivl
ds
out
inc
addr16
or
loop
and
sbb
mov
imul
insl
repz
add
cmpsb
mov
addb
pop
mov
dec
dec
in
xchg
sbb
popf
andb
push
cmc
xor
mov
sti
fsubrp
test
sub
pop
lcall
adc
loop
mov
or
ss
stc
or
repnz
sbb
ficomps
sbbl
iret
andb
dec
mov
mov
inc
mov
shrl
mulb
outsl
cmp
cmc
xchg
xor
sub
cmp
xor
in
arpl
jecxz
mov
pop
enter
or
inc
sbb
cmp
dec
jne
push
xchg
clc
push
cmp
sti
mov
testb
loopne
pop
mov
add
jg
pop
push
insb
in
mov
shr
xor
test
xchg
inc
cmp
jg
mov
jp
mov
insl
test
sbb
xor
loopne
das
mov
loop
and
and
pop
loope
push
test
test
mov
outsl
mov
pop
call
mov
inc
pop
lods
divl
mov
push
lds
add
mov
adc
add
pop
aam
or
mov
dec
js
push
cli
movsl
and
or
js
mov
ror
iret
enter
mov
xor
and
inc
lret
xor
les
pop
ficoml
push
xchg
push
mov
mov
inc
xor
lea
call
jns
jo
mov
sbb
cltd
aas
call
test
inc
pop
pusha
push
sub
push
insb
mov
xchg
jmp
ret
pop
imul
xor
das
adc
fbld
fisubs
data16
adc
pop
push
push
arpl
or
inc
mov
xchg
fstl
mov
test
pop
adc
outsb
imul
repnz
jnp
sbb
jne
cltd
mov
push
addr16
jb
add
jnp
jae
inc
in
int3
out
xchg
dec
jne
insb
pop
inc
orl
xchg
test
repz
daa
stos
inc
movsl
ds
enter
gs
mov
lcall
movsl
cmp
sub
icebp
add
ds
int
sub
inc
sub
lock
pop
add
dec
mov
subb
xlat
in
mov
or
push
bound
sbb
jb
and
dec
or
ss
add
cli
shrl
inc
call
mov
mov
es
adc
aad
or
push
jecxz
mov
inc
out
add
or
xor
out
pop
call
es
call
pushf
mov
inc
mov
fadds
push
xor
pop
mov
lods
gs
and
mov
jge
adc
stos
movb
cld
scas
push
inc
adc
ret
and
shll
mov
jecxz
or
gs
test
xor
adc
sbb
iret
push
jl
xchg
test
xor
ret
jmp
pop
xor
test
ret
test
push
mov
mov
dec
rcr
dec
popf
and
mov
mov
xchg
push
int
inc
js
popf
aad
jno
mov
int3
inc
pop
popf
cmpsb
and
hlt
inc
mov
loopne
mov
push
push
mov
stos
arpl
ficoms
pop
add
imul
test
lods
push
mov
dec
dec
rep
sbb
jo
jns
js
daa
inc
adc
adc
inc
shl
jmp
sti
stc
call
loope
xor
das
inc
lods
and
mov
adc
mov
push
aad
add
insl
xor
insb
xchg
jbe
cmp
xorl
inc
and
aad
popa
mov
popf
mov
push
sub
pop
cli
pop
push
out
shrb
mov
daa
stos
cmp
jge
loope
push
ret
out
ds
xchg
data16
leave
lds
bound
je
stos
add
loop
and
mul
stc
dec
dec
fmuls
in
or
negb
adc
jmp
rorl
add
xor
das
cmp
mov
fwait
jp
and
mov
pop
push
jns
cwtl
add
adc
xchg
push
mov
int3
jmp
inc
xchg
enter
xchg
jb
popa
lods
lahf
std
insb
push
mov
push
jle
push
decl
test
jge
scas
pop
jecxz
fs
jp
in
sub
push
hlt
int3
sub
jecxz
test
mov
pusha
or
pop
pop
push
cmp
jo
fcmovu
cli
jo
sbbb
or
sub
push
aaa
pop
sbbb
in
shrl
fst
inc
icebp
daa
test
fmuls
out
psllq
dec
lock
xchg
iret
cmp
in
outsb
push
movnti
repnz
fcmovu
mov
stos
or
mov
jp
lock
lods
jl
pop
lock
add
lods
test
es
jbe
negb
leave
out
test
inc
shl
mov
adc
fmull
mov
je
cmpsb
adc
fsubr
inc
push
mov
push
mov
sub
xchg
mov
xchg
into
lret
mov
inc
mov
xchg
jg
cmpsb
lea
adc
ds
adc
into
test
dec
jnp
call
aad
pop
sub
ret
loop
shlb
sbb
inc
push
call
inc
add
test
not
clc
outsl
push
ret
popa
test
xchg
mov
mov
int3
popa
adc
pusha
rcl
mov
lea
push
sub
pop
sub
push
ret
add
and
mov
out
dec
cmp
jle
xor
adc
pop
insb
pop
ret
mov
daa
adc
inc
adc
mulb
mov
out
xor
sub
jp
mov
icebp
test
push
js
lds
inc
repnz
mov
arpl
pinsrw
fdivrp
andl
test
sbb
scas
enter
js
cmp
sti
icebp
jmp
loopne
in
movsb
sbb
inc
cmp
jne
xchg
out
or
xchg
test
pusha
rol
cmp
sub
sbb
out
aaa
data16
jae
int3
lret
in
out
sbb
sbb
pop
mov
gs
bound
sbb
cltd
insb
adc
nop
sub
add
add
mov
push
stos
jo
jmp
insl
sti
fisubl
push
hlt
je
out
sub
cwtl
in
mov
xchg
add
in
cmc
test
mov
mov
sub
jle
mov
aaa
leave
push
iret
push
or
push
add
xchg
sarl
test
lods
push
cmp
push
push
js
xor
pop
push
ret
popf
mov
mov
add
mov
inc
xchg
push
add
push
adc
adc
or
stos
pop
ret
out
jnp
sbb
cli
pop
add
repnz
xor
xchg
add
sahf
sbb
mov
leave
stos
loop
cmc
fidivrl
dec
cmpsl
das
sbbb
adc
sahf
inc
mov
daa
shrl
pop
cmpsl
enter
test
inc
mov
gs
repnz
jge
mov
dec
test
aas
xor
loopne
clc
sub
push
mov
inc
imul
cmpsl
jnp
mov
jae
add
cltd
adc
shl
mov
jge
scas
xchg
cld
jns
out
mov
pop
pop
es
ret
inc
insl
addr16
dec
idivb
outsl
imull
add
cmpsl
idivb
lds
pushf
pop
sub
pusha
cltd
pop
test
and
sub
mov
sbb
cmpsb
sbb
add
inc
loop
mov
lock
jmp
gs
fildl
es
loopne
sub
cmpsb
push
sbb
js
aad
scas
mov
ret
out
pop
int3
xchg
sarb
lock
push
stos
sahf
mov
loop
add
stc
mov
test
add
es
push
add
and
pop
pushf
fstps
test
test
push
push
xor
and
iret
imul
or
push
sbb
push
shr
aad
orb
and
rcl
sub
or
sbb
dec
cmp
ja
cmc
cs
fcoms
cld
push
cld
xlat
pop
fbstp
cmp
flds
jno
out
inc
out
mov
lods
sub
popf
mov
mov
out
and
std
int
mov
fcmovnu
mov
imul
ret
vucomiss
fcompl
push
mov
pop
pop
sti
mov
xchg
mov
mov
gs
xor
sub
popa
jo
dec
or
ljmp
mov
xor
scas
sub
popa
fidivrs
hlt
push
and
jbe
mov
mov
xchg
movsl
adcl
loopne
jns
in
mov
insl
jp
mov
testb
xor
aam
addr16
mov
cmpb
and
add
jmp
or
std
jp
cmp
lahf
aas
imul
pushf
push
adc
add
mov
into
test
pop
and
xchg
mov
pushf
cmp
out
push
push
add
mov
lds
call
jne
into
sbbl
movsl
jp
jle
pop
rcrb
loope
test
mov
pop
jp
xorl
jns
loop
outsl
jbe
aam
lods
jo
insl
sbb
movsl
cmp
adc
xor
repz
and
adc
cmp
xor
daa
dec
je
lret
jmp
addr16
inc
cmp
pop
ja
inc
frstor
sub
int3
xor
or
cmp
cli
mov
ficomps
jns
daa
loop
mov
dec
dec
aam
imul
fwait
mov
xchg
cmp
ret
adc
mov
addl
and
push
enter
cs
mov
ja
lcall
iret
sbb
ss
adc
adc
stc
dec
subl
inc
mov
hlt
add
sbb
es
add
shl
mov
xlat
lret
in
out
push
insl
lods
into
xchg
push
aas
or
push
lds
ljmp
lea
push
jle
scas
insl
lds
ret
ja
adc
fwait
insl
jmp
mov
pushf
aaa
imul
sbb
mul
subl
rclb
sub
sti
in
push
popf
inc
push
mov
adcb
jmp
lea
in
fisttpl
loopne
orl
ja
push
mov
pop
sbb
cld
or
andl
jle
lahf
rorl
or
aam
clc
ffree
jo
pop
mov
add
xor
xchg
popl
cmp
fstl
mov
dec
shll
sbbb
mov
xlat
lock
mull
repz
or
mov
xchg
pop
cli
hlt
test
pop
cmp
cli
js
xor
fwait
out
popa
ror
cmpsl
xchg
and
and
icebp
dec
sub
adc
ret
dec
imul
cs
and
call
rorl
fdivp
xchg
xchg
test
xlat
stc
mov
lds
add
or
sbb
int
test
cmpb
push
xor
aas
inc
cli
xchg
lahf
inc
cs
xlat
dec
jo
call
pop
lret
mov
pop
es
cmc
mov
or
fstpl
cwtl
push
mov
enter
pop
mov
repz
adc
add
mov
sbb
cli
pop
insb
shrl
sub
imul
or
jg
mov
mov
mov
cmp
arpl
fdivrs
rcll
shll
jg
adc
mov
jge
sahf
in
cld
or
mov
shlb
aas
inc
call
cmp
mov
lret
aam
mov
leave
lods
cli
mov
je
aas
jmp
jp
or
jp
mov
arpl
rep
loopne
ljmp
pop
sbb
cmp
xor
adc
mov
adc
movsl
mov
sbb
jae
push
rcrb
test
faddl
push
mov
mov
xor
dec
test
mov
mov
sbb
popa
sbb
in
or
cld
aad
sahf
loop
fsubrl
sbb
inc
sti
fcmovu
stos
push
stc
inc
jo
aad
mov
jecxz
mov
sbb
popl
adc
dec
cmp
push
pop
ret
mov
adc
clc
or
lahf
xor
push
sub
outsb
div
dec
into
mov
and
mov
lock
out
lods
fimuls
ss
push
aam
bound
dec
cmpl
mov
inc
aaa
sbb
scas
stc
aas
pop
jne
lret
stos
jge
rorb
dec
movsb
mov
xor
xor
fistps
pusha
stos
aam
or
lahf
lods
enter
sub
andl
cmp
loop
lock
daa
push
sbb
subl
mov
xchg
add
pusha
pop
mov
and
mov
cld
mov
lahf
add
jp
xlat
popf
in
add
repnz
xchg
lods
add
cmp
rep
hlt
push
test
data16
scas
pop
xor
adc
xchg
cmp
std
cmp
repnz
or
aaa
jmp
shll
ss
mov
loope
mov
addl
mov
mov
lret
popf
push
cmpsb
sub
xchg
sub
push
scas
mov
cmp
lock
rcrb
movsb
cmp
dec
mov
push
sbb
in
or
test
ljmp
in
bound
xor
push
pop
insb
dec
into
add
in
mov
sbb
adc
jno
sub
mov
inc
add
or
adc
scas
and
mov
in
test
or
ret
pop
cmpsb
cmp
aaa
sub
xchg
fcomip
sub
les
xchg
xchg
loop
ds
lahf
rcr
lds
rcrb
xchg
push
scas
push
jmp
fdivr
jge
cmp
bound
mov
push
cmc
popa
mov
jle
shll
add
mov
mov
cli
es
add
shrb
cmp
fldcw
movsl
xor
inc
cmp
xchg
popa
frstor
adc
jnp
dec
add
popa
pop
push
lret
cmp
add
mov
or
int3
inc
ret
or
ffree
pop
pushf
lods
in
xor
add
ror
loop
call
lods
std
sbb
daa
or
fxam
lret
loope
dec
lahf
push
call
push
fstl
insl
imul
mov
scas
arpl
and
jns
sub
inc
rcrl
gs
outsl
pop
pop
testl
mov
repz
fsubrs
daa
cmc
cltd
mov
popf
arpl
mov
lods
addb
pop
sbb
mov
daa
fcoml
inc
mov
fwait
loop
mov
sbb
cmpl
enter
lret
mov
cmpsl
push
icebp
add
lahf
call
popf
dec
xor
dec
icebp
adc
push
imul
pushf
popa
xchg
inc
push
push
xor
out
xor
iret
ja
xor
cli
mov
or
lods
dec
mov
enter
test
jle
jns
hlt
adc
cwtl
xchg
mov
pop
sahf
dec
sarb
dec
aas
dec
xchg
push
jmp
cmp
jb
cs
and
xor
ds
sti
jae
movsl
jp
lcall
push
jecxz
pop
ds
mov
cmpsl
xor
cli
popf
fsubl
jle
adc
imul
cmpsl
pop
mov
dec
inc
daa
scas
push
int
lds
mov
pop
pop
mov
ret
loopne
inc
xchg
xor
cmp
test
dec
loopne
dec
jns
insl
push
mov
mov
xchg
inc
stos
cmpb
adc
mov
test
inc
repz
push
xlat
jl
cli
xor
push
or
test
lret
adc
popf
lea
mov
push
mov
adc
inc
pop
mov
xor
filds
ja
and
inc
cld
aad
adc
jge
call
cmp
mov
jmp
sub
mov
xor
jecxz
cmp
outsl
or
mov
test
mov
push
mov
sub
jp
mov
aam
lahf
dec
inc
not
cwtl
out
addr16
test
adc
adc
enter
je
lret
test
push
inc
subl
andb
mov
cmp
adc
roll
sbb
into
xor
scas
push
xor
push
sub
std
pop
out
add
xor
adc
inc
aas
sub
popf
push
jle
fwait
sbb
add
cmp
pusha
mov
cmp
xchg
pop
push
mov
hlt
insb
and
or
jp
mov
mov
stos
push
jmp
adc
loope
gs
push
es
push
sub
pop
out
adc
cmp
lods
sub
inc
mov
mov
pop
adc
mov
loope
shrl
leave
jns
and
aad
test
rcll
xchg
repnz
stos
lcall
lods
lret
loop
adc
and
cld
xchg
jle
je
xchg
movsb
push
call
and
out
push
sahf
nop
xor
and
cmpsb
aaa
inc
or
negb
loop
adc
fwait
sub
mov
cltd
jae
fildl
sbb
push
sti
sub
leave
rcl
fisubrs
and
push
xor
daa
xchg
sbb
cmp
xlat
icebp
or
popl
test
lock
mov
or
jmp
mov
push
add
rol
loopne
push
cmp
pop
es
cmpsb
xchg
dec
push
add
dec
mov
imul
cmp
sahf
push
mov
repz
cwtl
ret
adc
insb
or
sahf
mov
and
flds
addb
xchg
mov
fdivs
repz
add
pop
out
inc
mov
pop
cmp
mov
cmp
push
pop
orl
sbb
into
loop
pop
push
mov
adc
sti
mov
or
push
test
outsb
add
les
int3
dec
rorl
push
cmc
aaa
xchg
xlat
gs
jb
mov
daa
add
pop
jno
jmp
pushf
cmp
cmp
push
lock
mov
pushf
jg
movl
fsubrs
and
add
mov
loop
repz
nop
fcmove
hlt
jns
movsb
inc
jle
mov
push
lods
fbstp
pop
cmpsb
jle
mov
mov
push
frstor
loop
dec
aad
ljmp
xlat
je
movsl
out
jecxz
xor
and
repz
or
push
jns
pop
adc
lea
add
pusha
into
pop
aam
sub
mov
xlat
ds
js
popa
aam
int
pop
movsb
loopne
jl
or
xor
or
inc
xchg
das
xorb
lea
bound
cmp
push
loopne
aaa
bound
mov
into
push
and
popf
pop
mov
sbb
sbb
popf
ret
jb
jns
sbb
lds
jno
cs
mov
pop
shl
mov
xchg
jg
hlt
pop
dec
jg
or
adc
cmp
mov
jb
shrl
mov
int
add
dec
push
mov
pushf
stos
hlt
cmc
sbb
repnz
mov
jmp
add
stos
cwtl
pop
and
add
movsb
loope
jbe
mov
mov
xor
mov
insb
jnp
ret
bound
outsb
ss
jnp
mov
push
add
sbb
imulb
pushf
mov
imul
ljmp
imul
add
sbb
mov
lods
jae
adc
test
scas
adcb
add
adc
mov
addr16
rcl
jecxz
mov
cmp
sbbl
dec
mov
push
and
in
in
dec
jne
enter
fst
xor
or
mov
adc
fistl
mov
lahf
outsb
and
and
stc
mov
ret
fs
popa
mov
popf
dec
dec
nop
sbb
cmc
cld
cmp
insb
into
loop
mov
jmp
sbb
out
roll
das
add
mov
xchg
aaa
dec
dec
shll
pop
xchg
add
jge
add
jno
cmp
xchg
jne
and
arpl
pushf
inc
dec
sub
jge
xor
pushf
cwtl
aad
jns
mov
add
int
popa
xor
rolb
adc
clc
out
and
cli
xchg
xor
sbb
ja
int3
insl
mov
gs
or
mov
shll
inc
sahf
inc
push
or
loope
cld
mov
scas
dec
mov
clc
push
xchg
and
xchg
subl
fnsave
imul
pop
mov
leave
shlb
sbb
adc
xor
pop
mov
jae
add
mov
loopnew
dec
test
fcmovb
cltd
call
std
data16
ret
push
jmp
jp
add
ds
imul
sub
push
int
fs
mov
out
mov
loope
stos
sarl
pop
xchg
xchg
add
addb
cmp
aad
pop
sbb
dec
push
in
sub
addr16
test
fwait
cmpsb
lods
pop
test
adc
arpl
imull
outsb
mov
add
stc
cmpsb
add
or
out
imul
sub
adc
shlb
ja
dec
mov
sar
sti
cmp
cmp
into
add
mov
dec
pop
aas
pop
into
cmp
sub
xchg
lods
cmp
aam
mov
cmpsb
xor
nop
jl
scas
jmp
push
xor
cmpsl
mov
fdivl
mov
jb
xlat
or
xor
push
fsts
push
loopne
or
sub
sbb
vprotb
xor
pusha
push
or
test
sbb
xor
pushf
call
stos
aad
test
ljmp
sti
sbb
call
icebp
les
sbb
icebp
sub
jmp
add
repnz
dec
dec
push
mov
in
lea
adc
pop
subl
repz
or
insb
xor
fwait
lahf
pop
cmp
lcall
lahf
add
xor
mov
mov
jo
mov
lds
iret
dec
loop
and
push
es
mov
dec
jb
dec
ljmp
sub
inc
pop
std
xchg
inc
lcall
xchg
stos
cmp
push
hlt
lods
jmp
negb
jge
and
push
mov
cmp
xlat
mov
dec
cmp
sub
xchg
addb
ret
pop
push
lock
adc
sbb
sbb
sub
sbb
dec
sbb
cmp
loop
mov
loope
insl
xchg
xchg
clc
sbb
fistpl
scas
stos
sub
sub
pop
rorl
repnz
pop
cmp
dec
mov
xchg
leave
jmp
pop
push
mov
mov
push
clc
add
mov
cld
int3
out
jb
loop
subl
mov
adc
sar
and
mov
js
out
fisubl
popa
mov
mov
sar
cmpsb
sbb
jns,pt
pop
push
jg
cltd
xor
pop
mov
cmp
popa
xchg
in
adc
mov
repz
cltd
cmpsb
ds
lea
ret
cmpsb
add
das
or
xchg
test
dec
push
mov
out
idivl
jae
insb
sbb
sahf
push
movsb
cmc
adc
xor
and
shlb
inc
lahf
add
lahf
call
or
pusha
sub
mov
cmp
mov
inc
pop
xor
nop
rorl
test
push
call
cmc
sbb
push
jae
mov
pop
jo
sbb
inc
fidivrs
jecxz
or
xchg
and
frstor
mov
jl
pop
aaa
out
push
xchg
je
push
inc
push
in
mov
adc
dec
jbe
jge
sub
sub
sub
lods
in
xchg
imul
ret
mov
ds
mov
mov
cmp
out
pop
jno
loopne
push
sub
dec
test
fmull
xchg
es
aas
outsl
xchg
in
mov
sub
or
jno
mov
repnz
xchg
nop
movsl
rolb
add
nop
adc
clc
mov
repnz
xchg
stos
gs
xor
mov
in
leave
sub
rcrb
jnp
sub
and
imul
rolb
or
and
out
or
xor
enter
in
rclb
shrb
stos
or
mov
and
dec
mov
cwtl
adc
sbb
and
imul
sbb
xchg
inc
add
mov
fwait
pusha
je
sbb
jne
les
pop
mov
xlat
mov
cs
es
jno
mov
lcall
push
rol
push
xchg
adc
out
pop
jge
pushf
mov
xor
sub
xor
jg
xchg
fcompl
or
add
adcb
pop
fwait
and
mov
jo
pop
mov
in
push
lods
subl
mov
outsl
cmp
xchg
loopne
jmp
pop
sbb
lock
push
cmc
int3
mov
pop
push
data16
js
lcall
std
sbb
add
xchg
and
and
fldt
addr16
leave
add
lds
xchg
add
stc
inc
icebp
ljmp
popf
orl
mov
xor
pop
leave
insb
mov
sub
dec
sub
clc
xlat
cmp
cli
shll
or
fmuls
nop
fcmovnb
mov
pop
aas
jns
mov
aas
add
lret
adc
cmp
cwtl
cmp
inc
outsl
sbb
mov
leave
push
push
push
stc
and
mov
jge
out
cmp
inc
das
sbb
or
mov
mov
nop
pop
sbb
loopne
ret
inc
and
inc
lock
mov
xor
xor
xor
movsl
mov
dec
sahf
scas
cli
fisubs
shll
cmpsb
add
mov
fstpt
or
xchg
scas
xchg
push
insb
add
xchg
leave
cmp
push
fistl
cmpsl
stos
adc
sbb
pop
sbb
or
xor
mov
shrl
fildl
sbb
inc
and
mov
ljmp
icebp
insl
xchg
in
push
or
cmp
pop
bsf
cmpsl
pop
xchg
jle
mov
lock
jbe
sbb
out
stos
mov
test
stc
repz
mov
mov
aaa
mov
xchg
out
je
pop
popa
aad
adc
inc
xchg
ss
mov
jb
mov
divb
sbb
imul
jg
pop
into
fisubl
pop
test
xor
lcall
adc
pusha
jnp
jmp
fs
push
inc
or
jae
push
mov
push
out
inc
jnp
mov
sub
jbe
lock
cmp
xor
std
lock
lods
adcb
cmp
sbb
mov
and
sbb
loope
cli
lret
pushf
mov
lcall
jnp
inc
stos
mov
fildl
fmuls
mov
out
jne
movb
cwtl
sbb
inc
enter
scas
mov
pop
and
movsb
or
movsb
mov
stos
bound
das
sbb
cmp
out
and
mov
xor
lret
lcall
nop
sbb
mov
sbb
xchg
xchg
mov
mov
mov
push
lret
outsl
in
pop
cwtl
mov
push
mov
stos
rcl
inc
ljmp
sub
dec
pop
loop
push
push
jge
jae
mov
cmpsb
fmull
add
int3
jbe
cltd
test
cltd
cmp
cwtl
iret
testl
push
call
or
pop
clc
adc
std
fwait
and
movsb
adc
sbb
lret
cmp
icebp
test
adc
fiaddl
mov
cmp
call
sahf
les
lods
repz
insb
mov
fucomip
pop
sub
lea
sbb
sbbb
scas
stos
call
or
mov
jnp
out
mov
mov
subl
sbb
xchg
jb
xor
outsb
push
out
rcrb
btc
inc
mov
data16
fistl
xchg
sub
ss
push
push
adc
out
or
cmc
and
inc
sub
xor
pop
mov
dec
cmpsb
test
mov
in
or
stc
mov
repz
lahf
push
mov
cwtl
adc
or
call
xor
sub
out
pop
lods
push
or
cmc
xor
xlat
push
push
loope
aas
cs
idivl
push
mov
cmp
aaa
out
dec
enter
mov
ret
in
in
imul
adc
int
push
fistpll
insb
mov
in
xor
mov
aas
cmpsb
sub
adc
cli
fcmovnbe
rcrl
adc
aam
fidivrl
hlt
jge
xor
dec
mov
push
dec
clc
arpl
ljmp
lods
inc
xor
clc
outsl
loop
mov
or
test
xchg
or
inc
loopne
mov
dec
inc
les
mov
lret
dec
std
lahf
dec
push
mov
xor
pop
pushf
movntps
mov
fmull
and
pop
cmp
lock
lods
sub
sbb
adc
adc
scas
pop
pop
cmpsl
pop
loope
out
pop
xor
jns
pushf
mov
cmp
pusha
xor
xchg
xchg
aad
aaa
lcall
das
hlt
fldenv
push
sar
sub
pop
outsb
lcall
stos
dec
mov
ja
lea
jmp
nop
dec
test
jb
sub
loop
xor
dec
push
into
js
aad
pop
dec
cmp
fmul
movsl
inc
add
out
dec
repz
fimuls
xorb
test
xchg
and
push
sub
into
sub
or
or
mov
inc
sub
jg
pop
mov
iret
into
or
sub
mov
fstpl
xor
dec
scas
or
mov
sti
aas
or
adc
addr16
push
aam
sbb
add
mov
adc
ds
sub
inc
xorl
jb
xchg
sub
lahf
mov
sub
aam
aad
data16
mov
and
cmpl
adc
notb
jb
test
pop
add
or
icebp
das
dec
ficoml
in
les
ljmp
gs
lods
in
dec
cmpsb
notl
mov
addr16
lcall
in
icebp
sar
subb
es
and
fidivrs
xor
sub
jno
in
fistpll
mov
leave
std
push
fstp
pop
adc
xchg
cltd
mov
stc
fistpl
imul
sti
cmp
jbe
test
and
dec
loope
push
sti
pop
mov
movsb
int3
jg
push
sbb
in
ret
popa
mov
pop
jns
and
sub
jmp
enter
push
aad
sbb
push
jb
mov
or
sub
cli
rcrl
ljmp
add
cwtl
and
mov
das
inc
xchg
mov
sahf
or
jle
inc
mov
sbb
fwait
xor
push
mov
cmpsl
dec
filds
mov
lea
jp
loopne
fmull
jp
lds
and
xor
aas
xor
add
sub
scas
aas
sbb
xor
hlt
mov
jnp
lret
fmull
cmp
test
jno
outsb
subb
xchg
mov
dec
fisttpll
sbb
cld
scas
mov
lods
sub
add
xchg
dec
lods
adc
cmp
push
fnstenv
ficompl
fstpl
or
jl
ds
cmp
enter
inc
mov
aaa
enter
outsb
cmp
push
mov
or
out
cwtl
push
xchg
cwtl
divps
gs
mov
imul
loopne
hlt
mov
aaa
insl
mov
push
mov
fcoms
xor
cwtl
cmpsb
jp
add
mov
bound
inc
mov
stc
fcoml
and
jbe
lahf
xor
dec
clc
rcll
aam
or
or
mov
outsl
mov
jbe
andb
push
int3
xchg
adc
jp
xor
jecxz
pushf
xor
inc
div
xlat
iret
xlat
jle
enter
out
dec
push
addr16
pop
sahf
or
or
ret
sbb
loopne
and
xchg
pop
int3
das
mov
loopne
adc
xchg
pushf
sub
push
xchg
xor
js
add
arpl
cmp
adc
dec
mov
rcll
jmp
or
leave
fisubrl
cmp
arpl
mov
xorl
movsb
cmp
ljmp
movsb
pop
push
xlat
stc
pushf
sub
cmp
out
fists
jno
xchg
inc
faddp
pop
mov
cli
cmc
fistps
push
mov
std
movsb
test
xchg
inc
mov
mov
pop
or
leave
icebp
shlb
cmc
aaa
push
mov
sahf
pop
je
dec
mov
add
jl
sbb
mov
out
add
inc
adc
or
mov
or
push
dec
jns
inc
int
sahf
popf
mov
sti
cmc
imul
mov
xor
mov
mov
jmp
dec
add
inc
mov
sbbb
orl
and
xor
aaa
inc
ljmp
inc
inc
lods
hlt
cmp
and
sub
jns
xchg
adc
stos
in
or
mov
lret
in
jge
loope
push
mov
call
pop
pop
jl
outsb
arpl
jo
nop
js
pop
rcrb
or
cmpsl
jne
lahf
jl
cmp
dec
xchg
insb
iret
xor
and
dec
xor
or
jb
jae
xchg
push
add
ret
sub
arpl
lcall
mov
and
pop
xor
dec
xor
or
stos
push
xlat
call
cmp
data16
jnp
es
shl
incb
aaa
mov
int3
and
add
push
sbb
ss
fwait
jp
mov
sbb
js
adc
ficoml
fs
repz
test
stos
enter
in
cmpsl
adc
insl
jle
leave
pop
jp
jg
pop
loopne
adc
pop
mov
jb
push
sbb
js
mov
frstor
jo
cmp
mov
pop
repz
ficomps
out
mov
add
lret
stos
mov
incb
jl
dec
jl
jg
sub
inc
and
mov
movsl
mov
into
xlat
dec
int
nop
test
cmpsb
sub
in
loopne
pop
xchg
sbb
mov
or
sbb
dec
push
aaa
scas
and
aaa
mov
add
cmp
pop
aaa
cwtl
cmp
out
sbb
inc
dec
dec
lret
fwait
pop
jge
outsl
or
jecxz
cltd
cli
mov
dec
push
ljmp
ret
mov
xor
hlt
mov
les
sar
cmp
cmpsl
push
mov
and
mov
dec
push
out
sub
push
pop
testb
sbb
adc
call
mov
mov
and
adc
mov
aad
dec
jp
cmp
inc
inc
mov
mov
frstor
ss
dec
loop
aaa
jns
cmp
and
dec
into
out
int3
fadds
inc
lds
pop
cmp
sbb
or
adc
jo
sub
push
jb
idiv
and
mov
xchg
test
loope
lret
xchg
out
push
movsl
ja
lock
cmp
and
repz
dec
sbb
inc
stos
pusha
bound
ret
push
lods
lret
fucomip
and
idivl
lods
hlt
roll
or
fsubrs
jge
pop
lea
nop
xor
inc
ljmp
inc
add
mov
imul
sbb
xor
fwait
or
mov
scas
pop
inc
add
iret
enter
adc
lret
in
and
insl
lods
nop
sbb
mov
xor
xchg
jl
loope
dec
inc
sbb
fwait
push
push
push
mov
cmp
cmpsl
and
lods
shlb
pop
pop
mov
dec
push
pop
pusha
scas
adc
adc
vpunpckhqdq
adc
popa
sbb
mov
mov
mov
cmp
gs
xchg
cmpsb
pop
and
je
sahf
rcl
cmc
inc
push
sbb
in
cmp
add
das
cld
ret
repz
or
inc
jo
repnz
mov
rcrl
in
movsl
jo
adc
xchg
adc
int
dec
jno
scas
dec
mov
test
mov
sbb
push
mov
dec
or
test
mov
and
push
enter
mov
pop
adc
and
xchg
cmpsb
mov
hlt
pop
adc
xor
mov
pop
enter
and
lahf
out
sbb
or
push
outsl
lret
pusha
and
mov
aas
inc
sub
jno
add
hlt
cmp
dec
mov
jle
scas
mov
add
pop
arpl
inc
push
addr16
push
pop
fsubrs
mov
fstpl
shll
jp
out
xchg
push
dec
and
fisttpl
pop
xchg
xchg
pop
sbb
int3
push
fcmovnu
addr16
xchg
cli
pushf
mov
push
adcb
push
mov
imul
lock
add
jb
jecxz
aad
je
inc
out
sbb
shll
mov
imul
mov
mov
add
lods
jg
xchg
mov
scas
fadd
cmp
ret
xchg
or
rolb
je
add
shlb
ja
and
mov
outsl
out
cmpsb
dec
ret
mov
out
jo
dec
push
loop
add
adc
cld
in
out
dec
pop
sub
in
bound
cwtl
ss
pop
mov
rol
icebp
sub
cmpb
pop
cltd
repz
jae
insb
pop
addr16
xor
mov
add
loope
dec
aam
in
xor
mov
mov
fdivr
xchg
add
popa
adc
push
cmp
out
lahf
mov
fildll
mov
ss
lret
aam
mov
adcb
mov
inc
imul
pop
scas
and
sub
inc
lret
inc
loopne
sub
sub
es
outsb
add
mov
lock
lahf
xchg
incl
or
pop
mov
xchg
gs
xchg
aam
adcl
test
pop
xlat
sub
fsubr
ljmp
mov
sub
vsqrtsd
jle
lret
and
sub
cmp
xchg
cmc
andb
sub
jl
mov
fisttpl
cltd
adc
mov
faddp
sub
sahf
stc
imul
int3
cmp
mov
mov
jle
orl
sub
adc
mov
sub
mov
sbb
pop
cmp
pop
aam
lods
test
inc
sti
cmpsb
lahf
xchg
repnz
imul
shll
lret
les
test
ret
xor
outsl
xchg
incb
jbe
push
add
pop
arpl
data16
imul
mov
sub
ljmp
dec
insl
pop
mov
jmp
mov
icebp
adc
rolb
lea
faddl
xor
or
lret
jg
add
movsb
sar
push
cmp
stos
and
movsl
roll
repz
cmc
or
inc
iret
ret
clc
xor
and
xor
fwait
xchg
push
add
fisttpl
mov
sub
fidivrl
imulb
and
mov
mov
xchg
stc
fisttps
push
sub
xchg
sbb
out
aad
pop
pop
pop
mov
add
int3
inc
sub
inc
into
gs
mov
leave
push
mov
stc
adcb
jle
icebp
push
push
jbe
xchg
mov
loop
rcll
int3
test
push
and
and
sub
cwtl
mov
call
add
stos
test
mov
std
and
call
std
mulb
and
mov
inc
orl
out
mov
je
shrb
arpl
jg
hlt
mov
inc
or
and
cmpsb
test
inc
push
dec
xchg
notl
imul
cmp
mov
cmp
and
enter
inc
pop
loopne
scas
leave
aas
in
mov
cwtl
sub
mov
or
mov
leave
in
add
jmp
loope
push
addr16
pop
inc
cld
inc
imul
sbbb
addr16
push
xchg
repz
and
mov
fistl
call
push
dec
push
rcr
and
inc
stos
xchg
mov
xlat
ds
sbb
push
sub
ljmp
addr16
cmp
sbb
sbb
aad
mov
or
mov
ror
push
jbe
addb
xlat
lock
mov
dec
inc
in
loop
movsl
mov
pop
pop
or
js
aam
insb
or
in
pusha
lret
push
fnstcw
adc
jno
cwtl
fidivl
fbstp
jp
in
inc
movsb
lahf
sub
testl
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
clc
les
adc
in
xor
push
dec
fnstsw
sahf
mov
in
xor
push
dec
popf
xorb
scas
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
cmovns
mov
in
bound
syscall
adc
lods
xchg
fstpl
jl
mov
fnstsw
nop
push
push
cmp
xor
stos
cld
adc
sub
mov
xor
push
dec
cmpsl
dec
mov
cmp
jae
push
movb
ljmp
lret
leave
test
jl
and
dec
outsb
das
and
ljmp
cmp
jae
push
and
ds
pop
nop
lods
fs
hlt
dec
xlat
out
adc
out
xor
jbe
jmp
testb
aaa
push
dec
fldl
in
xor
push
dec
fldl
frstor
dec
fucom
sti
sar
adc
in
xor
push
dec
cmp
adc
xor
dec
pop
test
cmpsl
adc
aaa
push
pop
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fadds
in
add
push
dec
flds
out
jb
push
dec
int
mov
mov
in
xor
push
dec
fldl
in
xor
push
dec
fldl
and
dec
sbb
adc
in
xor
push
dec
fldl
in
xor
cs
fstpl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
lret
dec
jp
fldl
hlt
scas
xor
push
sahf
mov
enter
js
dec
fldl
lea
inc
inc
jl
fldl
in
cmp
push
sbb
xorb
scas
xor
push
dec
fldl
in
sbb
imul
push
in
adc
push
dec
filds
in
xor
push
dec
fldl
int
scas
repnz
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
dec
fldl
in
xor
push
loop
mov
in
sbb
xchg
mov
pop
push
hlt
das
fs
jo
int3
mov
adc
out
mov
sub
aam
xor
fsubr
xor
xchg
inc
push
cli
mov
mov
inc
movsl
add
mov
sub
movsb
cmpsb
cmp
stos
mov
ss
outsl
mov
inc
cmp
shll
push
pop
mov
xchg
int
cs
fdivrp
xlat
and
orb
or
xor
xchg
andl
fnstcw
repz
pusha
rcrl
ljmp
pop
mov
dec
nop
js
inc
pop
imul
cmp
push
dec
jbe
pop
repz
cmpl
nop
orb
inc
imul
adc
push
sbb
xor
cld
lea
mov
and
shrl
xchg
mov
mov
lea
mov
jmp
fisttpll
push
mov
cltd
jp
and
cmp
inc
es
push
mov
daa
stc
cli
imul
or
add
icebp
jge
in
mov
decl
mov
shlb
jns
int3
mov
push
dec
dec
cmp
sbb
das
insl
push
sub
add
mov
cs
cmp
push
xlat
invd
push
cltd
jge
pop
jo
imul
sub
mov
les
add
jle
pop
lea
aam
or
xlat
jo
dec
jbe
mov
pop
adc
sbb
fisttpll
jmp
lods
in
fsubs
push
ret
hlt
add
leave
dec
and
xchg
insb
cmc
test
add
andl
aad
das
out
xchg
cli
popa
in
sbb
adc
push
scas
negl
push
ljmp
mov
push
aam
fcompl
mov
pusha
add
dec
popa
rorl
shlb
push
xchg
push
mov
add
pop
jnp
int3
aaa
outsl
inc
imul
dec
xor
mov
inc
xor
sahf
cmp
mov
jns
movsl
cli
popa
icebp
cs
push
ja
fists
lret
jmp
cmp
lock
mov
jmp
or
add
add
fldenv
test
addl
psubusb
call
and
stos
loope
sbb
sub
ja
mov
in
cmc
cmp
mov
mov
cmp
jmp
in
lret
je
xchg
xchg
mov
out
sub
xchg
push
repnz
mov
xor
shlb
cmpsb
inc
in
jnp
sti
ficomps
sub
popf
jg
fdivl
xor
mov
pop
xor
pop
div
push
sbb
and
fdivr
pop
shll
int
out
sbb
cmpsl
push
cli
adc
outsl
push
sbb
int
mov
stos
mov
in
ss
sti
push
insl
mov
adc
sub
out
push
movsl
stos
jb
xlat
ss
pop
sbb
mov
aam
loopne
cld
pop
push
xchg
std
push
sbbb
int
std
inc
test
sub
lds
sbb
pusha
loope
iret
mov
mov
dec
cmp
xchg
leave
cmp
outsl
mull
xchg
lock
dec
cli
mov
inc
cld
das
hlt
loopne
mov
roll
stc
popa
xchg
sub
shrb
jmp
inc
ljmp
xchg
mov
adc
sub
push
popf
in
shll
mov
into
dec
pushf
and
jnp
xchg
clc
rclb
and
mov
push
push
int3
insl
mov
leave
cltd
jl
test
test
jp
add
shrb
mov
notb
or
lods
mov
repz
cwtl
xor
mov
cli
sub
xchg
and
sti
pusha
pop
xchg
jmp
cmp
daa
enter
xor
jmp
rorl
repnz
cld
pop
sbb
sbb
pop
cmpsb
mov
imul
push
stos
es
add
outsl
pop
movsb
xor
pop
xchg
lret
push
je
test
out
push
rcrl
xchg
pop
mov
adcl
xor
xchg
sbb
mov
popf
add
mov
int3
or
lods
mov
add
imul
jle
scas
dec
push
into
xor
sub
aaa
mov
insb
outsl
inc
lret
in
out
pop
les
sub
movsl
subb
fimull
movsl
xor
fisttps
adc
imul
hlt
stos
cmc
scas
inc
push
xchg
or
imul
xchg
in
outsl
push
mov
repz
mov
jne
dec
dec
mov
iret
in
test
dec
sbb
das
ret
leave
xor
mov
sub
jb
push
xchg
jnp
jmp
xchg
xor
mov
jp
xchg
adc
mov
xor
out
jl
sub
shl
popa
pusha
pop
sub
scas
int
and
sbb
sbb
push
cs
mov
arpl
aaa
xlat
dec
and
pop
loopne
mov
jne
cwtl
cmpsb
mov
sbb
jmp
jb
jnp
pop
sti
cmp
and
fsubr
jo
push
dec
int3
rorb
push
inc
cmc
sub
rcrl
jl
cmp
int
and
xchg
aas
aaa
add
loope
loope
cld
or
pop
xchg
in
mov
mov
fldcw
out
ds
inc
cs
scas
push
or
je
xor
in
ds
jno
mov
jecxz
push
inc
dec
push
add
fsubl
sub
push
push
add
or
mov
and
jge
cwtl
insb
mov
aaa
fimull
push
negb
dec
cmpsb
bound
into
push
frndint
mov
xchg
roll
in
xor
js
and
pop
inc
jbe
in
pop
mov
mov
ret
lahf
push
in
mov
and
jb
icebp
lret
lds
scas
sub
sub
push
ret
faddp
pop
jns
jno
subb
add
js
fistl
aaa
int3
push
pop
jge
dec
inc
pusha
pop
jle
sub
adcl
mov
sub
xchg
pop
call
sti
movsb
mov
out
and
cwtl
fildll
dec
add
addr16
adc
mov
jp
pusha
ja
mov
inc
lret
sub
adc
movsl
ret
mov
jno
insb
ret
nop
mov
mov
cli
push
inc
dec
mov
fs
push
std
mov
xchg
mov
clc
cmpsb
cmp
adc
push
ss
jmp
adc
xorl
mov
sub
std
lock
sarb
jo
iret
hlt
pop
aam
mov
jbe
or
xlat
sbb
mov
pop
pop
dec
lcall
mov
mov
rorb
fwait
std
dec
pop
or
mov
sub
ficompl
adc
mov
jmp
fs
mov
pop
fwait
push
pop
iret
xlat
mov
pop
std
jl
mov
xchg
adc
shrb
adc
repz
or
xchg
push
jnp
lret
filds
cmp
lock
or
lods
pop
fwait
pop
adc
push
orb
cltd
shrl
fistl
bound
iret
sahf
sbb
outsb
insb
push
lock
test
xor
mov
pop
out
pop
mov
mov
xlat
xchg
xchg
push
aad
or
mov
xor
and
lahf
add
pusha
sub
repnz
mov
xor
fistpll
push
addb
mov
xor
loop
pop
mov
data16
mov
cmp
iret
push
pop
and
adc
dec
movsl
aad
popf
out
and
lods
cltd
mov
cltd
cltd
xchg
pop
cmp
enter
or
pop
xchg
ret
or
in
sub
loope
lods
rcrb
lock
adc
aad
popa
loope
fisubs
and
mov
inc
add
les
aaa
push
xlat
xor
movsl
mov
push
rcr
mov
cmp
add
pop
repnz
addb
ja
dec
shrb
jmp
lock
mov
int
aaa
test
in
shlb
push
inc
fwait
pushf
jne
mov
pop
xor
xor
sbb
adc
sbb
jae
lods
out
xor
in
inc
inc
pop
outsb
scas
xor
cmp
cmp
lret
dec
xor
mov
add
push
loopne
mov
test
mov
lds
inc
insl
mov
mov
into
call
add
jae
imul
push
outsb
loopne
sub
cmpsb
scas
xchg
insl
rorl
insl
hlt
aad
xor
cmc
dec
jecxz
jno
jge
test
bound
jle
dec
mov
shlb
add
push
mov
mov
out
adc
pop
cltd
inc
mov
je
inc
scas
idivl
push
mov
pop
idivb
fnstcw
loopne
push
pusha
adc
inc
call
mov
rol
xchg
hlt
mov
lcall
mov
inc
fildll
aad
push
inc
pop
mov
dec
dec
mov
lea
mov
pusha
aam
add
outsl
add
jmp
adc
adc
xchg
sub
aad
stos
or
sub
adc
and
sbb
decb
sbb
xor
sti
mov
outsl
sub
je
push
pop
insl
jge
je
call
fisubl
xchg
cmp
and
sbb
mov
mov
into
dec
shr
jmp
sbb
jbe
fimull
int
mov
mov
aas
dec
out
pushf
dec
jnp
sub
movsb
cmpl
test
push
jl
lahf
fs
mov
inc
test
dec
shll
xor
sub
push
xchg
aad
xchg
push
adc
sbb
mov
push
inc
or
clc
sti
les
fwait
mov
mov
xor
in
cs
mov
add
ljmp
out
sahf
ret
shlb
mov
pusha
or
sub
stos
shll
pop
sarl
fildll
mov
and
push
inc
fmul
jle
ret
test
inc
jb
xchg
outsl
or
daa
popf
cmp
sbb
adc
enter
ret
jns
pusha
mov
xchg
js
pop
fsubr
mov
inc
imul
push
cs
imul
cltd
pop
xor
dec
js
addr16
iret
mov
mov
mov
icebp
adc
or
jns
sbb
out
mov
mov
sarl
xor
xor
pop
xchg
gs
add
inc
inc
and
out
cwtl
dec
sbb
xchg
nop
ja
jbe
cmpsl
or
pop
mov
iret
mov
pusha
xchg
dec
jbe
lret
icebp
frstor
jns
fmuls
mul
popf
mov
adc
sar
or
pop
mov
gs
stos
in
cmc
sub
cmp
xor
stc
sti
shll
jmp
insb
xor
nop
fnsave
loop
push
cmp
pop
addb
cli
cmp
xor
lds
test
adc
pop
and
push
fcoms
mov
imul
lds
or
in
or
cmc
ficompl
lods
dec
mov
pop
js
and
test
sbb
mov
mov
mov
rcrb
adc
pop
mov
popf
stos
insb
iret
gs
jle
adc
shr
test
inc
test
aad
in
insl
xrelease
add
fwait
ret
dec
ds
sub
jns
sbb
test
xchg
out
loop
push
jl
lret
push
adc
xrelease
leave
cwtl
push
and
jmp
mov
flds
or
dec
adc
loop
out
pop
mov
sahf
push
xor
pop
scas
test
mov
mov
scas
dec
pop
push
mov
int3
ja
call
inc
shlb
mov
xor
iret
icebp
pop
pop
jns
enter
xchg
sbb
xchg
push
xor
cltd
std
push
mov
ss
gs
sub
add
cs
imull
cmp
xchg
and
popa
stos
sahf
add
xchg
push
out
dec
mov
inc
cmp
jne
or
push
dec
jg
jl
std
fucomip
adc
rcrb
push
test
outsb
mov
xlat
and
mov
dec
pop
enter
sub
std
lods
mov
out
xchg
pop
xchg
push
adc
adc
mov
ja
cmp
jbe
push
fxch
add
xor
pop
mov
fldt
adc
mov
mov
xor
repz
dec
fwait
push
xlat
inc
jae
nop
das
push
insl
adc
lock
add
push
mov
icebp
stos
shlb
arpl
cmpsl
clc
rcrb
push
orb
sbb
aam
pop
mov
or
pop
pop
jecxz
rclb
inc
insl
cltd
jle
jne
leave
cmp
and
push
jle
and
imul
push
gs
daa
out
pusha
push
bound
inc
xchg
orb
mov
add
push
cmpsl
mov
xor
jb
insl
or
stc
imul
incb
and
lea
ficompl
xchg
mov
js
push
out
movsl
add
push
mov
in
lods
cs
outsl
xchg
gs
les
jne
xchg
cmp
imul
xor
adc
xlat
xchg
loopne
test
mov
xor
jbe
sbb
xchg
out
aas
mov
jle
inc
outsl
dec
mov
vmwrite
push
push
sbb
ss
cmpsb
stc
or
popa
xchg
test
mov
inc
rcrl
mov
lret
xchg
mov
lret
aas
sub
xchg
dec
ss
ret
adc
daa
sti
pusha
jnp
ficoms
pop
aaa
xorb
and
mov
pop
mov
mov
cmp
imul
sarl
inc
fs
popa
xor
jle
std
notl
add
and
sti
xchg
cmp
xchg
pop
sar
xor
in
inc
lret
dec
or
mov
sbb
fistpl
and
xchg
out
lds
mov
je
and
jecxz
fists
dec
mov
pop
cmp
ror
push
arpl
mov
outsl
orb
cmc
mov
shll
inc
or
enter
push
cld
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
