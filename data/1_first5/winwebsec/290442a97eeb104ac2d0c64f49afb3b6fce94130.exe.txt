and
call
jecxz
mov
movsl
inc
pop
dec
push
cli
pop
and
mov
cmpsl
adc
lahf
jp
clc
cwtl
jno
and
sbb
es
jno
add
xor
pop
in
je
sbbb
les
mov
out
adc
ljmp
push
dec
xor
mov
mov
fsts
fmulp
clc
xor
cmp
xchg
call
cmp
push
xor
adc
mulb
gs
dec
mov
ja
leave
and
loop
lahf
scas
fwait
add
jae
inc
jle
cwtl
mov
lea
std
mov
xchg
stos
enter
fidivs
mov
icebp
mov
mov
jle
call
dec
cmp
pop
sbb
roll
icebp
sbb
fs
or
out
push
out
cltd
xor
jae
cmp
cmp
cmc
imulb
movsb
in
lret
jns
dec
and
test
loope
or
xchg
cmp
and
mov
cwtl
adc
lret
ss
and
mov
fmulp
shlb
sbb
jo
std
fbld
push
fadd
je
dec
add
faddl
pop
sbb
mov
dec
daa
aam
aad
filds
aad
sbb
inc
stos
push
iret
imul
movsl
xchg
add
mov
jmp
movsl
xchg
add
pushf
sbb
and
cmp
inc
jne
or
in
mov
adc
cmp
subb
ret
insb
inc
outsl
jns
out
pop
stc
cld
inc
push
jge
or
pop
dec
jns
rcrl
mov
add
cli
xlat
shll
dec
mov
jbe
cwtl
imul
push
test
fists
outsb
xchg
mov
ret
pop
ds
stc
out
dec
aam
aam
mov
int3
in
scas
mov
xor
mov
adc
adc
or
mov
in
sub
xor
cs
dec
push
in
int3
sub
scas
aaa
pop
scas
movaps
sbb
popf
mov
cmp
outsb
cmpsl
dec
jp
ja
lock
shlb
pop
sub
sahf
sbb
and
mov
lea
fs
loop
xlat
push
pop
inc
sbb
add
insl
inc
movsb
movsb
xchg
mov
cmp
mov
imul
add
xor
jecxz
movsl
cmpsb
adc
inc
cmpsb
int
lods
push
add
and
xor
and
ds
stc
pop
repnz
cltd
ret
testb
push
push
or
sti
cmp
and
sbb
aad
aaa
sub
jne
test
xchg
mov
lcall
xor
cmp
icebp
sub
inc
cmp
outsb
repz
push
lret
cmpsl
sub
sub
pop
jno
sahf
push
sbb
pop
mov
mov
ret
inc
aaa
sti
mov
fmuls
ds
or
iret
pop
fbld
fisubrs
xchg
adc
ret
sub
add
xchg
dec
les
lret
mov
and
test
jl
adc
test
adc
cli
mov
push
leave
mov
dec
test
cmp
inc
and
cmpl
into
jecxz
sbb
addr16
lahf
add
popa
push
cmp
jo
cwtl
stos
dec
xlat
mov
xchg
cli
ja
push
stos
mov
scas
aam
inc
je
out
scas
dec
test
test
loop
xchg
add
inc
jb
inc
ret
dec
xor
stc
imul
mov
and
outsl
repz
loope
xlat
or
sub
in
xchg
test
jno
imul
xchg
dec
ljmp
jmp
gs
mov
cmc
lds
icebp
jnp
pop
pop
ljmp
sub
sahf
jb
pushf
stos
imul
xchg
add
je
lcall
mov
subb
and
ret
stos
push
icebp
pop
inc
push
xlat
sbb
sti
aam
clc
fcompl
adc
xor
repz
pop
lret
inc
xchg
lret
ds
xchg
fidivs
pop
sbb
fimull
pop
pop
mov
lods
inc
js
sbbl
scas
lock
sub
xlat
pop
pop
push
cmp
insb
sub
imul
stc
xchg
inc
not
jne
inc
movsb
push
movl
sub
fsubs
or
lock
cmp
sbb
cli
push
fidivs
inc
aad
fldcw
fnstcw
je
lea
xchg
pop
add
jle
in
adc
push
jle
push
xor
das
fcoml
stos
rcrl
aaa
jno
jb
mov
repnz
repnz
xchg
mov
arpl
loope
insl
xchg
jno
inc
insb
xor
xchg
stc
fadd
mov
ret
fldcw
in
jecxz
xchg
jl
ficompl
jno
je
fnstcw
pop
outsb
add
testb
test
aad
and
jle
sbb
xor
xor
cmp
cmp
mov
add
ret
jg
and
jmp
jg
jl
cwtl
mov
cmpsl
je
andl
es
rol
add
fists
aaa
imul
scas
sub
data16
lds
mov
mov
pop
push
in
outsl
cmpsl
mov
call
and
jb
push
movsb
add
mov
pusha
addb
pop
cmp
push
inc
scas
loope
scas
stos
aas
lock
cs
pushf
inc
xchg
pop
jo
inc
jns
mov
push
clc
push
lea
stos
pop
pop
stos
adc
xchg
nop
pop
mov
push
dec
lret
inc
in
adc
add
mov
push
ds
jp
cwtl
add
sub
ret
rorb
ret
jno
test
or
ficoms
pop
sbb
out
cmp
fidivl
lret
into
fadds
imul
jp
cmp
fs
jp
outsb
leave
pop
add
mov
mov
sub
xor
pop
dec
inc
inc
inc
sub
int3
outsb
sti
jg
push
xchg
test
mov
and
insl
lcall
mov
mov
or
or
test
adc
dec
sbb
mov
or
and
sub
insb
stos
out
jg
mov
xor
in
adc
sub
mov
data16
cmp
inc
imul
push
xor
dec
iret
insl
fldenv
cmp
mov
jmp
dec
mov
fwait
addb
jae
out
icebp
mov
dec
push
cmp
inc
push
call
fwait
or
xchg
mov
je
jb
test
and
add
lea
test
push
aas
sbb
mov
icebp
andb
or
sahf
adc
sub
mov
les
lret
dec
loope
loope
or
int3
aad
jns
popa
lods
rcrl
in
mov
sub
addr16
fadds
and
hlt
les
das
mov
das
outsb
mov
mov
mov
mov
xchg
xor
cmp
xchg
addr16
sar
iret
jbe
cmpsl
in
inc
inc
inc
pusha
jg
jo
repnz
pop
mov
jb
mov
xchg
sahf
sbb
inc
addb
popf
pop
rcrl
rcll
lahf
xorl
push
xor
push
cmp
xchg
lret
jnp
clc
push
int
inc
and
push
pop
mov
and
mov
sub
sbb
or
cmpsb
lret
xchg
outsb
mov
lods
ds
js,pn
fnstcw
arpl
sahf
xlat
push
jno
pop
cmpsl
lods
bound
sbb
shll
stc
call
jns
sub
cli
dec
mov
stc
or
mov
cmp
push
adc
xchg
dec
sub
daa
in
adc
or
dec
jmp
fdivp
daa
cmc
dec
fwait
xchg
sarl
jo
jge
jnp
into
lods
out
lds
fisubs
jbe
mov
mov
in
mov
xchg
cmp
jno
std
aad
mov
in
outsl
in
pop
into
lret
lcall
mov
stos
inc
test
mov
je
cmp
pop
inc
in
sti
pop
push
or
subl
cmp
xlat
popa
xchg
xchg
dec
sbb
outsl
es
psubd
enter
sti
mov
sarl
add
cmp
inc
dec
jno
arpl
cmpsb
mov
jl
call
xlat
sbb
cmp
stos
push
push
sahf
lcall
cwtl
pop
bound
loop
in
push
scas
push
jnp
fnstcw
out
mov
jb
sbb
ret
or
enter
or
loopne
xorb
bound
push
pop
lcall
movsb
mov
dec
pop
adc
or
ja
adc
xchg
inc
sbb
aas
mov
cmp
les
xor
jnp
gs
sbb
out
inc
lret
lahf
xchg
testb
out
repnz
dec
jae
aaa
out
cmp
imull
add
bound
loop
mov
test
je
aaa
sub
inc
dec
mov
inc
xor
push
mov
je
jle
pop
dec
sub
cwtl
cmp
stc
push
aas
clc
xchg
mov
sub
push
stos
jno
mov
xchg
int
inc
pop
push
imul
mov
mov
incb
mov
push
icebp
data16
rcr
repnz
cmpsb
lcall
loope
mov
push
jbe
notb
ss
lret
int3
mov
ja
lea
out
sub
aad
mov
push
jno
pop
xor
and
fcoms
imul
or
jb
jne
cs
sub
push
xor
ffreep
in
imul
inc
int3
mov
repz
xor
mov
ds
lahf
jmp
ds
sbb
mov
adc
jmp
pop
popa
fisttpl
mov
adc
add
mov
bnd
cmpsb
fs
or
mov
push
repz
or
jne
mov
enter
icebp
int3
repnz
pop
adc
sbb
lds
and
add
decl
pop
cwtl
adc
lahf
ret
fwait
and
jmp
insl
pop
fstl
leave
fbld
mov
test
dec
mov
aas
andps
mov
add
xchg
loopne
fidivrs
push
iret
jg
xor
ljmp
aam
sbbb
shrl
lods
popf
ud2
cmp
pop
sub
lods
lret
sti
jnp
jp
sub
aad
rcl
mov
or
in
clc
and
outsb
xor
int
mov
or
push
adcl
arpl
mov
adc
pop
sarb
stos
test
sbb
cmp
lcall
inc
notb
cmp
mov
fwait
pushl
insb
lds
int3
jns
jo
aam
fs
cmp
mov
xorl
fwait
hlt
imul
sti
jge
outsl
inc
pop
adc
fdivrs
cmpsb
or
or
mov
pop
pushf
call
cltd
xchg
test
int
fstpl
sahf
push
and
imul
or
insl
adc
jmp
icebp
mov
pushf
sub
jmp
sbb
lcall
js
jge
stos
test
shlb
int3
push
loopne
pop
nop
inc
cs
add
mov
pop
pop
addr16
mov
lea
xchg
aas
rolb
fisubrl
push
add
ds
xlat
sub
mov
push
push
sub
fcompl
xchg
repnz
xor
repz
sbb
imul
add
mov
jecxz
push
jecxz
cmpb
sti
popf
subl
cmp
push
pop
pop
int
pop
fadd
scas
mov
ror
sbb
inc
icebp
jno
mov
dec
add
lret
mov
out
mov
in
addr16
inc
and
test
aam
dec
repnz
mov
rol
ja
lds
ret
sti
inc
mov
lcall
pop
testl
call
dec
leave
push
mov
loop
or
hlt
jmpw
xor
out
mov
jl
ds
mov
stc
or
imul
push
clc
mov
int3
loope
jnp
mov
add
lods
insb
dec
das
cmp
jg
dec
xchg
cwtl
xchg
mov
xchg
and
dec
sbb
mov
mov
xchg
imul
psrlw
aad
mov
loope
je
push
test
and
pushf
mov
fiaddl
jge
dec
hlt
leave
ss
out
je
in
lret
xor
ret
or
neg
aas
stc
lods
scas
arpl
fadds
add
xor
out
cmp
mov
add
xacquire
rcr
xchg
pusha
mov
xchg
jle
sbb
pop
popa
outsb
leave
cs
xchg
dec
or
mov
loopne
aas
fcompl
adc
mov
adc
push
fcmovnbe
loop
enter
sbb
xor
int
fdivl
xchg
dec
stc
add
jmp
mov
ret
scas
test
mov
jns
decl
stos
cmp
cmp
dec
scas
mov
loope
push
inc
push
out
lcall
xor
das
push
insl
push
push
push
stos
push
push
test
jecxz
xchg
call
lahf
or
movsb
mov
ret
mov
test
mov
push
in
cs
daa
hlt
jb
add
and
jle
cmp
setb
leave
jmp
rcrb
repnz
xor
repnz
or
addr16
xchg
cmp
mov
add
mov
jecxz
adc
shll
je
xor
jb
roll
jnp
shl
lds
fdivs
inc
gs
pop
jle
sub
mov
jmp
dec
cli
mov
jp
in
inc
sarl
add
cmp
push
nop
cmpsl
je
andb
loop
mov
xor
or
adc
jno
xlat
or
push
xchg
adc
and
mov
fcmove
mov
mov
inc
jne
adc
rclb
xchg
sbb
iret
lods
jle
scas
xor
pop
or
sbbl
dec
adc
imul
out
jns
int
test
rcll
fdivs
inc
out
roll
jp
or
adc
in
gs
adc
or
or
out
push
add
out
into
stos
jo
or
imul
rol
addr16
int3
inc
mov
ds
xor
js
orb
sbb
mov
mov
cmp
push
ret
or
cmp
and
adc
pop
into
inc
or
push
inc
pusha
mov
jl
push
fdivrs
xchg
cmpsl
pushf
sub
out
arpl
inc
jno
mov
je
sbb
mov
pushf
xchg
inc
pop
out
mov
loope
and
or
push
and
loop
je
in
test
int
ficoms
dec
and
inc
cltd
fsub
and
adc
stos
push
cmp
mov
popf
cmpsl
faddl
scas
cltd
stc
rcl
aad
push
icebp
lahf
dec
ja
cmove
mov
int
std
jb
dec
mov
pop
push
and
jo
pop
loope
scas
xor
sbb
test
lret
mov
or
and
cli
outsl
int
jg
jns
in
adc
mov
cmp
sbb
sti
mov
or
rcrl
inc
test
or
cmp
pop
sbb
fistpl
jg
loope
fidivrs
rorl
inc
insl
sub
in
push
addr16
test
scas
cmp
mov
outsb
gs
mov
outsl
xchg
xchg
shrb
mov
aam
sbb
test
rorb
iret
and
mov
cwtl
jo
repnz
mov
out
mov
fldl
lcall
push
cli
inc
nop
push
pop
sahf
lock
scas
aaa
pop
loop
inc
nop
adc
or
xor
mov
push
push
je
test
fdivl
inc
sub
cmp
mov
stc
and
incl
rcrl
add
mov
enter
lcall
rorb
cmp
lret
dec
int
adc
aas
sti
and
pop
jle
in
mov
add
xchg
inc
pop
ret
andl
notl
xchg
ss
stos
pop
xchg
fidivrs
popa
pop
mov
shrb
mov
enter
ds
mov
aaa
dec
ficomps
shr
add
loope
jmp
mov
addr16
imul
xor
lds
je
aaa
mov
jae
andb
xchg
mov
loopne
mov
iret
imul
xchg
mov
movsl
mov
xchg
sub
loop
add
icebp
dec
jnp
sbb
cltd
inc
test
push
sbb
in
jno
adc
xor
idivb
sub
jg
jnp
loopne
xchg
mov
int3
cltd
jo
loope
clc
push
mov
test
lahf
sbb
add
lea
push
outsb
sub
mov
bound
test
push
daa
lods
mov
xor
sbbb
mov
lods
stos
mov
shll
pop
xor
mov
jmp
adc
mov
mov
arpl
bound
lcall
pop
cmpsb
adc
movsb
jnp
sub
sbb
daa
dec
scas
xchg
clc
jnp
adc
push
rclb
out
lret
sbb
cmp
jmp
int
in
sbb
push
rclb
dec
mov
mov
into
sub
mov
xor
insl
test
stc
or
scas
sbb
pop
pushf
and
imul
and
sbb
jo
xor
mov
mov
out
or
push
push
inc
loopne
mov
jmp
mov
dec
pop
xor
mov
xchg
dec
pop
ficoms
pop
lahf
dec
rol
dec
adc
leave
xor
inc
and
movsb
ljmp
mov
cmp
add
adc
sahf
outsl
lret
xor
cwtl
cltd
in
out
test
sbb
push
int
shll
add
subb
jae
repnz
pushf
clc
ret
lcall
mov
jg
shlb
xchg
jbe
fnsave
xor
test
popf
stos
jecxz
repz
sub
in
xlat
je
jno
xchg
mov
pop
das
inc
insb
xchg
ret
sbb
das
mov
mov
rcrl
daa
lcall
imul
mov
xor
stos
push
xor
in
xchg
clc
repz
adc
sbb
xchg
sbb
fwait
dec
and
sub
cs
test
in
icebp
stc
jge
sbb
add
int
or
lock
push
and
cmp
nop
mov
fimuls
js
inc
xchg
cmp
xor
dec
pop
sarl
and
add
jecxz
pop
mov
movsl
jno
nop
in
adc
push
cmc
mov
sub
mov
push
cmp
xchg
enter
fwait
imul
inc
dec
sub
lea
into
lock
orb
arpl
mov
ljmp
push
notb
jo
xchg
notl
dec
inc
test
sub
jl
push
push
popa
adc
xor
sub
cltd
mov
inc
pop
and
rorb
test
sbb
sub
popa
ficomps
inc
cmp
mov
sbb
out
ja
shl
xor
icebp
in
ret
in
lods
cld
or
jmp
mov
jmp
sti
pop
pop
loop
outsl
xchg
scas
push
pop
inc
in
dec
aas
popa
adc
je
jno
les
out
loope
lret
add
mov
jp
arpl
insb
rcrl
dec
das
lcall
jnp
mov
adc
test
cmpsl
adc
dec
pusha
fnsave
mov
cmp
mov
out
nop
jge
clc
or
loopne
adc
push
sub
sbb
scas
mov
sub
movsb
jge
mov
sbb
cvtps2pi
mov
js
mov
jg
mov
iret
adc
jp
mov
and
out
stc
sti
or
pop
jns
ja
jge
mov
mov
jl
jl
push
flds
xor
fsubrp
ja
sahf
leave
sbb
loope
std
out
or
rorl
mov
and
mov
sbb
out
inc
out
adc
test
cmc
and
xchg
or
rcrb
gs
ja
cmpsl
rclb
mov
loopne
lret
mov
mov
int3
adc
pop
sub
push
push
clc
sahf
dec
sub
lock
clc
cmp
adc
test
in
xchg
jle
rorl
add
xchg
pop
mov
cmp
add
push
pop
pop
or
xchg
dec
shrl
inc
ret
mov
imul
popf
mov
dec
mov
sbb
mov
scas
mov
movsb
fisttpl
imul
mov
cwtl
jecxz
adc
mov
dec
int
enter
fmuls
jnp
cmp
cli
addb
and
mov
push
push
in
push
pop
outsb
loope
out
push
loop
ret
fidivrl
lahf
pop
dec
xchg
xlat
sbb
ret
negb
test
outsl
out
jle
mov
jle
out
xchg
cmc
jbe
leave
add
mov
dec
sar
test
fisttpll
mov
cmc
lds
out
mov
sbb
leave
test
adc
and
mov
popf
sub
dec
dec
push
test
xchg
push
add
or
sub
movsb
sahf
and
cmp
inc
jns
std
imul
fstpt
mov
cs
stos
pop
sbb
das
icebp
cli
mov
push
or
mov
jp
cmp
gs
mov
mov
push
push
and
or
aam
and
loope
negl
sub
mov
jecxz
push
xchg
inc
mov
popa
ja
xor
push
and
fsubr
push
and
inc
rorl
push
jp
sub
jne
js
ret
popa
arpl
rol
popf
adc
sub
bound
cmc
das
in
out
xor
ds
test
in
lock
push
jg
inc
pop
test
jl
pop
call
lcall
cli
mov
fsubrp
add
pop
insb
test
and
xlat
movsl
and
dec
pop
add
inc
leave
sbb
sti
das
adc
mov
enter
shlb
inc
out
jo
icebp
out
fs
sbb
sub
in
aad
or
in
mov
adc
push
inc
cs
push
fwait
dec
mov
sub
cld
xchg
in
xor
mov
stc
pop
mov
mov
add
ljmp
js
cmp
mov
outsb
in
insl
inc
test
in
out
outsb
int
inc
inc
icebp
inc
out
adcl
mov
and
sbb
jp
in
cwtl
leave
pop
cli
aas
adc
fs
jg
incl
push
cltd
fsubrl
adc
push
dec
mov
outsl
add
xor
repnz
out
addr16
call
lret
add
jmp
jmp
ret
mov
add
push
ror
out
push
mov
mov
in
fwait
mov
imul
je
mov
pop
jo
pop
sub
sbb
sarl
repz
lret
addr16
in
or
push
repnz
push
imul
cmp
xor
sbb
movsl
loopne
push
xchg
stc
dec
pop
lahf
rcrl
mov
das
jmp
jo
inc
cmp
mov
sahf
shl
sub
mov
mov
ss
shr
adc
and
pop
clc
aam
xchg
jl
clc
ret
sub
mov
cmp
lahf
xor
inc
into
js
outsb
aas
cmc
mov
jl
scas
mov
icebp
ds
push
sti
adc
adc
out
movsl
pop
jne
aad
fsubrs
out
adc
int3
sbbl
in
or
push
fdivrs
add
and
xchg
and
mov
mov
ret
push
insb
sub
sahf
adc
orb
jecxz
call
sub
inc
mov
enter
mov
mov
and
sbb
or
dec
rcl
inc
inc
ljmp
test
in
fsubrp
jb
sti
shl
movsb
dec
dec
lock
sti
daa
js
aaa
pop
fcmovnbe
mov
aad
ret
cwtl
std
or
out
imulb
push
jne
jno
out
sub
out
fidivrs
xor
mov
mov
leave
jg
jp
sub
sub
clc
insb
adc
cmpsl
hlt
int3
inc
outsb
incb
cmp
pushf
mov
sbb
jbe
jl
sub
negl
out
adc
jp
aaa
mov
xchg
jae
mov
ret
inc
mov
xor
sbb
adc
sub
xchg
mov
or
lea
aad
loop
icebp
dec
inc
aad
in
mov
pop
out
lea
xchg
and
ds
jp
jne
js
sbb
leave
mov
test
cs
push
shll
sub
cltd
mov
out
dec
mov
xchg
jnp
cmpsb
mov
mov
pop
pop
xor
mov
lret
mov
sahf
addl
ret
movsb
loope
push
inc
xor
int3
sbb
mov
xchg
inc
test
push
cmpsb
pushf
inc
scas
mov
dec
insl
mull
fstpl
mov
sbb
data16
sbb
jb
dec
push
shlb
cltd
rorl
fwait
jp
imul
ss
jo
adc
dec
adc
mov
jmp
xchg
dec
sbb
jnp
outsb
xchg
sub
jne
out
inc
and
pusha
lods
movsl
aad
adc
movl
push
jb
cmp
std
adc
mov
mov
jbe
sbb
xchg
ror
sbb
sub
and
or
lret
mov
xor
mov
cmp
repz
dec
ret
fadds
subl
mov
adc
loop
test
sbb
mov
mov
insl
icebp
push
scas
in
mov
mov
mov
jmp
das
scas
inc
sbb
inc
pop
xchg
outsb
lods
xchg
aam
push
mov
dec
adc
or
jo
push
pop
bound
lds
push
add
push
in
fcoml
lock
jmp
or
pop
ret
push
or
mov
mov
fistps
insl
add
cld
cmpsb
pop
mov
sub
pop
sbb
xchg
jg,pn
fwait
push
cmc
inc
sub
push
and
imul
jge
add
and
lock
mov
sub
pop
pop
and
pushf
shlb
cmp
xchg
mov
adc
cmp
pop
push
cmpsb
ds
fs
fcmovnb
push
push
int
dec
jmp
xchg
cmp
mov
cmc
inc
xor
mov
pop
jmp
cmp
pop
clc
sub
iret
pop
mov
jecxz
mov
ret
mov
fldcw
fwait
jmp
lret
pop
mov
in
sbb
fwait
nop
add
cltd
leave
pop
add
and
dec
adc
movsb
dec
gs
lcall
es
pop
in
sub
scas
test
mov
xor
sahf
fcomip
pop
std
repnz
into
mov
xorb
lds
add
insl
repnz
mov
push
jne
jg
in
dec
fsubrs
int
sub
cmp
test
pop
shrb
inc
push
xchg
xchg
cmp
stos
xor
aam
mov
lahf
in
pop
repnz
sub
fcoml
xchg
dec
and
mov
cmpb
jmp
js
cmpsl
loop
sbb
scas
push
adc
xchg
pushf
fldt
mov
push
xor
inc
and
pusha
dec
cmpsb
mov
fsubrs
jmp
xchg
aad
pop
xchg
or
iret
rcl
dec
xchg
mov
movsb
aaa
sbbl
push
fwait
hlt
frstor
fldt
jnp
sub
pusha
pop
xor
pushf
inc
mov
gs
push
das
pop
xor
cmp
jno
xor
xor
mov
enter
lret
clc
std
not
stos
inc
inc
in
xor
fdivrp
jmp
gs
xchg
stos
push
jl
add
imul
shll
jge
fwait
sbbl
push
push
insb
rorb
lret
and
aas
push
push
in
adc
fidivs
popa
ret
lods
into
mov
pop
lods
mov
add
sub
push
dec
pop
loopne
insl
int
mov
push
xchg
faddp
loope
gs
pop
xor
insl
dec
dec
sahf
fsubr
xchg
jl
xor
lock
sti
push
adc
sbb
sbb
enter
into
cltd
ja
jb
ljmp
mov
data16
call
popf
push
jge
lds
movsl
jge
push
add
stos
mov
gs
jmp
rclb
xchg
rcl
aam
and
sbb
sub
or
sahf
xor
nop
add
popa
pop
shrl
mov
sbb
orb
xchg
das
xor
test
inc
push
and
int3
xor
mov
stos
in
xor
cmpl
roll
cmc
sbb
stos
add
popa
sub
cmp
or
dec
lret
xor
inc
jo
test
xchg
cld
xchg
mov
inc
jno
jl
cmpsb
sarb
inc
jnp
cmp
addr16
decl
data16
icebp
dec
push
push
adc
repz
mov
sahf
subl
loope
shlb
cltd
cmc
mov
or
imul
in
inc
or
repnz
xor
xor
ret
repz
jecxz
mov
pop
mov
cmpsl
repnz
in
adc
loope
jmp
push
mov
xchg
add
lret
xchg
jo
jl
mov
jbe
data16
data16
repz
fucomp
inc
pop
data16
jno
or
xchg
mov
mov
int
xor
pop
or
pop
bound
adc
mov
test
insb
inc
cmc
xchg
inc
imul
leave
cmp
jo
inc
int3
jb
mov
ss
jg
je
mov
jnp
ret
xchg
or
popf
inc
jne
and
push
idiv
popa
mov
hlt
xor
scas
andb
sbb
push
popl
cmp
xchg
sub
mov
fnstenv
leave
dec
xor
mov
shll
clc
outsl
cs
arpl
data16
jp
inc
mov
sar
ret
add
data16
sbb
mov
js
insl
stc
loopne
pop
jnp
repz
add
ret
testl
lea
loopne
mov
out
mov
jmp
jle
in
test
fsubs
pop
fmuls
jp
fwait
xchg
fdivl
aaa
int
rcl
imul
mov
popa
inc
mov
sub
xlat
into
sub
jle
scas
push
inc
jg
aas
aaa
add
popa
subl
sub
lock
ret
push
neg
mov
popl
push
aad
cmp
in
pop
aaa
movl
pop
inc
pop
ds
clc
mov
ds
int
test
das
pusha
mov
test
sbb
jbe
add
mov
dec
in
pop
rorb
cwtl
and
xchg
inc
and
lret
test
ds
cmc
inc
lds
cmpsb
dec
xchg
int
stos
jmp
xchg
and
aam
mov
rcrb
xorl
pop
or
gs
sub
pushf
jmp
dec
cs
mov
push
mull
mov
or
loop
xchg
ja
xchg
dec
cmc
mov
and
enter
inc
adc
outsl
lods
ss
mov
adc
test
xor
daa
ret
mov
xchg
xor
les
dec
pop
loopne
or
aam
lea
mov
pushf
adc
xchg
xlat
push
test
in
push
fistpl
xor
xchg
mov
insb
inc
std
and
mov
mov
mov
dec
mov
out
sbb
inc
fnstsw
fldl
scas
int3
adc
stc
pop
pop
fdivrs
cmpl
and
xlat
sbb
pop
es
aaa
jbe
fnsave
out
pop
mov
xor
psubq
push
shll
add
xchg
jo
mov
inc
dec
push
gs
cmpsb
or
push
loope
jbe
out
sub
bound
fwait
imul
pop
cmp
mov
dec
dec
dec
out
in
aad
in
pop
mov
mov
inc
cwtl
imul
std
xlat
inc
test
ficompl
mov
push
mov
jecxz
insl
mov
loopne
push
jecxz
es
adc
testl
or
xor
mov
inc
aad
mov
adc
lods
das
jne
sbb
mov
mov
and
jl
movsl
call
push
fdivl
shl
popa
inc
cmp
pop
sub
jae
into
mov
mov
cmp
inc
sbb
daa
jecxz
pop
lea
out
stos
out
jne
ljmp
sbbb
add
rcrb
push
test
mulb
dec
cmp
xor
adc
pushf
push
outsl
sub
cmp
cmp
push
lea
mov
out
xchg
mov
incl
adc
pusha
in
sub
mov
xchg
sbb
or
mov
inc
jmp
dec
loope
imul
mov
adc
push
dec
mov
xchg
adc
outsb
dec
adc
cmp
push
fcmovnbe
adcb
mov
insb
call
xchg
inc
lods
push
mov
or
jl
rorl
inc
ret
sbb
lods
stos
xchg
sub
jnp
lds
cmc
xchg
mov
in
inc
imul
mov
xor
test
das
and
ja
sahf
cmp
xor
jg
lds
sub
sbb
xchg
xchg
movsl
or
jns
sbb
jl
cmp
mov
arpl
push
dec
in
inc
test
imul
mov
push
dec
iret
add
ret
mov
ret
lea
inc
fwait
out
sbbb
xorb
je
xchg
sbb
mov
pop
scas
sarb
add
add
push
fmull
pop
mov
lret
inc
pmulhuw
inc
lods
shrb
gs
idivl
test
stos
sub
movsl
xchg
lods
cld
adc
sub
mov
popa
idivl
mov
test
pop
dec
xchg
add
cmp
jbe
mov
mov
adc
movsl
mov
push
popf
out
push
push
in
push
shrb
push
inc
imul
mul
xchg
sahf
in
sti
inc
xchg
enter
push
data16
in
sbb
sbb
mov
or
cmc
adc
dec
repz
lret
xchg
fisubrl
ja
leave
pop
or
push
jge
les
shrb
subb
cmp
push
js
mov
aad
mov
ss
jp
xor
fwait
imul
pop
cmp
scas
jo
adc
enter
mov
lcall
inc
ret
mov
jmp
push
mov
xchg
aam
pushf
push
dec
int3
repz
mov
std
inc
lock
sub
aaa
test
test
jns
jae
scas
mov
fnstcw
and
push
sti
movsl
int
aaa
cli
mov
add
loope
repnz
loopne
jp
insb
pusha
cmp
mov
pop
in
push
cltd
dec
sbb
adc
push
xchg
mov
pop
mov
mov
mov
mov
hlt
loop
sbb
in
push
decl
push
outsl
outsl
push
popf
icebp
das
push
dec
push
lds
hlt
out
cmp
adc
bound
pop
pop
icebp
jp
notb
push
aaa
sub
mov
push
add
pop
or
mov
enter
cmpsb
shrl
mov
dec
repz
cld
add
mov
aaa
daa
stos
pop
jl
mov
lods
xchg
je
jge
pop
push
cli
and
je
cmp
dec
mov
shll
aaa
sbb
xchg
clc
xlat
cmp
sub
inc
xchg
fmuls
jg
in
stc
and
mov
add
cmp
insb
push
shrb
sbb
andb
enter
jbe
sar
cmp
cmp
call
mov
imul
js
scas
bnd
jns
push
leave
cs
add
xchg
fnstcw
fwait
ss
mov
and
inc
mov
std
xchg
mov
in
aas
cmpsb
out
adc
loopne
push
push
mov
xchg
sub
and
mov
shrl
pop
lods
dec
std
inc
add
andb
inc
rol
rcrl
xchg
into
mov
sbbl
test
subb
cmp
sbb
sbb
daa
jmp
xchg
pop
pop
data16
xchg
inc
pushf
and
dec
or
les
es
mov
shlb
mov
xchg
xchg
out
sub
pop
mov
pop
popf
sbb
push
sub
pop
inc
jns
sbb
lods
xchg
dec
popf
add
and
push
add
ja
xor
lcall
sub
xchg
inc
cmp
mov
je
inc
xor
cmc
lods
rcr
popa
or
inc
shll
xor
or
ucomiss
xchg
fcomps
jns
popf
jecxz
movsb
fsubs
shlb
mov
dec
and
mov
mov
jno
loop
adc
push
mov
xor
jg
inc
push
jb
xor
sub
pop
fdecstp
jmp
cli
jle
mov
cmpsl
insb
jl
ret
stos
imul
sub
push
icebp
or
scas
lods
jnp
in
jbe
outsl
andl
ret
sub
xor
aaa
xchg
icebp
rorl
rorl
imul
ss
shll
jb
push
pop
loope
mov
xchg
sub
push
sub
sbb
mov
aam
out
or
dec
xor
sarb
pop
cld
dec
aam
or
sti
test
mov
mov
mov
int3
loope
ret
mov
xchg
movsl
cmp
jae
cmp
idivb
sbb
fmul
mov
cmp
inc
outsl
xor
testl
insl
cmp
mov
push
xlat
std
std
test
clc
nop
xchg
sbb
sbb
pop
mov
xchg
inc
daa
sbb
iret
lds
adc
xchg
push
int
daa
sub
loop
outsb
xor
or
cmp
push
in
imul
push
pop
out
les
bound
adc
mov
cs
cmp
fstps
push
stos
nop
xchg
sub
cmp
cmc
outsb
icebp
testl
dec
dec
repz
mov
int3
or
jbe
fs
lret
arpl
test
lea
jo
bound
inc
fadds
dec
xor
std
sahf
sarb
lret
scas
repnz
nop
bound
dec
fs
or
das
pop
add
cmp
or
daa
or
xchg
test
arpl
jno
int3
lods
pushf
sbb
cld
mov
jge
addr16
mov
leave
jge
mov
sub
or
sub
push
push
stos
jge
push
jnp
je
mov
ficompl
or
cwtl
fdivrs
and
pop
jbe
pop
inc
cmp
cld
dec
lods
xor
out
out
push
lods
je
push
jns
adc
inc
dec
negl
push
pop
sti
pop
shll
iret
into
leave
cwtl
sub
mov
push
mov
inc
mov
aam
dec
and
fs
inc
test
es
cli
xchg
test
idiv
mov
mov
test
xchg
retw
xor
xlat
xchg
les
lds
les
pop
mov
sbb
xlat
int3
lahf
adc
lret
fnstcw
ror
xor
mov
xchg
js
stc
cmp
fistpl
daa
mov
icebp
xchg
mov
xor
add
fcmovb
lds
shlb
cmp
ja
inc
jb
popl
sbb
inc
aas
push
rcr
mov
rclb
push
sbb
sub
int
negb
adc
imul
inc
pop
repz
lret
sahf
and
cmpsl
clc
pop
dec
aaa
xor
cmp
in
or
out
mov
jo
add
mov
aaa
xchg
adc
fistpll
push
or
stos
test
pop
cmpsb
jo
pop
mov
sub
popa
dec
cmp
cmp
aas
adc
sbb
jbe
dec
and
sub
call
dec
mov
in
xchg
ret
jp
xor
and
lret
pop
subl
push
inc
dec
cmp
in
cltd
cld
inc
push
jns
and
jb
push
fistl
into
out
mov
jo
mov
cmp
out
into
insb
mov
out
mov
jl
cwtl
popf
push
stos
xchg
ret
sub
gs
into
cmp
jp
push
pop
jecxz
dec
lods
cld
clc
inc
rorl
jg
pop
jb
cwtl
mov
xchg
or
lds
mov
jae
cmp
sahf
sub
xchg
sbb
loopne
jmp
lds
mov
lock
pop
je
xor
xchg
bound
clc
repz
xor
mov
add
mov
out
cmpsl
add
push
mov
cmpsb
push
test
add
dec
stos
push
mov
jo
ja
add
mov
mov
sub
cmp
js
insl
lret
ficoms
push
es
movsl
and
outsb
gs
movsb
cld
lods
inc
mov
push
xchg
mov
lods
jle
cmp
pop
jle
movsl
and
jecxz
das
jp
mov
or
cld
aas
inc
test
fwait
cli
sti
mov
inc
sbb
xor
push
mov
push
lock
pop
repz
jnp
icebp
sub
pop
add
mov
jmp
les
mov
jmp
mov
push
mov
arpl
mov
insb
and
stos
pop
and
push
std
outsb
fiadds
or
andb
mov
aaa
faddp
lahf
push
popf
nop
fs
pushf
sub
arpl
sbb
nop
or
push
cmp
loop
ror
inc
test
enter
ljmp
mov
leave
aaa
bound
dec
xor
and
pop
mov
lret
and
pop
push
cli
add
jle
mov
in
mov
xor
xchg
sub
scas
mov
push
adc
andb
out
xchg
jno
mov
add
or
and
aas
sarb
push
xchg
lcall
ds
xchg
lods
xor
out
and
xchg
pop
int3
xor
mov
xor
ljmp
insb
xor
cmpsb
sarb
and
idivb
iret
xlat
dec
cmp
add
xor
inc
test
lock
pop
icebp
sub
mov
ds
pusha
pusha
orb
ds
push
aad
mov
dec
ja
mov
incb
pushf
bound
mov
mov
or
jmp
mov
into
scas
pop
pop
lds
adc
xor
or
sub
inc
sub
repz
cmpsb
jg
lret
test
adc
pop
mov
icebp
inc
xchg
push
test
push
es
push
add
bound
add
popa
pop
xor
cmpsb
inc
jb
leave
insb
mov
push
movsb
lea
fs
rorl
or
inc
cs
aas
mov
mov
ret
and
push
and
daa
push
testl
bound
lods
push
add
leave
sub
pop
adc
sub
jo
arpl
dec
loope
pusha
js
mov
shll
shr
and
xchg
push
int3
pushf
repnz
daa
das
icebp
add
push
xor
xor
aas
pop
adc
out
mov
dec
lea
shll
inc
fldcw
insb
aam
roll
fwait
jp
jl
in
xchg
sbbl
out
enterw
jg
pop
pop
cmp
ljmp
pop
or
test
inc
inc
mov
inc
arpl
inc
inc
outsl
jnp
jae
inc
mov
jnp
push
ror
cli
cmp
fwait
push
mov
out
in
aad
inc
lret
mov
stc
cmc
insl
clc
mov
test
mov
icebp
jle
fdivl
jnp
mov
push
out
call
and
mov
mov
mov
mov
jb
sahf
push
hlt
es
lds
pushf
adc
es
pop
pop
mov
xchg
imul
pop
or
dec
xor
test
insb
or
xor
gs
pop
pop
xchg
addr16
dec
test
or
rol
movsb
push
or
xor
inc
addr16
mov
mov
add
inc
mov
sub
js
das
enter
sub
and
sahf
pushf
pushf
pushf
or
mov
sahf
add
psubsb
sub
or
icebp
sub
jne
lret
addb
mov
imul
adc
adc
sbb
fstpt
out
cmp
lret
inc
adc
jne
xchg
adc
mov
fstps
push
cld
jp
push
in
fsub
xor
mov
cmovl
outsb
sub
nop
push
loop
ss
ljmp
and
xchg
orl
lahf
cmp
test
stos
mov
and
scas
ret
xchg
adc
hlt
mov
adc
xor
movsl
std
cmp
jbe
jne
sbb
and
rorl
dec
pop
jge
push
cmp
out
bound
mov
out
add
stos
fwait
lds
insl
stos
shr
test
lods
fldenv
inc
add
xor
sub
adc
nop
xchg
sub
or
xchg
aam
cmp
xchg
mov
ret
push
fdivl
xchg
cmp
xor
adc
cld
loopne
inc
fcoms
faddl
enter
jae
loop
rclb
outsb
inc
sbb
iret
je
jae
es
mov
dec
shlb
pushf
out
out
mov
push
shlb
out
fistl
inc
jecxz
xlat
dec
test
xlat
push
dec
gs
sbb
fldl
movsb
ret
push
lret
push
fnsave
xor
mov
pop
and
fwait
push
rcll
iret
dec
mov
jle
or
cmpsl
pop
pop
push
mov
rclb
or
imul
shll
push
loop
lret
fprem1
mov
das
inc
add
ss
repnz
mov
mov
in
fists
and
mov
or
add
stc
xorl
cmc
into
and
xor
aam
adc
test
add
std
sbb
sub
shld
pushf
dec
pop
movsb
dec
add
inc
mov
popa
divb
hlt
cmc
adc
mov
cmpsl
sahf
push
and
out
das
jle
shl
mov
pop
cmp
out
sbb
xchg
outsl
sbb
cmp
lds
cmpsb
icebp
push
mov
adc
mov
scas
sbb
scas
loope
in
test
mov
jp
cltd
or
dec
dec
jle
repnz
jb
enter
fsubr
std
jle
inc
adc
mov
xor
cmpsb
mov
or
loopne
orl
push
jno
fmul
cs
mov
js
jle
xchg
cwtl
in
icebp
sarl
add
or
cmp
sub
int
rcl
inc
inc
mov
pushf
jb
cmp
paddw
push
jg
and
xor
cltd
xlat
xchg
js
jle
push
pop
lcall
sbb
inc
inc
repz
pop
xor
sbb
add
push
inc
mov
inc
ficomps
pop
mov
pop
cmp
clc
pop
jle
pop
movsb
movsb
stc
subl
fstpt
push
roll
xchg
outsl
sbb
cs
fnstsw
je
pop
dec
pop
jns
push
gs
int
popf
pop
push
das
inc
push
xorb
sub
push
mov
roll
sti
add
mov
gs
lea
xor
or
popf
and
les
lret
jecxz
sbb
popf
jg
in
push
pop
outsb
xor
lcall
std
repz
mov
or
cmp
dec
fcoml
mov
inc
lock
lret
xchg
ret
rolb
jns
fcoml
xchg
push
cli
roll
add
call
clc
cmpsb
lds
movsb
dec
jl
and
mov
mov
sbb
xchg
xchg
mov
fs
addb
je
and
nop
pop
jnp
jmp
add
dec
mov
adc
mov
push
pushf
jg
add
pop
inc
push
inc
cmc
mov
mov
or
mov
iret
cmp
push
jnp
les
das
mov
sbb
ret
push
scas
sti
cwtl
sti
inc
stos
fwait
push
stos
fstpl
rol
sahf
icebp
xor
jne
cmp
adc
shrl
xchg
sub
dec
push
add
imul
ret
add
dec
call
mov
int3
mov
adc
adc
adc
cli
jle
push
pop
mov
testl
test
xor
mov
testb
sub
pusha
aam
aam
mov
shl
lahf
fnstsw
or
mov
sub
dec
jno
sub
mov
cmpsb
mulb
scas
addr16
loop
add
ljmp
mov
push
movsl
int3
jbe
mov
xor
push
dec
test
aaa
insl
mov
xchg
push
sbbb
sbb
xchg
cli
rcll
test
fidivs
outsb
int3
jno
cli
add
in
das
ds
scas
nop
push
sbb
dec
lds
out
jge
sbb
push
in
fadd
jge
sbb
push
xor
push
lods
push
std
mov
je
call
pop
add
pop
lret
addr16
js
mov
mov
mov
out
pop
jmp
lea
jno
jno
mov
mov
fsubrl
ret
stos
add
push
dec
mov
stos
sub
add
hlt
dec
int3
mov
jns
loop
hlt
out
hlt
sbb
lcall
mulb
ror
mov
or
sub
sub
mov
pop
xor
aam
dec
cmpsl
mov
iret
jae
pop
jbe
aaa
cmp
nop
and
cltd
in
stos
fsubrs
jmp
cld
test
cmp
mov
pop
sub
cld
xor
xor
call
cmp
stos
cmp
les
sbb
xchg
cwtl
cmc
cltd
arpl
push
lret
seta
mov
dec
dec
aaa
lea
push
ja
imul
fsubl
stos
xor
lcall
icebp
shll
xor
push
xor
addr16
jb
inc
andl
sahf
dec
rolb
rcl
imul
cli
out
add
jno
push
inc
mov
cwtl
jmp
pusha
lods
enter
lock
cmp
cmc
inc
cmp
sahf
ss
int
insb
push
push
xchg
movsb
fisttpl
jnp
rclb
rcrb
sbb
push
stos
and
outsb
mov
jb
sti
and
bswap
aas
in
les
lahf
movsl
jecxz
mov
pop
clc
mov
and
add
dec
pop
cli
pusha
insb
push
insl
push
adc
add
jmp
mov
jae
mov
dec
clc
mov
and
jl
jmp
lret
jl
sbb
shlb
xchg
ret
mov
fdecstp
and
mov
sbb
push
idivl
rorl
cmp
sahf
fs
insl
in
inc
call
cld
pop
fmull
int3
sbb
push
dec
xchg
cmp
mov
bound
cwtl
adcb
adc
movsl
dec
adc
adc
push
jbe
sub
repz
test
mov
movlps
add
pop
jo
cmpsb
cmp
mov
mov
loop
in
xchg
in
inc
loopne
inc
rclb
pop
aad
mov
push
insb
out
repz
mov
push
js
repz
scas
arpl
mov
scas
mov
push
lds
filds
sbb
lods
outsl
pop
lea
xchg
dec
outsl
in
iret
int3
mov
mov
push
shl
mov
lcall
sub
sbb
pop
dec
xchg
lahf
and
test
insl
fwait
je
es
xchg
test
pop
xchg
and
and
icebp
adc
push
mov
sub
lock
sub
inc
push
clc
aad
int3
add
es
pusha
nop
inc
sub
sbb
sbb
cs
leave
and
mov
outsb
and
dec
inc
orb
popf
lret
cwtl
repnz
enter
mov
mov
xchg
xchg
cmc
adc
adc
insl
mov
inc
or
pop
int3
push
cli
and
mov
and
mov
mov
push
dec
push
bound
mov
inc
mov
adc
rorl
mov
xchg
sti
gs
mov
adc
mov
push
adc
jl
repz
mov
pushf
dec
shrl
add
insb
cltd
push
mov
leave
out
out
jmp
add
xchg
or
xchg
mov
pop
dec
mov
mov
ljmp
aam
vpshuflw
dec
or
jne
lock
scas
pop
xchg
movups
ficompl
pop
add
add
pop
pop
test
ret
pop
and
cmc
and
pop
jle
daa
in
xchg
mov
inc
pop
add
mov
pusha
cld
sbb
sar
jb
mov
dec
dec
xor
jnp
je
inc
sub
inc
add
mov
ret
imul
cwtl
in
ret
fs
mov
test
mov
repz
ret
inc
in
mov
pop
cmp
dec
mov
pop
add
dec
mov
cmp
scas
lods
ret
xor
inc
adc
loope
push
sub
sbb
mov
push
shlb
cld
or
xchg
xor
fs
sbb
xchg
int
and
sbb
mov
call
cs
mov
aaa
mov
push
sarl
or
sarl
js
dec
pop
stc
adc
fsubrl
or
lret
jl
add
popa
mov
loopne
adc
pop
jp
aam
imul
xor
iret
sub
setp
inc
add
imul
ret
test
fstpl
div
into
mov
dec
cmp
add
lret
or
push
fstp
mov
mov
adc
xchg
mov
sub
mov
insb
stos
fwait
xor
xor
rolb
mov
and
push
dec
xchg
add
jnp
mov
fcomi
insb
lret
jno
mov
xchg
ret
pop
repz
sub
testl
repz
cmp
into
push
jns
dec
js
mov
lahf
aas
jg
shrl
jb
inc
subl
cmp
pop
cmc
jno
into
jge
mov
les
cwtl
mov
jae
icebp
jo
cmp
dec
out
dec
fisttpll
sub
lods
int3
nop
or
pop
rcrl
movl
dec
les
outsl
fidivl
jae
dec
xlat
sub
cmp
or
lea
sbb
dec
push
jecxz
test
andb
dec
cs
test
into
fwait
xor
loopne
push
inc
int
mov
dec
sub
mov
repz
and
out
popa
arpl
sar
mov
test
push
add
add
push
lret
xorl
fidivrl
add
push
mov
mov
sub
mov
repnz
mov
cmc
adc
xor
jo
std
fs
inc
int
movsl
adc
mov
jo
jl
out
push
cmp
xchg
mov
jae
outsb
jecxz
pushf
lods
cmpsl
sti
mov
sbb
add
adc
std
cmpsl
repnz
mov
out
fucomip
in
adc
xlat
jmp
in
jo
inc
jp
mov
and
xchg
in
mov
popa
outsl
mov
add
fildll
jmp
mov
lret
pop
xchg
arpl
inc
cmp
or
xor
in
jne
jo
push
sub
sbb
sub
xchg
mov
push
xchg
cmp
and
push
or
xchg
ret
jne
fsubr
lahf
addb
dec
push
mov
xchg
js
dec
add
in
sbb
test
lahf
cli
mov
jae
pop
push
je
push
mov
add
popa
sub
pop
call
fstp
ret
mov
xorl
sub
cltd
in
inc
stos
lock
sub
dec
test
pop
mov
add
enter
mov
fsubp
pop
push
arpl
mov
xor
icebp
push
cmp
in
movb
mov
pop
repz
adc
adc
xchg
fcoml
xor
loop
add
aaa
jl
iret
jae
pop
stos
pusha
jae
mov
leave
mov
pop
stos
out
push
adc
outsl
pop
pusha
arpl
xchg
sbb
jmp
inc
xor
ret
outsl
xchg
das
add
cmpsb
out
loope
lret
popf
mov
sbb
data16
jp
aaa
sub
loope
mov
adc
mov
jae
and
add
push
movsl
cs
cld
dec
sar
scas
xchg
repz
fcmovnu
push
outsl
int3
sbb
xchg
bound
ficoms
icebp
andl
pushf
sub
shll
push
dec
sbb
mov
loop
jecxz
push
sub
imull
jmp
repnz
mov
jg,pt
mov
cmp
xor
xchg
pop
stc
enter
jb
data16
add
jb
jno
sub
pop
dec
jecxz
or
in
movsb
sub
push
stos
cmp
and
scas
cmp
outsb
cmc
scas
xchg
rcrl
mov
jb
jne
jae
sub
adc
adc
inc
adc
divl
outsb
push
in
cvtps2pi
movsl
leave
xlat
adc
push
inc
popf
mov
movsl
or
ret
jecxz
dec
sahf
mov
imul
jl
icebp
and
fistpll
or
daa
movsl
xchg
cwtl
out
mov
stos
mov
sub
div
ret
cmp
sub
das
cmp
negb
pop
int
pop
daa
leave
testl
mov
or
ljmp
adc
mov
mov
mov
sub
jno
test
xor
xchg
mov
in
ss
and
xchg
sub
mov
push
xlat
loop
and
push
fcompl
je
fcoml
pop
ja
sub
xor
mov
inc
mov
les
mov
add
pop
js
inc
mov
xor
mov
movsl
add
test
xor
push
cmp
add
jnp
insl
cmc
sahf
test
jle
inc
and
and
jne,pn
imul
or
dec
add
cwtl
rcll
scas
cmp
fstps
cmc
lock
mov
sub
xchg
push
cmpl
mov
loopne
jl
mov
jl
pop
mov
mov
mov
push
popa
cmp
test
mov
cmc
pusha
les
jl
call
or
pop
into
in
sarl
out
shll
inc
pop
push
mov
aaa
pop
negl
pop
jbe
dec
sub
xlat
cmc
dec
xchg
inc
pop
fucomi
shr
inc
movsb
divl
push
push
les
aam
fnstsw
sub
and
or
jg
gs
les
push
lret
rcll
xchg
dec
pop
outsb
push
imul
movsb
sbb
dec
pushl
dec
ss
orb
mov
cld
adc
sbb
and
cmp
sbb
clc
pop
into
jmp
xchg
mov
fwait
adc
cmpsb
popa
lcall
arpl
call
adc
cmpsl
lock
mov
sub
rolb
add
popf
mov
push
popf
push
imul
pushf
out
cmpb
mov
inc
mov
out
fldt
loopne
lahf
cld
das
mov
push
push
dec
inc
test
xor
jmp
inc
xor
js
ds
or
ds
dec
xor
test
aam
jecxz
adc
jmp
out
cmp
fisttpll
mov
push
mov
or
fistps
jmp
sub
jo
mov
popl
cwtl
call
and
push
add
lods
insl
sub
loopne
dec
mov
mov
sbb
cmpsb
fcos
shl
ljmp
xor
sub
rolb
fstpl
xchg
xor
mov
sbbb
sub
adc
sbb
imul
pop
or
setne
subl
sbb
movb
arpl
or
call
or
pusha
outsb
add
pop
repnz
and
ds
aaa
pop
mov
movsl
mov
rorb
or
clc
fwait
lods
dec
mov
push
sti
jns
push
sub
cmpsb
adc
mov
mov
insb
push
or
jbe
idivb
insl
movsl
or
into
mov
imul
sub
xchg
jo
shrb
gs
je
pushf
inc
das
pop
add
mov
xor
mov
gs
mov
lcall
mov
gs
test
inc
imul
mov
sarl
jmp
fs
xchg
sbb
mov
adc
push
enter
je
daa
and
nop
cmp
les
xchg
jae
out
and
or
jle
and
sti
push
stos
pushf
inc
lcall
push
dec
faddl
push
stos
mov
push
mov
outsl
arpl
shl
dec
clc
fsubrs
out
dec
or
and
pushl
hlt
push
pop
or
std
imulb
xchg
out
or
in
lret
mov
xchg
enter
cli
xor
pushf
sbb
adc
adc
imull
push
and
dec
fcmovnbe
pop
repnz
dec
or
mov
cmpsb
xor
push
mov
fdivs
mov
cmpsb
or
and
pusha
ja
pusha
mov
mulb
rol
ljmp
mov
lods
aam
push
outsb
push
das
icebp
mov
pop
adc
adc
cmpsb
add
pushf
repz
push
fldt
push
testl
jb
test
in
sahf
sarl
adc
dec
in
ret
cmp
orl
sahf
mov
pop
enter
pop
lcall
pop
ret
xchg
xlat
mov
fnstsw
loop
push
movsb
push
in
ss
fwait
das
rclb
int3
jo
jbe
adc
jge
test
or
xchg
test
xchg
push
mov
mov
pop
push
ja
xorb
pushf
int3
pop
inc
fyl2x
cld
or
add
adc
pop
xchg
mov
scas
dec
sbb
sub
cmp
stos
jns
out
and
fwait
repz
mov
cmpsb
sbb
jge
leave
mov
cmp
and
sbb
xchg
test
push
cmpsl
pop
dec
and
inc
push
loop
pop
rdtsc
out
push
fbld
cmp
inc
cmp
adc
lahf
pop
fmull
xchg
dec
out
addb
add
push
add
mov
mov
push
sub
int
mov
enter
insb
mov
lock
sarl
mov
jns
outsb
lcall
adc
call
push
movsb
pop
imul
call
loopne
ds
xchg
sbb
adcb
pop
scas
push
enter
mov
adc
mov
xchg
ret
dec
outsl
pop
loop
popa
mov
jne
pop
cmp
sbb
out
sub
cmpb
and
jnp
xchg
pop
xchg
dec
into
pop
addr16
into
outsb
jno
push
idiv
loop
mov
xchg
sbb
jp
shll
std
pop
jle
roll
push
fisubs
stc
xchg
jmp
test
sub
push
jbe
je
scas
out
sbb
out
pop
sub
dec
mov
aas
add
lea
dec
fists
movsl
out
stc
outsl
pop
or
es
leave
sbb
pop
stc
es
and
add
xchg
adc
sahf
and
add
imul
dec
ds
sbb
jmp
popa
ret
ss
and
mov
or
pop
xchg
lcall
adc
das
inc
push
jnp
fsts
shrb
stos
lods
imul
daa
jbe
sub
push
pop
pop
mov
xchg
xlat
in
adc
mov
icebp
mov
xor
stc
pop
mov
mov
rolb
pop
cmpsl
orb
sbb
adc
in
pop
fs
sar
mov
sub
scas
or
scas
xchg
cs
ret
test
sti
mov
sub
fistpll
fmuls
mov
jge
push
push
jmp
or
dec
pop
pushf
arpl
xor
push
lahf
dec
ljmp
hlt
out
jmp
and
dec
call
aaa
jae
pusha
mov
ds
je
out
shl
rcrl
ljmp
push
push
adcl
jmp
jmp
or
hlt
loope
cmpsl
cmpl
scas
sbb
fldcw
jnp
cmpsb
aam
aad
in
sub
and
mov
push
out
ljmp
cli
push
xlat
aad
push
push
mov
leave
pusha
pop
inc
sbb
mov
sub
mov
mov
movl
call
fmull
popf
xchg
cmp
pop
sub
mov
nop
dec
lea
stc
mov
or
mov
mov
leave
push
jmp
add
sar
xchg
test
add
mov
dec
cmp
inc
scas
and
rorb
mov
into
inc
lods
sbb
fdivrs
jg
cmp
addr16
pusha
fisttpll
dec
subl
jbe
cs
test
jmp
sub
pop
push
not
pop
lds
imulb
cli
jge
inc
mov
fdivrl
int
jl
mov
arpl
gs
xchg
loope
cmp
mov
clc
cmp
xchg
stos
adc
and
sbb
xchg
imul
mov
rclb
into
stos
jmp
inc
and
into
pop
mov
jno
imul
push
aaa
dec
fcmove
mov
mov
ss
inc
fisubl
cmp
add
jbe
repnz
pop
and
xchg
mov
jbe
outsb
pushf
lea
rcl
mov
fwait
pop
adc
inc
cld
pop
es
outsl
push
push
sbb
add
add
pop
scas
sub
or
mov
mov
cmpsb
test
pop
mov
pop
call
inc
push
in
cmpsl
xor
push
movl
sub
out
repz
add
jno
sbb
jmp
push
hlt
and
adc
mov
adc
mov
aaa
ret
push
push
lret
cmp
xor
sub
or
or
jno
enter
outsl
loop
ret
les
test
xchg
cmp
mov
and
mov
push
push
iret
fs
cmpl
inc
inc
mov
fnstenv
mov
sahf
push
icebp
push
mov
push
insl
jno
sbb
stos
add
mov
lods
sbb
or
out
imul
lds
dec
test
push
cmc
xchg
cwtl
xor
push
jne
cmovb
mov
lods
mov
and
mulb
and
xchg
sub
cmpsb
je
cmp
and
nop
mov
jne
in
jmp
rorb
out
stc
and
mov
sbb
sub
insl
or
pusha
mov
xchg
popf
movsb
dec
pushf
stos
pusha
xchg
outsl
mov
mov
xlat
push
sti
jle
xor
xchg
cwtl
jbe
jb
jle
out
sbb
jae
jb
aam
orb
out
jo
test
mov
out
std
loop
int3
into
movsl
sbb
inc
popf
out
movswl
mov
jns
mov
add
jg
dec
and
jno
shlb
mov
xchg
outsb
cld
push
ffree
sub
inc
cwtl
cli
push
icebp
push
jo
lret
rorl
adc
rcll
pop
xchg
push
cmp
jg
push
mov
movntps
leave
jp
cmpl
mov
int
aaa
dec
sub
mov
arpl
mov
cmp
andb
cmp
mov
in
mov
sahf
dec
outsb
in
test
inc
leave
fisubs
cmp
stos
pop
repz
loopne
xchg
inc
xor
dec
loopne
push
in
gs
push
xchg
jns
stos
sbb
test
out
inc
pop
mov
shll
lods
jl
push
in
lods
sub
push
scas
mov
xor
in
dec
cmp
out
aam
fsts
xor
out
push
aad
subb
cltd
adc
jp
and
into
push
das
jge
and
daa
cmc
int3
push
inc
xorl
mov
push
push
mov
sbb
xlat
outsb
push
rcrb
int3
mov
test
jmp
dec
mov
mov
loope
in
dec
ljmp
loopne
push
sbb
dec
aam
jbe
add
stos
jl
scas
call
cmp
fdivs
ss
sub
shll
stos
aaa
mov
xchg
push
sbb
mov
cmc
stos
outsb
mov
or
xor
sti
jle
push
scas
adc
add
dec
adc
jge
xor
aaa
out
push
or
test
xor
adc
aas
ss
xor
test
mov
test
es
sbb
aaa
or
ja
pop
and
out
lahf
lcall
xor
cmp
sub
add
aad
sbb
cmpsb
shrl
mov
sbb
das
cmpsl
adc
aad
mov
imul
jl
mov
imul
mov
sbb
ret
test
hlt
repz
mov
inc
mov
das
and
rcll
or
jb
int3
sahf
jle
dec
pop
sbb
outsl
xchg
outsb
jp
mov
dec
dec
xchg
inc
xchg
mov
vpsrlw
in
add
xchg
ljmp
insl
inc
xchg
cmc
sub
xchg
std
push
or
mov
scas
daa
xor
in
hlt
add
sbb
and
popf
xor
inc
lahf
imul
xchg
add
fdivrl
xchg
sub
add
sub
jno
push
jp
xor
addr16
add
cld
and
pusha
sub
scas
leave
dec
sbb
outsb
lret
sbb
dec
out
fwait
push
outsl
mov
scas
sub
pushf
and
adc
cmpb
movsb
sbb
pop
mov
enter
or
push
push
add
push
push
outsl
push
mov
mov
loop
fucomp
sub
mov
jb
mov
lds
jge
jns
push
sbb
scas
mov
rorb
mov
lret
aaa
call
loope
das
xor
mov
mov
in
xchg
add
push
push
dec
out
jno
xor
imul
ss
dec
pop
nop
add
add
mov
mov
addl
dec
inc
push
ds
pop
sub
adc
insl
push
jae
inc
and
lahf
dec
mov
adc
cld
dec
push
xchg
shrb
and
int3
sub
in
sbb
mov
xor
mov
in
pop
lods
into
shlb
mov
mov
and
pop
dec
arpl
cmp
loop
pop
dec
sahf
sbb
test
lods
and
inc
push
test
data16
ret
xlat
sbb
insl
into
mov
pop
ds
xchg
adc
sub
addr16
ret
dec
in
mov
xor
repnz
cmp
das
jb
cmc
or
cs
popf
gs
jb
and
test
pop
loopne
rcrl
inc
pop
sub
ss
leave
jae
inc
ja
jge
stc
rcll
loope
mov
sub
out
sti
js
aad
jge
mov
nop
lods
cmpsb
stc
repnz
mov
inc
add
repz
push
bound
adc
aas
sar
pop
popa
insb
jmp
jno
in
pop
mov
cs
or
sub
je
sbb
lds
and
fiadds
push
lahf
repz
pop
cmpsb
repz
movsb
xchg
sbb
fnstenv
adc
fwait
loop
loope
push
fisttpll
lea
xor
xor
mov
push
test
mov
inc
std
mov
push
stos
data16
xor
xchg
shll
cmp
jne
and
cmp
popa
ss
jbe
add
lods
pop
testb
pop
ljmp
inc
mov
mov
xor
bound
sbb
test
and
adc
shlb
imulb
push
add
mov
jnp
shrl
lock
sub
test
mov
sahf
fwait
addr16
fcomps
mov
mov
sahf
push
add
call
insl
pop
sub
cli
jge
and
xchg
xor
mov
test
inc
dec
push
cltd
popf
xchg
adc
lret
out
stos
ss
popf
jecxz
pop
adc
push
fcompl
scas
lea
jge
xchg
jbe
mov
shrl
mov
outsb
push
fstps
cli
push
cmpsb
inc
mov
fstp
fdivl
dec
pop
pop
cltd
push
push
cmp
movb
jno
pop
adc
in
fdivrl
lock
iret
xor
xchg
testl
push
sbb
and
pop
mov
adc
sbb
loope
aas
sub
mov
fldcw
add
mov
movsb
jbe
hlt
flds
mov
addr16
mov
dec
and
leave
cmpsb
cmp
test
xchg
lds
fcompl
pop
scas
dec
pop
outsb
add
cmpsb
add
sbb
cmpsl
shl
test
fucomp
scas
mov
xor
cmpsb
movsb
pop
and
xchg
pop
fcmovnu
mov
movl
orl
ret
lret
jb
test
loop
lret
dec
cmp
add
jge
sti
hlt
mov
shll
or
inc
cmpsl
or
idivl
arpl
jle
mov
inc
dec
cmp
imul
nop
in
cmp
add
andl
out
jle
inc
out
test
sbb
fucomip
mov
inc
xchg
inc
or
mov
dec
lods
mov
les
test
jae
test
jmp
pop
js
jg
sarl
hlt
aaa
sub
icebp
add
xor
xchg
lods
mov
sahf
jmp
add
push
pop
xchg
int3
or
je
ret
in
gs
inc
aam
andb
xor
loope
gs
or
pop
xchg
pop
shll
cmp
mov
adc
jge
loopne
popf
xor
cli
add
es
jns
test
int
andl
dec
mov
adc
cmp
cmp
fs
js
inc
fnstsw
cmpsb
addr16
out
inc
pop
les
ja
and
or
xlat
jae
rorl
test
add
test
cmpsb
cmp
push
lret
scas
cmc
mov
std
adc
ja
mov
mov
rcrl
js
je
je
movsl
xchg
stc
repz
outsb
out
mov
orb
popf
jl
and
jl
iret
jl
lret
fistps
outsl
push
and
cld
rorl
iret
ret
jmp
enter
ret
push
in
and
shrb
adc
lock
pop
mov
pop
jge
push
jp
fwait
sbb
mov
mov
mov
sub
mov
cltd
adc
sbb
mov
and
add
mov
pop
movsb
fisubl
mov
mov
int3
xor
xorb
pop
add
push
movsl
jae
ds
aaa
leave
sbb
mov
jnp
test
into
jne
test
jecxz
sbb
mov
sub
lcall
enter
out
mov
xor
jbe
xor
adc
sub
mov
and
adc
pop
insl
je
inc
lock
sahf
push
dec
jmp
mov
inc
inc
addr16
mov
pop
jmp
test
or
movsb
jmp
fucomi
push
fisubl
repnz
outsl
imul
sub
test
push
or
sub
testl
pushf
mov
sahf
fildll
adc
out
leave
stos
inc
je
or
dec
dec
cmp
jmp
adc
and
mov
jmp
out
adc
sbb
push
jo
je
stc
adcl
aas
push
arpl
ja
enter
pop
testl
outsl
cmp
mov
cmp
mov
and
sbb
jg
pop
pop
leave
inc
std
sub
test
orb
test
je
cltd
jbe
jge
push
or
xchg
pushf
xor
std
fwait
pop
cmpsb
insb
push
fiaddl
aam
popf
push
fimuls
mov
adc
mov
lea
xor
sbb
in
cmp
aam
shlb
push
and
pop
pop
cmp
mov
vrcpss
lock
pop
pop
aas
shrb
rorb
std
movl
and
xchg
sub
add
adc
push
insb
inc
nop
subl
xlat
xor
lret
testl
and
les
addr16
mov
add
mov
sub
aaa
pop
adc
xor
sbb
mov
out
adc
cmp
cmp
mov
pcmpgtw
cmp
andb
jl
cmpl
imul
inc
enter
ds
mov
xchg
testl
pop
sbbb
in
dec
loopne
or
inc
mov
scas
mov
cld
push
pop
add
sbb
mov
mov
pop
sarl
mov
cs
mul
dec
repz
cmpsb
add
push
adc
push
mov
pusha
jge
sbb
rclb
mov
mov
nop
lods
iret
cmc
inc
filds
xchg
leave
out
cltd
cmp
data16
sub
cmp
in
in
data16
xchg
loop
ret
aaa
stos
negl
int3
adc
sub
scas
test
loopne
pop
faddl
mov
int
sti
lds
and
xor
add
mov
and
xor
andl
popf
push
sub
sahf
es
xor
dec
sti
add
daa
stc
and
jo
add
cmp
jp
out
mov
push
jbe
insl
adc
in
xor
sub
incb
xor
xchg
ficomps
fidivrs
ret
xor
fimuls
pop
add
or
mov
pop
inc
in
sub
fwait
xor
out
push
adc
or
push
adc
loopne
dec
das
mov
lahf
imul
jp
cmc
xor
pop
sub
jnp
push
sarb
jecxz
xchg
mov
xor
int
ret
jb
lock
add
mov
mov
xorl
pop
loop
stc
pop
cli
jne
xlat
idivl
fsubs
jno
shrb
ja
movsb
leave
addl
std
mov
int
repz
cmp
outsb
cmc
add
icebp
test
sbb
push
jp
and
int3
int3
out
inc
cmp
xor
xor
leave
rol
ds
adc
sub
sub
shrb
xchg
ret
add
scas
adcl
in
sbb
xor
pop
icebp
adc
adc
push
imul
icebp
xor
mov
or
push
adc
inc
xor
cmpsb
dec
mov
push
adc
shlb
xchg
add
popf
push
mov
cld
int3
in
outsl
scas
add
into
jno
push
icebp
cmpsb
leave
aas
ljmp
xchg
xchg
movsb
in
cmp
iret
jae
sub
lods
mov
pop
mov
repnz
xchg
xchg
push
add
addr16
pop
orb
int
lock
mov
mov
inc
lock
dec
subb
scas
pop
sub
cli
xchg
adc
enter
sbb
out
and
push
aaa
mov
push
rol
xchg
add
mov
xor
sbb
insl
and
inc
test
mov
jbe
pop
int3
xchg
lods
xchg
ja
std
xlat
outsb
insb
scas
push
rcr
push
push
push
dec
inc
icebp
out
sbb
xor
lahf
or
cmp
pop
pop
dec
adc
cmp
aaa
lret
push
jge
xchg
iret
mov
adc
jmp
loop
out
call
push
or
stos
jnp
pop
and
iret
and
add
jecxz,pn
rclb
or
in
mov
inc
add
or
in
mov
mov
and
xor
pop
loop
aam
push
push
push
shrl
repz
ljmp
mov
arpl
test
cmpsl
sub
das
sbb
lret
mov
mov
xchg
std
xchg
cmp
cs
repnz
and
or
hlt
ja
cmp
push
and
dec
sbb
sub
inc
mov
adc
out
adc
icebp
inc
pushf
xchg
cmpl
xchg
jbe
sub
push
jo
outsb
lea
or
pop
jg
sbb
gs
jmp
cmp
fstl
mov
cmpb
mov
enter
push
push
mov
sub
lcall
test
test
out
ret
cmp
fiadds
xor
imul
sbbl
adc
mov
cli
jp
hlt
icebp
and
add
and
mov
cmp
mov
test
frstor
les
xchg
dec
ljmp
icebp
addr16
insl
sbb
pop
add
test
jp
rcrl
push
test
mov
jle
add
rcrb
adcl
sub
notb
sub
xchg
sub
rcl
cmc
inc
lret
jp
int
mov
daa
sub
out
aas
sub
add
testl
sbb
push
mov
clc
scas
adc
test
jl
inc
jp
jmp
cmp
jb
mov
jo
rol
test
fsubs
push
shlb
mov
stos
imul
ja
dec
cmp
loope
jmp
jmp
jg
nop
xchg
in
mov
popa
nop
push
jp
cwtl
jnp
enter
int3
push
mov
cmpsb
pop
jge
cmp
dec
gs
push
bound
dec
lahf
je
in
lea
push
sbb
in
gs
mov
lea
sbb
int
daa
test
aad
fnstenv
add
jecxz
lahf
addr16
mov
lds
adc
adc
dec
icebp
pop
lret
jp
push
or
mov
fldenv
sbb
sti
sub
push
es
mov
lds
pop
mov
lods
mov
lock
jecxz
cmp
das
mov
cld
repnz
sub
and
lock
adc
in
std
add
arpl
or
and
and
lahf
lcall
sbb
xchg
insl
pusha
xchg
test
out
clc
mov
addr16
out
inc
std
rclb
inc
jp
or
add
loopne
xchg
leave
jecxz
cmp
pusha
adc
aad
xchg
in
ss
mov
xor
sahf
loope
sub
imul
xchg
xchg
and
je
push
lcall
or
dec
add
daa
cmp
and
fst
subb
jmp
or
mov
stc
sbb
and
ljmp
sub
adc
dec
mov
jno
pop
push
fmull
test
outsl
out
stos
dec
xor
movsl
sbbb
scas
or
pop
rclb
cmovl
fcom
push
sub
cmp
movsl
outsb
xor
lea
jmp
xor
out
cmp
test
std
rol
mov
aas
repz
test
sbb
jno
sahf
lret
mov
lock
loope
sbb
fwait
sub
scas
nop
add
sub
loope
pop
pop
out
xlat
sbb
gs
mov
jl
jecxz
mov
subb
addl
xchg
stos
cmp
inc
data16
sahf
xchg
adc
out
adc
adc
xor
callw
xlat
mov
and
addr16
jno
cmp
addr16
cli
mov
fwait
xchg
xchg
add
popf
cli
testl
or
mov
mov
rcr
stos
and
pop
cmc
jle
mov
and
aaa
and
outsl
cmp
lods
dec
cld
sub
loop
xchg
cmc
enter
mov
imul
sbb
out
and
in
sub
jo
repz
adc
or
inc
mov
or
pop
out
jae,pt
add
sub
mov
aad
dec
lea
in
roll
mov
jne
cmpl
mov
xchg
sbb
inc
shl
int3
in
bts
dec
stos
add
int
dec
xchg
test
mov
jbe
mov
and
test
pop
loope
stos
or
xor
jb
sub
mov
xchg
jae
fneni(8087
add
imul
mov
or
jnp
lea
jns
mov
stc
jnp
push
mov
xchg
mov
cmp
cs
jne
sti
mov
or
je
int3
outsb
jns
mov
xchg
inc
fsubrs
imul
push
xor
jbe
mov
mov
pop
dec
mov
in
sbb
jnp
mov
or
scas
dec
cs
sbb
lret
mov
adcl
pop
jne
mov
mov
into
jne
lahf
dec
mov
or
int3
adc
pop
cmpsb
xchg
push
mov
mov
push
inc
jmp
dec
mov
dec
xchg
out
ret
and
inc
jmp
or
and
pop
xor
ret
das
cmp
mov
addl
adc
iret
cmp
les
mov
push
sti
push
testb
shld
loope
ds
js
push
ret
lods
cli
je
xlat
push
lret
idiv
mov
iret
aad
xchg
loop
and
cld
fimuls
push
xor
flds
aaa
pushf
lcall
jb
clc
pop
pop
dec
ret
aad
pusha
inc
outsl
repz
jns
xchg
ss
pop
push
and
xor
or
push
movsb
int
outsl
dec
stc
sbb
aad
jns
test
les
sarl
movl
sarl
js
xchg
add
addr16
or
jns
jg
stos
xlat
sub
notb
mov
imul
leave
add
aam
cmp
jne
push
jbe
sub
push
fidivrl
mov
fsubrl
hlt
stos
pop
cmp
fisubl
xor
jge
push
and
pop
outsl
xchg
int3
and
add
xchg
fwait
mov
mov
push
fbstp
movsb
js
ret
lcall
sub
pop
mov
lcall
and
mov
cltd
sbb
ds
fidivl
div
xchg
mov
pop
out
test
sbb
mov
and
cmp
jo
fadds
out
mov
and
nop
movsb
push
inc
cld
or
sub
pop
out
jns
jle
inc
inc
lock
js
hlt
xchg
mov
call
xchg
add
rorb
std
mov
sub
int3
insl
sbb
dec
cmc
sbbl
addl
aas
iret
cmp
inc
call
mov
movsl
jp
xor
mov
fidivrs
rcll
subb
lea
adc
les
mov
push
jmp
push
sbb
cmp
lret
clc
test
xchg
add
das
in
iret
push
add
into
icebp
lret
sub
or
push
lcall
test
jmp
ds
dec
inc
jb
pop
test
jg
stos
xorl
cli
xor
cmp
or
ficomps
xchg
sbb
fildll
aas
ffreep
pop
xor
bound
repz
xor
dec
jbe
cmp
xchg
push
jle
and
sub
xchg
fldcw
pop
xor
loop
shrb
cs
enter
jl
stos
mov
inc
cli
cli
cmp
adc
xchg
ja
cmp
pop
in
lods
jne
shl
push
imul
pop
arpl
cli
mov
mov
jae
push
cmp
or
into
xchg
xorb
jne
insl
pop
insb
adcb
or
or
dec
je
or
xlat
sub
fnstenv
xor
dec
fnstsw
xor
enter
sub
dec
cmp
sbb
mov
inc
cmp
push
jns
cmp
mov
mov
inc
lds
mov
sarl
or
xor
sahf
ret
inc
push
mov
mov
lock
fsubl
jnp
xlat
adc
push
mov
mov
dec
outsb
hlt
cld
or
sub
pop
inc
popf
push
cmp
pop
call
and
loopne
or
add
andb
sbb
scas
push
add
fists
add
jle
dec
add
in
pop
fisttpll
jne
and
add
or
popa
mov
inc
addr16
jne
mov
into
adc
xor
cli
inc
mov
xchg
daa
xor
sub
xchg
nop
cmpsl
loopne
dec
rcll
fmul
lret
and
mov
call
mov
dec
fdivrp
mov
dec
pop
aad
dec
dec
jo
push
adc
xor
negl
sbb
jle
pop
add
jl
fiaddl
pop
and
movsl
in
shlb
enter
repnz
pop
push
push
cmpsl
loopne
dec
xchg
jno
cwtl
sbbl
adc
sar
sub
addr16
add
inc
mov
imul
or
and
jo
mov
push
xor
sbb
pop
shll
or
sbb
lcall
sub
or
xchg
jb
dec
jae
cltd
jp
xchg
jmp
and
movsb
sub
lahf
dec
loop
dec
inc
xchg
jo
lds
loope
xor
lea
fildl
mov
cmpl
dec
lods
std
xchg
dec
xor
and
jb
rcl
inc
stos
stc
and
jns
adc
fstpt
push
jb
sbb
xchg
loope
jo
lahf
shll
or
in
fidivrs
xchg
lds
add
repnz
cmp
aas
out
gs
cwtl
loope
fldl
leave
ret
push
pop
fsubs
cltd
adc
insl
dec
js
and
mov
mov
ficoms
dec
jno
fisubs
mov
dec
and
pop
lods
jecxz
cltd
data16
adc
cmpsl
nop
clc
inc
adc
push
dec
dec
and
cmp
push
ja
xor
adc
bound
aad
mov
mov
xlat
xor
stos
push
nop
outsl
mov
pop
iret
sub
add
loope
xor
shl
sbbl
out
int3
push
repz
xchg
outsl
imul
lahf
leave
xorl
lea
popf
sub
xchg
ret
mov
out
xchg
enter
push
cmpsl
cmp
nop
std
lock
andl
mov
in
mov
inc
xchg
inc
jge
ret
cwtl
jb
in
sub
sub
leave
cltd
sbb
movsb
mov
mov
cmp
outsb
fistl
ljmp
enter
sub
aad
bnd
mov
jne
jmp
inc
mov
cmp
lret
pop
testl
das
cmp
test
int3
push
pop
pop
push
fadd
mov
mov
mov
mov
cmc
jno
sarb
fldcw
pushf
fwait
aas
rorl
lds
fs
insb
xor
or
jecxz
fwait
sub
add
push
xchg
xchg
cmpsb
pop
in
popa
cmp
mov
fmuls
push
adc
sar
push
lret
icebp
mov
sbb
or
out
test
sub
sub
sti
iret
pop
je
adc
pop
dec
sahf
imul
cmp
sub
dec
cwtl
mov
ret
and
rcrl
test
pusha
fs
add
mov
movsb
lret
mov
out
jne
mov
xor
add
adc
mov
mov
mov
aas
cwtl
insb
lahf
push
xor
cltd
xor
out
mov
sub
ss
in
mov
mov
fisttpl
cmpsl
in
out
xchg
lret
sbb
cltd
es
add
sub
stos
frstor
and
jns
dec
dec
pop
or
push
xor
ficomps
adc
pop
sbb
jle
add
mov
cwtl
sbb
cmpsb
sbb
gs
sub
jle
xor
data16
ret
sub
aas
cli
inc
std
mov
cmp
test
xor
mov
or
push
cli
xlat
dec
and
mov
mov
add
inc
mov
adc
sub
add
sbb
jae
stos
lret
mov
mov
repnz
dec
inc
lds
fstpt
and
movsl
sbb
inc
push
cs
jg,pt
sar
insl
in
push
pop
push
aaa
adc
pop
pop
add
sarl
mov
sub
add
jmp
aad
inc
leave
jno
in
popf
or
inc
fiaddl
xchg
adc
rcr
cmp
bound
fmull
lcall
push
into
xchg
xor
mov
insb
push
mov
loopne
sub
out
mov
mov
pushl
fsubrs
sub
sti
and
lea
in
clc
and
push
xchg
mov
pusha
push
inc
hlt
aad
and
cmpsb
scas
xor
mov
mov
shrb
dec
cmpsl
dec
mov
push
push
add
mov
andb
jl
cmpsl
jo
js
add
lds
movsl
mov
push
cmp
shll
mov
adc
test
adc
imul
cld
inc
adcb
jno
or
icebp
mov
shrl
sub
xor
in
popa
scas
sbb
or
xor
pop
xor
jae
lds
or
push
imul
in
push
xor
repnz
addr16
dec
pop
xchg
push
jge
inc
xchg
lods
xor
fdivs
dec
nop
rorb
pop
mov
movsb
rcrl
and
mov
mov
leave
loopne
mov
lcall
xchg
cli
inc
imul
push
pop
adc
or
in
lcall
repnz
inc
mov
cmp
jmp
mov
fistpll
adc
push
pop
loop
push
outsb
xor
xchg
adc
lods
scas
adc
aad
dec
xlat
cs
cmp
add
jnp
in
out
movsb
mov
lods
mov
jb
jno
dec
cmp
cmp
scas
lds
stos
mov
adc
out
mov
sbb
leave
mov
fcomps
sub
cmpsb
jbe
push
pop
dec
fidivrl
jmp
cmp
inc
cmp
aad
es
lahf
iret
adc
rolb
jp
iret
pop
cs
xchg
fldt
pop
push
sub
fmuls
fcomip
pop
jbe
mov
dec
push
sbb
add
scas
inc
fisubrs
push
dec
xchg
mov
shlb
pop
mov
jg
mov
loop
cmpsb
xchg
inc
cmpsb
pop
mov
sub
fdivl
add
les
mov
pop
add
sbb
xor
dec
hlt
pop
pop
sarb
imul
js
push
cmp
xor
mov
cwtl
sbb
fldt
dec
sub
xorl
sbb
push
gs
mov
jno
testb
imul
test
dec
out
pop
jno
mov
popa
daa
sub
scas
add
test
leave
push
movsl
cmp
repz
sbb
and
pushf
dec
jmp
push
push
inc
out
test
movntps
push
dec
cwtl
pop
fadd
arpl
pop
les
xor
test
mov
mov
push
daa
push
lret
imul
mov
jb
cld
push
or
xchg
cs
push
adc
adc
xchg
test
fstps
mov
arpl
stos
lea
or
in
sbb
jnp
xor
add
jne
jmp
out
subl
mov
push
popf
jmp
pop
xor
in
jmp
das
mov
inc
in
movsl
dec
inc
pop
movsb
daa
and
mov
popa
jbe
mov
xor
mov
pusha
mov
leave
add
pop
loope
gs
test
into
js
dec
bound
push
shr
imul
repz
mov
iret
jo
shlb
bound
push
jo
jp
bound
or
repnz
xor
movsw
xorl
inc
sbb
cmpsb
cwtl
jbe
sar
inc
inc
mov
inc
sub
aas
movsl
and
add
mov
mov
push
pushf
mov
int
in
add
ret
insl
xor
or
inc
sar
inc
scas
clc
in
rcr
je
add
dec
test
rep
dec
addb
jbe
nop
jle
xor
push
inc
pusha
negb
in
rcrb
add
push
sbb
addr16
stos
adc
mov
sbb
cli
arpl
sub
test
mov
insb
sbb
pop
adc
test
loop
jmp
adc
popf
pop
or
int
sbb
lods
add
sub
push
pop
xorl
xchg
shrb
mov
lock
das
dec
stc
sti
sbbb
push
cltd
in
mov
mov
lahf
mov
and
mov
cmovs
mov
add
fsts
push
cmp
mov
arpl
addr16
dec
in
mov
pop
mov
mov
imul
pusha
and
xchg
out
cmp
cmpsl
cmpps
xchg
pop
jg
ret
mov
adc
jo
cwtl
inc
add
cmp
enter
fidivrs
add
sti
in
ds
aad
or
add
cwtl
stos
xor
or
or
mov
ds
cmp
call
insl
jmp
inc
popa
test
sbb
push
hlt
push
lahf
push
sahf
sub
mov
ds
push
arpl
addr16
incl
pop
lcall
subl
lcall
dec
xchg
lea
mov
in
lds
mov
mov
cmp
addr16
inc
ror
xlat
sbbl
lds
fs
sbb
out
rolb
cmpsb
lret
cld
xor
test
mov
inc
sbb
jae
fsubrp
loop
cmp
aaa
fdivl
test
lea
fdivrs
xor
mov
bound
mov
sub
mov
pushf
jl
repz
sub
outsl
enter
pop
xorb
jge
or
gs
test
popl
and
popf
or
push
xchg
fildl
lea
xchg
rcrl
inc
outsl
int
gs
lcall
jns
test
jnp
lods
mov
mov
rorb
jp
and
inc
push
mov
bound
test
in
loop
mov
gs
pusha
shll
push
dec
cs
pop
mov
pop
xor
scas
cli
mov
sbb
cld
fbstp
out
int
or
sub
xor
sub
xor
mov
push
adc
ret
icebp
add
mov
call
in
and
pop
sub
and
mov
push
outsb
and
std
pusha
sub
lods
adc
sbb
sbb
lods
repnz
push
xor
cmp
or
inc
jmp
xchg
sbb
scas
pop
mov
add
cmp
jno
in
xchg
xchg
jp
push
inc
jae
scas
cmp
push
jne
jp
sbb
lgdtl
jle
mov
popa
dec
aad
mov
inc
inc
jg
add
cwtl
arpl
push
jno
adc
std
cli
mov
xchg
dec
mov
stos
mov
inc
mov
daa
mov
shlb
adc
sahf
mov
clc
ret
push
pop
arpl
loope
das
test
test
sti
add
pop
pop
test
xchg
mov
add
shl
xchg
mov
cltd
dec
xchg
xor
mov
sbb
hlt
in
add
sub
add
mov
mov
outsl
mov
and
test
push
xchg
lea
pop
mov
cmp
int3
jne
xchg
jae
hlt
test
push
outsb
jnp
xor
jo
in
inc
cmc
rol
jne
pushf
push
or
lret
rcr
xchg
cmpsb
jmp
push
cmpsl
fwait
rolb
popf
testl
inc
pop
push
lahf
in
inc
aaa
mov
cli
jp
cmpsb
mov
pop
or
in
movl
pop
xchg
mov
and
cld
lret
jno
std
fsubrp
fisubl
or
pop
sbb
dec
mov
dec
inc
rorl
push
push
ja
daa
mov
pusha
pushf
fdivl
add
popa
imul
rcrl
ss
ds
adc
cmp
daa
mov
sub
or
fidivl
xor
enter
in
push
cmp
lret
test
lods
mov
sub
lods
add
inc
ret
fimull
xchg
xchg
add
sbb
ds
jae
es
pop
lock
and
cmc
mov
cld
dec
call
and
lret
cmpsb
mov
fisubrl
push
test
imul
xorl
adc
sti
outsb
sub
popw
jmp
sbb
pop
dec
movzwl
ret
scas
add
xor
dec
loopne
jne
movsb
cmc
fbstp
int3
jecxz
aam
add
mov
aas
shr
cmc
int3
aad
jb
data16
lods
jl
loope
jle
jl
mov
sbb
or
cmpsb
lods
sub
and
hlt
cli
dec
mov
filds
rclb
mov
dec
scas
mov
lcall
mov
fsubrp
jp
stos
sub
pop
mov
lods
pop
cmc
and
mov
outsb
cld
push
add
push
mov
aaa
dec
add
clc
call
mov
xchg
nop
imul
aaa
fistl
in
jne
sbb
cmp
icebp
adc
cmp
sbb
in
das
ret
mov
popf
jecxz
sbb
in
call
int3
movsb
mov
or
dec
nop
add
fmul
call
adc
in
ret
push
out
cmp
cmc
push
mov
adc
mov
inc
push
filds
aaa
mov
mov
loop
add
push
out
mov
movsb
aas
cmp
pop
ffreep
stos
in
jp
ds
sub
rcr
stos
dec
cli
jp
push
inc
fadd
fidivl
mov
repz
mov
pop
lock
jecxz
mov
and
inc
jle
lahf
mov
scas
cld
push
in
jnp
pushf
sub
cmc
xor
fisubrl
pop
sbb
mov
pop
add
ja
inc
test
mov
inc
dec
test
or
hlt
add
sbb
sbb
or
andb
jge
jmp
pop
mov
xchg
sub
stos
inc
inc
lahf
mov
xchg
inc
pop
out
pop
mov
fistpl
mov
out
push
sub
lcall
icebp
shl
insl
inc
sbb
lods
ret
aad
inc
lret
inc
movsl
and
xor
test
clc
test
aam
cld
sub
cwtl
xor
shll
aaa
inc
cmp
incb
rclb
test
dec
mov
out
sbb
sub
fcomp
pop
add
jne
and
inc
mov
ret
jmp
scas
sbb
fnstsw
and
pop
iret
xchg
cmpb
std
int
dec
lea
push
insl
jg
push
or
imul
mov
xchg
xor
push
push
ds
xchg
sbb
xchg
adc
add
iret
and
xchg
clc
push
mov
leave
jb
scas
iret
push
shll
xorl
out
scas
rcrb
cmp
mov
mov
enter
xchg
xchg
mov
pop
mov
push
lock
cmpl
fcmovbe
out
lcall
mov
hlt
lods
sub
add
mov
aas
cmp
fsub
mov
aam
inc
into
orb
aaa
in
jne
daa
mov
clc
and
sub
sub
push
mov
or
mov
inc
dec
cltd
push
mov
ss
cs
cmc
lods
clc
jmp
jge
pusha
sub
lods
xchg
ja
or
stc
les
add
cltd
jl
mov
out
jbe
enter
fildl
imul
stc
mov
add
jl
pop
in
mov
std
xor
and
push
in
andb
dec
aas
push
pop
mov
lret
xchg
sbb
push
sbb
sbb
test
stos
cld
aam
mov
mov
je
and
jae,pn
sub
lods
sub
cltd
lret
fbld
mov
jae
pop
mov
insb
push
sbb
test
mov
hlt
jo
xlat
xlat
lret
add
cmp
out
aad
jbe
incb
or
mov
hlt
das
adc
stc
loop
adcl
sarb
inc
pop
bound
ret
stos
cld
xchg
mov
xor
pop
pop
stc
inc
jns
ret
dec
mov
mov
int3
mov
pop
jg
mov
addl
arpl
jbe
add
push
cmp
dec
and
test
push
xchg
test
sbb
scas
add
rcl
fmuls
lods
icebp
jne
mov
inc
pcmpeqw
data16
push
add
xchg
or
scas
lret
rorl
daa
add
add
ret
xor
sbb
rclb
hlt
push
mov
and
pop
jg
scas
popa
or
cltd
mov
hlt
add
addr16
jns
shll
inc
cmpsl
leave
mov
cmp
lcall
sbb
gs
xor
mov
test
cmpsb
cs
repz
add
lods
fcoms
scas
sub
aaa
xchg
adc
repz
inc
xchg
fimull
aad
xor
loope
jns
andl
icebp
rcll
pop
jnp
xor
insb
cmp
inc
addl
cmp
mov
jecxz
out
dec
sub
push
inc
int3
pop
mov
mov
scas
stos
xchg
sbb
shrb
xor
sbb
and
aad
adc
cmp
shll
and
jo
cmp
daa
jge
mov
jo
cli
pop
push
push
push
loope
xchg
lods
or
ficomps
test
xor
pop
out
add
lcall
sbbl
in
dec
iret
mov
stos
cmpsb
or
ds
fsts
mov
pop
test
pop
clc
pushf
or
ja
dec
ds
pop
movsb
loope
mov
adc
cmpsl
shrl
mov
test
push
jl
gs
test
xchg
int
mov
lds
push
mov
lret
dec
mov
aam
scas
fndisi(8087
inc
and
jle
mov
mov
jp
roll
inc
jge
mov
cmp
test
sbb
dec
daa
xor
xor
out
pop
xchg
jle
mov
aaa
cld
es
jle
pop
sbb
mov
jmp
adc
push
stos
and
or
scas
cmp
jecxz
leave
test
mov
insl
fsts
sbb
inc
jnp
dec
add
leave
int
add
xchg
int
pop
sbb
pop
fdivp
push
push
dec
mulb
call
cmpsb
adc
push
in
cmp
pop
arpl
xor
add
sbb
aas
xor
xor
les
pop
ret
stos
jno
lock
loop
loopne
into
push
sahf
dec
inc
inc
popf
orl
fimuls
je
fwait
xor
cmpsb
mov
lret
fs
es
pop
out
sbb
je
jge
sbb
sbb
fs
push
sbb
dec
aad
mov
popf
dec
pop
aad
cmp
push
xchg
or
mov
mov
std
ljmp
pop
cli
xor
pop
loope
jl
dec
push
or
mov
cmpsl
inc
push
stos
inc
mov
mov
lahf
jnp
push
jmp
cmp
inc
xchg
push
decl
add
xlat
dec
or
in
pop
sbb
insb
and
ret
out
test
or
or
mov
subb
fisttpll
lret
test
sub
xor
and
push
popf
cmp
lcall
push
mov
lret
loop
pop
pop
push
imul
inc
sbb
pop
vxorps
mov
mov
idiv
aad
lret
imul
je
sbb
cmc
fs
mov
xchg
outsb
adcl
lret
out
aad
and
fwait
call
sbb
cmp
test
mov
lock
jmp
lret
push
jg
pop
lods
ror
ret
or
inc
fmul
push
ficompl
repz
movsl
bound
loopne
aaa
movsl
in
pop
pop
mov
sub
and
inc
push
fs
add
scas
inc
pop
stos
cld
sbb
int3
cmp
cmpsl
xchg
push
fidivs
test
adc
bound
mov
out
lret
pop
mov
adc
and
leave
and
or
imul
shr
in
lret
data16
arpl
mov
xchg
mov
inc
in
loopne
pop
dec
mov
fsts
fisttps
inc
or
mov
jp
jmp
mov
js
sub
aaa
pop
out
clc
les
outsl
addr16
push
ror
pop
jnp
jp
jg
fwait
jno
push
das
enter
arpl
movsl
adc
add
mov
xor
jmp
dec
xor
sti
movsb
addb
dec
js
add
je
pop
mov
mov
pop
push
ljmp
inc
mov
xor
scas
stos
movsb
mov
loope
mov
push
cmc
inc
addr16
daa
outsl
push
xchg
fidivrs
mov
repz
push
jbe
int
shl
inc
mov
fldt
shlb
stos
mov
inc
std
mov
jp
mov
lods
dec
inc
push
add
inc
fstl
inc
xchg
and
loopne
sbbl
sbb
mov
add
in
lock
or
cwtl
or
mov
dec
iret
sbb
outsl
adc
push
adc
lods
mov
sbb
push
imul
push
jnp
jo
xor
jge
repnz
jnp
and
dec
sbb
push
dec
sti
jmp
imul
mov
sti
or
mov
inc
insl
jo
and
xchg
xchg
xor
sub
jnp
pop
stos
inc
dec
jb
jg
pop
xchg
ss
into
cld
inc
mov
push
bound
fucom
push
sbb
lret
imul
mov
push
or
cmp
pop
sub
lds
sbb
js
dec
movb
cmpb
inc
or
pushf
out
out
jp
pop
test
push
inc
mov
jae
sbb
rcrl
mov
test
mov
xor
and
insl
shrb
dec
sub
push
push
push
xor
in
cmpb
pop
repnz
push
movsl
mov
pop
pop
sbb
cmp
xchg
pushf
adcl
push
fcomp
inc
add
push
adc
je
sub
xchg
jge
or
lcall
mov
cltd
dec
loopne
pop
xchg
pop
mov
jne
inc
js
fwait
ret
adc
and
dec
mov
lcall
test
mov
sbb
push
inc
ret
mov
mov
or
pop
sbb
cmp
clc
fwait
in
loope
or
rcrl
jb
mov
lds
add
inc
out
mov
sbb
jns
pusha
fdivr
dec
cld
std
pop
out
es
mov
inc
mov
test
inc
lods
out
or
lock
xor
mov
mov
stc
ljmp
ficoml
ret
lds
hlt
cld
test
adc
dec
pop
int
mov
loope
sbb
pop
das
mov
test
fdivrs
jno
jmp
mov
mov
lock
push
xchg
subl
sub
xchg
scas
cmp
and
in
mov
pop
mov
sub
je
or
fsts
or
inc
mov
jge
ret
rcrl
lock
xor
aas
pop
mov
sub
adc
test
clc
sbb
jg
adc
inc
jns
adc
add
jmp
cs
cmc
inc
lcall
dec
inc
adc
and
aas
inc
xchg
adc
scas
sbbl
leave
jge
adc
sbb
loopne
cmp
xchg
fnstsw
push
cmpsb
adc
das
je
push
xor
cmpsb
mov
add
hlt
movl
and
mov
cmc
inc
test
mov
sar
lahf
sbb
addl
xchg
and
test
and
cld
out
outsl
dec
adc
mov
jae
adc
fucomp
add
dec
lds
mov
push
outsb
pop
or
lahf
fidivrl
loopne
cs
loop
data16
repz
pushf
js
test
lcall
movsl
cmp
xlat
int3
mov
jg
nop
adc
jp
xor
inc
lods
movsl
push
mov
pushf
movsl
push
xchg
jbe
rcrl
xorl
imul
shrl
push
insb
xor
ja
lcall
lds
mov
sbb
cmp
fldl2t
push
or
clc
xor
aad
mov
les
pop
adc
popa
andb
inc
loopne
adc
rcrl
in
push
mov
mov
loopne
pop
xchg
pushf
inc
adc
pushf
bound
pop
ja
pop
mov
cmpsb
loopne
stos
pop
clc
ljmp
or
test
xor
pop
test
bound
int
add
pop
dec
aaa
cmp
inc
or
mov
push
icebp
mov
sbb
ss
mov
xlat
and
movsl
pop
inc
add
jne
sub
xchg
cmp
in
lods
int
push
orl
adc
fsubrl
stc
rcll
js
rol
mov
loop
lods
iret
inc
shll
jbe
and
or
fdivr
stc
cld
shll
loopne
dec
mov
pop
push
or
cmpsb
mov
push
mov
shlb
add
fmull
pop
mov
inc
les
test
inc
ret
lock
popf
cltd
pop
pop
xchg
or
stos
ss
dec
les
jb
fcom
lock
jo
outsb
or
push
jo
in
test
inc
cmp
jp
out
cwtl
pop
lds
das
mov
dec
mov
adc
mov
lods
xchg
scas
xlat
push
sbb
mov
pop
sub
pop
xchg
negb
mov
push
pop
mov
lahf
es
imul
push
lods
rcr
cmp
jns
fdivrl
xchg
sub
imul
push
lahf
push
cs
rol
xchg
cwtl
lods
shlb
jae
fldt
cmp
push
subb
inc
ret
fstpt
cmp
leave
mov
adc
pop
xorl
jl
scas
ja
jmp
jp
push
cmc
lock
scas
cwtl
popa
inc
nop
out
pop
jg
add
jbe
test
cs
cwtl
pop
outsb
add
pop
dec
loope
icebp
pop
xor
adc
push
sub
shl
xchg
jmp
dec
cld
push
adc
push
pop
dec
inc
std
aas
dec
cmp
test
shlb
inc
and
inc
xor
pop
mov
stc
movl
mov
call
inc
push
decl
out
daa
lock
add
or
or
push
jmp
hlt
or
roll
jae
stc
jo
imul
pop
mov
stc
or
in
jbe
cmp
xor
andb
enter
mov
in
inc
push
cmp
fisttps
jl
sub
jbe
stos
out
lods
xchg
xor
in
lea
mov
mov
push
pop
push
das
mov
mov
adc
sub
pushf
xchg
push
sti
pop
sub
sbb
adc
sbb
jb
or
stc
je
push
xchg
js
test
xchg
pop
mov
fldenv
jmp
jb
mov
mov
xor
add
jbe
cmp
push
shl
dec
call
loop
jns
sub
imulb
inc
es
cmp
xchg
scas
and
orl
aaa
cmp
add
jb
xor
out
fwait
pop
fwait
jb
lock
cltd
jns
pop
add
mov
sbb
cwtl
and
and
inc
shlb
push
rorl
fcomip
ret
add
push
hlt
jle
inc
or
xchg
or
int3
dec
adc
aaa
xchg
lret
dec
je
push
dec
rcrb
mov
dec
fwait
jle
adc
cwtl
shrl
out
dec
add
stos
fildll
ret
add
or
mov
fcmovb
movsl
cltd
fs
mov
jo
sbb
mov
lods
int3
push
daa
xchg
daa
xchg
add
hlt
aas
out
rcll
dec
mov
std
pop
jo
xchg
sbb
mov
sub
ljmp
aad
js
mov
mov
xchg
xchg
pop
push
jns
int3
sbb
filds
sbb
shll
je
aas
cmp
xchg
and
in
push
push
xchg
cltd
inc
and
es
ret
dec
jg
cmp
sbb
loop
subl
xor
push
insl
mov
mov
pop
hlt
mov
popf
lods
inc
test
pop
cmp
das
pop
xor
scas
cmp
rolb
leave
pusha
cmovle
lods
testl
lcall
fldenv
push
xor
xor
popa
in
ror
push
pop
mov
add
jecxz
imul
push
bound
mov
scas
repz
in
sbb
or
rcrb
aaa
cmpsl
mov
pushf
push
jae
sbb
add
outsl
inc
sub
scas
inc
lcall
push
scas
mov
addb
xor
lret
rcr
js
int3
or
add
sub
aas
leave
lea
pushf
and
pop
jg
mov
inc
adc
jnp
mov
xor
inc
ljmp
into
xchg
add
nop
or
push
or
nop
sbb
mov
ret
mov
mov
jmp
repnz
jle
cld
cmpl
and
mov
negl
and
add
add
sub
std
xor
cs
sti
in
in
mov
mov
test
test
fldenv
int
pop
popf
sub
push
jecxz
lea
lret
bswap
sbb
es
xchg
sub
testb
mov
add
test
xchg
cmp
xchg
out
adc
insl
jge
or
sub
dec
loop
test
pop
jo
icebp
fidivl
push
daa
je
push
movsl
push
leave
gs
leave
jle
clc
xor
sbb
and
cli
testb
test
dec
jns
mov
push
aas
lods
mov
or
mov
subl
pminub
test
jnp
xorl
int3
scas
lret
cmp
sbb
jns
cmc
mov
shrl
data16
sahf
aam
imul
pop
fwait
mov
loope
push
imul
lret
test
lds
and
mov
mov
sbb
fwait
cltd
jb
inc
aaa
jo
mov
inc
lods
testl
mov
xor
adc
and
mov
cltd
add
dec
or
gs
jnp
jb
inc
pusha
ss
adc
cmp
or
in
push
xor
nop
scas
shll
sub
addr16
testb
jno
ret
xor
pop
xor
mov
pop
jmp
sarb
mov
pop
test
sbb
daa
loopne
push
aam
dec
popa
addr16
scas
mov
or
sub
adc
cmp
test
fcoml
rorl
sar
xchg
rol
inc
fnsave
mov
mov
add
jno
pop
cmpsb
inc
stos
mov
xchg
rcpps
mov
orps
movsl
ret
rorl
ljmp
push
stc
mov
ret
jge
ret
and
and
adc
aaa
fistps
cs
inc
pop
push
int3
out
xor
push
aad
push
andb
repz
cli
es
xchg
ficoms
adc
jns
jmp
lds
xchg
jno
mov
sub
lret
jp
mov
push
cmp
adc
jae
lods
inc
mov
dec
mov
xor
pop
stc
dec
ljmp
pop
mov
aaa
inc
xchg
lods
pop
js
icebp
popa
inc
fdivp
js
ror
pop
cld
scas
add
test
pop
push
loope
mov
ds
adc
sbb
gs
ret
dec
push
cmpsb
dec
xor
dec
mov
pop
sub
insb
push
std
lahf
inc
daa
pop
jno
js
cli
cmp
pop
add
in
xchg
xor
in
mov
std
sbb
mov
dec
adc
ret
mov
mov
cmp
stos
jns
xor
rorl
ds
mov
shl
sub
push
es
adc
iret
sub
adc
fnsetpm(287
or
push
xor
add
mov
faddl
movsl
mov
mov
shll
xchg
or
jno
mov
cmp
mov
push
lock
cwtl
jno
cmp
ret
pop
js
lret
mov
lods
xchg
or
cwtl
out
fldl
lock
ficoms
les
mov
dec
insb
xchg
lods
out
jb
jecxz
je
es
aad
jp
cmp
jns
int3
jg
add
insl
jbe
packsswb
mov
mov
test
and
nop
jmp
cwtl
push
jo
addl
dec
or
stc
je
fsubrl
aad
fmull
lea
add
arpl
cltd
ljmp
lock
outsb
cs
div
push
mov
mov
mov
sbb
mov
cmp
adcb
push
js
lret
or
dec
outsl
adc
sub
inc
jne
push
rcr
es
aad
out
outsl
lret
mov
bound
jo
je
test
and
push
cmpl
lea
push
pop
pusha
xchg
mov
mov
cmp
fwait
out
scas
ja
adc
cmp
in
xchg
jl
loopne
jmp
cmp
ret
pusha
jno
xor
out
cmp
stos
xchg
xlat
icebp
outsb
scas
movsl
mov
vunpcklps
cmpsb
imul
adc
sub
or
scas
xor
test
neg
jl
mov
sub
jp
or
mov
xchg
jnp
ljmp
add
mov
cmc
ss
repz
xor
sub
repz
and
sahf
sbb
shl
insb
repz
push
sbb
mov
push
or
mov
jns
aas
cmp
mov
sbb
cld
lds
icebp
mov
decb
outsb
xlat
jb
sub
stos
cmpsl
lret
inc
mov
and
loopne
mov
mov
dec
sub
data16
lret
jmp
xchg
mov
test
imul
hlt
sbb
adc
push
inc
inc
out
xor
pop
arpl
mov
lds
test
push
stos
push
call
popa
cmc
pop
imul
mov
fcmovnbe
or
lret
xchg
and
mov
out
fucomp
ret
push
loop
mov
mov
jno
mov
pop
mov
loope
fdivrl
insl
cmp
mov
pop
pop
or
mov
fimuls
pop
gs
packuswb
jae
repz
jl
cld
xchg
pop
inc
loop
les
icebp
cld
mov
aas
inc
or
mov
rolb
es
add
cmp
xchg
and
cmpsb
cmp
pushf
es
push
add
mov
fbld
jne
fisubl
mov
mov
mov
jmp
lret
xlat
xchg
jp
aaa
arpl
test
pop
imul
scas
mov
test
add
jl
sbb
stc
je
mov
add
mov
or
mov
data16
in
inc
repz
cs
ret
xor
int
and
mov
pop
dec
popa
or
fisttps
fcmovu
lds
mov
lea
sub
inc
jle
push
dec
fdivrs
xchg
inc
and
push
add
ss
xor
or
in
and
mov
stos
mov
pop
or
pop
mov
xor
cwtl
dec
mov
xchg
mov
in
cmp
sbb
out
pop
addl
ret
push
dec
lods
push
cmpsl
mov
aad
sbb
cmc
loopne
lods
lods
movsb
fldenv
mov
insl
xor
inc
enter
popf
xchg
adc
sub
or
sub
xchg
icebp
movsl
icebp
xor
xor
out
adc
dec
sarb
xchg
rorb
enter
js
and
jbe,pn
mov
xchg
das
inc
or
pop
or
sub
in
cwtl
inc
sub
insl
loope
repnz
add
arpl
ljmp
mov
add
ljmp
and
test
pop
xchg
xchg
repnz
sub
hlt
imull
jmp
pop
or
jne
sbb
cltd
lret
fcomi
movsb
movsb
sti
pop
push
push
scas
push
daa
pop
cmpsl
movsl
dec
jl
orl
and
mov
push
pop
fcoms
popf
es
sub
pop
arpl
fs
xchg
das
pop
jmp
add
sub
add
add
or
sub
shlb
or
cmp
sub
xor
jae
sahf
fstpt
sub
or
push
arpl
cmp
imull
add
popf
add
push
mov
shl
or
popf
jle
pop
push
arpl
push
test
out
sbb
xchg
or
xor
ficompl
sbb
pop
and
jnp
cmp
push
and
jns
sbb
mov
loopne
cmpps
or
add
popa
cs
test
in
mov
aas
and
cmpsb
mov
ret
xchg
das
sub
aaa
aad
insl
adc
mov
fists
insb
xor
imul
fstpt
iret
out
arpl
out
cmp
add
inc
mov
dec
jl
fcoml
sub
movsl
mov
jbe
sub
scas
sbb
jmp
outsl
fldl
push
or
sbb
add
ret
daa
adc
xchg
and
push
jae
push
mov
frstpm(287
mov
stos
std
jb
push
fiaddl
loope
scas
ficompl
cmp
movsb
mov
inc
push
jecxz
mov
mov
test
dec
xchg
jns
test
stc
js
mov
mov
outsb
les
cwtl
iret
dec
cmp
roll
bound
pop
std
xchg
cmp
sbb
and
fnstcw
sbb
and
fistps
and
push
loop
loopne
jns
cmc
xor
mov
mov
and
nop
fistpl
imul
sub
jecxz
mov
or
cmpsb
lret
scas
push
mov
cmp
xchg
sbb
lret
xchg
xchg
mov
sbb
into
shrl
inc
xor
push
add
dec
jns
movb
inc
or
shrb
or
adc
dec
dec
lea
xor
lret
jne
cs
inc
jl
popf
mov
mov
ljmp
mov
enter
in
aad
cltd
jmp
test
cmpsl
and
ds
jp
xchg
rcll
sarl
cwtl
inc
mov
test
aaa
jno
mov
pusha
push
xchg
push
mov
test
mov
js
jg
test
pop
push
mov
rolb
cwtl
mov
inc
sahf
aad
jecxz
stos
adc
xchg
mov
sub
mov
jne
or
xchg
shll
jg
ret
out
movsl
leave
xchg
nop
push
lahf
adc
jne
add
mov
inc
int
pop
dec
cmp
fs
out
jmp
jae
inc
into
dec
mov
xchg
fdivp
stos
scas
sbb
xor
dec
xor
lcall
cwtl
mov
test
insl
lods
mov
idivb
push
out
mov
cmp
sub
dec
icebp
stos
cmpsl
in
jg
popa
loop
jecxz
hlt
out
mov
mov
xchg
inc
inc
mov
inc
push
clc
jg
repnz
insb
lret
mov
js
add
sub
sbb
int3
inc
jb
rcr
imul
cs
mov
out
leave
shr
jg
int
push
pop
lea
shr
lret
fldl
mov
hlt
jb
imul
popa
fsts
sbb
xor
outsl
mov
rclb
xor
dec
pusha
sbb
xchg
and
insl
sbb
push
aam
cmc
sbb
xor
les
fnsave
das
or
pushf
mov
adc
sbb
pop
and
mov
xor
adc
mov
cmpsb
lahf
pushf
out
adc
sub
sbb
jbe
add
adc
sbb
orl
mov
or
shlb
dec
inc
es
mov
mov
cwtl
lds
xor
idivl
loopne
cmp
mov
dec
xor
into
int3
in
cmc
rorb
dec
xor
cmp
inc
repnz
lret
add
call
js
outsb
decb
pop
lock
out
rclb
xor
dec
lahf
mov
mov
ret
mov
lock
leave
xor
ljmp
rcrl
mov
jg
lret
rorl
pop
loope
ret
sbb
xchg
cld
fcompl
pop
add
mov
and
cs
adc
outsl
rorb
fisubs
roll
jg
data16
mov
xor
adc
push
fsubrp
mov
pop
cli
push
push
pop
or
jl
xor
dec
std
sub
cmc
loope
cmpsl
add
mov
mov
int3
sbb
adc
mov
fsubrs
jp
or
xor
xchg
xor
xchg
sbb
xchg
cmp
andb
or
iret
repz
add
insl
shrl
xorb
jg
loop
pop
test
subl
push
pop
sbb
mov
mov
jns
mov
out
push
mov
sbb
lret
ret
in
call
adc
sti
in
mov
inc
ret
push
in
dec
push
xor
pop
rol
mov
xchg
data16
fcompl
je
jnp
mov
fadd
fdivr
cmc
or
fildll
add
and
loope
jecxz
xor
shlb
inc
or
fisttpl
dec
jp
shl
xor
push
mulps
out
outsb
je
out
lcall
jp
xchg
push
subl
adc
testl
pusha
jne
pop
andl
xchg
jl
outsb
imul
mov
mov
cs
push
jle
stos
inc
xchg
pop
test
push
or
aam
fwait
cmp
roll
mov
add
inc
xor
and
push
xor
sahf
add
aad
xor
insl
pop
xchg
int3
inc
mov
jl
push
scas
enter
bound
fmuls
xchg
fdivr
les
adc
adc
rorb
sahf
enter
cld
add
push
sbb
ljmp
jne
inc
xor
out
in
adc
outsb
xor
into
inc
dec
outsb
sub
adc
jge
push
xor
outsb
ss
cmp
std
sub
or
mov
ds
cmp
pusha
push
xchg
sbb
pop
push
mov
adc
mov
cmpsb
dec
xchg
adc
ficoml
out
inc
jecxz
arpl
mov
fstpl
pop
fcmovu
inc
stos
dec
shl
push
and
mov
and
je
pop
xor
pop
cmp
insl
dec
ret
arpl
push
cmp
ja
call
in
ret
xchg
mov
add
mov
and
dec
mov
push
jp,pt
push
shlb
mov
test
mov
xlat
mov
incl
dec
inc
lds
push
add
shll
stos
aas
addr16
push
cmp
aas
sub
jns
call
pop
dec
sub
rcl
or
mov
fdivl
xchg
mov
pop
dec
pop
pop
nop
xor
cmp
aad
jle
cmp
xchg
or
test
push
into
les
inc
mov
push
push
sub
mov
jl
sbb
pop
loopne
test
rol
pop
mov
addr16
xor
ss
es
dec
mov
and
shlb
pop
iret
fidivl
mov
jmp
push
or
push
lret
dec
pop
aam
push
fsubrs
arpl
sub
adc
jge
nop
imul
sbb
sbb
xor
or
notb
xchg
imul
mov
xor
fucomi
in
fdivr
xchg
xchg
cwtl
mov
out
mov
cmp
sbb
xor
sbb
pop
dec
sbb
add
sbb
xchg
push
xchg
push
or
sbbb
ret
jae,pt
sarb
out
lahf
mov
xlat
ja
loopne
jmp
jno
or
dec
out
adc
shl
mov
andb
xchg
test
lret
push
pop
stos
leave
sbb
dec
lods
imul
jae
into
mov
inc
and
test
push
lret
out
std
inc
mov
sbb
sbb
les
dec
std
push
out
popa
imul
sub
mov
pop
jle
cmpsl
mov
lods
gs
iret
jae
mov
jmp
cli
mov
popa
cmpsl
lcall
jo
gs
bound
cs
mov
push
jecxz
out
or
fcomip
test
adc
sbb
adc
mov
or
jns
sub
ss
mov
pop
mov
sti
adc
das
adcb
inc
sarb
and
daa
inc
mov
pop
lods
subb
jbe
pop
sbb
in
inc
hlt
xchg
jmp
pop
out
xor
cwtl
iret
js
lods
add
in
push
or
pop
out
repz
adc
inc
or
push
add
mov
jmp
insl
inc
jb
into
pop
lods
cmpsl
xchg
dec
push
faddp
dec
xchg
lret
xchg
xor
or
inc
in
repz
hlt
jns
stos
stos
rclb
out
fistpll
xlat
fadd
shlb
jno
push
movsl
mov
addl
mov
sbb
xchg
and
cwtl
adc
lahf
and
into
imull
rcrb
add
cmp
add
outsl
push
mov
stc
inc
mov
push
xor
adc
sbb
shll
ss
clc
mov
aas
lret
push
push
filds
push
jl
btr
nop
pusha
pop
loopne
stos
xchg
mov
mov
sbb
mov
ljmp
bound
xchg
and
cli
addl
cmpsl
lods
mov
icebp
push
scas
xchg
lock
clc
and
into
call
xor
lock
cli
jne
mov
js
imul
movsb
aad
ror
pop
add
in
andl
stos
push
mov
or
rol
popa
lret
daa
out
jmp
stos
cmp
ficompl
testl
dec
mov
push
xchg
xor
sarb
mov
jmp
imul
cmp
push
xchg
pop
mov
out
lcall
shr
int
iret
sti
lret
xor
movsl
repz
push
aas
pop
cmp
ds
scas
add
das
push
add
jne
mov
ja
inc
dec
pop
and
cmp
mov
push
inc
addr16
mov
ret
std
clc
or
hlt
sbb
mov
add
dec
xchg
inc
cmp
shlb
mov
jbe
incb
ror
ja
sbb
push
push
dec
and
dec
mov
xlat
dec
addr16
xchg
mov
mov
pop
push
in
sarl
call
test
push
pop
jmp
mov
flds
push
arpl
loope
push
push
adcl
and
data16
insl
pop
mov
ret
sti
cwtl
lahf
push
xchg
icebp
push
inc
xchg
push
imul
mov
add
mov
cmc
clc
mov
dec
sub
sub
cmp
mov
fcoms
cmp
fcoml
mov
jl
jge
or
cvtps2pi
andl
insb
lds
sbbb
test
mov
dec
aaa
or
pop
fldcw
mov
and
test
jae
bound
fiadds
xor
sbb
mov
out
cmc
fwait
into
lret
xor
out
and
mov
mov
fadds
ret
sub
or
insl
stos
sti
ficoml
stos
xchg
mov
push
sbb
jge
sbb
insl
loop
fs
je
mov
mov
xlat
ss
ljmp
popf
jnp
mov
outsl
das
fsubl
in
popa
movsb
jcxz
shll
jne
sbb
sub
xor
xor
or
add
sbb
mov
push
mov
stos
fnstenv
movsl
pop
dec
test
lret
adc
jecxz
jl
je
adc
cmpsl
insb
adc
lret
and
xchg
aas
sbb
mov
adc
push
add
mov
mov
adc
in
add
ss
inc
ret
and
outsb
cmc
stc
mov
mov
jl
inc
pusha
rcll
stc
cld
repz
mov
mov
sbb
mov
sub
lock
jo
sbb
out
pop
add
lock
test
adc
pop
adc
loopne
jp
inc
cmp
movsb
stc
lods
shll
out
pop
sbb
cmp
inc
fs
mov
shl
stc
pop
inc
mov
inc
sbb
out
add
ficoml
cmc
in
inc
dec
jne
inc
adc
test
cli
aaa
insl
mov
xchg
lods
int
mov
je
sbb
push
daa
outsb
mov
adc
rcll
outsb
sub
cli
mov
aam
cmp
xchg
fimuls
pop
sahf
movb
push
ror
stos
call
xchg
and
mov
push
insl
push
cs
int
testl
and
ja
js
cmc
cmpsl
into
inc
xchg
mov
push
enter
ja
mov
push
daa
mov
test
mov
jge
rolb
mov
cltd
add
dec
out
mov
xchg
xchg
xor
or
mov
leave
mov
cwtl
lret
popa
stos
ljmp
xor
movsb
shrl
pop
pop
into
out
js
or
ret
jns
cld
mov
adc
mov
imul
lds
xor
inc
loopne
push
bswap
push
adc
push
je
iret
jge
lahf
pushf
pop
xor
fwait
icebp
mov
add
imul
pushf
movsb
xor
cmp
or
jl
pop
jle
insb
push
and
iret
cmp
jmp
imul
or
lock
subl
mov
adc
fwait
adc
push
push
lds
cs
xchg
bound
clc
repnz
mov
inc
mov
and
pop
outsb
push
dec
nop
or
mov
insb
push
cld
xor
xor
adc
jl
add
fisttpll
jbe
jns
xchg
mov
insb
inc
dec
mov
dec
mov
mov
xchg
in
cmp
and
xor
dec
xchg
mov
xchg
stos
ljmp
repz
mov
sub
inc
lock
loop
xchg
push
xorb
push
sub
int3
cmpl
std
add
out
add
iret
lds
lds
jb
lds
push
push
fildl
aad
roll
andb
push
pop
xchg
shlb
dec
aam
mov
fnclex
imul
sbb
out
cltd
xchg
jb
inc
in
add
dec
add
sbb
sub
ss
mov
and
dec
inc
xorb
pop
jmp
shrl
pop
cmp
sbb
pushf
inc
mov
test
popf
sbb
push
mov
mov
pop
mov
xchg
pop
scas
pop
and
sub
test
dec
lea
and
js
jbe
aam
ljmp
or
sbb
das
fs
mov
inc
aad
xchg
push
push
movsl
add
into
cmp
inc
popf
cmp
je
cli
scas
imul
fimuls
pushl
cmc
out
xchg
je
push
out
testb
mov
pop
aas
mov
xor
flds
je
xor
cmova
push
jmp
mov
pop
pop
add
jl
aaa
dec
xchg
dec
orl
outsb
lahf
pop
in
or
dec
mov
test
cmp
push
jno
addr16
xor
aad
fldt
out
cs
mov
jmp
jns
push
inc
and
movsl
dec
mov
sub
pop
lret
std
lock
cmp
mov
jg
arpl
inc
cmc
inc
out
aas
sbb
popw
pop
insb
dec
in
xorb
xor
loopne
imul
or
jb
into
sbb
int3
icebp
movsl
xor
xor
or
inc
das
add
or
je
or
jg
push
movsb
push
sub
jl
mov
inc
add
mov
push
std
es
xor
scas
add
jbe
push
cmpsb
inc
inc
cs
outsl
dec
sub
inc
mov
jae
adc
mov
pusha
fs
inc
pop
fdivrl
testb
jg
cmp
and
add
lret
or
sahf
faddp
fisubrs
int3
adc
enter
inc
sti
xor
xor
out
mov
lahf
push
out
jns
xor
jns
rorl
push
inc
iret
fdivl
dec
call
stos
gs
mov
xchg
xchg
pop
pop
mov
mov
push
inc
mov
scas
inc
in
addb
sbb
cs
mov
stos
jo
test
popf
mov
imul
ds
sub
sub
xchg
cli
imul
and
push
test
sbb
pop
push
jmp
dec
ret
scas
push
jae
cld
add
push
cmp
dec
call
out
ror
out
sbb
lds
mov
hlt
lret
xor
das
popa
lds
mov
fdivrp
in
sbb
or
sbb
pop
adc
pop
mov
and
add
loope
xchg
ret
jge
ret
int
sti
dec
stos
ret
jo
leave
subb
out
enter
ljmp
aam
sub
sbb
lea
stc
mov
cmp
clts
or
bound
adc
test
mov
fidivrs
rorb
into
ror
roll
cmpsb
lods
push
sbb
dec
add
pop
dec
aad
cs
loop
mov
dec
sbb
mov
sbb
mov
xlat
leave
popf
mov
jecxz
lcall
xchg
inc
add
arpl
mov
mov
addr16
ja
and
push
in
sub
sub
and
lea
sbb
push
xor
call
outsl
inc
inc
jae
cmp
dec
lods
loope
xlat
jo
add
mov
cmp
push
das
pop
lahf
push
pushl
pop
push
test
std
outsl
cltd
cmp
xchg
lds
pushf
and
adc
push
repz
mov
fnsave
ret
shll
mov
mov
jge
add
inc
push
sarb
add
mov
rorl
jl
pop
lahf
popf
jb
mov
scas
test
cltd
adc
xor
and
mov
and
stos
test
into
push
and
fwait
cld
stc
addps
jnp
jmp
cmp
xor
cmp
cmc
pop
out
mov
push
jp
dec
stos
test
popf
sub
into
push
stos
iret
jae
mov
lock
push
and
mov
lcall
stc
pop
dec
adc
xchg
jbe
pusha
loopne
fwait
cmp
fldcw
mov
cs
pop
mov
dec
aad
sub
dec
arpl
leave
add
inc
jl
jb
mov
ret
repz
pop
daa
mov
mov
sub
adc
sbb
in
add
and
mov
jb
push
add
out
stc
stos
ljmp
mov
push
or
xchg
cltd
mov
ret
xor
pushf
push
xor
xchg
shr
scas
js
fsubl
stos
popa
out
fidivrs
outsl
int
sahf
cmp
int3
jnp
adc
in
push
mov
xchg
sbb
sub
dec
dec
mov
cmp
or
aaa
in
sbb
das
inc
push
push
sbb
mov
or
adc
das
mov
mov
cmp
sti
dec
dec
pop
cmp
cltd
push
mov
loopne
sbb
adc
ret
lcall
xor
icebp
xchg
xchg
pop
cmc
decb
push
enter
into
sbb
jno
rep
nop
test
or
xor
sbb
or
jns
rcll
adc
mov
mov
dec
aam
sub
mov
inc
cmpsb
xchg
aad
sti
sub
xchg
fstpl
pop
or
and
mov
sub
int3
fldt
dec
mov
leave
mov
fiadds
insb
and
xor
jg
or
adc
mov
inc
adc
lret
inc
pop
fwait
dec
inc
adc
xchg
mov
sarl
popf
sub
and
mov
inc
shll
inc
jg
sbb
and
push
test
jecxz
sbb
outsl
sub
lret
movsl
sbb
imul
into
adc
add
mov
in
fmuls
fnsave
mov
jb
push
lret
push
sar
mov
popf
out
mov
dec
out
sbb
fbld
bound
push
arpl
inc
pop
adc
ss
mov
insl
scas
mov
add
stos
xor
andb
notl
scas
add
mov
add
mov
xor
out
pop
in
lcall
dec
add
out
pop
cli
inc
fwait
mov
cltd
mov
jge
xchg
push
jne
mov
out
dec
and
mov
ljmp
adc
cmp
cmpb
out
pop
pushf
lahf
imul
fs
jge
cmp
fsub
cltd
inc
mov
jge
or
fistpll
imul
mov
sti
in
mov
mov
push
outsb
sbb
cmp
push
xor
sti
cwtl
pop
ret
in
adc
int
cmp
and
fistl
ljmp
gs
testl
loope
ret
enter
cmp
xchg
and
out
mov
outsl
je
aas
pushf
cmp
insb
das
repz
pop
adc
jp
push
rolb
or
mov
cmc
out
cmpsb
cmp
cltd
loope
mov
jp
xchg
xchg
jle
fcomi
and
scas
mov
add
push
cwtl
fimull
and
jle
stc
pop
and
je
gs
inc
loopne
stc
in
dec
imul
mov
sbb
lods
xchg
mov
frstor
mov
leave
pop
sbb
mov
add
xchg
lcall
xchg
jecxz
fwait
loopne
lock
push
add
sahf
mov
push
xor
test
cli
mov
xor
sbb
sub
or
sub
repz
dec
dec
pop
jecxz
leave
sub
xor
pop
sbb
shl
nop
sub
and
clc
fneni(8087
subl
cmp
rcr
insb
add
cmp
psrlq
xchg
imul
outsb
mov
adc
mov
and
jge
jmp
and
arpl
push
inc
test
aam
fstpl
push
dec
or
dec
mov
shl
sbb
pusha
icebp
sbb
push
mov
xchg
out
cs
orl
out
add
fst
sub
mov
sbb
mov
lods
popf
movsb
mov
cmp
inc
movsb
cmp
cmc
fdivr
outsl
jg
imul
sahf
int
xchg
sub
dec
cwtl
aaa
inc
ljmp
inc
cmp
jne
call
jbe
mov
addb
jo
jnp
movsl
cwtl
ret
scas
pop
scas
gs
inc
inc
das
outsl
jb
inc
cs
cmc
daa
int
pop
xchg
xchg
sahf
into
cmp
jp
push
adc
movsb
inc
sarl
xchg
mov
fcomi
std
int3
aas
add
mulb
idivl
ds
stc
bound
and
xchg
cmpsl
mov
dec
mov
pop
xchg
xor
sbb
mov
fisttpll
inc
mov
adc
jns
adc
add
clc
xchg
insb
pop
into
lea
pop
push
adc
cmp
shrl
jmp
fnstenv
cld
int3
mov
movl
inc
sbb
pop
ds
outsl
jbe
add
mov
xchg
jae
mov
mov
add
popa
je
mov
mov
sbb
fsubrs
in
lods
mov
adc
lcall
mov
cmc
push
test
movsb
mov
into
dec
rcll
mov
xlat
or
add
sbb
cli
dec
inc
adc
jbe
sub
xchg
pop
add
imul
les
mov
and
push
cmp
push
dec
repz
and
sbb
and
ds
ja
mov
mov
insb
inc
ss
push
and
icebp
mov
push
repnz
enter
mov
xor
aad
scas
sbb
xlat
aam
bound
fsubl
xchg
push
sbb
cmpsl
mov
fstps
sbb
addr16
jmp
sahf
sarb
std
ja
mov
lods
mov
and
popl
xor
add
imul
inc
push
adc
xchg
call
shr
mov
pop
add
inc
pop
int
out
sbb
pop
mov
adc
into
dec
push
test
cli
xor
cs
fstp
mov
inc
in
outsl
cmp
ds
adc
ret
shrl
mov
xchg
popa
je
jp
movsl
push
in
add
fdiv
es
adc
jno,pn
rclb
mov
ja
sbb
ror
je
lock
daa
aaa
iret
repz
popa
shll
add
push
push
pop
push
nop
sbb
pusha
pop
ret
sbbl
int3
jae
in
inc
clc
ds
cmp
stos
subb
mov
hlt
repz
inc
inc
xor
mov
push
dec
add
dec
gs
mov
aaa
and
gs
adc
inc
pop
mov
mov
call
lods
jle
fiaddl
mov
and
xor
add
pop
jae
cmpsb
test
mov
out
stos
adc
shl
sbb
ja
lock
cmp
shr
mov
subb
mov
insl
test
sti
ljmp
mov
int
scas
inc
push
in
sbb
add
mov
loopne
cmp
pop
or
adc
sbb
lcall
out
or
leave
sahf
popf
ret
cs
inc
leave
dec
rol
mov
lods
setl
out
push
cmpb
xchg
clc
push
test
jbe
test
das
cmp
adc
std
jp
dec
adc
es
push
fst
mov
addl
add
aam
pop
enter
hlt
push
aaa
add
and
repnz
jle
jo
lret
cmp
incl
dec
movsl
pop
clc
and
fdivl
fcomp
sbb
xor
add
sub
or
mov
inc
add
cmp
mov
lret
and
ret
rorb
mov
add
mov
aam
out
jmp
repz
data16
fs
mov
or
add
ffreep
cmp
cli
xchg
sbb
and
daa
fisttpll
xchg
xchg
or
std
in
push
daa
mov
outsl
icebp
je
outsb
xchg
mov
and
cli
je
push
inc
mov
jae
mov
add
push
mov
mov
jns
sahf
push
inc
mov
cwtl
pop
insb
in
pop
aad
jo
sti
movsb
es
test
lahf
mov
xchg
cmp
cmp
and
inc
push
pop
jl,pn
inc
pop
push
adc
bound
add
jmp
pop
xor
jle
mov
arpl
stc
push
aad
mov
stos
fdivr
hlt
dec
xor
sub
movsl
push
mov
hlt
mov
movsb
inc
addr16
push
mov
cmp
les
addr16
pop
xchg
jbe
sbb
mov
cmpsl
fists
aad
cmp
in
xchg
or
imul
add
sub
ljmp
push
inc
fdivrl
loopne
leave
stos
test
sub
push
and
pop
mov
jo
movsl
lods
daa
xor
dec
add
and
mov
mov
imul
div
fs
sti
repz
fldt
add
loopne
fsubl
pop
test
jnp
push
or
hlt
imul
or
push
push
es
pop
int3
mov
xlat
cmpsb
pusha
ret
int3
jbe
push
mov
xchg
xor
shll
lds
lahf
xchg
fdiv
gs
adc
xor
pop
sbb
push
mov
repz
sbb
jo
jge
jl
add
xor
jnp
sti
ret
mov
inc
jno
add
sbb
scas
mov
pop
and
sahf
pop
cs
sbb
test
or
mov
idivl
lret
mov
inc
shlb
scas
test
bnd
in
test
and
xor
adcb
ja
sub
xor
test
test
mov
sub
sahf
aam
pop
fs
cltd
mov
call
sub
test
repz
push
cwtl
test
xchg
push
imul
scas
pusha
mov
popa
dec
xor
and
imul
pop
popf
out
aam
sub
push
addb
adc
sbb
add
inc
pusha
sub
push
mov
mov
xchg
mov
fcmovu
sbb
notl
daa
cld
lcall
mov
lcall
jg
xchg
pop
add
in
scas
jnp
aaa
jns
inc
das
aad
fldcw
mov
xchg
fbstp
clc
sahf
and
insb
or
xor
out
hlt
push
xor
lcall
mov
rorl
stos
incl
lds
aaa
subl
in
xchg
adc
scas
adc
in
out
jmp
lds
lahf
ja
dec
ret
subb
mov
jns
outsb
and
push
int3
stc
or
bound
push
push
sub
shll
jns
out
inc
push
in
loopne
push
cli
xchg
cmpsl
adc
jecxz
lds
ret
lret
mov
stc
stos
outsb
rcll
stos
mov
mov
hlt
hlt
pop
popf
nop
sub
xchg
xchg
sahf
sbb
test
sbbl
mov
out
sbb
mov
stos
sub
aad
pop
dec
mov
or
xchg
jg
das
push
sbb
jl
loop
iret
sub
or
mov
push
jp
pop
lret
mov
xor
pusha
in
xchg
mov
cmp
push
cmpsl
jecxz
pop
xchg
popf
nop
mov
mov
mov
in
and
mov
loopne
pop
icebp
das
bswap
and
subb
xor
sub
add
xchg
cmp
jp
fwait
cs
inc
mov
popa
in
sub
stc
bound
sub
ficoml
inc
pushf
sub
and
stos
mov
pop
xor
mov
scas
push
lret
jns
loop
mov
leave
in
sbb
imul
aad
mov
iret
andb
rcrb
jge
cmp
sub
mov
inc
jne
mov
xchg
es
cmp
insl
aas
add
mov
rcl
and
mov
pop
insl
gs
popa
jbe
push
insl
xchg
cs
push
aad
dec
cmp
dec
pop
xchg
sub
es
add
dec
cmp
mov
sub
adc
insb
sbb
add
or
jmp
stos
add
aam
pop
dec
rcll
pop
stc
sbb
cli
push
enter
add
lret
sbb
repnz
rcll
inc
jle
xchg
push
aam
pusha
dec
push
bound
and
dec
sbb
xchg
imul
aaa
or
jmp
xchg
lret
lods
lods
and
or
mov
fldcw
les
in
adc
jmp
fbstp
mov
xchg
lods
cmpsl
pop
xor
negb
cmpsb
mov
mov
lahf
negb
dec
sahf
jp
sub
enter
dec
rcll
or
aad
mov
ffreep
sub
inc
push
addr16
imul
sti
loopne
repz
mov
or
inc
jnp
mov
test
add
jnp
sbb
mov
mov
imul
add
jle
je
mov
jmp
sbb
sbbb
mov
adc
push
pop
pop
sbb
push
iret
cmp
rolb
xchg
stos
fcomps
iret
and
jae
stos
jp
movsl
xor
dec
pop
or
neg
int
aas
scas
mov
push
and
mov
sub
or
mov
cmp
add
inc
or
pop
inc
aas
xchg
nop
aam
push
fisttpll
stos
cltd
push
mov
lahf
hlt
iret
cmp
js
inc
fstpl
xchg
lods
js
sub
inc
icebp
xor
cmpsl
shl
cltd
insl
outsb
fdivl
lock
fimull
int
fwait
into
inc
mov
mov
clc
inc
xor
mov
or
call
je
jnp
mov
jl
data16
lods
dec
inc
stos
adc
jp
call
shl
sarl
jmp
jnp
mov
dec
lretw
adc
dec
imul
cmpl
shr
mov
sbb
lcall
mov
loopne
sub
int
push
mov
mov
and
shrb
test
imul
push
mov
in
dec
xor
andb
lcall
or
sub
popf
shll
into
jecxz
js
pop
in
pop
xor
sub
mov
shll
test
xchg
addr16
in
push
negb
es
inc
popa
jae
faddl
sub
lods
jecxz
or
dec
mov
mov
loop
sbb
cmp
push
fidivrs
cwtl
ss
stos
sbb
adc
pop
jecxz
addr16
push
jge
and
mov
test
loopne
into
jge
mov
add
or
xor
xchg
mov
mov
test
fs
or
mov
cltd
sub
int
mov
mov
andb
leave
neg
mov
or
test
iret
or
icebp
pop
aas
shl
fdivrl
cmp
pusha
mov
mov
adc
xchg
pusha
fnstcw
push
imul
lods
out
pop
adc
and
pop
inc
mov
shll
in
xchg
pop
add
inc
push
insl
ljmp
leave
lods
and
lock
icebp
sub
or
sbb
mov
mov
pusha
loopne
fstl
fdivrs
cmpsl
cld
mov
shrl
cmpsb
imul
hlt
add
mov
rorb
xchg
and
mov
pop
loop
mov
pop
add
sarl
fcomp
cld
xchg
jns
rclb
imul
into
sub
popf
nop
pop
dec
popf
fs
dec
lods
jne
mov
xchg
and
mov
jmp
clc
sub
hlt
dec
jecxz
jmp
or
and
inc
xor
add
jl
mov
mov
iret
stos
push
jo
mov
in
inc
mov
ret
sub
je
push
adc
xchg
outsl
lahf
jecxz
mov
imul
lods
dec
pop
cld
xor
push
lock
test
mov
clc
mov
push
inc
loope
push
jne
inc
aas
or
scas
aas
push
stos
imul
mov
aas
dec
xchg
enter
push
jge
iret
test
dec
and
xchg
in
push
imul
lock
adc
iret
shlb
imulb
sub
xor
fisubrl
sub
push
xor
imul
out
inc
jp
adc
add
xor
mov
dec
xor
in
shrl
mov
fxch
ret
call
mov
dec
jbe
subl
out
jle
fadd
loopne
shr
or
aas
insl
mov
adc
inc
in
bound
jnp
mov
push
leave
xchg
outsl
add
lods
sub
xor
jae
xor
jg
adc
inc
mov
iret
jo
sub
sbb
mov
lds
lea
mov
daa
jo
fdivrl
in
jb
dec
mov
jmp
fs
mov
mov
adc
int3
mov
push
dec
dec
fcmovnu
test
fmuls
aas
sub
cmp
mov
inc
mov
and
notl
mov
add
push
test
cmp
out
or
fsubrp
mov
gs
sub
out
bound
push
movsb
pop
imul
popf
loopne
jne
or
ja
notl
outsb
push
das
mov
push
stc
xchg
jecxz
jl
xor
repnz
mov
fs
int3
push
or
sub
insl
shl
mov
loopne
pop
push
mov
lods
stos
push
pop
xor
out
in
mov
ljmp
adcb
fdivrs
nop
mov
and
outsb
xor
nopl
push
rcrb
imul
sti
pushf
jne
push
jmp
in
pop
js
and
add
fstp
in
mov
mov
orl
xchg
jbe
mov
pushf
push
xchg
fistpll
inc
xor
inc
mov
mov
ds
xchg
mov
cmp
insb
jno
adc
jmp
negb
lods
pop
xchg
fnsave
je
mov
jb
scas
or
add
xor
les
loop
out
jae
icebp
jl
xor
lds
jnp,pt
mov
rorb
nop
inc
sub
mov
adc
mov
popf
mov
and
sub
adc
sahf
push
rcll
push
pop
jbe
outsl
mov
xchg
inc
pop
outsb
jb
mov
dec
int3
push
xchg
insl
jns
sub
mov
addr16
cli
sub
lods
cmp
pop
lods
sub
dec
xchg
pusha
sbb
adc
out
add
adc
inc
adc
mov
shl
mov
mov
jae
sub
and
jmp
scas
lcall
popa
jl
pop
lods
pusha
xchg
adc
and
lret
push
outsb
lock
les
repz
pop
insl
push
rclb
sahf
sub
mov
inc
stos
in
out
repz
xchg
das
mov
mov
sub
push
lcall
loop
scas
push
in
cwtl
mov
stos
lcall
cmp
and
outsl
xchg
push
cmc
imul
add
je
lret
es
mov
out
mov
loop
paddd
pop
pop
or
sub
pop
or
lea
scas
pop
xor
pop
out
xchg
sbb
sub
ret
jno
xchg
lahf
inc
mov
inc
lret
mov
mov
pop
sbb
jae
call
int
sahf
cmpsb
cmp
and
pop
enter
xchg
aam
test
xorb
iret
pop
push
push
cli
cmp
pop
push
mov
ja
repz
mov
mov
push
pop
dec
push
rolb
mov
arpl
mov
mov
add
int
cmpsl
fldl
push
and
jecxz
add
xor
lcall
mov
loopne
xchg
dec
push
movsb
arpl
sub
ljmp
sub
push
pop
add
jecxz
jns
adc
inc
push
xchg
pushf
test
in
dec
test
jae
lea
jecxz
imul
enter
je
pop
fldcw
inc
fisubl
push
aam
add
div
pop
cmpsl
lret
add
dec
std
scas
sub
rclb
inc
mov
sbb
and
jmp
test
mov
ja
lods
mov
cld
das
out
sbb
iret
fsubrl
je
cmpsl
test
pop
mov
stc
dec
sub
jge
jmp
adc
xor
push
xchg
and
cmp
inc
pop
mov
mov
add
pop
dec
dec
loop
es
xor
mov
xchg
add
iret
and
xchg
test
sub
mov
push
fcmove
ljmp
jge
loope
mov
out
mov
adc
or
sti
xchg
call
sahf
ds
leave
sub
int3
insb
xor
cs
loope
dec
cs
mov
sbb
js
mov
and
ljmp
pop
xchg
xchg
push
mov
mov
mov
hlt
scas
sti
dec
test
pop
outsl
pop
lcall
icebp
mov
addb
insb
pop
pop
xor
ficoms
into
lods
js
adc
push
mov
mov
es
pop
loop
add
std
jge
sahf
ret
pop
scas
xchg
fisttpl
clc
fstp
fdivrp
iret
mov
int
xchg
pushf
pop
in
sbb
jg
jns
xor
std
push
lcall
mov
cwtl
pop
or
in
adc
mov
repz
imul
mov
aas
int
xor
fwait
js
or
push
popa
loope
aam
or
cmc
stc
mov
sub
or
enter
or
dec
scas
or
push
pop
sub
icebp
js
lcall
fsubrp
flds
flds
movsb
push
les
rorb
dec
adc
dec
cmpsb
fisttps
imulb
shrl
cmpsb
or
jg
xchg
mov
mov
inc
pop
or
inc
xchg
push
jp
outsb
out
test
xchg
or
movsb
jne
cmp
xchg
aaa
lods
test
or
lret
mov
mov
loopne
xchg
inc
jo
cmp
pop
sahf
cmp
ficompl
adc
adc
cmp
push
imul
sbb
in
or
pop
testl
sti
xor
fiaddl
mov
mov
jns
sbb
mov
dec
iret
sti
add
outsl
movb
mov
and
jnp
sti
dec
sbb
lock
test
popl
mov
and
lret
loopne
push
pop
ret
popl
mov
lds
xor
sub
imul
test
mov
lret
int3
repz
loop
mov
mov
aam
lret
arpl
mov
adc
dec
pusha
je
ret
scas
xchg
adcl
inc
popf
sbb
mov
push
add
sbb
cmp
lods
jno
aad
cltd
dec
dec
sbb
fdivp
cmc
pusha
mov
fistps
mov
outsb
ret
sahf
movsl
pop
mov
aad
cmpsl
lods
xchg
sub
sub
addr16
mov
jle
outsl
jmp
iret
int
sub
paddusb
jmp
add
in
daa
sbb
cmp
insl
mov
out
jo
sub
pop
pop
lods
jge
cmp
mov
or
sbb
sub
in
or
mov
push
movsl
insl
leave
xor
or
sub
idivl
addl
dec
loope
pop
dec
jg
jb
aas
jae
and
mov
mov
sub
or
adc
pop
xchg
xchg
mov
lods
daa
xchg
mov
sbb
push
jo
in
je
clc
xor
shl
xchg
mov
jle
cld
sub
sbb
js
ss
push
loope
jmp
and
pop
test
lret
lods
loop
jo
xor
insl
faddl
add
int
jl
push
sarb
mov
pop
rcr
inc
in
inc
push
inc
and
aam
popa
xor
fs
push
cmp
xchg
push
nop
repnz
and
stos
int
nop
iret
inc
mov
mov
scas
lret
cltd
sbb
insl
xchg
aaa
jns
add
and
adc
ret
xorl
cs
mov
cli
dec
cld
xchg
movsb
idiv
arpl
cmp
dec
xchg
sbb
in
ret
cld
es
add
mov
mov
add
loopne
push
cmp
mov
pop
sbb
and
fistpll
idivl
xchg
mov
sahf
pop
push
jno
adc
arpl
mov
pop
mov
stos
call
pop
cltd
jl
mov
mov
call
add
xor
fbld
push
in
xchg
shrl
lcall
mov
add
pop
scas
jge
sbb
lock
sub
xchg
fld
pop
pop
cmp
test
ljmp
dec
and
lock
xor
add
fadd
jmp
ret
mov
xor
push
fwait
popa
xchg
dec
mov
sbb
and
pop
pop
mov
shr
hlt
xchg
sub
mov
cmp
xchg
add
jge
or
or
mov
cmp
pop
xchg
aad
leave
jecxz
dec
cmp
cmp
das
mov
mov
push
outsb
push
lret
loope
sbb
mov
adc
jmp
loopne
and
xchg
movsb
xchg
sti
xor
cmova
inc
cmpsl
mov
int3
repnz
mov
aaa
movsb
jle
cmpsl
ljmp
or
in
add
jp
ss
mov
out
fildll
loopne
mov
xchg
cltd
int
sbbb
push
movsb
xlat
dec
add
inc
cli
cmp
add
push
cmp
cmp
push
aaa
or
out
xor
adc
xchg
or
adc
or
scas
dec
mov
pop
jne
push
fs
mov
inc
cmc
outsb
xor
add
push
jle
pop
add
xchg
aaa
and
jbe
out
leave
xchg
inc
xor
inc
mov
xchg
shlb
movsl
rorb
xchg
stc
daa
fists
cs
cs
btc
lds
stos
insb
cmp
nop
push
push
aas
aad
scas
out
lcall
mov
ja
imul
xchg
mov
xchg
push
sbb
jle
imul
mov
inc
loop
je
pusha
and
and
leave
xor
add
nop
mov
push
ss
fs
or
jb
test
pop
dec
int
cmpsb
mov
mov
scas
outsb
pushf
test
mov
lds
jno
mov
inc
sti
add
push
sub
sahf
mov
dec
negl
jmp
push
jecxz
and
jne
push
fs
push
aaa
adc
cmp
clc
icebp
fcomps
or
mov
mov
in
mov
daa
and
jp
pop
mov
push
mov
push
adc
and
cmc
mov
or
mov
jg
inc
mov
ljmp
sti
repz
sub
mov
lcall
repnz
sub
add
and
daa
xor
jl
sarl
xchg
insb
popf
jmp
outsb
imul
es
pop
adc
std
adc
js
ja
and
cmp
push
xchg
in
pop
push
pop
or
push
push
lahf
adc
cltd
push
aaa
cmp
xchg
jl
or
push
dec
push
sbb
inc
mov
push
scas
test
or
gs
adc
popa
jp
mov
notl
pushf
inc
or
adc
sarb
mov
out
cmp
sbb
or
xlat
jnp
jle
movsl
adc
sub
and
stc
mov
or
push
inc
or
or
in
in
inc
or
push
sbbb
xchg
mov
xchg
cs
inc
loope
vmovapd
sub
mov
lods
cmp
adc
scas
xchg
xchg
inc
daa
xchg
or
fdivrl
loope
fucomp
rol
sub
dec
popf
fwait
ja
xor
flds
in
cmovle
es
pop
out
jle
adcl
mov
mov
call
sub
sub
jns
mov
lea
adc
je
js
fstps
dec
leave
mov
lahf
lcall
push
mov
push
xrelease
sub
lods
mov
sbb
mov
enter
or
int
push
hlt
push
popl
fwait
stos
xchg
pop
adc
js
adc
lcall
inc
test
sahf
pop
movsb
mov
in
lds
and
iret
jle
dec
sbb
push
in
cmp
pop
mov
inc
cmp
dec
or
ja
inc
leave
mov
inc
popf
xchg
push
push
je
jmp
mov
xchg
dec
cmpsb
xor
push
hlt
arpl
xchg
lahf
sbbl
repz
out
addr16
pushf
inc
dec
mov
addl
inc
mov
or
addl
push
jns
rcl
pop
jge
adc
repz
xlat
test
aam
xor
sti
push
movb
testb
rcll
xor
in
sbb
cmp
dec
icebp
pop
fwait
aam
sqrtps
mov
jecxz
mov
std
push
mov
mov
test
cmp
push
jl
repnz
sahf
jp
dec
negb
pop
xchg
scas
insl
mov
xchg
pop
pop
mov
aam
or
arpl
dec
xchg
lods
xor
sbb
jnp
shrb
pop
add
push
adc
or
jo
xor
pop
outsl
lock
std
ljmp
cmpsl
jne
js
cmp
mov
sbb
or
out
jno
inc
push
mov
bound
int
popf
int
jge
jbe
outsb
notl
pushf
jo
sbb
mov
fldl
lods
mov
enter
or
push
and
paddusw
pop
mov
sub
dec
adc
push
jno
insb
hlt
cmpsb
aad
jle
movsl
mov
ss
outsl
sar
xor
pop
cs
daa
int
lret
push
fwait
outsb
cmp
call
mov
outsb
pop
nop
push
pop
aad
jbe
test
dec
add
je
ret
mov
xchg
mov
add
xchg
inc
enter
sahf
in
xor
xor
or
pop
and
xlat
adc
leave
push
cmp
aas
scas
pop
jp
fisttpl
mov
jo
jns
jns
idivl
in
jle
inc
xor
shrb
pop
test
add
js
fs
mov
popa
dec
es
cmp
dec
fsub
adc
jnp
or
rcll
rcll
push
dec
popf
jne
ficomps
in
ds
fstl
lret
shll
arpl
dec
and
push
sub
dec
jbe
inc
sbb
out
cmp
mov
lods
jecxz
jo
fistpll
decb
xchg
sub
aaa
xchg
cmp
scas
data16
repnz
xchg
or
adc
in
dec
icebp
test
jb
adc
daa
cli
add
sub
mov
mov
sub
loopne
insb
sub
fwait
inc
push
into
xchg
cld
outsl
mov
xor
ds
cli
mov
loop
cmc
cmpsb
mov
xchg
mov
data16
adc
jmp
adcl
and
or
pop
mov
push
dec
movsl
dec
adc
dec
jnp
scas
jl
xchg
clc
inc
das
ret
adcl
data16
mov
and
popa
jp
xlat
xchg
cmp
dec
xor
mov
jg
sub
mov
mov
imul
out
cmp
sti
adc
iret
pop
push
outsb
mov
mov
cmp
es
inc
sahf
mov
sub
scas
popf
push
cmpsb
mov
in
dec
or
sbb
jp
ja
mov
fdivs
insl
push
movsl
iret
pop
movsl
aad
mov
adc
in
in
jle
aaa
nop
push
sub
sbb
in
mov
or
ficompl
jmp
dec
outsl
xchg
ret
mov
sub
fucomi
ret
fsts
mov
repz
mov
in
fwait
lret
jo
jle
rclb
push
cmp
stos
lock
xchg
or
xchg
movsb
inc
stos
popf
loope
jnp
scas
pop
pop
aam
push
out
jg
rorb
out
jle
in
inc
lcall
mov
mov
loopne
cmp
lds
pop
adc
out
and
jae
aas
scas
or
add
adc
ja
out
lret
into
adc
ja
push
push
cmpl
mov
dec
push
cmpb
inc
out
dec
scas
nop
icebp
icebp
mov
les
stc
jbe
rcrb
mov
out
sub
lods
lcall
js
test
mov
mov
jnp
push
and
mov
jmp
adc
push
cmp
movsl
pop
test
clc
cmc
aas
data16
jnp
jecxz
mov
frstor
jl
xchg
and
hlt
sbb
mov
sbb
stos
sbb
pop
cwtl
shll
xor
pop
cld
mov
cmp
sbb
cwtl
pop
mov
jle
jl
imul
stos
pop
fistpl
mov
lods
or
cltd
cmp
addr16
mov
call
mov
test
std
push
hlt
push
imul
xchg
mov
rolb
pop
lea
lock
cs
rcrl
icebp
ds
xchg
push
outsb
imul
cmp
pop
pop
or
int3
stc
dec
push
cmp
xlat
lahf
push
cli
mov
clc
cld
lcall
cmp
mov
mov
nop
pop
mov
inc
sahf
dec
imulb
negl
lods
mov
in
cmp
pushf
cmp
pop
push
mov
mov
cmp
lret
pop
shr
aas
mov
or
mov
xchg
out
xchg
das
xchg
pop
jle
outsb
movsb
push
clc
pusha
xor
sub
jno
adcb
outsb
xchg
adc
cmp
rcl
add
data16
aaa
out
popa
or
scas
mov
sub
jae
or
mov
mov
fisubs
add
inc
fwait
sub
add
data16
mov
fisubs
bound
jl
sbb
in
sbb
adc
bound
jle
ja
sbb
sbb
mov
xlat
xchg
nop
pushl
or
jb
dec
dec
jmp
xor
cmc
mov
mov
inc
aaa
cmp
xchg
cmpb
xlat
pop
ret
out
mov
cmp
enter
mov
jb,pt
xor
arpl
cmp
sub
mov
loope
divl
adc
push
add
pop
enter
fisubl
inc
sar
cmc
mov
lds
in
f2xm1
mov
fistpll
lcall
mull
stos
mov
mov
in
fisttpl
mov
out
pop
adc
sub
pop
sub
xlat
cmc
rcrb
lret
mov
or
add
pop
dec
mov
into
sbb
out
gs
arpl
into
push
ss
xchg
fisubl
jmp
ljmp
dec
out
and
in
add
push
mov
or
lret
pop
aad
mov
insl
or
test
mov
in
adc
testb
les
jno
push
into
test
mov
lret
mov
dec
mov
add
icebp
ror
mov
clc
inc
pop
sub
jl
nop
jle
xor
and
add
or
hlt
add
subl
inc
and
lock
leave
and
xor
mov
push
loope
stos
je
xchg
arpl
push
dec
add
insb
scas
pop
out
aaa
cmpsb
mov
dec
call
mov
sub
mov
cwtl
jmp
push
bound
clc
and
fdivl
cmp
movsb
jno
mov
adc
pop
int
mov
fs
aam
or
xor
addb
jno
mov
addl
stos
sbb
inc
fwait
push
out
mov
sarl
popa
mov
fcoml
test
mov
das
push
cmp
lods
lea
js
leave
into
jo
cmpsl
cmp
pop
and
jg
add
aas
mov
push
jge
leave
mov
idiv
sbb
cmp
aaa
ja
les
clc
mov
jb
lea
xor
cld
lret
mov
cltd
nop
insb
jp
shlb
aas
push
pop
out
pop
incb
jnp
std
mov
mov
add
jnp
pop
sub
dec
jb
icebp
fs
or
int3
mov
cltd
cmpsb
jne
aas
icebp
ljmp
dec
xchg
rcl
out
cs
nop
cltd
adc
sub
or
adc
and
lods
hlt
push
out
iret
or
mov
inc
adc
sbb
dec
les
cli
or
push
test
add
inc
or
sub
fmulp
orl
int3
add
cs
into
movsb
in
jge
jne
and
mov
push
insb
out
ja
insl
mov
jmp
xor
xchg
es
jae
test
mov
push
imul
pop
insl
gs
sub
cmp
loop
outsb
sub
pop
fisttpll
stos
loope
sub
add
cmp
cmp
aam
inc
sub
aas
es
pop
out
add
movsl
sbb
out
gs
fs
sbb
mov
mov
cmp
adc
popf
fsts
mov
ror
xor
jnp
jmp
arpl
popa
push
and
mov
push
test
xchg
adc
fdivrs
in
and
notb
pop
pop
lret
fwait
or
loopne
cli
lret
ljmp
imul
outsb
mov
xchg
jnp
ret
push
jb
xor
cmp
cs
mov
rcll
pop
and
ss
mov
sqrtps
mov
mov
addr16
fstps
outsb
xor
pop
dec
jl
mov
jg
cmpsb
loope
xchg
fstps
and
mov
movsl
and
mov
pop
jno
or
xchg
imulb
js
fstl
repnz
imul
popa
hlt
out
loopne
fidivs
je
stos
shrl
fidivs
xchg
and
movsl
push
popa
push
stos
add
enter
add
dec
mov
sti
and
pop
xor
cmpl
push
lds
dec
and
cwtl
sahf
stos
in
lcall
pop
jp
or
idivl
xchg
int3
or
push
add
pop
in
mov
call
adc
aaa
popf
in
popf
test
dec
or
je
std
dec
test
icebp
enter
std
icebp
inc
sbb
mov
xor
fists
push
in
repz
iret
xchg
subb
mov
les
out
sbb
aam
fadds
xchg
pop
and
xchg
clc
xchg
jmp
lds
adc
in
lods
adc
jecxz
repz
push
lcall
mov
ja
sub
repz
cld
insl
ljmp
cwtl
in
mov
jne
inc
xchg
int3
jle
sub
and
hlt
ja
incl
incb
test
add
mov
jae
les
jb
lcall
in
and
repnz
or
push
jns
cmc
aas
mov
jb
or
xchg
push
scas
xchg
adc
jae
mov
rorl
cwtl
pop
adc
lods
cli
pop
or
lds
jne,pt
xor
ja
jge
les
mov
pop
das
dec
mov
adc
mov
stc
mov
and
cmp
jmp
repz
jb
hlt
iret
cld
mov
and
fists
jns
repnz
pmullw
sub
gs
push
push
sbb
and
mov
mov
jae
push
jb
mov
cs
xor
icebp
or
int
imul
push
and
or
out
sbb
fcomi
xchg
xchg
dec
outsb
adc
stos
jl
stc
inc
cmp
cmp
out
mov
icebp
xor
dec
adc
icebp
xchg
push
xchg
sbb
xchg
subl
fs
adc
ret
hlt
or
stos
inc
mov
pushf
bound
lret
dec
xchg
pop
pop
lret
or
popf
jge
fdivl
adc
in
and
scas
jo
sbb
lds
gs
repnz
jne
ret
and
jmp
lds
mov
aad
inc
and
aam
mov
jne,pn
sub
roll
cmpl
cmc
jecxz
mov
sbb
sbb
sub
mov
aas
mov
sub
mov
pop
sub
cmp
fucomi
push
cmp
sbb
push
jno
push
inc
sbb
and
jne
and
fwait
mov
lods
pop
sahf
add
jecxz
pusha
popa
ds
mov
inc
fmul
addb
push
and
aam
insl
xor
push
loopne
test
cmp
rcr
dec
test
pushf
aaa
movsb
mov
or
lret
sub
loope
mov
sbbb
push
fistpl
loopne
ja
add
xor
mov
scas
fs
xor
aas
fldenv
xchg
test
shr
xchg
pop
mov
mov
cmpsb
mov
lods
idivb
lret
mov
ret
cmp
mov
inc
aad
jbe
sbb
mov
movsb
sub
mov
pop
daa
rclb
mov
mov
inc
mov
and
and
add
cltd
jbe
lret
sahf
bnd
aad
mov
cmp
data16
test
cmpsb
insb
pop
imul
inc
xor
iret
xchg
pop
mov
je
sbb
lahf
mov
xor
pop
sbb
inc
lods
fisubrl
and
sbb
imul
dec
adc
mov
jne
mov
add
out
rolb
imul
incb
jbe
and
fdivrl
add
rorb
lcall
pop
insb
xor
mov
push
mov
lret
jmp
mov
mov
xchg
addr16
pop
addr16
cwtl
jecxz
call
cmp
and
popf
ds
mov
sub
jo
fnstsw
shlb
jo
mov
lcall
out
outsl
xchg
addr16
movsb
push
sub
jmp
push
sbb
add
inc
shrb
cmp
lods
pop
push
cmp
dec
sbb
test
popf
nop
sar
fistps
push
enter
daa
dec
popa
mov
sbb
xchg
mov
gs
test
and
ljmp
lret
je
jbe
sub
pop
mov
inc
inc
out
sbb
or
mov
or
push
xor
inc
xchg
push
aad
mov
inc
insl
sbb
and
sbb
xchg
scas
pop
jp
xchg
jle
dec
sbb
jae
push
push
incb
ja
nop
stos
dec
xor
arpl
adc
sbb
je
in
jnp
addr16
sub
nop
inc
lods
insb
or
cmp
idivb
add
jp
imull
inc
sbb
dec
cmp
xchg
aas
into
sbb
jbe
data16
pop
es
lock
jbe
adc
pop
je
test
aam
pop
jb
sub
iret
dec
pop
adc
sub
pushf
jg
dec
in
xor
inc
dec
mov
mov
enter
push
jecxz
mov
adc
xchg
imul
stc
scas
jns
test
mov
and
test
adc
add
pop
scas
pusha
enter
xchg
addl
xchg
or
pop
pop
popf
lcall
xor
mov
mov
or
mov
aad
mov
jne
xchg
cmpsl
js
cmp
test
sbb
pop
lret
das
outsl
xchg
add
sahf
int
sahf
mov
cld
inc
fs
ss
ret
push
lret
sub
jbe
mov
sbb
inc
incl
or
outsl
js
call
push
int3
nop
adc
xchg
addr16
sbb
outsl
bound
push
or
cltd
inc
scas
icebp
sbb
jecxz
mov
or
scas
std
cmp
jne
mov
pop
mov
and
popf
dec
out
pop
xor
clc
add
call
rorb
orl
stos
and
or
out
movl
std
jnp
fnstsw
mov
clc
and
icebp
not
loop
inc
mov
addl
and
adc
fisubl
lods
aad
push
jge
pop
inc
jns
pushf
or
lret
jmp
incl
mov
aam
mov
jnp
cmp
lahf
pop
xchg
jp
dec
lret
and
aas
xchg
xor
sbb
movb
jle
mov
sbb
inc
pop
mov
sti
popf
mov
lahf
lea
xchg
stos
dec
aam
popa
sub
cli
mov
dec
jl
sub
scas
imul
aaa
and
pop
bound
into
or
fstps
into
push
xor
insl
notb
push
xchg
popa
jle
aaa
lods
popf
pop
lret
shlb
loopne
mov
divl
push
outsb
mov
mov
push
push
jae
dec
mov
dec
pop
push
enter
jmp
sbb
and
shll
imul
or
loope
pop
cld
pop
mov
into
or
cwtl
sbb
inc
js
mov
cmc
int3
fwait
push
push
inc
adc
cmpsl
imul
jmp
push
repnz
and
insb
ss
jp
jns
jbe
dec
jp
fcoml
sar
lds
cmc
pop
std
and
jns
out
adc
jle
or
jl
out
mov
xchg
lcall
mov
mov
dec
loopne
xlat
insl
and
outsb
sbb
popf
out
jmp
lds
adc
hlt
fmul
pop
rorl
push
adc
or
mov
sub
stc
cmpsl
rcrb
fisttpll
xor
test
repnz
or
aad
orb
imul
out
push
enter
out
shlb
cmp
arpl
faddl
lods
ds
sti
fnsave
test
icebp
cmp
mov
adc
sub
lret
fiadds
inc
xor
testl
fwait
dec
jae
in
fistps
jle
les
xchg
cmp
inc
push
push
popa
push
inc
add
jbe
and
addr16
pop
add
cmc
push
xor
fimuls
sarl
repnz
or
inc
add
xchg
sub
sub
pusha
icebp
cmp
fists
or
cmpsb
enter
insl
rclb
movsl
jmp
mov
sahf
ret
stc
daa
lods
jle
sbb
or
sti
mov
push
insb
int3
pushl
es
mov
mov
dec
fcoml
add
ss
xor
and
mov
add
push
add
into
cmp
and
sub
xor
and
and
adc
fwait
ret
and
adc
ja
leave
cld
xor
or
inc
jle
mov
scas
bound
push
hlt
test
pop
orl
cltd
adc
mov
pop
xchg
out
rorb
mov
daa
insl
sbb
and
hlt
outsb
jbe
mov
xchg
lret
popa
shr
pop
adc
sbb
pop
push
int3
mov
mov
xor
jp
int3
in
enter
jbe
or
xor
and
nop
ljmp
jge
dec
push
xchg
lcall
sub
push
scas
xchg
mov
icebp
or
addr16
mov
loope
pop
rorl
test
mov
stos
or
xchg
fs
sub
lds
insb
pop
clc
fwait
call
sub
mov
xchg
add
dec
push
xchg
clc
ds
xor
pop
push
pop
mov
or
mov
mov
xchg
icebp
test
fsts
inc
cltd
mov
xchg
aam
loop
dec
popf
shlb
jne
sbb
or
stc
sbbb
cs
add
pop
ffreep
mov
call
inc
or
stos
aaa
iret
sbb
push
mov
icebp
bnd
and
outsl
dec
data16
popf
into
mov
aad
into
test
dec
sbb
or
sub
popf
into
stos
cli
pop
pop
push
ss
pusha
arpl
out
ds
in
arpl
push
out
mov
lea
out
cmp
xchg
cmp
cmp
call
test
push
insb
mov
jmp
repnz
popa
mov
insl
hlt
push
pop
shrl
jno
add
call
jne
outsb
push
push
mov
int
mov
mov
mov
pop
pusha
call
sub
and
repz
sbb
or
scas
mov
gs
enter
jmp
or
or
jne
xor
jecxz
adc
xchg
mov
jecxz
jmp
mov
xchg
xchg
icebp
call
out
and
nop
loopne
push
or
inc
fst
test
ljmp
test
mov
mov
cmpsl
out
daa
daa
sahf
icebp
in
addl
outsb
addr16
rcrl
push
jp
ficompl
sub
fdivl
cmp
push
xlat
pop
fwait
loope
mov
xlat
inc
mov
xor
add
dec
gs
and
es
jno
cmc
mov
lock
leave
xchg
pop
adc
lcall
jnp
jle
mov
inc
repz
jno
iret
pop
sbb
mov
xchg
and
lock
fsubrl
cmp
sub
mov
dec
inc
imulb
xor
aam
pop
leave
inc
add
cltd
lcall
int3
push
adc
jle
arpl
xlat
or
into
mov
mov
shrb
cli
push
pop
inc
mov
mov
jp
fdivrs
and
sbbb
mov
sahf
gs
sub
repnz
mov
jo
adc
cmp
pop
fwait
jb
push
cwtl
arpl
lock
xor
ljmp
pop
mov
les
jns
mov
addr16
test
push
pop
imul
inc
rcr
cmpsb
rolb
pop
cs
push
jmp
mov
in
and
push
loope
sub
sub
add
mov
stos
or
sub
rorb
xor
cmc
or
mov
sub
leave
data16
adc
xchg
mov
arpl
pop
inc
mov
mov
fs
scas
push
lret
scas
ljmp
xor
xchg
inc
shr
shll
loope
xchg
repnz
jae
mov
add
mov
in
sahf
aas
cmp
dec
jbe
mov
cmp
push
int3
repz
in
sub
mov
into
scas
pop
mov
dec
sahf
push
gs
jae
xchg
dec
cmpsb
adcb
pop
mov
sbb
dec
mov
cmp
push
mov
clc
sub
and
test
jle
out
mov
in
dec
or
jne
mov
or
push
jl
xor
lret
lret
ret
adc
lahf
inc
add
je
xchg
mov
dec
jbe
mov
lods
jnp
fists
and
xor
lds
lahf
cmp
cmc
dec
sbb
loopne
sub
lret
push
mov
leave
hlt
mov
enter
mov
sbb
aaa
mov
iret
subb
push
push
shll
mov
mov
testl
sub
mov
movsl
adc
jne
pushf
sarl
cmp
mov
mov
pop
inc
xchg
aaa
dec
mov
dec
push
das
inc
or
pop
pusha
inc
mov
jge
pop
pop
fcmove
xchg
mov
fidivrs
insl
stos
mov
cld
jge
inc
ret
adc
jmp
lcall
and
cmp
cs
out
fcoml
sub
incb
adc
mov
cmp
dec
iret
dec
fxch
sbb
mov
aaa
insb
loope
loope
aas
push
push
in
and
lea
pop
sbb
sarl
sbb
push
dec
dec
stos
mov
pushf
cs
mov
sbb
adc
cmp
clc
pop
cmp
cwtl
ret
pop
mov
lock
arpl
push
popa
test
xchg
icebp
lcall
mov
fsub
mov
outsb
dec
inc
push
inc
arpl
inc
movsb
in
movsb
int
repnz
jmp
enter
lret
das
add
xchg
cwtl
or
je
dec
jg,pn
xor
xchg
cli
mov
scas
nop
push
in
mov
gs
pop
in
sub
inc
aas
or
rcrl
outsl
push
ja
mov
addl
add
jecxz
cmp
push
clc
jp
push
out
jae
ljmp
and
scas
scas
jb
fsts
sbb
adc
sbbl
out
cmc
sub
pop
into
inc
sbb
cltd
push
scas
jg
jns
insl
sbb
jecxz
xchg
and
inc
mov
pushf
inc
dec
jbe
loop
cmp
mov
in
add
pop
sub
out
mov
mov
hlt
jp
push
mov
jne
aaa
je
sarb
pop
insb
popf
fistpll
push
arpl
aam
push
pusha
subl
subl
fidivs
scas
and
test
movsl
adc
ja
sti
imul
or
imul
out
pop
aaa
push
loopne
fcoms
repnz
out
cmp
adc
inc
mov
or
pop
cmc
cwtl
pop
pop
iret
popa
out
jle
fsub
push
addb
aam
mov
cmp
imul
cmp
xor
mov
cmp
or
cs
insl
popf
aam
sub
cmc
adc
loope
sbb
rorl
int
xorl
sarl
cmp
sbbb
mov
sbb
ljmp
arpl
fsubrs
jne
mov
pushf
xor
out
rcr
jg
aam
jae
sahf
in
test
ja
lret
nop
lahf
adc
jle
or
sbb
and
notl
in
and
addr16
add
bound
push
js
sbb
lds
add
jae
jbe
pop
push
xchg
mov
xchg
aam
rcll
jl
out
sbb
sbb
lods
rcrl
or
cld
fcompl
mov
mov
pop
xchg
lods
lea
sbb
sbb
add
cmp
push
scas
jge
sbb
xchg
addr16
arpl
push
inc
add
aaa
inc
jl
mov
loope
int
inc
adc
pop
or
lds
mov
cmp
inc
xor
stos
inc
movsb
rorl
push
mov
pop
cli
mov
repnz
movsl
not
ret
insb
insb
adc
mov
dec
xchg
jb
mov
outsl
outsl
enter
xor
add
mov
leave
mov
cmc
loopne
inc
push
sbb
pop
movsl
sub
push
push
jl
jnp
pop
pop
mov
push
mov
incl
jecxz
ja
cmp
les
pop
xor
xchg
add
mov
mul
push
xor
cmp
pop
jg
push
ret
sub
cmp
aaa
push
cmp
pop
pop
fsubrs
sbb
mov
push
and
in
jmp
mov
xchg
cmp
fistl
ljmp
shll
adc
adc
push
jl
or
fwait
daa
jge
push
outsl
dec
sbb
ficompl
cmpsl
in
inc
mov
or
mov
lret
jg
pop
push
jmp
jmp
sub
std
sub
push
lea
loope
push
pop
push
pop
daa
insb
das
mov
adcb
push
adcl
ds
cli
mov
fidivrl
rep
arpl
dec
lret
ret
and
mov
xchg
sub
cmp
mov
je
dec
sarb
cmpsl
mov
int3
dec
dec
faddl
cmpsb
test
xchg
mov
push
cli
push
mov
xchg
insb
dec
std
xchg
mov
add
icebp
adc
mov
addb
sti
sub
push
cld
stos
adc
mov
push
mov
in
add
sbb
aaa
mov
adc
push
ret
jb
add
pop
cmc
movsb
or
mov
xor
insl
testl
scas
mov
cmc
arpl
imul
rorb
fs
outsl
jb
pop
xor
jnp
mov
pop
cmp
dec
or
mov
hlt
call
push
inc
cmp
sbb
mov
nop
push
add
sarb
or
mov
push
dec
imul
popa
jns
adc
xchg
test
xchg
or
in
mov
inc
mov
mov
stc
cmpsb
ret
cmpsb
ljmp
movsb
add
add
push
inc
or
xchg
or
pop
xchg
cmp
rcll
stos
pop
movsl
xchg
cmp
stos
test
repz
lret
adc
and
mov
cmpsl
mov
repnz
pop
pop
popf
push
inc
jle
mov
adc
fbld
stc
lea
out
mov
xor
jmp
lcall
mov
or
inc
and
adc
loopne
inc
inc
andb
add
lock
mov
out
xchg
lea
shll
test
cld
inc
dec
push
or
pop
std
pop
pop
pushf
sbb
in
mov
ret
movsb
inc
mov
xlat
int3
mov
mov
dec
adc
add
shlb
int3
sbb
xchg
jp
sbbb
div
mov
push
ljmp
mov
lret
xor
test
add
scas
test
jb
xchg
les
inc
sti
std
movsl
push
shl
cmp
sub
or
mov
xchg
clc
and
xor
xor
jo
cmp
js
xchg
dec
xchg
xchg
adc
push
rolb
and
jns
cmp
dec
call
das
add
xor
inc
mov
mov
test
cld
ja
loope
and
loop
scas
call
out
mov
imul
sub
sbb
out
cli
push
mov
lahf
dec
mov
jb
gs
mov
adc
test
or
int3
mov
push
fisubrs
inc
ret
and
or
ret
je
rolb
cmp
mov
ret
and
cmp
xchg
addr16
shr
push
aaa
add
sahf
xor
sub
dec
inc
sbb
clc
movsl
sub
scas
push
adc
xor
jmp
jp
adc
dec
test
cld
mov
lret
stos
loopne
sub
pop
pop
call
call
and
lea
pop
mov
inc
data16
mov
jge
add
loop
pop
shll
fsubrl
out
and
push
mov
cmp
adc
xchg
shl
cmpsl
push
jnp
add
fcompl
push
xchg
inc
sarb
pop
pop
mov
sbb
mov
add
test
hlt
fisubrl
stos
loopne
imul
lods
int3
pop
popf
xchg
pop
mov
aam
pop
inc
or
in
cmpsl
lea
dec
pop
sub
divl
ret
cmp
cmp
mov
push
scas
dec
ficoms
jp
sub
xor
or
pushf
into
cmp
test
sub
imul
xchg
lcall
sti
adc
xor
sbb
test
inc
ret
jnp
ret
sub
ret
xchg
or
dec
sbb
mov
cltd
inc
mov
sub
das
mov
and
xor
decl
mov
int3
inc
dec
inc
repnz
push
add
arpl
popf
mov
xchg
push
lcall
pusha
push
push
sar
dec
fimull
mov
adc
mov
insl
dec
outsl
pusha
mov
arpl
cmp
outsl
push
enter
sub
fstl
lds
fcompl
sbb
mov
cmp
gs
scas
pop
cmp
dec
sbb
xchg
imul
pop
jb
xor
xor
and
imul
in
fstps
fldenv
pop
mov
xor
xor
bound
insb
mov
ret
xlat
dec
and
dec
pusha
mov
aaa
cmpsb
add
inc
pusha
rorl
xor
or
scas
pushf
xchg
outsl
mov
shlb
cmp
test
aad
jae
stos
stc
out
movsl
popf
in
push
sahf
xor
lcall
xchg
push
mov
sbb
repnz
into
icebp
pop
mov
ss
add
rcrb
in
dec
and
inc
out
repnz
mov
out
push
cwtl
sub
out
imul
jmp
testb
data16
mov
push
push
scas
mulb
test
dec
mov
add
sbb
push
in
idivb
or
and
xlat
adc
popf
sbb
cmpsl
outsl
adc
insb
mov
inc
cmp
cli
jnp
inc
mov
aas
std
xlat
out
bound
or
out
pop
xchg
jmp
je
mov
rorl
dec
rcrl
lds
inc
lds
push
mov
pusha
lods
sbb
pusha
std
push
pop
scas
xor
idivl
jge
dec
jnp
sbb
mov
out
mov
xchg
das
mov
repz
aas
stos
loopne
jecxz
repz
in
stos
mov
adc
push
icebp
or
inc
aam
lret
jecxz
inc
orb
dec
clc
scas
inc
mov
push
stos
repnz
movsl
mov
sti
cwtl
push
jne
mov
pop
adcl
out
loopne
sti
inc
add
add
stc
adc
bound
cltd
testb
and
jb
mov
pop
add
imul
dec
fcmovb
sbb
push
in
fldenv
xchg
pop
mov
inc
imull
mov
test
dec
adc
sahf
repnz
gs
pop
std
dec
add
lods
testl
xchg
or
sub
pop
jle
loope
cmpl
inc
shlb
popa
fisubrl
lock
mov
pop
mov
js
adc
xor
adc
shrb
sub
mov
and
push
testb
or
push
add
dec
lods
dec
scas
mov
mov
sbb
mov
push
cmp
stc
fisttpl
cld
xchg
out
fs
loop
rcrl
xchg
cmpsl
call
shrl
xchg
and
sub
fmull
jbe
sahf
cli
hlt
in
add
cmpsb
xlat
mov
sbb
xchg
lods
or
nop
ffree
clc
arpl
mov
mov
pop
call
dec
xchg
mov
adc
add
movsl
inc
pop
in
les
add
mov
jne
xor
decb
sub
scas
fcoms
sub
sti
and
inc
sub
cltd
add
sahf
push
jge
jb
cmpsb
pop
arpl
int
push
pusha
mov
jmp
push
fsubs
fwait
jb
push
mov
dec
repnz
jns
and
mov
mov
jne
mov
ljmp
dec
adcl
mov
outsb
lret
push
mov
inc
insb
enter
cli
xchg
inc
inc
fcomip
push
shlb
add
or
mov
sbb
mov
push
nop
jle
in
lds
fs
jo
outsb
lock
shll
outsb
fisubl
xchg
ds
pop
mov
sub
mov
dec
lcall
xor
mov
sub
adc
push
je
and
cltd
shr
dec
mov
lret
mov
pushf
lret
cmc
movsl
rolb
sbb
dec
xchg
cmp
lret
dec
rclb
add
mov
in
arpl
movsl
or
enter
cltd
sub
add
je
push
xchg
cmc
xchg
dec
das
imul
cmc
sbb
mov
insb
jmp
pop
cwtl
hlt
sbb
int
stc
sub
xchg
xlat
iret
ret
addr16
popa
dec
lods
xchg
inc
in
add
cs
lret
loop
shl
mov
bound
aaa
push
push
ret
add
faddp
jbe
lcall
pusha
nop
lds
cmpsl
or
cwtl
aam
add
push
pop
xlat
sub
pop
lds
fldenv
icebp
cli
and
mov
nop
push
and
pop
repnz
pop
sbb
lea
lcall
int3
out
int3
pop
pop
mov
pop
cmp
imul
sahf
cmp
shlb
incb
aad
sarl
inc
push
js
je
test
movsb
std
ja
or
mov
insl
pop
inc
mov
pop
mov
aad
mov
pavgw
gs
fcomps
cmp
mov
or
arpl
inc
int
clc
popa
xchg
ja
repnz
dec
fwait
jmp
cmp
mov
and
mov
mov
mov
inc
cmp
or
sub
pop
rolb
inc
int3
aam
and
lahf
aam
mov
dec
push
mov
sbb
cmp
outsl
out
fs
mov
mov
orl
adc
in
jo
xor
xor
add
iret
mov
mov
inc
add
dec
cmp
nop
pop
mov
inc
jge
jmp
outsb
cli
sbb
mov
cmc
adc
out
mov
xchg
enter
adc
adc
test
scas
xchg
jl
dec
mov
gs
sub
sub
and
or
pop
cmc
push
ja
imul
and
push
xchg
jp
mov
sbb
bound
or
sub
cmp
or
cs
ret
jno
or
jg
cmp
adc
fisubrs
inc
sar
mov
pop
in
pop
mov
dec
cmp
adc
jae
lsl
mov
mov
xchg
les
or
scas
movsl
mov
lods
dec
int3
clc
imul
jmp
cwtl
push
xchg
pop
sahf
or
dec
sub
jl
shlb
int3
aad
lds
faddl
aaa
jl
imul
mov
cmp
adc
enter
xor
sbb
scas
lea
lcall
movsl
xor
or
fsub
mov
inc
xor
adcb
mov
or
jecxz
mov
jnp
cli
loope
iret
idiv
pop
cmc
divb
ja
xor
xor
popf
out
add
ret
das
into
jb
mov
cmpsl
mov
pop
outsb
push
inc
xor
dec
inc
pop
pop
adc
and
ficoms
sbb
movsb
xchg
cmpsb
stos
fbstp
xchg
popa
fwait
lods
sarl
add
fcmovnu
cmp
pop
fdivrl
ret
enter
cmpsl
jl
clc
aaa
or
lods
mov
in
sub
push
imul
cli
insl
cmc
outsl
std
push
pop
addl
dec
bound
dec
pop
and
lods
xchg
mov
aaa
in
insb
lret
stos
dec
adc
mov
or
movsb
sbb
out
xchg
adc
sub
push
xor
arpl
xor
bswap
or
daa
xor
movsl
mov
cmp
imul
dec
cmc
mov
ret
lcall
adc
jb
in
pusha
xchg
jnp
jge
push
cmp
add
mov
lea
loope
jle
out
test
js
adc
jmp
test
push
outsl
mov
adc
into
xchg
mov
add
sbb
mov
push
pop
sub
aas
push
lods
mov
mov
push
out
inc
mov
notb
inc
test
rcl
cmp
xchg
jb
fsubrp
pop
leave
fs
or
jb
and
xchg
popf
cs
or
jno
ja
stos
ljmp
stos
loope
jl
popa
mov
movsb
mov
data16
shlb
inc
sbb
dec
pop
fbstp
lods
cltd
inc
fisttps
mov
fnstenv
mov
mov
push
loop
mov
lods
sub
cmpsl
movsl
pop
cmpsb
mov
pop
in
cmp
imul
lea
inc
aas
push
enter
pop
cmpsb
dec
sbbb
xor
std
jmp
in
lds
lret
insb
dec
jmp
incl
scas
idiv
aad
addr16
cwtl
in
jge
xchg
popa
inc
push
xor
push
sti
out
fstl
xchg
std
fwait
cmp
inc
in
jle
cmp
mov
and
sahf
mov
movsl
pop
push
aad
sbb
jno
xlat
push
jle
ss
in
xchg
and
mov
add
in
cmp
push
mov
fnstenv
mov
sbb
mov
lfs
lcall
or
push
xor
lretw
lret
and
andb
aas
mov
push
aam
out
dec
sahf
scas
cltd
adc
mov
mov
out
inc
and
std
cltd
ss
jns
push
add
and
test
xchg
mov
into
jmp
cli
pusha
xor
movb
xlat
movsl
les
mov
dec
mov
std
cmp
addb
bound
cmpsb
sbb
mov
ret
stos
out
adcl
push
bound
in
xchg
or
or
rolb
ret
pop
addr16
jnp
add
sbb
add
lds
inc
in
not
aaa
dec
pop
inc
xor
cs
out
in
mov
push
cmp
fcmovnb
fs
imul
icebp
addr16
xchg
iret
imul
out
lahf
insb
stc
sbb
sbb
loope
or
sbb
mov
cmc
lea
xor
rorb
imul
jmp
jbe
add
jle
cmp
lret
fdivs
adcl
push
add
les
jmp
sub
xchg
jmp
gs
adc
notb
sbb
and
ret
dec
cltd
mov
adc
mov
xchg
data16
cwtl
mov
adc
jb
cmpsl
es
add
sbb
ja
xchg
das
add
dec
sub
mov
adc
stos
push
inc
pop
inc
test
push
fisttpll
and
xchg
xchg
push
cmp
test
repz
jle
sub
pop
sbb
enter
jl
push
jp
stos
xorl
addb
clc
dec
push
mov
mov
dec
test
pop
iret
les
inc
arpl
ret
outsl
arpl
data16
aad
jp
mov
movsb
mov
sbb
fwait
cmp
cli
xchg
mov
enter
adc
mov
mov
testl
sbb
push
ret
loopne
xor
or
cmpsb
aad
inc
sbb
dec
mov
adc
int3
pop
xchg
aaa
or
sarl
mov
mov
mov
testb
or
fsubrs
push
pop
insl
popf
dec
mov
mov
shrl
hlt
int3
shl
aad
mov
cs
lea
lods
dec
icebp
mov
mov
cli
out
jnp
adc
into
rolb
jno
add
popf
fcmove
pop
xlat
mov
xor
out
or
inc
and
les
adc
fldcw
les
mov
clc
insl
jl
hlt
fcompl
sub
jne
jno
jl
push
mov
testl
mov
add
or
fstpl
jl
jb
fwait
or
lahf
out
xchg
jp
xchg
cmp
jne
outsb
xchg
and
mov
jnp
sub
stos
jns
daa
push
jb
jo
lock
sbb
cmpsb
test
sti
push
in
fstpt
mov
add
idiv
stos
ret
add
fisubrl
xor
jnp
xchg
adc
negl
lea
xchg
test
in
sbb
and
mov
int
and
xchg
in
and
out
cwtl
cmc
jnp
out
mov
ret
add
xchg
les
int
pop
cltd
push
and
js
pop
push
jbe
pushl
xchg
outsl
cmp
fbld
push
test
add
out
xor
dec
test
js
negl
arpl
cld
pop
cmc
mov
lea
sbb
xor
sub
out
int
xchg
jns
push
mov
cmpsl
cmp
mov
es
addr16
test
adcb
pop
pushf
jo
push
int3
sub
jmp
xor
mov
shlb
jl
or
scas
test
jp
inc
add
or
push
repz
xchg
lret
cmc
push
mov
arpl
xchg
cmc
cmc
out
outsl
hlt
or
gs
jno
popa
lcall
mov
bound
icebp
inc
mov
xlat
push
and
mov
sbb
test
loop
mov
add
push
decl
shlb
push
dec
inc
jb
mov
outsl
sbbl
in
aas
or
lahf
add
hlt
movsb
lds
stos
inc
nop
imul
cmpsl
pop
jmp
ljmp
mov
adc
push
push
scas
pusha
pop
push
push
icebp
mov
movsb
push
sbb
fisubrl
fs
xchg
int3
mov
aam
and
xchg
icebp
pop
imul
jne
repz
mov
inc
jg
je
divl
mov
nop
xchg
repz
outsl
ret
push
xchg
pushf
or
lods
dec
adc
adc
xorb
xchg
pop
lahf
icebp
pop
mov
and
ret
cmp
movsl
mov
mov
push
pop
xor
push
loop
and
jno
mov
xor
mov
jns
popa
mov
dec
pushf
leave
cld
mov
push
sbb
stc
lods
pop
in
adc
pop
jnp
imul
loop
leave
xor
dec
jbe
sub
xchg
negl
cmp
imul
add
inc
imul
add
pop
dec
in
mov
das
out
pop
mov
mov
outsl
add
in
jecxz
mov
cmp
mov
dec
mov
ss
cli
jge
pop
cmovg
int3
mov
js
in
ret
enter
xor
in
jo
jg
xchg
test
sub
add
outsl
testb
out
inc
add
mov
ds
in
inc
stos
sbb
addl
je
and
mov
out
aad
mov
out
clc
xchg
sbb
fsub
gs
sbb
mov
push
rcrl
jp
stc
push
xchg
popf
push
xlat
out
gs
in
mov
enter
xchg
push
jbe
push
cmp
add
mov
sbb
subb
fiaddl
sarl
jbe
nop
mov
jnp
in
fistl
sub
fdivrs
lds
add
jno
mov
je
push
outsb
aad
scas
pop
daa
mov
add
sbb
iret
xchg
les
lret
pop
sahf
imulb
adc
mov
mov
and
filds
andl
xor
ljmp
jb
ficoms
sub
cwtl
push
xchg
shll
bound
dec
jbe
fidivs
aaa
pop
daa
test
or
out
and
sbb
jbe
dec
adc
cmpsb
out
mov
nop
dec
sbb
ret
or
loope
adcl
xchg
jae
icebp
stos
mov
testl
or
xchg
aaa
sbb
repnz
mov
lds
sti
adc
cmpl
and
leave
fistpll
int
out
push
pop
push
jg
insb
je
sub
mov
jae
or
mov
sbb
xlat
cld
ret
and
lret
jle
push
cltd
iret
lcall
outsl
push
daa
cmp
sbb
mov
mov
sbb
push
jae
fs
out
pop
std
cmpl
popa
in
fisubs
sub
fdivr
cmpsl
pop
or
jo
xchg
pop
pop
imul
xor
jns
push
movb
mov
xor
cs
or
add
loopne
inc
pusha
aas
lret
xor
cltd
daa
add
mov
pop
cld
in
dec
xchg
jo
xchg
js
cmp
cmp
mov
enter
jmp
push
xor
xchg
jmp
subl
ja
mov
lea
ret
test
jns
mov
mov
cld
fdivrs
jge
fwait
push
rolb
lods
pop
movsl
cli
sbb
xchg
inc
jp
add
movb
or
rclb
jecxz
push
push
pushf
lret
mov
dec
push
push
repnz
add
cli
mov
sbb
push
mov
jnp
mov
pop
mov
fmuls
incb
pop
test
or
dec
and
xchg
jnp
pop
sub
cmp
inc
adc
sub
cltd
xchg
repnz
int3
jmp
sahf
scas
cmp
lret
movsl
push
push
sub
cmp
stos
xor
xchg
push
sar
das
jns
sub
pop
les
sbb
sbb
jnp
imul
cmp
xor
jg
stos
or
mov
shlb
shlb
sahf
sub
xchg
std
inc
fldl
xor
and
loope
push
test
mov
mov
or
test
int
sysenter
jns
das
into
call
loope
lea
add
and
data16
sub
sahf
or
or
and
rcrl
xchg
jmp
and
and
dec
lcall
insb
cmp
nop
mov
scas
pusha
jne
jne
scas
dec
call
out
in
cmp
mov
bound
fisttps
or
sbb
out
mov
repnz
jnp
push
xchg
lret
sbb
stos
in
shrl
clc
out
pushf
jne
cmc
scas
icebp
jmp
lods
jmp
outsl
dec
loop
ljmp
loopne
mov
in
pop
pop
arpl
jp
or
pop
insl
ret
or
jns
adc
mov
leave
pop
inc
push
enter
out
stos
notb
xor
fisubrl
xor
sahf
pop
int
clc
push
outsl
inc
std
pushf
movq
mov
cmp
xor
inc
icebp
sbb
xchg
cmpsb
sub
lea
test
pop
or
pop
pop
mov
hlt
add
outsl
cmp
jae
cmp
cmpsb
into
push
push
add
mov
add
add
jmp
or
es
push
fiadds
cmp
push
push
ss
jb
imul
add
xor
fmull
je
push
adc
sub
xchg
shrl
das
push
insb
jbe
mov
inc
iret
sti
cmp
popf
iret
iret
leave
and
pop
stc
cmc
xchg
cmc
popf
lea
adc
xchg
or
aam
fisttpl
leave
scas
ds
fwait
iret
or
cmpsl
pop
fidivl
mov
xchg
jmp
aad
mov
pop
and
popa
out
lock
fst
lods
stos
mov
xchg
gs
lcall
dec
loopne
or
insb
test
adc
jno
xchg
fidivrl
movsl
cld
lahf
adc
scas
push
and
inc
ss
adc
repnz
lret
xor
add
loop
data16
insb
rcll
adc
pusha
push
add
mov
movsb
cmp
pop
add
mov
or
jns
and
in
mov
icebp
sub
std
clc
test
mov
or
inc
add
pushl
fdivrs
mov
in
cmp
mov
xor
rcll
xchg
push
adcb
jp
enter
dec
adc
mov
lods
mov
sbb
leave
push
shll
fimuls
or
icebp
cmp
pop
sbb
sahf
and
and
jp
test
mov
mov
lahf
sti
push
jecxz
or
into
inc
lret
sbb
mov
fisttpl
add
sbb
add
and
mov
mov
fwait
adc
in
jne
mov
test
and
cmp
movl
out
pop
mov
in
out
out
test
lock
xor
imul
dec
divb
jl
adc
movsl
lahf
push
scas
or
mov
outsl
dec
inc
js
sbb
mov
push
jo
adc
sbb
hlt
xor
pop
loop
xchg
cmp
les
adc
or
push
jecxz
repz
inc
mov
sbbb
insl
jnp
cmpsb
or
ss
lret
out
sub
into
mov
shl
fmull
dec
mov
test
mov
pusha
xor
lds
push
jmp
lahf
or
dec
lret
outsb
jg
xchg
adc
or
adc
jnp
stc
pusha
jl
dec
push
mov
adc
dec
out
pusha
into
imulb
jge
mov
stc
dec
iret
and
insb
imul
test
jg
test
jne
shll
scas
push
jl
cwtl
sbb
xchg
mov
insb
mov
inc
insl
xor
or
xlat
push
pop
in
sub
mov
cmc
sbb
and
and
aam
out
movsl
inc
inc
aas
fdivrl
add
push
movl
stos
imul
roll
loopne
mov
fsubrl
aam
aad
adc
lods
pop
scas
push
sarl
inc
in
sbb
mov
mov
ret
scas
and
sar
push
xchg
push
adc
pop
jmp
or
bswap
outsl
adc
pushf
mulb
sbb
lods
mov
mov
add
adc
ret
scas
in
ss
and
xchg
mov
aas
test
or
mov
mov
sahf
mov
repz
das
cli
inc
mov
rcrl
inc
push
sub
aam
loope
and
lods
xchg
stos
insl
xchg
pop
scas
bound
mov
jne
add
jne
xor
popa
inc
fwait
stos
incl
fxch
pop
cmpsb
pop
push
mov
aas
loope
ret
dec
inc
cmp
sahf
scas
scas
or
xlat
gs
lret
sarb
orl
stos
dec
adc
add
dec
test
mov
lret
imul
mulps
in
cltd
arpl
xchg
subl
mov
adc
mov
sbb
push
ljmp
in
dec
inc
add
dec
outsl
movsb
icebp
ss
xor
lds
push
xor
pop
jle
sbb
mov
addl
data16
mov
or
sub
inc
xchg
jnp
dec
and
xor
lock
cld
ljmp
push
xor
pop
ljmp
ss
mov
incl
fcom
outsb
xchg
inc
test
movsl
jle
mov
mov
and
faddl
mov
imul
xor
fimull
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
in
pusha
push
fidivrl
adc
lret
mov
scas
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
cmp
cmpsl
fildll
adc
push
out
pop
fisubs
fsubrl
pop
loopne
adc
xor
fidivrs
xor
adcb
cmp
inc
stos
xor
test
jge
adc
lods
pop
arpl
and
movsb
push
jb
push
lahf
mov
ja
ljmp
lret
sub
sbb
add
cmp
or
xor
les
movsb
dec
jb
push
lahf
mov
dec
ja
lret
adc
aas
clc
pop
mov
jne
addb
pop
test
sbbb
sbb
inc
int
adc
int
out
movsb
adc
xor
jge
adc
jp
cmp
mov
filds
mov
stos
adc
xor
jge
adc
xor
scas
add
xor
jge
adc
xor
sub
pop
faddl
movsl
cmp
stos
pop
fcoml
mov
scas
add
xor
jge
adc
rcrl
adc
jl
cmp
mov
mov
scas
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
sbb
data16
mov
scas
mov
lock
call
mov
mov
frstor
mov
mov
scas
adc
mov
mov
scas
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
xor
jge
adc
mov
scas
adc
lret
or
bswap
mov
aas
insl
imul
add
cltd
repnz
int3
mov
push
adc
int
mov
ljmp
jmp
out
fwait
cld
shll
pushf
sub
fdivrl
std
jbe
fdivl
popf
jns
lcall
mov
insl
test
push
xchg
jl
mov
mov
idivb
into
cwtl
shlb
movsb
push
dec
cs
push
jb
mov
or
aas
repnz
aaa
xchg
lods
int
mov
pop
or
sti
adc
insl
orl
imul
pop
popf
loopne
dec
testb
enter
insl
fnstenv
inc
pop
sub
sbb
mov
xchg
add
and
pop
js
cmp
cltd
xor
popa
mov
add
mov
dec
gs
mov
stos
flds
shll
fnstcw
adc
and
ss
jnp
adc
test
inc
sub
or
dec
in
fisubrl
scas
dec
dec
mov
decb
xchg
psubd
cmp
out
aas
and
mov
test
add
and
popl
inc
jae
and
rolb
push
imul
mov
and
xor
cmpsl
sbb
fldenv
icebp
in
jno
lods
fsubrl
fistps
sub
sbb
call
cli
movsl
or
sbb
xor
mov
mov
mov
xor
mov
sar
cmpsb
lods
jecxz
jno
dec
sbb
push
test
je
mov
jge
jnp
jg
std
fucomip
sub
mov
inc
inc
pop
enter
daa
ror
sar
stos
pop
fisubs
ret
aas
jno
and
inc
enter
xlat
lods
xlat
adc
jg
clc
xor
push
into
cltd
repz
aas
jle
out
jbe
out
xchg
nop
xchg
sbb
fs
ss
into
push
lcall
pop
mov
cmp
ficoml
xchg
xor
bound
inc
mov
jno
cltd
test
imul
xchg
adc
shl
addr16
jns
sub
push
mov
dec
jno
lds
mov
test
mov
int3
add
icebp
iret
add
inc
lea
nop
xchg
out
out
dec
push
repnz
pop
adcl
outsb
or
lock
xchg
cmp
bound
pop
or
inc
cmp
cwtl
test
mov
add
add
dec
adc
ds
repz
ljmp
pusha
lahf
out
adc
fidivs
popf
lea
lods
add
rcr
in
mov
adc
push
jbe
lock
dec
mov
jmp
jp
in
outsb
popa
pop
mov
cli
and
or
mov
ja
dec
rclb
std
fdivs
in
push
add
push
cwtl
iret
outsl
push
inc
scas
push
lea
mov
call
into
pop
push
cld
jae
into
int
fcomps
fnstcw
in
insb
sarl
push
fs
popa
mov
mov
sti
ret
hlt
xchg
sbb
pop
jb
xorb
test
lret
daa
scas
arpl
clc
inc
lods
jbe
mov
dec
imul
jecxz
sub
mov
lret
pop
pop
outsb
in
push
mov
lcall
test
sub
fwait
push
gs
cmpsb
int
sbb
mov
dec
js
outsb
jge
pop
jecxz
test
mov
jecxz
in
test
add
mov
repnz
pop
and
xchg
inc
mov
jecxz
xor
repnz
sbb
call
xor
jle
adc
loop
push
nop
lods
inc
sti
push
sti
fimuls
mov
jo
dec
frstor
dec
cmp
int
jns
out
cmpsb
mov
enter
inc
das
mov
push
cmp
sbb
dec
cmp
inc
jne
cmpsl
and
fisubs
lock
or
add
mov
popf
mov
or
sbb
mov
nopl
dec
dec
pop
ja
jo
shlb
subb
imul
jb
mov
pusha
jno
and
push
out
out
adc
sbb
push
pop
sbb
cmp
movsb
sub
xor
mov
es
sti
test
cld
push
jae
push
xchg
lahf
movsl
js
add
pop
daa
sub
ds
test
call
sub
test
repz
or
or
aas
mov
xchg
xor
scas
cmp
in
mov
jno
insb
jbe
pop
adc
pop
rcrb
or
nop
daa
mov
lret
and
jne
pushl
clc
aad
dec
adc
pop
xchg
lods
aas
xchg
jne
shlb
ss
test
cmpsb
sbb
push
push
icebp
xor
jo
lds
sbb
stc
mov
in
mov
jge
xor
sbb
inc
adc
sub
lret
test
mov
rol
stos
jo
push
cmpsw
push
jbe
or
mov
mov
xchg
fwait
ja
push
test
or
and
shr
nop
dec
pop
daa
jae
imul
sub
dec
or
and
into
jnp
pop
push
or
add
jle
cmp
dec
loope
jp
repz
push
dec
pop
sub
popa
jb
sbb
inc
aaa
fbstp
scas
add
or
and
outsl
adc
mov
jle
ss
pop
lock
call
leave
ficoms
in
adc
mov
xchg
ret
mov
add
push
add
icebp
shl
repnz
cmp
dec
xchg
loop
mov
xchg
push
add
fstpt
pop
push
jae
insl
push
addr16
rorl
negl
clc
add
dec
std
jp
iret
add
aas
js
lods
ljmp
ficomps
xorb
and
pop
pop
test
xchg
inc
sbb
shrb
pop
ficomps
fcomps
add
push
jg
out
je
mov
mov
iret
push
ljmp
sub
sbb
std
vaddsubps
mov
and
insl
fistpl
sub
cmp
pop
xchg
xchg
lret
imull
lods
mov
and
fcomps
rep
xor
lock
mov
out
repnz
cmpsb
xlat
mov
sbbl
xchg
sub
cmp
in
in
fldl
sbb
add
pop
inc
lds
adc
inc
mov
imull
stos
stos
xchg
inc
mov
fwait
jecxz
mov
test
mov
out
out
repnz
sti
dec
jne
cs
jle
mov
jb
mov
xchg
pop
lcall
daa
sbb
adc
or
push
loop
test
movsl
cld
jno
lods
mov
sbb
mov
sbb
xchg
mov
or
jp
or
iret
mov
sub
repz
sbb
jb
adc
bound
xchg
nop
mov
scas
aas
mov
mov
dec
jmp
pop
inc
jns
cld
dec
push
push
lret
or
testl
cmpsl
mov
aas
xlat
mov
jae
insb
pop
add
leave
lret
jge
xlat
dec
and
or
pop
shrl
cmp
lret
fstl
stos
xchg
jno
add
mov
loopne
ds
out
daa
cs
inc
xchg
sbb
add
inc
movsl
outsb
outsl
pop
cld
idivb
or
jb
push
lcall
test
adc
xchg
sub
fwait
mov
je
sbb
push
dec
mov
shlb
mov
clc
dec
adc
inc
xchg
mov
inc
jnp
xchg
xor
and
mov
in
mov
insb
inc
divb
xor
xchg
or
cmc
mov
inc
inc
imul
sti
daa
loope
aad
pop
out
xor
xchg
bnd
xchg
stc
dec
cwtl
jge
pushf
add
cmpsl
and
push
aaa
gs
push
dec
sub
iret
movsl
xor
in
cmp
loop
daa
cli
mov
or
or
leave
hlt
adc
imul
push
mov
dec
add
pop
adc
pop
add
pusha
inc
cmpsb
lcall
loope
inc
addb
mov
push
add
test
inc
push
mov
pop
vpcmpeqw
mov
popf
push
subb
les
mov
add
xor
aas
xor
push
movsl
inc
xor
rorl
fldl
sub
dec
popf
adc
xor
jmp
inc
jge
stc
mov
dec
cmp
jmp
jecxz
aas
pop
inc
scas
xor
push
mov
jno
xor
rolb
cmpsb
sbb
sub
pop
mov
mov
inc
xchg
popl
sbb
xor
jge
mov
test
or
jge
dec
das
shl
das
cli
xchg
ss
cwtl
and
daa
push
ret
xor
hlt
jge
pop
pop
out
or
jp
xchg
push
addr16
sbb
push
pop
lods
mov
and
add
out
mov
mov
aam
fidivrs
jb
fwait
aam
mov
cmp
dec
test
imul
add
push
int
dec
gs
fs
jg
xchg
out
xor
push
je
ffreep
pop
add
xchg
movsl
push
adc
test
scas
loope
xlat
dec
icebp
push
adc
jns
fdivp
mov
mov
gs
outsb
dec
adc
sbb
stc
nop
mov
in
sbb
movsl
sbb
fs
sub
jae
addl
xorb
sbb
and
in
jle
push
xor
dec
push
inc
lcall
sub
dec
add
xchg
sbb
nop
and
jbe
roll
jecxz
cmp
lods
sbb
fsts
jns
pop
and
movsl
mov
sbb
je
stos
imul
out
rolb
dec
mov
push
pop
call
pushf
push
dec
xor
adc
and
or
int
jb
in
mov
xchg
scas
xor
lods
add
ljmp
push
fimuls
dec
push
push
sbb
shrl
cmpb
sti
xor
fs
pop
lcall
ficompl
in
sarb
sarl
push
xor
stc
dec
xor
repz
pop
mov
cmp
arpl
and
nop
add
push
decb
lcall
sti
cmp
aad
cmp
mov
rolb
sub
in
ljmp
push
inc
jge
hlt
and
rolb
inc
into
int
sub
int
push
icebp
outsl
and
push
xchg
inc
dec
mov
daa
and
adc
lods
lcall
or
jns
inc
mov
mov
popa
cmp
and
movsb
pop
cmpsl
xor
sahf
fdivrl
or
mov
in
adcb
xchg
push
sub
fnstcw
cmc
negl
cwtl
pusha
fistpll
mov
pop
imul
pop
fcmovnb
imull
xor
push
lods
and
dec
mov
xor
jle
push
sbb
cmp
jno
dec
add
lret
dec
mov
nop
movsl
movsl
mov
xor
mov
movsb
add
adc
daa
and
repnz
adc
and
and
jae
lods
cld
add
idiv
push
imulb
cltd
inc
sbb
cmp
dec
jbe
pop
xchg
jg
adc
xor
add
rorb
jmp
pop
jne
inc
adc
mov
and
add
sub
xchg
pop
ret
shll
lret
inc
fwait
and
aaa
adc
adc
mov
stos
and
ss
add
mov
aas
inc
or
jbe
enter
and
movsb
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
