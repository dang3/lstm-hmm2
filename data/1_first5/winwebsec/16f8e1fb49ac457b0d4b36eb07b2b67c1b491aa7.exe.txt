cmp
xor
inc
and
sbb
sbb
mov
jne
adc
jae
mov
inc
daa
movl
loope
cwtl
pop
iret
xchg
mov
fsub
lods
xor
adc
shl
cmp
leave
xchg
add
imul
dec
cli
mov
ljmp
sbbb
stos
cltd
lods
adc
cld
mov
mov
lock
jb
dec
inc
imul
movsb
test
cmp
lahf
pop
test
adc
mov
sbb
pop
movsl
jmp
shl
mov
add
mov
call
push
aad
mov
movsl
popa
xchg
xchg
jno
mov
in
mov
loope
sti
iret
xchg
std
xor
lock
test
stos
mov
lret
pop
pop
mov
cld
add
jae
or
cmp
leave
push
fmul
mov
mov
in
stc
dec
fsubrs
aaa
inc
dec
lcall
scas
cmp
sub
mov
insb
jp
add
jmp
sbbb
cmp
lds
xchg
pusha
iret
insb
gs
or
xlat
into
cltd
sbb
pop
ljmp
xchg
stos
mov
addr16
push
insl
cwtl
cltd
mov
jb
push
jle
orb
inc
pop
stos
jecxz
lock
push
xlat
jne
in
xchg
pop
adc
add
mov
mov
enter
rcl
inc
insl
and
dec
adc
mov
popf
pop
pop
lret
addr16
fdivrl
adc
xchg
popf
aam
stc
dec
fistpl
add
inc
and
xchg
sbb
out
incl
jmp
cli
adc
daa
ss
and
pop
dec
cmp
fisttps
inc
test
popa
mov
aas
or
ret
pop
imulb
push
cmp
sbb
fsubs
add
mov
push
add
mov
mov
xorb
outsb
subb
sbb
lahf
in
push
in
outsl
and
adc
rclb
push
mov
dec
ret
in
push
lcall
pop
jae
call
inc
xchg
mov
rclb
scas
std
or
jbe
push
xlat
xor
es
lea
insb
adcl
cli
mov
mulb
cli
jnp
ds
sub
addb
cmpsl
mov
sbb
cltd
loope
push
loopne
and
mov
imul
pop
out
jbe
mov
lock
mov
cltd
sbb
pop
fmuls
mov
cmp
cli
lret
pop
pushl
xchg
test
loop
sahf
jmp
or
push
sbb
add
repz
jne
into
rcrl
mov
adc
cmp
je
mov
push
dec
insb
clc
je
lds
cmp
pop
jg
xchg
sbb
mov
sbb
fnstsw
aas
mov
test
js
fwait
add
es
and
cmpsl
mov
adc
repnz
sbb
das
lahf
or
shlb
popa
push
mov
bound
xchg
sahf
in
push
lods
popf
push
push
out
into
mov
jns
ret
out
sbb
lock
sarl
mov
sub
and
jne
aam
dec
mov
cmp
mov
mov
test
push
fs
rclb
or
sub
add
push
movsl
sarl
sar
int3
mov
ja
scas
pop
fwait
fwait
jnp
xor
mov
cld
and
jnp
xorb
ret
add
in
adc
test
xchg
stc
test
ljmp
fisubrs
jmp
push
mov
int3
or
push
pop
and
in
adc
aas
jbe
repnz
mov
dec
sahf
cli
in
sub
jecxz
movsb
in
jno
xor
sbb
repz
jns
movsb
scas
iret
in
pop
and
addr16
jo
daa
fdivs
push
dec
enter
stos
sbb
imulb
adc
shlb
push
mov
jecxz
dec
mov
mov
rorl
out
mov
fwait
lods
inc
in
or
and
test
pushf
dec
jg
pop
mov
addr16
pop
and
mov
out
push
je
and
clc
sbb
sub
je
movsb
cmpsb
rorl
aam
mov
imul
out
or
xchg
dec
or
inc
xchg
mov
out
mov
leave
jle
dec
movsb
and
out
popa
mov
push
fucom
pop
stc
pop
push
push
cmpsl
sbb
loope
daa
test
mov
setnp
pop
xchg
fadds
sti
je
xor
mov
jmp
jp
int3
inc
int
xchg
or
mov
dec
aad
mov
jo
sub
mov
ss
cld
orl
cltd
add
adc
clc
add
aam
jne
aaa
cltd
mov
sbbl
clc
mov
xchg
shlb
xchg
adc
dec
lds
mov
mov
jge
mov
sub
push
mov
mov
mov
cld
pop
inc
cmp
gs
xor
aad
aas
sahf
dec
in
adc
mov
loope
and
fsubrs
rorl
push
pushf
mov
jl
xor
cmp
leave
mov
or
loope
xor
cmp
inc
popf
sahf
adc
das
ret
dec
loope
rcll
mov
mov
fs
negb
cmovge
xor
sub
or
repnz
fwait
mov
into
ds
fwait
mov
inc
xor
test
add
fsubrl
dec
xchg
or
sub
adc
mov
ljmp
xor
xorl
rcrl
mov
adc
xor
pop
loop
mov
adc
inc
xor
sbb
mov
js
pop
fistpl
add
push
jbe
xor
and
add
aaa
mov
cmc
mov
out
scas
cmp
stos
pop
push
add
xchg
jmp
push
sub
dec
push
xor
lcall
dec
aaa
out
xchg
sahf
xchg
data16
or
mov
adcl
outsl
or
xor
loop
jl
pop
xor
jo
aad
add
push
or
jp
fcom
jecxz
mov
dec
in
xor
push
jg
sub
pop
push
cs
pop
jmp
adc
sbb
mov
out
out
test
hlt
inc
les
es
mov
stos
add
loop
mov
or
mov
addr16
rcrl
dec
cmp
scas
lds
out
cli
cmpsl
sbb
mov
fnstsw
inc
push
jno
cwtl
mov
in
mov
insb
daa
loope
movsb
sar
sbb
sarb
jno
jle
loope
jnp
lret
mov
pop
jmp
outsl
inc
pop
dec
and
repz
pop
mov
fs
pop
movsb
cmpb
lea
lcall
jle
push
je,pt
out
mov
rclb
sbb
inc
mov
add
in
aas
sbb
xchg
std
lods
aas
cmp
and
rep
cld
push
fadds
aam
dec
inc
fbld
inc
sub
pop
dec
ret
mov
sub
jmp
inc
mov
mov
jmp
and
sub
int
sbb
cmc
fs
lods
ljmp
mov
loopne
xchg
outsl
es
shll
repnz
pop
rorl
ljmp
mov
lods
xor
sbb
and
push
cmp
xchg
outsb
cmp
aam
lock
not
pop
pusha
sbb
std
mov
jp
cmpsb
mov
xchg
mov
lret
mov
dec
add
hlt
icebp
jbe
mov
xchg
and
retw
into
in
or
pop
jo
push
iret
pop
in
jo
into
aaa
mov
mov
pop
add
loop
cmp
jo
jbe
xchg
addr16
sbb
xor
cmp
icebp
insl
lea
aam
sub
lds
mov
call
jge
add
adcl
mov
fwait
cli
sbb
ljmp
pop
jp
ret
data16
sub
ret
int
pop
ret
int3
jp
imul
jle
or
ja
adc
fcoms
xchg
mov
push
mov
loope
scas
pop
out
cltd
jmp
inc
inc
push
scas
xchg
sub
adc
xchg
mov
jge
add
mov
repz
jmp
cli
test
int3
bound
or
outsl
push
test
dec
aaa
mov
push
out
mov
cmpsb
or
and
pop
fsubs
lret
jge
js
or
xor
rcll
mov
lods
inc
ret
out
xchg
sbb
mov
mov
stc
enter
jnp
mov
lds
xchg
sub
mov
sahf
add
jmp
add
push
mov
sub
daa
jg
movsb
dec
dec
dec
dec
in
sbb
xchg
push
push
jmp
jl
mov
negb
or
push
popf
ljmp
dec
mov
jge
xchg
sahf
cmp
enter
sbb
push
lahf
lods
jge
cld
xchg
test
cmpsb
jnp
shlb
inc
jae
or
push
add
add
cli
leave
mov
add
pop
test
pop
sub
aas
in
cmpsl
mov
shr
jp
std
inc
fmul
inc
xchg
inc
mov
sub
icebp
inc
mov
das
divl
xor
cmp
out
stos
out
pop
idivb
stos
xor
adc
in
push
jecxz
xchg
ficoml
inc
pop
xlat
test
inc
repnz
movl
sub
out
xor
xor
fstl
shlb
aas
out
xor
sbb
andl
movsl
and
xchg
pop
inc
xchg
mov
popf
mov
dec
xchg
mov
xlat
jl
incb
or
mov
sbb
aas
xchg
jl
out
jg
test
cmpsl
loope
push
lret
add
test
inc
pop
cmc
sbb
orl
rorl
pop
pop
dec
cltd
in
lock
std
inc
add
inc
jne
into
ret
scas
jge
cmp
out
jge
adc
addr16
mov
mov
stos
jp
out
xor
outsb
cmp
inc
pop
stc
mov
xor
les
pusha
jmp
jge
test
dec
sbb
lds
test
call
adc
int3
dec
fwait
icebp
xchg
mov
or
aas
lahf
cwtl
xchg
insl
pop
mov
and
fnstenv
shr
add
hlt
call
or
test
xchg
xchg
fmull
cmp
mov
sahf
sbb
pushf
push
jmp
in
inc
pop
fdivl
push
inc
add
inc
leave
stc
ds
dec
ret
mov
inc
push
stos
daa
xchg
insl
test
pop
pop
fcoml
adc
lret
cmpsl
icebp
fcmovbe
and
push
movsb
test
and
aas
out
xchg
push
lods
inc
add
lds
popa
fimull
lahf
repz
jge
fdivs
lret
add
mov
pop
add
jo
outsb
int
fldl2t
xchg
js
lea
xchg
xchg
mov
pop
lret
mov
popa
push
into
fnstenv
add
js
arpl
flds
jns
or
pop
pop
and
mov
push
fcmovbe
or
xor
ja
shll
jo
fs
pop
push
push
leave
fiadds
popa
pop
aaa
jne
fsubl
test
stos
inc
pop
gs
shl
jle
loope
push
dec
dec
mov
iret
xchg
loope
jns
enter
call
pop
cs
popf
mov
ret
arpl
and
mov
movsb
mov
jnp
mov
cmp
fldl
xchg
fwait
push
pop
mov
lods
sbb
lods
das
loope
xor
fldenv
rcr
ret
dec
popa
mov
xlat
inc
sbb
divl
std
fs
sahf
popf
lret
mov
clc
and
and
in
sar
mov
pushf
xchg
movsb
and
in
and
jo
mov
vaddpd
inc
int3
loope
and
in
movsl
xchg
aas
and
bound
jge
subb
xchg
shrb
push
sub
xorb
pop
jbe
adc
das
mov
notb
aad
pushf
call
stos
lods
je
dec
pusha
negb
arpl
push
clc
mov
xchg
addb
mov
cmp
sub
lret
mov
push
mov
pusha
cmp
pop
push
add
mov
xchg
js
repz
add
xchg
and
int3
cmp
incl
lods
gs
jbe
or
adc
dec
jns
push
fwait
push
cmc
lret
dec
jb
popf
pop
fwait
test
imul
leave
pop
fistl
dec
cmp
pop
jo
push
pushf
xchg
push
cmp
mov
push
sbb
cmc
lea
loop
add
inc
sbbl
mov
mov
pop
mov
leave
sti
es
cmp
add
mov
mov
inc
loopne
xchg
jp
repz
scas
xor
mov
stc
dec
add
dec
addr16
push
jae
call
sbb
mov
add
jbe
dec
mov
scas
mov
cwtl
cld
hlt
test
push
xor
jg
add
xchg
movsl
add
fwait
lret
sub
jno
dec
cs
jne
sbb
xchg
mov
movsl
inc
fsub
imulb
add
ret
scas
in
xor
sub
inc
mov
lods
push
cmc
sub
or
enter
mov
xor
rclb
lret
add
and
adc
pop
dec
mov
inc
cmpsb
mov
cmc
mov
mov
js
jp
leave
push
dec
cmp
fwait
out
jp
jle
lock
cmc
pop
cld
push
cmp
call
fbld
xchg
aaa
insb
mov
push
cmp
test
and
stc
and
rorb
mov
stos
mov
jno
ret
cmp
cmpsb
idivl
aas
mov
stc
xor
sbb
fs
int3
push
sar
sub
sbb
es
adc
or
outsb
addb
iret
inc
in
sahf
mov
fwait
mov
xor
adc
sub
xchg
fistpl
dec
mov
gs
out
pusha
int
and
or
out
mov
out
aaa
fimuls
mov
inc
pop
push
and
lcall
shrl
imul
push
dec
mov
scas
pop
popf
gs
loop
bound
mov
ds
and
pop
inc
add
inc
add
mov
jg
jns
or
repz
testb
xor
jb
in
xchg
sub
adc
jmp
mov
push
icebp
jo
sbb
push
daa
lcall
push
testl
stos
inc
sbb
gs
dec
rep
out
pop
xlat
dec
jbe
sub
hlt
into
inc
jns
push
pop
movsl
leave
or
fimuls
add
orl
call
mov
stc
xchg
stos
inc
inc
rorl
or
fs
fildll
xchg
push
adc
sbb
hlt
imul
or
pop
in
and
leave
loope
addb
repnz
sub
jb
je
icebp
and
flds
cs
push
iret
addb
adc
dec
inc
mov
mov
add
arpl
or
js
push
imul
enter
mov
mov
scas
inc
jp
mov
fcomps
icebp
xchg
pop
or
fnstcw
mov
cli
clc
add
imul
data16
ljmp
lahf
add
xor
xchg
movsl
xchg
cmp
cld
adc
cltd
cmp
stos
cmc
inc
aam
ds
sbb
fisttpll
pushf
mov
push
aad
push
ja
or
xor
xchg
mov
imul
sbb
mov
fcom
inc
jle
cmp
adcl
cld
mov
pushf
xchg
push
sub
fldcw
jno
ficompl
rolb
jbe
aas
ss
mov
add
sti
jmp
leave
push
inc
inc
or
into
sub
xchg
or
jle
sahf
adc
inc
xchg
mov
dec
insb
movsl
xor
pop
xor
xchg
inc
add
inc
pop
aaa
loop
into
les
stc
xchg
icebp
jno
dec
data16
lods
mov
or
push
ret
sbb
mov
jmp
movb
sbb
pop
dec
in
insb
outsl
add
xchg
or
jae
outsl
xchg
cld
ljmp
mov
mov
adc
cwtl
dec
sbb
sbb
cmp
adc
cmpb
pop
cmpsl
pop
xlat
cmp
into
push
lcall
and
jno
inc
push
aaa
addr16
push
push
dec
cmpsb
pop
sub
pop
jecxz
dec
lcall
mov
push
mov
jecxz
jle
jecxz
pushl
mov
jns
and
adc
jo
mov
dec
mov
in
push
mov
cmpsl
or
mov
ret
aam
ret
lds
add
std
popa
sahf
loop
les
dec
jmp
or
mull
inc
push
dec
mov
and
lods
arpl
or
les
lea
mov
data16
icebp
and
test
mov
ret
les
and
mov
mov
mov
cli
adc
fucomip
xchg
pop
dec
bound
cmp
push
cmp
sbb
aad
int3
pop
sbb
jne
js
loopne
repnz
xchg
mov
push
push
pop
inc
mov
jg
ja
repnz
inc
imul
movsl
aad
xchg
xor
push
rol
push
mov
xchg
xor
ljmp
bound
popf
inc
dec
add
cmp
pusha
cmp
xor
pop
jno
pop
fcom
sbb
rorl
mov
mov
push
dec
jae
xchg
adc
mov
insl
dec
mov
repnz
cltd
bound
gs
mov
ds
cmp
inc
add
cmp
adc
inc
out
dec
mov
dec
inc
mov
cmp
mov
mov
nop
add
orl
mov
cmp
sbb
xor
loop
cmp
in
inc
jb
xchg
jne
mov
cmpsl
cmp
enter
sub
sub
and
out
movsl
sub
int
mov
sbb
xchg
rcl
lret
outsl
cmc
subl
das
stos
mov
arpl
pusha
mov
mov
xor
leave
jg
out
cmp
in
aad
xor
dec
jbe
call
addb
outsl
and
lahf
or
sahf
sbb
lods
leave
das
mov
sbb
xchg
out
mov
adc
sbb
push
adc
dec
jne
push
jo
pop
sub
ret
mov
fcompp
jmp
js
subb
jne
rcrl
mov
and
ffreep
dec
aam
out
lods
ret
lahf
test
ror
push
es
int3
lods
sti
jb
sbb
pop
in
fwait
bound
pop
dec
sbb
inc
mov
out
jl
cmp
inc
stos
and
into
lock
int3
push
cli
inc
add
or
jns
int3
cmp
add
fcoml
push
pop
ja
dec
popf
dec
and
sub
stos
xor
dec
mov
test
lods
inc
test
iret
mov
cs
mov
sbb
pop
push
add
cmp
das
lds
mov
adc
ds
gs
fiaddl
push
lods
inc
hlt
movsl
arpl
or
ret
jmp
movb
fucom
jo
inc
pop
sbb
fs
lcall
xor
test
lcall
orl
aaa
jno
ds
xchg
out
push
loope
add
sbb
cwtl
fstpl
pop
iret
stc
mov
in
ds
testl
mov
mov
adc
ss
inc
dec
xlat
shl
cmp
mov
cmc
or
mull
stos
bound
test
jno
mov
sbb
push
xchg
out
lods
jne
test
mov
les
sbb
test
mov
mov
sbb
orl
enter
cmpsl
stos
popf
ja
jp
movsb
pop
arpl
and
add
cld
xor
and
cmpsb
fistpll
cwtl
xchg
inc
outsb
pop
or
addr16
push
imul
incl
aas
sti
push
cmpsb
sti
sarl
adc
negb
loope
cmc
testb
sbb
in
or
fstps
cmc
daa
xchg
add
pushf
sub
sbb
inc
arpl
cwtl
arpl
pop
push
add
loop
xor
mov
inc
fdivs
xchg
lret
push
bound
xchg
in
jne
jae
xchg
xchg
outsb
in
negl
fwait
add
stc
stos
pop
pop
xchg
enter
xor
xor
add
cmpsl
jae
pop
inc
fadd
xor
rcrb
sub
push
mov
aam
or
mov
jae
lods
push
fs
mov
ljmp
xchg
mov
pop
mov
jbe
aas
mov
adc
or
les
ja
aam
inc
cmp
fdivrp
fs
shll
lock
mov
sub
inc
xchg
xchg
push
dec
cmp
pop
adc
push
lret
fs
mov
into
jae
xchg
adc
push
addr16
cmpsl
or
fwait
pushf
popf
mov
jge
push
sbb
hlt
jo
mov
daa
add
out
fdivl
adc
les
addb
add
call
pusha
hlt
aaa
dec
movsb
popa
mov
sub
sub
or
mov
stos
cmp
and
mov
inc
mov
or
aam
jecxz
lcall
sub
clc
add
mov
imul
dec
sub
mov
mov
lods
pop
cmpsl
jno
mov
dec
fwait
inc
ret
rcrb
jecxz
leave
nop
jp
sbbl
mov
inc
inc
sbb
and
add
cltd
orb
mov
cld
cmc
lods
aaa
mov
addr16
es
jge
gs
pop
sbb
fsubr
jb
jecxz
pusha
imul
sbbl
outsb
jne
lcall
lret
mov
and
jl
int3
jecxz
clc
jl
sub
in
hlt
jns
jle
sbb
mov
mov
xchg
or
movsl
push
push
jge
xor
imul
mov
imul
mov
lods
xchg
or
xlat
adc
inc
adcl
xchg
and
addb
mov
xor
sahf
aam
cmpsb
cmp
xor
fsubr
insl
or
mov
test
xchg
hlt
xchg
jo
sub
xchg
xchg
pop
xchg
into
mov
pop
jne
dec
jle
mov
mov
add
adc
adc
mov
ss
sbb
test
push
repnz
jl
gs
lock
pusha
sub
jnp
add
xchg
push
enter
flds
adc
imul
push
fisttpl
ficompl
fimuls
clc
or
ss
repz
jg
fidivl
mov
or
pop
int3
leave
lods
lea
shl
sub
pop
cmp
icebp
es
jl
jmp
ret
into
push
mov
aas
cs
cmp
and
cmp
andl
lret
mov
sub
enter
addr16
fnstcw
push
movsb
pop
rclb
outsl
and
dec
lahf
cmp
add
shlb
mov
imul
loope
mov
popa
outsb
lods
dec
xlat
subl
push
sarl
cwtl
xlat
js
ret
dec
neg
je
add
insb
mov
jb
stc
mov
adc
pop
dec
push
push
jmp
mov
lds
jnp
in
je
pushf
adc
and
adcl
daa
jmp
mov
xor
popf
push
repz
mov
mov
into
pusha
xchg
mov
les
rorl
dec
sbb
xchg
fdivp
cli
push
dec
fmull
dec
mov
dec
ds
hlt
mov
je
xor
lods
add
nop
mov
js
shlb
mov
inc
dec
lods
inc
xchg
shrb
dec
fidivrs
mov
jae
push
cmpsb
out
out
mov
inc
movlps
push
dec
add
adc
dec
push
jno
push
cmpsl
loop
mov
cmp
pop
aas
mov
push
dec
sbb
lret
add
mov
xorb
dec
sbb
pop
es
mov
lods
jge
mov
mov
or
mov
roll
sub
test
lods
mov
cmpsl
push
ret
xchg
jbe
mov
lcall
int
fldl
movsb
pop
xor
je
in
xor
or
pop
push
ss
ret
xor
inc
or
add
jb
addr16
pushf
sub
mov
repz
or
adc
cmp
sti
lret
cld
cmp
xor
enter
jnp
stc
add
test
add
loop
lcall
ds
clc
outsl
rcrl
adc
testl
xor
and
into
mov
add
icebp
cmp
inc
dec
sub
mov
and
in
xchg
adc
notl
push
ja
mov
pusha
rol
das
xor
clc
xor
jg
mov
orl
jge,pt
jge
pop
ds
xchg
pop
sbb
jne
xor
test
scas
mov
rorl
or
pushf
iret
lds
push
out
call
mov
xor
repz
fsubs
imull
cmc
inc
inc
mov
in
rolb
inc
lds
insl
or
mov
and
jg
xchg
jne
das
mov
add
daa
insb
adc
or
leave
jg
mov
fucomp
jg
std
adc
pushf
or
ljmp
insl
aam
pushf
aam
mov
adc
push
adc
fidivrs
cmc
test
push
xchg
push
ret
adc
fistpll
mov
adc
test
jb
mov
dec
test
loopne
das
mov
push
inc
mov
pop
mov
js
jne
pop
or
dec
stc
out
and
xorl
adc
cs
cmp
dec
mov
mov
arpl
jae
push
dec
jle
fwait
xor
ret
daa
add
or
notb
mov
int3
subl
lret
dec
sbb
xchg
sbb
xchg
mov
shr
pop
and
cltd
repnz
lahf
mov
stc
or
pop
mov
mov
or
xor
mov
iret
std
push
in
leave
inc
or
cmp
mov
add
push
push
mov
add
test
sub
insl
push
bound
rol
pop
bound
push
cmp
std
lret
sbb
pop
lret
daa
cltd
pop
aam
xor
std
lea
lea
and
jne
in
divl
clc
gs
jbe
and
mov
das
mov
jae
jns
outsl
adc
mov
adc
adc
popf
jo
mov
pop
sub
xchg
dec
mov
out
mov
pop
popf
lods
arpl
jg
enter
jno,pn
adc
insb
mov
ds
cmpb
push
adc
push
cld
bnd
ljmp
dec
push
pop
jno
dec
outsl
dec
movsl
mov
divl
aas
xchg
cmc
repz
out
pop
xor
pop
call
cld
mov
aas
add
jmp
idivl
xchg
movsb
cmc
negb
adc
pushl
xor
mov
cli
xchg
push
aad
in
int
xrelease
push
cmp
js
nop
sub
adc
cmp
xchg
xchg
fdivl
clc
sbb
test
lea
pop
leave
cmc
pop
fwait
sub
mov
mov
lret
test
or
inc
mov
fidivrl
add
adc
push
test
insl
mov
mov
mov
rolb
xchg
outsl
inc
les
cmp
mov
inc
rorb
pop
aam
xchg
push
cmpsb
sti
outsl
cmpsl
mov
outsl
rcll
mov
loop
fidivrl
cmp
in
sbb
mov
mov
push
jno
inc
mov
daa
cli
das
jge
xchg
jmp
inc
mov
adc
xor
add
mov
sub
sbb
mov
push
aaa
and
test
clc
or
sub
sub
les
mov
and
jb
xor
cmpl
outsl
cltd
aaa
add
mov
fldcw
adc
rcrb
divps
rclb
js
mov
cmpsb
mov
push
xor
jmp
sub
fwait
inc
icebp
sub
jg
jns
clc
sub
popf
sti
cli
negl
stc
sti
pop
sub
mov
cmp
std
cmpsl
jge
and
sbb
imul
sub
out
pushf
movsb
mulb
mov
adc
cmp
push
cmpsl
decl
gs
int
pop
jae
push
and
xchg
in
cmc
mov
mov
sahf
lahf
aaa
push
mov
mov
lcall
mov
mov
aad
sbb
bound
sub
push
and
xor
mov
cmp
and
xchg
fwait
adc
adc
nop
sub
loop
aaa
repnz
lret
push
jge
mov
dec
lods
inc
xlat
xchg
mov
xchg
push
push
mov
mov
jl
fistps
and
dec
fucomi
mov
loop
dec
in
sub
pop
sub
int
test
push
pop
roll
xchg
mov
push
loope
incb
into
int3
mov
test
aaa
add
xor
daa
ja
stos
lods
pop
sbb
mov
sbb
stos
ror
test
jno
fisubrl
sub
pop
and
test
fnstsw
insb
call
mov
inc
xor
mov
cmp
clc
aas
fwait
jnp
and
mov
hlt
call
mov
sti
aas
and
ds
lods
sbb
je
test
and
iret
add
cmp
pop
lahf
out
sub
repz
jge
push
jmp
jp
mov
push
std
rol
rol
lret
sbb
insb
xor
jecxz
cmp
faddp
mov
xchg
movsl
movsl
cmp
and
popf
cmc
test
mov
pop
dec
cmp
fsubrl
das
stos
mov
mov
lret
es
fdivrs
lea
dec
lcall
mov
inc
orb
movsl
pop
jmp
sbb
push
ficoms
mov
mov
call
jb
and
adc
lahf
adc
sbb
inc
rcl
lret
pop
dec
push
outsb
mov
test
lods
or
push
movsb
mov
xchg
ljmp
in
fdivs
call
sbb
movsb
pop
xor
das
aad
cmp
lret
daa
inc
jecxz
pop
sub
out
repz
insl
adc
or
mov
jo
ljmp
sub
push
data16
roll
sub
outsb
jle
push
cmp
xor
stc
sbb
das
hlt
popf
fnsave
mov
jo
lock
mov
xchg
hlt
or
repnz
scas
pop
stos
and
lcall
dec
movsl
lds
push
pop
pop
and
sahf
mov
adc
add
mov
ficoml
lds
cmc
sbb
pop
fdivl
push
push
ljmp
push
fcmovu
adc
dec
sbb
add
xchg
adc
loopne
jno
dec
cs
fcom
and
enter
int3
cmp
inc
test
int3
dec
loope
xchg
clc
sbb
xor
jns
jmp
rclb
lret
adc
aas
test
les
cld
mov
add
test
insl
test
dec
push
out
xchg
dec
jns
push
push
add
and
mov
aam
mov
aas
and
rcl
xchg
lds
je
je
dec
pusha
repnz
pop
loop
cmp
push
pushw
pop
mov
dec
xlat
rclb
fcomi
cmpsl
cwtl
add
lret
dec
xlat
cwtl
sub
in
out
add
cmp
and
sub
movsb
repnz
pop
cwtl
inc
jp
not
adc
cmp
mov
jl
mov
scas
xor
sti
add
subb
out
or
fistps
sbb
sub
out
adc
test
dec
mul
lret
out
xor
sbb
enter
fmulp
and
cmp
pop
adc
jp
and
mov
add
mov
stos
sbb
push
adc
cmp
dec
mov
xchg
jns
sbb
mov
mov
or
push
jo
cmp
adc
out
sub
pop
pop
in
jmp
nop
popf
add
outsb
fiadds
dec
ljmp
lea
or
xchg
stos
xlat
enter
jle
mov
decl
xor
aaa
adc
repz
jl
in
push
js
or
or
jo
loop
ret
icebp
xlat
jbe
aam
add
pop
mov
fildll
test
mov
mov
push
in
sbb
mov
cwtl
or
imul
in
imul
stc
stos
push
pop
xchg
mov
pop
nop
sub
shlb
jg
fnsave
dec
xor
insb
shrb
das
jb
xchg
sub
std
lds
loopne
cli
sub
push
nop
mov
jge
and
in
aam
fldenv
push
shl
xor
nop
inc
and
xlat
cwtl
repz
push
xor
sahf
pop
pushw
in
adc
je
lock
adc
push
nop
fists
repnz
in
stc
push
in
mov
les
adc
cmp
mov
es
pop
insb
jns
mov
sarb
pop
sub
inc
xchg
cmpb
inc
sar
jl
dec
scas
mov
imul
andl
xor
hlt
rcrb
sbb
pop
inc
repz
cmpsl
mov
scas
icebp
jnp
dec
es
jbe
es
mov
arpl
add
fwait
das
clc
jbe
xor
rol
mov
test
insb
loope
mov
js
sub
mov
jb
and
push
icebp
rorb
and
pop
push
ljmp
out
add
jl
fldl
mov
cs
push
cmc
sub
aas
mov
mov
stos
ret
push
add
add
imul
pop
inc
ret
and
lret
shr
sbb
jb
insl
sbb
pop
jo
mov
stc
movsl
iret
mov
ficomps
fisttpl
mov
push
pop
lock
sbb
aaa
out
jb
cltd
mov
dec
imul
mov
mov
sub
mov
xchg
or
clc
out
pop
shl
jne
fimuls
int
ret
cmp
jl
pop
daa
and
lret
or
into
lahf
inc
imul
ljmp
js
jae
xor
push
add
stc
ret
inc
jge
push
stc
les
sub
sub
and
cmpsl
fwait
mov
mov
and
push
xor
xchg
xchg
mov
imul
stos
out
cwtl
fsubrp
sbb
lret
adc
pop
or
out
cltd
cmc
in
xchg
sub
ljmp
lods
sub
xor
dec
dec
push
sbb
xchg
push
inc
mov
xchg
cmpl
sub
into
inc
mov
push
sbb
inc
mov
mov
adc
rclb
arpl
dec
pop
jg
cmpsl
xor
dec
dec
sbb
inc
out
mov
test
jp
hlt
out
jle
cli
mov
mov
popf
and
mov
cmpsb
aad
ss
scas
xchg
adc
sub
mov
aaa
notb
scas
xchg
push
push
ss
sti
push
fstl
test
into
jl
mov
lret
jb
int3
maxps
xchg
sub
stos
pop
sub
rclb
adc
out
lcall
lock
mov
dec
into
outsb
in
cmpsb
mov
cmp
pop
mov
xor
test
mov
push
insl
cmpsb
fimull
lahf
or
in
in
lods
mov
and
dec
icebp
mov
xchg
sbb
pop
scas
mov
mov
and
push
push
inc
divl
hlt
imul
jmp
std
inc
in
xchg
adc
fistpl
js
pop
and
cmp
add
sahf
dec
call
clc
pop
imul
mov
rcrl
ret
mov
enter
jecxz
dec
push
sbb
shlb
inc
stos
xchg
pop
pop
dec
push
imul
inc
call
imul
dec
jo
adcb
aas
jp
andl
cld
inc
ret
lahf
pop
dec
fimull
add
add
mov
mov
loope
outsb
repz
fwait
shr
mov
mov
out
push
add
adc
sbbb
lods
ret
push
mov
enter
negb
push
push
aad
jns
inc
pop
mov
push
xchg
iret
aaa
fwait
and
inc
jnp
lcall
jl
lahf
pop
mov
mov
jo
iret
pop
js
lcall
pushf
test
pop
dec
sti
pop
add
popf
sbb
mov
stos
mov
rcrb
or
test
gs
out
cmpsb
rorb
mov
nop
addr16
test
leave
pop
cmp
aas
imul
adc
cmpsb
movsl
and
cmp
test
jno
int3
inc
lds
movsl
imul
rorl
lret
jmp
jo
insb
or
cld
jle
pusha
dec
cmp
adcb
imul
mov
or
push
mov
rcrb
cmp
xor
movsb
add
mov
push
movsl
xchg
lret
insb
imul
cmp
mov
psrld
adc
cmp
adc
pusha
pop
pop
sarl
fwait
lahf
ds
int
inc
lods
dec
xchg
dec
pop
in
push
cmp
pushl
sbb
loop
push
push
repnz
ror
ret
jl
pop
sub
mov
pusha
sti
loope
inc
aam
mov
fadd
mov
ds
mov
sar
out
fs
sbb
xchg
in
imul
push
addb
add
or
or
nop
fiaddl
mov
adc
adc
mov
pop
xor
xchg
pop
cmp
in
adc
ds
dec
pop
jmp
jne
sbb
push
inc
jecxz
xor
push
popa
push
test
sub
mov
push
adc
cmp
pop
adc
xchg
push
loopne
sub
xor
mull
pop
jge
lds
loopne
sahf
sbb
repnz
or
jns
daa
out
mov
scas
pop
jmp
xchg
inc
loopne
and
pop
adc
loopne
lret
or
out
iret
je
test
leave
lds
hlt
lds
cmp
int3
xchg
insl
imul
sub
push
adc
mov
fists
mov
or
push
aaa
insl
lahf
or
inc
mov
mov
enter
and
loope
imul
push
int3
xchg
dec
lea
lds
rcll
stos
test
lds
jmp
jp
cmp
mov
pop
pop
addl
sbb
cltd
repz
jb
cmp
inc
sub
pop
adcl
jno
lock
nop
xor
adc
jo
es
stc
jle
mov
sbb
dec
add
push
pop
enter
add
mov
push
cmp
dec
mov
add
popf
adc
cmpl
into
out
test
cmpb
xchg
jnp
mov
call
cmpsb
mov
cmpsb
in
jle
lcall
mov
sub
push
push
xor
test
test
inc
loop
paddusb
xchg
insl
xor
fsubs
addr16
pop
mov
sub
test
cmpsb
es
xchg
rolb
lods
lods
ret
jmp
insb
hlt
fwait
mov
xor
subb
test
inc
stc
loopne
rol
ficoml
mov
jge
les
pop
flds
mov
mov
clc
ljmp
sbb
lods
jno
dec
pushf
push
pop
pop
sub
add
iret
push
cmp
insb
test
mov
ljmp
mov
test
push
xchg
jnp
imul
add
pushf
push
fs
jae
das
mov
insl
nop
jp
add
aam
js
mov
xor
loopne
add
inc
xorb
fidivl
sarb
dec
cmc
or
and
mov
aam
addr16
inc
test
xchg
cmp
fcompl
xchg
lods
or
mov
jb
pop
stos
mov
shlb
mov
add
mov
adc
or
sbb
mov
mov
xchg
sub
and
mov
add
pop
push
adc
int3
test
leave
in
mov
sbb
mov
pop
into
jle
jmp
jne
andl
or
xlat
or
xlat
cmp
mov
lret
mov
cli
mov
sbb
jl
je
jle
mov
xor
sti
call
sti
mov
mov
int
sti
in
dec
lock
sub
lahf
mov
mov
mov
push
fidivs
dec
add
dec
enter
jno
rol
jo
loop
popa
fldt
pop
or
mov
js
push
imul
mov
jle
xor
mov
add
inc
dec
mov
inc
test
adcb
sti
and
adc
add
stc
bound
lods
and
mov
sub
fs
cli
jecxz
shr
sub
cli
inc
imul
out
push
jmp
repnz
cltd
mov
sub
xor
mov
out
jb
insl
stos
test
out
mov
push
sbbl
imul
push
repnz
jo
iret
cmp
addr16
push
icebp
fadd
ljmp
jo
and
out
xchg
aaa
sub
sbbl
cld
or
and
mov
loopne
insl
xchg
xor
pop
rcll
sahf
outsl
adc
mov
xor
adc
dec
daa
call
int3
xor
adc
jmp
fidivl
bnd
repnz
xchg
andl
dec
sbb
loopne
cwtl
adc
mov
pop
sub
sub
in
cmp
pop
aam
fxtract
mov
xchg
push
mov
mov
pop
ljmp
mov
icebp
cld
or
inc
adc
add
rcll
jns
jns
fidivrl
mov
cld
mov
inc
imul
mov
mov
js
fidivrl
and
jne
lds
clc
inc
out
pusha
cmp
outsl
fdivr
outsb
sbb
add
cwtl
sbb
ficompl
gs
es
shrd
mov
clc
dec
jns
mov
mov
dec
cld
mov
test
aad
jge
sbb
add
les
or
push
mov
and
sub
in
pop
loope
repnz
in
or
sub
sar
inc
xor
pop
sub
pushf
orl
sti
sarl
mov
lds
add
push
sbb
mov
or
and
fsubp
sub
xlat
imul
mov
dec
cmpb
pop
cs
leave
or
fisubl
sub
mov
push
test
fwait
outsl
movsb
in
orb
fidivl
into
pop
je
add
popf
push
inc
mov
mov
add
aam
out
mov
out
insl
fnstsw
mov
andb
inc
pusha
pop
je
jae
cmc
cli
mov
dec
or
ficompl
aas
movsl
into
das
add
inc
scas
mov
mov
je
jecxz
int3
xchg
mov
add
xor
adc
mov
pop
fnstsw
jl
mov
add
negb
sub
jno
imul
xchg
inc
popa
inc
imul
fwait
jne
sub
add
xor
push
xchg
dec
mov
pop
inc
mov
data16
cld
movsl
jl
ljmp
mov
icebp
dec
cmp
dec
xchg
sbbl
jne
push
inc
insb
std
pop
iret
out
shll
mov
fcoml
stc
movb
or
pop
mov
mov
and
clc
bts
pop
int3
mov
adc
xchg
or
jmp
mov
cld
frstor
cli
add
dec
adc
stc
cmpsb
mov
dec
push
dec
add
nop
add
in
jne
xor
mov
pop
mov
pop
leave
stos
pop
cmp
es
popa
dec
clc
shlb
arpl
jecxz
and
and
loop
aas
mov
pop
rorb
popf
loop
push
inc
cmp
or
outsb
into
inc
es
lds
jmp
dec
repnz
lcall
dec
or
aas
push
pop
lea
shl
icebp
in
or
inc
stos
pop
sbb
ljmp
lods
pop
jb
push
or
push
aaa
out
leave
int
lret
mov
sbb
pop
negb
loop
xchg
invd
aaa
mov
sub
outsb
jno
icebp
ljmp
mov
pop
and
mov
enter
cmp
repz
jl
add
in
pop
xchg
roll
dec
pop
pop
popa
stos
and
iret
enter
add
lods
and
ret
push
xlat
icebp
mov
dec
test
loopne
loop
pop
pop
sbb
out
inc
mov
inc
js
enter
cmp
dec
call
stc
lods
xchg
inc
inc
or
xor
ss
loopne
jno
dec
aam
lret
sbb
dec
mov
mov
dec
aas
xor
and
addb
ret
jecxz
cs
sub
fs
pop
sbb
xchg
sub
jecxz
push
or
loope
popa
jle
or
jp
jo
sub
cmove
fistpll
mov
or
fcomps
in
test
imul
push
and
lea
flds
shll
xchg
insb
mov
mov
sub
addr16
cld
mov
iret
shl
ljmp
push
decb
js
pop
adc
pop
push
cwtl
lds
fildll
imul
pop
cs
movsb
push
test
bound
int3
lahf
inc
aam
inc
imull
sbb
dec
frstor
inc
movsl
or
push
add
mov
push
imul
nop
jmp
lds
dec
cld
or
inc
loope
aaa
sub
jmp
gs
sbb
into
movsb
es
xor
adc
icebp
ja
ss
arpl
mov
cmpsl
add
insl
test
lea
out
pop
mov
mov
inc
fsubs
fucomp
ljmp
outsl
or
iret
insb
stos
in
mov
fninit
lcall
xor
mov
fadd
leave
das
xchg
aas
dec
mov
gs
test
xor
loopne
js
sbb
repnz
je
jb
xchg
sbb
aas
cltd
scas
sub
loopne
cli
les
dec
call
or
and
adc
icebp
fwait
sub
shlb
bound
int3
movsl
lahf
and
or
fsubrl
xchg
cmp
sbb
add
addl
fmull
xor
mov
dec
xchg
scas
or
call
sub
in
aas
inc
test
ja
hlt
bound
dec
mov
adc
data16
adc
pop
jns
add
lahf
lfs
filds
add
imul
adc
push
push
cmp
push
ljmp
xchg
pop
pop
xlat
dec
ret
fs
jmp
hlt
jp
inc
inc
flds
call
mov
loop
cwtl
repnz
scas
out
subb
jae
rcrl
ret
clc
cltd
mov
xor
inc
andb
scas
mov
les
sub
pop
jp
lret
jo
orb
xchg
inc
adc
imul
xchg
cmp
rol
js
inc
jge
push
add
je
push
and
scas
adc
icebp
pop
jecxz
popf
mov
cmp
sbb
or
and
sbb
cmpb
cli
mov
arpl
mov
sbb
int3
xchg
popf
push
push
inc
loope
dec
dec
add
rcrb
xor
pop
cmp
rorb
cmp
std
jp
nop
mov
cmp
ljmp
add
rorb
adcl
sti
mov
popl
out
shll
add
inc
mov
jo
cmc
stc
inc
int
shlb
pop
jns
xlat
iret
repnz
gs
cmpsb
std
push
arpl
xchg
pusha
cmp
cmp
sbb
mov
sbb
lea
xchg
out
andb
aad
popa
fwait
cmp
es
ret
std
dec
in
sbb
stc
je
sahf
adc
aas
movsb
mov
mov
lahf
call
mov
shl
or
jg
pop
ljmp
arpl
enter
pop
sub
and
test
adc
pop
loope
or
push
lea
cli
adc
les
subb
mov
sub
inc
fwait
jmp
add
cmc
dec
mov
add
xchg
fildl
rolb
inc
fisubl
stos
cltd
filds
inc
dec
ljmp
and
test
pusha
push
jnp
mov
mov
dec
mov
and
add
inc
sub
xchg
mov
fmul
cmp
mov
test
cmpsb
xchg
adc
ja
and
pop
stos
testb
scas
clc
or
xchg
leave
xor
mov
dec
test
mov
lret
mov
pushf
into
call
jbe
push
xor
scas
shrl
imul
push
sbb
pop
jl
ja
jno
pushf
lods
pop
pop
or
jmp
out
xlat
and
ret
stos
mov
push
pop
in
cmpsb
xchg
pop
ljmp
popa
jge
std
sub
bnd
mov
inc
loope
sub
add
shrb
aam
add
adc
mov
and
mov
xchg
dec
or
popf
call
push
sub
pop
fiaddl
iret
stc
mov
mov
repnz
sahf
cld
shrl
inc
pop
fwait
stos
jae
mov
mov
std
jae
xor
mov
sbb
and
add
cmp
pop
xor
stc
jne
adc
test
sbb
negl
lcall
pusha
lea
xchg
cs
mov
out
repz
adc
andl
ljmp
inc
pop
and
lret
inc
ror
mov
dec
insl
and
xchg
push
cmp
jg
mov
ljmp
incl
daa
jle
dec
aaa
jae
inc
cmpsl
call
mov
inc
std
push
cli
sarl
jle
xor
and
cli
add
push
pop
xor
mov
fsubrl
pcmpgtd
inc
rorb
jecxz
sahf
add
pop
jmp
push
adc
sub
adcb
xor
mov
push
xor
iret
and
pop
xor
lcall
mov
sbb
jno
jp
and
mov
fbld
pushf
mov
cmp
imul
or
cmpsb
adc
sub
mov
mov
pop
jle
sub
mov
pop
fdivrl
lds
adc
sahf
mov
mov
lods
out
adc
push
xor
addl
mov
dec
and
inc
rcl
add
icebp
ja
dec
xlat
push
xlat
push
jge
js
icebp
insb
jmp
out
hlt
cmc
or
stos
pop
mov
jne,pt
jae
into
inc
dec
movsl
fwait
push
sbb
lcall
hlt
ljmp
imul
stos
and
in
rorb
loop
movsb
aad
insb
dec
cmovne
mov
imul
xchg
scas
xor
fdivrp
xchg
sbb
hlt
setp
xchg
test
cmp
shrl
repz
mov
in
dec
sahf
push
inc
mov
daa
into
sti
aam
fxch
mov
in
fmuls
or
aas
xchg
sbb
sub
or
pop
push
daa
pushf
mov
loopne
inc
addb
or
push
inc
mov
jle
sbb
and
js
fisttps
arpl
lret
mov
pushf
mov
ret
popf
insb
pop
call
and
adc
out
adc
mov
xchg
ljmp
mov
movsl
sahf
pop
pop
dec
mov
loop
dec
push
fsubs
inc
loop
pop
adc
fldcw
out
and
iret
pop
xchg
sbb
outsb
jecxz
mov
out
cli
mov
or
push
adc
mov
dec
lds
std
mov
cltd
or
push
sub
int3
adc
int
mov
xor
imul
sbb
outsb
bound
mov
cmpl
test
push
mov
add
jp
xchg
shrb
cmp
jns
cwtl
cmp
imul
cmp
cmpsb
push
mov
subl
arpl
mov
mov
stc
add
outsb
inc
jecxz
mov
add
add
inc
sbb
fs
ret
push
fimull
mov
inc
mov
pushf
scas
lea
lret
xor
mov
mov
in
int
cli
jb
pop
ror
jg
popa
cmpsb
test
aas
lods
and
xor
cmp
dec
ljmp
scas
pop
dec
insl
out
test
mov
push
je
ljmp
divb
mov
cmc
adc
xchg
imul
arpl
ret
int3
xor
jno
inc
adc
dec
pushf
es
shl
mov
sti
xor
rorl
xor
xor
adc
movsb
sbb
push
das
push
ror
addr16
outsl
lret
aas
rcrl
insb
nop
adc
jle
push
incb
push
mov
repz
push
sar
mov
mov
mov
sbb
sti
jns
sbb
sub
repnz
mov
xchg
sbb
jb
push
sbb
dec
cmp
test
cmp
xchg
mov
push
popa
push
add
jae
mov
pop
push
add
pop
pop
inc
mov
push
sbb
cmpsb
cli
sbb
sub
mov
sub
cmpsl
stos
outsb
faddl
ja
xor
lock
rclb
cwtl
add
dec
sbb
push
addl
lods
pop
lcall
shrl
push
mov
adc
mov
loopne
jg
data16
push
mov
sbb
imul
inc
ret
add
or
jne
sbb
and
xor
mov
into
sarl
out
or
cs
sub
notl
sbb
jbe
pop
andb
stos
mov
mov
out
loope
dec
inc
jbe
xchg
fsub
mov
data16
andl
xor
jge
sub
mov
mov
jp
mov
aad
push
dec
sti
mov
mov
sub
push
rol
out
andl
inc
shlb
xchg
stos
mov
pushf
mov
rcrb
mov
clc
gs
insb
aaa
pop
movsl
dec
xchg
sar
push
or
xchg
fsubl
cmpsb
sbb
push
jae
jmp
fcomps
cmp
pop
cmp
test
xor
push
push
in
and
jl
add
imul
inc
dec
dec
mov
fcmovnbe
test
lea
nop
fnstsw
sbb
adc
ficomps
arpl
sbb
aad
dec
jns
cmpsb
mov
mov
xchg
mov
rcrl
lret
push
aas
adc
inc
out
xchg
inc
push
fdivs
mov
loopne
xchg
xchg
mov
pop
cltd
je
sub
outsl
test
push
cmp
mov
stos
sbb
ret
push
cwtl
lret
rcl
mov
push
and
cmp
cmp
das
cmpsb
popf
dec
cld
sub
jae
fs
xchg
jbe
xchg
pushf
fs
mov
sub
mov
hlt
pop
int
mov
xor
add
sbb
cmp
inc
cmp
repz
or
sarl
sbb
sarw
fldl
ljmp
leave
cmpsb
cmp
jnp
iret
xchg
outsb
bound
mov
pop
test
loope
cmpsb
or
push
xor
mov
stos
pop
mov
mov
sub
shl
sub
je
pop
in
lret
mov
aaa
aaa
sbb
aam
mov
mov
bswap
fimuls
push
mov
adc
add
inc
jl
daa
push
push
popa
outsb
pop
or
stc
cltd
insl
xchg
xor
cmp
data16
sbb
es
insb
out
ret
adc
outsl
dec
fs
stos
mov
mov
and
jae
sbb
ret
sub
cmp
mov
xor
dec
repz
mov
push
inc
sti
fcoms
add
cmp
xor
cmc
movsl
cmp
sarl
jmp
lods
push
xchg
shrb
lahf
push
sub
imull
mov
xchg
in
jns
repnz
jno
ja
out
cld
push
sub
xchg
lret
mov
js
addr16
outsb
xchg
mov
insb
sbb
push
inc
push
push
or
adc
xchg
test
icebp
dec
xor
repz
dec
jle
clc
cmpl
and
inc
les
int
xor
test
cmp
cmp
mov
jge
sub
lds
jo
call
mov
loop
jae
jg
push
int
sbb
jae
sub
add
push
movl
inc
ja
xchg
push
fs
iret
lds
clc
out
jle
or
pop
cmc
popf
sbbl
cmp
mov
sbb
repz
sbb
mov
push
clc
mov
test
pop
ret
xchg
lods
inc
cmpsl
daa
pop
in
arpl
outsl
xor
gs
int3
xchg
insb
enter
mov
repnz
cli
lcall
fwait
jg
stos
cmp
xor
and
sub
fisubs
out
fsubr
mov
mov
das
mov
mov
push
inc
and
jg
push
je
mov
nop
adc
dec
stc
loopne
fs
jle
inc
xchg
enter
xor
out
adc
adcl
mov
sbb
add
mov
cltd
lahf
add
int3
outsl
mov
xor
jge
mov
pop
jg
and
icebp
sbb
pop
fildl
or
jns
pop
fisttps
cmp
cmp
pop
into
jl
pop
jg
stos
stos
fsubrl
clc
adc
push
fcomps
fistpll
pop
aad
xchg
and
mov
dec
inc
loop
popf
mov
push
std
dec
dec
mov
data16
imul
data16
outsl
gs
imul
or
xchg
xor
dec
outsb
sti
or
xchg
cltd
outsb
testb
mov
inc
pop
hlt
xchg
push
dec
loop
mov
pop
adc
lret
jecxz
xchg
mov
addb
inc
sbb
pop
pop
popf
sbb
cmpsl
cwtl
cld
aad
loop
movsb
jle
jae
sub
fnstenv
adc
les
cmc
dec
xorl
pop
inc
stos
test
xchg
or
in
push
ret
bound
lods
or
leave
js
mov
in
inc
dec
xchg
xchg
pop
into
or
inc
inc
and
dec
ret
sahf
xor
das
test
adcl
out
push
into
mov
mov
shll
dec
icebp
xor
dec
sbb
inc
pop
cld
pushf
sub
mov
out
aaa
in
jo
push
fidivl
lds
lds
mov
dec
cmpsl
xor
hlt
leave
test
mov
rcrb
in
stos
out
pop
mov
ret
xor
push
and
or
xor
and
sub
mov
xchg
cmp
cli
fs
xchg
cwtl
push
inc
sub
pop
iret
test
pop
xlat
in
mov
pop
mov
fs
push
testb
jp
cmp
mov
and
aad
jo
jnp
push
pop
adc
or
and
xor
cmp
add
cmp
and
repz
lea
inc
int
push
popa
push
dec
in
add
push
enter
sbb
lret
xchg
mov
adc
aaa
in
outsb
push
jne
ds
lret
add
test
mov
sub
dec
mov
adc
sub
sarl
sbb
lock
nop
and
dec
cli
jecxz
pusha
rcr
xlat
mov
jmp
adc
xlat
cmpsb
daa
mov
jl
imul
dec
mov
pop
adc
out
mov
mov
xchg
scas
out
inc
push
cmpsb
fwait
sarl
dec
or
xor
jl
mov
popf
xchg
imull
push
jge
lods
sub
cmpsl
pop
push
leave
out
lock
aas
stos
adc
adc
cmp
and
sbb
pop
mov
pop
sahf
xchg
jne
or
xor
fcmovne
mov
cmp
mov
or
pop
jbe
shr
cwtl
xchg
fs
shlb
cmp
insb
xchg
cmp
pop
shrl
push
and
in
call
mov
adc
push
cmp
out
icebp
add
iret
jge
jbe
inc
pusha
out
and
push
hlt
sahf
and
lcall
xchg
inc
xchg
aas
enter
popf
imul
and
ss
ljmp
mov
inc
adc
testl
jp
cli
cli
xchg
or
jge
jmp
out
fistpll
xor
push
pop
loope
jb
dec
adcl
movsl
sbb
mov
jmp
mov
xchg
push
arpl
sbb
mov
dec
push
mov
out
pop
lds
push
mov
xchg
retw
pop
hlt
mov
data16
dec
enter
dec
jmp
inc
leave
bound
daa
adc
mov
jmp
out
adc
jg
insl
das
sbb
pushf
xchg
xorl
cmpsb
repnz
mov
das
pop
scas
cmpsb
arpl
mov
xchg
xchg
movsb
int
mov
das
int3
mov
mov
cmp
pop
mov
push
shrl
inc
push
aam
dec
jp
test
mov
addr16
rcr
adc
cs
jbe
cmp
xchg
push
lret
add
xor
dec
out
jne
jmp
movsb
sub
rcrl
mov
data16
mov
test
lods
out
and
adcl
ror
jp
sbb
fidivs
lret
xor
clc
sti
aad
shlb
lock
mov
subl
jne
xlat
xor
push
sbb
lods
shll
scas
mov
aas
test
inc
je
cmp
decb
sahf
pop
mov
sbb
mov
loopne
mov
adcl
add
jno
xor
ret
imulb
sub
mov
mov
gs
xchg
gs
jmp
mull
push
xor
in
test
pop
pop
call
aaa
jp
test
push
sti
xchg
or
dec
add
mov
data16
mov
test
xor
aam
sbb
xor
jmp
pusha
jo
ficompl
cmp
lahf
mov
xlat
xor
scas
call
stc
fcomi
mov
aas
bound
les
inc
sar
jae
aad
test
pop
aam
leave
bound
ja
mov
outsl
cmp
jle
lret
jl
xchg
or
xor
or
scas
mov
test
mov
dec
lock
jnp
int3
ds
bound
add
std
insb
add
lahf
ficomps
pop
add
mov
cwtl
popa
mov
dec
jge
add
mov
mov
inc
push
push
mov
xor
push
mov
loopne
popa
rcl
in
ret
outsl
cmp
leave
push
push
adc
daa
ficoml
xadd
mov
out
ret
repz
rclb
jb
push
add
mov
push
xchg
mov
mov
cmpb
cwtl
dec
enter
sti
jl
iret
out
pop
aad
pop
or
adc
test
and
mov
push
fwait
xor
shrl
inc
test
jne
aas
adc
in
lcall
xor
fwait
pop
pop
xchg
adc
call
jecxz
loope
cmc
and
sub
cmp
push
test
cmp
insb
cld
and
int
mov
ror
dec
jne
sub
sahf
and
push
push
arpl
ret
xor
adc
cmpsb
pand
stos
jo
in
mov
icebp
jno
adc
cmp
mov
dec
lods
outsb
or
sbb
fadds
stos
jnp
mov
inc
test
pusha
mov
jg
ret
int3
jo
je
jo
lds
imul
add
mov
int
and
dec
mov
cmp
cmp
arpl
aaa
jae
jle
testb
out
mov
cwtl
les
push
call
inc
fs
adc
cmp
jge
mov
adc
push
cmp
fwait
lods
jbe
pop
xor
scas
cmp
mov
aad
insb
mov
jge
arpl
ret
loop
adc
add
cld
int
rolb
add
data16
sub
mov
idiv
out
cmc
sahf
jecxz
mov
jp
cmpsb
mull
cmp
mov
or
sub
cmp
call
cmp
mov
mov
cmc
mov
adc
inc
fsts
je
add
aaa
add
shll
or
ret
lods
aaa
push
je
fidivl
andl
adcb
aaa
push
hlt
mov
pop
mov
pusha
es
push
add
pop
in
insl
addr16
dec
dec
mov
mov
or
sub
flds
adc
cmp
dec
mov
shlb
cmp
push
imul
inc
sub
cltd
cmp
in
adc
jle
into
int
ficomps
test
das
cmp
adc
negl
outsl
jle
movl
mov
lret
out
loope
mov
mov
cltd
xchg
xchg
ficoml
jbe
jbe
adc
adc
jae
shlb
dec
into
loopne
push
mov
and
sbb
icebp
in
dec
adc
stc
or
lods
jo
leave
mov
and
lcall
mov
jae
insb
es
xlat
insl
movsl
adc
fsts
stos
sbb
push
pop
mov
ds
sbb
dec
push
pop
cmp
mov
nop
lcall
mov
add
adc
jmp
or
jns
jne
sbbb
push
push
ja
jecxz
and
inc
sbbb
sbb
xchg
mov
loopne
outsb
push
popa
xor
sub
dec
dec
mov
lahf
cwtl
inc
subb
pop
fwait
shl
xchg
sbb
cltd
pusha
loope
sarb
sub
pop
jnp
dec
divb
arpl
xchg
jns
movl
pop
loop
stos
push
out
fs
or
add
jecxz
fwait
scas
aad
addr16
dec
ss
and
sbb
std
das
sub
std
cmpsl
lret
insb
cmp
pop
icebp
pop
sub
xorl
cmp
xchg
mov
insb
add
jecxz
mov
fdivrs
cmp
dec
add
cmp
add
mov
xor
inc
push
mov
dec
sub
xor
mov
jl
mov
std
loop
dec
data16
mov
sub
mov
daa
add
dec
cmpsb
test
and
xor
adc
jge
pop
or
scas
fcoml
inc
lret
rcrb
lods
and
cmp
jae
jecxz
xor
insl
xchg
sahf
call
sarl
or
xchg
rcr
xchg
and
sub
dec
les
test
rcrb
pop
pop
push
scas
or
gs
cmp
xlat
jne
inc
int3
test
out
mov
push
addr16
test
shrb
pop
push
add
pop
testl
test
stc
mov
cmp
clc
dec
and
orb
xor
addr16
in
mov
arpl
push
mov
shl
add
lret
loope
clc
int3
daa
adc
mov
and
shlb
in
js
push
int
add
xchg
cmp
pushf
popl
icebp
rcll
stos
mov
stos
repnz
cmc
cmp
outsl
inc
dec
sahf
push
sub
outsb
cmp
push
lods
or
imul
test
and
rcrb
in
push
in
aas
sbb
mov
mov
xor
inc
xlat
inc
and
pop
mul
lea
pop
mov
aaa
in
mov
jno
adcl
xor
cmp
push
pop
xchg
sti
mov
cmp
mov
les
xlat
add
cmovs
test
dec
pop
or
xchg
pop
inc
jbe
fnstcw
test
inc
add
test
inc
mov
idivb
mov
dec
jae
xchg
stc
or
pop
repnz
push
or
adc
push
pop
dec
xchg
push
leave
insl
iret
push
mov
out
in
popa
mov
cli
adc
out
stc
outsl
ret
test
jecxz
push
sub
add
jle
je
mov
jle
test
xchg
jge
or
and
mov
add
in
push
je
pushf
sahf
orl
xor
xchg
lahf
in
pushf
sti
mov
mov
popf
fs
mov
sbb
push
adc
bound
fcomp
sbb
or
jg
adc
outsb
shl
popf
cli
sbb
movsl
ja
or
lea
adc
lcall
pusha
jp
mov
mov
mov
in
pop
and
jnp
add
jge
ljmp
nop
mov
cmpsl
mov
ret
pushf
iret
pusha
jae
jl
cmp
add
cmp
gs
xchg
mov
or
iret
push
shlb
les
mov
mov
stos
sahf
jb
int
movsb
sbb
fistl
testl
pop
mov
sarl
test
jge
mov
sub
push
jp
push
jecxz
cmpsb
decl
loope
out
mov
xchg
cmp
cwtl
pop
loopne
adc
aas
sbb
jge
es
or
and
dec
sub
mov
cmpsl
sbb
add
cmpsl
lret
or
fildl
cs
mov
ret
lcall
xchg
xlat
sarl
cmp
push
inc
xor
xor
mov
sbb
push
jne
xchg
push
leave
push
mov
jb
xchg
sub
mov
pusha
fnstcw
out
jbe
push
push
lahf
adc
rcrl
cmpsl
fildl
test
add
pop
and
into
lret
enter
mov
pop
cwtl
jno
scas
fmul
mov
push
xor
insb
scas
adc
out
stos
dec
jb
sbb
nop
mov
fwait
sbb
arpl
test
sbb
lret
rorb
jne
fmull
cwtl
or
xchg
cmp
fisttpl
xchg
push
cmc
add
pop
push
mov
andl
inc
jecxz
cltd
test
mov
fnstcw
into
pop
or
and
pop
dec
inc
push
arpl
inc
cs
hlt
adc
mov
insl
or
inc
call
imul
fs
mov
stc
xor
lock
add
enter
fistl
scas
movl
adc
stos
or
push
mov
sub
push
add
and
int3
mov
pop
add
imul
ljmp
pop
jl
lods
mov
nop
adc
add
inc
sarl
enter
push
jg
movsl
push
xlat
shl
test
cld
ret
iret
inc
lahf
pusha
data16
xchg
ret
add
or
or
mov
repz
pop
lcall
leave
xchg
in
movb
and
push
push
clc
repnz
mov
jle
jo
popa
insb
xor
gs
das
aas
testl
and
cmp
cmc
push
std
cli
pusha
adc
repz
sub
pop
add
rclb
movsb
push
imul
popa
mov
or
mov
movsl
je
cltd
xchg
or
std
aaa
pop
pop
stc
into
sbb
aam
cmp
inc
xchg
fwait
das
mov
and
add
jge
add
sbb
cmp
daa
out
dec
push
mov
ret
bound
pop
imul
xchg
ret
subb
stc
sbb
push
arpl
inc
mov
mov
add
dec
pop
pop
jge
lcall
in
mov
xchg
aam
pop
pop
mov
hlt
sbb
lcall
in
dec
jecxz
mov
insl
jnp
aad
mov
pop
lcall
aaa
mov
push
shll
out
test
or
mov
sub
xor
xchg
mov
mov
outsb
std
xorb
mov
pop
pop
sub
sub
fstpt
into
and
mov
imull
aaa
adc
aas
pop
xor
mov
inc
paddsb
and
xchg
dec
aad
pushf
jg
inc
adc
arpl
sub
insb
xchg
cmp
movsl
outsb
outsl
mov
and
sbb
push
or
mov
in
movsb
xchg
mov
push
mov
adc
aad
or
or
not
lret
jne
pop
mov
mov
push
outsl
in
cmc
sti
inc
cmpsb
lods
in
dec
inc
or
stc
pop
pop
ror
addr16
push
mov
lods
jnp
int3
cmpsb
sbb
pop
xchg
or
nop
sub
jecxz
add
pop
jl
and
xorb
mov
cwtl
ret
jno
data16
mov
cmpl
pop
mov
fs
int3
iret
hlt
or
sarl
cld
in
cmp
scas
inc
and
stc
std
pop
add
loopne
mov
and
cmp
sti
es
lcall
ss
or
mov
aam
pop
jne
inc
dec
mov
aam
inc
iret
and
xor
inc
xchg
lcall
pop
fsubl
addb
mov
mov
lahf
sti
adc
aas
in
jne
je
lcall
mov
sub
loope
xchg
sub
or
and
jb
loopne
xchg
inc
loope
sbb
fiadds
out
push
and
lcall
imul
xchg
movsb
sub
rorb
bnd
shlb
ficoms
outsb
das
aaa
stc
push
xor
and
jnp
mov
mov
mov
lret
mov
inc
pop
in
movsl
jmp
inc
gs
add
in
or
push
insb
out
lods
negl
ss
sbb
jmp
mov
xchg
mov
jnp
loop
sahf
mov
jbe
mov
ret
push
subb
add
xchg
xor
imull
movsb
in
jnp
std
jns
loope
add
in
push
mov
mov
das
jle
xchg
pushf
inc
clc
ficomps
jb
out
bound
cmp
ds
popf
jp
and
pop
fmull
adc
push
and
mov
fdivrp
popa
lds
adc
int3
cli
pop
leave
in
push
cmp
cmp
fstps
add
mov
test
fwait
pushf
ljmp
je
xchg
bound
popf
inc
jno
adc
jle
adc
les
pushf
pop
jne
js
push
or
jbe
xchg
pop
and
sub
mov
pop
ss
addr16
mov
mov
idivb
pop
adc
loop
cwtl
daa
push
sub
pop
dec
or
loop
mov
pop
test
mov
or
jge
cmp
hlt
push
mov
into
xchg
mov
inc
sbb
push
dec
inc
pop
stc
test
dec
add
enter
or
add
mov
adc
fnsave
xchg
push
test
repz
aaa
out
lock
sbb
enter
insb
daa
repnz
loope
das
add
inc
mov
lock
pop
outsb
movsl
addr16
stc
fistl
test
or
pop
std
pop
popl
loopne
push
movsb
ffreep
jp
jb
jl
dec
mov
xchg
shlb
scas
mov
jns
and
and
je
inc
mov
jno
dec
inc
outsl
dec
jecxz
ficoml
xor
lret
jecxz
pop
neg
inc
cmp
mov
cmp
sbb
fs
nop
adcl
jmp
cmpsb
sbb
add
popa
xchg
add
clc
int3
aaa
mov
or
dec
insb
adcl
div
lahf
pop
ja
out
cmovp
push
orl
lahf
js
je
cmp
xchg
test
inc
and
adc
das
add
pop
jb
mov
test
ret
aas
and
xchg
xchg
scas
xor
pop
and
xchg
sbb
dec
adc
cmp
mov
test
jl
cmp
and
inc
loopne
inc
pop
jne
pop
push
nop
ja
addb
lret
shrl
push
out
loopne
fdivrs
iret
xchg
imul
cli
ljmp
sbb
rcrl
and
xorb
jb
sub
jmp
cmp
adc
in
stos
insl
jecxz
pop
imull
sbb
mov
rsqrtps
into
lods
insw
rcrl
xchg
and
shrb
jne
movsl
pop
push
add
or
and
mov
add
je
dec
inc
add
fistps
ret
jno
xchg
jae
lret
mov
ds
mov
dec
outsb
cs
out
dec
rcrl
call
push
mov
mov
out
add
push
xor
mull
or
sub
rorb
scas
inc
adc
cli
jge
adc
iret
fisubs
sbb
and
add
outsl
adc
jle
fs
push
push
xor
int3
sbb
addb
mov
mov
fisubs
cs
addr16
add
stos
test
push
push
lret
stos
xor
psraw
adc
xor
cmpl
dec
inc
insb
int
push
fwait
mov
pop
shll
icebp
test
lahf
inc
imul
or
insl
cli
rcl
call
mov
pop
cld
add
frstor
push
enter
ror
sbb
es
jecxz
adc
sub
sbb
addr16
jno
imul
lret
push
mov
push
loope
pop
bound
sub
push
xor
roll
nop
shrl
out
icebp
mov
jl
stc
mov
fisttpl
mov
lods
inc
sbb
pop
xchg
xor
loop
das
xchg
stos
imul
or
add
js
pop
js
sub
or
ret
inc
mull
cmp
add
pushf
pop
daa
cmp
mov
sbb
xor
xorb
and
mov
popa
push
dec
scas
rcrl
inc
mov
mov
js
push
cld
add
cmp
jb
hlt
daa
aaa
xor
cs
push
add
add
cmp
in
scas
fsubl
push
jmp
loope
fists
lea
aad
jbe
loop
jge
imul
fwait
inc
andb
mov
sub
or
mov
test
loop
jp
rol
dec
shld
ret
fisubl
dec
test
push
adc
pop
ja
lods
movsl
push
movsb
lock
mov
xor
data16
sbb
xor
jl
outsb
add
jae
sub
jle
fsts
adc
rcr
repz
xchg
or
lret
shl
and
int
add
std
adc
iret
cmpb
mov
sub
shlb
mov
or
popl
jp
call
ret
iret
xor
sysexit
dec
mov
mov
roll
std
ja
insb
call
pop
adc
orb
fstps
repnz
inc
idivl
cmpsb
sti
push
aad
xor
popa
cltd
icebp
popa
sbb
scas
or
push
xchg
mov
sbb
imul
fwait
mov
dec
call
dec
jbe
push
out
xor
shrl
gs
jae
jae
cmpsb
lods
outsb
lds
loopne
loop
push
cmp
nop
insb
movl
lods
leave
pushf
add
jp
mov
lods
add
loopne
fimuls
out
bnd
push
std
xor
rorl
xchg
xlat
pop
sbb
ljmp
aad
pop
push
rcr
lahf
call
flds
or
int
aad
fcompl
xor
leave
aaa
dec
push
stos
bound
cld
mov
jo
gs
int
jbe
mov
repnz
sub
mov
or
push
mov
xor
int
and
xor
jg
cmp
scas
mov
mov
pop
rcrb
jb
push
xchg
or
xchg
arpl
pop
mov
mov
loopne
imul
divb
push
dec
into
push
rcrb
jbe
repnz
aam
movsb
out
cli
sub
push
aad
and
lea
int
push
cs
jl
pop
outsb
in
aam
imul
fs
or
push
adc
mov
ret
data16
fisttps
xchg
loopne
sub
pop
dec
sub
mov
cmp
cld
mov
in
sbb
stos
daa
pop
inc
or
icebp
jne
aam
arpl
daa
push
cmpsl
lahf
es
xor
pop
jns
insb
in
pop
dec
adc
xchg
sub
pop
add
push
pop
cmp
loopne
fldcw
inc
insb
mov
jmp
or
test
ficoms
les
gs
add
and
or
pusha
and
mov
jnp
daa
jl
xchg
dec
ds
jge
mov
xchg
in
loop
cld
inc
into
hlt
inc
inc
shl
aaa
inc
mov
rolb
sarl
inc
shlb
and
adc
pop
lret
sub
adc
push
or
mov
sbb
dec
js
mov
sahf
add
outsb
out
lahf
push
pop
sub
mov
int3
push
sbb
jnp
cs
int
sbb
ja
aaa
xchg
maskmovq
nop
cmp
fs
lds
push
pushl
lods
push
shrl
pop
push
mov
outsb
push
jnp
pop
test
pop
stos
cwtl
push
sbb
sbb
in
fisttpl
xchg
cwtl
and
or
jno
inc
fistps
xor
xchg
sti
cmp
jbe
stc
mov
inc
mov
fwait
in
sub
pop
inc
pushl
lcall
lods
aas
push
popf
sub
int
jo
sbb
aas
pusha
jno
cli
jns
inc
jbe
add
sub
cmpsl
rcrl
inc
testb
pop
pop
xor
insb
fisttpl
divb
out
lahf
repnz
and
leave
subl
shl
cmpb
push
push
adc
fbstp
lret
mov
mov
mov
bt
popa
push
cmpsl
in
cmp
pop
jbe
int
jo
cmpsl
cmp
xchg
or
iret
scas
aad
ljmp
testb
or
daa
loopne
cwtl
int
push
pop
repz
out
mov
call
jb
cltd
sbb
push
push
jo
pop
pop
push
mov
xor
xor
cmp
jo
push
lret
cli
out
in
inc
lar
popf
lods
aam
xchg
cmp
sub
and
cmc
pop
mov
xor
push
je
push
dec
sbb
aas
dec
push
shll
and
mov
mov
sub
addr16
xlat
out
test
mov
fstpl
popa
cmp
sahf
sub
jmp
push
fdivrs
movsb
mov
mov
in
add
sbb
and
pop
adcl
xor
mov
jmp
add
pop
loop
xchg
sub
push
ds
ret
xchg
movsb
dec
xor
test
bound
xchg
mov
or
cwtl
js
in
repnz
int3
daa
xor
cmp
jbe
insl
push
xchg
out
fsubl
imul
mov
or
lret
mov
push
enter
inc
popl
insl
push
pop
or
pop
dec
ja
rolb
push
push
sub
sbb
and
xchg
mov
add
pop
mov
dec
inc
sub
or
mov
or
insl
mov
xor
popf
leave
jg
lea
int3
aam
lcall
jbe
into
loop
inc
inc
and
fidivrl
lods
aas
pop
iret
popf
ret
inc
or
ja
and
push
adc
inc
pop
push
xchg
ja
call
add
sbb
icebp
sbb
cmp
in
and
out
sbb
pop
mov
mov
cld
rcrb
push
in
mov
daa
sub
push
pop
and
in
and
ret
or
out
scas
loopne
cmc
movsb
or
xor
push
xor
inc
int3
icebp
mov
js
fcos
aas
push
pop
and
stc
adc
lahf
mov
fisttpl
mov
jne
lock
jl
mov
in
mov
sbb
in
xor
jl
mov
cmp
add
les
adcb
push
sarl
jb
mov
adc
sbb
mov
test
pop
adc
data16
dec
jno
or
push
insb
ret
hlt
leave
jae
daa
add
nop
mov
fidivs
addr16
push
pop
inc
loop
bound
iret
xchg
sbb
jne
enter
mov
pop
fists
cmpsb
push
fbstp
cmp
inc
jnp
test
xchg
loope
ret
aam
adc
inc
ljmp
sbb
popa
mov
add
sbb
or
test
xchg
jp
adcl
pop
lods
jo
xor
mov
popf
sub
sub
inc
cwtl
push
addb
jmp
adc
pop
js
mov
sbb
xor
dec
pop
outsb
or
or
push
or
adc
sbb
je
add
and
pushf
lcall
jle
movsb
fucom
mov
stc
movsl
and
inc
dec
iret
cmpsb
inc
mov
inc
insb
dec
and
adc
pop
in
sbb
inc
xchg
push
cmp
inc
inc
daa
repz
jg
inc
decb
repz
into
jnp
rcrl
mov
sub
loope
call
popf
mov
fdivrp
jge
test
rclb
inc
lock
enter
cltd
ret
mov
das
pop
iret
pop
movsb
sbb
test
sbb
testl
std
popl
jno
or
dec
inc
pop
aam
sbb
aas
xlat
movsb
add
jb
mov
inc
mov
cmpsb
scas
mov
test
pop
addr16
pop
lods
nop
mov
mov
add
clc
lret
add
cli
add
ret
ds
dec
ficompl
lea
daa
jg
mov
out
sbb
push
dec
mov
dec
inc
dec
test
jge
test
fcmovu
sbb
call
jno
mov
insl
arpl
sub
push
xchg
sub
or
je
jp
mov
xchg
cmp
into
adc
iret
xchg
hlt
add
imul
and
std
enter
jno
les
idivb
and
pop
cmp
je
imul
lds
mov
fcomps
fadd
push
sbb
stos
mov
adc
sub
filds
loopne
pavgw
shlb
movsl
jl
nop
mull
fwait
hlt
movsb
dec
popf
insl
out
imul
xchg
pop
adc
cltd
stos
jmp
sarl
jae
stos
popa
push
xchg
je
out
rolb
sarb
iret
push
xlat
ljmp
jae
idivb
mov
add
sbb
xlat
cmp
and
xor
jae
push
push
test
stos
jecxz
int
or
adc
xor
fdivs
sbb
push
das
outsl
int
orb
mov
into
mov
ja
fcoml
dec
insb
add
loop
xor
sub
jo
bnd
mov
xchg
cs
and
ret
add
push
aas
mov
mov
aam
or
xchg
fsubr
mov
popa
fidivs
xchg
sti
repnz
sub
and
adc
sub
lea
arpl
stc
add
int
cwtl
lock
stos
test
mov
sbb
jp
add
pop
mov
insl
xchg
fldl
mov
out
mov
cli
mov
push
stos
lea
cmp
mov
jno
or
lds
pop
lret
push
inc
nop
bound
cmp
push
xor
fimuls
pop
negb
imul
inc
fwait
sbb
stos
cmpsb
lds
sub
outsl
in
lret
dec
xchg
stc
xchg
scas
mov
lahf
jl
fdivs
fs
aas
shlb
daa
inc
mov
inc
xor
rolb
dec
arpl
pop
ret
negb
push
lret
xlat
les
repnz
adc
icebp
inc
mov
cmp
jge
insb
xchg
mov
das
and
mov
imul
loopne
sbb
mov
push
cmp
aaa
mov
sbb
sub
int3
or
rorl
in
es
bound
imull
pop
inc
xchg
shll
daa
mov
popa
sub
and
xorl
shrl
cmp
cmp
jne
xor
adc
xchg
adc
cmpsl
add
lcall
arpl
int3
xor
dec
dec
jg
xchg
ja
bound
mov
add
leave
push
movsl
xlat
mov
call
jno
and
outsl
test
push
jmp
sub
jno
mov
xchg
cmpsl
xchg
push
pop
cmp
inc
pop
jecxz
lods
push
lcall
hlt
pop
out
imul
scas
fdiv
mov
lret
subb
push
push
ss
sbb
jmp
movsb
roll
repz
nop
scas
cltd
push
loope
add
push
test
loope
cmpsb
cmpsl
inc
jne
shl
fs
push
mov
cmp
inc
je
add
js
test
nop
and
adcl
idivb
jo
out
sub
std
xchg
xchg
cmpsb
out
test
sti
lock
scas
setbe
out
inc
ficompl
adc
je
sub
mov
lods
jge
mov
aad
mov
sbb
add
je
xorl
stc
mov
add
ds
shl
push
mov
xor
xor
mov
sub
sti
or
es
pop
in
sub
dec
adc
jno
xchg
adc
mov
shll
dec
push
rcr
lock
push
mov
mov
xor
rcrb
stos
xor
enter
fiadds
add
add
fnsetpm(287
jmp
fadds
and
mov
lods
inc
push
insb
add
iret
in
jnp
mov
rclb
gs
jnp
scas
push
pusha
add
call
lods
fwait
xor
decl
and
lods
out
cld
sub
mov
push
shl
mov
sti
icebp
lret
inc
push
std
je
imul
scas
sbb
in
sti
call
add
add
jge
push
fst
cmp
rcll
popa
mov
fmull
mov
arpl
push
lahf
cmp
call
subl
fsubp
iret
dec
test
leave
mov
sbb
lahf
inc
sub
sub
insb
outsl
xor
mov
dec
sbb
pop
pushf
div
dec
xor
adc
scas
mov
or
test
insb
outsl
pop
xchg
add
addr16
call
and
jns
loope
cld
mov
dec
lds
in
and
pushf
insl
jp
push
rcll
dec
stos
push
rolb
lret
push
mov
push
mov
ljmp
push
pop
imul
jp
adcb
jns
mov
mov
push
xchg
int
imul
xor
lcall
inc
xchg
jecxz
dec
or
jmp
jle
jbe
insb
pop
xlat
xchg
xor
jns
movsb
in
pop
adc
mov
add
sar
cmp
sbb
sub
insl
cmc
or
push
lret
mov
lret
movntq
loope
movsl
mov
repnz
dec
push
dec
xor
je
lock
cmpb
mov
jmp
push
lcall
les
repz
lret
sbb
inc
loopne
mov
jns
cmp
sub
or
int3
mov
rorb
jmp
das
rorl
leave
sbb
sbb
xor
add
mov
decl
idivb
mov
pushf
mov
test
mov
pop
pop
dec
xchg
sbb
sahf
push
cmp
xor
mov
mov
dec
aas
pusha
cmp
or
adc
adc
in
ret
cmc
mov
daa
push
jge
cmpsb
pop
pop
fstpt
fwait
clc
pop
pop
sbb
pop
dec
cmp
outsl
inc
cmp
in
inc
ffreep
cmp
inc
jns
mov
lock
jge
mov
xchg
pop
fdivr
hlt
cld
aam
inc
or
lock
inc
in
inc
aaa
mov
xor
jp
loopne
outsl
jge
and
inc
ret
jmp
lea
or
in
aam
push
aam
jo
rorb
add
push
mov
loop
inc
stc
dec
repnz
aad
shll
fwait
xor
mov
cmpsl
jae
call
jnp
test
push
rcrl
adc
ljmp
sbb
or
adc
shll
sbb
jne
xchg
cmp
call
jb
mov
push
cmp
push
mov
in
mov
es
enter
icebp
cmpsb
and
add
cmp
stos
dec
adc
aaa
and
cmp
mov
test
xchg
sbb
sub
xlat
outsb
icebp
push
cmp
jns
jb
jnp
sti
gs
hlt
mov
loope
mov
push
movb
popf
scas
popa
mov
loop
ljmp
gs
xchg
pop
repz
mov
js
js
sarb
inc
xchg
gs
jge
jns
scas
mov
lods
cmp
lea
jge
adc
dec
and
lock
pop
sub
dec
mov
sub
jno
inc
xchg
out
aas
lcall
push
jmp
and
sbb
test
sub
sbbb
and
popf
xor
movsl
dec
mov
jne
addr16
sbb
sub
imul
test
xor
xor
add
sbb
loop
dec
inc
sti
insl
ja
in
adc
add
fwait
shrb
xor
xchg
repz
cs
sbb
xor
popa
and
jb
xchg
subb
test
push
mov
pusha
xor
adc
daa
rcrb
sbb
dec
mov
pop
scas
in
mov
push
lret
lock
pop
out
sarb
leave
arpl
inc
lcall
pop
mov
xor
mov
lret
loop
pop
sbb
fucomi
cmp
cmp
mov
jno
inc
add
dec
cwtl
inc
mov
rcrl
jmp
inc
jl
icebp
mov
enter
fnstcw
dec
push
mov
outsb
mov
stos
ja
jo
mov
out
dec
ret
popa
jns
test
push
movb
jnp
js
insb
push
jo
add
xlat
mov
nop
mull
adc
and
xchg
push
mov
add
add
xchg
fstl
test
rcrl
jmp
js
test
mov
repz
jg
popf
rcll
inc
inc
mov
int
hlt
dec
xor
mov
push
mov
repz
shr
xor
jns
rorl
ds
enter
cmpsb
dec
cwtl
mov
and
shrl
scas
xchg
add
jo
decl
aas
dec
pop
ds
in
adc
and
adc
pop
dec
insb
fwait
sub
push
xor
mov
add
pop
xor
aas
pop
ret
pop
sub
push
sti
inc
nop
cld
inc
push
fwait
cltd
xor
xchg
dec
ficompl
xchg
lcall
sbb
fdivrp
das
sub
xchg
sub
xchg
and
cmc
push
out
push
leave
arpl
cwtl
jns
push
mov
fisubs
xor
push
dec
data16
or
mov
iret
lahf
cmp
jnp
or
lods
popa
cmp
mov
out
sub
xchg
std
jle
push
mov
pop
cli
sub
ljmp
ljmp
mov
hlt
add
xchg
movsl
rcl
jbe
ss
fcompl
cmpsb
dec
or
xchg
mov
or
rcr
fsubrs
out
push
mov
test
dec
loope
insb
inc
cmp
out
mov
adc
ficoml
hlt
mov
insb
scas
sub
xchg
sahf
xlat
ret
mov
dec
jae
pop
jecxz
popa
int3
cmpsl
stos
loopne
cmc
hlt
jp
mov
and
scas
mov
cmp
and
clc
push
push
mov
dec
cmp
lret
clc
mov
adcl
lea
loopne
imul
push
fiadds
jb
pop
push
cltd
stos
fstpt
and
mov
inc
out
lret
mov
pop
cld
inc
popf
int
cltd
pop
pop
jmp
cmp
jg
pushf
movsb
mov
pop
arpl
jmp
and
dec
das
jg
movsb
xlat
fstpt
negl
dec
aas
inc
or
fisubrs
inc
pop
pusha
cmp
loop
sbb
inc
and
hlt
movsl
cmp
mov
mov
push
cmp
rorb
shlb
pusha
iret
ss
enter
sub
sbb
cld
dec
pop
xchg
mov
scas
or
ss
ja
xor
addb
cmp
ljmp
push
sub
inc
repnz
xor
sbb
push
stos
xor
jl
or
test
scas
mov
mov
inc
scas
repnz
shrl
adc
test
pop
fldt
or
hlt
xchg
mov
stos
push
rcl
je
in
or
test
aad
jmp
int3
movsl
xor
add
mov
leave
lret
pavgb
scas
popf
ret
lahf
lock
lock
mov
cmp
fisubrs
pop
and
push
mov
sbb
and
dec
fsubrs
in
enter
push
aas
lods
jb
jge
xor
pop
rolb
in
sbb
cmp
add
add
jnp
aam
stos
sbb
imul
mov
hlt
inc
jl
lahf
dec
outsl
mov
sub
loopne
mov
push
ret
mov
in
mov
adc
jp
incl
bound
jae
js
cld
push
jmp
mov
ret
out
leave
ljmp
test
mov
repnz
std
ds
mov
enter
push
jb
jo
jp
pop
repz
int
fnsave
fildll
in
mov
jg
push
push
pop
popf
dec
repnz
mov
inc
mov
sahf
scas
sbbb
gs
dec
out
jle
mov
cmp
fdivrl
ds
lahf
lahf
sub
subb
jecxz
sahf
fs
mov
mov
push
shll
sbb
orb
out
lea
pop
cmpsb
push
mov
jg
mov
mov
insb
shll
cltd
cmpsl
inc
pop
add
in
divb
ja
fidivrl
int
xchg
out
inc
dec
fmull
push
addr16
push
cmp
lods
dec
jl
inc
adc
mov
xor
jmp
fwait
dec
test
mov
pop
fs
js
mov
pop
pushf
repz
adc
lods
xchg
mov
push
xchg
sub
xor
jnp
pop
in
pop
and
movsb
sub
jmp
hlt
test
out
xchg
adc
sub
iret
mov
scas
pop
dec
enter
cli
jae
jmp
aaa
sub
jnp
roll
fwait
in
jne
mov
fwait
js
lods
shl
sub
and
mov
loope
mov
in
push
int3
adc
adc
mov
loop
fisubrs
xchg
pushf
adc
xor
repnz
mov
lcallw
es
jge
and
loope
mov
push
pushf
sub
ljmp
xor
cmpsb
leave
jmp
hlt
rcrb
roll
subl
jg
pop
pusha
sub
mov
std
sub
sti
in
sbb
add
cld
aaa
jnp
or
mov
jae
mov
in
mov
sar
rol
gs
scas
or
in
lds
sub
daa
cmpsb
movsb
scas
xchg
pop
mov
push
and
xor
sbb
ss
add
movsl
xchg
inc
and
fdivs
sarb
jne
xchg
add
jl
aad
sbb
sub
cmp
loop
rcl
inc
mov
in
out
push
sub
xor
shll
and
adc
mov
iret
xchg
xor
or
loope
or
and
pop
inc
leave
jg
das
cs
add
pushf
cmp
inc
push
jae
mov
fldt
xchg
pop
dec
mov
inc
test
push
jo
dec
inc
ret
sahf
out
aas
cmc
mov
mov
insb
lods
inc
inc
jmp
in
push
icebp
pop
orl
rcl
push
sbb
mov
cmpsb
stos
push
lahf
nop
in
dec
insb
insl
inc
test
mov
mov
out
cmp
inc
mov
inc
sbb
stc
jl
arpl
fdivl
xor
movb
shrl
cmpsl
inc
and
stc
or
popa
and
out
cwtl
or
xchg
fcoms
andb
dec
jae
xor
andl
popa
inc
mov
frstor
jle
cs
out
jnp
xor
ret
loop
xchg
and
pop
jne
nop
out
or
mov
jecxz
pop
ret
pop
movsb
xor
int
addl
bound
xchg
call
cmp
add
seta
scas
mov
lret
inc
inc
adc
fnclex
cld
adc
sub
fdivl
loopne
mov
xchg
aas
cmp
test
add
data16
mov
jmp
bnd
aaa
dec
scas
ds
mov
sub
mov
pop
sub
cltd
cmpsl
orl
xlat
sub
sahf
ret
or
push
fdivp
outsb
push
lock
lret
scas
js
fiadds
sbbl
mov
jb
mov
mov
pop
pminsw
aam
clc
pusha
cli
dec
sbb
nop
jbe
or
dec
inc
addl
pop
push
add
xchg
cmp
jg
mov
mov
or
inc
push
mov
sub
fimuls
push
inc
mov
or
xor
jno
out
mov
or
out
pop
mov
or
daa
and
lds
pop
xchg
xor
or
dec
shrd
or
push
xchg
dec
push
pop
stos
push
shlb
ret
sub
cs
sbb
loope
test
pushf
outsl
dec
sub
push
dec
mov
xchg
inc
inc
add
test
mov
xchg
lea
mov
fs
into
into
notl
imul
inc
test
pop
cmp
fwait
xchg
negb
stc
cmc
cmpsl
fwait
adc
in
pop
sahf
mov
repz
dec
jecxz
popa
imul
jo
push
add
test
aaa
adc
cmp
push
cmp
or
inc
or
pop
in
idivl
fs
in
cltd
dec
jns
out
movsl
xor
mov
xlat
sbb
test
ret
test
inc
jno
push
fwait
out
sahf
roll
mov
add
and
rol
scas
push
out
pop
push
repz
sti
xchg
adc
xchg
cmpsb
or
adc
pop
cltd
pusha
or
test
and
mull
push
je
jbe
cmp
loop
out
add
bound
loop
inc
push
add
cwtl
mov
or
dec
add
sahf
mov
xor
adcb
sub
adc
std
cmpsl
lcall
stos
pop
adc
jmp
clc
mov
pop
and
mov
orl
iret
imul
daa
mov
add
scas
push
ret
mov
jp
addr16
adc
dec
pop
jbe
imul
mov
aam
mov
icebp
cli
icebp
arpl
cmpsb
dec
iret
mov
mov
cmp
in
xor
pop
dec
int
insl
mov
xor
pushf
mov
xchg
push
sub
lret
sbb
mov
leave
push
lds
xchg
or
cmpsl
int3
ja
movsl
push
xor
xlat
mov
lret
stc
xchg
push
inc
test
insl
mov
cmp
mov
mov
mov
psubusb
fisubrs
jmp
and
cmp
andb
loopne
daa
pop
ror
inc
pop
add
and
testb
mov
scas
jle
pop
push
aaa
aad
outsb
mov
jl
leave
lods
ja
mov
gs
scas
aaa
dec
stc
fs
js
xchg
xor
xchg
lahf
fstl
in
out
out
in
int3
orb
adc
push
in
xchg
mov
mov
push
cmp
xchg
sub
in
xor
add
sbb
mov
lret
add
jne
daa
fstpl
idivl
rcrl
scas
sbb
pop
sub
mov
sub
cmc
rcl
push
sub
jmp
pop
adc
out
pop
sub
mov
or
jno
fnstsw
push
push
iret
sub
mov
or
rolb
icebp
fsubs
jmp
dec
mov
adc
popf
jmp
xchg
cli
pop
or
in
or
cli
pop
or
fdivrp
inc
mov
scas
mov
cmpsl
xor
mov
in
aaa
ss
sets
jmp
mov
mov
ljmp
mov
dec
mov
ffree
lahf
fadds
lock
jle
aam
mov
mov
xorl
stos
mov
out
notl
xchg
cmp
rolb
cmp
cmp
add
push
xlat
ss
lahf
mov
adc
ret
mov
xchg
jge
mov
or
cmp
out
dec
push
pop
shlb
xor
add
sub
jae
andl
out
repz
cmp
xlat
ss
lahf
aad
jae
enter
dec
add
shlb
std
fimuls
sbb
lahf
cmc
hlt
sti
jo
sub
out
ret
je
sub
je
fwait
das
xor
fldl
lds
xchg
stc
mov
xchg
sbb
outsb
xchg
add
lret
es
sti
sub
sub
fstps
mov
movsb
test
xchg
loopne
jl
dec
pop
inc
or
sbb
mov
xor
jno
adc
loopne
xor
cmp
inc
dec
es
pop
jecxz
dec
sti
aas
inc
sbb
push
push
xorl
dec
out
fcoml
out
pop
into
in
int3
sub
xor
ds
cmp
or
mov
xchg
jno
shl
fstps
in
lcall
sbb
shrb
test
mov
inc
xchg
movsl
and
pop
in
call
int3
pop
sub
sbb
and
push
lea
ret
cmc
testb
pop
sahf
mov
ss
jae
dec
mov
mov
xor
iret
repnz
dec
or
mov
inc
xchg
lahf
and
push
jecxz
xchg
and
mov
push
jne
pop
fwait
sbb
mov
lret
mov
sbb
jmp
clc
rorl
mov
loope
pushf
test
decb
int
in
cltd
in
sti
lea
push
pop
pop
jb
into
enter
lds
fiadds
or
in
cmp
jb
push
lds
sbb
jne
jp
mov
fsts
scas
js
sbb
mov
notl
nop
or
push
jp
mov
push
sub
xor
ljmp
arpl
cld
out
fldenv
inc
into
lahf
adc
pop
mov
arpl
mov
push
divl
lock
inc
stos
cltd
stos
lods
mov
mov
std
pop
push
pushf
push
repnz
cmpsb
xor
iret
jo
sbb
adcb
in
vpaddusb
int3
enter
gs
jg
and
xor
fisubrs
push
inc
pop
and
or
lcall
mov
bound
and
insl
push
lcall
mov
xchg
cli
xchg
mov
inc
test
mov
sbb
shlb
data16
aad
idivl
adc
add
pop
dec
rcrl
xorl
cmp
cld
ret
jbe
das
mov
jmp
addb
mov
and
out
jns
jno
mov
mov
jp
aas
inc
push
jg
stc
cmpsl
adc
cmpsb
mov
pusha
loope
lods
insl
dec
lcall
sbb
jno
fisubs
and
inc
adcb
js
inc
mov
sbbl
xchg
rclb
into
push
xchg
mov
pusha
push
divb
xor
sbb
fnstsw
pop
jmp
push
icebp
xor
xlat
jbe
add
adc
cmp
dec
hlt
cli
dec
stos
cmp
xor
loop
rcll
movl
pop
or
cs
imul
lods
mov
xchg
mul
jg
push
rclb
inc
xor
insb
jp
xor
dec
out
ds
sbb
loope
aaa
sbb
test
loopne
fsub
repz
popf
jb
ds
pop
sub
mov
jnp
loope
jmp
xchg
lods
cmpsb
test
scas
std
negb
add
out
or
mov
xchg
stc
mov
mov
clc
pop
movsb
ds
lods
outsl
leave
test
pcmpeqw
jne
cmc
out
scas
sub
xlat
push
enter
xor
xchg
adc
imul
fistpl
push
out
dec
rsqrtps
mov
imul
sub
sub
mov
xor
dec
insb
inc
testb
aas
xchg
or
mov
mov
or
std
adc
mov
and
loop
adc
dec
int
int3
pushf
popl
stos
mov
shlb
aam
jo
icebp
cmp
mov
incb
pop
mov
adc
jns
jle
aaa
add
ffreep
ljmp
fidivl
roll
mov
push
scas
mov
mov
push
movsb
jmp
push
xchg
insb
jmp
sti
test
das
lret
repnz
push
call
sub
xchg
push
cmc
inc
sub
shrb
test
lock
inc
jne
mov
dec
dec
push
stos
adc
into
iret
cwtl
xlat
fdivl
jae
lret
pop
mov
int3
bound
out
lods
in
fcompl
es
add
rorb
sbb
insl
rcll
sbb
popa
pop
and
lret
or
cld
cmp
lret
repnz
pop
in
js
fistpll
jns
ja
adc
shrb
xchg
push
scas
orb
sbb
add
fldt
dec
push
xchg
dec
mov
dec
popf
jg
xchg
cwtl
movsl
je
clc
mov
negb
mov
repz
outsb
cmp
mov
mov
out
sbb
inc
pop
outsb
mov
fisttpll
dec
jae
int
jno
xchg
sub
psraw
sbb
and
add
sbb
or
cvtps2pi
pop
pop
mov
mov
mov
dec
add
inc
cld
out
pop
sbb
in
mov
inc
int3
mov
push
insb
sub
push
repnz
nopl
xchg
and
cmc
imul
or
cs
mov
dec
call
lret
cmpsb
xor
cmp
fbstp
and
push
pop
jge
adc
push
fisttps
xor
inc
jns
xor
in
dec
sbb
sub
xor
aaa
mov
cmpsb
or
jl
ljmp
add
mov
inc
xchg
cli
cld
lahf
jmp
sbb
dec
pop
jnp
and
pop
fcmovne
in
and
daa
mov
js
ds
push
lahf
mov
ja
inc
jno
add
cmpsl
data16
sahf
push
fsubrs
cmp
clc
scas
jbe
push
test
enterw
or
icebp
daa
inc
test
sub
cmp
lcall
stos
xor
pop
mov
shrb
and
pop
lods
out
mov
arpl
sbb
sbb
and
dec
inc
imull
cmp
push
icebp
jno
and
out
fdivrp
xor
ret
dec
popl
fbld
xor
jg
xchg
in
jbe
cwtl
cmp
mov
aad
adc
aam
call
cli
clc
sbb
rorb
xchg
inc
mov
sbbl
adc
into
shlb
out
push
lcall
rcr
pop
jl
inc
cmp
xchg
cmc
out
cmp
and
mov
lods
movsl
xchg
sbb
push
push
fwait
popa
push
sub
mov
js
dec
outsl
jo
fisubrl
mov
lahf
mov
mov
add
and
bound
scas
inc
push
fidivs
mov
or
outsl
add
loopne
mov
test
shlb
outsb
dec
lea
mov
dec
idivl
adc
mov
das
ret
jbe
jb
jb
imul
jl
xchg
jp
jmp
cwtl
xor
test
cmp
xchg
mov
adc
xlat
std
xor
inc
insb
lods
mov
les
mov
push
pushf
test
ficoms
es
jbe
push
or
jecxz
out
or
pop
stos
loopne
inc
inc
push
dec
push
jle
fimuls
push
jmp
or
sbb
ja
lret
mov
out
jnp
mov
inc
pop
fistl
add
lds
xchg
addb
in
jbe
mov
ds
xor
mov
push
jne
adc
jbe
push
fdivs
adc
rcr
adc
je
mov
pop
inc
jecxz
aas
test
cmpsl
addr16
sub
lods
push
out
dec
and
jnp
outsb
dec
jg
jg
dec
and
repnz
das
dec
lret
mov
in
pushf
pop
sub
nop
add
out
pushf
out
sbb
jno
add
inc
sbbb
sahf
xor
shlb
sub
push
pop
orl
sbb
jg
push
adc
test
repz
inc
ud2
shll
mov
mov
cwtl
pop
dec
mov
cmpsb
cli
mov
or
sub
stc
mov
int3
pop
push
or
fisttps
mov
outsb
xchg
xchg
cmp
xor
std
mov
mov
cmp
arpl
aam
push
jns
test
sbb
dec
pop
movsb
pop
mov
inc
mov
pop
mov
stc
jo
out
dec
jl
rcrb
lds
pop
popf
stos
xchg
and
dec
xchg
roll
dec
ret
pop
sub
adc
ds
pop
pop
in
fdivrs
xchg
push
jle
mov
mov
lahf
int3
mov
les
push
adc
adc
push
fwait
xchg
jbe
gs
and
jae
adcl
push
addr16
sub
mov
dec
ficompl
or
jo
dec
sbb
sub
aam
daa
lret
ja
or
and
jg
dec
faddp
sbb
fstl
das
pop
mov
in
xchg
lods
subl
pop
cmp
add
loop,pt
repnz
sbb
push
inc
jmp
mov
push
xor
cmp
dec
push
out
pop
mov
scas
xchg
xchg
imul
sbb
jge
lea
push
cwtl
push
sti
aam
xor
test
mov
iret
lods
cmp
mov
decl
cmp
mov
xor
stos
sti
pop
push
mov
pop
rcrb
jb
mov
push
in
arpl
jp
sbb
xchg
xor
cltd
flds
lcall
xchg
add
into
mov
movsb
sub
lods
and
mov
and
insb
cld
dec
loope
xor
xchg
sub
sub
sbb
push
or
dec
enter
add
fisttpl
xor
sbb
or
adc
orb
jb
insl
movsb
repnz
lret
in
ja
sahf
push
lock
xor
jb
cmovo
mov
jl
cmpl
xor
in
fnstenv
push
das
outsl
sbb
adc
sti
mov
loopne
int
arpl
sbb
xor
test
clc
mov
lds
adc
fimull
mov
fidivs
push
adc
push
dec
es
mov
hlt
popw
out
cmova
cmp
jge,pn
xlat
sbb
sub
add
pop
push
mov
test
pop
add
pop
popa
icebp
pop
int3
pop
jbe
jp
outsb
in
imul
aaa
or
idivl
mov
lcall
xor
outsl
adc
inc
and
inc
andb
push
cmc
pop
lcall
jb
mov
lahf
sbb
out
dec
mov
and
out
sub
xor
mov
stc
dec
cmp
jae
fisubrl
in
inc
ds
sub
lds
mov
arpl
jno
sub
ds
imul
scas
jne
mov
pop
dec
int3
out
cltd
and
push
frstor
cli
pop
xor
jno
insb
mov
mov
lods
outsb
aam
fsubs
or
out
std
scas
pop
cmpsl
push
dec
xchg
and
imul
aam
inc
movsb
decb
icebp
and
das
fldenv
and
pop
and
xchg
add
jp
mov
out
jge
adc
cli
enter
cltd
jl
xchg
out
loope
mov
dec
call
and
mov
cmp
mov
add
push
adc
or
lret
adc
xorb
push
mov
and
and
jb
pop
sub
add
xchg
fwait
xlat
inc
imul
cmp
jbe
jecxz
pop
popf
dec
ret
or
cmp
out
push
loopne
pushf
sarl
je
arpl
imul
and
mov
test
cmp
cmp
jb
ret
fistpl
mov
xor
fwait
arpl
std
insl
xchg
fisubl
mov
mov
rolb
sbb
shlb
sub
pop
mov
adc
dec
push
push
outsl
adc
fwait
sub
adc
sbb
cmc
iret
xchg
dec
inc
sbb
cltd
arpl
dec
gs
lods
xchg
xchg
subl
cmp
lret
or
mull
inc
lret
lahf
dec
fimull
xlat
cmp
xlat
jno
dec
insb
scas
enter
xchg
xlat
xchg
data16
lret
cld
sbb
mov
push
xor
dec
test
sbb
or
push
aaa
push
dec
in
mov
sub
in
btc
jg
int
lea
xchg
lret
cld
rorl
popf
outsl
cmp
adc
lret
pusha
mov
gs
pop
mov
push
xor
jge
push
sub
repz
inc
add
and
stc
sub
insb
mov
sti
mov
sub
sub
aad
mov
test
stos
push
push
cmpsb
ljmp
push
xchg
sub
ret
dec
out
or
mov
xchg
lock
push
inc
dec
cmp
pop
mov
cwtl
xchg
ficomps
jg
dec
adc
mov
sub
push
adc
pop
fidivl
leave
cmc
xchg
mov
push
dec
mov
sbb
out
pop
stc
jns
xchg
and
lcall
je
lahf
fisubs
ljmp
xchg
call
jb
aaa
cwtl
js
pop
or
aam
flds
adc
movsl
mov
mov
inc
jo
fwait
sti
out
push
imul
and
xchg
inc
stos
and
loopne
daa
jne
adc
adc
je
xor
nop
loope
pop
popa
cwtl
push
mov
imul
nop
scas
es
sti
jp
je
dec
leave
outsl
pushf
ds
push
pop
mov
lret
fcmovne
ljmp
inc
adc
add
not
das
outsb
addl
jg
or
stc
vprotq
ds
lret
ljmp
loop
insl
in
ljmp
por
ljmp
loope
jns
mov
es
notb
jne
and
dec
fs
rorb
std
fwait
jmp
push
ljmp
mov
mov
inc
lahf
aas
cli
and
movsl
push
test
int3
cmpsl
sarb
sti
inc
push
aad
xor
pop
repnz
std
pop
jecxz
lret
dec
in
cmp
cli
jle
in
cmc
ret
leave
mov
pop
cwtl
insl
mov
pop
xchg
out
mov
nop
pop
sub
mov
je
mov
cmpsl
add
pop
pushf
xor
xchg
ret
jl
mov
xlat
and
mov
stc
jbe
push
push
inc
lahf
jnp
push
xchg
xchg
jo
dec
data16
mov
sbb
cmp
sbb
sbb
pcmpgtd
lock
xor
fistps
push
outsb
cld
bound
fcmove
out
sub
loope
jmp
stc
movsb
call
pop
mov
das
je
jnp
cmpsw
lcall
lcall
pop
int
cmc
pop
mov
and
subl
pop
mov
mov
aaa
jae
pop
and
cmp
pop
jmp
push
in
dec
stos
jmp
int
in
mov
int3
cmc
mull
test
lods
mov
and
pop
ffreep
xchg
imul
ljmp
xor
icebp
push
insb
daa
js
enter
rcrb
cmp
andb
xchg
aam
push
out
movsb
repz
mov
sub
gs
testb
sahf
cmp
inc
divb
scas
pop
pop
sti
push
test
mov
sub
mov
xchg
iret
inc
pop
mov
mov
mov
out
repnz
outsl
jbe
push
sub
imul
lcall
in
inc
mov
loope
xchg
cs
push
sti
mov
mov
and
pop
out
data16
mov
mov
shlb
inc
leave
scas
sub
mulb
es
xchg
jns
clc
sub
sbb
repz
pushf
jge
ret
sbb
icebp
jl
les
out
fcmovb
cltd
lods
xchg
popa
into
jae
cmpsl
aaa
aas
xor
inc
popf
adc
push
cltd
pop
pop
int3
pop
xor
pop
idiv
pop
cmp
fsubrs
js
xor
stos
js
cld
pop
inc
movsb
imul
movsb
lods
pop
and
mov
push
jecxz
inc
fists
xchg
jmp
sbb
ret
jl
xchg
mov
lcall
aaa
aad
ja
mov
cmp
cli
test
rcll
std
mov
add
mov
pop
jo
stos
cld
xchg
jp
test
icebp
add
stos
mov
mov
bound
push
leave
push
dec
dec
xor
ficoms
iret
shll
insb
jbe
mov
sbb
leave
test
push
adc
ljmp
test
test
lods
icebp
mov
ret
repz
aam
imul
enter
std
sbb
jmp
stos
mov
mov
cmpsl
mov
push
jmp
inc
ret
add
or
ret
fninit
repnz
xchg
add
popa
rcll
lret
sarl
mov
jp
pop
rorl
scas
arpl
sub
mov
cltd
or
popf
jbe
pushf
or
push
fwait
loopne
pop
jl
sub
mov
xchg
clc
pushf
ficoms
loopne
aam
sub
movsb
mull
cmp
ja
mov
xchg
sbb
scas
ret
cmpsl
ret
int
das
or
mov
jecxz
push
in
nop
cmc
fcmovb
sbb
add
notb
jp
jo
testb
inc
xchg
lcall
mov
xor
int3
stos
popf
inc
js
scas
jns
sbb
mov
stos
push
ret
push
cld
mov
jae
lock
xlat
aad
mov
sahf
push
jl
or
and
mov
imul
sub
push
movsl
popa
xchg
lea
cmpsl
jne
sti
fistpl
push
lods
addl
idivl
in
xchg
xor
repz
xor
mov
or
pop
cmp
aam
xor
shrb
sbb
inc
mov
dec
enter
outsb
jl
out
lods
dec
in
push
jmp
call
pop
rol
sub
dec
cmpsb
pop
fnstcw
jo
mov
sbb
push
lahf
loop
ja
out
arpl
movsb
and
adc
sbb
add
call
jno
push
repnz
shr
and
aas
hlt
hlt
pop
xor
mov
mov
mov
addr16
movsb
test
ds
mov
rol
and
cli
mov
mov
add
cmp
inc
inc
xchg
andb
es
stos
xchg
mov
mov
mov
mov
shrb
and
or
fcmovb
inc
mov
arpl
out
jns
lahf
aaa
push
jne
int
clc
add
movsb
add
lods
dec
mov
pop
jle
pop
in
mov
movb
fisttps
negl
fstps
loopne
xchg
sub
push
or
pop
push
push
cmpsb
push
std
testb
sbb
dec
push
outsl
push
lock
dec
xchg
mov
jg
xchg
ds
cmpl
push
jle
pop
dec
sub
lods
lock
out
ljmp
dec
ret
mov
sub
es
mov
aam
data16
stos
push
je
stos
into
dec
ja
adc
add
or
clc
jl
pop
jns
jne
pop
out
adc
outsb
and
sub
dec
das
sbb
sub
or
mov
xchg
cmc
std
sub
ja
add
jp
cmp
cmpl
ret
dec
and
jnp
push
popf
jecxz
jnp
mov
sbb
sbbl
add
adc
dec
or
mov
mov
xlat
jne
in
mov
mov
pop
int3
jb
pop
cmpsb
loop
iret
push
clc
fs
dec
test
jge
ret
mov
jmp
pop
and
or
sub
and
dec
gs
xor
xchg
push
jp
test
fucomi
push
xor
addr16
fisttps
or
lcall
pop
xor
jae
sub
dec
jecxz
mov
jno
lds
xchg
jp
lahf
lcall
js
stc
popf
and
adc
cmp
lds
aas
ds
xor
adc
and
aam
outsl
ret
sbb
stc
jns
rcrl
cmpsb
sub
bound
xchg
jns
nop
loope
out
push
jo
cmp
mov
mov
and
es
pop
in
push
sahf
cwtl
mov
fbld
sbb
jmp
inc
out
pop
icebp
ds
lds
je
sub
xchg
fwait
cli
mov
dec
dec
dec
cld
sbb
aam
sub
and
enter
sbb
lods
inc
out
repnz
adc
call
pop
lret
popa
xchg
cwtl
int3
xchg
inc
hlt
mov
notl
pop
dec
push
lret
mov
cmp
fildll
mov
ljmp
xor
ds
mov
ds
mov
adc
popf
es
movsb
and
fcomp
jb
jge
jne
cltd
fs
lock
repz
movsb
inc
fwait
in
icebp
lcall
push
pushf
xor
lahf
mov
mov
cmp
not
mov
inc
xchg
jae
aas
pusha
fstl
push
push
into
pushf
cltd
or
inc
je
xchg
addl
ds
scas
xchg
ficoml
clc
loope
aas
jbe
js
cmpsl
daa
jg
jge
cmpsb
loopne
movsl
scas
mov
stos
inc
lods
int3
xchg
insl
jb
stos
or
mov
and
aam
popl
xor
pop
push
sarl
add
and
jo
rcl
icebp
inc
pop
cmp
dec
sub
sub
sbb
outsl
aas
dec
xchg
or
xchg
cmp
pop
aam
shlb
mov
jle
cmp
out
and
ret
lahf
mov
jns
or
or
in
inc
shrl
mov
jmp
hlt
push
insl
lahf
stos
pusha
adc
and
add
pop
in
cmc
mov
jecxz
movb
sti
repnz
std
jb
enter
aaa
xlat
popa
jge
test
imul
movsl
or
xor
or
mov
add
lods
sbb
imul
fadd
inc
inc
xchg
aas
std
cld
cmp
es
hlt
mov
and
push
cmpsb
les
dec
xlat
jne
mov
ds
aaa
mov
dec
loop
xchg
es
andl
js
inc
test
sbb
out
out
inc
lret
xabort
pop
mov
out
sahf
push
cwtl
ljmp
jl
sub
lds
faddl
xchg
cmp
or
push
xchg
xlat
jp
pop
dec
lahf
dec
mov
inc
ds
xor
mov
xchg
icebp
out
fmul
jb
inc
movsb
pop
bound
insl
sub
incb
jg
adc
pop
jbe
out
pushl
lret
in
cmpl
dec
jmp
es
adc
and
mov
je
adc
xor
pop
test
xchg
ss
outsl
or
faddl
fcmovnu
int
cmp
dec
lods
test
scas
call
scas
xor
xchg
push
or
sub
je
shll
push
int3
cmp
push
sbb
inc
insb
pop
dec
push
out
clc
mov
test
movsl
jg
daa
pop
add
leave
bound
cmp
jnp
add
jb
mov
pushf
adc
sbb
popa
scas
loopne
ljmp
xchg
into
dec
mov
sub
lret
sbb
test
fstpt
and
sbb
negb
imulb
push
lcall
ja
mov
into
mov
push
fwait
sbb
xor
testl
cltd
and
test
lret
mov
pop
mov
rolb
fmull
adc
rcll
or
mov
nop
testl
insb
adc
push
das
clc
in
insl
add
les
and
stos
jle
cmp
mov
cld
jp
mov
mov
jno
inc
icebp
add
mov
fcompl
cmp
int3
mov
adc
or
and
and
cs
imul
lcall
and
mov
idivb
sbb
xor
cmpsl
sbb
and
cmp
xor
aaa
mov
testl
mov
ja
hlt
stos
mov
cmp
cmp
mov
xor
rcl
cmp
ljmp
and
nop
out
ss
outsl
std
jmp
popa
lret
xor
int3
push
mov
pop
lock
mov
popf
cmp
ret
jl
pop
inc
clc
cmpsl
out
fnstcw
in
out
cwtl
adc
xor
repz
int3
fidivrs
or
push
sbb
pop
jmp
ret
pusha
and
subb
jmp
nop
mov
push
xor
push
test
jb
pusha
inc
out
mov
daa
rolb
sbb
dec
arpl
insl
ss
adc
jo
lret
push
stos
inc
sbbl
pushf
sub
mov
cs
sbb
hlt
aas
xor
or
add
fdivs
xor
and
and
out
add
and
pusha
sub
shll
in
ror
jbe
and
push
pop
ja,pn
cmp
mov
movsb
and
mov
gs
cmpsl
fbld
scas
cmp
das
cmpsl
in
out
xchg
out
pop
adc
into
repnz
outsb
insl
daa
xchg
mov
test
inc
or
dec
test
loop
cmc
jg
add
dec
adc
es
cmp
in
jmp
je,pn
pop
jg
loopne
push
popf
dec
xor
fcompl
addl
leave
or
pop
pushf
mov
movsl
adc
hlt
add
bswap
adc
jl
int
popa
dec
sbb
mov
icebp
aas
cmp
enter
pop
adc
lea
les
scas
sbb
insl
cltd
cmp
mov
ss
mov
lds
lcall
clc
mov
adc
ss
mov
clc
lock
bound
sbb
fstl
sub
adc
xor
sub
loope
xor
mov
rorb
cmp
lret
cld
dec
adc
xchg
push
mov
pusha
mov
inc
out
inc
xchg
xchg
pop
push
xor
pop
sub
or
cmp
push
or
mov
push
sbb
aas
adc
inc
xchg
jns
xchg
adc
mov
and
xchg
int
sub
fs
lods
inc
inc
or
repz
mov
and
push
push
add
push
lcall
and
or
mov
push
dec
push
jg
outsb
leave
adc
sahf
outsl
or
jecxz
rcrb
adcl
pop
add
inc
outsb
lods
sub
xor
sti
nop
out
aaa
mov
decb
and
stos
stos
cmp
jg
ds
lea
ljmp
mov
xchg
xor
bound
mov
jle
pusha
lahf
icebp
adc
cmp
divl
dec
test
data16
push
rolb
rorl
sbb
outsl
dec
xchg
push
int
xchg
addr16
iret
clc
lods
ffree
and
out
fcmove
xchg
sbb
out
js
push
xor
int3
lods
xor
movsb
xlat
fcomp
or
dec
cmc
mov
rol
mov
push
pop
daa
imul
ja
imul
jbe
adc
jp
movsb
jae
sti
cmpsb
xchg
testb
adc
arpl
pop
je
out
stc
jns
lock
in
xor
mov
xor
sub
sub
shll
outsl
shlb
fsubl
test
sub
fadds
mov
shlb
add
shl
popf
pop
in
sbb
xor
or
mov
test
and
cmp
lret
inc
out
or
sbb
ficoms
test
lods
add
or
loopne
sbb
into
das
jp
adc
bound
enter
push
vprotb
lds
cs
popf
test
rcrb
das
inc
movsb
add
nop
cmc
or
popf
cmp
es
pop
sub
cs
add
faddl
push
xor
push
mov
mov
cltd
jb
enter
les
jae
push
addb
mov
popa
xor
out
loope
xchg
dec
std
xchg
add
popa
shlb
int
mov
fpatan
xchg
push
mov
lods
add
out
or
outsb
pusha
scas
scas
adc
loop
cwtl
pushf
mov
iret
nop
mov
sarl
mov
xor
outsl
sub
dec
aad
mov
add
adcl
shl
or
test
xchg
or
or
xlat
and
lods
push
fstpt
jae
scas
ret
push
fwait
mov
xlat
push
loope
pop
mov
xor
inc
jp
and
das
add
pop
neg
addr16
mov
lahf
gs
or
lcall
lahf
cli
adc
insl
adc
mov
imul
fsubp
roll
imul
sbb
insb
das
push
in
int3
sbb
sbb
xor
lret
stc
fwait
scas
sbb
andl
dec
idivb
iret
sub
or
lret
xorl
adc
pop
fisubrl
inc
xor
push
cltd
cld
aas
sarl
cs
pop
repz
cmp
std
push
icebp
scas
mov
and
fcomps
sti
nop
cmc
scas
cmp
es
shll
cmpsl
arpl
int
push
and
and
out
cmp
cmpsl
lds
fs
sbb
bound
in
and
dec
add
xchg
xchg
es
xor
add
sub
inc
pop
out
lret
sbb
arpl
pop
jl
jnp
mov
fldl
clc
push
jae
push
nop
loope
mov
cmp
js
mov
insl
and
jae
mov
les
and
std
mov
lods
out
adc
imul
fcmovne
or
adc
mov
mov
dec
sub
clc
movsb
mov
out
in
push
pop
xor
fimull
test
push
and
adc
pop
out
dec
pop
outsb
sti
lods
neg
fistl
push
loopne
out
data16
in
xor
aaa
and
testb
inc
movsb
lret
fwait
gs
test
jne
jle
pop
idivb
xchg
and
les
mov
jge
bound
xchg
fidivs
jge
shlb
ror
les
jg
shr
das
in
out
pop
aad
or
mov
outsb
or
jg
sbb
or
lods
movsb
jns
loop
fs
les
int3
dec
mov
mov
dec
and
cli
sub
add
adc
jmp
dec
mov
dec
scas
popf
in
fldenv
dec
pop
adc
test
mov
out
jp
roll
loop
fs
cmc
rorb
pushf
mov
mov
inc
mov
ljmp
ficomps
mov
rorl
enter
andl
inc
push
sbb
mov
addr16
mov
shlb
mov
mov
mov
adc
iret
inc
idivl
pop
jo
jns
push
sbb
in
add
push
outsb
pusha
mov
lret
ss
repz
add
mov
fdivrl
adc
push
add
push
pop
ljmp
jmp
push
sub
ficomps
in
cltd
xchg
inc
sub
inc
cmp
mov
dec
mov
and
mov
sbb
cld
push
adc
xlat
roll
aaa
subb
xchg
cmpsl
in
dec
adc
or
push
repnz
imul
sbb
push
incl
xchg
push
dec
cltd
lret
jp
sar
cmp
push
pop
cmp
adc
into
test
inc
pop
jecxz
push
push
std
out
adc
sbb
mov
jmp
sub
int
pop
jmp
ret
mov
push
adc
sahf
mov
add
cmp
fdiv
xchg
push
daa
in
jp
mov
adc
cmc
pop
or
pushf
gs
fmuls
add
mov
movb
rcr
fimull
lods
into
mov
sbb
int3
or
mov
xchg
fs
cwtl
sub
leave
cld
mov
ljmp
mov
adc
aaa
inc
mov
xor
orl
inc
mov
pusha
add
int
sub
bound
cwtl
fs
test
jge
mov
sbb
and
adc
test
sti
cli
movsb
outsl
push
cmpsl
cmp
data16
stos
or
cwtl
cmp
add
and
stos
lea
cmpsl
loopne
xchg
out
inc
fnstenv
jp
out
push
adc
mov
jb
js
pop
rol
fwait
and
pop
jg
sub
scas
pop
into
shl
in
mov
popa
shrb
jo
cmp
xchg
mov
mov
cmp
sub
nop
rcrb
pop
outsb
xchg
pop
sti
xlat
adc
pop
das
lock
mov
or
xor
and
in
xchg
enter
fcomps
xor
mov
xchg
out
xlat
fisubl
mov
loop
sbb
call
pop
and
ja
nop
add
push
jno
xor
icebp
push
add
mov
call
xchg
repnz
adc
xchg
push
sbb
jae
cmp
adc
es
xor
repz
push
stos
sbb
xor
mov
test
mov
lock
mov
sub
adc
pushf
repnz
push
rclb
push
mov
movsb
inc
inc
xchg
push
mov
fxch
xchg
ror
push
jmp
gs
fdivr
std
cltd
jp
ja
arpl
fsts
jmp
rcll
std
pop
rorb
mov
sub
cld
js
mov
fwait
jno
sub
test
xchg
nop
stos
je
cmpsl
movl
repnz
cli
cmp
jl
inc
out
push
or
mov
mov
pop
cmp
daa
cltd
jle
jae
fs
jno
stos
mov
iret
cld
stc
pop
sbb
inc
int
hlt
lock
jge
sbb
mov
jno
inc
inc
and
and
jbe
lea
xor
insb
cmp
sub
notl
stos
mov
pusha
aam
repnz
xchg
cld
mov
xchg
ds
mov
daa
scas
jp
frstor
sub
push
arpl
mov
sahf
adc
add
cmp
xchg
mov
pop
dec
dec
and
test
mov
pusha
insl
fwait
test
mov
test
sbb
ret
or
sti
mov
out
clc
lret
sahf
jae
mov
test
mov
xchg
pushf
negb
inc
aaa
mov
mov
cltd
test
push
ljmp
ja
sub
sarl
arpl
mov
sbb
lret
mov
jl,pt
mov
out
popf
sbb
add
call
mov
fidivs
and
jmp
sar
repnz
inc
or
int3
pop
jl
mov
xchg
jns
xor
jle
nop
xlat
and
je
cltd
jnp
popa
in
lock
cli
lds
mov
push
add
out
ret
or
pushl
cmp
dec
pop
xchg
ds
jbe
aad
in
adc
lahf
and
cmp
sub
sbb
in
popf
rsm
sbb
lcall
jno
xchg
jns
hlt
jg
xchg
and
xlat
xor
popf
movsb
fs
fistpll
test
nop
or
cmp
outsl
xchg
jmp
add
fiaddl
lret
dec
fsubl
adc
lret
arpl
cmp
xor
fildl
mov
adc
aaa
inc
pop
inc
xor
movsb
imulb
cmp
and
jmp
repz
leave
push
scas
fs
addl
pop
mov
xor
mov
imul
mov
and
std
scas
add
pop
or
popa
fwait
xchg
enter
test
loop
mov
push
push
inc
jns
lret
outsl
xchg
filds
scas
xor
push
add
push
mov
int
sub
add
stc
adc
out
jecxz
lahf
out
jne
in
call
cmp
inc
sbb
lcall
sbb
divb
mov
dec
jp
dec
jo
xlat
push
insb
test
sbb
in
loope
scas
imul
fs
cmpsb
push
out
mov
or
dec
jl
loopne
popf
xor
je
push
add
jo
and
insb
hlt
and
xchg
adc
js
mov
mov
xchg
or
fdivl
pop
enter
push
je
push
xchg
sub
sti
adc
aad
ret
cmp
std
iret
pop
outsb
xchg
bound
scas
or
ds
add
shlb
xchg
std
pushf
mov
mov
mov
xor
cwtl
dec
cmp
or
jb
popf
fxch
pop
mov
inc
clc
sub
out
aam
pop
stos
andb
jge
xchg
sub
dec
and
push
stc
mov
jge
mov
je
cmp
adc
jge
iret
jge
pop
mov
inc
adc
cmpl
int
mov
pop
shll
mov
lods
mov
rcr
enter
add
xorl
icebp
push
orb
lods
dec
sbb
mov
add
jmp
out
daa
js
out
aas
ret
inc
xor
out
jnp
fsubs
rolb
sahf
or
xchg
sahf
mov
cmp
ja
loop
dec
jo
fadds
je
jns
loopne
xchg
movsb
or
cmc
sbb
dec
pop
pop
jge
int3
shll
aam
sub
shrl
or
jl
mov
inc
add
div
push
sub
jbe
mov
adc
in
dec
adc
out
adc
lret
cs
lahf
add
jp
lods
push
mov
in
and
push
or
add
jp
test
dec
mov
shlb
sarb
push
insl
lea
lock
sub
stc
cld
dec
pop
inc
into
movsl
int3
in
push
inc
fcmovb
out
test
leave
pushaw
shld
dec
xchg
inc
mov
stos
das
and
test
lret
lret
scas
xchg
int3
or
push
ret
jmp
inc
jge
inc
out
push
call
insb
scas
out
into
sub
or
data16
xchg
mov
dec
lds
ret
je
scas
push
push
sahf
movsb
push
sbb
xor
or
pop
jge
je
sub
xchg
sub
push
mov
adc
jge
cltd
in
ljmp
jg
xor
loop
cs
mov
dec
inc
leave
dec
mov
popf
jp
sti
cwtl
push
xchg
arpl
push
dec
cmp
adc
dec
fwait
insb
push
dec
mov
or
fistl
movsl
js
test
mov
adc
stos
mov
add
fmull
daa
ret
push
cli
arpl
addl
dec
mov
xchg
adc
adc
and
rolb
int
sbb
jmp
sbb
mov
or
roll
ret
stos
inc
mov
out
out
and
and
xor
in
adc
mov
cmp
fiadds
aas
int3
mov
in
addl
jnp
enter
or
mov
jl
fcmovnbe
in
ror
lea
je
dec
sbb
or
adc
mov
xor
cmp
adc
jmp
sub
mov
scas
xchg
outsl
sub
xlat
lahf
add
inc
adc
push
jg
hlt
pushf
outsl
jge,pt
outsl
pop
mov
orl
sub
jno
repnz
popf
xor
outsl
shll
aad
sbb
xor
mov
sbb
mov
repnz
cmc
or
lahf
mov
lcall
xor
and
jns
sahf
mov
mov
dec
mov
cli
mov
mov
jle
js
aad
jle
sub
adc
xor
call
push
sub
mov
or
sub
sbb
sub
xor
fwait
push
inc
jmp
mov
or
test
adc
jo
jb
cld
mov
push
pusha
inc
out
adc
cmp
lods
icebp
icebp
lahf
pop
or
adc
in
es
sub
pusha
pcmpgtd
xor
out
mov
sub
mov
in
pop
je
lret
ljmp
shll
lea
fisubl
add
in
movsl
ud1
lret
cld
inc
lods
rorb
jp
mov
xchg
sbb
orl
ss
movsb
jo
loope
pusha
xor
addl
and
mov
loop
ret
shll
aad
adc
xchg
cmp
adc
cmp
lods
or
movb
push
stc
fidivs
orl
add
and
fs
mov
mov
in
pop
cmc
or
cmp
adc
and
inc
pop
pop
add
cmpsb
xorb
movsl
leave
mov
orb
mov
rcr
sbb
fldl
xor
add
sti
scas
xlat
jp
sbb
xchg
and
cmp
jp
pop
xchg
sbb
scas
aas
int
cltd
mov
jne
inc
sub
and
dec
xor
loopne
dec
and
stos
push
adc
stos
pusha
push
lcall
hlt
mov
in
jb
int
shll
inc
sarl
test
addr16
xlat
add
out
popf
fmul
jmp
push
dec
test
mov
sahf
loopne
xchg
ja
sub
shlb
cmc
dec
cli
mov
fisttpll
sar
aaa
xor
scas
in
idiv
inc
sub
lea
das
das
rcll
scas
rcll
pop
stos
pop
out
sbb
fwait
les
mov
jne
scas
pop
iret
les
jp
pushf
add
jo
in
ds
mov
sub
jno
lea
clc
idivl
repnz
es
dec
xchg
popf
mov
movsl
frstor
dec
cmp
fidivrl
call
push
mov
mov
pusha
xchg
or
adc
jecxz
mov
shl
xor
fs
push
mov
xor
ljmp
xor
inc
sub
sti
xchg
into
mov
push
mov
xchg
ja
mov
xchg
fstpl
outsl
mov
inc
inc
sbb
or
pop
aad
pop
ljmp
outsl
sbb
jle
cmp
push
imul
mov
or
pop
xorl
inc
cwtl
cli
test
jnp
jbe
or
jo
test
jb
xchg
cmpsl
dec
hlt
mov
cmpsl
aaa
ss
xchg
dec
stc
push
mov
and
xchg
dec
fcmovnu
fstpt
fstpl
nop
sub
popa
xor
es
stc
loope
mov
pop
push
adc
in
dec
push
decl
into
jge
out
enter
push
jb
cmp
xor
call
je
add
lret
and
push
sbb
mov
aam
xchg
mov
push
or
repz
in
movsb
jbe
mov
cmp
mov
pop
hlt
movsl
adc
lds
pop
je
cmp
and
inc
jae
imul
shrl
mov
std
cmpb
mov
hlt
or
repnz
cmpsb
mov
inc
cmpsb
popf
adc
out
mov
xchg
adc
pushf
xchg
stc
movsb
pop
sbb
pop
or
adc
mov
sbb
test
xchg
adc
cwtl
or
sbb
inc
dec
ret
xor
or
sbb
enter
popf
jg
icebp
scas
sbb
lret
push
jecxz
pop
std
dec
scas
movsl
aas
mov
adc
out
mov
jno
inc
pop
stc
adc
jg
aam
mov
in
ret
or
popa
rcrl
stos
dec
xorb
ds
daa
sbb
fwait
dec
pop
loopne
shlb
and
stos
std
outsl
mov
test
sbb
mov
or
in
pusha
inc
xchg
bound
out
andl
das
ss
cwtl
xchg
lcall
or
jbe
pop
cmp
mov
sub
mov
and
incb
idivl
fwait
insb
in
and
xchg
pop
insb
into
pop
xchg
je
scas
and
pop
and
adc
or
dec
std
adc
repz
mov
scas
cmp
aaa
add
cmp
jb
pop
or
clc
orl
mov
mov
jecxz
cmp
xor
sub
pop
hlt
push
or
aam
or
sub
sub
mov
dec
hlt
adc
je
popl
mov
push
sbb
add
insb
das
pop
mov
jle
pop
popf
or
in
jnp
ljmp
sbb
push
mov
repnz
insb
cli
test
fsubrs
cmp
mov
jle
sub
arpl
pop
cmp
or
pop
inc
xchg
clc
sub
lret
ret
xchg
and
pop
pop
dec
ja
inc
ret
call
mov
lods
mov
push
stc
xchg
cmp
lcall
sahf
mov
push
in
pop
mov
push
mov
jg
mov
mov
and
xor
mov
test
push
cmpsb
outsl
movsb
bound
xchg
adcl
jo
sub
mov
ror
mov
pop
movsb
push
cli
loopne
int3
sub
incb
test
xlat
std
cwtl
ja
rcrl
inc
pop
andl
push
jle
cmp
push
mov
or
shr
xor
call
xchg
loopne
call
insl
mov
aaa
fwait
xchg
push
insb
clc
xchg
xor
xchg
pop
pushf
stos
leave
lock
je
mov
movsl
andb
bound
xchg
jge
mov
mov
push
pop
adc
mov
add
out
lock
outsl
or
xchg
cmpsl
dec
jmp
aaa
leave
nop
add
arpl
or
xor
ljmp
cmp
add
mov
sarb
fsts
pop
inc
xor
jg
jo
push
sbb
dec
xor
or
xlat
sub
and
or
dec
push
pop
or
test
dec
ds
lods
push
mov
cmpb
mov
jecxz
jl
pop
movsl
mov
xchg
je
sbb
dec
pusha
and
scas
fmul
jge
push
mov
and
inc
pop
cs
outsl
add
not
jle
mov
addr16
mov
pop
push
dec
rcrb
pop
jge
pop
notl
dec
add
xchg
andb
add
adc
jp
int3
mov
bound
iret
sub
in
xor
xchg
pop
das
pop
jae
inc
or
fstl
out
je
sbb
xchg
xchg
sub
fisubs
in
imul
push
pusha
cwtl
mov
xor
out
xchg
in
mov
adc
out
aaa
add
fwait
mov
daa
push
pop
movsl
stc
push
lods
mov
addr16
and
lcall
test
mov
pop
adc
call
inc
mov
lea
div
cmp
insl
mov
push
xchg
outsl
push
out
inc
ds
and
stos
arpl
push
push
in
mov
jle
lock
adc
cmp
subl
pusha
dec
jo
pushf
mov
notb
cltd
jae
cmp
cld
test
and
sbb
lcallw
cltd
dec
xor
enter
leave
pop
outsb
data16
sub
loopne
fidivrs
adc
xchg
pop
pushf
fmull
pop
and
cs
push
add
adc
xchg
sbb
pop
fsub
pushf
data16
push
fsubrs
not
pop
clc
outsb
ja
out
mov
mov
cwtl
mov
dec
stos
push
shl
lods
loopne
call
add
jno
inc
push
mov
pop
push
sub
shlb
decl
jp
loopne
test
popa
mov
push
sbb
inc
mov
xchg
add
push
xor
loope
lret
sbb
daa
jg
mov
pushf
cmpsb
scas
push
out
or
and
filds
out
in
dec
mov
cmp
or
inc
sahf
int3
repz
push
jbe
lret
jb
bts
mov
bound
cwtl
std
xchg
lret
inc
jg
jae
outsl
cmp
jne
xchg
sbb
std
push
sub
jmp
out
clc
shl
sbb
das
mov
xor
mov
aaa
out
in
xor
lods
inc
pop
inc
xchg
mov
push
push
jl
xor
loopne
cltd
and
xlat
mov
out
xchg
mov
inc
dec
add
xchg
mov
pop
pusha
out
sbb
sub
andl
aam
cmpl
adc
xor
inc
call
aaa
in
nop
add
adc
pusha
idiv
imul
or
xchg
out
fdivrl
pop
dec
daa
repz
push
fcompl
mov
addr16
cmp
pop
xchg
les
lods
adcl
xchg
movsl
cs
testb
addb
shll
rcrl
loopne
cmp
or
inc
mov
mov
or
je
cwtl
dec
aas
cld
fadds
jecxz
mov
lock
mov
xchg
ret
push
test
add
mov
cmp
mov
push
test
inc
jno
xor
adc
mov
mov
in
dec
inc
push
sbb
in
and
in
add
mov
jle
mov
fdivrs
sbb
jnp
xlat
sahf
xor
lcall
mov
inc
into
enter
sarl
shrl
test
cwtl
sbb
mov
mov
je
dec
cli
sahf
hlt
repz
jb
or
push
and
cmp
fwait
rcl
cmp
sub
hlt
fstl
mov
arpl
idivl
adc
loope
leave
mov
or
jae
daa
nop
jle
xlat
movsb
icebp
cmp
sbb
int
repnz
loop
sbb
loope
pop
sub
andb
orb
xlat
add
fistl
mov
insl
in
sbb
cs
jmp
xchg
jecxz
mov
mov
icebp
inc
mov
subl
inc
call
or
push
dec
popf
xor
aad
cmpsl
or
fcmovne
fldcw
gs
xchg
push
lds
cs
sbbb
insb
xchg
lock
movsl
stc
jg
sahf
push
cmp
out
decl
adc
mov
xlat
add
sti
inc
adc
cmp
icebp
mov
call
ds
dec
lcall
out
cwtl
jno
and
es
mov
cmp
es
int
dec
das
fs
shl
xchg
fsubp
and
jns
or
cmp
cli
sub
or
or
xchg
mov
sub
xchg
mov
xchg
jae
ds
gs
std
in
ret
push
aam
popa
push
stc
mov
mov
aam
jmp
lahf
xchg
out
dec
in
test
xor
fdivrs
es
sti
loope
call
std
ds
dec
repz
out
fbstp
cmp
jp
out
push
ret
jne
outsb
addr16
lret
ljmp
pop
lcall
insb
mov
pushf
mov
push
fstpt
sbb
ret
jno
mov
mov
mov
xor
test
and
test
sub
iret
xchg
push
dec
mov
jg
mov
cmc
or
pusha
sbb
into
adc
in
xorl
std
xor
pop
or
or
xchg
aaa
push
mov
or
add
sbb
sbb
shl
fdivrl
jns,pn
dec
lods
jle
movsb
in
push
lods
in
jo
loopne
les
fisttpl
adc
mov
icebp
pop
cmp
push
xlat
jl
lcall
or
ljmp
mov
fcom
mov
xor
sub
or
aaa
es
sbb
pop
repnz
or
and
stos
adc
add
jle
add
pusha
imul
insb
jnp
jbe
cmp
xor
pop
shlb
call
iret
lret
sbb
add
les
and
dec
stos
xlat
call
inc
out
loope
jl
sti
ds
cmp
xchg
fcomp
sahf
lret
xchg
lret
jl
xor
lret
add
sbb
dec
and
jmp
pop
mov
sbb
fstps
in
insb
xor
loopne
push
faddl
jp
jg
adc
mov
adc
jmp
in
insl
xor
mov
in
dec
push
arpl
ds
xchg
mov
adc
or
iret
or
insl
mov
jne
loope
sub
popf
movsl
dec
mov
ss
xor
adc
push
xor
loop
inc
xchg
push
jle
orl
jno
ret
test
lret
mov
lods
cmpsl
cli
arpl
or
mov
shlb
loop
ss
rcrb
int3
loopne
inc
mov
mov
outsl
mov
sarb
xchg
xor
mov
mov
dec
test
test
insb
dec
dec
jae
pop
cmp
and
pop
mov
jmp
popa
jecxz
sahf
sbb
jecxz
dec
clc
cmp
sbb
inc
mov
add
add
popf
cli
push
test
add
ret
fmul
sbb
ja
sub
push
jnp
xor
pop
leave
aad
int3
sbb
rcll
hlt
hlt
mov
sbb
adc
and
mov
lcall
adc
mov
add
jle
test
scas
imul
imul
dec
jbe
jg
loope
dec
sbb
xchg
jbe
and
shll
sbb
add
insl
rcrb
jb
add
xchg
mov
ret
cmpsl
xchg
out
loope
movsb
repnz
idivb
push
mov
push
cmp
jle
loop
inc
call
and
lods
and
ljmp
adc
cmpb
rorb
xchg
mov
mov
xor
sub
jbe
dec
std
sbb
in
cli
shll
shll
cmp
xor
sbbb
fdivl
gs
test
nop
cs
neg
cs
test
mov
mov
rorb
hlt
popa
mov
and
mov
in
rclb
std
or
lret
push
jmp
orl
cld
in
and
jae
mov
popf
lahf
lret
cmp
dec
pusha
mov
test
mov
xlat
inc
xor
outsb
xlat
xchg
ret
outsb
xor
lods
adc
cltd
inc
nop
repnz
lods
test
mov
leave
xorb
dec
mov
in
cmpl
cltd
repnz
repz
pop
xor
cmc
sbb
popf
adc
mov
scas
pop
popa
sub
dec
loop
ret
out
test
add
push
jg
clc
inc
jl
popf
fwait
push
mov
imul
test
pusha
out
or
imul
shll
shrl
lds
movsb
sub
or
int3
loope
cmc
sbb
outsl
adc
push
adc
jle
pop
mov
fs
jmp
lods
leave
imul
test
popf
stos
ret
iret
lret
lea
and
outsb
xor
push
pop
and
pop
movsb
ret
push
jnp
mov
inc
mov
and
sbb
xor
xor
xchg
sbb
cmpsb
imul
mov
shrb
xchg
mov
mov
mov
imul
or
sbb
rcll
aad
mov
fiaddl
iret
loopne
mov
gs
jp
imul
push
xchg
sbb
popf
pushf
incl
pop
cmp
pop
cmpsl
fsubp
fldcw
xor
in
lahf
testl
fs
sub
mov
dec
scas
mov
dec
notl
sub
mov
scas
jle
aas
push
popa
jne
les
adc
fmull
sbb
mov
mov
mov
mov
test
aad
cltd
ja
lea
popa
push
dec
and
jae
int
inc
add
xchg
jmp
clc
jle
ret
cmc
cmpsl
mov
pop
or
or
lcall
out
pop
add
mov
cs
jecxz
cmpsb
flds
mov
cmp
call
jmp
or
xchg
adc
lds
xlat
aam
out
mov
pop
out
div
pop
out
push
dec
push
mov
jbe
stc
xchg
imul
or
into
scas
and
lods
stos
push
pop
or
call
bound
mov
adc
push
and
cmp
fs
mov
xor
mov
or
pop
pop
call
inc
imul
sbb
pusha
ret
cld
jo
xor
or
jo
aad
dec
cmp
jmp
pop
pop
outsb
pushf
or
xlat
mov
mov
test
sub
mov
negl
fisubl
dec
dec
sbb
mov
cmp
inc
and
shrl
mov
ret
mov
and
std
xor
add
jle
mov
leave
ljmp
and
sub
dec
sbb
setb
andl
addr16
inc
mov
int
pop
outsb
adc
mov
jmp
and
or
sti
es
sub
sub
cwtl
push
push
pop
into
jl
push
adc
stc
add
mov
sbb
ret
mov
mov
repz
inc
adc
adc
xor
inc
mov
popl
xor
jne
inc
test
mov
repnz
aaa
sbb
pop
xor
stc
rol
jb
mov
dec
mov
rcrl
addl
call
add
or
xchg
cmp
daa
xlat
push
hlt
jne
jns
mov
cmp
imul
xor
cli
addr16
mov
scas
jg
dec
pop
jb
jecxz
loope
mov
jns
shlb
cld
adc
frstor
andl
mov
mov
xchg
movsl
pop
pusha
insl
dec
mov
push
sahf
jbe
out
and
add
shrb
inc
xlat
ret
mov
mov
sbb
and
orb
push
lret
mov
jnp
mov
js
popl
rol
jne
ds
shl
or
cli
mov
mov
fimull
out
pop
dec
andl
fistl
push
sbb
daa
lea
movsb
adc
and
sti
mov
push
clc
dec
dec
sbb
jno
insb
dec
xchg
mov
inc
repnz
out
cs
sub
fisubl
pop
push
mov
sbb
pop
push
push
adc
xchg
insb
loope
mov
jp
mov
hlt
jg
xor
js
mov
les
jbe
stc
adc
out
lods
mov
ret
xor
xchg
add
sub
push
sbb
sub
andb
xchg
jge
push
mov
sti
push
sub
outsb
outsl
cli
lds
fisttpl
lods
dec
jno
dec
cli
sar
adc
mov
cmp
in
loopne
cli
xorl
cmp
jbe
ds
mov
or
fldl
mov
loopne
cltd
mov
es
xchg
outsl
dec
xor
je
cmp
popf
imul
pop
push
and
xchg
rsm
pusha
fwait
movsb
and
dec
sarl
pcmpgtw
push
jns
mov
dec
out
cwtl
les
xor
dec
into
int3
push
stc
mov
xor
fxch
xor
aas
std
mov
xchg
mov
xorb
push
stos
ljmp
roll
lds
repz
dec
outsl
addr16
rcrl
imul
sbb
add
push
scas
push
fldenv
mov
ret
rcl
jbe,pt
jp
add
and
push
stc
out
sub
adc
loopne
mov
inc
xor
sbb
cmc
aad
inc
mov
xor
sahf
std
xchg
inc
test
aad
negb
mov
xchg
or
mov
sbb
jae
rcrl
pusha
cli
lods
add
jnp
iret
jne
aam
dec
cmp
popa
loope
mov
daa
test
cmc
inc
dec
or
cmp
sbb
push
adc
pop
push
sbb
sbb
insb
and
mov
orl
in
mov
aam
and
mov
and
mov
in
add
xchg
cmp
jmp
mov
push
roll
adc
sub
push
sahf
jge
testb
addb
loope
mov
test
cld
test
and
jl
insb
mov
adc
sbb
mov
mov
stc
pop
stos
jno
fiaddl
in
out
shll
test
mov
jle
das
movsl
or
push
add
lahf
ja
shll
push
hlt
sbb
lahf
cmpsl
jp
jbe
stos
insl
push
dec
fwait
or
jge
mov
xchg
aam
lds
sti
sub
fxch
xchg
xchg
xor
inc
sbb
mov
repnz
mov
mov
loope
sub
mov
sbb
cmp
aad
cltd
xchg
lahf
inc
or
mov
jno
inc
mov
ljmp
inc
pusha
lret
loop
frstor
pop
or
mov
mov
xlat
or
fwait
and
js
out
dec
mov
mov
test
imul
pop
push
sub
les
into
adc
outsl
pop
ss
inc
mov
jge
ljmp
and
shrb
fldcw
iret
and
in
in
or
andl
push
sub
repz
pop
mov
out
iret
pop
enter
mov
in
pop
jns
jmp
push
mov
or
in
sub
data16
dec
adc
int
inc
out
jge
xchg
mov
mov
mov
mov
mov
decb
and
pop
jmp
std
loope
icebp
or
outsb
xor
mov
jmp
inc
pop
cmpsl
mov
jo
pop
and
out
mov
fstl
mov
fsubl
lret
push
mov
icebp
dec
mov
jae
mov
sbb
sbb
int
push
mov
pusha
adc
cmpsb
orl
paddusb
mov
inc
fstl
xchg
fadds
or
icebp
imul
inc
sbb
xchg
testb
push
leave
push
iret
dec
das
cmp
jns
outsb
add
sahf
mov
cmpb
stos
repnz
mov
das
movsb
out
inc
movsl
fdivrl
inc
fucomi
fistpl
cmp
dec
xor
insb
mov
loop
daa
clc
inc
push
scas
lods
dec
pop
jne
orl
clc
xor
pop
and
dec
sbb
cwtl
fdiv
dec
jg
mov
out
and
int3
mov
lret
repz
gs
int3
pop
mov
hlt
push
jl
sub
or
adc
mov
jae
mov
cwtl
dec
pop
sbb
fwait
xor
popa
outsb
loope
clc
xor
xor
mov
lds
inc
sahf
aad
xchg
stos
ficoml
cvtdq2ps
sahf
clc
push
rorl
sbb
mov
call
int
dec
xor
mov
xor
out
cs
inc
data16
jb
sarb
sahf
fcoml
or
adc
xchg
les
les
shll
mov
mov
cmp
pop
fdivrl
shrl
repnz
btc
pushf
dec
xor
ret
out
sbb
add
loopne
mov
xor
jns
je,pt
or
js
push
mov
sub
repnz
scas
ret
les
xor
push
sbb
lds
imul
imul
xchg
jbe
fimull
inc
dec
and
jl
test
mov
fistps
mov
mov
dec
sbb
in
jmp
mov
out
jmp
cmp
jl
jecxz
jo
cwtl
mov
mov
jno
pop
push
enter
cwtl
popa
or
stc
in
int3
test
movsb
rolb
movsl
je
xorl
push
dec
jb
inc
test
inc
push
movl
xlat
or
incb
int
and
shlb
out
int
fstpl
je
xor
arpl
outsb
adc
sub
adc
sbb
mov
lret
and
scas
and
xor
or
sbb
adcb
aaa
fdivr
in
jecxz
jno
fisubl
push
test
pop
inc
sbb
dec
jb
jnp
sub
push
adc
or
push
pop
inc
adcb
arpl
ud0
adc
adc
mov
sub
jg
fstps
sub
in
test
jno
sbb
subl
mov
cld
movsl
sbb
adc
dec
pop
push
icebp
xchg
jb
mul
sub
and
lcall
pop
es
loope
sbb
xchg
cmc
or
sbb
mov
and
sahf
jbe
add
jle
mov
mov
scas
sub
int3
cmp
test
pop
add
and
and
lret
clc
ds
popf
movsb
xchg
mov
jne
mov
lahf
mov
je
test
inc
dec
cmp
gs
mov
leave
lods
mov
js
xchg
mov
pop
jns
not
or
ja
out
clc
lods
loopew
cmp
mov
sub
idivb
xorl
ljmp
jmp
sahf
subl
dec
xchg
add
pop
stos
jecxz
and
lds
or
sbb
addr16
or
mov
sub
mov
and
or
jne
loop
imul
inc
sub
xchg
mov
dec
cs
enter
xchg
addr16
add
outsb
xor
push
dec
jno
mov
jno
sbb
cmp
xchg
mov
loop
jmp
sti
jp
leave
inc
cli
jns
add
jecxz
pusha
mov
inc
movsl
rcr
jmp
and
jle
insb
shrl
icebp
cs
add
or
xor
mov
jg
ljmp
sub
push
aad
push
setne
mov
mov
inc
xchg
mov
sbb
cli
sbb
loop
mov
pop
push
rol
cmp
leave
push
cwtl
lret
adc
pop
xchg
aaa
push
out
jmp
je
cli
nop
cmc
jae
fisubrs
roll
loope
insb
and
pop
or
scas
jp
pusha
lods
sub
rcrb
cmpsb
sub
call
iret
xor
adc
ret
push
gs
div
clc
jl
nop
outsb
xchg
clc
scas
jne
pushf
cmp
mov
inc
xor
mov
les
leave
mov
lods
mov
aaa
jbe
notl
jl
xchg
pop
add
arpl
sbb
lds
dec
in
loop
and
aas
mov
sbb
test
inc
inc
das
dec
mov
xchg
mov
adc
aam
mov
sbb
jae
std
sub
mov
sbb
jnp
xor
stos
rol
and
push
fdivs
pop
shrl
lret
sub
add
xor
test
mov
jb
jl
mov
lret
xor
rorb
xor
mov
and
or
mov
pop
lgs
popa
jmp
hlt
inc
dec
in
dec
cmp
into
lods
subb
mov
sti
xchg
add
jb
inc
popf
jno
adc
cmp
inc
in
mov
test
xor
push
mov
scas
push
mov
pop
cmpsl
pop
mov
mov
xor
repz
mov
rol
jp
jecxz
aad
fwait
mov
adc
loopne
mov
cli
hlt
pop
cmc
sbb
lods
mov
mov
xchg
gs
idivl
push
pusha
pop
add
mov
sub
aam
cmc
sbb
or
xchg
jnp
adc
inc
nop
cmpl
mov
aaa
pusha
xor
jae
aam
insb
stos
jae
loopne
jnp
cmp
mov
jle
xor
outsl
xchg
or
out
rcrb
xor
lds
fs
add
inc
jp
ljmp
sub
xlat
stos
ja
lea
or
in
or
xchg
je
pop
sbb
sbb
cmp
lahf
mov
jbe
or
jg
pop
lods
lods
sub
xchg
mov
jg
and
es
xchg
jno
mov
dec
stos
xor
iret
pusha
push
lods
push
pop
push
xlat
cltd
jbe
cwtl
gs
aas
popw
sbb
jecxz
rorl
test
sub
jecxz
xchg
sub
jne
scas
out
push
imul
xchg
mov
scas
xchg
jg
pop
lods
icebp
xchg
in
mov
cwtl
jno
rol
cmc
dec
sahf
dec
enter
cmpsb
pop
fs
inc
pop
sbb
ljmp
scas
int3
cmc
ja
xor
cmpl
int
add
fs
decb
mov
pop
jns
push
cmp
hlt
loop
pop
push
xlat
scas
push
adc
mov
andl
pop
cmpsl
jb
andl
adc
std
aaa
bound
mov
dec
sbbb
mov
mov
jmp
lahf
xor
mov
in
outsl
push
jnp
repnz
mov
mov
sub
in
and
notb
inc
mov
in
js
xchg
xchg
pop
cli
jbe
mov
cmp
sub
mov
cltd
ret
adc
cmpsl
cmp
add
cmpl
push
dec
out
dec
jns
pop
xor
mov
dec
int3
mov
inc
scas
int
test
mov
push
mov
inc
aam
ds
out
mov
or
popa
fnsave
ret
cmp
lods
dec
inc
scas
mov
adc
fwait
mov
jmp
popf
sub
dec
out
or
ja
sub
mov
cmp
int3
push
push
dec
xlat
or
or
icebp
dec
xchg
mov
push
outsb
nop
pushf
cmp
in
sub
push
fbld
je
xor
fdivs
lods
cwtl
inc
or
pop
add
out
inc
lcall
js
out
mov
pop
dec
test
in
mull
insl
jbe
sub
and
rol
imul
fadd
push
push
mov
fdivl
xchg
dec
sbb
jg
jl
gs
lods
fstl
xchg
aaa
mov
ret
fdivp
leave
push
inc
mov
out
xchg
loopne
adc
test
add
insb
jecxz
stos
out
lahf
jmp
add
ret
xor
sub
icebp
ror
ficoms
mov
xchg
xchg
leave
jl
mov
push
cmpsb
test
mov
mull
or
mov
push
inc
loope
shlb
jnp
mov
mov
jbe
mov
scas
add
outsb
je
jecxz
or
pop
fwait
push
add
int
sbbb
sahf
mov
cli
mov
lods
les
lds
and
ret
push
jno
lret
test
cmp
mov
mov
pop
pop
jno
adc
popf
add
mov
test
push
mov
push
pusha
fs
notb
cld
cmpsb
mov
popa
cmp
mov
out
cwtl
inc
cmova
xor
ds
sahf
popf
and
sub
push
cmp
int
cwtl
sti
into
out
lods
pop
cmc
mov
aas
repnz
shrb
add
mov
sub
aaa
inc
aas
pop
das
into
lods
push
sub
fwait
push
test
cvtdq2ps
push
test
xor
out
jecxz
call
pop
mov
add
lret
out
adc
loop
jecxz
imul
into
repz
or
and
in
xchg
aam
fbld
jbe
mov
adcb
pushf
data16
fs
cltd
insl
cltd
push
xlat
ja
ss
pusha
xchg
lock
inc
enter
mov
pushf
mov
jge
jo
into
and
push
adc
jp
insb
mov
bnd
pushf
in
das
lahf
xchg
mov
jns
dec
xor
imul
adc
out
nop
loope
arpl
aad
fldln2
adc
dec
fs
popf
int3
clc
xchg
cmpl
or
mov
pop
xchg
cmp
loopne
sbb
jnp
test
inc
ror
fmuls
daa
neg
test
jae
adc
leave
cmp
mov
sbb
push
cmpsl
addr16
cld
fnsave
stc
mov
mov
addl
push
pushf
sbb
and
jo
loope
loope
cmpsb
dec
mov
push
xor
dec
jo
test
out
scas
or
popf
push
mov
into
mov
jae
popa
push
jb
enter
daa
inc
sysenter
dec
inc
sbb
enter
das
mov
mov
push
test
fs
ficompl
mov
xor
mov
inc
dec
jno
sbb
shrb
adcb
gs
cwtl
mov
or
movsl
cltd
xor
enter
dec
lock
jl
iret
mov
leave
sbb
jno
mov
cltd
or
rcrb
push
data16
mov
addr16
push
in
test
xchg
cltd
je
inc
push
pop
mov
stos
jmp
ljmp
out
ret
and
jbe
jp
pop
jge
fiadds
andl
imul
fcomp
adc
data16
std
popa
popa
pusha
je
mov
adc
enter
jmp
and
movsb
dec
adc
mulb
int
or
fdivrp
add
push
add
or
mov
cmp
insb
cli
cmp
or
popf
hlt
js
cmp
and
mov
shlb
loop
adc
in
pusha
xor
inc
jmp
mov
ljmp
push
arpl
add
pop
xor
xrelease
push
jge
mov
sbb
cmp
out
ljmp
cmpsb
fmul
jb
cmp
lock
and
repz
scas
or
push
cmpsl
jmp
xchg
jo
scas
cmp
inc
outsl
loope
negb
mov
mov
xlat
popa
and
pop
out
inc
or
popf
in
pop
jne
movb
ss
lcall
push
mov
lods
jl
xchg
mov
shrl
adc
pop
sub
scas
push
lea
xlat
mov
inc
xor
jp
cmp
adc
dec
or
adcl
pop
sti
mov
insb
push
mov
aaa
sub
mov
popa
cmp
mov
jg
jmp
loop
inc
mov
xrelease
dec
shlb
mov
jecxz
adc
mov
inc
mov
push
or
adc
ljmp
addl
jle
push
mov
stos
fadd
fs
mov
stc
cmp
in
and
out
push
cld
xchg
ss
mov
leave
jl
mov
xchg
sub
mov
stos
in
out
mov
mov
mov
addr16
or
daa
scas
pop
loopne
pop
mov
lods
inc
push
std
aam
push
inc
cwtl
fwait
jg
in
inc
shlb
aad
outsb
jo
inc
fnstcw
jbe
ror
adc
add
sbb
xorb
pop
nop
inc
popa
mov
pop
or
rolb
cld
popf
loopne
sub
mov
mov
adc
cltd
mov
jmp
xchg
jp
xchg
fucomi
icebp
pushf
mov
adc
push
sbb
jb
add
mov
mov
aaa
push
std
shl
push
adc
fdivrl
fwait
or
cltd
outsl
loope
stc
loope
push
jle
pop
in
mov
mov
mov
xor
push
inc
mov
ret
fldenv
push
sub
imulb
mov
sbb
scas
insl
cmpxchg
sub
in
lahf
pop
movsl
jg
in
cmp
jo
call
push
stc
inc
mov
sub
cmp
cmc
inc
fwait
dec
pop
mov
inc
leave
dec
sub
xchg
lds
insl
jae
mov
nop
ret
ror
jecxz
dec
and
mov
xor
pop
add
in
dec
outsb
mov
inc
ret
in
fucomp
divb
outsl
mov
inc
cmp
add
push
mov
sbb
cs
adc
insb
inc
inc
cwtl
adc
or
add
ficoms
push
sahf
cmp
jb
bound
orb
movsb
push
sti
jb
out
inc
test
je
mov
jno
pop
imul
jl
fwait
fs
js
add
push
popf
rorl
lods
int
mov
test
pop
testb
test
ja
pop
imul
push
xchg
push
paddw
in
push
sbb
std
xchg
aaa
in
or
dec
movsl
das
popf
fsubs
xchg
js
xor
shlb
jo
dec
inc
cli
adc
xor
mov
into
cmc
mov
adc
aaa
xor
and
call
cmp
and
les
or
lcall
addb
loopne
push
mov
out
or
push
roll
mov
sahf
mov
lds
mov
sbb
mov
push
enter
daa
je
cmp
cmp
or
sbb
xchg
fisubrl
sbb
ljmp
sarl
das
and
push
std
les
sub
adc
add
mov
fadds
popf
or
mov
test
xor
cmp
inc
xchg
push
ds
mov
push
pusha
mov
shll
inc
aas
mov
sahf
popa
jmp
sbb
call
push
xchg
ds
mov
mov
mov
out
xchg
pop
mov
loopne
pop
pushf
js
popf
outsl
add
incb
dec
push
push
inc
in
divb
ret
cmpsb
push
lods
mov
mov
fildll
mov
cmpb
inc
mov
orb
mov
jo
orl
call
fsubrl
pop
and
test
nop
shrb
stos
jmp
ds
ret
push
fucom
jp
stos
imulb
jp
push
clc
dec
cltd
pop
out
jb
xor
push
sub
shll
lret
roll
outsb
inc
mov
push
mov
idivb
addr16
in
sbb
pop
movsb
jp
push
mov
add
xchg
cmp
pop
jle
testb
lahf
fdivrl
lock
ljmp
test
push
call
mov
cmpsl
in
pusha
jbe
outsb
push
push
loopne
cmc
lods
stos
jmp
scas
mov
shlb
dec
xchg
and
pop
call
sti
cmp
not
mov
sbb
mov
dec
call
or
ret
fistpll
add
cmp
rolb
or
cwtl
in
aaa
into
lret
repz
xor
cmp
cs
jg
dec
dec
mov
and
mov
sbb
push
ret
ret
repnz
mov
cmp
fnsave
push
push
push
int3
sub
inc
push
lods
scas
mov
cmpsb
xor
int
mov
inc
or
out
mov
adc
lds
ds
cmp
lret
pushf
les
ret
sbbl
jnp
sbb
fwait
push
lods
lahf
adc
lret
mov
subl
jne
bound
push
std
sbb
adc
inc
jnp
filds
adc
cmpsb
ljmp
rolb
arpl
sbb
stos
push
ret
lock
or
lods
insl
repz
lods
pop
mov
sbb
ret
sbb
mov
jp
icebp
ret
cltd
mov
push
loopne
mov
xor
rcrb
pop
push
outsl
jmp
ret
add
adc
adcl
xlat
fdivl
out
dec
xlat
call
jno
mov
leave
cli
jno
xchg
in
jne
jecxz
dec
pop
inc
aad
popa
and
add
aam
daa
pop
jnp
popa
push
add
adc
lods
inc
repnz
sub
sub
pop
ret
mov
jp
push
in
bound
xor
clc
ja
cmp
fwait
jmp
imul
add
add
inc
pop
adc
or
jnp
xchg
lea
lds
dec
sbb
test
sub
stos
pop
mov
add
imul
xchg
xchg
je
mov
cld
inc
cwtl
ja
and
in
pop
mov
in
sub
jle
cmp
int3
or
and
into
or
mov
scas
repz
add
adc
lret
mov
stos
mov
fnstenv
rcrl
jg
cmpsb
jbe
inc
xchg
sahf
xchg
sub
in
mov
outsb
mov
and
push
sub
scas
mov
ret
mov
xor
sbb
js
adc
jae
imul
xchg
jbe
dec
and
popa
scas
dec
stos
clc
adc
jne
mov
cmp
pop
addl
inc
sbb
mov
outsl
cmc
fistl
mov
mov
dec
sub
cmpsb
in
push
add
out
pop
xchg
fisubrl
xchg
sub
roll
mov
shrb
add
lods
push
test
movsl
or
inc
mov
movsb
and
mov
js
or
jns
test
shlb
inc
cmpsl
push
popf
ret
cmpsb
int3
cmpsl
out
in
loope
je
fcmovu
lea
pop
sarl
mov
popf
mov
daa
mov
inc
sti
leave
dec
pushf
jg
std
fadds
dec
jo
nop
pop
lock
call
mov
mov
jecxz
sub
fdivrs
sbb
jmp
dec
inc
pop
sub
fnstcw
repnz
xchg
jmp
inc
pop
mov
rcrl
je
cmp
push
and
pop
xorl
ret
xor
es
push
xor
jne
ret
mov
not
in
fimuls
add
int
pop
inc
add
jo
xor
sbb
mov
adc
in
mov
rcrb
sbb
cld
dec
pushl
inc
and
nop
call
je
jmp
ret
jp
cmpsb
cmp
stc
jge
int
inc
push
or
movsb
imulb
jne
xor
and
jnp
sub
stc
pop
dec
xchg
and
sub
sbb
das
hlt
lahf
dec
xchg
mov
or
and
or
les
push
dec
in
pushl
bound
js
aam
test
ror
mov
xor
dec
adc
mov
adc
out
sbbl
sub
inc
xchg
sbb
stos
shll
cmpsb
push
int3
cmp
or
dec
mov
push
mov
enter
stos
es
out
insl
push
pop
push
cli
lahf
insl
push
xor
adc
and
cmp
xor
jae
push
sarl
movsb
into
sub
test
mov
jno
jmp
rclb
rorb
fwait
insb
sbb
cmp
push
popa
adc
mov
popa
sbbb
addr16
mov
and
lret
test
lea
pop
stc
shlb
subb
mov
mov
cmp
aaa
arpl
push
dec
xor
stos
sub
cmpsb
adc
jns
sbb
je
negl
sub
pop
insl
test
out
call
jo
dec
xchg
mov
mov
sbb
int3
xor
xchg
ror
rcrl
push
ljmp
xor
add
mov
gs
or
movsb
out
cmp
dec
sbb
pop
mov
inc
imul
mov
clc
lods
outsl
cs
mov
xchg
dec
in
ja
cmp
and
jmp
cmpsl
sub
mov
push
fsubs
out
fbld
aad
das
cmp
in
mov
mov
outsb
pop
daa
mov
std
sub
mov
cltd
adc
test
push
push
test
push
push
and
sub
dec
xchg
orb
stos
arpl
insb
jae
js
jmp
jbe
pcmpgtw
jo
jle
loop
push
ja
lret
xor
nop
ret
xor
push
xor
mov
mov
ja
dec
and
aaa
data16
aas
xor
jle
mov
dec
frstor
jne
and
dec
pop
testb
insl
fwait
stos
fiadds
push
xchg
mov
push
add
mov
sbb
mov
cmp
mov
int3
xchg
pop
int
cmpsl
test
lods
lret
mov
pop
mov
dec
xorb
sahf
fwait
sbb
or
add
faddl
inc
xchg
add
xchg
inc
das
dec
fwait
pop
aam
into
mov
xchg
dec
outsl
leave
outsl
scas
mov
ds
xlat
and
and
dec
push
in
rorl
int
push
xor
adc
in
lods
push
dec
rcl
ds
rcl
jg
imul
push
data16
or
and
int
jns
pop
js
add
ljmp
cwtl
lods
rolb
imulb
js
push
cmp
addr16
mov
and
rcll
and
mov
and
incl
sbb
gs
roll
push
adc
cmpl
imul
jo
dec
mov
push
fidivrl
sub
popf
mov
lret
dec
xor
ja,pn
inc
dec
sub
jecxz
inc
loope
pop
rorl
push
popf
mov
pop
jg
jmp
sbb
xchg
outsl
jge
sahf
jno
pop
adc
movsb
shrl
pop
push
sub
dec
push
xchg
hlt
jnp
je
insb
das
aas
and
ja
popa
lcall
out
pushf
fdivl
add
and
nop
jecxz
dec
push
sub
mov
inc
cmp
outsl
into
inc
fwait
dec
xor
hlt
add
mov
jp
mov
pop
inc
push
test
test
mov
or
out
daa
xor
aad
push
das
xor
adc
mov
add
inc
jb
lock
xor
xchg
xchg
mov
xor
jns
jge
dec
xchg
fs
or
dec
adc
mov
sub
dec
in
jle
dec
shr
test
push
fdivrs
test
sbb
inc
jno
xchg
inc
add
mov
mov
pushf
roll
push
mov
mov
scas
or
dec
mov
fstl
and
hlt
lcall
xchg
sahf
in
pop
or
arpl
daa
add
icebp
and
pop
insl
xchg
pop
in
movb
xor
jl
mov
dec
jno
lea
shlb
or
xchg
prefetch
add
dec
xchg
sbb
xor
mov
loopne
push
into
fs
test
jbe
fcoml
clc
ficomps
dec
mov
dec
insb
cld
dec
cmpsb
dec
divl
psrld
shr
inc
adc
inc
icebp
fsubrs
popa
sub
outsl
test
jle
sub
sbb
mov
call
test
pusha
push
xchg
mov
jno
inc
stc
popf
mov
stos
lret
cmpsb
mov
test
lret
imul
jno
fdivl
aad
ja
xor
iret
or
daa
and
call
sahf
test
psubusw
enter
sbb
scas
ds
cmp
cmc
cmp
sahf
cmp
fwait
sub
pop
jmp
cmp
imul
xchg
aad
lret
mov
add
inc
pusha
hlt
mov
inc
pushfw
stos
and
repnz
pop
and
out
test
or
jecxz
call
or
xchg
dec
in
imull
pop
je
add
mov
sti
pop
imul
out
xchg
mov
xor
sbb
cmpsb
clc
lods
outsl
jecxz
xchg
imul
mov
out
into
dec
inc
pop
pop
fbld
arpl
push
mov
cmp
jnp
inc
outsb
inc
ja
fisubrl
dec
fldl
leave
sti
pushl
jecxz
jnp
int3
sbb
mov
loope
outsb
mov
cmp
arpl
mov
jg
dec
xchg
push
out
addl
sub
jp
sbb
add
and
xchg
cmc
cmp
faddl
adc
sub
jg
fists
or
dec
je
enter
fadds
stc
loopew
adc
pop
aad
mov
mov
lcall
mov
clc
adc
je
lds
adc
mov
cmpsl
or
dec
cmp
pop
lods
mov
ret
ljmp
push
mov
test
xchg
out
cmp
push
xorl
pop
movsb
cmpsl
cmp
push
call
pushf
sub
sub
mov
addb
gs
pop
mov
nop
xchg
pop
ja
aam
mov
or
bound
mov
lock
jp
leave
int3
cmp
sarl
ret
aaa
lret
hlt
inc
adc
pop
ljmp
in
rolb
dec
adc
pop
sub
ljmp
inc
stc
mov
idivl
jns
pop
lret
cmp
cld
xchg
pop
jp
loope
jbe
gs
dec
rclb
dec
rcl
or
repz
or
jge
test
jne
lret
rclb
xor
ret
add
xchg
imul
ljmp
lods
jecxz
fs
inc
sub
xlat
add
and
mov
xor
or
es
push
loop
daa
jmp
pusha
mov
adc
test
mov
in
sub
ss
pop
push
hlt
jo
movsl
sbb
pushf
adc
mov
mov
sub
in
mov
cmovne
mov
dec
inc
mov
aam
add
push
cmp
outsb
shll
xlat
orl
cmp
out
out
push
cmp
xor
test
cmp
cli
test
inc
sub
in
ljmp
scas
es
icebp
ja
push
mov
testb
add
les
pop
xor
xchg
into
push
ljmp
cmp
fsubr
jo
mov
cmp
xchg
cld
fwait
and
or
orl
sarl
scas
cmc
push
test
ja
xchg
mov
arpl
adc
jbe
adc
mov
loopne
ss
pushf
sbb
dec
mov
mov
cld
or
mov
sbbb
js
cwtl
pop
add
adc
xor
movsb
add
jnp
loop
and
arpl
insl
int
into
inc
xlat
aad
mov
jl
xchg
dec
push
sahf
mov
scas
mov
jns
push
inc
cmpsb
mov
sub
sub
sbb
pop
mov
outsl
mov
mov
mov
imul
cld
subb
ds
aad
mov
mov
scas
jo
fldl
pop
leave
fsubs
popf
add
outsb
jecxz
mov
adc
mov
pusha
xchg
xor
xor
sub
test
mov
add
mov
jle
xor
nop
xchg
sub
xchg
adc
out
push
inc
test
sbb
dec
mov
jne
scas
fildl
fyl2x
pop
lods
cmpsb
mov
and
scas
sub
and
lcall
and
sub
jecxz
and
imul
out
mov
cmpsb
cmc
test
pop
sbb
and
scas
jae
mov
outsb
dec
cs
stc
pop
inc
or
and
adc
and
lds
out
or
cltd
lret
push
inc
fmull
leave
int3
dec
aas
movsb
sub
sbb
rclb
loop
mov
mov
das
push
es
dec
pop
push
jecxz
cs
popa
faddp
stos
mov
mov
cs
push
adc
pop
xor
loope
and
sub
mov
lcall
ja
push
in
mov
push
cmovs
pop
fisttpll
addl
fsubrl
stos
inc
mov
mov
in
push
jl
pop
pop
push
jnp
outsb
mov
and
jbe
push
jno
or
fcoml
iret
push
in
dec
push
mov
mov
sti
mov
dec
jg
dec
push
mov
and
pop
imul
ja
pop
or
arpl
jle
cmpsl
pop
addl
pusha
mov
rcr
je
jae
mov
mov
std
sub
mov
sub
and
das
inc
fcoml
push
add
push
mov
shll
xchg
loop
adc
and
mov
xor
insl
push
je
sbb
arpl
pop
ret
push
data16
dec
mov
cmp
mov
icebp
not
scas
in
mov
stc
xchg
cmp
push
xor
inc
out
pop
inc
mov
jecxz
sti
scas
ljmp
adcb
mov
dec
xchg
std
cs
lret
mov
jle
jl
leave
inc
pop
add
pop
sbb
scas
jnp
or
mov
dec
mov
cmpb
bswap
imul
and
sbb
xchg
aam
pop
in
cmpsl
push
imull
cmp
inc
lods
sub
cli
out
push
xchg
daa
cmp
dec
cmp
lds
sbb
hlt
mov
notb
add
lock
cmc
mov
insb
les
pop
out
mov
mov
test
jmp
fcmovnu
jb
int
and
jge
popa
aaa
leave
insb
pop
movsb
fisttpl
and
jae
add
sub
fsubl
dec
cmp
adc
stos
mov
pop
jne
shl
cld
mov
or
mov
arpl
das
add
xor
push
lret
outsb
xor
or
not
stos
mov
mov
and
shrl
pop
js
mov
or
cltd
movsl
add
xor
mov
or
and
loop
sub
icebp
dec
test
popa
gs
repnz
daa
imul
fnstcw
jmp
lret
mov
in
int
subb
cmp
sbb
pop
jno
adc
pop
in
or
adc
jne
cmp
popf
fs
fsubrp
orl
add
sub
leave
sbb
imul
lcall
jg
cwtl
in
cmp
pop
pop
mov
dec
mov
in
fisubrs
or
ret
push
add
mov
fimull
test
insl
mov
jge
jae
loopne
sti
sbb
das
xor
mov
push
xor
fldl2e
lods
xchg
xor
in
enter
in
int
add
in
repnz
mov
out
push
jg
pop
cmp
cwtl
fisttps
out
jae
out
fdivr
mov
in
cld
jnp
sbb
out
jl
pop
mov
push
dec
mov
movsl
push
inc
repnz
adc
and
rcrl
mov
jbe
aam
sbb
jno
out
or
lea
inc
mov
xchg
push
adc
gs
jo
jnp
sbb
dec
sbb
inc
xor
and
js
add
cmp
out
mov
sbb
pop
cmp
int
subl
aaa
mulb
jo
cwtl
xor
xchg
lods
leave
adc
sbb
call
cmp
pop
push
dec
dec
dec
xor
daa
xchg
pop
jno
sarb
lahf
pop
ja
jmp
mov
add
fiaddl
xchg
mov
sbb
mov
sbb
ja
je
sub
in
int3
dec
xchg
adc
pop
xor
ret
nop/reserved
add
dec
insl
sub
jno
sbb
xchg
out
mov
add
inc
jl
xlat
jmp
fwait
add
ljmp
xchg
int3
stos
push
push
insl
loope
cwtl
daa
jg
insb
fbld
inc
jmp
mov
cmpb
pop
jbe
pop
push
xor
sbb
ss
out
test
popf
mov
jne
fcmovnbe
and
or
push
pop
dec
lahf
sub
lret
fwait
ljmp
roll
jge
ja
add
out
xchg
clc
adc
imul
mov
or
stos
sub
fs
arpl
mov
je
mov
hlt
test
rol
sub
push
xchg
lods
or
in
int
push
loop
lods
stos
call
jae
cmc
leave
push
loope
xor
scas
inc
mov
push
inc
popf
test
adc
sahf
inc
sub
mov
loopne
das
xchg
outsb
xchg
into
outsl
adc
sbb
je
and
push
pop
pusha
inc
mov
in
pop
pushf
aaa
ss
inc
or
data16
inc
and
pop
lret
lcall
xchg
in
leave
jp
inc
scas
ds
push
cld
sbb
xchg
scas
sbb
mov
nop
xchg
dec
push
push
push
pop
loop
inc
mov
stos
jnp
scas
lret
and
sub
and
ret
mov
lea
push
jne
js
stos
punpckldq
mov
pop
out
cmp
out
in
out
dec
test
scas
ret
add
shll
inc
add
pop
mov
pushl
mov
lods
pusha
loope
dec
enter
int3
bnd
mov
pusha
les
jmp
cmpb
pop
enter
sub
add
cmpb
pop
inc
lock
dec
mov
cld
mov
hlt
push
dec
dec
push
repnz
xor
jmp
xchg
iret
mov
and
lret
push
idiv
pop
pop
xchg
pop
cmp
lds
fistpl
inc
sbb
lcall
jle
shlb
icebp
jno
dec
scas
xchg
pop
mov
xor
test
or
jecxz
pop
aas
out
test
jmp
and
das
push
inc
int
insb
jne
les
xor
xor
aam
and
and
lcall
add
xchg
aam
mov
ss
in
or
int
jmp
cld
sub
movsb
flds
mov
filds
pop
and
inc
pop
add
mov
mov
mov
xchg
xchg
inc
jbe
push
mov
pop
sbb
mov
jl
mov
loop
sub
xor
jmp
scas
gs
push
pop
cmp
out
dec
and
dec
mov
sub
data16
cmp
or
pop
gs
xor
push
mov
cmc
aad
subb
push
stos
jo
mov
dec
xchg
mov
stc
in
dec
aad
fistl
lcall
jnp
enter
push
add
jmp
pop
ret
fstp
mov
sbb
push
cltd
mov
or
div
stos
aad
sbb
loope
ss
out
cmpsb
xchg
cs
cmp
rol
std
inc
mov
dec
xchg
cmpsb
test
push
mov
jb
scas
clc
mov
call
dec
and
add
mov
fcmovne
push
cmp
leave
clc
les
mov
std
icebp
sub
lods
mov
addl
jnp
adc
and
out
jbe
push
movsl
mov
dec
and
push
jg
les
js
out
xchg
dec
js
stc
lock
iret
xchg
out
cmp
and
aaa
xor
xchg
jmp
scas
dec
dec
push
jmp
mov
aad
sub
pop
mov
xchg
pop
mov
loope
cmp
pop
ret
orl
ja
into
push
iret
loopne
xchg
rorb
jge
cmp
mov
sub
bound
jmp
jns
sbb
outsb
js
jbe
arpl
pop
imul
mov
add
push
mov
es
lock
sbb
lahf
ret
or
cs
dec
loope
outsb
out
imul
sarl
push
xchg
ret
dec
insb
in
icebp
push
fstpt
xchg
mov
pusha
loopne
xchg
xor
jae
sub
lcall
jb
lea
push
into
fsubl
imul
lahf
xchg
mov
adc
adc
xchg
rolb
ret
mov
push
std
mov
add
jg
rol
adc
jns
arpl
icebp
cs
js
pop
and
sarl
xlat
idiv
ret
and
mov
iret
ljmp
lods
ds
or
pop
xchg
scas
adc
aad
cmpsb
mov
fcompl
pop
cmp
mov
push
aad
lea
jae
mov
xchg
xor
leave
lret
addr16
test
inc
mov
dec
inc
add
ds
jnp
mov
data16
jo
jmp
clc
mov
push
pop
das
loopne
ss
pop
fldl
lods
gs
inc
icebp
and
bound
repz
dec
lahf
es
arpl
cmpsl
dec
ljmp
sub
scas
in
and
inc
outsb
push
pop
jle
out
mov
and
call
shlb
in
ljmp
inc
pop
ret
or
fld
mov
and
pop
pop
es
xchg
xchg
lahf
faddp
pop
cli
mov
mov
sub
xor
pop
shl
xor
lods
mov
sbb
adc
xchg
xchg
outsl
dec
bound
je
repnz
std
push
pop
arpl
sbb
daa
push
push
ds
pusha
call
mov
xor
xchg
push
xor
pop
adc
adc
mov
lea
mov
rcll
movsl
xlat
inc
outsl
push
outsb
add
movsb
cs
in
mov
arpl
xor
loopne
fimuls
adc
lods
cmpsb
or
jmp
call
dec
pop
jae
add
pop
push
or
test
push
cmpsb
jnp
scas
fs
pop
inc
incb
ret
arpl
dec
aaa
ret
sti
fidivrs
lahf
jle
ret
rcll
cmp
test
add
jl
sbb
dec
test
adc
aad
loop
sbbb
ja
stos
cmp
loope
mov
inc
je
mov
stos
mov
aaa
or
mov
inc
cli
cmp
jl
mov
ja
push
push
mov
shrb
aam
rcrb
out
insl
inc
dec
dec
xor
bound
jne
movsl
int
or
cmp
in
xchg
jne
out
mov
xlat
cwtl
xorl
in
and
adc
dec
pop
cmp
or
add
sbb
inc
jge
in
add
testl
aas
push
or
or
cmp
je
jbe
push
mov
clc
mov
test
cmc
add
lea
pop
divl
and
adc
dec
rcll
mov
and
ds
pop
mov
mov
loope
loope
pop
pop
das
mov
lcall
out
fisttps
sub
jle
les
push
inc
cltd
push
stc
outsb
out
arpl
imul
pop
and
and
jle
sub
lret
ret
sbb
cwtl
cli
dec
pop
sub
nop
mov
sub
cmp
daa
jmp
imul
aad
test
shr
aam
mov
inc
out
inc
adcl
pop
test
repz
ja
pop
clc
xor
mov
push
mov
cld
cwtl
ficompl
imul
into
xchg
clc
das
test
mov
subb
dec
xchg
faddl
fcompl
rol
adc
adc
or
pop
lcall
shlw
add
jo
inc
mov
mov
xchg
inc
pop
mov
lods
movsl
daa
movb
filds
je
xchg
frstor
sti
and
adc
add
dec
cmpsl
jp
adc
rcrb
cmp
das
scas
faddl
popa
shl
mov
jp
and
push
xchg
jmp
push
lret
xor
scas
mov
test
inc
fwait
pop
push
push
sbb
adcl
sbbb
dec
int
movsb
push
mov
mov
insb
add
mov
arpl
push
push
insl
xchg
std
xchg
mov
push
dec
push
push
adc
push
add
je
loopne
pop
popa
inc
icebp
inc
int
add
shlb
test
and
inc
add
xlat
inc
stos
into
dec
mov
xor
fs
mov
aam
push
sahf
adc
sbbl
jbe
jecxz
aam
pop
gs
test
inc
repnz
std
lcall
jo
leave
cli
sbb
pop
cmpsl
mov
orb
mov
xchg
xchg
xchg
call
adc
or
mov
add
lcall
jg
adc
out
or
lea
xchg
mov
inc
inc
arpl
mov
lret
fwait
pushf
xchg
pop
fbstp
and
xlat
xchg
or
add
int3
lahf
rcrl
push
out
jmp
movsb
mov
in
cltd
mov
dec
popa
outsl
jg
push
jns
loop
pop
push
jae
imul
cmp
arpl
das
xorb
std
sub
sub
mov
dec
xchg
push
adc
and
mov
cmp
inc
in
aad
outsl
push
nop
adcb
lcall
imul
xor
fs
loopne
leave
cmp
xor
pushf
mov
cli
aaa
sahf
sbb
add
call
repnz
pop
inc
lods
adc
pop
xchg
iret
daa
adc
add
inc
push
ret
ja
lcall
mov
fdivl
adc
sti
loopne
pop
or
pop
pop
clc
push
scas
xor
loopne
mov
jns
notb
and
jns
inc
jno
outsb
xor
mov
or
subl
ja
into
and
pop
adc
fidivs
xor
nop
jb
fdivrs
mov
jb
or
flds
push
adc
adc
xchg
jmp
xchg
xchg
out
pop
jae
xor
mov
shlb
or
rorl
mov
mov
loope
xchg
imul
fsub
pop
dec
pusha
jle
sti
stos
mov
xor
adcb
repnz
rorl
push
dec
stos
std
sub
xor
aaa
je
dec
insb
jp
pop
ljmp
lea
sbb
icebp
inc
jle
sub
ret
push
push
popf
adc
jle
pusha
sub
test
jg
mov
bound
pop
rclb
imul
xchg
imul
push
xlat
push
mov
xorb
pop
inc
sub
shrb
sbb
inc
shll
pop
int
stos
mov
mov
xchg
xchg
dec
add
push
or
daa
je
std
sahf
lock
xchg
ret
shll
or
cwtl
mov
push
imul
sahf
inc
ss
addl
bound
in
aad
ss
aas
adc
dec
mov
dec
jg
mov
jmp
mov
and
sbb
mov
repnz
inc
popa
pop
sbb
iret
adc
loopne
add
lahf
pusha
ja
aam
push
push
add
movsl
test
js
inc
xchg
addb
and
and
aas
jge,pn
fildll
ret
xchg
or
xor
ja
jmp
lock
rolb
repz
test
enter
sti
sub
dec
out
in
adc
les
add
sbb
xor
repz
fcoml
mov
cs
enter
push
or
add
outsl
call
dec
or
push
movsb
push
mov
sbb
dec
rep
cmpsl
inc
clc
mov
pop
pop
dec
inc
neg
push
out
push
xchg
mul
push
mov
int3
imul
lret
pop
sub
xlat
negb
sbb
add
mov
mov
cld
arpl
les
mov
jmp
pop
jmp
pop
idivl
das
cwtl
pop
ljmp
movsl
and
rolb
mov
xchg
adc
ja
dec
jp
addb
pop
mov
addb
fbstp
divl
mov
or
lock
cmpsl
push
ficoml
enter
mov
or
dec
jnp
into
and
jbe
sub
jns
pop
mulb
std
adcb
sub
in
pop
dec
xchg
shlb
lcall
xor
jnp
scas
arpl
dec
sbbl
sub
mov
fcmove
scas
data16
xchg
stos
fsubs
dec
jl
pop
push
push
mov
ja
sub
leave
enter
xchg
fimull
push
pop
fs
bound
mov
add
scas
int
test
sub
sub
imul
pusha
mov
imul
jp
sbb
inc
ja
int3
enter
cltd
sub
out
in
sbb
sbb
push
sub
push
clc
xor
jecxz
aaa
addr16
pop
jp
mov
push
std
dec
jbe
or
repz
mov
cmp
sbb
inc
sbb
addr16
pushf
add
push
adc
in
pop
int
loopne
mov
cmpsb
popa
movsb
inc
adc
loopne
adc
push
mov
cmp
test
jecxz
ljmp
out
add
adc
lods
mov
mov
roll
scas
movsl
push
dec
adc
ficoms
mov
pop
hlt
enter
dec
lock
dec
add
pop
in
xlat
jecxz
xchg
lret
cltd
pop
push
imul
push
cmc
pop
add
ja
xchg
js
ljmp
jb
xlat
sbb
pop
and
aad
neg
rorl
jno
fisttps
cwtl
sub
repz
std
testb
xchg
and
aad
jl
jae
cli
into
fdivrp
and
testb
pop
xchg
mov
mov
push
and
mull
push
push
jmp
pop
mov
mov
cmpl
addr16
loope
push
dec
jp
push
enter
inc
cmp
out
int3
aam
push
mov
std
xchg
or
rcrb
setg
push
jp
dec
filds
xor
cmp
add
arpl
sti
push
shr
fidivl
jecxz
push
inc
sti
jge
rorb
mov
add
test
sub
jbe
push
jmp
enter
repnz
xor
mov
and
cmpsl
jp
sti
push
xlat
in
aaa
jle
dec
popa
adc
or
repz
push
xor
cld
or
pop
stos
jmp
mov
pop
xchg
adc
inc
mov
xor
cmc
test
inc
push
and
add
cli
mov
jle
lret
loop
mov
fimuls
mov
daa
mov
shll
mov
jmp
jns
mov
jmp
jg
rcrb
mov
in
push
lock
jmp
mov
cmp
outsl
dec
hlt
out
jge
popa
xor
cmp
pop
cli
jg
inc
pop
lds
iret
in
adc
xlat
add
and
loope
adc
push
push
inc
bound
lret
in
aaa
mov
pop
xchg
cwtl
push
insl
push
mov
loop
ret
lahf
adcl
orb
leave
scas
lods
dec
mov
test
jo
fwait
sbb
outsb
mov
hlt
and
es
dec
rorb
push
sub
popa
fsub
push
pop
xchg
adc
in
std
push
sbb
sbb
adc
or
enter
mov
mov
or
inc
inc
mov
xchg
mov
or
andb
out
fcoml
sbb
push
xor
fldl
or
in
mov
push
jnp
int
sbb
inc
enter
dec
add
pop
loope
pop
mov
adc
jns
mov
pop
loope
sbb
fcmovbe
ljmp
pusha
ljmp
sbb
in
pop
sub
add
pushf
sub
jmp
xchg
pop
and
lods
jbe
xor
in
das
sti
repnz
jmp
sbb
mov
sahf
dec
ds
add
movsl
aad
add
scas
sti
stos
fisubrl
xchg
and
jae
pop
cmp
cld
push
sub
inc
jnp
xchg
not
jb
movsl
sbb
pop
push
pushf
pmullw
inc
mov
add
in
mov
mov
add
cwtl
and
inc
cmpl
movsl
add
sbb
adc
or
sbb
xor
std
les
sahf
adc
ror
fwait
test
cmp
lea
push
or
mov
push
es
mov
adc
cs
xor
mov
xor
mov
fsts
and
jae
sbb
mov
and
push
jp
add
or
rclb
jp
mov
adc
das
jle
pop
cmc
call
ret
cmp
test
push
or
add
sbb
pop
push
mov
int3
leave
mov
ret
cmp
cmp
cli
sarb
cmp
enter
gs
sbb
jl
insb
mov
insl
stos
adc
mov
mov
loope
mov
sbb
repnz
adc
jns
test
sub
test
bound
lock
fcoml
decl
iret
dec
nop
shrl
inc
sub
insl
gs
cmp
test
les
cmpsb
xchg
fldenv
leave
pop
and
mov
popa
xchg
enter
and
pop
rolb
add
mov
js
sbbw
cmp
outsb
mov
push
pushf
popa
inc
scas
xchg
xor
test
cld
sub
lret
mov
test
loop
ret
ja
lret
movsb
cmpsl
sub
mov
pop
mov
dec
sbb
aad
cld
jns
jo
lret
mov
imul
jmp
jbe
mov
mov
nop
push
lret
in
in
loopne
mov
jmp
inc
aad
jne
arpl
add
sub
pop
insl
addr16
sbb
inc
scas
mov
arpl
jl
fsubp
lret
in
push
dec
push
sbb
jbe
pop
scas
sbb
ficomps
mov
imul
sub
inc
or
cld
shll
in
mov
pop
and
std
repz
je
or
mov
push
dec
mov
loope
cmpsb
mov
add
mov
adc
jmp
repz
mov
and
sbb
pcmpgtb
lret
or
mov
mov
clc
xchg
dec
movsl
pop
cmpsb
jns
add
lds
xchg
movsb
idivl
cs
cmp
jmp
fldenv
stos
pop
scas
or
mov
addr16
scas
inc
popl
and
sub
fcoml
xlat
and
dec
or
inc
lds
dec
js
andb
shlb
xor
imul
pop
pop
mov
repnz
fcmovne
es
popa
ret
rcll
sbb
mov
sbb
gs
or
loop
inc
lahf
cmp
jg
pop
dec
inc
inc
cmpsb
rcll
sub
cmpb
push
lock
add
push
inc
mov
mov
cwtl
lcall
mov
dec
add
stos
jbe
lret
lods
aaa
dec
push
js
cltd
dec
and
daa
pop
jae
ret
push
jbe
js
and
sti
dec
sub
add
push
cmp
xor
fisubrs
ss
cltd
aas
cld
cmp
repnz
xor
mov
add
js
sbb
inc
pop
fwait
pusha
xchg
push
mov
out
pop
scas
add
scas
cwtl
xchg
ret
outsb
stos
xchg
push
mov
stos
insb
push
into
popf
sub
repz
fldenv
jg
xchg
jp
idivb
lahf
jge
mov
sbb
sub
push
or
mov
int3
fsub
orb
mov
pop
mov
test
xchg
mov
loop
mov
pop
dec
mov
or
pop
lret
adc
jnp
xor
pop
xchg
adc
enter
xchg
jno
adc
mov
jno
xchg
push
dec
notb
movsb
out
iret
mov
sbb
out
stos
test
push
xor
push
mov
adc
cmp
xchg
pop
outsl
mov
jge
mov
push
push
xlat
out
dec
add
push
lods
pop
and
jecxz
mov
mov
bound
out
cmp
andl
movsb
dec
stos
mov
cmp
adc
test
pop
ja
subb
lods
dec
dec
popf
mov
push
pop
dec
mov
sub
xor
pop
push
test
lods
repnz
push
stos
loope
pop
lcall
push
cs
push
mov
cmp
jne
pushf
push
pop
pop
in
popf
mov
test
and
repz
dec
daa
rol
negb
adc
mov
add
inc
jp
int3
mov
popf
mov
cwtl
out
repnz
push
dec
and
mov
jp
leave
sarl
xor
ret
cmp
insb
pusha
inc
mov
pusha
push
jb
or
xor
std
hlt
dec
lahf
mov
xor
int
add
dec
daa
in
push
repnz
sub
push
sub
sbb
sub
xchg
pop
ja
jns
nop
ffree
or
scas
aas
pop
fisubrs
sub
mov
test
sbb
into
popa
dec
mov
xor
xchg
inc
call
push
fistpll
mov
jae
ret
cld
lea
movsl
test
pop
test
inc
sarb
adc
adc
mov
into
xchg
jae
pop
mov
stos
jbe
out
mov
jecxz
mov
leave
in
ds
int
jae
cmp
pop
mov
out
pop
mov
mov
xchg
dec
and
pop
mov
sti
cld
xchg
xchg
test
jae
ffreep
enter
mov
stos
lock
divb
ret
test
jo
push
inc
add
xchg
int
mov
xchg
xchg
jo
mov
jnp
aas
or
add
xor
cwtl
cmpsb
cmp
mov
lea
xchg
call
vpsubusw
add
ret
and
xchg
cwtl
mov
inc
jge
sahf
or
fdivrl
out
imul
mov
add
icebp
int3
and
jl
scas
stos
jp
xchg
add
cmp
sbb
sbb
xorb
aad
popf
mov
dec
dec
mov
cltd
cmpsl
sbb
mov
stos
xchg
lcall
jbe
movsl
mov
xchg
xchg
sub
pop
sub
out
jmp
push
mov
cli
mov
mov
mov
mov
mov
jmp
add
jg
clc
icebp
mov
or
xchg
inc
mov
sub
mov
lcall
lret
mov
and
xor
inc
xchg
jns
mov
emms
hlt
stos
jb
lods
adc
loope
or
in
xor
test
insb
shl
pop
xor
test
mov
jge
jge
or
and
pushf
mov
mov
inc
jecxz
sbb
xorb
insb
dec
mov
fisttps
adc
mov
lret
in
dec
stos
mov
fisubs
fwait
pop
xchg
movsl
ds
jl
sbb
shll
out
add
inc
jecxz
add
lock
imul
dec
outsb
mov
pop
cwtl
outsl
mov
movb
pop
enter
enter
push
mov
cmp
fistpl
addr16
popa
ss
mov
hlt
dec
scas
push
mov
and
sub
dec
and
pop
aaa
pop
rcll
cli
mov
subl
roll
fidivrl
jmp
jp
jmp
sbb
loop
sbb
clc
es
sub
push
in
popf
xchg
sub
aaa
or
loopne
sub
lods
in
lcall
pop
nop
mov
shl
and
jecxz
iret
sub
push
in
lcall
rcl
sahf
movsl
sahf
les
mov
cmp
cmpl
repnz
dec
push
xchg
cli
push
test
inc
call
call
add
push
jb
scas
test
or
and
aad
mov
test
pop
xchg
jne
jne
push
xchg
addr16
jne
dec
adc
cs
add
inc
adc
gs
repnz
rcrb
or
enter
out
nop
jg
mov
xor
sbbb
jmp
jl
mov
jo
cmp
xchg
jle
pop
std
push
push
orb
ret
jp
cltd
sub
jno
push
gs
xor
push
ss
push
xchg
mov
in
cmpb
out
rorb
shrl
in
pushw
subb
andb
push
sub
jmp
add
push
shlb
xorb
test
iret
xor
dec
testb
xchg
cmp
add
mov
js
hlt
arpl
mov
mov
les
pop
push
mov
xchg
jmp
stos
and
dec
mov
ljmp
dec
je
inc
cltd
cmp
and
stc
movsb
out
pop
pop
jle
mov
loop
ret
xchg
jo
fistl
dec
leave
rorb
xchg
sahf
or
fwait
movsl
cli
scas
adc
adc
test
or
imul
loopne
ja
int
testb
out
leave
cmp
mov
imul
push
leave
and
stc
icebp
xchg
cltd
sbb
pop
cmp
and
mov
cmpsl
xchg
rcrl
mov
mov
dec
push
and
sub
loopne
add
push
jecxz
dec
xchg
pop
repnz
scas
or
call
iret
iret
push
or
or
cmp
or
mov
push
sub
add
dec
sub
shl
test
fsubl
jecxz
add
rorb
jmp
ficoms
pop
sti
jae
cmpsb
lret
dec
adc
fnstenv
pop
subb
xchg
mov
movsl
xchg
outsl
mov
dec
movsb
addr16
pop
popf
or
pop
in
jb
cmpsb
sub
jecxz
cli
xchg
mov
push
out
inc
and
xchg
push
imul
mov
pop
js
in
je
and
lret
adc
sbb
test
ffreep
add
sub
mov
or
inc
pushf
pop
sub
in
mov
adc
pop
ret
jnp
mov
xor
movsb
jne
out
imul
cwtl
sub
cmp
lods
out
data16
popf
push
enter
stos
ja
dec
enter
sahf
push
mov
push
imul
push
mov
sub
out
pop
jmp
pop
faddl
or
xor
aam
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
add
popa
cltd
sbb
sbb
in
push
cmpsb
jae
andb
pop
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
loopne
in
cmpsb
inc
leave
pushf
cmp
nop
sarl
adc
test
or
jmp
test
mov
adc
push
or
xor
sbb
sbb
dec
jp
jp
add
bound
in
xor
xchg
pop
mov
cmp
divl
in
adc
pop
mov
cmp
and
outsl
test
dec
cwtl
jle
or
adc
lret
jns
mov
mov
cmpsl
popf
cmp
imul
pop
sbb
mov
push
mov
jo
outsl
ljmp
push
sbb
xchg
aaa
sarl
rol
lock
sbb
sbb
and
cmp
sbb
push
out
jae
cmp
sbb
clc
adc
jns
cmp
in
test
jae
test
sbb
sbb
jae
jns
cltd
or
sbb
jae
cmp
sbb
sbb
pop
jae
cmp
xchg
sbb
sbb
in
dec
pop
jae
cmp
sbb
or
jae
sub
or
sbb
jae
cmp
sbb
sbb
jg
push
popa
cltd
sbb
call
pop
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
dec
pop
loope
pop
sbb
jae
cmp
enter
loopne
test
rorl
ss
sbb
sbb
jae
push
adc
outsb
cmp
adc
jae
enter
add
adc
jae
cmp
sbb
sbb
jae
fsubs
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
jae
cmp
sbb
sbb
pop
xchg
cmp
sbb
mov
je
adc
dec
lods
addb
je
clc
rcrb
dec
mov
pop
aas
mov
xor
xor
mov
cmp
lret
rcr
mov
repz
ss
cmp
clc
sub
xchg
xchg
mov
stos
ja
cmp
test
enter
mov
mov
sbb
xor
xor
cmpsl
aaa
ror
test
pop
sahf
lea
int3
dec
pop
adc
out
out
jmp
xchg
sub
rcrl
cld
dec
push
mov
call
xor
add
fnsave
andl
cmpsb
adc
cmpsw
jne
push
jge
mov
fstpt
icebp
mov
and
mov
jp,pn
sbb
or
sub
leave
std
inc
aad
lcall
sahf
jns
xchg
or
cmc
cmp
sub
sbb
xor
ret
or
adc
push
fdivr
aam
inc
or
mov
jne
iret
in
push
and
fcmovu
pop
add
push
andb
ret
mov
pop
mov
insl
cmpsb
insl
push
lock
push
xor
bnd
sti
jno
adc
xchg
inc
enter
xor
pmaxsw
jecxz
adc
lods
dec
ret
pop
bound
cmp
mov
cmpsb
rcl
pcmpgtb
dec
adc
fcoms
or
test
push
jnp
cmp
add
lcall
adc
mov
jle
cmp
stos
add
dec
sti
and
add
int3
jne
fadd
aam
add
aad
dec
shll
leave
clc
sarb
in
add
gs
sti
push
and
imul
dec
dec
push
sahf
lfs
insb
test
frstor
call
mov
sti
in
xchg
out
cmp
je
pop
or
ss
push
outsb
imul
movsb
add
and
xchg
push
pop
push
faddl
out
cmc
inc
inc
dec
or
js
popf
and
daa
mov
movsb
inc
faddl
cwtl
dec
xchg
jne
add
scas
jnp
addr16
insb
add
adcb
in
sub
sbb
lret
pop
out
fcompp
lea
or
mov
mov
adc
cmpb
push
push
fcoml
add
sti
xor
add
pop
pop
int3
and
cmpsl
or
into
mov
xchg
test
push
xchg
aaa
push
pop
sub
inc
mov
subl
xchg
outsl
rcll
or
dec
inc
cwtl
and
add
sub
jecxz
ret
into
dec
push
out
cmp
dec
fadds
mov
mov
test
sub
cmp
sbb
xor
push
imul
pop
cltd
jb
fstpt
je
jle
xchg
out
xchg
sbbl
pop
dec
push
insb
push
rcrb
adc
pop
mov
lods
push
subl
int3
mov
xlat
pop
outsb
xchg
popf
sbb
rcrl
or
mov
adc
add
dec
imul
icebp
jg
clc
stc
je
outsl
repnz
jno
inc
xchg
inc
test
dec
push
rolb
mov
cmpsl
pop
outsb
xchg
or
jns
mov
lock
jnp
add
dec
xchg
popl
mov
mov
and
jle
pushf
nop
icebp
sahf
pop
outsb
push
xchg
mov
mov
push
lret
insl
data16
mov
not
jno
loope
mov
jbe
and
arpl
adc
xchg
and
pop
pop
inc
ret
cmp
inc
test
outsl
pop
inc
or
jle
mov
mov
dec
xor
dec
stc
popf
int3
dec
cmp
dec
lcall
cmc
jbe
ds
push
or
push
adc
leave
cmp
xor
add
push
gs
scas
test
aas
xchg
adc
fwait
xor
icebp
mov
jae
ret
mov
insb
push
int
pop
push
mov
mov
fldcw
push
jmp
mov
pusha
add
icebp
ds
popa
or
xlat
mov
mov
add
pop
stc
push
sbb
xchg
out
rcll
lock
in
fs
push
nop
repz
mov
cmpsl
xchg
and
mov
call
xor
hlt
or
mov
jecxz
ret
jg
sbb
insl
jp
dec
and
jmp
sbb
hlt
rorl
sbb
cwtl
and
scas
imul
lods
addl
jl
adcb
xor
fiadds
jne
lcall
dec
enter
das
xchg
adc
aad
pop
cmp
daa
sbb
call
mov
push
hlt
dec
dec
loop
push
dec
aad
jmp
cld
cmpsl
cmpb
xchg
inc
cmp
fs
sub
ja
aas
inc
dec
sbb
ja
cld
lds
lcall
mov
sub
loope
repnz
jp
mull
shlb
gs
out
in
mov
pop
dec
adc
jecxz
ficompl
mov
inc
push
gs
mov
jnp
shll
pop
outsl
mov
stos
es
out
aas
cli
push
xchg
pop
iret
scas
negl
mov
mov
mov
dec
das
je
out
shrl
movsl
cs
sub
cmp
add
or
sub
xor
repz
mov
mov
fisubs
stc
dec
adc
ja
popa
mov
cmp
dec
cmc
add
js
clc
add
clc
rclb
or
shrl
aam
add
cwtl
inc
clc
push
adc
js
js
das
loopne
mov
inc
mov
imul
mov
adc
imul
mov
stc
sub
mov
shrl
ds
ds
popf
xor
loop
or
out
mov
pop
gs
subb
aad
sbb
stos
xor
arpl
and
add
push
daa
mov
fcmovnbe
adc
push
xor
stos
cmp
push
int
vmovntps
jge
adc
lea
xchg
outsl
aas
out
lret
imul
xchg
lret
xlat
push
jnp
or
addr16
cmp
inc
imul
inc
adc
mov
inc
aaa
mov
les
mov
push
xor
arpl
pop
int
sub
imull
cmova
scas
sub
lds
mov
clc
cli
dec
in
imul
inc
cmp
sbb
ficoms
icebp
cmp
xchg
mov
or
jo
inc
int3
mov
pop
cmp
mov
sahf
in
jns
and
mov
mov
stc
stos
mov
lods
xchg
sub
fisttpll
aas
iret
push
inc
in
icebp
sbbl
and
outsb
and
pusha
lods
inc
xchg
out
cmp
lahf
or
ret
pop
mov
xchg
xchg
loop
movsb
mov
ds
cs
gs
enter
ljmp
in
push
das
xor
xor
and
pop
cmp
cmp
loop
roll
and
cmp
sti
inc
jp
pushf
push
mov
or
popf
adc
sub
fldenv
sbb
gs
xor
and
aad
inc
inc
shr
jl
dec
js
inc
mull
mov
adcl
faddl
fwait
sub
add
xor
cld
jle
or
sub
rolb
cltd
add
insb
negl
jge
xchg
pop
pop
dec
rorl
jo
jmp
mov
jl
cmc
clc
jmp
mov
jl
pushf
lods
std
lock
inc
push
xor
fs
popa
push
xorl
mov
fnstenv
inc
pop
mov
sbb
subl
and
mov
xlat
adc
in
pop
push
or
out
jge
sbb
jp
push
push
pusha
and
loope
pop
inc
loopne
and
orb
and
pop
movsb
mov
shlb
push
leave
dec
outsb
inc
daa
lret
iret
sbb
sahf
and
stc
xor
mov
and
mov
mov
rorl
mov
outsl
pop
and
xchg
sarb
lods
mov
sub
inc
jp
sbb
andb
cmp
ja
or
lods
aaa
pop
dec
mov
push
pop
mov
sub
cmp
shr
movsb
or
sbb
mov
sbb
sub
scas
mov
test
hlt
push
sbb
jns
mov
test
and
gs
add
bound
inc
pushl
pop
stos
addr16
scas
xchg
repz
pop
xor
subl
xlat
mov
sbb
dec
test
mov
lret
cli
jmp
mov
mov
stc
xor
mov
sbb
push
fwait
rcrl
sbb
int
inc
push
ficoml
dec
adc
sub
ds
js
and
outsb
stos
movsb
ret
shlb
negl
mov
mov
das
jbe
pop
xchg
das
adc
sub
out
or
sti
xchg
mov
push
push
mov
arpl
inc
and
daa
mov
ret
xlat
inc
out
xchg
daa
push
bnd
mov
fisttpll
jne
dec
lret
and
js
aaa
lret
and
sub
adc
leave
adcl
shll
mov
xchg
rcrb
mov
jns
pop
jp
cmpsb
dec
jge
mov
xchg
addr16
loope
cmpb
mov
or
decb
mov
and
jae
loop
add
imul
mov
enter
mov
jns
out
adc
cld
xlat
mov
pop
add
subb
or
shlb
xor
jl
sbb
fdivs
cmp
pushl
cmp
add
inc
loope
mov
jne
adc
mov
add
sbb
lcall
andb
push
inc
push
mov
push
nop
fs
sbb
or
cltd
sub
adc
leave
or
lea
test
insl
cmp
jl
mov
loop
clc
mov
push
lods
mov
aad
add
data16
aaa
or
mov
or
je
imul
adc
mov
and
cmp
sbb
outsb
daa
es
fsubrs
mov
sub
hlt
dec
test
sti
iret
bound
inc
fwait
jo
popf
mov
rcll
shll
daa
subl
fiadds
inc
pusha
test
inc
leave
pop
jecxz
mov
stos
outsl
sub
out
xor
std
es
cli
xchg
push
mov
loop
addr16
sub
inc
cmp
shlb
pop
pop
scas
in
adc
shrl
mov
cwtl
lods
dec
fwait
repz
jo
cmc
push
and
pop
jno
push
outsb
fiaddl
mov
jo
mov
in
mov
inc
data16
mov
or
insl
sbb
mov
pop
push
inc
jg
sarb
xor
sub
repz
dec
adcl
sahf
rorl
mov
and
aad
mov
in
leave
into
sbb
mov
call
mov
mov
jge
js
out
sub
mulb
cmc
loop
cld
outsl
inc
mov
test
or
in
mov
xlat
pop
jae
xchg
popl
shr
jg
jecxz
pop
test
dec
ss
mov
inc
inc
sbb
jle
add
fucomip
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
