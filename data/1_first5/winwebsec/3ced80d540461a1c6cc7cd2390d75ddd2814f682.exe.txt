inc
adc
add
add
inc
adc
sub
add
insb
mov
push
fildl
add
addr16
add
add
cmp
jl
add
push
inc
add
add
add
inc
add
add
add
add
add
xor
and
inc
add
xchg
jmp
insl
iret
leave
out
and
add
ds
xor
push
popf
and
mov
dec
xor
lcall
in
xor
inc
loop
cmp
sub
adc
mov
adc
out
dec
icebp
sbb
mov
adc
mov
sahf
cmp
rol
cmc
fbstp
fdivrl
stos
fcompl
add
out
pop
cmp
jb
insb
push
lret
in
test
xchg
int
pop
mov
lret
add
inc
or
mov
das
hlt
daa
das
clc
cmpsb
push
jmp
lods
adc
and
in
leave
mov
push
mov
outsb
and
mov
stos
in
pop
in
add
sarb
inc
jl
lods
sub
and
and
stos
in
stc
loop
sbb
loopne
or
cmp
adc
pushf
imul
pop
jl
roll
insb
int3
push
lret
out
movsb
mov
in
cltd
mov
inc
loopne
pop
mov
fwait
sub
in
pop
loopne
jne
icebp
xchg
adc
xchg
imul
inc
ret
mov
inc
adc
cltd
or
cmpsl
icebp
shrl
cltd
cmp
outsb
and
lcall
shlb
push
pushf
lods
imul
aas
adc
roll
push
ror
loopne
sub
cmp
xor
divl
in
rorb
test
inc
and
movsl
sub
inc
pop
fstl
dec
in
sbb
pop
pop
dec
sub
lret
popa
mov
inc
xchg
daa
add
in
or
gs
hlt
in
gs
and
mov
in
lcall
pop
popf
fwait
add
cmpb
mov
repnz
hlt
mov
mov
scas
in
lods
xor
adc
lea
mov
scas
in
pop
sti
mov
pop
push
lock
dec
hlt
or
mov
outsb
sahf
jp
sbb
in
aam
add
gs
pop
cltd
divl
jle
and
pop
dec
call
pop
cltd
dec
lock
mov
dec
push
loopne
jnp
daa
fsts
sbb
jmp
fisubrs
or
lea
and
mov
xor
xchg
push
mov
sti
dec
and
or
sbb
mov
mov
out
cmp
jmp
lods
gs
hlt
in
icebp
jb
out
and
sarl
push
les
sbb
cmp
jge
mov
jno
pusha
mov
out
leave
mov
inc
test
mov
adc
clc
mov
shl
test
sbb
mov
inc
popf
mov
in
out
jmp
lods
ja
and
out
mov
mov
inc
add
adc
insb
sub
aam
push
mov
cmp
xorl
mov
or
or
sbb
fwait
jecxz
pop
ljmp
pop
shll
test
repz
das
clc
cmpsb
push
jmp
lods
lret
icebp
mov
xor
mov
pop
out
xchg
and
and
pop
adc
adc
mov
xchg
cmpsl
or
test
jl
lds
call
lcall
in
and
jmp
xor
mov
jmp
test
push
jmp
mov
in
adc
roll
test
fstpl
mov
push
call
mov
mov
fnstenv
add
sbb
int3
mov
add
stos
xor
pop
popf
or
cltd
scas
pop
jmp
xchg
sti
stos
movsb
movl
sub
stos
and
fwait
push
adc
pop
lahf
in
lcall
adc
pop
sub
int3
mov
add
mov
xor
out
loopne
xchg
sbb
mov
or
mov
sbb
sbb
mov
sbb
pop
fsubrs
mov
sti
mov
stc
ret
mov
gs
stc
adc
aam
mov
in
icebp
subb
mov
gs
hlt
sbb
subl
aam
aad
cmp
sub
inc
inc
jns
insb
sbb
pusha
sbb
xor
ficoml
popf
insb
lahf
fisttpll
int
jmp
cld
and
mov
jp
decl
mov
loop
cmp
into
loope
movsb
adc
mov
mov
push
call
insb
sbb
cmpsl
in
push
add
xchg
mov
adc
adc
rclb
in
dec
dec
mov
inc
data16
popf
imul
in
cwtl
lods
test
fistpll
sbb
mov
cmpsb
movsb
inc
add
adc
arpl
fwait
dec
fs
dec
fidivrs
jp
cld
jmp
lcall
adc
dec
mov
inc
leave
push
insb
adc
imul
movsb
test
inc
and
add
out
or
mov
or
add
cltd
mov
adc
pushf
mov
mov
stc
loop
in
cmp
scas
movsl
in
cltd
mov
in
and
xchg
lcall
xchg
loopnew
imul
sbb
inc
insl
xchg
mov
inc
adc
popf
sub
adc
pop
sub
in
in
jp
sbb
popa
sbb
cltd
or
jbe
cmp
es
sti
je
mov
insb
cmp
int3
in
pop
sbb
aad
imul
nop
sbb
adc
sti
cli
in
pop
mov
fldt
shl
fmuls
loope
call
fstpl
movsl
bound
cmc
lcall
fdivrl
sahf
cmp
and
or
fisubs
cmp
cld
out
sbb
and
and
cmpsl
jo
insb
fsts
lods
jge
ds
push
out
jg
sub
fiaddl
test
pusha
xchg
data16
mov
and
mov
pushl
cmp
xor
pop
fwait
xor
sub
xor
jmp
and
cmp
sub
jecxz
pop
mov
out
scas
dec
stc
fcomp
jb
lods
ja
imul
add
inc
mov
lock
idivb
xchg
mov
filds
push
fs
xor
mov
xchg
push
cmpsb
xor
cmp
nop
sbb
lret
dec
mov
lea
xchg
out
and
subl
xchg
cmp
mov
imul
insb
test
in
cltd
cmp
clc
push
push
jo
imul
xor
test
push
out
sbb
cmp
jle
aam
add
inc
mov
xchg
out
pop
setae
xor
lods
push
lcall
xor
xor
cmpsb
jmp
mov
mov
ja
xor
mov
xchg
xor
insb
lods
mov
rolb
inc
ficomps
leave
sti
loop
cwtl
mov
sbb
sub
pushf
jmp
xchg
ret
xchg
test
daa
jb
test
mov
sub
mov
xorb
shrl
lahf
in
xchg
cmpsl
xchg
lret
pop
jmp
js
xor
adc
xlat
or
in
mov
cmp
stc
fisubrs
cmp
gs
loope
mov
test
fstpl
imul
ljmp
arpl
stc
in
mov
lods
in
mov
insl
push
leave
push
xor
and
xorb
jno
pop
test
and
cmp
bswap
inc
rclb
rcr
insl
jl
cmpsb
jae
dec
dec
mov
out
mov
out
sarb
or
je
mov
clc
cmpsb
dec
popf
add
mov
out
adc
and
lods
mov
mov
in
adc
sbbl
idivl
xchg
push
push
lret
pushf
aam
cld
jg
mov
cmp
scas
jne
aaa
repnz
jns
scas
sub
lods
jge
xchg
in
jbe
cmpsl
enter
daa
in
in
xor
sbb
sub
int
xchg
xchg
outsb
push
mov
mov
add
scas
mov
xchg
movsl
and
rep
push
xor
je
subb
fwait
lret
ja
pop
insl
jmp
add
sti
push
mov
adc
mov
jmp
fs
cmpsb
xlat
add
repnz
int
add
xor
jbe
sbb
pop
ss
mov
inc
cmp
outsb
pop
add
ss
lock
mov
cmp
out
ret
dec
pop
mov
shrl
ss
cltd
xlat
mov
fistl
mov
sbb
or
mov
xchg
scas
and
fwait
andl
jne
arpl
add
lds
mov
push
in
lret
sbb
pop
xchg
jns
xchg
repnz
arpl
jmp
cmp
add
xor
jle
jp
es
movsl
push
fwait
in
arpl
sub
add
mull
fdivs
ljmp
arpl
movsb
dec
enter
popf
and
cmovb
dec
dec
and
and
sti
mov
cmp
adc
dec
xchg
mov
inc
or
xchg
mov
xlat
and
cli
shll
jmp
inc
lods
cltd
scas
add
lahf
fcom
sbb
pop
xor
jmp
insb
mov
dec
imul
xor
xchg
outsl
cltd
lret
jne
push
mov
sbb
lods
jns
popf
fildl
insl
stc
enter
and
xor
shl
jp
xor
xchg
xor
stos
sti
insb
xor
jle
mov
not
test
rcrb
and
in
pop
push
loope
loopne
rcll
jns
jp
dec
push
cmp
xor
stos
xlat
push
orb
imul
push
mov
sahf
or
or
les
cmp
mov
ss
and
movsl
cmp
mov
loopne
dec
pop
pop
test
push
stos
lea
fwait
dec
jecxz
pop
sub
sub
mov
movsb
cmp
cmc
sbb
pop
out
pusha
pop
jge
fsubrs
mov
jle
dec
mov
or
mov
push
iret
push
test
shrl
and
loop
sbb
mov
and
es
mov
rolb
inc
and
nop
mov
les
mov
and
bound
push
pop
xchg
js
jno
je
mov
aam
mov
scas
jge
mov
pop
fnstsw
ljmp
mulb
mov
icebp
xorb
js
dec
adc
xor
push
sbb
loopne
xchg
add
xor
daa
daa
jmp
cmpsb
repz
addr16
sub
mov
mov
sbb
push
aaa
in
dec
flds
loope,pn
stos
sti
aas
into
jno
push
lahf
mov
lds
sub
fwait
pop
sub
xor
push
sbb
inc
or
xchg
push
shrl
cmp
mov
mov
call
fwait
xor
dec
lock
movsl
sti
call
jns
inc
xor
or
cvtps2pi
mov
imul
cmpsl
and
mov
js
int
pop
imul
mov
mov
fdivp
stos
rcr
or
push
pushf
xor
mov
inc
or
adc
fisttps
xor
jmp
hlt
jb
fwait
fwait
fs
xchg
das
mov
add
ljmp
int3
fistl
mov
das
mov
test
loopne
lcall
mov
sbb
cli
add
mov
call
loope
out
jp
bound
or
ljmp
mov
jne
out
sbb
add
stos
out
xor
mov
push
and
sub
mov
test
and
dec
mull
pop
jmp
and
sbb
xor
dec
jg
repz
inc
and
and
mov
xor
mov
sti
in
fwait
mov
adc
cmpsb
push
mov
ds
loopne
jmp
mov
add
out
inc
andl
lock
arpl
sbb
in
scas
rcl
gs
or
in
add
fstps
mov
cmp
or
inc
inc
int3
sbb
push
leave
aad
and
jbe,pt
scas
fwait
push
jae
pusha
mov
cltd
cs
lds
and
insb
imul
addr16
addr16
mov
ss
cmp
loopne
fsubrl
movsl
jle
add
pop
jle
add
and
stc
push
out
mov
cmpsl
inc
push
mov
test
mov
pop
or
loop
cmpsl
xlat
xor
enter
loope
sbb
adc
mov
imul
hlt
jne
push
pop
add
inc
jns
dec
or
dec
divb
mov
pop
cltd
sbb
filds
jae
pop
sti
nop
fisubs
jmp
dec
mov
lcall
adc
addb
das
nop
mov
adc
and
sub
cmp
cltd
stos
fwait
pusha
fnsave
popf
push
xlat
xchg
sbb
test
mov
push
xor
mov
int3
insb
nop
mov
stc
push
clc
or
cmp
push
and
aas
fidivs
xchg
inc
sub
fldlg2
add
pop
sbb
and
sub
xchg
sbb
aaa
test
dec
push
cmp
dec
jle
scas
jne
loop
hlt
loop
jl
push
dec
loopne
mov
out
mov
repnz
and
lret
std
push
test
rcll
lahf
inc
mov
imul
fildll
in
push
in
ss
pop
adc
pop
mov
xor
movsb
jnp
xor
mov
dec
mov
jbe
pop
xchg
push
pusha
pop
in
xchg
adc
sbb
mov
sahf
sti
daa
rorb
dec
aad
inc
lods
jae
xor
mov
cmp
pop
mov
daa
mov
push
ljmp
add
jbe
xor
mov
outsb
aam
mov
sbb
sahf
jns
movsb
dec
and
insb
mov
movsb
lcall
js
outsl
adcl
cwtl
cmpsb
test
xchg
mov
push
call
xor
movsl
jbe
lock
test
mov
ja
jmp
xchg
mov
clc
and
lret
rcrl
test
adc
cmp
out
jns
push
jae
inc
xchg
sbb
inc
sub
mov
mov
cmp
repz
fstpt
and
adc
bt
or
imul
das
mov
ss
sbb
push
stos
mov
mov
sbb
xchg
es
int3
jno,pt
and
add
std
stc
pop
inc
cmpsl
fwait
mov
pop
popa
loop,pt
xlat
mov
mov
push
adc
jmp
aad
sti
pop
divl
and
dec
push
inc
mov
push
adc
pop
mov
sbb
cmp
xchg
or
sub
push
lods
mov
insl
jmp
mov
jno
shlb
jnp
std
push
jmp
and
pop
repz
cmp
mov
test
fs
sahf
push
mov
out
sarb
inc
rorl
orl
movsl
repz
dec
add
insb
mov
push
lret
xlat
jle
movsb
pop
pop
add
inc
iret
add
push
sbb
sub
jg
and
lods
xchg
fcomps
jle
or
in
mov
dec
push
and
mov
and
mov
test
mov
sub
inc
sti
mov
adc
leave
mov
jae
hlt
sub
sbb
scas
jmp
xchg
movsl
int
xchg
rcrl
stc
mov
add
mov
setl
cmc
test
inc
test
addr16
dec
xor
bound
aaa
insl
xchg
push
sbb
inc
push
enter
cs
sbb
test
pop
adc
or
push
das
ja
mov
push
out
cs
xchg
std
mov
repz
xor
dec
xor
or
and
jb
movsl
pop
call
or
push
fsubr
test
cmpsb
scas
mov
push
jne
in
jl
out
sbb
decl
xlat
cmp
xchg
xchg
hlt
fs
and
inc
je
cmp
fcmovnbe
sub
sbb
insb
loop
mov
mov
insl
out
xchg
jecxz
iret
and
sbb
xchg
jae
mov
icebp
aaa
lock
xchg
imul
add
ss
repz
jbe
fsubs
mov
loop
pop
adc
inc
dec
rolb
daa
or
jmp
mov
sbb
inc
mov
add
add
inc
mov
js
cs
in
inc
mov
lret
cmpsb
mov
and
fisubrl
js
cmc
clc
mov
sub
mov
and
xchg
mov
je
push
lock
test
xor
icebp
dec
repz
orl
sub
shr
fmuls
mov
divl
mov
cs
and
or
xchg
stos
jmp
cmp
push
lds
je
mov
xchg
and
push
sti
sbb
cmp
sahf
sub
int3
dec
mov
or
dec
mov
mov
xor
sub
ds
popa
adc
es
mov
mov
jbe
cmc
lods
hlt
out
xor
jo
pop
mov
xchg
mov
mov
rep
loope
and
lcall
jg
data16
in
dec
mov
repnz
imul
loope
xor
aam
jge
outsl
ret
push
and
push
cltd
out
das
cmpsb
mov
rclb
cmpsb
mov
inc
push
out
cmpsb
fwait
xchg
test
sahf
push
outsb
mov
testb
movsl
add
pushf
pop
xor
xlat
movsl
lds
push
sti
dec
outsw
jae
jg
mov
push
sbb
inc
out
mov
sbb
push
imul
pop
mov
inc
sbb
test
push
cmp
out
mov
mov
cltd
or
sbb
mov
pop
lds
jp
xchg
cli
pop
dec
adc
xor
les
mov
stos
hlt
dec
cltd
inc
lahf
and
push
aas
loop
cltd
sbb
fadds
jne
sub
aad
xchg
sbb
repnz
cmp
rorl
fwait
or
jg
fcoms
sti
dec
cltd
mov
mov
pop
stc
xor
add
jno
mov
mov
or
mov
mov
adc
xchg
mov
cmp
rclb
fisubl
push
repnz
and
fsubrl
fucomp
sahf
fwait
pop
pop
out
jnp
fwait
sub
mov
into
inc
gs
aas
lahf
aad
or
insb
pop
test
addr16
stc
dec
je
js
ljmp
inc
rcrl
cltd
int
adc
dec
addl
sbb
pop
popw
or
or
and
es
sbb
movsl
lahf
pushf
testb
sbb
sub
jl
in
sti
aaa
inc
loop
jp
mov
movsl
xor
fwait
cmp
lcall
fs
fnstenv
jle
fisttpll
jne
imul
out
mov
mov
add
lcall
gs
adc
iret
stos
es
mov
dec
push
mov
movsl
mov
or
pop
andb
fwait
pushf
popf
jno
and
xchg
jne
push
out
jo
lret
sub
stos
xchg
cmp
add
das
cmp
xchg
sar
or
add
mulb
xor
sub
lds
mov
outsb
jae
dec
fsubr
and
cli
cmp
pop
aad
mov
out
in
inc
mov
mov
jnp
push
roll
sub
add
adc
fstpl
lcall
mov
mov
testl
xor
jno
inc
cltd
pop
mov
dec
lds
and
lea
adc
dec
sbb
lcall
or
lret
outsl
ja
and
adc
mov
and
pushf
pop
dec
imul
ljmp
push
xor
aam
fs
fldcw
push
and
in
xchg
popa
jae
xchg
lahf
sub
fwait
outsl
jl
repz
mov
jae
mov
cltd
mov
lcall
cmp
subl
jbe
rcl
fldl
gs
aaa
mov
cmp
std
pushf
stos
mov
mov
daa
scas
sbb
loopne
add
jne
int
cmp
xlat
jmp
xor
dec
mov
andb
push
outsl
or
mov
stc
xchg
inc
daa
call
and
xchg
sbb
cmp
jno
stos
xchg
push
or
and
mov
cmpsb
lea
repz
pop
mov
mov
lcall
and
movsl
mov
orb
and
aad
std
pushf
loop
out
cmpsb
jmp
inc
fsts
test
push
inc
out
mov
into
inc
cmpsl
xchg
daa
push
mov
cs
push
adc
sarb
call
add
or
cs
dec
or
xchg
mov
sub
aaa
sbb
pop
lods
pop
sub
push
and
pop
cmp
stos
xchg
xchg
add
push
shlb
enter
cmp
sbb
jo
mov
aaa
sbb
mov
or
mov
sbb
sub
out
sbb
adc
imul
jb
les
test
sahf
mov
jge
cmp
lcall
ljmp
xlat
xorl
jb
int3
xchg
jp
nop
adc
es
add
icebp
out
scas
repnz
jne
out
fildll
push
test
mov
dec
test
xchg
add
jecxz
xchg
adc
sub
and
ljmp
lock
lds
test
arpl
xchg
or
mov
xor
adc
enter
lods
pop
pop
pushf
mov
adc
jae
xchg
push
mov
dec
scas
cmp
ficompl
into
inc
sub
sub
mov
fnstsw
add
jecxz
sbb
scas
sub
mov
scas
jbe
jmp
pop
test
push
hlt
mov
pop
subl
cmpsl
cmp
push
adc
add
cwtl
dec
adc
dec
mov
xchg
sti
sbb
mov
sbb
inc
popa
repz
call
shlb
dec
cmp
jns
lcall
int3
lcall
leave
aaa
mov
cmp
or
shlb
in
aad
outsl
clc
jl
mov
in
fldenv
or
dec
pop
cmc
mov
in
es
test
lods
out
push
loopne
cli
xchg
dec
lret
push
lods
sti
mov
ljmp
out
and
sub
cmp
cmp
int3
shrl
faddl
outsl
lock
xchg
mov
cmp
mov
sahf
fwait
stos
xor
push
sbb
adc
xchg
xor
imul
movsw
adc
jne
imul
mov
push
mov
insl
out
leave
pop
imul
mov
data16
push
fwait
pushf
fwait
nop
dec
stc
cli
dec
into
mov
mulb
repnz
shll
outsl
pop
cmc
es
ss
pop
cmp
add
inc
jp
mov
xchg
fwait
push
cld
and
imul
mov
sbb
xchg
repz
mov
mov
mov
jl
push
push
fidivl
or
imul
jecxz
test
repnz
aaa
dec
push
test
mov
stos
mov
xchg
nop
popf
and
out
and
sub
or
lods
subl
mov
mov
dec
or
jb
insb
and
loop
xchg
and
jno
cmp
lods
sub
movsb
pop
fldenv
daa
popa
incb
mov
fmuls
movsb
xchg
gs
add
rol
aas
jne
jnp
push
pop
sbb
jne
mov
cmpsb
dec
mov
pop
cwtl
pop
xchg
and
pop
lcall
add
int
cmp
outsl
and
add
adc
sbb
adc
bound
ficoms
outsl
xchg
jmp
mov
xchg
mov
cmpsl
mov
cmp
out
test
ret
xor
xchg
mov
jne
sub
icebp
push
in
ljmp
or
or
ds
pop
cmc
fistps
sbb
mov
jb
fcompl
aaa
insb
mov
ret
insl
lods
js
imul
cmp
sbb
es
out
rcll
xchg
xor
scas
mov
push
test
in
mov
leave
hlt
fwait
xor
call
mov
lods
pop
xor
or
lcall
frstor
xor
imull
pop
fwait
inc
xchg
push
ret
lret
stos
aad
xchg
xor
lret
lahf
sub
jecxz
out
pusha
dec
dec
mov
add
jnp
sti
push
and
mov
mov
movsl
cmp
out
jo
cltd
rcrb
sbb
scas
push
inc
fwait
leave
in
lcall
ret
lret
mov
sti
repnz
xor
or
adc
xchg
int
cltd
xor
negl
dec
and
or
sub
std
mov
adc
lds
iret
lds
or
add
out
addr16
scas
pop
call
cmp
jb
movd
mov
and
frstor
mov
sbb
rcrl
pop
push
sahf
loopne
jecxz
jae
adc
je
jb
ja
je
xchg
and
jg
sub
sub
pop
push
lods
and
inc
pushf
inc
inc
sbb
pop
clc
std
and
cmp
loopne
cmp
out
add
je
sbb
shll
jo
out
mov
mov
gs
or
add
fistl
pop
xlat
cwtl
out
fisubs
inc
mov
xor
fwait
je
adc
sahf
and
jmp
xchg
and
inc
inc
or
jne
inc
mov
pop
aaa
in
in
rorb
mov
fs
bound
inc
mov
sbb
push
int3
push
fimull
sarb
insl
int
sti
lcall
mov
movsb
jno
cmp
push
inc
dec
and
imul
outsl
dec
mov
push
stos
cmp
push
cmpsl
repnz
fsub
test
movsb
stc
loop
inc
sub
inc
in
pop
daa
xchg
ss
cwtl
push
mov
stc
mov
imul
dec
jmp
pop
in
loopne
out
push
js
xor
jns
add
sbb
stos
js
sub
cmc
ds
insb
mov
cli
outsb
pop
and
aam
add
pushf
cmp
mov
xor
dec
or
or
jecxz
xchg
mov
fldl
outsl
nop
div
inc
mov
lea
jmp
push
sub
add
je
out
out
xchg
or
xchg
mov
mov
dec
jmp
mov
std
push
dec
push
test
cmpsl
lea
jg
lds
lret
imul
xchg
mov
jle
aad
or
lods
fistps
mov
dec
pop
push
sbb
and
clc
lcall
inc
in
push
jecxz
sbb
scas
mull
sub
and
jnp
mov
mov
je
lcall
lods
movsl
jge
and
loope
insb
lahf
or
cmpsl
addb
sub
inc
sbb
inc
mov
inc
xor
clc
mov
ljmp
dec
cmp
arpl
or
jmp
or
and
fs
aas
mov
std
fs
pop
cs
lea
or
mov
subl
push
fs
in
lret
and
ds
pop
adc
dec
popf
cli
punpcklwd
fidivs
sub
push
leave
sub
mov
fldl
pop
in
shrl
stc
push
and
test
mov
sbb
pop
ja
mov
jae
int3
jge
pusha
fimuls
sub
jl
lods
je
lret
or
sub
mov
aaa
dec
push
leave
lods
ds
and
adc
das
mov
jmp
gs
pop
fidivrs
cmc
scas
pushf
test
push
or
xor
inc
jbe
dec
shll
shrl
in
insb
movb
xchg
adc
cmpsl
stos
out
rcrb
sub
fmuls
bound
pop
outsl
inc
mov
iret
and
popf
pop
nop
popa
outsl
gs
ja
lods
cwtl
mov
movsb
dec
aas
icebp
pop
add
xchg
out
push
jne
aam
clc
in
test
sbb
xchg
and
aam
cmp
sti
sub
mov
in
test
loope
cmp
mov
push
pop
cmp
adc
sbb
fistl
pop
lret
cmp
mov
jl
ja
pop
cmpsb
fwait
rorb
ljmp
test
adc
scas
cmp
xchg
lock
and
push
xor
movsb
pusha
jne
dec
push
push
and
jg
ss
adc
mov
rcl
jmp
adc
mov
pop
push
mov
gs
outsl
fs
push
push
cld
mov
outsl
adc
stc
or
scas
outsb
push
mov
cwtl
test
add
adc
notb
pop
sbb
mov
ret
pop
lahf
sbb
mov
fnsave
pop
cmc
dec
out
mov
scas
add
jp
sbb
pop
push
jmp
inc
gs
in
data16
test
jmp
sub
adc
sbb
cmpsl
into
jecxz
mov
xor
inc
jnp
in
sbb
cli
xor
xchg
mov
mov
cltd
andb
xchg
les
cs
push
xor
lock
rorb
or
pop
fistpll
ds
mov
mov
dec
xor
loopne
stc
int3
sbb
sbb
adc
mov
sbbb
into
and
jns
or
lret
jmp
dec
test
pushf
fstps
jbe
addr16
mov
and
xorl
call
int
jg
push
push
push
pusha
add
ret
jge
mov
sbb
adcl
pop
dec
sbb
push
dec
push
iret
sbb
push
insb
ljmp
and
dec
dec
ret
out
jmp
into
mov
addr16
ds
imul
lcall
out
xor
push
jns
dec
hlt
in
fstpt
cmpsl
mov
mov
ret
xchg
icebp
xor
sbb
sbb
push
pop
cmc
xchg
jecxz
mov
mov
push
dec
inc
out
mov
adc
inc
jmp
loope
mov
imul
push
test
or
mov
std
mov
dec
mov
mov
sub
xchg
dec
out
mov
test
mov
imul
sti
cmc
lcall
add
and
adc
adc
into
sbb
xchg
nop
test
push
js
dec
test
and
out
pop
pop
sbb
xchg
adc
xchg
cs
std
fcoms
push
aam
mov
andb
mov
lock
outsb
lock
lock
xchg
lahf
jge
icebp
stos
imul
bound
cmc
addb
jns
fwait
test
fnstenv
cmp
pop
mov
push
punpcklwd
fdivrs
xchg
rorb
rcrl
addr16
mov
add
imul
movsl
out
mov
ljmp
pop
add
stc
xchg
sub
stc
stos
and
jmp
stc
mov
jl
mov
negb
cmpsl
jnp
jno
adc
inc
ljmp
aam
and
push
and
xor
sub
sti
test
adc
mov
imul
mov
pop
jnp
movsl
sub
push
fld
sbb
test
inc
lret
mov
or
mov
sbb
inc
mov
shll
stos
dec
cmc
mov
imul
sub
dec
xchg
xchg
add
lock
pop
bound
movsl
and
mov
xchg
mov
pop
inc
mov
in
ljmp
jnp
xchg
jle
in
sbb
int
cmp
xchg
lret
and
ficoms
add
sti
shlb
hlt
inc
pop
dec
cmp
test
ja
cmp
jns
push
cmp
add
ret
push
cmp
test
push
mov
lahf
mov
or
daa
mov
add
stc
sbb
lahf
leave
push
das
mov
sbb
adc
sbb
scas
ret
aas
mov
and
aaa
data16
icebp
sub
xor
mov
call
pop
rcrb
dec
cltd
shll
pop
jbe
fwait
ds
into
mov
ja
and
and
jo
jbe
fwait
aas
mov
jmp
enter
and
sahf
cmp
jne
mov
jns
pushf
dec
js
rcll
xchg
repnz
or
icebp
push
xor
mov
jmp
dec
add
mov
push
mov
pusha
sbb
test
js
sahf
jno
leave
inc
or
pop
js
push
ja
sbb
xchg
cmp
sub
lret
imulb
or
frstor
loopne
in
cmpb
xor
and
cltd
inc
cltd
out
lea
mov
pop
cmp
jns
test
dec
out
xor
or
pop
std
outsl
dec
lcall
hlt
pop
jns
mov
mov
fbld
inc
stos
pop
lea
lret
insl
mov
sahf
out
cld
or
outsl
jno
mov
cmp
sbb
pop
xor
and
mov
jns
lods
loopne
movsb
jecxz
mov
fwait
push
pop
xchg
add
mov
add
or
dec
shr
aas
roll
daa
xorb
cmp
aam
stos
mov
jl
adc
icebp
mov
test
jmp
scas
sbb
fisubl
aam
hlt
mov
sub
mov
test
xor
icebp
xchg
cmp
push
cmp
sub
dec
dec
mov
pop
mov
pop
je
mov
jge
shll
aam
lods
scas
out
fstp
mov
sub
inc
inc
xchg
inc
dec
scas
in
das
mov
movsb
andb
pop
loop
sbb
sbb
push
out
jg
negl
call
fmuls
mov
adc
testb
sub
xchg
lcall
mov
dec
in
repz
jmp
xor
loope
mov
sti
popf
aaa
lods
inc
adc
adc
cmp
insb
cmp
pop
lds
pop
xchg
in
lret
out
mov
inc
sub
adc
push
push
test
pop
jmp
and
fwait
repnz
data16
ret
jge
jmp
out
into
fsubrp
pop
jno
hlt
xorl
jns
les
mov
insb
jne
stos
ljmp
fyl2xp1
sub
pop
jbe
popf
sti
out
fidivrl
cli
sub
in
fcompp
popf
negl
xchg
add
mov
mov
jmp
xor
inc
mov
or
fwait
cli
push
sbb
inc
repnz
add
add
inc
mov
jns
mov
mov
sahf
ret
gs
push
sahf
stos
and
sub
jg
push
mov
jns
lods
push
fbld
lods
xchg
add
mov
lods
or
jno
sbb
ljmp
sbb
add
xchg
mov
dec
gs
fucomp
sbb
jmp
lds
cmpsb
mov
dec
and
jl
ret
mov
inc
push
cltd
dec
pop
adc
jecxz
pop
inc
cmp
push
imul
imul
rcrb
add
pop
mov
and
sbb
mov
push
fcom
mov
sub
mov
scas
pop
sbb
fiadds
sbb
cs
cmp
dec
push
cmp
mov
out
push
sbb
push
mov
iret
mov
push
cmc
push
movsl
lcall
sub
mov
sahf
pop
mov
or
in
scas
cs
out
ljmp
sbb
lds
cltd
jmp
push
mov
lcall
sub
daa
popf
and
jbe
mov
mov
jmp
pop
sub
inc
pop
rorl
testb
and
pop
mov
xchg
out
addr16
jmp
push
mov
stc
rclb
cltd
in
aas
js
and
jns
test
mov
jmp
mov
mov
and
inc
pop
and
pop
or
das
cltd
rcrl
test
adc
xchg
xor
push
xor
or
jbe
aaa
cmpsb
cmp
push
xchg
adc
and
mov
jns
add
scas
mov
mov
mov
sbb
rorl
pop
adc
stos
loopne
sbb
inc
mov
mov
int
cmp
lret
mov
mov
mov
pop
fsubs
xchg
sahf
addr16
mov
adc
int
adc
imul
les
adc
ja
testl
push
roll
inc
dec
fistps
data16
and
mov
lahf
mov
mov
fsubrs
cmp
vpandn
adc
and
mov
push
loope
inc
mov
shlb
mov
stos
cmp
jge
fimull
push
insl
out
push
jmp
out
std
jne
inc
stc
lock
cmp
adc
and
lds
mov
nop
and
adc
inc
cmp
mov
pusha
push
inc
jae
cli
sub
stos
mov
ret
ss
sbb
sbb
adc
push
dec
jo
push
aas
fisubrl
fwait
fwait
pop
mov
mov
je
mov
out
mov
aad
cmp
ljmp
push
cli
ror
xchg
and
add
lea
addr16
imul
dec
pushf
imul
xor
adc
cwtl
or
enter
push
push
mov
ljmp
iret
out
stc
mov
lods
adc
or
loop
rcl
xlat
movsl
imul
sahf
imul
mov
cmp
jo
xchg
cmpsl
mov
mov
dec
outsl
movsl
pop
sbb
hlt
addr16
cld
clc
mov
jl
inc
adc
lcall
mov
aad
cmp
dec
mov
call
lret
into
mov
daa
popf
and
sub
xchg
mov
les
cmpb
inc
jl
neg
data16
cmpsb
mov
adc
or
mov
push
aad
jo
mov
addr16
mov
fbstp
sahf
fildl
mov
push
sub
fs
jbe
out
dec
sub
mov
or
js
lcall
sbb
lds
inc
mov
data16
pushf
or
cwtl
jns
add
out
add
sub
inc
mov
movaps
orl
or
movsl
mov
out
inc
loope
pop
imul
and
push
or
cmp
xchg
inc
ljmp
adc
js
subl
push
mov
sbb
or
xor
add
pop
mov
mov
mov
inc
ljmp
out
loop
push
dec
push
lret
pusha
in
lret
stc
xor
push
or
jnp
dec
lahf
cmovbe
aas
lcall
pusha
icebp
inc
test
je
mov
jb
cs
pop
int3
sbb
lahf
inc
xor
xchg
lock
stc
mov
ja
fldenv
inc
pop
adc
aaa
hlt
inc
pop
dec
ja
pop
out
push
ljmp
xorb
insl
add
mov
popa
xchg
dec
push
mov
gs
or
std
mov
fwait
aam
or
outsb
cs
sbb
push
jns
xor
fs
push
test
or
lret
sbb
xchg
push
fdivl
and
mov
jno
aas
jae
movsl
repnz
cs
jbe
adc
orl
ret
cmp
and
test
pop
xchg
inc
lds
pop
sbb
les
mov
fcomi
push
jl
mov
sub
mov
scas
mov
mov
mov
jp
imul
cli
lret
orb
push
fwait
push
dec
and
mov
mov
mov
dec
cltd
lcall
cmp
cmpsb
sbb
cs
in
and
ja
repz
into
jg
adc
adc
int3
insl
js
pop
leave
jae
or
inc
ret
jns
pop
rcrl
pop
fwait
dec
jns
mov
inc
mov
mov
cmp
jb
dec
movb
mov
mov
clc
test
mov
xchg
aas
sti
lds
in
mov
xchg
mov
jno
mov
sub
adc
add
mov
cmp
rorb
push
push
in
jmp
outsb
dec
addr16
jmp
imul
mov
pop
fwait
les
imull
mov
test
cld
out
out
sbb
pop
cwtl
rclb
xlat
call
jno
adc
test
pop
lea
sti
mov
rcr
decb
jmp
roll
nop
lock
ds
cmc
jne
rorl
gs
mov
mov
xlat
fwait
gs
mov
test
in
test
repnz
fsubs
fisttpl
in
outsb
dec
sbb
insl
adc
and
pop
or
sbb
fstpl
outsl
push
mov
jbe
loope
mov
sahf
jno
fcmovu
cltd
pop
dec
mov
mov
out
sub
adc
mov
roll
mov
aad
jp
mov
jp
sbb
ret
xchg
out
sub
icebp
pop
pop
dec
dec
mov
pop
sbb
push
dec
inc
jmp
xchg
mulps
adc
cmpsb
pop
and
or
test
jecxz
mov
imul
loope
cmp
sti
std
mov
and
pop
push
sbb
add
or
adc
icebp
aas
add
xor
fsubl
inc
clc
xchg
inc
push
por
jno
clc
pop
mov
mov
loop
push
insl
aad
push
ljmp
jmp
insl
push
pop
cmp
leave
and
ljmp
jle
jle
dec
xor
outsb
mov
jl
or
cltd
pop
mov
cmpsl
mov
pop
push
add
sbb
xchg
sbb
loop
dec
stos
jns
adc
sbb
fwait
ret
out
mov
adc
bound
dec
nop
mov
mov
ss
stos
inc
dec
and
or
or
pop
jle
push
mov
mov
hlt
pop
xor
sbb
adc
fisubs
add
and
loopne
rcrb
out
add
inc
enter
dec
test
mov
lcall
sti
xlat
jmp
cwtl
xorl
or
sub
test
loope
je
or
jle
and
aam
addr16
xchg
or
mulb
or
xor
ret
mov
insl
lret
pop
divl
jns
stc
push
adc
mov
ljmp
mov
mov
sbb
shl
mov
int
arpl
lock
cmpsl
sbb
inc
insb
add
sbb
in
testl
add
lods
inc
and
add
rcrl
fstps
out
jns
dec
mov
test
or
lods
in
lahf
inc
stc
and
add
out
call
imul
push
dec
and
call
push
mov
sti
js
and
jne
fldenv
mov
aam
sbb
dec
fsts
mov
in
scas
adc
cvtsd2si
mov
fdivs
mov
cltd
in
mov
and
idivl
out
mov
shrb
jae
push
push
or
insb
xor
nop
int
push
mov
push
jnp
sub
sbb
sar
ret
and
vaddsd
add
sbb
aam
xor
mov
push
pop
add
xchg
aam
pause
push
stc
sbb
in
cmp
and
lcall
dec
xchg
js
lods
je
inc
js
add
popa
or
mov
aaa
fstl
notl
adc
fimuls
xchg
push
test
sbb
add
mov
ljmp
sub
insl
xchg
push
xchg
iret
push
pusha
dec
or
pop
and
cmp
mov
mov
push
push
test
sti
sbb
mov
jmp
push
repz
sbb
push
lahf
mov
lret
lods
xchg
orl
ljmp
mov
jno
movsb
sarl
mov
xor
pop
out
add
push
pop
cltd
push
xchg
adc
sbb
in
lods
in
sbb
hlt
mov
xchg
cmp
enter
js
clc
mov
out
sbb
test
in
test
push
and
cmp
leave
jle
and
push
mov
out
jmp
mov
nop
cmpsb
pop
push
jp
es
js
fcmovb
mov
int3
lret
mov
call
push
stc
scas
daa
in
xor
flds
outsb
push
rolb
cmpsl
aam
scas
push
pushfw
or
mov
out
push
bnd
fisttpll
jl
dec
sub
pop
inc
mov
mov
daa
aad
cmp
fadds
add
mov
push
in
andb
in
fcomi
cmp
push
mov
dec
cmp
mov
or
ficoms
fucomip
dec
push
mov
mov
dec
testb
mov
out
mov
inc
stos
add
cmp
std
mov
mov
adc
sub
and
mov
pop
movsb
repz
sbb
hlt
cmpsb
std
sub
test
ret
jmp
into
mov
sbb
icebp
shll
popf
fisttpl
or
fidivs
adc
movsb
mov
mov
and
clc
or
sub
jl
aam
push
imul
sahf
xchg
cmc
sbb
adc
mov
fcomps
in
xor
mov
xchg
notb
ret
scas
mov
movsl
sbb
push
es
mov
jmp
push
add
data16
cmc
leave
shl
mov
icebp
mov
jp
cli
cltd
lret
rcl
fidivs
mov
mov
mov
adc
jge
dec
cmc
in
cli
and
push
in
push
adc
test
mov
push
jne
mov
sub
push
or
lcall
mov
and
mov
inc
cmp
fwait
cmp
jb
xor
mov
push
mov
repz
leave
scas
lret
fwait
push
lea
sbb
aas
adc
loop
jg
and
sub
das
dec
sub
push
sbb
jecxz
jae
dec
inc
mov
pop
mov
neg
mov
pop
lods
jo
pop
es
cltd
mov
pop
xor
call
jmp
ss
xor
out
das
push
nop
data16
insl
push
cmp
into
aad
inc
pusha
dec
mov
add
xchg
fdivp
and
add
jmp
jns
into
fistps
imul
cmc
and
in
mov
pop
xchg
imulb
and
out
out
popa
sti
add
push
lds
mov
test
movsl
mov
adc
sbb
enter
aad
pop
fdivp
in
jmp
das
sub
mov
jno
mov
mov
mov
in
shl
fistpl
andb
jecxz
adc
mov
cmp
pop
fcomip
and
sbb
sbb
mov
adc
lds
xor
insb
sbb
ret
add
cld
cmp
inc
ljmp
inc
int3
sub
mov
fimuls
jg
mov
pop
ljmp
pop
aad
and
outsl
push
xchg
fists
and
or
xchg
orl
das
lahf
lret
xor
fwait
icebp
mov
repz
jnp
push
fsts
or
test
jns
sbbl
cmp
pushf
je
adc
mov
jmp
out
rcrb
mov
test
sbb
icebp
mov
dec
mov
mov
mov
mov
in
int3
sub
imul
jle
cmp
pop
iret
mov
mov
insb
or
mov
cltd
mov
pop
daa
mov
jl
popf
stos
test
dec
in
mov
jb
ret
push
adc
ja
xchg
sub
jne
adc
sti
cld
and
pushf
cmpl
mov
scas
mov
push
fcomi
mov
mov
es
cmpsb
lea
mov
scas
and
arpl
fwait
or
lret
enter
fsubl
addr16
and
xor
mov
repz
inc
fdivs
mov
mov
dec
sub
jns
mov
or
mov
and
rcr
in
jne
pop
xor
xlat
pop
mov
vpsllq
cmp
pop
dec
testb
das
aas
mov
jo
arpl
xchg
int3
iret
sub
cmc
and
loopne
sub
movsb
out
pop
rclb
sbb
popa
data16
mov
sub
js
jge
pushf
fdivr
mov
xchg
add
and
jno
shlb
mov
ds
aam
and
fistps
jns
pop
mov
or
je
test
mov
icebp
imul
inc
loopne
repz
dec
jne
pop
lcall
cmp
sti
sub
jl
fdivrs
ss
add
out
jg
fstps
popa
push
pop
cmp
aam
cltd
mov
xchg
jecxz
int3
pop
mov
and
mov
jb
loopne
xchg
outsl
jae
and
out
mov
sub
fbld
push
dec
mov
jnp
out
cld
push
sub
pop
out
rcrb
cmp
jg
in
inc
inc
call
and
outsl
test
mov
xchg
xor
fimuls
inc
call
jp
insl
sbb
mov
jnp
pop
out
mov
stc
cmpsl
daa
int3
pushf
dec
das
aaa
in
lock
adc
jb
xchg
lret
pop
sub
push
mov
adc
adc
push
cmpsb
mov
sbb
add
repz
jle
sbb
imul
shll
mov
ljmp
fldl2e
clc
popa
mov
int
out
lahf
ja
lcall
and
pop
push
mov
scas
sub
leave
in
jmp
pop
pop
cmovl
adc
pop
mov
mov
popa
loopne
mov
in
sarb
adc
xchg
jne
inc
pop
es
mov
pop
idivb
fstps
dec
push
clc
test
push
mov
in
inc
ret
lds
mov
adc
leave
pop
gs
mov
or
jg
push
outsb
xchg
mov
sti
sub
cli
add
mov
sub
push
lods
addr16
enter
pusha
adc
push
add
and
and
adc
pop
mov
not
out
ret
mov
add
mov
mov
sbb
sbb
orl
ret
lret
mov
xor
cmpsb
mulb
jne
sbb
sbb
fnstenv
insl
sbb
in
push
out
fs
sub
jmp
sbb
mov
adc
cmp
xor
sbb
dec
mov
mov
adc
dec
xor
sbb
push
mov
out
hlt
cmp
inc
or
loope
test
fs
sbb
add
sub
sub
mov
or
xor
or
cltd
jecxz
push
or
daa
cmp
dec
xchg
jge
xchg
out
sbb
cmp
sbb
lret
inc
test
fcom
gs
out
mov
cli
scas
pop
mov
mov
mov
pop
sbb
fdivr
aam
inc
in
pop
call
and
enter
lcall
adc
repz
outsb
in
pop
cli
bound
add
addr16
adc
mov
insb
xchg
or
or
and
in
cmpsb
int3
mov
test
mov
cmpsl
add
sbb
sbb
lret
aam
loopne
in
push
inc
call
lock
pushf
push
movsb
cli
fwait
sbb
inc
in
ss
inc
mov
jo
mov
out
addr16
sub
in
cmp
or
sub
dec
pushl
mov
pop
and
lock
xor
sbb
push
stos
push
rorb
sbb
push
adc
cmp
sub
sahf
cmpsl
inc
or
inc
ret
xchg
cmp
and
cmc
jl
add
sub
and
aam
movsb
jmp
cli
cmp
sub
outsb
hlt
sub
and
mov
out
and
test
shll
cmp
ss
fcompl
pop
out
cmpsb
iret
mov
subl
mov
mov
jo
subl
pop
dec
and
jl
fsubp
in
lock
pop
cmc
lods
mov
ret
mov
inc
sbb
xor
or
std
ret
fwait
inc
cwtl
push
pop
push
test
sub
es
mov
inc
ljmp
adc
daa
fisubrs
xchg
bound
dec
gs
enter
and
test
movsb
jnp
shll
insb
mov
pop
sub
inc
repnz
lods
pop
push
adc
out
test
mov
mov
cmpsb
jbe
and
in
pop
sub
mov
and
sbb
insl
xchg
das
icebp
mov
dec
mov
mov
in
cmp
push
ds
jo
rorb
and
les
cmp
movsl
mov
lock
fimuls
cmp
inc
sbb
test
sub
das
addb
and
cs
dec
sub
testl
ds
and
and
xchg
mov
out
mov
lcall
mov
adc
iret
add
rorl
into
push
popa
aas
sbb
scas
sbb
push
jp
outsb
sbb
test
inc
sbb
jmp
out
test
lea
outsl
push
loope
pop
jle
lret
insb
lea
out
add
inc
pop
mov
dec
js
into
in
fucomi
xor
bound
jmp
loope
mov
jmp
mov
jnp
in
jmp
loope
sbb
mov
or
mov
je
sub
xlat
dec
ret
xchg
out
mov
cmpl
sub
jl
outsb
pop
sbb
add
repz
xorl
mov
fidivl
cli
insb
stc
jne
addr16
test
imul
mov
ja
int
addr16
add
in
cwtl
inc
push
rcrb
pop
push
and
fstpl
mov
shll
mov
lahf
outsb
sub
mov
xor
xor
sbb
in
cli
aad
fsubs
sub
es
pop
sbb
cltd
jmp
repnz
faddl
push
arpl
sahf
push
lods
push
leave
mov
mov
dec
cwtl
mov
cmpsb
imul
les
scas
sbb
adc
mov
cmp
or
sbb
scas
dec
jl
lods
call
inc
jecxz
mov
cltd
es
cmpsl
jo
loop
mov
repnz
repnz
mov
xchg
popf
jnp
mov
lret
xor
adc
mov
push
jbe
sub
sbb
jl
xor
bound
cmc
jecxz
in
xchg
mov
adc
test
add
xchg
lds
cld
out
push
lahf
jnp
sub
inc
xor
sbb
mov
xor
push
int3
xor
fnstenv
ljmp
cmp
mov
push
inc
adc
mov
pusha
test
test
mov
test
repnz
lea
cmc
adc
lret
or
add
push
sub
mov
sbb
push
mov
sbbb
push
mov
outsl
call
sub
jne
mov
push
sbb
or
pop
jb
cmp
mov
push
and
insl
clc
push
push
jl
mov
mov
push
adc
xchg
and
cs
aas
cmp
add
jbe
adc
out
lods
lods
jmp
dec
jg
pop
adc
push
lcall
sbb
xor
or
push
sbb
aas
pop
dec
mov
andb
mov
lock
xor
insl
jb
fucomip
cltd
pop
sub
or
lahf
push
jns
mov
punpckhwd
push
xchg
mov
push
js
and
xchg
push
sbb
sbb
add
xchg
jo
xlat
and
ljmp
scas
pusha
push
inc
push
jne
leave
push
flds
outsl
pop
mov
outsl
mov
leave
pop
mov
rorl
mov
dec
mov
mov
mov
les
xchg
pop
out
jns
push
int
jecxz
test
scas
mov
movsl
pop
ljmp
pop
pusha
dec
or
shr
adc
sub
sbb
xor
pop
mov
stos
inc
pop
jl
and
jge
mov
jge
arpl
sbb
inc
dec
enter
and
sbb
push
cmpsl
sub
aam
movsl
lcall
outsb
xchg
mov
jo
fwait
dec
xchg
arpl
xchg
lods
aas
mov
lret
lea
sbb
push
cmc
fiaddl
fwait
call
aam
popa
loope
lds
shl
int
movsl
push
xor
mov
xchg
inc
test
sbb
dec
fwait
and
mov
mov
cmc
mov
mov
test
and
les
or
xchg
sbb
gs
mov
in
mov
sub
cltd
out
data16
add
popf
xchg
mov
lods
out
pop
test
jb
sbb
push
inc
call
jns
cmpl
and
rcrb
xchg
pop
dec
mov
push
mov
and
cltd
call
jmp
sbb
xchg
xchg
stos
aaa
inc
cmpsb
mov
out
adcl
and
mov
mov
cmpsl
test
jmp
pusha
mov
mov
es
mov
jo
jns
mov
jnp
jb
repz
push
loop
lds
or
std
xchg
dec
or
pop
push
mov
popa
mov
int
xchg
dec
xchg
inc
loope
dec
rorb
or
sbb
jae
xlat
xchg
cli
jge
sub
cmpsl
scas
and
lret
mov
cmp
push
jae
xor
test
or
jno
cmp
stos
test
dec
enter
shlb
inc
jo
jne
sahf
imul
mov
scas
in
icebp
cmp
inc
test
jb
scas
outsb
cmp
mov
inc
lahf
aam
pop
push
push
sub
nop
jle
pushf
pop
mov
mull
xor
xchg
jb
mov
mov
jl
out
xchg
add
popa
lods
ror
cmp
xchg
pop
int
mov
xchg
subl
xchg
addb
mov
and
inc
push
adc
sbb
push
not
sti
inc
lcall
jbe
push
fadds
mov
cmp
lret
jae
xor
lahf
sbb
repnz
subb
xor
mov
repz
sbb
add
dec
mov
adc
les
push
stos
push
mov
addl
les
int3
in
loopne
dec
push
cmp
sbb
jbe
pop
xor
sbb
push
out
push
or
ljmp
outsl
insb
adc
xor
sbb
jg
xchg
sub
mov
mov
in
cmc
lret
add
dec
dec
adc
cmp
xchg
xor
out
or
cmc
sbb
cmp
notl
xchg
gs
mov
fwait
out
cmpsb
daa
imul
repnz
shr
sbb
mov
sub
dec
mov
xchg
sbb
lds
leave
mov
out
sbb
lahf
cmp
sub
sbb
pop
adc
push
mov
aas
lods
cmpsl
sbb
icebp
jecxz
lds
sbb
push
pop
outsl
sub
inc
popa
jb
mov
popf
test
sbb
sbb
inc
js
jmp
mov
imul
jbe
imul
int3
lret
aad
call
movsl
push
lret
pop
lahf
mov
jp
or
inc
in
out
les
push
mov
movsb
inc
inc
test
push
insl
mov
insb
stc
mov
cld
pop
daa
adc
fwait
sub
xchg
adc
mov
mov
or
xor
mov
ret
ljmp
pop
xchg
aaa
and
mov
lds
cli
lods
leave
insb
out
std
inc
outsb
in
cwtl
cmpsb
fmuls
dec
jno
xor
mov
sbb
je
in
sub
mov
lock
dec
sbb
jmp
and
sub
pop
xchg
and
push
xchg
cwtl
mov
bound
lds
in
cmp
in
and
sbb
stos
mov
xchg
outsb
xchg
mov
or
xor
jge
lcall
cli
divb
add
mov
daa
push
sbb
add
insl
out
bound
mov
lods
push
flds
xchg
pop
dec
iret
cmpsb
xor
mov
stc
and
sahf
cmp
push
cmp
mov
into
and
mov
out
imul
lock
aad
sti
xor
adc
mov
xor
bound
rolb
repz
xchg
pop
mov
in
cmpsb
les
jmp
jge
cmpsb
iret
xlat
inc
cltd
xor
loope
and
push
pop
lods
cli
adc
movsl
add
xchg
mov
sbb
xchg
push
sbb
jecxz
cmp
pop
lea
sbb
fadd
repz
pop
mov
fwait
jmp
imul
fnstcw
popa
lds
sahf
or
inc
lea
in
insl
cmpsl
adc
icebp
fisubs
mov
cld
sahf
mov
ret
icebp
ficomps
pop
cltd
scas
push
imulb
sbb
data16
mov
ret
int3
in
data16
pop
mov
jnp
add
push
clc
shr
sbb
mov
lods
xchg
xor
ficomps
fs
sbb
aam
pushf
jmp
into
fnsave
repnz
sub
and
or
mov
into
mov
pop
sub
cmp
cli
sub
push
adc
sub
enter
adc
mov
jmp
adc
in
xchg
dec
aam
js
fxch
xchg
push
adc
sub
xlat
xchg
loopne
lret
enter
mov
pop
and
repnz
cltd
or
jno
ja
dec
orl
movsb
adc
jne
cmp
dec
stos
out
test
xor
sar
jp
pop
adc
or
push
int
fistpl
cltd
mov
and
jnp
jp
dec
or
test
mov
push
mov
sub
rclb
mov
movsb
xchg
pop
in
cld
cmp
cmp
insb
les
pop
leave
pop
pop
and
mov
rclb
aas
mov
int
stc
lods
fsubl
popf
mov
das
iret
lock
mov
mov
sub
jmp
stc
cmc
insb
cs
rolb
inc
je
and
into
mov
dec
rcrl
sbb
lret
inc
lcall
jno
mov
mov
sub
js
orb
mov
mov
mov
push
outsl
lock
mov
repz
jns
pop
pop
cmc
mov
adc
mov
stos
int3
pop
cmp
bound
lahf
sbb
iret
repnz
push
fisubs
pop
xlat
lods
and
fcomps
cltd
stos
or
in
je
mov
mov
add
adc
aas
xor
xchg
je
mov
push
ss
jg
pop
pop
and
adc
xchg
test
scas
fsubs
aas
mov
cmc
inc
ljmp
cltd
pop
mulb
pop
ja
clc
lahf
pop
cmc
mov
dec
add
inc
mov
test
mov
or
sbb
push
mov
pop
push
sub
push
push
push
not
sbb
inc
int
xor
call
sbb
addr16
test
pop
insb
stos
mov
mov
negl
pushf
sub
push
mov
add
mov
pop
imul
test
xchg
mov
in
or
mov
fistpl
mov
lcall
movsb
fdivrs
jmp
aaa
insl
push
stos
clc
cmpsl
leave
push
push
imul
add
and
in
xchg
andb
pop
push
mov
lahf
mov
test
loop
ja
push
bound
sbbl
daa
ja
mov
adc
in
mov
test
jnp
out
pop
dec
jo
lcall
loopne
inc
mov
rcll
mov
fs
push
jp
mov
outsl
and
imul
clc
add
in
and
mov
popf
pop
or
pushf
mulb
icebp
add
add
int
mov
scas
out
dec
iret
jmp
aad
mov
and
dec
add
pusha
adc
and
stc
mov
add
pop
ljmp
insl
inc
push
cmp
sbb
xchg
and
in
out
fwait
loop
pushl
xor
sbb
pop
xor
out
nop
sbb
xor
sarb
xchg
stos
jmp
ja
aam
fistps
mov
xor
jnp
call
mov
mov
mov
imul
cmp
xchg
cmp
filds
push
out
or
push
stc
popa
aaa
jne
push
sbb
mov
mov
jmp
test
ds
mov
mov
push
or
clc
sub
mov
cmp
jo
ret
movlhps
dec
push
adc
btc
and
hlt
mov
clc
adc
fwait
pop
lods
out
rorl
adc
jae
jecxz
xchg
mov
imul
sub
inc
and
xchg
mov
scas
clc
in
inc
loope
mov
int3
mov
addr16
jne
imul
lds
in
cmp
xchg
push
and
call
mov
fwait
sbb
mov
pushf
xor
into
pop
mov
xor
imul
movsb
pushf
cld
mov
fwait
outsl
cmp
mov
cwtl
xor
mov
xor
mov
iret
xor
sbb
and
repz
test
das
add
xchg
sbb
test
pop
pop
lret
pop
shlb
inc
cmpsb
jae
mov
cltd
inc
push
jns
xchg
insb
daa
or
mov
pop
pushf
mov
xchg
fstl
mov
lret
push
divb
pop
addr16
iret
sbb
push
popl
test
mov
cwtl
andb
cmp
jmp
cltd
sub
test
pop
or
cmpb
xchg
scas
mov
repz
inc
mov
and
jb
mov
push
fdiv
hlt
xchg
or
mov
xchg
jbe
push
xchg
scas
or
mov
mov
push
popa
jg
fcom
cmpsb
inc
inc
inc
aad
jmp
xchg
out
out
cltd
mov
pop
add
subl
fisubl
fisttpl
mov
mov
cli
push
outsl
popf
das
daa
xchg
mov
mov
mov
xchg
movsl
xor
or
clc
fs
pop
je
add
cltd
roll
cs
or
fldenv
push
jmp
inc
movsl
bt
cli
rclb
xor
pop
jle
cmpsb
sub
mov
test
movsl
pop
mov
mov
mov
mov
lcall
std
dec
int
faddl
push
mov
push
and
jle
mov
jno
inc
std
movsb
cmp
mov
fsubs
mov
push
pop
mov
dec
aam
mov
sub
lret
and
add
or
movsb
fwait
cmc
fcomi
sub
lcall
xchg
mov
cmp
adc
test
cmc
ret
ljmp
cmp
in
stc
imul
xor
dec
subb
cltd
adc
mov
dec
notb
mov
push
jae
pop
out
movsb
sbb
scas
xor
loop
fidivs
int
and
inc
pop
mov
or
dec
lea
loop
hlt
pop
xor
xor
lock
add
push
xchg
jmp
inc
notl
xchg
or
out
sbb
jno
cmp
inc
lock
stos
cmc
cmpsb
sbb
cmp
icebp
shl
loope
mov
test
cltd
jnp
push
inc
out
sub
add
in
lret
mov
mov
push
shrl
mov
ja
daa
cmc
and
mov
lcall
push
imull
dec
rcrl
sahf
lcall
outsl
pop
mov
pop
pop
mov
inc
push
adc
in
inc
int3
inc
cmp
cmp
mov
fisubs
dec
aad
pop
nop
dec
test
mov
xchg
xchg
mov
repnz
jecxz
mov
mov
inc
inc
out
adc
cmpsb
cli
and
notl
and
pop
mov
ror
xchg
stos
cld
idiv
xor
sarb
fsubrs
push
mov
mov
dec
dec
dec
mov
push
and
mov
mov
xchg
fsubrl
mov
jae
inc
cltd
in
enter
popf
push
cmp
xor
in
sub
in
mov
out
lahf
lret
cmp
inc
mov
fiaddl
leave
mov
fdivrp
movsl
pop
repnz
popf
pop
lock
dec
das
faddl
mov
sbb
pop
add
popf
idivb
and
cs
ljmp
add
hlt
or
out
imulb
push
dec
lahf
pop
out
mul
add
mov
lock
jp
mov
push
pop
shll
es
sub
lods
or
xor
dec
fidivs
cmp
std
mov
cmc
pop
in
cwtl
int
add
cltd
fs
aad
outsb
int
jae
mov
xchg
fwait
push
cmp
js
sub
out
cmp
mov
mov
repnz
mov
in
mov
and
into
xchg
data16
mov
or
and
or
mov
gs
add
lahf
sub
fisubl
mov
or
adc
mov
repz
aad
psubd
mov
inc
and
ds
stc
dec
outsl
cmovnp
nop
sahf
fwait
pop
inc
ja
inc
lock
fiaddl
mov
shll
and
pop
jns
or
sti
fcomip
sbb
daa
call
jbe
nop
iret
and
mov
ljmp
in
push
mov
sbb
insb
add
pop
add
xchg
mov
xchg
xchg
pop
iret
jne
imul
loop
nop
xchg
fcomps
or
or
arpl
cmp
call
je
and
in
or
cld
cmpsl
aam
jg
inc
or
xor
loopne
fmull
jge
in
pop
push
fwait
popf
movsb
cmp
in
js
xchg
dec
les
cltd
movsl
rclb
bound
mov
pop
mov
xor
mov
lods
push
mov
mov
jge
aas
cmc
add
test
in
mov
push
fisttpl
cmp
aad
and
jmp
imul
cmp
xchg
adc
call
push
stc
or
jge
cmc
and
add
push
push
push
xor
mov
dec
movsb
or
addl
xor
lds
add
shrl
xchg
outsb
pushf
and
sarl
cmp
nop
jecxz
dec
jb
ficomps
cltd
sbb
mov
mov
adc
sub
sub
ret
push
mov
jne
lret
fildll
sub
les
aas
cwtl
jbe
sub
aam
nop
cltd
inc
mov
xchg
mov
xor
xchg
outsb
adc
sbb
jne
mov
mov
inc
lcall
fnstenv
mov
pushf
jmp
cwtl
into
js
or
jmp
and
ja
in
insb
ss
or
inc
pop
and
into
xor
mov
or
cwtl
pusha
and
lods
loopne
push
jo
pop
mov
test
sub
es
data16
xchg
push
jg
jecxz
lock
cmpsb
sti
mov
lods
arpl
repz
in
sub
xchg
js
jnp
lods
adc
stc
int3
scas
dec
cmc
jge
mov
jb
or
add
aam
mov
test
adc
ja
jns
pop
nop
or
pop
mov
mov
lock
mov
cmp
pusha
movsl
insl
popf
push
mov
xor
lcall
pop
test
popa
ret
je
test
xchg
jno
out
sbb
or
jno
int
inc
mov
cld
shll
cld
jae
mov
hlt
sbb
jge
push
and
sti
ret
shlb
push
or
jecxz
ffree
adc
lods
add
sbb
or
push
add
xor
push
push
movsl
shll
mov
leave
push
sub
stos
cmp
sbb
outsl
jne
and
inc
or
cwtl
fisttpl
fistps
cmp
push
mov
in
add
pusha
xchg
test
stos
rcr
cmpsl
in
xor
nop
xchg
cwtl
or
movsl
sbb
add
loop
sbb
fldt
push
das
das
jge
stc
mov
push
pusha
sub
dec
sbb
jge
loopne
paddsb
fistl
out
pop
adc
iret
push
xchg
mov
lds
ljmp
test
xor
outsl
jno
outsb
decb
mov
out
and
mov
leave
xchg
roll
adc
into
mov
sub
into
cmpsb
mov
xor
add
js
jae
jp
add
hlt
add
xchg
mov
jns
push
sti
push
sbb
mov
fistl
js
push
leave
pop
push
jl
sbb
xchg
stos
push
mov
ljmp
ds
lret
push
test
insb
popf
popf
imul
cmp
dec
out
xchg
mov
mov
adc
jb
jecxz
inc
jne
or
push
sbb
cmpsl
cmp
nop
mov
lea
cmc
jo
call
enter
dec
sbb
arpl
xor
in
or
cmp
test
push
icebp
sahf
stos
sub
daa
testb
insl
jle
in
mov
mov
pop
rol
movsl
test
push
outsl
std
std
jl
pusha
lahf
xchg
xor
lock
dec
in
sub
push
inc
ss
lret
sbb
push
mov
fucomp
mov
jno
aad
cmp
mov
sbb
stc
jmp
pushf
mov
xor
inc
pop
sarb
cli
or
dec
popf
mov
lahf
pop
data16
mov
and
movlps
mov
mov
add
add
test
jns
and
ret
mov
push
sub
rorb
movsb
or
xchg
sub
push
mov
or
pop
xchg
je
int
in
jbe
bound
cmp
mov
mov
fwait
inc
es
and
mov
inc
adc
push
aam
out
pop
pop
ljmp
aad
or
daa
movsb
fcom
fs
imul
mov
cld
in
mov
push
mov
shlb
fisubrl
jmp
cmpsb
fwait
xchg
jo
iret
xchg
je
pop
xchg
sbb
mov
ret
xor
or
scas
push
mov
push
es
or
add
push
sbb
pop
jnp
das
mov
icebp
cmp
mov
daa
inc
xor
mov
scas
divb
mov
cld
and
sbb
lcall
into
sbb
dec
xchg
push
push
mov
mov
jmp
and
mov
lods
in
push
out
or
fsubs
andb
outsb
dec
bound
and
sti
shll
sbb
cld
int3
pop
inc
mov
mov
cmp
add
dec
and
sub
dec
and
push
xor
stos
xor
xchg
sbb
insb
movsl
adc
and
jns
addr16
sbb
shl
movsb
sub
or
sbbl
pop
push
mov
xor
jns,pn
imul
in
adc
push
aad
jns
jecxz
inc
jb
jno
dec
outsl
bound
je
add
popa
push
push
mov
mov
add
lds
xchg
add
pop
jcxz
inc
push
in
xchg
call
sbb
andl
movsl
jno
pop
pusha
jmp
sbbb
pusha
lods
dec
call
inc
dec
adc
shrb
ficompl
repz
sbb
lds
push
shrd
xor
mov
sahf
fwait
mov
mov
mov
xchg
mov
and
push
mov
xor
jmp
jne
loop
into
aas
xchg
lods
psrld
pop
pop
cmc
sub
jns
fisubl
inc
mov
cli
push
loope
mulb
and
cmp
push
shll
mov
or
and
adc
mov
enter
jecxz
in
clc
cltd
inc
in
mov
pop
cmp
add
lods
mov
sub
mov
sub
andb
inc
mov
lods
movl
sahf
push
mov
and
mov
pusha
out
inc
pop
adc
ja
loope
out
xchg
sub
dec
dec
mov
out
cmpsb
fwait
jb
cs
lea
or
test
fwait
dec
dec
fildl
cli
pop
in
cli
es
inc
icebp
inc
leave
push
sti
repnz
mov
movsb
inc
lret
cmpsb
lahf
inc
daa
popf
inc
arpl
int3
ja
inc
mov
adc
pop
bound
jmp
fstpt
and
adc
ljmp
cmc
pop
sub
faddl
push
aas
pop
cmpsb
shll
adc
fadd
xchg
mov
ljmp
out
cmp
add
cmpsl
imul
fisttps
outsb
in
adc
xorb
xchg
ss
mov
mov
mov
clc
ds
fildl
dec
add
mov
pop
sbb
jp
and
mov
sbb
stos
inc
repz
decb
and
adc
sbb
cld
mov
mov
repz
add
ret
jb
insb
inc
shll
jl
sub
hlt
cmp
push
pop
xchg
sub
and
mov
outsb
xor
and
push
scas
inc
fucomip
enter
int
mov
test
pop
xchg
add
mov
sahf
sbb
or
outsl
test
in
out
or
cmp
cmc
cmc
xor
test
mov
rep
push
jmp
xchg
rcrl
jb
push
sarl
in
mov
sbb
push
jns
push
adc
cli
jae
adc
or
arpl
out
sbb
ljmp
imul
push
loop
ljmp
out
mov
sub
movsb
daa
add
aad
pushf
lock
popf
dec
fsubl
sbb
dec
les
stos
pusha
jo
pop
int
test
pop
gs
xchg
cmp
xor
adc
mov
push
sub
mov
dec
adc
add
sub
pop
jmp
ja
ret
mov
addr16
fdivl
cwtl
xchg
push
ss
xchg
int
inc
mov
and
insb
and
dec
jb
das
cmp
mov
dec
out
jecxz
or
cwtl
ret
sub
and
out
jae
cs
lea
scas
bound
out
sahf
cltd
call
ret
jne
test
xchg
and
pop
scas
mov
hlt
sub
ss
sub
ret
repnz
sbb
dec
or
sbb
cmp
fstps
push
inc
pop
pop
inc
stos
out
or
mov
dec
sbb
mov
out
push
pushf
cmp
stos
sub
pop
lret
mov
and
inc
es
mov
jge
mov
sub
pop
popa
and
sbb
cwtl
mov
push
mov
cmp
xchg
mov
shlb
sub
aaa
xor
out
and
adc
test
and
push
ja
stos
enter
jns
mov
shl
pop
cs
call
sbb
mov
pop
jge
clc
jecxz
dec
inc
add
sahf
fisubl
pop
adc
cmc
pop
int
lret
insb
fcmovnb
xor
pop
popf
add
movswl
sti
imul
sub
iret
test
test
mov
add
sub
push
sub
and
push
pop
imul
xor
cltd
movsb
js
add
xlat
mov
movsb
popa
mov
add
outsl
xchg
mov
xchg
test
leave
mov
imul
mov
xor
mov
and
test
mov
test
ds
test
leave
push
lods
push
push
cwtl
lock
or
dec
data16
loop
adcl
leave
lret
aad
or
push
icebp
rclb
sub
dec
js
jl
add
pop
icebp
imulb
das
out
cmpsb
xor
mov
out
inc
stos
shr
cli
mov
sbb
shll
adc
sbb
inc
jecxz
jnp
mov
dec
pop
movhlps
adc
jmp
mov
add
push
test
mov
cmpsl
sbb
jmp
mov
lcall
mov
add
xchg
mov
sbb
in
and
sub
sub
sbb
stc
sbb
idivb
icebp
pushf
sbb
and
xor
cmp
faddp
lea
pop
pop
and
ret
fwait
mov
in
jle
test
incl
arpl
push
test
xchg
testl
push
call
sbb
lods
add
xrelease
push
xchg
mov
shll
hlt
jl
jl
test
repnz
mov
cmp
daa
jns
push
sbb
dec
push
cmp
stc
sbb
daa
sahf
push
stos
or
jp
xchg
adc
mov
icebp
or
xor
lds
rclb
sbbb
stc
pop
inc
lcall
pop
push
in
andb
push
sbb
and
fs
roll
jbe
das
ror
out
icebp
push
test
test
mov
icebp
lret
ljmp
out
pop
or
and
jmp
pushf
push
repz
call
and
mov
mov
mov
push
into
mov
sub
xchg
or
jecxz
push
sub
push
jmp
xchg
je
nop
dec
mov
mov
pop
jne
mov
lds
test
add
stos
scas
fadd
sahf
cmp
mov
daa
cmpsl
mov
iret
mov
mov
inc
inc
xchg
lods
xrelease
xchg
fldt
out
dec
xchg
rclb
pop
test
or
mov
jmp
xchg
in
inc
xchg
dec
popa
dec
insb
movsl
lret
push
dec
cltd
cmp
push
mov
add
push
scas
add
loope
pop
and
jmp
and
mov
pop
add
inc
push
adc
jbe
inc
aad
shr
add
cltd
test
dec
cld
repz
cld
ret
jno
mulb
cmp
repz
fs
jno
sbb
outsb
pop
mov
bound
lock
sbb
movb
jmp
jns
lret
pop
loopne
into
imul
jmp
push
jecxz
stc
pop
cmp
movsl
dec
push
add
dec
pop
adc
push
or
mov
movsl
push
subl
fdivl
jno
out
xchg
mov
aad
push
inc
xchg
pop
mov
and
stc
adc
and
push
pushf
cmp
int
adcl
mov
jb
mov
adc
data16
rolb
fisubrl
in
cmc
jmp
lods
sbb
mov
repnz
push
push
cmp
clc
loopne
mov
outsb
loope
xlat
out
and
pushl
cmpsb
mov
cwtl
das
mov
fxch
fsubrl
mov
cmp
mov
or
push
lock
repz
lds
movsl
in
sub
add
jnp
adc
push
adc
test
out
int3
pop
jnp
adc
and
hlt
mov
ja
cmpsb
loope
xlat
mov
in
loope
fisttps
mov
in
leave
push
repz
dec
mov
cmc
sbb
repnz
je
out
pause
jnp
sub
je
maskmovq
testl
dec
push
je
popf
dec
sbb
xchg
shr
pop
cmpsb
popf
sti
imul
ret
imul
adc
dec
jno
jne
in
test
stc
push
cmp
xchg
insb
out
sub
mov
pop
xchg
aaa
aas
sbb
jno
pop
shl
loopne
xchg
fwait
stos
es
ret
sub
mov
xchg
out
xchg
nop
imul
fmull
cmp
inc
xchg
ja
int3
loopne
testl
mov
clc
dec
sub
sbb
add
in
add
sub
jns
ja
test
mov
mov
sub
mov
repnz
dec
out
aad
jmp
sbb
xor
arpl
pop
cmp
sarl
sbb
xchg
lods
sbb
stos
xchg
or
add
lret
xor
je
popf
fwait
pop
and
push
sbb
xchg
mov
fs
sub
in
dec
nop
pop
xor
popa
mov
mov
jp
pop
leave
popf
test
addr16
jmp
inc
push
ret
scas
arpl
movsl
xor
in
out
loope
sub
int
lock
fsubs
pop
call
push
gs
mov
lock
fstpt
outsl
pop
insl
pop
sbb
fs
cmp
lods
or
outsb
lcall
in
mov
push
rcrl
and
ficoms
mov
dec
add
xchg
mov
dec
ljmp
mov
jl
int
mov
mov
xchg
or
jnp
sub
push
push
mov
jns
dec
test
jl
imul
dec
and
loope
out
subb
jnp
pop
and
push
in
jge
fsubl
imul
or
movsl
dec
lods
std
jnp
dec
dec
stos
mov
in
pop
mov
pop
mov
dec
lods
fwait
sbb
mov
cmp
stos
out
cmpl
inc
mov
in
sbb
fimull
mov
ja
mov
inc
loopne
cmp
sahf
lahf
or
pop
rorl
adc
pop
mov
ret
xchg
dec
push
adc
lock
loop
int3
js
and
xchg
mov
sbb
ficomps
fiadds
sbb
out
aaa
xor
add
stc
decb
mov
fwait
iret
xchg
shll
stos
popw
fsts
jb
inc
cld
out
pop
push
mov
sub
pop
cmpsl
iret
pop
lahf
mov
sahf
cmp
mov
out
insl
movsl
sbb
pop
and
mov
daa
add
jo
xchg
movsl
repnz
sub
or
sub
mov
adc
push
or
mov
movsl
sahf
fucomp
push
test
nop
xchg
shll
lock
sub
insl
movb
gs
cmp
mov
adcl
mov
pop
dec
pop
add
test
data16
push
out
lods
mov
inc
call
xor
jmp
push
and
mov
in
lcall
ljmp
push
inc
inc
out
mov
movsl
gs
movsl
imul
mov
es
out
cmc
pop
xchg
lock
xchg
sbb
rcrb
adc
out
daa
lret
xchg
aaa
int3
cmp
test
gs
vmwrite
out
mov
xchg
aam
sar
cmp
sbb
mov
mov
stos
jbe
lods
mov
insl
das
push
cwtl
sahf
notl
mov
xor
mov
jnp
or
loop
fcompl
lcall
add
xorb
mov
dec
sub
inc
aas
dec
int3
sbb
js
jp
mov
scas
mov
inc
cli
frstor
stos
clc
mov
cmpsl
ret
out
out
sahf
sub
movsl
xor
movsl
andb
stc
and
mov
loopne
pop
frstor
pushf
adc
dec
test
jne
repz
inc
int
out
pop
rcll
mov
mov
les
add
mov
sahf
lock
sub
inc
and
std
mov
loop
dec
jbe
and
ror
pop
push
mov
in
push
xor
dec
fsubl
loopne
xor
and
adc
mov
pop
jbe
in
push
fwait
in
sbb
aaa
xor
shll
inc
or
push
call
lcall
outsb
test
test
dec
test
sbb
inc
mov
push
cmp
fdivrs
out
push
mov
out
imul
lock
adc
data16
dec
stc
cmpsb
mov
sbb
adc
mov
addr16
mov
into
and
cmp
andb
stos
in
or
stos
xchg
pushf
scas
push
int3
int
or
and
cmpsl
sub
mov
dec
push
push
push
ret
cli
xchg
mov
jno
push
ret
lahf
out
or
in
popf
mov
xor
inc
fidivs
mov
adc
jns
ljmp
pop
mov
repnz
scas
in
sub
in
sbb
stc
insb
aad
ret
adc
fidivrs
jmp
test
jle
xor
xor
lock
shl
pop
mov
sbb
mov
jne
or
outsb
push
popf
adc
test
push
fmull
cmp
mov
imul
aas
push
mull
inc
scas
inc
lcall
lods
push
imul
addr16
stc
mov
loope
xchg
pop
mov
sbb
loopne
shll
rclb
mov
repz
add
mov
pop
dec
andb
addb
in
mov
imul
pushf
stos
cmp
rcr
loopne
sub
and
cmp
arpl
push
and
inc
push
out
sbb
imul
sbb
push
leave
mov
shlb
cmp
shlb
add
add
xchg
daa
xchg
cli
push
adc
adc
mov
jmp
mov
aaa
xlat
sti
mov
fldl
ss
sub
cmpsl
nop
fimull
repnz
xchg
adc
loopne
mov
and
pop
addr16
aam
dec
pop
or
xchg
push
gs
lods
sbb
mov
call
push
mov
push
shlb
or
cwtl
arpl
out
pcmpeqw
ja
sbb
push
push
inc
dec
int3
aad
sbb
movsb
push
and
jge
sbb
mov
ljmp
iret
sub
hlt
mov
loopne
cmpl
loop
in
sbb
mov
mov
cmp
enter
mull
adc
xchg
and
jo
pushf
sbb
pop
push
and
outsl
sub
test
push
sub
sbb
test
or
mov
stos
stos
cltd
jo
aas
or
imul
stc
jno
mov
popf
pmaddwd
jns
imul
cs
sub
imul
hlt
adc
cmp
enter
test
and
and
outsb
mov
jb
jge
je
lahf
fwait
xor
inc
fisubs
adc
test
or
and
add
mov
das
ficomps
test
inc
ret
add
hlt
xchg
sub
cmpl
in
mov
inc
stos
imul
dec
scas
pop
cmc
dec
sbb
inc
pop
pusha
cmp
jmp
loopw
cwtl
cmpsb
hlt
push
add
jg
inc
push
mov
pop
lock
adc
push
jl
fmull
out
lcall
int3
imul
loopne
inc
inc
mov
lods
pop
mov
repz
jo
test
mov
test
and
push
mov
inc
or
push
cmpsb
repnz
cmp
or
xchg
cmp
jb
aad
sub
sub
daa
sub
out
call
sbb
cmp
push
push
fwait
xchg
dec
sbb
aad
iret
jl
dec
arpl
or
inc
stos
lock
loopne
adc
icebp
dec
dec
aad
sbb
jmp
insl
xchg
and
or
jbe
mov
mov
fsub
mov
icebp
pop
sbb
and
and
add
dec
cmp
add
les
gs
ljmp
hlt
adc
mov
sub
shlb
out
aaa
mov
repz
lahf
adc
arpl
xchg
cmp
xchg
inc
jno
cmp
inc
repnz
sub
out
lcall
enter
jmp
mov
pop
xor
sub
inc
pop
pusha
scas
cmc
mov
in
adc
xor
fwait
insb
adc
xchg
mov
cmc
in
xlat
in
inc
sub
jo
mov
popa
xlat
xchg
pop
and
hlt
xor
and
or
sbb
xchg
pop
sti
pop
add
out
mov
jno
cwtd
jbe
sbb
test
adc
int3
push
jae
ljmp
adc
sub
mov
xchg
mov
in
inc
fistpl
sbb
mov
fs
jp
mov
sbb
or
rorb
sbb
mov
aas
pop
push
loopne
mov
ret
adc
or
cmp
out
or
jle
out
mov
movsb
push
sub
stos
or
das
lock
cs
cltd
js
ljmp
inc
mov
mov
rcrl
lods
addr16
test
stc
xchg
mov
sbb
addr16
mov
sbbb
clc
push
and
dec
xlat
sbb
mov
insb
push
pop
iret
in
fstps
int3
pop
jl
and
daa
popa
scas
cld
mov
push
xchg
and
pop
rorb
mov
mov
outsl
jns
rorb
pop
mov
aam
sbb
je
push
nop
dec
or
mov
in
mov
pop
xchg
xchg
clc
push
inc
lods
push
in
mov
sub
dec
test
jmp
lock
cwtl
mov
and
in
inc
push
icebp
mov
mov
xlat
or
outsb
fdivs
shl
gs
lcall
jg
push
dec
xchg
lcall
inc
mov
mov
test
mov
and
mov
dec
push
mov
xor
pop
in
fcmovnb
pop
leave
push
add
xchg
cwtl
xchg
jne
sbb
mov
sahf
push
lock
lcall
int3
sti
scas
xchg
xor
add
das
test
add
and
jne
sbb
mulb
and
cmc
push
cmc
ffree
xor
mov
push
test
out
les
sub
mov
adc
mov
sub
insl
sarb
mov
adc
das
out
sbb
mov
pop
test
inc
sbb
fbld
dec
inc
cmp
mov
cmp
mov
ss
mov
mov
add
mov
cld
fstps
dec
hlt
das
jmp
in
or
popf
clc
mov
mov
pop
mov
int3
mov
push
outsl
mov
dec
add
adc
xor
dec
mov
rolb
dec
test
je
push
ret
pop
jne
xchg
add
das
xchg
and
jmp
imul
ja
lods
push
call
mov
sahf
mov
sub
dec
repz
and
inc
nop
mov
pop
adcb
cltd
scas
xchg
insb
mov
mov
mov
and
lret
cmpsb
push
jne
cmp
and
xor
fs
push
movsl
fnstcw
rorl
inc
jno
in
fstpt
push
out
jmp
out
xchg
call
and
adcb
or
pop
pop
or
and
in
sub
mov
or
jae
pop
xchg
es
sub
cltd
test
aad
jns
dec
and
lret
gs
push
or
ljmp
sbb
or
dec
sub
mov
leave
call
out
jns
xor
fcoms
push
push
pop
push
sarl
fisubrs
aad
pushf
lds
mov
add
jns
insl
fbld
aam
pop
cmp
repz
sbb
jmp
sub
ljmp
mov
outsb
push
dec
mov
outsl
mov
sbb
mov
or
fs
mov
aas
mov
cmp
push
or
sti
mov
inc
in
imul
xlat
and
dec
arpl
scas
add
pushf
sti
push
inc
flds
cmc
xchg
push
or
mov
jg
mov
inc
xlat
inc
ljmp
int3
jle
bound
rcll
je
data16
sub
xchg
cmp
or
push
xchg
and
sub
xor
jp
insl
icebp
jl
push
xor
or
pop
xor
out
lods
add
mov
fadds
test
add
fsts
dec
sbb
lcall
xor
and
or
out
imul
and
mov
pop
rcrb
adc
out
rorl
rorl
and
das
mov
lods
and
and
and
in
lahf
sahf
rolb
dec
test
xor
ret
mov
jae
hlt
jmp
pushl
cmp
popf
jmp
sub
mov
stc
out
push
dec
and
xchg
push
inc
negl
out
leave
mov
loope
and
jnp
mov
pop
mov
movsb
sub
fisttpll
xchg
and
pop
and
sbb
lock
hlt
jmp
jns
mov
cmc
cmc
push
jmp
push
jmp
mov
in
push
jp
xlat
cltd
xchg
mov
jmp
mov
lret
ret
out
roll
and
mov
lock
sub
les
in
or
bound
fstpt
movl
inc
push
xlat
fldcw
mov
in
pushf
call
and
mov
inc
or
inc
in
push
out
sub
lods
rdpmc
in
scas
std
sbb
test
imul
in
adc
in
fldl
jns
pop
dec
gs
out
add
xor
enter
cmpsb
sbb
and
jae
imul
mov
xlat
loopne
and
movsb
mov
out
jbe
lea
or
xchg
add
gs
out
mov
dec
mov
int3
add
push
mov
shlb
iret
lods
push
dec
int
loop
push
xchg
pop
mov
test
call
and
iret
out
jno
pusha
cmp
into
sub
inc
clc
jnp
jae
mov
push
pop
mov
sbb
cwtl
pop
sti
rolb
push
cmp
mov
mov
jp
pop
out
mov
int3
lcall
lods
lahf
or
sbb
pop
outsb
daa
es
lret
and
xchg
fisubs
out
enter
mov
dec
inc
pop
rclb
hlt
sbb
add
pushf
pop
test
lret
aam
or
cmp
repz
lods
dec
adc
xchg
push
push
jae
mov
lock
lahf
lds
int
out
sarl
in
sbb
jno
iret
mov
in
ja
jg
xorb
sbb
mov
pop
adc
jb
lret
xchg
xchg
into
xor
insl
bound
repnz
in
into
cmp
call
in
adc
cmc
movl
fildl
adc
fnstcw
add
xor
jb
inc
lret
jge
fbld
add
dec
xor
in
shlb
and
adc
mov
orl
and
cwtl
mov
xchg
scas
dec
mov
xor
das
xchg
cmp
fidivl
push
stos
mov
clc
add
rorl
es
repnz
fistpll
pop
sti
enter
cmp
add
test
idivl
jns
mov
popf
movsb
mov
pushf
adc
cmp
inc
rorb
sahf
inc
push
fistl
ss
sub
pusha
shl
push
sbb
enter
sbb
lret
sub
cmp
cmpsb
adc
pop
scas
mov
stos
mov
jb
adcl
jb
jge
or
push
mov
outsb
push
pmulhuw
dec
addr16
mov
jp
inc
fldenv
or
xor
and
push
mov
outsb
imul
in
je
aad
inc
pop
and
jo
push
dec
in
movsl
mov
push
ret
dec
inc
inc
out
mov
movb
pushf
mov
fdivr
test
lds
mov
or
shll
push
dec
cmp
pop
adc
jecxz
push
pop
clc
sbb
stos
sti
nop
adc
mov
pop
jmp
loope
xlat
mov
int3
add
cmp
es
cmp
insl
cltd
cmc
inc
add
and
adc
xor
xchg
xor
push
sahf
mov
scas
add
add
addr16
call
imul
mov
arpl
mov
insl
dec
push
or
pushf
push
sub
mov
mov
xor
dec
and
push
push
movsb
inc
pop
lret
pop
xchg
mov
sub
std
test
scas
push
movsb
cmp
mov
outsb
pop
and
fucom
in
lcall
ljmp
hlt
sti
out
and
rorl
imull
dec
mov
sub
jae
xchg
stos
scas
sbb
mov
sbb
inc
mov
cmpsb
hlt
les
fs
aad
push
adc
sbb
mov
and
mov
xchg
push
sbb
ret
daa
push
out
jge,pt
imul
sti
fiaddl
repz
sub
inc
mov
or
in
inc
jne
imul
lcall
fimuls
lods
out
cwtl
shll
into
hlt
out
das
jae
xor
sbb
mov
subb
imul
dec
xor
insl
mov
and
cmp
xchg
pop
cmp
mov
test
je
stos
cmpsb
push
aam
sub
pop
add
out
nop
aad
mov
ss
stc
or
jae
add
xchg
mov
and
fs
add
sub
pop
xor
adc
pop
sbbl
fimuls
or
popf
fisttps
imul
mov
out
and
cmp
sahf
mov
addr16
repnz
sub
inc
dec
pcmpeqd
or
mov
sti
nop
inc
xchg
iret
jbe
pop
mov
jo
or
or
movsb
mov
sbb
push
sti
xor
lcall
ror
jno
dec
mov
enter
out
fcompl
push
dec
das
popa
push
add
cmp
testb
movq
lods
xor
jne
mov
fildl
iret
shll
pop
hlt
push
inc
jmp
dec
mov
jnp
adc
roll
jmp
test
or
repnz
outsb
add
cmp
jo
data16
mov
lcall
xchg
ss
push
cltd
movsl
sbb
and
lea
push
jmp
sub
sahf
pop
jmp
mov
and
push
mov
movsb
pop
jno
xchg
std
pushf
sub
aas
push
sbb
cs
mov
or
fisubs
xor
mov
inc
daa
lds
adc
iret
sbb
insl
and
jp
mov
filds
leave
sti
aam
pop
pop
inc
and
out
xor
lcall
mov
test
sar
lahf
cs
and
jno
fs
and
mov
in
pop
pop
fisubrs
mov
icebp
stos
pop
mov
sub
and
or
sarb
cmp
jecxz
inc
push
cmp
enter
mov
add
mov
sbb
add
or
addr16
lock
lods
daa
xor
jb
pop
mov
push
mov
mov
jmp
cmpsl
add
xchg
decl
sti
add
sbb
sbb
daa
icebp
mov
mov
lods
call
and
outsb
in
seta
xchg
gs
icebp
dec
test
in
gs
in
cmp
lahf
adc
xchg
loopne
cli
mov
cmp
inc
jnp
mov
cmp
popf
adc
mov
cmc
ja
outsb
cli
push
jbe
pusha
mov
mov
xor
add
shlb
xchg
into
imul
fs
push
sub
imul
or
add
repz
lcall
adc
pop
jl
sbb
lods
mov
iret
in
mov
jecxz
push
cs
push
ret
add
adc
push
mov
test
or
sbbb
icebp
movsb
pop
sub
add
in
pop
faddl
jle
mov
fldcw
iret
or
mov
out
jle
out
add
mov
xchg
in
mov
aam
in
shr
loopne
add
loopne
aam
push
mov
jp
push
mov
hlt
mov
push
lahf
jp
sbb
mov
les
mov
xchg
jle
shll
movsl
je
lods
mov
mov
and
jbe
pop
mov
das
into
xchg
pop
sbbl
push
outsl
mov
sbbb
orl
insb
lret
sub
pop
xchg
add
div
push
dec
sar
add
xchg
shl
cmp
pusha
sbb
ljmp
jl
mov
ds
cmpsb
push
popa
sbb
in
ljmp
mov
xchg
insl
mov
cmpsl
jne
gs
call
push
shll
stos
stos
xchg
or
sbb
fldenv
loopne
outsl
mov
mov
jl
pop
cwtl
out
std
xchg
pop
pusha
mov
kxorw
inc
mov
xchg
push
call
mov
lds
push
insl
add
out
mov
mov
ljmp
sbb
loopne
bound
jle
xchg
add
call
aaa
test
adc
jmp
jns
sbb
js
adc
cltd
sti
push
mov
outsl
imul
xor
and
fstl
cmp
fnsave
mov
into
mov
mov
cltd
or
or
jb
ret
test
dec
sub
std
arpl
hlt
aas
movsb
jecxz
ss
stos
testb
mov
adc
outsl
scas
test
and
mov
lcall
mov
aaa
cmc
pop
dec
ds
es
test
xchg
sub
aas
jns
jle
xchg
les
jl
sarb
sbb
mov
mov
inc
mov
mov
pop
mov
or
test
pop
sbb
pop
cmpsl
mov
faddp
xor
je
orb
jb
xor
test
shll
add
jle
test
add
or
gs
std
sbb
jmp
rcl
daa
fbld
test
les
lahf
test
cltd
std
jb
sub
outsb
imul
dec
shrl
ja
or
mov
ret
jno
out
loop
mov
adcl
push
jge
cltd
mov
out
inc
jo
fisttps
lahf
test
pop
jmp
sbb
adc
inc
out
fdivp
bound
out
cmpsl
mov
pop
loop
lds
iret
clc
push
popf
mov
push
pop
cli
mov
adc
push
push
mov
pop
in
cmpsl
in
inc
dec
aam
fsubrs
push
lea
repnz
lahf
sti
push
add
arpl
mov
jmp
es
pop
lods
jmp
mov
sub
mov
lret
inc
aaa
lret
cmp
std
jp
bound
dec
icebp
gs
jmp
and
jbe
push
test
sbbb
fiaddl
sub
mov
repz
mov
cmp
jbe
insl
ficompl
cmpsl
pop
mull
add
jle
jl
iret
add
shrb
sub
add
lea
rcr
lahf
pusha
push
loop
sbb
sbb
out
in
or
jg
hlt
fidivrl
adc
dec
call
sbb
inc
movsl
in
leave
dec
or
mov
and
mov
jle
xchg
ret
call
into
lahf
mov
dec
testb
mov
inc
popf
scas
sub
jmp
movsb
push
dec
push
xchg
rclb
sub
or
leave
cli
out
mulb
imul
into
fwait
sbb
mov
push
push
mov
mov
push
dec
mov
sbb
jne
repnz
int
mov
inc
inc
push
in
stos
pop
pop
xchg
cld
lahf
pop
ds
pop
clc
mov
shl
push
and
mov
cs
addr16
test
repnz
xchg
insl
out
sbb
fstl
imul
lret
add
dec
mov
mov
jg
insl
shr
sbbl
clc
or
jmp
mov
mov
push
es
pusha
and
xor
das
insb
dec
int
or
fwait
lret
sbb
xor
push
mov
fsubl
pop
pop
out
test
mov
xor
mov
je
test
jae
mov
in
dec
push
inc
cwtl
jne
jb
aad
sbb
or
dec
pushf
mov
sbb
sbb
push
mov
pop
das
in
push
jns
out
std
in
outsl
andb
cmc
fs
xchg
outsl
iret
fildll
xchg
popf
inc
mov
xor
outsl
fsubl
inc
jb
clc
mov
cmp
enter
lods
jo
xchg
inc
mov
mov
cmp
pop
shll
or
mov
lcall
popa
cmp
jl
xor
mov
ja
sbb
add
dec
inc
arpl
inc
add
pop
sub
ud0
and
in
lea
loopne
add
dec
mov
int3
dec
outsl
add
popa
js
nop
mov
xchg
cli
or
lods
add
mov
inc
mov
and
insl
jecxz
call
sbb
mov
adc
test
xor
xchg
or
lret
jle
enter
pop
inc
ljmp
pop
mov
xchg
adc
bnd
aad
pop
stc
inc
cmp
xchg
mov
in
test
loope
loopne
leave
hlt
add
sub
repz
and
loope
movsl
and
adc
push
mov
sub
inc
inc
imulb
in
push
hlt
and
jns
lret
cmp
mov
or
mov
in
jns
pop
jp
xchg
fildll
xor
shrb
add
movsb
cltd
aaa
out
push
or
mov
test
push
xor
dec
repnz
and
scas
bound
sub
test
fcmovne
mov
pop
push
inc
loope
mov
nop
enter
mov
add
jecxz
addr16
xor
adc
mov
pop
lods
cmp
jge
sub
mov
push
inc
inc
mov
mov
push
std
mov
mov
add
push
sub
cltd
cs
les
sub
mov
movsl
sbb
dec
mov
push
in
pop
push
iret
pop
inc
mov
icebp
iret
jnp
enter
xchg
lret
lret
imul
movsl
pop
lods
movsb
addr16
or
les
jbe
mov
xchg
sub
out
jae
mov
xchg
cmp
enter
push
inc
fdivrs
mov
shrb
sub
mov
push
jl
pop
and
addr16
mov
cltd
popf
push
subb
push
jnp
xchg
sahf
mov
mov
lock
push
stc
lods
push
cmp
cmp
outsb
lock
stc
mov
mov
xor
repnz
aad
jp
jp
cmp
cmp
or
xlat
add
lret
dec
sub
and
cmp
mov
icebp
adc
jmp
repnz
popf
xchg
dec
mov
dec
fstps
cmc
jns
loop
sub
mov
mov
test
fcmovne
fisttpll
xchg
adc
sub
cmp
ficoms
dec
pop
sti
inc
idiv
mov
imul
in
loop
clc
mov
fisttpl
pop
frstor
sub
cmp
call
mov
int
shl
lret
lret
cmp
push
ret
aam
push
add
gs
cmp
dec
sbb
idiv
int
or
imul
lea
lock
add
push
add
sti
push
mov
loope
jmp
std
and
fsubrl
sbb
or
fbstp
mov
lds
or
jmp
jae
out
pop
push
inc
mov
or
fistl
in
lcall
mov
inc
test
lock
fdivs
mov
push
xlat
inc
in
xor
fdivr
sbb
mov
jmp
clc
add
mov
push
call
push
daa
push
repz
push
call
outsl
cmp
push
xor
aaa
adc
mov
fs
out
and
fldt
cmp
push
jp
xchg
aad
arpl
out
mov
hlt
xchg
and
jb
popf
in
jle
and
fcomip
mov
in
icebp
add
adc
add
lahf
repnz
xor
xor
sbb
mov
enter
mov
je
dec
ljmp
sub
bound
sub
in
sub
fistpll
jge
mov
lret
js
mov
lods
test
lahf
add
shlb
sub
out
aam
mov
stos
or
adc
daa
ljmp
jne
ljmp
inc
and
mov
out
test
cltd
jl
pop
mov
insl
xor
xor
test
call
push
pop
insl
mov
out
lahf
dec
dec
rorb
xchg
pop
push
insl
imulb
into
add
xchg
aam
test
jno
loope
xor
lret
push
inc
stos
lahf
ficoms
xchg
daa
out
sbb
jne
imull
test
out
enter
add
imul
jb
fdivrl
cmpsb
mov
lock
lcall
xor
testb
adc
dec
cli
test
sbb
ds
adc
scas
pop
test
mov
dec
mov
sub
mov
cs
ret
gs
data16
je
mov
fcmovbe
call
and
lds
ljmp
jno
mov
mov
add
daa
mov
fmulp
push
jb
jg
out
repnz
pop
mov
mov
add
leave
idivb
cmp
inc
mov
cmc
mov
xchg
je
test
dec
pushf
aas
or
inc
or
cmp
in
or
mov
sbb
imul
movsl
pop
out
and
add
and
in
lds
gs
sub
lret
mov
mov
mov
shr
or
mov
in
mov
ss
dec
leave
push
jecxz
xchg
cmp
fwait
call
mov
jb
push
lods
roll
lods
out
jle
adc
and
ss
fs
shll
mov
pop
ja
push
das
sti
push
data16
and
jecxz
dec
popf
popf
pop
push
sbb
fcoml
xor
scas
and
pop
movsl
dec
inc
mov
cltd
add
fbstp
mov
mov
dec
jge
add
mov
push
cmpsb
into
mov
sbb
scas
imul
mov
leave
sub
mov
inc
mov
popf
icebp
mov
pop
les
cmp
in
and
lods
and
dec
sub
movsb
bound
sbb
add
ljmp
mov
cs
inc
xchg
mov
dec
adc
daa
mov
movsb
je
mov
dec
cwtl
cmp
out
lods
out
mov
imul
mov
ret
mov
roll
and
lea
push
add
icebp
inc
imul
movsb
sub
pop
sub
xor
xchg
ret
and
mov
dec
mov
pop
into
mov
lcall
push
ret
popa
popf
jnp
lret
lods
pushf
pop
lods
lret
icebp
sub
and
addl
test
sbb
mov
cmp
jbe
pop
inc
adc
jbe
jb
int3
xor
jp
sahf
leave
bnd
ret
hlt
push
sbb
xchg
adc
xchg
jmp
and
mov
bound
pop
out
pop
nop
jns
ljmp
ss
jmp
pop
leave
es
stos
loop
lahf
dec
xchg
in
sbb
xor
xor
fisttpll
mov
aaa
test
and
xorl
lcall
fwait
push
pop
cmc
cli
lret
sub
enter
push
outsl
fsubs
push
cmpsl
jmp
mov
xchg
push
imul
or
fistpl
outsb
imul
roll
jae
push
sub
adc
loope
jnp
or
jno
xchg
sbb
push
mov
inc
addr16
mov
cmp
arpl
sub
mov
cld
push
cmp
jbe
cmpsl
dec
pop
jb
sbb
or
ds
shlb
add
push
cmpsb
mov
dec
sub
hlt
or
mov
cmpsb
and
out
inc
adc
mov
or
inc
jp
lahf
stos
sbb
push
push
push
ffree
inc
inc
pop
sub
mov
xchg
lods
lret
push
lock
mov
jmp
mov
addr16
xor
push
ds
fsts
inc
mov
mov
sbb
add
pop
mov
mov
dec
mov
out
xor
and
hlt
insl
jle
ffree
mov
cmpsl
cmp
leave
bound
sbb
movsl
ss
cmpl
cmc
scas
mov
or
push
xchg
xchg
cli
lds
and
mov
jmp
adc
in
fnstenv
scas
mov
imul
inc
mov
les
push
dec
sbb
adc
xlat
fcoms
cli
adcl
mov
sbb
mov
mov
jns
push
xor
fs
enter
and
jge
loop
loopne
es
inc
jl
mov
subb
cs
dec
push
cmp
popa
ljmp
test
add
push
out
push
or
movsb
imul
or
inc
aaa
int
sbb
ljmp
mov
ss
dec
mov
fcoml
mov
push
mov
dec
fcoml
arpl
and
sbb
mov
mov
js
ds
pop
push
mov
push
scas
mov
mov
lcall
and
or
jl
cmp
stos
push
icebp
sbb
in
outsl
inc
sbb
es
or
xor
repnz
or
jecxz
sbb
jnp
jmp
rcl
pop
sbb
or
aaa
test
jno
rcrl
stos
ret
aas
out
or
cmpsl
cmpsb
in
icebp
jl
lret
pop
push
es
and
sbb
add
sbb
call
movsb
sub
lds
xchg
mov
icebp
or
mov
fcoms
cmp
add
mov
aam
mov
repnz
add
mov
rcr
push
sub
call
addr16
jne
mov
ljmp
cmp
mov
jb
pop
pop
or
insl
and
lock
sbb
push
in
mov
mov
inc
pop
out
in
mov
add
mov
fs
inc
icebp
repz
jge
pop
pop
sub
lds
jmp
cmp
js
xchg
mov
sub
and
push
out
cli
in
filds
cmpsb
jns
cmp
out
in
mov
jns
jmp
jnp
or
data16
insb
pop
mov
and
sub
and
bound
sbb
lds
mov
sbb
jmp
in
sub
add
imul
into
mov
fbld
testb
cvttps2pi
das
and
sbb
push
xorb
insb
mov
es
inc
add
mov
mov
lahf
imull
inc
push
imul
push
mov
jo
subb
rol
pop
dec
stos
lea
aad
loopne
sbb
cwtl
test
std
jae
repnz
xchg
in
or
in
push
sub
cmp
xchg
loope
jae
lret
dec
filds
dec
shll
in
clc
sub
jmp
mov
in
hlt
arpl
cltd
sti
mov
in
sbb
xor
mov
cmpsb
bound
pop
mov
adc
sahf
push
test
hlt
ret
jnp
mov
cmp
push
pop
jecxz
loope
scas
and
clc
sbb
add
cli
add
and
dec
and
or
imul
lds
fistps
or
popa
fs
fidivs
pop
in
lcall
pop
cmp
stos
shl
jecxz
dec
push
add
in
aad
addb
sarb
jno
sbb
sti
dec
lods
stos
inc
pushf
mov
loop
loop
mov
xor
jge
addl
add
lock
and
movsl
imul
push
sahf
cmpsb
pop
sbb
fisttpll
push
stc
aad
mov
pushf
inc
push
into
jle
inc
jne
les
sub
sti
push
push
mov
mov
and
push
shr
inc
arpl
arpl
test
sbb
push
jmp
int3
add
pop
pop
push
mov
adc
fidivrl
sbb
push
or
or
jg
dec
fsubrs
mov
cmc
out
mov
lea
push
cmp
mov
subl
jne
movsb
imul
adc
test
pop
mov
loope
cmp
mov
inc
mov
sbb
sbb
shlb
icebp
inc
sub
enter
in
js
cld
adc
adcl
in
dec
in
pop
loopne
sub
xor
pop
mov
movsb
push
mov
test
push
and
pop
addr16
add
jnp
into
inc
decl
pop
pop
inc
fstl
xchg
sub
pop
adc
cld
add
add
cmpsl
lret
ficomps
push
insl
mov
fidivrs
jbe
into
scas
in
stc
mov
ljmp
xchg
je
mov
or
cmp
aad
adc
dec
or
cmc
arpl
je
xchg
mov
popa
enter
test
push
out
rorb
roll
push
sbb
popa
mov
add
test
mov
sbb
adc
add
mov
mov
jge
pop
je
into
idivb
pop
push
sub
les
pushf
mov
sub
cld
leave
sub
repnz
stos
stc
lret
shll
and
sub
or
pop
sbb
adc
stos
in
or
cmpsb
mov
jbe
xchg
insb
sub
push
mov
shr
lea
mov
jns
and
pop
mov
adcb
in
insb
dec
hlt
cmc
mov
out
push
sbb
xchg
sti
jl
and
inc
icebp
mov
mov
xchg
pop
inc
clc
cld
push
xchg
push
mov
jne
ds
fsubs
call
loope
and
cltd
stc
sbb
imul
out
jb
jge
push
fwait
stos
fcmovnu
aam
out
arpl
mov
mov
and
jne
add
jl
in
fistps
imul
cli
rclb
int
mov
adc
cs
jnp
jmp
mov
jae
sbb
inc
in
mov
mov
testb
filds
movsb
inc
jae
lahf
sbb
shrb
in
cmpsb
adc
je
sub
icebp
insl
push
dec
sbb
sahf
xor
sub
mov
cmp
dec
push
jl
loop
dec
and
sti
xchg
mov
pusha
xor
ret
jg
inc
pop
mov
lret
mov
test
sub
sti
int
push
lahf
out
xor
add
mov
jo
sub
mov
and
lds
xchg
jle
push
and
shrl
mov
inc
jnp
sbb
in
idivb
scas
stos
shrb
repnz
js
mov
ret
sbb
cmpsb
mov
movsb
cli
sbb
repz
mov
xchg
jbe
test
negl
out
sbb
mov
or
sti
out
cmp
jno
and
or
xor
add
mov
test
cmpsl
and
jp
push
loop
mov
xchg
inc
ret
sarb
insb
cmp
and
xor
hlt
push
pop
cmp
push
cmpsl
cmpsl
inc
sbbl
pop
flds
out
mov
pushf
stos
aas
dec
inc
xor
movsb
mov
mov
movsb
mov
imul
pop
inc
cmp
lret
cmc
and
cmp
stc
and
dec
movsl
fldt
in
sub
adc
adc
imul
addr16
xchg
test
adc
fistpl
cmp
subl
jl
ret
sub
imul
add
mov
mov
dec
lcall
dec
mov
add
nop
outsl
mov
inc
or
pushf
pop
push
mov
or
test
lods
adc
pop
adc
aaa
fisttpll
adc
pop
ljmp
push
repz
mov
in
pop
push
mov
add
inc
daa
adcl
mov
aad
sbb
lret
mov
xchg
mov
push
mov
sbb
rcrb
xchg
lock
xchg
xchg
and
xlat
cmp
push
mov
test
and
in
std
outsl
out
outsl
cmp
mov
int
loope
fisttpl
int
lea
outsb
fdivl
inc
add
sub
mov
inc
popf
and
xor
xchg
and
test
fs
sbb
mov
out
test
mov
fnstsw
pop
sbb
test
bnd
divl
mov
push
pop
mov
shr
pop
pusha
adc
add
push
test
movsl
cmpsl
test
add
xorl
cmpsl
out
test
mov
loop
sbb
jecxz
sbb
loopne
pop
mov
insl
mov
cmp
lcall
cltd
mov
mov
gs
jle
inc
mov
in
lahf
in
push
sbb
cmp
das
adc
rcl
in
dec
loope
and
and
clc
mov
push
ljmp
dec
xchg
iret
jmp
call
notb
push
ret
xchg
repnz
push
loop
les
sbb
inc
adc
call
sti
sbb
adc
dec
jmp
sti
dec
ret
daa
lods
pop
and
loope
popf
pop
std
ret
xlat
rcll
mov
inc
stc
sbb
inc
pusha
loopne
and
jge
out
cmpsl
sti
rolb
xor
pop
ljmp
int3
lcall
enter
sub
push
lahf
or
mov
add
mov
pushf
mov
test
hlt
pop
fs
cmp
mov
inc
mov
jge
rep
push
push
sbb
pusha
pusha
mov
or
mov
xchg
xchg
cmpsb
xor
imul
in
shlb
jge
dec
inc
sbb
and
test
fld
jb
mov
push
jnp
jl
jbe
je
cltd
xchg
dec
in
cmc
or
fisubrs
les
adc
in
xchg
pop
pop
daa
dec
mov
pop
adc
mov
out
cmp
or
jne
popf
jl
mov
lahf
fdivrp
push
mov
leave
cld
xchg
addb
in
push
cmpsb
lock
dec
lock
push
aad
mov
mov
cmp
cmp
sub
fbld
test
ss
mov
and
mov
mov
out
push
stos
adc
test
aad
xchg
and
xchg
add
insb
inc
jmp
cmpsb
mov
mov
dec
and
pusha
dec
inc
add
data16
sbb
js
and
inc
ret
in
xor
mov
sbb
cmp
hlt
movsb
mov
and
lret
and
roll
and
push
inc
rcrl
pop
xchg
push
xchg
mov
adc
add
sub
dec
punpckhdq
push
push
push
cmp
pop
jno
xchg
ficoms
out
mov
imul
push
inc
lcall
or
or
and
add
sti
add
or
stc
mov
daa
mov
imul
dec
add
cmp
shl
inc
in
adc
call
stc
mov
dec
sahf
or
inc
mov
push
xchg
aam
sbb
mov
insl
sbb
je
dec
pop
sbb
add
pop
cmc
mov
out
cltd
mov
sbb
dec
mov
jns
push
addr16
jmp
cwtl
shl
out
xor
jbe
mov
mov
pop
ret
rcr
das
cmp
cltd
jg
cmpsl
cmp
shr
ss
fdivr
imul
repz
sbb
xor
ds
fs
loopne
push
dec
pushf
sti
push
jle
cmc
jno
jl
xchg
jb
mov
add
push
sub
mov
mov
sahf
inc
mov
dec
push
sarb
or
xchg
nop
push
cmpsb
push
sbb
aas
pop
mov
jae
mov
outsl
cmp
sbb
mov
xchg
mov
xor
in
test
lcall
pop
ja
lea
jne
lea
sti
mov
mov
xor
cltd
loopne
pop
movsl
insb
cmp
xor
scas
fs
sbb
pushf
push
or
ss
mov
cmp
xor
aas
lock
pop
xlat
push
jle
outsb
and
js
in
mov
stos
mov
and
mov
and
in
jnp
shll
movsl
sbb
in
orl
out
lods
movsb
dec
lds
pop
xchg
add
icebp
in
mov
ljmp
jmp
out
push
pop
movsl
in
scas
repnz
adc
push
add
stos
sbb
in
fsts
inc
neg
push
pop
sahf
jmp
sbb
test
sahf
fadds
xchg
mov
lahf
test
sub
xor
movsb
shlb
cs
mov
and
mov
cld
stc
das
ret
clc
shlb
fs
xchg
xor
add
add
inc
in
mov
jle
arpl
mov
bound
psllw
inc
add
negb
xchg
testl
pop
ljmp
out
and
or
pop
add
fisubrs
jmp
xor
test
pusha
xor
xchg
dec
cmc
mov
scas
cs
cmp
movsl
ret
mov
inc
aaa
std
jbe
mov
add
sub
in
and
leave
icebp
outsl
mov
popf
jmp
fwait
enter
add
and
aam
loop
sbb
mov
lods
rclb
std
mov
shlb
dec
lds
leave
cmpsb
andb
sbb
enter
fwait
int3
repz
insl
pop
jnp
in
mov
xchg
std
insb
push
cmp
aad
push
test
mov
jge
push
shl
nop
jle
aas
pop
imul
fs
lret
rcrb
mov
clc
dec
mov
xchg
cmc
adc
push
and
divl
and
cmp
les
pop
dec
das
mov
jae
push
mov
mov
fdivrl
jecxz
fwait
push
xchg
mov
mov
cld
cmp
add
es
jecxz
sub
xor
or
out
gs
stos
pop
icebp
outsl
mov
xor
lret
fwait
out
sub
push
repnz
ds
mov
cmp
lock
dec
sbb
push
shr
aad
js
rcrl
mov
cmpsl
jmp
lahf
push
pop
dec
out
iret
andl
ss
sbb
and
pop
aad
mov
out
push
mov
fs
rolb
test
push
sbb
das
ljmp
dec
add
jl
test
rorb
and
cmpl
xchg
dec
xchg
icebp
cmp
idivb
dec
imul
cmp
mov
fldt
iret
iret
testl
xchg
jno
xchg
lods
mov
jmp
adc
jecxz
mov
jns
and
inc
into
repz
mov
xchg
or
in
sti
sub
rolb
fimull
fisubrs
aam
fcompl
push
mov
mov
imul
movsb
and
data16
in
ficomps
int
por
leave
test
cld
cmp
jbe
dec
and
xlat
lret
pop
out
adc
cld
int3
adc
addl
sti
test
aaa
in
fisttpl
mov
je
lods
mov
fcoml
ljmp
jbe
lds
clc
sub
xchg
mov
xchg
imulb
imul
fcmovu
xor
pop
fwait
pop
fcmovb
add
hlt
dec
mov
stos
call
inc
xchg
or
ffreep
ret
lcall
iret
inc
push
imul
arpl
mov
jg
aam
jnp
add
or
pop
jecxz
mov
movsb
push
push
stc
push
mov
mov
movaps
mov
xor
or
push
and
sbb
pop
fnstenv
es
sbb
push
iret
jns
ds
inc
cs
shll
mov
addr16
xchg
mov
insb
dec
lods
mov
scas
out
lcall
aas
in
pop
pop
adcb
and
ja
lret
mov
arpl
cli
add
adc
out
adc
and
adc
cmp
jns
dec
shll
stos
and
or
xchg
jbe
sub
mov
js
sub
test
repz
mov
xchg
movsl
pop
icebp
push
lret
push
imul
pop
shl
bound
loope
jg
test
fcompl
and
into
mov
into
sbb
mov
rep
or
lcall
pop
clc
cmpsb
repnz
cmp
add
cmpsb
fsubrl
push
sub
pop
and
adc
xor
dec
fldt
int
pop
ret
pushf
sub
shlb
aam
repz
dec
mov
mov
mov
push
sub
lock
sahf
ds
push
stos
or
and
aad
push
insb
jecxz
cld
mov
lret
push
dec
lods
adc
les
in
shll
cmc
in
aad
lock
js
cltd
add
or
icebp
mov
test
pop
push
dec
bound
das
push
adc
push
xchg
and
xchg
jno
xchg
aad
sahf
or
frstor
dec
fsubl
shl
cmpsb
mov
xor
je
mov
clc
push
or
mov
xchg
arpl
mov
aam
sti
xchg
mov
cmc
pop
adcw
xor
int
out
adc
adcl
sahf
sub
xchg
insb
aad
adc
orb
in
cmpsl
cmpsl
cmpsb
je
sub
fsubrl
loop
add
push
push
lahf
cltd
add
arpl
push
jmp
dec
scas
imul
out
inc
jns
dec
sbb
or
push
xchg
pop
fildll
sub
or
loop
pop
mov
inc
sub
out
sub
push
sbb
mov
loopne
mov
pop
and
rclb
dec
stos
adc
and
sbb
in
hlt
cld
fwait
mov
add
jbe
mov
mov
jg
xor
push
fistl
sub
sbb
ljmp
fs
lods
mov
and
addr16
mov
rorl
aad
dec
jp
mov
jne
jl
ljmp
pop
hlt
adc
mov
and
mov
test
xchg
dec
push
test
out
pop
stc
ja
xchg
xchg
pop
sbb
cmpsl
sti
mov
pop
mov
mov
aad
xlat
leave
gs
mov
aam
testl
or
lea
xchg
sub
cwtl
fnstsw
addb
dec
xchg
or
push
or
jo
cmpsl
shll
or
mov
test
xor
dec
sbb
pop
lods
cmp
roll
rcrb
imul
dec
mov
xor
in
adc
insb
jecxz
inc
outsl
imul
repz
insb
das
enter
das
lds
and
sbb
icebp
in
mov
jmp
cmp
xor
sahf
mov
jp
into
loope
and
sub
fmuls
adc
xchg
test
pusha
mov
xor
ja
mov
and
pop
pushf
mov
pop
nop
lock
dec
add
lcall
push
xor
push
mov
push
cmp
cltd
test
aas
dec
popa
cmpsb
add
daa
cmp
inc
jecxz
add
xchg
cwtl
sarl
add
test
mov
pop
sti
fisttpll
sbb
shlb
icebp
in
stos
add
sbb
mov
fsub
add
add
inc
movsl
inc
imul
in
out
jg
sbb
mov
addr16
jmp
or
mov
mov
and
inc
addl
cmp
mov
ja
jmp
xor
movsb
or
subl
pop
jmp
xchg
fwait
jnp
sbb
dec
stc
lods
pushf
orl
mov
repz
imul
mov
mov
test
and
es
jp
roll
add
cmp
and
test
outsl
pop
mov
push
or
clc
hlt
jl
test
in
dec
dec
mov
adc
mov
stos
sbb
mov
jle
rcrb
mov
mov
inc
out
leave
push
gs
sub
xchg
mov
rorb
pop
arpl
push
mov
sub
adc
cmpsb
push
add
pop
test
aam
and
and
pop
mov
mov
pop
scas
out
inc
mov
in
push
dec
dec
jbe
mov
mov
pop
dec
stos
shld
xchg
pusha
in
xchg
mov
xchg
in
scas
pop
adc
xor
cltd
mov
xor
jmp
divb
jns
stos
in
popf
ss
mov
fwait
xor
xor
in
test
mov
ja
push
pop
fwait
cltd
pushf
push
fs
mov
jp
cltd
das
mov
cmpb
pusha
cmp
out
mov
je
daa
mov
aam
sbb
lods
cmpl
shlb
out
push
add
fwait
mov
sbb
mov
jge
dec
mov
mov
stc
andl
lock
arpl
mov
clc
and
sbbb
jbe
mov
add
out
sbb
icebp
xchg
push
cwtl
ds
nop
popf
or
mov
rolb
dec
dec
fcompl
movsl
ret
fcomi
subb
mov
movsb
and
inc
out
aad
mov
out
in
pop
xlat
jecxz
sarb
cmpsb
lret
in
outsl
test
adc
jnp
cmc
sahf
xchg
and
fiaddl
adc
adc
adc
mov
nop
js
dec
push
push
and
mov
insb
adc
cmp
shll
cmpsl
inc
scas
mov
dec
ret
or
inc
in
or
dec
sbb
test
lea
movsb
fwait
jbe
fmul
inc
lret
cwtl
pushf
and
add
sbb
push
dec
sub
daa
aad
mov
jge
iret
out
pop
fs
xchg
lahf
fwait
ds
mov
mov
notl
fistpl
push
lods
mov
add
shlb
push
mov
dec
mov
pushf
adc
and
mov
mov
cltd
fwait
insl
pop
add
xchg
push
and
sub
mull
or
jne
mov
add
mov
mov
mov
fsubs
cmp
mov
mov
sbb
xchg
mov
xchg
loope
push
sbb
sub
adc
fidivl
popf
jmp
cwtl
mov
or
or
pop
jnp
cmp
hlt
cmp
cltd
xchg
inc
pop
in
cltd
lret
add
inc
push
mov
adc
arpl
imul
jnp
dec
popf
lret
mov
push
mov
in
xor
dec
dec
cmp
js
scas
sub
shr
inc
repnz
sbbl
outsb
cld
push
or
pop
test
add
mov
loop
pop
and
jb
or
mov
addr16
adc
inc
add
pusha
push
add
adc
enter
subl
mov
jbe
cld
fnstenv
xchg
mov
imul
out
push
mov
pop
imul
fistps
js
scas
fsub
mov
mov
fs
div
fcoml
mov
pop
enter
sbb
jmp
cmp
add
jbe
sub
fldl2e
in
push
lock
int
and
or
and
sahf
imul
ja
mov
pop
adc
test
push
test
and
insl
ljmp
jnp
insl
les
pusha
xor
adc
pusha
sbb
jo
negb
push
pop
cmpsl
lcall
mov
je
shr
test
push
xchg
adc
leave
imul
ss
shll
inc
xlat
lcall
cwtl
jae
adc
push
pop
insl
mov
adc
cmpsl
aad
and
xchg
mov
jns
rcrl
jae
and
ret
loop
stos
inc
ljmp
outsl
daa
or
and
sbb
lock
insl
call
adc
test
rcrb
sbb
and
adc
dec
in
xor
and
stc
jnp
push
pop
xchg
aaa
mov
xchg
das
clc
scas
es
pop
aad
pop
or
test
push
mov
hlt
xchg
xor
jnp
jae
push
push
mov
sub
adc
cmpsl
sbb
xchg
scas
jns
add
aam
les
cli
push
xchg
xor
mov
dec
testl
jbe
mov
mov
ficompl
loop
jae
pop
push
sbb
push
out
sub
movsb
dec
and
lea
sti
cmpsb
pop
pop
pavgb
adc
test
push
mov
inc
push
repnz
dec
fs
inc
fs
push
inc
cmpsb
bound
or
sbb
sbb
loop
and
push
in
push
cmpsb
xlat
xor
enter
in
iret
in
mov
jnp
popa
or
cmp
les
mov
mov
rorl
fdivl
mov
push
into
test
pusha
cmp
cmpsb
jmp
mov
xchg
inc
mov
rorl
push
sbb
lock
mov
fmull
inc
inc
sbb
jmp
dec
loopne
je
dec
jo
sahf
pop
pop
pushf
mov
jecxz
pop
mov
hlt
jg
and
add
pop
dec
in
movsl
rorb
cli
addr16
rcr
ss
sbb
push
xor
sub
hlt
out
addr16
jge
jmp
cmpsl
xor
mov
leave
imul
sub
rcll
mov
int3
mov
faddp
adc
jae
jmp
sbb
and
add
lods
push
xor
mov
mov
mov
xor
dec
mov
sbb
movsl
sub
dec
std
xor
les
push
cmpsl
lahf
in
inc
out
ljmp
cmc
sbb
outsl
mov
test
dec
arpl
xorb
sub
jnp
cwtl
ret
flds
in
lahf
fwait
jne
mov
pop
aaa
cmp
fs
in
cmp
xchg
pop
jnp
pop
dec
dec
out
ss
add
pusha
test
lock
lods
push
xor
fwait
lea
iret
mov
mov
xchg
jb
imul
mov
lods
pop
sub
cltd
loope
fwait
inc
or
pop
mov
lock
cmpsl
pusha
lods
push
testb
int3
inc
mov
aam
dec
adc
int
mov
mov
outsb
mov
jmp
int3
dec
inc
push
sbb
dec
sub
jmp
inc
xor
out
fwait
cmpsl
adc
repnz
nop
ds
cmp
dec
lcall
out
sbb
js
fstl
mov
mov
jae
xchg
mov
mov
pop
dec
jmp
repnz
and
ret
inc
pushf
mov
xchg
cmc
scas
and
or
stc
add
in
leave
lcall
push
jo
sbb
xor
hlt
pusha
aad
shlb
in
jp
aaa
mov
mov
loope
push
push
push
xchg
mov
cmc
test
sbb
adc
cmpsl
or
dec
dec
lcall
cmp
mov
sub
cmp
fldenv
jl
sbb
cld
popf
push
dec
mov
imul
enter
jns
inc
fidivrl
call
add
inc
pop
enter
mov
sub
aaa
push
arpl
jge
mov
in
cltd
movsl
cmp
out
scas
or
push
aad
fcomps
xor
insb
leave
mov
lods
aad
hlt
xchg
ljmp
shrl
popf
mov
sbb
jmp
js
frstor
add
mov
ret
xchg
lret
cmc
pop
rcrl
fstps
push
xor
fwait
pop
or
adc
jbe
gs
rcrl
pop
lcall
stos
cmpsb
sub
pusha
adc
cli
mov
mov
push
mov
xchg
mov
int3
pop
gs
outsb
sub
fistps
fisttps
arpl
ret
lret
aam
pop
mov
out
jb
inc
sbb
sub
ret
or
and
roll
sub
ljmp
or
push
pop
lds
jae
jecxz
jno
sub
mov
outsb
mov
pop
or
popf
mov
cmp
into
jne
hlt
aaa
pop
jno
and
les
addr16
filds
mov
lods
add
ss
xchg
shl
adc
inc
mov
test
add
iret
xchg
pop
pop
cli
cmc
push
sbb
loope
sahf
fnclex
and
push
imul
dec
push
lret
push
in
and
jmp
cld
call
fs
or
jle
imul
aas
pop
inc
dec
flds
adc
push
shlb
fadds
adc
pop
dec
pop
dec
xchg
sti
out
jo
sbb
fildl
and
dec
mov
pop
pop
or
out
jl
pop
clc
sbb
push
sbb
sbb
xchg
cmpsl
add
movsl
call
mov
movsb
mov
es
mov
jbe
and
repnz
jge
rcrl
jae
adc
out
mul
push
adc
cmpsb
pusha
xchg
jp
and
dec
mov
jl
sbb
icebp
int3
inc
mov
clc
test
mov
push
in
hlt
push
adc
xlat
jl
fmull
test
sbb
fs
out
xchg
mov
and
lret
or
inc
push
xor
imul
push
int
pushf
sub
bound
incb
push
sub
dec
mov
aad
xlat
sub
adc
xor
outsb
xchg
test
call
sti
cmp
popa
jae
push
call
push
stos
mov
adcb
and
sbb
stos
jl
clc
cmpsl
mov
and
sarl
mov
jl
mov
pop
mov
dec
movsb
out
pop
pusha
sub
mov
jecxz
lods
mov
imul
aaa
pop
fwait
adc
inc
mov
push
adc
push
out
shr
fucompp
pop
fwait
cmp
pop
das
stc
negl
adc
mov
in
dec
jns
mov
and
gs
faddl
mov
ds
sbb
xchg
pushf
push
das
or
inc
pop
scas
push
std
sub
sahf
lods
scas
xchg
lret
adc
cmpsl
dec
imul
jnp
sbb
cs
or
push
inc
int
ja
pop
jp
add
into
je
fidivrs
cmpsl
xchg
or
repnz
sbb
ret
clc
add
cmp
js
add
sub
ljmp
pop
push
fsubs
lret
mov
loope
jne
and
jecxz
inc
test
clc
mov
test
jge
push
jmp
xor
int3
cmpsb
sti
cmc
int3
rorb
sub
subl
mov
sub
rcll
sbb
push
mov
xchg
sbb
icebp
mov
sbb
dec
mov
adc
adc
dec
sbb
xor
hlt
out
out
in
popf
mov
aad
jb
push
mov
iret
inc
pop
cmp
ret
call
push
and
or
aaa
sahf
mov
mov
pushl
and
std
sahf
dec
in
push
aad
hlt
int3
adc
dec
xorb
mov
std
enter
push
sub
jp
inc
popa
add
rcll
and
push
leave
inc
movl
into
bound
pop
pushf
xlat
sub
and
xor
or
dec
das
clc
push
inc
leave
andb
adcb
aam
aas
cld
shlb
inc
in
pop
lcall
sbb
sti
mov
mov
mov
out
add
icebp
mov
jmp
jecxz
add
stos
mov
dec
cmp
test
loop
adc
das
sbb
cmp
mov
sbb
in
fwait
sbb
mov
push
mov
in
movsl
push
xchg
adc
push
sub
aaa
leave
sub
out
mov
aad
cs
in
xor
add
pop
xchg
filds
push
lock
xchg
sahf
imull
test
dec
sbb
sbb
inc
leave
jge
faddl
lret
and
popa
xor
scas
loope
cmpsb
and
push
cmpsl
fwait
stos
stc
xor
pop
mov
les
cltd
jnp
sub
add
cmp
out
lea
lods
dec
cld
sub
or
xor
xlat
test
int
and
jno
jns
jge
dec
fiadds
hlt
adc
mov
jl
mov
pusha
adc
fdivrs
and
neg
ficomps
push
sub
jl
mov
jg
and
sub
xor
sbb
stos
ss
push
ret
lods
xchg
cmp
mov
fs
mov
in
in
pop
mov
jmp
dec
mov
cld
addr16
cs
fs
mov
inc
and
inc
xor
imul
sbb
xchg
sahf
leave
push
adc
pop
or
dec
pushf
jae
cmpsl
dec
add
jmp
int
push
out
or
mov
inc
ret
sbb
shl
or
mov
call
cld
loop
fstps
or
aad
sbb
popa
test
aaa
inc
ror
sbb
sub
bound
mov
sahf
jmp
test
dec
out
sbb
lcall
cwtl
lret
stos
cltd
xchg
sub
adcl
stc
nop
or
push
and
push
xchg
cwtl
or
aam
mov
push
es
ds
or
inc
insb
pop
cltd
mov
sbb
mov
pop
mov
or
ret
test
push
into
xor
mov
pop
sub
and
pop
insb
jbe
push
cltd
xor
xchg
out
push
outsl
in
inc
push
mov
shll
aas
dec
sbb
push
sbb
push
data16
inc
mov
daa
outsl
clc
mov
sub
mov
sbb
mov
or
or
add
add
cmp
nop
adc
cwtl
mov
in
sarl
and
mov
xchg
xchg
test
cmp
add
shll
lret
scas
push
imul
pop
dec
sbb
push
sbb
sbb
sub
push
jns
jae
or
imul
push
lcall
in
add
call
popf
imul
loopne
imul
jno
sbb
in
inc
jge
aaa
rcr
lds
cltd
sbb
jge
arpl
mov
and
insb
insl
jmp
mov
mov
pushf
ja
jo
movsl
cmpsl
idivb
jne
mov
ljmp
lods
std
jg
arpl
push
in
xor
les
and
push
and
test
aaa
movsl
test
fs
rorl
out
test
inc
stc
dec
hlt
adc
gs
mull
or
icebp
shlb
stos
in
jo
mov
jle
fstps
and
in
ret
addr16
push
leave
incl
in
and
dec
dec
cmp
stos
cmpsl
inc
jns
dec
and
ds
lods
sub
movsb
sub
pushf
inc
andl
mov
lret
inc
les
popf
jnp
ds
ss
dec
ds
mov
fisubl
xor
test
cltd
xchg
cmpsb
mov
inc
mov
iret
mov
jl
jbe
out
inc
scas
aad
jecxz
lock
popf
mov
sbb
sbb
lret
dec
movsb
xor
or
pop
clc
shll
pop
js
pop
and
jmp
or
stos
fidivs
fldenv
mov
in
rcll
cmp
dec
adc
cwtl
in
pushf
sbb
and
mov
and
movsl
dec
add
in
dec
jge
mov
xor
cmp
mov
mov
stos
lods
mov
cmp
inc
testb
mov
push
ja
add
and
xchg
add
enter
addl
adc
shr
xorl
fs
mov
std
movsl
outsb
test
adc
sub
and
mov
lret
jb
push
adc
dec
insb
mov
push
sbb
inc
inc
sub
repnz
test
xchg
stos
data16
cmpsb
jnp
imul
cmp
push
mov
pop
lds
lock
lret
fnsave
enter
xor
push
orb
cmpsb
inc
mov
movsl
lahf
in
cs
pop
std
cmp
idivb
xor
jns,pn
loop
fadd
mov
dec
push
mov
xchg
dec
jno
cmpsl
mov
mov
jns
lods
jae
lcall
inc
ret
lods
lahf
popf
icebp
and
mov
scas
and
ja,pt
imul
shr
jbe
sub
mov
repnz
pop
xchg
mov
lahf
push
add
in
stc
lods
xor
sub
jb
negl
inc
inc
out
mov
addl
jo
adc
les
int3
jg
gs
icebp
pop
lcall
xor
sbb
dec
cmpsl
imul
ficompl
in
jl
push
imul
lea
sub
sbb
dec
insw
xorb
test
and
js
lds
sbb
test
rcll
pop
clc
sti
pusha
jmp
subl
adc
stos
call
and
das
scas
add
jge
shrl
stos
pop
inc
in
js
sbb
pop
fwait
adc
push
ret
jnp
popf
xchg
imul
mov
xchg
sbb
push
sub
xchg
cli
loope
push
cmc
mov
mov
js
and
jmp
sti
mov
and
pop
shl
gs
adc
cmpl
or
jae
pushf
je
fldl
sub
data16
dec
mov
and
mov
pusha
or
jae
insb
iret
pop
pop
xor
pop
xchg
fnstenv
syscall
aad
dec
into
in
rolb
mov
dec
jg
mov
xor
mov
lret
push
rorl
jmp
fidivs
xor
lea
jns
or
mov
movsb
ss
jne
dec
call
or
icebp
lock
test
adc
movsb
lcall
or
jg
cmp
jne
loopne
add
fisubl
je
stos
cmpsb
test
pop
insb
ret
fwait
pop
aaa
popf
cmp
sub
and
and
cmpsb
dec
mov
int
mov
ja
mov
cmp
or
sbb
mov
jae
add
cmpl
les
sub
lcall
call
test
xor
sahf
jae
test
out
es
sbb
mov
lcall
std
in
jno
push
adc
jne
sbbl
jae
loope
sub
cli
cmp
push
movsl
cmp
stos
push
jnp
ret
mov
mov
mov
mov
mov
mov
jge
adc
in
fistpl
sub
stc
es
or
outsb
inc
hlt
push
ficoml
inc
mov
jae
fwait
add
jae
mov
lods
cmpsl
rcll
xchg
loopne
xchg
add
mov
push
incl
lds
hlt
nop
add
shl
adc
push
lea
scas
cmp
scas
insb
scas
nop
or
subb
lock
int
sub
mov
sbb
add
out
sbb
or
sub
in
dec
ljmp
mov
or
stos
js
or
mov
xchg
add
mov
mov
pop
shlb
add
gs
sbb
mov
iret
clts
mov
stos
push
out
or
dec
fstpl
xchg
movsl
xor
mov
mov
mov
mov
sbb
dec
jno
jp
jne
cmp
dec
int3
push
lods
xchg
inc
mov
mov
mov
jnp
loopne
jl
mov
mov
cmp
aad
pop
cmp
xlat
pop
mov
lret
dec
call
and
cltd
loope
add
fistpl
mov
mov
ljmp
cmp
jbe
in
mov
out
cmc
lock
ljmp
lods
test
dec
out
bound
outsl
adc
repz
and
pop
scas
fistl
stos
mov
cmp
or
or
test
mov
fwait
dec
clc
cmp
dec
outsb
popf
in
sbb
sbb
lds
in
insb
xchg
pop
mov
sbb
pop
inc
mov
sbb
enter
jnp
and
mov
lods
jno
sub
dec
jno
and
push
jbe
push
pop
lds
int3
sarl
mov
xchg
mov
pop
shll
and
cmp
jb
dec
popf
add
lds
js
inc
dec
into
pusha
push
pop
lods
mov
sub
and
std
repnz
sbb
push
stos
mov
ret
jmp
subb
scas
cs
insl
pop
xor
xor
aam
lret
cmp
cmp
inc
test
or
cs
jae
or
mov
loop
outsb
cmpsb
push
dec
and
sbb
cwtl
inc
fstps
xchg
mov
inc
fidivrl
insl
in
gs
notb
out
lahf
cmpsl
lahf
cmp
fidivl
jae
arpl
mov
adc
jecxz
mov
imul
icebp
sbb
xchg
cmc
ljmp
movsb
jecxz
jae
test
movsb
sti
jecxz
aas
or
je
cmpsb
mov
pop
mov
cli
mov
inc
out
loope
shrl
dec
mov
inc
mov
dec
popf
fiadds
adc
and
popf
inc
xchg
aam
movsl
and
stc
sub
fmull
push
test
mov
mov
or
pop
pop
sbb
mov
scas
ljmp
mov
fwait
std
push
xor
cmc
lahf
rcl
pop
mov
addr16
loopne
loope
xor
jmp
pop
in
sbb
psubb
sub
mov
out
stos
jae
ret
mov
xor
dec
push
sarb
xlat
push
in
and
in
sbb
loopne
icebp
lods
or
pushf
adc
cmp
movsb
push
dec
testb
cmpsl
sti
pushl
xorl
jp
jl
dec
out
movsl
jnp
outsl
add
mov
into
outsl
sbb
loop
pop
cltd
imul
adc
push
imul
and
in
mov
mov
mov
cmp
cld
jb
movsl
pop
outsl
out
les
push
jne
fimuls
sbb
jae
fwait
cs
out
mov
mov
sbb
mov
icebp
test
mov
sub
add
movsb
adc
loopne
pop
jns
sbb
sbb
mov
dec
adc
add
das
dec
orl
movsb
sub
loopne
cmp
lret
cmpsl
loope
shrl
jg
mov
inc
cmpsb
gs
mov
fldl
lret
daa
in
ljmp
out
fyl2xp1
xlat
dec
lahf
mov
pop
lcall
fsts
lcall
nop
adc
mov
movsl
stos
add
xor
inc
shlb
add
mov
mov
sub
and
je
inc
mov
mov
push
push
mov
dec
outsb
popf
test
lds
and
lahf
sub
adc
and
jle
jg
pop
mov
dec
inc
repz
lret
xchg
mov
dec
pop
push
imul
outsl
stos
sti
rcr
dec
in
cmc
mov
stc
mov
insl
jge
aaa
dec
daa
std
cmp
out
mov
fwait
int
pop
mov
mov
pop
sar
inc
arpl
outsb
and
cmpl
or
or
repz
nop
cmc
fldt
ja
and
sbb
lret
rcrl
mov
out
leave
jge
fcomp
ficoml
arpl
adc
imul
cmp
xchg
enter
push
out
sbb
push
int3
mov
test
lds
cs
mov
or
cltd
imul
out
enter
cmp
stc
or
push
out
lcall
pop
int
xchg
cltd
popa
into
mov
mov
mov
or
sbb
push
lcall
dec
xor
mov
lock
sbb
add
bound
out
mov
inc
call
sahf
and
adc
push
clc
loopne
fwait
popf
and
push
and
getsec
movsb
mov
js
mov
icebp
clc
adc
lcall
pop
jmp
sti
inc
push
jno
sti
jo
mov
jmp
frstor
jle
ret
movsl
fwait
push
cmp
aaa
mov
pop
jl
push
push
insb
cmp
jne
out
in
mull
push
dec
scas
cmp
shr
das
cmp
loopne
dec
add
adc
lret
push
dec
repnz
int3
xchg
mov
stc
jecxz
es
mov
pushf
mov
sbb
cmp
push
sub
movsl
fadd
dec
dec
jne
repnz
sbb
pop
and
cmpsl
lock
push
sbb
ret
adc
or
cld
push
jne
fnsetpm(287
jle
daa
adc
movsb
test
aam
pusha
inc
fwait
and
and
mov
xchg
hlt
into
mov
out
mov
aam
inc
push
or
lret
mov
mov
mov
jns
push
subl
mov
int3
mov
addr16
push
cmpsl
mov
movsb
inc
enter
mov
sarl
in
arpl
pop
sub
call
loop
push
and
mov
and
jg
imul
sbb
lret
mov
ja
test
and
jecxz
push
sbb
dec
jl
sub
sub
test
cmp
xchg
orl
add
mov
push
and
ljmp
imul
cmc
lret
mov
daa
hlt
ficomps
add
adc
fstpl
out
sbb
jns
pop
or
push
mov
inc
mov
xor
enter
fistps
mov
push
add
test
jl
mov
lds
mov
adc
jno
int
lret
adc
imul
pop
mov
pop
xor
sti
imul
mov
cltd
stos
or
mov
inc
jne
sbb
xor
scas
jnp
shl
add
inc
xor
xchg
lods
cmp
mov
sub
cmpsb
loopne
mov
mov
and
add
test
iret
out
nop
mov
inc
mov
pop
adcl
mov
rcrb
add
cltd
mov
pop
mov
push
adc
ja
mov
dec
adc
jb
jecxz
lcall
in
cli
aas
xor
mov
jge
fimull
push
stc
jns
pusha
adc
leave
insl
sbb
hlt
jg
enter
fs
fdivl
iret
add
mov
mov
mov
dec
jns
rcrl
jmp
movsl
es
imul
adc
lock
adc
adc
rcrb
popf
adc
xor
cmp
aad
loopne
data16
cwtl
and
dec
jge
cmc
cmp
cld
push
imul
insl
mov
mov
or
je
repz
dec
mov
pop
lods
sub
adc
cmpsb
pop
jl
test
mov
insl
xchg
cmc
stos
aam
push
sub
lock
scas
pusha
lahf
jmp
sbb
ficoml
pop
loope
sub
xchg
int
test
xchg
mov
push
sahf
cmp
loop
dec
mov
fs
test
lcall
and
shlb
test
xlat
xlat
ror
xchg
xor
xor
sbb
pop
pop
pop
les
cmp
into
aad
lahf
mov
mov
push
es
out
mov
sahf
adc
xchg
jmp
mov
sti
cmp
dec
dec
pusha
push
cmpsl
mov
mov
xor
aad
adc
call
mov
mov
adc
ljmp
fcos
in
in
mov
adc
sub
sbb
lea
jnp
adc
cmp
mov
lods
inc
mov
jecxz
loop
cmp
push
imul
aaa
icebp
sbb
and
data16
fcoml
fdivl
adc
push
fidivl
push
lahf
shl
xor
ja
jo
mov
xchg
dec
jg
dec
je
xchg
mov
xchg
std
jne
xor
mov
movsb
mov
mov
sub
movsl
stos
dec
pop
mov
sub
push
mov
loop
mov
mov
cmp
stos
xchg
ljmp
or
cli
ljmp
pushf
inc
inc
sti
stos
mov
rcll
inc
notb
sbb
mov
sbb
daa
pop
xchg
test
inc
out
sbb
mov
aas
shlb
cli
cmpsb
out
and
jmp
push
sub
jne
ret
jae
ljmp
add
jne
cld
and
mov
and
inc
xor
and
dec
adc
push
dec
arpl
inc
jl
adc
push
fsts
movsb
push
out
lock
pushf
cmp
sbb
mov
shlb
pop
or
sub
pop
cs
mov
divb
and
xchg
fistps
test
mov
fcmovb
or
push
stos
add
xchg
jmp
pop
sbb
lods
and
cmpsb
add
aaa
aad
mov
sub
jmp
push
out
jle
in
in
xchg
dec
stos
mov
xor
mov
push
sub
and
adc
sbb
cmp
and
dec
fsub
dec
xor
cmc
out
in
movsl
dec
fwait
cmp
sbb
imul
sub
xchg
insl
mov
mov
jl
iret
sub
jb
mov
pushf
inc
lcall
in
out
cmpsb
cmp
mov
outsl
inc
xor
sti
push
in
scas
cwtl
pop
ss
cmp
jb
pop
out
jns
popa
test
jns
and
cmp
mov
inc
pop
mov
test
push
gs
jnp
pop
jno
jns
loop
cltd
or
mov
and
xor
and
jmp
test
rorb
negl
lahf
lock
push
and
iret
cmpsl
pop
out
jne
cmc
sub
xlat
xchg
js
mov
fldenv
add
or
sbb
test
movsb
mov
dec
mov
mov
mov
xchg
ljmp
push
mov
cmp
sbb
jae
lods
xchg
xchg
xlat
shr
fcoms
fcmovne
cmpsb
lock
fcomps
jns
inc
mull
mov
sti
std
test
fstl
aas
xchg
stos
ret
push
xor
dec
dec
jge
cli
shlb
push
sbb
jae
jb
inc
add
push
push
adc
test
mov
daa
jo
mov
push
or
mov
ja
lret
shll
hlt
jg
aad
pushf
mov
mov
mov
fdivl
popa
int3
mov
pop
mov
stos
gs
xchg
in
xchg
imul
sti
xchg
in
xchg
push
jmp
lahf
pop
jb
fiaddl
lea
repz
les
push
stc
pop
xor
mov
imul
mov
and
adc
sub
std
insl
in
mov
jl
stos
test
fildl
push
insl
ja
addr16
sbb
jo
mov
sti
and
outsl
adc
jns
xchg
imul
mov
jle
jmp
fwait
cmc
inc
sbb
out
frstor
iret
push
mov
inc
mov
cmpl
xlat
and
sub
jns
push
mov
jle
cmpsb
out
mov
adc
das
adc
out
cld
ret
mov
nop
test
push
fisubrs
mov
lds
bound
xor
pop
cmp
xchg
and
fcoml
in
sub
imul
frstpm(287
hlt
push
sub
pop
xchg
lcall
out
push
jg
fdivrs
test
adc
repnz
and
sbb
cmp
imul
xlat
movsl
sub
adc
sbb
lret
mov
sbb
fwait
sub
loope
stos
pop
jo
scas
sbb
mov
aam
mov
mul
jne
insb
mov
push
lret
jns
mov
shll
je
mov
and
cmp
pop
outsl
sub
lock
movsl
lahf
cmp
mov
lahf
pop
cmp
jecxz
roll
inc
cmpsl
push
call
push
mov
insb
xor
inc
fwait
mov
add
jle
fildl
cwtl
xchg
sbb
mov
out
movsl
je
mov
sbb
inc
into
loopne
xchg
int
sbb
xchg
lods
sbb
repz
lahf
in
movsl
pop
in
mov
out
mov
xorl
jmp
dec
movsl
repz
sbb
mov
mov
mov
xchg
cmp
adc
ret
movsb
shlb
inc
add
shl
hlt
push
add
push
cmpsb
adc
jne
mov
mov
and
mov
mov
sbb
loop
jecxz
daa
adc
je
adc
or
inc
xor
mov
dec
jmp
mov
popa
dec
jmp
ljmp
adc
stc
cld
jecxz
xor
pop
pop
nop
cmp
sub
inc
mov
and
cmp
bound
or
cmp
out
pop
repnz
jmp
loop
sbb
insb
pop
pop
inc
xchg
push
or
xchg
loopne
pop
aam
sub
movl
ss
scas
out
push
mov
xchg
stos
frstor
in
xor
mov
mov
pop
mov
xchg
out
aaa
sbb
into
popf
cwtl
es
sbb
mov
nop
pusha
push
push
jns
or
jb
fldcw
incl
and
adc
in
cld
or
pop
xor
test
pop
sbb
xchg
dec
inc
dec
nop
sti
loope
ret
insb
and
sub
mov
in
push
dec
pushf
aaa
aad
out
mov
fmuls
mov
int
mov
sbb
ret
cmp
leave
mov
mov
adc
sti
jp
xchg
mov
loopne
and
in
add
inc
pop
addr16
icebp
cwtl
mov
mov
dec
pushf
in
xchg
or
xor
mov
inc
mov
je
gs
lds
aaa
push
or
aas
mov
fs
push
and
dec
push
outsb
mov
cwtl
cmpsl
shl
stos
mov
pop
lahf
jnp
aam
dec
es
cmp
shrl
mov
xchg
sbb
jne
es
fsubr
jmp
leave
es
rolb
xor
jno
imul
fcoml
xor
lock
push
leave
jns
mov
out
loop
insb
pop
sub
adc
ss
repnz
cli
call
lds
jb
es
ds
jnp
add
lahf
or
cs
les
adc
and
pop
xchg
jl
inc
jecxz
lret
push
fstl
sahf
dec
pop
ljmp
in
es
orl
ret
adc
mov
clc
mov
adc
sbb
and
mov
fucomip
and
mov
loopne
nop
test
sbb
lds
inc
test
leave
mov
lock
loope
leave
mov
imul
xchg
fsubs
into
ror
je
rclb
jle
mov
mov
mov
gs
lods
pop
bound
inc
insb
inc
sub
xchg
sbb
adcb
mov
test
mov
sbb
call
inc
aam
push
lret
out
test
pop
inc
cld
xchg
pop
lahf
cmpsl
mov
adc
jnp
jmp
push
aas
add
jmp
mov
scas
sti
enter
adc
xchg
push
xchg
add
dec
and
lea
in
enter
mov
pop
mov
and
cwtl
xchg
rcrl
inc
adc
sahf
mov
and
mov
inc
mov
scas
aad
test
xchg
mov
dec
mov
les
lahf
cmp
inc
add
cmpsl
mull
sahf
nop
ret
inc
jle
pop
mov
sti
test
push
or
dec
pop
xchg
movsb
or
std
mov
mov
stos
xor
inc
mov
out
dec
push
and
stc
pusha
fbstp
leave
sbbb
sub
mov
inc
stos
aad
fucom
jb
dec
fistl
daa
jecxz
xchg
aaa
mov
xchg
ret
movsb
in
leave
test
shlb
hlt
add
sbb
arpl
loop
mov
mov
ss
push
test
jmp
pusha
cmpsl
stos
pop
imul
imul
shl
test
stc
and
addr16
mov
out
test
sub
xchg
and
sub
addb
and
out
xor
daa
sbb
add
inc
andb
pushf
adc
pop
push
pop
les
xchg
add
mov
or
jp
mov
ret
jp
cli
dec
inc
sub
add
in
ljmp
les
mov
mov
arpl
lods
mov
in
jae
iret
insb
adc
ret
and
xchg
adc
jg
sbb
cld
mov
sarb
das
clc
jne
test
ljmp
jmp
leave
loopne
stos
imulb
ret
ss
inc
jns
push
ret
fnstcw
in
xchg
push
mov
jae
push
inc
ds
mov
ds
ja
mov
sbb
xor
je
ret
scas
adc
or
push
adc
and
inc
push
jle
jge
and
jmp
xor
decb
test
lret
mov
stos
push
sub
mov
cmp
jecxz
pop
inc
clc
mov
addl
ret
and
in
jmp
cmp
cmp
xchg
xchg
xchg
in
xor
lock
sbb
mov
jmp
mov
inc
xchg
push
jbe
mov
pop
and
adc
sub
jmp
jbe
sbb
hlt
test
sub
gs
stc
shlb
jns
dec
sbbb
pushf
pusha
in
jmp
in
mov
inc
push
adc
cmp
mov
jb
and
loopne
scas
aad
cmp
imul
sbb
test
jae
cmp
and
scas
add
sub
lock
out
mov
sub
mov
ds
and
mov
adc
and
inc
push
pop
mov
mov
or
out
jbe
mov
scas
add
mov
jae
add
mov
pushf
jns
dec
clc
test
mov
jnp
jne
notb
ficoml
jnp
xchg
stos
das
addl
sbb
xor
das
adc
sbb
mov
imul
pop
cltd
xchg
cmpsb
cmp
imul
insb
xchg
popa
jmp
and
push
mov
out
jo
out
cltd
mov
fs
xchg
sahf
cmp
jae
movsl
dec
mov
fistpl
cmp
ret
call
das
adc
mov
mov
dec
aas
jge
push
push
loop
imul
fmuls
sub
call
cli
inc
and
sub
adc
mov
sbb
and
push
cmpsb
cmp
popf
cmp
and
ljmp
jg
push
mov
jnp
or
cmp
jp
and
mov
sub
add
cmp
add
popf
imul
movb
lcall
xlat
pushf
jnp
in
mov
hlt
fmull
decl
insb
mov
scas
xchg
cmp
jmp
es
xchg
cmpsb
imul
pushf
push
rol
pushf
jnp
stos
jmp
test
push
and
pop
daa
fdivs
je
ficoms
aaa
mov
out
dec
and
sti
aas
test
sub
bound
fidivs
xchg
ljmp
je
les
add
addr16
inc
movsl
std
push
out
add
mov
int
test
cltd
adc
scas
fidivrl
imul
aas
or
imul
or
cmc
cld
adc
lea
pushf
pop
cmpsl
inc
pop
and
pop
mov
push
clc
cs
aam
mov
mulb
test
and
add
push
loopne
fwait
and
mov
inc
xor
lcall
loope
mov
mov
adcb
and
inc
call
pop
mov
jo
in
cmpb
in
xor
and
cmp
rclb
mov
lods
xchg
out
mov
xchg
or
xchg
icebp
sahf
cmp
in
fsts
in
sbb
or
data16
sbb
cmpl
out
xchg
cwtl
icebp
mov
jae
mov
pusha
ficompl
mov
mov
adc
jno
cmp
test
mov
cmpsb
fs
cwtl
xchg
xor
push
cwtl
jp
xchg
and
sbb
loopne
jne
push
jne
daa
shrl
aam
and
sub
xchg
or
in
pop
leave
or
lea
imul
loope
test
sub
rorl
sbb
adc
lds
pusha
xor
ret
incb
xchg
test
rcr
sub
push
lock
bound
or
jne
fcompl
in
mov
ss
das
mov
lods
movsb
lret
jg
pop
inc
stc
inc
lea
push
push
or
cmpl
push
leave
ds
jb
cli
les
adc
mov
cmp
mov
mov
xchg
cmp
orb
fiadds
in
popf
mov
pop
mov
pop
xor
xchg
enter
xor
jae
jp
insl
push
adc
int
arpl
repnz
ficompl
xchg
dec
bnd
cltd
orl
dec
dec
fldenv
mov
adc
mov
add
mov
notl
gs
push
imul
lahf
sbb
jecxz
loopne
xchg
mov
bswap
cmc
arpl
subl
mov
nop
ret
out
hlt
mov
or
jbe
cltd
xchg
hlt
clc
cmp
and
jno
test
pop
jns
int3
arpl
repz
cmp
jmp
and
cltd
fmul
inc
scas
jmp
sti
xor
sub
fcompl
aaa
jl
mov
lock
imul
adc
fmull
leave
mov
xchg
aas
sahf
stos
cmp
out
movsl
stos
in
fadd
lods
mov
shll
push
imull
out
incb
sbb
int3
xchg
repz
fildl
loope
fldt
pop
mov
xchg
mov
adc
mov
ja
and
stos
jmp
pop
mov
mov
pop
pop
pop
xchg
ret
dec
mov
mov
out
mov
pop
xor
pop
ja
lcall
push
stc
lcall
or
dec
lret
push
mov
rorb
xor
loope
xchg
fdivs
loopne
mov
ret
sti
xchg
loopew
lret
inc
adc
xchg
es
and
adc
shrl
xlat
mov
sbb
sbb
aad
xor
mov
mov
fmull
xchg
fwait
std
int3
inc
loopne
cs
adc
add
mov
mov
out
repz
pop
aad
shl
sti
jno
and
leave
mov
jg
xchg
push
dec
mov
int
fimull
adc
mov
daa
xchg
sub
imul
jecxz
shll
add
ret
xchg
cmpsl
fwait
jmp
fimuls
in
mov
mov
push
js
and
insb
dec
push
and
jmp
adc
in
mov
dec
push
mov
cs
dec
cmp
mov
aad
pop
cmpsl
jnp
push
mov
sub
sub
pop
in
fcompl
cld
jmp
push
popa
xchg
out
cld
sbb
in
pop
outsl
out
mov
add
inc
leave
mov
stc
sbb
xor
mov
lahf
jge
pop
adc
pop
xor
xor
push
sahf
push
roll
lret
mov
lock
xor
jnp
icebp
add
and
mov
sahf
dec
or
stc
in
sub
add
jae
mov
out
sbb
imul
mov
and
mov
je
lahf
sub
in
cmp
jnp
push
cld
mov
push
push
aas
adc
dec
sbb
mov
mov
push
cmp
fistps
rolb
lds
out
xor
jb
pop
mov
inc
pop
xchg
cmpb
pusha
aad
mov
fsubs
stos
push
push
pop
repz
lods
orb
loop
push
and
imul
in
sbbl
out
leave
adc
loope
mov
and
pop
jne
add
fwait
pop
push
push
jnp
popa
sub
icebp
or
test
int
mov
test
sbb
frstor
adc
aam
cltd
jnp
and
mov
mov
cmpsb
mov
hlt
pusha
in
cld
movsl
fistl
in
out
fwait
out
mov
sbbl
push
mov
xchg
outsl
sbbb
hlt
inc
pop
jmp
test
push
add
js
arpl
push
xchg
add
out
shll
int3
add
and
inc
lahf
fwait
in
cmp
cli
sbb
mov
std
pusha
repnz
hlt
sbb
jo
and
add
and
adc
mov
mov
lods
pushf
fs
out
lret
dec
mov
and
sbb
repnz
push
notb
mov
popf
mov
out
and
and
fs
sub
adc
push
mov
mov
inc
inc
cltd
popa
pop
mov
aas
xor
cli
jmp
sbb
add
stc
mov
and
imul
xlat
add
sub
mov
dec
lock
sbbl
popl
push
fisttps
sti
pushf
mov
adc
lods
mov
push
add
lcall
fildll
pushf
imul
sub
push
mov
pop
mov
imul
xor
or
shlb
adc
in
outsb
jge
jb
jns
or
test
ljmp
xlat
and
in
jge
stc
mov
inc
movsb
into
lods
fisubs
je
xor
hlt
mov
mov
sbb
cmp
push
cmp
sbb
hlt
push
sub
nop
or
push
fcomps
orb
lods
sti
repnz
mov
shlb
jmp
sahf
repnz
shll
dec
pop
sbb
or
ror
sub
cmpsb
push
inc
adc
cmc
bound
loopne
jno
adc
adc
out
or
mov
or
pushf
gs
notl
lock
test
mov
sbb
lret
sub
cmpsl
mov
and
sub
cmp
jne
inc
in
and
xor
add
mov
ljmp
add
push
loope
out
jb
sbb
and
add
test
jo
fs
repz
stos
xor
bound
and
lock
les
pop
mov
xchg
sub
inc
mov
pop
in
stos
hlt
addl
or
sbb
mov
and
jne
in
and
repz
movsl
adc
movsb
imul
adc
dec
es
and
pop
inc
out
les
mov
xrelease
jnp
add
js
lods
jecxz
lock
cltd
cmp
arpl
jnp
inc
subb
pop
or
mov
mov
popf
mov
pushf
sub
dec
fwait
in
push
or
cmp
mov
mov
xor
leave
xor
rclb
cmp
adc
xchg
stc
sarl
xchg
repz
jns
fcomps
aad
test
jecxz
and
cwtl
iret
inc
jne
mov
mov
cmp
in
pusha
out
jns
insb
jb
bound
pop
cmpsl
mov
pop
hlt
pop
sbb
stc
test
jne
adc
lods
fnstcw
mov
sbb
les
mov
add
pop
adc
xor
inc
push
out
out
test
cmp
repnz
xor
leave
mov
cwtl
mov
fwait
pop
adc
loopne
test
mov
es
fcompl
mov
outsb
mov
sbb
pop
lds
and
inc
repnz
xchg
scas
movsl
mov
icebp
lea
and
jae
in
sbb
cmp
pop
mov
or
mov
mov
arpl
mov
jmp
in
pop
cltd
test
in
loopne
pop
out
stos
sbb
sar
xchg
int
jno
mov
pop
stos
mov
ficomps
jmp
mov
xor
mov
movsl
ja
movsl
pop
jp
rcrb
add
jnp
out
jne
sti
notb
sbb
push
addr16
bnd
lock
add
jl
pusha
in
jmp
and
or
aad
das
mov
jnp
fbld
mov
shl
push
ret
and
mov
aas
cmp
cmp
pusha
out
pop
dec
pop
push
and
rol
mov
xor
int3
aas
in
int
arpl
mov
mov
mov
mov
adc
push
jle
push
xchg
dec
sub
test
fists
fdivr
cmpsl
mov
mov
and
xchg
mov
mov
fsubrs
ret
push
xchg
ds
jecxz
fs
imul
sbb
fildl
sbb
jno
adc
mov
mov
mov
dec
das
daa
sbb
sahf
idivb
fldenv
addl
sub
sti
xlat
out
in
sub
stos
hlt
mov
jae
out
xor
mov
pop
mov
dec
or
gs
out
jb
scas
arpl
hlt
popf
fisttpl
sar
lds
out
mov
iret
aad
sub
pop
pop
jle
and
in
dec
push
shll
cltd
js
cmp
jecxz
je
ljmp
mov
mov
mov
or
out
sub
xchg
out
neg
clc
mov
inc
or
xchg
out
xchg
jmp
mov
pop
pop
jp
test
psllq
jp
es
sarl
jne
adc
test
loop
mov
push
push
fldenv
adc
sbb
adc
pop
mov
cmp
jp
sub
mov
cmc
pop
xchg
mov
pop
inc
in
sbb
bound
xor
push
ja
int3
inc
lahf
mov
sub
out
inc
xlat
mov
adc
cmp
jnp
mov
ljmp
push
out
sub
xor
addr16
movsl
or
shl
jmp
mov
ret
mov
sti
jb
mov
daa
and
cmpsl
in
sbb
bound
pop
subb
and
add
sahf
imul
ss
movsb
imul
adc
push
push
sub
test
sti
popf
jl
dec
in
jl
scas
add
xlat
es
cmp
js
sub
fxam
or
js
xor
pop
push
xchg
es
and
or
mov
or
push
sub
or
hlt
daa
shl
notl
xchg
out
adc
inc
lds
inc
lods
mov
sti
mov
mov
push
fcomi
fldt
bound
push
xor
pop
inc
sahf
cmpsb
cmp
adc
insl
fs
das
popa
mov
arpl
mov
inc
pushf
sbb
addr16
mov
inc
mov
jae
movsb
xchg
or
mov
pop
mov
nop
and
pop
push
loope
jp
ds
je
mov
gs
aas
xchg
sbb
or
mov
adc
mov
mov
sub
lods
sub
sbb
arpl
lret
imul
add
pop
sub
push
dec
fmull
xor
sub
pop
push
insl
sub
nop
iret
dec
cmovb
pop
icebp
gs
mov
dec
into
leave
shll
sub
imul
add
inc
xor
mov
pop
stos
mov
lahf
mov
sub
jns
sub
pop
mov
sub
push
aad
adc
mov
out
iret
mov
mov
aad
adc
and
and
pop
psubw
lods
insl
mov
mov
or
in
insb
pop
adc
out
jmp
push
data16
inc
pop
popf
movsb
jnp
lea
pop
xchg
mov
jp
aaa
inc
mov
in
adc
sarb
mov
xlat
mov
pop
jbe
popa
mov
push
in
add
mov
mov
hlt
cmp
push
xchg
gs
shr
cltd
lahf
mov
sbb
mov
jns
imul
add
scas
or
popf
lcall
sahf
mov
sarl
rolb
mov
xchg
stos
inc
jbe
and
jmp
movsb
pop
push
cmp
sbb
mov
imul
addr16
int
inc
mov
mov
cmc
arpl
jg
lcall
and
cmpsb
inc
stos
dec
rclb
push
inc
mov
cs
mov
push
adc
and
aaa
pop
fsubr
inc
and
fs
xchg
cltd
mov
std
xchg
push
dec
adcl
cmp
cmp
sahf
stos
inc
stos
mov
dec
mov
fidivrl
sbb
mov
push
int3
and
jge
sbb
sahf
and
pop
out
mov
je
ja
pop
push
mov
push
add
mov
or
outsl
lock
in
cmc
in
mov
imul
movsb
fwait
or
insb
shl
ret
dec
insb
mov
jge
push
inc
les
ret
pop
repnz
test
lock
out
pusha
xor
push
mov
andl
sahf
dec
mov
imul
fcom
inc
xchg
out
test
xlat
sub
jmp
inc
push
pop
int3
mov
iret
pop
mov
dec
adc
mov
jp
xchg
xorb
jo
mov
pop
sbb
mov
lock
or
jecxz
sub
or
aaa
or
out
out
addr16
and
fdivr
cs
jo
in
inc
mov
pop
pop
repz
hlt
nop
hlt
jmp
cltd
mov
loope
repnz
mov
inc
pop
cmp
xor
mov
fldt
xchg
popa
sbb
test
mov
fwait
or
xor
push
jp
pop
movsl
aaa
scas
cmpsb
add
and
cwtl
hlt
insl
test
sarb
ficompl
jg
mov
faddp
cld
dec
out
mov
out
sbb
mov
sub
into
jne
add
jae
bound
cmpsl
mov
pop
mov
daa
movsl
outsb
test
lret
jbe
pop
and
loop
mov
sbb
xlat
sarl
or
stc
dec
add
out
xchg
mov
inc
cmp
or
pop
inc
aad
xor
faddp
push
jb
stos
mov
sbb
fs
test
or
cmp
sbb
or
lods
test
lret
icebp
sbb
rep
movsl
inc
fucomip
xor
imul
pop
xchg
mov
push
mov
popa
test
push
or
sbb
rcrl
shlb
cmp
mov
and
pushf
dec
push
and
out
sub
pop
push
jge
mov
mov
loope
movsl
std
pop
jae
pop
fcmovne
push
xor
and
sbb
pop
ljmp
dec
pop
idivb
out
xor
in
std
pop
xchg
pusha
fsubs
test
mov
les
dec
std
mov
outsl
xchg
mov
rclb
pushf
push
cmpsl
lret
pop
add
push
dec
hlt
mov
fwait
movsl
mov
in
notl
adc
adc
push
es
fimull
inc
aam
and
inc
loopne
xor
cld
xor
push
pop
int
or
xlat
pop
clc
and
sbb
iret
rcl
mov
mov
movsb
jnp
daa
repnz
cs
mov
adc
je
fildll
fstps
lcall
in
mov
iret
mov
xor
stos
enter
jno
sbb
dec
movsb
test
add
je
sub
xchg
ror
mov
xchg
xchg
sub
xchg
test
mov
jecxz
xor
fs
cmp
and
adc
enter
adc
mov
test
or
pop
loope
cmpsb
imul
xchg
imul
and
cli
sub
neg
gs
xchg
mov
and
in
rcll
sbb
cmp
mov
mov
cmp
test
iret
or
js
icebp
stc
loop
push
jae
add
sub
jb
push
mov
enter
in
data16
sbb
dec
fmuls
es
cltd
mov
aam
dec
xchg
aad
adc
bound
jo
out
mov
cwtl
xchg
jo
pushf
sub
aad
or
sub
sbb
xchg
insl
xchg
push
mov
mov
arpl
sub
cwtl
test
xchg
or
orl
stos
movsb
mov
sbb
jmp
sub
out
xchg
test
ja
orl
sahf
arpl
add
fimull
scas
out
js
loopne
imulb
test
rcrb
icebp
mov
es
pop
or
xor
pop
enter
sahf
sbb
enter
int
hlt
jnp
cmp
fldt
xchg
cmc
lret
mov
cltd
mov
sub
pop
insl
decb
inc
sbbl
inc
lds
sub
loopne
imul
xchg
adc
add
imul
out
mov
fbstp
and
push
cmc
movsb
lcall
pop
loope
testb
xchg
pop
daa
inc
rclb
pop
xchg
pop
leave
in
aad
ja
pop
mov
popa
lds
cmp
ja
pop
mov
inc
in
pop
adc
mov
repz
adc
adc
fwait
inc
or
cmp
js
mov
xor
dec
push
imul
bnd
mov
mov
xor
cmp
pop
jne
popf
inc
push
mov
or
mov
int
cwtl
imul
imul
and
movsl
dec
mov
shrl
xchg
mov
xchg
ljmp
inc
loope
fsubl
clc
pavgw
and
xor
das
popf
add
mov
into
fwait
push
or
mov
lods
jl
adc
out
mov
ret
js
pusha
aad
or
ljmp
push
mov
in
ljmp
dec
filds
cltd
fistl
push
imull
inc
and
sub
repnz
inc
push
enter
jns
lds
out
mov
faddl
stos
mov
repnz
nop
sahf
mov
test
mov
ret
repnz
add
dec
orl
add
addb
out
jb
mov
cmc
cmp
andl
dec
fldt
mov
jnp
push
pop
pop
jmp
push
and
push
push
daa
outsb
xor
xchg
test
or
pop
and
push
mov
or
add
xchg
xchg
cltd
mov
enter
cmpsb
xlat
sbb
jmp
movsb
cmp
sbb
aam
lea
loopne
mov
nop
out
or
loope
jp
mov
add
jmp
shlb
aaa
mov
fadds
scas
cltd
int3
jne
xlat
pop
mov
ud0
pop
outsl
sub
cmpsb
sub
mov
leave
lahf
sub
call
mov
mov
imul
xor
sbb
xchg
mov
decl
rcll
mov
xor
stos
aad
je
ss
xchg
jo
and
insl
daa
imul
mov
loop
les
sub
mov
into
fisttpll
cmc
fwait
insl
mov
sub
xchg
dec
inc
sbb
and
sbb
sbb
lret
aad
push
adc
xchg
pop
sbb
lahf
in
fldt
aad
into
dec
and
lock
xrelease
ljmp
mov
xchg
add
pop
call
aaa
mov
push
test
push
popf
add
mov
cmp
loop
leave
outsb
mov
fidivrs
pop
push
or
push
mov
xchg
and
fwait
sbb
test
adc
fldcw
and
push
xchg
add
into
out
cmpsb
sub
pusha
test
sub
adc
fldl
mov
mov
out
sbb
test
jns
sbb
std
mov
mov
call
aam
mov
adc
dec
loopne
push
inc
jb
cmp
or
cmc
and
xchg
mov
inc
lcall
subb
inc
xlat
shl
shrb
jo
rcll
adc
jmp
adc
cwtl
mov
in
scas
sbbl
xchg
rcl
sarb
pop
xor
jno
xor
pushf
test
lret
outsl
lcall
rcl
push
test
mov
xchg
sub
dec
dec
js
sub
arpl
add
test
sbb
test
sbb
ffree
repnz
mov
stos
sti
jbe
dec
addr16
sbb
lea
sbb
popa
ret
xchg
pusha
sahf
mov
lret
jp
cmp
add
xchg
sbb
loopne
xchg
mov
out
or
fists
and
lahf
pop
dec
arpl
mov
cmp
ja
js
mov
mov
cwtl
bound
push
fwait
jecxz
cmp
or
adc
mov
cmpsl
shll
jmp
es
dec
push
jge
inc
fs
adc
sub
bnd
pop
pop
cltd
push
inc
adc
in
fsubrp
sub
test
mov
xchg
scas
roll
jnp
inc
mov
xchg
and
fdivrl
andl
aam
push
icebp
aam
cmp
fs
adc
test
imul
mov
ljmp
mov
pop
and
scas
dec
jecxz
push
jnp
out
sti
xchg
push
dec
mov
add
mov
and
mov
push
ljmp
leave
jl
cmp
lods
shl
adc
cmp
sbb
or
subl
jnp
add
icebp
and
pop
inc
sub
jmp
mov
pop
cmpsl
mov
ret
mov
xchg
mov
mov
or
and
push
adc
dec
pop
xchg
pop
and
mov
xchg
or
and
pop
xchg
lock
shrl
sahf
mov
cmpsl
inc
rcll
or
and
mov
cmp
negl
mov
hlt
sub
xor
add
jo
sti
inc
arpl
sti
and
jns
mov
rolb
mov
mov
jno
fdivr
fcoml
mov
mov
lock
xchg
mov
dec
nop
ljmp
pop
push
clc
dec
and
mov
sub
pop
ret
mov
xchg
sub
add
mov
push
push
popa
sub
mov
in
xor
mov
mov
or
lret
dec
repnz
xchg
js
mov
ret
fidivs
in
push
mov
push
add
ljmp
dec
pushf
cmc
inc
das
add
fwait
mov
push
and
add
scas
out
push
pop
mov
and
push
shll
add
cmpb
ljmp
mov
insb
inc
cmp
pop
pop
sub
aam
adc
mov
in
xor
insl
mov
push
xchg
dec
repz
lock
or
and
lcall
inc
jle
pop
lcall
les
cs
in
out
mov
push
cmpsl
xor
inc
std
sub
or
nop
inc
and
xchg
pusha
jmp
and
movsl
or
sahf
mov
fwait
mov
shlb
sti
adc
dec
mov
add
lods
mov
mov
pop
aad
jnp
pop
mov
je
fwait
jmp
cltd
lds
das
cmp
or
xchg
out
add
jg
into
cltd
jnp
cmp
jp
mov
data16
push
fisubrs
insb
pop
mov
push
mov
fadd
je
out
stos
pushf
mov
mov
sahf
adc
adc
imul
cmp
lret
or
mov
cltd
fwait
add
sbb
into
sarl
xor
xor
jo
into
push
mov
movsl
jnp
ret
mov
into
sbb
push
adc
xchg
popf
cmpsb
mov
mov
jmp
xchg
lock
push
inc
repz
enter
lods
das
pop
repz
jp
lods
jge
jg
add
lods
in
cli
iret
jne
pop
cwtl
js
jmp
xchg
and
cmpsb
jl
xchg
xor
jno
jecxz
or
stc
decl
push
xor
imul
jmp
mov
push
xchg
xor
inc
decb
hlt
popf
mov
adc
fsubl
rcr
out
pop
fwait
add
lds
or
mov
adc
adc
js
inc
pop
pop
cmpsb
xchg
arpl
and
sbb
add
cs
mov
sti
repz
mov
jl
shrb
sbb
orl
orl
sbb
pop
xchg
and
je
cmc
scas
cld
dec
mov
clc
imul
andl
leave
and
inc
fdivrs
dec
cltd
sti
xor
pop
lret
push
repz
mov
mov
mov
cmc
xorl
repz
add
mov
sub
test
mov
adc
lods
and
xchg
jmp
mov
xchg
jns
out
jecxz
push
sbb
test
movsb
sub
pop
push
cmpsb
cmpsl
add
sbb
or
icebp
inc
sbb
lds
mov
push
mov
jge
ja
jne
scas
ljmp
imul
mov
insb
xchg
iret
sub
cmp
cmp
or
xchg
mov
leave
cld
out
sbb
jae
seto
jno
lahf
mov
adc
add
fwait
shlb
mov
mov
lahf
pop
subb
cmp
and
adc
sarb
dec
xor
in
pusha
nop
movsl
pop
call
jbe
mov
insl
lahf
fstpt
imul
jae
popa
dec
ja
cmp
sbb
enter
stc
mov
les
jle
push
sub
or
sub
les
sub
xchg
in
scas
mov
fildl
gs
pop
insb
sbb
js
pop
jle
stc
sub
cmp
ljmp
pushf
inc
scas
and
cmc
enter
dec
fbstp
cmpsb
in
ret
sub
jp
ja
or
movsl
push
test
enter
dec
gs
cmp
mov
cltd
pop
inc
stos
push
pop
lods
mov
loope
cmp
xor
ljmp
inc
out
dec
in
outsl
inc
out
and
call
fcmovnb
or
movsl
jno
lock
adc
push
leave
insb
in
mov
shr
call
xchg
push
into
and
outsb
push
jmp
in
xchg
lcall
dec
add
dec
mov
in
sub
gs
or
stos
mov
mov
xor
xlat
pusha
std
addr16
cmp
insl
adc
mov
pop
ret
cmpsb
pop
cs
mov
push
cmc
mov
push
or
add
js
rcll
outsb
in
xchg
push
cmp
loopne
mov
mov
out
fidivs
out
in
hlt
shrb
jecxz
lock
add
aam
mov
je
jno
out
mov
push
ds
call
scas
repz
xchg
push
xchg
xchg
adc
inc
and
or
push
push
mov
inc
out
jns
stc
lock
jmp
out
add
push
cmc
dec
sub
mov
mov
popa
xlat
jno
mov
or
and
subl
jg
cmc
jecxz
mov
or
xor
push
inc
test
xchg
in
sbb
mov
out
and
pop
lret
xchg
call
and
adc
cltd
sti
data16
ja
mulb
mov
pop
jne
les
cmp
mov
dec
test
pop
cmpsl
xchg
jmp
outsl
sub
push
adc
fnstsw
rolb
shll
in
fs
mov
lods
insb
xor
mov
ja
out
insb
cmpsb
lahf
mov
cmp
mov
cltd
gs
rcll
stc
cli
mov
mov
mov
dec
out
mov
jp
push
mov
pop
cs
sbb
dec
lret
and
adc
mov
test
cmpsl
sub
mov
in
fildl
xchg
negl
aas
fs
and
adc
inc
inc
sbb
jae
adc
xlat
and
inc
xor
out
adc
mov
push
cmpsl
mov
imul
dec
test
xchg
scas
dec
cmp
insb
lds
mov
out
push
lret
int3
mov
movl
sub
shrd
shlb
pop
test
mov
in
jecxz
jge
and
or
cmp
fcompl
les
lds
sbb
mov
jo
push
push
ret
push
mov
cmpsb
pop
or
pop
fdivs
mov
fldl
icebp
dec
ljmp
out
xchg
push
pop
add
lods
jnp
movl
mov
stos
sbb
mov
or
pop
sbb
xchg
or
push
cltd
aaa
nop
es
push
out
ret
sbb
jl
loope
je
pusha
mov
pushf
mov
mov
mov
jne
dec
xor
test
or
mov
rcr
repz
pop
mov
or
and
mov
loope
scas
inc
je
inc
popf
movb
xor
sub
xchg
fstl
sbb
aaa
into
pop
cmp
pop
xor
mov
adc
adc
call
jne
xor
loopne
jne
mov
push
inc
cmp
testb
mov
dec
xor
inc
or
cmp
in
xor
adc
sbb
sub
out
cwtl
movsb
or
inc
push
adc
push
popa
outsl
xchg
in
in
cmp
icebp
popf
jae
cmp
call
addl
xchg
enter
dec
jl
insb
xor
jnp
fbld
imul
and
inc
cltd
add
add
loop
fs
push
mov
ret
cmpb
daa
xchg
mov
lret
sub
mov
icebp
enterw
stc
mov
and
push
cmp
popf
mov
das
pop
inc
out
rclb
dec
push
repnz
fs
xchg
cmp
cmc
inc
push
in
ret
mov
jle
stc
aas
jb
repnz
insb
mov
xchg
pop
mov
add
scas
popf
cmp
sub
fstpl
mov
aaa
and
cmp
nop
xor
fidivl
adc
loope
add
and
or
out
push
shrl
cvtpi2ps
les
dec
cmp
test
in
xor
out
jp
aam
push
lcall
xchg
adcb
ss
mov
std
or
inc
mov
je
dec
xchg
fidivrl
adc
add
or
jne
inc
stos
sub
push
or
out
sbb
add
jne
movsl
repz
xlat
sub
lret
mov
jb
mov
fsubr
and
gs
mov
and
dec
pop
push
push
mov
jp
inc
icebp
popa
adc
lcall
jns
push
jno
jge
sbbl
mov
std
dec
add
aad
and
je
xchg
ds
xchg
cmp
stc
mov
xchg
inc
pop
jne
lret
enter
in
sti
js
sub
mov
mov
dec
adc
movsb
cmpsl
sbb
or
and
faddl
in
mov
sbb
sub
mov
push
sub
dec
shl
jle
sti
xchg
push
pusha
sbb
outsb
or
mov
out
push
mov
sbb
fisubrs
adc
popa
adc
xchg
xor
jp
mov
clc
cltd
aad
icebp
cmpsb
fucomp
xor
jmp
cltd
xor
sbbb
dec
pop
ds
xlat
inc
outsb
cmc
adc
fisubs
xchg
icebp
push
das
ret
jl
out
inc
cli
pop
cli
pop
out
call
cli
mov
lret
out
es
mov
loope
loope
fdivs
mov
inc
into
insb
mov
test
add
lret
add
loopne
sbb
mov
mov
js
in
or
push
jnp
xchg
pop
and
mov
insl
xor
sbb
dec
inc
in
repz
xchg
inc
xchg
lods
cmpsl
mov
test
fstpl
mov
dec
jbe
add
sub
add
leave
loopne
sti
jle
sbb
sti
inc
mov
xor
stos
out
adc
mov
push
xchg
pushf
pop
pop
xchg
xchg
iret
rorl
out
push
push
repnz
cli
mov
das
jne
push
sbb
push
cmpsb
and
dec
pop
sub
xor
and
sub
mov
je
gs
scas
in
daa
xchg
mov
shll
lea
sbb
lods
push
add
aaa
mov
lods
add
cmp
aas
sub
sub
sbb
adc
pop
dec
add
push
nop
int
or
push
jb
dec
pop
mov
pop
sbbl
sbb
mov
mov
mov
pop
int
xor
mov
out
jmp
cmp
adc
cmp
aad
fsubl
cmpsb
das
dec
pop
adc
out
fwait
mov
adc
mov
sub
stos
push
sbb
roll
rorl
pop
nop
mov
cld
xor
scas
mov
or
arpl
out
fldcw
lock
stos
je
data16
sbb
or
jg
bound
addb
pop
ret
mov
inc
jmp
pushf
sub
jmp
test
pop
add
cmpsb
inc
out
jnp
pop
push
adc
mov
daa
and
loopne
inc
sti
cmc
add
movsb
dec
xchg
sarl
ficompl
sbb
repz
mov
or
mov
mov
movsl
addr16
xchg
xorl
inc
jnp
mov
movsl
sbb
sbb
sub
lahf
pop
jo
push
xor
mov
xchg
frstpm(287
cmpsb
and
into
push
xorl
add
hlt
loope
xchg
fmul
insb
xchg
dec
cmc
pop
adc
fistpll
add
fmuls
mov
push
pop
sub
inc
mov
mov
and
sar
arpl
dec
push
push
jecxz
pop
push
lret
leave
lret
mov
ret
mov
cltd
fisttps
test
cmp
push
push
cmp
mov
das
in
pop
lods
ljmp
mov
jbe
sbbb
adc
stos
sbb
push
mov
movsb
decb
lcall
sub
fnstsw
jne
jmp
mov
xor
mov
insl
inc
psrlw
sub
mov
inc
push
fstp
shll
xchg
mov
fcmovne
xorl
repnz
js
iret
sbb
cmp
push
inc
jecxz
sub
fucomp
inc
mov
xor
mov
mov
inc
xchg
loopne
movsb
pop
inc
outsb
adc
lahf
xchg
leave
xor
out
mov
test
mov
inc
loope
cmp
cld
int
mov
mov
mov
icebp
push
mov
mov
xchg
les
mov
je
repz
lock
xchg
add
orl
lods
in
movb
sub
dec
gs
cld
hlt
mov
push
and
imul
insb
lret
insb
mull
jle
adc
je
jo
push
addb
pusha
jnp
pop
sbb
test
jae
add
cltd
or
and
loop
push
fcompl
add
movsl
xor
dec
pop
shlb
xchg
lods
dec
mov
jb
sub
in
aam
ret
push
leave
shrb
scas
pop
cld
insb
xchg
xor
out
lret
inc
not
int3
push
jns
jecxz
push
dec
rorl
xchg
dec
sub
sbb
test
or
gs
pop
push
mov
xor
test
lock
in
out
mov
sbb
xorb
je
les
mov
fdiv
in
mov
xchg
aam
data16
and
adc
aas
in
mov
nop
daa
push
pop
dec
addr16
mov
cmp
and
jecxz
and
sbb
cmpsl
cmpsl
or
test
cmpsl
sub
lcall
sbb
mov
ss
pop
repnz
setne
or
mov
sbb
sbb
jo
sti
sbb
add
jmp
pop
and
test
ja
in
xchg
xchg
decb
push
cli
push
jae
xchg
leave
mov
push
andb
or
pop
insb
and
cltd
mov
test
imul
mov
iret
push
and
pop
out
call
sbb
mov
jecxz
inc
fcoml
vunpckhps
mov
ret
sbb
fisubl
mov
movsl
mov
xor
lds
into
popf
insb
lods
mov
cmpsb
gs
xchg
cmp
cmc
repnz
and
pop
imul
inc
jg
cmpl
aam
push
inc
xchg
daa
jl
andb
pop
cld
dec
aas
lods
xor
adc
jmp
out
sbb
mov
mov
mov
sub
mov
jno
pop
call
lea
sbb
dec
subl
mov
cmp
sub
icebp
sub
sarl
inc
clc
mov
sub
adc
lea
mov
jae
inc
mov
in
in
fmul
cmp
jmp
andb
lcall
push
push
fistps
inc
shll
dec
jae
mov
or
pop
addr16
xchg
fidivrl
outsb
ljmp
push
push
fcomi
pop
cmpsb
out
jmp
mov
mov
dec
call
xchg
mov
inc
push
out
xchg
sub
and
or
jb
inc
mov
xchg
xchg
jmp
outsb
xlat
cwtl
mov
xchg
mov
insb
cmp
jbe
mov
jg
jnp
aam
rcl
popa
pop
bound
cmpsb
cmp
and
lds
pop
lds
aam
shll
pop
jge
mov
jecxz
and
xchg
push
into
ljmp
push
dec
push
fbstp
aad
icebp
ljmp
pop
enter
in
sub
dec
mov
aam
xchg
jle
es
sbb
cmpsb
jbe
addl
cli
addr16
push
dec
inc
push
mov
cli
insl
and
das
data16
and
xor
pop
cmp
mov
mov
aas
dec
inc
fisttps
divl
hlt
xchg
loopne
cmc
pushf
xchg
cs
cmpsl
sub
push
les
sbb
dec
mov
mov
mov
test
pop
push
dec
sbb
mov
mul
jb
sarb
scas
pushf
cmp
clc
xor
insb
inc
and
int
jae
xchg
das
loope
cmp
rorl
roll
arpl
push
add
dec
jmp
pushf
imul
in
lea
cmp
pop
jg
or
sahf
and
and
pop
jne
fsts
test
fdivs
sahf
insb
imul
enter
adc
loop
sub
in
loope
in
add
les
or
pusha
add
mov
sub
popa
dec
xor
inc
loope
add
imul
in
in
setnp
mov
in
mov
or
cmc
insb
mov
push
leave
jmp
lock
adc
mov
scas
test
mov
fidivrs
xor
repnz
mov
xchg
mov
test
in
loope
mov
mov
xchg
adc
sub
pop
mov
iret
js
or
nop
pop
and
cmp
mov
pop
add
sbb
fwait
and
sbb
popf
lods
lret
sahf
cmp
je
dec
xor
pop
in
push
xchg
les
xchg
ds
jbe
mov
sub
mov
mov
sbb
loop
jns
sbb
push
mov
mov
fnsave
jecxz
dec
sub
xchg
scas
stos
mov
ficompl
sbb
mov
jno
push
test
mov
adc
sti
loope
gs
lea
cmp
pop
xor
imul
xlat
mov
cmp
push
cmp
stos
dec
fwait
sti
inc
int
dec
sahf
inc
negl
inc
jecxz,pt
mov
push
xor
sbb
sub
imul
or
push
lods
mov
mov
or
sbb
pop
out
pushf
mov
mov
nop
mov
dec
testl
push
pop
dec
push
mov
call
and
add
iret
fistl
dec
adc
lret
push
pop
pop
push
jge
and
lods
sbb
test
loopne
jno
sbb
cmp
mov
mov
push
cmc
mov
repnz
mov
negl
mov
xor
pop
mov
clc
mov
mov
cmpl
hlt
icebp
jae
mov
fs
stos
out
gs
icebp
fsts
add
jp
cmp
sahf
ljmp
adc
hlt
test
test
ds
dec
in
iret
in
push
shll
arpl
xchg
pop
icebp
xlat
mov
xchg
pop
stc
imul
add
adc
xchg
push
pop
and
lcall
cmpsl
or
faddl
in
fildll
sbb
lods
movsb
mov
push
sbb
jmp
mov
test
loop
jle
and
mov
cmp
add
inc
mov
testl
mov
cmpsb
push
cmpsb
inc
mov
sub
popa
push
push
cltd
orl
inc
mov
cmp
ss
das
jne
das
test
jmp
pop
stc
mov
add
sti
int3
and
pushf
bound
adc
jno
and
cmp
hlt
cmp
fists
xor
ficompl
and
js
push
stc
out
dec
fstpl
jp
imul
addl
lds
mov
pop
mov
jne
sbb
jnp
dec
mov
bound
fucomi
adc
mov
cld
xor
push
mov
jecxz
and
mov
out
cmp
cmp
push
cmp
xor
out
push
mov
mov
and
clc
dec
in
jp
mov
sti
fildl
imul
push
mov
in
adc
cmpsb
outsl
test
lods
lds
jl,pt
push
xchg
test
leave
fcmovnb
repnz
and
mov
ss
xchg
pop
dec
out
out
idivb
je
xorl
test
jmp
dec
movsb
movsb
addr16
in
mov
mov
outsb
push
pushf
sbb
push
hlt
push
loopne
or
mov
push
in
adc
sub
out
pop
pop
dec
in
mov
cmp
lods
aad
jne
add
loop
jne
inc
hlt
es
mov
mov
push
jo
testl
mov
cmp
mov
rcrl
mov
push
mov
aam
in
push
mov
sub
pop
ja
xchg
mov
cwtl
sbb
or
adcb
pop
ret
push
mov
xor
pop
xchg
addr16
add
xchg
jbe
orb
adc
jo
push
mov
push
loope
pop
in
mov
pop
jmp
push
sub
sbb
and
or
fsts
sbb
jne
rcl
cltd
cmp
test
bound
mov
std
nop
pushf
std
jmp
outsl
enter
test
mov
cli
leave
push
cmpsl
cli
loope
mov
sub
jge
sahf
hlt
sub
call
jle
mov
aam
inc
mull
popa
inc
mov
mov
lods
and
jbe
out
xchg
add
sub
mov
aad
mov
leave
cli
pop
mov
sbb
pop
or
in
stc
test
mov
ljmp
sti
fwait
mov
sub
dec
idivl
and
jecxz
push
aam
mov
xchg
mov
gs
test
cmp
lret
insl
push
and
sahf
or
popf
jnp
hlt
jge
inc
mov
ja
pop
inc
cmp
inc
lret
inc
mov
notl
xor
jno
pusha
mov
pop
inc
mov
stos
lcall
jmp
cmp
mov
sbb
stos
cmpsl
call
aaa
and
aam
stos
in
repnz
or
cmpsb
sti
push
or
imul
imul
cmpb
jae
mov
jbe,pn
mov
and
test
inc
mov
and
repnz
loope
mov
testl
test
jge
mov
cmpsb
xchg
ss
fistl
pop
mov
ret
push
sub
mov
insb
adc
adc
xchg
lock
jnp
jp
cmp
mov
loopne
dec
xchg
pop
mov
jne
mov
test
popf
sub
or
pusha
push
das
fcomip
sahf
mov
mov
out
outsl
xor
push
imul
je
add
rorb
mov
adc
cwtl
arpl
mov
add
jb
mov
sbb
mov
adc
lret
ljmp
jl
fsubrl
cld
push
mov
add
jb
mov
bound
jmp
dec
hlt
mov
sub
div
sub
adc
es
jns
enter
sbb
sub
jne
mov
cwtl
aas
std
xor
imul
jns
mov
or
sbb
push
mov
int3
daa
ds
xchg
xchg
repnz
lahf
dec
or
or
mov
sub
repnz
fs
call
fnstenv
dec
add
imul
mov
mov
mov
mov
mov
fs
mov
jno
sub
stos
mov
out
shr
lods
pusha
mov
pusha
pop
repz
mov
jp
inc
clc
mov
rep
loop
shrl
pop
aam
enter
testl
jmp
jg
aaa
push
dec
out
cwtl
addr16
lret
lret
aam
pop
mov
lock
jne
cmp
pop
mov
inc
outsl
add
xor
mov
adc
call
out
jl
mov
in
dec
and
add
mov
or
add
mov
push
mov
add
jge
and
mov
push
movsl
sub
mov
xchg
int
cmp
pop
pusha
loop
add
gs
rcrl
dec
mov
xchg
jb
nop
cmc
divb
dec
dec
mov
sbb
sub
enter
jp
inc
jp
leave
or
mov
push
mov
in
xlat
mov
cmpsl
stos
mov
fs
leave
call
jmp
cmp
mov
push
cld
jae
test
call
int
mov
mov
inc
cmp
lods
push
xor
lods
dec
and
dec
pop
pop
sarl
inc
in
xchg
icebp
in
push
repnz
mov
ficoml
fsubrp
mulb
mov
mov
movsl
ds
mov
push
pop
push
push
divb
mov
addl
dec
aad
call
jbe
xor
loopne
jl
popf
jmp
xchg
loopne
adc
xchg
fildl
push
dec
stc
sbb
lds
lds
pop
lds
lock
stos
sub
cmpsb
mov
mov
out
outsl
pop
sub
test
scas
adc
dec
lahf
popa
shl
xor
dec
mov
mov
dec
in
lock
out
and
cmp
jae
cld
nop
in
mov
call
sbb
fs
data16
cmp
movsb
pop
adc
clc
repz
icebp
pop
lret
out
sub
sbb
cli
jo
enter
add
in
lret
clc
xchg
gs
jmp
stos
and
jmp
jl
cli
test
dec
lcall
out
test
sbb
mov
xchg
mov
push
les
call
and
jbe
pop
xchg
mov
into
mov
lods
sarb
push
fwait
icebp
test
call
js
movsb
mov
int
ret
loope
cmp
sub
jns
jnp
jge
mov
sbb
mov
dec
sbb
xchg
mov
pop
dec
test
jne
add
shl
xchg
lret
lahf
in
sar
sbb
movsb
xor
movsl
cmp
cmp
xchg
stos
or
xor
cltd
mov
dec
repnz
int
lcall
out
sbb
andl
loope
outsb
in
pop
mov
adc
mov
cmpsb
xchg
pop
imul
push
mov
test
mov
mov
push
sbb
xor
js
cs
nop
imul
xor
jb
stc
insb
enter
jl
jl
icebp
push
add
xchg
ds
incb
cmp
add
js
push
mov
pop
xchg
sbb
enter
and
sbbl
lods
jecxz
push
icebp
xchg
mov
test
jne
jne
pop
hlt
jb
pop
aaa
push
mov
xor
scas
jnp
out
insl
in
jecxz
cs
aad
fwait
xchg
sti
ljmp
jecxz
inc
sahf
jae
mov
and
mov
cmpsl
movsl
add
mov
test
icebp
lds
mov
mov
mov
pop
dec
dec
mov
shlb
sahf
mov
je
xchg
movsl
sub
mov
push
pop
push
notl
xor
sbb
nop
ja
sbb
adc
repnz
subb
and
add
and
mov
xor
mov
pusha
jno
add
std
xchg
mov
inc
mov
ljmp
scas
and
fst
fwait
mov
testb
jecxz
scas
mov
pop
dec
imul
sbb
lods
mov
mov
adc
jl
sub
imul
sub
fildl
in
cmpsl
sub
lods
inc
out
add
mov
xor
xor
inc
jnp
mov
rclb
inc
cwtl
cmp
mov
and
int3
push
addr16
aas
lahf
add
ret
es
stc
jb
idivl
iret
cmc
cmp
xchg
shlb
fldcw
mov
jno
lret
mov
mov
sbbl
test
mov
arpl
pusha
clc
aad
jge
in
decl
cmpsl
pop
inc
das
or
popf
fildl
jo
imul
cmpsb
scas
xor
push
int3
push
les
dec
push
ror
cwtl
jmp
fwait
int3
cld
cmp
jnp
mov
int
cld
push
sub
jg
cmp
xlat
push
mov
mov
stc
out
xor
cmc
push
in
xor
movsl
mov
jmp
xor
cwtl
and
js
dec
movsb
jmp
into
pop
mov
push
mov
adc
xchg
cmp
dec
pop
push
out
add
cli
fldcw
je
xchg
fistl
and
push
ja
push
xchg
jae
fwait
in
rcrl
outsb
pop
jno
push
jnp
mov
sub
shl
sbb
dec
jnp
out
rcrb
push
sub
mov
xor
testb
push
jmp
shr
popf
js
pop
movsb
aaa
and
adc
cmovle
in
pop
pop
hlt
inc
cmp
dec
int3
adc
push
cmpl
jne
push
jmp
xor
jne
sbb
mov
inc
repz
dec
movsl
subb
cmp
mov
pop
jae
out
and
dec
add
adc
sarb
cmp
out
lret
fmul
jns
ja
cltd
sbb
cwtl
jno
pop
inc
rorl
push
adc
jb
fistps
mov
mov
sub
push
bnd
or
mov
or
push
jp
sub
and
xor
mov
add
lods
ds
mov
mov
lahf
cmp
test
outsb
push
xor
imul
fnsave
pop
xchg
movsl
mov
adc
lods
je
mov
je
call
imul
loope
jecxz
pop
dec
into
adc
std
and
bound
movsl
cmc
or
andps
mov
into
adc
lret
inc
int3
lds
lret
jl
add
mov
fdivs
test
stos
mov
pop
cmpsb
sub
and
mov
push
jns
xchg
jns
andl
pop
rcr
jne
mov
mov
push
stc
push
out
mov
cmp
daa
mov
aam
xor
repz
mov
out
negl
into
out
loopne
sahf
push
test
mov
push
jp
inc
pop
test
out
rolb
cli
sbb
cmp
pop
jl
push
pop
mov
gs
cli
out
les
xchg
rcl
pop
jge
dec
mov
mov
js
pop
and
xchg
sub
in
and
xorl
pop
test
je
mov
jns
cmp
in
or
push
ss
pop
xor
and
sbb
sub
cwtl
lcall
ret
xchg
sub
sbb
fnstcw
and
or
cltd
mov
inc
and
inc
orb
mov
fcmovnb
jae
pop
push
or
das
test
sbb
add
mov
loope
push
mov
mov
jno
inc
sbb
xchg
into
jno
and
inc
mov
lahf
imul
xor
sub
cmp
mov
pop
or
mov
mov
rclb
pop
push
xor
inc
ljmp
xchg
or
je
int3
inc
cmpsl
mov
scas
jb
and
aam
dec
sbb
out
add
ret
pop
cwtl
sbb
and
push
add
mov
fadds
or
fdivs
jge
inc
mov
add
ret
popa
sub
adc
pop
in
mov
movsb
mov
mov
loope
shl
mov
iret
push
in
pop
add
jne
and
pop
jp
or
mov
pop
and
je
mov
stos
push
dec
or
in
int3
and
and
leave
out
movsb
imul
cmp
insb
aas
xchg
push
cmp
dec
jg
insl
call
cs
aaa
fs
and
scas
movsb
jb
popf
or
int
mov
cld
inc
rcrl
fcmovne
mov
out
faddl
repz
ja
call
push
sbb
mov
test
add
in
and
aad
jecxz
test
sahf
pop
loopne
or
scas
push
and
push
push
cltd
cmpsl
cwtl
fcmove
bound
fwait
sbb
ds
mov
cmp
and
fsubrl
fcoms
xor
lods
aad
jb
adc
fmulp
rcll
fsubrl
insb
mov
lret
cmpsl
jnp
mov
daa
aad
nop
pop
fistps
pop
xchg
push
and
insl
popa
cli
stos
and
adc
repz
lret
repnz
mov
dec
inc
lret
in
mov
shrb
or
inc
inc
mov
adc
aad
call
out
mov
cmpsl
int3
out
sahf
fnstcw
loopne
mov
test
addr16
dec
iret
xor
or
push
daa
lods
movsb
bound
aad
rcrb
mov
push
xchg
jmp
jne
leave
sub
pushf
mov
dec
fstps
sub
jnp
jnp
lods
inc
dec
mov
aad
mov
bswap
and
leave
test
icebp
stc
mov
lock
dec
mov
mov
nop
cld
aaa
mov
sub
sarb
dec
and
leave
in
int
mulb
pop
ficompl
mov
subl
mov
int
jmp
lock
repnz
stc
cmp
pop
jbe
pop
pop
lret
addl
jns
sub
push
jae
mov
jb
mov
shlb
push
or
xchg
and
xchg
and
ljmp
out
rcll
sbb
push
push
inc
out
push
xchg
push
std
scas
bound
dec
and
fwait
mov
mov
xor
fcomi
mov
lock
in
aam
dec
mov
mov
stc
pop
sub
hlt
xlat
icebp
push
je
xor
cwtl
mov
in
pop
or
sbb
pop
push
add
and
dec
fs
jb
jmp
fwait
mov
sbb
jl
sbb
rcrl
mov
sub
loopne
mov
sub
mov
xor
mov
lock
imul
xor
jae
xchg
cmc
das
adc
hlt
mov
pop
xor
rcll
jbe
in
daa
addl
repz
sub
out
jmp
repnz
add
jmp
adc
mov
jno
cs
mov
aam
je
mov
pop
cmp
lea
xor
xor
in
lods
call
pop
ret
sahf
lret
add
pop
fwait
sub
cmp
pop
pop
retw
mov
xor
sbb
pop
fwait
pop
fldcw
push
ljmp
mov
and
in
pop
dec
push
jmp
int3
mov
cmp
shlb
test
mov
aad
mov
fs
inc
jp
jle
and
push
sub
push
lahf
mov
scas
xor
sbb
mov
and
loope
push
and
adc
mov
scas
xchg
mov
and
jmp
dec
adc
push
insb
cmp
out
pop
dec
cli
pop
cltd
inc
inc
std
fcmovne
sub
sbb
dec
sbbl
lea
xchg
dec
lret
sbb
jp
insb
cmpsl
pop
cmp
repnz
sti
xchg
or
and
pop
push
jmp
shlb
hlt
jmp
popf
rorb
mulb
pop
dec
notl
rclb
fcomi
daa
mov
stc
cltd
jl
insb
mov
test
xor
cmp
push
jecxz
pop
xchg
jecxz,pn
inc
rclb
fisttpl
orl
sub
jle
aam
or
pop
push
mov
addr16
cmp
mov
rorb
adc
lret
cmp
sbb
sub
jecxz
mov
add
loope
pop
stc
jg
sahf
neg
imul
mov
and
inc
mov
arpl
xchg
ja
fcmovb
sbb
cld
jo
mov
dec
mov
jmp
sbb
fcomps
xor
ret
dec
sbb
mov
jno
or
sbb
xchg
xlat
ret
mov
mov
jo
mov
jecxz
fisttpl
dec
push
in
and
clc
jnp
jae
pop
xchg
mov
jbe
jge
fcmovnbe
mov
sbb
or
mov
mov
mov
mov
lods
dec
push
hlt
lret
and
ret
or
sbb
rorl
xor
fs
jmp
mov
mov
fcoml
sbb
pop
dec
cmpsb
mov
cmpsb
arpl
nop
mov
push
das
push
inc
jne
and
xchg
sarl
lods
push
push
xor
mov
stc
pop
mov
lds
dec
sub
and
mov
in
jnp
jmp
xor
or
out
mov
sub
daa
jnp
push
test
aaa
andb
or
ret
fs
les
push
je
out
mov
lahf
test
mov
outsl
dec
cmp
mov
cmpsb
mov
sbb
sbb
add
aam
pushf
lcall
mov
dec
push
or
movsl
xor
jl
aad
pop
hlt
jb
test
or
test
mov
ret
mov
movsl
dec
mov
sbb
les
push
ret
sub
push
xlat
dec
cmp
andb
lods
fldcw
pop
mov
pop
neg
mov
cmpsl
shrb
mov
outsb
dec
or
and
pop
int
mov
push
pop
xchg
setae
fwait
xchg
mov
cmpsl
sub
in
insb
jo
cli
xchg
push
pop
out
adc
jno
inc
imul
repnz
mov
sub
adc
mov
cmpsl
mov
adc
subl
gs
cmc
cmp
xor
insb
rolb
cld
cmpsb
orb
repz
jbe
adc
or
std
imul
or
jp
or
cmp
je
movsb
hlt
popl
rcrl
adc
adc
and
sbbl
stos
add
in
sbb
incb
xchg
cld
or
xchg
movsl
fwait
xchg
in
inc
jbe,pt
xchg
lds
cltd
jnp
push
mov
popl
scas
mov
cmp
mov
lods
cmp
movsb
cmp
adc
dec
mov
and
sbb
ret
pop
push
dec
out
mov
mov
sti
or
daa
dec
and
sbb
out
fcmovnbe
pop
jmp
lods
popa
and
pushf
mov
sbb
jl
and
jb
movsb
fwait
hlt
xor
gs
out
inc
jne
and
in
or
hlt
lods
lcall
movl
data16
jns
mov
cmp
and
pop
dec
outsb
pop
xchg
mov
ljmp
push
jno
mov
and
insb
fwait
clc
lods
jne
mov
in
std
rcrb
dec
daa
xor
fs
jns
jne
xor
jbe
inc
iret
and
std
sbb
sbb
aaa
inc
scas
mov
inc
jne
sti
aad
adc
repnz
mov
enter
or
icebp
sbb
loope
mov
mov
aad
jo
mov
pop
mov
aam
insb
mov
gs
lock
shlb
push
pop
add
push
add
mov
les
in
mov
sbbl
sub
xlat
sahf
or
inc
jp
in
xor
and
cmp
insb
popl
cmpsb
jg
dec
push
dec
cmp
mov
stos
aas
cmc
and
jl
stos
add
mov
aad
leave
mov
imul
inc
pop
cli
pop
leave
push
mov
rorl
into
push
jmp
jp
in
add
hlt
push
fldenv
mov
cmp
mov
sti
jmp
xor
scas
cs
mov
or
mov
xlat
mov
call
sub
inc
add
bound
fmul
sbb
decb
and
add
mov
push
sbb
pcmpgtd
int3
aas
add
cwtl
pop
pop
xlat
pop
mov
add
cmp
lods
loop
jp
mov
mov
leave
sbb
sbb
push
mov
clc
push
imul
inc
mov
call
mov
cmp
lea
xlat
sbb
es
rsqrtps
xlat
pushf
mov
or
push
adc
mov
pop
call
jle
mov
ss
add
adc
bnd
jmp
cltd
push
lds
pop
mov
xchg
test
btc
outsl
and
lock
pop
sahf
cmp
dec
mov
scas
dec
xor
push
add
out
add
cltd
xor
mov
mov
mov
aam
hlt
scas
movsl
xor
fwait
mov
lahf
dec
jnp
dec
mov
inc
mov
inc
out
jl
or
leave
cmp
pop
inc
popf
imul
jl
cld
mov
cld
lods
inc
bound
ljmp
cmpsb
sbb
jmp
and
mov
insb
lds
mov
ljmp
aad
cs
mov
loopne
pop
dec
orb
lcall
jno
xchg
mov
jbe
jmp
lods
and
dec
sub
sub
add
loop
mov
aaa
jne
aaa
icebp
jl
mov
rcrb
mov
cltd
dec
lcall
test
and
ret
cmpsl
lods
in
das
repz
pop
xchg
dec
nop
sub
jns
cli
movlps
and
jp
ja
data16
shlb
push
sub
jne
push
fistpll
roll
movb
push
lret
dec
cmp
lock
popf
jne
jno
cmp
jb
sub
jge
mov
mov
ss
jecxz
lret
dec
mov
push
or
les
fildl
jbe
sub
pop
fs
aaa
cwtl
pop
push
sub
xchg
test
call
inc
insl
cmpsl
out
push
add
repnz
mov
push
test
adc
jae
push
add
test
in
mov
jg
cmpsb
xchg
inc
and
std
or
imul
stos
lock
lret
cli
sbb
sbb
jg
lahf
movsl
inc
jecxz
in
sbb
movsb
cmp
movsb
addb
sbb
and
jo
xchg
cmp
js
pop
mov
push
test
or
imul
iret
push
add
jne
pop
jmp
jns
adc
stc
lods
aam
out
jno
lods
mov
sub
cmc
xor
jp
test
pop
add
jg
mov
xchg
sbb
cli
insb
ljmp
fnsave
in
ljmp
or
sbb
sub
lret
loope
mov
adc
jno
mov
xchg
in
pop
xchg
out
add
adc
sti
jb
fcmovbe
nop
mov
mov
push
sub
outsl
add
lret
in
mov
js
mov
push
fnstenv
fs
mov
inc
test
stos
push
mov
pop
jge
cli
xchg
or
bswap
fldt
cmc
mov
test
inc
aaa
jbe
or
lret
jmp
cmpsb
sti
shlb
aaa
sti
cmpsb
ret
jecxz
mov
negb
or
mov
fld
xchg
jbe
adc
pop
jmp
adc
mov
test
je
push
out
xchg
ss
pop
jmp
xchg
mov
push
mulb
jp
and
and
stos
mov
push
hlt
mov
mov
lcall
scas
icebp
and
cld
cmc
icebp
lss
mov
fisubrs
sub
hlt
into
iret
test
nop
sub
adc
std
sbb
jno
std
aam
lret
cmp
mov
out
fbld
push
mov
fwait
jnp
mov
vpunpckhdq
push
pop
xlat
aad
mov
mov
test
mov
push
jg
mov
daa
or
cmp
in
and
bound
and
inc
int
mov
add
cmpsb
pop
pop
fmul
dec
cmp
sbb
add
leave
lea
stc
loopne
in
in
mov
shl
stos
xor
push
and
loopne
gs
xor
imul
push
xchg
xor
and
adc
mov
in
stos
lret
negl
mov
cmpsl
cmp
loop
hlt
iret
insb
or
xchg
add
outsb
xor
lock
lea
mov
push
mov
push
ficompl
int
popf
aad
xor
rolb
jmp
fs
rclb
call
xor
enter
push
mov
test
push
aam
inc
xchg
jns
iret
mov
in
push
mov
pusha
adc
mov
inc
sub
xor
stos
push
pop
mov
shr
aad
sbb
push
leave
iret
shrl
push
jmp
mov
mov
test
popf
out
rcl
lahf
imul
and
sbb
mov
lods
andb
dec
outsl
sbb
lds
mov
and
or
inc
mov
mov
stos
jnp
jns
pop
mov
fistps
lcall
sbb
sbb
and
mov
push
test
jl
and
cs
movsl
cli
loop
xchg
add
and
pusha
jle
and
xor
mov
rolb
push
xor
mov
push
out
sbb
mov
imul
arpl
mov
fidivrs
mov
mov
icebp
sbb
ds
jp
push
sti
int3
jmp
dec
clc
or
and
nop
xor
mov
call
push
cmpsb
sub
xchg
shll
test
vmread
cmp
sti
fdivrs
jae
sbbb
loopne
inc
and
mov
xchg
fistpll
cmpsb
fwait
jne
icebp
insb
loop
push
mov
xchg
dec
pop
pop
gs
jmp
xor
cltd
jle
sub
icebp
aad
fsubr
fcmovne
pop
ljmp
push
adcb
sahf
and
leave
hlt
mov
push
in
adc
push
movsl
pusha
mov
es
test
fwait
loopne
sbb
cmc
add
insb
sbb
mov
insb
xchg
lock
dec
dec
imul
pop
sub
push
cmp
flds
lea
push
jns
cmp
sbb
jmp
add
test
test
push
or
push
push
push
fidivl
in
push
and
inc
cmpsb
aam
sbb
mov
xlat
cmp
js
lds
xchg
mov
ficoml
and
sbb
fisubl
pop
in
mov
sbb
stos
ljmp
es
jne
mul
push
test
mov
imul
pop
loope
pop
movsl
pop
test
and
lar
js
fsub
mov
xor
aad
inc
fiadds
out
push
mov
sar
mov
add
inc
xchg
or
or
pushf
pushf
inc
or
nop
out
int
or
mov
out
adc
cmp
mov
or
dec
dec
and
xor
or
cmp
cs
ja
mov
xchg
mov
mov
or
loope
inc
ret
fbld
sbb
stc
lret
popf
incb
xchg
int
arpl
or
sbb
ss
sub
mov
lea
stc
dec
dec
ja
dec
push
inc
sbb
inc
sbb
pop
push
mov
test
cmp
lahf
insb
out
dec
push
push
outsl
es
sub
cmp
out
loop
fldenv
dec
mov
xchg
add
std
jo
mov
das
add
or
sub
xchg
mov
jbe
stc
and
mov
add
sub
sub
rcr
mov
data16
setl
inc
mov
mov
fs
test
jmp
test
ss
roll
mov
rcl
sbb
in
xorb
jecxz
bound
std
mov
adc
adc
mov
adc
inc
pop
add
int
and
sbb
aam
mov
fdivs
daa
cltd
sti
push
cmp
dec
inc
pop
dec
dec
shlb
xchg
test
mov
hlt
pushf
out
add
cmp
sbbb
jg
iret
adc
dec
cmpb
imul
outsl
mov
in
mov
cmp
imul
dec
pop
sbb
mov
adc
sub
cmp
cmp
pop
or
call
jl
aas
mov
fs
stc
dec
xor
popa
xor
ja
out
sbb
ror
mov
ret
push
arpl
icebp
iret
xor
pop
pop
inc
jae
stc
sub
mov
mov
testl
in
movsb
ret
cmc
inc
push
xor
es
adc
out
mov
mov
mov
es
in
fwait
mov
fnstenv
and
jmp
and
lods
cmpsl
cmp
push
nop
inc
and
pop
mov
repnz
mov
dec
mov
adc
ss
dec
mov
jecxz
xor
xor
enter
pusha
lock
pop
mov
scas
loopne
mov
in
push
data16
cld
int3
jge
inc
lds
dec
or
jae
hlt
adc
mov
push
lea
ljmp
adc
sbbl
jle
rorb
jmp
fcmovnb
lret
mov
call
pop
push
push
mov
insb
fwait
xchg
clc
gs
mov
shlb
movsb
stos
iret
or
enter
lahf
xor
mov
sub
addr16
or
sarl
dec
in
lock
pop
shl
imul
pop
jecxz
jmp
sbb
jno
ljmp
mov
xor
pop
scas
test
adc
and
mov
mov
mov
call
movsl
scas
aas
mov
outsb
jmp
pop
xor
xor
sub
push
gs
sub
fwait
lret
sbb
rcll
jmp
mov
cmp
add
jmp
lret
dec
cmp
xor
sbb
dec
jbe
fwait
imul
mov
mov
lea
mov
test
dec
sub
add
sbbl
and
mov
pop
movl
pop
jb
cmpsl
loopne
rol
cmp
and
add
out
push
pop
fs
mov
pushf
imul
xchg
icebp
gs
dec
jnp
xchg
inc
sbb
add
aad
pop
out
iret
sbb
xchg
sbb
int
dec
mov
mov
sub
jb
fistps
mov
addl
pushf
pop
mov
loop
and
popf
xor
aaa
lret
icebp
mov
add
add
imul
in
push
movsb
callw
xchg
jl
addb
mov
iret
inc
or
cmc
dec
jp
daa
push
aas
dec
cmp
xchg
mov
stos
mov
pop
xor
xor
sbb
jo
or
mov
dec
js
sbbl
in
push
and
dec
sub
popf
fwait
pop
jbe
push
jg
or
lahf
mov
lahf
ss
push
mov
xor
sbb
pop
mov
fwait
mov
xor
es
pop
or
push
out
cmp
mov
or
clc
inc
sub
mov
or
imul
sbbb
xchg
adc
rcrl
mov
pop
or
les
outsl
mov
sbb
sub
clc
fcmovnb
lea
out
std
push
fwait
jns
xchg
fldcw
mov
xchg
mov
cltd
or
ret
mov
dec
test
bound
insl
ret
sahf
inc
cmp
mov
sbb
sbb
add
cmp
inc
pop
std
sahf
lret
inc
aad
enter
aad
cmpsb
lods
mov
adc
cmpsb
out
in
push
lds
clc
sub
insb
mov
sbb
cs
xchg
pop
push
xchg
push
jge
push
sub
stos
xor
aad
jns
push
popa
insb
jp
pop
cmc
xchg
pop
icebp
adc
stos
cld
lods
add
inc
cmp
cmp
push
nop
mov
mov
fidivrs
lret
push
int3
and
fwait
cmp
jp
jecxz
fnstcw
mov
mov
sub
fisttps
mov
pop
mov
cmp
push
push
into
out
push
jae
add
popw
cmp
cmc
ja
repnz
inc
sbb
inc
mov
mov
imul
jno
sbb
add
xchg
in
lds
test
scas
cmp
ret
nop
xchg
dec
arpl
movsb
xchg
cwtl
mov
shr
pusha
and
lods
addr16
stc
in
push
insl
jb
fidivs
sub
inc
mov
fsub
push
cwtl
movb
aad
jge
mov
mov
cmc
fidivrs
fst
popa
mov
jge
jbe
xchg
jb
sahf
lock
ja
push
inc
gs
clc
dec
sbb
shll
loopne
in
cs
gs
cmp
sahf
push
dec
pushf
cmp
mov
push
aam
stos
movsl
test
out
xlat
cmp
notb
and
lcall
js
loope
roll
pop
fisubl
int
xchg
sti
sbb
fdivrl
pop
in
fisubl
jmp
add
add
jns
lea
push
inc
or
mov
and
push
ljmp
mov
inc
fwait
lods
aam
or
adc
imul
stos
xor
and
test
cltd
jmp
push
xchg
lahf
aas
shrl
loope
push
aad
mov
jle
mov
mov
jo
inc
test
xor
cltd
jmp
nop
cmp
xchg
mov
lcall
repnz
sub
shll
lahf
fwait
inc
pop
repz
mov
ja
movsl
cs
test
jno
mov
repz
cmpl
testb
fisubs
bt
ss
dec
sbb
xchg
loopne
jmp
call
fcompl
xchg
dec
mov
call
test
push
xchg
leave
pop
movsb
cltd
lahf
lret
fbld
adc
call
mov
cmp
int
push
test
test
mov
repz
ror
stos
subb
adc
movsl
and
sbb
xchg
sub
xchg
push
sbb
cltd
mov
repnz
push
cmp
fadd
cs
dec
movsl
rcrl
xchg
push
mov
cmp
std
pop
jmp
iret
sbb
mov
cmpsl
jmp
jnp
testl
jae
je
imul
jno
jmp
adc
xor
cmp
jp
mov
dec
repnz
stos
mov
mov
xlat
sbb
hlt
roll
add
mov
pop
outsb
jecxz
adc
cmp
imul
scas
and
fwait
pop
outsl
mov
jge
aad
pop
sbb
test
cli
mov
lret
pop
jp
mov
cwtl
out
ret
negb
fs
mov
ret
xor
and
mov
jns
scas
scas
ror
adc
in
idivb
cmp
xchg
inc
mov
popa
mull
mov
pop
gs
mov
or
pop
lret
dec
mov
jg
jmp
sub
cmpsb
xor
add
inc
pop
dec
jmp
enter
cmp
sub
dec
and
inc
sub
mov
mov
inc
hlt
cmp
pop
inc
pop
add
mov
or
mov
hlt
sub
aad
pop
mov
sbb
ja
mov
cmpsl
xor
loopne
rcll
or
fsts
jmp
mov
test
push
arpl
loop
lock
pop
jne
shr
test
leave
insl
xor
sub
roll
adc
fs
and
or
mov
pusha
push
adc
xchg
inc
xchg
call
sahf
fldt
adc
imul
jl
xor
lcall
sti
xor
jno
test
lock
mov
in
sbb
or
cmp
sub
jmp
test
push
pop
and
dec
mov
aaa
pop
int
sbb
imul
push
cld
pop
push
sbb
and
fistpl
jo
addl
adc
leave
xor
dec
in
call
push
mov
add
push
loop
mov
or
push
sbb
inc
jle
imul
push
ret
xlat
jecxz
cs
movsb
xchg
mov
daa
into
in
push
pop
pop
loope
jg
jp
and
daa
sub
ret
add
inc
cmp
sub
popf
push
or
ds
mov
loopne
adc
mov
pop
movsl
xlat
fwait
out
subb
adc
mov
pushf
dec
cmc
iret
data16
mov
dec
ljmp
int
push
movsl
jmp
rorb
sub
push
pop
mov
xor
mov
cli
xorl
push
pop
inc
mov
mov
or
mov
nop
hlt
icebp
sub
sbbl
adc
xchg
pop
loope
cmp
bound
mov
lcall
adc
popa
push
fidivs
fs
jno
sub
fistpl
mov
rcrl
fnstcw
adcl
jae
sub
cmpsl
jne
dec
aas
in
pop
mov
sub
dec
sbbb
into
aas
add
mov
repnz
popa
or
push
mov
and
out
shlb
mov
xchg
mov
popf
jl
fucomi
adc
cmp
cmp
cltd
dec
or
jae
hlt
das
fwait
stos
jecxz
dec
std
rorb
clc
cli
xor
mov
jns
js
shlb
jmp
cld
outsb
inc
fimuls
scas
pop
dec
mov
js
jne
data16
mov
jb
leave
mov
mov
ret
mov
cmp
testb
pop
imul
popf
icebp
popa
lcall
add
cmpsl
rcr
repz
sub
push
jbe
or
ja
or
cmp
xchg
scas
jle
fs
in
das
jp
dec
mov
lods
mov
ffreep
ja
lock
stc
cltd
xor
out
push
push
mov
bound
mov
adc
mov
inc
sub
ljmp
lcall
test
jp
dec
enter
sub
push
inc
imul
jnp
push
int
or
mov
sbb
push
je
mov
loopne
hlt
in
push
dec
mov
and
jns
dec
fnsave
sti
cmpb
mov
and
movsl
xchg
pop
or
sub
push
aas
mov
ficompl
sbb
jp
push
jno
xor
lods
adc
pop
dec
packsswb
lea
out
faddl
push
loope
lahf
dec
push
cmpsl
imul
xchg
aad
push
jno
hlt
std
mov
jnp
and
rclb
jae
inc
stos
mov
jne
out
call
adc
xorb
bound
add
or
mov
lret
iret
shll
cmp
idivl
cmpsb
outsb
mov
push
popa
sub
cmc
iret
sbb
jo
xorl
sbbb
inc
xor
pop
or
in
lea
sbb
pop
xchg
popf
ret
inc
fisubl
mov
dec
in
sbb
test
jo
mov
mov
stos
mov
inc
pop
test
pop
loop
movsl
mov
fs
pop
pop
mov
les
fldcw
jmp
sub
inc
bnd
push
xor
jb
aas
cmp
xchg
add
fmul
cld
icebp
xchg
inc
jo
das
shlb
stos
and
pop
push
outsl
loope
pop
pop
adc
push
add
pop
fimuls
pop
mov
dec
fiadds
aad
jmp
and
or
mov
test
mov
mov
aaa
lods
mov
jle
mov
movsb
cmpsb
inc
xchg
mulb
addl
lods
and
int3
xlat
cmp
repnz
jbe
push
sub
cltd
dec
leave
rcrb
inc
lret
push
leave
sbb
inc
mov
sbb
faddl
push
inc
gs
sbb
frstor
adc
jns
mov
ljmp
fnstcw
out
in
inc
fsubl
or
push
pop
inc
out
sbb
and
jecxz
push
lea
sbb
or
mov
jbe
dec
scas
gs
out
xchg
daa
sbb
aam
and
lcall
sbb
sbb
or
insb
mov
rorb
sub
pop
xor
inc
push
add
adc
dec
fisttpl
sub
mov
xchg
jge
enter
add
mov
xchg
lods
mov
xchg
out
cmp
mov
pop
or
inc
pop
inc
call
sbb
dec
rcrb
out
push
imul
jae
pop
loope
sbb
inc
shlb
fdiv
mov
in
mov
sub
mov
push
xor
push
xchg
jmp
clc
cs
pop
mov
lds
enter
mov
lcall
push
cltd
fsts
add
mov
xchg
jecxz
loope
push
mov
js
lret
sbb
and
xor
outsl
gs
out
sbb
mov
arpl
or
sub
mov
sbb
and
fcmovbe
sti
fwait
mov
cltd
sti
je
inc
aaa
sbb
loope
scas
js
add
mov
jmp
test
iret
add
add
push
mov
cmp
push
inc
ret
mov
sub
cmp
mov
fwait
mov
xchg
in
divl
xchg
repnz
sub
in
mov
lahf
dec
inc
mov
mov
jle
test
cmp
xchg
cmc
js
lock
shll
xchg
pop
fsubp
xchg
jnp
hlt
mov
cmp
insl
push
cmp
call
mov
jae
sub
mov
and
inc
and
pop
int
push
insb
and
iret
imul
jp
and
test
mov
fwait
rclb
test
xchg
test
call
adc
js
sbb
std
jno
sbb
shll
xor
pushf
ret
mov
fs
loopne
in
call
fbstp
jmp
aaa
xchg
mov
pop
outsl
sti
xor
sub
dec
stos
cmpsl
orl
aad
paddq
add
pop
xchg
cmp
mov
mov
xor
imul
test
pop
xchg
or
xchg
push
and
lahf
out
push
cmp
insb
mov
cmp
or
in
insl
sub
mov
icebp
mov
in
sbb
fcmovne
loopne
jns
jge
mov
mov
and
dec
mov
bound
jmp
nop
roll
mov
xor
iret
sbb
mov
outsb
pop
insl
pop
aad
mov
fwait
popa
mov
mov
sub
enter
imul
and
in
in
inc
stos
add
xchg
in
adc
mov
shll
xlat
mov
gs
dec
and
lret
dec
repz
adc
or
push
push
cmpsb
xor
pop
mov
test
xor
adc
push
daa
and
or
dec
arpl
mov
ret
out
sub
hlt
and
and
pop
inc
roll
mov
adc
inc
xor
pop
sbb
call
xlat
iret
or
cmpsl
ss
push
ja
mov
cmp
int
inc
mov
mov
jl
inc
jnp
fwait
or
inc
xchg
aad
mov
popf
fnstsw
enter
ret
outsl
xchg
push
dec
fs
jg,pn
xchg
popa
pop
inc
push
movsb
xchg
mov
and
push
xchg
mov
out
xchg
hlt
sbb
or
xchg
cmp
ret
cmpsl
dec
mov
mov
daa
or
pop
push
jp
add
push
or
xor
add
push
aaa
cmp
imul
mov
es
cli
fs
push
jle
in
and
dec
loopne
push
divl
and
and
scas
jbe
mov
aaa
ljmp
test
jo
mov
xor
inc
stc
cmp
ds
imul
xlat
lret
sahf
imul
fnstcw
and
mov
in
adc
ds
mov
dec
dec
mov
push
jns
cmp
aaa
sub
ret
and
scas
jns
aam
insb
popa
mov
push
gs
adc
addr16
out
outsb
ljmp
xchg
sbb
mov
sub
lods
lds
and
rolb
lds
sub
jno
lea
or
dec
inc
inc
sub
push
mov
mulb
int3
fstpt
popa
cmp
mov
jg
xor
fldenv
aam
jmp
fcmovb
data16
popf
mov
xor
and
sbb
push
in
ror
in
mov
in
mov
and
loop
repnz
fstpt
pop
cmp
or
inc
mov
jl
test
mov
mov
jmp
push
cmpsl
xor
std
push
xchg
mov
arpl
xor
jmp
jmp
mov
push
inc
lahf
mov
das
mov
jnp
jb
leave
cli
add
sti
repnz
lahf
push
mov
dec
mov
jno
and
push
jo
sbb
jp
pushf
cmp
popa
jae
mov
mov
mov
outsl
push
out
inc
mov
or
mov
pushf
add
pop
loopne
and
push
aam
rcrb
sbb
pop
insl
sub
mov
add
push
int
mov
in
cmpsb
hlt
in
stc
fadds
fucom
insl
cmc
push
lock
pop
mov
mov
mov
xchg
mov
or
scas
add
jge
mov
ja
adc
xor
mov
or
xchg
push
sbb
call
and
loope
daa
and
pop
dec
sub
pushf
std
xchg
lea
subl
in
into
add
sub
mov
mov
fst
xor
cltd
es
add
inc
movsb
jl
arpl
test
mov
mov
ret
mov
jge
mov
and
cld
cmp
add
pop
push
andb
push
jmp
mov
movsb
xchg
pop
xorl
lret
adc
mov
dec
mov
inc
nop
ficoms
in
inc
mov
mov
mov
and
enter
loop
mull
lods
jbe
sbb
out
xchg
aaa
stos
cli
jns
int
xchg
fstps
or
sbb
stc
ss
adcb
lods
imul
cmp
sbb
fistpll
sbb
fwait
or
sub
stos
aas
out
mov
mov
push
aaa
nop
push
lcall
add
push
leave
jo
xor
push
inc
je
mov
or
mov
adc
ss
aam
fldl
or
sbb
jmp
push
fwait
mov
sub
arpl
outsl
sbb
sub
test
inc
lcall
jnp
and
aas
and
jae
xchg
lahf
dec
movsb
and
hlt
push
in
int3
xor
sti
jne
or
icebp
arpl
notl
pop
aam
pop
sbb
fwait
sbb
fcmovnbe
call
add
sub
andb
call
ljmp
pop
dec
lret
jle
das
repz
sub
adc
xchg
xlat
push
jle
cmc
inc
cmpsb
lock
and
mov
adc
adc
xchg
sbb
popf
sbb
outsl
test
add
adc
adc
insl
mov
cwtl
inc
lods
jmp
push
addr16
push
sbb
rcl
arpl
xchg
fs
mov
sbbl
fidivs
out
cwtl
xchg
mov
pop
fildl
in
pop
add
mulb
xchg
aaa
add
and
and
repz
pop
scas
pop
cwtl
ss
push
cmp
cmp
pop
mov
movsb
popf
jbe
lahf
jae
jmp
push
das
cmp
or
cltd
jg
out
rcll
pop
pop
fnstsw
stos
cmpsl
out
rcrl
std
mov
xor
notl
jb
mov
imul
push
dec
in
sub
sti
mov
loop
cmc
nop
inc
jnp
sub
adc
jnp
pushf
jl
fpatan
mov
xlat
xchg
rcrb
sub
mov
and
cmc
icebp
sub
adc
and
fwait
mov
fwait
hlt
jnp
cmp
jg
adc
repz
mov
lods
out
push
mov
scas
call
xor
sbbl
add
pop
lea
sbbl
aam
arpl
push
pop
int
enter
rolb
mov
inc
xlat
mov
inc
out
shl
inc
aad
push
repnz
lds
dec
vpaddq
jp
repz
pop
and
mov
xchg
pop
imul
stc
fwait
test
push
mov
ror
jl
xchg
add
les
mov
loop
jbe
cmp
mov
jge
mov
inc
push
frstor
mov
lret
and
xchg
and
iret
xchg
ret
aam
cmpsb
test
and
cmp
dec
mov
in
or
ficoml
scas
push
imul
mov
cwtl
mov
cmp
adc
mov
out
mov
pushf
sti
out
sub
sbb
jl
pop
out
add
mov
mov
in
push
or
enter
cmp
movsl
lods
stos
negb
ja
loop
ss
test
es
adc
lea
cmp
push
push
fcmovnu
pop
jmp
pop
sub
xchg
mov
into
xor
repz
stos
push
sahf
fildl
shl
lods
jne
inc
adc
insb
jno
pop
sbb
out
add
rcrl
adc
adc
jmp
mov
mov
ss
mov
loope
or
xor
aas
sbb
popf
push
push
sub
jmp
sub
lret
jl
rep
jno
jo
sub
jl
lahf
repnz
adc
mov
mov
fwait
sub
xor
sub
loope
iret
pusha
fcompl
mov
je
and
jmp
sbb
popa
sbb
mov
lahf
lret
sbb
cmpsl
test
pop
jg
fs
ret
f2xm1
jl
cld
adc
es
rcrb
leave
inc
push
dec
push
mov
mov
ret
fs
xor
xor
mov
pop
gs
out
adc
rolb
mov
movsb
adc
push
scas
fmull
dec
outsb
out
lods
push
xor
in
jno
adc
fildll
imul
fs
scas
cltd
repnz
push
mov
cs
outsl
lds
cmp
test
push
mov
hlt
lock
jo
push
mov
adc
shll
adc
out
lds
jne
jo
push
arpl
cwtl
dec
fistpl
cs
push
lock
ja
push
filds
pop
mov
push
sub
mov
pop
add
adc
sahf
jecxz
mov
cld
out
ss
push
shr
loopne
shlb
icebp
mov
popa
int
and
sbb
in
jl
fistps
mov
add
dec
js
mov
pop
add
dec
push
add
sub
ljmp
fidivrs
addr16
and
dec
mov
add
jb
daa
je
mov
cmp
les
das
daa
jg
je
cld
dec
mov
fstl
repz
int
je
gs
pop
cmpsb
insb
cmpsb
lret
fwait
or
testl
movl
inc
int3
lcall
ret
push
adc
xchg
jl
and
sahf
leave
jp
pop
sbb
les
cmpsl
stos
les
adc
int
in
cwtl
fld
xchg
fnstenv
mov
inc
call
xchg
pushf
fucomip
lret
xchg
sbb
mov
divb
std
jle
dec
lock
loop
jl
ljmp
lods
cmp
inc
movsl
sub
out
mov
std
sub
xor
pop
movsb
cmpsl
cmp
push
cli
sub
std
cli
jbe
int3
aad
sbb
cmp
sub
or
ror
jne
shlb
int
mov
cmpsl
mov
addr16
sbb
mov
mov
adc
pop
lea
gs
xor
imul
ljmp
mov
dec
repnz
mov
jbe
lock
pusha
push
jno
in
jb
mov
mov
stc
fiadds
bound
sub
mov
pop
mov
jno
loope
pop
movsl
push
mov
in
sub
and
dec
subb
popf
aad
jl
stos
adc
inc
mov
adcl
cmc
cmpsl
or
pop
in
add
mov
bound
inc
cmc
lahf
or
push
std
xor
dec
push
jl
stc
mov
movsl
sub
aam
aaa
jb
or
sub
or
fcmovnbe
mov
xlat
dec
scas
pop
cmp
cmp
rcrb
jp
pushl
adc
out
xchg
cli
fs
pop
jns
xchg
pop
inc
xchg
push
pop
es
sbb
pusha
scas
xchg
push
jbe
in
adc
jo
call
shlb
in
shl
sti
pop
mov
test
xchg
lret
repnz
repnz
xchg
pop
out
inc
mov
repz
iret
xchg
lret
repnz
scas
test
xchg
in
fwait
loope
push
sub
sub
mov
xor
stc
pusha
das
jle
imul
xor
and
stc
jb
shll
sahf
mov
in
loopne
fsts
ja
sarb
jo
in
cmp
ljmp
lods
lret
and
jecxz
dec
fldl
inc
movsl
mov
cmpsb
stc
jecxz
push
or
pop
stc
sahf
pop
js
sub
inc
popf
push
sbb
mov
mov
xchg
mov
incb
xorl
pusha
in
scas
repz
mov
in
cs
or
cmc
punpckhbw
cmp
ret
dec
mov
push
inc
lcall
sbb
das
dec
cmpsl
cmp
adcb
mov
mov
xor
mov
sbb
sbb
movsb
data16
mov
imul
cltd
xor
inc
pop
loop
mov
xchg
iret
mov
mov
xorb
vpsubusw
shl
cmp
sbb
mov
cmpsb
jg
jmp
loopne
and
pop
mov
mov
sbb
mov
es
andb
mov
cmp
in
aad
dec
and
js
sbb
cltd
add
sbb
jb
and
xchg
movsl
lret
repnz
jl
mov
mov
test
std
mov
aaa
mov
jge
mov
stc
sbb
cmp
jmp
aaa
lret
lds
jmp
nop
mov
andb
mov
adc
aad
dec
out
add
orb
pop
inc
popf
pusha
mov
xorl
xchg
aam
rcr
or
add
lahf
pop
and
jge
mov
mov
jns
jl
fildl
fldl
mov
and
and
add
mov
popa
es
ja
sub
mov
cmp
mov
jns
or
jne
sbb
sub
mov
push
adc
mov
pop
adc
xchg
mov
out
scas
out
jge
out
or
lock
push
mov
mov
cli
repnz
out
outsl
mov
cmp
aas
mov
mov
repz
xchg
push
ficoml
dec
inc
pop
js
cmp
mov
mov
adc
add
jns
mov
lahf
inc
sti
mov
pop
jp
dec
jg
fs
lret
dec
mov
mov
lods
xchg
mov
sbb
clc
mov
cmpsb
mov
lahf
loopne
dec
lahf
ss
je
loopne
jg
inc
mov
jmp
sarl
mov
sbb
mov
xchg
or
fidivrl
js
xchg
arpl
rol
fnstenv
add
shrl
mov
jmp
xor
dec
xchg
mov
cmc
outsb
clc
idivb
out
jno
test
sub
loop
add
sub
push
test
ror
jmp
leave
test
sbb
push
mov
je
fs
int
test
sbb
cmpsb
call
add
jno
jnp
mov
icebp
lds
lods
lahf
jnp
xor
cmpsb
aam
leave
cmp
lahf
and
add
lret
or
cltd
jns
mov
outsl
gs
loop
neg
lcall
jl
into
iret
fwait
or
sbb
sub
mov
inc
js
addl
sub
std
pop
jne
push
add
mov
ljmp
sbb
fimuls
dec
jnp
dec
lret
in
push
sbb
pop
sar
mov
fisttps
je
pop
mov
lods
push
and
imul
sub
mov
andl
or
movsl
sti
pop
mov
cmp
movb
cs
and
mov
inc
and
jnp
sahf
xor
gs
jle
and
in
in
xor
cli
rcr
mov
xchg
dec
test
ljmp
ss
cld
lret
inc
mov
in
adc
outsl
mov
xchg
mov
mov
jb
int3
daa
xor
xchg
inc
repz
clc
cltd
and
mov
xor
xchg
adc
push
pop
aad
pop
aam
outsb
test
push
sub
mov
xchg
cmpsb
scas
mov
jmp
ret
dec
fistps
cmp
jae
inc
cmp
stos
cltd
jnp
sub
mov
xchg
mov
in
cmp
xchg
push
mov
xchg
cmp
sbb
mov
adc
inc
subb
inc
repz
test
gs
lcall
push
lea
in
cltd
mov
and
jae
fbstp
stc
test
cmpsb
cmp
fs
jg
daa
mov
xchg
add
pop
inc
movsb
dec
out
rorl
cli
push
mull
and
stc
or
or
and
cmc
test
out
push
call
xchg
subl
pop
xchg
mov
add
out
pop
pop
cmp
lahf
mov
rcll
mov
pop
lds
cli
fisubl
sub
lret
mov
bound
fadd
push
test
adc
cld
cs
sbb
pop
sub
xor
push
fcmovu
mov
xchg
push
in
pushl
pushf
dec
pop
fsubs
jnp
js
pop
sarb
push
cmpsb
mov
inc
sub
add
fnstcw
mov
repnz
mov
mov
jmp
push
pop
outsb
out
jecxz
mov
popa
jp
push
inc
xlat
sbb
xchg
fnstenv
shlb
fcompl
adc
pop
test
inc
lcall
cs
cltd
gs
sub
xchg
leave
xor
push
mov
mov
push
sub
and
lds
bound
pop
inc
scas
cmp
jns
dec
push
andb
cmpsb
stos
cmp
imul
mov
push
adc
add
sbb
inc
dec
out
pop
mov
pop
xor
pop
test
cmp
mov
in
andb
xor
cmp
cmp
mov
stos
out
pop
into
mov
push
sub
out
cwtl
jl
or
sbb
inc
adc
sbb
es
adc
push
clc
mov
mov
add
mov
sub
call
inc
out
hlt
dec
lahf
push
sbb
ret
addr16
pop
push
sub
xor
shrl
sbb
sub
dec
cmp
jb
cmp
fcompl
inc
mov
mov
call
add
mov
or
aam
xchg
mov
les
xchg
mov
dec
in
jg
cmpsl
xorl
imul
ss
sub
inc
add
pop
test
cs
negb
jmp
arpl
mov
scas
jo
repz
ret
inc
xchg
loope
pop
dec
cmpsb
sti
xchg
mov
add
nop
sbb
adc
adc
inc
mov
movsl
outsl
mov
ss
xchg
and
repz
mov
es
adc
stos
loope
in
fcomps
xor
cltd
sbb
shrb
arpl
hlt
inc
adc
dec
lds
ja
fstpl
and
push
or
sbb
loope
jno
out
mov
sbb
mov
out
cmp
outsl
es
and
fiaddl
mulb
cmp
pop
mov
inc
adc
pop
xchg
aam
test
xor
add
sahf
pop
jge
push
dec
add
sbb
mov
popf
xchg
mov
std
ja
gs
mov
inc
pop
loop
shld
jae
push
inc
mov
out
mov
xor
popa
cmc
testl
stc
fs
xchg
mov
xchg
jnp
push
cmp
lods
fsubrl
push
test
dec
lcall
or
out
repz
jp
pop
int
lods
mov
dec
leave
jmp
pusha
fwait
dec
repnz
xlat
add
mov
fbld
jp
and
or
mov
cmpsb
jmp
cmc
lea
or
rcll
loopne
bound
cmp
push
and
inc
mov
dec
cmc
ficoml
imul
adc
enter
fwait
mov
ljmp
xor
sbb
popa
bnd
jp
pop
into
dec
fildl
out
cmp
jnp
mov
and
pop
outsb
jge
leave
mov
movsb
sub
jl
inc
xor
cli
fbstp
push
mov
adc
xchg
ds
inc
mov
test
mov
jle
pushf
xchg
rorb
xchg
lret
cmp
lea
pop
adc
fsubs
test
aaa
jmp
xchg
scas
in
pop
mov
or
in
cmp
cmp
rorb
inc
xchg
push
xor
jmp
jb
dec
jns
cltd
loope
mov
adc
fdivl
mov
or
mov
xchg
sti
or
dec
add
je
bt
shrb
sub
test
dec
aam
mov
mov
add
pop
mov
aad
mov
sbb
dec
lock
jne
sbb
imul
rcrl
inc
sub
aad
ret
pop
pop
or
cld
rclb
push
mov
add
in
add
jb
pop
inc
mov
cltd
mov
les
loope
lcall
pop
hlt
xchg
cmpsl
out
inc
fadds
out
cld
hlt
xchg
cmp
inc
das
pop
sub
push
movsl
dec
mov
call
mov
movsl
shrb
sub
mov
mov
dec
mov
mov
dec
mov
jo
and
faddl
divb
ret
icebp
mov
shrl
jmp
aaa
lcall
shlb
stos
cli
call
inc
sub
das
das
fs
cmc
dec
mov
pop
sbb
dec
xchg
jmp
insw
fwait
push
xlat
inc
pushf
cmpsb
das
or
sar
xor
insb
lret
push
cltd
ds
adc
mov
icebp
aas
mov
jge
xor
push
sbb
lds
aaa
jge
inc
add
cltd
mov
nop
lock
out
in
or
sub
fcompl
jle
and
push
or
fucomip
in
idivb
pop
and
sbb
cmc
mov
outsl
add
or
ja
xchg
inc
cwtl
pushf
xor
add
push
adc
aam
dec
pop
or
mov
push
sbb
pop
cmc
fcmovnbe
sbb
fistpll
push
insl
and
sub
cmc
cwtl
icebp
call
aam
jns
mov
jge
mov
jp
push
or
push
repnz
sahf
andl
adc
or
mov
push
sub
push
inc
add
xlat
pop
cmpsb
cmp
scas
pop
pusha
xchg
data16
outsl
or
roll
cmp
push
cld
jp
fstps
xchg
inc
and
repz
cltd
inc
outsb
xchg
or
lods
and
loope
imul
add
out
and
mov
jmp
insb
inc
pop
in
cmp
jne
mov
sbb
pop
xlat
jge
push
sahf
or
xchg
mov
rcll
mov
xchg
xchg
or
jmp
movsb
imul
frstor
or
adc
popf
and
fstp
shll
mov
int3
cmpsb
sahf
sbbb
pop
into
je
xchg
and
cmp
or
push
lahf
lods
or
mov
jmp
push
mov
sub
movsb
sarl
and
lea
in
addr16
xchg
fldenv
lea
sbb
xlat
jno
loopne
lret
aas
repnz
and
adc
xchg
jne
inc
out
jecxz
sub
dec
and
scas
xor
fnsave
out
adc
iret
push
sbb
call
std
fistpll
into
adc
lds
sbb
int3
cli
mov
ret
xor
test
stc
xchg
into
les
mov
push
cmp
inc
movswl
sub
mov
in
and
sbb
pop
jbe
icebp
push
lds
jle
push
jg
mov
in
and
mov
and
push
xor
sub
mov
lea
mov
inc
xchg
mov
pop
pop
mov
sahf
mov
orl
fwait
movsl
jg
andb
mov
leave
call
and
jo
cwtl
xlat
jnp
or
pop
add
cli
lret
jo
insb
sub
ja
sbb
sar
sahf
inc
in
mov
adc
sahf
repnz
and
cmpsl
dec
cwtl
rolb
iret
jmp
sub
sarb
pop
xor
int
hlt
cld
jns
outsb
enter
test
ja
mov
call
addr16
mov
inc
out
dec
stc
in
push
dec
inc
dec
sub
mov
int3
lcall
push
sbb
pop
push
cmp
pop
pusha
test
mov
jae
mov
fwait
hlt
mov
dec
push
mov
into
and
mov
push
nop
jno
jne
push
out
xor
lcall
in
es
xor
repz
in
les
sbb
pop
cmp
cld
outsb
xchg
mov
out
call
lock
xchg
xchg
js
rol
xor
jns
mov
daa
push
aas
or
mov
iret
outsb
ss
cmp
xchg
aas
jae
cmp
mov
mov
xlat
and
inc
outsb
aaa
jmp
dec
bnd
or
mov
push
pop
ds
jle
push
in
in
and
ret
cmpsb
fucomi
inc
test
adc
in
jno
cmc
pop
leave
dec
stc
pop
repz
adc
fwait
push
jo
push
pop
push
movsb
andl
stos
jb
rcrl
mov
sbb
pminsw
fwait
xor
jne
sbb
shll
push
sbb
and
dec
xlat
out
xchg
bound
sti
xchg
or
scas
pop
mov
mov
ret
inc
push
ja
shll
inc
test
testb
mov
arpl
insl
jne
mov
mov
in
push
pop
pop
repnz
jge
sbb
sbb
pop
sti
int
mov
outsb
push
and
icebp
or
mov
jnp
popa
mov
outsb
in
add
test
sti
lret
add
jns
push
aam
push
fisttpl
dec
mov
in
mov
mov
in
psrad
hlt
lds
xchg
sbb
and
cmp
addr16
gs
or
and
and
pop
jge
test
out
sbb
sbb
or
es
adc
movsl
lret
js
mov
pop
clc
sub
les
sub
adc
js
mov
imul
pop
jmp
sub
lock
cmp
fwait
test
out
ljmp
pop
cmp
cmp
push
iret
pop
inc
cmp
ljmp
rcr
push
add
out
popa
icebp
sbb
and
jnp
or
mov
popf
and
xor
outsb
loop
xchg
or
sub
push
push
push
movsb
adc
mov
out
xlat
ss
outsb
sbb
cmpsb
inc
test
cmp
add
insb
jge
sub
ret
sarl
lea
mov
dec
rolb
test
insb
pop
push
adc
repnz
and
or
mov
in
push
loopne
xchg
std
mov
mov
mov
or
jbe
cmp
scas
ljmp
fsubrs
fwait
movsb
aad
lea
mov
push
adcb
into
daa
leave
hlt
sbb
jecxz
popf
aaa
popf
ret
adc
and
adcb
xor
push
movsb
jmp
and
leave
lds
fnstcw
adc
loopne
das
jno
add
pusha
jge
mov
and
ss
push
jo
jmp
jae
push
add
cmp
scas
and
shrb
lret
clc
stc
popl
stc
pop
lods
jne
fstp
mull
add
inc
jo,pn
test
andl
jle
inc
outsb
aaa
pop
in
int3
xchg
jnp
lock
mov
lret
pop
mov
and
fimull
jo
pop
xchg
dec
mov
mov
test
jp
repnz
xchg
push
pop
movsl
inc
xchg
ljmp
xlat
jnp
mov
mov
nop
and
adc
in
sbb
lahf
shll
mov
es
xor
and
mov
jno
xchg
inc
cmp
inc
jge
and
pop
loopne
adc
or
cwtl
cmp
scas
xor
imul
jge
ljmp
sub
das
mov
cmp
jmp
or
xchg
out
sbbl
mov
xor
dec
mov
mov
jg
push
fidivrs
inc
sbb
mov
mov
sbb
test
js
leave
sbb
pop
fisubrs
or
cmp
out
bound
pop
push
and
sub
jne
jl
pop
mov
add
or
stc
test
or
repnz
ljmp
movl
mov
jle
icebp
add
in
mov
ret
aas
push
jne
scas
repnz
mov
pop
xchg
call
and
sbb
and
test
push
cmp
jo
outsb
sub
ficoml
mov
sbb
add
pop
jge
pushf
andl
mov
loop
aaa
mov
sbb
xchg
stc
xlat
dec
lret
xor
inc
lea
or
xor
fmull
push
or
inc
stos
sti
mov
data16
int
scas
sbb
loopne
xor
and
ljmp
xchg
cmp
pop
js
mov
sbb
mov
jno
mov
imul
je
mov
repnz
xchg
mov
xchg
outsb
xchg
mov
lret
dec
dec
and
test
outsl
test
in
sub
sbb
out
push
add
xchg
dec
jl
push
lcall
add
rorl
pop
xor
insb
data16
aam
and
rolb
test
fidivs
push
sbb
dec
push
mov
ss
cmc
xchg
dec
enter
push
aaa
pop
mov
aas
xor
jge
mov
les
push
pop
xchg
push
jg
dec
mov
cmpsb
nop
sbb
add
lcall
cmc
rclb
mov
xchg
out
add
mov
aad
add
in
push
mov
outsl
xorb
sub
sub
mov
jecxz
and
andb
adc
xchg
sbb
pop
testb
fprem1
fisubrl
repnz
or
inc
or
fwait
jnp
xor
insl
dec
mov
sub
loope
mov
sub
aaa
jbe
push
sbb
or
dec
call
xchg
mov
icebp
pop
imul
adc
sub
shrb
stos
and
push
xlat
xchg
rcrb
inc
scas
hlt
rcl
rcll
sbb
xchg
adc
sub
mov
bound
ljmp
sub
lret
lods
gs
cld
jl
sbb
shrl
sarb
mov
mov
mov
inc
jns
dec
mov
loop
in
jmp
imul
iret
test
ja
adc
scas
cmp
inc
lds
mov
and
clc
mov
pop
cltd
push
lret
sbb
push
daa
iret
std
mov
mov
je
sbb
push
pushf
jp
fdivrl
cld
sti
jae
and
shll
aas
dec
jmp
jge
jecxz
xchg
push
insb
jl
xchg
inc
addr16
xor
call
insb
into
je
fwait
fwait
and
lcall
mov
fistps
push
inc
fistpl
jg
pusha
add
imul
sbb
cmp
jg,pt
test
out
sbb
pop
loopne
jmp
imul
sbb
mov
add
mov
pop
scas
xchg
mov
icebp
and
xor
pop
jmp
push
pop
lret
pop
mov
inc
add
or
dec
mov
test
push
xlat
adc
xchg
jl
adc
pop
ja
and
mov
xchg
dec
mov
push
test
in
sbbl
inc
jmp
cmp
andb
xor
clc
fwait
push
sbb
scas
out
sub
adc
fmuls
push
mov
add
dec
jmp
scas
mov
push
xchg
lock
js
stc
jne
ss
or
cmp
cmpl
aaa
aas
shll
push
push
add
in
mov
mov
stc
rcl
rorl
mov
dec
mov
in
cmp
inc
loope
test
in
xor
mov
mov
jbe
jmp
and
cs
out
push
mov
or
pop
in
fwait
add
xor
pop
mov
in
mov
mov
and
mov
cltd
pop
fnstcw
pop
pop
sub
and
push
mov
push
popf
inc
int3
push
das
mov
shrl
mov
pop
sbb
and
add
out
mov
iret
hlt
mov
pop
pop
leave
addr16
mov
cld
mov
push
mov
xor
in
shlb
icebp
mov
pop
cmp
rcrb
shlb
cmp
arpl
in
out
pop
cmp
xor
daa
movsl
sbbb
mov
pusha
fld
popa
jp
or
hlt
je
rcrb
jno
push
loop
imul
loop
push
jae
call
data16
popf
fsubrl
dec
cmp
mov
xchg
jno
cld
int
sahf
mov
dec
scas
pushf
mov
inc
mov
jb
movsl
dec
enter
xchg
in
push
jg
into
mov
dec
and
xor
stos
or
adc
aad
aaa
push
sub
inc
pop
inc
xchg
clc
xor
shll
mov
ret
add
sbb
pop
test
and
out
flds
or
stos
ljmp
mov
movsb
xchg
cli
inc
xchg
lds
jnp
repnz
pop
xchg
xchg
gs
jmp
sbb
test
and
sub
and
jns
ljmp
repnz
adc
jl
fdivp
push
mov
mov
pop
cmpl
xor
rcr
inc
xchg
pop
xor
pop
dec
jle
push
add
and
dec
mov
inc
daa
insb
dec
insb
pop
or
mov
mov
fsubp
add
mov
sbb
imul
push
test
xor
loope
xor
fstps
ret
cmpsl
addr16
fbstp
subb
mov
mov
call
push
or
aad
stc
push
inc
and
stc
xchg
loope
xor
pop
push
xchg
pop
pop
les
lods
pop
jmp
mov
mov
xchg
or
fildll
sub
jecxz
mov
hlt
fdivs
stos
push
jle
pusha
pop
cs
mov
dec
rorl
call
lcall
push
mov
fcoms
jl
dec
loope
int3
repz
inc
xchg
mov
mov
xor
mov
add
out
jb
cmp
out
sub
push
mov
iret
inc
mov
ljmp
jmp
and
push
cmp
arpl
imul
test
cmp
aaa
inc
sbb
xchg
stc
scas
lock
and
repz
push
push
mov
mov
icebp
adc
sarb
sbb
lahf
lcall
divb
outsb
fdiv
hlt
xchg
and
gs
ret
inc
and
jmp
xor
dec
out
fs
push
xchg
pop
cmp
sub
fstps
shrb
cmp
out
ss
rcrl
fsubl
xchg
mov
or
mov
aad
mov
sub
movsb
out
jmp
pop
and
test
neg
cmp
pop
pushl
add
cmpsb
into
ljmp
cmc
call
and
stc
pop
jge
ss
es
in
mov
fldenv
test
cltd
pop
shrl
cmp
pop
insl
push
clc
mov
push
dec
stos
cmp
movsl
insl
loop
in
repz
pop
inc
xor
inc
mov
lods
sub
inc
mov
jmp
and
fbld
mov
dec
in
js
arpl
mov
fs
jl
mov
pop
mov
cmp
out
scas
shl
icebp
cmpsl
pop
push
into
fisttpll
mov
lods
adc
mov
repz
mov
pusha
mov
cmp
pusha
int3
push
nop
lahf
popf
fwait
inc
mov
iret
push
xor
mov
imul
mov
mov
mov
xchg
sub
js
vmwrite
ret
add
xchg
shlb
add
sbb
jno,pt
adc
mov
xor
gs
repz
stos
enter
xchg
enter
push
mov
int
into
sub
iret
xor
in
xchg
add
mov
notb
pop
and
cmp
insl
jl
add
adc
inc
mov
mov
fdivr
pop
sbb
mov
cmpsl
daa
xor
je
sbb
out
cmpsl
enter
push
inc
pop
mov
cmp
fistps
mov
sub
mov
pusha
sbb
sbb
mov
pop
mov
in
negb
dec
gs
cs
out
testb
loopne
cwtl
lds
les
aas
leave
loop
lret
pusha
lods
xor
in
repnz
push
mov
fs
aas
in
or
jbe
push
and
mov
push
mov
mov
and
repnz
sbb
arpl
cpuid
stos
and
hlt
popf
test
or
sbb
and
adc
adc
sbb
pusha
mov
pop
loopne
stos
cmp
test
push
or
mov
sarl
pop
mov
and
jmp
call
xchg
push
jmp
imul
xor
js
mov
pop
stc
shll
dec
mov
jmp
lea
aam
dec
cmp
in
mov
mov
xor
icebp
popf
cwtl
inc
cmp
xchg
mov
shrb
aad
lret
setno
sbb
sub
push
push
sbb
or
lcall
xlat
jne
push
dec
sarl
fsts
imul
jb
call
aaa
inc
inc
mov
jbe
cmp
sbb
sbb
dec
sti
imul
out
inc
stos
sahf
pop
pop
insb
fwait
mov
push
adc
lea
mov
or
push
jbe
loop
and
stc
mov
sub
int
ss
ret
adc
mov
add
lock
and
add
test
mov
and
add
mov
xchg
aad
and
mov
xchg
outsb
dec
je
aaa
mov
lock
jo
xchg
jne
in
aam
mov
add
pop
repz
in
je
mov
fldcw
mov
fcmovnu
jbe
mov
in
inc
lahf
addr16
lahf
ss
mov
dec
pop
test
push
xchg
in
shl
iret
adc
icebp
xchg
and
add
imul
in
jns
mov
out
adc
mov
mov
int3
bswap
jge
mov
add
scas
hlt
inc
es
popa
cmp
call
jl
mov
xchg
or
add
ret
mov
out
xchg
iret
mov
mov
aad
out
jno
mov
cmpsb
mov
jns
test
out
shrl
adc
add
jmp
fst
js
test
mov
fldcw
xchg
icebp
subb
adc
push
and
jge
mov
ficompl
mov
imul
aad
test
xchg
sub
sbb
xchg
out
mov
gs
cmp
dec
or
sub
adc
mov
add
adc
js
mov
mov
adc
and
mov
mov
sbb
rorb
xchg
push
icebp
cmp
adc
lret
into
cld
mov
out
mov
jns
divl
push
sbb
add
mulb
mov
cmc
lds
jb
and
retw
stos
xlat
loop
stos
test
fisttpll
add
xlat
sbb
cmpsb
push
fwait
jnp
lret
ret
mov
daa
add
je
jg
add
sbb
push
xchg
dec
cmp
sbb
repz
sub
imul
mov
pop
mov
pop
lock
mov
call
cmp
and
lret
cmpsb
mov
adc
dec
les
mov
cmpb
aas
fiaddl
fcoml
push
cmpsl
pop
scas
and
mov
fdivl
push
rorl
data16
mov
notl
dec
enter
xchg
lcall
sbb
or
mov
ret
xlat
shrl
shl
daa
mov
fs
xchg
clc
or
lret
inc
pop
jmp
aad
add
or
movsb
xchg
nop
stc
inc
cmp
sarb
hlt
xlat
or
shrl
mov
adc
push
inc
mov
out
fldl
add
mov
out
fildl
or
clc
xor
leave
shl
fisubrl
dec
adc
popa
xor
sarl
or
jo
mov
rcr
push
mov
fnstsw
xchg
mov
bound
pop
dec
es
and
xchg
add
push
repz
frstor
repz
xor
pop
mov
fwait
repz
test
xchg
mov
lahf
icebp
movsl
insb
popa
inc
pushf
repnz
jnp
bound
push
test
adc
imul
and
lods
or
xor
pop
call
gs
aas
lock
mov
ret
in
jb
test
lahf
push
lahf
imul
es
jns
cs
je
mov
mov
ds
inc
aad
popf
repz
push
pop
push
stos
pop
std
dec
mov
enter
repz
sub
mov
sbb
mov
fnstsw
je
je
sti
rorl
lods
push
lock
sti
int3
stos
mov
pop
pop
div
jnp
pop
sbb
stc
adc
cmp
cld
pop
sbb
dec
lods
cltd
mov
imul
or
scas
mov
mov
add
mov
mov
arpl
add
repnz
out
mov
cmp
imul
mov
rol
dec
fdivr
movsl
stos
lds
bound
dec
adc
es
movsb
out
dec
shrl
loop
jns
mov
cmpl
clc
pushf
outsb
pop
adc
and
leave
xor
in
pop
lahf
mov
push
int3
push
out
cs
xchg
sahf
mov
js
cwtl
fsub
imul
sbb
cwtl
jnp
pop
mov
stos
cs
dec
dec
clc
ja
cmp
pushf
push
ds
test
imul
fstp
cld
in
lds
dec
xchg
repz
je
xchg
in
sbb
push
repz
fdivp
pushf
dec
cmp
call
dec
xor
ret
aas
cwtl
in
sbb
out
stos
cmp
pop
cmpsb
cmp
mov
imul
or
gs
lahf
shlb
xchg
mov
cli
lods
inc
mov
pop
and
addb
jl
call
sbb
jae
cmp
or
and
inc
adc
gs
mov
mov
in
mov
dec
jge
mov
out
pusha
out
jecxz
cwtl
mov
idivl
mov
adc
or
hlt
in
push
call
out
sbb
stc
sarl
in
icebp
mov
int3
mov
cmp
mov
adc
add
push
jp
ficompl
jae
mov
call
mov
lds
in
fcomps
cmp
mov
inc
cmp
push
out
push
add
push
xor
mov
xchg
sub
inc
push
jmp
ffreep
shll
test
xchg
xchg
add
fsubr
pop
int3
js
cmpsl
lods
mov
lock
mov
jmp
pusha
test
and
mov
loope
sub
test
shrb
mov
pop
push
jmp
mov
xor
jae
mov
cmp
imul
in
push
xlat
imul
test
push
push
cmp
nop
cli
lock
xor
mov
fwait
inc
shrb
cmp
inc
push
jp
test
call
and
mov
ss
jmp
jb
mov
js
mov
sub
mov
mov
out
mov
enter
push
inc
jbe
add
addl
jl
jnp
pop
fistl
adc
hlt
inc
iret
cmp
sub
je
fsubs
movl
test
pop
jmp
inc
shll
ret
sub
in
xor
mov
outsb
aam
imul
xlat
push
adc
sub
pop
mov
pop
push
lock
mov
push
add
addr16
mov
sub
mov
xor
inc
add
and
cwtl
add
xchg
mov
pusha
adc
jle
jns
leave
arpl
fidivl
inc
cmc
cmpsl
or
imul
repz
out
aad
push
inc
pop
pop
lods
push
cmp
test
lock
dec
xchg
mov
mov
call
cmpsb
ljmp
adc
sub
cmp
lahf
addr16
outsl
or
sbb
in
les
jne
cmp
sub
fsts
mov
aas
insb
data16
push
pusha
add
repz
push
sarb
lods
mov
iret
adc
or
xor
sub
pop
fbstp
std
insl
iret
fs
dec
movsb
std
fbld
push
stc
ret
add
sahf
roll
sub
mov
add
sbb
mov
sbb
jo
cmc
xor
mov
sbbl
enter
daa
cmp
mov
out
xor
iret
sub
stc
fsts
mov
pop
in
call
inc
jmp
add
in
push
xchg
pop
movsb
add
pushf
jno
sbb
cmp
adc
dec
pop
mov
lahf
ljmp
fwait
negl
adc
fstpt
lret
stc
push
mov
mov
xchg
test
leave
push
sub
es
test
call
dec
test
push
sahf
sub
out
mov
sbb
cld
and
int
and
fimuls
fdivrs
add
mov
cwtl
shr
add
adc
outsl
cs
orl
bnd
dec
mov
jnp
icebp
imul
mov
pop
inc
sbb
cwtl
and
mov
lahf
add
jo
pushf
mov
sub
fwait
ljmp
jl
push
xchg
ss
cmpsl
out
or
mov
fnstsw
nop
leave
dec
mov
cmp
mov
nop
stos
out
cwtl
cmpsl
mov
or
cmp
or
lock
add
xchg
cltd
frstor
add
mov
mov
repz
imul
sbb
mov
insb
cmp
ljmp
lea
push
pop
jg
jmp
mov
mov
lds
shl
outsb
pop
repz
shlb
in
jmp
iret
mov
sbb
mov
int3
xchg
iret
sbb
xchg
test
and
addr16
mov
mov
adc
out
test
dec
xchg
mov
inc
fidivs
outsl
xchg
in
inc
push
popf
in
stc
jecxz
aaa
jecxz
lcall
adc
xor
das
or
scas
cmp
imul
pop
inc
mov
cwtl
cmp
nop
pusha
repz
sahf
or
and
push
testb
call
cltd
jae
call
xchg
leave
push
nop
mov
fildl
cmpsb
inc
push
jecxz
scas
sbb
dec
or
xchg
mov
in
es
aad
push
jmp
sub
pop
outsb
sbb
movsl
fidivl
stc
shr
jbe
or
dec
shlb
lcall
xor
lret
sbb
lock
lea
xchg
in
mov
leave
mov
popf
pushf
andl
or
pop
pop
push
sub
addr16
mov
mov
mov
push
pushf
fcmove
arpl
push
fnstsw
insl
inc
xor
out
cmp
pop
sbb
pop
mov
push
jnp
mov
icebp
pop
cltd
push
popf
push
pop
sub
addr16
nop
xor
sub
inc
pop
std
sahf
adc
test
lret
rorb
mov
push
clc
push
mov
fs
pusha
movups
cld
fistl
test
mov
mov
insb
xchg
xchg
sbb
rolb
into
test
fwait
adc
mov
aam
dec
icebp
pop
fnstcw
lret
push
mov
sub
or
mov
bnd
iret
les
and
mov
enter
loope
pop
sub
cmp
adc
mov
stos
in
imul
mov
add
lahf
or
in
daa
mov
movsl
jg
dec
jecxz
loop
enter
loopne
outsl
hlt
xchg
sub
push
cmp
push
lds
add
and
xchg
or
xchg
sub
mov
lahf
mov
xchg
or
aad
pop
mov
lods
push
pop
jnp
push
loope
cwtl
lahf
iret
in
loope
enter
mov
xchg
mov
xchg
out
movsb
jo
xchg
fmull
mov
mov
adc
shlb
ret
ret
mov
fcomps
cmp
push
and
and
add
mov
outsl
pop
and
dec
push
orl
add
punpckhwd
decl
mov
and
jb
mov
pop
movsb
xchg
popf
fstpt
sbb
mov
je
ljmp
xorb
xor
adc
cmp
das
in
in
push
outsb
xchg
jmp
xor
push
mov
out
lret
aad
sbb
lret
fmuls
mov
fldenv
and
inc
lcall
cli
in
xchg
into
leave
test
daa
add
dec
mov
push
xchg
dec
inc
lock
addl
push
movsl
loope
into
mov
inc
jo
xchg
imul
dec
inc
scas
lds
inc
test
mov
out
push
movsl
xchg
mov
test
ret
in
in
sub
lret
jecxz
lcall
in
lea
les
ds
fwait
movsl
jbe
insl
pop
scas
pop
mov
rol
repnz
inc
inc
sub
pop
and
cli
cmc
jnp
pop
jno
adcl
aas
stc
shl
dec
sub
sub
insl
hlt
xchg
loopne
lods
adc
cwtl
das
add
cli
and
andl
inc
pop
push
ret
cmp
xchg
adc
jns
fcompl
pop
sub
repnz
and
movsb
lahf
push
lods
jnp
inc
repz
push
pop
stc
out
mov
subb
cmpsb
xchg
rorb
cmc
sbb
mov
adc
and
in
push
adc
dec
movsl
xor
cmp
jmp
xchg
test
movsb
sub
in
loopne
lock
xchg
jne
and
loopne
cmpsb
popa
jge
pop
mov
push
lock
mov
and
aad
jbe
push
inc
xchg
stc
mulb
ja
jmp
into
mov
iret
fcomps
pop
pop
xchg
in
aad
mov
bnd
aam
cli
mov
icebp
popf
jecxz
or
in
movsb
into
cld
repz
xchg
jecxz
cmp
mov
lcall
jns
mov
jmp
stc
adc
inc
inc
push
sbb
push
lahf
sbb
std
cmp
lods
scas
adc
mov
std
mov
cmp
jnp
call
sub
dec
cmp
sub
jno
dec
out
jl
jle,pt
movsb
and
push
cmp
movsb
cltd
mov
insl
sbb
fimuls
pop
mov
lret
test
adc
lock
cli
sbb
inc
pop
mov
gs
cmpsl
cwtl
in
push
sub
xlat
push
mov
cltd
cmpsb
xor
clc
stc
push
jecxz
add
sub
test
stos
xor
pop
pusha
addr16
hlt
sub
mov
mov
in
cmp
test
push
daa
cmc
push
mov
add
dec
ret
test
sub
fiaddl
sti
gs
and
mov
aam
fucomip
mov
test
push
inc
xchg
sub
pop
jg
fstl
gs
ficoms
and
inc
rclb
cmp
aam
jg
ja
in
mov
jnp
mov
cmpsb
mov
aam
cmp
in
add
mov
or
andl
in
sbb
je
stos
inc
outsl
pop
jp
cmc
cwtl
xor
pusha
jno
test
cmp
shll
mov
imull
out
mov
outsl
cmp
mov
pop
push
divb
or
dec
movb
mov
loop
sub
cmpsb
xchg
fndisi(8087
les
dec
sahf
jb
pop
and
stos
fstl
and
cld
icebp
jl
inc
sahf
mov
jecxz
lret
and
loope
roll
push
mov
pop
lds
cmp
pop
mov
sub
xor
stos
mov
sahf
xchg
or
push
mov
dec
call
cmp
in
mov
stos
and
in
dec
mov
sub
pop
jp
sbb
ficompl
push
or
cmp
aam
pop
orl
add
mov
mulb
inc
jns
mov
jmp
cmp
clc
sbbb
sbb
out
push
inc
repnz
push
int3
lret
cmp
sub
loop
and
jecxz
cmc
mov
or
xchg
add
add
pop
clc
push
lret
cmpsl
shl
lods
and
dec
stos
inc
xchg
dec
addr16
mov
lret
jns
jge
repz
inc
aam
movsl
pop
notl
sub
sub
sti
push
ror
cli
and
aad
inc
or
popa
jnp
not
in
sbb
mov
sub
adc
jo
stc
push
daa
std
pusha
out
adc
das
into
or
sbb
addr16
push
mov
jnp
dec
dec
push
je
mov
xchg
jb
add
scas
in
mov
pop
cmc
fcoml
mov
jo
test
sub
movsb
icebp
mov
sub
xor
and
xchg
pop
pop
sbb
jnp
outsb
mov
sub
pop
sub
rcrl
adc
and
add
and
push
cmp
jmp
ja
aaa
mov
ret
data16
xor
aas
and
xor
mov
aas
aad
out
mov
mov
cwtl
notl
stos
pop
dec
fdivp
int
imul
es
add
jle
xchg
push
sub
cmp
jns
imulb
sbb
das
lds
imul
jne
inc
popf
andb
fdivr
test
clc
pop
mov
cs
push
popf
pop
in
out
lock
push
push
lahf
cmc
jge
adc
ret
popf
cmp
imul
jns
iret
mov
aam
test
sub
pop
mov
test
imul
je
cmpsl
sub
xor
in
sub
mov
mov
scas
pop
xchg
sbb
jae
mov
sbb
cli
loopne
decl
jg
ret
dec
lahf
mov
sub
sahf
cmpsb
in
daa
lods
jbe
es
mov
fadds
ljmp
dec
sbb
mov
rorb
sti
outsb
lea
das
mov
fcmovbe
test
test
movsl
dec
cmp
cltd
dec
out
xchg
lret
mov
cmp
pop
cld
loop
jecxz
cli
sbb
out
lret
xchg
mov
xor
dec
inc
movsb
lret
fcomi
inc
mov
aam
add
cltd
and
cltd
sub
push
inc
out
popf
mov
stc
xor
or
and
iret
mov
int3
fwait
jnp
jns
cwtl
pop
mov
push
mov
out
or
jmp
and
jp
push
adc
aam
sbb
adc
rcrl
jge
imul
or
cmp
dec
js
shl
mov
adc
mov
sbb
inc
and
fnstenv
fdivrl
ljmp
adc
push
std
test
mov
mov
hlt
insl
xchg
jl
mov
add
stos
push
lds
popf
add
es
and
jbe
jle
pushf
sbb
sarl
aaa
adc
or
sub
jmp
lahf
iret
push
inc
mov
adc
xchg
push
push
shrl
loopne
and
das
test
add
lods
mov
repnz
repz
and
notb
sbb
scas
pop
and
mov
adc
into
inc
mov
mov
xchg
loopne
mov
sub
insl
pop
xchg
or
jb
test
iret
sub
mov
sti
out
jbe
out
sbb
repz
cmp
sbb
jp
xchg
test
xorb
inc
pop
or
sbb
lcall
ret
mov
loop
sub
add
pop
push
push
cmp
stos
mov
jbe
xchg
lret
sti
push
js
cmp
hlt
push
xchg
xor
fwait
and
sub
adcl
push
push
add
popf
mov
dec
stc
es
rcrl
pop
xor
pop
fildll
out
aaa
xchg
pop
mov
rcrl
out
and
push
jo
test
xchg
adc
push
mov
add
js
inc
xor
or
jmp
pop
jns
in
das
insb
add
cmpsb
movsb
lret
xor
pushf
fisttps
rcrl
push
dec
cmp
xor
and
pop
jg
enter
push
mov
mov
in
jno
sub
cmp
lret
enter
cmp
aas
hlt
mov
dec
adc
fnstsw
ljmp
adc
imul
sub
xchg
sub
inc
daa
dec
shlb
scas
xor
stc
push
mov
test
mov
push
or
sbb
cmc
push
jecxz
or
xchg
pop
or
loopne
je
push
pop
fcoms
xor
aam
sub
add
jl
and
lock
jbe
aaa
fadds
iret
aad
leave
call
lahf
mov
inc
fmuls
in
test
mov
mov
jge
movsl
shll
and
jo
popa
jne
jno
aas
out
pop
push
fsincos
movb
dec
push
xor
jno
xor
in
adc
fwait
jp
mov
adc
jp
mov
sub
adc
and
repnz
sbb
icebp
cmpsb
cmpsl
sbb
loop
mov
testb
dec
sbb
mov
xor
enter
lret
xor
push
mov
into
cld
pop
or
and
fwait
or
or
mov
les
out
xchg
add
add
out
or
rol
and
shlb
sar
mov
and
pop
enter
mov
gs
out
repnz
push
addb
push
leave
cld
aam
aad
fidivs
mov
ret
and
iret
sub
sbb
nop
mov
aas
xorb
shrl
push
mov
mov
mov
mov
jae
out
jbe
mov
ja
jl
in
cmpl
mov
xchg
ja
movsl
outsb
sbb
mov
ljmp
fs
fcomps
fs
lods
scas
pop
dec
fiadds
sbb
xchg
mov
mov
mov
or
jp
add
inc
mov
pop
mov
cli
jnp
es
popa
xchg
xchg
and
push
jmp
xchg
test
lcall
or
push
jae
sar
mov
adcl
clc
inc
movsl
sbb
push
loopne
sbbb
push
add
ljmp
je
out
pop
cltd
stos
mov
dec
pop
mov
inc
sub
jle
cltd
imul
or
mov
push
inc
inc
stc
mov
cmp
js
cmc
sbbl
push
jno
sbb
inc
mov
xchg
into
test
sub
xchg
fwait
push
mov
shrb
xorb
xchg
pop
sbb
push
jb
sbb
mov
icebp
add
add
mov
popf
test
or
jns
test
call
push
test
mov
movsl
and
mov
mov
jnp
sahf
sub
mov
xor
push
je
mov
fldenv
loope
xchg
std
in
lahf
xchg
mov
aad
dec
in
test
cmp
or
and
ljmp
es
arpl
jo
pop
hlt
jb
shll
fmul
loopne
fbstp
daa
and
push
inc
xor
movsl
dec
in
sbb
mov
adc
pop
gs
scas
cmc
or
inc
shll
push
jnp
test
dec
xor
push
out
mov
xchg
fnsave
pop
inc
lahf
inc
pop
stos
sbb
dec
inc
aas
cmp
sub
out
ds
xorl
cmp
and
aad
loope
mov
in
adc
scas
stos
jecxz
add
jne
xor
ficompl
and
inc
notl
fwait
mov
ds
fucomp
xor
push
dec
pop
imul
mov
lret
cwtl
and
daa
mov
ljmp
and
or
xor
adc
pop
jbe
dec
jle
movsl
adc
dec
sbb
pop
stos
lock
cld
and
xor
or
lret
fisubs
mov
lds
pop
fcomps
push
hlt
test
mov
mov
and
stos
sbb
and
and
pop
imul
inc
mov
jp
dec
mov
sbb
inc
mov
xchg
ret
nop
inc
mov
bound
data16
mov
mov
cmpsl
ja
dec
stc
jmp
mov
loopne
cli
pushf
push
lret
xchg
enter
sti
cmpsb
push
push
leave
xor
nop
sub
pop
push
rorb
mov
mov
jae
mov
and
leave
repnz
or
mov
testb
in
mov
sbb
xor
mov
mov
jbe
movsb
arpl
xor
arpl
inc
adcl
mov
jbe
dec
dec
mov
popa
jge
mov
add
ja
add
cmpsl
jmp
sub
sub
mov
and
dec
cltd
gs
cmp
outsl
hlt
jno
xor
out
xor
add
jg
cs
dec
in
push
cltd
mov
rorb
test
aad
pop
jmp
insl
and
mov
pop
and
hlt
jge
dec
repnz
aas
test
mov
xchg
mov
ja
fwait
xor
repz
bound
imul
imul
jle
xchg
insl
and
mov
adc
lcall
lcall
call
inc
cmpsb
sti
andb
or
test
fcoml
xchg
and
mov
jl
es
xchg
mov
mov
outsl
add
mov
pushf
in
or
adc
les
movsb
xchg
sbb
jae
mov
ss
lods
xchg
imul
inc
xor
and
scas
mov
pop
jne
outsb
in
jae
add
jne
outsl
cmp
outsb
scas
and
xchg
pop
xchg
add
fnstsw
sbb
stc
test
pop
mov
adc
sbb
dec
into
das
and
or
data16
xchg
fwait
cmp
or
stos
mov
push
xchg
adc
mov
repnz
adc
xor
pop
outsl
lret
and
sti
push
in
mov
dec
cmc
ja
cmp
push
dec
or
push
push
push
dec
imul
cmpsb
add
xchg
push
rcl
mov
mov
push
or
mov
cmpsb
adc
sbb
pop
aas
arpl
cltd
sahf
inc
mov
ret
jecxz
cmpsl
mov
pop
dec
enter
jg
inc
nop
adc
popf
cltd
dec
cld
mov
mov
ret
ret
mov
sub
test
xor
icebp
sbb
sqrtps
pop
cmc
cli
sbb
xchg
lock
adc
repnz
leave
pop
cltd
movsb
mov
pop
cmp
pop
aam
std
xor
cli
cltd
fsubrp
movsb
daa
lds
mov
int
fildll
das
sub
pop
or
repz
jns
test
in
push
cmp
inc
pusha
pop
call
fmul
outsl
insb
repnz
xlat
xor
sarl
lods
bound
xorl
mov
xor
mov
mov
push
sbb
xchg
xor
repz
pop
dec
mov
cmp
jb,pt
jp
ds
in
add
adc
fsubr
mov
cli
jbe
aad
jl
je
insb
je
jnp
jns
js
and
cli
push
je
mov
xor
pop
dec
adc
pop
in
mov
add
inc
loop
add
push
popl
sbb
mov
insl
pop
inc
repz
fwait
push
movsb
lods
scas
mov
movsl
sbb
rcr
cmp
hlt
mov
cmc
insb
inc
adc
sub
ds
test
push
mov
push
and
xchg
xor
mov
jg
outsl
jecxz
push
or
cli
lcall
dec
xor
aad
push
sbb
je
loope
inc
sub
mov
mov
jmp
mov
mov
hlt
push
xchg
add
lods
sarb
call
aad
add
es
cs
dec
mov
hlt
int
cmp
fs
dec
push
mov
lcall
movsb
fwait
cmc
cwtl
jg
inc
sahf
mov
cmp
sub
push
nop
mov
in
add
mov
sarb
shrb
mov
cmp
popa
iret
mov
imul
lcall
adc
imul
sub
imul
hlt
and
mov
aas
ret
mov
dec
cmpsb
insb
iret
out
pop
pusha
push
test
fcompl
inc
mov
stos
out
jb
test
inc
mov
and
pop
dec
xchg
mov
ret
jno
bound
xchg
test
scas
mov
pop
out
push
pop
xchg
pop
repz
movsb
pop
nop
pop
mov
lret
clc
cmp
mov
mov
in
jb
push
fdivrl
sub
movsb
icebp
test
pop
sbb
testb
stos
sub
xor
add
xor
push
push
loop
adc
inc
sbb
jne
add
jno
lcall
sub
lret
push
test
out
sub
hlt
xor
pop
adc
mov
stc
ja
stos
stos
cmpsb
or
ror
mov
push
xchg
and
jmp
xor
mov
mov
pop
cmp
incl
lds
lcall
xchg
inc
cmp
lds
sub
jnp
out
ss
pop
dec
add
and
xchg
jl
mov
and
out
push
fnstenv
cmp
sub
movsl
in
mov
cmp
test
popf
sti
cli
fildll
mov
pop
xchg
loope
adc
arpl
lahf
cmp
adc
stos
test
call
push
jno
aad
out
jo
mov
cmpb
jne
add
pop
dec
cltd
pop
push
repz
pushf
mov
jmp
and
stos
sbb
jnp
movsb
lea
xchg
jecxz
sub
lods
xchg
jl
mov
daa
cltd
std
movsb
xchg
enter
jno
dec
ja
sbb
stc
ljmp
jl
je
movsb
sahf
repz
add
pop
or
sbb
xor
popf
imul
dec
and
mov
xor
cmpsb
cli
cmp
and
adc
test
test
sbb
jecxz
sbb
stos
xchg
add
sbb
push
stos
xchg
inc
les
loop
shrb
pop
xlat
out
cmp
sbb
push
mov
and
iret
stos
inc
iret
int3
mov
push
sub
out
scas
stos
mov
int3
xchg
xor
rcrl
and
push
into
dec
mov
call
test
into
sbb
cs
pop
out
movsl
punpcklwd
xor
xchg
fadds
sbbb
loop
sbb
or
cltd
in
jb
mov
mov
shl
inc
jmp
pushf
push
dec
push
push
out
mov
stos
push
dec
mov
mov
pop
push
xor
push
cltd
mov
movl
inc
jne
inc
pop
add
xchg
imul
pop
jmp
aam
shlb
movsl
push
ljmp
loope
sub
jns
jno
popf
jmp
push
jo
mov
inc
es
or
cmp
lds
jnp
xchg
sti
call
hlt
lahf
jo
imul
je
cmp
sbb
sarb
inc
jle
xchg
in
add
fidivl
sbb
pop
xor
mov
jmp
mov
daa
ds
inc
ljmp
dec
cld
cs
dec
mov
xchg
cmp
pop
movsl
pusha
das
sub
mov
aam
mov
mov
ret
mov
inc
addr16
ja,pn
scas
and
int3
in
aad
adc
or
xchg
pop
add
in
pop
sub
and
lret
mov
bound
mov
adc
jne
xor
rclb
pop
pop
and
insl
xchg
cmc
sub
shlb
mov
cmp
and
fnstcw
out
jns
mov
sbb
add
inc
ffreep
add
imul
and
sub
jp
movsb
stos
repnz
outsb
fstl
mov
jecxz
movsb
mov
cli
lock
scas
ljmp
std
mov
push
leave
add
add
add
or
adc
adc
rorl
inc
dec
outsb
fiadds
rol
ds
testb
imulb
fildl
pop
in
ficoml
mov
nop
xor
xlat
add
movsb
out
xor
cs
jb
mov
dec
xor
sar
mov
inc
sbb
das
or
jne
sub
call
sarb
cmpsl
jmp
lahf
in
push
fldenv
repz
lods
movsl
mov
and
std
xor
flds
ror
mov
cli
pop
and
mov
mov
in
test
inc
cmp
push
out
int
je
int
clc
into
popf
push
pop
sar
push
xchg
cmp
sub
ss
mov
sub
xor
and
insl
or
imul
sbb
outsl
das
fidivs
test
movsb
cs
sarl
jge
loopne
adc
xchg
xor
or
xchg
and
rcrb
lds
or
cltd
mov
addr16
pop
jbe
fildll
repz
insl
cmp
sub
dec
push
adc
push
fdivrl
push
jle
mov
mov
jmp
pop
in
movsl
jb
icebp
lock
fildl
test
enter
outsb
pop
mov
mov
filds
dec
lock
sbb
test
pop
mov
inc
mov
clc
vpmaddwd
xchg
cltd
pop
loopne
jnp
xor
mov
adc
and
jl
mov
push
dec
outsb
nop
xor
mov
pusha
add
mov
mov
movsl
jne
mov
out
xchg
jl
ss
dec
int
inc
xchg
je
push
icebp
xor
push
pop
mov
cmp
ja
ss
mov
jnp
fptan
inc
test
mov
movsb
in
not
movsb
das
iret
popf
xor
cmp
xor
pop
push
in
stos
fwait
xchg
pop
fldl
sub
cmp
and
pop
mov
inc
stc
push
cmp
fistpl
loope
lcall
pop
and
insl
or
frstor
shll
jne
mov
fs
sub
test
pop
lahf
cmpsb
addb
repz
fnstenv
pop
lahf
jge
movsl
cmp
cmpsl
mov
push
cmp
mov
pop
imul
push
shl
mov
in
paddw
mov
jg
or
aaa
int3
iret
dec
in
icebp
int3
imul
gs
inc
add
pop
sub
dec
sub
sti
push
out
out
adc
movsl
in
push
cmp
xchg
mov
imul
frndint
cmc
mov
jmp
lds
mov
adc
mov
cmp
push
inc
mov
lock
xor
sbb
popf
ds
mov
xor
dec
insb
mov
sbb
mov
mov
clc
repz
adc
sub
jmp
cli
sub
lock
pop
push
jp
paddq
ja
xchg
pop
ss
in
xchg
pop
add
adc
xchg
xlat
arpl
daa
cmp
mov
mov
in
aaa
clc
lods
xchg
xor
and
push
in
fldz
sbb
ficoml
mov
mov
push
icebp
add
bound
sub
adcb
mov
sbb
test
adc
nop
pop
or
jns
cli
push
mov
les
mov
adc
in
test
out
test
mov
mov
lcall
aad
xchg
int
sahf
ficoms
push
sbb
ffree
lds
jmp
popf
arpl
add
cmp
xor
imul
sbbl
jnp
frstor
push
int3
or
cwtl
loope
lds
dec
dec
ds
push
jne
mov
aas
xchg
or
dec
mov
sti
cmp
sub
and
outsb
das
pop
test
aam
cwtl
sub
aad
shrl
dec
mov
sbb
sbb
mov
add
iret
xchg
out
ficompl
add
sub
movsl
cltd
int
mov
fnstcw
cmpsl
imul
dec
fwait
lret
mov
mov
and
addb
and
fnstcw
and
or
fldt
or
fdivrl
sub
xor
cwtl
and
ret
fstpl
jecxz
and
push
addr16
cli
mov
out
xchg
mov
in
pusha
fmull
mov
xchg
add
fsubs
int
mov
pop
mull
cld
pop
ret
mov
xlat
popa
mov
mov
hlt
cli
jns
int3
and
loope
jae
cltd
lcall
add
sbb
pop
cmp
subb
mov
mov
lcall
and
stc
xchg
adc
dec
loope
jge
enter
in
stos
sbb
cmpsl
xor
sbbb
dec
in
jmp
rcl
fstps
mov
sub
out
pop
stc
pop
sub
cli
movl
cmpb
aas
add
jne
and
mov
cwtl
or
lds
mov
pop
pop
push
aad
pop
or
and
cmp
aaa
pop
leave
in
and
nop
mov
loope
mov
lret
adc
divb
fwait
rcl
jne
in
and
or
aas
mov
sbbl
jg
fidivrl
imul
dec
fwait
lds
pop
adc
test
or
add
repnz
fcomip
ret
dec
dec
add
push
je
dec
lea
insb
sti
add
jb
pop
mov
mov
fstpt
xchg
adc
fistps
dec
lock
inc
jl
dec
and
adc
sarb
cmp
and
and
mov
mov
sub
imul
xchg
or
sbb
xor
aad
mov
or
mov
stos
xchg
jmp
add
js
scas
pop
push
and
add
test
push
in
mov
push
aas
mov
mov
pop
pop
mov
rcrb
mov
aad
shlb
mov
ficompl
inc
stos
mov
inc
jbe
cmc
sbb
nop
or
xor
mov
pop
jno
or
sub
inc
jnp
pushf
pop
ja
insl
xlat
leave
or
mov
movsb
sub
mov
xchg
popf
int
outsw
out
or
cmc
cmpsb
jns
xchg
ror
xor
and
pop
dec
ss
or
stc
inc
or
mov
xor
adc
addr16
jg
and
mov
xchg
lret
mov
repz
or
add
sub
or
fwait
jmp
cmp
cmp
es
mov
or
fwait
in
jge
jg
xor
sbb
aad
pop
icebp
or
pop
mov
es
xchg
scas
out
add
je
imul
cmc
push
and
psrlq
dec
cmc
hlt
out
aaa
mov
jecxz
clc
sub
out
lret
shr
aas
popf
jnp
mov
jne
outsl
rclb
test
pop
ljmp
repz
and
push
aaa
adc
mov
add
imul
lcall
cmp
stos
xchg
jno
fldenv
out
cli
adc
dec
jl
mov
mov
sub
jns
cld
mov
and
cli
lret
call
vshufpd
mov
iret
aas
clc
xchg
sub
sti
mov
sub
hlt
stc
sbbl
pop
je
xchg
sub
pop
inc
out
out
fnsave
cmpsl
clc
bnd
and
add
testb
rclb
adc
jno
hlt
movsl
in
or
pop
nop
pop
lea
jae
mov
pop
mov
cmp
mov
mov
push
cwtl
stos
cmp
push
xor
movsb
or
repz
mov
add
mov
and
loop
xor
and
push
inc
xchg
iret
adc
ja
hlt
cwtl
testb
lds
push
out
push
test
pop
stc
mov
sbb
add
sub
xchg
movsl
lock
mov
ror
mov
and
movsl
sahf
add
pusha
jno
int3
es
sub
xor
pusha
aad
jb
or
ja
push
jb
xchg
lahf
add
rolb
out
push
movsl
lea
lock
shr
lods
pop
loope
mov
lds
push
pushf
in
adc
cmp
mov
mov
cld
test
test
pushf
loop
jne
arpl
dec
adc
mov
lods
sbb
mov
jl
scas
adc
les
jo
add
dec
mov
add
cmpsb
inc
out
cmc
dec
ficoms
dec
adc
gs
mov
iret
mov
popf
mov
aam
rcll
cmp
imul
sbb
mov
add
cltd
xchg
adc
cltd
add
cmp
sub
in
sbb
jnp
div
ja
sahf
mov
imul
and
jecxz
cs
div
insb
pop
pop
lret
test
cld
leave
or
mov
outsb
sbb
mov
inc
sbb
add
push
cltd
jae
add
cmc
and
into
push
mov
outsb
mov
xorb
mov
jb
and
or
push
gs
inc
out
jns
or
cld
mov
cmpsl
lret
sbb
nop
rorl
mov
mov
test
repz
stc
sub
call
mov
insb
lahf
lret
sub
sbb
adc
sahf
sbb
les
mov
imul
add
in
lods
dec
aad
jp
xor
ret
mov
mov
ret
test
lahf
fnstenv
push
pushf
jnp
shll
jle
in
add
enter
and
push
nop
js
sbb
pusha
adc
add
mov
and
leave
adc
les
fs
out
dec
pop
jmp
loopne
stc
sahf
fcmovne
jmp
push
pop
fidivl
lret
imul
shl
add
loopne
inc
dec
mov
test
inc
scas
je
mov
cmc
sbbb
xchg
rclb
repz
xchg
dec
inc
dec
adc
xchg
clc
out
xchg
or
push
in
loopne
fs
and
cltd
push
stc
push
in
cmp
push
out
dec
inc
xor
jae
mov
push
sub
ret
loopne
movsl
lret
mov
or
stos
sahf
mov
inc
sub
adc
pop
out
sbb
push
cli
inc
mov
dec
sbb
fstp
dec
push
ss
pop
sbb
popf
cmpsb
imul
inc
dec
push
fsubrl
mov
cmp
add
and
sbb
pop
movsl
xchg
fwait
dec
mov
aam
in
and
xor
pop
and
dec
mov
or
and
loope
add
cld
cmpsl
mov
xchg
loopne
movsb
mov
stos
push
mov
leave
mov
gs
adc
cmp
push
ljmp
dec
jne
clc
push
out
fs
fcmovne
push
sbb
insb
mov
inc
mov
sbb
xor
inc
mov
sbb
mov
fdiv
mov
enter
ja
out
cmp
icebp
xchg
ljmp
and
shrl
insl
push
in
lea
mov
mov
daa
test
mov
or
les
cmp
mov
in
cld
and
jb
in
frstor
test
xor
adc
push
xchg
fdivs
daa
cs
nop
jecxz
jne
insb
movl
adc
inc
cmp
mov
sbb
mov
rcrl
jne
add
pop
push
out
inc
xor
cmp
and
adc
data16
jle
dec
inc
adcb
loopne
cmp
sarl
cwtl
dec
repnz
push
vminps
test
mov
out
test
xor
cltd
lods
mov
imul
insl
or
lds
mulb
jl
sbb
mov
xchg
cmp
lock
out
out
out
sub
mov
cmc
ja
out
jp
jmp
and
loopne
xlat
mov
dec
jne
and
mov
shr
je
push
push
dec
mov
or
aaa
test
repnz
je
mov
int3
sub
aad
jl
add
pop
out
pop
adc
mov
rcrl
rol
gs
sbb
mov
adc
stc
shl
lds
outsb
dec
pop
and
int
pop
enter
call
mov
jb
inc
mov
push
sub
pop
popa
mov
call
insb
pop
push
dec
push
aas
in
cmp
cmpsl
sbb
mov
js
xchg
push
sti
fstpt
movsl
bound
xchg
push
stos
mov
mov
imul
mov
ja
adc
push
xor
mov
enter
cmp
sahf
mov
add
jecxz
je
xchg
mov
cmp
adc
jl
subb
rclb
insb
add
cmp
fwait
stos
sbb
ja
frstor
imul
inc
ja
xchg
add
sahf
jp
inc
and
cmp
jmp
or
test
mov
loopne
pusha
and
sar
repnz
xlat
movsl
dec
stos
adc
mov
imul
mov
sbb
mov
or
jmp
mov
sub
sub
cmp
push
cmpsb
scas
test
loope
js
fistpll
ret
addr16
fwait
arpl
mov
inc
pusha
fwait
sbb
add
cmpsl
nop
into
lcall
xor
cmc
lea
xchg
out
add
rcrl
mov
sub
cwtl
mov
mov
lret
and
adc
cmpsl
jp
out
push
popf
push
xchg
mov
insb
sub
ds
push
pop
cmp
leave
mov
cmp
cmp
out
sbb
cmc
adcb
inc
gs
mov
cmp
lahf
sub
dec
mov
jbe
adc
in
cmp
xchg
cmc
cwtl
and
shll
imul
mov
fcmovnu
mov
lods
jg
push
int3
dec
pop
shlb
xor
lcall
sub
je
mov
enter
xchg
movsb
lret
pop
inc
pop
jmp
cmp
sub
and
cwtl
xchg
inc
xor
fldcw
mov
daa
outsl
cltd
pop
pop
jp
fimuls
mov
push
adc
filds
mov
test
mov
fs
lods
push
lahf
stos
clc
push
mov
je
inc
das
lcall
cmpsb
mov
sbb
or
dec
push
scas
popa
std
dec
dec
mov
imull
fdivrl
imul
loope
sbb
pushf
popa
shll
insb
lret
lods
mov
adc
stc
jae
subb
dec
mov
hlt
mov
jg
std
jg
imul
imul
mov
mov
inc
xor
cmp
pop
lcall
and
or
sbb
fwait
lret
dec
cmpsb
and
stos
and
inc
xorl
mov
lret
lods
jb
jmp
mov
sti
bound
iret
mov
mov
adc
xlat
into
cltd
dec
scas
mov
test
and
test
jno
fucomp
insl
push
in
jno
fadd
and
rclb
cmpsl
addr16
idivb
mov
jno
xor
andb
fwait
xlat
mov
push
outsb
sub
lret
mov
and
mov
add
sub
dec
adc
stc
pushf
sub
das
lds
mov
addr16
push
push
inc
lods
push
leave
inc
jnp
sti
inc
movsl
cmp
loope
hlt
idivb
jns
or
and
xchg
sbb
call
out
or
push
lds
loopne
mov
sbb
lea
sub
lock
lahf
sahf
ds
mov
xor
or
lcall
add
pop
sahf
lret
xor
ljmp
fsts
jae
lahf
sbb
les
ret
outsl
mov
adc
push
pop
mov
mov
imul
hlt
movsl
pmaxub
mov
push
sub
fiadds
add
sbb
dec
ja
movsl
jmp
movsl
push
data16
adc
enter
inc
or
fwait
imul
inc
pop
adc
cmpsb
sub
mov
test
push
pop
add
loop
xchg
leave
stos
test
fdivp
pop
jae
jno
mov
mov
push
push
mov
mov
jns
arpl
fldenv
xchg
call
and
add
test
dec
or
sub
dec
fdivrp
out
ror
xor
sbb
icebp
jmp
jmp
mov
or
xchg
dec
mov
and
rcr
lret
or
and
lods
mov
pop
pop
mov
mov
loopne
pop
repz
inc
sbb
pause
push
pop
mov
cmc
dec
jns
xchg
xchg
ds
dec
jmp
insl
sub
push
stos
sbb
sub
stos
aas
adc
xchg
cmpsb
sbb
icebp
push
sbb
mov
mov
mov
and
adc
lods
cmpsl
sti
dec
out
outsl
and
mov
dec
mov
mov
into
daa
push
scas
movb
pop
jge
add
xlat
jp
movsb
pop
mov
popf
xor
imul
xor
adc
inc
push
mov
cmpsb
stos
mov
dec
stc
enter
andl
lods
cmp
cwtl
add
loopne
xor
pushf
fwait
mov
xchg
adc
pushf
imul
movsl
jnp
lods
jns
adc
inc
pop
add
mov
pusha
lret
and
scas
sbb
sbb
stos
cmp
and
pop
jle
fidivs
sbb
jp
mov
push
mov
frstor
sahf
stc
lds
and
mov
push
cld
sbb
rorl
mov
push
mov
mov
cwtl
xor
sahf
je
aad
and
ret
ljmp
or
imulb
stos
sub
push
sahf
in
iret
movl
xchg
ficompl
mov
or
sub
cmp
cmc
xor
adc
sti
mov
pop
push
jae
in
aad
popf
repnz
scas
mov
enter
xchg
mov
adc
ret
or
pop
sbb
dec
cmp
pop
fldcw
push
push
movsl
jmp
xchg
test
int3
mov
aam
sbb
adc
lea
and
inc
daa
popa
sbb
mov
sti
xor
lahf
or
xchg
fs
xchg
sbb
data16
sbb
insb
aad
and
cmp
insb
fldcw
lret
pop
mov
cmp
dec
sub
and
xlat
cmpb
jg
xor
mov
xor
pusha
jbe
dec
aad
xchg
jns
jns
stos
inc
testl
xlat
shrb
cs
loopne
fs
mov
mov
mov
inc
out
sbb
addb
fwait
jnp
scas
ds
jae
bound
sbb
hlt
gs
popa
jnp
ret
xchg
out
xchg
and
nop
mov
ds
sbb
insl
pusha
idivb
mov
outsb
mov
sbb
cmp
leave
dec
ljmp
push
jp
ficoms
mov
outsb
cmc
jb
int3
xchg
aad
mov
loope
inc
xor
xor
mov
jmp
mov
test
je
jmp
add
adc
mov
cmp
lods
mov
mov
mov
in
add
orb
lock
and
cmp
jge
inc
lcall
and
xlat
adc
mov
sti
mov
js
hlt
test
sti
jmp
and
push
pop
fyl2x
jmp
push
mov
fisubrs
inc
jno
imul
cmp
adc
jmp
and
stc
mov
cmp
ljmp
shll
jnp
jmp
das
adcl
fldt
test
out
pop
aas
push
or
adc
mov
push
pop
movsl
pop
mov
std
lret
add
push
adc
test
mov
mov
lods
out
sbb
hlt
and
sub
orl
pop
imul
lea
jp
and
into
sbb
fwait
xor
out
cmp
cltd
xor
lds
lahf
xchg
jl
cmc
dec
hlt
scas
cli
sarb
mov
jmp
repz
mov
adc
mov
iret
or
mov
scas
sub
push
jne
cmp
fwait
in
pop
sbb
sub
ret
es
inc
lahf
jnp
sbb
rol
cs
mov
adc
xchg
test
nop
adc
inc
outsb
in
shl
lcall
xor
mov
jb
mov
das
idivb
in
or
push
bound
pop
fs
mov
out
and
sub
sbb
push
dec
xor
aad
in
scas
fwait
fwait
inc
aas
les
mov
cmpsl
movsb
mov
addr16
insb
aas
lds
adc
xchg
pop
adc
test
or
sbb
out
mov
aam
sub
cli
dec
rolb
ja
pop
outsb
out
mov
mov
mov
faddl
sahf
lcall
or
sub
jge
and
mov
sub
sbb
push
sahf
jns
push
mov
mov
sahf
and
mov
fucom
fwait
push
lcall
add
aam
sbb
icebp
imul
mov
mov
sub
mov
mov
test
in
pusha
and
popf
bound
sahf
sub
jmp
mov
mov
hlt
pop
or
push
mov
cmp
iret
sbb
cmp
and
sub
aas
mov
cli
stos
test
push
cmp
cmp
insl
cltd
mov
inc
repnz
mov
inc
and
fistpl
xchg
inc
cmpsl
inc
cmpsl
les
push
push
mov
fs
mov
rclb
fcompl
sbb
popa
roll
shlb
pushf
stos
stos
xor
adc
cmp
pusha
sti
ret
in
xor
pop
sub
mov
push
xor
fwait
jge
js
pusha
rol
shlb
jbe
xor
inc
cmp
in
adc
setb
mov
and
out
rcrb
aad
pop
dec
mov
in
cmp
mov
and
xlat
add
and
fldenv
lds
dec
sbb
jge
data16
test
and
clc
or
push
arpl
and
ficompl
xchg
cld
mov
sahf
jge
cmpsb
pushf
xchg
in
icebp
mov
push
rcrb
outsb
outsb
jmp
jmp
mov
js
loopne
shlb
test
fmuls
lcall
shll
xor
jnp
notl
test
mov
call
inc
or
mov
pop
out
cmpb
adc
pop
mov
and
js
enter
add
or
ret
inc
jb
mov
jl
mov
add
lds
dec
out
addr16
cmc
andb
jns
mov
popa
xlat
xlat
loop
push
cwtl
push
add
sbb
movsl
jne
mov
imul
push
es
inc
and
and
lock
pop
subl
add
pop
cmc
lods
jne
dec
xchg
pop
movsl
xor
inc
repz
adc
jnp
nop
dec
push
mov
mov
mov
stc
xchg
mov
cld
push
add
or
mov
cmpsb
cld
ret
xchg
aad
adc
xor
imul
add
add
dec
ds
cli
sub
outsb
jge
dec
mov
push
scas
jbe
mov
int
pop
jbe
insl
popf
not
xchg
sub
aam
dec
mov
mov
enter
xor
leave
test
and
pop
fs
insb
push
cwtl
pusha
xchg
out
sbb
shlb
aas
mov
popf
imul
sub
rcrb
sub
notl
gs
pop
cmp
sub
fld
inc
dec
or
jmp
lret
lds
jne
cmp
jns
xchg
mov
cmp
inc
in
leave
jbe
sub
andb
stos
xor
cmp
in
aas
mov
les
mov
out
push
ljmp
fxch
push
hlt
lret
lret
inc
cmp
aad
mov
or
inc
je
aas
mov
pushf
loope
popa
cmc
inc
in
repz
pop
mov
xor
cmp
ret
jo
cmp
jmp
xor
and
fnstcw
jno
jno
les
pcmpeqd
push
jl
aas
in
fwait
or
jns
data16
rorl
push
and
mov
cmp
cltd
inc
or
cs
dec
sub
inc
sahf
or
dec
mov
and
sti
ret
mov
cmc
out
enter
sub
test
xchg
and
ror
dec
icebp
push
or
shll
aad
fwait
mov
cmp
cwtl
dec
cmp
and
mov
mov
scas
aaa
or
or
dec
jge
sub
mov
rorb
jbe
push
and
mov
movsb
mov
lock
push
iret
into
stc
push
leave
dec
mov
mov
dec
mov
add
loopne
repnz
lock
inc
pop
xor
jp
fstps
aad
out
je
test
inc
mov
in
pusha
or
test
and
or
lret
in
jmp
cmp
or
stos
hlt
mov
lcall
sub
mov
mov
push
xor
sbb
jb
mov
mov
and
cmp
cld
inc
and
mov
dec
sbb
cmp
pop
pushf
cli
and
fwait
fwait
and
push
adc
test
add
negl
data16
in
fdivr
adc
sbb
lock
mov
xchg
rcrl
sbb
mov
rorb
es
scas
std
leave
jecxz
sbb
mov
adc
cmp
js
ror
lds
jo
outsb
push
and
ja
xchg
gs
cmpsb
lock
addr16
push
dec
push
out
xchg
shlb
pop
lcall
sub
pop
or
jnp
lret
push
movsl
inc
mov
dec
dec
sbb
cld
cwtl
mov
dec
push
cltd
or
sti
scas
test
jno
std
push
out
movsb
fistpl
iret
into
xchg
or
jl
mov
xchg
xchg
xorb
out
and
jb
stc
imul
push
or
cltd
cmp
loop
insl
fldcw
fbstp
dec
in
dec
loope
mov
mov
out
inc
mov
call
mov
and
jge
lret
add
and
outsb
rcrl
test
frstor
clc
xchg
mov
notl
sbb
es
aaa
mov
gs
jp
stos
mov
jo
lods
add
ficomps
cmc
and
add
inc
mov
cmpsl
jnp
lret
xor
mov
int
incl
cmpsl
or
iret
push
xchg
mov
enter
out
inc
and
cmp
insb
pop
outsb
shr
mov
out
pop
ljmp
mov
mov
lds
je
flds
sub
sub
mov
mov
cmp
cmp
leave
imul
aaa
or
and
mov
push
lcall
ss
inc
fadds
cwtl
icebp
mov
dec
push
fcomps
pop
and
sub
pop
insl
dec
popa
enter
imul
pop
mov
or
aad
mov
cmp
adc
add
shrl
test
in
ret
and
imul
iret
mov
imul
xor
jne
push
mov
adc
inc
xchg
mov
rorb
jmp
aaa
push
jmp
xorl
ret
push
mov
incb
mov
out
test
out
jle
sbb
pushf
stc
testl
jb
aam
out
mov
cld
inc
out
pop
adc
add
movsl
or
mov
ret
inc
movsl
mulb
mov
xchg
jne
cmc
out
jg
jp
in
sahf
loope
push
adc
adc
jbe
mov
sbb
bswap
push
inc
push
in
pop
daa
dec
loopne
or
adc
adc
mov
push
stos
call
leave
sbb
adc
lret
je
das
arpl
xchg
adc
jne
sti
ljmp
and
lods
daa
jb
jo
xchg
mov
and
dec
xchg
pop
shll
dec
in
out
adc
fmull
rorb
outsb
movsl
push
icebp
cld
mov
pop
or
jmp
in
push
test
test
mov
dec
test
mov
or
xor
add
nop
sub
cs
cmp
add
sbb
mov
cs
xchg
push
addr16
fbstp
insl
and
cmp
xchg
mov
pop
scas
pusha
rcrb
push
in
repz
adc
roll
lds
xchg
sub
xor
insb
pop
cwtl
iret
fwait
repz
sub
mov
mov
sub
outsl
pushf
jno
mov
push
out
mov
pop
xchg
adc
enter
push
add
cltd
inc
mov
ds
lret
out
pushf
fwait
out
imul
jmp
repnz
sbb
lea
mov
adcb
xchg
clc
icebp
imul
xchg
pop
xchg
cmp
popa
push
and
xchg
add
fsubs
push
adc
mov
mov
push
pop
lcall
lcall
orl
xlat
sbb
je
std
mov
or
mul
std
iret
sbb
mov
pop
lahf
mov
repnz
icebp
pop
out
into
icebp
jnp
jmp
dec
sbb
jle
movsl
mov
jbe
cli
and
sahf
mov
lahf
sarb
scas
sbb
dec
repnz
sahf
popf
mov
pop
ljmp
inc
fdivrl
mov
push
int3
mov
xchg
pop
xlat
sub
push
ret
adc
ret
add
cmpsb
mov
outsl
inc
repnz
xor
fwait
in
rcrb
inc
pop
add
add
xchg
adc
test
sub
jbe
sahf
inc
subl
mov
movsl
mov
nop
pop
push
movsl
fildl
out
je
fildl
mov
xchg
mov
mov
rcl
lret
mov
dec
push
movsb
jnp
repnz
mov
push
les
aad
dec
std
adc
ficoms
fs
out
loope
mov
adc
mov
icebp
sub
pop
aam
ficomps
add
icebp
mov
jmp
sbb
addb
jp
lods
mov
pop
push
lds
xor
push
dec
addr16
and
mov
push
jl
in
ret
in
icebp
fcmovu
add
pop
pop
iret
sub
push
lcall
sti
notb
dec
xchg
mov
xlat
ds
xchg
sbb
jnp
jg
fldt
mov
out
mov
enter
sub
xchg
lock
push
cmpsl
popa
and
in
or
cmpsb
inc
jnp
pop
gs
test
addr16
and
sub
push
test
and
fisubl
lret
and
test
sub
or
pop
fwait
in
push
sbb
and
cmpsl
stc
mov
sarl
js
and
xor
movsb
pop
or
movsl
imul
add
cmp
adc
sbb
je
cmc
push
jbe
or
mov
jo
mov
mov
jns
ret
gs
pop
push
iret
mov
and
in
inc
fnstcw
inc
and
pop
in
pushf
movsb
sbb
cltd
mov
mov
std
and
ljmp
and
mov
sbb
bound
cmp
jnp
mov
stos
ffreep
shll
adc
mov
xchg
testl
sbb
sbb
repnz
xor
rol
push
add
mov
cmp
ds
jae
ret
add
leave
add
subl
lcall
mov
mov
fmulp
fsubs
inc
jge
out
cmp
jns
adc
test
out
sub
mov
ds
es
xchg
call
mov
xor
out
mov
and
das
cmp
lret
xchg
jl
lds
mov
push
cltd
pop
sbb
sbb
jnp
adc
pop
add
cmpb
js
les
das
mov
mov
pop
stc
scas
xchg
inc
mov
es
sub
pop
dec
sbb
je
add
push
mov
data16
push
add
jp
mov
dec
sti
inc
sbb
cmp
mov
mov
je
xchg
ret
sbb
mov
aad
stc
fld
jmp
hlt
push
in
repnz
jb
sbb
ret
movsb
cmp
lods
mov
sbb
dec
cmovle
mov
push
clc
mov
cmp
cli
mov
sbb
rorb
mov
mov
aas
push
inc
scas
push
add
test
adcl
and
pop
mov
mov
and
subl
movsl
sbb
sbb
loopne
push
pop
or
add
gs
jge
lea
mov
lods
lcall
jne
cmp
pop
mov
lods
sub
pop
jge
or
mov
int3
dec
and
daa
dec
das
push
mov
aas
sahf
icebp
aad
mov
lcall
roll
fs
cmpsl
adc
xchg
out
jmp
push
cmp
ljmp
sbb
sbb
js
fnstsw
fstps
std
das
mov
mov
mov
lods
pop
lds
mov
rclb
lcall
jb
or
jl
xchg
xor
adc
movsb
inc
xchg
cmp
sbb
inc
call
jns
xor
pop
lock
push
cs
jo
test
xor
lret
mov
jno
xor
int3
add
loopne
stc
mov
in
pop
adc
int
iret
push
stos
push
fs
fiaddl
les
sti
lahf
pop
and
adcb
andl
pop
std
sbb
adc
mov
push
iret
out
pop
xor
cltd
loope
sub
in
cmp
ljmp
mov
adc
xor
out
lret
mov
lret
mov
pop
sti
add
cmpb
cltd
cmpsl
adc
xlat
mov
adc
addl
insl
rep
jns
inc
repnz
icebp
dec
roll
out
sub
mov
add
push
mov
sub
add
popf
aas
leave
pop
or
xlat
xchg
adc
sub
mov
mov
pushf
repnz
sub
xor
lret
xchg
sbb
out
dec
dec
cmp
aam
popf
mov
add
jecxz
inc
adc
ret
cwtl
repnz
mov
xor
nop
cmp
scas
and
jo
xchg
fwait
sub
mov
dec
mov
sti
jl
arpl
jb
call
les
mov
in
popa
jge
sbbl
arpl
mov
mov
or
roll
leave
jl
jo
jae
pop
jnp
or
je
in
insl
push
jae
sub
push
sub
jne
mov
mov
dec
test
in
pop
int3
and
dec
push
xlat
push
cmp
and
jbe
sub
xchg
fxch
push
sbb
xchg
cmpsl
sub
rcr
mov
dec
cs
sti
mov
and
aam
push
xor
testb
test
ficomps
cmp
je
hlt
jo
inc
add
inc
lcall
rorb
mov
inc
jne
mov
and
pop
test
mov
std
gs
sbb
popf
daa
dec
mov
out
cmpsl
sbb
pop
sar
movsl
xor
mov
pop
popa
dec
jbe
jmp
inc
ljmp
xchg
bound
testb
cwtl
mov
lret
inc
test
or
mov
hlt
stos
push
jae
stc
inc
xor
enter
mov
sbb
jge
out
mov
dec
xor
mov
mov
lds
push
push
fs
cld
out
sbb
xchg
es
push
aaa
popf
shl
and
repz
inc
jo
stos
push
add
imul
push
jo
jecxz
mov
pop
mov
adc
nop
push
mov
push
cmp
jmp
dec
clc
fnstenv
iret
aad
mov
and
and
add
and
dec
out
repz
jae
xlat
adc
xchg
loope
insb
inc
xchg
shr
adc
sbb
mov
imul
in
jg
lds
or
subb
not
loope
rol
or
aam
shl
vpcmpeqd
dec
leave
sbb
add
insb
in
movsl
test
cwtl
adc
push
jns
mov
in
cmp
lock
cmp
cmpb
cmp
popa
sbb
mov
or
add
into
mov
fsts
imul
xor
jne
or
mov
inc
mov
lds
push
inc
movsl
push
add
mov
mov
lret
stos
sbb
popl
push
mov
cld
push
xchg
imul
pusha
mov
pop
mov
mov
fdivrs
int3
and
jbe
arpl
push
jne
stos
ljmp
enter
iret
sub
sbb
xchg
push
pop
sti
and
addr16
mov
outsl
lock
push
mulb
cmp
xchg
adc
movb
movsb
adc
fwait
mov
inc
cmc
fiaddl
movsl
sbb
mov
cmp
xor
sbb
jg
out
mov
fwait
inc
mov
mov
cwtl
mov
xchg
loop
mov
push
sbb
setb
mov
out
inc
push
test
mov
popa
insl
sub
xor
xchg
sarb
sbb
and
push
sbb
movsb
push
sahf
popa
xlat
in
or
ljmp
mov
jmp
test
dec
in
hlt
push
and
sub
adc
cmp
leave
mov
leave
imul
mov
std
fsub
sbb
jle
lods
push
mov
mov
mov
jnp
adc
xchg
add
add
pop
enter
outsl
lds
lahf
or
push
xchg
dec
lret
hlt
or
or
or
jno
into
call
out
leave
mov
mov
adc
stc
pop
mov
pop
in
ret
jmp
sbb
mov
push
pop
hlt
mov
arpl
popl
xchg
into
mov
hlt
dec
push
mov
test
xchg
jmp
pop
push
loopne
sub
mov
movsl
lds
test
loopne
xor
sub
jl
or
jge
out
mov
cld
cmp
js
sbb
inc
cwtl
mov
call
frstor
adc
in
add
inc
insl
pusha
pop
push
xchg
popf
inc
adc
mov
fcmovnbe
addr16
scas
leave
add
mov
test
int3
mov
inc
sbb
pop
leave
jae
test
cmp
fwait
jnp
sub
xor
pushf
jo
fistl
mov
into
pushf
sbb
cli
lea
lods
stc
sub
mov
sahf
mov
arpl
inc
je
mov
mov
add
cmpsb
or
loopne
mov
lods
enter
stos
in
pop
call
fdivp
insb
aam
pop
int
sahf
xor
add
cmpsl
dec
outsb
add
and
test
jle
mov
call
jo
in
repnz
imul
flds
xchg
scas
cmp
adc
and
add
push
mov
jge
fnstenv
push
fs
sbb
iret
jb
into
mov
jne
xor
mov
outsb
mov
sbb
lret
push
push
lods
pop
jb
sbb
cmc
mov
test
pop
sahf
mov
loopne
dec
mov
mov
jl
gs
mov
pop
outsl
sbb
lret
adc
sub
jmp
jb
jmp
dec
xchg
adc
jge
in
outsb
xchg
ret
pop
and
sbb
jle
addr16
ret
mov
inc
push
icebp
lods
test
out
cmpsb
mov
mov
pop
into
ljmp
xchg
cmpsb
inc
push
cmova
push
sub
lahf
repz
cld
and
cmpb
mov
fwait
inc
and
sbb
xchg
dec
repz
int
movsl
dec
and
mov
das
jmp
sbb
cltd
cmpsl
mov
cmovl
dec
dec
sub
imul
fs
cmp
pop
mov
es
xchg
mov
pop
xchg
jns
jge
mov
stos
adc
daa
cmp
cltd
inc
lcall
add
pushf
jge
enter
pop
jge
xchg
adc
test
adc
and
aaa
dec
push
sub
pop
cmp
mov
adc
or
mov
and
dec
frstor
cmp
add
repz
mov
or
dec
stos
lcall
mov
addr16
sbb
dec
loopne
sti
imul
aam
mov
lock
sahf
sbb
mov
decb
popf
ljmp
hlt
mov
in
lea
and
mov
mov
and
sub
jnp
jl
stc
fstpl
mov
sbb
cmp
repnz
les
stc
pop
aad
fmul
and
xor
pop
or
loope
cmpl
sbb
mov
js
popf
or
push
rorl
push
shlb
sub
mov
mov
mov
loop
shll
sbb
pushf
mov
leave
lcall
rcrb
dec
pop
fld
lods
or
ja
mov
mov
aad
jbe
data16
cmc
sbb
mov
jmp
shl
pop
or
popf
in
and
dec
out
mov
mov
xchg
and
repz
sub
pop
add
and
and
lods
push
adc
xor
cltd
and
mov
imul
jg
addr16
in
test
mov
sub
mov
lcall
or
cltd
cmp
or
inc
lcall
in
or
and
mov
mov
lock
and
out
sub
bound
loop
sub
loopne
mov
and
pop
push
lock
mov
jns
pop
iret
fidivrs
orl
xchg
pop
int3
mov
sbbb
sub
fidivrl
call
adc
mov
lret
cld
jo
ficoml
adc
call
push
dec
cmpsl
mov
icebp
repnz
mov
push
inc
scas
pusha
mov
sub
cmp
push
sbb
cli
inc
mov
test
xchg
bound
jb
enter
es
outsl
xchg
call
popa
hlt
push
adcl
inc
in
lds
or
sbb
jns
jbe
cmp
mov
daa
or
mov
sarl
inc
jo
in
xchg
fwait
sbb
pop
insb
mov
sti
jbe
pop
xor
sar
cmpsb
add
add
pop
xor
add
adc
jb
adc
insl
repnz
pop
jecxz
add
push
in
dec
cmp
or
pop
icebp
ds
repnz
aas
pushf
out
scas
push
cwtl
push
mov
push
incb
mov
mov
jne
dec
mov
inc
xor
divb
out
pushf
es
push
jns
int3
mov
faddl
sbbb
repnz
lea
add
cmp
xchg
add
rcll
addr16
sbb
xchg
sub
std
push
mov
nop
mov
mov
insl
sub
and
mov
dec
arpl
popf
das
imul
mov
lahf
int
sub
and
ljmp
loop
jl
adc
stos
mov
sub
inc
pop
and
in
sti
adc
repz
xchg
lea
cld
enter
mov
stos
adc
inc
repz
xchg
sub
in
push
call
fstpl
mov
rcll
xor
xor
jbe
or
das
cli
lods
fistl
test
popf
dec
lds
sub
and
xor
pop
cltd
mov
cmp
pop
subb
cltd
or
gs
or
cmpsb
lret
cmc
ja
mov
and
imul
mov
mov
jo
add
outsl
jae
mov
sti
dec
push
xchg
test
jbe
mov
cli
test
sub
repz
inc
inc
les
jo
xchg
jne
ret
push
xchg
mov
and
pop
stc
xchg
cmp
adc
push
mov
stos
shr
jl
data16
mov
sbb
cs
movsl
push
flds
frndint
aas
lock
cltd
je
mov
popf
popa
fs
xchg
pop
mov
jp
push
pop
shrl
mov
aaa
rolb
ds
shlb
push
mov
xor
xor
jne
in
pop
push
ljmp
movsb
jnp
or
sbb
dec
cmp
mov
mov
scas
inc
mov
mov
clc
add
push
call
add
cmpl
xor
mov
jge
lock
inc
sbb
ja
jg
mov
jo
adc
dec
fwait
les
aad
xchg
call
xchg
mov
or
push
ret
dec
repz
jmp
arpl
mov
out
loopne
push
aam
in
mov
mov
ss
cli
aam
sub
sarl
pop
sub
or
test
imul
test
xchg
hlt
mov
ficoms
and
fsubrl
add
mov
mov
push
lahf
jae
add
and
sbb
and
xchg
push
add
outsl
les
sub
cltd
scas
pop
dec
xor
rol
mov
mov
jp
stc
dec
mov
mov
mov
in
mov
sbb
xlat
lret
cmpsl
imul
stc
pop
out
mov
je
dec
ss
gs
insb
out
mov
push
push
cltd
movsl
popf
daa
sub
push
mov
daa
adc
jns
aaa
loop
hlt
inc
mov
inc
xchg
es
mov
dec
pop
hlt
mov
mov
and
push
jnp
int
xlat
fsincos
mov
lcall
adc
adc
jle
mov
mov
test
and
leave
mov
dec
xchg
bound
leave
push
mov
clc
and
adcl
add
mulb
pop
sbb
mov
mov
test
jo
int
stos
cs
pop
push
lret
sub
pop
pshufw
sbbl
stc
cmp
test
sarb
movsl
jle
push
int
pop
sub
jo
push
test
aad
mov
and
stos
push
popf
insl
push
les
mov
repnz
add
push
push
or
stos
xchg
lods
cmc
out
mov
xchg
or
mov
dec
sbb
sahf
cmc
sarl
jmp
std
lahf
cmp
and
ret
push
mov
repz
jnp
sahf
push
push
mov
sbb
pushf
sbb
cmp
je
jb
ljmp
ds
adc
ret
pop
jnp
into
adc
xor
mov
xchg
scas
out
mov
aas
ja
xor
out
lret
sbb
fs
aam
lcall
mov
mov
cld
jno
pop
and
daa
mull
mov
mov
lcallw
lret
cmp
bound
andl
icebp
adc
divb
leave
mov
out
das
mov
jae
inc
add
jecxz
mov
jmp
outsl
push
iret
mov
adc
int3
test
and
gs
adc
push
loopne
jl
div
or
jo
sti
jb
movsl
xchg
clc
out
cmp
or
sbb
rolb
popf
aas
hlt
jbe
nop
test
mov
out
lods
cmpsb
imul
pop
cmp
int3
adc
cmpsl
pop
jns
mov
shl
arpl
pop
mov
inc
mov
shlb
rcrb
popf
xor
imul
jb
or
std
mov
xor
jp
fimuls
push
push
loopne
popf
jae
push
sbb
filds
cpuid
or
cmp
mov
lret
xchg
test
lahf
pushw
cltd
mov
stos
push
sahf
mov
into
jbe
push
gs
sbb
movsl
dec
pop
and
jo
dec
push
out
sbb
out
or
cmpsb
mov
adc
mov
xorb
hlt
mov
sub
jmp
pop
stc
fdivs
test
std
cmpsl
fwait
push
shl
lahf
imul
xchg
out
loop
dec
jne
pop
or
imul
fstps
xor
repz
mov
xchg
into
ja
mov
mov
jno
pop
jmp
sbb
push
dec
push
mov
fs
gs
mov
inc
movsl
aas
fcomip
out
lea
mov
push
ficompl
stos
addr16
mov
and
inc
mov
sub
push
outsl
outsl
dec
inc
aad
xchg
sbb
mov
test
mov
lods
push
lret
mov
outsl
hlt
lahf
in
subb
call
test
cmp
mov
mov
add
cmp
add
dec
xchg
pop
imul
push
cmpsl
ret
mov
lods
inc
clc
jb
push
icebp
enter
sub
fistps
imul
gs
aam
xchg
and
jle
not
jmp
in
rcrb
push
imul
shlb
or
pop
push
test
fldenv
arpl
mov
stc
shlb
or
test
pushf
jl
inc
push
push
or
or
fstpl
xorl
pop
pop
es
cmpsl
mov
jmp
cwtl
and
sti
mov
push
pop
lock
sti
xchg
mov
sub
fnstsw
or
clc
pop
rolb
movsl
lock
and
jecxz
scas
sub
popf
in
stos
push
sbb
xchg
sub
mov
dec
out
out
xchg
adc
and
inc
aam
add
gs
enter
movsl
adc
lcall
fwait
pop
repnz
dec
repnz
xchg
xchg
cltd
push
mov
mov
cs
popf
imul
mov
je
push
in
lret
test
sub
sbbb
out
dec
sub
mov
inc
push
loop
aam
xchg
loope
mov
sub
mov
call
push
pop
cli
jb
out
jmp
or
sbb
pop
insb
stos
fs
data16
cmpsb
idiv
jbe
lahf
mov
fs
push
ss
mov
pusha
push
push
hlt
repnz
xchg
add
mov
fcmovne
mov
int
adc
dec
gs
sahf
cmp
jg
fwait
cmp
mov
cmp
sub
adc
xor
push
adcl
xor
sarl
or
xor
jmp
in
pop
aas
mov
rorb
pop
jno
mov
xchg
fstps
inc
pop
adc
inc
scas
mov
mov
out
sbb
xor
and
sub
mov
lea
ds
sub
add
sub
mov
inc
ljmp
adc
shr
and
jl
cmp
push
sbb
sbb
fwait
sti
push
std
fiaddl
push
mov
push
cmpsl
js
mov
and
ss
xchg
xorl
fwait
jns
push
inc
das
loopne
lds
fnsave
ret
inc
push
cmp
dec
ds
data16
clc
int
dec
out
std
dec
cmpsb
fwait
les
xor
scas
push
cs
mov
or
das
pushf
pop
lea
outsl
mov
pop
mov
jns
nop
jo
scas
sub
mov
sub
je
sub
jmp
lock
mov
test
outsl
mov
sub
imul
cli
aam
mov
jmp
cmp
mov
cld
iret
mov
aaa
push
fcoml
lods
clc
jbe
stc
adc
sbb
fcomps
orl
fs
mov
repz
pop
pop
push
jno
mov
dec
leave
xchg
and
sbb
xchg
xlat
push
add
lods
add
sti
add
xor
adc
cltd
mov
add
stos
jnp
ret
sti
sbb
sub
mov
and
xlat
xor
int
stc
pop
fnstcw
mov
pop
loope
aad
iret
add
pop
lods
pushf
push
mov
and
ret
xchg
test
aas
test
mov
sub
mov
sbb
sbb
cmpsb
cmpsl
mov
ret
out
add
cmpsl
mov
mov
loop
test
mov
xchg
lcall
and
xor
inc
jne
repz
lahf
and
pop
mov
loop
out
push
or
pop
cltd
scas
jne
mov
dec
pop
push
dec
inc
sub
addb
lds
fbstp
push
sbb
cmpb
xor
jl
mov
imul
xor
fs
stos
push
enter
in
shll
adc
push
subl
xchg
xchg
jb
les
stos
jg
mov
sub
push
aas
mov
or
movsb
test
jb
jg
fnsave
push
ja
inc
sahf
xchg
cld
push
aaa
xorb
es
lret
cltd
pop
js
mov
sub
int3
and
and
mov
cwtl
cmpsb
popa
popf
mov
xor
mov
mov
scas
in
inc
adc
jle
in
mov
imul
xor
add
lret
ljmp
push
test
dec
sub
jb
jne
in
inc
call
sbb
xchg
mov
mov
pushf
mov
sub
mov
out
insb
insl
divl
xor
test
mov
mov
xchg
imul
mov
pop
hlt
mov
jmp
addb
scas
iret
or
ret
out
jo
sbb
iret
popa
push
inc
push
mov
popf
lret
jbe
scas
testb
dec
lods
pop
outsl
rol
inc
ret
mov
inc
shlb
cmp
fwait
das
lcall
movsb
data16
insb
adc
push
xchg
scas
nop
push
push
pop
lret
inc
xor
and
cmpsl
xor
pop
inc
jp
ret
cmpsl
and
insb
and
pop
sub
adc
and
fcmovnu
fmull
xor
and
scas
popa
fidivl
push
and
in
mov
and
sub
sarb
add
sub
jmp
lahf
repnz
out
daa
int
xchg
mov
push
dec
xchg
push
add
mov
jb
mov
jmp
ret
or
jmp
jmp
clc
or
sbb
lods
outsb
mov
cmp
pop
cmp
dec
bound
ljmp
in
mov
adc
mov
mov
xchg
sbb
movsb
jno
repz
sub
imul
and
push
sarb
je
popf
xlat
or
scas
and
add
cld
or
adc
imulb
mov
jl
mov
ds
out
pop
gs
cmpsb
and
mov
xchg
sti
ja
adc
and
push
bound
clc
push
aam
add
into
push
xchg
test
sbb
int
mov
mov
xor
call
out
jl
shl
fldcw
in
dec
push
in
rdpmc
fstp
lret
out
cmp
das
fs
add
inc
mull
popf
pop
iret
repz
and
jnp
jmp
test
aad
sbb
out
cmp
into
push
in
fs
and
test
popf
imul
mov
mov
mov
arpl
in
cli
sub
mov
mov
and
mov
stos
mov
push
push
push
xchg
pop
mov
aas
mov
mov
sbb
loopne
push
js
cmpsl
stos
test
mov
in
pushl
mov
stc
lock
sbb
ret
xlat
mov
cmc
jle
push
cmp
mov
das
lods
add
mov
mov
adc
fsubs
push
scas
push
jge
adc
repz
aam
and
popf
mov
and
push
adc
xchg
aam
xor
fistl
popa
xor
ret
push
and
push
pop
mov
lcall
jp
xchg
pop
stc
enter
adc
stos
gs
push
mov
pop
lods
sbb
cli
and
mov
ljmp
lds
mov
lds
out
hlt
xchg
loope
sbb
outsl
pop
int3
and
imul
sbb
push
mov
leave
mov
scas
push
jge
movsb
pop
repnz
data16
mov
lahf
icebp
in
dec
fcompl
push
sbb
or
sbb
xchg
out
add
mov
inc
inc
cmpsl
call
aam
es
in
sub
push
movsl
add
and
push
sbbb
test
jl
in
mov
in
hlt
cmp
movsl
mov
sub
pop
jns
or
ds
stos
xchg
data16
es
loop
mov
mov
shl
hlt
and
mov
pop
mov
pop
pop
hlt
stc
and
add
and
xlat
jecxz
sub
push
in
add
inc
rcrb
jecxz
mov
mov
mov
hlt
mov
stos
fwait
pop
andl
adc
jns,pn
push
roll
push
jmp
xchg
dec
cli
mov
mulb
and
cwtl
inc
pop
add
add
jnp
push
popf
xor
mov
fbstp
push
xchg
adc
pop
fisttpl
and
fsts
dec
pop
in
add
sarl
mov
repz
jns
xchg
adc
out
xchg
dec
movsb
filds
mov
shll
pusha
cmp
push
imul
lret
movsb
out
dec
add
clc
push
insl
inc
pop
mov
cmpsl
pop
xor
and
mov
jg
subb
push
shlb
in
mov
or
sub
mov
mov
mov
push
and
movsl
bound
imul
mov
xchg
pushf
sahf
jnp
ss
pop
nop
rcrb
sub
xlat
cmp
pushf
cwtl
fisubs
sub
sbbb
test
in
inc
hlt
fbstp
lock
jecxz
mov
push
jge
and
bound
pushl
mov
ficompl
stc
sbb
jmp
pop
outsb
sbb
push
imul
or
jns
push
mov
and
imul
testb
pop
mov
adc
pop
js
sti
pop
mov
mov
ss
pop
shll
lock
ret
in
lcall
sbb
stos
mov
pop
mov
push
dec
cmp
mov
mov
mov
aam
pop
test
mov
adc
dec
cld
jle
or
adc
arpl
arpl
fnstsw
scas
adc
std
mov
insb
hlt
xor
ss
sbbb
add
mov
push
cmpsl
lret
stos
mov
or
call
mov
fbstp
lret
fdivl
repnz
popa
cmpsl
lret
out
enter
jne
xchg
sbb
mov
push
mov
inc
in
sub
jo
dec
jns
dec
xor
mov
or
adc
js
fdivl
addl
jle
xchg
pop
mov
fdivs
outsl
ljmp
lock
ret
lock
xor
enter
push
and
or
stos
int
adc
rorb
sbb
mov
nop
pop
cmp
xor
mov
mov
iret
adc
xlat
ret
test
sub
add
addr16
adc
mov
in
addl
sbb
cld
mov
lcall
inc
mov
mov
popa
jbe
daa
and
in
daa
out
pop
int3
lar
sahf
sbb
mov
loop
sbb
clc
into
inc
aaa
popa
jp
aas
dec
rcrl
mov
and
add
fcmovb
mov
call
pop
insl
lds
gs
mov
sarb
in
cmp
jle
sbb
cmp
dec
pop
push
push
sbb
in
fbstp
icebp
shlb
or
pop
aam
hlt
popa
jnp
mov
sbb
xchg
lcall
push
inc
mov
movsb
stos
movsb
push
xchg
out
jle
sbb
dec
xor
and
lods
jmp
or
pop
pop
cmpsb
mov
and
fisubs
cmpsl
cltd
mov
mov
sbb
xchg
fwait
mov
mov
aaa
ret
dec
mov
pop
rcr
lods
mov
adc
fldcw
push
inc
pushf
dec
xchg
cmp
repnz
mov
lret
xlat
in
push
notb
mov
xchg
gs
xchg
add
sbb
in
repz
sarb
outsb
push
imul
sti
and
repz
dec
jns
inc
lods
or
je
cmpsb
test
das
jge
or
jnp
mov
push
xor
mov
or
movsl
rclb
in
hlt
push
and
imul
adc
sub
jl
fs
inc
mov
mov
aaa
aam
sbb
out
xchg
pop
sbb
ss
sbb
ds
inc
and
adc
mov
mov
mov
out
pop
cltd
icebp
sbb
xchg
xor
mov
sub
outsb
mov
mov
pop
push
pop
or
cmp
fistpl
cmp
inc
sbb
icebp
or
pop
sub
dec
xchg
sub
in
sbb
aas
mov
in
je
cld
xlat
stos
in
test
pop
pop
ljmp
adc
addb
stc
mov
movsb
mov
mov
mov
xchg
incl
sbb
pop
dec
loope
cmp
mov
push
jmp
les
or
das
int3
xchg
cmp
mov
out
fidivs
mov
fstps
lock
idiv
repnz
cwtl
mov
cmp
roll
out
sbb
push
fists
lock
cmpsl
test
clc
add
or
xcrypt-cfb
cmpsl
mov
xor
out
in
add
xchg
movsb
mov
jb
pop
push
stos
aam
mov
xlat
pop
add
xor
movsl
popw
in
adc
sbb
or
lahf
out
pusha
rcll
inc
xchg
push
mov
mov
fwait
dec
fmull
movsl
bound
cmpsl
icebp
mov
or
adc
mov
mov
mov
imul
lahf
push
lods
aam
push
pop
push
mov
out
mov
insl
sbb
xchg
les
mov
call
das
dec
mov
xchg
andb
popf
mov
out
sbb
xchg
dec
or
arpl
ret
jne
aad
out
loopne
mov
shrb
ror
hlt
jecxz
out
fucomip
lds
mov
shrb
aad
stos
sub
test
jns
jecxz
repz
push
repz
imull
add
mov
mov
shll
and
or
adcl
fdecstp
sarb
cmp
mov
test
test
iret
ret
xor
xor
dec
and
nop
sbb
cs
sbbb
mov
jnp
in
orb
stos
repnz
sub
adc
xor
and
dec
lods
in
je
xor
cmp
push
push
cltd
fidivs
push
cmc
mov
xlat
cwtl
and
sub
adc
dec
inc
cmpsl
mov
test
je
pop
dec
mov
inc
or
movsb
icebp
inc
inc
fs
and
xor
loop
push
popa
add
jno
jnp
dec
cwtl
jne
aad
out
xor
enter
pop
push
addr16
dec
jns
dec
xchg
and
gs
mov
fisubl
cmp
call
jne
inc
add
pop
push
rclb
in
inc
mov
mov
or
pop
xor
dec
lahf
mov
jg
mov
loopne
lcall
pushf
and
and
xor
inc
lea
imul
shlb
push
jns
and
add
mulb
std
mov
js
xacquire
fs
and
out
pop
in
jbe
stc
and
scas
pop
arpl
dec
xchg
leave
push
jg
cli
fwait
add
incl
sarl
test
and
popa
sbb
mov
data16
dec
mov
scas
out
inc
mov
test
shl
pop
xor
add
mov
cmpsb
popf
adc
sbb
les
lock
push
add
inc
jp
xorb
mov
add
cmc
xchg
mov
jo
or
mov
inc
or
aam
inc
sbb
dec
inc
jae
sar
mov
aam
or
sub
popf
mov
adc
jmp
inc
test
or
pop
push
push
call
xchg
lock
aas
mov
in
dec
xor
mov
divl
pop
lock
cmp
mov
aas
dec
std
add
lret
sub
cmp
sarl
test
arpl
movsb
shlb
pop
int
sub
fcomps
movsl
jnp
inc
sbb
and
divl
cmpsb
mov
cmpsl
call
push
stc
rolb
pop
mov
test
jmp
test
out
push
add
adc
test
jnp
xor
fldl
cmp
push
jmp
sahf
sahf
push
nop
movsl
mov
test
into
cld
jo
cltd
stos
pusha
aas
add
sbb
xlat
es
pop
mov
sbbl
jecxz
mov
inc
fmull
shlb
out
in
in
jmp
and
into
add
pop
sub
lds
xlat
push
jmp
sbb
push
movsl
imul
mov
sti
pop
in
push
xchg
and
xor
mov
jmp
outsb
pushf
sar
test
inc
jecxz
mov
in
sub
loop
and
mov
jp
sbb
jmp
jle
mov
fcomi
xor
fmul
pop
jle
out
stc
jp
and
or
inc
push
rorb
fwait
pusha
fidivl
mov
add
movsl
pusha
push
and
xor
mov
jne
sbb
je
xchg
cmp
out
mov
out
mov
int
andl
push
test
adc
and
sub
sub
adc
arpl
xlat
push
inc
lcall
std
stc
cmp
movsl
jno
mov
aaa
push
test
adc
and
fwait
out
lcall
push
add
jmp
pop
in
xlat
mov
mov
cmp
fs
push
and
pop
fistpl
and
loope
cmpsl
xchg
sbb
aaa
out
aas
jbe
je
insb
jb
fucom
push
jmp
sarb
movsl
in
dec
lock
ss
sbbl
sub
imul
adc
jmp
mov
sbb
sub
test
jnp
or
cmpl
lcall
pop
mov
andb
dec
mov
aas
iret
push
int3
sysexit
add
mov
xchg
int
aam
aas
call
sub
jno
sbb
mov
add
in
mov
dec
mov
sahf
icebp
std
movsb
fwait
push
lods
xor
mov
sbb
sub
divb
or
jmp
rcl
or
pushf
xor
xor
mov
xchg
push
sbb
outsb
notl
loopne
inc
cwtl
lea
sahf
pushf
cmovne
mov
and
xchg
push
sbb
ficoml
lods
or
sbb
or
mov
jb
cltd
and
jp
cmp
push
aad
adc
sarb
pop
lods
cld
ds
call
sbb
fcoml
sbb
insl
lods
mov
in
xchg
fstps
das
add
lock
jne
push
jmp
out
cwtl
jge
mov
pop
adc
or
add
fisubs
rorb
push
in
jg
out
or
mov
pop
imul
les
and
xor
lock
sub
sub
mov
bound
sbb
movsb
shlb
into
gs
inc
and
xor
lahf
call
mov
aam
xchg
idiv
pop
pop
out
mov
mov
or
cld
fdivr
int
dec
jnp
cmpsb
fstpt
in
or
inc
loope
and
fwait
cmpsb
mov
lahf
fwait
pop
aaa
push
dec
lcall
jl
lcall
imull
add
add
mov
pushf
cmpsl
dec
cmpps
adc
cwtl
jo
inc
fs
and
push
loope
std
sbb
adc
jp
loopne
js
mov
jne
jp
mov
js
mov
fstps
add
idivl
repz
js
insl
xchg
mov
aam
into
and
mov
adc
stc
je
fstpt
ja
mov
in
enter
add
pop
cmpsl
cltd
pop
fidivl
movsl
std
data16
xor
shrl
mov
cmp
lahf
aaa
es
jmp
movsl
push
xchg
scas
xor
aam
enter
cmpsb
pop
mov
test
pop
ss
mov
call
nop
repnz
inc
inc
sub
xchg
outsb
mov
test
idivl
iret
xchg
push
dec
pop
sbb
jl
jl
cmp
rcrb
cmp
xlat
movsb
push
xchg
fptan
push
fisubrl
mov
push
xchg
pop
out
mov
std
jnp
pushf
call
rclb
mov
movsl
sbb
adc
js
into
dec
rorb
xor
icebp
in
std
cmpsb
jmp
addr16
cmp
xchg
mov
outsb
push
pushf
aam
jge
jg
xchg
imul
cmpl
jl
out
sahf
out
cmp
jge
repnz
mov
sbb
loop
into
scas
push
or
gs
mov
das
mov
les
add
lret
or
aad
aam
adc
mov
bound
jge
sarb
cmp
cmp
mov
outsl
movsb
dec
pusha
jp
xor
jne
js
xchg
xorl
loope
adc
and
jecxz
negb
hlt
dec
js
into
out
push
pop
adc
cmp
sbb
cmp
int
popa
sti
lahf
jae
and
fdivs
jo
aad
push
icebp
pop
adc
and
mov
or
out
adc
aas
add
push
xchg
sbb
repnz
jp
cmc
aad
sbb
lahf
jmp
cltd
inc
pop
adc
jmp
adc
or
mov
movsl
rcl
xchg
cmp
sub
jl
pop
ss
add
or
mov
lds
aam
xchg
push
inc
mov
js
stc
lock
push
mov
inc
pop
jge
mov
add
sbb
lods
jae
xchg
stos
xchg
mov
outsl
lea
mov
push
jmp
and
mov
inc
mov
mov
lcall
mov
xor
pop
and
pop
sbb
dec
in
in
lea
pop
pusha
repz
adc
add
sbb
movsb
dec
mov
jmp
imul
in
imul
mov
xchg
in
sti
push
sbb
fsubs
jmp
and
icebp
jg
xchg
dec
push
jne
pop
adc
inc
int
push
stc
outsl
add
cld
jae
popf
sbb
insb
and
dec
pop
stos
and
mov
cmp
mov
jbe
sbb
sahf
mov
lret
lcall
ljmp
and
dec
aad
in
out
dec
adc
cli
pop
sarb
push
mov
addr16
cmp
sbb
pop
sbb
lcall
or
jp
xchg
mov
gs
adcl
scas
push
sbb
add
inc
fisubrl
adc
or
fmulp
cmpsl
cmp
clc
jns
and
aas
scas
ffree
fbstp
gs
or
xor
jnp
test
in
xchg
insl
movsb
pop
aas
mov
add
jae
popf
fsubrs
leave
js
jmp
insb
push
push
mov
gs
dec
pushf
sub
pop
inc
sub
push
in
out
ljmp
inc
dec
adc
orl
sub
xor
rorb
jmp
sahf
jo
xchg
inc
cwtl
mov
or
lods
push
fwait
sbb
sbbb
sub
psubd
cmp
or
cmpsb
ja
roll
loope
pushl
imul
daa
inc
fmul
lods
lds
in
enter
mov
in
fwait
sub
fidivrs
mov
xchg
or
mov
aaa
lcall
imul
mov
aad
pop
in
out
cld
and
push
pop
inc
xlat
sub
pop
fldt
xor
stos
lds
xchg
jp
ja
in
jns
add
mov
loope
cld
popa
in
les
mov
push
pop
lcall
lea
sbb
or
xchg
inc
out
pop
sbb
das
mov
popf
mov
or
outsl
cmc
fistpll
jmp
je
sub
xchg
jno
ficomps
cmc
in
mov
and
add
aam
cmpsb
sti
cmp
mov
cmp
jbe
jb
inc
in
pop
push
mov
leave
shrb
out
inc
dec
out
add
adc
out
stc
sub
mov
movsb
or
adc
mov
ljmp
test
test
in
dec
lods
cmpsb
test
push
mov
lods
fnstsw
pop
mov
into
xchg
or
sti
inc
jb
pop
mov
in
xor
stc
int3
je
mov
mov
xchg
imul
cmpsl
lret
inc
sahf
mov
mov
push
push
pop
js
and
mov
pusha
mov
dec
jg
pop
sbb
mov
lds
mov
sahf
scas
out
test
inc
ss
adc
fildl
rol
jae
jmp
mov
rcrl
fisubrs
xchg
mov
movsb
jmp
push
and
scas
aad
data16
mov
pop
lcall
push
lahf
mov
movsl
jmp
out
insb
mov
clc
int
xchg
ss
shlb
cmc
mov
scas
les
sub
pushf
cwtl
pop
cli
mov
sbb
pusha
stc
pop
popa
xchg
rcl
fs
arpl
and
rcrl
jae
pop
inc
sarl
and
int
adc
mov
ficoml
or
mov
or
mov
clc
sub
push
inc
leave
add
dec
jns
cli
cmpsl
mov
and
push
pop
mov
add
aam
fdivl
fwait
popf
or
ds
icebp
and
mul
aad
jl
sub
cmc
ljmp
and
pop
and
stos
clc
and
shl
lods
add
push
fld
add
inc
mov
repnz
out
sbb
leave
clc
cmpsl
int
fisubl
mov
pop
cmpsl
hlt
lret
mov
mov
jns
adc
xor
stos
in
cwtl
push
and
std
sti
xlat
int3
orl
cli
ljmp
mov
jmp
mov
add
mov
imul
inc
jbe
pop
inc
and
mov
cwtl
out
pop
aaa
andl
lea
cmpsl
or
sbb
lret
or
fdivrs
in
xchg
dec
fwait
mov
and
add
aad
adc
mov
mov
imul
jb
imul
sbb
mov
adc
sbb
mov
dec
fwait
and
into
xor
test
leave
adc
nop
enter
mov
ret
mov
xchg
addl
and
sti
cmp
cmp
pop
loopne
adc
leave
sbb
push
fstps
xor
sub
dec
xchg
ljmp
int
and
cmp
les
mov
dec
mov
xchg
xchg
mov
cmp
sbb
push
int
clc
mov
cmp
and
adc
icebp
movsb
sahf
shlb
push
mov
sbb
fcoms
outsl
mov
std
out
test
ja
sub
mov
adc
por
xchg
outsl
aaa
ja
lds
hlt
rclb
frstor
jle
adc
and
sbb
xor
sub
aam
out
mov
enter
jb
fists
mov
push
adc
sub
mov
fists
ja
mov
testl
push
lds
cmp
cmpl
call
inc
stc
xor
mov
adc
test
mov
mov
dec
les
mov
mov
movsb
xor
mov
in
jl
push
sbb
mov
mov
jne
lods
in
fimuls
or
stos
cmp
sbb
test
push
test
neg
stc
stos
lods
outsl
xorl
or
xlat
jnp
pop
lahf
insb
pop
loope
xor
pop
pop
or
fistps
mov
test
sahf
daa
call
outsb
add
mov
add
popa
lcall
mov
push
and
adc
pop
or
pusha
ja
test
sub
in
leave
jno
je
into
jp
lahf
sub
pop
popf
mov
jecxz
xchg
push
pop
inc
pop
jmp
inc
sbb
shll
mov
lods
out
xchg
movsb
pop
xor
loop
inc
xchg
cmp
xor
mov
jmp
mov
jle
movsl
repz
insb
pop
data16
hlt
shl
fwait
adcl
dec
aas
xchg
inc
mov
adc
hlt
sbb
mov
pop
mov
outsl
jl
cmpsb
out
dec
mov
mov
sbb
push
jp
jge
mov
pop
jge
sbb
std
fwait
pop
fwait
pop
xchg
dec
inc
jae
mov
xchg
mov
mov
pop
push
stc
out
ds
mov
inc
inc
out
hlt
popa
jne
insb
mov
cmp
jbe
xchg
movsb
mov
out
cmp
nop
push
addr16
mov
loopne
iret
or
inc
mov
test
xchg
sbb
jae
dec
sbb
icebp
in
xor
jo
mov
lahf
sub
sub
dec
jne
pop
out
inc
mov
sbb
test
pushf
in
sub
or
sub
sub
data16
fs
daa
insl
div
loope
hlt
sahf
leave
add
mov
hlt
mov
in
add
lds
add
cmpsl
sarl
repz
mov
and
jns
add
mov
jns
or
lods
pop
jle
dec
adc
rcll
jns
stos
out
hlt
mov
mov
mov
push
jg
jmp
leave
js
stos
mov
dec
mov
ja
in
mov
jne
repz
jne
shl
mov
sub
mov
mov
push
push
int
popa
popa
repz
jns
and
in
lods
cltd
sbb
cmp
and
ret
cmpsl
orb
xor
aad
pop
hlt
aad
test
cmpsl
push
or
mov
adc
in
add
into
xchg
cmp
aad
mov
cmp
sbb
cmp
lahf
jnp
cltd
pop
mov
into
pop
jmp
addl
cmpsl
cmp
jle
mov
xchg
xor
xchg
ficompl
fwait
jmp
pop
inc
js
dec
insb
outsb
dec
adc
out
mov
dec
cmp
xchg
stos
xor
xor
pop
xor
or
inc
std
popf
and
mov
push
and
mov
and
daa
jmp
ds
pop
imul
lds
cmp
mov
cltd
mov
jp
in
jno
fmul
xor
es
movsb
loop
push
adc
sahf
fsubl
xchg
mov
sbb
dec
xchg
dec
pop
mov
js
mov
test
pop
xor
xor
fimull
leave
pop
sbb
lcall
push
jmp
push
xor
sbb
sarl
mov
push
ss
pop
mov
or
adc
in
jp
dec
sbb
in
lahf
jl
mov
mov
adc
dec
popf
cmp
lret
daa
xchg
shlb
add
lret
mov
int
xchg
push
or
out
dec
jp
add
testb
cmp
clc
ljmp
mov
mov
and
dec
test
jbe
push
inc
cmp
fmull
bound
mov
outsl
dec
mov
mov
sub
and
rcrb
movsl
or
pop
jp
aas
xor
cli
inc
test
add
ret
or
mov
push
sub
sbb
mov
mov
cmp
test
xchg
mov
clc
xchg
pushf
jae
mov
mov
imul
les
jnp
in
jnp
push
sti
call
pushf
mov
ja
sub
mov
mov
and
mov
nop
sbb
mov
mov
fdivrl
mov
sbb
add
jae,pt
mov
hlt
mov
movsl
sub
add
test
imul
data16
inc
stos
dec
ja
sti
jb
mov
sub
bound
into
daa
xor
mov
cmc
or
lahf
out
mov
repz
repnz
inc
inc
jle
fsubr
push
push
mov
aad
daa
iret
aam
mov
sbbl
cmpsb
scas
ficomps
flds
dec
shrb
xchg
mov
jecxz
shl
out
push
adc
lods
ret
idivb
test
mov
fcomps
xchg
jmp
dec
sbb
inc
ja
ja
inc
jg
pop
mov
adc
xchg
mov
shr
lret
sbb
mov
inc
mov
pop
das
aam
lcall
jl
or
push
inc
pop
mov
lods
out
sahf
daa
sub
test
mov
pop
jnp
mov
das
adc
aam
xchg
jmp
jg
or
mov
inc
stc
rclb
popa
and
leave
mov
adc
sbbl
cmc
adc
ljmp
dec
out
setg
dec
ret
lea
xor
imul
shl
dec
jmp
push
mov
and
jno
fwait
in
pop
movsb
dec
scas
add
sarl
movsl
popa
mov
jo
mov
mov
jae
out
fs
jle
repnz
aam
jne
push
sub
test
jb
cmpsb
jns
iret
sbb
lock
sbb
ds
dec
pop
in
jb
scas
and
call
movsl
in
mov
mov
sbb
pop
pop
aad
addl
mov
fs
pop
ror
xor
dec
imulb
lock
out
mov
iret
movsl
rcrl
or
into
testl
in
pop
rcrb
jge
in
je
pop
nop
adc
and
push
in
push
adc
fldt
push
add
inc
pop
jno
in
mov
jmp
std
inc
jg
inc
test
xlat
mov
pusha
ffreep
cmpsb
stos
dec
push
mov
aas
mov
hlt
es
inc
fdivs
or
or
mov
rol
outsl
ss
push
or
out
mov
add
mov
push
and
mov
movsb
pop
sub
cmp
inc
pop
movsl
push
insb
xchg
and
fs
cmpsb
mov
xor
xor
push
sub
mov
aas
ljmp
stos
add
cli
fldenv
js
fs
mov
cltd
or
lods
das
xchg
lods
cmp
mov
pop
insb
sub
mov
xor
aaa
pop
roll
push
xlat
sar
jmp
ret
and
xchg
mov
in
orl
mov
mov
cmpsl
sti
sbb
mov
aad
jmp
jle
lahf
lret
not
call
mov
movsb
fs
sbb
imul
sbb
sub
sub
xor
shlb
mov
cli
mov
fcmovnb
sub
nop
fwait
ljmp
pushf
stos
inc
pop
cmpsl
jecxz
fildll
cwtl
or
adcb
jno
gs
fwait
sbb
int3
add
and
addr16
jp
mov
mov
lock
scas
mov
test
push
mov
xchg
mov
fsubrp
cmpsl
cld
jge
stc
xchg
push
clc
lods
mov
fsubrs
push
jle
iret
dec
jne
dec
sub
pop
mov
xchg
es
mov
je
mov
stos
add
sbb
dec
imul
cwtl
fnstenv
data16
mov
ljmp
xchg
subps
inc
movsl
movsl
adc
mov
pop
ret
aaa
test
lods
xor
cli
lret
out
sbb
xchg
fbstp
xchg
fsubrs
push
dec
sub
sub
pop
ror
jl
mov
cmp
pop
lret
push
sbb
popf
cmp
out
ret
cmpsl
hlt
or
testl
push
test
jmp
dec
inc
push
mov
pop
or
cltd
popf
in
or
mov
out
test
add
or
nop
movsl
shr
mov
mov
movsl
daa
xor
mov
push
repz
dec
cmp
gs
fsts
sbb
rol
sbb
cltd
ljmp
test
fbstp
mov
push
mov
jbe
les
adc
mov
movsb
sub
xor
lds
int
rclb
je
push
cmp
shlb
inc
pop
pop
movsl
dec
jle
outsl
pop
jecxz
fnstcw
sbb
andb
adc
repz
fidivl
fxch
imul
insl
or
jnp
dec
add
sbb
push
sbb
aaa
mov
jp
int3
mov
xchg
mov
cld
mov
mov
pop
sahf
jmp
dec
inc
ljmp
cs
cld
xchg
pushf
mov
lea
pop
insb
outsb
xlat
mov
cmp
stos
pop
in
les
test
pop
stos
daa
in
test
mov
xor
push
mov
fistpl
xor
pop
scas
pop
ja
push
and
xor
adc
mov
mov
push
into
cmp
mov
pushf
or
push
cs
popf
stc
jbe
push
pop
xor
jns
jnp
or
pop
dec
in
mov
movsb
lret
mov
out
jno
movsb
and
int3
jae
pop
das
xchg
pop
ljmp
mov
lods
jbe
pop
push
and
pop
call
mov
aam
xor
iret
popf
sti
add
sbb
mov
adc
jb
in
lds
stos
movl
jle
jmp
or
pop
mov
ds
imul
push
movsl
leave
cwtl
jge
mov
out
repz
cmp
cwtl
cmp
bnd
push
cmp
into
outsl
xor
int3
int3
mov
dec
leave
dec
test
ret
sahf
call
cmp
mov
cltd
aad
inc
fstpl
xor
sbb
fwait
xchg
mov
xor
xchg
ja
jae
lods
into
orl
in
and
nop
idivb
jmp
jge
sbb
lret
xchg
scas
sub
les
xchg
sub
push
jbe
and
mov
mull
sub
adc
xchg
lds
xchg
std
mov
sbb
cmpxchg
mov
mov
lock
dec
xchg
sbb
jl
iret
push
scas
outsl
int3
jae
in
jle
xchg
pop
mov
jbe
in
imul
in
mov
lods
pushf
stos
cwtl
repnz
sub
push
cmc
xchg
jns
leave
lahf
mov
jns
lds
out
subb
jb
out
int
lret
jmp
push
pop
lods
add
imul
scas
in
sbb
das
pop
jl
mov
bound
cli
aad
inc
lret
push
jmp
enter
pop
and
lret
movsb
xchg
lods
push
mov
jns
fwait
mov
jb
outsl
rorl
jmp
xchg
pusha
mov
test
repnz
stc
ljmp
mov
cmp
jmp
call
push
xchg
fst
and
rcrb
dec
rolb
jnp
mov
sarb
lods
sub
mov
loope
and
outsb
dec
cmpsb
cmp
cmp
out
push
cmpsl
insb
mov
arpl
cltd
hlt
fcomps
xlat
push
inc
or
bound
xor
sarb
and
inc
inc
mov
gs
cld
mov
mov
mov
cli
xlat
jne
xor
mov
add
xchg
dec
in
rcll
jnp
sbb
sub
dec
sub
jno
jl
mov
loope
jne
xor
sahf
mov
cmp
xchg
sub
cmp
daa
and
or
mul
js
lea
int
imulb
fistpl
aad
and
test
pop
daa
push
dec
rep
sub
mov
mov
xchg
cld
xor
jbe
mov
jbe
mov
sbb
push
jnp
lret
add
filds
ljmp
cwtl
imul
or
xchg
and
inc
mov
mov
std
pop
jne
pop
jmp
or
hlt
mov
fimuls
cmpsl
mov
mov
cmp
jmp
aaa
rol
cmpsl
lret
rcl
mov
fisubrl
inc
incl
mov
xor
mov
incb
adc
fxtract
mov
lret
or
nop
or
dec
or
cmp
mov
stos
jns
adc
sub
mov
out
mov
stos
and
mov
ss
loopne
hlt
stos
mov
lret
in
fwait
xchg
add
fcmovne
fsubrs
sbb
sbb
iret
mov
mov
es
testb
sti
mov
add
cld
sahf
aam
fwait
ss
adc
mov
or
adc
or
sub
push
iret
jg
imul
sbb
or
push
mov
repnz
test
out
push
outsb
repnz
das
imul
xlat
sahf
sti
push
mov
ret
mov
pop
xchg
xor
imul
ret
in
js
pushl
iret
push
mov
scas
xchg
loop
sub
jae
mov
and
decb
push
cmpsb
jmp
std
lds
add
pop
mov
push
jne
mov
sub
sbb
in
inc
sbb
lock
call
inc
xor
mov
jge
jne
pcmpeqw
pop
mov
movsb
jno
push
add
repnz
mov
mov
jnp
fnstsw
mov
insl
mov
jno
sub
push
and
mov
mov
xlat
sub
jnp
mov
les
bndldx
xchg
sub
pop
fcmovne
pushf
and
insl
push
sbb
lret
leave
add
and
into
lret
lods
adc
xchg
sub
jmp
int3
sub
jle
lcall
cmpsl
cmp
dec
add
sbb
lea
ss
mov
and
call
and
adc
aas
mov
inc
call
push
das
mov
jb
fcomps
cmp
cld
xor
pop
cmp
stc
adc
mov
mov
pop
in
mov
sahf
lret
je
lds
call
fidivs
jo
into
pop
push
cmp
daa
jne
push
call
push
dec
mov
fbld
pop
rorb
fstps
adc
scas
mov
inc
cmp
mov
movsb
or
xor
nop
jae
sub
decl
mov
fdivrs
xchg
fisubrs
mov
rolb
pushf
xchg
out
add
hlt
test
add
bound
push
sbb
leave
xchg
sub
shlb
sbb
or
xlat
xor
addr16
cmp
xchg
lea
lods
repz
dec
inc
jl
call
add
orb
fsts
jae
into
cltd
jbe
jb
popf
ja
dec
sub
popa
and
adcb
pop
sub
insl
jg
test
jno
sbb
pop
inc
int
ret
hlt
cmpsb
imul
jbe
mov
dec
cmp
notw
and
scas
aad
call
cmpsb
addr16
testl
adc
popf
stos
mull
jl
fs
mov
pop
bound
aas
idivl
xchg
sahf
icebp
enter
nop
sub
stc
subl
lret
clc
mov
jnp
fnstcw
jle
aad
clc
fldl
stos
cmp
dec
adc
adc
lcall
jecxz
daa
fdivs
mov
push
pop
mov
bound
icebp
pop
in
sbb
test
or
filds
and
adc
jne
cmp
push
loopne
mov
sub
lock
hlt
scas
jnp
cmp
ja
in
shlb
imul
xor
mov
sbb
les
jne
out
into
repnz
pop
int3
in
test
test
jg
aam
arpl
add
inc
movsl
sbb
sub
cltd
enter
or
pop
or
lret
cltd
lret
leave
pop
mov
sar
leave
jg
jns
add
mov
mov
jb
in
hlt
subl
sbb
fcomps
dec
xor
daa
in
mov
push
mov
addr16
and
mov
sbb
out
pop
mov
sbb
mov
adc
cmpsl
aad
push
jmp
adc
nop
and
nop
xchg
mov
or
je
pop
add
push
cltd
cmp
push
lret
sub
enter
or
adc
fmulp
sub
leave
or
jmp
add
idiv
xchg
mov
test
adc
test
negl
enter
pop
fucom
push
or
mov
jge
sub
dec
fmuls
fisubl
push
and
pop
stos
xchg
mov
icebp
xchg
push
jo
sbb
adc
into
sbb
cmp
fisubrs
lcall
jne
add
add
pop
and
sub
and
clc
mov
in
popf
cmp
cmpsl
sbb
xor
add
scas
sbb
fmuls
jo
adc
lcall
jb
dec
aam
or
push
es
mov
aas
xor
jge
mov
sub
out
lock
adcb
mov
cmpb
xchg
mov
cmc
xorl
cs
insb
dec
into
mov
xlat
outsb
push
add
sub
mov
pop
add
adc
icebp
jmp
push
mov
xlat
shl
popf
xor
out
inc
imul
push
xor
pop
pushf
lret
mov
adc
sarl
scas
lret
aam
pop
xchg
movl
pop
sub
inc
xor
jo
mov
sub
mov
enter
dec
cmpsl
or
mov
out
out
or
mov
cmpsl
sar
push
mov
sub
add
test
jns
adc
sbb
mov
xchg
and
ljmp
rol
push
lcall
sub
cmp
stos
push
mov
jno
mov
dec
in
mov
xchg
es
shlb
je
call
xchg
test
sbb
popf
and
aas
in
and
mov
loope
xchg
and
pop
jo
sbb
je
out
xor
dec
mov
sbb
adc
pushf
dec
pop
test
cmp
cmp
xlat
movsl
test
mov
or
ljmp
nop
lcall
test
push
fwait
stos
cmpsb
sbb
push
jne
fiadds
mov
pop
cmpl
mov
mov
add
nop
jo
dec
push
xchg
and
test
shr
xchg
pop
sub
sti
mov
and
jo
pushf
popa
fwait
cmp
push
fcompl
push
leave
mov
sti
add
add
adc
cmc
xchg
and
cld
out
pop
data16
out
in
lret
and
lahf
nop
pop
or
pop
adc
int3
test
sub
out
movsl
dec
jbe
pushf
or
xchg
mov
insl
jecxz
sarl
test
dec
and
repnz
sahf
mov
out
cli
or
cld
push
xor
push
lahf
fwait
jmp
jmp
cmp
mov
inc
mov
add
das
mov
test
aaa
popa
dec
mov
or
or
inc
cli
pop
mov
mov
fcmovnbe
dec
and
fcoms
adc
jg
insl
jp,pn
ret
mov
roll
mov
xchg
orb
rolb
mov
add
dec
into
icebp
arpl
mov
loope
xchg
sahf
cmp
jns
add
mov
das
repz
stos
ss
lea
and
mov
adc
test
push
fwait
mov
pushf
fwait
aas
loop
mov
test
jns
fwait
cmp
sbb
gs
in
jmp
fstps
or
push
data16
pop
bound
mull
xor
cli
leave
sub
mov
and
sahf
xlat
test
inc
clc
dec
xchg
adcb
lea
jae
lret
cmpsb
shrl
sub
sub
leave
fstpt
sbb
xor
cmp
repnz
xor
pop
mov
daa
pusha
aam
scas
dec
in
mov
mov
and
cmp
push
inc
lret
cmp
in
ljmp
or
jl
jne
push
aad
xor
stc
mov
test
mov
pop
repz
clc
dec
xchg
daa
jp
jne
sbb
shrl
iret
repz
add
mov
mov
aam
push
hlt
jne
pop
faddp
adc
icebp
and
adc
xchg
add
fcomps
icebp
inc
rorb
adc
push
les
xchg
in
movsb
xchg
lret
jo
sbb
inc
in
outsb
mov
xchg
test
enter
popf
ret
in
in
pop
mov
lods
jp
lds
mov
sarl
mov
mov
mov
push
lret
xlat
gs
xchg
call
jl
sbb
pop
or
out
xchg
in
pop
cmp
sbb
je
mov
sahf
cwtl
imul
rcrb
pop
adc
lods
pop
and
lret
jmp
cli
inc
mull
lret
icebp
js
stos
out
dec
mov
movsb
iret
ret
jbe
and
pop
jno
call
outsb
mov
inc
jbe
sti
add
mov
pop
movsb
pop
push
je
lock
xchg
push
push
xchg
popa
dec
out
adc
xchg
mov
outsl
in
in
shlb
pop
push
arpl
sbb
out
jg
test
adc
fbld
hlt
repnz
rcrl
sub
jmp
jae
mov
mov
cmpl
aam
jge
shrl
stc
outsl
out
inc
in
in
push
leave
stc
jno
mov
mov
pushf
jmp
xor
xor
dec
gs
data16
mov
pop
pop
jmp
sub
mov
sbb
xlat
push
inc
shl
movsb
sbb
cs
insl
enter
mov
mov
sti
mov
mov
in
jnp
test
popa
mov
push
push
mov
fstl
movsl
jmp
loop
dec
and
or
and
lret
sbb
sbb
jo
sbb
push
decb
jge
inc
xlat
or
mov
loope
bound
jmp
push
cltd
jae
ror
sbb
insb
push
mov
jmp
bound
xchg
sub
mov
xchg
das
sbb
aad
mov
dec
and
out
mov
lods
mov
shlb
les
mov
dec
cmp
daa
mov
dec
lods
lods
movsl
addr16
out
mov
sti
fldcw
cmpsb
out
test
mov
sbb
adc
inc
mov
mov
scas
mov
mov
outsb
dec
shlb
mov
outsb
outsl
adc
add
or
add
repnz
adc
mov
cltd
movsl
mov
sub
imul
movsl
pushf
cmp
cwtl
lcall
pop
js
push
dec
inc
cwtl
xchg
aas
popf
xchg
ficoms
test
sbb
mov
repz
hlt
mov
sarl
sbbb
notl
inc
cli
std
adc
inc
mov
fidivrs
sbb
daa
cmpsb
push
fdivp
or
or
lds
in
scas
cltd
movsb
or
mov
xchg
lret
and
lret
sub
mov
cmp
jno
addl
movsl
or
mov
lcall
adc
xchg
add
pop
stc
mov
pop
and
sahf
mov
add
jne
negb
inc
mov
les
lahf
push
push
mov
sbb
daa
fcmovnbe
adc
leave
iret
outsl
inc
inc
sahf
cmp
push
rorb
or
popf
mov
mov
jmp
es
lret
and
pop
vphadduwq
test
inc
call
push
call
clc
push
mov
je
stos
and
mov
xlat
mov
jmp
push
out
aaa
cmp
or
xchg
fisttpll
int
fistpll
repnz
je
sbb
loop
jne
push
in
mov
mov
ret
loop
dec
mov
dec
and
int
dec
aas
push
adc
mov
inc
andl
stc
pop
hlt
sub
fwait
fwait
inc
outsl
stc
inc
add
ja
leave
cmp
add
or
jp
rolb
push
leave
std
mov
es
fwait
push
rcrl
fs
pop
cmp
out
test
xor
dec
jle
mov
jmp
adc
ret
dec
xchg
clc
mov
lods
lea
shll
je
mov
sub
pop
pushf
mov
rcll
mov
pop
dec
add
orb
mov
hlt
dec
jecxz
and
hlt
gs
outsb
dec
sbb
sub
cmp
lcall
je
loop
jb
cli
xchg
mov
das
adc
cmp
dec
mov
sub
repnz
lcall
cli
pop
mov
les
cmc
cltd
cs
repnz
fwait
jns
and
add
cmp
outsb
ja
movsb
movsl
add
mov
mov
and
xchg
xor
or
ljmp
ss
inc
movsl
js
scas
nop
ficompl
rcl
mov
xchg
cmp
pop
mov
xor
jp
cmc
sub
mov
sbb
fstps
test
fwait
imul
outsl
jnp
xor
lds
push
sub
mov
mov
xchg
mov
and
pushf
pop
jecxz
jmp
std
les
dec
add
mov
dec
xlat
sahf
pop
mov
jo
and
jnp
mov
sub
push
jnp
lret
push
mov
jbe
les
aad
mov
or
lret
movsb
cmp
imul
mov
cmp
test
addb
pushf
sub
orb
mov
lret
jg
mov
and
scas
out
pop
call
incl
fldl
ret
into
lcall
in
cmp
iret
test
sbb
sub
pop
cwtl
sbb
mov
or
mov
js
cmpsb
jbe
les
mov
clc
sbb
cvtpi2ps
and
jb
stos
push
mov
mov
mov
shl
or
jg
shl
sub
jmp
or
out
pop
jno
repz
mov
test
fisubrs
rorl
stos
fst
xchg
cmp
mov
dec
leave
jnp
xchg
lret
repz
leave
mov
fsubrl
jb
cld
adc
lds
cmp
cs
and
mov
dec
out
test
into
jnp
and
push
int3
dec
or
outsl
cmpsb
shrl
sbb
mov
inc
mov
mov
lods
sub
out
stos
loop
jbe
in
stos
fbstp
xchg
mov
test
aaa
mov
push
cmp
lret
mov
mov
fs
and
xor
and
fnstcw
cmpsb
les
ljmp
fsubl
jecxz
add
in
pusha
icebp
push
cmp
sub
cmpsl
jmp
dec
stos
mov
test
jo
push
and
add
push
push
mov
lret
rclb
cmpsl
sbb
add
jnp
xchg
shll
lock
bound
mov
ds
add
ret
mov
mov
mov
and
pop
into
movsl
fldt
or
jmp
je
mov
pop
std
add
andb
sub
sub
test
jae
lock
pop
sbb
and
insb
sbb
xchg
pusha
xor
cld
and
push
mov
sbb
movsb
mov
aaa
mov
in
sti
leave
movsl
insl
xchg
cmp
jl
call
out
lret
and
mov
push
les
fs
pusha
scas
pop
mov
sbb
pop
ljmp
out
inc
addr16
rcll
push
stos
and
ja
inc
repz
mov
test
pop
insl
in
fbld
inc
and
cwtl
rclb
int
sti
leave
sub
into
repz
subl
fdiv
mov
cmp
add
adc
addr16
cmpl
movsb
ljmp
test
cmp
pushf
jle
stos
mov
lods
sub
out
stc
leave
int
fwait
int3
xchg
xor
out
aad
lahf
mov
rcl
in
call
sbb
int
pop
jnp
jp
add
sbb
nop
push
xor
push
pop
ret
movsl
ret
xor
xchg
push
push
mov
mov
out
sti
enter
imul
jns
addl
in
cwtl
adc
pushf
movl
hlt
push
loop
jge
gs
add
push
pop
in
sti
pop
sub
leave
ss
enter
and
jmp
movsb
enter
mov
sub
jecxz
push
mov
mov
mov
ficoml
jmp
iret
and
and
stc
js
jmp
dec
and
cmp
xchg
cli
in
fsubl
test
sub
das
out
xchg
pop
mov
sub
or
into
mov
aam
and
mov
jle
hlt
cmp
and
imul
jmp
out
in
and
pop
insb
popf
sbb
xchg
aad
cmp
subb
cmp
xorl
mov
jle
sub
mov
frstor
mov
add
dec
fisttpl
stc
or
adc
sbb
xor
sbb
cmp
adc
mov
mov
repnz
cmpsl
xchg
addr16
mov
lahf
and
sbb
icebp
stos
jnp
fnstcw
push
das
or
je
jle
mov
sbb
aad
cmpsb
jge
sbb
xor
lret
xlat
mov
mov
add
xchg
xchg
jle
or
stos
outsl
mov
xor
test
sbb
mov
pop
lahf
cwtl
je
and
mov
aam
stos
mov
movl
fdivs
add
fmull
mov
mov
pop
xor
inc
push
mov
mov
inc
fucom
add
je
ror
dec
out
cmp
aas
test
xor
loopne
dec
xchg
xor
inc
or
and
add
push
pushf
in
test
and
icebp
xchg
in
test
push
or
sub
jb
popf
aaa
mov
addb
aaa
faddl
sub
test
mov
xchg
lret
cmp
les
aam
and
dec
or
ror
repnz
notl
add
push
cmc
inc
mov
stos
jge
adc
fcomip
lret
mov
repz
sbb
out
jno
inc
and
pop
adc
aaa
test
jle
jmp
addr16
mov
sbb
mov
jne
cmc
ljmp
sbb
mull
stc
xchg
mov
imul
push
or
xchg
push
cmp
inc
negb
sbb
mov
adc
cli
ds
in
into
jo
adc
jmp
or
test
test
les
mov
pop
mov
xchg
xchg
sbb
cmpsb
iret
je
scas
mov
aam
dec
jecxz
sbb
outsb
ficoms
std
fdivr
vaddps
cmp
cmpsb
xchg
xlat
ja
and
mov
je
pop
and
sbb
jbe
pop
mov
call
movsb
out
and
sbb
scas
in
mov
and
imul
sbb
out
cmpb
in
mov
dec
pop
iret
ret
scas
es
std
push
add
jmp
aaa
cltd
and
aaa
into
mov
sbb
js
ljmp
or
pop
jmp
adcl
fwait
test
add
aaa
push
jne
movsl
jne
loopne
sbb
mov
movsl
outsl
negb
sub
xor
mov
loope
stos
sub
cltd
sub
lret
cmc
out
push
imul
push
and
dec
sub
imul
lds
inc
aas
sbb
into
pop
cmpsb
mov
xor
sahf
sub
orb
imul
outsb
jg
dec
adc
out
push
dec
sbb
jbe
sbb
and
fwait
jmp
mov
clc
cmp
push
insb
or
ficoms
mov
adcb
inc
and
insb
in
lret
fwait
std
xchg
stos
mov
inc
and
testl
popf
bnd
pushf
sub
ss
and
or
jl
fildll
mov
fs
xchg
cmpsb
push
aam
adcl
es
mov
cmp
inc
jne
lods
mov
xor
or
sbb
pushf
jl
in
pop
inc
and
push
push
sub
es
cmp
and
pop
mov
in
add
mov
pop
mov
push
xchg
sub
add
out
in
inc
add
in
out
jmp
jmp
test
jge
push
lods
push
mov
inc
das
shlb
fistps
icebp
and
adc
in
sti
leave
in
adc
mov
sbb
jge
mov
out
mov
enter
cli
mov
sbb
cmpsb
out
cwtl
xchg
mov
add
sbb
bound
add
enter
push
push
popf
and
dec
aad
sub
scas
jno
fcomip
pop
das
fwait
xchg
inc
movsl
mov
stos
push
shlb
add
and
inc
inc
jnp
mov
imul
mov
add
dec
addl
adc
icebp
pop
mov
lahf
movsb
fildll
std
cmc
dec
ss
jecxz
clc
and
ret
add
std
lcall
popa
sub
int3
mov
aas
mov
xor
es
mov
in
push
dec
adc
lret
gs
mov
inc
inc
lock
out
shl
and
lods
mov
stc
push
inc
mov
cld
mov
divb
mov
addr16
push
mov
push
xor
movsb
pop
mov
sbb
dec
mov
jae
mov
sub
pop
stos
imul
jle
xor
loop
gs
cmpsl
lahf
mov
sbb
fdivrp
in
mov
stos
inc
shrl
cmp
addr16
js
loope
and
repnz
popf
leave
inc
adc
rcrl
mov
jg
jle
pop
test
mov
les
outsb
mov
mov
adc
jge
shlb
dec
hlt
mov
adc
push
leave
daa
xchg
pop
sub
add
fisttps
inc
inc
sbb
pop
js
xchg
inc
mov
push
aas
icebp
mov
leave
add
add
mov
movsl
repnz
ljmp
scas
jbe
sbb
mov
adc
jge
cmp
in
xor
shlb
dec
das
lret
in
push
push
subl
cmp
aam
add
jmp
inc
cmp
pop
cmp
in
test
jns
pop
mov
push
loope
cli
xchg
or
pop
aad
imul
inc
pop
and
clc
dec
mov
arpl
adc
and
and
pop
into
sbb
test
stos
and
xor
pop
dec
fsubp
jb
nop
dec
test
sbb
cmc
lahf
stos
into
push
fldln2
rcrb
aaa
or
xchg
dec
sbb
mov
mov
dec
push
push
push
mov
mov
lock
xchg
fldt
nop
and
jnp
cmp
push
sub
gs
lcall
push
leave
jo
or
inc
ljmp
jle
and
aam
fadds
and
sub
cld
stc
sub
mov
mov
dec
and
xor
popf
das
sbb
sbb
dec
inc
fstps
inc
jmp
mov
sbb
xchg
mov
pop
cmp
je
mul
sbb
cmp
pop
shlb
cmp
ljmp
xor
and
lods
int
ja
push
imulb
popf
pop
imul
ja
pushf
fwait
push
pop
mov
mov
aad
popf
pop
jg
pushf
fwait
pop
repz
add
sbb
inc
shlb
cmpsb
enter
xchg
jno
dec
push
in
jecxz
sub
push
jp
imul
loopne
in
jle
xor
and
mov
push
call
frstor
call
fwait
xor
mov
in
div
sub
mov
repz
and
jecxz
stos
sbb
push
insb
mov
xor
daa
int3
pop
mov
ficoms
call
adc
cmp
pop
popf
sub
jle
inc
cwtl
data16
rcll
jno
or
cmp
and
mov
sbb
xor
sbb
subb
pop
aas
data16
ss
mov
dec
dec
cld
sub
or
mov
dec
loope
push
movsl
or
addl
mov
fstps
divb
jnp
push
pop
mov
pop
and
nop
divb
or
sbb
test
hlt
jmp
hlt
lods
test
push
out
mov
push
iret
pushf
in
push
dec
imul
rorl
fcomi
jp
addr16
hlt
sbb
popf
or
sbb
inc
and
mov
lods
mov
push
enter
mov
xor
push
outsb
xor
sti
mov
cltd
dec
or
cmc
xchg
push
out
int
mov
dec
in
repz
jmp
loopne
mov
fstpl
jae
je
dec
sahf
inc
or
je
jge
aam
inc
icebp
add
sub
jmp
inc
out
sbb
mov
xor
mov
xchg
mov
xor
adc
mov
in
inc
mov
loop
pop
sahf
je
mov
jbe
inc
mov
xchg
rorl
adc
insb
int
mov
pop
rcll
hlt
inc
sub
icebp
sub
adc
cld
leave
cmp
aaa
mov
in
and
pop
lods
js
arpl
mov
xchg
ss
fmuls
jp
dec
sbb
mov
dec
ds
lret
or
sbb
jle
adc
out
outsl
test
jmp
xchg
pop
jnp
cmp
xor
xor
roll
faddl
icebp
rclb
rol
mov
or
sbb
lahf
or
inc
repz
mov
stc
loop
mov
mov
cli
jmp
xchg
xor
fstl
sarb
aam
dec
adc
push
and
mov
icebp
sbb
fs
push
ds
push
mov
xchg
sub
add
mov
push
inc
mov
icebp
mov
cmpl
stos
push
lods
mov
xor
leave
cmp
rcrb
jp
xor
sub
inc
sbb
aaa
jns
int
push
or
adc
push
adc
or
lds
jnp
fisttpl
testb
ret
push
sbb
mov
out
mov
cmc
push
ret
divb
xchg
mov
jl
in
stos
push
repnz
in
imul
cmp
pop
in
jmp
dec
mov
jmp
jg
jnp
mov
mov
jl
aad
in
ljmp
xlat
out
stos
repnz
cmpsb
sti
add
test
xor
add
push
in
in
mov
xchg
test
mov
dec
dec
sbb
out
aam
cmp
jl
inc
sub
adc
or
push
stos
sbb
and
test
cmp
inc
pop
aaa
mov
jmp
pusha
and
sti
lcall
loopne
sbb
popl
das
jne
pop
sbb
stos
pop
lahf
mov
fwait
fs
das
sub
into
stos
jne
shr
xchg
fwait
pop
adc
cmp
rol
lret
xchg
mov
mov
cmc
test
mov
xor
lds
push
subb
in
jb
test
inc
sti
je
and
sbb
aas
lock
and
mov
repz
test
inc
xchg
sti
lods
pop
mov
fsubs
jns
sbb
push
sub
std
adc
sbb
inc
in
mov
pop
movsb
sbb
aam
leave
loop
cmp
stos
mov
mov
movsl
and
mov
dec
out
les
push
test
and
jbe
xor
dec
mov
nop
scas
lods
outsl
add
out
and
mov
mov
fs
in
ds
sbb
lds
mov
jmp
pusha
add
pop
adc
mov
push
add
cmp
fwait
dec
xor
push
xchg
or
sahf
sbb
cmp
xchg
fisubrs
les
sub
mov
cwtl
adc
stc
pop
cmp
jae
push
or
stc
inc
adc
push
data16
and
xor
fs
mov
lret
push
repnz
mov
add
add
js
jmp
xchg
jo
jmp
inc
mov
rol
pop
insl
stc
jbe
mov
mov
les
leave
push
cmpsl
xor
popa
xlat
stos
dec
rclb
mov
jecxz
mov
stos
mov
movsl
jno
add
pop
in
inc
inc
dec
icebp
roll
mov
sbb
mov
insb
mov
sti
xchg
pop
pop
mov
inc
and
dec
movsl
mov
inc
and
mov
xor
outsl
sbb
mov
out
mov
in
adc
aaa
fs
mov
icebp
mov
jle
aam
in
jb
ja
pop
insb
in
push
pop
lds
xchg
out
dec
pop
repnz
and
dec
pop
out
lret
sbb
ss
addr16
test
mov
dec
xor
jmp
int3
dec
jae
fcomi
or
in
push
movsb
pop
fs
push
stc
ror
xchg
movsl
imul
aam
lret
and
mov
mov
or
loope
lcall
out
sbb
ret
dec
mov
cs
shll
pop
sbb
and
and
dec
add
mov
xor
cs
pushl
sub
sti
jl
arpl
lahf
xor
inc
adc
aaa
lock
les
mov
dec
gs
dec
push
sub
fidivrl
lahf
jmp
adc
cs
jmp
repz
cmp
hlt
xor
cmc
imul
das
ret
fsts
xor
sub
outsl
xchg
xor
add
jae
shll
inc
xorb
ret
cmpsl
test
jne
jbe
sbb
dec
fcomps
imul
mov
jbe
sub
adc
sbb
adc
or
cmp
cmp
or
rcrl
and
add
cmp
arpl
aad
cld
ljmp
and
push
mov
jle
stos
dec
ljmp
mov
xor
gs
mov
inc
test
lret
xchg
sbb
push
mulb
ja
sbb
mov
sbb
scas
mov
icebp
dec
outsb
stc
call
pop
push
in
push
ror
xchg
xchg
push
jo
repnz
out
loopne
pop
or
inc
mov
mov
in
inc
cltd
cmp
inc
mov
mov
mov
adc
testb
xchg
out
mov
sbb
mov
adc
xchg
fmulp
pop
mov
cmc
mov
inc
lods
cmc
pushf
iret
push
scas
or
adc
sti
imul
mov
sarb
lcall
jge
mov
popa
pop
pop
inc
add
loop
fistpll
shr
lods
stc
shlb
icebp
mov
sub
std
mov
dec
inc
cmc
adcl
imul
fsts
sub
jp
adc
adc
cwtl
movsl
pop
add
dec
push
jl
mov
rcr
cmpsl
fwait
jecxz
rcrb
lods
adc
xchg
sbb
mov
pushf
sbb
jecxz
adc
lcall
add
mov
mov
leave
jb
stos
adc
inc
fcmovnu
int3
outsb
sbb
pushf
imul
add
push
loope
inc
jmp
inc
gs
mov
and
je
out
lret
cli
fcmovbe
movsb
mov
mov
xor
rcl
pop
mov
je
out
clc
mov
jae
cmp
push
cltd
sbb
mov
sub
hlt
jne
adc
pop
jecxz
ficompl
cmp
js
jecxz
mov
nop
lret
jnp
in
mov
enter
icebp
je
stc
mov
dec
call
mov
pop
mov
imul
outsl
fs
add
pop
and
sub
in
cmp
rcr
mov
lods
test
test
fstps
les
gs
pop
mov
cltd
and
jbe
pop
and
ret
ja
cmp
aam
mov
sbb
push
xchg
pminub
jo
mov
in
rolb
mov
test
or
movsb
fisubrs
jmp
push
test
fbstp
sbb
push
sbb
fcompl
push
cmc
mov
test
pop
repz
sahf
into
pop
pusha
adc
loop
cli
das
xor
aam
xchg
or
lret
pmaddwd
lock
out
popa
sbb
mov
fstl
loopne
mov
push
cmpsl
mov
movsb
pop
sbb
out
in
sti
inc
into
inc
mov
sbb
gs
repnz
gs
jmp
sub
cmp
and
idivb
std
inc
insb
cwtl
jp
test
adc
xchg
add
inc
ds
push
cmpsb
mov
cmpxchg
dec
push
inc
pop
cmp
pop
arpl
inc
and
mov
fbstp
faddl
loopne
mov
sub
mov
xor
xchg
rolb
sbb
in
lcallw
pop
mov
mov
stc
mov
jp
cmp
out
dec
mov
pop
mov
cmp
pop
inc
jmp
das
push
mov
push
pop
jmp
and
sub
out
js
or
stc
pop
jae
fisttpll
sahf
dec
ja
mulb
xchg
pop
push
push
stos
mov
jae
mov
subl
mov
shr
out
es
cli
push
sub
push
cmpsl
in
ret
cmpsl
jnp
mov
inc
clc
dec
add
mov
out
jnp
mov
push
popf
mov
into
ret
xor
lcall
and
or
rolb
call
jb,pn
fwait
xchg
aaa
pop
and
movsl
jmp
jl
cmp
mov
test
mov
or
aas
sub
pop
mov
push
cltd
push
and
lret
fsubs
mov
repz
pop
mov
aad
adc
int3
ss
add
sbb
push
fimuls
jmp
fwait
jne
lret
mov
xchg
lcall
mov
xchg
inc
int3
nop
inc
icebp
lds
lods
lds
lock
mov
adc
stos
xor
jbe
push
and
jnp
sbb
or
pop
xor
movswl
popa
mov
das
popf
in
xor
cmpsb
notl
cmc
movsb
nop
mov
adc
test
add
movsb
push
sbb
scas
or
inc
jle
pop
call
aas
mov
push
pop
out
jbe
loopne
mov
leave
aam
push
mov
add
cs
lret
stos
in
dec
loop
stc
and
std
and
or
lret
out
clc
dec
push
clc
mov
daa
xor
loop
xchg
xlat
push
repnz
sub
out
cmp
pop
fst
in
sbb
inc
mov
sbb
xchg
mov
lahf
adc
lcall
data16
pop
or
pop
cmp
insb
lret
test
scas
mov
ret
jecxz
fs
sbb
dec
das
mov
pop
popa
pop
jge
cli
aam
loop
mov
hlt
sbb
leave
bound
sbb
stos
in
sub
test
and
or
jns
xchg
push
xchg
xchg
inc
lahf
mov
mov
xor
test
cmc
insb
sub
xor
leave
lea
mov
out
ret
xchg
mov
movsl
jnp
push
gs
fsubs
test
fisubrl
out
cld
lcall
xlat
divl
dec
push
das
les
inc
les
and
rcrb
jnp
mov
xor
fildll
cmp
lea
push
pushf
pop
js
enter
ret
imul
sbb
movsb
jmp
xchg
cmpsl
or
out
xchg
lea
fwait
mov
xor
imul
or
mov
dec
pop
pop
jns
or
cltd
xchg
daa
shlb
and
rcrb
push
xor
icebp
aad
and
cwtl
fisubl
dec
popf
stos
addr16
rclb
shlb
and
xchg
xchg
xchg
mov
es
add
stc
mov
xor
cmpsb
dec
js
pop
out
xchg
in
lret
sti
outsb
loope
pop
nop
cmp
mov
xchg
push
push
stos
sbb
add
repnz
daa
sbb
mov
in
cs
fidivrl
iret
aas
pop
test
dec
gs
stc
mov
test
sti
cmpsl
xchg
cs
push
xchg
sbb
pop
rcrb
lea
sbb
mov
mov
ds
idivb
or
mov
jns
jb
xchg
sbb
lret
push
or
scas
mov
or
cmp
add
mov
xchg
scas
nop
jb
in
or
mov
call
out
pop
jmp
int3
adc
aam
mov
andb
stos
loope
lods
call
and
mov
cmp
cmpsl
mov
repz
mov
jbe
add
cmc
imull
xchg
pop
push
out
jp
frstor
ficomps
dec
sub
dec
inc
pop
xor
xchg
movsb
xchg
loope
inc
and
nop
mov
cld
fstpt
clc
lds
xor
sub
js
jnp
xchg
mov
sahf
mov
adc
int3
cmc
mov
jmp
adc
mov
in
xchg
pop
jne
pop
hlt
lahf
movb
stos
repnz
jns
xchg
leave
mov
mov
dec
and
add
lods
mov
jnp
mov
lahf
mov
pop
cmp
jp
imul
jno
pop
leave
outsl
adc
sti
cmpsb
cmp
push
push
in
mov
in
stos
xchg
push
adc
divl
orb
push
jae
dec
mov
and
mov
div
and
nop
jecxz
es
sub
xchg
pop
fwait
xor
cmc
rcr
loop
es
pop
arpl
shlb
lods
cmp
lcall
jae
adc
in
fldl
dec
notb
sbb
arpl
mov
mov
mul
js
mov
les
mov
pop
mov
loopne
mov
fnstenv
sbb
xchg
xor
test
enter
cltd
int
ljmp
mov
nop
jmp
shl
bound
pop
and
bound
dec
jae
mov
and
and
push
sub
jp
iret
lahf
dec
cmp
mov
shll
test
lds
sar
lcall
jmp
pop
and
cmp
pop
test
fidivl
and
stos
std
add
inc
push
lahf
data16
cmp
add
clc
add
mov
out
or
xchg
xor
xchg
pop
sub
fmull
aam
jmp
push
outsl
push
mov
ucomiss
shll
jle
cmpsb
movsl
addr16
or
loopne
out
mov
xchg
adc
movsl
mull
xchg
lds
mov
mov
icebp
mov
mov
mov
ss
cmp
and
push
outsb
cwtl
rol
mov
jne
insb
lods
mov
movsb
xor
inc
arpl
test
dec
pop
test
cs
dec
adc
pushf
stos
push
xchg
cmp
pop
mov
in
aam
call
leave
sahf
daa
inc
sbb
or
and
sub
inc
push
les
sub
mov
sbb
mov
ss
mov
ret
push
mov
lret
sbb
out
and
test
and
insl
lret
sbb
cmp
cmp
jge
pop
push
aaa
pop
lods
enter
stos
pop
gs
in
xlat
call
push
mov
xor
notl
sahf
andl
cmp
mov
xor
jmp
in
addr16
stc
ds
cwtl
out
inc
xor
mov
outsl
xor
mov
out
mov
sbb
bound
sbb
mov
push
push
cmp
fisttpl
std
add
divb
mov
ja
jmp
addr16
cmpsl
stos
jge
add
cs
mov
inc
and
insb
and
je
dec
inc
gs
nop
scas
sbb
loop
and
xchg
mov
mov
cmp
dec
mov
xchg
in
call
sbb
fwait
lock
and
popf
mov
out
sub
fwait
in
into
movsb
mov
jg,pn
sbb
mov
fisubrs
pop
inc
fcomp
and
movsl
dec
inc
test
mov
cli
mov
pop
sub
xor
call
loope
jae
and
test
mov
es
mov
xor
leave
and
fstl
jb
pop
fdiv
inc
adc
icebp
mov
xor
fcmovb
cmp
jae
or
dec
xlat
xchg
mov
mov
xchg
fildll
push
push
xor
sbb
sbb
cmp
out
push
cmp
mov
sti
jno
mov
repz
movsb
inc
cwtl
mov
mov
add
inc
push
push
int
xor
xorb
cli
lret
mov
gs
sbb
cmpsb
push
fcomps
fldenv
xor
cmp
mov
cmp
popf
in
xor
mov
jbe
aam
push
das
push
in
dec
cmp
dec
xchg
jg
mov
mov
shrb
mov
or
aaa
aad
xor
test
fisubrl
xchg
jo
lods
pop
mov
in
popf
rorl
push
int3
clc
daa
sub
imul
lea
adc
adc
movsl
mov
mov
je
addr16
mov
and
inc
stc
mov
mov
mov
out
inc
mov
mov
sub
xchg
push
adc
int
das
mov
cmpsl
std
popf
dec
adc
out
and
repnz
push
xchg
and
and
ret
scas
sti
sbb
pmulhw
mov
stc
inc
and
lea
leave
enter
mov
test
ss
push
stc
pop
xor
xor
mov
mov
bnd
xor
mov
mov
cltd
lret
test
into
jnp
fwait
and
lcall
jecxz
jns
xchg
sbb
fsubr
lea
xchg
sbbl
les
jns
cmp
imul
scas
in
push
inc
into
idivl
insl
adc
or
sbb
mov
or
insl
out
pop
sbb
mov
or
imul
jmp
fcmovbe
xlat
cmpb
fs
out
movsb
aam
inc
fimull
pushf
bound
jmp
cltd
dec
cmc
push
in
test
popf
bsr
bound
xor
shlb
lret
add
stos
pop
sahf
or
addb
inc
imul
pop
aaa
andl
sbb
int
jne
and
ljmp
inc
orb
dec
mov
test
mov
xchg
xchg
outsb
pmulhw
cmpsl
xchg
add
mov
stos
and
repz
outsb
mov
dec
ljmp
push
movsl
aam
pop
sbb
cmp
fwait
jnp
cmp
test
adc
js
or
cmc
clc
jl
loope
frstor
push
lods
gs
lds
sub
sbb
adc
lea
cmpsb
xchg
addr16
loop
sbb
pushf
dec
and
std
scas
sub
fildl
pop
cmp
mov
fbstp
std
les
and
jmp
sbb
clc
test
jnp
in
arpl
aaa
not
movsl
rol
dec
or
sub
orps
add
mov
ret
imul
mov
pusha
mov
arpl
mov
dec
sbb
dec
push
jl
sbb
xchg
pushf
or
dec
cmc
sbb
mov
pop
pop
sti
fs
cmpsb
mov
out
aad
sbb
jno
mov
fcmovnb
hlt
gs
mov
cmp
mov
jbe
movsl
sub
std
inc
add
mov
into
les
aas
xchg
mov
movl
sub
scas
xor
add
fisttps
lcall
push
xchg
pop
or
adc
jmp
and
mov
test
jo
mov
pop
pop
and
in
movsl
pop
int
push
push
mov
pushf
mov
mov
int
cmc
rcll
out
cld
xchg
es
and
xchg
pop
dec
pop
enter
pop
and
adc
or
xchg
mov
mov
mov
push
sbb
jge
test
movsb
push
inc
add
mov
xchg
mov
jecxz
hlt
shrb
pop
push
aaa
movsb
xchg
push
push
add
loopne
ds
cwtl
stos
cli
push
push
cltd
sub
push
lahf
jmp
dec
ficoml
dec
fs
cmc
mov
push
push
sub
loope
test
push
adc
scas
sub
jp
fiaddl
mov
in
clc
rcll
add
xor
repz
mov
int3
imul
mov
jmp
mov
xor
pushf
inc
ret
stc
lret
hlt
ja
lcall
push
cld
or
es
int
vcvtdq2ps
jae
xchg
mov
sbb
sub
stc
dec
test
pop
mov
fcoms
sbbl
pop
sbb
sbb
or
pop
and
pop
xor
xor
inc
xchg
xlat
mov
mov
adc
inc
stos
movsl
daa
pop
push
outsl
stos
mov
repnz
iret
and
mov
arpl
outsb
and
xor
into
mov
adc
add
pop
addr16
jecxz
call
cmp
or
xchg
push
mov
cwtl
adc
mov
pop
lahf
mov
pushf
insl
mov
leave
push
stc
cs
rolb
movsb
inc
loopne
sub
or
sub
and
gs
sub
cld
sub
clc
in
outsl
out
adc
arpl
jle
or
sahf
cmp
add
pop
sbb
inc
mov
mull
pop
jne
lcall
cmp
mov
icebp
mov
cmp
and
cmpsl
mov
sbb
rcll
cmp
mov
rcrb
mov
and
pop
fwait
hlt
mov
push
mov
leave
ror
lds
fs
dec
push
andl
push
dec
cmpsb
jb
bound
or
mov
mov
out
fwait
fwait
add
outsl
sbb
mov
scas
sahf
cmp
es
dec
test
and
push
and
adc
jnp
enter
pop
cmp
add
mov
sub
and
jg
xchg
mov
pop
or
out
imul
jl
mov
fldenv
jmp
sahf
xor
lds
cmc
dec
loopne
test
jne
and
xchg
mov
movl
in
aam
bound
pop
lret
mov
jnp
pop
fs
push
xor
push
stc
pop
push
loopne
sti
ficoms
pop
jns
or
cmpsl
leave
fdivl
and
xchg
xor
cmp
mov
mov
mov
ret
es
int
out
sbb
xor
jnp
bound
inc
ss
shlb
popa
ja
push
iret
in
mov
dec
mov
lret
add
pop
or
in
lahf
les
xchg
lcall
sahf
sbb
mov
loope
adc
repz
xchg
xor
lret
cltd
xchg
aam
dec
rcrb
cmc
mov
jmp
in
adcl
cmp
sti
popf
lret
aaa
ret
xchg
ja
cmpsl
jmp
cs
sbb
movsl
inc
popf
jp
jle
lret
xlat
jne
dec
out
je
push
push
pop
aam
or
in
in
iret
add
dec
mov
mov
or
notl
out
sbb
test
leave
add
pushf
sti
mov
xchg
mov
jmp
sbb
adc
mov
out
mov
pusha
cmova
in
add
jne
insb
repz
adc
test
jns
jno
cmp
mov
scas
test
cli
pop
and
inc
mov
test
adc
iret
ds
ret
sarl
lock
adc
fucomi
sahf
xorl
xlat
out
sbb
adc
cmp
out
jns
fimull
jae
sub
pop
lds
call
sbb
push
sbb
insl
xchg
mov
lds
call
sbb
mov
rcrl
das
lods
or
sbb
cmpsl
and
rcll
or
mov
fwait
je
repz
inc
cmpsl
stos
push
in
pop
or
xchg
adc
mov
mov
mov
sub
lds
ret
sub
mov
sbb
sbb
and
pop
fldcw
rcll
ja
and
inc
aaa
mov
repnz
outsl
cltd
fistpl
stos
sbb
xor
cltd
notl
outsb
into
sub
mov
mov
popfw
rcl
jne
jo
lock
rol
cmpl
pop
leave
stos
and
jmp
cmpsl
sub
mov
test
insl
push
leave
mov
cmpsb
jmp
mov
pop
sbb
jb
popa
popl
cs
fcmovne
push
mov
stc
cmpsb
fwait
and
loopne
cmp
ret
arpl
pop
and
repz
jl
in
and
lock
push
cmpsb
jnp
mov
cmp
sbb
pop
clc
or
test
repz
add
lret
fsubr
adc
out
sahf
stos
and
test
inc
aam
mov
mov
xchg
and
mov
arpl
dec
aam
cmc
out
das
inc
pop
jle
and
sbb
out
loopne
aad
cmp
jmp
pop
call
pop
mov
push
xchg
pop
imul
mov
stc
mov
and
push
nop
pop
les
xor
fstpt
dec
repz
cwtl
mov
in
or
movsl
loop
es
xlat
int
mov
stos
repnz
jg
lret
sbb
inc
xchg
sbb
jo
cmpsl
sub
and
out
scas
xor
out
pop
sub
ljmp
arpl
arpl
lods
ja
cmp
add
lret
mov
ss
cld
stc
xor
data16
fists
cltd
xchg
push
fucomip
mov
shll
and
dec
mov
adc
lahf
ret
adc
in
cmpsb
add
or
push
sbb
sbb
imul
sub
lods
movsl
addb
or
mov
jl
sbb
movsl
jo
in
into
mov
adc
xchg
jle
cmpsl
sbb
cmovns
xchg
je
ss
outsl
jne
jge
repnz
mov
add
iret
leave
rorl
pop
dec
xor
pop
add
std
xor
rolb
insb
insl
aas
fs
pop
push
repz
pop
sbb
adc
cmp
cltd
cmp
cmp
xchg
mov
pusha
adc
sub
lahf
into
push
dec
jmp
sbb
movsl
mov
in
sub
test
inc
cwtl
inc
int3
push
add
mov
mov
sub
mov
mov
data16
mov
xchg
cmp
addl
sub
xor
or
lea
jne
fcoml
ja
mov
in
cmp
jge
and
cld
fadds
dec
sub
mov
add
sbb
inc
mov
jae
lret
mov
mov
xchg
pop
insl
lret
sbb
mov
fs
mov
in
jle
mov
push
cmp
lods
inc
mov
out
sub
sub
pop
mov
movsb
push
mov
gs
pop
mov
push
jecxz
push
mov
inc
add
mov
mov
push
mov
cmpsb
daa
mov
fcoml
lcall
sub
push
aas
fbld
leave
ret
bound
push
mov
cmp
pop
and
cmpsl
mov
cmp
mov
lahf
adc
or
clc
sbb
mov
orb
cwtl
imul
ds
ljmp
adc
lds
or
test
add
cmp
jbe
cmp
and
jmp
sbb
mov
pop
jg
imul
sub
xchg
jge
pop
stc
cmp
pop
lods
push
adc
pop
xchg
out
enter
idivl
cld
xchg
lahf
mov
ret
lock
jbe
movsb
add
fidivs
in
outsl
jne
fbld
mov
sub
sub
cmc
gs
dec
lods
repz
inc
adc
push
out
sub
stc
sti
sbb
movsb
ljmp
ljmp
mov
jb
adc
mov
in
lods
ror
pop
ret
imul
mov
xchg
mov
int
iret
mov
frstor
mov
xorb
ja
pop
les
jnp
xchg
xchg
into
mov
popa
iret
mov
mov
xor
stc
jle
adc
add
repz
cmc
mov
aas
rolb
push
stos
mov
jo
ljmp
fisubrl
test
pushf
mov
jecxz
hlt
sub
loope
mov
dec
push
pop
sahf
fnsave
fstpt
push
and
mov
js
int
loopne
mov
cmp
andb
adcb
dec
je
sub
lahf
add
ljmp
std
cmpsb
sti
and
and
mov
cli
mov
inc
hlt
mov
jno
mov
out
rorb
xchg
es
shll
rcl
enter
sbb
es
scas
jnp
cld
ds
mov
sub
sbb
xchg
imul
cmpsb
xor
mov
gs
sbb
jp
sbb
in
dec
dec
icebp
test
push
xor
test
sti
sbb
in
loope
push
testl
sti
arpl
ret
sub
lea
adc
pop
rclb
fstpl
dec
repz
mov
jno
inc
aad
out
inc
push
push
push
mov
jns
sub
adc
into
bound
mov
mov
movsb
and
sub
cmp
sbb
call
mov
push
mov
insb
adc
mov
push
or
lods
rcr
ret
cld
out
add
test
xchg
in
lcall
xorb
mov
mov
xchg
fnstenv
cli
lds
dec
aaa
mov
xor
lods
in
pop
or
cwtl
pushf
mov
or
test
mov
xchg
or
in
push
xor
pusha
pop
jmp
sub
sub
popa
mov
cmp
jecxz
out
shll
rorl
sarl
test
jo
xor
shl
imul
mov
into
movsl
inc
icebp
out
cmp
fdivrl
jae
repnz
cmp
xchg
rcrb
in
jp
jmp
lcall
iret
jmp
insb
xchg
sbb
mov
jle
push
mov
push
je
out
mov
daa
hlt
cmp
shll
in
mov
daa
repz
inc
int
leave
mov
sbb
jnp
addr16
mov
dec
arpl
dec
stos
out
mov
mov
mov
inc
cmp
inc
mov
out
pushf
scas
cmp
xchg
pop
das
stos
fwait
ja,pt
mov
and
lds
sahf
fistpl
shll
and
or
sub
lcall
sub
fsts
xchg
jbe
mov
int
insb
rcl
push
cmpsb
test
ja
in
cmp
enter
arpl
shl
in
mov
inc
dec
fstp
push
mov
push
sbb
cmp
xchg
stc
sahf
mov
sbb
mov
outsb
sbb
mov
std
mov
shll
daa
cmpsb
lahf
add
pushf
xchg
loope
sub
std
loope
mov
xchg
add
adc
xor
jmp
cmp
cmpsl
jae
psrlw
out
push
repz
pop
inc
adc
divb
in
xchg
scas
sub
mov
fisttpl
testl
mov
sarl
rolb
mov
pop
mov
xor
arpl
add
leave
xchg
xor
jb
jmp
lahf
pop
and
add
cli
aad
mov
jmp
lcall
fiadds
nop
jmp
sub
sub
daa
add
loope
int3
mov
sbb
es
mov
test
mov
mov
mov
and
mov
xchg
cmc
pop
push
call
sbb
lcall
and
and
cmp
sbbl
cld
jo
ljmp
out
and
mov
popf
cmpsl
jnp
jns
push
push
dec
fisubs
jnp
mov
or
push
clc
mov
cld
movsl
cmp
movsb
mov
enter
mov
sbb
leave
dec
adc
xchg
lcall
and
repz
shrl
and
arpl
xor
movsl
repnz
lods
push
mov
lahf
ret
shll
push
push
in
addr16
rcrb
movsl
mov
mov
and
adc
nop
pusha
jo
aaa
xchg
mov
cwtl
xor
adc
imul
push
pop
out
outsl
cli
aam
iret
or
mov
xor
pop
mov
mov
aad
sub
in
pop
mov
mov
xorb
out
mov
test
mov
jg
jp
ss
pop
mov
ret
or
pop
add
or
pop
sub
sbb
mov
and
cmpsb
cmpsl
les
in
xor
and
lret
test
adc
in
add
and
gs
pop
test
sahf
sbb
in
mov
daa
fxch
cld
cltd
cmp
inc
jno
mov
aad
fistpll
mov
mov
jne
fucomip
mov
mov
add
into
outsb
lcall
aad
and
bound
lret
mov
icebp
lock
adc
mov
pop
daa
xchg
test
out
add
es
cmp
sub
mov
mov
lods
jno
sub
or
sarl
insl
icebp
ja
xchg
fstps
cmc
sbb
xacquire
jae
jg
in
jo
push
loopne
leave
sub
and
adc
mov
jmp
sbb
and
jle
sub
jbe
movsl
adc
rcll
fs
lock
lds
adc
test
mov
fdivl
sbb
insl
aam
xchg
sbb
mov
or
outsl
cmpsb
push
adc
test
jmp
and
xchg
xchg
and
lods
mov
mov
movsb
sbb
xor
pop
sbb
xchg
das
cli
ret
cltd
mov
ret
lods
push
and
aam
scas
test
lds
icebp
scas
push
pop
cld
jl
mov
in
bound
clc
mov
xchg
cs
icebp
shll
inc
and
push
pop
inc
fnstcw
jb
test
enter
xchg
pop
jns
aas
out
or
test
lea
dec
sub
je
mov
sbb
bound
adc
clc
popa
outsb
cwtl
rcr
insl
cwtl
mov
in
jbe
imul
mov
shl
mov
shlb
jb
pop
dec
add
roll
daa
and
mov
sbb
out
pop
movsb
jecxz
adcb
cmc
mov
mov
nop
idivl
shlb
orl
scas
fisttpll
cmc
fdivs
dec
jne
mov
jmp
mov
dec
inc
jns
rcl
out
jmp
das
xchg
dec
push
xor
fildll
or
in
aas
in
xchg
pusha
das
xchg
insl
inc
xor
inc
movnti
out
cld
xchg
daa
jne
adc
insb
outsl
push
push
jmp
mov
loop
and
xchg
shll
ret
outsl
xchg
sbb
xchg
xor
movsb
sub
sti
push
jp
pop
hlt
mov
and
mov
in
arpl
sbb
hlt
cli
shrl
push
add
inc
rol
rolb
ja
orb
mov
cmpsl
gs
sub
jae
jo
lock
out
sub
je
lock
leave
xchg
sbb
jp
aaa
mov
jbe
aaa
xlat
mov
lds
xchg
pusha
stc
inc
and
xchg
sub
lcall
fldenv
inc
lahf
stos
mov
pop
shlb
mov
cmp
mov
repnz
test
xchg
test
and
js
sbb
inc
bound
mov
test
mov
cs
push
push
loop
shlb
pop
jbe
pop
movsb
inc
xchg
sahf
stos
lea
xor
mov
mov
or
mov
insb
and
adc
loop
mov
test
dec
stc
mov
psubb
push
aad
push
out
in
clc
push
fs
mov
sbb
jo
mov
cwtl
cmpsl
ja
test
enter
fwait
sbb
loope
pop
dec
xchg
lods
and
adc
pop
sbb
lea
sarb
sbbb
mov
das
jecxz
stos
adc
sub
in
add
pop
xchg
or
push
scas
in
out
cmpsl
mov
push
push
in
sub
je
mov
fsubp
aam
and
sti
in
movsl
mov
jb
in
lcall
cltd
push
cmp
es
packuswb
inc
dec
aad
dec
mov
jb
jno
and
in
mov
shlb
cwtl
jb
and
cmp
pop
cmp
addr16
sahf
fildll
test
addl
and
repnz
and
iret
sbbl
jae
repz
xchg
clc
adc
out
scas
scas
adc
fldcw
mov
test
ret
add
arpl
cs
jmp
lret
mov
mov
or
das
scas
dec
cwtl
pop
sub
aaa
icebp
cmc
mov
lcall
pop
test
push
out
pop
mov
in
mov
dec
jmp
cmc
sub
or
in
mov
mov
imul
sarb
dec
mov
ljmp
xchg
xor
data16
add
cld
cmp
cltd
aam
jae
stos
sub
and
or
push
arpl
or
pop
mov
int
arpl
xchg
notl
aad
mov
clc
push
adc
adc
imul
dec
fidivl
cld
cmpsb
cmp
inc
and
mov
pop
repz
push
dec
xor
and
push
fnstsw
dec
aad
mov
data16
aad
cld
and
out
cmc
or
cmp
int
dec
sbb
leave
ss
scas
xchg
push
popf
mov
and
cmpsb
jnp
pop
xchg
cmpsl
xor
jmp
pop
lcall
inc
aaa
aas
push
in
mov
loopne
xchg
mov
or
mov
enter
pop
mov
jnp
bnd
xchg
push
and
and
jmp
push
mov
aas
mov
and
sub
cmpsl
push
or
les
stos
mov
insb
or
adc
and
xchg
jns
ffreep
repz
out
test
mov
add
sub
mov
push
fbld
and
scas
sbb
sub
dec
mov
fldcw
outsl
jae
int3
sub
scas
jo
ja
fwait
lods
and
and
sti
xor
cmp
mov
ret
jnp
mov
jg
js
cmpl
jp
cmp
enterw
push
add
pushf
clc
jp
into
sbb
jg
scas
mov
shll
and
jg
jae,pt
stos
js
je
and
faddl
data16
sub
out
push
push
cltd
mov
unpckhps
push
jo
cmp
vxorps
frstor
pop
bound
test
mov
push
and
jp
das
and
or
pop
mov
cld
pop
stos
hlt
dec
js
xchg
and
dec
lret
push
jnp
jbe
mov
cmp
pop
aam
movsl
xor
loop
sbb
xchg
and
mov
sarb
xorl
and
lcall
popf
cmc
icebp
mov
test
mov
daa
jno
call
out
pop
dec
mov
jp
inc
adc
jmp
xchg
or
mov
pop
ds
push
jp
rclb
jle
mov
mov
cli
mov
push
sti
pop
mov
mov
frstor
je
mov
rcll
or
sub
in
sbbl
out
imul
lcall
sbb
add
xchg
jmp
and
iret
pop
nop
cmp
lds
mov
and
cmp
dec
adc
std
cmpsb
xor
jmp
loopne
int3
mov
lahf
and
sub
mov
mov
push
pop
mov
or
xchg
and
leave
cltd
movsl
adc
std
aas
lcall
xchg
cs
negb
jns
xor
xor
fdiv
xchg
cmp
jae
insl
push
xchg
cld
lock
mov
pushf
sbb
pop
cmpsb
mov
xor
and
inc
lea
cmp
cmp
dec
mov
push
cli
and
roll
sti
scas
pop
in
mov
daa
hlt
pop
cmc
pop
shr
sti
cmp
xchg
loop
scas
add
dec
dec
aad
adc
push
loop
mov
shlb
fsts
mov
or
fwait
lock
lahf
xchg
cmp
inc
add
mov
mov
fsts
xchg
sub
fistps
mov
xchg
sti
sahf
addr16
mov
or
lret
xchg
lds
jns
mov
mov
fstl
les
ja
andb
mov
mov
movl
dec
testb
jmp
xchg
loopne
out
je
and
int
lods
aad
jle
add
fsin
call
rcrb
jmp
ss
mulb
mov
ds
fs
les
push
dec
lock
mov
xchg
jo
into
and
mov
add
pmuludq
mov
test
mov
push
or
shlb
jbe
aam
push
mov
push
inc
pushl
and
sbb
mov
dec
jle
and
enter
aam
add
lds
jmp
loop
mov
mov
aad
add
pusha
enter
sbb
ja
xor
mov
dec
imul
cltd
in
cld
popa
gs
pop
and
mov
fnclex
call
mov
or
out
cmp
xlat
xor
cli
cmp
sub
adc
js
icebp
jns,pt
inc
and
add
movsl
mov
add
push
pop
inc
popa
sbb
cmp
ss
fcomp
movsl
jmp
ljmp
adc
mov
push
test
sarb
dec
test
dec
dec
add
je
jmp
pop
dec
mov
js,pn
imul
shll
sbb
aam
sub
fstpt
lret
movsb
jmp
pop
call
xchg
adc
cmp
rcr
cltd
mov
test
xchg
mov
fmull
xchg
es
call
sbb
ljmp
rcl
cltd
mov
inc
add
sub
push
sbb
mov
and
in
pop
lods
mov
mov
fnstcw
sub
movsl
lods
mov
loope
jns
ret
inc
cmp
ret
mov
xchg
orl
jnp
stos
xchg
gs
mov
pop
pop
scas
rcll
pop
and
lcall
and
lea
aaa
lahf
push
mov
xlat
or
mov
xchg
imul
hlt
add
jns
loope
scas
daa
jne
ss
scas
mov
rcll
ret
and
or
repnz
pop
imul
push
jle
stos
mov
lcall
repz
in
pop
jns
mov
mov
adc
loopne
aad
mov
loope
pusha
lret
sbb
sub
and
cmpsb
ret
mov
sbb
ss
and
sbb
lods
orb
mov
call
add
xor
movsb
sti
add
in
adc
xor
jp
add
loopne
jg
stc
mov
pop
mov
and
cmpsl
push
out
repz
xchg
insb
jno
repz
add
mov
mov
aam
in
xor
mov
insb
nop
pushf
imul
mov
jno
adc
mov
dec
mov
lcall
repz
pushl
inc
cmp
mov
ja
fwait
xor
mov
mov
popf
sub
add
je
mov
stos
in
mov
sbb
sub
and
and
imul
xchg
xchg
xchg
mov
cmc
sub
lcall
rclb
xor
lret
xchg
xchg
push
or
mov
mov
push
outsl
test
popa
jmp
neg
mov
or
sar
in
daa
mov
int3
xor
rol
daa
lahf
or
mov
les
mov
test
jmp
hlt
cmp
addb
xchg
test
xor
xchg
and
ficoml
repnz
adc
push
pop
sbb
pop
loope
jmp
sbb
popf
sbb
mov
xchg
jmp
or
push
shll
rolb
int
mov
jo
pushf
stc
lds
mov
sub
sbb
pop
ret
aam
jno
cmp
push
shl
imul
adc
dec
cmc
sbb
push
ja
pop
xor
xchg
cmc
mov
adc
pop
cmp
mov
sahf
jg
mov
add
dec
jl
icebp
sub
cmp
jae
and
stos
cmpb
jecxz
in
lods
cmpsb
xor
xchg
lods
in
hlt
mov
pop
movsl
cltd
mov
and
push
xchg
imul
jmp
negb
xchg
mov
out
je
das
push
cwtl
and
movsl
sbb
imul
sbb
mov
mov
inc
add
mov
inc
push
lock
inc
cld
pop
sbb
and
and
dec
xchg
dec
and
mov
push
sbb
or
cmp
dec
aas
lea
push
fadds
cmp
or
inc
data16
xlat
mov
test
lahf
sub
loop
stos
mov
lret
jge
imul
dec
popf
adc
popf
and
ficoml
xor
imul
sub
pushf
imul
fisubrl
push
aam
adc
into
lahf
lret
ss
in
pop
movsl
pop
or
mov
dec
add
inc
push
pop
lahf
and
push
push
insl
pop
xor
pop
and
test
pop
lds
cmpsb
jp
repnz
out
popf
and
les
scas
mov
adc
ljmp
call
xchg
sbb
outsb
mov
jbe
mov
jmp
cmp
xchg
shlb
xor
xor
imull
movsl
and
daa
ljmp
cmp
call
inc
pop
jno
lods
rorb
or
arpl
fists
add
fisubrs
out
ljmp
rcl
inc
add
fcompl
jle
jno
jg
je
test
pop
pop
loopne
xchg
push
mov
jle
mov
movsb
cmp
fidivrs
cmp
int3
lds
pop
repnz
aad
cmp
fwait
pop
std
test
pop
jp
inc
arpl
push
outsl
mov
or
inc
out
in
scas
hlt
jp
and
jmp
imul
lea
cwtl
pop
sbb
sbb
mov
sbb
add
lods
lods
dec
cmp
stos
movsb
inc
cmc
fbld
push
cmp
or
mov
lds
cmpsb
xchg
sahf
les
mov
andb
flds
je
andl
jno
push
jle
adc
lcall
lcall
jge
sti
mov
mov
xor
out
cwtl
inc
clc
mov
xchg
test
sbb
clc
add
mov
ljmp
sti
jmp
cs
lods
mov
cld
es
scas
out
in
shl
add
fsub
dec
rcr
cmpsl
loope
rorb
push
sub
cli
dec
pop
ja
fwait
mov
xchg
fbstp
out
divb
mov
jmp
lret
mov
xchg
lret
mov
sbb
std
out
mov
xor
fwait
xchg
mov
pop
pushf
mov
mov
or
loop
or
xchg
push
lea
inc
cmp
mov
dec
adc
inc
jle
or
mov
cmp
imul
lret
jo
mov
shlb
mov
mov
push
jae
cmp
sbbb
sub
aas
sub
xchg
cli
push
mul
mov
cmp
push
xor
inc
push
shr
mov
insb
cmp
stc
mov
push
and
bound
adc
adc
sbb
rcl
ss
or
mov
lcall
jns
push
mov
jmp
add
mov
xchg
xchg
mov
aam
daa
jne
mov
or
dec
sub
xchg
bound
hlt
addr16
mov
lret
and
jecxz
adc
cltd
addb
jb
das
mov
fbstp
or
and
and
loope
cmpsb
mov
cld
xlat
js
cmp
mov
mov
dec
mov
mov
aas
mov
cmp
or
sbb
stos
ret
xor
sub
jmp
out
cmpsb
or
add
fs
cmpsl
out
insl
outsb
xchg
inc
mov
mov
mov
jns,pt
icebp
movsl
push
movsl
pop
stos
adc
ret
lds
cmpsl
inc
push
test
inc
sbb
aaa
jno
adc
pop
lds
push
leave
or
mov
clc
push
mov
out
in
cmpsl
gs
test
mov
dec
and
popf
call
cs
pop
cltd
mov
mov
bound
inc
filds
ljmp
popf
cmp
fiaddl
dec
stos
and
out
ret
jae
cltd
dec
sbb
sbb
sbb
imul
movsl
aam
adc
xchg
outsl
xchg
push
rol
ss
jl
mov
popf
pop
lret
mov
add
adc
mov
rcl
je
sbb
sub
test
ljmp
mov
call
mov
or
nop
imul
push
sub
cli
lcall
and
aad
adc
fadd
xor
nop
lods
nop
pop
dec
insl
adc
call
pushf
shll
cmpsb
or
stos
sub
adc
shlb
imul
scas
xchg
push
flds
fsubr
test
shrl
test
repnz
pop
push
sbb
add
mov
xchg
repz
nop
and
pushf
push
cwtl
pop
repz
leave
xchg
ret
sahf
sbb
leave
test
dec
scas
dec
pop
mov
xlat
cwtl
test
jmp
test
fiaddl
fcomps
in
mov
in
or
xor
push
ss
adc
mov
scas
stos
mov
lds
and
dec
adc
mov
popf
mov
jl
cld
dec
pop
pop
jns
test
sbb
hlt
ret
ret
repnz
cltd
jecxz
ljmp
test
mov
test
aad
movsl
dec
pop
outsl
arpl
xlat
adc
mov
aas
shlb
and
push
mov
dec
and
push
push
adc
imul
cli
mov
rorb
xchg
loope
dec
add
push
and
mov
pushf
cmp
push
jmp
add
push
movsb
adc
cli
movsl
fisubs
movsl
jae
or
mov
sbb
popa
xadd
cld
push
push
imul
push
jns
imul
mov
mov
loope
adc
out
push
dec
inc
mov
test
sti
jmp
imul
lret
pop
sbb
gs
push
and
xor
jmp
mov
pop
sub
xor
pop
sbb
js
sbb
mov
inc
test
sar
jb
shlb
movsb
pushf
shrb
sbb
mov
add
pusha
das
mov
ret
cs
sbb
inc
adc
jae
movsb
jnp
in
out
mov
sub
popf
jns
scas
add
movsl
fdivs
dec
mov
sbb
pop
mov
ljmp
inc
stos
mov
push
test
dec
lods
fstpl
arpl
rorl
xchg
iret
pushf
ss
xchg
lods
je
aaa
pushf
mov
cmpsb
repnz
jns
cltd
fnstenv
push
dec
fidivl
sahf
jnp
ljmp
jge
mov
aas
lock
dec
scas
lods
push
cltd
js
js
mov
std
movsb
cmpsw
xlat
push
sub
out
xor
sbb
inc
aad
fwait
mov
dec
movsl
lret
push
cmp
jl
enter
sub
aam
pushf
std
sub
and
push
pusha
cmp
fwait
xor
or
sbb
fs
mul
mov
out
aas
mov
sbb
aad
push
into
outsl
ss
vmread
xchg
imul
add
mov
pop
sbb
push
dec
mov
pop
into
das
pop
mov
mov
imul
imul
imul
sbbb
into
jmp
cld
xor
iret
lahf
imul
add
out
jae
mov
ret
push
out
test
xchg
dec
push
movsl
sub
and
mov
pusha
cmp
daa
dec
mov
je
sbb
in
fnstcw
or
xchg
fs
mov
adc
and
mov
dec
outsl
cmp
jmp
jecxz
inc
jae
mov
test
ljmp
imul
sbb
push
js
dec
cwtl
movsl
mov
cltd
lods
mov
lret
and
xlat
push
dec
sub
pop
test
movsl
dec
lret
iret
cmp
leave
adc
mov
pop
xchg
adc
or
mulb
fmul
std
inc
adc
scas
nop
xor
pop
mov
xor
mov
lds
and
out
lea
dec
ljmp
insb
push
mov
xchg
push
ja
add
mov
hlt
out
lahf
dec
pop
mov
inc
mov
sbb
pop
out
mov
mov
adc
adc
mov
mov
aaa
sbbl
movsl
cmp
ljmp
xlat
rcr
jp
in
int
jecxz
pop
mov
sbb
pop
popa
pop
movl
loop
push
pop
or
mov
cwtl
xchg
int3
add
pop
jg
cmc
push
xchg
jae
pop
jne
test
lea
sbb
repnz
pop
scas
rolb
cmpsb
pop
leave
test
jae
mov
rclb
push
adc
repnz
lea
in
idivl
fnstcw
adc
mov
jne
jmp
dec
fwait
rcll
stos
mov
adc
in
mov
cmp
mov
fwait
inc
push
cmpsl
test
inc
lea
test
push
lea
cmp
mov
mov
cmp
lcall
sti
jmp
mov
adc
push
ss
xchg
rcll
adc
push
mov
lods
jmp
mov
imul
dec
sahf
or
lcall
shlb
fs
inc
cmpsb
pop
xchg
lret
xchg
not
int
notb
lcall
mov
cmpsb
sbb
sbb
inc
dec
mov
cmp
mov
sbb
xchg
out
lods
inc
lods
pushf
cmp
cmc
mov
clc
ret
lock
jno
fwait
xchg
mov
and
into
push
add
mov
adc
pop
mov
arpl
mov
mov
out
cmpsl
sti
jecxz
pop
mulb
xchg
add
sbb
in
enter
or
jo
adc
stos
xchg
mov
call
adc
or
inc
in
addb
into
xor
cltd
insl
xchg
sti
xchg
lret
push
int3
movsb
cmp
cmp
jmp
jnp
std
xchg
out
jmp
sbb
out
das
mov
pop
and
push
pop
in
mov
ret
and
icebp
arpl
push
outsb
and
pop
add
cltd
cs
push
adc
push
into
mov
in
test
and
clc
inc
sbb
movsl
popa
sbb
add
movsb
jmp
mov
pushf
fstpt
pop
inc
cmp
jge
mov
mov
iret
jne
adc
pop
cli
mov
mov
dec
jae
jl
mov
mov
xor
push
push
inc
std
and
xchg
das
loope
jae
mov
mov
xor
clc
mov
mov
js
lea
stos
mov
frstor
mov
rcll
cmc
or
jo
sbb
xchg
xor
pop
loop
cmpsl
dec
in
fisubl
notb
pop
leave
fisttpl
mov
sub
fiaddl
test
jne
lods
jmp
mov
insb
cli
sub
loopne
sbbl
scas
inc
mov
adc
out
out
fsubp
std
enter
cmp
repnz
xor
call
and
fcomp
repz
orl
push
mov
push
movsl
popf
in
mov
mov
xor
mov
xor
lea
xchg
add
mov
enter
sahf
mov
add
test
lds
cs
mov
inc
add
pop
cmp
xor
fwait
mov
call
testl
inc
mov
lcall
out
cmp
icebp
and
cmp
hlt
mov
stc
sahf
pop
mov
mov
cltd
repnz
jb
test
arpl
cli
icebp
dec
dec
and
fucomp
cmp
fwait
mov
mov
test
test
in
in
lcall
out
jnp
adc
jnp
mov
jae
out
push
fldenv
test
or
mov
xor
xchg
xchg
test
and
lods
cwtl
out
pop
mov
pop
mov
pop
pop
xor
sub
leave
xchg
dec
mov
and
data16
jl
lods
mov
hlt
and
in
hlt
fsts
dec
jmp
sbb
xchg
imul
mov
les
jae
mov
repz
xor
movsb
sub
cltd
mov
cmp
sahf
imul
ret
xlat
inc
jmp
aam
aad
cmpsb
jp
adc
movsl
mov
mov
imul
and
iret
mov
ret
xchg
ror
aam
mov
imul
iret
adc
dec
shlb
or
cmp
and
add
aam
pushf
lods
cmpsb
cmp
lods
enter
pop
dec
movsb
pusha
andb
insb
out
fidivs
repnz
sub
fidivrs
adc
mov
inc
jmp
mov
pushf
push
jg
pop
dec
or
into
mov
gs
pop
jge
cwtl
and
mov
cmp
shl
mov
xor
fs
pop
aaa
push
mov
mov
mov
outsl
or
add
out
sahf
sub
mov
push
xorl
in
sbb
mov
mov
pushf
jmp
in
xor
xor
ljmp
sub
sub
cmp
add
cmp
daa
sbb
mov
dec
in
shr
fucomp
out
movsb
jle
or
push
mov
aas
jns
sbb
mov
shll
stos
test
mov
test
pushf
mov
cli
xchg
mov
comiss
xchg
in
sub
fisubrs
xchg
test
gs
push
mov
add
jo
pusha
and
in
inc
aas
add
sbb
inc
push
fs
arpl
fwait
in
mov
sub
cwtl
mov
movsl
pop
and
jmp
orb
outsl
aad
test
dec
lret
jl
mov
ror
fs
clc
out
aaa
pop
dec
or
mov
inc
jo
les
lahf
cmp
fcompl
and
repz
and
sub
or
mov
gs
dec
out
ljmp
add
imul
test
or
popa
ja
mov
pop
repz
push
ficomps
out
js
mov
int3
insl
mulb
jne
jge
add
in
pop
loop
testl
jg
mov
add
std
fisubrl
mov
lret
icebp
mov
in
mov
lahf
mov
loope
bnd
cmp
jmp
pop
int
xchg
or
fstpt
addr16
sbb
nop
push
popf
imul
ss
outsb
mov
mov
add
jl
ficompl
adc
je
pop
dec
mov
jp
les
pop
ds
data16
imul
lret
or
test
outsb
sbb
pushf
imul
mov
lock
out
daa
out
sub
das
mov
push
ret
dec
lock
dec
add
pop
inc
dec
lock
stc
js
iret
out
jns
loope
sbb
and
shrb
stc
fists
and
mov
gs
or
jg
push
mov
push
sbb
cwtl
mov
les
cli
popa
ss
jecxz
in
test
adc
loope
dec
or
fisubrl
shll
add
mov
inc
mov
rolb
fiadds
outsb
sub
neg
push
fwait
movsb
mov
ficoml
int
andl
clc
mov
stos
and
xchg
mov
add
or
jecxz
scas
jno
mov
rcl
jb
inc
lock
cmp
sbb
test
flds
outsb
mov
fimull
mov
pop
rcr
cltd
es
hlt
test
xor
mov
clc
out
xchg
in
cld
pop
pop
inc
icebp
sbb
xchg
cmc
pop
stos
icebp
ljmp
into
mov
inc
stos
scas
pushf
dec
jno
pop
int
xor
jl
sub
mov
sahf
mov
js
xor
or
in
mov
mov
mov
cmovns
dec
test
aam
push
xchg
pusha
je
aam
sbb
gs
or
push
stos
sbb
mov
imul
fcom
into
mov
add
adc
sub
mov
and
jnp
mov
mov
push
cmp
mov
add
sub
cmp
shrl
mov
shlb
call
shlb
mov
mov
sbb
in
or
xlat
mov
or
adc
mov
pop
out
xor
jo
leave
sub
test
movsl
mov
lock
test
ljmp
mov
pop
leave
insl
ret
lret
scas
push
pop
jmp
fcmovb
sbb
push
cmp
fnstcw
rcl
mov
pop
mov
and
inc
mov
cmp
lret
xchg
push
mov
outsl
cld
sbb
jmp
movsl
xor
add
mov
dec
xchg
jg
es
sub
jge
sbbb
imul
push
dec
or
mov
inc
fwait
stos
insl
test
in
or
sub
lods
jae
pop
out
sahf
mov
sub
loop
ds
and
in
loopne
push
mov
xchg
mov
add
push
xorb
jmp
subb
pop
aam
sti
icebp
sub
jb
aad
enter
cmc
outsb
and
aas
out
sbb
lods
adc
movsb
pop
data16
dec
test
sub
pop
sti
iret
xchg
test
repnz
outsb
pop
negb
aas
push
lods
jg
mov
gs
ret
imul
mov
or
xchg
ds
mov
adc
cmc
inc
lret
cmp
mov
fucomip
mov
mov
sbb
iret
jbe
jecxz
dec
xor
xor
xor
jmp
xchg
mov
pop
mov
ret
and
xchg
lds
pop
xchg
mov
lods
and
repz
inc
xor
mov
icebp
test
sbb
xchg
cmp
sbb
loope
xor
sarb
or
mov
xor
data16
div
sti
dec
lds
adc
jnp
pop
clc
cli
cmp
stc
push
nop
mov
js
fcmovnu
in
idivb
and
outsl
inc
pop
push
inc
hlt
xor
add
popf
in
adc
aad
xchg
adc
cmp
cli
sbb
mov
lcall
mov
sbb
ljmp
int
inc
aaa
fldenv
lret
imul
or
sbb
cli
cmpsl
loope
scas
jl
lahf
jnp
fbld
sub
cmp
mov
xchg
mov
notb
lock
sbbl
add
mov
pop
mov
push
cli
xchg
and
push
mov
leave
je
into
inc
lret
jl
mov
loop
hlt
loopne
inc
int3
paddq
das
sub
xchg
cli
pop
or
add
out
cmova
push
mov
icebp
add
xchg
mov
adc
inc
sub
xchg
mov
outsb
dec
cmc
imul
and
jbe
aaa
mov
inc
inc
cmp
push
mov
mov
es
mov
pop
cmpsl
jne
loop
mov
mov
adc
mov
test
xchg
shrb
sub
sbb
and
sub
int3
cmpsl
jo
cmpsl
sbb
das
jbe
stos
roll
imull
jp
mov
pushf
cmc
loopne
sbbb
ficoms
and
sbbl
inc
fnstsw
sbb
mov
mov
gs
xchg
out
mov
inc
and
lcall
xchg
sbb
sub
jl
fs
sub
jno
js
xor
sti
dec
push
mov
test
icebp
fdivrs
ss
fcmovne
stos
mov
and
push
xchg
xchg
inc
and
mov
mulb
cld
add
push
pop
jb
pop
mov
pop
stos
lods
mov
pusha
lcall
cmp
add
cmc
nop
mov
mov
dec
mov
stos
dec
scas
les
xchg
sbb
fs
into
cmp
xchg
stos
xor
ds
mov
push
sbb
add
les
sbb
js
lret
js
cmp
sbb
lahf
pop
sub
ret
andb
leave
mov
jg
pop
pop
mov
adc
jns
push
sbbb
jge
or
mov
dec
inc
in
jns
lods
sbb
lds
enter
add
mov
mov
cmpsl
mov
popa
test
icebp
push
mov
cwtl
movsl
popa
mov
pop
mov
or
sub
sub
call
xchg
test
mov
mov
adc
xchg
call
push
sti
sbb
pop
fmul
cltd
jbe
mov
lret
out
icebp
mov
test
mov
push
dec
mov
adc
mov
xor
sub
cmp
imul
test
lcall
sub
ret
mov
mov
cmpl
mov
cli
and
adc
xor
hlt
add
push
mov
in
cmpsb
inc
iret
mov
xchg
sbb
insl
in
lcall
mov
not
cmpb
xchg
pushf
out
das
outsl
cmp
movsb
pop
fstps
jne
cmp
or
dec
pusha
jbe
stos
add
add
add
mov
mov
push
push
ljmp
shrb
xor
adc
mov
inc
movsb
inc
loop
repz
lret
aad
sub
and
std
cwtl
hlt
or
imul
pusha
or
insb
dec
xchg
mov
jno
clc
adc
fnstenv
jae
scas
mov
push
jecxz
mov
pop
add
inc
int
sbb
dec
mov
ficompl
pop
sub
jbe
push
cmp
add
jmp
add
or
xor
orl
ja
insb
sahf
cmp
mov
mov
push
push
movsb
lret
or
mov
mov
push
shrb
xchg
cmpsl
movb
pop
in
sbb
and
addl
out
das
and
scas
inc
and
cmc
push
mov
mov
dec
sub
repz
lods
stos
clc
cltd
xchg
aas
jnp
repnz
call
or
jmp
xchg
mov
mov
push
pop
push
aad
cmc
out
icebp
add
and
sub
and
fistpl
or
cmc
sarb
lret
xchg
in
int
lret
xchg
push
push
popf
push
sbb
mov
cltd
jecxz
testl
dec
jne
jle
push
push
stc
sbb
pop
push
mov
jmp
mov
jne
mov
cli
cmp
sbb
in
call
dec
pop
aas
mov
dec
push
or
in
pop
nop
and
in
aad
cmp
xor
jne
sub
adc
pop
mov
and
and
mov
push
cmp
mov
loop
out
push
jb
jmp
and
sbb
ja
sbb
cmp
fstpt
jmp
stos
or
in
lods
je
fcmovne
mov
js
sub
cmp
pop
xchg
mov
mov
cmpb
in
add
xlat
icebp
lds
es
xlat
and
sbb
cmpsb
push
mov
jmp
loopne
out
push
sbbl
sbb
sub
cmpsb
in
inc
lds
fwait
call
aaa
stc
xchg
dec
in
xchg
cmp
call
out
mov
mov
cmpsl
fildll
and
inc
pushf
mov
movsb
mov
lcall
push
js
mov
je
int
push
orb
pop
imul
or
push
add
lahf
pmullw
icebp
aas
cmp
outsb
and
shll
in
das
inc
in
xor
paddb
add
cmc
test
dec
leave
jmp
add
mov
mov
cmp
xor
jg
pop
fimuls
mov
ret
and
mov
lret
mov
mov
cmc
lods
arpl
int
adc
in
scas
scas
gs
sbbl
stc
or
mov
sub
dec
mov
cltd
pmuludq
pusha
in
lcall
and
sub
sbb
dec
jns
dec
push
mov
and
hlt
out
dec
xchg
repz
sbb
int
icebp
cmp
mov
mov
jmp
aam
xchg
mov
aad
cld
cmp
push
sti
mov
orb
les
pop
pop
iret
shlb
and
mov
mov
rcll
push
js
lcall
and
stos
xor
or
add
out
sbb
icebp
adc
popf
daa
rolb
aam
push
mov
push
sti
test
mov
movsb
mov
sub
cmp
pop
cmp
out
inc
xchg
aas
mulb
mov
sbb
outsl
jne
aad
fwait
mov
sbb
adc
insl
and
fwait
jbe
movsl
scas
mov
xchg
mov
mov
inc
out
inc
test
jbe
mov
out
sub
insl
mov
shl
enter
sub
jne
inc
or
outsl
mov
pop
insl
fimull
xor
and
inc
cltd
repnz
mov
jp
test
pop
inc
adc
stc
filds
movsb
js
and
popa
daa
dec
movb
push
pop
or
push
cmc
push
cmpl
xchg
in
cmpsl
or
mov
hlt
je
add
adc
mov
dec
cs
mov
xchg
repnz
fldl
scas
out
mov
lods
jne
mov
sbb
push
mov
sbb
inc
sub
or
or
mov
and
mov
push
inc
mov
stos
and
push
call
call
ret
sub
in
daa
ret
push
sbb
mov
div
xchg
idivb
fsubl
nop
adc
xchg
loop
repnz
fstps
sbb
mov
and
xor
mov
push
mov
mov
repnz
in
dec
in
cltd
test
or
lods
sbb
out
rcrb
bound
cmpsl
icebp
push
cmp
cmpsb
out
jmp
fists
std
cltd
scas
and
add
mov
sub
pop
mov
jle
arpl
int
sahf
push
lret
sbb
xchg
cmc
cmp
fnstsw
fldcw
test
dec
lret
dec
das
aam
pop
arpl
push
sbb
stos
pop
or
push
lea
out
push
cmp
sbb
push
mov
lods
jle
cmp
xchg
adc
pop
pop
pop
out
out
dec
in
fstpt
mov
into
lds
call
out
pop
std
sbb
push
dec
js
test
lods
arpl
mov
scas
add
xor
fdivrp
test
mov
jne
jae
fdivrs
add
cmp
mov
and
ljmp
shrl
mov
cmp
mov
sub
adc
and
jmp
scas
popf
jnp
fisubs
movsb
xor
adc
inc
inc
popf
lret
mov
insb
cmp
sub
sti
test
fadd
lods
add
sbb
and
dec
mov
cld
rcl
inc
jle
add
mov
dec
adc
fwait
xchg
test
cld
enter
or
int
loopne
xlat
mov
popf
pop
pop
sub
mov
cmp
cld
mov
ja
xlat
inc
ret
in
xor
sbb
inc
int
jmp
mov
jge
pop
xchg
mov
lret
cltd
jmp
xor
xor
cmp
push
movsl
imul
xchg
repz
mov
notb
mov
xor
sti
sbb
dec
xlat
repnz
and
ds
clc
es
in
cmp
aad
pop
jne
sbb
leave
xchg
sahf
fildl
js
insb
in
lea
mov
outsb
cmc
data16
daa
clc
push
xchg
jmp
rcr
fldenv
push
and
adc
mov
xchg
mov
repz
pop
repz
and
out
out
xchg
inc
sub
and
and
pop
cmp
jns
loope
mov
inc
mov
out
imul
mov
lock
xchg
xchg
jnp
scas
arpl
dec
jg
pop
ret
imulb
sbb
inc
fs
mov
or
push
or
mov
shll
in
incl
andl
pop
and
push
sub
cmc
mov
cmp
mov
xor
repnz
fs
jecxz
ret
add
shrb
sbb
mov
pop
in
pop
jmp
js
fstpl
jecxz
leave
out
sbb
in
adc
sub
pop
pop
sub
lret
gs
cwtl
icebp
xchg
cmpb
add
mov
mov
fsubr
sbb
or
and
mov
sbb
dec
cmp
shlb
xor
jo
cmc
adc
mov
lcall
clc
outsl
push
mov
jae
push
lret
in
dec
xchg
lock
pop
in
sbb
xor
gs
imul
cmp
insl
stc
iret
mov
inc
vsqrtss
or
in
test
xchg
out
mov
aam
adc
fisubs
mov
add
cltd
arpl
test
into
sub
hlt
mov
pop
std
push
imul
add
mov
es
sarl
in
add
mov
inc
in
pop
lock
mov
cmp
cs
fcmovnb
in
mov
repnz
shlb
sti
adc
xor
lock
popa
or
fimuls
push
cmc
mov
mov
in
xchg
call
dec
sbb
jge
xor
pop
dec
xor
xchg
jne
xchg
pop
and
cmpsb
pop
jae
pop
inc
repz
jnp
int
mov
add
fnstcw
inc
inc
cltd
shrl
inc
lret
out
inc
mov
lods
sbb
out
sbb
xchg
mul
mov
gs
rep
stc
punpcklbw
push
push
push
popa
push
mov
cmp
idivl
inc
cmp
hlt
test
inc
sub
out
repnz
cltd
fwait
dec
call
inc
sahf
xor
mov
int3
sub
mov
call
sbb
push
mov
jb
ds
lret
loop
sub
fbstp
mov
xor
lds
xor
pushw
xchg
data16
mov
loope
stos
call
mov
lock
mov
divb
sub
loop
arpl
lds
and
pop
mov
and
cli
and
cli
xor
mov
xchg
fildl
call
pop
sub
int3
jmp
lcall
sti
add
xor
add
cltd
push
fnstenv
xor
insb
xlat
xchg
push
or
pop
fwait
stos
ret
fs
and
adc
adc
mov
and
lret
pushf
or
add
cmpl
repnz
pop
icebp
jbe
neg
jge
daa
pop
inc
jle
cmp
adc
push
test
and
push
xor
aas
and
sbb
pushf
in
jns
test
in
pop
inc
fcompl
sarl
imulb
dec
popf
stc
nop
cmc
cwtl
and
sub
clc
mov
in
cmp
sub
sbb
test
add
xlat
fwait
daa
and
mov
push
sbb
out
jno
add
scas
test
sbb
rcl
je
jno
cmpl
out
cld
xlat
shll
push
in
jge
cmpsl
jne
xchg
call
mov
lret
xchg
mov
ror
loop
mov
test
out
lods
xor
mov
mov
jle
inc
push
mov
fistl
fwait
mov
jg
clc
mov
mov
loope
or
adc
lret
xor
sub
icebp
sbb
movsl
jmp
xchg
mov
sbb
mov
pop
sahf
mov
or
jns
mov
adc
incb
sbb
mov
adc
ljmp
into
lds
mov
mov
in
sbb
xchg
lahf
jno
pushf
and
rorl
cmp
and
jne
sub
cmpsb
mov
popf
pushl
sbb
add
idivl
in
insl
sbb
inc
jb
shrb
and
mov
nop
inc
mov
add
jnp
xchg
cmp
lahf
inc
ds
inc
add
mov
mov
push
adc
mov
ja
std
and
mulb
loope
out
cmc
mov
or
dec
or
mov
xor
lahf
and
sbb
mov
pop
rcrb
cmp
out
popa
icebp
adc
out
std
sbb
mov
xor
ja
mov
push
pop
push
je
fdivrl
sub
jle
in
sbb
jge
adc
dec
gs
fdivrl
stos
fwait
cmp
push
cmp
sahf
jnp
lea
or
xchg
std
jge
push
cltd
inc
aas
fidivrl
dec
lret
dec
mov
cmp
mov
sub
call
inc
cmp
add
es
call
aas
push
lret
shll
mov
ficoms
pop
push
int3
pop
lock
xor
sub
imul
gs
add
pusha
xor
jmp
push
adc
or
or
icebp
pop
sub
repnz
xchg
mov
in
mov
and
aad
inc
repz
or
xchg
mov
lock
sbb
adc
shrb
ljmp
lahf
ss
repnz
loope
test
inc
scas
push
test
out
mov
andl
dec
add
mov
mov
add
lcall
pop
in
shl
and
pop
sbb
adc
dec
faddl
notb
adc
xchg
pushf
rolb
movsb
dec
scas
cmp
in
stc
mov
mov
xchg
aad
inc
dec
mov
push
sub
scas
imul
movsb
imul
cli
fsubrl
shr
mov
xor
xor
out
and
jb
outsb
test
dec
jg
stos
stc
vcvttpd2dq
push
cmp
inc
push
daa
rorl
lcall
arpl
movsb
pop
push
arpl
cld
addr16
sbbl
shll
adc
nop
add
mov
dec
dec
mov
rclb
rol
push
leave
push
lods
inc
out
icebp
imul
and
pop
lahf
jnp
call
add
leave
and
and
dec
cwtl
sbb
rcrb
sbbl
int3
cmp
aas
aad
and
jb
aas
jmp
or
push
pusha
movsl
xlat
jae
xchg
aam
cli
pop
fbstp
inc
in
mov
adc
ret
enter
cmp
mov
cmp
repz
xchg
fcomps
lahf
push
mov
cltd
or
cld
int
mov
call
pop
sbb
addr16
mov
cmp
scas
or
xchg
and
mov
aaa
and
pop
pop
dec
ret
jo
in
imul
out
cmc
and
je
xlat
mov
fistpl
xor
inc
adc
lret
js
in
add
in
mov
fdivrl
enter
mov
mulb
out
fisttpll
jo
fcmovb
sbbb
jns
or
xor
out
xor
add
daa
xor
pop
fimuls
test
fisubs
lcall
lods
hlt
test
call
in
divl
testl
pop
dec
jle
mov
into
repnz
inc
add
das
sti
inc
jns
push
dec
xor
xchg
mov
sbb
mov
and
push
lock
in
mov
mov
addl
sub
js
fwait
and
xchg
aas
in
sbb
xchg
or
mov
in
dec
and
mov
loopne
mov
sti
cs
mov
mov
xchg
cmp
hlt
nop
cmpsb
xlat
popa
addr16
stos
roll
jne
mov
mov
xchg
out
mov
jg
fnstsw
scas
and
cmpsb
jns
mov
fists
push
dec
movsb
std
sbb
or
in
and
rcr
insl
rcrl
out
cs
inc
pop
ljmp
rcrl
fmuls
mov
adc
test
stos
jmp
inc
mov
mov
and
cmp
stos
push
sti
adc
xchg
add
xchg
aaa
arpl
push
pop
mov
aad
bound
ljmp
sbb
sbb
and
sbb
je
out
lcall
dec
in
lods
push
inc
inc
mov
cli
addr16
add
div
pop
sub
cmc
jbe
icebp
and
enter
push
cmc
or
fwait
aam
mov
arpl
add
mov
cmpsb
pop
dec
lods
pushf
lret
iret
arpl
cmpsl
pop
push
out
lds
cmpsb
cmp
add
adc
adc
stc
mov
ret
mov
out
jmp
sub
mov
fwait
stos
sbb
mov
mov
cmp
jns
sub
jne
sub
adc
iret
pusha
adc
xchg
test
push
cwtl
jmp
cmp
mov
lods
rcll
jmp
or
jbe
jns
fisubrs
xor
out
movsl
dec
outsl
cmc
pop
cmp
stos
pop
and
cmp
xchg
shrb
outsl
push
dec
and
mov
iret
icebp
adc
and
dec
xor
repz
pop
sbb
sbb
daa
punpcklwd
and
enter
xchg
jb
and
pop
out
leave
ret
imul
aam
mov
jge
inc
mov
test
push
and
mov
imul
adc
out
imul
in
mov
and
xor
xor
enter
mov
pop
popa
lcall
mov
adc
push
add
popa
inc
pushf
loopne
test
xor
xchg
dec
and
mov
sti
subl
test
cltd
mov
mov
and
add
sub
xchg
je
mov
sbb
daa
add
std
pushf
int3
bound
into
in
mov
cmpsb
cmp
aam
pop
jge
sbbl
sahf
or
dec
daa
out
inc
adc
mov
notl
loope
inc
stc
pop
or
dec
jo
sbb
ret
lock
adc
gs
dec
push
sti
int3
in
sbb
js
pop
pop
add
xchg
xchg
adc
cmpsl
push
mov
add
test
dec
outsl
push
cli
adc
out
pop
cmp
pop
push
add
xor
cmp
jl
test
mov
fsubp
pushf
dec
movl
and
cmc
outsl
insl
out
pop
pop
mov
je
lcall
push
push
gs
aaa
hlt
loopne
call
or
sub
and
jmp
sbb
dec
imul
mov
pop
jb
ret
mov
insl
sahf
push
pop
mov
cltd
mov
mov
movl
test
sti
mov
pop
sub
imul
int3
sti
mov
call
fisubrs
fcoml
loop
dec
cwtl
aam
mov
jge
or
add
pop
sbb
add
clc
mov
xchg
hlt
cmp
mov
sub
inc
xchg
cli
mov
mov
call
cmp
ja
xor
leave
mov
mov
sub
inc
pop
push
push
aaa
cmpsl
adc
jmp
repnz
mov
ja
out
imul
aam
mov
movsl
xchg
faddl
adc
fwait
outsl
and
cmc
mov
cs
fs
dec
push
pushf
fdivl
pop
aad
sbb
test
pop
mov
lods
push
push
stos
pop
cmp
or
add
lret
repnz
popf
test
or
mov
add
cmp
lock
stos
out
loopne
frstor
test
popf
pop
scas
mov
inc
jecxz
repz
dec
jg
ret
jmp
es
lret
mov
nop
sbb
les
ljmp
jb
push
in
jmp
sbb
cltd
stos
test
cmp
mov
mov
and
xchg
fwait
cmp
sbb
leave
test
push
fld
dec
push
imul
add
aam
out
add
and
mov
mov
popf
stos
jge
inc
out
jmp
mov
add
jecxz
movsl
push
cs
push
daa
or
ss
cmp
pop
imul
bound
push
daa
jle,pn
mov
cs
jl
mov
fidivs
pop
cmp
lret
inc
in
jp
or
mov
jecxz
sub
idivb
xor
mov
xchg
sub
mov
mov
dec
cmc
in
push
jp
xchg
push
sub
and
lea
lods
inc
jmp
mov
and
aaa
inc
mov
cltd
or
xor
les
divl
mull
dec
push
cmp
nop
fdivr
in
xor
insb
jne
jp
inc
ja
push
mov
or
sbb
cmp
push
sub
or
and
add
xchg
or
aad
mov
out
mov
jb
xchg
pusha
fldenv
test
cltd
dec
pop
xchg
mov
sbb
lret
sbb
jg
imul
fwait
adc
pop
jecxz
xchg
pop
and
push
adc
cmpsl
mov
mov
xor
inc
mov
and
ret
leave
shlb
movsb
loopne
loopne
cmc
push
jae
test
icebp
and
jmp
sub
pop
and
sub
push
cltd
mov
cmpsb
sub
sbb
lock
fisubrl
sbb
fldcw
mov
notb
cmpsl
aad
sbb
dec
cmc
ljmp
xor
jne
sbb
and
mov
testl
mov
mov
loope
jg
sbb
mov
lahf
dec
cmpsb
adc
mov
call
pop
cmp
xchg
dec
mov
jns
jmp
push
add
pop
and
jnp
sbb
xor
mov
mov
out
and
xor
std
inc
inc
mov
out
out
sbb
js
aaa
mov
cmp
fs
lds
xor
leave
dec
or
ds
mov
mov
lahf
jmp
in
dec
imul
dec
pop
out
add
add
pushf
and
mov
fstl
jnp
mov
inc
lahf
xlat
repnz
push
stos
cmp
test
shll
dec
xor
mov
pop
jno
mov
icebp
insl
xchg
sbb
scas
imul
xchg
pusha
adc
jne
rol
jb
jb
insb
or
popf
sbb
jns
or
movsb
imul
xlat
sub
inc
or
jge
xchg
jo
rcl
jo
in
lret
mov
adcl
push
add
jnp
in
pushf
std
jmp
fisubs
mov
xchg
imul
xlat
fsub
push
repz
xchg
pop
mov
jg
jg
jb
lods
push
cmpsb
xor
outsb
cli
or
mov
out
push
popf
jmp
mov
and
in
adc
mov
cmp
push
push
out
lcall
mov
add
arpl
jo
xor
mov
fwait
push
mov
adc
jl
jbe
mov
sbb
mov
sbb
push
sahf
int3
xor
push
ds
and
xor
popa
ja
mov
xchg
aam
push
sbb
mov
inc
shr
repz
dec
sub
loope
adc
cld
inc
je
out
jae
call
enter
add
sub
mov
pop
sub
mov
mov
sarb
clc
adc
out
add
dec
mov
je
fdivs
mov
or
ret
pushf
cmp
cmp
sbb
orb
adc
stc
mov
cmp
xchg
inc
sbb
fstps
rcrb
adc
mov
stos
or
xor
iret
adc
inc
pop
cmp
or
cltd
sahf
mov
or
jno
jnp
movsl
adc
pop
xlat
cltd
cmpsb
test
mov
or
pop
adc
and
xchg
and
fwait
andl
and
ljmp
loope
mov
cmpsl
xchg
lcall
mov
jp
cmp
shll
adcl
scas
xor
mov
jb
pop
leave
add
push
in
pop
mov
and
and
inc
xchg
test
push
pop
push
sub
jns
push
and
sbb
inc
push
test
cmp
cli
test
stos
pop
iret
movsl
lret
iret
mov
scas
inc
iret
dec
aad
cld
in
test
cld
insl
andb
xor
xchg
insl
nop
xchg
push
adc
test
in
cld
outsb
mov
push
lea
pop
popa
lret
mov
mov
aad
fs
cmpsl
jae
cmp
out
in
arpl
jbe
iret
dec
pop
test
jmp
movsb
sbb
aaa
ja
xor
imul
add
ss
xor
and
loope
mov
arpl
push
pop
push
mov
fwait
pop
adc
and
imul
fldt
pop
pop
and
dec
and
push
lea
and
sub
dec
fidivrl
fisubs
sub
mov
out
call
xor
jne
pop
sti
mov
outsb
sub
leave
stos
in
adc
pop
push
fs
sti
adc
sarb
push
ds
cmp
test
aam
les
mov
inc
xchg
push
and
mov
pop
xor
sub
mov
fidivrl
push
or
jnp
dec
mov
ljmp
sbb
pop
popa
lds
in
sbb
mov
push
mov
cmpb
movsb
in
jae
or
push
cmpsl
sti
mov
cmp
ficoml
or
cmp
mov
mov
lods
mov
mov
test
jl
mov
imul
inc
add
imul
xor
add
aam
bound
push
xlat
std
dec
add
xor
mov
push
mov
add
bound
mov
test
mov
push
jns
test
xor
sub
push
inc
xchg
adc
and
imul
idivl
jae
or
sti
xchg
cmp
in
mov
into
adc
mov
clc
pop
mov
icebp
ret
lea
out
jle
mov
stc
scas
mov
std
dec
shlw
or
mov
pop
in
aas
cmpsl
jnp
ret
inc
lcall
frstor
push
and
lret
dec
sub
sub
mov
cli
fwait
jmp
xor
es
jle
fisubrl
push
lea
std
mov
fs
push
sti
jae
aaa
sub
push
xchg
mov
push
leave
jnp
fs
dec
pop
test
jns
test
sub
mov
arpl
add
xlat
mov
andl
lahf
lcall
adc
je
mul
cmp
loopne
in
push
test
xchg
mov
sbb
jns
dec
mov
or
mov
arpl
repnz
cmpsl
addr16
pop
mov
sub
addr16
in
lret
lret
lea
aam
dec
inc
mov
insl
in
jne
mov
out
mov
sahf
fld1
and
sub
clc
push
mov
and
mov
xor
hlt
jl
fwait
adc
mov
arpl
repz
in
xchg
mov
fstp
test
cld
ftst
sub
outsl
lds
idivl
dec
jns
ljmp
pop
mov
lcall
xchg
push
mov
and
mov
adc
sbb
mov
cmp
pop
leave
sub
xchg
rcll
push
aaa
fisubl
int3
cli
mov
dec
roll
andnps
sub
mov
inc
aad
sbb
and
mov
push
lds
dec
mov
loope
pop
lret
mov
cmpl
in
push
sub
cmp
mov
adcl
sbb
jge
pop
aaa
dec
mov
in
mov
push
daa
cmpsl
pop
test
pushf
dec
and
aam
lods
pop
xchg
jb
in
mov
add
mov
cwtl
int3
cmc
shll
push
pop
nop
cmp
stc
movsl
jo
jmp
mov
out
push
scas
lods
adc
shll
inc
cmp
xor
mov
jge
bound
pushf
mov
adc
aad
nop
repz
sub
mov
into
push
lock
in
and
in
out
mov
mov
sbb
dec
movsl
and
jo
ret
mov
dec
enter
xchg
jmp
sub
sbb
daa
pop
cmp
mov
loope
mov
inc
imul
cwtl
shlb
adc
fs
rorl
add
jmp
or
rcr
mov
cmp
dec
test
push
xlat
pop
jl
dec
cmc
inc
xlat
push
jmp
push
or
sub
xchg
daa
aaa
enter
insb
mov
gs
ficompl
mov
fsts
out
stos
sub
mov
fwait
mov
push
and
sti
insb
fnstenv
in
lcall
int
movsl
dec
jg
cmc
adc
add
lret
dec
out
xchg
adc
paddsb
das
pop
mov
enter
push
cmp
cltd
mov
jb
lock
cs
ljmp
or
popf
mov
mov
sarl
mov
xchg
jge
mov
push
jne
std
out
repnz
addr16
xchg
jle
push
cmc
push
cmc
sub
out
add
adc
and
or
jns
mov
dec
inc
jb
sbb
adc
pushf
fstpt
addps
js
popa
mov
std
out
shlb
cmpsb
lret
pushf
repnz
xor
test
stos
cmp
dec
pushl
out
sbb
jmp
aaa
movsb
rcll
stos
ror
repz
sarb
lds
sarl
ficompl
sbb
shlb
popf
mov
sbb
push
cmp
filds
pop
je
mov
pop
pop
cwtl
nop
sbb
push
fsts
push
rorl
jecxz
or
sub
dec
mov
mov
pop
les
popa
lret
fisttpll
xchg
mov
or
add
outsb
mov
movswl
and
adc
popf
aas
mov
sahf
adcb
jmp
aad
clc
ret
push
mov
push
xchg
and
push
xor
inc
cwtl
jmp
outsb
rclb
leave
dec
popa
xchg
cmp
jnp
dec
and
ret
xchg
fnsave
jns
nop
xor
lret
and
dec
fnstenv
imul
test
fsubr
cmp
or
daa
ss
ljmp
lds
ja
sbb
or
dec
popl
cmp
jl
xor
and
mov
xchg
jecxz
and
or
popf
pop
jp
das
gs
roll
sub
sbb
jno
push
jbe
sbb
orl
clc
pushf
sbb
data16
jg
cli
sbb
fimuls
jmp
setge
sti
xchg
sbbb
lcall
cmc
ja
mov
scas
mov
jnp
mov
stos
cmpsl
mov
addr16
push
sbb
mov
test
push
jne
and
mov
jns
mov
in
sub
push
aaa
xchg
arpl
cmpl
pop
sbb
nop
clc
shrb
mov
in
lahf
jg
pop
mov
xlat
mov
jmp
cwtl
shll
cli
shll
mov
inc
xchg
js
xchg
mov
inc
popf
sbb
imull
imul
stos
push
fwait
sub
cltd
inc
mov
jecxz
lahf
xchg
cmpsl
mov
test
xor
mov
cmp
cs
xchg
lret
adc
xlat
andl
popf
mov
dec
outsl
pop
stos
push
xor
adc
imul
test
jmp
test
mov
ds
loope
mov
sub
fdivrl
mov
sbb
xchg
pop
stos
and
mov
or
adcb
fs
loope
enter
xor
jecxz
lock
repnz
leave
mov
sbb
xor
int3
jb
add
sbb
sub
mov
jge
cmp
sbb
or
jl
mov
ljmp
mov
or
mov
xchg
push
sti
andb
push
inc
push
lods
das
fbstp
push
cltd
pop
and
and
data16
test
cmpl
aad
mov
sbb
ret
fstp
mov
fucomip
xchg
or
test
xor
and
xor
out
scas
popa
xor
stos
aas
jne
scas
out
ret
or
mov
sub
fistps
sbb
jns
and
mov
bound
in
adc
pop
mov
add
mov
or
popa
stc
sbb
xor
adc
dec
pop
fsubrl
jmp
mov
adc
sub
pop
andl
or
rorb
rorl
aam
push
and
dec
and
sub
lcall
out
fstps
mov
aad
xor
filds
inc
pop
and
and
mov
aaa
adc
mov
popf
dec
dec
xor
dec
mov
sbb
popf
adc
adc
fcmovne
fs
xchg
mov
inc
jge
mov
push
add
hlt
push
sbb
dec
push
es
loope
pop
add
je
inc
and
bound
jnp
pushf
jbe
mov
test
jae
dec
and
sub
test
jbe
sbb
pop
lods
pop
fimuls
mov
and
pop
xorl
out
and
icebp
sub
movsl
lret
ljmp
pop
fsts
pop
mov
inc
mov
mov
outsb
pop
jmp
and
into
jmp
mov
sub
jmp
aam
mov
imul
std
push
lahf
xchg
and
push
sbb
lret
dec
insl
adc
mov
mov
fnstsw
shlb
fisubl
aad
mov
jae
rorb
rcll
popf
fildl
sbb
aam
inc
push
in
ss
mov
hlt
into
push
add
and
mov
add
or
test
ret
xchg
lea
aam
mov
mov
je
pop
lods
mov
xchg
mov
push
idivb
or
and
fwait
adc
in
aad
pop
in
fcmovbe
mov
hlt
push
dec
push
cmp
stos
mov
or
ficomps
jb
add
sub
add
stos
cmp
sub
dec
gs
pop
gs
cld
mov
pop
sub
mov
jg
xchg
xor
leave
enter
je
cmpsb
xchg
dec
inc
lcall
incb
mov
mov
pop
jne
aad
in
or
mov
ja
xchg
dec
pop
xchg
jle
out
and
mov
ds
repnz
adc
out
adc
jmp
cltd
shlb
jns
sarl
and
gs
sub
mov
sub
lds
push
lods
mov
mov
icebp
mov
cmp
sbb
daa
inc
push
mov
sti
inc
mov
outsl
inc
inc
jb
daa
jns
clc
int
or
rorb
add
out
jbe
loope
cmp
and
and
push
mov
sarb
popf
push
popf
aam
or
mov
dec
fcoms
inc
push
mov
out
rep
pop
mov
loope
mov
dec
inc
jmp
popa
jo
xor
inc
es
and
adc
in
lret
cmpsb
adc
mov
xor
mov
lret
pushf
mov
jle
push
lcall
sbb
out
cmp
sbb
aam
fwait
mov
enter
cld
inc
push
outsl
mov
or
subl
jno
sarl
mov
lahf
outsb
loope
adc
xchg
add
sub
aas
push
mov
xchg
cltd
pop
xchg
dec
das
xlat
es
out
lahf
imul
xchg
mov
movsl
adc
dec
aaa
repz
xor
dec
shrl
add
rcll
sub
mov
jns
fldl
popf
pop
cmp
sti
sbb
mov
enter
mov
dec
out
ss
mov
loop
adc
adc
repz
and
pop
mov
mov
arpl
imul
dec
inc
fistl
popf
pop
add
pushf
imul
pop
clc
out
nop
frstor
add
stc
or
cmpsl
mov
es
xchg
scas
sub
dec
mov
mov
subb
je
pop
test
mov
es
cmpsl
pop
into
les
pop
and
enter
fimuls
jo
add
es
and
lods
adc
xchg
mov
shll
lds
or
cltd
mov
mov
rolb
mov
stos
repz
adc
sub
push
lea
jbe
xor
mov
sub
cmp
adc
cs
xor
jne
jmp
icebp
daa
mov
sub
lahf
in
and
mov
into
nop
enter
sbb
in
testb
jo
mov
gs
repz
xor
arpl
or
add
mov
call
and
lods
loope
inc
xor
inc
out
adc
xchg
xor
scas
std
cmpsb
push
jg
test
test
adc
addr16
movsb
lea
mov
add
mov
or
fwait
jg
scas
in
lock
fwait
cmp
into
cmp
mov
mov
bound
insb
into
dec
or
fucomp
in
mov
add
push
in
or
pop
mov
and
fwait
pop
inc
mov
movhps
push
shll
ja
xor
lds
add
jns
add
sub
int
xacquire
inc
and
cmp
in
mov
cmpsb
jmp
lcall
mov
ljmp
dec
sbb
xor
out
insb
mov
lods
inc
mov
cmp
dec
fnstcw
push
mov
mov
dec
mov
add
add
sbb
lret
movsl
es
addr16
add
aaa
mov
fs
cld
sti
inc
lods
imul
dec
nop
sbbb
mov
cs
lret
cmpsb
push
adc
repnz
nop
xlat
mov
outsl
std
mov
in
daa
repnz
adc
mov
push
sub
inc
add
ds
jge
mov
hlt
push
adc
dec
mov
inc
leave
aaa
mov
in
pusha
xchg
xor
int3
out
push
stc
cmp
movsb
xchg
add
inc
jge
repz
fwait
mov
cmp
negb
test
insb
sub
lret
add
jno
jb
add
add
dec
jge
dec
add
fwait
jmp
or
pushf
imul
call
movsl
adc
mov
popf
mov
aam
sub
pop
push
and
push
push
into
jns
pop
ja
dec
addb
dec
and
sbb
mov
dec
outsl
lahf
push
xor
cmp
movsl
pop
fsub
mov
jmp
cltd
adc
push
pop
sbb
ficoml
ds
sbb
push
push
in
sub
cmpsl
lods
out
pop
jno
push
jb
add
push
pop
aaa
lahf
fcomi
dec
push
jnp
jp
xor
fsubp
mov
je
outsb
inc
cltd
inc
movsb
stc
repnz
shlb
xchg
sahf
mov
les
and
outsb
push
or
es
sub
roll
clc
xchg
loope
push
mov
ljmp
call
sbb
insb
jp
fs
aas
cmpsb
jnp
adc
decb
sub
mov
scas
jmp
in
mov
cs
scas
movsb
lahf
xchg
cwtl
dec
pop
jecxz
push
fiadds
jne
cmpsb
out
xor
cmp
mov
cwtl
xchg
rcrl
mov
xor
mov
std
bound
and
pop
pop
shrb
and
xchg
push
xchg
pop
aas
popf
mov
shlb
mov
sbb
gs
jmp
inc
xchg
dec
shrl
lds
mov
xchg
les
xchg
aas
adc
dec
shll
std
mov
in
divl
and
jmp
jl
inc
sarb
out
adc
mov
mov
adc
adc
jmp
add
stc
bound
xchg
pop
ds
jnp
fstps
sbb
mov
loop
fwait
adc
sti
ret
mov
jae
test
iret
mov
outsb
inc
mov
jns
sub
cmpsl
dec
xchg
movsb
adc
jne
fidivs
lahf
lods
test
lahf
imul
int3
xchg
adcb
les
xor
push
mov
or
inc
inc
lahf
mov
in
push
in
jns
pop
sbb
icebp
insb
stos
cmpsb
enter
pop
nop
frstor
pushf
jmp
mov
jns
negb
cmp
in
mov
cmc
push
jne
sbb
xchg
inc
lods
jno
icebp
mov
or
in
mov
mov
mov
fcmovb
and
sbb
push
aas
pop
mov
xchg
cld
push
pop
add
dec
and
pop
mov
test
pop
push
mov
mov
scas
sti
cld
fldlg2
mov
ss
out
aam
lock
stc
fs
mov
add
jg
leave
push
leave
mov
in
mov
push
ja
adc
loope
lds
cld
loop
lea
rolb
dec
add
jecxz
add
pop
sub
xor
addl
xchg
mov
push
enter
je
and
fcoml
movsl
fiadds
nop
sub
mov
aad
loop
cmp
pop
xchg
sarb
jnp
pop
cmp
xor
fstps
in
cltd
lods
out
pop
orl
mov
and
mov
mov
mov
xor
and
dec
decl
cltd
mov
test
jge
out
iret
lret
enter
sbb
pop
xchg
in
pop
add
daa
add
and
shlb
cs
and
xor
jno
test
jl
add
xchg
adc
mov
or
pop
add
fs
adc
mov
xchg
mov
leave
inc
mov
sahf
add
xchg
and
enter
pop
je
cld
xor
into
ret
int3
and
lcall
mov
fldenv
bound
sbb
cmp
sub
pop
sub
cmp
xor
jns
lahf
aaa
and
lcall
and
pusha
adc
sbb
lret
dec
mov
aam
mov
aam
add
cltd
pop
faddl
push
xchg
jae
or
adc
cld
mov
cmpsb
cmpsl
je
das
pop
adc
push
mov
push
pop
mov
and
icebp
push
movsl
xchg
in
daa
or
pop
iret
push
add
out
xor
movsl
leave
push
icebp
in
sbb
push
mov
in
dec
enter
jb
cmp
mov
loop
pop
mov
push
jge
out
and
and
std
cmp
scas
sbb
push
sbb
push
and
or
test
xchg
dec
rclw
inc
fwait
hlt
filds
hlt
inc
sbb
gs
das
out
cmp
shlb
cltd
lcall
mov
cli
in
add
lock
pop
lret
ret
inc
sbb
xor
clc
loop
dec
mov
adc
insl
jno
mov
push
lds
ja
mov
sbb
mov
mov
mov
sti
cltd
ja
lock
mov
xor
incb
cwtl
or
lahf
and
jecxz
iret
stos
mov
xor
arpl
fcom
int
outsb
push
fnstenv
ret
pushf
cmp
cmpsb
sub
test
fldenv
push
xchg
jbe
mov
lods
sub
sahf
and
loope
jle
mov
dec
sbb
sbb
and
add
push
xlat
sub
dec
jo
and
repz
cli
mov
xchg
aad
iret
lock
aam
adc
dec
hlt
int
jmp
push
jno
pop
movsb
aam
adc
fwait
iret
push
leave
pop
mov
and
outsl
mov
mov
es
lret
pop
aaa
stc
inc
adc
jae
push
sbb
out
push
jbe
mov
mov
in
test
andb
and
ss
dec
stc
popa
out
jmp
fadds
sarl
mov
int3
mov
cmp
xchg
pop
mov
xchg
cld
inc
mov
dec
fcmovne
popf
mov
inc
into
xor
outsb
popf
fmuls
cltd
pop
movb
push
and
dec
ret
repz
mov
test
shr
mov
mov
and
mov
mov
or
xor
mov
mov
in
pushf
notb
jge
pop
orb
push
sti
jge
and
aam
and
sbb
mov
pop
imul
adc
popf
sbb
aas
mov
cli
pop
sub
fs
xchg
pop
rclb
add
sub
shrb
pop
jns
mov
test
lret
outsl
pop
das
icebp
call
cmp
xlat
fwait
jg
pop
push
leave
aam
push
cmpsl
mov
ss
hlt
jg
iret
ss
mov
mov
cltd
insb
in
add
and
leave
popf
jno
or
test
pop
dec
jb
pop
repnz
push
sub
shll
fstp
jb
cltd
xchg
std
sbb
jge
jle
sub
imul
cmpsb
dec
sub
test
mov
xor
and
cmp
sub
mov
fwait
addr16
or
push
dec
xchg
mov
cmp
mov
dec
xchg
xchg
shrb
cmpsb
popa
xchg
mov
add
sahf
repnz
in
xor
pop
jp
mov
cmp
cmpsb
fcmovnbe
adc
je
ljmp
cld
push
insb
cwtl
fldl
lret
lods
push
repz
in
cs
mov
jge
and
inc
rolb
add
vfrczsd
in
lods
clc
xorl
xor
cmpsl
sahf
push
push
or
out
outsb
push
inc
in
pop
push
mov
mov
mov
fldln2
inc
lahf
pop
sub
pop
mov
sub
ja
pop
nop
sbb
into
cli
ficomps
call
and
je
subl
jnp
shlb
pushf
jbe
dec
dec
movsl
in
cmpsb
jl
inc
mov
pop
cli
mov
pop
es
cmpsb
pop
inc
cmp
stos
test
pop
push
fstp
jb
mov
mov
adc
push
shrl
pop
mov
repnz
pusha
inc
xor
pop
hlt
pop
or
sub
cmpsl
out
mov
xor
lret
je
cs
popf
or
out
jmp
and
popa
mov
notb
fdivrs
in
stc
pop
mov
sub
imul
adc
mov
daa
jmp
shlb
lret
xchg
sbb
add
inc
je
xchg
fcompl
push
rorl
mov
loopne
pop
pop
add
push
cld
pop
fwait
jnp
jne
push
push
lock
mov
mov
test
xor
pop
jae
sbb
cmpsl
cltd
imul
imul
sbb
call
dec
mov
gs
dec
fiadds
mov
fwait
addl
adc
mov
xchg
fidivrl
int
popf
or
mov
inc
lds
add
pop
fldl
ja
adc
mov
icebp
cmc
cli
icebp
out
in
fwait
test
fsts
andb
sbb
negl
add
movsb
cmpsl
mov
sbb
in
sbb
and
adc
lcall
test
lret
mov
xor
push
and
or
and
stos
mov
sbb
in
inc
in
outsb
enter
adc
movsb
pop
nop
sbb
pop
mov
stc
test
inc
gs
fsubl
or
js
cmpsl
sarb
mov
xchg
lret
push
mov
imul
ss
aam
popa
xchg
and
mov
push
or
lret
enter
fwait
lret
xor
in
sbb
and
dec
lretw
repz
cwtl
out
pusha
pop
push
adc
fs
jl
icebp
test
fwait
mov
dec
in
push
cs
sub
mov
and
mov
mov
mov
sahf
ja
cmp
push
inc
fs
paddsw
aam
push
mov
mov
dec
add
inc
sbb
xor
mov
xchg
test
push
fnsave
icebp
xor
dec
mov
xchg
inc
pop
add
xor
es
hlt
xchg
aad
cmp
sbb
or
push
aaa
inc
test
sysret
and
and
mov
or
fidivs
xchg
jae
out
cmp
mov
je
mov
sbb
mov
out
mov
adc
inc
loop
js
fstpl
mov
cmp
fs
mov
insb
push
and
repz
jmp
cltd
jae
pop
fistpll
xor
mov
int
mov
insl
pop
lcall
mov
data16
lahf
cmp
push
sbb
jmp
fisubrs
push
mov
adc
lock
mov
popa
xor
icebp
sarb
jno
popf
repnz
jle
xor
or
inc
xchg
sub
mov
sahf
imul
mov
add
movsl
push
cmp
lcall
popf
xchg
or
lods
mov
loop
dec
mov
dec
inc
jmp
leave
and
mov
sbb
fwait
jmp
sti
sub
scas
or
vpunpcklqdq
mov
add
clc
jno
sti
sbb
pop
push
cli
mov
dec
xchg
cs
lret
fldl
mov
enter
aad
shl
push
les
and
test
xchg
xlat
pushf
imul
mov
jno
push
arpl
mov
and
ss
cmpsl
fs
loopne
imul
adc
jge
jne
xor
mov
and
roll
pop
dec
xchg
mov
dec
shll
dec
and
imul
push
aas
jns
out
inc
pop
mov
lock
cmpb
mov
pop
mov
push
cmp
movsb
or
or
stc
cmpsb
adc
push
es
xlat
enter
cs
and
inc
sbb
and
data16
jmp
add
in
dec
push
mov
push
add
mov
test
jns
adc
std
and
and
bound
xchg
jae
inc
or
adc
neg
push
add
dec
sahf
jmp
xchg
add
stos
es
sar
sbb
les
insl
push
jmp
out
cmp
fistl
sti
jg
add
mov
or
insl
inc
sahf
or
xchg
and
aas
lods
divb
dec
pop
fs
mov
test
sbb
addr16
push
add
sbb
push
xchg
push
cmp
lods
pop
mov
les
pop
repnz
or
xchg
jmp
pop
sbb
cmpsb
outsb
cld
stos
rcrl
push
mov
sbb
sbb
cltd
cs
insb
sbb
cmp
fisubrl
fnstsw
or
clc
and
mov
fst
cltd
sti
push
pushf
xor
jl
les
mov
xor
mov
xchg
aam
leave
xchg
jae
sub
mov
add
fmull
and
pop
call
add
or
sub
jns
pop
push
mov
sbb
shr
adc
cmpsb
mov
cmpsl
sub
out
dec
or
mov
add
push
mov
cmc
push
and
jmp
imul
sub
and
adc
in
andb
shll
fwait
or
add
stos
ds
in
lahf
jmp
dec
ja
roll
mov
jno
and
sub
addr16
mov
fisubl
mov
jle
and
pop
divb
orl
sbb
adc
pop
mov
scas
fs
in
or
mov
stc
addr16
sbb
cmp
or
add
inc
xchg
and
or
or
stc
and
shlb
je
lds
out
test
dec
fisttps
or
push
and
mov
hlt
hlt
sub
push
pop
mov
daa
mov
add
sti
dec
push
pop
add
loopne
jmp
jp
lds
sub
sub
sbb
pop
pop
sbb
mov
mov
repnz
sbb
cmpsl
jecxz
mov
jg
fs
xor
bound
mov
rorl
sti
sbb
in
xchg
ds
pusha
cmp
mov
mov
pop
fsqrt
lahf
cltd
mov
pop
sub
stos
jne
mov
stos
call
cmpsb
jns
sti
bound
adc
inc
fisubrl
pushl
lcall
movsl
shrb
dec
les
decl
mov
repz
inc
mov
lock
or
push
pop
xchg
icebp
xchg
mov
cmpb
addr16
xchg
xchg
jge
movsb
cwtl
add
and
adc
leave
negl
pop
popl
mov
jp
in
out
pop
repnz
xorl
fwait
inc
imul
es
sti
jno
je
inc
push
mov
mov
mov
xchg
js
leave
sbb
cmpsb
dec
mov
sbb
cmpsb
pop
pop
inc
mov
pop
jae
pop
or
rcl
mov
dec
mov
dec
movsb
or
popf
cs
mov
mov
xchg
adc
mov
pop
inc
lods
and
sbb
xor
ljmp
lcall
cmp
or
imul
sub
inc
jbe
cmp
daa
mov
push
push
or
jmp
jg
bound
pop
xor
sahf
mov
xor
rol
mov
add
xor
inc
out
out
mov
pop
sarl
ljmp
lcall
int
sbb
push
xor
jg
ljmp
jp,pn
out
lret
pop
cmp
mov
sbb
imul
cmpsl
ljmp
push
fnsave
adc
xor
pop
and
adc
filds
insl
cltd
mov
addl
rclb
and
mov
popf
out
cmpsb
fdivs
jle
loopne
in
inc
mov
leave
mov
popa
fstl
jmp
out
xchg
js
popa
clc
xor
ja
icebp
sub
jmp
movsb
and
stc
sub
testb
pop
jae
xor
sbbl
mov
mov
mov
inc
fcompl
aaa
fdivrs
lock
or
pop
in
adc
int
or
std
mov
jo
push
add
test
xchg
and
xchg
test
dec
xlat
add
shl
jno
xor
pushf
jnp
jae
roll
push
in
add
out
jne
in
xor
or
js
sub
push
jp
ret
mov
jle
hlt
jne
stos
sbb
xchg
mov
jmp
sub
movsl
ficoms
sbb
xchg
sub
lahf
push
adc
or
dec
xchg
in
sub
cmp
pop
mov
bound
in
add
mov
pop
push
aam
xchg
dec
in
inc
idivb
cmpsl
lds
repnz
fwait
sahf
mov
mov
mov
pop
cmp
add
call
pop
je
jge
push
imul
leave
ljmp
lds
clc
ret
ret
sti
call
fistl
clc
dec
fistpll
or
or
out
jns
jp
mov
stos
insb
cmp
mov
mov
or
inc
bound
xor
stc
sub
mov
mov
je
cltd
xchg
jge
xor
gs
ret
sub
mov
call
or
mov
je
cmpsl
test
jge
inc
mov
xchg
nop
movsb
xor
outsb
loop
popa
push
scas
test
clc
insl
loop
in
test
mov
cs
test
cmpsl
xchg
inc
dec
push
sub
cmp
ficompl
enter
jge
jmp
sahf
mov
les
cmp
or
imul
add
inc
andb
adc
lcall
sbb
aam
outsb
loop
mov
mov
repnz
sti
mov
jmp
gs
leave
scas
xchg
int
mov
add
adc
sbb
andl
pop
dec
fdivl
xor
in
sbb
shl
popa
add
xchg
shl
scas
daa
pop
cmp
flds
jne
adc
mov
xor
aad
dec
call
addb
jno
mov
cli
mov
lret
in
lret
push
dec
mov
dec
out
int3
dec
stc
pop
cmc
and
hlt
in
pop
les
imul
dec
inc
mov
push
jne
jmp
jnp
mov
aad
int
cltd
pop
lods
dec
loopne
xchg
loop
or
jle
mov
icebp
mov
push
test
adc
outsl
popf
mov
cwtl
hlt
call
imul
add
add
add
pop
rcrl
ljmp
mov
adc
xchg
out
push
fwait
fwait
lods
shrb
aad
jg
cs
xlat
sub
call
lcall
in
mov
iret
and
xlat
movsl
shlb
mov
mov
cwtl
pop
push
decb
lds
inc
jb
fisubrs
lahf
or
shll
mov
test
pop
jo
inc
inc
stc
fs
cmp
lds
lcall
lods
mov
jo
fld
dec
test
cltd
add
mov
ret
insl
pushf
popf
pop
stc
jnp
push
icebp
gs
loopne
xchg
xor
loope
std
lock
jae
dec
icebp
xor
fldt
popf
sbb
mov
aam
cmp
push
add
nop
fnstcw
or
rcll
testb
shll
mov
outsb
cmpsl
jge,pt
cmp
mov
or
adc
das
mov
in
push
sti
sub
mov
stos
and
mov
fmul
xor
fistps
inc
loope
pop
dec
and
push
jle
mov
into
clc
push
add
mov
add
rol
lcall
mov
cmp
stos
shrb
mov
xor
push
in
fs
fdivr
test
jns
inc
jae
adc
xchg
stos
fnsave
jmp
cltd
xor
xchg
cmpsb
inc
mov
push
cld
leave
ret
mov
jl
or
lds
hlt
sub
push
stc
lods
jnp
leave
mov
outsb
cs
mov
rorl
mov
xchg
xor
adc
fcmovnb
and
or
mov
popf
data16
test
movsb
and
jmp
icebp
dec
out
xchg
ja
popa
sbb
lock
lods
cltd
fcomi
xchg
and
or
insl
test
imul
mov
jae
mov
push
outsl
or
and
mov
add
pop
push
std
pop
jmp
mov
lret
mov
xchg
clc
dec
sbb
lods
push
jg
pop
jmp
mov
and
jno
push
les
mov
add
inc
jae
mov
lahf
dec
cmp
into
xchg
adc
stos
pop
jg
aaa
jno
lods
stc
add
popa
cld
aam
lcall
cmpsl
sub
jecxz
nop
adc
mov
mov
and
idivb
mov
divl
repz
push
xor
mov
mov
sub
aam
or
xor
push
push
xchg
jmp
in
or
sbb
test
mov
pop
and
sbb
mulb
dec
mov
mov
add
movsl
cld
in
fcomi
sub
cmp
jae
jae
lea
xchg
or
xchg
jmp
test
fwait
dec
xchg
mov
aad
cmp
data16
sbb
adc
rclb
pop
dec
xchg
fdivrl
fidivs
push
leave
xchg
xchg
push
out
dec
lret
mov
xor
push
lret
sahf
pop
xchg
into
sahf
arpl
loop
mov
repz
cwtl
psubsw
stos
inc
inc
jl
mov
gs
rcrb
push
stos
sub
js
sbb
sub
push
aam
andb
jg
aad
and
xchg
mov
jns
mov
test
out
adc
lods
enter
test
jbe
ds
out
mov
pop
mov
lahf
lods
push
aad
inc
push
bound
jno
cmp
dec
or
jb
repnz
lahf
sarb
aam
jmp
xchg
xor
pop
or
rcrb
cmpsb
out
lds
aad
jle
dec
mov
lahf
imul
test
jne
adc
fistl
addb
mov
fisttps
push
leave
rorl
shl
pop
sbb
push
mov
adc
mov
lcall
fidivrl
mov
inc
lds
idivb
push
xchg
inc
mov
mov
test
shrl
sbb
jecxz
sbb
xchg
adc
cmc
mov
std
fs
mov
push
push
inc
and
cmpsb
mov
pushl
cltd
mov
push
data16
pop
or
repnz
leave
xor
cmp
jb
fdiv
out
xlat
dec
dec
movsb
cmp
mov
fcomp
ds
popf
or
push
lods
mov
pop
mov
shrl
pop
jnp
jno
sub
mov
loope
mov
and
push
pop
jb
mov
pop
add
adc
bound
dec
xor
xchg
push
push
imul
mov
fisttpll
test
ljmp
mov
loopne
test
xchg
or
clc
xchg
fwait
stos
pushf
push
xchg
xor
lds
jo
mov
cwtl
je
loop
sti
sub
pop
mov
dec
mov
push
mov
xchg
fistpl
sub
mov
sahf
sti
and
jno
lcall
incb
aaa
push
iret
test
lock
adc
ds
pop
xchg
adc
xor
in
and
lahf
xchg
xchg
cs
shrl
loop
pop
aaa
bound
mov
dec
cmpsl
mov
or
lcall
push
mov
mov
lods
ss
xor
dec
mov
cmp
xor
fdivl
mov
pop
xchg
xchg
arpl
add
iret
repz
mov
jmp
mov
inc
sti
in
mov
ret
xchg
and
xor
mull
imul
inc
test
fiadds
xor
adc
mov
mov
sub
ljmp
add
into
xchg
xchg
xchg
in
sub
cmp
mov
out
mov
iret
fwait
daa
call
rcll
ljmp
sbb
xor
xlat
std
push
and
fdivrl
mov
or
pop
int3
lock
sbb
jmp
sbb
mov
ljmp
addr16
sub
and
or
cmpsl
cmp
in
sbb
add
in
insl
adc
movsl
fildl
push
js
xor
mov
lcall
stos
push
pop
mov
out
mov
mov
les
outsl
add
test
out
mov
out
pop
cli
push
loope
mov
pusha
shl
shll
push
mov
cltd
fmuls
stos
sti
rcll
fdivs
repz
in
aam
push
sub
cwtl
in
std
fwait
mov
imul
xor
cmp
xchg
push
aaa
rcr
rolb
mov
icebp
in
mov
psubd
in
xchg
daa
lods
cmp
dec
mov
pusha
fwait
icebp
les
push
add
test
xor
ss
pop
cmp
sahf
jmp
mov
fdivs
ss
pushf
das
and
or
cwtl
sarb
mov
dec
adc
pop
inc
xchg
dec
or
pop
push
push
push
mov
imul
ljmp
scas
and
cmp
push
jmp
add
movsb
add
lcall
inc
or
jo
scas
mov
ds
test
mov
cmp
xor
inc
daa
and
arpl
lea
stos
hlt
push
lods
rcrb
adc
jl
push
test
inc
stc
lea
mov
mov
shll
mov
mov
push
xlat
xchg
sti
aaa
inc
out
add
lods
in
fsubrp
fisubrl
int
sub
push
mov
subb
test
cmc
push
sub
idiv
mov
adc
pop
stos
fcmovnb
push
adc
xchg
add
cmpsl
xchg
repnz
bound
subb
mov
mov
push
in
ror
loope
out
rcll
jl
mov
push
cs
int
hlt
test
aaa
les
int
mov
fistl
hlt
lcall
repz
sbb
xchg
loop
stos
clc
lret
sub
push
repnz
and
xor
movsl
in
lods
pop
arpl
mov
mov
sub
repnz
cmpsl
repz
lcall
lods
sub
loopne
jmp
jmp
pop
sub
repz
mov
fsubrp
dec
push
fucomp
mov
test
cltd
push
pop
mov
sub
int
pop
lahf
movb
lock
sub
out
mov
mov
in
pop
cmp
cli
dec
and
xor
sarb
lcall
test
mov
mov
mov
mov
dec
in
mov
jb
pushf
mov
stos
mov
loop
fs
pusha
scas
push
xchg
shrl
loope
mov
inc
pop
xchg
and
inc
ljmp
xchg
enter
and
add
movsl
mov
ja
rclb
leave
out
jnp
inc
inc
mov
mov
xchg
sbb
mov
mov
jnp
and
xor
mov
pushf
jmp
faddl
call
push
jecxz
add
insl
gs
and
sub
pusha
rorb
push
or
mov
adc
cmc
xchg
mov
icebp
loope
inc
jae
imul
mov
or
lods
push
scas
jno
repnz
mov
jmp
dec
mov
iret
test
daa
shr
and
mov
pop
mov
mov
xchg
add
pop
lods
mov
mov
mov
inc
scas
aas
ljmp
pusha
add
loopne
jmp
add
ds
mov
xor
mov
test
out
sbb
icebp
or
pop
or
in
rclb
pushf
jnp
in
mov
loopne
ljmp
sub
andps
dec
xor
adc
inc
pop
addr16
dec
aaa
pop
inc
js
cmp
out
and
push
in
imul
lahf
sahf
outsl
adcb
jp
inc
jno
mov
jecxz
test
in
js
in
push
jmp
sub
movsl
cmp
test
cmc
mov
xor
fadd
ret
ja
mov
mov
adc
sbb
int3
dec
add
cltd
cmp
dec
ja
sub
mov
cld
sbb
loopne
inc
data16
movsl
sti
imul
cmc
pop
sbb
cwtl
push
mov
dec
fwait
push
add
adc
push
pushf
dec
cs
out
ret
shlb
stos
mov
out
gs
dec
mov
out
loop
sahf
hlt
mov
mov
mov
xor
xor
xor
dec
sbb
movl
mov
inc
mov
loopne
shr
jbe
fldenv
fistpl
stos
mov
push
and
in
loop
mov
leave
mov
into
in
xor
mov
jae
lods
add
aad
sbb
dec
adc
and
aam
cltd
in
enter
jo
stos
lcall
pop
movsl
push
stos
cmpsb
movsl
mov
inc
sbb
popa
pop
jo
mov
out
sahf
jne
std
jb
popa
sub
xor
xchg
das
cld
mov
stc
mov
lcall
ret
loopne
mov
mov
pop
xchg
cmp
or
add
xor
mov
and
jne
lock
jg
sahf
and
mov
pop
cld
xor
call
sub
dec
rol
pop
aas
xchg
xchg
mov
add
xor
lahf
dec
xor
mov
test
pop
mov
jecxz
nop
sub
mov
movsl
dec
mov
mov
cmp
mov
stc
cli
int
and
pushf
adc
out
push
dec
inc
sbb
cmpsl
mov
popf
cltd
xchg
sbb
push
adc
add
lcall
popf
fadd
push
int3
or
mov
cmpsl
in
jmp
ss
xchg
in
shlb
mov
fsubl
out
lahf
dec
add
or
lds
sbb
es
sbb
rorb
mov
xor
dec
xchg
adc
test
out
or
outsb
dec
test
jl
mov
jbe
fdivrl
lcall
push
sub
add
sbb
loop
mov
cltd
mov
rcrl
dec
notb
pop
pop
xor
out
jle
fsub
xchg
popf
filds
mov
lret
cmp
and
fadds
sbb
test
mov
lahf
test
jmp
movsl
lahf
and
sbb
sub
aaa
out
push
inc
in
sub
jae
das
and
push
jno
into
pushf
rcl
mulb
ljmp
xor
fnsave
fdivrs
stos
xor
roll
and
jp
mov
dec
jg
orb
sbb
jb
xor
loope
mov
insl
rcrl
pusha
imul
push
pop
out
pop
ret
icebp
or
add
inc
enter
movsl
jmp
xchg
ljmp
push
je
pop
push
out
ds
jmp
and
out
in
loopne
scas
sub
popa
mov
xor
je
jbe
xchg
pop
push
lahf
pop
imul
mov
push
shrb
test
or
lock
xlat
mov
in
sbb
sbb
jno
xor
sub
and
cmpsl
push
aaa
enter
add
sub
lahf
push
sub
push
mov
sbb
into
xchg
dec
push
jbe
cli
rorb
enter
negb
xchg
outsl
and
mov
xlat
cmpsl
add
test
sbb
push
push
mov
cmp
push
jmp
push
sbb
mov
sub
cmp
or
stos
repz
xchg
dec
ror
mov
pop
and
xchg
into
jbe
cmp
dec
int
out
jno
mov
outsb
in
mov
mov
adc
in
pop
int
stos
and
inc
loop
mov
clc
cli
lds
jae
mov
rclb
add
jmp
dec
inc
out
mov
cmpsl
pop
rclb
stos
mov
mov
scas
mov
xor
sub
add
mov
fisubs
pop
mov
sub
adc
push
inc
fidivs
nop
jbe
inc
and
push
mov
shlb
mov
jp
mov
in
inc
pusha
mov
in
mov
stos
rcrb
push
sub
xchg
cmp
mov
pop
stc
jno
adc
pushf
ret
daa
push
or
sbb
mov
imul
or
mov
xlat
inc
ja
xor
jle
adc
pushf
pop
jmp
jae
jmp
mov
shrl
insb
and
pop
xor
movsb
test
and
or
inc
xchg
mov
cmpsb
sbb
adc
rcrl
cmpsl
pop
repz
sar
cmp
ja
dec
xchg
lock
and
stos
movsb
pop
xor
xchg
or
mov
push
leave
dec
mov
lods
jns
mov
or
jae
adc
mov
jne
xchg
mov
out
mov
jns
mov
sub
and
lret
push
arpl
jbe
or
add
mov
push
ds
idivb
icebp
and
daa
ss
and
rcrb
in
fistps
inc
mov
jnp
xor
push
movsl
cmc
mov
or
pop
mov
test
mov
inc
push
movb
jmp
push
dec
lds
lcall
mov
or
out
sbb
mov
and
adc
cmpsl
imul
xor
adc
and
sbbb
data16
or
dec
cmc
dec
shll
movsl
or
out
call
cltd
inc
pop
push
dec
outsl
xchg
push
shrb
inc
jne
lea
loopne
in
cmp
jmp
in
fucomip
imul
and
sub
or
mov
cwtl
dec
xlat
add
stos
popa
repz
and
scas
mov
cmp
in
jnp
subl
mov
in
sbb
movsb
sti
jge
movsb
mov
movsb
mov
repnz
pop
add
jmp
or
in
fsubrp
enter
dec
jns
inc
out
add
and
lock
sbb
xchg
ss
lret
sub
and
jmp
xor
into
inc
repz
les
sbb
lcall
les
pop
push
mov
mov
testb
cmpl
out
xchg
je
jns
test
in
in
and
jmp
fs
dec
mov
int3
jl
sub
in
jp
dec
mov
xor
sub
sub
test
inc
imul
in
gs
jge
leave
aaa
xor
jo
mov
stos
push
call
and
add
in
leave
shl
mov
cmp
mov
adc
lahf
fdivr
test
std
push
ret
pop
jns
test
cmp
nop
jne
cmovbe
xor
fildll
pop
and
mov
cmp
mov
movb
scas
pop
pop
mov
push
mov
cmc
xor
sub
lea
pop
xchg
mov
mov
mov
daa
lcall
pop
mov
fwait
ljmp
repz
cli
fs
cwtl
sbb
jae
inc
pop
adc
add
dec
sub
iret
mov
insl
cmp
cmp
pop
call
leave
pusha
mov
jb
mov
lds
mov
mov
sub
adc
cs
cmp
ret
cmpsb
sub
jge
insb
add
mov
bound
mov
enter
sub
leave
lds
cmpsl
mov
mov
xchg
and
or
inc
push
cmc
jbe
cmp
imul
cmpl
in
dec
fbld
sbb
jb
fnstcw
sub
movsb
or
fsubrs
in
in
into
dec
pop
inc
pop
in
inc
and
shlb
lods
scas
call
xchg
mov
mov
arpl
movsb
xchg
icebp
or
mov
xor
dec
outsl
outsb
adc
push
push
gs
or
mov
cltd
add
lret
cmp
sub
lods
push
loope
aam
idiv
bound
lcall
cmp
push
sbb
insb
daa
hlt
cmp
scas
daa
idivl
fnstsw
sahf
add
lods
jb
aam
in
lret
mov
xor
mov
outsl
sub
fcmovnu
ljmp
imul
aam
fidivs
cld
sbb
jmp
mov
cmp
mov
sub
adc
dec
scas
jo
jmp
jmp
mov
fldt
mov
jo
inc
pop
sbb
into
dec
loope
imull
frstor
sbb
sbb
lret
mov
mov
cld
pop
sub
mov
repnz
out
pushw
test
repz
iret
fwait
stos
sbb
call
popa
push
inc
pop
imul
fwait
pushf
movsb
xor
dec
add
jns
test
shlb
and
in
xchg
cmp
pop
adc
adc
adc
mov
xchg
jmp
inc
ret
imul
mov
pop
int3
dec
call
mov
cmp
out
scas
pop
mov
push
and
movl
nop
mov
mov
mov
loopne
test
sbb
in
jns
xor
sbb
loop
jnp
xchg
fildl
cld
sub
mov
pop
cmc
fstps
dec
adc
sub
arpl
jne
je
jae
push
test
lret
sbb
in
and
stc
sti
inc
fimull
int
dec
int
aas
fcmovne
cli
or
pop
xor
in
outsl
inc
xor
xchg
cmp
nop
and
mov
cmp
push
mov
daa
cmpsl
mov
movsb
jle
stc
std
clc
mov
add
sbb
and
clc
dec
mov
rcl
mov
mov
jl
shlb
cmpsb
jecxz
aaa
imul
dec
rolb
and
mov
or
mov
insb
adc
test
js
push
mov
push
add
popa
data16
adcl
cld
push
add
fisubl
pop
ret
lea
cmc
pop
lahf
xor
pop
dec
repnz
sahf
mov
in
arpl
stos
dec
cmpb
shrl
mov
aad
icebp
sub
mov
insl
fistps
sbb
mov
or
push
adc
xor
jns
inc
ljmp
jnp
and
sub
dec
sbb
lods
dec
int3
jge
push
leave
insl
and
sahf
mov
or
aas
fwait
fwait
jcxz
sbb
test
mov
cld
add
aaa
adcb
jno
les
int3
sbb
hlt
and
adc
pop
and
mov
inc
sbbb
test
sub
and
inc
pop
sbb
mov
fnstcw
out
fwait
andl
fdivl
lds
bnd
sbb
incb
bound
pusha
fistpl
mov
and
insb
xor
iret
dec
mov
stos
add
jg
pushf
sbb
xchg
xchg
mov
xchg
test
lock
ja
js
clc
rcl
fstpt
mov
adc
mov
loopne
push
jns
popa
imulb
jmp
inc
sbbb
js
hlt
add
xorb
and
test
lcall
xchg
push
aad
cltd
mov
pushf
lret
push
pop
lods
push
inc
fildll
ss
sub
or
in
fimull
in
xchg
inc
fiaddl
das
std
xchg
and
sar
dec
mov
mov
insl
enter
sar
add
loopne
pop
data16
and
jmp
push
loop
jno
cmpsb
icebp
xchg
out
pop
sub
pop
imul
add
and
xor
jl
pop
pop
sbb
aas
mov
xchg
xlat
pop
jmp
pop
insb
adc
or
add
nop
pushf
jecxz
mov
add
lds
inc
nopl
sahf
cmp
xchg
fdivrl
sub
sti
outsl
xor
lcall
aam
out
mov
stos
cmp
sbbl
call
xchg
aaa
outsb
hlt
dec
jb
out
sbb
pop
scas
adc
enter
mov
je
movsb
mov
inc
addr16
inc
insb
add
test
popf
or
cwtl
mov
lahf
pop
add
pusha
out
or
cmp
cwtl
scas
add
and
mov
cltd
into
negl
lret
jns
rcrl
mov
sti
inc
ds
add
sbb
or
movsl
mov
imul
mov
pop
or
add
add
add
lock
dec
jae
addr16
shl
inc
jge
fcmovu
jo
adcb
mov
jmp
cmp
cltd
sbb
outsl
push
or
pop
idivl
mov
inc
jge
xor
dec
fmulp
xchg
mov
das
or
imul
outsl
xorb
movsl
dec
xchg
repnz
adc
pushf
mov
imul
xchg
lock
push
or
insl
jg
incl
adc
leave
lahf
or
cmp
test
stos
jge
daa
adc
es
or
out
addl
sbb
sub
loope
out
bound
fisubs
sar
sbb
fxch
out
xlat
pop
dec
lret
ljmp
dec
push
xchg
and
int
aas
mov
pop
jne
pop
icebp
and
dec
mov
dec
sbb
dec
jle
mov
dec
cli
cmp
push
sti
addr16
or
pop
arpl
xor
aam
enter
jg
jmp
and
jns
mov
aad
out
out
out
push
xor
sub
rcrl
dec
scas
mov
mov
jg
xor
sub
ret
mov
test
jmp
xor
jno
fst
inc
aas
test
pushf
xor
in
cmc
lds
mov
ds
nop
pop
dec
jmp
adc
leave
pop
push
daa
xchg
add
pop
lds
dec
in
ret
push
call
and
mul
loop
lcall
or
dec
js
out
sbb
loope
inc
rorw
daa
dec
sub
jns
inc
add
push
stc
cmc
mov
int3
and
add
loopne
bnd
shlb
fdivrs
out
out
fisttps
and
hlt
inc
inc
lret
and
fsubl
call
jge
mov
mov
and
sbb
or
in
sbbb
jecxz
ljmp
jo
imul
mov
dec
xor
ljmpw
add
add
icebp
mov
sti
add
inc
mov
hlt
adc
add
push
sub
imulb
scas
fwait
mov
or
cmp
jns
or
int3
icebp
mov
fiadds
and
mov
mov
mov
cmpsl
hlt
insb
ljmp
mov
xchg
xchg
aas
push
in
shlb
add
lds
pop
leave
push
out
and
fcmovnbe
adc
pushf
les
rcl
push
movsl
rorb
js
cmp
pop
rcrb
push
jle
fdivrs
jle
push
ficompl
inc
inc
push
and
fsubrs
xchg
fwait
or
mov
and
sbb
adcl
dec
out
and
fcompl
sbb
lock
fnstsw
inc
xor
stos
out
xchg
test
xor
sub
in
xlat
mov
or
stos
cs
out
out
jns
sub
cmp
call
push
inc
lock
in
xor
cltd
adc
test
push
mov
lock
xor
sarl
je
test
xor
xor
xor
xchg
fsubr
mov
push
std
cltd
pop
fisttpll
pop
in
pop
xchg
add
es
gs
dec
pop
leave
add
sbb
mov
mov
inc
aam
test
xor
cmp
and
sub
xor
out
jns
inc
and
mov
pop
or
stos
push
push
mov
out
cmpsb
xor
mov
enter
jge
insb
out
add
jp
jp
dec
add
xor
jg
inc
ss
ljmp
mov
fildl
xchg
sbb
std
xor
movsl
cmp
inc
fadds
ja
sar
mov
mov
jmp
mov
les
cmp
adc
or
or
pop
dec
les
jae
push
or
lahf
sub
push
cmpsb
push
stc
jle
out
pop
je
jle
iret
jl
xchg
sar
ficoml
into
push
sbb
push
cmpsl
and
lret
lret
aaa
sub
dec
cmp
ret
ljmp
in
mov
inc
mov
pusha
jge
mov
out
std
sub
cmc
mov
jne
jge
xlat
fistpl
cmc
push
ss
mov
mov
test
lds
xchg
sub
sub
in
or
scas
mov
mov
and
mov
aas
sub
movsb
jae
cmpb
xchg
sarl
adc
xchg
cld
and
stos
cmp
mov
loopne
inc
mov
mov
mov
scas
adc
lret
cmpsl
jnp
lods
mov
rcll
imul
mov
inc
inc
mov
mov
fldl
rdpmc
mov
fwait
sti
and
push
sbb
push
ret
sub
add
jb
push
adcb
xor
push
in
sbb
cmp
aad
push
stc
push
mov
xor
mov
sahf
push
jmp
mov
call
sbb
gs
xchg
mov
and
add
fsubrl
lcall
repz
sub
jns
shlb
mov
loope
lahf
or
cmp
hlt
pop
mov
testl
enter
cmpsl
repz
and
in
mov
dec
push
mov
push
jp
lods
and
push
cmpb
divb
lds
jg
ljmp
add
push
xor
in
jnp
jl
andl
xlat
sbb
or
inc
leave
push
adcl
xor
mov
movsl
dec
ret
push
addl
lret
mov
mov
jge
lock
sub
mov
out
out
dec
cli
inc
sub
push
repz
xchg
inc
lods
dec
loopne
cmpsl
add
out
pop
mov
fs
clc
mov
pop
pop
cmpsl
dec
fnstenv
cltd
mov
js
mov
sbb
or
in
fwait
cmp
sub
adc
js
cmpsb
arpl
and
idivl
push
cmpsl
pushf
sub
dec
adc
adc
jl
mov
les
daa
add
cmp
cltd
sbb
add
mov
rol
cmpsb
lcall
pop
movsb
rclb
incb
loopne
imul
and
and
xchg
mov
jo
call
jnp
push
call
mov
sub
xchg
lret
xlat
push
jl
test
popa
mov
sbb
scas
lret
stos
push
clc
push
inc
jb
xchg
dec
imul
or
sub
movsl
mov
mov
aaa
jbe
loope
call
out
pop
dec
xchg
or
pop
adcl
jp
jbe
xor
enter
loope
push
and
mov
xchg
les
push
or
hlt
leave
inc
jne
divl
lea
mov
mov
fisubrs
lret
repz
std
pop
popf
sbb
test
hlt
or
dec
std
xchg
dec
cmc
push
cld
dec
mov
insl
or
iret
pushf
inc
adc
xchg
imul
inc
mov
sti
jmp
jle
sbb
or
mov
mov
add
mov
sbb
push
pop
or
repnz
or
aaa
push
mov
orl
imul
bound
cmp
in
scas
outsl
cmp
push
ljmp
pop
or
xchg
lock
lods
jmp
sbb
dec
pop
sbb
mov
and
adc
jp
lret
lret
lds
xor
inc
in
mov
mov
sar
add
sub
out
xor
cmp
mov
stos
xlat
cld
mov
xor
and
add
ret
push
jmp
leave
outsl
mov
push
push
xchg
aas
push
jnp
mov
push
ret
cmc
mov
jne
test
pop
sub
test
fsubl
mov
movsb
sbb
enter
mov
jnp
mov
adc
icebp
sub
xchg
mov
js
mov
cmc
push
fidivl
jmp
sbb
cmc
add
cmp
mov
leave
jmp
dec
mov
jle
in
adc
inc
sbb
inc
mov
mov
pop
out
adc
sti
mov
in
mov
mov
mov
pop
mov
mov
loop
stos
cmp
test
xor
lret
loopne
mov
pop
es
pushf
inc
fdivrs
test
insl
xor
pushf
mov
movsl
das
adc
in
movsl
dec
das
mov
in
add
mov
fwait
in
jne
mov
in
icebp
and
push
mov
mov
rcrb
das
add
add
or
cmp
out
int3
call
cmp
test
xlat
xchg
xlat
mov
pop
mov
adc
xchg
aad
cltd
testl
cmpsb
jne
fsubs
stos
lock
fildll
mov
pop
rcr
push
xor
dec
bound
in
jbe
mov
push
fwait
int3
jl
leave
mov
add
inc
xchg
aad
mov
adc
push
add
and
jne
add
les
jge
jae
sbb
ret
mov
and
pushf
into
testl
in
cmpsl
adc
cmp
pop
push
mov
in
dec
ret
mov
sti
push
inc
jge
sbb
gs
divb
cmp
sbb
push
call
and
mov
sbb
sti
out
call
sbb
out
fcmovne
lahf
movsb
sbb
jae
stc
ss
into
xchg
mov
test
add
push
insb
pop
lods
push
xor
jne
in
jns
test
inc
mov
jge
xlat
movsl
repz
inc
dec
filds
pop
mov
mov
add
cmpsl
int3
sbb
dec
fidivl
sahf
cmpl
cmp
addb
loopne
in
dec
cmp
iret
cmpsl
mov
rorl
push
cltd
loop
add
cli
in
pop
or
movsl
adc
shll
repz
inc
pop
or
out
mov
push
adc
pop
mov
mov
sar
cmp
loopne
ss
fwait
cmp
js
push
pop
pop
dec
xchg
mov
mov
and
out
jmp
int3
mov
stc
mov
jo
adc
push
in
fisubs
daa
mov
daa
aad
dec
push
fldcw
fwait
or
jno
dec
add
jmp
rep
mov
in
aas
popf
adc
jae
jnp
dec
or
mov
imul
adc
cmp
scas
loop
fmull
push
xlat
dec
inc
fsts
outsb
shlb
xor
insl
nop
in
aam
daa
jmp
pop
cmc
insb
jo
fnsave
shlb
xor
leave
push
jg
mov
mov
mov
in
dec
out
inc
inc
cmp
or
pop
rcrl
int
mov
fucomp
or
sbb
adc
pop
mov
rorb
jne
sub
ljmp
insl
cmp
movsl
adc
pop
mov
jb
test
dec
sbb
imul
cmpsb
dec
push
fwait
mov
push
and
mov
push
add
or
jno
imul
in
pop
add
sub
stos
mulb
cmpsb
cltd
pop
sub
mov
adc
cmp
xchg
fsts
and
test
dec
fcomps
and
add
cli
mov
jbe
mov
jne
adc
lock
sbb
xor
ret
into
push
mov
cmp
test
insb
mov
dec
mov
nop
adc
mov
imul
je
aad
lret
add
sarl
push
push
lcall
cmp
add
add
stos
mov
jl
jb
repz
lret
mov
sub
mov
dec
ljmp
pop
in
ja
les
jp
imul
dec
setge
xchg
fiadds
in
pop
jmp
and
mov
rcrb
inc
in
fwait
jbe
gs
clc
ljmp
mov
adc
cmp
mov
aas
jo
mov
mov
mov
cmp
bound
add
negb
mov
dec
push
mov
push
adc
enter
cmp
pushf
mov
lret
sub
lock
imul
mov
fidivs
pop
in
mov
aas
loop
repz
sub
gs
xchg
xchg
sbb
jns
aam
insb
fwait
add
iret
inc
inc
addr16
fcomi
fcmovne
ds
cli
movsb
mov
fisttpll
into
gs
stos
add
test
mov
cmp
imul
xchg
mov
repz
push
ss
jo
mov
xlat
aad
sub
iret
fld1
aam
jmp
push
sbb
notl
imulb
cmp
jo
and
pop
movsl
sti
xor
movsb
push
dec
js
lret
xchg
out
nop
adc
outsb
andl
cmp
lcall
push
in
adc
imul
dec
jmp
add
orb
mov
jnp
in
ficoms
sbb
mov
inc
cwtl
icebp
adc
jmp
in
mov
fistps
movsb
xlat
push
pop
mov
test
enter
je
or
lock
int
int
jl
xor
shr
sti
jbe
pop
andb
in
xchg
lock
xchg
inc
jnp
jmp
mov
and
mov
fdivrs
jg
add
repnz
scas
add
addr16
pop
add
or
icebp
or
or
xor
out
push
jmp
call
mov
xor
add
test
js
xchg
sub
cmpsl
and
lea
push
loop
mov
mov
out
bound
stos
out
dec
sbb
rolb
push
ljmp
xchg
push
and
push
std
sub
pop
cmp
stos
xlat
imulb
push
push
push
jmp
leave
sbb
sbb
sti
jno
cld
jmp
out
ret
xor
or
sbb
test
lods
and
and
aas
jge
cmp
and
dec
outsb
fucomip
fbld
addl
sbb
xchg
sub
stc
loopne
jne
fwait
dec
data16
fistpl
xchg
adc
repz
aam
fs
shlb
in
dec
out
push
in
sub
dec
jmp
bound
enter
or
out
leave
addr16
lcall
dec
sbb
test
hlt
sub
outsl
andl
not
jae
jnp
cmp
push
aam
xchg
rorl
out
div
inc
shrl
sbb
stc
mov
jge
faddl
mov
inc
push
add
lods
cwtl
and
inc
mov
mov
enter
clc
ja
pop
xchg
stc
push
mov
jmp
test
pop
jno
hlt
fs
sbb
imul
sarl
mov
or
cltd
mov
data16
mov
data16
sbb
cmc
repz
cmp
adc
sar
dec
imul
or
ffreep
arpl
xor
out
in
mov
ljmp
pop
add
xchg
and
xor
jmp
sbb
xchg
dec
adc
or
adc
dec
xor
nop
stos
aaa
push
jno
sbb
fiadds
sbb
lock
inc
lods
nop
cmp
les
movsl
ror
repnz
fwait
inc
pop
pop
enter
pop
fdivs
int
js
popf
or
or
mov
pop
xor
lret
ss
jne
dec
dec
hlt
add
jmp
jo
lcall
imul
fs
xchg
jge
inc
repnz
popf
push
xchg
rolb
sub
fwait
cmp
popf
adc
and
ja
xor
adc
loop
imul
jne
in
stos
aad
pop
sbb
and
jo
mov
pop
mov
std
pop
aam
mov
push
xor
mov
repnz
fucomp
loop
cltd
test
lcall
mov
xor
sbb
push
fldt
data16
push
xchg
outsl
cmp
inc
push
jb
or
icebp
adc
jge
movsl
sbb
lret
cli
pop
mov
divb
cmpsb
out
inc
pop
push
sbb
and
sbb
dec
sbb
add
jl
mov
lds
sub
frstpm(287
cld
sbb
shl
sub
jnp
outsb
adc
inc
lahf
cltd
jmp
arpl
ds
pop
mov
mov
in
imul
xor
shll
mov
fidivl
aad
jge
jnp
cli
rcrl
and
je
call
ret
repz
and
xor
mov
je
icebp
repnz
cltd
in
jmp
mov
jb
or
xlat
mov
cld
gs
cltd
adcb
repz
out
test
enter
out
and
sub
outsb
sub
or
mov
das
cltd
or
or
and
in
mov
dec
inc
dec
xorb
pop
ljmp
enter
outsb
inc
sbb
mov
insl
movsl
push
cltd
ljmp
inc
add
pop
fdivrl
popf
add
add
xchg
mov
ljmp
repnz
add
mov
mov
and
outsb
and
cmp
dec
dec
xlat
insl
mov
adc
inc
and
mov
mov
imul
ret
add
push
fdivl
mov
scas
or
sub
test
sbb
out
sahf
push
sbb
mov
adc
dec
cmpsl
add
and
mov
js
fisubrl
cmp
xor
and
jne
stos
ljmp
pop
lods
rcrb
bt
test
cwtl
lods
sbbl
adc
dec
out
jo
and
dec
fsub
test
test
push
subb
sahf
mov
loopne
stc
add
dec
cmc
mov
addr16
mov
mov
repnz
cmp
cs
test
pop
outsb
ljmp
adc
jo
xor
orb
add
jge
call
gs
xchg
je
dec
shlb
dec
arpl
in
jecxz
mov
dec
cld
pushf
nop
pop
call
cli
out
mov
das
xor
stos
test
cltd
inc
push
fs
push
adc
cmovnp
xor
mov
stos
cmp
fiadds
test
rep
test
cmpsb
stos
fdivrs
jbe
and
lret
test
mov
push
cmp
sbb
pop
push
ljmp
gs
mov
xor
clc
mov
pop
arpl
data16
mov
fnstenv
lahf
mov
sahf
fwait
mov
jns
dec
test
sti
outsl
cld
scas
cmpsb
movsbl
mov
sti
mull
loopne
inc
pop
xor
lock
and
mov
jns,pn
mov
and
inc
sbb
adc
out
mov
push
lods
nop
sahf
cmp
mov
mov
fst
pop
test
mov
push
cmp
jns
mov
jnp
cmc
mov
mov
outsl
cmp
and
aam
cs
inc
test
xchg
arpl
sti
stos
mov
enter
cmpl
cmpsb
inc
xor
push
push
sbb
cmp
js,pn
jbe
fwait
outsl
fcomp
les
int
inc
xor
inc
mov
lret
or
lcall
cld
fsubrp
or
js
cwtl
pop
sub
mov
jle
ret
pop
mov
mov
mov
sbbb
in
ljmp
adc
add
fwait
pop
sub
push
cltd
pushf
mov
sbb
adc
lret
lahf
add
cs
mov
mov
imul
jecxz
cwtl
mov
loope
cmpsl
cwtl
std
add
ljmp
in
or
std
outsl
out
and
mov
sbb
mov
push
mov
movsl
lret
xor
addr16
loopne
push
xor
fucomi
ljmp
and
inc
je
xor
pop
gs
xlat
mov
add
xor
sbb
xchg
cmpsb
inc
mov
sbb
or
int3
rorl
xor
pop
or
int3
subb
inc
pop
mov
out
scas
mov
sti
jo
dec
sub
out
mov
push
jmp
fdiv
or
cmp
pop
clc
gs
loope
inc
ljmp
add
jbe
out
bound
mov
push
push
mov
inc
stos
mov
add
xor
mov
popf
scas
movsb
dec
mov
stc
cltd
int3
jg
sahf
mov
cmp
jmp
add
scas
pop
test
rorb
and
cwtl
mov
sbb
into
sbb
and
and
mov
mov
push
cmpsl
nop
or
adc
adc
pop
testl
ret
and
push
popf
sahf
fwait
lods
push
xor
and
cltd
cmc
adc
enter
lret
mov
sbb
add
and
inc
int3
stos
popf
mov
in
jecxz
and
pop
sub
jmp
bound
fstps
xchg
addl
arpl
sub
jns
ret
cmp
adc
outsb
hlt
inc
shll
inc
add
and
mov
dec
aas
sahf
dec
mov
jmpw
dec
jle
mov
fdivrp
int
nop
icebp
mov
icebp
dec
aas
mov
nop
mov
insb
mov
lahf
out
pop
sbb
and
and
sbb
decl
sub
loopne
inc
ret
and
dec
sub
inc
sub
ficompl
testb
adc
push
xchg
fsub
mov
outsb
loopne
add
ret
in
lret
or
and
inc
jns
ret
fs
add
int3
sbb
push
push
sub
xchg
cmp
mov
out
cmpsb
pop
out
cmpb
sbb
and
adc
lcall
xchg
xchg
cmp
inc
ret
mov
in
aam
jp
sarb
lock
idiv
test
out
out
inc
and
jb
pop
testl
aas
in
les
push
fucom
pop
out
xor
jp
xor
and
pushf
and
pop
icebp
ja,pn
mov
mov
repnz
gs
fmuls
or
xor
adc
jns
pushf
insb
push
xchg
pop
stos
insb
out
mov
movzbl
cmp
xchg
sub
sub
adc
pop
ja
xchg
or
pop
xlat
test
out
pop
fmull
xchg
in
pusha
adc
lock
lods
in
sbb
xchg
mov
es
test
and
sbb
dec
push
les
into
fcompl
nop
fcmovb
sbb
fimuls
repz
cltd
cmpsl
mov
sub
mov
out
jmp
call
clc
inc
int
jp
ja
xchg
jo
icebp
nop
sub
in
nop
mov
and
mov
mov
xchg
shl
movsl
sub
decb
loop
fmulp
push
out
test
data16
and
push
lret
push
mov
cmpsb
in
mov
fdivl
jb
loop
aaa
adc
pop
jae
mov
into
ja
jmp
push
cltd
jmp
jns
clc
imul
mov
and
sub
mov
or
cmp
aad
sbb
sti
jne
and
dec
cmpl
aad
fsubl
mov
push
xchg
sbb
scas
outsb
mov
push
addl
lock
mov
push
push
subl
xor
jae
inc
divb
ja
stc
cmc
in
addr16
push
adc
pop
jl
pop
int3
clc
notb
mov
jmp
and
outsl
scas
sbb
fwait
jae
mov
les
pop
pop
dec
push
mov
sti
bound
dec
es
mov
jle
sub
or
movsl
inc
dec
repz
lea
int3
jmp
mov
mov
out
enter
mov
faddl
aad
aad
jge
leave
push
xchg
mov
adc
mov
mov
push
inc
mov
jae
es
or
mov
inc
or
test
nop
stos
stc
inc
int
jbe
mov
ljmp
mov
mov
sahf
cmp
in
fcmovu
sub
and
mov
jp
in
icebp
pop
cs
pop
mov
popf
movsl
cltd
aad
push
jmp
adc
in
or
mov
loop
push
xchg
sbb
mov
lods
call
mov
inc
adc
jae
push
mov
jns
mov
push
je
adc
stos
jmp
fnstcw
lcall
dec
in
mov
jb
and
lea
rorb
inc
add
ds
mov
movsl
xor
fdivr
sbb
mov
jmp
sub
scas
out
cmp
xor
dec
cmp
mov
add
out
lret
dec
sbb
lret
push
push
psadbw
mov
call
inc
or
xor
push
shlb
loope
sbb
xor
mov
test
cwtl
shlb
inc
rcrl
ss
sbb
inc
push
add
cmc
cwtl
mov
int3
cmp
mov
cmpsl
jb
icebp
das
js
mov
mov
stos
pop
xchg
in
jae,pt
jge
cmp
out
sbb
jno
pushf
hlt
in
jb
and
cmpsb
mov
ds
cltd
sti
stc
std
add
shl
aad
je
sub
mov
adc
or
mov
push
and
pop
cmp
out
mov
daa
mov
or
adc
movsl
xchg
les
leave
in
mov
jns
cwtl
cmp
xchg
outsb
ror
sbb
fcompl
stc
cmp
mov
jb
aas
push
inc
mov
mov
int
loop
andb
fmull
mov
fistps
out
sub
out
inc
pop
cmp
pusha
fisubrl
pop
iret
jo
adc
fistpll
inc
lea
mov
push
fwait
mov
cmp
icebp
lcall
jne
jp
dec
scas
out
mov
cmp
sarl
add
xchg
sbb
test
cmpsl
pop
lods
out
push
and
and
lret
dec
out
xor
mov
bound
in
lock
inc
pop
push
or
inc
insl
jbe
push
add
shrb
cwtl
in
push
in
dec
cmc
dec
jmp
and
shl
shrl
adc
cmpsl
sbb
xor
loopne
into
in
lds
ficompl
dec
out
mov
add
idiv
out
imulb
out
xor
pusha
addl
jnp
mov
mov
adc
leave
sbb
loop
xchg
xchg
mov
push
xchg
mov
out
fsub
jmp
mov
jns
xlat
pop
ljmp
aad
lea
lcall
push
out
xchg
and
sbb
or
inc
xor
js
xor
dec
and
sbb
test
cmp
nop
sub
adc
and
add
mov
sbb
and
test
hlt
adc
inc
fs
leave
mov
push
fldcw
adc
pop
xchg
mov
int
ret
inc
test
lret
sbb
pop
ss
dec
popf
add
jp
clc
adc
fs
pop
mov
adcl
inc
enter
mov
cmp
ss
push
sub
scas
push
cmp
or
nop
les
psubd
test
aad
and
lds
sub
in
push
movsl
push
adc
repz
sarl
cmc
call
fidivrl
out
or
jmp
mov
push
inc
pop
jo
hlt
cmp
into
pop
out
roll
movsl
pop
subl
fcomps
sbb
xchg
sub
and
sbb
lret
leave
and
jp
mov
outsl
clc
and
pusha
sahf
pushf
xor
lcall
and
aad
and
xchg
xor
inc
adc
int3
aad
popl
jmp
xchg
inc
dec
dec
mov
or
test
arpl
pop
repz
cmp
mov
aas
push
adc
and
jno
out
idivb
test
dec
xchg
ret
or
xchg
xchg
sbb
ja
icebp
cmc
adc
les
aaa
jo
fwait
cmp
test
icebp
xchg
jp
fld
dec
mov
adc
in
gs
and
pop
iret
push
xlat
in
sub
cmp
inc
dec
hlt
or
push
jmp
pusha
lods
mov
sub
ret
xor
sbb
and
insl
pop
mov
push
fs
in
js
mov
mov
jle
adc
jae
push
or
and
out
movsb
xchg
xor
mov
jno
lcall
xchg
rolb
and
scas
and
inc
loopne
sbb
repnz
pusha
outsb
xlat
add
pop
mov
sahf
movsb
jg
sub
fists
or
xor
cmpsl
stos
out
out
rcr
dec
jns
mov
pop
xchg
add
mul
sbb
jb
fstps
cmp
rcrb
cmc
movsb
insb
out
cmpsb
dec
out
pop
and
insb
jne
xchg
xchg
jl
fcomps
and
test
pop
repnz
add
cmp
je
mov
add
push
dec
out
adc
fwait
lret
cmp
stos
loope
insl
xchg
into
sbb
rcrl
loop
test
push
sub
nop
dec
or
jne
sub
and
mov
ljmp
sub
mov
sbb
jae
push
inc
cmp
jmp
adc
cmpsb
jmp
and
xor
xor
stos
hlt
inc
das
aaa
call
in
sbb
cmc
push
add
sbb
xor
mov
mov
in
into
mov
int
and
clc
sar
mov
xchg
gs
das
scas
mov
popa
cmpsb
xor
shlb
mov
jb
jnp
call
xor
or
call
sbb
sub
xlat
enter
std
xchg
adc
or
sbb
scas
mov
xor
cltd
dec
mov
and
repnz
rcrl
xchg
lods
mov
mov
call
call
ljmp
movsb
dec
mov
add
pop
clc
pusha
xlat
inc
mov
pop
int
stos
jbe
scas
lock
lds
dec
adcb
inc
cwtl
lds
out
pop
outsb
pusha
pop
xchg
xor
inc
or
mov
jmp
int3
or
pop
mov
adc
push
mov
cwtl
out
imul
movsl
call
mov
sub
lahf
pop
mov
js
in
adc
sbb
into
pop
and
ljmp
loope
push
add
jnp
xor
roll
lret
lock
idivb
in
fisubs
in
loope
xor
stc
mov
jg
xlat
xor
rclb
lods
ss
sbbl
inc
popa
in
cmc
aam
in
dec
rorl
adc
push
sbb
int3
xchg
fwait
mov
xlat
in
push
sbb
and
movsb
leave
es
and
jo
jecxz
cwtl
aas
xchg
adc
gs
imul
cmpsl
xchg
lcall
sbb
xchg
adc
shrl
cmp
je
jns
enter
dec
mov
aas
ret
fisubl
lods
jecxz
mov
nop
sbbl
mov
and
int
leave
pop
sub
in
xor
jo
mov
dec
dec
test
fucomip
mov
sti
pop
sarb
xchg
ror
jne
push
movsb
inc
aaa
inc
mov
inc
nopl
stos
jl
add
xchg
das
add
fimull
jno
mov
ljmp
adc
xor
aaa
cmp
in
in
sbb
adc
and
inc
jecxz
xchg
adc
dec
frstor
iret
mov
jge
add
sbb
leave
into
sbb
bound
or
test
sbbb
sti
push
adc
sbb
outsb
mov
outsb
mov
imul
ja
outsb
test
sbb
neg
cli
push
aaa
push
pushf
fwait
adc
pop
testl
cmp
cmpsb
pushf
xchg
mov
inc
mov
fs
scas
cwtl
loopne
adc
pop
add
mov
scas
or
add
jae
push
mov
mov
adc
inc
ljmp
out
pusha
or
leave
mov
movsb
js
sbb
jge
ret
je
loop
mov
xchg
lret
cmp
xchg
push
leave
repnz
adc
outsb
sahf
jnp
lods
lcall
loope
xchg
out
pop
mov
pop
fwait
pop
pop
je
mov
mov
jmp
test
mov
es
je
jne
lahf
stos
sbb
fnstenv
push
aas
mov
push
push
mov
xor
mov
insb
mov
hlt
xchg
cmp
adc
inc
and
test
add
jnp
int
mov
pop
pop
lods
push
push
sub
mov
ret
ret
mov
mov
inc
mov
std
sbb
lahf
mov
pushf
fisubs
pop
test
adc
pop
push
jp
shlb
or
inc
pop
gs
nop
lcall
test
dec
and
add
mov
dec
stos
fsubrs
mov
pop
push
and
add
pop
mov
aaa
out
sarl
call
testb
sub
jl
dec
mov
je
xchg
xchg
outsb
in
cmpsl
cmp
sbb
test
aam
scas
add
push
mov
out
lret
sbb
inc
push
lret
mov
movsb
mov
xor
mov
sbb
scas
cmp
lret
rcl
cli
adc
cmp
sub
pop
cmpsl
test
or
jp
mov
xchg
enter
and
sub
loopne
dec
xor
shlb
pop
fcoml
mov
inc
and
or
into
ret
pop
pop
adc
adc
dec
pop
movsl
sti
jnp
xor
pop
in
lea
mov
jne
fsubr
fsub
xchg
cmp
ljmp
movsb
jl
addr16
test
add
lret
pop
int3
fs
cmpsl
imul
das
loope
je
add
ljmp
out
mov
jle
mov
cmp
int3
lcall
sbb
lods
enter
in
rcrl
andb
pushl
or
popa
jecxz
mov
aam
lock
inc
movsb
ficoms
lahf
fwait
adc
mov
iret
dec
stos
stc
or
in
cmpsl
stos
iret
inc
jbe
insl
mov
lret
mov
mov
insb
cmpsl
jo
push
jnp
adc
push
add
jmp
jle
pop
add
mov
ja
sti
jns
mov
add
sbb
into
push
imul
pop
mov
mov
lret
mov
fstpt
dec
jge
les
inc
jle
and
negb
jecxz
call
mov
int3
xchg
stc
ljmp
pop
jl
or
hlt
fs
dec
dec
out
xchg
add
sub
les
nop
xor
add
xor
adc
add
subl
mov
fldl
in
es
sti
sbb
xchg
push
dec
mov
xchg
jne,pn
xor
mov
and
cmc
adc
jmp
mov
mov
fsubs
mov
pop
sub
decl
jecxz
sti
push
mov
sbb
leave
dec
xchg
sub
sbb
dec
add
test
insl
outsb
ja
dec
inc
jg
shl
mov
pop
lds
ja
andb
movsb
cli
gs
xchg
mov
or
sub
add
aam
addb
pop
jnp
sbbb
xor
pop
rcl
call
mov
xor
stc
mov
inc
bound
shl
adc
sub
cmp
shr
sbb
push
adc
shll
in
scas
arpl
adc
daa
ja
adc
outsl
scas
jp
nop
xchg
push
outsl
fdivs
dec
xchg
movups
sub
repnz
or
iret
mov
sbb
push
or
jle
cmpsb
fs
iret
sbb
pop
imul
jecxz
mov
out
jp
nop
and
pop
imul
cmp
cld
dec
popf
mov
fwait
push
push
enter
pop
lret
jge
mov
mov
cmp
repz
lods
in
push
mov
adc
loopne
imul
mov
sahf
ljmp
push
mov
popf
inc
icebp
rdtsc
in
and
aaa
or
and
aad
push
jmp
or
mov
cld
and
rorl
and
jp
push
push
inc
enter
cltd
lods
or
mov
mov
and
inc
jne
dec
in
loopne
pop
pop
aam
stc
and
into
in
pushf
lret
shrb
clc
dec
jns
repz
sbbb
push
pusha
dec
sahf
mull
and
xchg
hlt
xchg
adc
mov
gs
inc
sub
je
adc
xor
shlb
push
pop
lahf
cmpsl
repnz
push
xchg
cmpsb
adc
mov
push
sti
mov
cld
test
ret
hlt
cmovge
sbbl
aam
es
mov
in
fisttps
jmp
sarl
shl
repz
cltd
and
popf
popf
mov
xor
pop
push
fwait
jns
scas
xor
repnz
jmp
inc
sub
and
jl
add
cmpl
out
add
rcrl
sbb
push
jnp
js
jmp
jno
lds
fnstcw
int3
pop
rorb
sub
into
xchg
or
and
jmp
lds
adc
sub
xchg
cmp
mov
sbb
cmp
insl
push
fs
dec
mov
xchg
faddl
and
jg
outsb
mov
mov
rep
pop
jne
mov
fistpl
mov
imul
ret
push
mov
out
out
jnp
loop
dec
cmp
stos
lret
dec
or
xchg
mov
call
push
test
sbb
nop
ret
xchg
pop
lahf
lods
sub
fsubr
adc
mov
jns
push
pop
jmp
push
scas
loopne
dec
dec
mov
bound
sahf
sti
jle
fnsave
and
daa
mov
fiadds
sub
pop
xor
movsl
cmp
js
out
lret
mov
iret
icebp
lret
das
imul
les
leave
mov
adc
jecxz
gs
iret
mov
mov
mov
mov
pop
jg
pop
add
push
fs
clc
jl
push
push
pop
in
push
jmp
lcall
jne
mov
psllw
fstps
test
cmp
inc
gs
mov
cmc
es
adc
int
movsb
sahf
add
out
dec
add
mov
sbb
pop
ret
lods
mov
jo
sbb
xor
mov
fwait
cmp
jae
sub
in
sbb
push
or
xchg
insl
movsb
cltd
mov
and
xor
jecxz
mov
stos
cmpsl
push
adc
fdivr
jle
loopne
and
test
inc
cmp
xchg
jne
mov
or
and
cltd
icebp
ret
leave
sbb
pop
push
das
xchg
adc
push
clc
jns
jp
stos
inc
add
outsb
xor
ss
mov
lds
lret
mov
shll
mov
aad
aaa
hlt
xchg
add
dec
sbb
jl
inc
mov
les
xor
out
pop
or
pusha
ljmp
mov
xchg
out
pop
dec
aam
sbb
mov
loop
mov
std
cmpsl
cmp
mov
sbb
lret
jnp
push
sahf
es
scas
dec
testb
scas
jge
scas
repnz
outsb
xlat
pop
fcmovnb
mov
es
pop
in
and
pop
out
push
push
and
lock
push
popa
and
aas
and
out
jbe
jle
sbb
mov
mov
pushf
jb
add
leave
add
mov
popf
mov
sbb
fwait
and
test
push
popa
stc
adcl
adc
cmp
repz
add
xchg
test
scas
sbb
and
sqrtps
fisttps
jmp
mov
mov
shlb
ret
dec
pop
mov
lods
lret
mov
push
xchg
aad
out
jne
mov
lds
sub
jmp
popf
fwait
xlat
sbb
fnsave
ljmp
dec
sub
mov
mov
jb
addr16
pop
rorb
pop
rcrl
push
and
shl
or
in
movsl
or
push
xor
inc
add
aad
scas
ljmp
pop
mov
cli
push
sarb
aad
fwait
lock
fiaddl
inc
cmp
or
xchg
sbb
sbb
xlat
sarl
inc
and
mov
imul
jmp
dec
or
loopne
pop
cmpsb
jge
lret
add
mov
dec
sbb
daa
mov
push
xchg
je
pushw
popf
lahf
and
xchg
mov
push
sub
jge
adc
xchg
sbb
insl
xchg
xchg
or
jae
in
and
xorl
push
aaa
gs
ret
and
push
mov
push
dec
and
daa
push
dec
and
cmp
cli
sub
mov
clc
out
mov
sarl
push
addr16
jae
es
jmp
imul
out
aaa
mov
insb
sbb
sbb
movsl
sbb
pushf
repnz
lock
and
out
fnstcw
lds
xor
nop
mov
mov
cs
jae
outsl
cmp
outsb
push
lods
test
pop
sbb
fcomps
js
insl
mull
mulb
sarb
xchg
push
mov
rorl
dec
sub
test
test
cmpsl
mov
push
mov
jge
aam
loop
adc
fdivp
xchg
pop
mov
stos
dec
adc
sub
mov
pushf
dec
sbb
mov
lock
and
inc
xlat
sti
mov
gs
sub
xchg
rcrb
or
lahf
mov
insl
pop
cmp
xor
insb
mov
lcall
push
mov
test
in
neg
in
pushf
sbb
push
or
inc
shll
or
rcl
push
mov
inc
add
pop
or
xor
mov
adc
es
dec
test
pop
cli
pusha
sbb
rcrb
xor
or
push
jne
xor
push
push
mov
mov
orl
sub
imul
aas
outsb
test
and
mov
in
push
jecxz
cwtl
sbb
pop
xor
pushf
jnp
je
mov
fisubrs
aam
ds
mov
cmp
lock
mov
adc
cmpb
and
fsub
inc
inc
cltd
dec
out
ljmp
je
and
sti
push
cmp
jo
sahf
sbb
push
je
pop
stos
push
and
xchg
dec
jne
js
inc
outsb
icebp
xlat
jp
into
sbb
sub
xorl
jmp
sbb
dec
mov
push
dec
mov
cmp
and
mov
imul
movsl
ret
adc
cmp
imul
push
es
lods
cld
iret
js
ret
mov
vpshlb
jnp
sbb
ret
adc
fldcw
push
nop
cltd
dec
pop
mov
repnz
push
lds
jne
in
jmp
sub
pop
pshufw
xchg
ret
movsb
hlt
ja
jp
inc
aas
jp
push
scas
xchg
adc
add
sub
loope
into
dec
test
pop
add
and
mull
fldenv
aad
sbb
push
mov
push
xchg
sub
xor
icebp
fldl
adc
mov
cmc
add
lea
leave
push
adc
fwait
sti
and
jae
clc
push
sub
add
sub
sarw
dec
push
mov
xchg
mov
leave
sbb
xchg
push
add
scas
lahf
inc
and
xlat
test
loop
push
mov
sub
cmpsl
mov
inc
inc
pop
sbb
mov
mov
pop
in
push
ds
add
mov
mov
cwtl
pop
cmp
add
pop
or
xchg
nop
stos
jb
in
cmpsb
sti
outsb
outsb
fucomp
gs
stc
js
or
jnp
dec
inc
mov
push
test
movb
push
xor
mov
fcmovnb
repnz
lcall
lea
hlt
push
sbb
sbb
jns
in
mov
scas
push
pop
and
adc
mov
call
shrb
ror
sbb
cmp
fsubl
mov
or
xor
rcl
int3
rol
subb
add
outsl
xlat
in
cmp
pushf
daa
stc
adc
daa
adc
mov
pushf
popa
ret
pop
aad
je
orps
xchg
adc
and
and
test
mov
mov
mov
inc
jle
adc
dec
cld
fs
cmp
xlat
jle
jne
int3
lock
jg
cltd
repz
in
fnsave
mov
and
push
and
mov
xchg
xchg
mov
js
insb
ljmp
or
mov
mov
repz
outsl
jne
test
push
cmp
pop
mov
or
dec
jns
cld
pop
add
sub
cmp
inc
out
mov
pushf
fwait
popl
jbe
sti
rorl
sub
nop
cmc
push
push
mov
out
fcom
iret
in
lods
jae
repz
cltd
pop
pusha
addr16
icebp
mov
adc
jo
pop
xchg
popf
idiv
mov
je
jne
inc
or
clc
xor
sbb
cld
sub
push
mov
int
pop
lcall
scas
fsubrl
nop
push
sbb
das
mov
sbb
fisubs
and
adc
adc
int3
jmp
test
sub
mov
lods
dec
decl
mov
out
sbb
fwait
pop
fmull
sub
xlat
and
and
add
mov
jmp
jno
inc
loopne
sbb
call
mov
dec
sbb
jmp
push
dec
lea
sbb
fnstenv
in
jns
and
rolb
pop
push
test
jne
loop
jmp
mull
in
out
adc
jmp
in
mov
mov
cmpsl
inc
std
dec
and
jae
xchg
or
mov
in
out
or
dec
cltd
pop
aaa
sbb
mov
mov
adc
cmp
xchg
cmp
addb
add
aad
and
sub
movb
into
inc
lahf
stos
sahf
pusha
lret
out
cltd
dec
sbb
aam
fisttps
int3
jne
mov
rcrb
std
imul
or
xor
popf
ljmp
je
sti
mov
cmpsb
jns
and
stos
cltd
add
mov
and
cmc
add
pop
int3
or
cltd
sbb
adc
cmp
xchg
add
push
in
imul
and
lret
movsl
jnp
dec
cmp
aas
push
cmc
mov
out
cltd
sub
outsl
popa
and
push
sbb
adc
dec
nopl
scas
cmp
clc
loope
pop
mov
popf
imul
repnz
xlat
lahf
mov
fcoml
mov
andl
cli
adc
lcall
dec
fisttpll
sub
mov
adc
jbe
dec
jne
inc
jo
cmp
fs
sbb
sbbl
ja
jns
out
sub
popf
mov
push
jns
pushf
dec
or
shlb
lock
mov
loopne
fsubrl
and
lea
add
sub
pause
jns
rorl
add
push
push
and
mov
pop
dec
test
out
adc
arpl
and
outsl
popf
jno
mov
dec
out
dec
insl
ds
ret
cmp
mov
nop
and
fstpl
lods
and
jmp
add
stos
insb
sbb
dec
jnp
mov
std
lret
out
ja
lock
push
or
push
pop
out
xor
js
pop
dec
cld
pop
movsb
or
rcll
cmp
int
sub
sbb
movsb
or
addb
imul
ljmp
arpl
mov
div
add
stos
sbb
test
movsb
adc
push
pop
jl
sbb
mov
add
xor
movsl
sub
mov
pushf
jae
outsl
movsb
sbb
leave
inc
push
jbe
and
in
ss
mov
xchg
aad
shll
dec
dec
pop
xchg
cmp
xchg
pop
mov
push
dec
sahf
and
rclb
stos
test
fists
cmpb
add
pop
xchg
sbb
fwait
je
out
pop
ficoml
leave
call
sbb
sti
adc
add
pop
jecxz
inc
fstp
outsl
negb
ret
scas
insb
add
movsb
pop
lea
pop
lcall
xchg
out
pop
ds
call
mov
dec
and
out
xchg
mov
push
fldl
mov
and
pop
lahf
jb
lods
adc
cmpsl
jmp
push
xlat
lods
gs
xchg
push
stos
sti
idivl
daa
sbb
sbb
iret
sub
dec
stos
inc
aad
fwait
rcl
loope
pop
gs
xchg
push
sbb
sbb
pop
mov
jl
fwait
lea
mov
and
push
push
lods
and
cmp
stc
fisttpl
cltd
or
and
movsb
and
inc
je
mov
stos
push
in
movsl
dec
scas
pop
mov
lret
cltd
and
inc
int3
mov
insb
push
dec
and
stos
xor
loop
and
add
mov
clc
outsl
dec
mov
xchg
cmc
jle
dec
mov
pop
shll
rorl
cmc
sub
call
pop
cltd
sub
inc
repz
and
popa
or
ss
sahf
push
jmp
cmp
or
xchg
push
clc
inc
cmpsl
nop
add
xor
lret
cmp
mov
push
cmpsb
mov
fsubl
cltd
stc
push
mov
adc
fildl
stos
jbe
js
inc
lods
shlb
xor
mov
mov
iret
xchg
jle
mov
mov
cwtl
xchg
dec
push
and
das
mov
jo
cli
xor
mov
dec
or
aad
push
out
adc
push
and
xchg
push
test
jecxz
ds
inc
dec
cmpb
mov
repz
out
push
cltd
mov
mov
xor
xor
jp
sarl
pop
cmp
stc
in
jbe
push
push
lahf
push
push
lahf
ds
push
sub
sbb
loop
lret
or
adc
and
cmpsb
int
and
retw
mov
xor
xor
sub
icebp
jne
pop
arpl
lret
in
rcll
xchg
repnz
sub
inc
mov
sub
jge
pop
push
adc
pusha
and
imul
xor
pop
sbb
movsb
inc
sub
inc
popf
jmp
push
ljmp
je
pop
jne
jns
or
mov
mov
and
inc
xchg
adc
lahf
stos
and
stos
testl
adc
xchg
lahf
inc
or
push
inc
mov
lahf
int3
push
xlat
mov
sarb
pop
jno
inc
movsl
xchg
or
test
out
xchg
pop
and
add
sahf
daa
fnsave
mov
sbb
sbb
out
ret
pop
cmpsb
mov
notl
fldt
ret
mov
xor
inc
and
dec
push
xchg
test
xchg
test
mov
jge
pushf
and
stos
cs
addr16
dec
mov
in
pop
push
rcrb
lahf
rcrb
stc
sub
test
enter
out
mov
aam
jmp
lods
mov
fidivrl
xor
jecxz
xchg
push
out
sahf
jnp
out
shr
addr16
imul
jg
sub
xor
push
xchg
dec
cmp
jno
or
in
lret
cmp
in
mov
sub
xchg
push
cmc
fdivs
out
xor
push
or
push
lea
arpl
jmp
adc
jle
repz
dec
jg
sbb
ljmp
stc
test
mov
jo
adc
call
cmp
and
xchg
cmc
fnstsw
jo
stc
and
mov
pushf
jmp
sub
mov
adc
clc
mov
mov
movsl
add
jnp
bnd
loopne
jb
and
mov
out
sbb
adc
les
dec
popf
xchg
cli
xchg
out
jmp
mov
and
int
push
sbb
push
pop
mov
push
push
push
aam
mov
imul
jmp
loop
and
cmc
cmp
sti
std
xor
jecxz
add
push
xchg
push
inc
jns
clc
aaa
cmpsl
mov
mov
or
pop
shlb
imul
mov
sbb
fsubrl
jecxz
xchg
jo
scas
mov
fisubs
lods
and
cmp
int
jmp
adc
mov
or
push
push
fisubrl
cmp
mov
in
or
cmp
je
pop
and
cmpsl
cmp
xor
sahf
mov
sbb
test
je
fsubrl
add
sub
mov
pop
enter
fwait
lock
sbb
mov
xchg
addr16
lcall
test
mov
pop
orl
test
mov
inc
sbb
movsb
pusha
pop
popf
shrb
jp
arpl
or
push
stc
neg
sbbl
lret
push
in
fisttps
adc
pop
dec
addl
inc
mov
xchg
mov
jmp
scas
stc
mov
mov
test
cmp
imul
fnstcw
push
mov
or
inc
rol
xchg
test
sbb
popl
mov
jg
xlat
gs
xor
xor
sti
mov
sub
rcrb
test
push
rcll
imul
sub
aad
pop
mov
jns
movsb
out
repz
mov
mov
not
inc
outsb
cmc
sub
jmp
cmp
add
cmpsb
xor
aaa
std
mov
lock
lret
and
push
lret
and
sub
insb
mov
out
imul
jo
ror
mov
test
xor
stos
mov
pop
mov
xor
mov
lahf
inc
icebp
jle
stos
iret
and
out
lea
lret
fwait
or
xor
test
jle
lcall
idivl
enter
sarl
xchg
out
xor
fs
out
jecxz
lds
jno
sbb
push
pop
fs
add
dec
cmp
loope
repnz
or
cmp
popf
vmovsldup
leave
add
cmp
push
add
mov
pop
rcrb
test
imul
cmp
mov
outsb
xchg
sbb
pusha
outsl
jp
inc
popf
sub
jl
mov
nop
pop
hlt
and
jmp
sbb
stc
ljmp
pop
jns
aad
ljmp
pop
jge
dec
and
jns
jne
dec
ljmp
clc
jge
out
ficompl
push
mov
sbb
mov
ss
jp
mov
fwait
pop
jmp
xor
sub
xchg
inc
adc
ret
and
cmp
stc
repnz
pop
jo
push
pushf
arpl
lret
adc
in
and
mov
pop
mov
mov
sbb
cmp
shlb
cmpsb
fisttps
loop,pn
push
mov
in
sub
rol
repnz
pop
mov
cwtl
dec
inc
inc
fcomps
xor
loop
sbb
add
incl
inc
mov
mov
cmpsl
dec
nop
fwait
mulb
jecxz
and
jp
aas
pop
sbb
mov
and
mov
out
ss
outsl
xchg
mov
push
stos
jne
jne
and
jae
stos
push
pop
fldenv
lahf
pop
xor
cs
mov
jo
xor
pop
pusha
mov
mov
out
sub
psubd
lock
mov
cmpsb
imul
push
aad
leave
in
sbb
leave
int
push
addl
jae
dec
popa
mul
mov
stos
adc
push
dec
arpl
xchg
aaa
sub
in
ljmp
dec
aaa
xlat
push
fdivp
pop
and
xchg
js
out
xchg
dec
ss
fs
push
and
adc
push
pop
cld
jbe
mov
clc
repz
push
inc
test
addr16
mov
fwait
and
jmp
mov
mov
cmpsb
mov
sub
push
sbbb
ljmp
xchg
mov
adc
cmpl
mov
add
inc
push
imul
insb
cmpsb
lret
push
dec
int
popa
dec
adc
xor
cmpsb
cmp
mov
cmc
mov
pushf
sbb
xor
push
pop
call
stos
and
pop
lds
mov
xlat
pop
mov
xor
sub
xchg
adc
mov
sbb
dec
mov
adc
popa
sbb
sub
cltd
or
in
and
pop
xor
das
sbb
fldl
and
idivl
rclb
or
jmp
repz
out
inc
lods
xlat
lret
and
xchg
les
test
jbe
or
cmpsb
gs
les
movsl
mov
pop
fnstcw
sub
test
stos
sub
jecxz
sub
cltd
subb
xlat
shr
add
lea
nop
cmp
lock
push
push
fstpt
fsubl
jmp
cmpsb
cmp
shrl
popf
pop
mov
jle
sbb
lods
mov
int3
inc
fwait
or
cmc
cmpsb
out
and
xor
shl
mov
xchg
inc
iret
jb
push
popf
jl
fwait
dec
pop
iret
iret
nop
push
fsubrs
mov
cli
lods
int
fwait
cmp
xor
test
or
cmp
mov
xor
gs
in
ret
xchg
jge
hlt
jmp
lods
sbb
mov
push
stc
mov
inc
mov
repnz
mov
xchg
sbb
sbb
sub
daa
mov
ljmp
push
pusha
orl
or
movsb
sti
pop
mov
sub
push
pop
push
addr16
f2xm1
clc
mov
mov
aad
mov
jae
push
out
mov
popa
cmp
and
mov
bound
mov
les
or
cmp
mov
lcall
test
mov
int3
mov
mov
mov
fisubs
test
sub
or
lds
jae
bnd
repz
sbb
stos
ror
jmp
mov
clc
mov
inc
add
xor
mov
push
and
xor
sbb
inc
in
test
cmp
add
hlt
jno
iret
fistps
pop
std
cmp
lahf
cmp
call
rcr
movsb
xor
xchg
fs
cmpsl
dec
mov
jo
cmpsb
jmp
in
push
jo
mov
cmc
xchg
cmp
loopne
lcall
cmp
addr16
mov
and
add
and
aas
mov
adc
cli
inc
loope
ja
call
mov
xchg
xor
test
cmp
cs
sarb
jmp
xchg
jb
sahf
sbb
loopne
jns
dec
int3
lea
cmc
cmpsl
push
push
rcrb
xchg
popa
mov
jge
es
xchg
movsb
pop
test
mov
adc
sbb
xchg
xor
jo
sbbb
sbb
jecxz
xchg
mov
pop
mov
sbb
or
sub
and
iret
dec
sub
cmp
jnp
dec
shl
sbb
pop
push
fcompl
cmpsl
stos
xor
out
gs
jle
aad
in
inc
dec
cmpsl
pop
inc
adc
xor
xorl
and
jmp
mov
movsb
add
icebp
lods
out
fwait
or
call
sahf
jnp
in
cmp
sbb
mov
shlb
adc
jp
hlt
int
ja
test
jae
and
fstl
dec
push
add
cmp
int3
out
add
mov
dec
jge
imul
lret
mov
mov
aam
aaa
lahf
jne
ret
jmp
and
push
loopne
pop
aas
xor
xor
test
mov
test
and
call
sub
mov
in
or
sbbb
mov
adc
mov
shll
hlt
xor
xor
jl
icebp
xor
jp
mov
xlat
mov
and
iret
fildll
xchg
lahf
ljmp
pop
leave
pop
movsb
pop
test
xchg
les
aas
jae
sub
shll
xlat
fnstcw
mov
test
mov
ss
imul
jmp
ret
sbb
mov
mov
or
mov
stc
int3
fnsave
sub
sub
popa
add
add
subb
xor
aam
es
or
jae
leave
adc
adc
add
jecxz
nop
and
sti
jb
jnp
cwtl
lret
mov
fiadds
sub
loope
adc
cli
in
add
fiadds
aaa
shlb
addr16
or
out
or
lret
push
cmpsb
add
in
pop
adc
and
add
out
out
inc
or
add
pop
sub
push
leave
ja
xor
sub
mov
ljmp
outsb
mov
sbb
fcmovnu
xchg
cmp
push
fstps
aaa
cli
dec
mov
popa
sahf
inc
and
add
into
or
cmpsb
daa
jno
inc
mov
xor
je
adc
dec
cwtl
mov
std
pop
mov
jmp
in
xchg
jmp
int
or
sbb
push
cmp
dec
outsl
jno
jno
dec
inc
movsb
das
dec
pop
test
and
inc
mov
pop
mov
fsubl
mov
inc
pop
xchg
mov
cld
sahf
out
aas
lods
inc
fcmovu
mov
mov
xor
sbb
sbb
inc
sub
jb
repz
adc
scas
ss
push
cltd
fs
mov
pop
inc
inc
cmpsb
fwait
jno
bound
mov
out
and
mov
jg
or
jmp
sbb
daa
cmp
push
pop
xchg
jg
add
mov
test
adc
sbb
aad
out
jno
gs
mov
add
mov
pop
pushf
and
and
xchg
jp
movsl
int
pop
imul
lcall
aad
popf
mov
pop
jbe
lret
stos
std
pop
jp
repnz
imul
pop
mov
ret
xchg
mov
sbb
dec
xchg
and
cmpsb
cmp
std
insb
jnp
mov
jo
icebp
in
sti
movsl
mov
addb
sbb
out
pushf
not
sar
jecxz
daa
data16
sbb
mov
inc
jl
pop
std
pop
inc
and
and
shrb
or
mov
or
pop
lahf
test
daa
flds
test
fstl
mov
sub
mov
mov
pop
mov
repnz
xor
pusha
loope
mov
push
rclb
imul
mov
fsubr
dec
lcall
enter
loopne
test
sbb
add
or
stos
sti
push
push
mov
gs
jbe
cltd
mov
inc
or
push
pusha
cmpsb
aad
xor
fsts
pop
test
pushf
push
inc
xchg
sub
lock
or
mov
and
add
sbb
lcall
cwtl
dec
enter
test
ret
sbb
mov
dec
mov
mov
scas
mov
xor
add
std
mov
shrl
jge
ficoml
pop
cmc
mov
pop
xchg
pop
push
jl
push
lea
test
jae
or
scas
fsubs
imul
add
sbb
pop
push
xchg
lret
je
arpl
ret
imul
les
pushf
adc
cld
lods
pop
mov
sbb
jo
sbb
jmp
inc
mov
insb
cmp
mov
loop
mov
jbe
jl
scas
inc
add
jmp
in
test
adc
bound
aas
mov
out
inc
loopne
add
into
mov
add
mov
inc
fisubl
and
std
pop
jge
mov
mov
jecxz
pop
repnz
sub
xchg
push
jle
ljmp
pop
ss
hlt
in
dec
dec
cli
mov
movsb
mov
xchg
dec
in
sub
dec
mov
loope
push
popf
pop
in
or
in
les
add
cs
sbb
ret
xchg
jl
sub
flds
mov
roll
in
xchg
mov
or
jp
mov
and
cwtl
in
pop
sub
mov
dec
orl
es
push
jns
lret
gs
add
imul
add
dec
je
jp
jo
in
roll
jmp
aam
sahf
jno
or
push
or
mov
mov
dec
aam
roll
xlat
in
cmp
mov
repz
mov
and
push
fistpl
das
mov
add
mov
dec
shl
loopne
inc
js
push
aaa
push
popa
add
les
in
pusha
and
mov
stc
les
test
sbb
fcomps
sbbl
jb
inc
mov
repnz
mov
xor
lea
into
jb
rorb
iret
mov
pusha
xchg
or
add
add
mov
pop
call
fsub
mov
pop
pop
scas
push
sbb
jne
daa
repnz
shr
xchg
mov
stos
addl
xor
ret
cmp
rcll
sbb
out
fnstcw
xchg
lcall
and
leave
lock
loopne
and
ljmp
add
repnz
push
mov
mov
mov
inc
jns
jns
pop
pop
push
pop
xor
sbb
jp
in
xor
out
out
and
jl
mov
sbb
adcl
cmpsb
iret
test
mov
mov
or
in
or
cmp
icebp
and
sub
es
mov
jle
icebp
iret
insb
push
cmpl
and
ret
and
call
mov
or
sub
outsl
or
adc
and
inc
pop
popf
and
rcrl
mov
add
flds
mov
dec
inc
mov
mov
inc
adc
std
test
push
out
xchg
icebp
into
ss
adc
xorb
cmpsl
cmc
mov
ljmp
pop
gs
aas
outsl
arpl
inc
mov
jmp
inc
push
jnp
call
and
push
or
dec
dec
sbb
sbb
hlt
xchg
out
cmp
or
aad
dec
popa
cli
fisubs
cmc
pop
movsb
fwait
xchg
notb
xchg
repnz
in
mov
rorb
je
sbb
jnp
pop
imul
sbbb
jo
jmp
loope
sbb
sbb
or
shll
mov
push
sbb
adc
adc
cmp
push
out
sbb
xor
jge
cltd
das
pop
es
jne
jns
movsl
xchg
jmp
mov
in
jg
negl
lahf
popa
js
loopnew
and
mov
mov
out
movsb
mov
nop
popf
mov
imul
stos
xchg
int3
shlb
mov
fildll
jb
test
out
test
jle
sbb
pop
leave
sarl
cmp
imul
mov
dec
sbb
fdivrs
insb
xor
mov
imul
mov
jmp
xchg
mov
in
mov
jecxz
cmp
aas
ja
push
and
mov
or
dec
or
pushf
jle
cmp
jnp
lods
jp
add
push
push
shll
arpl
nop
pop
cmp
das
mov
test
ficompl
in
mov
pushf
fnstcw
popa
aad
inc
pop
test
loope
ret
ret
sti
in
push
sbb
movsb
int
das
adc
nop
test
xchg
int3
cmp
stc
cmp
adc
in
pop
test
mov
imul
inc
cmpsb
or
pop
adc
add
lock
cmpsl
mov
add
mov
dec
adcb
ds
jne
jno
sub
les
dec
stc
dec
dec
aad
pop
pop
and
aaa
mov
jl
mov
or
or
jae
shll
xor
jge
push
pop
mov
hlt
and
ret
mov
add
jle
push
mov
inc
dec
cwtl
jl
mov
ja
mov
inc
cli
jo
dec
xor
jne
mov
mov
and
jns
mov
iret
cs
fwait
and
outsl
and
mov
std
call
loopne
mov
movsb
jne
push
out
mov
out
sub
xchg
addl
adc
fsubrp
push
clc
lcall
cltd
dec
xor
fiaddl
cmc
int
jg
and
xchg
jecxz
jp
xchg
push
jmp
daa
popa
push
lahf
sbb
mov
sar
mov
lods
xchg
sbb
ss
ljmp
mov
aam
popf
cmp
xor
xchg
movsb
inc
sbb
mov
xchg
outsb
xchg
cltd
or
in
in
xor
add
jno
mov
xor
movsl
pop
test
dec
call
sbb
popa
cmp
mov
icebp
mov
in
in
and
add
in
repnz
lret
mov
popa
mov
scas
xchg
and
and
sub
in
jo
or
cli
lods
sub
popf
jmp
iret
push
cmpsl
fldenv
jp
xchg
imul
lods
mov
sub
es
mov
sub
out
shlb
gs
cltd
dec
je
xchg
mov
insb
jbe
cs
fs
fildl
xchg
or
mov
sbb
out
push
adc
mov
sbb
loop
mov
ds
dec
mov
out
mov
push
ret
adc
hlt
mov
pop
sbb
out
mov
mov
ret
cmpsl
cmp
icebp
movsl
out
out
or
pop
xor
in
xchg
data16
je
inc
lahf
mov
nop
mov
lret
mov
rcl
fcmove
scas
or
shlb
scas
out
sbb
test
xchg
cmp
imul
shld
adcl
adc
push
and
xchg
push
in
add
stos
jp
rcrl
insb
or
dec
fsubl
cmp
cmp
lods
lahf
lret
lcall
jmp
lea
adc
sbb
jne
sbb
cli
jbe
leave
inc
cld
push
xchg
sahf
repnz
test
sbb
pop
mov
daa
in
adc
push
cli
mov
pop
imul
repnz
sti
cmp
sbbl
sbb
pop
lds
in
sahf
adc
jb
pop
sarl
mov
xor
cmc
add
icebp
push
cmp
push
and
jb
xchg
mov
jge
xorl
mov
fbld
sbb
and
cmc
cmpsl
sub
mov
sahf
mov
cmpsl
cltd
mov
adc
in
xor
and
pop
jmp
pop
gs
fnstcw
jl
adc
shll
stos
popa
in
shr
mov
in
movsl
addb
test
scas
std
cld
adc
test
repnz
and
add
jl
pushf
xchg
inc
pop
lods
pop
or
sbb
data16
sbb
aas
pop
in
mov
cmp
das
and
mov
rcrl
stos
or
notl
lock
xor
rcrl
leave
xchg
cltd
mov
cmp
xor
int3
pushf
mov
lods
dec
mov
mov
stc
cmc
movsl
mov
test
dec
and
outsl
jae
xor
and
and
gs
inc
cltd
or
cmpsb
sti
out
dec
aaa
into
xor
jbe
mov
outsb
xlat
cmp
mov
inc
hlt
or
add
and
adc
andb
cmpl
hlt
push
or
rcrl
push
and
repnz
mov
hlt
add
dec
push
cltd
lret
aad
in
out
aam
push
jmp
dec
test
mov
inc
iret
clc
js
aaa
loope
mov
imulb
jb
and
xchg
push
sub
dec
cmp
and
fcos
dec
pusha
dec
shl
xor
lcall
mov
push
repnz
lret
mov
test
int
and
xchg
aad
inc
adc
jb
leave
cmp
mov
fistpl
xlat
lret
xor
cld
mov
mov
xor
pop
mov
cltd
sub
mov
ljmp
sbb
stc
sbb
inc
sub
repnz
mov
mov
pop
into
aad
cltd
call
xor
jmp
add
cltd
sbb
movsb
cwtl
aaa
jb
ret
repz
mov
mov
xchg
fcompl
aam
movsb
pop
jecxz
pop
sub
sub
daa
test
rolb
cmp
or
pop
fsubs
out
hlt
mov
mov
mov
inc
cmp
mov
in
icebp
mov
loopne
imul
add
mov
and
int3
stos
fsubl
nop
fcoml
xor
dec
xchg
mov
mov
mov
stos
cmp
cli
rclb
pop
jmp
cli
shll
mov
mov
in
cmp
iret
repnz
int
mov
pop
jp
imul
pop
pop
cli
lock
out
mov
out
push
dec
notl
sti
popa
mov
cltd
jnp
pop
sbb
gs
mov
subl
inc
xchg
cmpsl
fwait
lret
xchg
push
lea
sbb
aas
mov
insb
lds
cltd
ret
sbb
sbb
inc
jbe
jp
cmp
or
mov
cmp
repz
scas
arpl
inc
sbb
and
jmp
jb
mov
cmpsb
add
mov
out
mov
out
and
jge
xchg
mov
out
sti
inc
push
or
dec
mov
stos
into
sbb
mov
cli
and
xchg
repz
add
stos
lds
or
pop
and
mov
xchg
sub
or
cmp
pop
jge
push
and
subl
insl
and
jl
js
mov
fistl
or
mov
btr
andl
xchg
jns
cmp
sbb
mov
mov
js
sti
aad
adc
mov
ret
pop
fcmovnb
loopne
jge
jg
xor
jp
xchg
movsl
sbb
and
cwtl
gs
add
orl
ljmp
xor
mov
mov
cmpsl
jb
add
in
or
and
mov
mov
xor
rorb
sub
stc
inc
and
repz
int3
sub
add
mov
imul
stos
inc
pop
cmpsl
lods
shlb
push
adc
mov
sbb
and
cltd
push
xchg
pop
lret
inc
ret
mov
dec
mov
cmp
or
mov
shlw
mov
dec
in
xchg
out
mov
jl
pop
aam
stc
sbb
push
add
test
pop
jg
sbb
mov
adc
or
inc
rorl
fwait
sbb
add
add
iret
add
push
mov
and
es
sahf
rorb
popf
mov
in
fildl
les
xchg
icebp
sbb
ds
cmc
add
jmp
sbb
fdivr
jnp
push
jle
jmp
sbb
mov
cmp
add
add
cli
sub
xchg
fwait
jmp
mov
cli
fld
mov
cltd
pop
pop
clc
movsl
popf
sub
rolb
faddl
ficoml
addr16
popa
lret
push
adc
out
leave
sbb
add
int3
jge
nop
mov
and
icebp
sub
test
xchg
inc
repnz
inc
or
add
sub
icebp
cmc
xor
adc
xchg
lds
mov
stc
jae
test
xchg
in
pushl
xchg
ja
sbb
mov
cmpsb
mov
fistpl
clc
mov
inc
inc
mov
xchg
cmp
and
pop
push
push
sets
mov
popf
cmp
cmp
sub
and
ficoml
lret
pop
lea
jne
push
cmc
adc
mov
cmpsb
mov
jnp
xchg
or
xor
out
cmp
faddl
sahf
sub
movsl
pop
inc
sub
mov
out
mov
jl
stos
sbb
push
jns
cmp
enter
test
mov
shll
push
mov
xchg
lahf
mov
adc
xchg
stos
xor
mov
and
aam
lds
icebp
xchg
cmpsl
stos
mov
mov
xor
xchg
mov
mulb
push
out
sbb
or
imul
pushf
jle
mov
cmp
sub
mov
fbld
jno
rorb
loop
mov
sbb
and
or
enter
lahf
xchg
out
cmp
xor
or
inc
mov
add
sti
add
imul
test
enter
inc
lahf
sub
sbb
sbb
cmp
mov
sub
sbb
cltd
add
inc
mov
call
sub
mov
out
mov
ret
jae
shr
icebp
xchg
test
sbb
test
fcmovne
mov
test
je
adc
inc
sbb
sbb
cmpsb
pop
sub
cmp
scas
pop
stos
sahf
pop
mov
or
adc
ret
sub
out
or
sbb
push
adc
test
cmc
roll
push
popa
pop
mov
addr16
add
fwait
shlb
ret
cmpb
in
dec
cltd
jmp
and
mov
jnp
insb
div
or
jmp
adc
dec
sahf
sub
or
movsb
bswap
lds
mov
jnp
aam
mov
mov
mov
call
inc
leave
loopne
xor
and
add
mov
mov
aad
shll
xlat
stos
pop
je
xor
loopne
or
out
push
pop
xchg
cltd
mov
cmpsb
cltd
mov
inc
inc
testl
mov
bound
dec
shrl
xor
and
xor
aaa
gs
call
rcrb
xor
inc
jne
cwtl
jmp
and
inc
jne
aad
jne
hlt
mov
lods
mov
outsl
sbb
xor
call
mov
and
push
inc
lahf
mov
shl
aad
repnz
xchg
pop
dec
mov
xchg
jno
cmpsl
and
cvtpi2ps
ljmp
inc
cmc
cmc
mov
test
sbb
andb
scas
xchg
scas
inc
inc
cmpsb
aaa
mov
adc
jnp
xchg
es
lahf
mov
ret
pushf
jmp
test
jne
pusha
in
mov
inc
mov
ds
in
in
insl
dec
loope
sbb
in
les
repnz
dec
les
pop
fimuls
repnz
rcrb
cltd
mov
pop
push
mov
xor
aaa
sub
adc
xlat
aam
repnz
inc
push
mov
xor
popa
or
sub
enter
xor
loopne
aam
repnz
mov
cmpsl
pushf
rcl
pop
adc
cmpsl
add
and
popf
cltd
test
add
decl
daa
jne
test
pop
xchg
scas
fistl
and
stc
aaa
lods
popf
xchg
ljmp
mov
and
pop
rcrl
dec
out
and
or
jne
loop
mov
inc
and
cltd
imul
add
cld
pusha
ret
or
pop
add
enter
filds
out
xchg
je
lock
into
bound
sbb
stos
and
mov
and
or
push
add
mov
pusha
iret
mov
push
insb
js
mov
pushf
dec
pop
dec
test
lret
add
inc
jl
jp
mov
xor
out
mov
sbb
out
movsb
out
pop
dec
push
mov
inc
mov
jle
dec
adc
mov
or
mov
inc
pop
dec
cmc
dec
jae
test
fucomp
xchg
inc
jle
fdivrl
test
mov
daa
or
or
xchg
sub
fisttps
push
mov
adc
mov
jecxz
in
pop
push
mov
jge
jl
mov
sbb
dec
cltd
dec
push
jmp
sahf
jmp
ret
lods
jmp
and
or
fsubl
add
push
cmp
in
and
bound
or
mov
sahf
mov
jae
pop
rclb
and
dec
inc
out
push
in
mov
inc
clc
inc
adc
xor
mov
xchg
sub
ljmp
aas
testl
ljmp
lret
mov
and
and
rcr
dec
dec
test
sub
loopne
mov
ficoml
adc
add
jmp
push
or
add
xor
loop
aaa
sub
movsl
aaa
out
pop
mov
xor
jmp
test
lcall
adc
mov
inc
and
jnp
push
fmull
add
enter
cwtl
out
std
pop
add
lret
mov
rcrl
pop
mov
dec
int
xchg
gs
mov
mov
inc
sbb
movsl
aaa
cmp
dec
ja
jae
push
xor
dec
cmpsb
jnp
add
add
cmpsl
xchg
cmp
popf
mov
movsl
movsb
popf
mov
jb
xchg
add
jnp
ja
xchg
mov
std
push
lcall
cmc
adc
xlat
std
and
je
scas
pushf
sub
in
int
sub
pusha
lret
xor
ljmp
push
mov
add
push
jecxz
jae
sbb
mov
push
mov
push
mov
popf
jge
pop
fcompl
dec
test
movsl
cmp
xchg
cmp
sub
aad
sti
loopne
mov
imul
jo
icebp
or
mov
or
xchg
inc
pusha
and
mov
cli
xchg
dec
test
adc
xor
mov
imul
paddsb
pop
mov
mov
add
dec
pop
je
rorb
in
and
mov
out
mov
stos
sbb
cmp
dec
cld
ja
ljmp
mov
push
std
sub
mov
gs
aad
mov
mov
clc
cmp
push
pop
dec
mov
cli
in
xchg
dec
icebp
aam
es
sub
inc
jbe
mov
popf
jne
movsb
out
fiadds
adc
lcall
data16
fs
loope
jge
aam
fistps
mov
xchg
jne
stos
push
jmp
lods
in
jae
mov
push
mov
loope
dec
mov
rol
sub
jecxz
push
mov
pop
or
inc
addr16
mov
pop
decl
sarl
push
movsl
cmp
lock
hlt
out
int
mov
mov
push
scas
icebp
inc
push
scas
push
divb
es
pop
or
in
out
push
rolb
adc
mov
mov
mov
jp
icebp
jbe
sub
adc
xchg
fstl
movsb
es
jno
mov
sbb
add
dec
bound
negb
hlt
mov
jnp
aaa
mov
mov
jmp
jle
push
int3
dec
sbb
and
les
cmp
out
dec
pushf
or
imul
ret
imul
fs
ja
mov
pop
sahf
mov
push
clc
sub
xorb
mov
cwtl
cmc
fcmovnb
mov
js
lods
into
movsl
test
call
cmp
ret
or
add
jmp
mov
sarl
xchg
sahf
imul
inc
xchg
lahf
iret
das
pop
lret
mov
icebp
insl
mov
das
jmp
ljmp
in
lock
xor
mov
hlt
clc
sbb
lds
dec
xchg
stc
nop
js
es
hlt
movsl
mov
sbb
in
ret
test
mov
xchg
and
mov
mov
cmp
insl
test
aas
xchg
inc
rol
stos
scas
cmpb
cltd
lcall
pop
mov
mov
arpl
pop
sbb
push
fstpl
fnstenv
push
xchg
xchg
rcrl
inc
xchg
xor
jle
iret
inc
in
xchg
jae
es
ljmp
xchg
jmp
fcmovnb
mov
mov
sub
sub
mov
inc
xchg
loope
mov
xchg
and
repz
sub
dec
add
xchg
mov
mov
mov
cwtl
mov
cmpsl
jno
enter
lods
dec
mov
shrb
aam
sbbb
dec
loop
mov
inc
inc
adc
pop
xchg
std
cmc
inc
lcall
fwait
push
mov
xor
sbb
jbe
mov
scas
scas
andb
movsb
and
pop
and
fildll
xchg
lahf
mov
movsl
pushf
in
icebp
aaa
lods
xchg
hlt
sahf
inc
stos
test
mov
fs
jp
mov
cld
push
jne
add
cltd
mov
lret
std
fidivl
rolb
in
ljmp
mov
xchg
call
xor
fistl
sub
loop
xchg
test
shrl
sub
adc
cmp
sub
cmp
xor
fiaddl
enter
jge
mov
push
in
ror
xchg
mov
mov
adc
loop
mov
and
nop
call
sbb
arpl
lcall
mov
rol
mov
xchg
xorb
and
aaa
pop
and
inc
popf
dec
and
aaa
push
cwtl
test
jmp
sbb
test
sarb
add
add
mov
jne
sahf
lahf
xchg
mov
fistpll
and
repnz
cs
push
xor
pop
adc
stc
xchg
lods
sbb
lret
test
mov
sbb
xchg
adc
lret
lds
mov
xchg
or
stc
out
out
les
inc
dec
mov
popa
fbld
call
adc
sti
iret
pop
add
dec
pop
imul
jbe
mov
popa
pop
lock
and
sti
popf
fwait
dec
inc
fadd
std
movsl
or
repz
pop
adc
stos
test
fsubp
cmp
icebp
pop
cwtl
popf
jno
jns
scas
xor
and
enter
lret
pop
mov
repnz
hlt
and
ljmp
adc
and
xchg
iret
or
mov
sbbb
push
lahf
cmc
jmp
xchg
cmp
mov
mov
mov
jmp
jle
mov
ret
data16
dec
outsb
inc
mov
loopne
nop
xchg
xchg
sbb
dec
sbb
andl
pop
jmp
cmp
cmp
pushf
mov
std
push
jmp
push
sbb
insb
mov
pushf
sbb
xchg
mov
std
push
enter
sbb
dec
or
sub
mov
icebp
and
jo
out
jo
push
lret
mov
fldl
jno
scas
xchg
fisttps
rorb
out
popl
mov
repnz
xchg
pushf
gs
push
and
popf
jne
roll
out
or
and
adc
add
lahf
inc
aas
dec
icebp
imul
repnz
and
sbb
shll
lds
jmp
sarb
sub
insb
shr
shrl
dec
push
outsl
sbb
test
leave
out
aad
inc
cmp
add
xchg
jo
pop
in
subl
mov
add
daa
or
adc
outsb
mov
push
adc
mov
cmp
fxch
sub
jecxz
pop
mov
push
jns
or
pushf
out
pop
mov
adc
pop
dec
cmp
inc
and
push
fsub
stos
or
hlt
and
incb
cmpsl
stos
dec
cmp
insl
pop
mov
fwait
mov
xchg
out
loop
pop
hlt
inc
fnsetpm(287
push
dec
jmp
and
imul
xchg
lods
stc
xor
push
stos
cli
adc
and
and
pop
cmp
mov
cmp
jecxz
lds
push
das
es
and
stos
jge
les
mov
mov
mov
jl
in
mov
add
in
xorl
fcmovnu
ss
mov
out
pusha
imul
fistpll
or
dec
arpl
pop
out
xor
dec
ss
popf
jb
adc
leave
int
mov
stc
in
sti
pop
xchg
pop
jb
jp
lcall
pop
mov
xor
jns
xchg
sub
push
pop
mov
mov
sub
sahf
iret
jmp
pop
clc
dec
jno
push
jae
push
dec
gs
xchg
aam
mov
jle
popa
push
test
scas
arpl
int
sbb
jae
jecxz
mov
popf
inc
sahf
cmpsl
hlt
out
adc
and
or
out
cmpsb
jmp
cmpsl
ja
aaa
inc
testb
inc
sub
adc
sub
xchg
xor
mov
je
cmpsl
mov
and
test
testl
lret
fld
movsl
or
imul
mov
xchg
and
push
fcoms
test
fwait
adc
push
and
xchg
adc
mov
movsl
sbbl
out
out
mov
jp
pmulhw
push
pop
mov
sub
add
in
mov
mov
sar
shl
mov
clc
insb
mov
lea
xor
inc
mulb
out
xor
mov
jns
repz
scas
jns
outsb
pushf
jmp
mov
jb
sub
cli
andb
mov
int
mov
insl
testb
or
or
aam
insb
cmp
aam
fldt
pop
xchg
or
sub
mov
frstor
outsl
inc
and
fnsave
hlt
mov
lds
mov
stos
mov
ret
movsb
inc
leave
cmpsl
testl
iret
sarb
pop
push
adc
call
sbb
loope
jg
fmull
rol
and
mov
lock
xchg
ljmp
ds
xlat
daa
sub
imul
and
xor
lcall
icebp
repnz
cmp
je
imul
leave
shr
adc
jmp
rorb
xor
sti
mov
and
mov
fsubrs
insl
push
insb
ljmp
out
pop
enter
pop
mov
popa
and
lahf
mov
mov
sub
mov
test
pop
aaa
inc
icebp
inc
mov
fsubl
fcoms
mov
in
shr
loope
lds
fcoml
push
lret
cltd
sbb
mov
mov
outsl
push
mov
mul
popa
dec
lret
pop
push
sub
cmp
in
setp
xchg
inc
ret
adc
test
pop
cmp
sub
sbb
movsl
mov
adc
lahf
gs
leave
fimuls
es
mov
pop
cmp
pusha
test
lret
adc
and
fcoms
jle
fsub
sub
pushf
nop
mov
repz
stc
aad
sub
bound
int
inc
jne
mov
mov
pop
insl
adc
inc
mov
mov
hlt
and
inc
push
call
sbb
sbb
daa
mov
xor
push
call
pop
sahf
rcl
jg
ljmp
jle
or
aaa
cld
lcall
cmp
cmp
out
decl
adc
xchg
add
dec
js
mov
fwait
lret
fsubrs
fdiv
xchg
fisubl
ss
mov
and
jecxz
ljmp
dec
cmpsl
lock
in
arpl
imul
inc
sbb
jno
lahf
jno
xor
jmp
dec
loope
cmpsb
sub
mov
aaa
sub
rolb
imulb
mov
jge
sub
addl
leave
jb
cmc
rcr
mov
add
leave
fstpl
frstor
jmp
iret
sbb
loope
pushf
cmpsl
push
push
movsl
sub
repnz
pop
inc
pushf
add
add
stc
pop
insl
push
sub
xchg
dec
sbb
add
mov
in
add
lds
je
outsl
xor
dec
jbe
fiaddl
popa
add
sub
mov
rcrl
or
cmp
fcoml
in
mov
sub
pop
leave
dec
aas
roll
cmp
add
mov
xor
and
inc
imul
mov
push
xchg
dec
xchg
in
jp
cltd
add
push
leave
je
add
notl
xchg
push
xchg
push
fs
cli
inc
jb
fistps
pop
adc
pusha
add
test
imul
cmp
add
jecxz
jmp
jns
sub
stos
loopne
mov
sub
rorb
xchg
scas
mov
and
aaa
test
sbb
inc
fs
pop
rcl
adc
imul
mov
addl
mov
jo
loop
sbb
aas
cmpsb
and
scas
lods
cld
ss
push
popf
lret
jae
xchg
jge
pop
dec
mov
mov
mov
mov
jbe
scas
dec
sub
mov
ret
out
xor
leave
fisttpll
pop
jle
jno
dec
or
bound
daa
jl
and
test
shr
cmp
jl
leave
mov
sarb
adc
aad
pop
jmp
pushf
or
int
mov
or
fsubl
sub
push
mov
cmp
push
outsl
int3
mov
lcall
inc
test
pop
sbb
mov
aas
push
mov
in
sub
xchg
jns
cmp
and
mov
shll
pop
out
pop
sbb
lcall
int3
test
cld
test
mov
cmp
push
fisttpll
mov
pop
pop
push
push
leave
xchg
pop
cmp
mov
int3
enter
mov
and
cld
mov
inc
fcomip
pop
insl
mov
repz
xchg
jmp
lock
es
or
and
mov
cmpsl
hlt
arpl
xlat
cli
mov
fstl
jno
loopne
flds
subb
mov
dec
or
xchg
jne
out
in
stos
sub
rcrl
sub
pop
enter
jl
mov
test
notl
sbb
mov
popf
movsb
sahf
push
cmpsl
push
cltd
cld
mov
fsubl
xchg
adc
ds
mov
addr16
xchg
test
cmc
loopne
int3
sbb
andl
out
js
aad
mov
push
cmp
jo
inc
loopne
pop
mov
dec
dec
jle
and
sbb
push
inc
mov
popa
sub
decb
scas
add
mov
leave
aas
inc
push
mov
pusha
mov
int3
icebp
adc
dec
out
mov
das
je
jns
sub
test
ljmp
and
ret
movsb
into
mov
cld
jae
ja
dec
negb
mov
jb
call
add
pop
cltd
call
ds
mov
sbb
push
out
jle
ja
fidivrl
mov
lods
cld
jne
mov
sbb
lret
and
pop
xchg
or
or
repnz
xchg
dec
iret
and
xchg
rep
stos
das
enter
xchg
pop
sbb
and
lock
jmp
mov
xor
add
push
pop
in
imul
mulb
pop
fsts
mov
call
das
loope
cld
in
mov
fsubs
test
add
imull
in
cmp
aad
cltd
jp
adc
push
xchg
mov
loope
cmp
out
cmp
xchg
pop
xor
pop
or
stc
test
testb
sbb
repz
stos
frstpm(287
mov
xor
addb
in
repz
das
enter
stos
cmpsb
xchg
outsl
mov
cltd
pop
xlat
xor
xor
push
addr16
mov
shll
jp
movsb
ds
lcall
mov
cltd
xchg
in
push
repnz
cmp
popf
jmp
sub
jbe
pop
inc
movsl
sub
mov
jge,pn
sti
mul
jae
dec
in
jmp
cmp
gs
dec
mov
jg
mov
mov
jnp
stos
divb
push
ljmp
add
shlb
inc
leave
mov
or
adc
jge
jmp
ficomps
inc
cli
sub
lcall
sbb
mov
shlb
jg
mov
mov
hlt
adc
and
mov
ret
cmpsb
fwait
popf
jle
jp
or
mov
add
lret
jae
repnz
xchg
or
shll
lea
fstl
cltd
mov
popf
mov
rcll
mov
dec
les
push
mov
push
ja
stc
mov
sbb
pop
mov
push
push
push
mov
jmp
mov
mov
cwtl
pop
pop
mov
mov
cmp
pop
pushf
sbb
outsl
add
roll
push
adc
mov
pop
push
sahf
fwait
or
insl
stc
out
ror
sub
mov
test
mov
xchg
inc
sbb
call
in
mov
pmaddwd
rcl
push
adcl
mov
mov
leave
sub
test
rorl
jmp
and
pop
dec
cld
call
imul
pop
xor
mov
mov
enter
dec
jbe
mov
repnz
xor
fdivrp
mov
and
int3
jne
scas
mov
xchg
push
sbb
cmc
iret
push
adc
movsl
or
xor
mov
loope
aad
or
dec
mov
or
jmp
outsb
pop
mov
push
jmp
and
adc
dec
add
inc
mov
fs
addr16
xchg
das
mov
int
hlt
loopne
jecxz
xlat
push
mov
mov
mov
pushf
in
in
test
mov
lods
dec
push
mov
inc
and
in
sub
mov
pop
and
sti
test
mov
push
movsl
add
loope
mov
mov
lret
sbb
ljmp
rcl
std
lcall
sbb
jmp
jbe
mov
push
test
stos
insb
outsl
push
push
add
xor
fs
movsb
fcomp
pop
movsb
imul
or
sbb
cmp
lcall
cmp
or
lds
mov
sbb
adc
or
push
mov
jp
or
mov
fistpl
add
lret
mov
mov
push
dec
fisttpll
ficoms
push
andl
adc
sbb
mov
mov
pop
mov
jecxz
cld
rolb
or
jmp
jge
sbb
cmp
dec
mov
das
and
jo
pop
cmpsl
lcall
jne
jmp
xor
and
cmpsl
add
call
test
jmp
mov
xchg
fistps
std
sbbl
xchg
int
fstpl
repz
and
arpl
or
jae
mov
sti
mov
jmp
pop
xor
and
icebp
xchg
xchg
in
movsb
lret
push
adc
xor
in
mov
mov
fiaddl
sub
pop
sbb
fisubl
mov
pop
fwait
jge
ret
mov
jmp
call
repnz
sub
push
out
stc
in
mov
leave
aas
cmc
xchg
ja
pop
lahf
imul
push
inc
divl
fistpl
jmp
je
and
cmc
push
fucomp
shrl
movsb
mov
lock
divl
dec
jg
loop
sti
and
lret
jl
ljmp
and
pop
sti
popa
mov
cmovle
add
lods
jbe
cmp
jb
jae
les
mov
pop
xchg
xchg
lahf
out
push
rcrb
jae
pop
xchg
out
jl
ljmp
test
ret
dec
sub
mov
sbb
mov
xchg
xor
cltd
dec
mov
lock
call
stc
sbb
jge
call
push
mov
insb
xchg
decl
incb
and
push
lds
popf
jnp
lcall
dec
arpl
movsb
add
stos
mov
in
int
mov
dec
nop
push
shrl
lret
das
test
icebp
mov
fcomi
test
and
or
inc
popf
mov
jo
mov
and
pushf
out
fs
loop
cmc
sti
aad
jbe
ljmp
or
into
sbb
cltd
sbb
outsl
adc
cld
mov
mov
insl
or
mov
and
push
mov
arpl
jg
pop
pmaxsw
xchg
sbb
and
push
outsl
scas
mov
nop
mov
sub
push
fstps
hlt
xchg
mov
int
inc
mov
movsb
iret
inc
mov
jl
sbb
or
insl
cmc
or
divb
aas
cmpsb
movsl
lods
push
lcall
push
sub
mov
sbb
sub
stos
mov
mov
repz
xchg
pop
fcoms
repz
lahf
cmp
xor
jge
push
jmp
mov
int3
test
and
xchg
add
test
fs
pop
int3
pop
sub
sub
bound
and
and
sbb
imul
imul
test
fwait
push
iret
je
adc
bound
mov
cmc
push
ja
int
mov
add
mov
hlt
cmp
and
subl
xchg
xor
cmp
sahf
mov
mov
es
shll
lods
outsl
dec
das
sbb
or
adc
popf
pop
je
aaa
arpl
pop
call
and
and
dec
dec
push
and
and
xchg
jae
xchg
ficoml
pop
loopne
xchg
cld
or
daa
dec
or
jno
sbb
pop
jns
or
pop
scas
mov
movsb
into
fs
pop
xchg
lock
pop
in
mov
mov
lods
pop
fbstp
in
xchg
sbb
or
cltd
cmp
sarl
int
fidivrs
mov
mov
gs
push
enter
pop
cmp
in
call
inc
mov
dec
lods
test
lds
mov
push
sbb
in
jmp
mov
cmp
push
adc
jge
in
jle
popf
sahf
mov
push
in
cs
test
mov
mov
pop
loope
in
mov
adc
incl
dec
sub
cltd
or
mov
jge
aas
subl
or
xor
sbb
lret
push
popa
jo
or
mov
pop
cmpsb
jns
inc
sbb
xor
inc
xchg
clc
jne
mov
push
ja
adcl
push
out
or
dec
daa
dec
sub
sub
pushf
es
push
das
lock
mov
xchg
cmp
jecxz
sarl
push
stc
in
or
in
or
fwait
push
or
arpl
sub
mov
sub
in
test
imul
lods
aas
stos
mov
enter
and
sub
adc
scas
cmp
ljmp
inc
sbb
mov
mov
in
jl
jmp
incl
lret
pop
mov
movsl
std
std
cmp
inc
cld
ret
and
jecxz
scas
sbb
dec
adc
xchg
adc
out
push
fistpl
sbb
and
clc
mov
cs
cwtl
lock
addr16
aad
int
push
imul
jne
mov
pop
repnz
int3
sbb
xchg
sbbb
sbb
inc
or
jbe
mov
cmp
mov
popa
jecxz
adc
and
mov
jne
mov
push
fadd
test
dec
push
dec
or
icebp
mov
xor
movsl
jb
inc
sbb
stos
into
test
lahf
rorb
dec
dec
lods
aad
mov
pop
xor
add
lret
movsl
pop
outsl
lock
lock
lea
lock
shrl
aad
mov
test
mov
mov
dec
loope
lahf
and
movsl
sarb
out
or
out
push
add
jo
scas
dec
inc
pusha
fidivs
outsb
test
std
mov
jns
addr16
sub
lds
icebp
pushf
mov
or
push
mov
lods
inc
adc
sti
jle
pop
dec
je
arpl
pop
dec
outsl
and
mov
mov
sbb
add
lock
mov
jmp
stc
mov
gs
pop
push
movsb
in
inc
iret
call
cld
dec
push
cld
icebp
or
je
mov
add
jg
andl
xchg
addr16
lret
rcrl
jle
daa
mov
arpl
mov
popf
test
mov
or
in
mov
testb
xor
adc
mov
lods
fcoml
lds
in
pop
loopne
add
mov
dec
loope
adc
in
inc
sbb
aad
mov
xor
pop
leave
fs
dec
add
cmp
mov
lock
sub
inc
paddq
cmp
int3
hlt
inc
out
jmp
stc
lods
mov
arpl
jg
sub
mov
ret
repnz
fdivs
cltd
push
sti
mov
add
inc
je
cmp
dec
addr16
iret
cmpsb
mov
gs
mov
mov
fwait
adc
and
pop
lods
fldenv
push
mov
lock
add
add
dec
xchg
popf
add
andl
pop
push
pop
mov
adc
sub
fstpl
test
pushf
repz
push
aam
cwtl
push
push
fs
out
sbb
sub
xchg
or
aad
lahf
dec
sub
fldenv
or
and
add
mov
pop
add
ljmp
cwtl
sbb
mov
dec
pop
pop
lock
test
es
add
mov
fists
add
sbb
test
clc
ds
push
lahf
fwait
call
std
push
out
cld
fdivs
out
sbbl
test
pop
aad
pop
loop
pop
dec
or
or
clc
mov
in
mov
mov
adc
imul
dec
and
fisubrs
mov
mov
test
fidivrs
cmp
xor
lock
or
arpl
bound
icebp
sbb
push
mov
imul
cli
cwtl
mov
jbe
and
add
cmpsl
loope
ret
leave
sahf
add
inc
dec
or
cltd
inc
pop
xor
in
mov
fwait
out
repnz
out
push
gs
repnz
push
mov
cmpsb
in
dec
ror
sbb
adc
mov
call
mov
mov
arpl
aaa
sarb
outsl
or
xchg
adc
mov
test
jmp
xor
and
sub
insl
loope
sbb
cld
dec
lahf
aad
jnp
pop
sub
pop
jecxz
test
imul
sub
jns
repnz
outsb
imul
xchg
jge
cmp
or
mov
sub
idivl
lds
mov
push
xchg
stos
daa
push
enter
fldcw
push
int3
lds
repnz
mov
xchg
pop
hlt
mov
stos
enter
mov
stc
lahf
lods
jp
push
jns
call
inc
pop
hlt
jnp
shl
xchg
pop
fucomip
push
dec
mov
sbb
mov
bound
mov
push
adc
push
xor
mov
negb
dec
orb
fnstenv
sti
aam
ret
cwtl
xchg
add
and
insl
xchg
or
sti
daa
sub
int
or
mov
js
jno
repz
loop
mov
push
out
inc
inc
and
pop
adcl
lods
aaa
sahf
dec
push
repz
push
mov
push
adc
jo
cltd
enter
xchg
sub
lds
aad
inc
sbb
xor
loopne
jns
push
test
in
inc
mov
and
jmp
inc
loop
and
mov
cmp
movsb
mov
jge
or
les
movsb
sub
dec
popa
mov
hlt
out
push
add
outsb
xor
mov
test
sub
movsl
mov
imul
call
aas
and
mov
jle
push
mov
mov
dec
fsts
xchg
ret
dec
dec
xchg
mov
orl
add
into
aas
adc
pmaxsw
xchg
mov
sbb
push
jbe
fxch
lea
scas
aas
cmp
sti
iret
dec
cld
out
mov
push
shrb
test
imul
add
repz
cmp
mov
inc
std
xor
mov
scas
es
lahf
filds
and
push
sbb
xchg
call
lds
testl
jecxz
xchg
push
inc
enter
mov
mov
mov
les
adc
and
fisubs
dec
push
mov
ficoms
pusha
pop
and
nopl
mov
push
adc
aad
jge
fwait
mov
sarb
test
popf
adc
pop
mov
mov
fsts
inc
in
xchg
movsl
pop
push
lcall
cmc
add
dec
aaa
aas
pop
roll
xor
xor
lock
std
filds
cmp
jge
je
lcall
ss
insb
fildl
iret
cmp
stc
pop
mov
aam
fsubl
stos
lds
in
sub
jp
pop
pop
push
push
dec
aas
xor
dec
sub
sbb
fistl
adc
gs
pop
inc
movsb
outsl
out
mov
in
xchg
loope
and
mov
aad
movsb
add
xchg
in
fs
xor
push
dec
inc
or
fstps
insl
popf
adc
shr
mov
mov
loope
les
shr
div
mov
mov
mov
sbb
mov
jo
rcrb
js,pn
push
outsb
cli
lret
lods
je
cmp
adc
or
pop
sub
or
sub
xor
les
add
into
adc
out
add
stos
das
inc
stos
stos
test
mov
mov
dec
scas
xchg
ds
cwtl
mov
adc
fcomps
mov
pop
fwait
mov
sti
lods
xchg
add
sub
mov
addb
shll
int
out
mov
and
stos
das
pop
mov
inc
test
sub
divps
lcall
xor
cmpsb
call
out
fmull
and
fisubs
lds
imul
jbe
and
push
lcall
and
test
mov
jno
cmpsb
mov
and
leave
ret
and
cmpsb
sbb
mov
gs
mov
push
jle
mov
mov
in
mov
fiaddl
fisubs
lret
cmc
mov
xor
and
xor
fcomi
loopne
mov
jecxz
test
cmp
sub
fildl
lods
daa
xchg
xor
jb
lods
jbe
scas
dec
xor
xor
mov
jmp
outsl
inc
iret
fbstp
mov
in
pusha
inc
or
xlat
movsl
jg
mov
mov
xchg
aam
or
movsb
sub
sub
daa
addr16
insb
cld
fs
dec
mov
sbb
sti
outsl
orb
adc
xor
sbb
adc
test
imul
sub
mov
in
cmp
push
jbe
lret
pop
and
insl
movsb
jae
xor
adc
jge
mov
into
repz
mov
les
inc
lret
out
or
and
jns
out
mov
lret
push
and
dec
adc
or
pop
fiadds
mov
mov
cli
rcl
mov
xor
pop
xchg
divl
mov
test
in
scas
add
mov
or
popf
xchg
xor
popa
xor
mov
pop
pop
outsb
lahf
rol
xor
rclb
mov
fmull
jnp
or
in
aam
stos
mov
add
jbe
and
inc
jb
dec
jg
sbb
out
sbb
or
out
mov
mov
jno
mov
inc
fstl
js
aad
pop
jmp
fwait
hlt
rcll
sbb
pop
mov
cltd
sbb
cs
cwtl
in
fwait
adc
mov
hlt
jnp
xor
andb
scas
and
test
loope
sub
xchg
pushf
pop
mov
aaa
mov
std
and
daa
lock
scas
mov
cmp
pop
pop
cmp
add
lock
xchg
test
mov
shll
or
cmp
movsl
mov
xor
leave
fdivrs
ret
jo
push
adc
mov
xchg
jne
cmpsb
pushf
lret
rcrb
shrl
test
cmp
cmp
xlat
lods
test
in
mov
aad
push
cmp
aam
mov
out
sbb
dec
pop
rcl
cs
lock
xchg
sbb
or
je
push
lret
pop
mov
fucomip
lods
push
loop
cmpsl
jbe
push
mov
sub
loop
xor
cmpsb
pop
or
test
mov
ret
nop
cld
xor
and
std
push
lcall
add
cmp
or
inc
push
imul
or
mov
inc
add
in
pop
inc
inc
test
pop
or
aaa
xor
push
gs
out
movsb
js
sbb
sub
daa
stos
sti
sarb
cmp
cwtl
and
jae
repz
mov
push
xor
mov
js
enter
sbb
cld
int
and
dec
loope
pop
mov
dec
pop
xor
pop
imul
out
xchg
pop
lcall
enter
out
out
dec
sahf
mov
push
clc
les
shll
scas
insl
test
sarb
jb
dec
popf
call
xor
gs
neg
test
xor
jle
nop
sub
jnp
ljmp
jnp
jns
dec
sub
adc
add
jo
and
sbb
int
cmp
sbb
cmp
and
jnp
pop
lret
je
sahf
xchg
mov
sbb
mov
fs
cmpsb
pop
cmp
out
stos
loopne
push
dec
xor
xor
movsl
inc
sbb
jle
push
push
sbb
mov
cmp
out
sbb
out
xchg
jg
repnz
xchg
rolb
mov
push
jne
add
cmp
mov
jb
mov
outsb
jl,pt
leave
test
mov
ljmp
sub
jae
pop
mov
shr
and
xchg
mov
pop
jmp
jbe
std
mov
push
icebp
subl
push
fldcw
icebp
movsb
fwait
jmp
dec
cmc
xchg
decl
lods
mov
inc
mov
loop
jle
jmp
bound
movsb
push
stc
jbe
jmp
aaa
hlt
sahf
pop
push
and
ds
xchg
cmp
mov
daa
lret
in
fsubr
nop
clc
call
or
arpl
mov
mov
cli
mov
into
cli
or
mov
xchg
sbb
add
pop
jp
add
jne
jns
inc
pushf
cmpsl
lret
movsb
aad
sbb
in
push
or
cmp
or
push
dec
loop
lds
movsb
push
sahf
or
push
jmp
into
or
fwait
cmc
les
dec
or
fdivrs
pop
mov
xchg
push
fisubl
pop
out
jns
and
jmp
mov
cmp
into
je
xchg
or
es
pushl
test
mov
cs
xchg
inc
and
pop
mov
les
mov
mov
pop
mov
fcomip
mov
pop
mov
sub
bound
stos
fwait
call
xchg
in
movsl
ret
and
xchg
mov
std
enter
mov
insl
cmc
push
jno
ret
cmp
rcll
jle
test
jmp
test
addr16
sbb
aam
mov
push
sub
or
mov
inc
add
cmpsl
stos
insl
fisubrs
test
pop
jb
call
mov
outsb
xor
and
jecxz
or
mov
mov
dec
and
popf
ljmp
push
pop
cmp
sar
sahf
repz
jnp
scas
jo
outsl
xchg
mov
mov
shll
in
pop
dec
in
and
loop
ja
sbb
or
subl
in
pop
lods
ds
mov
mov
cltd
add
mov
sbb
ljmp
cwtl
into
push
add
lcall
jle
or
push
and
imul
fs
test
out
mov
lds
setge
test
iret
out
mov
mov
pop
inc
in
adc
inc
dec
mov
fmuls
aas
repnz
pop
cwtl
fwait
push
imul
movups
out
add
push
test
xor
add
js
dec
sub
push
lock
fidivrs
repz
or
rorb
rorb
mov
cmpsb
mov
es
xchg
pusha
addr16
xor
loop
dec
sbb
cmpsl
aad
sbb
lcall
sahf
fisttpl
mov
nop
sbb
insb
and
rclb
push
gs
hlt
aad
pop
cmpsl
jae
jns
push
mov
outsb
scas
sub
xchg
lret
insb
sarl
jne
in
push
sarl
shlb
mov
fstl
pop
stc
adc
xchg
les
inc
or
push
pop
inc
test
js
lods
cmpb
jmp
xchg
bound
sbb
push
sbb
mov
and
xor
in
nop
xchg
fs
sub
jns
repnz
out
add
in
lods
mov
arpl
and
adc
jo
sub
idivb
cmp
or
xor
nop
icebp
decl
pusha
or
cltd
bound
mov
inc
js
in
mov
push
gs
repz
loop
push
dec
or
in
inc
out
pusha
outsb
xchg
loope
xor
mov
pop
pop
xor
call
sbb
mov
mov
adc
cmc
lods
sub
fwait
ror
pop
push
mov
jmp
or
pop
pushf
xchg
loopne
je
out
scas
lahf
stos
or
dec
jns
cld
iret
cmp
or
sbb
dec
adc
rcll
fldenv
stos
lea
sbbb
add
jnp
mov
inc
cli
test
xor
cmp
fiadds
jno
xor
popf
dec
mov
cmp
xor
jp
pop
or
movsl
xor
and
lret
pushf
subl
int
jmp
jne
mov
iret
ficoml
gs
dec
ss
and
pop
shr
xchg
mov
sub
fwait
insl
pop
push
outsl
mov
shll
inc
mov
sub
inc
dec
adc
jns
and
mov
sbb
sbb
sarb
aaa
jnp
iret
xchg
sbb
xchg
sbb
jle
and
jns
jne
add
mov
jp
sbb
sar
fnstcw
ret
aam
stos
sti
jb
lcall
pop
in
gs
jp
pop
fisubs
sub
loopne
lret
xchg
mov
jle
fdivrs
imul
mov
dec
std
xchg
in
sarb
push
out
sbb
pop
pop
add
dec
pop
push
ljmp
fwait
jge
xchg
mov
sbb
add
ja
mov
jb
leave
xchg
fildl
in
and
and
les
dec
jno
fdiv
jmp
sub
adc
out
in
push
jmp
stc
pop
xor
mov
cltd
dec
movsb
and
dec
xlat
cltd
sti
in
or
xor
les
lods
jne
hlt
xor
fidivrl
and
push
ror
cs
or
out
fimull
sub
pop
cmp
aad
mov
test
das
mov
mov
in
arpl
divb
push
leave
leave
cltd
fsubs
sbb
mov
imul
xlat
lods
adcb
cli
fildl
mov
enter
mov
into
test
cmp
in
add
jecxz
dec
mov
sub
cmp
sub
fsubrl
jns
pop
push
mov
dec
outsb
mov
insl
jae
leave
jno
stc
in
push
orb
into
adc
pop
inc
cmp
repz
mov
inc
repz
out
push
add
stc
xor
adcb
sbb
bswap
dec
lods
negb
cs
or
lods
adc
mul
mov
ja
insl
imul
aam
add
leave
sbb
mov
mov
movsl
cli
jne
arpl
mov
dec
sbb
pop
cmp
stos
sbb
bound
push
sbb
pop
adc
dec
sbb
rcr
dec
xchg
mov
out
es
fs
jnp
push
push
pop
fistps
mov
or
test
ljmp
out
pop
das
mov
outsl
rcrl
cwtl
dec
cli
cwtl
aam
adc
adc
lods
mov
bound
out
lock
push
stos
lea
mov
mov
mov
in
sub
dec
ret
fwait
inc
stos
lods
popa
bnd
lea
fcomi
xor
mov
shrl
mov
and
lock
sbb
jae
dec
fsubrs
inc
leave
push
test
mov
and
push
jmp
mov
cwtl
jnp
cmp
pop
push
mov
add
ret
pushf
insb
pushf
or
das
push
bound
or
dec
cmpsl
mov
hlt
push
adc
out
mov
mov
jmp
pop
mov
call
insb
int
dec
dec
fnstcw
mov
jle
pop
lcall
subl
popf
shll
ss
stc
xchg
push
bound
outsb
in
cld
sbb
sbb
sarl
mov
jns
pop
adc
xor
int3
and
jmp
pushf
cmp
dec
push
pop
icebp
in
mov
sub
add
inc
and
insb
cmp
in
stos
ret
and
sarl
shll
jecxz
adc
inc
sbb
into
out
iret
sti
mov
xchg
repnz
and
int3
imull
aad
pushf
jmp
arpl
push
sbb
cwtl
in
push
ja
aas
xchg
cmp
inc
mov
add
push
mov
xchg
mov
jo
cmpsl
imul
scas
jl
cmp
sti
cmc
cmc
std
mov
push
fstl
pop
lods
shl
ljmp
mov
fsub
add
cmp
sbb
lret
cmc
aam
es
pop
out
jmp
sub
shr
insb
mov
emms
push
xor
xchg
mov
cltd
and
rcrb
sti
jge
cld
cmp
dec
ret
cs
xchg
pushf
cmp
loope
cmp
adc
inc
jae
push
out
std
into
mov
mov
pop
arpl
add
push
jmp
ror
dec
test
and
mov
inc
mov
stos
xor
add
pushf
dec
daa
mov
sub
imul
and
in
ljmp
cmpsb
pop
gs
mov
mov
pop
cltd
jl
or
push
lahf
sahf
jmp
fnstsw
sub
sti
mov
mov
sbb
jne
mov
jmp
and
push
and
movsb
sbb
loope
aas
jae
mov
push
and
pushl
xchg
lahf
cmp
xchg
addr16
int
test
xchg
push
ss
mov
icebp
clc
test
xchg
adc
shl
and
adc
lahf
jnp
or
mov
pop
mov
in
test
mov
and
dec
push
add
dec
mov
mov
cmc
out
movsl
mov
inc
xchg
sub
push
mov
push
mov
dec
iret
test
cli
inc
adc
or
jb
xor
and
std
mov
test
cmpsl
rorl
cltd
sti
inc
pop
jno
mov
outsl
cld
mov
out
xlat
pop
mov
fisubrl
adc
in
shlb
xor
xor
sbb
xchg
cmpsb
pop
jae
jb
jl
fwait
incl
mov
in
pop
pusha
hlt
movsb
pop
dec
lret
pop
xchg
xchg
lds
xor
scas
sarb
ss
inc
pop
inc
std
and
popf
and
stos
repz
push
lcall
loop
push
ja
sbb
arpl
xor
mov
adc
inc
cmp
xor
movsl
dec
insb
sbb
add
sbbl
movsb
pop
fcomps
dec
insb
or
lahf
mov
hlt
xchg
push
mov
adc
roll
cmc
cmp
dec
fnstsw
lds
cld
push
lret
sbbl
dec
lods
sub
add
xchg
xor
push
push
fcomps
adcl
ret
sti
mov
push
fs
sub
xchg
jle
mov
leave
fs
sbb
add
push
ljmp
call
xchg
inc
movsb
je
pop
and
iret
cs
cmpsb
and
fcompl
jno
dec
dec
jae
adc
adc
dec
mov
lock
adc
repnz
and
in
mov
clc
mov
sbb
push
xchg
insb
popa
push
test
movsb
and
push
cmp
xchg
repnz
and
mov
movsb
inc
cltd
rolb
jmp
es
dec
jae
mov
and
jnp
cmp
nop
cmpsb
pop
cmp
out
jne
push
rolb
pop
add
add
push
fcmovb
icebp
or
cmpsb
push
mov
xorl
ret
loopne
and
cmp
cmp
jmp
cli
sbb
mov
out
fidivs
leave
sub
fdiv
bound
mov
cmpsl
dec
cltd
xchg
mov
and
std
pop
dec
adc
pushf
fisttps
xchg
and
and
lea
scas
out
vfmsub213ps
mov
and
mov
jmp
popf
repz
sbb
and
test
inc
stos
push
mov
aaa
push
out
mov
cmpsb
mov
pop
cs
loop
sbb
adc
test
scas
ret
push
cltd
jae
pop
in
or
xor
push
add
movsl
loope
movb
movsl
cmp
mov
mov
lahf
in
scas
or
rcll
cmp
push
ljmp
and
and
daa
dec
xor
stos
mov
out
fimuls
jl
movsl
sbb
movsb
jne
mov
sub
mov
sbb
ret
dec
repnz
fs
data16
ret
xchg
and
leave
mov
pop
pop
mov
out
mov
mov
dec
inc
ljmp
jnp
add
or
sahf
es
mov
mov
mov
xchg
out
add
popf
pop
pop
dec
loopne
lods
inc
jno
rcll
mov
cmpsb
push
daa
mov
fldenv
push
xchg
aam
loop
addr16
inc
rorl
movsl
test
adc
test
shlb
mov
out
xchg
mov
mov
jmp
add
mov
cli
cmp
dec
aaa
add
test
ljmp
aad
lret
mov
repz
ss
xchg
pop
sub
xorl
and
aad
fsubs
in
xor
inc
sub
repz
xor
sbb
stos
lock
jmp
push
rorl
sub
sub
lods
xchg
push
mov
rcrb
cmc
test
mov
pop
iret
cmp
sub
dec
fs
dec
mov
mov
addl
fwait
cmp
jns
sub
mov
js
lcall
mov
movsb
int3
scas
sti
sub
sbb
pop
fisubrs
push
mov
das
jmp
mov
in
pop
jmp
fwait
orb
in
in
pop
test
int3
popaw
jecxz
push
cltd
mov
sub
jecxz
inc
aam
jp
cmp
mov
dec
push
dec
add
sub
mov
lea
stc
popa
jb
and
xor
mov
xor
or
mov
stc
mov
fwait
pop
add
jne
dec
inc
imul
test
sti
xchg
or
aas
mov
mov
je
mov
repnz
cmp
clc
dec
mov
test
cmpsb
lret
push
mov
dec
push
int
mov
mov
fs
iret
inc
aas
in
je
push
fs
cmp
ss
xchg
pop
sarl
mov
ret
sub
in
lcall
es
cmpsb
arpl
ret
xchg
pop
arpl
popf
cmp
out
sbb
add
mov
adc
jnp
and
lret
call
pop
cmp
es
aas
sub
arpl
in
aaa
aaa
mov
es
sbb
rorl
std
test
push
data16
imul
inc
cmp
xchg
push
jge
lods
test
fwait
mov
mov
test
add
push
mov
es
jmp
xor
rcr
mov
lcall
pop
or
insl
lea
jne
dec
inc
pop
dec
movsl
mov
and
and
cmp
jmp
imul
movsl
cmpsb
pop
push
push
lds
adc
pop
sub
dec
add
jne
sbb
push
mov
cmpsb
sbb
cmp
xor
and
pop
cltd
fsubrl
leave
xchg
insl
cmp
loopne
es
push
cwtl
mov
xor
les
cltd
stos
jnp
ret
lea
cmp
pop
dec
iret
jne
inc
jmp
ljmp
inc
push
pop
dec
scas
push
pushf
cmp
outsb
xor
adc
push
adc
jmp
dec
push
aad
jo
dec
popf
addl
and
mov
movb
lcall
movsb
mov
sub
ret
jne
shl
xchg
sub
cmpsl
lock
shr
xchg
jmp
cmpneqps
cwtl
pop
and
fldt
shlb
sahf
jnp
mov
dec
test
fisttpll
push
fdivrs
mov
outsb
mov
js
jae
addr16
fists
je
cmc
jae
in
ljmp
js
mov
push
sahf
jnp
inc
icebp
push
xchg
push
lahf
jmp
les
adc
std
cmp
shl
scas
or
pop
jne
mov
and
dec
cli
mov
mov
je
loopne
test
test
hlt
jb
frstor
js
xor
lods
xchg
mov
imul
out
cmp
arpl
lcall
out
sbb
imul
jns
lret
mov
test
cmpsl
push
in
insb
hlt
jb
idivb
lock
scas
dec
lcall
hlt
lea
pop
adc
xor
outsb
fnstenv
xchg
out
push
or
aaa
add
pop
aam
out
repz
imul
stos
xchg
cli
cmp
imul
stos
aad
outsl
sub
pusha
loope
xlat
test
or
insl
fdivrs
mov
sbb
clc
mov
int3
mov
xchg
cwtl
popf
xlat
xchg
cmp
repz
mov
dec
faddl
iret
lahf
xchg
shlb
or
sub
sbbl
sbbb
sbb
in
test
ret
xchg
repnz
sbb
outsl
pop
mov
xor
pop
mov
out
lds
mov
xor
cmpsl
mov
mov
mov
and
fwait
lret
inc
cmp
in
aam
int
mov
je
fisubrs
push
sbb
int
filds
in
mov
add
lea
mov
decb
mov
out
in
ret
pop
ja
stc
lods
add
mov
jno
daa
xchg
dec
xor
push
push
add
stos
insl
mov
aas
xchg
stos
ds
out
insb
ss
leave
or
mov
mov
or
adc
push
pop
stos
call
stc
repnz
call
int
xchg
addr16
rcrl
cltd
pop
sbb
out
lret
pop
ds
xchg
ljmp
push
add
ret
mov
movl
test
cmpsl
jno
mov
or
jo
cli
pop
and
leave
xchg
jge
fidivs
data16
mov
mov
sbb
stc
ss
add
test
dec
lahf
in
aaa
push
dec
jae
pop
mov
dec
cmp
sti
out
mov
mov
cmp
mov
jge
jp
sub
adc
push
out
jmp
push
and
in
std
in
push
ja
xchg
push
movsl
lea
std
mov
push
imul
test
call
nop
in
xchg
push
in
push
adc
adc
sbb
gs
cltd
aaa
popa
addr16
int3
pop
test
push
pop
mov
pop
enter
fwait
hlt
sbb
aam
xlat
add
rorb
out
les
jle
pop
cwtl
add
fs
fnstsw
xor
lock
inc
iret
lahf
repz
sbb
dec
bound
lds
sub
lods
cs
jp
xchg
mov
daa
inc
jmp
bound
out
mov
mov
sub
roll
and
aas
loopne
inc
or
jae
jp
add
mov
test
xor
repnz
stos
mov
fwait
pop
sbb
add
xchg
push
lds
out
cmpsl
jecxz
add
mov
ficomps
popa
imul
sbb
ljmp
sub
mov
in
aad
inc
in
push
fnstsw
sbb
cmp
ss
ds
pop
xor
lea
ret
sub
sbb
and
xchg
inc
sub
fnstenv
dec
cmp
movsb
mov
data16
ret
test
daa
hlt
sbb
sbb
jl
dec
std
and
arpl
sub
pop
jl
and
in
mov
mov
loopne
outsb
inc
fdivrp
pop
cmpsl
repnz
cltd
mov
es
inc
paddsw
xchg
dec
rolb
and
imul
mov
pop
xor
mov
cltd
xchg
pop
mov
stos
sub
jae
aam
cli
cmp
lds
movsb
out
xlat
outsb
insl
jg
popa
mov
add
inc
mov
xchg
or
mov
mov
les
push
bound
inc
xchg
scas
daa
pop
xor
cmp
jbe
pop
fs
add
sub
arpl
pop
or
int3
cwtl
and
mov
xlat
mov
out
sbb
test
sbb
icebp
adc
sahf
arpl
push
mov
outsl
add
negb
mov
out
inc
aas
pop
gs
push
pop
add
stos
inc
in
jg
sub
lock
mov
inc
insb
lcallw
cld
aas
and
dec
xchg
and
cmp
dec
sbb
scas
movsb
addl
xor
idivl
out
cmpsb
pop
add
adc
leave
cmpsl
rorl
xchg
jo
ds
or
mov
test
pop
mov
sti
out
div
loopne
daa
mov
jb
popf
stc
dec
repnz
fsubrs
adc
mov
and
sbb
cmpsl
movsl
fwait
sbb
lret
movsb
adc
movsl
sbb
xor
inc
cmpsl
sbb
or
roll
pop
sub
sub
dec
xor
push
lcall
push
mov
popf
mov
rcrl
hlt
test
and
lods
sub
cmp
fstps
add
addr16
jne
mov
push
dec
ljmp
cltd
mov
cmp
adc
cmpsl
test
div
sti
push
mov
xor
jb
mov
mov
mov
jp
test
repz
mov
pop
or
je
adc
mov
lcall
out
dec
popa
and
add
pop
fstpl
je
mov
cmp
int
adc
sbb
sub
adc
icebp
pop
lods
movsb
inc
mov
jbe
mov
mov
call
cmpsl
aas
loop
pop
pop
mov
stos
lahf
popf
sti
test
scas
pop
sub
iret
inc
outsb
cmp
xchg
scas
cmp
pop
fucomp
pop
mov
push
int3
adc
cmpl
test
out
mov
rcpps
add
inc
push
pusha
subb
jns
inc
mov
sub
enter
jns
mov
push
pop
fdivl
rol
mov
sbb
dec
popa
std
jge
jae
ffree
repnz
insl
push
fidivrs
cmp
stos
jnp
cmc
mov
push
inc
sub
rcr
subl
je
push
fsincos
jne
xor
cs
addr16
dec
dec
loope
jp
scas
out
sbb
jb
in
xchg
cmp
adc
into
mov
lods
movsl
xor
cld
mov
adc
cmovle
fisubl
cs
imul
xor
xchg
not
mov
jmp
mov
mov
jg
mov
push
psubsw
arpl
test
adc
std
add
cltd
rcll
jmp
pop
cmp
aaa
ss
add
push
jnp
pop
xor
mov
jbe
mov
inc
imul
sub
divl
sar
mov
push
jnp
fstl
in
sub
sbb
stos
mov
fstl
fnsave
outsl
aaa
or
jmp
imul
test
or
inc
lret
rorb
or
inc
pop
clc
nop
jno
jnp
andb
std
or
fistpll
mov
cmp
lret
and
ljmp
in
lcall
imul
jb
or
test
ss
add
xchg
add
mov
push
cltd
xor
sbb
sbb
ja
hlt
stos
out
adc
sbb
jns
xchg
xchg
pop
in
xor
jl
stos
movsb
mov
inc
xchg
mov
and
mov
xorl
ret
inc
rolb
xor
jl
hlt
movsb
pop
cmc
std
test
xchg
xor
aad
and
mov
add
test
cltd
jmp
iret
das
mov
sbb
lea
mov
pop
lahf
fwait
push
mov
in
std
in
ret
jmp
push
sbb
pop
jbe
xchg
sahf
mov
inc
clc
jp
jns
adc
and
inc
js
jmp
cli
mov
inc
insb
jp
push
add
push
push
xchg
inc
shr
enter
lahf
stc
jbe
lods
or
jnp
js
cld
frstor
inc
inc
push
rclb
aam
aas
lods
rolb
scas
icebp
jmp
mov
gs
movb
fdivrp
sbb
cmpsl
mov
pusha
test
and
stos
out
test
push
jp
lret
sbb
mov
out
mov
aas
ficompl
jns
mov
jmp
pop
dec
hlt
mov
cmpsb
jne
pop
push
lea
ja
pop
movsl
imul
xchg
sbb
fistpll
leave
and
fists
xchg
sbb
fwait
push
cmp
adc
outsb
inc
sub
mov
mov
dec
and
clc
gs
cmp
adc
push
sbb
les
iret
outsl
mov
loope
enter
jns
sub
pop
cmpsl
jge
jnp
popf
shrl
pop
push
and
ja
sbb
data16
or
test
fldenv
popa
aaa
inc
mov
es
jne
sub
movsl
and
daa
andl
adc
or
icebp
push
and
cmp
imul
inc
sub
lahf
sub
xchg
and
fwait
dec
push
inc
icebp
xchg
repnz
ja
inc
out
mov
in
sub
mov
lret
repnz
lods
cmpsb
inc
and
nop
and
lds
data16
outsb
and
push
xchg
push
add
dec
movsb
stos
mov
test
xchg
shr
xor
loopne
ljmp
mov
out
and
xchg
sub
cmp
outsl
ja
fimull
and
sub
in
out
out
gs
lods
hlt
rcll
imul
scas
and
pusha
lea
mov
arpl
in
adc
lods
xor
add
hlt
popa
imul
mov
sbb
gs
lock
or
mov
rclb
dec
cs
jge
addb
add
pop
negl
mov
aaa
imul
or
lret
mov
dec
ss
in
push
repz
sub
sub
push
sbb
fst
add
lret
fcmovnu
das
mov
xor
pop
les
cs
sbb
adc
xor
mov
mov
filds
mov
aaa
and
adc
loop
movsl
xchg
pusha
pop
inc
movsb
imul
add
or
jnp
push
test
pop
or
ret
icebp
xor
shrl
jmp
dec
jmp
jnp
push
je
repz
nopl
and
or
testl
fdivl
loopne
ss
test
or
scas
push
cs
std
int
popf
ret
daa
sub
or
mov
jecxz
adc
xchg
data16
and
movl
outsl
inc
xchg
out
sbbl
push
inc
mov
cmp
inc
mov
pushf
jge
xchg
mov
jmp
addr16
mov
jge
push
pop
and
pop
out
sbb
ljmp
repz
enter
ss
push
lahf
inc
cmpsl
lock
push
testl
or
call
jmp
ficoms
data16
ds
cli
add
dec
rcll
lahf
outsb
jl
xor
mov
push
or
pop
cwtl
xchg
xor
xor
push
mov
sub
jno
popa
ss
sarl
adc
cmp
cmc
cs
cltd
les
cmp
mov
aad
push
repnz
cmp
into
adc
cmpsl
inc
push
pusha
mov
add
movsl
adc
adc
dec
imul
inc
mov
xchg
ss
in
lods
lock
mov
arpl
lahf
jmp
sbb
adc
mov
loop
and
adc
adc
lahf
fwait
test
scas
jns
sahf
and
int3
stos
push
inc
xchg
or
insl
stc
push
jl
test
push
daa
out
addr16
add
andb
stos
push
inc
mov
xor
sub
jno
les
jae
mov
fidivl
repnz
dec
and
test
shlb
cmpsb
or
lahf
mov
dec
xchg
iret
xchg
cmpsl
mov
push
shrb
stos
xchg
cmpsb
in
pusha
out
ret
insl
sbbb
lea
xor
cmpsb
mov
and
jo
add
scas
inc
int3
or
into
sub
and
and
and
scas
rolb
test
mov
imul
stc
pop
mov
push
fstpl
sahf
jmp
ss
or
in
adc
leave
mov
shll
ds
and
sub
test
inc
dec
or
mov
xchg
xor
pop
rclb
fucomi
dec
popf
insb
push
adc
popa
lock
push
ret
mov
fisttpll
xor
add
insb
xorl
xor
les
inc
mov
mov
dec
lea
ja
pop
jle
and
mov
mov
pop
pop
xchg
inc
mov
or
sbb
incb
in
push
xor
xchg
xor
fistps
out
cmp
push
mov
in
fs
and
lea
push
pushf
push
ret
fisttps
push
dec
cmp
pop
or
test
daa
cld
in
scas
lret
and
shrb
sub
gs
and
sti
jg
inc
out
fdivrl
fsqrt
sti
xchg
lahf
imul
push
sbb
mov
mov
jmp
mov
data16
int
mov
ljmp
out
dec
negb
inc
aas
mov
push
test
jmp
mov
hlt
stos
mov
pop
mov
inc
mov
std
add
jne
xchg
cmp
or
ret
je
dec
lret
push
push
iret
stc
lock
push
inc
pop
or
and
pop
xor
mov
jge
std
cmp
push
mov
lcall
mov
popf
push
mov
int
fstps
pushf
ds
or
pop
pop
mov
xor
pop
cmp
orl
mov
cmpsb
pop
jg
xchg
xchg
jecxz
cmp
cmc
mov
jp
leave
or
or
repz
dec
shll
popf
pop
push
bound
sub
jle
imul
mov
dec
pop
fs
test
jg
sbb
mov
xor
in
and
push
mov
js
jg
orl
adc
ds
fs
je
sahf
stc
cld
mov
test
out
dec
mov
cli
add
loop
aad
xor
daa
push
jl
mov
enter
adc
mov
inc
imul
lret
inc
cld
shll
mov
fistpll
hlt
jo
push
cmp
mov
and
xchg
mov
lret
sbb
fmuls
push
sub
les
adc
lret
mov
mov
stos
leave
add
fwait
sti
jo
les
and
jecxz
je
adc
std
stos
rcl
mov
xor
in
dec
push
shrl
dec
pop
invd
sbb
xchg
add
out
push
pop
lret
ret
and
rolb
pop
mov
mov
das
sub
sbb
test
mov
sub
mov
adcl
cmp
pushf
push
fisubs
sub
in
aas
cmp
mov
sub
xor
jno
inc
clc
add
xchg
das
push
xchg
jge
jns
or
mov
cs
pop
fwait
cmpsl
pop
std
sbb
add
inc
xchg
dec
dec
fisttpl
adc
cli
aad
pop
int3
ret
inc
adc
jmp
dec
sub
bound
jg
mov
adc
aam
into
sbb
dec
mov
test
das
push
cmp
lret
jl
or
xchg
xor
cmp
push
jae
sahf
sbb
pushf
lahf
out
jae
pushf
pushf
sub
repnz
cmpsl
push
popa
adc
mov
sbb
jns
mov
insl
jecxz
test
pushf
ljmp
pop
pop
and
roll
test
pop
inc
and
shr
bound
cmp
sbb
cmpb
mov
lret
mov
adc
aas
fwait
xlat
in
add
pop
loope
jle
movsl
in
mov
mov
arpl
and
mov
cmp
lods
cltd
cmc
mov
loope
mov
add
inc
loope
rclb
jmp
lret
xor
adcb
and
les
data16
test
movsl
push
pop
out
push
movsb
mov
and
aad
sub
stos
adc
xor
jl
xchg
out
mov
sub
and
xchg
fwait
out
sbb
pop
clc
in
loopne
rcrb
jb
incb
jle
sti
roll
popf
fwait
push
ds
jl
jb
lret
loopne
mov
jnp
or
push
in
rcl
mov
ret
push
fs
adc
fwait
pop
xor
sub
mov
sti
pop
push
push
sub
daa
sahf
jo
in
aad
jg
xor
in
popa
pop
inc
xor
jmp
xchg
aas
mov
sub
int
xor
repz
add
idivb
cwtl
mov
pop
rcr
jnp
sbb
pop
insb
lcall
test
loop
test
hlt
jg
dec
std
pushf
cmp
mov
jne
hlt
xor
or
inc
pop
pop
fnstcw
inc
mov
adc
and
into
mov
push
jno
xchg
xor
clc
sbb
inc
cld
xor
cmp
mov
mov
mov
inc
lcall
jle
test
sub
addr16
pusha
and
imul
dec
xor
pop
fnstcw
cmp
addr16
fimuls
and
lods
and
data16
ljmp
fmulp
pop
out
mov
fcoml
mov
or
lcall
jns
hlt
jne
cli
push
adc
push
lret
aas
xchg
lea
fidivs
adc
cltd
mov
popf
xor
scas
adc
and
ficompl
lds
leave
imul
sbbl
int3
lret
rcrl
dec
jns
push
movsl
mov
sarl
cld
mov
fistl
sbbb
insl
les
xchg
fs
cmp
push
xchg
or
pop
push
mov
leave
mov
stos
dec
push
leave
mov
mov
cmpsb
jmp
and
mov
and
dec
test
sub
cld
push
mov
pop
pushf
sbb
iret
and
test
xor
daa
movsb
iret
dec
dec
pop
cmp
cmp
dec
lcall
in
test
and
mov
lret
add
jge
push
ds
jnp
xchg
sub
fs
call
ljmp
movsl
xchg
mov
mov
movsb
xlat
push
pop
es
push
int3
push
jg
add
pusha
fidivs
mov
pop
out
shlb
ljmp
xor
push
xor
dec
enter
mov
cmp
insl
sbb
mov
pop
movsl
xchg
adc
mov
cmp
xor
rcr
add
cwtl
sahf
cltd
out
push
subb
push
jmp
cmpsb
fwait
adc
loopne
sti
dec
sbbl
sub
pop
jne
xor
aam
jns
or
adc
cltd
mov
jne
sub
in
les
and
mov
in
insl
in
sar
adc
push
jns
test
jge
je
xchg
shrl
ljmp
call
mov
movsl
dec
push
clc
fs
pop
mov
pop
or
lea
push
es
adc
ljmp
sbb
out
repz
cmp
fistps
sbbb
pop
ljmp
push
mov
ret
mov
add
popf
adc
or
fwait
xchg
jmp
pusha
ljmp
add
jge
bnd
jb
pop
call
sub
loopne
popf
mov
insb
fbstp
rcr
sahf
jmp
popf
ret
mov
inc
and
aad
ficoms
add
or
adc
xor
jge
add
shll
jmp
mov
mov
pop
stc
add
sar
inc
sub
in
test
ficompl
sbb
shr
and
mov
sub
jmp
jmp
xor
cltd
cmp
lea
mov
push
sbb
xchg
sub
mov
icebp
fdiv
fidivrl
adc
idivb
pusha
adc
push
dec
xchg
mov
scas
pop
nop
lods
mov
mov
pusha
adc
cmp
pop
lock
test
cmpsl
xchg
jne
addl
test
dec
xchg
scas
addr16
push
or
add
inc
cld
or
push
inc
sub
xchg
gs
cmpl
divl
cs
mov
push
pop
leave
sbb
mov
je
loop
inc
and
pop
adc
test
data16
repz
cmpsb
cs
sbb
lcall
stos
bound
lcall
jp
stos
outsl
sub
cltd
dec
adc
adc
inc
mov
in
cltd
lahf
mov
push
incb
ljmp
mov
push
nop
push
sti
and
or
stc
in
add
adc
mov
inc
call
cmpsl
decb
mov
jecxz
sub
mov
xchg
movsl
cmpsl
bound
nop
gs
fwait
mov
xor
mov
je
out
mov
push
scas
mov
jmp
and
jmp
out
add
std
and
arpl
in
mov
and
pop
mov
pushf
push
popf
pop
pop
lahf
aam
aad
mov
add
les
cld
jbe
rep
mov
xchg
lcall
fcoml
cltd
leave
adc
js
sub
jnp
xorb
fsub
pop
sub
pop
add
mov
scas
int
jno
sub
out
ss
fwait
dec
adc
addr16
dec
jne
les
cltd
and
jmp
test
cs
push
push
pop
movsb
cmc
out
mov
inc
push
pop
and
xor
push
into
push
rorb
and
repz
or
imul
leave
or
inc
stc
in
mov
in
fsubrl
icebp
lahf
sub
adc
lods
add
fisubrl
fchs
jae
cld
dec
daa
adc
js
push
std
sbb
lahf
pop
inc
out
fcompl
lds
call
sahf
xor
add
mov
cmp
loopne
enter
pop
push
push
lea
stos
shl
dec
notl
adc
rol
cmpsb
rcll
pop
sub
add
imul
insb
movsl
mov
and
push
mov
sahf
imul
addr16
cmp
enter
aaa
out
mov
in
cmp
xchg
xchg
push
cmp
imulb
imul
in
push
out
rorl
dec
lcall
cmpsb
inc
pop
movsb
sbb
mov
xor
xchg
inc
pop
stc
pop
out
outsb
in
xchg
ja
mov
test
jecxz
add
cmpl
xchg
mov
out
aad
adc
jg
or
mov
push
jecxz
das
mov
movsb
stos
jl
mov
lea
ljmp
adc
in
in
aad
fdiv
fcoml
dec
pushl
arpl
mov
js
sahf
pop
lret
test
mov
or
add
dec
out
jne
sti
fadd
repnz
jle
popa
push
sub
push
loopne
adc
imul
addl
cs
lds
scas
and
xchg
shl
popf
pop
sbb
mov
pusha
shlb
xor
or
sub
sarb
or
dec
stc
in
jo
sahf
inc
pushf
jns
mov
loop
pop
push
test
loopne
outsb
sbb
mov
inc
cmpsb
dec
popa
mov
rorl
xchg
mov
je
lds
sbb
push
pop
mov
das
dec
lock
inc
inc
in
in
xorl
cmp
sbb
ret
mov
jne
or
insl
xchg
out
repnz
mov
pop
push
dec
mov
enter
in
xlat
leave
or
inc
push
je
ss
sbb
fistpl
jg
cmp
jl
add
mov
mov
pop
andb
inc
loope
in
outsb
enter
cwtl
push
xchg
leave
les
mulb
test
and
aad
insb
mov
ljmp
jp
test
aam
dec
inc
cmp
cmpsl
aad
xchg
push
mov
jnp
mov
outsl
in
mov
out
inc
dec
fildll
jnp
or
pop
jns
push
mov
iret
xor
scas
aam
les
mov
and
popa
push
dec
cmp
and
mov
repnz
jb
push
and
sbb
add
in
pop
inc
mov
jae
insb
inc
scas
mov
ss
cmp
out
xchg
adc
push
mov
cmpsl
pusha
cmp
or
shll
adc
scas
xchg
push
in
xchg
das
imul
dec
push
sub
into
mov
jmp
filds
pusha
sub
addr16
cli
call
pop
cmp
cmp
inc
dec
jp
loopne
mov
mov
mov
xorl
mov
js
and
dec
rcl
testl
lahf
out
and
cmc
cmc
add
push
rolb
loope
sub
sub
mov
jns
inc
sub
inc
xchg
mov
je
cmp
imull
dec
test
adc
loopne
pop
mov
fbld
mov
fsubl
fwait
jmp
cmc
cltd
stc
lds
add
mov
sub
mov
xor
leave
stos
mov
push
cld
fstpl
lods
repnz
jne
scas
and
and
pop
jo
or
lahf
rolb
fstpt
mov
or
cmp
movsb
cmp
add
xchg
rcr
inc
repz
test
sarl
iret
nop
pop
lock
pop
es
je
dec
into
stos
gs
cmpsl
jnp
out
movsb
xchg
jp
insl
dec
fs
xchg
lahf
lock
lcall
xchg
jg
fists
jmp
outsl
xchg
mov
ds
aaa
mov
jle
sub
out
fcompl
scas
mov
rorl
add
cld
sub
xor
mov
frstor
jns
pop
lahf
pop
pop
aad
xor
xchg
roll
rcrb
adc
es
xchg
sbb
out
inc
sbb
into
test
sti
movzwl
lods
sbb
mov
ret
cmp
push
xchg
in
mov
test
rcll
jecxz
xchg
mov
or
dec
mov
nop
and
mov
insl
loopne
xor
pop
xor
rcll
outsl
cs
cmc
cmpsb
adc
mov
mov
pop
dec
sbb
mov
adc
mov
or
in
aaa
mov
jp
adc
mov
cmp
mov
clc
in
js
cmpl
in
mov
mov
je
leave
add
jecxz
push
cmp
mov
adc
mov
out
and
fwait
sti
jb
dec
loopne
sahf
xchg
push
scas
test
push
fsubl
mov
mov
xor
inc
mov
cmpsl
sbb
das
lret
jnp
mov
push
inc
xor
sub
jg
mov
fstps
xchg
int3
inc
rcrl
aad
push
shll
ss
pop
sbb
stc
call
pop
cmp
stc
mov
inc
lahf
dec
out
dec
jne
inc
sub
pop
in
aam
jle
sub
clc
push
mov
add
sahf
sbb
out
movsl
dec
mov
das
les
fs
icebp
add
sahf
mov
rclb
jo
push
es
mov
shlb
ret
and
and
jns
scas
test
inc
mov
mov
shll
mov
stos
adc
es
add
fsubrp
and
pop
in
sub
sbb
stos
andl
push
dec
pushf
js
imulb
out
imul
xchg
xchg
or
push
sbb
addr16
out
push
iret
jnp
ds
sub
or
mov
mov
add
xorl
mov
and
imul
and
les
aas
movsl
stc
gs
pop
nop
mov
mov
ret
lock
xlat
stc
pop
fwait
sub
cmovge
jne
call
daa
out
mov
shrb
test
dec
lds
fidivl
adc
fcoml
outsb
aaa
sbb
cltd
mov
xchg
lock
sbb
pop
mov
mov
mov
cs
mov
mov
mov
ljmp
fidivrs
mov
jmp
inc
mov
mov
cltd
outsb
mov
fs
sbb
les
xchg
sbb
aas
xor
popf
add
pop
xchg
xor
ljmp
pusha
cmp
call
sbb
pop
pusha
ja
lret
gs
bound
fadds
shrl
in
ret
test
add
stos
jnp
push
cmp
scas
push
addr16
inc
ror
xor
fists
xchg
call
cmpsb
jg
sub
pop
int3
jle
out
jg
xor
mov
cli
push
xchg
movsb
fistpl
call
iret
mov
or
mov
in
push
dec
clc
in
cld
adc
add
or
pop
aad
xor
push
sahf
inc
mov
test
push
xchg
fcoml
lret
cwtl
divl
mov
and
mov
pop
pop
out
out
sbb
fcomps
dec
mov
call
stc
adc
and
loope
jmp
cmpsb
inc
out
daa
dec
lahf
sbb
mov
push
and
out
lock
add
xor
mov
or
dec
rcrl
adc
rcll
jno
je
sbb
std
mov
mov
sbbb
hlt
or
or
pop
subb
call
and
pop
adc
push
sbb
and
stos
movsb
movsb
mov
call
test
xchg
and
pushf
dec
jae
or
xchg
jae
jg
jl
jnp
jns
mov
jp
in
mov
sub
ja
push
sbb
sbb
fsubr
dec
stc
mov
stos
or
jmp
dec
js
out
cmpsb
pop
jne
js
ds
or
shlb
rclb
adc
popa
lock
fwait
xchg
icebp
sahf
addb
sti
clc
ret
mov
in
addr16
sbb
mov
popf
stos
sub
cmp
jmp
je
insb
pop
ret
and
cmp
sbbl
mov
loopne
sbb
cmovb
mov
fs
fildl
js
inc
mov
ss
jae
fwait
dec
dec
shl
jb
add
loop
dec
mov
lock
fucomp
lods
inc
cld
aam
leave
mov
cld
pop
nop
pushf
sbb
lret
scas
or
idivb
jno
jmp
in
rcrb
call
andb
fistpl
sbb
and
bound
and
cmpb
mov
xchg
call
jecxz
or
dec
in
push
mov
test
dec
mov
sahf
push
add
cmpsl
sbb
js
xlat
push
addr16
test
sub
mov
test
push
add
loope
mov
push
loope
push
nop
int3
cmp
shlb
add
jmp
xchg
movsl
mov
xchg
xor
in
stos
pop
inc
inc
sbb
add
or
cmp
movsl
and
mov
adc
aam
sbb
test
xchg
sbb
orb
cmp
pop
or
push
fmuls
jne
mov
dec
sbb
sti
fnstcw
fwait
adc
lret
sbb
test
xchg
and
jns
aad
mov
push
test
leave
shl
aaa
fwait
stos
sbb
out
rcrl
test
lret
addr16
fwait
jmp
pop
outsl
insl
mov
pop
lods
aaa
mov
out
pushf
imul
mov
xor
rorb
lds
pop
mull
in
inc
pushl
in
into
call
pop
sub
sbb
lods
pop
ret
mov
cmpsl
or
rcr
sti
shlb
notl
inc
pop
sbb
xchg
dec
xorb
arpl
xchg
push
scas
fabs
std
out
xchg
in
xor
testb
ret
xchg
cmpsb
push
imul
into
aam
add
aam
jmp
jne
sbb
mov
fisubl
and
cmp
pop
test
mov
jl
jae
add
repz
bound
lret
dec
lret
test
sbbl
mov
jp
scas
sbb
and
sbb
jge
movsb
lret
mov
outsb
out
jnp
loope
ficomps
std
stc
shll
or
add
lcall
lret
fstpt
mov
jmp
mov
or
int3
ficompl
jns
mov
inc
push
lea
jmp
sbb
jmp
add
or
aaa
jbe
mov
loop
xor
mov
sbb
mov
pop
or
or
stc
jle
test
scas
rcrb
out
jmp
cmp
pop
sub
mov
inc
mov
outsb
daa
pop
jns
jae
sarb
and
fistpl
shrl
push
sub
adc
xchg
aam
stos
sub
pop
cmpb
outsb
dec
in
xchg
cmp
cltd
outsl
ret
lds
adc
fbstp
sub
mov
stc
insl
cmp
aad
leave
cmp
mov
mov
xchg
mov
and
sahf
dec
push
jle
test
fldt
pop
cmp
in
jl
mov
and
insb
rcrl
aam
cmpsl
dec
ds
push
sbb
lock
sti
jbe
imul
sub
cli
das
js
dec
add
sbb
ret
gs
mov
mov
mov
push
std
inc
sbb
cwtl
cmpsb
mov
pop
dec
lds
mov
jecxz
aad
cmpsl
mov
jno
adc
in
jns
dec
aas
cmp
das
mov
or
adc
sti
and
sbb
xchg
cmp
bound
pop
lcall
cmp
frstor
leave
sbb
es
adc
xor
mov
jl
or
push
sbb
jg
lahf
out
and
into
out
stos
adc
mov
add
jmp
shl
and
xor
je
xchg
shrl
test
jbe
mov
mov
stos
icebp
js
push
sub
inc
inc
push
sbb
dec
jge
lock
jmp
jb
mov
cli
cmp
movsb
and
subl
and
lock
and
leave
les
loopne
arpl
lret
out
divl
loope
aam
mulb
mov
imul
pop
in
xchg
cmp
cmpsl
pop
mov
sbb
mov
or
push
mov
xor
imull
jmp
lahf
insb
dec
push
mov
xchg
out
add
xchg
or
std
mov
cmpb
dec
sub
pop
pop
fsubrl
and
mov
sub
push
mov
dec
inc
and
adc
cli
lret
push
or
stos
lds
and
sbb
and
int3
jns
repnz
xor
aad
mov
movsb
sub
or
out
fwait
cmp
and
cmp
push
jp
in
sub
sbb
addr16
lcall
pop
out
and
inc
dec
push
push
clc
cmp
movsl
dec
stc
jbe
mov
lcall
lds
cmp
sub
push
xor
cmpsl
jnp
scas
mov
jb
cmp
push
dec
xor
mov
push
mov
and
jp
pop
adc
mov
push
sub
shrb
scas
or
mov
dec
bound
daa
lcall
lcall
fdivrs
mov
loopne
stc
pop
push
mov
cld
out
loope
sarl
es
and
mov
rcll
sub
cmp
fnstcw
fsubr
and
in
dec
adc
fs
jle
fldt
addr16
inc
jp
stc
out
xor
xchg
push
push
or
or
addr16
jnp
mov
cltd
dec
cmpsl
hlt
pop
in
ljmp
push
mov
mov
xor
fdivr
popf
add
insl
popa
lret
andl
jl
fldl
add
xlat
pushf
nop
xchg
arpl
call
sub
sbb
leave
or
gs
mov
cmp
cltd
cltd
xor
dec
fwait
aas
dec
movsl
fwait
pushf
adc
arpl
outsl
jge
mov
jge
mov
rcrb
mov
inc
jge
pushf
daa
xor
push
cltd
or
push
lds
imul
push
rclb
cmp
xor
gs
inc
jmp
sbb
add
and
idiv
nop
adc
es
ret
pop
enter
pop
iret
sbbb
test
xchg
negl
ja
cltd
imul
adc
fs
test
sbb
les
push
mov
inc
jbe
pushf
in
ss
jge
cld
add
mov
xchg
mov
adc
es
add
or
gs
push
outsl
jne
pop
fwait
jmp
push
repnz
fsubrs
outsl
fnstsw
or
or
insb
in
ja
pushf
aas
cwtl
fld
mov
or
add
fwait
imul
xchg
rorb
sub
mov
es
idivb
mov
sub
xchg
fdivrl
add
lahf
mov
mov
or
andl
daa
jmp
add
fs
dec
fstl
sti
flds
pop
adc
shlb
inc
scas
movsl
ljmp
pop
cmp
mov
xlat
in
std
or
aaa
pop
adc
xor
mov
popa
mov
hlt
xchg
mov
xor
cld
lret
outsl
mov
in
inc
les
decb
mov
in
dec
mov
push
test
sbb
ja
stos
adc
jbe
div
imul
je
dec
sahf
add
sbb
jmp
cmp
fdivrs
jb
stc
in
or
or
add
movsl
xchg
imul
imul
movsl
addl
pushw
xchg
sub
jo
fists
or
in
xchg
lock
int3
cmpsl
out
lcall
sbbl
fs
ss
ljmp
ja
push
fdivs
ffreep
cmpsl
arpl
mov
ret
stos
iret
or
inc
or
mov
mov
mov
jns
sbb
xchg
mov
and
test
out
push
sbb
inc
sbb
xchg
mov
insl
xor
rcrl
or
repz
and
rcrl
sbbl
mov
push
mov
and
ss
imul
mov
orl
data16
data16
jno
mov
dec
adc
mov
inc
jmp
jmp
flds
sub
dec
mov
sti
out
je
les
pop
xor
fnstenv
dec
ljmp
popf
cmpsb
sti
inc
fldenv
pusha
nop
adc
mov
sbb
ret
pop
and
or
stos
stc
mov
and
mov
xchg
je
fcmovnb
cmp
ret
test
xchg
shll
jnp
mov
pop
nop
adc
sbb
xchg
test
lock
push
rolb
or
mov
xor
push
xor
cwtl
mov
pop
jge
lahf
xor
dec
iret
jne
test
out
lcall
sbb
stos
enter
xor
pop
arpl
add
cmc
push
faddl
push
lea
movsb
jmp
cld
daa
add
lcall
les
lret
mov
shll
cmpsb
push
add
pop
js
pop
arpl
cld
xor
int
cs
mov
repz
dec
add
repz
enter
sub
shl
out
dec
mov
xor
iret
std
and
hlt
arpl
mov
es
pop
jae
xchg
mov
jmp
or
inc
pop
daa
sub
sbb
popf
in
lret
pop
mov
sbb
clc
fisubrs
push
mov
hlt
mov
fsubrs
call
push
mov
repz
xchg
out
add
xchg
mov
stos
dec
jmp
clc
test
shrl
lahf
stos
sbb
push
dec
push
push
mov
jp
cltd
in
inc
mov
fistps
stc
mov
push
xor
xchg
pusha
in
and
fbstp
pop
flds
fs
cmp
mov
sub
idivb
xchg
call
cmpsb
and
shl
testl
dec
push
push
xchg
aam
fs
in
lahf
addr16
cwtl
loop
imul
fs
sub
adc
pushf
jne
or
test
mov
std
cmc
ljmp
stos
xor
sub
test
leave
fstl
mov
call
enter
sbb
mov
je
cmpsb
sbb
cld
bound
push
xor
push
sbb
xchg
in
lds
sbb
repnz
test
int
ja
mov
sub
in
cmp
hlt
dec
jb
lret
and
push
or
mov
movsb
push
push
adc
mov
movsb
fistl
push
jne
mov
mov
bound
movsb
cs
sbb
in
mov
aaa
and
loopne
dec
lds
mov
inc
xchg
pop
xchg
push
dec
mov
or
inc
iret
cmp
xchg
or
fsubrp
mov
je
pop
jecxz
ljmp
add
nop
cmc
sbb
clc
mov
push
std
negb
sbb
push
sbb
and
fstl
jno
cli
test
pop
mov
jg
aad
leave
in
lret
cmp
push
and
sbb
sub
pushf
mov
xchg
xor
lcall
pushf
pop
insb
shll
outsl
fisttpl
sub
add
xchg
cmp
test
test
stos
xchg
lahf
mov
sub
and
test
cmc
ss
js
outsb
and
and
adc
adc
mov
jl
push
mov
jb
idivl
add
sub
scas
rorl
fst
out
cmpsb
fcmovnb
cltd
not
sbb
lock
and
add
hlt
push
xchg
mov
pop
stc
mov
maskmovq
negl
xorb
lcall
mov
hlt
imul
push
int
ret
and
adc
gs
jg
pop
fists
and
sub
cmp
std
xor
pop
dec
fists
mov
es
xchg
repz
mov
and
ror
mov
sbb
mov
mov
add
xchg
fstl
push
xchg
lcall
and
mov
shl
lea
popf
bound
out
or
xor
pushf
inc
cmp
inc
sub
push
aas
add
mov
cld
jp
aas
imul
xchg
mul
sbb
ljmp
scas
cmp
mov
in
jl
stc
push
xor
push
sbb
push
cmp
sub
repz
lcall
pop
test
jecxz
sbb
mov
mov
push
sti
and
std
jl
xchg
cmp
orb
sub
icebp
mov
mov
pop
ljmp
negl
lahf
cmp
mov
push
cs
mov
lods
push
pop
xlat
pop
loopne
sti
sub
rcrl
mov
mov
fwait
out
xor
push
subb
inc
mov
push
add
pushf
ficomps
push
rcr
imull
push
xor
push
test
pop
jmp
lods
bound
mov
add
lret
push
in
lret
ja
pop
int3
and
and
cmp
push
enter
dec
stos
and
imull
mov
in
xchg
sub
mov
push
cltd
or
cmc
scas
add
faddl
std
ficoms
sbb
mov
testl
push
icebp
mov
pop
pop
push
jecxz
adc
sti
insl
jae
adc
cmpsb
jecxz
out
pop
aaa
dec
add
fbld
mulps
std
or
xchg
inc
mov
inc
jbe
in
ss
cltd
cltd
xor
dec
xchg
aad
imul
fnstcw
mov
jae
sbb
mov
xchg
pushf
imul
cwtl
mov
je
mov
xlat
lds
push
addr16
sub
rol
cli
clc
in
mov
cmpl
jle
pop
ja
adc
inc
fsts
xchg
sbb
xchg
psubw
scas
in
or
in
cmp
cmp
pushf
adc
scas
sub
in
je
pop
ds
into
mov
xor
cmpl
adc
rcrb
or
addl
ljmp
mov
dec
jle
cmc
mov
std
mov
jle
dec
enter
ficomps
or
imul
cmp
add
js
lock
js
addr16
out
icebp
lahf
imul
jns
inc
mov
loope
sbb
inc
gs
lods
out
mov
dec
leave
fs
cmp
shlb
or
jmp
cmp
xchg
mov
sahf
jnp
inc
jnp
sbb
mov
loope
jle
je
je
ljmp
pusha
hlt
cmpsb
add
jo
in
dec
or
pushf
shll
mov
push
jp
add
cld
cmc
cltd
pop
cld
xor
fld
pop
push
adc
mov
out
in
rcrb
mov
fdivp
jmp
and
addr16
pusha
or
aad
or
push
aam
jge
xchg
loope
push
cmp
jo
out
and
dec
lret
mov
mov
mov
pushf
xor
call
or
in
test
sbb
mov
mov
inc
ficompl
sbb
aaa
sti
xchg
inc
ljmp
push
cli
ljmp
test
pusha
arpl
dec
fnsave
mov
loop
loope
daa
or
jle
push
aad
cmp
shll
sub
stos
std
pop
lret
jne
scas
out
mov
dec
insl
std
in
outsl
test
adc
lret
push
lret
sub
sub
push
popa
call
lret
xor
aaa
mov
and
fs
daa
mov
add
scas
ret
ret
and
add
call
mov
out
aam
and
add
popa
push
push
inc
mov
xchg
push
cld
mov
fstps
mov
fnstenv
pop
aas
cmp
stos
dec
mov
icebp
push
jmp
loope
outsl
dec
cltd
insl
push
push
jne
outsl
and
stos
adc
bound
xchg
loope
mov
jge
adc
adc
lea
cmp
stos
xchg
pop
xchg
ljmp
hlt
push
leave
les
push
pop
xor
outsb
cltd
mov
jno
nop
xor
mov
imul
stos
rcrb
or
xchg
scas
lahf
fcmovnb
jmp
or
iret
xchg
lods
mov
cwtl
ss
ljmp
out
lcall
test
pop
xchg
nopl
out
or
pop
jbe
pop
mov
aam
inc
add
ss
pop
in
or
xor
add
stos
mov
inc
bound
push
and
sbb
xchg
fisttpll
mov
mov
or
sti
adc
mov
mov
or
jb
and
add
mov
cmp
cltd
push
test
cmc
mov
pop
xchg
and
xchg
cmpsl
mull
cltd
push
sub
test
ret
jno
fildl
mov
out
subps
inc
in
sbb
imul
in
pop
shll
or
add
mov
push
mov
add
in
sahf
mov
mov
addr16
xor
cmpsb
outsb
ud1
mov
rcll
outsb
jecxz
pop
sbb
push
insl
lcall
jl
push
push
cmp
jnp
mov
leave
and
jo
cmp
jg
hlt
in
icebp
fdivl
mov
mov
sbb
xchg
or
rolb
cmpsl
inc
out
mov
and
divl
push
inc
stc
cmp
jb
aas
fnstenv
xchg
push
scas
dec
sbb
stos
rol
cmp
inc
sub
mov
and
sti
insl
mov
out
mov
mov
iret
jo
jne
add
mov
push
sub
call
mov
add
clc
leave
xchg
jp
xchg
pop
and
sbb
pop
sub
push
icebp
lock
mov
push
sub
pop
addr16
cmp
mov
push
sub
int
push
adc
xor
js
and
xchg
cmp
push
mov
cmpsb
aad
jmp
push
sbb
arpl
or
cmovb
mul
scas
dec
mov
dec
inc
pop
xchg
xor
cmp
push
jns
dec
movsb
inc
loopne
xchg
movsb
mov
std
out
stc
cwtl
aas
sbb
xor
rcll
out
les
lea
outsb
xor
andb
pop
jmp
lea
mov
fsubrs
mov
out
mov
sub
mov
js
sub
adc
mov
push
sahf
mov
jmp
jns
repnz
or
sbb
addl
fistps
mov
pop
jp
sub
out
pop
adc
lret
scas
jp
mov
mov
out
add
and
and
popa
js
jp
call
mov
sbb
shll
movsl
dec
ret
xor
sahf
mov
and
outsl
sti
mov
add
js
test
sahf
xcrypt-cfb
cmpsl
daa
xor
push
icebp
scas
or
push
in
jge
or
mov
mov
cltd
jnp
clc
mov
in
je
pop
mov
xor
int
or
sbb
out
adc
jge
in
repnz
stc
inc
jmp
inc
push
mov
push
aaa
js
call
daa
push
addr16
mov
in
fsubp
movsb
out
subl
cmp
xchg
sbb
cmp
pusha
jle
mov
sbb
cmp
fmull
insb
fwait
lret
out
push
insb
xchg
fisttpl
xchg
stos
bound
movb
test
push
stc
mov
fcmovne
pop
ror
stc
mov
jmp
inc
pop
cmp
gs
loope
cmp
faddl
xorb
xchg
or
enter
cld
xor
sti
or
int
jmp
sbb
or
mov
mov
push
std
adc
mov
push
hlt
and
dec
jns
mov
sub
mov
cmpsb
mov
adc
inc
in
mov
lods
inc
mov
add
jo
shll
orb
or
pop
idivl
aad
sub
int
stc
cmp
mov
lds
test
in
cltd
mov
fists
push
pop
outsb
in
inc
cs
ret
push
and
or
jp
jne
enter
cmp
push
push
dec
imul
in
sub
cs
mov
fwait
cld
push
dec
mov
sub
pusha
mov
mov
addr16
jp
xor
aaa
mov
stc
push
jno
or
or
xor
cmc
add
adc
loopne
sbb
xor
leave
fs
cmpsl
mov
rcrl
xor
push
push
test
jnp
in
and
inc
mov
test
xor
std
push
in
cmp
and
mov
cld
inc
das
movsl
push
adc
pusha
jae
shll
outsb
imul
out
mov
mov
dec
xor
cmc
fldcw
sbbb
adc
adc
dec
outsl
jecxz
push
push
dec
enter
mov
lds
inc
insl
sub
xchg
dec
inc
jbe
pop
mov
sub
cmc
sbb
popf
fdivs
in
inc
xor
pop
push
and
cmp
mov
fwait
adc
gs
or
pop
dec
inc
add
adc
jmp
outsb
aam
jmp
test
adc
push
insl
pop
test
shlb
sarb
into
cmpsb
mov
pop
popf
sub
int
jge
xlat
faddp
and
movsl
jno
fsubr
mov
fmul
jno
inc
push
into
push
jmp
or
repz
pop
orl
and
or
sbb
in
mov
sbb
mov
cmp
push
cmp
xchg
mov
je
cmp
pop
ss
jne
call
xchg
out
stos
cli
fisttpll
cmp
fnsave
lods
mov
std
pop
in
ret
xchg
lahf
mov
cmp
mov
in
xchg
lods
cmpsl
jnp
mov
xchg
push
xchg
pop
xchg
mov
and
stos
les
lea
mov
pop
je
and
add
sti
stc
sahf
mov
jecxz
xor
xlat
push
pop
jp
orl
cwtl
mov
mov
sahf
lods
mov
pop
push
add
cmp
out
mov
mov
imul
clc
pop
pop
test
sub
mov
pop
aad
push
icebp
clc
loopne
gs
stc
push
add
ret
push
movsl
cmp
jecxz
dec
pop
pop
mov
xorl
fistpl
and
push
mov
xchg
mov
mov
test
sahf
mov
outsl
das
jmp
mov
test
pushf
out
add
int3
inc
and
mov
fisttpll
mov
outsb
inc
scas
mov
xchg
and
pop
fcoml
and
jno
xchg
lea
mov
divl
ret
sbb
xor
dec
jbe
mov
mov
xchg
jo
loopne
dec
addr16
out
sbb
pop
pop
jmp
mov
arpl
sub
gs
lock
stos
xor
pmaxsw
pop
aam
test
test
mov
dec
test
shll
hlt
in
add
push
fildl
dec
les
idivl
cs
push
lods
insb
push
pop
lock
and
mov
push
xor
shl
fidivs
add
dec
push
aas
push
mov
mov
stos
fistpl
into
ret
mov
push
lahf
jl
nop
mov
fildl
adc
add
fistps
insl
jno
cmpl
cltd
sub
mov
and
mov
xchg
push
notrack
mov
cltd
loop
scas
mov
mov
popf
xor
fnstcw
adc
ljmp
mulps
mov
movsb
mov
lds
add
xorb
xor
dec
cmp
cmp
and
or
stos
adc
stos
hlt
shl
inc
adc
xor
aaa
repz
fsts
cs
inc
pop
or
xchg
ret
fs
pop
out
mov
adc
jns
or
push
lahf
repnz
inc
cmc
fists
int
leave
ss
sbbb
stc
jbe
mov
and
int
outsb
aas
lret
imul
pop
aaa
addb
mov
icebp
lods
pop
mov
jg
fistpll
sti
sbbl
aam
lods
scas
mov
stc
int
les
mov
mov
xchg
adc
mulb
hlt
lret
sub
lds
insb
jns
push
xor
pop
push
sahf
or
sbb
jne
pop
sar
adc
mov
repnz
aad
frstor
sub
mov
movsl
pop
icebp
ffree
rclb
xlat
mov
mov
sub
mov
pushf
fmul
xor
hlt
hlt
sub
hlt
divb
mov
pop
mov
push
outsl
gs
pop
call
in
pop
mov
lea
test
xor
push
push
push
movsb
cmp
mov
xor
in
mov
ja
inc
and
sbb
loop
sub
sbb
outsl
cli
push
jnp
mov
mov
pop
sub
mov
int3
std
dec
cmovle
popa
add
gs
mov
mov
sub
jae
insb
movsl
cmp
in
fisttpl
mov
inc
bnd
pop
mov
push
fbld
lods
clc
mov
sbb
bound
rcl
mov
fnstenv
xor
inc
or
mov
and
pop
cld
and
jb
add
bound
inc
mov
out
cld
jbe
cld
addb
add
xchg
push
daa
xor
or
push
or
jecxz
adc
mov
push
add
jo
mov
pushf
mov
mov
dec
fsts
mov
jns
aad
pextrw
sbb
jmp
sbb
dec
mov
jmp
cwtl
ss
leave
push
lock
aad
mov
loop
shlb
and
test
cmp
out
xchg
roll
repz
test
sub
adc
cwtl
sbbb
sbb
je
std
dec
pop
or
or
outsl
add
sti
nop
dec
sbb
or
ds
popf
ljmp
fsubl
adc
push
mov
fwait
mov
movsl
mov
xchg
insl
inc
lret
mov
nop
cmpsl
push
or
mov
or
xor
repnz
in
cld
sbb
sbb
jbe
out
sarb
movsb
pop
loope
jo
aas
push
ror
mov
or
mov
mov
ffreep
sbb
push
adc
jbe
fwait
sbb
test
mov
or
mov
enter
mov
and
outsb
or
test
rclb
cli
fxch
cmpsl
sbb
movsb
fidivrs
jmp
es
fistps
or
das
adc
adc
lock
inc
leave
out
sbb
mov
pop
push
lods
dec
mov
das
enter
push
xor
mov
bound
lds
or
insb
repnz
mov
lods
cmp
push
faddl
shll
lods
and
addr16
xor
sub
stos
aam
inc
sbb
sarb
fiaddl
xchg
sti
inc
out
mov
icebp
inc
subl
xor
mov
int3
out
cmc
adc
js
cmp
jg
jns
movsb
verw
loop
sahf
pop
repnz
jb
dec
mov
stc
sub
pusha
mov
adc
push
test
pop
mov
shlb
mov
aad
inc
lret
sbb
ret
add
std
add
adc
xchg
sbb
xchg
scas
add
lock
sbb
cld
inc
add
sti
mov
mov
lcall
jp
sub
mulb
add
and
inc
pop
cs
mov
xchg
xchg
mov
in
pushf
pop
clc
test
sahf
mov
ljmp
and
adc
xchg
iret
lea
sbb
pop
sbb
scas
sahf
scas
sub
es
stos
and
fwait
fwait
shl
rcl
cmpsb
adc
xor
add
jne
std
push
adc
scas
adc
add
jle
fcoml
test
mov
mov
clc
cmp
leave
mov
inc
stos
out
sub
jg
ljmp
and
push
and
mov
scas
mov
sub
mov
adc
imul
clc
fsubl
pop
es
sub
sbb
cmp
repz
shrl
and
lcall
lahf
push
cmp
mov
mov
jns
nop
adc
push
add
cmp
cmpl
adcb
aad
das
popa
jmp
hlt
nop
gs
stos
fstpt
cmpsb
icebp
xor
mov
insb
mov
cmpsb
mov
adc
cli
mov
call
sbb
mov
cmpl
or
lods
push
and
xor
movsb
icebp
mov
rol
and
dec
mov
xor
xor
loope
test
xchg
jecxz
popf
dec
movsb
sbbl
jecxz
or
xor
repnz
movsl
enter
mov
push
inc
xchg
jo
push
xchg
pop
push
lahf
mov
jle
cmp
push
insb
lret
repnz
mov
mov
pop
out
loop
sbb
add
js
pop
and
dec
jnp
push
mov
out
movsl
fucomip
or
sbb
ret
jno
cmp
sti
push
out
fimuls
lea
mov
pusha
pop
out
arpl
lahf
dec
les
lcall
push
jnp
dec
aad
aas
pushf
pop
add
mov
repz
dec
stos
jae
mov
xchg
inc
xor
repnz
add
push
shrl
cli
push
pop
jmp
mov
les
int
cli
mov
aaa
stos
popf
aaa
call
mov
or
xchg
jg
and
dec
xor
sub
mov
out
add
and
call
in
repz
jecxz
cmpb
jecxz
sub
rolb
jmp
xor
lret
xor
jo
lock
notl
inc
mov
js
pushf
cmp
sub
rcrl
mov
test
movsb
and
jmp
cmp
mov
mov
dec
test
lock
mov
in
shrb
pop
mov
mov
test
cmc
test
sbb
lods
inc
enter
fwait
lret
stc
sbb
jnp
lea
xor
pop
rcl
dec
mov
sbb
mov
xchg
ret
xchg
xchg
or
pusha
leave
shlb
gs
lcall
pop
in
sbb
shrb
dec
mov
movsb
inc
push
pop
xchg
fwait
mov
mov
jg
out
mov
out
cmc
mov
lock
lret
out
aad
cmp
out
mov
cmpsl
or
jle
pop
push
push
repz
sub
ret
xchg
pop
pop
mov
jmp
lock
ljmp
pop
dec
cmp
mov
push
xchg
push
repnz
adc
sbb
xchg
jle
lahf
fwait
cmp
xchg
mov
in
push
push
or
repz
xor
pop
jl
xor
jl
rcrl
push
pop
and
lahf
push
stos
jg
add
in
and
out
imul
mov
lods
out
mov
out
ficoml
xchg
int
dec
lret
enter
push
pop
push
in
add
pushf
xchg
add
push
leave
and
jno
int3
into
sbb
insb
rorl
sub
sbb
mov
aad
aam
ja
fsubr
push
test
lahf
xor
jnp
ja
sbb
sbb
mov
inc
dec
shrl
movsb
cwtl
repnz
adc
xchg
jge
mov
aaa
mov
add
cld
out
sarb
or
scas
mov
jmp
mov
push
iret
stc
and
loop
fwait
popf
cmp
cmpl
pop
lock
sar
pcmpeqb
out
aaa
pop
xchg
loop
mov
in
jb
push
cmp
adc
mov
mov
sbb
sbb
sbb
or
gs
mov
pop
sbb
mov
or
out
jo
adc
fsub
inc
cli
xchg
cmp
inc
insl
and
jno
and
addr16
xchg
xor
mov
fbstp
shlb
movsl
dec
pop
jl
or
dec
inc
aas
aam
xchg
in
pop
mov
cld
testb
ja
adc
add
iret
repnz
xchg
inc
cmp
pop
xchg
idivb
mov
cmpsl
mov
outsb
and
fmull
jle
mov
xor
into
push
pop
push
test
xor
sbb
aaa
mov
or
stc
sub
rolb
sbb
xor
cmp
in
lret
jg
xchg
inc
push
or
mov
jns
cmp
inc
jg
mov
stos
pop
ss
aas
xor
and
push
mov
out
nop
cwtl
fstpt
in
hlt
inc
fcomps
sub
outsl
pusha
sub
or
out
sub
rolb
push
push
in
mov
jae
cltd
jle
jb
icebp
fidivrl
cs
pusha
incb
lret
jne
lds
call
and
cwtl
rol
movsl
pop
push
xchg
fistpll
xor
test
fs
nop
call
inc
mov
rcrb
xchg
push
xchg
mov
dec
xor
js
or
in
test
scas
and
into
int3
sahf
outsb
stos
leave
and
mov
out
xor
jmp
shr
sahf
out
test
jnp
push
or
inc
pop
mov
mov
adc
dec
mov
and
repz
adc
jae
add
mov
cmpsl
roll
data16
mov
sbb
scas
mov
xchg
rcrb
or
shlb
mov
shr
sbb
mov
xchg
mov
xchg
lret
outsl
out
add
in
cmp
fisubrs
pop
fidivl
ret
out
pushf
hlt
fisttpll
mov
xor
pop
xor
in
mov
jecxz
fs
mov
mov
push
testl
repnz
sub
pop
xchg
xorl
sbb
lods
dec
dec
popf
cld
popf
bound
sbb
mov
stc
add
lods
rorb
and
mov
lock
cmpb
pusha
add
pop
cmp
ficoml
mov
adc
xor
mov
jmp
push
adc
je
repnz
aaa
aas
mov
and
xlat
dec
movsl
mov
push
jmp
cmp
and
les
scas
add
lahf
ja
or
adc
sbb
cltd
sti
and
mov
mov
sub
mul
nop
aam
pop
mov
cli
and
loop
sbb
adc
sbb
mov
shrl
mov
cmpsb
mov
aam
loopne
flds
sub
out
pop
fdivrl
cmp
mov
addb
lcall
lea
or
mov
sub
mov
imul
shrb
test
outsl
dec
xchg
les
cld
mov
sub
xor
loop
inc
gs
jmp
pop
das
or
inc
dec
mov
out
mov
xchg
jbe
mov
fimull
xchg
fisubl
ja
xchg
sahf
lret
pop
data16
aad
loop
xor
clc
into
hlt
or
sbb
add
inc
and
pop
sub
fists
pushf
jae
cmp
lahf
mov
dec
jl
lahf
push
sub
pop
nop
jne
insl
icebp
cmpsl
data16
lds
jg
push
mov
mov
mov
push
jl
mov
pop
jns
std
push
aas
repnz
les
ret
in
mov
andl
mov
mov
dec
leave
cmpb
fmull
lretw
push
cmpsl
aam
or
inc
in
and
push
sbb
test
cld
pop
cmpsl
or
sahf
outsb
and
jns
jl
push
mov
push
push
cmp
addb
fildll
add
div
je
pusha
xchg
icebp
ds
outsl
in
fldlg2
in
in
xchg
ret
cli
mov
data16
xchg
cmpsl
loop
mov
fs
inc
mov
inc
xor
in
sbb
sbb
stos
es
mov
or
or
dec
add
mov
lcall
out
shl
push
adc
jb
sub
jge
lods
cmc
adc
scas
adc
sti
xor
xchg
mov
orb
test
cli
or
sub
gs
test
cmp
ja
and
mov
loop
popf
aad
dec
xchg
mov
pop
movsl
push
mov
and
movsb
xlat
jne
mov
das
jmp
mov
lods
jmp
fs
mov
addr16
je
inc
mov
outsb
sub
inc
rorl
mov
stc
lock
jge
push
inc
stc
jmp
sbb
notl
and
sti
out
inc
jp
mov
hlt
inc
mov
mov
pop
and
inc
mov
sbb
jmp
jne
arpl
mov
daa
mov
push
mov
adc
mov
repz
outsb
mov
cltd
push
in
xchg
lcall
sti
and
popf
daa
shll
adc
mov
ss
ljmp
dec
jl
lock
mov
inc
repz
sahf
adc
mov
xor
push
push
arpl
push
sub
sub
in
shll
dec
inc
in
insl
mov
fistpl
stc
enter
jge
cmp
cmp
xchg
fistl
lods
jmp
fwait
cmpsb
inc
mov
fwait
jmp
sub
add
or
xchg
mov
xchg
cmp
mov
subb
in
sbb
xor
or
cld
mov
insl
mov
sub
and
sbb
inc
repz
call
in
in
sbb
sti
push
pop
mov
sbbl
stos
sub
lcall
xchg
sbb
push
inc
pop
repnz
pushf
pop
xlat
sub
adc
sub
xchg
xlat
ret
jnp
xor
xor
sysenter
xchg
mov
pop
push
dec
hlt
sti
aad
test
pop
into
mov
aaa
or
fisttpl
aam
jge
push
mov
and
movsb
insl
bound
and
scas
mov
leave
push
js
loopne
or
and
mov
fs
cmp
adc
lret
hlt
sbb
adc
and
pop
mov
mov
out
lock
bound
mov
cmp
mov
and
adc
call
movsl
sahf
xor
imul
xchg
push
mov
dec
das
rclb
fstps
add
xor
imulb
mov
insl
data16
iret
pop
sub
xor
into
out
je
cmp
push
xor
bound
pop
jecxz
in
push
fwait
pop
inc
adc
aam
mov
jbe
xor
ret
push
add
cmp
dec
sub
adc
pop
xor
sbb
lods
jo
xor
jge
outsl
jne
loope
push
hlt
idivl
xchg
push
mov
jmp
cmpsb
sub
repnz
pop
inc
push
xchg
notl
mov
jge
fdivl
ljmp
mov
mov
aam
xor
scas
sbb
aas
ja
xor
mov
xchg
pop
push
add
sarl
imul
test
sbb
out
and
mov
mov
sub
adc
sub
or
loopne
pop
sub
stc
mov
add
clc
cmpsl
cmc
pop
add
mov
loop
jnp
mov
dec
mov
xor
sub
and
lods
adc
adc
xor
pop
rclb
popa
mov
inc
push
cs
mov
gs
inc
outsl
test
mov
mov
xchg
fisttpll
in
fldenv
int
xor
sub
outsl
sub
push
out
insl
sbbb
jne
push
sbbl
hlt
rorb
mov
pop
pop
fiaddl
in
lods
push
daa
push
add
test
adc
lcall
add
or
shlb
and
mov
jo
mov
pop
jae
mov
pusha
xchg
rcrl
ja
es
push
push
dec
int3
in
mov
inc
stos
mov
outsl
sbb
jmp
test
das
xor
ret
mov
xor
adc
imul
inc
leave
xor
in
dec
scas
xchg
add
jmp
inc
outsb
aas
mov
push
xchg
jp
fists
adc
xchg
test
sahf
leave
xchg
lret
jmp
xor
fisubl
movsl
mov
push
jno
mov
sbb
xor
pushf
nop
add
leave
jl
fnstsw
mov
xchg
cmpps
out
aaa
mov
jo
in
inc
popa
and
mov
xor
cwtl
mov
sahf
fiadds
cwtl
mov
les
sti
or
sbb
loopne
mov
pushl
add
lcall
push
int
or
push
mov
inc
inc
cs
push
xchg
out
jmp
or
jb
push
mov
das
mov
inc
lcall
or
jne
and
xchg
or
sbb
pushf
inc
or
fisttps
lret
mov
inc
mov
insb
loope
xchg
jle
dec
dec
loope
popf
push
push
mov
mov
scas
jmp
repnz
mov
pop
adc
cmpsl
xor
arpl
aad
xchg
xor
cmp
inc
cli
das
pop
leave
push
in
push
jmp
xor
test
sub
dec
or
xchg
gs
xlat
xchg
sub
mov
loope
movsl
gs
into
dec
jbe
imul
jbe
popf
or
in
out
aam
mov
inc
pop
jmp
inc
ret
jle
sub
push
inc
shr
fisttps
xchg
adc
fs
dec
jno
idivb
je
mov
mov
aam
add
cmp
loop
sbb
cmp
lea
sub
sbb
or
lds
cmpsl
mov
popf
test
mov
and
movsb
shr
fs
or
iret
mov
call
adc
fidivrl
sbb
mov
outsb
fisubl
mov
mov
and
js
mov
mov
lods
jne
mov
ret
sbb
pop
cld
popf
jge
cltd
fistl
and
cltd
push
mov
andl
or
in
cmc
sbb
cs
je
pop
pop
std
inc
jnp
mov
inc
pop
or
push
lods
add
sbb
dec
sarb
and
dec
cmp
jns
out
ss
lcall
dec
xor
mov
xlat
je
testb
jae
fdivs
jne
sub
das
sbb
in
sub
in
add
push
dec
and
pop
lds
push
dec
arpl
std
in
out
and
pop
dec
push
and
sub
ja
add
lock
inc
xchg
cmp
jecxz
jp
and
push
mov
rcl
pushf
inc
pop
in
in
das
xchg
rcrl
out
lret
push
test
inc
add
test
movsb
xor
cld
adc
and
shl
add
push
sbb
rcl
clc
popl
loop
imul
fnsave
test
ret
test
outsl
jge
das
mov
jb
xor
xor
loopne
push
cmpsl
lock
imul
cmpsb
jb
fwait
and
inc
lret
jbe
sbb
dec
dec
sarl
adc
xchg
mov
add
mov
popf
adc
pop
fstpt
xchg
or
pop
inc
icebp
data16
push
hlt
sbb
inc
xchg
rcr
test
call
and
push
enter
add
push
cmp
mov
jae
rorl
les
movsb
jnp
add
jbe
leave
pusha
popf
push
jge
pushf
dec
push
dec
rcl
push
pop
in
mov
lcall
sbb
movsl
inc
rcll
ja
jnp
xor
fwait
sub
call
inc
repz
xor
fisttps
cltd
arpl
outsb
adc
clc
cwtl
mov
or
sarl
dec
ret
sbb
inc
xchg
and
scas
sahf
dec
jmp
cmpsb
pop
dec
or
mov
int3
jg
cmpsl
repnz
out
hlt
lds
pusha
in
xor
test
lods
outsl
mov
or
in
in
xchg
or
mov
int
lods
jne
test
aad
dec
fsubs
mov
lahf
adc
push
test
mov
mov
adc
xor
mov
sbb
inc
or
mov
mov
jge
dec
aad
jnp
mov
scas
test
loopne
decl
mov
cltd
inc
sub
cli
in
cmpsl
pop
in
sbb
aad
stc
jo
hlt
out
mov
push
xor
cmp
inc
xchg
lahf
bnd
mov
cmp
icebp
sbb
movsb
cmp
inc
xchg
push
mov
jge
and
and
push
scas
out
or
dec
cmp
mov
and
mov
je
mov
xchg
inc
hlt
dec
push
gs
repz
mov
push
rcrb
inc
mov
dec
enter
lods
out
inc
mov
leave
xor
in
xchg
and
mov
sbb
pusha
xor
push
jbe
pushf
xchg
in
sbb
xorl
outsl
mov
adc
mov
mov
frstor
cli
jne
movsb
jno
dec
cmpsb
sbb
jle
mov
out
lock
sub
test
sbb
fwait
popf
mov
jle
ds
xchg
les
pusha
scas
jle
cmp
mov
jg
xchg
inc
sbb
mov
xchg
nop
mov
or
mov
push
xlat
mov
test
clc
pop
sbb
les
sbb
jmp
pop
mov
inc
or
sahf
dec
push
stos
jae
xor
adc
xchg
clc
fldt
cmp
jp
or
dec
xchg
sub
sbb
mov
cmpsl
ja
mov
cmpsb
push
outsl
mov
leave
lea
and
jae
out
xor
clc
adc
call
jae
ficompl
xchg
adc
inc
mov
mov
out
sbb
fstpl
add
jge
negb
movsl
imul
ds
push
repz
je
aaa
sbb
test
dec
lds
arpl
dec
adc
mov
mov
pop
rorb
les
sub
fidivrl
mov
test
sti
jecxz
sbb
out
rorb
and
jno
jne
hlt
pushf
or
lretw
jecxz
xchg
mov
lea
pop
in
adc
xchg
hlt
insb
lea
xrelease
fsubl
iret
inc
cmp
inc
push
and
jg
insl
mov
rcll
fstps
xchg
add
adcb
subl
movsb
jmp
push
jns
mov
xlat
out
aas
fnstenv
jmp
sub
mov
xorb
lods
and
or
stos
iret
mov
iret
xchg
out
push
pop
pop
in
dec
in
shll
jne
mov
daa
test
xchg
hlt
xchg
movb
icebp
mov
inc
es
jl
and
repz
cmp
mov
pop
pop
mov
mov
sbb
cmp
add
sbb
mov
iret
mov
leave
xchg
stos
push
out
sbb
pop
sub
in
dec
in
push
cmp
add
mov
stos
loopne
add
test
fucomi
iret
xchg
clc
adc
jo
dec
lods
pop
xchg
inc
mov
mov
call
mov
jle
mov
dec
cli
idivb
fs
mov
or
mov
mov
jne,pn
cmp
dec
aaa
pop
stos
push
cmp
push
nop
call
test
popa
test
out
pop
mov
sar
adc
out
mov
lock
and
or
aam
and
sahf
pop
lret
jmp
movsb
push
mov
mov
adc
xchg
sbb
mov
in
and
or
ljmp
dec
push
daa
and
lods
mov
add
mov
stos
xlat
jp
lods
cltd
xor
lahf
xor
and
test
sub
mov
sbb
mov
ret
sub
pop
jle
lret
push
in
rorb
mov
mov
out
test
add
sbb
pop
xorb
inc
pop
rolb
inc
adc
movsb
loope
jo
addb
in
scas
push
bound
gs
mov
scas
pop
push
mov
jno
clc
lds
cmc
fstpl
testb
test
cld
loope
dec
addr16
jne
xor
adc
bswap
inc
jle
push
xchg
jbe
repnz
or
std
inc
dec
inc
mov
inc
add
aad
pop
gs
pop
sub
xor
test
repz
pop
push
xchg
fisubrs
cmpsl
stos
jae
jae
push
test
outsl
mov
push
scas
push
ffree
fwait
rol
fcompl
bound
sbb
xorl
inc
mov
fsubp
adc
mov
loop
shl
maxps
mov
in
dec
mov
or
mov
addr16
sub
push
mov
mov
pop
lcall
faddl
ss
enter
push
fdivl
jns
pop
sbbb
dec
in
ja
mov
movsb
pop
dec
and
and
lcall
adc
or
cmp
in
stos
lret
and
lahf
push
mov
push
mov
outsb
cmpsl
mov
in
pop
mov
or
movsb
mov
inc
push
jg
cmpsl
imul
ljmp
icebp
repnz
ds
fwait
out
inc
lcall
xchg
push
add
push
imul
dec
repnz
adc
push
xlat
sbb
pop
je
aad
inc
in
adc
push
sbb
test
stos
outsl
push
inc
jns
out
push
sbb
cmp
xor
scas
clc
push
cwtl
aam
in
es
mov
stos
cli
adc
aad
xor
ljmp
and
jle
push
shll
sahf
cmp
inc
jp
push
and
addb
inc
cld
out
xchg
divl
out
push
mov
cld
stos
fwait
popa
pop
cmp
jae
test
in
test
gs
cmp
inc
cltd
sub
in
out
xor
icebp
jae
cmp
mov
adc
out
push
jge
or
and
adc
in
and
lods
xchg
int3
cltd
push
mov
cmc
inc
std
iret
in
push
out
idivb
mov
mov
mov
and
jns
fsts
ret
icebp
lds
les
xchg
aam
inc
movb
sub
fwait
notb
xchg
sbb
leave
fnstsw
in
int3
in
movsl
xchg
je
jl
mov
xchg
sbb
and
out
ret
mov
jg
xchg
and
addr16
fwait
dec
jge
insb
les
and
mov
aad
add
mov
repz
push
ret
cwtl
hlt
test
bnd
mov
add
bsf
pusha
sub
je
mov
pushf
pop
mov
data16
xchg
ja
sbb
fwait
mov
mov
mov
push
cmpsb
xchg
xchg
in
and
sub
add
fnstcw
pop
jl
jnp
push
add
inc
mov
cmpsb
in
call
adc
test
insb
pop
jp
mov
jbe
sti
ret
pop
push
pushf
xchg
and
enter
lods
cmpsb
mov
clc
orb
out
add
or
sbb
int3
js
loopne
in
in
sbb
jge
std
popf
dec
sti
mov
imul
cmp
aad
push
out
into
test
aas
cltd
je
push
add
push
andb
cmp
mov
push
inc
mov
out
pop
insb
movsl
and
inc
xchg
stos
test
jecxz
mov
in
lea
push
push
xchg
adc
mov
xor
mov
inc
sub
rcrb
xor
jge
add
ficoms
xor
mov
jge
fldcw
mov
shl
pop
pop
out
sbb
pop
fldt
mov
daa
arpl
add
and
aas
cmpsb
imul
ljmp
xor
cs
mov
mov
call
add
sub
aam
std
push
mov
jnp
push
jae
scas
lock
mov
mov
jl
in
jbe
or
and
jmp
ret
mov
and
shll
call
mov
sub
into
test
pop
rcr
dec
mov
or
cmp
shll
mov
mov
and
icebp
dec
fwait
imul
xchg
cltd
stos
aad
outsb
sbb
jnp
fisubs
inc
adc
sub
mov
int3
repnz
inc
xchg
orl
xchg
dec
jp
lahf
jnp
icebp
or
or
add
ret
imul
in
jns
xor
fscale
loop
cmpsl
jnp
test
imul
cmp
into
xor
or
call
lds
mov
inc
sub
dec
mov
and
movsb
and
mov
inc
lds
arpl
pop
imul
ret
nop
jp
push
mov
adc
mov
push
test
shr
sar
in
sub
out
push
shll
push
popa
jp
lret
out
outsb
xchg
pop
jmp
and
inc
mov
shll
fs
cmpsl
shlb
or
aam
lcall
mov
ret
clc
xor
mov
das
and
int
stc
push
mov
outsl
pcmpgtd
es
push
push
cltd
fwait
mov
xor
xchg
and
xlat
test
mov
testl
les
sub
pop
lcall
xorl
dec
aad
fldl2e
int3
or
sub
call
pop
iret
jbe
add
mov
or
and
inc
cmpsl
cmpsb
outsb
mov
push
add
jp
aad
mov
push
int
mov
outsl
lahf
mov
mov
mov
out
fcom
out
loope
aam
aam
jp
mov
iret
sub
leave
sbb
inc
cltd
pop
in
cltd
mov
repnz
pop
cltd
mov
ret
fwait
or
xlat
leave
imul
add
or
aaa
mov
add
rolb
cmpsl
out
sarl
inc
lods
popf
jne
sub
push
enter
call
sbb
mov
and
lret
mov
out
inc
outsb
ret
faddp
lret
mov
stos
or
cmp
pop
in
and
dec
pop
mov
jg
and
adc
clc
jmp
jne
push
movsl
in
xchg
cmpsl
jmp
adc
inc
xchg
or
add
clc
push
out
nop
lock
pop
sbb
cmp
mov
sbb
ret
cmp
and
sahf
addr16
mov
jne
mov
repz
push
xor
jns
xchg
and
es
or
mov
inc
repz
icebp
sbb
mov
cmp
pop
lock
ret
push
sbb
ja
push
lcall
leave
and
fidivl
ds
and
mov
icebp
mov
adc
popf
adc
xchg
sub
cltd
repz
inc
add
dec
push
mov
xor
jp
out
xor
push
pop
mov
mov
pminub
popf
xchg
repz
or
sbb
push
ret
mov
inc
hlt
xor
in
leave
sbb
pop
outsl
pushf
pushf
mov
adc
leave
mov
sahf
or
jle
xchg
movsl
clc
pop
xchg
inc
pop
out
fstpl
cmp
std
mov
sahf
mov
outsb
adc
mov
repz
jl
cwtl
ljmp
push
inc
jmp
gs
sbb
mov
pop
dec
xchg
std
adc
xor
jns
andl
sbb
pop
mov
sbb
pop
ljmp
mov
ja
shll
les
mov
gs
lock
inc
inc
and
in
daa
cmovbe
xor
mov
xor
adc
xchg
dec
cmp
sbb
lcall
stos
adc
and
inc
cmp
cld
cltd
lahf
mov
or
ljmp
data16
jno
std
cmpl
inc
shlb
jecxz
push
sub
insl
loopne
push
push
pop
in
in
iret
lret
lods
stos
leave
cmp
cmc
dec
or
fnstcw
jg
ret
imulb
inc
inc
jmp
jecxz
mov
dec
add
xchg
repnz
and
setbe
sbb
adc
into
mov
mov
es
insb
mov
cmp
push
iret
out
xor
clc
xchg
outsl
jmp
lock
loop
mov
ret
pop
aas
and
rorl
sub
cmpsb
push
les
xor
sahf
pop
pop
dec
shlb
dec
push
movsb
arpl
cmp
adc
xchg
dec
mov
or
or
stc
jecxz
add
lods
rcrb
out
sub
sbbl
jp
mov
sbbb
inc
xchg
cmpsl
sti
fwait
test
shll
dec
ljmp
jae
icebp
jg
pop
gs
fwait
les
push
push
mov
sbb
dec
imul
test
stc
mov
cmp
and
negb
cmp
or
mov
inc
xchg
aam
inc
enter
lcall
mov
mov
ficomps
sub
je
cmp
pop
mov
xlat
adc
fwait
add
mov
push
jecxz
bound
bsr
lahf
mov
and
movups
mov
and
xchg
cmp
sub
ret
sarb
je
add
sub
test
sub
jno
lods
lds
loopne
fst
test
in
sub
insl
sahf
cmp
xchg
push
pushf
xchg
ss
neg
and
add
xchg
push
incb
sub
ret
cmp
add
out
cltd
xchg
or
pop
insb
mov
stos
mov
movsb
add
cltd
stc
call
mov
outsb
and
lods
gs
fld
pop
dec
pop
in
add
pop
fsubrl
add
movsw
xor
cmp
aaa
in
push
pushf
fwait
xchg
test
sub
or
out
vcvtsi2ssl
mov
push
call
mov
and
stos
sbb
mov
sbb
mov
mov
mov
pop
mov
mov
stos
sbb
jb
mov
push
add
mov
mov
out
or
add
ss
adc
les
out
jmp
jb
in
jg
xor
idivl
aad
adc
sbb
and
cld
fwait
mov
mov
mov
jbe
fcoml
sbb
mov
shlb
sarl
dec
cmp
push
dec
adc
loopne
mov
lea
and
mov
or
lret
out
dec
xor
fists
xchg
push
add
neg
pop
push
arpl
dec
sub
test
movsb
pop
add
cltd
mov
dec
pop
ss
mov
enter
xchg
inc
inc
sbb
movsb
test
xchg
and
pop
pop
jbe
xchg
call
mov
repnz
mov
adc
cli
push
sub
pop
ljmp
jno
xor
fisttps
ficomps
adcl
push
mov
cli
mov
orl
push
int3
out
adc
subb
in
aam
in
inc
sub
imul
iret
hlt
jle
jg
push
ss
adc
ljmp
mov
rorl
mov
jb
pop
test
dec
xlat
mov
dec
hlt
fldenv
aam
dec
loope
adc
fidivs
movsb
repz
pop
mov
pop
loope
es
xor
cmc
das
mov
and
adc
mov
jnp
bound
mov
mov
sahf
add
mov
adc
in
push
mov
mov
dec
sbb
insb
shlb
scas
jo
mov
xchg
xor
rolb
sahf
mov
popa
cmpsb
mov
xchg
ss
xchg
push
loop
mov
adc
cmp
sbb
mov
ja
nop
rorl
movsl
push
inc
adc
mov
insb
into
icebp
cmp
stc
mov
cmp
movsl
mov
loopne
jns
mov
sti
jle
xchg
lods
dec
hlt
hlt
cmp
fnstsw
mov
pushf
mov
div
adc
adc
push
and
test
in
xchg
aam
scas
adc
cmp
mov
inc
xchg
jae
xor
xor
xlat
insl
mov
lahf
fstpt
pop
or
adc
and
pop
push
mov
fdivr
sahf
popf
dec
dec
roll
clc
push
push
sbb
push
cmc
test
sbb
imul
or
loope
mov
lahf
push
sbb
sub
and
and
stc
fmull
mov
xor
push
scas
mov
cltd
adc
dec
icebp
pop
cmp
sbb
xchg
clc
cmp
cwtl
add
mov
test
mov
movsb
jae
or
xchg
lahf
arpl
mov
outsb
adc
loopne
mov
mov
loopne
and
mov
and
arpl
cmovp
inc
into
out
inc
mov
cmp
mov
insb
fidivs
imul
jp
test
jmp
in
int
and
add
data16
mov
push
je
filds
mov
pop
jg
cli
iret
movsl
in
and
ret
fisubrl
cltd
imul
inc
movsl
outsb
pop
sbb
ja
mov
pop
lods
pop
xor
pop
jne
out
insb
push
push
jge
add
mov
out
out
into
pop
dec
aad
jb
ds
dec
test
jno
adc
jmp
mov
dec
jb
and
imul
or
pop
sbb
addr16
gs
sbb
push
nop
mov
leave
sarl
dec
xchg
jo
js
aaa
lock
or
bound
jno
test
sub
lahf
jecxz
insb
mov
icebp
sahf
mov
lret
xchg
cli
enter
dec
push
arpl
orl
test
mov
xor
push
cmpsl
xchg
cmpsb
sahf
push
dec
add
sar
dec
pop
sti
sti
xchg
pushf
sbb
cwtl
push
sub
cmpsl
pop
test
es
mov
out
sbb
xor
mov
pop
imul
cmp
leave
jmp
pushf
xchg
and
pop
cmpsb
test
adc
or
loope
pop
pop
mov
les
add
lock
cmpsl
out
and
lcall
sbb
fbstp
jmp
test
fstps
jns
and
les
dec
pop
mov
out
pop
xchg
push
test
sbb
movsl
dec
or
or
jmp
add
dec
popf
mov
insl
inc
and
adc
jo
addr16
aaa
jmp
inc
int
and
sarb
adc
mov
push
push
es
and
inc
xchg
pop
and
dec
cmp
mov
sahf
mov
stos
adc
mov
fnstcw
gs
add
inc
lahf
add
xchg
jge
xor
mov
sbb
pop
cld
outsb
xchg
and
fmuls
xchg
add
lcall
sbb
pop
scas
and
sbb
gs
ret
xor
enter
mov
sbb
inc
xchg
or
mov
xchg
mov
lret
jae
and
daa
pop
test
mov
fsubrl
and
dec
mov
mov
fstl
out
mov
and
aad
cmp
lea
negl
cld
pushf
movsb
add
pop
in
mov
sub
cmp
xchg
hlt
adc
inc
or
and
push
xor
sbb
test
fmul
icebp
sbbb
sub
mov
ja
xchg
mov
inc
cmpsb
jbe
pop
adc
cli
sbb
scas
sbb
sub
inc
les
stc
xchg
iret
sub
sub
divb
mov
cltd
int3
adc
lahf
mov
cmp
xchg
call
pushf
mov
cmp
call
mov
xor
adc
sub
xchg
xchg
nop
or
rcrl
pop
adc
xor
test
stc
ljmp
adc
cmp
pop
out
add
inc
lods
pop
adc
pop
ss
hlt
fbld
ja
jbe
cmp
xchg
repnz
out
jle
or
and
lcall
jge
pop
xor
mov
add
stos
mov
cmp
lock
movsl
scas
mov
xchg
cwtl
mov
dec
stc
xchg
dec
or
in
aaa
test
or
jne
jbe
lods
dec
cmp
pop
jl
je
cmpsl
sti
mov
or
jge
jno
mov
push
imul
and
aad
push
mov
in
pushf
sbb
jge
daa
mov
scas
dec
mov
mov
gs
mov
fmul
lahf
lods
and
int
push
stc
jp
test
das
lods
mov
aad
mov
mov
pusha
inc
adc
mov
cmovnp
orb
shlb
divb
sbb
pop
mov
or
movsl
in
xchg
mov
inc
or
dec
xchg
mov
cld
xchg
mov
or
jg
sbb
shrb
sbb
cmp
adc
mov
mov
and
mov
sbb
or
mov
popf
gs
stc
ret
test
jo
or
xchg
and
pop
mov
sbb
lret
xchg
xchg
aam
ficoms
arpl
or
dec
imul
test
out
outsl
xchg
jp
jmp
jnp
addr16
inc
add
fstps
out
pop
ret
enter
push
pop
inc
repz
sbb
cmpxchg
repnz
sarb
mov
fcmovnbe
sub
dec
mov
and
daa
mov
stos
jle
cmp
xor
pop
jle
mov
push
loop
out
cwtl
cltd
xchg
mov
out
jge
cmpsb
popf
cmp
fnstsw
jmp
out
mov
test
and
sahf
sti
dec
fwait
xlat
nop
test
pop
adc
mov
cmp
mov
out
lret
jle
fwait
incb
fstps
lret
xor
xchg
aas
movl
add
rorl
mov
dec
shlb
outsl
sbb
sbb
icebp
mov
sub
out
call
sub
lcall
push
jmp
daa
popa
xor
push
dec
xlat
lret
mov
cmp
mov
rcll
cmp
rolb
sahf
lods
jl
repz
jnp
adcb
jmp
fldcw
in
cmpsl
mov
fcoms
dec
or
mov
addr16
out
int
test
leave
sub
or
dec
aam
dec
jmp
add
adc
popa
xchg
pop
out
or
adc
mov
add
iret
inc
cmp
adc
ds
ficomps
leave
scas
movsb
xor
or
pop
adc
pop
xchg
outsl
mov
jae
xor
mov
addl
repz
mov
mov
mov
loope
sub
or
ss
push
pop
and
mov
dec
pop
pop
test
dec
inc
mov
push
cmp
or
sub
inc
fiaddl
test
or
jns
fs
sti
ret
popa
mov
and
mov
imul
sub
sbb
mov
lcall
add
sbb
jmp
insb
arpl
sbb
mov
cld
addr16
out
scas
outsb
xor
xor
or
jle
jnp
ret
fidivl
push
dec
scas
cmp
sbb
add
cmp
repnz
shrl
shlb
xchg
movsb
sti
push
sbb
adc
paddusw
icebp
push
mov
and
cmovbe
clc
mov
sub
dec
sbb
dec
xchg
pop
enter
xchg
cmp
js
dec
cmp
inc
sbb
add
movsb
sub
insl
leave
inc
mov
out
push
sbbl
push
jb
add
sbb
mov
add
and
push
aam
mov
loopne
mov
and
dec
cmpsb
cltd
inc
adc
pop
or
jne
mov
in
dec
lds
add
jo
ss
mov
in
imul
cwtl
mov
test
aad
jne
push
in
push
insl
push
mov
cmp
adc
sub
adc
clc
out
lcall
push
xor
dec
add
push
cmp
scas
mov
mov
js
insl
cmc
xlat
inc
and
xor
repz
xor
les
mov
sbb
jmp
push
leave
push
jmp
push
rorl
mov
inc
loopne
and
inc
sbb
and
gs
cmp
cmp
clc
inc
dec
sbb
mov
push
pop
aam
dec
in
gs
enter
and
call
packuswb
jg
mov
xchg
shl
das
outsl
loopne
aaa
clc
bound
mov
in
sub
rclb
jnp
out
mov
and
adc
and
or
push
jge
mov
insl
in
mov
mov
clc
pop
pusha
lea
jle
loop
mov
ret
adcb
lock
pop
pop
push
sbb
scas
cmp
and
out
sbb
mov
ret
lods
mov
popf
or
xchg
inc
insl
push
mov
push
mov
fnstsw
stc
lret
pop
xchg
mov
dec
mov
stos
sub
dec
popf
jno
jmp
adc
mov
push
xor
adc
gs
jbe
mov
mov
mov
mov
or
rcr
mov
pop
loope
cmp
decb
mov
ret
ja
les
fidivrs
and
jmp
movsb
sti
adc
xor
ljmp
pop
sbb
dec
in
fstpt
or
push
or
aam
and
sti
out
mov
call
test
sti
sub
mov
cmp
xchg
scas
or
dec
stos
mov
cwtl
sahf
stos
jae
std
push
loopne
sub
leave
and
stc
sbb
imull
dec
push
xchg
xchg
inc
cmp
add
mov
xchg
mov
xchg
jmp
repz
xor
xrstors
and
into
sbb
inc
push
mov
sub
inc
popf
jnp
lods
cli
rorb
mov
sbb
xlat
iret
mov
loopne
xchg
mov
aaa
mov
sbb
into
jnp
cmpb
mov
push
push
xor
cmp
and
imul
and
push
sub
mov
dec
test
or
xchg
addr16
mov
cs
cltd
mov
cmp
adc
add
imul
or
jbe
sub
sbb
cmp
sbb
scas
out
test
cli
add
sub
adc
mov
pushf
imul
push
loope
sbb
enter
xchg
into
adc
sub
jns
or
and
lret
mov
out
gs
mov
jl
cmp
xchg
scas
cmpsl
mov
jp
add
mov
outsb
fwait
stos
aas
push
fstpl
leave
xchg
sahf
scas
rcrb
mov
das
fisttpll
lds
sub
xchg
test
or
in
or
and
test
es
or
and
es
jmp
fistl
push
jl
fcomip
ficoms
add
shl
mov
aad
imul
call
mov
fldcw
setp
in
jne
mov
lods
ficomps
out
int3
jne
addr16
sti
add
andb
jecxz
test
orl
aad
mov
cmp
jle
xor
fdivrs
iret
sub
mov
adc
pusha
scas
daa
jge
in
jne
call
cmc
mov
out
push
pushf
jb
or
add
xlat
and
mov
or
lods
int
popf
sub
dec
sti
or
jmp
mov
rolb
leave
xchg
sub
push
sub
sbb
stc
jle
fimull
lret
insl
jp
push
mov
outsb
cmpsl
mov
movsb
dec
outsl
fwait
or
cmpsb
xchg
shll
push
enter
jmp
int3
or
dec
adc
dec
pop
gs
lods
testl
insl
mov
pop
shlb
out
fs
mull
mov
cmpsb
push
scas
mov
add
adc
test
mov
js
loop
addr16
mov
aad
inc
lret
test
arpl
lock
sti
xor
jb
inc
xchg
insl
xchg
mov
loope
mov
loop
mov
stos
mov
ss
test
lds
cli
mov
mov
mov
mov
pop
push
mov
insb
mov
imulb
fs
hlt
add
adc
repnz
cmp
and
mov
pop
add
dec
test
andb
inc
cltd
mov
sbb
fcomp
sti
ss
sbb
cmpl
jge
cmp
enter
xchg
sbb
mov
std
adc
lcall
outsb
add
test
mov
or
in
add
cmc
pusha
outsl
out
or
push
call
test
fs
xchg
movsl
sbb
mov
mov
jmp
pop
jo
xchg
mov
in
fildll
push
aas
xchg
test
sti
mov
imul
mov
mov
test
aaa
jg
adc
inc
filds
mov
sbb
cmp
sub
vmwrite
push
adc
sbb
or
jg
cwtl
into
push
sbb
sbb
cmpsb
mov
pushf
mov
push
out
out
cmp
cmp
or
cli
mov
cli
push
in
or
mov
mov
xchg
mov
loop
sub
sub
sbb
sub
fisubl
add
ds
aad
imul
jge
mov
dec
in
sub
xchg
cwtl
pop
fldpi
lock
repnz
xor
sbbl
inc
test
sbb
sbb
outsb
xchg
in
xor
in
sbb
rcrl
or
icebp
inc
jb
nop
cmpsb
xchg
mov
test
ljmp
jecxz
or
leave
sbb
gs
jmp
jl
andl
dec
aas
mov
mov
int3
js
push
mov
call
push
sbb
fiadds
adc
jns
cmp
sbb
ja
sub
push
test
or
test
xor
ja
addr16
icebp
and
push
mov
outsl
pop
imul
test
rol
aad
or
dec
call
pusha
lock
scas
xchg
sbb
dec
das
mov
cmc
xchg
cmp
jmp
push
into
add
cs
jmp
insb
jns
xchg
rol
icebp
inc
pop
xor
dec
mov
cmpsb
out
inc
jns
and
or
in
xor
icebp
jg
dec
mov
leave
sbb
movsb
arpl
or
sub
stc
sub
jl
dec
push
pop
pop
stos
and
cmp
lods
cmpsl
and
arpl
in
test
and
and
xchg
sub
leave
xchg
flds
push
mov
insb
test
add
ja
in
repnz
loopne
mov
sti
xchg
mov
je
repnz
hlt
add
jge
mov
push
xchg
out
push
dec
call
cmc
mov
iret
jle
sbb
mov
sbb
adcl
out
rclb
push
cltd
cs
sbb
movsb
pop
bound
cmp
ljmp
mov
daa
xchg
incb
xchg
popf
jns
push
cmp
test
push
cmpsl
movsl
push
lods
pop
je
mov
mov
jle
or
mov
mov
in
in
ds
fs
rcrl
scas
orl
test
lcall
ss
jp
pusha
shr
add
mov
mov
push
pop
add
mov
mov
or
ljmp
dec
push
push
xor
pop
pop
fildll
nop
mov
fmul
std
mov
into
jp
sahf
push
adc
je
mov
scas
outsb
lcall
lea
mov
xor
fisttps
and
pop
aad
fisubrl
js
mov
mov
iret
push
mov
add
rolb
inc
mov
lock
rcll
pop
scas
and
in
add
xchg
sbb
repz
cmc
mov
dec
mov
inc
ficomps
outsl
test
and
jg
inc
pop
lcall
push
mov
dec
test
hlt
inc
jbe
jns
nop
shr
jmp
pop
sbb
inc
xorb
sahf
jnp
aam
popf
and
mov
jle
mov
lret
bound
lahf
dec
fwait
inc
pop
jbe
jns
repnz
mov
pop
fwait
mov
sub
loope
jnp
jmp
pop
insl
aam
imul
pop
sti
dec
push
sub
stos
out
lret
das
jo
movsl
sti
dec
stos
sub
inc
std
sti
push
and
mov
mov
aaa
cltd
dec
fdivrl
jns
movsl
xor
leave
sub
mov
sbb
iret
lods
lea
jmp
dec
lock
sub
das
adc
gs
or
aam
lds
fstps
pusha
xor
fisttpl
sub
or
jns
xor
sbb
inc
xor
lcall
mov
repnz
cld
xchg
aad
push
sub
push
jns
movsb
scas
ret
lret
hlt
add
ljmp
sbb
ja
mov
mov
mov
fisttpl
dec
push
and
mov
mov
xcrypt-ecb
cmpsl
into
push
pop
aad
mov
stos
or
leave
xor
dec
fsubrl
mov
stos
xor
ja
test
pop
in
push
inc
xchg
adc
adc
stc
mov
popf
cmc
in
jecxz
mov
insb
test
and
jl
and
and
icebp
mov
sbb
pusha
pop
sbb
popf
fcmovu
ret
mov
out
xlat
xchg
decl
in
fwait
pop
inc
sub
mov
xor
pushf
sbb
stos
dec
sub
cmp
xchg
sub
popa
push
mov
add
sbb
sysexit
mov
sub
pop
iret
test
jl
mov
jg
xor
jle
cmp
sbb
push
out
hlt
mov
dec
test
loopne
mov
xchg
lcall
mov
pop
or
lcall
xor
inc
add
arpl
xchg
shrb
ss
stc
cmpsb
sti
jecxz
fnstenv
icebp
es
in
ljmp
movsl
aam
out
and
pop
jp
inc
enter
test
fidivrs
int3
cmp
cmc
pop
and
mov
push
iret
mov
fs
sub
xchg
or
jp
leave
rorb
xchg
adc
in
arpl
push
sbb
aam
fistpll
adc
int
push
inc
push
cs
dec
cmp
lds
mov
rcrl
hlt
cmp
pop
cmpsb
mov
dec
hlt
stc
fsubr
fists
mov
cmp
lds
push
mov
mov
movsl
imul
ds
lods
sub
add
cmp
arpl
mov
mov
xor
mov
lret
fbld
int3
jbe
ret
mov
andl
sti
popa
test
xchg
movsl
pop
repnz
lods
out
cltd
imul
test
stos
jbe
push
loop
mov
scas
push
jns
push
and
sbb
xchg
mov
lock
lds
xchg
dec
enter
pop
mov
leave
pop
adc
add
gs
outsb
out
mov
jb
ss
xor
jnp
in
jbe
das
stos
mov
jae
in
les
xchg
lret
jb
icebp
filds
push
pusha
inc
fildl
rol
stc
in
dec
lock
sti
push
xchg
push
hlt
pop
cmp
adc
adc
in
jne
cli
xchg
sbb
aad
push
sbb
xor
leave
add
hlt
clc
mov
lods
repnz
imul
js
sub
or
mov
jmp
mov
or
sub
ret
enter
sbb
loopne
out
jb
shrb
or
mov
jge
sti
into
jno
inc
mov
imul
nop
or
mov
xchg
daa
ljmp
es
inc
addr16
testl
hlt
xchg
sahf
add
xor
stos
loopne
dec
add
and
out
roll
ss
iret
stos
inc
xchg
lea
daa
loope
insb
test
cmp
push
mov
outsb
or
ljmp
adc
dec
xchg
or
repz
mov
jg
add
xchg
add
mov
cmp
dec
rclb
jne
pop
push
or
mov
pop
inc
icebp
xor
mov
or
xchg
imul
mov
mov
stos
xor
mov
test
xor
test
gs
or
push
jmp
adc
inc
rolb
jecxz
imull
arpl
mov
loopne
hlt
cmpsb
dec
insb
enter
mov
xchg
jns
adc
mov
jne
push
mov
pop
out
xor
int3
jo
and
shl
dec
mov
mov
sub
mov
outsb
aam
shlb
mov
mov
sub
pop
cmpsb
jmp
rol
fcmove
fld
inc
lds
and
sbb
gs
out
pop
cmp
sbb
aad
pop
jbe
mov
fcmove
fucomp
je
adc
mov
adc
add
sbb
mov
pushf
add
pop
repnz
and
jmp
cwtl
stos
enter
or
orl
aad
outsb
ret
mov
movsb
adc
jmp
jmp
and
stc
xor
imul
sbb
and
aam
mov
addr16
add
dec
lahf
hlt
adc
and
mov
int
gs
in
enter
inc
es
mov
les
add
rcll
and
imul
sbb
les
enter
pop
call
insb
mov
add
ja
popa
and
jns
mov
divl
xlat
add
inc
mov
lods
push
das
lods
daa
test
int3
mov
test
lock
push
or
sbb
mov
dec
in
imul
scas
mov
jne
sbb
aad
sti
sbb
icebp
daa
out
inc
add
mov
lds
and
imul
mov
sbb
xlat
xchg
mov
sub
xor
xor
sbb
jbe
mov
ja
dec
ljmp
ds
push
add
insb
mov
mov
push
jg
mov
sbb
je
and
leave
rclb
jnp
fisubs
jge
mov
xchg
mov
dec
aam
add
cmpsb
pop
lret
and
mov
out
shll
add
mov
movsb
test
push
pop
xchg
in
inc
sbb
cli
ja
mov
xor
push
lds
mov
rcll
pop
mov
mov
rorb
cld
movsl
pushf
add
and
jmp
sbb
inc
iret
jns
lods
scas
in
sbb
sahf
mov
xor
push
in
mov
imul
dec
xor
cmp
or
lahf
sub
fisubs
adc
popf
es
inc
jno
push
notl
addl
mov
addr16
sbb
mov
or
cmp
fwait
testl
je
pushf
sub
repnz
jbe
fcmovne
push
mov
mov
add
into
mov
or
mov
or
sti
mov
pushf
call
and
in
fs
int
ja
and
add
jg
or
sbb
sbb
test
cmp
loop
mov
lods
sbb
bound
aad
ljmp
pop
fwait
aas
movsb
mov
push
into
jne
or
testl
test
and
adc
mov
jle
js
lds
cld
mov
movsb
sti
and
popf
jmp
cwtl
or
pop
mov
sub
jmp
cmp
and
mov
sar
int3
orb
inc
out
jbe
mov
xchg
adc
xchg
sahf
cmpsl
sti
aam
and
mov
xchg
sub
jmp
popa
mov
pop
add
in
and
test
daa
inc
shr
lret
xor
mov
pop
add
lret
stos
out
pushf
out
jnp
jp
push
and
and
push
adc
fsubs
out
and
mov
adc
add
imul
xor
int
mov
in
push
sub
and
das
mov
xor
xchg
mov
and
les
mov
lods
cmpb
fwait
daa
lret
xchg
sbb
mov
stc
scas
lret
xchg
hlt
insl
call
dec
sub
insl
mov
dec
adc
out
inc
xchg
push
mov
test
test
mov
dec
loope
mov
loope
cltd
cmp
mov
pop
push
arpl
push
imul
ljmp
call
jmp
jmp
xchg
inc
adc
test
bound
inc
adc
jae
arpl
add
in
jo
in
int
dec
xchg
mov
and
lahf
into
and
ja
add
pop
dec
imul
xchg
pop
pushf
xchg
js
nop
test
ja
mov
add
ret
and
aas
cmp
sub
lahf
sbb
rorl
dec
xchg
sub
cwtl
movsl
sub
mov
dec
mov
cmpb
fistpll
lods
gs
out
xchg
or
inc
cmp
pop
push
test
dec
push
mov
mov
and
fsubr
dec
pop
imul
into
fwait
jmp
test
rorl
nop
movsb
frstor
jmp
jmp
outsb
movsl
pop
sub
in
popf
orb
cli
int
jo
jae
lods
or
dec
jnp
jns
fidivrl
push
pop
stos
xchg
bound
scas
dec
mov
or
mov
push
mov
aam
xlat
je
cltd
sbb
repz
dec
scas
cmpsb
mov
mov
mov
mov
icebp
les
jno
mov
xlat
lea
mov
push
push
inc
xor
cmc
mov
fadds
xchg
jmp
and
push
stc
jno
seto
out
cli
mov
mov
bnd
in
mov
sbb
xchg
loopne
jmp
mov
xlat
fwait
sub
cmp
sarl
mov
addr16
cmp
sub
xor
and
dec
adc
push
pusha
add
cmp
fsubs
xchg
jmp
cltd
sub
mov
aam
mov
test
sti
dec
cmp
insb
addr16
mov
loope
and
and
sbb
pushf
cmc
mov
adc
pusha
or
je
cltd
mov
dec
mov
fadds
shrb
enter
push
hlt
dec
jb
jmp
push
push
cltd
loopne
int
xor
mov
pop
mov
faddl
mov
inc
inc
icebp
mov
fwait
sbb
sub
repz
push
mov
sahf
in
push
mov
xchg
jns
xchg
jg
pop
push
mov
mov
xchg
lret
and
pop
out
jg
mov
xchg
jge
repz
mov
xor
sbb
cltd
jge
int3
addl
mov
stos
ret
mov
jl
paddd
xchg
aad
xchg
sub
in
mov
pop
xor
sbb
pushf
cmp
and
xchg
cmpsb
stos
je
repnz
out
jge
inc
mov
cmp
adc
bound
mov
or
push
jl
push
adc
in
arpl
bnd
popf
gs
pop
dec
mov
mov
and
fisubs
aas
sbb
add
cli
jns
sti
aad
idiv
data16
lods
pushf
xor
mov
leave
fs
int
and
mov
fsubs
jae
push
cmc
or
inc
ret
sub
and
mov
sbb
inc
pushf
cltd
jmp
lods
cmp
push
sub
cmp
jo
test
sbb
outsl
imulb
and
imul
bound
pop
fisttpll
xchg
mov
add
jnp
push
insl
mov
fldt
pop
nop
jo
je
aam
icebp
mov
mov
push
mov
sub
lds
pushl
test
push
into
cmp
mov
fdivs
sbb
dec
lcall
out
jp
mov
mov
inc
int3
mov
xchg
mov
in
xor
hlt
and
cli
ljmp
and
cmp
pop
gs
jp
into
imul
cmp
jne,pn
call
test
mov
or
mov
pop
stos
out
cltd
xchg
jmp
out
in
adc
push
push
inc
mov
sti
xchg
sti
orl
negb
cltd
add
jne
nop
mov
mov
pop
hlt
adc
mov
mov
ja
ffree
cmp
js
outsb
sub
rclb
xor
imul
mov
sbb
cmpsb
push
sub
in
shl
mov
mov
bound
jnp
insl
push
sub
mov
cltd
inc
cltd
testb
and
cmpsl
out
and
add
xchg
or
jecxz
push
mov
iret
das
and
cld
pop
pop
mov
inc
cmc
sbb
es
in
in
pop
sbb
mov
ficomps
mov
xor
in
lret
fs
cmp
xchg
pop
dec
jmp
push
pop
stos
shll
js
in
mov
rcrl
add
sub
bound
xchg
push
mov
or
faddl
ss
pop
jp
out
sti
xchg
clc
outsb
test
pusha
mov
push
sbb
lret
ljmp
addr16
or
idivb
push
mov
clc
adc
mov
and
pop
adc
sbb
lret
ljmp
sti
arpl
xor
jmp
cmc
aas
jge
dec
mov
xlat
imul
out
lret
enter
dec
push
sub
push
push
cwtl
xchg
lods
je
test
sub
je
out
mov
push
mov
pop
jae
ljmp
mov
mov
mov
fs
les
out
call
jmp
loope
xchg
lret
mov
dec
outsl
cs
mov
add
in
icebp
xlat
adc
pop
lods
push
cmp
mov
outsb
sub
jg
mov
mov
int3
inc
sbb
scas
sbb
faddp
dec
cmpsl
fimuls
mov
iret
pop
mov
scas
ja
push
stc
daa
pop
je
mov
out
cmpsl
in
xchg
das
and
xor
push
pop
xor
lcall
test
fistps
stc
popf
shl
or
setle
xchg
stc
test
data16
into
mulb
and
push
pusha
cmpl
in
cmp
jmp
lret
push
xchg
mov
lret
test
sub
subl
adc
dec
gs
sub
cli
addr16
aaa
test
or
jne
dec
repnz
sbb
shll
flds
rcrb
sub
iret
shrl
adc
dec
xchg
loopne
dec
and
xor
dec
add
jmp
aaa
or
out
inc
sbb
pop
lret
aas
stc
leave
xchg
sub
popf
mov
ljmp
push
pop
mov
lret
pushf
sub
loop
adc
sbb
pop
fmul
popf
or
loope
add
mov
mov
cld
negb
xchg
iret
dec
xchg
jne,pn
pop
mov
aaa
mov
cs
sub
add
sub
fwait
and
jns
mov
or
mov
xchg
mov
or
test
mov
and
mov
adc
pushf
mov
stos
jmp
movsl
sbb
push
movntps
mov
cwtl
add
ficompl
xchg
int
cs
fdivr
cmc
mov
insl
jo
gs
loopne
hlt
push
cmovns
rolb
scas
dec
cltd
sbb
push
add
out
push
sub
lods
cmpsl
sub
adc
xor
mov
mov
repnz
filds
mov
mov
xchg
js
cwtl
int
mov
aas
inc
into
notw
cld
lods
xchg
xchg
jge
lcall
insb
adc
inc
mov
mov
push
ss
jo
fucomp
jl
test
push
out
mov
adc
cltd
lahf
sbb
jae
mov
xor
jb
xchg
cltd
push
das
or
dec
inc
lods
lcall
mov
mov
gs
mov
dec
mov
jmp
scas
and
mov
push
mov
pop
sbb
mov
lds
lret
or
cs
push
stc
mov
loope
xor
cld
test
jge
lcall
cmp
int
test
test
lea
aam
jmp
cmpl
movsl
mov
xchg
ljmp
popl
loop
aam
jnp
sbb
mov
mov
dec
xchg
vandps
icebp
stc
shr
or
add
xor
cmp
lds
in
or
fldenv
dec
push
lret
push
dec
xchg
inc
xor
inc
fcmovnb
sbb
mov
jp
jo
pop
pop
inc
mov
lret
rorl
int3
and
sbb
inc
add
insb
scas
repnz
and
sbb
lahf
sahf
mov
mov
dec
push
cmp
push
pop
cmpsb
xor
stos
adc
xchg
in
xor
out
and
out
sar
and
sbbb
cltd
xchg
loop
ucomiss
fwait
cmp
inc
in
aam
cmovne
int3
das
mov
scas
sbbl
aaa
push
sub
std
push
adc
mov
dec
mov
dec
or
pop
or
dec
or
in
push
sbb
bound
test
mov
sti
jge
imul
movsb
loopne
mov
fwait
loop
imul
mov
aam
scas
insl
mov
mov
mov
pop
pushf
push
dec
dec
shl
add
in
pop
dec
sbb
push
adc
xchg
movsl
sti
test
in
test
rorl
popf
adc
pushf
fnstsw
aad
movsb
jmp
mov
call
sti
outsl
bound
mov
inc
inc
hlt
xor
xor
sahf
push
cmp
imul
lret
ljmp
push
in
js
inc
std
into
xor
jbe
outsb
pop
mov
sub
xlat
jp
std
inc
and
jmp
jne
xcrypt-ofb
cmpsl
imul
and
cmp
mov
cs
test
xchg
shr
inc
pop
imul
fisttpll
repnz
ss
int
sub
mov
lods
aam
fsubs
sub
mov
cmpb
sbb
andl
cmp
and
pop
sub
cmp
jl
out
xlat
and
pushf
push
jge
jge
dec
addr16
jmp
jnp
in
push
push
push
jge
sub
je
mov
pop
lds
mov
mov
cmp
fnsave
cwtl
or
in
aas
negl
sub
xchg
insl
push
stc
rorb
xchg
mov
xchg
ss
and
sbb
aam
cmc
dec
les
mov
aad
out
inc
lds
lcall
sahf
repz
sub
aad
mov
int3
jns
jns
shr
xor
ljmp
mov
or
cs
fwait
fwait
xchg
cmp
jecxz
sbb
xchg
mov
mov
dec
xchg
pusha
int3
icebp
and
and
outsl
xchg
pop
sbb
aas
or
mov
pmaddwd
pushf
jmp
push
jmp
ffree
inc
adc
das
mov
jmp
test
std
arpl
or
iret
jae
mov
mov
and
out
jle
dec
inc
sub
iret
cmpsl
pop
in
or
push
sbb
mov
mov
sti
stos
hlt
dec
out
dec
add
mov
popa
inc
imul
loop
or
shlb
fisubl
and
dec
enter
je
das
mov
inc
imul
fwait
pop
ftst
mov
in
mov
js
xor
mov
pop
cmp
shll
fsubr
in
pop
dec
pop
daa
cmp
cltd
std
mov
out
pop
cmp
jmp
inc
mov
push
jne
jmp
or
adc
or
test
inc
lock
xor
push
lods
sub
sub
xor
loope
xor
xor
andb
jmp
push
sub
inc
movsb
test
cmp
xor
or
test
jl
xchg
es
movsb
sub
dec
push
mov
jmp
sbb
stos
xchg
ja
add
popf
jnp
inc
jb
push
sbb
clc
mov
mov
fs
and
add
pop
andl
xor
mov
sbb
sarl
lea
ljmp
xchg
pop
call
add
pop
mov
dec
popf
or
mov
aas
test
jmp
clc
adc
sbb
ja
out
shl
pushf
dec
movsl
adc
adc
dec
xchg
cmp
or
adc
je
and
sub
push
and
pushf
es
nop
mov
ret
or
pop
lock
aad
dec
repz
andb
or
mov
xor
mov
add
sub
xor
in
cli
into
push
sahf
call
rolb
fimull
add
es
ret
pusha
in
sbb
mov
gs
mov
insb
loop
pop
cld
inc
lock
jnp
sub
inc
mov
push
mov
dec
adc
and
ffreep
pop
je
mov
rol
test
inc
ret
sbb
dec
imul
push
loop
inc
push
daa
addr16
inc
cmc
or
sub
pushf
stos
mov
ret
sub
mov
aaa
enter
mov
pop
mov
and
push
cmp
inc
xchg
cwtl
stos
mov
bswap
push
lahf
jb
ja
and
add
push
rcll
add
sub
fwait
enter
mov
popa
pop
adc
and
push
ret
jecxz
mov
aas
mov
movsl
push
cmp
lahf
cld
mov
push
mov
stc
test
dec
lock
sbbb
mov
mov
in
es
cmp
loope
in
outsb
cmp
jmp
push
jns
mov
std
aaa
mov
mov
daa
scas
adc
mov
lods
clc
shll
cltd
sbb
out
adcl
cmp
ret
jne
test
and
pop
mov
mov
add
inc
ret
and
imul
les
pop
cmp
je
mov
test
cmpsb
pop
rcrl
scas
adc
mov
add
push
jecxz
or
pushf
dec
or
in
pop
mov
outsl
mov
test
mov
pop
jbe
insl
scas
mov
jns
out
aad
cmp
lock
push
or
fistl
cli
into
sbbb
test
hlt
mov
xor
inc
mov
push
dec
cmpb
shrb
inc
out
or
cwtl
aaa
test
insl
lcall
sub
mov
pop
dec
nop
cmp
dec
push
mov
out
pop
sbb
jmp
fcomps
cs
pop
data16
loop
sub
cmp
or
aam
in
mul
test
adc
ret
lahf
pop
stc
sub
jbe
push
cmpsb
sub
notb
xchg
sti
sbb
sahf
inc
fnclex
mov
push
mov
mov
into
ret
movsb
mov
add
lret
std
insl
movsb
mov
pop
ret
aam
mov
lds
jg
lds
pop
mov
mov
inc
movsl
popf
push
out
inc
cwtl
push
cmc
mov
mulb
push
and
fdiv
rolb
mov
sbb
ljmp
mov
pop
sub
imul
fsubrl
pop
mov
mov
sarb
insb
add
inc
sbb
cmp
lea
mov
sbb
xchg
idiv
sub
dec
shrb
lahf
xor
loopne
imul
ljmp
cmp
fs
std
pop
xor
sub
lret
mov
add
icebp
mov
xor
adc
mov
jnp
or
mov
in
std
inc
mov
out
push
shrl
lock
cltd
lret
fwait
addr16
test
in
cmpsl
imul
mov
ret
mov
cmc
xchg
inc
jo
dec
jmp
mov
xchg
dec
aad
cmp
push
cmpsl
sbb
xchg
jno
jno
mov
xor
dec
push
add
push
pop
out
mov
stos
dec
aaa
fwait
mov
call
xchg
xchg
adc
lret
mov
mov
xor
or
xchg
rolb
jmp
test
std
lcall
xor
xor
pop
call
sub
aas
sbb
push
push
sub
lcall
je
outsb
inc
sti
lds
in
push
sbb
repnz
cmpsb
or
rorl
int3
cmc
in
mov
xchg
xchg
in
xor
jb
add
or
in
sbb
lods
inc
mov
in
add
cmp
mov
and
cmp
mov
and
jno
cmpsl
mov
xchg
mov
in
or
sbb
shl
or
mov
cmpl
out
mov
mov
fstpt
in
sti
insl
pop
and
and
push
mov
or
sub
xlat
clc
arpl
or
stos
mov
daa
outsb
xchg
mov
jge
mov
jns
inc
push
movsl
jae
jo
push
test
movsl
pop
lock
ds
or
inc
adc
mov
pop
mov
mov
mov
push
lods
xchg
lahf
test
xor
fistpll
lret
push
fs
movsb
pop
mov
dec
mov
les
mov
and
inc
xchg
pop
adc
or
push
in
or
xor
mov
pop
js
pushf
push
push
jo
arpl
mov
and
mov
sbb
mov
push
lahf
fwait
aam
daa
inc
pop
lcall
les
popa
std
jno
fwait
push
cmp
pushf
xchg
and
jnp
aas
cmc
sbb
or
or
cmp
jbe
sbb
fwait
or
clc
xchg
hlt
sbb
mov
sbb
lret
pop
fcompl
stc
mov
adc
push
mov
cmpsb
adc
dec
pop
jns
and
and
xchg
icebp
add
or
test
xor
xchg
add
movsb
xchg
in
ja
xorl
push
cltd
xor
sub
cmpsb
xchg
mov
popf
mov
rorl
fisttpll
push
mov
cld
popf
mov
insl
js
cli
mov
mov
mov
xchg
cmc
movsl
push
lock
pop
add
jmp
jle
lds
xor
js
mov
adc
int
sbb
jecxz
push
xchg
xor
shlb
aad
outsb
ljmp
into
loop
jmp
je
test
shll
pop
mov
cmpb
nop
icebp
pop
gs
bound
test
sub
or
data16
das
mov
mov
push
stos
jmp
pop
leave
jae
pushf
inc
rcl
cltd
sti
insl
std
ficompl
loope
push
enter
es
add
shl
adcl
lea
outsb
outsb
pop
in
imul
lods
xor
adc
arpl
bound
in
cmp
std
call
cmp
xor
fucom
add
imulb
call
push
arpl
xchg
mov
push
rep
push
pop
push
in
push
lods
mov
roll
cmc
jns
call
push
dec
pushf
adcb
jg
sub
ljmp
leave
adc
and
ja
sbb
xorb
xchg
jae
icebp
ficoms
roll
dec
inc
mov
loopne
sahf
cmp
dec
cwtl
push
mov
ljmp
movsb
clc
cmp
adc
mov
cmp
dec
es
mov
test
insb
out
imul
sbbb
mov
sbb
pop
mov
fildl
mov
std
clc
cmp
out
sbb
pop
lret
mov
or
movsl
mov
dec
jne
sub
push
pop
dec
or
arpl
pop
lahf
sub
push
mov
pop
aam
push
je
dec
add
jno
out
and
int3
sub
mov
jnp
out
mov
jecxz
inc
mov
scas
mov
negb
mov
mov
ret
xor
jb
iret
push
loopne
shrb
lock
dec
inc
pop
push
jmp
insl
inc
mov
mov
iret
cmpsl
fdivl
ljmp
int3
mov
pop
mov
cmp
rclb
femms
push
sbb
cmpsl
or
dec
push
pop
scas
jmp
movsl
in
mov
mov
mov
xchg
arpl
fdivrl
adc
and
mov
mov
add
fwait
xchg
imul
mov
clc
bound
movsb
push
or
xchg
inc
adc
call
outsl
jnp
aam
sbb
js
out
mov
fs
sub
movsb
hlt
jp
hlt
pop
cs
mov
dec
enter
aaa
or
adc
mov
and
insb
insl
push
arpl
jp
cmpsl
imul
push
ss
push
aad
xchg
push
pop
inc
aam
jbe
fwait
pop
lods
imul
xor
sbb
sahf
push
push
popf
stos
cmp
mov
sub
inc
sbb
mov
and
scas
xor
and
cmp
xor
je
jg
add
mov
fs
dec
jp
xchg
push
ret
les
stc
xchg
sahf
jb
sbb
and
adc
imul
xorl
pop
popa
hlt
mov
je
in
icebp
cld
adc
mov
push
orl
lock
out
popa
and
push
dec
adc
dec
add
movsl
jmp
add
mov
cmp
or
roll
sbb
in
insl
out
cli
push
and
clc
outsb
stos
test
sahf
lahf
fwait
dec
dec
add
sbb
mov
jg
sub
and
dec
in
arpl
out
push
popf
and
fdivl
xor
sbb
mov
xchg
sub
outsb
mov
loopne
dec
data16
push
aad
addb
lds
dec
pop
jns
in
dec
fldt
sti
shl
jp
stc
adc
add
lret
aad
sub
nop
xchg
dec
adcb
insb
ja
clc
int3
out
lahf
jnp
inc
ficompl
test
add
cmp
jge
xchg
xor
mov
movsl
sbb
cli
push
add
stos
in
jo
mov
push
pop
or
sarl
adc
sti
xchg
popf
cwtl
push
mov
xchg
jo
or
sbb
jmp
push
xchg
add
fildll
jo
pop
mov
dec
cld
popf
xchg
push
add
pop
xchg
fldenv
sbb
sbb
aas
sbb
mov
test
cmpsl
pop
stc
scas
jnp
loopne
inc
repnz
leave
mov
adc
or
cltd
lea
or
int
repz
mov
iret
inc
jb
movb
test
dec
out
cmpsb
jnp
add
sahf
cmc
jl
and
jnp
in
in
insb
mov
mov
sub
and
lea
sub
cmp
fwait
ljmp
push
jp
fwait
shll
jae
xchg
mov
and
cmp
pop
mov
test
jo
xchg
lea
dec
imul
shlb
lret
and
es
js
test
inc
adc
in
mov
sub
mov
rcll
mov
jge
fistps
inc
mov
icebp
cltd
fldenv
ss
out
push
lcall
and
pushf
jmp
stc
loop
and
addr16
dec
outsb
in
sbb
adc
inc
cwtl
ja
lahf
inc
mov
in
xor
jl
sbb
dec
dec
pop
ss
les
in
sub
sbb
lret
cmp
xchg
in
xor
add
pushf
sbb
inc
rcrb
dec
mov
stos
xchg
clc
sbb
xor
cmpsb
mov
adc
sbb
mov
xchg
lahf
sub
adc
stos
int3
inc
inc
movsl
sti
rclb
int3
dec
fstpl
mov
jmp
cltd
cmc
lahf
repz
subl
sbb
scas
int3
sbb
ret
stos
push
xor
insb
hlt
fwait
fwait
into
inc
push
jns
insl
push
test
dec
xor
xlat
insl
sub
lcall
popa
and
xchg
je
fstpl
call
fcmovnu
lret
pop
shlb
pop
and
inc
jg
in
mov
xchg
in
xor
enter
sub
and
mov
push
pop
aaa
sahf
ds
std
dec
in
xor
cmpl
mov
adc
mov
cmc
mov
dec
cmpb
pop
movsl
mov
iret
popf
push
loope
insl
in
xor
sbb
clc
sbb
in
imul
test
xchg
jmp
cld
out
sbb
add
xchg
mov
insb
arpl
rol
jbe
or
aam
cld
cmp
cmpsb
dec
cmpsb
out
jge
mov
mov
xor
push
movsl
pop
int
jmp
pop
bound
xor
mov
movsl
jne
mov
pop
mov
cmp
ljmp
mov
mov
ret
rolb
sub
out
jl
popf
add
push
sub
ret
push
movsb
xor
subb
dec
pop
mov
js
in
cmpsb
or
dec
inc
es
punpcklwd
mov
push
jne
jne
xor
jge
subl
mov
aam
xchg
dec
dec
andl
es
cmp
push
aad
fisubs
aad
xor
popf
push
mov
sbb
mov
sbb
scas
mov
mov
xor
mov
add
test
dec
inc
leave
jno
sub
jne
adc
cs
xchg
xor
or
cmp
mov
cmp
dec
mov
mov
xchg
sbb
je
leave
sbb
stos
and
add
push
fwait
jnp
cmpsl
jp
test
adc
xor
xchg
test
in
rol
push
stc
xchg
jns
push
push
cmp
nop
aam
and
nop
xchg
scas
sbb
xor
es
sbb
pop
and
cmp
enter
dec
in
out
sbb
jle
pop
add
mov
imul
gs
lock
mov
mov
inc
clc
lret
jae
jae
jg
shrl
icebp
daa
dec
hlt
push
pop
sbb
pushf
xchg
outsl
dec
out
jl
or
inc
repz
jle
jg
xchg
std
dec
lods
ret
add
std
hlt
fildll
xchg
and
push
fwait
adc
xor
loop
loope
je
pop
leave
xchg
gs
push
hlt
push
cmp
or
test
sbb
ret
push
adc
stc
push
leave
inc
rcll
pop
cmp
xor
adc
dec
imul
rcl
lcall
lret
mov
pop
pop
cmp
jne
aad
in
mov
imul
fdivrs
mov
or
lods
into
and
xor
pop
notl
aam
insb
inc
sbb
idiv
xchg
out
jle
repz
push
or
jae
iret
push
test
mov
lahf
xor
cli
jo
sbb
ret
pop
inc
pusha
call
xchg
mov
test
imul
mov
insl
fxch
in
pop
jno
jno
mov
sub
test
xor
mov
subl
movsl
test
movsl
mov
sub
ficomps
mov
mov
jle
negl
xor
ds
aas
mov
aaa
mov
sti
shll
mov
push
ret
adc
je
mov
movsb
sub
cmp
jnp
testb
call
push
ror
test
or
cmc
add
adc
xchg
sar
xor
cmc
jo
and
cmp
inc
push
push
xchg
xchg
mov
sbb
add
test
jmp
mov
fwait
push
hlt
and
call
repz
movsb
mov
lods
cmp
pop
lods
adc
mov
jmp
mov
out
push
mov
sub
mov
sahf
sti
xor
ret
mov
or
out
sti
pop
push
sbb
mov
pushf
test
push
dec
xchg
es
in
cmp
mov
sbb
jge
mov
loop
and
insl
sub
out
clc
xor
inc
or
mov
cmpl
xchg
mov
mov
in
stos
lret
aad
sub
lock
push
scas
cmp
mov
popf
cmp
divl
inc
jns
inc
pop
cmpb
xor
int
in
into
subb
push
movsb
jnp
int
jp
imul
push
test
sbb
mov
fucom
lock
cmp
pop
add
outsb
sbb
pop
test
imul
test
andb
cmpsl
xchg
jmp
jne
imul
loopne
icebp
cmc
pop
pop
es
dec
xor
sbb
push
sub
dec
outsl
jae
repz
and
add
xor
sbb
mov
xor
inc
rorl
sbb
out
mov
cmp
popa
test
and
mov
and
mov
inc
inc
add
cmpsl
xchg
cmc
lret
adcb
sub
pop
or
and
scas
mov
test
popa
mov
loope
xchg
and
leave
movsb
lret
xchg
popa
shll
push
push
fwait
and
stc
mov
xchg
push
cmp
gs
push
repnz
scas
lret
mov
out
mov
mov
test
cwtl
addr16
push
sarl
jb
data16
repz
inc
cmp
and
loop
mov
mov
push
xchg
clc
pop
std
popa
ds
pop
push
loopne
out
mov
mov
mov
cmp
pop
mov
sbb
or
mov
or
jl
jmp
out
or
cld
fnstenv
fcmovbe
rcll
adc
bound
sub
sub
jns
fwait
in
adc
mov
mov
mov
cmp
inc
mov
and
sbb
sub
lcall
adc
fmuls
and
cltd
mov
imul
stos
xor
fs
aas
scas
lret
lods
orb
sub
sbb
test
jne
mov
adc
and
stos
inc
lock
jecxz
out
fidivl
mov
loopne
or
jns
pop
dec
nop
sahf
sub
pavgw
push
push
icebp
fisubrs
pop
aam
or
lahf
sbb
out
rcll
xchg
aad
flds
sub
lahf
negl
into
scas
mov
mov
fsubrp
mov
mov
dec
repnz
pop
loope
and
pop
loop
fstpt
jbe
dec
push
dec
inc
js
js
mov
mov
test
fcompl
loopnew
frstor
mov
arpl
xchg
imul
loop
adc
or
mov
jbe
pop
movsl
ss
out
mov
call
jae
fnsave
jmp
jbe
jl
pusha
das
movsb
mov
add
pop
jecxz
aaa
pop
jns
mov
aam
mov
jmp
push
dec
adc
xor
xchg
pop
leave
pusha
dec
push
mov
inc
movsl
dec
and
aas
pop
and
cltd
dec
mov
int
sub
sahf
inc
jg
sarl
xchg
push
push
repnz
pushf
mov
call
push
xchg
std
sarl
jg
sub
push
mov
int
cmp
lcall
add
xchg
sbb
pop
insb
push
lahf
add
gs
outsb
mov
movsb
inc
mov
xchg
push
pop
aad
aas
out
xor
mov
sbb
adc
lds
xchg
popf
hlt
mulb
or
inc
hlt
mov
iret
icebp
jae
movsb
adc
sub
dec
adc
leave
shufps
sbb
aad
and
jle
mov
pop
test
pop
cltd
cmp
sbb
dec
outsl
pop
fsubrs
adc
push
imul
jb
mov
out
or
add
jmp
xchg
jp
aam
iret
shrd
sbb
movsb
xor
cmp
xchg
gs
or
in
jge
push
cmp
inc
pop
lahf
sub
hlt
add
inc
sub
xchg
ja
and
mov
lods
jo
mov
popa
rorb
leave
lcall
lret
out
lahf
mov
fbld
fstpl
inc
inc
sbb
adc
push
cmp
cmpsb
fadds
mov
and
pop
inc
add
mov
xor
dec
call
sarb
scas
mov
sar
clc
leave
and
ss
scas
out
hlt
mov
cwtl
cmp
test
ja
mov
add
fstpl
mov
or
into
xchg
cmp
mov
mov
repnz
inc
icebp
mov
mov
jns
test
in
aam
clc
and
sahf
insb
or
shrb
sahf
mov
mov
mov
ret
in
mov
stc
jbe
and
xchg
movsl
arpl
xchg
into
rcr
dec
lahf
inc
ret
xor
xchg
cmovo
sarl
lea
in
push
roll
sub
inc
in
andl
mov
mov
inc
test
ljmp
lock
loop
add
and
xor
adc
xor
in
push
test
xchg
push
imul
mov
imul
das
arpl
mov
add
pop
lret
fldcw
nop
mov
popa
sub
cmp
mov
sbb
in
push
add
push
cmc
mov
or
imul
jns
mov
in
ret
sub
pusha
inc
push
sbb
repz
ret
movsb
or
adc
in
xchg
dec
mov
scas
sub
dec
sti
in
sub
inc
call
lea
test
pop
mov
mov
pop
pop
iret
aaa
out
mov
andb
inc
adc
in
ret
push
mov
jno
sub
mov
jns
mov
add
cmp
ja
jnp
addr16
cmp
and
push
pop
or
in
aad
mov
dec
xor
lods
xchg
lock
cltd
dec
sub
ret
je
mov
sub
in
ds
and
sub
bound
mov
push
jae
fdivrs
jmp
lret
imul
outsl
sub
and
aaa
sub
fwait
jns
jmp
xchg
mov
movaps
mov
mov
jmp
test
mov
leave
orb
and
out
sub
sti
stc
test
mov
sbb
xchg
cmpsl
push
ffreep
je
jecxz
mov
les
adc
xor
pop
out
mov
imul
lcall
inc
movsl
mov
inc
in
add
pop
sbbl
inc
mov
cmpxchg
pop
mov
mov
pop
pop
and
cltd
sbb
pop
sbb
pusha
mov
sub
imul
lock
sti
mov
push
fs
mov
loop
dec
xchg
repnz
sbb
in
adc
xchg
cli
inc
sbbb
test
push
dec
dec
mov
mov
repnz
nop
lret
jmp
sbb
or
cmc
and
in
ds
mov
push
mov
loop
jns
loopne
pop
test
fcompl
das
mov
call
in
mov
sub
mov
cmp
mov
leave
ljmp
leave
aam
inc
and
faddl
mov
xchg
mov
cli
xchg
cmp
icebp
xchg
bound
cmpsl
and
adc
add
jge
movsl
fwait
jl
mov
xor
or
sbb
mov
fneni(8087
popf
sbb
ret
mov
arpl
loope
lea
into
cmc
xor
pop
cltd
and
jge
mov
pandn
mov
popa
daa
outsl
adc
mov
sbb
mov
mov
mov
dec
orw
and
or
jge
mov
and
mov
add
js
sarb
sub
adc
sti
push
pop
sbb
ja
movsb
lcall
sbb
loopne
das
mov
imul
test
mov
pop
and
push
icebp
es
sbbl
xor
xchg
lret
jnp
pop
mov
rcl
rcr
xor
ss
repz
push
hlt
ret
ret
add
mov
inc
in
mov
lahf
sub
cmp
pushf
cld
inc
stos
test
sbb
fistps
mov
or
dec
arpl
pop
test
push
sub
mov
mov
das
or
shll
cmp
and
lret
pushf
dec
cmp
inc
lods
imul
adc
call
sbb
jae
rol
lret
cld
sub
movsb
insl
cmp
mov
push
lret
fs
xchg
and
sti
add
in
push
sub
mov
pop
jnp
out
bnd
sbb
jg
xchg
sub
mov
data16
loope
shrb
test
xchg
addr16
mov
cli
push
js
outsl
and
insl
repz
mov
adc
jmp
push
jno
dec
pop
mov
les
mov
inc
repz
xor
inc
mov
sbb
cmp
xor
push
push
sub
cmp
fwait
mov
sbb
loopne
repnz
sub
dec
cmpsl
or
dec
or
inc
push
jns
dec
ja
and
and
mov
adc
push
sbb
xchg
inc
dec
mov
sub
loope
mov
sbb
enter
mov
mov
orl
mov
mov
les
adc
xchg
or
pop
scas
jns
sbb
aas
xchg
scas
and
aam
cli
nop
adc
bound
test
lahf
hlt
or
cmp
sbb
stc
ljmp
rorl
clc
mov
xchg
and
into
aas
lahf
pop
sub
out
pop
das
ds
adc
ficomps
pop
cmp
aad
pop
test
mov
test
icebp
mov
cmc
pop
fimull
cmpsb
inc
out
imul
push
sub
sub
mov
push
cmpsb
shrl
mov
pop
adc
sub
mov
push
shll
lret
mov
out
fstl
pop
mov
inc
call
cmp
mov
cmpsb
or
adc
stos
sub
jo
in
xchg
sub
xchg
les
add
adc
pop
fwait
cwtl
pop
imul
clc
xor
faddl
cltd
sub
and
inc
mov
add
jnp
pop
add
jae
mov
xorb
sar
push
aad
jge
adc
test
pop
mov
dec
lret
xchg
mov
push
cltd
mov
in
mov
pop
add
in
sub
xchg
pop
jns
xchg
and
out
imul
gs
aad
lods
das
stos
mov
leave
rorl
sti
mov
lock
add
addr16
mov
in
sahf
cmp
sti
xor
and
adc
out
mov
lods
test
dec
out
xchg
loope
fisubrs
adc
mov
mov
ja
fistpl
fnstcw
adc
xchg
add
xchg
enter
xlat
push
das
adcl
mov
mov
mov
or
popa
adc
pop
adc
fldcw
jnp
or
clc
dec
insb
addr16
dec
push
xchg
sahf
in
jmp
push
mov
pushf
loopne
dec
gs
inc
popa
sbb
bound
adc
mov
jmp
leave
repz
mov
jle
or
rol
ss
cmp
sahf
lret
xchg
inc
mov
cmp
adc
popf
gs
mov
out
mov
inc
push
sub
fbld
jnp
pop
pop
pop
xchg
jbe
iret
mov
lret
mov
bound
test
imul
fisttpl
ret
and
mov
dec
mov
mov
out
lcall
jle
test
mov
jp
mov
gs
pusha
jne
inc
out
jno
push
or
lret
xor
jb
xor
pop
dec
add
popf
scas
rcll
cmp
lret
enter
subb
push
outsl
push
push
and
test
jl
push
out
test
and
int
mov
rclb
js
hlt
pop
sbb
mov
push
add
jnp
arpl
aaa
stos
cltd
cmp
out
mov
pop
lret
sbb
or
mov
add
dec
mov
and
jb
addl
shlb
push
sub
lods
and
cs
sbb
xchg
rcll
mov
or
mov
sbb
xchg
or
push
test
sbb
sbb
dec
movsb
cmp
or
test
and
fwait
dec
nop
push
in
pop
jbe
jg
mov
ss
stos
sti
xchg
adc
pop
les
mov
loopne
lret
cmp
mov
imul
jbe
adc
les
rol
sbb
rcll
cltd
negl
mov
and
dec
repnz
adc
cmc
mov
pop
adc
fistpl
dec
in
mov
and
data16
sub
and
shlb
loopne
sbb
xlat
and
xchg
cmpsb
movsl
mov
lret
fs
fiadds
jge
jnp
mov
insl
pop
fisubs
loop
rorb
mov
and
adc
pushl
movsl
sub
adc
popf
adc
repz
mov
push
inc
xchg
inc
pushf
cmp
or
sub
mov
sbb
insb
mov
les
daa
test
adc
adc
push
lea
je
pop
mov
adc
push
cmp
mov
or
lods
cltd
cmp
xchg
xchg
scas
aad
mov
mov
inc
cmp
push
push
cld
enter
mov
inc
test
sti
sahf
andl
dec
and
in
mov
mov
adc
or
push
xor
pop
lahf
inc
pop
cmp
mov
mov
inc
loope
mov
mov
mov
mov
xor
push
mov
cmc
or
sbb
sbb
retw
popa
xor
sub
stos
repz
dec
test
imul
lock
sub
lea
imul
mov
ret
and
and
pop
iret
cltd
sti
shll
sbb
mov
mov
mov
movsl
sbb
movsl
rorb
add
pop
lahf
push
rorb
pop
iret
or
in
cld
add
dec
stos
push
adc
sbb
pop
sbb
inc
or
sbb
sahf
rcll
cld
cmp
cltd
and
jnp
ljmp
lahf
cltd
lret
cld
pop
ret
xorb
sbb
dec
aam
or
sbb
gs
test
jp
sub
adc
mov
adc
in
mov
adc
jns
xor
add
xor
fwait
or
jecxz
sub
sti
sub
adc
adc
inc
das
movntq
std
jecxz
or
xchg
mov
mov
and
push
mov
mov
sbb
in
pop
scas
out
xor
outsb
std
cmp
jmp
cltd
mov
jecxz
lgs
cmp
aas
fldcw
cwtl
inc
insl
xchg
mov
insb
cltd
jp
les
cwtl
xor
inc
cmpsb
aad
inc
rcrb
add
test
jns
pop
sbb
subl
adc
fistpl
mov
stc
fsts
cmp
mov
push
add
mov
inc
pushf
add
arpl
pop
sub
pop
test
sub
pop
in
repz
mov
sbb
adc
movsb
cs
das
loop
out
xchg
xchg
loopne
jnp
ja
mov
divl
clc
leave
sub
dec
sbb
shlb
push
out
clc
pop
pop
inc
xchg
mov
imulb
lea
and
arpl
lahf
lock
xchg
addr16
cmpsl
push
inc
das
add
and
sbb
cs
les
out
ljmp
jo
and
mov
popf
mov
sbb
das
in
adc
sub
xchg
outsl
xor
add
jl
dec
imul
sbb
xchg
ja
or
mov
sub
int
lods
in
mov
out
mov
ljmp
mov
cmp
mov
xchg
into
lock
sahf
push
pop
adc
nop
test
add
popa
sbb
mov
xchg
test
shr
xchg
cwtl
in
je
mov
inc
jnp
sbb
repnz
in
xchg
adc
fimuls
cmpsb
cmpsl
dec
xchg
xor
ljmp
ja
popf
mov
jns
xchg
pop
std
lds
mov
pop
adc
pop
leave
mov
xchg
xchg
cmovns
pop
mov
sbb
testl
roll
fcoms
neg
out
pop
add
cmpsb
mov
sti
dec
inc
lahf
sti
xchg
jg
in
les
mov
add
outsb
mov
push
loope
xor
mov
hlt
repnz
inc
bound
sub
jo
xlat
mov
adc
vpsubusw
test
and
pop
cwtl
pushf
mov
pop
mov
jge
push
mov
mov
hlt
jmp
lods
jle
mov
rorb
mov
inc
fsubs
cs
out
mov
sub
mov
mov
jmp
repnz
scas
and
out
sbb
pusha
push
xchg
push
pop
and
xchg
push
out
sbb
mov
testb
sbb
test
xor
mov
fs
inc
push
in
sbb
rorb
lock
mov
jae
adc
dec
sbb
sbb
xchg
jbe
and
rcl
xchg
dec
sbb
pop
leave
test
and
push
inc
dec
mov
jmp
test
movsb
inc
or
outsb
mov
add
lcall
loope
inc
popf
jnp
cmpsb
ret
and
push
ret
mov
aam
pop
mov
lret
mov
test
or
cltd
addr16
or
dec
data16
jmp
fistpl
rcrl
adc
mov
fsubrs
lea
mov
adc
xchg
jle
sbb
mov
cmp
xor
mov
mov
and
mov
sub
jg
mov
push
mov
sti
je
test
adcl
mov
jl
xchg
and
mov
cmp
push
sbb
xchg
ss
pop
in
mov
fsubl
out
and
pop
mov
mov
popa
push
fucomip
push
and
repz
xlat
test
ret
int3
sub
sbb
push
out
int
cli
cmp
push
pop
and
lods
int
xor
in
dec
sub
lock
and
loopne
test
ror
popaw
fbld
cmpsl
cld
xchg
je
mov
sbb
scas
popa
imul
insl
into
add
push
xor
outsl
lods
repnz
xor
mov
adc
push
incb
ljmp
cmc
lods
shl
arpl
data16
icebp
adc
push
cmc
testl
lods
pop
jnp
aaa
sbb
mov
push
pop
in
icebp
jl
test
cmp
dec
inc
pop
mov
shlb
lret
mov
negl
or
hlt
sbb
dec
mov
push
add
fcmovnu
cmp
js
mov
dec
cmp
dec
mov
jle
js
xchg
mov
cmp
push
sahf
inc
es
mov
icebp
gs
or
jmp
inc
or
adc
sti
xchg
dec
roll
jmp
cmpsb
adc
mov
icebp
mov
fldcw
mov
mov
fld
dec
aas
jne
fucomp
pop
or
pop
sub
popa
mov
sahf
pop
ja
pop
ja
test
sbb
andl
repz
adc
iret
jmp
gs
cwtl
and
adc
cltd
push
call
stc
cmp
xor
and
scas
or
and
or
sub
nop
cmp
xor
push
mov
add
in
and
sbb
mov
mov
int
data16
cmpl
push
mov
sbb
nop
jnp
test
das
mov
jno
stos
movsl
into
mov
stc
sub
and
dec
ror
js
leave
test
and
dec
in
test
or
clc
imul
stos
sbb
mov
into
call
or
inc
enter
int3
sbb
jle
mov
in
fcmovnu
sub
jmp
xchg
mov
sub
sbb
ss
dec
inc
aad
lret
add
xchg
rcrl
minps
repnz
jb
orps
sbb
or
adc
xchg
mov
insb
push
sarb
adcb
add
mov
js
subl
cli
daa
jp
clc
mov
sbb
adc
cld
test
imul
push
xchg
mov
into
stos
pop
jns
and
mov
xchg
xchg
cltd
sti
scas
xor
push
push
popf
inc
sub
add
sbb
fwait
dec
adc
sub
imul
push
pop
mov
and
lcall
mov
out
ss
lods
out
inc
and
mov
pop
sub
hlt
lahf
pop
push
dec
mov
fnstenv
lcall
or
in
xor
mov
push
in
sbb
and
ja
sti
scas
mov
xchg
push
mov
and
lods
cli
scas
cmpsb
mov
xchg
aas
push
mov
roll
movsb
imul
sbb
fstps
lea
and
cltd
loopne
and
in
cld
and
push
inc
xchg
ss
lea
repz
sub
iret
int
dec
sub
add
dec
xor
mov
lods
sub
lds
push
mov
call
enter
mov
out
xor
mov
or
or
insl
mov
and
notb
loope
test
jbe
xchg
mov
xchg
shlb
adc
cmp
stos
pop
les
jle
push
push
shlb
inc
cmc
repz
cli
repz
and
in
sub
insl
inc
test
inc
test
jns
adc
xor
bound
cmc
call
dec
lods
mov
inc
lods
fincstp
in
cld
repz
cmp
xchg
add
popf
cmpsl
jmp
pop
aaa
sub
idivl
pop
mov
jae
pop
push
mov
ljmp
push
add
xor
jb
rol
pop
leave
cmp
xor
dec
mov
in
push
cli
lcall
push
stc
cmp
or
sbb
int3
fwait
pop
sub
dec
mov
cmp
sub
pusha
fmuls
cmp
test
adc
vpmacssdd
inc
cmpsb
pusha
cmp
negl
pop
jmp
outsl
mov
sub
push
out
sub
fs
and
nop
adc
test
leave
jg
mov
into
mov
test
in
mov
mov
ljmp
arpl
mov
or
scas
xor
leave
daa
cmp
fldl
dec
stc
fsubl
and
dec
or
and
or
dec
pop
or
ret
mov
jle
cwtl
ljmp
xchg
mov
bound
cmp
movsb
dec
es
lret
ret
xchg
in
mov
int
jbe
repz
movsl
jae
xor
popa
sub
test
push
pop
mov
mov
fbld
stos
into
lds
sbb
in
cmp
cmp
or
cmpb
sti
adc
inc
mov
stos
jb
pop
jns
mov
push
cmp
inc
das
into
cmp
mov
pusha
ljmp
xchg
dec
gs
hlt
sub
xchg
pop
mov
cwtl
mov
ja
cmp
addr16
adc
pop
sub
test
sbb
mov
gs
pop
fidivs
negl
movsl
gs
repz
add
adc
fldl
rcrb
push
cltd
test
or
mov
dec
pop
scas
arpl
xlat
jg
dec
test
repz
lock
mov
outsl
push
stos
jbe
jbe
loop
or
gs
addl
int3
inc
mov
xor
addr16
or
and
pop
push
gs
jle
dec
sbb
xchg
and
mov
cmc
stc
repnz
repnz
shll
je
lds
lds
addr16
and
adc
sbb
popf
push
icebp
pushf
fisttpl
add
mov
insb
xor
bound
lret
test
movsl
jo
add
les
add
in
imul
daa
mov
ja
call
push
rorl
inc
adc
or
jo
sbb
fistps
shrl
xchg
mov
cmc
in
leave
xchg
jno
std
cmpsb
sti
ficompl
ljmp
in
inc
out
adc
mov
xor
xchg
mov
and
adc
pop
ret
mov
out
call
fcompl
adc
aaa
push
fwait
lahf
in
daa
out
cltd
movsb
imul
fwait
cmpsl
int
out
jae
push
add
test
xchg
push
mov
ljmp
shll
fbstp
mov
sbb
cmp
pop
sbb
mov
shll
or
push
into
and
sarl
push
sbb
and
sbb
jecxz
dec
xor
mov
bound
aad
test
sahf
movsl
decb
pop
dec
push
leave
in
insb
cmpsb
into
add
and
mov
mov
mov
loope
jb
incl
repz
pop
push
fdiv
cmp
and
pop
cmp
mov
icebp
jbe
jg
int
cmpsl
pop
sti
leave
mov
inc
and
pushf
xor
std
inc
cmp
pop
dec
sbb
xor
lret
xor
mov
cmp
std
sub
push
lods
sub
inc
gs
dec
xlat
push
mov
in
push
icebp
call
push
mov
cmp
inc
cmc
movsl
jbe
test
push
dec
es
lods
cmp
vpcmpgtb
pop
repz
out
lods
ds
mov
mov
addr16
mov
arpl
jge
cmp
mov
sahf
xchg
loope
push
xchg
divb
and
and
push
push
out
mov
imul
mov
pop
xchg
pop
and
in
sbb
mov
cwtl
out
jecxz
xor
jge
push
inc
adc
cmpsb
roll
sbb
loopne
fcomip
ret
mov
mov
sub
dec
xlat
mov
inc
pop
push
testl
mov
and
bound
lret
scas
jecxz
sahf
loopne
jae
icebp
mov
cmp
repz
push
loope
arpl
pop
cmp
fwait
imul
mov
push
mov
jb
cmp
es
inc
cmpsl
mov
pop
ds
aad
sbb
and
inc
cltd
cmp
iret
in
test
pop
aas
test
data16
in
adc
bound
push
and
pop
jmp
dec
shll
and
adcl
out
and
mov
nop
out
mov
in
or
out
xor
lcall
sbb
call
xchg
pop
inc
lods
in
bound
lods
inc
cmp
inc
and
repnz
push
mov
fldenv
dec
or
lods
adc
xlat
mov
std
mov
out
mov
xchg
mov
bound
fstpl
outsl
inc
les
fs
jno
and
in
push
fwait
shlb
cltd
adc
stos
pop
add
ljmp
aam
movsl
outsb
roll
movsb
ret
mov
sbb
out
xlat
stos
lret
mov
push
xor
movsl
mov
addr16
xchg
mov
pop
add
leave
test
outsl
xchg
sbb
cmpsl
lret
int
pop
test
adc
testl
jne
push
out
aad
loop
and
add
and
js
lods
jl
loop
push
fidivrl
add
test
sbb
jns
jge
and
fldt
mov
repnz
in
sub
mov
js
mov
push
ja
ret
cmp
rcrl
mov
ds
mov
cli
out
lahf
jmp
int
mov
pop
mov
add
pop
jns
push
mov
ss
adc
lcall
mov
ret
fldl
popf
sti
push
mov
dec
das
imul
fs
add
int
orl
stos
cs
mov
cmp
fwait
mov
popf
jg
pop
roll
add
stos
mov
inc
test
adc
lahf
popf
push
rcr
sub
fildl
ficoml
mov
sbb
or
cmp
cmp
test
ja
adc
push
imul
fwait
imul
cmp
add
lcall
push
mov
mov
adc
pop
and
sub
ss
add
jnp
aam
mov
fbstp
lea
and
hlt
cwtl
lock
sub
outsl
mov
pop
mov
mov
mov
push
pusha
out
daa
into
pop
out
mov
sti
cmc
pop
sub
sub
test
push
adc
mov
jmp
mov
fidivl
mov
les
push
xchg
fisubl
aaa
fstpt
fsubs
in
push
xchg
popf
jl
ret
aaa
lcall
or
mov
outsl
fldenv
aaa
push
leave
cmc
cs
pop
mov
in
pop
jns
jmp
vpaddw
add
mov
outsl
and
xor
xchg
mov
sub
sbb
push
das
stos
sbb
jne
xchg
shrb
xor
lcall
mov
test
into
ret
roll
inc
add
dec
cld
push
mov
mull
filds
cmpsb
sub
stos
and
jae
sbb
adc
ljmp
cltd
lods
adc
push
mov
in
jbe
xchg
xor
outsb
mov
arpl
push
loope
in
or
sbb
cltd
out
out
scas
jns
cmpsl
pop
mov
ljmp
jmp
ja
xorb
mov
out
cmp
mov
enter
stos
nop
inc
and
daa
jae
sbb
repz
push
daa
lds
mov
mov
movsl
and
lds
dec
push
ljmp
aas
adc
mov
pop
jns
in
out
adc
lahf
jge
scas
pushf
push
repz
mov
scas
xor
loop
test
jne
out
inc
pop
push
push
add
pop
cmp
lret
outsb
stos
outsb
mov
imul
or
mov
cld
push
cmp
mov
sub
xchg
ljmp
inc
push
mov
out
xor
inc
and
outsb
sbbb
dec
jle
pushf
fnstenv
push
lahf
dec
jmp
and
cmp
cmp
add
dec
pushf
jnp
mov
jo
pop
mov
pop
call
inc
cmp
pop
test
pushf
dec
mov
aaa
jo
jge
out
addr16
inc
mov
leave
sub
and
push
fdiv
mov
sub
in
xor
imul
sub
in
inc
and
ret
mov
leave
lods
fwait
mov
push
fsubrl
mov
push
bound
push
inc
adc
jo
cmp
mov
mov
inc
pop
xchg
inc
add
popf
xchg
sbb
sahf
stos
inc
stos
and
jg
stc
and
xchg
cmp
xchg
insl
shl
mov
mov
mov
fsubrl
pop
mov
xchg
pop
xor
dec
cmp
push
movsl
adc
jmp
cs
ljmp
xor
test
xor
daa
xor
aaa
xor
data16
ljmp
rol
sbb
mov
rcll
mov
lods
fidivl
icebp
lahf
popa
ja
out
add
pusha
jle
mov
popf
scas
sbb
add
add
in
sub
push
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
test
je
mov
push
call
add
xor
mov
push
push
call
add
mov
and
push
call
add
push
push
push
push
call
add
call
call
push
push
push
call
add
sub
push
push
push
push
push
call
add
mov
push
call
add
xor
add
xor
or
call
or
mov
push
push
push
push
push
call
add
push
push
call
add
push
call
add
call
push
push
push
call
add
add
cmp
je
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
call
add
push
push
push
call
add
cmp
je
add
push
push
push
push
call
add
push
push
call
add
add
push
push
call
add
sub
mov
push
push
call
add
cmp
jne
push
push
push
push
push
call
add
or
push
push
push
push
push
call
add
push
push
push
push
call
add
and
push
push
call
add
add
sub
push
push
push
push
call
add
lea
push
call
push
push
push
push
push
call
add
push
push
push
push
call
mov
push
call
add
push
call
push
push
push
push
call
add
push
push
call
xor
add
add
mov
add
push
push
push
push
call
add
add
call
sub
mov
push
call
add
push
push
push
push
call
add
call
sub
mov
add
push
push
push
call
add
test
je
cmp
je
cmp
je
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
and
cmp
jne
push
call
add
push
push
call
add
push
push
call
add
sub
push
push
push
call
add
or
sub
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
call
add
cmp
jne
push
push
push
call
add
mov
mov
push
call
add
push
push
push
call
add
call
lea
sub
sub
push
push
push
call
add
push
push
call
add
push
call
add
call
cmp
je
push
push
push
push
call
add
mov
call
shr
push
push
push
push
call
add
cmp
jne
mov
sub
push
call
add
mov
push
push
call
add
sub
push
call
add
call
cmp
je
sub
sub
xor
sub
mov
sub
cmp
je
mov
sub
cmp
je
add
cmp
je
xor
or
add
mov
add
sub
sub
xor
mov
push
push
call
add
mov
mov
xor
add
cmp
jne
mov
cmp
je
mov
mov
add
add
sub
sub
add
add
and
add
pushl
push
pushl
call
call
addl
xor
push
call
add
mov
sub
mov
add
mov
cmp
je
mov
xor
sub
sub
add
cmp
je
mov
mov
sub
add
sub
cmp
je
xor
mov
mov
cmp
jne
add
mov
mov
add
sub
sub
add
add
call
push
push
call
add
mov
mov
add
sub
push
push
call
add
add
xor
push
push
push
call
add
add
push
push
push
call
add
sub
pop
test
jne
mov
sub
mov
add
cmp
jne
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
add
sub
pop
mov
call
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
call
push
cmp
jne
mov
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
movl
mov
mov
push
push
push
push
call
add
or
cmp
jne
mov
push
push
push
push
call
add
call
cmp
je
cmp
jne
mov
cmp
je
mov
add
cmp
je
and
sub
mov
mov
xor
add
add
sub
sub
cmp
je
mov
cmp
je
mov
or
sub
mov
cmp
jne
sub
mov
cmp
je
sub
mov
mov
cmp
jne
add
add
cmp
je
test
je
add
add
sub
mov
add
add
add
sub
cmp
je
and
xor
sub
sub
and
xor
sub
cmp
je
sub
sub
mov
add
and
add
mov
cmp
je
push
call
add
call
mov
mov
mov
push
push
call
add
call
add
xor
mov
cmp
je
mov
add
mov
sub
xor
add
sub
sub
mov
mov
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
mov
cmp
je
cmp
jne
add
mov
test
jne
mov
mov
add
add
sub
sub
mov
add
sub
add
sub
cmp
jne
mov
sub
sub
cmp
jne
mov
sub
mov
sub
and
sub
sub
sub
cmp
jne
mov
sub
cmp
je
cmp
jne
mov
mov
xor
add
sub
sub
cmp
jne
cmp
je
mov
xor
add
add
mov
and
cmp
je
add
mov
sub
add
xor
sub
or
or
and
sub
cmp
jne
mov
add
mov
sub
and
mov
mov
xor
sub
mov
cmp
jne
xor
xor
add
mov
mov
and
cmp
jne
mov
sub
add
and
cmp
jne
mov
add
cmp
je
sub
mov
cmp
je
sub
mov
sub
mov
add
sub
sub
add
add
add
and
add
mov
cmp
je
add
push
push
push
push
push
call
add
push
call
sub
and
and
add
add
sub
or
je
add
mov
cmp
je
mov
mov
mov
add
and
add
sub
addl
add
lea
and
mov
mov
and
push
push
push
push
push
call
add
inc
push
call
add
mov
sub
sub
mov
test
je
cmp
jne
sub
add
mov
mov
sub
add
test
jne
sub
mov
mov
cmp
je
cmp
jne
mov
sub
test
jne
add
test
je
mov
mov
add
cmp
je
test
je
xor
mov
add
sub
or
test
je
sub
or
cmp
jne
push
push
push
push
call
add
mov
xor
and
sub
push
push
push
push
call
add
sub
mov
push
push
call
add
call
add
push
call
add
add
mov
push
push
push
push
call
add
mov
push
push
push
call
add
mov
push
push
push
push
push
call
add
mov
push
push
push
call
add
pop
add
push
push
call
add
pop
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
call
add
cmp
je
call
test
jne
mov
push
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
push
call
add
xor
push
call
add
add
push
push
call
add
add
push
push
push
push
push
call
add
push
call
add
cmp
jne
mov
mov
mov
sub
add
push
push
push
call
add
sub
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
and
push
push
push
push
push
call
add
rdtsc
mov
mov
mov
add
add
sub
and
add
pop
cmp
jne
mov
mov
add
or
and
cmp
je
cmp
jne
mov
sub
and
sub
cmp
jne
add
sub
pop
mov
add
cmp
jne
test
je
sub
pop
mov
mov
test
jne
sub
xor
add
sub
cmp
je
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
push
call
add
push
push
push
push
push
call
add
push
cmp
je
mov
cmp
jne
push
push
push
push
push
call
add
mov
mov
mov
mov
add
cmp
je
test
jne
mov
or
mov
sub
cmp
jne
add
mov
mov
add
sub
cmp
je
mov
mov
add
test
je
cmp
jne
mov
add
mov
cmp
jne
test
jne
sub
sub
mov
cmp
jne
add
and
cmp
jne
cmp
jne
and
test
jne
cmp
je
sub
add
mov
cmp
je
mov
sub
mov
test
je
or
mov
add
test
je
cmp
jne
sub
sub
and
cmp
jne
sub
add
xor
decl
add
roll
mov
subl
add
sub
sub
cmp
je
test
je
and
mov
mov
add
add
test
je
mov
add
mov
sub
test
je
add
mov
cmp
jne
add
sub
and
and
mov
cmp
je
and
add
mov
mov
mov
sub
sub
add
cmp
jne
or
subl
test
jne
mov
mov
add
cmp
jne
add
add
and
sub
cmp
je
mov
cmp
je
add
or
mov
sub
add
sub
add
and
add
jmp
cmp
jne
call
push
push
push
push
push
call
add
test
jne
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
push
call
add
pop
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
mov
mov
cmp
je
mov
add
sub
mov
sub
mov
sub
sub
add
push
push
push
call
add
mov
add
add
sub
sub
push
push
push
push
push
push
call
add
push
cmp
je
push
push
push
push
push
call
add
push
mov
add
mov
mov
call
sub
push
call
add
call
or
add
mov
add
cmp
je
call
push
push
push
push
call
add
mov
mov
push
push
push
push
call
add
push
push
push
push
call
add
mov
sub
add
or
cmp
je
cmp
je
sub
test
jne
test
jne
cmp
je
add
mov
call
mov
sub
push
push
push
push
push
call
add
mov
cmp
jne
and
mov
sub
mov
add
sub
add
mov
mov
sub
or
sub
sub
test
je
mov
or
cmp
jne
sub
mov
mov
and
sub
add
or
or
add
cmp
jne
sub
test
je
xor
add
mov
sub
add
sub
or
cmp
jne
mov
cmp
jne
sub
mov
add
cmp
jne
cmp
jne
and
xor
test
jne
add
cmp
jne
sub
mov
or
and
cmp
jne
cmp
jne
add
and
sub
mov
add
sub
cmp
je
mov
and
test
jne
cmp
je
add
add
add
cmp
je
mov
cmp
je
xor
and
and
sub
add
sub
or
add
or
je
mov
mov
or
sub
or
cmp
jne
add
repnz
push
push
call
add
addl
push
push
push
call
add
jmp
push
push
push
push
push
call
add
sub
mov
mov
mov
mov
sub
cmp
jne
mov
mov
and
and
mov
mov
add
cmp
jne
cmp
je
mov
sub
xor
sub
and
cmp
jne
mov
mov
mov
sub
add
add
test
jne
sub
mov
mov
add
add
add
cmp
je
mov
mov
add
cmp
je
sub
mov
mov
cmp
je
add
mov
mov
sub
sub
add
sub
cmp
je
cmp
je
sub
sub
add
xor
pop
add
cmp
jne
mov
sub
cmp
je
cmp
je
add
cmp
jne
or
cmp
jne
mov
add
mov
sub
or
pop
add
mov
cmp
je
cmp
je
or
mov
add
add
add
cmp
jne
and
sub
mov
add
cmp
je
cmp
je
add
mov
cmp
jne
cmp
jne
sub
mov
and
mov
add
cmp
jne
or
mov
cmp
jne
sub
mov
test
je
test
jne
and
cmp
jne
add
and
mov
mov
mov
sub
cmp
je
sub
cmp
jne
mov
mov
add
xor
sub
sub
test
je
cmp
je
sub
pop
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
add
cmp
jne
sub
sub
sub
sub
sub
cmp
jne
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
sub
mov
push
mov
sub
add
push
add
push
mov
add
add
mov
mov
or
add
sub
and
sub
sub
cmp
jne
mov
sub
mov
add
cmp
je
mov
add
cmp
je
sub
sub
sub
cmp
je
sub
xor
mov
cmp
je
cmp
je
cmp
je
sub
mov
mov
xor
sub
cmp
jne
mov
and
sub
mov
add
sub
add
and
add
and
add
add
mov
mov
and
sub
or
sub
add
add
add
cmp
je
cmp
je
sub
mov
xor
or
sub
sub
pop
cmp
je
mov
add
mov
sub
or
sub
add
pop
cmp
jne
cmp
je
mov
cmp
je
cmp
jne
mov
sub
cmp
je
mov
mov
add
sub
sub
add
or
cmp
je
cmp
je
mov
mov
add
cmp
jne
cmp
je
mov
cmp
jne
cmp
jne
and
and
cmp
jne
sub
mov
add
cmp
jne
sub
cmp
jne
add
mov
sub
and
mov
cmp
je
sub
and
mov
mov
and
sub
cmp
jne
mov
and
xor
and
sub
sub
add
test
jne
cmp
jne
mov
xor
mov
add
xor
sub
sub
cmp
je
sub
add
sub
sub
mov
or
cmp
jne
mov
mov
and
cmp
jne
sub
add
add
and
add
and
sub
pop
test
je
mov
mov
add
add
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
push
xor
sub
push
xor
sub
push
mov
cmp
je
sub
or
cmp
je
mov
mov
add
and
add
add
mov
sub
mov
mov
or
sub
mov
add
add
test
jne
cmp
je
cmp
je
cmp
je
xor
mov
sub
cmp
je
add
sub
sub
sub
cmp
jne
and
add
xor
or
mov
sub
cmp
je
xor
mov
sub
cmp
je
mov
cmp
jne
cmp
je
add
sub
add
mov
mov
cmp
je
mov
sub
sub
add
cmp
je
mov
or
cmp
jne
test
je
cmp
jne
sub
xor
mov
add
sub
add
cmp
je
add
mov
mov
add
or
sub
test
jne
mov
and
mov
sub
and
cmp
jne
mov
test
je
add
sub
test
jne
sub
mov
xor
cmp
je
xor
mov
sub
add
cmp
je
mov
and
and
mov
sub
sub
test
jne
add
mov
mov
sub
and
sub
cmp
jne
mov
add
sub
add
sub
mov
cmp
je
mov
mov
add
add
sub
add
cmp
jne
cmp
je
cmp
je
sub
mov
xor
mov
xor
test
je
mov
add
sub
mov
mov
add
cmp
je
mov
sub
mov
sub
add
add
sub
pop
mov
mov
add
mov
pop
add
test
jne
mov
mov
sub
test
je
mov
sub
add
mov
cmp
je
mov
or
and
xor
mov
add
cmp
je
mov
mov
cmp
jne
sub
mov
cmp
jne
add
add
or
cmp
jne
mov
mov
sub
and
sub
add
xor
pop
cmp
jne
xor
xor
sub
add
or
or
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
sub
add
sub
push
mov
test
jne
add
mov
sub
or
xor
add
sub
push
add
mov
mov
test
jne
sub
mov
cmp
je
sub
mov
mov
sub
cmp
jne
mov
xor
or
add
cmp
je
mov
cmp
je
mov
mov
or
cmp
jne
mov
add
mov
sub
cmp
jne
sub
sub
cmp
je
mov
mov
test
jne
mov
cmp
jne
cmp
jne
cmp
jne
add
cmp
je
and
mov
and
and
mov
add
sub
test
jne
cmp
je
mov
mov
cmp
jne
mov
sub
or
mov
cmp
jne
sub
add
xor
mov
or
and
sub
cmp
jne
cmp
je
xor
cmp
je
mov
sub
add
mov
sub
xor
sub
mov
add
add
add
add
cmp
je
add
sub
add
push
sub
mov
add
mov
cmp
jne
cmp
jne
mov
mov
sub
sub
add
sub
cmp
je
mov
add
mov
cmp
je
add
cmp
je
add
add
cmp
je
add
cmp
jne
xor
mov
mov
add
add
cmp
je
mov
and
and
mov
mov
sub
cmp
je
or
cmp
je
cmp
je
or
sub
mov
cmp
je
cmp
je
add
add
mov
mov
cmp
jne
mov
mov
and
cmp
je
cmp
je
mov
mov
and
test
je
cmp
je
cmp
jne
cmp
je
mov
cmp
je
sub
xor
sub
xor
cmp
je
mov
cmp
je
mov
mov
or
sub
add
test
jne
mov
sub
mov
test
je
test
je
xor
mov
xor
add
add
sub
add
sub
test
jne
mov
mov
sub
add
sub
sub
add
cmp
jne
add
mov
and
mov
cmp
je
xor
mov
add
or
cmp
je
mov
mov
sub
mov
cmp
je
cmp
je
mov
cmp
je
mov
sub
mov
cmp
je
and
xor
mov
sub
and
add
add
add
cmp
jne
cmp
je
cmp
je
xor
sub
mov
add
cmp
je
sub
mov
sub
mov
cmp
jne
mov
sub
mov
add
mov
sub
sub
add
sub
mov
mov
cmp
je
sub
cmp
jne
mov
test
jne
sub
mov
cmp
jne
mov
mov
sub
add
add
add
cmp
jne
mov
add
add
mov
add
add
sub
test
jne
add
cmp
jne
mov
mov
test
je
mov
mov
test
jne
sub
cmp
jne
mov
test
jne
mov
or
cmp
je
mov
sub
cmp
jne
add
sub
mov
mov
or
or
sub
add
test
je
mov
mov
sub
add
and
sub
and
sub
pop
xor
pop
sub
pop
mov
and
mov
test
je
add
cmp
je
mov
and
mov
and
test
je
xor
mov
add
cmp
jne
sub
mov
cmp
jne
mov
test
jne
cmp
jne
cmp
jne
mov
sub
and
sub
add
test
jne
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
xor
add
cmp
je
sub
push
add
mov
or
add
add
cmp
jne
sub
push
sub
mov
test
je
add
sub
mov
mov
sub
add
cmp
jne
mov
add
and
mov
mov
add
or
cmp
je
mov
mov
sub
test
jne
cmp
jne
mov
mov
xor
cmp
je
xor
cmp
jne
sub
sub
sub
sub
cmp
jne
cmp
je
mov
mov
cmp
je
cmp
jne
mov
mov
add
sub
add
add
cmp
je
cmp
je
mov
mov
add
sub
cmp
jne
mov
cmp
je
sub
and
mov
test
jne
sub
or
mov
mov
sub
add
sub
test
jne
sub
mov
add
sub
mov
sub
add
sub
add
add
cmp
je
add
sub
sub
sub
add
mov
mov
add
cmp
jne
cmp
jne
cmp
jne
mov
add
mov
and
cmp
jne
mov
sub
add
mov
mov
cmp
jne
mov
cmp
je
test
jne
add
sub
mov
mov
sub
add
add
add
test
je
mov
mov
add
cmp
je
sub
cmp
jne
mov
mov
sub
or
sub
add
add
add
sub
add
add
add
add
sub
cmp
jne
sub
sub
or
mov
sub
and
cmp
je
cmp
je
and
mov
xor
sub
cmp
je
mov
test
jne
cmp
jne
mov
add
add
and
mov
and
sub
cmp
jne
mov
mov
sub
or
sub
pop
or
pop
mov
mov
add
cmp
jne
mov
add
add
xor
sub
and
and
cmp
je
mov
and
sub
and
cmp
je
mov
sub
add
xor
test
jne
cmp
jne
add
sub
xor
add
mov
sub
sub
pop
xor
mov
sub
cmp
jne
mov
mov
cmp
jne
add
or
mov
sub
sub
xor
and
add
add
add
add
leave
ret
