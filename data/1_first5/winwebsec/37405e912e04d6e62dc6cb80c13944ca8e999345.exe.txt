out
sbb
add
mov
mov
inc
inc
out
mov
lock
add
imul
mov
outsb
pop
ret
pop
stos
fiaddl
mov
and
cmp
xor
movsl
pop
pop
hlt
sbb
sbb
push
sub
jecxz
ret
ds
mov
push
jbe
xchg
stc
sub
cmp
out
mov
sbb
inc
out
lods
jecxz
xchg
add
xchg
stos
jo
call
lret
xchg
stc
loopne
fmul
ss
dec
cmp
jecxz
xchg
js
mov
jbe
adc
das
cmc
cmp
daa
mov
and
ficoml
jb
data16
in
sbb
sbb
jne
repnz
push
xor
add
roll
cmc
mov
push
lds
orl
cs
and
mov
inc
mov
and
out
mov
jo
pop
ret
jmp
add
cmp
cmp
ss
jecxz
jp
mov
mov
inc
mov
mov
icebp
mov
xor
fs
mov
pop
loope
mov
clc
mov
sti
xor
and
ret
ror
sub
mov
lcall
xor
orb
pop
and
sub
and
mov
repz
fdivrl
cmp
rcpps
dec
push
add
lds
dec
lret
je
ja
daa
mov
sub
popf
bound
ss
jp
push
sbb
in
es
aad
cmp
add
fs
mov
divl
cmc
add
rorl
xor
xchg
xor
mov
imul
shlb
sarl
push
test
xor
pop
jae
cltd
adc
push
mov
add
jmp
in
ljmp
out
cmc
ffree
hlt
xchg
jmp
adc
dec
xlat
jne
sbb
push
lahf
mov
jno
push
cli
mov
out
in
lret
or
xchg
rcrb
adc
enter
pop
sub
xor
pop
mov
sbb
pop
je
push
push
sub
inc
and
and
lcall
cs
fst
sti
ja
xor
push
cmp
mov
fisttpll
xchg
adc
and
les
orl
popf
and
pop
push
xchg
adc
and
loop
cmc
cld
push
mov
mov
subb
out
ss
and
test
lret
aas
rorl
pop
jno
pop
inc
fdivp
lcall
dec
imul
push
add
sub
out
psubsb
inc
icebp
nop
pop
inc
insl
sti
dec
push
mov
mov
sub
pop
cmp
xchg
lahf
sbb
cld
and
mov
push
test
mov
aad
mov
in
mov
sbb
or
xlat
imul
sbb
adc
mov
cwtl
and
loope
jno
sahf
cld
and
adc
adc
dec
mov
xor
loop
or
shr
mulb
neg
mov
aam
sbb
dec
hlt
scas
fdivrl
sbbb
imul
xchg
push
mov
xor
popa
sbb
in
cmp
cmp
dec
jmp
ret
push
and
mov
repz
mov
int
iret
pop
test
shrb
xchg
mov
adc
xchg
xlat
pop
ljmp
filds
xor
lds
popf
adc
scas
adc
lahf
mov
mov
cmp
jle
scas
adc
pop
add
and
mov
mov
dec
addl
cmp
push
and
dec
mov
xchg
adc
out
jae
scas
jns
fldenv
inc
and
scas
jnp
into
call
std
ja
aad
mov
sbb
int
and
enter
mov
mov
adc
add
insl
mov
add
inc
sbb
orb
pop
les
aad
gs
adc
in
cltd
push
mov
mov
pop
dec
mov
lea
aam
popf
fst
push
fstpt
push
xor
int
pop
and
mov
rcll
scas
and
stos
ljmp
jle
xor
les
notb
xchg
stos
add
add
sarb
stc
jb
iret
pop
dec
insb
js
int3
mov
mov
shlb
pushf
sarb
call
iret
push
sub
sbb
pushf
sub
pusha
sub
cmpsb
mov
sbb
mov
push
insl
mov
jne
in
adc
shll
dec
push
testl
inc
pop
fsubp
mov
cmpsl
xchg
lret
push
and
xor
push
push
adc
movsb
pop
nop
inc
dec
mov
dec
cmpsw
nop
repz
or
lds
pop
xchg
les
push
data16
push
sub
cld
inc
push
cmp
adc
xchg
inc
pop
add
jge
lea
das
hlt
jl
and
push
cmpsl
and
outsb
popf
fnsave
or
pop
dec
add
xchg
push
push
jnp
push
je
and
inc
repnz
mov
xchg
rcll
jg
cltd
rcrl
mov
mov
sbb
sbb
push
lahf
mov
push
repz
jg
notl
push
mov
push
testb
pop
cmp
icebp
fwait
pushf
cli
jecxz
adc
pop
popf
push
lock
add
cld
call
lods
movsb
gs
add
push
fwait
xchg
push
add
or
and
aad
jno
arpl
lahf
cmpsb
outsb
or
icebp
sbb
popf
sarl
cmp
push
cmp
dec
mov
fstpl
add
ror
nop
divb
bound
fnsave
sti
cmp
ja
push
cmpsb
sub
sbb
out
dec
pop
insl
and
repz
add
mov
insl
stc
inc
or
cmp
ret
adc
jnp
pop
ret
sub
adc
cmp
inc
mov
testl
in
fimuls
cld
sbb
mov
insb
or
cmpsl
sub
movsl
jmp
inc
jle
movsb
cmp
addr16
pusha
scas
dec
lret
xchg
pop
mov
lea
fsubrl
iret
push
rorl
sbb
push
dec
dec
cmp
pop
mov
test
pop
dec
lret
gs
test
shlb
ss
insl
pop
mov
cmpsl
cmp
cld
aas
lahf
mov
ret
stc
push
push
mov
aad
inc
push
into
add
imul
sbb
addl
xchg
push
int3
push
cli
test
bound
xchg
in
das
cmp
jmp
pop
lret
fadd
ljmp
test
aas
cmp
sub
aas
xor
cltd
push
rcrb
pop
popf
fsts
cmp
std
pop
mov
test
nop
outsl
inc
cmp
ret
loop
stc
insb
xor
jp
fcmovnu
lds
dec
pop
dec
cmp
ds
and
pop
clc
mov
pop
pop
sub
lods
mov
adc
jns
cmp
mov
cs
cmpsl
jns
dec
andb
xor
pushf
sahf
dec
movsl
andb
xlat
mov
xchg
cld
jge
rcll
lahf
xor
test
jae
or
in
push
arpl
dec
loopne
or
adc
cmp
or
dec
cmc
cmpsb
add
insl
mov
outsl
scas
jns
add
jle
ljmp
call
sub
cmp
dec
popa
mov
stc
and
pop
lods
in
fstl
jge
xchg
xorl
mov
cmp
mov
call
stos
xchg
mov
jb
push
pop
cmp
add
adc
add
in
pushl
adc
or
and
sbbl
popa
adc
jcxz
pop
pop
inc
sbb
inc
out
push
aas
das
movsl
loop
mov
fadd
mov
adc
pop
faddl
aas
int
shll
cmp
mov
leave
call
jle
mov
out
cmpsb
int
sbb
int
shrb
rorl
repnz
mov
xlat
jecxz
dec
mov
xor
mov
fs
add
nop
jge
push
int
inc
mov
pop
mov
shrb
push
fldt
push
mov
cmpsl
cmp
mov
push
call
leave
pop
pusha
outsb
ljmp
les
and
cmpsl
or
push
ja
sbb
sub
ret
mov
lret
mov
out
sub
pop
cmp
or
inc
out
lock
sbb
cli
mov
cmpl
dec
jae
in
mov
push
adc
inc
stos
sub
iret
mov
lock
scas
dec
in
dec
out
cmp
or
test
adc
data16
dec
xor
cs
inc
jo
inc
sub
add
fstpl
or
nop
cld
or
test
jp
push
adc
bound
xor
add
mov
test
xchg
pop
sbb
mov
dec
and
xchg
jmpw
leave
je
nop
or
push
xlat
xchg
aas
fadd
lea
js
xchg
jnp
and
adc
mov
es
clc
popf
cmp
test
mov
inc
jmp
stc
jl
sbb
pop
adc
mov
repz
lcall
xchg
in
mov
iret
xchg
ds
es
add
outsl
or
bound
movsl
add
mov
inc
dec
jl
jle
jle
repnz
xlat
push
mov
stos
rcr
aad
cwtl
cmp
add
test
jno
push
dec
stc
xchg
add
jge
aam
pusha
inc
inc
mov
or
and
dec
into
inc
mov
adc
or
test
pop
adcl
jmp
or
and
pop
in
push
mov
lea
andb
sub
mov
jo
push
mov
fdivs
mov
sbb
jae
mov
sbb
sub
sbb
push
adc
data16
stos
inc
sbb
cmpsl
inc
or
ret
jno
xor
mov
psubb
arpl
scas
iret
hlt
cs
outsl
dec
dec
pusha
dec
pushf
lahf
std
mov
jnp
xlat
out
pop
sbb
mov
xor
fbstp
sbb
lahf
mov
pop
mov
xlat
pause
cs
jae
xchg
shlb
mov
movsl
outsb
sub
sbb
jge
aaa
clc
ret
mov
mov
cmpsb
stc
mov
cld
mov
fbld
xor
cmp
push
inc
adc
xchg
xchg
notl
xor
cmc
scas
loop
movsb
fbld
fstpt
out
add
scas
xchg
pop
fistps
js
and
insb
ret
pushf
and
mov
mov
cmpsl
push
and
cmp
mov
sbb
sbb
cmp
pushf
loopne
and
xchg
sbb
xchg
sbb
cmp
jmp
stos
jl
sahf
cmp
movsb
dec
mov
xchg
out
jg
cmp
dec
rcll
dec
jno
push
pop
dec
aaa
cmp
inc
das
int
enter
cmp
std
fdivrl
jl
bound
inc
jge
adc
test
pop
xor
pop
aas
aaa
sbb
daa
inc
jb
lahf
dec
imul
das
jecxz
xor
ficompl
aad
jle
lods
out
add
pop
dec
inc
addr16
dec
mov
lods
aas
cmp
negl
int
pop
sbb
mov
test
loop
mov
add
mov
enter
in
sbb
inc
pop
push
cli
jge
adc
or
lcall
sbbb
loop
dec
sub
jmp
fisubl
fldenv
sbb
icebp
xor
xor
lcall
ljmp
mov
mov
adc
pop
and
mov
push
mov
testb
push
pushf
sbb
shll
ss
ja
loope
pop
movntq
out
lea
das
sbb
mov
mov
dec
movsb
push
mov
fnsave
daa
psubusw
lods
mov
mov
rorl
fnstenv
jno
jl
rcr
loope
jae
jecxz
movsl
aad
pop
fldl
sti
add
jg
lret
inc
and
gs
push
add
fdecstp
xchg
add
push
adc
fmuls
scas
mov
cmp
leave
jp
fldt
ds
ljmp
aas
mov
cmp
icebp
or
sub
push
jecxz
adc
aad
jge
sar
xchg
iretw
mov
lret
mulb
xlat
push
jecxz
fmuls
mov
aas
xor
push
je
pop
jecxz
xchg
and
in
or
mov
shl
shl
mov
jne
movsb
mov
ret
mov
das
lahf
inc
xchg
xchg
add
sub
les
jae
addb
aas
adc
xor
xchg
in
cmpsb
jg
and
mov
add
stc
sbb
jg
out
jg
idivl
sbb
out
cmp
xor
pop
dec
addl
jl
int3
dec
psubsb
rorb
xchg
or
sbb
fadds
inc
in
xor
push
jle
loope
lods
popa
push
or
sub
and
jno
outsl
popf
out
sbb
push
sbb
inc
iret
xchg
cli
mov
cmpsb
mov
push
jns
push
fwait
repnz
pop
rcl
jnp
hlt
es
mov
pop
out
cmp
shrl
lods
pop
test
or
arpl
add
cli
dec
stos
lahf
pop
lret
into
push
divb
sbb
jnp
sti
loop
mov
jmp
push
inc
mov
jbe
add
jbe
cli
mov
dec
push
cmp
cmc
lahf
jo
rorl
xchg
and
jl
push
adc
mov
sub
stos
fsubl
stos
mov
outsb
dec
dec
cmc
jns
pop
fsub
sahf
adc
cli
and
pop
mov
mov
adc
push
and
pop
add
pop
sub
mov
mov
out
pop
sbb
sbb
cmpb
cmp
test
test
or
sbb
insb
inc
mov
or
pop
xor
les
xor
inc
adc
iret
and
mov
lret
ret
test
mov
xchg
adc
xorl
pop
cmpsl
sbbl
lret
lret
mov
leave
jb
xor
xor
ja
int
aam
cmp
jmp
adc
lcall
inc
jg
sub
scas
xchg
or
call
jns
push
aas
pushf
ds
sub
into
sbb
inc
stos
mov
fdivrl
xorl
xor
cmp
cmpl
mov
int
mov
mov
push
cmp
push
push
pop
mov
into
or
cmp
aad
outsl
mov
and
std
mov
int
lea
xchg
and
sub
xchg
mov
imul
and
rorb
les
popa
xor
lcall
xlat
loopne
push
outsb
inc
ficoml
imul
pop
xchg
rol
test
push
dec
aad
mov
inc
in
es
out
int
jp
push
xchg
xor
mov
jmp
aam
push
mov
dec
pop
sbb
jno
cmpsb
push
jmp
in
movsl
inc
jecxz
cwtl
lock
test
xor
lock
sub
fidivrl
cmpb
and
adc
pushl
rcrb
sub
jge
sbb
aad
push
jo
sahf
cs
adc
mov
scas
fwait
mov
pop
out
loopne
cs
or
or
cmp
push
and
xchg
loopne
sub
xor
adc
sbb
adc
out
fists
fnsave
sahf
into
shlb
jl
push
cmp
cmpsb
icebp
cmp
push
addps
or
sub
sub
adcl
int
aam
xchg
push
pop
sbb
stos
xor
add
and
cmp
and
cmp
out
sbb
scas
test
lahf
cltd
cmp
rcrb
aaa
sbb
test
mov
xlat
ja
and
mov
pop
dec
mov
inc
adc
push
xchg
dec
fdivs
mov
sbb
adc
dec
inc
and
pop
adc
and
sbb
push
jp
gs
adc
sub
fldl
arpl
aad
push
rorl
pop
jl
rorl
sbb
pop
push
xlat
in
xor
dec
jg
cld
mov
push
lds
push
jno
mov
mov
cmp
outsl
jns
and
shr
les
pushf
popa
push
frstor
aam
scas
int
in
cmpsb
and
scas
inc
mov
ljmp
dec
xchg
ret
rcll
call
rcll
jnp
inc
or
outsb
or
mov
mov
pop
add
jmp
and
jmp
leave
inc
pop
hlt
rolb
jle
in
mov
push
push
mov
pop
mov
roll
mov
xchg
lret
loope
loope,pn
jecxz
mov
imul
sbb
sub
jb
imul
mov
jge
outsb
and
das
jmp
lods
rolb
orl
pop
imul
repnz
sbb
out
mov
scas
sub
push
lds
adc
test
jmp
sub
push
sbb
push
lret
hlt
movb
push
dec
and
mov
pop
ja
push
push
xlat
std
mov
sbb
adc
icebp
mov
xor
lds
mov
dec
bswap
ficoms
jge
ret
and
loope
loope
std
and
add
mov
in
mov
xor
or
in
daa
push
lea
stc
loope
call
adc
int
and
add
mov
mov
and
andb
mov
jg
repnz
pop
sub
div
les
pop
movsb
hlt
sub
inc
jg
rcl
and
outsl
pusha
ret
je
mov
in
dec
arpl
xchg
pop
int3
push
incl
pushf
sub
sub
call
rcrb
pop
addb
movsl
pop
jbe
das
mov
mov
push
xchg
push
inc
adc
daa
nop
pminub
inc
jo
call
sub
inc
inc
std
fwait
nop
mov
push
stos
lods
sbb
test
std
fildll
xchg
iret
stos
loop
dec
loope
mov
imul
or
adc
testl
jo
mov
and
sbb
movsl
rcr
sbb
inc
xor
or
leave
mov
ret
pop
xchg
in
cs
pop
and
call
les
mov
arpl
aaa
cmp
inc
cmp
and
hlt
xlat
mov
leave
outsl
and
dec
fbld
dec
push
into
jno
and
adc
xor
fnsave
sbbb
pop
push
outsl
lea
cmp
cmp
mov
imul
jb
pop
jmp
jmp
subl
out
test
cmp
and
nop
addr16
sahf
idivb
sti
lret
popf
xchg
sub
push
ds
jmp
les
fsts
leave
psrld
cltd
mov
dec
push
orb
pop
scas
ficomps
std
fstps
mov
jmp
repz
sarb
ss
shrb
mov
mov
loop
test
daa
lods
cmp
xchg
mov
js
add
add
dec
mov
out
mov
and
data16
or
mov
enter
movsl
scas
mov
lcall
ret
cwtl
inc
sub
movsl
imul
jg
pop
inc
nop
mov
jecxz
jge
xchg
pop
into
negb
xlat
icebp
mov
add
xchg
lods
xor
adc
aad
mov
incl
repnz
mov
or
testb
and
ljmp
inc
sbb
inc
sub
mov
jns
addr16
and
mov
into
addr16
lods
adc
xchg
mov
or
add
scas
mov
repz
xor
add
mov
fmuls
sbb
xor
insb
loope
insl
jmp
cmp
hlt
adc
xor
clc
adc
push
mov
les
outsl
roll
pop
arpl
ret
sub
mov
rclb
hlt
adc
or
imul
xchg
jbe
cmc
sub
out
lock
adc
andl
or
mov
fiadds
sbb
cmp
stos
mov
add
inc
and
out
and
mov
xchg
neg
sub
loop
cmp
lret
pop
adc
aad
mov
jle
insb
inc
in
add
shrb
inc
xchg
stos
jle
pop
imul
in
mov
inc
popa
push
out
lds
stc
aam
out
je
stos
in
pminub
inc
add
and
push
push
addr16
adc
arpl
cmp
jp
push
fwait
dec
fistpl
arpl
clc
lods
aaa
and
test
mov
lret
push
shr
pop
leave
sbb
in
add
faddl
mov
inc
bound
or
ret
dec
sub
or
imul
hlt
sahf
dec
xor
xchg
cld
repz
sub
fcmovu
jmp
mov
aas
mov
and
cmp
js
pushf
dec
decb
sti
int3
push
les
and
insb
jecxz
bound
popf
mov
inc
es
jmp
xchg
and
lahf
mov
push
xchg
das
add
data16
fldl
ret
or
push
push
fabs
mov
dec
mov
jno
cwtl
mov
xchg
cmpsl
adc
sbb
sub
cmpsb
mov
and
mov
cmp
call
mov
outsb
mov
adc
or
fisttps
arpl
adc
sub
push
pop
lret
repz
rcrl
sub
push
fwait
sbb
lds
cmpsl
mov
mov
shlb
sarb
jmp
scas
add
call
scas
adc
mov
fmull
cli
or
inc
mov
test
jnp
sub
dec
cmp
sti
pop
mov
cld
lret
add
adc
cmp
jmp
fs
adc
cmc
jb
cltd
jo
cmp
push
jno
jne
pop
or
sub
or
inc
adcl
pop
dec
or
cld
ja
sub
mov
and
adcl
pop
rcl
mov
mov
jmp
jae
inc
mov
push
int3
xor
xchg
adc
inc
cmpsb
lock
test
mov
inc
roll
std
sbb
xlat
push
dec
loope
cs
sbb
stos
push
lcall
arpl
and
inc
inc
pop
xchg
jns
pop
or
inc
pop
xlat
loope
jl
mov
cmp
mov
ds
jp
dec
push
fmul
or
cmp
lods
insb
mov
or
mov
dec
or
fsubr
nop
pop
hlt
mov
lahf
jno
push
mov
nop
mov
dec
pop
in
popa
sahf
mov
or
in
or
negl
ficompl
clc
dec
add
lret
stos
cmpl
insl
xorb
mov
push
in
adc
bound
add
jl
cmp
aas
mov
mov
inc
imulb
xchg
mov
jbe
sub
loope
pop
out
dec
ret
add
dec
mov
test
jg
fisttps
test
aam
notb
insl
roll
loop
es
push
scas
pop
icebp
pop
jns
repz
popf
mov
or
sub
xchg
or
outsl
test
or
pop
cs
insl
in
mov
sub
es
sahf
jne
mov
mov
pop
lds
les
sub
cmp
or
or
pop
pusha
sti
loope
jge
cli
lods
cwtl
sarb
and
out
in
gs
xchg
jbe
pop
cmp
adc
push
push
mov
xchg
cmc
idiv
push
std
or
int
ss
fimull
jb
fstpl
fsub
out
jecxz
mov
or
idivb
xorl
rcll
pop
in
inc
shll
cmp
adc
mov
add
sbb
daa
andb
push
call
add
aam
pop
inc
and
push
jp
cmp
or
iret
push
out
jecxz
mov
mov
dec
jmp
push
das
xor
arpl
movsb
jnp
pop
push
mov
jb
mov
push
shlb
mov
shll
pop
lock
fstp
arpl
je
pusha
test
mov
xor
xor
sti
sub
and
or
mov
cmpsl
jne
lret
jecxz
xorl
fists
lods
pop
push
mov
pop
in
and
daa
mov
lods
sbb
or
or
inc
xor
push
pop
stos
jle
je
jbe
mov
lret
bound
cmpsb
push
xchg
fildll
lea
rorb
test
mov
sub
jo
int
filds
fwait
inc
mov
fisttps
or
stos
push
sub
aas
dec
out
addr16
hlt
icebp
add
fsubl
jmp
mov
add
and
lock
pop
pop
imul
cmp
shll
les
cmpsb
mov
adc
sti
fwait
test
jg
adc
pop
test
nop
jae
mov
loope
ds
jmp
push
out
bound
and
cwtl
push
fwait
loopne
or
call
icebp
mov
fimull
pop
aaa
add
pushf
jmp
pusha
or
out
and
pusha
dec
pop
sti
shrb
loope
xor
fwait
insb
dec
jb
pop
add
roll
adc
jb
ljmp
insb
or
popa
xchg
xor
fcoms
hlt
push
test
loopne
lods
adc
insl
or
test
aad
jae
das
pop
test
xchg
push
fisubrl
lret
xchg
clc
dec
lret
je
mov
jg
fldl
mov
ficoml
mov
insb
fisubrl
popf
cmp
aad
pop
das
mov
leave
xchg
push
jo
push
xlat
dec
xchg
mov
sbb
mov
jnp
iret
lea
je,pt
pop
pop
loopne
arpl
loope
mov
mov
push
dec
sub
jg
inc
or
int
sub
test
pop
mov
mov
out
sub
rcrl
addl
loopne
add
ja
sbb
inc
or
pop
add
fs
pop
sbbl
aas
sub
pop
inc
nop
out
int3
leave
pop
mov
stos
out
loop
fcomps
std
dec
enter
repnz
and
mov
inc
and
sbb
cmpsb
stos
cld
sbb
stos
in
push
jbe
lods
push
xchg
fdiv
sti
mov
in
jl
xchg
lock
stc
lahf
hlt
aam
cltd
mov
mov
and
jb
and
inc
sbb
scas
enter
roll
mov
jle
idiv
xchg
push
xor
sbb
bound
cld
call
dec
in
mov
xchg
mull
test
pop
lret
sub
sbb
mov
cli
outsb
loop
hlt
jl
lea
xchg
or
mov
sbb
cmp
push
adc
lcall
loopne
add
xchg
push
add
popf
push
inc
push
push
add
dec
fldl
clc
inc
mov
or
mov
mov
cmp
dec
add
pop
pop
insl
dec
or
dec
and
imul
jae
jae
pop
pop
out
loope
int3
jnp
and
or
jmp
daa
add
mov
psraw
cmp
les
js
xor
xchg
repz
xchg
adc
jb
cmp
cltd
jnp
sbb
sbbb
loope
dec
pop
xlat
sbb
inc
aas
mov
xchg
xor
lods
mov
jle,pt
int
mov
imul
movsl
inc
daa
xlat
roll
insb
mov
cld
cmp
mov
fwait
xor
cmp
inc
fsts
jnp
dec
add
ror
push
pusha
fcomps
cmpsb
int3
mov
inc
pushl
mov
fistl
mov
adc
mov
sub
repnz
aaa
movsl
popa
setbe
xorl
sub
push
ljmp
leave
xchg
stos
inc
mov
mov
mov
mov
jnp
xor
mov
subl
mov
xchg
fisttpl
mov
xchg
js
jns
rclb
enter
jmp
mov
lret
sub
daa
enter
js
cltd
xchg
xchg
inc
out
push
or
lcall
or
xor
adc
push
cmpsb
and
ss
sub
sbb
push
mov
sub
mov
pushf
and
mov
xchg
vrsqrtps
scas
mov
ret
adc
push
mov
sub
mov
adc
cs
aam
cmpsl
mov
jmp
cwtl
int
jbe
push
xor
hlt
lret
mov
rcrl
mov
pop
jae
cmp
fcoml
fwait
sbb
sbb
stos
aaa
in
lods
loope
mov
out
mov
jmp
jbe
push
ss
idivb
iret
mov
dec
push
jmp
jle
fistpll
enter
lds
loope
cmp
pop
and
pop
stos
adcb
sub
out
sub
pop
mov
cs
add
adc
dec
ljmp
jg
fsubl
jne
repnz
stos
inc
cmp
fbld
pop
repz
stos
pop
mov
push
imul
push
dec
ret
hlt
movsb
mov
inc
enter
in
mull
out
cld
sahf
jae
push
stos
fcoml
and
mov
enter
int3
lods
adcb
adc
pop
aam
ret
xor
cmpsl
pusha
adc
imul
sbb
mov
out
mov
mov
cmc
xchg
fisubl
xor
sub
sbb
imul
outsb
sbb
jo
stos
xlat
xlat
pop
mov
lods
push
adc
icebp
pop
xor
rcrl
inc
bound
sbb
cmp
cmc
lock
xchg
adc
mull
pop
inc
push
lods
lret
pop
gs
stos
arpl
std
push
jge
cmp
mov
jge
xor
mov
mov
pop
or
and
mov
fisubl
sar
jne
pop
aad
stos
mov
addl
imul
daa
xor
push
cmc
mov
pop
cmp
inc
lds
xchg
push
dec
pushfw
ljmp
test
fldcw
jb
pop
inc
outsb
stos
arpl
mov
jmp
iret
jnp
xchg
mov
xchg
sar
rolb
pop
cwtl
daa
adc
cmp
fwait
shl
mov
repnz
cmpsb
add
inc
mov
icebp
pusha
inc
ficomps
sbb
xchg
sub
lret
jne
push
ret
jno
jne
dec
inc
aas
lret
dec
popa
mov
add
jo
cmp
xchg
pavgw
push
cmp
lahf
push
sbb
int3
cmp
stos
aam
mov
stc
mov
cld
lods
out
popf
lret
mov
jge
in
jo
xor
or
mov
pop
mov
aad
jnp
faddl
pop
push
ja
xchg
mov
ret
push
pop
jg
mov
mov
hlt
arpl
aas
into
adc
jae
pop
or
xchg
gs
les
jle
out
jmp
cmpsb
push
leave
jecxz
sbb
jno
mov
mov
mov
jp
jp
movsl
fwait
inc
in
pop
mull
stos
std
xchg
cmp
stos
pop
cmpl
cltd
test
bound
mov
adc
jmp
je
test
xchg
xchg
pop
inc
jb
mov
cmpsl
mov
test
push
mov
mov
int
or
xchg
push
adc
in
and
adc
js
es
addl
pop
jle
or
bound
adc
daa
jg
insl
or
xor
nop
mov
jne
adc
dec
pop
nop
mov
call
xor
out
push
aad
fxch
or
pop
cmpsb
adc
and
xor
cmp
ds
mov
in
or
repz
insb
inc
mov
mov
rcll
imul
pop
mov
sub
xchg
mov
add
mov
mov
adc
mov
in
and
lods
pop
test
push
pop
dec
or
jp
hlt
mov
sahf
scas
loopne
test
push
stos
stc
mov
or
xchg
or
shrb
test
roll
xor
jns
out
testl
mov
jecxz
xor
vpsrlw
loopne
mov
lahf
pop
mov
xchg
and
push
mov
ljmp
add
cmc
xchg
daa
sahf
sub
ud2
imul
push
lret
mov
push
movsl
mov
adc
inc
jmp
dec
clc
add
mov
aad
sub
mov
fistl
cmpl
ficoml
pop
lahf
add
jmp
inc
incl
ficompl
mov
jne
ret
dec
test
push
scas
jbe
insl
and
adc
adc
jecxz
sbb
or
push
xchg
sbb
jl
aam
push
out
loope
fwait
lcall
fsubrp
out
sbb
mov
jnp
mov
fwait
and
mov
sbbl
shll
mov
sub
in
xchg
aaa
or
xchg
sbb
xchg
inc
out
lods
pop
sub
jmp
in
fmuls
push
xlat
lret
xor
mov
cmp
loope
sbb
sbb
sahf
dec
jp
inc
mov
cmpsb
mov
mov
shll
mov
std
push
xor
lret
push
fldt
rcrb
mov
mov
jo
pop
ret
and
cmp
mov
and
cmpsb
push
and
xor
in
and
lret
jo
fs
inc
or
sub
iret
ret
jl
cmpsb
stos
sbb
shll
nop
inc
push
push
cmpl
cmpsl
imul
push
je
ds
and
inc
pop
test
icebp
xor
push
test
xchg
lret
and
push
fs
add
mov
movsb
scas
jge
cmpl
jle
xor
xchg
mov
arpl
in
jl
lods
sbb
mov
arpl
int
sbb
sbb
mov
sbb
adc
lahf
sbb
popa
lahf
xor
dec
jge
hlt
mov
ds
xchg
cmpsb
or
rclb
inc
cmpsb
fwait
mov
fisubs
sbbb
push
scas
mov
mov
outsl
pop
test
test
or
sub
cmp
lret
divl
jb
mov
stos
das
add
out
mov
inc
sbb
sbb
mov
xor
movsl
cmp
jbe
and
stc
xchg
inc
dec
mov
mov
jg
sbb
gs
ret
xchg
adc
loopne
inc
sub
push
insb
jae
mov
sarb
cmp
dec
mov
push
rcrl
add
les
pop
cmp
jne
push
iret
mov
inc
dec
iret
jge
xor
jnp
and
adc
into
mov
repz
daa
in
push
add
dec
pusha
sbbb
das
popf
push
inc
test
or
and
cmp
out
ror
jmp
cld
mov
cld
xor
xchg
xchg
in
outsl
fs
xchg
sub
mov
mov
pusha
out
pop
push
pop
bound
ucomiss
xchg
stos
dec
loop
imul
jl
les
mov
fiaddl
adc
jecxz
faddp
push
sbb
inc
loopne
cld
and
test
sub
mov
sub
xor
daa
sbb
movsl
mov
cmpsb
sbb
jne
stos
cmp
movsl
outsb
jae
repz
cmp
outsl
lahf
lods
pop
push
add
aam
push
push
cmc
and
cmp
loop
adc
out
data16
pusha
adc
xchg
pushf
adc
jg
in
out
xor
or
mov
data16
dec
push
daa
jecxz
cmp
shl
decl
add
jmp
xor
inc
div
xchg
add
or
cmp
shrl
ret
das
mov
add
outsb
mov
popa
mov
nop
aad
pushf
mov
data16
int
outsl
pop
xor
or
movsb
ret
sbb
jnp
loope
gs
and
inc
fcmovnbe
mov
mov
sub
lea
shlb
pusha
or
clc
fdivrs
lret
aas
jecxz
aas
test
jge
mov
int
outsb
dec
stos
scas
mov
xor
in
imul
inc
fisubrs
mov
xor
add
jp
ficoms
call
inc
test
xchg
cmp
or
pop
lea
leave
shrl
sub
fdivs
test
or
loopne
xorl
or
outsl
cmpsl
ss
jns
stc
pop
mov
push
adc
mov
xchg
push
sti
mov
rcl
je
push
in
scas
xchg
fmuls
and
jns
push
xchg
mov
movsb
jecxz
in
fwait
daa
lret
mov
xor
mov
outsl
mov
out
je
insb
mov
jmp
mov
int
inc
data16
movb
out
xchg
xor
imul
gs
push
inc
mov
add
pop
inc
test
mov
xlat
mov
sub
mov
and
push
sbb
jo
inc
int
jle
outsl
sbb
cmp
orl
dec
addr16
mov
add
push
push
in
dec
cmp
dec
push
add
sub
and
sub
outsb
in
iret
pop
pop
enter
in
inc
mov
cmp
call
rolb
cli
icebp
gs
jno
mov
movsb
test
add
enter
xor
mov
into
loopne
fs
sarl
mov
pop
pop
xor
and
jnp
ja
adc
sub
testl
ret
fnsave
dec
popf
pop
and
int
fidivrl
fildll
fwait
out
jg
push
adc
xchg
lods
loop
dec
sahf
shlb
outsl
jg
pop
aad
jno
jns
shlb
test
cmp
int3
inc
aam
shll
fnsave
clc
fisttpl
cmp
mov
shrb
push
mov
scas
jae
sahf
inc
pop
lock
xchg
inc
je
lock
aad
and
ret
xor
imul
filds
and
out
dec
or
fildll
add
dec
xchg
cwtl
and
jmp
cmpsl
jno
scas
mov
cmc
bound
mov
fcomi
ret
ljmp
das
xchg
mov
punpcklbw
sahf
je
mov
mov
in
adc
push
cmpsl
xor
xchg
popf
pop
ficoml
xchg
lds
pop
or
xchg
popf
call
fisttps
imul
rcr
ret
mov
aad
dec
aaa
xor
sbb
adc
fsub
decb
fadds
sbb
popf
or
adc
xor
sub
cmp
mov
mov
popl
in
xchg
dec
les
mov
cwtl
stos
sub
movsl
mov
das
adc
jl
fistps
lret
repnz
cltd
mov
jecxz
push
fistl
clc
cmp
cmp
ss
sbb
orl
and
push
cmpsb
adc
ljmp
lea
sub
std
or
sbb
pop
in
out
ret
cwtl
lods
sbb
pop
push
rcrb
cmp
sbb
xchg
sub
dec
adc
rcll
test
mov
xor
rolb
mov
test
jnp
loopne
sbb
aas
fidivrs
jp
inc
shl
or
aam
out
ljmp
clc
push
mov
loopne
inc
test
jb
inc
mov
inc
je
xor
dec
out
or
das
sbb
dec
arpl
mov
in
mov
aad
out
adc
or
dec
sub
sbb
out
push
mov
mov
cli
dec
rolb
adc
xlat
inc
js
and
enter
lods
sub
jne
mov
xor
add
test
notb
fs
enter
pop
mov
or
pop
ret
arpl
xchg
sub
push
decl
or
adc
mov
adc
movsl
lods
std
jbe
cmp
pusha
mov
in
pop
out
sti
stos
inc
mov
iret
xchg
jmp
sbb
jg
cld
test
cmpsb
fnsave
icebp
xor
aam
in
push
ljmp
addr16
mov
xchg
lret
movsb
addl
jge
dec
xchg
jmp
call
fidivl
stc
test
fwait
stos
mov
and
jne
dec
push
cmp
scas
imul
xor
scas
addr16
and
addr16
xor
xor
pop
cmpsl
fisttpl
in
pop
sbb
xor
pop
mov
mov
add
sub
or
out
xchg
int3
jp
push
mov
cs
cmpsl
push
inc
adc
pop
mov
sub
and
pusha
testb
daa
xchg
sbb
cltd
and
push
nop
arpl
cld
dec
hlt
and
outsb
pop
add
push
lret
pop
lods
dec
fnstsw
bound
ret
addr16
mov
inc
push
xor
xchg
dec
push
add
shll
xlat
mov
movsb
jl
movsb
repnz
xchg
icebp
imul
or
xchg
icebp
xchg
ljmp
xchg
dec
cmp
cltd
into
out
jb
mov
fs
cmp
enter
dec
sbbl
sub
xor
iret
dec
in
lods
enter
imul
pop
pop
add
pop
jl
jb
inc
pop
rcrb
add
idivb
mov
pop
scas
cmpsb
adc
xchg
jnp
add
cmp
in
xlat
iret
cld
mov
mov
fldcw
fnstcw
stc
clc
flds
sub
inc
mov
outsl
lock
ljmp
and
cmpsb
faddl
arpl
xchg
sahf
and
cmp
movups
xchg
mov
add
dec
mov
out
sti
sahf
add
push
outsb
stc
add
lret
js
xchg
dec
scas
add
add
inc
aam
dec
and
xchg
add
dec
test
cmc
into
mov
pusha
sbb
lea
int3
inc
cmp
cltd
mov
outsl
loop
ljmp
push
mov
cmpsb
pop
pushf
pushf
lahf
sar
or
mov
nop
adc
xor
or
mov
cmc
push
xor
test
cmpsb
divb
popa
pushf
imul
inc
cmpsl
in
pop
cmp
into
inc
movsl
rolb
das
iret
and
popa
lret
sub
cld
sahf
inc
shrl
stc
imul
int3
cmp
or
push
xor
repz
hlt
xor
adc
sub
shll
mov
add
lods
pop
xchg
push
testb
stc
aad
imul
in
xchg
outsl
out
xchg
xor
xor
cmp
cld
data16
int
dec
std
arpl
incb
jmp
mov
ja
mov
rorb
inc
das
mov
lock
sub
icebp
sub
imul
das
pop
movsb
sub
or
cmp
mov
int
testb
insb
pop
xchg
rcr
mov
shl
popa
imul
sbb
mov
in
test
pop
clc
adc
mov
cli
hlt
cmp
and
xor
hlt
xchg
and
mov
sbb
mull
aas
aad
lcall
or
jp
cmpsb
movsb
push
in
cmpsb
fsts
int3
or
test
stc
aam
add
stos
lcall
xchg
sahf
mov
int
pop
jne
lahf
jb
loopne
movsb
cld
andb
xlat
nop
xchg
mov
xchg
ja
lock
jp
test
adcl
leave
dec
xor
sahf
push
push
mov
pop
xchg
xchg
cltd
xchg
inc
out
popa
jg
int
and
lret
push
mov
sbb
fsubrp
shll
ret
add
or
pop
aam
xlat
lea
push
and
mov
loop
daa
pop
mov
arpl
inc
dec
lea
mov
nop
sbb
in
lea
cwtl
bound
rorb
shll
xlat
das
push
popf
int3
scas
inc
lcall
nop
or
adc
ds
xchg
or
lret
or
or
or
mov
test
outsl
test
cmpsl
and
insb
lods
lods
cmpl
test
sbb
imul
xchg
adc
and
push
shr
jl
fbld
dec
test
mov
fadds
dec
sub
cs
and
pop
pop
test
je
imul
add
dec
sub
gs
cmp
add
subl
movb
jge
sub
jecxz
iret
inc
test
mov
cmp
aad
adc
pop
cmp
xchg
push
and
bound
mov
add
adc
fwait
xchg
outsl
push
xor
xchg
or
in
adc
enter
stc
je
cs
pop
pop
jns
add
fsubrl
sub
adc
sbb
push
pop
inc
aam
test
mov
cmp
or
xor
and
in
dec
mov
mov
movsb
xorb
pop
orl
xchg
jmp
pop
inc
mov
loopne
mov
and
mov
push
lret
rcrb
in
cltd
mov
int
dec
push
mov
lcall
loopne
fsts
or
cli
and
xor
divb
pop
std
push
imulb
sbb
or
adc
mov
lock
cmpsl
mov
dec
mov
es
add
inc
xor
or
movb
and
andl
or
lods
jmp
loopne
add
sbb
xchg
xchg
and
cmpl
test
dec
fidivrs
and
push
xchg
mov
adcl
insl
adc
outsl
cmc
push
xlat
or
out
xchg
out
cmp
inc
and
shrl
clc
push
insl
sti
outsl
add
add
jno
imul
xchg
lret
lahf
fs
in
push
dec
mov
xor
adc
lahf
sub
or
dec
xchg
das
iret
mov
leave
mov
adc
fcmovnbe
inc
adc
sub
mov
sbb
dec
in
sbb
or
imul
jp
sarl
and
scas
add
adc
sti
fiaddl
fcmove
out
xchg
adc
inc
ja
lret
rorb
int3
outsb
jbe
jne
and
insl
xchg
push
lock
jmp
cmpsl
mov
jo
outsb
imul
cli
fsts
sub
dec
mov
inc
popf
gs
pop
loop
xor
jae
inc
mov
xchg
push
mov
push
shl
or
and
jb
xor
mov
or
and
incl
jle
xchg
mov
rorl
push
adc
popf
jns
mov
sarb
fists
mov
mov
negb
add
xchg
xchg
shlb
fsubs
test
xor
and
ja
xchg
lret
pushf
addb
movsb
or
aad
xor
mov
sbb
add
xor
sub
arpl
test
sti
mov
mov
xchg
push
add
cmp
dec
or
adc
adc
ret
push
sbb
sub
cmp
dec
lock
rorl
or
pop
repnz
mov
pushf
mov
mov
decb
add
data16
push
and
push
xor
andb
shrb
addr16
in
sub
fnstcw
out
and
dec
or
jmp
shlb
shr
ss
push
imul
bound
imul
mov
loope
or
fisubl
adc
adc
xlat
pop
fistpll
xchg
or
sbbl
inc
imul
pusha
xor
push
je
inc
push
sub
test
pop
imul
adc
es
ret
sub
cli
mov
adc
orb
out
jecxz
jp
add
std
sub
xchg
inc
mov
cmp
lcall
js
mov
inc
in
mov
out
xorl
jle
xchg
stos
flds
pop
call
cmp
rolb
lret
popa
fmull
aad
mov
and
cmpsb
leave
sub
xchg
add
push
or
add
pop
dec
rorl
leave
push
clc
adc
mov
addr16
mov
into
jmp
add
jg
xorb
cmp
xchg
ss
sbbb
test
fcoml
lret
sbb
sbb
pop
cltd
inc
out
test
jns
sub
and
lret
pop
dec
jbe
mov
mov
stos
cs
xlat
sub
in
cmp
and
enter
dec
pop
jmp
dec
fisubrl
int
in
push
push
xor
cmc
jle
xchg
clc
test
pushl
lods
jbe
xchg
adc
xorl
mov
mov
mov
add
sub
pusha
lcall
fildll
aaa
cmc
cs
and
mov
cmpsl
add
or
push
jl
cld
movsl
hlt
ds
lods
inc
jne
cmp
shr
and
xchg
inc
sbb
push
xlat
incb
mov
cmp
in
les
test
arpl
repnz
adc
in
cmpsl
cld
pusha
stos
cmp
push
into
cmp
push
push
pop
push
dec
das
rcrl
mov
xchg
mov
fs
or
adc
addl
ljmp
jnp
inc
imul
scas
hlt
mov
jae
das
inc
aad
xor
sub
dec
xchg
pusha
cs
enter
jge
cmp
fistpl
pushf
ljmp
push
lds
repnz
clc
div
ret
out
clc
lahf
mov
mov
or
adc
rcll
or
jb
rsqrtps
cs
insl
sub
add
mov
sub
mov
mov
pop
push
inc
stc
mov
es
stos
iret
leave
sbb
pushf
sub
dec
repnz
shlb
ja
or
aad
test
ljmp
dec
and
ret
adc
popa
rclb
scas
out
ds
cmp
mov
mov
inc
push
in
in
movsb
and
push
test
in
dec
js
push
std
adc
sbb
loopne
mov
mov
push
pop
imul
icebp
sub
adc
mov
aaa
lds
push
mov
mov
clc
inc
cmp
cmp
fwait
add
incb
xchg
sti
and
mov
aad
bound
push
cmp
add
rorb
dec
sub
jge
outsl
sahf
push
orb
pop
pop
pop
pop
add
and
dec
inc
fwait
adc
iret
push
and
mov
or
cmp
xchg
std
push
test
imul
mov
adc
xabort
out
dec
push
inc
sub
cmpsb
adc
and
addr16
subl
xor
pusha
stos
fadd
xor
xchg
sahf
jne
push
sbb
add
lods
ret
es
fsubl
push
lret
rorb
xor
sbb
mov
xchg
adc
shrl
incl
sbbb
xchg
fisubrs
in
arpl
gs
add
dec
xchg
stos
scas
dec
call
mov
cmpl
ljmp
loop
ds
xor
negb
push
test
mov
cld
sbb
push
push
jp
out
das
and
movsb
fstl
cmp
jmp
adc
adc
mov
sub
sbbb
cmp
fistl
int
imul
jmp
cmp
ss
rcrb
out
xor
or
mov
pop
xchg
xor
pop
inc
cmp
mov
xor
lret
movsb
pop
cld
pushf
xor
xchg
scas
addr16
mov
mov
add
mov
and
out
and
add
push
popf
cmc
je
sbb
mov
fs
add
sub
lahf
jg
pop
dec
push
cmp
dec
pop
mov
lret
sub
fstl
icebp
insl
xchg
jno
push
lea
push
sahf
inc
loop
js
push
es
popa
xchg
cli
lret
sbb
mov
jp
pop
add
pop
clc
lods
mov
mov
in
fcmovnb
popf
shlb
jg
push
ret
jbe
movsb
aam
add
lds
sarb
mov
inc
jp
and
cwtl
shll
sub
fs
pop
or
enter
cmp
js
cwtl
icebp
and
push
das
imul
imul
test
pop
out
xor
scas
sarb
mov
pop
xor
mov
mov
jns
nop
inc
jl
insb
mov
cltd
clc
xchg
out
mov
jmp
loopne
es
lock
in
cmp
out
loope
fildl
repz
int3
push
mov
sahf
ret
mov
bound
jle
adc
push
or
pushf
inc
jmp
xor
or
movsl
cmp
aad
mov
inc
push
mov
push
mov
inc
or
cs
in
mov
out
and
test
dec
or
or
out
dec
pop
movsb
pusha
sub
fs
fmull
aaa
movsb
sub
clc
sbb
dec
pop
and
sub
mov
jae
sub
inc
cmpsl
pusha
imul
pop
xor
push
pop
nop
cld
add
loope
gs
pushf
mov
push
and
adc
cmp
jnp
mov
jae
test
fwait
xor
cmp
fwait
imul
jbe
mov
in
pop
int3
lds
add
mov
adc
or
pop
pop
sbb
loopne
or
mov
das
js
ret
in
int
pop
mulb
adc
push
mov
fcomi
and
fcmovnbe
mov
cmp
sub
in
sub
xchg
mov
test
cmp
nop
call
ficomps
lock
in
not
mov
into
mov
lcall
adc
ja
insl
mull
cmc
jnp
dec
pop
push
cmp
sub
pop
loope
xor
testl
and
pushf
sub
push
mov
mov
push
lret
mov
jbe
pusha
dec
insb
ret
fs
jmp
cltd
xchg
jno
cltd
and
stos
mov
ljmp
loopne
inc
or
mov
sbb
ljmp
scas
xor
inc
aaa
je
jmp
aam
push
sbb
push
ljmp
cmpsl
sbb
push
test
mov
stc
bound
shll
ljmp
scas
inc
or
xchg
pop
ss
sbb
xchg
cmp
fadd
push
or
mov
loop
inc
pop
xchg
cmc
xchg
fcmovb
dec
loopne
mov
xchg
cmp
es
in
xor
inc
shll
push
loope
out
das
cmp
xchg
mov
push
jnp
sarb
lods
lret
jp
fwait
push
fwait
push
repnz
pop
pop
arpl
pop
test
adc
sahf
cltd
xor
test
adc
fdiv
pop
mov
jae
xor
mov
insl
ja
dec
or
leave
inc
lds
jo
push
popl
outsl
adc
jmp
les
aam
clc
enter
testl
call
cmp
sub
ret
test
insb
push
mov
push
fwait
push
mov
jle
inc
movsb
inc
mov
inc
push
lahf
test
jle
scas
dec
leave
loope
addl
pushl
pop
jmp
sub
mov
sub
sbbl
mov
cmp
inc
xor
mov
sub
test
cmpsb
push
add
adc
outsl
mov
out
ds
mov
mov
mov
cmpsl
jno
es
adc
xor
fwait
repz
pop
xor
jp
mov
out
inc
jnp
fwait
cmp
sahf
add
xchg
movl
mov
mov
sub
sub
call
jl
or
push
or
xchg
arpl
cli
les
jp
dec
sahf
pop
dec
xor
push
in
out
out
testb
mov
fists
les
pop
je
pop
mov
popa
ret
test
inc
cmpsl
cmp
xchg
jae
hlt
fcmovbe
jo
filds
imulb
insl
insl
xchg
sarl
sub
push
xor
out
lds
aas
pop
fadds
cmp
or
int3
aam
mov
pop
mov
gs
sbb
sub
in
or
arpl
sbb
sub
lret
cld
push
mov
add
push
add
stc
add
das
rcrl
fs
ljmp
and
pop
loope
icebp
lock
insl
fisttpl
mov
in
xor
arpl
enter
jae
push
clc
movsb
psrld
call
and
inc
stos
mov
test
xor
pushl
sbb
push
xor
dec
sbb
jmp
mov
inc
push
aad
aas
jle
mov
mov
lret
fadds
and
jl
aad
loope
sub
insb
push
cmp
repnz
mov
jno
call
sbb
in
mov
clc
xlat
aaa
cmp
ret
nop
xchg
push
jmp
pop
lock
adc
inc
fld
jge
mov
loopne
xor
adc
loopne
jbe
les
and
and
js
outsb
push
enter
js
jae
cmp
insb
mov
outsl
mov
inc
jmp
fisttps
cs
and
nop
and
out
lret
and
fists
test
dec
xchg
jl
or
sbb
inc
in
mov
jmp
cltd
pop
jbe
outsb
pop
bound
loope
test
xlat
test
ss
mov
sub
push
pop
jge
out
rclb
out
sub
jecxz
rorb
rcrb
adc
stc
pop
les
jb
movsb
pop
lods
iret
pop
out
add
enter
iret
out
sbb
lcall
fwait
cmp
test
stos
test
icebp
testb
xchg
xchg
pushl
adc
jns
aad
pushf
jo
push
in
push
xchg
testb
xor
lahf
data16
jl
cltd
out
je
and
jge
mov
repz
pop
dec
mov
adc
sbb
loop
sahf
xor
insl
dec
jmp
jp
xchg
testb
fs
gs
pop
jge
bnd
cmc
js
aam
mov
mov
jae
adc
nop
cmpsb
iret
das
fstpt
gs
jg
cwtl
jne
fwait
into
dec
jns
ret
sub
mov
jbe
cwtl
int
add
and
sub
mov
fbstp
push
es
add
outsl
or
mov
xchg
loopne
cmp
nop
xor
decb
std
dec
pop
cmpb
mov
mov
cmc
add
inc
or
cwtl
loope
pop
call
mov
jg
cmp
test
pop
pop
sbb
mov
int3
pushf
fistl
xor
sub
lds
rorb
xorl
lock
jl
add
ret
sub
fcmovnu
inc
dec
out
lds
inc
cmc
cmpsl
popa
das
rorb
push
or
pop
push
fidivl
dec
inc
sub
cmpsb
jge
fistpl
pop
add
inc
cli
inc
fistpl
mov
mov
subl
add
adc
jns
iret
dec
pop
imul
inc
adc
push
into
dec
sti
jp
inc
cltd
push
pop
pop
sbb
add
repz
call
dec
sti
std
ljmp
push
sub
push
inc
mov
es
mov
out
push
add
stos
mov
xchg
fiadds
lods
lock
mov
pop
in
les
mov
cmpsb
mov
mov
scas
lret
jge
push
cltd
ljmp
jmp
shll
fwait
push
add
leave
rcll
xchg
inc
stos
mov
xor
cmp
aam
sbb
int
out
roll
add
imul
add
xchg
cmp
cmp
push
cmpsl
mov
adc
xor
std
fdivs
mov
popa
repz
in
adc
inc
ljmp
imull
jmp
and
lea
loopne
enter
inc
sbb
cwtl
sti
dec
mov
in
pop
js
imul
fs
ja
ss
mov
mov
push
fisttpll
js
cmp
adc
loopne
aas
cmp
sahf
pop
dec
pop
in
mov
jp
adc
pop
aaa
push
je
mov
or
sub
jl
and
mov
imul
outsl
mov
xchg
aaa
ja
sti
fadds
sti
popa
negb
push
pop
aam
mov
push
fwait
lods
push
pushf
mov
ret
jae
lahf
enter
jb
fwait
int
lret
push
mov
iret
cmc
adc
push
pop
dec
xchg
iret
shrl
sarl
cmpsb
test
or
sbb
pop
js
int3
jg
roll
or
dec
mov
add
cmc
and
pop
adc
xchg
fisubrs
sarb
jae
push
add
pop
jnp
cwtl
push
xchg
jmp
lret
cmpsl
sub
push
adc
or
fs
lahf
cli
mov
mov
sahf
dec
sub
xor
fwait
mov
or
lods
rorl
inc
xchg
nop
out
repnz
stos
cmpsb
push
adc
cmp
mov
jecxz
in
xchg
jnp
adc
aaa
adc
pop
ss
push
push
adc
aas
sbb
fs
dec
xor
loopne
xchg
push
mov
lcall
mov
xchg
mov
iret
mov
jne
sti
popa
mov
lods
subl
daa
or
call
cmpsb
test
sub
adc
bound
ljmp
cmp
jecxz
daa
fcomi
movsb
mov
cmp
push
paddsb
lods
ss
inc
or
cli
add
xor
jbe
shr
pop
push
addr16
lods
pop
and
frstor
xchg
pop
or
imulb
dec
rcr
add
scas
or
dec
into
mov
push
fdivs
out
lods
in
punpckldq
stos
int3
push
das
push
pop
push
xchg
out
inc
scas
ret
push
or
std
adcb
inc
add
sbb
xor
std
jb
addl
xor
stos
sbb
xor
cmp
and
insl
cmc
out
or
push
stos
outsl
sbb
or
imul
inc
cmp
fldenv
ja
aam
mov
cmp
into
outsb
loope
aad
or
adc
lret
sbb
mov
lods
leave
sbb
pop
rep
test
repz
mov
sbb
enter
xchg
push
mov
arpl
sahf
pop
cs
sbb
sub
into
mov
cmpsb
mov
jmp
mov
shl
jmp
inc
movsb
fwait
mov
aas
mov
or
push
arpl
sbb
je
or
clc
cwtl
adc
dec
push
call
iret
cmc
mov
loop
data16
in
dec
inc
cmp
in
add
incl
ficompl
add
pop
lods
ds
pop
dec
jbe
xchg
sub
aas
push
mov
lret
pop
jb
lret
rcr
shll
and
pusha
pop
shlb
adc
test
scas
mov
sub
test
std
xchg
inc
dec
aaa
fstp
inc
pop
addr16
mov
andl
adc
cmp
es
jns
in
imul
adc
mov
cmp
cmc
sbb
daa
push
sahf
stos
cli
in
mov
cmp
mov
fdivs
and
mov
sub
mov
loop
pushf
rorb
dec
lret
lods
jl
jecxz
popf
bound
adc
jbe
inc
nop
cs
in
mov
dec
add
cmp
pop
scas
inc
adc
leave
rclb
xor
mov
std
jg
mov
jecxz
push
cmpsb
cmp
mov
cmp
bound
scas
clc
leave
clc
pushw
ficoms
pushf
sub
pavgb
push
sub
movsb
pop
andb
push
or
dec
ss
lods
outsl
pop
fcmovb
inc
repz
dec
das
jecxz
mov
fs
lcall
cmp
adc
lds
dec
sahf
into
push
jp
mov
pop
cmpsl
movsb
sbb
loopne
mov
popf
pop
push
stos
aaa
adc
sub
notb
and
in
xchg
shl
dec
les
int3
aas
push
imulb
and
jae
popa
xlat
int
mov
call
aaa
jecxz
out
mov
jmp
in
fisubs
jnp
addb
jne
inc
insb
push
dec
pop
addb
jle
stos
test
lds
add
jnp
mov
lds
pop
push
jae
jle
outsl
jne
nop
std
and
jne
push
mov
cltd
mov
icebp
jae
push
sub
adcb
sbb
das
pop
mov
cwtl
xorl
arpl
insb
adc
add
mov
stc
clc
push
xor
pop
pmulhuw
pop
rcll
stos
mov
movsl
scas
test
pop
movsb
dec
cli
mov
push
adcb
test
jp
mov
std
cmp
arpl
fs
add
in
mul
mov
pop
ret
aaa
mov
inc
sbb
cmp
cmpsb
repnz
movsb
lret
shrl
add
push
ds
cmp
in
in
xchg
push
orl
xlat
cmp
ret
xchg
jne
mov
lret
pop
xor
inc
mov
mov
xchg
fistpll
mov
out
jb
dec
enter
mov
jbe
ja
icebp
gs
sbbb
push
fstps
gs
inc
cmp
arpl
sub
or
xchg
sub
push
mov
jns
je
dec
out
mov
xor
adc
push
xchg
jmp
cmp
pop
testl
nop
push
js
jp
add
fbstp
push
loope
cmp
adc
mov
mov
aad
vpmacssdd
cmp
bndldx
adc
ror
nop
cmp
or
or
pop
gs
mov
mov
xor
mov
movsb
sbb
and
mov
pop
cmp
cmpsb
fstpl
pusha
xor
cmp
outsb
sub
movsb
adc
cmc
xchg
pop
sub
ret
test
in
dec
mov
pop
aas
loopne
xchg
in
test
sarl
xor
nop
icebp
cmc
xchg
in
push
adc
cwtl
nop
jg
pusha
adc
xor
iret
mov
dec
movb
and
lahf
jecxz
xor
or
ljmp
and
cwtl
adc
mov
repz
dec
fldcw
in
jb
or
pop
and
adc
leave
test
add
imul
pop
ds
xchg
sub
cli
add
mov
push
int3
pop
enter
mov
push
inc
add
add
sbb
mov
into
mov
dec
jle
adc
dec
jmp
mov
fisttpll
mov
mov
jb
cltd
out
jp
rorl
or
mov
sub
loop
cmp
fdecstp
aam
data16
in
addr16
outsb
add
cmp
loope
lret
jb
jo
inc
and
cmp
push
dec
pop
xchg
xchg
ret
lahf
movsl
mov
add
push
pushl
jnp
add
push
cli
mov
aaa
jmp
push
ret
and
jecxz
stos
or
addl
xchg
adc
adcl
jecxz
sbb
or
in
xor
notb
mov
pop
lcall
pushf
mov
sub
sbb
arpl
mov
roll
loope
movsl
push
enter
xchg
mov
push
repnz
xchg
into
xor
mov
fistpll
fdivrl
inc
jmp
mov
fnstsw
dec
sbb
shrl
dec
cmp
sub
mov
xchg
insb
scas
shl
push
push
jns
mov
outsb
xor
dec
movsl
aad
pop
int3
sub
push
ret
cmp
shl
cli
inc
mov
jge
and
cmc
sub
jbe
inc
xchg
push
dec
mov
jns
mov
or
lret
lods
push
sbb
adc
loope
not
lret
sbb
sub
sub
and
jbe
jg
cmp
clc
or
mov
mov
mov
adc
push
loop
xor
fcomps
les
sahf
ds
mov
adc
sbb
lock
push
and
push
movnti
clc
push
out
add
sbb
xchg
mov
in
adc
shlb
call
inc
fmuls
js
lock
ss
mov
xchg
and
mov
daa
mov
mov
outsb
jge
mov
fistps
mov
repz
jo
mov
lcall
cmp
test
std
cli
pop
push
adc
push
in
pop
inc
shll
xchg
and
out
mov
out
or
cmp
imul
adc
aas
xchg
dec
hlt
xor
int3
mov
pop
push
jg
ret
in
hlt
inc
lea
adc
inc
dec
movsl
les
outsl
jle
aaa
cmp
das
loope
jne
lods
xorl
ja
inc
scas
dec
fucom
andps
iretw
or
adc
cmp
repnz
adc
in
dec
jo
test
inc
and
sbb
inc
js
inc
inc
xor
mov
orb
imul
xchg
out
mov
mov
ds
push
jge
outsl
mov
lods
clc
adc
push
mov
or
in
jae
jge
pop
aad
push
lea
addr16
mov
pop
std
repnz
pop
mov
fsubrs
adcl
insl
xchg
sbb
adc
push
dec
pop
mov
int3
xchg
outsb
sbb
es
insb
adc
push
fildll
xor
pop
xchg
repnz
aam
xor
cmc
and
sarb
inc
fwait
jecxz
xchg
jmp
xor
lds
jbe
idivb
pusha
dec
iret
sub
imulb
sbb
mov
jl
inc
mov
xor
adcb
xor
iret
lahf
std
mov
leave
mov
stc
dec
fsubr
pop
int3
sbb
pop
call
cmp
sub
dec
cmp
rcrb
push
cli
add
jp
js
enter
inc
bound
hlt
cli
sti
xchg
pop
cmp
cltd
rcrl
std
inc
xor
pop
push
scas
inc
dec
int3
data16
das
dec
fisubl
and
push
jo
push
add
cmp
mov
dec
dec
cmp
add
cltd
cmp
scas
push
adc
nop
jp
push
fwait
ret
lret
xor
mov
movb
cmp
arpl
es
fiaddl
inc
and
test
js
mov
ret
add
mov
shl
sub
cmpsl
or
in
flds
inc
push
in
pop
out
mov
sarl
cmp
cwtl
push
adc
mov
cmc
mov
xchg
sbb
jne
arpl
cmp
test
lods
xor
push
add
mov
loope
fsts
adc
xlat
lock
enter
adc
inc
adc
insl
mov
and
xor
das
and
mov
add
inc
jge
in
and
pop
cli
inc
imul
fwait
sbb
and
nop
insl
fcmovb
icebp
sub
pop
xchg
lahf
imul
js
test
sbbl
cmp
movsl
aad
inc
push
xchg
jecxz
fs
mulb
xchg
jmp
mov
aam
fisttpll
aam
sub
mov
dec
cmpsb
je
push
fistpll
pop
pop
push
popa
mov
fnstsw
push
outsb
scas
add
sbb
es
pop
movb
sahf
imul
test
jmp
sbb
addl
in
loop
mov
lea
out
cmp
and
dec
push
push
fsqrt
in
ss
mov
mov
push
push
mov
mov
aas
ret
push
js
pop
add
sub
scas
and
dec
jb
outsl
and
push
fldt
clc
int3
or
push
test
jp
cmp
xchg
call
mov
dec
mov
inc
insb
nop
xor
push
dec
outsb
in
fldenv
adc
adc
inc
fists
shlb
mov
cmp
sbb
or
and
jae
dec
stos
insb
and
push
pop
or
mov
jb
pop
push
gs
xor
data16
mov
mov
repz
pushf
lahf
icebp
cmp
and
xchg
repz
inc
out
and
dec
push
adc
loope
out
adc
sub
sub
mov
loope
jbe
xchg
lock
pop
out
push
mov
mov
das
test
sbbb
icebp
adc
xor
sbb
leave
mov
jp
xchg
cmp
xor
les
subl
jne
jl
das
jo
jl
icebp
cmpsl
adc
insb
mov
rcll
sbb
sti
insl
mov
fdivs
testb
inc
dec
push
cltd
cmp
hlt
inc
pop
rorl
retw
add
imul
stos
and
push
shll
sbbb
fwait
rcrb
rcrb
dec
xchg
push
mov
arpl
add
loopne
mov
out
and
cmp
cmpsl
shlb
lahf
mov
mov
mov
xor
movsb
push
in
cmc
cs
lahf
call
mov
not
mov
cmp
add
cmp
mov
push
cltd
mov
repnz
and
xor
popf
dec
pop
and
and
cs
push
push
adc
push
imul
add
loopne
test
test
or
push
sbb
dec
aad
dec
ljmp
pushf
sub
mov
xchg
inc
popa
movsl
xchg
dec
mov
lea
sub
mov
imul
pop
mov
adc
dec
stos
fcoml
add
arpl
das
mov
insl
outsl
sub
adc
das
cwtl
ret
pop
in
mov
jns
cmp
pop
cli
pusha
loope
xchg
movsl
cmp
mov
jmp
rorl
xlat
xor
mov
pop
test
rcrl
adc
pusha
mov
pop
test
xchg
popa
imul
cmc
pop
sub
push
mov
fs
jb
add
arpl
popf
test
stos
pop
pop
inc
repnz
leave
push
jp
bound
cmpsl
xchg
push
int3
outsb
test
add
std
in
test
mov
push
sub
in
cs
xchg
push
loopne
repz
mov
mov
mov
addr16
jb
inc
sbb
xor
mov
sbb
lods
outsb
js
stos
sbb
mov
adc
push
mov
mov
fwait
ret
outsb
pop
mov
xchg
shrb
and
dec
imul
jp
stos
mov
mov
int3
rcrl
gs
mov
or
mov
xor
sarl
mov
es
cmp
add
or
loopw,pt
repnz
pop
fidivl
inc
cld
stos
inc
popf
std
je
lcall
push
mov
sti
daa
aam
decb
xchg
test
mov
lods
and
jno
loop
shll
aaa
xor
jmp
test
sub
mov
in
lret
push
mov
adc
xchg
xchg
andb
xor
add
cwtl
cmp
xor
sub
and
in
mov
xchg
pop
notl
sbb
or
decl
cltd
in
add
mov
push
into
jnp
popf
out
push
cmp
mov
repnz
inc
dec
test
add
mov
lahf
cltd
mov
in
iret
fsubl
mov
add
popf
sub
inc
lods
fiaddl
mov
clc
popf
adcb
pop
push
and
mov
nop
lea
inc
xlat
lods
mov
push
jo
scas
jecxz
jne
jle
les
pop
cmp
jmp
adc
fiadds
ja
lods
imul
test
lock
and
and
in
in
push
inc
jg
dec
icebp
cwtl
inc
nop
fwait
bound
xchg
divl
xor
ret
je
push
enter
mov
cmpsl
mov
pand
shll
enter
mov
jle
jne
testb
push
xchg
or
pop
fstl
push
push
js
add
enter
imul
xchg
xchg
xor
mov
movsl
xlat
push
mov
adc
mov
push
xchg
iret
daa
or
stos
or
mov
push
xor
jl
xchg
sub
dec
or
les
sub
sub
sub
mov
sub
testl
mov
lea
imul
clc
sub
xlat
pop
shll
xor
sub
es
ja
nop
mov
fbld
ror
es
andnps
cmp
daa
pop
xchg
xor
cmp
shlb
pop
movsl
int3
es
fwait
inc
jecxz
cmp
test
ljmp
ror
fbstp
jl
dec
in
mov
scas
out
cmpb
push
std
ljmp
xchg
jbe
and
daa
out
mov
xchg
jno
sub
add
inc
sbb
or
and
vmwrite
mov
sub
sub
pop
pop
ds
pmullw
inc
sbb
push
cmpsb
ret
ds
out
out
push
ss
cmp
negl
loope
mov
jne
ss
and
sbb
and
cmp
pop
pop
or
nop
js
gs
movnti
xor
out
scas
xchg
pusha
push
inc
xchg
and
addr16
xchg
add
dec
jb
pop
cli
lock
mov
arpl
je
dec
movsl
imul
or
insl
sti
out
test
bound
inc
mov
lret
mov
lret
in
sbb
inc
aam
data16
test
fcmovnu
sbb
cmp
lahf
fdivp
clc
or
lcall
push
icebp
inc
mov
filds
pop
or
add
inc
mov
scas
ja
adc
mov
fucom
cmp
jne
loopne
xchg
mov
push
dec
sbb
cmpsb
fisttps
mov
sbb
dec
adc
mov
xor
aad
fdivp
add
roll
imul
sub
cmp
cmpsl
add
shll
inc
mov
cli
nop
filds
fsubrl
lea
das
lret
sub
mov
jae
or
mov
sahf
push
lcall
lods
mov
dec
sahf
jno
add
pop
inc
rorb
lcall
mov
dec
fldt
pop
loope
test
repz
cltd
bound
ja
les
je
rcrl
lock
aam
sbb
popf
jp
mov
pop
addr16
mov
out
jne
or
sub
in
iret
ss
out
sub
aaa
sub
imul
daa
sub
or
jl
aaa
pop
xlat
sbbb
adc
mov
xchg
sbb
mov
pop
mov
add
pop
fptan
jnp
stc
outsb
cmp
lods
sub
sub
xchg
pop
lods
adc
lret
rcrl
cmp
add
les
dec
inc
dec
cmp
arpl
cmpb
cmp
das
mov
in
xor
loope
xchg
fbld
ss
mov
adc
jg
mov
add
push
les
xor
outsb
jno
mov
mov
push
js
sti
dec
and
fcomp
push
jbe
filds
jmp
adc
movsl
and
imul
jne
add
imulb
add
lahf
jp
jns
xor
aas
jne
inc
data16
push
pusha
idivb
ds
xor
xlat
in
sub
into
jo
jae
xlat
rorl
dec
ficoms
xchg
cmp
scas
cltd
and
and
dec
hlt
mov
fisttpll
movsl
rorl
pusha
mov
push
adc
cmp
test
sbb
sarb
cmp
or
mov
cmpsb
imul
test
cmp
out
stc
sub
mov
pop
sbbb
cli
and
xor
jns
mov
dec
push
add
jns
pop
xor
inc
daa
or
scas
fcompl
bnd
push
pushf
push
fdivs
pusha
inc
sub
stos
test
lret
nop
adc
sub
mov
fcoml
jl
inc
xchg
mov
sarb
xchg
icebp
push
sahf
bound
je
and
cmp
sub
scas
inc
xchg
add
aam
lods
lds
bound
int3
mov
cmp
inc
add
jo
or
pushf
dec
mov
adc
or
adc
cmc
pop
mov
imul
into
mov
gs
sbb
sahf
movsl
jns
clc
repnz
mov
test
mov
sub
dec
jb
daa
jnp
and
push
mov
inc
lods
pop
fdivr
dec
sbb
fistpll
pop
scas
fstpl
in
jge
xor
adc
in
fmuls
cmp
cmpl
clc
pop
xchg
inc
or
lcall
rcll
and
mov
and
mov
movsb
test
jo
aad
inc
xor
clc
inc
push
mov
outsb
xchg
mull
ljmp
std
lea
mov
ret
adc
pop
or
fsubp
ret
ret
inc
push
rorl
sub
mov
xor
xor
ret
adc
cmc
xchg
dec
jmp
loope
sahf
test
sub
adc
jg
stos
sahf
clc
mov
daa
dec
imul
fidivl
adc
rcrb
push
into
aam
imul
adc
fildl
jne
cmp
fdivs
stc
xlat
push
xchg
stos
pop
sbb
mov
imul
out
test
clc
jmp
popa
mov
push
add
push
sbb
mov
enter
xlat
dec
xor
inc
inc
sub
jns
sbb
mov
mov
das
pop
mov
mov
lods
or
jns
lret
add
ret
lods
jae
rcl
dec
outsb
idivb
std
out
mov
addr16
daa
cmp
sub
and
aaa
mov
fs
shrb
mov
cwtl
ret
xor
xor
loope
jmp
xor
sbb
test
jg
rorb
xor
add
add
dec
test
mov
scas
loopne
sarb
out
mov
int
ffree
or
mov
sbb
fisttpl
and
mov
mov
sub
aad
pushf
jae
mov
and
pop
sbb
das
mov
pushf
testb
test
push
push
idivb
jl
mov
mov
imulb
or
jns
sbb
test
in
cld
push
push
push
sbb
testl
sbb
aam
mov
fnstcw
mov
nop
mov
sbb
cmp
xlat
cmp
ds
mov
scas
xchg
dec
out
cmp
push
scas
js
leave
mov
sti
push
add
push
stos
aaa
xchg
popf
mov
insb
mov
fiadds
pusha
js
or
push
jns
add
push
arpl
mov
dec
adc
repnz
dec
mov
dec
sbb
cmp
push
mov
sti
idivb
arpl
mov
ret
push
shl
lods
add
fwait
sbb
pop
int3
inc
pop
mov
sbb
sbb
std
scas
dec
push
test
fldt
xchg
and
pusha
data16
mov
aam
jbe
cld
stos
sbb
mov
mov
arpl
xor
shll
sbb
loop
pusha
xor
enter
xor
mov
sub
mov
pop
rdpmc
mov
jge
movb
int
and
inc
add
xchg
mov
fsubr
nop
cmp
lea
insb
pop
push
jae
adcb
ja
adc
popa
rcl
xor
imul
hlt
pop
adc
adc
sti
jne
popa
push
aad
xchg
xchg
mov
or
jp
test
sbb
push
inc
cmpsb
fdivrp
push
int3
dec
jns
out
fisubl
cmp
or
push
rorl
enter
hlt
jns
rcrb
or
push
mov
in
inc
sub
cwtl
push
xorb
xchg
cmp
pushf
adc
dec
std
add
iret
pop
nop
loopne
and
mov
lods
gs
xor
loopne
scas
adc
mov
lds
mov
jle
sub
or
cmp
fsubrl
jge
sbb
mov
cmc
test
pop
imul
sbb
xlat
and
shrl
lcall
aad
in
mov
cs
out
lods
sub
scas
fs
mov
arpl
fdivrp
push
insl
test
and
into
cs
icebp
leave
rcrl
jmp
sbb
adc
rol
ss
hlt
mov
pop
std
cmpsl
aas
sbb
in
xchg
xchg
jbe
pop
push
pop
lret
mov
icebp
bound
pop
cmp
sbb
es
les
add
jns
and
test
mov
ss
insl
xchg
mov
xor
pop
cltd
dec
jno
inc
add
or
int
lods
jecxz
mov
je
fnstsw
cmp
adc
inc
jg
std
inc
cmp
fildl
aam
xlat
xchg
push
bound
sub
ror
dec
pop
arpl
test
mov
xor
out
int3
push
ret
xchg
mov
adc
loopne
adcl
dec
pop
lahf
les
arpl
mov
mov
rcrb
andb
push
imul
xchg
xor
cld
gs
jno
iret
xor
outsb
aad
xor
xchg
scas
xor
imul
inc
cwtl
sbbl
mov
ds
xor
jl
and
sub
aaa
or
cmpsl
push
int3
sbb
sbb
out
imul
xchg
ret
cmc
stos
cmp
pop
sub
inc
test
adc
insb
push
xlat
mov
fdiv
mov
or
pop
fwait
xorb
fidivrs
test
das
cltd
xor
xor
leave
jo
and
inc
bound
mov
jae
data16
push
into
push
nop
mov
in
addb
and
mov
and
les
ret
in
mov
ss
or
and
jmp
or
pushf
mov
js
sub
xor
mov
es
loopne
imul
popf
pusha
sub
fdivrs
fs
loopne
lret
xchg
adc
retw
push
xor
iret
jg
xorb
pop
sbb
jle
cmpsb
jo
rorl
je
push
xchg
aaa
jp
scas
xor
scas
sub
insl
lahf
jecxz
lret
fadds
cmp
aas
mov
shll
leave
je
xchg
dec
sbb
stc
jno
pop
mov
mov
outsl
rolb
sub
lahf
mov
insb
add
dec
dec
pop
push
and
inc
xchg
cmpsl
inc
inc
sbb
cmpsb
or
out
aam
test
inc
rorl
inc
cmp
cs
daa
stos
push
icebp
popf
jae
imul
and
inc
xor
fistps
mov
mov
adc
in
push
cmp
pop
rorb
xor
dec
pushf
arpl
mov
dec
mov
push
loopne
aam
cmp
pop
mov
stos
outsb
icebp
jo
mov
movsb
adc
jne
pushf
mov
dec
rolb
loopne
test
mov
jne
cmp
lock
dec
jge
mov
fldt
cld
mov
sbb
insb
jne
pop
jge
inc
cli
xchg
mov
sub
insb
mov
mov
fldl
das
lcall
pop
js
push
call
xchg
popa
lock
jge
out
jno
shlb
cmp
loope
inc
shr
adc
pop
add
enter
inc
xchg
int3
mov
enter
cwtl
sysenter
cmp
jno
jle
pusha
into
int
ja
jbe
jmp
loop
mov
push
into
icebp
mov
ror
push
bound
out
jmp
loope
leave
or
mov
aad
shl
sarl
pop
xchg
aas
add
rcrb
xorb
loopne
xchg
ret
mov
jl
mov
daa
xchg
mov
pop
out
loopne
stc
jbe
and
mov
orl
pop
stos
and
andl
adc
in
mov
mov
test
adc
aaa
mov
dec
enter
mov
aaa
je
test
adc
mov
push
mov
adc
mov
out
pop
add
pushf
push
mov
sbb
pop
in
call
jp
pop
fldt
push
call
push
pushf
pop
or
bound
or
cmpsb
enter
pop
shrl
imul
ret
inc
scas
negl
pop
or
dec
and
int
stos
in
sahf
data16
adc
push
jp
scas
fs
cmp
pop
xchg
mov
pop
mov
cmpb
pop
dec
sub
pop
adc
into
pop
dec
add
mov
cmp
imul
insb
and
js
push
add
insl
rsm
adc
sub
push
jno
sub
aam
mov
jo
and
scas
aaa
testb
cmc
inc
dec
daa
push
sbb
mov
pop
test
add
cmc
fsubs
xchg
xor
btr
xor
je,pn
mov
xor
movsb
mov
pop
jne
xchg
pslld
idiv
xchg
pushf
mov
mov
jmp
xor
jmp
and
lahf
sti
adc
jbe
sbb
cs
loope
add
rcll
dec
push
jae
cltd
out
mov
outsl
les
jge
stos
sub
jecxz
loope
in
push
pop
cli
popa
lahf
sbbl
dec
cmp
inc
xor
out
in
dec
loopne
outsb
jb
jno
dec
xor
mov
out
mov
outsl
sub
pop
fdiv
negl
push
xor
fwait
and
jb
dec
pop
jne
pop
cmc
xchg
fsubr
push
inc
push
lock
jecxz
adc
sbb
push
lcall
into
int3
icebp
jo
cmc
push
mov
push
mov
in
xor
mov
xchg
sbb
cld
pop
leave
mov
pop
push
cmp
popf
jecxz
repz
mov
popa
pop
jmp
and
add
mov
in
fnstcw
adc
sti
sub
xor
imul
push
movsl
pop
out
adc
movsb
clc
bnd
mov
jae
andl
or
inc
xor
es
aam
and
sbb
stos
mov
adc
cmp
sti
xorl
fists
bound
fucomi
dec
ret
cs
loope
flds
mov
mov
popa
pop
push
psubd
and
mov
and
xor
sbb
fisttpl
pop
idivl
sarb
mov
imull
inc
jns
lock
cmpsb
jae,pn
sarl
imul
mov
scas
inc
enter
push
push
stc
mov
mov
int
movsb
bound
loop
jge
sub
jmp
push
daa
aaa
sub
frstor
loopne
push
pop
gs
in
mov
mov
int
ret
push
or
gs
jmp
mov
jns
and
fwait
lds
fwait
lcall
fs
or
cmc
pop
xor
and
into
push
push
jnp
sub
ss
adc
inc
mov
jge
dec
push
mov
subl
dec
popf
jmp
lds
imul
xor
movsb
aam
xchg
jge
sub
notb
jg
and
aaa
popf
xchg
pop
fnstenv
fisttps
sbb
inc
repz
cs
inc
es
hlt
inc
adc
lods
cmp
inc
push
ss
dec
jge
stos
icebp
mov
imul
rcr
fidivl
sbb
je
mov
into
test
push
sbb
pop
cmc
ja
mov
aas
int3
adcl
mov
mov
adcb
adc
mov
mov
cmp
ret
out
pop
ficomps
xor
test
lods
clc
aaa
mov
xchg
fldz
adc
mov
sub
lahf
int
test
or
push
mov
hlt
pop
int
in
loop
in
adc
enter
bound
dec
std
adc
xchg
jo,pt
fnstenv
push
lods
pop
das
leave
xchg
add
pusha
out
add
pop
push
push
fwait
in
sub
add
frstor
cs
mov
lahf
and
inc
or
ret
pushf
cmpsl
xor
push
xchg
jg
lock
loopne
adc
jno
cmp
int
sbb
in
mov
adc
ds
outsb
pop
cld
mov
cmpsl
rol
push
dec
inc
test
cs
mov
into
lea
adc
in
mov
push
sub
xchg
xchg
jge
popf
xchg
out
push
push
pop
movsb
sbb
cmp
daa
jmp
sub
xchg
div
adc
pop
outsb
leave
out
sub
repz
push
insb
cmp
jnp
pop
stos
es
cmp
ret
nop
imul
jne
ja
sbb
cmp
adc
sbb
cli
pop
popa
and
scas
fcmovnb
orl
pop
xor
fdivl
in
pop
int
or
sti
xchg
repz
xchg
or
scas
sbb
sarl
aad
shll
ds
pusha
movsb
in
sarb
ffreep
out
cmc
and
jbe
mov
loopne
pop
add
insl
mov
inc
sti
lret
cld
popa
rol
pop
and
push
adc
pushl
inc
cli
jo
cmp
idivb
mov
jnp
sti
out
repz
mov
dec
mov
jge
dec
mov
cmpsl
mov
mov
mov
sahf
repnz
xchg
and
jns
aad
jp
sub
daa
add
inc
sbb
jecxz
inc
insb
jmp
cmovnp
nop
out
gs
push
add
adc
lods
dec
push
xchg
fstps
add
gs
out
out
mov
jle
int3
outsb
lock
fiadds
cmc
mov
test
lcall
cwtl
push
or
mov
loopne
lods
add
or
fwait
inc
dec
sbb
shl
push
mov
movsl
rcr
out
ljmp
ljmp
mov
fstps
outsl
cmp
mov
pop
subb
mov
cmp
fnstcw
cwtl
cltd
adc
in
pusha
dec
or
jns
rorb
xor
in
sbb
cmc
xor
adc
sahf
jecxz
arpl
pop
mov
lret
jns
jge
out
out
mov
das
mov
pop
push
mov
stos
and
cmpsb
push
xchg
push
mulb
xchg
push
les
bound
add
inc
mov
sbb
add
data16
test
jne
stos
ljmp
lods
leave
xor
inc
movsb
lahf
sub
mov
or
push
jb
cmpb
mov
and
jb
clc
sbbl
or
cld
push
inc
dec
dec
lcall
ljmp
jb
lds
outsb
insb
or
cmp
dec
mov
sbb
pushf
mov
pop
push
xchg
xchg
sbb
sbb
xor
or
inc
stc
in
push
js
push
xchg
mov
inc
bound
jnp
xlat
data16
jl
push
repz
and
and
or
jecxz
xchg
mov
data16
inc
pop
pop
jp
cs
hlt
repz
outsb
jb
xor
mov
cwtl
lds
cmp
scas
xchg
mov
mov
enter
xchg
cs
fdiv
sbb
test
js
mov
repz
cld
xchg
insb
push
pusha
mov
mov
push
mov
pop
or
mov
and
jl
and
addb
pop
xchg
std
fsubl
inc
addr16
ret
sub
inc
inc
jge
fyl2xp1
dec
add
push
test
mov
aam
dec
testl
sti
int3
sbb
xor
jno
lods
push
pop
loope
nop
mov
push
push
int3
ss
sbbb
insb
ljmp
cltd
mov
ror
jmp
ret
das
and
fistps
jp
push
xorb
jp
pushl
mov
push
sub
lds
fisubrs
scas
cmp
push
xchg
aas
xchg
mov
loope
stc
jno
sbb
outsb
inc
repnz
or
push
es
adc
pop
dec
repnz
sub
inc
scas
shll
or
hlt
and
cmp
faddl
cwtl
pop
imul
insb
pop
sbb
mov
shl
cli
inc
add
mov
pop
enter
inc
adc
jnp
das
dec
rclb
inc
aam
lods
pop
inc
mov
test
mov
cvtps2pd
sub
mov
mov
adc
dec
adcb
pop
movsb
inc
movsl
or
pop
push
mov
neg
incl
mov
popa
jge
pop
lds
dec
pop
leave
inc
stos
sar
dec
push
pop
imul
add
mov
sbb
lods
int3
jae
daa
sbb
arpl
sbb
in
adc
jno
push
out
or
inc
clc
test
push
movl
insl
push
dec
lea
ret
adc
and
push
xchg
fcomps
ret
or
xor
push
xchg
cmp
mov
mov
ss
lea
add
movsb
xchg
or
inc
mov
sbb
lea
out
movsb
sub
js
lds
in
mov
gs
jno
dec
in
int
incl
mov
mov
repnz
das
loope
call
and
push
pusha
int
xor
jb
fnstcw
add
sbb
mov
das
xchg
les
div
shll
orl
idivb
push
outsl
xor
sbb
aam
push
xor
fcoml
test
adc
jbe
addr16
mov
aaa
dec
cli
add
ret
sub
lret
jg
in
xchg
fiadds
cmp
ds
cli
xor
dec
out
push
lock
out
test
cmpsl
je
push
stos
and
or
inc
fisttpll
or
mov
mov
pop
push
loop
push
cmc
test
mov
dec
cmpsb
jge
repz
clc
out
push
cmpsl
push
cmp
or
movsl
add
adc
insl
fisubl
mov
int
sbb
push
jle
push
loopne
push
push
or
pop
ficoml
pop
aad
sbb
add
test
test
jne
jp
lds
cld
out
jl
pusha
outsl
lahf
fsubs
xorl
leave
push
mov
lcall
out
aad
jmp
ja
out
cmp
das
pop
fs
rcrb
test
push
mov
insl
mov
mov
mov
cmp
push
int
xchg
clc
enter
sbbb
push
in
lods
hlt
stos
push
aaa
mov
lret
andb
subl
pop
mov
cmp
leave
int3
mov
fcomps
mov
mov
inc
sbb
xor
mov
xchg
and
or
xor
and
nop
mov
xor
mov
jae
lock
ss
mov
and
jp
test
inc
xchg
movsl
int3
push
xor
ja
or
fdivr
scas
jae
mov
lahf
inc
push
mov
cmp
out
inc
adc
les
insb
imul
inc
pop
and
mov
dec
stc
cs
andb
cmp
add
cmp
gs
and
sub
lahf
cmp
scas
and
inc
pushf
inc
mov
cmp
nop
cmp
xlat
dec
add
sub
test
repnz
xchg
jmp
jns
cmpsb
pop
and
les
int3
sbb
xchg
push
cmp
mov
movsl
adc
cmp
ja
cmpl
out
stos
rolb
add
mov
inc
pop
aad
push
mull
popl
push
clc
xlat
mov
sti
push
add
aad
mov
sbb
adc
sbb
mov
dec
rol
mov
std
out
lret
outsb
mov
lahf
lea
push
xor
push
push
mov
sbb
cmpsl
mov
pop
mov
lods
mov
mull
pop
fildl
cmpsb
xchg
xchg
push
cmp
or
insl
and
icebp
cmpb
jo
push
dec
out
fnstenv
or
mov
pop
inc
and
lods
adc
xchg
mov
pop
pop
xorl
mov
test
aad
shrb
je
loopne
pop
inc
pusha
imul
jl
xchg
cwtl
gs
add
cli
sbb
ret
mov
stos
push
or
shl
adc
cmp
popf
das
leave
or
add
or
stos
sbb
shrl
in
imul
jb
mov
adc
rcrb
jns
pop
jp,pt
or
lock
mov
in
out
and
nop
dec
pop
pop
lods
push
jmp
push
les
cmp
nop
adc
movsb
xchg
and
lea
insb
mov
lahf
int
repz
sti
xor
push
pop
fcomi
pop
push
fidivs
not
lds
fwait
repz
push
cltd
add
test
mov
cld
mov
test
add
pop
arpl
pop
lcall
pop
inc
ret
mov
dec
jg
cmp
sahf
out
lahf
mov
mov
push
sbb
mov
add
xchg
mov
cmc
cmc
push
mov
movsl
lret
add
stos
and
int
adc
fdivrl
ja
xchg
add
lret
sarb
jae
or
int
outsb
mov
push
out
pop
dec
push
insl
sbb
jae
add
mov
jbe
hlt
sbb
lret
aam
inc
push
jge
jo
stc
sahf
cld
fisttpll
jnp
and
fs
fbld
add
pop
lock
rcll
cmp
popa
add
xor
imul
addb
mov
sbb
xor
pop
xor
mov
xchg
add
adc
and
or
mov
push
push
arpl
lds
sub
fs
sbb
outsb
je
mov
fldt
push
push
icebp
and
cmp
mov
push
in
pusha
jp
or
inc
sub
fcmovu
push
imul
xchg
sti
mov
fnop
push
std
jle
cmp
iret
mov
mov
call
push
in
xor
ret
pop
mov
push
and
jmp
insl
xchg
push
mov
int
sub
jne
mov
cmp
mov
cs
push
daa
mov
cmpsl
jmp
add
in
loop
cmp
xor
out
fdivrs
or
adc
pop
jge
pop
xchg
pop
or
rcrl
pop
pop
pop
in
pop
xlat
adc
ret
out
clc
outsb
sbb
jnp
push
dec
fnsave
ljmp
mov
xchg
mov
enter
or
xor
pop
iret
icebp
cmp
jmp
sbb
sbb
aaa
lods
jge
sbb
mov
jp
xchg
jne
dec
sub
and
in
adc
jno
scas
xchg
int3
shlb
fiadds
hlt
clc
xchg
gs
fsubrs
andb
mov
pusha
jmp
fisttps
dec
dec
pop
movsl
or
pushf
nop
push
test
mov
jle
push
loope
jg
sub
mov
push
push
jmp
dec
mov
mov
xor
xorb
mov
int
add
adc
orb
add
inc
imul
stos
adcb
jae
fwait
sbb
mov
sbb
mov
pop
mov
sub
loope
arpl
xor
lret
stos
push
pop
loopne
adc
aam
andl
xor
sbb
jmp
into
dec
ficoms
mov
jge
mov
inc
cmpsl
and
enter
adc
adc
dec
mov
fs
sub
in
mov
test
or
nop
xchg
lock
or
out
inc
mov
aas
add
xchg
aad
pop
in
call
jns
rcll
call
dec
popa
sbb
and
xchg
shl
mull
or
sub
sub
rcrb
sub
mov
mov
enter
or
rolb
mov
sarl
mov
mov
inc
xor
movsl
jle
dec
std
inc
xchg
lods
push
jnp
iret
and
mov
popf
mov
ljmp
je
jb
shrl
cmpsb
jae
mov
rcll
int3
mov
es
xchg
add
andb
les
pop
outsb
sbbb
or
xlat
jmp
inc
mov
dec
cmpsl
inc
or
sbb
std
add
pop
xorl
inc
mov
xchg
loope
in
jmp
fstpt
adc
stos
movsl
xorb
inc
das
fcomps
mov
mov
out
insl
pop
shrb
push
aas
repnz
repnz
movsb
jge
push
jno
test
fstpt
nop
push
push
push
loope
dec
stos
add
rorl
or
out
push
clc
cmpsl
gs
aas
mov
mov
adc
fldcw
aam
inc
mov
dec
aas
jge
push
mov
cmc
cli
mov
sub
mov
rcrl
rolb
daa
mov
or
or
hlt
and
test
cli
sbb
call
jmp
sahf
movsl
xchg
sbb
sub
repz
clc
xchg
mov
jmp
push
and
pop
ficoml
pop
sbb
cli
std
pop
fs
cs
xchg
dec
outsb
lds
jmp
imul
push
pop
or
jns
jle
jmp
push
pop
push
cmp
cld
jg
in
std
add
dec
les
push
fadds
outsb
popf
sub
sbb
inc
push
fnsave
fwait
outsb
inc
mov
data16
scas
mov
shlb
cmpsl
sbb
dec
ja
dec
popa
dec
mov
filds
mov
or
jne
js
mov
inc
ret
divb
idivl
push
ret
movsl
lock
mov
mov
outsl
daa
daa
xchg
sub
popa
jl
inc
lcall
adc
ss
xlat
mov
sbb
inc
sarb
mov
enter
pop
inc
stos
pop
int3
push
in
mov
cs
pop
gs
cmp
fcomi
hlt
lods
cmp
scas
test
push
jg
inc
mov
push
cmp
rclb
testb
adc
loopne
insb
jb
popf
push
test
mov
jmp
call
cmp
adc
xchg
jl
inc
xchg
jl
add
pop
xchg
push
push
jno
mov
sub
cli
xlat
inc
cli
scas
push
mov
push
test
push
negb
insb
or
pop
mov
and
adc
ret
stc
cmc
and
dec
adc
dec
adc
pop
xor
cli
test
fdivrs
aam
test
pop
mov
add
dec
mov
ja
push
test
daa
push
sbb
movsl
or
inc
fwait
arpl
pushf
pop
xor
and
sub
pop
leave
or
shrl
push
test
dec
pop
sub
lock
push
imul
jl
jnp
xor
or
cmpsl
fcmovb
adc
std
xchg
pop
push
mov
shrl
or
jp
push
adc
jp
stos
sub
push
push
test
imulb
add
call
ja
std
jmp
or
imul
add
jne
or
inc
sahf
lock
sub
xchg
xchg
push
adc
lods
repz
or
js
out
and
push
addl
mov
inc
adc
sbb
data16
sub
fidivrs
sahf
sar
outsb
cmc
mov
sbbl
ja
loope
pop
shll
push
add
adc
cltd
inc
imul
dec
jl
xchg
pop
push
shll
adc
ret
rol
mov
cmpsl
sahf
hlt
sahf
or
scas
mov
mov
dec
test
fisubrl
sub
loop
out
or
mov
pop
inc
xchg
jg
test
movsb
adc
sahf
inc
cmp
sbb
mov
lret
test
push
push
cmp
aas
mov
into
mov
mov
xchg
bound
lret
add
sub
pop
sbb
add
push
mov
mov
jmp
pop
or
pop
loop
test
sbb
bound
rcrl
mov
daa
out
mov
and
pop
rolb
sub
or
sahf
sbb
sahf
xchg
js
jle
pop
fwait
iret
or
add
mov
sub
inc
push
push
stos
push
call
mov
inc
xor
test
repz
pop
pop
int3
cmp
mov
out
shl
mov
sbb
outsl
sbb
and
pop
iret
mov
mov
push
pop
push
movsl
sub
cmp
ret
aad
adc
insl
sahf
mov
inc
jb
cli
adc
outsb
int3
mov
fs
jno
push
les
dec
call
jle
std
or
insl
insl
data16
push
fistl
adc
in
out
mov
lahf
enter
loop
push
xor
add
xchg
insl
shl
clc
out
add
jecxz
das
cltd
add
loop
xor
xchg
loop
insl
inc
shlb
stos
scas
xchg
cmp
and
test
ss
repnz
fisttpl
cwtl
push
movsl
dec
sbb
lods
rorb
mov
and
daa
test
push
iret
ja
push
pop
aad
daa
dec
js
test
mov
adc
cltd
cmpb
and
pop
gs
push
cwtl
ljmp
es
stc
mov
stos
ret
add
mov
add
in
hlt
push
pop
sbb
pop
fcmovu
clc
xchg
push
mov
sub
push
lods
push
andb
pop
inc
dec
mov
inc
pop
adc
jmp
loop
or
rorb
jnp
scas
push
push
add
gs
out
jecxz
mov
loope
or
gs
das
pop
sub
sahf
into
mov
movsl
xchg
add
pop
mov
xlat
cltd
lock
fsubrs
lock
dec
sbb
add
ret
xchg
mov
cmp
pop
into
mov
mov
ds
mov
les
lcall
cmp
xchg
xor
pop
ror
js
pushf
mov
test
pop
push
cmpsb
shrl
pop
push
xlat
cltd
add
push
mov
fidivrs
sub
push
repz
pushf
daa
hlt
shrb
and
jmp
push
pop
add
dec
jbe
daa
sub
fnstsw
std
inc
test
shl
loope
xadd
or
or
jb
push
mov
and
push
push
testb
cmpb
or
scas
lods
shll
in
pop
int
push
push
icebp
sbb
repnz
add
test
mov
cwtl
mov
push
test
fstpl
stos
lahf
test
int
cmp
lcall
inc
icebp
jmp
inc
push
lcall
pop
sub
std
dec
faddl
sti
cmc
pushf
jge
test
lahf
jns
cmpb
or
int3
loope
pop
sbb
mov
pop
cmp
lds
jl
and
mov
js
xchg
fwait
shl
push
inc
ja
dec
rcrb
lret
outsb
mov
mov
cmp
jnp
int
popa
test
nop
push
sbb
cmpsl
fmull
xor
jo
clc
stc
psubsb
pop
std
mov
jle
imul
mov
xchg
mov
sub
fdivs
inc
push
mov
mov
fbld
dec
inc
cs
xlat
or
pusha
xchg
xlat
push
mov
sbb
jle
push
mov
movsb
sub
icebp
ja
pop
lock
sub
push
inc
mov
jns
adc
inc
push
cmp
shrl
loop
cwtl
cmpsl
sbb
bound
mov
int
jnp
gs
cmp
sbb
sbb
popf
int3
scas
adc
mov
loop
push
clc
mov
in
push
push
dec
lahf
mov
cmc
cmp
out
jl
fcmovne
add
je
xchg
jb
cltd
dec
add
ds
sar
inc
push
mov
xor
inc
sbbb
mov
out
lds
inc
rcrl
jno
jl
push
cmp
je
xchg
mov
and
lcall
xchg
loopne
add
popa
xlat
xchg
pop
orl
data16
negb
push
add
adc
ljmp
shlb
mov
out
gs
add
lods
xor
and
loope
xchg
jnp
xchg
adc
lods
sbb
fstp
jecxz
call
fbld
xlat
into
jo
and
or
lods
mov
jno
dec
push
in
stc
movsl
scas
xor
rol
inc
leave
or
mov
insl
cli
jae
sbb
adc
stc
jle
and
pop
push
xlat
sub
pop
out
mov
cmp
shl
pop
js
lret
sbb
fcmovb
pusha
stc
lcall
sbb
fs
xchg
lock
loopne
les
jno
je
pop
popa
pop
jp
stos
jmp
fidivl
xchg
push
push
pushl
xchg
out
push
mov
add
rcrb
mov
insl
loop
push
mov
std
cli
aaa
push
hlt
sti
les
mov
xlat
jmp
cli
je
lods
pop
mov
dec
fwait
shl
or
loop
jne
cmc
in
mov
cwtl
fucomp
pop
gs
fstpl
mov
dec
lds
cli
out
jnp
insl
push
pop
or
mov
cmp
xor
cmp
adc
je
scas
xor
xrelease
xchg
mov
xchg
mov
xor
dec
xchg
arpl
cmp
pop
nop
lds
mov
pop
xor
les
jns
mov
push
mov
push
call
fwait
adc
cmc
sub
rcr
fists
push
loopne
inc
pop
cwtl
cmp
push
mov
lea
cmp
pop
jp
dec
cltd
xchg
sub
xor
lret
jl
inc
and
or
mov
movsb
jecxz
ljmp
test
mov
dec
repnz
adc
pop
xchg
add
sbb
sbb
jns
xchg
cmc
mov
and
sub
add
jo
push
lret
jnp
ljmp
sbb
outsb
into
pop
in
sub
stos
scas
lret
jecxz
pop
sbb
push
mov
sub
shll
xor
iret
mov
movsl
hlt
pop
add
adcb
iret
ret
test
mov
clc
cli
dec
dec
jno
push
xor
dec
xor
mov
dec
aad
rclb
sbb
adc
dec
leave
xchg
push
das
fs
cmpsl
cmpl
mov
and
pop
outsb
or
sbb
pop
lods
les
pop
scas
and
xchg
xor
roll
mov
subl
pop
xchg
mov
call
mov
pop
ret
scas
push
es
lods
lock
or
and
mov
xor
sub
loope
push
jns
adc
push
jb
hlt
cltd
push
jmp
pop
pop
in
mov
int3
mov
pop
adc
out
cwtl
xor
push
nop
push
push
mov
xor
pushf
popf
rolb
dec
and
mov
rorl
pop
loopne
das
clc
fldcw
das
loopne
insl
jg
push
cmp
add
stc
ljmp
cmpsb
iret
push
out
shl
push
push
mov
daa
pop
xor
sub
jmp
jo
or
pop
arpl
cmp
mov
push
shrb
dec
sbb
mov
sbb
test
push
lods
pusha
xchg
sbb
outsb
mov
jns
test
sbb
mov
das
mov
mov
lods
cmpsb
pop
sub
add
add
push
jnp
std
lahf
mov
insb
jmp
out
dec
test
dec
and
pop
add
mov
test
push
inc
mov
xor
sahf
in
outsb
mov
lret
adc
xor
jge
js
or
pop
loop
push
xor
dec
xchg
inc
and
popf
cmc
orl
mov
mov
inc
cmpsb
mov
int
cs
xor
or
insl
sbb
icebp
insl
lcall
cld
rclb
push
dec
inc
dec
aas
pop
sbb
xlat
fisubrs
add
jns
mov
loope
lods
scas
push
inc
incl
je
sub
pop
loop
arpl
and
in
lods
mov
movsl
and
ss
push
popa
sub
scas
sbbb
jns
cmp
js
call
mov
jecxz
lods
push
mov
add
mov
xor
leave
cs
fistpll
testl
push
pop
dec
lret
xlat
mov
or
loope
push
push
insl
push
int
adc
stos
dec
add
testb
out
jnp
mov
add
mov
ds
dec
adc
pop
jb
xchg
or
mov
int3
jae
mov
loopne
xchg
test
or
shlb
hlt
dec
and
rclb
rorb
or
pop
repnz
mov
mov
xchg
imul
mov
test
rolb
mov
orl
inc
movsl
sub
shr
adc
mov
loopne
mov
mov
lods
sub
jnp
insb
out
cld
inc
hlt
cltd
insl
xor
les
add
or
xchg
int3
adc
xchg
push
push
xor
pop
add
lods
repz
pop
and
sbb
dec
and
or
cltd
imul
mov
and
out
pushf
push
xchg
adc
mov
adc
jno
or
shlb
insb
stc
popf
pop
pop
mov
stc
push
std
or
inc
jo
pop
sub
arpl
cltd
lods
sub
rclb
xchg
mov
lock
xor
push
cmp
lahf
out
std
add
jnp
or
adc
pop
fcoml
aam
pop
fs
rolb
shll
lahf
enter
pop
call
aaa
inc
jp
leave
push
leave
out
cltd
lret
xchg
push
leave
in
adc
leave
outsl
sub
mov
inc
shll
cs
dec
xorl
lret
sub
inc
es
inc
imul
lea
pop
nop
pop
xchg
inc
in
sbb
xchg
imul
mov
pushl
sub
pop
pusha
std
sbb
push
ja
xchg
clc
adc
or
mov
jle
cld
jle
fwait
adc
cld
push
or
in
fsubr
call
pop
je
cmp
sbbb
loope
cld
leave
pop
shlb
imul
int
std
push
cmp
iret
adc
or
mov
enter
push
mov
xchg
iret
hlt
pop
xchg
jl
sub
inc
pop
in
or
cli
hlt
or
mov
and
cmovnp
iret
data16
cmp
xchg
cmp
pop
fstl
scas
or
adc
sub
xor
sub
xor
das
and
cmpsb
sub
push
mov
outsl
andl
data16
inc
mov
fnstenv
out
push
outsl
adc
out
or
cmpsb
iret
stos
lret
jbe
jle
mull
lcall
jecxz
jp
repnz
out
or
xchg
xor
daa
xor
xchg
sub
imul
leave
add
imul
stos
test
jb
cwtl
pop
mov
or
push
ljmp
bound
cmp
xchg
cltd
xor
fmull
adc
mov
rcrb
pop
aaa
fcmovbe
sub
inc
push
mov
xchg
in
popf
push
andb
jp
pushf
dec
xchg
shll
loopne
mov
mov
dec
imul
in
xchg
pop
push
movsl
mov
cmp
nop
mov
popa
sbb
aaa
movsb
loopne
push
leave
js
mov
xor
addb
hlt
sub
sub
push
lds
out
dec
call
xlat
int
lods
mov
xor
xor
cs
mov
jle
xchg
shrb
pop
rorw
mov
xor
adc
xchg
push
aam
pop
cmp
adc
aaa
arpl
fldcw
add
subb
adc
icebp
movsl
shrb
add
dec
mov
out
dec
adc
dec
addr16
cld
outsl
sar
adc
ss
mov
in
mov
test
cmp
fiadds
xchg
inc
std
dec
mov
sahf
shrb
and
inc
pop
mov
mov
adc
push
loopne
lods
in
pushf
mov
jnp
stc
jbe
adc
outsb
sti
push
sub
jle
mov
movsb
mov
add
push
push
pop
stc
ljmp
cmp
add
in
cwtl
sarl
mov
dec
cmp
lock
into
and
add
mov
mov
mov
aaa
mov
xor
mov
incl
cmpsl
fmuls
test
adc
aam
xchg
cld
loope
lods
xchg
lds
pop
adc
or
test
andl
lcall
in
fimull
mov
pushf
or
xor
pusha
dec
jl
stc
lcall
sbb
sbb
cmpsl
ljmp
cmpsb
push
pop
jmp
xor
mov
dec
jl
je
jl
addr16
imul
mov
mov
pop
mov
cltd
paddsb
fstpl
lret
aas
pop
stc
inc
shr
addr16
out
ror
mov
push
loop
clc
aam
movd
test
bound
jns
outsb
rorl
icebp
xchg
icebp
or
push
and
pop
dec
adc
add
pusha
repnz
pop
xor
fwait
mov
fstl
inc
add
aam
enter
push
sarb
and
sbb
fs
rorl
scas
cmp
push
fmull
pop
insl
gs
enter
or
insl
add
mov
xchg
scas
push
jmp
out
inc
xchg
mov
mov
push
loop
dec
sbb
inc
negb
mov
and
loopne
dec
mov
or
out
loope
test
push
pop
ja
adc
mov
lcall
andps
add
pop
and
dec
push
mov
das
ss
arpl
movsl
in
jmp
cmpsl
rorl
enter
into
in
jbe
pop
xchg
ss
aas
movsl
fiaddl
cmc
pop
das
or
popa
in
jnp
insb
divl
repnz
dec
arpl
ret
mov
lods
paddd
xor
pushl
repnz
out
insb
pop
iret
sti
es
icebp
jl
aas
repz
mov
push
xor
xor
mov
jbe
and
dec
mov
fst
inc
aas
or
stos
jne
xor
and
mov
repz
divl
xchg
mov
mov
lds
jg
fdivrl
xor
call
fcomp
adc
sarl
int
mov
push
or
lock
sbb
jns
adc
test
pop
or
mov
sub
adc
daa
and
mov
cmp
inc
call
ja
mov
inc
add
push
xor
jb
cmpsb
outsl
test
inc
push
add
test
lods
pop
mov
sub
push
lds
push
inc
lea
cmpsb
enter
jns
dec
int
enter
je
mov
pop
inc
stos
pusha
pushf
mov
scas
cltd
movsl
push
fbstp
imul
sar
xor
dec
enter
roll
or
sub
nop
add
mov
orb
and
sbb
sbb
cltd
repnz
and
mov
mov
lea
in
daa
inc
imul
add
js
cltd
or
cmp
call
addr16
movb
pop
int
mov
aaa
sub
jae
mov
into
xor
sub
daa
or
fucomi
push
pop
mul
jecxz
jnp
jecxz
adc
or
jle
and
cmp
mov
enter
lods
mov
fldl
js
cmpsl
aas
dec
xchg
dec
int3
stos
xchg
std
pop
mov
cmp
int3
push
jno
jl
or
call
cmp
mov
add
fxch
cmpsb
mov
or
lcall
and
jns
mov
mov
daa
and
adc
add
adc
push
jne
push
add
or
fisubl
aas
ret
ds
mov
sbb
cmp
or
cmpsb
inc
push
push
clc
int3
lahf
fdivl
int3
test
mov
xlat
jo
mulb
cmpsb
xor
data16
jge
mov
pop
sub
imul
dec
repz
inc
jecxz
fistps
pop
cli
jnp
xlat
add
pop
out
push
call
jae
popa
inc
out
repz
outsl
aas
addr16
dec
sbb
mov
and
cmp
into
scas
pusha
insl
les
push
mov
jb
adc
push
mov
lods
or
mov
shr
je
pop
jl
mov
add
cmp
test
lahf
pop
sub
pop
jmp
sahf
jge
ret
add
nop
cltd
or
popf
sar
cmp
and
adc
stos
sub
pushf
jno
or
cmp
cmp
fmuls
xchg
das
push
inc
lods
popl
cli
cmp
jp
mov
test
xchg
mov
inc
int
cmp
jbe
repz
xor
outsl
fstpt
inc
sahf
in
mov
int
mov
movsl
adc
cltd
inc
mov
pop
jecxz
or
andl
xor
testb
shll
push
icebp
negb
ss
insl
loop
xchg
xor
adcb
inc
xchg
fisttps
xor
inc
jo
add
lock
mov
jp
gs
out
xor
xorl
enter
les
out
sarl
mov
and
dec
gs
data16
cli
movb
sub
in
push
or
loope
sub
scas
outsb
xchg
lcall
pop
mov
sbb
lock
sbb
sbb
cmpsl
ss
rcr
addr16
mov
repz
ds
cmp
je
or
mov
pop
cmpsb
mov
xchg
sub
mov
and
dec
inc
push
jp,pt
or
sub
push
push
cmpb
pop
test
inc
subb
ror
stc
rcll
jo
jmp
dec
xchg
cmpsl
lea
xor
xlat
mov
xchg
adc
adc
pop
mov
mov
js
and
lods
into
rolb
call
cmp
adc
std
subb
imul
fistl
int3
inc
or
xchg
jnp
xor
pop
mov
test
or
int
xchg
push
imul
or
mov
fstps
cld
enter
clc
lret
mov
lea
and
ds
cmp
out
sahf
push
xchg
push
pop
xorb
stc
addr16
push
nop
pcmpeqw
push
push
lock
cmpsl
xchg
add
sbbb
or
and
push
push
sbb
daa
jne
cmp
adc
dec
sti
or
insb
jecxz
lea
sbb
pop
fcmovne
adc
dec
or
bound
lods
xchg
dec
jne
es
cs
and
sbb
rcrl
adc
shlb
loope
iret
jp
fbstp
into
inc
stc
in
cwtl
add
mov
out
int3
mov
pop
jnp
cmp
imul
lret
xor
xchg
push
movsl
mov
xor
loopne
adc
push
in
push
xlat
push
cmpsl
xchg
sahf
or
arpl
xlat
cmp
sbb
bound
xor
dec
inc
pop
xchg
mov
and
imul
hlt
scas
mov
mov
ss
sub
nop
fcmovbe
aas
cmp
pop
andl
cli
test
mov
sub
mov
shr
mov
sbb
sbb
jp
push
cltd
sub
pop
adc
push
xchg
fidivrs
cmpb
lock
jnp
sti
dec
and
mov
in
mov
cld
insb
pop
ja
pusha
shlb
les
cmpsb
or
lea
call
and
add
xor
xchg
mov
sahf
jbe
lret
jbe
int3
mov
rclb
inc
xchg
adc
insb
sbb
pushf
sub
fisubl
add
in
xor
sub
cmpsb
sbb
lock
fildll
pop
mov
cmp
sbb
sub
jge
jl
ret
jb
mov
and
js
lret
push
jo
cmp
popw
cmp
xor
adc
cmp
in
insb
inc
movsl
addr16
cmc
push
jns
pushf
out
inc
sbb
jns
js
test
adc
dec
and
out
or
aaa
div
mov
mov
xlat
xchg
mov
repz
and
add
pop
or
repnz
and
pop
and
sbb
aad
mov
daa
lret
iret
pop
xlat
jp
test
jno
data16
test
call
jno
pop
ret
mov
das
cmp
cmp
mov
scas
lods
andb
andl
ds
sbb
into
xor
incl
out
push
push
mov
test
int3
enter
mov
sti
mov
mov
rcrl
xor
jecxz
inc
pop
and
dec
xchg
icebp
lods
sbb
mov
lret
cmp
jae
and
inc
push
jnp
mov
inc
inc
enter
xchg
ret
das
dec
fbstp
loope
cld
insb
sbb
mov
imulb
adcb
gs
bound
jae,pn
push
lahf
jne
mull
inc
cmp
mov
aaa
clc
jle
rol
sub
dec
mov
push
xchg
addr16
popf
sti
insb
in
add
jp
leave
std
jg
jae
out
xor
mov
dec
stos
mov
lods
inc
inc
in
and
add
xchg
rcrl
fidivrl
fucomip
iret
cmp
inc
lahf
cs
add
mov
cmp
addr16
mov
sbb
movsb
outsl
ja
popf
inc
mov
pop
int
add
and
js
push
sbb
push
mov
push
sub
mov
inc
xor
push
sub
call
add
and
out
xor
pop
xchg
mov
mov
fs
dec
xor
pusha
push
ljmp
cmc
stos
mov
add
fs
mov
pusha
or
cmp
bound
add
mov
dec
xor
loopne
sbbb
jl
add
fs
adc
std
xchg
ficoms
lret
js
push
clc
adc
xor
pop
leave
loop
ret
or
stos
or
icebp
test
xor
test
inc
lods
rclb
sahf
loopne
lret
push
shrl
inc
fcompl
cmp
lock
imul
add
bound
lea
pushf
mov
jb
push
roll
push
sbb
sbb
je
out
sbb
adc
es
dec
mov
stc
fs
mov
push
or
push
dec
xor
inc
insb
push
jnp
outsl
xor
subl
movsl
add
js
push
xchg
cmpsb
ds
lret
mov
daa
lods
cld
cmpsb
rorl
out
cmp
cmp
and
cmp
xor
inc
mov
xor
dec
call
sub
cmp
mov
inc
sub
pop
mov
pop
fmuls
ret
lock
xor
cmp
int3
or
add
dec
mov
mov
xchg
addb
adc
nop
stos
mov
mov
cwtl
jns
je
pop
pop
sub
sbb
fisubrs
inc
dec
mov
add
in
pop
mov
and
xor
xor
ss
push
add
adc
mov
outsl
and
pushf
mov
shlb
xlat
sub
mov
imul
xlat
mov
lcall
stos
clc
dec
xlat
ret
jecxz
sub
test
loopne
xor
leave
fwait
popa
mov
loope
xchg
movsb
sbb
and
icebp
mov
pop
fs
lahf
adc
movsl
push
xchg
sti
cmp
pop
adcb
jnp
mov
lods
mov
inc
jle
rorb
mov
jb
adc
xchg
dec
lret
fsubrs
stos
inc
jl
sbb
in
ds
fld
sbbl
dec
sahf
fsubrp
xor
pushf
pop
xchg
jbe
mov
cmp
inc
pop
inc
dec
mov
out
mov
and
imul
push
mov
add
mov
test
add
add
mov
mov
cmp
sbb
fildll
mov
and
inc
dec
inc
rorb
ss
and
addr16
in
data16
insb
int3
mov
int3
cwtl
bound
rcr
pop
in
inc
add
xchg
aad
outsb
and
pop
pop
mov
in
push
mov
negb
cwtl
sub
jno
jns
mov
mov
dec
dec
push
cwtl
fcmovnb
inc
mov
pop
dec
jecxz
sub
insl
jp
fdivp
add
mov
jle
pop
jle
ds
or
clc
mov
or
mov
jnp
aad
add
outsb
loopne
iret
sti
flds
fdiv
pop
jne
xchg
jne
sbb
popa
stos
stos
shrl
cmp
mov
fsubrl
leave
pusha
dec
ret
lret
jp
icebp
scas
daa
push
jae
andb
popa
mov
push
repz
xor
mov
fcos
movsl
cmp
ljmp
lahf
sbb
add
fcmovu
adc
pop
ss
mov
mov
cmp
imul
inc
xor
cmpsb
fs
dec
xchg
ljmp
das
nop
inc
rcll
scas
jmp
inc
xchg
and
xchg
iret
iret
xor
mov
inc
dec
adc
cmp
test
add
mov
cmp
test
and
jge
out
push
enter
rclb
dec
dec
aas
lahf
cmp
xor
fwait
test
sub
popa
mov
pop
jne
inc
cmc
and
je
inc
inc
mov
sbb
das
jg
add
sarl
ljmp
or
fildl
push
daa
push
pop
xorb
outsl
ljmp
iret
push
mov
fildl
mov
xchg
fcom
subl
fcmovnu
shlb
inc
sub
lods
loopne
push
jge,pt
stos
lea
fdivl
iret
lods
sub
bound
shll
inc
pushf
clc
push
out
mov
aas
jmp
mov
movl
sbb
loopne
rclb
xor
leave
fdivs
mov
pop
int
movsl
cltd
mov
ljmp
xorb
cmp
fdivrl
ficoml
and
shll
leave
mov
adc
mov
leave
sahf
jecxz
fnsetpm(287
mov
sbb
mov
daa
mov
push
leave
push
push
fisubrl
dec
movsb
mov
scas
jle
and
dec
xchg
faddl
fisubrs
pusha
loopne
cmc
push
jmp
les
jmp
or
outsl
inc
mov
mov
rclb
lcall
push
adc
pop
incl
xor
push
lods
pop
jns
daa
inc
scas
test
push
movsb
es
inc
mov
das
mov
mov
lcall
inc
div
dec
mov
fwait
popa
adc
mov
sbb
mov
push
cmpsl
jl
jae
pop
outsl
gs
loop
addr16
add
push
jb
push
cmp
ja
and
xchg
dec
jp
data16
push
mov
rorl
pop
test
pop
das
jnp
cmp
stos
popf
jns
or
loope
pop
jp
sbb
sub
jecxz
loope
cmp
or
out
stos
testb
imul
mov
sbb
cmpsl
and
dec
inc
and
call
movsb
insl
push
sbb
mov
sar
ds
jnp
adc
or
inc
movsb
mov
rolb
fldenv
hlt
sti
mov
xor
jae
push
dec
mov
dec
xchg
pop
mov
push
cmp
xchg
mov
int3
inc
push
mov
call
shlb
ljmp
xchg
add
or
jg
popa
pop
mov
adc
enter
mov
xchg
xor
sbb
sub
movsl
inc
ret
push
in
inc
call
arpl
push
in
and
movsb
push
adc
in
jmp
test
fcompl
xchg
adc
mov
mov
jnp
clc
inc
xchg
pop
imull
or
xchg
test
adc
xor
test
cwtl
inc
inc
sub
out
mov
and
mov
out
shll
leave
sbb
bound
subb
inc
in
lahf
imul
out
bound
or
into
stos
test
xchg
inc
test
jno
aas
hlt
lcall
fistpll
es
lods
and
or
push
pop
fidivrl
cmpsl
jne
cs
and
and
stos
or
jmp
orl
push
add
imul
add
mov
xor
add
fldcw
xchg
testl
nop
out
fldl
shrl
xor
stos
in
into
mov
mov
aas
xor
or
sub
sub
dec
mov
fimuls
xor
mov
test
fsubr
inc
sub
out
sti
ljmp
fs
idiv
int
xchg
les
xor
lahf
lret
mov
gs
adc
sahf
icebp
fdivrs
test
mov
fstpl
dec
push
test
sarb
inc
jecxz
and
xchg
or
loope
adc
int
cmp
mov
imul
hlt
movsb
mov
adcb
std
cs
mov
jno
in
rcll
pop
aaa
or
fstpl
adc
scas
leave
jp
pusha
mov
push
jno
test
mov
rol
xor
mov
push
mov
lock
pop
lea
xlat
sub
movb
test
jb
xorl
mov
pop
sub
insl
nop
pop
out
nop
popa
mov
subl
andl
mov
pop
or
add
test
pushf
sbb
or
dec
jge
imulb
jae
popa
aad
xor
notb
and
mov
bound
cmpsb
and
idivl
iret
dec
stc
call
dec
mov
or
gs
das
out
adc
or
paddusb
jo
and
xchg
adc
fidivl
push
dec
cwtl
leave
push
jmp
loope
mov
add
mov
mov
dec
pop
add
push
inc
arpl
dec
push
loop
lock
inc
repnz
sahf
xorb
cltd
xchg
out
mov
shlb
cmp
popf
adc
movsl
mov
cmp
scas
sbb
pop
aad
xor
out
sub
push
daa
adc
adc
imul
mov
outsw
and
mov
adc
sub
ljmp
add
les
add
cmp
pop
in
pop
imul
cli
lcall
pop
add
dec
jmp
mov
into
std
out
lds
pop
lea
adc
xchg
stos
mov
lds
shrb
enter
lock
xchg
mov
orl
lea
data16
pop
sti
iret
mov
xor
gs
out
xchg
arpl
iret
nop
cmc
addr16
mov
add
push
cwtl
inc
and
push
lock
mov
lock
lea
push
push
jo
inc
in
jno
mov
psraw
sbb
decb
scas
lret
outsl
outsl
sub
mov
or
lahf
sbb
lods
mov
mov
sbb
jnp
insb
cmp
mov
jbe
sub
push
orb
xor
popf
adc
add
std
std
jp
aad
xchg
das
fisttpll
cmp
iret
cltd
and
es
out
and
in
pushf
cmp
loop
xor
loop
fcomp
jl
sbb
push
rcrl
pushl
mov
mov
pusha
out
shll
movl
shrl
fs
add
popa
sub
fsubrs
cmp
cli
xchg
pop
mov
loop
mov
leave
xchg
xchg
lds
mov
ss
fdivl
jecxz
test
int3
mov
lcall
push
fs
stos
pop
jg
adc
neg
mov
or
push
in
and
lea
lds
mov
push
rorl
add
test
and
cs
sahf
movsl
nop
lea
xor
inc
test
push
cmp
mov
add
sarl
jb
mov
cltd
fstpt
std
xchg
jbe
pop
popf
imull
pop
test
popf
fs
adc
std
and
dec
outsb
dec
pop
adc
sub
pop
pop
mov
adc
adc
pop
ret
stc
cmp
dec
or
aas
imul
sub
arpl
scas
add
mov
xor
jo
push
sbb
xor
cmp
mov
inc
sbb
in
push
roll
or
js
js
adc
jmp
jle
popf
cwtl
dec
jnp
add
add
movl
xchg
or
push
pop
xchg
out
dec
mov
mov
inc
or
push
pusha
jne
arpl
in
inc
mov
out
cmp
inc
jns
in
cmp
adcb
mov
sbb
pusha
push
sub
pop
ret
in
dec
xchg
add
mov
imul
and
mov
pop
ja
test
add
aam
jg
outsl
in
sbb
and
mov
jecxz
push
lcall
subb
xor
sahf
mov
mov
stc
jl
leave
icebp
divb
jbe
or
push
loope
fbstp
cwtl
jecxz
sub
pushf
addr16
mov
inc
mov
sbb
arpl
push
xchg
and
mov
pop
lds
cmp
pushf
data16
fcmovnu
arpl
ja
and
int3
stos
xchg
push
push
adc
imull
js
mov
es
or
push
lea
xchg
jmp
insb
cld
clc
xchg
or
add
pop
add
rol
jbe
xchg
nop
aas
les
cmp
push
mov
jns
pusha
clc
sbb
je
xchg
add
call
std
xchg
xchg
subl
push
aas
xchg
nop
sti
push
mov
outsb
and
mov
es
popa
jle
rclb
cmp
js
pop
xchg
push
hlt
jno
mov
out
insb
call
adc
pop
push
jle
adc
mov
mov
dec
loopne
out
or
pop
xchg
mull
cwtl
cmpl
add
sub
or
add
jne
pushl
insb
fdivl
sarb
fwait
mov
cltd
loopne
push
or
push
fwait
std
add
push
repz
jmp
adc
xchg
pop
jmp
gs
xlat
lock
fs
popa
push
mov
es
mov
xor
cmpsb
adc
bound
rcrl
aaa
inc
ja
fs
push
adc
testb
pop
repnz
lret
xchg
ret
pop
repnz
push
adc
push
jnp
xor
mov
ret
sub
mov
out
daa
jne
xchg
pop
mov
outsb
push
ret
cmpsl
jl
sub
sarb
cmp
xor
pop
rcl
mov
ret
cmp
arpl
movsb
mov
mov
dec
cmp
sbb
shr
ret
movsl
pushf
sbb
aas
ljmp
call
mov
add
ret
loope
push
fwait
xor
ror
ds
and
xor
push
aad
xchg
sbb
int3
stos
inc
mov
mov
in
gs
xchg
ja
cmc
xchg
lcall
mov
bound
push
pop
sbb
adc
testb
sub
aam
outsl
dec
shll
mov
pop
jl
lret
mov
adc
aas
jg
mov
into
adc
mov
mov
xchg
add
ss
das
add
push
pop
adc
add
dec
pop
cli
bound
leave
push
dec
mov
push
cltd
scas
jecxz
mov
sbb
lds
and
xlat
xchg
adc
das
lret
mov
mov
or
mov
enter
dec
das
cltd
lret
and
je
mov
adc
mov
test
dec
dec
ljmp
xor
repnz
ret
int
test
pop
mov
mov
ds
add
movsl
shufps
adc
stc
mov
and
dec
ret
pop
int3
testb
shrb
add
sbb
jg
jmp
cmc
sar
pop
cmp
or
ret
sahf
mov
testb
cmpsl
pop
adc
add
xor
mov
xor
clc
jno
jge
lods
mov
xchg
and
js
mov
jbe
repnz
pop
test
aad
das
sub
cmp
xchg
nop
std
mov
ret
jno
movsb
xor
js
decb
mov
lret
and
pop
jns
pop
sahf
mov
call
inc
pop
cmc
mov
or
sahf
jmp
sti
test
mov
mov
xchg
xchg
add
ss
inc
mov
sbb
aas
shrl
pop
hlt
arpl
push
push
and
sti
sub
addr16
xlat
rorb
outsb
mov
and
cs
xchg
mov
and
or
or
or
ret
cmp
and
cmp
push
aam
in
inc
in
mov
pop
xor
push
or
jecxz
jge
cmpsl
ret
pop
loopne
mov
dec
mov
push
xchg
cli
cli
cmpsl
sbb
loope
pop
rep
xchg
mov
jmp
and
add
and
andb
loop
cmpsl
mov
outsl
dec
xor
push
or
bound
pop
pop
or
loop
stos
mov
loop
shrb
push
out
mov
fidivrs
dec
mov
inc
out
pusha
sub
aaa
xor
das
cmp
loopne
xchg
mov
pop
orb
push
pop
push
sahf
outsb
dec
xor
aad
adcb
hlt
sbb
fs
outsl
fptan
or
in
dec
ret
push
push
movsl
test
cld
dec
stos
mov
loop
push
jg
xchg
sti
jne
lods
push
mov
or
es
cmpsb
movsl
sbb
fdivrs
sbb
sbbb
cmpsl
jl
mov
and
je
lret
xchg
add
push
xor
mov
push
push
shrb
and
jmp
ljmp
jle
sbb
mov
cmc
or
shrl
fmull
dec
mov
sbb
mov
pop
xor
mov
bound
adc
mov
push
notl
dec
out
xchg
jnp
stos
imul
sarl
sbbb
cmc
xchg
decb
inc
lret
dec
add
pop
stos
loop
xor
popf
in
push
mov
mov
push
mov
xor
loop
sbb
inc
aad
call
sub
leave
jecxz
mov
cld
mov
pusha
inc
push
push
and
out
jne
outsl
mov
mov
mov
je
iret
mov
pop
lods
mov
scas
pop
shrl
mov
enter
std
rcll
xor
sbb
dec
pop
add
xchg
subl
cmp
mov
and
cmpsl
xor
out
fs
sti
lods
mul
lea
mov
and
jae
pop
out
test
sub
sub
add
aad
push
jle
dec
dec
sbb
fwait
sub
ret
adc
gs
sub
test
mov
sub
pop
pop
sub
stos
xchg
scas
pop
test
cmpsl
testb
or
xor
pop
rcll
push
mov
loop
fdivl
mov
cld
mov
stos
jae
pop
outsl
scas
shlb
js
and
add
jle
mov
aas
cltd
fwait
mov
jl
lcall
shr
icebp
inc
and
iret
sbb
cwtl
gs
rorl
pop
inc
adc
scas
and
xlat
stos
notl
cmp
sbb
cmp
in
dec
push
sbbb
roll
popf
sarb
popf
inc
or
inc
in
data16
hlt
aam
jb
xchg
aad
rorb
mov
fcmovne
hlt
mov
es
push
lret
sub
jge
or
imul
adc
push
or
sub
lds
test
pusha
pushf
xor
cmp
inc
inc
jnp
mov
fwait
test
repnz
jno
fidivrl
in
jecxz
add
and
std
out
push
nop
inc
cmpsl
insl
lods
lods
lahf
test
push
out
pop
mul
mov
lahf
bound
lods
dec
push
in
push
lret
jbe
ja
sbb
lds
es
xor
test
daa
sbb
sbb
push
pop
int
or
jnp
dec
cmp
pushf
mov
sti
frstor
pop
mov
sub
and
test
adc
sub
and
pop
icebp
cli
mov
jp
fwait
sub
cs
popf
xchg
mov
repnz
mov
ret
fidivl
push
cmc
mov
lcall
jge
test
je
sub
loope
aad
aam
arpl
bound
mov
pop
push
lods
adcb
and
imul
fisttps
test
movsb
cmp
mov
xorl
mov
lret
in
mov
out
mov
dec
xchg
cmp
cwtl
add
stos
xchg
lods
pop
sbb
push
xchg
cmc
sub
lret
in
call
inc
push
in
mov
arpl
cvtps2pi
pusha
in
out
imul
sub
jno
aas
int3
cmc
fnstcw
jl
sub
ret
add
mov
sbb
inc
xchg
xchg
pop
int3
inc
negl
pop
sarl
imul
jne
out
inc
ja
cmpb
aad
hlt
loop
outsl
scas
mov
lods
clc
fidivs
dec
sti
cmp
adc
mov
cmc
sbb
cmp
addr16
daa
dec
mov
aad
mov
push
pop
lods
jle
dec
lret
adc
loop
mov
imul
fwait
xchg
scas
mov
xor
test
in
push
hlt
aam
push
pop
dec
ss
or
mov
lahf
xchg
repz
movsb
or
in
lds
xchg
aaa
push
addr16
cmpl
shrl
leave
lret
pop
cmp
subl
dec
cltd
pop
cmp
jb
out
mov
mov
pop
lret
mov
xchg
pop
hlt
add
ret
pop
add
inc
pop
mov
dec
ja
inc
mov
fdivrl
dec
loope
adcl
xor
mov
inc
jns
add
mov
jb
loopne
jmp
sub
inc
jmp
add
and
aam
cmp
adc
mov
icebp
jl
sub
or
push
aad
xchg
pusha
cmpsb
jl
shlb
ficompl
ret
and
cld
ret
mull
mov
pop
push
dec
pop
fcoml
adc
sti
pusha
mov
rclb
sub
mov
xrelease
pop
mov
adc
out
mov
setns
ret
and
clc
mov
lcall
dec
stos
test
sbb
xchg
orl
xlat
mov
xchg
pop
add
inc
xlat
jge
icebp
sbb
adc
addr16
loop
gs
cs
and
pop
stos
jae
and
ret
ja
nop
psubw
repnz
fnstenv
insl
sahf
popa
cs
call
stc
push
aaa
adc
fdivrs
imul
sub
dec
fidivrs
sub
pop
inc
arpl
xor
dec
aad
dec
test
pushf
xchg
jo
mov
negl
cmp
ret
sub
jp
lret
hlt
push
movsb
sarl
insl
pushf
push
jmp
pop
mov
pop
push
lods
out
addps
jl
mov
std
mov
mov
pop
ficoms
loop
mov
rcrl
cmp
inc
jo
pop
int3
pop
mov
hlt
in
insl
int3
xor
mov
mov
aas
or
push
insl
cmp
arpl
hlt
sub
xchg
dec
or
mov
cwtl
test
outsb
mov
into
jge
sub
xchg
jnp
dec
or
add
ret
push
jg
cmp
jmp
or
mul
pushf
cmp
sbb
xchg
mov
sbb
push
popf
pop
dec
lret
pop
ja
dec
stc
cmp
rolb
test
pusha
lret
dec
iret
shr
jg
cltd
insb
mov
insb
inc
xor
mov
dec
cmp
sbb
sbb
push
jg
std
sbb
ljmp
xchg
jmp
movsl
insb
in
je
into
or
pop
das
insl
call
push
xchg
mov
cmp
loopne
lods
es
loop
adc
or
imul
xchg
jg
pop
out
std
ljmp
inc
pop
sub
lret
pop
jge
leavew
push
test
sti
lock
loop
pop
add
cltd
enter
jg
jae
cld
mov
push
out
mov
in
jg
mov
ss
cmp
mov
movsb
sarl
rorb
popa
sbb
add
or
hlt
xor
decb
cmpsl
sarb
jp
sbb
in
push
rep
nop
cmp
into
add
lock
aam
xchg
mov
shrl
sti
lea
test
push
mov
rcrb
rclb
ja
add
out
sub
iret
mov
sbb
das
es
jo
sub
mov
and
adc
scas
outsb
push
adc
xchg
divb
jle
dec
mov
pop
sub
add
dec
mov
test
pop
inc
mov
bound
test
mov
xor
cmc
leave
ljmp
pop
fs
movsb
aad
adc
cmp
aas
adc
inc
dec
push
notl
fstps
pop
xchg
lahf
roll
inc
adc
stos
aaa
scas
out
sbb
jg
add
testl
jl
rol
das
push
mov
pop
xor
and
jne
pop
inc
pop
xchg
in
pushf
pop
sbb
dec
mov
pop
xor
push
mov
pop
and
lock
push
pop
testl
adc
pop
jg
xchg
lret
rol
jbe
sbb
push
cmp
mov
xchg
andl
xchg
into
loopne
pop
cwtl
jo
outsl
je
fsubl
inc
jmp
js
xor
adc
mov
mov
outsb
push
or
sti
sub
cmpsl
add
ja
scas
jbe
adc
or
ret
and
mov
push
fwait
mov
test
repz
movsb
sub
cmpsb
out
ss
dec
sub
jae
sbb
xchg
xchg
inc
or
fiadds
sbb
movsb
mov
pop
jne
out
orb
xor
xchg
inc
jmp
jmp
pop
add
es
fs
cmp
xchg
lahf
int
mov
mov
pop
insb
add
data16
cld
inc
or
inc
or
jg
fs
je
mov
inc
or
add
adc
js
movsb
hlt
add
mov
mov
fs
push
inc
ret
jmp
ret
lds
jnp
mov
push
pop
mov
jg
aad
mov
loope
lds
hlt
pop
out
pop
clc
fldenv
call
push
into
lcall
mov
push
fdivrs
sti
inc
fcompl
sub
pop
sar
out
xor
imul
xchg
movsl
fstpl
ljmp
rol
insl
jne
and
pusha
mov
fstpt
in
mov
movd
mov
scas
pop
lods
pop
mov
cmpps
in
negb
cmp
jle
je
push
out
mov
lea
jmp
rcll
jg
mov
or
xchg
call
cld
rorl
mov
std
or
js
inc
jo
sbb
add
jmp
jb
and
data16
into
push
and
popa
lret
mov
push
jecxz
adc
je
dec
jae
mov
xor
shlb
sub
pop
jbe
arpl
xor
xchg
pop
not
xor
add
fdivrs
addr16
cmp
popf
xchg
push
in
xor
push
lahf
data16
push
bnd
fmull
jne
lock
inc
mov
in
je
mov
rclb
gs
xchg
jbe
repnz
jne
int
les
push
add
xchg
mov
xlat
data16
sbb
sub
movsb
xchg
xchg
xchg
icebp
xchg
sub
aam
andl
stos
cmpsl
mov
or
jge
xchg
mov
test
xchg
jmp
rep
popa
mov
mov
dec
xor
mov
aad
enter
in
rcr
push
dec
out
adcb
popa
add
lret
dec
nop
jbe
xchg
mov
nop
imul
inc
jnp
cwtl
jns
leave
push
sub
call
mov
in
jae
inc
mov
sub
mov
aam
insl
pop
sbb
or
into
jmp
mov
arpl
sbb
daa
fists
push
or
jbe
test
xor
pop
sub
negb
ja
cmpsb
hlt
popf
lds
mov
and
xor
pushf
repz
dec
in
add
in
cltd
xchg
cmpb
addb
lahf
js
sub
xor
inc
adc
pop
stc
frstor
fstpl
xchg
ret
hlt
and
jge
push
js
or
xor
pop
sahf
sub
mov
fdivs
dec
inc
lret
sbb
mov
and
lcall
xchg
push
mov
inc
jmp
sub
ret
pop
icebp
adc
call
mov
out
dec
inc
rorb
outsl
nop
cmpsl
lret
dec
xor
inc
adc
ret
lods
cld
adc
loop
or
inc
sbb
add
adc
jb
scas
test
xchg
mov
stos
mov
out
pop
push
xchg
pushf
test
mov
loopne
or
out
pop
js
data16
icebp
adc
and
push
xchg
fs
jmp
cmp
jmp
sub
mov
out
xchg
ss
pop
fsubr
xchg
mov
test
add
pop
stos
xlat
and
lret
mov
lods
roll
sbb
call
xchg
inc
mov
outsl
push
mov
int
sti
addr16
mov
pop
fwait
hlt
icebp
mov
mull
ret
mov
mov
outsl
jb
das
sub
push
fdivr
pop
push
mov
adc
icebp
xchg
adc
insb
inc
lds
scas
cmp
in
mov
inc
inc
and
out
ja
popa
sub
mov
movsl
ficomps
aam
xlat
out
mov
orl
jmp
shlb
pop
mov
mov
xorb
xchg
orl
cwtl
inc
cmpsl
add
pop
dec
jno
mov
sbb
scas
stos
out
ja
cmp
mov
adc
jl
dec
pop
lahf
and
and
repnz
insb
lret
je
xchg
shrl
sahf
mov
mov
insb
test
pop
push
pop
pop
push
or
les
sub
mov
fists
lds
sbb
popf
test
lods
jl
mov
pusha
push
inc
xchg
mov
les
xor
call
mov
push
mov
push
idiv
jle
and
xchg
push
xor
adc
mov
dec
in
push
pop
jno
das
dec
outsl
jmp
cmp
js
fiaddl
lahf
lea
add
xor
xchg
dec
push
jns
stos
out
inc
stos
js
dec
insl
nop
adc
insb
out
push
sbb
insl
xor
arpl
inc
mov
add
inc
xlat
adc
ss
cld
rcl
sbb
rclb
adc
dec
lcall
cmc
bound
int3
mov
xor
sub
dec
fwait
sarb
adc
pop
inc
cmp
stos
js
lods
fsub
dec
scas
pop
lods
mov
pop
mov
mov
cmpsb
and
pop
insl
iret
xchg
xor
pop
push
ret
mov
sub
dec
lods
pusha
shr
int
xchg
in
loop
mov
lds
cmp
frstor
mov
out
loop
cli
xlat
shll
shl
add
movd
repnz
inc
dec
adc
fimuls
hlt
lods
adc
fisttpl
movsl
outsl
mov
mov
popf
or
adc
rcl
cwtl
add
arpl
je
sub
loope
or
shrb
add
push
insl
and
stos
xchg
sub
inc
sbb
xor
push
sub
mov
jbe
push
sbb
or
jl
andb
xor
shll
mov
enter
inc
adc
ret
mov
inc
push
fstpt
cmp
out
fucomip
call
cmp
in
mov
cmp
int3
adc
mov
hlt
cwtl
cld
mov
or
addl
xchg
test
mov
leave
fildll
addl
dec
aaa
lea
loop
lods
or
xchg
mov
lahf
orb
push
movsb
xor
loopne
push
test
sbb
push
pop
mov
jns
notl
lret
call
scas
cmpl
arpl
or
call
pop
dec
dec
sub
cmp
sti
mov
gs
jg
out
push
pop
pop
movl
repz
out
divb
push
or
cmp
pop
jp
or
repz
cltd
and
test
cmp
dec
clc
push
inc
xor
xchg
jne
jge
and
fnstenv
dec
or
mov
mov
adcb
jns
loop
imul
mov
in
lods
mov
push
cltd
jge,pn
xor
jg
dec
lods
js
mov
leave
call
movsl
pushf
subl
xor
dec
out
mov
shrb
inc
mov
or
or
cld
mov
jmp
ret
ret
and
mov
into
pop
xor
mov
ret
cmp
or
inc
gs
pop
xchg
xor
lods
movsb
xor
and
xchg
int3
jecxz
pop
es
sub
mov
rclb
pusha
clc
imul
mov
mov
mov
ror
mov
mov
sbb
fisttpll
inc
push
and
pusha
or
fwait
imul
clc
mov
adc
cld
and
cmp
push
cmp
jg
jmp
mov
inc
mov
sar
fnstsw
cmp
lea
xchg
addb
cltd
sbb
rorb
movsl
inc
andl
inc
push
in
orb
add
and
outsl
and
xor
enter
push
mov
push
popa
xchg
mov
sub
mov
lods
push
mov
fbstp
xchg
scas
push
inc
imul
out
gs
mov
push
ss
aam
xlat
mov
or
int3
sbb
xlat
push
add
lret
sarb
sbb
iret
scas
bound
mov
ljmp
add
aam
fcmovb
test
xor
xor
lcall
test
and
ja
jno
mov
divb
xor
push
aas
cmp
clc
mov
mov
xor
negl
xchg
in
sbb
outsl
pusha
mov
pusha
xchg
jae,pt
mov
notb
aad
add
sbb
lahf
test
sahf
inc
int
adc
out
xor
arpl
push
add
adc
xchg
mov
jecxz
or
add
add
sbb
push
dec
and
mov
push
insl
hlt
sub
dec
cmc
or
xchg
push
sub
xchg
in
add
gs
sub
or
scas
lret
out
sbb
lahf
mov
imul
in
push
xor
insb
negb
jne
sub
pop
inc
mov
rcl
ret
fs
jp
jnp
stos
stos
lret
lahf
sbb
mov
inc
das
sbb
sub
fsubrl
xor
shlb
push
pop
or
int3
in
cmp
cmp
fnstcw
sahf
mul
rorb
lods
jo
test
int3
add
inc
das
sbb
int
or
cmp
ljmp
cmp
mov
popa
imul
fnstenv
testl
outsb
loop
in
push
enter
cmp
addr16
sbb
pop
xchg
pop
add
add
and
cmpsb
jp
mov
int
push
mov
ljmp
lods
xor
hlt
push
push
loope
inc
arpl
push
sahf
pop
mov
lock
in
cld
push
or
push
sbb
push
mov
xchg
push
and
sbb
leave
scas
out
lds
sub
not
and
push
out
sub
mov
stos
mov
inc
int3
addl
cmc
adc
mov
dec
cmp
cmp
outsl
sub
jle
gs
mov
add
pop
rol
xor
cmc
mov
ss
cmpsl
or
stc
pop
in
test
inc
add
adc
fsubr
mul
mov
mov
popa
push
sub
jno
mov
inc
rorb
cmp
gs
sbb
mov
orl
add
jo
xchg
sub
or
inc
xchg
push
psubw
fcmove
cmpsb
shlb
cwtl
repz
shrl
pop
arpl
pop
pop
test
sub
movsb
adc
lcall
xchg
movsb
cwtl
aas
ds
lods
cs
xor
out
mov
es
push
gs
adc
clc
loop
xchg
js
out
jl
xchg
add
adc
pusha
xchg
inc
scas
mov
jle
out
inc
in
adc
dec
sahf
inc
arpl
mov
ja
mov
dec
xchg
mov
into
mov
dec
adc
sbb
xchg
xor
sbb
xor
bound
cmpsb
jl
outsl
inc
dec
sahf
fwait
mov
push
mov
mov
sub
lahf
xchg
push
rcll
lahf
fistpl
jnp
mov
cmpsb
xor
mov
in
bound
cld
mov
or
sbb
inc
xchg
in
fsubl
fisttps
gs
iret
cmp
data16
pop
ljmp
dec
ret
lock
pop
jecxz
xorl
inc
mov
adc
adc
xchg
es
cwtl
aas
dec
adc
cld
cmp
cmp
xchg
xor
hlt
xlat
inc
cmpsl
pop
pushf
xchg
incl
inc
mov
nop
test
jl
push
pop
jae
shl
pop
mov
push
mov
fcom
mov
inc
cmp
inc
jbe
sub
arpl
add
mov
sub
roll
add
adcl
dec
cmp
jb
icebp
fs
int
sbb
adc
inc
scas
push
cmp
adc
bswap
sub
adc
cmp
mov
imul
dec
daa
adc
into
cli
sub
jp
lea
data16
jg
rorb
sbb
aaa
loopne
outsl
mov
es
lcall
out
lods
mov
and
aad
ret
pop
in
inc
rclb
nop
push
insl
lock
adc
cmp
shlb
mov
shll
or
mov
lret
add
adc
mov
jge
mov
cmpl
cli
daa
flds
movsb
ret
in
mov
shll
jns
inc
roll
test
mov
push
or
add
and
mov
mov
in
movsl
pushf
dec
in
add
pop
movsl
mov
int
xchg
in
jo
xor
pop
js
xchg
push
cld
rorl
mov
and
sub
loop
push
lret
xchg
or
adc
pop
cmp
inc
scas
jns
and
sub
insl
les
in
ja
inc
insl
xchg
js
jbe
lret
cmp
jb
je
jge
add
jmp
or
sbb
mov
sub
sbb
adc
mov
cld
loope
mov
sbb
loopne
aad
and
arpl
rcrl
ror
xor
lahf
and
jl
pop
int3
jecxz
adc
jl
dec
les
dec
daa
lret
mov
out
sub
mov
fwait
sbb
mov
pop
pop
lods
fmull
rol
mov
push
sub
int
loope
mov
pop
adc
dec
in
inc
sub
pop
sub
mov
mov
jmp
fs
xchg
movsl
push
and
sub
mov
lret
xor
dec
inc
imul
cmp
sub
mov
adc
mov
mov
add
cltd
ljmp
and
leave
sahf
addr16
hlt
js
aaa
jnp
daa
fimuls
push
and
push
imul
xchg
popl
adc
lock
shll
xchg
ret
or
xrelease
add
xor
aam
lcallw
inc
jg
add
sbb
push
shrd
push
daa
sub
push
movsb
outsl
iret
aam
test
ss
iret
xor
mov
mov
inc
mov
rcrl
vsqrtps
add
pop
std
fmull
mov
cli
aam
sti
jbe
aad
or
cmp
fnstsw
xchg
mov
sbb
xor
jecxz
inc
jle
jmp
sbb
push
pop
out
inc
cmp
or
mov
add
fs
mov
pop
pop
dec
popa
push
rorl
mov
icebp
add
dec
outsb
test
jno
adc
pop
mov
outsl
stc
and
fimull
js
inc
fildl
push
mov
daa
dec
ljmp
sahf
mov
scas
jp
mov
ss
or
mov
sub
movsb
mov
or
xorb
jnp
mov
gs
inc
push
push
fsts
jp
fisubl
push
adc
inc
and
leave
xor
pusha
fcomi
mov
sbb
int3
push
aas
mov
lahf
cmpsl
pop
cwtl
push
insb
fwait
fwait
mov
pop
leave
test
jge
jle
mov
shrb
pop
push
xchg
popa
ljmp
push
pusha
imull
andb
gs
in
mov
push
inc
imul
dec
mov
dec
lock
loope
push
lock
add
cmpb
jmp
aam
lods
popf
and
ret
je
insb
cs
push
sbb
lret
dec
movsb
ds
roll
roll
lds
inc
sub
sarl
xor
sahf
std
and
inc
js
jmp
jbe
int
mov
int
ret
sbb
test
inc
or
test
aaa
jg
add
inc
sub
inc
adc
sti
lock
loope
mov
mov
and
stc
fisubs
fucomi
push
out
fiaddl
cmpb
in
iret
jecxz
mov
mov
xchg
lret
xchg
push
inc
adc
and
lret
stos
sub
stc
push
call
int3
adc
imul
movsl
fimull
ret
pop
call
or
sub
rcl
dec
mov
push
addr16
mov
inc
and
lods
xchg
das
pop
rclb
es
xchg
icebp
cmp
pop
and
ss
les
cmc
push
dec
loope
add
sub
dec
cmp
sbb
cld
das
pushf
in
jno
pop
xor
fiaddl
add
push
repz
cmp
sub
lcall
xchg
add
xorl
incb
fmuls
sub
mov
or
xchg
shlb
and
insb
jecxz
mov
jle
sub
cmpb
lock
sub
dec
pop
cmp
mov
push
lret
lahf
out
popa
aad
leave
mov
sahf
int
jo
dec
arpl
inc
or
ror
fmull
fwait
les
out
daa
sub
dec
loop
lahf
mov
dec
bound
mov
das
cmpsl
mov
adc
negl
mov
add
mov
and
ret
mov
sbb
jl
inc
jns
sub
pop
dec
lods
mov
in
mov
leave
jecxz
es
arpl
add
je
ss
rcrb
mov
add
into
in
or
add
imul
adc
push
pusha
mov
cmpsl
mov
mov
fiadds
es
cltd
or
jbe
pusha
pop
je
mov
cmp
jl
inc
sti
es
shll
ret
inc
xchg
xor
and
jge
push
mov
adc
out
cs
pop
mov
pop
cmpsb
outsl
push
std
jmp
xchg
clc
clc
clc
in
adc
out
incl
aas
pop
cmp
sbb
mov
pmulhw
adc
data16
arpl
ljmp
cmp
inc
sahf
adc
adc
add
xchg
cmpsb
jle
push
int3
sub
push
pop
push
cmp
jp
rol
mov
addl
xchg
jecxz
adc
ror
jbe
rep
rcrb
test
repz
mov
sbb
cwtl
je
push
lock
push
rcl
into
hlt
clc
xchg
out
pop
push
subl
jns
insb
fmulp
xchg
jne
fcomip
movsl
movsb
or
mov
sub
jg
lahf
sub
sub
add
lds
dec
sub
xor
outsl
out
out
mov
das
loope
xor
jne
flds
or
cwtl
fidivs
push
addr16
mov
rclb
fstps
call
repz
loop
das
cmp
pop
adc
cmp
arpl
sub
push
jecxz
pusha
pushf
outsl
sub
pop
in
jmp
lods
mov
adc
mov
stos
stos
lcall
push
fwait
mov
test
add
push
xchg
sub
dec
push
jmp
push
push
push
dec
sti
fs
pop
fbstp
dec
push
mov
inc
jecxz
aas
mov
add
rorb
dec
shll
jecxz
mov
inc
ret
mov
dec
aad
and
js
add
je
imulb
inc
pop
lea
loope
mov
mov
pop
into
xchg
sbb
aam
push
xlat
inc
pop
test
cli
xor
and
es
dec
xor
adc
nop
ja
rorb
rolb
jp
lds
lods
mov
fisttpll
outsl
xor
fwait
jbe
mov
add
test
push
xor
std
mov
adc
daa
xchg
cmp
sub
and
movsb
shrb
in
sbb
mov
push
push
mov
addl
push
pop
mov
adc
sahf
push
ret
dec
xchg
push
mov
and
cwtl
and
push
xorb
repnz
icebp
add
dec
repnz
cld
ljmp
or
add
sbb
gs
jg
lea
ds
add
nop
push
scas
and
add
mov
js
loopne
push
fs
or
popa
xchg
and
cmp
dec
repz
rorb
adc
jbe
aad
push
mov
repz
repnz
hlt
fs
ljmp
xor
cmp
ret
imul
sub
shrb
pop
push
xchg
mov
jb
inc
jo
outsb
add
jp
and
sub
loopne
xchg
leave
pop
fsubrp
sarl
fwait
sub
repnz
cmp
dec
out
pop
push
mov
ds
mov
push
sbbl
std
or
xor
int
testb
daa
inc
adcb
repz
sbb
test
inc
lahf
loope
cltd
xor
pop
adc
lahf
pop
xor
adc
xlat
aam
and
push
js
mov
adc
ljmp
fwait
div
inc
pop
push
imul
mov
dec
arpl
outsl
insl
xor
int3
push
pop
ficoms
xchg
mov
sub
lods
cli
movsl
test
mov
dec
out
mov
clc
lret
mov
add
icebp
fcmovnu
mov
xchg
xor
mov
jnp
fdivrl
in
push
mov
in
stos
popa
cltd
outsb
out
xor
jno
add
and
cmp
loop
dec
xchg
push
stos
mov
push
jecxz
inc
push
mov
mov
leave
ret
xchg
nop
lahf
cwtl
or
movsl
rolb
out
mov
out
cmp
dec
push
mov
int
push
imul
ljmp
xchg
outsl
sub
js
add
lea
aaa
enter
dec
clc
dec
or
cmp
sub
inc
ss
jg
push
std
ljmp
cs
shlb
jmp
insl
and
dec
mov
dec
icebp
push
push
pop
ja
push
bound
jbe
mov
into
out
or
dec
mov
sbb
or
and
xor
cli
ret
adc
lds
nop
out
imul
lods
xchg
dec
inc
or
mov
cmp
outsb
test
lret
vmovlps
outsl
xlat
ret
movsl
inc
je
test
inc
aam
fildll
xlat
pop
xchg
adc
or
push
icebp
push
push
add
int3
jno
sbb
in
mov
cld
sbb
add
inc
mulps
xor
mov
and
pop
addr16
mov
nop
pop
xchg
in
adcb
jmp
bound
dec
pushf
adc
int3
xchg
xor
jmp
push
lods
lock
cs
pop
pushl
mov
ds
pop
pushf
xor
adc
push
ror
idivb
dec
incl
int
or
sub
adc
mov
test
mov
pop
leave
lock
movl
inc
mov
push
and
pop
rorl
mov
lock
lret
cmp
test
mov
mov
sbb
dec
jp
pop
adc
cmc
cmpb
or
faddl
xchg
inc
cmp
sbb
jmp
adc
outsb
pop
ret
out
or
cmp
pusha
clc
pop
stos
movsb
xor
mov
and
xor
dec
inc
dec
cwtl
sub
add
push
imull
adc
and
iret
mov
mov
xchg
adc
xor
mov
pop
movsb
mov
fwait
pop
sbb
loopne
xchg
inc
and
dec
test
xor
rcl
add
xor
sub
arpl
cltd
xchg
scas
adc
xor
mov
out
repz
std
test
adc
jnp
mov
nop
fistpll
inc
fcmovbe
jle
in
xor
adc
data16
cmp
ss
pop
icebp
stos
jmp
mov
mov
mov
push
stc
mov
ret
into
sbb
add
adc
mov
inc
nop
and
push
cmpsb
and
push
fimull
xchg
lea
ljmp
in
lret
daa
and
cli
sub
mov
xchg
pop
xchg
fiaddl
icebp
pop
push
xor
jp
mov
lahf
jge
out
lret
addl
push
jns
and
xor
dec
pushf
inc
mov
xor
jne
pop
xchg
nop
cmp
mov
cmp
pop
mulb
xor
fwait
dec
jb
into
xchg
lret
cmp
jecxz
and
movsl
xlat
jmp
or
addr16
das
xchg
jae
mov
mov
loopne
dec
pop
xlat
dec
and
adcb
mov
in
in
je
loope
jmp
js
insb
outsl
cli
scas
jo
arpl
and
test
gs
push
cmp
bound
push
test
sarl
pop
insl
push
divb
stos
out
sbb
pusha
mov
push
test
icebp
cmp
lcall
jo
jmp
pop
js
push
pop
subl
sub
and
sub
jno
ss
in
jae
and
mov
lahf
pop
cmp
lods
xor
sub
and
int
mov
je
movsl
cli
rcll
ss
sbb
cmp
cmpsl
sbb
dec
popf
inc
test
jle
daa
adc
imul
in
scas
lahf
das
leave
outsl
inc
adc
inc
dec
push
jae
test
xor
daa
rolb
inc
push
call
or
adc
jp
loop
pop
inc
mov
mov
adc
int3
sub
mov
repz
popf
repnz
xor
mov
adc
mov
sbb
fiadds
jp
js
rol
cmp
push
jmp
mov
leave
inc
sarb
cmc
mov
add
inc
jge
mov
inc
xchg
in
inc
repnz
cmp
sub
xlat
lcall
and
cmp
shll
testb
jno
dec
cld
out
inc
xor
fwait
scas
sbb
ret
xchg
cli
lods
add
mov
jle
sti
and
inc
jle
cli
pop
leave
mov
xchg
pop
scas
or
popa
pop
mov
cmp
inc
arpl
xor
cmp
sbb
xor
rcll
mov
lods
push
in
mov
mov
cmp
sub
mov
std
test
sarb
fnsave
das
jne
xchg
je
pushf
lret
add
mov
cmpsb
mov
lds
lret
repz
insb
inc
repnz
push
aad
pop
xchg
shll
popa
cs
and
and
add
sub
test
inc
xor
xchg
and
lods
or
inc
or
dec
mov
push
jae
push
das
in
int
sub
mov
lcall
js
in
test
mov
int3
xchg
or
das
cli
cmp
jp
adc
daa
nop
jne
cmpsb
pop
sbb
mov
dec
subl
pop
xchg
outsb
test
ja
add
push
lods
sbb
xchg
rorl
movsb
cmp
fsubl
ds
call
push
sbb
add
pop
mov
pop
or
stc
out
cmpsl
fcom
mov
or
ret
adc
push
lahf
and
jae
or
jo
pop
xchg
lods
dec
pop
or
xchg
mov
push
mov
jmp
insb
daa
enter
movsb
xor
adc
lret
add
jbe
inc
int
pop
gs
pop
mov
neg
adc
iret
and
out
jns
arpl
out
adc
inc
and
scas
in
rcr
mov
sti
or
leave
rorl
sub
out
rorl
mov
jmp
xchg
inc
lret
jmp
mov
and
lds
outsl
adcb
xor
sbb
add
dec
mov
leave
or
xor
fdivl
lcall
fisubrl
jb
inc
aaa
leave
dec
stos
sbb
lret
xor
fs
movsb
cmpl
insb
mov
xchg
push
loop
mov
int3
pop
push
push
loopne
insb
inc
push
or
cwtl
test
movsb
xorl
or
mov
shrl
dec
pop
push
fs
fildl
push
icebp
sar
mov
adc
stos
mov
mov
rolb
inc
dec
fcmovb
cmpsl
xor
mov
sub
les
xor
gs
cld
lcall
jo
icebp
lods
notl
fdiv
cmpsl
mov
xor
lcall
dec
mov
lcall
dec
imul
cmp
xor
mov
inc
jle
std
xor
sub
pop
adc
sahf
repnz
pop
ror
stos
outsl
push
into
and
enter
enter
mov
js
push
sub
or
aad
imul
jmp
dec
test
jmp
adc
movb
pop
xchg
dec
add
scas
popf
cmpsb
imul
push
inc
inc
adc
xchg
mov
test
xchg
and
fsubl
lcall
xor
cmp
add
or
jecxz
sub
pushf
xchg
dec
pop
xor
push
jb
dec
lods
mov
push
enter
out
xchg
sbbl
mov
loope
pushf
xchg
int3
aas
push
lcall
mov
clc
cmp
in
in
test
mov
gs
cmp
cmp
pmuludq
add
inc
shlb
dec
clc
test
and
aad
lret
inc
xor
movswl
xchg
shrb
jge
push
ret
lock
inc
imul
inc
sub
sbb
int
mov
and
cltd
pop
dec
sti
add
sarb
adc
push
mov
je
fadd
pop
inc
jl
cmpsl
test
scas
sti
jmp
scas
shlb
int3
xlat
xchg
fidivs
leave
dec
cli
xchg
sbb
out
jge
or
aas
xor
pop
stos
insb
int
lret
add
cwtl
adcl
and
push
mov
jb
movsl
enter
mov
stos
call
jecxz
add
and
imul
pushf
xor
cmpsb
adc
je
add
loopne
stos
scas
popf
ud2
xchg
subb
inc
test
cmp
cwtl
mov
xchg
pushf
xor
inc
call
lahf
fistpl
or
outsl
test
cmp
lea
mov
aas
sbb
notl
imulb
outsb
ds
add
mov
lahf
cmpsb
dec
jp
aam
xchg
pop
mov
imul
xor
or
mov
insb
jmp
or
xchg
mov
push
sub
xchg
cmp
xchg
add
xchg
xchg
inc
mov
fs
inc
push
nop
push
xchg
icebp
pop
testl
mov
sbbb
push
mov
dec
cmp
mov
jb
mov
add
and
ljmp
ret
pop
arpl
jo
lock
ds
int3
orb
push
out
sahf
orl
into
and
sbb
lcall
sbb
push
leave
test
inc
push
and
das
sti
dec
sti
push
ret
fimull
inc
clc
sub
dec
or
xchg
pusha
fwait
mov
jge
xchg
or
mov
pushf
subb
clc
fiadds
test
addr16
fs
xchg
mov
call
idivl
sbb
ljmp
repnz
jno
outsb
sub
jecxz
ds
sbb
enter
pop
pop
sub
iret
dec
mov
xor
sub
orb
lock
jl
imul
xor
and
cmp
add
sub
out
mov
mov
in
sub
loope
stos
mov
cmpsb
jnp
adc
sub
adc
inc
icebp
adcl
add
arpl
pop
cs
and
jl
pop
sub
xchg
xchg
cmp
repz
dec
mov
lcall
sbb
cli
outsl
mov
add
ljmp
xchg
dec
push
arpl
jl
or
repnz
cld
mov
jge
aas
lods
rcr
inc
or
pop
lahf
add
cmp
rcll
daa
adc
dec
lret
sar
sbb
sbb
push
cld
movsb
cmp
pop
mov
mov
lcall
lea
pop
sahf
test
xchg
jle
faddp
stos
mov
bound
inc
jl
das
mov
xor
sbbl
dec
push
aam
and
icebp
icebp
icebp
xor
mov
movsw
jge
inc
pop
push
mov
lahf
push
push
ret
xchg
dec
lcall
in
aaa
inc
scas
mov
cmp
jp
mov
jge
push
jmp
movsl
and
imul
jns
jns
inc
lahf
or
enter
in
movsl
dec
mov
xchg
sbb
push
xchg
adc
dec
or
xor
inc
clc
mov
mov
daa
dec
pop
lret
cmp
ljmp
es
xchg
xchg
daa
and
jb
cwtl
mov
jns
loope,pn
add
jns
jb
mov
and
add
sti
std
xchg
mul
pop
adc
or
popa
stos
inc
pusha
test
ret
lock
data16
inc
mov
mov
or
xor
mov
pop
cmp
fmul
shr
rorl
lret
mov
mov
xchg
sbb
stos
cmpsb
lahf
sbb
test
movsb
jle
shrl
inc
xor
stos
adc
gs
rcll
add
pop
push
mov
lods
lahf
mov
fnstcw
lea
jbe
or
ja
jnp
cmpsb
fistpl
into
cmp
xchg
imul
xlat
dec
imul
cmp
add
cmp
popf
inc
jge
mov
jmp
leave
mov
pusha
sbb
pushf
pushf
pop
notl
scas
out
data16
stos
je
jp
xchg
pushf
or
inc
in
cmp
sbb
scas
leave
stos
cwtl
jns
pop
and
ds
jno
outsb
notl
sub
outsb
aam
mov
pop
inc
adcl
add
int
enter
add
les
lods
push
and
mov
push
fdivrl
js
roll
or
sbb
cmpsb
and
jge
mov
sub
cs
pop
mov
cmp
lods
pop
dec
imul
enter
inc
mov
aas
popf
jnp
mov
gs
mov
lock
xchg
arpl
and
inc
xor
mov
mov
push
cltd
pop
mov
xor
rep
hlt
mov
add
mov
decl
jno
lret
push
jmp
push
ja
idivb
nop
imul
sti
sub
loope
dec
fisttpl
xchg
mov
push
adc
jecxz
cmp
fbstp
out
scas
les
add
addr16
cwtl
jo
push
jne
daa
sarl
mov
adc
xor
add
clc
or
push
fisttps
pop
or
mov
leave
data16
std
orl
call
dec
aam
insl
aam
pop
test
inc
aad
fidivl
pop
scas
cmp
popa
jno
mov
xor
jae
sub
out
and
cs
loop
in
scas
hlt
mov
fdivrs
pop
mov
fcomip
loop
push
xor
sbb
enter
cmp
adc
sbb
aad
popf
or
cltd
or
xor
out
leave
add
xlat
fsub
cmpb
jae
mov
cmp
fldt
mov
mov
ja
sbb
push
faddp
popf
and
fisttpl
cltd
cmpsb
flds
js
out
adc
std
loope
ss
stos
pop
mov
stc
sti
jmp
fnstcw
ds
inc
daa
fnstenv
jnp
sbb
jnp
or
ss
lahf
pop
repnz
mov
xchg
push
ds
cltd
pop
pusha
cld
ljmp
xchg
push
dec
cmp
xor
cmp
sbb
test
outsl
adc
loop
pop
jge
in
adc
cmp
testb
lods
aaa
mov
xor
push
insb
xchg
clc
and
inc
push
push
cmpsb
fwait
popf
sahf
stc
push
cmc
ja
fistpll
inc
jp
cmp
xchg
push
push
mov
into
inc
adc
mov
and
rol
and
lock
ljmp
pushf
cmp
imul
popf
sahf
ss
pop
lods
pop
sbb
mov
repnz
mov
fiadds
and
fildl
inc
lods
mov
and
outsl
push
lret
mov
mov
sar
inc
movsl
adcl
shrl
int
inc
add
loopne
sub
rorb
inc
cmp
cld
movsl
mov
vminsd
dec
lods
xor
int
test
int
in
std
and
sub
sti
inc
lock
stos
inc
mov
out
jno
and
dec
sub
xor
or
cmpsl
loopne
movsl
mov
jmp
cmpsb
lahf
mul
add
ja
lret
adc
cmc
outsl
sub
iret
cs
insl
sahf
or
pop
es
addb
cmc
test
fdivrl
lods
out
rolb
xchg
jecxz
adc
vcvttsd2usi
rcrb
fwait
lods
inc
or
mov
int
cld
and
jp
call
movsb
das
imul
fimuls
jne
addr16
sti
pop
hlt
icebp
ds
ds
sub
daa
mov
ret
dec
and
sub
mov
pop
sarl
adc
in
xor
push
inc
das
jmp
arpl
cmpsl
adc
ljmp
pop
rol
jmp
jb
scas
mov
dec
iret
in
pop
divb
movl
rcrb
popa
dec
mov
mov
fmul
out
xchg
mov
decb
xchg
adc
repz
inc
ja
shl
xlat
int3
mov
inc
jmp
inc
std
and
pop
mov
les
insb
jmp
push
push
cli
fiaddl
mov
cmp
pop
or
inc
inc
or
add
lcall
jl
outsb
and
jnp
mov
cmp
mov
lcall
ret
je
add
add
fucomi
das
inc
int
sbb
pusha
sbb
and
and
popa
add
mov
mov
sahf
daa
and
mov
fisttpll
pop
push
lea
mov
loope
sbb
xchg
adc
fisttps
or
push
leave
idivb
in
mov
mov
cltd
fwait
xor
jno
insb
push
mov
dec
sub
call
xchg
inc
andb
ret
adc
sbb
pop
mov
cmp
sub
xchg
lret
in
push
arpl
inc
mov
call
push
xchg
iret
loope
das
movsl
mov
aaa
push
hlt
jge
ljmp
rcrl
ljmp
mov
push
xor
inc
dec
fmuls
and
lods
pop
push
test
push
and
add
jmp
pop
loope
lahf
loop
or
mov
cld
or
mov
pop
int
adc
aaa
pop
out
mov
data16
pop
dec
rolb
inc
or
fisubl
stos
dec
push
std
dec
pusha
push
fwait
jae
popa
mov
test
adc
enter
nop
pop
ficompl
pop
mov
fcoms
push
fmull
test
add
push
mov
inc
mov
fstl
js
cmp
lods
es
push
push
xchg
sti
or
outsl
iret
pop
inc
inc
dec
jo
mov
sbb
mov
mov
or
fwait
adc
lahf
adc
loopne
xor
int3
and
xchg
lods
aaa
and
cmpsl
daa
cmpb
mov
stos
or
inc
outsl
inc
and
lods
roll
add
imul
lcall
add
adc
xor
lahf
jo
push
mov
repz
xchg
adc
push
xor
push
leave
addr16
and
aad
ja
mov
clc
js
jle
fcmovnu
rcrb
mov
xor
pusha
ds
mov
imul
push
push
pop
shll
jle
mov
mov
movsb
aas
sbb
and
rcrl
ficomps
outsl
mov
dec
mov
pop
xchg
cmp
lea
sub
push
ja,pt
lock
imul
cmpsl
mov
or
jns
xchg
mov
cmpsl
mov
popf
or
es
inc
dec
les
xor
pop
cs
out
sub
idiv
scas
adc
dec
xchg
mov
rorb
andb
and
ret
lods
push
fsubrl
push
stos
ljmp
add
add
mov
fldenv
pop
lret
cmc
pop
int3
sub
push
ds
aad
lods
fmulp
loopne
iret
loop
sbb
add
mov
js
dec
divl
or
jmp
jae
mov
sbb
push
mov
int
push
aaa
and
or
inc
xchg
inc
pop
sbb
insb
cs
push
jne
sti
cmp
adc
imul
daa
leave
cmpsl
faddl
add
repnz
rclb
pop
dec
dec
push
sub
aas
push
fiaddl
mov
push
or
std
mov
or
ja
mov
cmp
fcoms
stos
shlb
push
pop
jnp
dec
push
mov
jmp
dec
fmull
jmp
insb
cmp
inc
push
imul
in
mov
cmp
leave
arpl
xchg
addl
fisubl
shl
xchg
enter
add
or
add
fisubs
jmp
xor
inc
dec
ffree
pop
dec
xchg
and
scas
ss
lods
jbe
xchg
fs
mov
cwtl
xchg
lods
jbe
sbb
xorl
fldcw
jg
mov
repz
adc
mov
pop
in
or
mov
sbb
jbe
push
mov
jno
adc
in
loopne
pop
pop
sub
sbb
xchg
mov
and
sub
sbb
in
push
nop
sbb
aad
imul
aas
cmp
ror
lea
pushf
adc
push
inc
call
pushf
insl
lret
adc
cmpsb
movsl
lock
xlat
ds
cmp
in
stos
orl
sub
mov
sbb
js
sub
clc
dec
mov
in
jg
adc
ja
subl
xchg
lret
cmp
ds
pop
mov
out
or
les
fstl
cmp
mov
mov
and
push
sub
xchg
cli
and
cmp
adc
in
movsl
aaa
std
clc
mov
push
sbb
push
push
ljmp
scas
mov
jg
dec
or
jbe
fdivrl
mov
adc
inc
lcall
xchg
push
cmp
cmp
push
mov
scas
xchg
xor
pop
aas
cmp
pop
int
jno
ret
xchg
push
and
or
aas
lret
mov
dec
push
fs
into
push
adc
sahf
dec
dec
jno
push
and
test
in
xchg
out
dec
je
jns
pop
in
mov
inc
sub
dec
ficompl
addr16
and
movsl
fdiv
test
inc
int
lcall
in
jmp
push
dec
push
pop
inc
nop
or
fmuls
sbb
ret
adc
jae
jae
inc
roll
cli
fcoml
clc
mov
push
jns
sub
fidivl
add
mov
mov
imul
inc
movsl
rol
xchg
inc
inc
xor
mov
shl
add
cli
cmpb
push
xchg
cld
add
cmp
cmpsl
push
and
lcall
push
adc
inc
ret
fstpt
ja
pop
jg
push
mov
scas
mov
xor
xchg
sar
ret
sarl
adcl
jbe
rcl
popa
inc
xchg
and
inc
shlb
sbb
mov
xor
add
ljmp
int
scas
pop
and
sub
negl
outsb
dec
mov
dec
int3
xor
loope
xorl
sub
movsb
mov
mov
repz
sub
mov
inc
mov
mov
xlat
mov
stos
mov
pop
cmpsl
fiaddl
call
cld
pop
push
jge
mov
fisubrs
imul
sbb
mov
add
inc
and
add
xor
lods
out
insb
repnz
call
xchg
push
and
or
sub
addr16
jne
add
popa
push
push
and
sub
cmp
xchg
cmc
inc
bnd
push
and
pop
dec
stos
idivl
jns
sbb
movsl
pusha
push
das
fstps
push
ds
pop
add
pop
mov
adc
xchg
sahf
scas
push
add
mov
idivl
xchg
xor
pop
ss
add
or
push
pop
mov
cmp
add
jge
push
adc
addb
popa
xor
sbb
jl
sbb
mov
jne
xchg
in
jnp
sbb
mov
sarl
sub
movsb
in
sbb
cltd
pop
pop
inc
pop
mov
addl
jnp
pop
mov
xchg
arpl
repnz
cwtl
pop
lods
mov
add
fisttpl
xchg
add
push
jg
in
enter
adc
lcall
mov
fidivl
ds
out
add
outsl
loop
js
subl
stos
dec
sub
jg
imul
loopne
lock
adc
jns
out
xlat
mov
or
jg
push
jge
pushf
push
test
les
lods
jge
pop
push
fcmove
sti
mov
in
cli
xor
sub
pop
fwait
cmp
sbb
stc
idivb
mov
das
xchg
insb
inc
jo
pop
jnp
xchg
push
inc
pusha
mov
gs
inc
sarb
loop
enter
fldcw
pop
lea
test
xor
sub
loop
leave
aam
mov
ljmp
pushf
adc
xchg
mov
xor
std
adc
jo
push
sub
fsubrs
inc
jmp
pop
rcrl
sbb
sub
shll
inc
inc
mov
aam
stc
das
xor
shlb
adc
jecxz
add
dec
sbb
sbbl
aam
dec
icebp
outsl
inc
sub
mov
mov
mov
fmuls
ja
dec
stos
xor
xchg
movsb
data16
test
cs
imul
test
push
mov
roll
test
cmp
push
sub
loope
xor
mov
push
into
mov
lds
add
lds
xorb
dec
push
xchg
mov
data16
dec
sbb
adc
sbb
out
mov
inc
insb
jne
mov
jge
add
sbb
int3
call
pop
jge
dec
out
mov
hlt
test
mov
loope
les
inc
cmp
mov
or
pop
mov
sbb
outsb
out
jl
test
je
push
insl
shlb
push
add
into
push
xchg
inc
popl
outsl
je
mov
mov
test
sub
mov
filds
xor
cmpsb
pop
mov
dec
mov
or
pop
sbb
cmpsl
fld
scas
mov
loopne
pop
leave
sub
fidivl
inc
sub
rcl
ja
mov
mov
in
mov
lods
mov
clc
pop
mov
inc
add
sbb
sahf
mov
cld
inc
icebp
rcrb
addr16
adc
test
adc
mov
daa
inc
push
mov
imul
xor
add
sbb
adc
fistpll
dec
push
dec
sti
sbbb
cmp
arpl
cs
pop
or
pop
push
sub
mov
mov
sub
dec
pushl
push
jbe
dec
jle
sbb
lods
xchg
mov
stos
addr16
dec
xchg
sub
xchg
mov
mov
fnstsw
xchg
mov
int
popw
andl
in
and
ja
out
sbb
pop
pop
out
jae
add
not
js
out
repz
test
mov
mov
popa
mulb
repnz
mov
mov
and
cmp
mov
ds
xchg
push
jecxz
movsb
mov
dec
or
es
aaa
into
cmpsb
scas
aas
cltd
inc
push
je
test
outsl
sbb
stos
mov
or
jmp
adc
nop
jecxz
lods
sub
aas
jae
jmp
hlt
inc
mov
sub
hlt
in
out
or
cltd
aas
cmp
mov
cmp
fwait
xchg
cmp
xchg
mov
fadd
shll
sbb
mov
dec
decl
xor
cld
pop
in
cmpb
ficompl
je
out
dec
rolb
movsl
cmp
rclb
sbb
lods
cmp
push
std
rorb
push
aad
xor
rcrl
dec
dec
cmpsb
push
fisubrs
mov
sub
leave
pop
imul
ja
lods
scas
add
shlb
or
add
loope
push
pop
dec
jp
adc
stos
test
push
decb
or
int3
fstpl
rcll
add
arpl
outsl
mov
lret
imul
sbb
stos
adc
adc
cmp
pop
jmp
dec
movsl
sbb
lods
adc
pop
push
jns
jmp
xchg
and
xorl
fucomp
or
repnz
push
xlat
mov
push
jp
lahf
popf
jns
adc
xchg
mov
lds
jecxz
decl
mov
xor
add
pop
js
xor
mov
cmp
jo
pusha
mov
paddb
je
rcr
aad
das
lods
inc
push
cli
mov
or
lds
fisubrl
push
xchg
mov
jb
cmpsb
cmp
mov
push
or
arpl
aad
inc
xchg
add
mov
lods
inc
test
mov
push
std
icebp
or
pop
call
xchg
push
mov
jne
xor
insb
add
jmp
popa
mov
arpl
jne
lods
movsb
cmp
inc
ljmp
fwait
insl
pop
movsl
adc
cmpb
in
ja
mov
add
inc
push
jnp
fwait
rorb
mov
xor
xlat
mov
sub
inc
in
jo
in
xchg
xchg
iret
lods
sti
gs
mov
xlat
mov
inc
pop
mov
int3
xor
stos
adc
pop
push
jmp
xchg
nop
decb
adc
adc
adc
cmc
xchg
fiadds
xchg
cmp
into
fnclex
scas
ss
clc
dec
jle
push
xchg
push
inc
inc
pop
repnz
cmp
in
adc
adc
push
js
lea
mov
cwtl
shl
pop
jo
shlb
mov
mov
mov
xor
shlb
cmpsl
sub
pop
sub
adc
leave
dec
push
inc
aas
push
lea
and
mov
cmpsb
push
and
lret
dec
mov
inc
xor
xor
sahf
mov
and
fcoml
sarb
add
lds
scas
mov
push
mov
loope
pop
iret
or
mov
or
or
lods
imul
and
xchg
fcomp
jns
add
aaa
es
jo
cmp
mov
jns
pop
mov
imul
imul
cwtd
cmp
push
int3
into
jge
mov
loopne
xor
xor
mov
hlt
add
jg
out
pop
loope
xchg
dec
dec
push
mov
cmpb
adc
xor
and
push
cmp
adc
or
jmp
add
fdivrl
lret
mov
cmpsl
xchg
xchg
mov
sahf
mov
cmp
cmp
adc
dec
inc
xlat
popa
inc
mov
cltd
inc
pop
xor
outsb
mov
inc
fwait
jp
pop
mov
sub
or
andl
adc
out
mov
stos
mov
inc
sbb
aam
sbb
pushf
inc
clc
dec
sbb
daa
scas
lds
pop
lea
movsl
cmp
dec
aas
mov
fnsave
xor
add
add
loope
jo
cmp
mov
inc
jle
jnp
sub
call
mov
add
pop
ljmp
push
rclb
mov
mov
sub
fdivrs
fwait
push
roll
xor
and
dec
xchg
jae
xchg
lahf
orl
pop
rorb
dec
subl
leave
mov
xchg
mov
jbe
je
lds
in
cmp
stos
sbb
aas
sub
adc
rcll
jge
or
or
and
mov
push
cmp
inc
sbb
or
push
pop
sti
add
fisubrl
inc
pop
in
and
sbb
xchg
mov
popa
test
pushf
ret
push
inc
outsb
add
pop
xchg
adc
mov
xchg
jle
mull
in
aaa
dec
out
movsb
scas
fadds
push
int
xchg
sbb
mov
sbbb
mov
pusha
sbbb
and
lods
push
xor
add
mov
push
enter
pop
mov
lods
pusha
flds
xchg
out
subl
stc
mov
daa
mov
shll
imul
fnsave
andl
mov
cmc
mov
xor
stos
faddl
dec
fildll
cmp
xor
and
aam
fldl
push
cwtl
and
jecxz
ret
sbb
mov
mov
jp
sbb
setle
pop
adc
and
sub
cmpsb
unpckhps
iret
aas
je
pop
push
mov
or
push
push
imul
mov
in
push
inc
pushl
adc
sarb
jp
mov
not
sbb
bound
and
xor
inc
stc
rorl
cwtl
sbb
test
andb
or
mov
jmp
and
lods
unpcklps
insb
sbb
stos
jb
cmp
ljmp
push
mov
lea
int
scas
hlt
push
push
mov
and
stos
or
addr16
and
mov
les
add
sub
sbb
push
xor
xor
mov
in
or
daa
bnd
pop
jo
les
lods
fiadds
xchg
out
lods
sbb
inc
aaa
cmp
outsl
loopne
mov
mov
xor
mov
and
std
data16
jo
jle
push
xchg
loop
mov
in
js
dec
mov
sbb
aam
pop
rcrb
sbb
jno
and
or
or
repz
push
in
inc
into
std
idivb
loopne
and
stos
out
fstpt
movsl
daa
inc
adc
pushf
adc
ret
pop
dec
push
inc
mov
scas
sbb
rcr
mov
fsubs
ja
je
pop
mov
inc
ds
fldcw
inc
cmp
mov
mov
daa
js
mov
call
pop
xchg
pop
or
add
int
sbb
rcrl
rolb
int
jno
push
mov
jmp
or
sarb
jp
fwait
das
mov
jns
or
push
jae
int
mov
lods
daa
cmp
jmp
fistpl
mov
dec
leave
jge
and
loope
mov
repz
sub
xchg
movsb
and
jp
jmp
lret
xor
ficoms
or
pop
daa
and
xchg
test
dec
out
adcb
mov
sbb
cmp
inc
push
pop
add
pushf
repnz
mov
inc
lock
jo
loop
mov
or
scas
hlt
test
lods
out
jbe
clc
inc
lret
sbb
pop
mov
dec
mov
popf
push
or
sbb
jmp
out
in
outsb
lock
sar
push
out
out
cmp
pop
pop
inc
fdivrl
fwait
ret
push
out
je
xor
push
in
leave
mov
or
mov
std
sub
mov
jno
leave
or
imul
je
pop
popa
sub
aas
xchg
bsf
pop
dec
clc
pop
in
mov
das
sub
pop
test
mov
sub
xor
cmp
aaa
stc
pop
sahf
pushf
icebp
mov
jp
lods
xor
jp
xchg
push
test
push
lret
imul
fisubs
adc
push
cmp
adc
cli
sbb
daa
jae
sbb
jbe
and
lcall
push
or
sub
mov
leave
inc
mov
cmpsl
scas
push
lds
hlt
push
insl
scas
fistps
aad
cwtl
repnz
mov
shrb
dec
push
jbe
test
inc
mov
cmp
loop
jge
pop
cwtl
out
push
inc
mov
imull
fdivl
add
jnp
jo
cld
rcrl
push
fadd
call
loope
mov
mov
sahf
xor
mov
add
cs
push
jecxz
fmul
adc
xor
shlb
push
stc
jnp
bound
lods
pop
outsb
sub
cmp
jbe
push
popf
fcmovnbe
fwait
cmp
add
mov
jbe
mov
cltd
cltd
mov
roll
xchg
sarb
out
jg
mov
jmp
xchg
das
dec
pop
imul
fs
sbb
sbb
arpl
push
mov
int3
in
test
xor
dec
jmp
mov
test
mov
int
pusha
pop
adcl
rclb
sbb
mov
dec
mov
add
ret
in
xchg
cmpsl
dec
jnp
xor
push
das
sbb
std
sbbl
mov
dec
in
inc
js
leave
ret
ljmp
mov
iret
stos
or
aad
adc
xchg
xchg
dec
call
mov
sub
xchg
ss
xor
faddl
jo
cmp
sbb
jns
outsl
or
cmpsb
pop
ds
sahf
pop
inc
add
test
je
push
mov
cwtl
icebp
inc
nop
pop
xor
adc
cwtl
loope
inc
add
push
mov
add
pop
es
lods
mov
and
jge
sub
or
sbb
sbb
pop
insb
or
adc
xchg
into
cmpsb
mov
pop
push
sarl
xchg
mov
out
jb
sti
or
aad
sub
pop
xor
incb
xor
jmp
sbb
sub
lahf
xlat
fdivr
mov
mul
inc
mov
icebp
jb
pop
lahf
add
push
test
jb
sbb
push
or
adc
aas
push
inc
rcrl
mov
fcomp
add
ss
mov
sbb
mov
xchg
daa
aad
es
mov
mov
cmp
loop
mov
add
add
pop
cmc
inc
push
jae
xor
inc
and
test
test
popl
ja
jno
cld
dec
push
dec
push
enter
sahf
out
push
cltd
sub
cmp
pusha
add
shr
cmc
pop
inc
icebp
xor
adc
mov
cmp
mov
jnp
jge
jl
notb
and
xchg
adc
popf
cmp
mov
nop
out
add
jle
test
scas
add
add
xchg
inc
ja
out
pop
jmp
jns
stc
ljmp
insb
push
bound
sbb
dec
pushf
and
dec
fwait
test
xor
mov
repz
pop
dec
nop
sub
ret
lods
xor
and
and
xor
lcall
mov
xchg
xor
inc
faddp
sub
xor
xor
mov
add
icebp
mov
cli
es
mov
xchg
std
add
loopne
pop
aas
push
xchg
sub
rorb
jbe
dec
aas
fidivs
fisttpl
aad
stos
mov
fcompp
add
mov
pop
mov
and
out
lods
adc
cmp
pop
int
pop
cltd
sti
idivb
popf
adcb
sarb
loopne
lock
or
sub
push
ret
xor
xor
ds
aam
cmp
out
and
jecxz
lods
mov
ret
cs
dec
sbb
test
mov
and
sub
aad
and
pop
inc
popl
aaa
inc
test
ss
or
mov
jnp
shll
mov
sbb
js
or
or
sbb
addr16
jmp
popl
xor
mov
mov
pop
in
jg
xchg
aam
out
inc
es
and
dec
cmc
inc
or
stos
push
sahf
repz
cld
dec
in
fistps
jae
push
movsw
xchg
jge
add
sbb
in
xchg
rcr
loope
ss
and
out
clc
cmp
mov
inc
cmc
fnsave
or
sub
gs
push
mov
dec
mov
sbb
outsl
jns
xor
cmpsb
cmpsl
nop
ret
adc
shlw
mov
adcl
mov
mov
dec
je
and
mov
fwait
daa
in
add
inc
popf
cmp
push
add
je
mov
push
in
jmp
imul
cmpsb
mov
gs
mov
adc
cmpsb
jns
stos
sub
xchg
cs
pop
sub
loopne
call
fadds
dec
push
mov
lea
jg
inc
xor
add
sub
arpl
xor
push
add
call
inc
mov
and
sub
dec
mov
adc
lcall
stos
push
mov
lds
jg
lods
mov
add
adc
daa
and
data16
push
out
or
aaa
lock
cwtl
inc
loopne
sub
sbb
fcmovnbe
jo
gs
push
mov
je
lcall
cltd
int3
push
daa
out
xor
nop
lods
jne
out
jge
or
add
sbb
and
lods
lock
cmpsb
sarl
imul
mov
dec
mov
cmp
insb
cltd
lods
insl
or
pop
lock
push
mov
lret
pop
jecxz
mov
lods
push
data16
inc
add
jp
push
inc
cmp
sahf
aad
jmp
fwait
and
cld
pop
pushf
nop
loop
mov
pop
push
xor
sub
pop
pusha
or
or
subb
rcll
ljmp
push
imul
cwtl
mov
xor
fimull
inc
add
sbb
out
movsb
mov
fs
ficoms
scas
xlat
mov
sbb
frstor
xor
mov
int
mov
int
hlt
les
ljmp
push
mov
call
stos
das
scas
mov
scas
push
sarl
dec
fsubl
add
divb
fistl
mov
xchg
aam
movsb
int
nop
mov
imul
out
loopne
bound
int
je
pop
outsb
fdivrs
out
test
clc
cs
repnz
mov
xor
pop
xor
push
jecxz
adc
pop
ret
inc
out
lcall
mov
sub
loop
and
xchg
test
xchg
shl
pop
push
dec
fs
push
clc
add
push
pop
out
inc
or
fnsetpm(287
dec
adc
add
mov
mov
xchg
pop
or
das
daa
fs
lea
push
dec
outsb
fs
mov
leave
push
stos
dec
add
int3
or
fdivrp
xlat
sbb
mov
push
cmp
aam
dec
inc
add
pop
xchg
es
ds
add
mov
outsl
pop
rorl
addl
out
out
sub
add
rorb
jae
clc
movsl
jl
clc
inc
xchg
repnz
icebp
mov
push
cmp
scas
mov
and
pop
push
scas
sbb
lds
and
jg
mov
xor
aam
jo
xor
jnp
aaa
push
dec
ficoms
push
ret
ret
imul
cmp
pop
xchg
inc
sbb
in
jmp
pop
pop
sbb
out
or
repz
inc
sbb
push
jmp
enter
cmp
mov
jle
xchg
mov
cmp
push
ffreep
ret
xchg
add
fs
test
and
leave
push
xchg
xchg
or
ret
movsb
inc
ret
xor
movsl
add
sar
pushf
mov
lock
out
imul
push
enter
mov
cli
mov
and
pop
dec
cmpsl
push
test
stc
and
push
rclb
sbb
lock
mov
fnstenv
push
iret
or
pop
orb
call
es
inc
xchg
xchg
pop
inc
lock
daa
cwtl
data16
sbb
insb
dec
jecxz
adc
adc
inc
xchg
and
jl
push
or
xor
imull
leave
sub
fmuls
leave
daa
push
cmp
out
mov
movb
insb
shrb
movsb
bound
call
stc
jbe
cltd
push
xor
in
add
out
pop
push
fwait
cmpb
or
dec
ficompl
out
or
jo
cmc
add
push
and
sbb
inc
inc
rclb
xchg
fs
pop
outsl
lret
cld
add
cmp
xor
xchg
mov
repz
jle
rclb
push
and
ret
sub
sbb
lds
enter
adc
loopne
scas
lock
push
mov
cmc
adc
inc
sbb
rcrb
dec
xchg
lea
test
cmp
imul
sub
fcomip
pushf
iret
int3
fstpt
jle
icebp
cmp
repz
hlt
mov
fimull
or
popa
test
inc
enter
push
cli
adc
and
dec
int
push
aam
inc
mov
mov
push
clc
arpl
rorb
std
outsl
mov
sub
sub
testb
mov
push
cmp
leave
pop
lret
mov
jns
cmc
xor
mov
push
popa
stc
jge
arpl
scas
add
sahf
in
and
scas
jp
ljmp
sub
jnp
and
rcll
pop
lahf
cmpb
xchg
sbb
dec
out
xchg
hlt
mov
int
xor
pusha
es
push
frstor
mov
sub
mov
push
sbb
push
lds
fcomps
aaa
mov
push
sub
test
iret
fisttpl
mov
ret
mov
mov
enter
pop
push
movb
inc
add
cmp
lret
pushl
roll
mov
lods
lret
inc
enter
movsb
hlt
cmpsb
mov
pop
push
add
mov
push
rcr
cmp
movsl
inc
cmp
sahf
mov
mov
leave
scas
ret
or
mov
mov
je
and
fxtract
add
xchg
push
aaa
xor
xchg
mov
shl
cmp
lret
ljmp
inc
push
mov
jl
dec
inc
sub
pop
push
movsl
mov
in
or
insl
rol
adc
sub
ds
stc
or
jno
or
xchg
jp
mov
sbb
nop
movsl
adc
inc
iret
cli
or
sub
imul
sub
and
data16
xor
in
cmp
daa
scas
or
stc
push
inc
jl
mov
iret
adc
fldl
repnz
dec
pop
adc
dec
cltd
sub
xor
add
nop
cmp
sti
mov
pop
xchg
sti
inc
and
inc
popf
push
xchg
or
add
pslld
imul
iret
movsl
in
out
inc
imul
mov
push
mov
mov
stc
cwtl
mov
stc
cmp
nop
cltd
pop
mov
jmp
adc
shlb
cld
mov
lea
cmp
insl
pop
mov
scas
pop
sbb
mov
dec
repz
lea
sbb
pop
in
xor
mov
fnsetpm(287
divl
aad
insb
push
dec
and
movsl
fs
inc
stos
mov
dec
add
ficoml
sti
push
fwait
stos
and
lcall
lock
xchg
jno
push
cmp
jg
dec
xchg
push
xchg
fisubs
lock
mov
sbb
adc
cmp
push
dec
and
xchg
inc
inc
adc
push
shl
arpl
insb
cld
add
shl
cmpsb
sub
mov
fstp
out
out
pop
mov
or
jmp
add
outsb
pusha
xchg
push
call
movsb
int3
push
jo
mov
bnd
ret
cs
xor
lret
imul
hlt
hlt
adc
mov
xor
insb
icebp
test
iret
pop
ret
fstps
in
adc
xchg
shll
out
jne
into
and
into
mov
cmp
aad
fdivr
cltd
jb
out
fldenv
popf
mov
call
pop
dec
pop
hlt
aaa
data16
cs
sub
lret
mov
add
sbb
pop
jbe
mov
ret
lret
insl
loopne
aad
mov
xchg
push
sub
lcall
jl
xchg
lea
in
cmp
xchg
sbb
xchg
fsubrl
mov
pusha
mov
sahf
mov
sub
clc
daa
sbbb
xchg
cmp
push
sti
shlb
pop
ja
xchg
shrl
pop
dec
idivb
mov
inc
xlat
inc
mov
aad
add
mov
push
insl
or
inc
jl
addr16
repz
mov
fsubrs
jae
enter
sub
adc
and
bound
cmp
cmp
dec
test
add
das
cmc
ja
subl
adc
and
test
je
push
jb
sub
ja
jno
push
sarl
dec
in
repnz
loopne
repnz
jns
pop
push
test
in
fistpll
pop
jno
cwtl
jns
inc
push
or
fdivrl
dec
cld
int3
inc
pusha
sbb
mov
jecxz
pop
sub
push
jbe
test
pop
mov
shll
add
cwtl
mov
ficoml
stos
mov
test
or
sbb
push
clc
or
mov
cmc
ljmp
popa
mov
stos
data16
popa
pop
clc
int
sahf
nop
pop
test
jmp
add
pop
jg
lret
mov
loopne
sub
xchg
je
cmp
stos
sub
xlat
sbb
into
cwtl
inc
xor
cmp
cmp
mov
pop
jl
and
das
wbinvd
sti
xchg
dec
cmp
loopne
cltd
sub
sbb
add
cmp
movsl
sub
dec
insl
xor
out
leave
sahf
shl
ljmp
jge
sbb
mov
cmp
hlt
in
push
jmp
mov
pop
xchg
pusha
mov
sbb
cwtl
filds
mov
lret
dec
in
loop
cmp
in
adc
mov
dec
scas
scas
mov
cmp
jg
jns
lahf
jmp
mov
pop
cmpb
rclb
adc
pop
sub
aas
fldenv
ss
popa
dec
push
sub
mov
mov
xchg
mov
repnz
jb
push
mov
fcmovnb
outsl
int
scas
dec
mov
inc
shl
cmc
imull
and
mov
cli
xor
sub
jle
scas
popa
mov
add
std
pop
loopne
movsb
jb
xor
push
push
movsl
jae
rol
std
pop
insl
sahf
int3
mov
rol
outsl
ret
fiaddl
cld
jbe
push
push
int3
jge
in
jle
idivl
adc
jno
jae
sbb
repz
lods
imul
out
stos
jp
mov
mov
jp
adc
out
pushf
adcl
or
cmc
cmp
test
inc
lea
add
mov
cltd
xor
add
dec
aam
adc
sbb
sbb
add
scas
dec
js
push
loopne
cld
ret
adc
mov
jle
imul
les
cmovle
pop
mov
sahf
jb
adc
push
mov
roll
and
mov
repnz
daa
loop
sub
inc
sbb
xor
mov
bound
das
test
rolb
mov
cmp
inc
mov
inc
ss
out
arpl
adc
leave
adc
pop
xchg
xchg
jnp
push
jle
pop
loopne
cmp
in
xor
jecxz
lds
xchg
fs
dec
inc
xchg
aam
mov
cmp
or
std
jg
cmp
xor
add
lods
stos
fisubrl
insl
int3
jne
test
bound
test
bound
shlb
ret
clc
pop
int
stc
mov
xor
notl
cmpsl
sbbb
imul
mov
mov
jno
repnz
pop
je
jp
nop
push
clc
movsb
push
jp
cmp
sarl
cltd
xchg
clc
xchg
test
aam
ds
xchg
das
cmpl
cld
stos
xor
or
pop
mov
mov
out
push
icebp
push
fdivr
add
aad
cmc
cmpsb
in
pop
mov
stos
mov
mov
aas
insb
cwtl
cwtl
stc
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
dec
cmpsb
fsubs
cld
push
jl
out
xchg
cmp
dec
cld
push
jl
out
xchg
arpl
cld
push
jl
out
xchg
movl
out
xchg
movl
out
xchg
leave
cltd
inc
inc
arpl
out
lret
rclb
adc
popf
out
out
popf
es
or
hlt
xchg
test
gs
pop
add
icebp
inc
inc
and
push
jl
out
xchg
pop
jp
or
std
in
push
push
mov
out
gs
fmulp
inc
add
imul
adc
jmp
lds
fldcw
ss
decb
jecxz
testb
std
in
push
push
mov
mov
sub
cld
mov
cltd
jne
sub
jbe
mov
inc
cmp
ds
jge
mov
in
or
outsl
out
xchg
movl
dec
push
lea
and
push
jl
out
test
int3
xchg
dec
arpl
clc
push
jl
jmp
cld
pop
fisubs
cld
push
insb
outsl
out
xchg
ret
dec
and
cld
inc
jl
out
test
movl
out
xchg
movl
out
xchg
and
jl
jl
out
xchg
movl
out
xchg
xchg
cld
dec
arpl
cld
push
jl
out
xchg
xor
cld
push
jl
in
test
arpl
cld
push
jl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
int3
xchg
pop
arpl
cld
test
out
and
mov
push
jl
out
xchg
out
cld
test
push
and
outsl
out
xchg
cmpsl
xchg
dec
xchg
sub
push
outsl
out
xchg
ret
xchg
dec
arpl
cld
push
jl
out
xchg
cmpsb
cld
dec
andl
push
jl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
xchg
movl
out
jmp
dec
arpl
cld
push
push
int
testl
outsl
fstpt
xchg
inc
fsubr
stc
aam
xchg
mov
out
sub
jnp
nop
jmp
jl
dec
push
mov
jmp
jp
cld
call
mov
addr16
mov
dec
mov
insl
stos
mov
sahf
int
sti
jnp
fcompl
dec
xlat
mov
pop
out
cmpsl
and
test
dec
popf
mov
sbb
mov
dec
push
enter
fimuls
adc
aad
xchg
mov
dec
arpl
mov
sahf
dec
dec
int3
imul
das
mov
inc
xor
or
lods
loope
in
push
clc
pop
mov
fwait
andb
and
xor
cmpsl
int3
sub
pop
jb
cld
sarl
in
cmp
test
sbb
mov
imul
pop
or
int3
adc
arpl
jmp
xor
jge
xor
dec
inc
jbe
sub
mov
pop
pusha
fsubr
mov
shll
std
cmp
mov
cld
cmp
stc
cs
popa
enter
stc
lcall
repz
mov
pop
mov
or
pop
arpl
adc
test
shlb
add
cltd
repnz
fsubrs
out
sub
jle
rorl
popa
movsl
dec
mov
pop
shlb
pusha
add
mov
adc
dec
mov
pop
aad
mov
cmp
mov
cmp
outsl
test
je
popf
inc
mov
inc
inc
in
inc
orb
pop
scas
add
or
addl
cld
or
movsb
mov
icebp
inc
jecxz
jb
loop
js
test
cmp
stos
cmp
fidivrs
sarb
sbb
test
jnp
mov
sub
pop
jns
mov
stc
enter
mov
sub
adc
out
out
sub
push
sub
xor
movsb
xor
lahf
push
push
mov
fs
xchg
imull
mov
sbb
movsl
lret
fstpl
aad
fldt
loopne
cmp
mov
and
outsl
jge
push
sti
push
inc
lods
mov
jae
inc
mov
pop
movsb
jmp
arpl
push
mov
insl
jecxz
jne
flds
pop
dec
je
mov
aaa
jbe
add
jnp
and
dec
sbb
nop
xor
popf
mov
cmp
gs
xor
xlat
push
push
rolb
aas
int3
sahf
jg
shld
jnp
cli
and
popa
mov
mov
fidivrs
addr16
xchg
adcb
inc
mov
fdiv
sbb
inc
xor
adc
dec
popa
sub
movsb
pop
xor
incb
adc
or
shlb
cwtl
clc
out
les
adc
cwtl
mov
clc
inc
mov
jg
pop
testl
loope
or
mov
push
jo
stc
jmp
jg
pop
inc
xor
call
jbe
cmp
push
lods
and
or
roll
loope
or
das
xor
les
sbb
mov
xchg
mov
loope
mov
fsubr
shl
push
das
jae
xor
or
xchg
xchg
into
out
push
xor
xchg
jne
xchg
fld1
ss
fiadds
loope
pop
ds
jmp
jle
mov
add
or
cwtl
jecxz
mov
mov
and
pop
fimuls
sbb
addr16
lahf
mov
aaa
adc
mov
test
jge
add
cltd
lcall
jb
xchg
mov
jmp
test
sub
loop
sub
fldt
mov
aas
outsb
out
mov
stos
add
and
aad
jnp
cmp
data16
mov
jb
sub
or
jbe
in
xchg
adc
sti
clc
cmp
stos
cmp
leave
loop
xor
test
sbb
cwtl
mov
orb
cld
adc
xor
sbb
jg
out
addr16
mov
fistpll
ljmp
mov
stos
bswap
movsl
fcoms
xlat
cld
xor
in
lods
push
xchg
mov
mov
push
sub
cld
fimull
xor
add
aaa
dec
mov
and
xlat
lods
ficompl
shr
mov
iret
dec
bound
fidivrl
call
out
pusha
add
dec
sbb
or
mov
cmc
mov
sbb
sub
cld
insb
outsb
xchg
jl
mov
mov
ljmp
leave
inc
sub
stc
jle
lret
cltd
cmc
add
leave
push
or
jne
cmc
cmp
stos
cmpsl
test
or
scas
push
shrl
pop
mov
stos
shll
inc
mov
cli
and
inc
fpatan
jmp
xlat
icebp
mov
mov
mov
jge
scas
pop
das
pop
and
lock
mov
test
pop
and
scas
cmp
or
stos
sub
ss
jns
pushf
cltd
jmp
or
mov
sub
add
cli
std
hlt
test
iret
xchg
inc
cmp
cmp
aas
loop
stos
sar
dec
and
push
scas
sarb
pop
sub
pop
push
rcll
ret
test
sbb
ljmp
xchg
sbb
jb
xchg
cld
in
mov
fwait
mov
sbb
movl
test
sarb
test
iret
loopne
stc
imull
inc
pop
mov
icebp
pop
xchg
aam
dec
rcll
xchg
jg
rcl
dec
mov
or
jns
xor
pop
xchg
inc
jmp
adc
pop
out
je
sub
divl
xor
and
aad
pusha
movsb
ljmp
aam
clc
aam
sbbl
xor
sub
lret
mov
and
test
pop
xor
movsb
lea
xlat
cs
mov
ret
push
popf
inc
aaa
jmp
and
pop
int3
imull
ds
lods
sub
sbb
adc
add
mov
and
popf
js
pop
xor
dec
dec
rcl
or
or
mov
or
nop
ja
scas
cmpb
add
cmp
xor
ja
lock
cwtl
addl
xchg
cltd
es
xchg
sub
repnz
les
fcmovnbe
sti
mov
jno
inc
sbb
rcr
or
jle
lret
sbb
jo
addr16
aas
cwtl
test
mov
jb
mov
ret
and
loopne
adc
mov
fldln2
mov
push
call
and
or
fistps
add
test
jo
in
call
cli
push
je
dec
mov
add
call
jo
lahf
mov
mov
int
repz
mov
xchg
fistpl
stc
call
dec
scas
inc
sbbb
mov
psubusb
ret
adc
stos
jg
ficoml
adc
hlt
aas
push
sub
xchg
or
out
insl
fisttpll
shrl
mov
call
in
add
pop
sub
sti
ds
pop
dec
cmp
ret
add
mov
jle
jle
pop
and
pop
daa
lret
mov
ja
rolb
add
mov
pushf
or
addl
dec
insl
xor
repnz
jb
sahf
pop
roll
icebp
jno
lret
sbb
mov
mov
push
cli
push
scas
mov
out
loopne
mov
ffreep
jns
mov
pusha
mov
xor
fs
cmp
pop
fidivs
or
mov
outsl
xor
mov
add
aaa
out
fs
dec
nop
and
mov
jg
test
aad
fisttps
push
push
fcomip
dec
add
addl
test
pushl
scas
mov
mov
push
sti
push
imul
sub
mov
in
inc
es
sub
pop
sbb
sub
push
jmp
add
adc
mov
ja
mov
mov
xor
outsb
pop
mov
lods
jae
mov
xchg
adc
test
ret
xchg
negb
xchg
add
mov
cld
cwtl
std
push
push
fistpll
rcl
jnp
xchg
andb
cmp
xor
scas
dec
add
pop
mov
repnz
cmc
lcall
loope
xchg
loope
jl
daa
shr
insl
movsb
push
sbb
and
shrb
push
stos
je
loope
cmpsl
adc
dec
jge
aas
adc
add
cwtl
stc
mov
movsl
cmc
sbbb
jmp
ret
pop
lock
mov
add
sub
inc
mov
mov
fbstp
repnz
pop
aaa
outsl
push
inc
jg
popf
leave
shl
hlt
xchg
xchg
addr16
pusha
scas
xchg
sbbl
int3
cli
dec
fistps
xlat
xor
out
daa
lret
call
jne
orb
sbb
lock
ret
stc
pop
push
js
mov
outsl
pop
mov
addr16
or
pop
inc
jne
or
lret
mov
xor
cmc
test
das
mov
inc
mov
push
nop
ficoms
sti
cwtl
jl
dec
xor
out
out
inc
ds
push
jp
sbb
and
fcmovb
hlt
icebp
push
jl
scas
les
or
ljmp
inc
addr16
or
fld
mov
lods
stos
inc
xor
push
or
scas
cmc
xor
inc
mov
xor
sti
push
push
insb
jne
sbbb
mov
imul
mov
adc
fisubrs
and
movsb
fimuls
clc
xor
fcmovnb
in
int3
mov
orl
lahf
push
xor
pop
bound
mov
in
or
push
cmp
inc
push
mov
and
xchg
ret
mov
iret
pop
pop
xchg
mov
rorb
mov
lock
js
xchg
push
pop
inc
cmpb
fisubrs
and
lods
testw
pop
inc
push
pushf
or
test
xchg
out
and
push
adc
dec
fimull
jmp
inc
cmpsl
out
outsl
out
sbbb
xchg
mov
mov
pop
bound
nop
jp
bound
sub
lcall
push
jns
cmp
incb
ds
popf
cmc
out
jecxz
fsubs
and
or
jmp
ja
jmp
ficoml
adc
cmp
imul
sub
or
push
mov
orl
sti
scas
or
sub
lods
inc
inc
add
sub
mov
xchg
or
shl
xor
jle
bound
add
mov
loope
cs
dec
outsb
mov
sti
bound
fs
cmp
xchg
push
add
mov
push
fs
jnp
mov
jle
jnp
push
sbb
inc
push
popf
pop
daa
nop
sbb
std
sti
pop
outsb
addb
imul
arpl
into
and
xchg
adc
mov
outsl
inc
fcompl
and
pop
gs
nop
xchg
gs
add
xchg
bound
sbb
bound
in
mov
pop
mov
and
popf
mov
xchg
cmpsl
add
lcall
movq
push
mov
sbb
xchg
dec
inc
test
pop
cmp
subb
xchg
cvtps2pi
adc
fidivs
mov
cmp
push
clc
push
mov
or
inc
inc
out
mov
in
nop
rol
adc
pop
in
das
das
out
or
or
out
enter
stos
sti
lea
xchg
ret
in
das
dec
sti
out
fs
push
mov
lea
inc
adc
insb
mov
push
mov
test
call
fucom
loope
idivb
inc
sbb
adc
ljmp
adc
in
xchg
or
sub
push
aad
loopne
aad
mov
cmpsb
aaa
lock
add
enter
gs
xchg
mov
or
dec
test
jo
bound
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
