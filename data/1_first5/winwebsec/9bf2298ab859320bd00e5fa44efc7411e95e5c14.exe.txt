fdivrl
sbb
and
sbb
clc
cmpsb
shlb
cmp
jo
sub
add
xor
xorb
sti
ret
mov
ret
add
mov
cmp
push
lea
pusha
xor
loop
ret
movsl
jle
iret
fstpt
sub
or
jmp
loop
ds
jecxz
je
cmp
aaa
lods
clc
mov
mov
xchg
sbbb
jle
push
fstpt
adc
fisttpl
jb
jnp
adc
dec
shll
iret
xchg
adc
js
sarl
jnp
sti
leave
loope
mov
dec
sub
sbb
mov
mov
dec
cmc
sbb
lahf
cli
mov
push
fcmovnb
pop
and
sub
mov
insb
div
xrelease
loope
test
es
sub
pop
test
cmp
xor
dec
inc
sub
ror
call
inc
fsubs
xor
lea
popa
jns
jo
icebp
push
inc
add
nop
in
dec
jl
loopne
das
leave
int
sarl
pop
mov
jmp
mov
ficoml
push
movsb
ljmp
push
mov
aam
dec
das
pop
inc
movsl
test
das
sub
pop
test
add
adc
mov
imul
fimuls
loope
jae
xchg
mov
int3
movsb
cltd
pop
sub
cmc
rorb
orps
mov
ret
pop
ret
vpaddsw
sti
lods
fstl
movsl
mov
insb
xchg
add
shl
sub
dec
shr
stc
jbe
pop
add
dec
pop
jbe
jl
jns
rclb
add
outsl
add
fildl
sub
jg
out
cmp
cmpsb
jbe
cltd
call
cmp
fdiv
adc
std
jbe
imul
fcmovbe
adc
insl
fcmovnu
add
std
lahf
cmp
push
mov
enter
xchg
xchg
jecxz
lret
cli
or
xchg
add
dec
aam
orb
rcrb
mov
loope
cwtl
mov
lcall
dec
xchg
in
les
xchg
cmp
or
lea
and
shrl
dec
mov
sbb
ds
add
ja
mov
hlt
fs
mov
ds
rolb
mov
xor
add
addr16
xchg
mov
js
cmc
in
xor
push
push
loope
arpl
ror
cltd
lods
pop
push
xchg
sbb
and
xchg
fldl
insl
mov
icebp
ljmp
aam
push
loop
loope
jle
adc
ljmp
ja
imulb
sub
js
nop
aam
lret
push
jne
mov
xchg
xorl
xor
cmp
and
inc
inc
mov
and
dec
push
orl
sub
fwait
adc
push
sarl
jg
cmp
clc
cmp
enter
ss
daa
xor
nop
ds
or
xor
push
mov
mov
cmp
or
push
jb
mov
lds
jbe
cld
out
mov
stc
jge
out
cmp
mov
addr16
xlat
sti
mov
sti
imul
in
dec
lea
fistps
xor
mov
rol
and
in
xchg
dec
inc
lcall
and
sbb
jnp
push
mulb
lods
push
jg,pt
cli
std
ret
add
inc
mov
mov
ds
decb
rcrl
in
xchg
push
add
xchg
push
mov
push
cmp
in
icebp
xchg
push
mov
push
cmp
sub
roll
xchg
lock
aas
cmpsl
pop
out
dec
int3
pop
ret
insl
int3
loope
sti
movsb
arpl
cmp
push
and
mov
xchg
pop
mov
pusha
lods
outsb
das
jne
aam
mov
scas
mov
rorl
cmc
in
inc
div
push
in
jb
popf
mov
out
push
in
add
enter
dec
sbb
pop
add
adc
jae
cli
xor
sub
dec
fmull
push
jno
inc
imul
imul
adc
call
pop
out
add
xchg
in
cld
sarb
xchg
mov
stos
out
xor
pop
repz
cmpsb
fdivrs
divl
pop
sbb
sahf
jle
dec
push
aad
fistpl
pop
cmp
and
std
scas
mov
jge
sbb
mov
fs
ficomps
jae
in
xchg
iret
neg
mov
repnz
and
gs
fucomip
mov
aad
adc
mov
pop
or
sub
cmp
and
aad
add
fnstenv
ret
xlat
jmp
mov
push
std
sub
xor
pop
xor
adc
pcmpeqd
xchg
dec
in
jg
pop
fcompl
sub
jl
push
or
add
mov
sbb
shlb
xchg
mov
xchg
and
cmp
movsb
jo
mov
adc
mov
xchg
ret
jle
ret
outsb
shl
inc
push
ss
scas
fnstenv
hlt
sub
jbe
aam
sahf
and
xchg
lock
push
sbb
xor
iret
jns
xor
xchg
jg
pop
ret
mov
inc
mov
or
loopne
jno
call
push
inc
pop
lods
jl
cmp
test
jno
imul
loopne
mov
data16
pusha
inc
loop
movl
outsb
fld
test
iret
cs
xor
jecxz
or
test
xor
loopne
push
lods
lret
mov
cmc
xchg
outsb
mov
aas
jp
xor
inc
sub
leave
sub
jl
enter
adc
daa
stos
pop
js
rolb
mov
dec
loop
jl
cmp
dec
ret
imulb
std
cltd
inc
mov
aad
mov
and
and
aam
xchg
repnz
jl
movsl
push
jns
cmp
cs
test
jl
push
xchg
or
cmpsb
pop
inc
in
rcrl
sub
mov
test
jns
andl
pop
inc
xor
mov
pop
lods
arpl
js
adc
pop
fisubrl
pop
or
push
popf
pop
push
pop
sub
jle
sarb
inc
iret
sub
cmp
dec
add
xchg
xchg
cmp
insl
adc
adc
nop
mov
jecxz
arpl
mov
and
dec
mov
jp
imul
data16
outsl
add
jp
push
movmskps
mov
fs
pop
bound
insb
lret
mov
mov
aam
mov
cli
cli
xor
mov
and
imul
jo
cmp
dec
scas
es
mov
aam
or
ret
lds
orl
les
mov
dec
push
decl
les
pop
jo
fwait
xchg
fwait
inc
cmp
xchg
or
add
mov
test
cmp
xor
mov
and
and
dec
cmp
inc
in
mov
mov
push
hlt
jo
pop
adc
movsb
adc
insb
ret
push
jb
xor
test
loopne
cmpb
in
push
or
add
mov
adc
or
mov
add
clc
lret
add
sub
sar
mov
xchg
push
mov
mov
add
xchg
pop
imul
std
sub
in
in
daa
jp
popf
imul
dec
push
mov
shl
xor
movsl
jecxz
andl
pusha
cmc
dec
js
push
outsl
enter
sbb
push
imul
add
fcoml
mov
xchg
mov
loopne
fldpi
pop
pop
pop
loope
test
call
mov
mov
ja
push
jne
adc
jle
adc
inc
push
shlb
fs
hlt
stos
adcb
lret
cmc
jne
lods
aas
or
mov
inc
sub
xor
xchg
dec
jne
jo,pt
jo
mov
mov
pop
adc
jno
dec
in
insb
mov
outsl
add
aaa
and
dec
vpmacsdql
lds
push
lea
pop
mov
and
mov
popf
popf
inc
push
cmp
or
dec
mov
nop
mov
loope
pusha
or
negl
xchg
push
pop
cld
andl
das
jbe
ljmp
jl
xchg
jns
mov
sub
test
mov
inc
push
out
sbb
mov
xchg
xor
daa
les
pop
sub
out
loopne
sub
call
add
lock
outsb
and
shll
stos
daa
mov
daa
push
xchg
cmp
dec
sbb
dec
sbb
jg
in
pop
pusha
andb
or
out
jmp
or
stos
clc
xor
sti
inc
pop
repz
or
jecxz
js
add
vsqrtsd
adc
jae
adc
popf
or
xlat
xlat
xorl
inc
inc
cmp
js
fcoml
lahf
xchg
not
inc
pop
out
mov
stos
in
adc
aas
mov
sahf
and
adc
test
sahf
mov
aam
out
push
fdivrs
loopne
dec
pop
mov
cmc
movsb
enter
cmc
scas
push
mov
adc
push
aad
addr16
mov
das
lcall
loopne
fsubl
xor
out
mov
mov
loopne
add
sub
xchg
scas
in
mov
sahf
int
pop
adc
stos
jae
fdecstp
pop
pusha
cwtl
pusha
jmp
fimuls
popl
or
mov
cmpb
adc
cmp
into
mov
mov
out
fs
out
pushl
call
pop
lret
mov
in
jne
push
lret
pop
mov
ror
add
jbe
jb
dec
jne
sbbl
aas
addr16
mov
xorb
adc
mov
xchg
ja
cmp
jl
xchg
popf
data16
lea
mov
sub
sbb
and
push
loopne
cmc
jo
jmp
jecxz
mov
cld
jl
stos
adc
mov
adc
inc
pop
inc
test
push
mov
push
jle
dec
and
adc
lret
les
in
inc
add
pop
out
mov
add
adc
xchg
jo
movsb
mov
fs
scas
jno
adc
sbb
xor
ret
sbb
cmp
arpl
xor
add
sti
stos
mov
in
out
cmp
sarb
push
cmp
arpl
pushf
jl
and
add
dec
xchg
ss
popf
adc
pusha
shll
ljmp
lahf
pop
in
xor
lcall
or
or
xchg
out
stos
subb
rclb
jbe
sbb
test
lock
xchg
rclb
in
jb
add
and
repnz
gs
mov
sbb
jg
mov
enter
mov
push
mov
int
repz
fiadds
jg
mov
mov
and
cmp
add
es
pop
jl
xor
sub
mov
jle
cmpb
jmp
dec
rol
and
adc
cmpsl
mov
cld
cmpsl
mov
outsb
mov
in
add
leave
dec
adc
cltd
daa
and
mov
mov
jge
jg
cmp
aaa
test
xchg
add
lahf
test
cs
es
adc
negb
lea
lds
sub
jns
mov
dec
push
fldenv
inc
cmp
jns
iret
xor
lahf
dec
fsubrl
xor
outsl
lret
pop
sbb
fs
jl
das
adc
sub
push
jmp
aam
test
mov
dec
xchg
cmp
lods
mov
aad
and
sti
xchg
into
mov
cmc
sbb
mov
bound
repnz
inc
cld
inc
stc
sbb
cmpsl
jnp
jnp
pop
scas
push
xor
adc
repnz
aad
stos
mov
adc
out
scas
xchg
popa
and
nop
enter
int3
test
add
xchg
sub
data16
push
ja
dec
in
sbb
movsb
add
imul
in
in
pusha
insl
popa
shrb
push
mov
and
or
lea
mov
pusha
mov
out
xlat
pop
jb
out
push
xor
jge
xor
idivb
lds
clc
jno
cmp
push
cli
jno
pop
xorb
dec
leave
xor
xor
xchg
xor
push
in
arpl
subl
shr
pop
pop
and
xor
push
test
aad
mov
xchg
lahf
out
sti
inc
cmc
rorl
mov
pusha
lcall
mov
sub
inc
fistpl
movsl
pop
xchg
popf
rol
rorl
call
repz
cli
shl
cmp
test
scas
adc
adc
out
mov
sahf
xor
es
sbb
and
popa
sub
popa
push
jb
jl
pop
mov
shlb
sar
imul
add
push
and
repz
add
pop
sbb
or
adc
pop
or
movsb
repnz
mov
loop
or
loope
xchg
inc
push
fadd
push
add
cs
fisttpl
daa
scas
insb
mov
mov
clc
loope
daa
jl
aaa
add
sbb
cli
pop
adc
fmuls
mov
adc
imul
pop
cmp
imul
insb
fmull
lock
fldenv
out
xchg
ret
fwait
xchg
outsl
rcl
outsl
pop
jnp
sahf
in
adc
imul
lea
cwtl
cltd
inc
sbb
pushf
mov
xor
aam
adc
addr16
outsl
ljmp
and
test
sahf
mov
popl
pop
in
rcrb
fwait
lcall
sahf
sbb
inc
push
es
sbb
sbb
mov
mov
or
loop
mov
mov
sti
mov
cltd
int
lock
lret
or
push
fsts
lods
in
xor
pop
mov
sub
bound
das
shrl
pushf
push
mov
and
pop
sbb
push
loopne
xorb
insl
clc
inc
and
pop
dec
dec
pop
rcrb
js
leave
push
jmp
mov
rcll
inc
in
idivl
flds
popf
and
dec
les
fwait
cmp
je
mov
loope
loope
xlat
jecxz
adc
sti
add
push
sti
inc
fprem
pop
fstpt
pop
out
fdivrs
mov
and
jnp
jle
sub
xor
int3
sarb
sub
out
mov
xor
pop
out
and
mov
or
or
dec
adc
pop
out
mov
add
lods
dec
xor
pop
push
sbb
ror
xor
popa
jne
lret
inc
ret
into
mov
das
mov
mov
lods
imul
enter
shrb
das
cs
adcl
in
cmp
cltd
imul
cmp
push
pop
dec
nop
ror
mov
bound
pusha
fbld
mov
push
mov
jns
push
ror
dec
mov
mov
sub
in
daa
stc
dec
pop
pushf
out
jb,pt
xor
jl
out
pop
sbb
and
insl
stc
out
mov
jl
mov
lea
into
or
gs
cmp
jb
xor
fwait
push
dec
or
xchg
dec
jp
xchg
cmpsl
into
popa
fwait
std
push
xor
mov
jb
pusha
sub
loope
lret
jg
scas
cwtl
and
outsl
inc
xchg
scas
popa
xchg
sub
add
lods
inc
jns
inc
push
xor
icebp
jl,pt
mov
popf
cltd
mov
lods
rorl
test
push
mov
shlb
lcall
addr16
fsubrs
out
xor
push
test
and
mov
push
out
stc
pop
aad
insl
aam
mov
cmp
push
dec
xor
adc
jb
dec
mov
and
pop
pop
and
lock
stos
jo
adc
adc
test
cmc
or
out
sbb
sbb
andl
mulb
in
adc
push
add
cmp
xchg
clc
fcomi
xor
cltd
ss
inc
addl
movsb
pop
mov
pushf
mov
aas
add
mov
and
push
pushf
push
sti
pushf
cmp
push
or
rolb
mov
imul
mov
sbb
cwtl
dec
jecxz
ds
mov
test
movsl
aam
push
aam
adc
stos
outsb
testb
subb
mov
call
lock
test
lods
fcoml
jns
mov
dec
adc
ret
scas
inc
lock
jo
rorb
and
pop
pop
lock
sti
ljmp
nop
fsubr
jne
shlb
and
or
sub
add
mov
sub
rcr
push
movl
jecxz
add
pop
leave
lock
enter
add
addr16
xlat
rep
aaa
bnd
sbb
lahf
popf
jl
xchg
bound
inc
cmp
mov
sub
mov
inc
and
push
cli
mov
jp
fidivrl
punpckhdq
cli
jge
stos
rcll
push
in
or
std
pop
leave
daa
dec
scas
mov
in
and
inc
and
into
ljmp
cmp
pop
std
jecxz
jmp
das
mov
add
les
mov
popa
lcall
movsl
outsb
or
cwtl
cld
popf
cld
or
sub
jbe
in
stos
movsb
andl
jge
loope
pusha
xor
pusha
add
stos
cmp
xor
sbb
xor
cs
xchg
jae
popf
in
jo
in
sub
inc
add
divb
out
aas
push
xchg
mov
cwtl
js
pop
pushf
mov
xchg
testl
decl
inc
xchg
into
scas
or
or
frstor
outsb
cmpsb
ss
lret
sub
leave
movb
adc
xor
adc
sub
cmpsl
mov
cli
test
rcr
stos
sub
std
sbb
data16
adc
cmp
or
popa
xor
push
int3
sub
lods
lods
pop
sub
lods
mov
push
or
cmp
sbb
mov
mov
ja
push
addr16
and
inc
dec
scas
clc
jno
mov
and
xchg
push
fisubrl
xchg
popa
mov
and
test
ss
cld
insl
and
dec
outsb
sub
push
fstps
pop
xchg
nop
sbb
mov
push
ret
pop
mov
loope
push
push
sahf
xor
loopne
inc
push
lea
or
lret
sub
call
testl
jmp
stos
sub
sbb
dec
rolb
pushf
jle
imul
xlat
push
pop
mov
es
repz
popf
xlat
aaa
cld
jp
jbe
jp
xchg
sbb
cmp
adc
stc
pop
mov
mov
fisubs
pop
mov
std
arpl
sbb
inc
mov
dec
sbb
xor
js
pop
push
and
sub
xor
dec
jle
call
push
ficoms
jle
popa
xchg
fsubrp
movsb
jbe
pop
stos
jmp
dec
stc
insb
and
sti
rcrb
sbb
mov
cmp
xchg
cli
daa
dec
sbb
lret
fwait
cs
inc
push
lcall
sub
lock
mov
into
fwait
sbb
leave
mov
push
in
fwait
add
in
mov
pop
fwait
in
cld
fists
push
and
cs
cmpl
xchg
testl
or
je
icebp
jp
in
xchg
pop
pusha
add
mov
jno
sbb
and
sub
xor
push
rolb
out
xchg
push
cmpsb
pop
scas
push
aad
and
rcrb
xchg
cld
movsl
sti
cwtl
adc
sub
ret
push
pop
daa
ds
inc
sbb
and
cmp
mov
mov
repnz
clc
outsb
ficoml
or
stc
shufps
add
arpl
popa
pop
mov
or
loop
and
lret
pop
fiadds
test
pop
iret
add
dec
push
repnz
push
mov
frstor
mov
and
and
cmpsl
imul
js
inc
in
sub
pusha
movsb
xor
js
rcr
daa
and
jg
jl
jno
pop
into
mov
outsl
lods
hlt
cmc
bound
mov
jno
les
mov
pop
mov
scas
loop
xchg
jmp
inc
gs
enter
mov
lock
sbb
jl
jo
sub
cmc
mov
xchg
test
insl
or
inc
arpl
addr16
dec
lahf
and
negl
mov
adc
jecxz
cmp
insb
push
fnstsw
jns
inc
mov
mov
push
pop
not
daa
rcr
sub
sti
xchg
sbbb
mov
xchg
sub
in
insb
sbb
daa
dec
sub
pop
sbb
sbb
in
or
out
les
sub
adc
dec
data16
cmp
push
mov
sbb
sub
or
lret
mov
lock
pop
in
enter
ret
push
into
sahf
inc
sbb
pop
cli
mov
stc
mov
mov
je
pop
ds
and
out
test
out
leave
adc
lds
jae
cmp
adc
popa
scas
cmp
push
fnstsw
ror
shl
stos
adc
mov
xlat
aam
sbb
dec
andl
hlt
xchg
outsl
jb
push
inc
movnti
mov
xchg
hlt
jp
icebp
pushl
pop
cmp
inc
sbb
ljmp
push
or
pop
adc
xor
jmp
rclb
das
loop
jno
stos
pop
sub
orl
js
jmp
addl
fisubrs
daa
fbstp
decl
sahf
pop
test
mov
xor
mov
xor
sub
jp
shr
or
dec
imul
setb
xor
repz
out
mov
loope
out
pop
pop
shll
xchg
addr16
adc
sub
sbb
adc
mov
out
hlt
clc
mov
into
adcb
add
lea
rclb
lea
addl
push
shl
in
das
icebp
mov
jo
adc
fsubrs
cmp
pop
enter
lods
sti
cmp
aaa
xchg
daa
popf
cmpsl
imul
out
fs
jne
ss
mov
fsubs
dec
ss
filds
leave
js
add
fld
lods
sbb
shr
sbb
inc
gs
andl
pop
jmp
push
pop
and
pop
sub
shrb
cs
and
push
mov
insl
addl
mov
das
push
in
xchg
jbe
push
xor
adc
es
das
jecxz
or
into
repz
push
fisttpl
lock
xor
sahf
adc
dec
push
jo
pusha
inc
xchg
jns
outsb
pop
sub
mov
iret
rcrl
mov
and
cmp
sub
mov
or
hlt
daa
sbb
cs
and
jl
in
mov
cmc
movsb
dec
ljmp
jg
cmp
enter
dec
rcll
fmul
pop
push
adc
and
mov
push
inc
sub
lods
fldenv
cld
push
pop
sahf
gs
cli
jno
mov
or
lds
movsl
add
shrl
icebp
stos
sub
adc
add
subb
sbb
jg
divl
xchg
add
call
in
xor
daa
inc
movsb
int
data16
dec
fisubrs
jbe
in
stos
mov
pop
inc
insl
xchg
or
pop
sub
mov
fs
nop
push
pusha
std
roll
int3
test
nop
in
gs
xchg
jno
sbb
adc
push
pop
inc
enter
cmpsb
lcall
rep
inc
js
push
adc
sub
dec
adc
adc
ret
sbb
aad
add
cwtl
aam
jae
ds
mov
outsb
or
mov
pop
pop
and
fcoms
mov
jnp
es
call
xchg
push
and
lret
aam
hlt
clc
cmpsl
scas
clc
std
or
xchg
inc
push
lret
jmp
je
mov
cmpsb
int3
js
jb
pop
rcrl
nop
sub
sub
daa
xchg
aam
mov
mov
jge
cs
dec
aad
insb
fldpi
xchg
sbb
pop
pop
cs
fisubrs
lahf
pop
push
cmpb
or
xor
loop
imul
add
lds
lahf
lahf
aaa
lock
je
insl
cmp
aad
outsb
xor
fcmovnb
or
pop
adc
clc
sti
inc
jg
and
les
xor
xor
mov
or
shlb
sub
xchg
loop
lea
pop
adc
adc
mov
cli
sbb
xor
sbb
mov
popf
inc
and
sbb
and
fsubrl
dec
xchg
jae
fldt
xlat
insl
xor
data16
mov
pop
std
lods
std
les
pop
and
mov
mov
mov
lcall
lahf
mov
inc
pop
sub
cmp
pop
inc
dec
pop
lahf
dec
inc
fwait
adc
call
bound
mov
ret
rep
ret
les
js
roll
lods
mov
sbb
mov
inc
xchg
aas
push
inc
lods
fcoms
out
sbb
insl
mov
stc
lcall
pushf
in
loopne
stc
cltd
sbb
imul
pusha
xchg
or
pop
popf
sub
nop
xor
bound
cmc
les
and
int
lods
ljmp
enter
arpl
inc
sbb
lods
shrl
lret
lret
mov
insb
mov
test
sub
mul
and
aad
inc
cli
movsl
movsb
push
jae
xchg
push
inc
rcr
or
xor
xor
pop
jle
pop
xor
jmp
fsts
inc
fnsave
push
jnp
jo
and
and
rorb
xchg
cmp
clc
mov
mov
test
in
jmp
jns
outsl
or
mov
stos
push
lds
or
xchg
mov
adc
and
lret
xor
fs
sbb
loopne,pn
repz
xchg
je
stos
dec
mov
push
lahf
ja
ljmp
inc
daa
icebp
in
cli
cmp
adc
cmp
rorb
cmp
hlt
cmp
sub
jns
pop
test
xchg
inc
jo
xchg
jb
pop
cmp
sbb
xor
andl
dec
adc
jbe
fcoml
add
dec
out
dec
cmp
data16
pop
fstpl
sub
mov
in
fsubl
clc
jge
mov
cwtl
pop
lods
dec
sbb
inc
mov
sbb
sub
outsl
jp
xor
push
notl
cmp
xchg
cmp
cmp
lcall
pop
add
inc
sbbb
inc
ds
leave
ret
jnp
cmpsb
clc
fcomip
aas
mov
test
fidivrs
daa
scas
outsl
and
pop
sbb
loope
aam
adc
add
jecxz
xchg
sbb
inc
les
loopne
es
fcoml
fcomi
outsl
bound
mov
leave
rdmsr
xor
sbb
dec
gs
sub
xchg
fwait
sti
xor
pop
arpl
nop
jmp
in
hlt
push
sbbl
sub
lahf
add
fcomip
ficoms
shll
xchg
daa
sub
adc
das
cltd
cmp
in
and
xor
pop
mov
int
dec
push
ja
out
jge
jne
mov
add
mov
inc
push
jno
xor
adc
sub
mov
or
xchg
pop
mov
xchg
jg
mov
out
fs
jle
mov
bnd
call
out
inc
dec
popa
lcall
adc
aas
push
adc
aas
imulb
adc
sub
mov
decb
sub
inc
popa
xchg
lods
scas
outsl
into
lcall
mov
div
iret
pusha
pop
xchg
sub
mov
daa
adc
push
rcll
std
repnz
jbe
cltd
stos
add
iret
loopne
adc
loopne
movsl
lcall
fsubrs
mov
cmp
fistpll
cmc
rdtsc
jns
int
jne
hlt
mov
push
mov
jmp
mov
mov
outsb
stc
sbb
addr16
xchg
ret
adc
sarb
fldenv
jno
push
repnz
aam
cmpsl
icebp
enter
and
mov
cltd
scas
test
mov
sub
lods
adc
roll
sub
rcr
pop
insb
lret
and
js
scas
lea
les
pop
dec
ret
aad
pop
cmpsb
cmpsl
push
lahf
jae
and
shl
push
test
in
mov
repz
fidivs
dec
mov
stos
cld
test
sub
or
clc
and
mov
jp
pop
pop
mov
fdivrl
movsl
aas
jl
push
test
jecxz
mov
insl
xlat
repz
mov
sbb
ljmp
in
jle
jne
outsl
xchg
shl
test
sub
mov
int
jbe
stc
and
mov
and
adc
cld
ljmp
repz
mov
add
jno
pop
mov
cmpsb
xchg
mov
add
dec
repnz
in
pop
or
jmp
or
dec
cld
xor
mov
movsl
test
dec
add
lret
and
outsb
xchg
in
sbb
and
inc
test
es
mov
xchg
pop
popa
add
stos
loope
rolb
lods
repnz
movsb
ret
sbb
or
fiadds
and
sub
mov
inc
mov
outsl
lods
lret
or
adc
push
push
mov
or
inc
mov
mov
push
in
adc
loope
xor
dec
enter
sbb
pop
push
mov
cwtl
push
inc
in
mov
pop
pcmpeqw
decl
das
xor
pop
xchg
enter
jmp
outsb
daa
add
das
mov
rcrb
stos
sub
xchg
cltd
sub
enter
movsl
out
loop
lock
cmpsl
insl
fldcw
mov
mov
fwait
mov
pop
popl
fsub
pop
mov
cltd
xchg
stos
in
clc
mov
push
movsb
pop
andl
dec
aaa
pushf
jle
daa
fwait
out
scas
test
lcall
xor
mov
add
arpl
cmc
fsub
dec
lea
nop
imul
imul
data16
xor
mov
loop
jle
imul
push
inc
outsb
dec
cld
inc
or
and
and
mov
push
fcmovu
sbb
bound
pop
pop
cs
imul
mov
mov
xor
mov
mov
jecxz
mov
hlt
mov
pop
sub
in
out
mov
mov
sbb
fnstenv
ljmp
cmp
inc
sbb
subb
cltd
mov
js
add
sti
and
hlt
mov
int
nop
cwtl
jns
orb
into
mov
dec
and
in
mov
sbb
mov
orb
xchg
push
sub
std
inc
cwtl
xchg
addr16
xchg
stos
daa
xor
imul
and
and
pop
push
outsb
mov
leave
jp
adc
fsts
inc
jge
popf
int3
add
push
rcr
pop
mov
cmc
cmp
andb
xchg
pop
scas
inc
adc
into
sahf
lea
inc
cmpb
ss
lock
fs
sbb
aaa
stc
cmpsb
int
imul
into
and
mov
pop
push
je
add
outsb
pop
adc
shl
adc
sbb
mov
mov
jae
outsb
loop
outsl
mov
jb
or
les
mov
stos
xor
sub
lret
or
mov
xor
jno
cwtl
jb
daa
es
call
aaa
inc
jmp
popa
imul
lods
daa
scas
jmp
mov
rorl
and
in
pop
dec
xchg
jg
push
ljmp
aaa
popa
or
shlb
or
pop
lock
dec
mov
jg
mov
rclb
je
pop
mov
scas
ds
push
insl
mov
cmp
sahf
push
mov
std
iret
mov
xor
xchg
xchg
jns
stos
lahf
mov
add
shlb
lods
dec
xchg
dec
aas
ret
rol
in
nop
fmuls
arpl
xor
adc
sbb
popa
xor
mov
dec
lock
sub
pop
xchg
lahf
dec
mov
push
push
adc
add
mov
adc
push
icebp
jo
pop
jbe
mov
nop
inc
shl
or
mov
jne
imull
push
dec
mov
cltd
pop
dec
std
jno
shll
test
clc
inc
lahf
sub
jmp
loope
cmp
lcall
adc
das
aas
sbb
sbb
mov
int3
push
inc
arpl
xchg
adc
and
cli
sub
fxch
fistpl
arpl
sub
jmp
orb
mov
call
cld
dec
xchg
cwtl
cltd
cltd
push
shrl
in
insb
cmp
xchg
dec
nop
mov
push
or
ja
inc
adc
pushf
popa
negb
sub
cmpsb
inc
sbb
push
sbb
mov
add
push
xor
mov
adc
pop
int3
fwait
lea
inc
cmp
adc
sbb
shrl
lods
adc
push
and
push
dec
dec
push
popa
xchg
addb
imul
lods
idivl
in
push
xchg
add
mov
fistpll
ret
fisttps
mov
loop
nop
add
sti
and
xchg
adc
lods
out
lods
repz
test
sub
inc
fstl
call
sti
call
je
loopne
js
xchg
scas
inc
or
lahf
push
cmp
ror
repnz
sahf
pop
aam
mull
cmp
push
jmp
jmp
push
xchg
mov
scas
xor
push
les
sub
push
pop
push
subb
int
pushl
movsb
addr16
cltd
test
out
ja
xchg
sub
lods
shll
push
cltd
cmp
into
popf
rcll
pusha
call
outsb
and
bound
mov
push
add
mov
or
fxam
xchg
outsl
mov
adc
mov
cmc
and
xor
ds
sahf
loopne
cmp
mov
sbb
jne
dec
fidivrl
mov
fwait
scas
test
mov
mov
sbb
mov
adc
test
stos
xchg
inc
loope
xor
lahf
pop
out
fistpl
sbb
add
js
cmp
mov
es
xor
jo
or
cmp
cmpsl
pop
xchg
aad
jg
push
inc
add
mov
xchg
mov
and
sarb
out
sbb
sbb
int
mov
mov
cld
icebp
adc
aas
xchg
xchg
mov
push
mov
test
jns
outsl
mov
mov
mov
jno
popf
ds
ss
sbb
add
push
inc
sbb
rcrb
or
test
pop
cwtl
in
mov
jne
inc
xor
xchg
xor
sbb
xor
mov
icebp
lods
ret
mov
mov
lea
sahf
mov
or
loop
fidivl
testl
shl
push
insl
lea
cmp
repz
jne
sub
sbb
cmpsb
addr16
dec
fst
mov
mov
test
jg
dec
push
pop
loopne
sub
cld
inc
mov
sbb
sub
jne
sub
and
push
pop
enter
movsl
in
push
dec
jae
data16
mov
dec
push
leave
pushf
loope
in
sti
leave
xchg
sarb
xor
into
fwait
sbb
sbb
dec
enter
clc
dec
xlat
gs
push
imul
loope
inc
xchg
rcl
lret
push
lea
jp
popa
or
fsubs
xlat
add
adc
mov
add
adc
dec
add
shr
pusha
int3
push
mov
ljmp
xchg
dec
stos
scas
nop
xchg
rolb
es
dec
inc
lret
or
lret
dec
stos
shll
or
sub
cmp
daa
mov
mov
pop
shl
pop
jno
jns
jb
push
inc
or
dec
and
repz
jno
jae
into
sub
mov
negb
inc
in
push
aaa
xchg
pop
lock
arpl
pop
scas
lret
push
add
out
cs
aas
jae
jl
sbb
movsl
jl
mov
add
cwtl
outsl
xchg
cmpsb
add
mov
clc
add
test
xchg
pop
jmp
pminsw
or
add
push
lea
into
movsl
mov
adc
fidivrs
in
or
dec
jno
jnp
loope
in
ljmp
push
mov
pop
push
or
sub
pop
adc
adc
scas
dec
jns
lahf
push
mov
ja
jbe
test
push
andl
loope
pop
jl
cmpsb
gs
pop
inc
lea
cmc
je
cmp
repnz
inc
rorb
adc
test
mov
lds
push
jg
in
icebp
fcom
aam
lret
cld
and
pop
push
dec
adcb
push
sti
clc
jno
jge
test
pop
int3
ja
fisttps
into
jl
xchg
sti
xchg
sbb
jb
jp
adc
scas
js
inc
test
and
roll
std
mov
sub
lret
xchg
std
mov
sbb
insb
fs
aas
push
fstpt
jb
or
cmc
scas
stc
mov
mov
mov
std
lret
in
jl
jl
adc
mov
xor
xchg
mov
mov
call
nop
sub
pusha
xor
cmpsb
dec
inc
rorb
pushf
mov
arpl
sbb
mov
ljmp
or
add
mov
outsb
xchg
hlt
in
in
les
vandnps
jmp
inc
shlb
jns
inc
jno
mov
mov
push
or
lret
jecxz
mov
ds
clc
mov
data16
pushf
mov
inc
jne
mov
movsb
clc
in
or
inc
fistpl
imul
inc
icebp
sub
and
jo
shrl
mov
xchg
sti
ret
fidivs
repz
sub
dec
ror
sub
xchg
ds
jns
pop
add
imul
jb
loop
xchg
lods
pop
xchg
xchg
mov
js
pop
and
pop
sbb
cmp
imul
sub
sbb
shrl
inc
sbb
mov
lret
xor
inc
inc
adc
shll
movsb
sub
add
sbb
jge
pop
mov
ss
pop
and
xor
loopne
inc
shlb
mov
pop
cmpsb
rorl
inc
aas
sar
cmc
pop
hlt
out
out
and
inc
or
jl
mov
add
arpl
inc
fsubl
mov
call
loope
ret
ds
xchg
ds
cmp
fs
aad
cmpsl
adc
jge
ror
dec
xchg
xorb
mov
dec
inc
dec
jge
jbe
shll
dec
dec
mov
mov
cmpsl
fisubs
xchg
pushf
loopne
sub
ret
or
lods
mov
test
push
lds
dec
dec
adc
sbb
sti
sub
sbb
cmpsb
pop
xor
mov
bound
movsb
int
hlt
je
lret
mov
and
mov
pop
cli
sti
out
nop
sub
sbb
iret
adc
outsl
stc
or
repnz
cmp
in
sbb
jmp
dec
jbe
gs
fists
cmpsb
mov
pop
pop
lods
xor
es
sub
jle
mov
push
rcrl
shlb
bound
cmp
mov
xchg
push
sub
and
out
pusha
insl
daa
mov
jnp
add
cltd
ret
cmp
sub
cmpsb
sti
outsb
les
scas
lret
mov
jl
lcall
stos
movsl
sub
ficompl
insl
mov
jae
or
pushf
jp
mov
add
sub
into
jne
and
fcoml
pop
cld
cmp
mov
lods
aas
fidivrs
sbb
pop
and
adc
sbb
sarb
push
sar
push
or
in
mov
dec
mov
insb
push
shll
scas
pop
repz
frstor
data16
xchg
xchg
fisttpl
loopne
mov
and
cwtl
lret
and
imul
pop
les
lahf
inc
fwait
outsl
out
icebp
pusha
insb
js
stc
mov
mov
jmp
les
jl
xor
test
clc
xor
sub
sub
push
mov
lock
lret
aad
jg
cltd
add
js
loop
xchg
cltd
fimull
dec
icebp
inc
test
cmp
lret
and
sub
test
insb
scas
cmpsl
jl
sti
cld
mov
lods
xchg
sbb
outsb
fadds
mov
dec
in
add
ficomps
imul
push
adc
xchg
sub
loope
fs
push
lret
mov
adc
xchg
insb
out
int3
push
out
mov
fcomp
out
dec
daa
adc
inc
sub
popf
lret
mov
mov
pop
icebp
jns
mov
xchg
push
aam
pop
subl
push
mov
std
ret
lret
push
dec
mov
icebp
sahf
cmp
mov
movsl
xor
in
fs
xor
fistps
in
xor
mov
call
ret
cld
int3
push
jno
lahf
test
sbb
push
loop
test
pop
movsl
icebp
inc
pop
dec
xchg
insb
cmp
mov
push
pop
mov
rcll
mov
push
fnstenv
ret
mov
mov
scas
int
push
aaa
aas
push
jmp
pop
push
push
cmp
jmp
pop
xor
out
cmpb
ss
out
scas
xchg
loop
sti
outsl
fwait
icebp
mov
cs
vpcmpeqb
xchg
or
push
daa
loopne
call
adcl
jp
pop
mov
mov
mov
std
inc
push
mov
and
cmpsb
aad
push
adc
mov
mov
inc
cwtl
cmpsl
mov
pop
je
xor
sahf
sahf
sbb
lea
mov
cmp
push
xor
sub
push
xor
jo
fstpt
nop
ja
push
inc
push
insl
xchg
stc
and
repz
push
test
popf
push
mov
faddl
mov
or
call
jecxz
hlt
test
xor
pushf
clc
sub
xor
add
ljmp
xchg
inc
push
jp
and
dec
data16
data16
or
mov
iret
orl
sbb
jbe
xchg
into
xchg
sub
sub
mov
or
out
lret
inc
xor
stc
push
in
inc
jbe
icebp
sub
outsb
push
add
ds
cs
pop
xchg
and
aam
fwait
int3
mov
jns
and
fistps
popf
out
loopw
mov
aam
out
mov
fsubrp
out
loope
mov
fidivs
sub
xchg
mov
xor
pop
inc
repnz
jl
cmpsl
lcall
mov
outsl
aas
ficoml
lea
and
push
sub
negb
sbb
mov
cmc
rclb
inc
out
jge
and
push
mov
iret
mov
xor
insb
mov
stos
dec
cmp
insb
mov
xchg
push
jo
lcall
jp
mov
movsl
enter
out
xchg
push
add
out
outsb
loope
jno
xor
or
sbb
iret
add
xor
mov
insl
ret
jge
cmpsl
pop
pop
ljmp
fnstcw
mov
mov
jne
xor
push
stc
sarb
jecxz
lret
xor
mov
negb
fcompl
push
pop
or
pop
cli
call
mov
xchg
lahf
cs
lcall
mov
dec
out
add
arpl
mov
xchg
and
into
and
dec
or
or
or
ret
shrb
xorb
loope
insb
fisttpll
loop
or
mov
shll
adc
popa
in
and
loope
push
add
stc
adc
call
push
push
je
jmp
cmp
cld
xor
mov
testl
inc
ret
mov
sbb
mov
bound
dec
push
je
lods
popa
pop
shlb
dec
mov
mov
dec
ficompl
mov
out
cmc
jle
cwtl
sub
pop
sti
jb
mov
mov
ret
cmp
pop
mov
xchg
jge
mov
adc
dec
fcomps
mov
clc
and
xchg
jmp
and
movsl
lock
call
jmp
sub
push
or
js
daa
outsl
sti
sub
jmp
sbb
mov
xchg
lret
mov
loop
mov
jle
into
cmc
mov
enter
pop
mov
xchg
mov
fiadds
and
pop
sbb
adc
add
cli
cmc
enter
es
inc
jmp
int3
sub
jbe
cltd
stos
push
sbb
test
cmpsb
into
jo
inc
jnp
sbb
or
out
cmp
insl
sub
imul
clc
lahf
or
sbb
jmp
mov
push
pusha
test
lock
mov
pop
out
and
in
std
add
jge
mov
into
pushf
into
sub
or
fisubs
lds
jno
add
enter
popa
lods
bound
mov
push
mov
pusha
and
push
stos
lock
aad
fidivs
sbb
insl
add
xchg
push
inc
dec
ja
aas
aad
mov
mov
lods
stos
mov
jo
aaa
inc
xchg
jecxz
push
mov
inc
sub
pop
sub
sub
and
call
xor
inc
lahf
out
jae
jmp
mov
fisubs
sub
inc
mov
inc
punpckldq
outsb
push
lea
fisttpl
pop
lock
push
xchg
stos
push
mov
pop
ljmp
cli
push
mov
out
sbb
inc
int3
fcomi
lock
in
mov
jle
mov
pusha
lret
push
mov
es
push
xlat
push
add
cltd
adc
xchg
insb
in
iret
or
mov
in
stos
lret
cmp
scas
int
iret
or
es
loop
aaa
nop
pop
mov
out
push
dec
add
ficompl
pop
fs
mov
js,pn
lea
push
add
ljmp
push
sub
mov
pop
adc
int3
movsl
ja
push
scas
or
adc
mov
xchg
and
loop
ret
fs
adc
dec
aam
cmpsb
sti
xchg
lcall
sti
mov
aaa
push
mov
lock
loop
scas
insl
and
in
lock
incb
inc
mov
cmp
nop
or
and
stos
or
push
mov
lods
push
push
jle
push
push
stos
push
add
daa
sbbl
iret
fstps
stos
mov
leave
gs
fnstcw
outsb
int3
sbb
xor
cli
aaa
ret
push
mov
repnz
insb
inc
cmp
cwtl
enter
fs
jmp
xlat
movsl
mov
cld
mov
xchg
test
pusha
or
lock
gs
js
xor
jle
xchg
xlat
out
nop
stos
push
pop
inc
shll
push
daa
push
cmp
pusha
pop
in
jne
iretw
lds
std
fldenv
dec
int
pop
popf
push
mov
push
jnp
xchg
xchg
push
push
inc
jbe
cmpsl
and
add
clc
lcall
pop
ss
repnz
fwait
dec
push
add
add
mov
fisubs
lret
adc
roll
xor
aad
call
fisubrs
mov
mov
cmc
in
xor
js
subl
push
dec
push
pop
repz
sbb
xor
idivl
dec
inc
push
shl
push
test
popf
int3
xor
cmp
insl
mov
cmpsl
xchg
cwtl
mov
xchg
in
dec
jns
push
and
cmpsb
jnp
xchg
mov
les
and
pop
ljmp
sub
and
jg
imul
push
sub
add
push
call
push
jp
add
call
ljmp
addb
fs
pusha
jno
fld
cmp
xchg
mov
imul
stos
cmpsb
sahf
clc
sub
je
dec
pop
dec
mov
cmc
dec
dec
push
sub
fstp
xchg
mov
movsb
lock
inc
xor
iret
rolb
mov
mov
jno
cmp
lock
in
adc
cltd
test
jge
pusha
mov
mov
loope
lock
pusha
jnp
jecxz
test
nop
in
xchg
inc
mov
imul
and
lea
dec
xchg
shlb
inc
inc
in
cmp
sub
dec
inc
pop
mov
mov
loop
push
sub
jp
xor
pop
shrl
adc
pop
add
sub
fdivs
push
mov
pop
jg
decl
sub
insl
scas
popa
jge
cmpsb
test
push
lea
test
jmp
jle
and
lret
pop
jg
mov
push
int3
lock
fwait
lret
mov
sbb
and
sub
dec
jae
sbb
js
vpshld
mov
xchg
aaa
hlt
test
mov
arpl
fcmovbe
scas
mov
and
lahf
sub
pop
pop
dec
or
and
dec
rorl
lds
enter
add
pop
mov
rcrl
enter
sbb
ds
sub
pop
push
mov
inc
call
movsl
mov
pushl
mov
psrlq
add
scas
or
shlb
and
enter
add
clc
std
push
fcomps
sub
push
mov
rorb
jmp
mov
dec
scas
std
inc
imull
popf
insl
sbb
jae
xchg
jb
sub
cmpsb
mov
pop
mov
pop
sub
lock
cmp
xor
mov
mov
nop
and
repnz
outsl
or
out
imul
or
clc
outsb
mov
mov
jo
sub
lods
xor
xchg
adc
pop
ret
add
inc
ret
jge
push
or
push
in
repnz
scas
inc
dec
mov
daa
mov
xor
aad
sub
cmpl
add
addl
push
lds
jno
sub
jno
ffree
and
aam
das
hlt
in
cmpsl
push
fisttpl
enter
jmp
call
xchg
jo
int3
cld
loopne
imul
ljmp
std
cwtl
jae
lds
mov
xchg
and
out
jg
imul
push
dec
pop
mov
cmp
int
ret
mov
in
jns
inc
mov
mov
in
cs
ret
repnz
or
push
sbb
out
jne
cmpsl
fstl
lcall
pop
leave
test
pushf
or
ja
xor
lret
xchg
out
sub
adc
lock
rcrl
loop
xchg
sbb
push
loope
stos
mov
out
shr
pop
and
push
push
pop
dec
xor
fisubs
cmp
outsl
push
sti
dec
stc
ret
mov
stos
and
ljmp
pop
lahf
add
and
repz
outsb
mov
es
and
addl
call
mov
mov
cmp
test
jle
out
mov
in
fs
and
das
cmp
test
repnz
push
and
xchg
mov
jl
xor
adc
adc
jge
jl
int
xchg
cmp
add
jmp
lret
ja
out
js
jns
aad
fimull
addr16
ss
mov
call
mov
inc
pop
and
xor
jecxz
into
mov
test
pop
mov
xlat
movsl
icebp
aam
cli
insb
jnp
ret
int
pop
push
ret
lds
ss
adc
ss
adc
sub
les
pushf
mov
push
insb
dec
and
divl
mov
in
fsubl
test
mov
adc
faddl
pop
int
push
arpl
mov
jnp
mov
mov
dec
movsb
inc
adc
sbb
jl
repnz
faddp
pop
pop
mov
xchg
outsl
cs
ljmp
mov
sbb
adc
mov
lea
movsl
sub
cltd
fwait
xchg
lcall
lret
lret
arpl
data16
movsl
jl
lea
lock
adc
push
jo
jl
roll
jno
or
push
push
addr16
sbbb
cmp
arpl
cli
and
xchg
lea
jb
inc
pop
add
imul
push
dec
lcall
dec
ja
inc
dec
cltd
mov
xor
andl
adc
call
and
pop
sbb
pop
push
dec
sub
rcr
stos
cld
adc
dec
fcoml
cmp
loop
add
lret
or
pop
popl
jmp
push
cld
xchg
mov
sbb
jae
sahf
jns
daa
push
fisttps
scas
sbb
out
mov
popa
sbb
test
popa
dec
mov
pop
jo
dec
jns
pushf
or
and
xor
mov
scas
fidivs
cmp
add
mov
pusha
out
fidivl
mov
pop
inc
imul
jno
pop
or
pop
arpl
lret
into
fdivp
lock
aad
sub
gs
dec
call
dec
sbb
fidivl
hlt
ss
es
and
cld
mov
aas
fisubl
adc
or
out
or
lcall
adc
inc
and
inc
or
outsb
into
sbb
mov
mov
lock
mov
cld
cmc
stos
cmp
popf
xchg
jg
mov
movsb
or
daa
xor
pop
les
xor
or
and
and
movsb
push
shlb
lods
pop
sub
lret
lret
popa
adc
aam
jge
mov
repz
repz
test
clc
jp
nop
loop
roll
mov
ja
gs
test
fdivrs
fcoms
add
mov
jmp
mov
mov
aas
mov
or
cmp
stos
cmp
lcall
jns
xchg
xchg
lahf
gs
in
cmp
push
callw
jne
fdivl
adc
jecxz
loop
in
xchg
daa
popf
lea
dec
lds
fnstsw
ficompl
and
aad
add
cmpsl
int3
pop
or
add
test
sbb
insl
dec
ss
xlat
push
xor
mov
repnz
push
xor
loope
and
xchg
push
adc
add
adc
lcall
pop
jmp
xchg
sbb
cwtl
jge
outsl
cmp
sbb
mov
in
aas
test
cmpsl
push
pop
or
mov
repz
fcmovb
mov
jmp
dec
aas
push
ret
push
mov
lret
mov
divl
shrl
add
pop
pop
add
sahf
adc
iret
mov
jl
pop
in
sbb
clc
sub
push
xchg
sbb
inc
jnp
es
dec
or
inc
and
cltd
push
sti
and
dec
dec
out
lret
insl
lret
testb
cmpsl
sub
out
cmpsl
push
xchg
ret
sahf
mov
xchg
arpl
xor
cmp
sbb
xlat
cmp
jae
jbe
in
xor
ret
add
fwait
xlat
push
mov
adc
pop
aad
out
mov
leave
lods
aas
and
cmp
pop
mov
sub
dec
out
pop
out
in
push
xor
jg
lahf
sub
in
adc
cmp
stos
into
push
and
aas
pop
mov
mov
dec
add
pop
xchg
mov
addr16
sub
mov
sub
cs
and
into
mov
or
movsb
jmp
imul
out
pop
mov
mov
enter
sub
inc
or
lcall
popf
pop
std
mov
and
fs
sub
addr16
les
stos
pop
dec
sbb
out
mov
mov
out
out
mov
cmpsl
pop
leave
cmp
xchg
jg
daa
int3
sbb
or
loope
add
xor
cmp
das
mov
cmpsl
xchg
repnz
push
push
lds
repnz
or
jnp
mov
mov
or
ret
xchg
std
cmp
xchg
mov
mov
xor
add
jo
sbb
mov
repnz
or
mov
movsb
push
jp
push
js
clc
lods
cld
jp
and
mov
push
cmpsl
fbstp
pushf
movsb
lods
inc
push
sahf
inc
lea
in
mov
js
inc
shl
fwait
xor
or
adc
cli
pop
inc
mov
incl
push
notb
out
test
sarb
xchg
sbb
and
movsb
pop
inc
or
mov
xchg
mov
test
jnp
test
inc
arpl
lahf
xor
push
push
pusha
lods
pop
and
dec
lcall
dec
shlb
add
mov
xor
fisttpll
nop
enter
or
xchg
jmp
add
xchg
mov
cmp
cmc
fcomi
sub
push
int
sub
dec
push
and
and
pop
xchg
jnp
and
repz
cmpsl
sahf
test
dec
or
xchg
inc
sub
jno
mov
shll
pop
xchg
cmpsl
addr16
stos
pop
sbb
sub
divb
fildl
xchg
pop
or
ljmp
adc
mov
imul
enter
pop
loopne
push
shrb
sbb
int
fucomi
cltd
add
push
pop
sbbb
nop
iret
pop
jns
loope
pop
mov
arpl
mov
push
mov
rcrb
mov
and
push
inc
jl
into
jnp
loope
and
loop
lahf
mov
test
mov
xchg
add
es
in
daa
cmp
mov
xchg
jmp
incl
insl
sbb
pop
cwtl
inc
aaa
rol
pop
xchg
mov
pushf
xchg
mov
inc
adc
fdiv
dec
aas
jle
movsl
daa
call
xor
ljmp
xchg
jbe
pop
andl
push
lea
enter
shrl
notb
jecxz
xchg
insb
dec
stc
loop
mov
sbb
arpl
jl
popa
popf
mov
outsl
loopne
push
loop
in
mov
xor
mov
stos
popf
and
stos
rorb
jmp
repz
inc
or
cmp
mov
jg
incl
loop
dec
xlat
clc
rclb
rcrl
popf
push
in
and
into
mov
imull
dec
imul
xchg
xchg
stos
xor
jb
outsb
push
popf
lea
cltd
lea
rolb
lret
cmpsb
mov
mov
insb
ret
jmp
xchg
push
pop
xchg
fstps
scas
mov
dec
outsl
data16
rorl
js
call
sub
and
mov
flds
jnp
loopne
xor
inc
arpl
pop
adc
lds
add
adc
mov
dec
push
mov
ret
xchg
sbb
or
test
mov
lods
enter
cmp
ds
andl
out
ret
xor
jbe
xchg
insb
inc
push
dec
mov
js
sub
in
lea
mov
inc
lret
lock
aam
pop
push
subb
andl
nop
add
lods
pusha
sub
cld
and
add
push
jmp
xchg
inc
fisubl
inc
cmp
jae
lods
test
leave
lahf
push
das
jno
mov
cmp
xor
pop
jbe
mov
andb
mov
dec
xchg
out
mov
xchg
xchg
dec
mov
and
and
sbb
cwtl
add
cltd
and
sub
lds
pop
sbb
hlt
mov
hlt
jne
and
jns
loope
mov
jp
push
divl
shl
push
jecxz
mov
clc
orb
dec
inc
fcmovb
mov
aad
cld
push
in
es
mov
xor
outsl
push
pop
iret
fisubs
or
cmp
lahf
stos
xchg
sub
andb
jb
cs
setnp
cltd
sar
bound
test
cmp
mov
lret
jae
lock
cmp
sarb
sbbl
dec
sbb
jecxz
aad
xor
xor
mov
pop
xchg
add
fs
js
lds
xchg
popa
and
rcrl
rclb
sub
sbb
in
clc
mov
cmp
nop
mov
test
mov
sti
xchg
adc
bound
ds
xor
movsb
jb
cmp
in
adc
imul
cmp
call
scas
push
jecxz
test
test
mov
mov
cmp
mov
ljmp
cltd
xorb
rcrl
bound
fisubl
mov
mov
pop
push
mov
xor
dec
adc
loope
push
and
sbb
mov
xor
aam
jmp
inc
movsb
pusha
pop
pushf
add
dec
outsl
loopne
test
mov
cli
inc
stc
sbb
cmp
sbb
test
inc
stos
jl
jb
xchg
insb
and
push
xchg
stos
sbb
xlat
xchg
fstps
sub
or
movsl
jp
and
adc
icebp
adc
push
add
adc
adc
sbbl
inc
adc
or
push
sbb
mov
push
jnp
adc
push
jne
or
mov
sbb
adc
stos
stc
fisttpl
gs
cmp
push
imulb
inc
sub
sbb
in
in
ljmp
jl
jge
add
push
add
mov
aas
cli
add
in
sbb
fwait
enter
es
cmp
push
lock
enter
fldenv
pop
sub
and
jle
xchg
loop
lock
fisttps
out
push
inc
jp
shl
das
xchg
adc
inc
test
push
push
jae
daa
lcall
fs
mov
add
insl
and
and
test
mov
push
mov
inc
adc
enter
mov
faddl
repz
fildl
pushf
jnp
pushf
lds
xchg
mov
stos
gs
adc
mov
ds
mov
jmp
fnstsw
es
or
mov
fxch
mov
mov
int
cli
pusha
aam
xchg
xchg
lock
mov
in
mov
cwtl
fmuls
inc
hlt
dec
push
and
adc
adc
loopne
dec
pushf
jbe
leave
push
aaa
aad
jp
cs
and
andb
or
popf
sbb
insl
mov
jnp
xchg
mov
xchg
shrb
mov
int
sub
pop
icebp
or
xor
cmpsl
fdivrs
mull
pop
int
cmp
lock
mov
std
dec
jo
jp
shlb
lahf
inc
mov
mov
outsl
scas
mov
arpl
or
subl
test
jecxz
and
mov
data16
vmaxss
sub
movsl
loope
flds
cs
push
inc
jns
loopne
lahf
insb
sub
movsl
sub
test
stos
jns
cltd
push
arpl
rcll
pop
div
test
imul
loop
xor
jo
ds
into
test
xchg
inc
mov
rolb
and
movsb
in
sar
mov
mov
jb
sbb
mov
loope
inc
jge
jnp
mov
loope
mov
mov
lock
xor
sbb
mov
lcall
fwait
std
cmp
jmp
into
jbe
adc
daa
xor
test
imul
cwtl
pop
pop
loopne
jg
cmp
mov
jmp
xor
into
mov
adc
dec
pop
popf
nop
cmpb
sti
sbb
mov
jbe
cmp
push
out
mov
cmp
pop
lods
xchg
jne
popa
pop
dec
popf
lds
xchg
sub
rolb
dec
inc
pop
je
fdivrp
adc
les
mov
loopne
mov
popa
sbb
push
pop
out
data16
arpl
cmp
mov
popa
lock
cmp
testl
lds
sti
lods
repnz
dec
movsl
fstpt
leave
mov
cmp
or
xor
add
cli
jno
mov
test
aam
jp
in
je
ud2
mov
dec
dec
xchg
addr16
xor
jne
shlb
adc
mov
xchg
xchg
lds
mov
fucom
or
sub
cltd
in
lea
stos
sub
pop
hlt
and
pop
mov
cmp
mov
pop
aas
mov
lcall
inc
cltd
aas
pop
pop
jge
out
jl
daa
lret
sub
add
jp
pop
push
pop
push
dec
mov
push
cld
jb
push
scas
lea
and
hlt
xchg
fnstcw
mov
dec
popf
popa
ret
adc
mov
imul
pop
aaa
bound
push
inc
pop
jge
mov
dec
es
cmp
inc
pusha
test
and
bound
push
cmc
push
xchg
rcll
pop
bound
fistpl
rorb
ja
rclb
fimull
movsl
cs
pushf
ret
xlat
sbb
idivl
adc
inc
loope
scas
ljmp
xchg
js
iret
in
scas
pop
addr16
js
icebp
insl
mov
les
stc
insl
sar
mov
arpl
loop
mov
jge
jae
ja
rcrb
mov
inc
jle
xchg
lock
fsubrl
lods
test
insl
inc
cmp
pop
mov
jo
xchg
movsb
xchg
subl
mov
popf
and
mov
sbb
pop
imul
mov
stos
xor
hlt
jl
pop
dec
sub
scas
cltd
shrl
xchg
fcoml
ss
cld
fwait
test
inc
push
lfence
pop
rclb
pop
sub
lea
jo
and
sub
inc
mov
mov
cmpsl
data16
pop
icebp
xchg
leave
ds
jl
pop
sub
mov
jge
mov
mov
pop
push
inc
pop
sbb
test
push
xchg
lock
aas
lea
hlt
insb
lock
aas
loop
hlt
repnz
xchg
push
or
mov
xchg
inc
and
ljmp
mov
mov
repz
xchg
xchg
pop
jge
imul
in
mov
cs
mov
mov
lods
jne
xchg
push
xor
in
push
lods
call
jp
mov
cwtl
mov
add
cmc
xchg
fcmovnb
sbb
mov
or
mov
add
mov
sbb
add
mov
or
repz
insb
mov
mov
push
js
cmpb
stc
lods
testl
sub
mov
adc
insb
movsb
pusha
fidivrs
sub
lods
adc
cmpsb
stc
jnp
sub
pop
and
icebp
cs
push
fs
push
inc
lea
xor
cwtl
pusha
lret
incl
jge
or
fists
mov
dec
sbb
dec
cmovg
in
ss
jp
jge
xor
and
mov
movsl
mov
xor
xor
call
or
lock
mov
xor
mov
mov
add
mov
pop
icebp
hlt
mov
mov
stc
push
fsubr
fcoms
sti
dec
and
add
push
sbb
mov
test
aam
pop
shrl
xor
popf
daa
mov
inc
mov
rcl
or
cmpsb
sub
adc
mov
dec
out
adc
sbb
and
dec
cs
ss
push
mov
bound
popf
ja
pop
loop
mov
xchg
cld
or
dec
sbb
aaa
int3
orb
fstpl
hlt
scas
cltd
hlt
andl
fadds
jg
adc
dec
enter
mov
mov
fs
inc
push
or
push
hlt
out
rolb
dec
int3
idivl
clc
test
idivb
movsl
sub
fidivs
fs
je
lds
and
xor
fdivrs
jmp
push
push
or
pop
adc
mov
rcrb
lds
push
mov
data16
xchg
pusha
inc
fwait
pop
enter
add
and
xchg
adc
dec
jbe
xchg
adc
cmp
cmp
mov
popa
lcall
mov
xchg
or
loop
and
je
cmp
ficomps
cwtl
add
push
lea
sbb
fsts
sub
and
aad
mov
dec
sub
push
mov
mov
jge
pop
imul
sub
outsb
test
loopne
push
mov
jg
adc
mov
aad
jge
insb
imul
push
jge
lods
add
push
mov
push
lods
fmull
insl
sbb
inc
pop
or
push
cmp
mov
mov
add
pop
pop
pop
and
cmpsb
jns
out
sub
cltd
outsl
into
dec
neg
mov
mov
xor
movsb
rcrb
cltd
cld
movsl
cmp
leave
scas
mov
jo
fnstsw
faddl
rcl
scas
pusha
pop
jo
xor
test
loopne
sbb
xor
arpl
repnz
and
xchg
mov
xor
mov
sarl
mov
movsb
lcall
jg
mov
negl
sahf
xor
fimuls
push
push
add
sahf
ret
outsl
in
ret
int3
pushf
ljmp
stos
push
push
cmp
shlb
or
dec
enter
aaa
cmp
call
fcompl
inc
loop
and
lea
push
rcrl
add
push
lea
mov
mov
or
je
lods
mov
or
inc
jmp
xor
cmp
pop
push
push
adc
pop
nop
imul
aam
adc
gs
cmc
push
ds
sub
mov
xchg
jb
push
and
mov
test
das
or
mov
pop
mov
mov
call
shrb
fists
mov
push
sti
repz
and
in
data16
negb
js
mov
pop
loopne
pop
adc
add
sahf
stos
negb
push
mov
sarl
mov
test
mov
inc
das
push
cmp
push
cmp
xor
push
adc
mov
or
jle
dec
push
jg
inc
xchg
mov
push
repnz
hlt
push
push
scas
push
arpl
divl
adc
lcall
notl
aad
inc
mov
xor
push
es
pop
lods
add
out
enter
sub
addr16
fcom
jns
mov
hlt
jmp
int
ja
push
dec
fimuls
pop
add
shl
daa
nop
bound
outsl
mov
cmp
nop
xor
mov
outsl
cmp
rcll
pop
out
jo
xchg
loope
sub
imul
imul
lock
test
mov
mov
aam
inc
sub
adc
dec
ds
test
sbb
push
in
jnp
pop
jo
sbb
pushf
cmp
jl
push
sbb
adc
movsb
mov
lods
pop
aam
sub
jnp
je
dec
or
addr16
mov
gs
and
inc
hlt
add
in
or
or
pushf
add
mov
add
in
into
inc
sub
inc
pushf
cmp
std
sub
shl
jge
push
aam
add
xchg
mov
mov
jnp
adc
xor
pop
jg
divps
repz
or
sub
ss
in
add
sub
fsubrl
jo
dec
jns
and
shrl
push
sbb
and
inc
cmp
shll
sbb
and
data16
ret
dec
adc
cmp
je
sarl
pop
pop
sub
mov
push
jg
movsb
pusha
sub
add
cs
aaa
adc
push
add
pop
outsl
fidivl
movsl
pop
xchg
cwtl
lcall
xor
enter
cli
lds
movsb
dec
bound
dec
outsb
adc
arpl
popa
xlat
nop
mov
adc
xchg
popa
or
mov
repnz
jb
loop
mov
mov
jmp
mov
jb
ja
adc
dec
aam
or
mov
daa
mov
push
in
xchg
adc
and
jbe
lahf
insb
dec
pop
dec
jae
loope
and
lds
lret
jbe
pusha
cmp
push
int
mov
popa
jmp
add
js
jae
lret
cmp
dec
ljmp
jp
push
stos
into
dec
jle
cld
pop
popw
idivl
xor
pop
and
iret
xor
movsb
out
push
jmp
dec
or
sub
rcrb
fcmovu
setl
and
mov
mov
mov
jmp
sub
insb
into
mov
in
iret
lret
cli
mov
imul
mov
aaa
push
mov
orl
xor
adc
leave
add
stos
xchg
das
pop
mov
movl
das
lock
pop
jae
adc
jg
shll
mov
cwtl
dec
lahf
pusha
mov
aad
jl
pop
and
mov
xchg
loop
jb
xchg
rcrb
mov
pop
cmp
pop
add
sbb
inc
or
lret
xor
xor
sbb
mov
or
nop
insb
pop
cs
xchg
loop
mov
adc
pop
fsin
xchg
adc
arpl
jnp
scas
jne
test
push
dec
lcall
shlb
pop
out
push
out
arpl
sbb
push
fistpll
fldl
mov
daa
jmp
ret
adc
insb
push
lea
les
std
push
arpl
fwait
pop
xchg
je
push
mov
jp
push
mov
into
das
jg
nop
out
jbe
mov
jnp
aam
jbe
add
imull
shll
mov
push
imul
mov
mov
je
adc
rcrl
nop
inc
out
push
xacquire
shrl
inc
sub
and
cld
cmp
cltd
leave
xchg
push
ja
mov
push
mov
push
rcrl
cmp
lds
lock
cmp
fistpl
sub
mov
push
pusha
in
xchg
mov
cli
lea
sbb
and
sbb
fcoml
packuswb
cmc
xchg
push
push
call
mov
push
push
sbb
dec
xchg
pop
in
lock
into
ja
lcall
loope
movsb
movsl
xor
int3
lea
mov
repnz
jbe
sbbb
pop
xlat
cwtl
pop
lods
cmpb
popa
adc
stos
rcll
lea
xchg
jge
inc
pop
add
or
mov
and
jns
dec
ss
insb
nop
push
popf
adc
pop
inc
jnp
test
loopne
rcl
mov
mov
adc
mov
adc
aam
jo
sti
mov
std
stc
xchg
rcrl
pinsrw
ret
dec
testb
iret
mov
insl
xchg
and
aam
lods
push
test
aaa
and
pop
mov
stos
cmp
sti
lcall
lods
mov
int3
fnstcw
mov
xchg
js
push
es
popf
jae
leave
jo
mov
je
lods
xchg
xchg
sbb
out
jae
push
adcb
ds
xchg
mov
mov
mov
movsl
jne
or
hlt
cmp
std
jle
aad
gs
cmp
xchg
cmp
sub
cmp
out
fdivrs
xor
fnstenv
cmp
adc
testb
fbstp
aam
jnp
add
add
mov
insl
outsb
inc
push
push
push
inc
pop
stos
jecxz
repz
jb
push
pop
pop
jg
cmp
imul
push
jmp
inc
xchg
icebp
fcmove
ficompl
lahf
loope
or
pushf
pop
lods
dec
push
jne
rcrl
pusha
dec
add
sbb
rclb
sbb
lcall
pop
jge
mov
or
push
ds
sbb
mov
lods
adc
pop
test
lds
mov
imul
jno
lds
mov
sub
jo
scas
sub
push
dec
mov
insl
and
psrad
js
cmpsl
outsl
outsb
pop
ret
mov
mov
ja
and
ds
rorb
mov
cmc
add
mov
js
inc
jbe
mov
lods
sbb
scas
les
hlt
adcb
add
jbe
adc
pop
sbb
enter
shlb
out
mov
sbb
mov
rcrb
and
pop
arpl
negb
cmp
mov
loopne
std
leave
mov
adc
inc
fcomps
shlb
dec
xchg
or
mov
xchg
mov
jl
icebp
sahf
cmp
mov
rcl
and
mov
mov
int3
inc
pop
lock
or
adc
movsl
sbb
mov
xor
pop
inc
pop
mov
mov
pop
rolw
mov
sub
mov
xchg
dec
fdiv
mov
lods
movsb
mov
push
xor
pusha
ss
arpl
icebp
jmp
xchg
into
xchg
add
fisttpl
insl
mov
negb
cltd
dec
stos
decl
addr16
ss
jne
std
ljmp
sub
pop
orl
jmp
mov
or
jbe
mov
and
pusha
dec
push
jecxz
jp
pop
hlt
and
or
add
sti
cmc
and
fs
add
push
jecxz
cmp
ret
push
add
cmpsl
jg
arpl
or
lods
inc
mov
xor
xchg
jmp
pushf
pop
add
or
mov
leave
stos
dec
stos
lret
cmpb
lcall
push
std
ret
mov
dec
jo
hlt
js
jns
dec
jg
push
rorb
and
imul
in
sti
int3
sbb
inc
mov
jmp
addr16
sub
leave
push
setb
shlb
xchg
or
jp
jecxz
dec
sbb
out
adc
xchg
and
cs
mov
add
insb
jnp
btr
sub
push
and
dec
fimull
pop
jp
insb
fsubrs
fidivrl
sarb
ret
sbb
mov
les
test
fisubl
and
fnstcw
xchg
int
mov
outsb
neg
in
ljmp
adc
scas
rclb
xchg
or
lds
or
sub
loop
pop
pop
dec
adc
jnp
adc
int3
add
sub
clc
jae
and
data16
stos
lret
cwtl
jle
into
rsqrtps
cmc
inc
mov
ja
dec
loop
sub
push
xor
jno
dec
jnp
add
or
sbb
subb
stc
insb
inc
pop
sahf
cmp
mov
pusha
mov
lock
cmp
dec
xchg
test
arpl
and
pop
mov
jge
xchg
aam
pushl
mov
addr16
jp
incl
testl
int
xchg
lods
outsl
sub
sbb
aad
pushf
imul
adc
inc
jg
jp
sbb
test
add
jle
cmp
push
sti
mov
wbinvd
insb
and
repnz
pop
mov
loopne
gs
mov
and
push
cmp
sbb
sbb
out
sub
sbb
sbb
int
xor
fisubrl
pop
sbb
ficoml
xchg
cltd
loope
stos
jge
jecxz
cmp
dec
sbb
test
pop
sub
xchg
xchg
xchg
cmp
lahf
jno
mov
pop
les
mov
dec
xor
fists
bound
pushf
mov
testb
dec
xchg
sub
jl
vpmovw2m
int3
cwtl
xchg
or
ja
jno
stc
scas
inc
js
mov
sbb
or
insl
push
mov
aaa
fs
pop
sbb
sahf
xor
and
adc
xor
sub
mov
xor
stc
popa
shrb
add
out
xchg
jle
or
pop
pop
dec
mov
sub
lcall
fsubrl
pusha
push
je
dec
idiv
test
movsb
dec
cmp
addb
push
fimuls
fs
mov
int
daa
and
push
call
jg
rorb
inc
jae
lods
int
ret
add
test
ror
add
xchg
xor
jmp
lds
jo
lds
dec
mov
or
jo
das
adc
push
jno
leave
or
lret
mov
repz
xor
xor
daa
dec
div
push
call
cmp
int
jg
push
mov
int3
inc
out
mov
sub
inc
inc
pop
jge
dec
xor
je
fs
xor
push
and
pop
add
or
mov
movsb
cmp
cltd
je
mov
push
scas
ret
pop
pop
daa
inc
cmp
lock
dec
jmp
jp
fisubl
and
pop
rcrl
test
mov
lret
adc
add
xor
js
and
cmp
inc
imul
inc
aam
xor
inc
push
lahf
push
add
xchg
jge
nop
aam
int3
je
mov
adc
divb
sub
aaa
pop
lods
pop
cmpsl
inc
add
jecxz
outsb
aaa
xor
jae
and
fwait
pop
xor
les
sub
mov
add
imulb
stos
aaa
pminsw
ljmp
popa
iret
pop
int3
js
fisubl
and
lock
cli
xor
lea
sub
jg
mov
cmp
nop
pop
test
pop
lret
je
mov
mov
sbb
add
fldcw
inc
push
inc
jl
aaa
push
mov
inc
dec
push
rorb
inc
mov
pop
inc
xchg
movsb
jp
jecxz
call
xlat
in
insb
and
cld
jmp
movsb
stc
xor
jnp
jno
jecxz
hlt
mov
outsb
pop
lds
adc
mov
pusha
insl
aaa
push
jle
icebp
vsubsd
jns
cmp
mov
jae
cmp
iret
xorl
ljmp
in
shr
bound
leave
daa
fcompl
pop
scas
faddp
ficoms
xchg
jge
movsl
daa
xchg
mov
push
xor
in
mov
std
mov
pop
mov
in
mov
div
push
movsb
rorl
add
ja
pop
xlat
add
ljmp
cltd
push
lcall
adc
push
movsb
ljmp
pop
cwtl
pop
or
sahf
cmp
in
xor
lods
or
mov
movsl
xchg
cmp
das
ret
setge
dec
fistl
xchg
das
xchg
fwait
inc
xor
dec
loope
push
and
mov
fimuls
adc
outsb
mov
movsl
xor
and
fstps
negb
and
sub
xor
hlt
mov
sub
lret
push
js
inc
jg
sarl
in
sarb
pushf
gs
mov
sar
aaa
fcmove
sub
mov
sub
call
cmp
mov
xchg
pop
fisubrs
sbb
xchg
push
daa
mov
adc
cwtl
in
sbb
sbb
scas
xor
adc
js
test
into
xchg
clc
fstpl
hlt
jnp
push
clc
test
pushf
lret
push
mov
mov
lock
inc
rep
scas
add
add
mov
mov
jmp
xor
lcall
dec
imul
leave
and
jp
dec
mov
sub
fmuls
sahf
adc
mov
jg
stc
xorl
push
jmp
sub
call
lret
ljmp
movsl
jae
hlt
lock
mov
pusha
jp
in
and
or
stc
cmovo
xchg
imul
repz
mov
rorl
rcr
fcoms
lods
test
subl
test
mov
xor
movsl
in
rorl
mov
loopne
mov
sahf
xor
fs
inc
add
fs
outsl
mov
inc
cmc
fistpl
mov
out
lock
xchg
jmp
clc
cmp
cmpsl
pop
andb
insl
cmp
bound
call
jo
lds
push
iret
sti
sahf
pop
jns
jns
lods
cltd
mov
mov
jae
inc
cmp
test
cli
add
mov
sbb
sti
inc
add
loop
fldt
lcall
jb
jne
fs
xchg
gs
mov
fincstp
inc
pop
xchg
or
subb
cmp
xor
pop
mov
jae
xor
mov
les
add
clc
mov
mov
add
out
and
sub
jne
test
xchg
lret
out
sub
stos
jp
sbb
jae
ljmp
jmp
std
and
pop
mov
pop
inc
mov
dec
stc
adc
dec
xchg
out
cltd
js
and
in
rolb
imul
std
dec
jp
loope
lret
and
insb
mov
loope
pop
loope
cmp
jle
mov
push
add
adc
pushf
adcb
ret
dec
inc
sub
xchg
xor
arpl
insl
ljmp
mov
add
add
xchg
xor
mov
or
sub
cmp
std
das
shlb
dec
push
push
add
xor
xchg
xchg
mov
movsl
call
cmpsb
push
inc
lods
add
push
mov
repnz
outsb
jmp
inc
int3
or
xor
outsb
loop
cwtl
adc
inc
and
stos
inc
iret
jl
les
decl
jmp
js
scas
shl
pop
dec
lcall
push
sbb
clc
ljmp
std
call
mov
mov
div
pusha
dec
cld
leave
cmp
mov
pop
sbb
xchg
push
push
inc
roll
inc
enter
enter
ror
les
pop
int
add
inc
jo
xchg
push
cmp
stc
adc
ds
sub
lret
add
and
pop
adc
jne
loop
xor
outsl
add
inc
add
and
dec
aam
mov
xor
inc
mov
fcomps
cmp
cmp
out
sbb
dec
push
bound
sub
pop
and
sti
test
jge
adc
jns
lcall
mov
xchg
pop
dec
icebp
adc
sub
push
mov
or
outsl
dec
movsb
sti
mov
shl
jbe
add
out
inc
add
sub
repnz
fisubrl
pop
mov
pop
lods
ret
shr
dec
push
mov
xor
adc
insl
pop
sub
pop
lods
imul
jl
repz
in
xchg
mov
leave
mov
int3
pop
lock
mov
in
sub
sbb
and
cmc
and
or
xchg
loope
stos
xchg
adc
imul
or
cs
out
ret
call
xchg
std
leave
xlat
hlt
xchg
mov
jne
dec
mov
adc
pop
sbb
fyl2x
jbe
shlb
cld
push
mov
jbe
add
ljmp
vsqrtss
adc
les
add
imul
addr16
mov
mov
loopne
and
into
jnp
push
ficoml
push
mov
push
push
cmp
dec
pop
add
add
mov
dec
addl
out
sbb
mov
push
sbb
loope
jp
push
leave
sbb
test
gs
jns
push
rcrl
mov
imul
cli
and
scas
cmpsl
jns
or
cmp
mov
lock
ret
adc
mov
or
jecxz
inc
sti
jmp
iretw
jge
and
negb
pop
jb
int3
sahf
cs
pop
das
jecxz
and
xchg
jne
inc
arpl
dec
lret
xchg
stc
out
inc
mov
xchg
insl
iret
lret
xchg
negl
jmp
or
inc
xor
jns
test
lcall
sbb
orb
ret
jnp
lret
pop
hlt
cmpsl
inc
cmp
cmp
cltd
cmp
test
icebp
pop
test
mov
sub
inc
jmp
and
and
nop
je
mov
lret
jl
xorb
cmp
loop
and
inc
imul
adc
push
and
leave
outsb
pop
pop
inc
mov
push
sbb
jo
loope
into
ljmp
roll
pop
insb
xchg
mov
xchg
movsb
imul
cs
fists
insl
fwait
iret
xor
mov
movsl
rorl
jge
cmp
shlb
jo
push
xor
cli
push
out
xlat
cs
sub
jecxz
int3
adc
arpl
jecxz
mov
pop
cld
fst
mov
lods
mov
jns
mov
mov
mov
ljmp
mov
add
fidivl
xchg
and
pop
movsl
pop
cwtl
daa
pop
hlt
and
jnp
jl
cmp
popf
xor
addb
pop
fnstenvs
or
in
ljmp
jbe
movsb
rol
xchg
dec
push
push
xor
mov
in
add
mov
std
loope
insl
push
pusha
xchg
shr
dec
dec
xor
add
scas
rcrb
mov
ror
dec
inc
rcl
jne
lds
rcll
push
pop
fmuls
xchg
and
mov
cmp
ljmp
in
or
fsubl
and
addl
sbb
les
lret
inc
es
movsl
lds
movsb
emms
push
cs
sub
xor
sbb
mov
jp
out
js
jo
ja
add
xor
adc
popa
and
jno
jmp
fmul
jp
loopne
and
shll
test
lods
xor
out
push
sub
dec
insb
pop
in
mov
sbb
subb
adc
ret
les
mov
call
iret
stc
aaa
addr16
dec
jg
dec
subb
pop
xchg
imul
mov
mov
xor
inc
jle
push
aas
cmp
inc
outsl
sbb
jnp
mov
ficoms
int3
xlat
push
loope
rol
cmp
gs
jnp
mov
int
pop
fimuls
jno
adc
shll
xor
test
addl
pop
xchg
or
ds
xchg
mov
cmpl
sbb
jp
dec
lcall
ljmp
shr
shl
js
adc
or
mov
mov
cmp
data16
fidivl
shr
stos
fsub
adc
je
bound
mov
mov
iret
adc
sub
mov
sbb
cmc
mov
mov
inc
pop
add
mov
unpckhps
push
cs
mov
jle
ljmp
js
popa
cltd
dec
imul
cmp
sbb
mov
repz
iret
out
mov
mov
cmp
lret
pop
std
loope
xor
pop
push
std
call
sbb
adc
shl
and
lock
fwait
repz
icebp
ljmp
inc
ret
add
or
sub
data16
loope
lahf
shlb
stos
push
mov
inc
je
cmp
popa
lret
rcll
test
inc
cmp
sbb
addr16
push
mov
and
imul
aad
leave
sbb
je
and
lret
or
pushf
ss
add
bound
sbb
mov
or
xchg
clc
bswap
in
add
fadds
inc
jbe
and
adc
js
cwtl
pop
pop
add
and
and
cmp
push
aaa
xchg
sarl
testb
pop
aam
imul
int3
in
mov
pop
mov
push
push
sbb
addb
jp
xchg
pop
fists
sbb
mov
cmp
sbb
push
jp
addr16
add
das
lods
repnz
push
test
push
inc
test
add
aas
pop
cmp
push
dec
dec
push
sub
jno
pop
and
in
pop
jnp
mov
jb
dec
jnp
and
fildl
cmpsb
movsb
mov
push
dec
adc
jmp
out
call
mov
lds
sti
and
cld
pushf
mov
mov
cmp
sub
push
into
pop
add
mov
cli
adc
setl
sub
cmpsb
adc
mov
lahf
adc
push
imul
loope
mov
loope
inc
dec
cmpsl
in
out
fisttpll
fucomp
mov
pop
push
pop
and
sbb
test
sbb
push
pop
or
daa
lahf
mov
and
scas
or
xor
int
jbe
testb
int3
cs
stc
sub
imul
push
out
shr
jl
sub
js
adc
pop
stos
jnp
xor
xor
inc
loope
ret
and
or
aas
lahf
rcr
xchg
cmp
push
mov
cmp
xchg
mov
nop
in
xchg
loop
sahf
leave
xchg
jge
xchg
ja
arpl
xchg
mov
mov
push
dec
jne
mov
in
mov
scas
sbb
add
mov
sub
ja
inc
lret
mov
mov
and
mov
sub
pushf
aam
xchg
movsb
cwtl
cmpsb
rorl
out
std
sub
cmp
lret
adc
fisubrl
push
popa
outsl
or
enter
adc
outsl
loop
xchg
out
mov
data16
and
xor
pop
mov
repz
ljmp
xor
data16
fs
sub
loope
pop
mov
daa
imul
andl
xchg
xor
push
push
loop
imul
mov
mov
cli
adcb
jle
loope
push
stc
cmp
jmp
sbb
int
fmuls
sub
movsb
daa
mov
pop
mov
cmpsb
aam
push
pushf
test
mov
mov
in
ds
push
inc
leave
add
lahf
sarl
stc
insl
lods
mov
jbe
movaps
call
sub
sbb
data16
push
sub
mov
xchg
mov
cwtl
jge
xchg
shr
int3
mov
pop
xchg
xor
aam
subb
divl
mov
stos
enter
out
xchg
ds
xchg
and
push
mov
dec
sub
movb
mov
xor
jmp
pop
xorb
sbb
pop
dec
out
xor
in
sub
and
xor
fsubrl
fcomps
xor
push
mov
pop
and
enter
movsl
test
adc
movsl
movsl
int
and
es
or
push
les
cmpsl
out
jl
leave
ret
outsb
inc
inc
or
outsl
and
cwtl
int
mov
loopne
in
xor
sub
cmp
imulb
add
cmp
sub
repnz
xchg
dec
xchg
sub
out
or
decb
fs
mov
push
sub
lret
sub
in
mov
insl
pusha
mov
pop
fidivl
jg
scas
xor
movsl
xchg
xlat
lret
out
push
je
sbb
shll
in
loop
jae
shl
and
fildl
scas
pop
mov
mov
jge
cmp
xchg
arpl
jecxz
push
fcmovb
jnp
bound
sub
xor
hlt
arpl
and
sub
out
dec
pop
stc
loopne
imul
jb
or
pop
pop
xor
fs
in
mov
in
or
fldenv
roll
dec
test
stos
js
in
stc
sub
cmpsb
jecxz
xchg
sub
mov
push
test
cmpsl
cmpsb
cmp
test
jno
mov
or
cmp
fisubl
shr
pop
jl
push
jecxz
mov
push
sti
rol
sub
pop
xorb
les
pop
xor
sub
cmp
add
mull
hlt
movsl
pop
push
test
dec
xor
cld
into
sbbl
mov
mov
sbb
inc
or
es
scas
mov
mov
ret
cmpl
jo
add
out
or
packsswb
xor
push
outsb
xor
shr
lock
test
mov
xor
mov
insl
mov
dec
int3
adcb
or
negl
xorb
pop
mov
adc
lods
ffree
sbb
mov
mov
outsw
sub
xchg
push
jge
xlat
cltd
aad
jae
jae
or
push
inc
pusha
xor
inc
xlat
inc
lock
ret
pushf
jns
cmp
nopl
sub
popa
push
iret
repz
xchg
sbb
fists
fimull
aam
mov
cltd
popa
sub
xor
dec
leave
fldl
insb
int3
cs
subl
mov
cmp
pop
loopne
xor
ljmp
push
or
or
fdivrl
aam
jbe
pop
xchg
and
lahf
cli
insl
sub
stos
scas
mov
popa
adc
std
cwtl
push
pushf
es
mov
repnz
in
hlt
loopne
sbb
pop
lret
movsb
inc
mov
lds
fldt
repnz
outsl
iret
loope
icebp
shrl
lret
or
movsb
mov
test
imul
outsl
jl
fsubrl
fwait
pushf
dec
push
jb
das
jbe
jnp
xchg
shll
cmpsl
push
inc
pop
movsl
clc
mov
add
repnz
mov
jle
jecxz
std
push
movsb
les
outsl
pop
imul
dec
jle
push
sub
mov
pushf
cmc
js
push
xor
cmp
lods
adc
out
push
fldt
inc
outsl
or
adc
rorb
lods
mov
in
out
imul
and
daa
add
mov
ret
fwait
lahf
mov
hlt
in
fisubs
inc
inc
rcr
stc
test
sbb
das
sub
and
lods
rolb
enter
hlt
jae
jno
sti
mov
nop
and
lahf
adc
xor
xor
add
lcall
push
nop
sub
leave
xor
arpl
push
mov
out
stos
pop
push
add
jp
inc
in
pop
stos
mov
push
sbb
scas
xor
or
mov
jl
and
lods
mov
xchg
imul
test
sbb
jnp
gs
push
cs
out
mov
sahf
cwtl
and
imul
mov
push
js
arpl
xchg
leave
cwtl
enter
int3
movsl
movb
xchg
ljmp
jmp
sub
adcl
jbe
jnp
cmp
sar
add
int
ret
jg
aam
dec
call
adc
je
cli
cmp
or
test
das
and
sub
jmp
xchg
loopne
pop
or
cmpl
and
notb
cmp
repz
in
and
out
push
jmp
sub
insb
ds
mov
mov
inc
fidivrs
in
sub
dec
mov
sub
add
xor
sub
sub
lret
repnz
and
cmp
pop
xlat
test
js
scas
jle
sub
push
outsb
and
fs
notb
adc
push
pop
xchg
add
cwtl
sti
pop
in
shll
pushf
fdivl
mov
test
inc
xchg
fldl
ljmp
in
sbb
xor
out
mov
lds
imul
loope
sbb
add
mov
cmc
mov
adc
jbe
or
sbb
mov
shl
out
pop
sub
popf
pop
outsb
fisttpl
fs
or
dec
je
lcall
mov
sub
test
or
inc
and
mov
xlat
test
iret
lods
bound
mov
ja
adc
out
jmp
or
lret
jmp
mov
mov
sti
push
lcall
int3
jp
loop
xchg
or
popf
sub
xor
ja
ljmp
push
sbb
ret
dec
inc
xchg
xor
in
inc
in
pop
ja
push
into
jnp
xchg
adc
cli
mov
decb
ljmp
mov
fmul
dec
xchg
pop
xchg
pop
lds
cmp
outsb
xchg
nop
push
lea
lahf
jmp
and
adc
push
inc
test
dec
or
ficoms
les
xchg
insl
popa
out
pushf
cmp
mov
xor
jne
jle
xchg
lods
and
stos
pop
outsb
mov
mov
jno
xchg
fs
mulb
sbb
es
rorl
pop
cmp
mov
rcrb
mov
out
adc
xor
mov
movsb
cmp
vsubpd
stos
test
rclb
push
mov
xchg
or
mov
sub
outsl
or
fisubs
imul
pop
test
fstpl
scas
pop
adc
sbb
int
pop
and
clc
pushf
notb
outsl
mov
cmpsl
add
clc
movsb
ds
mov
dec
andb
cmp
xchg
iret
mov
adc
shlb
scas
pop
add
int3
cmp
jg
rorb
int
fs
ds
jmp
xor
cltd
adc
mov
test
cmpsb
jb
lahf
in
rcrb
lods
adc
shl
into
cmp
cmpsb
or
scas
inc
clc
int
shrb
mov
jl
jns
mov
sbb
stc
sbb
sbb
and
sub
sub
xor
or
inc
in
add
pusha
into
xabort
out
inc
xor
roll
inc
inc
sub
cwtl
ret
js
adc
mov
mov
xchg
or
mov
dec
push
push
es
into
popf
xchg
jge
dec
mov
je
mov
testb
pop
cmp
and
inc
jne
out
dec
popa
roll
xlat
mov
mov
pop
mov
popa
push
scas
iret
scas
aad
xchg
jb
jmp
sbb
jne
jnp
in
xor
pop
loope
sbb
je
pusha
inc
test
test
imul
mov
push
cmp
ja
dec
out
arpl
jecxz
fldenv
jno
movsb
cld
repnz
cwtl
fists
loopne
xchg
xchg
stos
sub
stc
scas
repnz
jp
test
sarl
xor
call
add
jno
in
pop
test
xchg
fst
jecxz
aaa
jo
arpl
jbe
aad
xor
jecxz
pop
call
and
mov
mov
stos
add
sti
push
ds
filds
push
mov
jmp
in
pop
lret
or
jo
pop
jmp
loope
or
cmp
xchg
test
popa
pop
into
dec
cmpsb
daa
mov
pushf
das
xchg
mov
in
and
adc
mov
enter
push
repnz
mov
xor
push
andb
sti
xchg
gs
aad
or
enter
mov
mov
xchg
pop
sub
test
jb
sbb
leave
pop
imul
adc
gs
in
fidivrs
mov
cmp
add
push
sub
cwtl
fisubrl
rcll
mov
inc
sub
dec
mov
rcll
jns
fcoms
ret
and
int
inc
ljmp
push
fs
sub
jmp
lret
out
xlat
dec
mov
sbb
mov
xor
xorl
adc
mov
out
add
xor
sti
mov
and
adc
clc
cmp
sbb
rorl
test
je
rcr
cltd
xlat
mov
out
jl
xchg
cltd
or
nop
das
inc
mov
mov
cmp
movsl
loopne
pop
lods
or
hlt
test
xlat
adc
ja
fcompl
jnp
sub
inc
xor
sbb
mov
and
sub
jbe
pop
rcl
std
push
dec
inc
jmp
push
or
ret
shl
or
cmpsb
sub
testb
aam
stc
add
ljmp
and
sbb
sarb
cmc
sti
jae
das
test
lods
add
scas
sub
mov
sub
lret
mov
pop
movb
jmp
movsb
dec
movsl
fiaddl
stc
outsb
or
mov
test
push
adc
stc
sbb
ds
stc
loopne
int
push
sbb
add
std
add
bound
cmp
or
xchg
pop
add
sbb
inc
in
jg
subb
mov
in
adcb
gs
lret
mov
lds
lret
daa
add
adc
sbb
leave
mov
mov
scas
xor
mov
gs
sub
lods
add
push
ror
pop
pop
je
call
popw
push
shll
lods
rclb
inc
pop
adc
scas
loop
add
ss
cmpsl
inc
cmp
rolb
int3
sahf
idivl
jmp
pushf
adc
mov
fidivrs
sub
mov
push
sbbb
inc
mov
in
add
fidivs
movsb
out
cs
hlt
or
push
mov
adc
out
add
loope
or
push
mov
xchg
mov
mov
push
lock
in
inc
sbb
pop
cmpsl
subl
je
out
xchg
sbb
mov
fwait
icebp
or
inc
sub
push
add
fstpl
jge
push
xor
xor
mov
sbb
xlat
mov
gs
add
sub
xchg
mov
aam
dec
xchg
push
out
jecxz
pop
and
in
les
sub
out
cmc
sub
fcomps
mov
xchg
rolb
mov
push
sbb
push
cli
xchg
cmc
push
pop
subb
or
mov
lahf
cmpsb
push
xor
xor
ficoms
loopne
pop
cmp
loope
loopne
pop
add
xchg
push
mov
mov
shll
and
cmpsb
xor
and
cmc
mov
enter
push
loopne
cmpsl
mov
cmp
add
dec
fwait
xor
ja
sub
lahf
jle
or
icebp
jge
cmp
pop
aaa
lods
shrl
js
xor
or
movsb
aam
mov
mov
popfw
popf
hlt
inc
aad
cwtl
mov
mov
jb
int
subl
aaa
data16
fimull
fildl
jecxz
repz
movsl
inc
pop
dec
xchg
repz
mov
xchg
adc
inc
hlt
movsl
add
lods
pop
mov
pusha
mov
stos
call
in
scas
mov
xchg
lahf
inc
xchg
out
pop
addr16
das
call
sar
adc
subb
aad
inc
pop
adc
mov
mov
mov
cli
and
cmp
pushf
sbb
aad
pop
test
xlat
jge
add
adc
jns
cmp
mov
aaa
arpl
ret
inc
push
sbb
out
lods
or
ss
repz
fsubl
fldlg2
in
xchg
int
and
cs
push
or
inc
lods
cmpsb
ja
arpl
add
insl
shrl
push
outsl
scas
lds
inc
fisttpll
sub
adcl
xlat
inc
lds
adcl
decl
push
sub
test
hlt
movsl
adc
inc
push
lods
fldenv
mov
push
ds
mov
add
dec
inc
pop
ret
mov
outsl
sarl
clc
dec
test
jne
xchg
cmp
nop
das
mov
dec
or
and
mov
mov
ja
clc
mov
sbb
ds
imul
loopne
xor
ss
push
rclb
mov
sbb
daa
lock
push
in
lret
sub
push
stc
fnstenv
dec
pop
sub
pop
jge
cmp
dec
jge
leave
and
lret
icebp
inc
sub
push
ss
scas
fistps
xchg
xchg
pop
or
mov
or
cmp
scas
ja
mov
push
repz
fcmovne
sti
adc
inc
cmp
mov
in
push
nop
mov
or
xor
lea
test
and
and
fstps
adc
adc
sbb
inc
jl
xor
pop
jno
in
sbb
les
lods
call
addr16
mov
dec
clc
nop
popa
xor
xor
pop
xor
push
les
cwtl
dec
mov
adc
jmp
adc
mov
sbb
shrl
fistps
mov
push
testb
and
loop
mov
in
cli
pusha
sub
pop
mov
idiv
pop
loope
addr16
push
mov
lcall
push
out
inc
mov
in
fildll
adc
lret
adc
mov
not
cmp
mov
jg
mov
test
fistpll
inc
ret
test
js
xchg
test
sti
sbb
sbb
inc
testb
movsl
pop
in
sub
es
inc
lahf
ds
cmc
xor
xor
or
sub
stc
sbb
push
add
ret
clc
icebp
add
into
and
pop
xchg
pusha
cmp
mov
jge
cmp
xor
aam
inc
mov
scas
and
mov
scas
mov
hlt
imul
xchg
outsl
jnp
xchg
push
jnp
leave
sub
adc
push
mov
jg
ljmp
lret
adc
sbb
mov
push
or
cmp
popa
xor
pop
enter
je
sbb
mov
aas
xchg
and
inc
xchg
enter
int
fmull
scas
mov
into
loopne
mov
jns
aam
stos
bound
sub
mov
add
aam
pushf
inc
cmp
subb
addl
jmp
mov
int3
inc
loope
cmp
sub
mov
mov
fistpl
jp
inc
xchg
sbb
leave
pushf
mov
sbb
pop
fdivr
cs
je
lcall
pop
enter
popf
inc
imul
lcall
leave
cld
lahf
add
mov
lret
push
hlt
mov
lret
sti
mov
insl
imull
aam
jo
adc
testb
dec
sub
jo
add
mov
scas
xchg
sar
cmp
pop
xchg
stos
pop
push
dec
fcomp
loopne
dec
add
mov
mov
sbb
mov
sbb
push
push
mov
mov
mov
mov
mov
shl
cmp
sub
mov
js
mov
das
pop
insb
or
jb
lock
xor
out
sbb
xor
push
lret
cmp
pop
xor
out
in
or
dec
shr
mov
dec
xchg
out
inc
sub
icebp
xchg
mov
ret
jecxz
push
subl
or
fs
mov
adc
inc
mov
hlt
test
pop
push
out
or
lret
add
and
je
xor
sbb
push
aaa
xor
stos
push
add
or
pop
mov
inc
out
cmp
dec
lock
mov
mov
in
insb
insb
push
cmc
cmc
push
lret
adc
cwtl
cmp
das
cmc
lods
add
inc
subb
mov
inc
mov
mov
enter
cmp
jne
lea
pop
and
adc
xchg
dec
cmpsb
ret
rorb
push
imul
adc
add
cli
sub
inc
out
inc
pop
test
rolb
addl
enter
push
notl
dec
sub
fcoms
rorb
imul
cmp
mov
in
loope
mov
loop
sbb
imul
das
jge
mov
jg
arpl
dec
mov
and
or
js
mov
lcall
loopne
scas
cmc
jecxz
mov
mov
adc
jl
fsts
je
mov
mov
cltd
pop
push
inc
sti
orl
fs
cli
sbb
add
test
pop
pop
adc
in
sbb
pop
gs
lods
nop
out
out
push
enter
ss
ret
ja
xor
mov
xlat
test
cmp
aad
jne
mov
adc
ljmp
es
dec
cltd
aam
inc
fisubrl
sbb
push
arpl
std
add
lods
inc
mov
shll
aad
sbb
not
jns
cmp
sbb
popf
push
mov
test
or
cmp
movsb
out
or
xor
or
adc
fcomps
inc
sbb
insb
push
sbb
outsl
mul
xchg
push
inc
ficomps
pusha
jnp
jno
into
cltd
in
vcvtsd2ss
test
out
jae
jp
adc
jae
sti
popa
jb
mov
mov
sub
push
sti
pop
or
sbb
js
shlb
cmp
sahf
jnp
test
cwtl
fs
inc
pop
and
mov
lret
into
jbe
mov
enter
pop
pop
repz
call
aaa
cwtl
cwtl
mov
or
cli
dec
lea
popf
sub
jns
xor
outsl
sbb
push
inc
cmp
popa
sub
js
out
out
xchg
out
in
add
inc
cmp
jnp
cmpsb
push
add
sub
cmp
mov
or
lea
sub
aad
scas
xchg
lret
dec
repnz
and
hlt
pushf
cltd
xor
mov
xchg
daa
push
test
sub
mov
jmp
jo
aas
aam
mov
jae
gs
enter
in
xchg
jl
jne
subb
jge
das
mov
leave
inc
add
sub
mov
sub
adc
add
pop
mov
test
sub
call
loopne
ds
and
pop
dec
test
adc
push
adc
test
lahf
mov
mov
add
outsl
xor
push
mulb
jns
inc
and
fs
jmp
or
pop
mov
leave
and
mov
mov
cs
push
sahf
test
scas
test
inc
ficoms
sbb
adc
add
add
mov
ja
int
push
mov
std
jne
ret
int
mov
or
mov
iret
js
adc
and
mov
adc
out
decb
ret
push
mov
xor
call
mov
dec
sarl
dec
addl
push
in
mov
mov
push
sahf
cmp
sbbl
inc
mov
xchg
jp
push
xchg
in
push
subl
jne
jl
aas
iret
aad
add
jge
inc
aaa
mov
arpl
mov
ret
fs
enter
bound
bound
aad
fdivs
jp
hlt
jg
xchg
inc
add
inc
add
cmpsl
and
xor
xlat
rorb
stos
xchg
sahf
mull
mov
js
and
sti
pop
fistpll
lock
and
sbb
xchg
clc
adc
dec
jne
push
or
mov
adc
loop
cmpl
aaa
test
stc
jo
rcl
shrb
insb
lea
cmp
lock
dec
jg
mov
pop
dec
mov
and
fucomp
sbb
dec
int
add
lea
cmc
subl
xlat
pusha
sub
icebp
mov
jno,pn
mov
stos
ljmp
setg
subb
mov
fstps
push
adc
js
sbb
xchg
ss
inc
dec
cmp
dec
add
popf
jmp
sub
fwait
ds
rcrb
in
xlat
inc
mov
cmp
jp
xor
mov
leave
mov
mov
das
push
sahf
mov
pop
fld
lret
mov
push
mov
hlt
lea
pop
jnp
rcrb
adc
les
call
fwait
out
cmp
gs
adc
jecxz
aaa
clc
mov
mov
sbb
mov
sbb
jmp
pusha
addr16
and
rclb
in
push
test
jne
arpl
sbb
fildl
or
test
pop
gs
adc
xlat
in
sti
sub
cld
filds
pop
mov
sub
cmova
pop
ljmp
sub
or
add
inc
sbb
jne
ljmp
shll
adc
into
es
xor
pop
jmp
call
jo
outsb
incl
xor
add
push
outsl
call
mov
mov
cli
aam
icebp
sub
iret
mov
loop
lods
mov
add
push
jae
fmuls
repnz
dec
mov
xorl
inc
mov
jp
sub
ds
or
and
push
aam
xor
fwait
test
push
int3
push
movsl
lock
repz
mov
xchg
int3
xchg
fs
rcr
mov
and
in
fdiv
jae
lea
call
sbb
and
aaa
movsl
repz
hlt
xor
push
gs
cmp
pop
lcall
lock
rclb
sub
or
ljmp
lea
enter
mov
cmpsb
lods
cmpsb
in
mov
pop
and
clc
xchg
xchg
popa
push
lret
js
scas
push
daa
rcl
sbbl
nop
not
pop
aaa
js
call
adc
les
add
sbb
xchg
add
push
out
cmp
and
mov
clc
je
and
sbb
mov
xchg
andl
jne
sub
pop
adc
mov
push
repnz
mov
out
inc
out
insb
xor
lods
sub
mov
fisttps
das
in
out
inc
sub
pop
lock
into
test
loop
adc
ljmp
and
xor
adc
test
decl
leave
and
stc
xchg
leave
jo
or
or
stc
cmp
int
ficoml
mov
sub
adc
pop
insl
fisubrs
or
jle
ror
or
mov
icebp
lock
xor
sbb
call
pop
jnp
mov
sbb
test
inc
mov
aas
aaa
outsb
sub
insl
fwait
add
mov
icebp
iret
xor
mov
mov
mulb
cmp
pop
int3
push
fldt
aaa
mov
push
sti
adc
sub
ds
add
inc
inc
jge
movsb
adc
loopne
jno
and
pop
sub
sbb
dec
cmp
lds
scas
push
sbb
jns
and
call
xchg
mov
into
mov
sbb
jno
inc
mov
cli
and
add
jl
sbb
lock
xorb
lea
into
pop
dec
fcmovnbe
push
data16
sbb
and
addb
inc
sbb
mov
push
ljmp
adc
and
mov
add
dec
mov
in
sbb
and
pushl
icebp
loop
lods
fsubr
adc
nop
adc
inc
push
push
test
xor
pop
dec
xor
add
dec
cmp
xor
xchg
cmp
sub
dec
pop
pushf
mov
test
pop
cmp
adc
jns
clc
mov
out
mov
xchg
test
scas
sbb
inc
dec
lret
cld
mov
loop
std
push
shrl
sarb
sbb
mov
jmp
push
xchg
mov
cld
ret
xchg
iret
dec
test
jecxz
mov
cmp
sub
push
mov
xor
jae
and
popf
mov
xchg
xchg
push
repz
and
dec
pusha
mov
int3
in
dec
dec
sbb
in
pop
scas
cmp
ffreep
xor
rol
inc
sub
and
jbe
lahf
insl
data16
or
jb
sub
mov
mov
dec
xchg
out
mov
and
into
mov
orb
inc
sub
mov
pop
insb
out
inc
jns
repnz
or
pop
repnz
mov
mov
dec
push
in
xor
push
out
cmp
push
cmpsl
push
sub
pop
inc
adc
or
push
aad
aad
ds
lods
out
popf
and
mov
sbb
leave
in
add
or
sub
dec
inc
outsl
and
and
les
iret
sub
sub
or
and
and
mov
pop
xchg
mov
adc
sub
jle
and
jo
and
push
leave
cmp
pop
add
hlt
lret
dec
push
shll
fcompl
xor
inc
or
jb
and
jp
fimuls
cmp
push
pushf
adc
aaa
mov
push
movsl
push
dec
shlb
jle
lock
pushf
cmp
sub
jmp
inc
pusha
test
push
adc
mov
sub
imul
loopne
lock
ret
mov
aaa
sub
inc
test
jmp
jns
jecxz
mov
ja
mov
add
lcall
in
pop
sahf
jbe
push
cld
xor
mov
xchg
xor
enter
sbb
or
call
lods
test
cmpsl
dec
insl
ja
push
push
inc
and
jle
xchg
or
fiaddl
push
daa
fistl
fs
pop
jo
xchg
dec
repz
dec
mov
add
xor
xchg
jo
pop
add
xchg
and
push
add
insb
xor
jge
iret
dec
or
movsb
in
pop
pop
jno
dec
adc
jecxz
mov
jnp
nop
outsl
push
and
out
fistpl
pop
aam
xchg
icebp
lret
cli
jo
and
pop
dec
xor
or
lods
jbe
out
push
xchg
xor
cli
or
mov
jmp
lock
nop
sbb
ljmp
stos
adc
bound
cmpsb
fsubrl
out
and
or
fs
scas
ss
xor
test
mov
jl
icebp
cmp
in
cmp
mov
cmpsl
enter
push
cmpsb
in
xlat
adc
jns
jle
out
outsb
mov
sub
scas
dec
mov
jo
sub
mov
outsl
int
inc
js
cmpsb
push
sbb
rcll
mov
adc
cmpsl
or
push
addr16
xlat
xor
repz
fsubrs
push
movsl
frstor
aad
cmp
popf
sub
or
ret
test
rolb
mov
and
orl
sbb
stos
cmc
inc
loope
cmpsb
imul
loop
push
xor
lds
dec
jl
ds
cmp
repnz
fstpt
cltd
lods
movsl
mov
dec
ss
out
sahf
mov
insb
daa
movsl
test
xchg
adc
pop
xor
push
ret
or
mov
bound
outsb
add
cwtl
packsswb
pop
jne
cmp
xchg
jns
or
insb
or
mov
aam
jno
je
inc
jecxz
mov
push
std
aas
mov
movsl
pop
jae
loop
and
shll
jp
mov
sub
sbb
rcl
inc
aaa
fidivrs
subb
out
mov
fidivs
mov
lret
or
mov
scas
ds
out
movsl
and
int
inc
adc
pop
sahf
lret
mov
adc
ljmp
xchg
push
pop
notb
dec
daa
std
adc
sarl
lea
ljmp
pop
in
push
aam
adc
pop
mov
pop
cmovg
fbstp
ret
cmpl
pop
ret
sbb
andl
jno
lea
int
mov
sbb
push
jge
jae
and
lahf
xchg
dec
xchg
cld
jl
jge
cmp
int3
cmpsb
and
mov
or
dec
cli
repz
jo
xchg
add
int
into
xchg
dec
pop
sub
or
push
enter
lea
aaa
cmpsb
mov
arpl
pop
fistl
imull
movl
mov
cld
insb
sbb
cmc
push
loopne
jle
pop
lret
jnp
shlb
fsubr
push
add
or
cmp
daa
popf
iret
xor
jb
push
xchg
iret
outsb
jns
out
les
lds
push
xchg
fstl
inc
lock
cmp
mov
pop
leave
add
add
xlat
mov
mov
mov
push
outsb
movsb
pop
decb
call
out
lock
sbb
inc
aam
sbb
dec
mov
ss
push
mov
jno
mov
mov
and
cmpsb
and
cmp
std
ret
movsb
incb
adc
mov
mov
cmp
lret
popa
cs
xor
scas
xor
lret
xchg
sbb
notl
popf
cmp
jl
dec
lahf
mov
mov
push
mov
sub
mov
pop
mov
int
jbe
clc
ret
out
cmp
fdivl
scas
lods
jno
jb
dec
pop
orl
out
and
add
cpuid
add
mov
add
jmp
adc
adc
je
xor
cs
fisubrl
out
cwtl
jnp
ret
and
adc
cmp
xor
adc
push
jns
jb
mov
nop
sub
pusha
shl
cmc
sub
and
shll
xor
or
or
fisubs
aas
cmp
xor
and
dec
dec
fildll
mov
dec
inc
dec
int3
mov
adc
clc
enter
adc
lock
gs
inc
mov
clc
cmpsl
pop
xchg
insl
test
pop
push
in
shl
shll
loope
into
mov
mov
pop
inc
dec
cmpsl
add
lods
frstor
push
lods
arpl
jmp
lods
clc
hlt
stos
imul
mov
mov
xor
sbb
loopne
sarb
dec
in
ret
fstl
out
out
or
fistpl
mov
cmpsb
insb
push
subb
add
xchg
popa
pop
xchg
xchg
push
xchg
fbstp
sbb
xchg
cmp
icebp
cltd
sub
lret
loope
mov
fimull
in
ds
push
loope
sbb
xchg
movsb
push
aam
xor
sbb
sbb
stos
mov
js
mov
inc
aas
int
add
mov
lock
daa
mov
arpl
and
fs
sbb
mov
sbb
rclb
inc
or
jmp
cli
std
adc
dec
je
daa
push
sub
mov
testb
hlt
push
sarl
pop
repnz
arpl
aad
cmp
sbbl
push
xor
pop
adc
inc
dec
or
aas
and
or
mov
cmp
insb
fsubrs
cltd
ret
mov
inc
test
ficompl
add
dec
outsb
or
ret
mov
loop
jmp
or
adcl
test
inc
xchg
nop
loope
and
jno
scas
jg
xchg
dec
jge
les
sub
outsb
or
pop
inc
pusha
leave
inc
dec
cli
mov
outsb
cli
mov
pop
pop
dec
xor
int
mov
imul
pop
cld
hlt
jp
push
movsb
mov
inc
and
or
or
in
cmp
xchg
cmpsb
test
js
or
gs
hlt
call
adc
lea
aaa
dec
sub
xchg
fidivl
add
cmpl
fisubl
pop
popf
jl
shlb
stc
enter
cmc
inc
cmpsl
popl
add
jo
lret
mov
ss
dec
push
leave
cmp
pusha
iret
add
or
hlt
mov
sbb
jg
lods
cmp
outsl
sub
addr16
enter
nop
pop
mov
xor
mov
pop
lret
and
add
add
push
out
add
in
sbb
data16
cmp
mov
roll
mov
lods
fisubs
rclb
jne
sub
clc
iret
pop
push
lds
sbb
mov
movsl
rep
aam
push
mov
daa
cmpsb
lods
mov
xor
aad
and
pop
lods
scas
in
or
out
pushf
or
add
sub
imul
rcr
iret
pop
jle
jno
inc
scas
or
jae
inc
jne
jge
mov
mov
outsb
mov
stc
or
dec
sbb
xor
repnz
cmp
cwtl
test
stc
mov
jecxz
sahf
dec
mov
sbb
insb
js
mov
pop
ret
and
push
outsl
inc
dec
inc
ljmp
imul
xor
jge
mov
cmp
out
out
jb
jle
push
shlb
fwait
xchg
push
aad
and
and
into
test
add
scas
aad
dec
or
sbb
hlt
shl
jle
mov
pushf
xchg
jmp
sahf
lcall
cmp
dec
cwtl
in
pop
sub
fnstsw
movsb
in
adc
pushf
dec
mov
stos
jo
push
test
loopne
int
sbb
mov
cmp
and
mov
cmpl
dec
and
push
dec
cmc
inc
adc
addb
inc
aam
popa
jmp
cli
subb
lds
sub
popf
pop
rcrb
ret
add
ficoms
cmp
push
enter
sbb
iret
sbb
test
imul
mov
pop
mov
aas
int
faddp
gs
jecxz
mov
sti
mov
test
pop
mov
movsl
add
xor
fdivs
arpl
cwtl
inc
dec
xor
insl
hlt
xchg
cmp
icebp
lods
pop
sar
lcall
jns
push
in
push
mov
push
inc
pmaxsw
or
push
pop
dec
outsb
pushf
ret
xchg
cmp
mov
push
imul
push
jge
shl
aad
and
lret
xlat
push
xchg
jecxz
mov
dec
add
mov
push
mov
lds
xorl
or
sub
imul
iret
leave
rclb
dec
rolb
adc
test
push
insl
in
insb
push
inc
add
inc
movsb
das
test
out
xor
in
push
aas
outsb
hlt
mov
add
test
rclb
shl
popf
stos
decl
lea
lods
cld
lret
cltd
popa
pop
lea
sbb
mov
aad
lcall
stc
out
and
inc
mov
sub
sbb
mov
cmp
aam
rclb
orb
jge
mov
jl
outsb
out
lock
add
aad
neg
pop
les
adc
xchg
xchg
push
adc
popa
add
or
or
or
jle
daa
or
call
mov
mov
cmp
addr16
movsb
ja
ret
out
push
sbb
imul
xchg
test
mov
fdivrs
dec
push
and
aas
int
xor
push
lret
out
sbb
div
test
xchg
aas
dec
cmp
das
push
adc
mov
fsub
in
pop
addr16
rol
lods
mov
inc
xor
notl
or
bound
dec
imul
pop
rorb
ret
inc
and
mov
push
push
ljmp
inc
shl
addb
mov
fsts
hlt
lahf
gs
outsb
cmp
cld
fstp
out
les
popf
std
popa
push
xchg
push
mov
mov
fsubl
je
xor
in
pop
js
leave
loop
and
sub
mov
cmpsl
in
adcb
push
mov
faddl
neg
std
clc
daa
hlt
rcll
scas
mov
sbb
iret
xor
sbb
xor
jno
mov
push
test
scas
pop
lds
test
outsb
push
cltd
idivl
sub
push
ja
std
mov
mov
jns
sub
dec
jl
mov
xor
add
out
xor
jns
ror
add
sti
test
les
jl
aaa
jns
mov
dec
iret
fnsave
jae
and
cmp
add
inc
loope
stc
stos
adc
adc
mov
jle
rcr
out
dec
push
mov
nop
jmp
sub
jmp
pop
popa
enter
in
stos
pop
jge
inc
loopne
adc
fptan
out
aam
jns
ds
xchg
jbe
xchg
xchg
or
daa
mov
addl
push
mov
loop
int3
mov
inc
push
les
imull
mov
outsl
xor
pop
cs
inc
mov
test
stc
int3
test
and
adc
xchg
int
cs
mov
or
dec
adc
adcl
push
movsb
and
lahf
cli
pop
jp
or
push
repnz
icebp
push
lahf
cmpsl
pop
cli
add
xchg
mov
aam
rolb
stos
insb
fcmovnbe
ds
and
test
sub
add
xchg
mov
pop
lock
cmc
mov
aad
test
shrd
dec
int3
push
jecxz
xor
sahf
xchg
lret
dec
in
imull
lods
daa
sbb
lcall
add
mov
jno
insb
es
js,pn
dec
enter
stos
sbb
jae,pt
pop
xchg
cmp
out
clc
jg
cmp
shlb
pop
sbb
fsubs
fistpll
hlt
movsl
xlat
mov
dec
fs
or
push
test
cmp
dec
test
sub
or
ret
cli
movsl
cwtl
mov
cmp
xchg
adc
sbb
xor
adc
dec
cmp
sti
mov
jp
jge
in
and
das
mov
xchg
outsb
jecxz
je
xor
mov
loop
lcall
xchg
or
or
and
movsb
adc
jne
mov
jnp
xor
mov
imul
pushl
jno
ds
push
sbb
pop
and
push
test
and
jno
mov
aaa
sub
inc
imul
mov
stc
mov
inc
out
fbstp
jmp
testl
mov
push
or
jne
sbb
push
dec
es
ss
fimuls
inc
cmp
push
pop
push
sbb
dec
adc
int3
dec
rolw
cmpsl
pop
adc
ret
sub
aaa
repz
add
cmp
ret
and
xchg
pop
int
inc
and
or
push
cmp
mov
dec
push
adc
and
jmp
adc
subl
mov
mov
pusha
imul
pop
fidivrl
test
and
pop
aam
pushf
jmp
add
inc
ljmp
xor
pop
mov
mov
scas
mov
mov
mov
inc
int3
adc
jecxz
aad
push
jg
enter
xor
ja
mov
pop
xchg
cli
es
cmp
jl
xchg
cmp
pushf
mov
in
test
inc
jmp
popf
jb
push
fstps
out
mov
cwtl
mov
fdivrl
in
push
push
cltd
xchg
jecxz
pop
ficompl
call
stos
insb
lock
mov
rcrl
lock
lahf
imul
xor
aad
cwtl
enter
mov
jle
xor
sub
jb
mov
iret
mov
push
or
subb
cmpsl
rcrl
pop
repnz
lret
cwtl
int
cmp
mov
or
fistpll
and
xchg
cmp
pop
into
insb
daa
or
push
mov
mov
std
adc
dec
or
mov
adc
or
lods
fwait
jae
cmp
dec
and
adc
les
icebp
addr16
cmp
mov
mov
mov
fdivrl
add
iret
scas
cld
or
cmp
sbb
add
fldt
rorb
ljmp
in
out
or
xor
leave
sbb
adc
xchg
sbb
shlb
pop
dec
sub
jg
pop
xchg
scas
aad
push
sub
insl
lcall
outsl
inc
cld
push
sub
or
js
fstpt
push
push
shrb
mov
pop
lds
insl
nop
lods
mov
rcll
cmp
xor
sbb
in
das
testb
sbb
push
out
repnz
pushf
cmp
mov
ret
out
inc
push
xor
fsubr
jge
mov
mov
fistpll
mov
mov
int3
pop
and
lds
bound
and
xchg
sbb
dec
xor
scas
adc
jo
imul
das
xor
xor
jb
pushl
sub
xchg
aaa
push
lods
popa
repnz
mov
rcll
std
jmp
insl
mov
add
loop
cmc
lahf
add
adc
inc
add
les
push
and
jg
out
sbb
inc
mov
jg
faddl
fimull
pop
lock
ss
and
pop
daa
cmpsb
mov
mull
jmp
dec
cmc
cmpsb
repnz
unpckhps
stos
fsubrs
xchg
mov
cltd
stos
std
dec
xlat
push
vsubsd
sbbl
inc
je
mov
push
xor
cmp
lods
movups
dec
test
push
jmp
jl
sbb
jne
mov
push
jge
out
xor
xchg
jno
inc
xor
mov
clc
jecxz
mov
mov
outsl
xorb
xchg
das
dec
lret
fstl
xlat
cld
mov
lds
mov
push
pop
lcall
inc
outsl
cli
mov
popf
mov
adc
shll
push
jo
neg
cmc
andb
call
mov
jnp
cmpsl
insb
dec
push
sbb
cmp
stos
adc
add
jne
out
aad
mov
sub
dec
int
cli
mov
notl
mov
or
dec
nop
mov
popw
lret
das
sbb
pop
test
dec
ret
imul
pop
inc
mov
iret
pusha
aas
test
jne
push
test
fiaddl
push
push
or
lds
insb
sbb
jp
fndisi(8087
pop
xor
ljmp
mov
dec
mulb
shl
xor
js
nop
cli
and
xlat
lods
push
pop
jge
pop
add
and
lods
ds
jle
jp
fsubs
je
das
xchg
add
mov
outsw
sub
mov
jmp
cwtl
jmp
push
push
adc
clc
jp
stos
fwait
mov
clc
cld
lock
scas
inc
pop
pop
pop
and
negb
faddl
jno
sbb
js
mov
xor
mov
mov
insl
jbe
loope
mov
out
mov
mov
xchg
adc
mov
rorb
push
cltd
fwait
lret
sbb
jl
leave
data16
aad
rcr
test
lahf
outsb
hlt
xor
inc
xchg
rol
scas
addr16
stos
ljmp
cmp
dec
addr16
nop
loope
fsubrs
dec
sahf
pop
imul
fwait
loope
aam
mov
stos
sarl
int
je
sarl
mov
enter
inc
call
mov
scas
lea
fcomps
insl
push
pop
mov
jmp
jnp
lcall
rcl
push
push
cmp
stos
lock
arpl
push
test
idivb
arpl
in
std
adc
int
pop
dec
insb
test
sarl
aaa
ficoms
or
mov
inc
mov
adc
ret
int3
rcrb
loop
cmp
mov
push
pop
lahf
xchg
cmp
pop
and
jbe
mov
stos
call
xor
popf
fsubrs
push
adc
mov
dec
sbb
mov
mov
mov
mov
pop
mov
mov
xchg
imul
xchg
jecxz
shrb
ret
in
idiv
sub
mov
scas
jg
cli
inc
add
adcb
fstpt
xor
mov
ljmp
outsl
mov
scas
loopne
ret
mov
mov
fistpl
cmpsl
and
mov
nop
xor
push
cld
ret
ret
or
fiadds
loopne
mov
cmp
aad
add
hlt
in
dec
pop
inc
adc
ret
sub
mov
fcmovne
cld
ja
push
dec
xchg
lret
pop
pop
pop
out
cmpsl
mov
ljmp
jns
xchg
inc
inc
fidivl
sti
xchg
pop
cs
les
movsb
or
add
mov
icebp
fwait
jns
movsb
rcll
jbe
popa
lcall
mov
cmp
nop
lods
add
popaw
adcl
xchg
mov
int
mov
cmp
fimuls
data16
sub
rcrl
push
sbb
clc
std
xor
mov
std
mov
inc
subb
aaa
inc
hlt
inc
xchg
in
pop
push
js
cltd
loopne
das
xchg
add
sbb
push
sbb
aam
jmp
sti
mov
cltd
xchg
movsb
jge
test
xchg
cmp
cmpsl
incl
int3
and
xor
add
pop
xor
push
ds
nop
mov
rcll
ja
clts
faddl
push
orb
jg
mov
xchg
xchg
jb
stc
sub
jae
scas
adc
stos
and
lretw
je
sub
inc
adc
mov
hlt
icebp
mov
sti
inc
push
pop
out
lret
jmp
loop
add
rcl
dec
stos
xchg
testb
add
jmp
scas
lret
test
jno
shr
pushf
mov
test
inc
loope
xor
pop
xchg
mov
insl
push
ss
inc
stos
ret
fs
int
notl
mov
aaa
inc
lahf
add
jl
jae
cmp
jmp
adc
jbe
flds
sbb
out
movsb
mov
jecxz,pt
scas
cs
adc
notl
dec
jl
popf
popa
loope
jns
and
fs
lods
popf
mov
ljmp
sbb
jne
lcall
leave
aam
or
xchg
call
pop
mov
in
data16
rcrl
test
fsts
push
out
jmp
lods
inc
test
and
adc
lods
and
mov
xor
and
int
movsb
dec
sbb
mov
leave
push
lret
adc
sbb
push
push
fsubrl
or
push
ret
imul
adc
out
roll
mov
push
mov
stos
sub
sbb
testb
rcrl
push
add
jl
out
imul
stos
inc
inc
ja
notl
mov
mul
std
popf
mov
jb
ret
cmp
mov
neg
dec
cmpsb
imul
lret
mov
rcll
xchg
data16
neg
mov
xchg
dec
test
xchg
repz
inc
or
add
add
loop
call
adc
lods
inc
sbb
adc
fisubrs
fcmovnb
inc
mov
stos
jmp
mov
mov
sahf
imul
rcrb
test
imul
xor
lret
imul
xor
dec
mov
movsl
insl
mov
ljmp
mov
out
push
popf
mov
rcl
dec
mov
push
into
add
cs
inc
inc
pusha
gs
ret
sti
mov
pop
mov
pop
in
dec
loop
pushf
xor
enter
fmuls
faddp
lret
xor
leave
add
xor
lcall
gs
dec
xchg
clc
inc
rolb
cs
and
loop
xor
cmpb
pop
mov
lret
push
insl
cmp
es
inc
xchg
and
test
sbb
pop
xchg
mov
popa
xor
loope
jns
fstpt
adc
iret
clc
or
xchg
sub
lods
jo
pop
pop
das
loope
mov
and
inc
adc
loope
int3
rol
cwtl
cmpsl
nop
pop
call
movsb
fcmovbe
cwtl
cmp
mov
mov
xor
jg
out
outsl
subl
bound
mov
xchg
sub
lcall
ss
mov
das
xor
sbb
das
ljmp
mov
xor
inc
push
sbb
pop
pop
in
popf
dec
es
outsb
aam
jo
or
or
adc
xor
adc
inc
sbb
push
mov
mov
insb
dec
gs
loopne
in
and
push
iret
sub
mov
call
xlat
int3
adc
ljmp
and
shrl
fdiv
jns
sbb
push
cmpsb
in
div
pop
ret
mov
adc
push
in
cmp
pop
mov
dec
xor
inc
cmp
pop
mov
sbb
hlt
sbb
repnz
mov
pop
int3
into
mov
imul
xor
adc
hlt
cmpsb
insl
sahf
out
outsl
adcl
adc
xchg
lcall
ds
es
or
sbb
xchg
fidivrl
xchg
hlt
std
cltd
in
inc
fdivl
test
xor
rcl
cwtl
pop
dec
push
sub
cmp
mov
inc
fcoml
push
xchg
lahf
xor
pop
aaa
inc
cli
add
pop
jecxz
divl
pop
fnstenv
cld
mov
adc
shrl
mov
jnp
outsl
aam
shll
jnp
jbe
mov
outsl
push
shr
inc
mov
jns
cmp
out
in
fidivs
mul
aaa
mov
xor
push
rcll
in
inc
xorl
jp
mov
ljmp
aad
sbb
pusha
in
adcl
hlt
sbb
jo
sub
mov
negb
xor
lock
rcrl
ss
mov
test
lods
test
in
inc
mov
xchg
sbb
adc
imul
push
mov
bound
jecxz
jae
adc
cmp
lods
and
enter
ljmp
adc
lea
xchg
inc
adc
mov
cmc
out
inc
pop
les
push
inc
mov
mov
addb
movsb
mov
push
divl
push
sub
adc
cmp
popa
push
call
jb
sti
xor
xor
cmp
adc
jo
add
inc
int3
fdivl
das
rcrl
sbb
mov
cmp
sub
ds
or
jb
andl
ror
dec
cmpsb
cld
in
and
mov
ss
sarb
movl
pop
push
les
pop
int
das
add
mov
mov
add
fnstenv
call
and
cmp
xor
inc
pop
jl
xlat
je
xchg
inc
icebp
in
adc
fsts
inc
or
leave
dec
cmp
mov
cmp
xchg
adcb
mov
pop
fwait
mov
push
push
push
js
push
mov
xchg
rcr
pop
dec
xor
push
push
stc
rorb
ljmp
ret
mov
pop
mov
xor
ljmp
stc
shrb
mov
and
mov
fmulp
jge
pop
add
shll
repz
out
outsl
imul
mov
push
push
mov
cmp
fstl
aas
xchg
int
stos
pusha
icebp
ljmp
sub
xor
jno
outsb
and
xchg
loopne
jo
imul
mov
movsb
lret
movsb
int3
lea
ss
movsb
push
sahf
nop
pop
out
cmp
lods
mov
xor
js
mov
popw
mov
cmp
inc
int3
insb
push
or
lea
popa
xchg
das
inc
and
outsl
pop
xchg
out
imul
xor
mov
call
pop
fwait
pop
into
adc
mov
sarl
or
pusha
sbb
jmp
iret
scas
push
out
cli
mov
cltd
lret
lret
addr16
push
cmp
or
mov
sbb
mov
cmp
adc
cltd
dec
mov
test
addl
inc
or
dec
addr16
sub
inc
adc
repz
xor
rorb
bound
mov
inc
push
pop
push
icebp
je
pop
clc
push
jne
adc
and
xchg
mov
cmp
and
cmp
aad
pop
mov
leave
or
icebp
aaa
cmp
frstor
mov
cmp
inc
pop
jp
insl
cmpsb
pop
test
sub
add
sbb
mov
mov
stos
es
mov
push
cli
fsubrs
cmc
in
mov
xchg
int
cmc
xchg
cmpsb
test
popl
add
add
imul
jbe
enter
add
fisttpl
push
orl
mov
jbe
cli
arpl
sahf
adc
xchg
pushf
xlat
pop
jl
pop
inc
sbb
pop
jge
jmp
mov
adc
cmc
add
gs
pop
scas
insb
push
mov
pusha
stos
cmp
daa
enter
pushf
icebp
cmpl
inc
mov
add
sub
push
popa
jno
xor
cltd
pop
dec
in
addr16
push
int
sbb
shrl
jb
neg
sti
cwtl
dec
scas
xlat
cltd
add
jne
sub
xor
cmpsb
les
dec
scas
leave
mov
cmpsb
call
add
mov
fimull
aas
xchg
cli
lea
jns
sbb
in
repnz
xor
xchg
arpl
xor
xchg
push
pusha
cltd
and
ret
jo
mov
lcall
in
mov
adc
test
jge
bound
out
jle
xchg
stc
lahf
sbb
arpl
mov
adc
push
push
lods
pop
movsl
out
pop
mov
testl
xor
ret
adc
jp
mov
xor
and
cmp
xchg
push
push
sub
les
mov
ret
inc
dec
popf
sub
pop
or
dec
nop
mov
push
arpl
lahf
hlt
psllq
std
adc
mov
or
adc
out
loope
mov
ds
icebp
andb
pop
fcoms
cmpsb
fcomps
mov
and
outsb
jnp
clc
hlt
sub
mov
adc
xchg
dec
jae
hlt
mov
add
pop
aaa
icebp
mov
pop
mov
or
aad
movsl
cmp
out
xlat
jg
test
ret
pop
cwtl
in
cmp
loope
xchg
outsb
pushf
mov
jecxz
jae
loopne
icebp
push
jmp
icebp
cmpsb
sti
outsb
aam
xor
test
inc
movzwl
dec
push
push
addr16
mov
daa
rcrl
repnz
fstpl
roll
out
cmp
cmpsl
hlt
out
gs
inc
cltd
out
jmp
andl
sbb
push
jge
sbb
insl
or
xorb
cmp
mov
in
push
sub
mov
fcoml
push
mov
gs
ljmp
adc
je
test
push
cmp
cmp
sub
stc
data16
sbb
faddl
push
insb
cmpsl
pop
and
push
dec
mov
mov
addl
jmp
movsl
sar
cli
lahf
hlt
pop
jo
pop
movsl
mov
dec
roll
sarb
lret
out
aas
adc
pushf
jecxz
add
xchg
mov
pop
addr16
dec
nop
lret
out
xchg
cmpl
cmp
je
adc
add
xchg
or
sbb
ret
ret
fstps
and
rcrb
cli
repnz
push
hlt
das
xor
ljmp
mov
pushf
or
mov
xchg
gs
cmp
add
rcr
mov
or
pusha
mov
lds
pop
lahf
aad
loopne
lahf
cmp
and
pop
sbb
dec
idivb
mov
jmp
movsb
inc
mov
fldl
roll
addb
js
call
je
insb
xchg
iret
test
mov
pop
and
les
jecxz
gs
stc
jno
fidivrs
mov
mov
lods
pop
ss
sarl
repnz
mov
xchg
jnp
sbb
push
mov
jle
fs
xor
rcll
sbb
fs
test
movl
in
arpl
std
addl
es
stos
mov
xor
repz
les
loopne
and
push
sub
pop
push
or
dec
pop
or
jnp
test
test
inc
push
dec
mov
repz
cmpsb
sub
sbb
stc
loope
sbbb
xchg
mov
mov
xchg
cld
cmpl
dec
xor
lea
and
mov
inc
scas
lock
lret
pop
pop
jle
dec
out
push
dec
cmp
fs
scas
cmp
mov
xchg
mov
ds
cmc
mov
mov
xor
sarl
adc
pushf
sub
test
sub
cmp
xchg
add
jl
push
imul
lock
aaa
push
mov
or
stos
cmpsb
jmp
pop
popl
jmp
loopne
inc
ror
sub
cmpsl
cs
pushf
mov
aam
push
es
ss
push
xor
mov
sbb
stos
sti
lcall
rorl
loop
shll
outsl
aad
add
pop
frstor
repnz
cld
movsb
jo
das
das
adc
mov
jg
ja
sbb
sub
mov
ljmp
or
and
and
xchg
fwait
push
sbb
inc
inc
lock
mov
imul
ja
inc
mov
xor
adc
mov
cli
inc
iret
and
and
iret
inc
shrb
xchg
leave
dec
fs
xchg
int
xchg
lret
ficompl
lods
xchg
jb
push
repnz
mov
cld
imul
or
mov
loop
in
insl
repz
pop
mov
dec
mov
xlat
hlt
sbb
jbe
or
mov
addb
dec
in
mov
imul
pop
sub
mov
and
pop
fwait
lock
push
sbb
stc
cmp
aas
addr16
mov
out
adc
push
jp
jnp
jmp
xchg
push
test
mov
lods
les
sahf
mov
push
xor
outsl
movsl
sub
rcrl
int3
pop
mov
test
icebp
xlat
iret
loopne
fadds
cli
jne
ret
xor
lock
inc
out
ficomps
idiv
cwtl
jo
sahf
push
aas
icebp
jne
jne
notb
pop
inc
mov
jae
xor
or
js
cmp
out
jne
shlb
adc
push
sub
push
sbb
shr
loopne
js
adc
mov
xor
lock
pop
rcr
test
arpl
and
aas
cmp
push
int3
pop
gs
inc
popl
jae
cmp
addr16
push
mov
push
imul
sbb
mov
and
lahf
xor
jp
jmp
loop
xchg
mov
bound
sti
call
push
dec
xor
test
lahf
add
mov
inc
xor
adc
movl
xor
add
dec
and
andl
enter
int
test
sub
les
pop
fstpl
mov
cmpsl
xlat
push
in
mov
cmp
mov
xlat
or
jmp
aad
and
inc
fistps
adcl
int
push
mov
and
popa
xor
ret
filds
push
ss
out
orb
sub
pop
mov
pop
mov
inc
in
test
enter
lods
leave
repz
int3
cmp
mov
in
xlat
sbb
dec
mov
repnz
out
xchg
add
aad
psadbw
sub
pop
mov
in
xor
testl
shlb
scas
test
xchg
and
lret
xor
stos
pusha
push
push
incl
inc
add
xchg
cmp
idivl
clts
dec
mov
das
jbe
lock
sub
or
cmp
in
aad
addr16
push
pop
insl
testl
fdiv
adc
sbb
xchg
xchg
jmp
cwtl
push
cmp
int3
adc
iret
inc
mov
cmp
and
sbb
pop
out
enter
push
cli
pop
jne
rol
mov
sti
dec
test
xor
push
and
mov
jbe
mov
sbb
js
mov
push
mov
lret
sub
bnd
imul
or
leave
push
clc
xchg
aam
divl
jns
xchg
push
pop
int3
adc
mov
lahf
les
pop
cwtl
mov
xor
xor
sub
test
rorl
out
mov
stos
popf
sti
aad
adc
pushf
decb
pusha
dec
jno
xor
inc
push
gs
in
int3
mov
std
or
mov
fwait
cmp
inc
push
push
stos
dec
sbb
mov
pop
or
dec
leave
cmpsb
daa
shlb
mov
shlb
jbe
cld
in
lods
ljmp
cltd
lds
add
mov
cmc
ret
xchg
in
cmpsb
xchg
or
scas
popa
or
pop
push
mov
lret
clc
push
stos
clc
adc
loopne
mov
jo
nop
es
fwait
cltd
filds
push
jnp
subb
adc
push
ss
jge
mov
orb
in
xchg
sbb
ret
xor
sti
dec
arpl
or
lahf
aad
jmp
leave
mov
aaa
imul
xlat
das
xchg
fcmovb
sub
test
mov
dec
loope
pop
icebp
imul
push
data16
fwait
mov
dec
fists
pop
sub
inc
mov
xchg
cli
std
iret
lock
mov
sti
mov
lahf
inc
sbb
mov
jl
cmp
loopne
aam
in
xchg
push
cmpsb
sbb
test
fimuls
pop
and
or
outsl
divl
pop
iret
cltd
sbb
fimull
hlt
out
fisttpll
data16
push
pop
inc
dec
sub
cmp
xchg
cmc
pop
daa
jmp
mov
in
pop
sub
icebp
sub
lret
test
pop
xchg
mov
ljmp
add
sub
imul
out
call
iret
pop
into
push
push
jo
imul
movsb
dec
cwtl
dec
xchg
push
and
adc
pop
ljmp
bound
je
in
call
fstl
jb
dec
cmc
add
jae
xchg
add
jbe
jo
std
jbe
xchg
lret
xor
mov
lea
push
leave
jns
lret
xchg
fcoms
mov
out
out
sbb
aad
roll
jae
js
aaa
in
in
push
ljmp
push
in
xchg
scas
inc
jmp
test
push
and
dec
inc
out
or
or
mov
add
add
das
mov
loop
rclb
insb
push
out
es
mov
mov
stos
push
rorl
lock
sbb
loope
iret
mov
mov
xchg
enter
sbb
jb
xchg
lods
sarl
pop
jne
push
ret
fidivrl
add
test
push
mov
addl
fsubrs
xchg
lret
outsl
jg
data16
cmp
add
jmp
outsl
mov
jbe
aam
popa
inc
scas
fidivs
push
push
loopne
sbb
cmp
in
stos
adc
imul
cmc
cli
dec
lods
add
push
cmp
cmp
sbb
jle
test
inc
push
mov
bound
sbb
repnz
push
in
stos
push
pushf
aaa
mov
pop
cwtl
pop
loope
mov
rcll
push
enter
arpl
out
cmpsl
mov
push
imul
popl
push
bound
add
jle
call
xorl
mov
xchg
cmp
sub
nop
jl
dec
sub
std
loope
mov
cmp
repz
fdivrs
aaa
fs
sbb
test
mov
pop
adc
fildll
xchg
mov
add
xor
std
xchg
sti
mov
jbe
enter
fistpl
popf
stos
xchg
insl
mov
clc
sub
mov
xor
test
sbb
push
or
xor
shlb
xchg
mov
cmp
pop
pop
shll
inc
pushf
xchg
cltd
sbb
repz
inc
mov
inc
and
jg
mov
stc
pop
stc
xchg
inc
dec
sub
repnz
sub
lock
aad
lods
popa
clc
out
icebp
out
cmp
xor
xor
jge
xchg
es
rclb
push
add
pop
icebp
xchg
nop
shrb
or
inc
xchg
repz
out
ds
lock
mov
mov
jmp
xor
or
test
rcr
loopne
mov
and
sbb
test
popf
jb
loop
jecxz
jge
dec
push
les
pop
aam
outsl
je
les
out
jp
sub
push
iret
std
cltd
mov
mov
enter
fnstcw
xchg
addl
push
dec
lea
or
mov
xchg
push
inc
and
popf
inc
fisttps
insl
adc
pop
cmp
test
in
ret
sti
je
fcoms
jo
in
aas
cmp
pop
jbe
mov
iret
jmp
icebp
pop
mov
adc
pushf
stos
inc
jmp
and
movsb
add
test
fnstsw
push
jl
mov
sub
inc
add
add
fisubs
jb
daa
loop
lock
in
xchg
cmp
stc
mov
pop
cmp
pop
mov
cmpsl
jae
and
inc
aam
inc
jo
outsl
and
data16
test
sbb
sub
xchg
or
cmpsb
test
adc
push
push
mov
or
jmp
ds
mov
adc
pop
jmp
push
cmp
xor
fcmovb
repnz
adc
test
and
xchg
push
cltd
mov
jl
xchg
call
rorl
push
adcb
jmp
or
dec
mov
dec
iret
xchg
xlat
pop
xchg
rcll
ds
cmpsl
enter
cmpl
aad
or
stos
mov
lods
out
jmp
xlat
add
xchg
lea
xor
daa
lahf
mov
xor
rclb
movl
xchg
jle
mov
adc
rclb
icebp
mov
xor
push
cs
cltd
gs
cmp
jmp
xor
shll
into
cltd
mov
mov
bound
add
notl
pop
mov
or
rcrb
push
lahf
roll
int
adc
into
dec
xor
pop
outsl
cmp
sbb
mov
fildl
cmpsl
rorl
jns
rcrl
xchg
adc
xchg
inc
loope
pop
add
xchg
pop
mov
rorl
aad
scas
mov
jnp
xchg
lds
cmp
mov
dec
jmp
push
xchg
pop
cs
sub
cli
cmpl
imul
cli
mov
pusha
out
shr
mov
jo
mov
lahf
push
test
pop
cmp
adc
dec
xchg
ret
lods
popf
and
mov
sub
sub
xchg
dec
daa
dec
push
add
repnz
nop
mov
mov
leave
push
lret
jecxz
int
gs
pop
fdivrs
test
fcoms
rcrb
outsl
je
pop
lahf
and
mov
mov
and
mov
dec
gs
jp
pop
loope
mov
mov
inc
sbb
push
or
sub
xchg
mov
jb
mov
aad
dec
inc
mov
into
xlat
jb
test
inc
out
sbb
dec
test
subb
into
mov
mov
test
in
popa
mov
jle
aas
fucomp
nop
nop
xchg
pop
mov
cmp
push
xor
fidivl
sub
jmp
bound
jb
xchg
icebp
lret
dec
ja
daa
sub
xor
adc
mov
into
or
insl
xchg
aam
out
or
mov
or
cmpsl
xor
lret
sti
sbb
dec
mov
lods
inc
adc
ss
cwtl
loop
or
jno
xor
add
xchg
mov
or
mov
flds
dec
or
mov
stc
push
mov
mov
adc
clc
sarb
cli
andb
cmp
insb
incb
adc
out
shll
cld
sahf
mov
fsts
fnstenv
out
lahf
aaa
xchg
out
cltd
je
sub
push
xchg
sbb
ficoms
negl
inc
ss
mov
xchg
cs
sbbl
mov
in
lcall
mov
movsb
call
lods
and
int
adc
rolb
ds
push
mov
mov
cwtl
dec
and
test
push
les
in
adc
cmpsb
cs
orb
jnp
scas
jnp
jns
mov
push
popa
cltd
sbbl
xor
lret
mov
in
lret
jbe
adc
mov
int
pop
mov
dec
cmp
icebp
int3
sub
nop
pop
jp
dec
pop
or
shrb
sbb
int3
cmc
aam
sbbb
push
outsl
popa
sarl
mov
jae
push
mov
push
xchg
sarb
xchg
inc
jge
mov
call
je
mov
cwtl
adc
or
or
mov
jae
sbb
imull
inc
cmpsb
divl
dec
nop
fwait
pop
add
pushf
mov
fisttps
mov
sbb
cmpsb
mov
inc
mov
pop
push
mov
push
icebp
pop
bound
inc
shrb
dec
xor
push
outsb
mov
inc
inc
mov
push
iret
sub
push
fstpt
in
lahf
pop
push
nop
push
or
out
xchg
sbb
ljmp
dec
fisubs
test
lahf
fs
mov
ret
jecxz
nop
inc
lahf
cld
pop
fstl
jne
aam
icebp
xorl
or
adc
add
mov
jl
mov
push
inc
or
aad
push
dec
in
pop
mov
ret
stos
rolb
sahf
add
dec
test
loope
adc
stos
adc
adcb
mov
movsb
movsb
and
movsb
cwtl
cli
cmc
popf
sub
or
add
or
test
lds
in
rcl
decl
out
addb
fs
shll
adc
mov
inc
add
cs
in
add
mov
popl
adc
and
lds
jo
push
imul
push
sti
jle
scas
push
int
cmp
mov
or
ficompl
pop
add
xchg
dec
xchg
push
mov
mov
insb
jb
jge
push
stc
push
loopne
and
dec
int3
test
in
cwtl
lock
iret
push
jp
aad
push
out
repz
cmp
xor
inc
pop
pop
stos
inc
mov
add
push
movsb
test
add
and
sbbl
sti
mov
xchg
movsb
dec
mov
sbb
jae
mov
and
xchg
movsb
jae
jecxz
add
inc
jbe
in
scas
mov
and
or
mov
push
bound
cmp
int
jnp
dec
out
pusha
aam
mov
addr16
pop
mov
jmp
lds
dec
lretw
mov
lea
fsubrp
fldt
stc
pusha
test
pop
pop
in
xchg
les
sub
add
pushf
push
stos
sahf
xchg
movsl
xchg
jno
mov
in
inc
daa
repz
jae
mov
test
xchg
jbe
insb
mov
lods
gs
sbb
jecxz
jnp
shrb
test
imul
orb
stos
je
cwtl
test
inc
sbb
xchg
jge,pn
mov
hlt
nop
push
pop
or
adc
divl
adc
add
push
int3
aam
xor
xlat
mov
push
fistl
in
jg
xor
pop
loop
into
ja
inc
and
sub
mov
mov
adc
cmp
fnsave
cld
pop
scas
mov
cmpb
lret
aaa
call
mov
mov
lahf
flds
ds
out
sbb
jge
dec
sbb
stc
push
mov
repnz
dec
ljmp
mov
out
lods
or
mov
test
jg
lret
push
notb
orl
fstpt
popf
in
mov
mov
mov
or
icebp
push
out
mov
aas
insl
push
mov
cmp
xor
lods
repnz
sbb
xor
gs
in
mov
mov
bound
add
jne
and
jecxz
outsb
cltd
xor
and
les
sbb
cmc
fldenv
shll
rcr
movsl
jmp
out
pop
xchg
in
pop
or
fwait
mov
rcrl
xchg
in
add
adc
out
aas
inc
outsl
fmulp
stc
rcr
and
cs
mov
icebp
xlat
mov
sub
jle
out
mov
cli
hlt
sbb
and
or
repnz
enter
scas
test
test
outsl
gs
outsb
mov
xchg
je
call
das
aas
cmpsb
push
dec
adc
sarb
xchg
jae
subl
pushf
inc
aaa
mov
mov
push
notb
rorb
or
push
arpl
cmp
sbb
fwait
lret
mov
repnz
or
dec
pop
loopne
push
cmc
inc
sub
jle
dec
jge
pop
in
or
jb
enter
ret
mov
mov
addl
es
out
mov
vdivsd
mov
dec
movl
xor
cli
cld
xor
inc
aas
outsl
mov
repz
fistpll
push
cwtl
push
fistl
cltd
mov
dec
outsl
repz
int3
iret
popf
mov
adc
add
fadd
mov
test
pop
inc
sub
int3
jns
out
pop
js
loope
sbb
cmpsl
aam
lret
dec
paddw
hlt
aaa
adc
mov
inc
popf
enter
icebp
in
loope
add
stc
sub
int3
dec
into
jl
pushf
add
adc
test
mov
mov
stc
roll
and
sahf
push
call
cld
inc
xchg
pop
daa
cmpsl
stc
add
dec
shl
push
xchg
aad
jg
xchg
push
lcall
sub
push
pop
and
clc
mov
jne
outsb
fldt
loopne
sarl
pop
lods
call
push
or
and
jl
push
push
jl
mov
sbb
jmp
fcoms
lcall
or
add
or
das
scas
mov
inc
fstps
leave
cmpl
push
jecxz
aas
pop
pushf
add
mov
das
fnstcw
scas
xorl
popf
fmuls
xor
jg
insl
cwtl
xchg
loope
popa
insl
fnsave
sbb
addr16
insb
dec
loop
jp
push
sbb
xchg
add
mov
leave
movsb
and
rolb
add
mov
cmp
jne
dec
jne
xor
fmull
lret
sub
clc
pushl
pop
xchg
std
bound
inc
stos
xorb
jp
nop
mov
fs
xor
mov
adc
mov
lahf
mov
in
xor
or
nop
rcl
mov
mov
insl
push
lds
add
orl
and
push
push
adc
xchg
aam
test
inc
add
adc
pop
lods
xor
adc
mov
shll
insb
fldenv
xchg
mov
xor
shll
loope
xchg
and
inc
addr16
pop
sbb
fidivs
or
sub
push
lahf
repz
enter
roll
xorl
mov
lods
popa
cltd
testb
jmp
leave
cld
or
mov
addr16
push
addr16
fsts
xor
mov
adc
adc
jge
or
xchg
push
jo
rcrl
mov
vminss
repnz
xchg
sub
mov
scas
ljmp
popa
or
push
orl
cmpsl
jmp
jle
popf
cltd
aad
jne
ret
xor
rcll
push
icebp
dec
add
adc
pushf
test
loope
insb
xchg
cld
imul
arpl
insl
mov
es
outsb
imul
dec
mov
pop
xor
push
xor
cmp
push
xchg
aam
sub
xor
ret
mov
jmp
pop
jne
loope
cmp
cmpsl
je
dec
push
loopne
movsb
loope
xchg
je
inc
push
xchg
lods
push
adc
cmpsb
xchg
jo
imull
add
movsl
mov
pop
cmp
or
add
stc
mov
fnstsw
mov
pop
jne
pop
mov
loopne
lea
jnp
mov
jnp
push
mov
sub
ss
mov
test
bound
call
pop
push
aas
idiv
dec
stos
outsb
ljmp
sbb
insl
mov
shll
das
decb
jo
sub
je
scas
push
scas
sbb
inc
jae
mov
xchg
mov
ret
and
adc
xor
dec
outsb
sub
inc
and
lret
xchg
icebp
push
xor
xor
sub
test
mov
mov
jo
dec
fldl
and
pop
sbb
rcl
mov
pop
inc
stos
out
test
or
cmp
and
sbb
or
popf
jle
lcall
xlat
xchg
inc
inc
inc
mov
imul
leave
dec
xor
test
jg
pop
xorl
pop
add
nop
pop
xchg
fstpl
xchg
inc
push
add
push
rcrb
insb
jnp
inc
add
subb
jb
pushl
cmp
pop
rorb
adc
fcomp
pop
cmc
xchg
push
lds
aam
add
mov
jp
or
repz
jmp
sub
xchg
ja
jmp
dec
xchg
dec
es
xor
jle
das
mov
fmull
jecxz
mov
shrl
sub
xchg
bound
push
cmp
or
pop
xchg
ds
pop
mov
inc
loope
mov
cmp
mov
dec
mov
aam
out
lcall
arpl
xchg
pushf
int
adc
dec
mov
pop
adc
cmp
cmpsl
lods
dec
dec
cmp
inc
add
fwait
cltd
enter
inc
divb
stos
divb
leave
inc
jbe
outsl
mov
jmp
outsl
arpl
gs
inc
std
sahf
inc
pop
fadd
int
mov
mov
outsb
mov
enter
sub
mov
pusha
aaa
lahf
ljmp
fnstenv
xor
or
sub
movups
cmpsl
bound
and
jno
sahf
mov
movsl
jb
sahf
sub
cmp
inc
or
cmp
dec
lds
add
xchg
push
jecxz
cmp
mov
clc
out
xor
test
in
popf
add
pop
or
xchg
leave
mov
addr16
insl
insb
sub
hlt
add
ljmp
inc
xorb
dec
jb
jo
xchg
nop
into
xor
xchg
push
mov
jmp
into
and
imul
adc
dec
push
push
repz
out
jg
dec
arpl
andb
and
call
repnz
sub
lret
stos
js
mov
cmp
jg
jl
jae
mov
add
jmp
iret
aam
fsubr
jns
pop
lret
xor
nop
push
insl
jmp
mov
jns
mov
leave
ljmp
or
enter
adc
mov
inc
xor
xor
push
mov
dec
pop
cld
ljmp
test
or
pop
rol
lahf
ss
je
inc
jg
push
out
mov
jb
dec
mov
fdivl
jns
out
pop
sub
test
inc
and
xor
mov
pop
aam
mov
pop
les
cltd
test
cmc
fld1
pop
je
xchg
mov
in
lahf
inc
mov
sub
sarb
add
xor
std
dec
dec
xor
lea
bound
or
add
ret
loopne
test
imul
andb
jle
pop
sub
lock
add
fidivs
mov
mov
push
pop
push
jno
jge
adc
or
xor
mov
push
inc
or
jae
sbb
pop
cmp
stos
pop
stos
mov
fadds
inc
outsb
mov
lock
sbb
mov
xor
fildll
xor
shl
push
cmp
in
in
mov
test
mov
movsl
inc
mov
hlt
sbb
xchg
push
mov
push
repz
jmp
stos
scas
pusha
cltd
push
into
daa
xor
xchg
mov
daa
pop
fwait
add
rorl
daa
push
inc
inc
sbb
dec
scas
or
push
push
aaa
sub
mov
push
add
or
out
mov
push
lock
test
ficoml
cwtl
pushf
lds
shlb
pushf
cli
xchg
adc
ljmp
aad
out
jg
jmp
and
push
aad
repz
in
pop
sub
adc
sub
aaa
das
mov
lret
add
ret
sub
dec
icebp
lea
pop
fstpt
clc
add
scas
scas
daa
shrb
addr16
add
cld
call
add
dec
jge
push
popf
aam
mov
pop
in
jae
push
fadd
add
outsl
xor
pop
pop
aam
or
dec
pushf
sub
add
mov
sbbl
cmp
add
jl
loopne
sbb
jns
inc
push
push
lret
test
loop
cmp
divb
pop
sti
cmp
aad
insl
stc
push
loope
testb
hlt
jb
bnd
add
js
inc
cmp
and
add
adc
ret
xor
icebp
inc
add
mov
adc
lret
sbb
add
mov
push
mov
pusha
in
or
cmp
lcall
push
dec
scas
repz
int3
in
inc
cmp
xor
imul
bnd
repz
fninit
and
and
push
std
inc
xchg
mov
cmpsb
fwait
enter
in
shlb
xchg
mov
mov
daa
jo
adc
aas
mov
mov
pop
xchg
cwtl
out
mov
dec
sbb
shll
adc
xchg
dec
test
mov
fcompl
mov
test
or
mov
and
lock
jecxz
cmp
mov
dec
dec
insl
out
push
push
cmp
imul
pop
push
shlb
sahf
arpl
sbb
pop
add
clc
lret
xor
bound
xchg
ret
inc
cmc
loope
dec
mov
add
and
xor
or
inc
fucomp
cs
push
int3
int
sbb
xor
cmpsb
out
push
mov
data16
inc
pop
pusha
rcll
sahf
pop
fdivs
xchg
xchg
mov
mov
dec
rolb
ss
fdivrs
and
outsl
push
lock
lock
add
outsb
call
lods
sbb
jmp
popf
jle
adc
sub
nop
ret
jle
ss
stos
xchg
add
ds
adcl
sub
xchg
and
dec
xchg
roll
lods
in
dec
fcomps
push
aad
roll
rorl
mov
in
jl
jo
jg
das
lods
out
dec
test
daa
arpl
lock
jmp
add
cld
js
ja
ljmp
shlb
andl
out
fcoml
scas
add
and
nop
mov
cmp
sub
sub
mov
mov
push
scas
hlt
jmp
mov
mov
sar
sbb
stc
idivl
mov
pop
fs
ffreep
scas
cwtl
or
adc
aad
jmp
push
jecxz
ja
sub
lea
nop
sub
adc
fiadds
bound
arpl
pop
mov
out
and
and
jno
pop
stos
std
cld
ret
xor
mov
mov
fiaddl
xchg
push
scas
in
mov
jge
jnp
push
xchg
bound
lahf
push
lea
cmc
adc
jle
and
add
or
stc
inc
add
hlt
push
lret
push
hlt
dec
push
mov
inc
sub
out
pop
sub
xchg
daa
leave
and
aam
mov
dec
aad
out
push
outsl
nop
fisttpl
fwait
cwtl
xor
cmp
push
adc
iret
in
mov
cld
mov
xchg
pminub
push
jecxz
ror
in
or
shl
imul
sbb
sub
int
negb
mov
xchg
aam
fwait
sub
in
mov
imul
das
test
sbb
or
adc
jmp
add
decl
mov
pop
cmp
pop
mul
jnp
push
cwtl
dec
push
dec
arpl
inc
jmp
sbbl
mov
test
cmpl
cmp
subb
mov
jmp
aaa
sub
bound
ret
arpl
daa
insb
mov
sub
push
xor
xor
int
les
pop
push
dec
out
pop
in
xor
jl
xor
cmc
mov
lret
and
cwtl
aaa
out
and
iret
dec
dec
fwait
sub
in
xor
push
push
jne
cld
cwtl
xor
movsb
test
xchg
out
outsb
stos
xor
mov
cli
adc
ficoms
pop
stos
ja
sbb
in
lods
cmc
cmp
xchg
or
mov
xchg
add
xor
or
divb
leave
test
data16
xor
bound
and
movsl
sbb
xchg
ret
ret
or
dec
mov
inc
enter
dec
mov
cmp
sahf
adc
outsl
cmp
je
movsl
ret
aaa
idiv
ljmp
ja
cmc
sub
dec
lea
daa
sbb
fs
add
int
push
outsb
mov
or
pop
fstpl
lahf
add
pop
xchg
xchg
seta
and
lods
mov
call
fldcw
sbb
notl
pop
lcall
out
pop
hlt
enter
lret
out
in
scas
mov
dec
add
loop
cmp
or
imul
jns
insb
pop
lret
repnz
adc
scas
mov
in
dec
inc
adc
xchg
or
xchg
jo
sahf
push
ss
dec
add
repnz
or
or
push
inc
stc
jle
lds
mov
out
xlat
cmpsb
and
shll
push
jns
add
cmp
cmpsl
xchg
cli
jae
shll
adc
dec
add
pop
adc
nop
hlt
xor
js
and
jnp
adcl
mov
call
sti
adc
rorl
mov
cmpsb
or
aas
mov
pop
stos
pop
jns
xlat
repz
push
ret
xchg
adc
stos
insl
shrl
xor
inc
jge
and
add
adc
aad
cmp
ja
and
pusha
add
ss
jo
dec
dec
cmpsl
ljmp
jecxz
inc
and
sub
jmp
int3
adc
sub
xchg
testl
fdivrl
sbb
and
ret
nop
xchg
xchg
mov
xor
test
mov
and
addl
imul
mov
xchg
mov
cld
lea
aam
and
ss
push
sub
jl
jb
mov
lock
mov
insl
add
sarl
mov
mov
push
xchg
jb
les
test
cwtl
ret
in
popa
mov
aas
aad
insl
ror
dec
mov
repz
pop
pop
sbb
ljmp
mov
sbb
fildl
push
or
sub
adc
subl
dec
repnz
lock
cmpsl
jmp
cmpsb
imul
popf
pushf
out
xor
and
lds
stos
xsha1
cmpsb
lret
aaa
jnp
adcb
push
jmp
inc
cwtl
call
ja
mov
cmp
push
cli
xchg
push
xorl
aaa
and
bound
adc
inc
add
shll
jmp
jl
mov
clc
pop
aad
xchg
xor
sbb
xor
aaa
out
fistpl
pop
xchg
dec
mov
aaa
adc
leave
jo
outsb
adc
push
push
repz
leave
jnp
dec
inc
loop
sbb
lahf
sahf
pop
and
mov
fdivrl
popf
out
dec
add
dec
es
cmp
outsl
mov
out
xchg
shll
popa
adc
notb
xchg
xchg
ss
inc
leave
arpl
das
push
inc
icebp
adc
fadd
ror
popf
dec
cwtl
insb
inc
inc
mov
push
je
inc
sub
sub
xchg
pop
scas
cmp
push
push
adc
push
or
into
mov
mov
and
push
cmp
scas
es
xchg
in
das
in
cmp
pop
addr16
xor
dec
rcrb
outsb
xor
out
sub
xor
xchg
xor
int
pop
imul
in
inc
pand
sbb
xchg
mov
sbb
sarl
movsb
dec
mov
push
ja
sbb
leave
scas
mov
and
pop
or
adc
push
aam
fnstenv
lds
jg
cs
jl
jo
popa
and
shrb
jecxz
or
movsb
xchg
test
dec
push
shl
sbb
repnz
je
and
inc
loope
push
jno
jns
mov
mov
dec
xor
xor
faddl
sbb
andl
push
and
push
cmp
mov
jl
int
jnp
jmp
cmp
pop
inc
add
nop
arpl
pop
fsubrp
mov
aam
psllw
inc
jns
dec
shlb
jl
mov
sahf
mov
sub
out
addl
lea
mov
repz
inc
add
js
inc
add
mov
lea
ja
vmwrite
mov
testl
and
sahf
out
xchg
mov
subb
pop
nop
jno
test
repz
ja
shll
mov
loop
xchg
shrl
test
fimull
mov
push
mov
mov
out
icebp
pop
push
or
lea
push
test
pop
stc
or
mov
mov
xor
xor
push
int3
hlt
lret
and
push
push
add
shr
pop
jne
xchg
cmpsb
jae
lds
sub
push
push
fsubrl
pop
sbb
ret
int3
dec
mov
test
les
xchg
lods
adc
push
jno
cwtl
lahf
pop
sahf
scas
sbb
mov
ret
gs
mov
or
push
jp
rorl
xor
test
xor
sub
cld
jnp
jge
inc
insl
dec
mov
lret
push
add
orb
idivl
jg
lahf
int3
cmpsb
test
into
ljmp
and
ficomps
lds
negl
fucomp
insl
inc
pop
push
and
and
cmp
jbe
stos
xor
cmp
mov
clc
lcall
or
shll
mov
inc
mov
mov
or
sub
mov
les
push
and
sbb
negl
aad
jecxz
in
add
lock
cmp
or
aad
inc
roll
mov
mov
pop
dec
mov
aam
aas
sbb
pop
ja
cld
adc
js
inc
push
cmc
je
push
sti
push
push
xor
mov
es
push
mov
xchg
ss
clc
or
inc
scas
jae
mov
xchg
push
add
xchg
mov
push
out
sbb
lahf
mov
cld
cli
xor
in
jp
jl
aas
arpl
ljmp
mov
aam
mov
ret
mov
mov
cltd
xor
xor
jo
lds
mov
int
ds
fwait
and
movsb
sbb
mov
lods
sbb
lods
in
faddl
aaa
lret
jno
aas
loop
mov
ficomps
test
cmpsb
mov
test
mov
sub
pop
js
xchg
inc
ljmp
cmc
int
pusha
stos
lret
push
mov
xchg
xchg
mov
push
jmp
scas
loope
repnz
lods
dec
lods
mov
fstpt
push
pop
add
mov
push
cmp
and
aad
imul
add
je
js
mov
mov
enter
pop
insl
test
jns
pop
xor
pop
out
pop
cmpsb
pop
mov
mov
mov
add
xor
xor
repnz
add
xchg
xchg
and
pop
xchg
test
inc
fimuls
xchg
or
xchg
pop
addr16
add
jl
loop
push
pop
mov
in
mov
sbb
mov
xor
adc
cmp
test
fsubl
incl
sub
cmpsl
jp
mov
cltd
imul
jns
push
jl
and
fisubl
fildl
sbb
dec
insb
scas
mov
rcrb
clc
data16
mov
xor
iret
cmp
mov
stc
dec
sub
sti
dec
jne
mov
imul
roll
popf
in
sbb
mov
xchg
mov
je
adc
xchg
sbb
pop
ret
adc
jb
ret
lret
lods
cmp
rcrl
dec
mov
mov
stos
jmp
mov
das
jo
cld
or
jo
adc
and
pop
and
jo
mov
add
mov
push
xchg
sub
mov
jns
aas
push
rol
sbb
aas
push
xchg
jae
push
aaa
or
lret
outsb
fmuls
push
repz
mov
cli
pop
and
cmpsl
add
rorl
ljmp
icebp
adc
andl
repnz
add
test
xchg
jge
cmp
adcl
sub
inc
sbb
shll
mov
mov
xor
enter
imul
add
mov
add
outsl
jle
inc
add
push
xchg
cmp
add
add
or
push
push
negl
pop
ds
je
in
jae
fldt
outsb
scas
out
mov
or
addb
adc
sbbb
jnp
or
push
call
cli
mov
inc
sbb
dec
jmp
addr16
push
bound
push
xchg
adc
mov
divl
stos
mov
push
mov
das
jae
sbb
add
aam
mov
cmp
and
xor
cld
cld
repnz
lret
cwtl
inc
cltd
push
cmp
mov
mov
int3
cs
mov
aas
pop
sbb
add
fimuls
sahf
pop
or
sahf
mov
mov
cmp
mov
in
loopne
push
pusha
cmpsb
daa
fiadds
and
sbb
aas
push
mov
sti
cmp
dec
push
and
repnz
adc
pop
xor
in
or
les
hlt
sub
mov
ret
fcmovne
and
scas
cmp
dec
dec
add
inc
dec
push
call
cmpsb
jmp
push
xchg
out
lods
mov
mov
sub
ss
xchg
adcb
imul
cvtdq2ps
loopne
fldenv
sbb
cmp
adc
in
pop
sub
dec
dec
adc
hlt
lret
jb
fdiv
push
add
push
imulb
stos
sub
xchg
aad
fs
or
loope
cmpsl
or
decl
imul
xchg
cmp
repnz
mov
lahf
and
fcomi
repz
enter
jno
fwait
ss
hlt
mov
std
fisubrl
fildll
cmpl
pop
jne
jno
and
mov
xor
jnp
ds
leave
xor
mov
dec
sub
iret
or
inc
and
jne
adc
inc
stos
cmp
lods
cmpsb
adc
jp
mov
mov
add
sub
dec
loope
cld
ljmp
pop
fstp
into
push
mov
mov
xor
inc
xor
aas
flds
jmp
iret
push
into
adc
dec
aam
mov
inc
xlat
scas
cmp
mov
mov
pop
push
ss
push
out
sub
outsb
jge
lods
xor
cmp
cli
add
es
out
mov
imul
mov
or
jno
in
mov
cwtl
into
xchg
scas
xchg
dec
addr16
es
jb
mov
imul
add
cmp
stc
ja
in
or
cltd
adc
stc
iret
out
jecxz
jecxz
push
cmc
inc
lcall
pop
orb
arpl
mov
cmp
mov
push
push
imul
test
insb
add
jge
xlat
sbbl
mov
pop
shll
pmuludq
add
repz
in
and
pop
cwtl
cli
mov
push
fists
ja
int3
popf
or
rorb
pop
push
sub
sar
mov
lea
push
dec
rclb
mov
xorl
daa
mov
sbb
test
pushl
add
cwtl
push
mov
andb
aaa
lds
xor
jne
int
addr16
jg
jecxz
leave
repnz
into
pop
sbb
xchg
add
or
aas
push
push
popa
xorl
jns
pop
fidivl
pop
jns
lret
in
and
ss
rolb
push
daa
dec
mov
jo
std
sub
jg
cmp
out
fbstp
mov
lcall
orb
adc
jbe
in
xchg
jbe
and
pop
pop
test
jb
push
mov
sbb
aaa
mov
mov
add
cli
mov
push
sub
std
mov
mov
xchg
outsl
or
lahf
and
cli
jecxz
add
sbb
jae
lret
or
ret
aas
les
sbb
testl
out
mov
lcall
add
fstpl
sub
adc
mov
cmp
jl
and
roll
or
movsl
and
lret
jmp
and
ret
push
dec
push
std
and
push
cmpsb
jbe
sbb
inc
mov
sbb
push
xor
push
std
notl
adc
mov
leave
pop
out
lret
mov
les
mov
lahf
sub
repnz
or
xor
sarl
data16
das
adc
lods
cmp
jns
out
pop
or
pop
int3
testl
sahf
xor
fimuls
xor
push
sbb
imul
imul
and
xor
insl
push
pop
sub
std
lret
out
xor
sub
sbb
xchg
mov
fs
repnz
rorb
cmpsl
test
ljmp
in
inc
movsl
lock
rcrl
insl
pop
pop
or
mov
arpl
mov
mov
jge
insl
syscall
daa
pop
sbb
dec
mov
xchg
pop
mov
xchg
adc
xor
fs
mov
fdivrl
cmp
movsl
xchg
cwtl
test
mov
cltd
xchg
jl
nop
stc
push
add
scas
mov
ja
roll
sbb
loopne
pop
xchg
mov
pushf
enter
xor
outsb
jg
jg
jae
adc
xchg
mov
xchg
sub
bound
dec
fstl
mov
loope
push
dec
add
add
enter
dec
sbb
or
imul
or
mov
lea
and
sahf
adc
leave
sbb
in
jmp
push
adc
int3
xchg
scas
pop
icebp
pop
and
les
rorl
bound
sbb
dec
lock
call
mov
push
xchg
xor
fcmovnbe
ss
aam
iret
push
mov
mov
fisttps
inc
cli
adcb
xor
enter
test
popa
loopne
lcall
adc
pop
fxch
out
cmovg
test
cmp
je
mov
mov
sub
outsb
jb
xchg
mul
incl
das
fcoml
xchg
push
cwtl
cmpsb
ss
mov
shl
dec
and
decl
mov
loopne
les
pop
push
jo
lret
pop
test
mov
cltd
mov
sub
add
repnz
xchg
jecxz
mov
lcall
sbb
jge
mov
orl
mov
dec
sbb
mov
hlt
sub
clc
adc
subl
and
mov
pusha
xlat
popf
lcall
and
arpl
push
lret
xor
lcall
add
cmp
int
mov
dec
xlat
jmp
xchg
aad
in
add
lods
xor
repz
xor
lods
jns
movsl
mov
jmp
pop
and
cwtl
jae
out
rcll
sti
pop
lods
pop
arpl
add
jne
inc
cmpsb
out
fdivrs
mov
sub
mov
cmc
jg
pop
jbe
ret
jb
sahf
out
mov
push
movsb
std
or
push
fwait
dec
roll
adc
mov
or
push
popf
adcb
cmp
jg
fucomip
inc
stos
mov
sub
pop
or
popf
mov
mov
adc
xor
loope
ss
jno
inc
mov
jp
inc
in
test
xchg
fistpl
dec
js
andb
lcall
pop
adc
adc
dec
lods
pop
popf
mov
leave
mov
cmc
outsb
orb
mov
mov
movsb
mov
mov
and
js
das
mov
sbb
aam
mov
in
out
addr16
mov
hlt
jbe
pushf
jbe
out
inc
scas
xchg
push
test
mov
add
dec
sub
sbb
xchg
push
ret
pop
cltd
mov
das
push
fnstcw
call
in
sbb
or
inc
pop
dec
loope
dec
call
aaa
xorl
icebp
sub
repz
dec
das
loope
mov
push
or
popf
mov
cmp
adc
in
cmp
xor
xor
xchg
popa
jmp
je
ja
loopne
push
sahf
mov
aaa
into
and
mov
aas
dec
push
push
lock
inc
and
xor
adc
push
fdivrs
sbb
cmp
xor
or
in
sub
and
jns
cmp
xchg
pop
inc
cltd
mov
pop
nop
or
push
ffreep
pop
or
ret
jno
popa
pop
mov
jns
lret
inc
mov
push
dec
call
hlt
ja
xchg
sub
test
add
pop
mov
push
notb
mov
sub
imul
les
stos
add
xchg
subl
or
scas
fnstsw
scas
stos
and
xlat
mov
or
movsb
sbb
inc
mov
pop
adc
mov
fbstp
mov
cmc
mov
clc
popf
cs
cmc
sbb
and
mov
jl
fwait
loopne
sahf
xchg
lock
rcr
bound
int
fcomp
inc
sbb
push
dec
cmp
in
mov
inc
in
bnd
push
clc
pop
aaa
fstpl
shrl
jne
pushf
fwait
fs
aas
sbb
or
flds
into
imul
push
inc
insb
imul
mov
cltd
xchg
popf
dec
loope
mov
insl
fwait
stos
or
stc
fidivrl
cmc
xlat
jp
add
inc
cmp
cmp
xchg
cmpb
rcl
adc
lock
jg
pop
dec
je
or
pop
mov
sub
fbstp
std
dec
jmp
out
lahf
push
insb
xlat
jecxz
dec
cmp
pushf
inc
imul
mov
test
ret
jge
or
aaa
or
cltd
add
jp
pop
adc
rcrl
sti
mov
aam
mov
daa
mov
fs
loop
push
stc
jno
bound
repnz
insl
sub
scas
pop
dec
dec
and
mov
cmp
loop
loope
or
or
pop
js
data16
ja
or
loopne
out
add
sbb
dec
adc
jmp
popf
or
cmp
sbb
inc
outsl
ss
daa
jle
inc
xchg
push
dec
hlt
or
push
insl
xchg
popa
loop
dec
xor
dec
lcall
cvttps2pi
aaa
dec
jnp
mov
test
xor
mov
sbb
add
aam
mov
inc
ljmp
xor
inc
push
dec
movsb
cmp
insl
xchg
and
inc
aam
pop
jae
jbe
push
push
push
loop
bound
jge
adc
cmpsb
mov
inc
fiadds
sbb
es
loope
sbb
imul
push
xor
sbb
jecxz
stos
popa
fisttpll
inc
lret
fisttpll
mov
idivb
cwtl
xchg
push
pushf
push
leave
cld
adcb
ja
sub
fimull
or
add
jb
adc
cmpsl
and
sub
out
dec
fcmovu
mov
jge
je
hlt
sbb
mov
roll
hlt
push
pop
inc
jp
fcmovnb
and
add
jge
mulb
aad
imul
int3
and
add
orl
repnz
jbe
inc
test
rclb
movsb
test
mov
sub
scas
pop
dec
mov
adc
push
sub
xchg
in
rorb
cmpb
movsl
and
arpl
insl
pop
dec
int3
cltd
lcall
lds
cld
pop
inc
push
push
bnd
jg
mov
inc
jne
bound
mov
jmp
leave
ret
shll
je
pop
es
mov
lahf
pusha
mov
lods
mov
mov
mov
dec
jmp
mov
lea
pop
pop
mov
sbb
cmp
jecxz
lret
int
gs
lods
movsb
xchg
fcomi
mov
xor
sbb
loop
addb
inc
lods
xchg
iret
cld
repnz
jmp
dec
adc
cmp
push
cmp
mov
lods
sub
test
lcall
or
lret
adc
das
neg
ds
push
push
xchg
clc
and
dec
js
xor
mov
mov
jns
setae
fcmovbe
xchg
adc
push
adc
loope
insl
or
icebp
dec
push
ljmp
jbe
mov
inc
mov
dec
add
sbb
bound
es
test
dec
push
push
push
sub
test
jecxz
aas
xchg
imul
incb
ss
les
sbb
sbb
add
cs
push
into
mov
cltd
in
pop
add
popf
and
gs
mov
addr16
cwtl
call
mov
dec
mov
mov
cmp
mov
mov
and
outsl
ds
ficoml
jge
loope
adc
leave
jg
adc
adc
push
arpl
aaa
int
pop
mov
pop
sahf
add
pop
push
inc
fwait
decl
cli
mov
loopne
jecxz
loop
jge
or
mov
aas
movsl
hlt
movsb
dec
or
sarb
inc
push
sbb
adc
es
lcall
adc
rol
or
lret
pop
push
cmp
ds
cmp
cltd
jmp
cmp
or
loop
mov
ds
push
pop
in
add
leave
sbb
icebp
inc
bound
cmp
xor
jp
mov
and
mov
mov
pop
mov
lock
rcrl
dec
mov
cltd
fidivrl
aaa
xchg
test
test
repz
ret
mov
sub
ret
sarb
js
jle
out
xchg
inc
daa
mov
sub
cmpsb
dec
test
pop
mov
jle
push
pop
xor
js
adc
sub
jmp
pop
sbb
mov
cwtl
scas
mov
xchg
pop
push
out
arpl
pusha
sub
adc
sbb
cwtl
lret
out
jge
sahf
test
in
inc
sub
push
add
pop
cld
dec
fmulp
mov
sbb
and
pop
gs
mov
push
sub
jns
add
add
in
sbb
mov
fmull
lret
test
stos
repz
mov
int
push
and
sbb
dec
adcl
cmpsl
or
xor
xor
rorb
popf
pop
dec
pop
stc
mov
xchg
les
lock
inc
mov
adc
and
lea
sub
outsl
movl
addr16
pop
or
cmpb
inc
out
addl
cmp
add
pop
cli
pop
push
jmp
mov
mov
mov
scas
inc
sbb
add
outsl
mov
jge
or
jge
mov
add
loop
popf
das
dec
adc
rolb
pop
hlt
test
bound
jmp
mov
jg
adc
jae
cli
xor
push
dec
out
rcll
push
mov
push
bound
and
xor
mov
nop
mov
icebp
pushf
out
inc
jne
mov
push
jle
jb
icebp
jle
mov
ficomps
mov
in
dec
rclb
lcall
rorl
push
int3
xchg
popa
test
cmp
and
lods
test
xchg
jnp
dec
flds
or
push
sub
sbb
mov
mov
and
int
dec
push
cmp
cmp
popf
lods
or
xor
es
out
repz
loope
dec
scas
pop
fsubrs
int3
loope
dec
mov
or
stos
pop
xor
sub
ljmp
mov
inc
push
xor
cmpsl
leave
stc
lds
sbb
test
inc
xor
shrl
or
and
shrl
push
sub
pcmpgtw
adc
out
fbstp
fdivrp
movsb
fstpl
mov
hlt
jge
dec
fadd
mov
aam
imull
cmp
lahf
es
mov
in
enter
xchg
pop
mov
jl
jmp
pushf
cmpsb
mov
testb
out
fcoml
sbb
sbb
or
and
imul
jns
js
movsb
jmp
mov
inc
mov
and
add
jns
fadd
jp
insl
xor
movsl
es
xchg
shr
cmp
sub
loope
pop
dec
outsl
int3
scas
jo
or
je
xorl
popa
sbb
mov
mov
scas
adc
lcall
xchg
sub
rcll
dec
mov
xchg
push
outsb
jmp
mov
add
pop
lds
push
lea
mov
sub
mov
jp
aas
daa
mov
jge
mov
and
adc
mov
fs
xlat
mov
pop
lret
insb
push
xor
jb
or
xchg
xor
test
je
or
ffreep
xchg
into
into
les
popf
cmp
and
xor
and
jb
inc
cmp
ret
hlt
fs
fcoml
xchg
mov
aaa
cmp
jmp
out
inc
imul
aad
mov
arpl
popa
xchg
js
dec
call
mov
scas
aad
hlt
push
lock
cld
test
das
jecxz
nop
sahf
pop
js
inc
add
outsb
push
and
sub
ss
fcoms
adcl
xorb
pushf
hlt
xor
andl
jnp
or
fcomps
cmpl
hlt
test
jae
jb
into
sti
adc
popa
leave
mov
cwtl
sub
imul
scas
xchg
push
add
mov
or
fnsave
iret
cwtl
out
mov
in
fcompl
enter
cmp
xchg
mov
and
pop
xor
insb
xchg
adcl
mov
or
repnz
xor
in
push
popa
jl
adc
enter
mov
pop
or
cmp
inc
lds
inc
mov
sbb
and
xchg
outsb
aaa
dec
leave
js
in
fwait
lods
mov
pusha
loopne
lds
lahf
xor
negb
or
cmpsb
addr16
jge
cmc
xchg
sbb
test
comiss
gs
and
popa
mov
mov
lret
jecxz
sub
jl
or
xchg
aam
pop
stc
fimull
lcall
pop
mov
sub
dec
mov
adcl
mov
pop
outsl
jge
dec
jae
mov
push
xchg
xchg
sub
insl
leave
and
jnp
repz
pushf
cs
test
lock
lea
iret
or
adc
ret
aam
jo
mov
mov
push
int3
icebp
rcl
iret
xor
cmpsl
mov
test
shll
and
push
mov
push
popf
sbbb
push
mulb
or
inc
mov
inc
xchg
mov
ret
add
add
mov
stos
mov
pushf
stos
dec
sub
and
jecxz
or
xor
xchg
movsb
push
mov
sub
popf
loope
scas
mov
sub
shlb
mull
repz
fistps
push
add
and
aas
xchg
cmp
inc
lods
pushl
int3
mov
sub
xor
cmp
inc
dec
push
xor
sti
gs
pushl
es
das
pushf
mov
and
jg
xchg
dec
xchg
dec
pop
sub
fldl
fisttpl
into
or
mov
push
cmp
inc
ret
mov
mov
dec
fmuls
arpl
mov
and
adc
decb
push
scas
push
shll
frstor
xor
mov
pop
test
cld
mov
cmc
in
aad
mov
cld
mov
or
hlt
mov
jl
sbb
lret
subb
fstps
lods
push
sub
mov
sbb
cmpsb
dec
sbb
push
jbe
mov
jae
imul
stos
push
popl
or
iret
adc
mov
mov
loopne
jae
faddl
xor
lret
fs
cmp
xbegin
stc
leave
xchg
mov
xchg
mov
adc
ss
adc
stos
nopl
test
pop
repnz
out
mov
dec
test
or
out
cmp
ljmp
psubusw
stos
jno
xchg
ja
cmc
fdivs
dec
ljmp
ljmp
movzwl
cmp
push
or
jnp
pop
repnz
dec
sub
xor
jecxz
mov
aam
int3
ret
test
jno
sti
fsubrs
pop
iret
sarl
fisttpll
mov
pop
mov
sbb
mov
xchg
iret
aas
cmp
push
inc
addr16
mov
lds
sub
inc
lret
and
insb
scas
stos
xchg
pusha
dec
dec
and
test
adc
inc
cltd
pop
in
inc
jne
jl
pop
jmp
xlat
rcl
lret
shrl
bound
xor
lret
rcrl
std
pop
xor
popf
cmp
and
inc
adc
xchg
push
loopne
sarb
popa
cwtl
and
mov
rcr
daa
xchg
jg
inc
rcl
rorb
sarb
and
adc
sub
out
sarl
pop
int
clc
and
sub
sub
push
fisubl
add
add
fs
js
cmpsb
adc
mov
je
adc
pusha
push
push
mov
inc
cltd
mov
sub
nop
aas
jae
xor
xlat
cmpsl
jecxz
xchg
fucomi
xor
fld1
fs
pop
pushf
test
and
dec
xchg
push
sub
pop
cli
jmp
stos
sbb
sub
scas
rol
cltd
jae
addr16
inc
sahf
jp
out
cltd
int3
popf
pop
mov
dec
pop
jns
dec
daa
pop
ja
loope
call
lcall
das
push
aam
bound
dec
push
popa
and
jne
js
push
loopne
add
sub
inc
add
int
sub
arpl
jo
ja
addl
push
test
jo
mov
mov
into
cmp
and
std
mov
fnsave
iret
jne
mov
add
xchg
mov
pop
xchg
aas
stc
sbbb
dec
adc
inc
add
adc
cmpsb
cmpsb
ljmp
adc
ja
or
imulb
push
xor
inc
les
aad
dec
in
mov
ret
mov
cmp
pop
outsb
sbb
cmp
shrl
dec
push
lds
lret
cltd
xor
xorl
mov
mov
pop
jb
xchg
jbe
inc
adc
mov
cmpb
in
addr16
lcall
dec
pop
dec
mov
cwtl
mov
cmp
arpl
inc
int
xchg
scas
mov
hlt
sbb
xchg
mov
mov
fdivp
sub
jle
outsb
fwait
call
cmpsb
clc
sub
mov
sbb
pop
mov
arpl
mov
dec
mov
sbb
dec
scas
pop
mov
and
cmc
cli
mov
jns
mov
lret
shlb
fadd
out
out
mov
mov
movsb
pop
test
data16
mov
repnz
clc
xchg
mov
cmp
adcb
xchg
xor
repz
cmc
loope
dec
mov
outsl
nop
test
jmp
addr16
sub
ja
xor
mov
in
mov
out
aas
xorl
ds
push
push
xor
out
ret
mov
sbb
ss
fidivrs
lret
inc
sbb
jle
pusha
fldl2t
dec
jle
jne
divl
adc
adc
bound
push
mov
xchg
jae
inc
push
xor
idivb
xchg
mov
mov
fistpll
cmp
test
test
xchg
inc
push
in
movsb
xor
stos
ds
pop
sbb
cmp
arpl
dec
add
arpl
fidivrs
push
enter
inc
mov
lahf
orl
leave
jle
add
cmp
adc
hlt
imul
jae
or
daa
lds
push
arpl
ret
outsb
icebp
mov
in
push
mov
cmp
pop
mov
pushf
call
lcall
or
fsubs
movsl
dec
jno
push
ja
add
lcall
js
mov
mov
xor
xchg
pop
push
jge
xchg
popl
push
cmpsb
decl
in
dec
add
das
lds
xchg
jg
loope
sbb
andl
je
cmp
xchg
sbb
push
or
fcoml
cmp
xor
xor
outsb
mov
xor
jns
scas
jmp
xchg
test
sbb
out
dec
cmp
test
imul
rorl
push
adc
push
fs
aam
or
mov
mov
iret
sbb
lock
clc
stos
pop
mov
dec
add
and
lds
jg
out
xor
xchg
pop
das
mov
mov
lods
xlat
sub
push
push
push
adc
ja
or
loope
jge
pushf
add
xorl
add
scas
sbb
push
cmp
loopne
lock
lods
adc
repz
adc
popa
clc
movsb
sbb
and
mov
mov
xchg
pop
jecxz
sub
mov
push
adc
iret
pop
incb
mov
and
inc
lods
mov
xor
shrl
pop
repnz
shr
repz
mov
inc
and
ja
or
fdiv
jno
fistpl
shlb
fwait
mov
fnsave
push
mov
xchg
ja
xor
or
sbb
stos
and
sub
sarb
stc
aad
sbb
adc
push
and
in
lds
in
loope
pop
mov
ret
std
cmp
rorl
pop
pop
push
into
cmc
pop
cmp
mov
icebp
and
xchg
xchg
push
cmp
sbb
getsec
and
xor
cmp
bound
stos
test
add
ja
addr16
add
xchg
adc
push
nop
dec
nop
jecxz
mov
and
sbb
adc
sbb
pop
mov
in
inc
push
mov
out
ss
push
jno
jmp
inc
inc
ret
lea
test
shr
cltd
hlt
dec
xor
add
inc
jns
mov
jbe
add
dec
jo
pushl
jne
jns
idivb
nop
cmpsl
dec
shlb
scas
in
sbb
sbb
cmp
je
xor
addl
addr16
jns
and
mov
adc
and
dec
sbb
ss
fsubl
call
stos
divb
rorb
mov
mov
mov
rdmsr
push
mulb
cmp
fcmove
cltd
cmp
jno
mov
adc
in
setge
aad
cmpsl
movsl
mov
in
test
insl
icebp
in
xor
push
aas
cmp
in
jmp
mov
stc
ret
dec
sub
jns
ret
or
sbb
push
pop
sub
sbb
ja,pn
cmpsl
jg
shl
lcall
or
fisubrs
popa
out
mov
int
lret
sub
mov
int
xchg
arpl
add
adc
inc
dec
outsl
shll
insb
data16
sub
cwtl
jae
outsb
out
mov
notl
leave
movsl
push
movsl
aam
mov
js
and
mov
mov
cmpsb
xchg
jno
les
in
cmpsl
fwait
sarb
stc
cltd
sahf
push
inc
sbb
icebp
and
mov
popa
pop
dec
or
sbb
or
jge
mov
aad
mov
jl
sbb
repz
adc
mov
jae
leave
mov
or
xor
mov
push
pop
pop
xor
adc
repnz
pushf
dec
add
pop
cmp
sti
or
hlt
inc
notl
test
cmp
aas
aas
jmp
in
fcomip
sub
sbbl
pop
daa
mov
push
and
mov
jg
scas
js
fadd
enter
jbe
mov
jne
xor
test
xor
xchg
and
aam
mov
cld
inc
iret
rolw
mov
cmpsb
push
xchg
jne
cmp
push
add
mov
sub
rcl
in
in
sub
aas
lcall
rorl
xchg
movsl
test
jo
cli
jg
daa
mov
mov
hlt
aas
mov
inc
addr16
pushf
into
pop
xchg
mov
mov
mov
mov
push
jbe
adc
cmp
fsincos
pop
repnz
cmp
cmpsl
sub
je
mov
lret
xor
sbb
pop
mov
sbb
cmp
cli
roll
pop
push
jb
lcall
nop
and
or
push
cmp
das
jno
mov
inc
push
mov
aas
push
pop
fisttpll
jp
int3
mov
js
jle
cmpsl
mov
orl
add
or
xchg
and
push
and
xlat
fisttpll
mov
mov
push
mov
jo
pop
inc
pop
scas
push
iret
addl
dec
lds
out
call
and
pop
or
scas
or
les
jne
lret
mov
pop
mov
cmp
fcomip
in
outsl
add
rol
mov
test
mov
sub
fcoms
repz
add
adc
movsb
pop
js
inc
movsl
loop
add
push
xorb
and
bnd
jecxz
movsb
mov
sti
mov
mov
pop
negb
cmpsb
mov
mov
jp
iret
push
dec
sub
or
xchg
lret
cmp
xchg
mov
addr16
push
fcom
pop
dec
cmp
sub
dec
iret
rcrl
jno
in
and
xchg
jmp
imul
popa
mov
inc
add
mov
adc
fildll
fs
sbb
loopne
shlb
mov
add
outsb
lahf
enter
xor
pop
faddl
mov
lret
mov
fs
jne
push
pop
and
std
lds
sbb
cli
adc
sub
mov
les
push
hlt
aam
movzbl
popa
xchg
loop
fimuls
jo
or
std
gs
mov
xchg
hlt
pop
and
icebp
aaa
inc
mov
push
adc
inc
mov
lret
sub
jnp
cld
enter
aam
and
add
sub
pop
jae
fdivs
xor
lods
mov
inc
jl
dec
test
or
outsb
lret
out
jle
mov
adc
xor
les
test
das
mov
and
jg
sub
adcb
pusha
mov
cltd
sarl
xchg
jecxz
shl
das
fs
jbe
mov
in
aad
mov
jle
jmp
mov
mov
sub
iret
bound
popf
je
sbb
mov
push
or
or
push
lcall
sbb
adc
push
sub
or
iret
push
add
mov
add
jecxz
sub
rcrb
pop
out
xchg
dec
addr16
testb
fwait
mov
mov
mov
cmp
loope
mov
cwtl
mov
add
mov
mov
adc
pop
and
enter
dec
loopne
adc
mov
sub
stc
pop
fdivs
add
ret
cltd
push
adcb
lret
sbb
ret
jg
das
lcall
stos
add
shrl
xchg
call
pop
mov
xchg
stos
jge
les
ljmp
sub
iret
scas
xchg
push
lcall
lret
std
jne
pop
test
test
insl
xor
pop
and
cmp
mov
out
sbb
inc
inc
jl
xchg
or
xchg
fistpl
lock
out
add
shlb
ljmp
icebp
cmpsb
mov
jns
and
and
js
sahf
pop
in
insb
rcll
mull
dec
adc
lcall
pushf
andl
lahf
mov
pop
iret
rcrb
into
cmp
popf
jmp
dec
cwtl
adc
mov
ja
loopne
pop
add
inc
aaa
lea
mov
negl
out
ja
mov
jle
cld
cltd
lods
std
out
xchg
fcmovne
hlt
sbb
movb
stos
mov
jns
and
xchg
cld
test
sub
add
mov
sub
fisubs
mov
mov
jns
add
push
imul
inc
mov
xor
pusha
mov
lea
ja
rol
nop
jae
mov
or
in
sbb
pop
std
lret
xchg
or
mov
mov
int3
xchg
mov
mov
scas
mov
sub
mov
xchg
ljmp
ds
fldenv
mov
pop
int3
mov
data16
jo
fcmovbe
pop
xchg
cli
mov
sub
fisubs
dec
shll
jo
cli
push
dec
inc
je
add
divb
pop
in
movb
fs
pop
sbb
andl
nop
inc
mov
push
js
in
xchg
js
das
iret
arpl
pushl
pop
loop
add
jmp
xlat
pop
iret
mov
fisttpl
mov
leave
dec
andl
pop
outsl
xor
cmp
into
xchg
adc
adc
mov
jbe
jecxz
xor
jl
dec
pushf
in
cmp
pop
jge
lcall
inc
repz
jo
and
cli
fcom
sbb
int3
dec
arpl
and
rclb
popf
ret
dec
hlt
decl
test
daa
add
dec
mov
jns
xor
push
repnz
shrl
xor
shlb
cmp
add
ret
mov
mov
sub
mov
jg
dec
test
out
lahf
out
cmp
cmc
arpl
mov
shlb
pop
pusha
jo
leave
push
mov
or
mov
adc
sahf
call
nop
sub
lods
jg
stos
aas
push
das
mov
push
call
adc
push
mov
stos
orb
in
outsb
xchg
xchg
cmp
push
cld
dec
and
cli
add
xchg
enter
loop
loope
mov
mov
loopne
mov
stos
inc
inc
or
leave
lds
xchg
lahf
out
dec
mov
sub
inc
cmpsb
mov
xchg
rcrl
jp
xor
andl
jbe
mov
scas
and
xor
sub
cmpsb
das
insb
mov
in
sahf
fisubl
sti
incb
sti
fldenv
jge
adc
lods
jmp
and
xor
popf
push
decb
sub
adc
call
mov
xchg
pop
xchg
pop
mov
or
dec
mov
push
pop
popa
xchg
divl
clc
cmp
popf
jge
dec
sbb
mov
callw
mov
jl
sarb
je
mov
pop
imul
push
mov
je
mov
dec
fistpll
cmp
and
lahf
cmp
fcoml
mov
cwtl
mov
pusha
xor
popfw
jno
jecxz
lock
sti
shl
mov
or
jg
test
xchg
xor
shrl
lods
dec
repz
xor
out
loop
shrb
pop
and
push
xor
fidivs
repnz
or
loop
popa
stc
rdmsr
jp
addb
std
les
out
fdivr
fstl
xor
pop
xchg
mov
mov
rolb
pop
add
add
sbb
mov
and
and
shrb
stc
aam
mov
das
int3
fmulp
icebp
cs
bsr
fprem
fdivl
cmp
sbb
stc
insl
pop
cmp
testl
inc
inc
cli
xor
and
xchg
push
and
hlt
xchg
jo
pop
and
xor
push
push
xlat
dec
cs
and
push
data16
mov
pusha
std
xchg
out
insb
adc
pop
fmuls
mov
ds
fisttps
leave
mov
stos
stos
aad
stos
mov
loope
sub
adc
mov
push
jp
push
cld
push
frstor
repnz
movsb
aas
jno
or
repz
dec
fisttpl
and
mov
inc
lods
push
inc
xchg
into
orl
es
scas
addr16
shlb
stos
cmp
xor
subl
mov
xchg
popl
cmp
shlb
std
paddq
ret
rorb
or
outsl
jns
hlt
add
int3
enter
cmpsl
xchg
outsl
scas
push
in
es
jg
pop
jle
outsl
mov
push
mov
push
pop
and
push
fcmovnu
mov
imul
pop
cmc
jae
jb
push
lock
lods
jl
or
xchg
js
lods
mov
imul
cmp
or
jge
rorl
adc
out
or
dec
mov
and
mov
fists
nop
push
mov
push
lds
iret
dec
aaa
mov
sub
es
jecxz
sub
outsb
scas
sbb
mov
aam
in
mov
mov
lds
and
push
mov
cmp
cmp
or
cs
sub
subl
and
pop
roll
xlat
sub
or
rcrb
and
mov
pop
add
xchg
mov
add
mulb
js
sbb
or
icebp
aaa
add
fimull
es
pusha
lds
cmp
xor
dec
loopne
sub
in
dec
push
into
xlat
push
in
insl
movsl
jns
adc
mov
pinsrw
adc
add
js
iret
mov
into
scas
inc
mov
cs
imul
ds
mov
cmp
jno
imul
sub
cmp
dec
or
or
iret
jmp
data16
mov
outsl
add
lret
and
popa
xchg
inc
arpl
bound
mov
mov
xchg
orl
jle
idivl
ljmp
cld
or
push
or
sarb
push
stos
lret
aad
insb
sub
orl
lods
inc
in
lahf
or
cltd
fsubp
ss
adc
int3
fcoml
or
movsl
rorb
clc
hlt
jnp
dec
inc
and
addr16
in
xchg
fucomip
ljmp
rol
mov
or
xlat
jecxz
aam
cmp
sbb
sti
stos
outsl
xchg
aad
sub
je
mov
sti
push
faddl
lods
call
sub
cltd
push
stos
daa
scas
xchg
shl
scas
sub
push
pushf
inc
mov
sub
jge
dec
jl
popa
dec
xchg
sbb
movsb
test
fdivr
mov
fidivrl
add
es
fists
cs
stc
cs
inc
loopne
lahf
jl
pop
je
stc
dec
ret
data16
lcall
lcall
sbb
stos
and
cmp
jbe
arpl
fidivl
loopne
jo
test
fwait
push
test
xchg
sbb
xchg
cmp
sbb
sti
test
gs
xchg
push
mov
mov
push
in
xchg
popa
lret
lcall
sub
adc
lock
cmp
push
adc
jg
dec
js
pop
aas
cmp
sub
xor
fisttpll
aas
or
jl
or
out
aas
mov
aaa
mov
das
repnz
pop
inc
add
daa
mov
mov
test
sahf
pop
pop
pop
rcrl
xchg
mov
insb
xchg
filds
mov
mov
dec
js
insl
sbb
xor
cmp
ret
inc
lret
cwtl
rorb
cmp
fidivl
add
fdivl
sarl
not
and
push
aam
mov
mov
mov
push
mov
stos
mov
outsb
xchg
movntq
sbb
mov
xchg
jb
shrb
mov
cwtl
pop
sti
pop
sub
inc
sbb
jl
cmp
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
in
push
dec
std
cwtl
jge
inc
inc
pop
xor
lret
std
pushf
jge
add
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
fs
inc
mov
mov
jle
test
and
out
sahf
cmc
pop
sbb
sti
bswap
sub
ret
or
pop
fdivs
sbbl
adc
and
lods
aas
jns
lret
std
pushf
jge
inc
es
imul
pop
loopne
add
sub
shlb
jns
arpl
loope
xchg
jno
hlt
test
dec
xchg
das
or
xor
mov
insb
mov
cmp
lret
loopne
add
sub
sbb
jge
xor
mov
push
dec
insb
ret
test
pop
mov
inc
mov
ret
sahf
pop
loopne
std
pushf
jge
inc
mov
lret
lcall
xor
lret
std
jl
test
jae
and
dec
std
and
inc
mov
lret
in
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
cltd
jge
inc
mov
lcall
inc
pop
movsb
xor
lret
std
mov
push
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
dec
cwtl
jae,pt
leave
ljmp
mulb
ljmp
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
scas
xchg
cmp
pushf
jge
mov
lretw
stc
pushf
jge
inc
mov
sahf
movsl
dec
std
pushf
jge
inc
lahf
mov
cltd
cmp
fbld
ljmp
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
inc
mov
lret
std
pushf
jge
jmp
data16
dec
xlat
cmpsl
inc
mov
out
sub
int3
xor
sti
and
rcr
xchg
das
sahf
or
jnp
push
mov
int3
fwait
inc
pop
pop
stc
popf
xchg
mov
negl
loopne
cltd
mov
mov
and
push
xlat
fdivrl
sti
shlb
fldenv
sbb
pop
es
andl
mov
or
jecxz
data16
iret
nop
sub
cmp
xor
jb
mov
hlt
dec
mov
mov
jne
sbbb
je
xor
or
sbb
xchg
lods
push
rol
pop
sub
andl
pushf
leave
adc
mov
aad
fisttpl
test
push
call
aaa
mov
clc
add
jp
inc
adc
inc
cwtl
ja
ss
gs
dec
in
sarl
sbb
jge
sbb
and
mov
push
add
pop
push
inc
loope
jle
fadd
in
pop
ljmp
mov
mov
xor
js
or
outsl
gs
ret
sti
xchg
es
xchg
out
mov
push
add
lods
icebp
ret
mov
mov
std
les
mull
push
xchg
mov
mov
cmpsl
popf
stc
sahf
and
add
jnp
jns
adc
ss
sub
insb
mov
xchg
out
cmp
inc
sti
mov
adc
mov
insl
pop
mov
test
fwait
aam
and
add
lods
imul
jo
fbstp
lret
jp
stos
mov
fs
in
jge
sbb
stos
aaa
inc
ror
mov
mov
mov
fsubrp
xchg
lret
ret
popfw
xor
mov
fucomip
ljmp
and
or
mov
xchg
dec
and
inc
xchg
push
mov
jmp
sahf
aaa
add
add
call
cmp
and
mov
xor
jl
outsb
arpl
repnz
ljmp
mov
push
and
les
dec
and
xchg
xchg
cmpsb
inc
add
or
mov
sbb
add
loop
fs
pop
setp
fldcw
cmpsb
jbe
push
sbb
mov
lods
loopne
pop
and
insl
add
shll
adc
test
inc
aas
ja
cmc
test
decb
mov
scas
enter
movsb
rcl
fs
scas
and
nop
mov
fs
push
jb
pusha
xor
cld
and
inc
mov
jmp
xchg
lret
xor
jne
add
jecxz
mov
pop
fsts
jno
push
dec
fisubrl
dec
notl
call
in
ret
imul
dec
mov
sub
aad
mov
scas
fisttpl
shlb
int
jne
pop
scas
inc
les
xchg
mov
in
je
xchg
mov
and
add
fldl
loope
xchg
xchg
das
push
lret
xor
jne
testl
arpl
adc
jp
adc
adc
stos
lods
popa
dec
jecxz
mov
mov
lock
out
mov
lret
sbb
xchg
in
and
and
lcall
outsb
ljmp
test
div
dec
add
jno
mov
aad
mov
call
loope
push
sub
sub
dec
adc
fsubr
pop
add
mov
in
jle
sub
lea
jno
add
adc
imul
mov
lret
pop
into
out
cmpsl
test
cmpsl
xor
sbb
das
xor
mov
sbb
or
dec
stc
cli
jns
mov
jmp
jne
cmpsb
sub
aad
stos
cmpsl
sub
rclb
and
mov
fcmovb
dec
sub
repnz
pop
cmp
lea
gs
dec
test
xchg
sbb
cmp
daa
xchg
add
xor
inc
dec
xlat
xor
jo
into
out
in
movsb
scas
mov
mov
lahf
jae
outsb
xchg
xchg
push
ds
outsl
aad
dec
jnp
movsb
mov
mov
test
mov
cmpsl
inc
mov
cwtl
out
jle
jp
adc
fcompl
shrb
xchg
cmp
pop
pop
sbbl
sub
es
or
mov
rcl
jo
xchg
lret
dec
fistpll
outsl
or
xchg
das
cmp
add
cmp
mov
pop
gs
lock
lret
pop
xor
ds
loop
jg
enter
mov
pop
inc
mov
jae
notl
or
cmp
icebp
int3
adc
nop
ja
repz
stc
mov
test
pop
xor
inc
rcll
movl
and
shl
ss
sub
lret
imul
daa
or
loopne
test
popa
sub
popa
cmc
mov
pop
push
xchg
ja
nop
clc
jge
and
hlt
jae
lods
sbb
movsl
xor
pop
and
cmp
mov
lods
dec
scas
mov
fldcw
cs
pop
sub
push
pop
outsb
inc
aam
pop
clc
call
mov
jmp
xchg
push
sahf
or
push
icebp
mov
lss
xchg
lret
add
pop
stos
jno
pop
and
popa
enter
ja
mov
jecxz
je
jp
mov
daa
jecxz
mov
mov
insb
push
push
insl
loop
inc
lcall
nop
pushf
mov
notb
and
add
push
in
inc
add
in
mov
sbb
push
je
jmp
push
es
mov
cmp
lret
lcall
mov
xchg
xchg
push
inc
jp
and
mov
shll
mov
sahf
cltd
scas
sbb
jne
ret
pushf
mov
daa
cmpsb
pop
pop
test
xchg
jno
or
push
mov
cmpsl
inc
jae
mov
pushf
leave
pop
xchg
adc
adc
sub
mov
adc
shll
ss
idiv
mov
or
mov
subb
mov
jns
cmp
dec
pop
js
scas
sub
push
xor
sub
iret
mov
daa
mov
popa
imul
arpl
es
inc
push
iret
int
push
hlt
in
jo
int3
gs
imul
les
xchg
dec
xor
mov
sub
out
enter
in
xor
je
shll
das
dec
and
jl
fdivl
xor
adc
scas
xchg
dec
ret
fs
push
stos
loop
rcr
push
mov
ja
ss
sub
mov
add
cmc
out
ja
mov
mov
ds
jp
pop
jno
inc
mov
push
imul
mov
jnp
dec
cmp
mov
mov
scas
aaa
dec
sbb
or
test
call
mov
push
insl
test
out
mov
add
add
ds
dec
jnp
cmp
jbe
orb
in
dec
in
fisubs
xchg
jns
mov
adc
inc
dec
pop
in
pop
xor
mov
dec
push
jb
cld
jb
ja
loope
xor
add
and
jb
sub
hlt
clc
test
mov
fcomps
cmp
mov
mov
jne
in
cmpsl
adc
cmpsb
es
lock
or
lock
dec
mov
icebp
aas
xchg
loop
test
repnz
sub
in
fdivl
in
mov
xchg
cld
inc
repnz
pop
sbb
push
sbb
out
lea
imul
dec
mov
aad
pop
xchg
jae
nop
orb
inc
cmp
push
xchg
push
mov
sti
imul
movsl
mov
cmc
test
stos
loop
es
mov
mov
inc
cmc
sbb
aad
xchg
cmp
xchg
inc
lahf
fwait
divb
fisubrs
add
sbb
sbb
jbe
push
pusha
hlt
pop
add
jno
nop
ja
mov
inc
fidivs
xor
push
xor
shll
loope
xor
fiadds
pop
gs
adc
scas
js
push
ret
mov
add
ja
inc
mov
jne
jl
mov
and
repz
fwait
sbbl
cs
jg
imul
xchg
cmc
je
dec
xor
inc
xchg
cmpsl
test
fdivs
lcall
pop
mov
jbe
push
rclb
mov
or
adc
sbb
out
pop
mov
add
shrl
out
jo
dec
dec
jb
add
dec
jno
push
les
jl
inc
xchg
pop
cmc
ja
dec
or
fildl
lret
pop
hlt
rcrl
jo
rcrl
push
dec
imul
push
ror
inc
cmp
in
loopne
stos
fstpt
cwtl
insl
adc
imul
test
add
and
lret
mov
fidivl
les
jecxz
std
or
pop
js
aaa
adc
adc
mov
fists
ljmp
add
xchg
jne
lahf
adc
aaa
pop
push
xchg
and
cmp
xor
or
lods
std
mov
mov
jnp
mov
xchg
test
xchg
adc
jns
ja
dec
int
or
gs
outsl
data16
inc
lds
stc
sbb
mov
imul
cmp
cltd
ljmp
das
cmpb
push
test
pop
add
mov
xchg
test
int3
les
and
adc
xchg
mov
adc
adc
iret
insb
mov
add
add
pop
lods
jle
add
shrl
push
movsb
xchg
push
in
sbb
icebp
sbb
insl
and
ffreep
dec
push
jmp
or
inc
je
sahf
fadd
inc
push
push
fs
add
sbb
in
lahf
jp
sub
or
cltd
push
lea
pushf
int
mov
xchg
les
mov
ds
mov
mov
addr16
pop
mov
push
inc
sub
and
add
xchg
fwait
add
push
out
and
sub
dec
in
das
xchg
inc
and
xlat
or
cmp
dec
gs
dec
mov
jns
paddq
ljmp
add
scas
inc
mov
lcall
imul
and
push
pop
sub
push
in
ret
lret
jl
cmp
popa
jl
mov
xor
insl
dec
lahf
ljmp
stos
sub
or
jp
cld
scas
daa
test
sbb
push
sbb
add
lds
out
xor
mov
pusha
xor
lahf
pop
rcrl
xchg
mov
mov
cs
in
inc
mov
sbb
mov
xor
dec
rcl
scas
xchg
mov
gs
push
cwtl
ljmp
loopne
xor
loope
fwait
mov
xor
push
xor
movsb
popf
test
jecxz
xor
dec
dec
and
jno
outsl
fisttps
xor
ja
jmp
lods
pop
xor
sahf
mov
popf
sub
rcll
inc
scas
fs
add
mov
inc
cmpsb
sbb
gs
les
testl
stos
inc
in
xchg
jmp
xchg
or
dec
cmp
popa
xchg
cmc
adc
lods
pop
push
inc
loop
adc
pop
test
jg
icebp
inc
cltd
jg
loopne
bound
loope
and
sub
xchg
popa
mov
pop
ljmp
cwtl
das
sbb
mov
lds
ds
cmp
rorl
mov
jge
hlt
xor
mov
or
lods
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
