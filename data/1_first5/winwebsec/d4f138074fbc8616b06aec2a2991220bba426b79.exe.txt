push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
mov
das
mov
fbstp
adc
int
or
sub
push
ss
and
sbb
push
and
mov
lds
push
imul
pop
dec
iret
int3
push
mov
xchg
bound
out
adc
scas
cmp
scas
jb
rcrb
fiadds
push
rcrl
push
sbb
push
xchg
daa
jle
ljmp
sbb
rcrb
lret
push
sbb
int3
fcom
jae
jl
cltd
std
mov
aad
push
ds
and
stos
aaa
aaa
ds
out
and
insb
ret
hlt
repz
rol
cmp
rcrb
loop
or
and
pushf
call
mov
stc
inc
dec
addr16
lcall
ja
mov
cmp
add
xor
ja
dec
mov
loope
imul
mov
sbb
je
push
mov
add
jmp
pop
cltd
xor
cmp
adc
mov
sahf
mov
leave
jmp
cmc
arpl
xor
lods
adc
pop
adc
test
xlat
cli
dec
jle
sub
cli
clc
fstp
pushf
sub
aas
pop
jnp
je
mov
push
inc
mov
in
inc
cmp
jmp
or
sti
fs
add
pop
mov
out
ret
mov
sti
stos
xor
adc
xchg
push
push
cli
jo
xchg
jge
xchg
mov
mov
mov
popf
inc
push
push
mov
cmc
rorl
and
sahf
popa
jno
dec
sub
jmp
cmp
mov
jbe
add
sub
addb
mov
add
mov
fwait
aas
iret
mov
mov
lea
dec
fidivs
xchg
dec
mov
pop
mov
xchg
popf
fnsave
cltd
sbb
movb
and
shrl
mov
in
dec
repnz
push
outsb
out
or
and
add
ret
cmp
jecxz
icebp
xlat
daa
cmovg
cmp
data16
mov
fisttps
push
shll
testl
xchg
popa
adc
nop
xchg
jecxz
cmpsb
cs
xchg
icebp
adc
sbb
and
dec
je
jb
mov
cld
xchg
and
insl
test
lea
dec
cmpsl
test
mov
push
sub
in
outsb
int3
pop
mull
mov
mov
mov
or
in
mov
fyl2x
fcomi
push
lret
clc
pop
sub
test
jl
xchg
inc
push
and
mov
movsl
fucomi
or
xor
pop
jae
mov
mov
insb
ja
pop
xor
lds
daa
and
add
adc
in
pop
jne
inc
sbb
out
aam
test
add
test
loopne
shrb
push
or
jb
jmp
dec
jmp
loopne
orb
push
jp
xchg
lcall
cli
cmpsl
jns
add
movsl
or
and
jns
inc
dec
push
xchg
hlt
xor
insl
jnp
inc
pop
sti
jge
outsl
cmpsl
shlb
aad
stos
dec
scas
jl
jmp
in
add
xor
lcall
adc
jp
push
sbb
fstp
ret
mov
hlt
popf
mov
add
mov
out
and
add
sbb
ret
jle
sbb
repnz
or
clc
js
daa
aad
aam
xchg
and
sub
repz
dec
cmp
icebp
es
pop
aas
test
jmp
lcall
daa
test
cli
nop
cwtl
xchg
dec
push
popf
mov
sbb
mov
xchg
icebp
or
into
hlt
clc
pop
jnp
lcall
mov
xor
jnp
rol
mov
and
fiadds
mov
dec
add
mov
js
add
ja
mov
stos
insb
push
or
adcb
roll
add
pop
and
adcl
pusha
sub
pop
lods
pop
fiadds
out
sbb
stos
fsubrp
pop
and
cli
push
icebp
test
cld
out
repz
inc
test
out
mov
sbb
rorb
js
adc
cmp
xchg
es
inc
mov
das
nop
pop
pop
mov
inc
lcall
ret
add
mov
jmp
dec
adc
push
arpl
fiadds
cld
or
je
jae
mov
insb
push
outsb
mov
inc
cli
popa
sbb
inc
ror
mov
jbe
xor
jno
fildl
push
adc
lods
nop
in
fidivl
icebp
aas
aaa
imul
imull
adc
sbb
mov
and
pop
or
mov
daa
jmp
mov
cmp
pop
adcb
pop
imul
lods
das
ret
dec
loopne
and
dec
pop
pop
jb
ljmp
xor
insw
xor
mov
sub
gs
jg
pop
cmp
xor
jb
in
shlb
dec
test
ljmp
sbb
xlat
insl
rcrl
inc
cld
fistpl
lds
xchg
cmpsl
adc
fnstcw
outsb
mov
pop
mov
lcall
cmc
xchg
mov
jb
add
mov
sar
ja
gs
sbb
rolb
sbb
sahf
lahf
sub
lcall
jno
xor
std
dec
loop
inc
push
mov
test
xlat
push
jge
lods
mov
push
jbe
sbb
sub
adc
jg
mov
out
pushf
hlt
imul
test
shlb
dec
popa
pop
mov
mov
fstps
add
dec
ret
out
push
mov
jne
mov
inc
mov
fildl
inc
push
mov
push
popf
adc
leave
cmp
jecxz
in
inc
aad
jg
push
mov
and
mov
std
je
out
jg
inc
cwtl
inc
loope
sbb
jne
adc
cmp
add
daa
xorb
pop
mov
xchg
in
xor
adc
add
adc
into
fwait
mov
dec
out
nop
dec
addr16
lods
mov
push
stos
adc
mov
dec
gs
je
sub
push
pop
cmpps
sub
cli
pop
push
dec
mov
std
pop
cmp
jmp
ja
add
adc
push
adcl
cmp
dec
or
in
inc
test
dec
int3
cmp
cmp
fs
or
mov
inc
fsub
scas
pop
loop
inc
xor
sub
push
negl
je
cs
iret
jb
test
clc
daa
movsl
jne
push
loope
push
sub
repz
adc
and
pop
cli
into
cmpsl
sub
lret
aas
dec
enter
cltd
loopne
incb
xchg
mov
xor
fidivrs
xchg
test
sub
mov
inc
adc
jo
in
push
pop
push
imul
in
mov
mov
add
ret
push
lret
mov
fstps
mov
sarl
sub
loop
inc
fistl
stos
xlat
aaa
mov
cmc
jmp
dec
pop
test
pop
jbe
cmp
cwtl
adc
clc
int3
push
dec
imul
pop
fisttpll
xchg
les
mov
xchg
xchg
inc
push
inc
pop
sub
mov
mov
jle
shrb
enter
test
pop
testl
mov
add
xchg
mov
sbb
jp
jne
sbb
adc
repnz
mov
lds
cld
shlb
pop
insb
mov
mov
adc
cld
inc
loop
cli
cwtl
ret
repnz
and
sub
xchg
lcall
mov
push
lcall
adc
enter
popf
loop
jbe
cmp
xorl
dec
sub
insl
cli
or
sub
hlt
fs
or
aam
out
sbb
push
jno
loopne
bnd
jnp
sbbb
or
scas
or
mov
mov
loopne
cwtl
sub
or
test
push
insb
add
sub
xchg
push
cmp
xchg
xchg
negb
xor
je
mov
leave
xor
add
fsubrl
or
inc
sub
lret
and
add
ds
adc
nop
fs
xor
and
xchg
mov
fcomi
mov
ret
ljmp
insl
mov
mov
sub
xchg
popf
imul
call
loopne
leave
inc
jbe
cmp
cmp
mov
cmc
jno
mov
aam
stos
jle
xor
rorb
add
insl
in
fsincos
and
clc
jle
pop
xor
daa
daa
dec
pop
std
adc
jl
inc
adc
push
and
cs
jmp
mov
push
das
sbb
inc
addl
mov
mov
scas
int
mov
lahf
or
or
mov
inc
push
stos
mov
push
or
and
inc
shrl
sub
das
and
sahf
js
mov
add
xchg
jnp
sbb
mov
pop
jecxz
daa
movsb
xchg
or
mov
push
push
stc
repz
rolb
addb
pop
adc
pushfw
es
sub
jo
cmp
inc
cmpsb
push
loope
xchg
cmc
mov
insl
xchg
nop
icebp
push
lea
push
sub
repz
pop
out
cmovge
sub
and
popa
jbe
aam
push
pop
fcmovu
and
ja
and
loope
xchg
mov
cmpsb
hlt
outsl
jmp
fisttpll
jne
ret
mov
pushf
bound
sub
dec
or
ficoms
imul
iret
hlt
mov
lods
mov
dec
popa
xlat
cmp
rcll
mov
add
mov
into
orl
daa
xchg
mov
xor
je
mov
push
mov
loop
leave
add
sarb
pop
and
gs
in
inc
int3
cmp
mov
adc
clc
inc
dec
xor
test
arpl
push
lahf
scas
shll
add
inc
mov
int
dec
jmp
es
pop
clc
in
mov
shl
in
mulb
jle
shl
adc
push
into
pop
push
ret
inc
std
decl
jae
cmc
dec
pop
inc
mov
mov
and
loopne
sub
add
xor
inc
lock
and
int3
das
std
push
sbb
lods
fldl
mov
in
mov
clc
imul
dec
mov
mov
fbstp
rorb
aad
and
pop
xchg
aaa
mov
daa
sub
mov
jle
daa
pop
rcrl
ret
mov
pop
icebp
jmp
lret
roll
mov
sbbl
xor
push
push
inc
imul
adc
or
and
jecxz
aaa
adc
pop
cmc
and
add
in
sub
fstpt
push
les
sbb
mov
sbb
jo
out
mov
mov
mov
cld
mov
or
popa
inc
out
xchg
or
jmp
es
cmc
aas
pop
push
loop
adc
js
xorl
inc
push
and
leave
rorb
daa
imul
xchg
jge
xchg
push
aas
mov
mov
cmp
cmpsb
test
idivb
jge
int
movsl
clc
popa
lahf
idivb
lcall
insb
mov
clc
lods
sub
gs
into
adc
ret
in
jno
push
push
add
int3
inc
and
pop
and
cld
cmc
pop
push
repnz
movsl
mov
sbb
jns
mov
out
mov
fisttpll
pop
scas
sub
ljmp
mov
cld
in
fwait
jns
sub
insb
ds
cmp
add
pop
ss
fldt
mov
gs
sbb
jne
cld
ret
dec
add
pop
add
mov
inc
ret
jp
dec
adc
sbb
cmpsl
aaa
lcall
xchg
adc
add
add
jg
rclb
dec
inc
push
pmaxub
fwait
add
inc
dec
out
dec
imul
das
cwtl
and
sbb
mov
movaps
push
aas
pop
push
dec
dec
push
jae
mov
push
sbb
in
mov
pushf
cmc
leave
in
jle
lods
push
lds
int3
jle
lods
fisttpll
fbstp
xchg
xor
data16
int
pop
mov
mov
pop
cmp
imul
lods
sub
shr
and
fldcw
dec
lods
mov
inc
inc
and
add
mov
xor
inc
sbb
inc
outsl
int
xor
insl
inc
lock
loope
xor
mov
mov
xlat
inc
dec
and
mov
adc
cwtl
mov
xor
addb
mov
dec
fwait
push
fimuls
out
movsl
call
push
aam
sbb
pop
adc
fincstp
fdivrs
ret
lret
int
jle
and
adc
notl
push
adc
mov
and
aam
mov
xchg
sub
and
lret
mov
negl
and
jl
movsl
adc
call
in
cmp
adc
in
stc
jae
xorl
scas
loope
sti
jp
in
mov
fwait
mov
nop
jle
fisubs
imul
out
push
test
sub
xchg
cwtl
fidivs
xor
inc
shll
pushf
movsb
mov
pop
sub
xchg
inc
sbb
adc
outsb
dec
das
push
jns
pushf
push
ficoms
pusha
cwtl
stos
shrb
push
subb
fmull
rcrb
cmp
mov
fdivr
movsl
mov
aaa
mov
rcll
popf
stos
sbb
nop
jo
jb
stos
push
lods
out
out
and
mov
lret
dec
sahf
stos
mov
dec
daa
sti
cltd
adc
pop
jno
inc
jb
cltd
in
mov
xor
cmp
dec
xchg
pop
fiadds
jnp
clc
sub
leave
mov
sbb
popw
inc
xor
mov
inc
test
push
jns
cltd
sbb
fiadds
ljmp
test
mov
repz
cld
dec
or
and
and
dec
lahf
dec
in
jl
pop
dec
sbb
repnz
repz
ret
cld
cltd
xchg
imul
push
push
fisubs
out
or
mov
adcl
fimuls
sbb
fwait
push
pop
cmp
jne
in
push
or
sub
addr16
jb
out
enter
int3
and
fstpt
inc
ljmp
leave
cmp
push
insb
mov
xchg
add
pop
call
sub
icebp
icebp
pop
jle
xorb
stos
loope
stos
xor
rcrl
in
cwtl
push
stc
test
push
or
xchg
adc
xlat
push
popa
add
lahf
or
imul
hlt
lods
push
cmp
in
or
xchg
and
mov
mov
pop
mov
movsb
pop
mov
jmp
cmp
rorb
in
repz
mov
imul
jae
push
fstl
out
inc
loop
pop
out
dec
push
pop
sub
cltd
ret
xorb
push
pop
add
lds
pop
mov
enter
adc
inc
push
pusha
lock
notl
lock
lds
sub
cmp
and
mov
test
cs
push
push
jle
jge
cmp
ljmp
push
sbb
pop
xchg
jns
lock
scas
pop
lds
insb
jns
and
or
orb
add
push
leave
sarl
xchg
xchg
loopne
lods
cmp
mov
mov
clc
sub
jp
pop
and
lret
push
mov
adc
jno
mov
loopne
sahf
or
xor
popa
xchg
loopne
mov
push
insb
mov
loopne
pop
xorb
arpl
jno
sahf
pop
jno
gs
jo
dec
xchg
or
or
cmpsb
sbb
enter
sar
pushf
adc
sarb
push
sub
xor
test
sub
pop
xlat
fistl
pop
jnp
mov
cmc
lock
inc
cmp
out
test
leave
pxor
push
xchg
and
cmpb
mov
sbbl
ret
mov
pop
fsts
mov
push
add
aam
idivl
pop
out
insl
cmp
jle
or
and
cmpsl
mov
ja
shrb
push
popf
mov
or
andl
xchg
or
dec
fmull
pushf
out
fcoms
js
sti
ja
sub
add
popa
push
push
test
dec
xor
das
dec
sahf
ret
mov
mov
shlb
cld
adc
fsub
mov
pop
insl
lret
pop
mov
dec
data16
lds
les
call
imul
mov
jge
add
push
pop
xor
js
jge
in
lahf
decb
mov
or
xchg
enter
mov
insb
inc
inc
mov
pop
movb
push
cmp
xor
mov
push
bound
sbb
adc
lahf
cmp
rcr
jl
sub
jns
rolb
pop
sbb
pop
xor
cmpsl
fwait
pop
test
push
imul
inc
ror
sbb
xchg
out
test
out
push
stos
or
xor
call
dec
fwait
call
sahf
ret
and
fldt
mov
and
inc
gs
mov
mov
inc
jo
gs
mov
and
es
fldt
xor
jne
das
sbb
adc
adc
aam
scas
nop
xor
xchg
mulb
and
xor
cmpsl
in
out
push
sbb
loop
xchg
push
movsl
adc
aam
inc
in
push
aad
lret
cmp
cwtl
jl
adc
mov
xchg
sub
xchg
rorl
std
arpl
push
lds
movsl
addr16
ret
aaa
xchg
lock
mov
or
nop
ret
mov
push
fwait
xor
cmp
and
sbb
cmp
xchg
pop
mov
int3
mov
cmpsb
aas
xchg
sbb
test
sbb
sbb
jg
insb
lea
cmc
adc
inc
in
loopne
xor
add
push
sub
xchg
push
push
jl
ljmp
mov
push
jne
push
movsb
andl
dec
mov
mov
push
xchg
jge
cltd
xchg
hlt
inc
loop
cmpsb
sub
mov
jbe
pop
stc
add
in
aaa
push
sub
dec
cmp
cmc
pop
ret
sti
mov
outsl
movb
in
mov
mov
mov
nop
or
in
ret
ljmp
mov
stc
push
lret
or
scas
inc
mov
or
enter
mov
cmp
outsb
jb
mov
sub
iret
repz
push
push
insl
cwtl
dec
mov
mov
ljmp
mov
test
sub
add
fcomps
daa
sbb
rorb
test
jae
dec
mov
dec
popa
jno
loop
inc
add
scas
sbb
xor
xor
mov
nop
jbe
or
add
xlat
or
mov
lea
lahf
movsb
mov
stos
mov
push
test
rcrb
icebp
xchg
sbb
pop
push
xchg
ja
popf
aas
jmp
fadd
jg
sub
pop
mov
sbb
or
xlat
decl
mov
ss
and
fisttps
sub
jns
mov
and
rorl
repnz
and
adc
jno
mov
or
dec
scas
sub
xchg
test
stos
aas
push
and
xor
inc
mov
push
test
push
xchg
push
xchg
sub
sbb
fcomps
cmp
mov
lret
scas
push
sbb
and
clc
push
mov
xchg
js
adc
nop
mov
xchg
add
sub
push
lret
pop
mov
add
add
pop
imul
dec
or
xor
out
into
xor
mov
pop
out
cltd
mov
adc
std
int
in
fcompl
aam
sub
push
dec
inc
mov
sbb
push
lcall
mov
and
int3
sbb
jne
test
in
cmpsl
adc
mov
sub
fiadds
sub
jmp
xchg
inc
data16
test
mov
shrl
cmp
cs
xlat
mov
add
inc
test
mov
or
cs
stc
scas
sub
inc
inc
into
mov
sbbl
movhps
push
lcall
fwait
lcall
dec
add
mov
mov
pop
jmp
out
pop
push
loopne
fwait
pusha
gs
or
mov
inc
fistl
pop
insl
mov
dec
fnsave
sub
jp
push
daa
andb
in
in
mov
into
fldcw
jb,pt
lret
jmp
loopne
int3
fdivr
fldl
popf
or
ja
or
pushf
loopne
aam
and
test
jle
pusha
push
test
cmp
mov
pop
repz
push
scas
scas
mov
push
dec
cmp
and
xor
adcl
arpl
mov
scas
rolb
mov
mov
inc
rorb
lods
jo
das
push
insb
scas
dec
push
mov
or
jle
imul
stos
dec
xchg
rcrb
pop
insl
sbb
add
ret
inc
icebp
mov
int3
dec
mov
jnp
adc
loopne
lock
sarb
cmp
sbbb
ja
imul
aaa
push
dec
mov
xor
out
jno
fdivs
cld
daa
dec
aas
mov
xor
das
insb
fstpt
dec
sbb
scas
mov
test
inc
pop
stos
lds
in
mov
jl
inc
movsl
dec
mov
add
mov
leave
fwait
leave
dec
outsl
jmp
xchg
int3
mov
adc
adc
in
mov
push
jle
sbb
in
or
arpl
sbb
insb
cmp
and
in
addr16
push
mov
push
sbb
jns
push
jno
mov
push
xchg
jbe
mov
arpl
jns
in
xchg
xchg
pop
mov
lret
cmp
add
idivl
fistl
push
scas
rorb
ret
jne
ficompl
gs
loopne
push
jnp
loop
push
pop
pop
filds
push
lea
push
sub
pop
adc
or
call
rorl
out
outsb
push
fdiv
xchg
sbb
jns
fstpt
scas
jnp
dec
mov
mov
enter
dec
fistpll
jp
xchg
mov
out
ja
sub
orl
jg
dec
fwait
add
orl
stos
and
jmp
fs
and
scas
xor
aaa
pop
sar
vpxor
jbe
cmp
pop
loopne
shr
clc
test
cmpsb
aad
xor
inc
sbb
lds
pop
cli
jl
in
and
pslld
das
xor
mov
call
push
pop
mov
pusha
mov
stc
or
bound
sub
mov
cmp
addr16
enter
push
or
fstpt
jo
mov
mov
mov
add
sbb
fcomi
in
mov
inc
shlb
or
xor
jae
lds
sub
mov
imul
addr16
ja
or
mov
filds
popf
mov
mov
lret
push
bound
das
sbb
pushf
mov
test
fmull
sarl
int
mov
inc
rcrl
or
dec
mov
push
dec
test
stos
sub
outsl
movsb
adc
xor
scas
add
jle
mov
and
movsl
jecxz
push
lret
sub
jnp
sub
fwait
cmp
int
daa
jecxz
jb
mov
sbb
aam
add
lahf
dec
andl
cltd
cltd
int3
popl
inc
int
push
mov
jbe
outsl
mov
sub
sbb
sbb
ds
push
stos
mov
cmp
cmp
dec
and
loopne
inc
xchg
dec
push
ss
sub
mov
gs
jo
jb
xor
loopne
or
imul
popf
enter
call
imul
rcrb
movb
je
push
and
adc
lahf
in
movlhps
test
xor
and
push
leave
out
cmp
dec
jl
out
dec
sub
push
sbb
add
insb
sub
cmp
sub
push
aad
inc
sub
jecxz
xchg
sbb
cli
mov
mov
mov
mov
xor
bound
fisttpll
aad
jae
loop
out
sub
call
sub
shll
imul
es
pop
in
push
adc
lock
sub
adc
std
jge
jge
push
inc
sar
mov
mov
jp
mov
xchg
jmp
popa
jnp
std
push
push
xchg
stos
fs
sbb
inc
ja
push
fiadds
daa
mov
sarb
pop
sbb
inc
and
arpl
icebp
fcoms
iret
push
sub
lea
add
out
xor
test
test
in
mov
out
mov
xchg
or
aas
jae
sub
imul
mov
lret
mov
test
adc
cmp
push
aaa
ficoms
aam
imul
or
stos
inc
dec
fisttpl
xchg
cmp
aas
popf
xlat
popf
mov
imul
jg
and
xor
loopne
arpl
jle
lods
xchg
xor
aad
out
lock
mov
push
xchg
sub
pop
push
mov
add
pop
sub
sub
push
iret
jnp
mov
push
fidivrs
cmp
cmp
mov
jne
and
jnp
push
mov
and
nop
jbe
adc
cmpsl
mov
outsb
out
adc
jg
cltd
imul
insb
call
mov
pop
gs
lock
test
adc
xorb
and
shrb
je
sub
out
cmp
and
orl
fwait
pop
fsts
ljmp
std
jo
cli
mov
and
fcompl
cmp
ja
mov
shll
xchg
mov
lahf
lret
or
mov
popa
inc
sbb
jecxz
xchg
out
jae
mov
xrelease
mov
repz
or
mov
mov
cmpsb
leave
test
test
sbb
test
mov
push
imul
mov
sbb
ja
push
mov
xchg
rol
jecxz
fdivs
mov
push
js
and
fwait
pop
mov
xor
sub
adc
fcompl
dec
sub
push
adc
dec
push
push
push
lds
je
stos
fwait
rclb
and
aas
or
push
dec
andb
xchg
adc
xchg
push
aaa
lods
sbb
mov
ja
mov
repz
outsl
popa
sub
addb
mov
sbb
pop
xor
inc
sub
stos
ret
push
out
je
int3
gs
mov
dec
call
mov
mov
mov
out
mov
jbe
mov
inc
xchg
loope
test
sbb
data16
fisubs
fs
xchg
push
and
pushf
jae
movsb
js
fdivrp
es
inc
push
lret
arpl
jb
jle
loopne
mov
lret
sub
ja
mov
fdivl
les
ffree
push
xchg
out
adc
and
push
jl
add
xor
stc
ret
and
fadds
aas
arpl
lcall
stos
call
pop
movsl
enter
and
ss
iret
xchg
stc
pop
psubusw
mov
pop
cmovle
ret
ss
mov
and
dec
push
loope
daa
data16
lret
addl
in
mov
test
inc
pop
cmp
test
test
lock
mov
adc
mov
ljmp
pop
mov
pop
inc
mull
in
sub
mov
adc
mov
call
rol
insb
push
xchg
jmp
cmp
mov
fcoml
andl
andb
insl
loopne
test
cwtl
cmp
jle
jl
mov
fs
in
sbb
loop
in
xor
out
push
sub
jp
jbe
test
add
out
lock
push
daa
pushf
out
pop
aaa
pop
sbb
pop
test
jle
cld
fists
xor
stos
imul
push
add
push
dec
test
lret
inc
fdivr
adc
test
lahf
dec
cmp
enter
push
mov
adc
add
push
mov
xor
push
nop
add
adc
and
xlat
js
ss
xchg
cmovge
ret
jmp
mov
in
mov
arpl
xchg
das
jp
and
daa
loope
test
push
data16
xchg
jp
cli
pop
imul
cmp
jnp
loope
stos
cmp
fs
pop
mov
fisubrl
inc
pop
fs
jle
out
jno
push
popa
cmp
repnz
dec
push
mov
int3
pop
mov
fisubl
loopne
sbb
xchg
std
lret
jmp
jb
sub
mov
dec
dec
mov
aam
sub
sahf
and
js
lea
mov
cmp
out
stc
imul
test
cmp
mov
pop
outsl
xchg
enter
idivl
cld
pop
dec
sbb
insb
and
cli
cli
xchg
loopne
jge
lret
pushw
in
or
pushf
clc
sar
inc
fwait
pop
and
clc
xchg
dec
and
mov
add
push
cmpsb
shrb
dec
pop
movsl
fabs
mov
push
push
dec
and
xlat
mov
sbb
xchg
push
jo
xchg
movsl
sbb
pop
std
mov
ds
cmp
sbb
inc
lahf
mov
cmp
and
adc
xchg
mov
push
xchg
mov
jg
pop
push
mov
add
or
dec
push
andl
sbb
xor
cmpsl
popf
loop
fs
push
inc
xchg
push
movl
adc
push
and
idivl
adc
imul
lods
sbb
inc
gs
jg
mov
and
mov
jo
fistpl
mov
xor
push
je
ljmp
je
mov
pop
nop
push
mov
or
sbb
cmp
divl
dec
insb
test
in
movb
or
push
push
xlat
enter
stc
push
add
repz
test
and
pusha
sub
gs
mov
mov
inc
mov
pop
xchg
scas
enter
add
int
lods
pop
push
movsl
lock
repz
xchg
jb
ljmp
rclb
sub
js
bound
in
adc
fdivr
outsb
lods
adc
mov
aad
and
mov
xor
mov
jg
je
inc
dec
sub
cmp
adc
pop
cmp
and
lcall
dec
lods
call
ds
aam
je
jle
sti
cmp
xchg
subl
add
aad
sbb
not
js
xor
xorb
in
xor
or
test
and
and
flds
adc
dec
es
outsl
inc
es
or
cmpsl
mov
mov
xchg
pusha
out
or
mov
insb
dec
push
push
add
jl
push
in
jmp
mov
mov
insl
add
sahf
imul
xor
ja
es
pop
pop
sti
lock
call
add
shrl
test
mov
mov
add
aam
int3
mov
mov
inc
repz
dec
dec
cwtl
inc
xchg
mov
imul
js
cwtl
fnstsw
call
adc
test
xor
jecxz
stos
dec
cld
lret
jl
sti
aam
jge
scas
cmp
rcll
mov
fdivs
sbb
and
xchg
and
cmp
push
test
das
imul
mov
gs
lods
mov
pusha
je
pop
xchg
imull
mov
mov
xor
shl
aam
jmp
xorb
cld
mov
sahf
fildl
pop
lock
mov
or
jne
insb
or
sbb
enter
imul
xor
popa
xchg
jecxz
mov
fmuls
push
popa
add
sub
aad
ret
jl
mov
mov
adc
sub
jg
ja
pop
gs
mov
cmp
ficompl
or
jae
pop
jg
iret
jns
xchg
sbb
and
insb
xchg
dec
push
popf
shrl
cld
lahf
add
push
push
sti
bound
mov
sub
and
pop
aad
hlt
jns
fs
push
jg
cmp
cmpsb
dec
jmp
sbb
int3
push
jns
mov
pusha
in
xor
leave
les
adc
lret
dec
cmp
cmp
fwait
ret
cmpsl
icebp
pop
test
jecxz
xor
jae
pop
cwtl
gs
cld
sti
push
xorl
insb
leave
xchg
insl
cmpsl
clc
cltd
vmovss
and
ret
push
in
push
cmp
mov
push
pop
push
aas
lods
iret
mov
dec
scas
and
jae
cmc
icebp
lret
daa
pop
int
mov
sbbb
loope
xchg
dec
mov
mov
ljmp
das
rorl
dec
lds
jns
push
mov
lods
sub
ret
data16
cli
pop
mov
imul
fsubs
mov
ret
imul
leave
or
sub
inc
lds
cmp
push
cld
mov
fistps
xor
js
mov
push
data16
adc
adcl
add
mov
pusha
fwait
jne
add
inc
scas
mov
fdivs
mov
push
adc
jecxz
in
out
push
sub
push
cmp
push
lcall
iret
frstor
xor
mov
sarb
les
xorb
int
or
je
out
hlt
stos
rorl
jge
mov
cmpsb
loope,pt
or
test
or
cmp
pop
mov
mov
and
sub
test
add
lods
cmp
repz
cmpsl
add
and
xor
sti
add
pop
movsl
mov
xchg
rorl
leave
testl
shrb
in
mov
stos
jbe
stos
xor
faddp
pop
push
ficomps
outsb
cmp
imul
mov
imul
pop
pop
jl
sbb
dec
pusha
int3
sahf
and
xor
mov
test
push
lret
cmp
decb
ret
movsl
ret
test
movsl
pop
jno
or
and
in
mov
loop
lods
fistpll
in
sbb
in
inc
addr16
inc
adc
push
adc
scas
bound
add
xor
jae
stos
or
xchg
sub
sub
call
dec
aas
add
stos
int
push
mov
sbb
mov
push
cmp
sub
mov
jb
ficompl
iret
scas
jo
outsl
out
mov
mov
call
jbe
or
fisubrs
sub
jmp
mov
es
add
out
jno
xchg
fs
lret
enter
inc
js
dec
cmpsl
gs
sbb
call
clc
xchg
imul
pop
jmp
out
pop
inc
jns
mov
test
or
int3
repz
dec
outsl
mov
pop
inc
xchg
inc
fisubrs
push
fisubrs
xor
popf
cmc
daa
imul
int
sub
shlb
sbb
push
pushf
or
xchg
dec
sbb
cli
fsts
mov
lret
shrl
push
adc
lods
fidivrs
lcall
scas
cmp
sbb
gs
dec
fsubp
cmp
jecxz
pop
repnz
push
gs
in
lgs
add
adc
sbb
sub
mov
int
mov
ds
lcall
gs
rcrl
xchg
divl
leave
sub
in
imul
sub
fwait
xchg
mov
xor
cs
je
inc
stos
orl
mov
sbb
stos
cli
adc
mov
adc
sahf
ja
xchg
lock
jb
and
pop
push
add
shl
cld
cwtl
fisttpl
cltd
sbb
xlat
and
lods
mov
int
jns
icebp
mov
add
or
jo
dec
xchg
fwait
bound
adc
cmp
arpl
lds
mov
dec
roll
ret
sbb
or
mov
cld
adc
sti
cmp
jb
int3
sahf
movl
roll
sarb
and
push
or
sbb
xchg
addr16
adc
mov
out
test
xlat
xor
inc
push
in
jns
rclb
inc
mov
lret
lock
push
leave
ret
roll
test
cmp
scas
sbb
add
mov
shll
stos
jo
xchg
cmp
cmpsb
int
mov
mov
dec
cmp
dec
xchg
adc
or
cmpsl
mov
pop
dec
pop
pop
fisubl
ja
scas
adc
repz
loopne
push
mov
cmpsb
cld
stc
xchg
cmp
mov
mov
in
lods
sbb
in
sbb
mov
mov
pushf
cs
in
jmp
xchg
xchg
pop
xchg
mov
lock
or
imul
mov
fildl
enter
ljmp
cmpsb
or
icebp
nop
or
shl
roll
fbld
ffree
int
mov
xor
push
mov
pop
fidivl
dec
cmp
out
cmpsb
loope
xchg
jae
out
ds
hlt
mov
in
cmpsb
ss
movlps
iret
out
push
jp
test
xor
inc
xchg
adc
push
jb
ds
leave
int
push
mov
sbb
inc
or
sub
js
pop
icebp
push
xor
cltd
into
cwtl
and
imul
dec
xchg
mov
fildl
ficomps
fiaddl
sub
dec
xchg
mov
push
jge
pushf
es
pop
popf
xor
push
push
pop
xor
bswap
mov
fmull
cmp
je
xor
lds
jge
in
lret
out
jl
fbld
gs
cmp
xor
xchg
pop
cmc
mov
scas
push
aaa
popa
mov
into
sbb
fdiv
jg
shr
ja
or
mov
push
or
cli
ljmp
mov
sub
daa
mov
mov
sbb
mov
aam
pusha
fcom
fmull
subb
mov
adc
and
jmp
xchg
mov
das
jbe
shrb
das
nop
fldlg2
pop
call
cld
fistpl
jmp
jns
cld
jecxz
mov
jl
xor
mov
mov
jle
test
pop
enter
lods
out
aam
fwait
data16
ds
test
and
imul
ss
pop
xchg
sti
pop
inc
int
lds
sub
inc
pop
ret
mov
outsb
mov
cmpsb
push
mov
jmp
jae
pop
mov
push
lds
mov
cld
cmc
adc
hlt
inc
sti
sbb
je
arpl
pop
sub
cmp
xchg
ds
dec
aaa
jmp
stos
lea
dec
lods
jns
pop
or
pushf
xlat
adc
sub
pop
cmpsb
lds
cmpsl
fisubl
xor
pushf
add
nop
cmp
popa
inc
std
stos
inc
jne
nop
push
subb
dec
and
out
fxch
mov
jmp
or
pusha
adc
push
dec
movb
ds
rcr
dec
adc
test
fists
pushf
push
aas
rcll
pop
pushf
pop
mov
sub
mov
inc
mov
xchg
pop
loope
outsb
shlb
mov
js
xor
sub
cmp
inc
pusha
adc
xorl
mov
inc
push
scas
or
push
fsts
inc
popf
sbb
pop
int3
or
shrb
repz
xor
repz
xchg
sub
mov
test
xchg
mov
lds
insl
inc
push
rorb
pop
sub
adc
clc
cmp
rolb
sub
dec
fstpl
mov
pushf
push
gs
inc
nop
pop
pop
mov
mov
jge
dec
outsb
std
jne
push
imul
mov
iret
add
scas
pop
enter
adc
ljmp
and
add
js
cmc
jmp
imull
xor
outsl
push
ljmp
stos
adc
loope
pop
ljmp
mov
out
or
ss
inc
scas
xlat
cmc
in
push
sti
pop
or
jnp
decb
push
inc
jp
jae
jno
stos
pop
push
and
arpl
mov
xchg
fidivrs
xchg
inc
fsubrl
in
adc
jecxz
add
repz
xor
mov
popa
sbb
pop
ja
xchg
shl
repnz
pop
jns
push
cmpsb
inc
outsl
push
ficomps
arpl
jl
test
pop
ds
nop
push
adc
insl
dec
lods
cmp
push
fcmovu
mov
test
pushf
xchg
xor
add
jb
loop
cmp
in
rclb
pop
addl
and
inc
add
dec
jcxz
insl
bnd
je
dec
mov
pop
in
push
mov
mov
xor
repz
mov
jns
fs
mov
jne
jge
out
nop
mov
movsb
xchg
adc
into
mov
call
lret
cltd
cmpsl
jnp
addb
push
repz
call
mov
mov
sbb
xor
ss
adc
imul
inc
ljmp
popa
and
and
inc
jecxz
pop
mov
sahf
faddl
pusha
push
xchg
mov
mov
sub
into
scas
inc
out
mov
pop
cmpsb
dec
repnz
mov
push
ficoms
into
or
and
xchg
add
inc
loopne
jae
ja
in
daa
sti
lods
cmp
loopne
popl
mov
cmp
outsl
pop
xchg
aam
les
cwtl
push
fcompl
lahf
ret
xlat
loope
inc
pushf
and
pop
and
xchg
je
sbb
or
std
mov
fdivrs
stos
mov
pushf
iret
and
ret
xchg
cwtl
and
xchg
in
out
cmc
sub
xchg
sub
sub
stc
imul
or
inc
and
xchg
jp
imul
cmp
or
nop
dec
pop
mov
sbb
gs
adc
ret
leave
je
pop
push
dec
movb
in
cmp
ljmp
jmp
jg
push
stos
addl
imul
call
inc
out
das
jne
dec
int3
scas
pop
cli
mov
arpl
push
decl
or
jecxz
loop
sub
push
or
in
push
xchg
inc
inc
mov
push
std
inc
xor
cs
dec
jmp
jno
mov
and
jmp
mov
pop
dec
cmp
inc
shrl
mov
jge
xchg
mov
xor
xchg
outsb
or
sbb
mov
loope
je
jmp
cld
into
pop
aas
xchg
dec
inc
out
and
pop
cld
jnp
mov
fcoms
xor
loopne
add
mov
jae
lock
lea
sbb
mov
xchg
cmp
cmp
mov
push
fdivs
xchg
orl
xor
cli
push
push
xchg
push
enter
sub
jmp
mov
inc
mov
in
sarl
cltd
mov
aaa
mov
repz
cmp
ss
mov
push
mov
push
push
mov
mov
das
test
push
in
and
xor
mov
outsl
jne
xor
fsubr
inc
in
and
subl
mov
in
pop
mov
jp
fists
jo
cwtl
sahf
push
lods
or
mov
es
push
cli
jmp
or
push
add
xchg
fnstenv
loopne
pop
xchg
ret
repnz
cmp
xchg
movsl
sub
ret
xchg
daa
notb
lahf
jns
popf
push
pop
add
mov
jge
fstps
loop
and
aam
insl
fs
dec
enter
aas
stos
rcrl
in
in
in
imul
xor
adcb
sahf
pop
inc
fisttpll
mov
inc
jb
imul
sub
mov
stc
repz
push
mov
add
fdivs
jl
dec
mov
dec
cmp
shrb
xchg
leave
in
sub
mov
out
sub
aam
xor
js
xchg
ret
inc
push
xchg
jae
aas
or
push
mov
fidivrs
lret
push
movl
xor
cmp
out
ss
pop
cmp
test
pop
inc
adc
adc
and
fdiv
adc
adc
mov
jne
flds
xor
mov
loop
rorb
sbb
cwtl
mov
fwait
cld
xor
jo
fimull
jnp
jns
lock
xchg
cmp
mov
in
les
jne
mov
sub
sub
mov
mov
mov
push
hlt
loope
inc
gs
loope
pop
xor
adc
lcall
or
mov
andl
subb
stos
cmp
push
fstps
loop
cmp
cwtl
stos
stc
jl
jno
dec
jno
popf
dec
idivl
dec
outsb
into
adc
mov
or
cld
push
sbb
push
mov
or
aaa
sub
sbb
xor
mov
mov
jmp
add
loope
dec
mov
mov
xchg
sbb
decl
xchg
insb
es
or
or
dec
sti
jecxz
aad
sbb
mov
getsec
xor
jno
jmp
imul
pop
std
loopne
pop
mov
imul
dec
or
test
jb
pop
pusha
iret
inc
nop
int3
loopne
scas
or
into
jmp
jne
mull
push
add
xor
nop
xchg
stos
xchg
or
cmpsl
add
test
sbb
lea
dec
mov
scas
adc
cmp
push
scas
shrb
adc
inc
mov
outsl
sub
idivb
mov
aaa
push
scas
pop
cli
xchg
inc
out
jg
mov
sub
push
cmp
jle
inc
jne
lret
mov
dec
mov
dec
outsl
jns
jecxz
test
mov
dec
xchg
rolb
lret
push
iret
inc
pop
jge
or
inc
leave
rorl
popf
xchg
mov
cli
sub
adc
sbb
fidivrl
cmp
outsb
push
sti
dec
in
inc
outsb
adc
dec
in
and
cmp
mov
sub
xchg
aad
ret
pop
jg
mov
push
jmp
and
push
jo
xor
enter
flds
enter
push
adc
cmp
test
sbb
js
fwait
loope
stos
out
push
aas
hlt
rcr
pop
jle
sbb
xor
arpl
cwtl
adc
cwtl
sti
jmp
xchg
mov
push
xor
mov
adc
repz
mov
or
sahf
scas
xor
fiaddl
in
mov
jae
mov
iret
in
cmp
repnz
sub
inc
clc
pop
inc
in
cwtl
mov
sub
add
jmp
jnp
rcll
or
sub
and
div
jecxz
mov
sub
ja
adc
add
sub
dec
jg
scas
loopne
jae
xor
xor
or
adc
fdivs
dec
push
fsubrs
cmpsb
lret
mov
pop
roll
cmp
cwtl
push
enter
sbb
push
mov
int3
rcrb
jmp
fdivs
cmpsb
fsts
int
jno
cmp
faddl
xor
clc
stc
sub
lret
mov
les
xchg
lods
cmp
xchg
xor
add
jecxz
daa
dec
into
jo
xlat
and
test
js
or
cmc
xchg
xchg
dec
jg
clc
jnp
in
lret
dec
pop
mov
adc
push
mov
dec
jg
fs
jg
push
xchg
iret
cmpb
xchg
mov
loop
lcall
icebp
sbb
sub
sbb
out
inc
mov
jge
mov
or
jmp
pop
in
dec
or
jbe
add
movsl
push
push
push
cmp
data16
or
test
inc
mov
jg
fcoml
mov
int3
pushf
bnd
pop
hlt
je
call
push
cmpsb
call
inc
jno
repnz
cmp
loope
adc
lcall
sub
rolb
pop
sahf
hlt
mov
mov
testb
pop
mov
gs
sarb
aas
push
xor
aaa
sub
cmp
xor
push
push
lret
rorb
ss
inc
sbb
imul
mov
mov
dec
shlb
add
mov
add
aas
mov
out
add
cmpsl
pop
xchg
xor
adc
pop
lcall
xchg
sub
jo
sti
xlat
jge
ret
jecxz
loope
fcoms
mov
cmp
cmp
xchg
scas
dec
sbb
cltd
cmp
pop
daa
sub
or
negl
mov
mov
mov
inc
pop
jno
and
sbb
xchg
popf
loope
pop
and
pop
dec
push
lahf
enter
out
sbb
xor
sub
dec
jnp
lods
xchg
scas
aas
call
clc
call
daa
inc
iret
aaa
mov
mov
ret
or
sub
mov
les
sbb
outsl
movsb
daa
lret
push
push
jo
lock
imul
jns
and
push
sbb
cltd
xchg
aas
sbb
sbb
mov
imul
lods
fisubs
sbb
repz
cmp
idivl
shrb
mov
out
mov
or
mov
sbb
push
xchg
mov
cmp
jnp
dec
cmc
and
cs
imulb
fistpll
outsl
sbb
xor
out
xlat
mov
xor
push
test
xor
daa
fld
pop
imul
call
jmp
movsb
ljmp
imul
pop
hlt
cmc
jecxz
push
cmp
push
or
data16
pavgw
loope
shl
lods
mov
test
sbb
dec
jae
xchg
test
int3
rcll
adc
xchg
incl
mov
fiaddl
or
int
push
push
hlt
sub
ffree
xchg
adc
sbb
call
cmpsl
outsl
xchg
movsl
shlb
mov
test
adcb
xchg
mov
test
fidivl
iret
push
mov
mov
adc
xchg
std
sub
add
cli
stc
inc
scas
fisttpl
subl
addr16
pop
dec
sub
scas
mov
outsl
out
xchg
mov
mov
int3
sahf
fbld
sbb
dec
pop
lret
in
cmpsb
mov
push
mov
incl
dec
ret
pop
mov
pop
andl
and
add
stc
clc
cwtl
add
inc
orb
fidivs
jmp
push
mov
mov
das
out
mov
repnz
push
notl
mov
scas
mov
dec
lods
std
fldl
stos
mov
cli
lret
int3
sub
inc
neg
repz
jae
js
xor
stc
inc
adc
push
dec
hlt
outsb
lret
out
in
fmull
rcll
cmp
add
or
popa
ret
sub
pop
push
fwait
lea
fidivrs
subl
jmp
subb
jns
cmp
jb
test
inc
test
out
stos
js
jge
ret
pop
mov
out
cli
pop
decl
inc
ficomps
js
add
xchg
shll
mov
adc
xchg
xor
dec
inc
test
pop
enter
cmp
imul
dec
xor
mov
fstl
mov
push
out
sbb
addr16
into
pop
repnz
pop
cmpsl
add
out
xor
in
mov
jne
leave
lock
rclb
mov
les
cmc
aaa
roll
in
stos
fdivl
icebp
int
aaa
or
jg
cwtl
pop
mov
scas
xchg
fisubrs
adc
mov
mov
negb
or
sar
mov
in
int3
jno
lds
hlt
pop
loop
mov
shl
imul
in
pushf
sbb
add
das
push
push
jp
cmp
adc
push
mov
lods
ss
push
cmpsl
rorb
mov
or
dec
mov
sbb
into
lret
jbe
insl
cmp
add
ret
inc
lcall
jno
sbb
addr16
inc
lods
sbb
shlb
mov
push
lea
aaa
mov
mov
cld
jecxz
mov
test
fwait
ret
adc
data16
jne
cmp
lea
jmp
lods
sbbb
enter
jecxz
call
in
adc
xchg
sub
push
arpl
rcll
nop
mov
mov
add
js
pop
movsb
mov
dec
js
mov
test
and
fdivs
jbe
or
sbbb
add
lock
or
ljmp
insl
outsl
mov
jb
pop
inc
adc
arpl
jnp
push
sbb
repnz
or
adc
scas
aam
ja
inc
push
movsb
test
mov
mov
bsf
dec
in
in
mov
mov
mov
xlat
add
cs
sub
xchg
xlat
jno
cmp
scas
dec
mov
cmp
jecxz
xorl
lods
outsl
inc
jae
ficoml
nop
nop
sbbb
int3
jne
xchg
push
and
outsb
push
insb
out
cld
stos
xchg
mov
mov
imul
lret
jle
cmpsb
jns
rclb
dec
iret
test
out
fnstenv
pop
sbb
int3
fwait
mov
inc
es
fdivrs
mull
cmp
fwait
std
sbb
aaa
sbb
les
test
je
or
mov
fwait
jmp
dec
fidivs
sbb
out
test
mov
xorl
icebp
lret
loope
or
adc
repz
mov
inc
xor
and
xor
in
push
pop
aaa
pop
in
out
flds
or
push
jo
outsl
lret
loope
fstpt
mov
enter
jae
pop
in
fs
fildll
pop
xor
ja
xorl
pushf
adc
aas
lret
scas
and
mov
stos
lea
imul
sti
pushf
adc
add
jecxz
inc
inc
mov
aas
push
daa
mov
fildll
loope
shl
pop
push
push
dec
lahf
mov
out
call
inc
cmp
xchg
movsl
lret
nop
inc
lret
mov
hlt
push
jge
js
cmp
sahf
push
mov
or
daa
fwait
jno
cwtl
mov
xchg
dec
out
inc
scas
add
pop
add
and
mulb
cmp
mov
jb
out
es
dec
mov
mov
mov
scas
adc
jns
je
sub
mov
aaa
lret
repnz
push
jo
jo
lret
les
push
lahf
add
hlt
mov
ss
or
leave
mov
mov
popf
hlt
cmp
xchg
mov
and
cwtl
mov
push
daa
sbb
fsubrs
daa
mov
sbb
jns
and
adc
xor
sub
in
ret
xor
cmp
sub
dec
pop
and
adc
dec
add
mov
mov
test
lds
mov
mov
stos
fsubr
xchg
sbb
adc
sub
test
rorl
and
fisubrs
shrl
stos
jecxz
outsb
dec
leave
in
xchg
push
mov
dec
shlb
repz
cmpsl
sub
sbb
cwtl
icebp
lret
jae
pop
cmp
or
pop
jl
dec
in
cld
xor
xchg
enter
je
sub
cmp
cli
lea
loopne
aam
std
mov
cli
mov
pop
xor
dec
iret
hlt
jno
mov
stos
repnz
dec
out
addb
mov
mov
test
pop
and
adc
in
sub
adc
div
xchg
dec
sbb
lock
stos
xchg
add
arpl
adc
dec
sarb
repz
mov
cmp
or
orl
jl
int
mov
xor
mull
fadd
cwtl
xchg
push
xchg
je
test
xor
lret
or
mov
jle
mov
or
bound
add
adc
and
push
xor
ljmp
sub
adc
roll
and
pop
call
shlb
pop
jne
cmp
inc
xchg
push
mov
xlat
pop
iret
nop
inc
xchg
jbe
cltd
mov
es
xor
add
mov
test
hlt
pop
pop
dec
jp
fnstsw
and
sar
dec
data16
and
or
cli
sbb
jnp
fscale
rolb
push
inc
subl
xlat
adc
or
dec
xchg
aam
xor
imul
dec
movsb
aaa
jg
mov
fwait
rclb
adc
aad
jecxz
jnp
filds
loopne
mov
dec
lock
sub
dec
mov
mov
cmp
scas
out
xchg
dec
inc
sub
push
jecxz
test
add
sbb
mov
decb
lret
push
inc
and
in
inc
sub
mov
push
pop
cld
cmp
ret
mov
repz
sub
xlat
jns
int3
nop
cmc
xorl
push
pop
cmpsl
or
arpl
js
stos
scas
pop
mov
shll
mov
leave
ds
mov
mov
push
or
in
pop
lods
cld
std
das
mov
and
decb
adc
in
add
push
mov
cmpb
out
inc
xchg
add
jbe
les
loop
movsl
inc
inc
sub
leave
adc
mov
ja
push
sbb
loope
cmp
sub
mov
scas
and
xchg
adc
out
fdivrl
ljmp
add
jnp
cmp
into
sub
xor
cmpsb
or
pop
cmpsl
jmp
xor
xchg
jg
xor
and
pusha
stos
decl
out
push
dec
or
push
xor
and
es
loop
sub
aam
sbb
and
jno
or
mov
gs
dec
mov
mov
pushf
jle
imul
ljmp
push
xlat
dec
stc
shrl
shrb
mov
mov
xchg
std
cmpb
mov
dec
pop
pop
mov
mov
mov
jmp
jmp
push
cmp
push
inc
or
test
adc
adc
mov
popf
cmp
cmp
mov
sub
loop
jbe
lods
cmpsb
sbb
les
and
mov
fbld
cmp
mov
push
jno
add
mov
lock
inc
pop
out
jo
fnstsw
push
orl
inc
in
or
idivb
movsb
dec
scas
lcall
std
pop
add
jb
mov
or
lods
das
mov
ss
mov
adc
test
inc
sti
adc
clc
in
daa
cmp
fs
das
nop
mov
out
xchg
mov
scas
xor
pop
or
aad
pop
das
cmp
mov
pop
sti
pusha
mov
push
jno
cwtl
notl
fucomp
sub
scas
cld
shrl
xor
repz
inc
pop
jle
aam
and
jmp
mov
inc
fmuls
fisubrs
mov
dec
ja
pop
outsl
addr16
test
inc
sbb
div
cmp
xchg
mov
and
pop
and
dec
ds
lret
cmp
hlt
inc
js
daa
jg
into
push
idiv
cwtl
out
cwtl
xor
cmp
push
cld
add
lea
pop
xchg
dec
mov
mov
and
jmp
iret
mov
lahf
mov
jle
pusha
xchg
xchg
or
scas
add
std
ret
sub
jnp
iret
rcr
leave
xor
dec
jecxz
and
testb
pop
mov
jbe
cmp
mov
pusha
jbe
in
sub
shlb
mov
popa
adc
stos
push
outsb
insb
sbb
je
xchg
push
xchg
add
inc
xor
sti
xor
inc
insb
inc
in
xchg
enter
inc
or
adc
cltd
testl
sbb
cwtl
mov
inc
icebp
ret
xlat
in
xlat
sbb
in
jmp
sub
mov
aam
stc
loopne
shrb
mov
std
cmp
aas
cmp
jp
dec
lods
adc
xor
or
dec
stos
cwtl
pop
in
xchg
cli
mov
pop
sbbl
mov
fidivrs
pop
idivb
pop
lahf
dec
or
int
inc
in
das
jbe
mov
int
dec
fs
loopne
mov
push
scas
jno
add
cmp
sbb
xor
add
jns
insl
mov
inc
cmp
test
fs
loopne
in
pop
mov
aam
add
sbb
insb
inc
and
xor
rcr
inc
out
pop
mov
sahf
jae
push
push
sti
cltd
push
test
lcall
inc
ss
testb
jg
jl
xor
mov
inc
into
in
jbe
insl
add
lret
hlt
jg
and
mov
adc
jb
sub
ss
jbe
mov
pop
pop
fnstsw
adc
les
andb
sahf
das
shl
jae
mov
push
shr
stos
add
movsl
dec
xor
xchg
xor
in
fnsave
test
xchg
ficoms
xchg
mov
inc
nop
outsl
fs
adcb
sar
sub
cmp
mov
sbb
adc
movl
inc
jmp
lea
xlat
dec
push
cwtl
mov
cmpb
inc
insl
cmp
imul
add
adc
movsl
fildll
insl
adc
hlt
mov
cmpsb
mulb
or
push
push
pop
mov
movsb
add
mov
pop
mov
sub
popf
adc
or
xchg
loop
pop
push
pop
pop
mov
shll
or
imul
xchg
das
lret
pop
mov
mov
enter
ficompl
push
mov
xacquire
adc
lret
cs
jle
inc
mov
cmc
jmp
mov
ret
cmp
insl
inc
orl
les
loope
sbb
ret
outsb
pop
mov
int
fisubrs
dec
clc
push
popf
adc
mov
jge
mov
roll
out
dec
push
dec
push
mov
sahf
xlat
sbb
sbbl
int
cmp
or
das
cmp
repz
cmc
dec
imul
popa
int3
cmp
adc
clc
xlat
xchg
cwtl
or
loopne
in
cltd
push
dec
shlb
sbb
add
sbb
mov
push
repz
xchg
in
push
test
cmp
or
pop
jmp
mov
mov
xor
inc
mov
popa
fidivl
push
add
fwait
jle
sahf
jne
or
out
push
les
push
adc
inc
out
mov
xchg
xchg
loop
aas
pop
orb
jg
mov
decl
divl
jne
pushw
dec
and
jp
xchg
push
dec
pop
mov
les
sbb
inc
filds
pop
and
dec
out
stc
mul
repnz
inc
pop
lods
adc
sarb
out
cmp
push
or
addr16
jp
mov
and
push
mov
inc
or
insb
sub
push
shlb
outsl
sub
push
and
xorl
test
sbb
lods
adc
test
pop
sbb
fdivrl
jo
pop
out
std
mov
test
bound
push
repz
push
sub
das
cmpl
jae
mov
jge
daa
dec
int
movsl
xorb
sahf
inc
cmp
push
mov
ficompl
inc
frstor
mov
lret
call
or
sbbl
enter
into
xchg
add
aad
add
inc
lahf
mov
mov
dec
clc
jg
jbe
pusha
das
xor
mov
ret
enter
imul
pushf
movsb
fnstcw
mov
pop
mov
and
stos
out
xor
sahf
test
js
pop
fdivs
fstpt
xor
ljmp
and
dec
sub
hlt
in
jbe
scas
xlat
rcrl
lret
cmp
stos
jmp
mov
dec
lahf
loopne
sbb
mov
pop
push
out
xor
sahf
aas
and
dec
pop
push
and
out
jmp
lahf
sbb
fstps
lcall
inc
sbb
ljmp
mov
cltd
stc
push
aam
and
adc
or
push
inc
or
adc
test
push
aas
jbe
stos
fcoml
lods
and
add
fs
imul
loop
sub
repnz
dec
inc
cmp
test
dec
jg
cmp
shll
cli
mov
and
cmpsb
sub
scas
inc
adc
sub
insl
outsl
xchg
into
dec
jo
add
mov
push
jmp
gs
test
adc
add
mov
xor
push
outsb
pop
stc
push
dec
lahf
in
sbb
adc
aad
pop
pop
cmpsl
jns
xchg
cld
iret
lret
jl
cmpsl
sti
rcrl
std
sub
fmul
xor
xchg
or
push
or
sahf
push
push
testl
loope
or
xor
xchg
and
popf
xchg
fsts
out
sbb
pushf
mov
mov
sub
loope
sbb
add
jno
std
push
loope
sub
inc
mov
inc
mov
enter
fcoms
enter
lret
daa
xchg
pop
jnp
xchg
mov
xlat
push
add
popf
xor
xchg
mov
cmp
dec
mov
loop
subb
mov
daa
fs
stos
pusha
dec
sbbl
sbb
jns
lods
adc
ja
cmp
pop
xchg
mov
data16
in
imull
jb
cs
aam
pop
sbb
pop
cmp
mov
xchg
cmpsb
inc
pop
into
scas
daa
stos
sbb
or
out
cmpl
call
bound
je
aaa
mov
dec
call
push
cmc
sub
insl
leave
data16
mov
leave
mov
push
xor
outsl
xor
pop
xchg
cmp
xchg
cs
push
jb
xor
idiv
testb
scas
adc
cwtl
insb
mov
nop
icebp
out
pop
xor
jge
or
add
fsubrs
jb
lock
mov
andl
pop
xor
lret
mov
xor
stos
mov
fistpl
in
sbb
je
addr16
call
and
and
loope
ja
mov
push
jne
imul
dec
adc
push
sub
sub
add
jno
inc
xchg
test
inc
jge
int3
leave
inc
or
push
cmc
sbb
push
push
jmp
clc
fcompl
aad
push
push
popf
sbb
ret
imul
ljmp
jg
lret
into
data16
jge
les
cmp
jp
adc
notl
leave
sbb
mov
lea
push
push
out
cmp
jmp
mov
les
stos
repnz
vmwrite
sahf
int3
out
jo
or
cmc
aas
mov
jg
fmuls
adc
adc
mov
mov
je
ss
ss
sbb
pop
ja
inc
jae
xlat
push
cmp
mov
das
and
push
roll
or
dec
pop
cwtl
xor
adc
push
adc
xchg
in
nop
xchg
scas
fdivrl
sbb
mov
data16
xchg
jbe
jl
ja
jae
push
xchg
dec
sbb
dec
loope
adc
and
cltd
jae
insl
mov
in
ret
or
adc
shrl
inc
jg
dec
shrb
sti
sub
mov
and
add
inc
loopne
leave
in
mov
ljmp
and
dec
add
ret
pop
and
ficomps
pop
nop
ja
shll
pushl
or
out
nop
pop
js
ljmp
xor
sub
js
mov
push
mov
add
inc
pop
push
imul
mov
xlat
sub
push
inc
pop
mov
gs
pop
mov
push
mov
ficompl
xchg
cmp
out
or
fwait
and
sub
lret
mov
inc
xchg
neg
ficomps
or
imul
push
daa
inc
push
lods
mov
bswap
mov
enter
rcll
pop
dec
cmp
scas
jp
daa
aas
es
hlt
add
adc
push
enterw
sbb
dec
push
cwtl
dec
inc
sti
pop
or
ja
das
seta
js
and
pop
mov
or
mov
mov
sarl
ficomps
xor
adc
aaa
stos
or
divl
mov
scas
mov
cmp
xor
push
scas
clc
shrb
mov
sub
xor
in
jno
pop
xchg
js
push
or
jp
arpl
aas
add
call
cmpsb
push
test
cmp
nop
andb
inc
cld
das
push
popa
inc
xchg
test
xor
sbb
xchg
jbe
add
inc
inc
mov
xor
addr16
repz
cld
repz
pop
inc
xor
mov
push
inc
hlt
mov
movsl
xchg
shlb
daa
out
subl
push
shll
sbb
xchg
sbb
or
ds
test
loopne
in
pop
xchg
adc
aad
xor
sub
out
mov
insl
aam
cltd
sbb
adc
add
push
dec
xchg
lds
pop
pushl
mov
leave
clc
push
mov
adc
in
push
mov
inc
mov
xor
pop
mov
add
dec
pop
push
pop
and
outsl
cmp
arpl
fbstp
dec
jnp
mov
pusha
pop
sub
fs
mov
mov
mov
jp
call
sub
sahf
sub
pop
cmove
fwait
dec
jge
jmp
nop
pop
xchg
outsb
ret
mov
in
push
jo
in
std
mov
mov
ja
stos
das
stos
pop
into
rclb
test
inc
in
pop
sbbb
adc
fs
jns
in
repz
pusha
mov
inc
std
sub
pop
data16
loop
cld
inc
cld
in
cmpsl
lea
stos
cmc
jl
fiadds
sub
jnp
ret
push
push
sub
fidivs
fidivl
cmp
xchg
out
lods
loopne
in
mov
cmp
rclb
sub
psubusb
daa
into
fdiv
push
das
call
test
mov
loop
shrl
cltd
jno
cmp
xchg
sti
icebp
nop
and
imul
push
mov
cmp
jg
cltd
data16
mov
addr16
fldl
fcomps
mov
sbb
mov
in
lods
sub
jle
je
sub
popf
cs
fcoml
jae
mov
lock
clc
inc
int3
lcall
xchg
jmp
mov
and
jae
imul
cmp
in
or
inc
sti
imul
cmpsl
adc
je
addr16
jg
and
pop
into
xchg
mov
sub
mov
ljmp
loopne
data16
push
nop
mov
mov
jecxz
inc
adc
pop
je
push
mov
in
hlt
lock
push
outsb
add
mov
cmpsl
mov
cs
test
jle
cmp
rcll
push
scas
mov
aad
pop
insl
aam
xor
arpl
ret
push
popa
loope
loopne
test
jg
notl
in
aam
inc
fabs
mov
dec
add
addr16
push
rcrl
jnp
mov
push
cmp
or
lock
jl
xlat
push
add
popf
push
push
rcll
pop
int
mov
adcb
adc
scas
dec
inc
or
js
jno
xchg
push
xchg
imul
sahf
sub
push
xor
nop
out
dec
or
or
ja
dec
mov
loope
das
mov
lock
orl
and
jo
xchg
into
sub
shll
adc
mov
mov
popa
mov
lahf
mov
cmp
in
lret
movsl
aas
inc
jmp
add
jb
or
ret
cmpb
xchg
jp
addr16
add
test
pop
ja
jb
mov
je
add
pop
pop
adc
mov
jnp
rorl
idivb
pop
xor
outsl
pop
add
mov
jne
nop
mov
sbb
cltd
mov
shlb
leave
int3
add
loope
mov
testb
sbb
imul
hlt
fs
add
testb
push
imul
ljmp
inc
pop
lock
sahf
pop
pop
xchg
into
sbb
add
imul
in
movsl
test
inc
divb
add
and
jmp
scas
insb
pop
sbb
cwtl
or
gs
xor
or
pop
or
pusha
aam
dec
sub
dec
in
pop
insb
not
and
adc
std
mov
push
xchg
jbe
cwtl
test
and
fwait
cmc
cmp
dec
dec
in
xchg
loopne
into
ja
and
mov
fdivrp
int
imul
mov
jbe
jo
xlat
jne
sbb
int
filds
xor
jno
jmp
cs
into
addb
inc
add
add
sahf
cs
aad
stos
test
enter
repnz
popf
lret
shll
call
and
stc
sbb
mov
test
add
ds
cmp
xor
dec
push
loop
int3
mov
inc
mov
fs
mov
or
cmp
loope
pop
and
mov
cltd
push
jp
push
stc
mov
orb
shl
hlt
cmc
aad
lea
push
cmp
mov
add
pop
bound
in
mov
stos
sbb
and
mov
das
aas
or
adc
xor
xchg
loop
mov
mov
mov
mov
leave
jmp
xor
ja
movsb
adc
push
push
sarb
pop
cmp
mov
int3
sub
jge
jecxz
mov
mov
scas
mov
mov
xor
in
js
gs
inc
sub
into
cmpsl
orl
adc
cli
loopne
dec
and
or
out
jle
enter
xor
stc
mov
sub
xchg
pushf
cmp
les
cltd
js
pop
lea
into
movsl
push
jmp
aaa
fsubl
in
je
shl
ret
stos
hlt
data16
lods
and
addr16
xchg
xor
lea
push
or
ds
xchg
cmp
pavgb
inc
jne
pop
push
inc
xchg
testl
mov
xor
dec
insl
or
enter
daa
push
shll
lret
mov
mov
sbb
and
and
pop
cmpb
xchg
int
cmp
rorb
je
aad
pop
leave
jmp
in
shlb
ret
dec
shll
xchg
daa
sti
mov
cltd
fstl
jo
shrl
or
loopne
adc
add
jnp
sbb
xlat
mov
arpl
das
das
dec
sarb
jno
xchg
fsubl
mov
popf
mov
int
jbe
stc
leave
pop
xchg
sbb
stos
in
add
xor
dec
pop
mov
imul
into
xchg
inc
xor
sub
lcall
out
add
sbb
add
rclb
mov
test
pushf
cmp
stc
add
inc
imul
xchg
cmpsb
mov
into
mov
mov
jp
dec
mov
lret
lods
jne
clc
cmpl
testl
ljmp
and
nop
rcll
push
ljmp
xchg
je
icebp
jno
rorl
lds
or
dec
enter
cmp
cmc
movsb
adc
push
neg
pop
mov
movsl
sub
lds
test
sbb
pop
cmp
dec
jbe
mov
and
pop
cmp
movsb
and
mov
mov
add
or
lods
cwtl
cs
nop
popf
cmp
data16
cmp
flds
xchg
repz
sbb
cld
jno
mov
out
in
inc
and
mov
and
push
fyl2xp1
lahf
imul
das
mov
or
jp
repnz
fwait
in
pop
sbb
daa
mov
add
scas
push
sarl
mov
cwtl
jo
sbb
loopne
adc
addr16
pop
sbb
inc
fwait
and
pop
lret
cmp
sbb
movsl
add
push
movsl
outsl
xlat
mov
clc
sub
push
cld
xchg
mov
int
sbb
pop
dec
push
outsl
jne
push
sti
sub
clc
jg
mov
out
scas
mov
push
imul
mov
subb
mov
xchg
fsubl
scas
into
jbe
push
mov
insl
sbb
imul
mov
jns
bound
dec
das
test
out
inc
mov
bnd
mov
jge
insl
mov
jno
daa
sub
mov
jg
imul
popa
mov
xor
clc
cmp
cmpsl
insb
and
ficoml
jns
xchg
xchg
xchg
into
fsubs
jae
arpl
add
das
xchg
push
inc
out
movsl
inc
xchg
in
mov
out
mov
aam
cmp
sbb
xor
and
and
inc
sub
and
mov
mov
mov
jo
out
negl
mov
mov
outsl
sahf
inc
in
in
fnstcw
pop
pop
ds
pop
sbb
jl
adc
in
cld
jge
inc
pop
mov
sar
fistps
or
mov
outsb
add
pusha
lret
cmpsb
outsl
ficomps
cmp
cmp
sbb
sub
cmpsl
jo
mov
int
or
enter
lret
mov
stos
xchg
pop
repz
aam
addr16
jo
sub
mov
add
cmp
mov
test
aaa
out
mov
nop
hlt
dec
inc
popf
lock
push
and
jb
in
in
xchg
pushf
mov
es
repz
add
insb
into
sbb
and
push
lea
and
mov
xchg
addb
or
movsb
rolb
jnp
ss
sbb
repnz
shl
out
rol
lret
jb
push
iret
sbb
daa
faddp
mov
push
xlat
fsubs
sbb
pop
repz
push
jle
add
add
test
addr16
xchg
push
cmp
jl
pop
test
xchg
popf
fdivl
add
fisttpll
mov
adc
stc
dec
outsb
lock
jmp
rcll
add
hlt
popa
loopne
mov
test
movsl
pop
es
cld
mov
insl
lret
outsl
test
nop
xor
cltd
cld
xlat
sub
addr16
fbstp
jge
fmul
xchg
mov
shll
and
test
lcall
cld
xor
pop
outsl
sbb
loop
fstpl
xor
cs
jecxz
sbb
inc
decb
sub
lret
add
push
push
ljmp
loop
pop
pop
dec
cmp
jnp
dec
xchg
mov
mov
scas
sub
pop
dec
out
push
push
adcb
popa
jae
and
add
out
fwait
mov
imul
dec
fistpll
xor
adc
adc
sarl
pop
xlat
shlb
lret
cmp
pop
sahf
push
arpl
sbbl
pop
cmc
dec
add
mov
pop
nop
pop
xor
pushf
in
jmp
arpl
loopne
pop
test
mov
sbb
les
pop
mov
fisubrl
jo
add
add
dec
das
popa
std
xchg
in
push
dec
or
push
inc
or
mov
and
and
cmp
sbb
sub
jae
sahf
push
rorl
icebp
adc
and
jbe
cmp
fidivrl
push
loopne
pusha
ljmp
mov
sbb
aad
pop
adc
cltd
lahf
sub
ror
push
jno
lds
adc
cmp
inc
ret
imul
jb
xchg
jne
out
cltd
sub
cwtl
insb
mov
popa
and
aam
testb
in
pop
lret
jp
pusha
pop
incl
lahf
push
imul
insb
cmp
scas
test
sub
psubsw
mov
pop
movsb
std
mov
xchg
jae
pop
out
js
sbb
dec
jmp
je
hlt
filds
andb
and
cmp
popf
xchg
xchg
cmpl
pop
xchg
movl
add
lock
hlt
xor
or
jg
test
or
inc
aas
add
sbb
cmpsb
and
add
jp
push
ds
outsl
mov
lds
aad
stos
pushf
loopne
inc
dec
pop
jns
lods
rcrl
sbb
sub
push
mov
mov
mov
daa
dec
int
imul
adc
adc
lret
xlat
divl
push
imul
stos
mov
inc
add
pop
sub
loop
arpl
insb
arpl
sbb
mov
jge
pop
push
push
dec
or
gs
push
ja
jl
mov
js
mov
outsl
daa
dec
inc
xor
test
out
stc
xor
cmpsl
loope
in
sbb
dec
pop
neg
dec
jno
push
adc
adc
and
pusha
and
push
add
mov
dec
aam
bound
and
lea
jbe
pop
inc
mov
sbb
ret
dec
jg
add
mov
gs
mov
outsl
inc
pop
add
mov
gs
sbbb
push
ds
lret
in
cltd
fcoms
fiadds
aam
int3
pop
bound
pusha
adc
sbb
xchg
cmp
les
mov
mov
cwtl
std
mov
not
or
movsl
stos
xchg
add
orl
fsts
aaa
aam
mov
push
jbe
cmp
mov
add
xchg
add
cmp
mov
and
mov
movl
cmc
push
and
sti
jae
outsl
sbb
xchg
push
mov
push
aaa
cmpsl
fdiv
cwtl
fiadds
bound
mov
iret
add
hlt
insb
nop
icebp
shll
push
dec
fisubrl
lock
pusha
push
loope
test
movsl
mov
mov
inc
icebp
or
and
test
inc
dec
pop
or
mov
es
xor
arpl
push
mov
dec
test
in
inc
daa
mov
rorl
inc
scas
lret
ss
repz
jns
cmp
xor
cmc
jp
or
push
cwtl
pop
iret
stos
xor
daa
cli
insb
adc
and
leave
lds
dec
ds
decb
ror
push
jge
cmp
inc
xchg
imul
ss
aam
and
jnp
ret
jnp
mov
data16
push
and
inc
xchg
xchg
cs
xchg
xchg
mov
sub
mov
idivl
scas
xor
daa
jl
dec
push
lods
mov
mov
jle
or
dec
mov
fs
lea
or
mov
out
cmp
call
int
pop
sti
fcmovne
std
nop
fs
decl
push
pop
cmp
cmp
ss
jecxz
cmp
sub
push
sarl
mov
xlat
lcall
push
jns
dec
dec
pop
inc
xchg
and
jecxz
cmpsb
ficomps
sbb
lea
les
addr16
add
aas
pop
scas
std
in
push
push
jns
rorb
xlat
dec
test
std
test
jbe
data16
push
adc
fwait
out
int
testl
fwait
hlt
test
repnz
sub
ljmp
or
lcall
mov
int3
and
sbb
les
inc
rcl
push
mov
outsb
and
mov
les
xor
dec
sti
ret
push
movsl
mov
scas
mov
pop
popl
hlt
mov
sbb
aad
andl
stos
icebp
inc
es
mov
mull
int3
test
jl
sbb
out
clc
out
aad
mov
push
sub
jl
add
xchg
ret
mov
repz
rolw
jae
cwtl
outsb
jle
add
adc
movsl
es
dec
orl
mov
jae
xor
cmp
jbe
sub
adc
mov
iret
push
mov
popa
mov
cld
mov
ljmp
xchg
lods
enter
lea
pusha
xor
or
mov
xor
adc
lea
aas
test
das
mov
movsb
into
std
inc
movsl
sub
shl
in
cmpl
mull
push
sbb
cmpl
mov
mov
mov
bound
fwait
cmpl
or
ss
add
dec
xor
push
sbb
ret
pop
push
mov
sub
int
ss
js
and
mov
jae
pop
fidivs
daa
fists
dec
or
mov
iret
stos
cli
mov
cmpsb
mulb
xor
sbb
testl
ljmp
filds
scas
test
or
inc
cwtl
out
mov
dec
sbb
pop
dec
pop
pop
mov
mov
sub
cli
js
les
inc
testl
mov
and
and
fldcw
frstor
leave
in
mov
pop
fsts
mov
or
xchg
in
imul
lock
mov
addb
and
jno
aaa
add
sub
insl
std
frstor
ljmp
testb
insb
pop
inc
bound
push
push
push
sbb
or
cmp
sub
ret
push
adc
test
push
cmp
mov
out
adc
sbb
mov
rorl
mov
push
sbb
lret
in
int
add
push
pop
test
loopne
out
sub
sbb
mov
incl
jp
shlb
rcr
mov
adc
call
out
sarb
jns
adc
jle
scas
sub
push
shrb
jg
je
push
mov
aam
push
icebp
mov
jg,pt
repnz
mov
clc
mov
or
and
andl
insl
inc
and
out
into
inc
pop
pushf
sbb
push
aas
push
adc
xor
dec
fwait
inc
adc
leave
push
push
sar
jle
pop
xchg
jmp
stos
adc
mov
add
pop
or
mov
inc
mov
pop
add
adc
add
ds
push
mov
mov
pop
call
push
xchg
sbb
push
push
mov
jne
adc
mov
ret
fs
sbb
dec
mov
xlat
aam
xchg
iret
fwait
cmpb
jmp
pop
std
lret
iret
or
fldl
int
lods
mov
xor
fimull
pop
xor
lret
movsb
dec
loope
sub
jle
and
insb
bnd
int
jo
fidivrs
das
dec
fmulp
in
mov
int
clc
jecxz
mov
das
mov
ja
imul
adc
insb
divb
sub
stos
stos
arpl
or
scas
push
push
rorl
fsubrl
dec
call
jbe,pn
cmp
or
fidivrs
cmpsb
adc
out
fimuls
pop
imul
dec
mov
inc
js
and
inc
fs
call
or
pop
aaa
cmpsb
xor
push
lods
scas
push
cli
sti
and
stos
shrb
pop
fwait
aam
push
ds
in
addr16
sub
push
je
mov
cs
sub
or
js
inc
rcll
mov
xchg
inc
inc
jns
xchg
outsl
pop
mov
mov
insb
push
jl
int
scas
cmp
and
jmp
sub
stos
fsts
push
sahf
add
fs
jns
jb
ficomps
test
sub
mov
bound
cmc
sub
fimuls
shlb
jmp
jbe
sub
push
mov
mov
mov
xchg
jb
filds
xchg
sbb
dec
loopne
xor
shlb
dec
dec
addr16
shrl
loope
fsubrl
je
idivb
lret
int3
xchg
push
sbbb
inc
popa
fdivrl
test
mov
inc
xchg
pop
test
xor
imul
push
ja
xlat
jmp
cld
jns
nop
push
push
jb
mov
mov
jo
dec
adc
mov
push
sbb
cltd
adc
mov
mov
push
adcl
nop
ja
fadds
pop
adc
jge
aas
lds
mov
mov
popa
mov
xchg
add
cmp
mov
inc
pop
or
mov
data16
mov
dec
xchg
or
inc
icebp
dec
xlat
test
outsb
mov
lea
aad
rol
cmp
mov
mov
test
push
jmp
leave
int3
mov
sub
loop
mov
out
lret
sbb
xor
lea
sub
and
lret
and
mov
fstpt
push
out
and
cmp
adc
and
mov
aas
leave
or
in
iret
iret
pop
mov
inc
lret
loope
in
pop
fcomi
repnz
popa
fs
sarl
adc
mov
in
push
sbb
mov
in
shll
in
mov
mov
cmpsb
cmp
push
inc
mov
mov
outsb
mov
add
sbb
mov
fisttpl
xchg
fisttpl
xchg
mov
sbb
cwtl
movsb
lret
mov
sahf
pop
mov
xor
inc
inc
inc
daa
inc
stos
xchg
adcb
xchg
out
test
stc
dec
mov
test
cltd
adc
movsl
cmpsb
sub
stos
mov
out
xor
inc
lock
sbb
testb
xchg
push
iret
mov
inc
push
jp
mov
int3
jle
sub
or
add
rorb
idiv
xchg
push
int
pop
int
and
jne
push
inc
enter
ja
sbb
add
imul
pop
dec
sub
aas
xchg
mov
cmp
sbb
daa
lods
mov
mov
out
xor
loop
call
lods
or
xor
movsl
jae
or
test
sbb
mov
sub
push
add
dec
push
add
xlat
xchg
dec
mov
mov
inc
loope
es
data16
push
sub
push
fwait
stc
rorl
cltd
sub
cmp
stos
push
popa
shlb
cmpl
xor
in
xor
cli
divl
movsl
rdpmc
mov
imul
cmp
pop
out
ljmp
pop
mov
insl
scas
pop
jge
sub
movsb
add
pop
push
pop
lcall
inc
repnz
ss
les
add
scas
and
movsl
test
fdivl
mov
or
gs
in
xchg
jge
or
inc
lea
int3
iret
das
or
adc
cmc
pop
sbb
adc
mov
xchg
jbe
mov
dec
xchg
push
push
aas
movsl
dec
or
add
xchg
les
rorl
inc
int
push
lcall
jb
jnp
rcr
sub
cmp
jle
hlt
mov
sub
jne
ret
dec
test
push
test
add
sbb
push
into
sbb
inc
loope
pop
into
adc
lret
pushf
idivb
sub
xchg
ss
pushf
jle
mov
mov
xor
es
mov
dec
into
sbb
jg
mov
cmp
jbe
in
int
and
js
ror
cmp
lock
push
shlb
pop
pop
and
lock
mov
mov
ret
mov
shrb
fstl
and
arpl
jb
das
xor
aad
decl
push
imul
popa
sbb
cmc
jns
cmp
imulb
mov
outsl
jmp
aas
sbb
xchg
sbb
xchg
ds
jns
cmp
adc
incl
frstor
ret
add
jne
and
push
xchg
mov
loope
push
dec
roll
pop
mov
xor
jns
inc
mov
fwait
pop
test
dec
xchg
sub
je
ret
inc
and
mov
lcall
insl
dec
push
lahf
popa
jb
cmp
mov
adc
mov
aas
mov
js
push
and
fmuls
outsb
mov
call
mov
and
lahf
xchg
pusha
sbbb
fcompl
pop
adc
lds
ljmp
cld
dec
cltd
call
mov
repnz
add
lea
xchg
jge
mov
mov
out
sub
cwtl
push
lock
pop
xor
inc
lret
mov
mov
shlb
dec
add
bound
mov
daa
dec
movsb
fcmovb
ffreep
pop
icebp
cltd
iret
xor
xchg
sub
loop
fildll
and
lret
pop
xor
inc
mov
or
jge
test
das
inc
and
in
push
ss
test
mov
in
xchg
cmp
pusha
or
imul
cmpsl
or
mov
mov
out
xchg
xchg
xor
dec
and
andl
inc
ljmp
xor
ja
arpl
xor
sub
popa
inc
mov
push
stc
int3
cld
fcomp
cmpsl
mov
cwtl
adc
push
mov
mov
out
xor
out
xor
lds
fs
shr
fcoms
push
es
into
dec
jb
push
js
sub
mov
movsb
mov
dec
dec
jle
adc
mov
inc
and
pop
imul
repnz
or
jae
dec
or
jns
por
xchg
jg
inc
pop
es
ret
inc
repnz
nop
jb
mov
mov
cmp
jp
lahf
imul
inc
fldcw
repz
mov
repnz
into
lds
xlat
test
scas
adc
pop
testb
or
pop
adc
sbb
and
cwtl
mov
lret
bound
lgs
aam
fnstcw
cmpsl
ret
adc
aad
stos
and
mov
imul
leave
into
or
push
sub
mov
les
repz
xor
lock
loope
xor
shlb
or
in
add
lds
subl
shll
add
pop
cwtl
xchg
push
dec
xchg
push
push
push
add
and
inc
test
sahf
and
int
test
pop
add
dec
scas
mov
push
das
mov
mov
in
fstl
xchg
jns
mov
jns
or
sbb
dec
sbb
inc
xor
add
cmp
mov
xchg
les
jno
or
repz
xor
mov
out
imul
pop
lret
xor
movsl
add
rcll
mov
sti
push
sbb
push
mov
cmp
rcrl
movsb
popa
ja
ja
loop
in
and
sbb
outsb
jne
cld
mov
testb
dec
push
in
aaa
jmp
testl
sub
or
xor
xchg
js
dec
mov
ficompl
and
lret
call
push
bswap
adc
push
and
dec
dec
xchg
out
hlt
and
adc
xchg
int
ss
inc
push
scas
out
stos
push
xor
add
sbb
mov
jp
inc
cli
jecxz
pop
mov
jg
xor
lock
adc
lret
ds
lods
leave
imul
leave
insb
stos
or
jl
adc
lds
mov
aam
testl
add
push
daa
cmp
movsb
and
mov
mov
sbb
add
bound
cmc
nop
je
jns
lods
imul
dec
addr16
in
push
jge
cmpsb
cs
cmp
mov
ljmp
adc
fcoml
xor
xchg
movsl
js
mov
sub
jg
dec
fildl
sti
les
sti
xor
rcll
ss
out
shrb
jnp
lret
xor
mov
jmp
add
xor
ljmp
adc
dec
sti
nop
je
jl
sbb
or
stc
sub
orb
stos
sbb
out
insb
or
inc
or
sbb
add
repnz
roll
pop
out
movsl
jle
and
push
stos
test
fcomip
movsb
mov
cs
std
addr16
sbb
in
lret
xchg
leave
daa
jecxz
ret
out
ljmp
das
jb
pop
and
sbb
inc
jno
shlb
sub
gs
adc
cmp
cmpsb
mov
cmpb
dec
fstpt
inc
xchg
lret
in
dec
shll
or
mov
dec
andl
in
jge
movsb
cmp
inc
bound
pop
outsb
into
mov
rcrb
lock
leave
and
out
and
mov
fistpl
sbb
mov
push
inc
lahf
pop
mov
test
push
cmp
ficoms
les
notl
int
xchg
hlt
clc
pop
lock
rclb
outsl
test
pusha
pop
into
and
shrb
pop
jle
xor
sbb
cmpb
roll
sub
arpl
mov
or
jg
jae
fistl
mov
outsl
into
xchg
inc
hlt
in
xchg
sub
int
fisubrs
add
ljmp
adc
popf
sub
cmp
push
cmc
sub
dec
test
ficomps
movsb
adc
inc
cmp
mov
pop
fs
jnp
or
lahf
xchg
data16
or
jb
and
ret
cli
sub
loop
inc
adc
or
ja
mov
add
add
dec
xlat
stos
iret
shl
fsts
adc
jmp
cld
out
lcall
aad
in
cmp
xchg
pop
lds
adcl
lock
in
stos
out
sub
lods
jbe
pop
ja
xor
popf
xor
popf
cwtl
xchg
cmpsb
insb
jmp
jns
push
scas
mov
aas
dec
and
mov
flds
mov
push
into
scas
ss
dec
sar
mov
xchg
mov
das
and
cmp
cwtl
lret
decl
sub
sti
mov
scas
dec
out
and
jecxz
pop
ret
dec
xor
sub
push
and
lds
mov
mov
mov
loop
in
mov
rcll
and
mov
adc
das
inc
adc
sub
mov
inc
pop
jmp
or
or
cmp
pop
test
inc
int
sbb
push
or
orb
xor
fs
bound
jge
jb
jb
cmc
dec
mov
jns
mov
dec
and
loope
sub
mov
imulb
xor
cmp
addl
push
fistpl
inc
push
leave
xor
push
jae
push
flds
fsubl
repz
adc
mov
push
ret
pop
cwtl
inc
fsubl
xchg
aas
imul
push
les
xchg
mov
arpl
or
inc
lods
cmp
stos
mov
movsl
push
scas
daa
pop
xchg
fwait
push
imul
adc
or
push
scas
ret
sub
ret
je
cmp
xor
js
add
mov
or
outsl
adc
ror
jae
lret
sub
shlb
shlb
test
int
dec
shlb
gs
popf
fdivr
inc
ja
mov
xor
out
mov
adc
add
fwait
pushl
cmp
shl
fs
mov
lahf
cmpsb
pop
dec
dec
subb
test
xchg
fsubr
lcall
loope
mov
and
fcompl
es
call
ds
mov
add
mov
add
sbb
fnstsw
jb
adc
mov
cmpsb
mov
jmp
int
mov
pop
iret
test
mov
outsl
push
push
mov
xchg
dec
dec
push
jo
xor
testl
pushf
pop
in
test
adc
cli
adc
mov
or
loope
or
nop
jbe
push
div
ret
inc
cmp
insb
add
dec
dec
xchg
inc
cltd
notl
xchg
into
out
sbb
or
mov
add
fcmovb
scas
cmp
mov
mov
daa
pop
jmp
push
popf
inc
xchg
mov
orl
daa
aaa
jp
lock
add
or
aam
std
lds
xchg
out
push
push
sbb
in
fistps
test
push
jmp
setp
daa
arpl
push
icebp
cmp
cltd
outsb
lods
sbb
or
andb
into
xor
cmp
pushf
lods
sti
jl
dec
inc
or
sub
pusha
mov
dec
js
mov
insl
jecxz
insl
fisttpll
in
insl
jge
pop
sbb
mov
adc
insl
stc
in
add
cmp
sbb
add
jecxz
push
mov
sbbl
movsb
stc
stos
jnp
mov
mov
and
jo
cmpsl
jo
sub
fcoms
xlat
cwtl
jb
sbb
and
add
sbb
das
pop
mov
and
icebp
mov
mov
adc
push
cltd
jl
mov
sahf
arpl
fwait
mov
call
mov
stc
xor
pop
js
ljmp
dec
xchg
stc
shrb
nop
data16
das
fs
or
jo
xchg
push
insl
mov
sub
or
iret
xchg
jns
ds
loop
adc
xchg
pusha
ficomps
out
in
fldcw
subb
dec
mov
and
sti
pop
adc
mov
out
out
push
xchg
fwait
and
xchg
out
pop
xchg
xor
filds
jne
scas
ljmp
fcmovbe
push
lock
adc
adc
outsl
mov
in
xor
gs
rcl
or
add
xchg
mov
insl
test
jmp
jne
jb
or
cmc
sub
clc
jge
rcrb
or
int3
push
push
jne
cld
sbb
push
data16
fnstcw
mov
idivb
jae
xchg
out
mov
xor
push
mov
push
lods
call
mov
jbe,pt
loop
addl
add
pop
andb
add
dec
push
adc
cmpsb
adc
xor
xor
jo
adc
add
mov
xor
mov
pop
mov
fs
add
pop
xor
roll
aaa
arpl
inc
or
fiadds
repnz
js
in
cmpsl
cmp
push
sbb
test
push
cmpl
test
mov
sub
push
jecxz
leave
add
mov
mov
cld
xlat
fucomp
outsb
cmpsl
int
call
and
lock
mov
test
dec
inc
cli
loop
cmp
sub
pop
jo
push
insl
pop
dec
loopne
mov
lret
or
mov
or
test
add
div
daa
sub
and
int3
testl
gs
lret
dec
orl
std
adc
sahf
mov
xchg
pop
jecxz
imul
lds
lods
cmp
test
xchg
fcoms
repz
adc
in
mov
mov
fs
add
mov
test
test
push
clc
test
pop
and
cmpsb
push
rcrl
leave
pusha
inc
aam
push
inc
js
mov
dec
push
add
pop
push
leave
mov
fldenv
jb
inc
cmp
or
ficoml
jle
and
das
pop
jns
cs
pusha
inc
fcmove
sub
sbb
mov
lock
lcall
jmp
pop
testl
fidivs
inc
xor
leave
or
stc
pop
sub
xchg
lds
and
add
and
roll
xor
ud1
movsb
mov
mov
sub
loope
fwait
lret
pop
lds
push
fldl
xchg
subb
cli
mov
mov
data16
or
fisttpl
xchg
xchg
lret
push
ret
lea
subb
pop
sub
add
repnz
mov
imulb
xchg
push
cwtl
mov
and
andb
xor
cli
rorb
jle
inc
jnp
push
pop
mov
push
movsl
jmp
addr16
mov
push
mov
idiv
inc
adc
mov
out
dec
mov
pop
fnstsw
outsl
pusha
push
jmp
cld
jge
fs
and
pop
dec
mov
jb
sbb
out
inc
lds
pushf
xor
fdiv
test
pop
mov
ljmp
adc
push
or
mov
daa
stos
sub
sbb
fimull
fmulp
add
stos
jl
mov
bound
push
ret
xchg
out
nop
setg
cmp
adc
stos
or
sbb
aam
mov
bound
addb
roll
or
push
dec
addb
sbb
addl
or
dec
lock
dec
cmp
inc
xor
mov
leave
mov
sbb
fsubs
daa
push
jo
test
imul
stos
nop
add
and
xor
mov
xor
push
mov
adc
xchg
cmp
mov
push
stos
jbe
fxch
int
loope
cmp
iret
lods
dec
mov
je
lea
scas
inc
or
test
pusha
pop
lods
decl
pop
pop
xor
aas
insl
push
rclb
lock
stc
xchg
sub
inc
dec
pop
hlt
pop
adc
stc
or
sbbl
sbb
cmp
lds
orl
mov
aas
cwtl
add
xor
pusha
mov
mov
scas
xor
jle
es
fdivs
dec
add
bswap
sub
push
out
int
imul
loopne
xorl
adc
stos
jp
jbe
outsl
mov
dec
and
and
inc
lret
pop
xchg
aas
inc
add
std
push
pcmpgtw
xor
test
jmp
into
xor
call
mov
pop
inc
rorl
lahf
cld
push
repz
adcl
loop
cmp
lcall
sbb
movb
push
daa
in
inc
nop
add
mov
pop
loopne
cwtl
xor
repz
fst
fstpt
ret
mov
test
mov
xor
push
mov
int3
mov
mov
mov
lds
adc
xchg
mov
out
pop
arpl
push
fsubs
mov
les
mov
das
xor
bndldx
popa
rolb
or
adcb
into
sbb
inc
insb
xchg
push
adc
sti
shr
std
add
mov
push
arpl
jmp
sub
push
sbb
pushl
fcoms
scas
push
in
loopne
inc
mov
add
push
out
mov
push
cwtl
dec
pop
push
push
dec
sub
sub
ljmp
xchg
mov
outsl
xor
call
sbb
in
iret
xor
pop
idivl
sbbb
cmp
mov
xor
xor
xor
sarl
and
jbe
scas
stc
add
xchg
inc
and
out
dec
jmp
scas
jmp
js
enter
fdivrs
push
or
add
dec
inc
cld
movsl
mov
fs
leave
pop
inc
inc
ficompl
insl
arpl
sbb
icebp
and
repz
rcll
iret
nop
jle
sub
xlat
mov
mov
std
or
cmp
jecxz
pop
push
iret
punpckhwd
or
aad
add
adc
outsb
negb
negb
mov
pop
adc
test
dec
fimull
jae
dec
stos
xchg
lret
js
lods
rclb
push
insl
xorl
enter
test
cmp
add
cmp
sub
cmp
mov
adc
outsb
xchg
movsb
arpl
sahf
inc
adc
push
mov
xor
mov
scas
adc
xchg
pushf
filds
test
fisttps
clc
or
ds
testb
pop
push
sub
mov
xor
add
inc
imul
pop
sbb
in
int3
loopne
mov
mov
lock
movsb
ss
scas
and
push
mov
xor
lods
mov
and
sub
push
jmp
leave
sub
addr16
jbe
mov
push
shrl
mov
popa
mov
fsubrl
mov
icebp
int3
and
sbbb
push
mov
out
mov
and
add
or
sbb
inc
aam
mov
xor
dec
pusha
xor
das
cld
inc
aad
adc
mov
pop
adc
jl
or
cmpsl
dec
ret
insb
repz
and
or
pop
and
xchg
es
lods
add
sar
inc
or
push
es
push
or
lds
xor
cmp
xor
negb
or
mov
loopne
mov
mov
sbb
sahf
mov
sarl
aad
lods
pop
pop
push
loopne
fcomps
or
test
pop
sbb
fildll
out
jecxz
and
mov
sbb
add
xchg
rcrb
xorb
lahf
mov
dec
rsm
add
aad
int3
cld
stos
xor
mov
repnz
hlt
in
and
fsubrs
adc
andl
lock
test
adc
ljmp
fs
out
xor
lcall
fldenv
mov
dec
scas
cmp
sub
mov
pop
les
and
xlat
dec
sahf
and
add
into
insl
lods
scas
xor
pop
pop
mov
popa
cmp
out
mov
or
mov
and
lcall
nop
inc
or
mov
lea
gs
insl
pushf
pop
or
lret
mov
sbb
aad
daa
in
xchg
addr16
test
hlt
mov
ljmp
add
mov
popf
imul
inc
sub
notb
sub
enter
pop
jns
loope
icebp
or
lret
xor
or
cmp
mov
stos
adc
push
data16
out
popa
push
adc
add
xor
negl
ds
imulb
mov
insb
sarl
ror
inc
dec
jge
cli
rcll
mov
push
push
mov
in
inc
inc
mov
mov
mov
mov
mov
ficoms
mov
les
sub
pop
in
mov
sbb
loop
lock
outsb
cmp
dec
iret
xchg
jmp
xor
and
pusha
gs
adc
stc
popf
movsb
mov
mov
in
xchg
gs
fnstsw
mov
push
xchg
xor
aaa
mov
rcrb
lahf
xchg
pusha
jmp
pop
adc
dec
cmp
pop
xchg
outsb
or
ret
sub
pop
mov
jp
adc
mov
faddl
mov
ret
or
sti
push
stc
out
add
mov
stos
mov
push
mov
ret
mov
negb
push
cli
jne
cmc
out
jae
jmp
insb
cmp
xor
dec
add
push
into
sahf
sub
or
mov
leave
dec
adc
push
notl
das
jo
in
sbb
repnz
clc
call
sbb
xchg
xor
lret
sub
loopne
xchg
fsubr
mov
xchg
pop
cmp
or
cmp
xchg
cltd
inc
add
xor
jo
push
cwtl
sub
fidivrl
push
mov
stc
add
shll
xchg
dec
and
mov
push
mov
ljmp
std
dec
call
out
sbb
arpl
push
in
out
push
inc
lahf
mov
outsl
rcrl
inc
xchg
lret
jb
push
test
or
jne
pop
ljmp
cmp
sbb
test
xchg
in
movsb
daa
adc
ljmp
loopne
inc
add
mov
lret
arpl
imul
cmpb
cmp
je
push
lret
cmc
add
push
push
adc
dec
out
cmp
or
sbb
push
addb
mov
je
xchg
popl
cmpsb
dec
movsb
testb
lret
sbb
daa
call
daa
test
aas
pusha
into
jae
xchg
gs
cmc
fcmovne
movsb
add
dec
add
cmp
insb
clc
jae
aad
inc
adc
or
sbb
cmp
adc
int3
ret
icebp
mov
mov
adc
cmp
adc
push
das
ljmp
add
push
hlt
push
sbbb
inc
rolb
insb
int
loopne
sub
cmp
jl
ss
xchg
test
add
mov
imull
jae
mov
jno
insb
dec
popl
cmp
adcl
mov
add
clc
pop
xchg
fiaddl
mov
test
out
mov
push
roll
pop
repz
out
mov
push
dec
push
xlat
pop
pop
pop
cmp
insl
aad
shlb
inc
xchg
push
mov
or
out
push
stc
nop
push
movl
jl
outsb
push
xchg
into
inc
jg
push
xlat
mov
jbe
ret
pop
jmp
mov
mov
sbb
pop
xor
adc
cwtl
fdivrl
pop
inc
sbb
sbb
mov
movsb
mov
xchg
add
cmp
pop
aas
fiaddl
inc
loop
out
add
cltd
sub
mov
scas
bound
mov
sub
cmp
iret
imul
add
lahf
addr16
dec
movsl
clc
ja
fnstcw
mov
or
adc
dec
push
push
insb
xchg
arpl
sub
fmull
pop
lock
push
in
out
pop
aad
mov
and
std
fists
push
repz
cli
fstpt
movsl
inc
xchg
gs
and
test
fs
push
out
jge
mov
push
sub
mov
mov
ret
addr16
pushw
push
cli
lds
push
cmp
dec
arpl
adc
in
out
xchg
mov
xchg
mov
mov
and
hlt
push
mov
sbb
into
jg
imul
xor
xor
jmp
push
xor
divl
ss
pop
add
call
xor
mov
sahf
adc
lahf
and
mov
jge
pop
xchg
cmpsb
loop
lcall
pushf
mov
daa
dec
or
sarl
mov
or
test
js
or
movsb
ljmp
push
lret
adc
push
cld
lea
push
testb
sub
ja
out
cmpsb
jae
jecxz
loopne
stos
push
adcl
mov
pop
cmp
jae
sti
sbb
lahf
mov
neg
lea
add
data16
imul
inc
shrb
aaa
mov
les
outsb
inc
aas
mov
add
mov
xchg
lret
bound
js
or
rep
mov
aam
int
add
out
es
into
iretw
xor
mov
loope
adc
or
fiadds
adc
movsb
pop
pushf
xor
sbb
sbb
mov
mov
frstor
jae
lahf
cld
pop
lea
jns
inc
jmp
test
into
push
jb
push
stos
and
sub
shll
sti
out
fldl2e
ljmp
xor
xor
es
add
std
dec
mov
sbb
jmp
stc
xchg
dec
mov
push
imul
dec
rcr
xchg
aad
ret
imulb
adc
mov
dec
push
xchg
mov
repnz
and
lods
lds
xchg
dec
sahf
cmp
pop
sti
cmp
pop
dec
push
ficoms
stos
enter
fwait
dec
idiv
les
das
loope
leave
cmp
jo
ss
add
dec
dec
enter
or
sub
mov
les
fnstsw
outsl
dec
lock
cwtl
shll
fwait
sub
gs
sub
lret
ja
pop
adc
lea
scas
in
sarb
test
pop
inc
xor
mov
xor
cmp
cmp
xchg
pop
mov
call
push
hlt
dec
jnp
ret
xchg
mov
scas
out
sub
ds
out
mov
xor
scas
loope
in
xor
mov
pop
mov
flds
lret
sbb
push
and
ljmp
dec
jg
inc
dec
imul
sub
push
clc
sarl
test
or
fwait
aad
lahf
std
fs
lods
insb
xor
sbb
iret
push
popf
mov
fistpll
mov
dec
ret
subb
das
les
xchg
iret
rclb
dec
imul
jno
mov
in
xchg
ret
flds
dec
loop
mov
xchg
push
jmp
jl
pop
mov
pop
scas
adc
xchg
mov
pop
adc
scas
xlat
jecxz
inc
mov
pop
push
xchg
shll
mov
jge
repz
iret
add
xor
test
jbe
xor
mov
fs
mov
movsb
lea
push
mov
push
out
xor
jnp
cmpsl
fwait
in
inc
mov
cmp
and
add
test
popa
sub
ja
ror
lahf
out
xchg
and
cmp
cmp
mov
cmp
imul
jp
leave
add
jne
push
enter
ss
insl
aad
mov
xor
mov
addr16
insb
les
push
mov
loop
or
dec
mov
mov
out
dec
in
ret
fwait
enter
inc
sub
in
adc
movsb
lock
push
mulb
cmp
cmp
inc
xor
test
aas
hlt
sbb
mov
outsb
and
movsb
xchg
push
mov
add
xor
in
xor
xchg
cmpsb
fidivrl
in
andl
inc
xor
stos
aas
sub
ret
ret
gs
ljmp
in
cmc
in
pop
repnz
mov
ficoms
pop
notl
ds
daa
loope
jnp
sbb
mov
cmp
stos
stos
mov
addr16
movsl
cmp
and
outsl
dec
cltd
shlb
test
into
dec
aaa
push
dec
mov
push
mov
arpl
inc
stc
ret
lret
cmpl
lahf
cltd
jnp
cmpsb
push
lds
orl
or
mov
xor
frstor
sbb
add
icebp
cvtdq2ps
push
mov
pop
xacquire
push
adc
scas
cmp
fwait
enter
sbb
jp
sbb
sahf
imul
jp
jmp
push
hlt
loopne
popf
xchg
ljmp
in
scas
imul
pop
xor
mov
imul
mov
iret
int
xorl
es
mov
out
cltd
sbb
lcall
das
daa
loope
scas
int3
lods
rclb
and
push
jmp
pop
sub
aas
cwtl
push
pushf
add
xchg
pop
repnz
fistpll
sbbb
mov
outsb
mov
daa
add
ds
adc
jbe
dec
mov
xor
ret
adc
nop
icebp
pmullw
rcr
mov
sbb
imull
jg
sahf
mov
lahf
pop
xor
stos
mov
xchg
test
fcoml
pop
push
jo
xchg
jmp
fldenv
mov
pop
test
das
xor
cwtl
iret
rcl
pop
outsb
cli
shlb
lahf
mov
cmp
jb
and
loopne
shlb
lahf
mov
les
and
add
mov
cmp
imul
jno
adc
lcall
scas
dec
sub
test
xchg
jecxz
sub
push
jle
loop
lcall
pushf
push
lahf
push
cli
jp
adc
js
ds
psrld
sbb
lods
jnp
xlat
jnp
sub
lahf
adc
fisttpll
sub
out
les
sbbl
fidivrs
sbb
mov
in
adc
mov
xor
imul
cmpb
xorb
mov
insb
scas
enter
scas
movsb
stc
mov
in
into
mov
js
frstor
jb
sahf
xor
push
jae
push
rcl
nop
neg
dec
pop
pusha
mov
push
mov
stos
jb
push
mov
add
lock
fidivs
sub
cld
lea
sbb
idivl
push
jge
in
add
scas
add
adc
or
mov
and
adc
mov
and
pop
icebp
xchg
lock
push
loope
ret
push
cmp
mov
inc
push
push
adc
popf
rep
mov
xor
subb
jecxz
pop
stos
dec
push
bound
aaa
pushf
mov
mov
mov
add
xchg
cmp
inc
mov
setle
xor
int
push
mov
add
ds
add
inc
roll
inc
xor
and
popa
dec
cmp
xchg
cmp
dec
push
je
mov
repnz
inc
hlt
pushf
add
dec
je
add
push
sub
fistpll
xchg
sub
adc
fadds
cmp
sbb
outsl
sbbb
or
rol
outsl
testb
cmp
das
in
pusha
cs
bound
or
jmp
aad
pop
xchg
sub
cmp
push
jo
mov
js
lock
mov
ja
mov
xchg
sub
aas
adc
arpl
mov
dec
and
ss
sub
test
aaa
fisubl
daa
movzwl
adc
hlt
imul
xchg
push
pop
jae
enter
loope
out
jnp
sub
shlb
in
lods
mov
repnz
repnz
xor
xlat
inc
aas
sti
nop
jmp
cmp
push
or
out
daa
ret
mov
jno
mov
mov
pop
xchg
mov
and
arpl
xchg
cli
in
jp
int
inc
dec
pusha
mov
test
mov
sbb
jbe
sub
add
fcompl
jmp
ficoms
xor
inc
pop
jnp
mov
icebp
push
imul
jmp
nop
mov
ret
stos
lcall
ja
sub
out
lock
jae
bound
insb
jb
fwait
out
pop
outsl
mov
jp
fimuls
mov
inc
jno
popf
inc
les
std
mov
fs
adc
pop
jp
div
pop
and
xchg
hlt
adc
je
pusha
and
push
pop
inc
addb
or
dec
cli
cmpb
popa
inc
fs
fucomip
dec
jmp
rcrb
mov
mov
movsl
lods
and
adc
sahf
sub
mov
jne
pop
ret
pushf
mov
push
jbe
push
xchg
divl
adcl
push
icebp
sub
lcall
mov
adc
sahf
bound
repz
addr16
outsl
cwtl
std
fisttpl
push
inc
dec
pop
cmc
scas
lock
sar
scas
xor
iret
stos
add
cmp
or
sub
push
outsl
mov
sbb
lcall
loope
test
dec
lret
fwait
ret
adc
loope
je
out
sub
std
cld
and
nop
push
and
decb
jecxz
lock
cltd
shlb
jg
pushf
out
mov
cmp
push
repnz
cld
gs
pop
bound
dec
cmc
sti
test
lods
pushf
and
cmpsb
push
sub
add
or
sbb
xor
mov
dec
lods
ret
adc
std
dec
movsl
mov
add
add
daa
icebp
or
jb
lea
mov
clc
js
fcomi
jp
data16
lea
jmp
mov
daa
loopne
fs
jp
enter
mov
xchg
popf
enter
stos
std
xor
jle
cmpsb
sub
lcall
mov
xchg
jae
adc
arpl
adc
add
lahf
iret
rep
lret
jmp
movb
ljmp
movb
scas
pop
stos
push
stos
pop
mov
imul
mov
gs
ret
dec
and
daa
scas
pop
or
jp
scas
fisubrl
pop
jo
push
outsl
test
stc
xchg
pop
fwait
mov
movsl
mov
xchg
lret
shl
cmp
imull
adc
xchg
jmp
inc
mov
mov
inc
mov
add
aad
or
dec
mov
sbb
xchg
jmp
mov
pop
adc
lock
jp
sahf
outsl
xor
lahf
rcr
pop
fisttpll
add
add
mov
mov
stos
sbb
andl
imul
gs
pop
xor
push
sub
shlb
pushf
mov
jg
mov
jb
in
ljmp
sub
dec
push
loope
cli
xor
loopne
cmp
xor
fcomps
jle
dec
shrl
test
add
dec
outsb
sbb
cmpsb
into
mov
jne
nop
mov
adc
adc
mov
and
adc
mov
repz
outsb
xor
lock
xchg
xchg
int3
bound
push
hlt
lock
pop
gs
add
ljmp
in
mov
pop
sub
lods
mov
mov
lds
ss
ja
xor
out
or
inc
pop
imul
dec
pop
pop
mov
cli
sti
lahf
add
les
aam
mov
xor
leave
enter
or
xchg
adc
dec
jo
pop
pop
jle
mov
in
sub
loope
cmpsl
pushl
push
sub
xchg
mov
int
jb
push
clc
repz
repz
dec
cmp
rorl
divb
push
push
adc
test
xchg
lods
xchg
add
push
adc
aam
test
jp
push
jecxz
fnsave
std
pop
and
xchg
sub
dec
adc
xchg
xchg
mov
jmp
fnstenv
aam
int
or
daa
sbb
and
pop
xor
sbb
cmpsl
fcmovnb
mov
jne
cmpsl
jo
imul
pop
inc
pushf
mov
dec
pop
notb
stos
cmpsb
fcmovnbe
dec
sub
std
or
subl
xlat
aam
lahf
sbb
cmpb
fildl
push
pop
fdivrl
mov
inc
dec
sbb
cmp
cmp
inc
pop
js
comiss
xlat
in
insb
cli
fdivrs
mov
push
xchg
prefetchnta
in
push
aaa
mov
sbb
push
popf
stos
pusha
inc
xchg
dec
roll
orl
mov
xor
inc
enter
jp
aad
adcb
das
mov
xchg
and
mov
push
pop
push
adc
psrld
xor
and
js
stos
mov
cwtl
inc
push
cmp
mov
cmpsb
inc
inc
movsl
outsb
rol
mov
xchg
loope
insl
loope
or
and
imul
insl
sub
inc
inc
xchg
cmp
arpl
xor
es
cmp
loope
fistpl
inc
xlat
roll
cmpsb
rcrb
rcrb
mov
xor
add
push
and
into
jno
inc
xor
bound
jne
rorb
hlt
adcl
xchg
jmp
pop
jo
scas
movsl
cld
sub
xor
rorb
outsb
mov
in
xchg
xor
in
or
sar
les
pop
jo
jo
ret
pop
xchg
pop
jmp
subl
into
fsubl
cmpl
int3
test
add
pop
nop
and
push
out
push
jmp
leave
sahf
jp
cld
mov
push
jbe
je
lea
mov
dec
cmp
ljmp
xor
push
xchg
in
mov
in
js
repnz
mov
insb
fisttpl
out
in
sub
push
test
adc
xchg
pop
je
push
xchg
pop
dec
jg
add
or
xchg
les
push
ja
sub
movq
int
push
xchg
jge
push
repz
cmpsb
out
lea
sub
add
xchg
out
sti
aas
or
adc
std
sbb
mov
popf
cmpsb
outsb
mov
push
dec
push
nop
mov
aam
orl
or
cld
inc
das
cmp
stc
aas
push
dec
sub
imul
enter
data16
sar
cs
push
xlat
aaa
cmp
push
loopne
bound
lret
lea
dec
popf
pop
push
in
inc
fwait
mov
add
mov
and
imul
mov
pusha
insl
test
lahf
shrl
cs
mov
sahf
xor
xor
cmpsl
jo
outsl
push
jmp
xchg
dec
jg
lret
scas
jl
mov
out
test
out
mov
sbb
mov
sbb
inc
fisttpll
jne
repnz
or
sbb
sub
xlat
mov
push
std
outsb
and
jno
arpl
jbe
gs
arpl
push
adc
in
mov
xchg
sbb
mov
addr16
sbb
in
orl
add
jg
fildl
add
scas
mov
stc
sbb
jge
xor
xchg
push
repnz
mov
xchg
pop
out
push
sbb
mov
push
mov
test
push
dec
fs
push
and
rcr
push
shll
add
mov
and
cmp
jnp
lock
ja
repz
lock
test
fildl
aad
es
dec
mov
push
xor
stc
fdivrp
sti
add
loop
outsl
push
sbb
and
cmp
mov
mov
call
loopne
testl
test
push
inc
sbb
insl
in
jno
mov
push
insb
loop
fistpl
inc
xchg
sub
bound
loope
arpl
idivb
out
sbb
xchg
in
bnd
pop
sahf
dec
dec
adc
inc
pop
jbe
nop
cmpsb
shl
adc
leave
in
imul
adc
adc
imul
scas
mov
cmp
xlat
lret
push
inc
clc
and
mov
popf
add
adc
cmp
push
aam
mov
addr16
add
jno
dec
jmp
rcrb
arpl
adc
mov
pop
push
jmp
sbb
cwtl
adc
pop
mov
je
mov
das
push
hlt
lods
mov
shll
ficoml
sub
paddusb
xchg
stos
pop
stos
ficoml
push
mov
sub
cmp
xchg
cmc
cmc
push
in
in
fildl
push
scas
jno
rcrb
mov
pop
jmp
int3
xor
mov
sub
mov
pop
sbb
jecxz
popf
or
lahf
mov
mov
int3
mov
cmp
daa
xor
aad
ljmp
repnz
xchg
mov
and
xor
les
out
cld
popf
push
nop
loope
add
adc
insl
stc
and
in
rcrl
cmp
fnsetpm(287
pop
mov
jl
jne
mov
roll
adc
inc
loope
push
outsb
dec
push
dec
push
cs
cmpsb
dec
mov
sbb
adc
out
out
sbb
fldl
sahf
jge
mov
addr16
jnp
dec
insl
mov
xchg
int
test
addr16
xor
inc
fidivs
enter
cmp
repnz
inc
nop
int3
xor
scas
xchg
aam
and
pop
inc
pushf
cmpsb
add
lret
daa
add
mov
and
js
sub
sbb
into
jge
cmpsb
rol
and
mov
out
mov
mov
mov
out
inc
and
shlb
test
push
sbb
lret
inc
and
gs
mulb
in
fildl
push
push
jb
push
mov
xchg
pop
or
loopne
stc
push
int3
std
scas
jbe
icebp
xlat
or
ret
lods
stos
mov
pop
mov
mov
fiadds
xorb
add
movsb
jnp
inc
sub
and
stos
add
mov
pop
scas
cmp
lods
lods
lcall
out
pop
outsb
ljmp
fprem
out
out
pop
imul
loop
push
fcmovnb
fcompl
push
xor
mov
inc
mov
mov
nop
mov
jb
xchg
in
xchg
data16
cmp
fnstsw
repnz
xchg
sub
sbb
lods
push
pusha
dec
fsubrs
clc
pop
inc
jl
insl
pop
lods
inc
pop
pushf
out
mov
out
cmp
fstpl
add
hlt
sub
inc
loope
mov
dec
sbb
pop
mov
rcrb
fwait
roll
into
mov
inc
inc
js
sub
jmp
popa
push
hlt
popa
out
add
pop
lea
mov
lds
clc
mov
inc
add
repnz
inc
dec
sbb
pop
nop
jp
add
cmpsb
mov
or
pop
sbb
dec
loop
testb
outsl
pop
or
lret
icebp
jp
and
daa
add
movsl
dec
sbb
mov
sbb
dec
ds
out
fisubrs
jle
insb
lock
addb
mov
and
lods
enter
aas
idivl
adc
cmpsl
faddl
inc
int3
push
fcmovb
lcall
pop
in
fcomps
js
adc
adc
repnz
icebp
sub
add
push
scas
xchg
jbe
push
pmullw
ret
mov
mov
mov
imul
test
jbe
js
scas
fisttpl
push
mov
dec
andl
mov
stos
xlat
fdivrl
sbb
mov
shrl
mov
pop
mov
mov
mov
insl
iret
lret
ret
push
rcl
push
add
rcrl
hlt
ret
loope
push
adc
jl
or
arpl
repz
mov
xchg
sbb
mov
xor
push
daa
mov
inc
imul
ja
popa
lods
jb
sub
icebp
mov
push
stos
dec
rcrl
xchg
cld
popa
dec
push
test
stos
aam
lods
inc
adc
dec
sub
arpl
and
add
lahf
jns
xor
xor
pop
dec
xchg
mov
inc
call
cmc
sarl
stc
pop
cmpsl
movsb
out
mov
adc
mov
dec
insl
add
push
xor
scas
push
add
push
lods
fisubs
cmpsl
push
fcomip
xchg
inc
fsubrp
iret
xor
xchg
loope
cmp
push
dec
xchg
lcall
popa
mov
enter
ja
addl
mov
lcall
dec
xchg
aad
and
fildll
jno
fwait
push
or
lret
fimuls
sbb
inc
xor
rcll
fadd
and
mov
rorb
sarl
dec
dec
loopne
dec
mov
ret
xor
cmpsb
push
dec
test
jmp
roll
int3
adc
hlt
cwtl
lea
jnp
jl
mov
in
adc
testb
dec
pop
dec
int
lret
push
imulb
or
jecxz
in
fsubr
sub
mov
xor
outsb
aas
fisubrl
popa
sub
adc
out
mov
insl
pop
in
ret
lret
out
sub
xor
xchg
jb
lret
test
cltd
xchg
cmp
mov
in
sub
inc
pusha
mov
shrl
in
cmpsl
outsl
sbb
scas
lcall
cmp
cmp
jmp
adc
cmp
stc
cmp
out
inc
movsb
sbb
or
pusha
pop
push
inc
scas
pusha
ds
das
imul
mov
adc
loopne
add
pop
ret
lds
mov
out
insb
dec
and
xor
test
mov
mov
jbe
int
ror
incb
mov
sub
lahf
out
sub
ja
mov
dec
cltd
popa
in
dec
sahf
mov
in
inc
sbb
add
cmp
lea
sahf
push
lahf
aam
cwtl
mov
subl
push
das
sbb
push
and
insb
adc
xchg
lahf
fbld
mov
jb
jecxz
dec
mov
pop
jge
cmp
imul
jl
not
shl
in
mov
push
stc
loop
loop
adc
xchg
add
cs
scas
jp
orb
add
sti
jb
loopne
repz
lds
push
imul
cmp
movl
push
push
loope
enter
pop
lcall
mov
ret
jmp
pusha
push
int3
dec
mov
test
xchg
data16
movsb
arpl
imul
jae
xchg
mov
sti
pop
int3
sub
call
pop
pop
dec
push
mov
push
or
lea
jle
push
lods
xchg
xor
fwait
cmp
mov
cmc
add
jl
xor
fcmovnu
popf
repz
fsts
and
pop
or
fsubrl
in
sub
lods
scas
lods
cmpsb
repz
cmpsl
xchg
fistl
push
mov
pop
test
into
jb
mov
insl
mov
add
sub
push
hlt
in
or
jb
jg
in
add
movsl
mov
filds
sub
mov
inc
lods
sarl
push
add
xor
ja
rcrl
sbb
ljmp
xchg
rol
mov
test
cmpsb
in
push
add
add
pop
popf
and
add
repnz
fcomps
jecxz
cmp
jns
inc
or
lods
out
mov
and
inc
inc
jmp
mov
cwtl
std
lcall
push
cmp
lahf
xchg
mov
stc
xchg
pop
int3
inc
rcl
rorb
mov
lcall
cmp
lret
subl
cmp
hlt
aam
mov
dec
out
pop
outsl
xchg
scas
lods
push
dec
add
pop
xchg
aas
mov
pop
mov
ret
jns
fsubl
xchg
test
adc
mov
cmp
repnz
add
jmp
outsb
out
inc
sub
push
ja
or
lock
cmpsb
sbb
out
xchg
mov
mov
inc
icebp
test
lret
jo
pop
or
dec
les
rcl
fwait
in
or
xorb
sub
inc
add
mov
push
aas
jecxz
mov
in
cwtl
cld
js
outsb
push
inc
enter
push
and
lock
lahf
sub
mov
adc
pop
adc
lret
divb
sbb
pop
xchg
ss
dec
rolb
mov
and
push
sub
inc
and
mov
sub
cmp
add
stos
push
xor
push
mov
add
adc
pop
iret
enter
xchg
or
insl
sbb
sahf
outsb
pop
and
scas
ljmp
fcomip
or
shrl
incb
xor
repnz
in
je
mov
cmpsl
std
repnz
mov
jb
sahf
cmp
aad
test
das
mov
imul
mov
movsl
sbb
inc
inc
clc
lods
jns
mov
push
ljmp
push
clc
dec
std
push
cmpsb
ret
jle
mov
stc
fildl
insb
wrmsr
stc
aam
pop
adc
adc
lret
xchg
or
pop
out
lret
ds
sbb
pop
movsb
xchg
lret
xor
gs
mov
push
inc
or
imul
repz
mull
and
in
jp
jmp
xor
in
hlt
addb
int
test
xchg
adc
test
test
push
add
mov
and
mov
xor
adc
mov
jle
les
push
js
push
and
inc
or
ret
mov
fsubs
pop
sbb
adc
out
add
adc
cmpsl
add
std
out
push
movb
imul
fnstenv
and
sub
sarb
mov
iret
push
daa
push
addr16
pop
add
arpl
movl
mov
ljmp
std
fcoml
cwtl
shrb
ja
sub
sub
imul
aas
jne
xchg
mov
insl
jne
sub
cltd
call
mov
jo
jo
xchg
inc
sub
mov
push
mov
adc
pop
sahf
pop
loope
jb
jb
adc
sub
sbb
adc
ret
pop
popf
jb
mov
shlb
sub
inc
cmpsl
fwait
test
dec
and
mov
pop
and
inc
dec
pop
pop
mov
push
xchg
push
int
ss
sbb
inc
push
pop
pop
outsl
mov
pop
outsb
cmp
mov
xchg
lods
into
scas
push
mov
stc
mov
dec
or
popa
sub
adc
ds
xchg
fldl
or
mov
and
movsl
mov
or
xchg
mov
stos
stos
mov
lcall
ljmp
add
push
pop
outsl
test
pop
inc
mov
cmp
xor
adc
mov
sbb
hlt
and
xchg
cmp
fwait
mov
test
gs
mov
inc
cld
enter
add
adc
or
and
sub
stos
imul
sub
push
mov
popf
lods
mov
push
mov
mov
push
rcl
aad
test
lcall
cmc
test
pop
popf
insb
sub
shll
mov
xor
fstl
add
ljmp
xor
jl
push
lds
add
inc
pop
xlat
lock
sbb
fimuls
cltd
ret
jnp
jbe
adc
stos
xchg
or
push
xchg
mov
addr16
orl
mov
dec
xchg
imul
lret
lahf
dec
mov
idivb
inc
hlt
lods
fnstenv
and
mov
pop
ret
pop
and
loopne
scas
rcl
dec
jb
in
gs
addb
sbb
push
xchg
shll
mov
adc
dec
cmpl
jp
mov
inc
or
mov
add
imul
clc
dec
cmpsb
jb
mov
push
and
movsb
ljmp
inc
movl
or
aam
mov
and
int3
push
in
xchg
xor
mov
mov
cs
adc
dec
in
dec
int
xchg
movsl
sbb
xchg
jmp
dec
xchg
call
pop
and
mov
jecxz
movsb
mov
xor
pop
jbe
call
push
mov
xor
mov
mov
hlt
inc
repnz
movsl
insb
sbb
imul
outsb
in
adc
sbb
pop
sbb
dec
dec
cmp
add
cmp
mov
in
jecxz
xchg
mov
or
pop
mov
enter
push
test
sar
dec
push
pop
push
sbb
xor
xchg
pop
inc
pop
xchg
mov
sahf
repz
rcrl
popa
repnz
pop
inc
inc
mov
cmpl
sbb
std
loope
push
pop
sub
jge
stos
pop
cmpsb
pop
test
or
pop
imul
xor
popa
out
outsb
dec
jp
test
jb
out
adc
addb
and
data16
movsl
hlt
out
lock
fnstcw
stc
mov
clc
push
scas
je
sbb
jmp
push
call
inc
int
fdivr
push
cmp
loope
push
push
lahf
fiadds
add
insl
xor
cmp
inc
inc
bound
pop
leave
jne
dec
push
orl
pop
inc
mov
xlat
scas
sub
divl
and
inc
insl
jp
push
mov
mov
mov
cmp
sub
jecxz
shr
shl
jbe
movsb
adc
popa
inc
push
in
mov
je
jbe
call
xor
push
orl
xchg
insb
push
icebp
xchg
or
fstps
stos
xor
pop
mov
xor
in
adc
mov
enter
mov
jmp
clc
outsl
mov
pop
test
sbb
mov
mov
es
shrb
xchg
push
in
mov
and
mov
or
sbb
xor
sbb
insl
mov
into
pushf
gs
lds
adc
subb
mov
push
ret
mulb
dec
mov
lcall
mov
mov
pushf
mov
dec
call
and
dec
mov
cld
loope
xchg
jge
imul
mov
ja
cmpsb
stos
adc
mov
inc
ljmp
call
sub
ret
test
test
jle
add
es
orl
sub
mov
aad
movsb
inc
cmpsl
inc
push
in
stc
mov
cmc
xchg
bound
adc
je
je
sub
xor
sub
mov
push
dec
adc
push
jne
stos
cmovge
jo
or
sti
enter
jge
xor
push
mov
je
int
stc
xchg
cmp
dec
jmp
mov
cmpsl
mov
push
lret
cli
loope
lods
sahf
inc
test
int3
mov
xor
cmp
push
std
jae
push
pop
lods
adc
mov
call
ret
inc
mov
mov
pop
clc
adc
mov
jecxz
fmul
mov
fsubp
call
push
inc
and
fisubl
pop
addl
and
inc
pop
inc
pop
inc
enter
pop
lret
insl
ja
clc
dec
push
js
fnstsw
repnz
mov
iret
jne
mov
out
inc
clc
push
mov
and
dec
shll
out
push
test
cmp
or
inc
hlt
iret
xchg
sub
popl
dec
fimull
stc
push
pop
mov
sbbl
mov
sbb
cmp
dec
xchg
mov
fdivrs
mov
mov
jp
pop
rcl
fs
fwait
shrl
jge
ds
jmp
inc
and
shll
repnz
xchg
add
sbb
mov
mov
int3
dec
push
jnp
pop
cmp
orb
rorb
shrl
sbb
or
in
pop
dec
sarl
cmp
fimuls
dec
jp
ret
add
add
mov
push
xchg
mov
sub
jne
xor
ror
dec
shlb
sbb
or
pop
xchg
jmp
push
jg
nop
jae,pt
jp
lret
push
jno
popf
jg
xchg
fsubr
lahf
das
test
mov
loope
rcll
out
ds
adc
lock
lea
cld
mov
dec
jg
jmp
lret
cmp
outsl
pop
das
dec
and
push
imul
dec
cmc
xchg
or
pop
add
lahf
sub
sub
add
mov
addr16
insb
cmp
jno
bound
xor
xchg
sti
imul
cmp
xchg
pop
mov
cmp
mulb
into
es
mov
in
xchg
jle
shll
lret
in
mov
clc
inc
dec
je
pushf
jbe
jp
inc
les
ja
callw
and
dec
out
jecxz
cmpsb
and
int
sar
adc
mov
mov
cmp
adc
cmp
jae
push
push
ret
cmpsl
psubb
add
in
xorb
dec
cmc
les
add
insl
add
cwtl
sbbb
push
movsl
xchg
in
jle
js
mov
mov
sub
cmp
cmp
fsubrs
jnp
mov
pop
sub
xchg
pop
mov
and
xchg
inc
je
and
mov
and
ds
insl
test
clc
cmpsl
fwait
mov
rolb
outsl
pop
and
fcoml
in
nop
push
sbb
ret
stos
xchg
iret
add
ret
pop
hlt
pop
mov
xchg
sarl
sub
call
mov
pop
rcll
mov
fwait
mov
and
mov
pusha
in
cltd
jmp
xchg
lock
nop
inc
xchg
loop
sti
mov
dec
cmp
mov
xchg
sbb
addr16
inc
xor
aam
dec
mov
into
jl
mov
cmp
dec
popf
push
mov
inc
push
into
fldt
fadds
cmp
sarl
repz
xor
mov
repz
jl
push
push
ret
cld
and
je
pushf
sbb
add
xlat
jo
cmpsb
ret
jg
ret
or
ffree
test
add
int
rorl
faddl
adc
imul
mov
andb
aas
clc
xchg
add
iret
mov
scas
push
int
xchg
mov
sbbb
stos
push
aad
pop
adc
aam
sbb
mov
out
add
mov
jo
push
int3
push
das
xor
scas
enter
pmaxsw
cltd
xchg
dec
imul
iret
mov
mov
cmp
pop
adc
repnz
xor
aad
mov
xor
incb
inc
lock
cwtl
or
iret
mov
pop
int
mov
mov
adc
popa
xadd
rolb
xor
push
xor
in
hlt
push
addl
leave
adc
mov
adc
jnp
mov
dec
mov
adc
sbb
stc
add
cli
mov
sbb
mov
jb
lods
pop
jl
repnz
loope
arpl
call
and
jb
mov
call
pop
dec
cmp
sub
or
pop
cmpsl
test
ds
rcl
inc
jns
mov
in
sahf
mov
enter
mov
popf
and
inc
clc
sbb
lea
sarb
jg
rcrl
jnp
jo
inc
xor
push
clc
mov
inc
inc
xor
fdivr
data16
pop
pop
and
shlb
mov
push
addr16
push
negl
dec
jne
push
push
fistpl
fwait
and
mov
lret
into
nop
dec
add
scas
cwtl
repnz
xchg
call
mov
pop
add
nop
inc
pusha
dec
adc
andb
leave
and
adc
cmpsl
cltd
pop
sub
xchg
popf
push
insb
hlt
dec
jge
sub
sbb
jle
push
pop
sub
imul
pop
push
std
out
fwait
xchg
pusha
push
add
jmp
cmc
mov
fwait
in
fwait
rol
aaa
mov
stc
xlat
jl
loope
cmpsb
mov
sbb
movsb
inc
pop
rdmsr
cli
mov
push
cmp
or
scas
mov
arpl
and
cmp
cmp
mov
dec
push
insb
mov
pop
pop
popa
push
repz
mov
adc
push
sbb
mov
jae
dec
fisubrl
and
sub
xor
pop
repz
dec
sub
pop
inc
dec
movsl
gs
das
jo
and
lock
mov
sub
pop
cmc
xchg
adc
mov
pusha
cmp
in
scas
cld
inc
in
inc
pop
push
cs
push
xchg
add
je
cwtl
into
aam
shl
jnp
scas
loop
dec
cmp
push
or
arpl
cmp
push
mov
scas
push
xor
pop
mov
ds
push
inc
out
xchg
daa
sub
jbe
sbb
xor
jmp
test
mov
in
shll
adc
sub
mov
pop
mov
push
mov
mul
inc
push
inc
push
or
xor
adc
jo
js
addb
sbb
xchg
push
incl
pop
xor
jne
int3
aam
sti
ret
iret
mov
xchg
adc
pushf
or
and
cli
into
mov
push
stc
lret
push
sbb
jbe
mov
xor
adc
cwtl
jno
mov
dec
lds
nop
mov
cmp
inc
sbb
fwait
loope
cmp
lods
mov
adc
cmp
mov
xor
mov
ljmp
mov
pop
fsubs
gs
fisubrl
sbb
and
push
xchg
adc
cmp
shr
pop
lds
loopne
adc
leave
movl
aad
pushf
adc
mov
shr
inc
stos
cmp
mov
daa
xchg
sti
mull
or
arpl
xchg
aad
sub
jnp
inc
add
jge
pop
sub
xor
cmp
push
shll
pop
mov
sub
pop
mov
jns
xchg
push
xchg
addl
aaa
sub
inc
andl
pop
mov
cmp
jl
pop
xor
lds
push
lcall
and
or
jnp
aaa
pushf
idivl
mov
js
mov
outsl
push
das
dec
mov
fidivs
push
cwtl
push
pop
insb
or
jg
enter
movsl
sub
adc
stos
cmc
scas
pop
xchg
jmp
adc
adc
out
cwtl
pop
pushf
fisttps
sbbb
and
rcr
dec
sahf
cltd
rcr
adc
mov
jne
jmp
fdivl
adc
iret
adc
lahf
inc
mov
cmp
sub
sub
scas
popa
sarl
fidivs
mov
mov
mov
test
jecxz
xor
add
push
testb
ds
aas
push
out
xlat
int
lods
out
lods
loopne
push
out
mov
in
popa
cmp
fdiv
rcll
adcb
es
nop
stos
clc
add
out
mov
outsl
dec
shlb
jge
data16
fcmovnu
les
sbbb
inc
or
imul
orl
xor
out
outsl
xchg
imul
stc
movsl
or
adc
movsb
xchg
adc
add
xor
addr16
sbbb
adc
fldt
stc
popf
mov
es
call
jle
push
and
enter
sub
mov
xchg
inc
cli
lods
and
daa
lds
push
push
lea
push
or
xorb
xadd
mov
je
xor
cmpsl
inc
shlb
jg
div
sbb
sbb
or
cld
mov
mov
gs
repnz
mov
es
insl
sbb
shll
lret
dec
call
add
xchg
pop
fdivrl
pop
sub
mov
jne
fwait
clc
insl
pop
ds
lock
adc
xchg
mov
xor
sarl
icebp
cmc
lock
sahf
mov
xchg
pop
or
push
pop
xchg
int3
aaa
mov
mov
daa
pop
aam
insl
dec
test
mov
inc
adc
test
imul
out
loopne
jns
pop
mov
xchg
in
std
adc
add
inc
rolb
arpl
cmp
lods
fsub
stos
sub
and
out
sub
stos
icebp
fiadds
loope
jg
cmpsl
ret
int
pop
iret
imulb
cltd
mov
inc
or
aas
enter
push
add
inc
xor
sub
dec
movsb
andl
xlat
adc
xchg
imul
les
movsl
sahf
mov
popf
pop
icebp
cmp
inc
and
add
daa
add
mov
push
pop
nop
inc
cmc
mov
mov
int3
dec
outsb
mov
dec
mov
lahf
sub
aas
divb
dec
cs
mov
push
pop
ret
sahf
sub
xlat
or
aam
jp
scas
movsb
into
stos
jp
pop
jnp
mov
shlb
pushf
adc
scas
jmp
add
fcmovb
ds
xor
test
sub
add
inc
mov
cmp
rcll
inc
hlt
push
xchg
mov
mov
xor
leave
push
push
pop
mov
jne
and
xchg
ja
push
cmp
gs
mov
inc
cmp
xor
and
pop
push
out
out
pop
inc
pop
mov
std
nop
daa
push
mov
push
cmp
repz
cmpsb
inc
cmpsl
ret
inc
fst
insb
and
jae
dec
sbb
js
imul
or
pop
adc
or
cmpsb
addr16
scas
add
stos
fbld
mov
adc
mov
repnz
xchg
mov
sbbb
pop
cmpsb
xchg
out
jb
jmp
pop
mov
mov
pop
out
jne
mov
adcb
dec
sub
mov
mov
inc
jp
sub
inc
jne
es
aas
mov
dec
mov
hlt
imul
lret
test
jl
dec
xchg
add
sbb
sti
pop
jecxz
mov
or
hlt
mov
testb
jnp
movsl
push
xor
dec
add
push
xlat
xchg
pushf
push
push
divb
inc
xor
pop
push
sbb
xchg
lahf
adc
out
mov
jecxz
in
and
lret
sti
mov
xor
pop
mov
cmp
leavew
jg
pop
push
mov
arpl
pop
repz
aad
mov
imulb
xchg
cmp
xchg
and
popf
push
mov
inc
cltd
pop
or
add
mov
push
cmp
pop
mov
xchg
mov
shl
daa
ds
dec
cmc
cmpsb
outsb
mov
xchg
lcall
mov
les
iret
xchg
push
jbe
add
mov
sub
ds
push
inc
sbb
xor
jnp
imul
outsl
dec
loop
cmp
xchg
daa
sub
xchg
and
cmp
mov
and
sub
int3
movsl
inc
mov
xchg
dec
repnz
push
lcall
stc
dec
test
cmp
daa
aas
sub
push
and
mov
dec
xchg
mov
adc
dec
sub
pop
xchg
repz
pop
mov
out
and
iret
and
pop
adc
daa
and
dec
lahf
add
sbb
js
fidivl
add
jecxz
sbb
sub
jo
xchg
push
push
aad
adc
mov
mov
fnstcw
or
or
movb
dec
enter
mov
negl
aas
repz
not
push
or
mov
incl
push
xchg
xchg
mov
jmp
outsb
jo
push
cmp
mov
mov
xchg
xor
mov
rcrb
movsb
sub
les
fcmovne
aaa
sbb
in
adc
xchg
or
or
sti
ja
xor
sbb
test
mov
sub
mov
aaa
arpl
icebp
inc
jecxz
or
pusha
push
fstl
push
test
lock
xchg
mov
add
sbb
out
inc
test
bound
insb
xorl
lahf
enter
mov
pop
add
mov
push
jmp
loope
out
lods
xchg
in
mov
xchg
aas
push
add
push
pop
jb
xlat
mov
into
mov
jmp
mov
cmp
ret
cmpsb
test
sbb
inc
aam
adc
gs
dec
stos
mov
je
jg
in
add
jmp
push
ficoms
add
sub
out
inc
dec
aad
sbb
repz
adc
jns
lock
fidivs
or
lock
lea
jb
repnz
pop
xlat
xor
jae
cld
push
imul
test
cs
cwtl
jmp
fwait
and
in
ret
leave
outsb
icebp
push
jno
inc
dec
cmpb
cmpsl
mov
push
mov
fists
mov
std
mov
push
iret
dec
add
mov
jno
xor
or
add
cmpb
iret
test
cmpl
or
push
and
xchg
lods
or
shlb
shr
icebp
jecxz
adcl
es
addb
in
arpl
xorl
loop
mov
lods
jge
out
sub
sub
adc
push
shll
scas
testl
stos
mov
add
test
push
subl
lret
cmc
inc
inc
xchg
pop
inc
cmp
push
lea
xor
adc
cld
and
jl
sub
pop
or
inc
mov
dec
lds
mov
xchg
movsl
cmp
loop
xor
ss
cwtl
cmp
sbb
dec
out
pop
sub
and
movsl
js
mov
inc
cmp
ljmp
sub
mov
pop
jmp
pop
pop
insl
ds
insb
add
xor
push
ljmp
mov
repnz
imul
mov
adc
pop
andl
pop
repnz
mov
jge
dec
imul
or
cmc
push
call
adc
das
in
das
shlb
lock
cmc
jmp
sbb
sbb
mov
in
inc
push
call
loopne
push
sqrtps
inc
lret
rorb
xchg
mov
cmp
shrb
pop
pop
and
mov
cmp
sub
ja
test
stos
test
lods
faddp
test
outsl
ja
cltd
sbb
cmpsl
jg
mov
call
xchg
shll
leave
jne
cli
scas
gs
xor
std
jmp
movsl
es
adc
lcall
xchg
subl
call
mov
popa
jecxz
and
lds
push
and
lods
imul
lods
xchg
ja
sti
xchg
insb
and
mov
sub
je
pop
pop
repz
add
mov
xchg
inc
popa
aad
ljmp
cmp
push
jae
ljmp
test
adc
mov
mov
sub
scas
mov
jecxz
stos
add
scas
add
sarl
mov
icebp
repnz
inc
jmp
mov
adc
into
cmp
in
pusha
add
add
fidivrl
in
movsl
mov
xlat
lods
in
or
dec
pop
jb
adc
dec
lret
sahf
inc
adc
popl
jge
mov
fcmove
cwtl
orl
lock
adc
adc
push
xorb
pop
dec
inc
andl
dec
cmpsb
push
mov
std
pusha
sbb
push
or
movsb
xor
aad
xchg
sub
jecxz
dec
andb
int3
ljmp
mulps
sub
into
jecxz
sub
sbb
mov
clc
mov
adc
lock
push
pmuludq
out
and
inc
in
test
push
jnp
fscale
hlt
enter
xchg
mov
sub
popa
pshufw
cltd
stos
lods
mov
mov
or
jns
dec
repnz
popa
or
mov
ja
in
mov
xchg
movsl
mov
jle
add
jmp
ljmp
mov
jge
in
cmp
mov
shlb
in
pop
mov
sbb
scas
jmp
sar
les
xor
lods
cs
lock
inc
mov
sbb
pop
fwait
movsl
mov
clc
push
adc
pop
mov
test
ret
jbe
popf
orb
adc
mov
shlb
and
inc
decl
ja
repnz
xchg
lea
lock
mov
and
cld
pop
dec
sbb
xor
mov
out
cmc
add
inc
cltd
out
lds
aam
decl
jns
xor
test
cli
mov
jbe
stos
mov
push
movsl
scas
and
push
jp
push
sub
in
cmp
out
mov
or
xchg
push
insl
push
shufps
lcall
add
add
xchg
mov
lds
leave
jae
adc
lds
push
inc
neg
mov
add
imul
jnp
mov
mov
int
jge
mov
in
sarl
test
inc
jg
xor
aad
xlat
xor
xor
adc
sahf
or
es
lock
inc
ffreep
mov
andb
ret
adc
xor
stos
pop
fnsave
aam
in
sahf
pop
pop
xchg
push
cmpsb
mov
inc
xchg
cmp
xor
mov
sarb
fildll
jbe
in
push
mov
cmp
add
xor
dec
push
adc
xlat
call
jecxz
int3
loop
lcall
gs
cmp
mov
roll
mov
and
pop
push
sti
push
sub
push
mov
mov
adc
imul
dec
pop
sahf
dec
loopne
stos
mov
fidivrl
sbb
data16
xchg
imul
jb
jecxz
aad
js
jmp
imul
dec
pop
jp
pusha
out
movsl
sub
cs
test
fucomp
cwtl
out
add
les
cmp
hlt
cmp
out
stc
jne
dec
push
cmp
test
imul
mov
icebp
push
popf
or
inc
adc
ds
cmp
sub
cmp
and
stos
out
cs
popf
push
ja
push
xlat
std
dec
out
jp
and
rorb
pop
jl
fsubs
test
fiaddl
arpl
adc
dec
and
and
xor
xor
add
andl
loope
addr16
and
or
bound
popa
popa
cld
cs
xchg
dec
mov
lahf
mov
xor
scas
cli
lcall
mov
aad
pop
scas
jmp
push
in
imul
imul
inc
mov
stc
in
pusha
xchg
in
pushf
lds
stc
xor
pusha
ljmp
pop
bound
out
cmpsl
xchg
cmp
loopne
in
xor
cltd
inc
clc
loop
xor
inc
mov
loope
aad
fs
les
inc
jae
outsb
stos
aad
adc
rorl
lods
jmp
xchg
aad
sti
adc
mov
xchg
and
loopne
enter
lret
dec
dec
sbb
xchg
pop
fwait
fwait
add
mov
insb
fmuls
pop
out
pusha
sub
imul
inc
jnp
outsl
dec
push
repz
scas
ds
adc
sub
mov
or
add
in
daa
push
mov
xlat
in
stos
imul
mov
xor
pop
jae
add
inc
push
xchg
pop
pop
cmc
aad
bound
sub
pop
add
add
xchg
mov
aad
adc
and
mov
mov
and
xchg
enter
insb
daa
pushf
andl
cltd
sbb
add
pop
pop
xchg
icebp
inc
ljmp
outsl
adc
push
push
lea
pop
rolb
fcmovb
or
adc
movsl
sbb
cmp
push
imul
iret
in
jp
mov
fdivrs
insl
repnz
add
xchg
mov
cmp
xor
pop
pop
mov
insb
pop
sbb
cmpsl
dec
jb
jg
out
scas
lods
inc
xchg
push
shl
fcoms
jns
cmp
cmp
dec
inc
xchg
loope
fs
and
test
jne
or
pusha
scas
dec
mov
push
ja
out
push
loop
aad
movsl
sbb
sbb
push
xor
es
and
insl
push
push
cmp
nop
or
xor
loop
stc
sub
movb
movsl
call
xchg
std
sbbl
push
mov
lret
jb
jmp
pop
xchg
repnz
or
pop
add
je
notl
pop
fidivl
or
pop
cs
sbb
push
mov
pop
inc
push
sahf
cmp
sub
add
or
into
aaa
and
or
xor
leave
push
jmp
sbb
imul
insl
repz
repz
inc
mov
idivb
mov
ret
jp
sbb
jnp
dec
icebp
pop
cmp
enter
mov
pop
mov
fwait
and
sahf
out
cltd
push
outsl
cmpsl
dec
push
daa
mov
mov
and
cmp
movsl
mov
pushf
aaa
xchg
xor
cmc
sbb
lret
sbb
shrb
and
test
test
inc
divl
jmp
mov
sub
movsl
aas
in
int3
xchg
outsb
mov
or
or
cmp
hlt
jnp
sbb
into
test
xor
jmp
test
jbe
mov
in
push
cmpb
addl
je
gs
xchg
int
xchg
jmp
push
and
sub
sahf
fcoms
push
fdivs
inc
movsb
jns
mulb
cmp
cmp
push
rorl
inc
pop
xchg
and
cmp
jns
clc
xlat
insb
rcll
das
mov
mov
imul
fmuls
ds
sub
fs
add
imul
mov
mov
add
push
scas
dec
ja
aad
into
lahf
sbb
pop
imul
xchg
fidivl
rolb
cltd
push
je
mov
stos
adc
jne
mov
xchg
mov
aas
push
dec
pop
xchg
jle
mov
xlat
mov
fcomi
dec
mov
repz
or
mov
push
out
popf
cltd
enter
mov
dec
ret
xor
enter
movsl
add
mov
push
add
lret
rolb
mov
into
clc
sbb
lret
xor
adc
outsb
in
std
mov
shrl
les
push
dec
sub
or
inc
aaa
push
add
xor
in
ljmp
les
jbe
mov
test
inc
xchg
push
dec
rorb
xchg
daa
add
lahf
loopne
sbb
pop
or
mov
mov
pop
loop
lds
push
push
jl
inc
sbb
cmp
out
jb
popa
int3
inc
sahf
add
bound
fistl
jl
cmp
shl
jns
jb
sub
in
ljmp
jbe
mov
aaa
inc
push
ficomps
aas
mov
mov
nop
mov
nop
dec
and
hlt
pop
sub
jecxz
mov
lock
pop
pop
movsb
add
add
rcr
sbb
arpl
pop
shrl
adc
mov
mov
adc
test
clc
mov
cltd
daa
mov
push
sbb
cmp
inc
ss
mov
pop
or
mov
test
loopne
pop
push
cmpsl
xor
dec
clc
inc
aad
jg
divb
into
addr16
int3
or
sbb
movntq
test
daa
or
andb
pop
cmp
mov
push
inc
or
ret
and
dec
xor
nop
pop
pop
out
pop
mov
adc
dec
xor
adc
inc
fdivr
mov
in
and
push
ret
outsb
dec
loope
lods
lret
xchg
cmpsl
mov
enter
aas
mov
jle
stos
rcr
orb
fdivrl
cmp
stc
sbb
mov
daa
roll
stos
movsl
fwait
into
cld
adc
outsb
andl
les
lcall
xchg
add
mov
pop
pop
sub
popa
pop
push
in
int3
inc
bound
mov
xor
sbb
dec
pop
xchg
mov
xchg
outsl
xor
lahf
sbb
mov
pop
rolb
sub
pop
xor
lock
subb
test
cmp
xchg
dec
int3
xchg
and
dec
mov
iret
xor
ret
or
fldcw
add
sub
std
dec
cltd
in
sbb
cltd
mov
das
push
lret
push
adc
sub
push
mov
and
arpl
cmp
dec
xor
aaa
loope
rclb
arpl
mov
sub
cli
test
push
xchg
dec
mov
sahf
add
pop
test
hlt
data16
add
xor
jge
mov
insb
addb
push
xchg
into
loop
incl
dec
lods
fcoms
lahf
sub
out
movsl
lea
xchg
dec
into
loope
ret
rorl
enter
fimull
push
aaa
dec
inc
jnp
cwtl
sbb
repnz
sarl
daa
scas
or
sub
xchg
scas
mov
jnp
sti
fisubrl
aaa
shrl
mov
sub
pop
shrl
jmp
inc
psadbw
repnz
icebp
cmpb
sub
push
xlat
pop
mov
popf
outsl
sbb
mov
outsl
pop
add
mov
mov
jb
push
cwtl
cmp
pop
or
fistpl
cwtl
xchg
dec
pop
jb
jno,pn
repz
test
xchg
cmp
movsl
xchg
dec
lcall
mov
fld
cwtl
cmovp
cmc
cmp
and
mov
sahf
add
adc
iret
push
mov
lds
lret
cmp
mov
sub
mov
pop
jmp
cli
mov
aam
icebp
sbb
mov
arpl
xor
jno
inc
dec
js
lret
sub
repnz
andb
lods
nop
repz
push
sbb
mov
into
mov
dec
bswap
mov
pop
lret
inc
incl
fcmovu
jo
pushf
cmc
pop
ret
cwtl
lcall
jle
das
push
dec
inc
xor
iret
ljmp
fldcw
and
jl
fstps
test
cmc
imul
cmp
cmpl
inc
mov
mov
cltd
inc
xchg
daa
movsb
jle
inc
add
jae
or
push
std
scas
and
pushf
sub
ret
out
repz
outsl
xor
cmpsl
mov
movsb
mov
jne
mov
xchg
mov
sti
xchg
cmp
jnp
roll
in
adc
dec
scas
incb
insb
xor
inc
push
jp
call
or
xor
jge
notl
lahf
sbb
mov
rcrb
push
jmp
fdivrl
movsb
mov
cld
int
xor
dec
mov
movsl
or
fwait
or
sub
mov
lahf
fsubl
iret
jb
mov
ret
sub
test
lods
mov
dec
aam
test
pop
rcrl
cmpsl
mov
ror
repnz
popa
shrl
xchg
push
es
es
lea
test
xchg
negl
xchg
lret
flds
cmp
out
jmp
imul
popf
jo
push
lcall
test
das
pop
popa
stc
xlat
addr16
inc
lret
shll
lods
sub
push
lods
xchg
lret
rol
daa
mov
lret
xchg
test
lods
test
mul
push
ljmp
add
popa
fidivrl
out
sub
in
add
xor
inc
aas
notl
popf
jbe
enter
jg
jae
dec
pop
adc
cmp
aad
lods
pushf
rcl
popf
push
fsts
push
mov
push
mov
in
push
dec
pop
xchg
lods
notb
jb
stos
jl
mov
and
rcll
ss
dec
test
movsb
pop
sbb
add
jne
call
cmp
dec
jb
dec
int3
xor
test
es
xchg
popa
push
outsl
decl
cmp
movsl
fs
mov
adc
sub
jbe
sar
shll
mov
outsb
cmpsl
popa
movsl
shr
rolb
outsb
lret
hlt
sbb
outsb
xchg
mov
pop
sub
pop
pop
xchg
mov
jno
in
hlt
xchg
sub
ret
xchg
lret
arpl
jge
dec
add
push
fcomps
inc
inc
xchg
add
vmread
je
mov
outsb
jae
pushf
gs
add
enter
adc
inc
or
xchg
lds
out
insl
leave
xchg
mov
lods
fdivs
sbb
or
in
arpl
mov
or
add
jne
or
or
mov
ror
mov
inc
lea
fistps
pushf
cmp
xor
adc
aad
jae
inc
addb
inc
rcrl
push
sbb
and
sbb
aad
clc
pop
jne
adc
mov
or
xchg
fidivl
inc
pop
pop
push
into
daa
in
fisubl
pop
ficoms
inc
and
add
push
push
xor
hlt
dec
or
mov
dec
andb
jp
mov
scas
mov
dec
xchg
cmp
jecxz
sbb
and
mov
xchg
lds
pop
mov
jecxz
inc
cmpsl
test
pusha
gs
xor
jle
fidivrl
inc
scas
icebp
xor
pop
out
sub
push
jo
xchg
dec
out
mul
aam
push
cmp
outsb
jne
xchg
inc
ret
and
or
outsl
pop
and
cmp
or
push
out
movsl
mov
pop
ret
iret
andl
addl
mov
and
into
hlt
dec
xor
push
cmp
cld
ret
xchg
dec
jo
shll
lock
imul
fs
cmpsl
scas
testb
cmp
xor
pop
mov
addr16
push
jae
arpl
fimuls
nop
add
outsb
mov
or
xchg
and
pop
jne
and
pushf
sbb
jbe
test
and
daa
xor
aas
out
mov
jl
rorb
andb
push
jl
rolb
xchg
out
idiv
loope
jecxz
xchg
or
outsb
push
xlat
or
mov
sbb
push
imul
pop
adc
scas
xor
mov
aas
imulb
xor
jns
nop
shl
pop
out
push
jl
addr16
mov
mov
ljmp
cmp
pop
mov
adcb
fistpl
sbb
out
or
jge
repz
push
add
add
cwtl
scas
ja
adc
push
in
adc
inc
xchg
dec
xor
scas
lret
lods
or
call
test
mov
and
fimuls
cmpl
jge
fmuls
dec
or
or
ja
fstps
mov
insb
movsl
sbb
mov
movsb
or
hlt
sub
pop
jecxz
dec
xor
js
pop
cmp
repnz
je
mov
and
scas
cld
jmp
repnz
lahf
cmp
sub
lods
push
and
cmp
jl
mov
mov
insl
mov
dec
mov
jmp
push
dec
pop
lock
cmpsl
js
fcomp
adc
jno
fs
fisttpl
inc
mov
inc
cmp
ss
mov
cmpsl
adc
cmc
adc
dec
shl
sti
mov
sub
fdivp
pop
insl
mov
xchg
mov
nop
mov
test
adc
or
loope
aas
xchg
pushf
ror
insb
cmp
insb
fidivrs
stos
in
xchg
shrl
jle
xor
loope
jmp
enter
or
outsl
xor
xor
stos
sbb
dec
mov
insl
cli
mov
repnz
adc
ss
jge
mov
xchg
imul
loop
insb
mov
xor
call
faddp
jb
or
ret
ja
dec
sub
aad
dec
inc
or
pop
push
jle
enter
or
mov
pop
in
and
jl
inc
mov
in
push
mov
jne
jbe,pt
xor
ss
shl
imul
fildl
ds
std
cmp
je
lea
sub
add
sbb
cli
mov
in
or
scas
test
inc
mov
repz
je
xchg
inc
cmc
inc
ja
ror
ss
sub
cs
les
jbe
and
and
sub
test
inc
lahf
sub
inc
gs
mov
add
pusha
or
xchg
mov
pop
in
inc
or
rclb
or
jle
aas
pop
dec
popf
aam
sub
stos
fisubs
adc
and
mov
dec
sbb
dec
js
enter
sbb
outsb
sub
popf
xchg
les
lds
pop
jo
mov
and
mov
mov
xlat
add
cwtl
les
and
add
pop
insb
ss
mov
sub
lds
mov
or
roll
jg
adc
cmp
sarb
aam
fstenv
shll
sbb
lds
lea
ret
mov
sti
adc
cwtl
cmpsb
movsb
mov
mov
mov
or
mov
aaa
dec
fsubp
xchg
push
cmpsl
add
test
or
jl
dec
or
stc
adc
add
fsts
rolb
xor
mov
out
inc
bound
shrl
les
sti
dec
addr16
cmpl
push
loope
and
adc
fsubrs
xor
sahf
inc
adc
pop
shr
shrb
mov
fstpl
mov
dec
repnz
push
jnp
add
aas
scas
cmp
jg
cld
mov
push
and
mov
mov
ficoml
ficomps
xchg
adc
xor
fsubl
xchg
mov
mov
push
push
jne
pop
bound
cmpsb
push
sub
in
loope
cmp
pop
jne
lcall
in
mov
pop
push
jg
mov
rclb
lock
mov
mov
ljmp
dec
in
pop
shlb
push
stc
orb
test
mov
xchg
inc
ljmp
cmc
xchg
dec
mov
jecxz
aas
mov
jecxz
out
mov
in
hlt
add
inc
add
add
xchg
jns
mov
test
pop
cmpsl
jp
stos
fisubl
outsl
rcll
mov
test
mov
or
jge
lods
sar
xor
idiv
mov
flds
stc
mov
lods
sahf
jns
out
and
xlat
call
in
mov
push
cwtl
pop
sub
cmp
inc
test
aad
js
popf
cli
bound
sub
mov
push
xor
jecxz
xor
inc
movsb
rorb
das
dec
mov
xor
fisubl
ret
adc
fstps
jo
adc
arpl
mov
mov
in
xlat
out
fcmovnbe
mov
mov
stos
jo
adc
jbe
adc
test
cmpsb
sarl
inc
cli
lods
dec
hlt
mov
mov
push
sub
into
cli
call
je
hlt
cmp
adc
xor
shlb
enter
js
pop
push
adc
lock
xlat
test
test
into
out
inc
out
xor
sbb
mov
iret
pcmpeqw
add
pop
repnz
inc
andl
xadd
xor
xchg
call
sar
mov
pop
mov
and
lds
lahf
push
mov
push
push
push
loopne
add
scas
add
aaa
adc
out
cmp
andb
add
mov
mov
shrb
add
out
cld
imul
or
sahf
jae
dec
jbe
mov
mov
in
test
cs
pop
and
inc
xor
sub
push
into
shlb
fcmovnu
xchg
nop
mov
jbe
in
jmp
dec
daa
int3
sbb
ljmp
cli
daa
mov
aam
sbb
mov
movsl
dec
dec
mov
and
lcall
lods
jns
fsubrl
add
cmpl
leave
inc
fdivp
xlat
or
jmp
pop
jbe
pushf
or
jbe
arpl
sbb
pop
push
jns
aam
test
mov
push
movb
sbb
in
inc
inc
int
sub
into
cmp
out
mov
shlb
nop
call
push
push
inc
mov
push
pop
cmc
mov
lea
ret
test
xchg
lret
mov
cli
inc
jmp
icebp
std
push
jg
js
mov
test
xchg
repz
push
xchg
dec
int
enter
jle
push
jge
js
lret
negl
pop
dec
subl
and
jecxz
pop
sbb
shrl
pop
sbb
cld
fcmovbe
mov
lock
int
and
scas
test
ss
in
sarb
inc
xor
das
cld
leave
sbb
pop
cmpsb
and
xchg
jb
data16
iret
mov
fadds
adc
ljmp
in
cmp
mov
aad
adc
mov
ja
mov
dec
mov
nop
out
fwait
jge
out
js,pt
orb
inc
dec
mov
xor
mov
pop
pop
mov
sbbb
in
out
ss
cmp
cmp
or
dec
rcr
xor
xchg
int
shr
or
es
jecxz
inc
lcall
push
and
popa
mov
mov
xchg
hlt
test
pop
jbe
xchg
cmp
xorb
data16
test
movsb
ljmp
mov
adc
js
cmp
jb
push
mov
ficoml
xchg
fisttpl
xchg
test
aam
push
push
jno
insl
and
data16
push
in
repnz
push
imull
sub
xor
shlb
xchg
push
sbb
aam
fs
scas
xor
dec
push
ret
mov
push
out
stos
sarl
sbb
pop
pop
fildll
in
addr16
test
call
jbe
rorb
imul
jne
sbb
out
jo
or
hlt
mov
xor
aas
aaa
test
fnstenv
call
push
inc
pop
push
cmp
cmpsl
jno
cmp
mov
popf
enter
xchg
pop
dec
iret
subl
int3
xlat
dec
dec
lret
or
cli
out
inc
mov
rolb
ret
xor
jge
jbe
jne
rorb
jb
push
daa
xor
xchg
ret
cmp
add
pop
xchg
data16
jle
mov
mov
mov
xchg
repz
xchg
stos
pushf
jb
cs
mov
xchg
sub
sub
pop
mov
ljmp
decl
xchg
int3
inc
loop
rorb
xor
ret
ja
jl
dec
es
and
push
sub
lcall
inc
mov
mov
aaa
mov
std
shrb
jnp
sub
sti
das
inc
pop
push
jmp
or
and
cmp
push
divb
mov
out
push
test
xor
push
mov
addr16
test
sub
adc
xchg
xlat
nop
cmp
scas
or
inc
cmpb
xchg
popa
pop
push
cmp
dec
cmp
outsb
repz
rclb
xchg
popa
flds
loope
insb
loopne
test
xor
js
ljmp
xor
inc
lcall
or
mov
sbb
cli
cmp
js
fld
fcompl
incb
arpl
test
xchg
nop
imul
mov
mov
mov
mov
xor
movsb
std
rcrl
sahf
cmpsl
mov
mov
mov
sahf
pop
inc
sbb
stos
rcl
mov
mov
or
xlat
addr16
adc
lds
das
dec
xor
gs
jmp
cmp
adc
mov
xchg
out
push
scas
mov
xchg
push
lock
push
addl
int3
jno
add
bound
xchg
nop
xchg
mov
sbb
or
xchg
imul
pop
stc
imul
pop
xor
loope
shll
nop
xchg
jnp
fwait
int3
scas
iret
cwtl
into
lahf
add
cmp
xor
mov
add
push
push
shr
sahf
and
aas
lret
test
xchg
ja
pusha
fsubrs
mov
mov
jl
fwait
daa
xor
push
or
mov
dec
xchg
inc
test
in
jno
mov
pop
mov
call
pop
pop
movsb
dec
iret
sub
loop
jno
inc
jmp
push
hlt
mov
fcoms
add
adc
repz
lret
stc
iret
into
dec
loope
and
cmc
movl
pusha
dec
pop
in
add
cmp
hlt
insb
sti
int
xor
icebp
shlb
mov
sahf
jnp
loope
jge
mov
cmpsb
mov
es
addl
aad
fwait
cmp
add
pop
and
or
popa
out
and
pop
in
fwait
push
pop
testl
and
ljmp
in
pop
jmp
cmp
jp
add
faddl
xchg
jmp
pop
sarb
out
dec
cmp
pop
xchg
in
pop
pop
xchg
mov
lahf
loope
subb
jmp
movsb
jbe
incb
dec
scas
mov
pop
and
adc
jbe
ljmp
in
mov
or
leave
shl
cmp
fdivrs
sbb
jno
lcall
push
nop
pop
jne
cmp
fxch
and
xchg
jle
mov
repnz
inc
fwait
sbb
outsl
mov
repnz
xchg
ffreep
scas
stc
call
test
sbb
jg
and
cmpb
push
rcll
outsl
mov
lock
ljmp
bound
jo
xchg
mov
push
andl
test
and
std
ret
das
stos
addr16
repz
mov
dec
add
jg
gs
subl
cmp
mov
inc
outsb
leave
xor
sbb
movsb
gs
mov
test
cli
mov
push
xor
mov
notl
cmp
adc
cmpl
sbb
xchg
sub
sbbl
jle
cmp
pop
adc
add
imul
cs
out
pop
push
aad
inc
jb
or
stc
jmp
add
mov
sub
dec
adc
cltd
hlt
mov
mov
fsub
out
cmpsl
mov
xchg
stc
je
or
xor
dec
int
cmp
lods
aad
gs
mov
aaa
stos
test
push
xchg
out
ret
jmp
inc
inc
mov
leave
mov
ljmp
dec
jmp
cli
int3
orb
pusha
nop
int3
adc
outsl
aaa
sub
insl
mov
sub
jge
mov
test
push
cmp
dec
aaa
push
mov
cmp
fdivs
mov
jb
dec
pushf
sbb
mov
pop
out
jp
pop
fstl
out
dec
jmp
adc
int
enter
loop
mov
daa
fdiv
mov
cmp
jae
pop
push
inc
mov
icebp
xchg
je
jno
pop
jnp
jle
inc
mov
inc
dec
in
dec
cmp
cmp
jnp
lock
push
pop
testl
stos
pop
push
pop
rolb
ret
xchg
insb
mov
sbb
int3
xchg
mov
xor
cmp
jle
or
dec
inc
add
sub
sbb
ds
cwtl
mov
imul
dec
or
out
xor
daa
push
mov
mov
pusha
fstps
cmpsb
pop
mov
mov
or
test
mov
iret
ret
int3
pop
add
hlt
pop
shl
or
jbe
mov
int
insl
pusha
test
and
mov
mov
shll
sub
sub
add
sbb
push
into
adc
pop
inc
dec
movsl
push
cli
cmp
hlt
pop
sti
orl
sbb
xor
sarl
clc
enter
pop
cmpsb
cmp
js
xlat
lods
pushf
pop
hlt
xlat
add
je
repnz
xchg
inc
dec
xor
mov
aam
nop
aas
xlat
sub
shrb
orl
insl
pop
pop
insl
xchg
cmp
jbe
shl
outsl
mov
and
aas
add
mov
imul
out
add
arpl
loop
cmp
add
inc
nop
fs
xchg
jbe
outsb
outsl
std
ret
jle
adc
jns
cmp
push
inc
jo
ret
das
bound
daa
ds
scas
mov
push
xlat
mov
ss
sub
xchg
filds
adc
push
xor
pop
rol
repnz
loope,pt
ja
jo
popf
shrb
jne
mov
push
sahf
cmpsl
sbb
sub
divb
cmp
fldl
inc
jb
fdivs
jae
push
popa
mov
mov
mov
cld
xor
daa
aad
ljmp
push
pop
leave
push
sbb
mov
fsubrs
repnz
mov
jecxz
lret
subb
inc
mov
dec
cmpsb
and
pop
pop
and
cmp
ljmp
mov
stc
int3
shrl
fld
leave
sbb
sahf
jbe
orb
cmp
ljmp
test
outsb
setl
jbe
cmp
xchg
push
imul
ljmp
jb
clc
gs
out
imul
sbb
xor
sbb
pushf
add
xchg
cmpsl
rorl
repnz
ss
cli
enter
push
imul
pop
fisttpll
mov
frstor
add
push
adc
out
les
pop
jecxz
mov
jo
or
nop
movsb
jbe
pop
jns
pop
mov
sti
push
jbe
xchg
sbbb
xchg
cmp
ret
repz
ret
dec
xor
outsb
add
ss
in
mov
out
int3
repz
push
shl
pop
enter
dec
xor
mov
pop
push
lcall
not
xchg
inc
pusha
mov
adc
test
pop
stos
or
pop
inc
jl
in
push
int
das
pop
into
lret
push
sub
ss
sub
and
sbb
pop
jns
mov
xchg
hlt
push
xchg
out
lds
inc
pop
xchg
mov
xchg
lds
in
fimull
cmp
sub
loope
jle
add
push
testb
sub
mov
jae
gs
arpl
mov
pusha
mov
test
and
inc
inc
lahf
aas
mov
mov
add
sub
inc
cltd
and
jns
ljmp
addl
mov
cmpsl
enter
jmp
aaa
sub
enter
cld
cltd
push
insb
iret
xchg
jnp
dec
fwait
cmp
pop
out
in
dec
fisttps
lret
add
adc
mov
cmc
push
jecxz
leave
sbb
mov
inc
cmpb
lcall
push
ja
sahf
mov
cmp
mov
and
mov
out
ret
push
push
pop
xchg
arpl
cmpsl
mov
lahf
pop
push
rcr
in
mov
adc
mov
inc
sbb
jbe
cmp
jmp
ja
cltd
jbe
jp
pushf
add
mov
aas
dec
sti
push
dec
lret
mov
xlat
xchg
adcb
push
or
push
xor
mov
out
or
das
arpl
jle
pop
lock
ret
sub
pop
push
mov
test
imul
xor
xlat
xchg
push
fs
xlat
inc
pop
dec
mov
lods
jp
mov
jle
out
fcoms
repnz
movsl
sub
pop
cltd
sub
xor
pushf
mov
xchg
xor
mov
inc
or
fs
ret
cmc
xchg
mov
xor
dec
pop
jno
popf
jae
cmp
and
add
add
arpl
add
dec
jp
jo
insl
fistpll
int
jb
jae
inc
inc
loope
mov
insb
pop
scas
test
stos
lods
ss
and
dec
outsl
pop
into
dec
cltd
inc
stos
push
add
insl
hlt
xchg
cmp
push
dec
xor
jbe
xor
mov
pop
add
or
ds
sub
push
cwtl
mov
push
inc
dec
dec
pushl
cmp
jg
xor
dec
adc
rol
jl
lret
mov
pop
and
daa
cmp
push
cmp
cld
xor
mov
xor
jns
mov
movsl
cltd
pop
dec
xchg
pop
mov
sbb
fsub
int3
jg
push
lret
aas
add
xor
pop
pop
mov
sub
and
mov
out
sahf
pushf
add
mov
xor
into
cwtl
jnp
cmpsb
sbb
jo
adc
andl
pop
inc
sub
sbb
xor
or
mov
dec
mov
loope
dec
jne
xchg
jp
ss
xchg
imul
push
addr16
loope
add
pop
inc
nop
sub
dec
sbb
and
leave
dec
repz
pusha
adc
ret
jmp
fstpt
jnp
outsb
jmp
fldenv
lret
scas
cmpsl
mov
pop
in
lcall
cs
xchg
mov
jmp
movsb
nop
or
shl
call
mov
popf
pop
cli
test
jmp
pop
xor
mov
cmc
fistl
pusha
outsb
push
fwait
pop
sar
or
mov
das
sbb
rolb
add
inc
dec
adc
pop
sbb
or
cs
das
cmp
pop
cld
add
ja
scas
in
jnp
js
jnp
inc
adc
lods
inc
jne
pusha
cli
mov
jnp
mov
pop
sarb
mov
xor
notb
push
icebp
mov
outsb
jmp
test
loopne
lret
aas
adc
mov
lea
mov
push
cmp
ret
stc
dec
pusha
cli
idivl
fs
ret
jbe
call
push
push
cmp
jnp
lahf
cmp
lahf
or
add
inc
sub
mov
push
repz
mov
aam
lods
fistpll
ret
repz
xchg
add
je
push
cmp
jle
pop
test
push
jp
test
repz
sbbl
sbb
or
mov
or
xor
pop
ret
jge
fwait
imull
roll
xchg
pop
lods
cli
add
rolb
xor
dec
aam
push
push
jg
lods
sbb
xchg
shlb
sub
js
adc
insl
out
lret
bound
dec
pushf
and
insb
lock
jg
ret
cmp
adc
mov
repz
cmpsb
pop
out
or
jmp
xor
stos
clc
jge
icebp
dec
dec
sbb
mov
insl
jbe
ret
leave
xchg
inc
sbb
mov
cmpsb
testb
movsb
subl
pop
pop
inc
sarl
and
dec
cmp
arpl
xchg
and
add
pop
jg
repnz
sbb
repz
dec
jbe
jae
and
pusha
mov
sbb
out
cmp
ret
adc
mov
rorb
mov
inc
and
lds
push
xor
nop
out
pop
test
mov
pop
inc
xchg
mov
popa
add
clc
insl
dec
lcall
lret
jns
jo
xor
leave
cmp
mov
and
and
cli
mov
ret
xor
sub
or
pushf
ds
inc
adc
ss
dec
je
mov
mov
movsb
cld
sti
mov
outsl
push
cmc
imul
out
aaa
outsl
xor
push
leave
nop
ss
push
sti
xchg
adc
mov
mov
xchg
movsb
shll
jae
fneni(8087
aas
adc
mov
or
and
imul
inc
imul
cwtl
cli
jo
mov
lea
cmp
pop
xchg
nop
or
or
out
data16
jmp
mov
lret
out
sbbl
mov
imul
addr16
scas
sar
notb
addr16
push
inc
jns
insl
or
lods
in
sub
or
fisubs
idivb
subl
fists
mov
test
xchg
ret
push
add
or
imul
repz
movsl
sbb
aas
and
fdiv
and
insl
adc
lds
push
js
nop
mov
mov
sub
lds
out
mov
pushf
jne
push
dec
adc
scas
adc
mov
add
lods
mov
jmp
adc
push
mov
xchg
lds
fsubrs
lock
xchg
xorl
mov
push
aad
test
scas
push
scas
imul
and
ss
sahf
xlat
jp
pop
adc
cmc
repz
test
mov
and
les
mov
sub
pop
mov
js
pop
lock
iret
push
ss
out
jo
or
push
sti
loopne
imul
dec
mov
xor
sub
into
aam
lock
movsl
cs
jb
cmp
and
cli
jb
lods
addl
jmp
fidivrs
shll
add
jne
jmp
mov
or
int3
add
add
adcb
rol
out
or
mov
test
test
fwait
data16
push
adc
ss
mov
xchg
test
cmp
insb
hlt
sbb
mov
aam
outsl
popa
loop
negb
cmp
pop
jae
mov
dec
adc
jg
into
pop
sub
dec
repnz
pop
rclb
ljmp
lods
out
add
out
mov
mov
es
daa
mov
imul
xchg
repz
inc
rcrb
sub
or
repnz
fimull
ficomps
and
dec
fcmovu
mov
loopne
cmp
inc
xchg
jo
lret
aam
subl
xor
dec
jp
and
out
and
dec
push
fs
or
push
dec
or
test
mov
clc
mov
iret
fs
lahf
popf
xchg
xor
push
ret
dec
mov
popa
popa
push
stc
pop
xchg
insb
fildll
jl
mov
pop
and
jb
mov
in
and
fldenv
and
sub
mov
insb
gs
out
sub
dec
jmp
push
addb
data16
and
scas
lret
insb
jmp
mov
ret
dec
hlt
outsb
xor
iret
adc
or
dec
push
inc
and
aas
leave
add
cwtl
xchg
pop
xchg
jno
jle
icebp
dec
lods
sti
sub
xor
add
push
xor
addb
jecxz
aas
ret
add
sbb
sti
aaa
inc
dec
pop
sbb
and
xor
loope
cmpsl
xchg
lock
fmull
hlt
sti
push
fcmove
cmc
fsubrs
pusha
pop
mov
dec
andl
mov
jne
popf
fnstenv
adc
push
add
xor
fsubl
jg
aas
add
aam
addr16
mov
into
push
pop
pusha
test
jmp
inc
test
inc
mov
pop
out
jbe
pop
sbb
js
mov
dec
mov
call
out
dec
shlb
mov
lcall
mov
adc
sbb
movsb
stos
cmp
jge
add
out
or
push
mov
jae
xor
dec
push
addb
sub
fildll
lea
add
xlat
js
xchg
mov
inc
aaa
lds
mov
idivl
pushf
imul
and
mov
daa
jbe
out
mov
mov
outsb
push
xor
jo
je
movsl
call
jae
decb
add
lcall
and
cli
push
pushf
stos
cmp
mov
pop
aas
xchg
adc
test
cmp
adcl
and
lret
loope
cmp
repz
gs
jp
mov
xlat
rcrl
fmuls
mov
sbb
movsb
insl
stos
fmulp
inc
or
inc
push
adc
hlt
ljmp
pushf
lods
ror
test
cld
dec
pop
ljmp
int3
in
ds
pop
daa
cld
fsubl
rcrl
push
int
jb
or
mov
lds
pusha
xchg
xor
nop
mov
xor
fs
insb
out
inc
fcoml
lret
loope
das
scas
jmp
std
adc
sbb
loop
push
pop
xchg
adc
inc
lahf
cltd
popa
lods
xchg
out
mov
mov
andl
movsb
mov
dec
push
xor
sub
out
mov
daa
icebp
int3
mov
lods
test
mov
inc
sahf
or
xor
mov
call
pusha
mov
sub
sbb
std
sub
and
push
jne
jne
das
or
mov
inc
dec
popa
and
mov
les
pop
sub
fs
inc
dec
mov
push
cmp
clc
lds
pop
imul
inc
decl
shlb
test
aam
xor
or
ja
sbb
xor
and
movsl
lea
imul
jnp
adc
stc
nop
pop
loop
push
rcll
xchg
push
hlt
xor
movsb
leave
adc
jge
xchg
xchg
dec
add
add
push
lds
inc
push
push
insb
xchg
test
adc
lret
outsl
roll
jle
je
ret
bound
fldcw
cli
mov
push
stos
fmul
fsubs
out
sahf
jno
pop
out
sar
adc
jne
test
nop
dec
mov
jg
push
cli
mov
push
mov
cwtl
adc
push
inc
std
adc
shrb
cmc
mov
std
cmpsl
addr16
jg
adc
lods
ds
jno
call
lods
sbb
push
jae
cmpb
lret
icebp
push
pop
inc
sti
mov
dec
and
dec
mov
jae
or
cmp
inc
xor
cmp
bound
jae
cwtl
fsubs
sub
xchg
xlat
push
leave
mov
ljmp
xor
sub
es
in
push
sub
leave
scas
dec
je
das
cmp
pop
xchg
adc
sub
and
pop
stos
in
sbb
popa
aas
mov
inc
mov
xor
push
and
aaa
les
repz
jnp
jmp
xchg
xor
jmp
cmpsb
gs
or
and
outsl
inc
xchg
sub
mov
cmp
in
pushw
sarb
arpl
shr
sbb
cli
add
mov
jle
mov
sbb
mov
aad
fsin
jne
cmc
xor
pop
cmp
cmc
dec
mov
stos
mov
mov
shll
jne
pop
fnstenv
sub
scas
shrl
movsl
xor
test
sbb
xlat
loopne
test
jg
push
shll
aam
inc
dec
fidivl
sbbl
mov
call
sub
test
push
data16
int
xor
shlb
mov
in
or
and
push
lock
xlat
iret
mov
mov
out
daa
fs
pop
lock
push
dec
or
xchg
je
ret
jecxz
xor
mov
addb
aas
aam
dec
mov
mov
scas
inc
xlat
dec
sub
jno
or
clc
jb
data16
into
cmp
adc
sbb
sub
fdivs
adc
xchg
sub
test
cs
sub
jns
xchg
js
mov
pop
es
mov
cmp
fidivrs
and
jae
ljmp
sbb
arpl
sbb
ja
aaa
push
inc
repz
push
or
push
or
imul
stc
insl
hlt
fsubr
insb
filds
popa
add
xorb
mov
cmp
and
mov
leave
mov
sub
or
lds
xchg
shr
xchg
nop
mov
jmp
rolb
test
xor
add
dec
mov
jp
or
push
sub
pushf
pop
inc
jmp
pop
mov
aaa
add
jb
push
pop
popf
fldln2
pop
push
sub
repnz
mov
popa
mov
adc
cmp
or
or
add
popa
sub
sti
nop
or
and
pop
es
lock
clc
jns
jp
jmp
shr
out
test
into
lret
inc
mov
nop
arpl
xchg
into
popf
aam
lods
das
xorl
mov
mov
ffree
dec
jg
sbb
mov
xchg
rorb
add
fildl
pop
jge
int3
aad
jle
shrl
test
sar
inc
cmc
fildll
fmulp
push
xchg
insb
and
cmp
cmpsb
jge
jecxz
out
or
xchg
push
rolb
sbb
jae
xor
jnp
sbb
inc
test
mov
mov
xor
lea
xchg
add
fwait
xchg
mov
maxps
xor
xchg
insl
and
ss
cmp
in
adc
or
sbb
fistps
cmp
icebp
rorl
popa
outsl
pop
adc
imul
dec
imul
test
mov
test
jno
mov
mov
mov
xchg
lock
into
std
xor
jg
mov
loop
lock
dec
push
jp
jge
mov
cmp
xor
aad
cmpxchg8b
enter
mov
and
rorl
xor
std
inc
cld
jne
mov
dec
mov
push
mov
stc
inc
push
push
aam
stos
jbe
dec
mov
xchg
insl
pushf
mov
lods
sbb
out
inc
xchg
mov
pop
jmp
mov
sub
in
mov
iret
or
sbb
mov
xchg
or
and
pop
sub
aad
dec
sbb
xchg
sub
bound
add
scas
es
dec
cli
xlat
dec
pop
lods
insl
xchg
cli
ficompl
jnp
sub
add
jo
iret
push
push
ljmp
xchg
xchg
adc
mov
lcall
xor
jecxz
les
jbe
fsubr
je
in
mov
gs
cmpsl
fstl
out
mov
dec
add
mov
shrl
sbb
and
push
lret
sub
lcall
xor
mov
mov
addl
lcall
int3
mov
clc
inc
gs
int3
and
sti
mov
mov
inc
push
adc
cmp
cld
int
loopne
ljmp
jg
adc
pop
shl
sub
arpl
sbb
jmp
movsl
push
lret
adc
mov
lea
xchg
out
jns
mov
popa
into
cmp
andb
cld
imul
sub
leave
push
inc
or
add
call
xor
or
addr16
sub
pop
mov
js
inc
icebp
popa
lahf
inc
push
sbb
push
cmp
mov
mov
mov
in
in
divl
outsl
fidivl
mov
cld
cmpsl
adc
mov
lahf
dec
sub
outsl
pop
xlat
sub
cmc
jge
or
mov
push
push
testb
or
xor
aad
xchg
push
xchg
push
sub
mov
xchg
xlat
and
xchg
mov
cmc
mov
lds
jp
jmp
sbb
mov
jae
in
pusha
xor
push
inc
shrb
inc
fwait
aad
std
gs
movsb
cwtl
pop
test
movsl
lahf
pop
call
imul
add
jecxz
jle
xchg
jbe
mov
sub
mov
mov
cltd
pop
cmpsb
ss
xorb
pop
adc
test
add
cmp
movl
lcall
dec
fnstenv
inc
mov
cmpsb
in
test
ret
out
fcmove
push
pop
pop
inc
adc
or
int3
xchg
ja
sbbb
mov
inc
orl
add
cmp
push
stos
mov
and
mov
sub
pop
and
adc
lcall
in
outsb
add
out
cmp
xchg
out
add
mov
jns
dec
xor
ret
and
std
insl
dec
inc
xor
inc
add
and
jno
push
hlt
notb
add
jns
jo
sub
add
add
out
and
pop
in
pop
jl
stc
fsubs
adc
inc
adc
pop
lret
ss
aam
iret
jns
push
dec
mov
std
movsl
inc
xchg
call
cli
add
std
push
xchg
and
cmp
les
lds
jecxz
dec
inc
jbe
add
stos
jmp
mov
and
mov
ret
mov
add
rclb
fldenv
push
test
pop
jo
pop
dec
jecxz
fwait
mov
sti
cmp
lods
mov
and
rolb
sub
push
ja
es
mov
aam
testl
xchg
mov
insl
jbe
or
mov
sbb
in
mov
inc
pusha
adc
sub
xchg
inc
inc
mov
mov
insb
or
div
loope
jmp
les
cmp
daa
push
xchg
aam
icebp
fnstenv
fisubl
sub
addr16
push
xchg
scas
inc
or
orl
sbb
sub
sub
inc
icebp
xchg
cwtl
iret
and
adc
cmp
lret
pop
jge
mov
adc
cli
test
sbb
cmc
mov
pop
pop
stc
int3
sbb
pop
out
mov
pop
pop
xchg
xor
fs
jb
xor
repz
cmp
sbb
sbb
outsl
jo
sub
and
imul
jbe
cmp
outsb
ljmp
stos
sbb
jno
pusha
and
and
and
data16
or
mov
pushl
test
adc
ret
pandn
shlb
cmp
sbb
les
push
mov
cltd
cwtl
testl
mov
xor
dec
jge
xchg
sbb
cld
stc
cmc
sarl
stc
cmp
jl
or
mov
ja
push
out
addb
jae
mov
fwait
adc
or
push
dec
pop
test
pop
fs
push
ja
and
or
jbe
cmpb
faddl
ss
lea
test
push
ffree
cmp
popa
cwtl
mov
negb
cld
sar
imul
adc
add
xor
fidivrs
mov
flds
xchg
dec
stos
lock
in
xchg
imul
insl
cli
das
icebp
xchg
sbb
insl
lea
imull
cmp
adc
pop
sub
jbe
lcall
jp
pop
clc
jnp
pop
fdivrl
leave
es
inc
loope
cmp
stos
and
sar
or
js
cmp
or
out
push
xchg
movsb
data16
mov
adc
inc
jns
mov
and
loop
sti
and
loope
daa
jbe
cmp
fcomip
sahf
outsl
fs
mov
xchg
les
aam
stos
fwait
loop
out
or
enter
pop
les
mov
addl
idiv
push
divb
mov
sub
and
push
mov
adc
cmpl
sub
dec
sbb
cmpsb
popf
push
stos
scas
int
std
insb
push
mov
cmp
les
or
gs
xchg
and
jnp
loope
mov
into
in
adc
mov
lahf
xchg
or
dec
push
imul
inc
jo
add
jle
mov
lahf
idivb
inc
xchg
lods
nop
mov
pop
pop
jp
dec
adc
cmpsb
test
add
dec
movsl
data16
inc
cmp
and
lret
cld
mov
lret
xchg
xchg
mov
push
das
add
sub
and
add
enter
inc
mov
in
in
or
jo
js
pop
loopne
or
mov
fwait
mov
pop
lods
sub
nop
test
test
scas
loope
add
repnz
sbb
add
add
or
push
inc
lock
insl
mov
mov
mov
push
popf
aaa
lods
sbb
das
jno
cmp
out
bound
inc
cmc
fcoms
lock
jmp
imul
popa
pop
out
in
push
sub
in
xorl
inc
adc
ds
add
and
lret
ja
dec
fnop
adc
jno
leave
aad
imul
aas
lahf
pop
negb
negb
jmp
std
xchg
jnp
cmpsl
cmpsl
xchg
cld
jg
imulb
dec
sub
fistpll
mov
xorl
notl
push
push
pusha
ret
jge
test
pop
xchg
add
mov
add
push
mov
imul
mov
pop
xor
mov
xchg
in
cwtl
stos
ljmp
xchg
fdivrs
scas
sbb
and
xor
rolb
xor
xor
xchg
lret
out
pop
inc
movsl
push
mov
stc
setl
jae
mov
push
iret
lret
shll
lods
xor
cmp
ficoml
fadds
add
movsl
fistps
sbb
add
lock
mov
mov
or
jg
loope
aas
ja
movups
jbe
sub
call
jmp
in
loope
in
cli
dec
ds
sbb
or
push
or
xor
iret
jmp
jge
js
jmp
pop
xchg
nop
into
and
lds
fisubrs
cmp
dec
mov
popf
repz
in
data16
daa
inc
int
shlb
ret
lock
mov
inc
loopne
jmp
pusha
jbe
jb
push
sbbb
repnz
push
jne
mov
into
and
cwtl
shll
adc
testb
int3
xchg
push
push
inc
rorb
cwtl
dec
scas
stos
fiadds
leave
add
add
add
dec
and
mov
push
jg
jnp
dec
push
inc
mov
push
and
sbb
movsl
push
shl
ss
icebp
andl
lock
cs
hlt
jne
dec
pop
jg
fdivrp
scas
js
cmpsl
sbb
out
adc
test
outsl
adc
stos
shlb
data16
dec
inc
popa
mov
movsl
fnsave
lret
notb
clc
mov
mov
sub
mov
out
and
ja
clc
std
mov
jmp
jl
add
shlb
movsl
outsl
mov
test
push
ss
popa
je
bnd
sub
int
test
shlb
fs
xchg
jmp
flds
pop
mov
add
sub
ljmp
mov
clc
jnp
loopne
and
aam
inc
lahf
faddl
pop
dec
or
daa
lret
pop
scas
in
mov
inc
cmp
jae
dec
mov
test
mov
dec
xor
out
fwait
dec
and
cmpsb
insl
dec
push
cmp
loopne
pop
dec
pop
adcl
mov
push
sub
lock
callw
xchg
push
pop
jo
sbb
mulb
loopne
popa
push
imul
push
add
mov
daa
cmpsl
adc
in
pop
mov
add
test
leave
int
jmp
adc
cmpsb
mov
stos
lds
inc
mov
adc
xor
jno
mov
cwtl
arpl
ja
or
add
xlat
mov
pop
inc
mov
test
cmp
dec
dec
and
adc
add
addl
sub
mov
and
inc
sub
fdivl
insl
inc
test
addl
data16
or
adc
mov
jge,pt
ror
push
mov
cmpsl
addr16
adc
daa
xadd
or
inc
ret
lds
ljmp
aaa
nop
int3
andl
jle
nop
cmpsb
lock
mov
dec
pop
loopne
fsubp
or
cs
fcompl
rcrb
lret
mov
loop
lods
mov
dec
nop
mov
or
iret
sarl
out
lret
adc
cld
xor
dec
int
mov
in
lcall
mov
pop
aad
andl
out
ds
movsl
popa
lahf
add
and
rol
mov
inc
ret
jecxz
jae
inc
jmp
mov
cmc
das
or
inc
loopw
mov
xor
loopne
pop
cmp
jle
sub
lahf
mov
js
gs
push
add
jnp
sbb
jo
fstpl
imul
jl
sub
push
cli
test
xor
mov
sub
pop
adc
inc
inc
leave
xchg
imul
loopne
sarb
xor
jle,pn
jmp
xor
push
stos
push
dec
das
mov
lods
adc
mov
sub
in
and
add
pop
dec
outsl
jo
and
pop
or
ret
xchg
and
and
insl
lea
std
int3
jp
mov
jnp
mov
mov
jg
inc
fildll
mov
adc
ja
test
int3
or
sub
ret
ror
add
or
xchg
push
push
mov
sub
das
sbb
clc
lahf
lret
femms
movsb
test
mov
xlat
push
call
or
fldcw
jp
popa
into
pop
fldt
and
mov
ficoml
inc
fwait
in
push
cs
mov
lods
push
loope
xchg
xchg
pop
jl
sbb
sbb
ret
pop
mov
aam
test
call
outsl
fildll
cmp
incl
sub
fildl
test
adc
leave
xchg
add
pusha
cld
cmp
or
ds
inc
das
pop
mov
xchg
jmp
data16
or
mov
arpl
sbb
add
xchg
iret
mov
lods
sbb
xchg
xchg
xchg
dec
roll
jp
imul
inc
xchg
movsl
in
fcmovb
mov
inc
nop
sub
lods
or
mov
subb
sti
mov
fnstsw
push
xchg
cli
stos
insb
jae
sbb
add
xchg
stc
dec
jmp
pop
cld
jns
dec
clc
mov
adc
jno
aaa
add
push
cld
or
xor
addl
lds
cmpsl
jae
xchg
xchg
pop
out
add
pop
daa
enter
pusha
jg
scas
pushl
lods
call
sub
shll
mov
lahf
hlt
inc
lds
shll
sti
call
xchg
and
sbb
dec
test
xchg
loopne
sub
push
lret
cli
jno
add
xchg
ret
ds
push
cltd
dec
xchg
popa
loope
cmp
sbb
jg
lea
jl
cli
outsl
cmp
pop
mov
fistpll
pop
jno
mov
in
mov
mov
sub
int
jno
mov
mov
mov
fcmovnbe
movsl
jp
lret
jnp
dec
mov
in
sub
stos
gs
aas
call
mov
pop
ds
mov
cmp
xchg
mov
loop
subl
push
push
mov
sbbl
xchg
push
sbb
jne
cmpsl
fistps
mov
sbb
lahf
fiadds
enter
xlat
xchg
ret
fwait
cmpsb
cmp
xchg
sbb
inc
jl
sub
stc
sub
push
out
jge
dec
test
scas
jo
xor
mov
inc
arpl
xor
lea
mov
repz
or
cmp
fcomps
cltd
xorl
in
mov
add
inc
call
es
popa
incb
cli
cld
push
aad
jge
aad
sbb
push
dec
imul
popf
rcrl
sub
push
out
call
fistpl
pop
daa
fisubrl
mov
push
lods
push
cld
xchg
fdivrl
jae
std
bound
or
push
dec
fwait
cltd
popa
push
mov
push
push
sub
lcall
fldenv
jns
jge
icebp
xchg
and
lods
mov
rcrl
or
mov
mov
movsb
pop
xor
jle
dec
dec
mov
inc
push
mov
shl
inc
out
add
pushf
bound
ljmp
sbb
push
mov
xchg
bound
aas
cmpsl
sbb
cwtl
cmpsb
cli
xchg
inc
push
mov
test
sub
sti
pop
and
inc
inc
int
jle
mov
sub
test
mov
pop
std
add
adc
leave
repz
mov
sub
or
sbbl
testb
lcall
push
pop
add
or
fisubrs
add
mov
xchg
jl
inc
push
mov
addr16
lea
push
pop
out
xor
lods
out
sarb
sahf
int
stos
inc
pop
jge
push
decl
addr16
adc
sub
mov
mov
rep
mov
les
jns
test
inc
xchg
fs
xchg
movsb
pop
aam
out
icebp
cmp
jne
aas
and
mov
pop
lds
stc
inc
sbb
fcomip
jmp
pop
lret
and
sub
xlat
subb
inc
cmp
cld
push
mov
leave
fistl
xor
sbb
popf
imul
pop
mov
stc
aas
mov
insb
mov
xchg
hlt
or
inc
push
ss
lahf
out
aaa
mov
imul
stos
jg
mov
xor
enter
xchg
or
lcall
sbb
inc
imul
stc
out
xor
dec
xor
dec
sub
pop
stos
popf
insl
stc
jmpw
jmp
test
loopne
mov
jbe
aad
xchg
pop
mov
cli
mov
mov
inc
int
in
movsb
imul
cmp
mov
notl
xor
call
or
add
and
testl
or
dec
ljmp
mov
sub
inc
cmp
push
sub
loope
pop
push
lret
out
jecxz
xor
push
jg
pusha
leave
mov
mov
test
cld
ret
fiaddl
push
test
pop
imul
mov
daa
jb
jecxz
in
out
sbb
lahf
lcall
xor
mov
hlt
pop
outsb
mov
repnz
ljmp
enter
bound
out
popa
jg
fwait
wrmsr
inc
jle
mov
cmpsb
jecxz
mov
jno
jge
jno
dec
scas
jmp
insb
cwtl
cmp
mov
insl
xor
outsl
jl
lods
sub
rorb
call
fwait
in
in
inc
lret
mov
or
jnp
xor
leave
insb
fsts
dec
and
xchg
mov
ds
pop
call
test
inc
popa
xor
xchg
jno
mov
push
jns
jo
js
adc
pusha
ss
mov
mov
fwait
or
push
repz
dec
test
int
sub
cwtl
push
jbe
fistpl
sub
xchg
pushl
dec
loopne
sub
jnp
das
into
adc
xchg
push
sub
add
ss
lcall
repz
sbb
fists
pop
sarb
xor
pop
fwait
add
movl
mov
sub
xor
rcl
sub
gs
sub
leave
movsl
push
jmp
push
push
jbe
pop
lret
popf
ret
int3
and
adc
xor
jl
bound
mov
cmp
ds
movsl
mov
add
rcr
fisttpl
jl
lret
test
out
xor
jge
ret
jg
imul
sahf
mov
and
push
push
dec
dec
sahf
test
enter
cwtl
nop
clc
xchg
jb
leave
mov
push
adc
in
push
pop
sub
ret
pop
call
jl
push
xchg
popa
mov
jno
xchg
mov
add
iret
sbb
xchg
enter
mov
add
push
mov
push
cmp
push
and
xchg
out
xor
xor
inc
bound
or
ficoms
sti
push
mov
xlat
pop
jmp
shll
and
icebp
hlt
sbb
sub
mov
popa
roll
pop
les
mov
xchg
imul
sti
mov
dec
or
add
clc
imul
dec
pop
xor
insl
xchg
icebp
sbb
shll
sub
lcall
cmp
out
xchg
mov
fmull
test
hlt
add
aad
adc
and
pop
xor
and
shlb
add
dec
pop
clc
fstpt
pusha
lret
roll
push
outsb
cmpsl
add
adc
xlat
jmp
jg
gs
sbb
xor
xor
bnd
xchg
jmp
mov
sbbl
insl
pop
xor
rorl
pop
adc
iret
aaa
adc
lahf
cmp
inc
shrl
aad
xchg
in
loope
int3
scas
xchg
test
jb
aas
movsl
imul
dec
arpl
mov
lret
jmp
test
pop
mov
cli
out
into
jecxz
rolb
add
aad
or
into
cmpsl
sbb
or
jae
rcrl
jae
dec
xor
aad
inc
mov
clc
movsl
rorl
fisubrl
icebp
add
ja
ja
mov
scas
mov
pushf
xchg
xchg
jg
insl
shl
push
xchg
mov
sbb
cmc
xchg
jp
neg
jne
cmc
inc
leave
incb
inc
jge
movsb
imul
shrb
mov
aam
push
add
dec
addr16
mov
sub
sti
jecxz
sub
nop
mov
sahf
clc
or
cmpl
sti
sbb
pop
sbb
enter
xlat
xchg
dec
push
pop
inc
inc
inc
xor
cmc
sbb
repnz
rcrb
shll
xor
mulb
pop
jg
call
dec
rorb
or
ds
enter
cmpsb
sbb
pop
repnz
out
adc
xchg
enter
xchg
pushf
jle
push
jno
pusha
pop
pop
xor
mov
cmpsb
jne
push
mov
sahf
jmp
sub
sbb
cmpsb
xchg
sbb
pop
adc
adc
ljmp
fcompl
inc
mov
out
mul
repnz
and
mov
aaa
xorb
add
adc
loop
jns
add
mov
test
dec
sahf
mov
cmpsl
test
mov
jae
mov
jbe
jmp
sbb
xchg
call
jns
pop
push
mov
push
cli
jmp
push
sti
xchg
sbbb
dec
iret
or
adc
adc
xchg
jmp
pop
daa
dec
push
and
popa
ss
mov
xor
jne
or
imul
jmp
divl
mov
inc
fistpl
mov
push
call
fs
cwtl
cmc
loop
into
cmc
shrb
pop
adc
stos
stc
repz
inc
nop
lds
rolb
push
rcll
sub
mov
sti
ret
bound
dec
lahf
mov
inc
mov
push
adc
mov
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
call
mov
push
call
lea
push
lea
push
call
test
jne
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
call
movl
jmp
movb
movb
push
call
movb
movl
mov
push
call
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
push
push
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
push
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
movl
call
mov
push
push
push
push
mov
call
call
push
push
push
push
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
call
lea
push
call
push
call
cmpw
push
je
push
call
push
call
add
jmp
call
ljmp
pop
jb
inc
sub
aaa
repz
lret
sub
aaa
rep
andb
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
dec
out
sub
je
out
mov
pop
cmp
inc
xchg
inc
mov
cli
xor
aaa
lock
sbbl
rorl
jns
clc
pop
xchg
dec
scas
sub
inc
sub
aaa
repz
fcompl
mov
dec
imul
jle
sbb
lahf
outsl
xchg
adc
js
and
pop
std
iret
popa
daa
lods
scas
aas
test
es
addr16
or
repnz
dec
jb
pop
cmp
jbe,pn
lahf
sti
repnz
jp
mov
js
mov
sti
daa
ret
test
lock
and
insl
movsl
stc
jg
inc
outsb
int3
mov
dec
sub
aaa
repz
jb
or
push
xchg
fistl
jb
and
jb
inc
sub
aaa
lock
and
jb
inc
sub
xor
sub
iret
xchg
inc
sub
aaa
repz
xor
aaa
icebp
sub
jb
inc
sub
aaa
repnz
jb
dec
sub
aaa
pause
mov
push
lea
les
push
test
repz
bound
aaa
repz
jb
inc
sub
aaa
repz
sbb
cmp
loop
and
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
push
lock
push
xchg
aaa
repz
jb
inc
adc
aaa
imull
inc
rorl
push
xchg
aaa
repz
pop
out
pop
ss
aaa
repz
inc
sahf
inc
sub
test
push
jb
inc
sub
aaa
repz
xchg
xchg
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
repz
jb
inc
sub
aaa
mov
mov
sub
jg
in
orb
cwtl
or
js
ret
mov
adc
into
fists
fisttpll
pop
aas
mov
push
mov
jnp
rorl
mov
xor
outsl
dec
cmpsl
jecxz
das
push
lds
mov
rcll
mov
pushf
negl
arpl
lea
enter
dec
lahf
and
test
inc
imul
sbb
sub
cwtl
lret
nop
inc
or
in
or
jp
mov
push
mov
jle
sbb
dec
loop
mov
sub
dec
test
mov
mov
test
rolb
mov
sbb
scas
leave
mov
sub
mov
inc
jecxz
mov
mov
pop
loop
popf
pop
push
pop
and
mov
out
xchg
enter
out
out
lahf
inc
idivb
pop
in
and
inc
stos
sbb
scas
nop
xor
and
lock
mov
inc
fiaddl
les
fnstcw
sbb
cmp
push
xor
aad
xor
xchg
mov
mov
jecxz
pop
mov
inc
testb
and
ficompl
or
push
movsb
fidivs
dec
fisubrl
js
xlat
dec
jg
dec
mov
sahf
sahf
divb
or
mov
mov
cmp
dec
lret
lods
iret
daa
jecxz
out
cmp
jns
dec
push
pop
das
dec
and
sti
repz
incb
dec
aaa
fstps
insb
mov
shll
cmp
xor
adc
add
mov
out
rcll
aad
ljmp
lcall
arpl
pushf
sub
sahf
pop
repz
popa
int3
sbbl
adc
and
jns
roll
sarl
cmp
test
lods
jp
sbb
lods
add
xor
cmp
lods
rcl
lcall
pop
cmpsl
add
push
fcom
cltd
icebp
jno
fcomi
mov
lahf
push
leave
jbe
mov
das
sub
shrl
in
es
lock
xor
loop
leave
popf
cmp
xor
push
ds
sahf
dec
cwtl
cmpl
stos
subl
sub
fstp
aaa
loop
imul
pushf
or
out
sub
push
adc
push
test
jbe
cltd
jbe
push
nop
mov
mov
dec
add
add
fcmovbe
jnp
aaa
fldt
xor
xor
push
jmp
mov
cmp
test
xor
test
xchg
xchg
ljmp
and
xchg
pop
push
mov
or
fidivs
jae
and
mov
fstpl
pop
out
aam
fsubrs
xchg
std
cltd
xor
rol
pop
add
jo
int3
sbb
mov
or
in
pop
rcrl
outsb
jl
mov
test
aad
pop
stos
mov
mov
insl
popf
sbb
ja
xchg
jp
adc
std
sub
or
dec
pop
into
mov
imul
es
add
sbb
cmc
add
dec
and
xor
int3
or
adc
push
ret
pop
in
fidivrl
out
and
das
mov
and
loope
jmp
inc
stos
lods
cmp
ja
dec
adc
cmp
push
sbb
add
or
sbb
adc
mov
jp
pop
pop
ds
mov
enter
dec
cmpsb
sub
adc
cmp
aas
lcall
aad
adc
mov
cmp
push
xchg
pop
pop
fxch
je
aad
cmc
insb
dec
push
mov
mov
stc
hlt
mov
jge
adc
xchg
leave
xchg
sbb
adc
xor
loopne
lods
addb
repz
mov
push
mov
fiadds
ficomps
xor
test
mov
jo
fsubl
jno
lret
ss
les
lret
pop
ja
or
pop
aaa
xchg
hlt
xchg
mov
push
ja
or
sti
or
dec
fistpl
dec
cmp
push
aaa
cmpsl
sub
sub
inc
pop
pop
int
iret
out
inc
andb
out
or
sub
sub
insl
mov
loope
mov
loope
es
stos
dec
scas
in
cmpsl
aad
imull
xorl
add
dec
push
xchg
repnz
dec
fstpl
adc
push
push
or
nop
jno
leave
or
cmp
cmc
sbb
lcall
fwait
loop
jle
lret
shlb
test
orl
sub
and
into
jb
decb
and
lret
jno
in
aam
jp
push
into
popf
out
pop
std
dec
xchg
jl
jne
imul
mov
xor
push
push
sti
mul
and
inc
sub
mov
cmpsl
gs
outsl
xchg
aas
xlat
cmp
fwait
addr16
pop
in
int3
add
rcrl
lods
inc
xor
shlb
mov
mov
cmp
jp
imul
lret
cs
out
movsl
lahf
sbb
lds
lahf
adc
mov
in
mov
inc
outsb
mov
popa
sti
loopne
jno
sub
push
lcall
popa
sbb
pop
shr
xchg
cmp
loopne
jno
leave
out
mov
jo
ret
lods
out
xor
cs
mov
pop
movsl
test
xorl
stos
sbb
test
and
jmp
pop
lods
sarl
pop
aad
sbb
fsubrl
sub
lods
aam
xor
xor
imul
mov
xor
dec
cmp
and
rolb
in
push
test
mov
out
sbb
std
pop
ja
mov
mov
arpl
xchg
pop
jne
js
xchg
loope
pusha
push
push
mov
arpl
icebp
es
mov
repnz
mov
jmp
lea
add
outsl
and
clc
push
lret
xlat
and
add
adc
mov
int
pop
scas
xchg
mov
insl
jae
nop
jnp
loope
lods
mov
ret
push
stc
xchg
jl
ljmp
inc
out
lea
outsb
arpl
mov
rclb
adc
jecxz
cmp
push
cmpsb
movsl
cld
push
fwait
mov
or
xchg
sbb
pop
mov
push
ds
les
ficoml
lock
imul
lret
mov
sub
aaa
loop
dec
xchg
test
inc
sar
je
out
mov
adc
sub
flds
addl
lahf
jmp
iret
jge
xchg
aad
jae
enter
sub
push
pop
sub
dec
sbb
iret
movsl
sub
jns
pop
js
loopne
lret
jmp
pop
loopne
es
adc
sbb
and
adc
loop
inc
inc
retw
add
icebp
flds
shl
lock
inc
sub
inc
dec
iret
les
pop
adc
test
rolb
fildll
daa
push
adc
mov
das
adc
cmp
lcall
rorl
mov
orl
or
lods
out
insb
and
stos
in
pop
push
adc
subb
js
jnp
add
lahf
insb
dec
pop
stos
adc
xor
push
popa
lret
pop
jno
test
dec
outsl
or
cmp
or
cmp
je
cmpsl
jmp
fucomp
sbb
iret
and
fsubp
movsb
leave
scas
mov
xchg
push
dec
shlb
inc
dec
inc
add
int
lret
jle
dec
push
lock
adc
and
lock
leave
enter
jae
inc
lret
lea
jo
xor
subl
jne
addr16
jo
mov
fwait
adc
je
xchg
push
jno
lret
int
and
sti
in
or
lock
push
outsl
adc
mov
dec
and
sbb
xchg
mov
fbld
cmpxchg
loop
test
fisttpll
lret
ret
pushf
in
mov
xor
pop
add
cmpb
mov
movsl
inc
cld
sub
xor
dec
shlb
lea
iret
or
dec
xor
jle
in
mov
push
inc
cmp
inc
mov
imul
lahf
popf
push
push
inc
outsb
in
xor
popa
iret
shrb
or
rclb
das
cmp
mov
test
lds
mov
mov
mov
xor
cs
and
mov
fcomp
test
pop
mov
enter
adc
outsb
jns
sti
fwait
repz
sbb
sub
leave
cmp
lcall
cwtl
jmp
cmp
jno
imul
scas
lods
bound
and
gs
push
sahf
clc
push
out
insl
mov
andb
xchg
call
sbb
pop
les
mov
dec
fwait
iret
mov
inc
aad
fsubs
jno
clc
sarb
mov
xor
jo
testb
out
lea
xor
pop
inc
loopne
adc
jg
push
sub
xchg
push
lret
aas
jb
scas
cmpl
cmp
xor
loopne
and
xor
pop
pop
nop
adc
xchg
push
or
subl
fsub
pop
xchg
jnp
outsl
shrb
fcomi
dec
loope
add
xor
jge
pop
push
cld
iret
mov
sbb
xlat
add
and
repz
cli
mov
or
and
and
cld
dec
repnz
fbstp
sbb
int3
icebp
pop
jmp
je
loop
repz
mov
mov
add
and
jge
push
pop
jnp
popa
imul
mov
mov
lahf
rcll
push
or
stos
fidivl
stos
jl
or
fsubrl
push
cli
sub
add
push
jbe
popa
add
mov
shrl
daa
adc
and
cmovbe
or
repz
jp
rolb
test
in
inc
adc
xlat
push
into
mov
int3
ret
xchg
mov
pop
lcall
push
jb
sub
loop
pop
cmpsl
fstpt
jp
jg
aas
outsl
push
mov
test
addr16
imul
nop
xor
mov
rcll
sub
jge,pt
push
fs
enter
hlt
pop
or
mov
sub
call
pop
loop
and
cmp
gs
push
xchg
imul
out
jl
mov
push
rcll
jp
repz
pop
ss
stc
or
scas
ret
xchg
fstpt
fmuls
inc
in
lret
out
sub
jg
enter
cmp
adc
pop
outsb
inc
xor
jmp
mov
pop
jno
test
cltd
rorl
inc
repnz
add
push
daa
and
mov
mov
lahf
pop
sub
pushf
push
les
fistl
inc
push
mov
ss
xchg
sbb
cmc
add
mov
xchg
loop
or
dec
xor
mov
in
xor
pcmpgtd
and
dec
xchg
xor
in
mov
pop
je
adc
ds
jo
push
int
sbbb
xchg
mov
or
mov
ja
xor
movsl
popf
loopne
push
insb
pop
inc
push
sbb
xor
xchg
push
cli
mov
or
jmp
push
shl
shll
insb
sbb
inc
xor
push
popa
add
pusha
add
or
fisubs
sbb
adc
into
mov
inc
mov
push
xchg
lcall
xor
jg
repnz
or
gs
jecxz
je
inc
inc
arpl
or
mov
jge
rcrl
and
mov
xchg
cwtl
xchg
call
and
cmp
stos
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
inc
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
imul
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
imul
mov
add
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
imul
loopne
inc
add
imul
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
push
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
imul
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
