sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
push
push
call
mov
mov
add
mov
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pushf
rcl
out
cld
mov
mov
jge
negb
test
xor
add
ja
jae
dec
inc
xor
mov
and
lret
fadd
ret
xor
adc
negb
pop
add
cmp
test
mov
popf
stos
subb
ljmp
sub
mov
cmp
js
sbbl
fsts
push
cmp
dec
daa
test
or
into
xor
mov
cmp
inc
push
and
sbb
add
in
mov
sbb
fs
jne
test
loopne
pop
movsb
mov
jmp
mov
imul
shl
cmp
rol
and
cmpsl
outsl
mov
lcall
xchg
push
add
push
out
adc
addr16
imul
pop
mov
jp
dec
jns
jge
out
cmp
xor
jae
xor
adc
dec
dec
jecxz
stos
mov
es
jl
rclb
pop
rol
mov
lret
push
int3
pop
mov
jp
pop
dec
cmp
mov
jg
or
cs
lret
pop
cmp
outsb
into
aam
mov
push
mov
mov
fadd
sub
aad
pop
pop
mov
dec
sbb
iret
stos
ds
push
in
ret
xchg
pop
adc
outsl
pop
lea
jle
xchg
mov
lock
aad
mov
adc
std
cld
pop
arpl
jne
rep
sahf
mov
mov
cli
adc
xchg
or
call
add
cmp
out
jo
dec
outsl
std
inc
xor
repnz
addl
into
stos
sahf
jle
lret
add
fs
test
in
les
push
add
popf
repnz
imul
pop
push
fs
jge
pusha
mov
sbb
repnz
dec
sbb
jp
rclb
xchg
add
and
je
aas
and
xchg
movsl
roll
dec
mov
add
daa
into
test
out
popa
cmp
clc
es
movsl
aam
mov
scas
xchg
repnz
push
mov
inc
shr
ret
or
and
push
addr16
int
xchg
in
push
stos
jle
pop
cmp
jmp
adc
das
xorl
sbb
loope
jb
mov
push
or
inc
cmp
aaa
ljmp
pop
sub
mov
sub
lds
cmp
adc
aam
hlt
inc
fs
pop
push
rcl
scas
aaa
lods
cwtl
clc
push
fstp
pusha
jp
mov
sbbb
gs
dec
and
push
std
dec
int3
add
lea
cli
push
inc
jno
adc
add
in
adcl
popf
mov
imul
into
jnp
and
incb
xor
testl
adc
cmpsb
sar
fsubl
shl
arpl
jne
repnz
mov
jmp
push
aam
loop
inc
pushf
add
adc
sub
in
bound
stos
add
inc
mov
fldln2
cld
pop
fmul
scas
lock
imul
into
jmp
push
jne,pn
mov
or
mov
aad
push
push
fcoms
cli
mov
mov
fs
dec
imul
dec
and
fldenv
mov
mov
sahf
mov
popa
push
push
mov
fcomi
cmp
mov
dec
xchg
sahf
pop
push
test
out
add
shr
subb
jmp
push
mov
mov
push
addr16
int3
arpl
scas
daa
and
es
inc
aad
xor
jge
lock
jns
sbb
lods
mov
call
gs
push
mov
fistpll
in
fistpl
mov
out
leave
inc
jns
mov
mov
shrb
ds
or
ficoml
test
push
push
fidivrs
movsl
mov
rcrb
xchg
adc
push
xchg
mov
in
jecxz
sub
jmp
in
add
xchg
frstor
mov
imul
xor
sbb
rcll
dec
and
mov
pop
mov
ret
es
ss
add
and
fsubl
and
popa
adc
xor
inc
orb
mov
inc
pusha
mov
callw
pop
xchg
cmc
imul
scas
rolb
jmp
dec
jg
jmp
inc
xor
xchg
inc
dec
ja
mov
lcall
pop
stos
or
insb
rcrl
out
scas
push
ffree
popf
mov
push
stc
pop
icebp
dec
icebp
loopne
aam
sub
shrb
push
das
icebp
xor
cmpsl
mov
bound
xchg
or
add
fsub
dec
test
movsl
xlat
clc
lds
aad
jp
xchg
push
lods
mov
ficomps
iret
adc
sbb
mov
mov
popf
rcrl
push
mov
bound
jg
orb
jne
ljmp
shl
push
js
sub
mov
and
add
jge
cmp
jp
sub
xchg
ret
ljmp
jbe
popf
cmp
jl
mov
fdivrl
xchg
pop
fiadds
lcall
and
fstl
out
in
inc
fwait
cld
jb
add
mov
xor
lods
sbb
jb
add
and
les
cwtl
mov
pop
nop
enter
fstpt
lods
xchg
add
pop
sbb
push
ds
loopne
flds
or
xchg
lock
leave
xchg
jp
cmpsl
dec
sbb
xchg
xchg
or
jmp
xchg
mov
add
stos
dec
mov
or
sbbb
shrl
clc
mov
lret
mov
pop
jno
sbb
std
inc
pop
push
pop
pop
pop
stc
mov
cmpsl
push
std
nop
f2xm1
add
dec
add
sub
inc
sahf
dec
dec
loop
mov
sub
jae
int
movsb
xchg
nop
fcompl
or
sub
jno
imul
cmc
xor
push
pop
lods
movsl
or
repz
adc
sahf
cmpsl
cmp
ret
adc
mov
js
inc
adc
jg
imul
adc
push
sbb
add
test
lds
daa
cmpb
rcrl
add
jne
fs
scas
and
lds
shlb
jae
mov
ds
data16
pop
xor
adc
movsl
pop
pop
cmp
mov
scas
sahf
int
popf
sub
loopne
fldt
mov
jecxz
gs
in
dec
mov
outsb
bound
jnp
pop
aad
cltd
scas
popf
inc
dec
aas
adc
into
adc
xchg
je
inc
mov
mov
push
cmp
rorl
ja
rcl
dec
jge
filds
cmp
out
jae
and
daa
addb
jmp
ret
testb
ja
push
les
jmp
mov
sub
test
iret
stc
popf
and
push
pop
fwait
push
clc
cmp
addr16
lret
pusha
adc
add
testl
push
pop
push
adc
adc
mov
hlt
inc
aas
lds
ret
adc
mov
sbb
stos
mov
fiaddl
sbb
cli
ret
mov
adc
icebp
imul
sub
jae
xor
cs
and
lods
lods
test
xor
test
push
xlat
in
lcall
xchg
out
cltd
mov
mov
insb
mov
insl
xchg
pop
sub
sbb
int
lods
int
dec
loopne
out
rorl
mov
and
repnz
pop
cmp
cs
popf
and
lcall
into
lock
cmpsl
and
aas
push
sub
inc
push
xor
pop
pop
xchg
movsl
ret
lret
push
push
mov
add
push
inc
movsl
testl
fildll
pusha
xorb
insl
inc
mov
fdivl
push
mull
in
xor
xchg
cs
std
pop
cs
sbb
cmp
lock
subb
mov
and
push
xchg
pop
add
ss
loopne
test
aam
jbe
imul
mov
sub
add
xchg
pop
enter
xorb
ficoms
movsb
scas
popa
loopne
mov
push
lcall
mov
xchg
adc
mov
add
xchg
or
les
rorb
push
sbb
xchg
xchg
cmpsb
loope
jecxz
pop
aam
sub
cltd
add
fsubl
sbb
lahf
add
mov
dec
int3
std
mov
cs
push
fistpll
mov
jg
jl
dec
xor
clc
sbb
xchg
movsl
movsl
int3
mov
and
inc
jo
dec
adc
in
mov
insb
mov
xchg
ljmp
pusha
inc
push
lahf
loop
inc
sbb
mov
aam
push
faddl
daa
aad
push
sbbb
push
or
push
adc
and
popf
mov
push
daa
and
bnd
add
inc
xor
jge
mov
pop
mov
mov
inc
sub
pop
mov
inc
jno
scas
jl
cld
das
daa
cmp
mov
gs
add
inc
and
pop
jecxz
scas
mov
repz
pop
pop
clc
xor
xchg
mov
pop
iret
xchg
sub
das
out
sub
push
ja
das
sub
cmp
filds
fisubs
and
pop
xchg
sub
sbb
out
or
movsb
xchg
dec
and
leave
lds
rcr
jl
js
rorb
cmp
out
push
inc
or
or
cmp
sub
sarl
scas
pop
xlat
cwtl
cmp
mov
xchg
clc
cmp
push
lret
je
neg
out
pusha
xor
push
and
mov
or
push
inc
sbb
add
subl
xor
popf
add
test
insb
sub
dec
adc
mov
bswap
add
repz
push
jg
roll
xchg
cmpsb
hlt
fsubp
inc
sbb
xor
stc
bound
xchg
scas
add
rcll
out
adc
ret
dec
push
popa
xchg
pop
mov
sub
sbb
in
dec
mov
into
adc
add
in
popf
xchg
icebp
add
xchg
lcall
subl
popf
adc
fwait
pusha
lret
jbe
addb
shll
in
xor
jl
sub
fstpt
sbb
fnstenv
lock
xchg
mov
or
mov
stc
sbb
mov
cwtl
jo
xor
cld
and
sti
dec
sub
addl
cmp
int
pusha
jle
vhaddpd
rclb
or
add
ss
sbb
jecxz
adc
arpl
cmp
scas
pop
cli
in
roll
inc
sub
xlat
out
std
fwait
in
jne
adc
mov
mov
jecxz
cmp
and
sbb
sub
movsl
hlt
hlt
xchg
sbb
sub
subb
push
in
lcall
jno
mov
xchg
imul
xlat
sbb
rclb
jb
pushf
roll
subl
pop
lcall
icebp
jb
mull
sahf
dec
in
dec
data16
dec
and
cltd
pop
jmp
mov
stos
nop
sbb
add
ds
xor
pop
cmp
shl
mov
pusha
ret
or
xchg
inc
lock
push
loope
pop
jns
jmp
movsl
nop
mov
mov
je
jnp
lcall
lcall
fistl
pop
dec
nop
sub
out
inc
mov
xchg
subl
jmp
lret
mov
out
gs
cmp
jno
aaa
jb
pop
mov
xlat
cld
arpl
rcl
xor
jno
cmp
mov
pop
enter
pop
cltd
push
lahf
dec
jge
jecxz
jb
fldenv
inc
enter
addr16
cmpsb
cmpsl
mov
shll
dec
shr
ss
jecxz
in
pop
cmp
cmpsb
cmc
fldt
adc
jle,pt
xorb
scas
mov
mov
cs
mov
orb
jmp
dec
scas
cmp
pop
aam
in
adc
jp,pn
in
arpl
sbb
punpckhwd
jns
sbb
pop
stc
mov
push
xchg
sbb
fidivs
adc
jns
push
sub
addr16
xor
mov
popa
lahf
pop
lock
lds
cmpsl
lcall
loopne
mov
mov
aam
jbe
lock
cmp
push
mov
xor
xchg
fimull
js
in
aam
mov
push
mov
pusha
lds
ja
hlt
xchg
enter
sbb
imul
jae
mov
pushf
mov
fcoms
in
inc
push
repnz
stos
xchg
and
mov
adc
adc
pop
test
mov
cmc
jmp
cwtl
sub
jmp
and
mov
pop
stos
xchg
test
lret
dec
push
sarb
lock
mov
xor
cmp
jle
ljmp
test
or
jmp
nop
enter
jle
fsubr
xchg
in
push
pusha
test
loop
jne
xchg
mov
out
mov
in
add
and
cmp
sbbl
rcrb
add
adc
sahf
outsb
aad
repz
std
sbb
inc
movsl
add
push
fsub
out
sub
int3
mov
outsb
xor
mov
sti
loop
or
dec
pop
call
arpl
fnstenv
fcompl
je
xor
lea
pop
pop
mov
xor
smsw
dec
and
inc
pop
aam
iret
jns
data16
sbb
cmc
mov
dec
or
clc
mov
aas
xchg
xchg
dec
loope
test
push
jo
jmp
mov
test
divl
pop
pop
scas
cmp
xlat
xchg
sub
out
inc
mov
mov
push
inc
cmp
rcrb
fld
lret
add
lods
mov
loop
cmc
dec
idiv
out
pusha
push
sti
stos
mov
push
not
int3
sbb
aaa
in
popf
stos
mov
ss
mov
inc
ss
movsb
popf
das
pop
xchg
pop
scas
jnp
cli
rol
cmp
adc
roll
lea
cmpsb
aaa
mov
cmp
and
dec
insb
enter
fwait
xchg
shrb
jmp
loope
jbe
pop
data16
and
push
in
mov
mov
cmpsb
test
les
xor
sub
mov
call
adc
mov
sub
sbb
sti
xor
test
cmp
loope
stos
xor
adcl
movsl
add
adc
cmp
loopne
push
andl
bound
or
sbb
cltd
xor
mov
imul
mov
out
movsb
int
or
push
cmpb
adc
ds
fucomp
xor
add
ja
shll
mov
inc
inc
lea
push
cmp
cltd
jae
sbb
and
lods
mov
inc
push
shll
popf
adc
mov
or
popf
sub
test
jae
push
xor
inc
loop
and
add
mov
adc
or
lahf
repnz
add
or
xchg
or
inc
push
adc
pop
loop
inc
add
ljmp
mov
loope
aaa
in
fnstcw
cmp
sub
lcall
xor
jne
adc
cmp
xor
sbb
insb
test
sub
outsb
adc
add
cs
dec
loop
fisubs
mov
mov
sub
sub
xorl
aad
jno
or
jbe
loopne
clc
xor
mov
fcomps
push
cmc
int
je
adc
subb
loop
adc
outsl
xchg
mov
jae
mov
or
mov
sti
cwtl
std
xchg
inc
xlat
lods
mov
rol
sti
shll
out
sub
in
pop
inc
cltd
jge
int
push
shlb
enter
popf
inc
outsb
adc
jl
xor
mov
adc
add
test
mov
ret
sub
outsl
int
mov
rorb
inc
jmp
subb
mov
lcall
xor
mov
dec
test
adcl
inc
scas
or
fdivs
sbb
push
lods
shrb
and
and
or
push
or
ret
test
inc
inc
cltd
gs
adc
xor
fnsave
pop
mov
mov
or
mov
js
and
xor
test
adc
mov
repz
pop
cltd
stos
adc
test
repz
xlat
pop
jp
jp
dec
mov
push
lods
inc
sti
int
xor
xor
mov
sbb
aas
sti
xchg
scas
enter
xor
adc
xchg
ret
lret
imull
shlb
inc
test
pop
cmp
cmp
mov
stc
scas
hlt
inc
sub
cmc
jge
push
mov
loop
sub
sub
xchg
ret
lret
jb
scas
jo
push
inc
pop
or
aam
sbb
pushf
inc
push
push
mov
jmp
mov
jae
ja
push
xchg
daa
and
or
cmpsl
fisubrs
enter
adc
scas
arpl
pop
xchg
lcall
aad
mov
push
xor
nop
push
shlb
scas
mov
mov
jg
shlb
dec
sbb
inc
sahf
dec
mov
repz
mov
fwait
jmp
add
imull
cmc
lods
or
js
sarl
mov
pop
or
mov
rol
inc
es
idivl
addr16
or
mov
sub
mov
and
jg
enter
and
mov
and
push
mov
inc
in
in
popf
mov
scas
lcall
fstcw
inc
sub
pop
aas
jno
mov
test
faddl
lods
lcall
pusha
sub
inc
push
dec
arpl
mov
in
push
add
push
pop
call
loope
out
mov
adc
xchg
fwait
cwtl
cmpsb
mov
and
mov
mov
adc
pop
xchg
insb
inc
fidivrs
xor
je
inc
add
dec
push
das
call
scas
std
mov
bound
jl
lret
in
dec
pop
loop
sbb
subb
or
pop
js
or
mov
clc
cli
mov
sub
aas
or
sub
dec
jmp
leave
inc
ja
addr16
mov
xchg
jne
push
jecxz
mov
fadds
xor
sarl
sub
add
cltd
dec
adc
or
gs
and
push
ret
lea
loopne
adc
cs
sub
jns
mov
or
dec
inc
push
mov
test
cltd
test
jmp
sub
sbb
repnz
pop
adc
addl
mov
aas
and
sub
sub
and
sub
jge
and
mov
xor
aad
mov
outsl
and
adc
es
addr16
stos
popl
push
lods
dec
push
jmp
ljmp
int3
xor
mov
sbb
into
push
lret
sub
add
inc
xchg
loopne
adc
pop
inc
cmp
adc
mov
out
leave
cmp
popf
sub
push
les
fisttpl
push
je
shrd
jg
sarb
rcrl
les
mov
jmp
inc
call
flds
fildl
icebp
add
or
or
out
gs
add
jae
mov
lock
popa
rorb
andb
jl
push
in
loopne
daa
mov
in
fdivr
popa
into
mov
orl
mov
mov
mov
or
out
add
inc
jecxz
inc
roll
pop
into
mov
mov
mov
aas
mov
xor
lcall
cmp
repz
add
adc
ds
and
or
int
or
movsb
outsl
pop
mov
and
out
push
jae
popf
jg
mov
imul
mov
jne
imul
or
cwtl
popl
adc
cs
add
gs
xor
and
decb
rorl
scas
mov
mov
notl
xchg
pop
test
jg
test
mov
lcall
and
or
pop
pop
dec
lea
or
dec
and
les
mov
and
jge
add
int
or
std
aaa
insl
cwtl
aas
sti
js
popa
loope
adc
jns
sub
mov
rcll
mov
sbb
ss
pop
mov
test
mov
andl
cmp
adc
fdivrl
rcll
mov
test
testl
inc
call
sub
je
cltd
in
cmp
loopne
dec
cmpsb
orl
movsb
xchg
and
push
repnz
repz
scas
adc
lods
pop
imul
jb
mov
in
xor
movsb
in
cmp
rcrl
faddl
xchg
test
fwait
call
xchg
mov
test
ret
leave
sbb
int
xchg
jmp
jl
inc
jnp
nop/reserved
popf
rorb
lahf
rorl
mov
test
lock
mov
pushl
jnp
or
imul
xor
rolb
movsb
stc
push
pop
lcall
pop
sub
movsb
dec
rorl
jne
sbb
push
push
xor
jnp
scas
test
in
push
cltd
mov
nop
dec
arpl
inc
and
lods
in
adc
addr16
shll
lret
mov
mov
subb
mov
dec
sahf
jb
cltd
addl
insl
leave
sub
mov
sbb
mov
pop
cmpb
cmp
xor
shrl
push
lods
dec
or
mov
sub
xchg
mov
divb
mov
fsubr
sub
pusha
push
jg
add
or
clc
xchg
scas
and
jge
xor
dec
ffree
inc
xchg
cltd
adc
and
loop
sbb
je
adc
out
shrb
dec
std
or
add
or
rcrl
popa
cmp
push
or
loopne
pusha
sarb
add
mov
loop
mov
inc
adcl
xchg
in
jp
mov
cmp
jl
or
push
mov
add
insb
out
jbe
sbb
fldenv
rclb
mov
inc
popa
lea
orb
faddl
sub
sub
lahf
sbb
daa
arpl
int
mov
jae
mov
sbb
jo
imul
or
aad
jp
pop
cmpsl
xor
dec
and
add
xchg
mov
sbb
scas
mov
inc
or
ja
dec
cmp
xchg
jg
sub
mov
push
or
push
jl
sub
or
xchg
fmul
push
lods
mov
subl
lods
jecxz
fcmovnb
iret
push
inc
bound
xor
lcall
lcall
aas
addr16
jb
ret
stc
xchg
hlt
js
sbb
cli
pop
lret
dec
pop
iret
sahf
xor
ds
movsb
mov
jbe
rorb
lahf
ds
lcall
cld
push
popf
fsubl
mov
loop
mov
or
adc
mov
aaa
cmc
js
les
fstpl
jo
shll
aas
push
push
adc
xor
ljmp
xchg
mov
out
sub
xchg
mov
push
xchg
rorl
sbb
add
cmp
divb
sub
pop
mov
fs
push
ljmp
std
dec
xchg
dec
sbb
mov
fadds
je
imul
movl
inc
push
repz
cltd
xchg
ret
or
xor
dec
ds
fsts
andb
mov
sbb
nop
xlat
test
push
sbb
lret
sbb
mov
hlt
dec
pop
cmpl
pop
jo
dec
lahf
mov
js
iret
push
popf
test
push
jns
xchg
sub
xchg
pop
pop
lret
ljmp
mov
adc
pop
and
scas
mov
cmp
lret
mov
loop
mov
dec
out
pusha
scas
mov
ds
stos
cmp
sbb
int
mov
inc
lds
inc
jp
sbb
cwtl
test
inc
cwtl
push
je
mov
jns
pusha
xchg
scas
test
push
or
pop
adc
adc
test
out
jo
bound
cvtps2pi
sbbl
movsl
scas
push
pop
scas
movsl
test
repz
inc
pop
inc
test
and
dec
xor
and
jmp
or
jo
scas
mov
and
sar
bound
mov
int3
out
repz
pop
pop
aaa
add
adc
test
push
vcvtss2sd
mov
jp
mov
xchg
ficoms
cmc
xchg
pop
jmp
mov
cs
sub
into
push
arpl
mov
inc
loopne
cmp
dec
fisubl
mov
pop
imul
leave
test
or
out
pop
aas
dec
pop
or
js
add
inc
or
jbe
jbe
mov
pop
test
cmp
fsubp
inc
rorl
hlt
and
xor
dec
mov
les
push
pop
inc
iret
in
pushw
cmp
mov
mov
add
lods
inc
xor
cld
sti
loopne
jp
and
xchg
jo
or
das
test
xor
out
sbb
xchg
insb
add
inc
sbb
push
ds
xor
out
jmp
mov
inc
ret
and
mov
loopne
outsb
xchg
jg
mov
cmp
cmpl
bound
lcall
sub
xor
fs
out
or
xchg
pusha
scas
aad
std
imul
xlat
ja
xchg
sbb
or
ret
jl
pusha
ret
jge
dec
repz
sbb
outsb
mov
xchg
mov
nop
inc
ljmp
cli
jg
scas
cmp
xor
fstpl
out
dec
cmc
or
aad
movsl
adc
cmp
xchg
push
or
je
inc
inc
adc
cld
dec
dec
mov
cmp
addr16
cmp
lds
lret
pop
imul
test
popf
sub
repnz
sarb
iret
pushf
push
cmp
arpl
loopne
dec
out
mov
cmp
mov
inc
xchg
push
or
lds
jle
or
in
fwait
loopne
outsb
pop
ss
sbb
sbb
rorb
add
dec
push
nop
cltd
push
loope
mov
inc
scas
and
push
ffreep
fwait
jmp
es
add
mov
sahf
add
push
inc
xlat
mov
cmp
and
mov
mov
test
sub
mov
shr
aas
std
pop
sbb
jp
imul
mov
negb
sahf
push
sbb
cld
sub
or
adc
gs
cltd
ljmp
test
lret
cltd
lcall
adc
xchg
aas
stc
mov
inc
popl
xchg
pop
xor
sbb
pop
mov
inc
jne
insb
xchg
imul
adc
daa
dec
lods
ds
xchg
dec
mov
push
xchg
rcll
xchg
leave
mov
add
mov
pop
pushf
shl
orb
fldenv
xchg
xor
in
and
mov
pop
fldl
adc
sbb
xor
aad
sub
xchg
xor
out
xor
push
scas
insl
dec
mov
aam
lahf
and
out
pop
cmp
inc
push
in
mov
cmp
and
push
or
xchg
in
dec
xlat
bound
sbb
sbb
pushf
iret
lods
addr16
lock
divl
push
adc
adc
push
pop
add
fsubs
insb
lahf
inc
aad
shlb
mov
into
pop
pop
jge
sahf
lods
aaa
cld
adc
dec
hlt
inc
dec
pop
add
pusha
lret
arpl
lods
sub
aas
pop
aam
hlt
mov
mov
scas
push
adc
es
inc
adc
inc
lock
rcrl
lods
mov
pop
in
loopne
adc
mov
jnp
add
sub
pop
xchg
or
push
jp
lret
push
sbb
into
scas
lds
cld
movsl
outsl
jb
fbstp
fcoml
outsl
mov
lods
cmp
xorl
or
ror
and
or
xchg
cmp
out
cmp
pop
adc
in
out
add
aas
sti
add
pop
pop
ja
dec
or
repz
andl
adc
bnd
cmpsl
call
mov
dec
loopne
sahf
popf
divl
in
push
adc
mov
aam
mull
jmp
push
jp
lock
and
das
jae
pop
inc
out
imul
push
int3
out
pop
or
jge
mov
mov
jg
out
push
push
out
in
fistpll
aaa
inc
inc
and
and
jl
mov
pop
les
ja
mov
addb
or
mulb
in
movsl
into
and
mov
mov
aad
loopne
adc
lods
fs
xchg
push
add
cmp
dec
pop
pushl
mov
jo
xchg
xchg
or
xchg
mov
shrb
out
cltd
dec
jp
leave
in
andl
ficomps
stos
and
aaa
fcmovbe
adc
inc
test
or
das
mov
and
outsb
mov
ja
mov
sbb
mov
or
push
in
pop
and
inc
jae
mov
push
das
push
ds
out
inc
mov
adc
sbb
sbb
cmp
dec
dec
stos
lods
jge
mov
cmp
fsubr
mov
mov
callw
clc
cmp
and
cmpsl
in
aad
add
mov
sbb
or
pop
mov
dec
ficoml
xor
mov
rolb
aas
mov
pop
popf
inc
cmpsl
std
out
cli
inc
pop
and
pop
mov
dec
lret
pushf
add
mov
daa
xchg
adc
jns
repnz
in
sahf
call
outsb
push
gs
fwait
mov
vcvtss2sd
mov
adc
js
lcall
and
pusha
outsl
pop
xchg
ja
insl
push
insb
xchg
inc
adc
pop
sub
xchg
push
loop
adc
sub
push
sub
mov
sti
bound
cli
push
rorl
enter
sbb
and
mov
jmp
call
daa
mov
mov
lock
cmpsl
lret
movsl
pusha
jb
lahf
xchg
push
scas
inc
ljmp
push
int
jnp
cmpsl
inc
mov
idivb
int
test
add
push
mov
out
ret
mov
cwtl
nop
pop
lods
fiadds
mov
insl
jl
push
mov
dec
movsb
sub
inc
hlt
mov
into
push
inc
push
aaa
ret
sti
inc
push
dec
pop
pop
adc
adc
fsubrl
xor
mov
sub
push
sbb
out
mov
loop
mov
outsb
xchg
or
pusha
and
leave
cmp
lahf
aas
jns
cmp
xor
or
add
adc
stos
ja
pop
or
outsb
ljmp
or
xchg
in
movsl
fildl
pop
pop
icebp
push
lods
sti
mov
sahf
push
mov
fwait
leave
bound
jmp
mov
sub
cmp
mov
je
sub
and
cmp
mov
xchg
notb
jno
lret
mov
push
ja
das
jl
pop
cmc
adc
out
lcall
or
stos
fsubrl
in
ret
xchg
pop
stos
in
shll
or
cmc
shrl
out
mov
gs
rep
in
int
cs
pop
cwtl
mov
jg
ret
adc
add
cmpsl
lret
std
iret
lods
aas
push
sahf
leave
movsb
mov
enter
and
loop
add
inc
fadd
dec
jp
lret
xor
cmc
outsl
notl
mov
mov
aas
pop
dec
inc
ret
fadd
leave
xlat
pop
mov
lret
fistps
mov
xchg
pop
xlat
loope
shrl
lods
xchg
fisubl
dec
mov
fstpt
dec
jns
rorb
shll
ljmp
xchg
test
popf
or
outsl
push
cmp
out
icebp
inc
pushf
ret
jecxz
dec
ss
bound
pop
sub
and
addb
nop
cmpsl
mov
cmp
cmpsl
call
pusha
loop
aam
dec
mov
fs
dec
call
sub
fiadds
mov
push
jge
xor
cmp
pop
imul
iret
cmc
adc
lock
repnz
add
push
or
rcr
je
fistpl
out
js
repz
fwait
inc
cltd
nop
cld
lods
mov
pop
cltd
mov
add
shlb
mov
leave
lret
nop
and
out
sub
and
cltd
imul
dec
je
ds
int3
test
or
dec
jno
arpl
cmp
aas
adc
mov
stos
cmpsb
pop
out
rcrl
cmp
dec
sbb
out
imul
jmp
scas
adc
push
jo
sbb
lods
push
xchg
adc
in
jae
mov
in
mov
cltd
in
inc
ds
lds
jecxz
inc
rcrl
mov
dec
lea
jle
or
dec
sahf
testb
inc
or
push
shrb
scas
ja
xor
aaa
adc
daa
scas
or
and
xchg
ret
ret
inc
jno
ss
cwtl
or
stos
call
addr16
shl
test
popa
push
jp
push
ficomps
lret
inc
xor
xchg
lret
add
push
xchg
mov
ss
adc
xor
fistpll
mov
lock
adc
notb
mov
push
imul
mov
lret
push
xchg
loop
and
mov
sub
xchg
andb
or
pop
sub
out
int
icebp
icebp
jl
inc
jle
or
aam
mov
jge
stos
mov
jne
test
divl
in
lds
inc
and
adc
movsl
test
sbb
shlb
add
js
inc
jmp
leave
popf
push
mov
inc
punpcklbw
cmp
mov
imul
repnz
and
inc
xor
clc
jmp
mov
xchg
cmp
sbb
inc
lret
pop
add
xchg
adc
push
popa
ja
mov
push
mov
jnp
aas
cmc
jg
pop
sub
mov
mov
mov
ja
mov
mov
sar
and
jo
xor
ds
test
stos
rcrl
rcll
and
in
jp
dec
and
ss
arpl
push
gs
mov
ds
and
scas
int
cmp
pop
loopne
sbb
cmp
ret
mov
lret
scas
inc
or
sbb
sbb
mov
negl
int3
stc
cmp
cmp
outsb
cmp
push
repnz
fstps
dec
addr16
push
or
rorl
xlat
ljmp
shrb
cmp
popf
mov
insl
and
pop
es
fstpl
adc
mov
sbb
fldl
movsb
jns
jmp
xor
inc
scas
test
mov
adc
add
les
movsl
fwait
ja
dec
loope
imul
popa
cmp
add
test
mov
jbe
push
loopne
lcall
cld
sub
repz
int3
add
sahf
pop
or
pop
aaa
lret
mov
and
loopne
std
mov
xor
scas
fcmove
inc
movsl
mov
add
test
xchg
cli
xor
xor
bound
pop
fidivrs
aam
pop
mov
pop
insl
cli
outsb
imul
inc
in
in
cmpsl
pop
mov
sub
cmpb
stos
push
xlat
pop
mov
sub
cmp
pop
cld
mov
lods
jae
dec
int3
lret
adc
insb
push
cmp
add
sbb
insb
inc
out
dec
into
sub
cs
int3
repz
add
jne
addl
pop
xorb
outsl
stos
ljmp
xchg
mov
mov
xchg
addps
xlat
sahf
fwait
and
mov
push
enter
ret
add
mov
jae
add
add
std
mov
lds
and
dec
mov
call
xor
cmp
ret
jnp
mov
pop
pop
adc
popf
sti
pop
ret
leave
sti
xchg
arpl
cmp
fsubrs
mov
mov
pop
ljmp
push
pop
sarl
xor
dec
jno
mov
mov
out
cmpl
pop
arpl
inc
sub
add
pop
shlb
xor
lahf
das
add
test
iret
es
sbb
mov
lock
mov
xlat
inc
sub
or
xchg
add
aas
or
lcall
mov
push
pop
out
jo
arpl
xchg
inc
int3
cmpsb
cmp
movsb
xchg
addl
mov
sub
cmp
sbb
les
pop
xor
push
lret
adc
scas
xchg
sbb
mov
fs
and
fidivrl
cmp
imul
dec
nop
or
adc
mov
test
test
adc
popf
pop
cmc
jae
bound
mov
pop
fs
stos
push
test
adc
cld
dec
xor
loop
cmp
out
cmp
pop
xlat
cmp
sbb
movsb
insl
cwtl
pushf
cmp
cmpsl
leave
mov
cmp
lock
aam
inc
and
inc
mov
xchg
jae
orb
pop
dec
jmp
das
inc
mov
mov
xlat
push
addl
push
or
iret
jecxz
push
cmp
push
adc
inc
inc
fldl
sub
jl
inc
rol
mov
scas
scas
push
insw
mov
xchg
adcb
push
jmp
add
in
push
xchg
dec
insb
dec
jle
cmc
cmp
aam
adc
and
leave
mov
or
sbb
shlb
xlat
add
dec
arpl
jae
cld
inc
jb
test
jecxz
fxch
lods
add
movsl
cld
inc
mov
add
push
dec
repnz
mov
das
in
clc
inc
mov
ds
xor
xchg
in
int3
jo
pop
shl
pop
mov
frstor
inc
ja
cmp
push
gs
sbb
pop
shl
insl
fbstp
xchg
pop
aad
inc
pop
dec
mov
adc
ficoml
fstps
adc
lds
sbb
test
stos
inc
shll
sbb
push
cmp
cmp
or
fidivl
mov
xchg
mov
and
xor
rcrb
jg
lahf
pop
cmp
mov
loopne
inc
mov
movb
jle
pop
push
adc
mov
frstor
int3
imul
push
xor
dec
nop
in
jnp
andb
pop
xor
popa
push
outsl
popa
std
pop
push
sub
add
imul
cltd
jae
lods
dec
insl
aas
ja
cmp
adc
rcl
outsl
mov
mov
addb
push
andl
or
lret
push
xor
pop
inc
adc
sbb
inc
pop
push
pop
mov
es
mov
addl
decb
sub
dec
fdivrl
push
andb
dec
pop
ret
xor
pop
test
ret
nop
jne
push
pop
mov
mov
cmc
inc
in
imul
push
imul
mov
sbb
sarl
lods
fs
add
cltd
mov
pusha
clc
pop
iret
push
xchg
pop
out
add
addr16
lods
cmp
fdivrs
and
pop
lcall
lock
dec
cmpsl
or
rorl
pop
lahf
adc
lret
mov
or
cmp
xchg
mov
clc
fisttpl
sub
lods
mov
test
mov
jecxz
filds
jb
push
jmp
outsl
add
imul
xor
fst
lret
pusha
jl
inc
pop
movsb
sub
outsb
orb
inc
scas
repnz
aaa
test
push
add
dec
stos
pop
iret
jmp
enter
push
inc
mov
and
push
addr16
jge
addr16
into
ljmp
pop
int3
dec
sahf
and
push
cmp
stos
sbb
inc
cmpsb
mov
popf
es
movsb
mov
mov
cmp
shll
fst
inc
sbb
int3
addr16
int3
ret
jne
cli
jno
inc
jne
aad
inc
add
loop
jecxz
xor
test
aam
mov
dec
push
into
pop
cwtl
lea
mov
imul
or
aad
pop
jmp
or
test
pop
aad
push
imul
cmp
mov
pop
xchg
imul
cld
sub
leave
mov
mov
dec
mov
aam
pop
ljmp
push
sbb
add
xor
mov
je
in
pusha
cmc
fcompl
add
ss
mov
mov
cmp
cmp
icebp
orb
in
cmp
daa
imul
lock
fwait
push
pusha
jp
sbb
sub
add
mov
shlb
outsb
rcr
jo
xchg
push
test
repz
cwtl
fdiv
lods
jns
test
imulb
movsb
xchg
xor
pushf
iret
inc
jae
jo
or
xchg
lcall
push
rcrb
test
dec
xchg
loop
or
rcrb
cmp
xchg
mov
pop
mov
in
jb
xchg
pop
aaa
scas
int3
and
out
xchg
rcrl
jmp
jmp
loopne
xchg
cmpsl
inc
fnstcw
push
cmpl
cs
push
pop
ljmp
sbb
pushf
rcr
xor
add
mov
and
test
stos
ss
xchg
inc
rcll
repz
fstpl
xor
and
daa
lds
pop
mov
ss
push
jns
aas
dec
xchg
jmp
iret
lret
clc
sbb
adc
cld
arpl
ret
cmp
loop
mov
dec
sub
inc
cmp
iret
push
xchg
xor
cld
pop
filds
lods
aam
lcall
shlb
jmp
ljmp
fs
outsl
push
sub
xchg
push
inc
ss
subb
add
dec
ja
sub
fisubl
loopne
cmp
push
fcmovne
push
pop
mov
sub
add
ljmp
inc
jecxz
adc
mov
cmp
ret
popa
rorl
data16
add
and
ja
arpl
fsts
daa
xor
or
and
mov
ror
and
popf
fnstenv
sbb
call
xchg
in
mov
negb
pop
pop
iret
outsl
mov
xlat
ss
arpl
mov
in
pop
mov
and
add
incl
rclb
mov
lret
insl
xchg
adc
call
mov
inc
sbb
jge
js
push
in
mov
mov
hlt
fcoml
rcrl
and
data16
push
xor
andw
jnp
ret
imul
mov
pop
dec
pop
mov
sbb
jmp
out
stc
pop
or
movsb
pop
sahf
roll
into
in
inc
nop
cmc
xor
cltd
loop
aad
mov
adc
jp
adc
stos
push
icebp
cmp
mov
roll
xor
pop
jecxz
divb
push
inc
sub
into
js
jp
test
cmp
ja
sbb
and
and
xor
sub
xchg
shl
or
mov
cmovl
adc
xchg
std
and
mov
sub
dec
call
pop
xchg
insl
mov
cmpsl
xor
outsb
jb
test
scas
mov
enter
in
jp
jl
jl
in
mov
repz
sarl
or
mov
dec
notl
mov
pushf
mov
js
jbe
roll
jnp
pop
stos
and
inc
mov
xchg
data16
jns
movsb
mov
rorl
cmp
cmp
inc
sbb
or
int3
adc
js
jecxz
shrl
shr
jb
pop
stc
lods
shl
cmp
mov
lods
sbb
ljmp
jbe
loopne
insl
xchg
mov
out
ret
sbb
addr16
insb
shrb
movsb
lcall
lods
in
push
inc
sbb
mov
lahf
lock
test
sub
push
push
push
pop
add
sub
repnz
inc
xor
mov
imull
jbe
mov
and
popf
sarb
out
cld
pop
clc
push
xorb
sub
lods
or
mov
xor
cmp
out
mov
test
dec
fidivrl
push
cltd
xadd
mov
movsb
mov
out
xor
fistps
jge
icebp
rcl
fnsave
fcmovne
lock
icebp
subl
add
dec
repz
mov
out
xchg
jns
jg
in
jns
pop
aaa
or
and
cmpl
cmp
sbb
enter
ds
fistpl
out
lock
cld
shll
mov
dec
leave
cmp
push
or
test
movsl
imul
out
ret
subb
or
and
push
jae
jne
iret
xchg
lcall
adc
lret
cmc
fnstenv
leave
add
scas
js
jmp
and
adc
lret
dec
std
in
cmc
daa
cld
push
cmp
std
cmpsb
lcall
sarb
enter
das
mov
jb
pop
dec
lcall
rolb
into
notl
push
sbb
mov
daa
adc
fldcw
sub
fisttpll
pop
mov
add
push
cmp
fadds
sar
push
iret
sub
add
lock
sahf
cmp
mov
mov
jnp
in
ret
lock
frstor
rcl
mov
push
sbb
shlb
cmp
loop
push
inc
jns
xchg
subl
jnp
rcrb
xor
add
dec
lret
xchg
xorb
add
les
jle
test
notl
data16
cmp
add
bound
mov
pop
mov
or
mov
flds
subb
and
je
cmpsl
std
dec
mov
scas
xchg
xor
mov
sbb
sbb
aaa
cmp
cld
in
mov
mov
test
jbe
mov
hlt
out
push
push
dec
aam
je
mov
push
sbb
cwtl
pop
fildll
adc
daa
lock
mov
addr16
pop
push
mov
andl
add
inc
in
mov
test
push
orb
mov
enter
mov
mov
jo
dec
jae
test
cmp
inc
cmp
xor
dec
jl
arpl
movsb
jecxz
insl
add
pop
nop
ret
or
lds
sub
in
lock
cmp
iret
cwtl
xlat
nop
mov
in
lods
mov
cli
jo
cmpsb
cwtl
pop
mov
mov
cmp
xchg
jp
mov
cmp
lds
mov
test
pop
aad
dec
fisttpl
push
cmpps
in
test
sbbb
fisubrl
repz
ficomps
adc
clc
iret
inc
or
stos
mov
mov
int3
fstpl
fiaddl
adc
mov
cwtl
outsb
cmp
cmp
loope
sbb
push
inc
mov
mov
and
mov
pusha
jnp
jnp
jp
lods
sbb
fs
in
add
mov
pop
xlat
push
pop
push
data16
arpl
or
mov
push
aam
insb
popf
daa
xchg
popa
adc
fnsave
xor
add
mov
mov
mov
mov
mov
out
jecxz
adc
lahf
in
xchg
in
pop
xor
jmp
push
mov
xchg
xlat
outsb
in
adc
jae
outsb
push
mov
xor
loop
mov
repz
nop
xchg
inc
outsb
sbb
pop
out
shrl
insb
or
adc
xor
imul
dec
pop
pop
pop
cltd
and
cs
mov
adc
jecxz
int
mov
and
into
cli
das
inc
jle
cli
push
mov
dec
stc
push
sti
out
addr16
lea
sub
jmp
lret
out
xchg
aas
test
aam
ss
mov
in
outsl
sub
sahf
xchg
or
lods
sub
and
jecxz
test
add
adc
test
std
adc
sbb
mov
imul
nop
cwtl
out
and
sbb
scas
sbb
adc
pop
lahf
push
xor
mov
mov
fwait
inc
ret
ret
cmpb
repz
pavgb
fwait
mov
xor
js
mov
push
aad
or
sbbb
icebp
mov
jl
or
lock
push
jmp
jmp
push
adc
sbb
rdtsc
sbbl
movsl
icebp
and
in
pop
enter
pop
mov
clc
inc
repz
fstps
sbb
enter
lahf
lds
push
inc
aam
loope
scas
mov
roll
not
sub
and
push
loop
sub
inc
sub
lock
out
gs
jnp
rcrb
stos
shlb
ret
aam
push
mov
or
enter
mov
aas
scas
cltd
cld
js
mov
cmpsl
sub
mov
push
and
mov
adc
mov
cmp
pushl
arpl
inc
shrb
cmp
push
cli
int3
shrb
fisubl
mov
icebp
dec
ss
movsbl
sbb
pop
shl
loopne
mov
dec
inc
std
xlat
shl
cmpsb
out
inc
movsb
add
inc
push
jge
jae
cmpsl
or
and
xor
in
push
lds
and
mov
jp
inc
ja
xchg
mov
push
xor
and
xchg
outsl
adc
cmc
imul
mov
sub
mov
sub
test
pop
sub
or
stc
push
mov
test
adc
je
iret
cmpps
adc
enter
xchg
ljmp
cmpsb
xor
xlat
pop
inc
push
cmp
cmc
inc
sahf
cltd
jns,pt
movsb
sahf
sub
pop
movsb
lahf
mov
mov
mov
andb
das
jmp
cmp
add
sub
iret
repnz
cltd
clc
inc
lcall
imul
dec
rorb
mov
insb
addr16
lods
out
mov
in
and
jge
pop
sarl
xchg
movsl
mov
jmp
mov
iret
sti
pushf
sub
adc
scas
repnz
add
lret
cltd
add
cmp
js
and
ljmp
in
jo
mov
arpl
dec
out
insl
inc
pushf
inc
mov
and
jbe
add
aad
aam
add
andl
push
sahf
mov
ss
add
sahf
andb
movl
and
jno
in
int
xchg
dec
sbb
sub
mov
popf
call
add
data16
outsb
inc
outsl
lods
dec
mov
and
xor
addl
pop
lock
sbb
push
into
in
or
or
shrl
lret
pop
mov
mov
enter
movsl
and
test
in
int
outsb
hlt
mov
inc
mov
xchg
dec
fmulp
dec
push
test
mov
push
in
repz
jp
fildl
incl
mov
sub
push
sub
dec
inc
mov
sbb
stc
mov
ret
sbb
cmpsb
lods
push
pop
insw
imul
cs
xchg
popa
sahf
and
xchg
jecxz
and
insb
test
bound
addb
test
jnp
adc
sarl
jg
aam
fistpl
xchg
icebp
inc
aaa
insl
push
mov
jmp
jmp
and
dec
sbb
out
cli
stc
inc
pop
dec
push
and
push
inc
pop
mov
inc
xchg
cltd
sub
out
sbb
int
mov
adc
popa
nop
test
cwtl
movsb
jae
jmp
mov
and
das
test
inc
lret
and
lret
push
or
cld
outsb
loope
aas
dec
rol
sbb
inc
push
push
lret
aad
stc
jne
cmp
sbb
cwtl
fsubr
xchg
cmp
cmp
inc
mov
aas
mov
sub
cmpsl
out
in
lods
jb
pusha
or
mov
idiv
mov
jb
adc
rclb
pop
call
shrl
pop
add
xor
dec
adc
cltd
addr16
ljmp
inc
jb
and
sub
xor
movsl
or
push
sub
push
popa
je
and
inc
xlat
mov
subl
pop
cmp
jnp
add
imul
mov
insl
or
stos
mov
xchg
scas
xchg
xchg
push
xchg
pushf
jl
aad
mov
inc
mov
jmp
in
aas
movsb
daa
push
mov
jnp
lods
xor
or
xchg
mov
popf
push
shl
sub
jp
xlat
sbb
xchg
ficompl
push
adc
repz
sub
mov
lds
fdiv
subl
inc
mov
dec
shrb
inc
loop
cmp
ficoml
xchg
fildl
stos
out
pop
rcrl
xchg
pushf
repnz
xchg
shrl
pop
mov
cmp
in
out
fs
inc
jp
sub
in
push
push
xor
loopne
mov
clc
adc
divl
cmp
ljmp
push
repz
pusha
dec
rolb
mov
mov
lret
cmc
xor
and
fs
and
rcll
or
jmp
lcall
and
adc
movsl
rorb
mov
in
fdivrs
jb
out
cmp
hlt
mov
je
sbb
inc
and
mov
push
pop
pop
add
mov
push
mov
cli
lcall
jae
in
sub
bnd
addr16
xorl
data16
push
xchg
mov
outsb
mov
int3
sbb
repnz
and
mov
les
pop
nop
in
in
int
stos
jmp
inc
sbb
pop
ljmpw
fcmovb
shll
mov
imul
mov
or
pop
hlt
fildl
mov
lea
or
sbb
cmpsb
mov
pop
pusha
fs
jle
add
pop
test
mov
es
pop
dec
xchg
sar
push
adc
jecxz
aad
lahf
jecxz
int
sub
jecxz
ljmp
push
sahf
in
repnz
push
adc
rcr
adc
inc
mov
mov
add
in
insb
inc
sbb
mov
inc
fildll
sbb
nop
imul
xorl
repz
inc
les
fsubrl
inc
bound
sbbl
add
mov
aaa
imul
dec
scas
xor
int3
add
push
jnp
repnz
nop
lods
subb
xchg
push
or
sub
jnp
jp
inc
sub
jns
ret
ret
fstl
fimull
push
inc
xor
sub
pop
and
sub
aas
fidivl
je
aad
jp
xor
mov
pusha
jns
push
lahf
stc
sahf
and
mov
scas
lods
mov
dec
popf
mov
mov
loop
jae
push
pop
das
rcrb
lock
jno
cs
and
xor
mov
or
or
dec
loop
cmpsb
movb
lret
rclb
lcall
aaa
lds
scas
dec
test
sub
push
fnstsw
pushf
out
adc
popf
divb
cs
pop
and
inc
or
pop
sbb
jno
pop
jecxz
jb
and
dec
enter
jb,pn
pop
movsl
xchg
cmp
sahf
mov
int3
mov
pop
sub
cmp
inc
sbb
in
movsl
dec
xchg
jl
in
mov
mov
mov
pop
push
adc
push
jae
adc
mov
imulb
daa
sbb
imul
mov
fdivs
mov
adc
xor
mov
cmpsl
outsl
sub
fs
das
adc
sub
pop
pop
insb
cmp
enter
das
jl
xchg
jg
imul
push
sahf
aad
fstl
xor
cs
aam
cmpsb
aad
adc
and
loope,pt
mov
lahf
xchg
dec
popf
lcall
mov
xor
popa
stos
std
ret
xor
adc
xor
and
icebp
test
popa
mov
ss
addr16
or
sbb
or
sbb
lea
mov
pop
stos
mov
rolb
ficomps
lcall
inc
popf
mov
int
stc
jne
xchg
mov
stos
cs
in
cmpsb
bound
lea
dec
ss
popa
out
mov
xor
dec
mov
leave
stc
imul
inc
sbb
cwtl
stos
mov
xchg
add
bound
xchg
rcl
cld
lds
jae
dec
fistpll
out
jbe
ret
fdiv
push
adcb
jmp
call
pop
lds
jo
sbb
lock
shll
cwtl
das
and
stos
bound
int3
jb
xor
roll
daa
call
rorl
xchg
jo
jne
rorb
mov
jmp
cmpsb
sub
sbb
sub
jno
js
mov
inc
dec
cmc
mov
jne
push
popf
xchg
add
xchg
jno
cld
cmp
push
mov
jne
mov
dec
cli
push
insl
movsb
xchg
aas
and
xchg
xor
jno
jns
daa
add
inc
push
mov
inc
sub
insl
add
test
outsb
insl
xchg
in
ja
push
stos
jp
je
mov
add
out
lahf
push
rcl
jl
push
cmc
or
cmc
int
out
pushl
mov
dec
mov
adc
cmp
adcb
addr16
pop
jp
stos
arpl
outsl
xor
shrb
das
mov
xchg
fabs
jmp
sbb
inc
xchg
sub
xor
loopne
pop
cmp
fistl
dec
mov
stc
dec
push
pop
push
push
outsl
dec
inc
lock
cmp
push
sarb
gs
out
outsb
dec
daa
icebp
in
sbb
out
pop
cmpsl
mov
jmp
add
sub
jp
daa
push
es
mov
cmp
inc
call
daa
in
and
mov
or
jnp
pop
sbb
cmp
mov
push
cmpb
xor
push
add
enter
jo
testl
dec
sbb
xor
cmp
call
das
movups
push
lods
dec
pop
and
bound
inc
sti
mov
jne
dec
xchg
in
pop
loopne
es
aas
push
sbb
mov
xchg
cld
iret
insb
fs
fstpl
sti
test
or
sub
jl
jno
push
sbb
jmp
subb
pop
pop
add
jb
popf
ljmp
jnp
pop
test
inc
xor
cmp
push
bound
ret
out
test
jl
push
adc
xchg
fiaddl
jae
in
iret
mov
inc
and
rclb
mov
xchg
leave
incb
inc
mov
push
xor
sbb
enter
lock
daa
stc
or
dec
daa
ss
mov
addr16
dec
dec
mov
mov
inc
pop
divl
add
cmc
test
addr16
pop
clc
mov
lcall
bound
mov
jp
cmpsl
sbb
pop
pop
das
data16
cmc
fiadds
add
arpl
sbb
out
scas
sub
sbb
inc
rorl
hlt
stos
out
das
bnd
adc
push
je
cmc
stc
mov
inc
xor
sar
sub
fsubp
and
sub
add
rclb
push
aam
xchg
sarb
movsl
lea
addr16
mov
sbb
push
push
test
adc
fmul
lret
inc
sbb
adc
sub
dec
das
ret
jle
dec
shl
shlb
xchg
cld
shl
sahf
fnstsw
pop
insl
or
in
ret
ljmp
push
rolb
xor
cmp
test
test
bsf
faddl
mov
lods
sub
imul
lret
or
xchg
popf
ret
sbb
push
nop
jne
mov
cmp
mov
jecxz
xchg
mov
jl
dec
push
inc
jmp
xor
xchg
pusha
jbe
mov
inc
daa
mov
scas
push
in
push
pop
sbb
imull
outsl
or
and
mov
mov
sarb
push
dec
xchg
mov
jl
pop
cmc
jns
sbb
inc
xchg
push
cmpb
in
sub
leave
lcall
adc
jle
push
add
out
xlat
clc
sahf
ss
daa
sub
outsl
lahf
inc
sub
aaa
jmp
insl
jp
js
jg
xlat
fwait
dec
roll
pop
cli
mov
xchg
das
add
movsl
jbe
idivl
lds
je
adc
ss
sub
mov
lret
repz
fdivl
xlat
mov
lock
or
push
mov
and
cmp
pop
pop
pop
out
mov
aam
cmpsl
cmpsl
movl
neg
bswap
pop
cwtl
cmp
lahf
repnz
sbb
cwtl
push
rcrb
mov
push
push
mov
je
jecxz
scas
and
lea
test
lock
add
xchg
jno
pop
cmp
add
das
inc
and
imul
xor
cmp
xchg
add
xchg
cmp
lods
pop
stc
fnsave
xchg
and
lock
cli
jnp
mov
sub
adc
or
mov
jnp
xchg
mov
ljmp
add
test
pop
sub
pop
fdivs
add
xchg
es
jne
fdivs
ja
add
sbb
add
enter
movsl
push
push
pop
add
lods
jle
adc
rcrb
dec
out
dec
xor
inc
xor
sbb
push
adc
pop
cli
add
test
pop
stos
jbe
imul
test
inc
jmp
or
cmp
out
dec
mov
cmp
in
dec
xchg
push
xchg
aas
imul
pop
mov
rclb
push
cmp
inc
mov
mov
addr16
cmp
mov
add
xor
jp
jns
push
cld
sub
aaa
sbb
ficomps
lret
xor
cld
sbb
push
mov
and
sahf
dec
mov
or
insl
mov
xchg
sub
lahf
mov
sub
sub
fwait
in
lods
inc
lea
notb
push
gs
and
jmp
fwait
jmp
loop
lea
je
loop
scas
mov
addr16
xor
pushf
or
xor
clc
sbb
jnp
inc
jno
inc
leave
sbb
push
inc
sbbb
jmp
xchg
adc
jl
xor
mov
push
sbbb
adc
lret
cmp
mov
notl
lods
js
jp
jg
xchg
or
cmp
xchg
push
push
ja
sub
jns
cmpsl
cmc
inc
lock
cmp
cmc
scas
loop
int
dec
mov
xor
clc
dec
cmp
ljmp
dec
push
rcrl
mov
xlat
lods
addr16
ljmp
test
loope
int3
cmp
stos
inc
ror
xorb
arpl
mov
add
and
rorl
es
testb
mov
cmpsb
shll
rcr
sbb
push
cld
push
mov
pop
and
test
jp
mov
inc
jo
cmpsl
pop
fcoml
call
rolb
sub
sub
jp
bound
mov
insl
dec
adc
inc
adc
sub
call
mov
jno
push
test
mov
xor
xchg
divb
sbb
mov
lock
mov
popf
fcmovnbe
negb
test
xor
das
push
or
inc
add
arpl
sub
out
sbb
sti
push
push
cld
push
test
in
arpl
orb
inc
in
sub
xor
mov
pop
cmp
imul
pusha
sti
pop
mov
es
jecxz
pushf
sar
loope
js
sbbb
sar
mov
jge
int
mov
add
movsb
mov
in
mov
popl
cld
dec
and
jno
fdivrs
rorl
jp
jecxz
cwtl
sbb
mov
cmpb
fildll
sbb
adc
jge
and
decb
and
and
inc
mov
aad
sti
mov
sub
aam
das
int3
fdivp
dec
mov
cld
inc
shrl
dec
shl
loope
push
jae
push
lahf
out
mov
mov
outsl
and
push
stc
pusha
popa
lahf
test
hlt
sti
clc
or
mov
push
cmp
out
test
add
push
fwait
lret
sbb
adc
mov
shrb
cs
cmp
pop
add
mov
insl
std
stc
daa
mov
call
adc
mov
inc
mov
jmp
imul
lret
std
jl
daa
sti
ret
cli
outsb
push
dec
pusha
aaa
dec
xor
nop
cmpsl
xchg
xchg
lock
xchg
cld
add
add
js
fists
add
cltd
push
fcompl
out
xor
fucomp
push
cli
mov
sub
inc
cmpb
jno
jl
mov
in
out
cmpsb
or
cmp
and
call
fidivrs
xchg
imul
in
cmp
jge
sti
out
das
push
push
out
sbb
pop
fmuls
in
loopne
out
dec
mov
mov
repz
test
push
jo
std
popf
jg
adc
xor
cmp
pop
cmpsl
inc
lahf
pop
push
sbb
lea
aad
mov
imul
push
ret
or
out
cmp
call
test
push
xchg
or
cmpsb
jl
test
mov
loopne
js
push
pop
mov
outsb
fdivrl
xchg
in
call
lods
mov
fidivs
outsl
in
cmp
add
mov
int3
ja
negb
test
add
mov
push
cmp
test
jae
add
cmpl
and
lods
xchg
pop
shrl
add
mov
fidivs
lods
xchg
push
jecxz
idivb
mov
xchg
nop
call
lret
cmp
sbb
mov
push
and
cmp
push
sbb
pop
data16
testl
nop
neg
jae
mov
cld
in
outsl
sub
jg
es
fs
dec
js
mov
dec
fstl
cmp
inc
out
or
ret
cmpsl
add
sti
sub
lock
mov
nop
jno
imull
lods
aaa
jnp
fisubrs
lcall
sti
cmpb
cmp
lods
les
pop
out
xchg
addb
sbb
or
ficoms
inc
popf
ficoml
outsl
lods
mov
fcompl
fstpt
push
cmc
lods
test
daa
addb
jge
push
imul
fidivs
xlat
and
stos
xchg
sbbb
lea
xor
xor
pusha
movsb
lahf
pop
in
mov
mov
pop
sahf
pop
or
fstps
flds
cs
adc
sbb
ret
sub
mov
xchg
ret
aad
sahf
stos
mov
push
test
call
xor
mov
test
push
ffreep
sub
shl
cwtl
lcall
pop
push
call
int3
adc
inc
pop
jne
jmp
ret
jbe
push
dec
sbb
mov
out
dec
fwait
sbb
adc
sub
std
gs
push
push
ret
mov
das
je
sbb
cmp
lcall
daa
movsb
mov
arpl
fstpt
or
push
jnp
hlt
sub
daa
push
in
aaa
mov
shrl
push
dec
in
dec
iret
mov
sti
and
dec
hlt
xor
pop
rorl
add
jo
or
test
jno
fiadds
cmc
add
sti
mov
out
xchg
mov
outsl
fisubs
jmp
ret
rorl
enter
repz
aam
scas
xchg
ja
cwtl
cmp
sub
fwait
mov
mull
inc
call
and
gs
dec
push
and
es
icebp
addr16
and
daa
mov
ret
ss
push
mov
out
ret
cmp
mov
sbb
inc
mov
lcall
lods
xchg
mov
push
xchg
addr16
sbb
pop
nop
sbb
or
lods
ret
ret
je
cmc
sub
out
adc
pop
inc
mov
xchg
cmp
sbb
faddp
addr16
stc
mov
inc
outsb
into
jmp
out
repz
in
xchg
cmpsb
stc
pop
inc
adc
fldenv
mov
add
rol
and
dec
jno
dec
or
outsl
out
fwait
iret
shrl
popa
push
ficompl
adc
mov
adc
xor
outsb
rcrb
lock
pushf
in
or
add
and
dec
jb
clc
xchg
xchg
dec
jecxz
inc
pop
mov
repnz
hlt
imul
fiaddl
jl
rclb
fcoms
xchg
sbb
pop
ljmpw
out
xchg
shlb
insl
mov
push
movsl
or
push
in
scas
xchg
push
jmp
cs
xchg
xchg
mov
ss
lock
add
fisubrl
sbb
fstp
xor
sub
lea
or
pushf
and
pop
nop
and
out
scas
push
cmpl
ja
jmp
push
mov
les
pslld
xchg
sub
test
out
jb
jns
pop
sub
xor
push
push
loopne
out
insl
in
lds
pop
push
adc
ljmp
insl
cmpsl
data16
lcall
cmp
sbb
movsb
push
xor
cmpsl
stos
test
push
cwtl
repz
orl
lahf
fnsave
insl
mov
mov
adc
add
pop
jne
xchg
inc
pop
mov
sub
mov
scas
pop
sahf
inc
xchg
sahf
cmpb
mov
sbbb
push
outsb
push
or
loope
mov
clc
mov
aaa
pop
cmp
mov
in
cmpsl
jne
ja
shrl
add
sub
ret
ret
mov
mov
mov
inc
add
hlt
repnz
popa
mov
aam
mov
jecxz
arpl
fldenv
hlt
mov
jb
filds
xchg
sub
cmp
mov
add
outsl
cmp
xchg
in
fldcw
sbb
pop
lock
mov
call
adc
into
add
xor
je
jae
sbb
ja
icebp
push
add
inc
fstpl
cld
jle
jns
mov
lock
out
inc
addr16
dec
jl
pop
scas
jns
mov
lret
imul
scas
add
cltd
jbe
inc
fstpl
pop
xchg
mov
jl
or
mov
dec
push
movsb
in
lret
jno
cli
jge
pop
push
fwait
xchg
or
out
test
mov
mov
imul
scas
insb
in
cmp
outsl
pop
aas
inc
pop
jno
sti
test
movsb
vpshufhw
aad
dec
sub
loop
aam
in
push
jp
mov
and
jle
push
mov
ljmp
sub
push
call
sub
xchg
fsubrl
into
adc
in
arpl
fistps
fsubrs
aam
mov
mov
dec
fsts
push
lret
fmuls
pop
cs
test
mov
mov
int
fwait
pop
je
mov
cwtl
push
popf
hlt
adc
ss
jl
add
push
lds
loop
push
pop
xor
xor
jmp
rclb
mov
xchg
jp
inc
daa
inc
stos
mov
outsl
push
mov
test
xor
pushf
dec
lods
inc
jo
add
adc
sub
mov
xor
push
cmp
loopne
sbb
ret
test
adc
cwtl
dec
mov
cmp
xor
fstpt
in
adc
cmc
and
fxch
test
scas
pushf
int3
pop
cwtl
pusha
call
inc
std
cld
add
pop
pushf
std
mov
push
insl
and
popf
rorb
das
jns
push
std
lahf
test
jmp
mov
pop
mov
mov
daa
hlt
fld
mov
sti
add
out
jle
adc
jbe
loope
push
jae
test
sahf
and
xor
xchg
inc
addr16
push
sti
mov
shll
sbb
pusha
enter
xor
mov
add
mov
mov
jae
adc
sbb
les
push
ss
or
dec
sarb
push
stos
mov
ror
fildl
sub
imull
cmpsb
gs
jnp
mov
xchg
push
in
and
jno
sub
addl
push
sub
xor
push
mov
push
decb
push
dec
jns
cmp
addb
pushf
test
jno
cmp
mov
fadds
mov
out
cld
int3
or
nop
cld
xchg
sub
jmp
inc
popf
cmp
aaa
and
repnz
popa
cmp
lods
xor
dec
pop
cmp
dec
adc
ret
in
test
or
cmp
push
jae
mov
adc
pushf
mov
std
sub
loopne
leave
xor
clc
mov
adc
mov
ljmp
arpl
mov
inc
xchg
movsb
pop
fisttpll
jg
lret
mov
imul
lds
scas
das
mov
movsb
dec
aad
sub
jg
xchg
adc
hlt
inc
mov
ja
nop
test
stos
pop
mov
push
repz
push
lret
add
in
cmp
pop
jge
mov
outsb
enter
ror
cmp
cld
jae
sub
push
sub
mov
xchg
in
jno
or
in
sub
jbe
cmp
push
and
hlt
mov
mov
icebp
popf
push
push
adc
pop
into
xlat
push
adc
leave
sub
mov
into
mov
aam
js
push
cmpsb
outsb
test
jmp
sbb
jo
mov
cwtl
cmp
test
mov
fucomip
sti
pop
xor
into
pop
test
pop
sbb
xchg
push
test
sub
xchg
mov
adc
jmp
arpl
insl
dec
pop
xor
stos
ret
push
jmp
loop
jae
dec
lcall
enter
xor
cmc
pop
orl
sbb
mov
cmp
sbb
mov
jnp
rorl
icebp
adc
add
xorl
push
push
orl
mov
jnp
lea
cmp
push
and
test
sbb
pop
inc
das
jmp
lock
mov
or
pop
or
sbbb
lods
ljmp
shr
jne
bound
andb
mov
pop
mov
jo
jle
pop
push
loop
add
sahf
outsb
pop
lret
and
rol
arpl
out
adc
mov
aas
fsubrs
dec
fstpt
repnz
mov
inc
imul
and
cmp
gs
js
xor
sti
jge
add
push
sbb
iret
jb
sbb
jmp
add
mov
adc
xchg
lods
pop
mov
xchg
negb
mov
jnp
jo
and
out
xor
cs
scas
push
sahf
jge
dec
xor
dec
and
sarl
or
subb
or
mov
cmp
inc
push
push
push
sbb
nop
fiadds
sbb
push
xor
std
repz
nop
loopne
call
scas
add
fwait
arpl
xchg
in
das
lcall
sarb
or
add
shl
fsubs
mov
aam
mov
insl
dec
jmp
arpl
scas
sub
cmp
aas
shl
xchg
push
sbb
je
insl
loop
subb
mov
push
enter
sub
mov
aad
jg
xor
incl
and
jae
loop
cli
jb
jmp
fisttpll
xchg
mov
sti
cmpsb
pop
enter
and
out
in
pop
mov
push
ljmp
push
sbbl
out
jge
in
fldt
xchg
jno
add
fidivs
cwtl
push
mov
push
xchg
mov
jp
sar
and
stos
cmc
ficomps
shl
xchg
inc
push
ja
pop
xor
test
push
fucomp
enter
dec
or
mov
loopne
sub
add
jmp
jecxz
repz
xchg
ds
jnp
popf
loope
dec
mov
dec
jmp
mov
add
mov
mov
out
cmp
ljmp
movsl
mov
and
push
popf
xchg
or
cs
mov
push
jmp
pusha
iret
sub
int3
mov
xor
ficomps
imul
addb
addr16
mov
aaa
xor
push
and
mov
pop
cmpsl
inc
jne
lds
add
sub
push
gs
jmp
jle
lea
test
test
pusha
pop
pop
fisttps
test
ret
jae
movsb
inc
clc
gs
push
insl
es
jmp
dec
xchg
mov
sbb
mov
xchg
mov
pop
push
stos
push
and
xor
insl
mov
jns
jbe
cmp
fsubl
mov
sub
test
scas
incb
flds
push
pushf
mov
and
rcrb
inc
call
inc
xlat
fs
enter
xchg
cmpb
lahf
jns
mov
dec
in
out
stos
out
mov
jae
xor
popa
mov
fs
lock
cmc
or
adcb
dec
fwait
mov
and
xor
aas
out
xchg
clc
clc
xchg
or
mov
out
xchg
sub
push
icebp
lods
sti
jnp
mov
movsl
imul
and
iret
sbb
hlt
fs
pop
into
sub
inc
jae
mov
test
adc
sbb
mov
or
and
nop
xlat
cmpsb
cmp
mov
mov
sbb
mov
and
adc
sub
shll
mov
test
test
clc
imul
enter
mov
int
hlt
in
xor
sbb
adc
sahf
mov
stc
and
add
sbb
int3
ss
sub
call
jae
int3
mov
lds
sti
lret
sbb
adc
mov
movb
inc
inc
sti
ja
lea
popa
inc
out
das
int
sbb
sarb
xorb
popa
cmc
dec
nop
push
ffree
mov
imul
inc
xchg
sti
stc
sahf
cld
fdivs
insl
mov
add
jp
jns
popf
push
popf
jne
push
aad
jnp
fs
cli
ds
testb
nop
rclb
pop
inc
dec
nop
movsb
into
sbb
xchg
inc
dec
xchg
sbb
sti
lods
leave
inc
mov
outsb
cwtl
jns
mov
xor
mov
xchg
and
mov
test
outsb
xchg
add
mov
popa
lret
aad
mov
xor
xor
push
cld
sbb
xchg
outsl
fiaddl
aad
mov
or
xor
sbb
mov
lcall
aam
adc
inc
mov
pop
mov
mov
or
pop
dec
cmpsb
daa
stc
add
pop
or
js
push
fsts
pop
sub
xor
lret
outsl
push
add
push
sub
movsb
dec
jmp
call
into
shlb
repz
pop
out
jp
mov
nop
cltd
daa
fdivrl
mov
repz
enter
pop
in
mov
xlat
cmovb
pop
gs
or
stos
add
jbe
inc
fdivs
aad
mov
faddl
repz
int
inc
stos
sbb
jbe
xchg
aas
xor
xor
out
sti
lods
bound
xchg
adc
pusha
sub
inc
sbb
push
sbb
ret
test
shr
or
shll
mov
insl
xchg
jecxz
movsl
xchg
adc
xchg
sarl
cltd
aam
hlt
sti
arpl
lret
mov
int3
sub
xchg
out
push
dec
fnsave
xor
shlb
addb
dec
mov
pop
push
jbe
imul
mov
adc
mov
push
sarb
lds
scas
cmp
pop
inc
out
jae
push
bound
lds
cmp
out
mov
and
mov
insb
mov
push
xchg
shlb
push
cmc
jne
mov
inc
lahf
and
push
jle
inc
fcoml
mov
and
mov
popf
inc
sub
das
and
mov
or
sti
scas
pop
movsb
xchg
repnz
int3
adc
inc
sti
ret
xchg
insl
adc
add
into
loop
push
addr16
pop
fsub
dec
xchg
pop
xchg
fs
sub
jns
cs
cwtl
das
sub
or
fsubrs
pushl
sub
mov
js
xchg
add
mov
xlat
xor
xor
lock
dec
adc
lahf
jae
out
xor
loop
jae
leave
lcall
mov
mov
xor
inc
arpl
gs
xchg
dec
ret
jno
jbe
push
push
push
or
fsubrs
test
arpl
lahf
xor
inc
insb
lret
xchg
aad
add
sub
push
lods
loopne
push
sbb
push
orl
cld
into
test
insl
push
or
jbe
stos
rclb
shll
and
and
packsswb
lahf
pop
jmp
pop
fnsave
sub
outsb
pop
push
clc
or
daa
std
insl
popa
mov
iret
repnz
adc
jae
pop
sahf
push
mov
cmp
jg
lret
lcall
mov
aaa
sbb
xor
add
cmpsb
adc
jmp
dec
sarl
push
and
ss
mov
dec
arpl
mov
sbb
js
and
mov
push
pop
adc
and
mov
mov
mov
pop
mov
cli
dec
cld
sub
fdivs
imul
into
js
test
imul
mov
sbb
inc
or
inc
lret
outsl
popf
test
mov
cmpsb
xchg
aas
adc
test
cmp
jnp
mov
or
scas
add
ja
jb
push
jae
sub
addb
cmpsb
dec
or
add
add
push
jge
shr
repnz
pop
cmp
out
add
imul
xchg
jle
adc
cmp
mov
mov
fnstcw
adcb
lea
adc
movsl
fucomi
mov
push
popf
dec
cmp
arpl
push
in
pop
jns
cmpl
stc
sub
sbb
xchg
xchg
ret
jne
shl
pop
ficompl
rorl
inc
mov
lahf
inc
lret
mov
mov
pusha
ss
mov
xor
xchg
jecxz
out
push
mov
pop
push
push
mov
dec
scas
jmp
pop
repz
xchg
or
arpl
push
leave
pop
adc
outsl
hlt
mov
xchg
shl
test
mov
mov
mov
mov
popa
cld
cmp
mov
into
or
xchg
lret
into
stos
imulb
push
outsl
sub
fmul
shlb
imul
mov
dec
inc
cmp
inc
imul
jmp
jg
jg
das
outsl
or
pop
ljmp
xor
pop
fldenv
sbb
fdivl
pop
mov
mov
pop
sub
mov
jo
dec
in
pop
xor
jmp
inc
push
movsb
cltd
inc
mov
cwtl
push
and
push
aam
cli
add
inc
lds
cmc
mov
jp
jne
orl
dec
into
jae
mov
jb
mov
fldcw
cmp
cld
jecxz
mov
cmp
adcl
popl
cmp
ret
out
inc
outsl
sbb
cmp
mov
std
mov
mov
cmp
fwait
lret
dec
aas
cmc
cmp
ja
jmp
xchg
negb
rolb
or
fs
nop
cmp
dec
out
roll
addr16
xchg
repz
ret
sahf
sahf
cmpl
movsl
add
and
or
push
lds
hlt
cmp
inc
push
push
fistpl
test
xor
add
in
dec
shl
call
xor
jmp
shlb
lods
dec
mov
test
test
into
leave
cmp
cltd
lea
scas
cmp
jnp
lcall
seta
scas
dec
pusha
cs
loope
push
fs
test
nop
cmpsl
int
mov
inc
repz
fisttpll
aam
js
mov
mov
sub
popf
repnz
cmp
rol
bnd
add
jge
pop
icebp
cld
mov
mov
push
mov
sub
push
xor
loope
sbb
mov
and
jno
push
xor
outsl
call
mov
mov
mov
sarb
test
xchg
jne
sub
sub
fcomi
fld
mov
mov
mov
aam
testb
cmp
pop
pop
sbb
inc
test
bound
or
cmp
leave
mov
pop
mov
cmc
and
xor
sbb
bound
test
or
mov
dec
inc
pop
not
test
lock
daa
shlb
lcall
sbb
hlt
add
popf
push
xchg
jno
arpl
ficomps
cmp
divl
pop
test
adc
fstpt
push
popa
xchg
stc
call
jl
adc
xchg
cli
sbb
cmp
test
fiadds
lret
mov
add
ljmp
fmull
rol
fdivp
xchg
out
and
xor
addb
out
ja
sahf
jae
inc
cmp
xchg
xchg
mov
adc
ljmp
mov
out
lret
aad
inc
fs
pop
loope
push
fwait
jg
pop
mov
mov
inc
es
mov
addr16
push
sahf
and
jle
push
mov
cmp
pushf
sbb
mov
or
xor
jecxz
xlat
xchg
jge
inc
icebp
dec
mov
repnz
mov
cmp
jmp
add
lods
inc
lds
aas
stos
repnz
arpl
xchg
push
cmp
xor
pop
movsb
in
adc
xor
xchg
sbb
or
sub
mov
dec
mov
push
fbstp
mov
cs
dec
mov
adc
push
aad
dec
xor
push
push
rcrb
imul
adc
push
in
call
pop
and
fidivl
sti
and
push
cmpsl
fistl
fldenv
out
lds
cmp
jmp
shrl
icebp
test
inc
mov
test
dec
pusha
push
and
roll
add
sub
out
lds
mov
repz
test
push
int3
add
test
add
push
push
mov
push
inc
rolb
ret
aaa
mov
jns
pop
push
jge
dec
xchg
fsts
daa
jmp
jge
and
loopne
pop
push
mov
jg
xchg
es
out
or
es
mov
sbb
xor
mov
push
xor
lds
mov
push
xchg
dec
jb
das
and
das
jp
pop
dec
cmp
adc
and
adc
insb
fst
lods
mov
mov
cli
call
cmp
sti
adc
aaa
xchg
sahf
and
lods
scas
or
je
pop
adc
push
xchg
push
pop
adc
xor
xorb
push
mov
jge
push
lds
xchg
in
dec
lcall
ja
mov
lock
sub
fcmove
movsl
jae
fsubs
fs
mov
mov
sub
out
out
fwait
movsl
arpl
jecxz
test
xor
jne
dec
sahf
xchg
cmp
inc
inc
mov
lret
sub
mov
pop
int3
mov
jp
leave
rorl
mov
ss
stos
ljmp
mov
jo
xchg
jae
cmpsb
mov
rcrl
inc
xor
pop
mov
aas
lock
add
mov
ja
nop
bound
cmp
mov
in
cmp
pop
or
stc
mov
ljmp
add
ud1
jle
fcoms
adc
test
xorl
mov
mov
push
repnz
mov
inc
pop
testb
push
inc
mov
mov
cmp
sub
jo
sbb
lcall
mov
repz
imul
lret
scas
call
adc
mov
pop
jmp
loopne
adcb
jg
add
inc
mov
out
sbb
mov
inc
xchg
or
dec
pop
aaa
and
xor
insb
sbb
dec
pop
mulb
xor
rol
es
xor
inc
aam
xchg
inc
sarl
in
cltd
pop
call
int3
adc
nop
mov
subl
jno
push
and
addl
shl
mov
pop
ret
mov
in
popf
cltd
data16
pop
dec
cmp
mov
addr16
pop
xchg
out
inc
sub
mov
movsb
jp
cmp
xlat
pop
xchg
not
sub
pushl
lahf
fimuls
sub
jns
mov
push
mov
pop
and
mov
out
loope
fsubl
sub
js
xor
add
stos
mov
out
sbb
sub
push
lret
mov
push
aam
add
mov
dec
xchg
jno
testl
pop
sahf
mov
or
pop
repnz
jb
inc
xor
pop
pop
dec
cs
test
icebp
insl
sbb
pop
push
mov
jbe
repz
cmp
in
adc
pop
jnp
stos
enter
and
inc
jae
in
xchg
mov
or
inc
loop
sub
paddsb
lcall
aas
arpl
dec
enter
mov
and
inc
iret
jne
stos
dec
sbb
addr16
adc
cmpsb
sbb
jle
negb
cltd
mov
aaa
cmp
pop
js
icebp
push
leave
mov
stc
lods
sbb
stos
dec
outsb
fstpl
lcall
push
jnp
mov
push
xorb
jmp
cld
mov
outsl
xchg
in
mov
test
in
sub
jge
lcall
adc
pop
fistpl
pop
lahf
test
mov
mov
mov
aam
les
xchg
jl
inc
sub
sbbb
mov
pop
xchg
mov
mov
dec
std
mov
stc
rolb
dec
nop
js
in
mov
sar
popa
test
scas
lret
add
cmp
fs
adcl
mov
xchg
imul
adc
scas
sub
pop
pop
notl
push
or
sub
arpl
int3
out
push
cmpsb
pop
sub
rclb
int3
inc
scas
repz
shlb
inc
adc
aaa
and
sub
jle
aas
push
orl
adc
push
popa
int
ret
dec
push
dec
adc
ret
pop
stos
adc
cli
jae
ja
or
aad
inc
inc
push
lahf
arpl
shlb
xor
jl
cli
inc
stc
outsb
ret
test
push
inc
xchg
jg
xlat
lret
mov
call
pop
sub
mov
dec
rcr
pusha
push
mov
test
scas
cmp
jg
dec
sti
dec
int3
pop
jno
sbb
int3
sub
test
push
outsb
sub
add
hlt
fnstenv
sahf
scas
aad
mov
sub
cs
xor
addr16
push
cmp
aaa
lock
mov
jmp
jg
inc
dec
mov
cmp
mov
dec
xchg
push
dec
inc
add
xchg
fiadds
js
and
adc
pop
lea
sub
ret
cmp
inc
xor
dec
clc
adc
and
roll
add
stc
or
pop
jbe
pop
jae
mov
mov
mov
cmpsl
push
not
xor
insl
dec
rclb
xor
jmp
pop
sub
movsb
fwait
lds
sub
out
cmp
sub
seto
cmp
outsb
loopne
ret
mov
add
fcoml
push
test
icebp
scas
or
mov
outsb
xchg
mov
adc
mov
xor
aas
or
dec
insb
leave
test
xchg
hlt
xlat
lods
popa
shll
mov
xor
idivb
mov
mov
rcrl
push
sbb
adc
lret
dec
mov
ficoml
pushf
inc
xchg
sbb
mov
push
and
mov
repz
push
bound
push
fpatan
cs
push
or
test
ljmp
inc
movsb
inc
xor
mov
jo
jno
push
pop
popa
fucom
movsb
mov
mov
or
and
imulb
jp
filds
pop
and
sbb
loopw
or
push
add
stos
aad
in
xchg
push
jo
or
jnp
mov
das
jae
stos
add
movsl
adc
jo
lods
jbe
sub
sbb
mov
jmp
in
jb
fadds
mov
inc
xchg
sub
or
ret
shlb
mov
int3
sub
data16
lret
push
add
xchg
addr16
dec
repz
jae
pusha
mov
cmpl
sbb
ret
jp
imul
lds
push
stos
or
test
notl
jnp
adc
test
test
loop
mov
xchg
jo
inc
sbb
iret
mov
mov
inc
xchg
nop
fisubs
in
notl
out
xor
lods
js
xchg
push
outsb
xor
aad
mov
push
out
test
arpl
shrl
movsb
xchg
popa
cmpsb
dec
popa
sarl
xchg
ret
les
or
lahf
hlt
clc
lcall
xor
jp
xchg
in
sub
sahf
add
xor
mov
aaa
icebp
or
je
stc
add
sahf
mov
or
fiaddl
gs
lahf
pop
adc
adc
or
xchg
sub
xor
xor
sbb
mov
xchg
mov
mov
jne
sbb
sub
int3
fwait
dec
inc
insb
ljmp
adc
pop
cmc
dec
aad
and
and
jae
cmp
adcb
and
xorb
stos
scas
dec
dec
mov
xor
andb
dec
cwtl
jg
inc
stc
fidivs
leave
je
mov
rorl
jle
inc
adc
loope
dec
xchg
popf
neg
mov
jmp
aaa
xor
ret
xchg
or
call
sti
test
jg
pop
rcrb
mov
jge
sub
mov
popf
pop
xor
aaa
or
lret
in
das
xchg
fidivl
xchg
daa
dec
or
pop
push
sub
aaa
mulb
mov
inc
push
sbb
aam
leave
xchg
mov
jbe
in
hlt
push
lret
xchg
ret
movb
xchg
cmp
imul
jnp
lahf
sub
dec
test
ret
sbb
xchg
mov
sahf
cs
push
push
movsb
mov
aas
jno
xlat
dec
outsb
into
rorl
js
pop
adc
mov
pop
jecxz
and
divl
sub
cmp
push
nop
mov
ret
jecxz
add
mov
lods
jge
adc
and
lea
jb
mov
jns
push
imul
jle
ret
rorb
setle
lods
jbe
in
loope
and
cs
movsl
and
insl
xchg
add
out
in
repnz
jle
loop
cmc
enter
xor
dec
cmp
lea
enter
dec
rcrl
jp
ss
sub
cli
out
inc
xchg
pop
add
dec
out
inc
add
mov
sbb
xchg
lret
lahf
adc
mov
repz
test
ss
push
or
bnd
fbstp
inc
jl
clc
and
adc
jl
and
and
pop
dec
jb
pop
int3
jecxz
mov
inc
xor
sahf
mov
filds
insl
xchg
sub
arpl
es
shl
push
aad
aas
or
xchg
les
jne
pushl
testl
adcb
ja
inc
mov
xor
outsl
cmp
ds
xchg
push
lods
out
jmp
stos
mov
pusha
lret
frstor
xchg
jnp
out
or
lret
xadd
sub
fidivs
and
out
add
leave
xlat
lods
lea
push
jne
lcall
adc
xchg
adc
inc
pop
rclb
sar
stos
rclb
cmp
lods
jle
lret
outsl
dec
mov
sti
in
jl
aad
leave
mov
push
lods
mov
jp
stos
out
cmp
cmp
sbb
mov
lahf
out
lcall
fcmovne
mov
jo
lods
pop
mov
lret
mov
mov
into
jns
adc
xor
sub
xchg
addr16
lods
mov
lock
mov
fs
push
ljmp
push
mov
lds
sbb
enter
in
stos
lahf
or
mov
xchg
dec
sub
cwtl
xor
aad
push
push
addr16
pop
inc
cmp
out
fstp
sub
scas
inc
pop
mov
inc
rcrb
jae
in
jge
cli
loopne
roll
mov
into
pop
shll
aaa
jge
movsb
ret
fwait
mov
ljmp
pop
lcall
cmpsb
add
in
dec
sbb
gs
mov
jb
loop
push
mov
inc
lods
or
leave
mov
adc
mov
lds
xchg
arpl
popa
fiadds
xchg
pop
xchg
stos
xor
and
xor
push
jnp
mov
insb
mov
xor
and
xlat
push
jns
fwait
popf
adc
and
test
jg
cmp
jmp
jns
sbb
enter
insl
hlt
cli
insb
xor
cmp
ja
xchg
sbb
add
mov
daa
mov
or
push
stos
cwtl
xor
push
dec
xchg
fs
movsl
pop
insb
popf
das
fs
ljmp
jno
dec
sbb
pop
frndint
xchg
js
lcall
subb
imul
pop
into
je
sub
fucom
pop
cmp
push
dec
incl
shl
mov
push
pop
out
bound
or
nop
inc
cs
and
xchg
repnz
imul
dec
lods
and
mov
cli
sbb
jbe
sub
leave
xor
dec
jno
repz
enter
xchg
int3
sbb
mov
aas
insb
xor
push
lods
or
aam
jne,pt
pop
cmp
fidivrs
jecxz
scas
arpl
stos
pop
mov
and
mov
lret
xchg
cmp
inc
push
cmc
ss
imul
loope
cld
popf
fbstp
push
push
mov
lods
aas
pop
xchg
outsl
popa
pop
jns
mov
test
movsl
sub
rolb
pop
das
cmp
test
mov
mov
sbb
cmpsb
dec
std
or
inc
mov
add
pop
and
mov
stos
and
insb
xor
ret
orb
inc
sub
ja
add
outsb
repnz
and
pop
cltd
subb
loop
cwtl
xchg
ja
addl
push
sahf
in
push
sub
and
push
hlt
lock
ss
push
adc
pop
in
sbb
dec
or
in
mov
aas
cltd
push
scas
lods
mov
outsl
mov
rclb
dec
test
sbb
mov
inc
adc
cwtl
rorb
sbb
andl
out
lods
arpl
inc
add
rolb
jp
push
adcl
push
mov
jns
lods
sahf
jno
insl
mov
xchg
sarb
sbb
mov
mov
imul
ror
dec
cmp
sub
mov
jmp
mov
shl
movsb
call
das
fcmovnb
cld
ret
movsb
mov
stc
lret
jmp
in
insb
jnp
mov
adc
fwait
je
xor
sti
popf
sub
or
cmpsl
jmp
xor
jno
push
sub
sahf
add
pop
mov
push
je
sub
or
and
stos
dec
sbb
jle
dec
and
cltd
cld
call
insl
cmc
movsl
and
lea
sbb
das
je
fistl
mov
pop
sarl
inc
xor
push
aam
or
and
stos
or
ljmp
pop
loope
sbb
push
mov
jne
xor
fucomp
xchg
xor
fwait
arpl
int
xchg
imul
fwait
cli
or
ret
inc
scas
push
xchg
test
dec
fadds
inc
ss
test
jge
icebp
pop
mov
inc
mov
inc
ds
roll
adc
subl
shll
push
dec
pop
or
dec
mov
mov
mov
std
pop
cs
inc
outsb
jp
xchg
fnsave
enter
push
or
xor
hlt
xor
rcrl
push
sahf
in
inc
mov
jae
mov
stos
inc
rcrb
pop
inc
fdivs
mov
jno
mov
adc
std
and
mov
ret
mov
jo
jbe
and
ljmp
je
insl
mov
daa
adc
repz
sub
in
xlat
dec
jl
cmp
das
add
adc
mov
fistps
mov
sbb
pop
dec
mov
ret
imul
dec
mov
repz
das
jo
stos
clc
ss
mov
add
ret
mov
rcr
inc
and
sub
es
jno
mov
mov
les
mov
dec
jecxz
push
std
gs
and
lret
scas
cmpsb
mov
or
adc
ss
sbb
jl
mov
mov
xorb
or
scas
inc
stos
xor
adc
inc
inc
out
icebp
lock
adc
das
xor
sti
mov
dec
add
and
jmp
cmp
xchg
ret
sub
jle
add
repz
add
punpckhbw
inc
enter
cld
or
dec
dec
mov
les
xor
sti
fldenv
int3
in
into
xor
mov
in
stos
push
out
pushw
lcall
fimull
sub
bound
dec
inc
add
add
outsb
cmp
fbstp
or
dec
arpl
inc
mov
push
add
and
call
add
inc
pop
shl
mov
popf
sub
push
mov
add
cltd
scas
push
fcomi
loopne
sbb
psubusw
push
cmp
xchg
divb
xchg
repz
jno
aad
jnp
pushf
jg
dec
stos
jne
xchg
popf
jmp
xchg
adc
mov
call
sbb
lret
xchg
and
sbb
nop
cli
adc
insb
mov
gs
push
sbb
mov
cmpsl
jmp
push
sti
sub
pop
xchg
movsl
add
jmp
ror
incl
adc
in
sbbl
jno
cmp
aas
mov
popf
iret
or
into
jg
push
jecxz
into
mov
scas
mov
cmc
pop
sub
andl
pop
adc
mov
fwait
mov
je
jns
pop
or
adc
stos
lret
xor
adc
rorb
mov
mov
repnz
pushf
jbe
stos
sub
jns
or
pop
out
dec
shrl
gs
sbb
stos
push
repz
nop
pop
in
sbbb
sbb
inc
inc
cli
fldcw
or
ljmp
cmpsb
mov
or
dec
mov
in
mov
add
push
outsl
inc
add
icebp
into
loop
inc
or
pop
sub
mov
test
std
lods
ret
xchg
cmp
cmpsb
push
pop
push
das
jle
aas
jp
cmp
cld
sub
jnp
ret
pop
outsb
xor
dec
jo
sub
mov
mov
in
adc
sbb
sarl
push
xchg
orl
jge
sub
cmp
pop
push
jmp
jnp
sbb
shlb
nop
and
push
fdivp
xchg
repz
test
fnstcw
sbb
mov
arpl
mov
stc
sbb
xor
cwtl
xchg
or
cmc
mov
ds
test
mov
popa
cmp
xchg
iret
rcll
addb
fdivs
mov
jecxz
std
mov
mov
sbb
xlat
gs
xor
adc
imulb
push
std
stc
fadds
or
pop
andl
inc
pop
ret
add
rcll
push
std
out
scas
mov
retw
cs
dec
shl
mov
add
mov
jae
outsb
mov
push
sub
mov
in
setg
inc
xor
repz
pop
repnz
ret
add
ss
add
mov
fucomp
add
xchg
inc
adc
shll
xchg
dec
jecxz
filds
imul
or
mov
push
jae
roll
or
or
sbbl
sbbb
dec
ds
or
jae
js
test
lahf
js
xchg
push
cld
cmp
pop
faddl
inc
popf
sahf
mov
and
pop
cli
sub
imul
les
loope
dec
mov
pop
push
ja
hlt
test
add
push
push
insb
outsb
jae
mov
cmp
shlb
jb
mov
cwtl
sub
sub
inc
jne
dec
loopne
xor
lock
out
std
das
xchg
lahf
sbb
aam
sahf
test
ror
dec
pop
inc
inc
scas
aam
aaa
add
or
mov
adc
out
cltd
pusha
shl
dec
push
test
pop
sarb
movsl
repnz
add
mov
insb
pop
sub
and
add
cmp
lods
push
dec
mov
dec
sub
add
mov
bound
mov
movsl
jne
nop
and
icebp
pop
cwtl
add
mov
fwait
pop
xorl
outsb
sbb
and
fdivs
adc
repnz
movsb
mov
xchg
lahf
xor
sahf
add
add
repz
or
push
push
int
cmpsb
aam
or
movsb
and
arpl
rcrl
cltd
ja
stc
pop
sub
inc
jl
or
pop
add
orb
xchg
aam
and
mov
cli
sub
or
xor
into
scas
push
xchg
aad
push
pop
xchg
outsl
cwtl
leave
lods
es
cwtl
call
leave
xchg
fcmovu
xchg
aam
jo
and
iret
jp
push
cld
mov
mov
push
add
mov
jns
pop
and
inc
xchg
cmp
mov
add
hlt
cmc
or
nop
mov
test
shrl
loope
out
jae
adc
mov
ds
lret
test
or
bound
ds
fiadds
into
or
push
jmp
je
cs
out
mov
pop
ror
xchg
sbbl
pop
cmp
push
lret
dec
lahf
lds
push
xlat
pusha
shlb
imul
fnstsw
mov
arpl
out
sbb
xchg
ret
and
insl
pop
adc
pop
sbb
das
xchg
aaa
lret
pop
sbb
sbb
mov
aaa
cwtl
adc
popf
jae
fadds
cmp
mov
mov
std
clc
stos
test
xor
inc
mov
in
loop
ret
dec
aas
add
lret
aaa
push
xchg
pusha
vphaddubw
mov
lret
cmpsb
fsts
fcomps
jbe
jmp
pop
push
ficoml
sbb
jp
loop
lds
adc
cmp
mov
decb
stos
push
or
or
xor
xchg
out
divl
dec
nop
lcall
jns
jle
rcrb
popf
in
mov
dec
sbb
out
sahf
sbb
push
vcvtsi2ssl
jle
add
les
sbb
add
out
std
test
shlb
sub
shr
scas
jp
sub
jbe
cmpsb
outsb
ss
and
sbb
add
icebp
in
int3
mov
jmp
imull
jg
adc
ljmp
cwtl
sbb
mov
dec
bound
xlat
test
dec
dec
push
lret
or
mov
dec
xchg
pop
and
lretw
adcl
lret
xor
lret
inc
push
pop
pop
out
fistl
cltd
enter
pop
push
sbb
pop
ret
inc
xchg
dec
call
in
add
divl
orb
and
pop
add
add
push
xchg
movsl
push
call
push
mov
jb
adc
mov
in
inc
dec
rcll
jb
in
inc
pusha
and
shll
mov
or
shrb
add
pop
xchg
adc
movl
scas
aaa
cmp
stc
or
subb
loopne
arpl
lea
sub
or
roll
les
push
shll
jmp
ret
sub
hlt
mov
shll
add
and
jb
xor
shl
out
add
lcall
bts
cld
and
jl,pn
adc
fdivrl
adc
nop
daa
in
inc
in
mov
popl
xlat
mov
mov
mov
inc
int
inc
testb
xchg
lret
push
popf
mov
or
adc
lds
lea
inc
jno
jnp
mov
repnz
popf
fcoms
xor
lret
daa
call
and
xor
xor
movl
fst
cmp
inc
mov
push
rorl
jle
mov
xchg
pusha
xchg
jp
gs
inc
icebp
xchg
inc
filds
out
pop
iret
add
icebp
inc
pop
bound
xor
push
pop
fnstenv
loop
out
push
xor
aaa
xchg
and
roll
lahf
add
movsw
xor
push
xor
pop
test
call
fbstp
insl
outsl
gs
data16
data16
sub
pop
ljmp
es
leave
add
sub
cmp
sbb
jge
sarl
xor
fwait
jg
sbb
repz
jle
inc
aam
xor
das
add
fdivl
sbbb
inc
int3
xchg
pop
fcoms
or
adc
aas
out
str
cmp
or
and
mov
mov
push
xor
push
lea
insl
out
lcall
sub
pop
into
ljmp
dec
cwtl
xchg
pop
sbb
pop
and
repz
pcmpgtd
fs
inc
mov
mov
lods
lea
mov
cmc
add
int3
xor
lds
je
jnp
cmp
scas
cmp
or
or
orl
jmp
or
mov
add
pop
ljmp
mov
movsl
daa
xchg
and
lock
jmp
fwait
ret
pop
lcall
add
aas
mov
cmp
push
push
divl
mov
lods
jnp
int3
data16
sbb
in
ss
mov
in
jmp
insb
cli
cmp
sub
sbb
dec
dec
js
je
and
lret
dec
xor
mov
in
scas
popa
in
mov
lret
cmc
popf
test
jns
addr16
push
adc
jb
mov
sbb
pop
mov
add
mov
or
mov
sbb
push
mov
cli
jmp
popa
std
sbb
incb
mov
push
dec
add
call
or
mov
sahf
loop
dec
pop
and
xlat
and
push
movl
test
or
or
filds
lret
stos
sub
sbb
lds
inc
pop
les
bound
xor
cld
mov
xor
push
sahf
push
icebp
mov
mov
daa
pop
pop
sar
sbb
add
push
lret
adc
stos
gs
es
ja
sbb
xor
add
ljmp
dec
pusha
cld
xchg
ret
ja
sub
mov
cmc
lret
icebp
cmpsl
cli
sahf
mov
cmpsl
fldcw
mov
inc
mov
xor
clc
pop
test
test
mov
mov
je
outsb
out
jecxz
jne
sub
icebp
cld
or
mov
add
int3
std
cmp
dec
bound
add
jbe
int3
out
adc
mov
cmp
push
clc
stc
sub
repnz
das
add
sbb
pop
inc
inc
pop
pop
cmp
lahf
xor
push
cmpsl
fimull
cli
int
cld
arpl
cmp
cmp
inc
mov
sarb
in
ret
push
ds
lods
xlat
mov
lahf
jo
or
insb
dec
push
loopne
jae
pop
and
push
int3
and
ljmp
sub
cmc
dec
or
sbb
jno
or
xchg
jne
fmull
ljmp
add
sbb
out
inc
dec
out
es
cmp
ds
pushl
push
jmp
jns
mov
and
int
pop
cmpsb
mov
mov
xor
enter
cmc
jo
xor
les
jmp
test
icebp
xor
mov
or
or
aaa
or
loop
ds
leave
adcl
cmp
and
mov
adcl
std
xchg
mov
test
pop
xor
sbb
sub
lcall
xchg
cmp
inc
push
or
fs
movsb
sbbb
add
insl
pop
mov
subl
int
xlat
jbe
lods
arpl
cld
test
xchg
repz
mull
rcr
jp
inc
push
mov
movsl
or
pop
nop
dec
ljmp
adc
adc
push
mov
mov
into
mov
sbb
cmp
test
dec
subl
negb
mov
xor
rorl
clc
pop
jae
pop
inc
mov
int
call
dec
xor
cli
test
outsb
cmp
aad
mov
mov
dec
movb
aaa
mov
or
leave
dec
push
cmc
adc
or
xor
or
xor
stos
sub
repnz
jg
mov
and
dec
adc
clc
lret
lahf
dec
imul
sbb
js
cmc
pop
jge
dec
sub
daa
call
mov
xchg
sub
push
push
das
dec
xor
pop
shll
insl
mov
mov
adc
ljmp
les
inc
rolb
shll
repz
out
ficompl
cmp
out
popf
gs
call
and
push
and
in
cmp
jns
or
loop
sub
filds
stos
mov
negb
in
inc
fimuls
lcall
aaa
je
push
pop
xchg
pop
ror
test
int
jle
movsb
pop
xor
adc
fldenv
cmp
push
outsl
or
add
cmp
jp
push
sub
fsubrs
mov
mov
mov
negb
sub
test
mov
mov
sub
movb
sbb
icebp
add
cmpl
inc
mov
push
daa
aaa
mov
sub
sbb
lret
inc
loop
cmp
lret
fs
or
mov
imul
mov
and
inc
ret
ret
push
adc
nop
xchg
sub
lods
test
pop
mov
in
lahf
test
out
dec
xchg
aad
ljmp
add
lcall
loope
ds
pop
push
inc
mov
dec
mov
push
xor
loop
inc
ljmp
out
or
nop
into
xor
sub
mov
jecxz
lds
push
push
sahf
mov
add
data16
popa
push
jb
aam
pop
add
inc
mov
push
sbb
sbb
fwait
dec
push
and
das
xor
mov
popa
cmp
jbe
jl
ljmp
push
scas
data16
ret
sbb
fstl
push
icebp
ret
jbe
xchg
mov
fldt
or
or
inc
mov
mov
lret
lret
leave
sarb
out
xor
xchg
mov
roll
icebp
repz
cwtl
sbb
lcall
cld
mov
clc
or
mov
gs
add
call
dec
add
pop
sub
adc
or
xlat
jo
inc
mov
lods
xorl
repz
adc
jmp
mov
hlt
aad
das
or
into
movsl
test
dec
out
cmp
or
mov
pop
addr16
add
xlat
xchg
mov
ror
or
punpcklwd
sub
xor
xchg
out
out
lret
ds
sarl
jp
fidivl
cwtl
lahf
in
sub
cmp
jge
lahf
push
mov
jnp
imul
lret
push
fisttps
adc
xchg
lret
xor
sahf
dec
clc
mov
sbbb
es
jns
inc
out
lock
ja
push
adcl
daa
pop
leave
or
sbb
test
aad
inc
mov
sub
pop
push
cmpsl
or
add
push
dec
push
cmp
mov
int3
jge
dec
push
pushf
xor
jnp
rol
push
ds
daa
adc
add
cld
jbe
pop
pop
sti
ss
adc
jbe
pop
lahf
jp
std
mov
pop
fsubp
jecxz
enter
aam
mov
bound
ja
sbb
shld
and
add
lea
or
cwtl
mov
xchg
hlt
ret
outsl
mov
aas
mov
incl
test
xchg
aad
inc
and
jmp
sbb
cmp
mov
add
notb
fcmovu
lock
push
bound
mov
ss
jnp
dec
inc
repz
enter
jl
hlt
cmp
mov
sub
daa
mov
sbb
shlb
add
jno
add
jnp
xchg
jo
xor
js
cli
mov
mov
repnz
test
jle
cltd
pushf
mov
daa
mov
out
adc
or
cmpsb
inc
out
add
sbb
sub
sub
unpckhps
xchg
lds
adc
leave
lahf
mov
rol
sbb
mov
mov
test
and
movsb
rcl
or
push
and
ret
popf
hlt
sub
push
jnp
test
push
adc
fildl
push
mov
mov
call
enter
cwtl
sbb
cmp
test
inc
add
xor
jno
or
mov
dec
in
gs
dec
aaa
add
mov
dec
pop
fists
xchg
mov
lock
movsb
adc
lcall
pop
inc
sub
loopne
pop
inc
adc
push
rorb
sbb
andb
xchg
pushf
fnstcw
stos
out
push
mov
xor
jnp
outsl
test
mov
adc
jne
fsub
mov
add
mov
cmp
adc
mov
mov
push
ds
loope
adcb
test
inc
xor
mov
jno
and
js
test
dec
dec
and
xchg
xchg
lahf
sbb
dec
xlat
aaa
sarb
fwait
adc
shlb
cs
lds
xor
jnp
cwtl
cwtl
out
and
lret
inc
je
mov
test
cltd
and
pusha
mov
sbb
rol
fimuls
rorl
aas
cmpsl
sahf
jecxz
adc
icebp
leave
hlt
cltd
sub
test
or
or
push
or
sub
pop
js
push
xchg
idivl
xor
sti
sti
inc
push
mov
mov
cmp
loopne
mov
ret
daa
lea
pop
jae
scas
or
jns
mov
mov
test
jp
mov
xchg
mov
insb
addb
icebp
insb
aad
push
adc
imul
push
pop
inc
mov
sub
iret
lock
mov
ja
or
adc
in
cmp
mov
stc
cmp
test
mov
sbb
dec
jae
pop
add
xor
ret
adc
les
movsb
inc
or
scas
push
orb
ds
hlt
sub
push
je
ret
daa
mov
inc
aad
aaa
out
mov
add
and
adc
test
aad
loope
insb
dec
repz
sbbb
mov
cltd
cmp
pop
xchg
inc
repz
push
cmpsl
jmp
sbb
loopne
loope
sahf
jl
rclb
and
or
pop
xor
call
add
sbb
leave
out
popa
sub
push
mov
pop
xor
xor
jg
test
pop
pop
jbe
mov
daa
test
sbb
jno
jae
xor
mov
mov
pop
xor
pushf
inc
pop
das
xor
leave
cmovb
mov
pushf
mov
test
add
cs
mov
sub
dec
sbb
lcall
test
in
in
mov
inc
test
idivb
xor
adc
adc
insl
pushf
sbb
and
pop
mov
push
pop
jns
inc
mov
stos
movsb
movsb
clc
lea
inc
cmp
push
cs
xlat
pop
jl
icebp
pop
dec
loopne
ss
mov
adc
popa
outsb
mov
pop
jae
shlb
ljmp
cmp
gs
jae
pushf
xchg
mov
xchg
mov
cmp
and
xchg
enter
mov
rorb
aas
shrb
iret
orl
lahf
pop
sbb
je
lods
pop
stos
adc
and
idiv
insb
ret
jno
xchg
jmp
cmp
shlb
inc
mov
add
rorl
cmp
icebp
cmpsl
or
fdivrl
pop
add
mov
movsb
movsb
enter
mov
mul
mov
test
out
add
add
pop
pop
xchg
or
adc
das
pop
adc
sub
not
mov
add
iret
dec
push
and
push
test
insl
sub
inc
cmpl
andb
push
cmpsb
push
les
cwtl
mov
jl
in
sahf
dec
dec
or
mov
mov
or
out
dec
mov
lods
xor
push
mov
mov
and
xchg
int3
data16
add
fdivs
dec
loop
lds
movsl
mov
daa
cmpsb
and
pop
push
xor
xchg
push
ss
hlt
push
bound
fs
jae
mov
sub
bound
cmp
pop
cmp
pop
pop
fmuls
in
jns
dec
adc
arpl
clc
mov
add
adc
sub
lods
leave
xor
fists
and
ss
negb
jl
dec
dec
sub
std
sbb
fs
mov
int
sub
loop
clc
mov
dec
xor
adc
ss
xor
sbb
cmp
test
fnstenv
es
pop
sbb
div
loopne
shll
iret
mov
pop
ret
add
xchg
cld
js
inc
dec
lcall
icebp
out
xchg
mov
int3
cmc
mov
ror
adc
cld
sbb
push
sbb
pop
adc
ja
les
mov
and
push
adc
cwtl
jne
xchg
jne
cltd
imul
jle
jecxz
add
movsl
push
inc
inc
outsl
sbb
mov
or
sub
xor
pop
pop
hlt
aad
loope
dec
or
push
scas
or
and
test
sub
pusha
lea
ficoml
jecxz
xor
in
sti
jle
out
cwtl
dec
xchg
push
neg
js
sub
shrb
or
test
cld
pop
mov
das
cmpsl
fdivr
aad
clc
ret
mov
push
daa
imul
in
pusha
and
sahf
shl
movsl
addr16
jg
into
add
and
pusha
or
out
jno
das
xchg
jne
jecxz
out
push
shl
les
inc
fsubrl
outsb
fcompp
fldl
pop
jne
jae
xchg
faddl
lock
pop
iret
adc
clc
lods
mov
shll
fildll
into
xor
mov
dec
sahf
dec
repnz
scas
cmp
jns
push
in
push
sbb
sub
add
int3
bound
xor
cmp
stos
inc
and
inc
push
movsl
call
fcmove
xchg
cltd
pop
mov
mov
jl
sub
imulb
out
lock
in
movsl
adc
in
push
dec
aas
int
lcall
mov
push
inc
dec
mov
jg
paddusb
xor
nop
decl
or
push
dec
into
test
cmp
je
jge
mov
mov
or
pusha
imull
pop
jae
pop
dec
dec
cli
stos
in
nop
jle
cs
xor
in
lahf
outsl
es
adc
lahf
sbb
ds
dec
lret
push
hlt
pop
out
add
addr16
outsb
mov
inc
insl
hlt
and
cmc
ss
xor
mov
fisubrs
pop
sti
in
sub
push
dec
lock
loope
cmc
cmp
and
xlat
mov
jo
cmpsl
imulb
mov
in
or
lret
imul
adc
daa
repnz
icebp
inc
inc
fistl
push
sbb
fimull
ljmp
cmp
jae
push
xchg
fistpll
pop
pop
xchg
adc
dec
or
cmp
mov
lds
pop
xchg
outsb
pop
xchg
adc
xor
adc
arpl
insl
loop
int
lea
outsl
mov
clc
adcl
mov
cli
or
daa
pushf
fimuls
ss
inc
jmp
xor
push
and
hlt
xchg
and
hlt
sub
orb
jl
add
sub
xor
cltd
mov
int3
lea
jecxz
mov
dec
sbb
xchg
ficomps
inc
fdiv
sub
mov
and
dec
dec
jnp
pop
mov
pop
fidivs
jae
mov
ljmp
lds
add
push
add
popf
jl
push
fcmovbe
incl
leave
mov
rcrb
cmp
lock
and
bound
mov
not
fs
pop
lods
sti
es
sub
je
mov
out
cmpsb
add
insb
pusha
fstp
lock
or
sbb
fdivrl
iret
jae
pushf
and
add
jno
xchg
fwait
jo
fldenv
mov
pop
wbinvd
xchg
cli
inc
add
push
or
ljmp
lahf
lods
call
data16
pop
push
pop
fisttpl
leave
fadds
jns
push
or
pusha
in
negl
jns
ficoml
mov
jno
dec
incl
push
repnz
cli
push
jge
cmp
xor
jb
scas
mov
sbb
cmp
inc
pop
push
mov
cmp
sbb
iret
outsb
xchg
icebp
iret
sbb
mov
jne
pop
push
adc
insl
lret
fistps
pop
inc
pop
cwtl
clc
ss
aaa
xchg
push
rclb
or
sbb
popf
xchg
out
movsb
adc
aaa
jno
inc
inc
out
scas
ss
cld
rorb
aas
cmp
scas
mov
xchg
mov
inc
sti
ljmp
repz
std
and
jmp
xor
nop
dec
mov
push
lahf
sub
sbb
xchg
mov
mov
aas
out
sbb
dec
jb
cmp
loopne
pushf
xchg
sub
pop
hlt
cmp
dec
push
dec
out
sbb
shl
mov
in
fldenv
pop
cmp
mov
shlb
jae
lods
cmp
cmpsb
addr16
xor
call
pop
adc
outsl
mov
ret
out
fimull
int3
mov
push
loopne
sbb
rorl
fsub
ror
mov
mov
hlt
sahf
push
push
in
pop
stc
lcall
mov
loope
orb
pop
imul
jo
outsl
xor
scas
adc
cmp
fisubrs
mov
shrl
dec
add
outsb
sbb
and
mov
push
int3
ret
cmovo
in
inc
sub
xchg
mov
rolb
popf
lret
ss
mov
in
test
sub
shl
and
icebp
fiadds
mov
adc
aad
pop
mov
mov
setae
dec
push
dec
cmpsl
or
and
push
fstl
pop
push
xor
sub
je
mov
cmp
sub
jnp
inc
cmc
adc
inc
cmp
cwtl
cli
fnsetpm(287
out
xchg
ror
add
cmpsl
popa
mov
cltd
outsl
mov
mov
int3
mov
xchg
xlat
adc
mov
lods
es
cmp
scas
dec
cmp
add
in
adc
stc
lret
fildll
push
pop
je
cmp
push
cmp
das
dec
jno
js
jno
ss
fstps
cmp
pop
shll
jl
aaa
insl
sub
or
sub
mov
leave
sti
icebp
jle
bound
and
cmpsb
sbb
mov
aaa
popa
test
into
and
movsl
icebp
loopne
push
or
xor
push
out
adc
scas
cwtl
sbb
push
xor
cs
cmp
icebp
jae
sahf
pop
mov
inc
imul
jp
ss
jmp
je
pop
pop
in
jl
mov
dec
cmpsl
pop
imul
in
or
lds
fmull
fwait
sbb
pop
aam
dec
lods
gs
cmp
xchg
push
xor
aam
in
sub
shlb
jns
pop
mov
xor
push
jbe
mov
dec
pop
ljmp
shll
std
imul
xchg
sub
lret
rolb
in
movsl
xchg
movsb
dec
push
bound
cmpsl
xchg
arpl
aad
mov
sub
aaa
xchg
or
or
mov
incb
jg
dec
stos
mov
out
js
outsl
mov
cmpsl
out
xchg
ret
ret
cmp
xor
mov
dec
insl
cmpl
fmulp
rcrb
pop
insl
inc
mov
bnd
dec
fstps
mov
ficomps
mov
push
mov
fnstcw
cld
pop
roll
cmp
leave
pop
or
sub
in
cmc
ljmp
push
sub
xor
mov
mov
mov
dec
popf
sbb
push
or
inc
inc
rcrb
ret
movsb
js
les
shll
aaa
lds
test
jno
cmp
fdivrl
and
mov
into
jae
add
xchg
int3
mov
or
sarl
mov
test
xchg
jae
in
or
testl
inc
adc
mov
negl
movsl
dec
xor
jle
clc
ret
mov
clc
scas
push
fsubrl
aas
pop
arpl
ret
test
and
jnp
dec
mov
imul
xchg
jge
icebp
shrl
jg
or
push
mov
xchg
pop
jnp
lret
ja
cmp
or
xchg
dec
gs
in
mov
outsb
fucomip
and
arpl
sub
daa
lahf
jne
mov
mov
clc
outsl
rorl
sbb
cltd
es
in
mov
push
hlt
lods
jle
bound
insl
std
lret
aam
and
insl
loopne
mov
mov
lcall
xchg
and
adc
add
popf
jns
rolb
pop
repnz
das
es
or
repnz
imul
cmc
xchg
aad
inc
scas
push
jns
and
xor
pushf
jmp
pop
clc
daa
test
pop
sub
popa
ret
js
fsts
test
inc
mov
push
aaa
or
sub
idivb
popa
and
shrb
lods
sahf
inc
je
mov
jl
sbb
rcrb
jae
ror
out
loope
cmp
inc
push
andl
enter
into
add
sub
jecxz
sbb
xchg
int
pop
cs
mov
xchg
fdivrs
scas
lods
and
adc
or
aad
out
dec
mov
xchg
push
mov
push
pop
xchg
xchg
jge
out
jmp
aam
cld
addb
xor
pop
xchg
inc
int3
int3
sbb
lcall
sub
push
pop
sbb
es
mov
imul
jne
mov
out
lea
in
sbb
mov
int
jmp
xor
sbb
inc
popf
or
les
stos
out
int
mov
pop
lcall
fs
mov
or
dec
fcoml
ds
mov
ret
and
jecxz
in
iret
loopne
and
in
jl
shrb
push
push
hlt
or
cmpsb
lcall
hlt
aaa
jecxz
sarb
fst
lret
sbb
cmp
fwait
cmp
cltd
inc
dec
mov
mov
jno
push
pop
out
xor
jne
filds
mulb
sub
sub
jle
xor
test
add
or
push
or
rol
ja
sub
jbe
mov
stos
xchg
mov
sbb
mov
cmp
sbb
inc
or
sti
xor
mov
insb
jae
out
scas
adc
fcomip
inc
loopne
xchg
gs
and
push
data16
jno
test
mov
test
jno
mov
xor
cmp
pop
push
or
les
mov
cmp
adc
iret
dec
fdivrp
dec
sub
mov
aaa
adc
outsl
mov
push
mov
mov
in
push
inc
dec
inc
inc
xchg
ds
and
addl
fwait
push
push
add
aas
out
arpl
mov
push
sbb
cmpsb
std
jp
test
jb
subb
xchg
xchg
jle
sub
icebp
ljmp
sbb
dec
push
cwtl
inc
mov
in
or
and
in
xor
and
jp
jge
adc
ljmp
inc
push
and
jns
in
cmp
stos
xchg
cwtl
rcl
push
stos
stos
mov
addr16
cmp
mov
setg
stos
int3
aas
arpl
rclb
cmp
mov
and
bound
scas
xchg
jbe
out
lcall
mov
outsl
dec
mov
cmp
pop
and
and
sub
ljmp
jns
and
aad
push
scas
mov
jb
cli
xchg
mov
mull
xchg
mov
xorl
imul
or
popf
faddl
loope
jo
jb
mov
loop
sbb
inc
xchg
adc
push
fadd
cmc
mov
add
gs
cltd
shr
cwtl
testl
mov
push
adc
dec
lds
xchg
or
fisttpll
cmp
rep
test
mov
mov
mov
push
pop
cwtl
push
loopne
sub
push
mov
xchg
outsl
fidivrl
mov
fldl
mov
mov
fdivs
sbb
daa
jl
nop
mov
push
jge
pop
cli
in
rcrb
inc
les
mov
pushf
sahf
add
mov
mov
outsl
rsm
pop
rorb
dec
mov
add
incl
add
cmp
jae
arpl
cmc
or
inc
jg
push
fmulp
mov
subb
cs
hlt
pusha
insb
punpckhdq
divb
pushf
cmpsl
and
lea
nop
lods
pusha
in
shrb
faddl
inc
pop
jb
cmc
xchg
xchg
add
adc
inc
sti
xchg
dec
mov
add
cmpsl
lods
ret
xor
mov
and
and
push
sub
jmp
pop
fistps
stos
das
and
repz
in
xor
and
fsub
xchg
fsubl
aaa
cmp
mov
movsb
or
adc
shlb
sub
loop
clc
fs
lea
pushf
js
je
leave
push
jp
push
inc
pop
cmp
aad
clc
mov
test
sar
ss
push
test
aaa
mov
dec
dec
hlt
dec
enter
dec
pusha
test
or
xchg
fst
lret
xchg
dec
fiaddl
aaa
fstpt
pop
test
ds
fistps
inc
dec
sub
push
sbb
pop
scas
and
mov
mov
iret
pop
shrb
add
mov
lret
xchg
mov
add
lea
mov
cs
fstpt
push
arpl
cld
mov
dec
and
int
test
subl
test
sbb
inc
add
or
stos
sub
or
rorb
xchg
fwait
mov
ret
ds
loopne
push
les
mov
stc
adc
stc
je
in
or
pusha
jmp
aaa
and
mov
mov
icebp
ss
outsl
jg
int3
nop
jns
cmpsb
mov
std
xchg
push
and
push
cmp
aam
and
xlat
mov
or
gs
inc
lds
xchg
rcll
add
pushf
pop
outsl
mov
mov
in
jecxz
fs
xchg
pushl
lock
out
jl
add
fists
push
dec
sub
hlt
adc
or
popf
push
in
dec
fiadds
int
out
pushf
lea
aad
inc
ret
mov
add
sbb
dec
iret
lret
lock
push
aam
and
hlt
cltd
pop
sub
or
dec
add
cmp
arpl
shlb
jle
bound
xchg
push
ret
in
std
jb
or
jge
mov
in
int3
outsl
mov
cmc
mov
pop
in
and
sub
in
xchg
test
subl
jmp
sbb
dec
int
cmpsb
or
sbb
rorl
mov
xor
mov
mov
pop
xor
xor
repz
shl
lea
aaa
sub
arpl
cmp
mov
in
sbb
xor
mov
jno
shlb
mov
sti
pop
cld
and
add
data16
mul
pusha
insb
lock
ficompl
inc
dec
or
xor
sbb
int3
fidivs
ret
fldcw
sub
imul
pop
popf
movsb
xorb
clc
popa
xchg
dec
push
notb
cmp
stos
fmuls
loop
pop
fimuls
mov
movsb
sbb
mov
sub
dec
and
adc
push
cmpsl
adc
lods
xchg
push
icebp
aas
ljmp
or
xor
mov
or
mov
sub
fldcw
pop
inc
adc
ja
fcmovne
lods
sahf
xchg
cmp
out
in
popf
shll
cmp
daa
adc
sub
int
mov
lock
stos
pop
push
sbb
leave
jo
sbb
adc
shll
fstl
and
inc
mov
aam
not
daa
icebp
xor
pop
mov
push
popf
pusha
repnz
scas
adc
neg
pop
enter
cmpsb
jb
repz
xor
jne
mov
cmpsb
mov
dec
add
mov
test
gs
mov
inc
mov
mov
and
adc
sbbl
jmp
push
fs
shrl
sub
push
mov
xchg
out
aas
mov
add
adc
lcall
mov
mov
mov
pop
sub
mov
aas
adc
push
lahf
push
icebp
inc
inc
pushf
orb
or
stos
enter
popf
rcr
fdivs
sti
jbe
scas
sub
repnz
sbb
cmpl
mov
pop
fdivp
lret
lcall
push
lds
push
sub
mov
popf
jge
mov
test
imul
pop
dec
pop
je
xchg
lods
mov
jl
pop
in
gs
sub
rolb
lahf
dec
and
mov
pop
out
push
movl
sub
inc
jge
jbe
xchg
mov
cld
cmpsb
sti
cmp
mov
push
mov
push
out
leave
ret
lods
shlb
sub
mov
out
sbb
out
xchg
icebp
push
lods
loope
fiadds
fidivrs
pop
xor
lea
xchg
test
xchg
pusha
ret
mov
loope
push
or
mov
mov
add
adc
sbbb
adc
xorb
orl
pop
cmp
movsl
push
sub
mov
and
lcall
cs
or
cs
lods
ss
imul
cld
jne
in
inc
lds
sbb
jb
add
mov
inc
pop
insl
lret
cmp
lcall
inc
mov
adc
mov
loop
mov
mov
bound
jno
test
mov
loop
lods
in
and
cmp
cmpsb
jmp
js
shrb
loopne
or
sbb
and
in
dec
xor
and
jmp
jno
lock
jnp
loopne
loope
add
stc
adc
mov
popf
or
xlat
scas
dec
and
rcrb
mov
cs
mull
push
xor
xor
xchg
imul
pop
xchg
fwait
cwtl
add
cmp
mov
and
icebp
pop
repnz
arpl
xchg
add
shll
jmp
cwtl
mov
in
cs
and
push
jae
add
fcompl
stos
testl
mov
jecxz
pop
fucomi
mov
dec
xor
ret
adc
lods
dec
shrl
mov
cltd
ss
loopne
jbe
popf
jp
shrb
ror
xlat
je
sahf
pop
gs
in
jns
notl
test
sahf
hlt
aas
dec
add
pop
xchg
mov
rcl
int
ds
or
aam
push
leave
lods
jg
cmc
rcr
outsl
xor
loop
sub
mov
mov
jmp
cmp
push
sbb
int3
push
bound
jno
mov
inc
xchg
rolb
xchg
jecxz
outsl
loop
sub
repnz
insb
sub
adc
cld
push
notl
adc
lcall
je
add
dec
fisubs
or
lock
mov
test
mov
mov
das
xor
mov
or
dec
and
jg
rcr
dec
jae
sbbb
bnd
mov
lcall
enter
jp
aaa
lods
sub
pushf
mov
lcall
pop
stos
or
pop
adc
leave
jb
mov
sub
pop
push
out
mull
jl
jge
pop
imul
je
jg
subl
mov
sbb
mov
xchg
mov
pop
cmp
adc
mov
jne
xchg
stos
mov
dec
push
sub
lock
insl
adc
out
sbb
xchg
lock
push
sbbb
sub
dec
inc
push
iret
lret
andb
cmc
das
lret
jo
stos
fdivs
pop
jmp
inc
and
dec
ret
push
inc
je
push
jne
mov
pushf
inc
subb
jge
push
mov
cs
add
inc
or
lret
imulb
sarl
mov
jge
out
outsb
inc
dec
arpl
adc
add
ja
mov
push
dec
inc
hlt
mov
clc
out
jmp
xor
movsl
subb
mov
out
les
pop
mov
cmpsb
int
mov
fcomip
negb
mov
mov
loope
adc
cmp
sti
rcr
xorb
cmp
jp
lret
repnz
je
inc
mov
sahf
jmp
shll
loope
add
mov
sbb
adc
add
inc
ret
test
inc
mov
mov
mov
xor
lock
sarl
in
pop
add
in
push
loop
cwtl
shrl
scas
out
ret
sub
data16
push
imul
push
ds
cmp
push
orb
push
jle
pushf
or
jmp
clc
outsb
clc
btr
out
add
data16
sub
cwtl
jp
loop
add
sbb
test
jbe
hlt
ss
mov
xor
jo
mov
aaa
stos
testl
add
adc
je
test
pop
outsb
inc
aaa
and
data16
aas
push
dec
or
adc
lcall
push
ret
mov
out
sbb
mov
icebp
or
mul
cs
sbb
and
lods
jns
mov
cmp
fildll
sbb
out
or
sbb
pop
xor
pop
cmp
adc
jno
sbb
cs
sahf
xor
rcrb
icebp
jmp
add
mov
sarb
popf
sbb
out
js
and
xlat
aam
cmp
jmp
les
scas
xchg
mov
and
leave
push
lahf
mov
push
push
and
data16
mov
xchg
ret
jp
xchg
push
mov
dec
mov
dec
mov
sahf
das
sbb
dec
ss
push
and
stos
push
rcrl
out
jl
inc
xor
fs
cmp
xchg
cmp
sbb
dec
mov
push
in
in
loope
jmp
outsl
les
mov
or
popa
inc
dec
bound
adc
popa
push
pop
sub
inc
sub
in
shrl
mov
packuswb
stc
test
xor
sub
fistl
cmp
repz
adc
popf
sbb
or
shll
repz
fldl
loope
cmpsl
lahf
fsubs
sub
sub
jbe
lea
push
mov
mov
mov
xchg
jae
push
pop
sbb
mov
add
add
clc
inc
push
enter
stc
aaa
mov
shll
cmp
je
arpl
xchg
xchg
mov
mov
sarl
movsb
mov
xor
out
inc
mov
cmpb
movsl
nop
out
adc
stc
std
add
mov
inc
jns
jmp
test
push
cmpb
jp
pop
push
call
and
xor
dec
push
gs
in
loop
or
or
lods
ljmp
out
dec
rcll
sub
test
ret
loopne
pop
cmp
rolb
and
aas
jmp
int3
and
adc
shlb
xor
jecxz
ret
adc
cmpsb
and
fidivrl
sub
push
movl
add
orb
in
icebp
xchg
mov
mov
je
pushf
rol
ret
stc
mov
or
ficomps
inc
mov
test
shl
jmp
mov
jns
ljmp
insb
jno
xor
xchg
sub
inc
adc
mov
popf
fists
jb
dec
mov
into
mov
pop
ss
jl
pop
ljmp
ljmp
and
lods
jp
xor
push
mov
mov
and
mov
add
xor
mov
es
mov
test
stos
test
or
cmpsb
pop
repz
jno
jge
mov
hlt
sub
dec
enter
and
add
subl
inc
popf
sbb
push
jle,pn
jne
rcrl
jmp
and
mov
cmpl
leave
xchg
cs
adc
ret
clc
push
sub
std
mov
xchg
mov
shl
mov
addr16
jecxz
fcomps
push
cltd
mov
insl
in
mov
mov
push
mov
adc
lods
sti
cmpsb
xlat
lcall
in
mov
lcall
ds
add
cltd
jg
xchg
sub
or
clc
sarb
mov
dec
sub
xchg
inc
in
mov
add
xchg
lods
mov
sar
out
mov
xchg
xlat
mov
push
mov
fdivr
movsl
xor
mov
adc
cmpsb
ja
ficoml
mov
daa
adc
mov
gs
adc
pushf
repnz
cld
popf
fstpl
dec
cmp
mov
jne
cmp
aaa
mov
push
repz
imul
xchg
xchg
imul
roll
sti
xor
adcl
jo
je
add
js
mov
jge
add
inc
jp
mov
jbe
int3
or
xchg
mov
rep
xor
cltd
or
add
jbe
out
enter
sbb
xchg
lret
lock
stos
stc
sub
jmp
nop
jno
out
jg
lods
test
nop
jle
mov
push
lods
jl
dec
imul
ljmp
inc
push
mov
sbb
setbe
and
ret
push
clc
mov
or
mov
movsb
and
rolb
adc
enter
rclb
pop
sub
lcall
lcall
sbb
test
cmp
pop
pop
mov
cltd
mov
adc
xor
cli
mov
sbbl
and
xor
cmp
lock
mov
ja
inc
insb
iret
mov
sarb
call
push
lds
adc
cvtps2pi
xchg
push
in
lods
rolb
stos
or
xchg
sub
dec
into
mov
mov
in
push
mov
push
or
outsl
and
add
js
or
jnp
inc
mov
fwait
repnz
inc
adc
adc
pusha
ss
leave
loopne
fucom
in
jns
loope
or
push
sbb
repnz
sbb
xchg
outsb
cs
aam
ret
ljmp
pop
push
int
xchg
inc
stc
push
into
fs
xor
pop
stos
lahf
and
fdivrl
mov
mov
mov
cmpl
or
aam
push
ja
daa
lods
sub
test
push
stc
fcompl
adc
jmp
test
bound
lods
sub
push
stc
int3
jle
lock
pop
add
loopne
mov
or
cmpsb
lcall
inc
loope
shll
inc
inc
xor
imul
sarb
jnp
xchg
adc
jns
jmp
lcall
pop
mov
mov
repnz
jmp
cwtl
jl
adc
jno
hlt
into
fcompl
ret
outsl
mov
nop
mov
lcall
js
inc
push
and
ljmp
mov
sahf
cmc
out
jne
mov
addb
sti
sti
mov
push
xor
mov
xor
cwtl
mov
xchg
adc
icebp
leave
push
dec
pop
dec
cmp
clc
xor
push
xchg
data16
repnz
or
cmp
mov
pop
cmp
and
std
insb
pushf
jo
and
cmp
pop
in
ss
pop
shrl
dec
sti
jge
js,pt
testl
sub
ja
dec
or
imul
or
fsts
inc
jmp
and
add
insb
sbb
mov
mov
lret
xchg
xchg
mov
or
push
xlat
sub
mov
xchg
and
dec
push
mov
xchg
imul
dec
add
or
cmp
pop
imul
inc
pop
push
ss
mov
dec
jns
aas
mov
into
lods
test
dec
ret
stos
out
and
mov
daa
sub
or
es
ljmp
je
and
cli
sbb
jmp
pushf
jnp
dec
and
les
pop
lret
mov
add
lods
fsubl
and
pop
lea
mov
xor
test
lahf
out
push
rorl
pop
push
jb
inc
sbbb
add
mov
inc
testb
xlat
cmp
bound
pop
fisubrs
ret
or
xorb
adc
add
nop
cmpsl
pop
pop
addl
or
pop
arpl
inc
sub
fisttps
ficoml
xchg
sbb
gs
push
jle
fidivrl
cmc
push
xchg
dec
sub
je
ja
cltd
sbb
aas
cmovbe
movsl
call
insl
push
les
add
adc
fs
aam
cmp
repnz
inc
xor
lret
das
mov
mov
data16
mov
xlat
movsl
fstpt
lret
push
pop
mov
repz
mov
push
sbb
inc
lcall
aam
push
sbb
push
dec
sbbl
cmpsl
neg
lock
pop
mov
mov
lret
cmc
cld
popl
xor
inc
push
cwtl
jg
sub
jae
sbb
or
pop
push
lret
test
inc
mov
pop
xor
insb
adc
test
xor
rcrl
pop
xchg
scas
addb
clc
shrb
lods
adc
js
call
sub
inc
movb
sete
sti
or
xchg
pop
cmpsl
imul
test
popa
inc
loope
es
aas
push
mov
sub
aaa
push
add
cltd
push
jae
repnz
and
dec
sbb
jo
inc
lret
adc
jmp
ret
fcompl
dec
stos
dec
out
pushf
jb
inc
lock
push
push
daa
mov
outsb
push
stos
sub
dec
dec
push
in
es
xor
rolb
test
cli
subl
add
push
out
xor
bound
lods
shlb
add
sbb
cld
sbb
je
xchg
shl
jmp
jne
or
xchg
rol
jno
jo
mov
cmpsb
fwait
push
cmpsb
push
into
mov
pop
mov
cmp
je
mov
lret
fwait
inc
out
sub
cmp
sub
jbe
lock
and
lods
xchg
jp
add
js
inc
fdivrl
pop
push
test
mov
dec
sbb
sub
jge
sub
and
idivl
push
test
pushf
mov
sbb
sub
inc
divb
xorl
gs
mov
jp
lret
in
mov
sub
lock
lods
or
or
stos
and
cld
lock
stc
inc
xchg
fwait
xlat
jle
enter
adcl
xorb
cmp
popf
fidivs
and
shl
mov
fcmovne
jmp
xor
pop
mov
lock
insb
int
jb
lret
bound
mov
mov
and
and
sbb
push
xor
pop
ficompl
imul
pop
push
das
dec
aas
cltd
lea
add
jno
lea
outsb
stc
cmpsl
xor
or
outsb
pushf
jg
add
mov
icebp
clc
sub
insl
dec
ja
pusha
mov
adc
pop
xor
js
scas
fadds
or
or
mov
xchg
and
ja
jl
sub
xchg
popa
cmp
orb
push
jae
and
dec
pushf
imul
and
cmpsb
cwtl
fstp
cmp
std
xchg
inc
and
addr16
add
outsb
xchg
cs
xchg
pop
clc
push
out
movsb
or
test
arpl
inc
jne
sub
lahf
xchg
shlb
jns
xchg
dec
jg
sbb
pop
fdivl
mov
xlat
int3
sub
pop
sbb
push
sti
mov
shlb
fstl
inc
scas
test
jg
loope
nop
inc
ljmp
test
repz
mov
fisttpll
mov
xlat
rorb
insl
dec
push
rorb
test
cmp
adc
xor
add
scas
jns
js
sbb
adcb
test
push
mov
sub
sub
icebp
test
add
in
nop
xor
dec
test
jb
out
cmp
push
scas
and
sub
mov
fcomps
dec
cmp
sub
push
jno
and
lods
push
cmp
fs
mov
adc
lret
ljmp
mov
or
jle
push
xor
ss
out
lret
clc
xchg
imul
andb
mov
gs
daa
movsb
stc
addb
or
inc
shll
sub
adc
cmp
push
jp
xor
or
lcall
add
adc
addr16
xor
mov
dec
push
push
or
cmpl
jae
out
adc
xor
lret
adc
aad
pushf
pop
or
aas
xor
repz
inc
sub
jb
sbb
jp
push
push
icebp
in
call
mov
push
movsb
repz
mov
jbe
xchg
pop
mov
dec
loopne
push
mov
and
and
push
fsubl
nop
js
das
pop
sbb
xchg
pop
addl
mov
adc
mov
lods
data16
jecxz
xor
cmp
inc
lea
ja
movsl
sub
dec
jle
cs
push
cld
shl
out
xor
mov
jg
ja
add
loopne
pop
mov
add
movsb
xchg
ljmp
jns
xor
xor
or
enter
cwtl
sti
add
add
push
sub
push
mov
imul
outsl
lods
insb
inc
pop
add
idiv
pop
xor
daa
imul
jl
jl
insb
pusha
jb
in
movsl
or
insb
rcll
or
in
sarb
or
ja
pop
ret
push
adc
pushf
cmpsb
add
lahf
sub
push
stos
dec
data16
sub
xchg
jg
jg
add
shr
test
inc
jl
pop
sub
stos
and
mov
pop
pop
sbb
jl
mov
ds
push
out
add
jns,pt
push
adcl
sub
push
jp
push
pop
mov
mov
mov
sub
or
adc
lock
out
fldenv
pop
ficoms
enter
adc
push
mov
in
jge
arpl
sbb
xchg
pop
jp
je
mov
movsl
add
addr16
imul
inc
mov
xchg
inc
or
pop
jns
divl
pusha
push
or
cmp
mov
jo
or
popa
sub
clc
bound
icebp
popf
push
or
or
dec
sbb
testb
inc
sbb
fldt
pop
scas
arpl
dec
sub
xchg
mov
in
push
popf
fmull
adc
aad
int3
inc
aas
sub
and
dec
inc
mov
adc
out
ds
out
popf
or
push
sbb
pop
dec
add
cmp
inc
mov
or
add
popa
mov
mov
popa
test
mov
fsubrs
add
xor
adc
scas
mov
push
inc
adc
call
lock
xor
mov
in
mov
xchg
test
call
mov
mov
dec
xor
lock
cmp
or
sub
inc
xor
sbb
mov
mov
mov
out
sbb
insl
cwtl
push
pop
push
stc
test
jnp
gs
loope
or
test
ret
sub
gs
pusha
je
mov
addr16
jb
cmp
mov
nop
pop
repnz
stos
dec
fstpl
and
fdivs
leave
jne
jb
pop
fldenv
repnz
xchg
adc
leave
lods
out
outsb
in
mov
mov
test
stos
mov
jg
mov
loop
jle
inc
adc
jno
or
sub
cli
movsl
in
fsub
add
mov
mov
fistps
sbb
out
push
xor
pop
pop
ficoms
outsl
dec
mov
pop
xchg
cmp
and
push
arpl
icebp
fucomp
ficoml
dec
push
and
outsl
adc
jo
je
repnz
repnz
into
out
add
mov
arpl
mov
push
scas
mov
xlat
mov
icebp
outsb
out
in
push
sbb
cld
jae
mov
mov
mov
int
cmp
adc
jle
jg
mov
fiaddl
or
clc
es
fucomi
fucomi
inc
ljmp
mov
mov
mov
ret
mov
mov
push
xchg
aas
push
and
js
pushf
fdivrp
inc
inc
and
insb
add
push
inc
not
aam
pop
js
inc
push
xor
ljmp
xor
and
adc
or
xlat
aaa
shl
inc
dec
int3
sub
leave
cwtl
push
call
mov
or
imul
jno
pop
xchg
mov
pop
pop
dec
outsb
xor
frstor
and
imul
mov
pushf
fmull
adc
cmp
sahf
adc
fbld
fidivl
xchg
loop
push
cld
pop
push
lock
das
into
ret
pop
sbb
fbld
test
call
gs
mov
loop
mov
lret
shrb
push
lods
and
jge
mov
sub
or
outsb
test
add
inc
shrb
fbld
pushf
push
xor
js
in
pushf
rcr
push
pop
sbb
push
xchg
outsl
popf
and
xor
in
pop
shll
push
sub
stc
mov
cmc
jbe
sub
pushf
mov
xchg
push
fimuls
adc
cmp
push
push
cs
jg
fadd
adc
push
lock
jg
mov
adc
sti
jge
xchg
dec
push
adc
sub
jp
push
in
insl
jmp
dec
inc
ja
mov
xor
xchg
repnz
adc
inc
or
and
mov
je
inc
shll
dec
adc
loop
mov
jecxz
jne
dec
cmp
mov
push
xor
jne
lret
push
xchg
sub
fnstsw
lock
repnz
push
scas
jg
mov
inc
mov
imulb
arpl
pop
xor
or
mov
call
test
out
in
lret
andl
fwait
jg
jp
cmp
sub
insb
fsubrs
push
cwtl
xor
and
xchg
sub
or
int
cmp
pop
imul
imul
inc
fwait
cmc
loopne
sbb
pushf
push
cs
rclb
divb
je
daa
sub
aad
lret
outsb
xor
outsl
mov
mov
mov
mov
test
pop
test
cwtl
ja
clc
xchg
imul
mov
sbb
mov
bound
jp
loop
cs
pop
dec
cs
aad
sub
icebp
mov
pop
and
test
lret
mov
xchg
jg
and
aas
push
push
aad
add
dec
outsb
dec
jne
xchg
cmp
clc
fisubrs
cwtl
fs
jmp
fadds
add
push
inc
mov
jae
push
or
jge
js
sub
xchg
popf
and
hlt
pop
in
cltd
pop
arpl
or
stc
addr16
pop
andl
out
dec
mov
fisttpll
sti
in
ljmp
mov
cmp
test
jne
aas
stc
cwtl
cmpsl
cli
ds
xchg
xchg
mov
push
push
push
ds
out
push
push
pop
cmpsb
int3
leave
es
lahf
int
rclb
inc
lds
je
or
or
adc
add
fstps
sahf
inc
int
lret
cmp
into
sub
std
scas
fsts
scas
xchg
bound
mov
xlat
cli
rolb
pushw
mov
lret
stc
sub
push
mov
pop
push
xchg
scas
add
sbbl
out
pop
push
test
fnstcw
or
add
push
jne
inc
lods
push
jo
and
mov
shrb
dec
sbbl
push
dec
rolb
sti
jne
out
xchg
or
das
jp
sti
stos
stos
sub
lret
push
pushf
std
pusha
cmp
icebp
arpl
movsb
mov
lahf
add
je
pushf
mov
inc
xchg
mov
add
pop
mov
fsubrs
cwtl
jae
mov
cmp
sub
insb
jbe
xchg
stc
mov
ret
dec
push
mov
adc
std
cs
dec
xchg
out
mov
movsl
dec
aad
sahf
loop
pop
push
or
lret
incb
arpl
out
mulb
lret
movsb
call
dec
or
adc
scas
push
lds
inc
dec
insl
or
push
popf
mov
add
or
test
sub
mov
xchg
inc
cmp
sub
idivl
push
inc
xchg
jns
sub
push
pusha
outsl
push
cld
pop
out
mov
aas
or
pop
mov
cmpsl
sahf
jmp
frstor
fnstcw
fidivrs
jne
ret
lret
pop
in
add
scas
popf
mov
inc
or
cld
arpl
pop
cltd
push
xchg
sbb
adc
addb
pop
mov
xor
ja
dec
scas
add
scas
fs
mov
mov
jo
pushf
std
call
inc
lret
lock
fidivrs
dec
mov
pop
mov
mov
push
and
and
sub
inc
dec
test
pop
adc
mov
fbstp
movsl
mov
mul
outsl
mov
xchg
mov
mov
inc
js
out
pop
xchg
bound
aaa
stc
sti
ja
or
aam
push
jp
lods
arpl
sahf
test
cmp
addr16
sarb
adc
test
mov
sahf
mov
into
adc
into
adc
shlb
adc
mov
sqrtps
cwtl
ja
sbb
mov
aas
inc
jl
test
lret
push
rcll
outsl
movsl
and
fs
sti
add
lock
aad
xchg
in
aad
mov
je
leave
mov
push
cs
aam
ss
mov
jp
mov
pop
xor
icebp
cld
xchg
and
cmp
popf
mov
aas
sbb
lcall
ljmp
fidivs
sti
pop
dec
cmp
mov
jl
xor
lea
aas
aad
and
leave
jno
test
es
out
dec
jl
call
push
or
call
jbe
xchg
push
loopne
push
fldcw
mov
cs
inc
insb
cld
cmp
push
mov
insl
pop
lahf
fs
dec
push
out
lods
sub
rorl
jo
fldt
sub
pusha
fisttpll
bound
dec
pop
imul
adc
int
repnz
div
mov
adc
xchg
loope
outsb
sbb
sbb
jecxz
mov
sub
mov
into
call
xor
pop
dec
imul
jbe
ljmp
xchg
add
imul
cmp
loopne
test
ja
fiaddl
hlt
jmp
jns
and
jl
mov
cli
xlat
hlt
fstp
xor
adc
lock
movsl
iret
inc
je
cmp
jne
add
cmpsl
je
out
ljmp
push
lea
movsb
subb
pop
mov
inc
cmc
test
ret
pusha
dec
ret
arpl
xchg
sbb
xchg
mov
das
imul
out
pusha
push
je
sbb
cmp
repz
std
xor
add
aas
aas
sbb
in
enter
loope
adcb
je
and
fsubrs
sbb
test
cmp
in
mov
sbb
and
int3
or
in
push
dec
enter
sbb
adc
inc
jo
mov
dec
and
scas
andb
mov
mov
fnstsw
dec
aaa
mov
fucomip
call
add
insl
les
popa
test
cltd
and
mov
adcb
and
xor
inc
sbb
jecxz
xor
pop
sbb
cltd
xchg
inc
pop
popa
mov
pop
shll
lea
lock
lcall
lret
popa
mov
xor
lods
fimull
mov
sbb
cmp
push
jmp
mull
fisubrl
adc
lods
and
xchg
icebp
into
stc
in
jo
orl
xlat
cvttps2pi
mov
iret
mov
xchg
mov
mov
sub
mov
mov
ret
or
inc
mov
and
sbbb
mov
and
sbbl
imul
test
mov
xor
inc
into
hlt
js
mov
or
scas
mov
hlt
pusha
gs
rorl
pusha
popf
xchg
add
out
sub
mov
loope
cmpsl
push
aad
push
inc
mov
dec
test
mov
mov
and
mov
push
xorl
inc
cmp
call
mov
in
stos
cld
inc
sbb
add
orl
jl
mov
test
mov
sub
mov
ret
inc
into
mov
shr
pop
mov
xor
inc
jbe
inc
dec
sbb
pop
dec
rolb
inc
ret
mov
pop
mov
nop
sbb
dec
xor
jp
pop
mov
cmpsl
pop
add
jae
test
or
xor
rcr
insb
rcl
sbb
jno
and
mov
inc
adc
dec
inc
test
push
xchg
addb
or
mov
test
nop
scas
std
incb
pusha
dec
into
fimuls
mov
push
sbb
mov
push
xor
divl
push
test
fcomps
in
push
mov
addr16
and
xor
adc
xchg
movsb
fdivrs
ljmp
repnz
jno
pop
in
in
inc
lret
das
pop
dec
add
adc
std
adc
mov
cmp
shll
es
jnp
sbb
sbb
xchg
test
add
js
gs
jne
push
movl
sarl
jmp
mov
add
ret
lcall
fs
pop
or
inc
in
xor
loop
add
addr16
xchg
mov
adc
cmp
xor
scas
std
xor
cmp
cltd
loope
push
sbb
add
aaa
adc
in
push
enter
test
ljmp
pop
fdivl
xor
out
adc
dec
cltd
lock
test
mov
jp
movl
add
call
sar
mov
lret
and
ret
icebp
bound
popa
call
pop
out
dec
dec
jl
push
cld
loopne
inc
sub
scas
sub
or
pop
sub
flds
or
leave
aad
xor
lods
push
sub
out
pusha
xor
push
pop
mov
adc
or
add
cmp
xchg
mov
push
repnz
adc
xchg
mov
jg
in
mov
pusha
in
mov
ret
xchg
scas
push
iret
je
pop
jne
std
hlt
mov
jnp
mov
leave
xchg
mov
cmc
sub
das
lea
xchg
out
dec
scas
bound
xchg
pop
mov
sub
in
out
rcrb
pop
xchg
push
mov
cmpl
incl
lea
dec
and
jnp
inc
enter
sbb
mov
dec
xchg
daa
repz
lea
lret
leave
inc
insl
popa
mov
int3
push
rcll
scas
push
add
mov
push
mov
rcll
pop
pop
sbb
in
push
sub
mov
xor
pop
das
sub
aam
mov
popa
jne
ds
rcr
popa
loopne
jns
pop
scas
sarl
insb
cmp
in
mov
xor
and
and
test
sub
pushf
ljmp
adc
ret
push
dec
pusha
popa
decl
rorl
push
aaa
mov
les
and
fcmovne
idivb
gs
jnp
popw
insl
pushf
pop
outsl
fiaddl
sbb
movsl
outsb
lods
pop
pop
scas
js
fdivl
subps
add
mov
pop
iret
es
jmp
or
and
sbb
mov
aam
enter
xchg
push
lcall
mov
pop
cmpsl
xchg
icebp
jecxz
fisubrl
lock
and
mov
and
mov
mov
or
sahf
cmp
je
stos
push
inc
rolb
mov
adc
sub
call
mov
andl
ret
mov
push
test
iret
xorb
js
movsl
push
out
sbb
cmp
clc
xchg
pop
inc
imul
int3
or
iret
fisubrs
hlt
sti
or
dec
std
xchg
test
in
hlt
cmc
xorb
inc
push
lods
xor
outsl
push
mov
jbe
sub
adc
loop
push
sub
sahf
push
mov
jo
add
sub
or
aas
fwait
dec
cltd
out
mov
int
fadds
cltd
js
jno
out
shll
lds
orb
jle
pop
rolb
pop
mov
xor
or
sbb
push
pop
mov
fmull
hlt
loop
add
outsb
xor
outsb
jmp
cli
das
icebp
push
insb
or
jl
adc
das
sbb
and
xchg
sahf
adc
sbb
iret
xor
push
shlb
mov
imul
sti
jle
iret
repnz
xor
std
xor
call
stos
stos
inc
inc
loop
rcrb
fwait
imul
cmp
popa
loopne
xchg
lret
or
push
xchg
daa
dec
fsubl
jae
lret
sub
ja
clc
or
inc
lock
pusha
in
xor
inc
and
pusha
outsl
loope
jecxz
xor
pop
mov
jbe
pop
sbb
hlt
lret
je
inc
sbb
daa
push
xchg
cmp
jecxz
inc
out
mov
mov
push
cltd
and
inc
outsl
push
jg
add
sub
out
enter
add
lcall
or
sbb
xor
test
jnp
adc
lcall
push
xor
stos
mov
add
sub
cmp
push
push
jle
cmpsb
mov
sub
rcrl
mov
data16
mov
jnp
test
jl
dec
adcb
ret
pop
in
rcl
fdivrs
adc
mov
shll
mov
out
js
xchg
and
insb
cmpsl
jo
sarl
idivb
out
cmpb
loop
cmp
sbbb
sbb
not
adc
jno
pop
lcall
lret
cmc
add
pop
pusha
inc
adc
push
popf
push
push
dec
jnp
cmp
cs
loopne
xchg
subb
cmp
out
gs
ret
xchg
pop
bound
test
dec
push
inc
fcoml
push
xchg
aaa
aas
ljmp
mov
les
mov
ds
sub
add
lcall
leave
loope
sbb
mov
dec
lds
xchg
pop
xlat
out
outsl
inc
dec
push
insb
sti
sti
mov
sbb
lock
mov
mov
into
mov
rcrb
dec
push
into
clc
out
inc
in
dec
imul
lret
nop
rcrb
or
int
sahf
mov
out
cld
les
sbb
add
sbb
adc
pop
pop
jbe
xchg
jl
mov
mov
adc
cmpsb
shrl
ja
inc
insb
es
cmpsb
jno
hlt
pop
mov
or
pop
mov
pushf
and
mulb
outsb
sub
cmpsl
pop
stos
ds
or
fidivrs
mov
push
mov
cmpb
lret
or
pop
jecxz
or
loopne
arpl
aas
jbe
shll
mov
sbb
jns
sub
stc
jnp
mov
sbb
in
push
and
dec
xorl
add
in
mov
in
roll
bnd
test
std
mov
imul
cmp
fidivrs
jne
and
cmp
js
pop
sub
repnz
jecxz,pt
mov
mov
adcb
fiadds
es
insl
lds
lock
lcall
lcall
inc
push
fildl
sbb
ret
xchg
popa
xchg
iret
sbb
test
inc
int3
pop
notl
push
sbbb
xor
pop
cmc
adc
dec
cltd
lock
mov
lds
lea
out
cmp
adc
mov
out
addr16
aam
mov
or
lds
icebp
mov
dec
push
sub
jl
xor
sub
jne
aas
ljmp
adc
pop
testb
mov
lods
inc
adc
or
and
jno
test
dec
or
rcrl
xor
pop
push
test
js
movb
dec
push
mov
or
lds
popf
fisubrl
sbb
xor
mov
dec
cmp
rclb
cltd
jbe
pop
lcall
lcall
jecxz
add
mov
cmp
dec
sub
push
aam
inc
enter
notl
shl
leave
fidivl
xor
adc
jmp
mov
mov
mov
test
mov
dec
mov
jne
jp
jo
and
inc
mov
iret
rolb
push
push
daa
sbb
cmpsb
popa
and
out
mov
clc
mov
pushf
xchg
xor
push
or
scas
js
flds
test
dec
lret
mov
popa
imul
cmp
outsl
cmp
pop
fsts
cmp
ret
cld
ret
dec
fsubp
jne
sbb
lret
outsl
push
push
mov
call
adc
leave
clc
bound
push
push
hlt
leave
daa
push
pop
pop
lcall
adc
stos
dec
and
pop
fnstenv
movsl
push
fadd
das
push
xchg
jne
lods
icebp
cli
frstor
xchg
ret
ret
cmpl
mov
pop
stc
repz
insl
jp
movsl
sub
cmpsb
adc
xchg
call
es
and
int
cmp
jb
std
adc
out
ljmp
lahf
or
and
inc
mov
mov
and
sub
testb
dec
mov
flds
inc
jb
in
testb
pop
nop
cmp
xor
cmpsl
aaa
jle
test
iret
ss
movl
es
and
cmp
ficompl
pop
push
inc
cmp
fstpl
jbe
mov
mov
sti
xchg
mov
sub
das
xchg
insl
dec
mov
mov
sbb
movsb
cmp
xchg
mov
mov
js
sub
push
test
jmp
sbb
mov
or
pop
xor
out
loopne
push
push
inc
roll
aam
sbbb
sbbl
pop
clc
xchg
lret
pop
push
jmp
mov
pusha
push
aas
lods
xchg
sub
and
lock
iret
dec
bound
adc
push
insl
xchg
add
xchg
mov
aaa
ret
pop
lds
adc
bound
aas
push
push
xor
sbb
sbb
out
dec
subb
imul
or
mov
jne
daa
add
aaa
mov
mov
pop
mov
dec
in
xchg
xor
jl
inc
xor
inc
sahf
xor
add
rorb
jmp
jae
xchg
or
stos
dec
icebp
sbb
ret
cmp
add
lock
shll
add
mov
idivb
popa
dec
jnp
jae
int
push
arpl
gs
cmp
mov
adc
lahf
sub
adc
xchg
pop
shr
inc
outsl
add
ret
ret
add
movb
add
enter
outsl
in
mov
mov
jle
ret
or
sbbb
or
xchg
xchg
and
mov
add
xor
jne
mov
pop
pop
jnp
test
fsubrs
jno
outsb
mov
adc
sub
cwtl
and
pusha
dec
call
icebp
push
inc
aad
pop
popf
stc
loope
mov
mov
repz
or
ret
xor
loopne
xor
test
scas
fs
dec
movsb
stos
pop
in
xor
call
cmp
mov
mov
or
and
xchg
lahf
mov
in
in
movsb
mov
clc
cld
loop
lods
lds
xor
stos
scas
mov
inc
xchg
sub
mov
cli
jmp
das
nop
mov
cmp
mov
test
push
xlat
mov
mov
xchg
stos
push
cmp
cmp
test
test
push
xlat
loop
js
test
jmp
and
dec
push
mov
dec
ret
push
adc
popf
leave
clc
xchg
data16
mov
outsl
jge
push
adc
cli
int3
ds
add
daa
push
push
out
int3
ljmp
aad
mov
xchg
cmp
mov
out
jmp
mov
or
push
xchg
in
fcoml
iret
push
sub
rolb
adc
mov
test
cmp
ljmp
xor
mov
icebp
push
sbb
enter
sbb
pop
movsb
add
xor
in
or
popf
cmp
loope
lahf
dec
loop
aam
cmp
xchg
and
xor
mov
sbb
jno
and
mov
mov
aaa
xchg
jb
mov
cld
push
add
pusha
xchg
cwtl
mov
xchg
push
mov
jo
add
pop
ss
mov
and
mov
es
popa
xchg
notb
ljmp
lret
call
mov
fcmovnbe
and
into
mov
pusha
and
mov
jl
jb
cmpb
inc
and
mov
inc
inc
imul
stos
shr
push
add
in
gs
push
aad
sbb
mov
add
lea
dec
pop
into
xchg
pop
movsl
xor
cli
pop
xchg
negl
gs
inc
mov
mov
out
fsubrs
rcl
cmp
popf
push
or
vandps
adc
add
std
or
out
jecxz
mov
dec
nop
xchg
xor
imull
xor
stc
dec
stc
loopne
leave
and
jns
jno
and
enter
or
jbe
fidivs
lahf
adc
mov
scas
and
out
add
mov
jns
sbb
or
shl
insb
pop
or
jae
sbb
pop
add
icebp
xchg
rcll
je
imul
mov
cli
xchg
push
repnz
in
sti
push
hlt
xor
jb
imul
xor
test
add
mov
mov
or
mul
dec
divb
pusha
add
push
dec
mov
and
ret
loopne
jne
push
mov
mov
pop
sbb
or
imul
int3
fbld
xor
dec
outsl
dec
ss
std
testl
sahf
xorb
mov
loopne
push
pop
mov
shlb
mov
push
scas
stos
push
rcr
pop
lahf
pop
cmp
push
cs
mov
jmp
rclb
pushl
inc
mov
inc
dec
mov
cmpsb
jb
mov
xchg
xlat
add
loope
add
aad
cmp
fcomps
lret
sbb
insb
push
mov
xchg
jae
inc
cltd
in
cmp
fs
test
dec
test
mov
mov
in
sbb
pop
std
clc
push
rcrb
cltd
sub
adc
cld
hlt
inc
pop
int
iret
cmc
movsl
mov
das
adc
jbe
push
das
pop
xor
repnz
mov
fidivl
lods
push
in
mov
pushf
and
ret
jp
imul
xchg
imulb
xchg
fidivl
mov
cmpsl
fdivr
cld
or
add
xlat
ficompl
sub
movsl
adc
or
jo
push
mov
imul
lret
or
fmulp
inc
mov
push
cmp
cmp
mov
jg
cmp
adc
out
lock
sub
mov
jnp
xchg
adc
and
sahf
lock
andb
sbb
cltd
sub
xchg
mov
add
xor
inc
mov
mov
popa
and
ljmp
mov
lcall
cmpsb
fs
mov
imul
dec
sub
mov
rclb
sub
das
dec
mov
dec
das
cli
nop
dec
fiaddl
int
popl
cld
and
into
mov
mov
sbb
test
mov
popa
insl
ja
or
cltd
sub
repz
mov
ljmp
jle
mov
sbb
or
gs
xlat
jb
in
icebp
loop
push
xlat
loopne
rcrb
dec
jmp
outsb
pop
pop
loopne
popf
fdivs
cmpsb
mov
enter
movsl
pop
enter
mov
test
dec
js
dec
rcrl
inc
jbe
or
fadds
xor
cli
lcall
mov
sub
mov
jb
adc
repz
movsl
sub
mov
movsb
push
inc
in
mov
xchg
or
sub
pop
and
fwait
rcrl
hlt
mov
outsb
fimull
cmpsb
gs
pop
adc
xchg
test
sbb
sbb
cli
mov
pop
or
inc
pop
inc
lods
imul
adc
cmc
andb
sahf
mov
add
or
add
sbb
ret
inc
mov
mov
xchg
push
xchg
and
xchg
int3
sbb
mov
push
lcall
mov
push
rol
dec
jns
out
mov
mov
jmp
movhlps
xchg
shlb
and
out
fsubl
shl
scas
jecxz
cmp
movhps
test
sub
mov
jge
mov
ja
adc
fs
add
inc
out
test
aas
cltd
sbb
sub
xchg
mov
and
cld
insb
addl
push
jne
mov
xor
mov
sti
push
mov
ret
cld
cld
mov
add
push
xchg
pop
or
ret
outsl
pushf
pop
push
inc
jle
lcall
add
fdivr
mulb
and
cmp
scas
sti
xlat
and
ret
mov
xlat
jge
inc
fdivrl
sarb
pop
jae
jbe
mov
addr16
loopne
sbb
xchg
pop
popa
rcrl
arpl
xlat
or
cmpsb
mov
sahf
or
jecxz
insb
rclb
mov
fbld
xor
add
rorl
iret
mov
xchg
sbb
arpl
and
or
sub
and
jns
loopne
push
dec
push
push
gs
add
daa
or
ror
xchg
jle
or
jle
fbstp
adc
dec
adc
sbb
dec
jmp
insb
bound
repnz
cmpsb
jnp
push
roll
mov
repnz
pop
mov
xor
cmc
out
sub
js
inc
sbb
pushf
sbb
sahf
fdivrs
xchg
push
mov
ret
subl
jmp
inc
es
dec
adc
mov
adc
xor
dec
scas
jecxz
loope
loop
cli
xlat
and
fs
jmp
sub
pushf
pop
ljmp
xchg
xor
adc
and
arpl
repz
leave
mov
ja
addr16
and
scas
lret
pop
pop
test
sbb
inc
sahf
cmpsl
insb
push
mov
dec
mov
jo
lcallw
push
daa
jle
push
cmp
in
add
jge
sub
sti
inc
push
jbe
clc
lret
dec
cwtl
pmaxub
fs
xchg
fiadds
and
xchg
sahf
nop
sbb
test
mov
pop
lods
mov
cltd
rcrl
sub
mov
sahf
in
mov
push
mov
enter
psubw
dec
test
ret
mov
jecxz
pushl
in
mov
cltd
lahf
cmp
sbbb
xchg
push
stos
xor
dec
testb
shll
enter
xchg
out
mov
sub
xchg
popa
sub
popa
lahf
adc
inc
out
mov
pop
sbb
cmpsl
mov
pop
icebp
clc
mov
pop
add
jmp
and
ret
scas
xchg
and
outsl
mov
insl
and
or
mov
aas
cmpl
push
ss
mov
pop
inc
scas
xchg
loopne
push
add
add
out
push
cmp
std
mov
fidivs
leave
sub
or
adc
das
and
inc
mov
les
dec
xor
popa
fisttps
xchg
xchg
rclb
lds
shr
mov
sub
push
nop
and
xlat
push
popa
add
mov
daa
in
fwait
cld
jne
sbb
or
xchg
push
xor
xchg
dec
push
pop
jmp
nop
and
mov
dec
inc
push
bound
in
inc
fnstcw
imul
cld
data16
dec
xor
jbe
sbb
int
into
insl
dec
pop
mov
fstl
or
sti
mov
fs
mov
fisubrl
and
scas
sub
insl
xchg
dec
fidivrs
mov
adc
and
sbb
andb
xchg
adc
pusha
adc
stos
sbb
xchg
lds
xchg
push
cld
add
je
fcoms
fcoml
add
sub
or
mov
mov
and
scas
repnz
and
push
jo
ficompl
clc
inc
aam
sub
jge
mov
sbb
lahf
test
nopl
mov
pop
popa
xchg
cmpsb
sub
sar
cmc
out
shl
push
data16
push
jmp
arpl
arpl
xor
mov
mov
xchg
sbb
or
hlt
es
mov
leave
mov
mov
fdivs
or
loopne
int3
jbe
lret
add
in
push
jg
or
pop
fcompl
add
insb
fisttpl
into
rcrb
lcall
jo
pop
or
rol
add
jecxz
arpl
les
cmp
mov
push
daa
or
push
inc
add
cmp
les
enter
sbb
jp
in
cmp
inc
fwait
push
jmp
sbb
sub
cmp
shrl
in
aaa
in
push
das
push
mov
mov
mov
inc
stos
adc
lcall
repz
stos
hlt
popa
fwait
insb
subb
addr16
and
aaa
jge
push
sub
sbb
js
mov
add
das
jns
ror
cwtl
icebp
xchg
dec
ljmp
pushf
outsb
sub
addr16
stos
push
stos
out
cmp
mull
lahf
lret
cmp
mov
sbb
adc
jle
dec
mov
mov
mulb
js
xchg
mov
lret
mov
mov
inc
repnz
ja
inc
repnz
iret
jge
add
push
lret
in
cwtl
in
rorb
loop
loope
ljmp
jns
mov
jmp
sub
cwtl
shr
inc
or
ret
enter
scas
fwait
dec
mov
rcrl
icebp
adc
mov
cs
mov
jge
cmc
iret
add
xor
frstor
mov
lods
roll
pusha
data16
pop
and
fidivrs
cmp
or
jnp
popa
inc
stos
addb
push
aaa
scas
sub
cmp
lret
mov
arpl
popf
mov
push
sahf
arpl
xor
in
sbb
and
stc
push
icebp
xchg
aaa
jns
lahf
adc
lret
mov
mov
xchg
iret
insl
xchg
into
mov
or
nop
cs
out
mov
inc
leave
das
arpl
jb
mov
and
out
inc
fisubrl
rcll
mov
adc
pushf
int3
and
push
xor
adc
cmpsl
pop
enter
pop
lret
int3
cltd
mov
cmp
out
or
aam
or
fidivl
mov
xchg
cwtl
lds
push
repnz
stc
in
mov
fldcw
cmpsl
xlat
loop
cmpsb
lods
cltd
mov
push
xor
sbb
jecxz
int3
push
inc
inc
data16
stc
decb
addr16
push
aad
mov
cmp
inc
cli
dec
ret
sub
cmp
cli
cmpsb
xlat
mov
call
jnp
cltd
mov
iret
push
cmp
mov
jnp
push
xchg
sbb
and
mov
cmp
lea
les
test
inc
inc
adc
add
sbb
mov
dec
jmp
and
mov
push
in
add
pop
adc
add
dec
iret
and
repz
xlat
int3
mov
sti
cltd
cli
js
xchg
fwait
push
jb
test
repz
jns
icebp
push
imull
mov
or
loop
or
mov
test
sbb
pop
sub
and
and
into
cmp
dec
ss
adcb
fistpll
mov
lds
push
into
inc
rclb
test
mov
cltd
in
xchg
std
add
in
push
adc
lock
pop
dec
pop
in
jle
inc
les
in
mov
fimull
or
mov
test
and
sub
pop
dec
xor
mov
shrb
movsb
movl
sub
jb
xor
fistl
iret
push
mov
fwait
into
jo
stos
mov
sarb
movsl
hlt
sti
lret
stos
lret
push
mov
es
dec
pusha
push
repnz
xor
and
shlb
mov
js
js
inc
xor
jl
ljmp
ret
mov
and
jnp
incl
out
jne
or
xor
sbb
add
data16
pop
pusha
test
std
scas
rorl
and
ret
jo
mov
iret
pop
fwait
nop
insb
ljmp
pop
repz
movsb
inc
test
xor
dec
xchg
mov
dec
loope
int3
pop
aam
and
sarl
push
xchg
push
mov
dec
mov
fcmovnbe
sbb
movsb
lock
inc
cs
inc
mov
orl
out
sbb
pop
ja
lock
xchg
dec
sbb
jbe
inc
sub
mov
mov
mov
inc
iret
shrb
rclb
lds
dec
in
mov
loop
dec
jl
cmpsb
mov
mov
loop
xchg
gs
or
test
test
pop
shlb
or
and
leave
cs
jmp
lret
les
or
lea
xchg
inc
data16
cltd
insb
fnsave
add
lret
add
sarb
sbb
xchg
cmp
iret
insl
aaa
insl
cmp
or
xchg
ss
adc
andb
shlb
loope
mov
mov
and
aam
fcoms
pop
incl
sub
cmp
inc
lock
push
dec
imul
testl
mov
adc
sbb
inc
sub
pop
inc
or
bound
out
into
inc
xchg
or
cld
ljmp
fstps
pop
jbe
pop
test
into
mov
lret
out
xor
xchg
xchg
jbe
xchg
xorl
push
jg
shll
cmp
jg
add
cli
ret
fwait
shrb
iret
xlat
sbb
not
fcoml
cmp
push
pop
aaa
jnp
in
push
mov
push
loop
aas
sarb
or
rolb
xchg
out
mov
lea
inc
mov
lahf
ret
jle
push
sub
xor
shll
mov
lahf
inc
and
adc
mov
loop
std
aas
lods
ja
ret
mov
sbb
pushf
dec
push
push
popl
mov
pop
sbb
jg
sub
mov
jbe
mov
fmuls
das
sub
pop
loop
in
sbb
ljmp
mov
push
call
movsb
aas
and
cmp
popa
cmp
add
adc
mov
cmp
cmp
insb
xchg
out
mov
add
xchg
add
add
stos
dec
jno
mov
xchg
mov
xchg
inc
inc
cltd
pop
jg
sbb
mov
and
jne
cmc
popf
fnsave
negb
es
cmc
dec
mov
aaa
lods
and
mov
xor
das
or
push
nop
popa
pop
shrw
popf
pop
lods
add
cmp
cmpsl
ds
add
mov
jae
repnz
les
mov
sti
mov
sbb
dec
inc
cmp
cmpsb
leave
xchg
pop
xor
je
pop
push
push
xchg
mov
lret
xchg
adc
or
mov
aam
pop
sbb
and
push
data16
insb
arpl
int
lds
push
sbb
or
hlt
out
adc
push
cli
mov
aam
xchg
mov
jg
clc
inc
mov
das
mov
jbe
jne
dec
cmp
xchg
sbb
xchg
in
sbb
cmp
sbb
sbb
aad
mov
jno
subb
lret
idivl
test
fwait
or
inc
rorl
cmp
mov
xor
lret
or
jmp
cmp
push
ljmp
cmp
sbb
sub
lods
stos
cs
les
dec
add
mov
ljmp
imul
sub
push
sbb
pop
xor
xchg
pop
mov
std
cmp
lea
js
frstor
test
and
dec
fcompl
jg
loopne
lret
mov
push
mov
std
pop
pusha
sub
lahf
inc
mov
or
insl
cmp
pushf
mov
xor
aas
test
aad
pushf
nop
nop
lahf
sbb
jle
jmp
test
test
test
popa
and
and
sub
das
adc
out
addb
movsb
mov
icebp
jns
fisttps
loope
cwtl
mov
cmp
add
clc
fmuls
int3
cs
ljmp
stos
mov
ret
sub
ror
adc
xlat
push
xchg
gs
jb
inc
pusha
fwait
out
arpl
loop
xor
jae
stos
pop
std
iret
popa
cmpsb
stos
outsl
fidivs
mov
add
mov
lods
add
sbb
push
ret
cld
addr16
cmp
in
pushf
decl
je
sbb
jae
jle
popf
leave
cmpsl
mov
ljmp
mov
or
mov
cmp
std
sub
aaa
lahf
bound
lods
dec
lods
add
or
lods
jno
and
push
dec
push
out
std
fiadds
stc
jo
imul
mov
negb
inc
stc
xor
stos
jg
test
neg
rcrl
jmp
dec
enter
sahf
jle
stos
inc
cs
mov
push
call
rcrb
cmc
cmp
adc
cmc
scas
cmp
hlt
xor
inc
aaa
cmpl
inc
lds
or
inc
hlt
pop
gs
push
adc
test
xor
arpl
mov
xor
xor
and
cltd
rcrb
mov
jecxz
fwait
add
in
cmp
or
insl
xchg
aaa
mov
push
repz
sub
dec
adc
xor
out
jnp
mov
lahf
cmpsb
push
xlat
lds
out
push
into
leave
stos
cwtl
fs
subl
mov
dec
inc
xor
dec
addr16
out
mov
dec
in
call
push
rorb
sbb
xchg
in
push
lea
cmpsb
and
shr
hlt
gs
push
mov
std
pop
add
pop
xor
repz
sbb
sbb
sub
jge
cltd
dec
cmp
jle
bound
shlb
adc
adc
sub
imul
test
cmc
fstpt
int3
ljmp
mull
push
lret
cmp
out
mov
and
push
loope
testl
jmp
fistpll
insb
lods
andb
int
lahf
imull
jl
je
iret
movsb
jbe
movsb
loop
xor
jecxz
ds
js
sti
stc
loopne
inc
mov
dec
aaa
or
ret
adcl
or
xchg
mov
xchg
mov
in
stos
fs
xchg
gs
and
mov
into
xchg
repz
mov
shl
xor
aas
adc
mov
cmp
mulb
sub
dec
jno
mov
pop
mov
pop
mov
mov
test
aam
jl
lods
push
popf
mov
inc
mov
roll
dec
int3
cmp
loopne
rclb
push
sub
mov
nop
rclw
and
push
cmp
xlat
mov
xchg
addr16
dec
dec
dec
dec
lea
stc
xchg
lret
in
mov
inc
stos
les
push
jge
jl
sub
xor
inc
pop
gs
ja
xchg
jae
icebp
xchg
dec
js
leave
fstpt
push
loopne
jle
fwait
test
lcall
pop
jne
jb
sti
loopne
sarl
mov
push
xor
push
jns
ja
push
mov
jne
mov
mov
push
hlt
pop
dec
idivb
stc
xchg
mov
mov
xor
jmp
push
mov
adc
pop
cmpsl
jp
repz
jns
cmpsl
addr16
sahf
ret
shr
pushf
sub
mov
outsb
jmp
sarb
adc
add
sub
and
add
cmp
popf
mov
ret
jp
aam
inc
dec
adc
push
and
inc
stc
insb
add
out
mov
sbb
outsl
push
stos
hlt
push
bswap
dec
xor
cmp
ret
rorb
dec
jb
cmpsb
sub
pop
mov
inc
mov
sahf
push
jne
sub
stos
test
leave
call
daa
xor
in
mov
inc
stos
and
shrb
dec
bound
test
cmp
pushf
mov
pop
rcrb
lods
aas
arpl
jnp
jne
adc
jmp
fs
mov
ret
sub
ret
mov
cmp
pop
icebp
call
xor
addr16
jecxz
xchg
pop
inc
push
pop
mov
in
lea
ret
call
or
mov
mov
xor
mov
xchg
js
enter
pop
stos
xor
movsl
mov
dec
mov
negb
pop
std
mov
cmp
inc
rcll
test
mov
lret
mov
jno
dec
sahf
out
dec
stos
inc
bnd
jge
dec
dec
jb
stos
inc
sbb
in
cmp
sbb
rcll
inc
jbe
or
sub
mov
stos
mov
cmp
out
sbb
adc
out
leave
lea
addr16
dec
shrl
pop
push
fdivr
pop
mov
cmp
pop
dec
mov
cwtl
lock
pop
jmp
aaa
dec
cltd
pop
jnp
cli
jbe
sub
push
enter
mov
mov
in
push
jnp
xor
lds
int3
dec
test
das
ja
xor
xor
mov
and
loop
in
aam
pushf
jmp
imul
in
or
and
cmp
xorb
icebp
enter
dec
sti
and
cmp
pop
jg
insl
push
ficoml
imul
pop
out
imul
aas
fidivrl
insl
pop
mov
pop
or
loopne
hlt
mov
dec
jne
hlt
jle
leave
push
pop
outsl
jbe
cmp
jmp
add
mov
fdivs
inc
mov
sbb
jmp
out
inc
jns
inc
enter
push
faddp
addl
lret
lret
inc
sbbb
dec
and
xchg
sbb
stos
mov
inc
mov
cmp
jmp
pop
xor
ret
jge
cld
rcrb
sbb
or
fstps
clc
and
scas
pop
sub
je
scas
das
iret
in
call
sbb
incl
jns
std
mov
fmulp
dec
movsb
movsb
popl
sub
add
ds
cmp
dec
out
mov
enter
repz
adc
push
inc
mov
idivl
jae
aas
jmp
ja
push
cli
test
test
xor
mov
in
fnstcw
add
dec
dec
pop
pop
xchg
addl
xlat
jg
pop
clc
or
dec
and
dec
sbb
dec
cmp
ljmp
les
lods
icebp
inc
fisubrl
ss
mov
jae
add
and
xor
xor
adc
mov
imul
inc
lods
xor
lret
pusha
ja
push
pop
ret
pop
scas
in
pop
dec
push
xor
bound
inc
stc
xor
adc
into
sbb
xor
outsb
sub
mov
push
sbb
incl
mov
pop
pusha
jle
sub
fisubrl
jns
clc
xchg
scas
out
cmc
mov
push
push
adc
out
inc
stos
into
pushf
aaa
mov
int3
inc
pushf
and
fadds
stos
mov
mov
inc
pop
or
cmc
jne
stos
fucom
insl
pop
sub
je
add
mov
add
stos
scas
dec
or
ror
pop
rcll
mov
pop
cs
sub
jle
jns
into
mov
es
dec
pusha
adc
fistpl
or
pop
call
mov
ds
or
mov
fxch
xor
jbe
call
pop
lret
xor
addr16
dec
insb
popa
cwtl
and
or
popa
movsb
pop
in
int3
xor
jnp
rolb
mov
enter
in
insl
jge
inc
sub
ss
fnstsw
xchg
xor
sub
pop
imul
xchg
ret
add
int3
jno
mov
cmpsl
xor
popl
push
in
std
std
cmp
jg
gs
jae
daa
in
daa
scas
push
adc
jp
mov
fcoml
mov
adc
push
cwtl
cmp
xchg
int3
sub
in
pushf
inc
mov
jno
je
cmp
loop
push
lock
sbb
and
insl
add
jns
mov
movsl
test
push
aaa
shll
mov
jle
mov
adc
inc
shl
dec
push
testb
movsb
das
scas
xor
jecxz
inc
inc
adc
or
push
shlb
cmpl
outsb
adc
hlt
push
inc
dec
jno
add
rcrl
and
mov
inc
add
daa
mov
xor
mov
pop
cs
aaa
das
cwtl
add
push
mov
js
sbb
test
pop
test
out
jp
lea
mov
imul
xor
mov
sub
out
push
leave
adc
out
inc
mov
and
int
cmc
outsl
jecxz
mov
mov
push
das
rorl
mov
or
std
sbb
sbb
clc
jmp
stc
push
idivb
inc
out
dec
xor
sub
push
out
sahf
test
add
mov
mov
test
repz
lods
adc
adc
sbb
cmpsl
into
roll
pop
lret
shr
sub
aam
jle
lock
pop
cmp
cmc
or
lahf
inc
xlat
xor
loopne
sbb
imul
jbe
lock
dec
and
ret
test
mov
aas
and
stos
xor
sbb
in
les
sub
push
jno
xchg
test
pusha
mov
clc
dec
mov
ja
ds
dec
enter
ljmp
sub
mov
in
divb
fwait
cmp
xor
sarl
je
aaa
xchg
add
inc
movsl
xchg
jnp
jbe
out
mov
sub
inc
stos
pop
andl
dec
test
xchg
push
je
enter
cli
jns
out
iret
mov
push
mov
jae
cmp
push
adc
add
into
sub
inc
sub
shlb
iret
das
and
cmpsb
xor
add
mov
pop
int
sbb
push
sti
mov
mov
pop
xchg
cmp
ret
sub
outsl
lds
adc
xchg
cmpsl
xchg
es
clc
mov
in
loope
lret
dec
mov
fwait
gs
mov
xchg
fwait
xchg
add
rclb
push
fsubrl
pop
orl
push
mov
xchg
adcb
ljmp
loopne
cmp
out
int3
pop
cmp
insl
into
mov
in
xchg
adc
arpl
xchg
xchg
inc
loop
adc
sub
or
lods
out
sub
lds
call
adc
or
xor
sub
jns
icebp
les
adcl
push
fistl
lahf
mov
movsl
or
pop
mov
daa
pop
pop
iret
xlat
adc
mov
rcrl
std
add
test
sbb
adc
mov
loop
mov
jecxz
jp
call
jns
rorl
in
pop
lea
leave
xlat
pop
je
or
add
out
fcomip
cld
mov
js
sub
rolb
int
aad
adc
lods
es
add
xor
push
into
lods
lcall
xor
into
mov
sahf
movsb
shll
ds
std
push
movb
int
cld
mov
lods
scas
popa
aam
xchg
cmp
jne
imul
xor
jb
or
xchg
orl
ja
add
pop
enter
std
push
lret
inc
iret
mov
lcall
cld
scas
cld
add
movsl
dec
inc
int
ljmp
call
into
leave
ds
dec
jne
cmp
jmp
scas
jl
mov
push
adc
std
inc
jge
into
sub
xchg
push
sub
out
jge
data16
jle
adc
mov
push
mov
push
dec
ret
fs
insb
jo
mulb
enter
mov
stos
leave
sub
stos
sub
lret
inc
mov
add
test
jmp
push
cli
jno
arpl
mov
xchg
xlat
jecxz
xor
les
sbb
subb
into
outsb
sti
mov
mov
int
sub
xor
nop
push
add
cli
stc
add
adc
pop
popf
nop
loopne
mov
test
outsl
out
movsl
jne
xor
cltd
mov
or
int
adc
ja
push
inc
fmuls
push
dec
ljmp
nop
mov
and
inc
ljmp
mov
int3
loop
out
out
das
clc
inc
andl
mov
jg
divl
xlat
cs
lea
das
es
dec
ret
xor
mov
xchg
scas
mov
pop
dec
scas
inc
ljmp
add
mov
push
mov
lahf
xchg
clc
xchg
lcall
imul
jg
add
push
cltd
imul
jle
scas
fstp
mov
mov
and
out
scas
cmpb
bnd
sub
je
push
add
addl
mov
pusha
sbb
sbb
pop
jne
xor
pusha
push
jle
and
cmp
inc
mov
loop
mov
adc
js
adc
push
pop
bound
cmp
ds
xchg
aam
pushf
jg
add
jp
jecxz
fisubs
sbb
cld
mov
push
stos
int3
test
ret
inc
int3
mov
sub
add
imul
and
notl
add
push
pop
mov
lods
jbe
jmp
add
mov
mov
inc
loopne
in
lahf
pop
mov
mov
int3
cmp
lods
test
dec
and
lock
mov
ds
push
enter
movsl
sub
jmp
iret
dec
enter
adc
test
icebp
in
xchg
outsl
push
xor
push
shld
stos
jmp
aaa
mov
je
sbb
popa
mov
adc
jo
push
cld
xorl
mov
pop
push
jmp
mov
mov
or
adcl
cs
or
or
jne
scas
sbb
sbb
mov
leave
fwait
add
in
pop
ja
ljmp
mov
jo
sti
cltd
cmp
mov
inc
mov
lock
adcl
push
sub
scas
pop
adc
out
pop
stos
mov
sbb
fsub
das
adcl
cmp
mov
enter
xchg
add
mov
mov
pop
cltd
cmp
aaa
mov
mov
mov
and
sbb
hlt
mov
sub
pop
fidivrl
mov
repz
test
faddl
dec
mov
sbb
cltd
xor
xchg
xlat
mov
enter
rcr
and
jnp
lock
push
jbe
sub
and
js
cmpsb
imul
xchg
call
int
cmp
jp
pop
jle
push
mov
xor
lcall
push
push
divl
test
mov
push
movl
call
fs
push
dec
daa
push
movsb
fmull
xchg
mov
sub
adc
or
dec
sarl
sbb
jae
adc
sub
outsl
fwait
mov
sbb
push
push
mov
lret
mov
and
dec
in
lea
xor
idivb
or
inc
insl
xor
ja
lretw
or
sti
stc
mov
xchg
push
mov
pushl
add
xchg
test
push
pushf
je
sbb
pop
repnz
enter
cmp
adc
mov
inc
out
or
pop
cmpl
push
insb
xor
jp
testb
inc
movsl
pop
jge
sbb
push
mov
mov
pop
stc
es
sti
jg
pop
cld
cmpsl
mov
mov
mov
mov
shrl
scas
inc
and
mov
jns
ret
jno
or
stc
movsl
xorb
loope
stos
or
mov
jmp
cmp
mov
cs
add
adc
les
add
lret
xor
imul
mov
pusha
inc
xor
xor
sbb
xorb
out
aad
cs
cmc
ficoms
mov
leave
push
or
sub
xor
jl
mov
ds
cmp
sub
imul
mov
or
push
xchg
cltd
jne
in
or
dec
ficompl
pop
test
cmp
mov
lods
xchg
fs
popf
cli
pop
das
mov
xorb
lods
cmp
mov
and
add
sub
jns
mov
cld
mov
mov
push
fs
int3
cmp
movl
repnz
pop
xor
scas
inc
xchg
paddq
jbe
xchg
xor
jge
les
xchg
jnp
jne
jp
push
xchg
in
sahf
and
leave
addl
jmp
xor
imul
mov
call
mov
insl
mov
xor
push
xchg
movl
jmp
and
pusha
repz
fwait
and
adc
lret
push
pop
adc
or
fstp
pusha
inc
add
ss
xor
cmc
shlb
pusha
xchg
scas
mov
inc
sti
ss
sub
das
push
or
push
inc
loopne
enter
mov
lret
pusha
mov
icebp
mov
fdivrp
cmp
fs
xor
and
mov
std
lcall
push
and
dec
inc
pop
mov
movsb
and
jmp
sbb
das
cmpb
into
jp
dec
test
fsubs
mov
xor
jne
dec
pop
sub
mov
sbb
jns
ds
and
sub
xchg
or
mov
cmp
dec
insl
push
push
and
das
leave
xor
jne
xchg
push
test
ficomps
shlb
loope
jb
xor
pop
lock
cmp
cmp
push
scas
mov
lea
or
jg
lock
call
xlat
mov
aam
rorb
movsl
mov
loop
fildll
mov
and
pop
xor
and
dec
add
and
test
or
mov
leave
test
in
and
fadds
cli
out
sub
mov
pushf
out
rclb
push
cmp
pop
ds
xchg
std
scas
mov
ret
scas
mov
inc
int
popa
fdivr
mov
add
mov
in
push
test
scas
push
in
out
add
sub
inc
scas
outsl
faddl
stos
or
push
dec
fscale
push
test
and
cmp
fistpl
pop
es
jg
in
sbb
pop
inc
push
fsubrl
mov
jb
stos
fisubl
ret
inc
adc
clc
jb
inc
adc
inc
pop
dec
or
dec
fsubl
call
pop
inc
sbb
add
int
stos
jns
loop
stos
ljmp
and
xchg
sub
mov
add
outsl
ja
cli
or
frstor
sub
xor
stos
adc
pop
ja
adc
mov
hlt
cmp
fistpl
mov
cmpsb
jg
adc
xchg
ja
jecxz
mov
scas
mov
dec
leave
aas
fsubrs
inc
push
lea
js
push
pop
xorb
or
shrl
mov
jmp
cli
inc
stos
mov
or
mov
leave
sbb
filds
icebp
xor
push
and
xchg
sub
xchg
lret
scas
mov
insl
scas
mov
stos
dec
fs
iret
mov
sarb
ret
sahf
xor
push
cmp
xor
sub
sub
sahf
fwait
xchg
sarl
lods
cld
mov
repnz
jae
add
xchg
and
call
mov
mov
inc
cli
mov
add
sub
aad
fisttpll
jns
stc
jg
dec
jae
imul
mov
insb
dec
nop
and
out
push
loopne
in
xorb
jmp
cmp
fwait
jno
test
sub
popa
and
jl
sub
or
xchg
fcoms
in
add
decl
loopne,pn
adc
movsb
ja
xchg
cli
fnstenv
inc
out
pop
cmpsl
inc
mov
xor
fmul
test
push
inc
xchg
leave
add
cltd
inc
adc
shll
sti
pop
mov
mov
out
lods
pop
ljmp
popf
or
sti
rorl
sarl
enter
out
sbb
push
or
sub
adc
push
ljmp
xchg
fsts
push
mov
int3
push
popf
add
and
cli
adc
jae
test
and
add
jmp
js
std
push
imul
call
rcr
mov
xchg
mov
jnp
xor
push
test
pop
mov
dec
and
xor
add
daa
mov
adc
gs
jne
mov
sbb
rcrb
pop
push
push
pusha
scas
out
mov
push
cmp
xor
popa
movsb
xchg
dec
fwait
movsl
xchg
or
sahf
dec
out
cli
sub
push
or
jne
hlt
ljmp
popf
adc
mov
push
ds
icebp
enter
aad
or
neg
push
and
jg
out
scas
push
imulb
jb
push
aam
bound
xor
mov
lcall
inc
iret
aad
xor
pop
ljmp
inc
adc
sbb
and
fisubs
xlat
scas
cltd
inc
push
iret
push
mov
mov
cld
hlt
pop
ficomps
pushf
out
subb
orb
push
jno
sbb
pusha
int3
pusha
inc
adc
xlat
xor
es
loop
inc
iret
cs
test
stos
or
mov
sarb
sbb
push
dec
xrelease
push
stc
jns
lods
cmpsl
inc
rorb
mov
mov
xor
loopne
insl
mov
mov
jo
pop
aas
inc
mov
cld
popa
adc
and
mov
or
add
push
xchg
rcl
cmp
movsb
rorl
and
cmp
sbb
out
mov
xchg
sub
mov
cmpsb
adc
xor
orl
jno
int
fs
push
les
xor
call
mov
int3
mov
imul
inc
sti
in
pop
js
push
or
leave
dec
adc
imul
shll
and
xor
test
sarl
sarb
and
fildll
push
push
adc
jo
insb
sbb
ja
fsubl
add
push
and
imul
fwait
cmp
fdivs
cld
aaa
les
add
imul
sub
add
jg
dec
hlt
adc
inc
pop
nop
shlb
jb
lret
dec
jb
test
fxch
cmp
pop
jne
mov
loop
je
jo
cmc
ds
lcall
jl
add
sahf
push
mov
dec
lds
bnd
sbb
iret
push
pop
mov
xchg
push
or
or
mov
insl
mov
jns
mov
fadd
mov
sub
jmp
sub
call
in
mov
mov
lds
pop
mov
inc
enter
addr16
lret
cmpsl
popa
jge
leave
sti
es
inc
repz
mov
cmp
push
adc
mov
xor
sahf
xlat
jmp
outsl
jns
or
fld
mov
mov
lcall
lahf
mov
mov
das
sub
add
jno
mul
movsl
mov
rorl
xchg
jno
rorb
movsl
push
adc
push
adc
decb
repz
aad
shl
and
mov
pop
mov
pop
dec
ljmp
lahf
inc
call
arpl
aam
or
add
adc
cs
mov
and
mov
and
pop
dec
lds
ret
sahf
sbb
mov
cmp
and
xorl
lret
mov
and
lods
lret
mov
jl
mov
sbb
sti
jge
xor
dec
push
dec
mov
jge
xlat
std
std
je
lcall
pop
mov
sub
pop
in
cmp
shll
jns
test
addr16
sbb
in
scas
push
ljmp
jl
or
mov
mov
outsb
sbb
push
aas
inc
aas
icebp
dec
mov
movsb
cwtl
cmp
push
dec
andb
aam
xor
xchg
bnd
ret
and
adc
mov
in
ljmp
pop
xor
cwtl
mov
jg
sub
and
call
jbe
push
jbe
cmp
in
ss
push
ja
pop
lcall
sbb
fisubrl
popa
dec
jg
int3
ss
daa
pop
xchg
lea
or
cmc
sbb
adc
xchg
shll
fwait
xchg
pop
insb
push
lret
push
sti
inc
daa
lea
icebp
jge
pop
add
jbe
inc
inc
xor
jmp
push
pop
cmp
andb
sub
mov
mov
inc
popf
lret
out
sbb
aaa
ret
inc
xorl
pop
nop
clc
repnz
mov
cwtl
imul
push
lea
cld
insb
and
jbe
xor
mov
ss
out
add
push
lds
in
xor
sti
add
mov
xor
push
push
push
jl
lcall
fsubr
sbb
add
cmc
fildl
call
push
psrlw
lock
leave
mov
push
fcmovnbe
xor
pop
xchg
xor
out
sbb
or
or
mov
push
mov
hlt
fs
cmp
add
stc
ljmp
into
insb
adc
pop
mov
xor
je
xchg
pop
fidivrs
out
iret
and
xchg
push
stc
hlt
jo
leave
push
stc
jo
cmp
xlat
push
dec
sbb
adc
jne
lods
jge
add
aas
cwtl
fstl
and
inc
mov
inc
xchg
push
sti
jo
in
or
xchg
mov
jne
mov
hlt
movsl
aad
dec
sbb
push
mov
cmp
sbb
rdtsc
aas
cli
mov
dec
fsubl
dec
ja
adc
mov
dec
inc
push
push
movsb
pop
arpl
sbb
js
int3
les
into
mov
push
das
mov
mov
mov
push
les
mov
sub
mov
sbb
pop
mov
lods
jle
mov
fcomp
cmp
pop
arpl
xor
data16
push
mov
insl
jae
jg
stos
arpl
mov
xchg
sbb
cmc
mov
out
mov
adcl
sti
loop
or
in
movsb
cmp
std
in
sub
jae
push
arpl
jge
xchg
insb
mov
inc
push
mov
or
dec
lcall
mov
push
pushf
les
int3
fxch
loope
out
xor
lcall
and
cld
xchg
jae
stos
rclb
nop
add
cmp
add
dec
pop
jg
outsl
mov
fildll
gs
icebp
mov
test
mov
repnz
test
jecxz
cli
icebp
icebp
adc
adc
push
adc
sbb
imul
cmpsl
scas
stos
cld
test
mov
lds
dec
push
pop
lea
pop
jo
aaa
add
call
mov
insl
and
movsl
push
ret
aad
cld
cli
mov
add
pop
lods
test
jb
in
clc
jmp
and
int
xor
insb
sub
shl
or
outsb
outsl
cld
dec
push
ds
sub
adc
xchg
pop
lock
pushf
mov
hlt
mov
dec
xchg
and
nop
mov
mov
es
movsl
jbe
repz
cmp
jb
cli
filds
push
loope
jecxz
dec
sbb
adc
sbb
dec
mov
mov
and
cmp
fsub
cmp
lods
cmpsb
cs
aam
add
ret
jo
mov
and
pop
and
out
or
push
jmp
push
out
ret
test
mov
fists
cmp
cmp
hlt
jecxz
cmp
repnz
push
jg
pop
add
add
cmp
mov
mov
sbb
pop
jb
mov
push
push
pop
aaa
adc
fwait
js
sbb
insb
mov
sti
xchg
xor
push
adc
mov
je
dec
inc
add
insb
push
add
test
sbb
jb
push
notl
aam
pop
cmp
je
rcrb
jl
xchg
and
xor
ss
jne
jp
push
out
dec
fs
stc
sbbb
push
sbb
mov
xor
fadd
enter
mov
mov
dec
in
jg
sub
jmp
adc
xor
adc
pop
lcall
hlt
cmp
shlb
iret
imul
idivl
inc
or
push
aam
lcall
and
cmpsb
mov
jb
inc
mov
out
andl
imul
cli
dec
les
pop
shll
fimuls
sahf
cltd
jno
jg
add
xor
icebp
xchg
cmp
fistpl
mov
jp
add
xchg
js
mov
shll
cmovno
pop
popf
add
cmp
cmpsl
dec
sbb
push
push
jp
xchg
adc
pusha
sarl
mov
mov
fcomps
jmp
mov
mov
ficoms
mov
mov
jecxz
push
dec
ja
out
das
dec
push
in
mov
sti
sbb
push
xchg
adc
ret
data16
stos
sbb
insb
jo
lods
sbb
dec
stos
pop
jno
lret
in
push
xchg
popa
fcomp
nop
dec
cmpsl
fistl
adc
sbb
xor
inc
lock
lock
cmp
mov
push
stos
cmpsb
xor
add
mov
js
icebp
inc
daa
ret
xchg
dec
mov
jno
adc
jecxz
push
setno
and
jae
mov
xchg
inc
mov
repz
cwtl
pop
fcomps
mov
add
and
mov
jecxz
mov
popa
imul
add
xchg
cli
imul
aaa
andl
sub
pop
pop
pusha
movsl
pop
xchg
in
push
pop
sub
int
test
xchg
iret
insl
inc
pushf
aas
add
ljmp
xor
add
jg
gs
add
std
cld
adc
mov
sub
xor
lret
xor
mov
jbe
mov
cmpl
cmp
or
adc
jmp
fldt
pusha
dec
mov
popa
notb
cmc
out
in
rcrb
fdivs
lcall
dec
movsl
cmpsb
sub
pop
push
jne
in
dec
xchg
faddl
fists
in
adc
stos
loopne
jp
mov
sub
fnstenv
xor
test
lock
les
in
cltd
lods
call
xlat
addr16
loope
push
iret
jl
push
out
ljmp
mov
xor
sbb
push
std
shrb
loopne
dec
dec
insl
aaa
in
jge
std
bound
call
fldl
xor
shlb
std
jo
sub
and
cs
jb
xor
jecxz
insl
pop
ja
test
roll
lret
sbb
or
mov
stos
mov
test
fmull
jne
xorl
jb
mov
cwtl
jl
xlat
bound
mov
cmp
jo
mov
push
push
cld
push
adc
shll
das
sub
pushf
mov
imul
mov
pop
mov
inc
repz
out
adc
sahf
jnp
loope
mov
push
inc
dec
fs
scas
std
and
inc
xor
cld
loop
iret
clc
inc
inc
shrl
icebp
aaa
imul
lahf
std
mov
nop
dec
mov
fwait
push
pop
cmp
adc
sbb
mov
adc
dec
jbe
aaa
sub
je
ss
stc
and
cmp
mov
dec
pop
scas
sti
or
test
sbb
gs
mov
cltd
pop
scas
mov
nop
in
in
add
cmc
sub
sub
sbb
lcall
movsl
fs
jp
sarl
sahf
push
dec
xor
fisttps
out
pop
and
cmp
xor
cld
or
ja
mov
mov
mov
cmp
loope
lock
subl
imul
add
dec
and
adc
or
xchg
outsb
nop
sbb
sarb
fdivl
subb
xor
and
push
enter
push
bound
scas
sbb
dec
push
dec
ficoms
movsl
imul
xorb
scas
inc
lcall
adc
scas
loop
xor
imul
cwtl
stos
movsl
loop
fmul
jb
mov
in
cwtl
fdivr
push
push
mov
push
pushl
sub
insb
push
sub
or
mov
or
ljmp
xor
int
dec
movb
fwait
cmpsl
mov
out
popf
sbb
lds
pusha
mov
push
clc
ja
fwait
imul
cltd
imul
push
rolb
outsl
scas
sub
fs
and
gs
xchg
movsl
xor
mov
cmp
test
insb
std
mov
les
sti
lock
pop
cmp
cmpsb
les
mov
test
mov
test
mov
fucomip
sarl
outsl
xchg
int3
lock
pushf
mov
lock
inc
mov
insb
lea
call
cmp
loop
mov
enter
adc
push
dec
lahf
out
lods
pop
loop
cmpsl
inc
adc
clc
out
push
scas
imul
pushf
sbb
xor
iret
add
sub
jle
jbe
popa
xchg
in
mov
lret
dec
xor
movsb
mov
fwait
popf
cmp
movsb
in
xor
sarl
out
iret
repnz
stc
push
les
push
push
jl
xchg
mov
test
les
data16
xchg
inc
xchg
xchg
orl
dec
mov
ror
cmc
call
mov
das
mov
or
test
lds
fimuls
in
int3
hlt
mov
add
pop
push
cmp
add
pop
outsl
pop
mov
mov
dec
add
data16
test
stos
or
in
and
pop
outsl
inc
cmp
cmp
imul
xchg
jo
iret
jno
popl
hlt
sbb
je
fs
fistpll
aad
lds
dec
dec
cmpsb
mov
inc
push
add
loop
cwtl
pop
add
test
mov
mov
stos
std
lods
shr
mov
or
popa
mov
mov
scas
jo
and
in
dec
out
sub
or
sbb
cmpsb
in
dec
aad
xchg
or
inc
test
je
or
sbb
popa
enter
push
rcrb
imul
mov
push
cmpsb
in
fnstenv
movsb
ljmp
jnp
cmp
push
mov
mov
push
mov
mov
dec
jnp
mov
fadds
out
jp
push
xor
xor
xchg
adc
mov
xchg
ret
jecxz
add
dec
cmpsl
push
mov
test
nop
fnstsw
and
aad
push
pop
jne
jmp
adc
daa
jg
xor
int3
add
popw
cmpsl
in
inc
or
xchg
movsb
mov
divb
test
dec
arpl
add
push
and
pop
push
dec
pop
out
mov
push
insl
mov
aas
xchg
sbb
push
fcoms
lret
mov
ret
inc
adc
daa
shlb
jne
iret
loope
aam
mov
or
adc
shrl
cs
loopne
inc
adc
out
mov
adc
mov
popa
loope
jno
fs
cmc
je
notb
nop
aas
fldt
add
inc
mov
pop
jecxz
mov
jp
rcrl
in
pop
fisubrl
jns
testl
inc
pop
scas
mov
mov
xlat
push
pusha
or
iret
ds
cmp
or
sub
loope
dec
std
mov
or
xor
inc
call
imul
out
sarl
rcll
outsl
pop
jp
shll
push
xchg
ss
push
and
nop
mov
and
stos
mov
divl
and
sbb
pop
in
fildll
imul
cwtl
adc
call
int
fs
mov
adc
loop
repnz
push
mov
into
or
xchg
push
add
sbb
clc
mov
or
cmp
mov
mov
xorl
xor
push
movsb
das
ja
das
cli
inc
jno
mov
sbb
pushw
stos
cmp
out
lds
push
nop
xchg
inc
cs
jnp
std
les
aam
test
mov
addr16
lcall
jne
mov
inc
lret
add
cs
orl
sbb
jg
pop
jne
bound
lea
arpl
pusha
push
roll
dec
sub
add
or
xchg
inc
loop
mov
sbb
nop
cmp
sbb
lret
jno
adc
popa
pop
sbb
pop
ret
xchg
and
cmp
in
shl
int
ja
dec
sarl
orl
pop
lahf
pop
dec
push
adcb
xor
lock
sub
push
sahf
neg
cmpsb
mov
push
xor
jg
cs
int3
push
jns
cmp
xchg
in
jle
pop
push
xchg
mov
xor
dec
jmp
out
jle
and
rclb
push
jge
xchg
imul
adc
mov
addr16
imull
or
aam
dec
sub
pop
mov
and
mov
pusha
cmp
imull
inc
adc
mov
add
sarl
mov
sbb
lcall
flds
or
cld
int3
int3
fcompl
lds
jbe
pop
les
mov
out
lea
or
jae
fbstp
mov
pop
xchg
daa
fs
dec
movq
stos
sahf
mov
jno
jmp
test
sub
adc
inc
add
in
les
push
ja
adc
jae
sub
xchg
jbe
push
cmc
sbb
push
jge
mov
rcrl
lds
xor
fistl
xorl
fst
fsubp
cmp
mov
add
ja
xor
pop
test
into
test
or
add
cmp
push
xchg
rcrb
sub
stc
add
js
mov
fsubs
sbb
and
pop
sti
rcrb
lcall
dec
sub
enter
mov
add
adc
dec
dec
nop
out
lret
mov
hlt
adc
cmp
pop
jns
inc
jno
sti
int3
mov
ffree
test
xchg
frndint
imul
sub
je
mov
ja
jbe
push
mov
lahf
cmc
cmp
push
pop
enter
mov
bound
jle
xor
jmp
pop
sbb
int
sbb
mov
call
lock
jecxz
jl
je
cmpsb
daa
ja
xchg
dec
mov
loopne
cmp
push
sub
fs
xor
adc
out
ljmp
cwtl
mov
jmp
sahf
and
out
arpl
mov
lahf
and
mov
xor
mov
mov
push
push
rorb
lods
mov
inc
dec
push
xorl
repz
ds
pop
rcrl
xchg
fs
jnp
daa
pop
cmp
pop
push
lret
pop
xor
std
pusha
and
inc
call
and
icebp
xchg
jl,pn
pop
es
lods
cmp
pop
and
repnz
add
cmp
int
adc
push
lahf
psubsw
fistpl
jl
icebp
mov
lea
sub
push
inc
cs
insl
or
xchg
ds
jg
inc
cmp
and
rcll
and
pop
pop
mov
es
mov
mov
out
jg
dec
adc
mov
inc
dec
adc
call
inc
fldl
test
sar
xor
jl
cs
mov
xchg
push
add
or
shl
insl
pop
movsw
dec
sarl
xchg
daa
xchg
cmovs
jge
push
ljmp
iret
mov
jns
ds
sub
sbb
or
hlt
sarl
pop
stos
sbb
jb
pop
xchg
fsubs
aad
fwait
xor
pusha
sub
cmpb
sbb
roll
sarb
scas
pop
inc
pop
out
mov
fdivs
negb
ffreep
jnp
in
mov
and
out
insl
pushf
and
movsb
cmpsb
fisubs
mov
aaa
cmp
es
fcom
bound
sub
sbb
mov
jmp
imul
insb
cmp
inc
cltd
aas
fmuls
mov
jmp
mov
sbb
dec
cwtl
inc
iret
mov
fcoml
adc
cmp
mov
aaa
mov
cmp
pop
sub
xlat
loopne
pop
pop
test
das
ja
stc
iret
lock
sahf
jl,pt
cmp
inc
or
in
decb
shll
in
popa
rcrb
dec
pushf
daa
pop
leave
and
mov
sub
pop
dec
xchg
jae
int
and
cltd
jl
xchg
jnp
mov
mov
mov
inc
popf
mov
jg
sub
rcrl
sbb
pop
add
add
pop
and
pop
mov
loope
mov
in
arpl
pop
cmpsb
sbbl
in
cmp
mov
sub
dec
push
aaa
addr16
inc
mov
out
or
test
aam
ds
dec
scas
add
and
cmp
inc
nop
test
sbb
push
ds
inc
shll
hlt
adc
dec
fbstp
push
sbb
push
fisubl
out
ret
jecxz
ror
mov
mov
adc
outsb
fs
sbb
xchg
add
movsl
pop
into
pushl
jo
adc
in
loop
pusha
add
add
mov
cli
into
pop
popa
leave
imul
jns
and
push
in
adc
dec
pop
sti
gs
dec
or
cmp
cwtl
mov
jae
fcompl
lods
xor
or
or
stos
fcompl
add
pop
dec
dec
mov
mov
sbb
stos
shlb
shll
fs
daa
mov
add
push
jne
sub
stos
or
pop
cmpsb
out
sub
rcrb
test
popa
jl
pop
gs
dec
mov
mov
loope
mov
setle
popl
cmpsl
aas
mov
cltd
cli
cmpsb
pop
cmpsl
movsb
stc
add
mov
mov
xchg
dec
pop
add
les
jp
xor
fwait
push
daa
dec
push
out
jae
pop
sbb
in
inc
mov
in
cld
jle
push
push
das
xor
aaa
and
fstp
scas
popf
xor
inc
inc
inc
push
sub
ljmp
pop
or
adc
pushf
cmpsb
xor
xchg
ret
adc
outsb
fimuls
xor
jp
mov
fnstenv
sbb
lea
jae
filds
popf
dec
adc
cltd
jp
pop
data16
out
cld
cmc
or
push
sahf
imul
inc
cltd
and
cli
push
in
adc
sbb
negb
dec
pop
outsl
sti
popf
adc
lock
stc
cmp
fadds
dec
mov
mov
mov
in
add
xchg
cmpsl
out
inc
test
cmc
xchg
dec
lock
aas
jae
push
jbe
popa
xchg
mov
cmp
and
add
or
xchg
mov
xor
xchg
insl
pop
mov
mov
and
mov
dec
xchg
inc
movsb
sub
ret
pop
sbb
int
jp
adc
ror
imul
rcll
dec
andb
inc
lret
rorl
mov
ret
jge
add
out
jmp
jmp
and
mov
xchg
out
or
xchg
xor
sbb
lret
test
fstps
mov
and
or
ljmp
call
out
lahf
loop
push
inc
adc
cmp
daa
mov
je
shlb
pop
xor
sbb
inc
lcall
inc
scas
push
sub
xchg
xchg
bound
push
call
ret
add
mov
push
fnsave
insl
jne
mov
or
js
in
ror
out
out
cmp
pop
notl
test
fnsave
outsl
aas
shl
nop
test
popa
mov
pop
nop
andl
xor
inc
jns
mov
aaa
lods
int3
lcall
lret
imul
movsl
fldcw
push
mov
sbb
ljmp
fcmovnu
xchg
xor
mov
inc
insl
cld
fsts
cmp
pushf
mov
out
gs
add
mov
lahf
lea
mov
add
push
mov
adc
mov
pop
iret
sbb
inc
pushf
jnp
mov
out
push
sbb
fidivrl
jmp
and
xchg
inc
lds
out
addr16
and
notb
add
mov
jle
pop
or
sbb
test
mov
mov
ja,pn
adc
in
mov
lea
add
pop
add
cmp
adc
mov
jb
lock
jecxz,pt
push
sub
mov
sarl
sub
mov
test
inc
repz
xchg
fildll
lods
lock
lds
pushf
pusha
mov
mov
mov
pop
dec
int3
jp
shlb
dec
ret
push
test
cmp
add
adc
mov
cmc
inc
cmpsb
or
arpl
ds
in
insl
mov
jo
aas
ljmp
pop
icebp
incb
jg
xor
inc
jne
jecxz
mov
dec
test
insb
mov
insb
subb
pop
push
hlt
and
outsb
insl
mov
pop
add
mov
test
cltd
sahf
mov
loope
gs
xor
inc
outsl
xlat
popa
dec
bound
mov
addr16
das
push
bound
lret
gs
sub
or
sub
xor
dec
cwtl
cmp
mov
sbb
loop
scas
mov
aam
push
jbe
mul
mov
jge
aam
setae
popf
pcmpeqw
rcrl
sti
mov
outsl
xchg
adc
mov
push
roll
cs
je
ljmp
es
jmp
jmp
bound
cmpsb
adc
dec
roll
mov
pushf
lea
jo
cmp
pop
in
pusha
loope
adc
pushf
jne
and
cs
movsl
xchg
add
decb
rcrl
les
fnstenv
insl
or
inc
sub
mov
pop
pop
mov
ljmp
fs
test
push
fld
lahf
xchg
add
icebp
sub
lds
pop
pop
sbb
imul
mov
xchg
cmp
ret
xlat
fildl
icebp
sbb
ficoms
adc
xor
in
pop
test
scas
movsb
sbb
out
push
movsl
in
pop
outsb
jl
negl
in
sti
dec
shll
das
lds
loopne
add
push
dec
sti
sbb
jnp
xor
cmc
xor
sbb
mov
push
aad
fisttpl
add
xorb
mov
jmp
test
clc
rorb
outsb
pop
cmp
dec
dec
and
inc
mov
jnp
lods
inc
fisubs
jmp
imul
sub
and
dec
sbb
repnz
add
add
push
sbb
hlt
mov
sbb
adc
push
inc
mov
insl
mov
jnp
jns
lret
dec
outsl
fldenv
push
aaa
sub
jge
dec
mov
insl
adcb
fxch
fildll
sub
daa
ret
fiaddl
inc
dec
fmuls
add
outsl
ss
mov
cmpsb
lret
sub
xor
fs
pop
sub
aas
adc
icebp
push
xchg
cmp
inc
sbbb
lret
test
xchg
mov
mov
addr16
es
into
pop
icebp
jbe
loope
or
stc
in
cwtl
mov
mov
pop
stos
jnp
cli
cmc
hlt
outsb
mov
xor
sahf
dec
add
call
jmp
sbb
xchg
cmpsl
inc
cmp
mov
in
lcall
sub
outsl
stc
ja
fimull
mov
lods
cwtl
hlt
sahf
mov
loop
sbb
xchg
insl
push
sahf
lea
and
push
cmp
sbb
sub
mov
dec
js
xor
ss
popl
cli
xor
jo
xor
add
cwtl
inc
fisubrl
mov
in
xchg
mov
shlb
out
movl
cs
jbe
ficompl
pop
push
jne
jmp
adc
iret
xor
aaa
int3
mov
negb
mov
jmp
pusha
pop
mov
aad
jnp
mov
push
pushf
mov
shlb
js
jmp
adc
mov
cmp
inc
sahf
insl
sub
lock
add
daa
imul
test
xchg
sbb
adc
push
jne
int3
enter
or
aas
cltd
xchg
add
in
aaa
test
xorb
scas
mov
and
aam
mov
in
sbb
xchg
jno
xchg
add
mov
stos
mov
lods
cmpsl
scas
pop
dec
icebp
jg
xchg
jl
mov
fmull
cs
xchg
dec
lcall
nop
lret
icebp
std
and
inc
mov
pop
pop
inc
sub
mov
fmuls
dec
adc
mov
int3
lcall
cmp
pop
xchg
in
or
stos
popa
repz
sbb
int3
insb
imul
sub
add
int3
loopne
enter
push
mov
push
jl
aaa
into
repnz
bound
add
pop
adc
lds
jno
stc
into
jp
rcrb
bnd
pushf
dec
mov
ja
decb
sub
sbb
cltd
pop
je
sar
outsb
dec
dec
lcall
imul
mov
sub
daa
mov
incl
xchg
scas
aad
lea
out
pop
fbstp
pop
adc
shlb
flds
flds
movsl
cmpsl
push
mov
xor
out
mov
cwtl
scas
js
fldl
dec
mov
call
and
loop
in
mov
push
xchg
mov
int3
popa
cs
fnsetpm(287
cld
jnp
insb
sar
dec
mov
ja
and
sub
repnz
out
mov
inc
jnp
xchg
push
sbb
xlat
push
rcll
mov
call
fisttpl
add
mov
xor
xchg
xlat
scas
fiadds
pop
outsb
loop
mov
movsb
pop
lods
mov
cmp
jp
ret
les
jmp
lock
pusha
adc
xor
sub
and
dec
xor
sub
mov
xor
ret
xor
adc
jl
repz
mov
push
testb
lret
or
inc
ficoms
imul
xchg
xor
push
cli
movsl
inc
movsb
sub
shll
sti
pop
movl
gs
mov
in
pushf
push
aas
jge
jl
sbb
jmp
cld
mov
mov
or
loop
jo
sub
xor
sub
aad
pop
dec
shll
push
and
fisttpl
lock
insb
insl
cmp
or
dec
adc
sbb
sbb
jecxz
lods
mov
enter
jmp
pop
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
jmp
clc
inc
xor
mov
repnz
clc
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
add
sahf
inc
xchg
lahf
push
inc
cmp
dec
add
adc
rcl
xor
les
pop
xor
fsubl
dec
push
pusha
ja
loope
subb
int3
and
sub
xor
mov
xchg
sarl
mov
jg
aaa
push
lahf
daa
jl
dec
cmp
dec
sub
push
adc
dec
imul
mov
mov
sbb
mov
jecxz
mov
dec
ljmp
daa
or
sarb
stc
push
out
mov
pop
jne
push
dec
cmp
jl
dec
aad
bound
push
dec
mov
sti
fs
dec
sub
in
inc
je
or
xor
mov
in
stos
xchg
testb
push
mov
push
sub
push
mov
or
xor
scas
in
inc
je
or
inc
mov
test
inc
xor
mov
or
mov
mov
jmp
sub
inc
xor
mov
std
inc
je
or
xor
mov
or
xor
mov
mov
push
mov
xor
inc
mov
in
inc
je
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
push
ds
mov
push
sub
inc
mov
or
or
inc
je
sub
inc
xor
je
pop
sub
inc
mov
in
inc
je
or
inc
mov
in
inc
je
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
or
xor
mov
pop
sub
inc
mov
dec
pushf
add
out
adc
jo
lods
pop
rcll
fmuls
and
sbbb
adc
nop
mov
pop
inc
lea
out
push
add
std
sbb
test
mov
xor
mov
enter
lret
xor
cli
mov
sti
mov
cld
movsb
inc
rol
lahf
jge
and
or
fdivs
mov
xor
cmpsb
mov
xchg
mov
push
mov
icebp
push
inc
pushf
jae
out
je
data16
mov
or
inc
pop
imul
xchg
ja
inc
sub
mov
dec
aaa
sti
and
rorl
adc
cmp
idiv
mov
pop
je
fstpl
gs
adc
mov
xchg
mov
das
imul
or
out
jb
jg,pn
adc
fists
mov
cs
inc
jmp
add
mov
cmp
es
fcomps
stc
dec
push
mov
mov
pop
nop
dec
testl
push
xor
cs
insb
inc
jbe
push
or
sbbl
lcall
in
mov
js
dec
rorb
pop
and
in
fsubp
inc
mov
cmpsb
int3
sti
test
rep
cmp
in
mov
push
test
xchg
ret
adc
xchg
outsb
add
ret
jnp
mov
xlat
push
or
imul
popl
orl
cmp
aaa
push
and
sti
sub
hlt
inc
push
sbb
push
pop
jge
rcr
out
call
push
ljmp
pop
int3
dec
adc
xor
into
sbb
cmc
cs
jne
dec
rcr
mov
or
mov
dec
out
sbb
mov
cmp
jae
fwait
lods
xor
or
mov
inc
mov
dec
test
cmc
jle
xlat
lea
notb
aam
jnp
insl
testl
sub
jp
mov
mov
fcomps
das
push
mov
imul
rcl
scas
aam
add
jp
imul
inc
mov
arpl
push
sti
stos
rclb
jnp
lods
cmovno
mov
add
addr16
cltd
cld
jnp
pop
push
idivb
aaa
daa
scas
dec
jg
inc
adc
mov
pop
inc
mov
in
and
or
xor
pushf
shrb
enter
mov
mov
push
sbb
cmpb
add
in
mov
sub
scas
aad
and
ret
sbb
dec
into
lcall
mov
insb
xchg
xchg
outsl
cmp
pop
sti
ret
xor
movsl
mov
and
ds
scas
pop
inc
pop
fsubrl
lock
or
imull
push
push
push
sbb
divl
mov
mov
mov
mov
mov
pusha
push
lods
fsubrl
dec
js
out
adc
mov
jno
pop
movsb
pop
jge
mov
mov
outsb
cmpsl
pusha
push
clc
fldcw
sub
jns
xchg
mov
mov
out
sub
xor
xor
lahf
jo
ficomps
loope
fwait
clc
lea
sub
cs
adc
out
sbb
mov
dec
stos
push
jg
inc
pop
ret
sbb
gs
sub
cmp
sub
and
pop
pop
fcomps
or
sub
push
lahf
xchg
shl
mov
push
adc
push
mov
adc
mov
fstpt
pop
in
in
sti
inc
inc
fs
addr16
shll
sbb
iret
jg
sbb
jo
ja,pn
les
clc
sbb
aam
rcrl
les
xor
insb
iret
sub
mov
mov
inc
pop
dec
and
repz
add
loopne
xor
push
pop
cmpsl
adcl
cmp
into
pop
adc
std
mov
sub
sbb
cmc
addl
out
inc
std
dec
inc
sbb
movsl
xor
lahf
push
ljmpw
push
int3
inc
fnstcw
imul
sub
mov
mov
lea
lock
jno
pop
fsubl
jg
sahf
out
mov
sbb
popf
push
jmp
stos
cmp
push
sarb
jge
or
enter
gs
repz
and
movsl
popa
imull
mov
in
ds
aaa
ds
scas
sbb
ljmp
mov
inc
adc
cld
aas
inc
or
roll
les
pop
dec
or
stc
in
mov
jnp
dec
lahf
aam
jbe
mov
loopne
std
pop
jg
loop
inc
bound
mov
or
es
std
xor
push
mov
adc
fildll
pop
mov
mov
xlat
outsl
ret
mov
cmp
pop
cmp
out
and
push
pop
push
ds
pop
push
sbbb
push
cli
inc
in
add
inc
push
sub
test
stos
iret
xchg
sub
push
mov
sbb
scas
pop
pop
xlat
in
add
mov
testl
xor
pushf
jg
adc
jg
pop
ret
mov
xor
ret
or
sbb
int
cld
xchg
push
xor
jno
adc
les
and
cmpsb
lock
aas
fiadds
mov
xor
ds
inc
dec
cmpl
outsb
ficoms
and
mov
shr
mov
decb
aam
sub
inc
cmp
push
in
repnz
sbbl
mov
sahf
out
ljmp
sbb
adc
jecxz
sub
mov
icebp
rcrb
pop
lods
aaa
in
fs
jno
sbb
bound
and
sub
scas
test
andb
cli
lock
insb
divb
mov
mov
test
pop
aad
or
sub
gs
mov
fwait
cmpsl
pop
imul
int
dec
test
ret
add
and
adcb
stos
push
movsb
cmp
mov
jp
cld
aas
xchg
xor
pushl
xor
mov
mov
adc
xchg
sbb
pop
scas
dec
mov
cmp
in
cmc
lcall
pop
repz
lret
enter
dec
mov
mov
xor
add
xchg
jo
int
add
cmpsl
je
es
pop
inc
jo
jae
cmp
and
mov
mov
je
es
mov
daa
jl
lret
xchg
push
shrl
mov
loope
and
cld
fs
xor
fldt
sub
pusha
pop
cmc
std
cmp
daa
xchg
fnsave
enter
rcrl
push
dec
or
pop
and
js
movsb
or
push
pop
ljmp
mulb
insl
lret
dec
scas
out
int3
das
popa
jae
mov
xor
lods
stos
clc
sbb
adc
cwtl
ret
rcll
int3
sti
mov
rcll
jbe
xchg
sbb
in
outsl
mov
dec
xabort
pop
push
cmc
push
pop
in
jns
hlt
movsb
and
xchg
add
sub
sbb
data16
mov
push
jecxz
gs
je
mov
fistpl
cmc
aas
add
popa
lock
push
loopne
call
int
test
mov
testb
xor
dec
and
fwait
pushf
dec
mov
pop
jmp
div
lods
hlt
insl
cld
mov
vcmppd
jnp
mov
out
inc
shll
mov
dec
lahf
add
pushf
push
sarl
clc
mov
or
add
mov
mov
in
cld
jmp
shll
call
mov
xchg
pop
inc
ss
idiv
jle
or
testb
cmpsb
stos
cmpsl
fdivp
aam
mov
mov
sub
loope
scas
add
pusha
jo
jnp
inc
stos
movsbl
rcrl
dec
lahf
sbb
inc
fimuls
jnp
mov
fcom
repz
add
cmp
and
outsl
xor
js
das
subl
arpl
call
jb
out
push
adc
adc
mov
push
lods
cmp
pop
gs
shl
fcmovbe
and
int
shlb
mov
cmp
aam
add
fsub
aad
out
mov
pop
stc
mov
lret
dec
cmp
mov
fiaddl
lret
xchg
daa
mov
push
xchg
lods
cli
sbb
pop
cmpsb
jbe
sarl
and
push
dec
pop
pop
mov
add
xchg
in
shlb
jae
or
aad
aam
mov
aaa
xchg
andb
push
or
cld
negl
cmpsl
rsm
sbb
or
mov
xchg
lds
dec
rolb
leave
pop
inc
mov
dec
mov
inc
dec
sahf
mov
cmc
lock
les
insl
lods
jno
or
or
lods
push
xchg
ds
xlat
xchg
xorb
sbb
pop
mov
fstpl
jo
nop
cmpsb
je
mov
lahf
mov
popa
gs
addl
dec
and
xor
fwait
pop
jbe
mov
leave
mov
xor
sub
fdivl
or
cmpl
gs
push
xchg
test
stos
xchg
push
jb
mov
out
mov
pop
xor
cmp
add
adc
aas
insb
dec
lock
les
xchg
pop
cmp
mov
pop
insb
xchg
addr16
pop
pop
lods
gs
ret
fmuls
pop
and
cmp
and
fidivs
int3
out
mov
pop
aas
adc
pushf
fisttpll
scas
out
lods
sub
mov
mov
cltd
sub
pop
add
mov
int3
sub
mov
jp
orl
add
xchg
les
divl
imul
in
inc
add
mov
ret
insb
sub
adcb
imul
push
mov
fsubrs
lods
aad
cmp
movsl
inc
xchg
imul
sti
cmc
xor
mov
fiadds
in
loopne
in
imul
pop
mov
mov
ret
xor
adc
add
xchg
scas
stos
inc
inc
das
adc
insb
mov
jnp
xchg
sar
jo
mov
cmp
sahf
flds
rorb
push
mov
mov
int
icebp
add
and
add
xchg
rolb
rcr
pop
push
js
mov
aad
mov
add
inc
xlat
notl
mov
loope
xor
outsl
enter
into
jge
push
orb
fxtract
fisttpl
xor
int3
xchg
lods
mov
test
pop
ret
fstps
fidivrl
xor
test
int
fldcw
jae
sub
xchg
xor
fs
mov
jnp
xor
and
mov
xorl
and
fisubrl
xchg
push
push
sub
add
ds
int3
out
es
lret
cmp
stos
lcall
js
mov
daa
add
rolb
sub
mov
push
shl
subb
xlat
dec
xor
jmp
enter
inc
mov
xor
fdivp
stos
xchg
stos
dec
jae
sub
dec
decb
inc
pop
filds
insl
and
adc
push
lret
mov
inc
adc
aam
mov
sbb
sbb
add
push
xchg
jno
cld
in
mov
clc
jg
das
fistl
cmp
and
dec
inc
add
fimull
cli
mov
and
daa
xchg
xchg
loop
aaa
in
sbb
mov
mov
pop
cmpl
xor
gs
enter
xchg
bound
mov
cld
fdivrl
mov
les
hlt
stos
mov
xor
mov
sahf
mov
sub
fstp
loop
lcall
mov
andl
cmc
sub
sbbl
jo
adc
dec
bound
adc
aaa
sub
cmp
sbb
inc
aad
xchg
je
call
xor
mov
mov
or
in
enter
mov
std
lret
rorb
mov
mov
loope
cmp
fistpll
fs
shlb
sbb
out
xchg
imul
inc
lret
ljmp
call
jp
stc
sbb
push
and
pop
inc
or
xor
je
pop
adc
xorb
mov
scas
sarl
and
jo
ret
insl
aas
lds
addb
jns
mov
cwtl
je
inc
sbb
test
xor
fistps
pop
dec
out
push
outsl
jge
push
sarb
loopne
outsl
or
lock
inc
pop
in
jmp
das
jbe
adc
in
push
mov
or
subl
lds
add
lret
dec
hlt
mov
dec
in
mov
jl
loope
sub
inc
mov
lcall
lret
outsl
mov
mov
or
test
pop
jns
xlat
jl
insl
and
filds
test
test
sbb
xor
scas
or
sbbb
mov
aam
cs
sbb
cld
movsl
push
dec
pop
ljmpw
cmp
hlt
adc
out
push
rcll
push
movsl
lock
fsubrl
jle
and
xor
inc
pushf
xor
sahf
dec
dec
or
vcvtsd2si
pop
ds
leave
jbe
add
adc
aam
mov
loopne
xor
adcb
inc
push
out
popf
idivl
call
call
mov
pusha
or
lds
adc
mov
push
mov
mov
adc
lock
jg
inc
jg
pop
pushf
pop
jmp
mov
popf
out
test
and
iret
and
pop
scas
inc
add
push
mov
dec
sub
sti
fcmovu
mov
mov
mov
fadds
dec
int3
cmp
roll
sbb
stos
jne
inc
dec
cmp
imul
jno
jae
mull
xchg
dec
xor
lret
xchg
mov
mov
ret
push
nop
lret
jg
loope
add
sbbl
sub
push
nop
or
jle
mov
insb
and
cmp
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shll
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
popa
inc
add
popa
inc
add
bound
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
arpl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
inc
add
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
addl
addl
test
adc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
