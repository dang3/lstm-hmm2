sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
fwait
daa
mov
cwtl
jl
add
orw
loop
pusha
out
push
sti
cmp
push
sbb
jge
adc
lds
popa
lock
movsl
sbb
push
push
pop
inc
xor
sbb
ret
xchg
lret
cmp
ret
cmp
nop
xchg
cmp
cmp
mov
cli
shr
or
cmp
int3
aam
xchg
aad
jle
xchg
xchg
ret
imul
scas
addr16
sar
ret
shrb
push
jnp
and
daa
cltd
mov
mov
outsb
pop
or
pop
xor
ja
xchg
or
decb
lea
lea
out
int
movsb
sub
ja
and
popa
dec
iret
cmp
ds
pop
mov
les
sahf
repnz
mov
ljmp
sub
cld
lret
inc
pop
hlt
or
int3
adc
vshufpd
jmp
pop
mov
loopne
mov
sbb
jle
sbbl
lret
mov
jp
sub
ficomps
je
negb
outsb
stos
and
pop
out
cmc
xchg
data16
mov
test
fisubrs
fidivrs
mov
jbe
lds
sub
adc
in
sbb
out
dec
out
lcall
sbb
test
push
loop
sub
icebp
sbb
jne
inc
notb
pop
jbe
fdivl
cmc
push
or
push
out
imul
lret
sbb
aad
ja
jl
push
inc
cmp
add
adc
xchg
int
pop
repnz
mulb
fiadds
mov
cmp
xchg
pop
cltd
push
lret
mov
sbb
mov
pop
subb
out
sbbb
xchg
mov
jbe
xchg
fs
jo
add
mov
xorb
and
xor
xlat
dec
push
sbbb
sbb
or
cltd
int
imul
jp
mov
jno
cs
push
add
ljmp
dec
mov
mov
xchg
mov
inc
pushf
ficomps
sub
mov
jne
xor
cmp
loop
lds
in
out
lea
add
jbe
adc
xor
push
sbbb
mov
aam
ret
bnd
cwtl
lahf
and
ret
xor
out
lahf
decl
adc
cmp
mov
xor
scas
ret
inc
cmp
leave
cmpl
adc
push
mov
sub
in
out
dec
das
xchg
shlb
xchg
pop
data16
std
cmp
incl
aad
mov
jnp
inc
jnp
aaa
adc
outsl
mov
stc
dec
dec
shlb
imulb
adc
sahf
jns
pop
repnz
aas
cmp
add
out
cwtl
shlb
cli
nop
out
mov
pop
int3
shll
js
cmp
mov
push
out
into
xchg
setl
sub
cmp
aam
sub
cmc
lahf
jecxz
dec
sti
bound
and
stos
inc
movsb
dec
and
aam
sbb
ficompl
sbb
cld
push
lret
es
pop
les
pop
shll
int3
fistpl
hlt
jns
push
dec
sbb
or
jae
ret
pop
fmull
ss
icebp
jbe
jp
add
inc
xlat
and
movsl
insb
dec
pop
mov
xchg
sbb
scas
in
inc
in
cmp
stc
pop
mov
jns
push
je
mov
jns
xor
inc
mov
sub
ljmp
call
in
sub
into
jmp
inc
or
mov
pop
or
movb
jns
adcb
sbb
sub
mov
out
and
sbb
cli
cld
pop
lcall
sbb
add
inc
xor
lds
dec
mov
fbstp
mov
daa
jbe
jnp
and
sub
out
in
pusha
dec
mov
pop
popf
pop
loope
in
into
outsl
push
fucomp
and
int
add
and
pop
and
fldcw
jno
jb
jp
mov
push
das
and
ret
data16
jg
fcomi
fidivrs
inc
iret
cmp
mov
ret
hlt
insb
scas
push
out
mov
aad
push
jno
mov
sub
mov
jge
and
jmp
pop
rdmsr
call
stc
cmp
xchg
daa
add
push
cmpsl
call
mov
movsl
fcoml
adc
in
int3
aam
mov
repz
sub
push
in
push
out
aas
mov
pop
hlt
icebp
ficompl
fwait
pop
rcll
cmpsl
mov
and
adc
test
fidivrl
insb
call
in
mov
fidivrs
dec
shlb
iret
repz
iret
cs
inc
and
xor
int3
push
cmpsl
popa
lock
icebp
push
gs
and
dec
push
or
jp
push
stc
lods
ja
sahf
dec
mov
push
push
push
push
add
mov
xlat
cmp
gs
mov
scas
sahf
outsl
clc
add
jae
mov
mov
imul
out
lock
push
mov
cmpsb
sbbb
test
icebp
push
adc
jae
insb
popa
and
jb
gs
pop
sbb
mov
inc
enter
push
or
and
pop
stc
cmpsb
mulb
aad
dec
pop
xor
mov
sbb
cmp
push
cld
test
jmp
mov
pusha
sbb
inc
je
subl
lret
scas
pop
sbb
or
mov
pop
lahf
outsl
jns
inc
push
push
adc
popa
and
jge
push
xchg
mov
and
cmp
in
or
cltd
xorb
dec
xor
push
lea
sbb
arpl
mov
jae
arpl
lds
out
mov
xchg
leave
pop
hlt
imulb
sub
data16
mov
sub
pcmpgtd
int
test
mov
lds
in
mov
stos
ss
cwtl
loopne
fimull
inc
push
jmp
ret
in
sbb
push
inc
ja
fisubs
mov
sub
cwtl
cmp
push
pop
outsb
mov
xor
leave
mov
test
pop
in
mov
lods
lods
out
in
pop
add
popf
and
mov
pop
mov
movsb
rorl
call
cmp
mov
cmp
add
subl
nop
or
shll
or
sub
sub
lret
rcr
xchg
xor
sub
repnz
jmp
inc
mov
jge
dec
push
popa
or
and
pop
adc
mov
push
and
xor
out
sub
aam
sub
out
pop
pop
push
in
cmpsb
scas
imul
jo
clc
mov
push
mov
or
or
jae
test
fistpll
fwait
inc
aas
shlb
lea
popf
loopne
jo
jl
push
adc
out
add
cmp
sahf
popl
adc
ja
dec
mov
inc
sub
fwait
popf
adc
loopne
fdivl
mov
mov
add
sbb
dec
sbb
out
mov
mov
andb
push
cmp
stos
pushf
inc
int
jle
iret
cmpsl
add
sbb
pop
cmpsl
test
cmp
push
push
mov
leave
sub
lret
test
enter
cwtl
cmpsb
or
daa
and
divl
jne
sub
std
shrb
pop
mov
dec
cmc
cmp
filds
jnp
rol
fsubrl
shr
mov
stos
mov
test
push
ja
fdivrs
pop
pop
push
or
push
push
fwait
lea
add
sub
mov
insb
sub
inc
ds
sub
mov
and
mov
xor
out
adc
push
in
pop
lret
jge
add
push
dec
xchg
sub
push
mov
dec
add
sbb
les
or
xor
xchg
sub
or
sub
cmpsl
int
icebp
insb
push
add
movsl
leave
fs
mov
jecxz
and
jo
mov
jns
adc
lcall
fisttpl
mov
jbe
xchg
cmp
xor
dec
std
mov
and
mov
mov
push
xchg
mov
and
push
dec
jns
and
sub
mov
jae
push
cmp
movsb
mov
mov
sbb
or
jge
insl
lock
and
mov
sahf
stc
punpckldq
stos
push
push
mov
xchg
or
imul
addr16
sub
arpl
sbb
arpl
cmc
sbb
jb
popa
aam
and
add
dec
mov
and
mov
cmpsl
fistpll
es
xlat
mov
cmpsl
sub
les
cld
fadds
mov
fistps
add
sbb
es
je
xchg
lcall
jge
mov
push
sbb
stos
push
dec
xchg
bound
insb
sub
movsl
push
xchg
mov
or
jb
jns
lea
repnz
pop
push
and
fcmovbe
sahf
or
outsl
jmp
dec
hlt
daa
mov
fisubrl
push
inc
ss
cld
push
lds
add
dec
and
ds
iret
jge
adc
sahf
jnp
push
divb
lds
jecxz
add
or
pop
aaa
and
in
daa
mov
mov
jnp
adc
nop
imul
or
pop
fldenv
mov
call
lods
pushf
imul
adc
daa
test
dec
jns
fimull
wbinvd
jne
popa
or
in
sub
pxor
or
push
idivl
jp
pop
or
inc
clc
cwtl
xchg
push
aaa
xchg
xor
mov
std
xchg
sbb
repnz
jge
nop
sbb
inc
lods
pop
cmp
mov
clc
cmp
add
ret
imul
les
cmp
sub
scas
jne
push
sbb
fcmovbe
xchg
dec
rolb
divb
xchg
clc
jmp
aam
sbb
hlt
sti
fstpl
add
leave
add
cmc
std
cmp
cmp
ljmp
ficompl
sti
xchg
and
imul
add
imul
xor
push
adc
xor
sbb
mov
arpl
sub
fbld
fstpl
ja
repz
push
stos
xor
pop
and
int
push
push
adc
pop
mov
adc
push
inc
pop
mov
xchg
notb
lcall
mov
push
cmp
push
mov
lods
adc
in
mov
in
mov
pop
stos
pop
push
adc
fsubr
mov
decl
xchg
cmp
mov
push
pop
mov
je
shl
loope
adc
inc
push
shlb
loopne
outsl
or
sbb
push
std
pop
in
movsl
push
and
dec
ljmp
mov
ja
cmc
mov
jbe
aad
out
cmpsl
in
inc
and
adc
jle
sahf
add
jge
xor
test
add
addr16
js
add
mov
add
xchg
mov
pop
push
movsb
shlb
gs
xor
sar
inc
and
cs
cmp
pop
pop
inc
out
add
popa
pop
rcll
pop
icebp
mov
cli
or
or
pop
mov
xchg
xor
mov
mov
mov
adc
push
push
movsl
hlt
jne
pop
loope
sbb
out
loope
rclb
jecxz
adc
testb
xchg
sub
sbbl
ficoml
cwtl
movl
in
jae
mov
pop
jns
fistpl
push
lret
addr16
and
mov
mov
out
adc
push
cmp
xor
mov
ss
clc
gs
or
jne
cli
int3
adc
ret
mov
sti
popa
jle
rcl
jo
pop
add
mov
subl
andl
jle
jns
les
xchg
cltd
test
sbb
int3
xchg
mov
cmp
popa
jnp
je
out
daa
inc
xchg
scas
fwait
or
push
push
cmpsl
jg
pushf
bound
test
sbb
jle
in
ret
cmc
sbb
je
shlb
jecxz
insb
cmp
filds
jmp
mov
lret
pop
cmpl
push
dec
outsb
and
jnp
push
cmp
stc
out
orl
mov
into
push
adc
xlat
sub
jbe,pn
adc
popa
jp
xor
aam
adc
test
xchg
adc
data16
push
push
xchg
hlt
and
icebp
outsb
repnz
push
fwait
push
jo
xchg
in
pusha
or
adc
cmp
pop
js
std
and
ljmp
adc
gs
mov
in
or
outsl
test
fistpl
jp
inc
cmp
out
mov
outsl
cld
add
sub
adc
mov
jp
leave
mov
xlat
mov
and
std
and
orb
pop
sub
imul
mov
pop
fnstsw
cs
inc
stc
insl
inc
jne
adc
push
jecxz
cmp
mov
mov
sub
dec
or
cld
rcrb
filds
mov
inc
lea
pop
repnz
mov
bound
ljmp
fcomps
out
js
mov
xor
jo
adc
inc
adcl
cmp
test
pushf
in
in
mov
lcall
push
iret
aad
sub
out
repnz
or
mov
les
pop
imull
cmp
push
lahf
pop
push
xchg
inc
fwait
cmc
mov
cmp
xchg
xchg
loopne
cld
xchg
sbb
push
jl
das
roll
div
and
nop
outsl
jmp
das
call
adc
xlat
xor
je
adc
lcall
dec
mov
add
mov
call
mov
add
push
lods
dec
jl
and
test
cmp
stc
sbb
inc
lds
push
ret
jecxz
stc
imul
sub
mov
sub
adc
in
test
adc
or
pop
sti
enter
push
cld
xor
aad
scas
jmp
jecxz
xchg
mov
fucom
pop
adc
adcl
or
jo
pusha
fldl
rclb
setbe
or
aaa
lret
scas
jmp
adc
cmpsb
clc
fwait
push
aaa
lods
pop
push
mov
rol
ds
adc
xlat
cmp
outsl
leave
aas
sarl
inc
stc
pop
aas
fs
mov
lods
pop
loopne
in
int3
push
pop
dec
mov
cmp
xor
scas
aad
aaa
ficomps
arpl
cwtl
lea
mov
das
mov
leave
jb
sbb
add
movsl
and
add
lret
popf
mov
xor
sarl
push
lret
iret
outsb
push
mov
adc
stos
sbb
pop
xor
inc
mov
dec
jns
test
sarl
cmpsb
subl
inc
jbe
xor
xchg
push
inc
cli
mov
mov
mov
rcr
inc
push
push
jne
sub
testb
das
cli
leave
mov
push
push
jp
mov
icebp
sbb
mov
and
imul
cmp
fcoml
mov
xor
out
and
cs
jnp
iret
inc
mov
mov
arpl
adc
cmp
jns
gs
negl
idivb
sahf
faddl
cmp
pop
sti
dec
cli
fcmovb
dec
pop
loop
push
add
das
jle
sub
push
cmp
cmp
shrl
nop
mov
add
repz
idivl
jmp
imul
not
push
add
dec
shlb
nop
xor
push
das
popa
shlb
adc
fadd
push
cs
jle
push
shlb
clc
jl
rcr
mov
sub
test
repz
cmpb
sbb
or
cli
movsl
xor
mov
and
mull
sub
push
sub
loope
ds
jno
fstps
mov
mov
xchg
inc
add
scas
adc
add
dec
fisubrs
cmp
pop
lock
lea
push
push
push
stos
add
and
mov
push
xor
fimuls
xchg
gs
pop
and
dec
mov
int3
arpl
sbb
mov
xor
cmc
mov
repnz
aad
pop
subl
dec
loop
xlat
rcl
mov
inc
jne
imul
adc
push
mov
jne
out
loopne
fiaddl
loop
in
mov
mov
inc
and
xchg
int
mov
popw
repz
push
add
push
or
std
scas
xor
lret
push
xchg
aam
out
test
ljmp
pop
subb
jo
call
jae
sbb
sbb
int
jo
add
pop
aaa
or
adc
aad
and
out
scas
or
xor
in
adc
nop
lods
xor
cmp
add
xlat
outsl
cmp
mov
and
dec
mov
bound
pop
adc
mov
ret
arpl
push
ss
mov
in
stc
je
aad
cs
cmc
dec
rclb
add
xor
lret
fidivrl
enter
lods
das
or
and
jmp
jbe
push
pop
dec
push
xor
add
dec
daa
sub
add
pushf
test
push
andnps
cs
cmp
int3
outsl
cltd
test
pop
cmp
cmpsb
jmp
cmpsb
vmovdqa
popa
add
icebp
rorb
mov
or
mov
push
mov
fcmovb
aam
shl
int3
sarb
push
mov
adc
scas
cwtl
mov
push
rcll
push
fimull
inc
idivl
sub
pusha
out
stos
out
imul
mov
or
jb
pop
call
incb
cld
push
fistps
cmp
lahf
mov
sub
fcompl
je
mov
add
sub
lods
enter
cmp
rorb
pop
jno
or
sbb
fnstcw
inc
adc
popf
aam
out
mov
xor
les
lret
sub
mov
xchg
fcmovu
xlat
test
sarb
shrl
sbb
inc
xor
les
push
push
cli
xorb
inc
mov
adc
xchg
or
dec
xor
mov
lahf
add
les
cmpsb
inc
leave
pop
aad
sub
out
mov
adc
bnd
mov
sahf
inc
and
xchg
leave
dec
mov
rclb
cmp
aam
imul
loope
leave
arpl
rcrl
imul
and
mov
jecxz
mov
das
adc
or
adc
mov
push
xchg
jp
adc
mov
mov
mov
dec
sub
lahf
mov
xchg
filds
inc
xchg
pop
xor
lods
xchg
xor
ffree
pop
test
mov
mov
mov
xor
shlb
and
test
jnp
and
sbb
xor
frstor
idiv
repnz
jae
cmp
fistpll
notl
cmp
shrb
loopne
adc
mov
pop
or
dec
gs
xchg
mov
daa
testl
xor
push
bound
ret
sbb
int
arpl
push
pop
inc
in
push
stos
and
in
jl
push
test
cmp
subl
sbb
push
fnstenv
add
dec
sbb
mulb
ss
int
lahf
movsb
jp
fists
mov
push
dec
jg
xlat
ret
jns
dec
mov
lods
push
movsb
jecxz
icebp
in
mov
aam
push
jle
roll
add
jae
sub
movsl
icebp
push
sub
movsl
mov
inc
cltd
lods
xchg
pop
sbb
std
mov
or
lret
xor
push
inc
xor
es
rorl
lahf
nop
sbb
jno
int
adc
icebp
xor
test
sub
sbb
ret
cli
pop
shrb
push
rorb
pop
cmp
jl
mov
sub
or
call
inc
mov
push
sub
and
cli
mov
push
xchg
shrb
cwtl
scas
ljmp
jnp
jecxz
jbe
xchg
testl
adc
lcall
xchg
sub
iret
xchg
sbb
push
nop
xchg
insb
add
push
pop
dec
js
mov
cli
add
jbe
ficomps
cltd
push
xor
pop
mov
or
xchg
jbe
fbstp
loopne
movsb
inc
cmc
or
lods
out
cmp
sbb
or
push
std
aam
cmpsl
cltd
pop
dec
mov
mov
cmp
mov
popa
notl
add
mov
in
push
or
sarb
cmp
stc
mov
mov
les
jg
lret
dec
jg
cwtl
test
push
cmp
and
sti
repnz
pop
sub
or
arpl
add
daa
xor
pop
addb
inc
jp
int
fdivl
insb
sbb
add
mov
std
xlat
rolb
outsl
xor
hlt
jmp
or
xor
xchg
push
mov
xor
popa
sub
movsl
dec
outsl
add
mov
add
lock
arpl
test
push
ljmp
mov
mov
decb
mov
in
movsl
jmp
mov
jb
mov
sbb
clc
movl
mov
mov
dec
adc
enter
mov
jae
mov
mov
mov
mov
jo
pop
xchg
movsb
repnz
sbb
mov
push
in
arpl
sahf
mov
lock
faddl
jno
and
sbb
lcall
cmpsb
mov
and
cld
sbb
pop
or
mov
aaa
fdivrl
jnp
stos
dec
or
insb
clc
ret
mov
and
or
int3
jmp
ds
bound
jb
enter
lahf
addr16
cmp
cwtl
rcrl
jecxz
loop
and
outsl
sbb
mov
push
enter
xchg
outsb
dec
int3
mov
pop
mov
jbe
add
stos
pop
push
in
dec
cmp
inc
xchg
lahf
xchg
cwtl
sub
in
and
xchg
dec
lods
lcall
fwait
mull
scas
rclb
aam
cmp
lods
mov
fnstsw
icebp
mov
aad
dec
add
add
push
ljmp
jg
lods
inc
shll
sbb
sbb
outsb
leave
mov
nop
stc
sbb
and
xchg
fisttps
in
je
pop
and
les
stc
mov
div
jno
push
mov
jnp
dec
adc
mov
rcr
jle
add
mov
repz
sub
jns
mov
data16
adc
jp
inc
shll
hlt
fwait
add
cwtl
sbb
addb
inc
scas
loope
dec
cld
lds
fsubr
jbe
aad
ds
inc
push
fstl
in
mov
bndstx
cmpsl
test
pop
lea
lahf
push
mov
xchg
movl
imul
pop
sub
js
cwtl
popa
mov
out
ret
iret
push
mov
lods
out
mov
addr16
or
daa
mov
dec
adc
sbb
mov
dec
push
jb
shrl
popf
adc
mov
fnstcw
movsb
sahf
negl
dec
sbb
sbb
pop
js
stc
push
movsb
rcll
cltd
pop
loope
in
aad
mov
or
inc
leave
shrb
mov
lret
adc
xchg
insb
gs
test
daa
xor
repnz
lds
lods
dec
es
in
push
jno
xor
pop
push
hlt
fiadds
insl
inc
divl
mov
dec
int3
dec
xchg
pop
xchg
and
sub
xchg
cli
mov
orl
pop
test
xor
pop
mov
xchg
loopne
arpl
scas
and
inc
cmp
dec
insb
jb
leave
pop
fisubl
cld
insb
outsl
lret
sti
xor
bound
out
cld
adc
push
mov
sub
mov
divb
int3
or
pushf
stc
xor
push
fwait
outsb
std
ja
roll
fcomps
lods
jb
inc
es
incl
jl
push
loopne
loop
cltd
les
mov
adc
rorl
std
icebp
mov
lret
pop
lds
mov
push
cmp
int
icebp
push
rclb
sahf
add
scas
xorl
je
in
mov
jne
gs
jle
mov
rorb
mov
inc
stc
popa
ret
imul
mov
xchg
addr16
adc
in
inc
cmpsl
stos
fsubrs
mov
inc
mov
clc
cmc
jbe
mov
dec
aaa
jmp
mull
mov
loop
insb
orl
ds
aad
xchg
setbe
repz
std
dec
mov
shr
pop
push
adc
push
push
and
loopne
roll
shr
fidivs
leave
mov
scas
jno
adcb
fistpl
aam
adc
xor
pop
push
adc
nop
and
stos
add
inc
test
les
jp
push
push
sub
movsl
shll
jne
xchg
adc
fcoms
aad
in
mov
std
sub
push
cmp
fadds
add
push
mov
push
xchg
mov
jg
and
xchg
cmpsb
test
scas
int
in
cmp
dec
xor
jnp
cmp
or
xchg
and
imul
mov
sub
pushw
icebp
xor
xor
stc
aam
int
mov
mov
dec
cmc
jmp
push
jg
xchg
jb
ret
in
sbb
inc
pop
mov
lods
lock
lea
pop
pop
xor
jo
inc
xor
nop
out
fdivp
cmpsl
jnp
push
es
iret
jno
mov
xchg
add
sub
mov
loope
fildl
stc
mov
rorl
loope
jnp
cmp
mov
in
cmc
imul
mov
or
adc
jp
sub
inc
push
rcrl
fdivrs
in
and
sti
lcall
jnp
aaa
mov
orl
add
loopne
cmp
xor
push
inc
lock
loopne
enter
out
xchg
mov
pop
or
shll
call
mov
out
decl
cli
pop
pop
stos
fistpll
xchg
in
push
not
adc
and
mov
cmpsl
subb
imul
popf
inc
daa
sbb
inc
jge
clc
and
push
pop
and
outsl
fsubrs
xchg
je
mov
movsb
clc
test
mov
icebp
and
pop
loopne
mov
jae
or
mov
test
lret
push
jmp
pop
fiaddl
sbb
fidivl
aad
sub
movsb
or
inc
inc
mov
test
int
int
fsubl
inc
cmp
iret
scas
mov
sub
adc
ret
sarb
push
mov
xchg
scas
loope
in
xchg
cld
add
or
inc
into
fxch
xchg
mov
inc
cld
cmp
icebp
test
mov
es
jle
jge
cmpsl
sbb
ret
dec
out
lds
call
jg
xchg
push
pop
fisttpll
int3
sub
and
shlb
xchg
xor
mov
inc
pop
mov
sbb
icebp
or
mov
shrl
or
sub
fimull
xor
je
jmp
addr16
sbb
fistl
imull
inc
das
popa
repz
cmp
push
sbb
jns
dec
adc
into
hlt
lret
pop
popa
add
adc
dec
dec
sbb
or
cmp
and
rcll
lret
paddsb
fcmovnu
push
test
out
add
sub
cmpsl
nop
inc
xchg
nop
stos
lcall
insl
push
mov
cmp
inc
push
push
mov
pop
ss
ja
add
idivl
movsb
jp
jnp
inc
ljmp
pusha
es
jne
loope
lcall
jp
testl
dec
add
mov
mov
mov
test
notb
xor
je
loope
mov
jbe
mov
inc
mov
xor
or
shrb
ret
lcall
leave
mov
xor
or
mov
jnp
xchg
sub
stc
es
pop
imul
jbe
test
out
cmp
push
arpl
aam
mov
push
add
mov
add
cmove
rclb
jno
les
add
ret
or
lock
and
idiv
iret
ret
jbe
xchg
rclb
push
mov
xlat
sub
lcall
lret
push
scas
cmp
jge
aaa
adc
ss
mov
inc
lods
in
inc
jne,pt
pop
loop
fbstp
adc
or
lock
sub
jg
popf
lret
fdivrl
jl
cli
cmp
mov
dec
adc
int3
mov
sti
in
cmpsl
cwtl
pop
outsl
into
xlat
stos
insb
stos
out
and
mov
mov
push
xor
js
and
aas
fidivrl
or
scas
mov
iret
js
jbe
shrl
mov
stc
jmp
adc
in
outsb
sarb
shrb
mov
xor
mov
pop
fisubrs
cmpsb
ja
pop
xor
push
jae
les
sbb
sub
inc
xor
or
imul
pushf
movd
mov
ja
aad
sub
pop
mov
push
cmpsl
add
popa
imul
mov
inc
jno
out
cmp
dec
test
push
imul
gs
in
dec
mov
and
rclb
outsb
and
jns
aad
imul
jb
mov
dec
adc
mov
clc
sub
mov
int
cmp
arpl
repnz
sub
xchg
jecxz
movb
stc
pop
sbb
push
mov
pushf
and
adc
into
cmc
insl
fs
lret
leave
loop
orl
jne
push
sti
mov
xor
fldcw
xchg
sbb
fcmovnu
mov
or
inc
and
in
jge
stos
icebp
push
add
xchg
push
push
adc
jmp
add
mov
dec
sbb
jl
add
fisttps
rorl
jo
and
cld
cmp
shlb
jno
jle
in
rorl
shr
fs
xor
push
cld
jno
test
int
or
xchg
cmp
push
ja
arpl
icebp
shll
sbb
and
cmp
push
divl
mov
pop
int3
or
and
push
xlat
pop
sbb
jns
test
push
xchg
mov
mov
addr16
mov
xorl
mov
jne
lds
movsl
xor
push
cmc
stc
mov
and
ret
xor
into
mov
and
mov
fdivrl
jbe
add
rclb
mov
xor
mov
cmpsb
adc
adc
lret
mov
mov
add
inc
add
cmp
cmp
add
xchg
in
jge
test
mov
mov
inc
sbb
cmp
xchg
xlat
or
int3
xor
mov
subb
mov
mov
imul
pop
dec
push
outsb
cwtl
es
mov
add
movsl
mov
push
scas
es
lea
cltd
push
sbb
fsts
sbb
aas
jle
inc
shlb
xor
push
xchg
testb
xor
and
in
sub
movsb
mov
push
sahf
test
jl
sbb
lret
inc
pop
inc
mov
ljmpw
lahf
arpl
ret
mov
xchg
pop
xchg
in
xchg
dec
xchg
fsub
mov
jo
or
sub
or
or
lret
popf
push
clc
pop
sbb
mov
in
push
mov
lcall
push
xorb
pushf
mov
das
fnstcw
out
pop
into
dec
xor
pop
mov
push
lods
jae
jbe
dec
xor
pushf
dec
imul
cmc
cs
mov
leave
jp
jb
imul
sbb
pop
sahf
or
inc
sbb
test
cmp
sahf
xor
jns
cmp
pop
sbb
push
or
ficomps
push
flds
push
jno
adc
dec
xor
fidivrl
mov
sub
xor
and
add
iret
pop
sub
sub
lods
cwtl
outsl
mov
jp
rcr
aas
inc
mov
sub
cmc
mov
xor
loop
adc
sbb
adc
in
loopne
sarb
je
inc
mov
add
xor
cli
and
cmc
add
subl
xchg
inc
out
lret
mov
jne
dec
xchg
xor
in
aaa
inc
push
fimull
jno
call
inc
mov
scas
add
adc
inc
xchg
mov
lcall
push
mov
jmp
fwait
push
jne
imul
imul
rcll
ds
outsl
sub
cmpsb
mov
or
inc
ds
mov
fnsave
or
pop
popa
stos
loop
int
popf
out
sub
lcall
shrl
dec
sub
jnp
mov
push
rcrl
adc
sbb
lock
jp
in
mov
dec
andl
add
imul
xor
add
jge
inc
fstpt
ljmp
sbb
in
lret
test
mov
fidivl
hlt
pop
jmp
scas
cli
imul
mov
adcb
or
imul
and
sub
dec
icebp
jo
cmpsb
out
xor
mov
cmp
loope
adc
push
es
or
loop
test
in
dec
jne
sub
push
push
cmp
lods
xor
mov
repz
dec
fisubl
aas
lcall
add
mov
mov
mov
mov
aam
mov
lret
imul
lcall
sbb
je
mov
bound
push
mov
adc
in
stc
mov
add
xchg
xchg
repz
push
clc
sub
inc
jg
test
sub
jno
add
les
imulb
in
inc
push
out
and
mov
cld
fcompl
clc
adc
mov
mov
roll
sahf
movsb
lods
xor
pop
xor
add
addr16
shr
cmp
dec
sbb
mov
xchg
cli
xor
faddl
ficoml
mov
jg
test
in
scas
data16
neg
mov
cmp
add
lods
lds
mov
popf
mov
xchg
xor
ror
outsb
aad
dec
int3
in
stos
dec
stos
in
mov
divl
inc
or
je
loop
punpckhbw
push
mov
xor
mov
dec
inc
dec
lcall
mov
inc
mov
cmpsb
mov
je
sub
or
mov
fdivrs
pop
mov
jmp
or
lret
fs
imul
cwtl
insl
fwait
movsb
call
outsl
inc
rcl
cmp
and
lea
xchg
insl
jne
pusha
aaa
and
pop
cmp
dec
aaa
mov
imul
mov
es
bound
mov
call
arpl
jge
push
xlat
rcrl
out
sbb
insb
out
popf
sbb
lcall
js
mov
add
into
mov
sub
aaa
lds
out
push
cli
popf
in
dec
jb
sbb
mov
and
cmpsl
add
out
pop
lret
jle
lea
popf
subl
mov
enter
icebp
ret
cmp
insl
xchg
mov
testb
add
pop
lods
popa
aam
mov
mov
jle
fs
dec
dec
xchg
and
push
jge
mov
icebp
call
add
imul
bound
jmp
scas
and
pmaxub
pop
cmpsb
ret
and
aas
inc
or
jne
std
jno
scas
cmpsb
cwtl
add
cmp
jle
push
pop
in
lcall
fdivl
mov
lahf
mov
xchg
iret
jmp
adc
mov
sub
jb
fldl
adc
fwait
call
fptan
fimull
rcrl
add
sbb
pop
shlb
dec
insl
jno
imul
mov
pop
dec
adc
fildl
sahf
mov
mov
lea
andl
pop
cmpsb
fs
xlat
add
in
imul
cmp
movsl
xlat
outsl
out
test
lret
rorl
pop
push
add
push
outsl
loopne
loopne
popa
sub
push
shlb
jbe
sub
xchg
int3
add
xor
popf
icebp
cmp
js
loop
pop
mov
dec
ret
push
dec
popf
fisttps
xchg
mov
push
sub
jne
lock
push
loope
aaa
xchg
neg
xor
loopne
jmp
popf
dec
push
push
int
cmp
imul
jnp
xchg
idivb
mov
cmc
and
cmp
xchg
pop
ret
mov
inc
loop
shll
dec
pushf
faddl
add
sub
dec
sub
sbb
jnp
dec
mov
pop
sti
ss
adc
jb
jecxz
jns
fisttpl
cmpsb
sub
lods
cwtl
mov
rorb
mov
cwtl
inc
or
cmp
add
mov
jo
xor
lea
mov
es
mov
out
mov
push
xchg
or
inc
sub
mov
out
xor
pop
adc
jmp
inc
and
dec
imul
mov
test
adc
jo
mov
ljmp
and
loopne
fidivrl
lea
mov
fldenv
int3
push
inc
xorb
adc
xor
mov
stos
xor
xchg
addl
cld
dec
gs
jmp
shrb
into
mov
xor
cmc
jecxz
pop
cwtl
out
push
mov
or
into
leave
repz
xchg
fldt
data16
add
push
orl
imul
mov
ds
mov
cmpsb
loopne
out
test
out
and
add
aam
test
test
ljmp
sbb
pop
movsl
movsl
pop
pop
cmpsl
cmp
fcmovnb
sahf
mov
das
fisttps
icebp
jecxz
roll
add
in
xor
insb
loopne
or
test
push
inc
add
lret
dec
arpl
into
push
push
mov
adc
fld
frstpm(287
hlt
fcompl
jns
xor
roll
loopne
imul
xor
mov
sbb
je
push
sbb
sbb
js
pop
test
cmp
enter
int
mov
adc
adc
lret
pop
sub
mov
sahf
fs
inc
cmp
mov
xor
jns
sub
outsb
pop
xchg
out
xchg
mov
pop
scas
jae
jbe
popa
hlt
test
sub
push
mov
mov
add
pop
ret
cmp
adc
lock
push
fsubrs
xor
sbb
daa
xchg
cmp
test
insl
inc
dec
jge
xchg
movsb
test
mov
adc
mov
outsl
push
cmp
in
lea
loope
shlb
jae
jle
sahf
in
or
xor
and
loopne
xor
dec
xchg
loop
shll
add
nop
inc
insb
orl
dec
or
ja
pop
stos
arpl
xor
and
cwtl
lds
mov
and
jb
orb
mov
and
cli
loope
ds
js
push
and
xor
or
cmpb
cmp
push
cwtl
shlb
cmp
adc
sub
in
mov
sbb
lret
adc
mov
inc
lahf
lret
adc
lret
out
mov
cmp
insb
in
out
ror
es
clc
sub
cmpsl
insl
xor
jle
daa
jnp
outsl
adc
fiadds
sub
dec
jle
out
lahf
js
mov
shr
xchg
clc
xchg
add
jae
push
outsb
rorb
mov
fiadds
jns
dec
and
pop
dec
pusha
fists
out
xor
shrl
arpl
add
push
dec
adc
mov
sub
pop
and
rcl
pop
imul
movlps
repnz
int
xor
push
push
push
jmp
jl
push
xchg
push
xchg
in
jge
cld
ret
inc
mov
leave
pop
and
add
adc
ret
xor
repz
cld
fimull
movsb
pop
not
jg
sarl
sub
orl
sbb
push
mov
pop
cmp
pop
rol
xor
lds
and
stos
mov
subb
adc
jo
mov
mov
mov
addl
cwtl
fdiv
jnp
xlat
push
icebp
push
lea
jmp
and
adc
xor
lret
mov
inc
adc
iret
and
pop
out
cmp
lods
cld
or
stc
ret
pop
sub
addr16
test
hlt
sub
add
mov
lock
sub
xorb
das
xor
stos
pop
or
and
outsb
testl
mov
and
adc
dec
cmp
jmp
iret
dec
les
sub
std
jp
pop
scas
jns
or
pop
in
fidivrs
sbb
cmpsb
scas
out
mov
pop
inc
lds
xchg
pushf
add
jo
push
push
xchg
dec
xor
mov
loop
jp
sbb
xchg
cmc
repnz
cmp
mov
cmp
cmp
mov
push
in
or
call
mov
pop
test
xor
pop
jmp
movsb
fnstsw
adc
xchg
scas
out
in
nop
dec
rclb
mov
insb
nop
repz
jecxz
ret
mov
popa
or
jno
adc
sbbl
insb
lret
mov
push
leave
xor
inc
lock
mov
pusha
mov
xchg
jbe
adc
int3
int3
xor
int3
in
mov
js
insb
dec
mov
dec
lods
ror
imul
inc
push
mov
rcll
dec
dec
push
dec
jno
dec
fldcw
add
fists
or
push
test
push
or
add
je
or
cmp
movsl
or
mov
insb
movntq
incb
adc
cmc
and
fwait
call
jns
mov
adc
xor
or
test
cld
inc
or
push
icebp
mov
fstps
jl
mov
pop
movsl
mov
loopne
int
aas
xchg
dec
jg
lods
addl
repnz
and
popf
mov
dec
outsl
jo
jo
mov
fstpl
jo
lcall
jmp
jge
fadds
push
jns
fsubs
pushf
mov
lcall
mov
arpl
fsts
pop
push
push
adc
push
nop
mov
loop
jg
dec
lahf
loopne
push
loope
jns
test
adc
addr16
test
add
add
test
sub
and
xor
cmpsb
lock
mov
mov
test
cmp
shll
xchg
add
adc
mov
mov
pop
icebp
nop
xorb
push
push
cmp
jl
add
xor
jae
push
into
cli
int
xor
adc
popa
push
pop
adc
or
syscall
out
loope
in
pop
sub
xchg
sbb
cmc
mov
dec
cltd
mov
outsb
xchg
push
push
dec
inc
mov
ret
dec
pushf
jge
fwait
dec
fucom
mov
outsl
cmp
mov
dec
or
call
cmpsb
inc
pop
adc
xchg
test
subl
add
push
jns
testl
daa
inc
adc
cltd
xor
stc
pop
mov
scas
negb
outsl
stos
addr16
push
cmp
cmp
sbb
lods
cmc
lea
mov
add
ret
pop
add
lock
daa
cmpb
psubusb
aas
ss
push
in
pop
mov
pop
cmc
sti
mov
dec
cmp
sbb
pushf
cld
dec
push
cmp
xor
xor
mov
pop
mov
sbb
or
pop
das
leave
rclb
or
inc
pop
cmpsb
scas
jns
std
xor
sub
pusha
in
cmp
aaa
push
add
ret
dec
sbb
das
inc
mov
je
subl
lock
xchg
sbb
nop
pop
iret
test
or
dec
dec
punpckhbw
jns
cmp
push
mov
aad
cld
ljmp
sub
lods
add
daa
mov
dec
cmp
je
xlat
xor
stos
inc
push
movsl
mov
in
mov
test
aad
mov
jbe
fiaddl
mov
and
and
or
adc
fdivrs
pushf
js
sub
fdivl
mov
in
push
mov
call
jle
jp
add
fs
push
pop
mov
in
test
shl
test
inc
adc
fbstp
lock
mov
inc
sahf
sti
lea
xor
mov
clc
push
add
popa
bound
inc
push
or
xchg
sub
cmp
mov
fcmovnb
enter
xlat
push
add
xor
lcall
xchg
mov
jo
jnp
or
daa
les
test
shrb
or
mov
imulb
xchg
js
dec
add
lret
test
sti
cmp
stos
mov
mov
cmp
pop
leave
adc
lods
jl
rcrb
sub
push
pop
outsl
cmpsl
and
push
sub
cmpsl
loopne
xor
pop
lea
push
ss
dec
sub
xor
push
inc
mov
or
jl
popl
imul
rcr
and
sbb
or
aad
lods
sub
out
jne
outsl
mov
insl
push
mov
dec
iret
inc
mov
notb
lahf
call
cmpsb
jb
xor
cmp
push
in
subb
and
mov
ss
and
inc
fbld
cwtl
xchg
lahf
inc
cmp
jne
cmp
push
mov
imul
jp
notl
or
dec
movsl
mov
cmp
loope
mov
mov
imul
out
clc
or
inc
pop
rcll
ds
es
dec
pop
aam
add
pop
push
jae
and
and
pop
movsl
fists
jbe
or
and
fincstp
popf
outsb
fldcw
mov
shlb
push
lahf
adc
jnp
sti
jl
pop
cmp
xor
inc
or
adc
pop
fsubrl
cmc
daa
outsl
loop
cmpsb
fwait
movsl
mov
cmp
xor
inc
dec
fdivrs
and
movsb
ret
ret
xchg
loopne
push
push
xor
in
int3
push
mov
mov
or
out
mov
stos
add
mov
hlt
in
clc
xchg
pushf
jno
shll
mov
pop
testb
dec
pop
cmp
jecxz
cltd
lds
outsl
ds
mov
sti
pop
cwtl
mov
test
mov
jg
ds
call
fisttpl
inc
jae
xor
inc
je
mov
mov
mov
push
xchg
mov
aad
cmpsl
push
sbb
push
mov
mov
mov
lcall
sbb
aaa
es
stos
and
mov
xorb
adc
push
lret
test
pop
cmp
mov
insb
and
out
mov
aaa
inc
push
ljmp
mov
addr16
or
sbb
xchg
fs
gs
add
mov
int
insl
scas
inc
xor
sub
mov
push
push
jle
mov
fwait
addr16
imulb
mov
ljmp
scas
mov
xorl
push
add
lahf
popf
cmp
jl
mov
movsb
imul
dec
mov
jbe
push
bound
sub
daa
nop
nop
xor
mov
xlat
leave
ret
adc
test
pop
xor
jb
lahf
stos
icebp
cmpsl
push
inc
flds
aaa
iret
mov
xor
jge
out
and
es
pop
xchg
call
sti
sbb
mov
out
in
jne
jle
std
shrl
rcr
lret
leave
inc
rcll
sbb
loope
int
pop
jne
repz
mov
jo
push
or
fstpt
daa
and
cld
mov
mov
aas
fwait
jae
mov
gs
lea
in
rorl
aad
addr16
popf
int3
fs
jae
clc
popf
push
jg
push
pop
cmp
popa
ljmp
lcall
or
jbe
mov
shr
ret
push
push
pop
and
add
in
xchg
mov
inc
push
mov
dec
std
inc
pop
popf
popf
and
inc
dec
das
add
sub
aaa
pop
push
sarl
mov
mov
fldt
cltd
int
push
popa
xchg
xchg
negl
or
sbb
insb
fdivl
cmc
mov
jb
push
movsl
fsubr
lcall
imul
push
sbb
je
test
inc
jo
repnz
mov
xchg
mov
sarb
ret
imul
imul
int3
inc
jo
fcmovu
outsb
movsb
sub
lret
dec
cs
lahf
push
ja
fucom
mov
xchg
cltd
mov
mov
rcrb
pushf
pop
mulb
xchg
bound
adc
jns
xlat
inc
push
std
inc
xchg
mov
xor
jbe
les
cltd
nop
fiadds
mov
adc
inc
mov
cmp
push
xchg
test
repnz
je
pop
add
xchg
push
pop
adc
jae
or
pop
int3
out
pop
and
and
sub
cli
mov
jns
call
shufps
ds
iret
insb
test
or
mov
xor
in
fwait
fs
mov
mov
pop
mov
call
sub
leave
sti
or
iret
push
outsl
andl
fisubs
mov
rorl
sbb
dec
mov
jmp
xlat
std
repz
je
daa
dec
vcvtsi2ssl
jmp
dec
mov
sub
cltd
stos
or
mov
push
inc
inc
and
add
stos
inc
and
and
xor
cmp
sahf
xchg
pop
push
cli
mov
into
adc
out
add
outsl
adc
std
lea
lcall
or
or
andb
lods
int3
int3
leave
rclb
in
movsl
mov
out
xor
sbb
out
mov
jle
ret
xchg
cmp
aas
lock
decb
iret
bound
or
add
inc
les
mov
fs
stos
or
pop
pop
pop
test
outsl
int3
lods
pop
in
fdivs
dec
stos
ss
dec
ss
sbb
add
or
imul
xchg
lods
push
aas
das
aaa
inc
out
mov
xchg
jmp
or
xchg
repz
and
aad
push
repz
inc
lcall
sub
xor
add
jno
sbb
and
inc
inc
rcrl
fdivrl
rorb
cmpsl
adc
cltd
xor
cmovne
arpl
sub
arpl
stc
int
and
int3
cld
lods
and
or
sbb
in
push
mov
aaa
mov
add
shll
mov
push
pop
mov
push
push
outsb
jnp
test
shll
xor
add
cmp
pop
icebp
jl
xorl
shll
adc
xchg
jne
sar
mov
test
inc
es
sub
dec
pop
ss
push
pop
xor
call
pushl
popa
inc
xchg
dec
lret
minps
mov
mov
movsl
sub
mov
mov
cmc
and
fidivrl
or
pop
jo
in
or
shr
ret
add
mov
dec
into
mov
sbbl
ret
sbb
lds
mov
pusha
pop
lret
ret
xchg
es
mov
jo
cltd
das
shrb
inc
mov
icebp
pop
cmp
fsubl
push
sbb
lcallw
orb
enter
cmpsl
shll
mov
push
push
dec
ja
jle
mov
pop
adc
mov
push
int
test
pushf
lock
dec
ficomps
aaa
icebp
mov
cwtl
outsl
rcl
ljmp
test
leave
inc
dec
xchg
mov
ljmp
jb
filds
cli
fistps
loop
pop
int3
adc
pop
push
push
es
mov
sub
push
inc
lods
push
xchg
mov
jp
into
jno
dec
push
or
lcall
inc
inc
shll
sbb
inc
mov
outsl
cltd
push
mov
scas
scas
sbb
jns
pop
int
dec
cmp
xor
pop
stos
sbb
and
xor
and
dec
rcrl
rol
adc
pushw
cltd
fadds
out
xchg
sbb
and
inc
inc
js
and
sub
inc
inc
mov
les
mov
aad
or
movsl
ds
scas
aas
add
imul
cltd
jecxz
or
inc
inc
adc
loope
bound
cmp
loopne
and
jne
mov
iret
push
jge
hlt
loope
dec
daa
and
loop
icebp
rolb
cmp
pslld
mov
xchg
inc
js
outsl
cmp
cs
out
push
pushf
hlt
lcall
add
cmp
bound
push
xchg
jo
cli
push
mov
test
pop
je
jl
xor
push
cli
xchg
dec
pop
scas
loopne
inc
int
jno
hlt
pop
daa
inc
inc
ljmp
add
bound
cld
adc
xchg
mov
add
gs
mov
call
xchg
rorb
lods
sub
cmp
movsb
daa
cmpsl
pop
sbb
xchg
arpl
add
jb,pn
push
cmc
xchg
lock
cmp
cmp
add
ss
inc
jmp
xchg
in
les
inc
sbb
xchg
jp
lahf
out
dec
cmp
or
inc
mov
jp
xchg
and
or
dec
sbb
outsb
push
inc
aas
or
clc
xor
scas
scas
mov
pop
pop
lock
inc
in
lock
fdivl
imul
adc
ljmp
pusha
sti
fsubrl
dec
xlat
mov
mov
notb
loop
push
in
lock
lret
inc
js
dec
pop
mov
ljmp
xor
fsubl
insb
js
xchg
xchg
stos
out
cld
dec
movsl
test
add
inc
mov
push
sub
pop
insl
push
nop
jl
mov
mov
outsb
jno
inc
lahf
sub
stos
test
sub
adc
xchg
xchg
imul
mov
cltd
xchg
fbstp
hlt
loopne
lahf
jae
and
and
pop
jp
dec
enter
xchg
mov
sbb
sbbl
test
push
jl
pop
scas
mov
dec
ds
hlt
mov
pop
int3
aas
gs
imul
lahf
or
cmp
out
push
negb
call
fdivr
cmp
fmull
xchg
ljmp
add
pop
mov
cmp
les
push
repnz
sbb
xchg
ret
push
push
adc
outsl
test
jl
aas
pop
jg
cmpsl
aaa
pop
sub
popf
adc
out
add
in
loopne
lret
mov
ret
cmp
push
adc
sub
push
jo
mov
xchg
sub
ljmp
or
jmp
lods
out
adc
push
dec
add
ds
inc
cmp
call
repnz
aas
cmpl
adc
cmp
pop
mov
inc
and
jge
mov
xchg
je
lods
mov
or
in
dec
mov
inc
cltd
scas
sub
aad
push
jbe
lods
jge
je
je
dec
jp
sbb
int3
ds
shrl
mov
or
or
sub
out
scas
or
adc
insb
roll
cwtl
fisubrs
mov
cmp
inc
dec
cmp
lods
cld
lea
insl
add
loopne
mov
push
test
xchg
nop
mov
mov
mov
repz
pop
mov
cld
cmpsl
rorb
sti
clc
inc
xlat
cmp
mov
andb
cwtl
add
pusha
shll
mov
sub
lods
push
adc
rorl
push
cmpsl
fs
sub
fsubl
pop
push
inc
insb
mov
push
jl
rep
dec
sbb
xor
or
sbb
adc
mov
movsb
out
jno
and
mov
sub
or
and
imul
xor
call
fnstcw
aam
mov
jbe
dec
jge
test
jae
in
out
lahf
dec
xor
dec
mov
jmp
subb
sbb
xchg
insl
cmpsl
movsl
push
lea
stos
and
mov
jo
movsb
insb
xor
or
mov
pop
add
mov
stos
sahf
jmp
sub
inc
jb
int3
clc
ficoms
cli
fisttps
mov
lods
fs
hlt
into
xchg
cli
int3
push
pop
rorb
sub
sub
stc
push
pop
sbb
sbb
push
xchg
add
lret
or
rorb
sbb
sub
icebp
sub
add
rcl
test
mov
jno
pop
dec
sbb
test
cmp
pop
rcrl
js
gs
dec
enter
mov
in
adc
inc
je
aad
inc
popa
out
addr16
dec
dec
rcll
ret
inc
test
out
test
pusha
ja
fdivrl
sarl
fstps
xor
pop
xor
pop
sbb
dec
sbb
ret
sub
jl
fisttps
push
scas
or
sub
cmc
jge
inc
or
rclw
rcrb
xchg
cld
sub
clc
out
mov
mov
dec
icebp
inc
inc
out
and
lcall
or
and
scas
add
dec
movsb
std
int
xchg
jl
dec
or
cmp
jns
jmp
jno
pop
rolb
jo
jle
xlat
lods
lret
iret
lret
xchg
jmp
mov
aad
add
in
inc
xlat
xchg
push
in
cli
push
test
jns
dec
cwtl
repnz
xlat
pusha
push
xchg
out
and
hlt
jle
arpl
or
inc
cmpsl
repnz
loopne
push
jmp
adc
inc
mov
mov
xchg
daa
sbb
lds
cmpsb
pop
mov
out
adc
hlt
sbb
push
in
shll
cmp
xchg
aaa
push
mov
mov
push
and
jne
faddl
data16
mov
aaa
cwtl
add
jb
sub
insl
daa
sti
ficoml
cli
in
mov
movsb
aam
daa
sbb
ds
dec
and
jecxz
xor
sbb
xchg
push
jne
call
and
popf
loopne
mov
pop
push
pusha
incb
adc
sbb
mov
fiadds
and
lcall
lahf
push
xlat
out
xchg
push
push
xlat
shrl
jno
insb
gs
push
mov
sub
sub
add
cmp
mov
inc
add
sbb
sahf
sbb
or
bound
adcl
or
fadd
xchg
js
or
inc
imul
mov
test
dec
push
imul
sub
outsl
adc
fstps
fwait
cmp
loop
jg
repz
jnp
lcall
ss
fwait
cmp
addr16
sub
pop
sbb
movl
rolb
lret
mov
xor
sbb
test
notb
adc
mov
or
cmc
fwait
lods
mov
push
push
adc
scas
cmc
inc
loope
push
fstl
outsb
xlat
xor
jae
outsl
push
mov
push
test
add
popa
or
loope
ret
lods
out
cmp
pushl
xchg
xor
aas
jecxz
xor
je
cmp
je
jb
js
int
rclb
xor
ret
mov
syscall
inc
dec
outsl
dec
cmc
xchg
testl
insb
xor
add
dec
xor
jno
sub
cmpsb
outsl
fisubs
xchg
cmp
aaa
lods
jg
pushf
inc
shlb
jle
dec
out
xchg
cmp
xchg
mov
or
or
sub
xor
pop
dec
mov
imul
mov
imul
mov
mov
adc
xchg
and
adc
or
jbe
popa
mov
or
lea
ds
iret
rcr
mov
inc
out
mov
fildll
adc
outsl
adc
pop
dec
push
sbb
pop
adc
std
inc
mov
ss
inc
dec
es
add
mov
mov
jnp
jno
push
mov
mov
mov
sub
xor
jb
ds
mov
enter
add
or
inc
into
pop
out
rol
je
rcrb
jle
outsb
jmp
adc
inc
and
fstp
lods
ja
pop
aaa
or
flds
mov
decl
lcall
mov
cmp
push
cmc
push
les
push
mov
mov
mov
jbe
cmp
xchg
cmp
mov
sbb
rolb
mov
fdivs
dec
dec
cmpsl
fdivs
dec
out
add
adc
rorb
xchg
cmp
testl
scas
mov
subb
testb
adc
xchg
adc
and
sbb
in
out
out
mov
xchg
sbb
push
pop
jge
mov
cmp
sbb
xchg
push
in
fisubrl
xor
mov
pop
loop
int
jne
test
shr
mulb
shl
ficoms
and
pcmpeqd
test
scas
mov
sub
sbb
sbb
test
pop
notb
jo
xchg
pop
lods
sahf
or
fsubp
add
leave
or
push
lods
sbb
pop
popa
iret
xchg
repz
xor
les
fstl
shr
cmpsb
dec
mov
sub
push
lods
lods
scas
xchg
ucomiss
std
xchg
mov
jbe
callw
in
aam
push
aas
cmp
sbbl
adc
mov
shll
xchg
shl
mov
pop
pusha
add
jg
daa
mov
mov
mov
aas
movsb
jbe
stc
in
aad
mov
ret
push
shrl
mov
stos
fdiv
pop
dec
test
xchg
cmpsl
add
gs
mov
ficoms
js
ss
mov
mov
adc
movsl
jge
dec
sbbl
out
bt
int3
xor
loope
xchg
jns
and
jbe
mov
outsb
xor
mov
out
adc
int
xor
cs
imul
shrb
fwait
rcrb
mov
sub
dec
fs
fdivs
pop
mov
fmull
fcmovnb
fbstp
jo
jecxz
sbb
sub
pushf
mov
cmp
mov
std
jae
scas
stos
data16
jo
shll
push
fld1
inc
aaa
clc
xchg
jo
xchg
xchg
fmuls
push
icebp
mov
sahf
pop
rorl
xor
ror
dec
lret
pop
adc
lahf
or
inc
loopne
lcall
mov
int
pop
imul
rcrl
fisubrs
loop
push
test
cmp
mov
ljmp
sbb
inc
adcl
lds
jecxz
xor
jns
dec
test
repz
lret
popf
hlt
das
push
mov
lea
fcompp
mov
ljmp
jg
cmp
xchg
mulb
push
gs
mov
mov
int
in
cli
pop
loop
adc
mov
xchg
xor
pop
les
popa
dec
pop
push
repz
pop
add
xor
jmp
mov
test
adc
cmp
jg
jne
jge
lret
and
ja
xchg
fucomip
jge
test
mov
lahf
gs
push
in
int3
cmpsl
roll
sub
jne
and
sbb
enter
ret
xor
xchg
subl
daa
ljmp
xchg
jle
jb
mov
sub
hlt
stos
push
fdivl
jmp
arpl
in
push
fdivrs
mov
test
fsubrl
aam
push
push
push
pushf
fnstenv
sub
mov
es
mov
push
inc
aam
inc
and
mov
cmp
shlb
cwtl
add
cmp
jle
adc
pushf
xchg
arpl
sub
vcomiss
cli
and
mov
aam
xchg
jns
lea
mov
mov
leave
pop
fs
in
mov
aaa
cld
icebp
push
lods
push
or
jmp
mov
xchg
add
push
mov
adcb
jmp
mov
add
sarl
lds
dec
test
jp
jge
sub
xor
cwtl
mov
mov
mov
pop
xchg
dec
in
xchg
jno
xor
jne
cli
pop
and
pop
cmp
cltd
stc
or
jg
xchg
jnp
add
cmp
scas
mov
add
test
cmp
fwait
aas
movsb
insb
mov
mov
cmp
or
mov
insl
mov
ret
and
mov
pop
sub
repz
fsubrs
xor
ret
mov
testb
stos
mov
dec
insl
data16
push
mov
stc
sbb
mov
inc
sub
pop
outsl
ss
xor
into
add
mov
dec
dec
mov
or
out
inc
mov
add
push
jmp
dec
cmc
dec
and
clc
int
pusha
loop
mov
sbb
pop
or
mov
add
dec
loop
out
add
sarl
mov
inc
xchg
sub
xor
es
inc
push
jle
test
test
mov
mov
mov
push
sub
dec
xchg
mov
lcall
dec
ja
js
add
add
cli
push
repz
sbb
inc
or
and
out
aad
insl
dec
push
xor
inc
push
push
repz
fwait
cwtl
add
jne
pop
pop
inc
ret
fcomi
out
dec
jno
jl
push
stos
daa
pop
pushf
mov
negb
mov
fidivl
aam
or
mov
aam
add
fdivs
jl
push
rorb
cmpb
fucomip
js
inc
andb
mov
jae
inc
out
ss
outsl
stos
pusha
adc
fmull
mov
or
or
jbe
ss
lods
xrelease
jae
xchg
adc
sbb
std
inc
jecxz
pop
js
mov
aaa
aam
inc
mov
andb
add
loop
jg
push
adc
fnsave
sbb
sub
mov
mov
and
cli
inc
jno
sub
ljmp
mov
xor
cwtl
dec
pop
xor
push
gs
pop
aam
dec
inc
int
jo
dec
out
loopne
inc
xchg
xor
fmul
pop
orl
pop
lock
pop
repnz
mov
sub
cld
push
jmp
adc
incl
mov
jp
push
inc
cld
cwtl
popa
lods
xchg
fucomp
lods
popf
mov
push
fwait
out
dec
xchg
std
scas
xchg
cmp
push
fildl
cmpsl
jnp
pop
cli
mov
cmp
adc
clc
pmaddwd
mov
jo
sub
push
movl
push
mov
insl
inc
and
push
test
push
push
cwtl
mov
mov
xchg
test
jge
imul
mov
mov
outsb
or
xor
mov
fldcw
icebp
push
cmpb
es
xchg
jl
lea
push
call
push
and
aam
sahf
bound
shll
mov
add
jbe
mov
lods
cmp
seto
nop
inc
or
push
jns
sbb
inc
jp
xchg
mov
dec
fldt
divl
adcb
xchg
jg
dec
mov
jb
sbb
mov
xor
cmp
dec
jmp
insl
rol
repnz
movsb
mov
ljmp
or
leave
std
mov
ret
xchg
add
inc
das
and
jb
in
aam
subl
jp
scas
fs
jb
mov
cwtl
sub
mov
divl
push
mov
add
in
test
clc
into
dec
fsubl
sbbb
and
mov
movsl
sbb
gs
int
xor
pushf
xchg
arpl
in
sbb
movsl
or
ret
outsb
lahf
fstl
test
sahf
aad
sbb
mov
gs
in
popa
fimuls
pop
cs
shlb
dec
aad
icebp
mov
lcall
inc
inc
jmp
icebp
and
xor
adc
std
test
out
push
sarb
jno
iret
or
inc
mov
cmp
aaa
enter
mov
xchg
or
cmp
enter
mov
mov
xchg
pushf
pusha
and
add
pop
test
pusha
scas
gs
clc
fldpi
sbb
xorb
xchg
das
xchg
jae
out
inc
lret
imul
jne
test
loop
rorl
fs
pushf
test
jb
add
cltd
inc
push
jne
inc
mov
loopne
ret
cmp
sub
es
cmpsl
iret
les
push
in
sbb
popf
std
pop
pushf
dec
mov
inc
push
dec
dec
jbe
ret
jg
sbb
sbb
push
addb
mov
aad
or
stos
mov
adc
push
clc
fwait
mov
mov
push
ja
and
ret
mov
mov
aad
shll
adc
movb
pop
dec
data16
clc
xor
insb
fsubl
clc
daa
nop
xchg
into
gs
xchg
icebp
loopne
repz
notb
mov
test
pop
cli
and
int
jne
dec
sahf
in
jmp
ror
fcompl
push
icebp
pop
or
sub
lea
sub
mov
inc
repz
adc
xchg
sub
inc
add
stos
and
sub
dec
dec
sbb
xchg
daa
movsb
dec
dec
in
and
loopne
adc
loope
fdivs
stos
xlat
test
mov
sbb
sar
mov
mov
sbbl
pop
mov
mov
pop
ljmp
inc
roll
inc
dec
lcall
adc
repnz
and
push
stos
pop
xor
lods
fisttps
out
pop
popa
aam
es
rep
xor
iret
clc
add
mov
xorl
pop
sub
loop
arpl
dec
stos
cmp
lods
jbe
sbb
sub
and
pop
ds
push
insb
mov
popf
lahf
aas
jo
add
or
mov
jg
mov
mov
lcall
xor
pop
sbb
push
hlt
sbb
testl
inc
insl
adc
mov
fwait
loope
mov
inc
shrl
push
imul
lock
mov
sub
lahf
loope
aad
sub
mov
js
xchg
xor
out
mov
in
out
push
xchg
movsb
loop
xchg
scas
addr16
jno
xor
push
daa
lret
dec
in
xchg
insl
push
jmp
pop
pop
mov
dec
cmc
mov
sbb
pop
sbb
inc
sbb
inc
push
pop
push
in
push
mov
cmp
lahf
pop
lret
fisubrs
push
push
mov
lods
push
jbe
push
or
jecxz
lods
jl
jl
shll
js
push
test
mov
push
jbe
test
andb
or
inc
cld
sarb
jge
add
jb
repz
and
insl
sub
pop
mov
movsl
dec
repz
mov
sti
cmp
outsl
xlat
sarb
repz
pop
mov
out
je
jg
outsb
into
cmp
dec
popf
mov
mov
mov
xchg
in
call
out
movb
scas
add
and
sub
xchg
test
jb
sti
jge
int
outsl
push
sbb
xor
pushl
mov
or
mov
mov
icebp
xor
shlb
xchg
mov
into
pop
aas
push
scas
bound
add
push
mov
sbb
int
xchg
out
lds
daa
inc
mov
je
lret
pop
int
ret
out
lods
gs
mov
mov
and
xchg
mov
stos
lcall
pop
inc
adc
pop
mov
and
add
dec
dec
jno
shl
pushf
xor
mov
loop
sbb
jge
sti
sub
stc
lret
bound
or
push
addr16
loope
cwtl
cmpsl
pop
mov
imul
imul
inc
js
pop
jmp
adc
adc
add
mov
lds
aad
or
adc
push
xchg
in
inc
and
or
sbb
fildl
lcall
rol
dec
adc
movsb
and
flds
sub
jae
sbb
push
iret
fdivr
jno
pop
repz
pop
cs
fisttps
subl
ljmp
jp
mov
cmp
bound
popa
jmp
and
lods
sarl
aam
pop
xchg
lds
setnp
jecxz
rorb
and
sbb
add
jnp
out
pop
jecxz
add
nop
imul
or
push
repz
adc
jle
mov
inc
sti
stos
les
sub
aam
int
sahf
icebp
into
and
mov
mov
add
out
cld
js
lods
and
add
dec
pushf
mov
cwtl
pop
rol
icebp
mov
xchg
push
addr16
sub
sub
sbb
adc
dec
repnz
pusha
sarb
cmp
fnstenv
addr16
jnp,pt
jmp
cs
int3
cli
pop
out
sbb
and
aaa
sbb
sbb
enter
aam
mov
mul
rcll
ljmp
sti
fisttpll
out
mov
sbb
adc
dec
mov
push
pop
lcall
or
fwait
push
add
and
add
xchg
and
push
stos
push
cmp
mov
push
cmpsb
insl
cmp
sbb
hlt
pop
mov
mov
pop
xor
icebp
or
pop
clc
add
ljmp
es
jmp
insl
push
xchg
jb
stos
and
cmp
jns
ljmp
shll
repz
pop
ds
jle
pusha
mov
xor
sub
xchg
out
imul
aam
xchg
dec
and
cwtl
xchg
xchg
or
repz
ret
cld
fadds
ret
and
pop
pop
cmpsb
divb
ja
call
jp
jp
mov
das
js
cmp
mov
inc
jo
clc
pop
insb
add
xchg
inc
in
dec
dec
shrb
clc
lret
inc
fs
jae
mov
inc
or
shr
sub
mov
loope
inc
loop
inc
stc
stc
sub
mov
mov
leave
jnp
and
fisttps
repnz
lcall
outsb
inc
add
cli
sbb
aas
lods
push
cmpsb
mov
pop
add
mov
dec
mov
lods
stos
xor
xchg
fldl
add
lahf
lock
fnstenv
mov
xchg
mov
mov
decb
mov
xchg
jmp
sbb
and
push
loope
mov
mov
xchg
adc
and
repz
icebp
adc
je
add
movsl
jmp
out
sub
outsl
ret
insb
sbb
xor
dec
push
rcl
jg
mov
push
pop
ss
divl
and
pop
jge
jle
jmp
jbe
dec
sub
aaa
xor
mov
cmp
mov
insl
adc
jmp
cld
test
mov
clc
sub
jbe
les
cs
dec
pop
sti
sub
rcll
pop
inc
push
push
es
insb
ret
sbb
mov
lahf
lock
mov
subb
in
pop
dec
pop
cmc
ljmp
aas
xchg
inc
leave
sub
mov
dec
bound
stos
push
inc
mov
adc
mov
mov
mov
in
cmp
and
inc
sti
scas
aaa
sub
nop
xchg
pop
fdivs
sti
and
xchg
cmp
sub
sub
cmpb
push
pusha
sbb
xchg
dec
rcr
das
mov
mov
mov
push
movsb
jmp
and
dec
cmp
adc
pop
ljmp
sbb
insl
lahf
dec
movsb
sub
push
pop
push
addr16
lods
scas
inc
outsb
push
fidivrs
mov
jo
inc
ja
stos
pop
lea
in
adc
dec
stos
iret
std
pop
clc
out
dec
leave
jae
mov
push
ja
sub
stc
xor
mov
push
mov
fstpt
adc
stos
jecxz
jb
ja
mov
iret
cmpw
mov
into
jl
insb
outsb
mov
mov
bound
stc
test
fadd
pushf
mov
scas
push
mov
mov
push
inc
inc
es
pusha
jge
je
pop
insb
fs
push
js
sbbb
fstps
ds
sbb
adc
or
xchg
dec
out
dec
out
xchg
push
cmpsb
cmpsb
sbb
pusha
dec
imul
dec
cmp
sbb
bound
xchg
adc
mov
mov
hlt
jbe
sbb
pop
xor
repnz
jp
pushf
jo
cmp
mov
inc
fisubl
push
bound
add
jno
mov
jmp
xchg
loopnew
and
inc
and
fistps
aad
cmpsb
cmp
insb
loope
das
data16
pop
adc
lret
xchg
js
lods
push
add
lea
sub
por
sbb
xchg
fs
and
jmp
ret
mov
cmp
jnp
xor
lock
add
loop
adc
xlat
and
mov
pop
roll
in
push
addl
fisubl
dec
aas
ljmp
jns
insl
repz
sbb
loop
daa
pop
mov
mov
out
and
stc
mov
je
mov
gs
les
mov
mov
imul
je,pt
cmp
cld
push
adc
mov
pushf
mov
ljmp
test
sub
dec
out
fstps
xor
or
and
jg
cwtl
das
daa
mov
testb
mov
fidivrs
call
add
das
out
rcr
repz
inc
add
sbb
cltd
enter
in
arpl
je
mov
push
mov
push
icebp
lock
push
dec
dec
mov
stos
lock
pop
aad
fwait
dec
loope
movl
into
inc
gs
dec
cmp
sub
lds
push
jb
call
addr16
or
stc
mov
fucomp
out
jge
dec
xchg
xor
and
data16
fidivl
pop
push
rclb
mov
enter
add
jg
movb
jg
dec
xor
push
lods
shlb
adc
push
fiaddl
aas
inc
mov
add
inc
jl
in
add
and
mov
jns
xor
test
jo
or
hlt
outsl
jb
inc
in
mov
stos
jp
sub
xor
mov
xor
fsubl
mov
fildl
push
fstp
mov
xor
push
xor
add
mov
xor
cmp
loope
test
dec
mov
into
jne
mov
inc
lahf
js
in
arpl
add
dec
mov
in
mov
mov
mov
mov
leave
sahf
or
int3
push
cmp
addr16
push
or
and
mov
mov
inc
mov
stos
hlt
xchg
jne
sti
js
cmp
sub
pop
sti
xchg
push
and
repnz
sbb
push
aad
and
adc
in
mov
pop
out
movsl
jae
push
push
sahf
cmpsb
aas
divb
ret
sub
xchg
pop
and
xchg
lret
cmpsb
jge
lods
shlb
mov
lcall
jmp
inc
std
mov
pushf
stc
jno
cmpsl
push
mov
inc
add
sub
sbb
mov
rolb
sahf
pop
push
xchg
cmpsb
xchg
mov
jl
cltd
out
dec
add
loope
mov
cmp
clc
dec
or
and
fstps
pusha
lea
xchg
icebp
push
unpckhps
jae
mov
pop
jo
pushf
ds
fs
dec
outsb
cli
and
std
popa
mov
icebp
xchg
es
popf
movsl
push
adc
xchg
mov
mov
pop
call
lahf
into
in
sbb
stos
jo
aam
and
mov
aad
aaa
es
mov
add
js
sbb
stc
js
jge
icebp
aam
mov
rcl
mov
mov
ret
enter
sub
push
fnstcw
aam
repnz
sub
rcrb
mov
push
push
aas
lods
lods
ss
inc
jnp
jno
dec
pop
adcl
cmp
sbb
fnstsw
add
cli
dec
sub
xor
lret
xchg
outsl
rolb
addr16
xor
test
jno
roll
roll
push
xchg
shl
sub
xor
push
out
mov
pop
push
sub
popf
cltd
mov
leave
shl
sub
or
out
jnp
add
inc
sbb
fdivr
and
mov
cmp
test
in
nop
add
pop
pop
popf
push
rorb
sub
mov
cmc
repz
lea
call
pop
add
arpl
add
cltd
xchg
mov
push
popf
jo
add
stc
push
cmp
pushf
or
fsub
sub
mov
jg
add
sbb
xlat
cmpsb
test
test
loop
imul
mov
popf
iret
and
stos
adc
int
push
loope
dec
imul
stos
and
mov
mov
dec
pop
sub
jb
xchg
sub
arpl
cmpsb
or
sbb
xchg
push
cmpsl
pushf
lea
inc
sbb
mov
or
mov
mov
push
mov
sbb
pop
sbb
pop
xor
add
push
mov
sbb
in
shlb
push
mov
scas
push
cmp
in
xor
icebp
dec
adc
cltd
xor
fisttpl
aad
aad
cld
ja
int3
jmp
pop
out
imul
adc
pop
mov
mov
sbb
xchg
jo
in
push
scas
adc
je
mov
mov
jp
jl
nop
dec
mov
out
inc
lea
pop
fdivr
sub
cmpsl
std
xorb
in
rclb
jp
add
daa
cwtl
xlat
fstpt
daa
mov
cmp
jecxz
cs
push
xlat
push
bound
add
xchg
cmp
adc
xchg
jns
out
jno
sub
xchg
adc
jmp
xchg
jle
imul
push
lea
mov
faddp
daa
lahf
xchg
cli
fsubp
mov
roll
xchg
jo
ljmp
mov
rorl
mov
xor
jns
aad
subb
inc
scas
mov
mov
inc
movsl
out
and
mov
repz
std
out
cmp
sbb
add
in
rorb
ret
test
fdivs
xchg
dec
dec
test
xchg
scas
int3
xor
push
cmp
or
out
push
mov
pop
cmp
shlb
pop
push
inc
out
mov
cmpsb
or
cmp
adc
inc
lods
test
and
inc
xor
ljmp
dec
scas
loop
cmc
xchg
fbstp
cs
dec
out
rol
sub
addl
std
addr16
adc
cmp
fcompl
std
pop
xor
sub
mov
jo
mov
lea
mov
cli
mov
decb
adc
in
repnz
cmpsl
push
push
xchg
test
sbb
or
mov
sub
pop
ror
jno
cmp
rorb
adc
cmpsb
push
jnp
pop
xchg
xor
js
cmp
pop
mov
jno
adc
ret
bound
cmc
sbb
add
jle
pop
cwtl
mov
pushf
cmc
ja
xchg
lret
mov
es
cltd
pop
punpckhwd
call
xchg
pop
scas
adc
in
dec
sbb
arpl
loope
mov
or
and
pop
jb
popa
sti
in
adc
adc
jmp
mov
call
out
das
cmp
dec
or
xor
sbb
cmp
pop
cmp
pop
mov
cmc
cmp
jns
mov
cltd
fsub
test
cmc
leave
mov
sbbl
cmp
shll
inc
inc
sub
hlt
test
jg
mov
xchg
jne
out
rorl
and
or
in
mov
xchg
stos
mov
roll
sbb
sahf
ljmp
cmpsb
lods
inc
icebp
push
popa
sahf
fwait
fwait
xor
xor
insl
dec
loop
icebp
dec
pop
push
repnz
das
xor
lcall
lcall
push
jb
dec
push
pop
inc
movl
mov
pop
lods
addl
movsb
scas
mov
je
push
inc
dec
push
lahf
data16
arpl
mov
idivl
pop
cs
out
outsl
fisttpl
scas
lahf
xor
filds
sub
rclw
ss
stc
cld
lods
add
mov
pop
hlt
fists
test
adc
or
cmp
dec
or
jnp
cmp
dec
ret
negl
inc
fisubl
add
insb
int
mov
jne
mov
pcmpeqw
ds
es
std
inc
rcrb
movsb
das
lea
ror
adc
sysenter
aam
or
xlat
repz
xor
mov
xlat
insl
or
cs
in
shlb
cmp
cmp
cli
fsts
sbb
or
stos
mov
xor
jg
movsl
pop
sbb
adc
fldl
xchg
arpl
data16
adc
filds
push
adc
adc
sbb
xor
and
std
pusha
mov
mov
ja
in
call
lret
inc
mov
test
dec
pop
inc
aam
test
mov
imul
pushf
pop
mov
inc
pop
mov
lods
jo
xlat
jecxz
arpl
pop
inc
adc
or
insb
ljmp
push
movsl
arpl
js
insl
dec
push
xor
iret
pop
ljmp
sub
mov
sub
ret
xchg
je
cwtl
test
jge
sbb
and
aas
notl
dec
pmaddwd
iret
add
aas
add
xor
xor
pop
outsb
jnp
inc
pop
pop
push
mov
in
pop
jp
cmpsl
fs
mov
xchg
or
imul
insl
pop
das
int
and
jmp
cli
cmp
scas
sarl
and
call
dec
int3
stos
jbe
pop
aad
test
clc
subb
movhps
mov
dec
jns
pop
andl
cwtl
add
iret
popf
cmpsl
stos
push
and
lock
xchg
adc
lret
jnp
sbb
add
pop
adc
cmp
push
cmpsb
imul
mov
push
imul
fistpll
sbb
push
add
cmc
mov
fs
pop
test
outsb
xor
add
rcll
pop
leave
sub
in
mov
jo
sbb
pop
pop
data16
dec
hlt
rcrb
mov
adc
sub
fisubrs
cs
cmp
jno
or
enter
lcall
shlb
hlt
ljmp
insb
or
or
jecxz
sti
push
jge
popa
fs
stos
aad
mov
shl
or
pusha
adc
cmp
mov
cmp
jne
adc
sarl
stos
adc
sub
imul
sub
jb
and
sbb
sbbb
mov
sbb
int3
in
mov
bound
in
imul
adc
sub
loope
cmpsl
mov
pop
pop
push
xlat
dec
xchg
loope
lods
jnp
push
out
push
out
mov
repz
add
jecxz
loope
mov
add
mov
xor
sbb
ja
jle
ret
xor
out
xorl
mov
fs
jle
es
movsb
xchg
push
sub
and
fwait
hlt
stc
jbe
insl
lods
xor
inc
or
adc
push
xchg
shll
cli
jno
push
jns
push
sub
dec
daa
dec
inc
xchg
xor
inc
jle
popa
std
xor
leave
sub
dec
jae
pushf
imul
fisubs
inc
jge
ja
push
cmc
outsl
xchg
fwait
xor
or
pop
aaa
shrb
xchg
fwait
lds
cwtl
mov
mov
int3
inc
dec
shrb
insb
xor
push
icebp
mov
repz
shlb
insb
jecxz
mov
pop
fbld
xchg
mov
mov
sub
test
mov
cmp
inc
in
pop
and
cltd
scas
cmpsl
jnp
and
testl
sub
or
loop
movsb
lret
outsl
mov
lcall
outsl
lods
dec
fprem
out
pop
pop
outsl
fcomps
std
inc
les
or
sub
jle
ret
into
fdivrl
arpl
popa
mov
mov
orb
jg
mov
out
inc
iret
in
aad
lret
xorl
lds
inc
push
sbb
stc
outsl
sbb
and
or
gs
mov
loop
out
push
cltd
stos
inc
pop
inc
or
data16
jo
xchg
jnp
sub
pop
mov
mov
adc
fld
cmp
movsl
and
lods
je
loope
imul
sbb
rcrb
addr16
fdivs
push
ljmp
or
int
or
adc
divl
data16
push
cld
neg
push
adc
pop
loope
cli
rcr
and
pusha
or
inc
pop
cmpsb
jo
add
movsl
add
xchg
enter
push
loope
mov
or
lahf
push
dec
jno
stos
iret
jge
mov
push
mov
sub
and
jno
sahf
rclb
cmp
lret
dec
or
test
les
lret
sti
mov
add
adc
xor
pop
push
and
adc
mov
scas
mov
add
rclb
scas
out
int3
fsubp
pop
enter
movsl
roll
xchg
stc
fs
jle
mov
mov
imul
mov
fs
push
pusha
pop
or
mov
adc
lret
cmp
das
shlb
xchg
sbb
mov
fnstsw
cmp
data16
mov
repnz
popa
lea
xor
ret
int
arpl
arpl
or
cmpsl
dec
jge
mov
jo
scas
dec
pop
dec
push
and
shll
das
in
scas
sub
rorl
insb
or
mov
xchg
jbe
mov
scas
push
cmp
add
jbe
movsl
mov
aas
insl
xor
inc
imulb
test
push
cmp
mov
mov
scas
or
xchg
sbb
xlat
rcll
sbb
bound
test
cli
pushf
pop
cli
loope
jne
aas
mov
adc
dec
test
loop
adc
loopne
cmp
inc
ret
fimull
xchg
insb
test
mov
pop
dec
push
filds
inc
clc
mov
mov
lods
push
add
sub
jmp
test
ds
insb
mov
test
loope
movsb
sub
sahf
cli
idivl
in
mov
sub
dec
test
pushf
inc
and
mov
popa
ud0
mov
inc
pop
test
sub
pop
rcll
mov
sbb
sti
shl
movsl
push
dec
push
repnz
inc
js
and
cmp
xor
das
add
dec
ja
mov
adc
addr16
lcall
push
push
dec
add
push
add
dec
xchg
mov
inc
and
push
and
push
xchg
popa
in
lods
ds
or
or
inc
inc
jae
aas
xlat
in
push
pushf
into
or
test
in
adc
mov
mov
jnp
jge
stos
xor
dec
inc
lods
ds
popf
mov
insl
cmp
mov
xchg
inc
cmp
jmp
outsb
insl
imul
addr16
in
jp
test
and
and
stos
mov
std
sbb
cmp
xlat
push
int
fwait
cmp
ljmp
jb
loope
sbb
cmc
lock
or
ljmp
mov
jp
add
test
repz
push
shll
shl
mov
sbb
lahf
ljmp
adc
pop
shl
cmp
test
ror
xchg
enter
mov
je
icebp
pop
loope
stos
or
jle
flds
loop
mov
push
cmpl
scas
cmp
je
xor
jle
cmp
popa
ljmp
mov
jb
mov
mov
xlat
dec
je
pushf
add
sbb
push
aaa
ja
pop
hlt
and
ss
jle
ja
pushl
cmp
out
in
push
jbe
out
mov
loope
inc
fistps
xchg
and
pop
fs
fisttpll
cwtl
cmp
sbb
and
mov
mov
push
push
stos
push
dec
popf
sbb
pop
adc
adc
pop
lahf
xlat
adc
repz
ret
jns
repz
mov
mov
pop
pop
mov
xchg
jp
xor
pop
mov
mov
cmp
call
pop
clc
push
testl
push
rcl
push
xchg
das
xor
add
push
repnz
dec
mov
ret
xchg
sbb
or
dec
xor
lcall
fimull
ljmp
xchg
fwait
lahf
push
cmp
mov
xchg
scas
sbb
ret
stos
cli
adc
repz
in
xor
mov
notb
push
mov
mov
ret
lret
andl
pop
daa
push
dec
push
add
dec
dec
jae
mov
das
std
push
sub
mov
xchg
hlt
push
mov
insl
xorb
js
and
fs
and
aam
jo
imul
xor
rcrl
mov
loopne
xorl
cmp
fadd
insl
dec
push
mov
insl
push
test
mov
or
dec
cmp
xor
dec
mov
sbb
lret
sbb
xchg
mov
and
pop
out
jg
mov
call
insb
or
out
lods
shl
xchg
pop
inc
movsl
jp
xchg
cmp
or
dec
xchg
jns
std
popa
xchg
jge
sbb
ss
pop
repnz
and
aad
jle
push
stos
sub
mov
fsubr
test
pop
sbb
mov
push
aam
adcl
movsb
jb
cmpsl
inc
loopne
mov
xor
call
cmp
inc
inc
fmull
cltd
stos
mov
pop
test
mov
adc
sbb
out
jne
icebp
and
bound
icebp
lods
fwait
ss
es
or
rclb
aad
out
rclb
jmp
fadd
add
pop
out
jmp
inc
bound
mov
adc
and
xchg
lock
fucomp
incl
ret
std
and
imul
pop
dec
or
xchg
inc
jecxz
in
mov
movsb
or
jb
add
push
xor
jmp
inc
or
repz
xchg
sub
sbb
nop
dec
psrlq
xlat
out
lds
sti
daa
push
mov
outsl
adc
rorl
das
push
stc
xchg
push
cmp
cmpsb
mov
mov
pop
jb
pop
adc
and
bswap
jle
push
pop
enter
bsr
ljmp
sar
ja
call
mov
sbb
xchg
sub
dec
add
xor
negl
cmp
fistpl
cmp
test
cmp
pop
mov
mov
pop
dec
push
and
out
call
mov
mov
push
leave
fsubl
xchg
cmp
outsl
adc
ljmp
sub
mov
adc
mov
loope
sbb
lret
adc
push
ds
inc
and
mov
sbb
clc
or
adc
lea
fstps
pop
or
sbb
mov
gs
stos
mov
dec
cmp
xchg
sub
cs
mov
add
subb
jge
cs
dec
mov
dec
add
ficoml
insb
xor
repz
fs
pop
xchg
lods
xor
pop
cmp
addr16
xchg
aas
in
fists
nop
rclb
mov
mov
or
leave
mov
cmp
cmpsl
cmp
mull
scas
cmp
xchg
sub
lea
aaa
lret
test
mov
jb,pt
das
mov
scas
xor
rcl
push
imul
jno
popf
mov
outsb
or
inc
ret
ljmp
jnp
loop
in
mov
mov
inc
addl
xchg
xchg
sbb
clc
push
add
pop
xchg
push
and
xchg
push
cmp
xor
and
shlb
adcb
mov
movsl
into
inc
dec
sarb
daa
add
mov
jge
pop
ds
outsl
xor
enter
xor
popa
and
sbbb
mov
xchg
shl
adc
imul
adc
add
cmp
and
jo
scas
fdecstp
repz
inc
sbb
pminub
add
dec
push
out
push
shrb
mov
lea
sub
sbb
aaa
sbb
fistpl
sbb
shlb
test
pop
dec
push
mov
shll
sbb
shld
jae
mov
insb
loope
scas
js
jl
push
cmp
dec
or
cmpb
push
sbb
push
and
dec
sahf
xor
lods
mov
cmc
mov
push
cmp
pop
std
xor
in
xchg
adc
pop
add
idivl
or
xchg
mov
shl
and
adc
daa
push
cmp
push
cmpsl
lret
les
jne
jmp
cmpsl
or
sbb
std
sbb
pop
xor
jbe
and
push
adc
add
sub
xor
cld
sub
test
add
push
sbb
fdivp
cmp
sti
gs
ret
xchg
outsl
xor
ds
pop
aad
sub
mov
pop
mov
and
pop
pop
rclb
push
adc
xorb
inc
cmpsb
mov
jmp
dec
or
lods
ret
sbb
insl
mov
pop
dec
pop
cmp
jmp
pop
mov
xor
mov
clc
stos
adc
sub
xorb
sbb
xchg
ljmp
cmc
addl
inc
jp
cmpsb
xchg
mov
out
or
dec
loopne
std
enter
dec
push
cmp
cli
jg
mov
mov
call
dec
in
pop
or
push
aad
inc
pop
in
das
push
pop
test
inc
imulb
mov
push
cs
test
jnp
mov
and
lcall
inc
js
cmp
mov
mov
jb
scas
xchg
push
push
insl
mov
mov
adc
lret
cli
mov
lahf
cmp
cmp
jo
xchg
mov
shlb
imul
test
xchg
aaa
add
out
add
cwtl
cmp
cmpsl
jae
daa
andb
mov
and
lcall
mov
sbbl
mov
sbb
pop
or
cmp
add
cwtl
mov
inc
xchg
cmp
stos
aas
add
call
push
pop
jmp
jnp
imul
addr16
mov
pushf
fdivrs
fstpt
addl
mov
push
div
scas
inc
sbb
insb
dec
xchg
pop
add
test
add
pop
sbb
and
sbb
dec
movsl
stc
sub
cmp
or
inc
jecxz
or
mov
adc
fwait
inc
ss
out
lcall
repnz
rcr
dec
or
sbb
push
jmp
int
push
xor
fidivl
lds
test
xchg
mov
ljmp
call
and
cmp
adcl
out
xchg
or
cmpsl
cmp
jnp
adc
mov
xor
cs
push
out
ret
and
sahf
ret
mov
or
leave
add
sbb
test
es
test
pop
add
jmp
add
sarl
arpl
add
push
mov
repnz
push
iret
decl
lcall
adc
insl
insl
mov
cmp
mov
mov
divb
cmp
pop
lock
mov
stc
orb
divl
enter
shll
jbe
jne
shr
mov
scas
mov
jns
fiadds
incl
lret
sub
xchg
lcall
test
in
mov
insb
cmp
adc
xchg
test
fistpl
rcrb
adc
push
jns
or
pop
out
pop
roll
ljmp
xchg
pop
cmpsb
or
int
ss
xor
imul
xlat
fmuls
jmp
sub
std
pushf
lea
mov
loope
lahf
jg
ss
fs
hlt
fistpl
test
push
mov
sub
jmp
xchg
pop
aad
fwait
bound
mov
adc
sti
jg
ljmp
inc
fidivrl
test
mov
xchg
xor
nop
fcomps
pusha
iret
add
pop
insl
jg
stc
inc
in
out
mov
fnstenv
repz
dec
into
fistpl
sub
hlt
sbb
std
cmpb
or
cvtpi2ps
in
and
sub
js
pop
xchg
push
stos
pop
out
lock
mov
push
mov
movsl
pusha
insb
mov
rcl
jns
mov
jb
jae
cmp
adc
xchg
push
jge
arpl
pop
divl
loopne
xlat
repz
cmpsb
inc
jl
cmp
cmp
jl
popa
inc
add
jle
xlat
loope
jnp,pt
or
pop
out
je
lret
sbb
data16
cwtl
js
push
test
aam
sbb
hlt
sub
jp
rclb
jns
call
ret
and
and
push
cmp
sbb
movsl
pop
and
adc
xchg
sbb
ds
xchg
aas
mov
mov
jmp
push
out
sub
lret
lahf
test
mov
mov
cmp
adc
sbb
jg
in
leave
mov
mov
pop
inc
cltd
or
push
add
outsl
scas
jnp
nop
cmp
mov
insb
sub
xlat
cld
data16
inc
inc
ss
ret
fmuls
out
inc
push
mov
mov
mov
ds
loopne
and
call
hlt
jne
cmpsl
sub
fadd
pop
add
mov
out
orl
clc
pop
xchg
gs
cmp
sahf
jmp
mov
mov
subl
add
imul
subb
cmp
mov
test
or
push
sbb
inc
lods
divl
mov
sbb
fsubrl
xchg
cmp
xor
and
xchg
stc
adc
and
movl
mov
rclb
sub
hlt
in
and
lds
icebp
pop
les
cmp
push
lcall
add
fidivs
scas
out
jge
add
sbb
pusha
xchg
push
mov
mov
inc
pop
scas
push
and
push
data16
sar
pop
sub
push
hlt
adc
jmp
mov
aaa
loop
fwait
insb
mov
jg
adc
movsl
cmp
mov
js
sahf
push
jmp
and
les
dec
lds
cmp
cs
xor
jbe
xor
bound
imul
xchg
roll
jg
push
cld
jno
les
sub
fiaddl
scas
out
or
pop
bound
inc
into
sub
and
ret
sbb
jno
insb
pop
test
pop
pop
fwait
inc
enter
aas
test
sbb
nop
pushf
xchg
scas
fdivrs
rolb
jmp
jne
dec
and
mov
inc
inc
push
int3
sbb
lods
mov
inc
and
rcrb
rep
xchg
push
mov
dec
js
shlb
sahf
gs
pop
cmp
jge
lahf
out
fldl
out
call
in
pop
xchg
sbb
sub
mov
aas
or
push
sti
test
in
in
std
std
jno
andl
cltd
push
add
xor
popf
cmc
mov
xor
stc
jns
rorl
mov
call
popa
incl
push
ja
mov
sub
and
sub
push
xchg
inc
adc
insb
test
or
adc
jecxz
lret
mov
dec
jp
aad
mov
dec
or
repnz
das
jle
add
cltd
cmp
lods
mov
scas
sub
and
adc
mov
jb
arpl
xchg
mov
cmpl
cmp
push
into
out
push
stos
outsb
mov
pop
sbb
mov
clc
ljmp
pop
icebp
les
shlb
das
out
scas
pop
mov
pop
pop
xchg
dec
mov
outsl
or
jle
pop
mulb
push
mov
lret
test
ret
mov
les
pop
push
loopne
or
ljmp
add
outsb
mov
mov
iret
jl
xchg
inc
ljmp
xchg
test
adc
push
pop
fstl
je
mov
jae
shlb
fdivrl
mov
sub
adc
and
outsl
mov
sub
pushf
push
jl
xchg
xor
push
cmc
sub
cld
xchg
repz
xchg
cmpsl
or
lret
ss
aas
out
loopne
mov
iret
cmp
cld
push
fcomps
dec
adc
cmpsl
xchg
sarl
aam
cmp
inc
pop
in
mov
xchg
mov
push
push
fucomi
orl
ds
nop
fwait
cli
push
mov
mov
pop
cltd
mov
cmp
mov
lret
push
jl
mov
xor
push
sbb
stos
jnp
inc
cmpsb
mov
or
xchg
test
sarl
ss
inc
inc
hlt
movsb
push
bound
sbb
or
mov
xor
push
pop
movb
mov
push
jle
xchg
mov
xchg
clc
sti
popa
sub
mov
mov
and
pop
mov
xchg
xchg
addr16
mov
lret
sarb
loop
inc
push
cmp
jmp
cmp
sarl
and
xor
and
pop
shrb
rcr
sbb
inc
jo
mov
ret
xor
das
scas
xchg
into
fwait
mov
and
mov
dec
sbb
lcall
jecxz
jge
stos
mov
adc
aad
pusha
gs
sbb
mov
aas
mov
xchg
addb
mov
cwtl
scas
rcr
jle
inc
jl
or
cld
lods
push
jno
cltd
loopne
into
cs
jnp
rdtsc
cmc
repz
cmp
add
sahf
cwtl
dec
xchg
add
push
sbb
repnz
imul
dec
das
push
add
inc
das
loopne
jae
inc
out
and
out
mov
sub
lock
cld
xor
mov
ss
iret
or
mov
xor
leave
mov
inc
out
xor
enter
xchg
andb
sub
push
mov
dec
cmpsb
xor
jae
mov
mov
mov
notb
jae
shll
pop
jmp
jo
psubd
and
aad
cltd
daa
jno
jns
mov
sbb
jae
mov
call
xchg
push
push
les
subb
adc
popf
stos
leave
xor
sbb
jge
bound
add
data16
inc
dec
cmp
test
mov
xchg
add
cli
movb
mov
mov
adc
loope
jb
enter
movl
sti
cmc
cwtl
in
add
push
sbb
cld
cmpb
push
popf
imul
test
cmp
js
inc
add
dec
add
and
outsl
inc
and
repz
or
mov
int
xchg
and
xor
push
jno
dec
loop
xbegin
filds
push
or
push
mov
lods
jecxz
push
test
subl
fs
popf
test
stos
cmp
lret
scas
and
sahf
ds
add
outsb
stos
sbb
test
sub
jg
ljmp
xchg
into
and
mov
ret
dec
cli
mov
cwtl
sbb
out
test
xchg
in
adc
jns
nop
stc
jb
shll
pop
inc
sti
popf
enter
add
dec
add
pop
clc
xor
sbb
es
sahf
sahf
imul
inc
ja
inc
xchg
test
fadds
out
subl
push
fisttpl
add
fbld
push
mov
aas
imul
js
inc
addl
lods
pop
pop
sahf
sub
adc
clc
pop
xchg
test
xchg
mov
adc
add
les
pop
fsubrs
sub
push
lcall
inc
aam
les
lods
outsb
inc
rcl
push
cmp
xor
addl
inc
popf
mov
dec
or
inc
mov
pop
pop
add
mov
fdivl
out
add
push
sub
or
push
add
clc
cmpb
xchg
mov
dec
lea
js
xchg
cmpsl
fnstenv
negl
ret
cmp
ds
lock
mov
push
and
gs
dec
cld
std
je
ret
cmpsb
mov
leave
mov
cmpsb
lods
ficoms
popf
fnsave
inc
xchg
fwait
sub
nop
and
cld
arpl
cmpsl
popa
or
rep
cmpsb
cli
adc
xchg
dec
std
rorl
inc
mov
mov
nop
in
jnp
scas
cmp
pop
lock
ds
push
push
and
jnp
mov
mov
dec
push
pop
mov
xor
je
outsl
mov
mov
mov
jo
mov
xlat
push
test
mov
sahf
jno
xchg
fsubs
lcall
div
test
sub
call
push
add
or
mov
mov
adc
clc
push
shlb
or
jp
pop
jge
shr
seto
push
loop
sti
out
xchg
je
inc
sub
add
jl
lea
add
nop
bndstx
loope
aam
jne
leave
sub
jne
xchg
bound
cmpsl
lcall
daa
sub
push
inc
lcall
or
mov
pushf
push
jnp
icebp
adc
cmp
dec
lods
and
hlt
loope
cmp
aad
in
mov
or
gs
mov
inc
inc
in
stos
imul
dec
add
popf
sub
mov
aaa
movsl
cltd
dec
jb
mov
stos
and
lcall
xchg
daa
jl
sbb
aam
ret
or
adc
jno
in
push
jb
clc
or
cmpsl
adc
movsb
jge
pop
repz
sbb
rcrb
or
loopne
push
mov
push
add
cmp
dec
jno
aam
in
adc
push
add
loop
jmp
popf
xor
xchg
xchg
cli
and
adc
jne
ja
and
in
xchg
lcall
pop
lret
insl
in
push
cmp
sbb
add
arpl
dec
fadd
cs
cltd
jmp
icebp
jecxz
and
inc
dec
push
add
and
je
xchg
mov
sub
cli
xchg
popa
or
jle
adc
xor
pop
mov
add
std
sub
mov
scas
dec
xor
loop
mov
cmp
movsb
stos
dec
add
cmp
sti
jbe
xchg
insb
mov
imul
enter
jns
loope
mov
mov
inc
mov
gs
pusha
call
in
inc
sbb
jmp
enter
scas
mov
adc
in
jg
jle
dec
arpl
mov
cmp
push
xor
cld
outsb
dec
lcall
sub
mov
xor
ss
repz
std
pop
and
push
xchg
jmp
sbb
or
fisubrl
bound
pusha
fisttpl
lock
cmp
aaa
fisubrs
pop
popa
push
lea
out
dec
push
dec
xchg
sub
or
or
or
in
imul
stos
mov
mov
jge
pop
or
push
pop
rorl
nop
jle
and
repz
mov
pushf
das
idivb
pushf
sahf
lret
pop
cltd
push
xlat
lret
loop
aas
leave
sub
std
in
and
scas
rcll
dec
sar
out
bound
mov
push
jg
in
js
jae
xchg
add
lahf
cwtl
cwtl
in
popl
mov
pushf
push
in
inc
mov
add
dec
mov
push
xchg
data16
std
jle
jne
xchg
or
mov
jl
sub
cmp
mov
mov
rcrl
inc
xor
add
ror
xchg
xchg
push
lds
scas
mov
bound
stc
cmp
mov
fldl
inc
sub
and
incl
push
jp
pop
push
movsl
jmp
test
aas
fwait
adc
mov
mov
fwait
sub
pop
cmp
fidivl
xor
leave
out
adc
sub
call
into
sub
pop
jnp
imul
mov
mov
lahf
lods
sti
mov
xlat
adc
xor
fchs
sub
sbb
sub
push
and
sub
mov
rolb
mov
mov
adc
or
jle
xor
fimull
enter
jl
imul
cmp
lcall
inc
je
jne
xchg
xchg
xor
enter
mov
into
fmul
out
loopne
and
mov
out
xchg
lds
fsubs
mov
mov
int3
pop
sub
popa
insb
dec
scas
mov
adc
jmp
outsl
lods
adc
mov
mov
xorb
loop
test
sbb
clc
sub
or
mov
and
and
xor
fs
xchg
dec
or
jae
mov
subl
repz
jmp
and
icebp
push
adc
inc
pop
aam
jb
mov
dec
dec
jno
lods
aaa
loope
cmc
mov
inc
cld
ljmp
lcall
outsb
pop
fsts
or
sahf
aam
out
inc
lods
xchg
push
fisubl
out
jo
sbb
jns
push
js
mov
xchg
loope
ss
xchg
and
add
pop
pushf
sbb
cltd
and
cmp
cmp
lahf
mov
adc
inc
ljmp
xorl
push
ds
shrl
test
rcll
mov
test
inc
mov
stos
xor
mov
rolb
int
decl
inc
xchg
xor
out
mov
aaa
pusha
ljmp
and
imul
sub
sub
xor
cmpsb
movl
jbe
push
fisubrs
repnz
loop
adc
dec
mov
mov
lahf
add
dec
jae
adc
pop
into
jb
mov
push
mov
in
fwait
jae
ljmp
xor
rol
daa
push
adc
enter
in
cmc
rcrb
sub
or
mov
mov
aas
dec
add
mov
inc
jbe
fs
arpl
in
dec
xchg
sti
call
mov
in
pop
sub
out
test
inc
hlt
jg
shrb
cmpsl
jnp
and
aas
out
push
xchg
push
leave
push
outsb
fdivs
xor
imul
add
and
in
add
push
mov
and
push
stc
mov
adc
sbb
xchg
mov
mov
insb
inc
xorl
xchg
testl
aad
mov
mov
inc
es
push
rclb
ds
add
sub
outsb
fdivp
ljmp
stos
addr16
ja
inc
test
mov
inc
in
xchg
ss
jbe
das
jecxz
loope
notb
inc
pop
test
call
lds
inc
les
icebp
in
xchg
mov
call
popa
jae
test
lods
out
add
mov
fdivrs
push
imul
neg
pop
pand
xchg
das
sbb
sti
sub
pusha
hlt
mov
push
cmc
lahf
cld
cli
push
jae
and
add
popa
popf
xor
repnz
hlt
dec
imul
ljmp
or
cmpsl
cli
mov
mov
mov
outsb
dec
xchg
gs
les
divb
and
push
rorl
int3
mov
sbb
fmul
sub
mov
lods
inc
outsb
adc
jmp
shlb
lds
cwtl
jne
xor
jp
cmp
push
mov
call
aaa
dec
push
into
movsl
jne
mov
inc
and
inc
jle
popa
faddl
jnp,pt
bnd
xchg
fwait
push
scas
stc
shr
fsubrl
outsb
push
lret
popf
cmc
addl
mov
pop
sub
cltd
xor
loope
push
sub
out
push
cwtl
addr16
leave
sub
das
adc
fdivr
xchg
outsb
dec
or
xor
xor
ret
and
dec
iret
lret
out
fadd
sbb
inc
mov
in
into
insb
pushf
fidivs
mov
sbb
add
cmpsb
jns
movsb
xlat
les
ret
shrl
adc
js
es
cmc
push
in
lods
inc
popa
mov
dec
xor
aam
popf
push
dec
mov
cmpsl
cmp
fdivrl
cmpsb
dec
mov
inc
cmp
and
or
xchg
push
and
jb
jle
inc
test
stos
les
add
mov
jg
xchg
movsb
lods
jl
lods
imul
fstps
adc
push
test
testl
addr16
repnz
pop
dec
add
or
mov
icebp
enter
mov
jbe
adc
fisttps
test
pop
iret
mov
out
jecxz
aaa
xchg
arpl
lods
addr16
incb
inc
fnstsw
lret
das
rcll
lds
mov
sti
sub
xor
scas
daa
ret
adc
movsb
cmp
pushf
and
mov
dec
lret
shlb
sub
aaa
jmp
inc
fnsave
pusha
loopne
mov
or
mov
push
shll
add
adc
mov
enter
aam
or
push
jp
imul
cmp
jmp
mov
cmp
repz
mov
shl
adc
arpl
or
sbb
jle
fpatan
and
pushf
inc
sbb
in
xchg
mov
inc
inc
std
cld
sbb
jno
leave
pop
aas
repnz
sub
rcll
cmp
out
adc
mov
int3
mov
call
mov
stos
push
sbb
mov
mov
shll
lods
mov
dec
pop
and
mov
in
jne
mov
mov
add
ret
test
mov
aaa
das
dec
repz
xchg
xchg
xor
mov
lods
stc
scas
scas
addr16
mov
push
xchg
imul
ja
xchg
std
pusha
inc
in
xlat
jle
icebp
mov
adc
loope
or
jg
les
nop
div
inc
movsb
clc
lret
movsb
push
pop
push
adc
shrl
jno
xor
imul
push
lock
les
inc
fcoml
cmc
das
inc
test
lret
xchg
in
fcmovnb
scas
pushf
xchg
ss
push
push
jge
add
loopne
ret
jle
adc
in
and
push
mov
mov
test
jp
xorb
ret
adc
das
cli
mov
or
cmp
xor
lock
jg
dec
mov
fiaddl
outsl
jne
cwtl
leave
mov
cld
dec
mov
mov
jne
push
or
sbb
jo
or
lret
fcomps
xor
shlb
jno
jmp
xlat
adc
dec
faddl
lock
das
or
lret
out
popa
jns
lods
and
insb
add
cmp
scas
clc
daa
pop
movsb
pop
mov
push
jbe
repnz
les
lahf
mov
adc
cmpsl
negb
aaa
cli
and
xor
push
insb
pop
cltd
sbb
rcrl
fnstcw
jbe
jle
mov
movsl
dec
bound
insl
pop
outsl
push
mov
imul
sbb
sbb
fildll
push
scas
cmp
push
lret
mov
push
push
inc
jne
xlat
lret
popf
cwtl
call
xlat
xchg
cmpsb
push
or
lea
cmpl
xchg
add
mov
ljmp
enter
lods
les
push
or
cltd
lret
cmp
das
mov
or
lods
xchg
pop
int
aam
mov
jecxz
std
xchg
pop
mov
popa
add
inc
aas
fldenv
aaa
sub
jnp
std
and
pop
jge
jle
mov
push
pcmpgtw
mov
outsl
movsl
out
sti
and
sbb
jl
mov
mov
jmp
lods
out
popa
sbb
in
scas
loope
push
lahf
cld
popf
scas
xchg
fidivs
cwtl
cs
cli
mov
push
mov
or
imul
fldenv
fldenv
jl
pop
outsb
inc
lcall
and
dec
add
lock
repz
mov
les
inc
movsl
cld
add
call
sub
jno
mov
ret
sbbl
loopne
mov
lock
or
repnz
lret
or
test
and
inc
fimuls
sub
mov
out
jmp
push
cmp
sbb
gs
movsb
mov
ljmp
arpl
xorb
nop
loop
xor
orl
push
push
cmp
lcall
andb
sbb
lea
xlat
inc
leave
js
xor
in
sbbb
mov
les
ss
lret
insl
xor
sahf
adc
lods
jb
mov
dec
add
cs
and
shl
and
fsubl
adc
add
jecxz
jl
push
jg
dec
das
push
nop
pop
jle
sbb
lds
outsb
ret
push
mov
in
push
xor
ljmp
xor
mov
mov
cwtl
das
loopne
imul
movsl
lret
mov
test
insl
xchg
xchg
cmc
sub
into
mov
cwtl
das
mov
std
das
lods
adc
shlb
mov
dec
dec
adc
fs
mov
jmp
das
cwtl
xor
cli
nop
int
shl
div
push
ret
sub
adc
les
adc
cli
jp
outsl
lcall
cmp
and
loopne
dec
mov
pop
leave
popf
push
jl
inc
inc
nop
inc
push
xor
adcb
loop
ss
hlt
add
or
inc
mov
out
shlb
adc
add
orb
in
xlat
jns
mov
mov
ljmp
dec
push
stos
inc
ja
loop
mov
call
push
sub
push
aaa
std
mov
xor
dec
fistpl
aaa
adc
sub
inc
and
ljmp
sub
mov
nop
sbb
in
cmp
inc
sbb
cmpsb
test
mov
lods
rcrl
lahf
aaa
jg
add
js
xchg
lea
test
xor
and
mov
mov
rcr
push
push
mov
xchg
adc
xchg
mov
mov
mov
cmp
xlat
push
pusha
mov
xchg
shll
sbb
inc
or
pusha
adc
addr16
pop
or
jbe
xor
das
ds
jbe
xor
sbb
std
fsts
xchg
fstpt
xchg
mov
mov
or
inc
rorb
mov
lret
push
loopne
out
outsb
mov
or
inc
ljmp
fnstenv
mov
mov
xchg
inc
cld
xchg
push
loopne
push
int3
scas
hlt
mov
stc
cli
lahf
lods
add
int
notb
sub
movsl
loop
ss
xor
xor
cs
ljmp
lods
xchg
dec
lcall
xor
call
mov
and
movsl
and
mov
lret
jnp
pop
xchg
push
mov
push
sbb
mov
fldcw
jae
sbb
pusha
out
jnp
cmp
rclb
mov
popf
lea
iret
sbbb
imul
cmpsb
aaa
xchg
jmpw
adc
scas
xchg
lahf
jg
mov
adc
sub
sub
movsb
xlat
and
sarb
or
lret
data16
out
clc
mov
push
dec
mov
fdivrp
pusha
popf
test
jg
add
jnp
pop
add
jecxz
cmp
jmp
mov
adc
adc
mov
or
or
cld
cmpsl
mov
push
pop
int
pop
sahf
push
jg
hlt
arpl
or
xchg
mov
sub
add
les
aad
add
test
xchg
pop
push
cld
jnp
pop
mov
repnz
inc
repnz
cs
add
jb
or
push
int
arpl
lret
mov
xchg
out
xchg
test
icebp
and
mov
in
lret
rol
sti
sub
pop
push
test
xor
adc
fdivs
inc
add
and
lock
mov
and
lds
add
push
fcoms
adc
and
mov
shl
push
jne
and
sbb
aaa
scas
out
push
leave
pop
pop
stos
loop
repnz
daa
cmp
adc
int3
dec
xchg
jns
lret
in
add
inc
jmp
roll
pop
enter
cmp
imul
pop
add
adc
test
lock
jmp
xor
mov
test
mov
push
cs
or
jb
xchg
fidivs
cmpsl
push
xor
inc
sarb
cmc
rsqrtps
arpl
pop
pop
xchg
add
push
out
xchg
cmp
add
push
pop
xor
mov
mov
and
xor
ds
sti
das
pop
sub
repnz
xchg
sbb
lock
mov
and
jp
fwait
push
sbbb
in
inc
cltd
sub
adc
js
out
std
push
lret
out
mov
cmc
stc
rcrl
inc
fldcw
jne
inc
ret
sub
leave
sbb
test
lods
add
push
and
pop
lret
lods
push
inc
push
mov
hlt
xorb
push
stc
arpl
jo
stos
loop
cmp
out
hlt
and
movsb
test
dec
out
mov
es
pop
fs
aad
dec
mov
push
jb
hlt
dec
inc
or
orb
sbb
adc
aam
inc
jl
cltd
aam
pop
sbb
imul
push
bound
xchg
ficompl
out
lahf
int3
ret
popf
lods
in
mov
pop
fiadds
push
inc
shrb
inc
mov
dec
pop
int
ljmp
cwtl
rolb
add
ljmp
fs
into
stos
jbe
xchg
inc
call
rcl
push
stos
xor
lods
lock
and
sbb
dec
cmpsb
jg
sub
mov
xchg
add
xor
ficoml
push
scas
pop
push
adc
inc
cwtl
scas
in
rcrb
or
pusha
mov
add
cmp
inc
enter
adc
lods
cli
in
pop
data16
fisubl
pop
mov
bound
mov
andb
or
jo
cmp
pop
pop
push
in
or
sbb
dec
push
pxor
cmp
adc
jg
lcall
xorb
test
mov
sub
test
imul
cmc
int
mov
pop
das
pushf
mov
mov
push
xorb
dec
adc
idivb
call
sub
shlb
mov
lretw
movb
jae
fildl
xchg
rolb
sub
hlt
shl
daa
xchg
mov
push
mov
mov
std
pop
pop
pushf
or
fidivs
lret
lods
fmull
in
repz
push
hlt
mov
pushl
sbb
and
mov
jb
xchg
xchg
lcall
or
inc
mov
push
add
pop
in
mov
leave
xchg
dec
pop
jb
icebp
inc
addl
adc
incl
iret
aam
sub
fldenv
movsl
push
enter
aam
xchg
cmp
pop
sbb
inc
mov
add
mov
or
add
dec
xchg
push
lds
sub
mov
inc
lock
loopne
loopne
or
mov
or
movzbl
pop
leave
jg
cmp
out
jae
pop
mov
jbe
addr16
push
or
xchg
pop
fdivrs
dec
int
ror
cmp
xchg
mov
add
rcl
and
icebp
rclb
rcl
imul
xchg
nop
fidivrl
push
mov
mov
push
iret
addr16
jmp
adc
rcrb
inc
outsl
and
cmp
dec
out
push
cwtl
jl
dec
test
dec
stos
or
fsts
sbb
pop
xchg
lods
cmp
fwait
nop
test
pop
pushf
inc
shll
mov
inc
and
sub
and
fucomip
mov
and
mov
jge
jle
or
lret
dec
dec
in
xor
std
and
bound
bound
fnstsw
sbb
mov
xor
out
into
cmp
lods
out
xchg
mov
stos
gs
dec
ds
loop
sub
xor
add
jge
add
mov
outsl
jns
dec
incb
xor
jnp
pop
jbe
in
sbb
push
adc
jbe
je
bound
das
mov
loope
stos
int3
add
ljmp
test
xchg
sti
imul
mov
mov
fsubr
jns
and
fisubrs
jl
push
jmp
fldenv
es
or
repz
sub
outsb
jo
jp
arpl
das
in
movsb
fidivs
insb
das
outsl
jecxz
jecxz
mov
or
arpl
cmpsb
mov
push
and
sub
add
jecxz
sahf
xchg
cmp
in
add
fisttpl
enter
pop
into
fcomi
cmpsl
stos
pusha
or
in
outsb
cli
xchg
jle
iret
outsl
xor
sub
adc
xor
frstor
mov
bound
pop
test
test
lds
clc
jle
js
mov
inc
pmaxsw
cs
or
push
push
insl
test
push
out
mov
sbb
and
jp
jb
inc
leave
les
fs
mov
and
mov
fbld
push
pop
shll
dec
lods
ficompl
mov
int
icebp
jecxz
push
sub
aad
cld
or
arpl
out
dec
jnp
mov
scas
in
push
cmpb
pop
pop
sbb
or
xchg
fbstp
stos
xor
xorb
outsl
add
out
jecxz
inc
fldt
sbb
mov
jmp
xor
push
dec
jmp
xchg
or
pop
and
bts
xlat
inc
push
xchg
flds
je
mov
shl
mov
div
push
inc
and
sub
and
gs
push
lret
dec
jb
les
mov
mov
xchg
add
ljmp
dec
add
pop
and
or
jbe
xor
out
ret
loope
mov
dec
lock
sbb
xchg
in
adc
out
sbb
pop
add
mov
imul
repz
jle
test
xor
scas
add
inc
ljmp
aas
into
fbld
or
outsl
or
outsb
and
in
aam
jp
cli
mov
cmpsl
cmp
imul
pop
and
jnp
scas
rcrb
adc
jmp
push
insb
pop
mov
cwtl
adc
push
and
pop
jae
xchg
leave
shlb
push
inc
mov
inc
inc
xchg
or
lahf
jbe
push
out
and
push
sub
out
lahf
movsb
mov
test
adc
shl
ds
push
ret
enter
sar
cmpsl
lods
mov
pusha
mov
xor
xchg
sub
out
in
aam
rorl
or
xchg
pop
cmp
pop
fistl
push
hlt
pop
inc
mov
cwtl
sbb
adcl
dec
xorb
sbb
xchg
orb
call
xchg
nop
push
sbb
movsb
nop
mov
xchg
or
add
stc
fs
jecxz
outsb
cmp
popa
add
adc
inc
add
into
sbb
cmp
xchg
pop
push
mov
or
adc
ja
sub
std
add
push
ret
call
rcr
cmp
mov
std
out
std
aad
cmp
xchg
or
xchg
or
sbb
jns
in
outsb
sbb
bound
loope
aam
or
cmp
ret
pop
pop
insl
xchg
push
xchg
and
sbb
ljmp
roll
push
push
jle
mov
sub
fcomip
imul
jle
mov
sub
lock
js
sub
pushf
repz
xchg
push
es
insb
fildll
push
ss
cli
nop
push
call
adc
mov
mov
jecxz
add
jp
rorb
inc
sahf
cmpsl
rolb
js
jl
mov
add
pop
inc
push
jne
pop
sbb
fwait
imull
dec
cmp
lret
add
xchg
dec
add
mov
into
or
jbe
sub
es
arpl
pusha
hlt
push
fisubs
lock
xchg
call
rcr
rorb
cwtl
or
inc
daa
sbb
mov
mov
dec
loop
sub
xchg
nop
das
dec
jnp
fst
inc
xchg
and
pop
push
xchg
test
push
push
wrmsr
fisubl
icebp
les
sub
push
add
adcb
mov
out
cld
mov
cwtl
cmc
cmp
ljmp
jb
inc
rcl
fcmovb
enter
jns
out
jb
enter
inc
push
bound
inc
stos
insb
hlt
jae
adc
roll
mulb
repz
inc
jbe
xchg
loope
cmp
scas
adc
cmp
loop
mov
stos
add
pushf
cmp
add
mov
mov
mov
ja
sarb
sbb
insb
push
in
sub
popf
sub
add
fucomi
lret
sti
push
jge
hlt
push
test
in
fidivs
xchg
inc
arpl
mov
mov
adc
lahf
inc
shlb
dec
sub
and
ret
push
imul
cmpsb
loope
mov
xor
out
mov
pop
movsb
inc
insl
fdivl
mov
mov
cmp
outsb
push
fwait
loop
loop
shl
mov
xchg
in
pop
imul
loopne
xor
mov
loope
or
xchg
ret
ja
cs
std
or
shlb
xor
out
sub
mov
pop
dec
iret
iret
pop
std
shll
pop
inc
in
sbb
xor
xorl
xor
and
icebp
push
int
es
lods
xchg
mov
cmp
icebp
bound
xor
out
ljmp
lcall
or
or
xchg
inc
fs
jo
fwait
lods
ret
push
inc
in
test
push
imulb
into
iret
test
dec
cmp
fiadds
popa
insl
push
dec
in
lahf
lods
lret
jo
mov
push
lret
add
insb
test
push
cwtl
rclb
jge
cmp
cld
fs
xchg
lock
cmp
call
mov
imulb
lret
jns,pn
ret
dec
dec
dec
push
arpl
jo
mov
pop
test
xchg
gs
mov
jb
sti
dec
mov
lcall
scas
in
das
xchg
jg
add
in
ds
xor
int
mov
decb
inc
xchg
push
jno
xchg
ss
xchg
pop
adc
dec
test
mov
ret
pop
or
and
sub
mov
les
jp
int
arpl
xor
scas
jp
and
arpl
fstl
inc
and
fdivr
add
add
arpl
stos
sbb
popf
push
aam
sub
push
push
stos
push
jne
cmp
bound
aaa
jg
jmp
push
dec
std
addr16
or
sbb
outsb
inc
adc
insb
xchg
mov
inc
jnp
pop
mov
icebp
dec
ss
aad
jno
in
sbb
jle
dec
ss
in
nop
dec
cmpsb
fcoms
mulb
rcr
orl
mov
sti
dec
or
repnz
inc
pop
leave
shrb
ds
sahf
inc
std
les
loope
push
pop
jl
adc
sbb
in
negl
push
scas
testb
xchg
dec
out
push
and
xchg
ss
sarl
cmpsb
pop
leave
xchg
push
mov
push
popa
lds
out
inc
cltd
sub
pop
cmp
or
jno
aad
xchg
mov
test
jg
lds
jp
popf
jb
lock
mov
jnp
outsb
and
mov
call
fidivrl
pop
loope
stc
mov
sub
jmp
jl
jle
cmp
adc
insb
pushf
push
and
ljmp
fcompl
pop
jb
adc
hlt
sbb
shrl
mov
out
sti
adc
sub
pop
lds
subl
mov
aad
loopne
jecxz
iret
cmp
push
inc
je
inc
lret
add
jmp
lea
adc
add
jge
mov
lret
std
std
push
cmp
jle
pop
movsl
in
jnp
push
sbb
push
mov
add
das
mov
sub
imul
pop
int
jb
or
repz
pop
or
imul
cmp
xchg
jge
subb
addr16
adc
mov
idivb
movsb
test
sbb
sbb
lcall
lret
pop
mov
aaa
fwait
fisubrs
jbe
subl
push
jge
xchg
inc
xchg
mov
mov
dec
aad
repz
pop
or
cli
lods
dec
daa
push
sahf
cmp
aas
mov
cmp
and
pushf
in
jle
push
aam
std
and
cmp
cmp
rol
and
lahf
in
clc
es
mov
out
adc
sbb
call
dec
stc
lahf
pop
roll
adc
push
lcall
fsubrs
aaa
cs
into
frstor
pop
adc
jb
cmp
pushl
sahf
adc
mov
adc
ficoml
cld
jo
jle
bnd
imul
xor
daa
sbb
or
cmc
add
lahf
xor
in
add
insb
adc
data16
dec
hlt
jo
adcl
mov
stos
dec
aas
pop
out
sub
call
js
dec
xchg
imul
xchg
cmp
mov
ds
push
stc
mov
aaa
and
mov
aas
mov
repnz
pushf
shlb
xchg
push
dec
daa
fistpl
clc
sbb
jl
sbbb
mov
dec
inc
sbb
lret
xchg
jnp
cld
mov
or
mov
xchg
xchg
or
adc
jne
cmp
or
push
jl
push
mov
pextrw
cwtl
push
insl
insl
mov
sbb
leave
fsubr
jmp
bound
test
addr16
lahf
dec
push
adc
cmp
sub
fsubr
fnstsw
sub
bound
aaa
shl
test
mov
inc
fisubl
mov
popa
icebp
mov
sbb
in
in
icebp
dec
outsb
lret
data16
rolb
out
push
add
xor
cltd
push
push
subw
pop
push
ficomps
fld1
sbb
dec
leave
inc
push
add
leave
xchg
pop
lock
test
jae
mov
or
clc
test
loopne
insl
add
cmp
mov
xchg
movl
jb
pop
in
jecxz
aam
jg
push
stos
fiaddl
pop
enter
jns
addl
icebp
adc
lea
push
sbb
outsb
mov
or
cmpsb
xor
int
pusha
popa
in
lahf
push
lock
rolb
xor
push
ret
mov
xlat
xlat
sti
lds
xlat
sbb
sbb
ss
mov
jmp
mov
xor
insl
jno
add
les
enter
mov
cmp
or
in
mov
movsb
xchg
ja
xor
test
fidivs
or
js
push
mov
test
mov
push
dec
cmp
xor
enter
jmp
adc
lahf
aas
dec
xchg
leave
adc
mov
dec
cmp
sahf
xchg
arpl
inc
out
repz
or
add
sbb
shrb
call
repnz
cltd
imul
push
cmpsb
xchg
sbb
int
add
push
shrb
cld
cmp
orl
jp
insb
repnz
popa
ja
mov
addr16
outsl
cmp
lcall
mov
pop
jno
mov
and
movsl
pop
rcrb
test
in
loop
stos
jmp
sbb
fiaddl
xor
lahf
mov
or
mov
dec
mov
or
nop
sbb
pop
lcall
pop
ljmp
dec
mov
and
bound
out
insb
inc
in
clc
lahf
sbb
imul
dec
and
adc
das
popf
jne
aad
les
outsl
outsl
adc
xor
fwait
and
add
or
lahf
cmovnp
mov
ret
popf
ja
xor
jge
push
sbb
pop
popf
sti
sbb
arpl
addr16
out
mov
les
add
and
hlt
in
xor
fildll
push
into
clc
xor
and
xchg
dec
mov
mov
cwtl
and
mov
loope
mov
jge
lret
cmc
pop
cmp
push
sub
jb
mov
jmp
adc
xchg
pop
add
dec
jo
jbe
and
icebp
js
inc
js
sbb
pop
cmp
sahf
fsubrs
add
pop
mov
pop
popf
fildl
xor
jge
lods
jge
cmp
jl
dec
imul
sbb
loope
or
mov
cltd
sbb
sub
pop
sub
sub
adc
xor
aas
add
scas
jge
es
mov
push
das
leave
sub
jg
mov
add
fstl
mov
xchg
push
lret
imul
add
pop
dec
xor
iret
iret
aam
aam
movsl
mov
jle
pop
daa
insl
stc
jbe
xchg
jg
mov
shr
push
inc
pop
jle
jb
push
lahf
and
jl
cmc
arpl
sbb
sbb
sti
insl
das
push
mov
or
lock
lds
mov
dec
leave
cmp
or
ss
pop
sub
sub
inc
add
or
lret
scas
popa
subl
pushl
sub
jne
lock
hlt
inc
sub
mov
nop
testb
cmpb
addl
push
push
push
cwtl
adc
lcall
sbb
fistl
mov
adc
in
add
sub
loope
mov
mov
or
jne
insl
iret
test
sti
popa
in
push
mov
cs
ja
inc
pop
mov
jge,pn
jl
mov
div
mov
in
mov
movsb
sub
mov
lods
imul
push
add
inc
jae
mov
dec
pushf
stos
pop
dec
mov
div
test
or
arpl
lods
sbb
dec
shlb
loop
out
test
fldenv
cmp
mov
inc
xor
lcall
mov
mov
and
sub
divl
inc
add
inc
xor
cmp
daa
repz
sahf
rorb
push
xchg
fs
jne
aas
pop
es
sub
mov
push
adc
aas
int3
gs
sbb
daa
push
mov
loop
lahf
mov
stc
fbstp
popa
xor
sbb
inc
mov
mull
mov
ss
rcr
mulb
iret
pcmpgtb
js
rorb
hlt
inc
stos
sub
imul
add
fiaddl
push
pop
cli
push
push
mov
push
int3
mov
popf
jge
sub
incb
mov
dec
inc
outsl
dec
jo
movsb
std
sti
adc
ficoms
es
stc
mov
mov
push
jmp
leave
push
cmp
sbb
icebp
orb
mov
outsb
push
fldl
and
loopne
test
in
lds
mov
dec
xchg
test
jge
inc
aaa
inc
pop
ret
adc
mov
add
adc
and
scas
hlt
inc
pushf
push
jmp
bound
fcmovnu
cmp
sub
or
test
xlat
push
mov
add
fdivl
es
cli
adc
pusha
mov
sbb
scas
test
xchg
or
lcall
or
mov
push
loop
mov
cmpsb
sbb
xchg
adc
stos
xchg
cmp
cli
fisubs
xchg
jl
jp
cmp
adc
sbb
dec
cld
andb
popa
xchg
jno
xchg
mov
imul
insb
cmp
mov
negl
fldcw
mov
jae
or
add
leave
mov
mov
adc
and
imul
xor
mov
int
cmpsb
jbe
lock
pop
mov
mov
cli
popa
fnstsw
sahf
sbb
jno
inc
sahf
cmp
or
rcr
cmp
adc
and
les
lcall
jns
push
aaa
popf
ror
dec
rorb
rcr
dec
rcll
enter
inc
xchg
adc
aaa
pop
addr16
or
pusha
cwtl
add
daa
imul
popf
ret
mov
in
mov
cmp
movsb
cmp
fs
roll
shll
dec
mov
pop
pop
push
push
aam
lods
mov
filds
jmp
jo
movsl
cld
lret
pop
mov
sub
popa
mov
xor
jmp
popa
mov
test
add
sub
daa
aas
xor
nop
sbb
jns
mov
test
xor
mov
call
mov
xor
cmpb
jecxz
cmp
fwait
jno
mov
dec
pop
cmp
pop
in
js
xor
lcall
call
movsl
dec
xchg
and
sbb
aam
mov
xchg
int3
orl
lods
dec
xchg
xchg
xchg
aaa
insb
add
adc
pop
aaa
imul
jecxz
movsb
fsubrl
ds
jb
jbe
pop
cmp
loopne
sbb
dec
rclb
in
or
mov
jnp
jp
push
and
stc
pop
mov
xchg
xchg
lcall
sahf
xchg
shlb
pop
in
mov
and
mov
cld
jnp
dec
push
movsb
aad
mov
add
fwait
or
mov
shrb
fcmovnu
dec
daa
xchg
jle
jns
popa
push
pop
pop
pusha
mov
fisubrl
lods
es
sub
out
mov
mov
push
aas
cmp
test
sti
fstps
push
adc
cmp
xchg
mov
int
xchg
data16
push
sbb
fwait
or
cmp
mov
je
hlt
dec
xchg
and
inc
enter
sbb
mov
mov
cmp
mov
inc
bound
inc
inc
sti
adc
xchg
lret
xchg
int
mov
push
repz
cwtl
push
sbb
push
mov
repnz
fnstsw
push
pop
aas
mov
inc
push
ret
jmp
call
in
imul
cwtl
sbb
pusha
xchg
addb
sub
pop
add
sbb
push
notl
test
in
scas
imul
rcr
xchg
jb
es
pop
jge
mov
adc
mov
jnp
sub
inc
lret
dec
outsl
repz
insb
stos
or
inc
gs
std
adc
cmpsl
mov
xor
push
and
push
pop
int
ret
adc
lds
pop
or
gs
in
div
lea
push
fnstcw
outsb
cmp
jecxz
jle
push
dec
cwtl
jge
pop
arpl
add
test
mov
fwait
xchg
xor
push
nop
sahf
add
add
adc
clc
inc
jle
sbb
idivb
pop
popa
call
adc
insl
add
ja
push
cmpsl
dec
fisttpl
sub
ficoms
out
lcall
push
js
negl
dec
imul
lret
addr16
lret
ljmp
into
inc
push
xlat
mov
mov
inc
sbb
mov
ljmp
ja
push
mov
lods
loop
push
insl
mov
sub
hlt
popl
dec
int3
fistpll
inc
push
mov
or
aaa
lods
xorl
pop
sub
mov
stos
aad
jae
push
insb
popf
push
sbb
inc
xchg
inc
aad
lahf
cld
inc
addr16
sub
or
adc
test
xchg
addr16
fbld
sub
in
mov
xchg
mov
popl
push
mov
insb
lahf
aas
loopne
movsl
popf
jecxz
jbe
mov
pop
ja
mov
in
sbb
xchg
add
pop
scas
nop
inc
bnd
pop
add
jecxz
lea
fbstp
push
insb
cli
in
clc
mov
insb
loopne
adcb
adc
mov
stc
xorl
cmp
popa
cmp
stos
lcall
sub
bound
nop
cs
xlat
test
out
push
clc
xchg
gs
call
sbb
stos
mov
mov
sub
notl
es
add
mov
add
cmpsb
enter
jmp
push
add
stc
jmp
mov
dec
adc
outsb
cmpsb
push
xor
and
push
les
out
and
clc
stos
fadd
mov
mov
enter
ja
sub
xchg
push
push
xorl
popl
jnp
outsb
test
sbbb
ret
push
lahf
loopne
xor
add
lods
xchg
testb
fisubrl
push
cld
in
push
pop
sbbl
adc
mov
js
cmp
jns
and
or
adc
inc
inc
ret
mov
pop
cmp
mov
mov
xchg
bound
into
xchg
adc
lods
inc
insl
cmpsb
mov
or
daa
repnz
jecxz
cwtl
cs
nop
cltd
push
ljmp
xor
ja
call
mov
stos
inc
mov
outsb
out
xchg
movsb
mov
int3
mov
sub
popf
cmp
loop,pn
adc
sbb
lds
pop
xchg
pop
jno
push
cmp
es
push
andl
inc
aaa
inc
sbb
cwtl
loop
lock
addr16
or
sub
inc
jb
add
cli
mov
dec
pop
or
cli
mov
roll
mov
sar
cli
push
dec
insl
ss
loop
lock
ds
xchg
jp
outsb
and
rcr
les
out
add
cmc
jle
aam
lods
dec
std
adc
arpl
xor
jg
int3
pop
pop
or
sub
pop
jge
adc
addr16
cmc
rolb
xchg
nop
sub
mov
ja
jl
in
ss
push
call
lret
pop
leave
pop
out
daa
mov
dec
rorl
push
pop
push
stos
lahf
sbb
or
sbb
sbb
scas
mov
popf
ja
cmp
popa
adc
popa
xchg
sub
pop
addb
test
push
fcoml
mov
loop
add
test
and
aas
xchg
sbb
sub
mov
out
aam
sti
aas
loope
adc
push
lods
push
cld
inc
xchg
sbb
pop
pusha
add
fmuls
dec
add
jb
pop
pop
sub
cli
push
push
in
imull
fiadds
test
add
dec
ror
mov
mov
test
ja
mov
test
rolb
xchg
adc
push
leave
hlt
and
jp
mov
xlat
ljmp
aaa
mov
xor
les
repz
std
in
pop
mov
clc
mov
add
jecxz
loope
mov
xchg
lds
push
inc
dec
scas
and
adc
cmpsl
add
jbe
lcall
movsb
and
xorb
push
or
inc
mov
addr16
sub
xchg
add
in
ret
popa
pop
stc
ljmp
cmpsb
sbb
push
pop
jmp
or
iret
stos
pop
pop
adc
adc
mov
adc
mov
lds
dec
fwait
mov
sbb
push
sub
mov
jbe
scas
pop
mov
shl
xchg
xor
stc
mov
jle
daa
adc
hlt
push
and
ret
cltd
inc
mov
pop
and
mov
pop
mov
and
hlt
shll
js
ret
arpl
bound
mov
push
mov
out
divb
add
pop
adcb
push
arpl
cli
push
data16
cmc
ret
or
pop
inc
mov
insb
inc
add
sti
repz
xchg
mov
or
inc
lret
out
dec
movsb
jnp
jge
cmp
jbe
inc
aam
dec
sahf
xchg
pusha
ret
adc
jecxz
enter
gs
sbb
outsl
lds
into
xor
ret
stos
adc
inc
xchg
inc
sti
push
inc
pop
mov
mov
ret
fimuls
lods
or
insl
xchg
ret
cltd
dec
pusha
nop
mov
fwait
imul
lods
mov
and
ret
pop
xchg
sub
mov
or
ret
sbb
addr16
add
add
push
xchg
and
cmp
shll
inc
lea
xchg
fmulp
push
xchg
mov
ficomps
rclw
push
dec
lds
xor
daa
lret
dec
test
xchg
xchg
dec
int3
sbbl
cmpsb
push
fwait
imul
jp
dec
test
popa
into
sbb
popf
call
jg
mov
sub
jnp
mov
lret
lret
mov
push
xchg
inc
shlb
or
cld
stos
rclb
pop
jmp
in
push
les
jecxz
push
adc
jl
pop
call
xchg
hlt
xchg
fisubrl
mov
pop
arpl
iret
icebp
mov
push
lds
pop
jl
fiaddl
in
mov
mov
dec
clc
into
adc
popa
or
imul
mov
test
mov
or
aam
adc
aaa
inc
cmp
lock
mov
jle
or
jmp
call
insb
mov
leave
sbb
cmp
mov
xor
add
push
mov
popa
push
es
lea
xchg
lods
inc
popf
mov
xorl
fmul
loop
or
mov
cltd
mov
test
pushf
adc
in
push
out
mov
sahf
inc
rolb
shll
ds
inc
xor
and
xor
add
out
xor
jnp
idiv
xor
cmpsl
inc
lock
dec
jg
int3
add
and
sbb
data16
outsl
sbb
lock
stc
insb
jns
and
mov
imul
fbstp
push
jne
push
and
lea
cmpsl
imul
or
push
inc
push
in
dec
loop
push
and
sbb
sbb
jb
and
mov
dec
filds
inc
sbb
pop
dec
popl
into
sub
mov
or
sbb
aaa
sbb
lods
pop
xor
lahf
mov
and
push
jb
mov
or
std
jns
ret
mov
dec
xchg
jl
mov
push
inc
out
and
mov
or
and
xlat
jecxz
subl
xchg
push
xchg
pusha
or
mov
cmp
test
push
decb
les
lods
clc
jp
aad
inc
hlt
xor
in
leave
aad
xor
aad
sub
lds
je
arpl
fstpl
adc
pushf
or
mov
pop
cmp
cmp
pop
pop
jb
jg
mov
jle
pop
pop
pusha
mov
stos
inc
xor
das
mov
lahf
cwtl
pop
daa
dec
dec
test
xchg
xlat
cmp
adc
xchg
dec
fldenv
mov
pop
call
and
leave
out
pop
fchs
jmp
pop
sti
sbb
adc
iret
ret
sbb
out
adc
jae
jbe
and
xlat
mov
pop
gs
aam
add
or
dec
xchg
xor
lahf
push
outsb
mov
gs
cli
aaa
fildll
pop
push
inc
inc
pop
ja
daa
jp
hlt
int3
push
xchg
adc
das
js
fnstenv
mov
loopne
std
sahf
cmp
push
add
push
ja
inc
jb
mov
and
pop
jae
jno
in
mov
mov
push
icebp
sub
mov
in
and
mov
xor
inc
dec
mov
sbb
les
push
dec
repnz
mull
in
stos
or
lock
push
jns
sub
call
movsb
imul
and
lahf
jg
mov
add
imul
sarb
mov
lret
adc
inc
dec
mov
dec
xchg
jmp
in
push
std
push
xor
cmc
pop
pop
pop
adc
adc
inc
out
push
sti
mov
ja
or
pusha
les
out
push
divb
push
test
arpl
pop
int3
adc
adc
cltd
xchg
sub
sti
inc
sbb
inc
aas
push
fwait
icebp
sahf
sub
out
push
xchg
jl
sbb
dec
out
insb
push
push
mov
pop
add
fstpl
pop
cmovle
cmc
cltd
inc
gs
fidivrs
add
xlat
ja
outsb
jnp
jp,pn
lahf
sub
cmp
cld
push
aad
fwait
bound
stc
das
inc
lret
add
jmp
push
fs
fisubrs
jp
icebp
mov
sub
bound
and
or
testl
stos
adc
push
into
lods
xlat
xchg
into
mov
ror
sub
pop
in
mov
test
inc
xchg
xor
mov
mov
cmp
xchg
scas
mov
mov
jmp
mov
test
incb
mov
cmpsb
jle
sbb
add
jnp
jnp
xlat
mov
jge
imul
leave
jmp
imulb
mov
pop
jmp
and
push
ret
add
add
add
pop
stos
jb
shlb
nop
add
jnp
sub
xor
sbb
add
mov
add
xchg
pop
mov
xchg
gs
xor
pop
jns
mov
out
push
mov
leave
jae
lea
fcmove
fnstenv
int
xacquire
adc
repz
aas
xchg
aas
add
xchg
jmp
xor
popf
mov
lock
mov
arpl
inc
mov
mov
push
sub
pusha
stc
mov
jno
sbb
push
mov
daa
in
xor
dec
pop
lcall
hlt
aad
jg
out
fmuls
and
cmp
mov
es
cmp
std
xchg
mov
push
popf
imul
jns
inc
jb
aad
mov
push
enter
sbb
lock
xor
or
fildl
aaa
jae
push
mov
xor
or
int
idivb
out
ret
cld
bound
and
lock
mov
xor
into
mov
mov
pusha
sbb
sbb
cmpsl
scas
fiadds
sub
dec
test
negl
leave
test
jo
lret
push
jno
nop
daa
int3
or
pop
outsb
into
dec
lret
sbb
out
ljmp
int
xchg
cmp
add
xchg
mov
dec
dec
clc
xchg
jmp
push
addr16
sbb
ljmp
push
jmp
push
mov
push
inc
je
xor
pop
in
outsb
mov
sub
lcall
mov
scas
das
pushf
popa
lods
pop
cmpsl
out
ret
xchg
cmp
mov
mov
mov
adcl
lahf
ds
test
xchg
mov
jg
subl
mov
ds
imul
mov
sbb
push
clc
cld
xchg
das
icebp
mov
lret
pop
jno
aad
and
inc
cld
call
lcall
les
or
insb
cmpsl
push
pop
cmpsl
dec
xchg
mov
dec
mov
leave
pop
mov
or
jne
negb
jno
in
add
fwait
inc
xlat
std
dec
imulb
icebp
loope
push
mov
popf
popa
dec
ret
mov
in
cmp
in
stos
movsb
mov
aas
pop
daa
daa
adc
scas
shrb
mov
int
push
mov
pop
sub
scas
bound
clc
jge
jg
fsubrs
loop
inc
dec
stos
rcrb
xchg
dec
in
add
cmp
mov
cmpsb
outsl
inc
daa
jnp
loop
call
jo
add
idivl
adc
xor
xchg
das
mov
lods
shll
mov
test
int3
int
fsubl
sbb
out
dec
sub
sub
jbe
or
xchg
gs
add
lret
aaa
leave
out
mov
cmp
addr16
pop
adc
popa
imul
push
sub
or
or
fwait
pushl
aas
test
xlat
cs
shr
je
sbb
insl
aaa
xchg
push
lods
sbb
push
inc
loop
jae
cli
das
iret
push
push
pop
out
movsl
lods
loopne
push
rcl
mov
shlb
mov
mov
push
add
sbbb
add
push
or
mov
not
fwait
into
mov
cli
push
mov
arpl
filds
rcrl
jmp
mov
push
enter
xor
pushl
cmp
mov
movsb
push
or
neg
inc
mov
mov
mov
and
in
pushl
lret
rcll
mov
mov
shll
mov
test
mov
or
repnz
or
and
mov
dec
outsl
mov
mov
je
or
mov
ljmp
pop
or
mov
xchg
leave
jnp
and
add
test
enter
sti
pop
das
xchg
mov
arpl
out
insl
mov
data16
sub
mov
sti
hlt
popf
jl
incb
ljmp
loop
test
fs
jo
mov
cmp
dec
dec
and
call
repz
repnz
pop
sbb
je
add
and
and
cmp
adc
outsb
rorl
std
lret
jecxz
in
leave
mov
arpl
adc
jecxz
inc
in
xor
mov
pushf
into
push
in
popa
jae
push
cmc
mov
xor
in
and
dec
lcall
out
mov
loopne
push
inc
inc
push
sub
int3
and
cmp
lods
out
mov
hlt
js
xchg
pop
jnp
mov
test
mov
mov
insl
jmp
cmp
scas
sbb
xchg
mov
shrb
in
in
lds
jmp
jmp
xchg
jnp
push
mov
lea
push
test
sbb
adc
popl
dec
scas
js
nop
inc
loopne
and
clc
stos
sub
mov
test
pop
cmp
hlt
mov
subl
add
sbb
jle
dec
mov
xor
arpl
xchg
or
adc
jg
fmuls
in
gs
clc
es
out
sbb
mov
aad
scas
mov
sbb
inc
pop
psadbw
arpl
or
scas
push
stc
xchg
aam
lcall
loop
jp
mov
pop
add
enter
and
jbe
mov
pop
xor
xlat
popf
jno
dec
cmp
mov
ds
pop
movsl
push
popf
mov
add
xlat
pushf
dec
sbb
xlat
and
pop
inc
cli
adc
jnp
mov
test
push
jns
jbe
mov
push
push
in
aaa
jno
inc
loopne
ds
int
push
xor
or
pop
in
das
push
push
mov
jmp
aaa
jecxz
out
stos
dec
mov
aaa
pop
sbb
lods
lret
aad
push
das
mov
imul
adc
mov
sbb
dec
rorb
aam
sbb
sahf
inc
sbb
cmp
push
sbbl
sbb
adc
stos
fisubl
push
std
xchg
and
scas
push
lods
ret
jne
inc
cmp
mov
and
xor
aad
cmp
cmc
sbb
lds
stos
mov
lds
inc
cmp
cli
inc
ss
sbb
xchg
lcall
fimuls
cmp
jnp
dec
inc
loope
sbb
adc
out
xor
jmp
mov
in
sub
jno
jo
shlb
jne
imul
call
sbb
repz
or
lods
daa
jp
scas
cmpsl
sub
mov
pop
push
add
add
cld
xchg
xchg
dec
sbb
sbbb
and
es
sub
les
xchg
xchg
ja
dec
jbe
cmp
xor
lds
fwait
fwait
cs
insl
or
mov
mov
iret
jns
mov
xor
xor
pusha
out
jg
in
xor
or
mov
dec
inc
mov
popf
cs
pop
and
xchg
jb
adc
or
outsl
test
dec
adc
xchg
jmp
psrad
call
fbld
in
inc
mov
mov
fsubrs
lds
mov
cmc
push
mov
fistps
and
inc
jmp
jl
sbb
sti
mov
sbb
or
cld
mov
pop
cwtl
aas
dec
arpl
mov
mov
mov
imull
inc
lods
and
push
sbb
test
mov
jno
aas
xchg
fcmovnb
adc
inc
cmp
sub
shrb
rcll
jge
enter
daa
jecxz
mov
jge
test
stc
xchg
jmp
lock
stc
imul
into
fnsave
dec
sti
sbb
jg
xchg
repnz
add
add
xor
or
fldcw
jns
popa
push
sub
rol
mov
push
inc
and
pop
push
jmp
sbb
mov
and
xchg
add
dec
outsl
andl
cmpsb
repnz
cmc
cmc
lcall
aas
and
fidivl
in
push
xchg
cltd
jb
jmp
scas
add
subl
add
inc
mov
pop
and
jg
adc
and
mov
test
sbb
mov
push
fsubr
sub
jg
jp
ds
dec
icebp
ljmp
fisubs
mov
lret
push
cmc
div
add
push
inc
or
or
jne
je
inc
fildl
mov
jmp
and
jb
cs
pop
repnz
mov
push
xorb
call
inc
seta
popf
and
cmpsl
popf
or
adc
mov
mov
mov
and
sub
mov
das
jae
mov
stc
cmpb
dec
adc
movsl
ljmp
shll
push
mov
mov
xor
scas
mov
mov
dec
push
sub
stos
and
jmp
dec
bound
xor
mov
dec
ds
mov
test
jno
js
jmp
mov
or
fdivs
xlat
xor
jbe
xchg
or
into
repnz
bound
mov
in
bound
jge
jb
sti
aad
test
push
xchg
inc
mov
scas
pop
pop
mov
push
js
jno
icebp
add
out
and
add
out
push
pop
mov
mov
jo
push
into
pop
inc
cltd
fisubrs
xchg
add
cli
and
int3
fadd
in
aad
cmp
inc
sub
sti
jg
mov
push
xchg
dec
xor
pushf
push
sub
idiv
or
enter
leave
lods
lds
dec
stc
movsl
adc
inc
pusha
adc
jno
xchg
add
scas
jmp
mov
adc
insb
fnstsw
stos
out
mov
dec
jg
cwtl
xchg
fidivl
cli
stc
repnz
movsb
fs
dec
enter
inc
sti
xchg
mov
mov
cltd
add
pop
push
mov
cmpsb
call
jp
fst
fs
mov
push
daa
or
data16
mov
mov
push
fwait
pop
loopne
dec
hlt
sub
xchg
xor
or
aas
jp
je
stos
xchg
lods
pop
lret
addb
and
lods
movsl
test
dec
add
ror
dec
adc
repz
rcr
mov
orb
xlat
rcrl
movsl
sub
icebp
clc
test
jne
or
insb
sub
cmc
jne
cli
pop
mov
shrb
inc
fdivrs
add
jae
or
je
push
pusha
test
cli
jbe
sub
cmpsb
call
mov
xchg
je
es
push
movsb
xchg
rcr
push
orl
push
dec
xchg
js
ljmp
adc
lods
outsl
mov
adc
lcall
faddp
inc
and
imul
jecxz
popa
push
mov
add
mov
loope
xchg
push
js
pop
das
sub
and
pop
pop
sbb
push
mov
xchg
pop
sub
xchg
pop
mov
scas
xchg
mov
ss
sub
inc
sub
lods
in
sbb
fimuls
lcall
out
cmc
dec
cmp
mov
jne
mov
dec
pop
out
dec
push
mov
inc
addr16
pop
insl
pop
aam
leave
fwait
lods
xor
lds
inc
pop
mov
mov
adc
adc
stos
mov
jbe
mov
pop
pop
dec
jmp
and
xchg
mov
jp
repz
mov
jp
in
in
xchg
test
and
aad
ljmp
nop
arpl
add
lahf
mov
add
shrb
loope
jmp
pop
sbb
add
push
cltd
rcrl
adc
aaa
jbe
cwtl
cmpsb
fsts
hlt
faddl
imul
pop
inc
add
jecxz
lret
sbb
sbb
cltd
in
xlat
push
mov
ficompl
loopne
imul
aas
clc
divb
fs
xor
mov
pop
pop
add
and
push
jl
mov
jbe
out
jecxz
lea
stos
mov
lcall
or
mov
adc
adc
jno
hlt
jae
popa
xor
and
adc
and
pop
loope
mov
xor
lea
and
lret
or
mov
out
adc
mov
pop
add
pusha
ror
lret
jns
push
fmuls
push
jnp
push
xlat
out
sub
dec
sub
ffreep
add
test
xor
xor
mov
mov
sarb
push
lret
adc
sbb
inc
insb
fidivrs
mov
mov
cs
lock
leave
mov
test
loope
imul
mov
inc
jno
sub
test
orb
loop
sbb
mov
clc
cli
mov
adc
mov
mov
cmp
fs
fsubl
imul
in
cmp
sti
mov
xchg
call
aas
jl
inc
jbe
jge
add
pop
or
and
mov
shrb
jecxz
out
fs
jo
push
adc
jle
loop
jle
test
inc
cmp
nop
enter
adc
stos
adc
stos
push
mov
test
fdivrl
out
fwait
ss
aad
or
jne
or
mov
lods
jp
push
popf
jne
cmp
shlb
inc
loop
mov
add
push
mov
xor
xchg
add
cmc
and
popf
or
pop
dec
cmp
flds
sti
jns
mov
pop
cmp
adc
cmp
mov
jns
js
sbb
xchg
nop
mov
enter
push
mov
mov
dec
and
sub
addr16
mov
addr16
incl
dec
xchg
or
out
rcr
jl
pop
cs
std
add
xor
scas
sub
and
in
mov
popa
pop
dec
daa
mov
sbb
sub
jno
clc
add
mov
add
mov
aaa
pop
add
dec
shll
cmp
ja
adc
ret
adc
subb
shl
stc
inc
mov
adc
push
pushf
popa
or
xchg
loope
jae
pop
xor
aam
xor
lods
push
jo
out
movsb
jp
and
insb
call
mov
and
movsl
jae
clc
mov
mov
inc
fcoml
cmpb
pushf
daa
xchg
ficomps
dec
gs
in
lock
adc
mov
fwait
aam
pop
lock
out
dec
fcoml
ds
sbb
lods
push
mov
or
pop
sub
icebp
fcompl
mov
pop
jns
add
xor
flds
test
fistl
imul
inc
out
sub
push
cmp
push
es
jne
fists
addb
loope
pop
xor
popf
mov
jp
fcomp
mov
fdivl
popa
pop
push
lods
test
mov
pop
jns
inc
inc
pop
jg
subb
les
mov
mov
popf
std
mov
adc
adc
xchg
or
mov
popl
dec
push
and
pusha
rorb
lahf
icebp
ret
popl
cmpsl
cmpsb
adcb
xor
sbb
imul
sub
mov
cmp
sub
fs
lret
int3
jns
push
jmp
clc
enter
and
ja
lds
outsl
rol
aas
add
inc
sbb
and
icebp
and
adc
mov
sbb
movsb
arpl
fwait
push
data16
mov
jmp
in
xchg
aaa
inc
leave
jmp
xchg
addb
jb
mov
sti
leave
push
push
dec
push
inc
sub
sub
xchg
mov
dec
shrl
jae
out
shll
imul
cwtl
inc
mov
adcl
push
ja
pop
cmp
insl
pusha
rclb
push
xchg
cli
fwait
cmpsl
in
fdivrs
es
lahf
or
outsb
xchg
xlat
mov
pop
xchg
aas
add
out
adc
test
push
jbe
int
or
mov
subl
add
test
xor
js
hlt
xchg
aas
outsl
ret
dec
push
mov
jo
xchg
mov
jo
xor
je
jns
pusha
jecxz
pop
jno
jnp
add
es
pop
jl
repz
xor
std
xchg
jg
js
xor
cmc
lret
push
push
jne
cmp
pop
adc
aas
mov
outsl
adc
icebp
ja
icebp
xor
ret
sbb
imul
test
mov
mov
out
or
mov
int3
ja
lcall
dec
lea
mov
adc
loopne
sub
inc
cmp
mov
mov
adc
mov
jnp
jno
jne
inc
mov
add
pop
insb
fistpll
fidivl
fcoml
push
or
fwait
push
or
lods
push
pop
mov
js
sub
and
loop
sbb
stos
push
cmc
orl
mov
mov
cwtl
stos
lahf
and
daa
cs
rcrl
out
push
fisttps
aas
cli
in
imulb
sbb
inc
outsb
pop
adc
push
dec
mov
xor
jns
xchg
stos
lahf
imul
lods
sarl
sbb
xor
cmpsl
cli
ss
xor
xorl
out
mov
nop
aam
adc
jp
ds
repnz
rcrl
add
mov
repnz
test
dec
in
nop
mov
jp
cmpsb
dec
repz
scas
mov
cmp
push
adc
jb
clc
or
mov
jle
mov
loop
pusha
stc
pop
pop
sbb
jl
adc
cltd
int3
cli
and
pop
stc
cli
mov
aas
lcall
inc
test
out
and
dec
jecxz
adc
mov
insl
lods
scas
pushf
in
loopne
push
mov
mov
dec
lods
out
pop
pop
mov
xchg
push
sub
cs
mov
jae
mov
push
jno
push
fiaddl
pop
cli
xchg
sub
daa
add
hlt
nop
sti
popf
clc
add
pusha
mov
push
shl
repnz
xchg
dec
adcb
jne
es
out
popf
cmovns
dec
lahf
or
mov
and
shrb
arpl
jb
rcll
out
pop
pop
lahf
add
in
jo
push
and
push
pusha
pop
aam
jnp
in
jb
mov
mov
inc
and
add
jecxz
sbb
mov
lcall
jns
test
sub
jo
or
inc
negl
jo
stos
xchg
bound
xchg
xchg
push
and
stos
enter
jne
call
cmp
clc
ds
xchg
mov
mov
pushf
mov
push
cmpsb
pop
aas
xchg
sub
pop
fcmovne
les
mov
lret
or
pop
cld
iret
dec
ds
int
pop
addb
add
imul
push
fcomps
sbb
mov
lea
movsl
fidivs
inc
rcl
pop
mov
sbb
inc
mov
pop
call
scas
push
xchg
xor
inc
rorb
inc
scas
dec
push
fst
sahf
pop
call
js
repnz
je
cmpsb
jnp
mov
mov
arpl
push
call
xchg
mov
cmp
loope
out
dec
mov
jmp
fisubl
inc
xchg
js
inc
inc
xchg
stc
jge
mul
gs
mov
cmpsb
ds
push
sbb
test
mov
sahf
incb
nop
fs
push
sarb
jp
lahf
imul
adc
repnz
cmp
jg
xchg
push
jp
mov
mov
cmp
add
xchg
sub
or
xor
mov
ds
fsts
scas
fsubr
cmp
daa
xor
or
jg
or
stc
ret
inc
sahf
cmp
xchg
mov
fsubrl
insb
mov
in
shrl
nop
out
sarb
pushf
test
lret
dec
add
xorb
cmc
inc
aam
dec
stc
xchg
push
mov
push
pop
jecxz
les
pop
sub
js
lret
lea
xor
sbb
adc
pop
inc
rclb
cwtl
incl
out
jbe
mov
inc
inc
pop
add
adc
cmpsb
je
add
cmp
add
ja
pop
pop
push
out
loope
adc
and
pop
test
inc
lret
mov
add
imull
sbb
divl
cld
enter
or
mov
out
xchg
fwait
pop
loope
cwtl
lret
pop
xlat
xchg
pop
dec
daa
mov
nop
mulb
movsl
aam
add
pop
mov
ret
sti
jmp
fnstsw
shlb
cmp
cmpl
pop
and
insb
adc
and
pop
sub
std
fwait
outsb
fs
rcl
outsb
mov
xchg
shrl
mov
mov
ljmp
cmp
sub
jae
cmp
adc
clc
xchg
pusha
pushf
insl
sub
insb
cmpsb
sti
imul
jg
cmc
mov
push
jmp
test
and
adc
pushf
leave
subb
and
outsb
xor
push
cli
and
arpl
nop
xor
je
inc
cwtl
shll
jnp
cwtl
cmpsb
in
xor
sub
shrl
push
jne
mov
and
movsb
ljmp
xchg
setae
scas
test
in
dec
jge
ds
cld
cmp
loop
pop
movsb
in
shlb
inc
ljmp
or
popa
lahf
xlat
sbb
or
mov
mov
mov
outsb
dec
popa
pop
jg
jno
push
or
jo
jge
mov
push
shl
ret
pop
sub
and
frstor
adc
or
adc
neg
and
daa
mov
mov
xlat
push
pop
push
inc
scas
inc
xchg
sbb
xchg
testb
mov
stos
std
imul
test
dec
aaa
leave
ljmp
adc
shrb
loopne
mov
dec
jge
sbb
mov
imul
inc
xor
dec
sbbb
insl
lahf
fisttps
cmp
adc
push
sahf
aas
mov
or
xlat
cld
jmp
shrl
sbb
imull
push
push
lds
sbbb
inc
ss
jne
inc
rorl
sahf
insl
fs
xor
and
jecxz
xchg
in
inc
shrl
popw
test
dec
xor
mov
mov
nop
loope
and
loope
adc
adc
bound
leave
xor
push
imul
dec
jnp
jnp
pop
scas
add
movl
test
jae
aad
add
cmpsl
push
repnz
andb
pop
add
mov
lock
or
popa
aad
jb
daa
inc
and
xor
xchg
adc
fucompp
icebp
outsb
dec
ficomps
loope
ficompl
xlat
mov
das
lds
adc
stos
test
outsl
sub
aad
mov
inc
inc
das
fisttpl
cwtl
ret
xchg
dec
scas
sub
fnsave
je
es
in
sahf
gs
fucomi
hlt
pushf
es
idiv
push
adc
adc
cmc
test
movsl
and
imul
xor
lret
add
clc
and
mov
lahf
ret
addl
cltd
and
mov
lods
mov
je
imull
pop
das
scas
fwait
and
pop
cld
aas
add
push
add
iretw
addr16
add
cs
push
popf
aam
notl
ret
aas
add
xchg
mov
mov
push
jge
xor
in
out
aaa
movsl
test
xor
jl
gs
bound
outsb
fistl
nop
je
scas
les
or
adc
add
xor
add
ja
mov
and
lock
paddusb
mov
pop
fsubrl
inc
sub
mov
outsb
cmp
pop
daa
xchg
and
sbb
push
inc
and
popa
mov
jb
mov
jle
repz
pop
dec
mov
add
jecxz
inc
xor
out
pop
pop
push
fimull
in
or
xchg
cmp
sub
lret
icebp
xchg
and
popf
sbb
sti
test
movl
jg
sbb
or
jne
jns
outsb
and
xor
jnp
lods
push
clc
scas
flds
jmp
sbb
loop
js
sti
jo
loopne
jl
dec
bound
sarb
pop
rolb
inc
dec
cmpsb
adc
mov
imul
cmpsb
inc
xchg
xchg
mov
push
push
fistps
in
xor
stos
test
jns
and
mov
ret
lods
dec
fs
mov
jl
cmpsb
insl
fldenv
pushf
and
or
jo
sub
jns
sub
leave
dec
jmp
and
push
jecxz
push
cmp
fsubr
outsl
push
enter
outsb
aam
jmp
loope
lea
scas
or
add
jne
cmp
es
rolb
xchg
xchg
mov
and
arpl
dec
mov
or
mov
cmpsb
ljmp
test
mov
das
dec
jb
fs
sbb
divb
sbb
dec
aas
xlat
inc
jbe
dec
ret
dec
dec
sbb
sbb
mov
in
or
rorl
adcw
jbe
xchg
mov
mov
scas
jo
sahf
stos
mov
in
xor
xchg
test
add
cli
data16
or
push
adc
iret
jg
push
jb
fistps
xchg
fwait
pop
pop
stc
dec
test
imul
dec
cwtl
jmp
popa
mov
aaa
jg
mov
cmc
cmc
xabort
or
ret
adc
push
mov
fdivrl
pop
xchg
pop
mov
inc
mov
inc
popf
mov
inc
jge
xchg
pop
push
aas
cmp
pop
lods
es
jnp
test
stc
xlat
inc
sub
fisubs
cmp
lret
or
ret
mov
outsb
inc
movsl
pop
sbb
ss
icebp
divb
inc
outsb
pushf
popa
mov
aad
popf
mov
cmp
xchg
or
imul
ss
xor
sub
xchg
pop
pop
loopne
cld
pop
nop
loopne
push
xchg
push
pop
jecxz
aaa
sbbl
push
pop
add
fnsave
xchg
mov
cltd
call
mov
adc
lahf
jo
mov
in
mov
add
mov
ror
jno
or
adc
idivl
aas
push
outsl
stos
dec
jns
mov
es
xor
daa
pop
aad
roll
test
mov
mov
loopne
gs
scas
mov
cmpsl
mov
xchg
sahf
arpl
pop
dec
cltd
pop
lret
xchg
mov
pop
push
nop
sbb
and
imul
fs
popf
mov
jp
inc
push
and
addl
mov
cmp
push
sbb
fisubrs
aam
movsl
das
fcoml
in
jmp
outsl
sub
jmp
pop
loop
dec
jmp
sbbl
es
jl
push
lret
fmuls
xchg
mov
dec
cmpsb
je
stos
xchg
pop
jbe
es
xchg
je
xchg
dec
inc
or
fcoms
loopne
icebp
pop
cwtl
jbe
push
scas
cwtl
sub
jp
fdivrl
mov
sbb
out
dec
xchg
push
rol
xor
sarb
xor
mov
or
and
push
pop
mov
sbb
lcall
sarl
shlb
lock
outsb
mov
insb
sbb
push
xor
push
mov
dec
stc
dec
xor
pushf
mov
test
cmpsl
movsb
aaa
test
je
bound
dec
cwtl
enter
test
or
leave
ret
mov
jecxz
add
cltd
jg
fistpll
pop
push
and
fimull
dec
stc
and
jg
jmp
js
sub
data16
fs
insb
mov
icebp
subb
mov
stc
dec
stc
insb
stc
mov
adc
or
fucomp
push
fs
ja
arpl
or
int
sbb
jno
mov
movsb
or
ja
jno
mov
out
sbb
cmp
outsl
aad
mov
and
cmc
and
pop
mov
mov
and
mov
xlat
or
mov
loope
mov
lock
xlat
arpl
push
inc
daa
and
stos
and
lods
fxch
push
orb
bound
lods
fwait
mov
pop
xchg
pusha
sub
into
inc
mov
dec
or
cmp
loopne
and
inc
inc
das
in
stos
dec
inc
add
cmp
push
jnp
daa
pop
nop
das
xor
inc
xchg
jge
jmp
mov
add
adcl
inc
and
sbb
arpl
and
fimull
fisubrl
lcall
or
xor
xor
push
jo
pop
cmc
xchg
xchg
fnstcw
mov
lea
xor
sahf
adc
adc
lret
mov
add
movsb
pop
push
cmpsb
in
pop
adc
ljmp
out
inc
mov
xchg
push
jne
cmc
outsl
or
xor
push
fsubrs
lods
jno
test
nop
sub
cld
test
rcrb
inc
lret
add
inc
xlat
mov
aad
xchg
mov
scas
dec
mov
call
sbb
or
in
mov
fsubrl
cmp
pop
or
sub
test
pop
xor
pop
sbbb
sub
loopne
pop
fldcw
cmp
repnz
jnp
inc
sbb
adc
testl
das
imul
loop
dec
jmp
lods
out
cmp
psrad
out
jnp
dec
xlat
test
outsb
mov
repz
mov
pop
shr
jge
lea
aad
xor
enter
fstpt
push
or
in
mov
mov
int3
cld
pushf
hlt
in
mov
je
sub
dec
inc
js
sbb
cmpsl
cmp
and
loopne
sub
adc
sub
pop
movsl
dec
push
repz
movsl
jle
jge
addl
arpl
shll
xchg
fimuls
or
sub
rcrb
cmpsb
test
dec
dec
rorl
push
arpl
and
sub
inc
mov
fcomps
pop
sub
aam
adc
inc
add
pop
xlat
xorl
lock
lahf
jo
sub
andl
es
xchg
inc
pop
add
ss
pusha
xorb
push
jnp
mov
rcrl
mov
push
xchg
pop
fadds
sub
js
lahf
inc
xor
inc
jb
and
push
ffreep
push
add
cld
stos
mov
cltd
repnz
pop
or
dec
jbe
rorl
mov
xchg
ficoml
mov
adc
add
repnz
xchg
xor
stos
int
xchg
jl
jle
or
jo
ja
sti
lahf
rclb
xorl
lret
enter
pop
imul
insl
lret
roll
addr16
aad
subb
and
inc
pop
jne
add
into
js
setne
mov
dec
jmp
arpl
icebp
lds
adc
int3
xor
insl
imulb
jae
fwait
lds
sbb
jo
imul
lds
loopne
aas
iret
ljmp
jge
lock
pushf
subb
jns
jns
inc
inc
jle
mov
je
xor
xor
xchg
lahf
push
pop
pop
jbe
cmp
loopne
imul
insb
and
cmc
rorl
adc
cmp
scas
sub
mov
xor
xchg
sub
lods
loope
mov
repz
sub
popf
in
sbbl
jl
mov
push
or
pusha
outsl
aas
xor
les
xor
out
push
repz
popa
cmpsb
push
and
adc
sbb
insb
mov
and
adc
test
mov
push
sub
jmp
mov
cwtl
adc
xchg
and
fbld
les
adc
sbb
mov
sbb
add
cwtl
les
mov
fistps
add
xchg
jmp
or
push
dec
popa
iret
das
in
imul
and
fwait
mov
outsb
xchg
clc
push
fwait
int
add
cld
inc
xor
sub
jno
inc
pop
pop
mov
and
dec
mov
fldenv
nop
sbbb
mov
insb
fsubs
pop
fldenv
dec
mov
mov
cmp
out
mov
push
xor
xor
into
push
int3
inc
mov
jb
push
mov
xor
into
rolb
jmp
and
lahf
jmp
xor
in
push
add
jmp
sarb
inc
mulb
das
mov
mov
sub
mov
and
cli
mov
xchg
in
addb
in
in
dec
orl
in
jne
mov
push
repnz
out
adc
sub
cld
push
movsb
int
sti
sub
lock
lods
mov
int
test
mov
sub
xlat
test
fucomi
jbe
inc
dec
inc
push
push
jnp
sbb
mov
xlat
mov
or
push
cmc
lods
lock
cmp
jns
sub
imul
lods
mov
mov
push
fwait
lret
push
push
fwait
insb
jle
xor
xchg
addr16
adc
mov
aaa
ficomps
xor
out
pop
adc
movsl
jno
mov
pop
sbb
mov
outsb
or
pop
xchg
das
push
addr16
pop
or
cwtl
push
shll
mov
std
hlt
fstps
inc
jne
lcall
jno
inc
mov
push
shll
imul
push
pop
pop
mov
js
sbb
inc
in
inc
pop
adc
out
adc
shlb
cmpsb
mov
gs
fistps
mov
test
out
mov
dec
lcall
pop
hlt
fbstp
lret
cmpsl
inc
hlt
nop
or
cmpsl
sbb
ljmp
mov
fs
movzbl
rcll
loope
fcoml
js
mov
pop
testb
mov
stc
lods
adc
adc
jecxz
xor
jns
mov
lea
daa
into
push
dec
cli
aam
fisttpl
xchg
into
push
lcall
std
fs
and
dec
push
sub
dec
sub
push
testl
test
push
jnp
movsl
movl
push
popa
insl
mov
das
outsb
dec
sub
nop
hlt
lahf
adc
fdivrl
fistpll
mov
loope
adc
mov
push
or
test
push
ljmp
xchg
mov
mov
enter
xor
cli
loop
fs
fisttpll
push
lods
and
xchg
stc
jno
mov
dec
xchg
mov
popf
pusha
not
mov
addb
in
shrl
jg
inc
loop
int3
push
pop
popf
mov
sub
movb
xor
sbb
dec
test
mov
es
inc
pop
ficoms
pop
enter
mov
cld
pop
fdivrp
iret
orl
and
or
sub
pop
insb
call
add
sub
imul
in
lock
fcmovbe
out
push
iret
push
cli
ljmp
push
inc
add
hlt
push
lahf
mov
mov
out
push
ficoml
xchg
sub
clc
lahf
jecxz
dec
adcl
movsl
lods
jb
out
cmp
mov
ljmp
hlt
pop
mov
push
andb
pop
clc
je
push
or
sub
cmp
inc
in
movsl
pop
lods
sbb
xchg
nop
xlat
xchg
shlb
xor
xchg
push
clc
or
in
cwtl
lahf
sarl
loop
jmp
mov
jno
fs
jne
fs
bound
mov
fildl
xor
cmp
pop
les
jp
add
mov
pop
dec
lahf
invd
and
push
pushf
pop
mov
lcall
cmpb
lret
xchg
loopne
mov
ud0
mov
loopne
add
mov
cmpsb
sub
sub
adc
std
movsl
dec
xor
mov
or
test
add
lea
dec
cmp
sbb
cmp
data16
and
imul
mov
js
decl
scas
sbb
iret
pusha
add
mov
scas
les
push
fisttpl
cmp
je
stos
fdivl
jns
xrelease
mov
aam
jns
sbbb
xchg
adc
mov
push
adc
loop
inc
icebp
mov
cmpsl
popf
push
fcoml
das
pop
sub
mov
add
jnp
movsl
sub
push
jns
jns
inc
xor
sbbb
imul
mov
push
inc
or
aam
inc
pop
sti
xor
or
push
sti
jmp
xchg
cmp
fwait
xor
adc
push
ljmp
push
std
jmp
push
loopne
add
pop
pop
inc
std
popa
mov
jns
sbb
insl
mov
inc
rcrb
cmpsl
mov
mov
add
cltd
jmp
test
icebp
in
pop
push
adc
sahf
lahf
pushf
jl
mov
dec
mov
decl
adc
jmp
xor
adc
je
sub
arpl
mov
xor
mov
adc
or
cmp
jle
mov
cwtl
adc
je
add
sti
cmc
pop
jle
add
lret
test
test
fwait
mov
sub
sbb
es
stc
repnz
loop
popa
lds
roll
or
or
lock
inc
clc
pop
subb
mov
aam
mov
push
inc
sahf
out
fiaddl
fisubl
daa
into
hlt
out
es
outsb
and
in
out
vrsqrtss
pusha
cld
fst
int
inc
roll
neg
xchg
inc
test
je
ljmp
jb
fnstcw
cmp
lahf
push
cmp
inc
lret
inc
fs
pop
inc
cmp
xor
push
dec
sbb
or
lock
mov
jge
stc
addl
ljmpw
lds
xor
dec
jb
sbb
gs
dec
cmpb
test
shll
adc
jo
int
sti
sti
adc
test
push
sub
cli
mov
leave
lcall
mov
jecxz
cltd
jae
or
mov
stc
mov
lret
sub
dec
cmpsl
fdivrl
mov
dec
sti
add
mov
mov
ror
cmpsb
sti
or
jae
xchg
leave
popa
mov
mov
jne
stos
or
pop
xor
mov
loopne
push
cli
mov
jecxz
mov
and
cmp
mov
testb
pop
pusha
outsb
or
fistps
push
gs
in
adc
imul
outsb
arpl
mov
sub
lret
push
loopne
aas
scas
mov
jmp
and
sbb
cltd
call
lods
push
out
pop
xchg
test
pop
mov
lock
or
cs
or
push
sub
test
in
sbb
xchg
loopne
cli
push
sbb
cmpsl
sbb
in
push
imul
jmp
xor
idivl
lods
sbb
jmp
adc
xlat
rorl
pusha
pop
in
mov
xor
mov
adc
push
dec
bound
es
fsub
mov
mov
sbb
mov
cltd
mov
cmpsl
imul
jp
insb
or
pop
add
testl
mov
dec
add
popa
sti
gs
dec
out
push
ss
or
subl
jecxz
lods
ffreep
sbb
pop
pop
sbb
or
jb
push
lods
inc
and
push
out
fidivrs
popa
lea
and
aaa
imul
mov
in
xchg
scas
out
les
push
cmp
jne
push
dec
xchg
mov
add
enter
mov
jo
xchg
rorl
pop
stos
loope
ds
fldenv
add
loopne
pop
cmc
loope
sbb
lret
adc
js
mov
pop
adc
mov
js
pop
add
mov
and
push
jae
dec
cltd
jno
rorl
push
fdivrs
lahf
mov
mov
jno
push
mov
mov
mov
mov
in
jo
cmp
add
cmp
movsl
int3
add
scas
insl
pop
inc
dec
mov
fldl
lret
pop
pop
push
and
fdivr
arpl
xor
sahf
pop
fldenv
loop
out
inc
jnp
adc
sub
icebp
mov
out
xchg
int
pop
mov
dec
cmp
cli
loopne
dec
dec
inc
jo
xor
ficoms
leave
in
add
mov
dec
lret
or
adcb
fwait
jno
ds
adc
clc
add
dec
or
rol
arpl
push
rcrb
in
int3
and
rolb
push
fisubrl
sbb
ljmp
xchg
mov
xor
inc
cmp
inc
lret
or
shlb
dec
int3
mov
dec
popa
xor
mov
sub
pop
popf
push
scas
rcrb
sbb
mov
cmp
jge
mov
xchg
nop
fisttpl
call
shr
dec
lret
dec
mov
iret
mov
push
mov
aas
mov
hlt
and
std
bswap
dec
stc
shl
xchg
pop
xor
pop
and
jo
jle
in
fdivrs
dec
push
dec
sub
clc
hlt
mov
pop
movsb
imul
int3
sub
bound
mov
xor
cmp
es
jno
mov
push
jo
clc
decb
pop
ss
sti
mov
xchg
out
sub
mov
pop
insb
mov
xchg
or
inc
fsubl
loope
lret
in
fsubl
jbe
pop
xor
xlat
aad
push
cmpl
xor
inc
push
sub
enter
call
xor
shrl
push
xor
mov
sub
enter
mov
loopne
and
inc
push
fisubl
add
in
enter
cmp
cmp
xor
test
pop
insb
in
popf
pop
push
sub
sti
lret
inc
das
sbb
pop
das
out
inc
out
mov
mov
pushw
js
rol
dec
pop
stos
iret
mov
mov
mov
rclb
outsl
push
sbb
pop
stos
jl
out
sbb
movsb
pop
adc
nop
cltd
aam
out
jge
test
shll
mov
and
cmp
jb
ret
pop
mov
int3
jmp
pop
mov
mov
jnp
imul
and
fsubrl
pop
lahf
xorb
and
ja
shll
popf
pop
lds
adc
sbbl
mov
cmp
jns
cmpsl
xor
aaa
mov
cld
mov
adc
push
mov
enter
fldl
dec
ret
test
mov
pop
xchg
xorl
data16
push
push
dec
enter
stos
sub
cmpl
dec
ss
mov
in
mov
add
out
shlb
std
sub
mov
mov
es
fidivrs
xchg
repnz
xchg
fbld
mov
rcrl
push
inc
mov
incl
xchg
pop
jnp
add
loope
aaa
pop
inc
push
sbbb
jmp
push
push
sub
pusha
stos
clc
sbb
add
xchg
sbb
and
jg
cmp
mov
sbb
aaa
movsb
scas
in
xor
scas
test
pushf
in
mov
or
shrl
jge
decb
aaa
scas
adc
pop
dec
aam
lahf
lahf
aas
mov
fldenv
out
mov
jge
add
jp
jnp
pop
sbb
jne
fwait
cmp
or
call
push
sbb
lods
dec
jbe
cmp
test
push
xchg
sub
int3
mov
lods
mov
enter
xchg
cmc
add
sbb
or
shrb
mov
insl
into
inc
mov
stos
pop
hlt
pusha
sub
xchg
sbb
sub
sbb
jecxz
push
pop
fdivrs
inc
addr16
sub
xor
lock
out
ret
pop
insb
push
jo
mov
mov
adc
fbld
mov
cmp
pop
ss
lret
sahf
pushf
sub
jbe
xchg
jno
push
add
sbb
ljmp
cwtl
lock
dec
test
push
jmp
enter
divl
mov
mov
dec
jg
movsb
jl
xor
popf
lods
push
mov
mov
imul
mov
hlt
xor
sbb
ret
addr16
push
push
push
jle
xchg
cwtl
repz
loopne
notl
cmc
jo
cltd
xchg
call
int
adc
jno
rolb
mov
call
xchg
cmp
lds
leave
sbbb
push
mov
iret
stos
mov
pop
sarb
std
push
das
xor
ficomps
sub
call
icebp
dec
cwtl
inc
mov
fsubrl
test
lods
cmp
and
test
out
or
and
dec
inc
std
orb
jb
sub
mov
push
addb
pop
push
sbb
daa
xchg
pop
ret
mov
mov
jmp
jns
jo
xchg
dec
inc
cmp
mov
jno
xor
xchg
cmp
xchg
push
xchg
inc
dec
aaa
adcl
and
inc
scas
insl
push
inc
aad
cmc
push
push
mov
sbb
cltd
cmp
movsl
dec
add
je
jmp
imul
push
jno
pusha
cmp
movb
adc
ss
xor
out
lock
pop
out
outsb
sbbb
and
push
cmp
inc
sub
sbb
push
cmc
test
sub
rcrb
jo
in
cs
int3
ljmp
cmp
mov
or
push
push
sub
fmull
mov
xchg
and
xlat
jp
fiaddl
mov
jo
dec
pusha
cmp
inc
std
out
aad
pop
es
cwtl
bound
test
sahf
cmc
mov
movsb
insb
cmpsl
push
lods
pusha
sub
sbb
cmpsl
mov
lds
fstpl
and
add
mov
lods
inc
fwait
sahf
inc
fwait
add
inc
jl
sti
pop
inc
dec
pop
stos
jecxz
mov
mov
pusha
ret
add
inc
mov
mov
insl
imul
sbb
jo
push
mov
mov
add
xchg
idiv
lods
addb
xor
fwait
mov
jmp
scas
and
sbb
pop
lods
in
sub
push
adc
add
adc
inc
pop
sbb
xchg
jbe
mov
sub
popa
mov
adc
pmaxsw
insb
pop
gs
xchg
sbb
lret
xor
mov
lods
std
roll
fstpl
cmpb
loope
repnz
ss
fdivrl
test
push
iret
movsl
jne
icebp
jecxz
test
rcr
leave
hlt
xchg
cs
movsl
xor
cmp
loopne
inc
or
in
in
and
inc
stos
das
icebp
or
cltd
fistpl
jmp
clc
std
mov
fsubrp
mov
cmp
add
adc
add
jg
ror
scas
jbe
add
es
adc
daa
movsb
in
adc
nop
pop
xchg
ja
xchg
into
sbb
out
lahf
clc
ljmp
xor
xchg
sti
add
push
shr
outsl
cwtl
add
mov
arpl
orl
gs
adc
add
out
sbb
fsub
dec
push
out
sbb
movsb
pop
cmpsl
sub
lahf
and
inc
mov
mov
icebp
gs
mov
jo
pop
cmp
and
mov
loope
rorl
add
stos
xchg
imul
clc
adc
sub
lahf
mov
sarl
insl
cltd
out
call
jnp
sbbb
sbb
lret
repnz
jl
cmp
push
pop
jecxz
mov
xchg
imul
daa
xchg
in
and
pop
cmc
sbb
loope
lret
mov
les
mov
mov
lds
shld
cmp
jecxz
jg
popa
mov
and
in
cli
in
mov
jo
ja
and
jns
mov
dec
jg
add
mov
cmp
inc
mov
iret
rorb
mov
into
cmpsl
nop
sub
test
sbb
pop
xchg
lods
pop
xchg
rolb
aaa
dec
and
or
dec
xchg
cmp
sub
fwait
shrb
cmp
fs
sbb
not
add
pusha
xor
lret
mov
cld
fwait
jmp
rolb
push
aam
xchg
pop
cmp
pop
test
lods
subb
push
ss
and
fneni(8087
adc
and
inc
sbb
es
scas
fwait
or
cwtl
inc
jp
and
adc
addr16
jl
mov
outsb
xlat
ficoms
faddp
cmp
sbb
fstpt
addr16
dec
pop
push
aas
push
jne
andl
jl
not
jo
leave
cld
cltd
ljmp
test
or
xchg
cmp
aam
orl
pop
xchg
arpl
pop
push
inc
stos
test
pop
dec
hlt
sahf
notb
or
xchg
scas
inc
dec
sub
in
shll
addr16
shlb
push
dec
nop
jp
je
push
xchg
scas
rorl
cmpsl
clc
mov
mov
fwait
mov
mov
jl
dec
test
cmpb
inc
sbb
lret
inc
pop
xor
imull
rorb
imul
jle
leave
sbb
nop
push
xlat
jns
and
jbe
fsubl
imul
outsl
add
sarb
cmpsb
push
jnp
into
xchg
sbbb
pop
lcall
hlt
fstpl
cmp
jge
xor
test
add
mov
cmp
es
mov
clc
mov
mov
push
jae
xor
test
outsl
fs
jne
mov
cltd
jle
shlb
push
aam
pop
inc
mov
les
lret
aas
jns
jecxz
mov
and
xchg
push
mov
insl
and
mov
lods
mov
aam
mov
repnz
xor
and
imulb
dec
pushf
mov
lret
shr
jg
cwtl
mov
add
cmpsl
xchg
imul
mov
or
mov
movsl
add
pop
ffreep
std
loopne
mov
add
and
lret
test
ja
scas
sub
dec
or
xchg
push
pop
mov
jnp
xchg
aam
call
adc
sub
mov
test
sub
mov
adc
stc
mov
mov
pop
xchg
mov
jge
pop
pushf
data16
out
xchg
mov
imul
leave
nop
es
stos
jo
test
shlb
or
xchg
stos
test
or
jmp
cmpsb
push
vaddps
mov
je
pop
add
jne
mov
xchg
mov
push
xor
lret
dec
popf
hlt
icebp
xor
in
pop
mov
mov
adcb
cmpsb
int3
inc
or
pop
jmp
lahf
lret
mov
and
push
push
cmpsl
nop
ss
and
fs
sub
pop
dec
mov
std
push
mov
lcall
mov
out
outsb
mov
test
cmp
mov
shrl
aaa
push
sbb
pop
add
jecxz
fdivr
test
stc
daa
clc
and
jns
push
jbe
push
icebp
xchg
bsf
imul
lret
aas
dec
aas
lock
call
leave
pop
aas
and
and
adc
jnp
testb
inc
jmp
sbb
add
push
xor
xchg
sub
add
add
dec
sarl
lahf
mov
mov
test
sbb
xchg
icebp
sarl
ds
xor
add
mov
adc
and
jnp
retw
push
mov
daa
stos
mov
add
pop
subb
and
jae
stc
fidivs
mov
fcomip
inc
pop
loope
icebp
xchg
inc
imul
cltd
adc
xchg
jp
pop
jmp
adc
test
scas
testl
les
das
add
das
xlat
or
sub
loop
rclb
mov
out
push
movsb
lods
gs
cmp
sub
jle
jo
add
pop
pushf
adc
inc
in
adc
lods
rcr
sub
test
lods
insl
out
push
fsub
divb
int3
fwait
test
mov
lods
add
mov
lcall
aad
hlt
cmpsl
out
adc
add
add
out
icebp
out
cmc
cmp
push
push
in
or
sub
imul
pop
aad
pop
sbb
in
popf
jp
mov
jp
div
or
jo
sub
fdivl
xchg
jg
pop
push
das
dec
daa
outsl
iret
addr16
and
jb
mov
fcmovu
leave
push
out
dec
and
popf
and
hlt
movsl
aaa
addl
mov
push
push
jg
jo
push
aas
and
jne
add
xlat
lea
not
inc
fwait
sbb
mov
inc
inc
xchg
int3
mull
testb
shll
mov
pop
or
cmp
xchg
cwtl
add
add
xchg
mov
cli
dec
je
jno
out
test
mov
push
sub
test
fnstcw
fistps
cmp
ja
out
hlt
pop
and
mov
push
stos
dec
sub
fs
cmp
cmp
xchg
mov
mov
push
jne
sarb
cmc
inc
mov
jg
jo
les
sahf
std
adc
and
mov
in
in
pop
pop
pop
jl
lock
pop
aad
sbb
adc
in
and
sbb
test
mov
ret
sbb
lods
jb
pop
jge
aad
pminub
jno
mov
push
fistpl
imul
pop
gs
adc
adc
fldenv
add
inc
xlat
pop
add
push
cmp
jg
jns
sbb
rorl
dec
fdiv
insl
dec
fmull
aaa
pusha
inc
cmp
or
fsubl
sbb
outsl
push
push
mov
movsb
inc
in
push
aad
add
dec
sbb
iret
add
dec
push
movsl
jle
inc
xorl
pop
jb
dec
and
inc
ret
push
pop
outsl
xlat
mov
xchg
xor
sbb
dec
es
and
aas
pop
ficoml
xor
jne
pop
aam
mov
pmaxub
sbb
pop
push
ret
out
dec
invd
push
cmp
mov
sub
add
repz
pop
sbb
mov
pop
pop
xchg
mov
out
pop
sub
loopne
or
push
jge
bound
mov
test
ret
xchg
ret
xchg
sub
push
pop
sub
adc
push
out
add
addl
mov
or
lcall
addr16
and
cs
jo
and
loope
pushf
aas
mov
xchg
mov
push
mov
push
mov
outsl
xor
xchg
cld
xchg
test
call
mov
mov
cld
xchg
loop
add
jbe
xor
sub
negl
test
xor
sub
inc
sarb
lock
mov
test
je
outsb
pop
xchg
pusha
hlt
cmp
pop
outsb
insb
cmpsb
pop
mov
addb
lods
cld
jecxz
sbb
mov
xchg
repz
push
into
lods
xchg
mov
mov
shlb
or
mov
mov
cmc
sbb
mov
call
mov
mov
lea
add
xor
pusha
jns
fsubl
mov
dec
xor
stos
lea
push
xor
mov
sbb
dec
mov
and
sub
lahf
shlb
sarl
push
mov
lcall
es
mull
cmp
movsb
mov
imul
inc
add
xchg
mov
jle
hlt
adc
jb
add
aaa
repnz
jmp
icebp
sahf
push
subb
in
adc
lea
lods
or
das
std
mov
je
imul
sbb
nop
and
jno
adc
outsb
stos
inc
pop
xchg
adc
push
movsb
inc
lcall
jl
rcrb
pushf
sub
add
cmp
popf
movl
dec
mov
adc
mov
pushf
or
sarl
loopne
dec
cli
push
sarb
xor
or
xchg
hlt
bound
fnsave
mov
or
pushf
cmp
notb
dec
mov
mov
aas
add
mov
movsb
cmp
loop
fsubrs
int3
mov
mov
mov
es
pop
jnp
lods
jle
jp
std
loope
aad
xchg
je
sti
jmp
jne
inc
pop
add
pop
sub
dec
pop
pop
fsubs
cltd
ficomps
jge
sub
jns
mov
push
lods
dec
xor
push
jmp
xchg
test
xor
jl
negb
mov
add
dec
iret
xchg
mov
std
nop
sub
test
out
fmuls
cmp
dec
hlt
adc
push
sub
mov
into
mov
aam
cmp
scas
scas
add
rorl
cmp
jae
mov
outsl
addl
add
lds
pusha
pop
xchg
data16
xor
xchg
xchg
lods
lods
xor
adc
in
insb
das
fisubrl
cmp
and
outsl
and
out
adc
xor
xor
cli
lret
imul
ljmp
mov
push
cld
test
push
shlb
cmp
aas
rorl
pop
jge
xchg
add
es
or
xchg
lret
das
loop
cmpsb
adc
adc
data16
fcom
mov
sarl
add
and
loope
sbb
cltd
cmp
addb
cmp
pop
test
mov
movsb
xor
adc
iret
add
dec
es
pop
insb
enter
inc
jbe
push
sbb
adc
xchg
loope
shlb
and
dec
mov
add
jno
mov
popf
lds
push
and
pop
nop
sahf
add
lret
negl
inc
clc
xor
leave
jg
es
or
push
mov
and
pop
mov
mov
cmp
xchg
lods
mov
sbb
stos
int3
mov
mov
jmp
mov
aam
xor
dec
roll
mov
ret
fs
pop
push
popa
adc
add
add
out
bound
sahf
sbb
outsb
clc
and
addr16
inc
outsb
shrl
popf
inc
jo
inc
ret
sbb
call
cli
cmpsb
add
inc
inc
or
lds
lea
mov
pop
sub
dec
jbe
lock
into
jge
jnp
movsb
sbb
mov
dec
sbb
shlb
pop
aaa
pop
outsl
stos
and
xchg
jg
enter
enter
out
or
faddl
mov
repnz
add
test
cmp
jns
dec
mov
xchg
cltd
sbb
jmp
xchg
or
and
mov
pop
xchg
mov
test
repz
xchg
and
mov
pop
push
jne
mov
test
repz
popf
and
arpl
fwait
pop
fisubl
pop
dec
jecxz
fidivl
clc
test
sbb
out
scas
sbb
loop
pop
mov
and
dec
out
shl
jmp
mov
in
add
lds
sub
xchg
adc
cmp
rcr
pusha
nop
push
lea
jge
insl
sub
lahf
xchg
mov
mov
dec
test
pop
fiadds
test
das
pop
gs
cmp
and
xor
jl
push
push
inc
cmpsb
pop
mov
setno
insl
loop
inc
xchg
xchg
xor
pusha
and
lret
add
mov
dec
mov
movsl
mov
mov
cld
sti
loopne
push
lea
ja
in
inc
xor
jle
ljmp
neg
negl
hlt
in
push
cmp
rclb
pop
mov
mov
mov
adc
lods
mov
ret
test
bound
shld
es
repnz
xor
stc
data16
xlat
data16
call
popf
xchg
fwait
ss
stc
lea
insl
sbb
lcall
loop
js
and
cmp
pop
cmpsl
cs
in
xchg
and
pop
pop
rclb
int
scas
es
outsb
sarl
push
divb
lds
push
inc
daa
pop
test
or
dec
xor
pop
push
pop
xor
pop
jae
push
pop
sub
daa
shrl
sti
xchg
mov
ret
lret
cwtl
stos
sbb
enter
lock
mov
xor
add
jge
push
icebp
rep
mov
in
test
shrb
in
inc
add
clc
and
lock
or
jmp
in
dec
ljmp
js
fcmovnbe
push
and
mov
int
adc
mov
add
mov
pop
or
movups
add
outsl
rclb
aad
push
loop
stos
nop
push
popf
lcall
add
inc
mov
mov
xor
jle
gs
sti
jg
lds
std
test
out
pop
out
call
mov
mov
sbb
mov
cmpsb
sub
into
dec
sub
xchg
sub
jp
aam
xor
xchg
mov
mul
lock
mov
or
jo
dec
push
shlb
cmp
shlb
rcll
in
leave
mov
sbb
mov
pop
insb
jnp
lret
sbb
test
insl
dec
sbbl
movsl
sub
fdivrs
xchg
or
popa
cmc
pop
faddl
sarl
adc
repnz
or
mov
push
je
push
add
outsb
sub
jle
addb
sbb
push
xchg
lret
pop
ja
xor
xchg
out
adc
inc
decb
adc
fisttpll
das
icebp
jl
mov
call
in
scas
stc
into
clc
cld
dec
lds
sub
add
roll
xchg
adc
inc
out
icebp
cmpsl
or
aas
cli
fstp
inc
cld
in
fsin
pop
inc
inc
mov
incl
mov
loopne
clc
push
fbstp
jle
lods
loopne
std
subb
stos
inc
mov
shl
stos
das
je
xchg
lahf
nop
or
lea
push
xchg
jns
sbb
into
rcrb
mov
cwtl
cmp
mov
sti
das
jb
or
inc
xchg
jns
and
testl
in
push
jp
fucomi
cmp
add
pop
mov
jne
mov
js
dec
adc
cmp
scas
das
add
adc
jmp
shll
loopne
fcoms
pushf
jns
cmp
icebp
push
aas
inc
loop
jl
lcall
dec
add
cld
fisubl
test
incb
dec
jmp
notl
adc
xchg
aas
push
ds
das
sub
cmp
insl
add
inc
lods
push
addl
outsl
mov
pop
loope
lods
jo
loope
inc
pop
leave
mov
hlt
fsts
pop
in
out
pop
and
into
comiss
mov
inc
adc
divl
push
mov
jno
lret
dec
cli
inc
int3
ret
cmpsl
in
gs
xchg
jne
gs
daa
pop
les
fcmovu
fsts
push
filds
adc
dec
mov
mov
inc
or
mov
cmp
fidivl
sub
adc
fs
mov
pop
scas
and
pop
call
mov
int
mov
pop
icebp
out
xchg
or
inc
mov
adcb
idivb
cmpsl
mov
cli
and
sti
pop
dec
pop
pop
ljmp
testl
inc
movsb
sub
sbb
andb
out
push
jno
das
stc
daa
lea
xor
lcall
and
ds
mov
push
daa
mov
push
dec
dec
fisubrs
int3
shr
mov
sbb
and
sbb
sti
inc
dec
loopne
mov
jecxz
xchg
rclb
adc
jnp
add
dec
jne
xchg
movsl
cmpsb
sub
adcl
inc
xchg
pop
mov
pop
mov
pusha
loopne
arpl
aad
cltd
test
out
sarl
cmp
loop,pt
sbb
call
cltd
xchg
mov
jl
stos
sub
aam
or
inc
gs
sub
jne
in
add
fs
testb
stc
mov
dec
jae
jbe
sub
in
in
test
loopne
push
les
into
pop
lret
xchg
test
in
adc
pop
push
xchg
into
ret
mov
xor
flds
pop
cltd
mov
push
adc
aam
or
mov
nop
mov
ss
mov
stos
add
push
mov
outsb
addb
mov
jo
dec
sbb
dec
sbb
outsb
cmp
jb
ret
aaa
cmp
lret
out
jecxz
loopw
test
mov
cmp
cmc
pushf
ja
push
bound
mov
cmp
or
mov
jle
ss
jle
add
stos
mov
ljmp
and
jp
jle
jbe
aam
add
cmp
pop
aaa
fisttpll
jnp
mov
xor
mov
jle
cmp
mov
mov
and
and
lahf
jmp
test
leave
loopne
incb
rcrb
imul
jle
xor
mov
jbe
push
xchg
subb
mov
push
sub
out
into
test
push
xor
mov
mov
sti
pop
int
in
jg
mov
leave
mov
pop
sbb
and
jne
cltd
punpckhwd
and
dec
lret
cmp
gs
out
cmp
ficompl
adc
aam
shlb
cs
outsl
dec
int3
dec
adc
stos
jo
arpl
gs
mov
jae
mov
addr16
xlat
add
ffree
data16
xor
in
js
adc
xor
inc
insl
mov
pusha
xchg
bound
adc
dec
aad
lods
xor
enter
add
dec
add
out
pop
cmpsl
lods
ja
das
xchg
or
inc
mov
add
test
xchg
add
loop
and
fimull
pop
sub
daa
lret
mov
xchg
sbb
pop
es
jae
test
jg
mov
out
inc
sbb
fcmovbe
pop
pop
aam
adcb
jns
and
test
sub
shll
int
mov
push
pop
sbb
push
sub
push
cmpl
pop
subb
mov
lods
fidivl
icebp
stc
mov
push
add
int3
push
mov
jno
aas
push
pop
stos
lock
hlt
or
shrl
mov
xor
sbb
cli
dec
jle
lahf
or
sub
push
out
testl
jb
or
lock
fsubrl
mov
mov
mov
out
ss
sahf
and
inc
fwait
jl
dec
or
adc
pop
mov
repz
pop
rcrb
inc
push
insl
mov
sub
dec
ja
lahf
cmp
push
add
sbbb
lret
sub
aad
pusha
out
int
cmp
inc
pop
sbb
mov
mov
and
lea
int3
imul
out
scas
xor
hlt
xor
jle
sub
xor
lret
sti
or
into
xchg
imul
enter
xor
fwait
bound
iret
sbb
jne
scas
jge
and
sbb
flds
jae
ret
mov
mov
in
lcall
cmovp
pushf
xor
lods
jnp
into
in
addr16
inc
mov
das
sub
inc
xchg
mov
cmp
sub
xor
cs
push
sbb
mov
divl
xor
aad
movsb
cmp
pop
mov
inc
add
pusha
arpl
inc
scas
movsl
out
add
push
js
ss
push
mov
or
or
cmp
aas
addr16
imul
push
push
cli
mov
push
inc
in
pop
idivb
into
ficomps
loop
js
movsb
fistpl
cwtl
enter
sbb
xor
inc
inc
out
sub
inc
out
ret
xchg
ret
push
push
and
sbb
inc
dec
aam
and
popf
push
sahf
jecxz
sub
push
aam
xor
cmc
iret
les
dec
bound
mov
push
stos
pop
dec
add
mov
lret
ljmp
inc
xchg
outsb
inc
lds
jb
subb
jb
rsqrtps
or
and
jne
or
shlb
dec
lea
sbb
lret
movsb
negl
shlb
cmc
inc
insl
and
fisubrs
pop
loope
dec
xor
or
or
aad
xor
mov
in
fsubrs
hlt
jl
xor
movsb
jle
sbb
rclb
sub
imul
xchg
adcl
sub
fcmovnbe
dec
push
pop
sarl
cmp
jmp
sbb
sbb
dec
lahf
in
jecxz
jbe
clc
and
mov
mov
out
mov
lods
mov
gs
xchg
pop
mov
pusha
xchg
imul
push
sbb
add
out
inc
in
xchg
inc
adc
sub
mov
daa
push
out
add
push
sub
repz
insb
mov
js
push
jnp
jbe
ffreep
mov
xchg
enter
and
adc
in
pop
adc
xchg
popa
or
neg
xor
fwait
pop
adc
adc
and
cld
mov
cmp
sbb
jle
mov
aad
mov
add
pop
mov
popf
inc
xchg
mov
inc
leave
testb
sti
pop
xchg
fwait
aam
jae
andb
loopne
faddl
pop
jge
mov
mov
inc
fmull
push
mov
ror
dec
das
rep
pop
call
out
add
or
xor
xchg
dec
test
sbb
mov
out
hlt
icebp
into
sarb
adcb
ljmp
mov
mov
cmc
xlat
out
repnz
inc
or
jle
insb
xchg
xlat
cld
imul
xorb
cmpl
pop
lret
leave
and
mov
push
inc
lods
cmp
and
je
inc
adc
xor
ljmp
and
mov
and
out
cld
out
pushf
jmp
pop
jmp
mov
sbb
scas
fildll
movsl
xchg
mov
and
and
dec
sub
push
push
test
lea
sub
dec
xor
mov
cmp
jecxz
jb
mov
int3
pop
jnp
add
movsl
stc
sbb
sub
sbb
push
in
sahf
jge
loope
loope
bnd
mov
pop
jmp
jmp
mov
pop
imul
push
test
ljmp
xchg
in
jg
lret
pop
or
mov
jg
rcll
test
and
jb
jl
jo
pop
lock
mov
add
xchg
fs
aad
sbb
push
lods
fs
fcompl
cmp
and
mov
add
add
sub
jl
push
jecxz
adc
icebp
mov
cmpsb
mov
pop
orb
xor
pop
cld
pushf
mov
mov
jecxz
iret
adc
aam
leave
adc
and
cmc
sub
fbld
pop
dec
xchg
bnd
das
jle
and
mov
daa
fsubl
push
sbb
sub
shll
aad
mov
jnp
add
outsl
pop
and
jg
cmp
mov
and
sbb
int
cmp
iret
cmpsl
xor
add
fisttps
cld
addr16
sbb
loope
xchg
xchg
lret
xchg
inc
cli
mov
test
cmpsl
sbb
push
test
jge
stos
fsubr
fstpl
call
roll
sub
out
xchg
bnd
fdivrl
xor
clc
push
add
inc
repnz
push
mov
mov
inc
cmp
mov
sbb
inc
movsb
lods
lret
jmp
dec
inc
repnz
jecxz
add
or
aaa
mov
jne
gs
xlat
and
rclb
decl
sbb
ljmp
scas
stos
jae
xor
jmp
in
mov
mov
pop
in
ret
xchg
or
in
loope
cld
or
cmp
mov
fwait
push
into
push
lods
fwait
push
pop
inc
mov
dec
cs
lret
aad
xchg
sbb
daa
pop
addl
call
sub
rcl
cltd
xor
push
mov
jbe
nop
lds
cmp
xor
and
mov
sbb
movsl
mov
xor
leave
iret
xchg
mov
xorl
jae
movsl
or
mov
push
loopne
adc
dec
pop
pop
stos
dec
xlat
dec
xchg
ds
js
lret
jp
sbb
add
mov
jmp
xor
or
add
cwtl
mov
mov
jnp
mov
pop
rcr
fldenv
and
cmpsb
fstl
push
int3
adc
call
int
xchg
ficomps
xchg
je
test
or
pop
nop
testl
xor
popa
inc
inc
xchg
xchg
leave
cli
sbb
jnp
dec
push
subl
sarb
and
cmp
cmp
pop
sbb
jle
dec
sub
jmp
adc
sub
xor
cld
mov
ret
sbb
mov
mulb
stc
fiaddl
mov
mov
lahf
aas
shl
mov
mov
dec
xchg
pop
pop
inc
icebp
mov
jmp
leave
popa
movsl
incl
push
jnp
dec
sbb
call
arpl
fidivrs
or
dec
jo
jmp
lock
inc
xchg
xchg
icebp
sbb
jns
mov
mov
mov
aad
dec
dec
rcrb
lahf
or
pop
addr16
mov
jle
pop
mov
outsl
jbe
and
cmp
out
ljmp
sub
pusha
mul
or
mov
or
push
out
mov
xor
cltd
xchg
inc
and
pop
ret
ss
lea
fisubl
sti
dec
stc
jno
ret
mov
gs
mov
sbb
pusha
sti
adc
push
push
sub
xchg
and
pusha
stos
sbb
add
pop
add
lock
leave
sbb
dec
cmp
cmc
xchg
es
adc
sti
sub
stc
shll
pusha
xchg
xor
sub
mov
call
add
jae
jmp
push
pusha
out
out
repnz
pop
xchg
mov
ds
sbb
out
arpl
inc
mov
jp
mov
aas
mov
fdivl
out
sub
cmc
and
push
daa
push
out
pop
dec
sbb
out
jl
xchg
int3
sub
and
mov
outsl
cld
pusha
inc
std
xchg
jb
pop
lahf
cmp
xchg
sbb
jbe
sub
push
xor
and
xchg
mov
push
je
cmp
sbb
pop
push
mov
outsb
lahf
inc
cmp
imul
pop
jbe
pop
inc
cmp
testl
sub
cwtl
mov
stos
jp
mov
adc
aam
mov
push
add
adc
mov
dec
and
push
xlat
movsb
sub
call
testb
cmpsb
xor
ficoms
push
cmp
aas
rol
aas
xchg
push
out
shll
push
pop
add
or
push
les
mov
lods
xor
mov
loope
jne
vmovntpd
fs
data16
sub
inc
and
dec
add
stos
adc
int3
dec
jle
xchg
ljmp
and
addr16
out
pop
cmp
mov
daa
shrl
xchg
lret
mov
int
dec
mov
mov
and
xor
scas
pop
or
add
mov
aad
stc
rcll
icebp
xchg
sahf
aad
or
lret
in
mov
les
pusha
or
jb
mov
shll
push
mov
stos
add
hlt
jbe
negl
subb
or
pop
pop
cmp
icebp
sbb
mov
ja
les
mov
mov
adc
lcall
lods
sbb
clc
xor
cmp
out
cmp
push
decl
sbb
fucomip
cmpsl
xchg
or
jmp
lret
dec
fstl
or
push
sahf
in
out
xchg
lods
scas
rcll
sub
popf
dec
dec
inc
cltd
pop
stos
imul
ret
jg
pop
sbb
jmp
cltd
xchg
cmp
pop
add
sbb
orb
cmp
add
jno
adc
fwait
cmpsl
js
pusha
jo
push
sbb
sarb
test
xchg
or
stc
ret
enter
pop
mov
loop
mov
scas
je
cmpsl
adc
cmpsb
dec
add
add
outsb
mov
movsl
int
fs
jno
sub
sub
das
hlt
jns
test
out
mov
in
loopne
aaa
sub
je
in
mov
inc
ljmp
adc
lret
movsb
ret
icebp
sbb
xor
fidivrs
mov
mov
das
stos
mov
add
aam
add
lods
fldt
lret
mov
mov
xor
test
sti
pop
jno
inc
xchg
es
scas
cmpsl
jge
mov
cltd
fdivrl
pop
xlat
sahf
cs
ljmp
cld
das
pop
mov
pop
sarl
xor
xor
xor
cld
and
mov
xchg
fdivrs
or
addl
fdivrp
lea
or
sbb
iret
mov
cs
int3
leavew
mov
jp
jns
stos
imul
sbb
sbb
jp
shlb
dec
stc
and
mov
adc
bnd
inc
insl
lcall
mov
jne
jecxz
cli
push
addr16
sub
dec
cmp
or
and
jle
ljmp
movsl
inc
lret
mov
jg
inc
jl
pop
movsb
mov
pop
inc
add
add
rcr
add
push
int3
sbbb
mov
testl
pop
dec
sub
mov
and
push
repz
les
lcall
jge
sub
inc
add
movsl
push
dec
mov
inc
ljmp
mov
add
or
negl
in
mov
and
mov
xchg
lods
mov
imul
mov
cwtl
popf
sbb
cmp
sahf
clc
mov
dec
pop
adc
stc
int
movsb
ficoml
cli
adc
addr16
cli
fs
mov
or
jo
xchg
adcl
adc
and
popf
data16
pop
jbe
lcall
pop
loope
mov
jb
push
outsl
jmp
and
pop
enter
lock
aad
and
stos
add
add
mov
jbe
sbb
das
es
lret
sarb
dec
pop
call
jle
mov
lock
add
or
dec
outsl
sub
jl
sahf
stos
mov
push
std
xor
pop
push
cmpsb
fiaddl
test
loopne
das
mov
push
pop
lea
or
or
inc
push
sahf
push
in
icebp
mov
inc
out
mov
adc
pop
pop
pusha
andl
jb
mov
mov
dec
xor
je
lret
pop
movsl
test
xor
pop
mov
fwait
pop
je
pop
clc
adc
movsl
pop
jge
js
cwtl
and
sti
and
test
and
sub
mov
jbe
iret
mov
into
lods
icebp
mov
iret
mov
lret
rcl
jno
inc
adc
orb
or
ret
lds
sub
inc
push
fwait
and
cmpb
xchg
int
sahf
fsub
and
cmpsb
xorb
adc
data16
jno
inc
aam
cltd
subl
shrl
xlat
ljmp
aas
cmpsb
mov
sub
orl
jmp
xchg
in
and
and
pop
es
bound
and
mov
in
jnp
cmp
mov
out
test
add
fcomps
test
sbb
mov
and
cmp
sbbl
aam
push
pop
push
in
jl
imul
dec
cmp
xchg
cmp
mov
out
in
or
fists
mov
mov
and
mov
cli
adc
das
loopne
sub
add
lret
imul
pop
sub
dec
or
xor
xor
add
fimull
mov
dec
sahf
pop
flds
roll
push
pop
jae
jnp
sub
push
mov
xrelease
pop
xchg
jge
test
int
sti
movsl
rcrl
shll
xchg
and
jle
cmc
jb
rcrb
and
hlt
stos
mov
push
repnz
shll
lock
mov
mov
pushf
push
stos
dec
cmp
bound
stos
icebp
jle
and
std
xor
sbb
mov
aas
xor
push
movsl
inc
stc
dec
roll
dec
lea
and
gs
testb
dec
pop
test
divb
cli
xchg
out
push
div
mov
hlt
sub
test
outsl
fcomip
pop
cmp
or
dec
rcrl
enter
mov
lea
addr16
dec
movsb
lea
fisubrs
aaa
ret
jg
xor
dec
push
sbb
orl
fcoml
add
fsts
jno
or
sar
addr16
mov
testb
mov
mov
stos
jae
mov
mov
xor
icebp
or
adc
hlt
idivb
aaa
mov
mov
or
mov
adc
iret
scas
mov
push
mov
out
jmp
into
mov
sti
mov
addr16
pop
dec
push
and
scas
or
and
jp
dec
sbb
fucom
test
and
and
add
fbstp
ss
jns
repnz
push
push
xchg
pop
add
fsubl
enter
das
lea
frstor
lock
pop
push
adc
daa
movsb
iret
repnz
test
leave
pop
xlat
sbb
xchg
insl
movsb
insl
and
lret
and
test
out
push
cmp
in
jo
mov
hlt
repz
js
sar
mov
pop
inc
shlb
bound
in
pushf
repnz
rcll
ljmp
addr16
repnz
cmp
xlat
xchg
sbb
and
insb
jb
xchg
xlat
fsubl
xor
pop
notl
mov
dec
ss
fidivrs
scas
mov
stos
sbb
in
dec
xor
add
sub
jge
ficoml
xchg
push
push
mov
sub
mov
jne
shr
lret
push
in
mov
loope
testb
popa
mov
push
movsl
aam
add
insb
or
cmc
das
cmpsl
int3
gs
xchg
sbb
pop
sub
jae
or
inc
outsl
stos
or
add
in
enter
jno
pop
push
fwait
and
jbe
xchg
jmp
ficoms
xchg
xlat
cmp
mov
cmp
xchg
sub
repz
and
mov
xor
not
xlat
mov
dec
negb
or
jg
popf
addr16
xchg
sbb
add
sbb
ja
cld
fbstp
pop
scas
cwtl
and
jo
jns
imul
test
or
dec
es
or
sbb
xlat
repz
scas
push
inc
bound
ret
dec
movsb
xchg
test
sub
or
jbe
dec
xorl
movsl
mov
ror
lahf
sbb
xorl
fidivs
mov
inc
jae
stc
movsb
add
pop
sub
xchg
pop
push
out
push
lcall
lea
sbb
mov
mov
je
push
bound
aas
mov
cs
int3
and
and
lea
mov
and
mov
and
mov
jo
test
in
out
cmpsl
nop
mov
pop
mov
xor
jge
addl
cmpl
mov
adc
mov
data16
fucomi
imul
imul
mov
test
cmp
sbb
mov
pop
pop
mov
sbbl
adc
bnd
xchg
mov
int3
insb
mov
mov
or
nop
pop
std
sub
mov
bound
notl
sbb
or
js
sbb
sahf
add
lock
mov
pop
xchg
sub
xor
adc
daa
leave
adc
inc
hlt
add
call
stc
hlt
movsl
mov
adc
mov
loop
sbb
cmp
jne
pop
mov
out
ret
xor
stos
enter
sub
out
mov
sbb
jmp
lahf
add
in
insl
xor
mov
pop
and
jle
pusha
nop
fistpll
add
inc
xor
lods
nop
push
enter
inc
jne
scas
dec
ret
fcomps
jp
jns
sub
sti
idivb
aam
cmp
xlat
sub
sub
insb
rcl
pop
stos
add
popa
push
stos
cld
les
jnp
mov
xchg
ficoms
das
jp
pop
cmc
mov
pop
shlb
cmc
lods
mov
dec
mov
and
test
data16
pop
rcll
push
push
lods
pusha
push
in
fwait
adc
push
dec
rcrl
test
xor
jne
or
jg
pop
push
xlat
rclb
mov
push
in
cmpb
push
mov
adc
icebp
and
pop
imul
add
sub
test
dec
pop
xchg
rorb
jo
int
cmp
inc
mov
out
js
loope
dec
or
movhps
movl
jl
shl
mov
xchg
jo
sbb
sub
out
mov
es
cmp
fs
js
cmp
rcll
stos
mov
or
orl
lds
and
repnz
jbe
gs
sub
xchg
pop
push
imul
lret
cwtl
rclb
sub
sbb
lret
outsl
jmp
pop
xchg
div
push
mov
lret
scas
test
fisttpll
call
pop
add
outsl
imul
push
nop
mov
enter
push
fsubr
mov
xchg
out
sub
mov
inc
cmp
jmp
out
cmc
cmove
adc
test
test
aas
mov
jg
test
xchg
test
test
push
mov
xor
roll
push
dec
xor
insl
xchg
push
jo
inc
and
xor
cmp
pop
test
test
jp
and
aaa
or
sbb
xchg
sarb
repnz
rcll
and
jle
and
movsl
dec
cmpsb
imul
and
xchg
les
and
add
jecxz
jle
jns
shll
add
sldt
enter
xor
xor
pushf
mov
pop
es
xor
add
push
sahf
pusha
xor
pop
push
and
or
add
sub
int
mov
inc
jge
mov
lods
outsb
sahf
loopne
test
mov
ror
leave
jbe,pn
add
pop
adc
leave
mov
or
xchg
xchg
rcl
out
ja
nop
lahf
mov
iret
mov
mov
pop
sbbb
cmp
xchg
cld
xchg
fcomip
fbstp
mov
rorl
xchg
imul
dec
aad
and
cld
xor
cmpsl
jge
xor
shr
mov
scas
add
xchg
cmp
cmc
popf
lds
imul
rcll
inc
jbe
adc
enter
insb
stos
lret
hlt
push
mov
in
push
and
aad
jb
sbb
shl
mov
xor
orb
add
and
mov
addr16
add
xor
loope
outsb
lock
test
popf
ret
pop
lock
jmp
aas
jge
jae
hlt
popa
aas
divl
test
sbb
mov
or
add
pop
push
in
test
mov
xor
repz
sbb
das
mov
and
cs
fidivrs
sti
fnstsw
and
xor
mov
inc
test
xor
lods
mov
cmpl
inc
xchg
ret
mov
jp
add
sahf
ret
pop
jno
pop
push
in
jmp
ja
xchg
lea
aas
sub
sub
dec
cmpl
movsl
rcll
repz
dec
add
adc
cli
xor
cld
cld
fbstp
lcall
outsl
xor
std
ljmp
popa
fistps
scas
jecxz
movsb
repnz
cmp
cs
mov
das
insb
push
out
ss
xor
inc
xchg
testl
hlt
aaa
fistpl
jl
xchg
lret
nop
aaa
iret
sbb
ljmp
fsubr
ret
mov
loopne
push
pop
ljmp
fcomip
lcall
pop
xchg
jbe
mov
cmp
daa
or
lret
push
aad
sub
mov
setno
xlat
repnz
inc
cs
fwait
xchg
sbbl
in
js
std
cld
or
xchg
dec
xorb
and
loope
adc
stc
repz
test
sub
add
add
mov
pop
inc
mov
loopne,pt
jae
stc
and
and
adc
std
outsb
mov
testl
scas
cs
repnz
cmp
repnz
push
inc
int
int3
mov
stc
or
and
dec
jmp
out
mov
lods
or
push
xchg
jb
xor
xor
jg
in
aad
inc
negl
and
ror
adcb
push
xchg
pop
sbb
push
popf
ja
and
lods
adc
repnz
lock
aam
rolb
mov
sbb
xchg
mov
arpl
mov
test
imul
push
idivb
scas
xlat
dec
aas
leave
add
dec
cli
stos
stos
cli
lods
inc
dec
jge
cmp
ja
lret
shrl
adc
lcall
out
lods
lahf
out
les
mov
mov
int
pop
imul
jp
jge
lods
inc
std
add
dec
loop
orl
cmp
push
sub
shrl
cwtl
stc
add
fdivl
and
xchg
rcl
sbb
aad
in
push
sahf
fmuls
mov
and
jl
loop
sub
fstps
leave
adc
icebp
scas
jp
dec
jmp
xor
cld
mov
lret
lods
push
stc
inc
stos
js
aam
lds
mov
mov
cmp
pop
adc
out
ret
push
scas
mov
or
or
jecxz
xchg
fs
lock
jbe
call
sub
stos
mov
pushf
jge
dec
hlt
mov
loopne
sub
cmp
sub
aam
ss
xlat
aas
nop
ficomps
pop
pusha
cmp
cmpsb
bound
mov
cmp
popl
mov
pushf
iret
insb
test
mov
jns
ja
add
es
pop
adc
pushf
fisttps
cmp
nop
int3
xchg
sub
clc
cmp
xor
shll
add
or
sub
xchg
mov
in
scas
sub
das
das
mov
mov
adc
xor
push
in
pop
das
clc
gs
jg
add
cs
les
cmpsb
ficomps
pop
int
enter
in
minps
mov
pop
mov
fistl
add
pop
jecxz
mov
pop
mov
mull
jp
add
mov
pop
movsb
out
pop
inc
push
loopne
cmc
xchg
xchg
cmp
outsb
pop
pop
xchg
adc
xor
adc
push
lret
add
out
hlt
mov
hlt
int
or
sbb
push
fidivrs
pop
rcrb
outsl
pop
cmpb
cmp
loop
add
nop
leave
sti
dec
fwait
sbb
sarl
dec
icebp
icebp
movsb
mov
rclb
fisttpl
imul
movsl
mov
push
ss
outsl
push
xor
in
lahf
sub
or
jo
leave
in
cmp
mov
imul
cmp
out
das
insb
xchg
fidivrs
lret
mov
mov
mov
xchg
xchg
orl
out
in
dec
add
rorl
ret
pusha
rcll
ljmp
sbb
sub
imull
add
sahf
gs
add
cmp
or
mov
xor
lcall
pop
add
xor
mov
sti
popf
xchg
fwait
pop
fldcw
fstl
sbb
aam
out
mov
pop
xor
outsl
jecxz
dec
xchg
jne
ret
add
mov
adcb
ss
sbbl
and
jmp
xchg
dec
xor
shrb
mov
daa
jns
stc
dec
mov
inc
and
les
lods
mov
loopne
lods
inc
mov
cmp
lcall
lea
daa
movsl
out
jle,pt
push
mov
push
out
cmp
out
xchg
sbb
in
aas
lret
dec
lods
mov
cmpsb
xchg
ds
xor
inc
pop
jnp
lock
push
fisubrl
mov
pop
sub
push
rolb
jmp
stos
push
cmp
cli
rcrl
sub
int
cwtl
ljmp
loopne
jge
pop
mov
scas
sub
push
mov
lea
sub
imul
clc
addl
dec
icebp
jne
aas
xchg
push
sbb
jmp
jp
enter
sbb
fiadds
gs
jg
mov
jno
push
movb
cld
push
jge
cmp
inc
inc
cwtl
add
bnd
xorl
aad
pop
xchg
lret
fdivrs
inc
mov
jns
icebp
js
and
popa
int
inc
and
rolb
dec
lret
mov
rorl
adc
cmp
insl
mov
mov
and
push
push
adc
inc
mov
lcall
mov
loopne
push
jno
ret
lods
inc
fwait
cmp
mov
outsl
pop
and
dec
dec
sbb
aaa
icebp
stos
adc
sub
loope
sub
jmp
xlat
mov
loope
test
shl
aas
pop
pop
or
push
mov
jnp
jne
roll
cmp
repz
or
dec
in
cmpsb
test
and
iret
jno
mov
or
mov
cltd
ret
inc
inc
leave
pop
js
scas
sbb
rcl
mov
leave
loopne
shl
enter
and
adc
shr
in
jl
movsl
sub
shl
and
or
fisubrs
daa
adc
dec
arpl
adc
fwait
pop
jg
add
imul
pop
enter
mov
jne
ja
or
scas
jp
nop
sbb
or
cmp
mov
les
pop
mov
add
adc
movsb
cmp
sahf
pop
sbb
adcb
mov
mov
xchg
icebp
mov
sub
roll
pop
cmp
popa
cmp
cs
xor
mov
in
scas
ret
pop
ret
mov
cli
stos
ss
scas
mov
pop
and
ljmp
rcrb
and
lds
enter
pushl
fndisi(8087
inc
mov
test
shll
jecxz
cmp
sub
dec
lcall
or
inc
add
test
dec
test
mov
adc
icebp
add
inc
inc
dec
add
push
cmpsb
pusha
push
inc
pop
dec
mov
and
rcll
push
out
je
push
mov
sub
movlpd
mov
call
inc
pop
jl
adc
ljmp
push
jb
hlt
mulb
mov
stos
jnp
dec
pop
pop
pop
loop
mov
push
inc
jbe
adc
jmp
sbbl
mov
mov
ljmp
pop
xchg
fadds
sbb
mov
pop
xchg
adc
cmc
mov
lahf
cmp
push
arpl
ficoml
or
fsubs
movsb
inc
sbb
add
stc
or
xchg
cmpsb
and
ret
or
and
add
dec
lods
cmpsb
xchg
aaa
cli
imul
push
leave
out
mov
mov
push
cmpsl
faddl
cmp
mov
testl
addb
jnp
push
int
insb
inc
mov
push
shll
dec
sbb
mov
add
imul
xchg
sahf
stos
popf
stos
xor
and
mov
decl
addl
bound
add
xor
push
stos
daa
sbb
test
inc
or
stc
cmpsb
dec
push
dec
mov
sbb
test
pop
mov
pop
int
xchg
mov
mov
ret
aaa
cmp
xchg
je
dec
xor
aad
lret
push
pop
or
aaa
popf
clc
lods
adc
pop
xlat
mov
xrelease
loope
lea
rcl
std
out
mov
inc
sbb
mov
ret
testb
jnp
fists
es
into
negb
aas
dec
outsb
adc
dec
xchg
and
mov
loopne
lahf
scas
test
gs
in
daa
ja
and
xchg
adc
pop
mov
pop
das
scas
data16
repnz
jg
add
les
push
rcrl
cwtl
jns
jb
iret
shlb
mov
push
push
or
mov
fmuls
in
out
add
enter
cmpb
mov
addb
rep
xor
inc
mov
dec
clc
sub
mov
push
sub
cmpsb
sbb
lds
and
mov
inc
fisttpll
mov
pop
hlt
lret
adc
rclb
cld
call
adc
loope
jae
mov
mov
dec
nop
jmp
sbb
pop
mov
xlat
cwtl
pop
je
and
lods
xchg
xchg
imul
push
leave
es
jb
insb
ljmp
fs
std
movsl
imul
xor
dec
push
mov
lahf
fwait
adc
or
loop
int
lods
fcomp
shll
mov
dec
mov
daa
int3
ds
inc
cltd
scas
in
jns
jl
mov
addb
ss
push
in
daa
mov
inc
das
imul
cmp
push
pop
mov
loopne
add
ss
push
inc
out
hlt
dec
imulb
idivl
fsubl
add
mov
daa
jmp
or
add
inc
and
jns
xor
mov
popa
and
popf
fistl
jnp
test
cmc
adc
mov
inc
mov
mov
cmc
fistpl
je
das
mov
jo
sub
add
ja
xor
or
jl
mov
push
sti
mov
sub
push
xchg
test
cmpsl
jno
scas
pop
cwtl
dec
jge
mov
dec
loope
mov
jae
popa
pop
dec
lock
or
iret
pop
adc
pop
outsb
test
pop
out
scas
mov
xchg
aam
insb
inc
movsb
aam
lods
pop
fdivrl
ds
int3
mov
sbb
mov
mov
dec
fs
ljmp
mov
inc
inc
fdivr
add
jl
push
in
sbb
cld
mov
cmp
mov
bound
push
pop
out
mov
lcall
std
mov
push
loopne
bound
mov
clc
add
rcrb
test
outsb
fdivr
das
mov
jno
test
shr
in
jmp
jg
push
out
movsb
xor
fistpl
cmp
cmp
add
push
dec
mov
and
adc
ret
inc
outsb
lock
pop
pop
pushf
les
mov
cmp
mov
out
adc
sbb
mov
xchg
sti
jmp
cmpl
lods
popf
inc
test
cs
dec
es
test
sub
and
mov
loope
push
flds
pop
ja
fwait
cld
js
cmp
or
shl
mov
rcrl
jmp
inc
aad
cmpsl
icebp
psubd
mov
shrb
push
adcb
pop
push
adc
jge
jecxz
and
je
pop
mov
cmp
stos
ret
es
mov
or
adc
movsb
stc
int
insb
aaa
jl
sbb
iret
data16
out
iret
popf
pop
xchg
fwait
std
fstpl
test
xchg
inc
mov
mov
int3
das
mov
stos
jbe
xor
inc
mov
xchg
jle
in
inc
xchg
daa
pop
fildll
aas
popf
daa
divl
and
frstor
rorl
sbbb
pop
es
cmp
fstl
and
iret
sub
mov
inc
xor
cmc
and
adc
inc
cmp
loope
hlt
pushf
or
or
adc
xorb
lea
pop
js
or
jo
mov
lea
dec
das
or
std
and
imul
stos
mov
adc
fcoml
jae
jp
jns
mov
pop
cs
inc
and
mov
mov
inc
xchg
icebp
dec
lahf
cmp
call
lret
sbb
push
imulb
lahf
cmp
dec
pop
dec
xchg
out
lcall
stc
std
and
aaa
cld
push
into
dec
enter
dec
lods
pop
cmp
push
outsb
xchg
fiaddl
pushf
push
lods
pop
sbbb
in
imulb
mov
mov
icebp
sti
imul
and
aam
adc
mov
sub
mov
test
mov
insb
mov
lcall
or
push
and
jge
add
xchg
adc
movsb
pop
pop
pop
jne
das
push
pop
xchg
mov
add
out
inc
lods
pop
mov
push
jmp
and
pop
ds
pop
arpl
or
lret
cmp
pop
in
repnz
mov
es
xchg
movl
pop
pop
lods
stos
into
adc
jne
sub
inc
movsb
cmpsb
lods
xlat
mov
fnsave
lret
out
jmp
lea
mov
repnz
arpl
fdivrl
sbb
jl
lods
mov
rcrb
dec
mov
movsb
gs
test
add
xchg
dec
ja
jno
lahf
sub
cmp
mov
stos
sbb
mov
dec
xchg
cltd
xchg
gs
scas
stos
sub
xchg
and
inc
inc
push
cmp
or
icebp
dec
or
push
jbe
stos
mov
pop
mov
push
dec
push
cmc
pop
lcall
add
enter
das
jl
or
js
sub
sbb
and
or
cs
add
clc
test
aaa
insl
fnstenv
mov
push
mov
pop
inc
pop
dec
mov
jmp
loopne
pop
imul
mov
adc
fucom
decl
lods
loope
adc
and
mov
jg
mov
test
cld
adc
push
out
inc
mov
mov
lds
sub
movsb
or
inc
mov
dec
fwait
xchg
sub
mov
scas
int
rcr
xor
jecxz
lcall
popf
aam
mov
or
xchg
shrb
fisubs
sbb
movsb
mov
xorb
rorl
adc
jnp
movsl
mov
scas
ret
xchg
out
pop
push
or
clc
sbb
mov
add
out
fidivs
pop
add
dec
call
mov
jns
xor
or
in
sub
add
cmp
arpl
lods
rcll
sub
dec
shl
stc
divl
add
jg
add
lds
fs
dec
jno
in
xchg
mov
or
add
fs
inc
lods
loopne
jge
and
xchg
adc
mov
je
dec
popa
adc
jle
mov
xlat
out
in
stos
in
mov
addr16
inc
cs
inc
xchg
or
inc
std
pop
inc
fnstcw
mov
cld
adc
pop
aam
inc
jbe
loope
sbb
bound
cmp
jp
leave
mov
mov
adc
mov
jmp
adc
add
dec
mov
enter
das
es
push
stos
xor
mov
leave
mov
xor
div
aam
xchg
xchg
es
adc
addr16
sahf
cmp
cwtl
push
pusha
insb
xchg
adc
sub
mov
enter
inc
xor
das
mov
or
mov
sbbl
mov
xor
xchg
scas
add
outsl
mov
xchg
inc
inc
stc
mov
loop
and
loope
outsb
js
pusha
push
test
push
xchg
out
daa
jno
out
xlat
push
bound
cmp
cmp
or
fstpt
lret
imul
fistps
xchg
out
inc
int
shrl
js
xor
sub
inc
test
mov
arpl
mov
insl
pop
mov
imul
mov
dec
out
and
inc
and
push
popf
push
xchg
inc
jnp
repz
andl
mov
push
leave
aaa
popa
popf
addr16
int
jne
inc
dec
hlt
sub
mov
push
xchg
push
xchg
lcall
xor
shll
sub
mov
jmp
pop
pop
rclb
push
scas
adc
lods
dec
cwtl
xor
sti
in
rorb
ljmp
jmp
inc
ds
xchg
sub
cltd
ret
push
dec
cs
decl
pop
pop
mov
out
sbb
fsubl
fisubrs
and
daa
xchg
lds
in
dec
dec
pop
mov
sbb
push
inc
mov
xchg
aas
mov
sbb
rorb
aad
adc
movsl
and
les
dec
push
in
test
sti
and
jb
push
add
jp
je
pop
add
and
sub
imul
mov
in
shr
add
adc
nop
jmp
mov
bound
jl
and
mov
mov
data16
ds
inc
pop
mov
lock
and
dec
ljmp
movsb
mov
das
movsb
add
test
das
xlat
out
cmc
data16
movsb
dec
push
add
cwtl
mov
mov
xchg
test
push
divl
out
xchg
jecxz
xor
dec
jae
insb
xchg
stc
das
fwait
adc
es
scas
mov
cmpsl
mov
pushf
adc
push
mov
xor
je
push
jno
add
cli
pop
imul
push
clc
rclb
sub
dec
js
fbld
pop
out
stos
dec
in
lahf
fwait
dec
pop
mov
sub
jle
xchg
add
out
pop
ret
dec
pop
push
xchg
lock
mov
aam
dec
cmp
mov
xchg
imul
jl
aam
cli
adc
adc
loope
inc
add
and
dec
sti
hlt
loope
fbld
xchg
inc
pop
shlb
stos
dec
lcall
inc
adc
mov
inc
jp
or
shl
test
ja
popf
xlat
sub
push
jle
or
scas
nop
sar
mov
ljmp
adc
jp
test
push
fnstsw
std
sub
popf
xchg
out
inc
into
xor
jo
xor
push
mov
adc
mov
mov
pop
ret
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
mov
negl
push
push
or
imul
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
pop
fsubl
mov
scas
push
push
sbb
das
pushf
mov
xchg
dec
ret
scas
add
xchg
and
inc
sar
and
sub
pop
leave
mov
xor
sti
dec
aam
sbb
popf
daa
movsb
fsubl
or
popf
sub
and
fstl
test
mov
test
imul
int3
and
pop
cmpl
xchg
loop
xchg
insl
and
imul
push
sbb
and
inc
adc
cmpsl
scas
xchg
fwait
ret
movsl
scas
daa
jecxz
adc
cvtps2pi
mov
rcl
mov
xchg
gs
dec
imul
sub
fsubl
scas
notb
fwait
rcrl
mov
orb
testb
sbb
popf
daa
inc
fsubl
movsb
testl
daa
mov
testb
sbb
popf
aaa
movsb
fsubl
stos
testb
sbb
lea
movsb
fsubl
scas
repz
sbb
popf
daa
mov
testb
lcall
in
sahf
repz
sbb
daa
mov
arpl
testb
sbb
lea
movsb
fsubl
scas
out
sbb
popf
daa
movsb
fsubl
sub
negl
sahf
xchg
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
jg
jmp
jno
testb
sbb
cmpsl
and
pop
popf
jecxz
mov
arpl
testb
push
fsubl
push
inc
fsubp
adc
popf
ja
fsubl
stos
testb
sbb
popf
daa
movsb
fsubl
scas
inc
fidivs
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
scas
testb
sbb
popf
daa
movsb
fsubl
movsl
imulb
rorl
negl
aaa
push
fcmovnu
pop
xor
dec
add
outsl
data16
jns
and
leave
jnp
sahf
stos
loopne
daa
cmpl
fwait
jmp
in
jecxz
inc
mov
inc
inc
inc
lahf
jecxz
mov
and
bound
jle
push
pusha
in
mov
and
push
xchg
push
sti
aam
enter
out
movsb
sub
adc
mov
cmp
repz
movsb
jl
ret
push
inc
jge
lcall
btr
lods
or
sbbb
mov
notl
pop
inc
pop
ljmp
in
cli
stos
add
pop
cmp
repz
and
pop
inc
ja
iret
cmp
xorb
lea
add
inc
adc
jb
mov
push
or
testb
jl
cltd
cltd
cli
inc
fs
xchg
push
je
mov
cmc
sbb
imul
cmc
int
jp
mov
adc
test
sub
imul
xor
mov
mov
xor
out
and
pop
cltd
xor
std
insb
call
cmpsl
insb
and
xorl
jbe
add
xchg
push
add
pop
add
cmpl
inc
cmp
add
cltd
icebp
inc
cmp
cmp
xchg
les
dec
movsb
das
adc
mov
pop
int3
fisubl
out
cmp
mov
sbb
and
pop
cmp
pop
or
out
adc
ret
mov
add
scas
add
imul
add
mov
jbe
pop
mov
mov
jle
pop
in
sub
aam
lods
ret
arpl
jg
sub
cmc
js
fisubl
repnz
xchg
add
cld
fld
stos
scas
fidivs
mov
dec
outsl
loope
lds
loop
or
insb
push
repz
mov
add
push
xchg
enter
insb
xchg
mov
lcall
xor
mov
jbe
dec
sbb
sub
mov
mov
rcr
mov
mov
or
lcall
lahf
and
cwtl
inc
dec
imul
stc
out
loop
sbb
dec
dec
sti
mov
xor
dec
stos
push
arpl
or
xchg
ss
movsl
mov
dec
xchg
adc
jae
push
inc
int3
push
mov
es
inc
stos
jp
sbb
pop
lods
add
add
insl
cmp
mov
fists
movsl
lds
add
sub
mov
test
push
das
xchg
and
stos
dec
jmp
push
lea
arpl
xchg
xchg
decl
notb
fldcw
sub
ret
add
or
push
cmpsl
inc
mov
bnd
lock
fisubrs
imul
mov
fidivrs
sbb
or
add
jg
test
mov
daa
inc
sarl
xchg
repnz
mov
sbbl
aas
jg
fwait
inc
aas
cmp
ljmp
je
mov
mov
push
call
lahf
out
jne
xchg
fdivrs
xor
out
cld
cwtl
xor
adc
stc
and
fcomps
add
loope
pop
mov
movsb
cmp
pop
push
movb
fcoml
inc
push
adc
pop
push
cmc
movsb
or
mov
cld
les
cmp
add
movsl
std
add
ret
mov
pop
mov
mov
out
insl
call
add
iret
ret
fxch
lret
mov
stos
and
push
into
hlt
jmp
add
jne
push
xor
fistl
jno
jmp
sbb
mov
pop
push
jmp
xor
dec
bound
test
fs
or
xchg
inc
jle
inc
cs
dec
cmp
xor
addr16
mov
or
inc
push
xchg
sbb
ret
outsl
cmp
dec
pop
jbe
dec
dec
icebp
js
cmpsl
mov
jg
cmpsl
ret
in
fdivrl
shrl
loope
ja
xor
mov
imulb
aaa
adc
and
adc
movsl
mov
std
repnz
xchg
jl
mov
xchg
xchg
push
es
mov
cmp
sbb
push
cmp
add
jle
das
jae
mov
pop
push
lea
mov
and
jb
push
pop
mov
outsb
mov
pop
scas
or
es
scas
lods
sub
or
fcomp
jecxz
jge
jae
cmpsb
sbbb
sarb
cmp
cmpsb
or
int
loope
mov
and
pop
pop
faddl
sbb
push
sbb
aam
mov
rol
ss
cmc
ja
mov
dec
sub
jl
jne
jecxz
pusha
nop
sti
lahf
dec
sbb
mov
mov
insl
xchg
sbb
push
dec
cs
xchg
xor
faddl
mov
pop
adc
sub
mov
mov
xor
in
and
dec
lods
pushf
insb
test
stos
out
adc
sbb
sarb
es
jmp
push
xorb
mov
inc
mov
xchg
mov
push
jle
adcb
paddsw
push
xorb
add
lcall
in
xlat
mov
adc
insb
lea
notl
scas
sub
mov
in
jnp
aad
pop
imul
sti
xor
mov
cmpsl
push
leave
incl
cwtl
cmp
movsb
movsl
sbb
fs
ror
mov
or
mov
shrl
cmpsb
bound
inc
add
xlat
mov
ret
pop
sahf
pop
mov
imul
xor
push
mov
cmp
in
push
movsl
jmp
pop
scas
xchg
std
jmp
xlat
and
repz
ficompl
testl
inc
incl
movb
pop
jae
sti
cmp
ss
dec
filds
inc
lods
mov
cmc
or
mov
and
cld
insl
daa
or
sub
pop
lock
fstps
lret
mov
jo
dec
xor
mov
xor
dec
push
mov
push
xbegin
rorb
xchg
jg
lret
or
adcb
outsb
ficoms
push
dec
and
andl
movsb
cmpsb
and
or
data16
jmp
adc
cmp
mov
mov
push
std
out
xor
test
lods
mov
outsl
lea
mov
xchg
adc
inc
ret
push
ficomps
insl
mov
cmpsl
repz
push
and
stos
ret
sub
pop
mov
jbe
rclb
sbb
cmpsl
push
adc
ljmp
aaa
lea
into
subl
push
dec
dec
inc
in
xor
or
dec
stos
scas
sbb
andb
jmp
inc
lods
notb
inc
cmp
push
pop
test
aas
sub
cmp
das
ret
lds
pop
or
insb
xor
push
xchg
push
data16
fs
adc
push
and
mov
cmc
xor
bound
les
mov
dec
cmp
push
sbb
mov
mov
dec
jge
mov
pop
mov
or
push
fnstsw
push
mov
imul
xchg
test
xchg
sub
pop
jno
mov
adc
xor
cli
sbb
es
inc
adc
repnz
mov
xchg
sbb
out
mov
jl
cmp
out
and
xchg
in
cmc
mov
add
ljmp
filds
insl
and
lahf
movsb
aas
push
mov
push
mov
pop
or
pop
add
mov
sar
shlb
fwait
push
ret
cmpsb
inc
out
fstpt
fwait
icebp
ret
mov
sbb
jns
push
gs
adc
and
pop
jecxz
arpl
int
xor
out
aaa
adcb
imul
repz
xor
lods
xchg
loopne
dec
or
cmc
js
mov
loope
mov
inc
aaa
mov
sub
push
es
out
es
push
cltd
sahf
xchg
dec
in
pop
jae
lods
xchg
cmpsb
mov
fcmovne
outsb
or
dec
xor
xlat
and
loopne
in
mov
push
and
jp
js
jecxz
push
cmp
pop
addb
pop
insb
push
mov
adc
sahf
mov
les
inc
xor
pop
cmp
jnp
mov
dec
dec
stc
imul
xchg
xchg
lea
arpl
fdivs
pop
sub
push
xchg
testl
xor
enter
jmp
or
inc
lcall
mov
stc
or
das
fstsw
sub
pop
dec
jmp
sbb
shr
cld
rcrl
lods
mov
out
test
sub
and
jno
xor
lcall
inc
xchg
aad
punpcklwd
adc
ja
pop
out
cmc
bound
jmp
cs
sub
faddl
jp
cmp
fdivrl
or
insl
and
daa
loopne
stos
scas
push
out
js
imul
pop
xchg
cmp
xchg
out
add
pop
push
mov
mov
fistl
mov
xor
insl
and
je
mov
loopne
cmpsl
test
cs
push
arpl
xchg
andb
ret
scas
repz
xchg
sahf
jno
mov
cmpsl
push
jb
mov
xchg
sbb
test
call
sahf
pop
and
clc
fbstp
repnz
pop
lahf
push
sub
dec
jne
testb
hlt
cwtl
enter
inc
sbb
or
mov
mov
and
int
outsb
test
jle
sub
out
sub
cmpl
cli
faddl
pop
movsl
bound
sbb
xor
or
int3
aaa
stos
cmp
jg
in
sti
jno
mov
inc
orl
stc
ja
mov
mov
jae
xor
pop
in
stc
inc
xor
ss
jge
xchg
jo
cmp
aaa
ret
imul
and
sub
pop
js
icebp
popf
cltd
jbe
in
push
sysexit
lock
mov
mov
test
in
mov
dec
lea
mov
andl
das
insb
jb
push
fisubl
jne
cli
movsb
sbb
add
or
xchg
cmp
fnstenv
pop
ficomps
gs
push
bound
sbb
shrl
push
addr16
jbe
push
jns
push
jmp
dec
pop
dec
inc
mov
pushf
sbb
or
and
cmp
pop
push
movsl
loope
test
mov
cmp
xor
jmp
nop
outsb
int3
cmc
jle
xchg
fbld
ret
jbe
std
test
mov
int
xchg
bswap
ret
pop
push
push
inc
push
je
push
xchg
cmc
movsl
push
mov
xchg
data16
int
sbb
xchg
mov
or
and
pusha
mov
stos
pop
mov
incl
cwtl
cmp
clc
pop
lds
sbb
mov
imul
outsb
lahf
subb
cmpsb
xor
pop
sub
xor
call
js
xor
cmc
add
sbb
sub
push
outsl
jb
mov
push
xor
pop
cld
popa
cmp
sbb
sub
sub
jo
lret
mov
inc
pop
addb
shrl
jbe
mov
stos
insb
loope
mov
inc
mov
dec
pop
mov
inc
jno
out
ja
mov
insl
adcl
out
cwtl
insl
xchg
daa
mov
repz
dec
xchg
in
inc
cld
dec
les
xchg
mov
adc
dec
push
cmpsl
inc
adc
stos
or
add
lods
add
outsl
mov
fidivs
add
sbb
or
xchg
nop
dec
cld
iret
cmp
lds
enter
jns,pn
pop
sub
decb
sub
and
or
cmp
or
jae
popf
fstps
adc
mov
xor
push
movl
lret
mov
jae
or
and
repz
cs
movsb
es
popf
daa
push
xchg
push
fsubl
jne
jecxz
imul
pop
lods
out
out
fsubrs
mov
cltd
sub
jge
cmpsb
shrb
adc
or
push
xorl
enter
dec
or
cmp
pushf
dec
sbbb
xchg
pusha
jae
ficomps
movsl
fs
test
cmp
push
rcrl
lret
nop
imul
and
inc
cld
push
je
push
cmpsb
cwtl
fs
sbb
clc
add
loopne
mov
shll
xchg
push
daa
cmp
rolb
stc
leave
adc
cmc
push
repnz
jl
mov
iret
dec
es
ret
or
lods
rcr
divb
push
cmpsl
dec
xor
pop
cmp
xlat
mov
ljmp
adc
inc
sub
and
jle
inc
fwait
aam
in
test
mov
mov
sub
sbb
push
ret
outsb
push
sub
int
fsts
icebp
fdivrs
fistl
or
dec
cld
pop
and
sub
shlb
outsb
mov
scas
aad
mov
jmp
pop
arpl
popa
scas
cli
sahf
or
xor
mov
jp
insl
mov
popa
lds
jo
mov
push
pop
mov
ss
pop
data16
stos
data16
sbb
mull
cmp
mov
and
movsl
adc
add
jmp
dec
pushf
int
ja
fimuls
dec
test
out
sub
xchg
mov
mov
inc
pop
and
dec
shrl
push
pushl
cmp
cs
cmp
leave
addr16
rorl
and
orb
cmp
sbb
jnp
pop
and
mov
scas
add
fmuls
pop
movsb
xchg
out
shlb
xchg
adc
add
jg
and
fcomp
stos
xchg
icebp
xchg
mov
cmp
imul
inc
aam
nop
cmp
fstpl
sub
xor
mov
das
into
inc
xor
popa
stos
shlb
sub
nop
pop
test
divb
stos
add
in
xchg
mov
and
mov
popa
mov
es
rolb
push
in
inc
mov
test
call
sbb
lret
test
xor
sti
loopne
xor
add
ret
nop
nop
nop
nop
jmp
