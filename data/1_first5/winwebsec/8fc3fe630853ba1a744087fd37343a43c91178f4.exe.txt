sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
in
add
and
jge
clc
leave
enter
das
xor
lods
cmp
ja
or
jo
mov
pop
aam
pop
scas
ja
cli
pushf
cmp
xchg
pop
fwait
aaa
test
lds
stos
cmpsb
jl
xlat
or
movl
sbb
js
dec
xor
sbb
popa
addr16
mov
push
and
mov
cli
jbe
xor
icebp
aaa
movsl
insl
sbb
dec
in
mov
add
inc
es
adc
aaa
sub
dec
cltd
aad
jae
jmp
std
push
and
lds
ret
mov
lahf
inc
dec
jnp
mov
jp
mov
xor
dec
mov
inc
pop
cwtl
sahf
test
adc
xchg
jo
outsl
in
mov
and
subb
adcl
ret
mov
xor
ret
inc
jge
sub
fwait
sbbl
mov
add
enter
insb
int
call
xchg
adc
pushf
or
sub
jmp
addb
adc
out
push
jnp
call
dec
shl
add
mov
push
clc
stc
lret
ret
inc
repnz
or
pop
pop
scas
arpl
or
cs
test
sbb
push
in
pop
mov
repz
cmpsb
inc
xchg
shrb
sub
shrl
out
in
fcoml
lods
push
or
ret
jae
subl
push
push
dec
mov
xchg
bound
cmpsl
jmp
mov
sub
mov
std
jmp
aaa
xchg
jnp
cmc
jb
test
xlat
jmp
cmp
into
mov
ljmp
lods
fucomip
and
or
jp
aaa
enter
adc
into
out
and
test
and
call
fs
and
fistl
push
sarb
mov
or
test
sub
in
lcall
lret
sub
cmp
pop
es
insl
jbe
fbld
push
jle
dec
jae
out
or
add
adc
push
dec
leave
addr16
stos
jle
pushf
test
or
jbe
psubw
jne
shrl
sbb
add
jo
jae
loop
mov
jno
mov
jmp
popf
push
stc
sahf
fcmovnbe
mov
sbb
push
push
or
inc
fs
in
arpl
shll
imul
sbb
aaa
dec
insl
or
fcmovnu
pop
cltd
testl
jo
dec
sub
pop
jl
xor
push
mov
mov
cwtl
add
jnp
movsl
xchg
mov
jno
dec
lret
push
pusha
into
sub
pop
clc
push
lods
or
or
es
mov
mov
jns
int
mov
in
lret
dec
out
rorl
mov
pop
mov
add
stos
insb
orb
sbb
out
pop
imul
add
xor
bound
out
fisubs
fcmovu
test
lcall
adc
fldl
adc
jae
test
test
nop
insl
jno
jg
push
push
xchg
push
stc
aaa
mov
pop
mov
mov
jmp
outsb
lods
sub
inc
mov
icebp
cs
push
insl
adc
jns
adc
pop
je
call
test
loopne
lcall
or
push
lret
xchg
or
adc
mov
jno
add
mov
std
rcrl
jmp
and
pop
stos
dec
adc
les
and
sahf
and
dec
mov
rcl
in
int3
enter
out
call
sbb
mov
shl
add
pop
jmp
aad
mov
mov
mov
jp
cmp
mov
dec
push
sub
xor
mov
xchg
cmp
or
or
add
mov
ja
pop
pop
mov
add
movsb
xchg
push
popf
jmp
popfw
add
call
das
in
xor
fidivs
jmp
dec
mov
fs
lods
or
insl
mov
lock
jnp
pop
fdivs
jae
andb
pop
jbe
rolb
dec
sub
sub
jns
ret
out
lret
fmuls
adc
loopne
dec
and
push
loop
pusha
mov
inc
bound
mov
pop
mov
popa
push
rorl
test
pop
jbe
push
add
mov
inc
arpl
push
scas
and
in
les
int
pushf
pop
jno
inc
test
data16
jb
test
dec
push
inc
stos
sub
mov
inc
scas
mov
ret
incl
xor
hlt
out
and
sbb
fdiv
xor
sbb
mov
scas
popf
or
lcall
iret
or
bound
clc
pop
jno
pop
dec
push
push
xchg
out
je
pop
sbb
push
clc
daa
jg
push
sbb
dec
ret
adc
cmp
xchg
xor
sub
pop
mov
push
inc
inc
pushf
fildl
mov
fisubrl
pop
or
sub
sti
dec
das
cmp
mov
mov
adc
fildl
and
dec
stos
inc
je
aam
mov
andb
or
cmp
inc
jg
cmp
ja
mov
mov
js
cmp
cmpsb
les
lret
cmp
xchg
lods
stc
fdivr
pop
jae
mov
mov
xchg
scas
push
cltd
ljmp
test
repnz
popf
add
popa
cmp
aam
cmp
pop
mov
mov
dec
mov
add
xchg
add
mov
push
jg
test
sbb
push
jmp
data16
mov
cmp
lock
pushf
cmc
scas
or
test
in
mov
push
loope
lds
sbb
mov
popf
xor
shrb
adc
pop
jle
inc
dec
fsts
pop
orb
repnz
jnp
xchg
inc
jl
fsub
cmp
lea
mov
inc
popa
push
cmc
cs
mov
gs
jo
aad
out
cmp
fwait
and
lods
adc
mov
loopne,pn
daa
mov
jnp
jb
addr16
and
out
iret
into
neg
lahf
mov
fcmovne
cmpsl
xchg
push
movsb
mov
xor
test
cmpsb
lahf
sbbl
sub
push
push
in
mov
dec
jge
inc
rorb
bound
adc
mov
addb
mov
sbb
rclb
das
jg
or
les
mov
mov
and
add
mov
and
outsb
xorb
addb
lcall
xor
push
dec
sbb
lahf
mov
aad
lret
mov
mov
lock
daa
rclb
arpl
cs
mov
sbb
js
push
ret
and
mov
jb
push
test
xchg
imull
fbstp
push
pop
lds
push
std
fsubrs
xor
cmp
jp
cmpsb
pop
jecxz
inc
sub
inc
xor
repz
sub
sarl
mov
ja
push
cwtl
aas
cltd
lock
out
ljmp
push
sbb
ret
in
ds
or
es
lcall
fiadds
push
ja
cmp
jg
stos
out
orb
jecxz
or
daa
cs
mov
mov
rclb
jo
dec
xchg
loop
push
inc
mov
ret
push
mov
hlt
add
xor
mov
dec
fcomip
and
sub
cli
iret
xor
cmp
scas
sbb
fldl
dec
imul
xchg
sub
pusha
jb
mov
popf
shlb
mov
mov
mov
push
rcr
mov
imul
adc
shll
dec
in
cli
loope
lahf
push
and
cmp
xorl
leave
loope
in
mov
inc
inc
adc
cmp
jnp
sub
mov
add
fisubrs
xor
sbb
and
ret
jecxz
adc
push
jae,pn
dec
in
inc
fnstenv
sub
cli
cmp
sbb
data16
add
push
shr
inc
xor
pop
popl
xchg
ret
push
add
into
or
pop
pop
add
andb
mov
or
les
stos
outsb
push
or
js
adc
aad
add
pop
mov
lods
add
lock
cmp
add
les
imul
hlt
push
out
pop
mov
out
and
and
jecxz
fsubrl
adc
push
mov
push
push
add
ljmp
cmp
clc
clc
push
add
sti
pusha
test
loope
inc
jno
clc
sbb
push
or
and
faddl
xor
xchg
fs
push
popa
sbb
movsl
cmpsb
lahf
push
inc
inc
pop
insb
and
movsb
or
mov
push
push
or
cmp
mov
jl
call
sub
pop
sbb
sbb
jecxz
lahf
pop
sub
fsts
pop
xlat
cmp
das
mov
inc
mov
sbb
test
xchg
push
cld
xchg
jmp
fisttps
ja
xchg
xor
xlat
xchg
adc
mov
cmp
mov
test
dec
sub
jo
fisttpll
lahf
jle
lods
mov
mov
sahf
pop
int
popf
jp
jle
cmpsl
jp
dec
fmuls
data16
out
cli
xor
outsb
aam
add
seta
jnp
jg
int
insb
icebp
inc
push
ljmp
aam
ret
ss
aam
icebp
lds
add
sbb
loope
test
fxch
repz
ret
adc
xlat
jp
rolb
mov
jo
or
insb
mov
inc
ret
lods
pusha
and
cmp
ret
outsl
push
push
cmp
mov
stc
cs
xchg
mov
ds
jecxz
adc
mov
cmp
in
clc
dec
icebp
pop
sub
hlt
cmp
rcrb
dec
mov
and
leave
cmp
add
fs
pop
mov
loop
out
mov
xchg
push
or
mov
jne
enter
cmp
mov
xchg
adc
jge
mov
call
das
cli
daa
sub
pusha
sti
filds
jecxz
bound
mov
pop
movsb
loope
ret
stc
pushf
push
cmc
ljmp
jnp
jae
jp
ljmp
dec
test
adc
add
in
cmc
or
pop
nop
das
cmp
add
js
out
cmp
inc
pop
cs
jp
inc
sbb
jmp
cmp
inc
mov
or
cmpb
push
jb
jo
movl
jo
decb
loopne
inc
mov
push
jmp
outsl
stos
bound
outsb
pop
call
loopne
test
xor
xchg
push
xorl
cmp
int
fstpl
and
sar
mov
mov
pushf
cmp
sub
or
sub
mov
lods
adc
xor
in
dec
adc
pop
jne
inc
pusha
or
loope
inc
push
jbe
or
inc
shll
push
test
loop
pop
or
xchg
mov
jp
and
jl
jns
test
or
and
inc
jl
out
icebp
and
jb
leave
in
jo
into
sub
or
add
bound
popf
xor
cmp
adcb
push
jne
mov
imul
sub
sbb
test
pop
mov
adc
clc
sub
cmp
adc
add
imul
mov
fs
xor
jg
dec
inc
or
mov
cmpsl
jne
cmp
ss
pushf
lods
jnp
lea
stos
mov
dec
rcrl
mov
bound
sbb
popf
fmulp
dec
cmpsb
lock
sti
stos
push
int3
movsb
in
pop
aaa
nop
cmc
dec
and
xor
outsl
push
mov
cmpsl
push
int3
push
mov
xchg
pop
cmp
inc
pop
cmp
imul
cmp
dec
cmc
pop
fwait
adc
jge
bound
not
xor
leave
test
inc
test
push
movsb
pusha
mov
scas
fisubrl
pop
mov
sub
int
xchg
mov
cltd
shr
inc
repz
test
rcll
pop
sbb
imul
xor
call
adc
mov
cs
loope
cli
add
adc
imul
push
repz
lock
pop
idivl
iret
and
cmp
aaa
add
mov
jl
bsf
stos
or
test
stos
mov
mov
inc
inc
inc
xor
xor
jmp
in
pop
ret
cmp
dec
pusha
daa
in
sub
and
hlt
sub
stc
inc
es
inc
ss
jle
adc
xchg
dec
and
adc
inc
jle
lret
jg
mov
xchg
jno
ret
cld
pushl
pop
mov
cmp
dec
int
push
jmp
jnp
mov
mov
fcomps
dec
xor
mov
pop
rcll
jl
and
push
cltd
inc
and
cltd
decl
push
xor
sbb
adc
lea
mov
fwait
ja
pop
mov
es
shrl
cvtps2pd
push
imul
cmp
shl
rorl
adc
in
lahf
loope
mov
adc
jl
div
ret
adc
je
rclb
loope
jo
movsl
jns
inc
inc
nop
shl
cmp
dec
mov
imul
jo
insl
pop
repnz
and
imul
cltd
jno
leave
mov
jmp
int3
popa
xchg
ljmp
lret
sbb
xor
sbbl
xchg
inc
cmpsl
mov
daa
not
pop
cmpsl
sub
aam
stos
mov
loope
div
sbb
popf
repz
mov
test
adc
add
jne
jmp
inc
xchg
jl
js
and
mov
add
js
sti
cvtps2pd
or
test
insb
jmp
lods
sub
adc
loopne
test
ds
insl
pop
pop
bound
push
lods
jle
cwtl
pop
in
push
movsb
jg
leave
sbbl
clc
dec
xchg
insb
sbb
or
stos
lahf
inc
push
pop
xor
test
jns
inc
jns
and
adc
int3
in
xlat
sbb
adc
iret
cmc
ljmp
mov
es
push
add
xor
outsl
adc
xor
ja
stc
inc
in
fldenv
inc
aad
test
fnstcw
dec
push
stos
inc
hlt
mov
and
mov
int3
cmp
cmp
push
stc
inc
pop
std
mov
xor
shrl
jecxz
cmp
mov
imul
xchg
loope
mov
cmp
mov
aaa
imul
mov
vcvtps2dq
movsb
pusha
xor
insl
push
mov
aas
cmp
xor
jo
xchg
cmp
scas
scas
jae
sub
fld
push
ret
xor
test
imul
icebp
mov
inc
inc
push
jno
xchg
decl
push
clc
hlt
and
add
inc
pop
inc
push
xor
addr16
jecxz
out
push
inc
mov
movsb
or
inc
addr16
jmp
aam
mov
dec
pop
xorb
xchg
push
inc
hlt
ret
sub
fldcw
out
mov
add
lods
popa
test
je
stos
fcompl
insb
enter
stos
xchg
pop
sub
jecxz
out
insb
mov
cmp
scas
xor
adc
jmp
mov
ja
mov
out
mov
psraw
int3
insl
or
adc
or
nop
lods
inc
push
pop
dec
sbb
cmp
sbb
enter
lcall
and
sub
xchg
sbb
pop
imul
jbe
pop
outsl
xchg
popa
out
outsb
pushf
lahf
imul
push
add
sub
repnz
cmp
jns
xor
lea
ffree
dec
lahf
inc
hlt
pop
push
mov
insb
movsl
dec
inc
and
in
dec
push
mov
mov
sahf
pop
mov
mov
xchg
fwait
pop
sub
xor
jae
scas
gs
mov
ds
add
cmp
into
and
dec
mov
cmp
jbe
add
jg
push
adc
fs
in
call
mov
add
jb
sbb
or
nop
jo
rorl
popf
pop
inc
jns
add
mov
cwtl
popa
movsl
add
insl
sub
push
cld
fiaddl
or
sbb
pop
mov
lods
pusha
pop
sti
push
fdivrs
jl
pop
mov
inc
data16
ja
add
adc
fmuls
mov
and
mov
or
out
test
push
push
add
int
repnz
mov
mov
pop
mov
cmp
stos
and
dec
stos
aam
dec
add
jno
adc
inc
jmp
andb
push
int
sbb
adc
addb
pop
out
sbb
mov
jl
movsb
sbb
shlb
cmp
inc
imul
clc
cmp
xchg
inc
faddl
test
cmp
mov
arpl
pop
add
adc
push
pop
xorl
or
scas
push
cvttps2pi
loopne
int3
cld
mov
cmp
ficompl
mov
in
dec
inc
mov
les
addr16
xchg
xchg
cmc
dec
push
cmp
sub
jno
mov
xchg
ror
or
xchg
sti
or
jns
std
xchg
stos
sahf
or
in
or
pushf
mov
repz
ljmp
gs
pop
xchg
ja
mov
cmp
cltd
cmp
inc
push
mov
mov
push
push
ds
mov
xchg
push
xor
mov
fidivl
dec
cmp
inc
xor
inc
fsubl
lret
cli
lods
ds
mov
daa
test
idivb
pop
cmp
lahf
rcr
cwtl
jmp
lods
testb
imul
dec
dec
cmp
inc
or
pop
movsb
es
cmpsb
push
lock
mov
add
leave
adc
pop
jmp
out
lock
movsb
sub
push
sahf
imul
in
insb
lods
arpl
sti
xchg
jnp
sbbb
add
and
test
xor
mov
mov
cmp
cmp
jb
decb
and
gs
pop
negb
pop
dec
scas
mov
int
mov
in
ficomps
jne
or
fsubrs
adc
xor
mov
fs
mov
xchg
icebp
lock
lock
adc
sbb
mov
jecxz
lock
aam
mov
mov
shrb
jmp
adc
ja
decl
pushf
add
pop
push
in
jg
dec
repnz
xor
cmc
pushf
ret
mov
sub
in
adc
inc
mov
cmp
lea
jmp
out
shll
stos
insl
sbb
push
xchg
add
mov
mov
xlat
je
mov
inc
mov
lods
stos
or
das
nop
inc
inc
jle
xchg
sbb
lcall
adc
dec
sarl
sarl
mov
add
lods
notrack
mov
mov
cmp
add
add
aaa
inc
pusha
inc
out
cltd
cs
test
sbb
out
ret
cs
out
in
xor
sarb
add
ud2
mov
pop
hlt
xchg
cld
lret
mov
testl
movsl
imul
popf
sbb
cwtl
add
jmp
add
fcom
xor
sbb
pop
movsl
sub
inc
or
cs
fisubs
or
inc
mov
sahf
nop
or
mov
imul
mov
cmpsl
dec
sbb
pop
and
or
pop
mov
rcl
js
xchg
repnz
call
xor
cmp
cmp
xor
push
lret
mov
and
arpl
leave
jle
push
stos
inc
inc
sub
mov
mov
movsb
lea
and
adc
into
fistps
jbe
xchg
ljmp
pusha
mulb
mov
call
jbe
rclb
sub
dec
xchg
cld
push
push
cmpsb
dec
add
cltd
lcall
loope
popf
stos
rclb
shll
into
jl
push
push
cld
fnstenv
in
mov
rcl
cltd
cwtl
or
mov
mov
mov
cmpsb
mov
aaa
out
dec
pop
movsb
add
sbb
clc
and
rolb
sbb
jl
sbbl
mov
mov
movsl
lea
xlat
imul
push
mov
xchg
xchg
sub
mov
stc
xchg
adc
sub
inc
lea
int3
mov
out
cmp
cs
dec
cmpsl
mov
mov
std
out
lods
mov
stos
stc
xchg
arpl
sbb
jbe
xor
xor
outsl
mov
daa
into
cmpsl
movsb
insl
xchg
sti
shlb
sub
sbbl
dec
shlb
sub
push
in
lock
repnz
add
adc
mov
movsl
fistps
or
jmp
mov
iret
out
test
mov
sub
push
push
xchg
leave
xor
test
int
int
sub
enter
mov
pop
negb
in
stc
jecxz
in
rcrb
lcall
sbb
xchg
sub
pop
xchg
sbb
or
mov
leave
shl
test
aam
orl
mov
addr16
mov
pop
push
adc
cmp
int
sti
sub
adc
xchg
scas
push
pusha
orb
xchg
sti
jg
pop
fiadds
jle
scas
dec
mov
cltd
xchg
cli
fsubs
sbbl
adc
test
xor
cmp
outsb
out
push
dec
adc
pop
xor
push
arpl
popa
sar
xchg
ds
push
pushf
sar
pop
insb
mov
add
sub
sub
sub
fldenv
std
mov
jle
cmp
sbb
inc
je
dec
cltd
test
aas
ret
insl
jae
sbb
dec
lahf
mull
shll
sub
test
push
out
push
adc
dec
jecxz
push
pop
insb
push
mov
dec
xchg
sub
stc
and
int
mov
sub
push
test
mov
dec
adcl
sub
aas
test
and
bound
fsubs
cld
leave
insl
cmpsb
cmpsl
sbb
pop
pusha
xchg
add
decb
push
add
stc
lcall
adc
inc
cmc
test
shlb
inc
cli
fisubrl
mov
jp
mov
add
shlb
sbb
lods
lds
push
test
lods
mov
dec
jae
test
orb
sarl
jle
and
xchg
adc
sahf
gs
push
or
lret
jl
pop
add
das
rolb
xchg
xor
push
ds
mov
stos
clc
adc
shlb
inc
jae
mov
stos
inc
mov
iret
mov
sbb
popa
jl
out
jns
mov
insl
cmpsl
cmp
xor
stos
hlt
ret
std
ret
aaa
push
ss
loop
std
mov
add
jo
sub
inc
ljmp
mov
outsb
push
jmp
scas
adc
out
popf
lds
int3
cmp
cltd
repz
imul
scas
flds
ljmp
pop
cmp
jo
insl
lock
stos
or
fmuls
xchg
in
outsb
xor
push
int
inc
fadd
mov
mov
pop
sub
jne
das
les
enter
addr16
and
pop
movl
adc
adc
dec
jle
jo
mov
pop
xor
dec
or
fadds
xor
inc
jbe,pn
inc
mov
sub
xor
fldln2
test
out
xor
jecxz
pop
iret
cmc
inc
adc
iret
and
or
mov
pop
pop
sbb
ljmp
push
push
adc
adc
in
or
clc
mov
dec
cmp
jmp
stos
inc
test
pop
in
jmp
xlat
xor
into
ss
mov
pop
jg
cmp
loope
add
test
mov
int
daa
pop
in
movl
and
add
cmc
stos
fists
xchg
sub
scas
lock
xor
pop
rclb
mov
jnp
or
adc
and
dec
fdivl
mov
cmpb
pushf
mov
jmp
dec
jne
jp
shll
sbb
mov
test
mov
sbb
adc
pop
dec
cli
cmp
xor
aam
leave
mov
sbb
movsb
negb
mov
jmp
clc
dec
adc
sub
inc
hlt
mov
movl
repz
or
loope
cmp
lods
push
repz
cld
adcb
inc
add
push
sub
push
rorl
ret
mov
jns
sub
pop
je
add
mov
out
test
rcrb
cmpsb
jnp
arpl
into
push
ret
xchg
dec
cmp
adc
pop
jge
into
add
jmp
bts
push
and
add
pop
cmpsl
repnz
test
ss
hlt
pop
jbe
mov
scas
inc
sbb
je
cmpsl
fs
inc
js
mov
mov
jbe
cld
call
rorl
add
shll
movsl
mov
mov
push
xor
mov
out
pushf
insl
iret
fsub
je
cmp
cmpsb
adc
ss
adc
and
lock
jno
mov
or
add
adc
sbb
repz
xchg
pop
push
cltd
mov
adcl
cmp
xchg
sbb
add
test
mov
adc
mov
cmpl
xchg
shl
or
push
dec
push
mov
and
sbb
inc
leave
mov
pop
decb
nop
cmpsl
mov
pop
rolb
fldl
and
dec
jbe
adcl
mov
aad
cli
xchg
pop
into
cmp
xchg
pop
roll
xchg
xor
xchg
shr
jg
dec
data16
mov
out
xchg
scas
pop
iret
aas
xchg
notb
sub
lods
ja
mov
hlt
in
loope
repnz
in
mov
xchg
push
test
cmp
lret
mov
imul
lcall
jg
xchg
sbb
jns
cmc
or
xchg
fidivl
sbb
mov
lods
into
jg
mov
dec
out
gs
jb
stos
push
test
inc
inc
orl
jo
cmp
faddl
aaa
or
rcr
xor
add
and
xchg
inc
iret
mov
or
test
sbb
cli
mov
push
sahf
jg
pop
add
pop
testl
jnp
add
lcall
dec
jmp
jmp
andb
movsl
out
mov
sahf
notl
pusha
out
js
dec
inc
xchg
daa
xchg
fstps
mov
cmpsb
mov
xchg
cmp
dec
insb
das
jns
sub
xchg
leave
mov
cltd
sbb
ss
jnp
decb
popa
hlt
xchg
das
inc
sarb
sbb
in
pop
xor
int
lret
popf
jmp
bound
out
sbb
mov
fisttps
lret
dec
pop
cmp
out
or
mull
divb
cmc
adcb
dec
nop
adc
fiaddl
add
push
out
cli
dec
shrb
lcall
adc
fldcw
lea
js
addl
inc
mov
jmp
imul
arpl
nop
xlat
adcb
int3
loope
scas
rcrb
cmp
mov
out
lods
inc
inc
cs
and
mov
xor
ds
sbb
pushw
lcall
pop
inc
lds
fdivp
and
jbe
pop
jb
mov
mov
mov
out
mov
mov
cld
pop
rep
mov
xchg
mov
rolb
sbb
cmp
adc
and
adc
push
das
cltd
notl
lods
lock
xor
or
testb
cmp
xlat
push
lret
nop
fisubs
cmp
ljmp
outsl
inc
mov
cmc
es
imul
jecxz
lock
iret
cwtl
mov
int
test
lds
cs
jae
loopne
adc
pop
fsub
jle
test
out
and
pop
xchg
stos
fisttpll
pop
dec
icebp
xchg
add
jb
jl
jb
push
nop
pop
jne
cld
popa
cmp
in
push
test
outsl
subl
ret
mov
shl
lcall
ja
out
cmp
ja
dec
mov
cmpsb
rolb
push
movsb
push
pop
iret
and
pop
cmpb
push
jmp
in
sbb
outsl
out
mov
mov
cmpsl
pop
mov
inc
and
lods
lret
and
pop
xor
cwtl
mov
pop
hlt
push
ds
fildl
add
rcrl
cli
pop
daa
data16
mov
or
call
xchg
mov
insb
ds
jge
inc
push
sarl
dec
popa
cmp
lret
loope
dec
xchg
push
inc
dec
cwtl
add
push
push
fidivrs
mov
mov
leave
sti
mov
jecxz
ss
jg
dec
mov
cld
scas
adc
dec
or
lock
cmp
cmp
stos
mov
mov
inc
stos
jmp
call
add
jl
or
icebp
xchg
stos
dec
and
mov
je
movsb
push
push
outsl
add
push
lods
sub
inc
leave
in
call
jns
fiadds
in
xor
cmp
arpl
cmpsl
out
in
mov
gs
dec
xchg
fxam
mov
shl
add
clc
outsl
mov
inc
inc
mov
xchg
cmpsl
cmpsb
aaa
add
iret
stc
loopne
add
push
or
xor
add
loop
sahf
or
in
xchg
cwtl
out
je
xchg
lock
add
jg
adc
dec
cmp
mov
inc
sti
dec
cltd
insl
push
mov
add
rcr
push
xor
sub
mov
popa
dec
scas
lods
das
sub
std
xorb
sbb
or
adc
mov
mov
cli
adc
jg
pop
sbb
pop
lds
js
fidivrl
mov
mov
push
xchg
cs
xchg
xor
push
adc
and
aas
jp
mov
add
jnp
popf
mov
test
and
fcoms
jl
jbe
push
ret
ret
pop
or
cmp
pop
inc
into
scas
adc
xorl
in
dec
es
movsl
or
mov
aam
rcll
lods
inc
mov
pop
push
and
cli
inc
lahf
adc
push
test
int
mov
cmp
jo
push
dec
in
fwait
sahf
cmp
xor
push
xchg
ja
in
lods
mov
dec
bound
and
xchg
scas
lea
push
les
mov
cmpsl
push
push
enter
cmp
mov
xor
mov
mov
pop
xchg
mov
ret
icebp
rolb
pusha
xchg
pop
std
xor
daa
or
and
xchg
addr16
stos
and
mov
je
cmp
ja
psubusw
mov
pop
or
rorl
divb
notb
mov
lret
pop
mov
loop
dec
xorb
jl
ss
lock
jae
loop
out
loope
ds
xchg
push
cmp
pop
or
or
mov
mov
es
pop
rorb
shrl
push
xchg
sbbb
cwtl
sbb
pop
xchg
mov
push
les
and
sbb
pop
pop
fldl
imull
adc
mov
mov
push
icebp
or
lds
lea
fisttps
mov
ret
dec
shrb
insb
dec
pushf
xor
jnp
js
lods
popf
je
inc
rorl
sarb
xchg
mov
xchg
lock
and
loope
int3
inc
mov
ss
adc
lock
xchg
iret
clc
loop
int3
xchg
addr16
mov
dec
push
mov
out
push
cmp
mov
icebp
out
das
sub
push
js
fisubrl
jg
cld
adc
ss
xchg
xchg
mov
adc
mov
int3
pusha
adc
arpl
mov
xchg
insb
mov
pop
jno
cmpsl
pop
pop
push
adc
fistps
sub
in
xchg
and
jg
pop
lods
rcll
iret
pop
dec
stc
je
jbe
sbb
std
mov
std
lods
push
push
xchg
mov
mov
inc
jnp
and
inc
and
mov
dec
je
inc
leave
icebp
cmpl
cltd
jp
insl
pop
je
cs
mov
jno
sub
std
or
fcmovbe
insl
test
out
xchg
xorb
scas
push
jge
mov
notb
shl
out
fstpt
ja
pop
xchg
insb
sbb
inc
xor
jns
repz
mov
cmp
out
xor
mov
adc
adc
stc
hlt
das
negb
push
pop
pusha
rorb
mov
pop
pop
jae
sub
imul
cmp
loopne
sar
incl
push
dec
repnz
dec
pushf
js
arpl
sub
sahf
sub
imul
or
int3
mov
int3
ss
xchg
inc
push
les
and
idivl
pmaddwd
out
cwtl
or
jbe
adc
addr16
cmp
loop
adc
xlat
fidivrs
into
inc
call
inc
stc
cltd
pop
pop
pop
or
adc
push
xlat
dec
jl
mov
scas
fsubrl
push
and
jp
sbb
divb
xchg
add
gs
cld
push
into
sti
cmp
mov
dec
popa
into
clc
lds
cmp
sbb
push
test
fcompl
ret
xor
jb
scas
dec
cmp
sub
xchg
add
rcrb
cmc
sahf
pushf
mov
jne
fmuls
in
lcall
cli
daa
sub
sbb
push
sti
movsb
sahf
stc
cmpsb
not
pop
xlat
daa
pop
cld
mull
sub
lds
lcall
test
push
inc
cmp
push
adc
bound
shlb
mov
fwait
xchg
inc
and
adc
add
add
cli
inc
shrl
adc
stos
mov
iret
gs
push
les
hlt
dec
adc
or
jae
dec
jg
sbb
sbb
cltd
bound
stos
inc
orb
pop
je
out
flds
jo
xor
outsl
lods
jae
dec
mov
pop
in
push
sub
cmp
sti
cmp
stos
enter
lcall
cmc
mov
stos
fidivrs
push
mov
arpl
pop
lods
xor
jne
sub
push
dec
ja
xor
cmp
jo
loopne
dec
dec
or
mov
mov
inc
sub
adc
and
loope
mov
xchg
pusha
dec
fucomi
das
or
testl
adc
push
jns
sbb
cpuid
iret
or
mov
sbb
xor
imul
ret
dec
shl
bound
adc
pop
inc
rolb
adcb
enter
and
add
mov
out
xor
adc
mov
inc
dec
testb
popa
outsl
mov
add
int
out
push
xchg
fwait
xorb
repz
add
int3
push
lods
mov
mov
imulb
or
loopne
sti
mov
fwait
sahf
or
jl
cli
inc
cmc
aad
pusha
pop
add
bound
out
lret
sbb
inc
pop
cmp
rcrb
std
pop
and
adc
int
sub
mov
pop
dec
lods
movsl
jnp
jns
jns
xchg
sahf
xlat
mov
push
or
fbstp
cs
sub
cmp
dec
clc
decb
jns
and
pop
sub
test
and
sbb
sub
fcmovb
out
push
pop
inc
cmp
gs
lret
push
in
outsl
or
and
xlat
cmpsl
dec
pushf
push
outsl
mov
fistpl
push
mov
xchg
push
iret
lea
mov
movsb
xor
pop
fcoms
movsl
lods
or
inc
dec
jmp
call
jns
scas
mov
iret
insb
jnp
movsb
dec
push
cwtl
sbb
insl
ret
mov
flds
test
enter
popa
data16
int3
cmp
call
std
mov
mov
pop
jecxz
sarb
sub
aas
sbb
dec
and
pop
xor
mov
xchg
gs
repnz
cmp
cmp
and
jle
shrl
movsb
add
les
cwtl
jb
jae
int
inc
or
xor
les
pop
ljmp
gs
pop
pop
ds
in
aad
jb
shlb
imul
icebp
lock
stos
mov
into
pusha
ficoms
push
jne
jle
sbb
push
jbe
in
fidivl
push
mov
fwait
sbb
repz
pop
dec
cmp
push
cmp
sub
stos
inc
rorl
jmp
lret
sbb
mov
sbb
or
das
jge
arpl
sub
inc
sbb
adc
loopne
xchg
mov
lods
fwait
jne
fcmovnu
mov
fwait
push
sahf
or
mov
push
sub
adc
sar
cmp
ljmp
in
adc
std
pop
mov
pop
push
cmc
dec
or
jb
outsb
popa
add
jo
dec
sbbl
sub
fdivp
xchg
mov
lret
push
push
mov
movl
cld
scas
insb
int3
push
cmp
aaa
popl
dec
inc
push
inc
cmp
pop
jge
jp
or
mov
js
jg
inc
dec
insb
pop
loopne
roll
xor
dec
push
andl
adc
stos
xchg
xchg
dec
mov
clc
es
fucom
testb
ljmp
add
dec
mov
xor
inc
jb
dec
and
sub
xorb
add
int3
test
out
test
ss
dec
ret
lahf
test
jae
subb
or
aaa
mov
lock
or
in
xor
or
inc
adc
mov
dec
addr16
add
mov
cwtl
sbb
push
add
dec
lret
iret
mov
push
mov
addr16
sarb
repnz
jo
mov
shrl
fisubl
das
xor
roll
xchg
pop
addr16
movsb
int
pop
xor
jmp
scas
mov
sbb
cwtl
lea
into
xor
or
popl
rcll
cmpl
dec
pop
adc
xchg
fcomps
imul
and
push
ds
mov
mov
gs
inc
xchg
xor
push
jnp
xchg
and
add
outsb
adc
xor
mov
push
mov
outsb
test
or
std
std
mov
pop
stos
inc
pop
mov
mov
push
jge
push
repz
mov
cmp
mov
lods
iret
jo
sbb
dec
mov
scas
shll
xor
add
jecxz
sub
pop
in
into
or
lcall
dec
adc
cmp
jnp
and
aaa
xor
dec
mov
ljmp
push
jecxz
out
cmp
mov
mov
test
mov
pop
or
loopne
roll
jecxz
movsb
ja
aaa
sbb
push
mov
cmp
jbe
jge
inc
xchg
xchg
fcompl
dec
or
xchg
in
testl
fstps
sbb
mov
mov
lret
pop
sbb
or
loopne
push
xchg
imul
mov
mov
add
jae
shll
clc
cmc
nop
xchg
cmp
enter
jae
xor
repz
pop
je
adc
cmp
inc
or
lret
jle
add
push
push
adc
ja
sub
loop
outsl
iret
inc
add
dec
dec
mov
pop
les
mov
push
jns
mov
imul
testb
sbb
xor
imul
pop
movsb
lock
lods
lods
js
jmp
pop
inc
lock
jbe
jl
sbb
mov
pop
or
xchg
and
inc
out
in
ss
popa
testl
ficoml
fiaddl
decl
and
pop
mov
mov
or
sahf
into
mov
jb
into
movsb
icebp
inc
and
je
cld
jae
stc
adc
mov
fucompp
lahf
jge
add
jle
sbbb
rolb
cmp
aas
mov
lahf
jne
mov
pusha
mov
popa
into
mov
push
sarl
loopne
pushf
xlat
push
loop
add
ret
lret
inc
lret
es
aaa
cs
aam
mov
pop
sbb
add
jbe
jmp
out
pop
cmp
testl
jb
cmp
jbe
inc
shlb
into
xchg
pop
push
test
sbb
mov
push
or
fwait
stc
mov
leave
fisubrs
pop
inc
jae
cmp
mov
mov
fildl
mov
pop
enter
sub
lds
aad
lock
out
out
icebp
pusha
adc
pop
xchg
xlat
dec
ud0
hlt
js
push
aad
adc
sub
insl
jmp
mov
lret
push
jge
repz
aad
cmpsb
push
sub
mov
xlat
repz
sbb
lahf
jge
shlb
lret
and
bound
lcall
cmpsl
or
hlt
in
jmp
push
mov
popa
add
mov
jbe
aas
cmp
aaa
sahf
add
call
imull
xorb
xchg
mov
lea
push
inc
test
arpl
andb
jle
fs
mov
icebp
cmp
and
xchg
xor
sub
push
inc
mov
cmp
mov
sbb
inc
subb
pop
mul
mov
inc
dec
inc
xor
divl
out
out
pusha
test
sarl
and
in
fsubrl
mov
dec
hlt
adc
jns
lret
insl
sbb
out
mov
sbb
arpl
mov
es
jno
bound
rorb
xchg
and
outsl
inc
push
popa
push
lcall
pusha
mov
fisubl
jecxz
shl
mov
pop
or
add
mov
hlt
dec
mov
loop
dec
pop
cmp
cmpsl
mov
leave
sub
ret
jne
pop
setnp
cmp
inc
add
int
clc
push
mov
dec
out
fs
aad
ja
out
adc
mov
in
test
loop
add
adc
pop
fwait
pop
lret
push
mov
cmp
jle
in
jo
lahf
sbb
leave
js
sbb
cmp
mov
mov
xchg
loopne
int
push
lods
and
pop
cmp
or
xor
scas
push
adc
inc
js
xchg
lods
mov
mull
lock
push
lock
inc
cli
inc
mov
aas
mov
rcrl
push
rorl
mov
cmp
push
ss
test
ds
inc
cltd
xchg
push
in
push
push
shrl
push
fistpl
adc
mov
insb
pop
push
imul
pop
das
ds
xchg
pop
inc
loop
mov
mov
jge
inc
cs
cmc
ret
cmc
pop
rcrb
xor
and
xor
das
pop
out
fwait
sub
sub
jmp
stos
loop
jle
jmp
sti
xor
jbe
lods
idivl
xchg
jp
jne
fwait
or
or
push
jl
dec
std
je
xlat
cmp
adc
insl
pusha
xchg
test
lods
mov
xor
nop
adc
clc
mov
in
stos
fidivrl
dec
es
fldt
out
int3
mov
and
scas
outsb
pmaxub
jmp
into
xor
pop
jmp
rep
pop
pop
cmc
fnstcw
inc
mov
sbb
iret
or
repnz
fiadds
xor
popaw
push
mov
cli
cmpsl
int3
xor
pushl
push
lods
lea
test
ret
cmp
enter
sti
sbb
jnp
pushf
mov
mov
sbb
sub
mov
push
rol
xor
cmp
sbb
xor
push
test
hlt
inc
xor
das
inc
mov
push
cs
imul
jmp
cwtl
xor
dec
sbb
xlat
xor
aas
jmp
add
jb
call
rcrl
dec
cwtl
xor
call
mov
jns
mov
add
or
xchg
inc
add
mov
adc
push
lcall
push
xchg
call
inc
ss
iret
decb
jno
hlt
add
xor
inc
and
jno
pop
and
sbb
in
push
aaa
push
movsb
pushf
adc
and
cwtl
mov
fdivr
cmp
dec
lock
std
loopne
pop
dec
repz
mov
fwait
xchg
xor
iret
mov
ljmp
push
fsubrl
mov
pop
pop
add
xor
lock
stos
xlat
adc
stos
xchg
leave
fidivs
or
push
and
test
ret
pop
sub
add
fsts
fadds
add
add
lea
jns
fsubl
push
lods
stos
sbb
jb
dec
stos
dec
mov
dec
xchg
xchg
push
sub
lds
imul
loopne
jp
adc
ficomps
xchg
mov
scas
iret
push
jb
enter
das
ds
divl
testb
jge
cmpsl
xor
sti
adc
fiaddl
pop
pop
inc
ss
add
fisttps
dec
ljmp
nop
mov
loop
cmpsl
cmp
lcall
push
mov
mov
out
pop
lahf
dec
push
inc
and
sbb
fcoms
jecxz
add
addb
dec
cmp
sbb
dec
idivb
push
mov
mov
jnp
orb
cld
in
int
mov
pop
xchg
add
pop
push
sbb
orl
push
scas
test
fadd
sti
call
mov
jge
jno
rcrb
mov
jl
mov
cmpb
mov
ja
mov
lcall
xchg
cwtl
nop
mov
xor
fmul
lret
hlt
xor
pop
add
push
mov
jl
sub
pop
cld
dec
dec
mov
mov
les
push
clc
pushf
jne
out
push
lds
es
mov
inc
rclb
enter
jb
in
add
sbb
fcmove
push
aaa
xchg
shlb
in
push
sub
mov
adc
mov
out
mov
mov
jnp
pop
ret
popf
dec
aad
inc
mov
repnz
xchg
cmpl
mov
sbb
mov
inc
rol
popf
jne
inc
das
xor
bound
jne
push
sub
negl
stc
nop
or
xchg
repnz
lods
push
aas
outsl
je
pop
push
test
jg
inc
push
push
test
add
mov
inc
sar
cmp
cmp
inc
ljmp
subb
mov
mov
xor
outsl
pop
mov
adcb
std
sbb
fidivl
push
nop
rorl
push
inc
xor
inc
inc
rcrl
aaa
xor
mov
popf
adc
jecxz
xor
push
in
loop
xchg
loope
inc
fadd
aaa
mov
ret
and
jg
mov
mov
add
mov
gs
mov
ja
stc
ffree
or
jl
lret
in
or
cmp
fcoml
jmp
push
cli
fmul
out
cs
sbb
insl
jnp
rorb
mov
mov
push
mov
arpl
mov
scas
pop
jmp
xchg
jl
sub
call
mov
inc
push
call
xlat
in
fdivrl
out
or
jle
inc
cmp
cmpsl
cli
adc
pop
adc
inc
int3
in
into
jecxz
das
cmpsb
fwait
mov
dec
int3
lods
mov
xchg
adc
xchg
ss
cltd
ret
addr16
sub
fstpt
lods
das
stc
push
sub
insb
leave
jnp
cmpsb
inc
testb
outsl
push
fldl
inc
xlat
sti
or
in
subl
cmp
sbb
out
pop
add
shrl
xchg
lcall
pop
repz
fnsave
sbb
out
andl
xlat
out
fdivl
aam
jmp
fidivrs
push
cmp
iret
or
and
clc
push
cmp
pop
jmp
xchg
ljmp
xor
sbb
sbb
mov
mov
add
adc
roll
push
pop
testb
and
push
sahf
gs
push
sub
pop
test
cmp
aad
xor
adc
push
jecxz
repnz
mov
idivl
sub
fstp
xor
mov
push
lsl
dec
xchg
ds
mov
inc
inc
cmp
movsl
stos
stos
and
pop
out
arpl
loope
cmp
or
movsb
lock
lcall
fucomp
lahf
shlb
subb
shlb
push
gs
mov
into
repz
push
sti
jae
xchg
push
push
adc
sub
negb
pushf
jge
out
cmp
inc
mov
pop
dec
movsb
out
ret
bound
and
add
push
xchg
fwait
cli
dec
test
push
mov
inc
popf
lret
inc
fs
ret
add
fldt
jmp
shlb
jae
cmp
cs
xor
ret
or
push
loope
mov
pop
les
out
cli
loopne
jb
and
mov
cltd
sub
or
add
inc
daa
add
int3
cltd
xchg
xchg
push
rolb
stc
jae
and
ret
lods
sub
int3
sbb
call
mov
pop
ljmp
out
js
and
loop
or
pop
jmp
mov
xor
cmpsb
lock
pop
lods
jae
add
icebp
xchg
adc
repz
addr16
pop
pop
mov
jne
lret
popf
ljmp
jmp
inc
adc
mov
cltd
mov
loopne
xor
pop
bound
pop
imul
stc
adc
iret
push
mulb
mov
cmc
imul
dec
incl
lea
cmp
jle
pop
enter
xchg
pop
in
mov
pop
jle
cmp
inc
popf
lcall
cmpsb
in
in
cmc
sbb
mov
add
mov
pop
repz
lock
xchg
imul
pop
lcall
addr16
mov
cli
aaa
jo
out
jl
mov
push
in
shl
xor
pop
hlt
mov
dec
cs
cwtl
sub
mov
sbb
xor
xor
cmp
subb
adc
xchg
cmp
scas
jg
xchg
pushf
pushf
mov
mov
ret
scas
inc
mov
inc
sar
clc
cli
add
pusha
es
int3
jecxz
fwait
push
inc
addb
jo
and
rcr
cmp
ret
aad
cs
mov
dec
dec
idivl
push
pusha
inc
dec
addb
das
stc
jns
int
in
push
scas
frstor
mov
xorl
xor
xchg
jae
jne
jnp
popa
or
imul
test
mov
inc
pop
nop
add
sub
es
cli
push
lods
int
mov
sti
or
jb
mov
add
xor
jle
jecxz
negb
lcall
adc
out
roll
push
xchg
aas
push
je
dec
and
lahf
imul
mov
push
shlb
xchg
dec
popf
pop
loop
dec
push
dec
sub
jbe
inc
orb
nop
shll
sub
das
pop
mov
push
fs
or
rorl
in
mov
mov
loop
cwtl
je
out
mov
ret
mov
jne
addl
out
and
pop
sarl
test
enter
add
lahf
jns
les
push
daa
movsb
jae
in
ss
sahf
xchg
jnp
aas
mov
lds
inc
ret
jb
lods
adc
inc
movsb
xchg
dec
jle
frstor
jns
test
sbb
jle
out
push
adc
mov
cmp
test
jo
xor
mov
ss
inc
or
inc
lods
lcall
and
loopne
cmp
sarb
out
mov
out
inc
mov
jno
sub
inc
les
dec
xor
sbb
xorb
mov
pop
or
cmp
add
push
jmp
and
cs
mov
mov
inc
xlat
push
jle
cmc
js
imul
jecxz
dec
mov
shr
repz
loope
inc
cmp
jne
inc
mov
add
jno
adcl
mov
aad
jecxz
out
inc
fisttpl
daa
xchg
mov
ret
cli
or
pop
stos
lock
lahf
add
hlt
shrl
aam
fstl
push
outsl
mov
mov
cltd
jbe,pt
test
jnp
repnz
test
mov
popa
jmp
inc
aad
xor
cmp
jmp
dec
addl
pop
fdivs
nop
pushf
mov
xor
lds
push
leave
testl
sbb
add
or
cmp
lods
filds
int3
dec
mov
pop
pop
sub
sub
sub
cmp
movsl
or
adc
loopne
cmp
pusha
mov
inc
or
daa
cli
call
cmp
pop
add
mov
fs
shrb
sbb
loop
push
pop
mov
adc
inc
mov
outsl
daa
mov
xchg
pop
add
sub
ret
shll
push
xchg
jecxz
mov
xor
arpl
rcrl
cli
aas
mov
sbb
mov
adc
dec
sbb
push
gs
mov
jle
mov
jmp
test
cmp
push
shl
stos
cmp
insl
les
fcmove
enter
imul
inc
mov
outsl
in
inc
inc
push
sub
pop
data16
sub
or
jmp
stos
jae
shlb
dec
lret
arpl
pushl
sbb
adc
mov
mov
sbb
pop
mov
lret
push
xor
jg
sbb
iret
dec
mov
xor
rcl
jp
pushf
data16
out
repz
push
lret
mov
add
les
loope
fs
mov
xchg
mov
adc
scas
push
xchg
mov
cmp
inc
mov
out
adcl
pop
outsb
push
sub
pop
cs
jae
out
add
and
push
jl
addr16
test
stc
pop
sarl
dec
in
and
icebp
addr16
lds
loop
jo
push
mov
std
mov
sub
fprem
popf
xor
cli
rcrl
xor
fmuls
bound
adc
arpl
testb
fldl
outsl
cmp
sub
aas
stc
adc
push
sbb
mov
clc
adc
andl
in
sbb
xor
out
int3
and
in
daa
adc
dec
push
xor
shl
sub
inc
cld
repz
sbb
shlb
aas
cmp
dec
jo
sub
jb
mov
test
ficompl
pop
addl
cli
push
jle
and
mov
shrl
pop
iret
mov
daa
and
jae
xor
rol
push
adc
mov
mov
in
mov
or
pop
mov
int3
movsl
xor
aas
daa
out
dec
and
cmp
sub
in
pop
cmc
mov
out
fwait
stos
inc
sahf
or
mov
mov
inc
das
pop
rol
cmp
ss
jl
scas
jl
dec
stos
iret
mov
andb
mov
movsb
xor
sub
lods
imul
stc
add
mov
xchg
rorl
or
inc
xchg
iret
enter
lahf
dec
rcll
dec
popf
lock
jl
sti
test
inc
insb
or
aam
push
jl
lret
mov
adc
inc
add
pop
adc
mov
lds
les
jne
jb
data16
in
mov
int3
into
lea
cmpsb
gs
js
xor
push
mov
xchg
mov
cltd
adc
add
sub
sbb
and
sbb
icebp
mov
jb
sbb
mov
push
loop
iret
lock
sarl
cmp
lods
push
push
mov
push
mov
cmpsl
mov
ss
out
push
adcb
je
dec
out
xor
daa
push
adc
out
add
sti
add
pop
mov
xchg
pop
jo
stc
xchg
lock
jb
lock
or
pop
xor
inc
sub
notb
dec
aam
push
insb
pusha
sbb
popf
fnsave
leave
push
gs
mov
push
cli
sbb
rorl
add
and
adc
push
or
dec
ja
mov
clc
pushf
adc
fcoms
push
adc
sub
cmp
pop
cmp
inc
mov
jge
out
sahf
fisttpll
adc
add
movsb
add
xchg
xor
das
mov
enter
cmp
and
lds
cmpl
dec
mov
or
mov
lods
inc
ljmp
or
cmc
in
outsb
or
daa
int
arpl
and
jge
fnstsw
xchg
push
sub
pushf
inc
ss
inc
aaa
dec
mov
icebp
xor
inc
push
jnp
outsb
scas
jecxz
jae
daa
sub
movsb
pushl
addl
mov
inc
js
test
jo
out
mov
sub
repz
cmp
out
cmpsb
mov
movsb
filds
iret
push
in
xchg
pop
psllq
jp
cmp
addr16
add
outsb
das
outsb
mov
xor
mov
rcll
lds
hlt
adc
mov
push
roll
add
cli
lods
scas
xchg
aam
pop
fs
push
xor
push
dec
daa
or
pushf
rcpps
test
and
or
scas
js
and
and
pushf
mov
add
imul
call
and
jbe
xor
inc
arpl
fxam
repnz
xor
mov
xchg
push
lret
pop
sti
in
mov
pusha
adc
inc
xor
ret
xchg
sub
xor
iret
lea
jnp
mov
pushl
out
xchg
adc
xchg
std
repz
cmp
int3
pop
jg
mov
xor
mov
sub
lods
push
iret
mov
mov
add
testl
rcrl
loopne
pop
insl
sbb
fnstcw
and
jo
or
rol
cld
insb
pop
dec
jno
aaa
jae
pushl
roll
xor
jae
push
sti
iret
es
nop
in
or
mov
push
xor
pop
pop
addr16
shlb
rcr
popa
js
lods
mov
mov
stos
aas
and
popf
adc
mov
gs
std
pop
pop
imul
lret
mov
mov
dec
pop
outsl
dec
or
outsl
add
fldt
or
or
loopne
dec
arpl
sbb
js
push
test
imul
stos
loope
and
outsb
mov
pusha
mov
stos
sub
test
dec
add
xor
cmpsb
mov
adc
mov
loopne
loopne
cmp
mov
add
mov
repz
or
iret
subl
mov
sbbl
xor
data16
dec
mov
dec
nop
mov
pop
cmpsb
sub
cltd
xchg
aam
ljmp
mov
cmpsb
sub
daa
aam
xlat
pop
jmp
pop
push
sbb
xor
jo
add
push
js
popa
mov
das
stos
cmpsl
xchg
lret
std
test
inc
pop
sbb
fisttps
pop
push
lods
cmp
sub
scas
xchg
and
push
repnz
cmp
rorb
cmp
in
push
lock
xchg
jo
loope
ds
xor
popa
mov
aam
dec
pushl
pop
cmpsb
jae
gs
add
movsb
cltd
push
in
cmp
lcall
fistps
outsl
sbb
dec
movsb
mov
xchg
push
lea
insb
jg
ja
pop
adc
sub
rclb
insb
fdivrp
jns
push
mov
pop
js
pop
jp
cmp
mov
jmp
lcall
rclb
jge
pop
std
ss
lock
sti
insl
aas
repz
mov
and
lahf
and
mov
loope
cmp
and
jno
int3
dec
test
cli
jmp
push
daa
outsl
add
test
je
lret
imul
in
out
cmpl
sbb
mov
call
jne
in
mov
test
shll
dec
mov
inc
pop
adc
push
ret
jecxz
dec
ret
bound
and
aaa
jmp
push
in
jmp
sbbb
daa
adc
jmp
shl
xchg
iret
pushf
mov
lods
or
mov
inc
scas
xor
jp
nop
rcll
popa
mov
cmp
push
idivl
push
pop
pop
cli
in
sub
les
je
xchg
and
loopne
call
adc
mov
dec
ja
shlb
sbb
sbb
sub
cwtl
and
js
nop
in
cmp
rcll
shrl
popf
mov
or
jb
ret
movsb
lea
filds
xchg
cmp
mov
mov
test
adc
sub
ficoms
leave
mov
test
cmp
fldt
and
popl
mov
leave
mov
outsb
into
inc
cli
and
lret
cmp
cmc
jne
mov
aas
jae
cmp
pop
cld
sbb
jns
and
pusha
aas
lret
sub
inc
xor
add
inc
adc
sbbl
and
movsl
shrl
inc
mov
mov
inc
pop
adc
or
into
ss
mov
shlb
loopne
jmp
cli
loopne
cmp
push
mov
mov
cmc
inc
mov
lret
push
jle
push
jb
push
mov
sub
icebp
out
andl
hlt
ret
movsb
sbb
bound
or
shr
sbb
bound
fisubrs
push
push
adc
mov
or
mov
lea
and
xor
inc
aad
jge
aas
loopne
dec
sbb
gs
loop
cmp
outsl
rcr
pop
hlt
aad
aam
jno
pop
out
das
lods
pop
stos
sbb
push
adc
mov
adc
mov
xor
repnz
cmp
add
pop
jle,pt
stc
pop
cmp
in
popa
xchg
rorl
lea
xor
xlat
add
rclb
pusha
les
and
mov
lock
das
clc
xchg
cs
arpl
cmp
add
push
pop
add
lahf
lcall
gs
push
adc
and
sbb
movsl
xor
lcall
jp
and
xchg
outsl
int3
cmpsl
push
rcll
cld
sub
xchg
test
scas
push
xchg
fnstenv
or
hlt
movsl
cmp
sti
push
shlb
xchg
push
mov
sub
outsl
iret
xchg
add
lea
jno
loope
dec
cmp
mov
ss
or
ljmp
daa
xor
push
bsr
faddl
imull
fmull
mov
add
cld
fstpl
mov
mov
shll
mov
daa
mov
mov
popf
push
sub
adc
fldl
imul
or
jle
cmp
mov
pusha
xor
cs
or
jg
adc
or
sbb
sbb
and
mov
add
fisttpll
add
das
xor
mov
into
push
addr16
lods
notb
mov
add
or
jmp
sub
mov
push
jle
cmp
or
lret
loopne
ljmp
inc
xchg
lods
in
hlt
xorl
insb
xchg
int
mov
loop
mov
sbb
pop
je
pushf
fdivrl
xchg
fdivrs
les
jbe
cmp
mov
inc
ljmp
sar
cmpl
ror
out
ja
jns
mov
loope
dec
jne
push
sub
push
cld
test
ret
enter
jle
and
in
and
add
js
xchg
mov
loop
out
pop
mov
mov
call
lret
int
and
sbb
adc
jo
mov
sbb
pop
sub
xchg
adc
and
les
jg
test
scas
cwtl
in
xchg
and
xchg
add
mov
shlb
jno
mov
and
mov
lods
sbb
in
sbb
add
popa
lcall
jle
dec
push
int3
dec
iret
jmp
ror
mov
jbe
shll
mov
test
inc
xchg
push
out
fdivs
lods
mov
jb
and
in
jge
pop
jbe
pushf
cmp
loope
mov
adc
fnstcw
adc
stc
push
repnz
subb
xchg
int
and
decb
pop
lock
imul
and
jbe
enter
sbb
ds
jecxz
into
outsb
sub
hlt
movsl
sbb
dec
movsb
mov
in
iret
into
mov
xchg
jp
cmp
pop
lea
lods
out
cmc
add
cmp
bound
xchg
mov
jmp
mov
mov
push
outsb
and
and
lret
add
fsubr
mov
or
out
test
sbb
xchg
mov
ret
jae
cld
pushf
in
rclb
mov
xchg
fnstcw
mov
insl
inc
jb
pop
movsb
xchg
imul
adc
push
imul
xor
jno
or
dec
fadd
cmp
rcl
inc
and
insl
cmp
pushf
push
mov
xchg
adc
call
into
inc
je
mov
lea
sbb
or
xchg
call
push
mov
mov
shll
loop
xchg
loopne
stos
pop
xchg
push
or
mov
add
mov
mov
push
lret
mov
andl
pop
pop
and
enter
fnsave
pop
divb
filds
mov
jmp
loop
sbbb
push
ljmp
xchg
in
lahf
cmp
andb
je
sbb
jno
or
dec
nop
aam
orb
arpl
cld
jne
add
mov
push
call
out
out
clc
icebp
frstor
push
or
cltd
xor
jbe
adc
dec
mov
call
fcomip
dec
push
cli
clc
jb
sarl
push
xchg
pop
mov
es
cmp
dec
and
mov
cmc
inc
or
sub
adc
sbb
clc
xor
pop
adc
or
aam
les
push
ss
stc
fwait
ljmp
mov
dec
mov
std
and
shll
xchg
mov
scas
fldenv
adc
pop
pushf
imul
cli
cmpsl
add
sarl
fidivs
and
or
mov
mov
int3
xchg
test
js
mov
cmc
test
sahf
jnp
inc
or
and
add
outsl
int3
xor
shlb
insb
daa
adc
xor
cmp
mov
sbb
mov
lret
cmpsb
pushf
imul
dec
lock
cmpsl
inc
cmp
lret
cmp
cltd
mov
iret
xchg
inc
sbb
dec
add
jle
or
rcrl
mov
inc
leave
mov
shl
inc
push
and
mov
sti
aaa
mov
and
sarb
xchg
repz
jb
call
dec
stc
test
test
push
mov
cltd
fdivrl
pop
pop
and
mull
paddsw
mov
lret
adc
out
sbb
pop
add
pop
sbb
push
das
dec
js
cmp
aas
pcmpgtb
mov
outsb
mov
pushf
xor
push
xor
and
jmp
fs
mov
sbb
mov
les
inc
or
addr16
pushf
call
inc
pop
dec
push
jb
mov
push
jle
push
dec
movsl
data16
sub
inc
inc
and
outsb
sbb
imul
mov
fimuls
movsb
enter
les
in
dec
sti
aas
inc
popa
add
aad
dec
adc
mov
xlat
jmp
adc
lret
pop
daa
repnz
push
rcrl
push
push
inc
lods
dec
dec
mov
pop
cmp
jmp
into
mov
sti
jp
mov
nop
sbb
add
rcll
jmp
mov
sbb
xchg
jecxz
adc
xchg
sbb
jge
stos
insl
jnp
dec
adc
pop
mov
imul
and
push
andl
mov
mov
and
and
adc
lcall
lcall
or
insl
sub
pop
jmp
xlat
enter
sub
cmpsb
stos
imul
push
xchg
fucom
loope
imul
sbb
mov
mov
cmp
ja
hlt
mov
sub
cmp
scas
std
mov
cmp
in
lahf
or
fildl
arpl
mov
or
clc
icebp
fnsave
mov
adc
push
sub
std
jb
iret
mov
faddl
sub
ja
mov
dec
sbbl
pushl
insb
mov
mov
loopne
dec
xchg
scas
loopne
cltd
xor
or
out
cmp
js
cli
imul
lret
repnz
ret
push
push
pop
xchg
scas
fsubrs
push
sbb
jecxz
xchg
daa
int3
xlat
lret
xor
clc
repnz
pusha
lahf
sbb
pop
ret
jne
lahf
jp
and
adc
mov
nop
pop
dec
fadd
push
lret
jne
leave
rcrl
jmp
add
mov
loop
sbb
fildl
sub
fistps
clc
dec
stos
dec
jo
mov
add
in
les
inc
lds
loope
sub
jnp
xor
aad
scas
data16
jge
iret
enter
mov
mov
inc
insb
aad
imul
aad
jb
sub
mov
in
pop
movsl
xchg
push
push
addr16
pop
mov
jb
pop
sbb
cmp
aad
mov
icebp
pop
push
les
jmp
insl
mov
repz
jecxz
mov
stc
imul
loope
mov
sub
adcl
outsl
loope
adc
cmp
icebp
sub
ja
scas
fwait
pop
jl
adc
mov
fwait
sbb
punpckhwd
jae
rclb
lcall
cli
nop
fiadds
imul
push
leave
lret
inc
push
jae
lds
jp
xchg
insb
inc
xlat
cs
jne
sbb
or
mov
cs
add
adc
inc
cs
pop
mov
in
xchg
add
jbe
xor
test
sbb
xchg
or
stos
cmp
or
jmp
dec
xor
mov
mov
mov
repnz
mov
imul
fistps
test
and
cmp
push
insb
in
adc
push
xchg
pop
add
int
test
mov
mov
dec
enter
or
adc
adc
xorb
xchg
and
sbb
cmc
xor
mov
data16
mov
inc
inc
lods
ja
xor
fcmovne
pop
or
pop
cld
xor
mov
cld
testb
aas
mov
mov
rcrl
arpl
pop
repz
enter
in
add
dec
inc
sub
jmp
pusha
in
pmulhuw
in
loope
inc
jbe
jle
fisttps
xchg
xor
shr
fcmovnb
xor
cli
dec
jb
xchg
and
pop
pop
pop
mov
pop
pop
cli
pushf
and
fwait
std
push
pop
les
pusha
xor
push
sar
add
sbb
inc
lods
sti
notb
mov
jge
inc
sti
test
fdivrl
adcb
test
cmp
fldt
add
test
mov
leave
push
and
jbe
mov
clc
nop
stos
ljmp
scas
fs
rorl
dec
sub
stos
push
mov
in
fisttpl
call
fs
iret
test
call
xlat
jnp
push
add
dec
cwtl
sbb
cmp
xor
adc
cltd
dec
mov
aaa
icebp
shrb
dec
add
mov
sbb
imul
stos
cmp
xchg
sbb
cwtl
idiv
fmuls
jl
cld
ljmp
sbb
aad
adc
in
sbb
push
push
xchg
ror
and
cs
adc
sbb
or
mov
sub
outsl
mov
push
test
sub
cmpsb
es
cmpsl
testb
pop
dec
mov
test
xor
clc
shlb
and
adc
lea
sub
sub
jle
scas
or
pop
xor
pop
inc
xchg
fldt
adc
add
pushl
cmovb
arpl
or
dec
int3
loope
dec
or
or
push
lock
sub
popa
mov
adc
cmp
int3
cld
jbe
outsb
aas
push
mov
icebp
push
ret
repnz
popa
inc
shll
adc
push
adc
mov
push
call
dec
sub
sbb
push
mov
adc
xchg
lds
jne
cmp
dec
imul
pop
push
jg
cs
test
push
movsl
loop
mov
sub
or
jno
repnz
mov
lret
xchg
inc
iret
sbb
adc
mov
xchg
sarb
lods
inc
xchg
or
imul
push
pop
xchg
sub
in
mov
jno
adc
pop
inc
push
xchg
jno
xchg
testb
mov
in
push
add
sti
mov
dec
push
addr16
jns
cmp
mov
sub
xchg
pop
out
mov
xor
adc
clc
dec
cmp
inc
sub
or
add
mov
xchg
ljmp
mov
test
xchg
bound
jmp
cld
add
sbb
push
aas
cltd
enter
or
insb
pop
jbe
push
xor
ret
add
sahf
je
cld
int3
sar
lret
sbb
or
lahf
imul
mov
mov
sub
jne
add
sub
cwtl
int
mov
sub
jno
or
loopne
mov
jne
inc
add
and
mov
inc
frstor
jge
ja
add
and
subb
rol
lret
mov
stos
stos
das
push
pop
or
jp
fmulp
pop
cmp
adc
insl
stos
fmul
imul
mov
nop
cmpsl
outsl
inc
jne
cs
imul
mov
int3
inc
loop
loop
mov
add
loopne
pop
out
jl
rorb
push
mov
mov
mov
lds
or
add
ror
pop
sbb
push
clc
and
lock
push
ret
cmp
push
or
jge
adc
iret
sti
mov
mov
clc
scas
cli
push
sahf
dec
sub
push
out
xor
xchg
mov
das
in
fists
push
adc
cltd
jo
pop
pop
lret
inc
jo
stc
call
divl
fsubrp
loopne
push
inc
arpl
into
jns
clc
adc
bound
adc
push
push
nop
rcll
shlb
xchg
faddl
call
xchg
or
test
xchg
subl
and
mov
jg
sar
out
add
aam
add
cmp
bound
in
fisttpl
in
jp
jne
ret
push
pop
pop
sbb
cmpsb
fisttpl
out
pushf
adc
movsl
out
mov
pop
mov
out
adc
fiadds
mov
mov
and
insb
out
es
inc
push
pop
sub
shld
add
insl
mov
push
pushf
xor
jmp
adc
sbb
jno
push
jle
sub
mov
pop
pop
lea
in
jl
xor
fbstp
add
cmpsb
jecxz
inc
shll
inc
pop
fidivl
stc
dec
fcoml
popa
xor
arpl
pop
mov
lcall
out
cltd
add
in
mov
stos
mov
scas
xchg
inc
cld
mov
data16
flds
int3
aad
xor
mov
aam
inc
mov
jns
iret
stos
ret
fstpl
outsb
add
inc
or
push
mov
stos
inc
fisttps
add
in
movsb
sarl
dec
cs
test
or
mov
dec
pop
inc
or
pop
xor
lcall
push
ror
adc
add
rcrl
push
xchg
movsl
jp
fucomi
cmp
push
lods
push
js
xor
mov
pop
in
add
lret
icebp
and
mov
xor
xchg
lcall
mov
push
outsl
in
xor
xchg
cld
push
test
xchg
shll
xchg
shlb
lahf
mov
and
stc
ficoml
pop
scas
scas
fcoms
mov
jns
ja
shl
or
pop
stc
or
push
mov
lret
dec
test
fisttps
push
cld
push
mov
rorl
pop
or
cld
hlt
push
or
dec
xchg
add
mov
mov
mov
das
cli
jbe
jo
mov
jmp
jp
xor
pop
repz
dec
add
ds
sbb
cltd
out
in
sti
sbb
insb
fs
lahf
dec
jle
mov
adc
aad
lahf
cmpsl
inc
sub
jne
ja
mov
ja
lock
lock
bnd
jns
out
test
shlb
rorl
out
add
and
insb
fbstp
or
or
lds
inc
adcb
fnstenv
loopne
out
stc
mov
add
mov
cmp
sbb
out
jne
pop
add
sar
dec
add
sub
mov
les
mov
xchg
mov
mov
xor
loop
ret
cld
in
sub
arpl
xor
dec
outsb
into
pop
mov
test
scas
test
pop
push
inc
pop
mov
sbb
call
sub
cwtl
out
int
dec
sbb
cmp
jb
call
stos
fstl
adc
shrl
loopne
cmc
pop
xor
and
int
clc
mov
fcomp
pop
add
and
lret
push
lods
stos
ljmp
cwtl
ret
cmpsb
xor
int3
mov
adc
cmp
lahf
mov
xchg
jmp
dec
lahf
fsubr
mov
fwait
clc
es
push
mov
mov
addb
and
adcb
jle
loope
iret
mov
ja
sarb
shrl
cmpsb
fs
pop
addr16
pop
int
inc
data16
inc
aas
rcrl
push
call
or
lcall
sbb
stos
inc
sbb
pop
cmp
add
popf
cmpsl
orl
dec
into
and
stc
loop
iret
or
adc
fnstenv
jl
sub
ja
mov
or
mov
xchg
sbb
cmp
fisttpl
pop
subl
push
je
ficompl
mov
mov
pushf
pop
insb
push
movsb
add
adc
mov
mov
outsb
push
stos
push
inc
sbb
lock
pop
in
in
dec
dec
adc
dec
pop
es
cmp
clc
cmc
fsubrl
imul
aad
mov
mov
jge
add
push
lods
ljmp
scas
push
adc
fistl
inc
insb
and
fbstp
dec
adc
out
sbb
push
xchg
fisubs
dec
mov
aam
jg
mov
idivl
cmpsb
mov
inc
mov
sar
or
adc
pop
mov
dec
jge
jbe
jp
push
mov
xor
imul
les
lea
daa
fstpt
sbb
je
orb
aam
mov
dec
xor
xor
jg
sub
ljmp
mov
test
lret
cmp
mov
movsb
inc
inc
int3
je
cmpsb
jno
jno
pop
or
inc
add
out
xor
test
out
push
mov
cmp
outsb
push
insb
pop
or
push
sbb
push
sbbb
add
mov
mov
mov
mov
inc
fildl
xchg
sbb
lahf
sub
jo
lea
jmp
pusha
mov
outsb
stos
cmp
pop
jno
sub
push
pop
mov
sub
fscale
ret
dec
cmp
xchg
hlt
mov
outsb
mov
pushf
dec
shr
arpl
mov
fmuls
aam
jge
and
push
push
xchg
data16
push
pop
ljmp
pop
push
leave
leave
adc
inc
jae
mov
daa
lock
mov
add
mov
dec
pusha
mov
jnp
mov
push
adc
xchg
stos
mov
pop
push
or
push
push
cmp
xchg
dec
fmull
adcl
rorl
pop
jmp
push
jb
aad
pop
ss
sbb
stos
in
inc
out
je
and
mov
pop
fs
jp
sub
je
je
push
cmc
sbb
jge
imul
mov
dec
cmpsb
pop
add
ret
and
imulb
inc
ss
scas
pop
aas
sub
sub
and
outsb
testb
jg
push
lcall
pop
cld
loop
xchg
xchg
pslld
mov
out
sbb
insb
xchg
cmp
ljmp
out
jmp
sbb
dec
xchg
cmpsl
xlat
push
shl
cwtl
inc
in
sti
int
push
push
xchg
or
shl
and
mov
pop
adc
fimuls
sub
xchg
leave
dec
js
mov
je
dec
jmp
imul
pop
cwtl
mov
scas
fcomps
and
push
stc
sub
inc
std
mov
call
ficomps
scas
lea
mov
rolb
xchg
rclb
dec
cmp
test
bound
stos
mov
imul
mov
and
sbb
test
popa
movsb
pushf
rcll
test
mov
aas
jb
roll
shlb
insb
mov
std
add
ss
dec
cmp
imul
xchg
pop
jb
aaa
cld
rclb
lret
shll
fsubrl
cmp
adc
xchg
mov
fwait
dec
sbb
out
imul
jecxz
inc
fidivrs
jge
jge
pop
adc
mov
sbb
outsb
pop
inc
sbb
adc
int
jle
sbb
sub
xor
in
add
and
rorb
dec
mov
cmpsl
jne
pop
imul
xchg
sbbl
ret
or
insb
jbe
or
fcmovu
aam
fldcw
xor
ja
cmp
add
push
jle
adcl
push
cli
lock
pop
inc
aas
test
stos
mov
loop
mov
sub
push
ficomps
iret
fwait
cltd
push
jle
shrl
fldl
lret
xor
ljmp
psubd
lods
rcl
sub
push
mov
sbb
add
or
loope
arpl
xor
test
push
movsl
iret
int
ljmp
xor
stc
sbb
andl
test
mov
je
sub
sub
add
stos
daa
scas
imul
iret
movsb
mov
push
mov
inc
pusha
mov
mov
scas
add
dec
lods
adc
popf
fisubrl
sub
cld
and
mov
pop
mov
jmp
mov
sbb
data16
addr16
sbbb
mov
bound
stc
or
push
add
test
hlt
mov
lahf
test
mov
out
dec
jecxz
xchg
ja
in
rolb
jp
dec
sahf
out
shl
push
call
adc
fstps
pushf
mov
lods
stos
adcl
or
faddl
sub
mov
push
push
jb
push
mov
or
pop
lret
xchg
insl
pop
pop
or
dec
xor
ss
fnsave
push
test
pop
icebp
xchg
pop
cmp
gs
das
adc
into
mov
dec
gs
cmp
shl
es
jge
xchg
jbe
in
scas
cmpsb
lret
lret
add
sub
cwtl
lahf
sub
lret
nop
inc
xchg
lret
mov
mov
fmull
test
scas
mov
testl
leave
or
repz
insl
sbb
lcall
jb
fstl
xlat
mov
das
stos
xor
sbb
dec
push
cltd
in
jno
pop
movsl
aad
adc
jl
roll
subl
lret
insl
or
mov
dec
loopne
dec
xchg
mov
add
imul
mov
test
push
jecxz
pop
rolb
negl
lock
clc
jecxz,pt
leave
and
adc
sbb
mov
push
ss
es
cld
jge
jbe
in
imul
not
push
and
pushf
in
and
in
rclb
cmpb
pusha
cs
subl
cs
std
nop
jbe
cmp
mov
out
or
push
test
cmp
test
stos
mov
sub
int
cmp
jg
cmp
mov
xor
xor
cli
pop
and
adc
xchg
add
and
inc
adc
sbb
push
inc
out
jae
repnz
popa
xchg
nop
xor
enter
cmp
push
inc
adc
lcall
dec
sti
xchg
dec
dec
ror
ljmp
inc
lock
nop
shlb
movsl
sub
fcomip
ret
inc
addr16
cmp
push
adc
stc
ljmp
repnz
ss
out
sbb
loope
jle
or
pop
inc
mov
mov
xor
mov
mov
addl
addr16
or
inc
xor
jg
or
xor
lea
in
pop
pop
mov
cmc
addr16
add
cmp
cld
cwtl
cmpsl
ljmp
xor
das
insb
stc
aas
insb
push
xchg
mov
cmp
movsb
popf
adc
mov
shll
aam
fs
lods
jb
sbb
mov
adc
enter
fisttps
xor
sub
mov
xor
ret
loopne
adc
dec
push
iret
loop
ret
arpl
inc
sbb
or
dec
and
testb
out
xchg
test
jmp
mov
xchg
call
adc
sbb
adc
mov
rcll
adc
dec
sub
inc
add
movsb
adc
xchg
cmpsl
jmp
push
xchg
cmp
enter
jo
lcall
sbbl
xchg
and
xchg
lock
push
xor
sub
les
aaa
inc
in
lcall
dec
dec
int3
lods
add
clc
inc
sbb
cmc
push
jo
jmp
mov
idivb
add
cmp
jge
xchg
pop
loopne
pusha
xchg
push
and
das
push
dec
or
cli
or
test
les
shrl
add
inc
cmp
sub
popf
mov
scas
xchg
xchg
mov
pusha
call
insb
push
cwtl
rcl
daa
add
addb
inc
les
loop
faddp
je
in
cwtl
data16
ret
xchg
gs
xor
int
int3
fadds
cmpsb
sbbl
mov
cmp
rcll
push
es
addr16
xorb
mov
lret
xor
iret
dec
sub
sbb
int3
pop
lret
popl
fdivrs
inc
mov
jo
sti
in
ret
push
ja
push
scas
mov
xlat
push
sbb
pop
movsl
adc
fists
pop
imul
mov
testb
dec
ja
xor
ret
adc
ss
pop
inc
dec
data16
xchg
cmp
mov
cmp
das
sbb
pop
test
push
cmpsb
ss
repnz
lret
sbb
xchg
or
movsb
insl
std
push
mov
popa
adc
negb
aaa
dec
mov
sarl
lods
sbb
adc
jno
inc
xor
aam
push
leave
inc
cmp
loope
aas
push
cmpsl
rcrl
cmpl
icebp
daa
xchg
je
push
inc
stos
mov
dec
outsl
fucomip
jp
dec
idivl
decl
sbb
int
pop
nop
jb
test
pop
mov
sub
les
cmc
xchg
mov
cltd
xlat
jno
mov
fstpl
repz
daa
jecxz
lahf
xchg
call
fcoms
ret
and
inc
inc
or
pop
mov
sub
int3
adc
or
xor
push
pop
shl
sub
aaa
push
out
mov
pop
or
mov
jecxz
cld
jb
repnz
aas
cwtl
shlb
in
push
add
or
mov
ds
outsl
inc
pmaxsw
xor
out
sti
test
fiaddl
inc
arpl
movsb
pop
gs
sub
lret
mov
sti
out
loope
dec
xchg
je
inc
sub
pop
loop
cmp
cltd
jne
jge
dec
outsb
lea
ds
adc
js
push
call
and
jp
insl
cs
mov
leave
loopne
popf
lea
movsl
ljmp
jl
cmp
outsb
adc
dec
repz
cmp
jnp
ljmp
testb
inc
or
leave
jg
inc
nop
jecxz
dec
int3
into
arpl
pop
or
out
ss
or
mov
mov
out
xor
add
jae
mov
mov
lock
inc
fldcw
or
xchg
add
xchg
push
in
ds
daa
mov
pop
out
xor
ret
pop
pop
lret
ljmp
std
sub
popf
repnz
xchg
repz
sbb
cmp
adc
orb
pushf
out
movsb
jb
roll
js
cmpsl
and
js
popf
mov
bound
fmull
cwtl
lcall
in
and
lock
lea
pop
lds
sbb
inc
and
jns
pop
std
push
mov
cmp
cmp
les
aas
out
mov
add
inc
dec
fmull
xchg
rorb
xchg
pop
pop
add
dec
pop
lock
into
fsubrl
jg
sbb
dec
js
mov
loope
add
mov
arpl
out
xchg
push
jp
pop
mov
push
adc
stc
jae
out
out
xchg
push
ja
mov
les
cmc
ds
test
and
in
inc
enter
and
nop
sbb
shlb
xor
lock
hlt
ja
mov
dec
loopne
sub
dec
cmp
xchg
sbb
mov
mov
xlat
cmc
lret
lret
leave
jae
dec
pushf
or
jae
sub
push
fwait
sub
mov
lcall
dec
fwait
lahf
mov
out
mov
sbb
adc
or
nop
sbb
or
icebp
call
cmp
in
push
daa
leave
xchg
mov
sub
or
xchg
repz
outsl
cmpsb
jp
and
add
lcall
rorl
xor
add
or
out
popa
fst
xor
or
int3
aam
cs
pop
jp
popa
mov
stos
xor
addl
stos
inc
cs
lods
or
xor
sahf
mov
mov
test
filds
aad
ret
je
push
insb
dec
ret
outsl
cmp
sbb
adc
sbb
into
outsl
int3
mov
xchg
add
mov
pusha
xor
jo
pop
into
jb
mov
wrmsr
mov
push
jmp
testb
lret
jg
mov
jns
lcall
xchg
push
sub
add
arpl
mov
jae
xchg
out
mov
cltd
adc
rcrb
jl
push
ja
aas
mov
push
shrb
push
repnz
imulb
xor
mov
dec
mov
xlat
inc
adcb
adc
pop
mov
push
mov
or
xor
sbb
mov
mov
xor
lahf
xchg
xor
jl
aam
or
pop
push
sbb
les
sahf
push
pop
repnz
mov
shlb
lret
pop
sub
mov
repz
nop
gs
nop
pop
pop
imul
shlb
push
int
jno
push
xchg
gs
jl
rorb
inc
mov
jne
pop
andl
cmpsl
call
lds
test
jae
mov
fdivs
rclb
shrl
and
pop
sub
pop
data16
test
mov
jb
stc
cs
stc
sub
xor
jae
add
and
divb
movsb
aad
and
orb
fcmovnu
sbb
xor
mov
pop
jmp
cmp
pushf
jecxz
fnsave
stc
xor
lahf
lahf
xor
jno
xchg
out
mov
mov
mov
test
lock
dec
pop
dec
mov
xchg
loopne
sti
int
inc
negb
rorb
js
fwait
lret
int3
add
add
adc
cld
and
lods
lcall
mov
and
pop
push
mov
and
cmp
rcl
dec
xlat
shll
jg
fcompl
mov
mov
jmp
mov
sahf
arpl
jnp
out
add
call
fdivrs
aam
jecxz
and
loopne
cmp
xor
and
jp
bound
out
and
test
xchg
lcall
sub
outsl
iret
xchg
mov
call
and
xlat
test
pop
xchg
loop
push
lods
jmp
add
addr16
mov
push
jmp
hlt
jo
xchg
jbe
mov
mov
dec
shl
pushf
repz
andb
inc
xor
and
ljmp
jo
inc
fnstsw
gs
insl
mov
ficomps
int
pop
xchg
arpl
jmp
jecxz
xchg
insb
movsl
je
shll
sarl
adc
fldt
cli
cmpsb
sbb
jae
mov
push
sub
in
sbbl
xlat
add
mov
fwait
push
pop
daa
add
das
icebp
daa
rorb
arpl
or
lea
xor
test
in
lret
pop
sub
xchg
cli
pop
aaa
popf
stc
jg
inc
sahf
movsl
mov
aam
mov
mov
ds
pop
addr16
dec
out
sub
add
and
jne
mov
leave
cmp
js
rclb
cmp
mov
outsb
js
push
test
ljmp
out
or
mov
in
outsb
popa
cli
hlt
iret
sbb
dec
fsubrl
das
mov
push
cmp
icebp
sub
or
fmull
lds
sbb
cmpsl
int
sbb
mov
push
mov
loop
or
shl
sub
ds
jge
mov
sbb
stos
imul
call
mov
xor
pop
dec
into
mov
adc
pop
sbb
pop
inc
inc
stc
mov
and
sbbl
call
jmp
arpl
xchg
jle
std
call
pop
inc
repz
cmp
ret
cmpsb
mov
pop
dec
out
inc
notb
dec
adc
loop
inc
lea
sub
testb
pop
xchg
sahf
mov
mov
repz
xchg
sbb
xchg
int
cld
jge
push
inc
mov
mov
sti
xchg
push
push
mov
push
les
xor
movsl
or
hlt
mov
imul
inc
lcall
test
or
or
mov
jns
scas
pop
mov
mov
cmc
jmp
ds
insl
popf
das
push
mov
hlt
and
add
xchg
add
in
jnp
mov
ret
xchg
scas
lock
jns
mov
lret
sbbl
mov
push
lods
outsl
sbb
mov
scas
xchg
and
repnz
adc
outsb
dec
test
shl
lea
mov
push
pop
bound
test
and
mov
xor
int
pop
clc
roll
cmpsb
cmp
mov
mov
jo,pt
ret
lcall
mov
inc
push
cltd
mov
push
pop
ljmp
push
fisubrs
jge
call
fdivr
xchg
test
cmp
sub
push
lods
mov
enter
xchg
mov
js
push
mov
dec
movsl
test
jo
outsl
rcll
mov
adc
mul
or
or
nop
ja
adc
sbb
xchg
ficompl
cmp
jecxz
clc
adc
adc
ja
sbb
xchg
pop
jo
in
sbb
pop
push
fistps
pop
mov
jge
sti
push
lahf
rclb
sti
jmp
mov
je
out
insl
pop
fs
xlat
mov
push
loopne
stc
lods
pusha
or
pop
dec
jbe
push
sub
jne
cmpsl
repz
stos
ja
push
jnp
pop
int
pop
aam
sub
mov
fisubs
xchg
add
cld
pop
call
and
cmpsb
das
movsb
sub
cltd
pop
aaa
cli
out
js
out
arpl
out
pop
push
rclb
ret
inc
add
shlb
mov
mov
out
mov
jecxz
mov
mov
stos
mov
int3
mov
inc
mov
int3
xchg
jmp
fstpl
fsubrs
insb
xchg
jmp
push
jae
add
sub
push
inc
xor
or
fbld
test
mulb
fisttps
push
repnz
lock
dec
dec
clc
in
int3
sti
adc
scas
push
sbb
aam
ljmp
nop
popf
push
jge
mov
push
fldl
dec
lods
aas
xor
pop
jp
dec
mov
scas
in
fs
mov
repz
test
jns
inc
and
mov
cmp
xor
fwait
mov
enter
xchg
scas
out
add
pusha
stc
xor
mov
add
stc
pop
and
dec
dec
lock
add
addr16
add
inc
push
ret
xchg
fdivp
and
daa
jns
adc
sbb
icebp
push
int
call
cld
jg
movsb
push
xor
inc
mov
gs
cli
gs
dec
test
or
clc
loop
xlat
in
lods
iret
out
inc
scas
es
or
sub
xchg
xchg
mov
xchg
xor
xor
imul
add
test
mov
loop
or
loop
mov
sub
sub
add
and
mov
or
push
mov
cmp
loop
movl
popa
sbb
inc
mov
call
adc
sub
shrl
xchg
fsubrp
clc
mov
paddusw
or
jo
aaa
stos
fcmovnu
movb
mov
and
push
rcll
pusha
push
test
sbb
imul
lock
push
mov
rcrl
movsb
fwait
dec
mov
mov
ss
nop
jle
mov
and
cmp
sbb
cwtl
add
or
push
and
lea
out
push
insb
negl
xchg
xor
inc
int3
jns
lods
popf
mov
cmp
call
test
mov
icebp
jno
push
mov
jle
xlat
les
jge
insl
neg
and
js
and
and
xchg
mov
mov
es
mov
inc
orb
pushf
out
lds
push
mov
aad
jge
xchg
cltd
ret
sub
aad
in
iret
idivb
xor
out
fs
out
ret
into
push
ret
jae
lcall
xchg
mov
subb
mov
imul
mov
sbb
xor
mov
clc
mov
jnp
inc
leave
iret
xor
xchg
or
jge
mov
out
sbb
pop
and
or
push
push
mov
mov
sarl
mov
push
push
sub
das
lea
or
rorb
xor
mov
int3
je
addr16
mov
shlb
and
dec
lods
pop
lods
testl
mov
lret
pop
mov
out
jl
or
js
inc
fdivl
ds
rcr
add
iret
or
adc
fidivrs
jle
jl
mov
dec
loope
sub
rclb
fs
push
add
outsb
and
int3
xor
push
sbbl
or
dec
call
pop
test
scas
cmp
lods
sub
pushf
mov
pop
ja
outsb
aam
mov
mov
dec
push
and
inc
and
pop
and
adc
test
push
jecxz
sbb
std
inc
fdivrs
xor
jne
sbb
in
adcl
mov
push
out
pop
and
sbb
mov
mov
mov
loop
inc
and
nop
xchg
bound
or
orb
leave
imul
rcrl
sahf
cld
xor
es
adc
adc
rol
inc
out
jns
std
fwait
jo
pop
int
sbb
sub
dec
inc
inc
fisubrl
jno
aad
movsb
ss
and
loope
ss
cmp
loopne
cmp
mov
cs
add
ja
shl
lea
xor
mov
add
in
or
jns
hlt
xor
mov
push
sub
or
icebp
shrb
enter
icebp
adc
inc
adc
sub
test
pop
into
scas
insl
push
imul
aas
jne
mov
lea
sub
pushf
mov
xor
adc
bound
mov
mov
insl
pop
jg
loop
xor
mov
cmp
mov
arpl
movsl
shl
lret
sub
pop
pop
add
inc
test
dec
loopne
push
shll
xlat
pop
lcall
pop
sysret
test
gs
iret
sti
sbb
call
and
fnstsw
iret
dec
outsb
and
mov
sub
popf
sub
scas
adc
push
add
jae
mov
out
iret
test
dec
push
mov
iret
imul
xor
jmp
hlt
js
push
add
dec
push
fmull
insb
repz
fists
addr16
push
fcomps
testl
or
hlt
jae
jne
or
addb
insb
bound
mov
cmp
sbb
sbb
cwtl
jmp
shrl
xchg
sub
xor
cltd
aam
xchg
pop
mov
mov
push
mov
sub
inc
jno
loope
nop
repnz
jmp
fisubrl
lea
add
xchg
sub
pop
push
andl
push
scas
pop
mov
call
sbb
fists
mov
cmp
jbe
inc
pop
inc
rcll
les
jae
hlt
in
loopne
stos
sub
adc
mov
push
push
test
bsf
jo
in
jge
rol
dec
js
in
fisubs
cwtl
adc
scas
popa
adc
fs
outsb
xchg
loop
mov
jmp
or
in
adc
adc
test
inc
jno
jl
sub
pop
and
lea
push
sub
fwait
xor
cltd
jnp
dec
xor
mov
fs
subl
lds
mov
or
fdivrl
das
rcrb
push
scas
insl
mov
sbb
add
cmp
stc
addl
shll
loope
in
int
imul
jle
outsb
rclb
xor
aad
bound
mov
mov
or
cld
lret
inc
data16
cmp
or
ja
sub
mov
mov
negl
xlat
mov
mov
mov
xor
ficoms
into
data16
adc
ret
std
sbb
xlat
mov
push
std
loop
xchg
sbb
mov
mov
xor
xchg
call
sub
add
hlt
and
xchg
pop
add
loope
out
or
jb
pop
hlt
std
insl
in
inc
mov
insb
inc
and
xor
test
push
xchg
inc
cmpsl
fdivrl
jbe
stc
fwait
and
mov
or
jge,pt
sarb
xor
add
dec
xchg
lret
sbb
inc
punpckhbw
int
lods
stos
inc
add
sbb
xchg
jno
leave
sub
cmp
pop
mov
stos
add
dec
daa
lcall
cltd
pop
xchg
mov
sub
insb
in
push
or
add
pop
repz
adc
sahf
fldcw
or
aam
movsl
pusha
and
lret
fnstsw
pop
jge
xor
xchg
mov
mov
mov
insl
aam
xchg
cmpsb
mov
mov
fwait
imul
cmc
lahf
and
dec
pop
push
or
out
xor
jl
test
sub
mov
mov
lcall
fiadds
jl
insl
stos
jns
mov
pop
in
mov
lods
ret
mov
sbb
popa
adcl
scas
sub
idiv
fldlg2
mov
in
add
stc
push
push
outsl
jl
adc
in
sub
ds
rcll
iret
cmpb
repnz
int3
cs
stos
movsl
mov
add
push
and
gs
sbb
mov
mov
pop
pop
dec
cmp
mov
pop
imul
lcall
mov
add
xchg
xchg
push
jecxz
dec
outsb
jecxz
xor
xchg
stos
dec
arpl
pop
mov
add
push
imul
std
shlb
subb
mov
xchg
mov
stos
in
lods
mov
aad
ds
scas
mov
ffreep
lret
cmp
cmc
xchg
add
xor
lods
mov
push
mov
fdivl
xor
and
leave
jl
sbb
jae
fwait
int3
rorl
movsl
scas
fisttpl
into
imul
add
sahf
inc
fstl
sub
std
aas
shll
fdiv
jnp
movsl
xor
pop
lret
ds
enter
or
fbstp
nop
ljmp
repz
test
xor
inc
mov
sbb
cmp
outsl
jp
cmp
mov
inc
bswap
jno
dec
xchg
mov
mov
mov
pop
fldenv
xchg
fnstenv
inc
fucomip
pop
and
inc
int3
ds
out
add
xchg
pop
rorb
xor
stos
pushf
jecxz
inc
movsb
xor
push
adc
sahf
ljmp
pop
orl
pushf
inc
mov
lret
adc
cmp
lcall
or
pop
mov
push
stos
aas
dec
xchg
pushf
lret
xor
mov
flds
sub
out
xlat
stos
insl
dec
mov
sbb
aaa
aaa
sbbl
mov
pusha
xor
enter
mov
pop
lock
add
xor
aaa
sbb
ret
insl
prefetch
cmc
dec
cmpsl
xchg
lds
jmp
cs
lret
lret
pop
test
dec
rcrl
sbb
test
cs
decl
sbb
orb
pop
loopne
into
mov
xchg
cmp
stc
lcall
push
fiadds
shlb
mov
and
fiaddl
test
sub
push
dec
loopne
fisttps
fadds
and
fiadds
mov
std
add
inc
inc
jle
push
pushf
inc
cltd
insb
lods
push
ja
lock
cmp
rol
aad
mov
dec
inc
cmc
push
mov
stc
push
jno,pn
adc
cmp
adc
cmpsl
outsb
xor
mov
mov
lock
mov
sub
mov
out
jp
decb
mov
sbb
add
sbb
add
icebp
aaa
fwait
shlb
or
push
jno
call
pop
in
mov
lret
jle
iret
cmp
adc
popf
icebp
setae
sbb
lahf
pop
sub
xchg
mov
add
out
push
dec
dec
sub
sbb
loopne
or
sbb
cwtl
dec
rcrl
aas
dec
jbe
mov
mov
pop
xchg
std
jmp
xchg
int
add
mov
add
andl
xorb
add
jnp
lods
xor
jmp
cltd
pop
xor
or
int3
fucomip
iret
xor
jmp
xchg
cmp
and
inc
xchg
pop
hlt
add
iret
add
cmp
pop
sbb
mov
jno
ret
pop
into
sbb
sbb
outsb
xchg
popf
out
mov
fwait
push
ljmp
xchg
cmp
or
add
aam
add
push
dec
stos
push
rol
rcrl
jb
sub
mov
inc
jecxz
in
or
ret
stos
mov
sarl
stos
push
xor
sbb
adc
inc
jns
mov
mov
imul
mov
roll
xchg
cmp
mov
int
mov
mov
cmpsb
addl
jbe
in
orb
clc
lcall
xchg
jae
dec
movsl
or
jecxz
push
mov
enter
sbb
push
push
and
mov
cmpsl
cmp
push
out
int3
xor
add
cmc
gs
xor
xchg
mov
add
and
stc
adc
and
lds
addb
mov
std
push
addb
mov
fsts
or
mov
sahf
icebp
ja
dec
and
sub
push
add
lret
mov
jmp
in
add
mov
dec
movsb
icebp
xchg
cmp
sbb
inc
in
xor
inc
loope,pn
xor
addr16
jge
add
pop
call
lahf
cmp
stos
xor
mov
insl
or
push
inc
clc
and
arpl
pop
or
shrl
insb
cmpsl
sub
sbb
mov
test
jp
mov
mov
push
adc
mov
add
jno
dec
push
add
aam
shlb
out
in
pop
fnstcw
jg
fimull
and
adc
pop
jne
cmpb
xor
das
xor
enter
mov
jmp
notl
shl
movsb
mov
scas
xchg
lock
inc
xor
shlb
repz
rcrl
test
mov
mov
lods
jne
ljmp
sti
xor
les
push
js
sub
mov
xchg
iret
addr16
add
jmp
insb
es
push
mov
sbb
gs
jbe
inc
js
and
das
sbbl
sahf
pop
jl
xchg
xchg
cs
pop
stos
mov
rclb
push
dec
scas
es
jnp
jg
xor
cmp
aam
sub
or
icebp
outsb
xor
movsl
scas
loopne
cmp
nop
jle
iret
sub
sarl
sbb
aas
dec
in
dec
jo,pt
fistpll
or
stc
es
in
ljmp
mov
inc
dec
mov
sahf
mov
mov
mov
mov
jg
aaa
push
lds
or
cli
or
xor
lcall
dec
and
ss
inc
xor
mov
ljmp
inc
mov
mov
test
cmp
dec
mov
xchg
and
stc
rol
jo
mov
push
jmp
pop
cmc
mov
repz
sub
aas
das
cmp
stc
pop
pop
cmpsl
add
xor
add
or
imul
mov
fs
dec
xor
xor
imul
cmp
mov
popa
push
xchg
jmp
mov
xchg
outsb
repnz
imul
adc
clc
repz
mov
inc
add
xor
into
mov
testb
cmpsl
cmp
mov
push
daa
gs
xlat
mov
out
insl
pop
lret
add
cwtl
mov
in
push
jo
xchg
sub
je
cmp
xchg
aaa
fcmovb
and
push
lahf
inc
imul
pop
jecxz
out
movsb
mov
xlat
test
lods
fdivl
xchg
shlb
ret
or
push
lahf
sbb
sub
inc
cmpsl
pop
enter
push
inc
ret
testl
shrl
push
sbb
das
imul
mov
rcrb
push
aad
cmp
insb
sbb
scas
std
mov
push
mov
adc
cmovs
enter
imul
jae
icebp
cs
jae
push
xchg
mov
in
push
pop
div
mov
stos
in
dec
jg
mov
stos
imul
mov
sbb
or
pop
dec
add
mov
mov
mov
and
out
xchg
or
loopne
xchg
pop
mov
clc
xchg
aad
cmp
mov
xor
sub
jl
in
and
xor
pop
push
adc
test
or
cmp
cmp
sbbl
cwtl
add
mov
mov
daa
adc
pusha
jg
and
test
sahf
fs
xor
inc
bound
dec
popaw
mov
xchg
les
lds
or
jge
jp
incb
xlat
into
cmp
insl
std
jmp
test
inc
sbb
sbb
pop
dec
jbe
sub
push
cli
sbb
imul
pop
xchg
lods
dec
ljmp
jge
jb
ja
push
fucomip
pop
fs
int
mov
or
inc
mov
stos
dec
adc
stos
icebp
ljmp
ljmp
es
jnp
sahf
mov
dec
adc
sbb
mov
push
xlat
push
scas
xchg
mov
push
insl
pop
adc
or
sahf
lret
cs
push
je
out
add
lahf
xor
sub
mov
adc
push
lret
jae
sbbb
or
xchg
fisubrs
test
insl
dec
rcrb
mov
xchg
mov
testb
xchg
pop
or
sub
add
sub
jns
push
sub
cmp
ds
push
cmp
push
mov
pop
mov
dec
pusha
push
and
fwait
ds
push
lcall
andb
xor
xor
insl
cli
fidivl
fstl
xlat
push
push
int
movsl
fdivs
jae
insl
pop
bound
leave
jbe
mov
xchg
cmp
into
ret
lcall
lods
fldenv
stc
movsl
lea
and
sbb
mov
sbb
insb
mov
in
out
adc
or
xor
test
sbb
xor
mov
cmp
jo
xlat
dec
add
xchg
ret
enter
icebp
bnd
lret
popf
mov
lods
mov
inc
int
out
leave
int
xor
add
xor
adc
ret
jae
mov
clc
ret
add
test
mov
loop
mov
dec
add
sub
and
cmp
mov
mov
pop
dec
xor
adc
cmp
xor
sub
rcrb
inc
jb
xlat
adc
push
dec
fisubrs
aaa
decl
pusha
sub
push
scas
or
scas
ljmp
leave
hlt
adc
daa
sbb
inc
add
lods
jne
ss
mov
pop
mov
shlb
gs
outsb
stc
call
ja
pop
jg
clc
sub
dec
fistl
lret
in
gs
insl
xadd
popa
add
shr
stos
and
notl
inc
sub
stc
je
pop
into
add
mov
iret
dec
imul
push
pop
cmc
out
ljmp
loopne
xchg
stos
jb
jae
push
js
repz
shrl
mov
aaa
and
add
lock
sbb
or
clc
mov
add
rcrl
mov
loope
arpl
xchg
push
ret
ss
sub
mov
xchg
sbb
sti
push
mov
fstpt
sbb
push
subl
jl
mov
adc
aaa
add
loop
and
jbe
mov
cmp
mov
adc
shlb
in
cmc
xchg
sub
inc
sti
shll
or
sbb
add
push
xor
gs
test
rclb
loopne
les
std
int3
mov
and
movsl
push
sbb
hlt
mov
jge
cltd
das
pop
dec
pushw
data16
pop
fabs
sbb
cmp
scas
push
in
xchg
pop
mov
push
pop
add
ret
sbb
fisubl
pop
out
aad
sbb
pop
jnp
push
ficompl
mov
outsb
bswap
imul
push
lods
or
inc
and
cmp
xchg
insl
and
push
and
cmp
sub
xor
and
add
outsb
push
popa
add
or
pop
mov
mov
insl
push
lret
movsl
pop
cld
mov
and
js
push
test
test
push
mov
les
add
xchg
dec
bound
ja
fistl
les
gs
sbbb
sbb
into
cli
enter
shll
fcoms
adc
mov
mov
and
jg
and
cmpl
dec
int3
xor
xor
push
xor
and
push
dec
ljmp
adc
mov
add
jecxz
sbb
fs
add
xor
cmp
lcall
xor
int3
or
fs
xchg
out
pop
and
or
mov
sub
outsb
mov
js
fadds
das
das
fs
or
sbb
sbb
push
and
add
or
aad
mov
scas
mov
out
fnsave
mov
divl
sahf
add
adc
sbb
sarb
sub
aad
out
int
push
scas
mov
xchg
loop
data16
mov
add
xchg
cwtl
inc
std
arpl
xor
repnz
cltd
mov
inc
hlt
sbb
mov
in
sbb
shr
inc
sbb
inc
aam
fdivrp
dec
and
aas
insl
jmp
mov
push
pop
sbb
add
inc
aad
xchg
inc
inc
sahf
push
add
popa
and
pop
or
mov
lret
adc
jge
xor
jle
std
or
hlt
lret
out
in
std
pop
cltd
clc
mov
dec
lret
adcl
daa
iret
push
imul
mov
cld
aas
xor
mov
dec
mov
add
add
inc
sarl
xchg
push
icebp
ss
movsb
sbb
stos
mov
mov
aad
mov
and
push
push
fldcw
int
daa
cmpb
mov
sub
fdivrl
gs
mov
fbstp
aas
cmpsb
cld
push
dec
hlt
fs
dec
mov
xor
sbb
icebp
jg
xchg
gs
jnp
ja
mov
fwait
loopne
mov
insl
add
jg
in
sbb
mov
xor
sahf
bound
xchg
xor
sub
test
xbegin
cwtl
sub
and
sti
pop
nop
int
mov
inc
jb
push
dec
and
lock
sar
rep
nop
and
loope
dec
dec
and
jns
stc
cltd
lea
sub
cmp
cwtl
je
aam
andb
test
and
push
mov
mov
adc
inc
xchg
clc
sbb
cmpsl
repnz
mov
popa
popf
dec
mov
rcl
mov
movsl
mov
das
jle,pn
imul
xchg
pop
inc
mov
dec
in
je
mov
nop
rolb
bound
sub
jnp
out
ljmp
adc
leave
int
clc
and
fs
ret
xchg
xor
mov
mov
jnp
cli
icebp
mov
das
in
add
addb
add
mov
pop
push
imul
popa
pusha
lret
sub
mov
mov
or
fnstenv
das
mov
push
and
rclb
and
decb
mov
jae
or
jmp
mov
sti
lods
add
adc
std
dec
repz
lret
or
sbb
mov
stc
dec
mov
sbb
cmp
add
call
lret
cmp
push
iretw
loop
sub
shlb
outsl
and
arpl
add
scas
mov
sub
xchg
or
out
mov
mov
inc
jl
lea
mov
xor
mov
sub
int
shlb
shr
je
jp
cmp
orl
jle
pushf
push
int3
adc
jecxz
jmp
mov
mov
xchg
push
lret
inc
xchg
cs
lcall
enter
jg
out
sar
sub
sub
mov
ret
out
or
inc
cmpsb
adc
pop
mov
cwtl
jmp
mov
push
imul
adc
sbb
nop
mov
data16
shrb
jg
inc
sti
ret
push
mov
cs
lods
rorb
pop
out
mov
mov
pop
imul
movsb
bound
mov
lret
mul
push
jl
scas
lret
dec
orb
add
mov
xchg
or
jg
into
out
rclb
jge
sub
stc
xor
push
bound
sub
inc
xchg
pop
pop
mov
clc
jl
jle
push
mov
out
cli
push
push
sbb
or
pusha
inc
test
sti
xor
rcr
lret
fwait
jne
lret
xchg
in
lods
and
sbb
adc
test
adc
je
daa
jp
or
jne
ljmp
push
sub
icebp
subb
mov
jle
sti
dec
mov
subl
mov
pop
add
add
shl
gs
ss
dec
xchg
sub
mov
lret
mov
adc
insb
push
sbb
sub
lret
das
scas
jmp
pop
mov
paddq
addr16
mov
sub
fsubr
fxch
js
or
push
cmpsb
lret
push
aaa
out
adc
cmp
or
fwait
movsl
ret
push
dec
mov
aaa
sarl
sub
nop
fcmovnu
jne
ljmp
cmp
addb
and
fld
dec
scas
sub
mov
aad
xor
sbb
inc
out
or
fimuls
clc
insb
and
push
push
ljmp
int3
ret
cmp
xlat
pop
sbb
popa
lahf
xchg
mov
fdivrl
mov
shr
fwait
push
ficoms
mov
mov
pop
adc
mov
dec
xchg
movsb
pushf
push
inc
pusha
cwtl
push
cmp
bnd
jae
pusha
adc
xchg
dec
leave
or
stc
js
mov
out
mov
nop
pop
loopne
scas
popa
push
xlat
enter
out
mov
shrb
pop
cmpsb
pushf
hlt
inc
mov
rcrl
test
jecxz
enter
adc
int
and
out
add
lret
loopne
sbbl
cld
or
aad
xor
push
ss
ss
pop
jno
inc
pop
mov
push
jnp
leave
test
inc
lret
shr
or
adc
cwtl
xchg
jmp
jno
cmpsb
mov
push
sarl
jecxz
xor
sub
mov
or
pop
inc
mov
cmpsb
daa
movsb
cmp
mov
or
lret
mov
loop
lret
dec
add
popf
lock
cmp
or
in
add
subl
jne
inc
fiadds
mov
dec
add
ja
aam
sub
adc
dec
pop
fisubl
int3
xchg
movaps
cmpsl
cmp
je
adc
decb
push
sub
data16
cltd
sahf
xor
inc
dec
jae
loop
into
lods
dec
sbb
or
shlb
sub
sub
or
adc
in
cmc
xchg
out
adc
mov
subl
aas
mov
push
jge
sbb
lret
xor
dec
stos
je
cltd
aaa
pop
pop
mov
stos
rcr
nop
inc
jp
lret
je
in
bound
jge
repnz
ret
sub
lock
fwait
pop
mov
imul
fsubr
orl
test
xor
rorb
sub
pop
pop
dec
cmp
xlat
jb
push
inc
imul
sti
lods
and
test
scas
lods
test
int
sysexit
cmp
xor
sbb
jp
adc
jmp
jae
pop
sti
loope
cmp
adc
push
xor
push
or
xchg
stos
test
mov
addr16
insb
mov
incb
ror
or
push
or
mov
mov
sub
int3
xchg
movsl
and
mov
push
adc
fwait
cmpsl
pop
inc
inc
jne
enter
das
addr16
dec
and
adc
dec
and
jecxz
stos
dec
mov
add
clc
lock
cmp
mov
mov
lea
insb
sbb
or
bound
sbb
ret
inc
push
and
xor
dec
inc
mov
rorb
test
mov
dec
mov
ds
dec
mov
mov
mov
fists
inc
or
mov
cmpsl
cmpb
mov
gs
dec
int
sbb
fisttpl
xchg
or
dec
or
push
test
aad
mov
fiadds
xor
roll
push
sub
es
jnp
jle
imul
pusha
adc
lods
nop
leave
jo
sub
mov
mov
xchg
outsl
call
sub
pop
mov
jo
nop
loopne
xchg
cmp
mov
outsb
lahf
mov
adc
adc
fmulp
ret
lahf
sub
pop
adc
dec
cmc
push
aad
cmp
mov
mov
mov
into
test
mov
rcll
mov
xor
incb
out
cmp
mov
mov
imul
push
in
push
or
lods
or
xchg
clc
test
push
pop
mov
mov
and
mov
std
mov
push
xchg
jb
mov
into
std
xchg
and
hlt
cwtl
dec
or
jo
dec
sub
jg
xchg
hlt
sub
movsl
sahf
scas
inc
push
sbb
pop
mov
mov
xor
fnstcw
lea
add
out
mov
sar
inc
cltd
add
mov
inc
out
dec
js
jge
jge
into
stos
xchg
movsb
mov
int3
jno
sbb
sub
push
push
fs
or
int3
fsubl
scas
ja
jmp
jbe
es
movsl
sarb
daa
mov
loopne
inc
scas
pop
inc
mov
das
loope
enter
rolb
rcrl
adcb
das
sub
mov
fcmovbe
enter
inc
mov
mov
std
test
cmc
scas
or
mov
popa
xchg
lea
popa
pop
fs
int3
lods
adc
inc
test
mov
nop
inc
or
pusha
scas
cmpsb
jecxz
mov
dec
mov
and
insl
shrl
inc
out
jecxz
aas
imul
cmp
xor
inc
inc
xor
jecxz
mov
int3
mov
jp
std
or
jp
shll
fwait
and
jl
push
mov
fwait
stos
ljmp
or
je
or
pop
push
adc
sbb
jecxz
pop
xor
sub
jmp
ret
loope
pop
pop
stos
vcvtss2si
xor
dec
sti
rcl
cmp
pushf
in
fs
cltd
push
fsts
mov
dec
jno
pop
cld
mov
leave
fmull
gs
mov
jns
mov
pop
mov
insb
sahf
add
out
pop
push
xchg
loope
fstp
dec
pop
cmpsl
movsb
cmp
mov
push
adc
je
xchg
clc
jae
ds
ja
testb
icebp
mov
imulb
fmulp
and
mull
test
xchg
add
sub
xchg
shl
xchg
ds
std
mov
sbb
cltd
repz
cmp
pusha
or
push
popa
pop
mulb
pop
jmp
test
lret
fmul
cmp
inc
arpl
test
jge
shl
arpl
fistpl
loop
cmp
js
xor
push
ret
sub
mov
and
pushf
fnstenv
sahf
mov
js
jno
add
mov
das
shlb
lock
sub
adc
push
adc
fs
pop
cmp
test
mov
mov
lods
imul
add
jg
jae
xchg
xor
push
jmp
icebp
push
sub
push
jg
dec
pop
pop
in
push
iret
mov
std
test
push
pop
idivl
mov
sarb
roll
test
aam
dec
sbb
fsubrs
or
xchg
aaa
jb
and
lds
sbb
loop
movsl
movsl
in
add
sub
cmp
imul
xchg
pop
and
pop
cmp
gs
cmp
cltd
sbbb
sub
sbb
push
pushf
jnp
jb
jmp
xchg
jb
lret
scas
cld
mov
dec
pop
jp
imul
xor
xchg
sbb
test
add
pop
cmp
xchg
inc
loopne
icebp
cltd
mov
ss
in
mov
push
mov
mov
mov
and
mov
std
mov
jno
dec
cltd
stos
mov
clc
jns
push
sbb
push
imul
xchg
pop
xorb
imul
and
sahf
in
mov
pop
icebp
and
test
mov
fidivl
adc
jge
ljmp
xor
sbb
push
mov
push
pop
dec
dec
mov
cltd
ds
out
ljmp
xor
pusha
outsl
push
shll
jecxz
imul
loope
pop
dec
jmp
outsl
gs
imul
and
jne
sub
and
push
inc
inc
dec
addr16
xor
mov
sub
adc
sbb
mov
in
mov
or
push
mov
idivl
mov
add
stos
sub
insb
out
addr16
test
pop
fsubrs
push
cmpsl
and
popa
aad
mov
movsl
sbb
dec
sbb
ja
test
es
mov
push
frstor
in
pop
sub
sti
add
pop
mov
and
movsl
add
pop
imul
xchg
insb
loope
loopne
push
mov
pop
into
inc
in
out
xor
or
or
inc
iret
or
popf
adc
jmp
xorl
mov
add
jmp
aas
mov
clc
sbb
dec
mull
dec
int3
push
insl
movsb
jl
cmp
hlt
subl
sbb
pop
repnz
inc
and
xchg
loop
pop
test
sub
push
shll
aam
mov
in
push
sbbl
mov
fs
loop
rorb
in
or
mov
out
fisubrl
xor
cmc
pop
push
push
repz
add
mov
or
ret
subb
imul
sbb
test
lret
fsubrs
clc
lds
jle
pop
imul
and
rcrl
or
dec
dec
aad
sbb
call
call
pop
adc
loop
daa
dec
test
sub
outsb
pop
pop
mov
test
addl
data16
dec
in
mov
loop
out
scas
dec
inc
stc
mov
in
adc
dec
jmp
insl
jbe
jecxz
jae
mov
cmp
stos
fwait
ds
mov
pop
out
dec
fadd
add
fcmove
jo
inc
jg
imul
std
jo
pop
int3
mov
dec
out
or
and
insl
and
jmp
mov
jb
sub
lea
inc
dec
push
insb
test
mov
sbb
push
ss
imul
mov
enter
rol
pop
or
shl
insl
jae
test
data16
cld
aaa
xchg
sbb
mov
lods
cmpsb
push
push
jnp
inc
mov
adc
push
cwtl
xor
inc
mov
push
mov
fs
push
mov
dec
scas
loop
insl
pop
js
shlb
jnp
out
xor
aam
mov
outsb
shrb
pop
icebp
std
scas
std
out
push
sub
push
pop
in
outsb
push
mov
data16
cmp
xchg
inc
andl
push
lret
push
push
push
adc
jno
loopne
pusha
les
stc
ror
fisubs
pushf
dec
push
ds
fnstenv
call
adcb
pop
xchg
jne
jle
lock
scas
jb
xor
mov
push
pop
xorb
and
push
cltd
mov
and
daa
sub
adc
jg
dec
inc
add
pop
mov
jo
test
data16
sbb
mov
or
sub
out
les
fistl
inc
cld
mov
add
ljmp
xor
dec
jne
dec
or
les
cmp
cltd
sbb
jp
jmp
jb
ficomps
push
mov
out
pop
scas
outsl
xchg
and
test
or
loopne
ficompl
add
jmp
inc
gs
ror
sub
sub
push
pop
inc
mov
cmpsl
stos
push
jl
push
cmp
lock
cli
lcall
or
mov
cmpsl
in
gs
pop
std
sbb
stos
sub
dec
jbe
lock
pop
xchg
mov
mov
adc
inc
cmovl
cmp
shll
xlat
in
out
movsb
and
out
jmp
jl
mov
fbld
jecxz
aas
jmp
mov
cmp
push
leave
push
jbe
sbb
daa
data16
mov
mov
divb
sbb
out
enter
inc
mov
cs
js
sub
es
fmul
in
je
xor
mov
loope
pop
test
cmpsl
lods
mov
dec
call
fwait
push
dec
es
shlb
mov
das
mov
jns
mov
dec
rorl
lock
jae
xlat
scas
or
mov
outsb
xchg
fucomi
lret
aad
jg
xlat
push
cmpl
xor
imul
fnstcw
mov
and
cmp
es
sbb
add
inc
js
rorb
or
push
jp
fidivrl
negl
jbe
adc
or
lahf
and
imul
fistpl
push
mov
ljmp
push
adc
stos
sub
sbb
xor
pop
in
add
lea
adc
push
sarl
sbb
sar
outsl
or
jo
jl
iret
and
cmp
psrld
pop
and
or
and
push
pushf
mov
call
call
and
xchg
inc
rcll
pop
fs
and
andb
stos
pop
sbbl
sbbl
jge
push
add
stos
cmc
push
das
pop
iret
lret
or
ret
xor
and
dec
lods
xorb
lds
cs
in
enter
cld
fdivs
ss
arpl
xchg
ss
cmpsl
repnz
xor
sti
or
mov
pop
rol
cli
in
or
push
fldenv
outsb
icebp
pusha
addb
cld
pop
xchg
mov
out
nop
inc
sbb
hlt
or
dec
stc
add
push
push
jnp
icebp
cmpl
push
pop
add
mov
mov
insb
mov
cmpsb
push
mov
inc
and
lea
out
cmp
popa
sub
arpl
or
xchg
pusha
mov
adc
das
xchg
cmp
iret
push
mov
cli
pop
jecxz
cmp
adc
icebp
jne
je
subb
into
or
or
pusha
or
in
mov
jne
cwtl
sbb
sub
inc
int3
jle
fistps
xor
lea
sbb
in
das
fbstp
add
dec
push
add
cmp
hlt
cmc
pop
out
pop
hlt
xchg
jecxz
in
inc
mov
mov
ja
shll
imul
ljmp
stc
repz
push
test
std
or
aaa
ret
or
lea
stc
shlb
or
inc
cmp
dec
push
sub
mov
stc
cwtl
mov
dec
orb
aad
test
add
sti
test
add
js
mov
mov
mov
fistpl
jle
cli
mov
ja
jnp
mov
dec
pusha
xor
testb
adc
jae
push
imul
push
adc
xor
mov
xor
jno
sub
into
dec
jno
sbb
mov
cmpsl
aam
mov
jb
mov
rolb
loope
xchg
iret
sub
sbb
sti
daa
add
sub
add
fimull
pop
fisubrs
xor
cmp
sbb
out
into
mov
aam
sub
and
adc
lahf
dec
sub
into
mov
adc
lea
mov
daa
xor
scas
and
jne
lods
mov
test
sub
or
adc
movsb
sub
jl
or
rorb
ds
jmp
aad
arpl
shrb
adc
push
iret
ret
fwait
add
inc
imul
movsl
pop
mov
adc
jo
sub
jle
cmp
cmpsl
xor
popf
mov
adc
push
jmp
add
jmp
mov
mov
push
sarb
cs
mov
sub
inc
mov
daa
mov
xor
inc
xchg
enter
into
xchg
mov
cmc
orb
dec
xor
loopne
ror
ds
das
cli
cmp
jmp
xorl
sar
cmp
nop
das
stc
xorl
popf
lret
inc
jno
popf
hlt
mov
inc
inc
lcall
insb
pop
push
push
aad
push
adc
adc
std
xchg
rcrb
fdivl
shlb
nop
std
pop
in
out
push
in
add
mov
dec
xorb
push
cs
cld
xchg
out
mov
lds
into
mov
daa
test
and
add
arpl
mov
hlt
and
sbb
test
fmul
xchg
mov
mov
imul
roll
out
arpl
pop
mov
pushf
mov
mov
repnz
cmp
sti
ja
xor
cltd
add
mov
sub
cmpsl
push
les
mov
mov
fsubs
mov
push
mul
movsl
or
stos
fimull
cwtl
inc
imul
xlat
in
fwait
int3
push
pop
push
dec
arpl
lods
xor
xor
ss
sbb
lahf
mov
aas
xchg
mov
and
jecxz
orb
adc
add
addr16
cmovle
loope
mul
mov
out
xchg
add
cmp
cltd
hlt
aas
push
pop
jno
lahf
std
imul
popf
xor
mov
jb
add
inc
cltd
mov
test
daa
fimuls
arpl
lret
js
or
test
xor
sti
mov
inc
insl
xor
imul
ljmp
adc
pmaxub
xchg
xchg
push
sub
fwait
sbb
cld
xor
jb
mov
movb
jl
push
xlat
and
hlt
xchg
and
sbb
les
lock
lret
push
shll
mov
fwait
pushf
sub
rcr
scas
xchg
mov
push
mov
push
sub
pop
das
sub
js
pop
cmpsl
out
hlt
dec
jnp
movsl
inc
push
loope,pt
loop
add
cmovne
cmp
es
imul
xchg
mov
pop
sbb
jmp
aas
stos
jno
ficomps
leave
fs
mov
adc
push
dec
mov
sti
lahf
inc
inc
sub
flds
cli
xchg
cwtl
lods
aam
cld
adc
mov
stc
cmp
mov
cmpsb
les
add
rcrb
rcrb
fmuls
or
push
xchg
ds
ds
mov
das
xchg
imul
xor
insb
lea
mov
cwtl
sbb
rolb
popa
clc
std
inc
push
lods
les
dec
mov
mov
ljmp
sahf
cmpsb
xchg
movups
mov
int3
cmc
lock
mov
sub
fnsave
mov
mov
rcl
loope
mov
fst
loope
lock
push
or
jecxz
paddd
xor
xchg
dec
add
jb
inc
push
stc
lock
mov
inc
ret
or
sub
fwait
scas
lret
lahf
test
iret
roll
xorl
loop
push
and
or
dec
stc
ss
xor
shll
cmp
lods
out
push
dec
test
mov
xor
push
mov
addl
adc
dec
cmp
dec
xchg
lods
stos
sahf
ds
push
push
mov
mov
out
mov
pop
dec
and
cmp
push
sbb
inc
pop
xchg
call
jo
pop
js
jl
stos
dec
popa
and
or
das
imull
push
ret
dec
dec
and
pop
adc
loop
jbe
adc
mov
fidivs
dec
push
push
in
cmp
or
movb
cli
out
aad
jno
push
xor
ljmp
xlat
mov
inc
divl
add
or
xchg
push
movsb
loope
popa
inc
sub
fiadds
jmp
xchg
fnsave
fistps
mov
xchg
fyl2xp1
push
inc
data16
or
in
aaa
mov
insb
pop
test
adc
ret
cmp
ja
jl
mov
mov
xor
imul
mov
int3
mov
inc
mov
pop
cmpsb
data16
push
adc
mov
adc
cmp
sub
mov
cwtl
lahf
fucomip
jl
and
or
shl
pop
and
outsb
sbbb
and
pop
movsb
xchg
fs
push
int3
out
imul
mov
andl
sbb
inc
fsts
pop
xchg
enter
sbb
and
adc
cltd
or
fldenv
and
lahf
cmp
ret
icebp
mov
inc
cmp
dec
xchg
lahf
jnp
mov
push
mov
dec
mov
inc
adc
inc
xchg
jbe
jno
pop
inc
mov
dec
jmp
mov
mov
mov
mov
push
adc
and
stos
xchg
dec
xchg
jmp
imul
fsubl
out
addr16
sbb
xchg
pop
dec
imul
enter
dec
imul
ds
sbb
movsl
bound
insl
jge
sub
inc
hlt
adc
xor
push
sub
fucomp
push
dec
hlt
xchg
arpl
mov
jl
sub
fsts
cmp
and
cmp
mov
inc
cld
pop
push
xor
testb
pop
testl
sbb
push
jnp
mov
sbbb
call
mov
mov
mov
rcl
mov
pop
sub
pop
lret
adc
aas
sub
pop
sbb
cmp
jl
outsb
mov
dec
mov
sub
lcall
dec
in
and
mov
xor
inc
or
push
mov
cmp
outsb
sbb
movsb
jo
mov
test
dec
sub
popa
pop
insb
lret
ret
ret
jecxz
xchg
lret
outsl
cmp
pop
sub
mov
lahf
jmp
pop
dec
in
jl
and
mov
xor
out
dec
pop
mov
or
jb
scas
cmp
movsl
cmp
lret
int
ljmp
mov
iret
adc
outsl
sbb
insl
sub
add
loope
js
fwait
test
mov
rorl
lret
lahf
jo
stc
pop
shll
sub
push
jno
nop
dec
dec
insl
mov
popa
inc
and
inc
stos
add
pop
push
jg
fidivrl
mov
sti
push
and
lds
adc
push
sub
sub
jle
cmpsb
jae
aam
iret
adc
xor
int
arpl
stos
out
push
ret
and
jo
fisttps
cwtl
xchg
jne
bnd
xchg
fstps
mov
cld
rcl
test
and
hlt
xchg
xlat
jl
mov
sahf
pop
xor
icebp
mov
xchg
stos
dec
push
jge
out
loopne
jne
jp
outsb
xor
mov
xchg
lea
mov
lahf
bound
mov
push
inc
mov
std
cmpsl
test
enter
loopne
cmp
push
ror
and
pop
ss
ljmp
divl
jns
sbb
mov
call
sub
jns
sub
arpl
repz
sub
ljmp
cmp
iret
adc
cmp
or
pop
jle
sbb
movsl
dec
mov
xchg
dec
fs
rcll
push
aas
stc
aad
push
xlat
inc
jmp
xor
rol
pop
push
jo
lahf
les
cmp
and
mov
stc
and
stos
sti
sbb
scas
or
mov
insb
and
daa
pop
mov
mov
xor
add
dec
call
mov
lds
adc
sbb
cmp
pusha
adcb
and
push
cmp
enter
xor
lea
or
popa
imul
push
mov
das
in
repz
out
pop
sbb
mov
xchg
mov
bound
loopne
add
jle
scas
nop
lods
aam
or
imul
aas
fisttps
dec
sti
ret
xlat
test
sub
test
push
cmp
gs
mov
mov
fdivl
ja
push
add
xlat
jge
lcall
inc
sbb
jle
mov
push
dec
fidivrl
or
fsubs
stos
mov
mov
push
inc
icebp
insb
xchg
fbld
push
lahf
js
je
stc
xchg
imul
sub
xorl
inc
fistpll
pop
xchg
add
adc
lcall
inc
xchg
push
xchg
jno
mov
test
stos
decb
fimull
out
and
fcmovnu
adc
shrl
push
pop
scas
sbb
dec
mov
push
jp
mov
cmp
or
stc
push
pop
xchg
daa
mov
test
shlb
push
sub
fnstcw
fdivp
lahf
stc
sahf
adc
xcrypt-ctr
cmpsl
pop
adc
xlat
push
repnz
or
mov
xlat
loope
push
mov
lods
mov
dec
insl
movb
hlt
scas
xchg
cmpsl
outsl
pop
call
sbb
push
and
sub
mov
sahf
sbb
shlb
push
add
or
cmpsb
sub
pop
imul
aam
pop
mov
cmpsl
push
pop
sbb
jecxz
pop
mov
outsb
inc
pop
sbb
jecxz
mov
leave
test
mov
ret
mov
xchg
mov
mov
cli
rcrl
mov
sbb
insb
call
movsl
xor
arpl
lret
sub
lock
hlt
mov
sbb
mov
shlb
es
repz
xchg
adc
adc
inc
lcall
in
sub
mov
sahf
aam
test
cmp
mov
dec
popf
imul
pop
js
cmp
imul
push
add
lods
cmp
mov
mov
imul
mov
jp
andb
pop
lods
mov
dec
aas
call
repnz
sti
pop
arpl
push
push
push
mov
testb
jecxz
mov
popa
leave
jne
fwait
lods
ret
mov
mov
dec
cmpsb
mov
aam
inc
sub
ljmp
clc
ret
scas
mov
mov
mov
shll
xchg
cmp
mov
jns
lahf
mov
out
dec
sub
fstl
inc
imul
mov
and
dec
or
mov
mov
repz
daa
and
push
lcall
sub
mov
fisubl
stos
hlt
add
and
in
jp
roll
loope
rcrb
mov
out
mov
add
out
pop
into
jo
mov
cmp
xchg
mov
pop
scas
sub
mov
push
cli
push
mov
clc
addb
mov
in
push
hlt
xchg
push
mov
add
jl
test
jae
mov
adc
dec
pop
push
stos
mov
mov
mov
mov
aaa
inc
mov
repz
pushf
mov
loop
lret
hlt
mov
sub
loope
mov
les
and
call
lret
dec
xchg
mov
cmp
mov
pop
sub
xor
data16
outsl
mov
or
out
mov
push
loopne
int
enter
xor
jb
ret
fcomp
in
or
push
ljmp
add
dec
pop
shlb
xor
notb
mov
fwait
or
dec
inc
push
in
sahf
sub
jns
outsb
out
or
loope
addr16
ficoml
inc
inc
jle
mov
xchg
test
test
mov
xchg
lds
inc
aad
mov
sbb
jge
sbb
test
scas
aam
dec
pusha
popl
clc
jo
mov
jge
ss
test
paddw
outsl
mov
sbb
cmp
and
adc
pop
mov
jmp
ja
xchg
jns
dec
inc
pop
mov
test
jnp,pn
scas
jg
dec
push
push
inc
neg
jg
cmc
or
jg
bound
cmp
pop
scas
mov
jmp
mov
rorl
jg
mov
addr16
mov
add
add
xor
xchg
test
xor
stos
pop
loop
add
jl
add
ds
add
test
mov
test
out
mov
or
mov
arpl
int3
shl
lcall
orb
test
sbb
lds
mov
mov
loopne
stc
sbb
ss
jl
loopne
mov
xchg
pushf
jbe
push
ds
js
shrb
jl
loope
bound
sti
arpl
fsubrs
or
mov
mov
or
adc
lods
push
ret
pop
pop
pop
cmc
lcall
dec
sbb
cmp
adcl
stc
repnz
cmpsb
adc
xchg
in
stos
dec
mov
dec
shrl
pop
push
pop
mov
inc
or
jl
xor
xor
ret
sbb
jecxz
hlt
mov
sahf
xchg
cmp
jl
lret
cmp
inc
cmp
pop
cs
xchg
push
push
adc
fmuls
test
push
das
dec
xor
or
inc
or
jns
xchg
xor
or
jl
ret
fstps
adc
andb
xor
popa
push
cmp
cmp
mov
mov
lret
loop
scas
xchg
fsubrl
cmpsl
mov
mov
cld
mov
and
cmp
inc
ss
addr16
cmp
pop
rcrl
test
mov
mov
ret
xchg
sub
mov
rcll
ret
out
das
inc
mov
mov
xor
fcmovu
idivl
test
aaa
push
xchg
lods
lahf
popf
or
inc
adc
shl
stos
jo
aam
cmp
loope
xor
pop
aaa
sahf
fldt
dec
test
int3
mov
add
sbb
and
subl
clc
dec
outsb
pop
or
frstor
daa
jbe
jnp
pop
adc
push
rclb
data16
ljmp
adc
dec
rcll
add
ret
mov
outsl
hlt
pushf
inc
call
test
lret
sbb
ret
mov
inc
jge
inc
adc
or
dec
dec
rcrl
dec
fwait
mov
xor
mov
insb
pop
stos
ds
fs
pop
cmp
in
sub
cmpsl
les
adc
add
add
fiaddl
mov
add
subl
jae
aam
ja
mov
lods
push
add
insb
pop
dec
cli
push
in
and
fsubs
or
dec
sbb
mov
adc
push
jl
jae
repnz
jb
fiadds
test
inc
add
mov
in
xchg
ds
cmc
pop
cmp
test
lods
mov
xor
xchg
jne
das
or
testl
and
mov
fstl
cwtl
repz
dec
je
mov
imul
es
push
push
ljmp
pop
outsb
ja
in
push
scas
jo
stos
push
movsl
adc
pop
mov
xor
pop
scas
mov
movsb
push
or
mov
add
in
jle
and
daa
shr
adcb
scas
adc
shll
test
sbb
push
adc
xor
cmp
and
sbb
jbe
push
jecxz
cmp
jb
cld
and
mov
out
aad
xchg
pop
mov
jp
sub
popa
lock
repnz
or
jo
mov
cmp
ret
inc
movsb
sarb
mov
cmpsb
roll
cmpsl
sbb
das
inc
faddp
and
pop
fcom
cmp
into
jmp
sti
mov
mov
test
int
cmpsl
xchg
sub
dec
aaa
scas
sub
jno
mov
in
es
rolb
xor
add
shll
leave
popf
insl
addr16
subl
ret
push
push
cwtl
pop
mov
push
sbb
daa
out
xchg
sbb
mov
xor
in
inc
pop
push
fdiv
pop
pop
mov
dec
or
mov
pop
loop
add
xchg
xchg
stos
in
out
lcall
mov
mov
enter
xor
push
pop
aas
ret
rcr
sub
jo
hlt
mov
out
sub
cmc
popf
hlt
sbbb
xor
add
fstpl
pop
push
xchg
pushf
mov
fstl
fbstp
dec
cmp
mov
push
and
stc
test
add
fcoml
sahf
mov
add
sbb
or
negl
testb
xlat
scas
jecxz
rolb
or
mov
je
out
pop
scas
les
inc
enter
cltd
sbb
inc
push
out
xor
js
mov
adc
inc
dec
mull
jnp
sbb
mov
sub
orb
sbb
jmp
pop
sbb
out
bound
shr
ljmp
test
arpl
adc
in
je
rcrl
insb
xchg
ljmp
js
push
xchg
mov
add
fcomi
cmc
mov
mov
pop
mov
scas
ljmp
mov
sub
xchg
and
cmp
sti
jge
inc
inc
loop
enter
push
push
fdivrp
icebp
or
jbe
add
sbb
inc
mov
mov
xor
iret
mov
jmp
jl
das
mov
negl
lret
insl
cmpsl
add
in
pop
add
add
jmp
aaa
push
mov
fwait
jl
lret
jns
mov
inc
and
loope
dec
cmpsb
int3
insl
adc
movsl
cmp
push
out
gs
cmc
les
lcall
int3
arpl
mov
divb
das
call
jp
push
pop
and
dec
out
test
test
dec
cmp
roll
dec
lret
cmp
lahf
mov
out
and
sahf
dec
xor
ret
call
xchg
adc
adc
push
fxch
mov
and
cmp
xchg
dec
adc
or
mov
insb
adc
jecxz
dec
inc
cltd
cmc
and
cwtl
or
negb
or
lret
dec
imul
pop
sub
das
mov
into
hlt
dec
js
pop
rcll
cmp
out
adcb
cmc
or
jmp
lret
int
aas
pop
jmp
rolb
mov
pop
and
sahf
test
mov
in
push
adcb
or
mov
and
xchg
inc
xchg
fcmove
xchg
mov
addr16
aaa
sub
out
stc
push
aam
xor
sub
cmp
push
call
pop
movsb
mov
lds
xchg
or
lahf
out
mov
inc
push
and
adc
cmp
mov
mov
cmpsl
push
scas
sbb
or
in
call
or
dec
add
in
dec
pop
dec
cmpsb
xor
mov
call
lcall
fsubrl
push
push
pusha
ret
cltd
sbb
pop
loope,pt
push
sti
rcl
sahf
jnp
jae
and
xlat
aas
cs
push
push
loope
repnz
icebp
mov
mov
in
fimull
add
mov
xchg
movsb
lods
dec
fucomip
cmp
fs
xor
loop
xor
sub
jne
das
in
push
outsb
push
movsb
clc
sbb
mov
popf
push
shrl
mov
jne
inc
fdivl
cmp
lds
inc
push
test
cwtl
or
or
mov
jne
sub
int
or
ds
dec
and
scas
sub
jg
sahf
adc
popa
mov
out
bound
jae
jecxz
cmp
data16
lds
into
adc
inc
fs
arpl
sub
out
in
dec
loop
xchg
jae
fsts
cwtl
test
pop
push
pop
mov
xor
dec
cwtl
push
xchg
cmp
sub
insb
out
aad
int
or
lods
out
test
mov
cli
adc
cld
inc
mov
sub
sarb
mov
mov
loop
int3
xor
popa
dec
je
mov
pop
mov
mov
cli
mov
push
mov
pop
nop
jae
pop
cmp
or
outsl
dec
pop
hlt
pusha
lret
pcmpgtw
popf
dec
movsb
inc
jb
jbe
mov
cwtl
outsb
mov
fistl
push
in
push
stc
jmp
dec
cmp
outsb
push
adc
bound
loopne
out
inc
ds
mov
popa
iret
jae
lret
aam
in
fcoml
sarl
outsl
shll
aaa
clc
xchg
ja
js
adc
xchg
lahf
roll
mov
mov
pusha
mov
nop
jno
call
enter
mov
ficompl
push
loopne
adc
sub
cmp
insl
jb
sub
push
sbb
out
inc
in
ret
push
inc
mulb
jae
xchg
push
adc
xor
push
mov
mov
fadds
pop
sbb
call
add
idivl
mov
lea
pop
daa
mov
sbb
jbe
jae
fldcw
jno
or
arpl
jnp
ret
mov
pop
lods
cmpsb
adc
or
cmpsb
pop
stos
add
loop
adc
jl
xorl
mov
sub
sub
pop
push
in
or
cli
imul
mov
xchg
arpl
stos
call
cmp
mov
lock
cmc
xor
sbb
cmp
leave
in
daa
sub
sbb
testl
sub
cmp
dec
rcl
negb
xlat
lcall
inc
stc
adc
fldt
pop
add
or
dec
or
cmc
add
aas
and
pop
ljmp
cld
test
lcall
pop
lahf
lret
out
mov
xchg
mov
inc
mov
lock
out
mov
mov
xchg
loopne
xchg
sarb
cs
call
mov
cld
ret
dec
lea
rol
mov
or
fucomip
js
cltd
ficoml
out
sahf
jg
cmp
comiss
xchg
nop
push
iret
push
insb
sub
push
and
pcmpgtw
out
dec
sub
jge
sbb
cs
mov
out
inc
loopne
imul
jbe
jne
inc
imul
push
jg
out
rol
out
mov
in
std
jo
jg
lods
cltd
jb
or
lods
pop
test
aaa
cmc
lods
in
repnz
pusha
or
ret
mov
or
dec
stos
mov
bound
and
sub
dec
push
enter
sub
xor
mov
xor
dec
or
xor
add
or
pushf
out
aas
jno
shrb
push
sbb
mov
lock
sar
jbe
pushf
jae
pop
or
jl
add
cmp
adc
dec
imul
push
or
jns
mov
add
jge
mov
aaa
in
inc
dec
cwtl
mov
dec
mov
test
lock
push
test
and
loop
dec
repz
cs
pop
push
jne
adc
ret
fwait
mov
out
aad
jne
xchg
xchg
dec
or
movups
scas
xchg
and
outsb
fildll
push
imul
sub
xchg
test
mov
fsubrp
bound
and
fadd
mov
sarl
mov
mov
dec
loope
and
lods
and
ss
outsb
add
mov
in
movsl
mov
cmp
repz
cmc
push
iret
dec
scas
rorb
cmpsb
outsl
cmp
int
or
add
cmp
repz
push
shl
mov
sub
out
or
ja
adc
push
ficompl
mov
jne,pt
pop
ljmp
jno
loopne
mov
ret
adc
pusha
adc
test
sbb
pop
cmp
mov
fildll
xor
pop
jle
push
out
adc
sbb
inc
adc
jnp
int3
fs
ret
pusha
cmp
adc
pop
xchg
adcl
nop
xchg
lods
xor
ret
pop
leave
pop
in
push
mov
icebp
out
cwtl
pop
aad
lahf
cmpsb
mov
je
pop
cli
les
mov
fcomi
lods
lahf
mov
pop
push
clc
int3
loop
leave
test
popa
pop
xchg
pushf
mov
test
pop
loope
andl
out
pop
outsb
jmp
orl
sbbl
inc
lods
jp
cmpsb
or
adc
fucomi
push
cld
popa
stos
pop
test
xor
adc
leave
ja
sbb
sbb
sbb
stos
imul
xchg
or
out
ds
xchg
xchg
scas
aam
jl
add
fs
enter
inc
inc
test
cmc
lea
lcall
sbb
stos
pop
sub
adc
pop
pop
sahf
mov
mov
add
sbb
popf
xchg
push
insl
push
adc
shl
or
adc
jo
jge
mov
or
mov
cmpl
insl
xchg
fs
adc
jmp
and
das
cwtl
insl
outsb
scas
leave
rcr
out
jbe
jbe
inc
jle
cmc
ds
jb
jb
xor
shl
fs
xlat
mov
adc
outsl
mov
inc
pop
in
dec
js
je
ret
push
mov
lret
mov
notl
jbe
leave
insb
mov
cmp
mov
sub
mov
fs
rcll
xchg
bound
pop
jle
faddl
xor
testl
into
enter
pop
repz
sub
out
aas
xchg
int3
scas
or
jne
adc
xor
and
rcll
movl
push
add
enter
cmc
in
shlb
xchg
sbb
loope
mov
rorb
es
mov
sti
ds
dec
das
dec
dec
xchg
movsl
and
orl
mov
mov
jo
loope
sbb
xchg
and
repnz
and
jl
pop
add
mov
out
cmp
adc
fldenv
int
mov
lcall
mov
push
inc
mov
dec
jnp
pop
mov
xor
sar
mov
cmpb
xor
and
mov
in
jbe
pop
inc
sbb
imul
sahf
cmpsb
and
fldenv
inc
scas
idivb
and
ss
and
fidivrl
dec
fs
pop
mov
inc
sbb
clc
cmc
dec
popf
ss
sub
pop
out
mov
lret
xor
scas
arpl
jle
push
scas
mov
or
sub
xchg
mov
shrl
add
call
lret
out
outsb
mov
loop
repz
out
pop
btr
into
dec
sbb
sbb
pop
pusha
sarb
jns
mov
push
and
in
push
adc
in
jl
inc
mov
add
sbb
inc
aad
je
mov
iret
test
lods
leave
movsl
leave
inc
loope
lcall
mov
xchg
or
mov
xchg
xor
xor
mov
test
inc
xor
cmp
scas
iret
inc
or
cmpsb
cmp
push
lret
test
inc
xchg
pop
inc
xchg
push
xor
movsl
lahf
mov
lea
filds
and
mov
pop
shll
add
jl
mov
and
scas
shlb
repz
cmpsb
push
imul
fcmovu
movsl
xor
add
push
mov
lds
push
dec
or
mov
adc
pop
or
loopne
sub
xchg
pop
mov
das
dec
ret
or
jb
cmp
movsl
les
xor
in
lret
xchg
cli
dec
sbb
xor
popf
jns
xor
leave
jp
sbb
mov
jo
and
sub
insl
jle
sub
xor
mov
inc
cmp
mov
pop
sahf
stos
psllw
cmp
mov
addl
mov
pop
ficompl
pop
js
dec
or
pushf
pusha
add
mov
or
es
sub
pop
fdivrs
pushf
cmc
pop
pop
iret
mov
leave
or
mov
sub
in
or
sub
adc
insl
cwtl
popf
adc
imul
mov
shrl
mov
dec
jb
decb
push
lahf
dec
pop
xor
sahf
cmpl
push
mov
fcompl
decl
pusha
mov
mov
scas
dec
mov
pop
xchg
loop
cmp
push
pop
xchg
movsl
fmul
mov
maskmovq
imull
cmp
cmp
mov
insb
jp
test
je
pop
ds
popf
xchg
mov
addb
adc
popf
xlat
cmp
lds
pop
sbb
imul
and
lock
mov
dec
jmp
cmp
jle
ljmp
xor
nop
nop
inc
push
in
dec
inc
and
lods
js
stc
mov
nopl
xor
loope
into
sbb
sti
outsb
mov
mov
hlt
add
popa
out
lret
dec
sahf
xchg
js
rorl
push
ja
dec
popf
in
fsubrl
shl
or
popa
pop
push
add
shrl
sbb
inc
arpl
in
std
and
mov
cs
xor
je,pt
mov
add
dec
jmp
iret
pop
popa
cmpsb
fs
push
int3
xchg
adc
xor
nop/reserved
subl
les
shll
out
push
xor
pop
mov
dec
movsl
inc
cmp
loop
mov
out
aas
sarb
aaa
sahf
mov
inc
jo
sub
pop
xor
sbb
pop
stc
out
jp
mov
leave
inc
pop
pop
movsb
test
aas
xor
test
nop
mov
or
pop
hlt
lcall
mov
xor
jmp
push
jge
fs
add
mov
ret
loop
aad
mov
loop
mov
lock
add
sbb
add
sahf
cld
lea
dec
inc
inc
mov
iret
les
mov
pop
je
push
sub
mov
fmuls
test
dec
ficomps
incl
inc
cmp
xor
cld
xor
sarl
ret
lret
dec
xchg
dec
mov
scas
dec
lea
mov
dec
sub
daa
sbb
fdivrl
cmpsl
test
mov
sbb
cmp
je
dec
or
dec
sbb
add
mov
fisttpll
out
xchg
xor
mov
xor
adc
das
sbb
mov
sahf
jmp
int3
lock
mov
pop
push
in
lcall
aam
inc
js
adc
inc
lcall
sub
lds
test
fsubrs
arpl
leave
pop
mov
jne
push
cltd
xchg
jmp
mov
subl
imul
inc
xor
gs
mov
inc
fmul
and
and
imul
xor
arpl
dec
lea
popf
lret
int
faddl
and
or
mov
gs
push
mov
popa
hlt
pop
jg
out
cmp
imul
or
mov
mov
mov
xchg
adc
lods
notb
popa
push
add
or
ret
out
pop
clc
js
arpl
in
js
xor
pop
cmpsb
push
hlt
push
push
xchg
outsl
cltd
xchg
addr16
add
lret
sub
sbb
mov
stc
push
push
icebp
push
mov
xlat
sbb
pop
sbb
sahf
cmpsl
cld
mov
and
xor
adc
xchg
sub
xchg
sbbb
faddp
pop
mov
jge
mov
stos
gs
push
andb
jg
out
movsl
mov
lret
fstpl
xchg
out
pop
sub
ds
es
lret
ret
mov
push
adc
es
movsl
cmp
push
enter
cld
add
aad
ficoml
mov
js
jecxz
jae
lret
inc
loopne
lcall
je
movsb
test
or
mov
in
dec
ret
test
lods
mov
ds
arpl
mov
jg
xorb
fsts
fiaddl
sbb
sub
movsb
or
or
in
jg,pt
mov
bound
adc
gs
jb
jno
std
sub
sbb
outsb
pop
stos
sbb
xchg
iret
jg
hlt
leave
jno
mov
dec
lods
lods
push
xor
cmp
pop
fsubl
hlt
or
enter
mov
cmp
mov
iret
in
loope
icebp
jl
das
xor
jns
testb
dec
iret
filds
mov
sub
cmp
jg
sbb
sub
fistl
inc
js
in
sub
setge
adc
dec
or
pop
adc
ret
cmp
out
push
sti
xor
cmp
push
fnsave
cmp
ficoms
add
mov
mov
gs
pop
inc
fiaddl
sbb
cli
arpl
adc
mov
push
sarb
inc
into
xchg
movsb
rcrl
in
sbbl
addr16
jbe
cwtl
mov
gs
jb
lret
shlb
push
mov
loop
loopne
jne
movsl
sahf
sbb
test
pop
add
hlt
cwtl
add
mov
ds
adc
and
bound
push
fdivl
aam
sti
test
sbb
jnp
out
int
push
lods
mov
pcmpeqb
mov
mov
sub
lahf
mov
mov
insb
movl
ffreep
inc
leave
inc
shll
insb
mov
xchg
xchg
pop
mov
mov
dec
inc
and
std
dec
add
in
lcall
jns
mov
jle
in
lea
xchg
jecxz
adc
cld
das
rcll
sbbb
sbb
cmpsl
adcb
sbb
out
pop
inc
rorb
test
cli
and
bound
mov
cmpsl
cmp
mov
sbb
ss
in
sbb
lret
inc
or
aad
mov
mov
dec
sub
xchg
mov
push
sub
add
add
aam
iret
iret
insl
cmp
mov
pop
xlat
call
jno,pn
arpl
inc
xchg
fiadds
xor
push
push
repz
nop
sub
push
mov
gs
cmpsb
adc
cmp
popf
sbb
insb
mov
ljmp
cmp
aam
mov
xchg
arpl
cs
or
fdivrl
push
cmp
push
mov
dec
mov
mov
ja
add
cmp
fmul
jns
cltd
xlat
lds
jecxz
adc
pushl
int
sbb
or
stc
cli
dec
sbb
xchg
dec
pop
xchg
or
fucomp
lods
leave
jo
cmpsl
dec
xlat
ffree
inc
cwtl
repz
stos
lods
inc
aam
push
dec
in
cli
jle
adcb
xor
mov
xor
xor
pop
lcall
xchg
or
xor
inc
loop
das
xchg
adc
adc
jmp
das
mov
push
stc
xchg
lret
add
pop
inc
adc
cmc
loope
int3
cmp
mov
or
or
out
hlt
lahf
mov
shlb
jns
lods
loop
inc
das
sahf
inc
or
xchg
dec
push
mov
and
mov
jns
push
ss
push
sbb
cmp
pop
mov
or
or
in
loopne
or
mov
jl
cltd
addl
xor
sub
mov
lods
mov
mov
ret
xor
dec
popf
outsb
push
inc
xchg
adc
js
stos
jno
divb
ds
out
adc
jl
stos
pop
frstor
leave
popa
push
and
dec
loopne
pop
inc
add
cmpsb
dec
cmp
in
mov
ljmp
and
stos
aam
jge
push
mov
and
inc
mov
pop
lds
mov
or
adcb
mov
call
cwtl
pop
and
fldcw
cmp
inc
push
or
jg
rcrb
mov
mov
adc
fisubs
and
xchg
imul
mov
je
push
mov
jae
rcrb
sti
mov
decl
outsl
repnz
dec
cs
sahf
aaa
jb
sub
cmp
jns
xor
xchg
xor
mov
pop
int
stos
aam
push
pop
negb
jne
inc
jecxz
xchg
stos
xchg
shlw
sti
push
jp
pop
xchg
shlb
sbb
xchg
fadd
inc
mov
stos
clc
dec
dec
dec
outsl
pop
insl
ret
xchg
insl
ljmp
dec
pop
and
stc
jmp
mov
xchg
and
test
xchg
addl
xor
jg
xchg
jecxz
push
dec
fsubrl
mov
dec
das
movsl
subl
mov
ja
sbb
and
push
out
ret
out
das
nop
jmp
inc
dec
dec
das
xchg
inc
and
ret
sbb
pop
sub
mov
xor
rclb
mov
lea
push
jbe
push
sub
in
xor
sub
adc
loope
mov
xchg
xor
sahf
xor
mov
test
addb
xchg
rorb
add
sub
lds
aas
clc
xor
ljmp
or
lahf
cltd
dec
sbb
dec
jnp
mov
cmp
int
adc
and
pushf
repnz
dec
ljmp
ret
outsb
fstpl
xor
adc
adc
orl
insl
daa
fisttpll
les
ds
xor
fdiv
xchg
push
dec
push
out
mov
dec
add
xlat
sti
fcompl
sub
jmp
stos
cs
jg
int
dec
sbbb
gs
gs
cmp
ja
int3
int
sub
leave
mov
leave
and
or
ret
ss
add
and
flds
xchg
arpl
call
sub
ja
js
int3
mov
push
aas
or
aad
clc
fcoms
inc
adc
fcoms
push
das
pop
xchg
add
cmp
int
jg
popf
in
mov
xlat
test
daa
popa
ret
inc
sbb
cmc
mov
push
dec
push
or
xchg
cmp
cmc
addr16
push
or
fldlg2
xchg
cmp
orb
pop
repnz
xor
into
cltd
xchg
int3
int
lahf
mov
daa
jbe
sbb
movsb
stos
xor
sbbl
shlb
mov
dec
dec
lahf
and
mov
mov
add
imul
inc
pop
xlat
loope
pop
sbb
adcl
push
add
or
daa
push
out
mov
sbb
fsubl
push
or
std
and
xor
rorb
inc
movq
cmpsl
jnp
les
testl
rcrl
test
cmpsb
cmpsl
subb
je
push
sarb
rcrb
ds
sbb
add
arpl
aas
xor
iret
icebp
pop
out
loope
pop
jae
mov
push
nop
jno
pop
jp
enter
inc
mov
stos
or
dec
adc
lds
int
clc
inc
popf
jb
les
lret
adc
push
jp
shlb
or
not
jne
repz
mov
jmp
mov
adc
mov
add
mov
mov
fisubs
jb
xchg
adc
xchg
stc
jo
fildll
test
jg
or
push
adc
iret
mov
and
jns
or
mov
sbb
adc
dec
inc
jbe
mov
jmp
mov
cmpsl
pop
cmp
iret
aam
push
pop
fcmovnbe
jb
ljmp
sahf
cmpsl
fcomps
fidivrs
cmpsl
adc
cli
sub
mov
sub
mov
sub
xchg
pop
sub
je
aam
sar
sub
hlt
inc
jle
inc
push
cmp
xor
xor
push
imul
lcall
add
insb
cmp
mov
addb
out
xor
or
add
add
jbe
push
or
outsb
or
xor
jno
xchg
cmp
cmp
fucomi
dec
insb
sub
js
pop
push
test
push
icebp
faddl
sahf
xor
imul
or
ret
mov
sub
loopne
pop
call
jp
push
loope
add
idivb
aad
aaa
int3
xor
lcall
enter
mov
pop
sbb
mov
and
inc
push
sbb
jo
sub
jmp
cld
pop
adc
int3
push
or
pushf
adcb
push
xchg
icebp
stc
inc
push
xor
push
in
fdivrl
push
clc
mov
clc
push
leave
pop
dec
mov
mov
stos
in
insl
push
subl
add
inc
push
sarb
or
mov
out
std
fucomp
jnp
fsubl
push
xor
cmp
das
xchg
xor
mov
add
pop
adc
gs
test
cmp
xchg
into
push
mov
xchg
cltd
notl
daa
mov
push
adc
dec
cmpsl
int
cli
sbb
mov
fwait
mov
rol
or
loop
stc
add
sbb
int
dec
adc
sahf
lods
insl
jae
cmpsb
sbb
sahf
ds
mov
push
jge
push
dec
mov
repnz
stos
push
imul
xor
mov
xor
imull
add
mov
mov
dec
or
inc
sub
in
sbb
dec
int3
or
sub
push
xor
scas
int
sbb
push
lret
sub
out
dec
decb
fldt
xchg
stos
ljmp
pushl
push
loope
imul
pop
cmpsb
jecxz
mov
test
mov
mov
ret
push
sub
mov
mov
sub
cmpsl
mov
clc
gs
repz
dec
inc
in
movsb
cmp
lret
xchg
aad
stos
mov
imul
mov
insb
adc
jl
mov
or
lods
sub
mov
outsl
ret
and
sarl
mov
xchg
adc
mov
mov
sub
inc
faddl
xor
fmull
inc
pop
mov
jno
cmpb
leave
imul
sub
pop
jne
sbb
stos
sub
shrb
jae
xabort
mov
mov
sub
or
cltd
pop
cltd
adc
div
cmp
ss
sbb
fld
mov
mov
inc
cmc
xchg
adc
xor
daa
jg
jl
push
imul
popa
icebp
pushf
pop
sbb
mov
adc
leave
scas
ficomps
xor
adc
out
int
or
es
int3
hlt
xchg
xchg
outsl
xchg
sbb
push
cmp
roll
cmp
cmp
jnp
cmpb
movsb
cwtl
inc
and
outsb
push
sbb
test
mov
ret
or
inc
or
dec
aad
pushf
mov
dec
aaa
cmc
sbb
lea
xchg
jns
sbb
push
inc
js
sbb
push
push
jmpw
adc
and
jge
push
cwtl
or
push
lret
movsl
push
dec
idivl
inc
cli
call
pop
syscall
jp
enter
js
outsl
je
push
ret
outsb
or
push
lods
mov
or
adc
xor
testb
mov
xor
setno
cmp
sub
sbb
dec
cld
mov
jg
sub
aas
cmc
mov
insl
dec
std
xor
stos
cmp
adc
dec
jp
inc
push
cmpsb
push
or
cmp
roll
imul
aad
pop
mov
pop
mov
cmc
sub
lods
lods
inc
mov
inc
mov
lahf
mov
cli
jbe
fiadds
cltd
js
pushf
push
arpl
xchg
inc
test
out
mov
jne
test
mov
cmp
jae
inc
cmp
adc
sub
lea
aam
addr16
jo
add
loopne
aaa
inc
jb
mov
pop
jp
pop
rcrl
sahf
cmp
fcmovnb
es
lods
push
test
sub
sub
decb
bound
mov
adc
pop
rclb
sbb
aam
aam
sbb
cmp
test
aam
ret
ljmp
pop
enter
aas
xchg
inc
mov
mov
std
cmp
or
push
imul
loope
sbb
cmp
popf
dec
push
leave
xor
inc
loop
negb
xor
bound
or
push
adc
mov
push
cmp
loop
push
mov
xor
mov
push
mov
lcall
and
xchg
arpl
sbb
inc
pop
cmp
aas
fs
and
std
repz
mov
adc
jb
movsl
imul
shl
ss
out
mov
cmc
inc
out
push
arpl
test
xor
popa
aam
mov
imul
mov
stc
inc
add
xchg
adc
jae
daa
pop
push
add
mulb
add
mov
cmp
inc
in
mov
aam
jne
add
xlat
sbb
push
icebp
fs
lcall
xor
mov
pop
into
lock
mov
mov
insl
jnp
movl
arpl
jbe
mov
inc
loope
dec
cmp
sti
ret
insl
cmp
mov
adc
jo
add
xchg
cltd
enter
jp
xor
dec
mov
cli
xor
mov
ret
push
or
mov
inc
mov
test
lgs
out
sbb
mov
aam
sbb
cmc
sbb
jecxz
dec
add
cltd
sub
imul
rcl
scas
mov
xchg
pop
mov
roll
movsb
fsubrp
sahf
mov
xchg
mov
add
xchg
mov
popaw
pop
sub
adcl
add
cmp
sbb
push
shll
mov
push
stos
push
push
sub
ja
inc
in
cs
or
fiaddl
stos
or
xchg
arpl
cmc
gs
inc
les
mov
dec
mov
cwtl
leave
int3
mov
repnz
test
js
inc
inc
ja
int
rcrl
jecxz
imul
mov
outsl
sahf
icebp
addl
lods
xor
inc
add
sub
inc
sbb
out
and
or
sub
cwtl
pop
in
es
dec
shl
addl
in
push
loopne
or
jl
rolb
add
pop
mov
mov
rcl
sub
lret
into
cs
push
xor
loop
add
xchg
xor
mov
jge
jmp
jne
sub
mov
out
push
gs
inc
sub
test
ds
insl
fld
pushl
fldcw
push
add
jecxz
ljmp
dec
dec
adc
iret
xchg
push
enter
out
pcmpgtd
inc
sbb
hlt
mov
push
into
mov
push
dec
sbb
mov
pushw
sub
mov
mov
mov
sbb
and
mov
sbb
loop
jbe
pop
loop
xchg
lret
sahf
js
sub
rsqrtps
xchg
movsb
rcrl
dec
xchg
rorl
ja
stos
push
mov
and
cmp
xchg
cli
fwait
aas
jnp
push
shll
sahf
mov
fwait
les
lods
xor
fidivrl
jmp
in
push
xchg
and
jno
leave
aam
iret
movsl
xor
dec
jmp
jne
inc
jg
mov
popa
push
xor
mov
pop
aad
jle
cmc
movb
loopne
push
mov
xchg
xchg
mov
mov
hlt
gs
dec
mul
test
inc
push
and
pushf
xor
and
test
add
add
shl
xor
jge
rolb
push
fwait
mov
xor
ljmp
ret
hlt
jp
imul
outsl
push
cmp
shl
loopne
mov
lea
lcall
pop
out
pop
stos
cmpsl
xor
inc
push
mov
arpl
in
and
mov
adc
icebp
loope
insb
daa
dec
mov
jns
mov
ret
out
push
mov
jns
mov
pop
std
cli
arpl
int
xor
push
shlb
jle
push
jae
mov
cmpsb
cltd
pusha
xchg
aad
or
js
popa
sub
ret
dec
arpl
mov
sbb
sub
mov
mov
xor
bound
popa
shll
dec
lods
jecxz
sub
sub
insl
loope
mov
inc
inc
movsb
test
adc
outsb
gs
int
cmpsb
bound
mov
and
shrl
test
daa
jle
jg
out
aas
andb
aaa
pop
and
push
mov
xlat
in
mov
aas
bsf
and
int3
ss
push
mov
in
lock
sub
loop
ja
out
or
call
pop
jp
inc
movsb
cmpsl
call
and
add
out
and
aad
mov
daa
lcall
mov
xorl
mov
sbb
pop
data16
pop
add
and
sti
cmp
xchg
or
fadd
js
dec
pop
ret
or
cmp
das
sub
int
pop
jg
cltd
push
ret
jbe
popf
dec
shll
mov
sti
arpl
pop
pop
xor
mov
gs
mov
add
lret
xor
pop
jecxz
lods
jno
dec
mov
jne
pop
pop
pop
loop
inc
or
gs
jmp
pushl
mov
cmp
ja
rcrb
push
loope
scas
insl
movsl
push
and
xchg
add
inc
mov
dec
and
xor
mov
lahf
mov
xchg
xorb
xchg
gs
xchg
or
jmp
sub
add
mov
ret
push
cmp
lahf
jne
push
adc
fdivrs
ficoms
das
xor
xor
xor
sub
sbb
or
cli
addl
test
popf
andl
inc
dec
cld
jge
das
daa
inc
xchg
jle
es
imul
and
jb
or
push
mov
ret
iret
out
aam
addr16
lods
je
rcll
imull
cmc
mov
mov
std
jle
xchg
sub
div
sbbb
ret
mov
nop
ss
lcall
jbe
inc
pop
leave
shlb
mov
jno
add
in
mov
in
out
stos
xchg
clc
outsb
mov
cwtl
and
xorb
inc
fimull
aam
pop
adc
xor
jo
mov
ret
imul
and
in
pop
xor
fcmovne
andb
push
stos
jecxz
jns
test
sub
aas
push
aaa
jnp
lods
sbb
jb
push
sbb
xchg
mov
lods
out
lea
xchg
faddl
or
ficoml
sub
cltd
ss
jnp
stos
nop
stos
out
lret
int
cmpsl
aam
sub
inc
ret
fs
inc
movsb
sbb
jno
repnz
aad
sub
push
mov
inc
loop
ret
js
ret
into
gs
fwait
imul
stc
lea
mov
andl
stos
loop
int
add
out
shr
aas
das
cltd
inc
movb
inc
adc
in
sub
fs
sub
xchg
popa
rol
dec
xor
fldl2t
and
mov
push
pop
in
cmp
cmc
mov
mov
xchg
jnp
negb
adc
push
fdivrl
daa
ret
dec
sbb
inc
sbb
sti
bndstx
sbb
or
mov
int3
in
mov
fimull
jp
jl
pop
mov
cwtl
in
push
push
ljmp
out
push
mov
ficompl
adc
aaa
sbb
and
sahf
adc
pop
adc
lcall
loopne
stc
lret
and
idivb
push
movsl
icebp
sbb
popa
cmp
ds
call
repnz
cmp
mov
addr16
repz
jns
jp
inc
mov
out
adc
sub
jbe
loopne
sti
jl
out
cs
popf
or
dec
dec
or
xor
sbb
mov
mov
cmp
mov
adc
repnz
repz
mov
leave
pop
cld
cmp
stc
movsb
repz
inc
dec
dec
movsb
jne
jnp
in
lcall
scas
adc
scas
imul
mov
ret
sub
mov
jne
nop
call
push
cwtl
cmp
jne
test
call
cmp
in
push
sbb
adcb
mov
cmp
or
stos
stc
mov
int3
adc
add
cmc
ja
jbe
loopne
insl
negl
adc
bound
loop
sub
cmp
or
je
aas
mov
add
in
stc
xchg
arpl
sahf
pop
mov
push
pushl
popa
mov
add
mov
xchg
sti
jbe
jbe
add
pop
jp
jg
insl
fdivrp
popf
pop
push
enter
push
loopne
pop
push
cmp
push
jp
call
and
leave
mov
sbb
aam
test
icebp
sbb
jbe
dec
ror
cmpsl
rorb
pop
jmp
and
cld
mov
fisttpll
sub
jp
das
adc
mov
outsb
mov
and
loope
sbb
fldenv
test
fwait
movsl
xchg
test
inc
std
add
xchg
loop
pop
lret
pop
sbb
pop
test
dec
inc
fists
in
fisttps
ret
sub
or
xchg
xor
mul
xchg
setle
xor
lret
test
inc
arpl
xchg
aam
mov
and
xor
out
add
bound
mov
int
push
aaa
mov
pop
iret
jns
mov
inc
sbb
push
pop
pusha
rclb
iret
in
stc
inc
movsl
jne
and
cmpb
or
mov
push
jmp
ss
xor
addb
out
ret
jns
leave
int
add
outsl
dec
push
mov
pop
gs
ficoml
sar
ja
lret
outsb
ret
imul
dec
inc
mov
fmuls
cwtl
dec
in
and
and
rolb
lcall
pop
pop
sbb
push
xchg
aam
push
dec
sbb
aas
xor
gs
sti
push
stc
lea
idivl
test
addr16
and
mov
inc
push
cmp
adcl
js
sub
xor
int3
mov
loope
add
leave
fcmovnu
xorb
adc
xchg
jp
dec
lods
add
or
cmpsb
mov
jno
icebp
add
push
xor
test
rol
sbb
in
icebp
ror
and
cmp
rol
pushf
test
test
jo
xchg
pop
dec
or
scas
movsl
adc
mov
push
sahf
xor
push
or
call
popf
out
addr16
rorb
loop
cmp
adc
mov
xchg
jmp
xchg
cmp
out
lods
mov
insl
loopne
movsb
push
loop
popa
ljmp
lahf
xchg
mov
inc
push
into
sbb
mov
inc
mov
pop
in
rcrb
dec
jae
dec
out
loope
lods
mov
or
lods
fbld
ss
orb
jae
jmp
lahf
popf
movsl
sti
shl
xor
pop
sahf
out
pop
mov
jge
stos
jge
pushf
cs
cmp
add
cmp
add
test
fwait
push
cmpsb
and
xlat
inc
rcrb
jb
fwait
jb
jg
pop
in
pop
jle
dec
subl
mov
in
jle
xchg
mov
lret
and
dec
into
mov
and
lods
jnp
xchg
fidivl
leave
daa
xchg
jne
xchg
adc
adcb
outsb
mov
cwtl
pop
rorl
insl
push
loop
xchg
mov
lret
lret
or
or
out
pop
dec
xor
loop
sbb
lret
mov
movsl
in
sahf
shr
jp
out
and
test
call
fxch
outsb
mov
dec
adc
mov
outsb
test
ror
xchg
push
out
popa
or
stos
rcrb
mov
jmp
testl
cltd
mov
cmpsl
sbb
adc
sub
pop
pop
outsl
shrl
push
popa
scas
in
mov
mov
ds
xor
aad
je
lahf
fidivs
dec
in
or
cmp
xor
adc
inc
andb
rcll
sarl
mov
xchg
jns
push
xchg
push
adc
xlat
sub
hlt
mov
pushf
xor
divb
mov
fbld
int
inc
xchg
dec
push
mov
mov
mov
movsl
and
rclb
in
xor
lods
pop
mov
cmpb
sysret
nop
adc
pop
add
push
ljmp
inc
andb
out
jl
or
push
sbb
rorb
loope
std
adc
subl
push
push
push
ss
jp
pushf
repnz
addr16
add
call
imul
enter
lahf
popf
out
mov
arpl
dec
pop
push
sbb
xor
outsb
sbb
jae
mov
std
mov
mov
out
add
cs
cmc
jle
jle
pop
clc
sbb
daa
mov
pop
test
lea
into
and
sub
dec
stc
rcrl
jbe
jmp
fsubrl
pop
loop
cmpsl
loope
cmp
ret
push
daa
push
or
outsb
push
push
inc
outsb
sbb
fwait
les
cwtl
or
pop
in
test
aam
shl
in
pop
push
test
mov
mov
mov
xor
testl
jns
and
test
jmp
add
cmc
fdivs
dec
cwtl
pop
push
jnp
ljmp
xchg
or
add
push
icebp
jmp
jg
iret
mov
jns
icebp
das
jb
shr
pushf
push
sbb
cmp
and
xchg
aad
in
iret
hlt
sbb
mov
stos
mov
fsts
sbb
repnz
dec
jp
mov
adc
rcrl
jle
add
sarb
pop
add
sbbb
push
mov
fcompl
loop
cmp
mov
dec
pop
pop
movsb
hlt
mov
adc
or
dec
std
dec
jmp
jne
xor
popf
rcrl
inc
imul
mov
push
jns
lds
or
in
movsl
sbb
mov
dec
and
mov
sbb
inc
xchg
fs
rol
jb
mov
int3
in
sub
push
jae
test
imul
xchg
pop
inc
js
test
or
stc
sbb
sub
cmp
aad
in
lods
inc
or
xchg
mov
push
xchg
jne
add
inc
ds
xor
push
or
jmp
pop
and
icebp
test
sbb
cltd
sub
sub
cmp
and
sub
cmp
xor
mov
jae
fwait
and
cmp
adc
sbb
aaa
xchg
push
in
xor
mov
push
mov
insl
aas
jp
adc
rorl
lcall
fstp
jl
mov
pextrw
mov
and
in
sbb
mov
cmp
xlat
adc
js
cmp
xor
je
jno
mov
mov
mov
inc
or
push
or
xor
shlb
adc
div
stc
mov
pop
out
daa
and
cmp
adc
les
adc
mov
or
sbb
lcall
ja
rcll
gs
lcall
out
stos
pop
je
inc
xchg
ds
adc
rorl
mov
or
jne,pt
jns
das
push
sub
les
inc
push
popa
inc
hlt
cli
ficoml
in
cmp
add
call
jecxz
imul
movb
xchg
rcrb
fdivs
sti
jb
xor
jg
je
mov
mov
ljmp
out
xor
jmp
mov
iret
mov
ljmp
repz
imul
test
ret
out
ret
lea
inc
pop
inc
cmpsb
in
or
and
jbe
add
cs
fidivrs
ret
ret
cmp
cmpsl
out
lds
dec
sub
mov
adcb
inc
adc
cmpsl
icebp
test
mov
inc
pop
aam
and
push
push
lods
daa
icebp
pop
inc
xor
fwait
in
test
pop
push
jnp
stos
pop
pop
cmp
jl
xorb
dec
mov
dec
es
call
cltd
ljmp
rclb
and
rorl
insb
push
adc
jge
ficompl
mov
pop
cmp
fistpl
mov
insb
test
xchg
push
dec
lea
and
push
dec
idivl
push
popf
ror
ds
mov
inc
or
pop
ret
outsb
fwait
in
in
into
sub
or
jmp
push
or
inc
push
xor
push
push
test
add
add
pop
mov
int
shl
adc
sti
mov
cli
in
sub
or
push
fadds
inc
pusha
fstl
jmp
dec
cmp
testl
cmpl
movsb
cli
and
cmp
mov
scas
ficoms
jne
out
dec
xor
call
test
stos
dec
cmp
add
je
aam
or
xchg
repnz
pop
imul
mov
jp
movsw
shll
lahf
aas
jg
sti
jne
mov
and
daa
jb
fistps
xchg
testl
lret
mov
daa
cmp
xor
push
cmc
ss
adc
push
sbb
adc
push
add
je
adc
and
xor
icebp
negb
dec
int3
mov
lods
jp
jo
xor
push
insb
mov
adc
les
arpl
shlb
test
sbb
test
clc
sbb
movsl
mov
jno
js
mov
cltd
ljmp
cltd
jg
xchg
test
push
push
add
inc
jge
and
jmp
mov
cmp
fstps
sub
andl
test
sub
lret
lods
pop
fisttps
mov
push
popa
dec
jns
cmpsl
inc
enter
mov
sub
aaa
mov
xchg
out
cwtl
lret
xchg
push
fs
sub
xor
cmpb
inc
in
cwtl
add
sub
push
xchg
add
xor
push
jb
movsb
jne
mov
pop
xlat
push
xor
push
in
jno
in
fstpt
pop
adc
jnp
xchg
icebp
xor
and
push
dec
fdivs
xchg
pop
punpckhbw
loope
add
pop
sub
pushf
rolb
gs
stos
ljmp
cmp
mov
daa
adc
jle
jge
push
dec
mov
es
repnz
out
outsb
or
mov
in
jmp
mov
loope
jle
insl
enter
arpl
sar
ja
fcoml
sub
jp
mov
ficoml
mov
nop
int3
lock
adc
nop
sbb
sub
add
mov
popa
push
insl
xor
xchg
pop
cmp
js
leave
stos
xchg
sbb
mov
cld
cmp
mov
insb
test
iret
jne
jae
scas
out
fmuls
add
outsb
loope
dec
pop
lds
je
sub
out
mov
xchg
pop
add
std
jle
cmpb
xchg
push
inc
jo
inc
mov
pop
bound
fisubl
xor
add
test
sub
pushf
mov
adc
imul
adc
xor
or
xchg
mov
push
cmp
push
lret
insb
stos
push
shr
lret
ja
cwtl
inc
sub
cmp
mov
loope
ss
lds
faddl
pop
enter
push
pop
mulb
sahf
push
bnd
xchg
jle
subl
dec
dec
jp
xor
icebp
sub
movsb
les
mov
mov
dec
jl
push
jno
push
sarb
sub
lds
call
mov
andl
out
inc
inc
enter
mov
xor
dec
ret
aaa
jae
add
adc
std
int
push
adc
mov
fcmove
mov
into
mov
fs
sub
loope
xchg
inc
push
mov
scas
and
mov
cmp
inc
dec
or
mov
cli
mov
ljmp
sub
scas
mov
imul
into
jecxz
ss
dec
mov
or
and
inc
pop
mov
dec
push
hlt
push
mov
mov
sbb
es
sub
sbb
pop
out
mov
jg
xor
fidivs
jb
add
sbb
leave
jecxz
xchg
movsl
test
icebp
mov
aas
cmp
sub
fisttps
xchg
or
out
sub
popf
lret
lods
sub
imul
daa
lods
lods
push
mov
call
out
jne
outsb
fcoms
scas
fidivs
shlb
cmove
mov
pop
test
xorb
or
lret
mov
mov
cld
xchg
inc
cmp
lods
push
je
fisttpl
cltd
mov
xchg
mov
nop
lds
aam
cs
sbb
push
sbb
aam
std
bound
fisubrs
sub
ljmp
adcb
add
cmc
xor
mov
stc
jne
movsb
inc
rclb
in
or
movsl
or
dec
cmc
dec
xchg
xchg
bound
out
jo
mov
ds
mov
xchg
inc
sbb
jae
into
cs
or
loop
jl
dec
push
dec
fxam
push
test
outsl
xchg
or
add
pop
mov
adc
mov
gs
jns
dec
arpl
sub
cmp
stc
shrl
jle
out
imul
adc
inc
cmp
pushf
sub
or
inc
jp
lds
rclb
inc
aam
mov
dec
rolb
sub
popf
lds
lahf
dec
test
xor
mov
lock
sub
lahf
stc
xlat
or
adc
sbb
push
jne
cmp
imul
dec
addr16
xor
insb
add
rcrl
loop
cmp
jmp
cmp
ds
mov
repnz
addr16
fwait
mov
int3
sbb
xorl
das
lea
sbb
pop
inc
fisubrs
imul
cmpsl
inc
xchg
or
orb
sbb
testb
ds
mov
cld
and
sbb
sbb
cwtl
or
movsl
stos
or
out
ja
cltd
mov
loopne
and
loope
data16
xor
insb
pop
mov
jns
in
sub
mov
adc
aas
jle
push
xchg
jno,pn
stos
inc
push
or
fldcw
outsl
inc
jb
adc
iret
stc
jbe
adc
popf
push
cmpsl
cmp
leave
das
roll
iret
or
daa
mov
xchg
inc
cmp
out
mov
mov
mov
add
fstpt
fwait
and
mov
scas
xlat
push
and
push
sub
add
pop
rorb
pop
sbb
mov
or
cmp
std
fisubrl
push
pop
stos
mov
ja
ds
rcrl
adc
in
jge
fnstsw
or
popl
push
lret
testb
pushf
pop
insl
push
lods
or
sbb
xchg
cmp
fs
out
stos
cmp
sub
and
aam
dec
es
fwait
xchg
xchg
js
test
mov
andb
ja
mov
mov
add
mov
xchg
jbe
sub
lahf
cmp
jbe
fsubrl
scas
fcompl
je,pn
data16
or
xchg
aad
arpl
ljmp
mul
fstps
outsl
cli
lods
inc
insl
inc
dec
pop
in
sbb
iret
pop
cmp
fs
shll
lahf
pop
shl
fs
jmp
test
inc
xchg
mov
inc
sub
mov
orb
fchs
sti
jae
xchg
xor
cmp
mov
icebp
jnp
in
push
and
mov
push
ss
cmpsl
je
ret
aaa
push
jp
xor
inc
inc
mov
fcompl
jae
cs
mov
xchg
push
or
mov
xor
inc
into
xor
popl
add
adc
jae
sbb
cmpsl
sub
adc
pop
push
push
ficoml
inc
sbb
call
sbb
or
movsb
out
xor
push
loope
shll
push
pop
daa
xchg
jnp
cmp
jg
cmpsb
ja
add
jbe
scas
push
cltd
pop
fwait
push
imul
cltd
adc
xor
sub
jp
js
cwtl
addr16
jb
xor
cmpsb
mov
pop
mov
pushw
lods
mov
sub
pop
ffree
add
adc
pop
push
nop
stos
xchg
mov
sbb
sub
adc
xor
or
fists
or
pop
rorl
cmp
out
loope
push
push
cmp
jb
sbb
cli
sub
es
adc
ret
cld
std
sub
pushf
jmp
jno
sub
je
xchg
and
mov
cmpsl
or
sbb
lds
add
loope
pop
cs
inc
sbb
lock
addr16
xor
cmpsb
lods
sub
in
nop
movsl
aas
pop
add
add
jge
pop
das
adc
test
lret
mov
inc
imul
fidivs
jmp
lods
sub
hlt
pop
pop
movsl
dec
nop
add
in
movsl
gs
inc
gs
in
les
ss
xor
fmuls
dec
rolb
xchg
or
int
xchg
and
shrl
xlat
fld
dec
mov
pop
rorb
movsb
jecxz
mov
rdmsr
jbe
or
jae
mov
je
mov
pop
xchg
ja
push
jne
test
dec
mov
cmpsl
xchg
movlps
mov
les
push
or
cmp
leavew
lahf
push
sub
or
mov
add
popa
jecxz
mov
cmp
sbb
arpl
mov
pop
lahf
xchg
out
pop
clc
lcall
adc
iret
xchg
mov
mov
imul
inc
dec
es
push
mov
pop
outsl
xor
int
mov
cmp
pushf
scas
jmp
xor
xchg
mov
aad
scas
or
dec
les
jns
pop
xchg
nop
enter
mov
fcompl
ds
lret
pop
cmp
sub
xor
push
pushl
and
cmp
inc
lahf
nop
jg
cmp
iret
push
lods
push
pop
out
in
sbbb
push
out
repz
daa
cs
dec
arpl
or
lods
mov
movsb
mov
add
dec
in
cli
push
mov
lds
inc
adc
and
jl
out
push
ret
cmp
into
fmull
jecxz
inc
imul
xchg
hlt
scas
mov
test
and
sarb
xchg
push
test
mov
movsb
add
pop
mov
jno
lahf
hlt
fnstcw
mov
and
les
and
xchg
mov
out
and
std
adc
adc
repnz
bswap
pusha
addr16
dec
sbb
adc
sub
cmp
mov
js
push
mov
imul
and
scas
cli
xchg
loop
sbb
fistpll
stc
scas
stos
ret
pop
push
inc
pusha
insl
xchg
data16
cmpsl
fidivl
xchg
int
push
out
mov
lods
iret
pop
xchg
inc
fucom
arpl
rcrb
dec
mov
push
ljmp
add
std
sub
adc
rcr
inc
sbbb
fsubrl
lds
xchg
ljmp
pop
and
dec
add
cld
js
daa
int3
mov
mov
and
xor
shll
xchg
and
orb
xchg
test
sbb
aas
xor
es
push
fistl
pop
leave
jnp
jnp
fcoml
xchg
std
xor
sub
or
aad
jmp
cmc
outsb
cmp
mov
inc
sti
inc
dec
lcall
stos
ljmp
daa
repz
sti
xchg
mov
scas
push
add
aas
jecxz
mov
mov
inc
pop
mov
out
int
mov
or
sub
cmp
mov
sbb
andl
test
mov
int3
rcrl
cmp
sahf
sahf
lds
cmp
test
lods
adc
aas
sti
inc
jp
lret
cmp
xor
mov
xchg
mov
push
cld
in
fnstcw
mov
shll
lods
and
gs
add
mov
lret
push
test
cmp
cmpsl
jbe
jae
add
insb
es
repnz
adc
cli
xchg
or
or
lret
sbb
aam
mov
shll
sbb
faddp
popa
gs
enter
pop
imul
scas
stos
jge
hlt
aas
dec
mov
cltd
cmp
jnp
cli
mov
mov
adc
imul
outsl
insb
shlb
push
push
cld
sub
cmpsl
cmp
jge
sbb
aas
out
out
lret
jnp
lods
nop
cmpsl
pop
popa
pop
inc
scas
mov
jns
xor
lahf
or
aaa
push
push
sub
add
sub
inc
mov
arpl
xor
aam
jl
mov
cmp
iret
cs
sahf
test
test
test
add
inc
insl
mov
enter
sbb
adc
sti
rol
mov
push
fldenv
lret
jg
fdivrs
icebp
dec
outsl
pop
jmp
sbb
imul
loop
hlt
xor
lahf
mov
je
fistl
enter
xchg
jp
push
inc
js
inc
aas
add
adc
adc
inc
push
hlt
fucomi
xchg
lock
jecxz
cmp
sub
je
fcompl
pop
mov
cmp
js
push
dec
sbb
xor
cmp
inc
je
fcmovu
loope
mov
push
sahf
jge
fsubl
pop
jo
mov
or
jae
inc
xor
out
mov
and
mov
ret
sub
xor
and
mov
enter
sbb
fmull
movsl
mov
ret
cwtl
xor
jp
daa
aaa
lea
enter
inc
push
mov
scas
lret
pusha
mov
bound
in
push
fldt
xor
jmp
shlb
cld
bound
mov
xor
jmp
daa
mov
cli
sbb
mov
xchg
push
popa
out
cmovs
in
sub
in
xlat
rcrb
inc
enter
cli
lahf
ret
lea
jno
cmc
in
test
jecxz
mov
or
ss
push
and
cmpsl
jl
pop
pop
lea
fs
jne
fbstp
shrl
xchg
xor
inc
push
ja
mov
pop
outsb
std
aam
pop
jmp
data16
mov
push
pop
fildl
inc
push
decb
dec
add
push
pop
rcr
imul
cmp
adc
inc
popf
jno
jle
push
iret
sti
stc
into
sahf
mov
call
sub
or
mov
add
pop
mov
ficoms
ret
inc
push
xchg
and
xor
pop
cmp
mov
mov
pop
test
daa
test
inc
rcr
test
out
or
mov
ret
mov
mov
sbb
scas
mov
mov
add
shll
into
int
dec
enter
call
push
jns
dec
inc
sub
cwtl
or
mov
test
sarl
in
mov
mov
push
popf
arpl
dec
loopne
repz
out
jae
push
adc
pop
test
push
sbb
dec
xchg
fmull
sub
mov
jp
adc
mov
loopne
xchg
test
ficompl
push
push
cmp
or
mov
test
inc
xchg
jecxz
mov
loopne
add
push
les
and
mov
imul
mov
adc
and
and
scas
mov
pop
pop
aad
adc
adc
data16
shlb
andb
lcall
adc
enter
mov
fisubrs
call
jmp
js
imul
sub
jle
test
xorb
push
mov
jecxz
xlat
sub
xor
dec
mov
ss
pop
int
add
xor
mov
mov
imul
add
std
stos
cmpsb
in
in
stos
jo
cmc
clc
jmp
push
sarl
ljmp
adc
test
xchg
test
scas
orb
cld
pop
mov
mov
outsb
clc
mov
push
mov
inc
cmp
bound
fs
out
arpl
jne
sub
jne
mov
jne
stos
adc
andb
mov
add
fmuls
push
cli
jne
sub
pop
hlt
test
movsb
lods
pop
jge
fnsave
sub
jg
dec
and
insb
movsb
mov
push
outsl
jl
push
add
aas
in
insb
imul
jo
adc
jns
jns
cmp
mov
sbb
xlat
mov
push
inc
inc
ret
mov
push
clc
or
stos
mov
cmp
xor
mov
or
push
cld
jge
sub
out
aad
push
dec
mov
jmp
or
and
ror
stos
test
cwtl
mov
jecxz
xor
push
jne
adc
lds
xchg
insb
into
sahf
ficoml
and
scas
int3
in
pushf
popf
mov
push
in
or
lret
push
std
loop
cmpb
pop
fisubl
cli
divb
and
pop
mov
push
jnp
mov
sub
adc
fmull
negl
ja
push
mov
xor
dec
mov
push
push
fsub
sbb
sub
xchg
push
icebp
fistl
or
hlt
cs
loope
loop
cmp
repz
and
stc
mov
nop/reserved
mov
pushf
movsl
xor
xchg
popa
pop
je
in
sbb
enter
subl
cmp
xlat
addr16
data16
add
mov
mov
pop
xchg
jmp
mov
out
test
xor
mov
ds
xchg
fwait
or
fwait
hlt
dec
and
int3
push
jne
or
jbe
mov
inc
ljmp
pop
inc
mov
fcompl
push
ret
sahf
adc
dec
es
push
add
sbb
stc
movb
cltd
pop
or
imul
push
incb
mov
imul
out
pop
popa
jno
dec
jge
pop
or
ja
xor
js
sbb
and
and
out
and
adc
outsl
xchg
or
pop
pusha
sub
cmp
data16
je
mov
out
aas
adc
inc
sahf
stos
xchg
pop
shrl
in
adc
mov
out
les
push
movb
mov
cmp
lret
cmp
and
repz
ljmp
stos
sbb
cmpsl
cli
cmc
out
inc
rorl
mov
stos
lock
pop
bound
mov
sti
inc
popa
icebp
das
and
xchg
and
xlat
neg
repz
stos
xchg
inc
movsb
inc
and
and
inc
test
in
enter
ret
cli
mov
xchg
es
add
add
sbb
nop
nop
rclb
sbbb
xor
fwait
pop
jmp
pop
dec
mov
test
addr16
mov
lods
movsl
jp
hlt
jmp
bound
pop
mov
mov
fdivrp
test
lret
push
movsl
dec
ss
adc
jge
sub
int3
xor
shlb
push
cmp
dec
leave
out
test
fisubl
xchg
lret
push
sti
mov
and
push
je
or
push
aad
inc
or
mov
inc
push
jno
jne
jmp
das
push
imul
fs
pop
or
aam
dec
fptan
xor
movsl
xchg
mov
cmp
jnp
xorb
mov
into
inc
test
flds
pop
pop
pop
incb
xorb
push
sahf
dec
cmpps
dec
sti
xor
jg
jle
xchg
pop
jbe
pop
pop
pop
and
lahf
mov
jae
jne
jmp
ficompl
mov
insl
imulb
pop
mov
lds
pop
fs
inc
scas
xor
xor
xchg
jl
mov
sahf
lods
mov
das
mov
es
xchg
mulb
jne
sub
jp
and
js
cli
or
jne
jns
mov
psubsw
pop
mov
rcrb
cmp
jmp
sbb
aam
cmp
aas
mov
leave
adc
insb
sbb
cwtl
cmpsl
push
jg
movsb
and
lods
dec
jmp
xor
sbb
jl
in
int
std
sub
mov
popf
and
sbb
je
mov
add
ja
mov
lcall
sti
dec
mov
aas
int3
or
add
lods
ret
enter
fmulp
mov
movsl
adc
nop
mov
sub
or
movsb
push
sub
inc
cmp
mov
xchg
les
adc
andb
cli
fld
sbb
imul
mov
out
xor
stos
inc
stos
cmp
ds
jo
pop
stos
inc
aam
xor
leave
cmpsb
pushf
sbb
mov
push
fstpt
outsl
sti
push
or
in
sbb
nop
dec
pop
cmp
inc
lea
fisubs
pop
xchg
pop
lods
imul
cmp
xchg
or
fwait
int
cmp
into
or
mov
pop
daa
hlt
jo
or
incl
data16
leave
test
cmp
and
push
rcl
fs
movsb
das
push
or
lods
and
and
jmp
inc
sarb
xlat
je
nop
aam
jnp
roll
mov
mov
xorb
lds
cltd
add
sahf
lret
or
ret
int
mov
dec
xor
pop
clc
out
xchg
out
xchg
sbb
sbb
cltd
pop
jb
loope
add
in
stos
stos
dec
pusha
div
fwait
and
out
into
pop
or
idivl
stc
sub
jo
je
repz
jns
adc
fidivl
jl
and
cmp
add
jmp
inc
aad
fsub
add
xchg
xlat
pop
mov
xor
ret
test
popf
cmpsb
mov
and
fsubrs
popa
push
mov
dec
pop
stos
outsl
roll
jge
mov
mov
ljmp
in
rcrl
xchg
cmp
std
nop
arpl
push
iret
add
iret
fsubl
out
ret
clc
leave
cltd
fwait
jo,pt
rcl
or
roll
adcl
inc
ja
arpl
jl
inc
out
xchg
xchg
mov
shll
push
add
push
in
rcrb
and
popa
xchg
dec
jmp
mov
shl
add
inc
clc
mov
xor
das
cmp
loope
inc
push
fimuls
inc
or
call
int
jecxz
pop
loopne
outsl
xchg
xchg
out
mov
dec
aaa
popf
inc
out
sbb
mull
fsubr
out
sub
adc
int3
and
inc
add
sbb
adc
jno
cmc
in
sarb
pop
arpl
mov
sub
sbb
and
jmp
pop
push
int
and
ss
jge
sbb
cmp
loop
testl
lret
mov
aad
or
out
les
loop
sbb
shll
mov
insb
add
sbb
adc
mov
popl
push
push
or
sub
inc
icebp
jmp
mov
in
cli
imul
mov
stos
aaa
push
pop
test
jno
call
loope
shlb
mov
push
cld
out
lods
mov
xchg
call
test
icebp
shrl
dec
pusha
shrb
and
sbbl
das
cltd
int3
xor
fs
and
inc
stos
cmpsb
insb
lret
mov
dec
adc
out
orb
pop
sub
push
adc
mull
inc
xchg
xchg
sahf
loop
pop
mov
adc
hlt
dec
sbb
sbb
pop
jae
cmc
mov
int3
add
popf
adc
into
push
adc
insb
sbb
xor
xor
mov
cmp
cwtl
xor
sbb
push
mov
jmp
aaa
movsl
cmc
daa
adc
dec
andb
pusha
dec
pop
cmp
cmp
iret
test
xlat
sar
pop
jg
js
fsubp
jle
jle
jecxz
clc
inc
sub
or
mov
jae
sbb
stc
and
inc
sub
ljmp
jle
dec
cltd
insb
fldl
xchg
pop
xchg
insb
lock
xor
cmp
ror
cmp
mov
mov
shll
outsl
adc
fnstsw
test
mov
inc
sbb
jb
dec
or
jns
push
cmp
cld
rclb
fcomps
jae
sub
popf
insl
jmp
stos
icebp
shrb
insl
adc
jg
dec
lret
iret
lods
pop
cmpsb
ror
dec
pop
add
and
cmc
shlb
xchg
mov
shlb
imul
insb
lock
in
xor
dec
loop
pop
mov
and
xchg
lcall
das
pusha
sub
pop
jmp
cltd
mov
outsb
ror
pop
clc
push
sub
add
sbb
sub
jp
movsl
push
cmp
push
mov
pop
aas
xlat
mov
pop
andb
dec
stc
xor
and
pop
cmp
ja
dec
jne
xchg
mov
aam
int3
out
sbb
leave
inc
jns
ret
movsb
jns
push
fdiv
inc
pop
xchg
cmp
pop
mov
popa
aad
xchg
fwait
andl
fisttps
xchg
add
inc
adc
cmpl
dec
adc
adc
xchg
test
mov
push
gs
lea
call
stos
stos
popf
addr16
addr16
jne
push
lds
outsb
xchg
add
pop
xlat
add
pop
xchg
insb
aam
lret
jle
lods
loop
xchg
movsb
fiadds
loopne
sarl
pop
cmp
into
ret
push
add
sarl
sbb
stos
inc
ss
jmp
fsub
mov
inc
lods
mov
cmp
aas
and
test
sbb
or
xchg
inc
outsb
add
fs
ja
push
or
fstps
pop
cwtl
das
sub
insl
jp
xor
adc
jnp
xchg
js
push
inc
fdivs
pop
iret
adc
mov
push
testl
push
addr16
in
jae
xlat
mov
cmc
xchg
in
fwait
inc
lret
lret
xor
or
movsb
cmp
xchg
or
pop
repz
inc
ds
fcoms
test
std
mov
adc
mov
dec
xor
mov
mov
lock
and
xchg
out
mov
es
push
pop
mov
cmc
lcall
imul
test
adc
add
pop
adc
inc
in
dec
hlt
push
loope
xchg
inc
scas
rcll
outsl
mov
aam
les
sub
dec
add
jnp
pop
adc
lods
inc
shl
push
or
dec
inc
jl
cs
dec
andl
push
fcos
adc
mov
inc
push
pusha
subl
xchg
pusha
int
mov
inc
dec
pop
adc
add
loop
in
xchg
ljmp
dec
adc
mov
add
xor
ja
lods
test
repnz
ret
cld
clc
xor
and
incb
jecxz
fwait
add
test
ss
dec
mov
cwtl
enter
mov
or
sbb
loope
lds
sbb
push
pop
mov
xchg
rorb
push
ja
and
lret
mov
cld
sbb
imul
test
ret
cwtl
adc
fldt
pop
ficomps
jae
mov
shrl
pop
jl
popf
fisttps
sbb
fsubl
shrl
shll
push
int
pop
sbb
loopne
dec
jnp
outsb
cwtl
test
add
xchg
cli
pop
rorb
cmc
xchg
push
jno
inc
in
mov
or
mov
mov
das
cmp
mov
outsb
das
jl
aam
adc
repnz
sbb
nop
and
mov
insl
and
jmp
cmp
cmpsb
ds
mov
adc
inc
mov
nopl
mov
pop
cmpsb
fldcw
int
xchg
cli
xchg
in
cmp
add
movsb
lcall
cmp
test
bt
and
call
imulb
loopne
inc
adc
popf
push
call
insb
xorb
push
cmpsb
ja
pusha
and
jae
cmpsl
les
inc
add
mov
jle
roll
pop
jp
fadds
push
inc
out
xor
mov
jne
mov
adc
pop
test
loop
iret
mov
insb
movsb
sub
aaa
inc
aam
jns
gs
call
lcall
cmovle
in
mov
pushf
test
jbe
push
cmc
popf
adc
add
dec
mov
xchg
cwtl
cwtl
adc
movsb
fildll
lea
jae
roll
add
out
ds
sti
mov
fs
shlb
mov
icebp
and
enter
addl
pop
andb
lods
icebp
in
sbb
lret
fdivrl
or
xlat
dec
pushf
push
sbb
push
or
add
xchg
call
pop
mov
and
int3
call
pop
andb
lods
lea
push
int
divb
cmp
rcrb
out
sar
and
testl
iret
inc
and
scas
nop
jge
sbb
into
aad
inc
in
lcall
mov
mov
aaa
inc
jmp
xchg
imul
sti
fsubs
pop
fldl
into
repnz
push
loop
fstl
inc
add
pushf
outsl
sub
pop
in
mov
data16
add
fimull
stc
mov
mov
sbb
pop
pop
fsub
xchg
xchg
ficoms
bound
mov
jmp
mov
cwtl
test
popa
hlt
sub
mov
jno
adc
cmpsl
fxch
lret
adc
dec
fs
xor
xchg
rolb
sbb
cmp
or
ljmp
mov
bound
pop
xlat
dec
in
jb
jecxz
and
dec
loopne
adc
mov
and
mov
sbb
popa
or
mov
xor
pop
inc
mov
repz
and
and
rolb
outsb
stos
cmpsb
pop
jecxz
xor
jae
or
xor
jmp
xchg
mov
adc
stos
push
adc
mov
fisubs
pop
sbb
dec
push
lods
jo
and
lock
sbb
test
xor
and
xor
inc
sub
push
aas
jg
in
imul
out
dec
bound
daa
adc
jnp
loop
data16
mov
loope
int
jl
push
in
jo
out
mov
adc
bound
dec
adc
shll
cmpsl
inc
lcall
xchg
daa
out
xchg
xchg
inc
push
sub
insb
xorb
repz
bswap
or
or
ret
or
cmpsl
popl
sbb
scas
mov
je
mov
pop
and
fldl
aad
sbb
xchg
mov
mov
insl
sbb
cltd
dec
push
mov
cmp
and
out
sbb
enter
mov
xor
sbb
mov
mov
cwtl
cmpsb
inc
mov
inc
data16
in
scas
fcmovu
enter
lcall
xor
jecxz
and
iret
fiadds
adc
iret
and
shl
inc
mov
and
inc
in
lods
movb
adc
imul
jmp
lcall
mov
mov
mov
or
scas
insl
pusha
repnz
shlb
pop
mov
rol
sti
stc
fbstp
xchg
in
dec
test
ljmp
scas
push
and
js
fbstp
adcl
add
cmpsb
dec
repz
std
lret
cmp
adc
xor
sbb
and
cli
js
lea
xor
sub
adc
je
loop
scas
repz
adc
lods
cltd
rcr
xor
rolb
aas
loop
inc
mov
xor
add
or
cld
adc
lods
and
pushf
popa
xchg
inc
push
xor
ret
inc
frstor
shlb
mov
repz
lock
in
push
call
sar
or
sbb
ja
jecxz
addr16
ror
jecxz
jle
and
lret
lcall
add
cwtl
ljmp
add
adc
lods
fiaddl
and
mov
or
xor
enter
xorb
push
jle
test
ficomps
ret
xor
js
lock
loop
add
daa
das
stos
adc
xchg
lahf
add
cmp
test
sbb
stos
or
dec
pop
rclb
xchg
insb
dec
mov
sarl
lcall
mov
inc
les
cmp
pop
sub
add
or
ljmp
inc
les
add
ljmp
mov
mov
add
and
lret
cmc
jg
or
and
adc
sub
jbe
pop
inc
or
or
fstpt
mov
lahf
or
rorl
jg
rolb
ja
fcmovbe
add
xor
in
aas
ljmp
pop
inc
repnz
repnz
fmulp
fstl
int
dec
jno
popf
out
pop
xor
push
subb
in
aas
mov
loopne
jnp
lods
adc
je
xor
lahf
push
pop
in
xchg
push
sub
or
daa
leave
jb
sti
cltd
test
into
ss
cld
cmpsb
or
movsl
cmp
adc
cmp
adc
lahf
jb
dec
mov
mov
lret
dec
pusha
aas
out
ss
pop
shr
cmp
movsb
scas
xchg
jmp
push
outsb
xchg
mov
repnz
in
push
sbbl
inc
sbb
mul
pop
xchg
fnstcw
mov
pop
jnp
inc
lret
pop
sarl
in
gs
test
out
mov
jge
test
cltd
in
or
sbb
imul
mov
rcrl
rcrb
mov
cmp
pop
push
jb
cs
xor
lcall
sbb
push
add
mov
dec
cld
mov
sbb
sub
mov
mov
pop
jmp
lret
iret
orl
out
arpl
scas
sbb
sahf
dec
mov
clc
push
aaa
mov
cmp
jle
adc
js
jnp
add
imul
mov
cmp
gs
pop
ret
xchg
xor
jmp
in
idiv
bound
js
sbb
sarl
je
xchg
rclb
push
or
dec
je
test
inc
rcrb
shl
xor
fisttps
incb
push
xor
fidivrs
test
adc
lret
andl
adc
adc
mov
insl
repnz
fdivrp
push
jecxz
mov
rcrb
nop
inc
push
call
mov
jb
dec
fsts
pop
sub
bnd
repnz
jno
insl
lcall
and
ret
sahf
int3
and
ficompl
pop
mov
bound
sub
das
inc
std
lock
push
push
sarl
clc
push
xlat
xor
jl
mov
cmpsl
sbbl
js
xor
and
pop
outsl
mov
in
push
push
adc
imul
sbb
or
push
mov
cwtl
fs
mov
mov
mov
mov
pop
lret
loope
out
rorl
clc
push
dec
pop
filds
xchg
add
sub
dec
lods
adc
mov
inc
ret
xor
xor
mull
test
dec
ss
xor
repnz
jmp
adc
movsl
xchg
and
leave
mov
cli
push
sarl
sub
add
inc
push
or
cmp
loope
ss
push
sbb
xor
dec
xchg
stos
daa
negb
sbb
cli
mov
loope
in
jp
cmp
xchg
or
syscall
nop
and
xchg
jns
lock
and
rolb
jns
mov
test
adc
enterw
shrl
mov
cmp
mov
or
pop
mov
and
lods
out
jns
fisubrl
in
or
sbb
jp
mov
hlt
fimull
int
ja
ja
rcrl
repnz
ljmp
lock
xchg
fs
addl
js
ret
fistpl
mov
dec
and
sbb
jmp
int3
outsl
or
adc
jg
int3
pop
jecxz
and
push
sahf
insb
xor
push
xchg
xchg
outsb
aas
int3
js
rorb
jae
and
lock
push
cld
or
and
scas
mov
pop
lds
inc
push
stos
int3
mov
in
adc
ret
dec
inc
xor
gs
sub
fistps
mov
and
mov
pusha
hlt
adc
and
shl
or
add
xchg
jne
aaa
cmpsl
cmp
imul
xchg
data16
loopne
les
xchg
rorb
xchg
orl
fcoml
pop
out
mov
in
rcr
ljmp
dec
inc
jo
cmp
popa
divl
and
pushf
adc
sub
lock
xor
test
arpl
arpl
out
shl
repz
ds
sub
jo
or
repz
mov
pop
es
loope
call
addb
movsb
rorb
fwait
mov
sub
andb
lcall
cli
mov
jae
or
sbb
repnz
lods
mov
call
scas
pop
lods
jg
jge
ja
aad
pop
dec
push
lret
mov
cli
xchg
jns
jo
dec
or
add
addr16
adc
mov
popa
ljmp
imul
jb
ljmp
sbb
pop
cmpsb
mov
in
mov
xor
mov
sbb
popf
sub
test
aaa
mov
rcrb
sub
pop
cltd
cmp
push
and
inc
sbb
nop
sahf
sar
push
dec
test
xor
addl
jo
jns
js
xchg
pop
mov
fisttpl
sbb
sub
std
cmp
inc
adc
lods
or
adc
dec
mov
mov
push
loope
sub
mov
xchg
xchg
cmpsb
aad
lcall
push
push
pushf
add
pusha
aas
push
das
cmpsl
pop
xchg
aad
loope
add
sbb
dec
or
ds
fsts
mov
cs
jnp
imul
jne
lock
dec
mov
adc
pop
fmuls
imul
xchg
adc
test
int
or
jg
ds
prefetch
repnz
in
cmpsl
push
dec
and
mov
sbb
push
cmpsb
stos
cld
pop
into
mov
xor
push
scas
xor
push
mov
inc
mov
ret
out
lahf
dec
mov
es
es
stos
cmp
fsts
pop
mov
sub
inc
inc
movsb
hlt
lds
stos
adc
cmp
cmpsb
pop
lahf
pushf
out
add
inc
or
shll
rcll
in
mov
dec
xchg
or
rolb
loope
in
pop
imul
jmp
inc
addr16
sub
clc
and
cmc
ret
es
in
add
repz
sub
sbb
aam
pop
xor
jae
es
sbb
dec
push
or
ret
sbb
out
push
dec
fwait
inc
mov
clc
xor
cmpsb
das
scas
dec
cmpsl
jno
sub
popf
and
jge
aam
in
movl
ficompl
mov
mov
jl
jno
xlat
fistl
scas
push
add
in
int
out
cwtl
movsb
mov
add
mov
mov
jl
adc
dec
xor
xor
iret
inc
fisttpll
jp
test
data16
icebp
test
pop
aas
mov
pop
in
mov
hlt
xor
inc
bound
xchg
xchg
sub
mov
test
xchg
mov
repz
pusha
enter
sbb
sahf
ret
in
shl
pop
popf
pusha
nop
sbb
lahf
pop
or
sbb
inc
sbb
mov
add
and
adc
lock
frstor
jle
xorl
std
jns
lret
out
push
in
cmpb
mov
insb
push
fcoml
cmp
popf
jae
notb
or
enter
xor
push
or
stos
nop
mov
sbb
mov
adc
hlt
cltd
nop
push
sarb
test
cwtl
cmpsl
jp
jnp
adc
arpl
lcall
daa
cli
and
je
cmp
add
mov
and
pop
addr16
or
push
jb
dec
jl
jmp
dec
fsubrl
mov
movsb
sub
xor
xchg
adc
add
mov
pop
xor
pop
mov
lret
push
sbb
adc
xchg
cmp
sub
and
out
mov
pushf
mov
cltd
aad
mov
hlt
jns
jnp
xor
mov
mov
imul
jno
jmp
int
into
push
cmp
ret
cmp
cli
in
push
inc
push
add
sub
xchg
push
aad
inc
inc
shlb
sbb
mov
adc
loop
inc
enter
cli
cld
fiaddl
xchg
inc
repnz
sarb
push
insl
popa
test
test
jmp
call
fistpl
cmp
xchg
leave
ss
out
jecxz
sahf
pop
push
rol
je
xorl
mov
push
leave
out
pop
jnp
jecxz
xchg
and
xor
ss
test
jae
nop
das
mov
add
fisttps
cwtl
pop
cmp
pop
pop
adcl
dec
mov
adc
xchg
or
or
movsb
lock
cs
mov
sbb
or
push
jne
fcoms
scas
mov
and
fs
repz
sub
vmovshdup
ss
mov
adc
mov
out
cmpsl
add
int3
mov
push
jg
les
loope
or
mov
fisttps
imull
push
aam
out
mov
xchg
add
fldcw
mov
mov
pusha
add
push
loopne
cld
cmovb
gs
andb
dec
in
cwtl
pop
shlb
cmc
aad
sbb
dec
adc
push
popf
adc
xchg
mov
repz
cmpsl
ja
movsl
xlat
inc
cmp
fistpl
movl
mov
adc
and
xchg
or
mov
xor
fisubs
push
cmpsb
rolb
mov
or
arpl
inc
sarb
dec
std
cmpb
sbb
sub
bound
sti
xchg
aas
jge
stos
cltd
cli
jl
or
fwait
cmp
loopne
sbb
cwtl
addr16
sub
inc
sub
lret
test
inc
inc
adc
mov
add
arpl
scas
or
fimuls
test
rolb
xchg
cwtl
xchg
outsl
pop
mov
jg
inc
scas
daa
fmull
dec
arpl
ret
push
test
rcrb
testl
orb
dec
sbb
loopne
pop
idivb
sub
pop
inc
rcl
inc
sbb
loope
test
movsl
xor
stc
xlat
jns
js
stc
mov
sub
jmp
mov
jmp
ror
pop
dec
or
sub
lds
pop
pop
inc
imul
dec
xchg
mov
ss
hlt
test
loope
ja
ja
dec
push
sar
jne
inc
mov
test
addb
and
mov
cmpsl
mov
xlat
mov
or
pop
ljmp
fadds
call
lods
inc
js
xor
add
ds
ror
ret
add
sub
out
ret
xchg
sub
sub
enter
push
xchg
jl
adc
adc
sgdtl
test
adc
adc
add
fstpl
push
or
xor
mov
mov
cmp
xchg
cmp
aam
add
outsb
xchg
lds
add
push
sti
jbe
stos
and
mov
xor
call
xchg
fs
push
cld
in
aas
pop
pusha
js
aaa
or
int3
js
in
arpl
scas
fdivrs
xor
push
adc
scas
mov
xchg
or
ret
cmpsl
inc
shl
ret
out
out
xchg
sub
mov
mov
mov
imul
fisttpl
inc
daa
push
mov
add
outsl
mov
xchg
test
insl
adc
test
jmp
and
int3
pop
lcall
data16
push
push
pop
cwtl
fldenv
fdivl
or
ficoms
cld
iret
cmp
xchg
jae
adc
imul
mov
sbb
pop
lret
mov
and
pop
lds
mov
push
insb
pop
mov
cmp
sbb
subb
adc
inc
jnp
out
adc
mov
ficomps
mov
jns
outsl
mov
push
fstp
int
or
mov
pop
and
icebp
sbb
sub
and
xchg
popa
jbe
fildl
dec
pop
daa
pop
test
push
div
loopne
hlt
ret
jp
push
rorb
bound
loopne
ds
inc
mov
jo
inc
lret
shll
repnz
in
arpl
aad
gs
push
jmp
arpl
stc
rolb
xchg
push
outsl
pop
push
pop
shl
and
jmp
mov
std
adc
dec
das
repz
jo
or
push
push
inc
cld
or
mov
orl
ret
push
ret
push
loopne
mov
dec
rorb
insb
dec
xor
mov
dec
xor
mov
daa
in
icebp
xchg
stos
out
xchg
pop
or
es
xor
mov
adc
or
pop
out
add
jl
sbb
fidivrl
mov
fdivrl
repz
test
popl
idivb
dec
cli
pop
add
sbb
inc
rcl
js
add
popf
cmp
pop
imul
push
inc
dec
and
jae
adcl
mov
inc
int
cmp
jecxz
adc
aaa
and
mov
push
test
add
rcrb
xchg
lret
pop
call
rcrb
pop
inc
paddq
inc
frstor
call
push
pop
mov
jle
cmp
mov
movsl
pop
pop
xchg
hlt
or
dec
cmp
fwait
jne
cmp
pop
idivb
in
jns
insb
mov
lcall
push
inc
xor
fcoml
cmp
xor
aas
lods
cld
mov
mov
xchg
dec
ret
mov
inc
das
lcall
fidivl
or
sbb
int3
jle
dec
jle
aas
push
shrb
fcmovbe
mov
mov
xchg
inc
add
mov
ss
test
je
je
scas
sbb
mov
cwtl
mov
stc
adc
and
xor
in
mov
sbb
push
and
imul
cmp
outsb
jmp
mov
test
rorb
imull
lret
iret
mov
cmp
nop
int
test
aas
aam
out
out
ja
push
in
out
loopne
leave
out
fs
pop
roll
jo
add
push
sub
inc
mov
cs
iret
adc
push
dec
into
cltd
lret
xchg
push
mov
sbb
jnp
mov
enter
sub
sarl
or
fidivl
bound
dec
call
mov
das
add
clc
aad
mov
cmpsb
mov
das
cmp
mov
daa
mov
mov
xor
xor
es
addr16
popa
lcall
sub
push
jl
sbb
hlt
jmp
ret
stos
mov
jne
add
jp
popf
lcall
mov
idivl
or
adc
pop
cwtl
int
test
sbb
test
ja
mov
in
mov
mov
or
inc
pop
loop
scas
push
push
add
push
pop
push
cwtl
lods
daa
jbe
test
ss
cld
mov
lcall
arpl
mov
mul
push
xor
das
xor
xchg
stos
in
clc
and
push
mov
test
sbbl
pop
ret
sarb
adc
xchg
lds
incl
pop
xor
jl
mov
and
aam
jl
xchg
adc
jo
lret
or
subb
mov
cltd
jbe
push
jle
lret
dec
xor
les
mov
shrb
jae
shlb
sbb
inc
pusha
add
push
cmp
cli
sti
inc
in
icebp
dec
adc
notl
pusha
cltd
jg
nopl
or
xchg
mov
mov
add
sbb
fistps
int3
daa
inc
dec
lret
adc
ja
popa
or
mov
in
xlat
das
divb
and
pop
mov
inc
orb
mov
xchg
cs
jo
xchg
pmulhw
mov
ficoms
loope
mov
xor
sub
mov
sub
inc
cld
jno
nop
movsb
add
jo
mov
pop
mov
pop
pop
imul
pop
in
xor
pop
pop
data16
push
sahf
repz
sbb
jg
add
repnz
ret
mov
hlt
rep
bound
sub
xor
pusha
lods
mov
cs
xchg
and
xchg
or
loop
jg
insb
clc
lret
jecxz
inc
sahf
iret
mov
outsl
pop
inc
fistl
inc
sub
les
stc
xchg
jb
mov
and
xchg
mov
and
or
and
inc
inc
or
lcall
sbb
es
daa
call
inc
nop
mov
hlt
mov
nop
shl
add
idiv
cmp
xlat
stc
aad
mov
mov
fisubs
scas
repz
sbb
inc
imul
mov
mov
dec
cmp
mov
ja
cmp
cmp
shlb
xor
mov
adc
mov
jl
cmovbe
mov
and
mov
in
and
push
jecxz
cli
mov
std
enter
fnstcw
sbb
sti
cmc
xchg
lods
dec
sbb
dec
adc
xchg
xor
repnz
lods
lds
cmpb
ficoml
mov
sbb
js
std
push
mov
scas
std
and
out
sub
jge
add
mov
fisubrs
outsl
test
sbbl
in
call
stos
xor
inc
rcl
inc
idivl
rorb
pop
jo
jne
xor
pop
lods
cmpsb
mov
sub
clc
push
call
inc
or
ds
mov
sbb
inc
les
fs
mov
xchg
adc
xchg
in
scas
shl
sbbl
flds
lcall
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
frstor
mov
adc
outsl
std
push
fcoml
mov
xor
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fsubr
mov
jo
popl
mov
test
les
les
inc
repz
push
int3
add
test
subb
in
jl
xchg
adc
xchg
fcoml
mov
ja
insb
movsb
sub
fprem1
and
xorl
dec
sbb
xchg
dec
outsl
push
add
jns
gs
push
les
xchg
inc
mov
cmp
insl
fldz
and
xorl
pop
sbb
psrad
cwtl
push
test
sub
dec
out
jp
push
fdivrl
or
xchg
sub
fnstenv
jo
nop
lods
sub
ficoms
addr16
sub
shll
jno
xchg
imull
adc
fcoml
nop
std
imul
adc
std
push
fcoml
mov
jo
xchg
std
imul
gs
std
push
fcoml
xchg
std
push
insb
push
mov
add
std
push
fcoml
mov
jo
cmp
mov
adc
imulb
outsl
shll
mov
mov
adc
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
inc
or
notl
nop
std
js
insb
rorl
sarb
fcoml
mov
jo
nop
std
mov
mov
jo
nop
std
push
mov
mov
dec
popa
nop
std
push
fcoml
mov
jo
mov
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
jo
nop
std
push
fcoml
mov
push
divb
mov
in
iret
movsl
push
xchg
add
lret
adc
nop
dec
fsts
cmc
scas
les
ffree
xchg
fdivl
sub
and
lahf
mov
pop
mov
mov
pop
add
pushl
inc
jne
add
push
ljmp
es
sarl
jge
sub
data16
push
adc
mov
std
pop
leave
mov
arpl
mov
pop
daa
push
add
mov
repz
pop
cmc
or
mov
stos
scas
push
lods
inc
test
lea
xor
frstor
and
insb
add
scas
lret
enter
fwait
xchg
adc
out
xchg
cltd
jnp
stos
mov
pop
jmp
mov
pop
loope
mov
js
test
es
sbb
mov
mov
inc
jb
jecxz
inc
stos
fsts
aad
xchg
mov
xchg
outsb
sbb
xchg
insb
out
ja
mov
sahf
and
cmpsl
frstor
and
cmp
or
push
or
rdtsc
call
jne
xchg
mov
jecxz
lock
xchg
lds
loop
enter
je
and
mov
dec
xchg
or
xorl
and
decl
dec
addr16
jmp
in
sub
cltd
arpl
ret
dec
adc
jp
mov
out
sbb
lods
lock
insb
outsl
mov
shrb
mov
inc
mov
filds
test
je
lock
pop
gs
enter
xor
push
aad
adc
mov
add
xchg
jg
and
lahf
pop
and
jns
xchg
dec
xchg
jnp
or
cwtl
pop
pop
rolb
xchg
jne
adc
push
lds
dec
stos
mov
test
movsl
xchg
jae
les
xor
sahf
aad
or
inc
pop
mov
fs
lret
mov
sub
and
lahf
fwait
or
adc
push
aam
mov
into
enter
dec
and
imul
scas
fldlg2
xchg
rcll
pop
xchg
mulb
add
lock
cld
xchg
mov
adc
shlb
lock
imul
lret
jno
xchg
leave
scas
xchg
sub
ja
sti
dec
pop
mov
cmp
mov
cmp
fistps
mov
dec
mov
xor
cmp
aaa
dec
pop
nop
ret
fs
xor
push
jl
or
xchg
hlt
jge
inc
sub
es
mov
mov
inc
mov
mov
call
ja
inc
rcrl
push
popa
adc
lods
sub
mov
sub
dec
mov
dec
outsl
fadd
jp
pop
sahf
sarb
pop
popf
jl
mov
icebp
loop
sarl
adc
add
lahf
xlat
jmp
inc
je
xlat
fsts
or
push
fidivl
outsl
sbb
push
out
xor
push
iret
and
ds
lret
arpl
pop
test
mov
pop
pop
sbb
add
mov
sti
mov
add
dec
mov
xchg
je
jge
insl
outsb
push
adc
mov
jmp
enter
test
cld
mov
sbb
xchg
call
xor
outsb
push
ds
mov
xor
test
aas
ret
std
popf
fsubr
jle
test
pusha
inc
pop
pop
movsl
out
arpl
or
aaa
gs
cmpsl
sub
push
jae
cmc
into
in
rolb
xchg
pop
jbe
sub
mov
loopne
add
jae
adc
fistps
jb
loope
push
repz
cltd
lcall
addr16
xchg
inc
xor
add
loope
shrb
push
xchg
dec
nop
mov
scas
xlat
cmp
insb
fsts
mov
lock
inc
in
mov
inc
mov
mov
arpl
cmp
push
mov
fisubrs
or
dec
xchg
shlb
adc
pop
sar
stos
icebp
jecxz
nop
sub
pop
pop
xlat
sbb
jge
jecxz
call
roll
shll
push
dec
push
sbb
das
imull
daa
daa
push
cltd
or
sarb
xor
loope
mov
xchg
outsl
gs
test
icebp
flds
mov
sahf
js
roll
jmp
cmc
test
cmp
jge
push
cmpsl
int3
mov
fwait
popa
xor
into
cmp
gs
xchg
fidivrs
fldcw
jp
or
mov
xchg
pop
out
mov
adc
pop
jp
int
dec
jb
pop
mov
sub
cmc
xchg
leave
aas
ss
push
arpl
mov
push
or
inc
pop
sarl
sbb
sub
insl
fadds
ret
imul
leave
mov
fbld
mov
push
sub
fcomi
dec
aas
cs
mov
dec
orl
std
lret
fmuls
outsl
and
js
push
popf
adc
adcl
adc
push
xchg
lcall
cld
ds
ljmp
push
mov
push
mov
push
xchg
je
push
in
mov
mov
mov
aaa
inc
je
daa
xchg
jp
ss
sbb
adcl
push
sbb
fstpl
add
in
cmpsb
jmp
inc
and
pop
or
aad
pop
lods
xchg
push
int
mov
std
sub
dec
arpl
dec
xchg
rcrb
fmulp
dec
daa
mov
and
xchg
xor
outsl
jno
sub
xor
mov
mov
fdivs
xchg
mov
adc
jecxz
ja
scas
test
repnz
sbb
sbb
push
insl
addr16
mov
ror
cld
sbb
imul
addb
loop
filds
adc
stos
inc
imul
mov
or
test
je
ja
fsubrs
add
outsl
hlt
mov
xor
test
add
jno
mov
rcrb
inc
mov
std
mov
add
ds
cld
gs
pop
movsl
xchg
inc
dec
add
lock
mov
popf
jle
fisubs
inc
stos
sbb
mov
mov
insl
cld
cmpsl
dec
push
fwait
xor
xchg
mov
dec
push
pop
sub
or
sbb
rolb
pop
int3
jne
lds
cmp
daa
jp
sub
test
or
jbe
nop
mov
rcl
jmp
add
xchg
mov
subb
cmp
test
dec
lods
das
les
mov
adc
jmp
sub
push
in
ffreep
jg
in
ljmp
ficomps
or
cmp
add
ljmp
xchg
lahf
push
cltd
inc
jmp
cmp
and
adc
fdivrp
pushf
int3
cmp
xchg
dec
or
ret
push
mov
jns
xchg
jge
cmp
dec
test
jae
scas
shrl
xchg
cmpsl
ret
iret
push
xor
call
aad
mov
js
stos
ss
xor
and
or
add
pushf
popf
mov
or
ficoms
adc
insl
in
jne
lcall
jecxz
cmp
shl
mov
lea
pusha
lret
lods
jae
cmp
pushl
addr16
stc
sub
inc
or
jbe
or
and
mov
lahf
mov
jle
add
jmp
test
xor
test
xor
and
insl
popf
xchg
outsb
mov
in
movsb
mov
xchg
hlt
js
mov
mov
sti
lcall
push
insl
dec
in
aad
sahf
adc
jl
sub
fsubrl
dec
dec
fiaddl
mov
into
notb
mov
sbbb
pop
inc
hlt
xor
nop
sub
imul
daa
mov
push
xor
adc
mov
lahf
ret
mov
add
inc
ficompl
pop
out
jns
push
and
mov
and
jo
fstl
scas
lods
into
cmp
aam
add
mov
pop
jb
out
test
imul
xchg
pop
das
sahf
lret
divb
notl
mov
mov
js
inc
jae
je
xlat
xchg
in
or
push
dec
pushl
sbb
cwtl
pop
dec
mov
or
mov
inc
inc
ds
sbb
fsubs
mov
mov
xchg
pop
dec
pop
stos
mov
loope
loope
gs
dec
inc
or
pop
movsb
insl
jo
dec
lods
sbb
jecxz
pusha
sarb
push
sub
mov
inc
mov
out
dec
jp
jmp
pusha
push
cmp
out
loop
lea
mov
push
popf
mov
roll
fldt
mov
addr16
les
popa
jb
mov
js
and
clc
inc
dec
sub
rorl
pop
ficoml
mov
sub
adc
repnz
arpl
push
lret
ret
pop
push
dec
ljmp
lret
inc
pop
xchg
cmp
and
js
jnp
jle
icebp
mov
sbb
jns
stos
sub
fwait
rclb
out
jmp
jmp
cmc
xchg
xchg
fs
ja
jno
adc
icebp
in
in
rcr
xlat
adc
jecxz
mov
cmp
out
or
in
mov
dec
leave
ret
jbe
ja
in
mov
clc
mov
jne
dec
xor
divb
enter
inc
enter
fdiv
lea
movsl
ja
xor
and
pop
add
popa
mov
xchg
call
pop
test
movl
imul
imul
pushf
aas
push
jmp
test
pusha
scas
push
sub
popf
dec
aam
cmpl
xlat
es
and
jg
jp
fcompl
mov
sub
outsl
js
and
fdivrs
jge
jno
nop
loopne
or
mov
adc
dec
addl
imul
push
inc
mov
push
cwtl
aam
mov
xor
xchg
fbld
popf
xchg
mov
push
adc
data16
arpl
mov
mov
cmp
jge,pn
mov
adc
sub
dec
adc
push
int
aas
test
fwait
mov
mov
repnz
mov
dec
mov
add
pop
test
in
sbb
fs
mov
dec
adc
mov
xchg
jg
addr16
arpl
loope
out
xchg
dec
repz
lret
dec
mov
jl
inc
fbld
and
mov
addr16
jnp
sub
dec
mov
adc
adc
xor
outsl
push
out
pop
lea
sar
cmp
mov
sub
cwtl
pop
nop
into
jbe
pop
fmull
xchg
push
popf
cltd
gs
pop
imul
adc
in
jno
sub
and
rorl
and
add
daa
xchg
jb
add
cmp
push
je
testb
les
or
repz
mov
aas
scas
clc
lcall
sub
push
sub
dec
jle
sbb
shll
pop
imul
jl
rcl
iret
mov
add
jmp
add
decl
int3
mov
jb
aaa
cmc
fnsave
aam
testl
jle
gs
sar
jmp
repz
inc
mov
pop
xchg
call
sub
and
mov
jbe
test
push
mov
arpl
pop
shl
fcomi
fs
stc
inc
addr16
mov
fldl
mov
sub
rorb
mov
jo
arpl
sbb
mov
push
push
adc
and
push
mov
sti
nop
mov
cmp
mov
cltd
xchg
or
ds
bound
jp
lods
sbb
mov
int3
jae
or
es
lea
lcall
pop
jmp
jle
adc
sti
mov
dec
outsb
inc
add
outsl
sbb
arpl
jbe
cmp
xor
iret
xor
test
or
xchg
xchg
test
je
repz
stc
out
push
jno
stos
mov
arpl
xchg
push
inc
mov
dec
xchg
mov
addr16
dec
sbb
les
fisttpll
sbbb
jno
gs
pop
jge
ret
adc
or
sahf
or
mov
dec
loope
cmp
std
add
pop
scas
xor
lds
std
addr16
mov
in
adc
pusha
push
lods
xchg
mov
fstpt
out
int3
dec
push
imull
sub
cmpsb
xchg
lods
jg
pop
add
loop
test
movsl
cmp
lret
push
in
xchg
push
sub
cmp
xchg
div
or
test
das
xchg
lds
aam
test
inc
shll
leave
and
or
hlt
pop
mov
sub
popa
push
mov
je
dec
shr
sub
add
es
fildl
mov
mov
imul
xlat
push
out
jns
mov
xlat
movsb
xchg
out
mov
fbld
cwtl
cmp
gs
xor
xor
dec
or
ja
pop
adc
pop
sbb
iret
push
dec
inc
lcall
ds
add
xchg
call
outsb
dec
lods
jnp
or
or
inc
add
cld
imul
dec
and
in
add
mov
dec
scas
aad
scas
mov
repnz
out
cmp
xchg
xchg
push
dec
sarl
decl
cli
xchg
test
imul
cwtl
and
mov
push
sahf
repz
or
adcb
fstl
les
cmc
popl
je
das
stos
jb
lods
hlt
inc
js
popa
fsubs
adc
push
pop
dec
sub
cmpsb
sbbb
dec
or
popf
add
xchg
and
loope
inc
out
sbb
test
pop
xchg
sub
and
cmp
lahf
push
inc
dec
push
sub
hlt
mov
out
int3
nop
js
inc
and
jne
testb
mul
pop
mov
lret
add
jae
test
xchg
sub
insl
ljmp
int
sar
ss
nop
sub
loop
int3
mov
fmul
out
ret
sarb
cmpsl
xchg
pop
mov
mov
push
push
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubl
add
popa
inc
add
popa
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
arpl
movsb
arpl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
addl
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
inc
add
addl
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
test
movsb
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
