fisubl
cmp
in
addr16
fstpt
pop
pop
int
lds
cmp
imull
mull
idivb
roll
xchg
les
fbstp
mov
int3
or
lcall
mov
cmpsb
inc
pop
push
add
dec
xchg
mov
test
adc
sub
inc
or
test
in
inc
dec
lahf
ret
das
leave
add
shr
jp
xor
jp
inc
or
cmp
cltd
cmpsb
inc
arpl
testb
xor
push
dec
mov
xlat
test
sub
push
scas
sbb
cmpsl
out
popf
cmpsl
cmpsb
jecxz
sbb
inc
pushf
mov
testl
int
leave
rcrb
sub
dec
in
jge
cld
push
out
popa
jecxz
mov
es
jg
mov
add
sti
aad
hlt
jb
xor
mov
nop
outsb
jl
addr16
and
test
sbbl
rcll
inc
call
jp
fidivrs
jb
cmpl
and
mov
cmp
dec
ljmp
mov
pop
movsl
ja
test
jmp
cmp
adc
add
cmp
loope
jo
inc
jle
mov
mov
xor
aam
das
pop
push
movsb
out
loop
adc
ja
xchg
xchg
adc
insl
cmc
test
xchg
mov
fcoms
sbb
in
ror
xchg
cmp
inc
dec
movsl
mov
jecxz
xor
cmc
lret
xor
xor
loope
iret
mov
mov
test
outsb
adc
mov
inc
fsub
lods
push
test
mov
loope
cmp
enter
xchg
pusha
call
daa
add
adc
fimuls
jmp
pop
cmp
andl
dec
daa
mov
mov
add
dec
cltd
bound
sarb
fcompl
idivl
ret
cmc
add
ja
aam
mov
sub
shl
popa
movsb
fbstp
cli
pop
arpl
xchg
push
sbb
inc
mov
incb
insl
sub
xor
mov
imul
int3
aas
fists
push
or
gs
xchg
add
xchg
jo
mov
push
outsl
and
pop
push
inc
gs
sub
jb
das
sub
iret
mov
push
jle
lea
sti
je
pop
loopne
lds
push
mov
cmp
mov
scas
lds
jb
sbb
hlt
inc
es
mov
xor
fsubrs
in
mov
mov
push
insl
adc
sub
or
xchg
mov
xchg
xor
roll
mov
xlat
dec
sti
xor
push
int3
stos
push
in
popf
push
mov
mov
dec
movl
sbb
popf
dec
adc
sub
cmp
dec
jmp
xchg
push
xor
test
scas
push
mull
fcoms
std
pop
pusha
popl
jns
pop
sbbb
xor
push
dec
lock
out
inc
in
xchg
les
or
out
sub
sbb
xchg
cmpsl
or
push
sti
adc
cwtl
addr16
xor
add
aad
loopne
jmp
les
outsb
jmp
sub
rclb
jbe
pusha
cltd
daa
cmp
dec
pop
push
icebp
mov
inc
int3
xchg
pushf
pushf
sti
dec
mov
xor
add
dec
push
out
add
into
cltd
sbb
pop
rclb
cmpsb
mov
inc
cmp
cmp
cld
lods
movsb
ljmp
mov
push
inc
dec
pop
stos
sub
ficompl
cmp
xchg
inc
lret
and
fadds
shrl
inc
pop
shlb
aam
aas
fimull
lea
mull
jle
inc
leave
xor
xchg
xor
test
imul
imul
sub
int3
and
sub
daa
cmp
xchg
add
push
jns
test
lahf
js
add
and
lods
pop
mov
loope
jnp
mov
leave
insl
adc
xchg
mov
push
push
mov
roll
add
pop
xcrypt-ofb
cmpsl
sub
mov
rcrb
mov
inc
test
or
cmp
outsb
mov
mov
test
decb
xchg
jp
mov
push
fcompl
bound
fnstcw
lods
icebp
out
xor
xchg
sbb
cmp
sbb
cmp
sub
ret
lock
xchg
sub
pusha
repnz
sub
in
sbb
dec
xchg
movsb
iret
sar
shl
cmpsl
jb
jl
lcall
jmp
xor
push
jne
jne
imul
pop
ret
addr16
pop
pusha
jecxz
pop
xlat
jne
jp
clc
and
insb
ljmp
or
or
inc
cmc
pop
sbb
out
gs
pop
in
adc
enter
xchg
and
push
fisttpll
add
fadds
pop
shll
adc
push
loope
xchg
add
fdivs
jp
dec
rcrl
cmp
aas
faddl
add
pop
jl
fistl
and
gs
or
dec
ja
mov
dec
nop
xchg
and
pop
cmp
mov
aas
adc
push
push
iret
movl
mov
bound
and
pop
rcll
xchg
xlat
and
push
sub
out
sub
aad
test
mov
mov
mov
incb
int
inc
orb
pop
dec
std
stos
mov
xchg
jmp
push
sub
lcall
and
push
lahf
in
xchg
push
sub
mov
in
std
inc
xor
fcmovb
adc
int3
inc
jnp
and
movsl
and
push
pusha
cmpsl
addb
scas
or
or
ret
jnp
sbb
jge
mov
add
sti
sbb
and
xor
mov
pop
shll
mov
sbb
movsb
or
cmp
daa
fsubl
sub
lret
inc
pop
das
dec
aas
xor
sub
shll
stc
sti
insb
cmpl
ljmp
addb
xchg
frstor
into
mov
fildl
out
outsl
in
into
ret
inc
ret
mov
fdiv
fldpi
js
inc
sbb
jb
cs
jo
mov
minps
xchg
out
inc
sub
sub
sub
inc
lahf
ljmp
dec
adc
stos
jns
std
fisttpll
rcrl
mov
sti
dec
sbb
mov
sub
mov
lock
aam
ss
ret
in
rol
js
insl
out
xchg
inc
inc
and
adc
aam
loope
cmp
mov
test
fdivs
xchg
cmpsb
sub
fistps
inc
cmp
sti
mov
xor
out
js
jns
xchg
mov
jp
jecxz
add
mov
pop
int3
iret
sub
ja
mov
ret
jbe
add
mov
gs
stc
test
jmp
jns
mov
xor
sar
push
mov
adcl
cmpsl
test
sbb
cmp
data16
pop
mov
dec
adc
data16
addr16
repnz
sub
subl
rol
push
fstl
and
movsb
dec
jb
xchg
stos
adc
cltd
addr16
cld
idiv
mov
add
test
es
shlb
pop
cwtl
xchg
and
bound
mov
mov
les
outsb
jmp
jecxz
andb
hlt
incb
cmp
cmp
mov
add
outsb
pop
push
sub
leave
ret
aad
mov
push
in
mov
mov
xor
inc
mov
jg
mov
add
mov
nop
lcall
push
mov
or
adc
fnsave
xchg
insl
sbb
imul
cmp
dec
push
or
movsl
pop
scas
dec
add
repz
pop
lock
arpl
pop
dec
lock
jne
pop
lcall
test
mov
cwtl
pusha
aaa
adc
mov
push
fs
sbb
jae
pop
je
jbe
push
mov
jmp
out
lahf
lret
in
xchg
inc
cmp
xchg
xor
cmp
aas
fsubrl
pop
lods
ret
push
out
sbb
xchg
pop
repz
roll
pop
call
push
les
out
call
lcall
add
mov
adc
xlat
insb
jmp
or
mov
imul
add
out
inc
ljmp
push
mov
pushf
imul
sbb
pop
sub
icebp
lret
test
pushf
cmp
cmp
cmp
jae
inc
xchg
sbb
add
clc
push
mov
sbb
mov
mov
inc
xchg
repz
inc
mov
fcoml
testb
xchg
xor
mov
xor
dec
add
into
inc
lock
lret
xchg
setae
jnp
ret
dec
fbld
addr16
fstpt
add
repz
xchg
cli
iret
testb
xchg
and
cmc
cli
sbb
sub
xchg
mov
out
ret
push
stos
and
pop
add
mov
or
cmp
mov
vpcomb
sub
fnstsw
je
in
or
mov
movsl
test
inc
jle
in
fcomps
xchg
sub
push
sbb
movsl
std
jp
repz
add
fdivp
insl
sbb
xor
cmpb
or
jbe
lea
adc
pop
aad
in
jmp
xchg
enter
sahf
pop
pop
int3
pop
xor
mov
into
mov
mov
mov
pop
sbb
daa
adc
xchg
inc
out
es
pop
mov
imul
mov
nop
mov
jbe
push
je
fcoml
xor
xor
loopne
mov
jnp
push
push
lcall
daa
lods
xchg
stos
adc
inc
lcall
cmpsb
or
pop
pusha
test
xor
mov
insb
sub
pcmpeqw
mov
fcoml
jbe
loop
js
xor
test
out
lds
mov
cld
adc
push
rorl
sarl
inc
insb
pop
or
jmp
loop
push
enter
arpl
cmpb
mov
pop
sbb
cmp
test
jns
aam
stos
es
maskmovq
divl
xchg
xor
fs
stos
sbb
mov
xorb
xor
jp
fldt
cmp
push
sub
imul
xchg
data16
inc
dec
mov
movsb
or
stos
sub
cmp
sbb
jb
pop
and
call
add
subl
cmp
lahf
aas
inc
mov
mov
mulb
cwtl
gs
cmpb
fwait
add
sub
pop
mov
loop
es
ds
lret
jmp
out
or
cs
pushf
mov
xchg
popa
clc
jne
fidivl
call
and
sarl
rep
inc
pusha
push
mov
push
inc
adc
rol
jl
add
cmp
mov
cltd
jg
jmp
das
clc
xchg
add
outsl
pop
dec
mov
mov
loope
int
sbb
jo
add
add
dec
push
cmc
and
add
and
mov
into
loope
out
jge
cmp
movsl
cmp
insl
out
push
bound
popf
mov
mov
cmp
push
cmc
mul
arpl
xor
push
pusha
xchg
aam
and
sti
add
jae
pop
enter
js
add
xor
cmp
cmp
hlt
add
add
or
sub
sub
into
push
inc
and
xchg
jmp
int
cmp
mull
mov
imul
and
or
lret
lret
pop
dec
cmp
aas
lds
enter
jae
loope
stos
fbld
xor
push
data16
cltd
aad
xchg
mov
jae
pop
inc
push
fisubrs
daa
sub
pop
dec
mov
test
fadds
mov
popa
jnp
movsl
idivl
pop
mov
dec
ss
push
push
movsl
and
lock
mov
lock
xchg
aam
in
sbb
cltd
inc
lds
movsb
lahf
rclb
xchg
push
and
jae
sub
mov
movsb
push
std
add
mov
mov
insl
inc
xor
iret
repz
lret
push
enter
lds
inc
xor
pushf
insl
cmp
push
imul
lds
insb
inc
mov
out
sbb
call
icebp
data16
mov
popf
push
out
push
fnstsw
into
jl
mov
roll
cmp
rorl
cmp
rcr
mov
jmp
or
nop
xor
hlt
movsl
jne
imul
xor
dec
lcall
xchg
jecxz
insb
mov
cli
ja
or
push
pop
mov
and
movsb
clc
adc
sbb
je
inc
fistps
in
mov
sbb
add
popa
xlat
ja
test
stos
dec
adc
out
leave
push
fs
push
inc
daa
push
int3
and
inc
xchg
sub
jge
jo
fwait
movsb
cmp
jnp
mov
ret
push
push
jge
and
add
ffreep
cmpb
out
stc
or
das
movsb
rcr
hlt
decl
fldl2t
mov
jp
mov
xchg
out
fucomip
sahf
jns
xchg
inc
lret
sub
arpl
int3
jg
hlt
push
scas
fcmove
adcb
lods
stc
sbb
sarb
test
or
add
dec
rcl
in
xchg
jb
xchg
push
sbb
inc
cld
cltd
mov
pop
inc
cltd
push
loop
sysexit
sub
hlt
ss
pop
and
pop
mov
add
adc
addr16
cmp
call
popa
movsl
adc
xlat
roll
or
push
bound
add
pop
mov
pop
jns
sub
pop
xchg
fcoml
push
insl
cmp
add
das
dec
es
xchg
inc
xchg
jne
mov
movsb
lds
xchg
pop
jne
sub
adc
jns
jo
pop
ja
lock
cld
fcoml
dec
insb
fsubrs
aaa
or
and
out
push
iret
sub
pop
mov
sub
cmp
mov
mov
fstpt
enter
push
sarb
dec
mov
mov
or
sub
call
mov
les
in
jnp
cmp
cmpsl
sub
mov
push
into
xchg
inc
xlat
loope
outsb
and
xchg
inc
ret
ret
jmp
rol
jnp
lea
sub
mov
int3
inc
and
xor
mov
xchg
jns
mov
and
std
mov
add
cli
fisubrl
mov
rcrl
mov
xchg
mov
adc
pop
in
mov
mov
sbb
out
sbb
pusha
mov
jbe
xor
rcl
push
out
scas
subb
mov
push
jae
mov
popa
xchg
add
fisubs
dec
sbb
enter
mov
cmp
or
arpl
ljmp
fimull
jl
or
fstpl
cmp
lahf
fidivs
sbb
pop
nop
pop
sbb
sbb
repz
dec
pop
js
xchg
lods
xchg
lods
int
test
jo
sub
cmc
cld
inc
or
jbe
push
mov
jns
push
cmp
fwait
cs
push
and
sub
ss
data16
xor
jb
sub
mov
xor
lret
push
or
jge
int3
cltd
insb
mov
jl
xchg
pop
inc
call
sub
fs
lret
popa
ret
mov
add
add
dec
sbb
push
fcomp
in
jb
xchg
pop
add
clc
sub
dec
mov
fistpll
arpl
jo
mov
or
sti
les
push
xor
ljmp
mov
or
in
out
inc
js
cmp
sub
inc
xor
jp
gs
cmp
sbb
iret
popf
out
rol
jno
jg
aam
sub
cmp
out
pop
xchg
sub
lcall
sbb
xchg
sub
insb
leave
mov
lret
push
xchg
rorb
pop
or
dec
gs
das
inc
dec
jl
jmp
dec
outsl
nop
pop
pop
dec
push
repz
and
mov
adc
mulb
jmp
jecxz
sti
in
xor
push
sub
inc
jecxz
iret
cltd
test
repnz
cmc
adc
inc
jne
addr16
lods
adc
push
arpl
adc
loop
jp
mov
lret
shrl
nop
fwait
push
fnstcw
sub
or
dec
aam
mov
dec
mov
jg
push
mov
xchg
pop
into
stos
lcall
les
cltd
and
push
fnstcw
pop
je
enter
call
cmp
pop
fmull
or
lock
pop
sti
imul
mov
xor
push
sub
pop
arpl
xorb
and
lcall
enter
adc
test
xor
mov
cltd
sti
in
stc
ljmp
cs
mov
dec
fisttpl
idivb
lret
inc
clc
inc
insl
inc
pop
cs
es
fwait
jb
movsl
sbb
xor
xchg
adc
loopne
adc
pop
adc
dec
fildll
lret
xor
fmull
jb
xor
push
push
gs
lret
jge
sahf
movsb
rcrl
sbb
add
xor
sub
leave
jl
sbb
pushf
insl
roll
rorl
call
dec
pop
int3
ss
in
sarb
mov
xor
sbb
adc
fsubr
jl
rcrl
dec
les
lret
filds
add
jb
imul
pop
lods
insb
leave
push
scas
inc
inc
cmc
test
dec
lcall
repz
push
decb
inc
sub
push
adc
cmp
sub
popa
or
dec
insl
jnp
xchg
shrl
mov
and
jns
jb
jmp
incl
and
scas
sti
fnstcw
adc
mov
das
stos
adc
dec
jmp
pusha
lods
xor
cld
inc
mov
test
mov
ret
jbe
ds
popf
or
jbe
pop
cwtl
jmp
jl
lock
fistpl
pop
std
lods
ret
decl
mov
repz
cmpsb
add
ds
sti
subl
dec
leave
aaa
cld
daa
sub
mov
or
iret
outsl
loop
jb
inc
adcb
cmp
jnp
adc
ljmp
shrb
mov
jns
mov
dec
into
in
mov
aaa
aaa
cmp
xchg
inc
cmp
mov
jnp
dec
inc
dec
je
xchg
jg
xchg
mov
sti
dec
add
ss
mov
xchg
pop
mov
gs
aam
jne
cmpl
fsubl
iret
dec
test
mov
fwait
pop
cmp
mov
les
dec
icebp
push
gs
jb
pcmpgtw
test
rcll
or
or
cmpsb
fcomi
mull
stos
or
test
movsl
nop
pop
jle
inc
enter
sahf
outsl
xor
sub
dec
xor
sbb
pop
inc
push
mov
push
xor
mov
pop
aas
pop
loop
mov
fsqrt
fisubrl
test
sbb
adc
lcall
lock
aaa
fidivrs
ss
pop
insb
insl
push
mov
fcmove
and
lock
jmp
ret
popf
mov
orb
cmc
vunpcklps
ss
xchg
repz
clc
popf
cmp
test
test
xchg
out
push
add
or
push
cli
jns
pop
xchg
andb
lret
cmc
lret
cwtl
xchg
xor
repz
xchg
pop
push
fistpll
ja
mov
outsl
rcrl
inc
pop
jae
stc
aam
cmp
sbb
mov
enter
mov
push
movsb
sbb
mov
or
mov
cli
sub
cmp
sub
jp
sbb
jle
popf
push
sub
inc
aas
pusha
fs
lods
xlat
xchg
cmpsb
faddp
loope
lods
sbb
sub
push
popf
fmull
in
ss
mov
jmp
jg
inc
fisttpll
inc
and
ja
stc
fildl
sti
sbb
pop
push
mov
shrb
pop
fiadds
rol
scas
adc
sub
inc
cmp
xchg
mov
out
mov
mov
pop
inc
mov
mov
cmpsb
into
fwait
mov
mov
mov
sahf
inc
jmp
and
fnstenv
icebp
aam
push
xor
push
cmp
mov
adc
pop
icebp
pop
imul
outsl
pop
cld
jae
repnz
std
add
cmp
sbb
iret
mov
les
sar
int3
cltd
in
insb
insb
rcrb
loope
sub
cmc
xchg
adc
dec
fwait
mov
mov
iret
xchg
push
out
mul
xlat
mov
dec
inc
xchg
popf
pushf
sbb
mov
xor
adc
adc
mov
xchg
repz
lcall
mov
push
rcrb
mov
mov
cmc
out
push
add
push
or
jmp
fs
je
stos
sbb
jo
fisubrl
sahf
sbb
in
sbb
xchg
xchg
cltd
push
sbb
dec
in
mov
xchg
das
jge
sub
scas
push
cmp
sbb
adc
add
xor
dec
iret
jg
dec
push
jp
fldcw
repz
push
or
sbb
mov
push
arpl
pop
push
lods
adc
xchg
aas
push
add
xor
jmp
negb
sbb
cltd
add
xchg
enter
xchg
push
or
or
mov
and
push
jl
mov
jge
ret
pop
loopne
hlt
inc
pop
push
sahf
repz
aas
orl
jb
or
add
add
fstl
in
push
iret
mov
std
xor
aam
push
aad
js
and
jg
pop
push
andl
cmp
sub
imul
cmp
jecxz
test
pop
inc
xchg
stc
pop
push
adc
hlt
testl
xor
or
repnz
das
jno
xor
insl
addr16
cmpsb
dec
int
std
mov
sbb
fmull
add
cmc
out
jle
and
mov
stos
cs
andl
adc
in
lods
mov
xor
pop
dec
xor
popa
ret
mov
mov
in
add
xchg
hlt
sub
cmp
pushf
sub
loopne
sarb
loopne
mov
roll
std
and
mov
jno
ds
scas
cmp
inc
stos
adc
mov
sbb
jns
pop
mov
and
lea
test
inc
loope
call
out
or
xor
sbb
cwtl
pop
cmp
andb
add
mov
or
lods
xchg
dec
mov
icebp
and
ds
cmp
out
fucomip
sub
jno
loop
pop
aad
leave
in
push
jno
mov
add
out
fists
mov
adcb
cli
sbb
out
push
popa
and
cltd
aaa
imul
jns
mov
jns
add
ret
pop
icebp
sub
inc
int
repz
xchg
mov
out
scas
pop
or
ret
repz
scas
lea
xchg
lods
js
jp
ret
les
int3
mov
fwait
xor
dec
dec
inc
jb
mov
scas
sub
mov
jns
nop
stos
push
and
adc
fidivs
dec
filds
push
ljmp
mov
xor
out
dec
dec
xchg
pop
inc
dec
in
mov
loop
sbbl
xchg
sar
mov
fucompp
fmull
push
cmpl
sbb
icebp
scas
andb
sub
dec
aas
cmp
jecxz
sub
daa
mov
push
pushf
push
fwait
lret
push
lock
shrl
rcrb
loop
insl
nop
xor
adc
xor
in
push
pop
shrl
outsb
add
pop
cs
push
shll
shrl
mov
int3
sti
xor
lahf
mov
cltd
push
add
or
cmp
cmp
xchg
fidivl
insb
aad
mov
jne
mov
mov
inc
cltd
push
sahf
push
jbe
and
jp
movsb
jno
outsb
fildl
inc
sarl
mov
or
xchg
adc
lock
jmp
aaa
jmp
jge
les
and
mov
xor
shrl
stc
data16
sti
cmc
jbe
jmp
xchg
daa
xor
iret
dec
xor
jo
outsb
jmp
nop
push
fcmovu
dec
shll
mov
adc
adc
dec
popf
lock
sub
jecxz
loopne
mov
mov
push
cmc
mov
fbstp
lret
add
push
ja
loop
adc
rcrb
je
pop
repz
shlb
xor
out
int3
sbb
aaa
pop
call
sbb
sub
xchg
sbb
mov
cwtl
cld
mov
mov
cmp
push
call
dec
push
add
es
in
mov
and
fadds
xor
sub
mov
mov
jp
lds
jo
imul
mov
fnstenv
push
fdecstp
push
stc
fs
cli
jae
cmpb
and
pop
repnz
sub
dec
mov
pop
adc
mov
mov
adc
mov
mov
enter
sbb
cmp
and
lods
cmc
in
sub
sbb
sub
outsb
out
std
xchg
cmp
push
add
jnp
js
insl
cmp
das
cwtl
pop
cmp
jp
cmovl
xchg
movsl
and
out
lahf
sbb
push
testb
jbe
lock
cmpsb
nop
sbb
fldl
mov
ret
sub
jl
lds
movsl
jecxz
in
enter
xlat
mov
outsb
mov
xchg
ja,pt
fwait
lret
fldl
cs
movb
sbb
jne
lods
pushf
addb
jno
add
fstps
or
lock
ja
mov
sub
lock
shll
cmc
xlat
iret
adc
inc
and
ds
insb
xchg
cwtl
cmp
mov
ljmp
pop
fwait
dec
sarb
scas
frstor
pop
mov
xchg
pop
rclb
sahf
sbb
inc
mov
ss
test
daa
mov
push
inc
cmp
adc
or
xchg
rep
dec
mov
adc
es
pop
push
leave
mov
xor
fdivs
es
hlt
mov
icebp
fstps
mov
repz
push
dec
push
inc
mov
leave
leave
shlb
inc
pop
pop
push
movsl
fwait
int3
loopne
std
pop
jnp
xchg
dec
sbb
push
aad
mov
lds
cmp
cmpsl
rolb
lea
fwait
mov
int3
sub
minps
mov
xchg
dec
jns
xor
sbb
dec
nop
imul
push
add
call
pop
or
repnz
js,pn
mov
mov
scas
cmp
fwait
adc
jl
push
adc
lds
adc
pop
or
mov
std
push
lcall
cmc
leave
addr16
pop
add
mov
sub
jne
daa
sub
push
fmull
loop
ja
lahf
repz
jmp
xor
or
fiadds
stos
sbb
jbe
imul
subb
cmpsb
aad
adc
movsb
xchg
ret
jecxz
xor
ret
sub
test
into
mov
push
mov
enter
daa
dec
stos
leave
and
test
dec
cli
sub
inc
xchg
xchg
pop
ja
inc
mov
mov
imul
jnp
rolb
cmp
xchg
hlt
xor
push
xchg
in
xchg
shrb
shr
jo
or
subl
sbb
int3
hlt
push
xor
push
ret
mov
inc
pop
sbb
ficoml
sti
mov
loope
xor
movsb
lahf
mov
mov
dec
and
xchg
mov
cmp
lds
adc
inc
insb
pop
mov
mov
cmp
push
lret
cmp
jp
ss
je
clc
cld
mov
iret
xchg
ret
popf
pop
jecxz
adc
loopne
arpl
mov
popa
xor
adc
sbb
aam
loope
dec
mov
into
xor
dec
xchg
cmp
aad
mov
lds
adc
mov
loop
popa
and
push
xchg
std
fnsave
test
or
dec
cmp
into
cli
pop
or
fcoms
arpl
mov
pop
pop
adc
clc
mov
shlb
xor
aad
push
xor
push
stc
sbb
test
jbe
cmp
add
mov
mov
popa
dec
mov
into
stos
ljmp
mov
cmp
fcoml
out
icebp
popf
mov
or
pushf
rcll
jnp
sub
iret
push
sbb
repz
mov
movsl
sub
mov
jb
out
dec
into
sbb
mov
xlat
inc
sti
andl
test
pushf
popf
clc
xor
push
sbb
cli
lock
popa
and
push
inc
incl
or
enter
cmpsb
fidivl
psadbw
in
into
dec
into
sub
jo
mov
mov
jne
push
xchg
fwait
adc
data16
fwait
ret
pop
inc
retw
iret
xor
lea
jae
or
shll
xor
xchg
mov
pop
lcall
pop
sub
popa
sbb
rclb
add
jle
cmp
dec
dec
fiadds
hlt
aaa
call
xchg
mov
insl
or
div
call
jle
enter
sbb
mov
or
jnp
test
in
cmc
imul
mov
daa
mov
shll
jno
filds
mov
outsb
push
mov
xchg
test
cmp
xchg
dec
outsl
or
in
rorb
scas
jns
call
int
stc
loope
jle
shrl
insb
test
or
dec
movsl
or
bound
std
push
inc
or
shll
add
xor
mov
push
inc
enter
inc
pop
iret
loop
pop
push
jb
into
test
mov
mov
xchg
in
gs
inc
or
jno
ss
xor
lea
sbb
add
sbb
mov
jp
in
adc
movsb
in
frstor
push
shl
imul
sarl
fstl
xchg
fs
out
scas
lods
enter
ret
cmp
cli
jo
aad
ds
js
sti
sub
rorl
aaa
mov
ret
inc
cmova
mov
jb
adc
push
adc
cmpsb
sub
popl
pop
push
ljmp
mov
fisttps
dec
push
in
dec
and
mov
sbb
push
fdivrs
call
das
data16
sti
or
popf
jbe
xchg
int
scas
cmpsl
or
sub
orb
cmp
inc
gs
mov
cli
dec
mov
and
in
pop
rclb
fildll
mov
xor
loop
push
repnz
arpl
xor
sbb
xor
das
adc
das
imul
push
xor
adc
test
daa
inc
jns
pop
mov
in
push
pop
push
lock
sub
pop
jle
test
out
push
adc
dec
jg
into
fnstenv
adc
mov
sub
cmp
ficoms
inc
inc
dec
into
pop
push
xor
or
cmp
xchg
ds
xchg
sub
fnsave
sbb
push
cmp
ficoms
mov
das
shlb
incb
pop
mov
push
cwtl
mov
dec
or
popf
jb
or
es
notl
push
fldl
mov
shlb
ja
mov
sbb
mov
ds
lds
mov
pop
lahf
mov
add
addr16
test
jmp
xor
jnp
inc
sti
sahf
dec
xor
dec
push
push
cmp
dec
shll
cmpsb
mov
dec
mov
sub
add
neg
jp
xchg
out
inc
xchg
in
fwait
cmc
push
mov
mov
loop
or
ja
adc
jb
dec
mov
xchg
das
mov
xchg
cld
popa
add
and
jnp
mov
out
sbb
adc
ret
jno
mov
jb
and
out
ljmp
push
inc
mov
push
inc
fstpt
test
andl
pop
shr
cmc
sub
pushf
scas
fnsave
jmp
mov
pushf
pop
ret
mov
cltd
jge
pop
lds
fstpl
ret
inc
sti
arpl
popa
add
push
cld
or
jg
xchg
sbb
in
pop
sahf
jge
enter
arpl
fs
mov
scas
cmpb
rcr
inc
or
in
in
add
test
insb
lret
push
pop
rcrl
push
out
sbb
in
lea
jne
insl
pop
cmpsb
xchg
lds
in
xchg
out
add
mov
pop
and
jb
jp
insb
jmp
gs
lret
leave
out
push
lock
cmp
bound
sbb
jno
jns
std
jns
icebp
les
pop
outsl
mov
xchg
lock
mov
pusha
in
movsl
and
test
enter
repz
and
adc
jo
and
popf
insl
adc
idivl
mov
mov
xchg
mov
les
bnd
cmp
adc
mov
scas
in
arpl
push
xor
pop
inc
addr16
sub
sub
mov
jb
xchg
cli
adc
movsl
jbe
pop
test
push
pop
mov
sbb
xchg
add
cmp
xchg
push
jmp
mov
mov
jae
or
add
pusha
inc
scas
popa
mov
fisubl
into
scas
daa
xchg
mov
rcr
lret
filds
mov
mov
adc
pop
test
rclb
aam
aad
cmp
lcall
clc
popa
in
xchg
fsincos
lods
sar
lods
push
inc
pop
lods
test
fimuls
sahf
subb
xor
fwait
push
adcb
aaa
jne
inc
pop
inc
fnstsw
jl
pop
lcall
and
xchg
lcall
mov
xchg
mov
adc
dec
mov
mov
jbe
mov
xlat
loopne
cmp
into
push
rcrb
push
jo
xchg
mov
fdiv
daa
movsl
lods
sbb
mov
jb
les
popa
xor
push
mov
or
add
dec
mov
push
js
dec
lds
out
in
jnp
xchg
das
scas
je
push
imul
sub
rcrb
outsb
mov
dec
jg
jge
xor
stos
mov
outsb
and
outsb
xor
sbb
xor
jbe
xchg
cmp
xchg
in
fildl
and
outsl
imul
xchg
push
or
mov
rcl
aaa
jo
in
and
data16
aas
rol
stc
dec
cs
jge
call
add
cmp
jp
aaa
dec
sbb
loopne
lock
dec
ja
inc
sarb
mov
or
ficoml
and
mov
xor
sub
sub
adc
xor
mov
fcmovb
sbb
pop
mov
test
inc
out
push
push
pop
outsl
dec
xchg
cmpl
pop
imul
insl
bnd
sub
pop
and
and
jl
call
fwait
sahf
push
sahf
push
popf
jnp
mov
in
leave
aas
shrl
aam
popf
mov
das
mov
pop
jmp
les
sti
clc
mov
cld
mov
sbb
insl
div
imul
shl
mov
dec
pop
xor
pop
fisttpll
dec
jmp
hlt
mov
mov
pop
sbb
and
cmpsl
push
int3
in
adc
dec
enter
jmp
push
ret
adc
jne
push
lods
xchg
xlat
shll
adcl
call
mov
jo
into
lahf
or
loope
mov
sbb
ja
or
addl
pop
push
clc
cmc
mov
leave
jmp
jae
cmpsl
filds
mov
rcr
out
aam
jbe
sub
fmulp
mov
test
pop
popa
popa
pop
dec
aam
xchg
mov
aam
cld
cmp
in
sub
loope
icebp
nop
out
ss
mov
adc
cmc
push
movsl
add
int
repnz
call
jbe
stos
sbb
orb
sti
jle
pop
prefetch
push
mov
hlt
mov
pop
mov
cmc
in
ret
les
xor
addl
and
sub
pop
sub
sbb
data16
arpl
pop
iret
inc
xorb
icebp
jmp
xor
idivb
mov
inc
ja
movsl
mov
push
sbb
or
push
scas
call
mov
out
ret
xor
inc
push
loop
push
ja
jge
out
push
xchg
and
pop
popf
xlat
fnstenv
test
mov
enter
or
push
aas
pop
mov
and
push
push
dec
imul
jnp
lods
scas
cltd
std
pop
stos
enter
xchg
cmp
gs
rcrb
std
add
or
add
pop
pmaxsw
rcl
imul
pop
lods
inc
and
mov
push
fldcw
xor
push
std
xor
testb
mov
pop
mov
or
lret
and
ja
push
cmc
push
mov
call
decb
dec
shr
sbb
mov
fisubl
mov
cmp
xor
mov
imul
pop
movsl
nop
push
popa
mov
mov
push
push
and
lods
push
or
pop
xor
imul
enter
and
clc
scas
rolb
lret
mov
insl
lret
mov
jbe
and
jge
inc
fcom
ds
lahf
stos
ret
mov
pop
mov
sbb
xchg
lods
out
jbe
sub
fiaddl
std
sub
pop
in
pop
xorb
push
enter
mov
les
pop
jecxz
jne
pop
dec
sbb
dec
in
mov
inc
ljmp
ss
fidivl
test
sbb
jno
repz
xor
dec
sbb
inc
les
jle
mov
call
xor
aam
mov
and
loop
sbb
cmp
fcmovnu
push
jle
jns
in
jnp
lahf
shrb
loope
arpl
dec
aas
xchg
inc
ret
pop
gs
shlb
arpl
mov
fdivrl
test
leave
fnstcw
and
ret
lods
test
arpl
test
and
out
jae
sub
pop
and
fninit
xorl
xor
jne
xor
idivb
fdivp
adc
movsb
iret
cmpsl
fsubl
push
add
push
cld
data16
xchg
mov
imul
cmp
xchg
idivl
or
cwtl
xor
cltd
sub
lds
add
incb
and
xchg
and
add
add
sbb
lret
xchg
cmp
fstps
or
fistl
xchg
push
pop
loopne
nop
jmp
andb
fbld
jecxz
enter
xor
dec
and
push
cwtl
mov
push
shlb
mov
lcall
inc
jmp
sbb
dec
jo
pop
add
dec
fldl2e
mov
ds
jae
addr16
lret
lret
lods
shl
add
lods
xor
and
shll
outsl
pop
push
cmc
daa
mov
fstl
ret
xchg
lock
sbb
out
jle
inc
pop
aaa
push
pop
pop
cmpsl
or
insl
xchg
mov
sbb
mov
ja
or
sti
pop
repz
insb
test
aaa
cmp
mov
mov
roll
fstpl
insl
xchg
sbb
cltd
add
jg
imul
int
dec
jns
pop
ds
sbb
adcl
es
and
inc
inc
in
inc
pop
roll
dec
cmpsl
mov
rcrb
sar
in
jmp
fs
inc
pop
mov
jbe
lods
jg
and
aas
outsl
or
leave
jbe
daa
hlt
mov
xchg
out
stos
and
mov
push
dec
xor
jmp
dec
cmp
movsl
hlt
ss
sti
int3
lea
fwait
sarb
mov
rclb
int3
and
fbstp
jno
mov
popa
js
cli
adc
test
hlt
stc
cmpsl
pop
stos
cmp
and
mov
aaa
xchg
arpl
repz
aam
pop
jmp
in
loope
idivb
adc
aaa
xchg
sbb
in
daa
flds
iret
je
push
std
push
push
cli
lock
lock
loope
xchg
xorl
int3
lret
jp
jno
adc
int3
xor
nop
outsb
rclb
inc
out
jbe
in
cmp
push
push
ja
adc
pop
loopne
arpl
and
push
scas
test
dec
mov
lret
push
ss
lret
pop
int
mov
and
mov
es
dec
xor
pushf
out
repnz
mull
or
jmp
xchg
mov
pop
pop
popf
inc
jne
cmp
out
push
addb
push
out
add
pusha
cmc
mulb
nop
sub
nop
test
xor
nop
add
fidivl
xorl
jb
stc
mov
outsl
push
push
cmpsb
dec
jecxz
add
das
mov
cmc
fsubs
mov
cmc
sub
rclb
xchg
push
fisubs
in
xchg
outsl
or
sub
xchg
rcll
adc
jg
mov
mov
sar
pop
or
sbb
push
sbb
xlat
xchg
pop
push
iret
jle
xchg
sub
in
insb
mov
inc
cmp
lret
out
aad
sub
add
xor
jo
into
cmp
pop
fs
int3
cli
push
jge
and
xlat
push
mov
cmp
mov
insl
out
mov
mov
push
std
idivb
cmc
adc
not
in
pop
jg
pop
inc
inc
inc
adc
scas
sub
add
rol
mov
pushf
imul
sbb
add
dec
int3
cmpsl
sahf
pushf
mov
xchg
mov
push
mov
sub
and
mov
add
and
lret
iret
imul
add
jbe
rorl
or
aad
and
arpl
push
ja
sbb
jnp
inc
stos
xchg
adc
cmc
dec
sahf
pop
pop
xlat
rol
push
in
sub
int3
pushf
push
xlat
out
je
push
cmc
std
repnz
imul
and
fdivrs
fisttps
sbb
pop
mov
gs
or
push
push
jge
ret
mov
enter
xor
xchg
mov
sub
inc
pushf
mov
das
xor
jo
fildll
jb
pop
movsl
subl
push
fstps
xchg
dec
lods
dec
sbb
fwait
in
cmp
lcall
sub
movsb
mov
mov
ss
pop
movsl
pop
outsb
xchg
xor
inc
mov
xchg
mov
scas
jle
mov
repnz
add
xor
xor
notl
add
pop
loope
enter
add
ret
dec
push
sbb
push
jne
inc
popf
into
sti
movsb
clc
lods
mov
mov
test
and
and
mov
in
xchg
xor
test
xorb
adc
loope
mov
jbe
rcll
imul
mov
stc
add
dec
jecxz
dec
das
dec
dec
dec
adc
scas
pop
and
mov
fstpt
subb
arpl
gs
mov
add
std
mov
vunpckhps
dec
addb
imul
jb
push
aaa
shll
movsl
mov
inc
out
cmc
jl
popa
push
pop
pop
insl
aam
lock
stc
aam
pop
push
push
dec
outsb
sbb
test
lods
aaa
mov
sbb
paddusb
mov
scas
dec
aam
test
adc
xchg
pop
mov
les
in
movsl
jg
subl
stos
inc
fisubs
int3
cmp
add
aam
jbe
jge
xchg
xor
cmp
adc
mov
loope
fcom
jae
js
notb
xor
mov
mov
and
int3
jnp
jb
sbb
inc
cli
sub
xchg
testb
shrl
ror
insl
stos
push
js
ret
sahf
inc
inc
mov
xor
push
or
add
ds
push
jne
sub
cmp
inc
cmp
mov
lahf
fnstsw
je
repz
push
das
js
shlb
roll
mov
cmp
jns
popa
lock
jae
xor
imul
push
movsl
enter
dec
ljmp
lods
scas
loope
lea
test
xchg
pop
jb
mov
inc
cmpsl
mov
sub
jg
cmpsl
and
leave
jecxz
inc
xchg
incl
int
add
dec
mov
jb,pt
or
add
xchg
xor
aas
push
movsl
je
insl
ja
push
in
cmp
enter
push
nop
popl
or
sbb
call
loop
add
xor
stos
addl
or
inc
test
pop
in
inc
dec
push
mov
cs
cwtl
pop
inc
xor
sub
sbb
je
jae
notb
add
stos
dec
adc
inc
cmpsl
out
fwait
lock
cmp
in
insb
dec
dec
mov
push
xor
scas
aam
pop
inc
add
cli
jno
insb
cld
test
data16
int3
aaa
xor
test
xchg
scas
jg
pop
out
loop
je
add
pusha
xor
loope
std
sahf
pop
addr16
mov
test
pop
add
popa
xor
cmpsl
xchg
jnp
outsl
rcll
fimull
push
call
fldl
cmp
jg
rorl
xchg
repnz
push
xchg
ljmp
aas
dec
lcall
imul
inc
out
sti
fxch
out
sub
xor
sahf
enter
and
push
add
mov
fisttpl
xchg
xor
sahf
lret
xchg
rorl
add
popf
mov
sahf
fs
je
pop
xlat
icebp
sub
push
lds
xchg
mov
jns
enter
and
popf
jl
push
test
repz
cmp
int3
iret
sti
sbb
lea
sbb
in
fildl
mov
jp
lret
jbe
ret
xor
or
adc
insl
mull
les
pusha
inc
and
cli
cmp
loopne
or
aas
sub
and
sbb
add
dec
mov
std
loop
shrl
pop
adc
lcall
xor
out
push
test
push
push
loop
push
push
sbb
mov
mov
rorb
pop
test
push
sbb
es
mov
int
cmp
test
sbb
fldenv
pop
sbb
bnd
pushf
ss
mov
iret
push
fildl
and
mov
jae
sbb
fdivs
loopne
mov
fists
and
fldt
inc
add
dec
orl
fs
int
jne
test
xchg
test
pop
and
add
pop
adc
cmpsb
cld
icebp
popf
sbb
fdivs
or
inc
sbb
sahf
mov
roll
ss
push
jmp
push
fldcw
adc
test
sbb
xchg
xor
and
lret
pop
dec
lret
ret
in
jmp
fildl
imul
dec
inc
xorl
insl
negl
cs
jge
stc
lret
push
popf
leave
push
insl
dec
loop
cmc
mov
popa
push
mov
jmp
cmp
out
cmp
nop
mov
fcom
cwtl
adc
inc
xchg
pushf
fisubrl
out
sub
mov
mov
adc
xchg
pop
das
push
add
hlt
std
fisubrs
sub
filds
inc
mov
stc
lock
gs
pop
xchg
push
cmp
repz
aas
aaa
fmul
int
lds
adc
lret
jns
xor
push
push
idivb
test
inc
dec
xchg
cmp
dec
addb
das
inc
repnz
insl
sbb
int
pop
dec
aam
adc
pop
and
mov
inc
add
mov
test
into
adc
in
mov
xchg
mov
xor
jle
es
mov
push
jl
loopne
xor
push
add
push
test
test
scas
sub
lock
bound
cld
xchg
cltd
or
push
mov
xchg
push
xchg
mov
inc
in
cli
in
mov
sbb
mov
xor
add
js
insl
jl
loop
ss
xchg
test
pop
mov
jne
nop
imul
outsl
fwait
push
cmpsl
push
ret
bound
les
cli
outsb
sbb
rorb
dec
ljmp
subl
mov
std
sbb
test
nop
push
xchg
out
push
das
imull
mov
pusha
shrl
cmp
aas
inc
sti
and
scas
popa
pop
addl
xorl
mov
out
cmp
inc
sub
or
jne
dec
dec
imul
push
fsubr
cs
loop
movsb
faddl
pop
out
loope
sub
mov
ja
mov
xchg
test
push
ret
jmp
mov
mov
or
mov
lods
mov
jge
outsl
pop
out
or
jge
cld
cs
xor
mov
repnz
out
fistl
mov
lcall
lods
xor
push
ret
lahf
int
push
push
movsl
fistpl
xor
sub
sub
ds
popa
add
ja
mov
cmpsb
jne
imul
push
mov
call
lea
push
test
push
cwtl
pop
ret
lods
data16
insl
xchg
add
cmc
lahf
xchg
sub
mov
inc
or
jns
enter
adc
or
fmuls
xchg
pop
or
enter
adc
psubq
sub
sar
mov
xor
int
xchg
adc
outsb
pop
ds
ds
jo
and
pop
mov
pop
inc
movsb
mov
imul
mov
repnz
xchg
lds
scas
mov
xor
lea
orl
and
mov
outsl
add
fdivrl
arpl
psllw
sub
hlt
dec
filds
bound
jecxz
shrl
pushf
cwtl
push
mov
subb
nop
mov
ljmp
scas
out
mov
inc
xor
inc
pop
add
mov
or
loope
in
push
fwait
lock
lods
or
sbb
lret
dec
jne
cmp
jle
pop
dec
stos
sti
aas
add
call
test
inc
std
adc
jbe
insl
mov
rclb
aam
aad
cmpsl
jge
out
loope
les
push
out
push
xor
push
loop
inc
cmpsl
loope
lds
iret
ret
or
sbb
rcrl
stos
sbb
or
mov
inc
and
add
sbb
aad
add
lods
sahf
subl
sub
pop
inc
mov
movsb
pop
and
cli
mov
push
xchg
lock
insb
cltd
cmp
xchg
gs
dec
insl
mov
shrb
mov
loope
je
cltd
movsb
mov
out
stc
push
mov
and
mov
addr16
pop
cmp
inc
bswap
testb
sub
cmp
sahf
ficoms
and
imul
test
clc
xor
or
xchg
roll
lret
adc
jae
push
add
outsb
xchg
push
cmp
repnz
lea
out
repnz
and
or
adc
insb
jg
cli
xchg
sub
mov
dec
sbb
jmp
pop
test
imul
sbb
push
addl
int
and
inc
fwait
hlt
jns
jns
cmc
clc
xor
aad
cld
xchg
jnp
movsl
adc
test
div
pop
sub
sbb
test
push
and
lahf
data16
out
adc
inc
ret
cmp
mov
subb
mov
cltd
icebp
dec
shl
aad
dec
aam
or
das
push
testb
or
dec
add
adc
ja
pop
addb
and
arpl
fstpl
mov
cmc
negl
inc
dec
xchg
stos
pusha
cmpsl
ds
into
mov
sub
dec
bound
adc
xchg
lods
mov
icebp
mov
jnp
inc
or
pop
fists
mov
push
mov
mov
push
ljmp
dec
jno
ret
sbb
movsb
sbb
pop
outsb
push
movsl
fcomps
sub
cli
test
pop
inc
push
mov
arpl
leave
cmp
pop
in
inc
pop
ret
int3
sbb
push
das
sahf
mov
add
sbb
add
sub
js
sti
fwait
and
push
scas
mov
bound
repnz
jne
push
xchg
test
xchg
jecxz
insb
cmpsl
sbb
xor
fistps
mov
push
jnp
xchg
mov
loope
pcmpeqb
xor
jge
test
jb
jl
xchg
jg
mov
jle
adc
pop
popf
or
jmp
mov
divl
icebp
jg
dec
dec
sbb
pushf
ret
jmp
loop
faddl
fildll
fidivl
xlat
fstpl
xchg
or
pusha
cmc
icebp
cmp
popa
push
hlt
sub
sahf
out
and
mov
and
sub
cli
mov
imul
sti
lea
xchg
repnz
jle
icebp
flds
sub
ljmp
repnz
ret
mov
ror
movsb
mov
out
clc
sub
pop
dec
leave
sbb
scas
inc
mov
mov
mov
dec
testb
mov
push
call
adc
leave
pop
pop
sahf
inc
lods
sub
xchg
test
add
je
movsl
and
mov
xor
xchg
loope
mov
stos
pop
fisubrs
xchg
inc
dec
imul
or
stos
push
test
daa
daa
int
mov
pop
les
xlat
mov
mov
sub
push
inc
sbb
popa
lahf
imul
ss
and
popf
iret
jp
loop
mov
or
pop
mov
pop
aas
cmpsb
jae
daa
outsl
mov
sub
inc
push
dec
divl
xchg
ja
std
jmp
sub
aad
jnp
cli
enter
or
jecxz
add
pop
and
addr16
xchg
call
les
aad
jmp
sub
adc
lret
adc
dec
or
repnz
pop
pop
dec
mov
xchg
test
pusha
rcll
fwait
lods
push
ljmp
xor
pop
lret
addr16
inc
addr16
and
push
add
mov
enter
push
dec
jp,pt
mov
fcoms
cwtl
ja
rolb
dec
adc
mov
jp
inc
mov
aam
lret
rorl
inc
sbb
add
dec
outsb
xor
ret
js
clc
aad
in
aad
hlt
gs
jecxz
sub
mov
push
adc
xchg
lahf
push
lcall
int
hlt
push
mov
inc
push
imul
jnp
dec
dec
mov
jp
mov
fdivrl
ret
outsb
push
mov
cmpsl
iret
in
sub
in
mov
xchg
mov
out
mov
and
pop
or
fldenv
mov
stos
std
shrl
pop
movsb
mov
movsb
leave
dec
lods
outsb
aam
xchg
roll
loopne
ret
sub
cmp
pushf
pop
sub
jmp
fiadds
js
pop
outsb
fcomps
inc
dec
dec
xor
in
stc
cli
mull
adc
cmp
pop
mov
scas
sub
dec
add
cmp
cmp
scas
or
sub
jge
popf
and
xor
fcoms
and
mov
pop
hlt
xor
push
ljmp
mov
jo
repz
data16
mov
mov
orb
push
xor
xor
js
push
and
or
push
cld
shr
addl
sahf
add
add
push
and
lds
js
lcall
push
ja
ucomiss
fiaddl
popa
cwtl
mov
ljmp
loope
mov
xchg
imul
adc
aad
jo
or
repnz
pop
std
mov
pop
in
and
loopne
fiaddl
out
fisttpll
xchg
cmp
mov
out
pop
push
loope
cmp
xor
dec
leave
fdivrs
dec
insl
test
dec
aas
jg
dec
adc
cmp
ja
cmp
aam
dec
test
sbb
inc
out
adc
add
push
cmpsl
cmp
mov
cmc
adc
adc
sbb
jb
jmp
xchg
xchg
cld
mov
pop
gs
jns
xchg
pushf
jl
xchg
out
rcll
mov
mov
mov
jmp
and
bound
mov
dec
pop
pop
inc
push
insb
stc
sahf
in
xlat
adc
sti
mov
jbe
rol
clc
xor
cli
jge
lret
sarl
and
cmc
sti
insl
mov
lds
and
inc
inc
add
fwait
add
inc
add
pop
clc
ret
mov
pop
jns
mov
push
jno
ret
popa
ret
aaa
fnsave
repz
shrl
adc
and
mov
out
pop
mov
xor
call
pop
or
scas
jo
not
fmul
jp
inc
mov
xor
fidivs
repz
ja
lret
popf
outsb
ss
out
mov
les
adc
test
sahf
in
cli
adc
xchg
mov
dec
jl
aam
es
inc
shrb
clc
repnz
inc
mov
in
inc
mov
imul
lock
mov
mov
mov
sub
jbe
add
sbb
mov
in
int3
mov
fwait
gs
js
stc
pop
cmp
or
lods
jle
jns
inc
inc
lods
out
call
insl
xchg
sub
fwait
dec
and
mov
and
testb
lahf
ds
scas
inc
bound
and
out
in
jl
pop
and
jnp
repz
xchg
or
mov
icebp
xchg
and
dec
dec
in
jae
int3
das
pop
jo
lcall
jb
rol
dec
sbb
add
popa
push
lahf
imul
iret
xor
not
stc
daa
repz
enter
pop
es
adc
mov
scas
mov
cli
stos
mov
movsb
mov
cmpsb
jmp
mov
mov
pop
push
mov
sub
pusha
fidivrl
rclb
inc
imul
push
jnp
xchg
fnstcw
arpl
ror
lods
mov
das
repnz
xlat
xor
sbb
movsl
and
or
sbb
mov
mov
cmp
fcoms
mov
sub
and
lcall
fiadds
pop
sti
pop
rcr
cwtl
scas
mov
and
in
out
ja
loop
dec
orb
xchg
nop
and
or
std
leave
cmpsl
push
sar
cwtl
mov
sarl
jnp
ret
jl
bound
hlt
adc
rcll
pop
addr16
scas
loop
xlat
mov
xchg
subl
lret
xlat
movsb
testl
add
stc
test
pop
add
ret
mov
call
push
arpl
mov
pushf
inc
mov
bound
jne
loopne
imul
hlt
outsb
add
iret
xchg
repnz
cli
inc
cmp
inc
push
cmp
mov
insb
test
mov
xchg
jnp
sbb
add
mov
push
leave
adc
loopne
mov
lods
pop
jmp
add
xchg
roll
in
push
push
jae
out
lret
fwait
sbb
ljmp
sbb
dec
flds
inc
mov
mov
push
pop
or
in
and
push
stc
jne
inc
push
cmp
ret
ljmp
fildll
pop
rcrb
adc
inc
pop
sti
scas
nop
pop
and
insl
out
pop
dec
sub
pushf
xlat
pusha
or
iret
je
notl
test
out
bnd
mov
in
pushf
mov
popa
outsl
cmc
inc
push
mov
add
fidivl
mov
jno
rclb
arpl
test
fistpll
jne
xor
mov
and
adc
cmpsb
es
adc
repnz
lods
jae
lret
je
lea
shrb
in
mov
popl
cwtl
pop
mov
lret
lock
mov
das
nop
pop
cli
sbb
jbe
movsl
dec
xchg
add
repnz
push
dec
jb
sbb
or
test
adc
mov
mov
sbb
test
iret
mov
sub
sub
sbb
sub
or
cwtl
fiadds
hlt
push
sbb
dec
nop
mov
addl
and
and
outsb
stc
cmp
sbb
jmp
and
or
stc
dec
push
inc
pop
inc
xor
sbb
mov
mov
jno
fldl
ret
push
push
aad
mov
mov
cs
mov
in
sbb
mov
inc
clc
xchg
pop
imul
sub
dec
fwait
cmp
cmp
lret
or
dec
lcall
xor
mov
ja
adc
filds
inc
aaa
and
pop
mov
addr16
xchg
jl
stc
inc
jl
js
data16
lcall
jae
and
call
imul
pop
xor
adc
aad
xor
roll
mov
mov
out
cli
xchg
lea
pop
mov
or
xlat
cs
jo
mov
out
out
mov
fadds
pop
mov
inc
mov
xor
popl
fisubrs
cltd
mov
imul
push
xchg
filds
cs
dec
adc
add
mov
adc
xlat
sti
fistps
jno
pop
and
daa
sarl
cmp
mov
adc
test
popf
ficoms
push
frstor
das
ret
push
and
mov
cmp
jmp
daa
call
push
push
xchg
inc
dec
mov
cmp
add
std
fildl
push
push
inc
mov
icebp
fdivl
pop
lods
xorl
mov
in
pop
xchg
dec
jb
or
sbb
leave
sbbb
outsb
xor
shr
dec
inc
lods
mov
pop
mov
mov
pop
sti
sub
incl
pop
mov
imul
filds
mov
sbb
insl
mov
in
fldcw
sbb
je
jl
cmp
andl
jmp
daa
addr16
push
jns
stos
sub
or
adc
imul
lret
pop
dec
jge
out
or
andb
cmp
cmp
test
xchg
push
enter
or
fcoml
test
xor
sbb
movsl
ret
sahf
fwait
popa
mov
das
xchg
in
stos
or
xchg
inc
push
jns
cs
fsubl
outsl
pop
bound
jp
pop
mov
mov
mov
pop
imul
stc
sub
fs
pop
adc
fsubl
xor
rorb
fcompl
call
add
in
out
addr16
leave
gs
mov
jp
mov
xor
or
jne
pop
jo
int
fstps
jbe
jmp
data16
jb
int3
inc
xor
xor
mov
lret
dec
and
inc
dec
push
cmp
mov
fadds
std
bound
and
pop
lahf
push
xchg
sbb
jg
fwait
and
rcrb
movsb
ret
popf
ja
xchg
fbstp
incl
ss
jo
mov
push
cmc
and
push
add
pop
xor
lcall
or
inc
adc
or
sub
sub
push
cmc
nop
pop
out
pop
xchg
cwtl
pop
gs
scas
filds
std
pop
mov
pushf
data16
mov
repz
dec
cmc
cs
mov
cwtl
les
jns
repz
or
sub
roll
xchg
pop
in
test
jg
mov
xor
dec
mov
push
xor
ds
sbb
xor
pop
in
cltd
insb
xor
cli
lods
jb
aas
xor
in
ret
push
rcl
scas
sbb
jle
iret
xchg
push
dec
or
insb
mov
daa
cmpl
shll
jne
fsubs
xor
push
test
push
mov
push
lods
mull
inc
mov
push
pusha
inc
out
loope
pop
push
call
cmp
mov
cmc
fidivl
jmp
xchg
jmp
sbb
push
insl
xor
jno
jp
bnd
adcb
ljmp
mov
loope
test
cmp
xor
ss
mov
mov
lea
mov
cmp
mulb
pop
add
push
leave
xor
in
pop
adc
mov
je
mov
int
pop
push
fstl
add
roll
pusha
es
adc
loope
adc
push
pop
daa
jmp
adc
fs
sub
fistps
in
arpl
pop
in
das
icebp
jno
testb
in
addr16
or
das
inc
cld
adc
test
not
cmc
arpl
lock
jae
jo
dec
ss
inc
mov
push
iret
jp
call
mov
jae
sub
out
xor
inc
pop
cld
stc
outsb
inc
mov
xchg
pusha
bound
jns
scas
sub
jo
or
inc
mov
add
sbb
push
stc
cmp
testl
add
je
or
inc
iret
adc
test
push
test
fs
repz
xlat
mov
adc
add
dec
es
xchg
out
push
jbe
jg
rcl
mov
mov
mov
jl
sti
and
jns
dec
shlb
add
fiadds
sbb
and
cmc
fsubrl
jbe
lret
mov
das
dec
pop
sub
inc
pop
cwtl
xchg
jl
sbb
push
pop
inc
adc
testl
dec
mov
mov
lret
adc
mov
or
or
movsb
and
mov
shrl
cld
jecxz
scas
inc
xor
popf
mov
pusha
call
mov
mov
add
cmp
iretw
gs
incl
aad
in
mov
andl
call
scas
adc
dec
mov
push
adc
or
cmp
jne
jp
pop
flds
push
fbstp
adc
sub
xchg
inc
mov
out
loopne
sbb
push
icebp
add
push
or
mov
push
data16
cmp
repnz
or
icebp
jnp
mov
or
fwait
int3
addr16
xchg
mov
xor
cli
shrl
or
cmpsl
mov
sti
xchg
jno
cmpl
scas
frstor
cmp
mov
pop
in
dec
push
ss
sbb
fistpll
movsb
rolb
scas
data16
mov
sub
push
divb
mov
or
test
push
cmpsb
or
mov
test
sarl
test
mov
mov
jp
jo
popa
mov
jno
insb
aaa
std
jmp
lods
in
rcrl
jnp
nop
mov
and
pusha
mov
pushf
pushf
mov
flds
dec
pop
mov
negl
sub
or
mov
and
mov
jmp
jns
and
sti
sub
or
add
repz
mov
cmp
mov
sbbl
add
push
lds
cmpsl
inc
and
lods
cwtl
leave
push
pop
jno
cmp
push
cmpsl
iret
das
test
fnstcw
pushf
adc
ficoms
adcl
sqrtps
jnp
or
js
hlt
loopne
stos
sbb
pop
movsb
outsl
loop
int3
adcb
and
sub
orb
test
inc
inc
outsb
mov
std
ret
add
clc
movb
jns
mov
inc
xlat
cmpsb
es
sti
add
enter
ret
cmc
jne
into
mov
shlb
adc
fidivrs
fs
and
xor
mov
ret
aam
cmc
out
push
jb
in
jbe
fmulp
cmp
mov
lahf
cs
cmp
js
sub
leave
inc
insb
pop
lret
pop
dec
pop
xor
movsb
add
jb
mov
jecxz
movsb
add
fidivl
add
lds
jecxz
repnz
test
mov
and
mov
and
jb
and
insl
xchg
into
cmp
push
lods
in
pop
cwtl
sbb
add
dec
scas
jp
aam
xchg
movl
int3
adc
mov
pop
xchg
dec
xchg
pushf
fdivs
rclb
push
and
int
dec
leave
jge
or
repz
pop
inc
out
adc
sub
sub
fwait
bswap
add
es
jbe
pop
outsl
or
dec
cs
dec
jne
push
xchg
repz
push
ja
and
loopne
cmpb
mov
stos
add
xchg
sub
repnz
adc
push
imul
xlat
cwtl
xchg
sti
xor
cmp
sbb
rorl
out
xchg
pop
popa
loopne
or
jnp
repnz
sbb
xchg
jae
int3
cld
dec
mov
adc
hlt
movsl
mov
sub
inc
leave
int3
inc
and
ds
pop
loopne
sub
jmp
push
mov
mov
mov
xchg
mov
or
xchg
mov
push
push
mov
xor
sub
negb
mov
mov
inc
mov
loope
lods
push
push
push
pop
dec
or
sbb
mov
sub
pop
lret
pusha
adc
daa
jl
dec
cmp
mov
aam
clc
xchg
popa
inc
jmp
cmp
out
clc
pop
dec
scas
insl
in
lods
dec
lahf
push
stc
sbbb
push
in
mov
inc
rolb
jmp
sub
fst
and
push
push
fsubs
jecxz
sbb
es
mov
sti
in
sub
out
loope
out
test
loope
das
adc
out
loop
mov
leave
movsb
mov
push
jb
jmp
out
jb
sub
ja
inc
imull
jge,pt
sarb
xchg
into
fisubrs
add
cmp
dec
push
push
mov
clc
mov
sbb
mov
xchg
pop
mov
dec
shlb
test
cwtl
add
in
xchg
repnz
sub
push
movsl
push
loop
call
inc
outsb
movsl
mov
insb
ret
dec
rclb
pusha
idiv
les
adc
xchg
pop
aaa
fists
out
mov
ss
ret
lahf
pusha
mov
xor
push
addr16
push
xor
daa
cmp
push
movsl
int3
xor
mov
shlb
mov
inc
pop
jg
sarl
pop
testl
cltd
pop
sub
push
out
push
shll
imul
push
enter
mov
and
xor
lods
lret
les
test
mov
outsl
xchg
stos
repz
stc
xor
test
jmp
mov
div
rol
mov
jnp
adc
ret
out
pop
add
cmp
dec
pusha
fcompl
sbb
neg
ret
jne
cmp
xchg
hlt
loopne
push
xchg
xor
or
or
push
add
xchg
jmp
out
outsl
jno
add
sarb
mov
imul
dec
insl
jl
lret
cmpsb
stos
mov
mov
scas
xor
mov
jne
fsubrp
jnp
xor
cmpsb
mov
mov
cmp
fs
inc
add
xchg
les
jno
iret
out
inc
in
arpl
sbb
in
je
and
js
fidivs
adcl
lret
aam
dec
sub
sub
fdivrl
inc
pop
lahf
popf
mov
pusha
imul
xor
lret
and
fsubrl
or
and
test
pop
gs
xor
test
je
scas
pusha
jo,pn
scas
movsb
test
mov
push
or
sbb
in
leave
jecxz
negb
xchg
cmpsb
adc
frstor
pop
xor
in
sahf
push
sti
popf
fisttpl
lcall
mov
xchg
loope
pop
lds
and
into
movb
gs
jg
outsl
xlat
lods
andl
int3
and
and
mov
cmp
loopne
mov
mov
enter
cld
aam
imul
cmpsl
movsl
push
fistl
or
pop
call
mov
aam
mov
addr16
sub
cmp
mov
int
rorl
orb
fstpt
push
mov
and
mov
loopne
cmp
xchg
iret
push
inc
pop
mov
and
leave
lds
mov
adcb
push
out
push
xchg
lods
xor
shrl
movsb
and
xchg
dec
or
sahf
je
sbb
sbb
push
or
stos
imul
int3
dec
adc
inc
and
mov
addb
dec
inc
fisttps
xor
sbb
and
mov
inc
or
cmp
sub
in
mov
push
mov
cli
and
inc
aad
pop
into
cmpsb
stos
mov
xchg
sub
lcall
jge
push
pop
pop
rcll
add
aaa
popf
cmpsl
jb
aad
data16
pop
xchg
out
push
js
test
cli
xchg
sti
sbb
les
outsb
mov
dec
sbb
dec
mov
sub
inc
das
push
jns
mov
xor
jnp
sub
stos
clc
mov
stos
fstps
jmp
scas
sbb
dec
repz
outsl
or
in
out
jno
inc
daa
sub
pop
jg
ja
inc
pop
outsb
adc
sbb
xor
lret
push
cmp
xchg
cwtl
pop
sbb
sub
fwait
js
dec
sarb
xchg
fsts
add
jecxz
and
push
cmc
sbb
shll
push
outsl
flds
mov
and
out
or
mov
test
dec
mov
dec
out
imul
mov
out
pop
ficompl
pop
mov
push
cwtl
in
cmpsl
jno
aad
mov
xchg
sbbb
iret
pop
inc
cli
xchg
rorb
pop
orb
and
jbe
in
mov
sahf
jo
fldt
sbb
data16
out
ficoms
xor
repnz
dec
rcr
inc
int
outsb
int
or
xchg
movsl
repnz
cld
sahf
jmp
adc
repnz
pop
adc
push
cmp
mov
sbb
lahf
mov
sub
jo
dec
mov
add
cs
sti
dec
xchg
jg
mov
arpl
xor
xchg
repz
push
push
xor
lea
out
dec
push
inc
cmp
in
stc
cmp
pmuludq
insl
jl
push
stc
js
xchg
stos
dec
mov
add
cmp
shll
mov
ja
or
pushf
xor
mov
js
fabs
insb
mov
inc
push
fdivrl
ljmp
mov
adc
out
xchg
xor
cmpsb
lods
xchg
stos
push
xlat
popf
sbb
inc
pop
in
xor
stos
or
cld
imul
insb
mov
xchg
mov
push
idivl
xchg
aaa
dec
add
cli
cwtl
shll
add
inc
cmpsb
jmp
pusha
leave
dec
or
dec
cmp
mov
sbb
and
ror
shl
sbb
ret
jb
adc
cltd
jmp
inc
out
or
jbe
mov
xor
mov
lcall
add
sarl
inc
cmp
test
test
cmpsl
mov
pop
sbb
cmp
iret
jbe
mov
cld
ret
pusha
adc
sti
pop
pop
mov
movsl
cmpsl
or
out
xor
inc
fildll
scas
and
mov
not
insb
cld
fnstenv
adc
imul
xor
enter
jbe
lea
mov
gs
stos
leavew
lcall
imul
mov
mov
mov
loope
jle
shr
bound
jb
mov
inc
ja
ss
lcall
pop
pop
add
xchg
or
jge
sahf
ja
notl
cld
lock
lret
in
mov
mov
popa
jns
mov
sbb
jb
mov
mov
mov
sub
sub
jmp
scas
ret
fsubrl
imul
xor
sbb
dec
call
aaa
push
and
aas
jp
test
xor
sbb
add
cltd
test
cmpsb
inc
or
cmp
cli
sub
imul
adc
and
rcll
dec
jge
mov
aam
mov
dec
data16
mov
jb
push
in
pop
xor
or
popa
mov
daa
ja
scas
imull
pushf
or
mov
jg
and
out
jbe
popa
fwait
mov
add
or
aam
mov
and
cs
cwtl
scas
add
jp
pushl
dec
ret
xor
or
push
xchg
push
mov
push
xchg
mov
cs
xor
dec
jns
gs
and
and
push
fistpl
loope
xor
pop
mov
cmc
subl
lock
add
scas
clc
xchg
iret
adc
repnz
sub
cld
lahf
stos
lock
iret
or
mov
int3
push
arpl
inc
sub
mov
imul
aad
sbb
inc
js
stos
repnz
sbb
mov
mov
out
imul
pushf
into
add
mov
divb
ja
in
aas
outsb
fisubrl
in
mov
lods
and
fwait
or
in
cmp
mov
sarb
ja
js
mov
fwait
or
cli
out
rcl
add
inc
pop
dec
ljmp
icebp
popa
sahf
mov
scas
mov
nop
out
inc
jmp
xchg
mov
sbb
mov
inc
jne
pop
outsb
ficoms
pop
mov
or
gs
lcall
fildl
bound
push
lahf
dec
movsb
cwtl
sub
jmp
movsb
dec
repz
pop
ret
jge
xorb
inc
test
sbb
sarl
jg
jge
lcall
or
jns
add
rcrl
lret
lcall
cmc
dec
arpl
pop
ret
test
mov
add
cmpsl
and
sub
sbb
in
mov
inc
ffree
jp
cltd
imul
mov
test
dec
xor
cli
xchg
jno
pop
add
pop
int
ljmp
jmp
and
xor
ret
xor
test
sub
push
test
aas
cmpsb
jb
xchg
enter
movsl
mov
sbb
cwtl
fs
rorb
jno
push
xchg
popf
dec
cwtl
jmp
or
loop
dec
es
bound
cs
stos
pop
cmp
in
faddl
out
fistpll
and
or
sub
mov
pop
sub
mov
sub
jo
xlat
sbb
mov
mov
mov
pop
xchg
sahf
inc
or
push
mov
sbb
push
out
shlb
mov
xchg
mov
mov
repz
push
adc
sbb
out
xchg
jecxz
mov
in
sub
jae
lods
mov
cwtl
lods
push
pop
imul
xor
cmp
add
mov
test
repnz
mov
jp
mov
mov
xchg
xchg
pop
outsl
push
loopne
adc
cmp
sub
cs
popa
ret
pop
in
mov
jecxz
int
sub
jge
xchg
aas
movsl
inc
aad
mov
shll
ret
push
and
mov
and
data16
pop
leave
test
push
jae
jg
xor
push
negl
mov
mov
sub
loop
cwtl
sbb
push
outsb
push
pop
mov
hlt
mov
jns
xchg
or
sar
jne
push
mov
push
jmp
mov
pop
daa
xchg
dec
hlt
popf
fsts
fcoms
lock
jmp
ret
mov
std
xchg
hlt
pop
jge
imul
push
pop
push
cmp
xlat
jae
sbb
clc
pop
xlat
and
lea
int3
push
push
jp
inc
ljmp
dec
out
and
xchg
sbb
mov
push
mov
sub
stos
rolb
popf
pop
cli
outsl
cmp
pop
sbb
push
ret
xchg
lret
fcoms
rcr
adc
js
push
xchg
cmc
stos
push
lock
leave
cwtl
push
outsl
xor
jne
push
aam
add
call
jle
cmp
in
mov
testl
ljmp
jns
fisubrs
sbb
imul
pop
mov
inc
ss
dec
cmp
mov
cwtl
or
inc
inc
icebp
xor
dec
jg
iret
and
or
orb
sub
pop
repz
mov
int3
stc
notb
jb
pop
push
stos
cmpsl
in
jg
sbb
push
cwtl
shlb
fidivs
lds
or
outsl
mov
mov
ss
mov
dec
in
in
sub
adc
xor
scas
push
cli
dec
movsl
pop
mov
inc
add
js
xor
push
stc
in
inc
push
mov
or
xor
pop
repz
andl
push
fld
aaa
sub
mov
stc
and
bound
sbb
jmp
mov
jle,pn
lret
xor
jno
or
inc
shlb
and
sub
add
lods
mov
push
pop
mov
mov
mov
add
dec
sub
or
xchg
mov
int3
or
shlb
lretw
or
mov
sbb
pop
ret
lea
xor
or
add
jmp
ss
jp
pop
jmp
add
lea
sub
movsb
mov
outsl
sbb
cmpl
mov
out
ret
repz
into
fsts
add
fisubs
testb
and
mov
push
adc
mov
aam
adc
mov
loop
sti
mov
xchg
lcall
push
and
or
mov
fbstp
testb
adc
xlat
mov
cmp
push
or
xlat
xchg
dec
mov
call
and
hlt
cld
or
shl
leave
mov
mov
fwait
cmpsb
insb
push
sbb
xchg
rorl
push
pop
cli
es
sbb
xor
lret
cmp
sbb
push
mov
add
adc
jns
pop
pop
bound
or
bound
test
jecxz
cmovbe
jno
ljmp
in
orb
xor
xchg
out
lods
popa
mov
jnp
add
cmpsb
xchg
sub
in
jg
leave
fs
sahf
xor
out
out
mov
xchg
insl
es
mov
mov
fsubr
mov
jns,pt
jg
fs
into
negb
outsb
inc
push
push
mov
repz
iret
dec
sub
repnz
push
inc
and
mov
xorl
add
inc
hlt
int3
inc
pop
ja
push
mov
into
mov
bound
int
sub
mov
adcl
cld
lahf
cli
les
movsl
jmp
jo
insl
ret
xlat
subb
imul
rorl
popa
inc
adc
ficomps
jp
adc
add
xor
xor
sbb
inc
fildl
notl
cs
jbe
mov
aaa
out
neg
or
in
mov
cmp
sbb
into
cmp
add
fiadds
insb
xchg
ds
mov
enter
and
nop
iret
out
cmp
or
into
dec
aaa
jmp
btc
add
enter
jbe
aad
lock
ss
insb
rcr
xchg
jp
pop
leave
cld
test
xchg
jne
and
inc
mov
xor
andl
pop
adc
jbe
and
js
add
stc
adc
shrb
cltd
and
sub
fcomps
scas
aas
jbe
mov
andl
negl
out
lahf
into
and
sbb
dec
outsl
add
sti
test
dec
and
and
arpl
dec
xor
mov
cmpsl
mov
jmp
inc
and
pop
test
mov
push
xor
xchg
mull
sbb
jge
cmpsl
cli
xor
push
outsl
aas
clc
add
cmp
lds
stos
xchg
push
xchg
mov
mov
leave
pop
inc
inc
push
cwtl
xchg
cld
pop
push
push
std
lahf
outsb
jae
shll
xor
cwtl
loopne
sub
pop
das
dec
add
sub
call
xchg
in
pushf
insb
dec
sub
mov
push
xchg
in
pop
mov
icebp
push
cld
pop
sbb
xchg
sub
test
imul
aas
pop
ljmp
push
dec
dec
lahf
and
mov
aas
jbe
icebp
stos
xor
cwtl
lods
in
lahf
push
lret
test
push
xchg
lock
jmp
jmp
fwait
ljmp
and
notb
mov
pop
jae
cld
icebp
adc
lods
mov
outsl
movsl
xchg
sub
cmp
loopne
xchg
fisubs
aas
mov
lret
adc
mov
iret
nop
imul
jmp
sarl
mov
sbb
es
arpl
mov
out
dec
sub
and
in
call
add
push
das
dec
push
lds
out
cmpsb
nop
cltd
xor
jbe
out
add
mov
xor
lock
mov
cmp
call
push
call
adc
push
clc
mov
scas
sub
push
dec
pop
pop
das
into
and
sbb
cmp
mov
xchg
mov
pop
lds
or
push
in
popa
pop
dec
lret
ret
push
cltd
jb
mov
mov
or
das
xchg
mov
add
int
pop
jmp
xchg
daa
cmp
lods
sub
push
sarb
add
fistpll
xor
inc
sti
cmpsb
mov
mov
pushf
push
mov
ds
pop
aaa
xchg
inc
ja
xor
cmp
popf
sbb
out
xchg
push
push
sub
lock
and
mov
jns
cltd
inc
sub
pop
loope
fnsave
fnstsw
insb
test
aad
xchg
xchg
xor
sbb
aas
sbb
mov
into
das
test
xchg
cmpsb
out
mov
fnsave
inc
jns
push
ror
sbb
xchg
rorb
out
mov
mov
pop
jb
fldcw
das
shll
mov
pop
or
push
outsb
sub
cld
jmp
xlat
cwtl
stc
xor
test
gs
mov
repnz
push
cmp
adc
inc
gs
jb
pop
or
aam
add
mov
xchg
sub
sarl
movsl
cmp
inc
loope
lods
mov
dec
mov
repnz
dec
rorl
stos
aas
arpl
jnp
mov
stos
sub
dec
imul
not
mov
xor
pop
sti
stos
add
cli
add
and
push
cmpsl
leave
or
xor
pop
fs
mov
out
jge
sbb
cmp
lods
adc
lret
push
inc
sbb
jmp
sbb
test
push
das
jge
or
push
push
xor
scas
test
jg
repnz
popf
cwtl
mov
sub
nop
divl
scas
lock
sbb
push
mov
jae
adc
add
leave
push
and
loop
test
aad
xchg
dec
lret
icebp
lret
sbb
or
inc
ljmp
and
pushf
push
ja
pop
mov
aaa
dec
mov
fsub
inc
loopne
cltd
hlt
sbb
adc
imul
dec
mov
shlb
popf
xchg
bound
jb
xchg
repnz
scas
gs
shlb
js
push
push
test
pop
pop
les
iret
xchg
cmpsb
in
push
pop
sbb
adc
pop
fimuls
inc
jl
cltd
mov
xor
and
jecxz
push
shll
pushf
repz
jnp
rcll
push
adcl
xor
mov
or
into
sarb
das
xchg
fldl
add
xor
xchg
cs
movsl
mov
cmc
inc
cs
orl
adc
sbb
clc
mov
in
ret
aam
pop
adc
out
lea
and
hlt
adc
mov
aas
sarb
lret
clc
push
mov
inc
xchg
dec
dec
test
movsl
inc
loop
imul
push
movsb
sbb
xor
inc
xchg
call
pop
sub
mov
cmp
add
mov
stos
lods
mov
and
dec
sbb
or
add
or
pop
xor
mov
sbb
popf
or
pop
sbb
push
ret
push
dec
pop
fnsave
add
mov
cmc
call
xor
in
bound
scas
bnd
je
mov
dec
fistps
in
shll
sub
inc
inc
in
subl
insl
inc
inc
cmp
stc
mov
cltd
add
arpl
and
xor
inc
pop
xchg
ds
mov
and
test
xor
int
sbb
cmpsb
ss
aas
xor
jae
pushf
rcrb
sbb
or
es
bound
cmp
cmp
and
test
sub
ds
xchg
jmp
pusha
or
xor
clc
push
enter
cli
mov
jecxz
jp
sbb
fmul
aad
int
mov
out
mov
inc
sbb
and
pushf
rorb
sarl
repz
pusha
mov
xchg
negl
cmc
sub
add
bswap
imull
mov
add
or
jae
push
xor
inc
pop
inc
data16
clc
mov
repnz
mov
jno
jne
movsb
mov
sub
lcall
xchg
and
dec
and
ret
and
mov
shlb
xor
jno
sbb
xchg
addr16
enter
fwait
aas
xor
jne
nop
sub
jge
mov
js
mov
mov
adc
xchg
mov
dec
push
add
aam
jle
and
mov
mov
std
cltd
insl
icebp
or
cmp
or
testb
cmp
clc
inc
fcomp
pop
icebp
inc
fs
out
mov
nop
add
xchg
sub
outsb
inc
cmp
imul
pop
fsubl
mov
fstl
nop
and
lock
imulb
ja
adc
ret
in
sbb
ret
ja
cltd
jg
rcrl
and
inc
sbb
mov
adc
int
add
cmovs
push
lahf
mov
addb
aaa
fwait
imul
mov
and
stos
lret
into
lret
and
dec
sbb
pop
jecxz
lret
jb
leave
data16
int
fimuls
enter
inc
mov
mov
sub
cmpsb
xor
daa
mov
dec
sahf
ret
test
xlat
or
mov
test
into
daa
in
sbb
into
mov
add
mov
cltd
leave
mov
dec
int
dec
in
loop
adc
mov
mov
pop
cs
in
cli
xor
ljmp
push
into
pop
mov
loop
sub
sub
pop
in
pop
imull
mov
pop
test
loopne
imul
dec
ss
popa
mov
cli
adc
sub
mov
sub
adc
cmp
sub
test
cmpsb
nop
outsl
loope
cli
sti
test
inc
mov
dec
add
data16
pusha
inc
push
dec
jecxz
ja
or
loopne
mov
and
int3
nop
push
dec
pop
push
add
cmp
mov
aad
or
xchg
sub
push
lock
mov
dec
sub
xchg
mov
andb
cmp
cmp
out
or
adc
mov
or
and
leave
ss
out
adc
sub
sahf
aad
stc
mov
sbb
lock
fldt
jns
lcall
aad
movsl
cmp
ljmp
cwtl
and
push
fisttps
pop
sti
cs
sbb
xor
sub
imul
out
fimuls
std
arpl
xchg
inc
repnz
lock
mov
fld
call
sbb
sbbb
testb
ret
and
inc
test
inc
stc
rcl
inc
dec
out
out
roll
outsl
cld
stc
pop
ja
aad
in
lea
mov
mov
lea
xor
ret
jp
dec
xor
cmp
pushf
ljmp
mov
fucomip
push
and
jae
mov
jg
xchg
pop
enter
xor
mov
aaa
or
and
fiaddl
fiadds
int3
jb
scas
cs
and
xchg
push
sbb
ds
icebp
dec
je
mov
mov
les
test
pop
mov
popa
test
cmc
jp
lods
ds
add
test
ficompl
pop
int
cld
pop
dec
addr16
mov
jne
jo
pop
jbe
push
pop
and
lret
jmp
mov
mov
stc
jae
ret
push
sbb
popf
ja
shlb
mov
lcall
lret
ss
and
dec
mov
dec
xchg
sbb
lea
fsubrs
or
xchg
scas
pop
cmp
scas
icebp
cmp
inc
shlb
pop
imul
xlat
pop
adcl
aas
mov
mov
fnstsw
aaa
daa
movsb
in
mov
and
mov
push
imul
fnstenv
das
push
jmp
jmp
and
sbb
sbb
xor
xor
ja
lock
sbbb
xchg
lahf
aas
or
in
pop
sbb
popf
xor
xlat
pop
sub
pop
cltd
mov
hlt
mov
or
cmp
mov
rorb
jp
xchg
mov
push
or
xchg
or
and
sub
dec
hlt
sahf
stos
mov
pop
imul
add
xor
test
xstore-rng
cmpsl
ret
cmpsl
push
dec
ja
ret
or
sbb
in
pop
sub
sti
pop
inc
mov
inc
mov
repnz
xchg
icebp
mov
sbb
stc
push
mov
cmpsl
outsl
jns
xorl
mov
test
mov
xchg
xchg
ja
mov
jg
dec
dec
pop
inc
hlt
cmp
sbb
xorl
loopne
stc
cmpsb
sub
xchg
mov
or
sbb
push
popf
mov
movsb
ret
hlt
movsl
dec
mov
dec
mov
dec
repz
lret
dec
adc
aam
cmpsb
es
pop
jo
jg
movsb
sub
push
pop
ljmp
mov
rcr
adc
mov
icebp
dec
insb
add
xchg
sub
mov
repz
mul
or
jg
bound
icebp
rcr
inc
call
lods
fldl
sub
lcall
fs
adc
mov
or
pop
fs
jae
xor
jae
pushf
dec
je
jno
mov
cltd
mov
je
rcl
push
ljmp
xor
xor
leave
cmp
je
push
pop
push
ds
bt
xchg
adc
jmp
pushf
outsl
pop
out
mov
insl
jae
inc
gs
aaa
jb
movb
pusha
loope
mov
mov
rcrl
mov
test
cmp
mov
daa
pop
fists
jp
cmc
mov
arpl
push
jl
or
sbbb
xlat
mov
ljmp
ss
pop
loopne
jne
addr16
sti
out
or
sahf
ret
mov
mov
fnsave
jo
pop
pop
lock
sbbl
xor
mov
roll
push
sub
sti
xchg
push
push
sbb
adc
mov
dec
mov
test
mov
popf
mov
fisttpll
mov
loopne
mov
shr
test
and
mov
dec
cld
incb
int3
adc
inc
in
les
lret
and
cld
mov
je
jg
jl
out
xor
xchg
rcr
mov
sub
arpl
popf
mov
ret
cmp
ja
or
fwait
push
mov
jmp
pop
sub
jp
jle
pop
mov
jnp
std
repz
dec
and
mov
xorl
int3
sbb
call
adc
mov
or
xchg
clc
add
hlt
rcll
rol
push
mov
jae
jns
push
sub
cmp
mov
cmp
xor
les
mov
lret
imul
rorb
mov
fstl
mov
jmp
mov
pop
mov
loopne
push
push
xchg
xchg
int
movsl
or
hlt
adc
shlb
jecxz
nop
sar
xor
mov
cmp
mov
icebp
pop
addr16
cmp
ljmp
jo
rolb
cli
adc
jne
pop
addb
sbb
jne
or
cmp
shlb
push
xchg
sti
rcrl
ffree
and
push
mov
aaa
cltd
mov
arpl
nop
rcr
pushf
popa
je
inc
mov
lock
lahf
js
mov
sub
mov
sti
sbb
lods
push
call
lods
gs
lret
xchg
repz
cmc
dec
xor
sub
fcmovu
cmp
aam
adc
call
push
sub
pop
roll
mov
sub
dec
dec
loope
add
xor
repz
mov
mov
or
add
bound
loop
mov
decl
std
inc
repnz
sbb
inc
and
pop
or
adc
adc
sbb
pop
fldl
bnd
mov
jne
sub
cmp
sub
ds
mov
pop
dec
ljmp
sub
sbb
lret
mov
xchg
mov
sub
iret
dec
lcall
dec
insl
aaa
sub
fs
movsl
dec
jae
repnz
and
mov
repnz
stos
push
pop
adc
push
js
mov
xlat
enter
fisubrs
jmp
adc
mov
push
jge
cmp
clc
xchg
adc
dec
or
adc
or
cmp
scas
jb
adc
dec
pop
cmc
leave
mov
cmp
jb
xor
icebp
mov
bound
loop
int3
popf
fiaddl
inc
lods
dec
mov
decl
fistps
and
xchg
xchg
arpl
test
jl
pop
insb
shlb
js
fisubrs
call
inc
fmuls
out
in
adc
jb
imul
cmp
lret
mov
dec
push
push
scas
stc
xor
out
fisttpl
mov
pop
xchg
pop
cs
sbb
push
cmp
stc
cmpsl
ds
cmp
aaa
cmp
inc
jmp
mov
pop
jns
mov
lods
bound
sbb
xchg
xor
pushf
mov
xchg
mov
or
jecxz
lods
push
jb
or
cmp
jno
and
sarl
das
adc
sahf
jle
shlb
dec
adc
lcall
cmp
xor
aas
xorb
lret
xchg
or
daa
nop
imul
imul
mov
ss
add
movsb
pop
mov
ret
jl
repz
lods
cmp
out
and
loopnew,pt
ljmp
stc
mov
cmp
lret
mov
push
fiadds
out
lods
cmp
mov
push
sub
cmp
sbb
push
xchg
mov
pop
aad
and
mov
data16
addb
xchg
xchg
and
xor
hlt
xchg
push
push
dec
mov
shlb
lcall
shl
and
scas
jg
lea
imul
out
fcompl
sar
xchg
idiv
mov
fsubl
fwait
mov
adc
jb
mov
lret
xchg
adc
push
jmp
mov
ljmp
cmp
add
hlt
dec
faddp
fs
aaa
addl
mov
scas
ret
icebp
nop
lret
cmp
push
or
out
loop
push
mov
jbe
pop
sbb
mov
mov
out
dec
mov
fbstp
cmpsl
inc
out
mov
inc
seto
inc
or
xchg
dec
xchg
mov
lods
pop
popa
cs
andb
call
pushl
mov
pop
pusha
xor
loopne
mov
add
loop
out
lods
daa
clc
lret
sar
jp
adc
in
in
cltd
std
lea
sub
jmp
xchg
ret
push
sahf
dec
mov
jecxz
cwtl
mov
inc
and
dec
shlb
mov
or
xlat
xlat
adc
jl
in
mov
sbb
mov
mov
mov
idivb
xor
frstor
jecxz
push
xchg
adc
mov
xchg
adc
mov
into
int
xor
movsb
add
xchg
dec
jmp
imul
std
mov
bound
das
xlat
pop
adc
sub
mov
stos
and
rolb
mov
movl
add
fs
lret
push
sti
sbb
xor
arpl
sub
outsb
ja
dec
mov
mov
fadds
push
cs
aad
push
jmp
ficoml
mov
cmpsb
pop
pop
add
int
cltd
pop
dec
cmpxchg
int
in
sub
mov
mov
jle
sti
or
xchg
fistpll
cmp
inc
aad
mov
mov
sbb
repnz
popf
std
sbb
mov
loope
xlat
mov
movsl
sbb
hlt
mov
paddusw
pop
cmpsl
clc
push
in
and
push
and
fsubrp
push
mov
xchg
inc
push
stos
and
inc
clc
pushf
push
jb
mov
das
or
mov
stc
push
mov
call
sub
adc
bound
push
cmpsl
in
fmull
and
loop
mov
adc
cmp
js
mov
sbb
cmc
mov
add
push
bound
rorb
xor
sbb
pusha
xchg
pop
fldenv
dec
das
cmp
mov
js
mov
xchg
pop
mov
pop
popl
rcl
arpl
and
or
test
jo
or
fisubs
adc
ret
js
push
push
pop
mov
ja
adc
scas
movsl
xor
pop
outsb
aas
push
inc
jns
fs
aad
xchg
mov
xchg
repz
fidivl
add
or
and
pop
in
or
ds
gs
cmp
addr16
push
call
insb
mov
or
enter
scas
adc
icebp
imull
pop
incl
jmp
mov
gs
popf
lods
je
mov
cmp
jb
mov
into
dec
sarb
add
dec
imul
jns
xchg
cmp
cmp
sbb
pop
jg
mov
in
shrb
fiadds
jp
sarl
cmp
daa
cmp
pop
xchg
inc
popa
lret
rol
jp
xchg
ret
ljmp
movsb
lcall
jmp
push
xchg
mov
js
rcrl
clc
rclb
int
xor
das
nop
notl
jle
repz
stos
in
enter
inc
bnd
xchg
cmp
ds
ja
and
dec
sti
imul
pop
outsb
push
mov
cmpsb
fmul
test
mov
lods
mov
mov
sbb
push
sub
jnp
push
inc
xchg
pop
add
sbb
cmpsb
mov
scas
push
and
xchg
xor
lahf
mov
cmp
sub
xor
jl
fidivrs
sub
and
mov
dec
lea
sbb
mov
cmp
xorb
push
xor
dec
push
and
pop
inc
test
mov
xchg
loope
jg
test
pop
push
inc
jne
movsb
sbb
mov
lcall
mov
mov
mov
pop
adc
ljmp
ret
outsb
movsl
pushf
stc
jge
mov
test
push
cmc
into
fstpl
push
sub
add
jl
add
push
jl
pop
cmp
mov
xor
xchg
xor
fwait
rcrb
mov
movsb
popl
mov
cld
stos
outsb
xor
mov
insb
mov
xor
jp
shrb
xor
inc
lahf
mov
push
cmp
sbb
fsub
mov
pop
fildll
andb
inc
dec
jae
push
xor
adc
jp
dec
pushf
jmp
inc
sbb
inc
lcall
sub
aam
cmp
push
les
fdivl
shrl
mov
cmp
test
inc
test
adc
xchg
rorb
pop
add
mov
test
adc
outsb
sbb
movsl
add
sar
inc
cmpsb
sbb
mov
icebp
sub
ret
pushf
fldenv
dec
popa
out
test
mov
jns
pop
cwtl
stos
inc
or
addr16
mov
daa
sub
aas
mov
sub
pusha
xchg
jge
repz
pop
mov
popa
add
adc
pop
push
cs
push
jg
xchg
dec
cltd
das
xor
rcrl
xor
sbb
inc
lods
jnp
sub
aaa
clc
mov
inc
lds
xchg
iret
fildll
mov
in
loopne
mov
bound
jae
shll
lret
mov
mov
xor
mov
mov
inc
mov
aaa
es
push
cmpsl
jle
xor
or
fwait
mov
push
gs
sbb
repnz
mov
or
push
outsb
push
ficompl
in
outsb
push
mov
fwait
add
ljmp
mov
dec
inc
pop
xor
jge
cmp
jae
inc
int3
rorb
jnp
aad
shlb
insl
mov
test
lahf
push
pop
rcll
mov
ret
xor
push
xor
mov
loop
pusha
idivb
jmp
inc
dec
cld
jae
push
jae
add
insb
ds
and
imul
pop
dec
loopne
lock
sub
addl
jecxz
jo
loop
mov
dec
mov
xor
bound
mov
outsb
aam
shll
push
xchg
lds
adc
pop
faddl
or
dec
ret
push
lahf
repnz
lds
and
inc
pop
movsl
in
in
cld
jecxz
mov
push
fwait
and
cmp
sub
jo
mov
add
push
pushf
insl
add
arpl
mov
ret
out
pop
xor
inc
add
jle
pop
shl
xor
gs
and
enter
loopne
sbb
dec
mov
mov
adc
ret
xchg
adcb
call
sbb
mov
aad
popa
pushf
jb
inc
push
scas
shll
in
pop
cmp
nop
xor
mov
cmpsb
mov
cld
or
aaa
popl
aam
jb
lret
pop
xchg
fnsave
sub
or
xchg
lahf
mov
pop
add
lds
pop
jmp
aad
add
es
lods
cs
pop
cmc
dec
ljmp
sbb
push
and
mov
outsl
ficompl
xlat
ljmp
sti
js
inc
gs
or
xor
int
pushf
xor
ret
sbb
ret
ror
scas
pop
gs
shl
jns
stos
add
and
jae
push
inc
outsb
lods
jle
ret
fcmovne
popf
fcoml
into
rclb
push
xchg
or
mov
pop
loop
in
mov
rorb
jmp
ja
cmpsb
inc
mov
xor
cmp
and
out
xchg
ret
add
das
cmp
add
lea
enter
dec
push
dec
xchg
outsb
xlat
cwtl
out
xchg
jne
and
in
xlat
sub
pop
call
push
ljmp
out
pop
je
push
xchg
mov
stc
push
roll
enter
sub
sbb
mov
inc
cmp
add
data16
cmp
outsl
mov
pop
pop
in
add
ror
jmp
insb
fsubrs
out
sbbb
push
imul
shrl
cli
add
std
mov
dec
mov
repz
xor
adc
jo
shll
push
cmc
xor
push
sarl
aad
add
stos
cs
in
fstl
loope
cmpsb
int
add
inc
cmp
push
popa
cmp
sarl
test
fwait
sbb
adc
dec
rolb
div
pushf
inc
sub
cmpsb
dec
push
aam
repnz
jno
js
mov
mov
xchg
nop
jl
scas
ret
addr16
push
xor
mov
xchg
jns
fldcw
aas
mov
xchg
cmp
push
jmp
xchg
jb
fsts
outsb
adcb
pushl
aad
mov
dec
ss
jmp
outsl
dec
cmpb
xchg
mov
jl
or
and
stc
ret
and
or
call
xchg
pop
sbb
xor
push
movsl
loop
xchg
fsts
shlb
sub
xlat
jb
movsl
mov
test
pop
movsb
xor
push
divl
shlb
punpckhbw
lods
sub
repnz
cwtl
sub
js
mov
rcr
fwait
xor
xchg
jbe
out
adc
mov
test
mov
loopne
fmulp
dec
and
pusha
leave
lds
test
inc
xchg
dec
or
xchg
sbb
decb
cld
ficompl
xchg
mov
and
sbb
push
icebp
or
aaa
or
pop
insl
insb
mov
push
filds
inc
movsb
jae
aas
jo
test
jno
push
lds
cmp
add
jg
jge
or
sbb
jno
push
sub
sbb
inc
insl
loop
out
or
jge
xlat
pop
test
test
push
jb
movd
xchg
xchg
icebp
sub
sbb
push
or
aad
sbb
int
ds
shrb
push
ds
sbb
nop
ljmp
imull
lds
cmpsb
jmp
negl
adc
sbb
mull
xor
clc
loop
nop
pop
push
xchg
inc
mov
xchg
xchg
hlt
push
xor
xchg
dec
sbb
subb
pushf
pop
pop
stos
xor
or
insl
leave
mov
xor
or
add
xchg
push
add
xchg
xchg
hlt
jle
cmpl
sahf
mov
inc
andb
mov
pop
xchg
sub
mov
outsl
lods
outsb
test
inc
xor
out
xlat
jle
jns
or
push
ja
scas
loopne
nop
jo
adc
jbe
pop
dec
outsl
pop
inc
xchg
pop
jle
xadd
mov
rolb
mov
cs
push
ret
in
jmp
cmpsb
jl
pop
cli
scas
sbb
negl
inc
xchg
rcl
dec
shll
xchg
scas
das
add
test
push
inc
push
js
push
dec
inc
jge
loope
mov
push
fistps
addr16
fisubrl
rol
mov
mov
insb
mov
mov
jecxz
popa
push
repnz
ljmp
imul
pushf
mov
test
or
cmp
inc
inc
imul
mov
cmpsl
pop
cmp
ljmp
lss
rcll
roll
or
icebp
aaa
adc
push
cmp
in
clc
fs
out
push
lock
lods
push
test
or
mov
and
xchg
or
inc
or
je
add
insb
xchg
shr
nop
shlb
roll
xchg
popl
repz
pop
notb
fisubs
mov
test
mov
adc
xchg
sbb
mov
pop
inc
lds
and
shl
aad
sub
mov
mov
inc
add
adc
inc
imul
enter
inc
cld
and
in
push
xchg
adc
int
lds
mov
fmulp
scas
ret
mov
xchg
int3
testb
loope
dec
lahf
cmc
and
cli
push
sbb
inc
aam
aad
faddl
push
inc
jns
xor
rclb
jl
movsb
add
gs
or
push
or
xor
into
daa
fidivs
mov
xchg
and
push
fsubl
addl
cli
jo
leave
arpl
in
cld
add
cltd
ljmp
rep
inc
enter
int
das
adc
sahf
xchg
push
movsl
inc
imul
pop
mov
mov
rorl
push
jo
cwtl
aam
mov
les
mov
add
es
add
test
or
stos
or
push
xlat
mov
data16
adcl
xchg
mov
add
imul
lcall
mov
mov
mov
mov
and
and
scas
pop
mov
pusha
mov
das
jecxz
call
cmp
stos
jne
pusha
mov
xor
sarb
mov
sub
sub
je
inc
insl
sti
jmp
bound
pop
jmp
push
adc
sbb
xor
push
pop
sahf
pop
inc
rorl
xor
das
dec
or
mov
nop
fnstcw
int3
pop
nop
mov
popf
dec
sbb
or
outsl
or
outsl
sub
inc
dec
xchg
fst
xchg
jno
mov
xchg
repnz
mov
or
jecxz
test
in
sbb
std
test
add
out
dec
sbb
mov
push
loop
push
fbld
inc
cmp
xchg
in
xchg
into
jo
mov
pop
pop
scas
add
fwait
pop
xchg
enter
add
push
dec
testl
out
adc
test
movsb
loopne
mov
push
insl
es
pop
xlat
push
jae
ret
sub
out
cmpsl
scas
in
jge
in
xor
sarb
inc
pop
add
adc
jge
aaa
add
sub
add
roll
call
push
movsb
push
push
cltd
test
imul
cmp
or
add
daa
ljmp
sub
movsb
mov
imul
call
adc
push
and
fidivl
sti
xchg
arpl
jne
xchg
scas
fcomps
xchg
cmp
inc
pop
jae
mov
dec
mov
sarb
nop
in
pop
add
mov
cmp
xor
xor
jmp
fcoml
repz
mov
mov
jge
jle,pn
sub
mov
lahf
or
sbb
cli
adc
fdiv
js
inc
lds
mov
jl
mov
daa
pop
mov
cld
pop
loop
adc
push
repnz
jp
lret
sub
mov
fcoms
push
mov
aas
daa
lret
lea
dec
stc
mov
out
fisubrl
fsubr
xchg
ljmp
mov
adc
nop
fptan
xor
adc
pop
aas
jp
arpl
push
les
cmp
insl
testb
sub
arpl
fnstsw
ss
mov
test
popf
clc
inc
dec
mov
repz
stc
inc
insl
and
adc
or
addr16
pop
shrl
cltd
cli
cmpsl
mov
inc
out
sub
pop
push
test
jg
stos
or
enter
mov
in
push
add
jle
mov
stos
xor
outsb
sbb
jp
std
pop
in
imul
imul
pop
xchg
fwait
ret
into
enter
or
rol
test
or
pusha
pop
or
js
and
test
lods
sbb
arpl
mov
pushf
ret
pushf
mov
xor
int3
mov
ja
mov
subl
in
adc
lret
imul
mov
loop
stos
out
dec
inc
jo
gs
loope
stc
sub
fwait
insl
fstpl
xchg
out
outsl
imul
xchg
inc
repz
push
xchg
mov
dec
into
aas
adc
fdivp
lods
hlt
pop
mov
incb
mov
adc
jecxz
cmpb
cmp
xchg
int
mov
enter
dec
jmp
popa
sahf
mov
mov
rorb
push
and
inc
lds
sahf
xor
das
fnsave
insb
lds
in
push
inc
sbb
fcompl
pop
enter
sub
kxnorw
cmp
jle
inc
ja
addr16
xchg
cmp
mov
pop
shrl
loop
pusha
jg
inc
loop
stos
fldl
jmp
leave
adc
xchg
ret
fidivl
sti
out
cmp
jae
insl
add
push
fs
cld
adc
sub
lea
daa
cmp
or
int3
sbb
les
add
pop
into
pop
fstps
sub
mov
dec
or
pop
dec
shlb
out
mov
cmp
ret
fistpll
stos
push
jge
sarb
xchg
jae
mov
mov
fwait
xor
je
adc
js
pop
xor
sub
xlat
insb
adc
or
pop
loope
insl
inc
mov
xor
sub
stc
lret
ret
cs
jo
pop
aaa
mov
hlt
add
rolb
lds
je
shlb
jae
cmpsb
jecxz
out
mov
cmp
fistl
jb
xchg
mov
jno
rclb
push
push
pop
adc
popa
inc
cmp
dec
jl
adc
mov
repnz
jmp
dec
mov
lods
push
ret
xor
mov
nop
mov
lret
pop
mov
cli
dec
shll
in
lock
fisttpll
or
cmp
and
xlat
clc
or
or
and
inc
mov
push
das
fistpll
dec
cltd
pop
cmpsl
jno
test
mov
sub
sub
loope
ficoms
sbb
jle
js
push
lds
fwait
push
out
sbb
mov
mov
movsl
aas
fsts
sbb
subb
cmp
mov
jns
sti
int
pop
xor
sub
or
cmp
test
stc
fstl
in
and
icebp
sub
test
or
adc
aam
push
es
cmp
jno
out
popa
inc
push
lret
mov
pop
rorl
outsl
outsb
mov
ljmp
or
mov
pusha
cs
loope
out
das
sub
sbb
bound
adc
dec
xlat
js
repz
popf
fidivrs
inc
lods
mov
leave
pop
loope
dec
pop
sub
inc
cmc
jmp
dec
mov
lea
push
shrb
push
sbb
fisubrl
lahf
xchg
cmpsl
rorl
cmp
loop
xchg
mov
es
repz
and
or
mov
mov
cmp
stos
movb
adc
js
jmp
ret
test
mov
fwait
shlb
daa
mull
sbb
adc
jg
sub
cmp
or
in
push
mov
sbb
dec
fs
ds
clc
push
lea
sbb
or
fdivl
pushf
and
call
xlat
mov
mov
jecxz
cs
sub
andl
jmp
stos
push
push
mov
push
nop
sbb
pop
adc
sar
xchg
movsb
mov
jo
pop
fsubrs
sbb
lock
fcomps
scas
jl
inc
es
jo
push
les
xor
or
push
mov
clc
xor
pop
ja
mov
test
repz
sahf
fimuls
sub
outsl
mov
jg
xchg
push
pushl
push
outsl
inc
cmc
test
jl
pop
icebp
cli
aaa
or
jae
fldt
jle
nop
in
lods
pusha
push
jno
dec
xchg
shrb
arpl
or
add
xchg
ret
int3
add
add
mov
inc
jl
ret
imul
jns
rorl
add
dec
mov
xor
or
add
aaa
jb
lret
push
icebp
in
pop
mov
add
inc
jno
stc
scas
inc
lret
lahf
movsb
fs
cli
out
mov
stos
xchg
pop
popl
sub
pop
sbb
add
xor
aas
in
movsl
inc
data16
adc
and
xor
push
sub
cmp
notb
mov
mov
js
insb
xor
sbb
add
or
jbe
mov
cs
push
fs
jmp
nop
stos
mov
scas
mov
lahf
xor
in
lods
mov
or
mov
fcom
iret
jnp
xlat
dec
seta
imul
push
cmp
inc
mov
mov
popl
sbb
xor
xchg
dec
push
insb
lahf
testl
loope
cmp
es
cmpsb
inc
inc
mov
lret
push
dec
es
aad
cmpxchg
rcll
movsl
jae
cs
jp
xchg
bound
dec
sbb
orb
cmpsb
je
fmuls
movsl
movsb
adc
outsb
lret
iret
sbb
loopne
jge
fs
jecxz
add
push
in
inc
je
pop
push
cmp
cs
int
add
mov
inc
cmc
add
test
pop
sub
inc
xchg
in
mov
int
mov
stos
mov
outsl
add
jmp
pop
test
insl
mov
divb
or
mov
adc
bound
pop
sub
repz
sbb
mov
push
aam
cmp
lea
repnz
fistpl
pop
jle
adc
dec
ficompl
jbe
lock
jno
cmp
sub
dec
outsl
pop
jo
sbb
sti
push
add
xchg
aas
xchg
in
mov
test
cmc
mov
aam
adc
pop
nop
dec
ja
aad
xor
fdivs
xchg
lods
jp
test
test
pop
into
mov
mov
mov
pop
dec
sbb
adc
sbb
mov
fildll
in
mov
xor
mov
out
out
cmp
mov
jno
mov
pop
adc
por
lock
xchg
ds
mov
push
cmp
sub
mov
scas
daa
mov
pop
sbb
aam
inc
dec
sbb
ljmp
rep
je
mov
inc
dec
inc
push
pop
hlt
aam
adc
and
addr16
xchg
or
inc
int3
sub
pop
fldt
push
inc
xor
pop
out
lret
push
cwtl
inc
xchg
pushf
ficoms
mov
cli
fcmovnu
mov
in
icebp
imul
inc
imul
sbb
lea
push
lret
pushf
dec
test
les
subl
or
loopne
mov
mov
gs
fsubs
xlat
dec
jae
sbb
dec
xchg
cmp
fcompl
or
pop
pop
fwait
aad
mov
dec
cmpsb
push
aaa
imul
mov
mov
mov
dec
sub
xchg
iret
call
sub
jp
dec
mov
jno
cltd
jae
xor
mov
inc
test
sub
xchg
sti
lcall
xor
or
jmp
out
sub
jb
xor
sub
sbb
mov
psubq
sarb
iret
sub
push
sub
cmp
out
jbe
mov
jne
inc
mov
push
cltd
add
ss
dec
leave
popf
inc
dec
sbb
xchg
and
rolb
add
sbb
jbe
xchg
inc
iret
and
cmp
fiadds
pushf
pop
add
pop
and
js
xlat
out
mov
subb
loope
into
or
bound
aad
jg
jg
or
add
ja
sbb
stos
loopne
push
or
dec
in
arpl
popa
jns
push
fs
in
fiaddl
fstps
add
lcall
adc
sub
sub
cmpsb
cmpsl
nop
bound
aaa
neg
rcll
push
popf
xor
add
in
addr16
add
fcoms
xor
xor
mov
push
stc
mov
xor
movsb
jne
int3
aad
fisubs
xchg
adc
sbb
dec
xlat
jns
mov
js
hlt
out
sub
outsl
pusha
xchg
pop
sbb
clc
aam
inc
aaa
mov
sbb
pop
mov
aas
xlat
adc
pop
pop
pop
sbb
mov
cmp
xchg
pop
sub
aam
pop
push
mov
pop
and
das
add
mov
cld
cwtl
sub
fstps
outsb
mov
push
cmp
cmp
out
cmp
arpl
xor
or
mov
pop
xor
pop
add
dec
mov
push
fistps
scas
outsb
in
add
cmp
inc
data16
lret
dec
das
mov
test
sub
mov
inc
push
jecxz
roll
dec
mov
sub
add
or
mov
xchg
xchg
call
add
or
mov
test
adc
movsb
lods
adc
nop
xchg
int
dec
and
sub
pop
aam
arpl
jg
nop
mov
and
adc
xor
outsb
cmp
iret
imul
and
mov
jle
loopne
repnz
pop
in
int
lock
xchg
inc
stos
incl
add
ret
dec
jnp
xchg
and
xchg
loop
lods
xchg
xchg
adc
stc
and
into
aad
bound
cmp
jnp
call
cwtl
adc
push
loopne
js
lcall
hlt
sub
gs
mov
ds
ret
cltd
repz
mov
ljmp
cld
jb
movups
inc
ljmp
mov
ret
popa
dec
adc
and
sti
lods
in
leave
mov
lock
scas
jnp
lds
dec
inc
clc
scas
insl
cmp
and
stos
cmpsb
xor
mov
test
adc
popf
test
mov
cmp
mov
add
pop
sub
jno
fcoms
out
add
rclb
or
mov
rcrl
mov
shlb
setg
xor
or
icebp
push
jmp
mov
jg
sbb
xchg
push
stos
fdivrs
dec
jl
mov
es
daa
pop
push
sti
aas
lcall
icebp
pop
xchg
std
fsubrl
icebp
movsb
cmpsw
inc
and
pop
ret
dec
pop
test
es
jge
sbb
mov
repz
mov
ljmp
in
mov
pop
lea
sub
xchg
ds
push
pop
fists
push
and
xchg
pop
sbb
jnp
arpl
mov
mov
test
or
cli
mov
std
sub
hlt
daa
push
mov
rclb
inc
mov
loop
and
adc
or
mov
sahf
into
aaa
repz
jg
jbe
sbbl
cmp
cmp
repz
inc
fildll
cld
xchg
and
pushf
imul
repz
jbe
jecxz
fwait
or
lea
ljmp
insl
mov
popa
fadd
xchg
mov
push
pusha
addr16
cmpsb
test
sbb
notb
fmuls
pop
andl
shll
pop
sbbl
out
jecxz
jle
adc
shlb
pop
cmpsb
add
pop
xor
popf
cmp
push
subb
pop
roll
out
inc
rcrb
jns
mov
push
and
and
shr
out
nop
push
lds
mov
and
popa
inc
mov
pop
pop
sub
xchg
lods
repz
scas
rclb
add
add
aas
imul
int
mov
sub
xchg
in
hlt
fldl
sahf
scas
es
mov
adcl
pop
test
popf
cwtl
sbb
xor
inc
add
fisubs
push
adc
mov
cld
dec
mov
scas
movsl
mov
jne
dec
movsl
dec
adc
fcomp
xchg
pushf
imul
adc
and
xor
fwait
dec
loopne
repnz
push
dec
mov
data16
or
or
adc
rcrb
hlt
into
imul
jns
fwait
push
pop
add
inc
pop
in
repnz
test
pop
inc
sub
lret
lds
pop
jno
fldenv
and
mov
mov
push
push
or
mov
in
test
dec
cmp
cld
lcall
xchg
rol
and
rcll
xchg
daa
in
into
out
mov
ljmp
and
jnp
inc
sub
lock
jae
nop
lods
xor
add
ds
sahf
xchg
or
ljmp
mov
jae
adc
add
mov
jnp
adc
dec
xlat
enter
push
xchg
mov
dec
xchg
dec
sbb
das
pop
and
xchg
test
sbb
inc
push
sarl
cmp
mov
xor
sbb
ficompl
loope
push
aas
insl
or
push
je
stos
lahf
ljmp
cmovb
or
cmp
insb
xchg
mov
scas
rcrl
jmp
dec
jae
or
inc
stos
lcall
pop
inc
mov
cld
cwtl
pop
pop
or
lods
ficoms
lahf
push
mov
aaa
test
xchg
in
mov
xchg
mov
mov
faddl
popl
addl
orb
fwait
daa
std
in
iret
cli
lcall
out
push
aam
xchg
mov
jge
adc
inc
cltd
inc
jl
mov
in
mov
es
in
cwtl
xlat
adc
andl
movnti
jge
xchg
adc
mov
push
mov
xchg
jne
aam
push
push
ljmp
cld
xchg
loopne
rcl
xchg
xchg
jp
fldcw
add
jb
lods
inc
aad
fucom
popa
fimuls
dec
cmp
and
shlb
cld
add
scas
mov
icebp
mov
xor
out
shrl
sbbb
xorb
push
jmp
or
pop
xchg
mov
fstl
rcll
sub
out
ljmp
jo
pop
gs
addl
out
add
push
add
sti
out
fidivrl
jmp
adc
add
mov
inc
mov
rorl
dec
mov
out
ja
scas
cmpsl
aam
fdivrl
push
sbbb
add
pusha
fistl
fimull
inc
in
pop
test
addr16
adc
ss
inc
adc
fidivl
cwtl
jp
jno
pop
test
call
out
rcr
push
mov
xchg
imul
xor
mov
sub
or
pop
mulb
idivl
jl
icebp
pop
shlb
loope
inc
pusha
out
push
stc
add
shll
mov
pusha
insb
cmp
mov
mov
push
dec
outsb
andb
push
xchg
xchg
outsb
lea
not
in
in
push
mov
mov
sub
cwtl
in
xor
xchg
cmp
fs
aad
push
push
adc
sub
stos
xchg
aam
add
scas
popf
pop
loop
jecxz
fsubs
out
enter
pop
jno
andb
add
and
loopne
mov
stc
pop
or
fsubrp
les
out
sub
iret
dec
mov
push
adc
lret
setle
clc
mov
cmpsb
lds
mov
jo
push
push
pop
sub
addr16
cltd
std
push
fxtract
mov
sbb
test
sub
dec
lcall
lods
xor
out
insl
jbe
fcmovnu
inc
mov
inc
push
imul
addl
imul
sub
loop
stc
insl
xchg
mov
test
ret
stc
in
xchg
pop
jge
lcall
test
mov
mov
dec
out
xchg
sub
mov
add
or
sbb
fcompl
push
out
and
mov
pusha
lods
jb
jecxz
dec
sub
stos
xor
sti
rorb
cmp
movsb
dec
cs
in
dec
ds
js
push
sbb
sbb
ljmp
push
stos
das
bound
nop
popa
xor
jge
inc
cli
cmpsl
lds
outsl
cmp
add
mov
stos
pop
stc
mov
scas
ss
jle
xchg
push
daa
jecxz
jp
and
sbb
mov
adc
push
cmc
les
data16
fs
pop
mov
pop
sbb
adc
cmp
iret
cmc
inc
stos
fnsave
dec
xor
pop
mov
mov
and
dec
out
lret
ljmp
and
sahf
addr16
xor
dec
jl
cli
insb
hlt
inc
icebp
pop
inc
icebp
aaa
fiadds
movsl
int
andl
ljmp
pop
pop
jg
mov
arpl
sarl
lods
inc
cmpsb
push
shll
xor
sub
rol
jge
mov
lahf
lahf
movsb
push
push
lret
xor
mov
xchg
xchg
out
hlt
cmp
jns
pop
xor
fwait
inc
into
inc
mov
mov
add
das
inc
xor
push
lods
int3
pop
xor
js
push
xadd
mov
test
mov
in
mov
push
out
or
sti
pop
data16
int
fcoml
in
pop
sub
xor
push
daa
es
mov
and
jnp
out
xor
dec
jne
adc
add
cmp
or
add
jmp
ja
inc
es
cwtl
adc
cltd
jae
pusha
push
or
or
add
fiadds
push
aam
sub
mull
inc
and
lds
in
mov
xor
pop
lahf
xlat
push
xchg
pop
repnz
or
mov
mov
int3
in
cmpsb
cmp
lods
cltd
dec
mull
test
mov
aas
or
cmp
adc
lret
ljmp
repnz
xor
cmpsb
outsb
mov
push
or
dec
mov
mov
ja
add
xchg
sarb
or
jle
mov
in
das
sub
aaa
sbb
push
add
popa
mov
xlat
leave
ja
inc
ss
lock
push
add
sbb
cmpsb
mov
test
loop
dec
or
shlb
hlt
lds
adc
movsb
fiaddl
push
test
data16
push
xchg
mov
and
add
test
fisubrl
les
int
popa
aam
fsubrl
lods
push
pop
push
aas
mov
inc
cs
jne
mov
sahf
nop
xor
push
pop
mov
outsb
cli
in
fldt
outsb
xor
and
dec
or
push
lods
pop
jecxz
aam
push
repz
enter
je
push
jmp
cmp
mov
ja
in
fcomp
ss
jl
lret
shl
lock
mov
insl
push
in
lahf
xor
inc
add
lea
pop
aaa
les
js
rorl
adc
shl
pop
pop
jbe
ret
xor
pop
and
mov
es
push
dec
pop
cmp
and
out
lds
lods
xchg
test
inc
jecxz
xchg
repz
int
jno
fidivl
add
mov
mov
pop
mov
faddl
lods
add
pop
popa
xor
and
cmc
push
das
scas
cmpl
arpl
cld
sub
dec
loopne
pop
xor
or
addr16
dec
mov
icebp
cmp
adcl
icebp
das
jns
inc
in
ja
aad
mov
aaa
mov
mov
cli
mov
out
push
insb
push
cmp
enter
or
jecxz
ja
dec
mov
rcrb
mov
leave
push
jecxz
aam
mov
pop
shrb
jmp
adcl
call
push
aaa
out
ret
outsb
lahf
movb
leave
test
jge
call
mov
mov
sbb
movsl
ljmp
fsubrl
aaa
mov
repz
daa
imul
and
add
cmp
sbbb
ss
cmp
xor
ljmp
inc
cmp
pop
or
push
or
imul
lcall
sub
push
xor
fcompl
rep
push
push
inc
mov
dec
jno
pop
sbb
das
int3
push
mov
xchg
dec
add
inc
push
outsb
sahf
into
mov
inc
cs
pop
dec
mov
pop
sti
jl
xchg
ds
and
add
lret
popa
sub
mov
mov
mov
add
adc
mov
xor
fsubs
iret
mov
inc
mov
dec
out
fucomp
jbe
ja
arpl
cmp
add
stos
outsb
jno
xchg
lock
mov
pop
aas
std
add
xor
cmp
int
sub
loope
push
lods
es
lahf
dec
sub
cmp
push
mov
push
jmp
inc
pop
mov
dec
xchg
stc
jae
iret
popa
pop
mov
test
test
jbe
xchg
out
lret
ss
dec
pop
jo
inc
mov
sub
cli
xor
push
push
adc
jmp
sub
pop
stos
jmp
mov
sbb
jo
outsl
fnstenv
insb
and
testb
pop
push
and
push
xor
inc
cwtl
xchg
inc
fisubrl
pop
pusha
iret
cmpsl
jge
repnz
push
xor
push
les
mov
cmp
scas
popa
lea
mov
out
jmp
pop
lret
pop
fildll
sub
xchg
sbbl
fistps
cld
mov
mov
sub
mov
adc
jmp
insb
fnsave
into
mov
xor
addl
mov
mov
fisttps
jg
movsl
lret
mov
lret
push
adc
fcoml
push
dec
mov
cmpsb
movsb
and
cli
mov
push
out
sub
int
push
mov
iret
push
ret
fisttps
push
je
lds
or
popf
rcrl
mov
xchg
js
jl
pusha
leave
push
pop
enter
sub
inc
lahf
inc
push
xchg
xor
mov
inc
and
cmp
mov
pop
popf
stos
xor
mov
ljmp
jne
mov
or
lea
icebp
lcall
mov
xor
daa
ja
adc
sub
sbb
and
fcomps
adc
fcom
and
pop
movsb
sbb
push
lea
inc
insb
inc
jg
shrb
jle
or
loop
cmpsb
int
fnstenv
sbb
add
pushf
loop
aas
pop
out
insl
ds
and
jmp
je
sbb
daa
add
add
mov
lods
adc
mov
dec
add
pop
and
loopne
int3
outsb
movsl
pop
arpl
fistpl
aam
mov
pop
xor
sub
mov
cmp
sbb
repz
sbb
jle
adc
fldcw
loope
adc
and
mov
popf
lahf
sahf
mov
add
es
add
shl
xor
out
fistpl
jmp
pop
dec
leave
in
mov
cs
aas
repz
or
xchg
fcmovu
cltd
insl
sbb
test
jo
test
sbb
add
jns
mov
push
push
cmp
pop
int3
sbb
jne
scas
and
jecxz
insb
xchg
jg
push
sahf
adc
fisubl
mov
sbb
and
mov
aaa
ds
sbb
fwait
xchg
push
xor
lods
stos
mov
dec
lock
popa
mov
jl
pop
sub
inc
mov
mov
mov
mov
jge
test
xchg
fwait
ljmp
xchg
and
lea
xchg
fdivl
lock
jbe
loop
xchg
mov
cmpsb
jl
push
fsubp
andl
mov
xchg
flds
inc
jmp
or
loop
xchg
mov
jge
fstps
jecxz
sbb
int
stc
hlt
and
mov
insl
add
inc
ja
out
fwait
lret
push
lock
inc
add
jmp
adc
dec
iret
cmp
leave
mov
xchg
sbb
sub
in
sub
inc
fisubl
mov
cwtl
pop
mov
test
repz
bound
inc
aam
push
sbb
fnstenv
icebp
xor
dec
inc
ljmp
and
aas
outsl
jp
xor
jbe
outsl
dec
mov
mov
jmp
dec
popf
jp
sub
lret
or
aad
cli
fwait
aaa
ds
fcomp
mov
xor
adc
int3
push
mov
jae
xchg
lds
push
sbbl
mov
inc
fildll
mov
cmp
lea
jbe
scas
aam
and
enter
push
int
lods
push
xor
xchg
mov
pusha
addr16
sub
es
mov
enter
nop
push
loope
daa
push
sar
mov
fstps
fcoml
and
stc
mov
sub
sarb
shll
ret
fsts
lea
faddl
popf
bound
cld
mov
mov
sahf
and
push
dec
adc
adc
xchg
stc
push
cmc
test
dec
fchs
outsl
pop
mov
iret
outsb
movsl
nop
mov
mov
push
leave
inc
lock
test
inc
inc
jns
dec
mov
lret
mov
cmp
cwtl
sub
pop
cmpsl
arpl
leave
stos
xor
xor
xor
in
fcmovnbe
mov
ret
dec
outsl
mov
sub
xchg
ret
jne
out
xlat
mov
fbstp
cwtl
sub
nop
sub
xor
mov
push
push
inc
mov
push
cmp
push
stos
xchg
das
mov
fmul
pushf
xchg
cmp
roll
pop
nop
into
add
sbb
movsl
faddp
fidivs
cmp
push
mov
cs
fldl
or
mov
inc
cmp
subb
mov
inc
or
sbb
pop
loop
mov
pop
or
jae
xor
xchg
out
in
cltd
xchg
pop
inc
inc
push
orl
fwait
enter
pop
cmovne
xchg
adcl
add
or
out
push
leave
loop
pushf
lret
add
sbb
les
out
adc
or
dec
push
pop
pushf
mov
test
jo
add
stc
mov
jo
das
stos
dec
mov
aad
adc
out
adc
sub
jg
jb
pusha
xor
in
xchg
paddusw
sahf
xor
sar
sbb
or
pop
or
add
lock
aas
ljmp
clc
test
out
gs
js
sub
mov
sub
movsl
push
pusha
mov
pop
or
jb
into
jecxz
pop
or
pop
sbb
mov
and
add
sbb
outsl
and
lcall
jae
imul
push
push
stos
lret
xchg
xor
gs
mov
fwait
stos
repnz
push
sar
test
cli
sbb
inc
movsb
std
insb
orl
ficomps
stc
push
xchg
or
and
sub
push
mov
add
or
mov
testb
mov
mov
or
sbb
pop
sbb
pop
mov
fimuls
and
inc
mov
insl
es
mov
addr16
dec
push
adc
mov
mov
sub
ds
lds
clc
mull
sub
push
or
lock
sti
lcall
xlat
xchg
mov
das
fldenv
movl
sbb
dec
cmp
mov
addr16
into
ret
mov
push
jns
addr16
mov
adc
lcall
out
xor
pop
and
push
test
jbe
dec
inc
fwait
imull
mov
shl
inc
mov
sti
icebp
lea
andl
inc
inc
cmp
lds
js
fs
push
push
jae
add
lods
mov
jg
and
push
or
mov
push
mov
push
rolb
or
lret
cmp
pop
aad
into
arpl
in
lods
leave
add
cwtl
pop
push
mov
inc
or
add
stc
mov
sub
cmp
addr16
repz
pushf
popa
lods
sbb
arpl
fmull
lods
mov
mov
push
push
dec
mov
mov
je
sbbl
adc
loopne
dec
push
inc
cwtl
cmpsb
imul
push
sti
cmpsb
je
dec
sti
lret
in
fisttps
aam
and
fldt
push
push
sub
addl
dec
gs
adc
cmpsl
xchg
jne
push
and
lock
pop
testb
push
jae
cmp
into
push
ret
mov
lock
mov
loopne
fbld
fs
js
dec
bound
mov
lea
mov
subb
and
sahf
add
pusha
jg
adc
jbe
mov
jns
mov
or
lock
outsb
das
push
inc
dec
pop
pop
fsub
and
xor
in
lahf
jmp
fs
mov
out
mov
jnp
movsb
and
call
mov
sbb
xor
mov
sub
adc
pop
sub
movsl
out
xor
out
das
add
mov
adc
adc
pop
stos
enter
ja
das
outsb
repz
dec
mov
inc
cmp
xor
stos
or
fisubl
sti
xchg
inc
nop
or
movsl
andl
clc
dec
sub
push
sub
rcrb
imul
mov
mov
xlat
lcall
jne
imul
cmp
mov
xor
inc
div
stos
loope
test
out
int3
jo
lods
cmp
cwtl
mov
adc
fcmovu
pop
pop
push
adc
pop
sub
jl
rcrb
scas
sti
xor
adc
aam
add
or
pop
dec
xchg
les
push
xchg
jl
adc
int
nop
mov
leave
iret
mov
sub
divl
cmp
adc
xor
arpl
popa
lods
mov
push
testl
mov
pop
mov
mov
sub
jne
sti
loopne
cld
icebp
fwait
loope
and
cmp
cmp
push
lock
frstor
fisttpl
push
adc
inc
or
sarb
and
xchg
pop
ss
cld
ret
in
cmp
lock
fwait
rcll
push
fsubs
bound
lods
popl
std
call
mov
idivl
adc
shlb
mov
aas
pusha
or
mov
pusha
inc
inc
inc
inc
push
adc
xor
push
push
mov
sbb
pusha
dec
jnp
jbe
dec
add
or
lahf
xlat
lcall
insl
push
sbb
loop
xchg
sbb
fsubrs
daa
nop
aad
or
lock
xchg
repnz
cltd
pop
add
loope
mov
movsl
cld
lahf
or
xchg
fldenv
pop
adc
hlt
in
push
and
lret
xor
iret
aaa
leave
xchg
insb
arpl
loopne
out
jge
add
pop
fs
cli
and
data16
sub
mov
or
or
pop
lret
xchg
xor
pop
lcall
pop
mov
xchg
cwtl
mov
insb
pop
cmp
roll
imul
daa
not
dec
add
xchg
and
push
stos
scas
pop
cmp
or
xchg
and
in
inc
test
sbb
jno
push
push
lods
jb
outsb
lds
push
pop
outsb
dec
fwait
repnz
jle
xchg
dec
xchg
inc
dec
test
mov
lcall
pop
pop
inc
cmp
cli
dec
lret
adc
mov
push
xchg
jmp
es
fistl
fsubl
mov
mov
out
jne
lret
xlat
loope
pop
cli
je
fdivrs
ret
mov
leave
lcall
inc
push
stos
lret
mov
mov
pop
mov
lret
ret
mov
std
subb
jns
jl
ljmp
pop
and
dec
push
cmp
xor
xchg
mov
mov
mov
and
inc
jmp
hlt
pop
fimuls
adc
jle
mov
pushf
and
ret
cmpsl
mov
or
lds
jge
stos
dec
cltd
push
cmp
dec
cmp
xchg
int
test
call
mov
popa
sbb
xor
sbb
mov
ja
and
fimull
shlb
pusha
or
inc
mov
out
xlat
mov
cld
sbb
pop
mov
mov
je
xor
in
movsb
xchg
pop
cmpsl
insb
dec
xchg
pop
dec
popa
sbb
mov
dec
sbb
popa
popf
mov
mov
add
and
adc
cmp
cmpb
pop
jae
xorl
mov
cwtl
push
lahf
xchg
or
cmpb
cld
mov
lds
addb
scas
lock
cmp
pop
mov
lods
jge
into
call
aaa
scas
xlat
xchg
test
insl
lods
and
mov
sti
ja
fisubs
sub
insb
push
lcall
aaa
inc
jo
pop
and
add
dec
mov
pusha
pop
adc
les
movsb
jne
test
pop
icebp
hlt
shlb
add
cs
sub
in
jle
icebp
ret
fstpt
mov
fwait
out
and
xlat
push
push
shr
cmp
push
mov
add
or
cmp
loopne
pop
in
int3
cmp
or
loope
fcoml
xchg
dec
jns
cmpsb
rorl
sub
cmc
adc
test
jb
dec
adc
sub
je
jo
movsb
add
jle
mov
fdivrp
or
loop
xchg
push
xchg
mov
imul
das
jne
lods
xor
cld
add
dec
faddp
mov
mov
mov
cld
andb
sahf
les
lret
ret
inc
push
cmp
test
jge
cltd
and
lods
std
mov
inc
and
jmp
lds
dec
enter
and
flds
imul
dec
pop
mov
adc
js
cmp
in
out
or
out
add
stc
fwait
fwait
adc
pop
fldenv
cmp
push
mov
bound
and
lahf
repz
adc
sub
mov
lret
movsl
test
add
stos
jmp
mov
fdivl
cmp
sub
and
xchg
push
cmpsl
jae
out
clc
stos
push
push
add
jnp
mov
xor
pop
mov
sbb
shrl
jns
adcb
call
jb
and
in
rcrb
push
cmp
mov
xlat
fiadds
mov
mov
inc
mov
outsb
lock
mov
mov
fs
aam
pusha
adc
into
mov
scas
xchg
in
inc
push
iret
xchg
mov
xor
fnsave
inc
pop
dec
bound
test
cmp
mov
pop
xor
or
sbb
jno,pn
sub
xor
cmp
cltd
stos
cmp
sbb
pushf
sahf
es
ret
fcompl
inc
or
push
iret
mov
xor
inc
popa
dec
test
xor
push
lock
cmp
insl
int
dec
test
push
daa
repz
loope
pop
mov
jecxz
fcoms
loope
mov
mov
adc
or
mov
aas
and
dec
mov
jle
das
cmp
push
rclb
mov
pop
and
cmp
sub
lds
mov
sti
ljmp
sbb
pop
in
pop
sub
je
fisubl
mov
xchg
or
test
sub
ljmp
adc
ljmp
add
cmpsl
addr16
in
dec
enter
mov
pop
addb
repnz
jno
daa
dec
addr16
fadd
out
out
pushf
mov
sahf
mov
addr16
fmul
cmp
xlat
and
ljmp
popf
cli
jl
mov
mov
inc
adc
mov
cli
inc
scas
call
xchg
pushf
aam
fildll
cmp
dec
std
pop
nop
jnp
mov
fdivp
push
push
ja
rclb
sub
les
xchg
or
nop
and
ret
jg
mov
push
jb
push
xchg
ror
sub
pop
xor
lcall
mov
sub
popf
xchg
jmp
pop
ret
stos
pop
cltd
cs
fiadds
cmp
imul
les
cmp
test
ja
es
xchg
cmpsb
int
fstpt
jecxz
mov
inc
jl
mov
je
or
data16
mov
lret
jnp
push
jb
orb
cwtl
call
out
mov
in
imul
loop
mov
and
cmp
adc
mov
je
or
repz
mov
sti
nop
test
xchg
fimull
test
adc
addl
sbb
ss
push
movsl
dec
xchg
adc
mov
or
mov
sbb
cmp
and
and
cmp
fnstenv
pop
add
dec
mov
dec
or
fists
dec
lret
icebp
sbb
push
iret
pop
mov
add
and
out
adc
psrld
mov
clc
xchg
lahf
sbb
fdivrs
in
push
fnstcw
or
inc
and
lock
and
or
enter
shlb
pop
mov
clc
out
sti
dec
cmp
add
mov
mov
jg
movsb
orb
cmpsl
jg
mov
push
adc
filds
cmc
out
sub
pop
push
fs
jb
xor
stos
icebp
or
sbb
ds
and
xchg
loopne
and
jmp
mov
cmpsb
xor
adc
dec
mov
or
adc
enter
xor
sub
fistps
pop
xchg
int
jnp
lods
aas
pop
xor
ror
pop
sar
xlat
cmovl
scas
xchg
fwait
or
je
imul
int
cmp
imul
inc
push
push
in
gs
mov
insl
js
push
mov
push
xor
aaa
out
push
movsl
pop
inc
ss
cld
shll
loop
xor
sbb
fstps
push
lods
add
roll
push
les
loopne
outsb
or
lock
push
int3
mov
and
sbb
inc
and
fwait
xor
in
pop
test
scas
stos
jp
outsl
iret
sub
mov
inc
add
adc
inc
lret
xor
sub
inc
int
rolb
sub
aad
inc
into
cmp
sub
insl
std
pop
int
mov
xchg
adc
test
fcom
jl
mov
mov
jp
add
mov
fildll
mull
add
test
jle
fistps
dec
repz
shll
out
jns
ss
mov
jne
mov
inc
mov
into
inc
dec
sub
pusha
xchg
lret
push
lea
or
and
sbb
bound
xor
cmp
add
clc
sarl
adc
inc
push
push
xor
or
sbb
and
sub
addr16
int3
push
dec
lds
pop
sub
sbb
xor
mov
fimuls
sub
cwtl
pop
mov
or
and
scas
fdivl
cmp
pop
inc
shll
insl
dec
test
mov
or
arpl
xor
and
mov
add
pop
mov
lahf
lret
jns
inc
jae
jl
mov
enter
cmp
fstl
test
out
aaa
ret
adc
cmp
lods
cmp
pop
dec
ss
inc
fstps
xchg
dec
imul
sub
adc
jo
xchg
movsl
push
movsb
scas
stos
push
gs
dec
adc
cmp
pop
jmp
sub
test
cltd
js
sbb
inc
out
test
outsb
out
jmp
mov
push
xchg
es
push
adc
dec
dec
xlat
sbb
test
mov
stc
outsb
mov
sbb
jle
data16
mov
nop
in
lret
je
cmpsl
dec
pusha
xchg
sahf
sbb
dec
cld
in
or
ret
sub
pop
jns
ljmp
sbb
sub
jnp
mov
dec
out
arpl
dec
sub
xchg
aam
jl
out
lea
out
push
lea
daa
push
scas
les
pop
scas
sbb
ljmp
lds
push
jnp
pushf
inc
dec
xchg
aam
jle
push
mov
jnp
pop
dec
jp,pt
push
xor
push
pop
sbb
dec
das
cmp
push
arpl
mov
movsb
jo
test
adc
xchg
sbb
movsb
test
mov
roll
and
inc
stc
push
mov
cmp
cmpsb
mov
pop
test
and
ljmp
mov
jg
mov
dec
push
rclb
insb
adc
fidivs
cmp
xor
stc
ss
je
push
scas
sarl
jg
iret
popa
pop
aaa
aaa
pop
movsl
cmpsb
cmpsb
sub
xor
repz
in
mov
repz
int
cs
cs
movb
jle
push
sbb
jp
and
ja,pn
stc
sahf
mov
adc
add
xor
xor
sbb
sub
andb
jp
aad
add
leave
mov
fdivs
gs
cli
xchg
mov
lods
adc
cmp
mov
es
in
inc
mov
mov
lock
sbb
out
lret
or
sub
ret
lods
sbb
fisubl
and
sbb
in
dec
sbb
aam
pop
mov
xchg
push
mov
data16
sti
sbb
aaa
aad
mov
loope
sahf
test
xlat
add
cmp
adc
cmp
aas
mov
push
mov
jecxz
loop
push
arpl
mov
jle
pop
jmp
mov
sub
loopne
sti
mov
sub
pop
jbe
dec
clc
lret
pop
dec
xchg
push
cmp
out
lock
jmp
into
dec
rorb
push
fwait
pop
mov
fmuls
lods
xchg
leave
and
incl
pop
sub
xchg
push
jno
mov
mov
sti
mov
xor
mov
scas
pmulhw
jge
inc
test
dec
mov
jmp
xchg
adc
in
fcom
repz
jmp
mov
jg
adc
jg
push
into
adc
fcmovbe
push
add
dec
jle
jecxz
insb
lock
out
dec
movsb
popf
ss
je
add
test
mov
and
xor
shrb
pop
xchg
leave
shlb
mov
lret
jle
lods
dec
aas
rorl
hlt
push
cmp
stos
xor
in
xchg
cmc
andl
pusha
ss
mov
aaa
test
mov
xor
jae
nop
testb
pop
mov
jns
adc
loop
push
in
je
shrl
fsub
lret
cs
je
cmc
push
jp
mov
ud2
push
insl
add
in
pop
sarl
jnp
and
xchg
les
or
lock
cmpsb
cwtl
int
fwait
sbb
or
scas
mov
testl
dec
jne
fidivs
in
mov
jge
dec
mov
cs
ds
pop
call
xchg
out
js
pop
add
js
aad
aam
jmp
mov
xchg
iret
xchg
cmpsl
adc
lock
aam
mov
mov
xchg
fwait
and
add
xor
pushf
iret
std
push
jl
push
jmp
push
std
insb
or
fstl
test
cmpsl
adc
push
mov
aaa
je
xchg
loop
mov
mov
add
push
and
sbb
subb
in
xchg
lahf
dec
roll
jnp
lods
sbb
add
mov
adc
shl
and
fldl
and
rcrb
pop
lret
out
xchg
push
enter
inc
mov
fiaddl
xlat
cli
addb
push
fdivr
rorl
dec
negl
pushl
cmp
sbb
push
add
pop
stc
dec
mov
fmul
mov
push
loopne
inc
call
pop
aas
mov
mov
loope
push
negb
xor
subb
inc
push
les
mov
jge
or
sahf
loop
mov
ds
in
push
into
push
push
cmp
pop
rolb
inc
out
std
int
lock
xchg
leave
sub
jno
pop
hlt
inc
pop
jmp
movl
lods
jmp
xor
adc
add
push
xor
mul
jno
xchg
push
sub
mov
sbb
addps
add
mov
or
lds
repz
mov
pusha
es
xorb
sub
push
popa
gs
test
jnp
dec
pop
std
mov
aaa
fidivl
sbb
or
lods
fsubrl
jo
pop
inc
pop
ret
sub
cmp
lahf
sahf
add
dec
les
xlat
ret
jg
or
mov
mov
ja
shll
movsl
sub
adc
sbb
pop
inc
adc
and
test
aaa
pop
dec
loop
rclb
lds
test
bound
aas
xchg
or
push
mov
leave
pop
or
dec
xchg
xor
push
mov
cmpsl
push
mov
mov
fwait
mov
push
sub
dec
pop
ret
or
aaa
fst
mov
xchg
mov
push
ss
xor
cmp
mov
test
xor
in
test
sbb
pusha
jmp
and
sar
xchg
cmpsl
cld
mov
lcall
jecxz
xor
imulb
jb
sbbb
and
cld
xlat
xlat
mov
imul
sbb
xor
cmp
sub
bound
aaa
orl
mov
cmp
adc
xchg
test
mov
mov
loope
loopne
pushf
pop
notl
mov
sbb
cmc
cmp
test
pop
push
mov
data16
dec
sbb
pop
je
scas
push
push
out
lock
mov
mov
iret
aaa
xchg
je
lock
sub
pop
sub
cmp
jl
insl
lods
push
jae
dec
and
mov
pop
fcomps
aas
add
pushf
dec
movsl
cmp
sti
orl
insl
lea
out
jae
mov
in
call
cmp
inc
pop
xchg
sbb
fildll
add
push
jnp
ss
jecxz
push
adc
mov
fld
pop
mov
mov
pushf
mov
push
add
dec
stos
xor
lods
pusha
and
loopne
inc
xchg
adc
cwtl
or
jnp
cltd
das
cmc
sbb
push
push
push
popa
lret
dec
sbb
mov
orb
cmp
imul
loop
scas
xchg
sbb
mov
push
or
cmp
jnp
scas
pop
mov
int
lret
divl
ret
fisubrs
cmp
sub
dec
push
inc
dec
cmp
push
push
shlb
insb
adc
ds
add
iret
je
lds
add
add
or
sbb
pop
add
int
cmpsb
add
cld
xchg
leave
sub
test
cwtl
rclb
jne
dec
out
mov
out
aaa
test
mov
ficomps
jno
mov
xor
or
out
insl
cmp
jne
dec
mov
js
scas
divl
and
jns
rorb
popf
aam
sub
push
push
lods
jecxz
repz
inc
insb
fbld
inc
sbb
test
test
xchg
inc
gs
sub
scas
pop
add
aam
cwtl
cmp
push
outsl
pop
lcall
mov
sbbl
js
xchg
outsl
aaa
xor
lcall
data16
ja
sub
cmpsb
dec
sub
jo
les
sbb
inc
pop
fst
inc
or
pop
mov
rorl
pushf
les
xchg
pop
and
pop
add
push
mov
mov
mov
stos
lock
push
loop
cltd
lea
push
shrb
pop
lds
mov
mov
enter
mov
insb
lret
aam
push
fwait
push
jp
fs
mov
xor
jnp
stc
pop
jg
dec
pop
lods
lret
std
xchg
jbe
ss
nop
out
stc
mov
push
js
out
mov
xchg
adc
cmp
in
xor
outsl
hlt
mov
xor
mov
or
es
scas
or
ss
or
push
mov
or
lret
jmp
pushf
cltd
frstor
mov
int3
mov
cmpsb
lret
popf
shrl
inc
iret
inc
jns
pop
adc
adc
out
pop
orl
xchg
sahf
mov
sti
xor
data16
jp
and
fidivrs
sub
cltd
xchg
cld
dec
cmc
dec
fstpl
pop
rorb
inc
push
pop
cmp
add
cmp
es
push
hlt
add
negb
sti
addr16
dec
fwait
push
call
push
inc
sbb
test
mov
loopne
or
push
rclb
or
mov
fisttps
insb
popf
mov
fisttps
js
cmpsb
ret
inc
cmp
std
xchg
sub
xchg
lds
inc
add
mov
push
mov
rorb
inc
adc
jp
lret
arpl
fnstsw
imul
add
rcr
cmc
push
mov
es
push
cli
dec
sub
add
shlb
lcall
sarb
xchg
mov
cmpsl
push
std
add
fisttps
pop
mov
rolb
or
loope
sub
dec
shll
shlb
adcb
pop
test
jecxz
lods
insb
movsb
gs
push
adc
dec
xor
mov
lret
push
or
push
and
mov
lea
xchg
inc
cmp
cmc
push
mov
adc
add
jae
or
xabort
xchg
jb
mov
or
mov
dec
imul
test
inc
mov
adc
xchg
loop
mov
xor
mov
jbe
and
fistps
pop
lock
mov
sbb
popf
xchg
mov
adc
insb
dec
repnz
btc
mov
jno
mov
cmpsl
call
mov
jno
stos
cwtl
inc
aam
fs
mov
or
loope
cmp
outsb
pop
nop
idivl
mov
lock
scas
fidivl
rorl
lock
dec
int3
push
mov
xchg
enter
arpl
hlt
lahf
ficoml
pop
cmpl
xchg
je
das
out
mov
and
ss
sti
out
push
mov
jge
cmp
rcll
mov
nop
daa
jl
cmp
inc
insb
psubb
cmpsl
nop
loopne
xchg
test
nop
cld
or
cmpsb
les
repnz
loope
and
or
insl
push
lcall
xchg
icebp
int
mov
lods
cltd
aaa
cmpsl
add
int3
fxch
in
jge
fidivl
or
xor
clc
les
test
pop
mov
inc
fldt
pop
push
test
cmp
das
mov
cli
jae
mov
dec
xchg
sub
out
hlt
mov
mov
aad
xchg
inc
int3
or
sahf
sub
push
lcall
testl
push
repz
aad
xor
stos
lds
out
adc
repz
out
arpl
xchg
test
cmp
jns
inc
repz
cmp
mov
cmp
out
js
lahf
mov
ret
lret
sbb
movsb
add
jmp
or
sahf
xchg
jns
pop
cmp
or
imul
ret
aaa
popf
cli
sub
iret
pop
and
repnz
je
test
and
inc
fimull
scas
mov
push
adc
sti
sti
push
out
pop
daa
aam
ror
fdivrs
adcl
pusha
outsl
sbb
mov
fldcw
push
imul
add
dec
insl
cwtl
fwait
shrb
jp
data16
loopne
test
roll
jmp
pop
cwtd
adc
or
mov
roll
jg
mov
ficoml
aaa
and
pop
mov
mov
and
pop
loop
or
cmc
and
pop
fdivrs
push
mov
or
movsb
and
test
loop
xchg
dec
incb
sub
js
es
inc
and
out
push
or
inc
repz
push
sub
fcmove
push
mov
push
jne
adc
testl
mov
or
dec
repnz
fimuls
xchg
lock
adc
shlb
popf
fnstenv
inc
imul
mov
incl
leave
pop
sar
jmp
jnp
jp
dec
out
repz
ret
addr16
push
adc
fdivr
push
hlt
imul
adc
call
push
jbe
and
dec
daa
in
les
xor
inc
mov
adc
in
stos
clc
dec
pop
mov
xchg
in
out
add
ficompl
pop
pop
mov
cld
and
ss
loop
jb
mov
dec
scas
shrb
mov
sub
je
add
fisubs
pop
cmp
in
mov
clc
insl
fcomps
gs
inc
sbb
mov
call
fucom
outsb
ss
xchg
adc
cs
lods
dec
faddp
mov
pop
repz
idiv
adc
xlat
push
jge
leave
inc
outsl
push
cltd
out
jnp
mov
mov
lds
dec
mov
fdivr
xlat
aad
push
test
stos
int
data16
pop
xor
movl
dec
pop
pop
jae
lods
push
scas
or
mov
jle
jp
sbb
xchg
lret
sub
repnz
pushf
cld
push
stc
les
and
jmp
pushf
inc
or
jns
outsb
adc
jns
dec
mov
mov
fstpt
mov
push
stos
cltd
xchg
in
pop
in
push
insb
loope
mov
mov
in
xor
mov
sbb
lcall
popf
or
inc
jp
pop
movl
push
out
cmp
xchg
push
sub
mov
lock
lds
pop
icebp
sbb
or
cmp
cmp
cltd
mov
ja
cmp
daa
data16
inc
jp
aas
mov
ja
in
mov
aaa
clc
js
lcall
xor
and
out
xor
jl
loope
icebp
jne
xchg
inc
and
adc
fcmovbe
dec
pop
xor
dec
adc
mov
jno
jb
shrl
sbb
push
arpl
cwtl
fimull
aaa
pop
add
xor
jo
pop
out
mov
cmp
push
and
loope
inc
cmp
sar
sbb
mov
pop
cltd
cmp
mov
jnp
int3
lahf
mov
add
cmpsl
fildll
fisttpl
xchg
popf
sbb
ret
jge
dec
je
pusha
pop
jb
lock
add
mov
jg
mov
add
pop
add
int3
jecxz
out
push
or
jo
cmpsl
rcl
add
adc
sarl
aas
cltd
std
fs
scas
dec
imul
jb
lret
mov
pop
or
xchg
mov
loopne
or
push
inc
int3
pop
and
stc
or
in
shrb
data16
dec
dec
sbb
jns
inc
xchg
enter
nop
fistpl
inc
inc
push
aas
push
xchg
es
sbb
cmc
faddl
dec
fcmovb
sbb
je
adc
shrl
fidivrs
popa
lret
addr16
movsb
fldt
push
push
mov
scas
pop
bound
cmp
in
fwait
loop
lods
mov
mov
push
das
mov
addb
mov
out
shlb
or
cld
in
paddsb
pop
jg
js
cmpsb
je
fwait
mov
leave
sbb
mov
mov
shrl
mov
shll
iret
mov
je
jle
and
ljmp
push
ss
xor
sbb
dec
xor
es
icebp
in
cmpsb
add
loopne
aaa
loop
lods
pop
xor
mov
rcrl
dec
pop
cmp
mov
subl
int3
jl
sbb
lds
pmaxub
test
mov
stc
idiv
test
pusha
jg
test
sbb
pop
mov
loop
xlat
mov
lock
inc
mov
mov
mov
adc
xlat
imul
xor
aad
mov
or
adc
fistpll
xchg
setne
xchg
andb
fsubrl
push
xor
xor
dec
nop
mov
xor
dec
pop
mov
push
mov
jge
aas
fcompl
xchg
int3
mov
xor
pop
shl
adc
imul
stc
outsb
inc
pop
pop
adc
and
jb
ret
jmp
xchg
mov
xchg
lods
imul
stc
stos
dec
or
add
mov
jb
jb
pusha
mov
mov
push
add
lock
sub
push
mov
mov
jecxz
mov
aas
js
fisttpll
leave
add
push
inc
xor
xchg
dec
inc
ds
dec
adc
mov
xchg
add
sbb
js
fsubl
mov
out
jp
xchg
push
js
gs
in
aad
mov
dec
and
xor
in
mov
scas
push
inc
mov
jp
pop
lahf
aam
and
ror
and
int3
pop
and
mov
fildll
mov
sbb
add
cmp
push
je
insl
push
rclb
rorl
mulb
addb
sub
xchg
jge
repnz
xor
cmc
arpl
mov
mov
inc
mov
lds
push
dec
mov
sbb
loope
inc
dec
or
cmp
jmp
out
pop
xchg
dec
loop
inc
mov
jle
pushf
pop
pop
and
sbb
push
jmp
and
jmp
push
jno
and
sbbl
clc
add
dec
push
push
pop
rclb
sbb
cs
or
ss
hlt
jmp
int
mov
cmovnp
cmp
lret
test
sbb
sbb
jmp
mov
dec
int
icebp
dec
lods
lods
test
mov
mov
add
popa
popf
repz
mov
jg
push
scas
and
mov
cmp
cli
mov
adc
aam
xor
fsubr
or
and
mov
stc
lret
pop
jecxz
and
adc
sahf
into
xchg
popa
orb
arpl
sub
push
adc
call
mov
lea
push
lea
rorb
push
or
idivl
test
out
test
jmp
pop
data16
call
mov
mov
add
addr16
mov
push
push
dec
xlat
jmp
adc
aad
mov
rorb
mov
pop
lds
mov
jle
jp
xchg
fstpt
mov
add
xchg
fcos
iret
fisttpl
add
leave
pushf
and
fldenv
push
ror
dec
out
negl
imul
adcl
stc
jae
lods
and
mov
cmc
aad
aad
inc
shll
xor
sbb
mov
dec
adc
cli
frstor
fildl
mov
mov
add
and
dec
sbb
push
cwtl
sub
rorl
adcl
mov
sub
ljmp
xor
test
or
add
je
or
out
stos
adc
stos
enter
test
jb
stos
adc
adcl
inc
lahf
loopne
shlb
cmp
stc
jp
and
mov
fmull
jmp
push
arpl
movb
pop
fbld
push
ja
loopne
xor
or
fistpll
and
mov
dec
lds
xchg
mov
adc
test
loope
aas
sbbb
sub
push
outsb
push
sbb
adcl
clc
shr
sbb
sahf
jns
cwtl
cmp
xor
mov
jp
shrb
es
sbbl
ficoms
mov
dec
mov
sbb
push
cmp
mov
cli
xchg
dec
loopne,pn
rcr
lods
arpl
lock
cmp
lds
fistl
adc
test
fwait
pop
aas
clc
and
pushf
inc
inc
jo
aam
imul
stos
insl
stos
mov
out
push
fadds
std
sbb
lret
pop
sarb
dec
dec
dec
bound
mov
pop
lcall
push
or
out
inc
add
adc
inc
lds
push
gs
in
push
sbb
mov
push
push
out
and
daa
cmc
jnp
and
test
loop
xchg
pop
loop
and
insl
scas
int
pop
int3
dec
cltd
mov
std
xorl
dec
sbb
add
popw
lods
mov
pushf
xor
jcxz
adc
dec
movsb
fldl
loope
testb
stos
inc
lods
lea
sbb
xchg
mov
xchg
arpl
in
push
in
mov
mov
sub
rcll
jb
sub
push
movsb
sub
mov
push
sarl
xor
jnp
cmp
subl
adc
mov
mov
addr16
leave
lods
aas
fiaddl
xor
arpl
sarb
sub
mov
loope
lahf
popf
fisttpll
cmp
inc
mov
pop
mov
jl
and
xchg
adc
push
fistpll
int
jbe
lock
mov
adc
push
test
outsb
clc
test
daa
mov
push
ja
sahf
in
mov
mov
push
jo
mov
fsubl
add
mov
push
add
push
pop
mov
and
jg
and
or
cmc
lea
mov
push
sahf
imul
fildll
dec
jo
movsb
and
or
jns
std
inc
push
xor
adcb
push
xchg
push
loopne
jge
jp
add
shrb
jnp
sbb
or
mov
xlat
adc
dec
out
adc
mov
ror
sbb
outsl
lcall
lahf
lret
rorl
mov
movsl
jbe
add
daa
pop
jp
xor
adc
or
in
movsl
arpl
cmp
dec
negl
sbb
push
int3
std
outsb
jge
push
icebp
mov
xchg
out
jo
sub
scas
add
push
clc
rclb
mov
lcall
repz
and
aaa
pop
lahf
call
xchg
jnp
sub
add
xor
inc
mov
mov
push
cli
xchg
jo
fsubrs
mov
xchg
gs
and
ret
jmp
aas
movsb
in
test
push
add
and
loopne,pt
cwtl
dec
psubsw
int3
test
mov
das
push
mov
push
inc
icebp
out
dec
cmpsb
or
out
push
inc
or
clc
adc
int
or
call
cmp
int
xchg
pusha
adc
inc
sbb
out
sbb
sub
pop
mov
in
push
jp
movsl
lahf
dec
adc
cli
and
inc
movsl
lret
inc
dec
adc
leave
fsubrl
mov
divb
les
push
loop
leave
or
xchg
repz
mov
nop
mov
push
pop
mov
pushl
stos
out
out
movd
xchg
stos
outsl
pop
push
dec
dec
outsb
mov
mov
adc
lret
pop
sarl
imul
std
imul
orb
ja
add
mov
push
mov
adc
and
inc
mov
mov
adcl
dec
or
pushf
fistpl
out
fldenv
xchg
sbb
and
imul
mov
idivl
fdivp
mov
insl
out
sub
bound
imul
mov
out
hlt
jbe
sahf
aas
in
pop
jg
cs
push
mov
int3
sbb
in
push
mov
fmull
inc
sahf
iret
cltd
sub
sahf
adc
icebp
negl
pusha
loopne
int3
rcll
repnz
sbb
popf
adcl
pop
pop
and
xor
push
scas
or
lret
dec
addr16
repz
sbb
cltd
pop
mov
iret
xchg
fdivs
sub
pusha
int3
xor
jnp
push
lods
loope
enter
and
jns
jns
mov
lret
imul
leave
push
stos
stos
sub
jp
pop
int3
fildl
lds
aaa
fstpt
mov
fidivl
or
repz
or
clc
lahf
ljmp
push
inc
push
and
leave
test
aas
or
mov
loope
scas
ss
inc
cltd
add
js
cmp
mov
aam
aam
push
ret
pop
xchg
push
push
jecxz
mov
adc
daa
rorb
jge
xchg
int
mov
scas
pusha
dec
push
mov
mov
enter
pop
icebp
mov
push
xchg
adc
aam
scas
iret
xor
or
jnp
jl
adc
xchg
outsl
fcoml
iret
test
pop
push
lods
xchg
fcompl
les
pushf
cs
pushf
popf
mov
inc
xchg
testb
jns
shl
push
loopne
out
les
xchg
inc
cmpsl
scas
inc
dec
sbb
push
icebp
pop
xlat
mov
mov
clc
andb
hlt
mov
dec
dec
imul
mov
jl
dec
lcall
sbb
cmc
repz
jns
mov
adc
leave
cs
add
subb
mov
push
leave
fwait
cs
lds
dec
insl
cmpb
hlt
fsubrs
pop
imul
popf
jb
pop
pop
pop
fisubrs
jmp
sub
xchg
enter
jle
daa
bswap
push
pop
mov
scas
shrb
xchg
push
cltd
rclb
or
aam
dec
jbe
stos
call
jp
cmp
call
sahf
out
aad
mov
mov
lret
fstps
adc
dec
fistpl
stos
cmp
enter
lea
test
imul
mov
xchg
test
mov
mov
xor
push
int3
ljmp
sbb
sti
arpl
mov
pop
inc
adc
add
out
sbb
mov
pop
dec
in
ja
pop
test
or
sub
sbb
xorl
push
mov
fldl
aam
pusha
sub
dec
push
cmp
popa
pop
sbb
nop
push
ret
arpl
push
adc
mov
push
pop
mov
adc
inc
lcall
es
sbb
and
ret
rcrb
cmc
shrl
int3
mov
call
mov
add
push
outsl
xchg
gs
adc
fnstcw
ret
or
pusha
dec
out
mov
sahf
repz
test
jae
into
aaa
dec
test
repnz
pminub
aad
jb
lods
pop
fldl
jecxz
insl
push
arpl
data16
sub
mov
das
and
je
aas
add
lcall
cmc
mov
out
pop
inc
and
stos
add
sub
cmpsb
mov
xchg
test
push
pop
jle
cmovae
hlt
ds
and
pop
jp
das
xchg
jmp
sbb
adcl
mov
leave
jno
pusha
es
push
xor
adc
pop
and
sbbl
int
jnp
mov
dec
scas
and
rorl
and
sub
out
neg
and
sub
repz
lcall
mov
xor
out
call
cltd
cltd
out
xor
mov
nop
lcall
aam
pop
and
cld
add
sbb
leave
mov
inc
out
mov
and
pop
pushf
jbe
pusha
sub
bound
cli
std
js
test
xchg
xchg
into
pop
mov
mov
jne
xlat
scas
xor
pop
mov
inc
sub
stc
dec
xchg
fisttpll
mov
fcom
shlb
pop
dec
push
dec
inc
jns
xor
pop
leave
cmp
lcall
and
jp
subl
mov
push
mov
jo
jg
filds
loop
fmuls
ds
push
out
test
mov
out
sahf
sub
arpl
mov
push
dec
lock
fstl
xchg
and
push
test
fidivs
sbb
stos
or
adc
push
xchg
addr16
xchg
dec
pop
iret
push
mov
in
roll
mov
dec
fmul
sub
inc
loopne
inc
jne
inc
dec
mov
push
mov
ljmp
lcall
repnz
out
lds
fistpll
mov
das
clc
ror
pop
xchg
inc
sbbl
hlt
or
mov
pop
fstl
or
or
ss
pop
outsl
mov
daa
mov
mov
mov
fsubs
sbb
sar
je
mov
mov
push
jns
sub
icebp
test
cld
cmp
negl
insb
in
adc
dec
inc
pop
cmpsl
xor
pop
outsl
out
add
je
out
mov
dec
scas
mov
pushl
daa
js
cmp
dec
orb
insb
dec
pop
sub
ss
ja
dec
fistl
sub
inc
sti
xchg
add
mov
out
lcall
mov
int
sub
xchg
mov
push
addb
adc
jmp
dec
push
movb
xchg
gs
cmc
iret
sbb
mov
push
icebp
int
cmp
xchg
test
into
push
lods
mov
and
inc
or
push
push
mov
and
cmp
dec
rcll
mov
bound
jns
sbb
jg
cmp
sbbl
pop
add
bnd
ds
pop
insl
jmp
adc
ljmp
fisubl
aam
repnz
in
sbb
push
jbe
nop
add
inc
call
sub
mov
mov
mov
ret
push
add
addr16
pusha
sbb
sub
xchg
cmp
scas
jg
jae
loopne
insb
jae
push
sub
int
xlat
inc
ret
push
mov
sbb
clc
pop
in
adc
cmpsb
test
pop
cmp
xchg
jg
pop
sub
pop
out
or
rcrl
jle
insl
or
mov
arpl
popf
enter
cmp
movsl
push
mov
movsb
divb
mov
and
sbb
and
iret
std
cli
bt
inc
stos
rorb
outsb
fbstp
pop
popf
and
mov
sbb
jbe
fistl
push
push
es
pop
mov
xor
pop
popa
loope
pop
sti
add
movsb
cmpsl
flds
push
add
add
or
rolb
lea
mov
cmp
sbb
int3
nop
pop
sbb
scas
ret
cmp
loope
rcr
sar
pop
test
xchg
gs
cmp
pop
lahf
lds
push
ret
movsb
xor
pop
mov
addl
gs
ret
pop
adc
in
roll
pop
inc
pushf
mov
pushf
addb
cltd
scas
push
mov
and
xor
sbb
fisubrs
xchg
push
sbb
in
arpl
sbb
fsub
inc
adc
or
lds
push
jne
jnp
xchg
xor
sub
dec
repnz
std
nop
jbe
pop
je
xchg
int
mov
ds
inc
mov
iret
cmc
or
cltd
insb
pop
mov
xchg
mov
inc
inc
sbb
mov
movntq
out
adc
inc
icebp
rorb
mov
xchg
or
sbb
aam
pushf
loopne
mov
int3
pop
xchg
mov
shrl
outsb
mov
adc
sti
xchg
pusha
jge
mov
pop
pop
inc
shrb
push
jns
test
sti
xlat
mov
int3
push
fstpt
stos
aad
lret
in
mov
scas
sbb
mov
and
cmc
dec
add
cwtl
lods
sub
into
sbb
jno
add
dec
xchg
int
inc
iret
fs
and
dec
add
arpl
out
or
jb
in
inc
jns
lret
and
ljmp
or
cli
lock
jb
lahf
daa
adc
ljmp
push
push
in
loope
adc
push
rclb
cmp
imul
stos
jl
and
dec
xchg
dec
jmp
cwtl
shrd
sahf
mov
xor
mov
adc
cmpsl
pop
or
rcrl
aam
pop
jecxz
add
daa
andl
bsf
pop
push
shlb
xchg
jl
jno
ret
mov
ret
dec
mov
mov
lods
shrb
cmp
and
fidivs
lahf
fimull
mov
movsl
push
mov
pop
or
cld
dec
add
sbb
pop
xchg
fstp
xor
scas
gs
inc
movsl
mov
pop
rcll
xor
add
mov
scas
cmc
jo
in
iret
mov
add
push
data16
sub
jno
lcall
adc
sbb
push
outsb
ss
xor
stos
pop
loop
jno
mov
ret
cld
pop
dec
in
mov
imul
mov
xlat
mov
testb
gs
push
and
cmc
jno
loop
adc
std
mov
jne
test
fwait
les
icebp
xchg
and
roll
cltd
cmp
fnstsw
mov
push
jne
test
lret
sub
xchg
hlt
andl
mov
push
push
and
fbstp
or
std
jns
fsubr
dec
arpl
ret
mov
ljmp
mov
lcall
int
leave
jne
scas
rorl
cmp
or
inc
inc
in
mov
into
popa
cli
fmuls
movsb
imul
lock
ja
push
ljmp
mov
outsl
adc
mov
push
xchg
fisttps
xchg
cmp
gs
lcall
xor
push
shl
inc
imul
inc
pop
sahf
add
pop
mov
imull
mov
xor
pop
aaa
cltd
xchg
push
pop
test
scas
fst
or
or
cltd
cmp
mov
fs
movsb
fwait
ret
int3
stc
subb
sbb
mov
mov
xchg
xchg
popl
std
pop
push
lcall
add
fndisi(8087
stos
adc
mov
stos
pop
iret
mov
jbe
adc
ret
je
fs
sbb
movsl
mov
aam
sbb
push
mov
ljmp
push
stos
ja
mov
sbb
in
filds
fcoms
lock
pop
jo
pop
mov
sub
adc
xlat
and
cltd
jecxz
mov
sbb
mov
lock
inc
mov
scas
sub
dec
iret
inc
jnp
out
test
push
inc
sbb
xchg
scas
adc
jae
push
subb
ret
xor
pop
or
iret
int
lret
aad
jo
imul
orb
xchg
jbe
jbe
in
inc
inc
jbe
mov
dec
icebp
test
pop
xor
jo
movsl
push
pop
mov
mov
xor
or
xchg
jnp
movsb
scas
or
sub
dec
out
mov
mov
aas
sbbb
and
pop
xchg
lods
stos
mov
jge
dec
lods
ljmp
inc
loop
adc
xor
scas
adc
je
int3
push
lock
jno
loop
cmp
mov
pop
cs
mov
cmp
jae
loopne
pop
cltd
cmp
pop
adcb
mov
push
in
popf
in
mov
in
mov
rol
ret
std
inc
movsb
add
sub
icebp
mov
scas
test
cmpb
inc
call
inc
les
adc
es
jp
inc
lds
fcomp
pushf
pop
in
cmpsb
inc
fyl2xp1
push
dec
lods
xor
pop
mov
nop
js
ss
sbbb
push
sbb
pop
adc
dec
cmp
jae
roll
lods
cmpsl
mov
mov
cltd
xor
ret
sub
mov
imul
jne
cli
push
xor
in
pop
sub
aaa
jo
into
lods
adc
fwait
xchg
mov
push
or
xchg
fs
neg
push
mov
cld
mov
sub
test
pop
mov
cs
out
fsubs
aas
jle
les
shlb
lea
inc
stc
cmpsb
xchg
mov
inc
test
push
repnz
mov
aam
mov
sub
push
cmpsl
adcb
mov
fidivs
cmp
jl
sbb
mov
cltd
scas
push
push
loope
jle
scas
addl
roll
aas
cmp
inc
push
mov
loope
je
stos
cmp
sub
outsb
xor
lods
jnp
roll
pop
std
mov
or
push
pop
in
adc
inc
and
fdivrs
push
movsb
cmp
orl
push
or
sub
push
sbb
rcrb
repz
adc
movups
pop
stc
pop
add
mov
mov
mov
fdivrl
mov
add
inc
push
into
cwtl
add
es
into
test
pop
cs
dec
add
arpl
jno
ja
mov
sub
mov
xchg
sbb
pop
dec
les
mov
or
ljmp
aas
inc
xor
out
imul
add
ljmp
xchg
mov
xor
jne
mov
xorl
mov
adc
pop
inc
jmp
mov
xlat
fld
jmp
push
pop
or
cmp
andb
adc
es
adc
loop
mov
ds
xor
mov
pop
and
add
cli
dec
dec
aaa
mov
ljmp
add
cmp
gs
dec
ja
test
xchg
roll
pop
dec
adc
test
in
nop
xchg
stos
xchg
fs
or
dec
in
fnsave
lock
mov
pop
push
lcall
loopne
lock
lret
mov
mov
cltd
xchg
xchg
test
mov
aad
nop
mov
mov
xchg
xchg
push
stos
addr16
xor
mov
shll
subb
sbb
xchg
xchg
shll
or
cmpsl
dec
mov
hlt
stos
shr
lea
add
test
inc
jb
jo
mov
in
mov
cmp
xchg
jle
lahf
in
mov
adc
lds
jmp
je
dec
pop
lahf
cli
iret
mov
jl
add
mov
jns
js
sub
test
fcmovu
fisubl
sbb
lds
arpl
pop
data16
std
jae
xor
mov
imul
jecxz
jmp
sbb
lock
in
push
arpl
pusha
rclb
adc
imul
lret
das
out
add
lock
jecxz
loopne
shll
and
gs
pusha
sarl
xor
sti
bound
or
out
ss
outsl
in
and
mov
bound
cmc
addr16
cli
fistpll
push
fiadds
pushf
gs
loop
mov
mov
dec
pop
fsubs
pop
dec
pop
or
arpl
ficoml
xchg
cmp
and
outsb
pop
popa
adc
cli
fistpl
aaa
adc
cmpl
adc
in
test
adc
shlb
dec
sbb
cmp
add
or
lock
in
push
std
outsb
push
push
dec
sbb
sbb
popf
fsubrs
dec
or
cmpsb
inc
or
mov
jbe
sub
add
lcall
or
cmp
dec
cli
inc
subb
dec
mov
popa
gs
mov
mov
mov
jne
insl
dec
popf
lahf
push
negb
add
lods
cmp
arpl
mov
mov
lock
ljmp
mov
fadd
xchg
ds
adc
mov
ja
add
cmp
mov
and
lods
sub
inc
xchg
adc
ljmp
xchg
jle
imul
mov
mov
scas
inc
dec
adc
adc
ja
sbb
mov
in
lock
add
cvtsd2si
movsl
cmpsb
xlat
mov
test
add
loope
mov
push
fs
mov
and
ljmp
fs
shl
xchg
fld
clc
pushf
lret
adc
push
repnz
or
or
test
addr16
repz
add
dec
lret
hlt
loope
popf
clc
mov
addr16
rolb
push
add
fdivrs
xor
std
push
gs
lret
cmpsb
sarb
cmpsb
div
repnz
nop
cmp
inc
xlat
je
cmp
cmpb
sub
faddl
idivb
dec
roll
adcl
xchg
aas
adc
sub
mov
mov
in
addl
enter
in
adc
push
nop
dec
jg
lahf
repnz
outsb
stc
jmp
and
or
shll
clc
popa
popa
push
cmp
fists
fucomp
inc
scas
lods
call
imul
and
cwtl
pusha
test
mov
xor
mov
or
mov
dec
xorl
inc
xor
je
or
mov
loopne
pop
call
out
fcompl
fisubl
push
loopne
pusha
dec
je
add
and
cmpsl
mov
cmp
jecxz
outsb
mov
pop
pop
xchg
jo
xchg
psubw
adc
inc
pop
add
repnz
ljmp
or
or
xlat
aam
rorl
pop
inc
sbb
add
test
mov
add
jl
into
mov
push
je
push
pusha
push
sbb
nop
xrelease
jmp
add
cmp
fs
mov
lahf
jae
sub
imul
sbb
sbb
adc
loopne
xchg
repnz
stc
out
xor
jbe
addl
sbb
dec
or
sbb
dec
xchg
mov
push
lods
pop
push
int3
mov
inc
sub
dec
and
and
popa
into
push
add
test
into
lea
or
and
in
or
sbb
cmc
fsubs
push
pop
mov
addr16
sbb
shl
cmp
faddp
adc
roll
sub
add
mov
aad
std
in
sbbl
dec
lods
add
pop
outsb
inc
insl
std
ss
sbb
or
sub
popa
fmulp
push
in
add
test
je
mov
call
sub
or
imul
fmul
sbb
ret
push
leave
mov
ret
cwtl
cltd
gs
inc
adcl
sbb
cld
andl
addr16
or
jo
or
icebp
add
push
ljmp
dec
dec
push
or
jae
ret
or
jmp
sub
loope
fidivrl
pop
daa
and
sub
cli
or
rol
sbb
jnp
das
sub
jne
push
sbb
adcb
cwtl
out
mov
stos
push
lock
fisubl
inc
mov
divb
adc
pop
movsl
mov
enter
stc
test
pop
addr16
jl
mull
cmp
jnp
call
sbb
in
scas
aaa
and
and
rcrl
sahf
inc
ret
xchg
inc
pop
mov
xor
loop
cmp
inc
rorb
add
sub
cmpsl
push
mov
lods
pusha
sbb
in
inc
jecxz
jno
sub
out
loope
or
pop
imul
dec
jecxz
fmuls
add
or
test
add
jno
fstpl
dec
inc
jae
outsl
jno
and
lock
stc
xchg
call
test
jbe
outsb
or
jge
stos
or
mov
arpl
xor
je
xchg
fwait
and
pop
rcrl
xchg
pop
mov
xchg
mov
cli
rcrb
mov
or
movd
insl
repnz
mov
push
out
dec
sbb
ds
push
and
dec
sub
sub
hlt
push
jge
inc
notl
jp
inc
mov
ficoml
push
add
pop
mov
loop
pop
sahf
jno
fstpl
and
mov
xchg
add
subb
sbb
inc
dec
jg
cmpsl
jmp
je
jp
sbb
mov
js
inc
pop
aaa
pushf
in
loopne
jnp
push
sub
mov
push
and
cli
xchg
adcb
add
inc
add
loop
lods
in
xchg
push
mov
shlb
std
daa
rorl
fisubrs
cltd
mov
or
mov
loopne
dec
test
ja
ss
in
push
mov
jmp
sbb
js
inc
sbb
sahf
cmp
cs
mov
add
ret
push
rolb
cmc
fs
stos
mov
cmp
movsb
cmp
cmc
jo
mov
push
jl
aas
inc
out
jmp
loope
jbe
jle
cmp
aas
xor
or
nopl
cli
dec
sbb
clc
stc
outsb
outsb
jecxz
in
loopne
push
orl
cmp
int3
inc
or
mov
sbb
hlt
loope
jns
mov
fcmovbe
mov
sbb
push
clc
adc
jmp
add
stos
out
gs
sbb
jb
push
mov
cltd
icebp
fmuls
jecxz
in
ret
test
pop
mov
sub
adc
out
jae
push
fnstenv
jno
push
int3
jae
add
sahf
pmaxub
dec
pusha
loopne
imul
ret
push
xchg
daa
add
adc
shll
pop
jo
mov
or
fnstcw
iret
pop
lods
cmp
add
pushf
dec
lods
xchg
jns
push
les
in
push
les
lea
dec
ljmp
push
negb
in
into
xchg
test
movsl
les
xchg
jnp
stos
sub
cltd
jecxz
mov
fwait
inc
sub
lcall
cmp
jecxz
xchg
cmp
iret
adc
call
fisttpll
shll
push
rorl
fs
test
cs
adc
push
arpl
fisttpl
outsl
sbb
xrelease
add
movsb
mov
jl
dec
in
mov
cltd
pop
pop
loop
lods
mov
iret
mov
iret
mov
mov
scas
jmp
jecxz
cwtl
xchg
sbb
xchg
pop
imul
push
call
ret
je
xor
mov
loope
popf
adc
shl
gs
cmp
push
mov
pop
cltd
cmpsl
lcall
sbb
dec
stc
insl
xor
into
pusha
lock
fwait
mov
sbb
test
pop
dec
test
ljmp
loope
fsubrl
sbb
add
push
add
inc
stos
jb
sbb
movsb
sbb
dec
dec
fs
mov
andl
sbb
jmp
sbb
jge
mov
inc
add
push
int
add
imul
dec
insb
fbld
pop
repz
fdivs
insl
inc
ret
fwait
mov
xor
mov
push
cli
jb
andl
ret
cmp
xor
adc
out
mov
push
xorl
jns
push
neg
dec
testl
jecxz
inc
lret
in
iret
in
cmp
ljmp
scas
xchg
rcll
rcll
lock
sbb
cmc
jg
add
je
sub
pop
insb
repnz
in
adcb
call
gs
sbb
xchg
in
sbb
sub
outsl
subl
loopne
mov
push
movsb
pop
jbe
mov
jns
dec
loope
stc
std
clc
pop
mov
pop
jp
fimull
jp
cld
aam
cmp
inc
sub
push
push
mov
jecxz
mov
jo
jbe
movsl
xchg
pusha
xor
xlat
xor
fbld
and
dec
in
arpl
into
jo
and
enter
outsl
cs
xor
in
imul
leave
push
xchg
lret
cmpsl
stc
data16
add
cmp
mov
push
xor
xchg
mov
mov
iret
mov
cmp
mov
dec
sarb
cmp
cmc
mov
cmp
lcall
cmpsb
loop
push
repz
nop
jo
dec
mov
add
cmp
rclb
pop
and
int
and
popf
and
cltd
aam
jae
movnti
jg
fstl
cmc
movsl
dec
and
ja
mov
push
mov
test
push
and
gs
mov
jle
ds
push
inc
shll
lret
hlt
push
stos
imul
xchg
adc
and
jnp
mov
add
or
or
push
sbb
in
dec
lock
pop
mov
scas
push
daa
shrb
push
sub
lret
add
push
sbb
dec
cwtl
nopl
xchg
rcll
dec
xchg
lret
xchg
rorl
ljmp
loopne
pop
jmp
dec
int
sub
out
pop
shrl
push
dec
nop
pop
sub
repnz
mov
adc
mov
insl
xor
adc
or
sbb
dec
jno
xor
lret
fs
xchg
pop
and
add
xor
cld
adc
push
pop
xchg
nop
es
scas
nop
dec
xor
jne
jbe
fsub
jmp
cltd
lods
stc
and
les
push
in
cmp
and
mov
fwait
cwtl
outsb
pop
inc
test
cli
mov
enter
dec
xchg
sub
loope
adc
lods
push
jl
cmpl
aam
and
mov
cmc
testl
mov
movl
into
sub
shl
lcall
fisttpll
repnz
mov
fdiv
test
dec
out
hlt
cs
adc
mov
mov
in
cmp
repnz
pop
fbstp
dec
cmp
sbb
fcoms
xlat
notl
jle
imul
mov
jge
movsb
mov
sbb
test
pushf
xchg
mov
notl
test
lcall
movsb
repz
add
shrl
jae
dec
jmp
xchg
inc
xchg
test
scas
add
mov
int3
xchg
out
addl
leave
adc
leave
mov
jbe
fisubs
xchg
stos
and
jp
aam
cmp
js
fs
push
shr
adc
sbb
rol
into
inc
cmp
jno
mov
mov
pmulhuw
cmp
lahf
pop
scas
cmpb
xchg
minps
popf
xchg
test
test
mov
enter
pushf
sbb
shll
ffree
push
sbb
das
sarb
scas
mov
rcr
sbb
rcrl
fisubrl
es
pop
mov
sub
test
mov
pop
adc
inc
jg
xor
mov
ret
aam
pop
orl
jno
mov
or
mov
jle
ret
loopne
cmp
add
int3
sbb
mov
or
mov
test
fwait
in
jmp
loop
sub
push
inc
das
mov
sarb
and
in
sarb
sbbl
mov
and
and
and
mov
sbb
lcall
pop
inc
pop
iret
test
pop
lods
call
inc
push
rcll
xor
inc
mov
push
mov
xchg
inc
ret
scas
js
rorl
jecxz
push
outsl
lahf
aaa
mov
xchg
jge
nop
pop
or
add
out
ds
cmp
and
repz
jecxz
xor
adc
xchg
xorb
jp
ljmp
imul
pop
aaa
lcall
jl
out
adc
incl
pop
xor
pusha
jecxz
sbb
add
popf
xor
outsb
mov
fsubrl
inc
cmovg
call
enter
fisubrl
jge
mov
pushf
cmpsb
icebp
cmpl
fistl
in
repnz
repz
in
jnp
outsl
orb
mov
xor
mov
and
inc
jns
xchg
jge
cmp
dec
std
jp
push
mov
gs
mov
loope
int
jmp
std
ror
sub
inc
sarb
jae
pop
ds
xor
outsb
daa
add
jne
jbe
mov
rcrl
int3
jnp
push
mov
inc
roll
mov
cld
aaa
mov
call
cmp
mov
sbb
fs
xchg
lods
lods
xor
sub
lahf
adc
sti
pop
push
mov
mov
jo
xlat
pop
jbe
hlt
ret
lods
inc
fwait
add
inc
out
xchg
repz
pop
out
test
lahf
aam
mov
push
ss
jg
into
adc
cmp
pusha
js
jns
mov
gs
jg
in
outsb
std
das
imul
push
ret
aam
test
mov
jo
icebp
in
out
inc
stos
adc
ds
adc
xor
fstp
test
shrl
xorl
cmpsl
jne
stos
pop
jle
xchg
ret
lea
int
aad
adc
and
inc
jo
shrl
push
bnd
mov
hlt
out
scas
mov
arpl
mov
out
shrl
cmp
or
pusha
xor
sahf
xchg
adc
xchg
andb
rcr
push
mov
fidivs
pop
add
shll
les
stc
cwtl
xor
mov
movsl
incb
jbe
adc
loop
or
dec
je
int
add
mov
jp
or
add
push
add
push
xor
aam
ljmp
aas
cmp
mov
dec
adc
sbb
pop
fistpl
and
test
xor
lock
gs
test
ficomps
das
int
mov
jae
cld
fdivl
sti
cmc
pop
mov
pop
adc
gs
push
adc
mov
xlat
test
mov
out
push
aaa
loopne
lcall
outsb
jae
ret
je
repnz
xor
fadd
jno
or
sub
cmc
clc
sbb
pushf
jnp
mov
and
fs
movsb
push
psubw
lcall
mov
rcl
iret
mov
les
add
sbb
xorl
push
sub
or
mov
popa
xchg
and
gs
iret
test
stos
mov
daa
out
xchg
sbb
leave
lahf
addb
jno
int
lahf
pop
cmp
repz
xchg
arpl
jne
add
rcpps
shlb
mov
out
mov
lock
pop
ret
fistps
fsubrp
popa
out
push
cmpsl
sbb
aam
bnd
inc
aas
mov
mov
push
sub
sub
push
cmpsl
mov
negl
repnz
scas
and
in
jle
aam
and
dec
ret
pop
dec
js
fimull
dec
jg
ss
int
es
insl
mov
jg
clc
add
stos
push
sbb
sbbl
jnp
xor
add
stc
daa
lahf
test
or
into
mov
xor
loopne
adc
insl
sbb
jae
and
adc
sub
xor
notb
cli
je
mov
cmp
dec
loop
movsb
push
add
mov
mov
pop
les
inc
cmpsb
mov
mov
movsl
xor
inc
cmp
cmp
pop
mov
fabs
das
mov
scas
sbb
inc
loop
lds
call
cmp
nop
adc
fcoml
push
mov
xchg
sbb
push
adc
inc
and
pop
mov
inc
sub
mov
xchg
sub
movsl
mov
popa
ret
xchg
call
and
or
push
adc
in
mov
imul
cmpsb
fldcw
xor
ja
cmp
cwtl
jns
repz
out
enter
inc
notl
ret
add
add
outsl
adc
sub
jns
mov
xchg
mov
lret
fildl
loop
xchg
test
add
and
inc
mov
xchg
add
pop
xor
adc
lods
aas
mov
push
popa
dec
adc
push
dec
and
fiaddl
pop
pop
or
js
in
jnp
pop
jle
xor
pop
stc
lock
xchg
or
adc
mov
adc
imul
pop
xchg
popf
jno
adc
mov
pop
cmp
stos
add
or
mov
imul
fbld
sub
test
jne
ljmp
aad
mov
jmp
push
dec
xor
gs
dec
mov
lcall
ret
sbb
jg
es
inc
cld
xor
or
push
shr
fmull
cmc
add
fstl
sbb
cmp
inc
mov
lds
pushf
imul
cmp
shrb
pushf
push
loopne
mov
mov
mov
inc
add
cmp
inc
sub
xor
cmpsl
fs
dec
add
and
mov
sub
int
mov
mov
bound
pushf
pop
dec
push
inc
inc
xchg
add
inc
push
push
lds
ret
mov
out
mov
xchg
push
sahf
rcrl
inc
mov
pop
inc
pop
jge
test
xorb
shlb
mul
and
jle
sbb
mov
push
test
xor
cltd
arpl
cltd
push
ret
int
dec
mov
sbb
push
movsl
or
out
mov
test
push
jle
insb
mov
and
cmpsb
pop
sub
aad
negl
lcall
into
or
pop
jb
insl
sub
shrb
fiadds
jb
xchg
xlat
movsb
mov
xor
jnp
rcrl
lods
fcomi
roll
movsl
shl
imul
jnp
aaa
pusha
and
sub
dec
mov
xchg
inc
pop
rcrb
into
decl
outsb
pushf
and
jp
loopne
xchg
movsl
out
pop
insl
jecxz
xchg
adc
and
lcall
jecxz
jo
cld
mov
ficompl
pop
dec
mov
push
cmpsb
ret
dec
ret
sub
pusha
mov
and
movsl
stos
sbb
test
xchg
mov
xchg
mov
sub
out
iret
xchg
es
add
repnz
xchg
aad
out
push
inc
adc
notb
xchg
inc
xor
add
sbb
movsl
out
aad
lock
rol
sbb
jmp
jecxz
mov
lods
test
cmpsl
loope
xor
pop
or
adc
movsl
mov
or
pop
loop
jmp
addr16
push
dec
rorb
mov
lods
movsl
dec
rorb
aaa
xchg
push
mov
test
jmp
clc
bnd
sbb
dec
icebp
adc
and
in
das
xchg
hlt
ljmp
movb
insl
pop
loop
movsb
mov
outsl
ret
call
pmaxub
repnz
and
shlb
pop
cmp
movsl
stos
fnsave
fcmovu
loopne
stc
faddp
sahf
jbe
mov
sahf
fwait
xchg
or
add
out
lahf
push
mov
or
test
data16
test
cltd
popl
xor
push
mov
scas
outsb
lcall
push
mov
mov
push
popa
es
push
int
mov
arpl
test
xor
pop
sbb
xor
add
cmp
scas
pop
jbe
jle
cmp
inc
sub
xchg
test
fistps
push
pop
into
adc
ljmp
out
int
add
int3
out
pop
popf
mov
jo
call
or
je
sub
dec
add
dec
mov
mov
bound
push
add
cmp
inc
popl
push
fucomp
jnp
repnz
push
ja
orb
mov
movsb
test
inc
es
sub
leave
cs
cmc
xor
mov
lret
sbb
sahf
cmpb
sub
testb
add
ret
xchg
push
scas
cmp
mov
mov
mov
mov
or
mov
aas
mov
cli
mov
pusha
mov
mov
cmp
push
mov
scas
ss
push
lcall
cmpsl
int3
cmp
lea
add
test
push
sub
mov
inc
jmp
jb
in
jns
repz
dec
out
imull
cmp
and
mov
ret
dec
jno
push
lret
aam
dec
dec
lcall
jl
pop
fstl
mov
popf
std
or
arpl
xor
cmpsl
fnstenv
repz
xor
dec
add
pop
rcll
xchg
dec
sub
fwait
sbb
ret
ds
das
xlat
sbb
xorb
pop
sbb
insb
and
fwait
jge
xor
push
jne
std
cmp
popf
test
cmpsb
cmp
dec
inc
mov
cmp
fildl
idiv
xlat
pusha
das
outsb
lret
ljmp
pop
out
mov
sbb
sbb
and
sarl
js
and
out
sub
and
mov
dec
test
hlt
or
push
aas
xor
and
pop
sub
mov
push
inc
lods
cltd
imul
dec
and
ss
lods
jl
jmp
xor
mov
outsl
jge
push
mov
leave
fyl2xp1
or
xor
mov
push
mov
jns
xchg
mov
test
icebp
ss
mov
popf
leave
cs
adc
js
mov
dec
mov
mov
addr16
outsb
mov
rclb
mov
test
lcall
cmp
dec
push
or
xor
jecxz
xor
jae
mov
mov
mov
xchg
sbb
dec
in
mov
mov
aam
movsb
das
push
nop
sub
xchg
xor
ds
insl
lea
mov
sbb
add
xchg
addb
push
mov
fisubrs
dec
ja
and
sbb
ss
xor
test
mov
sub
mov
and
int3
pop
adc
in
idivl
fsubs
mov
mov
repz
mov
jmp
adc
scas
mov
and
ljmp
xor
jge
int3
rcl
push
pop
push
push
aas
outsb
jle
repz
sbb
scas
inc
outsb
adc
ficomps
adc
mov
sbb
mov
fiaddl
xor
inc
rorb
stc
addr16
xchg
add
lahf
mov
insl
xor
loop,pn
push
loop
inc
or
mov
test
in
xchg
cmc
int3
sub
aad
leave
jb
xor
shrb
lods
loopne
mov
cwtl
mov
aam
cmp
lret
mov
mov
cmp
xchg
and
ret
xchg
pushf
ret
popa
sub
pop
pop
add
fsubr
jno
test
push
pop
cmpsb
pop
dec
xor
aam
sub
lods
push
xor
adc
dec
cmp
jecxz
dec
jg
sub
lds
jmp
pop
xchg
xor
cmpsl
sbbb
shlb
lods
sbb
loop
lock
push
aad
fcoml
push
fldt
lods
mov
sub
sub
add
int
jb
mov
rolb
xor
and
push
and
std
sbb
out
mov
lds
arpl
pop
sbb
repnz
mov
jmp
out
sub
popf
jmp
aaa
jge
dec
jnp
aam
mov
movsl
insb
jp
subl
out
add
dec
pop
insl
add
push
into
sub
jnp
mov
cmp
pop
andb
xchg
loop
jge
mov
push
popf
mov
popl
add
in
mov
gs
pushf
or
mov
aad
movb
dec
ja
jl
xchg
fcmovne
xchg
push
daa
xchg
adc
adc
xorb
mov
repnz
in
mov
sub
lret
scas
xlat
orb
dec
shll
adc
sub
jns
push
add
cs
ret
xchg
arpl
xchg
sbb
stos
clc
lret
jmp
into
pop
lret
jno
sbb
sub
ja
stos
repnz
test
adcl
pop
mov
cmpsl
pusha
push
xor
icebp
testb
jbe
sbb
test
lock
pop
dec
imul
mov
or
jae
jo
lcall
clc
mov
mov
int
pushf
inc
jno
or
adc
fcompl
movsb
cld
les
push
out
or
mov
mov
mov
test
sbb
movsl
es
jle
cltd
jge
cmp
mov
cmp
xor
or
xor
and
js
sub
iret
xchg
fs
test
test
xchg
mov
cld
fsubrl
push
and
push
ret
or
sub
in
ja
lret
xor
shlb
das
popf
add
push
mov
xchg
insl
and
cmp
ror
pop
fmuls
mov
addr16
idivl
add
imulb
and
pop
dec
in
fwait
mov
adc
data16
push
cs
mov
pop
push
dec
fcmovnb
jl
mov
mov
inc
xchg
or
in
sub
cmpsl
pop
clc
cli
cwtl
lret
leave
sbb
out
inc
pop
jno
scas
std
std
sti
shrb
cmp
sbb
das
and
xchg
rcll
repnz
push
aaa
and
nop
pop
sub
cli
dec
jno
pop
test
jecxz
jg
mov
stos
push
int
addr16
pop
mov
dec
sub
xchg
je
lret
adcl
lock
dec
jno
in
xchg
es
cld
dec
cmp
push
inc
sbb
xchg
scas
les
test
out
lcall
cmp
pop
xchg
testl
xchg
jge
movsb
xor
fldln2
les
add
lcall
addr16
dec
jns
xor
pop
adc
jmp
ficoms
xor
dec
addb
popa
out
adc
xor
rclb
arpl
mov
add
out
aad
mov
add
xchg
cvtpi2ps
adc
dec
lahf
jnp
mov
std
sub
and
dec
imul
inc
add
mov
mov
shl
stc
cltd
cltd
fsubrl
lock
or
add
sbb
pop
es
inc
sahf
div
xchg
outsl
shll
lcall
push
dec
fstps
addb
jno
gs
fists
pop
inc
lock
or
push
stos
insb
push
cmc
inc
imul
popf
jecxz
stc
mov
bound
xchg
inc
movsl
out
jnp
jb
test
pop
push
lahf
sbb
adc
push
shrb
adc
cmp
in
mov
fnstsw
std
jae
push
sub
iret
in
add
fdivr
jl
pusha
mov
pushf
dec
ja
xor
push
test
inc
mov
sbb
lds
xchg
outsl
into
pop
je
xchg
inc
or
stos
repz
mov
mov
add
test
xor
inc
mov
addb
lret
fistl
mov
or
movsl
xor
mov
sbb
lock
icebp
mov
imul
notl
std
stos
repnz
or
push
jo
bound
hlt
or
fisubs
dec
sahf
neg
xchg
adc
pop
popa
call
inc
cli
fiadds
inc
mov
xor
adc
imul
lret
stc
ret
push
sub
jl
xor
xor
mov
ja
sbb
adc
pop
sub
jnp
das
es
add
icebp
lods
into
and
mov
sbb
je
adc
rcr
addr16
adc
leave
stos
pusha
jae
cld
rcl
sbb
push
lods
xor
mov
testb
jno
push
jb
adc
cmpsl
cmp
mov
sbb
push
pop
push
shrb
fidivrl
clc
cld
xchg
inc
or
and
loop
pop
lcallw
repnz
jae
mov
mov
shrb
mov
xchg
in
xor
stos
fs
hlt
sub
add
mov
dec
stos
pop
mov
shl
xor
sbb
xor
xchg
mov
flds
mov
lahf
mov
xchg
and
mov
or
xchg
xor
or
stos
xlat
xchg
pushf
and
je
adc
jecxz
or
out
inc
sbb
pop
pop
and
pusha
mov
pop
test
sbb
mov
mov
mov
jo
mov
xor
icebp
ljmp
push
dec
cmp
popa
cwtl
hlt
imul
dec
and
mov
inc
xor
inc
mov
outsb
ljmp
cld
pop
sarl
pop
add
sti
scas
dec
add
adc
shlb
dec
insb
lods
int3
fcoml
mul
cmp
inc
push
pop
clc
sub
imul
mov
cli
xchg
repz
lods
outsb
repnz
mov
push
and
xor
mov
xor
idivl
mov
mov
pmuludq
mov
sub
adc
mov
mov
add
test
imulb
adc
iret
or
adc
dec
fdivr
or
cli
fnstsw
sti
out
add
scas
fnsave
mov
sbb
mov
rcr
notl
push
das
mov
mov
sbb
adc
popa
rcll
hlt
inc
aaa
lahf
mov
dec
in
mov
sub
fs
pop
push
out
mov
je
add
loopne
add
ds
es
popa
cwtl
or
test
loopne
xchg
fisubl
sbbl
js
xchg
mov
or
cmpsl
sub
inc
mov
hlt
mov
jo
inc
prefetchnta
jl
aam
insl
dec
aam
xchg
or
out
idivl
and
mov
hlt
adc
stos
ljmp
xor
pop
push
xchg
xchg
mov
push
add
pop
jmp
clc
pop
fsubs
sbb
add
jmp
cmp
dec
push
fst
ret
push
loope
pop
test
loope
ds
mov
mov
in
rorl
jmp
gs
daa
adc
mov
jne
pop
movsb
lret
clc
ljmp
dec
dec
sbb
lock
xchg
leave
gs
sub
mov
jecxz
add
je
jge
jb
or
fisttpll
or
in
jmp
xor
jle
loop
pusha
idivl
lds
jmp
cmp
or
mov
test
in
pop
daa
pop
pop
dec
mov
popa
mov
outsb
lods
lods
mov
xor
or
sahf
push
dec
dec
fcmovu
je
dec
mov
mov
and
adc
pop
daa
and
addl
sar
mov
clc
or
es
arpl
flds
push
dec
sti
mov
inc
shrb
mov
pop
pop
sub
mov
ret
pop
insb
gs
add
xlat
and
inc
stos
pop
jno
fwait
enter
scas
sbb
adc
cmc
add
dec
lods
nop
push
out
out
das
clc
ljmp
inc
jl
fdivl
hlt
pop
fcmovu
sbb
lret
test
pop
dec
mov
test
cmp
popa
aas
out
mov
jecxz
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
in
lods
pop
sub
cmp
cmp
ret
out
jne
scas
pop
sub
cmp
jl
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
and
sbb
out
pop
cmp
xchg
fmuls
push
gs
sbb
shll
ficompl
dec
sub
sbb
pop
js
rclb
pop
imul
jg
scas
pop
sub
cmp
cmp
shlb
xchg
sub
ss
jb
dec
sar
mov
mov
dec
push
out
divb
pusha
xlat
les
imul
sub
in
scas
sbb
xchg
ss
mov
movsb
test
ljmp
mov
cmpsb
out
mov
ss
les
lret
sbb
sub
fisubrs
pop
xchg
xchg
aam
inc
cmp
xor
pop
sub
pushf
add
or
jne
scas
pop
sub
cmp
cmp
jle
adc
push
cmp
cmp
cmp
fs
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
cmp
cmp
cmp
cmp
je
scas
pop
sub
cmp
cmp
cmp
jne
sbb
push
cmp
cmp
jle
xchg
sub
cmp
sub
cmp
jne
scas
pop
cmp
cmp
cmp
sub
jne
scas
pop
sub
cmp
cmp
add
pop
sub
aaa
aam
or
out
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
pop
or
outsl
pop
push
cmp
fmull
out
gs
pop
ljmp
cmp
cmp
insb
stos
ss
cli
pop
sub
cmp
cmp
cmp
xchg
push
fsubl
mov
cmp
jne
movsl
pop
sub
mov
cmp
jne
scas
pop
sub
cmp
cmp
sbb
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
cmp
cmp
jne
scas
pop
sub
cmp
xchg
dec
cmp
jne
mov
out
pop
mov
inc
and
jns
test
std
leave
mov
cli
cli
pop
aad
xlat
inc
xor
add
push
fwait
pop
imul
add
xchg
out
sub
xor
fcmovne
out
adc
in
stc
adc
or
lret
inc
mov
lcall
lea
xchg
add
mov
dec
sub
sbbl
mov
lcall
xchg
into
fidivs
shl
out
jecxz
jae
adc
push
rsqrtps
out
add
push
sbb
inc
cmp
loopne
mov
push
cwtl
mov
lcall
repnz
jo
jecxz
jns
xchg
imul
js
ret
mov
lahf
sahf
outsl
pop
lret
lret
loopne
sbb
jbe
dec
std
jbe
sbb
cmp
lret
loope
push
mov
jg
sbb
and
jmp
jbe
aas
call
in
jle
push
inc
xor
inc
xor
inc
sub
decb
adc
clts
in
add
or
and
mov
xchg
shl
mov
loope
sub
sbb
and
sub
lcall
jno
dec
or
rcll
fwait
imul
and
and
imul
je
ret
out
loopne
pushf
iret
dec
adc
push
xchg
ficomps
add
fisubrl
xor
fists
scas
rclb
iret
or
inc
xor
ds
in
scas
inc
inc
in
jnp
cmc
mov
movsb
sbb
jnp
add
dec
cmp
push
push
pop
xchg
hlt
imul
cli
leave
push
mov
aad
fwait
movsl
int3
lods
adc
xor
call
sbb
inc
pop
lock
lods
jge
es
out
jl
inc
imul
ljmp
pop
int3
and
imul
xor
pop
xor
addr16
test
enter
jp
and
das
sub
sbb
in
gs
push
jge
mov
inc
or
pop
repz
cmp
movsb
pop
jmp
mov
xlat
jmp
pushf
xchg
sahf
orb
adc
mov
out
and
lret
mov
inc
std
mov
nop
addr16
lock
insl
call
aaa
mov
xor
mov
pop
nop
cmp
nop
in
pop
dec
or
lret
fldenv
mov
sub
adc
pop
cwtl
mov
xchg
scas
adc
mov
inc
scas
mov
aam
cmp
add
lock
daa
in
push
imul
or
aad
xor
not
xchg
push
xor
arpl
shrl
shll
adc
cltd
sbb
mov
add
push
ret
test
sub
cwtl
jo
and
add
insb
js
into
xor
lds
mov
jmp
mov
sbbb
fisttpl
movsl
sbb
fs
or
in
pop
xor
insb
insb
cwtl
mov
rcr
pop
stos
enter
mov
outsb
mov
cmpsb
arpl
nop
inc
push
daa
leave
scas
pop
push
in
sbbb
leave
xchg
mov
xor
pop
push
and
mov
test
cmp
lea
add
mov
stos
fwait
lock
pushf
test
aas
clc
rcll
imul
ljmp
and
fimuls
mov
std
mov
in
std
shrb
mov
je
mov
lcall
movsl
cmpsb
mov
pop
jle
enter
loope
test
or
cmp
jp,pn
mov
mov
sti
xchg
bound
movsb
push
push
adc
add
ss
mov
add
ds
test
ds
add
jp
into
add
enter
or
fwait
xor
cld
ljmp
cwtl
xor
pop
sahf
aad
sti
mov
stc
mov
cs
mov
pop
sbb
sbb
adc
jae
add
pop
rcrb
rolb
add
xchg
mov
push
clc
ja
jp
dec
sbb
jle
test
dec
fistpll
or
add
xchg
mov
in
ret
xchg
shl
cmpsb
sub
jno
or
cmp
sub
pushf
sub
lds
pop
sbb
xor
lahf
pop
inc
in
in
adc
addr16
jge
mov
jecxz
and
outsb
mov
inc
aas
movsb
or
mov
sub
adc
les
sub
mov
mov
nop
mov
leave
jecxz
scas
pop
adc
shrl
add
add
mov
sub
jge
dec
into
test
lods
pushf
add
push
test
cs
mov
mov
sub
push
movsl
pop
xchg
outsl
mov
fwait
ljmp
out
stos
add
dec
sub
stc
xchg
mov
mov
cmp
in
mov
and
sub
cmp
xchg
jp
ds
into
ret
pop
shrl
inc
or
sbb
add
aam
push
addl
bound
orl
add
push
mov
xor
jle
jb
push
aas
shr
add
rol
cwtl
pushf
shl
mov
dec
adc
adc
add
iret
xor
imul
mov
negb
pop
std
jl
in
jo
push
fimuls
movsl
jo
fnsave
push
ds
xlat
ds
mov
lret
and
pushf
int3
cmpsl
popf
ret
mov
fisttpll
popl
nop
fbld
pop
pushf
add
push
mov
mov
pop
test
aad
stos
fistpl
movsl
xorb
pushf
mul
sti
dec
and
sbb
pusha
xor
repz
inc
iret
in
mov
js
push
test
jno
adcb
fs
xor
sub
cltd
mov
mov
std
add
lret
ss
push
cmp
mov
enter
sub
cmp
mov
out
cli
ret
pop
pop
or
scas
push
int
out
mov
pop
aas
lods
push
adc
nop
adc
hlt
out
and
scas
xchg
scas
push
andps
push
aaa
clc
jmp
enter
insl
jp
fimull
stos
ja
into
inc
sub
xchg
push
inc
mov
mov
or
cld
lcall
in
sub
rcl
iret
and
mov
xchg
daa
push
insl
iret
pop
inc
inc
clc
adc
rcl
repz
jno
push
arpl
xorl
xor
mov
xchg
ss
fisubs
cmp
in
out
sbb
xchg
mov
dec
xchg
xchg
adc
ficoms
mov
mov
aam
hlt
cwtl
int3
pusha
xor
dec
add
sub
push
lods
cs
xchg
addb
rcr
jns
jg
loop
cmpsb
or
dec
les
adc
aad
loop
inc
dec
mov
dec
test
sub
test
cs
stos
fstpl
insl
or
mov
movsl
mov
mov
in
lds
push
sahf
pop
sbb
lock
in
push
adc
ret
fcomps
repz
pop
push
out
fcompl
mov
sbb
loopne,pt
rclb
adc
pop
ds
pop
notl
loop
ret
call
fcomps
push
sub
mov
outsl
lret
dec
mov
adc
ret
lds
adc
shl
xchg
movsb
sub
xchg
in
bswap
dec
int
cmp
loop
gs
adc
mov
cmp
pop
xchg
pop
add
cmp
fnstenv
sbb
mov
dec
xchg
dec
mov
jmp
mov
mov
inc
aas
mov
or
int
lahf
in
mov
movsb
xchg
mov
sbb
dec
inc
xor
popf
out
shl
sub
or
sub
adc
jp
aas
cmp
adc
lret
cmp
sub
mov
mov
ljmp
adc
stos
cmp
movsl
push
loope
push
xchg
andb
mov
inc
flds
in
adc
cmp
test
dec
lods
rorl
cmp
mov
mov
cmpsl
aam
or
lock
out
add
dec
add
fmuls
int3
scas
div
lea
jne
movsb
mov
and
push
mov
sti
gs
mov
inc
cmpsb
les
and
imull
out
adc
inc
lea
or
push
fldl
inc
sub
xchg
daa
repnz
and
imul
sbb
lods
ret
sbb
sti
cli
xor
lret
hlt
and
imul
add
cmp
xor
ret
and
adc
jge
jp
jmp
iret
dec
pop
call
or
sub
hlt
loop
fisubrs
dec
fdivrl
mov
push
inc
sbb
jecxz
outsl
xchg
mov
jnp
add
int3
movsb
add
push
outsl
jg
int3
push
inc
scas
outsb
jbe
add
add
inc
and
das
xor
sbb
repnz
in
jecxz
jb
loopne
divl
mov
adc
lahf
repnz
inc
dec
push
xchg
inc
jbe
orl
inc
pop
cwtl
dec
loop
scas
xchg
test
jo
inc
stc
insb
enter
sahf
mov
hlt
cmp
in
push
sbb
and
xchg
jo
push
jle
mov
enter
test
adc
or
les
sub
xchg
push
cmpsl
jl
mov
pop
fwait
and
or
cmp
movsl
cmp
mov
hlt
cwtl
mov
repz
mov
cld
dec
add
xchg
xchg
and
iret
das
insl
pop
icebp
in
pop
into
out
sbb
adc
testb
leave
in
adc
push
pop
out
and
jns
push
fcoms
push
mov
cmpl
mov
inc
sub
pop
js
je
shl
pop
push
add
push
shlb
test
shl
ss
loopne
adc
sbb
mov
adc
test
push
sub
incl
dec
cmp
inc
xchg
into
adcl
loope
cmp
xchg
fcomps
ss
nop
sub
mov
mov
cmc
xchg
mov
les
or
int3
inc
mov
jo
mov
sbb
sbb
test
in
std
in
loope
jnp
ds
pushf
gs
jnp
jae
outsb
push
lock
fsubrs
add
cs
aad
push
adc
adc
mov
roll
and
jg
dec
adc
fsubrl
fists
pusha
out
rcrb
jl
cs
or
adc
adc
test
enter
pop
sub
shll
jg
shll
push
dec
ja
int3
repz
jl
push
jns
and
repz
inc
sbbl
jns
fdivs
les
insb
jb
push
mov
adc
jle
inc
xchg
ds
xchg
pop
bnd
sub
mov
jecxz
cmp
popa
mov
testb
aas
add
xchg
pop
push
cmp
jbe
and
repz
ret
sbb
sbb
clc
dec
xor
aad
sbb
push
test
out
lcall
bound
add
pop
aas
mov
mov
lods
and
stos
jnp
nop
iret
jo
sahf
push
xor
mov
les
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
