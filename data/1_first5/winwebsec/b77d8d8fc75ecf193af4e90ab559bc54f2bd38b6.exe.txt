lret
mov
mov
repz
rcrl
xchg
dec
push
mov
cmpl
xchg
imul
setb
shl
loop
in
mov
mov
mov
pop
adc
xchg
dec
push
sub
adc
fstps
out
sub
sbb
movsl
ret
and
movsl
ljmp
xor
out
cmp
inc
push
cmpsb
push
incb
repz
das
pusha
adc
imulb
adc
aaa
call
mov
inc
shlb
insl
iret
mov
push
or
push
jae
aaa
inc
lock
shrl
jg
sbb
xchg
nopl
and
push
fidivl
addr16
pop
lods
je
ja
add
pop
inc
mov
pop
jns
dec
push
bound
int3
xlat
es
fcompl
lock
fstps
outsl
cmpsb
sbb
pop
lret
aas
loope
jl
mov
addr16
mov
jns
cmp
or
ret
mov
pop
lret
mov
mov
test
shrb
pop
push
aam
sub
pusha
sbb
add
bound
repnz
adc
outsb
sarl
pop
and
pop
gs
xchg
mov
scas
sbb
mov
xchg
repnz
lahf
pop
jmp
push
sub
fildl
popf
cmpsb
daa
addr16
xchg
push
fstl
and
sub
mov
push
std
xchg
ljmp
dec
in
and
jge
push
sub
test
loopne
lods
test
lea
or
sub
rdmsr
clc
xchg
sbbl
nop
push
scas
out
movsb
movsl
imul
int
lret
popa
cltd
inc
push
das
xlat
inc
xchg
and
add
adcb
pop
or
jns
sub
adc
jb
enter
pop
mov
sub
aas
adc
loop
xor
pop
mov
pop
push
int3
leave
inc
ror
aas
jne
icebp
mov
or
bt
into
in
push
cmpsl
or
rclb
add
mov
fsubr
popa
mov
or
sbb
dec
rol
jae
mov
lea
push
int3
xchg
mov
rorl
jo
in
icebp
stos
lock
sub
cli
fidivl
adc
dec
in
pushf
js
cmp
jmp
add
je
xor
hlt
dec
cmp
pop
nop
std
mov
addb
scas
jnp
dec
loopne
push
inc
icebp
test
jmp
lret
or
outsl
cmpsb
cmpsb
int3
sub
fisubs
cmpsl
push
xor
lret
cwtl
in
cli
out
pop
aam
inc
leave
dec
in
pop
push
les
outsl
sub
mov
cli
and
ret
rol
clc
les
mov
mov
int
nop
xchg
imul
dec
fisttps
loop
push
cmpsb
mov
mov
jl
add
ss
push
pop
xorl
or
pop
mov
mov
xor
push
aad
cmp
and
inc
sub
dec
mov
push
push
mov
cmpl
and
mov
into
adc
jbe
clc
cli
movsl
xchg
inc
jnp
es
cld
fwait
jo
push
adc
loop
xor
mull
aam
call
jne
jle
jg
sbb
hlt
mov
inc
scas
mov
in
mov
pop
push
arpl
in
jle
mov
push
inc
sub
mov
jnp
shll
addr16
pusha
pop
mov
and
movsl
mov
or
ja
neg
mov
inc
push
jns
jne
sbb
daa
dec
adc
ja
test
sbb
in
mov
jnp
and
mov
pop
pop
mov
and
xor
add
popa
xchg
fldl
mov
out
divb
jle
cmp
out
jne
sub
imul
mov
and
adc
mov
inc
test
fs
xchg
mov
or
inc
push
addr16
rclb
testb
adc
xor
pop
jne
fmuls
pop
cmp
adc
cmp
pop
push
shr
je
inc
jge
fcompl
dec
sahf
movsl
add
mov
push
cmp
imul
js
jmp
jns
xchg
in
addl
push
dec
jg
mov
sbb
push
inc
add
test
push
fldcw
jbe
cltd
pop
adc
test
add
scas
sahf
xlat
mov
call
or
inc
stos
push
popf
jno
jno
out
aam
cmp
mov
hlt
insl
cld
mov
pop
loop
mov
jnp
mov
adc
sub
adc
gs
cltd
inc
inc
add
das
filds
xor
fildll
jns
dec
sbb
cmp
add
xor
dec
adc
or
xor
out
fsub
adc
fsubrl
and
lds
das
jbe
aaa
cs
out
loopne
adc
inc
lahf
xor
int3
ljmp
adcl
movsl
push
or
mov
mov
pop
jb
aad
loopne
dec
xchg
fldcw
mov
lcall
lret
pop
jo
popa
lcall
aas
dec
jne
sbb
lahf
push
cwtl
popf
jge
pop
adc
xchg
add
rcll
add
xchg
dec
pop
lret
mov
fcoms
jbe
pop
mov
pop
fwait
ret
mov
mov
pop
inc
leave
outsl
sti
rcrb
mov
add
mov
add
in
xchg
mov
aad
pop
out
pusha
into
lcall
test
add
not
aaa
mov
out
xchg
jae
fs
aad
sbb
and
jmp
in
mov
in
pushf
cld
shrb
notl
sub
or
fwait
jmp
inc
fsubl
xchg
js
shrl
mov
mov
cmp
fisttpll
es
jp
addr16
push
inc
out
fs
sbb
lret
or
inc
cwtl
pop
in
jnp
push
mov
lds
push
xchg
int3
mov
mov
xchg
imul
jno
jle
pop
sbb
inc
fnstsw
jl
dec
mov
jnp
std
fwait
push
test
testb
sub
jp
mov
or
dec
clc
imul
mov
push
and
adc
aam
out
mov
mov
stos
lods
push
xchg
mov
insl
sti
pusha
cmp
xchg
loop
les
lcall
inc
scas
lahf
cmp
insb
lods
cmp
xor
notl
mov
pop
xor
subb
stc
cwtl
jae
ds
jnp
adc
int
jl
mov
mov
mov
inc
out
daa
lds
in
ret
sub
ss
inc
psllq
jg
data16
data16
and
xchg
ficoms
add
roll
adc
sbb
out
push
test
fimuls
rol
icebp
jo
dec
add
add
or
das
fwait
enter
mov
pop
lret
jge
std
mov
mov
sub
and
xchg
repnz
movsl
pusha
imul
dec
jno
sub
xor
lods
jne
inc
dec
call
data16
pop
ja
sahf
test
xchg
je
aad
inc
and
pushl
aam
mov
jo
jle
adc
imul
pop
cwtl
push
jo
mov
lods
xchg
mov
mov
mov
fldl
mov
inc
shr
mov
repz
mulb
lds
popf
cltd
lds
in
aas
jne
pop
or
inc
sub
fdivl
lea
test
mov
clc
mov
pop
jg
sbb
sbb
jbe
nop
lds
sbb
push
in
std
mov
out
enter
cmc
mov
pop
das
cmp
mov
call
push
icebp
dec
stc
add
fists
push
shrl
in
outsl
fcmovb
test
adc
cmc
stc
pop
add
mov
addb
ret
inc
mov
outsl
fwait
cmpsb
lods
adc
inc
cmpsl
jl
and
mov
pop
jbe
outsl
sbb
inc
dec
lea
dec
dec
and
stos
faddl
test
inc
pop
jnp
ret
mov
arpl
shrb
jl
jp
stc
arpl
jbe
and
dec
ds
outsl
inc
cs
cmp
xchg
jg
push
xor
repnz
fsubrl
cmc
ds
cmp
cwtl
fs
imul
test
in
sbb
jno
pop
dec
jbe
scas
and
out
call
lods
insl
jnp
scas
cmp
imul
mov
lcall
nop
mov
mov
or
mov
xchg
push
mov
lret
push
jecxz
jl
mov
nop
cli
inc
cmpsl
sahf
and
hlt
vmread
sub
out
mov
sub
sub
into
fimull
mov
inc
inc
pushf
xchg
out
rolb
adc
adc
cmp
lods
pusha
xchg
jb
or
and
jnp
push
loopne,pn
jl
scas
or
xchg
pop
loopne
insb
add
and
push
mov
mov
popf
sub
iret
das
sub
loop
outsl
and
xorb
xorb
insb
test
testb
scas
mov
jno
pop
or
mov
sbb
stos
cmpsb
xor
and
add
jl
jg
outsb
jge
stos
mov
insb
out
inc
lods
lods
and
arpl
and
xor
popf
leave
dec
fldpi
ja
call
push
enter
cmpsb
popf
sahf
aas
out
ja
into
mov
inc
sarb
outsb
repz
push
jae
stos
stos
pop
or
orl
das
test
rolb
dec
or
bswap
fisubl
dec
cmp
fcmovbe
push
and
lock
loop
shlb
movsb
gs
xchg
sub
dec
mov
xchg
pop
lahf
lods
ja
or
gs
sbb
adc
xchg
sub
or
mov
out
mov
fistpl
lret
movsl
cmpsl
push
cli
pop
mov
cmpsb
leave
adc
push
mov
nop
in
cmc
push
mov
mov
scas
cmp
xor
sbb
lret
pop
enter
dec
fs
hlt
or
pop
insb
sbb
mov
addr16
xchg
fistpl
jo
xlat
mov
jnp
sbb
lds
aam
add
ss
or
imul
ret
js
pop
sahf
enter
xchg
cwtl
les
dec
shrl
inc
test
add
loop
test
out
dec
xchg
jbe
mov
or
add
mov
jo
cwtl
mov
sub
xchg
xchg
fstl
adc
push
push
int
jg
sub
dec
xchg
lcall
das
push
cs
cmc
shrb
out
icebp
xchg
rcrl
xchg
inc
sub
dec
in
test
imul
shll
xchg
jl
cmp
inc
pop
imul
je
faddl
jp
loopne
push
pop
ja
inc
divl
or
aam
sbb
xchg
dec
and
push
lds
cmp
adc
pusha
and
and
inc
aam
shrl
add
clc
sti
jnp
pop
sub
stos
add
pop
mov
pushf
push
dec
pop
orb
cmp
push
stos
jae
inc
out
lret
ljmp
push
gs
loope
sti
jecxz
int3
cmpsb
cltd
out
add
pop
mov
jnp
mov
daa
inc
int3
jae
and
lret
repnz
inc
xor
add
mov
push
push
adc
roll
insl
mov
dec
cmp
and
xlat
add
pop
sub
js
arpl
pop
imull
ja
das
mov
das
inc
sbb
push
sbb
cmp
inc
das
mov
data16
int
pop
push
mov
inc
fstl
test
xor
insl
pop
push
cmp
xor
or
xor
scas
in
fcmovnbe
mov
jg
add
xor
inc
add
add
cmp
mov
add
mov
es
adc
fmulp
lcall
es
out
pushf
stc
lods
sub
dec
xchg
pusha
or
add
aas
or
pop
pop
sarb
repz
xorb
stc
push
jne
adc
pop
test
xchg
rclb
stc
xchg
pop
in
stos
mov
test
sub
shrl
push
int
sub
jb
mov
cmp
mov
adc
lret
lcall
std
subl
aam
push
ja
cs
movsb
xor
push
icebp
inc
adc
mov
loopne
adc
pusha
xor
add
enter
inc
or
cmpsb
dec
jp
sub
pop
imul
mov
sbbb
dec
inc
dec
jg
push
or
loope
xlat
sahf
mov
mov
sbb
shr
cmpsb
in
js
rclb
xor
add
jae
xchg
cltd
addr16
xor
cmpsb
arpl
loopne
lahf
xor
jecxz
cld
xlat
fistpl
and
adc
test
test
sarb
cs
outsl
adc
adc
sarl
pusha
incb
int3
and
in
pop
cs
mov
cmpsb
stos
aaa
clc
lods
adc
push
inc
cmpl
dec
push
cmpsl
pusha
sbb
push
outsl
add
daa
jmp
and
insl
arpl
mov
push
mov
lock
shlb
mov
and
pop
push
outsl
jle
pop
in
pusha
dec
and
shll
jp
fstl
jnp
outsl
and
test
add
push
and
xchg
imul
sti
adc
push
push
or
cmp
shlb
adc
add
and
mov
jp
movsl
sbb
rolb
clc
cmc
cmp
mov
sbb
push
cld
jl
or
pop
je
mov
push
stos
cs
out
int
lods
out
loopne
xchg
popf
ljmp
jnp
inc
add
push
movl
add
and
cmpsb
mov
or
pop
insb
lret
xchg
sbb
or
movsb
sti
fwait
sbb
std
push
mov
lods
xchg
and
fwait
in
out
js
inc
loopne
cltd
sub
pop
ds
fmuls
fwait
mov
pop
pop
or
mov
filds
mov
sbb
sbb
adc
shll
fsubrs
mov
icebp
es
mov
je
jle,pn
cmp
ret
mov
mov
nop
in
call
and
mov
mov
push
push
lret
lret
es
mov
ret
ret
xchg
rorb
ret
sbb
sub
jnp
repz
int
jo
xchg
enter
scas
sbb
in
leave
sarl
insl
adc
jne
shll
cwtl
fnsave
mov
cwtl
xchg
add
outsb
lret
mov
dec
sbb
mov
cmp
andl
jle
gs
xor
sbb
push
sbb
or
sbb
sbb
lock
stos
mov
mov
jns
stos
inc
mov
leave
xor
popa
mov
mov
scas
and
orb
push
call
repz
adc
jp
and
push
arpl
mov
out
push
test
or
aad
mov
jp
push
xchg
filds
xor
xchg
scas
xchg
insb
repnz
loop
test
mov
stos
cltd
add
bound
data16
and
push
sti
xchg
jmp
cmp
jl
inc
es
mov
mov
call
das
outsl
cmp
add
sbb
lock
sub
dec
push
aas
adc
or
cs
push
ds
cmc
rcrb
mov
addr16
jb
push
outsb
adc
or
adc
andl
jae
test
hlt
jg
cld
cwtl
aam
cmp
dec
mov
jbe
pop
std
push
in
adc
or
rorl
imul
jmp
mov
das
adc
test
mov
mov
roll
repz
stos
adc
add
leave
ljmp
push
out
hlt
cmp
add
incl
mov
mov
outsl
xchg
shrb
imul
or
and
test
inc
add
jno
jb
xchg
xlat
in
fidivrs
jp
ds
mov
incb
fstpt
sbb
dec
cmp
adc
jg
add
xchg
stc
cli
push
data16
dec
or
js
sbb
leave
lea
xchg
push
fld
test
int
les
inc
xchg
jg
ficomps
int
test
add
or
lods
in
mov
ret
pop
sub
popf
cwtl
lahf
dec
push
sbbb
add
jecxz
dec
into
xor
cmp
icebp
adc
loop
repz
add
ds
lret
lods
dec
gs
int
int
pushf
inc
inc
mov
movsl
icebp
inc
jecxz
jle
pop
js
test
pop
sahf
mov
popf
xor
xchg
sub
in
imul
out
fistps
sub
test
jmp
and
pop
cltd
pop
or
jb
dec
jb
xor
out
cmc
jno
jo
and
test
cmp
pop
ja
insb
lret
addb
je
pop
test
test
mov
lahf
mov
jg
mov
imul
bound
insb
insl
xlat
inc
push
push
fnstenv
xchg
jo
jne
xchg
lock
sarb
js
out
pop
dec
data16
rep
adc
mov
inc
gs
xchg
mov
mov
mov
test
adc
in
out
icebp
add
lret
push
idivb
int3
push
rorb
pop
hlt
add
mov
andb
or
dec
imul
ret
pop
xor
arpl
pop
inc
dec
das
fisttps
cwtl
loop
jp
sbb
mov
sbb
jge
fxch
sub
mov
and
inc
movsb
insb
iret
sub
outsl
js
pop
pop
test
inc
cld
cmpsl
inc
ret
out
pop
xor
in
inc
flds
out
xchg
xchg
mov
popa
test
xor
push
push
jle
mov
das
and
xor
push
cwtl
push
loope
insl
leave
xlat
xchg
pop
add
addr16
lods
push
adc
bound
sbbb
sub
out
jmp
imul
popa
fwait
addr16
inc
popf
fdivl
mov
ljmp
and
hlt
pop
adc
xor
mov
repz
sub
inc
push
xor
sbb
out
nop
and
or
cld
outsb
jns
push
lods
fisubl
pushf
inc
sbbb
test
test
inc
xchg
mov
ljmp
lea
inc
xor
es
jns
test
lea
es
aas
cli
lret
inc
inc
and
test
clc
adc
dec
pusha
xchg
lea
mov
lahf
mov
cmpsb
sbb
loope
add
int3
mov
into
push
std
jb
out
push
out
int3
leave
dec
mov
mov
inc
mov
mov
add
adc
ds
fsubrp
mov
data16
lock
aam
sarb
pop
jae
push
xlat
inc
out
dec
sarl
int3
insb
das
jp
mov
xchg
or
int
and
sub
pop
push
push
push
xchg
aas
testb
xlat
lods
push
out
shrl
leave
cwtl
adc
fstpt
jo
push
sub
inc
sub
sbb
mov
fldenv
pop
ret
or
mov
xor
and
in
mov
mov
pop
mov
add
and
xorl
xchg
xchg
mov
jge
adc
popf
mov
pop
loop
mov
lods
mov
xchg
mov
jno
test
inc
add
push
fisubl
cmpsb
dec
dec
adc
jb
cltd
cmc
jnp
mov
push
repnz
iret
jmp
ficoml
stos
adc
ljmp
and
sbb
xchg
dec
xchg
int3
push
les
or
sahf
pop
push
fs
sub
js
xor
cwtl
clc
xor
hlt
sarl
mov
cmp
aad
jno
mov
pop
cmpsl
in
enter
xor
mov
mov
ds
sub
sub
cmp
jnp
cltd
or
sub
shr
jbe
mov
fs
jbe
aam
jns
lock
lret
iret
popf
mov
adc
pop
arpl
pop
popa
inc
hlt
mov
dec
mov
mov
or
scas
fnsave
nop
jno
out
enter
inc
cmp
les
sbb
mov
clc
sbb
mov
pop
je
dec
pop
sub
jmpw
mov
dec
clc
dec
mov
xchg
rclb
push
jmp
out
leave
mov
faddp
es
jo
xor
js
dec
lds
jge
fmull
pop
jmp
aam
mov
sub
test
xchg
ljmp
adc
add
mov
pop
rclb
mov
push
push
add
jnp
or
inc
popf
xor
jne
test
mov
adc
das
ljmp
xchg
aam
jle
xchg
cmpsb
sbb
mov
in
fisubl
aaa
adc
lds
xchg
jo
loop
xchg
cmpsl
push
jnp
daa
in
out
aam
shrb
sub
aas
pusha
sub
push
out
mov
loope
sub
and
addr16
adc
and
enter
mov
test
js
clc
cmp
rcrl
in
fidivrl
fmuls
js
out
popl
fisttps
dec
inc
into
mov
enter
pop
inc
pop
and
mov
add
or
outsb
inc
xchg
lahf
adc
int
bound
mov
push
jne
dec
mov
stos
mov
loop
jne
cmp
pop
gs
xchg
sbb
dec
sub
mov
cs
pop
insl
fidivrl
adc
xlat
adcb
sub
push
xchg
adc
inc
jne
aas
pop
test
mov
jbe
pop
dec
sbb
cmpsl
mov
sbb
insl
mov
ss
cmp
xor
je
fnstenv
sub
xchg
jno
xor
jo
add
pop
fcmovnb
mov
jp
lret
fbld
pop
mov
xchg
movups
outsl
ficomps
testb
jbe
mov
das
shlb
add
xor
stos
mov
adc
pop
and
mov
pop
xchg
mov
xchg
xlat
jl
repz
out
add
sub
mov
cvtpi2ps
mov
jmp
xor
shlb
and
das
int
push
dec
jne
je
imul
inc
mov
pop
pop
cmc
shrb
stc
adc
pop
lock
pop
mov
fcoml
xchg
mov
repnz
push
xor
add
adcl
pop
mov
mov
icebp
pop
mov
add
scas
scas
mov
repnz
pop
mov
in
or
add
jle
add
std
pop
jae
dec
push
scas
adc
bswap
ds
mov
insl
fs
shl
mov
xor
aaa
push
or
jns
repnz
jp
call
jno
pop
adc
dec
insb
add
scas
mov
cld
push
sub
xor
outsb
fsubl
stos
fmull
mov
jbe
gs
dec
adc
xor
in
mov
lahf
adc
sti
add
xchg
inc
and
inc
sbb
jmp
mov
fisubrs
test
push
stc
xchg
and
adc
or
xor
fdivrl
mov
js
repnz
rcrb
fwait
xchg
dec
aam
gs
adc
and
adc
jo
and
push
scas
push
mov
inc
rcl
vandps
call
or
mov
pop
fs
sbb
mov
int
daa
cmpsb
sbb
daa
push
or
inc
addb
sub
inc
mov
jns
cmp
or
movsl
adc
mov
and
xchg
xor
jmp
cmp
adc
pop
cmp
dec
cltd
dec
or
pop
into
jp
or
pop
adcl
cld
in
imul
imul
subl
push
fbstp
push
scas
imul
data16
push
in
cmpsl
lods
outsb
lret
add
cs
sub
dec
in
and
dec
xor
imul
and
push
rorb
mov
mov
int
popa
jo
jmp
mov
mov
add
les
imul
aam
iret
sub
push
inc
clc
out
cmpxchg8b
ljmp
fs
pop
out
xor
mov
ret
or
xor
idivb
jl
add
xor
mov
add
xor
ds
xchg
movsl
or
into
insl
pop
jo
inc
mov
ret
bound
adc
je
push
cmpsb
cmp
cld
adc
outsb
push
xchg
xor
jns
shr
outsl
clc
jmp
and
cmp
jnp
aas
or
push
std
data16
nop
loop
lock
std
pushl
out
ror
lea
mov
or
or
push
fdivl
insb
lahf
sub
jns
lods
adc
pop
sub
pop
andl
inc
jp
cmp
imul
scas
add
call
dec
loop
in
mov
aad
xor
sub
clc
mov
fmull
ret
mov
add
cld
lret
push
out
movsl
inc
pop
fisubrl
js
out
out
jl
fidivl
lcall
lcall
test
das
inc
mov
cmpl
cld
jnp
ret
adc
mov
addr16
xchg
push
filds
xor
xchg
aad
hlt
mov
cmpb
lods
adc
jbe
fnstenv
daa
pop
or
mov
addr16
shll
push
inc
popf
pop
jno
rorl
dec
bnd
cld
ss
mov
ja
adc
mov
cmp
fsts
lcall
mov
fisubl
ljmp
mov
mov
pusha
xor
or
xchg
aas
leave
adc
scas
out
jbe
repnz
and
cs
outsl
inc
pop
push
lret
sbb
cwtl
test
xor
int3
subb
stos
ja
ja
sub
fstl
dec
cwtl
adc
pop
sahf
in
push
cmpb
jmp
and
pcmpgtd
ret
je
pusha
jbe
sub
push
mov
lcall
fs
lds
hlt
je
rol
out
adc
in
jmp
out
into
pop
jg
dec
cmc
loope
mov
mov
scas
mov
mov
shlb
cmp
cmp
test
add
cmpsb
jmp
lods
aas
and
ret
mov
pop
sub
push
mov
inc
sub
inc
mov
mov
loope
out
jge
bound
adc
push
push
cld
lcall
rorb
xchg
out
mov
or
and
mov
daa
shlb
cli
or
and
ss
inc
in
ja
inc
sub
mov
mov
in
movsb
mov
leave
leave
inc
lods
xchg
out
jg
adc
or
nop
jp
cmp
mov
popf
test
in
es
push
mov
xchg
jle
jmp
dec
aad
push
and
divl
daa
leave
nop
nop
add
out
inc
std
push
cmp
push
stos
mov
stos
xchg
cmp
aad
push
add
and
push
cltd
cmpsl
lea
popf
pop
sub
inc
cmpsb
imul
sbb
outsl
fadd
cmp
jle
inc
add
popf
sbb
xor
cmp
mov
mov
push
arpl
push
and
rcll
pushf
std
or
xlat
xor
insl
pop
jmp
fstl
lret
inc
scas
repnz
fnsave
sub
cmpsb
inc
icebp
movsb
xchg
mov
fnsave
fsubl
cmpsb
scas
jne
cmp
cmp
in
inc
push
add
sbb
jbe
sbb
daa
filds
call
scas
or
fdivl
cmp
pop
dec
repz
test
incl
xor
andl
lods
call
mov
outsb
repnz
pop
es
outsl
jmp
push
push
push
mov
mov
pushf
or
in
idivb
sub
add
or
mov
pop
popf
cmc
inc
out
arpl
or
push
sub
fmull
add
push
js
adc
cli
push
mov
lcall
fimull
push
xchg
lds
divps
lea
fs
jnp
idivb
outsl
ss
sub
into
lea
push
popl
and
push
mov
pop
stos
out
cltd
jb
jecxz
cmp
sbb
dec
divl
les
fmul
cwtl
and
jnp
fisubl
aam
ds
xor
jnp
imul
into
mov
test
xchg
pop
pop
push
mov
std
push
stos
into
sub
test
or
pop
adc
call
sub
outsb
divb
clc
addb
testb
shlb
inc
enter
je
mov
je
mov
gs
incl
imul
das
rclb
or
sub
sub
cmp
jge
cmp
cli
sub
insl
fcmovbe
mov
sbb
push
push
or
push
push
sahf
mov
mov
test
jg
mov
push
dec
loop
adc
push
cld
push
mov
orps
test
mov
insl
movsb
loop
xor
xor
out
fld
dec
sub
mov
in
stos
push
add
cmc
popa
add
pop
and
mov
jb
lahf
mov
outsl
insb
call
imul
jno
push
push
lock
sub
enter
cwtl
push
sub
decl
scas
lret
std
xchg
fistpll
cmp
lea
and
push
loope
push
je
int
shrl
sub
clc
iret
or
in
lods
pop
lahf
mov
jmp
insb
lret
andb
pop
inc
cld
cmp
add
and
movsl
mov
jae
sub
mov
dec
cmpsb
mov
mov
lea
or
jnp
movb
fwait
xor
cmp
push
fldenv
xchg
sub
popf
push
adc
es
ja
sub
cmp
and
jmp
ret
sub
in
add
pop
aas
in
push
mov
add
shlb
scas
sar
popa
pop
xchg
cmpsl
jp
xchg
cld
inc
repnz
test
fs
test
sub
xlat
lahf
sarb
sbb
fbstp
push
ja
int
sti
out
call
mov
ror
insb
jp
shr
popf
pop
fisttpl
pop
xchg
and
dec
ret
fcomps
cli
mov
out
aaa
pop
push
xchg
mov
pop
cli
or
mov
xor
mov
addl
sti
mov
inc
icebp
mov
jb
dec
mov
dec
repnz
and
jo
dec
xchg
imul
push
in
dec
mov
jp
xlat
lea
or
fsubs
in
repz
cmp
xchg
pop
lds
movsb
fs
mov
mov
out
mov
int3
roll
add
dec
repz
aad
int
sub
shrl
cld
pop
mov
sub
aaa
pop
cmpsl
loope
push
add
rorl
or
jne
inc
mov
shrb
mov
aaa
dec
xchg
push
sub
inc
stos
bound
bound
andl
sbb
sbb
es
js
sbb
add
sub
jl
movsl
pop
inc
aas
mov
adc
ret
mov
mov
aaa
enter
clc
mov
xchg
dec
adc
mov
push
jge
mov
ds
lods
jecxz
loope
xchg
mov
sahf
mov
fsubs
sub
inc
sub
cmp
fldcw
xchg
sub
mov
mov
inc
jno
and
mov
xchg
fistl
ffree
mov
daa
ror
jne
cltd
cld
icebp
jns
ja
dec
test
pop
fiaddl
subb
push
insb
pop
es
cmpsb
push
xchg
shrl
add
dec
xchg
call
lods
out
mov
in
push
pop
mov
sarb
xor
out
add
add
repnz
cld
jo
jb
pushf
outsl
pop
divb
pop
in
mov
inc
mov
fistl
pop
mov
cmp
and
and
test
push
test
cmp
push
push
stos
add
lds
jmp
dec
in
stos
dec
push
sub
jo
testb
enter
jmp
cmp
adc
fcomps
pop
or
ja
pop
jecxz
or
xchg
xchg
js
push
push
mov
fcomp
stos
or
lock
mov
and
insb
ljmp
cs
shl
idiv
lock
jecxz
jnp
test
stos
clc
movl
bound
add
inc
aaa
cmp
mov
cld
xlat
sbb
imul
mov
push
inc
loope
outsl
mov
leave
mov
outsl
mov
cmpsb
adc
mov
push
add
sub
mov
out
xchg
fadds
push
frstor
sub
sbbl
nop
pop
orl
xchg
addr16
clc
adc
xlat
ret
fiadds
cmpb
inc
mov
xchg
inc
sarl
mov
mull
push
outsl
mov
sub
cmc
adc
jp
fneni(8087
pop
and
mov
xor
xor
stc
inc
jno
es
xchg
sub
mov
popf
cmp
xor
scas
and
pop
scas
jl
movsb
ss
inc
shrd
rcll
out
hlt
int3
lret
addb
xor
sbb
push
aad
and
dec
in
lods
xor
mov
push
sarb
repnz
scas
in
and
xor
push
jecxz
push
mov
pop
jmp
aad
pop
test
adc
and
sbb
pushf
stc
pop
mov
mov
dec
and
arpl
out
ja
jb
pop
cmp
xchg
shll
arpl
mov
int
mov
add
mov
inc
mov
bound
push
sub
mov
jo
inc
arpl
test
sbb
xor
push
and
add
insb
lret
add
sbb
push
cmp
test
jecxz
push
lea
pushf
aas
mov
je
adc
dec
adc
push
pop
imul
or
andb
mov
int
inc
add
xchg
cs
jae
cmp
mov
adc
dec
inc
sbb
sub
lcall
xor
push
xor
jo
pop
cmp
es
and
pop
xchg
pop
or
lea
outsl
je
sbb
push
cmpxchg
scas
lds
cmpsb
cmpsb
adc
lret
outsb
cmp
inc
movsb
out
movsb
mov
stos
out
fisttpl
fistps
push
bound
jmp
in
scas
insl
xor
xchg
jl
jbe
fld
int
rorb
lds
fs
push
pop
divl
adc
loope
adc
jnp
and
test
pushf
xchg
outsl
jnp
les
jo
lea
or
jle
loopne
xor
pop
push
ljmp
imul
inc
clc
sahf
inc
cmc
xor
je
pop
jl
add
outsb
aas
int3
pop
std
repnz
jbe
adc
add
in
sahf
int3
push
jae
nop
les
lds
lcall
dec
fdivrl
jo
and
lcall
fcoml
arpl
and
mov
lock
add
mov
call
fidivrl
or
clc
addr16
push
push
jecxz
cmp
sahf
xchg
insb
scas
mov
jg
fsubrs
sub
loop
std
leave
sbb
ss
aad
adc
cmp
sbb
outsb
jmp
js
jns
test
pop
ret
mov
movsb
or
pop
or
mov
hlt
push
out
enter
pushf
add
test
mov
xchg
cmp
dec
push
ja
fcmovu
push
jb
dec
jge
pop
xor
fsincos
fbstp
mov
mov
and
aaa
in
ror
sahf
mov
or
dec
es
jecxz
push
clc
movsl
add
push
sub
aas
shrb
xor
call
lock
int3
sbb
cmp
and
adc
sub
stc
pop
pop
add
push
push
push
idivl
cmp
cmp
or
ret
jl
push
aaa
movsl
mov
in
movsl
push
inc
das
aaa
adc
dec
jo,pt
and
in
push
xchg
mov
cmp
aam
inc
aad
mov
aad
pop
stc
dec
mov
push
cmp
psubsw
add
pushf
div
dec
xchg
ja
fwait
loop
imulb
stc
sub
cmp
push
mov
in
sub
inc
pop
jg
lods
dec
or
jmp
xorb
popf
cmp
mov
insl
lret
in
sbb
fcoms
mov
mov
out
jns
push
addr16
sub
mov
mov
in
fs
nop
jmp
jae
into
cmp
inc
jl
sbb
in
mov
lods
pop
adc
mov
pop
inc
xor
nop
mov
jge
imul
or
jnp
jge
cmc
mov
push
js
mov
pop
divb
and
int3
mov
xor
sbb
mov
jo
test
push
neg
cmpl
mov
sahf
fwait
mov
jge
pop
add
adc
faddp
ja
push
dec
fcmovne
and
ja
lcall
fadds
push
pop
add
adcl
sti
adc
push
mov
pop
stc
loopne
push
es
push
push
mov
push
sbb
mov
es
inc
mov
jecxz
pop
mov
push
out
push
push
popa
jp
mov
cmpl
addr16
js
mov
xor
dec
ret
sub
jle
shlb
test
cmp
jg
xor
push
mov
out
ja
imul
lahf
fcompl
push
ds
xor
sti
cld
shrl
imul
test
pop
mov
xchg
jg
mov
dec
cld
testb
rcr
add
mov
add
inc
sbb
xor
fwait
cmp
movsb
scas
test
pop
push
sbb
push
js
sbbl
pop
jnp
clc
mov
add
dec
daa
in
mov
fidivrl
mov
movb
pop
int
fs
cmpsl
in
xor
xchg
cld
cmpsl
jnp
daa
pop
dec
js
dec
dec
add
xchg
mov
jl
mull
fidivs
xor
sub
mov
fistpll
sahf
and
cmp
mov
ja
or
dec
lods
inc
xor
sub
sub
mov
jns
repnz
xchg
xchg
lcallw
call
sbb
mov
mov
lahf
rolb
mov
mov
sbb
push
lock
js
xlat
popa
aad
jg
rcrl
lcall
adc
imul
in
xlat
test
aam
or
iret
or
or
mov
fisubs
fdivrs
add
lcall
les
mov
add
jmp
adc
mov
xor
aam
dec
jne
jne
stos
js
add
jl
pusha
inc
adc
push
mov
stos
push
les
jp
and
out
mov
pop
clc
xchg
jecxz
push
add
stos
push
mov
xchg
js
and
das
pop
inc
add
pop
pop
das
sarb
fdivrl
mov
pop
and
fwait
sbb
mov
cmp
dec
or
mov
pop
sbb
and
mov
xchg
inc
mov
dec
mov
sbb
sub
mov
test
je
push
cmp
aam
xchg
inc
lcall
add
outsb
loop
jge
imul
pop
sbb
fidivrs
and
loopne
cmc
inc
test
push
xchg
or
or
inc
movsl
push
sti
jnp
sbb
push
out
cld
cmpl
aam
or
cli
xor
mov
dec
nop
and
mov
xor
lahf
mov
jnp
xor
inc
out
xor
jp
bound
je
push
adc
daa
int3
inc
decb
inc
or
add
jns
inc
xor
sub
outsb
dec
add
or
add
sub
ss
hlt
push
pop
push
push
mov
adc
jecxz
mov
inc
mov
xchg
sub
mov
les
cmpsl
sub
jns
cwtl
xor
movsb
sbb
xchg
and
in
les
jno
fisubs
push
xchg
push
clc
xor
repz
xor
cltd
dec
pop
pop
into
adc
xor
sahf
add
iret
adcb
push
leave
out
cmp
out
adc
repnz
push
mov
inc
loope
lods
xor
pop
mov
jno
js
roll
repnz
sbb
mov
jge
xor
in
js
or
mov
faddl
loop
add
push
inc
sub
xor
sub
or
xchg
test
cmp
ljmp
and
push
jge
gs
in
push
testl
imul
gs
xor
xchg
addr16
xchg
outsl
test
xor
mov
mov
sahf
sbb
stos
mov
lods
jne
es
inc
add
insl
mov
dec
mov
out
jle
xor
adc
and
xlat
lea
ds
sbb
popf
ds
mov
stos
daa
adc
lret
add
and
gs
push
inc
dec
pop
rolb
ja
or
flds
push
arpl
lods
or
clc
ja
pop
lock
into
pop
pop
sahf
jne
stos
lock
mov
pop
in
push
lahf
ret
stos
push
loope
je
adc
push
cltd
mov
push
loop
shrb
adc
aaa
dec
inc
or
pop
ljmp
aas
ficoms
lret
jge
pcmpgtw
ret
shll
and
test
adc
cmp
push
popf
pop
fisubs
xchg
pop
ds
shrl
mov
scas
xchg
das
jno
pop
cmp
sar
fnstenv
sbb
mov
xor
and
lods
cmpsb
pop
stos
mov
scas
icebp
mov
cwtl
adc
pushf
inc
in
mov
mov
popa
or
pop
cmp
addr16
push
ret
jg
cmc
cld
sbb
sar
pop
jne
pop
push
push
sub
fistpll
push
je
cmp
addb
lcall
fidivs
mov
fisubrl
loope
test
mov
movsb
insl
scas
popl
mov
mov
xchg
jbe
mov
mov
decb
add
in
fs
rclb
repz
mov
pop
out
das
pop
out
icebp
repnz
jecxz
insb
dec
jecxz
insb
aad
enter
xor
pop
popfw
insb
lret
and
out
mov
inc
ret
pop
pop
and
push
out
sub
int3
fstpl
mov
pop
and
or
notl
inc
pop
in
push
popf
sbb
xlat
xor
adc
push
sub
mov
dec
pushl
push
shrb
je
mov
scas
es
aas
sahf
add
cmpsl
mov
sub
in
xor
in
ss
lret
pushf
rep
fs
lods
outsb
lea
inc
ljmp
data16
mov
dec
push
jp
inc
leave
loopne
cmp
popf
cmp
jb
cmp
mov
xchg
or
jecxz
scas
sub
jmp
add
scas
sbb
ss
addr16
loopne
mov
in
ds
adc
cltd
fnsave
mov
out
sahf
jl
pusha
xor
dec
mov
rcr
push
sbb
loop
pop
push
sbb
stc
cmp
dec
mov
pop
dec
mov
arpl
dec
rcrl
xorb
cmpsb
fiadds
lret
or
sub
push
or
mov
pushf
xchg
mov
xchg
mov
jle
dec
inc
cmp
shrb
sbb
inc
sbb
cmp
dec
shl
add
mov
mov
mov
fmull
mov
mov
stos
pop
fnstsw
mov
mov
add
dec
sub
pop
mov
mov
adc
adc
xor
fcoml
mov
fisubs
mov
sarl
daa
or
xor
mov
enter
adc
xchg
push
mov
ss
pop
pop
sbb
sarb
loope
cmp
lea
and
lock
test
and
mov
or
cmpsb
cwtl
imul
fwait
insb
fiaddl
sbb
inc
pop
dec
mov
fsts
mov
and
ljmp
push
fistpll
lds
jnp
clc
rorb
cmp
pop
bound
shlb
xor
inc
sub
sbb
rclb
fs
lcall
sub
popf
pusha
mov
movsl
inc
mov
cli
and
add
gs
mov
add
push
pop
addl
xchg
mov
jne
xchg
ljmp
loop
ret
jg
lds
inc
rol
or
push
sub
pop
pusha
rcll
popa
pop
aad
stc
es
add
test
addb
dec
jmp
pusha
push
stos
pop
mov
cmp
loopne
sbb
decb
xchg
push
loopne
aad
push
sub
outsb
fcmove
inc
cltd
mov
sahf
mov
sbb
lahf
repnz
arpl
cmp
jge
scas
mov
cmc
adc
and
fsts
out
shlb
in
xadd
data16
mov
mov
mov
adc
push
push
mov
sub
cmp
lock
ds
repnz
out
call
gs
ja
cli
daa
lcall
fistpll
dec
mov
jle
loope
push
xor
sbb
lods
push
aam
les
jno
pop
jp
cltd
cmp
outsl
clc
pop
add
push
push
xchg
mov
mov
ds
or
sub
jae
push
mov
dec
xor
in
mov
out
mov
imul
cwtl
jns
call
xor
lcall
mov
fmull
mov
dec
or
imul
idivb
dec
stc
imul
jecxz
cwtl
mov
test
js
xlat
mov
inc
pop
out
or
and
call
insb
adc
lret
popa
in
jecxz
sbb
or
out
xchg
pop
fnstsw
or
mov
mov
or
or
sub
mov
jmp
rclb
cmp
orb
mov
in
jb
mov
mov
jnp
shll
add
arpl
shll
add
dec
sub
idivb
loop
outsb
loopne
xor
push
xchg
inc
aad
in
jg
ret
mov
xchg
fdiv
ret
js
loope
dec
cmp
mov
sbb
mov
mov
call
scas
dec
mov
xchg
jg
push
shrb
inc
or
pop
stos
inc
icebp
xchg
loopne
movsl
sub
int3
movsb
pop
shrb
jb
xlat
aam
bound
outsl
xor
add
sbb
dec
outsl
lock
test
bound
popa
cmpsl
int
and
jne
sub
lds
add
or
mov
dec
inc
xchg
mov
mov
inc
push
push
cmp
sbb
out
jmp
add
or
aam
pop
rolb
cld
and
insl
adc
jns
dec
movsb
jne
sbb
std
xchg
or
dec
jnp
cmp
mov
outsl
inc
xorl
bound
mov
fs
mov
add
icebp
lea
lcall
inc
dec
push
adc
add
arpl
sbb
push
xchg
push
or
pop
mov
int
addr16
xchg
cmpl
lods
bnd
mov
popf
pop
inc
xchg
cmp
in
ljmp
cltd
rorb
adc
cmc
lea
xchg
cmp
or
mov
das
and
sti
dec
jb
mov
mov
xchg
std
mov
hlt
shr
fldt
xchg
aad
out
hlt
cmpsb
loope
xchg
jl
ret
pmulhw
bound
test
and
mov
and
iret
cmp
aaa
fidivrs
ds
in
dec
add
add
adc
cld
cmc
sahf
jo
fwait
in
test
cmp
inc
sub
cmp
inc
or
dec
dec
adc
lock
test
insb
addr16
sbb
cmpsb
push
or
sub
xchg
insb
in
add
and
push
sub
xorl
mov
mov
mov
sbb
dec
out
sbb
punpckldq
sub
jp
jo
jge
shr
mov
lahf
sbb
mov
dec
sbb
es
mov
mov
lds
std
lock
lret
and
into
mov
jmp
lods
and
cmpsl
ljmp
jo
scas
mov
ret
jne
dec
xchg
ja
jnp
xor
dec
movsl
into
adc
mov
aad
sub
mov
mov
inc
push
jo
movsb
adc
call
mov
popf
cmp
add
fcoms
std
adc
add
stos
jle
cmp
mov
add
inc
loopne
jmp
cmp
cmp
enter
clc
or
or
sbb
loop
outsb
sbb
shll
xor
in
sbb
or
fidivrl
push
cmpsb
xchg
and
loopne
dec
shrl
fnstenv
mov
jbe
lret
xor
enter
jecxz
jecxz
cmp
mov
jns
movsl
adcl
sar
into
and
jl
push
out
inc
les
loop
fsub
hlt
jg
out
dec
mov
fwait
mov
icebp
ficoms
adc
xchg
push
shrb
lds
stc
cs
loopne
mov
xlat
pop
xchg
lret
pop
scas
je
ret
imul
mov
xorb
aad
inc
cli
sub
pop
js
enter
inc
daa
jl
xchg
push
into
and
jmp
mov
outsb
pop
xlat
add
mov
xor
pop
push
ficoml
gs
jmp
je
idiv
lret
xchg
lret
adc
mov
shrl
mov
inc
repz
sarb
pushf
sti
cmpsl
aas
mov
aam
jo
inc
popa
rcrb
pop
add
out
push
pushf
and
add
cmp
mov
sub
shll
sub
adc
aad
add
xor
mov
pop
dec
jecxz
pop
lds
ja
loopne
iret
jl
push
dec
mov
cmp
stc
mov
xor
and
add
mov
add
mov
add
aam
cld
adc
xor
rep
mov
dec
adc
mov
fs
test
inc
notb
ds
or
data16
mov
add
xor
push
xor
mov
lret
and
sbbb
add
rol
adc
call
add
jp
lcall
push
aas
xchg
stos
mov
mov
or
fisubs
push
out
repnz
and
in
lea
inc
aam
aam
or
int
out
xor
cmp
inc
leave
js
enter
aas
or
push
xchg
nop
outsl
cmp
add
dec
jle
mov
scas
xchg
xchg
ja
pop
inc
adc
pop
jg
push
cmp
out
jno
sbb
fdivp
cmp
popl
sub
cmpsl
daa
subb
dec
int
dec
scas
and
push
imul
dec
cmpsl
mov
test
mov
into
pusha
add
gs
add
push
mov
mov
les
dec
dec
fisubs
in
mov
and
push
or
fisubrs
mov
aaa
fucom
pop
add
repnz
out
pusha
pop
xchg
or
cld
pop
cmp
shrl
pop
or
or
dec
fsubrs
js
and
or
jp
mov
and
sti
fisubrs
push
loopne
push
add
pusha
cmp
jne
dec
pop
popa
mov
mov
xor
cs
mov
orl
push
dec
das
arpl
jle
jp
or
lods
add
hlt
loopne
insb
and
push
lret
mov
mov
lahf
icebp
mov
in
push
xor
lret
outsl
test
xlat
pop
mov
lods
lcall
xchg
sub
orl
fidivl
out
mov
push
sarb
es
and
popa
inc
rcl
dec
ds
add
mov
jo
fiadds
clc
ficomps
pop
cltd
add
rcll
faddl
cmp
and
adc
test
sbb
add
sbb
push
sbb
call
cmp
push
movl
in
test
stos
insl
mov
xlat
shlb
fisubl
cmp
mov
mov
jno
cltd
aam
mov
fdivrl
sub
stos
sbb
xchg
adc
xchg
mov
cmp
sub
sti
daa
inc
xor
je
pop
cmpsl
xchg
pushf
add
in
fistl
in
pop
add
add
pop
mov
push
or
jns
pop
imul
or
mov
xor
cmc
inc
test
sub
inc
pop
scas
push
mov
ret
push
pop
pushf
mov
popa
scas
insl
sbb
stos
mov
lret
dec
jmp
push
inc
sub
xlat
pop
pop
add
sub
sbb
dec
and
aam
test
xchg
dec
push
mov
ret
enter
scas
dec
sub
pop
mov
test
jecxz
stc
mov
mov
iret
fistps
aad
pop
aaa
xchg
mov
mov
sub
push
fsubl
adc
int
jns
lahf
mov
mov
or
mov
cmp
je
jns
in
cli
jle
inc
sahf
imul
sbb
sbb
mov
sbb
imul
cmp
or
jl
push
pushf
push
jo
pop
dec
popf
test
or
lahf
xchg
pop
jns
cli
nop
out
es
inc
outsb
mull
enter
testb
loope
repnz
scas
jnp
and
push
mov
cld
clc
imul
xor
paddusw
xor
or
out
lock
cmc
jmp
adc
xor
xor
push
rcl
shr
insb
cmc
lcall
repz
inc
fucomp
cwtl
or
add
push
sub
loope
movsb
cmp
pop
in
inc
lods
pop
aam
andb
ss
nop
lods
add
adc
xor
pop
sub
js
in
jl
mov
sub
test
pop
ds
inc
pop
into
xlat
fwait
test
andl
push
mov
sarl
rol
xchg
jbe
or
dec
test
mov
push
mov
add
fimuls
push
ds
inc
popa
pop
cmc
push
inc
aas
rol
mov
adc
inc
pushf
jp
xor
push
inc
mov
loopne
jne
outsb
insb
jge
filds
popf
and
pop
inc
mov
sbb
jnp
mul
adc
xorb
scas
and
and
clc
iret
movsl
pop
leave
add
adc
pushf
mov
imul
loopne
mov
lret
xchg
cmp
mov
mov
std
cmc
faddp
push
test
mov
out
outsb
movsl
add
and
ljmp
popf
sbb
outsb
fsubl
add
shlb
stos
cltd
dec
shl
adc
je
jo
enter
xor
add
push
mov
push
fimull
mov
fistl
jno
in
arpl
push
sbb
jge
mov
push
add
xchg
inc
insb
mov
fimuls
jg
mov
pop
dec
arpl
pop
mov
es
pop
lcall
lock
imul
pop
xor
sbb
add
lods
mov
outsb
pop
sbb
mov
push
mov
xchg
add
filds
xchg
jno
push
sbb
sahf
bound
pop
hlt
xor
mov
in
sub
cs
sahf
lods
jp
cwtl
in
lahf
mov
lods
pop
add
ret
adc
fcomps
mov
in
push
push
imul
shlb
mov
push
xor
aas
jno
fmuls
inc
fnstsw
push
ret
mov
outsb
sbb
repz
or
in
cmp
movsl
mov
cmp
movmskps
rol
popa
jecxz
jbe
scas
inc
push
jbe
aaa
xor
dec
jp
repnz
mov
outsb
pop
cmp
sub
xchg
aaa
adc
push
adc
mov
in
lock
push
scas
sbb
arpl
xchg
pop
cmp
sub
adc
movsb
incb
or
les
dec
add
cmp
mov
fiaddl
es
cmpsb
repnz
sbb
mov
push
jmp
fmull
cmp
xchg
out
inc
or
cltd
xor
stos
rcrb
leave
mov
out
xchg
cmp
xchg
repnz
pop
stos
or
and
xchg
and
incb
test
mov
inc
add
cmp
dec
dec
test
hlt
idivb
add
jmp
dec
rcr
mov
adc
push
and
sbb
das
fdivrs
loopne
jnp
lock
and
shrb
pop
add
jecxz
and
dec
cmpsb
push
xchg
hlt
rorb
loopne
data16
mov
push
sbbb
dec
or
adc
pop
jp
jns
ds
jo
cmp
and
ja
xchg
adc
jg
push
inc
xlat
mov
adc
repz
mov
and
jno
mov
mov
in
cmp
jmp
xlat
jnp
fs
sub
stos
add
mov
adc
cli
shll
dec
clc
mov
imul
orb
jg
add
jno
or
mov
out
int3
lods
shll
stos
jb
mov
dec
xor
push
add
xchg
scas
call
pop
loop
jne
dec
jle
das
jne
stc
xor
popf
aas
iret
mov
pop
pop
jae
sub
dec
popf
test
sbbl
xchg
push
push
mov
jne
lret
xor
xorl
jns
ss
and
xlat
jge
loopne
mov
xchg
jae
cld
sub
mov
adc
int3
inc
sub
sub
push
xor
sbb
inc
icebp
outsb
icebp
jnp
pop
rolb
pop
data16
adc
dec
idivl
xlat
inc
mov
xchg
pop
sahf
adc
scas
mov
lret
mov
jmp
fstpl
xor
adc
orb
mov
adc
or
jnp
fdivrs
and
scas
push
adc
inc
mov
cwtl
fists
pop
lds
mov
daa
mov
push
hlt
push
jae
or
rclb
push
incl
cmp
fs
idivb
sbb
int
pusha
xchg
fs
xlat
popf
push
or
rcrl
cwtl
xor
xchg
loopne
cmp
xor
mov
fisttpll
sbb
jp
popa
fistps
lods
add
dec
fildl
sahf
movsl
xchg
mov
adc
fcmovnu
mov
sub
add
mov
pushf
dec
lea
scas
fsubr
cmp
mov
mov
ret
mov
sbb
test
cmp
into
les
dec
and
shlb
or
add
fistpll
mov
mov
aaa
fcmovne
add
pop
mov
gs
lds
es
test
sub
cmp
jg
pop
in
sub
je
dec
mov
ror
mov
cmpsl
scas
popa
adc
jo
cmp
fs
dec
not
push
rcl
loope
mov
imul
add
cmc
adc
iret
stos
jbe
cmp
mov
add
je
sbb
inc
mov
sahf
imul
in
addl
les
lods
iret
mov
push
adc
jecxz
std
hlt
jne
sub
in
out
outsb
and
pop
test
das
mov
xor
fs
lock
cltd
rclb
cltd
movsb
addr16
imul
mov
repnz
out
call
repz
mov
lret
fidivl
scas
fsubrp
loope
adc
pop
pop
mov
jno
ljmp
mov
stos
lods
or
push
inc
ss
fs
lods
shrb
push
fsubr
sbb
fcomp
sti
sub
imul
xor
cmpsb
mov
es
fistpll
sub
insl
xchg
inc
insb
mov
sbb
dec
or
push
in
mov
xlat
mov
rcrl
sub
dec
add
cmc
je
ficoms
mov
cs
sbb
int3
add
ja
sbb
jp
out
xchg
lret
inc
mov
inc
int
hlt
pop
leave
sub
jecxz
stc
fnstsw
and
pop
and
jbe
jb
sbbb
sbb
xchg
leave
mov
jp
lock
dec
cmp
sbb
push
fists
push
lds
enter
or
insl
lcall
enter
mov
cmovbe
rorl
mov
cltd
jo
cli
xchg
push
std
lcall
mov
lret
push
or
lret
push
jo
or
mov
sub
jnp
notl
repz
imul
and
mov
xor
outsb
xchg
push
mov
aad
jo
jle
jae
xchg
add
lea
jbe
xchg
fbstp
push
mov
sub
nop
add
repz
das
push
dec
rcll
pop
jp
lret
cld
mov
xchg
test
es
xlat
loop
es
mov
cmpsb
idivl
ret
sub
lods
addr16
fs
out
pop
cmpsl
sbb
jmp
jp
jecxz
jb
mov
pop
rclb
inc
inc
or
inc
jno
mov
or
mov
pop
out
shll
pop
sbb
in
pop
in
daa
and
icebp
cmp
mov
in
add
sbb
test
jne
je
jg
in
loopne
jne
jg
push
adc
in
add
aaa
lret
insl
test
hlt
dec
inc
xchg
sbb
dec
subl
push
xchg
add
mov
dec
sarb
outsl
xchg
jecxz
scas
or
aaa
pop
loope
sahf
push
orb
inc
mov
xchg
popa
adc
jl
into
lds
icebp
fsubl
insb
sub
xchg
cwtl
lds
cmp
test
jmp
in
push
outsb
push
xchg
rcrb
xchg
lahf
push
jge
in
mov
cwtl
inc
mov
imul
lods
das
cmp
mov
sbb
pop
mov
dec
or
repz
inc
jne
repnz
fisttps
cmp
lock
xchg
sub
or
dec
clc
rcrb
test
adc
adc
pop
imul
rcrb
dec
cmc
adc
rcll
test
pushf
inc
pop
mov
loope
pop
ds
shlb
or
jo
cli
cmp
das
aas
inc
enter
pop
inc
mov
dec
jp
and
testl
clc
mov
or
out
ficoml
inc
stos
stos
pop
arpl
sbb
outsb
scas
xchg
jmp
repz
ds
xchg
pop
adc
cmp
aam
or
scas
or
xchg
mov
adc
sarl
lock
stos
shlb
sahf
sahf
xchg
or
adc
outsl
in
inc
inc
pusha
mov
and
lods
sub
jae
les
mov
and
mov
push
push
andl
adc
imul
push
pop
pushf
xchg
push
mov
jbe
test
dec
ja
mov
push
xchg
cmp
icebp
in
scas
pop
add
je
pop
ja
fstps
xlat
jle
movsb
or
xor
inc
iret
in
inc
mov
push
rcl
mov
test
ret
add
insl
dec
jno
fbstp
or
ret
dec
push
cmp
xor
inc
inc
mov
cmp
push
mov
sbbb
stc
js
pop
hlt
pop
push
les
cli
and
sbb
sub
dec
cs
aas
out
add
push
stos
mov
adc
xchg
test
leave
or
mov
into
gs
inc
pop
mov
out
lea
add
cmp
mov
lds
ret
test
add
testb
cmpsb
adc
fadds
rcl
sarl
pushf
ljmp
cwtl
pushf
test
jne
jns
lods
or
out
adc
pop
cs
mov
mov
push
stc
subb
sub
sahf
mov
ss
adc
adc
fs
inc
ret
aas
dec
data16
movsb
shll
mov
xor
cmpsb
or
ljmp
jle
adc
outsl
push
pusha
ds
aad
mov
aaa
loop
push
lods
sub
cmpl
push
mov
dec
das
out
push
push
js
in
test
mov
popa
adc
adc
mov
pop
insb
lret
rcll
shlb
add
jmp
jmp
jae
mov
lods
xor
mov
fstpt
jo
ret
push
sti
add
imul
lods
mov
es
cmp
sbb
push
enter
mov
xchg
test
sbb
rclb
les
xor
jmp
push
adc
mov
cmp
pop
loop
mov
xor
dec
aas
fistps
add
rcrl
lea
movsb
dec
push
jno
and
dec
in
mov
sbb
psubusb
jbe
push
mov
mov
ret
lock
push
and
xchg
repz
stc
push
jp
repz
subl
into
call
rcll
imulb
xchg
call
sub
ja
dec
push
mov
aas
sarb
pop
in
pop
jb
jmp
add
rcll
add
push
rcr
fidivs
repnz
sbb
mov
jns
mov
addb
sbb
adc
fwait
scas
insb
fs
mov
out
loop
cwtl
pop
stos
add
pop
jp
pop
imul
enter
adc
cmp
xor
imul
fwait
mov
xchg
int
push
mov
lods
xchg
add
sbb
jnp
mov
lret
movsl
mov
jns
inc
stc
std
xor
mov
xlat
pushl
fsubl
and
test
scas
insb
mov
push
cli
add
mov
sub
out
dec
push
push
outsl
mov
dec
xor
xchg
roll
lods
cmp
pusha
aas
jno
pop
push
mov
sbb
cwtl
in
fcmovnbe
outsl
shlb
popa
sbb
cmp
aas
or
or
popa
rorb
mov
mov
jne
push
fsubl
dec
cwtl
xchg
push
mov
pop
mov
pushf
add
cs
xor
xlat
cmpsl
xchg
or
popf
popa
push
fwait
push
je
xchg
adc
lahf
fisubs
pop
mov
jg
in
es
xchg
test
les
jae
dec
push
or
cld
repnz
add
jb
inc
dec
inc
mov
push
xorb
cmpsl
pop
and
sarb
sti
mov
mov
xchg
ret
mov
mov
mov
mov
ret
mov
repnz
add
mov
add
mov
add
and
mov
cmp
xlat
push
outsl
add
push
xchg
jecxz
and
rdpmc
sub
xchg
arpl
sbb
rep
scas
testl
push
mov
jg
and
in
pusha
push
mov
scas
adc
stc
pop
pop
addr16
push
arpl
cmp
jb
shll
cmp
mov
pop
jbe
mov
dec
cmpb
fstpt
insb
xchg
ret
cmp
iret
cmc
adc
int3
sub
jmp
pop
fadds
add
fstps
out
mov
dec
and
call
mov
rclb
push
push
sbb
pop
mov
je
repz
js
fistpl
jmp
xchg
rol
push
adc
or
lret
adc
lret
dec
ret
out
outsb
std
jle
push
sub
fwait
xchg
dec
movb
sahf
adc
lea
or
outsb
inc
sahf
mov
test
inc
xchg
mull
je
enter
cld
adc
jmp
scas
push
lcall
pop
adc
inc
and
outsb
dec
cmpsl
fwait
inc
add
in
jmp
aas
push
mov
cltd
and
pusha
xchg
push
jecxz
sub
adc
jns
ds
arpl
sbb
add
pop
std
push
aaa
pop
lahf
incb
jns
push
add
testl
add
test
adcb
pop
outsb
dec
sub
xchg
nop
push
push
icebp
cs
push
outsl
int3
lret
fwait
or
xchg
pop
in
or
dec
or
es
push
das
jnp
adc
fbld
gs
pop
shlb
mov
repnz
icebp
orb
dec
cmp
push
cmp
adc
push
pop
in
push
jmp
push
mov
or
mov
ja
repz
push
sbb
sbb
mulb
ss
inc
adc
out
out
push
movsb
jne
shrl
mov
loope
sahf
sahf
xchg
inc
in
mov
or
mov
xor
f2xm1
es
pop
ss
call
lods
ds
jbe
inc
pop
sub
jo
add
out
imul
das
frstor
mov
pop
jns
push
jg
fistpl
and
mov
pop
mov
outsb
push
aaa
add
cmpsb
xor
inc
push
aaa
mov
stos
ror
dec
xchg
or
clc
out
flds
lea
repnz
xor
mov
dec
pushf
cwtl
mov
test
mov
fists
push
cmc
lods
sbb
std
jno
mov
push
xor
mov
mov
sub
dec
mov
mov
inc
add
pop
or
inc
add
mov
sbb
addl
inc
pop
xor
push
ljmp
imul
mull
sub
dec
pop
fwait
stos
dec
pop
mov
pusha
out
adc
dec
aam
dec
out
push
mov
das
out
ret
jmp
mov
call
js
sarl
sbb
loope
mov
xlat
mov
mov
inc
sbb
pop
add
jb
mov
pop
loopne
in
insb
pop
adc
inc
pop
cli
dec
pop
in
cmpl
jbe
jmp
ret
test
shrb
add
fcmovb
and
sbb
mov
int
jg
jo
cmp
aam
cmp
push
add
mov
xor
xchg
fldt
bound
and
stos
adc
pop
daa
cmc
mov
xchg
lret
enter
loopw
pop
rorb
pop
and
jge
sarb
shrd
sar
dec
mov
or
jo
xor
loop
add
mov
mov
or
cwtl
fwait
cmp
adc
andl
push
xor
jmp
std
add
push
shl
adc
xor
loope
push
not
lods
subb
inc
adc
movsl
cltd
mov
mov
mov
lret
xchg
pop
xchg
mov
insb
add
sbb
test
adc
push
or
jp
xor
stc
push
dec
adc
gs
ds
aas
iret
inc
aas
add
cmp
pop
notb
repz
aas
jl
jg
das
adc
jno
dec
sub
cmpsb
adc
jecxz
mov
cmpsl
sbb
pop
push
cmp
ja
nop
sub
or
inc
or
iret
xor
dec
iret
out
sti
and
adc
sbb
dec
jne
mov
loopne
pop
lea
test
sbb
pushl
subb
jmp
mov
inc
cmp
mov
fimuls
cmp
add
incl
cmpps
and
xchg
mov
daa
cmpsb
les
sbb
outsb
in
mov
test
ss
xchg
fwait
adc
out
leave
pop
bound
or
sub
sbb
jg
aas
add
adc
lock
leave
push
cltd
pop
mov
add
scas
push
cmp
mov
negb
call
sub
pop
pop
cltd
and
sub
sbb
adc
xchg
sub
sti
out
jmp
and
sbb
sbb
ret
xchg
mov
leave
push
and
push
pop
add
nop
mov
arpl
adc
loopne
test
movsb
add
cwtl
leave
loopne
call
inc
jmp
push
ds
xor
lods
in
jbe
push
sbb
lea
xor
adc
sub
es
inc
das
mov
pop
push
mov
inc
out
pop
xchg
sub
cmpsl
xchg
sbb
mov
jne
lock
les
insl
jbe
cs
std
sub
sub
pop
xchg
and
jg
jmp
aam
fdivr
lock
inc
jnp
imul
dec
test
push
push
hlt
jl
pop
in
add
jne
stc
mov
pop
out
inc
scas
xorb
sti
fstps
push
cmp
cmp
mov
lahf
mov
push
cli
into
jle
shrl
jp
lcall
mov
loopne
mov
pop
jp
sbb
lret
popa
popa
into
mov
add
mov
adc
inc
cmpsl
int
add
xchg
pushf
bound
or
jge
jne
lret
dec
jecxz,pt
inc
pop
mov
mov
out
add
outsb
rorb
sar
sub
mov
getsec
rcrb
leave
sub
movsb
not
push
stos
jecxz
jnp
stc
pushf
cli
scas
loopne
pop
sbb
orl
jae
je
xorb
outsb
cltd
jmp
mov
jl
nop
ss
test
test
pop
test
jb
push
jne
mov
or
scas
pop
add
xchg
lds
adc
adc
add
lea
pop
retw
stos
insl
jle
stos
cmpsl
aas
imul
icebp
adc
fucom
cmpb
mov
adc
sbb
popa
repz
bound
mov
mov
or
xor
xor
hlt
repnz
pop
lret
or
xor
add
fs
ss
adc
pop
movsb
test
bound
ret
js
inc
test
or
mov
jb
lods
adc
dec
adc
push
call
mov
imul
cmp
mov
in
adc
mov
jle
test
stos
enter
push
add
inc
call
or
cmp
out
mov
pop
xor
iret
out
sub
pop
push
xchg
adc
xchg
divl
clc
std
push
xchg
mov
jge
mov
int
popf
xchg
adc
lret
mov
cli
pop
lods
fildll
and
push
mov
sub
adc
sub
mov
imul
mov
mov
lret
pop
push
andl
xchg
lret
adc
xchg
mov
aam
repz
push
bound
aad
js
sahf
cmpsl
pextrw
pop
or
out
ficompl
or
and
adc
mov
fimuls
pushf
orb
pop
mov
sub
dec
or
inc
xor
lock
adc
in
jo
jmp
xor
mov
sti
xchg
hlt
and
nop
ja
xchg
das
mov
mov
pop
mov
mov
dec
xchg
push
sub
icebp
mov
pushl
stos
xor
out
call
jo
mov
mov
inc
jb
push
or
jge
pop
cmp
xchg
fidivrl
push
in
int
inc
and
dec
repz
mov
and
pop
dec
sbb
mov
test
ret
test
mov
or
cmp
cmp
xchg
cmp
add
xchg
inc
add
fcompl
sbb
or
insb
xor
cmp
mov
jp
rcl
jbe
push
fmuls
jns
sbb
mov
icebp
inc
xlat
push
adc
mov
sbb
std
push
stos
xchg
nop
js
fcomps
test
mov
cmc
xchg
fisttpl
inc
leave
jp
pushf
pop
mov
jbe
xor
jbe
sbb
jnp
inc
add
push
cmpsl
arpl
xchg
idivl
or
push
lret
pop
mov
push
pop
daa
cmpsl
xor
mov
cs
stos
cmp
or
nop
adc
mov
push
out
dec
cmpsl
icebp
mov
mov
test
and
out
loope
lret
int
mov
xchg
les
lds
adcb
ficompl
es
insl
test
jg
icebp
jno
and
daa
mov
push
ret
mov
sar
adc
stos
adc
insl
mov
aam
roll
shr
inc
fidivl
cmp
es
mov
inc
jb
xorl
adc
xchg
mov
movsb
sahf
clc
mov
mov
push
inc
sbb
cltd
shll
mov
adc
orb
cmp
and
fucom
xchg
or
adc
dec
lea
sbb
fbld
dec
mov
or
fmuls
stos
xchg
pushf
dec
into
aas
scas
xchg
jae
add
pop
cmp
dec
jmp
mov
jno
cli
push
in
mov
mov
jns
push
push
inc
xor
mov
mov
scas
cmp
adcb
test
pop
jnp
push
adc
out
stos
add
sbb
cmp
aaa
xor
test
ljmp
aaa
repz
jmp
pop
iret
or
jno
stos
push
hlt
flds
cmpsb
lret
mov
leave
loope
xchg
or
scas
cli
xchg
or
scas
ss
cld
push
jge
repz
fistl
cwtl
pop
jae
jge
sub
sarl
cltd
or
mov
xchg
out
fwait
dec
push
shll
mov
fsubrl
jge
dec
jp
addr16
adc
stc
dec
xor
pop
dec
rcr
lds
mov
push
and
dec
popf
js
jns
into
loop
pushl
dec
dec
dec
jecxz
mov
add
fistpll
or
and
xchg
mov
addb
hlt
in
xor
enter
add
cmpsb
in
pop
sbb
jecxz
cmp
mov
push
jbe
movb
sub
lcall
pop
popa
adc
or
add
inc
insb
setbe
jno
filds
pop
push
xor
iret
lds
jge
mov
add
enter
mov
std
test
xchg
xchg
mov
mov
adc
imul
pop
cmp
cmp
out
aas
stos
mov
jg
mov
pushf
lods
dec
xchg
outsl
xchg
pop
add
icebp
sbbb
cmpsb
cli
cli
icebp
sbb
iret
xchg
dec
add
shrl
mov
int3
dec
dec
pop
clc
mov
push
inc
lods
mov
int3
pminsw
mov
fs
shl
je
pop
sub
ja
jg
stc
inc
mov
mov
std
xor
dec
scas
adc
cmc
pop
hlt
push
lods
jb
mov
sub
inc
add
bound
push
dec
rorl
cld
or
ret
insb
and
cmc
push
fisubl
repz
mov
lret
repnz
clc
jne
push
sbbb
adc
xchg
lret
jecxz
test
lret
stc
add
test
push
pop
lea
ljmp
mov
xor
add
stos
adc
push
sbb
int3
inc
push
repz
out
dec
or
and
test
iret
or
xchg
mov
dec
das
push
lret
ret
sub
in
push
aas
dec
mov
jns
push
addr16
add
clc
jg
cli
cmpsl
iret
fldcw
dec
inc
fdivrs
xor
mov
adc
and
pop
jb
pop
adc
and
aad
stos
cmp
fisubrs
cltd
add
ljmp
in
inc
ljmp
dec
push
push
sbb
push
jmp
push
jmp
and
jp
fimull
fildll
mov
test
dec
dec
int3
insb
cmp
ds
mov
pop
mov
adc
pop
mov
out
ret
mov
psrlw
arpl
pop
and
cmp
pop
jle
into
mov
in
pop
push
popa
adc
jle
sub
mov
test
int
mov
pop
es
popa
jbe
mov
sub
bound
sub
out
repz
inc
icebp
aaa
repz
je
inc
mov
inc
push
out
movsb
inc
in
add
in
mov
xlat
stos
lahf
jno
jmp
mov
dec
xor
add
inc
cmpsl
stc
jo
lods
je
jne
adcl
hlt
insl
push
add
insl
jns
es
mov
rcrl
adc
adc
sub
mov
fisubl
push
jl
mov
mov
iret
inc
test
sub
pop
pop
mov
insb
push
xchg
cmp
xchg
imul
and
sbb
cs
inc
xchg
fsubrl
ljmp
out
iret
adc
add
adcl
xchg
adc
xor
adc
xor
into
inc
cmp
push
nop
mov
fcomps
ret
jo
and
and
sahf
loop
cs
popf
pop
xchg
push
or
sbb
sub
addl
imul
cmpsb
fcompl
xor
nop
mov
or
out
xchg
or
loop
adc
sbb
inc
jle
imul
into
xchg
add
mov
mov
es
jg
xchg
cmpsl
mov
sbb
mov
xchg
enter
jo
iret
das
mov
or
cmp
fsub
xchg
fisttps
pop
xor
lds
out
out
iret
popa
mov
fucomi
add
aas
test
shll
sbb
cmpsb
sub
aad
das
xchg
jae
mov
adc
insb
movsl
shl
cld
bound
inc
jge
cs
mov
mov
mov
ja
xchg
pop
mov
jne
jl
fnsave
cwtl
sti
jne
cs
sub
ss
inc
mov
lods
sbb
push
ljmp
leave
xchg
in
cmpsl
or
pop
fsubl
push
fdiv
gs
dec
sub
add
mov
xor
clc
cmp
inc
or
sbb
pop
dec
in
xchg
rcr
lock
sbb
icebp
rcrb
cmp
or
push
repz
pop
pop
mov
mov
pop
jnp
mov
call
xchg
sarb
pop
dec
ret
dec
dec
mov
jae
fstpt
dec
inc
out
aas
jb
mov
cltd
add
jns
xchg
orb
jle
and
fildll
push
cltd
scas
ja
cmc
cmp
cld
pop
fisubs
lahf
stos
in
test
lock
addr16
fnsave
and
add
sub
jnp
mov
pop
test
daa
stos
push
add
gs
fiadds
pop
stos
gs
lods
daa
mov
lea
or
out
pushw
cmp
nop
sub
push
out
insl
and
test
out
sbb
fucomip
lods
dec
cmp
popf
push
inc
cmp
pop
mov
mov
mov
push
inc
inc
or
movsb
inc
scas
add
inc
testl
jmp
out
rcrl
inc
loopne
mov
adc
adc
or
pop
inc
std
jg
xchg
aas
lret
in
sbb
push
lock
inc
addr16
cld
mov
jl
mov
adc
ja
int3
mov
dec
out
mov
dec
testl
pop
ds
shr
scas
jno
jl
xor
int3
or
out
and
pop
aaa
pop
lds
stos
shll
ficoml
fistpl
xchg
sub
sub
adc
adcb
ja
inc
les
mov
repz
push
or
push
loope
jl
sbb
cmp
inc
adc
mov
bound
dec
xchg
sbb
sub
sub
fisttpll
insl
out
mov
dec
or
gs
cs
mov
or
xchg
fadds
sub
add
les
hlt
mov
xchg
lds
and
sbb
or
mov
mov
jb
cmpsl
outsl
test
push
dec
inc
adc
or
jle
mov
mov
aas
xchg
sub
dec
dec
sarb
int3
mov
pop
pop
loop
sbb
dec
ljmp
push
xor
cmpsb
out
cltd
pop
cmpsl
insb
sahf
cltd
xchg
lea
jae
xlat
or
jle
lods
jl
sbb
outsb
xchg
or
cmp
mov
sbb
or
pop
push
mov
mov
pop
iret
aaa
mov
in
jge
movntq
push
das
inc
inc
sbb
cmpb
mov
test
notl
mov
xor
push
pop
mov
inc
dec
jmp
daa
inc
test
push
mov
mov
or
xchg
ja
rclb
loop
push
push
pop
lret
in
das
jl
int
aam
popa
addr16
jmp
nop
movb
push
pusha
loopne
out
mov
or
lret
inc
xor
outsl
ret
test
iret
xor
inc
sbbb
mov
sub
dec
xor
pop
flds
fldl
sete
data16
push
loopne
in
test
xlat
push
xchg
sar
in
stos
incl
popf
movsl
and
cmp
pushf
mov
in
push
arpl
in
test
cmp
out
dec
xchg
jns
or
push
js
ja
repz
mov
and
cwtl
ror
dec
jmp
das
push
inc
add
cs
and
arpl
dec
xor
sub
movl
sub
or
and
sahf
and
push
jns
xchg
fcmovnb
dec
or
push
jno
xor
xor
push
and
xor
push
mov
out
pusha
jecxz
push
ret
cs
popf
fcmovne
sub
loopne
fwait
lcall
inc
push
push
pushf
sbb
sub
lcall
js
push
mov
xor
push
stc
push
mov
adc
xchg
xor
jl
dec
imul
imul
pop
stc
cmp
cmc
in
add
pop
xchg
std
sub
out
sbb
subb
nop
clc
push
jp
lcall
adcb
ret
cmp
xchg
push
loope
insl
in
or
or
cld
sub
insl
jno
mov
inc
ds
xor
inc
and
inc
inc
xchg
pop
mov
ljmp
fidivrs
jg
mov
enter
mov
data16
sub
pop
test
pop
lods
sbb
call
xchg
xor
push
or
test
loope
dec
scas
test
hlt
dec
dec
inc
and
imul
jmp
stos
bound
call
jmp
cmpsb
fnsave
add
in
lret
leave
xchg
inc
movsb
jecxz
aad
dec
pop
outsb
es
mov
ja
andb
sbb
adc
fwait
mov
jmp
adc
jmp
xchg
gs
sub
adc
movsl
rclb
adc
push
enter
cmp
arpl
mov
enter
inc
fwait
clc
mov
push
cmpsl
sub
push
push
xchg
out
lds
adc
sbb
out
stc
int
jnp
dec
dec
jo
adc
insb
out
sbb
mov
iret
pop
mov
pusha
xchg
in
pop
mov
inc
and
cmp
add
pop
outsb
sbb
mov
xchg
mov
and
mov
lock
sub
sub
jecxz
sub
leave
mov
gs
js
inc
adc
mov
sbbl
or
das
jb
popf
xchg
out
cmp
pop
aam
cmp
push
push
psraw
mov
sub
jno
dec
or
fwait
inc
jnp
jno
or
sbb
jle
sub
lock
arpl
push
rclb
pop
or
test
cs
sub
inc
cmp
adc
aad
add
in
push
push
pop
addr16
pushf
sar
pop
sub
sub
fldenv
pop
scas
jp
aas
iret
push
mov
dec
rclb
xor
pop
fadds
pop
ljmp
mov
and
lcall
dec
adc
rclb
hlt
xor
incl
sub
nop
xor
mov
jl
shrl
cmpb
sbb
call
mov
mov
xor
lock
rcrl
sub
cwtl
clc
outsl
jbe
outsl
lret
jae
stc
pop
mov
enter
cmp
cmp
insl
arpl
jo
add
jmp
mov
inc
fiadds
fstps
lods
pop
push
sbb
outsl
dec
popf
scas
pop
xor
jne
jmp
mov
vandnps
mov
mov
dec
sar
test
jmp
xchg
jns
cmpsb
mov
or
fildl
jbe
pop
add
ret
out
xor
inc
scas
ret
mov
subl
mov
cmp
jo
shll
jne
repnz
fwait
fs
cmp
movsl
and
xchg
jns
add
xlat
jl
outsb
test
popf
clc
jge
xorb
std
jo
add
dec
jnp
pushl
push
fcmovnu
jb
or
dec
pop
mov
inc
outsb
fmuls
pop
pop
push
adc
mov
and
mov
out
clc
rcrb
cs
or
mov
inc
and
sbb
inc
stos
and
in
stc
ss
cli
ret
or
je
adc
lret
in
mov
rorb
mov
cld
sub
shrb
sbb
cmp
add
js
or
push
sub
outsb
jne
mov
jp
jae
jns
cli
js
push
cmp
cmpsl
pop
mov
out
in
sbb
insl
mov
xor
aaa
cmp
pushl
fbld
xchg
xor
sbbb
mov
mov
mov
add
push
int
sub
sub
out
jbe
andl
fcmovnbe
into
xchg
cmc
es
xlat
movsb
sub
scas
inc
mov
mov
out
notb
aam
push
dec
mov
add
jnp
repz
loopne
push
pusha
mov
push
sbbl
pop
js
inc
mov
add
dec
inc
dec
shr
rcr
cmp
push
pop
cmpl
and
cmp
sub
fcoms
outsl
jae
mov
lods
inc
icebp
xchg
fwait
sbb
add
into
in
sahf
addb
hlt
int
push
pop
and
pop
scas
lds
icebp
fwait
out
pushw
scas
ret
test
xchg
jb
aaa
insl
or
add
popf
arpl
les
mov
or
lods
lahf
scas
fldl
test
mov
jmp
fstps
and
test
icebp
mov
clc
lock
add
push
out
push
popa
das
push
rorl
push
pop
jnp
int
inc
enter
mov
stos
fnstenv
mov
mov
test
and
scas
repz
dec
enter
into
pop
insl
jno
enter
push
xor
repnz
test
out
cli
cwtl
or
pop
and
or
test
jl
mov
add
outsb
dec
jbe
adc
fists
stc
imul
adc
pop
call
loop
aas
or
fistps
lods
fs
or
movsb
pusha
test
xchg
imul
inc
xlat
jle
sbb
push
pop
sub
es
adc
jl
pop
imul
movsl
ficomps
out
cmp
mov
lahf
faddl
fimull
or
and
fnstcw
insl
icebp
stos
daa
jo
cld
fstpt
push
loope
mov
add
andl
inc
lret
cltd
clc
xor
cmpb
jae
add
jb
jnp
leave
inc
mov
inc
jb
adc
int
xor
cs
jns
jle
pop
adc
dec
push
dec
iret
sbb
sub
pop
xor
outsb
lock
push
movsl
or
jbe
xchg
addb
ss
sub
xor
loop
and
pushl
out
cs
mov
sbb
xchg
imul
in
adc
xchg
bound
ds
push
arpl
push
repnz
jmp
and
insl
cmp
mov
or
cli
push
cmpb
adc
cwtl
loope
push
xor
pop
dec
lods
scas
jle
sbb
cmp
mov
xor
mov
pop
sbb
push
hlt
into
push
mov
mov
add
loop
or
imul
cmpsl
cli
mov
xchg
scas
pushf
and
nop
pop
fwait
lahf
pop
and
xchg
mov
daa
xchg
jecxz
inc
push
jb
dec
sar
jb
cmpps
out
sub
push
mov
cmp
into
mov
xchg
or
das
addb
sbb
pop
jns
sti
jae
fidivrs
mov
orb
xchg
stos
or
inc
inc
inc
pop
testb
xor
xchg
adc
cmp
repz
mov
pop
inc
bound
mov
jge
lret
adc
mov
fmul
inc
test
decb
and
inc
pop
int
icebp
mov
cmp
imul
xor
cmp
test
fs
dec
mov
jb
jbe
sub
cmc
mov
loop
mov
fs
test
sbb
fs
cmpsb
stos
pop
xchg
lret
xchg
inc
scas
imul
repz
js
ja
jbe
mov
rcrl
jbe
shrl
pop
loopne
sub
test
cltd
add
inc
lock
outsb
adc
push
sti
pop
or
mov
cli
lods
addl
sti
int3
jo
sub
test
dec
in
cmp
cs
std
pop
cmovs
scas
testb
and
daa
and
fistpl
loope
jb
cltd
in
fcomi
mov
data16
popa
jle
or
inc
mov
push
enter
mov
and
aas
fadd
xor
mov
idivl
xchg
jmp
jmp
xchg
add
or
gs
pop
stos
ss
ds
jae
loopne
outsb
push
xor
jae
hlt
or
xchg
adc
ljmp
mov
lret
punpckhbw
sbb
jne
add
pop
in
fcmovnbe
jb
lcall
bound
push
push
enter
adc
loope
call
dec
xor
or
fidivs
fcmovnb
pop
fisubrs
fcmovbe
mov
jb
sbbl
push
out
rclb
cmp
movsb
add
mov
mov
add
xor
xor
mov
xlat
clc
sbb
mov
call
pop
in
mov
mov
int3
inc
pop
stos
add
inc
ja
cmp
cmp
stc
adcb
cmp
and
hlt
and
adc
xchg
mov
jne
scas
lcall
iret
xchg
pop
cltd
scas
pop
push
stos
ja
adc
xlat
adc
dec
and
je
cli
ret
mov
icebp
jmp
cmp
cmp
pop
push
or
inc
ret
sbb
push
pushf
inc
push
test
sub
shrb
daa
mov
or
xor
dec
jne
lods
or
push
mov
adc
cmc
outsl
fstpl
aaa
cmp
inc
xchg
pop
imul
out
aaa
in
jp
cmp
scas
push
dec
xchg
add
push
inc
sub
pmulhuw
sbb
fistpl
push
add
mov
popa
mov
jp
mov
shl
fsubl
lahf
std
mov
pushf
jns
imul
test
imul
mov
dec
pop
clc
mov
fldl
sub
shr
jae
faddl
movsb
mov
jne
sub
ljmp
adc
add
sbb
nop
sub
xchg
sbb
push
out
sub
rorb
loopne
inc
jge
clc
mov
mov
jecxz
inc
jns
push
jge
out
sbb
add
pop
push
aad
sbb
pop
jb
out
and
cli
jge
sbb
clc
aad
or
call
es
adc
hlt
dec
int
pop
sbb
inc
lret
jnp
in
insl
pop
fsts
sbb
sahf
xlat
mov
andb
cmp
fwait
cs
jecxz
inc
xchg
cmp
push
mov
mov
mov
flds
jne
mov
cli
es
ds
lock
jecxz
cmpsl
jge
sub
repnz
lret
and
or
sbb
sub
cmp
rorl
inc
push
pop
mov
sahf
jns
pop
adc
cmp
std
ret
cmpsb
and
fstpt
dec
stc
mov
pop
shl
pop
and
clc
cmpsb
das
xchg
into
mov
jnp
lret
sub
dec
sub
adc
xor
adc
push
call
outsb
cmp
lret
inc
test
jbe
cwtl
mov
popf
fsin
ljmp
loop
daa
xor
jl
add
mov
mov
mov
mov
push
push
fucomp
push
ds
outsl
sbb
stos
push
sbb
mov
gs
inc
xchg
or
mov
lahf
inc
rolb
cmp
push
xchg
test
sbb
lds
icebp
mov
cmp
pop
inc
test
lret
adc
int3
loopne
aam
in
ret
out
jl
or
ds
fsubr
xchg
push
loop
nop
aas
test
scas
repnz
fdivs
ret
pop
adcl
inc
popf
fsubrs
and
pop
dec
jmp
mov
fmull
cwtl
and
mov
andb
test
mov
sarl
pop
test
xor
mov
stc
jae
cmpsl
sti
sahf
dec
mov
jg
inc
in
arpl
mov
inc
dec
jne
out
xor
jge
lahf
cmp
gs
ret
mov
cmp
add
iret
pop
insb
mov
jno
jle
fwait
ret
cmp
and
incl
adc
dec
icebp
hlt
mov
mov
push
scas
xchg
push
sbb
int3
mov
faddl
out
out
xchg
push
stc
fildll
mov
mov
pop
push
mov
rolb
cmpsl
stc
pop
shr
fld
jns
mov
fcmovne
inc
mov
outsl
pop
sub
sub
daa
sub
test
mov
repnz
cmp
lcall
lea
scas
sti
inc
insb
sbb
dec
mov
jge
dec
adc
mov
js
push
mov
or
loopne
pop
jbe
stos
iret
and
pop
fwait
imulb
aad
imul
adc
and
and
cmp
scas
mov
mov
push
aaa
xor
fstpl
pop
and
rcrb
xchg
rorl
push
push
mov
in
xchg
fisubrs
in
fistpl
push
imul
or
lods
xchg
rorb
mov
mov
jg
addl
daa
mov
pop
decl
mov
in
inc
xor
aad
sbb
pop
sbb
adc
sub
pop
push
push
cmp
mov
ret
imul
and
push
fisttpll
push
jl
sub
setnp
sub
adc
lods
call
scas
jmp
cmp
stos
cmp
jl
push
lods
adc
enter
sahf
lret
adc
fildl
jae
test
or
jo
inc
adc
xchg
jp
dec
jmp
stos
and
xchg
lret
ret
or
cltd
enterw
dec
scas
lret
xor
xchg
aaa
jae
sbb
xchg
addr16
sub
movsl
jmp
add
push
cmp
mov
lds
sub
adc
mov
in
das
mov
adc
andl
add
mov
xor
test
mov
cmpsl
jecxz
cmp
mov
loop
fistps
mov
daa
sub
imul
fdiv
setg
hlt
mov
mov
fisubs
fbld
lock
add
mov
jae
sarb
test
aam
inc
push
mov
test
loop
aam
cmp
rcr
adcb
fbld
pop
mov
cmp
pop
xor
mov
sbb
or
jg
shll
sti
fildl
lds
scas
cmpsl
push
ror
mov
jnp
in
jo
in
push
push
sub
jno
ljmp
xchg
push
scas
mov
add
mov
dec
inc
pop
sbbl
push
inc
test
mov
sbb
cltd
inc
lret
fadds
in
nop
pop
arpl
pusha
jecxz
lods
outsb
int3
scas
and
xor
pop
sub
xor
test
repz
adcl
out
or
xchg
les
sti
imul
cmp
dec
xor
xchg
mov
and
mov
push
mov
jae
sti
sub
xchg
inc
repnz
daa
loopne
cmp
stc
insl
ffreep
test
loop
jb
inc
adc
jmp
jne
push
pushl
jne
inc
fcompl
push
mov
jg,pn
jae
das
adc
and
jmp
xchg
lret
cmp
jae
jno
jne
xchg
mov
dec
inc
mov
adc
mov
mov
les
push
addr16
and
cmp
dec
ret
dec
push
ror
daa
adc
ret
xchg
rcll
pop
in
lahf
inc
clc
shrb
mov
inc
mov
rclb
push
negb
push
loope,pn
pop
ret
addr16
cmpsl
fstps
fimuls
add
mov
or
dec
pop
sub
inc
movsb
imul
add
pusha
add
xor
lods
mov
mov
icebp
faddl
inc
mov
leave
roll
xchg
xchg
adc
cmp
rcrl
shlb
popa
call
stos
lods
in
xor
sub
jp
addr16
or
mov
mov
jno
sub
aaa
sbb
sub
in
mov
inc
sub
ja
cld
mov
mov
les
push
pop
xor
cmp
fildl
pop
popf
jge
jmp
ret
xorl
adc
or
xchg
movsb
mov
xchg
sbbl
inc
jb
fisubs
adc
mov
lods
lock
movsl
add
ret
xchg
popa
rorb
sbb
inc
ljmp
fistl
fcoml
mov
or
flds
add
mov
int
stos
sbb
xor
inc
js
mov
mov
fldt
push
movsb
or
dec
mov
addr16
cmpsb
jno
mov
aad
cli
shlb
xchg
pusha
mov
les
xchg
idivb
outsb
fwait
mov
mov
repz
ds
pop
icebp
icebp
push
or
test
aas
and
pop
cli
mov
not
jp
movsl
adc
xor
in
push
aad
dec
cmp
sbb
outsb
push
sub
add
stos
call
outsb
inc
and
adc
sarl
fcomps
adc
cmp
xchg
push
je
inc
cmp
xchg
or
adc
adc
pop
cld
mov
imul
repnz
inc
sub
scas
pop
and
add
mov
adc
je
movsl
lret
outsl
cmc
mov
out
mov
sub
mov
sub
sahf
and
mov
adc
xchg
hlt
sbb
add
insl
dec
outsl
roll
movhps
and
jl
xchg
hlt
cmp
jnp
pop
jno
fdivs
sahf
in
roll
adc
sub
orb
push
push
repnz
mov
pop
test
lock
sti
jmp
lock
adc
mov
sbb
sahf
shll
aaa
cmp
in
out
sbb
sub
lret
nop
mov
je
inc
cmpxchg
sub
sub
loope
push
in
dec
jp
stos
pop
lods
data16
testl
ljmp
pop
cmc
repnz
scas
and
xchg
adc
roll
in
and
gs
fnstsw
int
or
movsl
mov
fwait
adc
cmp
sub
xor
rclb
push
ja
xchg
js
cmp
mov
fwait
dec
int
fs
arpl
pop
daa
inc
aaa
lahf
adc
xlat
enter
inc
es
cmpxchg
xchg
push
pop
xchg
add
mov
not
divl
clc
das
cs
jl
mov
jle
mov
insb
push
mov
call
xchg
cmp
mov
mov
ss
pop
pop
mov
outsb
inc
in
out
mov
int
pop
xor
inc
mov
or
fildll
xchg
add
lods
xorl
cwtl
pop
jg
cmp
adc
in
fisubrl
adc
sbb
scas
jge
sbb
lahf
pop
jb
adcl
arpl
aad
stos
leave
push
lahf
aas
mov
pop
inc
rcl
int3
call
inc
mov
insl
push
cmp
fldl
clc
push
push
inc
xchg
das
ds
mov
inc
inc
ja
pop
std
cltd
dec
mov
loopne
mov
movsl
mov
xor
testl
mov
aad
dec
insl
xlat
mov
jbe
scas
mov
add
add
sub
sub
jle
rorb
mov
cmpsb
subb
fnop
fwait
push
mov
lea
fsubrp
xchg
or
in
into
scas
imul
cmp
fistpl
add
push
mov
mov
xor
pop
add
lock
dec
pop
movsl
mov
hlt
dec
fldcw
dec
pop
xor
std
orb
or
hlt
shll
jmp
adc
fwait
or
popa
decb
inc
icebp
inc
repz
dec
sbb
adc
jb,pt
insl
fwait
ljmp
mov
lods
stc
and
divb
nop
mov
inc
add
shl
sub
in
or
mov
in
ficompl
int3
pop
xor
fisttpll
sbb
mov
lcall
and
xor
cmp
add
dec
cld
dec
mov
dec
mov
fs
andb
inc
xorl
loope
pushf
push
cwtl
push
addr16
add
pop
ja
mov
pop
mov
subl
notb
cld
loope
inc
test
sbb
call
imul
or
cli
jl
push
popa
scas
push
shrb
sti
jge
pushf
ds
hlt
lcall
incl
lds
repz
jb
lahf
ror
mov
xor
arpl
pop
ret
fsub
add
mov
iret
cli
add
sti
xchg
int
mov
adc
push
negb
mov
and
fmul
sub
cltd
push
inc
mov
data16
test
pop
mov
ljmp
pusha
push
lcall
int3
es
jae
int3
imul
and
jns
xchg
aam
ja
mov
outsb
adc
test
mov
mov
bound
outsl
into
cmpsl
add
in
jl
jl
jns
insb
adc
mov
popa
cmp
enter
mov
lea
push
or
pop
ret
xchg
lds
scas
push
dec
mov
pusha
push
inc
std
mov
jo
test
pop
test
rcrl
mov
mov
iret
repnz
jge
rcll
andb
faddp
lcall
push
adc
daa
adc
into
inc
jne
jle
xchg
insb
lret
pushfw
clc
cld
add
insb
adcb
fcoml
push
sub
push
addr16
test
loopne
inc
in
push
movsl
or
cmp
stc
leave
pop
js
mov
cld
and
push
addr16
push
add
mov
inc
imul
aaa
sub
mov
je
push
stc
movsb
nop
adc
aad
pop
pop
mov
data16
pop
int
adc
adc
mov
cmpsb
sub
das
loopne
pop
cmp
les
adc
mov
mov
out
xor
mov
mov
or
lods
dec
jno
mov
pop
push
mov
dec
popl
aam
mov
sbb
fsubl
xor
jmp
fsts
jne
loopne
add
lea
cs
js
hlt
xor
clc
dec
int
test
in
and
xchg
cli
adc
cli
addr16
sbbl
inc
iret
xor
bound
aas
push
out
in
je
repnz
lret
lea
lret
mov
jae
push
pusha
lock
adc
inc
inc
es
xor
add
pop
test
pop
rorl
outsb
sbb
sub
adc
aad
or
dec
cmp
fstpl
xchg
mov
push
add
scas
or
ds
hlt
pop
cmp
mov
jne
and
xchg
std
adc
lock
xor
jg
and
dec
fsin
aas
jmp
add
lret
mov
stos
push
or
mov
orb
xor
add
jl
mov
ss
adc
imul
sbb
popf
mov
adc
lock
nop
int3
cwtl
add
outsb
ja
dec
adc
inc
test
xchg
inc
hlt
cltd
arpl
mov
nop
cmp
fwait
sbb
shlb
jmp
push
mov
loope
jnp
bound
arpl
jns
cmp
cli
insl
pop
push
jnp
lcall
sub
rcrb
ja
daa
pop
jne
fcmovbe
pop
adc
fdivrl
mov
cmpsb
or
andb
sub
sarb
sbb
push
jbe
hlt
and
loop
sbb
es
push
movsb
dec
mov
sahf
cmp
pop
xchg
push
insl
push
dec
sarl
add
imul
push
jns
and
stos
outsb
and
dec
cmp
movsb
stc
dec
addr16
xor
rcrb
inc
je
add
mov
mov
jbe
push
dec
jno
xchg
scas
jns
pop
add
dec
cltd
enter
push
push
jecxz
push
aas
mov
sbb
and
mov
adc
fadds
repz
push
adc
inc
fadd
dec
xchg
pop
push
sbb
les
in
fcomps
cmp
aad
sbb
jns
test
jae
or
inc
popf
lods
cmpsb
mov
adc
test
cmp
lea
push
mov
outsl
ret
inc
mov
shlb
icebp
mov
mov
ss
jmp
mov
xchg
out
stc
dec
iret
sahf
inc
sub
icebp
cmpsb
xor
push
pop
xor
gs
push
aas
push
or
daa
pop
or
pop
popl
fstps
lcall
dec
in
nop
mov
repnz
inc
fidivrl
addb
xchg
das
repnz
jl
into
shlb
sbb
or
xchg
adc
adcl
cmp
arpl
fdivp
rcll
pop
aas
testb
sbb
and
or
lods
xchg
lret
fmuls
fldenv
cs
dec
mov
cwtl
fildl
cmp
or
and
icebp
sbb
imul
pusha
repnz
mov
hlt
dec
lock
sub
sbb
lret
bound
jmp
dec
mov
cltd
dec
sub
xor
or
push
and
cmp
sub
jae
mov
mov
fwait
test
mov
daa
dec
mov
add
jecxz
rorl
jge
cld
int
fldcw
or
mov
sbb
in
mov
dec
xlat
loopne
or
testl
mov
sub
in
lret
mov
fwait
lret
push
js
mov
lret
fs
mov
and
jl
adc
mov
aaa
lods
sbbb
or
push
cwtl
sub
popf
dec
cmp
rcl
dec
rcrl
xlat
neg
xchg
mov
popl
mov
pusha
or
cmc
mov
das
test
pop
lret
pop
ret
jne
mov
int3
mov
jnp
mov
test
pusha
mov
jg
inc
out
aam
les
dec
mov
sbb
jb
js
add
xor
das
ljmp
adcl
sub
loope
ffree
adc
jns
lods
inc
es
in
into
dec
jecxz
leave
fwait
bound
rol
fwait
xlat
clc
jmp
adc
fistpll
mov
loope
xor
mov
mov
pusha
inc
mull
sbb
dec
ficoms
add
push
inc
shlb
push
push
stos
lret
add
out
cmp
fst
loopne
jecxz
aad
mov
enter
push
xchg
add
xchg
repz
lods
fnstsw
dec
push
push
xchg
subl
lea
xor
adcb
pusha
in
mov
in
mov
inc
dec
mov
xchg
dec
scas
orb
sub
out
push
xor
cli
pop
push
xchg
cld
lahf
mov
cli
adcb
cmp
insl
mov
lea
push
gs
popa
arpl
cmp
add
push
jnp
lds
dec
inc
push
fisttpll
xchg
inc
adc
fisttpll
add
cmp
or
xor
test
xchg
lods
scas
pop
bound
cld
or
aad
dec
scas
mov
scas
mov
js
notb
jg
mov
xlat
jns
jbe
mov
sbb
mov
das
and
pop
push
cli
cmp
cmp
iret
jg
adc
aaa
lret
test
fisttps
rcrb
sbb
in
cmc
jmp
sub
ret
mov
call
jmp
pop
inc
fnstsw
and
fwait
xchg
push
pop
int
sbb
in
aaa
arpl
dec
outsl
jge
es
outsb
repnz
cwtl
and
insb
push
aad
cmpsl
mov
and
loopne
xchg
loopne
dec
out
in
jo
jge
shrb
cmpsb
repz
jp
xchg
adc
and
imul
repnz
sbb
inc
in
jbe
movsl
pop
push
dec
je
xor
test
and
fbstp
push
mov
mov
ljmp
in
or
lods
fmull
out
fisttpl
ss
sbb
push
adc
cmp
mov
in
cltd
aaa
js
dec
imul
out
mov
xlat
fnstcw
fcoms
mov
xlat
jne
fistpll
xchg
xor
repz
and
pop
xchg
inc
and
bound
das
mov
sub
out
push
mov
and
in
sub
rcrl
cld
shll
or
sti
loopne
js
std
scas
push
add
cwtl
jg
ror
sahf
cmp
jno
test
insl
stos
cmpl
stos
push
cli
js
sbb
xor
test
movsb
pop
dec
xchg
pushf
mov
scas
popa
mov
or
fstl
sbb
std
daa
or
adc
adc
dec
insb
adc
lods
fcomi
push
inc
icebp
dec
nopl
sarb
mov
xchg
push
xor
cmp
dec
fnstenv
pop
or
movsl
cmp
pop
xchg
in
aam
cwtl
stos
dec
cld
mov
push
xor
add
xchg
push
lret
sbb
lea
les
jbe
xlat
mov
add
adc
jae
fildl
jmp
es
les
cltd
xchg
call
iret
jne
cwtl
mov
mov
jno
arpl
dec
mov
jmp
xlat
mov
or
pop
cmp
ja
ds
xchg
inc
movsl
bound
push
push
mov
es
out
xlat
pushf
mov
icebp
mov
imul
cmpsb
mov
jle
adc
fsubrs
imull
fcmove
and
ja
adc
enter
add
jg
hlt
cmc
sub
xlat
ja
addr16
bound
xchg
mov
inc
and
imul
leave
in
push
xchg
lock
and
into
iret
and
fimull
cli
data16
jge,pn
push
sahf
mov
icebp
js
out
and
push
mov
and
add
push
pop
or
add
addl
arpl
in
inc
test
scas
mov
call
stc
in
lret
mov
cmpsb
arpl
leave
pop
mov
popa
aaa
lret
aas
xlat
ret
pop
int
js
clc
push
out
out
inc
ret
xchg
orb
sahf
jecxz
push
mov
xchg
or
adc
lret
sbb
push
test
jbe
lret
and
repnz
and
test
nop
pop
lcall
push
insb
in
sbb
std
or
or
sub
or
scas
icebp
jnp
sub
pop
loop
lretw
dec
sub
sub
out
xchg
dec
and
sbb
lcall
jb
or
mov
fsub
jo
xchg
std
test
icebp
repz
push
in
and
lea
mov
movsb
sti
jl
push
jmp
mov
call
es
out
int
imul
mov
out
jne
notb
cld
imul
sub
xchg
xchg
insl
jne
jo
lea
sub
mov
js
xchg
and
mov
fcos
jle
loop
fsub
pop
dec
push
cmp
ss
daa
test
pop
test
and
pop
mov
jnp
movl
ljmp
out
nop
dec
fnstenv
shlb
mov
jle
cltd
cmpsl
repz
sub
jmp
rorl
movsl
dec
in
jo
xchg
out
cmp
mov
pop
push
lods
sbb
xchg
add
out
pop
mov
dec
inc
and
or
jb
jnp
xor
jecxz
fwait
jae
imul
push
mov
sub
into
repz
std
mov
sbb
push
in
xchg
dec
mov
jo
int3
pop
lcall
mov
dec
pusha
push
out
sti
sbb
xor
pop
mov
jp
jb
mov
mov
inc
hlt
imul
sub
and
push
lahf
push
cld
push
aam
push
sbb
pop
cwtl
push
movhps
stc
xchg
fldenv
call
mov
scas
cld
inc
xor
mov
addl
clc
jb
inc
mov
mov
je
int
dec
dec
bound
movsl
insl
mov
sarb
push
lret
scas
fstl
xchg
pop
data16
mov
or
cli
and
jno
or
fs
xchg
shl
sbb
pop
add
and
int3
jae
rorl
insl
cs
jle
fists
test
ficoms
mov
mov
inc
fdivr
test
into
jbe
xchg
or
cwtl
lock
mov
lret
or
jge
adc
addb
sbb
lods
out
insl
or
rclb
lret
call
or
nop
cltd
pop
sarb
mov
push
push
addb
or
dec
dec
roll
sbb
inc
sub
mov
jne
push
sahf
xchg
int
cmpsl
loopne
popa
xchg
addr16
mov
xchg
dec
push
shl
mov
and
sub
inc
sub
fucomp
ret
mov
dec
jbe
mov
push
cmc
mov
inc
sbb
sub
sub
fdivrl
sub
or
jo
xor
lret
lock
pop
imul
mov
pop
rcrb
notl
mov
cld
mov
sub
mov
test
mov
cltd
mov
cwtl
aad
cmp
in
inc
imul
sbb
cs
cmp
or
sbb
or
scas
xchg
popf
outsb
dec
xchg
add
leave
jns
dec
mov
dec
inc
xchg
popf
adc
in
and
mov
sub
xor
out
lcall
sub
xor
mov
movsb
inc
sub
mov
cmp
mov
je
data16
xchg
and
inc
insl
mov
in
cmp
mov
cli
ret
out
lret
inc
sub
dec
test
loop
ljmp
fdivs
arpl
xor
aam
mov
adc
stos
test
cs
aaa
push
sarb
and
or
or
or
sub
cld
ret
scas
push
mov
out
mov
jg
pop
pop
inc
dec
xchg
jae
out
movsb
nop
push
lds
push
sarb
mov
adc
jl
sbb
jns
sbb
inc
mov
push
cmp
in
xor
in
sbb
mov
jl
sbb
insl
arpl
adc
in
mov
and
sti
cwtl
jb
hlt
enter
cmc
push
and
inc
dec
les
xor
inc
cmp
imul
lods
mov
in
out
test
fdivl
mov
or
or
insl
mov
mov
xor
sbb
test
push
mov
or
les
lret
mov
mov
sub
daa
add
into
jnp
mov
jecxz
shll
push
dec
loopne
cld
mov
stc
pop
jnp
fildll
lret
lret
cli
movsl
cli
or
mov
xor
scas
xchg
insb
pop
pushf
fnstcw
inc
in
jmp
insb
iret
cld
mov
sbb
fadd
repnz
mov
push
or
sti
add
mov
mov
or
fildll
cmpsb
lea
adc
shll
icebp
xor
out
loope
mov
mov
adc
sub
fisubrl
clc
cmpsl
cmp
sub
pop
cltd
xorb
sbb
in
loope
add
or
lds
jo
and
dec
mov
xor
or
xor
push
push
addl
sub
mov
dec
pop
icebp
or
add
ljmp
jp
push
imul
cs
and
jo
out
or
pop
mov
out
pushf
mov
jo
decb
mulb
enter
sbb
je
and
sub
faddp
jns
lret
xchg
js
cmp
sarl
int3
leave
in
and
push
aam
cmp
stc
scas
popa
mov
inc
hlt
and
mov
hlt
shrb
sub
rorl
cmp
popa
inc
inc
addr16
mov
mov
add
enter
in
js
loopne
call
push
and
mov
bound
xor
cmp
mov
movsl
adc
mov
rep
mov
sbb
imul
jns
lock
xor
mov
lods
xor
cltd
dec
jnp
dec
call
scas
jne
jl
jae
test
out
push
test
pop
shrl
test
mov
popf
cmp
adc
loope
cmp
lock
jmp
or
pop
shll
cmp
xchg
adc
pop
push
adc
les
add
and
sub
mov
lods
push
ja
inc
les
sbb
push
mov
mov
pop
sti
les
or
xchg
pop
clc
mov
imul
and
enter
push
sub
jge
outsb
iret
dec
lods
mov
test
in
pusha
sbb
mov
mov
sbb
cmc
or
fwait
pop
popa
sbb
lods
mov
int3
pop
sub
stos
mov
outsl
or
das
fs
and
xchg
adc
lret
mov
aas
push
into
cwtl
loopne
aaa
or
psubusw
jnp
movb
stos
icebp
imul
xor
push
mov
and
mov
inc
push
lds
sbb
nop
cmc
mov
mov
mov
sbb
daa
orl
inc
pop
mov
je
iret
fwait
cli
shl
sbb
ret
jp
adc
add
insb
add
dec
mov
lahf
sahf
out
jle
or
inc
loope
or
jo
pop
subl
fdivp
mov
outsl
sbb
pop
mov
jno
js
sahf
adc
jl
hlt
addb
pushf
pop
es
pop
data16
mov
dec
add
dec
xor
mov
je
xor
je
fdivrp
sti
sub
cmp
shr
fstl
icebp
mov
es
cmpsb
mov
mov
push
xor
and
cmp
mov
pop
or
repz
add
call
inc
sub
xlat
or
cmp
faddl
mov
inc
loop
dec
cli
sub
mov
sub
nop
shr
std
pop
push
or
mov
dec
cltd
je
jg
sti
iret
test
mov
das
jg
cmc
add
push
mov
out
fcmovnb
lds
mov
shrb
in
test
cltd
xor
mov
ja
enter
cmpsb
lods
cmp
lret
or
mov
push
lods
scas
and
pop
cmpsb
mov
movsb
and
push
movsl
movsb
sub
cmpsl
enter
xchg
negl
cltd
sub
sbb
xchg
push
fucomip
mov
xor
inc
inc
xor
jb
shll
testl
out
loop
mov
adc
mov
test
add
test
cmpsl
lock
imul
loop
sbb
fnstcw
rorb
and
pop
gs
cli
and
into
adc
leave
mov
pop
loope
arpl
loope
outsb
fdivr
mov
call
pop
cltd
inc
mov
hlt
repz
ja
xchg
out
rcrl
stos
and
ss
dec
and
jbe
sahf
unpckhps
add
cmp
adc
popa
fcoml
adc
mov
jne
leave
shl
xchg
and
mov
add
mov
rep
and
fcmovu
cmpl
jle
shrb
insb
xchg
or
inc
fcomip
daa
cmp
cli
mov
add
adc
sbb
dec
lea
xlat
sbb
aaa
fwait
dec
dec
fdivl
xor
xchg
lock
or
std
add
fbld
or
xchg
imul
outsl
add
push
xchg
fnstsw
xchg
push
clc
push
outsb
push
inc
cmp
jns
scas
mov
hlt
sub
mov
mov
push
movsl
xchg
mov
repz
sbb
and
daa
push
dec
idivl
push
cld
addr16
in
dec
out
ret
jns
int3
stos
daa
inc
lods
pop
cltd
dec
out
scas
inc
shrl
test
shll
pop
arpl
pop
xor
adc
sub
cltd
mov
pop
mov
inc
sub
and
mov
mov
loope
mov
xchg
dec
jo
pop
sti
pop
sbb
jecxz
jge
out
lock
fwait
imul
mov
xchg
xorb
test
adc
pop
movsl
lret
cli
bound
dec
testb
xlat
in
cmp
jbe
ja
in
insl
fnstsw
add
xchg
rorb
sti
mov
dec
out
sbb
jmp
stos
add
jge
shl
mov
push
jp
pop
push
cmp
mov
push
cmc
rcll
or
xchg
pop
ljmp
jae
xchg
push
fsubl
lods
mov
add
pop
in
adc
adc
fldl
cmp
inc
out
insl
out
inc
subb
xchg
mov
mov
cwtl
lahf
push
loop
pop
push
lea
xchg
es
jg
pushf
ficoms
test
bound
push
in
push
mov
push
mov
cli
mov
sbb
mov
or
pop
shll
sub
les
jl
rcrb
xchg
pop
divl
fwait
push
nop
lret
call
lahf
in
popa
mov
cmp
sbb
or
xor
sarl
jcxz
int3
loopne
lahf
dec
aam
push
mov
mov
mov
mov
add
adc
or
pop
fcomip
je
push
push
mov
cmc
and
lcall
mov
nopl
push
je
ja
mov
mov
movsl
ja
stc
jp
cmp
imul
mov
jmp
dec
dec
mov
mov
mov
adc
pop
fildll
stos
cmp
inc
int
push
in
dec
push
popf
mov
or
out
sub
out
lret
or
ret
outsl
adc
ss
adc
mov
pop
xor
imulb
mov
in
pop
pop
in
add
sti
sub
std
adc
int3
je
jbe
lods
push
int
in
push
xchg
and
insl
sub
pop
jl
out
or
xchg
mov
popa
outsb
add
std
jecxz
leave
and
xor
js
ret
xchg
mov
sbb
push
aam
push
hlt
mov
xchg
push
adc
subb
xchg
mov
push
popl
push
sbb
jge
leave
mov
or
popf
or
jle
sti
lret
dec
cmp
sbb
test
pop
stos
jne
es
xor
sub
je
ror
ja
push
movsb
mov
loope
pusha
in
push
fsubrs
test
lcall
es
fs
mov
rclb
pop
pushf
sbb
sti
fstpl
daa
fstpl
sub
sar
inc
jo
inc
icebp
bound
pop
inc
mov
lcall
stos
or
and
test
fmull
lret
mov
mov
imul
mov
mov
out
hlt
dec
ja
adc
adc
icebp
adcl
out
cmc
dec
inc
mov
fsubrl
and
adc
outsb
ja
pop
aad
push
inc
in
sub
out
dec
push
ficomps
repnz
jno
cwtl
push
das
aad
cmpsl
shrb
jmp
mov
or
inc
jno
sub
fsts
notl
out
mov
pop
addr16
jl
xchg
xor
mov
ljmp
stc
pushf
aad
addl
xchg
jne
add
int3
rcrb
lods
insb
sbb
or
push
push
out
sub
lock
scas
add
cmp
icebp
push
orl
pop
sub
cwtl
pop
sub
pop
jecxz
and
leave
jne
loopne
sub
add
icebp
dec
mov
inc
xchg
cmc
pusha
dec
push
sbb
jns
jns
push
repnz
adc
fmuls
cmp
pop
mov
sbb
push
sbbl
sub
push
pop
mov
icebp
dec
shll
cwtl
jg
xor
or
push
pusha
xchg
pop
das
cwtl
mov
out
bound
xchg
lret
imul
xlat
in
fcompp
arpl
inc
ret
je
aas
ret
xchg
mov
adcl
xchg
jp
xor
mov
mov
xor
mov
mov
out
loopne
mov
repz
cmpsl
mov
jmp
push
data16
inc
int3
pop
push
push
es
push
jne
mov
adc
das
gs
mov
pop
insl
mov
jg
andb
sbb
test
and
xchg
daa
jae
je
movb
mov
push
adc
adc
inc
cmp
cmp
mov
sub
mov
loop
repz
les
cmp
mov
pop
xchg
inc
inc
sbb
jmp
mov
je
inc
lcall
jp
pop
xor
pop
mov
cli
xor
mov
imul
adc
pop
xchg
shlb
xor
mov
cmc
in
jbe
lahf
push
js
xchg
shr
jle
or
add
or
xor
push
into
mov
mov
lods
out
add
pop
dec
pop
dec
sahf
push
jmp
pop
add
vcmpsd
repz
or
push
lret
rorb
mov
mov
enter
cltd
nop
mov
ja
lds
jecxz
cmpsb
sbbb
add
fwait
cmp
xlat
gs
mov
add
dec
repz
lods
dec
imul
xlat
adc
jecxz
push
jmp
sub
nop
inc
xchg
shll
mov
jmp
sbb
call
mov
outsb
jnp
jecxz
push
cmp
movsl
pop
cmc
jge
ret
fisttps
out
cmp
cmp
jno
scas
mull
mov
mov
icebp
shrb
pushf
sub
xor
mov
mov
dec
fstl
jne
push
cmp
mov
or
pop
sbb
filds
push
xchg
movsl
js
rolb
cmp
pop
aaa
lcall
jecxz
cmp
pop
mov
xchg
mov
lods
rclb
jmp
in
fidivl
or
push
cwtl
cmpsl
std
mov
aaa
popf
or
stos
dec
xor
mov
push
cmpsl
enter
repnz
mov
cld
add
lea
inc
rolb
les
jnp
pop
mov
in
call
lea
fisubl
xor
sbb
jge
dec
add
mov
cmp
mov
xor
les
dec
das
shrl
sti
inc
shlb
imul
in
sub
out
in
inc
ffree
dec
sti
pusha
test
sti
in
roll
addr16
adc
cmp
mov
scas
rcr
lcall
sub
mov
ret
xchg
scas
dec
jne
fdivl
xchg
call
test
hlt
dec
jl
dec
mov
push
punpckhbw
mov
ret
pop
fstpt
cmpsb
test
shlb
repnz
call
hlt
adc
dec
cs
leave
adc
and
scas
mov
fcmovnb
insl
icebp
sti
lahf
sub
popf
int3
dec
aas
xchg
mov
fnstcw
mov
clc
leave
pushf
adc
mov
sbb
lods
divl
fdivrl
subb
movsb
jg
jmp
test
je
or
sarb
sbb
add
rolb
movl
mov
dec
pushf
mov
jne
ss
leave
test
std
push
stos
js
enter
jno
bnd
fidivrs
push
mov
fldenv
sbb
cmp
push
adc
mov
push
lret
test
push
insb
push
ret
cmp
inc
lock
pop
lcall
and
les
mov
or
mov
push
das
leave
outsl
insb
out
shr
mov
jns
call
test
mov
dec
daa
mov
jecxz
mov
lret
scas
xchg
jne
and
and
inc
xchg
ss
push
xor
imul
mov
lcall
addr16
fdiv
aaa
sbb
mov
out
xchg
mov
jnp
push
mov
inc
test
xor
mov
add
sahf
dec
and
scas
mov
cmp
push
or
inc
int
add
jp
pop
mov
ljmp
sub
pop
xchg
hlt
fldl2t
arpl
ja
jg
rorb
xor
or
mov
sbb
lret
icebp
ret
jne
cmp
mov
or
inc
fidivl
subl
inc
aad
mov
dec
enter
imul
out
ss
xchg
adc
in
sbb
sti
mov
sbb
pop
adc
lcall
xor
imul
mov
inc
mov
test
loope
repz
ret
icebp
mov
push
sub
ret
stos
jo
lea
es
pop
inc
jge
add
sub
fdivrp
jmp
adc
ret
xor
mov
inc
jmp
cmp
jmp
mov
and
mov
lret
into
push
aaa
jle
xchg
out
mov
mov
jns
lcall
jno
or
push
leave
lret
clc
fstpl
rcl
fadds
ljmp
gs
pop
lret
dec
cmpsb
test
adc
dec
push
add
xor
cld
push
fcomi
sub
pop
xor
mov
popa
sub
mov
pop
lahf
jns
xchg
jne
loop
cwtl
mov
inc
stc
adc
sbb
sub
pop
jp
lret
xor
iret
sbb
push
inc
xchg
jecxz
adc
insl
jg
add
and
jle
pop
dec
cmp
subb
and
lret
aas
test
add
mov
scas
test
jge
mov
dec
stos
adc
aam
data16
mov
lret
dec
lods
movsl
mov
cli
adc
sub
xchg
cli
jnp
adc
and
in
inc
push
gs
stos
jp
aam
cltd
lods
push
jg
push
loope
and
imul
jb
xchg
mov
add
mov
out
mov
mov
je
out
es
pop
push
dec
lds
arpl
out
outsb
outsl
xchg
outsb
test
jno
dec
and
stos
push
xchg
sahf
popf
jnp
mov
or
orl
mov
adc
push
xchg
adc
pop
xchg
push
cmc
mov
push
out
das
arpl
inc
nop
jp
shlb
and
add
mov
jne
adc
cwtl
int3
adc
div
test
lret
push
stos
pop
movsl
dec
jl
jo
and
insb
fisttps
pop
pop
xchg
add
das
xor
inc
or
movsb
add
inc
int3
nop
and
test
insl
std
iret
out
fnop
mov
gs
mov
mov
cmc
xchg
pop
movsb
jo
push
into
loopne
cmc
mov
add
push
leave
mov
mov
inc
or
sti
mov
jle
inc
loope
mov
add
in
adc
shrl
jno
mov
and
mov
sub
pop
loop
test
cmpb
adc
cmpsl
repz
xor
xor
sub
hlt
das
loope
jmp
mov
call
xor
push
arpl
mov
pop
or
sbb
pop
xchg
cmp
push
rcll
and
or
fwait
inc
add
jne
sbb
call
cmp
mov
cmc
jg
stos
stos
jnp
mov
jae
or
fdiv
cli
pop
cs
iret
pop
outsb
mov
and
or
out
push
mov
cltd
cmp
mov
clc
xchg
test
imul
pop
lret
or
hlt
test
out
and
dec
test
lcall
test
xor
mov
test
popf
js
add
push
je
iret
or
ljmp
pop
inc
scas
sub
popa
js
stc
dec
dec
sti
jb
pop
pop
xchg
inc
sbb
lret
pop
ficoms
popa
add
outsl
in
fstpt
xchg
mov
adc
rorb
mov
and
inc
inc
mov
push
jno
scas
adc
movsl
addr16
jmp
shll
fistl
add
push
inc
lds
cwtl
imul
push
push
xchg
outsl
fsubs
mov
jmp
cmp
push
shlb
xchg
jle
movsb
test
jp
sahf
fnstenv
mov
lahf
sub
or
in
xchg
jl
aam
test
dec
or
enter
iret
outsw
dec
jo
aam
dec
mov
xchg
data16
and
cmpsl
lods
xor
mov
popa
leave
sahf
ret
cmp
or
inc
fisttps
imul
shll
push
out
dec
aaa
inc
xor
dec
inc
xchg
or
scas
xlat
decb
mov
fcom
jg
sbb
scas
into
and
clc
dec
push
jp
cltd
popa
fwait
int3
sahf
jns
push
testl
mov
test
pop
int3
pop
rorl
hlt
mov
and
popf
test
lods
xchg
js
pop
dec
fcomps
insl
or
cmp
sbb
jae
into
mov
mov
and
fdivl
inc
ficomps
lods
fidivs
push
or
fdivr
push
lds
jmp
outsl
movsb
in
out
fnstsw
cmp
aam
cmp
fwait
outsb
mov
xorl
pop
cmp
lcall
cmp
mov
mov
inc
mov
xchg
outsl
movsb
popa
pop
lea
cli
and
pop
xor
inc
ss
sbb
xor
jge
and
push
mov
jmp
cmpsl
mov
je
aaa
shll
sti
jo
imull
push
jl
jb
xchg
ja
adc
subl
pop
and
int3
mov
dec
push
inc
dec
mov
icebp
jae
scas
adc
lret
aam
loope
insl
dec
and
adc
xlat
aaa
pushf
int3
push
add
xchg
ret
xchg
dec
or
xchg
popa
fdivl
lcall
mov
cs
sub
sbb
cmpsb
dec
cwtl
and
cmp
inc
pusha
movsb
mov
out
scas
testl
jne
in
mov
or
cli
popa
cli
inc
sub
push
inc
mov
xchg
jne
les
xchg
ja
xor
xchg
or
xchg
movsl
mov
cmpb
imull
fstps
fwait
add
xor
out
lea
fnstsw
movsb
or
pop
icebp
lret
pusha
lods
xor
dec
or
data16
out
nop
sahf
push
jl
and
arpl
lock
iret
pop
in
testb
ret
sarb
inc
lods
scas
popf
mov
xchg
pop
addr16
in
sbb
inc
enter
int3
push
xchg
sbb
fldl
jg
imul
out
sbb
mov
loopne
mov
into
xor
add
sysret
pop
jno
adc
lcall
shrl
out
xchg
outsb
jbe
into
mov
mov
mov
in
jecxz
pop
pop
cmp
lods
or
cld
sahf
das
cmp
mov
mov
cmp
pop
je
imul
sub
lcall
movsl
mov
and
sub
xchg
adc
shll
test
xchg
inc
add
mov
sub
addr16
mov
and
mov
dec
addr16
popf
push
xchg
pop
push
mov
in
fidivl
stc
and
jbe
pop
in
outsb
dec
das
cmp
xchg
mov
lret
imul
fwait
in
pop
in
cld
sub
dec
sub
or
add
in
xchg
ret
aad
inc
inc
mov
inc
cwtl
fistpll
add
jnp
pop
mov
lret
mov
xchg
pop
ret
push
cmp
dec
push
les
test
xlat
and
cmc
ds
pop
jmp
lods
fs
jg
adc
daa
stc
ficoms
movsb
insb
repnz
sbb
or
stos
mov
insl
jnp
fstpt
mov
data16
adc
in
into
mov
repz
ficompl
inc
aas
xor
std
push
nop
sbb
or
ret
scas
adc
jbe
sub
mov
inc
cmp
pushf
jo
ret
lahf
cmp
outsb
push
mov
das
fcoms
inc
cmpsl
mov
push
fsubrp
sub
outsb
jecxz
xchg
jmp
sarl
int
add
sbbl
or
loop
push
test
insb
pop
xchg
repnz
xchg
frstor
lea
dec
ret
rcr
insb
lds
fsub
scas
lds
pop
imul
mov
fchs
mov
addb
mov
xchg
pop
xor
std
dec
lds
sarb
mov
adc
cld
iret
out
not
repnz
in
pop
and
fsubs
mov
and
ret
mov
les
repnz
sub
scas
fidivrs
out
lret
or
mov
clc
push
inc
mov
divb
ja
add
adcb
mov
jp
push
xor
nop
sahf
fsubl
mov
inc
out
mov
test
rcr
in
push
dec
cmp
xor
push
cs
adc
xchg
iret
mov
add
popf
adc
cmp
adc
adc
dec
push
add
mov
dec
jno
sub
int3
out
or
dec
inc
jbe
mov
mov
xlat
ficoms
cmp
dec
push
rcll
ss
in
cwtl
add
sub
mov
int3
jnp
cwtl
bound
ds
push
loope
mov
pop
pushf
ds
mov
fucomip
xchg
fnstcw
xchg
cld
pushf
ret
into
cmp
inc
mov
add
mov
adc
cmp
pop
xchg
sarb
jae
jnp
dec
pop
out
lahf
movsb
cmp
jno
xor
loop,pt
subb
jne
mov
les
cs
jns
push
cmp
sbb
jb
sbb
sbb
addr16
pop
ret
and
push
enter
xchg
pop
stos
mov
push
jae
adc
ss
loopne
es
cmc
test
adcl
xor
xchg
and
sbb
nop
cs
xor
pop
mov
push
imul
ret
fidivl
pop
mov
dec
push
mov
push
cs
dec
js
jo
fucomip
imul
jae
inc
iret
sbb
sub
add
or
xchg
jb
sub
stc
push
rorl
dec
daa
test
aas
adcl
or
mov
negb
movb
lods
jmp
sub
mov
andb
mov
mov
push
inc
adc
outsb
jl
mov
and
scas
xchg
xorl
outsb
lock
gs
dec
test
inc
push
clc
cmp
fwait
dec
and
or
jns
sbb
mov
scas
jmp
popa
stc
out
sarl
and
push
inc
cmp
bound
popf
mov
ror
push
ret
lahf
push
gs
icebp
mov
lret
fldt
test
cwtl
push
ja
test
jg
movsb
in
bound
cwtl
test
xlat
iret
pop
mov
leave
mov
add
mov
and
or
inc
je
mov
inc
test
ss
sahf
xchg
dec
in
adc
jmp
xchg
not
jmp
subl
out
das
mov
and
lods
mov
pusha
lret
ds
pop
mov
sbb
insl
xchg
call
mov
ds
push
and
jl
mov
dec
xchg
xor
sahf
jnp
adc
mov
or
xchg
sbb
adc
cmp
mov
cli
and
lcall
insl
clc
xor
stos
jl
xlat
xchg
shl
bound
push
add
rclb
fistps
mov
call
adc
icebp
sahf
mov
decl
mov
icebp
add
fwait
cmc
mov
stos
lea
mov
out
or
roll
fldcw
mov
xchg
or
jge
lret
push
loop
or
ret
mov
inc
aas
scas
and
lods
fcmovnu
dec
xor
das
test
sub
jo
fs
adcl
cmp
add
jg
mov
xor
test
pop
ds
mov
mov
in
sbb
daa
xchg
mov
flds
cltd
jle
sbb
ljmp
repz
mov
jle
xorb
test
fs
fbld
pop
mov
push
inc
push
das
aas
jb
call
sbb
out
sbb
fmulp
shl
dec
cwtl
sbb
or
maxps
nop
sub
inc
test
mov
fucomp
nop
inc
push
lds
add
cmpl
pop
ds
mov
add
or
shll
sbb
rorb
and
int
xchg
adc
pop
jno
inc
mov
dec
mov
or
push
cs
mov
sub
test
rcrb
pop
es
and
lahf
test
or
or
sub
mov
shlb
push
pop
mov
lods
into
loopne
lods
cmpsb
push
mov
jge
xchg
add
lods
push
ret
cwtl
cltd
lret
shll
repnz
es
je
add
inc
jnp
fmuls
cmp
mov
xor
cs
cmc
add
loop
pop
ret
adc
pop
in
rorl
movsl
repz
jmp
sub
insl
xor
outsl
inc
pusha
mov
mov
dec
push
xchg
mov
mov
and
dec
test
mull
adc
or
or
leave
es
xchg
adcl
inc
jns
mov
cli
jmp
pop
adc
mov
sub
cmc
dec
push
into
std
and
repz
push
add
push
dec
or
push
insb
pop
andl
push
clc
mov
cmp
stos
mov
int3
outsl
lret
push
pand
cmp
rclb
shr
insl
cmovb
cld
add
dec
je
or
xor
inc
mov
sti
enter
aad
xchg
xchg
shrl
loopne
lock
or
or
leave
xchg
in
fwait
push
xchg
push
movsb
lods
inc
xchg
or
stc
mov
xor
mov
data16
lahf
add
inc
pop
xor
or
push
out
lods
pushf
das
mov
push
and
mov
mov
iret
push
mov
cmp
aaa
xor
cmp
xchg
xchg
into
stos
pop
xchg
add
or
pop
ljmp
sbb
pop
js
mov
xchg
cmp
pop
pop
loopne
rol
push
in
sbb
pop
jl
rcl
push
mov
sub
jo
adc
call
fiadds
ds
fwait
xor
imul
and
sti
mov
iret
push
ret
nop
stos
dec
jnp
add
push
fdivrl
out
repz
shr
nop
sbbb
mov
inc
inc
or
jne
jno
insb
iret
sub
or
es
ret
dec
stc
inc
push
mov
sub
xlat
repnz
inc
out
pop
scas
outsl
jp
xlat
and
mov
mov
ljmp
out
lods
pop
lods
dec
inc
lahf
mov
or
aam
mov
gs
cs
popa
test
jmp
aaa
jp
add
fmuls
lret
mov
cmp
and
pop
loope
pop
ja
in
hlt
insb
xchg
xchg
or
rorl
out
dec
xor
sbb
in
pop
push
push
jl
xchg
out
xor
mov
cld
in
add
xchg
push
mov
push
lcall
jne
pop
cmpsb
xchg
jnp
lret
addr16
mov
pop
and
add
mov
sbb
push
or
repnz
inc
jmp
daa
iret
fsincos
and
vmovsd
dec
out
or
push
jg
inc
inc
daa
rorl
clc
xchg
cltd
adc
push
inc
jge
int
mov
dec
daa
leave
int3
in
stos
or
pop
add
loopne
test
and
pop
cmp
mov
sbb
cmp
push
cmpsb
jp
imul
and
jns
dec
je
cmc
mov
dec
mov
cmpsb
fisubrl
sbb
into
push
mov
js
shll
data16
xorb
mov
pop
xchg
sub
mov
sub
daa
js
sub
mov
fwait
xlat
hlt
push
aaa
push
cld
lret
xchg
sbb
xor
add
push
in
xor
lock
sbb
or
mov
or
sbb
loop
mov
mov
and
outsb
push
lock
jbe
je
jp
pushf
andl
jo
stc
movnti
sbb
add
sub
mov
lods
lds
xchg
arpl
add
xchg
and
jge
clc
push
gs
negb
add
jnp
dec
stos
cmp
dec
enter
sub
push
stos
or
or
xchg
and
pop
push
enter
test
mov
into
test
fnsave
pop
xchg
mov
sbb
add
stc
lock
std
test
lret
fimuls
cmpsb
inc
cltd
pop
jg
outsl
int3
pop
push
std
enter
mov
lods
pusha
sub
push
lds
sbb
cmc
mov
push
jae
fldt
pop
loope
pop
shlb
popf
pop
mov
inc
jmp
insl
push
jge
mov
sub
cmp
sbb
and
hlt
sub
out
inc
mov
ja
adc
sahf
std
mov
dec
popf
add
clc
or
pushf
and
ss
enter
fadds
add
push
mov
stos
adc
jno
daa
out
or
jmp
push
lret
inc
push
rcrb
das
mov
pusha
je
push
decl
loopne
dec
sub
sub
in
ja
test
movsl
fs
xchg
push
mov
mov
mov
cld
add
xchg
adc
sti
cmp
addr16
into
arpl
ja
jae
add
cmp
enter
testb
xor
push
inc
sbb
ljmp
sub
mov
or
jno
stc
int3
push
mov
mov
xor
out
cli
ror
sarl
adc
fidivl
mov
lahf
push
dec
je
jb
mov
xchg
cmove
push
int
push
mov
iret
cmp
nop
orps
mov
jg
jge
lds
out
or
aam
sbb
lcall
lahf
xor
lods
cmpsb
and
lea
movsl
push
xchg
mov
dec
int3
cmp
jmp
mov
fiaddl
or
dec
fdivrs
adc
cld
cmp
insb
aas
insl
cmc
es
or
mov
push
loope
pop
pop
stos
jecxz
inc
nop
aam
pop
jge
pushf
cmp
push
mov
in
add
popa
outsb
xor
push
push
loop
aad
ss
xchg
faddp
nop
adc
cltd
sbb
push
sub
push
and
rcrl
xor
sbb
ss
mov
adc
ret
std
popf
mov
or
push
mov
adc
sbb
mov
inc
mov
sbb
test
fwait
xlat
cmp
jl
popf
jmp
lret
cld
int3
jo
add
insl
aas
and
or
sbb
cmpsb
scas
hlt
fdivs
cmp
das
int
hlt
add
cli
and
sbb
rcl
mov
mov
adc
adc
clc
outsl
lock
mov
inc
out
push
jnp
movsb
cmp
ss
jbe
push
add
mov
sbb
inc
leave
out
dec
std
or
test
pop
shll
lret
adc
shl
inc
sub
pop
adc
xor
mov
flds
cmp
into
and
sti
test
mov
mov
cmc
mov
mov
jecxz
orb
cld
xchg
sarb
ret
out
mov
pop
and
sar
or
pop
mov
mov
aaa
out
adc
jmp
pop
dec
test
cmp
pop
jg
frstor
mov
dec
mov
adc
jne
pushf
in
sbb
xor
repnz
or
xor
xchg
mov
sub
or
and
je
roll
mov
pop
xchg
jmp
sti
push
or
test
js
and
or
popf
movsb
call
std
aad
dec
and
adc
sar
adc
push
arpl
xor
mov
sbb
lcall
lret
add
faddp
add
push
mov
jmp
mov
gs
xor
jcxz
dec
lahf
mov
cmp
jmp
jecxz
hlt
pop
fldenv
dec
icebp
cwtl
dec
fisubrl
ljmp
cmpsl
jge
push
iret
int3
ljmp
cmpb
sub
jl
js
mov
sub
xchg
out
and
cmp
lock
loopne
call
data16
push
or
sbb
xchg
popa
or
mov
mov
mov
inc
or
push
es
cmp
js
idivl
push
outsl
or
xor
loop
pop
into
push
ret
lret
adcl
sbb
mov
sti
mov
push
out
add
mov
mov
call
jg
call
fmul
mov
or
lret
pop
stos
adc
push
clc
or
lret
push
mov
test
fistl
leave
aad
xchg
movsl
shll
pop
adc
xchg
mov
and
cmc
adc
mov
popf
mov
jl
cmp
xor
or
aas
loop
sbb
jl
inc
sarl
out
shll
and
mov
inc
push
mov
sub
pop
scas
push
test
mov
nop
add
adc
aaa
push
push
cltd
sub
mov
inc
mov
fcompl
mov
adc
js
dec
jno
xchg
pop
ja
das
adc
add
cmpsl
mov
das
rorl
out
mov
les
sbb
and
int
mov
or
mov
or
xchg
xchg
pop
fstps
adc
daa
pinsrw
cmp
out
aas
dec
sahf
cwtl
clc
and
mov
movsl
dec
push
fildll
lret
filds
sub
sub
adc
and
inc
bound
add
cwtl
inc
add
sbb
jle
xor
mov
push
pop
sub
out
sbb
sti
out
mov
hlt
push
mov
add
xor
jecxz
xor
clc
jecxz
mov
adc
mov
inc
negl
mov
out
call
mov
jle
ffreep
xchg
mov
int3
fwait
inc
dec
mov
mov
rcrb
mov
sub
das
sbb
fnsave
cmp
popf
repnz
mov
sub
shlb
ret
pop
lahf
insb
mov
fdivs
das
pop
jae
nop
movsl
stc
pop
jae
xor
dec
cld
stos
in
adc
xchg
iret
testb
sbbb
or
aaa
add
bound
dec
push
ret
add
mov
std
aaa
fcomps
pop
dec
and
pusha
mov
in
xor
gs
fcmovb
iret
lcall
outsb
je
mov
jle
and
pop
jmp
sub
sbb
inc
popa
dec
in
pop
dec
mov
or
enter
and
push
mov
mov
mov
fdivrs
jnp
incl
je
xlat
mov
test
adc
jb
inc
xor
xchg
cltd
imul
loope
out
and
icebp
cmpsl
mov
pop
inc
fsubrl
push
aaa
mov
sub
or
data16
test
mov
pusha
pop
leave
fiadds
jno
leave
call
jmp
setns
les
and
inc
std
rorb
daa
pop
or
sbbb
dec
cmc
shlb
jl
pop
cmp
dec
rclb
mov
and
mov
mov
adc
and
mov
mov
lret
cmpsl
ljmp
inc
subb
div
daa
jo
into
das
orb
cmp
daa
aam
pop
les
in
add
jae
dec
xor
cmpsl
mov
mov
pushf
je
fsub
sub
arpl
dec
and
add
fwait
lret
mov
mov
sbb
fisttpll
test
jns
out
aaa
popa
xchg
xchg
mov
cld
xchg
clc
jne
lahf
xchg
addl
push
dec
and
cmc
mov
add
sub
fcoml
out
iret
pop
mov
cmp
fisttpl
imul
dec
sbb
sub
mov
and
sub
inc
jnp
cmp
outsb
or
adc
mov
add
inc
jecxz
push
jmp
test
lcall
out
or
lods
dec
inc
pushf
jle
xor
and
out
pop
sbb
jmp
lock
dec
ret
pushf
repnz
jl
pop
mov
popa
lret
inc
jg
insl
data16
aad
addr16
mov
insb
add
rcr
jl
xlat
fmulp
mov
testl
outsb
push
scas
mov
sarl
xor
jne
mov
adc
and
ja
fsts
sbb
pop
xchg
orps
cmpsb
rcrb
outsl
adc
mov
leave
add
pop
sbb
cmp
pop
pop
mov
push
sub
cmp
pushf
sub
subb
pop
incl
imul
sub
push
push
jno
adc
mov
shl
cld
jmp
in
cmpsl
lahf
daa
xor
mov
mov
jns
and
pop
out
popf
sbbl
dec
insb
ret
or
aam
or
lret
push
jge
gs
jmp
mov
pop
pop
jne
inc
mov
or
int3
sbb
push
xchg
push
xor
cmp
mov
fisttps
je
jno
int3
lods
jns
std
add
inc
ss
xchg
movl
inc
repnz
pause
xchg
adc
mov
iret
jecxz
in
rcrb
add
adc
enter
add
aad
xchg
lods
pop
sbb
ds
xor
sbb
xchg
cmc
add
jecxz
xchg
and
cwtl
sbb
jbe
bound
ja
test
or
imul
mov
cmp
test
lret
push
pop
das
dec
pop
cmp
inc
push
jb
xchg
xchg
fisubrl
push
lods
mov
push
mov
adc
dec
pop
add
in
movsl
pop
xchg
mov
push
leave
outsl
out
fwait
mull
cmp
pop
add
je
rorb
or
dec
js
sti
rcr
lods
inc
nop
popf
leave
inc
mov
insl
push
cmp
insl
push
adc
mov
inc
push
test
add
jecxz
adc
clc
or
mov
ss
xchg
push
daa
cld
jle
ds
out
aas
xchg
mov
xor
sbb
dec
bound
mov
aas
and
faddl
int
stos
fmul
or
mov
out
jg
je
inc
lahf
or
add
popa
sub
push
add
hlt
mov
insb
jle
or
sbb
sbb
push
push
jp
shrl
cmp
pushl
push
mov
shr
cs
insb
lock
clc
jp
lds
jo
or
dec
sbb
add
push
iret
stos
into
push
adc
lcall
xor
xchg
int3
ja
pop
or
hlt
push
sub
mov
out
cmp
decb
dec
sub
add
mov
outsl
sbb
dec
inc
push
push
mov
inc
cmp
and
mov
sub
add
loopne
daa
mov
sub
push
mov
jge
insl
cli
shlb
hlt
add
mov
pushf
lret
jp
jge
xor
xor
dec
push
push
push
dec
data16
or
inc
sub
adc
fimull
mov
push
jmp
popa
outsb
mov
test
push
sub
mov
loopne
lock
pop
xchg
enter
adc
fsubp
je
xor
mov
call
and
mov
pop
jnp
inc
movsb
notb
loop
sahf
xchg
pop
xchg
stc
cs
sbb
adc
sahf
xor
sub
arpl
clc
loope
dec
xchg
fbstp
or
clc
mov
mov
jne
repz
or
lahf
in
xchg
mov
pop
xchg
jg
xor
dec
cld
jl
divb
pop
mov
iret
ds
mov
sbbl
stos
adc
inc
cmp
push
xchg
lret
outsl
aad
mov
ljmp
dec
sbbb
shrl
in
jecxz
lock
adc
mov
add
shl
out
adc
mov
arpl
xor
lea
jb
push
loope
xor
mov
cmp
ljmp
data16
inc
inc
bound
mov
in
adc
mov
les
add
jecxz
arpl
jg
movsl
std
pop
loopne
cmp
xchg
hlt
lea
ret
push
xchg
outsl
add
mov
test
loopne
dec
jmp
pushf
ljmp
mov
fucomip
pop
push
xchg
push
pushf
adc
popa
add
call
bound
mov
addb
data16
inc
fnstcw
movsl
aaa
lods
fdivr
push
jnp
fdivrl
add
jle
notb
es
roll
rcrl
jmp
into
xor
adc
pop
or
je
xor
cmp
mov
mov
bnd
dec
stc
test
cli
call
ljmp
or
adc
push
pusha
xchg
pop
cmpsb
pop
sbb
mov
mov
pop
sub
outsl
cs
roll
and
jo
push
mov
xchg
mov
inc
loopne
shll
sub
mov
fstpl
add
and
add
cmp
sbb
insb
mov
outsb
dec
aaa
inc
xchg
enter
lods
dec
inc
shll
mov
push
mov
jnp
test
mov
fdivl
loope
xchg
and
test
add
pop
mov
jp
ret
xchg
sub
jno
inc
pop
dec
call
pusha
cmp
and
inc
bsf
lcall
aam
dec
call
mov
cmp
fwait
test
push
or
gs
add
stos
xchg
sub
ficoms
cmp
jbe
scas
mov
push
xchg
into
cmp
mov
out
jge
mov
xor
pop
add
and
sbb
inc
negb
call
fistpll
xchg
mov
and
ret
cmp
add
je
cmpsb
xchg
out
sub
hlt
jno
or
daa
mov
mov
scas
cmp
mov
fwait
pop
push
nop
dec
xchg
xlat
stos
jb
inc
lea
push
mov
jns
fldenv
xorl
push
or
enter
and
mov
xchg
iret
xchg
sbb
inc
sbb
dec
pop
loope
push
mov
xor
push
je
jbe
or
popa
cmp
je
out
add
mov
lcall
jae
mov
sub
loop
hlt
xor
fidivl
or
cmp
inc
adc
into
cmp
inc
test
loopne
cmp
xor
stos
jle
sti
or
push
shr
xchg
jmp
sbb
jecxz
pop
pop
mov
pop
sarb
in
rorb
push
aad
pop
lret
outsb
mov
or
not
push
xor
loopne
test
inc
inc
xchg
fistpl
mov
mov
add
data16
push
icebp
sub
cmp
cmc
icebp
insb
out
inc
lock
call
and
pop
mov
jo
bound
mov
add
cmpsl
call
dec
mov
shl
dec
or
xlat
sbb
repz
or
lret
sbbb
jecxz
inc
and
lods
mov
adc
add
popf
mov
fs
mov
mov
push
push
mov
sbb
dec
add
das
in
sbb
fcomp
mov
sbb
out
cmp
xchg
push
pop
push
sub
gs
aam
pop
out
in
or
xlat
imul
xchg
arpl
cmc
sbb
lds
sub
loope
dec
les
add
es
push
sub
fisubrs
mov
sub
jb
ret
pop
xchg
fxch
xor
jge
and
jle
add
and
js
mov
adc
je
xorb
test
rol
in
ljmp
and
cld
popa
fwait
sub
mov
add
and
xor
andl
daa
lcall
and
jp
shrl
repz
jge
ficompl
jge
cmp
jo
jnp
repz
xchg
inc
push
mov
pop
das
push
mov
sbb
xchg
insb
cmp
les
mov
push
push
fsubl
mov
in
push
mov
out
jnp
push
cmp
jge
jnp,pt
cltd
mov
sbb
cmpsl
and
adc
cmp
add
sbb
push
pop
testl
adc
add
ss
and
les
jo
es
mov
fnstenv
xor
ret
dec
jae
ret
out
test
inc
add
sub
mov
xor
add
pop
int3
and
insl
in
ret
sbbl
dec
and
pop
sbb
xchg
call
and
out
enter
std
ja
rcrb
pop
sub
fnstsw
adc
jae
adc
insb
mov
xor
adc
aad
rcrb
adc
fisttpll
sysret
and
mov
mov
push
inc
ljmp
ret
jno
clc
lahf
cmc
mov
sub
filds
dec
fsubrs
or
pop
cmc
mov
leave
int
push
out
mov
xlat
mov
fcmovb
push
cs
inc
mulb
cli
lcall
adc
sub
popf
push
test
adc
bnd
jno
ja
into
add
and
in
inc
repz
and
icebp
push
add
adc
imul
inc
jl
mov
xchg
test
push
stos
sbb
popf
add
jb
outsb
rclb
das
sbb
cmp
icebp
jge
xchg
xlat
cmpl
cld
pop
aad
loope
jb
pusha
aam
pop
inc
fldl
fidivrl
arpl
or
cmp
ss
fidivrl
aas
cmp
ja
mov
shlb
icebp
dec
lea
aam
xor
notl
inc
jmp
fdivrs
in
subb
and
mov
ret
cwtl
adc
xchg
inc
enter
add
cli
nop
jbe
jne
flds
jo
fwait
mov
daa
shl
inc
int
xchg
in
push
movsb
pop
outsl
repz
and
out
xchg
mov
jl
fcmovb
mov
and
lds
mov
aam
pusha
out
or
push
jmp
and
mov
enter
negb
inc
fcomps
and
out
addr16
in
int3
cmpsl
fcomps
fists
je
int3
mov
cmp
fcompp
ljmp
pop
jge
pop
sbb
ja
ljmp
push
lret
sbb
leave
out
fs
sub
adc
adc
mov
cmp
push
aad
pop
mov
jg
lock
pusha
insb
addr16
fs
lcall
stos
ljmp
mov
test
mov
pop
cmp
jbe
dec
mov
dec
jmp
and
pop
and
adc
xchg
mov
fnstenv
mov
lahf
rolb
femms
jno
pop
sub
mov
icebp
mov
mov
mov
test
lret
push
call
daa
adcl
test
pushf
pop
jle
push
jns
add
jp
pop
hlt
cmp
rep
imul
and
sahf
or
in
nop
test
push
rorb
jno
dec
inc
roll
cmc
add
pop
leave
adc
mov
pop
orw
movsl
fidivrl
shll
dec
aas
call
cmp
rcll
inc
sub
rol
stos
mov
inc
mov
mov
push
inc
mov
xchg
mov
pop
lret
mov
imul
push
pop
sub
cld
outsl
mov
jns
cmp
daa
loopne
aas
mov
jle
cmpsb
mov
shll
mov
and
xchg
enter
int
mov
lcall
xchg
push
call
gs
push
or
xor
xchg
out
mov
loopne
cmp
and
xchg
int3
mov
xchg
dec
and
aas
sub
inc
cmp
rcrb
mov
and
mov
fdivl
xor
mov
insb
mov
inc
mov
out
jo
push
xor
and
repz
or
mov
leave
sub
mov
into
fwait
ret
lahf
insl
mov
aas
ja
xchg
xchg
xor
fstps
fidivrl
mov
nop
or
sahf
mov
add
and
call
in
stos
jnp
xor
sbb
jb
out
mov
sub
lcall
lods
push
mov
inc
movsb
repz
add
push
mov
jg
xlat
aad
cld
mov
lock
inc
and
jb
adc
jo
cmpsl
ss
js
adc
test
jnp
push
push
mov
pop
fldcw
cltd
icebp
adc
sarl
scas
int
loopne
sbb
div
and
iret
fisubs
sti
incl
or
lock
test
mov
mov
cmpsl
add
outsb
fisubrs
xor
aad
stos
int3
hlt
hlt
xchg
addr16
sub
mov
jb
fstps
or
inc
inc
mov
aam
xor
mov
xorb
ss
pop
adc
jg
mov
btr
or
or
xor
iret
fcomps
popa
push
rcrl
mov
rorl
fs
test
outsl
or
rorl
ja
jmp
rcr
jp
rorb
std
or
or
das
xor
cmp
arpl
pop
sbb
loopne
pop
pusha
mov
imul
pop
and
pushf
sbb
xchg
mov
in
ret
int
add
dec
jle
jo
mov
in
adc
add
xor
push
add
ds
mov
repnz
cmp
int3
insl
lock
repz
imul
in
sub
loope
popf
aad
es
lock
push
sahf
jmp
xor
adc
sub
jg
add
add
push
add
add
lret
push
sahf
pop
xor
sahf
into
test
inc
cld
cmp
int
dec
jb
sbb
aad
cmp
and
sti
jnp
cmp
dec
sbb
pop
cwtl
orl
imul
push
mov
movsb
jo
stc
mulb
add
insb
mov
lods
lods
pop
mov
add
fnsave
pop
fnsave
aam
addl
mov
into
fistpl
lock
cmp
loopne
push
mov
bnd
xor
xlat
hlt
vpaddusw
clc
es
fidivrl
fnstcw
orb
addr16
lods
fldcw
pop
dec
loope
push
sahf
add
inc
call
or
out
std
into
decl
and
jecxz
inc
lea
pop
mov
mov
mov
nop
dec
test
add
pop
xor
icebp
fldl
fwait
cmp
lds
gs
dec
scas
sahf
ret
js
test
in
sbb
pop
lahf
mov
pop
dec
jo
test
add
mov
mov
sbb
sub
jbe
mov
push
sbb
ljmp
decb
mov
sbb
xchg
inc
jmp
repnz
sarb
jmp
je
jno
insl
int3
or
push
pop
int
push
push
popa
mov
and
hlt
sbb
shrl
mov
mov
inc
adc
push
sub
aaa
popa
fwait
cltd
push
sub
scas
or
push
outsb
fstpl
xchg
xor
shll
or
dec
add
lahf
out
pop
icebp
mov
mov
dec
xchg
jno
jb
psubw
cli
xchg
ret
ret
adcb
push
mov
cmp
mov
sti
add
lods
xor
js
popf
test
inc
mov
iret
jmp
out
inc
jnp
xorb
push
roll
cmpb
aaa
sub
movsl
fwait
into
shll
inc
or
mov
pushf
mov
xor
iret
sbb
cmp
loopew
push
ficoml
cs
pop
adc
dec
lods
dec
jae
in
imul
dec
fs
mov
cmp
push
jp
pavgb
in
xor
push
add
dec
inc
iret
ss
cli
test
in
add
repz
xchg
cli
std
or
xchg
adc
pop
sub
pop
fists
inc
sub
xchg
dec
jb
sub
jle
mov
xchg
xor
sbb
fldt
aaa
cmpsb
pushf
lea
aas
insl
lea
call
fdivrs
or
loopne
mov
sub
pusha
inc
jno
insb
cmp
jnp
jns
and
xchg
mov
insl
inc
mov
ljmp
rcr
out
xor
ja
sbb
sarb
iret
push
xchg
mov
shlb
scas
stc
in
xchg
addr16
shrb
add
add
xchg
adc
inc
dec
daa
cmp
daa
or
sbb
xorb
in
push
sub
cltd
loopne
mov
mov
jae
repnz
inc
and
mov
cmp
aam
push
rcl
rcr
scas
lock
lcall
imul
enter
loop
mov
in
fsub
test
stos
add
xchg
es
or
cli
in
cwtl
test
push
sbb
mov
sub
out
jnp
fldcw
mov
and
push
dec
lds
inc
jecxz
insb
jmp
sub
cmp
mov
xchg
cld
cmc
popa
test
fcoms
jg
xlat
insl
popa
ljmp
pop
sbb
aad
out
rorl
cs
mov
sbb
fldenv
sbb
xor
in
cld
addr16
push
mov
movsl
push
jmp
or
adcl
cmp
mov
mov
lret
lahf
insl
cwtl
sbbl
cmp
imul
insl
daa
push
xor
loopne
inc
add
adc
inc
rcll
mov
adc
fmull
in
das
pop
in
lds
dec
push
cmp
adc
pop
or
cmc
push
outsl
cwtl
adc
lds
add
imul
jnp
jae
and
mov
push
and
mov
daa
jg
adc
inc
scas
dec
jmp
mov
subb
inc
jg
xor
cmp
pop
cli
pop
add
nop
loope
fiaddl
data16
jge
std
loopne
lock
push
xchg
cmpsl
sti
mov
test
aas
in
sbb
stc
pop
add
push
sbb
mov
aad
fidivrl
add
push
movb
jbe
scas
jo
sub
testl
mov
rclb
mov
inc
add
pushf
pop
cmp
cmc
out
or
xchg
fwait
pop
cwtl
test
add
test
cli
out
or
cli
shl
lods
xor
xchg
mov
dec
xchg
pop
add
rcrl
push
mov
dec
leave
mov
cli
mov
sbb
mov
sbb
pop
std
in
mov
inc
scas
xor
fld
aam
and
jo
sub
adc
test
insl
imull
enter
sub
sub
mov
scas
push
popa
jecxz
xor
or
add
in
cli
sbb
or
jnp
leave
add
les
mov
outsl
pushf
stos
xchg
ss
sbb
mov
dec
mov
daa
and
sbb
pop
into
push
sbb
adc
lds
sub
loope
push
sub
xchg
adc
sti
pop
cmp
pop
adc
xchg
pop
shrl
adc
pop
dec
mov
enter
cli
int
xor
xor
insl
lock
loopne
int3
sub
leave
pop
jecxz
and
in
mov
dec
mov
jl
aam
mov
mov
or
seto
movsb
sbb
jne
adc
jnp
inc
mov
scas
aaa
daa
adc
insb
lea
repz
mov
push
and
js
nop
add
arpl
xor
sub
mov
xchg
mov
push
leave
test
das
test
imul
sub
push
js
and
lods
add
or
jnp
dec
fstpt
inc
in
bnd
in
push
jnp
cmc
int3
lret
push
xor
pop
mov
mov
jmp
xchg
cli
hlt
xchg
call
adc
add
lret
rcr
dec
dec
js
inc
std
fbld
cld
push
repnz
push
mov
mov
movsl
je
test
ja
dec
test
rclb
xor
pop
clc
cmpsl
rcrl
cmp
xor
out
arpl
pop
sbb
in
push
add
pop
scas
lds
dec
jmp
dec
sbb
test
in
mov
dec
lods
xchg
mov
xor
mov
or
push
popf
adc
fisubl
push
into
push
or
cmp
xchg
or
pusha
sub
sbb
sbb
test
push
lea
pop
adc
inc
push
jp
aaa
and
pop
cli
loop
mov
or
sbb
out
outsl
jle
mov
mov
mov
in
adc
jl
sarl
jp
sbb
adc
pop
adcl
leave
xchg
xchg
cwtl
push
popa
push
add
adc
push
jecxz
pop
mov
out
or
div
xor
xor
dec
icebp
outsb
sbb
xorb
pop
inc
ss
scas
aas
lahf
bswap
ss
nop
inc
hlt
test
adc
xlat
mov
mov
jge
jl
sahf
les
mov
insl
jg
std
in
inc
sti
je
cli
jecxz
push
xor
rorl
and
js
dec
aaa
cmp
ds
xor
mov
mov
mov
repnz
call
dec
jecxz
push
stos
add
ror
rclb
mov
or
loope
shl
lods
or
add
lea
and
adc
inc
insb
je
jbe
inc
add
xlat
mov
inc
fdivrl
pop
xor
and
rolb
mov
pop
xchg
ds
cmpsl
xor
rclb
sbb
dec
add
fs
cmp
sub
sub
xor
pushf
sahf
add
ret
mov
pop
add
scas
scas
and
ljmp
adc
test
icebp
mov
mov
mov
ja
cmp
pop
jmp
int3
cmp
push
push
ret
jp
mov
fidivl
sbb
repnz
mov
sbb
dec
or
mov
dec
xor
add
cmp
jbe
lea
lret
jb
int
cli
int
data16
hlt
mov
int3
mov
inc
call
ja
and
mov
fnstcw
popa
js
cmc
std
pop
jbe
or
lods
cs
sbb
into
jp
ljmp
movsb
xchg
sbb
adc
mov
in
loope
popf
lea
and
sysexit
call
in
sar
mov
jne
adc
mov
dec
nop
lcall
cmp
adc
xorl
and
das
in
jl
push
jbe
dec
mov
test
sub
rorb
pop
xchg
aad
jbe
mov
push
adc
pop
jmp
add
lds
fld
outsb
fstps
mov
pop
and
push
rcll
nop
lcall
adc
aam
sti
mov
orb
fidivl
jl
dec
cmp
scas
mov
mov
int
cmp
push
fldt
mov
inc
xchg
sbb
inc
inc
arpl
shl
pop
cmp
or
sub
mov
or
test
imul
jl
out
cmp
in
nop
inc
nop
xchg
inc
add
inc
xor
aad
xor
nop
aam
xlat
push
pop
sahf
mov
jp
add
addl
out
shlb
das
push
ret
mov
loop
lret
test
pop
and
lret
dec
sub
and
mov
inc
int3
dec
mov
sbb
stc
xor
lds
mov
std
and
fldl
and
insl
jbe
mov
imul
push
and
mov
pop
mov
adc
dec
mov
cmp
or
jp
add
decl
test
xlat
xor
xchg
xchg
xchg
mov
push
xchg
aad
les
call
imul
mov
mov
cmp
mov
pop
aam
repz
lock
mov
adc
push
adc
mov
xchg
out
dec
scas
xor
rorb
lahf
hlt
shll
not
insb
in
movnti
pop
das
cmpl
push
push
lea
fldt
bound
inc
stc
mov
mov
sub
sbb
or
pop
adc
aaa
lods
sti
xchg
icebp
pop
leave
ja
lret
xor
sub
movsb
inc
xchg
mov
rol
ret
pop
loop
pushf
pop
stos
fsubrs
out
ja
jmp
mov
push
stos
push
mov
stc
lahf
mov
ret
shrb
scas
iret
jl
push
adcb
int
cmp
imul
mov
in
dec
cwtl
and
mov
dec
mov
decl
push
xchg
scas
mov
cmp
add
test
popf
out
mov
pop
mov
vsubss
sarl
pop
mov
lods
and
add
iret
ja
sub
ret
xor
cmp
fs
lds
and
je
dec
fmuls
pop
dec
and
xor
adc
cmpsb
out
pop
out
out
test
cmc
push
cmc
pop
pusha
lret
insb
daa
test
inc
mov
sbb
test
daa
jns
ret
std
mov
sti
imul
outsl
xchg
sti
in
pop
mov
xor
scas
mov
mov
test
jnp
jnp
push
mov
stos
clc
dec
ja
dec
pop
push
mov
dec
add
push
stc
cmp
lds
add
loop
and
pop
pop
mov
lret
das
jbe
mov
pop
dec
dec
test
xchg
imul
mov
es
hlt
adc
addl
jge
hlt
movsb
pop
push
lods
cmp
push
cmp
xor
inc
and
cmp
pusha
movsl
aaa
sub
push
test
push
cmc
adc
dec
stc
mov
mov
jmp
js
aad
je
inc
pushf
dec
xor
xchg
add
in
pop
fsts
add
test
push
stc
out
push
stc
sbb
cwtl
xchg
into
sbb
pop
xor
xor
sbb
add
cld
int3
cmp
scas
iret
sbb
mov
push
cwtl
ljmp
inc
sbb
stos
ret
mov
sbb
dec
sti
lcall
mov
test
ret
jne
sti
movb
jno
loope
loopne
push
in
lods
lret
out
pop
xor
rorb
shlb
int
mov
xchg
lock
xlat
add
popf
xor
sub
sub
sbb
addl
shlb
push
movsb
inc
fisubrl
cld
add
stos
pop
sbbb
fndisi(8087
rolb
repnz
and
or
out
test
mov
jae
addr16
sti
add
jmp
push
mov
mov
into
rorb
gs
push
mov
test
in
xor
into
out
and
lcall
lret
mov
push
pop
add
movsl
xor
pop
mov
repnz
push
xor
les
lea
dec
add
ret
data16
mov
jo
lods
xor
das
sbb
rolb
dec
outsl
mov
add
pop
fwait
cmpsl
stos
mov
adc
jecxz
xchg
mul
stos
inc
xor
es
loope
or
push
mulb
xlat
xor
lret
inc
mov
inc
cmpsb
outsl
adc
loopne
cmp
aas
mov
mov
sbbl
jmp
mov
jl
ja
outsl
xchg
ljmp
cmpsb
xchg
es
add
lods
mov
sbb
sbb
lcall
leave
in
adc
fisubrs
adc
xlat
repz
dec
push
jle
aam
push
cmp
xchg
jle
mov
call
call
dec
cld
pushf
mov
stos
and
scas
mov
and
ljmp
stc
outsl
rclb
gs
jo
ret
in
fs
and
mov
jg,pt
rcl
testb
xchg
adcb
dec
das
jge
sti
int
cmc
int
sub
cli
sahf
clc
pop
pop
cli
in
daa
ret
sti
jp
call
test
sbb
sub
divl
dec
add
add
stos
inc
jns
or
divb
sbb
popf
not
das
ljmp
jns
addr16
ss
jle
and
add
push
pop
add
es
and
cmpsb
cwtl
cwtl
pop
popa
dec
outsl
loop
add
sbb
mov
ljmp
xchg
lea
dec
cwtl
in
sbb
ds
fiaddl
loope
sbb
and
or
inc
jp
imul
adc
lods
mov
leave
repz
sub
pusha
mov
stos
dec
jmp
pop
sti
cwtl
cmp
in
sub
nop
sub
and
ljmp
cs
lahf
ja
ss
data16
stos
sub
dec
icebp
jne
cmc
call
sarl
push
enter
das
mov
xchg
push
add
add
movsb
jge
or
outsl
dec
popa
or
int
jp
cltd
lea
push
push
gs
sbb
negl
daa
push
ljmp
mov
adc
jae
loop
in
xchg
push
lret
fbld
dec
negb
push
das
mov
inc
pop
ss
incb
add
pop
in
lret
and
cmpsl
sub
stos
roll
lret
enter
scas
popa
in
cmc
into
ss
enter
add
hlt
add
inc
xchg
and
ds
xchg
jae
sbb
and
adc
mov
pop
cmp
jmp
add
mov
xor
imul
jle
divb
hlt
xlat
push
sub
jne
imul
add
popf
popa
nop
into
mov
popf
inc
in
std
lods
jg
push
int3
pop
addr16
lock
lahf
test
mov
aaa
lahf
mov
mov
jnp
orb
mov
pop
xorb
mov
pusha
ret
xchg
lcall
test
lret
call
int3
sub
stos
addr16
fwait
sti
pop
push
sub
stos
int3
subb
rorb
out
xor
inc
push
rol
cmp
insb
aaa
sub
scas
ret
test
shr
jp
mul
add
fmull
push
ret
xchg
push
xchg
add
add
jo
ljmp
imul
test
dec
icebp
pushf
xor
aam
negb
int
dec
mov
push
inc
rcrl
push
mov
int
jp
aad
int
int
pop
scas
js
movsb
in
arpl
fwait
xchg
call
cmpsb
insb
cwtl
sub
mov
jecxz
sbb
cwtl
loope
jns
adc
fprem
imul
push
mov
clc
leave
adc
decb
add
sub
stc
lea
or
mov
inc
and
stc
jl
xor
cmp
and
jecxz
test
daa
jp
cwtl
int
scas
test
jo
loopne
ret
sub
sub
pop
lds
out
mov
lods
movsl
jne
les
fs
pop
scas
outsl
test
mulb
js
bound
jmp
aad
mov
add
dec
mov
scas
xor
ret
and
mov
jle
and
pop
dec
scas
ss
adc
mov
testl
mov
cli
and
jo
fdivl
imul
das
inc
in
loopne
jnp
movsb
sbb
mov
xor
pushf
cld
ja
adc
ds
jb
jb
cmpsb
test
sub
push
pop
sub
loop
shll
xor
std
xchg
mov
xor
std
dec
cmpsb
pop
mov
ret
and
mov
sub
lahf
fdivs
sub
add
test
fisttpll
mov
ljmp
lahf
sub
inc
or
je
mov
pop
dec
cmc
jle
dec
push
pushf
shll
repz
push
fdivl
cmpsb
inc
fadd
js
neg
pop
rclb
das
aad
iret
int
push
popf
dec
mull
cli
push
lods
out
or
sub
xchg
push
jge
xor
xchg
das
mov
xor
add
and
cmp
shrl
sahf
cmpsl
outsl
shrb
xor
inc
mov
js
and
repz
cli
pop
movsl
cmp
mov
popf
arpl
push
cmp
mov
add
add
push
sub
and
fisubs
pop
sub
add
and
icebp
jge
fcmove
ja
push
jl
out
add
jno
cli
xchg
mov
cld
in
test
mov
dec
sti
mov
icebp
inc
push
test
mov
out
in
jge
mov
stc
mov
lret
into
adc
aam
repz
cltd
inc
jl
mov
inc
push
cwtl
mov
pop
add
or
or
into
cmp
test
lods
stos
loopne
cmc
mov
int
dec
insl
or
lock
mov
cmp
ficompl
lock
leave
jns
movsl
out
xchg
popa
je
cs
test
push
push
mov
es
sub
cmp
lds
dec
push
sub
test
pop
ss
jg
dec
mov
ret
push
fildll
jl
and
add
adc
inc
sbb
hlt
cmpb
push
and
fwait
pop
les
adc
pop
mov
jns
xchg
push
cmpl
xchg
fwait
cmc
cld
push
sbb
fistpll
xor
jno
xchg
daa
sub
movsb
adc
or
daa
mov
sub
jl
mov
dec
xchg
sbb
pop
mov
pushf
stc
orb
jmp
dec
ds
dec
rcll
push
push
nop
cmc
push
xchg
jns
adc
ss
inc
mov
mov
inc
pop
add
ja
sahf
inc
and
repz
fwait
andl
push
mov
mov
sbb
mov
call
out
jg
movsb
mov
dec
or
sbb
add
in
enter
jne
bswap
or
pop
cmp
nop
mov
inc
lret
hlt
call
pop
mov
idivl
inc
outsl
pop
dec
iret
pusha
test
or
or
inc
outsl
fstpt
jl
sub
js
sbb
cs
adc
mov
lods
inc
sbb
mov
fstl
pop
cs
movsl
pop
jno
sub
dec
jmp
or
sbb
mov
daa
sbb
inc
dec
pop
cmp
and
sti
fbstp
add
mov
fisttpl
fisubrl
mov
outsl
cmc
nop
cmp
xchg
xchg
sub
and
push
jo
loope
lret
xorb
fsub
lock
lock
sbb
mov
je
fs
imul
fmul
sbb
cmp
movb
bound
roll
cmp
in
scas
out
lea
push
pop
push
stos
dec
jne
jne
ljmp
add
or
popf
push
int
fisttps
out
outsl
jmp
mov
sub
push
mov
pop
int3
ljmp
add
or
daa
add
dec
xchg
add
xor
cmp
xor
cmc
pop
or
jae
xor
sub
std
adc
outsb
pop
stc
jne
popf
rcr
enter
sbb
mov
adc
pusha
push
je
mov
cmp
add
jbe
mov
pop
pop
cmp
test
ljmp
enter
and
inc
cmp
jle
mov
inc
cwtl
cs
dec
sbb
adc
into
push
shrb
fnstcw
ds
xchg
push
out
divl
shll
jns
xchg
enter
jmp
xchg
test
shrb
dec
adc
pop
adc
or
out
in
or
jmp
ret
dec
jp
xchg
fisubrl
ja
jnp
mov
add
daa
xor
aaa
mov
movsb
mov
lods
out
mov
pop
cmc
cmp
cld
insb
or
push
shll
leave
add
ss
mov
push
push
sbb
outsl
popa
dec
pop
mov
add
scas
int3
sbb
mov
imulb
sub
rcrl
mov
pop
loopne
test
imul
ja
insb
dec
mov
push
inc
cmovbe
xchg
dec
test
fisttps
push
lock
dec
into
mov
xchg
shlb
jmp
inc
std
and
and
jmp
loop
sbb
cmpsl
inc
xchg
dec
mov
inc
int
faddl
add
push
xchg
stos
and
jg
es
lret
lods
xor
pop
lods
bound
sahf
scas
push
xlat
ja
mov
pusha
rclb
dec
fcmovb
mov
cmp
outsb
sbb
lret
xor
nop
sub
xchg
loop
sbb
rol
scas
cmp
sub
iret
and
inc
cmpsl
and
jecxz
dec
mov
scas
mov
mov
and
aas
icebp
pop
xchg
inc
inc
adc
stos
cmp
fsubrl
or
add
jecxz
cmp
adc
jnp
xor
das
jle
xchg
sbb
mov
in
xorl
ja
leave
mov
aas
imul
add
xchg
push
in
ja
out
fidivrl
bound
out
sub
in
jg
pop
mov
push
sbb
sarb
adc
out
ret
push
cmpb
adc
hlt
mov
sub
btc
movb
cs
jno
mov
js
ja
stos
pop
mov
mov
stos
aaa
outsb
jnp
xor
xor
lcall
jnp
movsb
pusha
push
sub
call
fistpll
push
in
rcrb
push
cs
jg
nop
adc
scas
inc
pushf
cwtl
mov
sbb
dec
push
add
psubd
nop
or
sbb
stc
sti
pop
lret
je
inc
add
dec
xor
sub
mov
adc
je
cs
icebp
insl
mov
lahf
insb
aaa
sub
sar
dec
mov
and
sbb
aaa
inc
cli
mov
dec
sub
adc
push
fwait
cmp
pop
cmc
push
mov
roll
jg
sub
lods
mov
pop
lods
dec
ja
jb
pop
call
aad
add
and
mov
or
mov
mov
cmc
cmp
frstor
ljmp
push
jecxz
cwtl
shll
cld
push
into
push
cmpsl
subl
mov
outsl
xor
arpl
or
xchg
ljmp
cmpsb
lea
fnstenv
icebp
and
xor
dec
mov
arpl
xchg
lahf
cld
in
jno
les
sub
ficoms
cmpsl
mov
pop
adc
lods
subb
inc
insl
sbb
xchg
xchg
rcrb
enter
dec
push
cwtl
cmp
out
xor
mov
ss
pop
jne
lds
adc
and
sub
sahf
rolb
inc
imulb
shll
rcl
mov
jne
xor
pop
jnp
ds
sbb
mov
movsb
das
push
cmpsl
pop
push
ds
sub
jp
fcompl
pop
fldenv
outsw
ret
dec
cmp
push
push
sub
dec
lock
out
mov
jp
mov
lds
cmpsl
nop
mov
rcrl
xchg
xchg
pop
orb
outsl
and
cmp
mov
inc
mov
movsl
fcoml
mov
sti
loop
rorb
data16
pushf
mov
ficomps
daa
fbld
adc
add
or
cmp
mov
loopne
stos
lcall
lret
and
mov
fbld
pop
inc
jnp
or
cmp
lcall
loope
outsb
dec
mov
imul
popa
cmp
xor
pop
pushf
or
mov
addb
mov
movsb
xchg
daa
pop
adc
push
aad
in
push
outsl
push
adc
das
mov
dec
mov
mov
in
and
mov
mov
fisubrl
sbb
frstor
xor
in
lret
mov
rorl
sub
sbb
mov
xor
xor
pop
imul
cmp
inc
test
dec
adcl
mov
pop
and
jns
int3
jl
shr
and
out
mov
sub
mov
adcl
scas
push
incb
ficoml
push
lcall
out
movsl
adc
out
gs
ja
xchg
or
je
scas
clc
out
push
push
fisubs
inc
jl
repz
pop
push
out
push
outsb
shll
dec
dec
mov
xchg
mov
int3
pusha
sub
pop
fimull
iret
scas
mov
jmp
in
xchg
out
inc
fs
jb
orl
jne
roll
daa
inc
dec
xlat
pop
pushf
inc
xchg
dec
pop
insb
lea
cmp
ja
call
sub
adc
or
jne
test
in
lods
cmp
popf
push
cmp
push
mov
inc
add
insb
adc
jp
nop
pop
int
jb
inc
mov
outsl
pop
adc
adc
sti
out
mov
pop
out
pcmpeqw
cmp
cltd
fdivs
outsb
xorb
mov
outsb
out
cltd
and
int3
dec
fnstenv
push
fsts
int
xchg
stos
shr
lea
leave
mov
xor
mov
aas
push
pop
lods
mov
jp
ja
adc
mov
scas
adc
dec
fdivrs
mov
into
shlb
mov
sub
out
inc
push
pop
xrelease
into
idivl
call
loopne
mov
int3
or
cmp
loope
hlt
pop
into
sub
les
add
mov
and
xor
cmp
test
mov
sbb
fs
gs
out
xchg
mov
mov
add
mov
outsl
adc
sub
dec
adc
fwait
jne
push
in
inc
outsl
nop
subb
movsb
jnp
pop
in
inc
or
mov
mov
mov
cltd
jmp
mov
in
dec
and
mov
xor
popa
push
rol
inc
into
repz
lds
movsb
xor
mov
test
pop
fcomp
rolb
imul
lea
dec
cli
sar
fucomp
and
loopne
mov
lret
jne
fiaddl
xchg
push
imul
repz
test
sbb
push
notl
ds
push
jo
fcomp
add
mov
fimuls
xor
and
pop
fstps
pushf
in
cmp
push
push
loop
sub
loop
mov
scas
push
pop
repnz
mov
daa
imul
arpl
rolb
inc
mov
push
pushf
cmpsb
dec
rcr
xchg
out
pop
pop
mov
mov
loopne
inc
je
xor
loop
inc
push
loopne
pop
mov
mov
or
or
fcomi
loop
cmp
stc
aaa
js
add
imul
out
mov
movsl
xchg
mov
and
cld
movsl
sub
adc
lcall
movl
xchg
es
xor
mov
inc
jns
jo
pop
xor
add
inc
imul
sub
push
push
mov
sbb
xchg
mov
sbb
dec
divb
mov
cwtl
outsb
sub
lods
popa
test
pop
es
lods
or
push
test
insb
decl
xchg
js
rclb
in
fiadds
xchg
adc
int
and
jecxz
adc
inc
nop
fistps
lds
cmp
push
mov
sbb
fidivs
xor
aad
lods
popa
sti
push
push
in
jge
leave
sbb
mov
sub
int3
mov
push
xchg
mov
sarl
mov
shlb
mov
scas
rcr
cmpsb
dec
push
dec
mov
xor
dec
push
jle
movsl
add
cld
jg
mov
hlt
insl
cmp
add
int3
aam
mov
mov
stc
addr16
sbb
jbe
rorl
fidivrl
mov
int3
add
fistpl
stos
inc
in
mov
stos
push
call
ljmp
push
jae
aam
sub
ds
xchg
aaa
xchg
push
int3
out
into
jbe
jge
scas
or
std
inc
fmul
mov
arpl
mov
and
or
pop
je
loop
sarl
test
aas
scas
mov
cmp
xlat
insb
pushf
shlb
iret
into
aad
push
cmp
add
sub
daa
jbe
data16
inc
xor
mov
xchg
hlt
xlat
push
xchg
cmp
aad
inc
insb
imul
lock
dec
jg
fmulp
push
les
ljmp
fstps
pop
enter
arpl
add
mov
repnz
mov
push
pop
or
mov
sbb
jnp
mov
push
mov
dec
pop
cld
les
mov
in
mov
insb
push
cli
mov
mov
lcall
fldl
ljmp
popa
movsl
notl
mulb
jl
inc
lret
inc
jle
data16
mov
std
icebp
sbb
and
sbb
jae
adc
xchg
cmp
data16
mov
dec
mov
xchg
inc
jg
push
scas
mov
jl
jae
jno
int3
pop
adc
pushf
jbe
ja
fisubrl
cmp
mov
adc
mov
mov
hlt
xor
test
jge
push
xor
push
in
xchg
sub
jmp
xchg
jns
and
lret
ds
push
mov
or
and
das
je
mov
dec
fcoml
popa
xchg
in
stos
pop
roll
push
or
rorb
xlat
cmc
dec
popa
push
cltd
mov
fs
sbb
in
movsl
ds
and
into
cmpl
sarb
adc
cmc
insb
cld
cmp
xlat
jl
out
pusha
fisttps
aaa
push
xlat
mov
mov
push
lds
or
fildll
pop
mov
xchg
or
sti
loopne
fisubl
gs
and
fstps
lret
push
das
jmp
insb
and
hlt
add
lods
sub
mov
std
or
mov
jge
mov
sbb
mov
mov
mov
repnz
insl
inc
mov
shrl
daa
imul
loopne
jne
jae
adc
ja
repnz
imul
cmp
mov
jmp
push
out
adc
loop
fistl
out
out
dec
rcr
mov
shll
mov
mov
pop
mov
fadds
xchg
push
mull
out
mov
xlat
sub
jno
fstp
test
mov
xchg
lcall
sbb
xor
or
es
and
pop
out
pop
sahf
in
xchg
pop
pop
scas
mov
ss
cmp
mov
inc
out
xor
sbb
stc
sbb
xchg
cli
leave
push
fidivrl
mov
push
and
fcompl
imul
mov
aad
or
mov
push
fs
pop
xchg
cmp
xor
stc
insb
fldenv
inc
add
ret
sub
jmp
inc
insb
lahf
bound
add
outsl
inc
lods
nop
dec
je
cmp
les
cmp
divb
adc
sub
stos
push
dec
imul
divl
shll
test
data16
fiaddl
mov
movsl
sahf
mov
cli
sub
pop
inc
xor
mov
jae
jl
xor
mov
adc
sbb
adc
aaa
and
leave
jecxz
jns
ret
mov
jbe
sub
dec
mov
repz
sbb
ja
xor
mov
add
sahf
mov
insl
xchg
push
cltd
jo
and
cmc
sbb
add
loope
repnz
push
jl
mov
xchg
sar
adc
add
shrb
arpl
and
ret
jns
mov
test
xor
push
inc
inc
in
notl
mov
repz
popa
rclb
je
scas
sbb
xchg
data16
mov
adcb
inc
pop
pop
jle
insl
pop
mov
sar
daa
sbb
push
mov
testl
mov
or
xor
bound
sahf
push
push
cmpsb
stos
out
cmp
repnz
mov
faddp
cmpb
bound
outsb
adc
fldcw
sub
daa
out
in
xchg
leave
lods
das
push
or
and
xlat
fisubl
pop
or
outsl
xchg
jae
xchg
ss
idivl
inc
add
outsl
sbb
lock
cmpsb
mov
mov
mov
outsb
loope
inc
clc
jno
bound
cmp
stos
mov
int3
or
pop
stos
fnstsw
or
jns
pushf
fists
iret
xor
data16
js
inc
xchg
cli
out
jne
cli
pop
cmpsl
out
data16
test
xor
rcrl
mov
xor
fidivrl
mov
sub
inc
stos
add
and
pop
stc
clc
dec
push
mov
popa
icebp
mov
add
ss
lcall
cli
ss
xchg
or
rorb
push
mov
in
std
add
pop
inc
nop
ficompl
xchg
adc
out
push
adc
inc
jne
je
dec
push
and
mov
fcmovb
fdivrp
or
frstor
mov
loopne
mov
sbbb
rcrl
cmpl
call
xchg
ret
add
scas
mov
sub
rcrb
push
mov
std
push
sbb
movsl
cmp
lods
and
sbb
std
adc
shlb
stos
mov
push
mov
bound
aam
cmp
vmovlpd
or
add
aas
xchg
fiadds
adc
inc
setbe
mov
sbb
mov
movsl
pop
and
sbb
sarl
enter
mov
ljmp
dec
push
mov
xor
lods
aad
xchg
test
inc
das
dec
int3
ror
loopne
mov
les
test
xor
mov
dec
cmc
mov
sub
push
enter
and
data16
push
loope
pop
mov
cmp
mov
mov
push
js
lret
stos
fildl
adc
inc
push
mov
xchg
scas
jmp
repnz
mov
js
arpl
dec
mov
mov
jne
sub
jmp
push
lret
add
aas
into
push
aaa
out
and
ja
inc
rcrl
inc
mov
jnp
rcr
mov
lret
mov
or
lret
sbbl
push
sbb
setbe
imul
xor
cmpsl
loopne
dec
push
fsubrs
push
mov
inc
inc
leave
into
add
dec
mov
lods
sub
test
inc
push
enter
adc
lahf
das
jne
jo
jns
leave
and
fimuls
cmp
cmp
mov
or
stc
test
lods
mov
lahf
leave
mov
stos
ret
cmp
inc
in
jp
mov
push
popf
or
fisttpl
jns
dec
push
pop
cmc
sbb
mov
fldl
clc
lea
scas
xor
fisttps
shll
push
push
test
add
rcrb
and
push
insb
cmpsl
mov
jecxz
or
cmp
push
cwtl
ss
lods
fbstp
add
mov
add
fimull
call
or
cmp
aaa
ja
cmpsb
test
push
pop
stc
jge
cmp
out
in
xchg
lret
lret
iret
ljmp
lret
pop
push
and
adc
xlat
sbb
std
push
insb
mov
into
jmp
push
sub
and
inc
mov
jg
push
insl
mov
adc
fisttpll
dec
mov
and
jno
xchg
pop
test
dec
sbbb
lds
enter
lea
push
add
pushf
mov
cmp
mov
arpl
icebp
fsubrl
jb
les
inc
filds
or
push
loop
jb
out
pop
cmp
aaa
mov
cmpl
sub
push
call
or
lods
roll
or
xlat
nop
int3
repz
cltd
jp
movsl
pop
stos
jno
mov
dec
push
xor
sub
int
jno
stos
mulb
cmp
mov
cmp
cltd
movsl
nop
jle
cmp
cltd
mov
mov
inc
push
mov
sbb
xchg
je
daa
add
in
mov
std
add
inc
or
mov
mov
sbb
gs
cmp
jne
in
sti
pop
mov
mov
es
stos
inc
rcr
inc
in
imul
jge
cmpsb
push
movsl
mov
lret
pop
pop
lret
roll
cmpsb
push
pushf
aaa
sub
pusha
jle
mov
fisubs
xchg
into
xchg
mov
jne
rcll
jl
sbb
sbb
xor
mov
dec
cmp
in
mov
inc
pusha
jne
gs
ljmp
adc
aas
jns
mov
cmp
mov
cld
push
js
test
xchg
jmp
or
jl
aam
stos
out
stos
push
movl
aad
adc
les
outsl
push
repz
dec
inc
mov
jecxz
pop
fidivs
xchg
imul
push
jp
std
jb
popf
mov
ss
adc
movsl
add
mov
outsb
jecxz
and
and
iret
dec
rcr
adcl
fldenv
in
lahf
fsubrs
xchg
cs
pop
movsl
xor
sub
mov
dec
sub
xchg
jl
cmc
insl
insb
xor
pop
out
xchg
popf
push
cmp
aas
inc
cmp
xchg
add
lret
cmc
int3
in
rorb
test
gs
adc
in
insb
out
xor
andb
aaa
iret
or
sub
mov
aaa
push
cmpsb
push
shll
jp
xor
stos
popa
mov
fdivrl
sahf
xor
inc
xlat
mov
sbb
mov
lea
loop
xchg
lcall
inc
test
push
xlat
ja
test
cmp
pop
and
mov
mov
sbbb
icebp
outsb
mov
loopne
shll
or
fwait
dec
xorb
xlat
repnz
pop
test
xchg
sarl
movl
addb
xchg
les
cltd
sub
dec
or
cmp
sbb
std
les
or
mov
ss
shlb
mov
ja
stos
lock
cld
xor
fstps
adc
xor
stos
xchg
inc
jle
xor
sarb
ljmp
pop
adc
inc
xchg
sub
popa
inc
inc
sub
pop
cmpsl
enter
jle
jle
lcall
xchg
int
push
mov
enter
inc
pop
lods
xor
jno
imul
mov
icebp
pusha
cmp
mov
inc
fcmovnu
in
mov
push
cli
push
lock
xchg
mov
sbb
push
or
dec
fs
xor
imul
sahf
adc
scas
xchg
add
pop
orb
bound
in
push
dec
mov
popf
pusha
cmp
cmc
pop
call
imul
cli
pop
cs
add
out
jg
xor
adc
cmc
pop
shrb
test
push
movsb
outsl
mov
insb
stc
xor
cli
mov
int3
sbb
or
stos
test
notl
cmpsb
movsb
ljmp
cltd
imul
icebp
std
and
dec
jb
pusha
rcr
and
jg
popf
adc
js
sbb
sub
enter
cmpsb
mov
add
push
cld
inc
out
pop
jnp
dec
nop
mov
xchg
rcll
mov
jg
lahf
or
repnz
mov
nop
inc
stos
stos
aad
shr
adc
fistpl
mov
and
push
sub
xchg
pop
xor
or
jno
dec
jb
jnp
mov
or
mov
and
mov
addr16
add
push
mov
or
bound
out
sbb
dec
and
xchg
xor
and
cmp
call
out
and
xchg
fs
jo
pop
mov
lock
mov
popf
incl
aad
aam
jo
rorb
mov
xor
or
push
push
sbb
divb
cmc
loope
or
sub
bound
and
cmc
add
out
popa
pop
lcall
pop
mov
test
pop
adc
or
push
cmp
out
or
stos
or
add
inc
outsl
cmpsl
inc
cmp
xchg
cmp
ficompl
sub
bound
ljmp
outsb
sub
cwtl
fwait
pushf
xor
dec
stos
pop
test
push
lahf
daa
inc
psllw
pop
mov
clc
mov
popa
daa
mov
icebp
test
mov
in
es
push
push
pop
std
jb
push
dec
cltd
pop
adc
mov
mov
pop
fdivl
inc
add
movsl
adc
test
xchg
add
shll
xchg
fdivrl
or
pushf
inc
clc
aam
mov
lds
pop
shrl
adc
mov
sahf
insb
loopne
icebp
cmp
out
clc
xchg
add
pushf
dec
fldenv
and
mov
mov
sub
imul
cmp
test
mov
xlat
dec
pmovmskb
test
mov
imul
xlat
lods
jbe
test
cmp
push
lock
jns
or
fistl
mov
rolb
cmp
and
inc
mov
pop
ds
mov
jne
mov
jno
fcoms
out
jo
popa
stc
in
fidivs
out
push
ljmp
and
push
sbbl
lcall
cmp
sbb
xor
fwait
or
jb
lds
sub
subb
inc
xchg
aad
cli
sbb
push
sub
leave
lea
pop
les
and
inc
sti
jl
mov
imul
sbb
scas
push
push
ficoml
adc
test
cmp
add
xor
xor
out
andb
iret
inc
fdecstp
jns
mov
pop
dec
into
mov
cmp
mov
adc
sbb
int
test
sbb
xchg
mov
subb
xchg
loope
mov
add
fdivs
lea
mov
in
mov
adc
jmp
mov
test
dec
push
cs
xor
ror
out
sub
xchg
gs
sbbl
adc
jle
sahf
mov
jle
aas
mov
popa
jo
adc
enter
jl
es
pop
push
adc
mov
xor
push
xlat
dec
xor
add
mov
popf
push
and
inc
mov
cli
xchg
into
xchg
lea
orl
cmp
mov
push
xor
push
xchg
insl
sbb
inc
jae
orb
dec
repz
pop
or
push
leave
ljmp
mov
ss
cltd
or
dec
dec
cs
jl
add
ret
dec
loop
mov
inc
or
sub
addl
imul
aad
sbb
movsb
scas
daa
fidivs
push
or
xchg
insl
inc
in
mov
push
pop
adc
stos
repnz
mov
mov
jns
add
jge
stos
fistpl
cmpsl
sub
test
movsb
jecxz
out
adc
in
inc
dec
cmpsl
pushf
adc
jb
jns
xchg
insl
nop
fistps
add
icebp
jo
or
mov
out
clc
sbb
xchg
mov
clc
jmp
mov
test
std
in
push
mov
add
mov
lret
leave
ljmpw
pop
out
scas
and
xor
imull
jg
clc
inc
mov
fisubs
cmp
enter
jae
jp
mov
movsl
mov
js
movsl
mov
inc
jg
in
push
mov
and
lahf
popf
push
dec
push
or
or
xor
stc
xorl
mov
mov
xchg
mov
and
xchg
aad
mov
pop
int3
sbb
rol
jecxz
cmp
or
mov
fwait
fwait
nop
push
mov
push
rorl
push
push
in
xorl
ja
aas
sub
cmp
xchg
cld
xlat
mov
jae
rorb
scas
outsb
mov
daa
add
sub
or
enter
fld
push
xchg
shlb
out
and
pop
js
push
imul
push
or
jecxz
and
bnd
data16
fldcw
adc
xchg
addr16
xchg
imul
sub
push
adc
xchg
mov
xor
scas
sti
sub
cltd
xchg
mov
hlt
movsl
jl
loopne
push
or
sahf
fwait
outsb
lds
mov
pop
xchg
cmp
mov
xlat
aaa
fadds
lret
adc
xchg
inc
scas
nop
sub
and
inc
stos
hlt
cmp
rolb
mulb
icebp
inc
out
out
xchg
dec
mov
jb
cmc
pop
outsb
push
adc
fdivs
xor
sti
adc
push
sbb
jno
lahf
or
cmp
test
shlb
sub
dec
andl
mov
or
loope
or
pop
fisubs
adc
mov
xchg
in
test
repz
mov
lret
adcb
mov
sahf
inc
xchg
jnp
or
pop
cmpsb
cmpsb
dec
sub
jg
outsb
ds
sub
mov
dec
outsl
mov
pop
iret
mov
aad
es
mov
inc
bound
add
dec
outsb
mov
test
repz
addl
dec
adc
lret
popf
nop
int3
sbb
cmp
pop
cmpsl
lret
pop
call
sbb
bswap
rcr
fldl
fld
leave
popf
imul
mov
stos
int3
xchg
mov
inc
shlb
inc
outsb
jnp
pusha
add
rcrb
ljmp
or
and
add
adc
sbb
arpl
xor
insb
lods
lret
bound
test
outsl
inc
dec
inc
andb
in
jns
shrl
je
inc
sub
call
or
push
pop
call
lds
aam
push
sbb
xor
test
daa
cwtl
xor
xchg
push
fs
loopne
in
repz
mov
insb
cmpsb
push
movsl
push
dec
inc
nop
sub
xchg
jmp
popf
fisubs
imul
and
into
add
dec
scas
ret
stc
repz
jmp
mov
mov
push
add
pop
stc
sbb
movsb
or
mov
mov
xor
loope
mov
lock
push
or
cmc
jns
jmp
sbb
repnz
xor
mov
cmp
xchg
fbstp
lret
lcall
xchg
int3
insb
aas
imul
ja
mov
pop
mov
xchg
scas
in
jge
sbb
in
jl,pn
sbb
fnstenv
in
sahf
std
jle
jbe
mov
sbb
sub
aam
mov
sub
xchg
sbb
call
shrl
fdivs
stos
repnz
push
mov
jbe
movsl
lcall
shlb
inc
cmp
xchg
popf
sarb
xchg
subb
ret
iret
fistps
or
or
pushl
je
sbb
jae
mov
jno
mov
iret
sub
shrb
and
scas
or
add
jg
cmp
into
mov
pop
negl
addb
push
add
sahf
xchg
test
cmp
push
das
lods
push
int
arpl
scas
mov
and
sub
in
xor
dec
pop
mov
out
mov
and
lea
xchg
push
inc
test
jecxz
mov
mov
jnp
shlb
pop
ja
pop
das
repz
jge
fdivrs
enter
or
daa
fdivl
mov
mov
lret
fstps
push
push
das
pop
dec
mov
jbe
xlat
cmp
xchg
dec
in
jmp
pop
lods
imulb
fstpl
and
push
ljmp
lods
fwait
stos
xor
and
xor
push
mov
into
rcrb
cwtl
enter
and
dec
test
clc
mov
add
cli
mov
adc
inc
and
aad
dec
sub
sub
fstpt
add
pop
and
push
push
and
mov
xchg
and
dec
cmp
daa
cli
cmp
in
jbe
and
imul
add
icebp
push
and
sbb
out
pop
cmp
in
sub
add
adcb
subb
push
inc
push
or
or
incl
test
fs
std
ret
imul
ret
es
and
movsb
cmp
push
lret
or
pop
mov
xchg
push
lret
dec
sbb
mov
inc
call
or
insl
dec
ficomps
mov
call
mov
ds
dec
rcll
or
negl
shrl
clc
mov
je
xchg
push
imul
cli
fbld
shll
pop
mov
xchg
and
sbb
push
movsl
enter
adc
jp
or
push
adc
add
insl
mov
jmp
fwait
dec
mov
lahf
mov
jl
cmp
add
loope
inc
cmp
int
adc
pop
dec
pop
jae
and
dec
jns
sub
sub
mov
pusha
test
gs
addl
lcall
push
divb
or
inc
incb
jnp
mov
bound
jl
cmp
sahf
push
aaa
add
and
sub
lahf
clc
into
popa
pop
cld
mov
cltd
lea
dec
loope
cmp
jbe
xchg
adc
jmp
test
fs
stc
ja
daa
push
pushf
xchg
pop
sub
popa
push
mov
adc
fdivl
sbb
icebp
or
dec
jecxz
adc
hlt
movsl
pusha
jmp
sbb
ret
outsb
xchg
and
push
and
dec
ds
push
cltd
cmp
push
lahf
add
fsubrl
xchg
cmp
or
rclb
fistpl
ret
fnstsw
mulb
dec
clc
sbb
mull
sbb
in
ljmp
mov
or
or
in
mov
sub
cmpsl
push
cmpl
jle
or
popf
pop
xlat
inc
rorl
stos
mov
cmp
ja
aad
fwait
mov
adc
add
sbb
add
mov
push
pop
or
mov
xorl
jmp
mov
cmp
mov
or
and
pusha
mov
mov
jp
dec
pushf
test
inc
adc
repnz
pop
nop
imul
mov
out
hlt
and
scas
push
call
gs
sub
mov
inc
or
out
stos
out
andl
jnp
cli
gs
mov
or
mov
xor
mov
mov
cmpsb
in
sbb
fsts
sub
jle
sub
or
xchg
mov
popf
pop
orb
dec
ljmp
push
les
mov
adc
adc
pop
add
mov
inc
cmpsl
je
test
test
mov
outsb
adc
fists
mov
sub
mov
shll
inc
jp
cmp
mov
mov
mov
pusha
mov
or
and
mov
inc
les
lods
or
sbb
lock
ja
addr16
shlb
or
out
mov
and
in
pop
cmpsl
xchg
mov
cwtl
out
sbb
jge
xlat
mov
and
pop
pop
and
stos
mov
xchg
push
pop
rcll
dec
push
jge
xchg
jns
inc
and
outsb
and
andl
cmp
outsb
shrl
sahf
inc
cmp
popa
out
dec
pop
and
jns
outsl
outsb
mov
inc
sbb
adc
jb
cmp
lods
hlt
push
bound
mov
cmp
stc
pop
cmp
cmp
dec
in
add
xchg
or
dec
xor
std
mov
sub
adc
or
loop
mov
test
jb
xor
jnp
push
cwtl
popa
inc
mov
iret
dec
int
pusha
fldenv
mov
fnstenv
pusha
jmp
std
test
div
fcmovb
outsb
pop
pop
cmp
sbb
stos
es
dec
stos
movb
clc
int3
rcrb
mov
push
and
xchg
and
daa
xchg
das
pop
punpckhwd
mov
repz
mov
inc
nop
xor
mov
push
into
cmp
loop
push
ret
out
loop
dec
out
fcompl
mov
in
rol
addr16
dec
sbb
shll
out
cmp
dec
sbb
add
dec
cltd
pop
push
aas
rcrl
je
jle
iret
jbe
les
mov
jns
sbb
and
incb
int3
or
push
cmp
mov
enter
nop
stc
add
mov
fisubrs
lret
jge
in
gs
jmp
nop
dec
xlat
iret
sbb
add
mov
or
sbb
mov
xchg
rcr
or
sbb
test
adc
pop
pop
adcb
in
dec
test
imul
xorb
cmp
pop
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
loopne
hlt
pop
xchg
jo
aaa
mov
in
jo
negl
fdivs
idiv
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fmuls
inc
jle
inc
push
dec
stc
int3
out
jnp
fimull
sbb
xlat
sub
mov
pushf
push
fcmovu
jns
push
aad
sub
mov
xchg
cmp
aad
sbb
idivb
negl
fdivs
mov
out
xor
push
lds
out
je
imul
pop
jle
jle
push
icebp
fadds
loop
scas
cmp
movsl
mov
std
bswap
mov
add
push
fisubs
out
je
push
std
out
pop
jle
iret
and
mov
mov
aas
mov
jecxz
push
mov
xchg
jns
xor
push
xchg
je
aaa
mov
sbb
xchg
je
out
mov
sti
jo
negl
fcoms
icebp
jo
sbb
enter
sti
sbb
popa
push
negl
enter
mov
sbb
jo
negl
fdivs
mov
pop
sti
jno
negl
fdivs
ss
sbb
jo
cmpsl
push
xchg
jo
aaa
mov
pop
sti
jb
neg
xchg
fs
aaa
cmpsl
sti
sbb
jo
negl
fdivs
mov
or
jo
negl
fdivs
mov
and
jo
hlt
pop
xchg
test
aaa
clc
mov
sti
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
pop
iret
xchg
and
fdivs
push
lock
pusha
mov
je
xor
mov
out
aaa
mov
sbb
nop
xchg
test
hlt
mov
fwait
sbb
jo
cld
pop
xchg
lcall
sti
jo
negl
fdivs
mov
cmp
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
mov
sbb
jo
negl
fdivs
pop
lock
jo
out
xchg
xor
roll
gs
sbb
lret
sarb
jg
call
bound
sub
aad
and
dec
movsb
fcoms
mov
inc
xchg
dec
aaa
mov
mov
ds
inc
imul
inc
push
aaa
mov
dec
imul
inc
sbb
jne
in
cmp
push
push
cmp
mov
jo
aas
dec
dec
sub
dec
mov
sbb
add
je
cs
ficoml
sbb
cmpsl
mov
notl
pop
sbb
cmp
mov
mov
inc
or
inc
sti
sbb
rolb
lock
es
fcomps
lock
jmp
in
pusha
movb
incl
and
cmpsb
cwtl
dec
xchg
adc
out
xchg
mov
clc
push
xor
xchg
xchg
dec
cmp
arpl
inc
pop
scas
jge
movsl
mov
enter
mov
movsb
mov
in
or
xchg
jmp
andl
aas
mov
or
inc
pop
xor
pop
or
inc
push
dec
dec
sbb
aaa
cs
imul
pop
inc
ret
xor
jbe
jo
xor
mov
pusha
lahf
push
test
pop
jge
das
aaa
mov
aas
push
mov
int
pushf
clc
lea
arpl
out
mov
dec
mov
sub
pushf
lock
cmp
lods
in
or
xchg
cwtl
lock
daa
sbb
cmp
ret
mov
lahf
sub
mov
out
pop
mov
push
sub
xchg
cld
out
inc
dec
inc
lret
cmp
sbb
and
xorb
mov
test
add
adc
sub
lahf
sbb
push
in
aaa
cmp
mov
lock
hlt
xor
mov
add
js
xchg
or
and
call
in
pop
lock
hlt
testl
mov
aam
pop
jb
insl
pusha
xchg
lret
data16
stos
sub
stos
cltd
sbb
inc
ja
pop
mov
rolb
mov
xchg
out
clc
xsha1
cmpsb
out
outsl
lea
push
add
cmpsb
fucomip
and
and
xchg
or
dec
sbb
or
in
mov
jae
jge,pt
inc
sahf
or
cmp
shl
push
adc
push
outsb
repnz
push
outsb
xor
repnz
mov
inc
pop
sbb
push
addr16
or
adc
mov
xchg
pusha
movq
jle
addb
cmp
sbb
mov
jns
scas
jmp
mov
test
add
sbbl
inc
cltd
scas
pop
push
aas
nop
imul
shll
fcmovnb
cli
pop
xor
jno
scas
in
add
mov
scas
pop
lahf
aaa
std
pushf
fiadds
daa
push
add
xor
popf
stc
xchg
pop
lahf
jmp
push
mov
inc
das
leave
loopne
repz
and
add
jne
stos
xor
pop
pusha
xlat
xchg
lahf
mov
or
xor
out
add
adc
js
inc
sarl
xor
jmp
test
out
aas
cld
mov
fs
adc
mov
mov
add
sbb
out
push
and
mov
fwait
lods
sub
push
add
out
data16
mov
or
inc
jge
and
dec
loop
cld
sub
and
sbb
mov
add
push
mov
mov
jg
mov
andl
mov
mov
mov
sbb
shr
mov
arpl
adc
xor
cli
fimuls
sub
out
mov
lahf
and
push
adc
sbb
scas
jp
or
lods
fnstenv
adc
mov
lea
dec
and
lret
add
jge
test
sub
les
in
push
cmp
loop
mov
or
jge
icebp
test
out
mov
mov
pop
inc
test
mov
fbstp
iret
add
dec
push
ljmp
adc
xchg
cmp
arpl
loope
rol
mov
add
enter
add
scas
cwtl
ret
pop
and
push
imul
and
jae
sub
mov
cmp
cmpsl
xor
lcall
and
mov
into
mov
jno
je
mov
xchg
pop
mov
arpl
cli
std
sub
cmp
jae
xchg
cs
sti
xchg
cmpl
roll
add
xchg
and
divb
sahf
dec
sbb
idivl
pop
movsl
pop
mov
or
test
xor
adc
popa
mov
pusha
loopne
cwtl
pop
mov
cmp
add
jnp
xchg
cli
jmp
arpl
xlat
dec
movsl
mov
in
push
in
mov
ds
sub
adc
out
out
mov
mov
sbb
and
jno
cmp
jge
xchg
stos
jmp
ss
divl
sti
scas
ljmp
faddl
mov
jle
cwtl
cmc
and
jle
stc
gs
gs
pusha
test
pop
and
sub
fwait
and
mov
frstor
out
xor
or
js
fs
or
rcll
test
cltd
mov
sarl
imul
mov
lahf
popa
adc
ja
inc
jo
pop
iret
jo
dec
es
xlat
sti
xor
mov
addl
or
int3
das
lahf
xlat
push
push
mov
sbb
cmp
arpl
push
sti
call
sbb
jne
add
or
sbb
das
lcall
push
shll
stos
push
push
push
outsb
adcb
or
in
dec
jge
test
mov
or
pop
call
xor
lahf
mov
subb
push
lret
mov
mov
out
cld
xorb
roll
std
inc
push
xor
fisubl
dec
cld
daa
fwait
ja
mov
enter
cmp
gs
adc
inc
cmp
addr16
pusha
jne
dec
mov
xchg
out
adc
mov
scas
adc
fsubs
aad
mov
mov
je
jne
leave
pop
mov
and
lret
shl
cld
sub
mov
test
cmp
sbb
fstl
daa
lret
xchg
sub
or
sarb
mov
fstpl
adc
stos
push
flds
aaa
inc
popf
popf
fstp
jb
cld
or
pop
divl
push
divl
shlb
outsb
aad
je
or
inc
dec
movsl
bound
pop
dec
xchg
jp
pusha
cmp
pop
in
push
fmuls
mov
pop
and
add
jb
fidivrl
mov
mov
push
data16
jnp
ficoms
fnstcw
nop
faddl
cmp
jnp
push
shrb
daa
and
movsb
mov
push
bound
icebp
insl
jbe
adc
int3
push
xchg
nop
test
add
rcl
pop
dec
scas
cmp
jnp
fcomps
cmp
jo
sub
push
jns
adc
out
xchg
sarl
mov
and
mov
push
mov
mov
xor
mov
dec
test
mov
cli
outsl
fbstp
jno
jnp
and
push
out
lcall
sarb
mov
aaa
and
push
insl
scas
push
xor
pop
std
pop
dec
add
inc
in
fmull
in
adc
or
and
sti
push
dec
fildll
cmp
jmp
adc
jle
lds
leave
mov
repnz
adc
div
or
or
xor
fistl
push
sbb
test
adc
popf
cmp
jmp
cmp
pop
out
pop
dec
aad
or
repz
and
cwtl
sub
dec
mov
mov
mov
mov
icebp
inc
sbb
sub
pop
sbb
movsb
pop
addl
ja
jno
cld
fdivl
mov
lcall
stos
push
and
fs
cmp
lahf
rcll
and
in
mov
call
sub
mov
dec
repz
pop
cmp
cs
jecxz
mov
daa
inc
mov
mov
mov
insb
push
push
into
sahf
test
testb
out
pop
push
les
cmp
cwtl
inc
adc
jmp
cmp
jl
jge
lods
pop
mov
cmp
sbb
xchg
test
ds
pop
ret
sbb
inc
mov
rol
sti
adc
test
les
sub
fwait
jle
outsb
or
mov
lods
or
jo
mov
rcrb
adc
jne
dec
cli
cli
sub
pop
xor
sub
add
push
ljmp
rcrb
outsb
fimull
mov
cld
fdivs
in
lods
jp
ds
push
dec
or
jg
cli
test
pop
add
or
cld
imul
outsb
sub
js
lahf
cmp
iret
adc
in
adc
push
xor
xor
xor
push
jbe
pop
inc
loop
add
mov
jge
dec
cmc
sub
divps
loop
mov
adc
dec
push
adc
aaa
mov
or
in
mov
je
push
pushf
xchg
xchg
lea
mov
hlt
adc
les
push
icebp
jbe
add
int3
lret
dec
cmpb
jo
mov
push
push
repnz
in
xchg
int
xchg
int3
add
pop
rcrb
sbb
dec
adc
mov
xchg
xor
cmp
jp
push
ss
mov
add
test
mov
lcall
fwait
sub
out
and
scas
sub
push
push
push
jns
xchg
mov
sarl
loopne
add
jnp
sti
mov
divl
fnstsw
cmp
aaa
ds
lcall
cltd
repnz
int
rcl
xchg
mov
imul
pop
pop
int3
shlb
dec
pushl
cmc
lock
sbb
jp
cs
shr
ja
arpl
in
xor
push
lods
lahf
subl
or
xor
cltd
lret
loopne
ljmp
pusha
sahf
out
and
outsl
cmp
pusha
and
repnz
xor
add
cmc
pop
mov
iret
mov
xor
in
jb
push
int
iret
popa
dec
push
mov
sbb
inc
mov
pop
fdivr
add
in
and
pop
cmp
mov
mov
inc
shrl
jge
les
rcr
cld
jns
test
lods
dec
mov
stos
cmpsl
cmp
js
jns
jae,pn
cmpsb
mov
movsl
imul
dec
add
lds
in
insl
ficoml
or
decb
dec
jns
ja
ljmp
mov
sbb
push
fistpll
inc
loop
fs
out
pop
sub
rorl
pushf
imul
push
mov
mulb
adc
inc
jl
js
roll
xchg
pusha
xchg
sub
pop
fnsave
int
hlt
pushf
rclb
ja
pop
pop
int3
mov
jb
shll
xchg
test
mov
scas
inc
sub
mov
jno
in
xor
dec
and
data16
out
mov
push
movsl
out
dec
not
xor
xchg
pop
mov
xor
mov
xchg
rclb
test
lods
idivl
push
ljmp
jle
leave
sbb
push
test
rorb
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
