push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
int
lods
cmp
and
aas
cltd
andb
nop
inc
adc
insb
push
sub
dec
mov
jnp
cld
ud1
mov
mov
int
adc
divl
daa
or
mov
mov
dec
ljmp
aas
sub
in
xchg
pushl
in
inc
xchg
sbb
popa
push
or
lahf
mov
and
pop
daa
ljmp
or
insl
pop
and
enter
cmpsl
sub
cwtl
pop
sbb
ja
sahf
loop
xchg
ret
sbb
dec
ror
fsubrs
or
or
cmc
sub
add
xor
sub
ds
test
sbb
rep
repz
inc
sbb
test
jmp
mov
dec
jnp
pop
add
divl
mov
frstpm(287
jp
cmc
xor
sbb
dec
loope
cmp
mov
mov
scas
jg
test
add
cmp
mov
es
cmp
pop
out
cli
ret
push
xor
push
sbb
aam
ret
sub
mov
mov
add
push
roll
daa
out
mov
or
sub
int
add
lods
push
into
in
mov
sbb
xchg
pop
outsl
mov
lock
xchg
pop
mov
xchg
xor
in
mov
mov
pop
cmpsl
sete
inc
mov
sbb
push
sub
cmpsl
mov
hlt
ror
xor
xchg
and
cmp
mov
adc
sbb
mov
sbb
dec
dec
dec
mov
cld
fdivs
push
cmpsb
sub
sbb
fidivl
stos
sbb
aas
or
push
dec
or
lds
and
sub
pop
inc
xor
mov
cmc
mov
sub
and
shl
xor
inc
sbb
cwtl
rol
pop
aad
das
sbbb
push
add
inc
mov
mov
jno,pn
or
scas
push
popf
xor
or
leave
and
mov
or
divb
arpl
out
jb
fdivl
sub
std
cmp
fsubrl
add
loop
ret
loopne
adc
std
in
fisubl
and
jmp
mov
aad
ret
enter
push
push
test
jg
js
cmp
popf
adc
pop
mov
sbb
cli
and
cmpsl
rcrb
faddp
fstpl
push
xor
mov
jle
jbe
fnstenv
jg
stos
into
pop
sahf
mov
pop
mov
outsl
fs
mov
add
hlt
outsb
and
mov
dec
jns
xor
push
rol
mov
fcmove
and
add
inc
pop
fisubs
sub
cs
xchg
shll
sbb
xchg
xor
mov
out
jnp
dec
xor
pushf
push
pushf
push
add
mov
rcll
cwtl
xchg
xchg
mov
mov
dec
je
sbb
sub
iret
or
popf
fsubl
and
ret
sub
rorl
das
sbb
sbb
mov
xchg
cld
push
scas
mov
outsb
shl
shlb
or
test
ljmp
xchg
pop
mov
xchg
iret
mov
subb
cmp
inc
jbe
in
xchg
mov
xor
inc
lahf
dec
and
sub
cmp
add
je
popa
shrd
mov
cmpsb
dec
loopne
loopne
pop
add
sti
enter
mov
lret
jle
cmp
stc
sbb
sub
divb
pop
lds
pop
enter
xchg
movsb
pop
inc
test
lods
cmp
mov
mov
popa
mov
xor
int
cmp
sbb
addr16
sti
xchg
mov
mov
and
fldcw
dec
rclb
jae,pn
insb
dec
adc
mov
ljmp
and
je
adc
pop
in
xor
je
insl
lret
mov
daa
fwait
mov
loop
mov
mov
add
jne
mov
or
pusha
pop
repz
loopne
pushf
jae
ljmp
adc
cmp
int3
mov
dec
ret
mov
lds
shll
shl
mov
cld
cmp
jno
daa
rep
mov
outsl
sub
sub
jl
fildl
test
mov
cmp
stos
pop
and
pop
mov
push
std
lods
outsl
xchg
loopne
pop
adc
cwtl
lret
imul
dec
mov
inc
and
mov
sbb
test
and
xor
clc
sub
and
out
mov
and
or
pop
repnz
gs
push
jbe
inc
inc
mov
pushf
les
sbbb
xchg
mov
fnstcw
pop
shl
cld
push
js
sub
je
aad
push
pusha
test
mov
loop
adc
arpl
insl
xchg
xchg
pop
pushf
stos
and
es
sbb
iret
mov
xor
push
popl
mov
push
mov
sbb
ret
dec
adc
mov
stc
stos
lods
or
pop
sbb
inc
pop
mov
xchg
sub
jnp
mov
lret
adcl
mov
xor
and
mov
dec
xchg
das
aas
adc
lock
xor
sub
cltd
int3
jp
mov
lcall
sbb
pop
es
jb
mov
xchg
push
ja
std
mov
icebp
or
popf
ljmp
cltd
js
mov
cwtl
out
jns
push
inc
addb
mov
icebp
pop
lock
das
fwait
dec
sub
push
mov
addr16
call
add
idivl
push
int3
ficompl
add
mov
lods
iret
subl
mov
jns
mov
and
mov
pop
in
and
and
cmpsb
sbb
lods
and
push
ret
data16
lret
iret
xchg
stos
pop
jbe
push
mov
pop
jo
call
add
ret
dec
cli
cmpb
mov
out
out
stos
add
xor
dec
rol
cmp
sub
sbb
or
mov
negl
and
jno
lods
fmuls
inc
bound
fidivrl
lret
jmp
out
repnz
rclb
cmc
push
dec
clc
xchg
or
je
imul
jmp
popa
xor
mov
jae
or
add
jmp
mov
ljmp
mov
adc
pop
jbe
xor
inc
jns
inc
shr
dec
std
loop
pusha
mov
adc
xor
push
popf
das
lock
mov
pushf
in
mov
les
jo
je
jmp
pop
jmp
sti
mov
lret
popf
mov
in
fnstsw
nop
push
mov
idivb
mov
sbb
mov
ja
or
fdivr
call
adc
jge
and
dec
and
xchg
add
jno
jns
daa
xor
jb
push
xor
aam
jecxz
jne
dec
jbe
push
and
jae
ficoml
adc
dec
mov
jle
pushf
mov
pop
lret
pop
fs
xchg
xchg
mov
jno
clc
and
cmp
or
mov
jge
lret
ljmp
lea
into
sbb
rol
ss
fisttpll
push
jno
lock
push
leave
xchg
dec
add
pop
lds
mov
insb
push
lret
mov
fistl
push
fildl
fnstcw
cmp
jbe
xor
mov
mov
out
mov
repnz
inc
mov
mov
cs
cmc
testb
pop
mov
rcrb
mov
lds
stos
cmp
test
sbb
mov
iret
and
push
push
imul
inc
fdivrs
mov
mov
test
aas
daa
cli
ret
jae
add
out
pop
jo
xor
cmp
pop
push
mov
in
push
or
add
mov
loopne
add
out
mov
jl
repz
es
pop
xchg
mov
outsl
mov
mov
sbb
and
sbb
jb
stos
and
insb
sub
testl
adc
mov
vshufps
ljmp
pop
xor
ja
mov
pop
outsl
in
xor
ljmp
cltd
push
fdiv
rorb
sub
mov
je
jbe
daa
add
fs
adc
sahf
sub
mov
bound
adc
jmp
adc
lahf
mov
push
cmp
push
inc
adc
or
jle
enter
mov
pop
or
xlat
out
xor
push
mov
in
push
lea
mov
sbb
mov
je
adc
sub
xlat
into
aaa
mov
clc
ror
xor
sbb
fwait
sub
fsubrl
sbb
xchg
loopne
mov
jmp
dec
gs
mov
movsb
movsl
ret
mov
mov
inc
adc
sbb
xor
xchg
daa
push
imul
mov
sub
fists
les
movsb
mov
outsl
subl
sbb
ja
movsl
daa
mov
les
stc
jp
mov
test
outsb
stc
scas
push
cmpsl
insl
xor
into
sub
stc
out
mov
cmpsl
xlat
sbb
push
outsl
jae
es
daa
inc
movsb
add
fists
add
xor
imul
xchg
mov
fldt
pop
icebp
repnz
pop
arpl
mov
test
fadds
cs
sbb
gs
movsl
roll
inc
mov
mov
pop
outsl
rorb
mov
popf
test
ja
push
int3
pop
adc
cli
dec
adc
xchg
push
iret
add
mov
sub
sahf
dec
movnti
add
out
pop
pop
mov
mov
push
push
scas
mov
js
or
ret
fs
stc
das
mov
dec
pop
inc
scas
jp
cmpb
inc
lods
iret
outsl
dec
and
test
in
mov
push
scas
adc
mov
rcrl
adc
outsl
sub
dec
sub
sub
movsw
xchg
mov
popa
jbe
popa
mov
cmp
outsb
or
cmpsb
mov
push
xchg
data16
repz
push
adc
xchg
stos
dec
in
jnp
inc
sbb
adcl
sarb
call
cmpsl
lret
mov
pop
popa
xor
rcll
push
lea
shlb
fwait
out
jne
ljmp
jmp
inc
xchg
push
mov
and
mov
in
jnp
inc
dec
push
mov
lea
ficoml
out
sub
test
fmuls
clc
push
stos
dec
xchg
je
fstps
inc
pusha
fwait
call
mov
les
pop
push
push
fs
push
call
stos
push
ret
rorl
sar
aam
xchg
jo
loope
lret
or
inc
jle
test
push
shl
lahf
popf
icebp
xor
cltd
insl
repnz
mov
cmp
and
je
xchg
imul
jne
arpl
push
mov
rcrl
in
xchg
repnz
gs
gs
add
nop
xchg
pop
cmpsb
add
mov
mov
stos
lret
arpl
pop
and
sub
jo
sub
push
push
outsl
jb
dec
sbb
mov
insb
mov
mov
dec
inc
clc
sub
addb
mov
sbb
sub
jnp
insl
inc
inc
or
ds
cmovo
jae
jae
bound
insl
dec
fdivs
leave
out
cmpl
cmp
sub
decl
nop
loopne
pop
outsl
xor
mov
mov
inc
ret
adc
mov
jns
push
mov
inc
es
movsb
rcl
push
test
dec
mov
push
jg
lock
jb
xchg
inc
mov
lahf
sbbb
imul
pop
out
push
stos
mov
pop
loop
and
lods
push
mov
lds
inc
xor
xor
sbb
push
and
xchg
lods
mov
and
mov
sbb
mov
jno
rol
mov
or
addr16
fisubrs
mov
cmp
sub
mull
mov
bound
test
mov
push
inc
sbb
jno
add
cmp
jae
sub
jns
inc
cmp
cmc
pop
notl
es
mov
xor
daa
loopne
loope
mov
cmp
cmc
repz
xchg
xorb
jecxz
xchg
mov
dec
xor
mov
pop
mov
in
mov
das
pop
push
cltd
imul
add
jp
dec
pushf
cmp
mov
hlt
dec
popl
push
sarl
or
sub
push
add
stc
push
mov
sarl
inc
jg
add
fidivl
fistl
push
in
cmp
cmp
mov
xor
pop
in
stos
out
jg
cmpsb
pop
mov
jo
cwtl
mov
test
pop
je
in
adc
sub
loopne
out
sub
and
out
push
mov
repnz
mov
xor
popf
push
into
rcrl
inc
add
mov
clc
push
or
lea
jle
inc
lea
mov
stos
es
cs
jp
xchg
jp
cmp
mov
push
jl
xorb
xor
pusha
ret
xchg
std
pop
fists
add
scas
dec
mov
cmp
imull
aam
xchg
mov
lcall
fistps
js
pop
xchg
out
ret
cs
lcall
stos
mov
cmpsl
mov
outsb
push
aam
addr16
testb
test
in
out
imulb
mov
fwait
mov
mov
fsin
fs
lds
push
jnp
xchg
je
test
lcall
in
pop
pop
leave
mov
fists
ds
popf
stos
ret
cmp
mov
mov
sti
mov
in
add
pop
xor
bound
and
std
movsb
ret
lcall
jle
push
jl
shrl
notl
fstpt
lahf
jmp
test
mov
xlat
jno
lahf
ljmp
inc
popf
jns
xchg
inc
jl
test
or
adc
mov
outsb
push
push
mov
pop
lret
jno
sub
into
jno
and
inc
lods
add
cmp
xchg
repnz
inc
sbb
aas
mov
dec
ret
cmp
jne
call
sub
pop
push
add
mov
mov
xlat
shrb
ds
and
mov
or
loopne
jmp
std
insb
push
sbb
rorl
pop
pop
loope
sub
rcrb
lret
scas
cmp
mov
outsb
stos
pushf
stc
popl
lea
out
ret
stos
cmp
jmp
addl
pop
sbb
mov
push
fisttpll
cmp
nop
push
xor
mov
movsb
and
sub
adc
inc
aam
test
push
push
insb
jle
adc
stos
insl
hlt
push
in
pop
out
jb
push
ds
mov
push
mov
push
sbb
cmpsl
shlb
lret
dec
inc
mov
pop
mov
push
pop
add
mov
loope
loope
xchg
sbb
cmpsl
addr16
icebp
test
adc
enter
les
mov
mov
push
and
add
cltd
sub
aaa
push
adcb
add
out
cltd
ja
pop
push
sub
arpl
inc
jge
in
iret
jnp
dec
jl
push
sub
pop
fcompl
adc
les
jp
or
mov
add
dec
mov
inc
mov
rolb
pop
dec
inc
es
jg
dec
mov
add
push
imul
and
mov
add
lcall
dec
add
popf
pushf
pop
hlt
mov
cld
inc
enter
pop
arpl
inc
dec
int3
lret
aad
push
and
cmpsl
jae
loopne
outsl
insl
sub
xchg
mov
insl
movsb
mov
or
or
jle
push
mov
mov
dec
inc
jno
data16
gs
popa
out
sbb
into
xchg
mov
hlt
xor
loope
mov
orb
ss
inc
mov
xor
inc
mov
and
lods
jns
es
adc
cmp
mov
ds
pop
std
pop
loope
pop
mov
mov
or
push
inc
jge
jmp
in
sbb
dec
nop
insb
bound
enter
aad
xchg
xor
cmp
sbb
lahf
lcall
hlt
out
cmp
push
lahf
std
mov
sub
jg
aaa
mov
nop
sbb
lret
outsl
lds
cmc
jge
mov
xchg
sbb
stc
lret
adc
arpl
shrl
push
mov
mov
fldt
sbb
jle
loopne
cltd
mov
adc
sub
in
push
nop
inc
in
mov
mov
sbb
mov
and
pop
and
cli
in
imul
clc
add
dec
adc
pop
clc
scas
jmp
das
ret
inc
or
add
mov
mov
dec
adc
shrl
lods
in
push
cmpsl
mov
push
pop
or
push
into
xor
push
fs
fidivs
pop
aad
xlat
inc
mov
xchg
loop
out
push
jg,pt
adc
cwtl
xchg
test
mov
lods
ret
adc
and
js
inc
push
out
not
loop
shll
out
push
mov
mov
mov
outsl
cld
inc
adc
aad
test
mov
jle
adc
jecxz
aaa
add
push
in
std
mov
mov
jp
mov
lcall
std
cld
sbb
lods
push
test
sub
rcrb
pusha
clc
mov
mov
loop
repnz
aaa
gs
insl
int3
fimull
xorb
lahf
rolb
adc
ret
jmp
pop
add
jae
push
cmp
cmp
fbld
fidivrl
sub
cmpsl
outsl
add
sti
mov
mov
jne
sub
push
pop
jo
ret
and
xchg
xor
push
dec
pop
pop
and
adc
sarl
sbb
pusha
shrb
rolb
data16
clc
cltd
lret
test
add
mov
movsb
add
mov
imul
cmc
push
subb
mov
xchg
sahf
pshufw
jmp
clc
pop
mov
cld
fwait
pop
fsubl
lret
and
add
loope
or
cwtl
mov
addl
pushf
int
pop
and
xor
fistpl
push
adc
scas
mov
mov
xchg
gs
cwtl
out
jno
jne
ss
dec
cmp
leave
mov
inc
sbb
in
out
loop
add
dec
fwait
out
jne
cmc
loope
out
scas
xor
cmpsl
imul
sbb
mov
out
out
arpl
or
xchg
sbb
mov
sbb
ja
stos
xor
xor
addr16
repnz
bsf
push
cmpsl
lea
jno
mov
fwait
ljmp
shl
sahf
xor
pop
scas
sti
fcomi
pop
dec
iret
mov
lods
mov
lea
in
loope
loop
sti
frstor
fcoml
xor
pop
mov
sti
andl
xchg
push
mov
add
scas
or
in
ret
mov
ret
xor
push
gs
add
adc
in
or
and
addr16
into
inc
fcompl
sub
xlat
pushf
or
jp
jle
xor
cmp
imul
mov
fimull
cmp
adcl
or
lods
mov
ret
scas
xor
pop
into
add
loop
repz
aad
inc
push
sub
icebp
outsl
push
nop
repnz
mov
mov
mov
das
lods
adc
xchg
es
mov
fsubs
iret
lea
aam
sub
jmp
je
scas
movsb
and
pop
cld
out
popa
and
js
push
cmc
xor
cli
shll
icebp
popa
sub
repnz
negl
cmpsl
imul
lea
in
in
jecxz
mov
cli
push
mov
fldcw
push
in
insb
loop
mov
fists
loope
fisubl
in
mov
bound
jae
xor
notb
js
sbb
pop
and
or
pop
addb
clc
je
sub
sub
adc
pop
scas
test
mov
dec
arpl
test
mov
and
mov
cmp
ud0
int3
or
xor
cmp
sbb
daa
mov
jno
stos
int3
cmp
mov
or
xchg
dec
mov
hlt
mov
arpl
push
ss
mov
ret
lret
inc
mov
addb
js
inc
cmp
mov
inc
outsb
mov
std
sbb
xor
test
ja
outsl
out
sti
icebp
addr16
xchg
jae
pop
lea
loop
in
test
jmp
mov
int
shlb
and
xor
or
ljmp
mov
jae
mov
push
mov
sbbl
fdivrs
xlat
pop
addr16
fcmovnbe
pop
jnp
aaa
or
push
push
int
pop
push
mov
aaa
cld
xchg
pop
mov
pusha
cli
sbb
std
out
add
cmc
pop
lret
lea
ret
mov
mov
lcall
xor
jnp
leave
ljmp
jbe
lcall
or
or
pushf
jp
lret
decl
add
jae
enter
inc
pop
pop
js
sbb
jae
add
sbb
clc
test
push
jno
pop
inc
adc
add
pop
mov
mov
daa
fcmovnb
adc
sbb
std
jno
mov
in
sub
test
sub
lahf
popf
test
dec
xor
sbb
xor
cwtl
cli
out
xchg
mov
push
ss
fbstp
lds
fwait
add
ss
nop
pop
imul
stos
aas
xchg
cmp
mov
es
inc
ljmp
ret
xchg
ljmp
pop
clc
fidivrl
inc
lea
mov
pop
and
xchg
and
add
flds
stos
ss
add
mov
jns
sbb
ret
push
pop
jnp
push
xor
enter
pop
jbe
adc
cmp
fwait
mov
mov
xor
push
and
fcoms
aad
jne
mov
push
fcomip
pop
adc
sti
pop
mov
sbb
inc
dec
idivb
mov
aad
bound
xor
lds
daa
inc
jno
push
popf
subb
aaa
arpl
xor
add
outsb
gs
mov
repz
or
filds
cwtl
shrl
or
adc
or
cld
lcall
xchg
jae
lahf
xor
add
fwait
push
or
and
and
mov
adc
leave
cmp
cs
pinsrw
push
test
inc
lds
mov
jl
jnp
add
out
rcll
pop
mov
add
rcrl
ret
mov
inc
les
mov
mov
xchg
mov
test
sub
adc
lret
sbb
mov
adc
mov
push
out
cmp
les
in
adc
or
pop
jmp
xor
sbb
pushf
inc
xchg
sahf
xor
inc
jae
addl
cmp
xchg
ds
rorb
inc
mov
sbb
xchg
xchg
scas
stc
push
cs
lock
push
scas
mov
outsl
add
hlt
dec
imul
mov
xor
cmp
outsb
scas
mov
xlat
jge
mov
xchg
xchg
push
inc
movsb
sti
mov
iret
and
sarb
roll
pop
subb
subb
mulps
nop
jns
cmc
aam
mov
loop
sbb
sbb
lahf
adc
xchg
int3
cmc
and
das
adc
shlb
cwtl
pop
mov
stos
loope
psubusw
clc
or
push
inc
add
dec
lret
jns
sub
jg
jb
cmp
call
cltd
data16
and
cmpb
sub
sbb
jge
mov
loope
ja
add
call
popa
or
cmp
dec
ret
adc
push
xor
jb
push
arpl
cmp
dec
mov
scas
int3
inc
cmpb
inc
test
xchg
rorl
inc
loop
es
jae
pusha
insb
stos
inc
xchg
fs
xor
out
pop
repz
add
lods
fadd
xchg
cmp
sbb
push
push
or
cltd
fsubrp
xchg
enter
lock
popa
popf
fstpt
test
mov
jecxz
and
cmp
pop
jbe
test
mov
lock
mov
mov
xchg
add
jg
and
jmp
sti
dec
ljmp
sbb
mov
imul
fcomp
add
int
xchg
jo
cmp
xchg
push
loope
scas
decb
mov
cmp
out
xchg
xchg
aad
inc
fs
enter
dec
cmp
pusha
jge
sahf
jge
cmpsb
jle
fldcw
push
mov
cwtl
mov
bound
cs
insb
sub
pushf
xchg
add
xor
mov
cld
int
xor
xchg
or
mov
mov
jb
jg
fisubrl
into
je
sbb
sub
jae
dec
add
and
and
push
mov
xor
inc
or
test
jl
dec
adc
data16
push
pusha
push
rolb
lods
cld
aaa
sbb
lcall
mov
and
mov
fldl
sti
push
inc
xlat
mov
sbb
aam
mov
push
inc
mov
add
dec
sbb
mov
or
add
xor
adc
pop
sbb
out
pop
adc
cmp
popa
xchg
adc
cmp
aas
sbb
scas
dec
xor
movsb
dec
dec
dec
push
cmp
arpl
inc
mov
lcall
fwait
lds
dec
xchg
add
test
mov
mov
xchg
pop
or
mov
xchg
imull
pop
xor
stc
imul
test
shl
sub
pop
and
jo
cmc
loopne
scas
insb
insl
xchg
cmpsl
inc
shrb
loop
mov
inc
scas
out
sbb
ja
mov
sub
cmp
mov
pop
xor
cwtl
sbb
jl
sarl
cs
pop
and
xchg
inc
inc
or
xor
mov
int3
lcall
add
lea
stc
mov
push
ljmp
push
xchg
repz
fisubrs
imul
divl
xchg
mov
or
add
pop
cltd
jl
gs
lahf
clc
dec
lods
and
or
popf
cmp
sbb
adc
xchg
push
cmp
xorl
stc
pop
dec
rcrb
add
add
data16
fidivrl
add
mov
sub
jb
mov
ret
dec
jle
aas
jecxz
push
sbb
mov
cmp
adc
dec
repz
mulb
ret
idivl
adc
adc
jge
and
xlat
pop
mov
loope
xchg
sub
jae
mov
js
popa
jge
out
or
into
lds
sub
mov
fimull
ret
int3
das
xor
testb
fldl
xchg
push
mov
add
inc
rolb
lcall
and
outsl
shll
pushf
or
pusha
jecxz
iret
int3
sub
lock
je
push
std
paddb
repz
cwtl
and
les
jns
inc
jmp
xor
jp
std
cmpsb
inc
repz
add
pop
ficoms
mov
sarb
sti
sub
mov
adc
into
add
pop
xchg
and
arpl
jl
jmp
add
cmp
sbb
mov
hlt
clc
addl
xchg
or
adc
pop
or
adcb
int3
or
rorb
ja
cmc
jle
mov
stc
cmpsb
mov
sub
mov
xchg
mov
mov
push
jp
pop
lret
pop
jo
das
xchg
inc
mov
inc
adc
lahf
jmp
in
fs
jmp
gs
mov
inc
push
sub
cmp
adc
fwait
test
mov
sbb
scas
lds
mov
jbe
dec
add
mov
dec
mov
xchg
jae
xor
les
test
lea
out
mov
test
sbb
push
sarl
mov
fs
cmp
daa
pop
jl
lret
int
in
cmpsb
mov
cmpsb
fstl
pop
pushf
cmp
lea
and
sbb
das
rcl
call
sbb
xor
adc
mov
mov
cmp
in
mov
xchg
inc
scas
add
lds
andl
clc
push
js
push
and
mov
js
and
ja
dec
cmpsb
leave
test
rdpmc
cmp
repz
pop
and
movl
cmovno
dec
lahf
add
loop
outsl
rcrl
mov
shll
and
test
cmp
xor
pop
test
cmp
and
pop
add
and
adc
xchg
cmp
in
adc
and
cltd
roll
mov
mov
adc
pop
and
adc
inc
decl
mov
cld
mov
movsb
add
imul
sbb
pop
jb
xchg
fistps
sub
mov
push
add
xlat
cmc
add
adc
jmp
inc
cmpsl
add
sbb
out
sub
sub
mov
jge
jecxz
es
mov
hlt
mov
sub
sub
aaa
pop
addl
inc
dec
cmp
pop
pop
lock
je
in
push
mov
cmp
pushf
shl
inc
dec
cmp
mov
pop
adc
rcrb
adc
xchg
fldl
stos
jmp
js
mov
or
popa
pop
pop
mov
push
jbe
mov
ds
bound
jmp
mov
jecxz
xor
and
mov
adc
sbb
dec
outsl
sub
incl
mov
enter
or
das
mov
cmp
mov
pop
mov
lret
sbb
cmp
inc
fmull
dec
jns
sub
aaa
xor
jle
mov
lcall
sbb
add
rol
xchg
xor
fsubrs
sub
xor
pop
nopl
sub
je
pop
leave
mov
mov
xlat
lahf
inc
ret
in
iret
outsl
into
cmc
mov
push
cltd
add
mov
scas
mov
and
adc
pop
outsb
popf
mov
lock
sarl
cwtl
arpl
push
lret
ret
mov
inc
sti
shl
mov
dec
jmp
jne
addl
adc
xchg
mov
jne
adc
fisubl
cmc
ljmp
das
aaa
and
out
jmp
push
adc
mov
add
loop
jb
adc
xchg
aas
test
fstp
pop
pop
push
or
pushf
nop
pop
movsl
push
in
and
adc
stc
sbb
and
pusha
push
and
xor
test
xchg
aad
jmp
fistpl
jecxz
sub
push
mov
mov
mov
pop
loopne
and
int3
jo
pop
jno
fsubrl
xchg
das
mov
test
out
jecxz
sub
nop
jae
cltd
jb
xor
xor
mov
dec
aaa
lret
int
dec
in
mov
sub
cmp
sbb
jmp
das
stos
mov
andl
sub
in
and
or
inc
popa
andl
call
fdivr
cmp
cmpsb
icebp
jo
xchg
mov
dec
dec
in
add
or
dec
inc
ljmp
je
lret
adc
jg
cmp
mov
inc
lret
enter
stc
popa
les
sbb
test
repnz
mov
cmpsb
xchg
and
and
ljmp
clc
add
mov
in
loopne
adc
fcmovbe
lods
xchg
fs
sbb
xchg
shrd
push
bound
paddb
cmp
jae
aaa
add
lret
sub
xor
add
xlat
adcl
mov
inc
or
add
jg
sub
jnp
fiaddl
fstpt
mov
sbbb
cli
jns
sub
inc
cmp
ds
cmpsl
aam
and
xor
in
sti
pop
inc
bound
cmpsb
outsl
jmp
pop
mov
popf
addr16
sub
jmp
fs
je
add
stc
or
lods
ds
push
fnstcw
adc
ret
lea
ljmp
movsl
popf
or
cs
sbb
xor
mov
out
sub
jg
jl
or
fimuls
outsb
dec
lds
stc
jp
scas
mov
push
or
jns
add
mov
int3
lods
arpl
addr16
adc
arpl
pop
fld
cmpl
lret
lock
add
push
push
sub
shlb
test
andb
push
sbb
pop
sbb
into
outsl
arpl
je
lea
add
cmp
jbe
mov
jo
add
ljmp
cmp
push
add
push
hlt
lea
in
movsb
dec
clc
iret
cmc
fisubrl
clc
pop
pop
rcrl
xchg
cmp
add
dec
push
pop
mov
ficoms
push
lds
imul
cli
jns
cmp
mov
lods
mov
jecxz
jge
push
rol
dec
jo
jecxz
xchg
pop
data16
jno
aad
loop
in
cmp
cmp
sub
push
pop
ja
mov
push
push
cmpsl
notl
and
int
mov
loope
lods
push
and
frstor
lds
xchg
loope
push
mov
cwtl
outsl
xor
sub
or
dec
popf
rolb
nop
out
dec
test
fstl
popf
daa
pop
hlt
cmpsl
mov
loop
push
dec
dec
sub
mov
addr16
js
outsb
lods
fdivrp
aaa
cmpsl
or
fwait
in
mov
push
imul
outsl
inc
bts
sarl
lds
mov
aas
test
shl
pop
lods
ret
out
sti
jmp
iret
jns
push
jp
push
leave
lret
rcrl
scas
mov
push
in
adc
dec
sub
cmp
xchg
iret
or
sub
notb
pop
mov
adc
fucomip
les
lods
pop
xor
jno
sbb
das
mov
scas
and
in
sub
push
xchg
jl
arpl
lcall
call
jo
jle
sti
xchg
adc
adc
jbe
es
cs
sbb
int3
pusha
or
ret
mov
push
iret
jne
dec
je
ds
or
rorb
sub
push
push
xor
clc
cltd
jl
mov
frstor
andl
push
mov
push
pop
call
rcrb
movsl
push
divl
mov
push
push
mov
cmp
es
inc
sub
popa
xchg
mov
in
cmpsb
mov
cs
cld
jbe
ljmp
mov
cwtl
inc
aaa
adc
xor
pop
lds
aad
adc
inc
sti
pop
mov
xlat
mov
cli
cmpsb
fcoml
mov
mov
or
inc
sbb
add
sbb
divb
push
lea
cmp
xor
lods
push
ret
stos
cmp
inc
cli
mov
psrlw
rcll
sbb
mov
outsb
adc
or
jae
out
stos
dec
or
test
stos
xor
sub
mov
push
fnstcw
sbb
out
dec
fsubs
dec
aam
aaa
dec
mov
xlat
and
into
xchg
mov
mov
mov
inc
std
lds
inc
xchg
cmpsb
push
xor
or
out
loopne
std
aas
cwtl
mov
jp
xchg
push
jl
ljmp
call
xor
test
out
mov
pop
adc
xor
pop
insl
adc
jo
add
pop
and
cmp
lcall
mov
negb
pop
aad
cwtl
pop
ret
push
inc
je
xchg
dec
fdivs
stc
clc
jno
fldenv
stos
adcl
fsubrl
lods
adc
mov
sbb
pop
popa
cmpsl
mov
sbb
daa
or
in
in
jnp
dec
xchg
lcall
jl
sbb
loope
xor
cmpb
jg
call
lock
push
mov
sar
jl
insl
mov
inc
push
push
sub
in
push
inc
adc
dec
sbb
gs
adc
insb
iret
and
loopne
mov
push
mov
xor
cmp
scas
lods
xorl
cmp
insl
fwait
sbb
int3
xchg
adc
shrb
cltd
xchg
mov
inc
mov
jo
negl
out
mov
loop
rcrb
and
adc
mov
xor
mov
outsl
lds
add
clc
inc
pop
push
lret
or
inc
nop
cmp
inc
push
fstl
sbb
addr16
dec
inc
pop
xor
mov
aas
or
ret
mov
ss
adc
outsb
xlat
js
mov
push
push
mov
xor
adc
divb
pusha
add
lea
push
ds
jo
lcall
shll
imulb
arpl
sahf
add
gs
cli
lock
gs
dec
insb
jg
rcrl
iret
andl
mov
or
or
cmp
sarl
popf
sar
icebp
mov
sbb
jg
xor
inc
xor
adc
xor
fdivp
sahf
inc
or
adc
jg
imul
mov
insl
movswl
mov
ret
mov
cmpsl
xlat
int
call
add
push
stc
and
pop
dec
scas
outsl
jecxz
push
mov
inc
pop
icebp
xor
xor
outsl
cmp
popa
in
and
test
and
bound
lret
test
js
shll
pop
mov
push
fsubp
popa
jge
mov
jo
xor
sbb
fcoms
imul
sbb
in
dec
xor
std
incb
sahf
mov
mov
aas
xor
pop
inc
mov
repz
adc
cmpl
adcl
push
nop
fdiv
xchg
in
ds
popa
pop
jno
aas
or
je
loop
arpl
out
pushf
test
pop
pop
jbe
mov
inc
repz
adc
jmp
dec
push
pop
mov
stos
sbb
dec
in
cld
iret
and
aas
mov
xor
ret
cmc
jbe
xchg
clc
in
nop
dec
outsl
jle
stc
sahf
adcl
popa
bound
mov
adc
inc
jge
icebp
ja
xchg
add
movsl
mov
inc
imul
xchg
negl
leave
and
cmp
push
movsb
out
adc
aas
lret
mov
lds
pusha
sub
cmp
aam
dec
pop
pop
and
cmp
stos
jne
fmul
icebp
sub
sub
lcall
push
mov
sub
add
cmpsl
fisttpll
push
or
push
andl
test
insl
movsb
adc
fisubl
xchg
cmp
shll
mov
nop
lock
mov
aam
gs
add
lods
jno
enter
or
scas
call
loopne
popf
push
jp
jle
cltd
push
notl
scas
or
xchg
aam
mov
cwtl
lret
pop
insb
addb
clc
adc
xchg
lods
cmpsb
imul
mov
imul
imul
std
int3
jno
xchg
das
inc
sbb
pop
adc
and
bound
aas
sahf
push
cmp
and
push
push
mov
lods
hlt
xor
repnz
mov
ss
shll
mov
icebp
popa
push
cs
mov
mov
daa
daa
gs
cmc
and
test
pop
movsb
cmp
repnz
mov
adc
add
xor
push
daa
lret
andb
mov
xchg
in
xor
push
cld
cmp
jnp
test
mov
jne
sub
pop
addr16
in
push
divb
mov
scas
jmp
cmp
int3
add
mov
vhaddpd
sbb
push
and
out
mov
push
insl
shlb
dec
ret
adc
jg,pt
push
mov
mov
jne
inc
sahf
test
fsubrl
pop
xchg
aad
js
push
push
jle
scas
enter
cmc
fidivrs
xchg
and
out
xor
or
sar
cmpsl
push
jb
and
icebp
dec
lcall
mov
enter
scas
pop
jp
int
inc
mov
movsl
cmpb
push
sbb
xchg
arpl
push
loope
cmp
ljmp
inc
lods
daa
inc
cmc
cltd
mov
mov
adcb
jae
test
in
ss
pusha
lret
repnz
adc
int3
mov
xchg
cmp
mov
into
shrb
adc
mov
push
testl
inc
push
std
push
mov
aas
fdiv
pop
and
jmp
xor
mov
xchg
mov
sub
inc
sti
pushl
les
ss
in
mov
clc
inc
mov
mov
es
xlat
testl
in
lds
ror
test
push
jge
mov
xchg
pop
ss
or
inc
ficoms
mov
push
xchg
pop
icebp
repnz
mov
sbb
int3
ja
imul
push
pop
loope
bnd
xor
cmpsb
sub
xchg
xor
fucomp
les
pop
mov
cmp
insl
int
aaa
cmp
cmpsb
iret
ss
mov
mov
jle
std
fwait
sti
pop
dec
movl
and
fistpl
shr
xchg
rcll
gs
imul
jo
ret
icebp
pop
vmwrite
jp
fmull
sbb
fstps
outsb
andb
xchg
push
pop
rcll
jmp
arpl
push
xlat
and
loop
pusha
mov
lret
lret
xor
lds
sbb
jg
lods
enter
mov
subl
cli
push
push
lods
stos
push
cmpsb
ja
mov
rcll
fmul
push
lret
pop
icebp
jl
add
adc
lcall
xor
add
lods
fbld
lods
icebp
jne
add
push
sub
pop
mov
icebp
inc
mov
push
repnz
xor
push
mov
xlat
sbb
fwait
rcl
pop
scas
lfs
pop
loope
daa
les
xchg
cmp
push
mov
and
js
pop
jmp
popa
xor
push
pop
loopne
sub
xor
std
shrl
std
movb
mov
or
or
xchg
hlt
sar
das
int
push
adc
push
test
addr16
movsl
loope
bound
xchg
sbb
dec
push
pop
aaa
pop
push
jnp
out
cmc
push
scas
insb
subl
pop
and
dec
xchg
mov
aas
aaa
movsb
sub
pusha
repz
cld
stos
lret
pop
mov
cmpsb
addl
xchg
cmpps
adc
push
gs
and
fwait
rcll
nop
push
test
jns
je
in
in
shlb
mov
test
imul
xchg
mov
lret
adc
push
daa
and
rorb
filds
jno
add
sub
je
mov
jecxz
fadds
mov
cmp
xor
lods
mov
mov
addr16
hlt
hlt
cmp
int
fstp
cwtl
jmp
cwtl
adc
fsubs
imul
stc
insb
imul
fisttps
jae
stos
addr16
pop
aaa
cmp
repz
sub
insl
add
lcall
and
sbb
xchg
adc
or
xor
les
mov
test
sub
adc
subl
icebp
test
je
push
sub
mov
test
sub
push
xchg
xchg
inc
dec
mov
xchg
insl
add
repnz
fs
fsubrl
sub
fnstsw
int
add
stos
inc
sbb
mov
push
pop
mov
lods
and
ss
fldt
fcomps
jb
fwait
adc
push
lock
add
shrl
mov
and
or
push
repnz
cmp
pop
cmp
repz
and
or
fwait
aad
adc
arpl
pop
loopne
iret
xchg
ds
mov
aad
stc
push
cmc
xor
sbb
add
jge
push
popf
adc
pop
lock
jne
cwtl
add
push
xchg
pop
or
outsl
and
mov
lods
movsl
scas
adc
int
cmpsb
mov
xor
cwtl
aad
add
sbb
cmp
and
and
jmp
inc
jp
jne
add
and
lret
xor
jmp
sbb
in
xchg
cmpl
push
daa
insb
insl
jbe
lcall
sbb
iret
xchg
mov
add
sets
adc
cmc
cmp
notb
add
mov
je
mov
and
mov
lret
addr16
ss
data16
sbb
adc
mov
push
inc
sbb
sub
outsl
in
mov
inc
scas
add
xorl
std
in
and
xchg
jns
test
xor
out
add
xchg
mov
adc
hlt
mov
jns
mov
das
mov
in
outsl
inc
mov
sti
mov
add
data16
stos
push
and
sahf
aas
mov
cmpsl
push
mov
into
out
movsb
push
add
pop
lahf
push
popf
ljmp
por
subps
arpl
push
mov
pop
xchg
cmc
mov
into
mov
xor
mov
mov
adc
push
movsl
fimuls
inc
push
sti
and
les
lods
mov
and
stos
lods
mov
inc
ljmp
imul
adc
out
sub
cmpsb
int3
mov
lret
xor
lea
add
rcrb
imul
xor
in
scas
push
in
pop
mov
jnp
int3
or
jg
push
imul
lods
lods
in
ds
xchg
shrb
and
mov
jo
imul
lret
rclb
pop
pop
cmp
leave
test
aam
popf
sti
jge
adc
mov
comiss
sub
imul
aas
pop
pop
fidivrl
mov
jecxz
arpl
stos
test
outsl
scas
cmpsl
fsubrl
mov
xchg
cmpsl
notb
xor
inc
xorl
add
and
mov
outsb
arpl
xor
mov
or
add
mov
outsb
dec
nop
jnp
sbb
rorb
mov
in
jg
add
sub
pop
hlt
mov
repnz
mov
sbb
pushf
push
inc
pop
arpl
shlb
sbb
mov
test
sbb
inc
in
mov
mov
mov
stc
int
push
xchg
aas
addr16
push
ds
xor
shr
lock
xchg
push
xor
lcall
cwtl
pop
jb
leave
stos
lret
fwait
cld
fistpll
test
dec
push
xor
sbb
lcall
imul
jg
push
push
adc
cmp
sub
cs
sahf
cmp
adc
inc
cmp
pop
and
das
mov
xchg
xor
xor
nop
jl
cmpsl
movl
pop
sbb
mov
call
into
cmp
clc
inc
xor
iret
mov
shll
push
add
fsubr
outsb
repnz
fisubrl
daa
aaa
sbb
lods
push
out
jl
or
pop
dec
or
mov
cmpsl
or
movb
push
out
daa
rcrb
icebp
jmp
push
cli
hlt
aaa
add
cli
inc
call
push
mov
ja
fdivr
adc
shll
jecxz
hlt
push
int
lahf
xor
bound
lock
ror
dec
push
push
and
jecxz
shlb
mov
sub
lods
int3
test
test
pushf
ret
mov
dec
mov
mov
xchg
out
mov
out
sbb
test
jmp
mov
adc
pop
cs
sbb
and
mov
nop
add
gs
cmpsb
xchg
repz
popf
lods
inc
dec
fsubs
mov
sbb
or
rcrb
dec
cs
shr
cmp
nop
out
sub
pop
xor
loope
flds
movsl
mov
scas
int3
cli
clc
mov
xchg
call
bound
sar
pop
out
sbbb
mov
out
sub
sbb
iret
cmp
fdivs
ficoms
xorb
in
and
leave
pop
adc
adc
test
dec
jmp
out
fsubs
push
xchg
fcompl
mov
aaa
sub
clc
arpl
jnp
xor
jecxz
cmc
xlat
cmpsl
std
push
jp
out
cmpl
aaa
cmpsl
mov
in
mov
adc
jnp
inc
sbb
sahf
nop
dec
mov
lret
cmp
dec
stos
sub
loopne
loope
loop
cs
mov
fiaddl
mov
and
lahf
test
and
or
or
into
xchg
addl
je
clts
push
bound
shll
insb
cltd
xchg
dec
push
mov
lret
lahf
cmpsb
push
loope
ss
test
sbb
jns
fcomp
xor
sub
scas
sub
cmpb
nop
js
xor
push
inc
mov
movsl
mov
mov
push
add
sbb
inc
sub
sub
adc
fdiv
mov
mov
movsl
or
test
sbbb
xor
aam
jp
mov
mov
dec
adc
inc
data16
fcoms
jae
xor
mov
ret
pop
fidivrl
jge
adcl
xchg
insl
hlt
or
lret
jne
dec
rol
add
mov
xor
sub
xchg
mov
in
mov
imul
and
insb
mov
in
sbbl
cmp
add
cs
xchg
mov
push
xchg
sub
cld
mov
fildl
xor
sub
imul
testl
loope
cmp
sub
cwtl
mov
popf
dec
or
jno
jne
or
js
cmc
mov
xchg
jl
lods
lret
xor
enter
movsb
push
mov
inc
sub
add
popf
mov
add
out
pushf
and
insb
jp
xchg
loopne
or
sbb
mov
sub
pusha
mov
insb
inc
popf
popf
xor
lcall
push
and
xor
xchg
std
mov
ss
loop
jns
adc
xlat
incb
pop
mov
imul
mov
dec
xor
jg
ljmp
dec
outsl
inc
nop
fs
and
jns
inc
lds
arpl
push
in
inc
xor
push
sti
test
jne
and
mov
xchg
icebp
aam
ds
sti
pusha
in
mov
dec
arpl
pop
inc
adc
ret
xor
lods
push
cmp
data16
addl
mov
and
lret
shlb
mov
test
andl
mov
je
mov
es
mov
loope
fisttps
enter
add
sahf
add
xor
je
std
aaa
sbb
repnz
shrl
push
xchg
scas
push
jmp
stos
push
sti
inc
imul
inc
cmp
nop
out
and
in
sbb
loopne
push
and
jecxz
ljmp
out
sbb
test
or
stc
out
repnz
out
cmp
mov
pop
dec
or
in
fdivl
inc
daa
sbb
in
shrl
push
dec
lret
pushl
testl
std
xchg
sub
stos
outsb
bound
mov
and
jne
jecxz
mov
sub
das
test
sti
mov
cmp
mov
push
jno
movsb
fildll
out
hlt
cmp
inc
ss
stc
adc
faddl
or
pop
mov
or
adc
adc
xor
mov
cmp
std
pop
daa
js
jb
lods
dec
sti
mov
push
or
sbb
loop
push
subb
push
dec
or
mov
lea
cltd
jae
sub
adc
cwtl
push
pop
mov
rclb
fs
mov
mov
daa
lds
pushf
push
aam
scas
outsl
lock
push
add
cld
sub
aas
fdivrl
push
xor
out
rcrl
nop
xor
mov
adc
and
mov
icebp
push
sub
and
adc
inc
push
inc
inc
xchg
ficoml
jle
sarb
inc
inc
push
test
rcll
and
outsb
inc
pop
sbb
mov
fstp
stc
cmp
lods
xchg
add
fimull
mov
cmp
dec
bound
mov
sarb
inc
outsb
inc
and
pop
and
push
or
in
jbe
lods
push
inc
cmpsb
mov
sti
negl
xchg
pop
jle
mov
shlb
and
jecxz,pn
jl
push
pop
mov
jnp
and
lods
xchg
xchg
ja
inc
fisttps
lcall
mov
pop
fisubrs
fldenv
adc
xor
dec
mov
mov
inc
cmp
aaa
lahf
mov
adc
jmp
pusha
cli
push
ffree
lahf
push
push
imul
je
jbe
xchg
pushf
adc
adc
jnp
aam
lds
and
pop
push
sti
hlt
cld
cmp
push
push
jecxz
add
test
adc
jmp
mov
ds
xchg
or
ds
add
jmp
mov
pop
mov
pop
xchg
loope
fs
inc
jp
push
push
lods
xor
mov
dec
mov
inc
orb
add
mov
inc
jl
in
sbb
mov
dec
and
test
hlt
cmc
out
jnp
or
adc
jp
cltd
push
lahf
pop
mov
mov
jle
pop
sub
aad
push
mov
stc
ret
cmpb
cli
xchg
inc
or
dec
xchg
xor
or
rcrl
std
add
je
fidivrl
mov
mov
sub
dec
xchg
inc
es
std
dec
push
xchg
cmpsl
push
mov
aam
jbe
pop
push
jns
xchg
or
iret
dec
jle
add
cli
inc
mov
mov
js
jp
xorb
add
lds
mov
or
sub
xor
sbb
or
sub
mov
insl
push
pop
dec
aad
push
ret
cmp
jl
cmpsl
das
mov
dec
std
mov
sub
fsincos
jo
xchg
mov
cmp
inc
or
lds
mov
and
fadds
ret
stos
xchg
mov
mov
jnp
aaa
dec
aas
jae
lcall
cltd
imul
xchg
cmp
icebp
das
stc
fs
aas
adc
lret
pop
mov
dec
cmp
movsl
test
jle
aam
pop
jns
loop
movsl
sub
sbb
xchg
push
popa
lods
fsubrp
push
hlt
push
dec
out
cli
and
xchg
fs
repz
insb
adcb
mov
xor
push
xchg
mov
cmp
and
rcrl
xchg
leave
in
pop
push
inc
loop
push
mov
xor
in
in
loope
jl
lcall
add
stos
and
test
js
push
mov
mov
sub
mov
sti
lods
fwait
sub
inc
mov
add
es
std
hlt
sar
or
or
cmpl
int3
shrl
adc
dec
insb
jbe
fsubrs
imul
jno
sub
std
lret
push
dec
aad
dec
mov
or
testb
mov
inc
sbb
pushf
loope
je
dec
testb
xor
or
xchg
fstl
sub
popa
lcall
test
je
or
mov
xchg
adc
into
dec
pop
jecxz
mov
sbb
mov
dec
xchg
and
cmp
lahf
mov
stc
xor
mov
add
decl
and
xor
mov
inc
xor
imul
fcomip
out
sahf
xchg
jg
notb
inc
std
push
xchg
mov
mov
push
inc
inc
push
mov
lds
mov
sbb
or
data16
adc
clc
sbb
scas
xor
out
testb
or
mov
test
into
shrb
cmc
jl
dec
js
ds
ss
rolb
lock
jnp
jl
rcrl
sbb
add
and
mov
aaa
test
ds
jge
inc
data16
ret
or
fsubrl
cli
in
fsubrp
cmp
or
mov
cmpsl
fimull
call
gs
or
xchg
jbe
rcl
subb
fildll
adc
inc
lods
or
cli
and
imul
das
push
pushf
cmp
xchg
imul
or
xor
inc
leave
push
dec
sbb
push
sbb
insb
jp
add
pop
aam
dec
repnz
test
sti
push
jnp
cli
es
or
xor
xorl
sbb
in
sbb
inc
test
jne
into
and
sbb
sub
jmp
add
aaa
arpl
xor
inc
cmp
sbb
rorl
sub
int
dec
repnz
sbb
js
xor
movsl
aaa
not
aam
sbb
dec
gs
je
icebp
fisttps
and
cmc
pop
mov
jae
in
sbb
add
in
jg
xor
rorb
call
ja
insl
dec
cmc
jo
aaa
or
movsl
pop
push
popf
sub
lods
jne
sub
jl
xor
lcall
cld
or
mov
inc
inc
pop
xor
lea
xchg
jecxz
in
mov
push
pop
inc
stc
sbb
lcall
inc
and
popa
sbb
adcb
xchg
cmc
aad
movsb
popf
mov
in
sbb
inc
or
aam
js
jb
xchg
adc
inc
lods
mov
loopne
push
cli
add
and
mov
outsl
jge
mov
jp
mov
popf
lds
inc
add
cltd
ja
mov
and
mov
cmpl
daa
out
jbe
xor
ja
mov
mov
or
xlat
ds
mov
mov
dec
pop
sub
das
and
ds
addr16
push
push
xchg
cmp
jb
out
mov
stc
jp
insb
lds
stos
lds
mov
mov
add
push
shlb
pop
jmp
dec
enter
lds
mov
mov
and
lds
pop
cmp
cli
push
into
lea
push
mov
imul
clc
and
or
insl
sbb
jbe
push
gs
mov
cmp
xor
cmp
push
cs
or
or
cli
or
mov
push
scas
into
jbe
loop
mov
xchg
cmpsl
and
loope
insl
shrl
mov
clc
out
test
hlt
std
addr16
adc
xor
add
jae
xchg
dec
pop
loopne
jp
mov
into
jno
push
push
cmp
xor
rcr
and
or
rcrl
loop
cli
arpl
adc
stos
rclb
insl
sub
push
inc
mov
push
mov
out
lods
mov
mov
mov
push
test
enter
or
push
mov
add
je
cli
push
pop
cmp
fldenv
or
fcomps
insl
cmp
std
adc
inc
shr
push
sti
pusha
outsb
pop
and
mov
sarb
xor
sbb
pop
inc
stc
ds
xchg
arpl
dec
dec
add
inc
jg
scas
pop
xchg
incl
or
nop
cmp
test
mov
loope
andb
jne
pushf
jnp
popf
adc
mov
js
std
repnz
icebp
pop
mov
push
pop
shrb
in
lret
and
movsb
xor
inc
movsb
pop
sub
add
sub
mov
mov
rolb
jg
loope
push
jg
data16
call
jne
lahf
imull
mov
aad
and
mov
push
into
mov
in
mov
xchg
adc
adc
int3
fs
gs
dec
xchg
and
nop
cltd
ret
lea
insl
mov
out
scas
fstps
and
adc
aaa
sbb
fisubl
push
sbb
into
stos
sub
dec
mov
and
insl
aas
pop
xor
repnz
int3
and
adcb
inc
shrb
or
xlat
shrl
lcall
loope
gs
jmp
daa
imul
cmpsb
aaa
out
pop
xchg
pop
push
daa
inc
adc
js
push
dec
cmp
sub
movsb
inc
cld
sbb
out
nop
mov
inc
test
cmp
mov
add
cmp
dec
fsubr
add
sbb
outsl
outsl
jnp
adc
pop
mov
inc
push
nop
add
lds
xor
stos
in
jmp
rcll
pushf
mov
popf
out
iret
iret
jecxz
rcrb
adc
and
push
repnz
imul
xor
int
subb
testl
dec
or
fmulp
sub
mov
popa
pusha
adc
xor
int
mov
mov
cmc
lcall
cld
mov
dec
testl
jl
dec
cmpb
pushf
mov
test
xchg
or
je
xchg
pop
scas
sti
or
clc
dec
int3
mov
jg
shr
jne
js
cwtl
xchg
and
pop
lret
mov
push
arpl
cmp
mov
cmpsb
scas
lret
popf
dec
fsubrl
and
pop
lods
ja
out
out
add
push
jno
inc
xchg
adc
js
into
fwait
cmp
mov
inc
out
push
sarl
ja
repnz
js
out
int3
popa
popa
subl
test
jmp
ljmp
mov
mov
pusha
out
add
or
or
aas
in
push
xchg
leave
xchg
push
adc
mov
ret
lock
jl
inc
into
int3
std
faddl
push
adc
loop
cmp
mov
and
mov
sbb
std
rcrl
sbb
push
xchg
jle
xor
mov
sbb
cmp
and
aam
push
mov
mov
xor
inc
cld
cmp
aas
mov
lcall
pop
xchg
test
data16
rcll
imul
dec
sub
inc
clc
fs
xorps
sti
cld
aad
mov
adc
xor
adc
mov
sbb
daa
scas
into
lods
xchg
repz
ficoms
jp
cltd
divl
dec
movsl
xchg
cld
dec
pop
aaa
imul
addr16
in
fwait
adc
sahf
mov
add
int3
xchg
lea
lock
mov
cs
mov
push
xor
test
ror
jg
mov
ret
movsl
adc
scas
bound
outsl
cmp
pop
mov
and
js
xchg
outsb
cli
fs
jno
hlt
adc
std
mov
xorl
lahf
jbe
negb
dec
mov
add
outsb
cltd
jne
pop
lods
and
cmp
xchg
sub
ss
push
sub
repnz
pop
xor
dec
mov
push
ret
push
loop
test
bound
stc
lods
fiaddl
pop
rclb
hlt
push
fidivrs
cmpsl
arpl
cld
mov
xchg
mov
pop
sub
push
stc
sbb
daa
jno
xor
movl
pop
mov
aaa
or
les
je
inc
push
cs
pusha
stos
or
sbb
push
aam
int
pop
sbb
xchg
ret
mov
add
sbb
sahf
testl
mov
test
ljmp
and
push
gs
jno
in
mov
xchg
cwtl
cs
pop
inc
cs
in
out
clc
push
push
fldenv
ljmp
mov
mov
jmp
mov
cld
inc
jl
or
pop
push
xchg
cmp
ftst
out
xchg
push
pop
adc
xchg
pop
sar
xchg
push
mov
jnp
xor
push
cmp
mov
leave
testb
xchg
add
dec
test
vpcmpgtb
xchg
jnp
cmp
mov
mov
minps
mov
cmp
pop
imul
loopne
aam
popf
adc
cmp
push
aas
pop
cmpl
jo
scas
mov
loopne
cmp
out
or
cltd
repnz
sub
or
fcomp
fiaddl
pop
jbe
mov
popf
mov
nop
mov
fcomi
aam
push
jno
mov
jge
in
lds
sahf
rdpmc
mov
mov
dec
mov
lahf
imul
sbb
dec
inc
insl
enter
push
inc
dec
adc
pop
mov
xchg
pop
sub
out
imul
fstp
and
in
sbb
inc
or
push
push
cld
inc
mov
cld
jl
pop
enter
daa
popa
cmp
lret
and
add
add
xor
shrb
xchg
add
mov
test
xchg
jge
aaa
mov
iret
call
xchg
stos
push
pop
mov
fmul
insb
xchg
xchg
mov
cmpsl
sbb
jno
das
pusha
jl
ss
dec
je
cli
lock
nop
mov
cmp
and
pop
push
imul
dec
xor
mov
mov
pop
sub
and
or
enter
pop
mov
mov
add
pop
mov
mov
push
mov
push
inc
cmp
jp
adc
jae
mov
mov
adc
repnz
and
inc
cs
adc
mov
repnz
sbb
push
mov
loope
jae
fwait
lock
jns
xlat
jnp
sbb
fidivrl
pop
xor
adc
jmp
sub
cwtl
push
jg
add
and
mov
gs
jbe
cld
lret
xchg
jo
dec
xlat
in
jl
stos
je
sbbl
in
scas
fnsave
sbb
es
mov
inc
jb
cmp
jae
cmp
jno
pop
aas
fbld
mov
fistl
movsb
mov
dec
leave
shl
dec
bound
mov
je
fwait
xor
xchg
pop
rcrb
test
jno
jp
test
xchg
popa
data16
jp
push
fmull
sub
test
fisubrs
pop
addr16
cmp
and
stos
pushf
daa
xchg
fisubrl
add
outsb
push
in
cmp
pop
mov
daa
or
push
cmp
push
add
stc
sub
call
mov
add
and
fdivrp
dec
cli
cmp
aas
and
ja
iret
sbb
aad
mov
xchg
clc
stos
dec
pop
jnp
jmp
and
es
int
aad
lock
lods
xchg
inc
push
in
aas
sarl
add
mov
xor
sti
dec
mov
cld
lock
pop
ds
jmp
pop
cmp
xor
out
xchg
mov
or
movsb
dec
ljmp
push
cmp
insb
in
imul
xchg
leave
ret
rcrb
lods
jge
xchg
jnp
pop
cmpsb
xor
xchg
sub
orl
sub
imul
shll
cmpsb
scas
movsb
sub
std
aas
int3
lods
mov
fisubs
arpl
and
and
add
cs
ret
dec
shlb
xchg
jno
adc
pop
pop
push
cltd
add
push
push
jns
es
adc
adc
jmp
data16
rclb
dec
arpl
insl
je
leave
xlat
frstor
cmpsl
inc
adc
test
fiaddl
ret
addb
ds
aaa
fwait
ret
and
xchg
xchg
cmp
out
mov
fisubrs
movsb
cmp
cmp
lock
xor
insl
jno
or
aam
sbb
cmp
rolb
add
rcrl
mov
mov
fiaddl
gs
mov
mov
or
clc
cmp
mov
ret
inc
inc
push
mov
out
mov
lahf
out
mov
testb
mov
mov
sub
xchg
jo
add
out
mov
pop
push
aad
pop
cmp
jno
add
jno
fisttpll
xchg
inc
jnp
cli
ljmp
jbe
lods
sub
outsb
lcall
lds
and
repz
inc
xor
push
sti
sub
or
cmp
sbb
loope
test
sbb
sbb
pop
push
jae
lgs
cmp
lret
push
pop
jnp
call
daa
jnp
fistps
jl
cmovno
std
adc
pusha
je
movsb
xchg
sub
fcomip
fildll
mov
leave
ss
nop
fsub
pushf
and
ret
adc
push
out
lock
mov
das
std
lcall
jb
lret
lahf
pop
test
cmpsb
cmp
imul
adc
aad
cmp
pop
add
jl
les
ljmp
sbbb
mov
ret
mov
lret
mov
mov
mov
mov
dec
xchg
jle
outsl
fs
outsl
ljmp
add
test
xchg
xor
and
into
mov
and
ret
lcall
dec
add
scas
movsb
in
cmp
xchg
or
cmp
push
pop
push
aaa
pop
sarb
stos
movsl
inc
je
int
push
fidivrl
clc
fistps
fs
bound
test
adc
mov
in
cwtl
pop
in
test
loopne
fnstsw
adc
lcall
in
leave
inc
int
fildl
jp
test
inc
and
jp
int
out
inc
or
lds
and
cld
cwtl
xchg
test
xchg
sub
pushf
out
es
or
daa
outsb
push
lahf
mov
movsb
adc
rolb
pop
jle
movsl
mov
pop
mov
inc
adc
test
sbb
add
out
jns
and
fisubrs
test
ja
iret
dec
sbb
xchg
sub
test
xchg
sti
ljmp
lahf
imul
sbb
pop
ljmp
sbb
in
lea
in
cwtl
outsb
fcmovb
add
xchg
xlat
aas
cmc
push
clc
xor
pop
inc
movl
dec
jns
aam
ds
js
rolb
pusha
je
mov
inc
fisubs
push
inc
cmp
fwait
out
inc
sti
cmpsb
cmp
push
aad
and
in
pusha
xor
mov
and
pop
test
mov
sahf
popa
and
pop
notb
repz
lea
or
adc
test
divl
movsl
imul
push
jbe
lahf
jns
mov
mov
lods
lods
xor
mov
sbb
cmp
dec
adc
hlt
pop
push
cmp
in
mov
mov
add
stos
scas
outsl
fcoml
imulb
jl
and
add
scas
push
xchg
into
lock
adc
lods
cs
sbb
jl
inc
out
push
mov
enter
sbb
in
ret
icebp
shlb
lea
out
jb
lret
iret
sbbb
jne
ja
pop
sar
or
mov
cmp
sub
mov
cmp
in
dec
clc
fsubp
mov
je
insl
or
fs
mov
mov
dec
add
test
aam
imull
cltd
cmp
cmp
dec
pop
daa
jmp
pop
aaa
fbld
xchg
stc
push
rcrl
imul
xchg
adc
aas
popf
shll
sub
jmp
pop
mov
in
sbb
jae
mov
pop
shll
dec
fnstcw
aaa
xchg
mov
std
xor
mov
sbb
fcoms
dec
js
jecxz
repnz
push
push
push
xor
mov
dec
pusha
push
and
sbb
aad
div
addr16
cmp
lret
cs
clc
mov
repnz
in
or
dec
jbe
sarb
into
scas
loop
fidivs
orl
call
cmp
cmp
enter
add
push
sbb
lock
adc
sub
inc
mov
dec
shrb
sbb
aad
jne
popf
and
ja
sub
jbe
test
xchg
incl
js
push
nop
cmp
inc
inc
add
or
pop
outsb
jle
cmp
es
dec
iret
jae
cltd
sbb
mov
movsb
imul
cmp
inc
and
adc
sub
mov
and
out
enter
sti
clc
test
xor
or
mov
mov
jne
mov
and
pop
sti
push
cmpsb
cwtl
sub
icebp
test
aas
push
jmp
jnp
test
and
or
dec
xchg
scas
aaa
addr16
sti
jnp
jb
add
jns
das
cmp
movsl
rcll
pop
pop
addb
lcall
xchg
mov
daa
dec
insl
out
lea
out
dec
push
push
andb
rolb
mov
jmp
mov
fs
dec
xor
push
aas
mov
inc
out
std
mov
adc
cmpsb
mov
sti
mov
hlt
dec
sbb
xchg
fistpll
leave
push
lahf
out
adc
push
push
add
adc
adc
es
and
sub
sti
int3
jo
dec
push
or
sbb
mov
das
dec
mul
jge
pop
sti
jbe
dec
jl
adc
jge
and
es
scas
test
or
and
stos
in
mov
sbb
outsb
dec
lret
mov
pavgw
shrb
fistl
mov
aad
outsl
xor
and
inc
enter
jmp
xchg
mov
insl
repz
add
push
daa
mov
rorb
mov
mov
mov
xor
fidivl
jmp
xlat
mov
inc
pop
cs
push
ljmp
xor
xchg
lret
popf
cmp
mov
addr16
mov
add
push
inc
fsubrp
or
cmpsl
mov
fbld
mov
cmpsb
jmp
mov
test
mov
pop
mov
jp
push
testb
div
fldenv
cmpsb
imul
dec
mov
addr16
cmp
cmpxchg
out
enter
popf
jns
xor
adc
jl
sub
test
push
pop
cmp
stc
fdivl
add
sub
xor
dec
mov
cs
mov
xchg
sbb
incb
clc
mov
cmp
in
mov
into
mov
mov
jg
popf
testb
nop
xchg
cmp
loope
adcl
sbb
pop
xchg
add
orl
push
cli
es
pop
or
and
xchg
jecxz
xchg
and
cmp
cmp
and
cld
loope
add
fs
add
mov
std
jne
sbb
ja
dec
and
aam
sub
in
jg
je
push
pushf
xor
je
jg
jl
pop
in
pushf
sar
push
minps
shl
lods
out
push
pushf
sti
lock
rcrl
popa
inc
repnz
pusha
pop
imul
lock
pop
enter
fldcw
push
int3
sbb
jecxz
subl
jp
fistps
outsl
cmp
xchg
in
mov
enter
js
xor
add
cmc
xchg
xchg
nop
sub
push
adc
mov
test
mov
in
test
aaa
imul
addr16
xorl
in
xor
push
mov
ret
iret
ljmp
movsl
iret
jmp
divl
mov
mov
ss
add
ret
cwtl
dec
stc
inc
out
inc
push
jae
lcall
mov
lcall
repnz
fstl
pushf
lret
icebp
or
in
lods
jp
xchg
lods
xor
add
fidivl
mov
mov
add
es
movsb
cmp
scas
push
js
lahf
std
adc
xchg
je
xchg
lret
sti
cmpsb
inc
add
out
imul
test
mov
test
data16
sub
fisttpl
je
mov
fs
xchg
sbb
adc
jp,pn
fwait
pop
inc
pop
sar
cwtl
into
jo
add
fwait
rorl
pushf
sbb
inc
movsb
mov
xor
outsl
xchg
sub
cmp
add
dec
cmpsl
scas
inc
loope
fcmovnb
mov
test
xor
adc
pop
movb
ljmp
mov
aad
daa
xchg
stc
ja
loopne
arpl
jnp
addb
mov
subb
lret
push
xor
fcmovb
mov
fildll
dec
sub
stc
jnp
mov
ficomps
mov
and
or
nop
inc
aaa
xor
mov
stos
inc
in
cmp
cmc
mov
jle
pop
and
dec
std
fisttpl
lahf
xchg
push
popa
add
cmp
push
sub
roll
test
scas
rorb
or
add
inc
call
stos
je
imul
mov
je
cmp
lcall
dec
mov
mov
push
inc
mov
js
leave
orl
fxch
aas
int
cwtl
mov
sub
faddl
add
mov
nop
lret
mov
in
in
pusha
pop
cmp
pop
cmp
sbb
adc
das
std
insb
es
jne
push
xor
cmc
or
mov
pop
mov
lea
dec
mov
push
push
pop
inc
and
lods
stos
loopne
sbb
pop
inc
scas
xlat
mov
loope
jl
and
in
fs
int3
pop
jno
sbb
push
push
lret
pslld
shrb
cmc
mov
jo
or
xor
cmp
xor
das
out
pop
out
pop
or
and
and
mov
and
dec
pop
sub
jae
outsb
mov
or
sahf
test
ret
dec
filds
imul
gs
aaa
pop
dec
cmp
add
pop
cmp
xchg
cld
not
repz
sti
xlat
loopne
or
cmp
sbb
test
mov
iret
mov
adc
popf
in
and
xor
test
dec
push
and
sbb
push
fsubs
xchg
pop
push
jmp
xor
add
scas
hlt
and
jg
push
pop
or
scas
popa
mov
pop
mov
sub
psubsb
btr
dec
mov
add
lock
dec
push
dec
addb
inc
add
push
pop
mov
mov
in
push
push
push
sbb
lret
int
or
in
push
push
sbb
pushf
push
popf
pop
inc
and
xchg
es
inc
sub
pushf
out
or
inc
xchg
dec
adc
in
push
mov
jp
mov
xchg
out
imul
inc
stos
in
xlat
stc
xor
jl
pop
inc
out
outsl
fs
dec
xchg
movsb
adc
xor
aaa
je
mov
xchg
jge
lret
andl
push
pop
hlt
mov
fldl
mov
or
push
inc
and
inc
fwait
xchg
insb
xchg
in
mov
test
add
mov
cmp
in
js
cmpl
cs
sbb
and
mov
add
fidivrl
xor
popf
jnp
js
and
shr
pop
nop
adc
jb
int3
ljmp
std
mov
jae
xor
jae
mov
xchg
mov
mov
push
sahf
jno
movsb
mov
enter
push
das
sub
stc
push
sub
push
jno
sub
add
adc
fst
sub
or
sub
iret
lret
push
out
lret
dec
movsl
adcb
imul
aaa
daa
cmp
cmp
jae
sbb
outsb
notb
mov
mov
rcr
push
lahf
jg
sub
ret
xor
into
mov
clc
loop
mov
ljmp
cmp
jo
dec
cmp
cltd
pop
jmp
xchg
insl
mov
and
mov
xchg
sub
jne
movsl
shlb
push
inc
jbe
jb
and
mov
sti
jo
in
stc
xor
xor
mov
ds
in
fisttpll
roll
in
inc
ret
sar
cmp
mov
das
mov
call
jp
sub
das
rol
mov
pop
lock
jg
push
xchg
cli
jmp
xor
inc
mov
lods
xchg
mov
pop
lcall
pop
or
jns
mov
sub
lret
negb
or
sbb
daa
mov
adc
ja
rcll
popa
mov
enter
push
scas
aas
pop
jbe
xor
pop
pop
sbb
jle
push
xor
mov
pop
xchg
cmp
ds
es
lahf
notl
in
xlat
add
mov
es
and
adcl
push
pop
jle
lahf
jbe
pop
arpl
fwait
ret
or
push
push
scas
sub
cld
dec
outsl
adc
subb
popa
fcmovnbe
pop
push
or
enter
mov
jmp
js
test
lea
pop
sbb
insb
in
jp
sub
int3
aad
sahf
xchg
sub
cwtl
rcrb
or
sarl
int
add
popa
adc
test
mov
or
pop
jns
inc
xchg
stc
sahf
clc
mov
jmp
std
inc
outsb
mov
imul
lahf
lahf
fimuls
push
outsl
add
xchg
test
or
jmp
mov
xchg
inc
dec
cltd
xor
jmp
pushf
mov
out
sarb
sub
and
icebp
mov
subl
dec
insb
sbb
psubq
cmpsb
jns
addl
int
or
repnz
data16
push
bound
and
mov
adc
loopne
into
arpl
rolb
hlt
cmpsl
xchg
mov
sub
sahf
int
sti
lahf
outsl
sbb
mov
out
das
test
mov
pusha
mov
ret
sub
jne
mov
xor
fs
mov
call
daa
leave
xor
add
cld
rcrb
add
std
xlat
dec
push
gs
inc
and
add
xchg
nop
imul
repz
or
cmp
imul
es
push
pop
in
sbb
aaa
mov
dec
jmp
mov
mov
dec
rorl
cmpsb
jbe
js
pop
int
mov
jmp
adc
xchg
xchg
adc
aad
iret
mov
or
mov
out
clc
out
clc
mov
sub
in
fadd
jg
and
inc
movsb
mov
movsb
and
rclb
sbb
push
popa
mov
xor
dec
inc
repnz
sub
fiaddl
aas
mov
push
jp
or
mov
inc
pusha
mov
mov
mov
insl
lahf
fstps
test
mov
sarl
lret
sahf
icebp
mov
test
jle
ss
adc
jg
ljmp
xchg
xchg
and
jne
jne
mov
js
adcb
inc
cmpsb
inc
jge
mov
filds
adc
cmp
jl
stc
dec
xor
shll
cli
iret
xchg
ljmp
adc
stc
mov
cmp
and
xchg
cmp
cmpsl
pop
outsl
cmc
jp
push
insb
sub
adc
nop
cmc
lahf
in
repz
enter
push
fld
loop
mov
xor
iret
movsl
loop
cmc
shlb
jmp
jne
test
nop
fistpl
fsubl
in
sub
lahf
xchg
fiadds
adc
ss
cs
lock
popa
or
push
push
test
mov
mov
hlt
mov
dec
xchg
xor
push
adc
push
and
xor
mov
sbbl
insb
add
dec
cmpsl
xor
inc
push
loope
jmp
push
jecxz
test
pop
xchg
scas
sub
xchg
cmpsb
jl
xor
mov
jp
cmp
int3
cs
cmp
sti
pop
dec
icebp
sub
nop
scas
rcrb
cmp
fs
aam
cmp
jmp
mov
ss
adc
in
add
data16
aas
es
shlb
mov
arpl
mov
xchg
negb
jne
popa
gs
xchg
icebp
nop
lea
dec
sub
push
xor
pop
or
aaa
fstps
or
mov
inc
test
cmp
cmpsl
arpl
cmpsb
leave
cwtl
fildll
arpl
pop
aaa
xor
out
cmp
shr
gs
add
push
mov
popa
movsl
and
bound
mov
xchg
sbbl
lret
adcl
and
push
mov
incb
mov
add
out
inc
cs
inc
and
popa
icebp
movsl
xor
int
xchg
and
jnp
cltd
xlat
mov
add
pcmpgtd
enter
nop
jmp
cmp
or
push
pop
mov
cmpsb
rclb
lods
push
or
mov
rorl
je
cwtl
testl
ljmp
shrb
fwait
jnp
das
adc
dec
arpl
adc
pop
or
cltd
loope
into
mov
and
jo
rorb
inc
or
mov
pop
pop
sub
call
test
outsl
pop
adc
popa
pop
testb
add
rcrl
insb
adc
mov
fnstcw
ss
dec
cli
imul
jp
rcl
test
stc
insb
sub
adc
push
rcr
jbe
inc
pop
test
xor
ljmp
push
enter
push
sub
adc
hlt
frstor
xchg
cmovnp
mov
pop
aas
pop
hlt
shrb
ds
mov
aaa
xchg
or
sub
mov
push
jge
ret
sub
cmpsb
mov
imul
iret
lea
inc
push
or
adc
mov
test
ss
mov
pop
hlt
pop
dec
sar
addr16
mov
mov
mov
cwtl
cltd
add
inc
rclb
int
sub
ljmp
shrb
mov
in
enter
imul
outsb
dec
sub
mov
sub
leave
jl
test
sub
xor
pop
sbb
test
mov
pop
inc
xor
dec
inc
cmpsb
sbb
add
dec
mov
js
enter
mov
iret
xlat
mov
cli
fsubr
xchg
sub
xchg
imul
gs
imul
std
fwait
mov
cli
jbe
loope
pop
sti
mov
push
add
lret
mov
mulb
or
pop
idivl
pop
mov
enter
jge
sbb
loope
jmp
imul
cld
icebp
mov
repnz
scas
xor
xor
ja
or
std
lea
stos
std
xor
hlt
je
or
sub
cmp
inc
jb
insb
int
test
pop
cmp
sahf
adc
daa
pusha
mov
test
xor
rcpps
imul
fwait
vmaxss
sub
rolb
inc
jecxz
aad
pop
daa
push
les
mov
sbb
outsl
mov
or
test
sbb
mov
cli
fadds
clc
sbb
les
mov
xor
adc
nop
sub
sbb
xor
push
ret
cmp
ss
adc
mov
inc
adc
or
daa
rcll
jnp
xchg
addl
push
jge
cltd
mov
jno
orb
xlat
outsl
mov
fcomip
addr16
movsb
iret
mov
shl
push
or
cmp
fldenv
sbb
cmpsl
add
push
dec
sub
cmp
incb
adc
repnz
sub
cmpsl
sub
pop
ljmp
xchg
xlat
ja
dec
stos
jns
push
jno
xchg
mov
xlat
xor
in
out
loopne
movsl
and
pusha
out
out
pop
xchg
clc
in
outsb
cmp
pop
faddl
push
push
cmc
int3
iret
push
xchg
iret
cmpsb
xor
mov
pop
out
jbe
aaa
fimuls
neg
jmp
mov
mov
push
mov
push
adcb
pop
add
out
xchg
aad
xor
aad
and
push
mov
ljmp
adc
mov
mov
jle
jnp
and
fnstenv
jmp
popa
jge
xchg
jo
mov
sbb
inc
inc
push
fmul
loope
sbb
loopne
insl
inc
xor
pop
in
movsl
mov
add
cli
jae,pt
jl
rclb
push
and
orl
inc
js
xchg
jg,pn
ljmp
pusha
pushf
sbb
jle
rolb
xchg
daa
pop
and
push
aad
xor
dec
in
aad
es
mov
mov
mov
jb
rcr
mov
fisttpl
stos
xor
sahf
dec
push
in
in
sub
fiadds
push
aad
fdivrs
adc
sbb
les
cli
and
inc
ficoms
lret
repnz
mov
and
dec
cmp
or
fiaddl
popf
ret
and
jb
push
bound
and
push
push
sbb
sahf
or
jge
sub
es
adc
xchg
sbb
cmp
and
add
stc
das
cmp
mov
testl
sahf
pop
je
jns
ret
pushf
push
sbb
out
mov
mov
pop
lret
in
enter
iret
sahf
fildll
sbb
cmp
fsub
push
or
pop
shlb
iret
jno
shrb
sub
mov
decb
pop
je
rol
mov
subl
xlat
and
mov
and
hlt
push
icebp
out
or
les
stos
adc
mov
mov
aaa
fstl
je
jns
sub
or
xchg
inc
daa
cmp
cli
daa
adcl
sbb
imul
pop
xchg
cmc
aas
addr16
sahf
mov
cmp
adc
pushf
xor
jl
jl
les
mov
jo
push
icebp
pusha
ret
mov
and
stc
cmp
test
jle
add
lret
dec
popf
cli
or
sub
mov
mov
dec
enter
inc
icebp
mov
insb
outsl
xor
or
inc
lahf
jp
push
add
fildl
mov
xchg
xor
push
jae
jae
inc
cli
iret
je
sub
xchg
mov
int
jecxz
push
repnz
lret
in
lock
sub
adc
sub
jmp
xchg
dec
sti
pop
jmp
int
xchg
mov
cs
dec
pop
rolb
test
loope
pop
ret
cmp
push
dec
push
pop
lods
jecxz
out
inc
or
inc
testl
imul
inc
and
pusha
enter
pop
sub
in
xor
jge
inc
test
xor
ljmp
adc
jae
xchg
dec
xor
out
push
into
ja
in
sbb
gs
mov
loop
mov
movsl
ljmp
mov
icebp
insb
ds
xchg
cvtdq2ps
dec
fsubs
test
cmp
xor
mov
mov
or
dec
push
shlb
add
xchg
scas
push
push
adc
ljmp
mov
insb
fidivl
mov
outsb
fchs
cmp
je
pop
or
mov
test
xchg
cwtl
mov
lea
out
xchg
push
test
mov
jnp
ret
inc
outsl
cld
mov
and
add
mov
adc
pop
out
hlt
aad
xor
push
mov
out
stos
aas
inc
in
loop
add
ja
dec
aaa
inc
cmp
xchg
and
mov
pop
cld
js
jg
pop
movsb
cmp
test
cwtl
lds
push
aad
arpl
mov
in
sbb
lds
out
test
sarb
pop
xor
cmp
inc
ret
push
mov
mov
into
and
inc
shlb
imulb
aad
cmpsl
js
outsb
jnp
and
or
outsb
mov
inc
int
stos
enter
outsb
mov
push
push
ss
push
mov
cli
inc
out
dec
or
jns
xchg
xlat
sarl
shrb
movb
and
bound
jp,pt
outsb
inc
push
jg
repnz
in
xchg
add
cmpb
js
pusha
mov
rcrl
pusha
push
sti
mov
cmp
cwtl
inc
mov
icebp
inc
ljmp
jge
add
test
inc
out
nop
cmpsl
xor
jl
es
xchg
filds
mov
aaa
mov
adc
fs
popf
mov
mov
divb
jnp
add
loopne
or
cmp
xchg
outsl
jecxz
adc
cwtl
mov
fimull
ja
aaa
clc
adc
cmpsl
mov
sarl
fiadds
loop
mov
jo
and
adcb
je
shlb
cmpsl
pop
adc
push
test
fwait
push
pop
movsl
pushf
pop
xchg
int3
gs
jno
xchg
jns
loope
mov
shl
movsb
outsb
mov
lcall
pop
xchg
pop
pop
push
jl
xor
rolb
cmp
pop
sbb
fsub
dec
mov
and
frstor
dec
mov
cwtl
push
mov
inc
xchg
or
push
subb
cwtl
out
shrl
loopne
subb
xorl
mov
push
mov
lods
rolb
xchg
mov
loop
sarb
rcl
xchg
inc
mov
out
adc
xor
inc
pop
or
test
adc
add
jg
push
inc
addr16
sbb
mov
sahf
dec
loop
fisubs
fcompl
sub
lret
idivb
fdiv
mov
stos
paddw
fisubrl
jg
xor
test
je
dec
icebp
cmpsl
add
sarb
loop
xor
push
jecxz
lahf
sub
cmp
adc
xor
std
dec
nop
adc
outsl
dec
adc
mov
mov
adc
into
daa
xchg
dec
mov
in
outsb
and
jnp
sbb
into
jne
pop
movsl
loope
mov
outsl
aam
sbbb
es
scas
dec
movsl
aaa
cmp
rorb
sub
sbb
jae
rcl
out
js
mov
push
jns
addr16
loope
popa
cs
in
int3
push
outsb
aad
sub
aaa
imul
jb
add
aas
mov
arpl
aaa
testl
mov
roll
jae
push
fdivp
mov
loopne
ljmp
mov
inc
pop
push
in
sub
pop
mov
movsb
cmp
cmp
sub
jg
mov
loop
cmpsb
sbb
add
sbb
jo
in
push
inc
sub
jnp
fbld
ficompl
lock
pop
dec
jmp
loope
cmp
sbb
in
xor
daa
iret
dec
stos
lret
out
and
sub
fistps
jl
fildll
ds
mov
mov
xchg
imul
lea
jae
sub
fdiv
or
iret
aam
mov
roll
icebp
int
mov
mov
enter
jno
sahf
ljmp
pop
xchg
mov
push
xchg
sbb
jg
mov
or
std
sbb
and
insb
push
lods
loope
mov
sbbb
inc
xchg
inc
cld
or
ljmp
xchg
ret
push
aam
push
lea
fs
mov
lcall
repnz
add
sbb
rorb
orl
in
jbe
inc
jae
xchg
sub
pop
and
xchg
movsb
cmp
shll
mov
sti
or
adc
les
sbb
lret
mov
sbb
cmp
loop
xlat
sbb
xor
subl
pop
and
jne
loop
mov
pop
outsl
inc
fimull
jp
movsl
xor
cmpsl
popa
xchg
add
adc
jbe
xor
stos
inc
jne
and
xor
es
add
and
jg
aaa
xlat
imul
fdivs
stc
push
or
jo
lcall
ficoms
fstl
sub
jae
icebp
adc
insb
scas
cs
xchg
sbb
push
jmp
outsl
lods
xor
pop
arpl
fsubl
mov
int3
xchg
mov
dec
or
pop
fadd
jb
lock
xorl
dec
movl
push
aaa
out
sbb
inc
mov
mov
stc
adc
popf
adc
inc
mov
xlat
inc
data16
repnz
mov
fmuls
jne
test
or
je
insb
xchg
jbe
and
add
mov
jg
popa
jbe
enter
inc
ret
push
notl
sbb
cli
mulb
mov
data16
mov
sbb
jns
stos
push
jge
xchg
fistl
sub
push
sub
div
jecxz
mov
push
popl
fsts
jecxz
jl
push
je
mov
cmc
mov
add
jle
ljmp
hlt
fistpll
add
ljmp
cltd
mov
sub
pop
xor
inc
jle
movsb
jp
sub
xorb
push
inc
imul
notb
scas
mov
xchg
inc
fisttpll
pop
leave
mov
jge
stos
push
push
mov
ss
loope
sbb
ret
mov
inc
mov
push
adc
call
repz
jbe
mov
sub
mov
dec
dec
xor
mov
cld
and
rclb
add
and
cmc
nop
imulb
mov
hlt
imull
movsb
das
inc
out
test
jmp
subb
mov
pop
je
dec
mov
in
sahf
push
adc
cmp
popf
shrb
inc
dec
idivl
mov
sbb
out
push
insl
test
roll
inc
lret
daa
mov
and
fwait
pop
or
dec
vpsubusb
lret
cltd
mov
test
dec
jno
inc
movsl
dec
push
pop
cmp
xor
lea
es
jmp
imul
fbstp
flds
shll
push
push
mov
pushf
xlat
maskmovq
testl
push
cmc
or
std
jg
push
dec
enter
sub
mov
adc
ret
imul
cmpsb
test
sbb
repnz
arpl
data16
pop
jne
pop
cli
insb
jne
xchg
es
sarb
test
cmpb
aaa
jmp
push
cmp
test
sub
xchg
clc
insl
sbb
and
sbb
outsl
je
sub
or
fsts
push
jmp
das
xchg
push
xlat
shlb
mov
std
sti
add
dec
ret
lds
pop
loope
fmulp
xchg
fs
pop
adc
aaa
stc
xor
bound
or
movsl
fdivl
mov
outsb
ss
repnz
sbbb
imul
jge
pop
pop
ja
stos
lock
test
cmp
xchg
subl
or
cmp
das
pop
loope
ret
ret
imul
decb
jb
xor
lret
push
sbb
mov
shr
ds
and
rcl
adc
xlat
leave
movsl
add
or
bound
hlt
jg
lcall
cmp
lret
loope
stos
push
cmp
das
popa
andl
pop
gs
mov
xor
cld
mov
push
xchg
popf
adc
xchg
dec
pop
cmp
and
jle
mov
cld
add
adc
push
lods
out
mov
xor
mov
or
insl
sbb
sbb
loopne
jecxz
enter
in
je
jl
mov
cmp
inc
ss
icebp
ret
leave
sbb
or
jmp
lret
cld
or
xor
sub
jg
lds
adc
push
pushf
andb
fimull
mov
fcomps
hlt
fwait
xor
adc
add
sbb
decl
pop
xchg
mov
int
dec
push
jbe
xchg
sbb
daa
ss
rcr
jne
outsl
xchg
jns
sbb
rcll
sub
stos
adc
call
ja
ja
mov
cmpsl
punpcklwd
adc
loope
in
shrb
aam
adc
push
in
loopne
pop
ljmp
insl
mov
lahf
or
fucomi
lds
dec
mov
push
cmp
xchg
je
pop
loope
pop
jecxz
xchg
into
leave
jns
lds
lock
stos
adc
jmp
scas
jl
pop
pop
ljmp
repz
mov
and
movsl
xchg
iret
daa
fnstsw
inc
daa
push
mov
add
fs
lret
xchg
aaa
xor
test
cli
dec
jp
dec
add
jo
int3
cmp
xchg
xchg
das
jl
xchg
pusha
mov
ret
or
imul
dec
js
and
jbe
jb
jmp
jp
scas
inc
aas
and
push
add
mov
out
xchg
jo
pop
add
add
cmp
mov
xlat
lds
sbb
aad
jns
jno
xchg
lea
adc
sub
out
ret
adc
push
xchg
mov
jo
cmc
dec
orb
ret
jl
jb
mov
xchg
push
orb
int
add
push
jmp
sarl
aad
xor
fisubl
add
dec
adc
insl
jae
mov
lret
jl
xchg
jo
out
inc
stc
fsubs
xor
sahf
out
clc
mov
sbb
mov
jmp
mov
popa
mov
sbb
adc
loopne
cs
lods
aaa
cltd
dec
push
outsb
aas
push
cwtl
in
mov
cmp
mov
push
add
cmp
jae
jnp
ficompl
pop
jmp
mov
add
jo
push
arpl
inc
loop
inc
pusha
push
mov
dec
mov
adc
mov
cli
call
xor
sub
sub
mov
addr16
xchg
lock
sub
repnz
pop
xchg
add
xlat
dec
xor
cmpsl
xor
jp
scas
rcrb
lds
jg
bound
xchg
mov
jb
inc
inc
std
sti
std
pop
mov
xor
fildll
das
adc
test
cmp
adc
adc
and
fldenv
cmp
out
adc
insb
scas
mov
push
or
xchg
popa
pop
xlat
and
out
pop
mov
das
movsb
pop
fcomps
mov
lret
sub
mov
jns
enter
push
pushf
xor
mov
mov
imul
and
add
faddl
les
iret
add
sbb
daa
sub
stos
test
subl
sbb
rcll
cltd
hlt
enter
sbb
xor
dec
sub
movd
mov
mov
sub
lock
adc
faddl
pop
test
bound
adc
inc
insl
aam
xchg
imul
add
clc
in
sub
pop
push
pop
cmp
push
clc
ret
cmp
cs
sbb
ret
and
cmp
pop
mov
sub
les
out
xchg
test
lods
aam
sub
popf
or
push
mov
test
pop
mov
subb
inc
push
rclb
lock
xor
mov
lea
mov
outsb
rorb
insb
lock
lea
adc
sub
push
push
rcll
movsb
sbb
xlat
and
and
mov
fcoms
inc
mov
mov
addl
out
sub
mov
aaa
leave
popf
mov
push
insb
or
jge
idivb
mov
fnstsw
mov
inc
leave
mov
xorb
or
mov
neg
das
and
mov
mov
repnz
cli
add
dec
push
xor
cmp
outsl
push
sub
fcmovb
jg
lcall
jmp
jae
dec
sbb
xchg
bound
push
jecxz
inc
mov
xor
repnz
and
mov
xchg
ja
cmp
jmp
jg
xor
movsb
cwtl
push
cmpsb
adc
lahf
lcall
mov
rcl
ss
push
movsl
cmp
sbb
rcrb
out
movsl
push
fisubl
dec
sbb
sub
xchg
pusha
or
adc
or
ds
in
jo,pn
js
push
popf
mov
sbb
sahf
cmp
out
dec
xor
test
dec
xor
jmp
add
xor
subb
xor
subb
cmp
inc
leave
add
pop
xlat
or
inc
rcrl
cwtl
push
packuswb
in
loope
and
ds
add
mov
lret
imul
int3
in
shll
pop
insb
cmc
pop
in
insb
pop
mov
into
pop
aam
add
mov
test
int
cmp
sub
cwtl
clc
loopne
lods
gs
jle
lds
dec
data16
scas
sub
jns
push
push
repnz
xchg
into
insb
sbb
je
ret
lods
jo
add
dec
pop
cmp
pop
ret
in
fbstp
in
jecxz
mov
sub
adc
fisttpl
ret
jg
aad
mov
lret
inc
paddw
push
icebp
xchg
add
push
mov
fs
mov
and
orl
sbb
mov
mov
ret
xlat
aad
daa
js
pop
push
iret
push
dec
cwtl
inc
cmpsb
fstl
pop
shrb
cmp
jns
xchg
push
out
mov
outsb
shrb
push
out
cmp
mov
mov
mov
push
movsb
nop
cs
into
cmp
dec
cld
xchg
lahf
cmpsl
test
pop
in
adc
inc
mov
ja
shl
out
push
adc
aad
push
cmp
sbb
mov
hlt
adc
pop
shr
in
loope
movsb
inc
pop
push
inc
shl
jecxz
mov
sbb
fwait
xchg
pop
mov
shrb
mov
push
fisttps
pop
fimull
pop
outsb
cmp
dec
jne
and
ficomps
mov
outsl
mov
roll
cmpsl
gs
dec
clc
decb
fdivrs
xchg
jmp
push
inc
dec
addb
jmp
push
rolb
cmp
shrl
push
jg
ljmp
andb
ret
xchg
push
stc
xchg
jbe
xor
testl
clc
clc
jge
leave
testl
mov
sbb
int3
sub
jo
add
jmp
add
mov
stc
jnp
insb
dec
sub
pop
sbb
out
jnp
jbe
dec
ret
xchg
pop
ss
jae
adc
rclb
jle
rclb
std
xchg
jmp
lret
jb
in
vmread
add
mov
xor
sbb
jmp
or
out
or
cmpsb
rorb
in
fisubrl
movsl
lret
xchg
pop
add
inc
mov
lahf
xchg
addr16
sub
loopne
pop
jl
in
pop
fsubs
jnp
mov
adc
mov
test
mov
push
inc
mov
mov
pop
pop
push
and
or
cmp
push
lahf
jo
scas
std
add
js
ja
mov
cmp
in
mov
or
or
sub
sub
fldl
out
loopne
subl
push
fsincos
cmp
mov
jb
dec
mov
jle
and
xlat
iret
mov
cs
lret
inc
or
pop
add
sbb
fldt
js
fsubrl
pusha
add
in
dec
jb
add
call
pop
leave
mov
sbb
ficoms
out
ja
mov
loopne
mov
push
sahf
push
or
pop
mov
mov
pop
sub
mov
push
outsb
loop
xor
dec
test
cmpsb
xchg
movsl
mov
ds
in
jle
clc
cmp
icebp
mov
pop
add
xchg
rcrl
pop
jecxz
dec
scas
jp
in
stos
sbb
lea
sti
dec
push
ret
in
pop
mov
ret
mov
xchg
sbb
cmpl
int
pop
sbb
fs
imul
jmp
fyl2xp1
pop
fcomip
push
std
test
xor
jnp
mul
push
pop
push
mov
in
push
mov
sub
arpl
repnz
xchg
jmp
scas
fldln2
sbb
outsl
push
aaa
jne
stc
add
into
inc
xor
pop
cmpl
in
movsl
inc
mov
cld
ret
stos
jp
xchg
in
andb
popf
pop
aaa
sbb
mov
push
adc
mov
inc
mov
push
pop
aas
scas
xor
inc
fnstsw
out
std
out
mov
jbe
lods
int
mov
lods
mov
sbb
in
sbb
lods
test
pop
jmp
dec
in
test
scas
clc
jecxz
inc
or
pop
mov
xor
mov
xor
xor
mov
jno
pop
out
dec
das
aam
fcomi
push
in
lea
inc
pusha
pop
push
cltd
addr16
faddl
ret
sub
xchg
lea
cld
out
cmp
cmp
cs
jg
mov
lcall
mov
clc
jmp
ds
leave
scas
lret
cmp
push
mov
ret
xor
addr16
dec
mov
add
movntps
sub
sub
mov
cs
lahf
loopne
mov
jle
pop
xor
fcmove
aam
pop
dec
xor
test
aad
adc
les
mov
sbb
mov
and
add
clc
push
insb
xchg
cmp
jne
arpl
push
lds
mov
aad
mov
pushf
movsb
push
dec
and
push
sub
jp
dec
in
adc
loop
and
lcall
adc
mov
jno
push
fadd
push
out
mov
and
aad
sbb
sbb
and
mov
cs
cmp
xor
stos
mov
add
test
out
dec
adc
add
cmpsb
pop
dec
in
aam
stc
ret
dec
xchg
push
int3
sbb
imul
fcmovnb
pop
sub
mov
push
gs
mov
test
or
push
orb
jae
lret
mov
inc
add
lret
pop
ljmp
insl
ljmp
bound
fdivr
jmp
dec
mov
jns
mov
inc
adc
std
inc
sub
into
aaa
and
dec
add
imul
repz
ds
mov
xor
cmp
aad
rclb
jo
or
loopne
xorb
mov
xor
int
dec
add
lret
adc
lods
push
mov
pusha
sbb
sub
jae
ret
lahf
xchg
das
repnz
sub
or
cmp
fsubl
push
mov
lahf
xor
movsb
loopne
xchg
pop
xor
cli
fldt
mov
lock
add
loope
das
xor
imul
mov
out
push
hlt
iret
jp
xchg
imulb
add
inc
scas
test
xchg
mov
nop
push
in
xor
incb
mov
mov
loope
push
cmp
les
rcll
and
pop
clc
scas
mov
paddw
fstpl
jns
mov
icebp
push
mov
inc
test
pop
or
sbb
dec
sub
out
pop
jecxz
and
lods
aas
xor
je
ret
xchg
es
dec
fnstcw
lret
cmp
xchg
cltd
xchg
gs
mov
insl
and
and
ja
jg
test
push
cwtl
cmc
push
sahf
test
sub
scas
mov
clc
xor
add
out
fiaddl
in
mov
mov
add
fs
mov
nop
repnz
or
sub
out
ds
cltd
loop
hlt
cwtl
jmp
mov
jne
test
adc
scas
in
es
mov
pop
pop
out
cld
cmp
into
fsts
fsubrs
mov
xchg
fcoms
test
cmp
jp
pop
and
adc
push
out
and
push
mov
into
xchg
jle
mov
add
mov
scas
push
xchg
fs
scas
and
sub
aam
fld
sub
scas
mov
addr16
sbb
push
negl
into
test
push
test
jbe
cmp
sub
and
icebp
pop
mov
inc
dec
jmp
mov
insl
sbb
movsl
cld
rorb
int
jg
loop
inc
or
pop
pop
pop
loopne
fcmovne
aaa
mov
cmpsb
mov
mov
xchg
dec
add
test
cmp
lods
out
cmp
insb
mov
pop
insl
xchg
sub
cld
out
xor
repnz
arpl
inc
lret
lods
in
push
movsl
xchg
pop
push
mov
xor
xchg
or
jmp
test
xchg
xchg
pop
xchg
dec
xchg
shlb
sbb
gs
add
jge
xor
daa
stos
stos
pop
test
fisubrl
in
stos
adc
mov
adc
xchg
scas
or
jns
pop
xlat
imul
scas
js
fnstcw
dec
dec
xor
jp
mov
push
frstor
push
mov
push
sub
insb
cmp
dec
mov
push
mov
rorb
sub
mov
ja
dec
ficompl
rcrb
or
stc
cli
push
adc
adc
dec
fsubl
fs
sbb
pop
xor
mov
pop
imul
push
shlb
jnp
pop
adc
sub
mov
inc
lahf
cltd
mov
sub
stos
xor
aas
movsb
gs
mov
sbb
aaa
xorb
inc
stos
fildl
xchg
iret
add
lret
inc
aaa
in
xor
push
fisttpll
xorb
xchg
jnp
sub
or
in
jnp
jg
dec
ja
add
sub
icebp
and
xor
sbb
adc
and
pop
imul
cmp
pusha
xchg
jl
sub
test
push
repz
fisttps
dec
cmpb
pop
push
call
xor
push
mov
ret
jae
dec
cmpsb
ret
push
xchg
repnz
nop
push
fwait
lock
pop
orl
in
and
fisubs
sub
nop
jne
pop
rcr
pop
adc
repnz
mov
push
sahf
mov
es
mov
mov
repz
push
pop
loopne
adc
mov
xlat
and
pop
mov
inc
sbb
jl
addb
test
jg
xchg
mov
add
xor
or
testb
or
cltd
push
sbb
lcall
pop
cmp
xchg
adcb
mov
flds
and
cmp
scas
sub
jno
inc
push
mov
mov
icebp
xchg
sub
divb
test
add
jbe
dec
les
and
adc
jne
xchg
add
mov
or
push
ja
xchg
enter
pusha
sbb
fsts
mov
xchg
adc
sub
push
mov
addr16
sbb
mov
or
les
sbbl
mov
cmp
adc
jl
push
push
or
cmp
sub
or
mov
mov
dec
paddq
jbe
jnp
lret
popl
hlt
and
push
ljmp
cld
adc
jno
fsts
not
flds
dec
fcoms
add
addr16
inc
or
cmp
inc
loope
sbb
sub
push
mov
push
outsl
stos
cmc
aad
gs
push
adcl
xor
mov
lcall
js
cmp
lcall
stos
orb
stos
loopne
stos
pop
jle
dec
rcr
mov
filds
fistl
jb
shll
ss
dec
mov
mov
stc
and
cmp
pop
mov
mull
jae
hlt
rcrb
into
adc
mov
pop
push
sbb
cmpsb
sbb
cmp
sbb
add
mov
lret
bound
call
rcll
xchg
fadds
cmpsl
adc
push
movsb
jb
adc
jp
mov
mov
jge
ficomps
shlb
nop
hlt
into
inc
cmp
xchg
add
out
das
mov
scas
or
mov
push
dec
pop
gs
fwait
mov
push
adc
xor
ret
sbb
add
or
push
dec
shl
xor
and
mov
push
into
iret
push
jnp
cwtl
scas
sbb
int
ror
cmpsb
sbb
iret
sbb
adc
adc
mov
mov
pop
mov
pop
xchg
xor
pop
iret
jmp
daa
fsubp
sub
mov
pop
mov
sub
lds
push
dec
push
js
sub
cmp
or
mov
and
inc
dec
and
pop
adc
sbb
into
daa
dec
sbbl
sbb
add
addb
adc
pop
or
lods
rol
lret
lcall
and
jbe
mov
ds
stos
xchg
fdivr
lods
mov
data16
daa
mov
outsb
roll
mov
cld
jmp
pusha
in
bound
jp
bound
xchg
xor
xchg
push
push
mov
add
add
subl
sub
pop
in
sub
sar
je
push
jne
mov
adc
orb
dec
dec
pop
pop
pop
mov
pop
xor
ljmp
xor
or
lds
mov
xchg
daa
jg
jle
cwtl
test
adc
in
and
sub
aaa
pop
and
hlt
mov
sub
adc
cli
jg
scas
sbb
shlb
jno
dec
jbe
into
mov
cwtl
cmp
mov
dec
popa
pop
xchg
cmpsb
insb
rolb
inc
add
and
in
test
test
std
mov
mov
cmp
cld
dec
cmp
xor
cmp
andb
mov
add
movsb
daa
test
iret
je
cmp
decl
pop
cwtl
pop
mov
and
mov
or
inc
hlt
xlat
mov
jp
pop
addr16
lahf
push
mov
pop
test
repz
pop
movsl
loope
data16
adcb
pop
fstps
cmp
pop
into
jecxz
pop
movsb
jge
xchg
sbb
pop
arpl
mov
int3
movsb
adc
adc
or
dec
lret
adc
movsl
cs
sub
ja
jbe
inc
pop
jno
mov
out
mov
push
shlb
idivb
pop
out
fimull
xchg
mov
out
fidivs
and
repz
insl
scas
or
pop
jp
leave
pushl
fistpll
inc
leave
adc
leave
xor
inc
pop
shlb
in
adcl
sbb
aaa
test
xchg
sar
push
scas
adc
outsl
inc
mov
adc
into
jnp
dec
lahf
push
inc
mov
imul
xlat
mov
sub
sahf
pop
and
sub
xchg
in
shrl
clc
aad
xor
cs
sbbb
cmc
ljmp
jmp
pop
ja
push
in
in
mov
sbb
outsl
and
lcall
mov
and
ret
jmp
jle
repz
popa
xor
aaa
aad
sbb
orl
mov
shl
pop
loope
jg
std
enter
and
pop
mov
loop
out
insb
cmp
or
repz
dec
leave
mov
push
and
movsb
popa
push
dec
jns
cs
sub
sarb
push
aas
fldenv
and
adc
sbb
fldt
jg
aam
or
pop
and
sub
add
mov
add
xor
das
push
cmp
sub
enter
cmpsl
mov
mov
sbb
push
lods
aad
add
push
test
jg
shrb
push
add
mov
cli
add
mov
inc
icebp
jmp
arpl
inc
popf
repnz
adc
movsl
sahf
movl
jecxz
test
addr16
dec
or
stos
mov
push
jg
mov
mov
mov
xlat
push
inc
xchg
jg
test
cmp
insb
dec
mov
add
nop
cli
decl
pop
or
cmp
add
jo
cli
mov
jp
pushf
cmpsb
lock
shrl
test
std
pop
lret
xchg
stos
inc
push
push
adc
bound
pop
add
mov
js
xchg
in
sbb
add
push
in
xchg
stos
bound
inc
push
fsubr
iret
xchg
xor
xor
shl
popa
les
sub
xlat
sbb
rcll
xor
sbb
sbb
sbb
cmpsl
lahf
jge
xchg
push
enter
dec
mov
jmp
mov
pop
mov
pop
aam
adcb
lret
mov
sahf
push
int
shll
mov
mov
xchg
in
sub
sarb
push
jg
arpl
xor
xchg
xchg
int3
mov
adc
mov
jno
or
scas
xorb
dec
les
sti
jg
in
addr16
sbb
inc
es
mov
mov
add
cltd
int
loop
inc
xor
cld
pop
jae
mov
sbb
ja
pop
add
lock
mov
loop
pusha
fisttpll
into
dec
adc
adc
fcmovu
push
repnz
lahf
pop
push
mov
shlb
out
in
dec
jae
enter
jge
out
into
fsubs
into
and
std
cli
push
idivb
jns
sbb
or
call
fisubrl
xchg
adc
cli
push
mulb
pop
orl
mov
popl
imul
insb
insb
aaa
pop
mov
inc
pushf
sbb
mov
mov
cmpsw
mov
sbb
lea
cld
dec
into
inc
fbstp
mov
mov
mov
lret
push
outsb
push
mov
std
inc
inc
aaa
sub
inc
iret
call
or
shll
and
mov
or
pusha
adc
cld
add
das
mov
mov
mov
aas
sbb
dec
or
aam
jle
sbb
shrb
int
pusha
cmpsl
test
sbb
dec
test
dec
cli
xor
xor
out
mov
leave
cmpsl
ja
dec
lret
gs
out
adc
dec
adc
mov
mov
pop
loopne
xor
mov
mov
inc
cltd
mov
cltd
inc
fwait
rcl
icebp
scas
jmp
in
stc
adc
enter
rcrb
inc
jnp
aam
jg
xchg
inc
pop
into
or
jp
push
addb
xor
mov
cli
inc
negl
lds
pop
or
adc
ja
push
xor
sarl
dec
inc
push
sbb
xor
dec
loopne
popf
stos
sbb
pop
ret
data16
ja
xor
das
inc
test
and
stos
in
pop
or
lret
mov
add
cmpsl
cmp
data16
lods
nop
jnp
js
ss
bound
cli
push
andb
mov
repnz
test
insb
push
add
loop
pop
testb
pop
push
push
jmp
pop
cmc
pop
jbe
jmp
sub
sub
imul
in
movsb
addr16
push
js
mov
jae
jge
mov
mov
push
sahf
sub
cmp
adc
fdivl
lods
cmpsl
rcrl
pop
cmp
sbb
call
std
and
push
iret
or
push
dec
sub
enter
lcall
mov
fwait
cltd
test
pop
stc
dec
jmp
mov
inc
mov
dec
mov
xchg
jl
nop
cmp
cmp
xchg
mov
cli
add
icebp
out
push
jnp
push
xchg
cmp
call
lret
mov
pop
add
and
ret
fptan
pop
dec
xchg
into
inc
pop
lahf
dec
test
insb
jnp
or
cmpsl
push
and
or
inc
int
xor
in
imul
sarb
push
jbe
outsl
inc
xchg
or
push
leave
inc
into
dec
jl
inc
orb
cmp
test
idivl
loop
and
dec
repz
or
leave
nop
jo
xchg
dec
cld
add
adc
mov
mov
and
lcall
leave
ja
stos
lahf
daa
sub
mov
subl
dec
es
push
adc
cltd
mov
into
ret
pop
int3
mov
jne
adc
ret
jb
mov
stos
mov
js
dec
fstl
dec
xor
dec
mov
stos
jg
jge
stos
sub
push
adc
and
ds
call
cltd
lods
movsb
mov
adc
ss
mov
xchg
push
and
push
push
test
and
test
xorl
cmp
mov
sbb
das
divb
adc
push
inc
movsb
adc
pushf
sub
mov
adc
dec
push
xor
push
jmp
rclb
or
lds
rclb
sub
mov
loope
scas
pop
push
subl
mov
rorl
mov
movsb
lds
orb
faddp
loop
out
push
cmp
and
xor
xor
pop
out
out
pop
lods
push
pushf
adcb
mov
scas
sub
jb
jbe
out
js
cmpsl
mov
cld
cltd
xchg
mov
push
divl
lock
mov
sarb
inc
mov
clc
scas
mov
in
push
sub
sbb
cs
dec
mov
xchg
push
adc
lds
cmp
add
leave
lods
sbb
imul
adc
ljmp
mov
add
fpatan
dec
cmp
inc
mov
loopne
adc
jbe
insl
mov
jne
dec
pop
sbb
xor
adc
jg
outsb
xor
outsl
in
test
inc
test
sub
mov
repnz
loopne
pop
lcall
xchg
test
xor
mov
popf
cmp
cmpsl
fwait
shl
xchg
js
lea
fsub
xlat
adc
jecxz
fmuls
jp
cmpb
mov
in
push
leave
insb
sub
mov
xchg
lods
xor
xor
xchg
in
ss
cmc
mov
sbbl
aas
lcall
or
fcmovb
jno
cs
clc
mov
jle
outsl
ret
test
or
test
aas
gs
dec
xor
insl
sbb
flds
mov
jmp
mov
push
push
pop
jo
call
mov
testb
cmp
mov
aam
pop
mov
int3
pop
std
or
inc
ljmp
test
pop
jbe
std
jge
push
dec
icebp
pop
jbe
in
cwtl
loop
rol
mov
adcl
pop
insb
cs
mov
std
hlt
fldcw
lods
xchg
mov
inc
and
push
bound
sbb
in
adc
out
mov
aad
dec
mov
mov
add
add
ficoml
cmp
xor
mov
sbb
hlt
notb
pop
push
mov
rcrl
add
pop
mov
cmp
pop
aaa
lret
push
addl
or
push
jne
popa
fsubl
cmp
repnz
inc
in
sbb
or
aaa
adc
adc
fucomp
cmp
aas
cwtl
push
adc
adc
loop
repz
cmp
fstpl
movsl
mov
cmpsb
xchg
scas
mov
test
lcall
mov
cmp
add
pusha
adc
inc
mov
pop
dec
std
cmp
xor
sbb
inc
ljmp
sbb
insb
jge
xor
mov
dec
dec
arpl
je
inc
sbb
dec
cs
stc
scas
je
lret
lret
push
in
in
mov
adc
mov
mov
jl
xor
xor
xlat
dec
push
repnz
pop
clc
cmpsl
xchg
or
iret
xchg
add
lods
dec
dec
push
push
testl
jecxz
xor
xor
push
repnz
gs
jl
ljmp
repz
mov
push
lret
repz
or
loope
pop
jle
mov
sbb
rolb
mov
jne
pusha
aaa
enter
fcomps
into
mov
sarl
push
jae
lds
cmpsb
push
fucomi
mov
adc
inc
dec
dec
pop
cmp
push
inc
filds
into
xor
pop
pop
test
cli
ja
jle
and
and
dec
push
xchg
andl
enter
pop
mov
mov
inc
add
dec
adc
lcall
pop
or
inc
out
fidivrl
outsl
fwait
push
bound
cwtl
popa
test
or
mov
cmp
in
sahf
les
sbb
pop
mov
test
iret
jecxz
sbb
movsb
popl
test
push
jp
or
pop
dec
loopne
mov
negl
inc
push
outsb
cmp
ja
fildl
std
sti
cmp
inc
out
notl
js
pop
sub
stos
and
or
mulb
movd
and
push
leave
in
adc
jb
inc
or
cmpsb
in
mulb
fdivrs
adc
daa
test
inc
in
or
push
gs
out
ret
mov
mov
xchg
ret
loope
test
mov
dec
mov
push
pop
test
insb
jg
fnstenv
xlat
shlb
xor
xor
lcall
stos
cmp
int3
aaa
dec
mov
rclb
inc
adcl
popa
and
add
sbb
insl
loopne
test
mov
cli
xchg
fs
test
or
pop
adc
sub
roll
jns
mov
dec
outsb
sub
notl
mov
popa
stos
or
and
dec
pushf
add
push
push
jbe
ja
setg
ljmp
out
mov
lea
int3
xor
push
outsl
leave
ljmp
repnz
xchg
shl
add
dec
sahf
push
inc
in
lahf
shl
push
push
xchg
fcoml
cmp
cmp
leave
std
adc
mov
sbb
ret
das
jno
sub
out
adc
ss
fwait
iret
dec
ja
pusha
sub
inc
mov
je
test
movsl
jne
mov
mov
push
shr
fiaddl
push
shl
mov
je
inc
or
sbb
sub
sbb
add
lods
inc
push
shrl
sub
ja
scas
daa
or
and
pop
dec
or
sbb
mov
in
inc
movsl
frstors
inc
cmpl
fdecstp
into
ret
add
and
xor
inc
mov
mov
push
aam
sbb
mov
leave
int3
mov
out
shll
popf
ja
fwait
mov
cmp
stos
in
mov
fstps
and
insl
sbb
loope
and
imul
test
into
mov
enter
mov
int3
add
mov
decl
mov
into
and
fiaddl
mov
ret
jmp
add
jae
inc
movsl
add
cmp
bound
cmpsl
lcall
gs
xchg
ret
jecxz
aas
repnz
addr16
sahf
jg
imul
mov
ret
repnz
icebp
ds
in
or
adc
sbb
jb
testl
mov
std
fs
jae
leave
jnp
mov
shlb
mov
mov
jge
and
iret
in
sub
mov
xor
cmp
andb
sbb
repz
adc
xor
dec
fs
fiadds
inc
add
xorl
fcoms
pusha
add
push
inc
lds
xchg
add
daa
lods
aad
mov
ret
in
in
and
xchg
sbb
jmp
in
mov
jne
mov
js
in
dec
ret
mov
lret
push
ss
and
subl
mov
ss
mov
movsl
in
imul
adc
out
std
sbb
add
daa
cmpsb
testl
fisubl
decb
std
mov
push
scas
push
pusha
mov
pusha
bnd
in
int3
jp
push
ret
sub
fsubrl
mov
repz
ret
insb
dec
lea
scas
imul
fidivrs
sbb
push
xor
test
pop
cmpl
add
idivb
inc
fcoml
lock
xlat
pop
sbb
fcmove
push
dec
ljmp
aaa
or
mov
xor
pop
push
jl
xchg
ljmp
mov
push
adc
inc
ljmp
pop
rcrb
adc
divb
add
pop
push
mov
mov
xor
loope
mov
dec
aad
xor
rol
sbb
mov
cs
stos
cs
bound
dec
loopne
addr16
sub
and
pop
es
enter
push
lods
dec
movsb
stos
mov
cmp
insb
in
jmp
in
popf
cli
repz
into
mov
add
frndint
sahf
mov
cmp
call
repnz
dec
push
xor
insl
lock
and
xchg
xor
ret
jge
dec
scas
jle
in
push
inc
and
and
cld
out
sti
stos
or
mull
fstpt
out
insl
out
and
xlat
into
or
inc
mov
fwait
jbe
pop
inc
push
mov
inc
push
inc
xchg
xor
shll
mov
fbstp
sarl
push
divb
xor
jae
gs
mov
push
jmp
into
pop
mov
fbstp
xlat
lret
bound
js
dec
sbb
inc
ja
inc
test
push
out
dec
addb
iret
imul
fwait
push
arpl
stos
lret
jns
cmpsl
xor
dec
fwait
pop
cltd
fxam
shl
dec
outsb
loope
pushf
cmp
add
pusha
pop
hlt
mov
dec
decl
mov
sbb
ds
jecxz
mov
xchg
sti
sbb
or
mov
cmp
fisttps
movsb
repnz
cltd
fdivr
outsb
int
cmpsb
mov
scas
add
addr16
xor
mov
inc
or
jnp
or
shlb
dec
xchg
cli
push
arpl
aam
push
xor
out
xchg
cmpsl
and
lock
scas
inc
adc
pop
inc
cld
push
sub
xchg
mov
lock
repz
outsb
cmp
lahf
and
jmp
mov
stc
test
lds
addb
arpl
jle
jmp
push
add
out
jg
push
jl
icebp
mov
and
loop
xchg
shr
mov
rcrl
data16
mov
sub
dec
cmp
imul
clc
icebp
sub
in
pop
sbb
push
jns
js
ss
cmp
mov
insl
shlb
xchg
push
and
push
xchg
cmp
mov
xchg
xchg
repnz
out
sub
jbe
mov
lahf
push
inc
add
push
lock
fmulp
lret
xchg
cmpsl
arpl
stos
and
out
push
mov
dec
lds
adc
dec
mov
ss
loop
lret
jno
shrl
ds
sahf
add
xchg
or
cmp
sti
inc
into
sub
mov
mov
adc
pusha
cmc
insb
mov
sub
push
lcall
xchg
sub
dec
lcall
pop
out
mov
push
in
cmpsb
icebp
pushf
xor
lods
dec
mov
je
stc
or
orl
and
xor
and
fiaddl
filds
adc
inc
add
mov
sbb
rclb
mov
stos
inc
dec
mov
call
fisubs
xchg
jge
mov
xor
orl
loope
fldt
les
push
xchg
adcl
fcmovnb
xor
xchg
sahf
sbb
lahf
mov
js
mov
test
mov
roll
mov
inc
rcll
jbe
push
adc
pushf
scas
xchg
xor
push
mov
jl
push
fsubrl
xor
lock
test
insl
add
loop
and
movb
lcall
pop
pop
popa
rorb
addr16
icebp
cmc
cmp
sbb
add
leave
aaa
aaa
stos
cli
mov
jns
adc
fcoms
xchg
mov
std
xor
in
mov
shrb
enter
sbb
jmp
mov
rcrl
out
cmp
test
mov
push
mov
es
hlt
mov
inc
inc
mov
and
out
mov
in
insl
or
xchg
cmp
jbe
pop
enter
push
out
mov
pusha
push
xlat
hlt
and
pushf
jmp
add
pop
xchg
mov
inc
lahf
pushf
pop
add
leave
arpl
fstps
fbstp
pusha
jae
test
mov
mov
push
movsb
add
push
fs
jns
inc
std
sub
cmp
popf
dec
mov
out
pop
pop
pop
movsl
jns
fadd
incb
lret
adc
insb
sbb
jl
xlat
inc
mov
fstl
mov
ficomps
mov
enter
mov
pop
pop
inc
inc
push
daa
and
xor
mov
test
rorb
xor
rcrb
ret
xchg
mov
add
push
out
mov
fadds
adc
sarb
inc
sbb
divb
mov
jl
faddl
ds
mov
fcoml
fcoml
jbe
sbb
mov
push
fdivrs
inc
fildll
pop
repnz
shl
xor
mov
cli
les
push
and
or
cltd
jp
xchg
stos
sub
mov
push
das
je
int
mov
mov
mov
mov
int3
jno
adc
mov
jge
arpl
adc
mov
adc
pop
jle
gs
sbb
pop
pop
call
fstl
mov
xlat
sbb
pushf
cbtw
sub
testb
mov
in
jl
jb
rcr
pop
xchg
imul
and
sbb
sti
cmp
bound
stos
hlt
mov
xchg
jb
adc
push
push
dec
int
pop
dec
test
ljmp
xchg
fs
adc
cld
push
lret
shlb
mov
add
test
addr16
push
lock
ret
les
add
jle
sahf
pushf
ds
outsl
dec
xrelease
jecxz
in
call
or
test
cmp
iret
daa
std
enter
jo
jae
mov
push
mov
leave
mov
shll
cmp
mov
das
mov
pop
cmc
mov
lretw
pop
xchg
mov
lsl
cmp
sub
and
jp
pushf
jno
insb
push
pop
js
mov
js
insb
push
pop
inc
shrb
fsubl
lcall
loope
xchg
test
mov
xchg
mov
in
pop
lods
xor
arpl
mov
or
jl
shr
inc
lcall
mov
pop
add
dec
dec
pop
jmp
mov
stos
sub
mov
xchg
cmp
or
inc
xor
out
add
pop
jmp
cmp
add
js
cmpsl
and
pop
jo
aad
inc
sub
std
mov
test
mov
mov
xchg
aaa
mov
aam
out
lret
cli
push
ljmp
lods
jle
mov
lahf
repz
push
adc
xlat
add
pop
push
mov
popl
cmp
test
sbb
xlat
push
loopne
mov
outsb
push
stc
jg
sbb
dec
dec
or
and
sub
sub
lea
or
in
int
loopne
sarb
nop
test
xchg
rol
repz
dec
orb
cmp
test
insb
jae
xchg
call
mov
dec
or
xchg
outsl
dec
push
inc
outsb
cmp
addr16
stos
xchg
ds
sub
cmp
push
addr16
or
pop
push
fidivs
mov
ljmp
jb
inc
xor
repz
insl
dec
fdiv
dec
iret
test
bound
push
in
pop
das
dec
mov
pop
jmp
sub
mov
movq
fmul
add
jle
lcall
xchg
test
ret
testl
movsb
into
or
pop
jmp
rcr
sub
ficompl
jno
hlt
sbb
testl
test
xchg
push
repz
imul
inc
scas
inc
mov
push
jno
mov
ss
pop
dec
cmp
rcrb
outsl
sbb
pop
inc
dec
mov
aad
rcrb
xchg
jb
push
in
negb
push
jnp
jl
jo,pn
sub
jbe
inc
lods
insl
in
push
add
cmp
popf
orb
rcr
rorb
mov
pop
fwait
repz
sub
jbe
sub
or
jle
or
js
xchg
jo
in
nop
lcall
js
fldenv
push
call
and
fldt
insl
cmp
mov
loop
enter
ljmp
into
mov
mov
icebp
stos
and
adc
test
cmpsl
mov
add
cmp
cmp
cmp
jno
jbe
imul
imul
aad
jp
aam
adc
mov
adc
jp
insb
clc
adc
pop
stos
out
scas
mov
loop
push
popf
jmp
xchg
out
popf
out
mov
sub
or
adc
dec
jno
loope
inc
lahf
mov
insb
lods
jle
jg
pop
cmp
sub
xlat
scas
inc
out
pop
cmp
xorb
insl
sbb
inc
fisttpl
mov
hlt
loopne
add
mov
sub
xchg
ret
fdivl
sbb
fidivrs
andl
ds
cmp
inc
add
imul
pop
out
addr16
mov
push
test
sub
paddusb
les
out
cli
std
jmp
data16
adc
je
push
shr
fs
cltd
pop
sub
fincstp
or
cmp
sbb
in
xor
jle
mov
inc
leave
xor
pop
pop
and
mov
sub
jmp
les
mov
fs
pop
bnd
sub
addr16
enter
arpl
imul
sub
out
add
dec
jne
les
cmp
jp
into
xchg
cmpsb
sub
mov
mov
aam
mov
shlb
aaa
and
mov
sbb
notb
mov
mov
in
repnz
movsb
jmp
xor
push
xor
xor
xchg
stc
xchg
sub
imul
shlb
adc
inc
int3
adc
adc
xorl
jge
push
xchg
xchg
jbe
and
out
loopne
cmpsl
jo
and
jg
sahf
or
mov
mov
jbe
out
cmpl
sbb
cmp
pusha
dec
outsb
inc
ds
mov
fstps
xlat
adc
cwtl
mov
xchg
cltd
mov
mov
dec
mov
adc
inc
xchg
sbb
jge
pop
jge
mov
scas
and
enter
pop
out
and
inc
lcall
sub
stc
jmp
xchg
stc
adc
ss
cmp
push
test
rorb
scas
aad
pop
ja
add
push
shrl
push
push
loopne
cwtl
imul
xor
push
mov
cli
mov
out
add
cmp
insb
push
aas
inc
inc
jae
idiv
fwait
in
shll
rclb
mov
es
cld
xlat
jecxz
push
pusha
in
in
dec
mov
xor
mov
aam
sbb
sub
rcrl
fldt
nop
sub
inc
roll
mov
shlb
cmp
and
insl
lea
dec
adc
mov
or
out
jmp
add
lods
add
mov
fadds
rorb
jecxz
push
int3
in
mov
pop
arpl
fnstcw
pop
xchg
lods
int
add
ljmp
mov
not
xchg
pop
dec
insb
pushf
movb
into
rcr
xchg
sbb
xlat
enter
and
clc
jns
mov
push
out
int
sub
sbb
mov
dec
and
fwait
mov
ret
cld
cld
dec
add
call
adc
ja
orb
outsb
push
cmp
push
fisubl
mov
and
pusha
in
fldenv
repnz
add
test
xor
aas
in
clc
cmp
lret
repnz
mov
stos
jae
push
adc
lods
notl
inc
sbb
stos
sub
les
xor
xchg
fsts
jo
adc
xor
pop
cltd
xchg
shll
xchg
insl
cld
mov
sub
in
pop
dec
les
pushf
fnstcw
fisttps
pusha
xchg
leave
cmc
enter
mov
lahf
cli
inc
shrl
xchg
pop
or
loope
mulb
aad
out
lock
shrl
aaa
fwait
and
stos
in
sub
sub
mov
adcl
fdivr
xor
leave
test
hlt
daa
mov
ds
repnz
jecxz
orb
pusha
hlt
jl
add
out
adc
inc
fstps
rcr
clc
mov
sarb
dec
int3
xchg
add
inc
cmpsb
lahf
mov
ret
mov
xchg
inc
cmp
incl
aad
es
je
sti
lods
jae
or
pop
xorb
and
ss
mov
pop
clc
cli
cli
scas
dec
xor
out
pop
xor
pop
xchg
pop
ficompl
rep
dec
adc
mov
aad
inc
dec
push
out
mov
test
mov
je
fsubl
aas
push
out
std
xor
jnp
lock
out
mov
hlt
mov
rcrb
sbb
mov
cmc
xchg
dec
fucomp
xlat
adc
mov
ljmp
mov
fwait
mov
mov
int3
mov
cmp
loopne
pushf
xchg
mov
push
sub
enter
loopne
xor
xchg
aad
sbb
inc
lahf
mull
push
int3
jb
mov
inc
loopne
pop
or
arpl
aad
push
push
lock
pcmpeqw
fcompl
repnz
shr
cmp
xor
jae
xchg
jle
stc
inc
mov
insl
scas
and
jge
nop
sbb
mov
add
inc
mov
loope
xchg
or
mov
lock
int
jb
jae
divb
adc
mov
mov
cmp
adc
repz
sbb
push
icebp
pusha
xlat
es
dec
lcall
test
arpl
loop
aas
sub
pop
xchg
add
repnz
or
sub
pop
jno
jo
sbb
in
pop
sbb
xchg
sbb
ret
push
into
ret
sbb
roll
repz
or
xchg
rcl
or
pop
iret
sarb
sti
push
mov
inc
out
mov
movsl
and
add
incb
push
iret
mov
xchg
mov
aad
inc
jno
xor
add
cmp
es
push
inc
loopne
mov
mov
inc
idivl
xor
mov
dec
fucom
push
call
js
and
js
sarb
mov
movsb
sbb
mov
jns
aam
in
push
mov
subl
dec
into
mov
sub
sbb
push
add
dec
cmpsb
pop
aas
inc
adc
xchg
pusha
sbb
inc
das
xor
jge
and
or
mov
rorb
pop
mov
inc
test
pusha
jle
cld
or
notl
inc
inc
jb
loopne
xor
out
outsb
hlt
imul
mov
adc
nop
stos
add
test
dec
sbb
pop
aam
jnp
pop
or
xor
sbb
lcall
into
cmp
dec
inc
rdtsc
loopne
test
dec
fwait
add
into
push
mov
pop
adc
push
popl
testb
aas
mov
mov
cmpsl
sub
ret
mov
sub
test
cmp
pop
sub
push
andb
out
pop
jae
xor
fists
imul
in
inc
cmp
sahf
test
out
mov
pop
lock
sti
cmp
sub
sub
dec
mov
adc
pop
jp
subb
cltd
sub
aam
test
enter
imul
mov
loop
xorb
inc
bound
vcvtpd2dqy
dec
imul
xlat
dec
xor
cmpsb
pushf
shr
cmp
outsb
insl
stc
push
inc
in
out
int3
out
movsb
leave
mov
mov
mov
lcall
shl
cmc
nop
sbb
and
pop
fs
dec
lods
cmp
xchg
dec
cwtl
out
sbb
jns
lds
mov
iret
and
xor
test
push
pop
leave
xor
inc
orl
test
jne
sahf
sub
stc
add
mov
lods
out
mov
jp
cmp
mov
and
mov
icebp
mov
punpckhwd
test
lcall
es
ficoms
sub
ja
or
aaa
cmp
push
int3
nop
fldenv
es
dec
aam
int
mov
sar
adc
icebp
cmp
pop
mov
fldt
pop
std
pop
inc
jbe
imul
ljmp
lret
cmp
loope
or
jmp
inc
push
jae
pop
xor
or
xchg
sahf
addr16
mov
movsb
call
sbb
orb
sub
imul
cli
inc
add
cmpsl
popf
ret
insb
rclb
std
mov
pop
jae
je
jns
sahf
adcb
mov
pusha
or
cltd
stos
std
rorl
mov
push
jnp
pop
lods
movsl
and
fbld
dec
or
inc
cmp
push
in
fisttps
aaa
dec
and
xchg
scas
std
and
xchg
sti
ror
mov
jns
in
adc
cmp
jle
sahf
addr16
xchg
int3
imul
add
pusha
xor
add
inc
mov
lret
sbb
and
cmp
shlb
mov
cmp
fstpt
orl
adc
cs
xchg
jl
push
jmp
cltd
jns
add
ds
push
sub
mov
push
out
fmull
popa
outsb
xor
pop
in
dec
pop
cmp
lods
or
mov
xorb
rcll
pop
adc
icebp
or
xchg
aam
mov
push
cltd
sahf
sbb
xor
loopne
sbb
popf
jb
pusha
aam
stc
data16
mov
sub
dec
and
and
int3
in
sarb
xchg
popa
divl
repz
jnp
cmp
pushw
hlt
adc
sub
scas
rcr
hlt
dec
jns
jo
movsl
pop
push
into
or
pop
cld
shll
push
push
mov
adc
jmp
xchg
inc
mov
and
dec
cmpsb
cmp
mov
or
adc
les
lret
sub
xchg
sbb
or
inc
cmp
push
movsb
xor
jle
inc
scas
loope
popa
pushl
jae
pop
mov
daa
lods
sbb
inc
sub
inc
std
mov
test
xchg
dec
push
jno
pop
aas
orb
mov
add
arpl
in
sbb
xchg
pop
and
xchg
shll
xchg
in
in
inc
cmp
addr16
repz
ss
sub
sub
or
fidivl
out
insb
push
jmp
xor
repz
pop
test
pushf
enter
bound
and
rolb
leave
or
int3
mov
push
cld
mov
jl
and
daa
mov
sub
dec
pop
std
mov
stos
xor
cmc
inc
adc
js
movsb
or
std
sub
jbe
lret
leave
xchg
aaa
or
mov
sub
jg
orl
xchg
fnstcw
test
arpl
fisubrs
xchg
pop
scas
jae
and
add
scas
mov
or
jo
aaa
lods
mov
sbb
mov
add
pop
pop
inc
xor
add
repnz
sub
jb
push
sti
mov
out
xchg
cmpsl
jp
lcall
add
pop
lret
inc
lods
push
jb
in
inc
cmp
cli
pushf
mov
sar
xchg
fidivrs
mov
daa
mov
shll
inc
and
and
aaa
push
ljmp
incb
lock
popa
stos
ja
sbb
pop
and
out
lret
fimuls
xorb
nop
mov
adc
cmp
incb
push
out
add
push
call
test
rorb
mov
rdpmc
xlat
push
jne
iret
fwait
aaa
call
js
andb
or
cmp
xchg
jmp
xchg
adc
imul
fcompl
clc
sub
dec
pushf
add
inc
cmp
loopne
sti
fbstp
push
cmc
inc
mov
movsb
test
outsl
je
dec
popf
cmp
mov
jbe
push
xchg
lods
sub
dec
mov
xchg
mov
sti
mov
test
pop
je
pop
icebp
iret
fisttps
hlt
sahf
adc
testl
inc
insb
mov
lods
fstps
andb
mov
scas
adc
push
ljmp
pushf
aad
in
fmul
test
push
sub
mov
and
popf
dec
cli
dec
push
in
cmpb
lock
into
lea
movsb
std
xchg
mov
scas
jmp
fwait
or
push
inc
popf
and
sub
dec
dec
fwait
lds
dec
sbb
push
mov
push
sub
or
jb
std
subb
mov
pop
lods
lret
jnp
fsts
fisubs
aad
or
je
mov
push
and
cwtl
jbe
idiv
pop
int
ds
out
xchg
jo
fcomps
add
push
mov
mov
int
pop
adc
dec
outsl
sbb
movups
cmp
inc
aaa
and
std
add
xchg
in
inc
aaa
mov
mov
das
push
popfw
insb
sub
add
cli
les
jnp
push
jecxz
decb
pop
leave
in
cmp
jg
add
fcmovnu
add
fwait
push
mov
add
repnz
cmp
outsb
sub
outsl
inc
aam
clc
data16
cmc
xchg
xor
fiaddl
xchg
enter
xchg
mov
pop
sbb
fisubrs
incb
sub
or
mov
fldenv
mov
jns
cmpsb
and
jae
jne
sbb
xchg
sbb
fistl
lock
dec
mov
mov
push
pushf
mov
add
pop
cs
arpl
out
or
mov
push
lcall
xchg
jl
wbinvd
stos
mov
adc
aas
and
cs
and
cmp
std
or
icebp
push
test
xor
inc
pop
outsl
jno
negb
cmc
ss
sbbb
dec
add
cmp
adcl
and
loopnew
stos
sub
xchg
insl
cld
sahf
sub
adc
shrb
loop
pop
cwtl
outsl
xlat
jns
stc
outsl
stc
push
daa
testl
dec
loopne
inc
jp
insl
mov
cmpsl
ret
popl
data16
out
mov
lret
cmc
cmp
mov
mov
in
es
xor
add
inc
or
in
cmp
test
jle
jl
nop
push
movsl
ds
inc
aas
mov
cs
adc
fs
cmp
or
dec
sbbl
jns
lcall
and
arpl
xor
flds
stos
lea
dec
lret
adc
imul
lods
jp
sbb
cmp
and
aam
in
mov
sahf
sub
mov
fildll
jnp
xor
pushf
lock
sub
mov
mov
sub
icebp
fistpl
pop
vpaddusw
loopne
jb
ss
sub
pop
out
sbbb
sahf
fidivs
inc
in
mov
jle
out
pop
add
pop
xor
mov
int
shlb
jnp
mov
popa
stos
xor
lret
inc
or
or
stos
mov
jg
das
lret
fldcw
cmpl
push
enter
adc
xor
mov
xchg
in
mov
mov
ja
cmc
ss
divb
dec
mov
mov
cmc
cwtl
pop
push
push
jp
sub
mov
bound
cmc
fs
subb
push
push
and
mov
jle
mov
lods
sbb
cmp
clc
add
fdivr
jb
ss
sti
cmpsb
int
pop
mov
faddl
test
repnz
outsb
xchg
test
mov
pushf
xlat
test
xchg
test
adc
ljmp
sub
cmc
push
and
adc
lea
fbld
push
push
aaa
add
mov
mov
jo
sbb
cmpsb
push
add
arpl
addb
outsb
xor
lahf
in
sbb
jb
jno
pushf
inc
ds
inc
je
sbb
lret
bswap
out
and
rcll
mov
lret
and
mov
pop
dec
jno
scas
les
cwtl
push
ficompl
pop
sub
ds
jne
jnp
test
stc
mov
shr
insb
addb
inc
ret
popf
push
pop
int
fidivl
outsb
int3
push
sbb
data16
shrl
rol
add
cmp
les
roll
movsw
or
or
fiadds
xchg
das
stc
cmp
in
cmc
shrb
and
adc
roll
mov
rorl
and
mov
add
in
xor
cld
adc
loopne
jbe
sbb
push
outsl
dec
nop
mov
lret
imul
mov
jb
lahf
mov
inc
test
cmp
dec
inc
sbb
push
lret
negl
lret
mov
arpl
sbb
repnz
popf
test
adc
test
lds
inc
dec
adc
add
xchg
cmc
int
xchg
enter
or
in
pusha
test
out
mov
inc
lods
outsl
imul
xor
movsb
xchg
mov
mov
mov
cmp
mov
xor
repz
jne
fwait
sub
jp
jle
daa
dec
push
jne
push
mov
cltd
sub
out
adc
outsb
enter
fisttps
push
pop
aaa
pop
mov
ds
call
cmc
push
gs
fistpll
mov
mov
mov
or
test
subl
call
add
shlb
out
dec
call
and
mov
and
sbb
dec
push
loop
add
repz
ret
imul
jnp
icebp
adc
addr16
pop
mov
adc
adcb
dec
dec
lods
adc
mov
mov
and
xchg
stos
loopne
mov
mov
jns
xor
lret
ret
add
mov
add
push
stos
xor
ret
cmpsb
dec
test
fbld
or
sbb
jmp
inc
pop
pop
in
adcl
cmp
int3
xchg
dec
dec
cmpsb
xchg
mov
cli
jns
mov
cmp
and
and
pop
xchg
sub
jmp
enter
sub
jge
mov
mov
jecxz
popa
inc
mov
and
into
push
cmp
cmc
add
sbb
shll
cmp
and
adc
mulb
add
fwait
mov
jbe
sub
fwait
roll
hlt
jecxz,pt
xchg
aam
mov
sbb
or
fbstp
stos
movsl
cli
je
cs
mov
pop
add
lods
popf
xor
push
dec
cmp
jl
jecxz
mov
insl
or
clc
sbb
xor
sub
dec
add
cmpsl
mov
sti
cmc
rcr
ss
push
decl
bound
ljmp
shlb
inc
ret
dec
lea
test
fisttps
ja
inc
dec
push
or
mov
jae
enter
aad
mov
jmp
fs
je
or
jne
sub
rol
push
scas
fwait
sbb
push
and
shlb
fisubrl
pushf
pushf
jg
jbe
xchg
jmp
leave
sbb
and
orb
stos
cmc
cmp
pop
cmpsl
loopne
rorb
adc
cmp
mov
lret
add
push
jo
fistpll
in
jp
imul
inc
loop
push
aas
js
cmpsb
test
in
pop
fwait
mov
cli
pushf
test
fcomip
inc
pop
and
push
imul
insl
call
jbe
cmpl
arpl
push
test
inc
mov
jmp
hlt
repnz
cmc
push
leave
adc
mov
adc
shld
stos
and
pop
adc
out
mov
shlb
push
jecxz
lock
in
sti
adc
rep
inc
mov
sbb
fsts
sub
ss
pusha
and
add
je
cwtl
xlat
mov
adc
add
bound
rcrl
stos
mov
or
jbe
push
xchg
cmp
sub
add
mov
jae
ds
mov
mov
hlt
jb
and
roll
nop
imul
inc
pop
in
fwait
sub
add
bnd
adc
std
push
inc
xor
mov
out
push
cs
lcall
sbb
leave
sbb
arpl
dec
negl
jbe
sub
arpl
xor
xchg
and
adcl
dec
pop
cs
aad
jnp
mov
inc
inc
cmpsl
push
loop
mov
call
lahf
ror
xor
loopne
lcall
ret
add
aam
aad
pop
cwtl
or
fdivl
icebp
in
icebp
cltd
adc
cmpsl
repnz
call
push
sbb
pop
pusha
mov
mov
jae
js
icebp
lods
pop
sbbl
sub
cmp
ljmp
jp
stos
iret
inc
mov
pop
std
jb
inc
in
call
std
lret
bound
jge
xor
dec
fistpll
dec
xor
or
mov
scas
pop
ficoms
pop
xchg
cmpb
cli
adc
cmp
rcll
ja
xchg
cmp
fistl
pop
or
add
repz
dec
test
out
outsb
addr16
dec
or
ja
fbld
pop
rorb
ss
and
dec
push
inc
cwtl
pop
arpl
dec
mov
lea
cli
data16
inc
inc
push
sti
sbb
sbb
sub
add
add
decb
sbb
stc
dec
inc
adc
xor
rclb
inc
inc
push
shl
ljmp
fisttpl
jnp
imul
pop
dec
inc
jp,pt
jns
mov
mov
insb
mov
enter
enter
pop
pop
dec
adc
dec
mov
adc
pop
push
adc
je
pop
jno
rorl
fistps
xor
call
cmp
pop
shll
leave
into
and
nop
insb
iret
xchg
hlt
pop
mov
and
int3
inc
sub
out
cld
xchg
mov
push
mov
jmp
aas
sti
das
sahf
push
notb
aaa
cmpsl
push
pop
rorl
xchg
insb
ror
fsubrs
mov
cmp
das
fucomip
je
cli
cmc
into
push
icebp
pop
jno
xchg
les
mov
sub
xchg
loopne
in
xor
ds
push
jecxz
push
adc
ss
pop
ss
add
add
inc
adc
lahf
fldcw
mov
pop
mov
xlat
add
xlat
in
xor
int
xchg
jae
repz
dec
add
and
dec
insb
cmpsl
stos
pop
sarl
jbe
inc
xchg
jae
insb
mov
and
cmp
stc
test
xor
add
icebp
pop
scas
inc
aaa
iret
jg
and
push
ljmp
jns
jg
lahf
adc
cmc
out
inc
mov
pop
jns
dec
aad
jnp
jns
dec
aaa
popa
inc
or
enter
arpl
insl
arpl
jo
adc
gs
repnz
shrl
xchg
xchg
loop
ja
into
xor
ljmp
pop
mov
dec
add
movsl
lahf
xor
adc
sbb
mov
aam
inc
jns
aad
jno
inc
out
and
outsl
sub
push
inc
sub
fnstcw
or
outsl
and
imul
mov
pushf
mov
xor
xor
aaa
xchg
and
dec
lahf
lea
inc
pop
lds
not
mov
adc
in
add
pop
iret
jge
mov
jle
lcall
popa
add
dec
and
inc
and
xchg
lret
outsl
or
push
xchg
pop
cmp
mov
or
mulb
ret
lcall
pop
dec
lret
add
mov
xchg
cmp
aaa
adc
sbb
adc
jl
xor
hlt
int3
mov
or
pop
and
mov
dec
fisubrs
fldcw
mov
mov
stc
out
cmovb
push
lret
ds
rcll
inc
xor
cltd
mov
sbb
mov
fwait
lcall
dec
pushf
push
sub
dec
cmp
rol
or
sub
pop
push
cwtl
add
dec
inc
rcl
pop
lidtl
cmp
cmc
add
mov
andb
cmp
ds
cmp
test
inc
out
in
push
cmp
jge
scas
mov
jb
call
popa
cltd
or
in
mov
push
mov
pusha
data16
cld
in
imul
xor
inc
fcmovb
inc
inc
inc
push
mov
jnp
int
jg
out
xchg
pop
out
cmpsb
sbb
pop
and
enter
sub
pop
push
mov
clc
dec
push
mov
mov
jno
add
and
inc
aad
add
sbbb
pop
test
fstpl
add
jle
fisttpll
mov
pop
lcall
pushf
and
jo
cmp
cmp
sbb
cltd
sarl
push
push
insb
mov
xchg
pusha
mov
pop
sbb
insb
mov
dec
mov
dec
jg
and
popf
outsl
mov
addr16
mov
pop
xchg
fists
cmp
xor
fnstcw
sbb
xchg
std
loopne
data16
mov
sub
pushf
aam
pusha
repz
dec
movsb
jns
sub
cmpb
mov
jecxz
mov
loop
sar
sbb
pop
and
fisttpll
dec
push
add
sarl
xchg
or
in
int3
stos
data16
shrb
cmpsl
jo
int3
enter
cmpb
sub
cmpsb
clc
sbb
jns
cld
stc
movsl
sub
bound
shll
jle
or
mov
in
cmp
adc
fsubrp
sbb
mov
insb
out
or
sbb
and
testb
pop
sub
or
sahf
jb
out
ljmp
fstps
int3
inc
movsl
mov
sbb
pop
jmp
neg
scas
fnstenv
inc
add
xor
aam
xor
add
lds
das
lds
sahf
dec
jne
or
in
call
lods
ja
push
xor
adc
mov
dec
outsl
add
add
in
popf
cmp
nop
movsl
pop
inc
sarl
fidivrl
loopne
dec
sbb
and
push
and
fbld
xor
xchg
dec
les
cmp
and
inc
sti
sbb
or
or
mov
xchg
icebp
sub
into
jg
mov
cmc
notb
scas
or
hlt
arpl
fiaddl
mov
outsb
stos
test
add
popf
lods
mov
adc
rcrb
aad
scas
push
mov
or
push
jbe
mov
mov
ficomps
sarb
outsb
lahf
jno
dec
outsb
out
lds
inc
mov
popf
lahf
xlat
jb
adc
out
imul
test
dec
call
add
push
fidivs
inc
lods
inc
mov
cltd
sub
test
leave
test
cmpsl
int3
mov
test
cmovae
dec
adc
addr16
sbb
lock
mov
inc
push
sbb
fstpt
rorl
loopne
jle
mov
or
subb
fistl
lcall
mov
mov
lods
xchg
jo
test
mov
jo
stos
sti
or
mov
shlb
push
mov
mov
dec
int3
adc
dec
mov
xor
shrb
mov
pusha
inc
ret
mov
loopne
or
int
repnz
mov
jo
lcall
divl
and
sbb
jae
cmp
mov
outsb
cld
and
addb
jl
sbb
and
out
xchg
ffree
sub
imul
popf
push
test
mov
test
or
js
aaa
xor
adc
iret
es
test
in
out
decl
aad
cmp
scas
cs
cltd
or
mov
mov
xor
mov
lea
push
jae
in
mov
and
push
sbb
fcomps
fmul
daa
fsts
fsubl
add
decl
ret
add
xor
sbbb
pop
movb
sub
mov
mov
mov
inc
popf
loop
ja
push
add
stos
lret
in
mov
or
push
inc
out
cs
fcom
xchg
loope
jmp
aaa
or
and
aaa
hlt
inc
inc
ss
or
push
js
cs
es
std
testb
repnz
sbb
movsl
xor
mov
cmp
cmc
and
jb
std
adc
lods
mov
jo
lock
jns
ror
insb
int3
xchg
sbb
icebp
mull
add
cmp
inc
call
pop
inc
pop
jmp
imul
xchg
mov
rclb
test
pusha
inc
add
push
int3
in
adc
cmp
sub
call
mov
pop
mov
ds
int
es
sbb
and
sbb
cli
xchg
arpl
and
mov
cmp
adc
leave
cmp
inc
pop
ds
mov
lock
push
xchg
fstl
js
xchg
aas
or
inc
fnstsw
fisttps
xor
aas
xlat
movsl
push
imul
mov
adc
ljmp
sub
dec
pushf
jnp
divb
mov
out
mov
add
fs
push
andb
aas
adc
mov
cmp
add
sbbl
or
xchg
bound
out
cmp
fcompl
cmc
cmpsb
lock
std
sbb
iret
mov
adc
jecxz
xor
scas
jo
scas
add
inc
stos
lock
sbb
stos
clc
stos
jmp
dec
push
in
inc
sub
movsb
xlat
sub
in
or
std
jmp
or
pop
jg
data16
pop
in
add
ds
jno
mov
pop
and
out
pop
sub
daa
test
jns
inc
mov
adc
int
mov
and
adc
jmp
and
xchg
fwait
mov
arpl
mov
loopne
mov
add
xor
inc
xchg
push
in
mov
addb
rorl
out
mov
jle
jb
push
jp
jle
insb
sbb
xchg
popl
mov
leave
cmpsb
cwtl
cwtl
jecxz
movzwl
lret
clc
or
dec
xchg
mov
outsb
int3
sub
sbb
dec
aas
push
aaa
and
icebp
in
xor
mov
aaa
jecxz
sahf
push
or
mov
jecxz
adc
push
cld
lods
xchg
xchg
cmpl
dec
punpckhbw
mov
xor
movl
addl
mov
xlat
cmp
xlat
cmp
jbe
jb
test
adc
repnz
std
mov
outsl
mov
aad
les
call
ret
cwtl
sub
pop
in
add
sti
es
ret
add
or
cmp
jg
inc
dec
cmp
pop
orb
lock
out
insl
in
xor
and
in
push
das
pusha
bnd
xor
xor
xchg
inc
bound
push
lret
out
push
and
adc
imul
cmpsl
push
pop
rcrl
cmp
aaa
fidivs
or
mov
or
pop
popf
jae
jne
or
push
and
push
sbb
push
mov
aad
sbb
loope
cmpsb
mov
popa
xlat
in
mov
test
sbb
lret
popf
add
in
fcoml
aaa
inc
inc
hlt
add
jnp
mov
xor
scas
movsb
lcall
xchg
cld
adc
cwtl
jnp
int
loope
out
pushaw
popf
mov
loop
jp
jae
sarb
jmp
dec
jbe
rcr
dec
or
add
dec
loopne
jns
in
add
gs
cmc
repz
aaa
movsl
and
mov
cmp
mov
insb
hlt
ficompl
ret
or
aad
add
out
js
mov
inc
imul
stos
repz
decl
mov
popf
pop
cmp
cmc
pushf
lods
push
imul
clc
rcrb
ja
pushf
shrl
out
ja
int3
sub
sahf
xchg
notl
pop
fcmovnbe
sub
fstp
rcl
ja
pop
mov
sub
sub
mov
mov
into
xor
popf
jae
adc
aas
push
pop
xor
enter
jb
ss
out
cmpsb
lret
add
call
fsubrs
xlat
loope
adc
inc
pushf
movsb
or
cmp
popa
add
cwtl
mov
sar
jb
insb
gs
jo
cwtl
inc
lcall
loope
gs
sbb
push
mov
aas
imul
test
cs
add
cwtl
add
mov
mov
mov
or
test
dec
inc
scas
popa
or
jae
mov
push
insw
push
stos
cmp
mov
std
jns
ja
dec
stos
ret
push
xor
sbb
into
fisttps
sti
xchg
cmp
mov
fisttpll
aaa
push
xor
in
mov
cmp
jge
fadds
inc
lods
mov
ss
and
xor
xchg
ss
aad
ljmp
dec
mov
add
sbb
sub
sbb
xor
xorl
inc
out
out
sbb
sbb
inc
dec
and
test
loope
or
movsb
mov
sub
cld
adc
pop
psubusb
cwtl
js
es
sbb
pop
sbb
mov
scas
sub
sti
mov
lods
mov
movsl
inc
shll
ds
in
sbb
adc
mov
inc
sub
inc
sub
fmuls
pushf
jp
lock
push
jne
cmovo
cmc
adc
adc
mov
and
mov
xor
or
jge
push
ret
ljmp
fbld
pop
sahf
movsb
push
scas
jno
jg
fst
lret
sub
push
js
cmc
sbb
and
push
push
insb
sbb
xor
loopne
and
mov
les
jg
xchg
jbe
pop
sti
mov
pop
mov
mov
fwait
xchg
repnz
flds
or
sbb
inc
mov
jo
xor
xor
or
sarb
lret
outsb
ljmp
out
or
xor
xlat
jae
neg
int
call
add
dec
sub
int3
mov
mov
xorl
and
mov
cltd
movsb
jle
sub
test
or
test
notb
aad
ljmp
js
add
add
ds
clc
into
test
lret
pop
imul
mov
lahf
sub
jns
lret
ja
mov
rcrl
push
push
add
pop
pop
ja
or
jae
fimull
mov
lcall
shrb
pop
test
dec
push
adc
test
push
aad
fs
inc
and
ret
xchg
lcall
fwait
sbb
aas
fsubr
mov
add
test
xchg
lret
push
mov
push
mov
jb
das
and
xor
cmpsl
jmp
test
gs
in
dec
cmp
enter
dec
jg
lahf
inc
mov
sub
vpmuludq
mov
mov
jb
cmp
int3
xor
push
sub
pop
jp
enter
js
or
je
andl
dec
push
cli
pop
jg
sub
jb
js
into
icebp
sbb
pop
mov
fnstcw
add
fnsave
dec
lods
mov
leave
stc
daa
mov
cltd
xchg
xchg
mov
in
ffreep
mov
xchg
xchg
jnp
sbb
cmp
pushf
ffreep
jle
jge
sahf
mov
gs
test
xchg
push
rcr
es
cmp
inc
dec
sbb
enter
push
push
mov
sub
inc
cmp
inc
popf
pop
inc
les
ds
sarb
aaa
outsb
test
mov
add
lea
dec
imul
lods
sub
je
cltd
and
push
push
lret
sarb
sar
dec
arpl
fdivrs
shll
adcl
ja
test
and
xchg
cmp
lret
hlt
frstor
imul
stos
hlt
addb
fsts
mov
or
hlt
insb
push
jo
sub
mov
arpl
cld
or
mov
sbb
jp
stc
fsubrs
push
je
mov
push
andl
repz
xorl
sub
in
jecxz
nop
xor
test
mov
aad
cwtl
std
and
dec
cmp
sbb
sub
addr16
add
mov
and
mov
lds
fucomp
push
sbb
add
lods
arpl
add
add
nop
pop
js
mov
adc
jg
and
das
mov
addl
popf
mov
dec
add
push
clc
shrb
sub
pop
nop
es
mov
cs
sbb
xchg
imul
sub
icebp
xchg
lds
clc
and
inc
xor
test
push
rorl
mov
stos
divb
add
loop
lahf
js
ja
sbb
dec
cmp
xchg
mov
sub
fs
dec
add
jecxz
hlt
adc
xchg
add
shll
subl
outsb
cmp
loop
ljmp
sub
les
int3
dec
sbb
dec
out
push
push
sbb
and
into
lods
cmp
xchg
xor
repz
jge
mov
jb
out
imul
or
scas
adc
popf
push
xchg
jmp
mov
rcrl
push
mulb
push
push
ds
imul
bound
std
jl
lea
sbbb
adc
xor
iret
jbe
idiv
pop
stos
jg
xchg
lahf
lea
sbb
aam
sub
inc
rorl
push
sbb
jns
sbb
xchg
pop
jmp
outsb
push
shll
loope
push
out
pop
arpl
out
push
ret
sub
aam
subl
xor
out
sbb
out
leave
sbbb
es
nop
rcrb
cltd
ret
jg
mov
in
das
out
sar
scas
xor
inc
js
out
and
mov
in
int3
in
je
jo
subb
add
xlat
rorl
push
ficoml
adc
adc
cs
pop
adc
ljmp
in
rorl
inc
xchg
add
cmpsl
mov
mov
mov
inc
leave
pop
pop
lret
rclb
sti
pusha
adc
ds
or
mov
lret
mov
cmp
hlt
mov
rcrl
add
inc
daa
mov
sub
fldl
jg
jl
loopne
push
aaa
cmp
mov
jge
pop
jge
movb
jle
rcrl
xor
jmp
shlb
lret
ret
inc
dec
jns
icebp
sahf
and
mov
sbb
mov
cld
aas
lods
lds
int3
add
insl
aaa
fcompl
xchg
iret
jo
jp
adc
inc
dec
sub
cmp
mov
out
scas
stos
cltd
push
jo
sti
aas
cmpl
loop
sbb
pop
or
orb
mov
push
mov
inc
adc
sub
cld
lahf
test
xor
adc
or
and
sahf
nop
xchg
add
fwait
sub
sarl
outsl
les
jecxz
cmpsb
mov
hlt
xor
in
pop
xor
mov
or
mov
adc
mov
idivl
pop
fsqrt
es
push
mov
rorb
test
orl
iret
jbe
push
nop
and
and
mov
clc
incb
jmp
popf
mov
push
stc
lret
dec
lcall
cmp
jge
addr16
sub
test
jp
push
test
dec
cs
je
mov
jmp
mov
push
aas
jb
jb
scas
dec
push
mov
loope
call
popa
pop
lock
test
inc
xchg
mov
ret
jno
xor
push
pop
sub
mov
dec
xchg
rorb
xor
pop
in
mov
mov
xchg
fbld
mov
jecxz
shlb
and
and
mov
psrlq
xor
add
cmp
outsb
cltd
lret
fildl
mov
and
jecxz
jns
jbe
cmc
fmull
jecxz
jbe
jge
adc
mov
mov
nop
ljmp
lahf
xor
dec
mov
popf
mov
xor
scas
cli
cmp
dec
fdivl
orl
clc
nop
aam
pop
adc
inc
outsb
jge
mov
subb
add
cmp
jmp
fimull
out
and
mov
ret
std
dec
stos
rcrl
mov
das
sbb
jo
sbb
mov
pop
shl
fisubrl
sub
movsl
xchg
sbb
mov
xor
roll
and
sub
push
inc
dec
arpl
jne
pop
orb
add
and
dec
jp
gs
adc
push
cmp
pop
xor
sbbb
push
notl
inc
js
inc
fildll
push
ret
mov
jo
pop
sub
imul
aas
cs
push
out
pusha
stc
repnz
and
xchg
xor
sbbb
je
sbb
movsl
in
outsl
data16
push
bsf
cmc
mov
dec
jl
cmp
out
sbb
fisubl
sbb
sbb
mov
out
in
xor
add
or
rcll
cmc
cmp
psrlq
xor
imul
sbb
sar
lods
mov
push
sub
mov
inc
dec
popa
xor
mov
shl
inc
sbb
scas
mov
loopne
mov
inc
je
inc
imul
add
mov
inc
cs
add
mov
imul
mov
or
insl
inc
in
inc
add
inc
das
movsb
sub
inc
pop
inc
inc
paddw
stos
into
push
lods
daa
movsb
mov
gs
mov
bound
jo
add
pusha
dec
js
jg
push
imul
ret
add
push
cmp
sub
or
add
fcomps
sbb
mov
out
mov
ds
inc
push
jne
pop
shll
call
sbb
out
inc
pop
enter
fmull
lds
mov
mov
or
ja
sbb
sbb
cmp
adc
outsl
jmp
mov
adc
and
lock
xor
in
mov
clc
cmc
scas
or
jle
je
mov
lods
pop
movsb
pop
jo
sahf
std
jne
sub
jle
mov
cli
mov
mov
jmp
jge
push
inc
mov
pop
pop
jno
ret
into
pop
hlt
bound
xor
insl
add
in
inc
adc
je
test
in
rol
add
mov
cmp
push
mov
cmpsb
xchg
pusha
mov
shlb
push
aad
adc
lea
push
jo
ret
insl
inc
movsb
pop
int3
cli
cmc
mov
test
mov
and
pop
sarb
adc
sub
sub
aad
and
insl
xor
cmc
inc
pushf
cmp
aam
add
or
dec
pop
sbb
push
movb
lods
xor
cmp
loope
add
cmpsb
stos
jmp
stc
insb
daa
rolb
mov
shll
add
sbb
mov
stc
xor
rolb
jno
dec
gs
in
stos
add
or
mov
in
jae
xor
ja
pop
mov
call
sub
sbbb
push
and
ja
mov
xchg
mov
fsubl
push
fidivl
lds
mov
adc
push
xlat
cwtl
add
insl
push
xor
mov
adc
lahf
dec
stos
adc
lret
cmp
push
divl
cltd
dec
dec
fimull
cmp
pop
icebp
int
or
pop
repz
pop
mov
popl
push
popf
add
xor
mov
xchg
mov
push
adc
pop
movb
push
mov
outsb
out
jb
sarl
push
cltd
and
divb
fdivr
sbb
cltd
nop
pusha
push
hlt
pop
outsl
sbb
xor
sbb
inc
ds
sub
lods
xor
xchg
jmp
push
stos
sub
jp
out
xchg
lods
add
or
jo
mov
daa
lock
or
push
inc
adc
mov
es
neg
popa
cmpb
loope
jb
mov
cld
mov
cmp
mov
lods
std
mov
aad
das
cmp
mov
push
mov
hlt
mov
jp
adc
xor
inc
and
pop
push
iret
adc
sbb
sahf
out
jecxz
mov
xchg
mov
pop
addr16
shl
jecxz
lea
insb
cmp
mov
loopne
xchg
int3
xchg
dec
mov
shrb
out
and
cmp
leave
jl
pop
ljmp
pop
aaa
xor
lods
mov
xchg
cmpl
mov
test
push
call
aaa
mov
popf
pop
divb
addl
loop
mov
hlt
xor
mov
and
push
movsb
adc
rorb
loopne
cwtl
nop
pop
int
sbb
jb
inc
jae
out
loop
loopne
outsl
je
aaa
and
cmpsb
mov
test
or
xchg
pop
mov
std
mov
stos
inc
scas
ja
cli
sub
lret
xor
sbb
jg
jp
xchg
and
int
push
lahf
and
sbb
jb
movntps
decl
add
in
jo
and
lret
in
or
jae
dec
mov
insb
into
xor
repz
mov
add
adc
inc
daa
in
or
jbe
rcrb
int
ljmp
pop
out
and
addl
fildll
xchg
dec
add
and
adc
mov
dec
dec
lret
xlat
pop
mov
in
js
or
aaa
mov
out
mov
sbb
fstps
mov
aam
dec
out
inc
xor
lret
xchg
mov
or
fxch
inc
ret
push
mov
xchg
lret
mov
int
pop
inc
jmp
int
sbb
dec
xchg
in
or
pop
cmp
xor
mov
scas
sub
sub
ds
or
fiadds
aam
mov
sarb
mov
outsl
sbbl
leave
lcall
adc
sub
clc
jp
je
mov
lds
or
sbb
sub
sub
dec
stos
js
sbb
lods
push
into
out
sub
cltd
mov
xor
inc
dec
stos
dec
imul
mov
nop
xchg
stc
sahf
mov
pop
cmpb
dec
jmp
or
shr
push
incb
enter
adc
push
or
pushf
fisttps
inc
sub
or
inc
aas
pop
or
loope
xchg
fwait
xor
lcall
fs
push
ret
aam
pusha
outsl
insb
aaa
cli
aam
mov
mov
push
sub
sti
test
movsl
mov
sbb
popa
fwait
test
lea
and
pushf
inc
sti
mov
pop
cmp
loopne
adc
in
nop
pop
sbb
mov
jb
cld
and
xor
xor
es
push
xchg
ret
fwait
push
mov
sbb
in
sub
adc
addr16
test
jge
in
fsubrs
cmp
fnsave
jmp
xchg
jbe
sbb
sbb
mov
add
pushf
pusha
pop
cs
mov
rorb
test
mov
fnstenv
fcompl
dec
lods
dec
shrl
jnp
popa
mov
inc
xchg
ljmp
and
push
or
jl
and
pusha
out
dec
ja
add
mov
add
pop
and
es
xlat
inc
jge
or
imul
je
and
icebp
test
xchg
orl
dec
mov
and
ret
mov
xchg
ret
mov
mov
jmp
add
inc
test
inc
inc
stos
popf
dec
push
mov
push
repnz
addr16
adc
mov
pop
lock
or
cs
adc
aad
and
mov
and
mov
dec
mov
sub
cs
aaa
mov
addr16
and
testb
jl
or
cwtl
enter
xchg
divl
fimull
enter
sub
jp
aam
insb
iret
push
dec
mov
xchg
jno
xlat
mov
sbb
sbb
push
outsl
push
sbb
push
loop
or
gs
push
mov
daa
in
xor
cmpsb
and
insl
dec
push
out
insl
daa
mov
jb
je
xor
mov
aas
bnd
mov
push
les
mov
enter
fldt
nop
push
push
cmp
push
xlat
cmpsb
push
repnz
jle
fistpll
sahf
movsb
and
test
lret
xor
test
inc
orb
pop
cmp
ljmp
aaa
xchg
cwtl
sbb
cmp
pop
pop
test
int
insb
mov
mov
sbb
addr16
xchg
int
mov
lcall
bndldx
rcll
pop
sub
ljmp
add
mov
fs
xchg
mov
aas
xchg
cmp
add
aam
pusha
xchg
pop
or
bound
fmuls
and
incl
inc
enter
and
add
and
and
push
jmp
xchg
xchg
into
or
imul
push
fisubs
cmp
dec
cmp
or
xlat
adc
mov
lock
pop
xchg
mov
lcall
pop
pop
push
ror
push
js
out
sub
add
sti
jne
ljmp
inc
stc
sub
test
jmp
sbb
data16
jmp
stc
outsl
mov
push
repnz
jnp
push
pop
popf
inc
jmp
stc
shll
hlt
dec
and
push
test
fmulp
adc
cmpsl
cmp
jno
es
mov
popa
insb
rcll
adc
dec
pop
cld
mov
int3
push
and
xor
jns
hlt
cmp
dec
movsl
in
movsb
mov
sti
mov
sub
add
pushf
sub
jmp
push
pop
push
mov
fs
shrl
and
sbb
dec
mov
popa
push
cmpsb
mov
data16
add
jnp
push
dec
mov
mov
cli
and
sysenter
mov
repz
or
insb
sub
cmp
in
pop
dec
sbb
repz
dec
pop
pop
push
push
xor
stos
dec
mov
loope
lods
lods
push
jmp
add
dec
fcomps
fimull
dec
jle
hlt
xchg
ss
mov
movl
pop
lods
pushf
add
mov
mov
or
jmp
bound
mov
out
stc
jecxz
aas
xor
test
xchg
fbstp
out
cmp
sbb
adc
ret
outsb
jo
push
pop
xchg
adc
xchg
das
dec
push
aaa
add
or
mov
rcl
test
push
xor
xchg
xchg
pop
jno
lock
jecxz
inc
xor
pop
ja
xchg
out
in
in
lfs
sbb
out
and
mov
adc
and
mov
xchg
loop
xchg
mov
daa
dec
xor
sti
mov
outsl
or
mov
jne,pt
iret
adc
negb
mov
inc
sahf
scas
clc
xor
aaa
ja
and
out
das
and
icebp
lea
cli
xor
popf
arpl
pop
addr16
adc
sbb
fistps
mov
lods
iret
negb
mov
sbb
jno
std
jns
sahf
jo
les
fdivs
jle
es
mov
aaa
pop
adc
push
aad
and
push
pop
push
xor
shlb
mov
lret
lods
movsl
test
or
cmp
adc
inc
ja
insl
leave
pop
jle
mov
dec
inc
pop
int3
imul
sbb
in
inc
stc
das
xor
xor
loopne
dec
dec
bound
ret
add
pop
xchg
in
xchg
rol
test
xor
jno
mov
pop
push
mov
fs
mov
sub
mov
fdivp
inc
mov
das
mov
xor
xchg
inc
mov
sbb
and
or
jge
popa
inc
repnz
add
shl
shrl
cmp
mov
int3
mov
or
subb
and
mov
scas
adc
movsb
mov
xorb
and
add
mov
mov
adc
cmp
sbb
add
mov
dec
mul
aas
adc
aam
idivb
pop
mov
sbb
xor
xchg
inc
dec
movsb
mov
shr
sbb
jbe
mov
gs
mov
shlb
fabs
mov
dec
roll
jo
fwait
loope
pop
push
pop
in
jne
cmp
push
jmp
cmc
add
mov
stos
mov
or
out
addr16
sbb
jp
inc
imul
cmp
ds
mov
push
aaa
or
and
push
fstpl
fnstsw
cmp
jns
add
and
insb
mov
sub
mov
inc
pop
test
out
pop
sbb
ret
int3
out
xor
andb
jae
jnp
icebp
mov
jnp
fst
test
fs
mov
addr16
or
mov
inc
dec
or
push
push
scas
sub
sbbl
pop
sub
push
sbb
test
clc
lret
in
bsf
popf
cmp
cld
test
cltd
inc
mov
out
repz
divl
sub
mov
push
push
cmp
shr
jne
adc
call
cmp
aam
movsl
test
push
sbb
insb
or
and
aad
xchg
mov
subb
xchg
test
aas
fdiv
dec
faddl
push
test
cli
cmp
lcall
pop
mov
sub
mov
add
cmp
sbb
inc
jp
scas
cmpsb
scas
jbe
loopne
iret
ds
shr
fsubrl
inc
jle
dec
in
je
xor
int
inc
xor
cwtl
jno
and
adc
shr
divl
pop
push
shlb
cltd
inc
jmp
pop
mov
sahf
xchg
rclb
or
test
and
xchg
sub
sub
fmul
std
bound
js
jbe
int3
lods
insb
mov
pop
cmc
add
fisttps
scas
in
imul
adc
or
nop
aas
or
fdivr
pop
ret
inc
sahf
adc
mov
leave
aad
dec
loopne
clc
push
xor
push
sub
in
xorb
push
ljmp
or
addr16
cmp
loope
fdivs
lea
xchg
jns
js
sbb
enter
ret
jg
loopne
fdivl
mov
rorl
aam
es
cli
mov
test
das
xchg
aas
mov
push
adcl
mov
arpl
stos
xchg
pop
popa
test
daa
in
mov
rorb
push
and
sub
ss
int3
push
lods
jb
loopne
shrl
in
add
jmp
neg
push
jmp
pop
inc
xor
push
popa
dec
and
cmc
xor
je
sub
cmpsb
mov
adc
fsubrl
jl
add
lahf
pushf
insb
fnstenv
adc
dec
mov
push
movsb
pusha
mov
or
lds
mov
lcall
add
xor
mov
arpl
mov
jl
mov
lcall
pop
push
addr16
push
mov
and
push
pop
ss
xchg
sub
dec
pop
ss
cmp
insb
push
xlat
iret
pop
outsb
dec
cs
scas
or
dec
jne
iret
mov
lock
xchg
sbb
sbb
js
pop
les
sti
inc
mov
inc
les
insl
cmp
pop
cltd
daa
hlt
push
cld
scas
in
mov
xlat
add
jmp
cmp
rcl
aaa
mov
jno
xlat
inc
adc
repnz
or
rolb
popf
and
imul
adc
lock
add
out
mov
out
xchg
es
mov
pusha
out
push
and
sbb
arpl
jg
cmpsl
stc
jnp
out
mov
xchg
mov
repz
sub
repnz
sub
cltd
je
es
sub
lret
mov
cmp
pop
adc
rol
arpl
pop
mov
sub
adc
add
xlat
jg
push
es
mov
arpl
pop
loope
push
and
out
pop
cmp
leave
push
mov
cwtl
dec
mov
ds
cmpsl
pop
lea
std
cmp
add
sbb
lock
lea
pop
sti
pop
pushf
or
cwtl
xchg
mov
pop
addb
outsl
and
fstl
cmp
ficomps
cwtl
mov
test
or
and
insb
aaa
jae
lock
out
push
jns
lock
adc
movsb
xor
pop
xchg
pushw
mov
bound
dec
xchg
enter
and
repz
call
insl
inc
push
fcomps
loopne
push
mov
ret
dec
std
dec
push
aam
push
ficomps
pop
imul
imul
inc
sub
xchg
ljmp
xchg
mov
sti
cmp
ljmp
mov
add
sti
rcll
mov
mov
xchg
rorb
xchg
das
jns
dec
lea
rcll
mov
or
push
movsl
fcompl
mov
mov
pop
jge
ljmp
scas
xchg
mov
cmp
aad
push
ss
lret
loope
jg
mov
pusha
dec
cmpsl
ja
jae
or
or
mov
mov
aaa
rcll
inc
add
int
smsw
mov
mov
xlat
adc
out
push
dec
loope
cltd
sub
mov
sbb
push
push
or
movd
aad
push
adc
cmp
sub
es
pop
gs
rcr
mov
cmp
xor
sub
fbld
mov
sahf
xor
dec
repz
sbb
add
iret
loop
push
adc
mov
sbb
mov
pop
repz
cmp
or
xchg
jecxz
clc
rolb
les
mov
pop
inc
sub
shll
outsl
push
mov
and
push
lret
fs
outsl
add
mov
mov
mov
cmp
aas
std
mov
jmp
push
pop
mov
sub
call
pop
lret
xchg
sbb
mov
into
and
je
shr
dec
push
or
adc
imul
sub
ljmp
cli
lret
jb
shll
or
in
in
pop
push
lods
cmp
aas
mov
cmpsl
iret
pop
or
sbb
and
movsl
xlat
or
popf
mov
call
iret
scas
cs
cmpsl
and
outsl
lret
outsb
jle
imul
dec
inc
mov
lahf
test
push
or
pop
loop
movsl
stc
xor
popf
cmp
jnp
adc
dec
xor
jne
inc
pop
in
inc
stc
sbb
mov
mov
cmc
pop
stos
lds
or
insb
push
fadds
dec
mov
test
xorb
les
mov
adc
cmp
xor
xor
ja
iret
xchg
fcmovne
inc
sub
cltd
les
popf
out
mov
adcl
xchg
mov
lods
jle
rcrb
imul
sarb
or
xor
addr16
mov
mov
and
pop
popa
mov
dec
push
adc
mov
out
repnz
cld
ja
mov
ficompl
pop
nop
aaa
or
xchg
icebp
ljmp
dec
fwait
cmp
clc
push
cmpsb
out
pop
lret
dec
pop
jnp
mov
xchg
sbb
inc
shlb
xor
jno
pusha
cmp
jmp
and
ret
divb
mov
sub
repz
add
cwtl
push
shl
push
pop
in
gs
adc
out
mov
sbb
rorl
icebp
in
test
test
lahf
add
imul
mov
or
pop
das
pusha
mov
cwtl
mov
loope
dec
sbb
mov
jmp
daa
xor
cmpsb
pop
add
push
das
cltd
movsl
mov
das
xor
or
fmull
pop
cmp
xor
and
push
adc
mov
sarl
inc
sbb
lahf
mov
lret
mov
sub
sbb
ds
fucomi
lds
enter
dec
in
lret
out
lods
inc
ja
push
hlt
ds
xor
arpl
test
jne
sub
jmp
adc
xor
jl
fdivrs
fstl
push
sub
bound
insl
mov
mov
dec
inc
leave
loopne
push
fcompl
mov
test
sub
cmp
std
mov
jle
push
repnz
clc
pushf
cwtl
loopne
andb
mov
dec
dec
jle
push
add
xchg
ret
outsb
aas
aam
or
lret
daa
mov
ljmp
pop
cli
pop
add
stos
mov
push
cmpsl
scas
or
hlt
test
and
outsb
mov
inc
ja
mov
loop
and
inc
mov
sub
jo
sbb
inc
cmp
cmpsb
cmc
int3
sbb
insl
xchg
mov
pop
sbb
cmp
int3
add
imul
add
and
xor
out
push
xchg
aaa
scas
subb
dec
lods
fcmove
out
insb
mov
fsubs
bound
and
repnz
mov
and
call
jmp
rcl
add
das
fs
and
je
mov
mov
fstps
pop
mov
sub
ljmp
xchg
and
sub
ror
xor
mov
std
xchg
ljmp
mov
into
adc
clc
xor
adc
mov
mov
fsubrp
pop
pop
psubusw
lret
mov
xor
aaa
popa
xchg
push
inc
jo
imul
xchg
call
scas
push
push
sub
shll
icebp
push
jb
cmp
mov
pop
mov
add
adc
out
dec
pop
mov
dec
dec
add
add
vmovlps
jno
roll
aad
fucom
arpl
lcall
add
es
adc
pop
ljmp
mov
push
fcoml
arpl
out
fldt
cmpl
xchg
nop
cld
xor
lea
fmuls
into
and
out
jmp
pop
lret
add
mov
add
inc
xchg
fisttpll
add
lcall
mov
mov
jl
outsb
or
mov
addl
mov
in
je
cld
adc
in
cmp
test
mov
cmp
mov
jp
or
cmpsl
gs
hlt
loopne
fs
or
bound
outsl
xchg
outsb
sbb
cmp
cmp
nop
std
inc
push
lock
and
imul
pop
lods
mov
cmp
push
sub
xor
sub
pop
cmp
push
idivb
add
out
pusha
ret
dec
aad
aaa
and
sbb
into
or
fcompl
adc
int
jl
add
popf
cmpb
sub
cmpl
addl
add
lret
pop
sub
sbb
mov
in
jg
cmp
sbb
mov
aam
mov
and
xchg
pop
mov
mov
pushf
insl
add
mov
loope
jbe
push
std
or
add
jp
sahf
popa
adcl
lret
xor
xchg
cmp
in
xlat
rclb
adc
mov
in
cmc
cmpsl
std
sbb
popa
jnp
xor
or
in
mulb
jbe
lock
std
cwtl
clc
rcl
adc
das
shlb
lret
sub
jo
inc
lods
mov
aad
or
cld
pop
xor
dec
in
pop
sub
mov
push
cli
insl
pop
mov
mov
jb
mov
out
loop
pusha
push
dec
imul
mov
add
cmp
inc
insl
jb
int
push
aad
outsl
call
sbb
and
cmp
jno
push
sbb
mov
push
or
cld
add
mov
and
push
mov
xchg
push
leave
mov
pop
xchg
cmp
and
mov
hlt
lcall
dec
ret
mov
mov
std
mov
sbb
push
pusha
insl
sti
shlb
popa
sbb
outsb
sbb
dec
dec
scas
push
fsubrs
or
or
mov
enter
dec
push
sbbl
ljmp
aas
pushf
adc
jno
add
xor
pop
outsb
cmp
loop
out
stc
sbb
adc
jle
fwait
cmp
lret
mov
test
mov
stc
xchg
popa
outsl
stos
stos
repz
filds
fisubs
mov
dec
mov
testl
jnp
jbe
std
into
ret
adc
push
sbb
andl
sub
imul
cmp
dec
mov
adc
divl
and
push
push
ja
push
sbb
xchg
addr16
lds
lahf
testl
lahf
out
repz
mov
popa
mov
push
test
adcb
rol
sub
fmuls
outsl
stos
cmc
mov
lret
ds
add
inc
inc
mov
jle
sub
fs
fidivrl
cli
test
aaa
cmc
xchg
xor
enter
mov
stc
les
scas
arpl
fidivrs
adc
sahf
inc
jle
fstps
cli
sti
sub
out
mov
adc
or
mov
jg
pop
addr16
adc
rclb
fiadds
cmc
adc
aad
add
pop
clc
sub
arpl
jbe
arpl
push
pop
rorb
adc
ficomps
pusha
popa
push
or
insl
adc
and
mov
cmp
fcompl
sub
and
popf
mov
dec
fstpl
dec
icebp
jl
out
fcoml
lcall
lods
leave
stos
push
add
cmp
jmp
data16
rcll
pop
fsubr
mov
clc
or
adc
roll
loope
adc
pop
stos
adc
dec
push
cwtl
dec
in
addr16
out
shr
or
lock
xor
movsl
sub
mov
aaa
or
inc
push
ret
pusha
inc
pop
pop
in
push
lea
jecxz
scas
pop
sahf
pusha
scas
mov
into
or
lods
pop
imul
push
ljmp
sbbl
mov
inc
inc
in
pop
sbb
ss
mov
test
orl
adc
cld
test
push
dec
call
sti
and
bound
adc
dec
add
in
jnp
sbbl
lret
mov
mov
adc
vaddpd
lods
inc
pop
in
push
push
mov
and
ja
add
or
out
insl
fwait
push
arpl
sub
aam
call
adc
dec
push
loopne
fs
or
loope
mov
cmp
dec
daa
fisttpll
push
int3
pop
loop
and
arpl
inc
outsl
std
push
mov
push
out
clc
mov
cltd
call
add
adc
cmpsl
hlt
dec
popa
pcmpeqb
push
mov
test
sti
ficompl
sub
test
in
push
aad
xor
push
insb
ljmpw
inc
jle
jns
mov
jbe
inc
xchg
aad
or
lahf
or
mov
sbb
mov
std
loopne
add
cld
mov
aaa
mov
cmpsl
pop
xchg
dec
mov
dec
or
out
loope
pushl
popf
movsl
fstpt
shrb
pusha
inc
xchg
pop
cmp
jns
jp
cmp
xor
add
fmull
pusha
mov
bound
mov
sbb
jmp
xor
sub
jbe
pushf
or
mov
les
out
stos
repnz
outsb
sub
push
adc
adc
dec
in
add
adc
fcoms
fcoml
in
cmp
ret
push
mov
adc
sbb
adc
jmp
lea
pop
or
mov
pop
fsubrs
inc
shll
fstp
xlat
pop
in
insb
mov
xchg
testl
shl
jmp
pop
insl
lock
incl
dec
mov
dec
mov
dec
ss
stc
mov
pop
outsb
dec
mov
clc
push
mov
jmp
mov
sbb
cmp
jo
lahf
mov
mov
adcb
xchg
cmp
xor
push
mov
icebp
clc
pop
xor
adc
fdivr
sbb
out
jle
stc
or
xchg
sbb
xchg
and
push
test
mov
rcrl
adc
pop
std
add
data16
orb
lds
fwait
pop
and
movsl
inc
add
cs
push
add
add
xor
ds
mov
loopne
pusha
mov
inc
lods
add
outsb
mov
out
jg
pop
imul
xor
in
fdivrl
shrl
xor
pop
xchg
inc
dec
jb
dec
and
mov
sub
imul
hlt
jbe
push
push
dec
adc
fisubrl
and
mov
jb
jp
aaa
or
int
push
and
aas
xchg
push
pop
inc
jo
push
lret
out
mov
push
cmp
mov
or
ljmp
hlt
mov
mov
cmp
inc
dec
addr16
cmp
mov
jno
repz
sbb
sbb
fisubrl
mov
ljmp
pop
cmp
lea
sbb
clc
push
cmpsb
data16
mov
test
inc
push
insb
cli
mov
das
jne
mov
push
push
shll
out
out
cmp
test
popa
fsubl
pop
lret
cmc
jo
movsl
mov
popa
add
mov
pop
out
rcrb
push
sbb
rorb
movzwl
mov
and
adc
mov
cli
clc
jl
xor
ret
in
mov
lea
fildl
shlw
test
and
test
sub
ss
or
lahf
stc
push
cltd
loope
push
xchg
and
mov
nop
mov
lea
dec
adc
pop
addl
scas
jle
ret
dec
push
jb
jg
mov
fmulp
sti
popa
andb
dec
jmp
in
xchg
mov
add
pop
xchg
fnstenv
pusha
cli
pop
loop
loopne
outsl
cmp
dec
or
aad
flds
cwtl
test
dec
mov
adcb
in
bound
xor
testl
mov
add
insb
mov
daa
fisubrs
dec
sub
adc
insl
pop
enter
lahf
inc
jno
mov
movsl
mov
fmul
popf
mov
pop
or
mov
je
stc
sbb
pop
sub
jg
pop
fbstp
cmp
ficoml
pop
repnz
jbe
cs
cmp
iret
pusha
sub
iret
fs
xchg
pop
fldcw
jno
lea
mov
fwait
pop
dec
les
sub
jecxz
loope
mov
add
xor
or
mov
in
iret
cmp
push
xor
xchg
and
sbb
orl
subb
imul
sub
pop
fbstp
cmp
push
dec
jle
mov
icebp
aam
ljmp
sbb
lret
or
fwait
stos
adc
mov
push
mov
push
dec
dec
sbb
stos
jbe
push
bound
mov
notl
pop
fsubrs
or
push
inc
mov
or
mov
mov
es
popa
fimuls
fxch
ret
push
stos
loop
bound
mov
and
jle
jp
stc
cld
cmp
mov
xor
cmp
fistl
insb
loope
pop
push
shrl
adc
mov
mov
dec
ds
dec
mov
xchg
adcl
sahf
nop
xor
loop
outsb
sbb
mov
cld
aad
dec
outsl
bound
adc
inc
rep
das
fisubrl
mov
mov
and
movsl
or
mov
cmp
adcb
sbb
xchg
mov
je
test
imul
xchg
mov
adc
sub
rcrb
sahf
pop
in
gs
sbb
ss
mov
or
js
lret
out
inc
mov
dec
or
fdiv
adc
pusha
aam
xchg
mov
gs
add
test
lods
test
cmp
mov
into
mov
int3
stos
std
stos
mov
lock
mov
sbb
jbe
ret
xor
or
fdivrs
adc
mov
in
xacquire
mov
xor
fstl
inc
adc
cmpsb
dec
dec
fs
add
xchg
fistpl
rorl
imul
and
aad
outsl
fisubs
adcb
fsts
dec
jne
fwait
adc
xchg
nop
inc
imul
adc
loop
icebp
lods
add
xlat
mov
and
jp
clc
push
sbb
mov
jle
mov
stc
mov
movsb
mov
rcll
jno
push
aad
out
add
stc
inc
jno
nop
les
hlt
pop
xchg
lret
dec
cmp
mov
xor
add
test
aad
shrb
jb
mov
roll
cwtl
outsb
mov
fildll
popf
fs
xor
dec
mov
pushf
mov
lds
addl
test
fwait
cmpl
adc
fnsave
mov
loope
mov
or
mov
idivl
pop
cltd
das
popf
cmc
xor
shlb
sub
ss
mov
fcom
or
lret
sub
xor
ds
imul
adc
fdivr
ret
mov
mov
inc
mov
mov
testl
jg
and
das
fwait
adc
push
sub
pop
mov
loop
sbb
shlb
cmpsl
mov
in
rorb
inc
in
enter
out
fadds
ficompl
inc
add
aas
or
adc
mov
imul
xchg
shlb
mov
push
rcl
pop
aam
dec
mov
mov
pop
adc
mov
and
pusha
imul
jle
in
adc
sub
bound
orl
dec
daa
mov
and
cmp
xorl
roll
jo
cmc
loop
sbb
stos
out
insl
scas
lahf
daa
or
add
shrb
nop
cmp
or
xor
sub
shrb
push
jge
jns
popf
xchg
fsts
scas
hlt
dec
lret
mov
cmp
lret
sub
cmp
jle
lock
jge
ljmp
mov
mov
test
sbb
cmp
mov
inc
cs
jns
pop
xchg
lahf
sti
inc
mov
out
out
mov
in
dec
test
xor
dec
mov
jl
imul
xchg
je
sbb
lock
sub
ljmp
pusha
jmp
cli
adc
add
dec
jecxz
or
cmp
lcall
lret
push
addr16
push
mov
addr16
idivb
insb
sarl
mov
add
lret
mov
out
insb
adc
and
jl
xchg
mov
lods
mov
imul
mov
xchg
arpl
daa
dec
mov
push
lea
sub
sbb
push
rcrb
clc
sbb
or
cld
mov
xchg
xor
add
xlat
int3
lods
inc
fwait
js
fwait
lret
in
popf
mov
scas
nop
inc
inc
daa
jbe
sti
insb
pop
je
fxch
mov
dec
push
cli
add
dec
aas
orl
mov
ljmp
popf
leave
pop
cmp
xor
test
ljmp
aam
push
inc
imull
mov
sbb
jnp
mov
jl
cmp
clc
jo
sbb
cmc
mov
mov
int
rorb
out
jmp
inc
out
mov
mov
pop
xchg
out
push
pop
inc
pop
lahf
jae
mov
jae
mov
addl
inc
and
mov
sbb
adc
add
into
lahf
je
jmp
push
inc
jmp
pushf
inc
or
stos
cwtl
flds
pop
out
outsl
data16
out
mov
fsubs
aam
arpl
mov
xchg
clc
jle
jno
mov
mov
insl
jo
push
int
push
mov
adc
aaa
ss
mov
ja
jns
inc
jne
jae
fldenv
xchg
lret
jge
mov
dec
into
adc
add
adc
ret
dec
or
sub
xor
sub
sbb
push
xlat
cmp
sbb
xchg
jp
and
mov
nop
pop
jnp
aas
or
or
test
cmpsl
pop
data16
cmc
cld
xchg
sub
dec
ds
inc
loope
movsb
arpl
cmp
push
scas
sbb
hlt
xor
shufps
fucomip
out
dec
xor
leave
mov
sbb
jecxz
and
mov
cld
fmuls
enter
fisttps
pop
pop
lods
or
mov
stos
add
popf
int
sub
xchg
scas
inc
cmpsl
dec
pop
pop
fcmove
enter
sub
adc
jnp,pn
je
sub
rorl
into
jo
cmp
jno
mov
cs
setle
cmp
mov
mov
lcall
sbb
adc
popa
frstor
cmp
add
inc
xor
inc
ja
cmp
push
mov
aad
aas
aas
dec
mov
xor
mov
push
hlt
pop
leave
push
rcr
mov
xchg
loope
cmp
cmc
xchg
test
je
push
lds
push
add
xchg
movsl
fisubrs
cmp
inc
ror
stc
mov
and
faddl
mov
sub
dec
jp
sub
dec
and
sub
push
push
imul
movsb
stos
fistl
leave
sbb
fidivrs
and
test
jge
test
dec
sub
daa
out
mov
fstpt
mov
adc
or
xchg
js
or
dec
insb
and
dec
pop
jg
push
mov
mov
insb
sub
mov
push
xchg
add
sbb
pop
push
shl
popa
adc
push
mov
mov
push
lcall
mov
pop
movhps
das
cmc
or
or
call
xchg
jne
xchg
ljmp
push
cmpsl
inc
fidivs
xchg
pop
inc
or
xchg
ja
xor
rorb
icebp
cmp
or
jecxz
adc
push
sub
xchg
push
sbb
jecxz
dec
test
in
stc
rcl
ljmp
or
fsubrl
adc
scas
push
loope
jno
pop
mov
lcall
mov
pop
scas
sahf
fisttpll
sbb
mov
fwait
cmp
mov
or
pop
push
mov
mov
das
orl
xlat
jno
ja
pop
arpl
rclb
push
pop
add
fldenv
xchg
xlat
rcrl
test
lea
adc
hlt
in
imul
int
rol
sub
pop
cmp
cmp
xchg
leave
pop
cltd
fstpt
loopne
fsubs
pop
push
ljmp
fstl
jo
dec
mov
sub
push
gs
push
mov
mov
pushf
arpl
jecxz
mov
je
pop
ret
es
pop
jb
addb
into
jb
jge
aas
ficompl
sti
dec
ljmp
cmpsl
and
rorl
mov
pop
mov
in
xor
adc
cld
enter
imul
xchg
fs
ds
mov
and
mov
sbb
shrb
jb
and
push
shlb
jne
xlat
lds
shll
loope
pop
mov
ficompl
inc
sbb
xor
sbb
shlb
sahf
clc
repz
inc
jle
lods
inc
jp
in
sbb
dec
repz
add
inc
imul
mov
stc
shrl
stos
inc
push
cmpsl
jb
sub
bswap
dec
dec
mov
fsubl
xchg
hlt
push
mov
test
sahf
jnp
pop
cld
cmpl
fimuls
mov
dec
outsl
xchg
mov
or
adc
adc
and
cmp
shrl
in
sbb
lret
mov
ja
mov
or
xchg
pop
shrd
clc
mov
inc
adc
jge
pop
inc
pop
addb
imul
mov
add
loopne
sub
add
lret
push
and
jne
jge
jnp
xor
movsb
or
sub
jno
cmp
pushf
mov
enter
ljmp
xor
or
adcb
imul
call
and
fisttps
pushf
push
push
mov
jne
bound
js
sbb
push
test
mov
mov
sub
dec
faddl
pop
push
mov
stos
imull
mov
fcomps
fistps
xchg
inc
xchg
xchg
daa
adc
imul
lds
xchg
outsl
cmpb
ljmp
js
mov
adc
jp
inc
lock
cmc
adc
aad
test
cmp
jp
pop
into
xchg
inc
addl
les
bound
rolb
xchg
lds
into
fstpl
fdivrs
iret
and
xor
jl
ja
jbe
xor
xchg
and
mov
and
jmp
clc
insb
jecxz
lds
mov
loope
loope
int
mov
insl
and
dec
rcr
inc
xor
xor
in
dec
clc
xchg
sbb
jae
xchg
dec
inc
add
shlb
addr16
push
jae
dec
out
and
jns
xchg
fstl
cltd
cmpsb
mov
rcr
repz
xchg
arpl
loope
ret
jmp
scas
mov
jno
or
loop
loop
in
or
pop
jecxz
mov
lcall
xchg
lret
adc
js
out
outsl
jo
jbe
in
xchg
lock
sbb
movsb
loop
add
jge
cli
lcall
enter
stos
pop
xchg
ret
mov
xchg
mov
adc
adc
jg
or
adc
jno
pop
imul
sub
stc
mov
lret
sti
int
fidivl
retw
sbb
and
jns
push
aaa
mov
imul
cmp
pushf
cmp
mov
and
psllq
jns
call
mov
dec
sub
into
or
test
inc
cmpsl
pop
lds
push
push
stos
or
stos
mov
test
mov
imul
fbstp
cltd
add
lds
sahf
adc
es
push
mov
js
rolb
ljmp
shll
pop
es
or
adc
test
pop
jns
scas
adc
jmp
inc
xor
sub
adc
dec
aaa
and
sub
clc
xchg
fwait
dec
imul
in
mov
leave
int
mov
mov
shll
mov
cmp
mov
inc
and
sbb
into
sub
pop
xor
nop
lret
pop
jle
and
dec
ss
mov
das
arpl
or
and
xchg
gs
iret
dec
pop
leave
cmp
dec
cltd
jp
jnp
cmp
add
lcall
mov
sub
stc
cmpsb
adc
and
dec
cmc
negb
repz
cmpsl
xchg
pop
dec
mov
pop
mov
movsb
rorl
popa
dec
mov
insb
jbe
xchg
adc
shlb
jne
inc
jmp
sahf
cmp
sahf
dec
rorl
jg
popa
cmp
lds
dec
mov
punpckldq
cmpsl
movsb
loop
sub
pop
push
mov
xor
lods
mov
cltd
mov
lods
sbb
popa
mov
mov
mov
fs
mov
dec
sbb
sbb
cmp
aaa
xchg
nop
in
out
outsb
adc
adc
push
pop
push
mov
cli
xor
adc
jle
ja
jg
loop
call
dec
inc
xchg
jne
pop
cmp
cmp
das
cmp
mov
aam
insb
das
dec
out
fidivrl
lret
fistps
push
pop
pop
repnz
sbb
fisttps
xor
fsubrl
jno
xchg
sarb
cld
add
jo
movb
pop
aad
sbb
in
mov
inc
jge
movsl
mov
xchg
push
add
mov
mov
ret
cmp
aad
inc
repz
xchg
leave
pop
add
roll
sbb
sbb
insl
faddl
inc
lea
jmp
dec
sbb
bound
cmp
xchg
jg
js
mov
mov
std
adc
jmp
call
mov
and
cmp
mov
into
cmp
xchg
xchg
pop
push
mov
outsb
jns
jae
je
lcall
lea
inc
pop
jnp
paddb
and
inc
pop
out
pop
mov
sti
mov
mov
sub
mov
pop
jl
lret
test
ret
ljmp
cmpsl
jge
pop
add
ds
test
std
inc
sar
call
pop
xor
push
push
lcall
cmp
push
nop
pop
outsl
outsb
adc
pop
push
cmp
std
int3
stos
fwait
popf
inc
ror
lcall
pushf
sbb
inc
sub
loopne
pop
loop
dec
loopne
jns
out
push
jg
repnz
insb
adc
adc
popf
sahf
dec
stos
es
and
cltd
xchg
ss
les
fistpll
int3
fldl
cs
pop
xchg
jne
mov
lcall
mov
hlt
in
into
fdiv
outsb
and
cltd
adc
dec
dec
lock
add
cltd
cs
or
push
in
jb
mov
push
push
mov
add
or
pusha
repz
pop
cld
mov
or
imul
loopne
mov
adc
cld
push
bound
das
jns
fs
xor
or
vmovmskps
rorl
pop
xchg
push
je
stc
into
dec
inc
popf
fdivs
push
sbb
ds
sub
stos
sbb
sbbl
push
test
in
jns
movsb
cmp
mov
mov
mov
xchg
fwait
arpl
push
sbb
sub
addr16
and
clc
ficomps
outsb
push
jmp
mov
addr16
sbb
sbb
mov
xchg
add
mov
xchg
testb
inc
es
push
repnz
add
les
in
add
sub
jnp
dec
xor
inc
add
mov
xchg
pusha
fnstenv
subl
int
and
pop
call
push
inc
add
addb
adc
jb
dec
arpl
out
mov
mov
push
rcll
pop
bound
in
push
out
call
mov
and
sub
add
jecxz
mov
loope
stos
dec
mov
in
mov
and
fs
lock
in
lret
jge
push
or
in
push
sbb
pop
push
mov
test
lods
test
mov
pop
mov
hlt
cmp
adc
push
femms
aam
mov
jnp
in
in
dec
push
pop
shlb
xchg
pop
or
add
fstpl
mov
js
bound
jae
daa
adc
mov
divl
iret
push
adc
fnstenv
xchg
hlt
sbb
push
into
fucomi
cmpl
in
ret
adc
mov
out
sbbl
xchg
pop
mov
sub
ljmp
mov
fmuls
adc
popl
xchg
dec
push
inc
cmp
sahf
and
mov
mov
dec
cltd
enter
mov
push
imul
nop
rorl
inc
out
cmp
out
sbb
lahf
lcall
and
push
ds
and
pushf
adc
scas
jne
dec
xchg
inc
sbb
pop
xor
cmp
jns
in
mov
bswap
add
call
or
pop
and
xor
aam
pop
mov
les
pop
sti
jae
in
stos
insb
call
ljmp
sarb
inc
loope
push
in
xchg
push
jp
int
rcrl
aam
les
cli
ja
enter
add
stos
pop
fsub
mov
loop
mov
sub
popa
xor
mov
add
jnp
push
xor
sbb
jbe
pusha
push
ja
lea
cmp
xlat
imul
cmp
add
stc
fcompl
cmp
icebp
sbb
in
pop
push
dec
mov
mov
jecxz
test
enter
test
test
xor
xchg
add
push
pop
xchg
mov
adc
cwtl
add
insl
cmp
cmpsb
cld
stc
cmpsl
test
stc
popw
push
or
and
aas
hlt
and
dec
adc
out
sbb
andb
cmc
lahf
je
add
push
out
push
xor
xor
cmp
adc
leave
or
jne
rcl
into
ss
leave
lea
lock
testb
fadds
add
inc
dec
mov
movsb
mov
push
push
ret
cmp
daa
pop
ret
gs
mov
rcrb
adc
fbld
cmpsl
push
mov
add
cmp
sti
iret
shlb
cli
popa
mov
cmp
dec
inc
dec
stos
push
shll
add
mull
or
test
cli
xchg
sbb
mov
and
jno
int
sub
gs
lret
fstps
daa
cltd
jnp
mov
sarb
mov
call
push
xchg
mov
xchg
jb
inc
jg
adc
sub
jp
pop
mov
xor
cmp
xor
sbb
xor
xor
xchg
lret
push
jae
xchg
aad
leave
es
mov
sub
lahf
mov
cmp
dec
jb
fucomi
notb
inc
lock
inc
pop
add
add
rcl
sahf
mov
or
xchg
sahf
xchg
dec
mov
inc
mov
gs
jecxz
fnsave
fwait
and
gs
imul
lds
mov
cld
jecxz
in
stc
fcoml
clc
add
mov
pusha
push
pop
enter
add
ljmp
daa
es
and
mov
filds
inc
lret
imul
icebp
mov
lock
outsl
int3
sbb
mov
pop
repnz
repnz
repz
ret
cmp
je
sbb
inc
mov
rol
mov
stos
sahf
mov
adc
xor
push
into
insl
jo
and
pop
push
jne
pop
movb
or
insb
mov
mov
and
mov
and
lahf
mov
addr16
pmaxsw
xor
int3
sbbl
insb
push
ljmp
lods
lds
mov
nop
jle
popf
xchg
inc
cmp
jg
jl
fcmovb
adc
mov
xchg
mov
mov
mov
es
inc
mov
ja
and
repz
mov
mov
into
test
mov
push
jns
jp
xor
das
cmp
push
inc
pop
adc
popf
aam
lahf
into
cmp
jbe
or
cmp
enter
fimuls
inc
mov
mov
push
mov
pop
push
icebp
mov
test
and
mov
call
pop
iret
pushl
movsb
das
push
iret
cmpl
jb
test
xor
mov
mov
mov
lods
push
cld
jp
xchg
into
jg
lea
out
push
incl
pop
or
xchg
or
or
test
mov
jecxz
adc
jmp
outsl
ret
jno
mov
jnp
sbb
jno
enter
ret
mov
in
mov
sbb
mov
mov
lock
push
mov
or
arpl
loop
aam
push
outsb
inc
add
int
mov
aaa
inc
in
pop
scas
dec
aas
pop
push
sub
cmp
mov
popf
xchg
or
jg
jle
repnz
movsb
loopne
sti
push
fldlg2
pop
enter
test
stc
nop
dec
pop
xchg
ds
mov
or
cs
pop
xor
aam
out
clc
outsl
pop
jne
or
sbb
fdivrs
lret
je
fsts
sub
adc
inc
aad
int3
or
fcompl
loop
shl
inc
dec
or
rcrl
clc
iret
xor
mov
fnsave
adc
cmp
rcll
xchg
hlt
add
dec
mov
xor
mov
dec
ret
std
add
and
mov
ret
inc
aad
es
fstpl
ja
adc
inc
dec
mov
cmp
divb
ficoml
push
fsubs
xor
cli
push
or
test
mov
xor
in
pop
dec
add
jnp
ret
repnz
clc
xchg
cmp
cwtl
xchg
test
adcb
pop
sbb
push
cmp
cmp
add
push
mov
mov
fcmovnu
test
inc
divb
inc
arpl
mov
scas
inc
push
loopne
and
fmul
popf
sub
push
push
adc
das
imul
or
xchg
lea
sbb
neg
mov
pop
lret
cmc
inc
icebp
dec
jle
sbb
jo
push
imul
adc
fisubrs
hlt
push
jp
cld
pop
nop
mov
into
sbb
insl
stos
and
ret
pop
roll
xor
xchg
in
ja
sub
xchg
repnz
test
lods
and
and
pop
outsl
inc
out
das
fsubs
aas
fdivl
leave
sbb
and
sahf
mov
mov
sbb
repnz
lahf
fildl
lock
pop
fmul
mov
jge
jno
sub
pop
out
jmp
pop
xor
fmul
sahf
jne
loope
popa
leave
or
xchg
popa
jecxz
inc
lods
shrb
xchg
cmpsb
imul
lahf
ret
jl
stos
fidivrl
lret
xchg
out
mov
or
push
xlat
cmp
cmpsb
enter
xlat
dec
aas
jge
popa
adc
xchg
rcr
cwtl
mov
in
sarb
dec
icebp
add
sbb
mov
ja,pn
xor
push
and
ljmp
clc
adc
loope
mov
pop
pop
cmc
adcb
or
xlat
aas
add
sub
insb
data16
xchg
roll
xor
mov
inc
cmp
dec
mov
dec
fldenv
push
pop
pusha
inc
idivb
ss
mov
aas
sub
push
popl
jae
ss
clc
lahf
xchg
idivl
nop
add
push
xchg
hlt
xchg
sub
imul
sub
adc
jl
inc
jp
cli
or
push
pop
out
push
mov
sbb
mull
xchg
push
add
mov
ljmp
aad
dec
stc
into
xchg
lods
data16
jns
sbb
mov
das
cmp
fwait
sub
dec
inc
shll
mov
das
xor
inc
rcll
xorb
pop
or
jl
jl
xchg
fildl
fstpl
mov
sub
not
add
es
test
mul
xlat
add
mov
test
stc
sub
pop
dec
mov
in
test
pushf
popf
pop
push
jmp
out
pop
xlat
push
ss
mov
stos
mov
xchg
cmpsb
pop
jbe
cs
cwtl
push
mov
dec
jb
stc
imul
inc
dec
jg
jbe
jmp
iret
in
mov
mov
shl
or
fs
jp
nop
negb
aam
push
jb
sbb
xchg
cmp
ret
xchg
add
iret
sarl
test
xor
mov
flds
imul
mov
inc
call
aam
inc
sti
outsb
mov
pop
in
mov
sbb
xchg
das
mov
mov
outsl
mov
test
add
xchg
adc
outsl
cltd
inc
js
pop
sub
xor
cmp
sub
insb
movsb
lahf
or
insb
inc
daa
push
ja
outsb
leave
mov
out
adc
xchg
sub
mov
mov
cltd
fdivrs
bound
xor
xlat
or
stos
fsubs
popa
inc
pop
call
xor
pop
jle
out
cmp
icebp
sub
or
in
jp
and
ss
sub
dec
test
mov
mov
pop
lock
mov
addb
sti
fidivrl
stc
inc
xchg
xchg
xchg
add
pop
mov
inc
cs
sbb
test
imul
test
out
push
push
imul
jecxz
in
cltd
popf
or
inc
sub
dec
cmp
xor
dec
daa
adc
push
out
fnstenv
inc
call
adc
nop
lods
mov
icebp
in
mov
pop
jl
lret
call
fidivrl
outsb
sub
dec
mov
pop
dec
or
dec
bound
cmp
cmc
and
mov
movsb
ja
shlb
jne
sub
add
stc
sbb
push
xor
icebp
push
in
xchg
aam
xchg
leave
cmp
sub
ffree
lahf
add
into
shrb
cmc
inc
xor
or
nop
xchg
movsb
jns
std
xchg
xor
mov
int
arpl
jg
adc
mov
pop
cmp
fdivrl
jle
cmc
jecxz
push
or
pop
mov
inc
add
mov
and
rclb
hlt
gs
push
sarb
sub
mov
sbb
repz
inc
lock
cs
sarb
rcl
sub
test
mov
ljmp
jb
xchg
inc
adc
and
lds
cltd
inc
mov
jno
xchg
imul
test
mov
cmp
mov
adc
inc
xchg
push
repnz
mov
pop
test
inc
push
into
jecxz
aam
xchg
rcrl
in
pusha
shrb
jae
pushf
xlat
aaa
int3
fidivrl
punpckhbw
rorl
xor
rcrb
mov
js
or
adc
pop
dec
jecxz
or
sahf
inc
mov
dec
mov
xrelease
xor
nop
and
fdivl
mov
stos
lahf
sahf
mov
push
jns
push
xlat
jp
push
add
mov
psubsw
cmp
mov
arpl
cmpl
nop
mov
pop
in
mov
cmpsl
mov
mov
mov
es
push
mov
rol
inc
adc
fistpll
call
or
repnz
jecxz
stc
call
mov
out
xchg
xor
push
in
mov
mov
sbb
push
or
movsl
mov
jg
call
cmpb
dec
aam
pop
fisubrs
jp
lret
data16
loop
aas
adc
inc
das
and
stos
lret
js
add
push
jnp
mov
in
or
sti
in
mov
adc
imul
iret
lret
sbb
mov
adc
inc
pop
stos
out
lret
or
aad
cmp
inc
push
ret
cmp
test
cli
cmpsl
push
and
cmc
xchg
jae
xor
lea
or
push
lods
sub
push
xor
jne
push
divb
iret
sahf
les
pop
sub
cmc
mov
mov
mov
mov
cmp
sub
cmp
aaa
add
pop
jo
mov
lea
sbb
notl
xor
add
cmp
xor
js
mov
rcl
mov
adc
push
lods
add
and
fsubr
add
mov
jb
add
rorl
mov
mov
jbe
pop
imull
adc
push
subb
in
or
call
push
jg
std
loopne
jb
fwait
mov
jl
or
or
std
add
ret
lods
insb
push
xchg
adc
in
mov
bound
outsb
scas
sbb
adc
popf
jp
mov
pop
mov
rorb
stc
pop
in
mov
popa
mov
mov
ret
cmp
ret
int3
sbb
add
pop
dec
rorl
lea
or
pop
daa
mov
pop
add
mov
sbb
mov
mov
sub
sti
aad
fisttpll
xlat
add
dec
mov
mov
aad
fwait
pop
xor
pusha
je
ret
dec
fcmove
cld
mov
mov
or
orl
inc
fildl
push
sbb
dec
or
testl
push
push
pop
pop
lahf
pop
push
push
fdivr
ljmp
movl
movsl
cmpsb
sub
and
loop
sar
addl
mov
or
fisttps
mov
popa
bound
int3
insl
stos
lock
jae
inc
sub
es
mov
sahf
sub
fistl
int
sbb
cmp
push
mov
mov
pop
xchg
mov
and
mov
cmp
sar
jle
js
test
test
stc
push
sub
sbb
fstps
adc
lcall
mov
cmp
inc
mov
sub
add
xchg
and
dec
pop
or
mov
and
push
push
fisubl
les
adcl
out
xor
push
adc
repz
adc
outsl
push
lahf
dec
adc
cli
push
pop
jo
jno
daa
lock
sbb
test
mov
sub
inc
lret
inc
mov
cmpsl
xor
aad
inc
lahf
pop
and
sub
sbb
std
test
xorb
push
imul
xor
and
xlat
ja
mov
movsb
ja
xor
or
enter
nop
adc
pop
daa
cltd
add
fildl
test
jbe
mov
jge
cmpsb
lcall
hlt
pop
jge
movsb
femms
rol
cmc
outsb
mov
push
fcomps
mov
push
repz
imul
mov
push
ja
cmpsl
rolb
gs
jmp
fs
mov
sbbl
sub
mov
xor
fwait
ds
cmp
add
pop
xchg
cld
ret
leave
xchg
imul
mov
adc
lock
loope
mov
pop
xchg
push
bound
int
jg
in
mov
dec
sub
cld
xor
fld
test
xor
add
add
and
add
cmpsl
lcall
mov
pop
adc
orb
mov
dec
jnp
sti
push
mov
pop
in
jg
and
loop
cmpsl
neg
push
mov
test
xor
imul
mov
adc
mov
enter
dec
and
gs
jg
mov
rolb
xchg
adcb
adc
insl
mov
loope
clc
push
sub
gs
in
xor
inc
pop
mov
int3
push
or
jl
fdivrs
cmpsb
lahf
mov
aas
or
repnz
loop
push
lret
xlat
and
sub
fdivrl
xchg
flds
push
inc
sbb
gs
xor
cmp
out
lock
jmp
mov
mov
jle
imul
into
dec
ja
or
cmp
adc
int3
or
dec
cmpsl
xor
lcall
pop
outsb
ret
imul
out
fidivl
jbe
cli
les
mov
mov
or
push
sbb
mov
iret
mov
les
add
adc
movsb
pop
push
hlt
es
out
inc
cwtl
std
call
js
aad
and
and
sub
sbb
push
push
sbb
bnd
jmp
jb
mov
popa
push
or
add
dec
cmp
in
jae
sbb
jecxz
in
enter
test
inc
shrb
pop
leave
and
mov
lods
or
jno
pop
add
arpl
std
insl
push
scas
sub
mov
push
sub
rcrb
add
inc
faddl
xlat
gs
in
pop
or
mov
and
cs
xchg
adc
movsl
sub
test
jp
mov
outsb
call
pop
jo
xor
pop
and
shlb
stos
out
adc
fs
and
mov
stos
and
dec
or
inc
cmp
aad
jb
aaa
sahf
lahf
int3
js
leave
or
dec
lahf
push
popf
arpl
fs
mov
mov
jmp
mov
mov
sbb
lret
pusha
add
sbb
in
xchg
addl
int3
movsb
jl
daa
cmc
mul
push
cltd
or
xchg
adc
sub
outsb
test
arpl
ljmp
les
in
cmp
xor
mov
lret
and
mov
hlt
pop
and
mov
iret
in
pop
pop
jae
inc
lods
pop
loopne
pop
int3
cmp
jge
mov
jmp
jle
clc
pop
pop
scas
dec
push
or
mov
push
iret
dec
dec
insb
shlb
scas
dec
mov
movsl
ja
cmpsl
xchg
add
mov
pandn
xor
or
pop
mov
mov
stos
popa
fisubrl
mov
andl
adc
sbb
test
sbb
mov
cli
out
cmc
cmc
mov
aas
adc
repz
scas
jp
int3
cld
scas
or
test
sbb
mov
test
jnp
xchg
xchg
jecxz
fnsave
dec
jle
addl
jb
cli
ss
mov
mov
xchg
mov
aad
xchg
cmp
xchg
push
mov
push
sti
out
xchg
iret
add
nop
jge
pop
btc
pusha
jo
sub
imul
mov
lahf
fldl
enter
mov
int3
jg
sub
jg
icebp
stos
adc
gs
pop
jb
cltd
cmpsb
jnp
jp
fistpl
dec
add
dec
int
xchg
pop
adcb
jmp
cmpl
clc
mov
ret
fwait
jb
adc
in
pop
mov
imul
push
sub
in
dec
in
jne
xchg
add
cmp
inc
dec
dec
mov
out
mov
jl
mov
cmp
push
fcmovb
enter
lcall
jnp
mov
push
cs
js
aam
test
mov
sub
je
lds
pop
pop
pop
movsl
repz
mov
into
lods
cmpsl
xchg
leave
xchg
and
mov
cmpsb
pop
ficompl
adc
shlb
or
xchg
movsb
or
dec
sub
xor
scas
push
cltd
shrb
scas
and
icebp
inc
push
mov
adc
icebp
sbb
xor
cs
dec
addr16
mov
fs
jle
xchg
fsub
cmpsb
ret
sbb
ds
push
sub
out
rcrb
xor
repnz
rclb
bound
lahf
jge
in
cmp
dec
cmp
fstpt
sbb
mov
orb
jge
pop
and
inc
out
push
dec
and
adc
je
xchg
add
out
les
adc
push
jp
test
push
std
push
test
mov
in
test
pop
inc
and
jge
movsb
mov
aaa
iret
adc
mov
xchg
sti
push
fnstsw
out
rorb
or
lret
call
pop
movsl
js
mov
das
push
pop
jmp
rcrb
addr16
ret
ret
pop
push
jb
aaa
rorl
push
outsb
test
std
cwtl
outsl
lock
test
and
pushf
shrl
inc
icebp
mov
xchg
mov
push
mov
pop
arpl
inc
xchg
or
xchg
jecxz
imul
mul
mov
std
aas
xor
cmpsl
int3
gs
cmp
call
cld
add
fstpl
inc
repnz
push
addr16
testl
movsl
push
jae
sti
ret
dec
fcmovu
aaa
ds
xchg
out
push
sub
and
aad
aas
mov
dec
cli
stos
and
iret
cmp
cmp
sub
fimull
nop
outsl
xchg
add
loope
call
lods
out
push
adc
jmp
xchg
fnstenv
stc
sahf
mov
xor
arpl
cmpl
push
fnstenv
push
sub
out
loop
mov
mov
mov
nop
pop
cmp
arpl
mov
inc
push
iret
dec
xor
mov
push
adc
or
sahf
lds
ljmp
cltd
or
scas
xor
pop
ret
clc
jecxz
leave
inc
fdivr
mov
jae
test
dec
pop
testb
mov
inc
mov
stos
pop
inc
cwtl
fildl
mov
test
xchg
lds
pop
aad
mov
xchg
mov
cwtl
lret
adc
push
cld
int
sbb
addl
fsubrs
xor
mov
or
fst
and
in
add
pushf
addl
call
dec
inc
add
add
mov
push
xchg
pop
dec
mov
lret
sarl
pop
cwtl
mov
fmull
sbbb
cli
aaa
sbb
push
push
fmuls
les
dec
dec
pop
aam
lods
adcb
aas
mov
add
les
xor
ret
rclb
rclb
ljmp
addr16
int
dec
inc
xor
dec
or
or
mov
ret
imul
jecxz
mov
imul
push
rclb
ret
jg
ja
xor
sbb
out
orl
notl
jne
out
jb
stos
out
dec
or
int3
mov
jg
or
scas
xor
jle
mov
jno
and
jbe
in
sbb
icebp
jno
add
das
pop
dec
scas
and
inc
jl
push
lods
jo
mov
lret
dec
jp
popf
inc
jle
mov
cwtl
gs
shrb
sbb
ficoml
xor
rcll
loope
push
in
inc
or
mov
inc
mov
gs
cmc
scas
xor
inc
int3
pop
jno
mov
jne
jo
xlat
aaa
mov
insl
adc
fs
push
xchg
sbb
in
sub
in
mov
sti
jp
ss
cmp
add
data16
ds
outsb
scas
and
push
push
jp
cmp
lods
xchg
test
pop
popf
dec
dec
xchg
or
out
dec
out
scas
inc
movl
sbb
dec
add
outsl
xchg
push
pop
push
popa
or
repnz
sbb
xchg
test
and
cmp
negb
test
jb
imul
iret
dec
jecxz
or
sbb
inc
js
mov
sarb
lds
testb
xchg
cltd
popa
test
cs
and
idivb
pop
mov
jo
inc
jo
cmpsl
scas
dec
dec
aaa
scas
xchg
data16
flds
jb
sarb
dec
fisubrs
in
ds
das
rcrb
xchg
cli
xor
ret
adc
iret
iret
or
pop
rorb
and
inc
push
cmc
xchg
xchg
test
jns
mov
push
loope
xchg
mov
push
jl
or
mov
fwait
addr16
mov
fwait
aad
aaa
pop
dec
cmp
fs
mov
push
pop
lcall
cmp
cmpsl
in
cli
inc
mov
push
ss
sbb
cmp
lds
and
inc
lock
clc
xor
xchg
push
stos
push
cmpsb
inc
lret
das
push
jae
jo
mov
sub
jg
pop
pop
aad
jbe
lds
or
and
cmp
pop
or
jecxz
das
lret
dec
mov
fadds
inc
cwtl
mov
cld
inc
dec
fdivl
in
addb
mov
and
mov
xchg
test
pmulhuw
scas
sbb
mov
xor
push
inc
pop
xor
fs
call
dec
mov
jb
lretw
jnp
jns
inc
fbld
xor
mov
lds
and
sbb
mov
mov
jg
push
adc
aam
adc
mov
cld
xchg
push
mov
add
or
imul
push
clc
add
push
jle
mov
xchg
cmpsb
pop
outsb
mov
push
cmp
cmp
cmpsl
out
pop
std
mulb
xor
das
mov
in
shrb
stos
movsl
push
mov
mov
shll
mov
dec
sbb
xchg
mov
cwtl
mov
pop
jo
jmp
pop
and
mov
test
fsubs
aad
sub
por
sbb
push
fisubl
out
sub
adc
out
xlat
call
in
insb
arpl
movsl
push
pop
sub
adc
sbb
cmp
xchg
mov
sbb
xchg
ss
stc
mov
sbb
mov
fmuls
jnp
fildl
stos
push
ficoml
ficoml
mov
fbld
adc
daa
mov
cld
insb
push
adc
xlat
xor
or
fcmovne
xor
xchg
adc
ljmp
lcall
inc
jnp
sub
lahf
ljmp
daa
lgs
clc
push
mov
adc
mov
clc
mov
test
out
push
mov
jecxz
xorl
ss
testb
es
inc
sbb
or
or
push
insl
pop
pop
pop
cli
addr16
in
outsb
addr16
aas
jge
jmp
cld
insb
xchg
stos
cld
in
xchg
loope
es
std
sti
loopne
outsb
jno
dec
cs
mov
adc
mov
ret
mov
test
mov
arpl
call
pop
or
mov
push
test
pop
ja
or
sbb
xor
or
lahf
test
fs
inc
push
fbld
mov
xor
inc
xchg
iret
loop
add
movsb
cmp
hlt
inc
bound
aas
into
add
xchg
and
in
xor
shlb
dec
jmp
sbb
int3
xchg
ret
stos
xchg
insl
pop
cltd
into
pusha
mov
test
out
aad
lahf
add
add
mov
imul
lds
push
cmp
adcl
icebp
lret
insl
nop
jecxz
negl
dec
adc
addr16
ret
cmc
push
out
clc
push
idivl
sub
cld
ja
pop
mov
stc
pop
push
jge
sbb
xchg
mov
mov
push
cmc
sar
dec
xor
sbb
sub
xchg
jo
imul
push
in
jbe
cmp
mov
mov
and
into
pop
mov
les
sarl
in
xchg
fadd
cli
arpl
pushf
ret
sub
vpmacsswd
pop
add
mov
addl
imul
xchg
lods
xchg
mov
mov
mov
inc
loope
dec
lahf
es
pop
jg
mov
popf
dec
aam
into
dec
sub
icebp
dec
repnz
dec
inc
ficoms
inc
push
and
and
jmp
jge
stc
push
jmp
insl
icebp
insb
pop
imul
mov
call
xlat
or
xchg
shlb
iret
mov
xor
ja
add
shll
jo
das
inc
andb
lods
xchg
add
lcall
pop
pop
mov
loopne
cmpsb
xor
xchg
pop
xchg
pop
in
cmp
or
push
mov
rcrl
inc
inc
jo
scas
jne
test
mov
or
pop
push
pop
pusha
xor
aas
mov
jl
in
xlat
fstl
cmp
adc
adcl
fsub
pop
arpl
scas
xchg
adc
aam
push
add
nop
cwtl
hlt
aas
in
in
push
and
add
sub
adc
movsl
shl
push
idiv
ss
enter
push
call
cmpsl
imul
shrb
cld
add
loop
outsb
outsb
ficoml
daa
cwtl
ljmp
clc
rorb
ljmp
pop
sahf
movsb
adc
mov
mov
xchg
dec
xchg
leave
sub
test
out
xchg
mov
push
jmp
das
mov
pushl
es
push
leave
pop
cmp
rcrb
loop
add
or
inc
or
test
lds
xor
adc
pop
out
inc
mov
andb
repnz
jbe
cmp
push
add
and
pop
fs
fucomi
je
adc
pop
adc
outsl
call
xchg
daa
test
cmp
xor
scas
mov
popf
jp
scas
lret
inc
and
cmpsl
sub
adc
sbb
cmp
mov
popf
leave
fs
xor
jmp
and
mov
or
lcall
mov
punpckhwd
mov
shlb
lea
jg
enter
icebp
gs
mov
cmpsb
or
popl
lock
es
add
mov
rol
adc
test
inc
pusha
cltd
shll
sub
xchg
pop
sub
loopne
mov
inc
loop
or
xchg
cmp
lods
or
and
out
jmp
xor
dec
dec
imul
stc
inc
gs
pop
lahf
int3
cmp
and
lret
sbb
push
adc
lret
mov
mov
test
scas
mov
fcomip
sbb
and
mov
in
out
mov
fisttpl
loopne
daa
movsl
arpl
clc
pop
adc
mov
xor
std
jecxz
push
add
icebp
cmc
add
xchg
mov
mov
mov
push
add
mov
and
or
cmp
mov
jl
stos
pop
xorl
mov
imul
adc
out
mov
fs
mov
adc
sbb
push
idivb
inc
in
fwait
jp
xchg
clc
into
repnz
sbb
add
inc
adcb
xchg
cmpb
mov
pop
gs
mov
xchg
leave
push
xchg
sbb
call
lret
adc
fnstcw
mov
fidivrs
inc
call
sub
clc
inc
out
push
ds
push
fisubs
orb
jo
js
mov
push
popa
cli
mov
pop
fcoml
nop
dec
popf
push
sub
and
stc
loopne
mov
mov
mov
in
sbb
lods
cltd
and
sysexit
mov
in
sbb
jb
cli
and
out
cs
sti
or
adc
xchg
fcompl
negb
xchg
sbb
loopne
jmp
loop
mov
shrb
jnp
cmpsb
push
scas
fmuls
xchg
mov
out
out
or
iret
mov
cmpsl
movsw
pop
andb
add
pop
inc
js
cmp
jge
addl
ret
fnstenv
mov
and
xor
add
push
add
push
cmp
lods
pop
jne
xchg
xor
fcmove
jle
dec
jne
mov
pop
loopne
inc
incl
add
loop
mov
aad
jae
out
cs
daa
xchg
jecxz
flds
enter
or
cmp
lods
inc
mov
mov
lcall
pop
add
sub
jmp
xchg
sub
pop
outsb
mov
mov
mov
pop
push
ret
xchg
sar
adc
mov
in
fdivrs
sub
dec
testl
cwtl
in
inc
popa
sub
mov
sarl
gs
fiadds
lahf
fs
or
cmp
adc
pop
pop
pop
push
pop
xor
mov
repz
cltd
gs
push
cmp
lcall
xchg
mov
xor
iret
xchg
icebp
ficoml
cmpb
lods
faddp
ret
test
subb
adc
movsl
repnz
cmp
jae
les
lret
jl
xor
jecxz
aad
fidivrs
pop
mov
add
andb
and
push
adc
daa
ret
or
pop
jp
adc
scas
mov
into
xchg
sbb
xor
mov
xor
sarb
cmpsb
cmp
and
rcrl
out
lods
xor
imul
test
cmp
adcl
xchg
decb
sbb
push
sbb
nop
xchg
mov
mov
mov
push
mov
mov
jle
jo
pop
mov
cmp
aam
cs
pop
hlt
mov
mov
sub
fldenv
test
cmc
popf
xchg
cmp
mov
loop
outsl
push
jp
pop
jne
insb
cmp
dec
ret
xchg
sbb
pop
and
loope
dec
scas
cmp
lret
daa
divb
out
out
mov
shll
push
ja
pop
cs
test
pop
stos
icebp
push
push
test
sbb
call
xor
xchg
pop
dec
mov
or
pop
jle
and
test
movl
lods
xchg
out
in
daa
les
cmp
jnp
jae
inc
xor
cwtl
xchg
outsb
popf
sldt
fdivrp
subb
push
test
pop
adc
rcr
inc
mov
out
lret
inc
stos
arpl
push
loop
xchg
and
pop
out
or
fcmovbe
dec
ret
xchg
rcrb
or
roll
je
xchg
std
cld
push
dec
jg
inc
inc
mov
xchg
mov
insl
pop
cli
and
sub
mov
stc
cmc
cmp
cmpb
sub
bound
sbb
in
repnz
xor
and
cmp
test
push
scas
pop
fcomp
mov
stos
shll
sbb
stos
and
jecxz
mov
mov
testl
test
and
imul
popf
cmp
enter
xchg
pop
outsb
push
jmp
mov
jmp
push
nop
sbb
mov
je
fwait
cli
sahf
cmp
ficomps
insl
cmp
mov
sub
or
scas
fs
outsl
cmc
es
in
lcall
addb
jbe
sub
sub
mov
xor
ret
dec
sbb
lods
mov
shr
mov
imul
rolb
in
ss
pop
xchg
cmp
loopne
rcrb
sub
jge
mov
push
notb
sub
dec
and
add
and
in
clc
insl
push
cwtl
dec
push
fwait
mov
sub
xchg
mov
cmp
pop
sarb
lret
mov
xlat
adc
pop
add
jne
inc
iret
jecxz
pop
iret
ljmp
mov
xor
fstpl
popa
cld
inc
movsl
test
das
jo
fistpl
nop
xor
lods
and
mov
fcomps
add
aaa
inc
adc
pop
int3
mov
or
mov
adc
insl
push
dec
jmp
push
push
push
insl
ds
cltd
out
pop
gs
lret
fcos
pushf
into
out
dec
jmp
mov
fs
fcmovnb
fistps
mov
ljmp
sbb
fldl
inc
mov
mov
jmp
out
inc
jb
mov
cmp
outsl
add
cmpsl
stos
arpl
jecxz
adc
push
push
mov
push
js
repnz
mov
adc
jle
test
jnp
inc
iret
test
jns
outsb
mov
cs
pushf
lock
mov
pop
xor
cld
jg
cltd
pop
lock
scas
pop
ds
push
pop
push
into
mov
mov
cmpsb
nop
jl
adc
jecxz
inc
scas
ja
out
loopne
push
adc
inc
test
lea
rcrb
jp
add
mov
clc
and
and
in
inc
push
mov
cmp
xor
sahf
push
pop
cmp
imul
push
adc
icebp
pusha
mov
mov
jbe
mov
ja
rorl
bound
mov
mov
or
mov
inc
int
dec
and
sub
and
cltd
arpl
out
ficomps
push
cmc
add
inc
add
fucomip
ds
jns
fsubs
xor
testb
and
cmp
fcomps
fwait
lcall
add
sub
xlat
popa
mov
add
int
js
popf
dec
dec
push
pop
cmpsl
stos
lea
push
arpl
or
sub
out
inc
push
pop
adc
dec
lods
sbb
jb
pusha
ret
cwtl
inc
cmpl
mov
push
ljmp
pushfw
sti
popf
mov
pop
mov
jne
xor
mov
xchg
hlt
into
cltd
es
xor
fdivrl
cmp
cmpsb
cwtl
fcmovne
sub
sub
mov
out
vmulss
fcomip
out
pop
sti
and
and
jp
jmp
pop
inc
mov
pop
push
adc
and
push
pop
cmp
sahf
jecxz
hlt
adc
enter
xchg
pop
cld
notb
push
fisttps
je
dec
dec
xor
jbe
cmc
push
pop
fcmovnbe
xchg
push
je
sti
mov
out
shlb
ljmp
pop
in
cmp
insl
push
pop
idivb
fnstenv
outsl
or
pcmpeqd
jno
sub
repz
jle
insl
jns
xchg
mov
loope
mov
and
rcrl
cmp
and
push
ljmp
push
sbb
jmp
insb
sbb
jae
pop
push
shl
mov
mov
mov
cmp
cmpsl
pop
mov
in
mov
shlb
loop
ja
push
jb
xchg
mov
test
aas
test
sub
ficoml
mov
dec
aad
mov
mov
or
push
repz
lods
xlat
sti
push
pop
jg
inc
out
push
test
and
inc
xor
pop
in
adc
bound
dec
shlb
jecxz
sbb
fnsetpm(287
push
repz
in
adc
mov
xchg
add
rcll
sub
ljmp
mov
inc
dec
push
push
mov
dec
insb
or
add
hlt
xor
cmpsb
push
addl
xchg
lods
out
sbb
setp
jnp
xor
js
jno
aam
add
jp
mov
imull
xorl
push
push
loop
mov
push
xor
lock
and
sti
cmp
pop
or
aas
lock
test
rorl
out
bound
imul
loope
or
in
in
sub
push
gs
out
adc
inc
fisubl
xchg
dec
and
fistpl
add
push
ret
inc
dec
movsl
jne
cmpl
cwtl
xchg
mov
rorb
and
sbb
add
mov
das
stos
xchg
mov
inc
cmp
cmp
jmp
test
mov
rolb
into
adc
xor
dec
xchg
add
xor
xor
loop
or
out
or
or
data16
out
inc
pop
fstl
jg
pop
xor
and
dec
inc
xchg
test
fwait
lret
push
inc
mov
ffreep
xchg
sarb
push
movsl
sub
scas
call
repz
jnp
lahf
aas
mov
cmp
mov
outsb
fmul
insl
adc
mov
dec
out
add
pop
inc
xchg
xchg
dec
rclb
int3
adc
outsl
adc
pop
jae
dec
cmp
cmp
mov
inc
icebp
bound
push
fcomps
adc
nop
jle
inc
add
or
xor
push
xchg
mov
hlt
orb
push
pop
mov
add
frstor
hlt
lods
xchg
or
int3
shrl
out
jecxz
mov
cmp
mov
or
lds
mov
jmp
ss
cmp
dec
lods
xor
cmpsb
mov
pop
mov
pop
scas
scas
andb
inc
ja
push
data16
or
xor
or
outsl
cwtl
mov
jl
cld
mov
mov
lcall
aam
xchg
ds
push
adc
lods
repz
ja
push
cmp
jle
ja
pop
ret
adcl
xlat
leave
sahf
sub
or
jle
out
xlat
shr
xor
push
pop
nop
jnp
pop
dec
insb
dec
insb
inc
push
rcll
or
roll
dec
lcall
mov
shll
sbb
js
pop
out
cmc
in
aam
iret
jecxz
data16
mov
jg
mov
insb
mov
cmp
cmpsl
lcall
cld
add
insb
movsb
testb
fisubrs
push
into
or
icebp
xchg
ret
sub
jmp
mov
cld
stc
sbb
mov
push
pop
aaa
or
push
lret
mov
scas
jns
lret
aad
test
clc
sub
dec
and
mov
inc
imul
popa
ret
adc
mov
push
jo
push
add
fs
divl
fnstcw
sbb
data16
push
push
push
cltd
mov
xor
xchg
mov
dec
int3
cs
lcall
imul
loop
cwtl
ljmp
inc
xor
dec
sub
mov
dec
mov
sbb
lcall
ss
pop
mov
jb
movsb
leave
scas
mov
pop
inc
cmpl
push
mov
sub
fdivrl
shll
sbb
outsb
push
lods
or
mov
mov
mov
addr16
xor
popf
in
xlat
js
jp
ja
xor
xor
jge
mov
fdiv
lret
cltd
ret
or
xor
fcomp
or
adcl
icebp
dec
jp
or
lahf
lret
cmp
xchg
mov
enter
das
sbb
addr16
imul
mov
adc
outsb
and
xchg
add
mov
push
test
jnp
lret
xor
or
adc
adc
je
stos
push
xchg
push
lahf
push
sbb
setg
outsl
jo
sahf
dec
into
cli
lcall
cmc
inc
xchg
or
pop
sub
frstor
stos
mov
push
stc
xor
sbb
aam
dec
test
jns
stos
adc
mov
adc
out
mov
sub
mov
dec
stos
xchg
and
fisttpll
repnz
mov
popa
aas
or
shrb
sub
mov
addr16
call
pop
fs
test
loope
or
imul
and
and
xchg
xchg
push
push
outsb
mov
pushf
lods
mov
and
loopne
ja
pop
or
in
dec
das
cmpsl
xchg
icebp
mov
jge
mov
push
inc
loop
xor
or
test
stc
daa
add
inc
and
imul
adc
lds
mov
call
addr16
pop
cli
test
dec
add
jo
sbb
into
repnz
jo
ljmp
mov
mov
push
inc
sbb
sbb
jle
ret
pop
cmp
sub
mov
cwtl
mov
ret
fidivl
or
dec
int3
push
aad
jmp
adc
in
sub
xchg
aas
das
fsubl
lret
xchg
aas
inc
test
ss
pop
push
adc
push
mov
sbb
lcall
adc
rcrl
imul
sbbl
iret
testl
jl
repz
iret
jb
inc
push
in
xlat
movsb
sti
test
adc
xchg
daa
cmpsb
fmull
adc
pop
js
mov
nop
jg
mov
rcl
inc
pop
xor
popf
pop
xchg
loop
cmp
jno
cmp
lret
or
add
dec
mov
cmpl
stos
sar
faddp
out
mov
je
and
aaa
outsl
mov
add
loop
sbb
lahf
and
test
addr16
sbb
and
rolb
fmuls
vmwrite
cmpsb
js
sbb
in
in
dec
ja
ja
jb
adc
add
sahf
pop
repnz
bound
stos
idivl
out
adc
andb
jmp
fxch
arpl
outsl
sub
mov
sub
push
sbb
xor
mov
imul
mov
sub
or
inc
mov
rcr
xlat
pop
dec
cmpsl
das
cmc
pop
mov
outsl
xchg
aam
rolb
ja
or
pop
push
and
add
inc
xor
mov
mov
testb
xor
leave
es
inc
aas
cmp
pop
xor
imul
loopne
roll
dec
repnz
and
rcrl
iret
mov
fldcw
and
ja
add
imul
or
jae
pop
or
shrb
add
cli
cmp
or
mov
ror
sbb
and
inc
not
movsb
out
rorb
sbb
fs
out
movsl
cmpb
pop
nop
dec
push
ds
add
test
inc
das
pop
push
xchg
fidivrl
mov
inc
add
mov
pop
xchg
push
loop
push
add
xchg
addr16
pop
or
mov
mov
mov
pop
fwait
push
pop
lea
movsb
out
fimull
pushl
fldcw
xchg
cmpsb
rolb
aam
fst
adc
sub
inc
cmp
cmpsl
mull
sub
push
lahf
mov
or
pop
aam
pop
mov
es
gs
adc
hlt
jecxz
mov
sub
lcall
adc
imul
dec
ret
repnz
jae
jo
mov
sarl
jae
clc
fidivrl
adc
mov
pusha
push
lds
jb
or
mov
inc
add
aad
mov
jg
xor
popf
ds
int
std
rcrl
cld
push
es
fists
push
mov
dec
xchg
mov
mov
mov
pop
inc
call
fcompl
in
push
lods
xor
stc
dec
sub
out
std
bound
fwait
jecxz
inc
jo
mov
loop
mov
push
push
imulb
dec
dec
add
scas
shll
pop
in
sbb
jmp
popa
adc
jnp
in
pop
in
jno
fldcw
mov
push
push
daa
adc
es
daa
cltd
inc
add
xchg
rcl
repz
mov
push
icebp
cmpsl
fmul
scas
test
stos
mov
mov
or
incb
mov
mov
mov
xor
mov
or
mov
fisttps
int3
sub
cmp
xchg
je
push
xchg
jns,pn
into
stos
push
xor
movsb
je
dec
jl
xor
mov
or
push
push
imul
pop
mov
out
mov
shll
inc
dec
dec
cmpl
fistl
push
jg
aam
dec
enter
sub
pop
pop
mov
cmp
sbb
loop
pop
push
insl
xchg
cltd
or
dec
push
cmp
xchg
xor
add
aad
jg
push
inc
fst
mov
mov
imul
sub
into
pop
addr16
and
cmp
insb
add
adc
cmp
cmp
dec
cmpsb
leave
cwtl
imul
adc
mov
in
push
push
sti
ljmp
bound
aas
repz
lods
mov
lahf
xchg
jecxz
movb
pop
sbb
fisubrl
das
iret
out
sbb
rorl
daa
cmp
xchg
xchg
inc
into
xchg
add
imull
fwait
push
scas
cmc
add
outsb
or
enter
dec
sbb
loope
push
or
sub
into
in
dec
sub
das
xchg
xchg
pushf
pop
inc
bound
lahf
jbe
push
outsl
scas
pop
mov
add
icebp
movsl
popf
add
push
mov
mov
loopne
pop
cli
in
subb
fistps
sbbl
mov
pop
dec
ret
jb
in
out
fidivrl
loop
mov
in
pop
add
pop
fcmovne
inc
jp
inc
inc
ja
andb
gs
xchg
popa
xor
push
test
lds
and
mov
add
add
cmp
jmp
dec
xor
movsl
and
adc
fdivl
call
in
in
cltd
dec
push
xor
sub
xchg
fs
push
add
jae
push
out
in
fisubs
rorl
mov
sub
sbb
loop
cld
int
mov
mov
mov
cltd
xor
shlb
add
pushw
arpl
test
dec
jle
fistl
push
fcmovnu
mov
push
mov
and
sbb
dec
add
push
out
outsb
sub
test
sub
aam
imul
stos
popl
in
jnp
out
int
stos
fistl
aad
dec
bnd
stos
out
inc
pop
fnstenv
xchg
aad
inc
aad
lret
outsl
out
add
pop
xchg
and
mov
mull
ret
mov
and
lock
mov
pushf
pusha
xorl
jg
inc
in
repz
cltd
jp
pop
pop
or
sbb
sbb
dec
test
ss
xchg
in
rcll
popf
xor
mov
dec
cmp
or
lahf
and
push
leave
jae
jnp
sub
into
test
in
dec
imul
sti
add
pop
pop
mov
ja
cltd
and
insl
in
push
jns
lcall
pop
mov
mov
mov
mov
mov
xchg
mov
imull
cmp
scas
xor
inc
bound
dec
test
mov
inc
daa
cmp
xchg
push
jo
roll
fdivl
push
cmc
outsb
sbb
and
push
xlat
neg
adc
inc
cmpsl
inc
mov
dec
pop
pop
rolb
call
pop
sub
mov
and
out
ss
xchg
jg
bound
clc
imulb
lea
mov
in
push
jns
xchg
add
sti
hlt
out
mov
mov
popf
sbb
xchg
popf
add
in
lods
shll
outsb
sbbl
mov
aas
inc
mov
push
jnp
mov
and
jno
stos
test
xor
or
dec
push
pop
popa
ret
sub
cmp
fs
jb
sbb
insl
xchg
sti
popa
scas
xor
test
dec
fmull
push
xor
jmp
imul
or
cmp
mov
and
and
imul
xchg
xchg
cmp
mov
cld
in
inc
inc
fidivrs
fdivs
sahf
loopne
mov
int3
lahf
out
mov
enter
mov
pop
adc
addb
cmp
adc
dec
jnp
negl
lods
aam
push
adc
xchg
dec
mov
hlt
mov
mov
fldt
jb
xchg
and
ds
rcll
mov
lock
mov
inc
pop
mul
pop
andb
mov
cwtl
and
daa
mov
cmpsb
jmp
jae
cs
cmpl
dec
add
mov
mov
or
mov
sbb
push
sti
in
lret
fisttpll
sti
push
daa
lock
pop
pop
cmp
adc
es
movsb
or
test
addr16
and
add
icebp
push
pushf
cmp
jno
xor
shl
inc
out
and
xor
lahf
test
in
notl
aad
xchg
shr
div
jbe
jg
xor
add
adc
inc
pop
roll
into
lds
into
xor
ja
lret
dec
xchg
std
push
ja
sarl
aas
shl
enter
sub
shl
pop
test
das
jns
fiadds
fdivs
jg
push
aaa
leave
cltd
sub
sbb
jbe
sti
daa
inc
add
stos
xchg
inc
repnz
bound
push
icebp
in
mov
xchg
std
mov
cmp
xchg
rorb
shr
or
imul
cmp
out
pop
pop
and
xor
adc
test
fists
insb
fdivp
mov
stc
rorb
scas
scas
enter
pop
cmp
dec
ficoms
or
sub
adc
inc
aam
lea
js
add
mov
pushf
mov
movsl
xchg
les
fists
jecxz
mov
loopne
int3
pop
push
aaa
cmp
outsl
mov
xchg
mov
aas
inc
test
es
dec
nop
cmp
inc
sub
mov
in
js
lods
js
iret
jecxz
loope
in
iret
xchg
mov
imul
mov
push
xor
in
popf
push
es
pop
icebp
pop
xor
sar
and
cmp
jl
and
je
pop
fbld
ret
mov
int3
rol
fisubrs
notb
orl
jg
aas
ret
add
mov
icebp
or
sbb
sbb
add
mov
jb
push
adc
push
mov
je
fucom
or
sub
cmc
push
sub
mov
lds
stc
pop
mov
shl
das
jge
dec
je
mov
push
sbb
mov
jecxz
in
cmc
sahf
jne
or
pop
lret
call
out
mov
inc
ja
xor
in
scas
cmp
xor
mov
lret
lahf
sti
outsb
clc
repnz
mov
mov
stos
xchg
insl
mov
mov
inc
insb
cmp
int3
ljmp
push
cmp
ret
out
out
das
mov
mov
xchg
cmp
cli
mov
and
sub
sub
lcall
imul
xchg
inc
test
or
push
pop
and
sub
and
arpl
test
xchg
push
xchg
mov
pop
sbb
enter
addr16
mov
inc
jl
xchg
mov
dec
push
pop
inc
daa
decb
ss
mov
into
test
xchg
dec
mov
add
mov
cmp
add
sub
fldenv
push
jb
fcoms
jb
inc
pop
xor
sbb
cltd
sti
xor
jb
imul
jae
cmc
cwtl
jl
cmp
mov
sub
dec
sti
shld
xchg
ret
mov
fs
push
in
sub
lock
ret
cs
push
cmp
sbb
mov
test
push
call
movb
jmp
mov
pop
add
push
inc
es
mov
and
and
ret
xor
adc
xor
push
adcb
sbb
mov
addr16
fiaddl
sbb
adc
fnsave
pushf
xchg
loop
pusha
pop
add
rcll
loop
pop
ret
int
dec
xchg
pushf
pop
and
scas
adc
xor
subl
int
in
dec
scas
inc
das
add
lds
imul
sub
loopne
je
into
jmp
cmp
fimull
fisttps
push
or
jns
jbe
cli
lods
mov
add
mov
dec
outsb
test
out
lea
scas
push
loope
pushf
or
sub
in
sbb
adc
sub
mov
add
sub
and
aaa
lahf
shl
mov
sub
dec
lret
cmpsb
lods
adc
cmp
xchg
mov
xchg
imul
addr16
sub
pop
jp
pushf
fstps
jae
push
mov
in
mov
mov
xchg
inc
cli
into
insl
cld
xlat
add
jecxz
call
sbb
das
inc
repnz
ret
int
pop
sbb
and
cmpsb
rcrl
mov
lahf
daa
stos
adc
mov
into
jl
and
mov
add
stos
push
push
push
adc
jmp
pop
out
lock
rclb
pop
stos
adc
int
add
dec
mov
stos
pop
in
aad
pop
lret
test
sub
test
cmc
adc
inc
pop
jge
js
adcl
out
or
outsb
cmpsb
xchg
jnp
pop
dec
ljmp
enter
stos
fldl
leave
mov
sbb
stos
inc
mov
shlb
dec
stos
sahf
aas
lcall
xchg
push
pusha
mov
ret
xchg
pop
jmpw
push
cmpsb
repnz
mov
jl
xor
mov
jno
dec
imul
pop
mov
cli
mov
jmp
jb
cmp
inc
mov
in
bswap
loopne
and
cmpsb
jb
je
mov
aas
push
leave
in
jne
and
rolb
pop
fistps
sbb
adc
aad
int3
pop
cmp
pop
cltd
ret
in
mov
mov
fld
or
and
je
cmp
mov
je
inc
stc
inc
mov
es
or
cltd
loope
shll
lds
mov
pop
xchg
lods
xor
dec
enter
pop
loopne
stos
out
pop
icebp
mov
dec
fs
loop
mov
out
lods
adc
sbb
ret
inc
pop
mov
scas
mov
push
push
dec
inc
out
cld
fwait
dec
lahf
in
pop
push
dec
cld
push
fs
push
jns
mov
inc
mov
int3
fimuls
mov
jp
and
cmp
cmp
dec
test
fcomp
into
push
imul
loope
icebp
dec
or
add
std
push
cmc
mov
aas
push
adc
sbb
into
test
sti
sub
dec
cmp
inc
ret
cmp
test
cmp
sub
fisttpll
das
fdivrs
in
mov
adcl
xchg
sti
mov
scas
movsl
inc
lret
stc
adc
std
add
daa
mov
mov
jns
pop
out
lret
dec
out
call
prefetchwt1
or
lock
sub
and
xor
movsl
dec
push
jae
adc
cmc
jo
inc
ss
pop
popf
inc
stc
xchg
push
clc
cwtl
adc
push
or
in
jmp
adc
movsl
inc
rcl
xor
in
cmpsb
out
jo
adc
pusha
cld
push
subl
std
jl
sub
mov
xchg
mov
xor
les
sbb
sti
in
lock
in
movsl
xor
aaa
mov
loop
inc
dec
mov
pop
ds
rorl
out
mov
inc
aam
xchg
arpl
lret
scas
mov
sub
adc
outsb
push
mov
sahf
mov
scas
adc
mov
comiss
adc
mov
ret
xor
in
testb
outsl
xlat
cli
xor
jb
pop
mov
push
sub
fs
fistpll
out
subps
out
les
and
or
dec
popf
and
in
aam
stc
outsl
xor
lret
adc
scas
xchg
cmp
ds
fs
xchg
jecxz
lret
pop
clc
jno
loope
call
pop
sbb
pop
jne
mov
sub
push
outsl
lret
andl
fisubrs
mov
sub
xchg
cltd
mov
cmp
bound
fadds
loopne
xchg
pop
mov
mov
xchg
stos
mov
cmp
es
sub
jbe
mov
mov
ds
cmpsl
cmc
aad
push
push
dec
inc
sbb
or
dec
xor
adc
pushf
sbb
push
mov
scas
mov
jle
lea
cld
adcl
daa
dec
or
mov
repnz
push
inc
or
inc
sahf
inc
in
pop
sub
sbb
dec
outsl
ret
xor
pop
push
add
and
enter
addl
adc
ja
add
sub
jae
xor
cmp
xchg
pop
das
pop
and
je
aad
arpl
xchg
push
pushl
xchg
rorl
cmp
fldt
data16
push
lcall
mov
jge
scas
insb
pop
mov
daa
movsl
lock
fbstp
fwait
pop
xor
das
adc
push
xchg
fdivrs
jbe
inc
test
aas
mov
pop
jmp
pop
mov
jo
add
leave
pop
adc
shll
mov
pop
pop
in
outsb
rol
or
test
or
pop
xor
fildll
test
push
shlb
xorb
jae
jle
adc
andl
jbe
jl
shlb
or
xchg
and
dec
mov
inc
je
int
mov
sahf
outsl
cmp
dec
fdivr
ret
jg
adc
add
pushf
sbb
cld
sbb
dec
and
lods
mov
test
loope
cmpsb
int
xchg
hlt
sub
add
xor
pop
xor
mov
xchg
and
cmp
sub
pop
loopne
inc
add
nop
push
jecxz
bound
ss
testl
aam
lods
shll
rolb
dec
repnz
je
loope
pop
mov
test
gs
jno
mov
fbld
scas
mov
aad
mov
flds
repnz
mov
imul
adc
xor
sub
jmp
push
sysretw
cmp
sbb
aas
xor
sbb
dec
inc
sbb
adc
or
xchg
movsb
in
jl
add
xorl
pop
add
xlat
push
and
test
mov
mov
xchg
out
mov
cltd
loop
mov
push
lds
dec
push
dec
add
lahf
jne
and
push
mov
insb
outsb
loope
xchg
pushf
jbe
pop
out
xor
lahf
xor
iret
outsl
aaa
mov
push
fucomip
jg
push
movl
ret
mov
xchg
or
arpl
add
mov
xor
in
icebp
adc
xor
adc
sub
loopne
enter
and
cmp
cmc
ja
mov
stos
and
clc
popf
pop
sbb
jp
mul
inc
jge
mov
dec
fdiv
mov
shlb
bnd
sub
and
cli
popf
into
lahf
loop
sbb
xor
mov
mov
mov
imul
add
ja
out
shl
adc
iret
pop
push
lret
mov
scas
fldl
adc
dec
stos
mov
outsb
pop
mov
push
push
inc
push
gs
jmp
mov
cmpsb
xor
ja
xchg
test
push
or
int
cmp
or
push
mov
pop
clc
in
push
out
cmpb
sub
pushf
int3
bound
aas
insb
mov
pushf
outsw
mov
lcall
imul
pop
xorl
arpl
jmp
fildl
sbb
mov
fistps
jae
lret
pop
jae
repnz
repz
xchg
mov
mov
dec
aam
push
push
aad
popf
mov
aaa
ja
inc
xor
pusha
in
dec
lds
and
dec
in
int3
cmp
fsubp
lock
int
pop
testb
sub
fcmovnu
movsl
sbb
add
jmp
mov
faddl
lods
lret
out
insl
inc
nop
or
aam
int
jns
scas
cmp
mov
mov
adc
adc
push
cmpsb
push
out
jg
fcomps
lock
mov
lods
jmp
add
or
sbb
or
push
adc
ds
jecxz
xchg
cmc
push
rolb
cltd
pop
jmp
mov
es
ret
xchg
out
sbb
dec
lahf
sbb
incb
mov
mov
iret
cmp
nop
mov
xor
inc
jbe
mov
pushf
add
arpl
pop
lahf
adc
dec
jns
and
pop
sbb
jg
mov
mov
loopne
add
rcl
imul
fdivl
arpl
xor
push
adc
sbb
push
lock
pop
repz
xor
popa
repz
fwait
call
dec
test
movsb
xchg
pop
add
repz
test
addr16
stos
inc
pop
cmp
iret
pop
fdivrl
add
xor
add
ljmp
fnstenv
jle
or
pushf
xlat
push
adc
mov
rclb
push
dec
mov
mov
jae
ja
mov
pop
dec
inc
jmp
xchg
je
mov
mov
test
pop
adcb
ljmp
lods
lds
add
xor
addr16
adc
cmpsb
or
push
xchg
int3
mov
decl
push
pop
ret
cli
js
dec
add
insb
adc
mov
inc
outsb
in
test
int3
cli
std
cwtl
lods
push
inc
push
in
repnz
cltd
lret
mov
aam
sbb
add
cmp
in
std
repz
clc
sarb
pop
mov
jb
in
loop
mov
movsl
push
gs
dec
and
aad
mov
jns
xchg
and
js
ja
lea
sub
mov
adc
aaa
rol
mov
add
sbb
pushf
aaa
jg
sbb
mov
jge
xchg
mov
and
mov
enter
lods
cs
inc
push
outsb
or
push
inc
inc
pop
lods
fidivl
cli
ljmp
and
scas
loope
mov
lahf
fists
in
pop
dec
dec
or
jge
pop
push
iret
jecxz
into
inc
scas
rcrl
dec
dec
inc
mov
dec
rorl
sub
cmc
xchg
dec
ret
lret
mov
sti
in
dec
js
cmp
or
clc
repnz
imul
push
mov
lret
push
xor
mov
lea
std
hlt
pushf
leave
xor
mov
loopne
jecxz
and
cvtpi2ps
into
xchg
adc
mov
movsb
mov
push
mov
and
aad
mov
ss
daa
out
orl
sbb
data16
int3
fcomip
into
xor
sub
jg
shlb
out
test
mov
cld
and
xor
fneni(8087
loope
xor
push
pop
and
ret
ss
adc
lods
insb
adc
push
push
jbe
fcoml
inc
fs
call
add
jo
xor
mov
int3
ljmp
xchg
mov
movmskps
je
pop
mov
mov
xchg
sub
aam
and
lock
outsl
pop
push
arpl
inc
fcmovnb
pop
mov
bound
inc
cld
arpl
cld
sbb
or
js
and
rclb
inc
add
add
int3
cmp
add
jb
outsl
jae
sbb
or
jae
clc
mov
aas
mov
xchg
adc
xchg
mov
shll
or
stc
fwait
in
das
mov
loop
and
xor
imulb
iret
rclb
sbb
stos
adc
lahf
and
sbb
xor
lret
dec
push
cmp
xchg
xchg
mov
cmp
cld
jg
cmp
mov
rcr
movb
rorl
push
jnp
out
mov
xchg
rorb
add
inc
std
fisttpl
cmc
aam
xchg
lahf
jne
mov
xor
mov
sbbb
or
push
or
adc
sbb
sbb
in
das
push
setns
mov
shr
fiaddl
sub
into
fcoml
in
aad
sub
mov
rorb
mov
xor
sub
xor
sbb
jl
nop
adc
mov
adc
fwait
leave
mov
adc
pop
push
aas
inc
scas
mov
jb
int3
xchg
std
jb
dec
mov
cmp
jmp
or
lret
or
push
out
sti
stos
jl
and
addl
subl
mov
mov
jg
mov
mov
lock
rcr
or
xchg
cmp
mov
or
adc
ljmp
pusha
scas
insb
pusha
rclb
mov
ficoms
popa
mov
pusha
mov
test
lock
dec
xchg
cld
jbe
cmp
cld
push
add
test
jecxz
scas
imul
pop
jle
les
cmpl
in
adc
xor
push
icebp
and
cmp
mov
or
fildll
adc
mov
dec
add
push
pop
or
sbb
pushf
negl
dec
es
dec
clc
add
add
push
incb
in
jg
add
mov
and
mov
sbb
cmp
js
and
cmp
push
sahf
outsb
sbb
inc
rcrb
adc
jnp
jb
xor
mov
fstpt
fwait
lock
outsb
xchg
pushf
iret
inc
sub
jo
push
andb
inc
imull
fmull
inc
xchg
int
pop
mov
shrl
ds
mov
out
insb
push
icebp
mov
gs
icebp
add
xchg
sub
sbb
mov
mov
push
ljmp
add
popa
in
jo
mov
jg
xor
inc
in
mov
xchg
inc
ja
inc
dec
push
rorl
mov
adc
outsb
insl
mov
pop
or
shll
and
mov
push
inc
xlat
call
insl
jg
mov
insl
sar
loope
mov
imul
xchg
or
aaa
dec
mov
pop
mov
or
aas
mov
popa
int3
movsl
jle
mov
pop
lock
jnp
andb
pop
inc
mov
stos
lcall
or
xchg
mov
jg
sub
sahf
movsb
out
adc
cmp
inc
sbb
lods
ficoml
addr16
fiadds
sub
push
adcb
jmp
sti
std
sub
nop
jle
lret
jg
cmp
outsl
mov
popf
and
clc
push
pop
pusha
dec
mov
xchg
push
sbb
pop
test
push
pop
in
call
xchg
outsb
adc
dec
and
rorb
adc
mov
xchg
lods
xchg
jns
ss
and
xlat
dec
inc
and
or
data16
sub
xlat
and
addb
xorl
cmp
mov
inc
out
adc
repnz
bound
xchg
mov
jp
inc
jb
sbb
mov
push
cmp
mov
dec
sub
mov
and
repz
push
into
hlt
sub
push
ss
ret
xchg
mov
jae
cmp
pop
sbb
sbb
mov
and
jbe
jmp
inc
pop
sub
cmpsb
andb
incl
aas
nop
xlat
jl
adc
adc
adc
pop
andl
pop
pop
in
fnstcw
pop
fwait
adc
mov
loop
jp
shr
xchg
cmp
test
mov
cmc
jo
ja
push
and
xor
jbe
in
push
orl
pop
pop
in
adc
and
push
pop
push
mov
fisubs
loop
das
imulb
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
xchg
dec
out
fstpt
push
jae
and
jbe
fdivrs
push
xor
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
ret
test
imul
jnp
mov
into
fisubl
jmp
xor
mov
lret
jmp
cld
jp
loope
icebp
sti
push
xchg
push
jl
fdivrs
push
or
popf
dec
outsl
mov
xlat
imul
add
inc
daa
add
das
mov
sbb
lea
cltd
movsb
sub
stos
cli
jbe
jne
pop
icebp
mov
into
inc
pop
xor
out
xlat
imul
add
mov
push
cmp
or
and
xchg
test
jb
stos
in
pop
jne
and
and
mov
arpl
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
mov
test
rorb
jae
xchg
pop
cmp
fdivrs
push
xchg
test
adc
sarb
push
imull
fdivr
adc
jae
fcoml
jae
fdivrs
push
jae
ficoms
jbe
fdivrs
push
jbe
fstl
jbe
fdivrs
push
ja
fcompl
mov
fdivrs
arpl
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jb
aam
icebp
dec
mov
push
mov
faddl
rcr
test
mov
push
jae
fcoml
jbe
fdivrs
pop
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fcoms
push
jae
fsubl
test
mov
test
adc
popf
std
lcall
fcoml
push
rcr
xchg
js
jae
fcoml
push
rcr
push
jae
fdivrl
rcr
test
mov
push
jae
fcoml
jbe
fdivrs
cmp
fcoml
jbe
fdivrs
push
jno
fcoml
lret
mov
push
jae
fcoml
jbe
cwtl
mov
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
push
jae
fcoml
jbe
fdivrs
cmp
ror
test
shlb
into
out
add
in
sbb
xorb
cli
xor
or
enter
or
cmpl
pop
add
loope
xchg
dec
rorb
jg
sub
mov
out
dec
int3
mov
add
mov
xchg
pop
in
popf
dec
int3
pushl
adc
outsl
dec
aam
xchg
adc
or
push
push
cmp
lret
jmp
mov
mov
adc
daa
dec
loope
enter
frstor
mov
xor
mov
pushf
andb
in
and
mov
les
call
in
sahf
sbb
push
jno
inc
pop
out
loop
adc
inc
aad
pop
dec
scas
mov
scas
xorb
inc
test
adc
cmp
sbb
lods
fbld
ds
in
nop
stos
pushf
popf
jae
ja
fidivrl
testb
jae
neg
ljmp
cmp
int
adc
mov
in
or
add
or
scas
cmp
ljmp
mov
cmp
mov
xchg
cltd
push
pusha
lock
add
pushf
pop
inc
cmp
test
loope
ret
std
mov
or
jne
push
test
iret
xor
and
ficoms
cmp
fcmove
scas
mov
xchg
inc
fiadds
dec
pop
cmp
pop
daa
pop
rcrl
or
sub
iret
or
or
add
shrb
data16
lea
fidivs
jge
fldt
insl
fisubrs
or
je
xor
inc
pushf
or
aad
inc
test
jb
pop
jnp
inc
imul
mov
subb
jmp
mov
lea
popl
mov
mov
pop
enter
push
iret
sti
outsb
std
mov
sbb
les
fiaddl
mov
scas
dec
dec
sarb
cmp
mov
out
loopne
pusha
test
ucomiss
divl
filds
in
sbb
cli
xor
clc
cmp
in
and
adc
cmp
lret
stos
fisubrs
sbb
stos
repnz
cmp
sbbb
shlb
adc
push
pop
pusha
jl
push
sub
sbbl
mov
mov
mov
in
push
bound
jg
and
cs
inc
xchg
lods
fwait
lds
push
andb
xchg
or
mov
into
mov
mov
xchg
cs
cld
movsb
in
xor
leave
or
mov
cmp
sub
in
jg
xchg
ror
inc
in
outsl
and
pop
mov
dec
xchg
ljmp
dec
sub
das
mov
sarl
or
jns
push
inc
inc
mov
xchg
push
data16
test
fdivl
jns
sbb
lock
sbb
shr
cmp
jns
ror
mov
xchg
adcb
mov
mov
push
dec
mov
mov
xor
sub
ja
mov
add
jmp
lret
jl
mov
sbb
fistps
push
push
idivb
daa
add
stos
and
cmpb
hlt
inc
loopne
rclb
cmp
sti
push
dec
in
and
test
cmc
out
cmp
lcall
add
cmpsl
es
popf
jecxz
adc
js
push
mov
jle
mov
out
cs
sub
cmp
or
repz
xchg
dec
imul
cltd
aaa
cmpsl
pop
jno
andb
and
addr16
incl
pop
lods
cwtl
adcb
ja
and
enter
sbb
xchg
pop
push
or
pusha
aad
in
cld
decl
pop
fwait
pushf
sub
loopne
hlt
subb
or
xor
js,pn
pop
daa
jo
cmp
adc
imul
inc
das
movsl
cmc
push
mov
inc
mov
out
ret
jne
sbb
mov
xchg
lods
mov
push
mov
outsb
insb
pop
adc
loopne
add
mov
mov
cs
adc
xchg
dec
scas
bound
pusha
pushf
stos
ljmp
push
xchg
xor
lret
stos
push
pop
mov
pop
jmp
add
scas
xchg
pop
mov
push
push
mov
mov
stos
movb
imul
push
fdivl
int
into
loopne
inc
sub
jns
mov
je
int3
mov
movsl
sub
lret
ja
inc
shlb
jnp
lods
adc
dec
cmp
test
gs
jle
push
cmp
mov
xchg
outsb
fisttpll
stos
in
xor
xchg
inc
and
xor
pop
sub
andl
mov
call
addr16
adc
scas
rolb
pop
call
test
or
sub
gs
mov
rcrl
add
les
js
es
adc
data16
jmp
ret
arpl
pop
add
xchg
mov
sar
cmp
ret
push
jno
xchg
xor
push
xor
dec
cmp
je
and
lahf
fmull
adc
addb
jmp
scas
in
and
or
cmp
mov
mov
out
test
push
adc
ficoms
xchg
mov
outsl
ja
into
mov
out
nop
fisubs
cmp
push
and
test
outsb
mov
lea
and
sahf
add
mov
loope
test
leave
jmp
cli
or
inc
out
cmp
fidivl
sub
imul
ds
les
mov
mov
push
push
jbe
rolb
push
pop
call
pop
push
dec
ret
lods
inc
popa
sub
into
comiss
gs
adc
fucom
lods
mov
shl
rcr
jae
mov
iret
call
mov
and
inc
pop
pop
fsub
test
dec
nop
test
xchg
sbb
cld
insb
push
loope
fstpt
loopne
and
fwait
cwtl
inc
add
sti
jno
push
mov
fbstp
xor
fisubrl
mov
lds
pop
mov
jmp
data16
bound
lock
add
sub
das
jl
std
push
cmpsl
loop
js
xchg
repz
mov
or
sub
lods
jle
pop
push
lahf
inc
mov
xor
mov
test
into
sbb
mov
loope
iret
push
rorb
in
mov
jae
mov
xchg
lret
push
mov
sub
arpl
stc
xchg
sub
sar
push
sbbl
subw
cmp
bound
push
inc
jmp
lahf
lahf
bswap
mov
test
out
mov
push
int3
mov
leave
je
inc
jp
aad
pop
xorl
mov
fdivr
lcall
insb
adc
mov
sbb
hlt
pop
push
xor
mov
pop
stos
xchg
mov
shrl
jl
fwait
loope
dec
aad
mov
add
xchg
imul
data16
add
push
decl
icebp
push
mov
imul
or
adc
jge
das
outsb
pop
aad
mov
popa
jns
dec
iret
adc
pop
mov
insl
call
cmc
pop
push
pop
add
adcl
popf
out
and
adc
jo
or
das
loope
push
scas
adc
or
push
mov
mov
imulb
insb
add
mov
pop
cmp
dec
adc
pop
stos
lds
js
xorl
idivl
adc
scas
lcall
cld
sub
lret
jbe
out
aaa
jb
fs
adc
adc
mov
xchg
movsb
out
dec
ret
cmp
sbb
cmp
pop
cmp
add
xchg
ret
jo
sub
pop
xchg
sahf
out
jecxz
adc
push
popa
outsb
xor
sub
je
mov
fimull
leave
jge
xor
lret
into
and
add
or
ja
fcomp
cmp
push
pop
mov
push
ret
jp
push
lret
sahf
clc
int3
xor
xchg
test
xchg
inc
adc
popf
ret
test
out
pop
bound
push
xchg
rcrb
mov
jb
cwtl
xorb
and
outsb
dec
test
xchg
xchg
into
jb
xor
mov
cli
dec
lahf
popl
adc
mov
sbb
pop
cli
repnz
icebp
in
push
jecxz
mov
bound
mov
enter
loop
mov
lcall
imulb
jg
jl
aaa
cmp
lea
xchg
cmpsb
lea
fwait
mov
push
fdiv
pop
sub
inc
jmp
cmpsb
fs
mov
inc
mov
in
div
hlt
xchg
pop
push
mov
scas
dec
cltd
mov
ror
in
rorb
pop
sbb
jl
xchg
mov
or
out
gs
push
mov
imul
ret
mov
add
mov
pop
sub
pop
mov
mov
cmpsl
xor
cltd
inc
hlt
mov
js
out
dec
mov
xor
cmp
in
mov
adc
outsb
mov
xor
mov
cmpsl
dec
jne,pn
test
pop
cmp
xchg
jp
movsl
and
dec
adc
jecxz
inc
dec
adc
xchg
jmp
xchg
sub
pop
inc
movsb
pop
sbb
jne,pt
adc
insl
aam
push
fimull
ds
test
cs
xchg
sbb
jle
out
xchg
je
aad
cmp
mov
insb
outsl
mov
repz
iret
inc
roll
lahf
or
ficoms
or
cmc
cmp
mov
js
dec
cmp
mov
mov
mov
pushf
shrl
inc
lds
in
sbb
lret
insl
mov
pop
xor
test
cmp
int
subb
pop
dec
imul
dec
lods
inc
pop
lods
rclb
idivl
jmp
and
sub
das
sarb
rol
push
sub
pop
push
xchg
sub
psubsw
std
jns
imul
xor
repz
insl
cmp
cmc
pop
xor
jb
pop
lret
fdivp
jae
enter
dec
clc
loop
inc
in
cs
pushf
cltd
and
xor
rcrl
popf
jbe
js
jge
into
xchg
fdivp
add
rcrb
xor
out
dec
mov
insl
pop
fs
fimuls
hlt
dec
aam
into
loope
cltd
ljmp
add
and
or
lahf
push
cmp
aad
adc
enter
insl
lds
or
loope
push
insl
sub
sub
xor
dec
shll
pushf
push
push
xor
mov
inc
and
in
cmc
lahf
enter
pop
clc
sbb
dec
push
loope
push
mov
jbe
repz
xor
xchg
scas
insb
dec
xchg
daa
and
mov
leave
pop
xchg
jo
mov
pop
push
fcoms
popa
add
xchg
pop
pop
dec
xchg
mov
lret
fidivl
or
inc
add
es
orb
mov
call
xchg
enter
shl
ljmp
sti
dec
fstpl
jmp
lahf
sub
push
sbb
mov
pop
pop
hlt
xor
add
movsb
movsl
aas
cmc
add
cltd
scas
xchg
cld
cli
sbb
mov
xor
or
add
and
jmp
hlt
daa
test
fldt
in
js
push
gs
out
lahf
jmp
pop
mov
rcr
mov
pusha
push
xchg
in
lahf
scas
and
rorb
daa
inc
cmp
js
gs
aas
xchg
shlb
aad
jns
lcall
cmp
bound
or
cli
outsl
je
sub
or
jns
xlat
lock
scas
sbb
adc
jnp
inc
push
leave
push
enter
test
sub
rorl
sti
sbb
pop
hlt
scas
sbb
cmc
test
cli
xchg
dec
xchg
imul
aaa
xlat
outsl
xor
xchg
fidivrs
mov
sub
fwait
rcll
xor
sub
lods
test
xor
cltd
jnp
cmpl
imul
fcompl
xchg
or
into
arpl
out
in
dec
arpl
mov
sbb
inc
xlat
mov
jne
xor
dec
inc
ror
rol
pop
scas
mov
pop
and
jo
lods
pop
xorl
add
xlat
sbb
xchg
add
sbb
inc
add
jecxz
inc
sbb
fcmovnu
or
cld
push
cmp
inc
jl
jae
mov
push
lods
cli
inc
call
mov
jb
addr16
hlt
push
lods
dec
xchg
std
sub
rolb
inc
push
mov
cmp
fidivs
int
bound
pop
jae
std
ljmp
or
faddl
dec
inc
mov
jp
jle
lahf
jge
decb
out
decl
push
push
lds
sti
jecxz
pusha
out
add
mov
cmpsb
and
push
out
fmulp
rorb
stos
mov
cmp
sub
mov
pop
mov
mov
push
cmpsl
shlb
or
inc
cli
jmp
or
push
sti
and
test
jge
popa
sbb
cwtl
data16
and
sub
pushf
outsl
mov
je
adc
out
repnz
loopne
inc
das
sub
sbb
push
and
push
sbb
insb
addr16
pusha
in
jp
cld
xchg
adc
shr
pop
jo
adc
pop
test
and
adc
call
push
cmp
inc
sahf
dec
xlat
bound
inc
aad
xchg
sub
test
lcall
fistpl
sub
add
mov
nop
cs
mov
decb
stos
lret
adc
add
jns
xchg
mov
push
test
jb
add
mov
pop
test
loop
mov
cmp
jo
ficomps
sbb
lahf
aam
pop
arpl
fidivl
mov
push
pop
push
jb
jns
pop
cmc
mov
dec
jle
inc
outsl
aaa
push
jmp
dec
and
push
sbb
cmp
sbbb
out
test
fstpt
std
cld
xchg
repz
mov
repz
std
mov
arpl
mov
cmpsb
cmp
or
cmpsl
or
jg
pop
loope
adc
lods
pop
pop
add
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
