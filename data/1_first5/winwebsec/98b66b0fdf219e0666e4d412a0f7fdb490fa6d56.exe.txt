push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
pop
push
xor
xchg
addr16
xor
lcall
lcall
arpl
mov
sub
push
jecxz
pop
ja
push
clc
in
jmp
into
clc
sbbl
loope
hlt
jb
jp,pt
movsb
out
push
out
rorb
or
xchg
mov
add
sbb
sti
arpl
adcl
adc
int
ljmp
lahf
lcall
mov
jg
fdivp
loop
pop
negb
push
jmp
jg
sbbl
xorb
push
jmp
inc
lds
push
adcb
jp
outsl
shrl
add
mov
mov
mov
dec
sbb
push
addr16
sbb
rorb
movsb
test
jecxz
lock
jne
xchg
out
popf
add
or
lret
xor
loopne
mov
movsl
aas
add
ja
mov
addl
push
enter
bound
dec
mov
popa
iret
iret
and
scas
xor
into
adc
push
adc
std
or
imull
scas
pushf
rcl
shl
jge
xchg
test
bound
call
call
lods
cmp
pop
and
mov
test
insb
mov
xor
sbb
pop
cs
adc
push
fisubrs
pop
pop
inc
jle
jae
daa
mov
or
or
popf
orb
dec
aaa
mov
pop
arpl
jb
insb
ret
lahf
xchg
mov
mov
aam
and
frstor
mov
adcb
inc
mov
iret
jge
mov
cmp
outsl
inc
loop
jo
adc
call
add
inc
movsb
lea
orl
lahf
stc
inc
mulb
inc
jle
jecxz
sbb
lock
and
iret
loopne
and
iret
paddusb
jb
jno
sbb
or
or
mov
jmp
dec
inc
cmp
std
es
mov
test
es
jecxz
push
and
bnd
lret
push
lods
or
pop
movsl
stos
sbb
sbb
into
mov
mov
push
xchg
scas
cmpsb
push
std
int
insl
cmp
pop
xor
je
xor
inc
test
inc
cmp
aas
cmp
mov
xchg
or
mov
ret
sub
xor
jne
loop
and
or
loope
mov
ficoml
sbb
mov
dec
jb
jae
cmpsb
or
popa
pop
std
into
add
ss
cmp
es
push
jb
js
dec
cltd
ficompl
loopne
rorb
in
cmpsb
out
sub
mov
and
fwait
and
mov
dec
js
sub
cmp
cmpsb
repnz
and
adc
push
xchg
cmp
mov
addl
jmp
jne
insb
cmp
add
cmp
xchg
in
cmpsl
aaa
ficompl
cmp
ljmp
inc
repz
jge
sub
lock
mov
cltd
pop
pop
adc
test
jmp
pop
cmp
sbb
xor
mov
outsl
jo
push
in
jae
xchg
sbb
cmpsl
jae
xor
push
dec
std
cmp
adc
gs
aaa
stos
and
xchg
sbb
adc
lods
lock
mov
or
xchg
xor
mov
shlb
loopne
sbb
jmp
and
inc
ja
cwtl
push
dec
shrb
outsl
testl
into
iret
dec
scas
sbbl
repz
loopne
xor
push
lret
in
cmp
fstps
jbe
leave
leave
xchg
ret
mov
js
push
stos
dec
xor
ds
insb
mov
push
pusha
sub
mov
cltd
mov
adc
out
mov
ds
pop
or
jnp
mov
repz
out
xchg
xchg
pop
mov
dec
rorl
orb
pop
lret
jns
push
mov
les
xor
and
imul
imul
out
fdivrl
xor
or
aam
push
imul
lahf
out
enter
and
sub
jno
mov
adc
loopne
inc
xor
in
les
jbe
clc
inc
and
lods
stos
jno
dec
jne
pusha
mov
xchg
cmp
fisttpll
push
adc
filds
idivb
dec
push
int
addb
inc
lret
mov
xor
bound
roll
lods
and
mov
and
shrb
stos
pop
aas
outsl
sbb
sti
sub
mov
jmp
ss
jnp
xchg
push
popl
mov
and
add
cs
iret
inc
int3
sub
iret
add
jecxz
push
mov
push
and
popa
xchg
mov
fucomi
int
in
fiaddl
sub
fistpll
inc
sub
in
xchg
or
out
aas
xor
and
stos
inc
mov
out
add
sub
arpl
xchg
cmp
or
dec
mov
aad
pop
mov
inc
mov
xchg
testb
fsts
push
fidivrl
xor
out
loop
movl
adc
sub
push
ljmp
and
mov
aaa
rorl
out
pop
shll
mov
inc
int
xchg
and
pop
dec
das
stos
testb
insb
pop
adc
pop
loope
scas
ss
loope
push
loop
in
push
pop
out
sbb
fiadds
mov
inc
cmc
lods
out
xchg
movsb
push
fprem1
mov
dec
push
dec
scas
lds
sub
mov
outsb
mov
and
jns
ret
inc
in
xlat
xchg
jmp
dec
ret
test
subb
lds
rorb
das
mov
pop
pop
enter
in
pop
or
movsl
push
ljmp
jle
push
cmp
repnz
repnz
cli
add
pop
xchg
pop
icebp
bound
or
xchg
add
imull
mov
lcall
nop
inc
mov
mov
xchg
or
shlb
mov
push
mov
inc
js
mov
mov
lret
push
repnz
loopne
icebp
jnp
insb
aad
mov
mov
leave
sbb
inc
daa
pop
mov
add
xor
scas
sahf
add
jbe
add
add
push
mov
clc
cltd
fucom
push
sub
movsl
pop
adc
push
mov
dec
mov
pop
mov
and
lds
test
arpl
or
pop
inc
pop
sbb
mov
lcall
test
cmpl
sub
mov
pop
shlb
jne
mov
popa
xor
jne
cli
or
mov
cs
xchg
mov
stc
rcll
mov
jp
and
and
sbb
inc
adc
dec
mov
testl
lea
sbb
inc
push
xchg
sbbb
in
xchg
scas
and
popf
cmp
mov
shr
movsl
cmp
int3
arpl
mov
xor
outsb
mov
les
jno
fldt
jle
add
mov
dec
mov
mov
stos
outsb
push
test
mov
loope
cmc
and
xchg
dec
decb
xchg
clc
xchg
dec
lcall
inc
mov
jecxz
lret
mov
bound
iret
push
push
xchg
adc
dec
repnz
sti
sbb
dec
mov
jl
arpl
adc
bound
leave
mov
pop
push
gs
mov
repz
sar
rol
scas
loop
xor
mov
test
aad
cltd
stos
push
inc
xor
mov
jp
cmp
push
test
divb
in
add
into
loop
jge
cmpsb
lods
stos
subl
or
ds
enter
xlat
loope
ficoml
incb
cld
ror
notl
mov
jne
call
mov
aad
adc
pop
push
fsubr
mov
cli
shll
and
cmc
cmp
adc
and
or
ficomps
jbe
aas
mov
dec
pop
ret
sbb
out
rolb
inc
mov
or
test
incl
push
sbb
repz
jnp
daa
pop
leave
sub
dec
xor
cmp
mov
or
cld
cmc
arpl
pop
xor
adc
aam
adcl
rcll
add
lcall
or
cmp
xchg
xchg
push
jnp
stc
ss
cmc
cmpl
test
push
inc
pop
lret
das
and
hlt
repnz
or
jp
js
jbe
call
dec
and
and
xor
movsl
fld1
int3
sbb
popf
jge
mov
es
scas
and
setb
inc
mov
les
cmpsl
push
jp
sti
cmp
ret
inc
mov
pop
inc
psrld
loopne
xchg
mov
jns
imul
movsb
mov
outsl
fildl
mov
ja
push
out
ret
enter
sar
daa
mov
and
ljmp
adc
shlb
sub
push
in
or
js
popf
mov
lods
cmc
or
sbbb
or
sub
cs
mov
mov
gs
mov
mov
inc
shrl
inc
insb
inc
mov
push
aas
push
in
push
xchg
sbb
adc
mov
mov
movsb
aam
sbb
test
adcb
mov
into
xchg
xor
fisubs
dec
xor
mov
push
test
rcll
sub
mov
sbb
jnp
into
hlt
lock
xor
fmul
xor
loope
mov
mov
lret
pushf
add
push
pop
xchg
sbb
mov
movsb
rorl
jae
jbe
shlb
pushl
icebp
push
mov
push
test
enter
or
ror
fdivrs
sub
fwait
cmpsl
mov
cmp
dec
vmovdqu
fninit
test
xchg
and
js
mov
fs
fmull
js
cmp
fs
cmc
stos
iret
int3
inc
xchg
bnd
call
jge
pop
ror
daa
insl
aad
stc
subb
fbstp
mov
sbb
in
lret
xor
xchg
icebp
fsubrp
aad
bound
pop
inc
subb
into
mov
xchg
jb
addl
outsb
mov
hlt
repz
test
loopne
sub
ds
mov
lods
pmulhw
lahf
scas
sub
pop
xchg
mov
rcrl
in
mov
mov
rcrb
xchg
inc
sub
in
sbb
sbb
add
mulb
or
neg
add
or
mov
out
sub
jl
stos
stos
scas
jns
enter
or
sbb
inc
hlt
xlat
aad
jge
out
daa
sbb
inc
push
and
ret
push
sub
cld
jbe
ds
jecxz
xor
cmp
sub
test
xor
cmp
leave
pop
adc
mov
es
pop
and
adc
xchg
add
sti
sbb
xor
dec
push
and
mov
or
jg
shll
das
lods
cmp
cs
xor
pop
mov
xlat
push
mov
mov
sbb
sbb
sbb
inc
sub
xor
rcrl
fsubs
call
das
clc
sbb
repz
mov
jmp
icebp
les
sbb
outsl
jmp
repnz
mov
lret
jbe
test
gs
or
adc
cmpsb
imul
or
pushf
push
pop
or
mov
fsubrp
add
xor
pop
icebp
mov
cmp
dec
divl
xchg
aad
jle
mov
jne
adc
addr16
lds
mov
mov
cld
addr16
fisttpl
ja
inc
nop
imul
push
imul
mov
mov
mov
out
ret
xlat
fcomps
sub
push
cmp
fildll
ret
and
push
lret
int3
sti
and
pop
xchg
jp
add
sbb
nop
xchg
jne
movups
jno
lcall
inc
out
jno
outsb
push
push
mov
inc
stos
sub
test
dec
shlb
pushf
pop
out
insl
push
cmp
inc
popa
je
sub
and
in
dec
orb
lods
imul
sub
out
ret
bound
dec
inc
call
mov
fidivrs
sub
pop
mov
pushf
inc
ja
out
mov
data16
lock
push
pop
orl
mov
mov
mov
push
lods
movsb
nop
jle
fbld
aam
bound
stc
xchg
lret
pop
clc
push
pop
popa
es
clc
rclb
xor
adc
jae
into
ret
cmp
mov
and
xor
out
mov
mov
je
or
call
fnstenv
lea
and
insb
pop
cmc
dec
sarb
ss
pop
es
add
mov
int
dec
add
pop
xor
incb
dec
jg
daa
adc
add
mov
mov
enter
xchg
sbb
std
cs
fidivrl
add
push
arpl
pop
cmpsb
ja
xor
mov
and
lock
inc
cltd
in
out
or
popa
xchg
test
pushf
inc
fistpl
out
loopne
cmc
divl
nop
fcoms
or
pop
xrelease
lods
sub
shr
jecxz
std
add
sarl
pop
insb
cmp
fwait
repnz
jge
inc
addb
popf
xor
sub
cltd
mov
hlt
inc
xchg
mov
mov
lods
ror
push
out
xor
in
mov
fdivs
mov
ds
pop
into
inc
sbb
jbe
iret
insb
cli
xor
in
sub
xchg
stos
mov
jns
jecxz
jl
and
jmp
mov
xor
push
mov
mov
pop
popf
andl
push
ret
push
imul
fcomps
add
inc
jmp
mov
xor
test
pop
xor
data16
xchg
js
mov
pop
aad
sti
cwtl
das
out
lods
sbb
cmpsb
cld
mov
cmp
and
negl
aam
leave
add
jmp
pop
xchg
loope
fdivrl
icebp
push
xor
inc
shll
les
ja
test
or
and
mov
inc
xor
pop
mov
lock
sbb
dec
jne
arpl
add
aaa
lock
xchg
pop
mov
imul
inc
ficoml
lret
hlt
scas
dec
loopne
int3
pushf
adc
adc
stos
pushf
lret
out
and
push
cltd
or
mov
jns
hlt
stos
mov
int
aas
lods
int3
pop
jno
dec
cmc
fs
cmpsl
std
jo
lods
ret
insb
int3
pop
add
or
jnp
xchg
mov
lods
sub
loop
fmul
enter
sbb
mov
pop
sub
into
jecxz
cli
jecxz
in
push
fimuls
pop
cmp
adc
stos
pushw
int
ret
sub
out
mov
push
std
xor
push
imul
dec
adc
pop
orb
pop
pop
jno
dec
out
add
push
call
lds
mov
in
lret
mov
xchg
adc
or
imul
lahf
mov
imul
add
scas
or
int3
daa
pop
lret
pop
or
mov
sbb
negl
and
faddl
outsl
rcrl
sbb
test
mov
xlat
sbb
clc
iret
shll
push
sbb
adc
push
sub
push
lahf
xor
push
mov
sub
sbb
imul
insb
andb
or
or
mov
pop
dec
scas
mov
repnz
mov
movl
dec
xor
push
inc
sub
pop
andb
ret
push
sub
outsl
fisttpl
mov
jbe
out
mov
mov
int3
stos
fsts
mov
movsl
scas
int
mov
mov
leave
or
pop
call
dec
pop
jbe
push
scas
jl
xor
fsubrl
xchg
jecxz
ljmp
rorb
fdivr
lock
pop
setbe
sbb
arpl
pop
xor
push
sub
push
pop
sahf
dec
loope
dec
stc
outsl
mov
xor
push
dec
push
cmpsb
outsb
cmp
gs
push
jno
test
int
ljmp
pop
lret
insb
sbb
push
and
mov
cmp
jnp
scas
mov
add
mov
add
enter
loope
cmpsb
lock
cli
xor
movsb
dec
inc
mov
outsl
stos
lods
dec
jmp
dec
imul
sti
out
xchg
inc
xor
dec
gs
stos
scas
jae
jecxz
push
shrb
aad
add
idivb
fs
test
sub
cmc
roll
or
mov
mov
sub
stc
shl
inc
sbb
rcll
xchg
push
push
and
xor
xchg
inc
les
out
push
and
call
jne
sbb
shlb
pusha
lret
push
pop
stos
jae
mov
clc
inc
out
xchg
mov
jp
jns
pop
push
adc
dec
loop
inc
decl
pop
and
sbb
mov
lods
mov
cmpsb
leave
add
mov
iret
mov
jecxz
ja
fwait
xchg
ret
in
push
xchg
aad
data16
jmp
xor
in
add
xchg
popa
mov
sbb
out
push
pop
xor
cmp
pop
add
push
ss
out
frstor
mov
shrb
call
fmull
fcomi
cltd
cmovle
ljmp
pop
xchg
mov
repnz
lahf
adc
or
ret
js
xchg
adc
iret
xor
pop
loop
sti
mov
imul
popa
dec
mov
fwait
adc
pop
dec
adc
in
mov
in
fs
out
jmp
sub
rorb
xlat
adc
xor
dec
jecxz
mov
adc
sub
and
lds
jecxz
mov
inc
loopne
lock
arpl
inc
jp
test
xor
mov
push
adc
fadds
out
sbb
arpl
xor
sbb
mov
mov
jge
cmp
rcrl
jnp
sub
decl
pop
pop
stc
lcall
or
inc
adc
inc
je
sub
das
xor
mov
clc
mov
mov
or
js
xchg
dec
adc
roll
adc
mov
in
mov
stos
push
divl
xchg
lahf
cmp
push
ret
jl
nop
xor
or
iret
movsl
ror
mov
repnz
xor
addb
iret
inc
sbbb
rcrl
sarb
mov
ror
jnp
push
xor
call
inc
add
cli
or
mov
cld
sti
aad
imul
or
adc
push
mov
pop
in
mov
mov
stos
in
pop
mov
dec
cmp
xchg
in
or
sbb
sbb
in
stos
dec
dec
pop
lret
inc
xchg
fcomps
jmp
inc
mov
sarl
jno
hlt
or
sub
daa
pop
mov
outsl
mov
xor
inc
push
sbb
and
lahf
pop
jmp
xor
frstor
nop
sbb
loop
lods
aas
dec
adc
aam
xor
xchg
int
dec
popa
jle
hlt
dec
es
cmp
mov
push
adc
push
fwait
les
mov
add
lods
nop
xchg
or
push
test
xor
xchg
cltd
adc
inc
ret
mov
pop
test
xchg
cltd
cmp
fnsave
insb
call
dec
gs
fwait
inc
fs
xchg
lods
inc
push
aas
rorb
cmp
add
xchg
sub
pop
jmp
mov
out
push
les
ret
lock
mov
lock
mov
push
xor
and
inc
mov
xchg
sbb
ljmp
inc
insb
pop
or
add
fmuls
dec
lods
popf
lods
mov
ljmp
add
cmc
adc
stc
lea
add
shlb
roll
jnp
sahf
insl
or
add
dec
add
stos
jle
push
lds
push
push
cmp
inc
std
sti
arpl
pushf
sarl
popa
mov
not
lods
dec
adc
shl
pusha
xchg
xor
arpl
dec
xor
sub
push
fisttpl
and
cmp
or
xor
lret
inc
xchg
pop
rcl
push
ja
test
inc
jo
fnsave
add
fidivl
das
sub
mov
dec
fsubs
inc
js
test
rclb
iret
or
pop
rcll
pop
cmp
outsb
pop
sub
lret
jge
xor
mov
jo
insb
push
mov
stos
pushf
or
xor
adc
in
inc
xor
ss
es
sbbl
sbb
mov
test
cmpsl
inc
fmull
ret
out
pop
xor
pop
mov
cmp
push
sub
lcall
stc
in
fisubl
lock
adc
mov
insl
pop
adc
and
mov
sbb
insb
sbb
mov
aam
sahf
hlt
xorb
inc
mov
cmp
int
sbb
jae
push
inc
xchg
into
or
jg
mov
pusha
mov
rolb
pop
js
outsb
sbbl
fs
lcall
jmp
mov
lahf
loop
mov
lret
pop
mov
xchg
jno
mov
hlt
dec
jb
mov
xchg
xchg
pop
jecxz
pop
mov
adc
ret
fcom
add
jbe
sti
cmp
sahf
fcmovb
add
pop
and
dec
insb
mov
push
test
xlat
sub
dec
mov
pop
out
jle
into
stc
push
dec
pop
or
sub
mov
fld
jge
in
adc
inc
pop
inc
jg
bound
cmp
into
mov
mov
imul
ret
adc
mov
hlt
jl
adc
sbb
inc
nop
mov
adcb
sub
xchg
xor
xchg
mov
js
sbb
sub
in
outsl
mov
adc
mov
mov
xor
mov
inc
cmpsb
cmp
adc
cmp
lds
mov
inc
ret
dec
ja
aaa
data16
orl
push
clc
psllw
jo
out
sbb
mov
mov
and
test
insb
xchg
movsl
pop
rcrb
fimull
es
xor
pop
sbb
and
dec
add
fdivl
sub
mov
loope
fdivrp
mov
out
in
dec
js
rcll
or
stc
fsubr
daa
sub
repnz
lea
in
add
xchg
lcall
or
pushl
shrb
outsb
hlt
xor
ret
push
sub
test
cmc
jb
xchg
popa
in
mov
popf
imul
mov
push
push
push
sub
pop
cmp
push
ljmp
jns
xchg
adc
loope
lock
pop
inc
stos
push
test
mov
sub
loop
enter
andb
fnsave
add
aas
rorl
decl
insb
adc
popa
and
mov
loopne
cmpsl
andl
jl
into
and
shll
mov
nop
sbb
test
popa
ljmp
stos
mov
xor
outsb
es
sahf
sbb
insl
mov
out
cld
and
jge
adc
lcall
pop
pop
lcall
sub
loop
lret
nop
xlat
jne
xchg
mov
jp
mov
in
movsl
add
fimuls
js
outsl
push
mov
mov
add
jle
lock
push
popa
out
sbb
adc
sbb
js
test
xor
mov
fmulp
push
push
popa
aam
lret
mov
add
jnp
mov
roll
addr16
shrl
sbb
push
fcoml
pusha
leave
jns
adc
fsubl
pop
pop
inc
icebp
mov
dec
add
or
dec
dec
std
mov
jne
xor
xor
and
mov
les
bound
es
lds
rclb
and
cmp
enter
xchg
lds
pop
add
dec
lret
push
sbb
xor
bnd
stos
mov
repnz
mov
pop
lods
add
scas
fstpt
mov
dec
pop
ret
add
jge
lods
cmp
or
xor
fistl
mull
push
pusha
mov
out
adc
inc
and
lcall
mov
push
mov
das
ficompl
mov
push
mov
in
shlb
nop
adc
add
dec
pop
ja
lods
stos
fidivl
fisubl
popf
jno
les
mov
ja
xchg
mov
enter
and
int3
and
jge
adc
int
push
jne
rcl
imul
sbb
push
shll
cwtl
jae
shlb
ss
cmp
aaa
pop
inc
xchg
out
mov
cmpsl
mov
hlt
das
cld
int3
jg
andb
mov
gs
ret
data16
mov
xchg
shll
addb
out
push
mov
jb
loopne
outsl
mov
lcall
jecxz
cli
mov
lret
idivb
pop
sub
xchg
add
xor
lret
lods
inc
mov
dec
xor
jo
lea
mov
or
cmpsb
sbb
mov
out
xchg
and
out
inc
xlat
hlt
or
imul
push
xorb
mov
inc
shlb
out
test
inc
out
in
jnp
iret
data16
lret
or
cmovb
addl
das
jmp
cmp
push
cli
inc
inc
push
add
cmp
inc
hlt
or
fs
push
fucom
jp
pusha
pop
scas
outsb
out
lcall
dec
mov
rol
pushf
push
push
xchg
push
sbb
popf
ret
outsl
push
and
sub
adc
sub
stos
xor
dec
sbb
lret
add
dec
pusha
loopne
xchg
xor
add
popf
insl
adc
and
lcall
push
outsl
mov
out
dec
push
cmp
bound
xor
jns
push
imul
push
sub
pop
dec
xchg
pop
xor
sbb
je
aas
movb
dec
pop
out
sbb
out
out
xchg
mov
repz
aam
int3
mov
icebp
in
mov
scas
sub
xchg
leave
lods
stos
add
cmp
imul
mov
movsb
in
test
outsl
mov
xchg
rorb
push
xor
sbb
push
out
mov
sub
adc
xchg
pop
sub
dec
mov
sub
into
lret
cmp
dec
inc
iret
inc
js
adc
enter
mov
dec
jns
dec
mov
pop
pop
dec
push
dec
pop
jge
mov
and
dec
scas
push
push
adc
push
inc
push
push
push
add
dec
dec
ret
adc
test
mov
lods
jae
cwtl
clc
xchg
dec
inc
push
push
inc
inc
mov
loop
add
lret
mov
stos
lret
mov
mov
movl
mov
mov
fdivrs
enter
jns
gs
mov
cmp
fstps
jae
xchg
cmp
or
inc
dec
push
add
stos
fmul
inc
inc
xchg
jecxz
lds
stos
add
cmc
lret
popf
cmp
cwtl
add
out
les
pushf
pop
inc
lcall
in
mov
mov
pop
test
ficoms
les
mov
mov
clc
push
cmp
mov
cmp
in
push
mov
cmp
pop
lea
adc
shl
dec
jecxz
cli
or
cmpsl
push
scas
cltd
jnp
pop
mov
je
stos
or
lcall
inc
lret
inc
clc
mov
sub
pop
ret
or
test
cs
fdivrl
jnp
xor
fimull
lock
adc
mull
xor
ljmp
test
xchg
mov
push
fcom
fisubrl
fiadds
cmpsb
mov
ds
pop
sub
sbb
repz
loopne
pop
testl
lods
cmp
inc
and
pop
sbb
repnz
fistl
mov
es
mov
inc
cmp
push
pop
mov
fwait
stos
push
rcll
sub
cmp
mov
ret
xor
mov
fimuls
loop
xchg
push
pop
push
pusha
es
repz
jbe
lret
xor
xor
mov
in
dec
xor
scas
push
xchg
adc
daa
sbb
loopne
scas
mov
sbb
push
push
push
fsubrs
mov
or
mov
cli
xchg
ret
jmp
ljmp
xchg
subl
filds
mov
je
push
test
sbbl
jae
call
dec
add
jp
sub
test
xchg
push
inc
popf
ret
adc
ljmp
cmp
cli
fwait
out
sbb
lock
cmpsl
xchg
mov
std
int3
mov
fcomi
mov
scas
imul
pop
dec
inc
pop
dec
pop
jp
subl
leave
bound
lds
xor
and
in
rolb
enter
mov
push
stos
imul
lcall
sbb
xor
mov
inc
movb
push
push
fimuls
loopne
push
and
sahf
xchg
divl
lcall
int3
jg
sarb
fisttps
inc
inc
test
ficompl
push
push
jmp
cmp
out
roll
dec
sbb
das
sub
or
pop
sbb
out
inc
push
ljmpw
inc
stc
xchg
lock
and
dec
pop
iret
push
dec
ret
jl
data16
in
roll
or
in
loopne
clc
int3
fmulp
mov
data16
jae
ret
inc
push
add
call
fsubr
mov
outsl
es
pop
ds
cmpsl
addr16
pushf
addl
sub
add
int
xchg
fdivrs
lock
sbb
dec
in
adc
dec
and
or
sbb
cmp
int3
xchg
orb
push
rcrl
or
xor
sbb
lahf
dec
mov
push
jle
xchg
sub
sbb
cwtl
mov
adc
clc
jge
lds
mov
pop
rep
hlt
xchg
js
xor
repnz
out
sub
stc
pop
or
fwait
loopne
xchg
adc
cli
sbb
sbb
rorb
sub
popf
xor
xor
std
adc
insb
push
add
or
or
mov
cmp
dec
inc
jp
sub
push
xchg
int
jl
fsubrl
inc
jp
imul
mov
sar
pop
xchg
pop
adcl
negl
in
out
in
jb
cmpl
sub
sub
cmc
jae
cltd
dec
testl
out
dec
xor
or
lock
lds
into
pop
pushf
repz
add
dec
mov
sub
jl
scas
mulb
dec
scas
gs
xlat
dec
cld
iret
push
fwait
mov
ljmp
dec
jnp
int3
jnp
xchg
mov
mov
mov
in
cmpb
adc
push
jae
test
hlt
jl
in
dec
mov
test
ss
push
in
aas
cmp
xor
jns
cmpsl
outsl
lcall
xchg
jnp
jae
mov
aas
outsb
imul
cmc
dec
out
or
jno
push
push
ljmp
cwtl
out
and
fldenv
pop
pushf
mov
popf
or
icebp
pop
xor
sbb
inc
lds
dec
lahf
push
sub
orb
in
cmc
inc
xchg
loope
test
push
bnd
cmp
loope
je
mov
pusha
in
jl
scas
ds
inc
popf
iret
mov
dec
inc
xorb
out
and
pop
iret
in
mov
add
jmp
mov
mov
shll
push
loop
lds
push
cmp
dec
and
out
mov
pop
dec
add
fildll
fnstsw
dec
js
xor
popf
pusha
xchg
jo
jg
sbb
lea
popf
xor
lods
mov
call
mov
jg
sub
ljmp
or
xchg
mov
lock
aad
pop
or
mov
cwtl
fadds
test
adcl
cmp
inc
es
jne
sbb
imul
jle
xchg
repnz
mov
mov
pop
dec
pop
cmc
sub
data16
fwait
xorb
or
movsb
arpl
test
xchg
inc
adc
xor
pop
in
jb
inc
add
or
lcall
rcrl
jno
jecxz
or
xchg
negl
jl
movsb
dec
push
and
push
mov
lret
pop
loopne
fucomi
pusha
iret
and
mov
mov
lret
mov
and
and
sub
das
mov
push
addb
sub
ja
mov
insl
popf
subl
dec
pop
in
mov
enter
or
or
push
fsubl
scas
lods
adc
fwait
add
pop
cmp
jno
adc
mov
sub
out
pop
xchg
ret
addr16
lods
and
xchg
push
dec
jnp
add
in
ja
mov
adcb
inc
rorl
enter
mov
repz
xor
and
test
mov
cmpsl
cmpsl
lods
ficoms
push
cmp
leave
fsubs
sbb
xchg
push
and
in
cltd
scas
xchg
mov
cmpsb
dec
sahf
fldenv
icebp
nop
test
dec
ja
ljmp
mov
jmp
stc
std
jl
fcompl
mov
jecxz
push
mov
lods
in
mov
xchg
pop
rclb
mov
cld
addr16
mov
dec
les
inc
xchg
test
sarb
and
pop
push
aam
inc
or
ss
adc
and
fs
icebp
pushf
mov
xchg
mov
scas
pop
sahf
mov
jmp
sbb
cmp
xchg
daa
pop
psubd
sti
loope
or
mov
xchg
mov
mov
cmpsb
pushf
dec
jge
cmp
ret
frstor
cmp
out
popa
and
fistpl
arpl
pop
pop
gs
push
mov
add
loope
jb
jns
xchg
js
push
and
and
int
mov
xchg
mov
xor
xchg
push
ret
mov
call
sarl
div
inc
aad
popf
imul
mov
cmpsl
and
mov
dec
pop
and
or
dec
mov
xchg
xor
jecxz
aas
dec
or
lock
push
xor
in
mov
cmp
xchg
cmp
mov
push
xchg
xchg
movsl
xorl
mov
cmp
sbb
push
jge
pop
push
test
mov
xor
adc
lock
push
les
scas
sarl
pop
cmpsl
and
pop
push
push
insl
mov
jns
mov
pop
fstpl
popa
xor
and
sbb
lods
and
mov
arpl
jecxz
insl
dec
ss
mov
loopne
addr16
lret
adc
lcall
mov
dec
add
cld
xchg
loop
xor
mov
sbb
js
mov
jg
out
inc
lahf
icebp
fcompl
dec
in
imul
or
stc
jbe
push
adc
fsts
lret
and
incl
cmp
jno
subl
cli
call
js
push
jne
inc
jno
pop
arpl
xchg
mov
std
ljmp
pop
sub
icebp
sbb
ss
push
pop
aam
nop
pushf
mov
std
push
sbb
cmp
hlt
or
sbb
mov
push
mov
xor
cmpsl
sub
cmp
je
pop
cmpsb
dec
add
rcll
adc
cmp
push
pop
pop
dec
js
push
daa
pushf
mov
je
lds
and
loop
shlb
sub
dec
cmc
jge
dec
cs
sub
hlt
xor
int3
pushf
xchg
push
fldcw
aam
mov
lret
mov
fisubs
xor
xchg
test
fwait
lock
lret
sub
mov
mov
mov
repz
iret
lcall
int3
xor
ret
mov
xchg
cs
popa
adc
sahf
cmpsb
inc
and
mov
dec
mov
ret
jle
mov
lods
movsl
test
adc
out
pop
jle
fwait
sub
stc
lock
idivb
pushf
xchg
pop
sbb
lret
mov
pop
iret
stos
push
inc
xchg
lret
mov
cmp
bound
daa
pop
and
shrb
and
test
mov
mov
sub
or
mov
mov
sub
fsubr
fs
out
mov
push
ror
cld
inc
stc
dec
stc
sbb
in
fidivrs
in
popa
in
push
sub
cmpb
es
dec
int3
push
nop
loopne
call
sub
xchg
push
adc
lret
popa
arpl
imul
mov
stc
adc
xor
jnp
fisttps
ss
add
mov
pop
xor
mov
inc
push
mov
scas
icebp
cmc
ret
jbe
int3
lods
test
icebp
aam
push
mov
xchg
xor
or
xor
cmp
imul
dec
jecxz
mov
xchg
and
popf
push
lcall
jp
repz
xorb
cwtl
fsubp
mov
outsl
daa
jns
imul
sahf
lods
add
adc
pushf
data16
dec
or
loop
xchg
cmpsb
and
mov
sbb
mov
xor
inc
adc
sbb
mov
movsb
push
js
ljmp
je
inc
cvttps2pi
sub
cmp
xchg
leave
mov
mov
inc
popa
jmp
dec
lret
lock
inc
sbb
incl
sbb
dec
or
fildll
pop
pop
rcll
mov
nop
notb
cmp
xlat
loope
adc
mov
xchg
push
jo
out
sub
pop
mov
imul
rcl
add
xor
loopne
jns
cmp
in
lods
shlb
sub
ljmp
mov
inc
sbb
mov
cmp
loope
sub
mov
stos
pop
cli
adc
nop
je
push
adc
mov
enter
cmpsb
fsubrl
in
and
adc
outsb
push
fistpl
sbbl
xchg
sbb
daa
shlb
aas
imul
mov
std
push
popf
shl
mov
enter
pop
jl
movl
test
into
and
fstpt
ret
dec
les
push
dec
pop
hlt
aaa
mov
sbb
aas
sub
sub
mov
scas
mov
adc
rorl
push
xchg
orl
pusha
mov
stos
cmp
xchg
clc
and
sub
aaa
jnp
add
ret
mov
push
fisubl
inc
sub
cmpsl
call
inc
rol
xor
xchg
in
xchg
in
loop
jno
xchg
mov
imul
xor
in
call
mov
outsl
push
inc
and
mov
xchg
fiadds
adc
fst
cwtl
push
mov
cld
int3
pop
inc
mov
pushf
imulb
fldl
push
mov
cmp
sbb
jl
sbb
int
mov
and
fiaddl
movsl
setns
in
push
aad
adc
lock
enter
add
hlt
in
cmpsl
inc
lret
faddl
inc
outsl
mov
cmp
xor
and
mov
inc
stc
das
lret
pop
xor
sub
repz
arpl
icebp
sti
aam
jae
adc
push
stos
dec
cld
push
dec
xchg
mov
pop
push
std
inc
lds
inc
gs
jmp
push
adc
sahf
imul
pop
ffree
jge
push
insb
pusha
repnz
mov
jecxz
and
add
dec
shl
mov
shrb
sub
push
inc
dec
loop
jo
adc
mov
and
ja
add
dec
stos
inc
adc
and
pop
xchg
inc
dec
mov
test
int
mov
cmpsb
jne
add
test
into
add
inc
xchg
mov
scas
mov
jnp
sbb
faddl
pop
movsl
sbb
repz
mov
aas
or
rcr
shr
sub
sti
pop
fs
sub
push
xlat
nop
std
test
pop
dec
push
xor
cmp
inc
jno
call
ljmp
pop
dec
mov
push
or
inc
push
lea
mov
andb
dec
add
mov
adc
adc
fnstcw
das
scas
mov
lock
sarb
dec
jbe
inc
in
lret
sbb
push
add
fcomps
xchg
jg
pushw
mov
sarb
jae
or
dec
mov
clc
movsb
adc
lods
pop
mov
adc
push
push
les
or
mov
mov
fs
and
scas
sarb
stc
adc
mov
stos
xchg
lds
outsb
mov
xchg
xor
xorb
icebp
outsb
clc
mov
jne
sub
rcrl
ret
hlt
sub
mov
negl
imul
mov
push
jecxz
dec
push
pop
sarl
fbstp
fs
mov
fwait
dec
ds
xor
hlt
mov
sbb
cwtl
rcrb
pop
pop
movsb
fst
push
sahf
xor
pop
bound
inc
mov
add
bound
shlb
push
xchg
xchg
fists
xchg
fnstcw
aam
add
pop
xor
pop
dec
ljmp
xor
stos
jmp
pushf
xlat
cwtl
xchg
iret
sbb
and
cli
int3
inc
stc
mov
pop
pop
jle
push
mov
out
repnz
cmp
daa
xlat
push
dec
arpl
xchg
fstpl
mov
hlt
mov
push
mov
adc
push
fstl
jae
std
pop
pop
cmp
fdivs
mov
sub
insb
out
xor
adc
fildll
dec
outsl
dec
jmp
or
stc
je
fimuls
ds
arpl
int
cmp
pop
test
inc
or
xor
jbe
ds
jne
mov
inc
add
jle
and
leave
test
inc
xchg
jmp
sub
imul
test
pop
xchg
inc
jle
sub
adc
pop
popf
cmp
ret
shll
loopne
aam
or
add
sub
ficomps
mov
dec
sub
enter
sbb
jp
data16
enter
stc
loope
jp
and
push
insl
out
pop
loopne
bound
in
gs
arpl
shl
dec
push
fistpl
adc
mov
sbb
neg
xchg
in
xchg
xchg
sub
in
stos
lds
mov
orl
bnd
jp
inc
ljmp
shrl
divb
ja
mov
push
jo
mov
mov
sbb
jne
and
outsb
mov
sub
outsb
insl
or
js
les
add
imul
sbb
adc
out
push
cwtl
or
jmp
repnz
jle
add
xchg
in
pop
cwtl
fistpll
pop
push
adc
in
dec
cltd
jl,pt
push
out
icebp
outsb
int
imul
xchg
xor
pop
cld
js
shlb
lea
and
push
xor
fadd
pop
push
xor
mov
pop
xchg
xchg
sbb
dec
icebp
aam
xchg
dec
xchg
cli
jne
movsb
xchg
push
mov
fcomip
outsb
mov
notb
lea
aam
push
imul
dec
cmp
insb
cmc
jmp
mov
add
mov
mov
mov
sub
test
jmp
push
inc
addr16
rcrl
and
inc
push
adc
sub
xor
gs
and
cmp
arpl
lods
adc
enter
and
mov
ret
xchg
cli
xchg
outsl
xchg
cmp
jl
fdivrs
pop
vmptrld
jg
pusha
pop
outsl
pop
ss
push
jns
xchg
push
flds
sbb
inc
ja
mov
hlt
xor
xchg
dec
les
cmpl
adcb
push
pop
aaa
pop
add
fcomps
out
fdivrl
jle
or
rol
outsl
je
xlat
xchg
pop
adc
call
scas
cmpl
or
cltd
fwait
imul
add
push
addb
rol
mov
push
add
and
das
scas
and
scas
mov
add
orb
scas
xchg
ljmp
cmp
jb
sti
outsl
nop
inc
cltd
cmp
lahf
dec
clc
xor
pop
pop
ror
fcmovu
adc
jg
inc
movsb
push
loop
add
mov
cltd
push
dec
inc
sub
imul
mov
jl
outsb
daa
pop
cmp
pop
pushf
adc
xor
cld
imul
int
adc
jge
outsb
cmp
jl
or
sub
mov
xchg
dec
enter
mov
rorl
jl
mov
jmp
cmp
mov
and
scas
mov
sub
mov
add
xor
mov
mov
push
inc
push
cwtl
push
mov
pop
and
filds
xor
add
sarl
push
cltd
push
mov
dec
mulb
sub
stos
adc
mov
popl
adc
jno
data16
mov
xchg
jb
movsl
pop
mov
outsl
f2xm1
adc
icebp
adc
cmp
sub
add
inc
adc
repz
or
xorb
out
jmp
movsb
sarb
fstps
cmc
and
push
xchg
aas
or
adcb
mov
and
push
sub
jae
dec
enter
jae
lock
pop
dec
cmp
xchg
mov
adc
iret
inc
jns
mov
pop
lods
push
xchg
pop
fdivrs
test
mov
or
les
xor
mov
lds
sub
pusha
sbb
imulb
push
aad
jle
sti
sub
ljmp
xor
or
xchg
lods
xor
add
mov
ret
sar
idivb
scas
mov
icebp
mov
jge
lock
je
popf
sub
testl
mov
arpl
lods
and
sbb
ret
mov
aas
mov
lds
and
in
roll
adc
sbb
movsl
xor
and
lods
jmp
xchg
cmp
sbb
jge
sarb
bound
test
movsl
sbb
or
and
inc
and
ds
das
adc
jge
pop
dec
cmp
ss
cld
sti
jle
sti
sbb
xchg
xchg
jecxz
xchg
lcall
aas
inc
or
mov
iret
mov
repz
xchg
xchg
add
icebp
or
inc
pop
stos
adc
inc
in
inc
mov
in
bound
jge
pop
dec
rclb
rcl
add
dec
mov
and
push
dec
add
jp
insb
iret
pop
push
sub
aas
arpl
or
jmp
outsb
xchg
cmp
push
rcrb
rorb
mov
xchg
adc
mov
addr16
in
pop
adcl
push
cmp
subb
test
and
inc
push
xor
mov
imul
sti
mov
mov
sbb
rclb
mov
mov
jnp
cmp
lcall
ja
fmulp
hlt
push
inc
scas
popf
or
xchg
mov
or
lret
and
cltd
mov
dec
inc
cmpsl
stos
xchg
sbb
add
xor
cltd
int
inc
ljmp
dec
rcll
jbe
cmp
xor
jno
adc
and
jae
jl
add
aad
dec
fcmovu
xor
jae
cmp
xlat
mov
shl
inc
call
outsl
rcr
cmp
int
push
data16
rcl
dec
or
xchg
and
add
out
and
xchg
test
xchg
mov
inc
pop
fbstp
jb
pop
js
out
inc
js
push
xchg
or
sub
add
leave
outsb
mov
aam
or
icebp
mov
std
movb
push
cli
insl
mov
cs
aam
stos
add
bnd
je
xor
gs
shlb
lds
push
mov
in
jmp
scas
inc
mov
dec
pop
jmp
fidivrl
andb
insb
data16
leave
cmp
mov
sub
cwtl
loope
jge
ss
xchg
mov
or
lcall
loopne
mov
std
mov
pop
in
out
dec
daa
and
fs
andb
add
pop
adc
rcl
inc
stos
bound
dec
clc
icebp
mov
xchg
movsb
stc
push
icebp
inc
js
pop
movsb
pop
cld
pop
or
jecxz
setge
mov
mov
roll
push
xchg
rcrb
lcall
filds
pushl
xchg
insl
dec
out
dec
adc
mov
cmp
add
rolb
leave
out
xchg
mov
jge
inc
adc
je
fwait
ret
imul
inc
cmp
jbe
mov
dec
pop
mov
clc
pop
das
out
cs
dec
aaa
shll
dec
lret
loop
xlat
enter
sbb
or
lods
push
push
adc
xlat
push
mov
jle
push
popa
push
je
inc
movsl
jnp
or
dec
cmpsl
stc
push
push
sbb
loop
push
inc
sub
sub
lret
pop
iret
aad
std
cmp
sub
hlt
clc
xchg
call
movb
dec
jbe
fldt
movhps
rcl
mov
loop
dec
mov
jns
clc
xor
negb
xchg
cmp
hlt
pop
bound
xor
ss
inc
push
imul
sbb
nop
pop
push
or
sub
cmp
jnp
rorl
mov
pop
push
fidivl
push
inc
ret
pop
in
push
xchg
push
enter
pop
xlat
xor
mov
ljmp
adc
sbb
imul
xchg
mov
or
stos
adc
cmp
mov
scas
movsl
sub
mov
pop
jnp
iret
adcl
loope
gs
cmpsb
and
push
inc
lea
stc
inc
dec
nop
cs
sbb
scas
cli
call
lock
sub
cmp
jl
dec
daa
shlb
jae
cmp
mov
push
and
add
jb
pop
xchg
push
jo
mov
jp
cmpsb
shll
ljmp
stos
fldl
imul
repnz
shrb
shrl
daa
mov
aas
and
insb
enter
mov
pop
inc
push
scas
and
aas
jb
and
push
sub
mov
sbb
push
rorb
dec
cmp
add
mov
dec
add
xchg
ror
adc
cwtl
jmp
xor
cmp
push
add
outsb
call
stos
test
pop
mov
xchg
jns
jne
cltd
fs
in
add
ja
mulb
pop
mov
mov
stos
mov
jp
push
sbb
mov
xlat
dec
xchg
fnstcw
popf
inc
mov
in
rcr
ja
dec
cli
das
das
icebp
or
jp
jne
fcmovb
loope
es
xchg
cld
cmp
cmp
out
negb
push
orl
fstps
add
sar
cmp
push
lret
ficoms
pop
jnp
add
push
adc
mov
das
mov
loop
or
mov
inc
cli
mov
jo
push
js
jo
jbe
aas
inc
sahf
lds
push
lock
xchg
js
fsubs
lods
pop
mov
add
inc
jae
jg
jl
lock
inc
cli
sub
mov
outsb
xchg
mov
cli
push
mov
movhps
xchg
hlt
xchg
xor
pop
adc
cmpsb
mov
outsl
adc
ret
repz
out
lcall
mov
mov
pop
das
sub
mov
lcall
clc
mov
jge
cmp
inc
mov
out
aam
movsb
cmp
adc
push
mov
adc
outsb
pop
inc
xchg
out
push
rclb
sar
ja
push
dec
sbb
cwtl
pop
test
cmpsl
je
push
int
mov
shll
sbb
sti
jnp
inc
jecxz
aas
mov
aam
lods
and
repz
scas
jno
mov
imul
pop
adc
push
ja
ljmp
out
je
jl
xor
popa
xor
sub
jns
cmp
out
xchg
dec
lods
inc
pop
inc
add
mov
out
jb
pop
push
rol
or
dec
mov
xchg
pop
cs
push
pop
jns
sbb
inc
jo
stos
repz
cwtl
rcrb
daa
das
pop
pop
sar
aaa
gs
adc
outsb
xchg
push
pop
xchg
or
jnp
mov
xor
push
fsubrs
lods
ja
xor
out
xor
cwtl
and
xchg
scas
or
sti
movsl
out
adc
cmp
pusha
cmp
les
push
shr
loopne
lea
dec
push
xor
push
or
les
xchg
test
add
cli
inc
repnz
imul
aaa
push
add
add
mov
inc
rorl
jl
or
cwtl
outsb
cmp
orl
je
sahf
into
mov
in
jno
pop
cs
xchg
add
arpl
inc
outsb
lea
xchg
enter
repnz
push
jb
cmp
cwtl
mov
loope
rcrl
stos
cli
cld
mov
push
xor
imul
cld
std
fldenv
pop
sub
add
popa
fldenv
leave
mov
mov
call
xor
jnp
fnstsw
jmp
sub
sbb
inc
xor
les
or
cs
aad
outsb
hlt
mov
fadds
into
dec
mov
cmp
add
push
rolb
jne
pop
dec
jl
cli
lods
mov
push
ss
mov
and
cmp
cmpsl
adc
or
sub
mov
lahf
shlb
int3
jo
mov
pop
push
mov
mov
xchg
jne
sahf
ja
adc
push
iret
mov
mov
popa
inc
xor
sub
in
hlt
scas
popf
lods
push
jmp
xchg
adc
das
cld
jne
dec
lock
sbb
mov
shrl
adc
stos
test
lcall
push
sbb
sbb
lret
or
sub
xchg
cmpl
and
jmp
in
inc
or
in
push
pop
cmp
push
and
cmc
iret
mov
scas
addr16
mov
int
inc
push
push
jge
push
sub
cmp
or
dec
nop
fsubl
cld
push
mov
jae
mov
pop
fidivrl
jae
popl
mov
ja
inc
leave
mov
pop
adc
add
dec
push
mov
nop
jmp
mov
adc
xadd
in
popf
inc
sub
dec
aas
popa
or
mov
mov
sub
cmp
push
jg
faddp
xor
jmp
ljmp
div
add
jl
cmp
nop
push
mov
inc
loop
xor
std
xchg
aam
sbb
mov
push
dec
cmp
loopne
rclb
addr16
pushf
js
out
adc
or
into
test
dec
icebp
std
mov
stc
add
adc
mov
popf
or
xchg
out
sub
inc
pop
jg
or
daa
and
fucom
in
cmp
dec
xchg
nop
lcall
sarl
mov
and
xor
mov
xor
mov
mov
inc
pop
cltd
dec
clc
call
push
data16
icebp
mov
mov
aas
clc
arpl
xchg
sub
add
stos
sbb
sub
add
adc
mov
bound
cltd
scas
aaa
mov
and
clc
aas
ljmp
cmp
cltd
dec
xor
push
aaa
shlb
test
dec
shll
fisubrl
ret
pop
shl
stc
pop
push
les
loope
cmp
jo
js
into
mov
inc
mov
push
jmp
push
fsin
rcl
xor
pop
add
subb
gs
stc
negb
arpl
pusha
lock
setg
pop
inc
popa
pop
pushf
mov
pop
stos
cmp
cli
stc
xor
outsl
shl
xor
insb
icebp
into
into
pop
into
sahf
int
push
adc
aam
cld
out
inc
jb
stc
cmp
into
hlt
mov
jmp
stos
mov
pop
jno
mov
out
pop
inc
mov
fsubrs
sbb
fistps
pop
outsl
push
outsl
push
push
push
add
outsl
jae
mov
sub
movsl
pop
jbe
add
lcall
dec
jmp
test
outsb
and
fwait
aas
xchg
scas
addr16
sti
loopne
test
popf
pop
jo
dec
scas
mov
inc
in
fdivs
test
xor
insl
fimull
sub
mov
push
aas
xchg
dec
loopne
je
or
jne
pusha
mov
push
imul
fstpt
push
dec
sub
jmp
cmp
fldcw
mov
inc
xchg
insb
mov
popa
shll
sbb
fwait
inc
mov
sbb
pop
movsl
mov
pop
scas
out
popl
fldl
fstpl
aam
and
lds
mov
scas
popa
sbb
or
orl
or
imul
into
fs
add
push
jbe
fistpll
xor
mov
aaa
ret
pushf
xchg
xchg
iret
jae
cmp
jle
and
push
xchg
lock
imul
lret
adc
std
or
in
pushf
dec
lahf
pop
xchg
adc
and
icebp
mov
mov
pop
and
int3
sub
imul
out
fdivrl
fs
in
cmpl
add
mov
rcll
lcall
mov
cmpsl
lret
loopne
jns
cwtl
mov
fwait
jecxz
pop
std
mov
adcb
mov
mov
and
dec
inc
repnz
std
jp
movsl
out
repnz
cmpsb
xchg
mov
repnz
cmp
jbe
pop
fldcw
adcb
pop
enter
leave
test
dec
xchg
fdivl
push
add
xor
push
rcll
fimuls
adc
sub
test
ret
sbb
fimuls
jno
mov
jp
pop
shrl
pop
mov
addb
xchg
scas
push
nop
adc
dec
sub
fdivl
andl
mov
ud0
mov
inc
test
fcomi
fidivrl
movsl
xchg
leave
test
push
mov
jg
rcr
pop
xor
dec
cmpsb
cmpsl
stos
aam
mov
mov
xor
aas
out
mov
mov
or
sahf
push
xor
icebp
adc
jo
dec
popf
clc
into
repnz
adc
repz
jbe
js
dec
subl
sbb
lret
push
inc
mov
push
loop
xlat
fnstsw
sti
sub
scas
rol
neg
loope
lods
mov
pusha
and
outsl
stc
or
ds
sbb
lahf
mov
xchg
sub
jmp
call
test
add
push
andl
xor
mov
imul
rcrl
ja
mov
add
cmp
mov
or
dec
ja
push
nop
inc
sub
pop
jbe
lret
mov
push
mov
lret
mov
outsb
stos
inc
mov
dec
cmpsb
dec
xor
cmpsl
ds
icebp
sahf
ljmp
fcompl
in
and
sub
lock
outsb
enter
mov
shrb
sarb
popa
adc
sti
xchg
pop
add
mov
push
ds
pop
push
movsb
inc
push
jno
iret
into
in
into
push
sbb
inc
in
xchg
mov
test
out
in
out
inc
or
add
sbb
inc
push
or
adc
cmp
outsl
insl
scas
rep
test
sub
push
stos
dec
jnp
fcoml
push
adc
pop
cs
mov
test
jmp
adc
fstpt
cmp
iret
stc
int
sbb
pop
dec
pop
outsl
dec
mov
dec
cmpb
mov
orb
frstor
bnd
push
and
movsb
add
mov
push
inc
fiadds
cmp
add
dec
push
push
adc
jb
inc
movsl
nop
push
push
dec
loopne
mov
hlt
in
pop
jno
pushf
mov
adc
rolb
dec
add
jg
ljmp
neg
pop
gs
mov
testl
outsl
pop
outsb
mov
inc
dec
cmp
jmp
or
imul
dec
ja
mov
or
xchg
iret
rep
shrl
out
dec
jbe
xor
movb
lods
push
subl
mov
cld
ret
adc
mov
popf
mov
cltd
inc
cwtl
xchg
cwtl
inc
push
or
fistpl
sub
xchg
jecxz
sub
xor
dec
daa
addr16
fists
stc
mov
add
insl
inc
std
pop
les
jg
jp
rcrl
into
push
dec
ds
add
push
mov
call
int3
pushf
or
cmpsb
xchg
js
push
imul
inc
ljmp
lahf
push
lcall
cmp
push
push
in
jg
imul
fwait
mov
sarl
push
mov
xor
inc
rorl
inc
clc
inc
xlat
int3
inc
jae
push
fstpl
adc
push
pushf
in
shl
pop
add
cmp
xor
xor
mov
xchg
push
xchg
push
dec
loop
adc
mov
xor
cmpsl
mov
lods
mov
jno
mov
jmp
push
mov
sbb
sub
aaa
test
xchg
fldenv
pop
mov
les
jge
push
jl
push
and
xchg
subl
dec
arpl
ja
sbb
test
dec
std
loopne
rcll
mov
and
mov
xchg
mov
popa
xchg
xchg
addr16
xchg
add
mov
rcll
xor
push
popf
mov
rcl
push
hlt
adc
push
mov
push
xchg
lahf
test
jne
cmc
jle
out
data16
inc
xor
mov
jo
add
mov
xchg
push
test
cmp
or
pushf
shlb
dec
sbb
in
subl
sub
mov
dec
in
mov
sub
mov
js
mov
sti
daa
sub
jno
add
test
movsl
lret
jg
inc
mov
xchg
or
mov
or
test
out
lcall
arpl
call
cmc
jp
pushf
pop
cmp
pushf
call
aam
mov
sub
outsb
shrb
enter
sbb
iret
faddl
std
mov
cmpsb
test
nop
cmp
sarb
mov
les
scas
pusha
shl
repnz
fimull
jl
mov
inc
dec
cli
in
sub
loop
and
xchg
jg
in
add
int
mov
andb
sbb
or
fnstcw
and
pop
ror
jge
dec
test
mov
jl
into
jb
out
jns
inc
fdivl
lret
push
repz
sbb
pop
dec
push
cmpsl
mov
addr16
insb
cmc
inc
push
mov
aam
xchg
jae
insl
cli
sbb
insb
cltd
popa
ja
or
cmp
pop
outsl
dec
jmp
ja
mov
cld
xor
ljmp
pushf
push
inc
pop
aam
adc
sbb
inc
mov
xchg
aad
add
ja
mov
fidivl
or
adc
cmp
push
mov
in
pop
insb
jo
add
jns
jno
fucomi
mov
arpl
in
je
xchg
mov
jns
sbbb
xor
sub
cmpsl
data16
outsb
daa
adc
mov
and
jl
inc
xchg
fwait
pop
pop
loop
ret
js
mov
das
push
sub
pop
dec
mov
fwait
int
xor
mov
xchg
repz
loope
or
or
loop
in
add
cltd
pop
outsb
pop
ss
lds
pop
scas
jne
movsb
dec
lods
dec
sbb
mov
jle
cli
stos
sbb
imul
outsl
jns
idivb
ss
test
jg
int3
nop
rcrl
out
xor
in
mov
jbe
jnp
imul
cmpsl
cwtl
leave
sti
loopne
outsl
je
call
cmpsb
mov
in
mov
hlt
sub
and
rep
push
push
iret
lea
jecxz
xchg
xor
xlat
adc
pop
mov
pop
or
rorb
inc
adc
int3
mov
je
shrl
subb
pop
sahf
dec
fldenv
nop
jno
mov
repnz
popa
add
and
dec
ficomps
iret
insb
push
addl
push
add
cmpsl
push
ljmp
sub
cs
andb
adc
cmp
push
lret
add
cmp
aam
int
scas
cmp
fiaddl
daa
dec
pop
and
bound
mov
sub
jae
mov
dec
daa
fsubl
cmp
jecxz
filds
sub
mov
push
cs
sbb
jp
scas
rcl
jp
mov
dec
lds
fbstp
out
fistps
cmp
clc
add
movsb
test
repz
pop
and
test
adc
pop
mov
cld
clc
inc
lahf
cmc
or
pop
sbb
faddl
push
mov
aam
or
jno
out
mov
xchg
int
jno
jg
mov
aaa
mov
aad
mov
scas
pushf
insb
movb
jno
sbb
out
adc
cmp
loop
dec
push
adc
xor
gs
lcall
mov
test
cmp
in
pop
lcall
adcb
shl
adc
jb
push
iret
mov
sub
xor
xor
pusha
pop
xchg
inc
popa
xor
push
push
or
inc
loopne
mov
adc
sti
xchg
sahf
decb
push
jge
mov
xlat
cmp
jns
add
inc
sub
xchg
dec
mov
nop
cmp
dec
jmp
sub
into
pop
stc
push
adc
loop
cli
dec
aam
adc
cmpsb
scas
push
jp
mov
lret
jp
and
lock
push
mov
outsl
imul
push
cmp
out
xchg
cld
mov
mov
mov
in
pusha
sub
enter
iret
adc
outsb
mov
insl
jo
xorb
mov
jbe
cld
push
fists
shll
cld
test
pop
mov
mull
popl
xchg
fsub
shl
insl
dec
dec
cmp
fcoml
and
shr
jne
mov
lahf
cmpsb
ret
pop
test
mov
sub
push
aas
mov
bound
sub
aad
testb
push
call
sub
inc
cs
mov
test
jo
popa
shll
mov
jns
mov
mov
mov
and
dec
cmpsb
xchg
addr16
dec
mov
fsubr
or
test
push
test
push
enter
outsb
xchg
imull
jecxz
out
aam
loop
mov
mov
leave
or
ret
out
shlb
std
stc
xor
pop
testb
push
add
das
fidivs
adc
insl
cmp
iret
mov
pop
repz
cld
sub
dec
mov
leave
push
mov
xchg
inc
fcoml
jns
cmpsb
cmc
sbb
jae
hlt
adc
inc
cmpsb
jg
adc
out
and
stos
cmp
je
mov
loopne
ss
in
lods
out
jbe
pushf
ret
outsl
cmp
xor
outsl
clc
mov
popf
test
in
test
in
and
fwait
and
data16
lcall
xchg
ficomps
jecxz
in
or
cmpsb
and
ds
add
shrb
data16
out
rcr
pop
mov
sti
rorl
mov
xorb
loope
ds
popa
js
mov
push
pop
mov
jg
arpl
cmp
loopne
lahf
xchg
fisttpl
mov
sub
push
xor
jnp
add
cld
mov
popa
push
jecxz
movsb
fistpl
push
fstpl
into
adcl
sbb
mov
cltd
or
adc
sbb
sti
sub
into
out
lods
ljmp
mov
movsb
repnz
pop
adcb
push
cmpb
pop
outsb
add
test
gs
icebp
loope
pusha
or
mov
cmp
ljmp
dec
jmp
jns
and
out
xor
roll
in
aaa
in
sbb
or
lock
sbb
dec
or
fstps
cmp
mov
xchg
cs
jmp
push
cwtl
das
fnstenv
orl
test
leave
shrb
cmp
in
sbb
xchg
push
adc
bound
into
daa
adcl
cmpsl
cmp
fisubrs
cmc
mov
js
outsl
or
je
mov
sub
inc
push
jb
mov
adc
sub
cli
mov
std
movsb
add
xor
xchg
mov
loope
and
and
out
mov
in
es
stos
stc
jp
cs
rcl
sub
je
pop
push
mov
out
fwait
lcall
xchg
jnp
sub
lret
mov
data16
shrb
jg
mov
and
stos
out
xlat
or
inc
cs
lock
jecxz
aam
popf
jnp
push
add
daa
mov
sub
jne,pn
ja
mov
and
adc
inc
inc
mov
scas
push
xchg
js
and
stos
paddq
add
call
test
ds
add
cld
push
mov
jl
add
push
loopne
loope
push
push
imul
dec
cld
cli
lea
or
jne
pop
mov
int3
fwait
aaa
lds
dec
notl
clc
scas
das
gs
sbb
inc
adc
jge
jne
xchg
arpl
adc
ja
pop
push
xchg
lds
push
pushf
and
leave
pop
sbb
fsubrs
pop
jle
add
lods
les
out
xchg
js
push
cmpb
jns
cltd
and
pop
inc
xor
test
and
cmp
stos
push
das
xor
insb
cmpsl
and
pop
mov
test
cli
cmp
dec
mov
sbb
roll
lahf
mov
in
ret
mov
and
int3
data16
xchg
adc
cmp
loope
mov
shlb
outsb
push
ret
in
jecxz
jl
repz
shrl
test
cwtl
xor
mov
rcrl
push
pop
or
mov
fistl
sub
aam
push
pop
and
add
shrb
xchg
into
daa
xor
cwtl
test
arpl
loopne
xchg
rcr
add
xor
sbb
jp
sub
outsl
mov
sti
adc
jl
js
out
testb
inc
and
adc
test
xchg
iret
push
sub
cmpb
inc
pop
fwait
adc
sub
mov
loopne
pop
inc
mov
jne
pop
sub
xchg
bound
mov
mov
and
in
nop
and
lcall
inc
fiaddl
pushw
loope
inc
ret
dec
pop
sub
push
dec
mov
mov
mov
das
or
push
pop
in
sub
and
adc
sub
ret
in
ret
out
ret
frstor
mov
xor
cmp
sub
out
popa
mov
aad
movsb
mov
push
repnz
cwtl
out
ret
push
mov
add
sub
dec
cmp
mov
add
dec
and
add
lods
lds
mov
rorb
cmp
leave
xlat
xchg
add
cmpsl
fwait
adc
push
pop
mov
fbld
mov
popf
or
outsb
mov
pop
jl
push
mov
mov
push
add
iret
repz
inc
and
fbld
jg
cmp
int
sub
xchg
int
repnz
mov
ss
ss
out
icebp
gs
dec
add
push
push
movsb
jns
inc
or
out
int
push
and
cmp
aam
jle
ror
test
cmp
sbb
mov
and
jl
push
jns
mov
int3
or
call
mov
std
pop
outsb
clc
xor
sub
jge
and
jns
imul
jecxz
lea
rolb
fwait
popa
ljmp
jmp
outsb
pop
cmp
ljmp
dec
inc
jno
cli
sub
out
cs
pop
and
imul
mov
sar
push
outsl
imul
inc
iret
sub
in
call
fucomip
test
and
sub
pop
dec
addr16
call
and
fistl
mov
or
xchg
inc
push
pop
sub
push
lret
jnp
aam
fxch
lret
ss
fiaddl
cmc
loop
sbb
fnstcw
sbb
cmp
scas
push
cltd
mov
cmp
mov
jl
jne
add
push
xchg
dec
jl
dec
mov
dec
xchg
mov
mov
call
cmpsb
xchg
clc
push
inc
pop
imul
lods
fs
das
insb
xchg
mov
clc
ret
stc
cmpsl
hlt
imul
jg
repz
mov
popa
bound
push
xor
testb
xor
aad
cmpsl
push
out
jle
into
inc
test
push
nop
pusha
adc
mov
out
adc
inc
xlat
pop
punpckhwd
inc
xor
enter
test
shlb
mov
xchg
mov
mov
ss
fs
cltd
sbb
rclb
int3
cmp
cmp
cmpsl
mov
mov
popa
jmp
mov
addb
fdivs
adc
addr16
neg
mov
cmpsl
bound
aas
or
mov
xchg
adc
js
mov
les
hlt
cmp
mov
push
loopne
xor
fists
jg
and
push
mov
ret
das
dec
push
addl
add
gs
std
mov
push
lock
popa
xchg
shll
pop
jns
dec
leave
cld
adc
in
sub
push
je
lea
dec
jg
lock
jae
movsbl
xchg
addr16
inc
ficomps
call
int
jl
data16
shr
lods
pop
inc
dec
test
pop
adc
mov
pop
cmp
push
push
sub
outsb
jge
daa
jae
lret
mov
inc
fcomps
subl
adc
stos
or
outsb
dec
or
xor
dec
push
ret
cld
mov
divb
imul
cmp
ljmp
mov
xchg
push
dec
and
mov
sub
ret
mov
pop
enter
bound
xchg
lret
test
out
loop
xor
cmp
dec
jl
test
mov
out
mov
mov
fwait
jecxz
pop
loop
mov
and
gs
add
xchg
xchg
js
scas
mov
cmp
popf
cmp
xchg
lods
icebp
outsl
cmc
jp
add
mov
lods
fs
gs
inc
dec
mov
jae
mov
pop
xor
adc
into
iret
jns
xchg
daa
subb
push
push
mov
fdivs
mov
xor
js
adc
push
add
ds
je
nop
adcl
loop
mov
and
inc
jae
cli
pushf
mov
inc
xor
inc
push
test
es
mov
lea
jmp
mov
test
inc
test
inc
sub
adcb
out
aas
xorb
and
pop
push
mov
or
jbe
int
fidivrs
sbb
das
inc
jo
xlat
cmp
cld
inc
push
fistps
std
inc
push
les
xchg
fsubr
int
sub
push
mov
mov
inc
lock
sbb
cs
hlt
jl
cltd
decb
or
inc
or
js
mov
pop
out
push
dec
movsb
loop
cmp
xchg
cmp
out
mov
ret
popf
mov
stos
jge
dec
in
jo
ret
xchg
and
cmp
dec
mov
xchg
inc
sub
sbb
mov
test
dec
insl
scas
xlat
or
roll
imul
pop
lret
and
test
or
popf
push
mov
jae
mov
or
fimuls
xchg
and
popa
dec
lock
sahf
mov
fadd
mov
mov
xchg
aaa
test
ds
enter
mov
sbb
pop
imul
mov
push
xchg
insl
lcall
inc
mov
jge
dec
hlt
lea
ficoms
adc
loope
pop
mov
and
popf
push
inc
and
mov
push
test
daa
mov
add
xchg
jecxz
pop
and
insb
aam
insl
pop
enter
xor
sub
add
and
shlb
repnz
jbe
pop
cmp
cmp
and
shlb
ss
iret
cmp
mov
fwait
adc
sahf
pushf
push
mov
cmp
mov
cmp
adc
sbb
incb
sbb
mov
push
add
cmp
lcall
ljmp
aaa
xchg
push
sub
cmp
inc
cmp
mov
adc
out
mov
rcll
mov
adc
mov
push
pop
out
loopne
add
pop
or
add
faddl
mov
out
aam
mov
std
nop
sub
pop
pushf
imul
xchg
add
jg
ret
jle,pn
adc
xlat
jbe
jle
or
ljmp
leave
pop
ljmp
in
inc
out
minps
dec
adc
mov
fldl
addr16
jns
sub
bnd
testb
icebp
rclb
mov
daa
mov
adc
pop
jecxz
in
fimuls
mov
pop
hlt
mov
dec
test
gs
outsl
std
lds
or
sub
imul
xor
fs
jle
hlt
movsb
shrl
jns
push
leave
cmp
pop
pop
add
cmpsb
pop
inc
lret
icebp
sub
das
dec
mov
and
jmp
xor
and
mov
das
adc
jo
ljmp
lret
cs
lret
cmpsl
cmpsl
outsb
mov
iret
adc
addr16
lahf
lret
lock
js
inc
ret
subb
jg
and
insb
std
int3
jle
cmc
aad
sbb
jo
jmp
mov
adc
cmp
outsb
sbb
ret
cmpb
cmpb
loopne
inc
sbb
cmp
sbb
mov
scas
push
out
mov
mov
cmp
call
xchg
aam
popa
in
in
outsl
scas
cmc
jge
js
push
add
mov
or
sub
out
cmp
inc
push
jmp
xor
jmp
cmp
inc
bound
sahf
mov
pop
cld
cmp
lods
in
mov
mov
push
dec
xchg
out
lods
inc
popf
call
and
leave
sbb
loope
jne
pusha
cmpsb
aas
xor
mov
sub
xchg
cmpsl
es
in
jne
push
or
in
inc
shlb
jns
sbb
push
loop
mov
jle
scas
xchg
loope
loopne
push
ret
pop
mov
xchg
cltd
stc
xlat
aas
dec
scas
xchg
in
cmp
mov
je
sti
xor
and
mov
orl
add
inc
shl
fisubrs
push
jle
in
int
cmp
mov
jb
dec
mov
loopne
mov
mov
xchg
popf
jle
or
mov
mov
movsl
add
pop
popf
pop
mov
pop
inc
or
fsubp
sbb
ljmp
les
rcl
jecxz
movsb
aam
arpl
sub
jae
leave
in
sahf
jecxz
cs
bound
mov
sbb
imul
pop
push
stos
push
sbbl
in
fildll
adc
stos
xchg
mov
pop
out
sub
adc
mov
int3
bnd
push
cs
fimuls
das
mov
push
push
hlt
add
cmpl
cld
loopne
cmp
nop
in
clc
ss
xor
lcall
scas
jmp
jl
adc
xchg
inc
test
dec
add
scas
xchg
cmp
mov
js
fistps
and
dec
and
mov
mov
loopne
idivl
cli
fcoml
enter
push
xor
ret
push
rcrb
inc
jg
je
dec
mov
test
pop
adc
lods
jno
push
aam
sub
add
push
push
scas
jecxz
xchg
enter
cmp
mov
xlat
adc
shr
inc
lret
add
dec
pop
std
gs
cmp
jecxz
shll
push
mov
es
enter
or
scas
cltd
jno
sbb
dec
out
nop
mov
dec
jl,pt
inc
leave
shrb
movsb
sbb
mov
fnstcw
sub
dec
out
jae,pt
inc
movsl
movsl
mov
das
cmc
jae
jge
sbb
push
cli
std
mov
adcl
in
jbe
push
adc
sub
dec
jae
mov
dec
neg
cmp
jnp
and
pop
fsubs
lret
sub
inc
aad
cmc
shl
hlt
in
adc
sarb
mov
add
xor
cmpsb
andps
subl
sub
test
xchg
aad
inc
xor
das
call
push
int3
inc
and
fs
sub
jb
jl
add
addr16
mov
call
add
jne
add
in
fmul
fcom
pop
xor
leave
dec
sbb
mov
clc
outsl
xchg
fildl
test
dec
in
out
jns
sbb
popf
xchg
add
mov
adcl
dec
clc
or
or
in
xchg
mov
mov
mov
pushf
jno
andb
inc
mov
mov
jb
jle
push
sbb
leave
or
sub
add
hlt
dec
dec
or
or
inc
jne
stc
cmp
mov
pop
mov
push
mov
cs
into
pushf
lgs
sbb
sti
cwtl
dec
push
pop
push
aam
dec
adc
fisubl
enter
call
mov
int
aad
mov
xchg
jo
dec
jns
dec
pop
dec
aad
sahf
inc
adc
lret
sbb
addr16
pusha
popa
rorl
cmp
imulb
cmpsl
stos
pop
lcall
fsts
jae
xchg
sbb
cmc
sbb
and
cmp
add
sbb
and
xor
inc
fsts
and
jle
push
int3
add
cmp
insl
call
jge
jo
andl
and
loope
fwait
adc
cmp
imul
dec
in
mov
push
dec
in
xchg
mov
cmc
mulb
pushf
jne
bound
mov
jns
shlb
adc
xchg
call
mov
dec
or
dec
jle
out
cmp
test
in
add
lret
addr16
in
mov
xchg
shll
call
jns
and
and
inc
repz
iret
mov
xor
mov
stos
push
inc
adc
jae
fucom
cltd
mov
xchg
lahf
lds
pusha
push
sub
out
inc
loop
je
dec
imul
inc
pop
imul
mov
mov
rcrl
xor
push
or
arpl
mov
ffreep
out
adc
aam
std
jne
jno
cmovne
test
jne
outsb
addl
fstpt
mov
dec
lods
mov
ret
mov
repz
pop
jecxz
add
mov
cmc
sbb
loopne
stc
pop
arpl
mov
mov
mov
and
pop
fwait
push
push
repz
int
sbb
dec
mull
pop
cltd
or
push
sbb
xchg
jns
sbb
inc
pusha
outsb
xchg
adc
sbb
mov
xchg
xchg
out
push
shr
lods
mov
jmp
mull
adc
inc
fimull
pusha
inc
xchg
fistpl
adc
adc
pop
dec
xchg
call
or
mov
push
add
mov
mov
lahf
sbb
aas
jne
ror
out
int
out
mov
insb
dec
je
jo
mov
push
inc
ficompl
cmp
enter
in
shll
ficompl
bound
add
shlb
popa
cmc
jno
mov
pop
movsl
xor
insl
loope
dec
iret
stos
jmp
stos
mov
imull
xchg
cmp
out
and
iret
add
lcall
test
ret
test
ds
rcrl
xchg
outsb
mov
enter
repz
dec
icebp
push
xor
js
rcl
cmp
fstpl
sti
dec
cmpsl
and
xchg
pop
dec
xchg
pop
insb
icebp
int3
inc
jno
pop
add
sbb
mov
xchg
scas
push
xchg
popa
pop
cmovne
adc
and
mov
pop
lods
push
mov
lods
movsb
mov
dec
push
pop
push
jmp
lahf
jle
lret
add
push
cmpsb
loope
orl
rclb
adc
pop
je
ja
std
cmc
nop
shrb
psadbw
out
xor
iret
divl
stos
cmpl
jl
cmp
cmp
out
cmpsb
mov
addr16
jmp
sbb
mov
mov
push
mov
arpl
sbb
sti
repnz
push
xchg
push
roll
jns
mov
pop
out
dec
sub
icebp
int3
lea
push
mov
sub
fdivl
int
jle
gs
fcoms
in
pop
xor
mov
mov
mov
pop
out
loope
inc
cmpsl
xchg
jo
inc
pushf
outsl
rcr
insb
repz
cwtl
or
mov
mov
sti
sbb
fcmove
sbb
ret
jnp
or
push
mov
subb
jp
cwtl
les
pushl
inc
out
jmp
jnp
pop
nopl
inc
pop
int
std
shr
gs
lahf
imul
mov
icebp
xor
and
or
and
outsl
jmp
pop
adc
aam
shlb
out
xchg
jmp
shl
mov
andl
fimull
mov
fistl
jecxz
mov
aas
or
jns
sbb
xchg
aaa
aaa
loop
in
loop
xor
xchg
outsl
pop
xor
test
jmp
or
add
icebp
xchg
dec
into
test
mov
mov
fs
lret
bound
sbb
loopne
stos
test
sbb
inc
aam
pop
cld
nop
sub
imul
lods
aam
lret
pop
mov
mov
inc
repnz
cmp
dec
clc
outsl
rcl
cltd
imull
in
or
push
repz
xchg
frstor
inc
cmp
fucomi
mov
ljmp
cmpsl
sub
push
xorb
push
pop
lock
leave
push
jmp
mov
popf
or
push
sbb
daa
test
es
mov
mov
cmp
repz
shlb
loope
jns
addl
scas
js
push
jb
stos
push
jb
cltd
mov
jne
jo
dec
ficoml
sbb
ds
inc
adcl
sub
ret
arpl
out
repnz
mov
pop
testb
add
inc
fwait
dec
jbe
cli
xchg
xchg
movsb
ljmp
add
int3
flds
ret
sbb
out
fisubrl
nop
loopne
loope
lods
stc
xchg
cmc
mov
dec
das
jns
fstp
test
fsubrl
mov
aas
lahf
xor
cld
adc
mov
mov
dec
jne
aam
pop
jp
mov
addr16
pusha
gs
push
adc
divl
loopne
cmp
fildll
lret
mov
hlt
mov
addr16
add
adc
or
dec
mov
adcl
iret
dec
ss
inc
imul
mov
mov
ret
cmp
mov
pop
fsts
sbbb
push
pop
rorb
sub
shlb
mov
dec
insl
sub
ret
roll
js
push
adc
mov
cmpsl
sti
mov
sub
mov
movsl
cmpsw
rorl
dec
dec
lahf
xchg
sbb
push
arpl
sbbb
popl
into
js
xor
fidivrs
adc
push
shlb
xor
shlb
xlat
jl
xor
pushf
xor
inc
scas
insl
in
cli
insl
cmpsb
inc
loope
pop
push
mov
jge
mov
mov
mov
and
xor
sub
add
gs
scas
inc
jmp
dec
pop
or
fxch
and
fldenv
sub
mov
jp
dec
sbb
or
insl
sbb
dec
addr16
xchg
fmuls
pop
dec
jne
dec
lret
jne
call
pop
xorl
push
sub
pop
push
pop
inc
aaa
fistps
pop
dec
lods
pop
pop
fwait
lds
mov
dec
push
fldenv
push
aas
aad
test
jae
and
jl
jle
dec
in
adc
dec
mov
inc
fwait
clc
xor
xchg
push
jge
sbb
int
xchg
cmpsl
sbbl
pop
inc
dec
cwtl
fimull
sub
in
lods
cmp
mov
mov
fimuls
xchg
js
mov
lods
cmpsb
add
out
lock
and
add
inc
clc
cmp
test
push
loop
cmp
jmp
je
imul
enter
xor
or
add
adc
push
rolb
sub
jo
dec
inc
or
or
adc
sahf
dec
xchg
sub
sbb
xchg
sbb
aas
or
cmp
pop
aam
ss
or
aas
test
sbb
into
push
sbb
loop
pop
mov
cmp
insb
xchg
jl
aad
pop
lods
add
inc
adc
mov
mov
aaa
xchg
adc
push
sbb
ljmp
mov
mov
inc
inc
sub
jg
dec
in
pop
or
and
inc
jno
in
je
push
gs
shr
mov
jmp
test
pop
pop
ljmp
loopne
call
pop
xchg
sbb
mov
shlb
cli
adc
xchg
mov
mov
movb
push
in
or
inc
daa
test
out
pop
cmp
arpl
in
lret
jge
dec
pusha
mov
mov
out
out
sti
out
fdivrs
dec
lds
mov
popa
sbb
dec
stos
or
mov
ret
cli
inc
fwait
sbbl
adc
mov
cmp
stos
js
movsl
xchg
repnz
pop
aas
inc
dec
scas
movzbl
and
jae
push
cs
ret
cld
jb
inc
enterw
xor
or
jmp
xchg
sti
in
xor
out
pop
mov
test
pop
bound
cmp
fidivl
faddl
or
aad
xor
idivb
push
pop
mov
lahf
mov
mov
lods
mov
xchg
fldl
pop
push
sub
sbb
xchg
call
clc
push
jae
rclb
mov
lds
push
aam
push
adc
push
jmp
mov
ja
mov
popf
lahf
add
in
icebp
fists
repnz
or
fsubrl
pop
stos
xor
lret
cmp
inc
sub
nop
mov
and
popa
pop
jno
xor
idivb
movl
jno
cmp
test
jnp
jmp
mov
push
cwtl
call
mov
test
jae
pop
mov
pop
jo
in
xor
sub
in
notl
xchg
jbe
mov
imul
jp
or
test
loopne
incb
les
cmp
jecxz
mov
dec
xchg
jmp
xchg
ljmp
fisubrs
leave
push
int
mov
gs
or
dec
xchg
fwait
jmp
rcrb
clc
cmc
jg
dec
inc
xor
and
scas
mov
pop
sbb
dec
or
into
mov
pop
lcall
lds
inc
lea
insl
gs
das
data16
inc
sub
sbb
xchg
cwtl
xor
insb
addl
cli
gs
por
dec
jae
mov
mov
or
jb
fwait
daa
and
adc
add
test
shll
in
inc
js
popa
mov
dec
xchg
popf
into
aaa
out
addl
pop
into
inc
xchg
icebp
dec
lret
add
cmp
inc
shrb
subl
cmp
cmp
mov
sub
out
fsubrl
sbb
das
js
push
sub
mov
add
repz
inc
mov
xor
cmc
test
leave
push
push
outsb
xor
imul
into
pop
dec
jno
push
das
shrb
ret
ja
lret
pop
xchg
mov
mov
or
cmp
aas
jp
sub
cmpsb
movsl
sbb
cmp
lods
lret
adc
mov
je
lea
push
insl
movsl
test
mov
pop
outsb
lret
mov
cmp
cld
imul
cli
adc
je
dec
jl
jmp
fdiv
das
mov
cmp
js
nopl
mov
jg
xor
adc
mov
js
jp
js
xlat
movsl
cwtl
je
fcompl
adc
cmp
dec
xchg
xchg
cmp
adcl
cld
jae
push
xor
pop
arpl
mov
adc
out
xor
cs
outsl
scas
push
push
imul
movsb
or
xchg
aam
pushf
ret
or
pop
movsb
push
mov
out
jl
fldenv
aaa
jmp
out
sbb
fwait
push
pop
cli
sub
sbb
adc
adc
fxch
adc
nop
nop
inc
jnp
out
pop
mov
and
bound
push
sbb
adc
mov
xchg
cmc
mov
sub
push
jno
lods
lcall
das
incl
outsb
xchg
popl
xchg
lea
stos
adc
popf
mov
stos
cld
nop
xchg
push
ret
scas
test
cmpsl
dec
sbb
out
std
fsubrs
xorb
ja
jecxz
shrl
or
jle
add
ja
test
in
cmpsb
sbb
mov
mov
mov
mov
ret
push
lods
fimuls
inc
and
into
rorb
fwait
xchg
mov
imulb
cmp
fsubr
inc
dec
xchg
loop
sub
mov
cbtw
arpl
mov
fsubrs
cli
cmp
orl
xor
cmp
enter
cli
rcrl
cwtl
popf
xor
stos
clc
rorl
das
in
repnz
pusha
test
pop
and
mov
scas
xor
decb
mulb
pop
dec
cmp
push
dec
jge
pusha
mov
les
in
insb
mov
fdivs
cmpsb
xor
mov
es
in
lea
mov
das
jbe
jne
mov
pop
ss
xchg
and
and
mov
inc
imul
mov
mov
adc
cmp
nop
push
mov
mov
adc
cwtl
sbb
mov
cmp
inc
bound
xchg
cmc
lods
pop
pop
testl
lahf
jbe
push
add
jp
xchg
jb
outsl
pop
adc
dec
sub
enter
scas
enter
inc
cmpl
nop
lahf
sub
mov
movl
inc
xchg
out
imul
sbb
leave
push
bound
loop
add
incl
incl
xor
mov
in
clc
call
pusha
test
aas
jp
ljmp
mov
adc
mov
mov
jo
xchg
dec
jp
cwtl
ss
mov
mov
add
pop
bound
cmpsl
jmp
insl
mov
icebp
cmp
jmp
subps
or
mov
jl
dec
adc
adc
adc
lahf
dec
and
and
mov
sbb
sbb
cltd
adc
pusha
loopne
push
scas
sahf
arpl
ja
mov
insl
adc
aam
cs
dec
lahf
adc
jno
mov
or
xchg
test
cmp
jns
pusha
in
jp
cmp
sub
andl
dec
pop
sub
inc
inc
jp
addr16
inc
pop
pop
int3
lock
or
add
hlt
dec
repnz
icebp
lods
inc
jb
and
das
rorl
out
int
sub
inc
sbb
insl
in
cmpsb
xchg
cmp
cmp
fimuls
jo
mov
sahf
pusha
fiaddl
stc
jmp
jne
bound
pop
mov
jg
dec
or
push
movsb
adc
montmul
cmpsb
lds
xchg
out
mov
rcrb
les
out
mov
mov
pop
icebp
cmp
ficoms
dec
lahf
leave
les
popa
sti
fildll
fimuls
popf
push
daa
into
mov
cltd
sub
sbb
fsubp
out
jg
sub
pop
sahf
ljmp
popa
fistpl
pop
sbb
sbb
mov
jnp
lret
mov
lcall
int3
cli
push
aad
in
bound
inc
mov
cltd
sbb
icebp
loope
push
cmp
aas
sbb
lods
dec
inc
xchg
aad
mov
repnz
mov
push
fisubrl
loop
inc
js
dec
xchg
ficompl
sbb
cmp
push
jge
int
pop
add
mov
sbb
xor
mov
xchg
add
pusha
jno
jle
mov
sub
add
dec
cmpsl
sbb
cs
sbb
imul
mov
cmp
jmp
pop
nop
incb
movsl
jb
loopne
enter
insb
in
test
shlb
xchg
pop
ror
sub
insb
xchg
xchg
inc
das
out
sub
mov
cmc
dec
test
pushf
inc
sbb
pushf
xor
jle
movsl
rcr
notb
jns
int
cmpsl
int
fdivl
xor
add
arpl
loop
test
xor
ss
cld
xchg
div
add
imul
pusha
rcl
icebp
clc
sub
jo
adc
repz
lret
xchg
loopne
scas
inc
imul
mov
bound
stc
movsl
lea
or
imul
inc
fiadds
mov
in
pushf
mov
mov
mov
cmc
fdivrl
out
stc
cmp
xor
jb
sbb
icebp
test
aad
les
lret
sti
popf
jae
insb
push
sub
aaa
sbb
loop
pop
cltd
adc
mov
inc
stos
mov
and
gs
xchg
jp
jno
sub
les
inc
imul
clc
sbb
mov
lea
jmp
insb
mov
call
xchg
iret
inc
imul
stc
lahf
jmp
and
mov
out
iret
pop
loope
les
in
repnz
sub
orps
mov
pop
nop
popf
pop
adc
mov
outsb
imul
ret
mov
dec
cmc
inc
lcall
sbb
xchg
cmp
adc
inc
pop
pop
adc
in
loopne
adc
mov
push
call
pop
jo
mov
xor
inc
mov
lea
rol
and
fstp
sahf
mov
xor
mov
dec
es
mov
or
xchg
or
in
rclb
fcos
imul
adc
inc
lds
cmc
bound
xorb
cwtl
test
popf
imul
aad
adc
aam
adc
sub
jbe
in
pop
mov
test
pop
and
outsl
xchg
pop
int
dec
sahf
push
adc
pop
add
loop
pusha
push
jno
hlt
les
lcall
mov
sbb
adc
jmp
leave
add
outsb
fcmovu
pop
movsb
sub
std
cmc
inc
out
push
adc
inc
mov
in
hlt
aas
pop
outsb
xchg
push
add
adc
outsl
jecxz
iret
jmp
sbb
neg
aas
pop
xor
jecxz
fucompp
pop
xor
adc
or
ret
xlat
loope
mov
popa
mov
imul
rorl
push
notb
test
xchg
push
dec
iret
push
mov
mov
jno
out
rclb
mov
lcall
js
push
xor
cwtl
inc
scas
or
mov
or
and
push
pusha
imul
sahf
and
xchg
mov
pop
xlat
imul
sub
sub
fwait
repnz
ljmp
popf
jmp
xchg
push
mov
hlt
mov
rolb
cmpsl
ror
loop
mov
pmaxsw
mov
test
aas
sub
hlt
fidivs
js
push
mov
push
cmc
inc
into
inc
jb
mov
and
ret
sbb
cltd
or
dec
jl
sar
call
mov
icebp
je
dec
dec
push
and
cli
fwait
lret
loope
or
cli
jo
in
mov
or
xor
cld
dec
shl
jecxz
fcmovnbe
das
and
dec
mov
push
pushf
add
shl
sbb
addr16
sbb
xchg
aas
or
fstpl
jl
mov
js
test
mov
sbb
push
jle
loopne
mov
push
call
mov
or
sub
jge
pop
aad
lock
insb
outsl
or
pop
sbb
stos
pushl
mov
out
mov
cmp
adc
jae
mov
mov
push
push
imul
pop
mov
idiv
xchg
imul
pop
neg
jmp
or
xchg
sub
mov
dec
inc
mov
fstpl
pushf
xor
or
int
movsb
and
lock
mov
test
mov
bound
pop
xchg
cwtl
call
int3
int3
in
dec
les
icebp
rorb
bound
test
cmp
push
cli
adc
mov
sbb
negl
loop
inc
adc
hlt
insl
lock
in
lds
pop
rcl
and
inc
mov
int
cmp
leave
lcall
and
xlat
adc
lret
push
shl
andl
sti
push
xchg
mov
lcall
cmp
out
in
stos
flds
or
sti
adc
shrl
sti
loopne
mov
dec
stos
popf
cmp
insl
test
aaa
movsl
mov
mov
add
bound
loop
mov
movsb
les
sti
aad
loop
je
push
imul
xchg
xor
inc
shrb
jge
xchg
je
les
push
fcoml
loop
jno
mov
cmp
dec
inc
fs
outsb
in
and
insb
clc
icebp
mov
mov
hlt
cmp
mov
lods
enter
jmp
aam
push
add
ljmp
dec
pop
in
adc
mov
incl
rep
jge
inc
repz
mov
hlt
icebp
push
adc
in
and
sbb
cmpsb
dec
cmp
lahf
push
leave
cltd
inc
inc
sub
ja
sarb
push
jmp
sub
xor
adc
nop
stos
test
cmp
fwait
imul
push
int
pop
cmc
push
jno
movsl
add
scas
add
pop
into
pop
jl
test
in
stc
and
xor
dec
ja
xchg
shll
cmp
dec
lods
mov
xchg
mov
std
into
rclb
js
call
out
ja
sbb
cli
mov
cmc
xor
and
sbb
rcll
icebp
cmc
xchg
xor
mov
sbb
cmp
push
stos
mov
int
adc
je
add
roll
inc
xor
rclb
and
scas
lds
scas
lret
dec
inc
in
cmp
sub
pushf
xor
in
inc
xchg
bound
sbb
fcompl
in
dec
mov
int
jl
sbb
push
pop
sub
inc
mul
data16
inc
aas
jp
mov
xchg
pop
sbb
cwtl
gs
outsl
mov
adc
or
jae
and
lds
xchg
test
sti
xchg
jg
xchg
mov
scas
cli
jbe
aaa
ret
ret
cmpsb
cli
in
enter
insl
aad
mov
cmp
cmpsb
notb
hlt
or
lret
fldenv
pop
jb
sbb
mov
jae
mov
push
jno
inc
xchg
scas
push
and
add
pop
and
sbb
inc
data16
inc
shl
ds
imul
add
cmp
lret
enter
xor
test
jg
scas
jns
insb
sub
mov
int3
inc
clc
xlat
scas
stc
xor
lea
es
subl
pop
int3
add
sbb
inc
xchg
out
mov
into
sbbb
jns
xchg
outsb
cs
mov
push
outsb
jl
xchg
sti
jecxz
push
or
sbb
sar
cmp
mov
cld
test
inc
imul
mov
int3
add
sbbb
mov
pusha
test
jnp
pop
inc
stos
imul
aaa
or
ret
pop
xor
adc
out
sub
adc
cmp
push
test
scas
aad
push
xor
pop
dec
jmp
mov
adc
pop
dec
ss
lea
mov
iret
shrl
push
mov
scas
sahf
inc
jae
mov
cs
in
cmpsl
fprem
ja
mov
mov
ret
fimull
jg
mov
push
pop
lahf
in
aam
jmp
daa
lods
rorb
jns
and
inc
fadds
imul
int
aaa
pop
jb
stc
sub
lds
fmul
mov
push
sbb
sub
pop
test
mov
sahf
push
xor
mov
jle
mov
pop
mov
into
or
shl
mov
add
dec
cwtl
mov
lcall
sbb
pop
shl
push
outsl
in
out
and
popa
out
mov
in
pusha
dec
jne
jno
fcmove
sub
int3
out
fstpl
mov
hlt
popf
in
adc
or
fstl
clc
int
icebp
int
loopne
or
and
mov
outsw
push
mov
rorl
cmp
je
or
out
and
hlt
jp
cwtl
mov
stc
sub
imul
xchg
cmp
mov
sbb
das
out
iret
outsl
out
push
test
dec
sbb
jge
div
jns
jle
adc
pop
dec
inc
jmp
jno
pop
adc
xor
sbb
sub
mov
push
mov
pop
sub
inc
test
sarb
jo
cmp
cld
test
xlat
cmp
pop
insb
pop
ss
and
enter
xor
cs
ja
dec
add
mov
arpl
cmp
xchg
pop
pop
aas
loop
stc
xor
ficoms
push
mov
push
and
cltd
mov
dec
pop
cmp
dec
pop
mov
pusha
xlat
insb
testl
xchg
inc
or
xchg
loopne
lret
hlt
cltd
in
dec
lds
add
push
sarl
fidivs
mov
je
cltd
sub
or
lret
adc
push
loopne
mulb
imul
das
faddl
mov
int
in
test
mov
stos
or
andb
loopne
push
sqrtps
xor
cs
sub
fimull
addr16
pop
dec
push
inc
mov
dec
movsb
gs
xor
add
push
or
test
cmp
inc
ljmp
cli
mov
stos
test
inc
mov
inc
xor
cmp
xchg
jmp
clc
dec
cmc
jbe
stos
mov
loope
lods
rorl
or
daa
mov
add
pop
stos
test
lock
testl
push
adc
scas
fsubl
push
popf
push
flds
mov
jp
insb
out
incb
rorb
das
mov
and
xchg
xchg
jns
sbb
bswap
arpl
and
xchg
stc
in
out
shrb
pop
cmp
test
and
sbb
sbb
sbb
aam
frstor
emms
jmp
jl
and
jg
inc
sbb
add
ja
sbb
mov
cmc
lret
push
testl
sub
and
xchg
and
add
and
out
push
imul
xchg
adc
lock
push
lret
or
dec
stos
repz
testl
imul
sbb
cwtl
mov
fstp
or
fwait
xchg
call
rol
pop
mov
mov
xchg
mov
mov
xchg
sbb
mov
cmpsb
sbb
cmovs
je
sahf
shll
loopne
loopne
ret
mov
aad
jbe
mov
stos
js
sbb
cltd
call
int3
pop
pushf
pop
ret
aaa
dec
leave
lret
add
jb
push
mov
push
sbb
and
roll
out
insl
adc
xor
add
int3
pushl
sti
filds
out
loopne
xchg
adc
lock
xchg
mov
or
loop
cs
in
adc
in
repnz
cmp
push
cmp
rclb
test
jbe
adc
add
mov
ret
pusha
flds
or
mov
lock
pop
pop
and
cmp
rclb
test
adc
std
fldcw
push
mov
cmp
dec
mov
ret
insl
ds
cmc
stos
jnp
out
jle
loope
shlb
sub
std
scas
insl
in
mov
test
repnz
test
mov
cmp
stc
mov
sub
mov
dec
out
push
xor
jne
addl
cs
shl
pop
aaa
in
add
jecxz
pop
loopne
fwait
stc
or
push
sbb
and
std
or
loop
cmp
adc
push
cld
fisubrs
cmp
xchg
popl
fs
xchg
xor
data16
scas
jo
cmpsl
loope
nop
pop
sar
loope
cltd
enter
lds
scas
push
dec
mov
dec
xchg
outsb
int3
scas
idivb
movsb
xor
stos
jp
push
jecxz
inc
loopne
or
or
jnp
dec
cwtl
out
cmp
inc
in
push
add
hlt
pushf
sbb
aad
arpl
sub
mov
mov
push
jle
enter
popf
adc
jne
arpl
fisubl
mov
add
xchg
fistps
fwait
jp
icebp
das
mov
dec
mov
adc
loop
sarl
push
xchg
and
rorb
inc
adc
or
xor
xlat
xor
in
cmpsl
pushf
dec
test
cs
push
jns
mov
jg
cld
call
push
sbb
mov
fldenv
pop
dec
mov
dec
repz
add
mov
sub
add
push
andl
push
xchg
test
rorb
mov
in
popa
jmp
xor
xor
adc
sahf
add
cld
mov
inc
jp
pushf
xor
dec
xchg
nop
std
push
jb
adc
push
mov
cmp
mov
ja
xchg
movl
fldl
lods
sub
movsb
sbb
add
cwtl
fnstcw
cwtl
nop
stc
pop
imul
xchg
push
lds
cmp
cmp
ss
bound
iret
or
sub
daa
push
cmp
cltd
sbb
jns
adc
sbb
mov
loopne
arpl
das
push
jns
icebp
gs
inc
repnz
cmp
mov
in
pop
inc
fnstcw
pop
cmp
shl
push
inc
mov
xchg
bound
xchg
or
cmp
pop
mov
cwtl
mov
push
mov
or
inc
jge
std
dec
nop
js
mov
mov
or
cmpsl
and
and
scas
shrl
ret
lods
pop
pop
mov
test
pop
jbe
mov
iret
sub
push
inc
popf
sbb
mov
mov
pop
ss
jb
jo
pop
das
dec
cli
stos
movsl
or
push
fstpt
xor
movsb
xor
mov
pop
mov
movl
mov
data16
jo
xchg
jmp
push
fs
cmpsl
test
scas
sahf
push
pop
sbb
movsb
cwtl
mov
daa
rcrl
sub
jnp
pusha
leave
rorl
movsl
xor
pop
mov
dec
xor
push
test
ficompl
jmp
and
sbb
push
pop
and
dec
add
jl
outsl
mov
mov
or
push
fs
insb
or
xchg
fisttpll
lret
inc
xchg
cmp
jmp
in
inc
jne
sahf
mov
outsl
xchg
cmp
dec
push
scas
out
adc
outsb
dec
dec
xlat
sub
dec
add
adc
sbb
sub
adc
pop
sub
cmpsb
movsb
cmp
jge
sbb
fmull
fadd
es
in
mov
inc
mov
stc
and
sti
cmc
imul
jno
outsb
sbbb
pop
std
lock
lock
in
mov
incl
sbb
loope
test
movsb
fcomps
std
fmuls
jle
dec
sbb
in
pop
adc
loop
mov
xchg
push
mov
lods
xor
xchg
pushf
lret
inc
push
pop
mov
lret
cld
adc
lcall
sti
sub
repnz
ret
adcl
popf
sti
xchg
xchg
in
push
repnz
inc
mov
aas
add
inc
add
outsl
rcrl
dec
pushf
sub
daa
cmpsl
leave
and
mov
push
jp
ret
mov
pop
in
mov
mov
pop
lahf
adc
mov
xlat
fs
fdiv
add
cmp
pop
cltd
repz
jp
dec
jmp
jg
lcall
adc
cli
out
ficompl
out
push
mov
nop
pop
div
mov
fadd
jno
cltd
pop
jno
mov
sub
push
sbb
inc
add
std
and
mov
pop
inc
jnp
call
mov
and
pop
fs
clc
mov
cmpsl
ret
xor
or
lcall
aam
and
jmp
jmp
jmp
out
and
xorb
jl
insb
pop
aad
sti
jp
or
pop
out
jb
mov
pop
jmp
shll
or
test
jmp
stos
in
or
sar
mov
inc
les
dec
roll
sub
dec
stc
andb
mov
rcll
sbb
inc
mov
xlat
cmc
lahf
leave
inc
xor
insb
adc
iret
stos
mov
mov
pop
push
mov
add
ret
cmp
repz
xor
insl
lods
aaa
xchg
pop
loope
mov
add
adc
sub
push
or
sub
cmp
mov
xor
jmp
addr16
stos
mov
jge
outsl
int3
sub
jne
popf
xor
insb
scas
cwtl
ss
xor
mov
cmp
in
fwait
es
and
fucomip
ficoms
cmpsl
adc
loop
rorl
ror
in
xchg
push
hlt
or
or
test
icebp
and
mov
mov
stc
mov
xchg
in
in
rolb
out
mov
sub
mov
lock
testb
incl
push
mov
xchg
xchg
mov
pop
ss
cwtl
or
into
cltd
pop
clc
into
std
adc
push
roll
into
jge
pop
rcrl
push
aaa
xchg
xor
subb
or
push
imul
add
arpl
add
into
and
clc
jecxz
xor
hlt
jae
jmp
and
pushf
test
loope
sbb
scas
push
lods
inc
hlt
dec
pushf
pop
jp
popa
dec
js
jb
fs
mov
push
lock
in
pop
sub
out
imul
ret
ficoml
adc
nop
idivb
and
test
lret
std
cmpsl
dec
addr16
sti
fdiv
and
inc
mov
test
enter
aam
jbe
push
add
data16
sets
cld
imul
fs
pop
and
jle
loopne,pt
adc
mov
mov
push
lcall
push
sbb
mov
xchg
xchg
cli
push
out
rol
sub
add
das
add
out
lods
js
std
push
and
loopne
inc
sbb
mov
or
dec
cmpsb
add
dec
fmull
inc
sbb
inc
divb
push
cmp
sbb
inc
lock
test
ja
ljmp
xchg
outsb
out
xchg
and
inc
sahf
je
cwtl
std
les
inc
into
movsb
test
mov
aaa
out
fnsave
and
in
test
cs
xor
mov
cmpl
or
std
dec
mov
fisubrl
adc
movsb
dec
sahf
aad
scas
sub
imul
xor
mov
negl
sub
jno
lock
and
jp
rorl
data16
mov
sbb
sbb
and
shlb
lock
loope
xchg
nop
xlat
mov
loopne
shl
nop
test
int
push
xchg
addl
push
and
mov
adc
addr16
repnz
xor
leave
lahf
push
adc
push
adc
xchg
jne
cmpsb
ja
das
and
fcompl
sub
cmp
and
int3
movsl
sbb
mov
adc
lahf
jnp
mov
ret
sbb
mov
xchg
adc
and
iret
in
sti
ja
pop
cmp
sub
sbbl
jge
scas
mov
in
aas
inc
aam
mull
mov
dec
xchg
jmp
imul
out
push
xchg
in
mov
mov
or
clc
mov
add
and
add
xchg
jnp
and
jge
loopne
sub
scas
arpl
cmp
jg
popa
in
and
mov
test
xorb
dec
call
cmp
andl
cmp
mov
or
mov
adc
inc
mov
rorb
js
sbb
roll
xchg
inc
int3
inc
aas
cmp
outsl
xchg
xor
and
xchg
add
pop
fs
je
js
js
mov
pop
mov
orb
jl
iret
mov
xchg
xlat
sbb
add
mov
sbb
cmpsb
xchg
mov
xor
fcmovb
in
or
inc
cmp
hlt
cmpb
xchg
and
xor
cmpl
add
subb
adc
jecxz
cmpsb
ds
dec
push
imul
sarb
push
mov
movl
aam
gs
fldcw
lahf
push
adc
push
push
fmul
push
mov
js
cmp
in
push
add
stc
fnsave
sbb
lret
dec
push
mov
in
shrl
lret
cmp
add
and
fldl
out
sbb
out
sub
movsl
in
push
fidivrs
and
iret
fidivs
dec
push
jp
into
popl
mov
pop
push
xchg
mov
call
xchg
mov
ljmp
mov
inc
fsts
ficoms
js
movsb
sub
out
pop
mov
cwtl
fiadds
mov
popf
jne
aas
rolb
sub
lahf
pop
pop
sub
inc
mov
push
mov
es
insb
inc
jl
lods
in
xchg
outsb
mov
lea
movsb
inc
mov
mov
cmp
aas
in
push
cwtl
sub
or
cs
enter
popa
pop
or
and
enter
pop
fwait
ret
fwait
shl
mov
mov
push
int
scas
sbb
je
and
pop
test
stos
fildl
sti
enter
lahf
dec
ficoml
xchg
clc
cmp
jb
test
jno
fiaddl
mov
test
es
ja
lcall
jae
xchg
lahf
lods
mov
adcl
cld
xchg
cmc
or
mov
leave
stos
out
push
cmp
xchg
cmp
and
mov
xchg
mov
mov
lahf
pop
divb
xlat
shll
xor
mov
jmp
xlat
xchg
mov
pop
mov
inc
push
pushf
iret
or
mov
test
or
pop
cmp
and
in
push
hlt
lcall
cmp
cltd
jnp
je
and
adc
mov
lods
inc
sub
mov
mov
mov
adc
pusha
jmp
push
adc
mov
adc
mov
and
adc
es
stc
mov
mov
out
push
pushf
stc
mov
adc
stos
movsl
mov
dec
push
pop
test
xchg
sbb
fisubrs
dec
mov
mov
dec
push
mov
cwtl
clc
fdivl
xor
ret
pushf
add
loope
cld
pop
test
insb
dec
das
aam
hlt
nop
lds
ja
vpextrw
lds
sub
sahf
xor
jno
daa
dec
dec
jp
dec
dec
dec
mov
inc
mov
fdivrl
cmpsl
cli
cmp
enter
sbb
imull
iret
lods
int3
jne
shlb
das
test
out
pop
xchg
fcomp
sbb
push
stos
mov
sbb
xchg
push
sbb
inc
scas
stc
jmp
outsb
das
js
push
gs
je
mov
mov
pop
scas
mov
xor
push
mov
xchg
stos
inc
fnstcw
and
mov
fidivrl
cmp
insl
cltd
aaa
mov
mov
inc
setno
ret
mov
mov
mov
lods
jmp
sbbb
pop
cmp
jns
mov
inc
push
fcmovbe
pop
mov
mov
mov
pop
or
add
aaa
out
pushl
jmp
add
xor
adc
mov
xorb
rolb
mov
and
xchg
add
add
xchg
dec
nop
jge
jbe
in
xchg
fs
mov
lretw
sbb
ljmp
dec
dec
push
pushf
sub
cmc
test
aaa
in
sub
jmp
push
adc
fdivrl
mov
dec
fstl
push
jae
sbb
xor
lret
xor
push
and
adcb
xor
adc
fisubl
rclb
push
js
pop
jb
aad
xchg
xlat
adc
mov
lea
adc
xchg
push
add
xor
lock
mov
or
fsubl
adc
repz
mov
fisttpl
ja
mov
rcll
push
add
sahf
ds
and
push
sub
cli
subb
inc
xor
fldl
cmpsl
test
dec
or
loop
bound
bound
jle
or
das
sub
add
mov
addr16
mov
lock
imul
xchg
mov
xlat
mov
jnp
inc
dec
jae
ja
invd
movsl
mov
sub
sub
pop
testl
xchg
or
pushf
jae
fs
inc
scas
outsb
mov
add
or
les
lea
repnz
xchg
dec
mov
fcmovbe
mov
or
subb
fldenv
sbb
fsubrs
imul
xor
add
pusha
js
push
popf
lret
mov
xchg
clc
cmpsl
inc
outsb
loopne
xor
add
repnz
and
push
ds
mov
movsl
and
movsb
leave
or
mov
jnp
sbb
outsb
lahf
iret
int3
frstor
fdivrl
test
push
in
daa
xchg
fisttpl
and
sbb
sbb
sahf
mov
in
insl
cmp
lods
js
mov
mov
push
sbb
popa
cmp
inc
jmp
std
movsl
in
mov
loop
adc
lock
mov
lret
mov
cmpsb
int3
out
dec
adc
jmp
inc
in
mov
adc
clc
je
jle
pop
sti
loope
test
outsb
cs
fwait
cmp
jae
icebp
dec
loope
mov
popa
imul
es
xor
jo
lret
pop
inc
cld
xor
pop
mov
test
sbb
xor
daa
mov
repz
stc
inc
fcmovnb
jbe
rorb
xlat
ficompl
mov
test
outsl
xlat
scas
mov
aad
dec
dec
roll
aam
and
cmpsb
sub
adc
cmp
data16
and
movsb
cltd
iret
xor
inc
adc
in
out
jnp
repz
loop
enter
sbb
imul
jne
pop
arpl
dec
mov
stos
cmp
push
nop
or
xchg
stos
mov
dec
scas
loopne
jmp
push
cmpsl
jns
lods
mov
mov
fidivs
mov
imul
cmp
in
in
into
ret
sbbl
jae
int
lret
jmp
jmp
clc
int
insl
push
add
stc
sbb
dec
addr16
adc
sbb
xchg
out
pmulhuw
div
inc
push
add
inc
test
mov
lcall
out
add
add
and
push
das
xchg
cmp
xor
test
push
aas
xchg
sub
scas
push
fwait
mov
imul
xlat
push
repnz
fimull
pop
gs
mov
mov
aas
out
xchg
pop
mov
and
mov
ljmp
pop
ljmp
pop
or
lahf
xor
inc
jb
aam
imul
dec
xor
dec
cmpsb
jmp
es
mov
ja
mov
xor
jb
sarl
mov
fldt
adc
ret
andl
lds
add
cmp
push
iret
dec
lock
cmp
sbbb
addps
xor
xchg
sbb
scas
mov
inc
dec
stos
mov
clc
in
sbb
dec
sbb
imul
sbb
adc
push
mov
iret
fmull
insb
data16
sub
xchg
fwait
cvttps2pi
dec
dec
cmp
fidivs
js
and
jmp
insb
jbe
sub
mov
in
pop
lock
out
adc
js
mov
add
loope
daa
into
stc
mov
in
mov
cmp
mov
cmp
cmp
aaa
jge
in
repnz
lret
out
mov
mov
fstl
loop
add
mov
push
lea
cltd
stos
xchg
inc
lods
ss
push
stos
adc
inc
sbb
ds
add
sbb
imul
jns
daa
jb
cmp
scas
fnsave
adc
gs
subl
wbinvd
out
out
lcall
ffreep
and
out
mov
lcall
xchg
popf
or
and
fwait
mov
xor
je
mov
adc
sti
mov
inc
mov
nop
xor
les
outsb
loopne
rcl
push
cmp
popa
fidivrs
inc
push
xchg
mov
push
iret
out
bound
subb
push
and
push
jno
movsl
sbb
add
adc
cld
out
lcall
jge
xchg
cmpsl
and
adc
insb
sbb
movsb
cmpsl
insb
pusha
or
jmp
adc
loope
cld
pusha
data16
jge
pop
cld
out
je
lods
inc
inc
xchg
jne
push
push
ss
dec
add
dec
jg
shrl
int3
sub
inc
mov
mov
stos
xorb
adc
pop
mov
cmp
jne
imul
ds
stos
mov
jge
incl
mov
xor
or
xor
outsb
mov
sarb
xchg
cld
fs
mov
mov
lea
sbb
push
sub
sbb
pop
pop
mov
cmp
push
adc
test
insb
outsl
test
sbb
pushf
aad
cmpl
mov
and
stos
lahf
mov
mov
lcall
mov
dec
fnstsw
scas
dec
pop
inc
and
test
adc
mov
les
outsb
sbb
push
addr16
jo
cmp
cmp
addl
mov
stos
mov
subl
sahf
or
cmp
jge
or
fsubrl
inc
mov
je
mov
cmpsb
xor
lds
mov
clc
jle
sbb
inc
cmpsl
inc
jb
cmp
cwtl
and
cmp
mov
aaa
fildl
adc
sub
js
and
cmp
addr16
and
orl
bound
pushl
pop
icebp
test
pop
iret
inc
fnsave
pop
loop
or
mov
sbb
cmp
adc
jbe
push
mov
xchg
cli
push
mov
xchg
jno
and
adcl
insl
push
push
cmp
fldcw
ret
push
ret
mov
test
jns
outsb
fildl
sub
bound
inc
call
mov
jne
cmp
imul
inc
mov
movsb
out
test
cld
leave
pop
and
dec
call
cli
shrl
mov
adc
repnz
pop
stc
sub
mov
add
int
jno
push
sub
xchg
add
rclb
jb
mov
adc
sub
daa
or
stos
adc
jns
cs
pop
cli
fisubl
push
sahf
mov
sbb
mov
rep
push
movsl
mov
lock
cmp
mov
xor
sbb
xchg
popf
repnz
or
es
inc
out
ret
inc
dec
lods
pop
rolb
int
inc
xor
les
js
add
cmpsl
push
jne
rcrl
mov
or
xor
mov
out
shrb
adc
fprem
mov
loopne
notb
mov
sbb
sbb
lret
mov
pop
clc
jle
push
je
push
iret
lods
dec
out
in
out
movsb
lahf
push
std
mov
mov
mov
lock
jg
xchg
test
aaa
pop
pop
push
rcl
test
xchg
loopne
notl
jle
and
push
sbbl
mov
adc
xor
bound
push
aam
pusha
lea
loopne
sbb
or
push
xor
loopne
mov
or
push
aam
mov
sub
sub
jnp
mov
lea
jmp
in
lock
adc
in
ret
lret
or
ljmp
bound
xor
fidivrs
sarl
add
add
push
mov
cmp
mov
stc
ret
out
movsb
mov
dec
or
xchg
std
addr16
and
or
bound
mov
xchg
dec
mov
adc
sub
or
clc
add
xchg
mov
mov
add
insb
out
pusha
inc
aaa
dec
popf
into
sub
push
shlb
cli
lock
add
out
mov
mov
stc
mov
lods
or
add
loopne
pop
es
sbb
sbb
es
js
xchg
inc
mov
dec
fmull
mov
xchg
mov
add
gs
stos
inc
std
filds
dec
shll
lods
pusha
aaa
and
scas
jmp
pop
js
mov
movsl
pop
and
add
int
cwtl
cmp
jno
sti
cmc
xchg
pop
repnz
adc
push
imul
out
pop
scas
out
mov
sub
dec
shrb
jo
lcall
sbb
push
imul
jg
cmp
xchg
ss
adc
in
and
push
paddsw
ficoml
testl
jge
push
ja
insb
push
jne
pop
outsl
fimull
mov
mov
mov
popf
sbb
adc
aam
mov
sub
int3
out
mov
xor
lret
loope
jge
loope
mov
stc
ret
pop
loope
pop
sbb
movsl
push
in
aaa
and
test
fldl
cmpb
sarl
pop
dec
dec
dec
mov
jne
cmpsb
mov
cli
in
push
outsb
out
sbb
pop
enter
mov
repnz
mov
inc
inc
int
jle
and
push
fnstsw
sub
pop
gs
xchg
imul
clc
dec
nop
cltd
imul
xor
or
sahf
sbb
ds
popw
cmp
push
push
jo
sbb
das
add
xor
sbb
dec
cmp
mov
add
mov
mov
inc
daa
mov
ljmp
sbb
pop
aaa
sbb
jmp
in
loopne
mov
fiadds
sbb
subl
test
fwait
imul
cmc
sub
inc
mov
push
lock
jnp
xchg
adc
mov
test
insl
inc
les
in
add
fistl
loope
stos
inc
scas
jp
add
inc
pop
inc
or
mov
or
test
or
jbe
push
adc
pop
pop
add
mov
imul
push
dec
loope
xorb
int3
insl
push
in
in
cmpsl
xchg
mov
adc
jo
mov
ds
lcall
hlt
out
filds
push
jnp
lods
cltd
sub
enter
dec
jne
mov
mov
mov
pushl
clc
sar
adc
xor
fadds
cli
aam
push
or
dec
adc
lock
add
inc
ja
outsb
rcll
ja
fisttps
lds
in
adc
jae
pop
dec
adcl
call
or
movsl
mov
or
mov
push
jbe
mov
mov
inc
pop
mov
scas
lret
inc
ds
dec
call
hlt
xor
cmp
mov
xchg
rorb
jno
je
into
je
jle
sub
pop
sub
bound
lret
push
inc
jo
sbb
and
cmc
test
adc
cmpb
mov
fdivrp
stc
adc
aas
jb
mov
mov
popa
push
iret
cmp
les
lea
inc
popa
loop
sub
fs
adc
leave
stos
xchg
fmul
dec
ret
inc
call
test
inc
sbb
inc
dec
imul
mov
leave
cmpsl
inc
mov
ret
je
sbb
push
jl
pop
out
js
push
mov
xchg
lcall
test
lret
arpl
pop
push
dec
add
loopne
pop
into
hlt
push
rclb
adcb
sub
inc
insb
dec
vmaskmovdqu
jmp
ret
jns
int3
push
mov
cmp
or
les
cli
xor
std
xchg
inc
into
adc
cmp
insl
mov
incl
enter
mov
pop
clc
mov
push
and
dec
push
jge
les
ror
ret
fidivl
or
adc
push
mov
and
or
xchg
out
aaa
inc
jbe
inc
inc
fcoms
ljmp
nop
mov
push
mov
or
leave
testl
iret
jl
popa
xor
sbb
cmovge
mov
lahf
imul
ret
pushl
repz
sbb
mov
jmp
push
lea
test
push
sub
rcrl
fsubs
fiadds
cmp
testl
xor
ja
dec
mov
adc
mov
jbe
and
cmp
lods
out
lds
adc
xchg
fsubrs
cmpsb
testl
jg
push
push
jns
lahf
shlb
cmp
mov
dec
repnz
inc
inc
push
pop
xchg
rcr
cmp
push
cmpsb
and
and
jp
jae
mov
xchg
movsl
xchg
mov
inc
test
inc
repnz
dec
das
lods
test
aas
gs
lods
pusha
jno
lock
decb
sbbl
sub
xchg
cmpsb
lds
mov
int3
and
pop
repnz
mov
push
sti
adc
sahf
sub
add
popa
mov
mov
outsl
test
mov
cs
imul
jmp
dec
mov
pop
ss
into
mov
jne
flds
add
idivb
mov
stos
lds
add
add
sub
push
in
popf
loope
xchg
push
mov
xlat
mov
and
sti
sarl
jge
sub
test
inc
les
cs
sbb
xchg
inc
mov
out
ret
outsb
or
mov
jbe
push
clc
jp
ret
mov
push
call
bound
mov
icebp
ss
test
stos
les
xlat
jno
dec
arpl
and
inc
insb
xor
arpl
icebp
repnz
mov
xor
stos
dec
lahf
cmpsl
jp
xor
dec
and
lahf
outsl
jecxz
mov
movsl
push
popf
xchg
push
mov
xor
fisubrl
movsl
lods
mov
cltd
ss
mov
pop
pusha
movsb
jae
std
push
mov
daa
or
scas
adc
and
ret
stc
push
pop
mov
and
adc
adc
test
fs
dec
lahf
add
cmc
lret
pop
inc
daa
mov
jo
fs
push
hlt
pop
inc
and
mov
xchg
cmp
jb
in
sar
fsubp
mov
jnp
jo
and
aas
jns,pt
fisttpll
sub
pop
lret
xchg
arpl
ret
rcll
aam
adc
addr16
mov
pop
jne
adc
jle
xor
aam
dec
ja
sub
adc
arpl
sub
jb
fnstenv
jo
iret
push
cwtl
lahf
repnz
pop
js
jae
pop
inc
out
dec
mov
rol
pop
jp
jnp
xor
inc
jno
dec
mov
dec
cmpl
inc
enter
jl
pop
xor
dec
dec
nop
int3
cmp
fmull
and
hlt
and
frstor
sbb
test
and
cmpsl
mov
data16
mov
sub
sub
jb
rolb
dec
xchg
push
lock
add
push
insb
icebp
mov
lods
enter
mov
stc
icebp
lods
adc
test
nop
inc
fs
dec
out
sbb
cmc
cmp
insl
jl
insb
fs
nop
mov
mov
idiv
cmp
scas
cmp
or
test
inc
add
test
dec
inc
xor
inc
mov
cmp
int3
daa
cmp
mov
xchg
std
adc
dec
divb
repz
stos
xchg
dec
cmpl
sub
xor
pop
push
insl
cmpsl
push
orl
dec
add
lods
push
and
inc
mov
roll
insb
sbb
daa
fnsave
in
xchg
pusha
pusha
jmp
pop
cmpsl
or
stc
imul
mov
mov
or
add
movsb
mov
and
aad
das
loope
sarb
push
movsb
int
dec
pop
mov
fimull
lcall
mov
jmp
mov
push
repz
mov
jne
daa
js
lahf
cmpsl
mov
add
cmpsl
imul
sub
mov
imul
lret
xor
inc
lods
add
add
dec
mov
test
repnz
call
rorb
pop
insb
adc
sub
inc
cmc
push
stc
pop
lret
aas
lahf
ret
insb
adc
bound
sti
fcomip
jl
in
jns
rcll
push
push
mov
dec
mov
mov
lret
lcall
leave
das
push
outsb
adc
addr16
sub
sub
inc
popa
fs
gs
arpl
aam
push
lcall
das
inc
push
add
push
test
add
dec
daa
fbstp
pop
sti
sbb
push
jbe
sub
push
adc
cmp
loop
call
dec
js
inc
adc
and
inc
mov
icebp
cmpl
adc
lcall
add
xor
inc
sbb
test
fidivs
and
loop
mov
imulb
mov
lods
add
pop
mov
fwait
dec
hlt
cwtl
pop
ret
nop
out
das
dec
xchg
fxam
mov
gs
mov
mov
cwtl
push
sbb
lcall
and
add
add
jmp
pop
xor
cwtl
pushf
or
ficoms
jecxz
fs
mov
insb
mov
clc
mov
bswap
aam
pop
addr16
in
ss
sbb
loop
out
es
jmp
test
stos
fwait
push
aam
sbb
aaa
loopne
and
arpl
sti
es
or
mov
or
or
mov
negb
test
adc
je
or
push
je
push
fidivrl
mov
mov
sub
cmp
mov
mov
or
jo,pt
leave
call
jnp
and
fimull
add
push
pusha
repz
hlt
lds
stos
scas
sti
pop
pop
test
mov
fnsave
pushf
fwait
mov
in
pop
cwtl
ljmp
add
scas
test
jle
or
test
pushf
push
dec
pop
cmp
push
push
and
das
xor
push
or
test
pushf
mov
mov
push
mov
scas
push
mov
fimull
ret
push
cs
mov
xor
mov
out
shll
and
adc
js
mov
es
lea
ss
aaa
sbb
push
fs
add
shlb
mov
mov
addr16
mov
mov
loope
inc
outsl
mov
test
xchg
cmp
mov
jg
fwait
cmp
pop
test
push
aam
mov
fdivrs
pop
sbb
and
decb
sub
iret
adc
xchg
gs
sahf
aaa
int
iret
out
adc
sbb
test
out
jge
mov
pop
mov
adc
ljmp
aas
ret
sbb
xchg
out
or
fisubl
aam
scas
arpl
mov
fstpl
add
mov
push
adc
adc
shrb
or
addr16
pop
ja
push
rclb
add
idivl
aaa
aam
ja
out
xor
dec
mov
sti
push
push
dec
dec
cmp
mov
popa
adc
daa
int3
and
push
imul
scas
xchg
jne
lcall
push
rorb
fdivrs
xchg
sahf
js
or
sub
and
or
pushf
sub
jbe
scas
push
sub
or
xchg
mov
rolb
add
loop
in
cmp
xchg
jge
jle
lea
imul
mov
push
in
add
pop
sbbl
adcl
inc
iret
push
xlat
sbbb
jg
frstor
int
in
in
xchg
mov
cmpsb
mov
pop
sub
pop
inc
xchg
lds
mov
jle
push
cmpsb
mov
repz
adc
sbb
jmp
aam
and
mov
mov
jno
xor
std
mov
imul
add
jnp
push
add
lcall
stc
fldl
cmc
cmp
inc
push
sub
pop
int
mov
jno
adc
sarb
lea
jb
inc
sti
arpl
mov
mov
xlat
aam
or
bound
dec
fnstenv
push
ds
push
flds
push
fcoml
mov
add
cmp
stos
inc
add
adc
sub
loop
scas
inc
cmpsl
add
push
aaa
lock
mov
mov
jo
fdivr
add
cwtl
popf
adc
mov
into
mov
add
dec
inc
cli
lret
inc
cmp
rcrb
sbb
and
movsl
xchg
adc
cmp
mov
mov
inc
dec
mov
sub
pop
in
jp
adc
pusha
ds
pop
xchg
mov
hlt
lea
rcr
cmpsl
repz
cmp
dec
bound
pop
cltd
cmp
dec
sub
mov
push
add
mov
jp
sub
in
test
addb
add
mov
adc
sub
lahf
or
ret
movsl
mov
sbb
xchg
std
xchg
fidivrl
push
xchg
notb
push
push
pop
loopne
adc
xchg
rorl
int
pop
shrb
clc
icebp
mov
cmpsb
out
xchg
mov
dec
out
mov
js
int3
dec
lods
cs
jnp
lods
test
or
push
insb
mov
cld
jae
es
mov
push
mov
inc
dec
rol
stos
orb
inc
rcrl
lret
jns
add
jg
mov
pop
jb
stos
cld
enter
jo
fcomi
idiv
jl
lret
idivl
xchg
push
dec
andb
lods
fbstp
add
mov
and
fsts
xchg
repnz
pop
notb
adc
imulb
cs
mov
lock
cwtl
out
stos
movsb
test
cltd
fsubl
sub
jge
inc
fcmovu
icebp
add
pop
ja
movb
pop
pop
iret
pop
mov
in
mov
leave
imul
pop
cld
sbb
push
loop
scas
add
pop
mov
mov
push
mov
inc
imul
mov
mov
lods
ret
and
mov
and
push
in
xchg
add
clc
mov
cmpsb
leave
sbb
add
hlt
inc
sbb
inc
arpl
xlat
dec
mov
and
push
stos
add
and
or
xchg
in
cmp
fbstp
mov
mov
xorl
lock
pop
imul
fwait
lods
mov
jno
ret
in
stc
imulb
jo
std
cwtl
sub
push
and
popa
push
mov
mov
push
push
push
rorl
mov
pop
mov
outsb
inc
xor
mov
sbb
shll
sbb
in
pusha
mov
stos
xor
add
mov
inc
outsl
jmp
xor
cmp
mov
lock
mov
xlat
mov
mov
and
adc
sub
ss
cwtl
mov
in
dec
aad
or
pusha
adc
stos
mov
cmp
clc
pop
mov
hlt
dec
inc
push
add
dec
xchg
lret
out
sahf
in
jne
pop
push
pop
jbe
rolb
inc
push
jl
jl
and
andb
or
test
jae
orl
pop
pop
dec
sbb
daa
inc
xchg
gs
mov
in
inc
cmpsb
cmp
insl
inc
into
xchg
mov
push
enter
inc
daa
leave
aas
cmpsl
out
lea
xor
mov
mov
pop
mov
inc
pop
or
dec
jns
out
sub
sbb
cli
mov
std
in
out
gs
testl
inc
adc
in
or
jne
sti
out
pop
test
or
push
xchg
inc
push
jnp
notl
mov
add
insb
std
sub
sub
mov
lcall
jno
sbb
inc
out
mov
mov
pop
aad
and
inc
int
pop
pop
dec
add
mov
mov
fildl
outsl
mov
fistl
imul
lahf
or
pop
jb
subb
xchg
xor
dec
rcll
loope
push
lods
cli
xchg
dec
out
add
mulps
iret
rorl
sub
jnp
jnp
dec
xchg
bound
cmp
pushf
jge
and
int
dec
xchg
pushf
cli
cwtl
jp
adc
mov
std
mov
out
inc
jmp
xchg
inc
lock
ja
movsb
add
cmp
ds
jg
loope
sub
xchg
aam
test
mov
call
testl
repz
jae
jp
xor
or
aam
rcrl
inc
push
xchg
jns
daa
xor
insl
dec
sub
js
xchg
negb
inc
adcl
jmp
scas
popf
pop
pusha
hlt
dec
fistps
out
inc
and
int
rcr
mov
rol
hlt
pop
xor
lods
xchg
fcomps
dec
sub
insl
daa
inc
fdivrl
sbb
sti
mov
jge
ja
and
mov
mov
lret
cmp
mov
cmp
mov
or
outsb
pop
js
lds
adcl
mov
ret
cwtl
pop
testb
adc
outsl
sub
inc
mov
jg
cs
cmp
es
inc
lods
ret
test
xchg
shr
push
cmp
and
cwtl
and
mov
mov
mov
sub
jnp
sti
push
ljmp
add
addb
push
adc
enter
stos
addl
mov
xchg
icebp
cwtl
cmpsl
xchg
icebp
jmp
test
icebp
push
test
jo
mov
scas
inc
adc
jne
inc
ja
push
xor
jmp
mov
fisttps
sub
or
xchg
leave
add
mov
test
and
push
int
imul
outsl
daa
push
lret
jp
push
rclb
dec
xchg
xchg
or
shrl
dec
mov
stos
mov
inc
addr16
cmp
imul
arpl
clc
mov
mov
lret
push
push
test
mov
ja
adc
insl
xor
adc
xor
les
sub
neg
in
into
rorb
lock
scas
jmp
sarl
fstp
mov
or
ljmp
xor
xchg
repnz
push
add
sbb
das
mov
adc
in
pop
out
lock
mov
mov
fwait
mov
je
adc
jge
adc
fwait
jmp
adc
fsubr
jecxz
bnd
sub
add
test
mov
scas
mov
or
adc
pop
fucom
test
rcrb
mov
add
gs
outsb
subb
sub
aas
push
adc
sub
insb
sub
mov
mov
mov
mov
sbb
push
dec
mov
std
and
leave
adc
cmp
in
mov
movsb
xchg
cmp
scas
push
or
push
xchg
inc
jae
adc
push
xchg
push
fisubl
inc
sbb
mov
enter
int3
imul
lcall
mov
mov
mov
hlt
inc
dec
sbb
movsb
sbb
adc
xchg
jo
sbb
pusha
into
pop
jne
in
pusha
or
popf
lock
jns
adc
pop
test
dec
xchg
mov
cmpb
mov
shlb
fst
iret
mov
popf
xchg
sub
mov
cwtl
jae
cmc
lods
push
push
icebp
scas
dec
out
cmp
mov
pop
dec
icebp
fsubr
add
ret
mov
rorl
cmpsb
into
cmp
add
test
inc
inc
xchg
adc
cmp
in
mov
sub
pusha
xchg
jge
aam
pop
jge
andb
xchg
test
mov
gs
sub
mov
popf
pop
lods
call
dec
cmpsl
mov
xchg
sahf
cs
bound
clc
fucomip
sub
popa
dec
addr16
push
mov
cwtl
push
sbb
jl
es
addl
cltd
xchg
sub
add
and
jo
sub
out
and
xchg
cmp
push
aad
scas
inc
xor
mov
and
dec
and
inc
out
lret
ss
dec
sar
pushf
mov
les
jg
sbb
popa
ja
and
cwtl
ret
lods
jmp
add
icebp
add
rolb
dec
cmp
pop
add
and
cmpsb
jnp
lret
xchg
stos
xchg
dec
mov
jnp
cmp
mov
imul
stc
mov
hlt
loopne
rcr
sub
es
sub
push
adc
jb
test
sarl
fisttpl
add
sub
sub
cmp
orb
push
sbb
sbb
outsl
andb
cmp
jl
mov
ss
jne
stc
mov
push
xor
loop
pop
xchg
into
ljmp
jns
out
pop
add
or
idivb
sub
push
jbe
push
add
sbb
sbb
lret
outsb
test
xor
fists
jl
xchg
mov
adc
stos
or
scas
filds
shl
jge
jl
jbe
in
mov
pop
ja
int3
mov
sub
sarb
loopne
inc
mull
movsl
divb
subl
add
dec
jbe
std
std
int
xor
cmpsb
outsb
or
inc
insb
imul
jp
add
ret
pop
dec
push
mov
push
arpl
outsl
orb
sub
pop
movsb
mov
cltd
pop
mul
out
jge
test
jns
testb
or
mov
int
push
pusha
jge
lret
jg
jge
repnz
into
adc
sub
rcrl
dec
subb
push
inc
mov
mov
bound
cmpsl
aaa
daa
les
or
loope
fsubrl
bound
fs
mov
mov
sbb
mov
sbb
in
xor
jbe
mov
sahf
mov
jns
and
mov
mul
lahf
cmp
cmp
in
sub
push
and
sbb
push
movsb
leave
aaa
data16
and
push
in
push
rcll
ljmp
mov
movl
mov
dec
pop
jnp
push
imul
repz
mov
andl
test
dec
insl
inc
mov
je
mov
ss
int
int
mov
negb
adc
push
lds
lahf
or
adc
fs
cwtl
lds
test
dec
dec
dec
add
push
add
iret
enter
jmp
mov
andb
xor
cwtl
bound
pop
jle
in
push
lret
data16
fcmovbe
in
out
xor
pusha
add
or
add
insb
inc
pop
mov
pop
mov
cmp
inc
adc
sti
sar
mov
mov
sub
push
and
mov
loope
js
adc
xor
cld
lods
mov
test
aad
jno
mov
jecxz
inc
jno
mov
xchg
in
int3
imulb
pusha
lds
pop
mov
sbb
jp
push
and
mov
mov
jbe
jmp
and
add
lret
es
xchg
out
pop
std
inc
arpl
and
push
push
clc
inc
sbb
lods
pop
mov
fmuls
loope
mov
outsl
cmp
fimull
aad
cltd
inc
xor
mov
dec
pop
jo
mov
in
insb
sbb
popa
push
lock
std
xchg
int
hlt
pop
mov
mov
inc
or
and
es
jge
cmp
mov
imul
or
cmpsl
adc
jle
adc
pop
rorb
add
jbe
aaa
pop
cmp
inc
in
mov
out
xor
aad
scas
pop
cli
xor
ret
jl
adc
sub
into
shrb
add
mov
mov
push
jp
das
movsb
cmp
jg
mov
seta
pop
adcl
dec
xchg
xor
enter
shrl
call
lods
ret
test
cmp
test
in
rcl
lcall
test
dec
addr16
in
shrb
adc
inc
sbb
scas
daa
xchg
fldenv
sbb
sbb
jno
dec
push
xchg
cwtl
sbb
jmp
add
xchg
adcb
and
insl
dec
cli
cwtl
mov
out
addb
stc
mov
cmpb
xor
lods
cs
pop
dec
pop
add
sub
mov
ficompl
lret
jbe
lcall
lret
out
or
shl
into
loopne
jge
xchg
hlt
jae
subl
and
cmc
cltd
push
mov
call
test
mov
lods
push
xchg
adc
movsb
test
mov
push
popf
dec
xchg
jge
cs
or
ss
or
xchg
sub
push
insl
out
mov
or
push
push
fiaddl
and
pop
sbb
lret
add
cwtl
xchg
sti
and
xchg
mov
jle
insb
xchg
es
test
pop
xchg
cwtl
das
aam
dec
push
imul
and
lds
lcall
inc
and
pop
test
lret
add
insb
lods
mov
cmp
insl
add
pop
push
jl
mov
out
xchg
xchg
add
pusha
ja
mov
jnp
pushf
xchg
xorb
jnp
xor
dec
mov
pushf
icebp
jbe,pn
out
pop
cmp
sub
hlt
cmpsl
ja
imul
arpl
out
into
ss
mov
pop
jp
ss
dec
sub
pop
mov
fwait
push
aad
mov
insl
sti
push
mov
scas
xchg
push
mov
sub
data16
test
in
aaa
adc
les
xchg
inc
stc
fstl
cmp
ljmp
pop
dec
int3
mov
into
fstl
mov
inc
or
aas
inc
icebp
lds
in
daa
xchg
xchg
neg
dec
push
jne
aad
daa
sub
jno
popf
scas
outsb
cs
inc
dec
xor
in
mov
and
dec
stos
mov
in
enter
jbe
or
adc
sbb
repz
mov
daa
and
xor
cmp
lret
or
filds
insb
push
mov
in
sbb
xor
scas
jb
and
dec
inc
adc
xor
sub
enter
mov
popa
and
push
in
cmp
ss
mov
divl
push
dec
fdivrl
and
movb
out
sti
pop
mov
dec
lret
adc
mov
out
out
pop
lahf
pop
cmp
sbb
outsl
cmpl
dec
in
rorl
and
push
add
lods
push
inc
dec
ds
inc
cmpsl
or
add
negl
lock
fildl
pop
xchg
cmp
mov
push
adc
sbb
push
sbb
in
shll
mov
xlat
push
in
shlb
daa
inc
rcrb
outsb
cmp
adc
jae
or
das
fcmove
repz
push
push
sbb
movups
shlb
cmp
xchg
cmc
sbb
insb
xchg
rcll
cmp
or
add
pop
inc
push
icebp
mov
int3
sub
dec
cmc
mov
jo
shl
fsubl
mov
xchg
mov
stc
fwait
lret
dec
mov
add
mov
xchg
sub
push
mov
stos
addr16
lods
sub
mov
add
cmp
or
xchg
pusha
icebp
pop
mov
in
inc
sub
mov
rolb
fwait
inc
push
hlt
jmp
push
jb
xchg
push
mov
repz
inc
mov
sti
loopne
cmp
fiadds
dec
in
vdivpd
xchg
aam
sbb
sahf
mov
lock
and
data16
pop
adc
mov
mov
scas
test
in
or
push
adc
loopne
ret
fwait
xchg
or
adc
lods
and
shlb
roll
insb
jne
fcmovnbe
repz
cmp
enter
jl
cli
int3
test
mov
jecxz
pushf
mov
add
lods
add
mov
dec
mov
jns
lods
test
cmp
cmp
pushf
insl
fnstcw
scas
xchg
xor
lods
scas
iret
jbe
fsubrl
in
adc
dec
inc
mov
adc
in
pop
jle
cmp
inc
pop
cmp
xchg
jmp
iret
stos
jmp
push
push
bswap
out
push
cmpsb
pop
jg
stos
xchg
lahf
cmp
cltd
out
xor
rol
sub
rolb
push
push
sti
lock
movsl
jmp
outsl
cmp
add
jp
lods
pop
sti
or
aaa
sbb
or
inc
js
inc
es
add
pop
lret
repz
push
push
dec
add
insl
cltd
popf
mov
jl
jg
lds
pop
loopne
or
fcompl
std
imul
mov
push
mov
pop
imul
sbb
in
jae
add
ficoml
jb
scas
adc
pop
add
xchg
in
cvtdq2ps
or
mov
jo
stos
mov
jge
outsb
mov
push
fwait
jle
inc
inc
mov
js
cmp
lret
cli
add
pop
jno
add
sub
inc
sbb
jno
js
add
lret
faddl
lock
dec
orl
or
test
fisubl
lea
jbe
adc
mov
fildl
shr
adc
and
cs
mov
push
mov
aas
incl
pop
or
add
insb
cs
ds
sub
sub
sbb
cmp
cmp
pop
xchg
jae
sub
into
fcompl
stos
inc
pop
shl
icebp
xchg
push
or
push
sbb
mov
stos
sub
dec
cmp
dec
lcall
mov
clc
loop
mov
or
dec
mov
pop
in
in
dec
sbb
xchg
xor
mov
in
sub
mov
jge
mov
in
or
push
ds
sub
cmpsl
sbb
and
push
stc
sahf
mov
xchg
call
jb
jmp
mov
lock
clc
pop
xor
adc
add
js
out
jp
aad
inc
test
dec
cli
les
mov
mov
test
mov
cld
mov
jg
sub
arpl
push
mov
cmc
pop
and
and
sub
nop
cmp
xor
push
cmp
jno
enter
cmp
ja
aad
ds
test
dec
xchg
mov
sti
frstor
xor
inc
cli
cmpb
mov
and
in
or
push
and
test
ret
cmp
loopne
and
out
cmpsl
jle
push
and
popa
xorb
lcall
shrl
push
fsubrl
adc
stc
push
mov
jmp
xchg
and
ss
gs
jns
cmc
mov
pusha
lcall
add
xchg
and
repz
outsb
addr16
je
cmp
dec
jecxz
mov
mov
ja
mov
aaa
jmp
push
repz
cmpsl
push
pop
mov
scas
out
insl
in
repz
and
xchg
fadds
add
adc
push
fistps
push
mov
loop
mov
sbb
fnstenv
lock
arpl
mov
add
shr
pop
sbb
inc
shlb
daa
arpl
cltd
lock
mov
jns
inc
or
push
test
imul
and
xor
mov
add
mov
push
popf
pusha
xlat
fsubs
jns
orl
cmp
jne
push
gs
jmp
mov
not
fmul
movsl
mov
push
mov
fistpll
dec
mov
out
pushf
pop
jbe
lds
rclb
sub
or
fmull
pop
les
loopne
sbb
push
negb
stc
shl
and
mov
insb
pop
imul
jmp
and
jge
ljmp
mov
mov
cld
sub
mov
out
dec
dec
mov
aam
jo
sub
pop
fimuls
inc
clc
scas
inc
ret
divb
push
jns
jmp
and
fldenv
js
fsubrl
mov
push
movsl
sub
std
fwait
pop
mov
addr16
nop
adc
in
in
fs
jmp
std
mov
push
shll
in
xor
mov
dec
add
jle
jo
fstpt
cmpsb
aaa
sbb
fdivs
imul
xchg
mov
les
stc
pop
mov
std
fmuls
out
push
jp
mov
or
mov
xchg
adc
sbbl
fnstenv
jne
popf
ss
in
pop
xchg
mov
and
loopne
and
in
sahf
inc
xor
rorl
and
push
lahf
inc
pop
push
testb
aam
jmp
sbb
aas
mov
idivl
push
out
hlt
pop
orb
pmulhuw
rclb
push
outsl
in
shrl
lods
pop
lds
and
scas
das
mov
mov
mov
fdivl
dec
xor
xchg
dec
inc
mov
and
cmpsb
add
push
iret
test
dec
cwtl
popa
xor
lods
adc
cltd
mov
add
or
repnz
in
fdivr
hlt
push
xchg
aad
and
cmpsl
test
add
jle
scas
xor
pop
pop
mov
xchg
inc
cmp
shlb
push
lret
dec
adc
sub
div
mov
sbb
test
inc
mov
mov
out
lret
leave
outsb
adc
xchg
jb
lcall
jno
inc
daa
jmp
out
add
jg
jb
lock
in
lds
dec
and
cmpb
sub
lcall
sbb
repz
iret
adc
sub
pushf
popf
push
mov
jg
mov
mov
inc
jg
pop
mov
or
cli
inc
adc
xchg
adc
mov
out
adc
pop
gs
push
push
sub
adcl
sbb
scas
jp
jae
push
filds
movsb
push
daa
mov
ret
add
rcl
cmc
cmc
inc
cmp
ds
test
inc
out
std
inc
jl
enter
inc
fbstp
pop
ret
xchg
test
dec
and
dec
jae
xlat
lods
and
cmp
clc
enter
lret
add
in
cmp
arpl
arpl
jge
xorb
addr16
stos
sti
mov
sub
mov
jae
mov
clc
lahf
pop
lahf
ja
fisubl
mov
cmc
cltd
mov
fimull
imul
insl
mov
scas
outsb
in
mov
popf
xchg
shl
push
sbb
loop
lods
push
std
adcb
dec
cmpsb
mov
mov
iret
leave
cltd
or
mov
xor
jmp
sub
push
jle
and
or
fisubrl
lock
subb
outsb
xlat
scas
and
dec
lods
add
sbb
daa
mov
stos
push
mov
push
cmpsl
ret
push
jle
js
dec
aam
mov
xlat
idiv
push
or
pop
push
mov
or
decl
push
fists
dec
sub
jge
js
mov
or
nop
or
mov
sbb
inc
inc
fbstp
inc
mov
frstor
ds
mov
and
inc
cmp
ljmp
lea
gs
jge
movsb
xor
les
pop
loopne
dec
push
dec
dec
dec
jp
insb
aam
ds
inc
cmp
mov
in
inc
scas
push
xchg
cli
xchg
mov
jmp
dec
jno
cmp
add
les
decl
sub
scas
inc
movsb
or
scas
cmp
in
lea
cltd
dec
dec
lock
add
add
stos
and
xor
jb
dec
int
add
xchg
into
inc
lret
xchg
inc
aas
jmp
mov
push
cmpsl
and
test
xor
push
in
adcl
sti
cmpsl
pop
das
sub
lret
aas
cmp
aam
call
inc
mov
or
loopne
mov
cltd
cmpsl
jb
nop
pop
or
ret
mov
push
fidivrs
pop
fbstp
lret
incb
xchg
xor
adc
popf
sbb
jae
xchg
aaa
test
push
movsb
imul
loope
fsubs
into
lret
inc
clc
xor
mov
in
scas
cmp
push
xchg
repz
mov
jo
andl
popf
lods
cmpsb
in
es
inc
insl
dec
pop
nop
mov
sbb
jl
pop
mov
popa
mov
inc
jno
mov
mov
shll
sbbb
cmp
cs
add
arpl
and
lods
movsl
aad
in
xchg
mov
mov
cltd
and
in
push
mov
inc
xor
mov
ja
jnp
stos
movsb
daa
call
jl
enter
aad
push
fucom
and
es
mov
jae
int3
and
sahf
inc
push
insb
fwait
loopne
sbb
xor
test
jae
and
jb
push
mov
or
and
rolb
push
xchg
cmpsl
jmp
adc
jle
xor
dec
subl
popa
sarb
call
sub
inc
add
fidivs
mov
lea
int3
aam
mov
cmp
je
lds
test
jle
push
aam
pop
aas
bound
iret
fstl
cmp
jl
sbb
xor
inc
or
fisubl
nop
and
js
inc
cmp
or
fistps
daa
mov
pusha
add
xor
aad
sub
clc
dec
inc
roll
xchg
inc
sub
mov
mov
xchg
sub
mov
adc
cs
dec
bound
mov
and
hlt
jg
repz
pop
add
arpl
stos
insl
adc
and
xor
out
jecxz
jae
cltd
push
mov
and
mov
mov
and
adc
mov
leave
shlb
mov
dec
repz
sub
and
add
add
mov
or
inc
data16
adcl
lret
jecxz
insl
xor
sub
loopne
sub
pop
push
dec
imul
inc
sub
gs
jno
xchg
dec
fcmove
fldl
and
mov
popa
pop
movsl
dec
fwait
lret
js
icebp
insl
stc
jmp
xchg
xchg
add
add
movsb
dec
mov
data16
add
rcrl
sub
sahf
outsb
dec
call
jno
lods
scas
pop
add
mov
fistpll
mov
ja
sahf
and
mov
stos
mov
imul
jnp
fadds
pusha
add
push
and
sub
adc
loop
sub
jno
xor
push
aas
xor
ret
dec
cmp
inc
out
sub
imul
sub
or
mov
xchg
pop
add
xor
inc
mov
xchg
imul
sub
imul
stc
cmp
jmp
add
add
push
or
cmc
adc
in
mov
mov
fidivrs
jno
sbb
jo
call
mov
mov
gs
push
inc
cmp
int3
les
fdivp
jp
cli
data16
insl
leave
ret
xor
shrb
push
dec
lds
adc
inc
push
cmp
xor
push
imul
iret
out
icebp
inc
test
cld
adc
sub
lret
push
in
xchg
int3
sub
push
cld
mov
lea
outsb
xchg
aas
add
dec
sbbb
fdivs
dec
xchg
iret
inc
jnp
push
bound
hlt
push
nop
and
jl
std
das
mov
lock
mov
mov
leave
mov
int3
div
mov
imul
mov
daa
mov
rcrl
mov
mov
mov
mov
mov
jge
outsb
cmp
and
in
testl
sarl
dec
dec
cmpb
in
sub
sub
shl
dec
pop
sarl
fdivs
xchg
xorl
push
repnz
adc
add
xlat
popf
adc
sub
das
or
mov
subl
dec
push
xor
gs
add
repz
dec
mov
shl
aas
rorl
xchg
dec
or
push
lds
test
insb
pop
ret
aam
in
rorl
adc
dec
sub
mov
mov
xchg
or
cli
mov
out
ss
cmp
adc
fsts
add
and
aam
sbb
lret
jae
lds
xchg
mov
in
jne
pop
push
jbe
jecxz
add
adc
iret
inc
jl
xor
mov
sub
dec
in
or
lret
mov
jb
push
xor
pusha
jmp
jle
mov
popa
push
add
loope
jmp
jp
nop
clc
inc
mov
pop
lods
xchg
ficoml
fnstenv
jecxz
call
or
popl
adc
jns
inc
iret
pop
xchg
fxam
iret
mov
fs
aam
sbbb
adc
roll
inc
xlat
mov
push
sub
cmp
leave
outsl
push
int3
insl
int3
jge
xlat
bound
ss
and
dec
xor
jge
in
push
inc
ret
cwtl
mov
pop
xchg
and
in
fcomi
adc
add
xchg
dec
mov
ja
add
add
push
lahf
jnp
mov
call
mov
jne
faddl
jb
not
loop
add
cmp
je
xor
mov
icebp
ss
faddl
cld
sub
mov
cmp
fwait
sarb
mov
mov
add
pop
mov
ss
adc
in
or
ss
or
in
popf
sub
mov
repnz
shrb
in
leave
mulb
push
outsb
fidivrl
mov
mov
xchg
aas
in
loope
jo
jo
scas
into
iret
mov
jbe
clc
gs
rol
push
xchg
jne
mov
popa
jle
sub
mov
pop
push
aaa
fisubrl
stos
rcrb
jp
push
xchg
mov
xchg
out
inc
test
movsb
pusha
sbb
jl
outsb
cmpsl
rorb
mov
fcomps
shl
inc
mov
ret
adc
je
add
es
inc
fisubs
pop
mov
inc
inc
repnz
xor
pop
mov
push
mov
mov
js
and
icebp
dec
jne
push
andb
xor
mov
and
pusha
dec
or
jae
sarl
fsub
and
adc
adc
xchg
pop
pop
inc
lcall
insb
xchg
adc
add
sbb
sub
incb
adc
sbb
mov
mov
out
cmp
stc
push
jg
loope,pn
cmp
dec
jle
jge
mov
popa
mov
aaa
or
popa
and
inc
mov
sub
negl
push
jecxz
pop
xor
and
pop
push
xor
fmull
cmpsb
mov
mov
lea
cmpsl
mov
lods
xchg
xor
add
pop
cli
int3
lret
sub
dec
and
jae
pushf
into
pop
lea
mov
aad
mov
test
shrl
or
mov
cmp
test
pushf
adc
cmp
mov
adc
add
pop
loop
push
fwait
sbb
xor
adc
lods
hlt
push
inc
cld
cmp
aas
leave
cmp
jns
mov
shll
cwtl
push
pop
jp
inc
imul
into
aas
pushf
call
sub
cmpsb
pushf
in
shrd
imul
inc
out
push
cmpsl
in
cs
inc
or
ss
or
fbstp
jbe
xor
das
dec
or
outsl
push
enter
cmp
jae
fbstp
xor
data16
inc
sub
or
addr16
mov
ja
das
and
sub
insl
call
test
repz
ljmp
gs
inc
ds
xchg
xchg
jecxz
enter
jmp
jo
jo
inc
icebp
or
sub
or
bound
rcrb
cli
cltd
mov
cmpsb
dec
cmp
xor
dec
pop
ret
add
movsl
sub
inc
jnp
leave
nop
xchg
gs
mov
pop
xor
cmp
jl
add
inc
jnp
mov
add
addl
xchg
jns
hlt
push
and
mov
add
xor
push
mov
xor
rclb
xchg
push
jns
jl
add
or
rol
sarl
pop
or
inc
addr16
shlb
pusha
push
rcrb
sbb
sbb
mov
das
test
pop
pop
fists
mov
add
jae
xor
addl
jecxz
sub
xchg
jp
movsb
and
sbb
imulb
lds
stos
xchg
pop
push
icebp
popa
shr
repnz
push
in
adcl
and
sub
hlt
or
cs
bound
lods
addr16
push
pop
shr
pop
xor
hlt
inc
xchg
inc
mov
xchg
bound
mov
jl
jecxz
cmp
adc
mov
dec
jbe
std
dec
test
stos
lods
mov
outsl
xchg
lock
sahf
cmpsb
dec
mov
and
icebp
loop
data16
cld
shll
mov
cmp
rolb
divb
sahf
enter
cmpsl
shl
cltd
sub
adc
int
and
test
bswap
sbb
in
fistl
icebp
je
push
test
movntq
pusha
mov
mov
sti
push
fwait
xor
rolb
fdivrp
shrl
inc
icebp
lret
pop
fxch
jecxz
mov
mov
outsl
mov
and
fcomps
cmp
jecxz
push
pop
xchg
push
sub
pop
xchg
cmpb
stos
ss
lea
sub
pop
test
mov
or
pusha
pop
cmp
int
popf
and
hlt
and
xlat
pop
jo
xchg
mov
mov
xlat
and
mov
in
fs
mov
mov
pop
jb
and
push
lea
movsl
sarb
push
jne
in
or
cmp
add
xchg
lock
movsl
repz
fs
pop
rol
mov
imul
pop
xchg
out
mov
fs
test
and
ljmp
or
pop
cmpsl
push
push
sub
inc
xchg
cmpsl
lds
les
pop
pop
stos
stos
call
xchg
jne
pop
jmp
and
xorb
add
sbb
cmp
aaa
mov
adc
adc
mov
dec
lods
mov
into
jnp
out
xor
fcmovbe
ret
sub
and
pop
jp
enter
insb
ret
in
mov
sbb
jge
xor
outsl
lahf
mov
and
mov
inc
lock
inc
xor
loopne
int3
sti
out
stos
xor
or
inc
stos
mov
pop
lcall
xchg
inc
stos
cmp
popa
pop
and
sub
mov
sarl
movsl
out
pop
bound
aad
fidivrl
pop
scas
jns
movsbl
inc
pop
cmp
push
push
and
arpl
stos
add
add
lret
addr16
cwtl
sub
scas
movl
adc
mov
mov
push
push
arpl
stos
inc
les
cwtl
add
hlt
cld
xchg
sbb
popa
popa
mov
add
sbb
daa
mov
push
fs
sti
lea
imulb
inc
push
ret
jns
xchg
movsl
cmp
dec
xlat
stos
add
nop
je
dec
inc
xchg
mov
arpl
sbb
testl
push
inc
push
icebp
cmc
cltd
std
dec
sub
lock
fnstsw
sub
mov
arpl
shrb
sahf
popf
icebp
movsb
outsb
lret
aam
cli
in
ret
aam
lcall
sub
adc
mov
fwait
add
cmp
pop
pushf
mov
push
adc
push
test
fwait
xchg
into
jb
cmp
jno
mulb
out
leave
insb
pop
dec
nop
pusha
mov
inc
negb
push
adc
and
mov
stos
jns
aaa
dec
dec
fs
pop
dec
mov
lock
dec
jp
mov
and
push
add
push
xchg
sbb
inc
and
imul
popf
mov
mov
push
xchg
pushf
aad
mov
mov
push
cmp
aas
jae
and
lock
pop
subb
insl
fistpl
mov
inc
mov
stos
test
cmpb
or
aas
cmp
mov
sub
mov
fsubr
js
ljmp
adc
dec
xlat
cmp
pop
test
sti
popa
push
in
adc
lcall
and
hlt
jecxz
add
lods
hlt
xchg
outsl
in
dec
testb
jo
inc
in
loopne
data16
lods
cmp
mov
dec
mov
add
out
fwait
dec
mov
xor
sbb
cmp
mov
pop
outsl
sbb
cmp
test
or
jns
ljmp
enter
mov
cmp
cmp
cmpsl
jge
lods
insl
roll
pop
xor
pop
cmpsb
repz
loopne
inc
enter
mov
xchg
pop
xchg
sbb
mov
rcrl
xor
in
mov
push
rolb
lret
push
push
xchg
push
push
sar
popf
sarb
arpl
cmp
arpl
mov
add
test
mov
push
pop
into
inc
xorb
cmpsl
stos
mov
ss
dec
fimuls
cmp
test
pop
and
enter
fstpl
xor
cmc
mov
lret
js
dec
sti
and
dec
leave
pushf
mov
or
jecxz
sub
xor
into
fcomps
pushf
sub
insb
push
movsb
mov
xchg
test
ret
and
or
adc
dec
lds
xlat
scas
mov
scas
aam
sbb
fldcw
sub
outsl
xorl
pop
icebp
shrl
mov
mov
adc
mov
sbb
adc
outsl
mov
mov
push
pushf
mov
movsl
jp
push
and
mov
mov
dec
std
push
arpl
lgs
push
mov
aaa
pop
jae
inc
sbb
pop
ficompl
xor
popa
push
cwtl
imul
loop
movsl
push
data16
inc
sbb
js
out
cmp
push
pop
jnp
and
or
data16
mov
insb
xchg
jmp
adc
mov
xchg
dec
enter
xor
mov
repz
loope
add
push
xor
jo
enter
outsl
sub
outsb
inc
std
and
or
mov
jg
push
pushf
cmpsl
push
enter
shlb
int
pop
pop
test
jmp
sbb
push
pop
movsb
xlat
mov
js
push
push
mov
add
aas
stos
es
and
adc
movsl
repz
aam
pushf
push
jle
fldl2t
add
xchg
int
jle
sbb
cwtl
sbb
aas
fwait
inc
clc
sbb
int3
cmp
sub
xchg
xor
call
sub
and
fidivl
sbb
pop
jmp
les
cld
and
adcl
insb
cmpsl
out
jnp
ds
lods
lds
xor
lods
mov
sbb
or
ja
lea
dec
mov
adc
lahf
out
add
mov
pop
pusha
push
dec
mov
cmp
pop
test
arpl
dec
mov
and
test
shrl
cmp
fs
and
cmp
dec
loope
sub
mov
and
nop
cmp
pop
and
push
xchg
aam
push
popa
icebp
adc
sbb
mov
sub
frstor
ljmp
add
sbb
ficomps
lcall
lea
into
push
mov
fcompl
fcmovne
mov
or
pop
adc
adc
add
std
or
in
shr
sti
cmp
xchg
inc
cmp
xor
imul
or
add
push
dec
dec
orb
neg
pop
addl
mov
sub
add
repnz
shll
pop
cld
mov
fisubl
outsb
pusha
shrb
add
push
xchg
stc
gs
shll
es
dec
xchg
adc
inc
inc
ds
pop
pop
dec
cld
lahf
fiaddl
bound
scas
hlt
add
daa
cwtl
int3
jns
bound
jno
adc
lret
pop
push
imul
jno
xchg
popa
stos
xlat
jl
xchg
mov
dec
mov
stos
sbb
movsl
adc
jne
push
adc
add
ss
push
pop
mov
add
sbb
mov
fbld
push
adc
dec
xchg
outsb
jmp
xchg
mov
icebp
jp
dec
xchg
jne
add
cmp
loope
movsb
lods
mov
repz
ljmp
xchg
push
out
daa
sbb
fs
arpl
mov
cltd
dec
ds
or
dec
sti
sbb
xor
inc
push
xor
jge
bound
lret
imul
orl
bound
mov
insb
xchg
fdivs
hlt
or
xchg
pusha
cld
cmp
movsl
lea
inc
and
xchg
stos
aaa
lret
cwtl
aam
push
dec
aad
mov
push
and
fadd
xor
mov
lods
jp
fisubrs
mov
mov
lods
xlat
fwait
loop
adc
xchg
fwait
sub
in
mov
push
xchg
das
ret
and
out
sbb
sub
out
mov
inc
pop
sub
js
cld
cmp
cwtl
jp
rcrb
outsb
int3
mov
shlb
inc
cld
insb
sbb
aad
adc
and
aas
idivb
outsl
lods
aas
shl
sbb
fsts
xor
or
pop
dec
pop
xchg
push
out
outsl
adc
dec
jl
outsb
pop
popf
pop
idiv
leave
ljmp
push
int3
cltd
scas
mov
jmp
stc
xchg
fisttps
or
sbb
xor
mov
fdivrp
in
pop
sub
cmc
jno
movsl
push
rorl
rcrb
shrl
cmp
std
lods
aas
ret
jmp
sub
mov
lcall
or
shrb
fiadds
add
in
ljmp
jae
std
xorb
fnstenv
popa
mov
fcomi
sbb
push
test
int
adc
mov
sub
loop
fsubrl
fldcw
out
js
cltd
sti
iret
lock
out
jbe
addr16
mov
xchg
push
inc
aas
in
mov
push
sub
dec
dec
scas
stos
fsubr
add
dec
adc
sarb
pop
pop
xor
iret
mov
cmpsb
addb
ret
std
and
and
mov
rorl
in
xchg
dec
inc
adc
leave
mov
sub
fwait
call
dec
lock
movsb
popa
stc
pushf
sahf
fdivrs
mov
xchg
bnd
mov
mov
xor
mov
cmp
and
jmp
xchg
sbb
xchg
xchg
out
int
pop
imull
in
stc
cmp
mov
jnp
push
xor
jle
and
imul
cvtdq2ps
push
fcmovnu
cmp
ljmp
mov
dec
jl
test
dec
movsl
jo
mov
xor
sub
dec
shrl
xor
pop
and
std
push
jle
rcll
shrb
cld
fmull
cs
fldenv
in
popf
cli
jns
scas
add
sub
hlt
jne
push
gs
or
adc
and
cs
rcll
call
sub
and
and
lahf
mov
mov
sbb
imul
stos
cwtl
push
jmp
push
shll
mov
mov
add
jae
xchg
xchg
inc
shlb
push
incl
ret
int
mov
mov
adc
push
stc
rol
shrl
push
mov
nop
stos
mov
mov
shlb
mov
sub
dec
outsb
and
add
cmpsb
adc
fsubs
xorb
cmp
lds
cmp
int3
insl
add
push
mov
mov
nop
lods
scas
mov
jb
adc
adc
pop
pop
imul
lods
sarl
aad
jb
and
push
scas
jne
sahf
xor
test
outsb
mov
adc
mov
cs
mov
add
xor
imul
aam
inc
mov
fwait
les
cmp
in
je
add
pusha
mov
jb
dec
mov
shll
jg
fnstenv
adc
sub
or
pop
js
push
pop
mov
inc
mov
add
sub
clc
mov
ja
out
shrb
inc
mov
xor
in
dec
sub
enter
fstp
mov
pop
cmc
dec
js
mov
imul
xorb
addr16
mov
add
cld
add
cmc
pop
mov
imul
loop
jle
push
xor
add
cltd
lret
jg
cs
add
movsb
ror
push
sub
add
push
push
sbbl
stos
pop
adc
lret
sbbb
lock
xor
jg
or
inc
add
inc
int
fsubrp
jne
hlt
hlt
push
xchg
aas
pop
xor
leave
lods
xchg
test
cmp
fistps
jmp
fsts
mov
push
dec
push
gs
mov
xor
cmpsb
js
dec
popl
sub
std
mov
and
xor
orb
or
dec
add
xor
sbb
mov
fmul
dec
push
das
mov
jae
pop
xchg
sub
in
test
repnz
mov
idiv
sarl
adcl
lahf
mov
aad
sub
pushf
jno,pn
in
mov
sbb
lret
xchg
mov
nop
stos
push
inc
jno
mov
mov
popf
lret
pop
xor
hlt
repz
pop
dec
sbb
lods
pop
imul
dec
sub
jecxz
outsl
stos
sbb
fcoml
decb
adcb
addr16
repz
repnz
cmc
push
cmp
sub
mov
mov
push
call
adc
sub
les
pop
xor
xchg
es
sub
pop
sub
jnp
rcrl
daa
pop
mov
out
mov
rcll
push
xchg
sahf
or
mov
lahf
mov
fcmovnb
cmp
sub
inc
sub
sbb
pop
addr16
fiaddl
xchg
push
sub
xchg
mov
adc
add
int
mov
jbe
out
mov
inc
in
pop
cs
mov
inc
jb
and
cld
lods
sub
aam
ret
mov
cmp
ljmp
out
fwait
roll
mov
adc
or
xchg
test
aad
cli
ljmp
jmp
scas
pop
repz
aad
push
add
add
pop
add
test
xor
shl
jecxz
mov
mov
call
pusha
ret
int
inc
pop
ret
jge
sub
xchg
pop
sub
jno
xchg
cmpb
ret
or
imul
jp
popf
ss
add
pop
dec
push
or
shl
add
in
fnstsw
mov
add
jle
mov
in
push
xorl
jge
mov
cmp
mov
fiaddl
dec
pop
daa
mov
push
xchg
xchg
repz
clc
fsubs
sbb
add
out
sub
addr16
ds
dec
enter
out
in
sub
sub
fistpl
xor
and
push
push
push
lds
pop
adc
ljmp
fstpt
xchg
push
addr16
mov
push
jg
out
jmp
inc
adc
sub
lahf
xchg
mov
shlb
shl
inc
cwtl
sbb
dec
cli
adc
pop
xchg
mov
and
jno
popf
push
sbb
pusha
fidivrl
dec
inc
test
jae
daa
in
shlb
cltd
in
cmc
imul
andl
lahf
out
xor
xlat
fisttpl
lcall
push
xchg
ja
xchg
iret
mov
cmpsl
testb
jbe
sti
sub
and
lds
imul
adc
int
pop
add
xor
fcmovb
in
dec
in
jae
mov
mov
jne
shrl
adc
ficoms
cmp
les
adcl
sbb
pushf
into
fcomip
xchg
lret
jo
ret
mov
jle
jmp
int
daa
xor
lds
aas
test
sbb
rclb
or
pusha
test
xchg
push
imul
out
nop
mov
push
sarb
out
in
cld
fidivrl
aad
andl
cmp
fnstenv
lret
xor
iret
mov
mov
outsl
out
and
push
imul
bnd
sti
enter
int3
movsb
ret
jbe
pop
push
and
sub
repnz
inc
add
dec
jp
mov
test
aad
stc
pop
mov
call
rcrl
push
std
or
subl
mov
sbb
dec
jo
js
insb
xchg
out
sub
xchg
sbb
faddl
dec
mov
cmpsl
mov
mov
lahf
push
insl
sub
sahf
leave
movsb
jle
dec
daa
mov
xor
jmp
sub
sub
and
aam
aam
cmp
std
fcomps
out
mul
enter
pop
or
popf
cltd
mov
ljmp
pusha
mov
lods
mov
sbb
pop
pop
and
in
loopne
xchg
cmpb
ds
sub
es
fdivrs
repz
fstl
push
inc
add
cmp
test
cwtl
dec
scas
icebp
shlb
and
andl
jo
pop
pusha
dec
xchg
push
mov
lock
mov
pop
sbb
jb
mov
sbb
xor
sbb
sbb
xchg
shr
movb
cli
lds
dec
push
mov
dec
stos
mov
adc
les
outsb
imul
adc
jnp
adc
shll
leave
mov
test
sub
sub
into
popaw
sar
ss
pop
lcall
dec
jnp
push
lret
xchg
mov
push
mov
ljmp
iret
in
xor
testb
and
sub
mov
data16
mov
loope
lods
inc
and
cmpsl
add
andb
mov
mov
loop
cmp
push
push
clc
xchg
adc
jge
push
cld
or
out
adc
push
imul
xchg
fisubl
out
mov
sahf
adcl
mov
mov
push
jb
pop
leave
push
mov
sarl
mov
push
lret
arpl
movsb
inc
push
rcll
inc
stc
push
push
leave
iret
lret
ja
inc
movsb
mov
jo
test
sub
push
outsb
mov
pop
fcmovne
or
adc
dec
hlt
sbb
movsb
lahf
xor
ja
imul
out
push
mov
lds
sub
insb
push
xor
inc
xchg
push
les
bound
push
dec
jg
mov
cmp
sub
or
xor
stos
sti
fisttpl
mov
clc
into
xchg
push
push
mov
cltd
cli
add
stos
adc
shrb
fmulp
into
test
imul
xchg
mov
sbb
nop
sub
fwait
repz
pop
mov
stos
sub
popf
fs
push
xchg
in
xchg
cmp
jg
mov
insb
push
in
jns
das
jp
adc
pop
push
fnsave
iret
mov
rcrl
popf
mov
ret
adc
push
dec
mov
stos
outsl
adc
cmp
ret
jns
and
dec
or
sbb
lahf
jl
rorl
jmp
jnp
popfw
sahf
in
xor
or
and
lods
rcll
xlat
xor
mov
lock
or
cli
and
push
inc
mov
mov
fnstenv
sub
xor
xor
mov
sbb
sahf
sub
xor
lods
insl
popf
pop
bound
xlat
push
cmp
leave
imul
into
mov
add
fidivrl
mov
sbb
sbb
pop
sbb
and
mov
hlt
sbb
outsl
mov
mov
cmp
pop
mov
repz
clc
mov
xchg
dec
lds
inc
jb
insb
jmp
sti
orl
scas
call
and
jo
test
aam
test
sahf
sub
jne
jno
test
cmp
mov
xor
push
mov
sti
cmp
imul
ror
dec
lcall
push
pop
out
ffree
pop
rorl
xchg
stos
jae
xchg
andb
push
pushf
lcall
daa
jb
xor
imul
add
repnz
sub
mov
negb
pusha
mov
inc
jnp
aam
jb
dec
push
cmp
sbb
insb
mov
pop
imul
lcall
mov
xorb
idivb
popa
lock
cli
mov
push
gs
cmc
shl
cmp
xchg
js
repz
rorb
pop
lret
inc
pop
popf
das
es
lods
int3
icebp
adc
out
jne
push
push
jno
loop
sbb
fstp
jmp
fsubs
cmc
pop
and
sub
sbb
jecxz
xchg
dec
addr16
xor
and
test
flds
int
lds
and
mov
push
aaa
adcl
mov
rcl
xor
jns
mov
in
outsl
push
jae
mov
inc
xchg
xchg
add
cld
fisttps
jae
mov
push
js
adc
and
sub
mov
loop
xchg
jbe
outsb
aas
xor
sbb
or
push
iret
jne
mov
das
or
add
sub
or
ret
mov
dec
cmpsl
mov
orb
xchg
sbb
js
lods
inc
pop
mov
bnd
insl
push
ds
cmc
in
insb
sub
add
ja
es
add
pop
dec
mov
loope
jmp
and
lcall
test
sti
bound
xlat
inc
sub
aam
push
dec
int3
xchg
push
sarb
in
repnz
bound
in
dec
dec
in
pop
dec
ss
sub
into
jle
into
or
adc
mov
in
and
adc
xchg
jne
repz
sub
cmpsb
loopne
ficoms
add
les
cltd
aaa
std
sbb
lock
test
icebp
cmp
add
and
cmpsb
iret
int
xor
inc
push
cmpsl
mov
jbe
lock
je
jbe
sub
stc
sub
or
pop
add
rolb
pop
das
daa
rcrl
sub
or
shlb
pop
or
jb
call
xlat
loopne
ficoms
fcmovnb
imul
dec
sub
daa
sub
xor
adc
sbb
adc
add
sub
scas
jmp
sub
mov
mov
ds
jo
jg
scas
push
lock
add
cltd
add
cmc
out
daa
fnstenv
pop
dec
shr
fs
add
jb
rclb
xor
sarl
mov
daa
mov
or
repz
loop
mov
cmp
inc
mov
std
add
inc
ja
and
into
jno
into
push
adc
unpcklps
lahf
int
inc
test
xchg
div
out
dec
lret
hlt
idivb
aam
adc
out
jb
sbbb
lods
pop
inc
push
test
mov
pop
call
adc
xor
roll
negl
lds
mov
notl
incl
mov
out
neg
mov
jnp
xchg
arpl
jno
fs
fsubrp
das
jp
lahf
outsl
bound
loop
shlb
xchg
inc
mov
shrl
mov
cmp
test
push
jae
cmp
dec
notb
js
sbb
inc
shlb
xchg
sbb
adc
mov
lds
sahf
stos
std
push
xchg
sub
adc
cmc
in
in
dec
pop
stos
sbb
popf
and
or
movsb
lea
aaa
in
mov
dec
and
out
cmp
mov
add
ljmp
insb
test
mov
lea
and
js
mov
xchg
daa
shll
push
lcall
mov
inc
bnd
mov
pop
cmp
jb
and
ror
shll
mov
mov
mov
pop
test
jne
lret
xchg
test
push
sarb
std
in
loop
push
fmul
leave
inc
ljmp
mov
xor
daa
outsb
add
inc
popa
pop
mov
leave
scas
or
lea
andl
mov
repnz
iret
lcall
push
fnstcw
out
adc
out
addr16
mov
dec
arpl
dec
cmp
dec
inc
adc
xchg
loop
rcrb
mov
or
xchg
pop
pop
dec
or
rclb
pop
lahf
dec
loop
sub
in
ja
fs
test
in
cwtl
lret
in
stc
mov
xchg
fdivl
ss
mov
je
subb
in
inc
lock
push
ret
xor
adc
xchg
xor
pop
mov
xchg
cwtl
outsb
push
ss
sub
notb
lea
mov
jmp
subb
inc
sti
fidivrl
loope
movsb
push
test
mov
xchg
dec
out
push
mov
lds
adc
sub
or
testl
stos
jl
in
movsb
pop
sub
push
lea
pop
test
cmpsb
fwait
ret
ss
push
cmc
sbb
mov
lock
dec
test
fbstp
dec
mov
push
test
mov
xchg
fdivp
popa
nop
leave
inc
and
mov
rol
xchg
sbb
cld
adc
rclb
mov
push
pop
dec
fs
das
jg
jae
and
fisubrs
or
invd
in
mov
push
mov
sub
jae
sarl
flds
jmp
scas
jbe
push
hlt
inc
ja
iret
add
xor
test
sub
lods
inc
xor
icebp
mov
popf
jbe
cmp
js
aas
xchg
push
mov
mov
out
push
adc
pop
mov
sahf
pop
cmp
jns
xchg
inc
cmpsl
or
jb
popf
pop
pusha
push
test
pusha
mov
xor
cld
cld
repz
bound
mov
jb
mov
insb
testl
dec
push
aas
ja
pop
in
rcr
lea
sub
mov
jl
pop
cwtl
loop
aas
cs
shll
xlat
mov
mov
jle
outsb
sbb
cmc
shlb
push
push
mov
test
mov
mov
popl
aam
jne
lea
stc
adc
cltd
xchg
int3
sbb
nop
or
sarl
dec
lahf
popf
cli
dec
fistps
test
jb
pop
mov
out
lods
lock
movsb
jge
dec
es
repnz
and
cmp
xchg
jbe
jns
inc
pop
pop
xchg
in
adc
pusha
sti
imul
cmp
inc
add
jge
int
adc
loop
xorl
lods
lock
cmp
mov
test
push
xchg
jb
fsub
dec
cmpsl
lcall
jb
push
mov
js
insb
jno
jge
addb
daa
clc
and
xchg
shll
adc
fnsave
mov
in
jg
jbe
add
ja
lock
iret
xchg
scas
jno
outsl
mov
loop
push
add
or
stos
mov
mov
mov
jne
stos
add
pop
inc
jge
sbb
mov
push
sub
mov
jbe
mov
pusha
mov
sub
jp
dec
xchg
pushf
out
mov
xor
inc
test
js
lret
push
divb
sub
sahf
xor
push
divb
stos
fimull
imul
lock
inc
test
jns
dec
add
outsl
rcrb
mov
leave
xor
jae
jb
ret
js
dec
nop
jb
sub
int
imul
mov
cmp
fimuls
jno
movl
por
xchg
mov
push
mov
adc
bound
adc
pop
jnp
ret
shl
xor
push
pop
std
dec
shl
jle
jns
dec
repnz
inc
pop
shrb
shll
pop
mov
in
cmc
sub
pop
or
jb
inc
jo
inc
lcall
jle
inc
mov
lret
cmp
jp
add
leave
adc
sub
dec
les
sbb
ret
test
xchg
or
in
movsl
xchg
fsubrl
loop
adc
jnp
hlt
sbbb
popa
xor
and
xor
dec
mov
aad
or
test
pop
jmp
sbb
mov
mov
rolb
mov
addl
dec
roll
adc
cld
mov
pop
stos
jle
cwtl
ds
jl
fsubl
icebp
loop
or
push
jno
imul
es
je
ljmp
out
xchg
inc
mov
mov
jecxz
insl
mov
or
xor
add
out
add
mov
push
loop
pop
dec
cmpsl
bound
repz
sub
adc
outsl
pop
cmpsl
or
into
mov
in
lret
fwait
sub
out
fiaddl
call
and
stos
adcb
in
data16
fistpl
aas
jno
scas
cmp
cmp
xchg
or
sahf
out
inc
cmp
pushf
jnp
cmp
out
add
xchg
dec
xor
sub
mov
add
and
pop
adc
or
or
test
iret
xchg
jecxz
pop
mov
cmp
data16
sbb
aam
call
hlt
sbb
ja
lret
and
lock
or
add
ljmp
andl
mov
add
mov
cmpsb
subb
mov
imul
enter
shll
inc
jge
mov
inc
lods
add
rcl
mov
or
xchg
mov
insb
rclb
pop
inc
lahf
out
frstor
push
jns
jmp
push
pop
pop
insl
cltd
or
mov
mov
inc
lock
out
scas
popf
dec
xor
mov
insb
and
lea
std
iret
cmc
leave
enter
aad
ljmp
xor
lock
loop
scas
inc
jbe
pop
mov
add
push
or
rcl
pop
mov
cwtl
mov
int3
adcl
andb
sub
repnz
fcomps
ret
pop
rorl
leave
and
cli
or
enter
cmp
push
stc
into
xor
xorl
out
mov
ret
push
outsb
cmpxchg
out
clc
add
push
rclb
fimuls
daa
or
and
lods
scas
addr16
sti
mov
jae
iret
repnz
mov
adc
xor
inc
aaa
add
imulb
jno
into
dec
fimuls
xchg
cmpl
pop
xor
or
adc
add
add
adc
fwait
shrl
in
nop
fistps
mov
mov
lret
mov
cmp
popf
mov
sbb
mov
mov
or
pop
pop
je
mov
orl
pop
scas
lret
and
and
sahf
div
rcrb
aas
rcr
dec
add
mov
lahf
les
fmuls
jecxz
shrb
jae
jo
xor
jl
mov
das
and
scas
adc
shlb
mov
bound
push
leave
fwait
lret
mov
push
adc
mov
cmp
xor
sahf
out
xchg
not
mov
sbb
xchg
hlt
and
arpl
mov
adc
sub
push
mov
cld
les
repz
add
imul
mov
rclb
and
jg
subb
xchg
cwtl
and
sub
cmp
sub
bound
iret
notb
in
xor
ds
data16
inc
jae
popa
sub
sarl
sub
sub
aas
and
dec
or
rcll
jge
cmp
aas
idivl
dec
mov
mov
dec
dec
mull
ljmp
push
aad
cld
xchg
sti
add
adc
dec
leave
stc
clc
adc
jmp
shlb
mov
loop
mov
mov
push
and
jae
pop
into
sbb
jge
push
or
xchg
lcall
rol
aam
xchg
jge
dec
js
jbe
mov
pop
call
movsb
inc
and
out
sbb
pop
mov
loope
mov
hlt
repnz
pop
mov
sar
ja
inc
roll
dec
mov
cmp
sar
pop
and
jecxz
cli
sub
add
js
bound
jnp
mov
dec
movsb
mov
popa
adc
in
push
lcall
in
lret
and
jbe
xor
jecxz
jne
xchg
sub
add
cmp
mov
jge
or
std
add
cltd
and
ficomps
dec
add
dec
mov
pusha
dec
jle
es
push
out
daa
xlat
leave
dec
adc
pop
pop
cmp
icebp
and
sahf
mov
fwait
mov
mov
add
iret
lret
fldt
imul
dec
fcomp
movl
inc
adc
mov
inc
add
mov
aam
fwait
cmpsl
jae
add
out
jle
and
cmp
mov
nop
shl
daa
iret
jle
imul
push
jne
lods
aaa
sbb
lret
push
fs
push
push
mov
jnp
scas
cmp
aaa
add
imul
cmp
pop
jnp
ror
xchg
orb
cmp
cwtl
inc
mov
idivl
xchg
push
xlat
jae
jnp
sub
pop
cmp
bound
or
mov
in
jnp
data16
pop
lods
lea
lock
adc
das
outsb
pop
js
cmpsl
mov
fimull
mov
add
mov
mull
mov
and
add
xchg
test
cmp
xchg
rclb
leave
and
or
lods
mov
inc
xor
cmp
mov
add
aas
pop
cltd
jns
imull
or
inc
push
sarb
mov
and
out
nop
cmp
cmp
mov
jns
stc
gs
lret
lods
lahf
lods
outsl
in
xlat
pop
enter
mov
dec
test
pop
xchg
jge
dec
jg
xchg
das
push
inc
rorl
aam
push
lcall
mov
idiv
mov
push
xchg
mov
or
jl
nop
bound
jp
cli
sub
pop
add
fdivrs
enter
cmp
mov
cwtl
adc
pop
subb
loopne
in
scas
rorb
xlat
push
pop
and
inc
jg
sbb
mov
outsb
jle
lret
std
xor
shrl
ret
fisubrs
out
push
arpl
test
subb
mov
stos
xor
jg
incl
sahf
daa
xchg
jae
sbb
mov
cmpsl
mov
push
mov
adc
mov
add
int3
or
dec
sti
inc
sbb
aas
movsl
dec
repnz
das
mov
jge
xor
mov
mov
jle
outsl
push
dec
pop
push
mov
mov
test
cmc
mov
in
push
dec
pop
in
pushf
mov
pop
or
inc
outsl
mov
inc
dec
andb
imul
inc
jno
iret
inc
mov
in
je
enter
lods
nop
push
jo
les
negb
cmpsl
mov
ret
movsb
sarb
stc
inc
fwait
adc
or
fs
data16
mov
lea
mov
mov
sub
or
jo
mov
aad
test
push
addl
xor
inc
or
pop
lcall
cmp
cli
insb
lretw
inc
nop
and
jno
aaa
inc
dec
xorl
add
push
loop
mov
es
mov
into
fdivrl
insb
pop
mov
setae
adc
cmp
mov
xorl
sbb
lahf
addb
cltd
mov
ds
add
out
push
ss
push
mov
in
es
sub
frstor
test
mov
lock
mov
mov
sahf
in
inc
sub
jl
out
std
xchg
sbb
aas
xlat
divl
and
ja
inc
loope
pop
sbb
in
mov
nop
mov
imul
cmp
sub
dec
outsl
lahf
or
xchg
xchg
pop
add
lock
dec
iret
push
test
mov
fwait
lea
add
pushf
xchg
pop
repz
ja
insb
ja
neg
std
pop
mov
cwtl
arpl
clc
daa
and
pop
in
gs
test
fsubrp
hlt
imul
std
xchg
ret
inc
inc
sbb
test
adc
ret
fstps
lret
fisubl
pop
xchg
movsl
lcall
mov
out
nop
and
xor
and
sarw
mov
test
dec
lea
lods
mov
sub
mov
shld
mov
lods
push
adc
jp
lea
sahf
jmp
xchg
shll
pop
icebp
flds
cli
mov
scas
insl
jmp
pop
adc
inc
test
xchg
lret
out
iret
js
jno
pop
cmp
fcom
adc
sub
mov
pop
popa
scas
fisubrs
xor
mov
cltd
data16
lahf
sbb
or
mov
add
push
mov
push
push
loopne
push
mov
mov
mov
aam
xor
subb
aas
popa
lret
ffree
movsl
cmpsl
cltd
push
mov
xchg
pushf
lret
jbe
jg
xchg
and
leave
mov
mov
adc
ss
data16
out
and
sbb
mov
lods
cwtl
or
push
pop
xor
xchg
cmpsl
xor
mov
rcrb
and
dec
mov
stos
cmp
and
mov
dec
xorb
push
pop
mov
jae
and
pop
sbbb
std
bound
pushf
push
dec
ret
lods
loope
sahf
inc
dec
leave
pop
inc
sbb
push
loop
in
cmp
adc
mov
in
pop
sbb
pop
cmp
push
loopne
lcall
daa
movl
jmp
insb
push
lea
mov
icebp
sbb
mov
xchg
imull
iret
in
pop
cmpsl
push
test
movsl
cmp
mov
pop
sbb
movsb
xor
ljmp
cmc
xor
leave
inc
shll
jnp
inc
cmp
ds
fcompl
in
adc
inc
mov
add
lret
aad
fsubr
aas
dec
movsb
fistps
ret
scas
xlat
imul
xchg
xor
xlat
add
cmp
ret
jl
mov
jle
in
das
arpl
lret
mov
push
jns
std
push
add
sahf
sti
movsl
addb
cmc
mov
cmpsb
cs
push
cmp
add
push
enter
xor
mov
insb
in
dec
mov
hlt
out
int
movsl
outsb
or
imul
insl
rclb
mov
js
push
pop
shll
mov
sar
pusha
mov
add
sbb
inc
pop
mov
xchg
inc
adc
inc
stos
or
push
mov
popa
loope
dec
fdivrs
imul
repz
and
inc
out
dec
stc
and
js
pop
mov
mov
sbb
arpl
mov
jbe
out
xchg
dec
or
jnp
mov
and
stos
int3
dec
stos
leave
and
mov
dec
rcl
insl
cmp
dec
dec
daa
popa
cs
jg
mov
fstpt
imul
movsb
imul
es
dec
sbb
fstpt
sub
jecxz
out
daa
mov
add
mov
hlt
xchg
jge
push
push
aas
jecxz
rol
add
dec
dec
loope
clc
dec
subb
sahf
mov
mov
push
sub
into
aam
movsb
fistps
mov
int
sub
fstl
jge
lea
mov
and
gs
popa
adc
test
les
jmp
fsubl
jp
push
popa
fwait
cli
sub
xchg
mov
push
or
pop
mov
out
adc
sub
jo
push
popf
aam
jb
in
xor
fisubl
fbstp
lret
fiadds
jle
fwait
cmpsb
jmp
jns
in
in
out
fistps
outsl
sbb
mov
sub
imul
insl
test
cmp
mov
clc
sbb
dec
pusha
sahf
jne
mov
pop
xor
push
jno
or
mov
pop
push
and
xor
out
adc
jle
add
add
push
and
mov
jle
ss
inc
test
shll
bound
mov
call
stos
cmp
xchg
mulb
ret
sub
call
nop
sbbb
hlt
rep
jecxz
push
mov
rcrl
sti
lock
lahf
in
jmp
xchg
sbb
xchg
addr16
rorb
out
fdivr
stos
lods
cs
lahf
mov
leave
push
ljmp
adc
cli
jo
into
lods
test
mov
test
rclb
outsl
test
inc
push
adc
jmp
cmc
push
cmpsl
or
sbb
push
insb
sbb
addr16
popa
jle
scas
pop
cmp
or
lods
push
xlat
movsl
fwait
pop
cmp
stos
fidivl
int3
sahf
jle
jl
sbb
test
test
repz
rol
fwait
dec
sub
pop
mov
cmpsb
add
push
xor
inc
or
insb
std
sbb
or
clc
or
clc
pop
push
test
lret
lds
fwait
cmp
mov
pusha
and
push
sub
movsl
cwtl
xlat
ds
into
popa
mov
fdivs
cltd
cmp
in
adc
in
sahf
call
xor
add
iret
negb
or
cmp
adc
scas
fcomps
lods
js
push
ss
push
xor
adc
jne
or
xor
jns
popf
unpckhps
leave
and
xchg
mov
ss
xchg
pop
xchg
addl
lcall
test
inc
push
pushf
mov
add
adc
loope
xor
mov
outsb
sbb
jg
lods
ror
leave
in
lods
sub
inc
push
cmpsb
shl
setne
out
lods
mov
lea
in
int
mov
adc
repnz
insb
dec
jmp
ss
sbb
push
leave
stos
das
cmpl
jno
xor
shll
xor
add
mov
stc
sbb
sub
jae
aas
out
data16
jg
shlb
inc
adc
ss
inc
rcrb
and
jmp
pop
push
sbb
arpl
sub
inc
add
add
adc
stos
insl
lock
rcll
xor
ficoml
out
mov
lea
repnz
mov
inc
xor
sti
std
mov
ret
idivb
mov
add
loop
cmpsb
adc
nop
sub
dec
mov
mov
out
stos
jns
adc
xchg
adc
mov
leave
mov
lods
fwait
shrb
dec
push
mov
int3
push
loopne
das
adc
not
pop
sar
fistpl
mov
scas
imul
test
lret
sub
les
sti
int
add
mov
ja
pushf
push
test
mov
out
in
jecxz
dec
jecxz
jp
test
outsb
dec
or
push
ljmp
sub
mov
xchg
std
imul
and
dec
movsl
xor
arpl
xor
push
insb
int
out
pop
jno
add
ret
xchg
xorb
clc
push
cmp
sub
pop
mov
pop
movsl
adc
pop
lcall
out
mov
add
lcall
push
shrl
jmp
mov
dec
or
icebp
mov
imul
and
outsl
xlat
dec
jne
sbb
push
xchg
push
cli
push
cwtl
ljmp
dec
imul
inc
ljmp
icebp
imul
rorl
or
bound
adcl
xor
fucom
push
xor
and
xor
ret
push
sub
push
outsl
and
sbb
mov
jge
pop
imul
sbb
add
mov
xchg
scas
faddp
inc
loop
mov
inc
push
inc
xchg
arpl
filds
mov
inc
les
adc
jle
ds
inc
je
mov
cmp
in
mov
clc
ret
scas
jns
dec
adc
lock
mov
sub
repnz
rcll
stos
push
sub
test
jb
std
subb
jnp
lret
xchg
pop
pop
test
jg
and
ja
je
mov
jo
stc
sar
sar
sti
loopne
aas
lods
mov
mov
pop
lods
stos
mov
cwtl
push
lcall
daa
int3
adc
adc
mov
push
and
js
jp
inc
repz
mov
mov
push
movsb
lods
adc
push
jp
scas
cwtl
jb
adc
and
mov
or
xor
repz
cltd
fisttpll
sub
mov
fcoml
fcmovnu
shrl
sub
jbe
or
addr16
jbe
xchg
test
mov
sahf
jge
hlt
xor
mov
scas
imul
lds
dec
lret
adc
adc
clc
mov
fsts
sub
movsl
mov
lahf
int3
pusha
and
decb
aaa
sarb
add
sub
in
out
cwtl
xchg
or
jae
adc
loopne
xlat
notb
push
mov
or
es
adc
adc
ror
cmp
rep
dec
mov
pop
das
or
jnp
aad
adc
mov
cmpsl
ret
xor
sti
ret
xchg
aad
insb
mov
dec
mov
mov
je
dec
jne
push
adc
lods
mov
outsl
jno
lcall
push
mov
test
sub
jecxz
sti
and
aaa
sti
jmp
add
jbe
xor
insl
lods
adc
orb
and
mov
shrb
gs
lock
jle
jno
jbe
mov
cmc
jmp
test
aam
xchg
inc
jae
sbb
outsb
xor
xchg
fisubl
call
int
mov
jb
stc
fbld
testb
xor
cwtl
push
adc
fsubr
push
add
mov
pusha
pop
cld
mov
fwait
push
ret
fcmovb
jle
daa
mov
xchg
sub
mov
in
cmpsl
scas
mov
mov
insb
xchg
vmread
out
cltd
adc
dec
std
cmp
mov
outsl
mov
sub
inc
ret
pop
mov
out
push
add
mov
stos
push
mov
daa
mov
cmp
push
mov
enter
int
cmp
jmp
mov
push
push
mov
pop
dec
sarb
fidivl
jno
inc
dec
push
mov
stos
or
sbb
push
out
mov
iret
jne
inc
cltd
xor
ret
inc
sub
cwtl
outsl
cmp
or
pop
adc
xchg
pop
jmp
jns
ljmp
fstps
pop
or
sub
ja
loopne,pn
aam
stos
test
aaa
mov
push
lret
and
push
stc
mov
pop
adc
pusha
in
mov
lret
lock
cs
dec
es
xchg
popf
xchg
packssdw
add
inc
cltd
push
fsubrp
xchg
aas
add
fidivs
and
pushf
icebp
xor
adc
jmp
adc
inc
pop
sbbl
pop
lds
push
mov
sub
leave
pop
add
lret
pushf
aam
inc
setp
cld
jge
shl
inc
or
aam
arpl
add
negb
ljmp
push
sbb
jmp
pop
mov
or
scas
jb
jmp
std
add
xor
filds
xchg
and
sti
xchg
push
wrmsr
lock
jns
ds
jae
ja
push
pusha
pop
mov
or
sub
xchg
pop
jb
divb
sub
sbb
add
sahf
cli
cmpsl
mov
jmp
lret
ja
into
rolb
jl
into
mov
jmp
mov
sub
pop
cs
addb
xor
dec
pop
ljmp
jge
cli
inc
loopne
pop
aad
lods
add
popa
fs
or
adcb
cmp
mov
ja
mov
or
or
fldcw
or
movsl
repz
repz
push
cli
mov
call
popa
aam
cmp
xchg
aad
movsl
leave
lret
mov
push
mov
add
in
add
jge
jl
dec
negl
fsubp
adc
lcall
and
cs
int
sbb
cli
outsb
push
dec
cltd
rorl
xor
fiadds
sub
xorl
jg
fcomip
pop
pop
mov
sub
mov
adc
sub
pusha
jne
add
mov
shlb
adc
xchg
nop
subb
pop
xchg
push
mov
jmp
mov
mov
sbb
sub
mov
dec
sub
cmpsl
nop
pop
repz
mov
mov
dec
ljmp
cmp
ss
push
lret
pop
sti
sahf
pop
pop
andb
xor
sbb
pop
jne
cli
adc
inc
shrl
push
xor
gs
add
sbb
or
inc
sub
mov
sti
fiadds
sbb
fstl
jg
xchg
imul
inc
mov
jns
hlt
stos
cmp
rcll
pop
loope
pop
mov
aaa
adc
cmpsb
pop
xor
inc
ljmpw
add
mov
pop
movsl
addr16
imul
xorl
mov
push
jno
out
xchg
push
add
inc
push
loopne
push
test
ja
pushf
mov
add
cld
lcall
orb
and
pop
push
pop
cmp
lock
mov
sbb
mov
mov
pop
xchg
cltd
mov
lock
clc
pop
push
test
loop
adcl
dec
pop
and
sub
mov
xchg
or
dec
outsb
aam
dec
xor
push
scas
sahf
cltd
in
mov
adc
fdivr
cmp
mov
sbb
repnz
adc
lock
pop
cld
cmpsl
lcall
mov
iret
jecxz
dec
test
cwtl
add
jmp
shl
pop
sub
fisubl
lahf
sub
cs
pop
jno
fnstsw
dec
imul
jae
jg
insb
in
jle
outsl
jnp
mov
gs
std
mov
aad
jne
sbb
pusha
call
lahf
pusha
pushf
push
xor
pop
mov
fnop
orl
stc
hlt
sub
mov
jo
xchg
cs
shl
fistpl
fnstcw
dec
cmp
jecxz
addr16
xor
mov
inc
out
scas
shl
inc
test
std
mov
jbe
and
xor
outsl
int
adc
orl
inc
or
mov
xchg
mov
test
out
inc
add
lahf
or
push
mov
paddb
push
imull
in
jae
xchg
in
aaa
cltd
xchg
insb
xchg
stc
xchg
dec
and
mov
dec
leave
les
aas
pop
mul
xor
jecxz
cli
push
sub
mov
scas
mov
dec
mov
stc
jg
jns
imul
mov
rorb
jg
fs
inc
dec
iret
add
ss
jmp
jp
aas
stc
js
test
sbb
add
pop
lds
sbb
mov
sub
mov
popf
cmp
nop
push
xchg
cmp
xchg
inc
inc
cli
arpl
push
pushf
orb
test
and
xchg
sub
mov
call
rorb
and
out
js
js
dec
movsl
cs
dec
cld
lcall
neg
jno
dec
sub
mov
sub
cwtl
jne
sub
mov
pop
jns
inc
pusha
dec
cmp
popw
sub
cmpsb
ljmp
mov
cwtl
xlat
lretw
cltd
cmp
outsb
inc
xlat
or
jno
jne
push
arpl
push
scas
mov
popf
les
mov
inc
inc
xor
lds
test
pop
dec
sbb
call
and
jmp
pop
movsl
mov
fnstcw
fildl
jle
dec
xor
cmp
cmp
pop
add
repnz
push
xchg
test
in
mov
fucomi
aas
mov
sbb
jge
jg
ret
jge
or
aad
or
xor
push
arpl
and
jae
adcl
call
mov
jo
movsb
iret
cmp
pop
rolb
xchg
shlb
out
xchg
and
xlat
mov
sarb
xchg
lret
jmp
sub
int
or
push
sub
and
loop
inc
into
dec
lock
mov
and
xor
jbe
adc
fadds
div
mov
out
or
pop
inc
pushf
ljmp
js
outsl
test
out
inc
jecxz
mov
push
dec
push
adc
pushf
mov
mov
incb
pop
outsl
es
outsb
adc
jbe
xchg
xor
push
push
stos
add
shll
mov
gs
mov
sbb
adc
pop
push
pop
imul
jb
mov
stos
stos
jle
popa
add
dec
into
lret
sbb
mov
adc
shl
or
ss
lods
cmp
scas
xchg
xorl
pop
add
add
and
ret
cld
push
adc
ror
cwtl
cld
mov
sbb
mov
movsl
or
push
push
push
jg
inc
lret
aaa
push
sub
xchg
out
cmc
addr16
jnp
push
add
cmp
outsb
ljmp
dec
add
dec
jmp
call
cmp
lds
rcl
test
push
mov
sbb
in
inc
fldl
xchg
arpl
outsl
sbb
inc
mov
std
movsb
mov
sub
adc
les
movsb
mov
cld
stos
xchg
fs
mull
xchg
cmp
pushf
scas
rorl
inc
cmp
mov
push
call
cmc
lret
fildl
add
dec
cli
imul
pushf
ret
stos
lds
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
lea
push
call
test
je
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
call
movl
jmp
movb
movb
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
push
call
movb
mov
add
mov
mov
pushl
pop
mov
movl
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
movl
call
mov
push
mov
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
push
push
call
lea
push
call
push
call
cmpw
mov
push
je
call
push
call
add
jmp
push
push
push
call
jmp
repz
mov
in
cmp
iret
jp
rorl
push
mov
in
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
lds
iret
jp
xor
insl
scas
cmp
xor
test
xorl
test
mov
loope
sub
pop
xor
or
int
jle
pop
out
and
mov
adc
jge
rclb
and
repz
adcb
push
mov
aaa
dec
stos
inc
lret
in
mov
movsb
rcrb
jo
mov
imul
mov
mov
repz
adc
push
and
lcall
pop
aaa
call
movsb
addb
out
je
jo
fisubrl
in
div
scas
lds
and
push
sbb
in
cmp
sbb
scas
mov
sub
mov
dec
arpl
fstl
int3
jnp
das
inc
arpl
cmp
iret
jp
cs
bound
mov
std
cmp
cs
arpl
mov
out
in
cmp
sub
scas
mov
in
cmp
into
jp
cs
arpl
cmp
iret
lock
scas
mov
in
sub
cs
arpl
cmp
ds
arpl
cmp
inc
inc
arpl
mov
in
or
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
dec
orl
jae
mov
jmp
sarl
pushf
fdivl
iret
jp
cs
addl
adc
jp
cs
arpl
cmp
cs
arpl
cmp
push
dec
arpl
stc
in
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
cs
arpl
cmp
arpl
inc
lahf
lret
mov
in
gs
push
decb
je
rcrb
sahf
xchg
sbb
xlat
loope
push
adc
loope
out
fsubr
sbb
loope
xchg
push
in
dec
lea
inc
jmp
cmp
out
stc
or
dec
ret
mov
shlb
fs
outsl
stc
sarl
loopne
stos
inc
ja
shrb
test
decb
or
outsb
in
outsl
jle
movsl
daa
dec
pop
mov
ljmp
add
or
daa
mov
mov
dec
lds
xchg
mov
push
test
push
adc
idivb
or
les
cmc
in
daa
into
lret
aaa
pop
dec
in
vpandn
hlt
nop
mov
mov
push
sbb
cld
sbb
outsb
aam
xchg
adc
push
pop
iret
mov
adc
std
xor
jg
mov
sub
mov
sbb
mov
addr16
lods
cmp
mov
std
adc
mov
sbbl
push
popf
cmp
inc
pushf
cmp
mov
fmull
mov
clc
dec
and
and
fidivrl
insb
rorl
fwait
loopne
call
gs
pand
icebp
ja
dec
inc
sti
clc
inc
orl
mov
xchg
scas
xchg
outsl
test
lret
mov
jo
add
repnz
cmpsl
cld
sbb
daa
mov
xlat
push
subb
mov
xchg
daa
dec
popf
jnp
pushl
push
scas
jnp
repnz
push
rcr
int
mov
enter
mov
and
lcall
xchg
mov
push
ja
fists
aas
sbb
jno
jecxz
das
cmp
outsb
xchg
loop
pop
test
inc
cmpsb
push
movsb
int
stos
jge
add
jae
jp
adc
jnp
cmpsb
filds
mov
dec
push
inc
sbb
xor
cltd
jne
insb
xor
dec
es
add
xor
mov
sub
ret
outsl
popa
mov
sbb
loopne
and
cld
ret
or
nop
add
mov
xchg
fstpt
adc
and
sub
xchg
popf
lds
or
add
cmp
inc
imul
sub
sti
mov
int3
mov
or
fdiv
aad
stos
sub
cmpb
jns
jae
mov
cwtl
sub
xchg
flds
sbb
sti
outsb
mov
cwtl
push
cltd
push
ret
inc
dec
es
mov
scas
dec
push
mov
xchg
adc
dec
jge
enter
or
mov
roll
pop
js
sub
lcall
sub
cmp
dec
push
cli
fs
push
mov
dec
inc
adc
and
mov
insl
fnstsw
fstps
rorb
stos
push
mov
cmp
arpl
or
or
pop
cmp
nop
sbb
sub
in
pop
rcr
sbb
or
add
std
sub
out
out
aaa
imul
in
push
popf
and
mov
shr
xor
repz
and
inc
hlt
imul
dec
in
out
aas
mov
xchg
push
jae
aad
clc
cmpsl
xor
sub
inc
jecxz
je
cmc
add
cmp
dec
mov
dec
push
daa
cwtl
mov
hlt
js
jl
dec
icebp
jns
cmpsl
dec
mov
jecxz
scas
jecxz
test
xor
xchg
mov
hlt
mov
inc
sub
and
fstpt
mov
xlat
test
sub
mov
push
mov
test
mov
push
push
or
pop
push
test
push
cli
mov
fsub
insb
cwtl
jb
jnp
cli
cwtl
jmp
jle
push
ror
mov
clc
and
inc
mov
lahf
or
xchg
enter
insb
popf
in
xlat
jo
mov
in
push
or
dec
jmp
sysret
dec
jmp
mov
or
lock
or
inc
das
cmp
jne
fisubrs
in
das
aas
adc
lret
cmpb
sbb
orl
std
push
fists
fldt
cmpsb
pop
test
int3
xorl
flds
data16
insl
xchg
mov
sub
or
inc
pop
pop
xchg
mov
sbb
sub
mov
out
aas
loopne
adc
add
jbe
mov
test
aas
filds
movsb
mov
mov
sbb
ss
test
bound
shlb
ja
cmpsb
mov
cli
fadd
lods
test
mov
xchg
pop
popa
add
loopne
inc
les
out
mov
xlat
cltd
enter
clc
stos
int3
fstpl
mov
scas
sbbl
or
inc
dec
and
mov
or
test
rclb
sar
test
data16
adc
divb
mov
cmp
iret
push
in
add
outsl
mov
or
daa
mov
push
mov
sbb
andb
add
xchg
mov
push
lock
jbe
lods
sti
ss
out
xchg
fucomi
xor
sbb
test
nop
jb
jmp
jle
mov
mov
pop
sbb
and
sub
inc
cmp
test
hlt
mov
loopne
sbb
add
dec
sub
adc
push
or
out
lahf
inc
cmp
push
in
jp
test
cmp
push
xchg
xorl
push
pop
cld
or
daa
cmp
mov
sbb
or
mov
pop
out
lea
dec
mov
sbb
outsl
ja
inc
push
or
and
test
cmp
mov
push
movsb
out
adc
in
int
pop
push
shlb
inc
mov
xor
mov
dec
mov
mov
test
sbb
aas
mov
arpl
inc
mov
pushf
xchg
sub
scas
loop
jae
orb
cltd
les
outsb
arpl
movl
stc
inc
das
mov
xchg
nop
dec
loop
sub
sbb
pop
fldenv
adc
fildll
lods
push
in
mov
mov
inc
cmpsb
mov
fdiv
shrl
or
push
mov
mov
sub
repz
sahf
sub
clc
divb
mov
pop
shl
cmp
and
sbb
dec
mov
inc
shl
and
mov
divps
mov
jno
mov
or
jo
add
jle
cmc
sbb
dec
in
int3
imull
sbb
lods
and
jg
dec
repz
inc
mov
les
xor
repnz
sbb
lods
sbb
not
cmp
mov
shll
mov
jnp
shll
mov
cmpsb
cwtl
dec
popa
sub
rorb
xchg
inc
ret
xchg
push
lods
es
repz
mov
sbb
lods
mov
mov
mov
ljmp
and
stos
es
xchg
jnp
cmpsb
out
clc
scas
pop
sbb
jl
add
int
aas
call
dec
sbb
add
sub
movsb
int
add
and
xlat
std
les
mov
inc
neg
jl
aas
call
xlat
movsb
push
add
popa
cwtl
shl
imul
mov
jb
xlat
dec
clc
fcomi
mov
dec
inc
mov
testb
lcall
inc
popf
movsl
enter
dec
dec
loopne
mov
mov
aaa
jno
sbb
xor
push
jg
movsb
xchg
cwtl
enter
mov
mov
pop
push
mov
enter
inc
or
mov
imul
add
jp
fstp
orb
sbb
in
mov
sbb
inc
outsb
push
dec
adc
xchg
mov
jne
fmull
xchg
lods
or
pop
bound
inc
ds
sub
xchg
addr16
or
movsl
lock
adc
or
pop
rcrb
push
or
adc
xor
in
adc
lock
mov
cmp
inc
scas
subb
ljmp
jnp
mov
adc
jb
pushf
movsl
pop
pop
inc
ret
dec
stos
out
ss
or
inc
mov
push
fmul
jl
push
xchg
movsb
mov
add
repz
sbb
pop
fisttpl
hlt
inc
or
xchg
mov
and
xchg
addr16
mov
bound
gs
sbb
pushf
addr16
clc
cmpsl
adc
and
jne
xchg
mov
aaa
jno
dec
out
pushf
fistpl
inc
jbe
rorl
aam
js
inc
push
push
int3
out
sbb
outsb
fistps
or
inc
mov
cmc
pop
mov
xorl
sub
inc
dec
lea
jno
sbb
fs
push
pop
adc
sub
aam
jb
mov
sti
add
jo
insl
es
negb
and
pop
lret
loopne
popa
ret
addl
hlt
or
xorl
add
ja
push
in
mov
ds
mov
loope
ss
dec
add
mov
mov
dec
shll
sbbl
les
imul
inc
sub
fcomi
lret
jns
stos
into
shr
xor
dec
lds
out
xchg
or
jmp
out
lea
std
inc
loop
or
cli
rorl
pop
push
sahf
mov
std
jge
rcl
idivb
nop
adcb
mov
xchg
pop
xor
fld
mov
arpl
xor
and
xchg
icebp
fdivl
cld
mov
repz
in
xor
cli
xchg
adc
and
mov
jns
push
mov
fmull
or
jns
les
inc
jl
hlt
jno
cmp
les
pop
xchg
test
aad
mov
dec
sarb
mov
cmp
mov
sub
sbb
fnstcw
mov
sub
cli
outsb
and
mov
mov
xor
mov
push
add
add
dec
pop
sub
mov
cwtl
dec
sbb
jno
jns
gs
rcl
sub
in
fildl
call
icebp
movsb
and
xchg
sub
inc
sbb
sbb
pop
out
cltd
outsb
test
aam
push
fisubrl
mov
xor
add
mov
push
aam
cmpb
and
add
adc
repnz
in
xor
imul
xor
mov
inc
fisttps
test
les
sbb
push
xchg
gs
push
in
xchg
push
mov
or
popf
fidivrs
lcall
aas
jmp
es
mov
mov
mov
xlat
les
ret
and
jg
jnp
xchg
pop
sub
call
sub
outsl
mov
inc
aad
xor
sbb
insb
mov
in
push
icebp
in
rclb
repnz
popf
adc
popa
sbb
aas
adc
push
stc
jle
sahf
notl
inc
fimull
mov
and
out
jmp
aad
mov
out
pushf
mov
stc
jmp
imul
movsl
mov
dec
pop
pop
jno
or
gs
scas
sbb
adc
mov
adc
aas
ss
cmc
iret
xchg
and
mov
push
jbe
push
sub
loopne
pop
ret
movhps
push
adc
mov
flds
xchg
sbb
ja
and
xchg
sbb
sub
mov
inc
sar
sub
jno
sub
add
psrlw
mov
xchg
xchg
into
icebp
int3
push
fadd
xor
mov
aam
jge
clc
xlat
les
repnz
add
add
push
push
call
push
call
xor
pop
add
ret
nop
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
add
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
imul
test
inc
add
imul
mov
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubrl
add
imul
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
