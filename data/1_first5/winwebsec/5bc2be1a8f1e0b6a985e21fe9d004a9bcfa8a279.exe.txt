sbb
aaa
add
add
jae
sbb
imul
xor
jmp
daa
idivb
out
sbb
inc
ja
seta
push
and
mov
inc
fdivrs
flds
and
add
jns
mov
movl
ljmp
or
mov
data16
xor
fsubrl
leave
data16
aas
js
cltd
inc
cmpsb
mov
sub
jnp
fmull
cmp
movl
rclb
dec
or
sub
adc
int
fwait
inc
pusha
jo
xor
call
mov
cmova
cmp
rcrb
fnsave
mov
fcoms
into
xchg
mov
sbbb
xchg
mov
xor
jae
cmpsl
or
std
in
cli
xchg
xor
insb
repz
and
sub
outsl
cwtl
sbb
and
repz
int
jmp
inc
fnstcw
xchg
and
pop
bound
sahf
loop
jmp
mov
pop
pop
mov
mov
pushf
les
js
loopne
cmp
outsb
pop
cmp
movsl
fimuls
movsb
pop
push
xchg
pop
ljmp
cwtl
xchg
dec
and
xor
push
adc
out
fmuls
cwtl
push
mov
push
fs
out
aam
outsl
xor
shrl
loope
pop
rcrb
push
lret
inc
es
fcmovnb
mov
ds
lahf
push
rcrb
stos
mov
das
jb
add
leave
rclb
or
sub
ficomps
jo
jo
push
xor
mov
popf
inc
inc
jp
xchg
out
sub
gs
mov
test
out
xor
sbb
mov
scas
push
call
pop
adc
ret
arpl
mov
push
test
stos
sbb
xlat
cmp
cs
clc
mov
lcall
es
into
ret
inc
inc
aad
test
dec
lds
pop
xchg
mov
ja
pop
jl
imul
ret
push
sub
stc
leave
vmovaps
dec
add
push
inc
cmpsl
cs
stc
mov
jecxz
sahf
popa
adc
push
mov
jmp
jg
mov
fcomip
sub
data16
imul
ja
hlt
inc
iret
mov
fistpl
add
mov
jmp
out
mov
xor
je
and
lahf
rclb
jbe
mov
scas
fs
adc
or
jno
cli
aaa
sub
scas
movsb
jg
cmp
iret
cli
and
lahf
jnp
lds
mov
stos
ss
out
add
jno
sub
nop
mov
mov
out
jb
in
std
out
dec
fldenv
fiadds
mov
sbb
pop
loop
lret
xchg
inc
ret
sub
adc
xor
or
into
xchg
ret
jmp
adc
stos
cld
popf
pop
fbstp
xor
pop
jns,pt
cltd
and
test
dec
mov
dec
int3
lret
sarl
jl
mov
repnz
cmp
xor
push
test
xor
popf
outsb
dec
outsb
mov
test
mov
clc
push
ds
xchg
ljmp
cmp
pushf
and
insl
adc
call
lock
xchg
call
jno
push
inc
or
jb
and
sub
ljmp
add
pop
inc
stc
sub
cli
popf
mov
mov
add
add
sub
inc
aaa
push
xchg
testb
or
sub
subb
push
test
jbe
loop
adc
push
sub
mov
add
call
xor
mov
xor
jae
lahf
je
mov
and
enter
or
mov
bound
daa
xchg
outsb
sub
add
bound
loope
in
fs
xchg
sub
mov
sbb
jmp
sbb
fistpl
or
mov
imul
and
icebp
lods
dec
xchg
ds
shl
loop
bound
shrb
loope
and
mov
test
adc
lcall
out
xchg
pop
cld
mov
incb
push
adc
dec
lds
sbb
cmp
sub
adc
pushf
js
mov
xchg
inc
xor
inc
mov
xor
std
or
sub
mov
in
enter
sub
push
jp
mov
inc
push
in
pop
in
mov
loopne
push
dec
sbb
jmp
mov
lods
nop
mov
jae
popa
xchg
or
jle
mov
jge
push
shlb
cmpsb
jg
cld
mov
inc
pop
or
stos
jbe
jno
mov
test
and
jbe
adc
iret
hlt
push
aam
adc
push
divl
andb
mov
mov
push
in
push
ja
jnp
mov
lea
mov
out
xorl
bound
dec
loop
pop
add
paddw
fidivl
jbe
loopne
data16
mulb
add
xchg
push
mov
sub
xchg
mov
dec
inc
adc
or
mov
jne
mov
push
mov
pop
mov
xchg
jnp
test
add
lods
sbb
jb
mov
pushf
dec
xor
add
xchg
leave
mov
pop
leave
imul
ss
pop
dec
sbb
lahf
pop
pushf
xor
xchg
add
ret
jl
aad
ret
movsl
hlt
adc
jmp
add
inc
mov
push
pusha
adc
outsl
mov
or
sub
xchg
sub
and
cmp
jo
outsl
xchg
xor
test
clc
adc
xor
sub
push
push
loope
and
movsl
jne
sbb
mov
jmp
xchg
jne
in
loopne
lret
pushf
jge
or
fmull
mov
add
ja
cmp
add
mov
and
test
sub
mov
shll
cs
cmp
enter
pop
in
or
outsb
cmp
icebp
push
mov
jge
mov
pop
jbe
and
subl
xor
test
test
sbb
bound
insb
cmpl
je
lcall
in
jns
ret
pop
stc
xor
xchg
fbld
xchg
addb
xchg
adc
cs
rcrl
jbe
in
lds
cmpb
roll
popa
jns
dec
lods
cli
sbb
cmp
inc
sbb
fldcw
add
jo
shr
call
xor
jg
dec
and
pop
xchg
push
add
cmp
sbb
xchg
test
repnz
fdivrs
and
sub
clc
clc
lret
pop
sub
pop
xchg
and
bswap
cmp
jnp
lea
inc
ret
inc
hlt
lret
sahf
push
rclb
movsl
push
ja
fsubr
xor
scas
xchg
stc
sub
sub
incl
mov
imul
addr16
sbb
shll
sti
pop
xlat
lods
pop
ret
repnz
adc
or
jne
jb
fsubs
call
test
mov
sbb
and
and
adc
cmp
mov
add
add
ret
cmp
ret
enter
jns
jb
lcall
das
daa
cld
sub
das
or
mov
and
sbb
cli
rcrb
jb
dec
dec
imul
jo
cmpsl
mov
mov
push
mov
clc
jmp
ffreep
pop
xchg
mov
and
add
shlb
leave
pop
mov
loope
inc
hlt
mov
inc
dec
xchg
lcall
fsubs
rcll
xchg
ret
out
cli
mov
sbb
daa
inc
xchg
scas
ret
sbb
push
mov
mov
adc
jg
inc
push
cmc
pop
inc
in
push
sbb
pop
call
out
lahf
popa
call
xor
sbb
ret
mov
mov
mov
daa
push
push
sbb
insb
and
js,pn
cmp
jle
push
insb
sbbb
xchg
call
mov
xchg
add
and
sub
hlt
int3
ljmp
pop
ret
jb
adc
xor
das
mov
pop
mov
mov
inc
fyl2x
loope
mov
std
stos
rcll
out
lret
push
test
jne
aas
clc
sarb
test
sti
data16
ret
int
and
adc
add
stos
inc
inc
sbb
dec
dec
mov
push
lcall
sbb
lds
cmp
dec
arpl
push
aaa
push
test
pop
rcr
and
daa
clc
jl
mov
test
outsb
sbbb
jecxz
sub
push
jmp
xchg
sbb
push
stos
mov
xchg
xor
adc
and
push
sub
daa
sbb
bound
daa
xor
ljmp
jecxz
and
ret
fsts
dec
jge
data16
push
pop
xchg
inc
sbb
lods
or
loopne
mov
sbb
or
loope
jns
lret
xor
inc
fcoms
cmpl
stos
jnp
push
data16
xchg
jbe
or
add
or
jne
rcr
fwait
jl
in
rcrl
popf
hlt
add
inc
sbb
jb
outsb
test
xor
mov
mov
test
cmpsl
into
lcall
push
pop
stos
mov
push
xlat
mov
scas
mov
sbb
dec
pop
xorb
subl
and
mov
movsl
pop
mov
mov
mov
inc
mov
fwait
push
stos
cltd
sahf
movsb
and
adc
es
out
shll
sub
repnz
bound
rclb
arpl
fs
mov
sbb
insb
rorl
negb
imulb
cli
xchg
out
outsb
cld
pushf
jno
cmp
mov
cvtpi2ps
lods
cs
std
mov
outsb
dec
sub
ljmp
addl
mov
adc
jb
jmp
out
and
lret
pop
jno
adcb
pop
add
leave
cmp
mov
push
xchg
lret
gs
mov
fsubs
lock
aaa
pop
pop
stc
test
and
mov
int
jle
inc
jecxz
adcl
stos
mov
cmp
push
jo
add
aad
rcrb
xchg
xor
test
cmp
jns
jo
add
and
mov
outsb
in
pop
cmp
or
ret
sub
fstps
ljmp
sub
pushf
push
mov
or
cmp
imul
push
dec
inc
add
daa
sub
xorb
lds
pop
inc
sahf
shrl
rclb
pop
mov
mov
aad
cmp
xor
leave
mov
mov
add
pop
enter
inc
adcl
call
gs
push
ds
push
push
sub
pop
mov
pop
dec
out
faddl
stos
mov
testl
mov
pop
cmpsb
int3
sbb
clc
push
into
or
jae
sub
cmp
in
cmp
pop
je
jecxz
ror
jp
sbbl
xchg
lea
dec
mov
popa
adc
cmpsb
imul
sbb
repz
stc
popa
fiaddl
ds
in
cltd
mov
mov
mov
outsb
cli
js
jbe
sti
sbb
repz
arpl
ja
mov
sarb
cmp
shll
sbb
mov
dec
mov
les
lret
pop
xor
and
push
jp
inc
dec
sbb
aaa
loope
loop
pusha
outsb
adc
add
or
inc
cli
sub
scas
pop
or
mov
and
lret
or
fidivs
xchg
cwtl
pushf
dec
into
rorl
cmp
and
daa
fsubs
cmp
xlat
pushf
dec
es
hlt
data16
pop
pop
mov
fidivrl
int3
inc
sub
dec
cli
mov
jns
jg
fdiv
in
movsl
push
aas
add
push
pop
sub
jmp
pop
jns
std
filds
or
mov
jae
in
or
jg
adc
inc
les
ficoml
push
rcrl
xchg
push
js
ja
shll
inc
hlt
aaa
sar
cmpl
iret
out
jg
sbb
push
cs
lock
jmp
or
nop
out
out
xor
test
mov
ret
inc
add
scas
mov
rcll
ret
sbb
je
xchg
xchg
je
xor
test
fists
sbb
sbb
fmulp
mov
loopne
pause
and
xchg
and
call
sbb
pusha
jp
lods
xorl
loopne
jecxz
aas
jle
mov
lds
pop
aam
mov
cmp
stos
icebp
les
add
add
jne
mov
shrl
sti
scas
dec
adc
pop
cmpsb
lea
pop
int3
push
call
mov
sub
sahf
push
push
xchg
mov
pop
adc
scas
adc
ljmp
and
stos
sbb
mov
jmp
pop
jns
daa
nop
das
xchg
call
cmpsl
mov
adc
mov
push
inc
cmpsb
cmp
push
pop
cmp
iret
inc
fsubr
das
or
sbb
sub
dec
out
filds
int3
jnp
psubq
push
inc
xchg
push
dec
xchg
sahf
pop
xchg
jnp
loop
aad
ljmp
pop
or
pop
sbb
gs
push
mov
xchg
je
pop
or
lods
cmp
pop
test
fimuls
push
xor
cmp
out
clc
lods
cld
push
repnz
mov
jne
cmp
loope
in
sbb
imul
xor
adc
xchg
lods
sbb
test
cmp
les
mov
out
add
repz
lcall
sti
sub
repz
decl
out
cwtl
dec
cmp
mov
scas
dec
lds
sbb
push
add
pop
les
xor
mov
out
pop
ljmp
fiadds
sub
or
or
ds
ss
dec
inc
shlb
add
mov
int3
aad
jb
sti
inc
out
inc
push
add
sub
push
push
dec
movsl
gs
mov
cmpsb
mov
xchg
mov
mov
dec
sbb
mov
jne
stc
push
popa
or
das
cmp
mov
stos
std
aaa
addr16
jns
nop
jne
or
or
loope
or
in
dec
xchg
pop
aaa
cwtl
out
testb
in
xchg
mov
xor
mov
push
mov
int3
repnz
pop
in
int3
jne
jb
push
scas
in
sub
neg
repz
pop
mov
out
movsb
inc
lock
jmp
aas
nop
movsl
jmp
dec
push
xlat
insl
mov
mov
mov
dec
lock
aas
add
mov
jge
mov
shll
daa
cmp
dec
and
or
aas
jae
loop
mov
xchg
xor
outsl
jg
xor
jecxz
sub
call
jl
cltd
and
cmp
adc
adc
dec
cltd
std
xchg
lods
push
mov
or
test
jmp
lods
stos
sahf
shll
dec
and
xchg
pop
int3
push
lcall
in
movsb
sbb
lret
call
mov
xchg
pop
test
clc
mov
outsb
cmp
jo
movsl
mov
push
cmp
cmpl
lds
out
flds
sub
scas
adc
push
sub
push
mov
fs
mov
into
ret
mov
mov
sti
int
mov
dec
sub
cmpsb
lahf
jbe
popf
nop
jae
or
stc
rolb
je
subl
jg
cld
xchg
js
add
xlat
mov
push
jnp
push
mov
jle
sub
out
push
mov
ljmp
sbb
pop
enter
lret
xor
cmc
and
fisubl
in
mov
stc
jl
cli
push
inc
xor
mov
mov
popf
adc
test
or
outsl
ret
loope
xchg
filds
adc
stos
idivl
push
pop
sub
scas
push
xor
sub
fxch
xchg
jne
or
or
cmp
pop
fstpt
xchg
test
sub
mov
sbb
jbe
inc
fidivl
sub
cmp
cmpsl
ja
mov
mov
adc
adc
mov
pop
daa
or
jnp
push
je
je
mov
inc
push
shl
add
les
leave
stos
push
dec
stos
xor
mov
jecxz
inc
push
push
xchg
and
pop
into
loope
mov
inc
sbb
mov
inc
and
push
jo
mov
fwait
jecxz
xchg
add
ja
in
inc
hlt
call
push
sub
add
pop
cmpsl
mov
dec
call
xchg
icebp
or
mov
arpl
insl
vpshad
mov
mov
shlb
adc
inc
movsl
fbstp
sahf
jo
xor
jne
cltd
add
test
sub
and
shr
lds
add
outsb
xchg
clc
mov
cld
or
pop
cmp
ljmp
clc
lcall
jmp
jnp
inc
cmp
loopne
aas
dec
and
sub
dec
mov
int
cli
ss
fwait
and
inc
jne
inc
or
cmc
mov
jo
rcrb
hlt
pushf
pop
add
add
fwait
dec
addr16
rorb
cmp
lahf
cmpsb
icebp
sub
push
cmp
test
fwait
push
sub
lock
jp
jnp
lods
cmp
bound
mov
gs
test
daa
in
pop
mov
and
jbe
adc
stos
mov
rep
xchg
stos
fnstenv
adc
cmc
stc
cmp
cmc
sti
dec
cld
test
sub
das
and
iret
sub
jge
push
xor
adc
and
cmc
jno
aam
pop
test
dec
rolb
dec
sub
jmp
push
aad
movsl
aad
movb
stc
pop
xchg
movsl
pusha
or
std
orb
dec
inc
mov
sbb
lahf
out
or
ja
mov
cli
xchg
push
cltd
mov
subl
aas
fmull
imul
subl
mov
add
jo
insb
pushf
mov
lds
data16
inc
mov
dec
mov
subl
jmp
sbb
arpl
push
mov
inc
movsb
pop
sbb
insb
adc
in
data16
sarl
in
scas
sbb
mov
mov
or
push
pop
icebp
pop
ret
mov
push
dec
push
jg
scas
fldt
out
cmp
mov
pop
mov
sub
mov
cwtl
rorb
inc
adc
shlb
ljmp
xchg
outsl
push
pop
fucomp
ficoml
mov
vcmpsd
pop
sub
and
ret
xchg
es
lahf
stos
pop
adc
ror
mov
dec
stc
arpl
pop
out
push
push
adc
push
sti
pop
mov
push
and
arpl
push
lret
aaa
dec
cli
pop
leave
ss
fwait
inc
xchg
pop
nop
push
inc
mov
shrb
cmp
cmp
mov
scas
fwait
cwtl
adc
je
scas
scas
sbb
mov
addl
ds
popa
xchg
inc
jle
int
cmc
or
pop
jg
adc
test
jo
jmp
cltd
and
or
adc
mov
pop
cmp
adc
sbb
lock
lcall
push
rolb
ljmp
mov
mov
pusha
cmp
sarb
das
adc
xor
adc
mov
cs
outsb
mov
cmpsb
int
fwait
mov
xor
add
int
and
jne
pop
in
mov
scas
inc
mov
sub
jp
or
insb
and
push
mov
cli
and
xchg
cmp
cld
mov
add
inc
or
sbb
pop
fidivrl
loope
leave
mov
jl
or
scas
shlb
cmp
roll
mov
test
aaa
adc
inc
int
lahf
cld
lahf
fs
cmp
sub
shrl
call
cmp
add
cltd
fnclex
jae
lret
stos
mov
mov
sub
lret
xchg
sub
adc
push
dec
ja
dec
aaa
xor
xchg
add
test
inc
or
mov
scas
stc
push
loop
mov
add
cmp
nop
xor
cmp
out
repnz
lock
pusha
cli
ret
mov
push
out
mov
cli
popf
aaa
and
sub
sub
mov
mov
push
jmp
mov
push
inc
adc
outsb
out
sub
iret
sub
push
pop
and
sbbl
pop
push
cmp
aam
shlb
test
push
jp
jecxz
xor
cmc
sub
or
push
stc
mov
jno
fsubrl
fstpl
je
xor
pushf
mov
cwtl
imul
or
jo
enter
mov
adc
std
out
icebp
cmp
cmp
pushf
jl
sub
aaa
mov
mov
test
inc
call
xchg
loope
mov
jb
in
enter
sbb
aad
jnp
mov
test
cwtl
sahf
sahf
fists
pop
jmp
jne
daa
push
cmpsl
cmpsl
aad
icebp
jmp
mov
jmp
jbe
lds
jns
inc
mov
add
inc
fidivs
ret
enter
mov
xchg
pop
lock
scas
xchg
mov
xor
pop
mov
aam
adc
inc
jno
dec
sub
inc
xor
and
sbb
cmp
std
cmp
adc
dec
add
ljmp
pushf
jmp
sahf
sbb
or
cmp
xchg
stc
or
imul
aam
xor
mov
jnp
rcll
sbb
cwtl
in
mov
in
cwtl
mov
bts
jp
fcmove
dec
es
xchg
xor
push
daa
mov
das
out
out
and
fwait
aaa
pop
incb
xor
ret
popa
fs
lods
lret
adc
mov
in
lahf
popa
cmp
xor
mov
mov
cmp
in
dec
iret
dec
pop
unpcklps
inc
pop
test
push
paddb
ljmp
popa
jo
loope
xlat
xchg
jmp
mov
or
pop
sub
or
mov
mov
sbb
xchg
fiaddl
xor
les
out
shll
lret
mov
cmpsl
imul
cmp
xchg
emms
mov
dec
in
push
lret
in
popf
mov
stos
sub
les
inc
scas
pop
out
mov
push
lods
loopne
repz
test
cs
sbb
mov
adc
adc
ror
out
imul
pop
xchg
rcrb
mulb
cltd
dec
sub
mov
mov
cmp
arpl
mov
jp
rclb
push
xchg
shl
cli
pusha
pop
test
pop
rorl
sar
sub
inc
or
fnstsw
mov
adc
negl
es
cmp
cs
xchg
mov
lea
jle
cmp
pop
ljmp
lea
stos
inc
and
aaa
xor
xchg
push
sub
xor
adc
cmpsl
push
sub
or
lea
sub
dec
mov
test
lret
cmp
fwait
test
pusha
aad
cmp
in
jnp
je
xchg
adc
orb
imul
fsubr
adc
int3
cmp
loopne
inc
jns
daa
lods
jle
xchg
sahf
cs
sahf
ss
push
xor
mov
jecxz
out
xchg
add
es
ss
rcrb
cmp
inc
lret
movsb
lds
lcall
aad
pop
iret
aas
ss
dec
sub
inc
fucomp
test
xchg
pusha
mov
jae
notb
add
dec
pop
fcompl
jmp
add
jnp
or
popf
pusha
notb
inc
scas
adc
fsubl
pop
hlt
hlt
sahf
xlat
loope
jmp
stc
in
pop
andl
pop
cltd
pop
sbb
enter
pop
sarl
sbb
pop
jmp
into
cmc
repnz
bnd
fstpt
repnz
cmp
cmp
dec
add
and
xchg
jg
sbb
mov
cmp
xlat
sbb
repz
pushf
icebp
rcrl
jnp
ds
mov
iret
mov
ret
mov
out
adcb
pop
xchg
nop
test
add
add
stos
js
jmp
cmp
sbb
addr16
cld
jbe
cmc
in
cmpsl
pop
cltd
sbb
scas
stos
adc
jnp
repz
rclb
test
adc
mov
outsb
pop
inc
enter
pop
push
pop
sbb
cmp
clc
insb
push
cmpsb
or
or
cmpsl
add
xchg
jae
or
movsl
ss
adc
push
cmp
fs
mov
frstor
int
das
repnz
jp
ja
mov
xorb
adcl
cmc
aad
adc
sti
mov
cltd
insb
mov
dec
inc
in
ret
inc
xchg
pop
cs
sti
je
jge
xor
cwtl
daa
add
mov
and
and
divb
movsb
mov
add
mov
or
mov
ds
pop
orl
add
aad
mov
movsb
sub
aad
adc
mov
js
push
mov
add
repz
and
gs
pop
popf
cli
sbb
and
jge
insb
fmull
dec
mov
icebp
aas
out
mov
pushf
in
pop
add
inc
call
mov
xorb
sub
stos
es
fiaddl
ret
or
rcl
inc
mov
adc
sbb
clc
jmp
mov
repnz
imul
bound
sbb
sbb
test
cmp
jp
and
imul
cmp
mov
dec
jmp
cwtl
cld
push
sbb
pop
mov
pop
inc
ss
jmp
mov
out
xchg
cmp
loopne
dec
adc
sub
int3
mov
xlat
lsl
adc
xor
iret
fdivs
jg
fwait
push
jg
xor
cs
push
test
sahf
cmp
mov
mov
imul
jmp
push
outsl
leave
jb
dec
in
imul
cmp
mov
repz
ret
or
adc
inc
insl
ja
les
jmp
sbb
stc
mov
cmp
dec
pop
outsl
xor
insb
lea
ret
dec
scas
xchg
andnps
imul
cs
out
es
pop
cld
idivb
cmpb
sbb
jo
dec
cmpsb
mov
ret
gs
out
pop
les
call
mov
repz
xchg
aas
mov
lret
js
mov
push
or
xor
jl
mov
and
ret
sbb
and
test
pop
xor
movaps
mov
mov
pop
pop
loopne
in
std
adc
ja
xchg
xor
in
shl
lods
test
dec
adcb
and
mov
stos
cmpsb
jae
jmp
aam
shll
sub
and
faddl
fnstcw
stos
mov
mov
jg
and
les
sbbl
call
nop
or
ja
mov
cld
shll
addr16
dec
adc
loope
shrl
iret
mov
and
sbb
mov
jns
inc
mov
and
mov
lret
push
insl
push
test
repnz
push
jno
adc
test
fcomi
adc
js
or
popa
xor
mov
loopne
test
xchg
xchg
or
loope
into
mov
pushf
xchg
iret
mov
cmpl
cmpsb
sbb
iret
mov
mov
aas
dec
add
sahf
mov
inc
imul
rorl
pop
mov
mov
xchg
in
sub
bound
pop
and
sub
sbb
ror
xor
jl
push
repz
loop
cmpb
mov
xchg
stc
mov
jb
in
mov
push
mov
inc
lret
lods
dec
xchg
lret
cli
cmp
les
out
push
and
jae
imul
adc
push
loopne
lret
fiaddl
or
fmull
mov
push
xchg
dec
adc
or
cmp
xchg
xor
jae
mov
adc
popf
pop
loopne
or
push
testl
sbb
sbbb
cmp
hlt
xchg
jno
sti
xor
adc
jbe
jecxz
sbb
movsl
mov
lods
xor
mov
cmp
push
mov
jo
cwtl
cmpsb
iret
dec
mov
pop
aam
jbe
arpl
mov
pop
into
ret
adc
flds
in
xchg
xchg
sbb
imul
loopne
into
sbb
mull
imul
filds
sub
lahf
xchg
mov
inc
and
out
hlt
mov
pop
popf
les
sti
push
jp
xchg
orb
jle
scas
std
pop
rdmsr
fwait
leave
and
xor
andb
test
pop
pop
push
xchg
xchg
cmc
sub
outsb
ljmp
mov
sbb
imul
into
loop,pt
test
orb
in
test
scas
addr16
stos
add
addl
inc
ss
fwait
sbb
xlat
dec
cmpsb
adc
fldt
cmp
mov
mov
xchg
mov
out
int
pop
mov
xor
sbb
aas
pop
mov
cmpsb
montmul
cmpsb
les
cmp
repnz
cld
test
gs
mov
ficoms
or
jecxz
mov
xor
mov
movsl
pop
or
clc
movsl
fimull
repnz
adc
mov
iret
lds
xor
jbe
xchg
sbb
sahf
mov
adc
int
leave
jno
dec
jnp
ja
jns
lret
sbb
inc
sar
enter
sbb
jge
xchg
sti
ret
je
xchg
mov
mov
jno
test
aam
xchg
repnz
push
adc
and
out
insb
push
or
rolb
xor
js
dec
lcall
pop
jg
push
or
inc
push
lock
loope
faddl
mov
pushf
repz
mov
pop
mulb
dec
sahf
fimuls
xor
xchg
xor
sbbb
jne
mov
jbe
loope
add
orl
movsb
ret
add
or
inc
pop
jle
inc
inc
inc
add
and
lds
or
std
mov
push
lods
pop
test
jne
flds
adc
es
js
dec
xchg
add
mov
shlb
dec
pop
dec
fcmovnbe
nop
sub
pop
aaa
xor
movsb
mov
mov
lock
pop
pop
or
or
out
sbb
movl
push
rorb
shlb
in
dec
sub
and
jo
jecxz
pop
push
mov
cmp
lds
mov
cld
fucomp
cli
cwtl
or
add
scas
es
sub
jle
mov
mov
adcb
ljmp
stc
cs
xor
inc
mov
push
push
sub
scas
xchg
outsb
xor
jae
jge
flds
mov
in
and
push
sti
jno
dec
push
add
jge
out
cmc
outsl
mov
je
jge
sti
out
xchg
jle
dec
imul
fucomp
xchg
cmc
mov
ds
xchg
repz
push
ret
push
mov
xor
mov
push
xchg
jnp
push
sbb
jno
cmp
xchg
mov
dec
or
mov
add
in
movsl
test
jmp
fsubs
pop
fsubr
pop
in
clc
mov
mov
mov
xor
adc
mov
mov
arpl
cmpsl
fsubl
cmp
lock
lret
into
mov
mov
or
dec
adc
icebp
pop
es
mov
mov
mov
xlat
sub
jge
ficomps
shll
jmp
aad
jne
jmp
xchg
mov
push
push
jmp
push
mov
loop
movsl
mov
pop
in
lock
lret
xor
cmpsb
dec
jnp
out
outsb
dec
hlt
movsl
ret
js
mov
nop
dec
push
lods
fldcw
cwtl
adc
cmp
in
push
push
xchg
push
stos
jle
jmp
pusha
sub
addr16
xor
push
in
ljmp
add
roll
mov
shlb
adc
leave
push
inc
pushf
pop
aad
add
out
loop
mov
mov
test
cmp
push
lret
sub
cmpsl
cmp
pushf
mov
cmp
add
ja
add
jae
adc
fisttps
pop
mov
sbb
ret
push
cmpl
sub
cmpsl
sub
pop
pusha
bound
jo
rcll
mov
lea
aas
xchg
ss
inc
das
mov
add
int
insb
mov
mov
pusha
sbb
xchg
sti
push
daa
data16
movsl
mulb
sbb
add
pop
push
stc
movsb
and
jle
jg
repz
dec
and
pusha
mull
xchg
faddp
inc
loop
fistps
imulb
fcom
mov
xchg
div
push
cmp
jecxz
insb
repz
popa
inc
ss
test
cmp
sbb
nop
xor
cli
fmull
out
mov
scas
andb
xchg
je
cmp
jbe
xor
pop
add
and
shrb
int3
add
mov
pop
test
in
xchg
fsubrs
ret
ja
xor
into
push
mov
cmp
fdiv
mov
lea
dec
insb
push
and
lcall
or
loop
ficoms
fldl
pusha
xchg
pop
lahf
jno
addl
mov
cs
lock
cmp
test
movsb
idivl
sti
push
mov
sbb
or
test
jecxz
jmp
xor
jecxz
cltd
mov
cmp
call
push
jbe
shrl
mov
std
dec
test
std
popf
aam
cmpsl
out
loop
cwtl
xor
lret
add
mov
test
and
mov
rorb
jmp
fistps
cmp
mov
icebp
mov
inc
sbb
lock
dec
mov
mov
xchg
mov
fldl
cmp
mov
lea
sbb
cmp
mov
repz
mov
shll
int3
pop
and
dec
out
cmp
bound
aad
notl
cs
pop
rorl
push
je
sbb
fstps
jno
jge
out
xor
in
pushf
mov
and
jecxz
clc
mov
call
daa
sub
xchg
xacquire
rcrb
jp
outsl
ja
into
xchg
push
push
jo
xchg
in
jo
push
sti
daa
cmc
xchg
inc
andb
cmp
imul
cmp
scas
rol
call
pop
dec
xchg
dec
iret
jmp
xor
pushf
and
bound
or
stos
mov
mov
dec
nop
cmp
testb
in
fnstcw
sub
mov
sub
push
push
or
sbb
ss
loope
xchg
jp
sahf
inc
mov
adc
leave
mov
and
je
inc
arpl
outsl
sbb
stos
xchg
sbb
movsb
or
dec
and
add
adc
lret
jo
xor
jle
cwtl
cmc
loope
insl
pop
xchg
mov
xor
fwait
test
sti
dec
bound
pop
add
movsb
mov
push
scas
and
jmp
jp
lds
dec
sarl
and
incl
sbb
xchg
mov
rol
cmp
push
jns
xchg
sub
das
push
outsb
sbb
ret
pop
sub
pusha
mov
leave
xlat
dec
mov
pop
mov
or
mull
sti
and
cltd
fstps
inc
ret
lret
push
aad
fs
xor
iret
sti
shrb
cwtl
fdivrs
lods
adc
roll
stos
movsb
ret
cmpsb
push
sarb
xor
mov
out
cld
test
inc
mov
cmc
push
loope
fwait
mov
arpl
push
jbe
popa
mov
les
shrl
int
jne
mov
sub
push
inc
dec
out
jo
aas
frstor
popf
aaa
sbb
push
push
insl
ss
jbe
cmp
cmpsl
out
loope
or
icebp
adc
add
mov
xchg
fisubs
or
repnz
mov
add
fsts
mov
mov
paddq
adc
dec
mov
addr16
pop
inc
inc
in
mov
insb
stos
stos
cs
add
cmp
pop
subl
add
ds
ss
leave
inc
insl
mov
sbb
jp
mov
jle
enter
loope
jb
sub
adcb
pop
loopne
sbb
sbb
dec
loopne
xchg
xor
fs
stos
cltd
xor
adc
add
aas
or
adc
ja
out
fdiv
sbb
cmp
jne
int
push
scas
mov
sub
mov
push
xor
jne
xchg
arpl
jl
xchg
mov
sub
mov
pop
push
outsl
xor
add
call
and
dec
and
mov
ret
out
stos
inc
mov
dec
push
or
mov
adc
stos
aam
xlat
jecxz
xchg
adc
rcrl
mov
or
and
dec
cmp
mov
mov
mov
ret
xchg
fs
xorb
push
dec
xchg
das
loope
clc
push
mov
testl
sub
js
mov
je
xchg
add
jne
xlat
insb
cmp
les
mov
or
mov
push
aad
xor
hlt
push
rcrb
mov
jb
mov
cmc
xor
or
rol
pop
inc
sbb
sahf
je
loopne
jb
sub
xor
inc
imul
pop
popa
scas
mov
mov
shrl
test
xor
fcom
sbb
shll
fwait
ror
repnz
sub
jnp
pop
insb
mov
std
mov
clc
mov
f2xm1
jae
dec
cmp
movsb
mulb
cmpl
inc
lock
je
dec
push
divb
fisttps
push
icebp
jns
mov
push
fxch
loopne
and
into
cli
add
lret
cmp
jl
insb
dec
pop
and
imul
outsb
jne
pop
inc
or
insl
cmp
ret
mov
ja
pop
psrlq
add
jle
mov
mov
gs
ret
push
xchg
adc
call
data16
pop
fcoml
add
push
aas
lret
jl
jne
cmp
aam
jg
or
adc
jge
push
adc
negb
orl
cwtl
pop
adc
repnz
bndstx
into
adc
pusha
dec
mov
fmull
stc
dec
jg
lcall
pop
scas
cmp
test
dec
fstps
bound
popa
mov
ja
xchg
adc
mov
jmp
pop
add
nop
mov
subl
shll
cmp
lods
ss
pushf
jl
stos
inc
mov
fldl
loope
or
dec
inc
shr
mov
ja
push
in
mov
and
inc
movsl
inc
inc
dec
xchg
jns
jmp
mov
add
push
fldt
nop
pop
lds
push
sub
arpl
jbe
add
stos
ret
adc
xchg
out
mov
xor
test
in
jb
xor
xor
mov
addb
push
les
inc
nop
loop
sbb
jns
addb
cmc
loope
push
pop
push
inc
sub
in
or
xor
outsb
fmuls
das
lods
std
push
lock
das
inc
sbb
cmpsl
cld
insb
aas
cmpl
incb
lahf
mov
mov
jmp
adc
loope,pt
stos
add
jo
inc
imul
movsb
rorb
subl
xchg
mov
mov
inc
cltd
es
xor
and
jecxz
in
mov
or
roll
xchg
mov
adc
lea
inc
jo
mov
and
fwait
test
bound
push
jp
nop
mov
xor
cmpsl
mov
jnp
stos
add
mov
rolb
push
std
cltd
pop
cli
cmp
sbb
out
xor
mov
dec
jno
sbb
test
movhps
push
push
insl
rorl
enter
outsl
push
or
cmp
sub
or
test
cmp
jne
std
cltd
push
fdiv
into
xchg
jl
arpl
sbb
out
ja
out
data16
inc
cmp
loope
pusha
xor
insb
xor
scas
add
jne
mov
sbb
aam
inc
mov
mov
and
repz
lea
lods
lcall
push
inc
nop
arpl
out
push
std
push
lahf
loop
fisttpl
pop
push
repnz
dec
sahf
data16
fidivrs
jno
testl
das
icebp
lods
jle
ret
inc
push
pop
xor
cmp
daa
flds
notl
jmp
dec
cs
add
xor
mov
inc
lahf
inc
loop
jl
ret
out
inc
lods
push
loope
movl
jmp
dec
stos
mov
idivl
and
mov
inc
cltd
mov
lock
sbb
xchg
pop
xchg
andb
pop
sub
aad
mov
push
xor
loopne
xor
enter
movsb
xor
movsb
fwait
jns
bound
je
repz
rcrb
inc
push
mov
pop
xor
imul
arpl
cmp
cmpsb
pop
xchg
jne
adc
jmp
mov
lret
int
das
jmp
inc
dec
cmc
imul
dec
leave
icebp
xor
jns
push
or
into
xlat
or
jle
lods
jnp
outsb
movsl
loopne
rorl
movsl
loop
lret
cmpsb
mov
test
lock
loop
or
push
mov
in
add
and
jb
leave
aad
pop
push
pusha
lret
push
aas
xchg
popa
push
test
jb
jno
iret
mov
dec
ret
add
or
sub
shr
pop
pop
lcall
or
ss
bound
mov
std
sti
int3
and
shlb
dec
adc
sub
mov
unpckhps
test
addr16
fldl
push
xor
scas
mov
xor
fs
lcall
adc
gs
and
cld
xchg
pushf
mov
shlb
jb
lcall
cmp
add
dec
xor
sti
ret
and
clc
scas
mov
mov
stos
mov
push
arpl
outsl
and
inc
push
jp
pop
jnp
scas
gs
pop
movl
dec
popf
mov
aaa
pop
stos
add
xor
or
cmp
sub
cmp
xor
lds
mov
cmp
icebp
and
pop
dec
test
int3
or
dec
add
push
into
dec
xor
jl
sahf
jo
cltd
aaa
jns
lock
loop
jns
pop
stos
push
adc
xchg
dec
sbb
jg
sub
xchg
mov
mov
divl
es
rcrb
int
cltd
dec
bound
popa
jae
sti
push
push
imul
stos
sbb
fwait
out
rcrl
mov
les
out
sbb
clc
lock
adc
jne
fiadds
sub
pop
and
inc
push
mov
xchg
test
sbb
loopne
xchg
aas
popf
add
sahf
stc
jo
xchg
ret
push
mov
mov
pusha
lock
xchg
test
add
ret
jg
jno
stos
push
mov
inc
add
jae
popa
loopne
call
dec
sub
adc
movl
loope
pop
jp
jne
cmp
into
and
sar
dec
and
xor
lret
dec
xor
inc
sub
insl
push
std
sbb
inc
mov
mov
addr16
dec
int3
mov
adc
dec
or
arpl
mov
sub
jmp
cltd
fistpl
mov
lcall
sub
dec
pop
push
mov
js
or
in
je
mov
xor
iret
daa
scas
ror
dec
cmpb
std
outsl
dec
adc
icebp
sub
in
xchg
sub
pop
icebp
xorl
out
outsl
outsb
stc
fbstp
xchg
in
clc
cmp
out
pop
jbe
jecxz
jmp
and
inc
popa
mov
and
or
or
aas
popa
jl
lea
push
cmpsb
add
push
dec
aam
sbb
cmpsb
movsl
jae
lret
pusha
es
mov
jmp
cmp
nop
cmp
jne
cltd
pop
rorb
and
mov
aam
and
and
arpl
fisttps
cmc
mov
loope
push
xor
and
jmp
mov
out
in
and
jbe
ss
in
in
inc
jecxz
pop
jns
mov
xchg
mov
push
sbbb
mov
jp
jmp
scas
mov
sbb
aad
adc
fneni(8087
jecxz
xor
lcall
and
pop
cmp
mov
shl
mov
sub
jecxz
out
push
call
imul
das
adc
dec
subl
inc
sub
fnstcw
xchg
pushf
inc
inc
push
test
add
sbb
popa
stc
sbb
addr16
sub
js
cmp
imul
testl
mov
movsb
icebp
xorl
jns
clc
sbb
orps
mov
sbb
in
xchg
ret
sub
mov
sub
push
daa
lds
pop
or
fsts
lods
push
and
inc
movsb
imul
insl
or
pop
inc
mov
nop
cmpb
jnp
xlat
je
cmp
jno
mov
mov
dec
in
adc
pop
xor
xchg
out
push
movsl
out
pop
adc
test
sarb
in
mov
cli
iret
xchg
cltd
cmp
out
and
jg
pop
push
inc
pop
xchg
jbe
pop
iret
xor
repnz
cmp
mov
push
jne
out
dec
jb
push
repnz
cmp
push
shlb
cmp
or
mov
pop
fisttpll
bound
out
in
mov
sub
aas
mov
cmp
sbb
cld
aas
and
push
es
pop
cmp
dec
int
and
fidivrs
cmpsb
outsl
sarl
inc
jno
cmp
pop
cwtl
fcomps
and
jge
ljmp
addr16
sbb
push
xlat
push
mov
and
rclb
mov
fwait
pop
test
adc
imul
ret
pop
mov
cmpxchg
jbe
aad
mov
mov
xchg
lret
rorl
orl
shl
outsb
mov
xchg
cmp
xchg
cltd
ja
jno
pop
cwtl
push
sub
push
xchg
or
lods
icebp
xlat
push
push
ficomps
or
int3
aam
ret
add
pop
jno
sub
imul
mov
lods
test
outsb
movsb
int
pushf
insl
ret
lahf
sub
sti
das
xchg
xor
in
or
cmp
aam
dec
push
shr
mov
cmp
inc
inc
xor
jb
add
cs
mov
mov
lret
xchg
call
inc
cmpsl
mov
sbb
insb
dec
imul
xchg
ds
xchg
mov
dec
push
sbb
aaa
mov
mov
orl
push
dec
cmp
mov
adc
jmp
insb
rorb
shll
cmc
and
cltd
lds
dec
lock
cmpsl
pop
inc
ljmp
xchg
mov
ret
loope
ret
fs
imul
and
push
xchg
jo
push
ja
mov
nop
push
pop
sub
jns
jl
shrb
xchg
aaa
imul
lret
pop
jo
in
jnp
adc
decb
pop
dec
shl
or
cmp
ss
out
sub
pusha
dec
sbb
pushf
mov
mov
mov
icebp
popa
cmp
add
cli
stos
out
lret
fcmovbe
pop
push
std
sarl
mov
xchg
xor
negl
jb
lock
jg
lea
movsl
or
jae
popa
sub
das
shr
jmp
sbb
aam
mov
sub
xlat
imul
push
cmp
ret
mov
xor
incl
mov
lock
pop
add
mov
push
or
xchg
mov
sahf
mov
xor
in
lds
insb
or
cli
mov
out
jecxz
and
mov
lret
insb
or
push
jnp
popl
in
cld
fcompl
mov
fwait
dec
or
popa
in
enter
fcoml
ret
jp
idivb
xor
mov
xorb
pop
cmp
sahf
cmp
inc
rcrl
pop
js
and
pop
cld
pop
or
jl
in
sarb
add
or
hlt
jp
repnz
mov
dec
out
loope
fidivs
andb
je
jb
xchg
orb
movsb
mov
cmp
sub
bound
movl
xchg
repnz
les
int3
pop
nop
sub
mov
sti
dec
push
add
out
dec
jae
pop
cmp
push
movsb
push
jmp
in
pop
cmpsl
popl
addl
ss
xor
pop
cs
sbb
sbb
xchg
pop
dec
inc
jne
xor
add
xchg
bound
push
andl
loop
outsl
dec
mov
dec
fdivrs
mov
push
xor
pop
cwtl
jnp
mov
jo
cmpsb
in
dec
hlt
sub
mov
repnz
sbb
inc
and
pop
clc
xor
add
adc
cli
mov
mov
sbb
mov
stos
sub
les
mov
or
repnz
inc
cld
and
pop
push
aaa
stc
sahf
imul
ja
sahf
xor
loope
repnz
shl
rorl
or
mov
mov
fiadds
subl
mov
jbe
cmp
xor
mov
lds
arpl
push
andl
mov
pop
mov
insb
cmp
ds
sub
ljmp
call
ja
xchg
movb
fcoms
movsl
jbe
out
lds
loopne
out
mov
iret
fdivs
pop
stc
sbb
das
pushf
in
js
mov
lods
mov
and
jge
mov
mov
adc
call
add
pop
rcrl
lahf
pop
imul
and
cld
inc
mov
xchg
test
icebp
mov
test
cltd
fdivrp
mov
dec
jno
sub
pop
and
push
xchg
mov
je
ss
sbb
adcl
rcll
out
xchg
cmp
mov
inc
inc
inc
inc
js
enter
or
ror
mov
pop
and
stos
pushf
lods
mov
inc
in
mov
sub
daa
and
jmp
lods
testl
fucom
mov
push
push
roll
movsl
jmp
mov
call
mov
adc
mov
addr16
cwtl
cmp
sbb
push
sbb
push
cs
movsl
ds
jge
fcmovbe
jo
or
in
mov
and
lahf
aas
add
pop
data16
mov
inc
pushl
movsl
flds
gs
stos
sti
mov
mov
ret
push
js
mov
lods
shll
mov
das
dec
dec
shll
lahf
aaa
xchg
outsb
in
xor
lahf
sub
sbb
jbe
cmp
cmp
pop
and
test
hlt
add
stos
ficoml
cmp
outsb
and
push
add
nop
sahf
into
lret
or
or
or
inc
cwtl
fldenv
lock
xchg
inc
jnp
fdivs
lahf
pushf
ja
lahf
dec
test
push
cwtl
insl
test
sahf
adc
data16
push
outsb
pop
es
add
loope
pop
mov
arpl
cmpsl
stos
xorl
repz
and
mov
jbe
mov
xorb
clc
add
mov
aad
pop
mov
notl
mov
test
inc
sbb
gs
push
subl
inc
ficompl
out
add
movsl
jg
insb
loop
inc
push
push
sub
hlt
sbbb
adc
mov
out
icebp
cmp
in
in
js
adc
gs
jo
rol
push
int
jbe
pop
in
and
and
push
sub
sti
cli
push
or
adc
aam
out
cmp
xor
jbe
mov
imul
mov
fs
sub
sbb
negb
cmp
iret
das
add
push
sbb
cmp
jle
loop
jmp
je
dec
jns
lahf
pop
sub
in
xlat
pop
jo
ret
push
and
sar
jb
ficomps
inc
outsl
xlat
mov
pop
sub
aas
mov
xorb
mov
movsl
rolb
popa
lret
xor
pop
fsubs
pop
jbe
push
sbb
ret
outsb
decb
add
andps
add
mov
jb
int3
test
bound
loope
mov
or
jo
ds
je
push
lods
shl
sub
leave
in
mov
stos
mov
pop
mov
fdivrs
inc
outsl
jbe
jns
mov
fnsave
add
fnstcw
test
mov
pushf
jmp
lds
xor
dec
mov
xor
push
rcl
iret
into
sub
push
stos
pop
idiv
pop
adc
mov
push
adcl
ror
dec
dec
adc
popa
dec
fsubl
scas
xchg
mov
xchg
out
cs
daa
cmp
rcr
add
sbb
test
sbb
jl
repz
insl
popa
mov
add
or
out
rcrl
sub
int
lds
lahf
and
cmc
xchg
xor
xor
scas
jo
dec
pop
mov
jne
cmova
testb
inc
push
add
jae
out
or
mov
cmp
and
stos
xlat
dec
jb
lods
push
and
mov
daa
les
cld
inc
sub
inc
add
pop
mov
jl
xor
loope
push
fidivs
adcl
xorb
mov
dec
imul
dec
mov
xlat
sub
push
inc
data16
mov
out
cmp
add
mov
std
jg
cmp
mov
dec
lcall
mov
lahf
movsl
test
sub
out
dec
push
push
mov
scas
mov
fs
ja
push
int
fwait
enter
dec
cs
std
sbb
cmp
dec
in
ret
aam
aas
dec
mov
mov
add
xchg
sahf
push
sub
sub
dec
add
ud1
loopne
xor
mov
xchg
pop
dec
and
jbe
jl
fnop
cwtl
mov
sbb
daa
ss
pushf
xor
das
push
mov
shrb
xchg
mov
in
push
lahf
push
repnz
dec
cltd
xchg
ror
and
pusha
pop
arpl
negl
jl
xor
mov
sub
adc
imul
xor
lret
mov
adc
cmp
push
insl
push
pop
lret
cmp
les
jmp
cmp
test
xchg
int
jne
scas
scas
dec
push
inc
test
sub
sub
jp
adc
push
mov
xchg
mov
dec
push
mov
and
add
ret
popf
in
bound
popf
iret
mov
mov
inc
xchg
in
ljmp
or
add
inc
ss
aad
push
mov
sbb
int
mov
or
std
jbe
clc
pop
iret
xor
shll
adc
sub
pop
and
lds
test
and
pop
cli
std
cmp
xchg
cld
dec
pop
cmp
fistpll
push
inc
dec
cmp
lahf
dec
rsm
idiv
rol
mov
cmp
mov
cmp
je
xchg
insb
lea
sarl
lcall
and
cld
js
inc
enter
lds
push
mov
push
rorb
mov
xlat
xchg
stos
mov
push
rclb
js
outsb
out
push
movsl
lahf
xchg
loope
adc
jb
stos
ficompl
fdivl
in
sahf
fs
leave
pop
cmp
sub
decl
or
or
sbbl
movb
daa
sub
dec
mov
repnz
mov
fucomip
jbe
in
loope
add
mov
jecxz
jae
lret
iret
xchg
mov
sub
retw
imul
pusha
pop
loopne
arpl
nop
lea
inc
jmp
and
cmp
lcall
xchg
inc
rorb
test
and
push
inc
pop
rorb
mov
outsb
add
das
adc
cmpsb
or
lcall
lods
jg
leave
es
xchg
iret
cmp
data16
fs
vpminsw
sub
loope
in
pop
std
pop
lods
jmp
or
adc
lea
jne
fsubr
dec
aad
movsb
and
repnz
pop
sbb
dec
pop
les
sti
push
mov
cs
out
cmp
sbb
testl
dec
aad
ret
push
and
bound
jg
mov
push
outsb
mov
aad
dec
icebp
out
ret
dec
jle
in
pushf
out
dec
jl
aam
jbe
and
rol
mov
push
ja
add
rcll
sub
mov
mov
andl
subb
fwait
push
mov
add
pop
inc
cs
imul
leave
out
jmp
pop
mov
jmp
mov
lods
in
sub
mov
das
loop
mov
cmc
sarb
push
xor
std
mov
sub
mov
inc
mov
jnp
adc
ja
push
fimull
xchg
leave
test
lds
mov
cmc
adc
rorb
xchg
lds
inc
xor
mov
cmp
jb
rcrb
ss
add
adc
xlat
fwait
xor
sub
inc
gs
push
stos
lea
or
mov
jne
fcomps
xor
add
inc
aad
mov
fldl
inc
add
push
xorl
insb
in
add
or
and
pusha
dec
bound
test
and
inc
rolb
sub
or
pop
cs
cltd
das
sarb
cmpsb
fwait
mov
jge
inc
xor
sub
push
pop
mov
leave
jne
in
sub
mov
or
and
movsl
int
and
push
push
adc
ljmp
mov
cmp
pop
loop
dec
mov
addr16
pop
lods
cmc
and
inc
xor
fwait
jb
hlt
ret
dec
imul
incb
into
xchg
enter
pop
pop
inc
adc
mov
call
imull
jmp
fadds
dec
mov
adc
pop
cld
push
and
cmp
shll
xchg
jmp
nop
fldl
movsb
jg
popa
cmp
cmp
push
jno
dec
into
mov
fwait
xchg
cwtl
inc
add
xor
mov
iret
fdivrs
fmul
mov
jns
mov
rorl
xchg
adc
add
add
jno
frstor
add
je
adc
adc
stc
lds
les
jl
out
push
and
push
add
inc
imul
cmovb
aad
dec
push
add
and
inc
ss
in
scas
cmpsl
sbb
adc
hlt
inc
xchg
idivb
sub
test
jle
jge
adc
addr16
loope
insb
loop
lds
xor
cld
adc
nop
sahf
mov
inc
and
jo
or
test
xchg
data16
movsl
or
hlt
aaa
sti
mov
rol
out
push
or
cli
add
insl
shl
enter
xor
cmpsl
xchg
or
pop
lods
inc
cmp
push
movsl
and
mov
xchg
pop
mov
mov
push
stos
out
push
inc
rcr
mov
jg
mov
pop
mov
rcll
jmp
repz
jge
out
lock
cltd
frstor
fistps
inc
int
mov
rcrl
aaa
popf
mov
pusha
mov
ret
push
adc
xor
mov
stos
add
xor
mov
lcall
lret
cmp
into
xchg
ss
push
js
dec
shl
loopne
and
mov
cmp
inc
adc
inc
xchg
je
or
push
cmp
aaa
into
adc
cwtl
pop
rorl
mov
subb
loope
stos
cmp
ja
cmpsb
xchg
bt
test
fildll
xchg
test
inc
sbb
sbb
jo
js
dec
xchg
cmpl
add
es
xchg
mov
pop
loopne
dec
pusha
push
push
dec
shr
ret
xor
fs
out
sub
jnp
push
repnz
xchg
or
daa
adc
push
adcb
add
dec
jmp
xchg
pop
sbb
ljmp
mov
mov
insb
jne
cmp
loop
jp
shl
scas
stc
jecxz
adc
mov
out
das
in
or
jae
push
inc
jmp
sbb
cmp
xor
loopne
shll
cmpsb
adc
push
push
cmp
sbb
ss
adc
adc
mov
sbb
and
pop
mov
mov
fdivp
adc
hlt
mov
xor
xchg
pop
fstl
cmpsb
cltd
jb
sub
push
fldenv
mov
loope
mov
in
jmp
pop
enter
or
mov
pop
jbe
mov
jmp
sbb
subl
mov
out
movsl
js
push
std
les
outsl
push
xor
sbbb
cmp
enter
add
xchg
jle
aas
xchg
clc
inc
adc
jecxz
sbb
outsl
adc
mov
lahf
mov
rep
rcrb
pop
outsb
xlat
xlat
cmpl
arpl
pop
imul
jo
and
movsl
das
push
xchg
and
add
mov
cs
and
push
bound
add
add
lods
and
adc
sub
lret
jb
testb
xor
lea
cmp
loope
setle
lret
test
jecxz
xor
mov
je
stc
cmp
out
dec
push
fsubrl
xchg
and
in
lods
pop
cmp
cmpsl
stc
pop
push
bound
mov
lret
jne
mov
ror
fs
push
inc
pop
inc
mov
pushf
jp
das
cmp
ret
push
cmp
add
inc
and
inc
mov
dec
fwait
cmp
sbb
imul
dec
dec
stc
cwtl
imul
pop
add
insb
enter
push
inc
sbb
push
jge
addr16
aam
inc
repz
push
jno
out
jge
dec
fcomps
mov
insb
jg
shlb
test
cmp
dec
dec
ss
push
arpl
or
sbb
dec
mov
scas
fcomi
cmp
inc
jb
jl
mov
jecxz
fs
sub
dec
cmp
pop
lea
sbb
xor
pop
add
enter
lods
adc
inc
xor
mov
push
ret
jl
ret
inc
pop
mov
mov
addr16
mov
mov
pop
mov
dec
pop
push
je
fdivs
mov
dec
imul
stos
push
cmpsb
mov
mov
mov
xchg
sbb
jne
push
int3
ss
mov
dec
mov
sub
pop
les
inc
cmpsl
add
cmp
xchg
out
daa
mov
shll
dec
in
mov
inc
addb
pop
jle
and
xor
jmp
imul
cmpsl
add
cmp
pusha
dec
inc
lds
cli
repz
jg
lahf
stc
fisttpll
fnstenv
xor
sti
adc
or
pop
shlb
mov
jle
pop
xchg
xor
cld
mov
sub
sbb
mov
jle
imul
lods
gs
jle
and
fistpl
pusha
push
or
adc
mov
ficoml
fwait
and
ret
sbb
clc
das
ficomps
cmp
pushf
data16
jo
stos
adc
clc
scas
aas
popa
les
xchg
push
popa
into
mov
popa
pop
jle
imul
mov
outsb
rclb
push
shrl
fwait
and
lret
xchg
hlt
aad
sub
mov
pop
jb
mov
in
loope
cmc
jo
sub
test
aas
stc
cmpsl
test
pop
aaa
cmp
xchg
or
xor
ficomps
in
ds
adc
into
ret
cmc
xor
scas
lock
xorl
leave
outsb
insb
sahf
adc
dec
push
xor
lods
push
sub
cmp
pop
outsb
push
fs
or
fldt
lock
jecxz
shlb
mov
dec
fucomip
push
arpl
outsl
inc
stos
mulb
pop
mov
mov
imulb
gs
sahf
adc
xchg
ss
xchg
cmpsb
mov
xorl
inc
gs
fwait
dec
mov
jle
ficompl
cmpsl
dec
push
push
jno
testb
orl
and
xor
sti
push
pop
xchg
bound
add
jne
stos
pop
jge
jne
inc
mov
push
shl
mov
jne
cmp
imul
adc
ljmp
mov
test
orl
dec
ud0
popa
aaa
sbb
shrb
repnz
sbb
push
int
inc
loope
sbb
shr
jge
out
sub
arpl
or
ds
mov
das
push
stos
lock
jle
jne
pop
in
adc
sti
inc
or
adc
mov
sbb
lock
jne
lret
movsb
daa
fnstenv
cmp
dec
arpl
loope
mov
in
cmp
mov
pop
push
out
jo
fiadds
repnz
jne
arpl
fldt
mov
test
jbe
cmp
clc
gs
dec
fisubs
cmp
push
cmpsb
lods
repz
iret
jle
dec
cli
push
sbb
cmc
js
or
mov
xchg
inc
scas
sbb
out
dec
sbbb
aaa
xor
ret
out
test
and
loope
xchg
sbb
rcr
popa
xchg
push
repnz
pushf
ror
cli
mov
bnd
xor
movsl
outsb
adc
cltd
or
es
and
jp
push
and
lea
xor
fdivs
mov
sub
aaa
cmp
and
adc
ja
pushf
sahf
xchg
aad
mov
xchg
cmpsl
popa
xchg
arpl
lahf
mov
or
sub
lret
push
cmp
mov
jp
mov
pop
aad
or
in
xor
pop
xor
mov
orl
nop
cmp
aam
jle
jnp
pop
jmp
and
xor
pop
cmpsl
jl
dec
jmp
pop
xchg
dec
fisubrs
cmp
aaa
mov
xchg
dec
push
ljmp
fistps
js
repz
inc
shl
mov
xchg
test
rcrl
jp
cmp
enter
xlat
push
xor
and
insl
imul
cmp
mulb
xor
mov
sbb
popa
cmp
push
fisttps
and
insl
dec
stc
mov
stos
mov
int3
xor
mov
mov
das
push
int
jae
jno
push
and
sbb
popl
add
inc
sbb
dec
xchg
xlat
les
lods
sbb
sbb
inc
loopne
adc
jl
jl
outsb
cmp
push
xor
inc
or
pushf
in
test
xor
mov
shlb
in
xor
shll
add
shlb
xlat
mov
sbb
adc
dec
xor
xor
jle
or
insb
xchg
or
dec
mov
repz
insl
sbb
dec
xchg
cmp
sbb
andb
sub
mov
cmp
cld
ljmp
push
jle
jecxz
imul
mov
xor
iret
sbb
les
scas
stc
inc
ljmp
and
call
push
arpl
rorl
pop
pop
and
sti
imul
inc
push
cmp
fidivl
sahf
movsb
stos
inc
pop
sub
aaa
xor
test
jo
xor
fimull
mov
je
mov
sbb
inc
xchg
ds
inc
push
add
jp
and
cld
test
xchg
into
mov
mov
orl
stc
pop
adc
adc
dec
lahf
outsb
popa
mov
push
add
jp
iret
inc
or
gs
rolb
mov
jmp
push
xchg
mov
and
js
fstps
das
mov
leave
fstp
imul
out
pop
lods
decb
adc
addb
sbb
mov
lods
cmp
mov
out
push
in
sub
stos
adc
enter
push
gs
lea
cmp
test
fcoml
movsl
fdivrs
in
rcr
jg
fnstcw
xor
pop
xchg
mov
stc
rclb
sub
xchg
mov
data16
fistpll
inc
nop
imul
aad
stc
and
lods
mov
adc
mov
xor
inc
test
add
jo
les
hlt
inc
dec
fisubl
in
adc
out
cmpsl
rclb
lods
and
in
dec
ret
or
xlat
mov
repnz
xor
dec
dec
stos
incb
xchg
mov
mov
jo
daa
je
insl
mov
imul
xchg
sbb
xor
shlb
add
pushf
pop
push
sbb
adc
out
test
mov
pop
push
mov
jae
cs
fmuls
lahf
mov
add
das
jp
cmpsl
dec
scas
fadd
cli
jmp
mov
loop
nopl
std
inc
jo
sbb
adc
sub
aad
fisubrs
mov
mov
adc
and
sbb
xchg
cli
dec
in
push
add
bound
insl
sahf
sbb
data16
pop
mov
fnstenv
jecxz
mov
loope
ljmp
lea
xor
sbbl
pop
adc
cmpsl
pop
shrb
ret
fwait
push
dec
inc
pop
xchg
ret
leave
cmp
jecxz
cli
in
cli
jge
call
or
push
dec
popf
mov
or
cmp
fcoms
cmp
enter
and
in
leave
mov
aas
pop
test
mov
push
pushf
mov
in
cwtl
mov
xlat
call
xchg
je
or
lret
inc
adc
movsb
clc
mov
inc
or
pop
cmp
mov
imul
nop
push
jno
aam
gs
fs
out
fwait
not
inc
adc
inc
lahf
xchg
insb
bound
in
cmp
scas
or
push
call
adc
insb
push
leave
cmp
test
movsl
std
mov
dec
int3
lock
sbb
aad
pop
jae
dec
aad
mov
push
lahf
mov
jnp
pop
fnstcw
mov
inc
xchg
pop
shrl
pop
out
inc
jecxz
insl
loopne
lret
cmp
xorps
add
jp
push
fbld
aas
or
xchg
pop
es
jo
push
stos
loopne
icebp
or
iret
cmp
add
cwtl
and
inc
push
mov
mov
push
push
dec
in
xchg
mov
add
push
jg
jle
fsubl
add
mov
out
xor
jnp
bound
inc
xchg
sub
ficompl
xchg
and
jns
adc
pop
outsl
out
pop
dec
sbb
push
out
jns
bnd
cltd
lods
mov
aam
push
lods
inc
jl
jg
sti
stc
addb
stos
sub
jns
mov
lret
sub
cmp
pop
cmp
xlat
pusha
mov
mov
in
pop
xchg
or
adc
jmp
imul
push
mov
xor
add
mov
jne
mov
mov
xchg
xchg
or
jne
into
cmpxchg8b
leave
aad
pop
sahf
pop
out
in
jbe
roll
inc
ljmp
fildl
lret
mov
adc
lcall
mov
sahf
cmp
mov
sbb
pusha
jo
lds
in
jecxz
popa
cmp
mov
add
xlat
fwait
je
and
mov
push
mov
mov
iret
pusha
call
cmp
and
cld
cmpsb
imul
into
sbb
aam
imul
mov
roll
aad
dec
xchg
add
dec
insb
add
subb
push
mov
shll
repz
or
or
out
pop
mov
mulb
push
mov
ljmp
outsb
cmp
ret
mulb
push
inc
jae
shrb
pop
cmp
sti
and
jno
fsubrs
push
addb
aas
pop
pop
daa
cmc
or
cld
sub
cmc
and
call
jae
ds
cld
dec
fs
aam
test
adc
in
popa
test
adc
xchg
loope
addl
and
sbb
or
inc
xchg
cmpsl
or
mov
push
jae
inc
shrl
pop
cmp
stos
js
add
inc
sbb
sub
orl
mov
add
stc
pop
ja
popa
pop
mov
xchg
push
mov
fnstsw
outsl
scas
fldl
sbb
sarl
popl
pop
dec
cmp
xor
insl
add
inc
xchg
jno
push
push
shl
dec
jae
xor
inc
dec
mov
cmp
sar
insb
stc
sub
push
movsl
orb
gs
in
shlb
cmp
shll
pop
xchg
pop
pop
cmp
scas
xor
mov
jnp
xor
addl
jno
cmp
pop
int
insl
xchg
add
cmpl
adc
cmpsb
xor
xor
je
fwait
cmp
mov
sarb
icebp
lcall
call
jno
cmp
jbe
mov
xchg
shll
out
les
dec
pushf
jns
xor
shrl
test
adc
add
xchg
add
aad
scas
or
and
push
inc
js
insb
pop
fldcw
mov
iret
addb
add
das
pop
stos
push
dec
rcll
and
dec
scas
mov
xrelease
lret
xor
dec
call
inc
sarl
imul
cld
adc
les
aam
adcl
and
add
fcomps
das
pop
and
push
int3
inc
scas
ret
jp
adc
stos
or
sbb
idivb
out
daa
pop
mov
xchg
sub
push
mov
addr16
mov
adc
sub
or
xlat
xor
cmc
sbb
and
out
in
dec
cmpl
mov
mov
sub
pushf
add
pop
in
std
add
jmp
push
pusha
lret
data16
insl
add
daa
aad
int3
mov
sub
outsb
pop
cmp
dec
pop
push
or
stos
in
mov
push
sahf
lock
mov
scas
filds
push
fnstsw
imul
push
sbb
mov
and
mov
in
dec
mov
fsubrp
mov
lock
cmp
test
orb
pop
movb
push
loop
mov
dec
xchg
mull
inc
mov
sahf
jo
pushf
push
jmp
mov
outsl
sbb
push
or
dec
das
add
clc
mov
call
emms
scas
rorl
es
dec
in
push
mov
xchg
inc
addl
pop
push
fists
xchg
xor
in
subl
cmp
mov
loop
notb
stos
popa
cwtl
push
and
lods
sbb
pop
mov
pop
dec
movl
xchg
cltd
loop
inc
and
hlt
mov
call
aad
or
repnz
fs
test
inc
pop
and
mov
repz
cmc
dec
std
xor
rorl
pop
xchg
pop
repnz
sbb
fidivs
fistpll
mov
pop
sbb
inc
out
mov
inc
fs
lahf
dec
fstl
gs
outsb
pop
sbb
pop
push
push
pop
mov
xor
icebp
pop
add
pop
ret
dec
fwait
xor
and
jle
add
or
jg
in
insb
xchg
xor
inc
ja
mov
xchg
sub
jbe
fisubrl
pusha
fisubrl
lea
sbb
rcll
sub
adc
pop
leave
push
sbb
je,pn
pop
mov
in
inc
jnp
jmp
fwait
adc
xchg
jns
addr16
sub
cmp
lahf
test
mov
inc
jae
xchg
out
fwait
dec
pop
jecxz
push
std
mov
cmp
testl
cmpsl
pop
pop
test
and
stc
mov
je
adc
xor
add
cmp
add
lahf
xlat
mov
out
std
cmp
stos
inc
outsb
mov
sub
lea
ret
mov
inc
jno
push
arpl
mov
lock
pop
and
popf
add
cmp
lcall
out
daa
pop
pop
xor
roll
aam
cld
mov
cmpsb
addr16
ss
outsb
int
xchg
add
sbb
cmp
bswap
xor
pop
push
das
and
mov
jecxz
sar
mov
ficoms
or
jecxz
idiv
imul
lahf
iret
sub
dec
mov
repz
negl
mov
push
mov
mov
cmp
jp
mov
fidivs
push
daa
mov
xor
inc
cmp
jb
xor
ret
mov
mov
out
in
xlat
dec
loopne
popa
fsub
adc
mov
jnp
jne
mulb
cmpsb
lock
mov
dec
push
shlb
xor
add
xchg
fists
pop
sbb
inc
inc
leave
pusha
setge
jg
xchg
aas
mov
mov
sub
es
ljmp
sbb
lods
and
pop
mov
cmp
sahf
sbb
mov
jnp
icebp
fwait
cmp
leave
cmc
pop
repnz
repnz
lds
sbb
mov
push
arpl
jnp
mov
xchg
jns
pop
pop
xchg
mov
jecxz
sti
je
repnz
mov
into
dec
adc
xchg
pop
push
add
mov
mov
out
and
test
popf
cmc
movsb
dec
fsubr
pushf
dec
popa
test
xor
adcb
insb
and
push
je
iret
lock
repnz
sbb
push
addr16
add
adc
loope
sti
adcb
lret
insb
out
and
in
xor
aad
push
mov
mov
and
mov
add
adc
daa
inc
mov
aad
incb
stos
inc
cli
fsubrl
dec
idivb
push
test
cmp
insb
fwait
lahf
mov
insl
xor
inc
inc
cltd
aad
dec
cmp
xor
sub
arpl
sarb
rcll
push
dec
xchg
pop
or
xchg
ret
adc
clc
ljmp
out
mov
popa
sti
movsl
sar
mov
push
cmp
test
sbb
ret
adc
mov
mov
leave
add
scas
dec
fwait
xchg
xor
out
xchg
sbb
filds
fcmovnbe
mov
mov
je
popf
mov
repz
andb
pop
in
mov
xlat
cli
push
ret
inc
out
sar
xchg
jge
add
mov
dec
inc
les
stc
mov
test
jae
and
mov
lret
roll
cmp
fs
loopne
decb
mov
rorl
fwait
lahf
ljmp
sbb
test
cli
jae
arpl
xchg
lea
and
or
mov
lcall
add
push
jnp
hlt
int
movsb
shll
sub
adcb
movsl
cmc
pop
pop
andl
push
mov
addb
push
xchg
jbe
push
sub
in
xchg
mov
pusha
mov
xlat
inc
repnz
add
mov
inc
mov
or
test
sub
push
test
mov
mov
push
enter
mov
cmp
push
pop
fsubs
aaa
cmp
xchg
inc
mov
pop
cltd
inc
adc
or
gs
add
je
xor
lret
jnp
je
imul
les
xor
xchg
push
enter
push
add
inc
jmp
bound
sbb
pop
sbb
loopne
cmp
shll
add
and
jns
dec
nop
dec
lret
lods
mov
dec
jns
mov
icebp
jg
pop
bound
pushf
mov
call
push
dec
inc
test
gs
fsubrs
push
xchg
mov
fnsetpm(287
movb
dec
sbb
push
xchg
push
mov
pop
push
sbb
push
push
xchg
notb
bound
stc
pop
cli
mov
jns
inc
xchg
sbb
jne
xchg
int3
repz
xor
ret
mov
add
pop
out
filds
gs
lret
mov
pop
out
push
mov
jg
sar
imul
cwtl
xor
mov
pop
cwtl
lret
xor
xchg
jbe
inc
insl
iret
push
sbb
lock
and
pop
add
push
add
mov
ds
push
pop
xor
fcomip
and
imul
jne
pop
sbb
sbb
pop
test
mov
or
and
insl
aad
fisubl
mov
lds
into
jmp
lods
cli
or
sbb
dec
dec
sbb
fucomi
iret
adc
push
adc
or
and
pop
pop
cmp
test
sub
mov
mov
adc
push
mov
or
dec
mov
je
incb
push
lret
fwait
aas
mov
xchg
mov
pop
imul
push
enter
pop
push
les
shl
outsl
mov
mov
test
in
and
loop
jecxz
inc
aas
pop
push
movsl
test
bound
cmp
loop
sarb
jae
hlt
clc
in
sbb
add
adc
add
daa
ss
testl
das
das
rorb
negb
cmpsl
bound
pop
stc
xchg
je
in
aaa
and
or
aad
mov
dec
cli
mov
or
push
ret
rorl
call
popa
dec
lea
lret
xor
neg
ficoml
mov
lcall
out
repz
fucomp
test
imul
rep
lea
test
or
outsl
xchg
pop
dec
stos
pop
stos
aam
lret
clc
push
out
dec
dec
or
adc
push
test
and
roll
dec
frstor
sbb
mov
or
in
ss
subl
cmpsl
cmpl
imul
out
addr16
and
dec
sbb
mov
pop
push
mov
je
shrb
js
cmpsl
cmc
push
les
les
pop
pushf
hlt
and
cmp
adc
mov
nop
movsl
addl
jbe
mov
lods
add
dec
enter
leave
in
orb
add
enter
ljmp
jmp
cs
mov
lea
adc
ss
sbb
mov
xchg
sub
mov
xor
pop
ret
lret
loop
in
xlat
adc
std
push
cmpsl
pushf
push
jae
mov
pop
mov
jg
adc
sarb
mov
sub
inc
lods
jge
jecxz
cwtl
call
cli
scas
mov
push
pop
setg
inc
push
inc
cmpsb
push
sub
sbb
mov
data16
ss
dec
aam
push
push
dec
add
and
and
jae
lds
xor
inc
mov
add
insb
mov
lds
mov
lock
push
push
jl
mov
lahf
mov
shrl
movsb
popa
sti
inc
xlat
lcall
lret
mov
insl
mov
mov
sub
fiaddl
mov
jbe
in
inc
sub
xchg
std
jmp
pop
sub
sbb
mov
jl
js
xchg
mov
fcmove
dec
movsl
pusha
and
mov
psubd
lret
aas
jp
dec
dec
mov
cmc
cmc
push
xchg
rolb
pop
fldl
push
mull
sbb
mov
pop
pop
adc
sub
test
clc
xchg
test
or
xorl
xchg
mov
xchg
repz
adc
sbb
in
dec
inc
movsb
scas
call
push
insl
jge
push
cs
mov
mov
pop
test
icebp
push
das
jmp
lcall
jp
or
ljmp
jno
out
icebp
aaa
loopne
into
mov
jecxz
xchg
or
pop
lock
adc
int3
xor
dec
push
iret
xor
repz
mov
out
cmp
xorl
test
jecxz
pop
outsb
dec
cmp
jbe
mov
push
movsl
test
loopne
insb
add
inc
jbe
cli
jmp
xor
cld
int
insl
sbb
repz
in
movsl
std
punpcklbw
addb
pop
icebp
aaa
rclb
jne
and
xor
sub
mov
lds
cld
cmp
xor
mov
add
popf
leave
int3
out
jl
add
addr16
mov
xor
jb
fdivrs
imul
mov
sbb
into
jns
dec
sbb
mov
sub
xchg
cmp
xchg
mov
fwait
mov
loopne
hlt
add
shll
rcrb
cmp
fdivrs
int
push
push
push
push
imulb
shlb
cmp
in
scas
pusha
cld
jmp
mov
test
aad
mov
notb
enter
jge
rcll
roll
adc
sti
fildll
mov
mov
data16
pminub
mov
lahf
inc
xor
gs
pop
addl
adc
ss
out
lret
int3
sti
inc
jnp
cmp
idiv
add
movsl
aad
push
andl
ss
jno
test
cmpsl
xor
shlb
pop
xchg
fwait
stos
and
jmp
pop
ficompl
mov
pushf
adc
mov
mov
xor
loop
cmp
cmp
test
imul
mov
push
jns
loop
mov
adc
icebp
push
lods
add
mov
adcl
negb
into
xor
aaa
dec
xor
push
push
fs
jg
inc
movsb
test
sub
insl
xchg
fisubs
inc
mov
jge
lock
movsb
in
incb
scas
mov
mov
inc
sbb
and
das
dec
scas
rclb
pop
outsl
fst
dec
or
lret
loope
mov
rclb
call
or
rorb
mov
push
arpl
xchg
mov
loope
cld
mov
sbb
inc
gs
test
xchg
sub
mov
mov
lcall
cmpsb
call
and
cltd
sbb
fiaddl
movsl
cmp
out
out
dec
test
insl
mov
jne
call
xchg
sbb
jge
cmc
inc
adc
lret
lahf
dec
test
adc
imul
test
lret
stos
push
call
jnp
pusha
cmc
cmp
stos
fwait
shlb
or
pop
clc
push
int
push
outsl
lds
dec
dec
mov
mov
xor
or
pop
les
inc
fwait
mov
sahf
nop
mov
sbb
adc
in
testb
adcb
lret
fs
xchg
sbb
mov
push
mov
lock
sub
push
les
or
das
ss
std
adc
jg
je
pop
int3
rcrb
loop
jp
fidivrl
lds
mov
sbb
inc
int
add
std
lahf
jle
push
dec
gs
je
xor
into
jg
int3
adc
mov
adc
add
cmp
mov
jns
into
mov
add
dec
cmc
cmp
fwait
cld
sub
jp
shlb
and
je
fs
notl
xor
cmc
cmpsb
pop
mov
adc
and
pushf
sub
xchg
shrb
mov
aam
in
mov
scas
cmp
and
inc
mov
stos
sub
sbb
xor
push
test
sti
jp
mov
out
fldenv
psubusw
sarb
data16
or
dec
push
call
gs
or
cmp
cs
stos
mov
iret
mov
orb
sub
push
inc
jb
jp
xchg
pop
or
push
mov
cs
les
inc
sti
adc
dec
lea
dec
push
inc
outsl
sub
ljmp
rorl
mov
pop
insb
xchg
dec
dec
jns
stos
add
shrl
mov
cmp
sbb
fsubrs
mov
push
xlat
xor
mov
dec
pop
aad
in
loope
mov
sbb
sti
mov
sub
enter
fcoms
sbb
fisubs
xlat
push
aas
mov
mov
nop
xor
and
jecxz
mov
cmp
xor
cltd
add
repz
fcmovnb
or
data16
aas
xchg
pop
mov
clc
mov
mov
divl
jmp
inc
lret
add
loope
jne
jne
sub
or
cmp
mov
imul
mov
xchg
cmp
outsb
lcall
jnp
cmp
xor
sbb
pop
scas
jle
cmpsb
pop
fisubs
into
push
shlb
mov
mov
pop
mov
jge
xor
adc
add
xor
movsl
push
cmp
push
jnp
push
pop
fildll
xor
in
je
ljmp
ret
lock
mov
jb
mov
cwtl
in
or
mov
dec
jne
inc
inc
xor
fadd
lret
push
mov
out
sar
push
sti
clc
aad
jns
xor
inc
jl
pslld
cld
or
jp
repz
inc
pop
lods
or
sbb
inc
dec
adc
aas
test
sbb
imul
xor
lahf
outsl
dec
fisubrl
mov
das
xor
std
je
jp
mov
pusha
arpl
xchg
pop
flds
outsl
pop
shl
cmp
inc
and
cld
or
jns
insl
int3
outsb
out
xchg
and
loop
outsb
int
mov
push
or
sbb
mov
movsb
movsb
pop
cltd
fldenv
das
dec
or
push
and
xchg
enter
in
test
push
lahf
lea
or
adc
jae
add
in
jmp
sub
fmull
or
sbbb
aaa
sbbb
fdivl
add
jbe
movsb
out
leave
aam
cmp
call
xchg
push
and
fidivl
adc
mov
mov
in
out
xchg
pushf
mov
lea
mov
fldenv
xor
arpl
outsl
mov
repnz
cmp
cmp
orb
lods
and
pop
pop
fistl
jne
xchg
loopne
jp
mov
jb
lret
neg
and
pmullw
stc
pop
push
push
push
cmc
insl
inc
ljmp
jle
sub
outsl
test
cld
mov
and
pop
push
pop
in
inc
jle
ficoml
inc
xchg
ss
mul
dec
clc
mov
mov
sub
test
lea
subl
cld
hlt
or
imul
shll
or
lret
sbbl
cs
lea
dec
aaa
cmpsb
je
adc
mov
aad
push
mov
sub
out
jge
icebp
test
test
subb
test
aam
test
sub
add
mov
repz
push
sub
lret
std
mov
sar
pop
fwait
insb
jle
and
test
fnstsw
sarb
cmp
xor
sarl
pop
sbb
shrl
jmp
xchg
and
stos
inc
mov
or
dec
ss
adc
nop
pop
xchg
jge
orl
push
pop
dec
sub
rcrb
jl
call
dec
aas
xchg
sbb
jmp
pop
add
jns
and
mov
jp
shrb
xor
mov
mov
adc
hlt
sub
jae
aam
addr16
mov
and
test
xor
scas
sub
sahf
xchg
mov
jp
mull
int
cmp
jmp
push
jge
inc
mov
push
shll
mov
cltd
andl
inc
enter
push
mov
mov
sbb
dec
hlt
xlat
and
decb
dec
push
push
cmpsl
jno
in
jg
add
sarb
pop
add
popa
lods
decb
inc
insb
add
enter
out
popa
inc
cmp
fnstcw
cltd
adc
sbb
cmp
ja
loope
cmp
lods
in
sbb
out
fcompl
cmp
fisubrl
scas
in
adc
and
js
leave
stos
push
add
push
mov
out
mov
aam
xlat
lds
push
or
insl
mov
cmp
lock
push
inc
xlat
ljmp
hlt
jo
inc
pusha
inc
mov
xor
ja
mov
mov
cmp
lahf
iret
add
int3
push
es
push
insw
xor
sub
fadds
jns
xlat
xchg
adc
xor
mov
cmp
cmp
adc
bound
xchg
mov
iret
into
sbb
mov
inc
jecxz
and
outsl
sahf
jns
mov
push
stc
cmp
push
addb
and
xchg
sbb
movsl
sahf
out
jl
lods
cmc
push
insl
es
adc
loope
ljmp
ficompl
add
lds
sbb
pushf
mov
mov
arpl
push
mov
lcall
out
orl
clc
lock
cmp
and
outsl
cmp
dec
orb
jle
mov
inc
push
xchg
jle
pusha
cli
or
mov
push
cmp
loop
pop
iret
sbb
xor
mov
adc
pop
dec
dec
fdivrs
inc
add
jno
xlat
jl
pop
mov
cwtl
mov
shl
mov
adc
sbbb
cmp
lea
jno
repz
loopne
lock
insb
fnsave
sub
jmp
mov
jns
pop
cmp
sbb
pop
xchg
outsb
jb
sbb
xchg
aas
popf
ret
adc
cs
xchg
enter
jle,pt
xor
movl
pop
mov
enter
cmp
jmp
mov
mov
in
roll
adc
mov
fcmovnu
or
aad
iret
jle
inc
test
xchg
pop
push
push
pop
dec
mov
std
xor
iret
fwait
ror
idivl
jae
xlat
push
stos
adc
cmc
jp
lret
mov
mov
xorl
je
mov
cmc
popf
leave
jo
xorl
cmpsl
bound
out
push
in
popf
clc
pop
xchg
mov
or
movsl
jne
out
pop
cmpsb
in
es
aad
jne
ds
xchg
sbb
fdivrl
xchg
repnz
lods
psubsw
mov
xchg
cmp
sbb
mov
sub
test
cltd
rolb
push
jmp
aaa
pop
fldt
pop
mov
int
sbbb
lods
daa
loopne
pop
outsb
jecxz
add
and
cmp
mov
sbb
add
xchg
add
orl
scas
or
jecxz
mov
mov
xchg
lret
das
adc
or
fadd
dec
leave
cmp
mov
clc
add
leave
inc
add
psubsw
inc
mov
adc
xchg
gs
js
pop
stos
iret
xor
in
or
insl
hlt
je
ja
shlb
cmc
mov
push
sub
in
add
fiadds
ror
fs
inc
sbb
inc
dec
mov
push
lods
xchg
jge
mov
adc
mov
inc
daa
cmp
pusha
push
sub
cmp
mov
loopne
xchg
loopne
lret
mov
jmp
pop
dec
cmp
mov
mov
movl
in
shld
pop
adc
jge
dec
jno
aam
jo
mov
sub
sub
pusha
mov
mov
or
rcll
test
jmp
pop
and
mov
adc
xchg
dec
int3
jg
inc
pop
pushf
jns
mov
fidivrl
mov
xchg
xor
fsubrp
sub
icebp
lds
loope
out
mov
cmp
and
mov
lods
addr16
fisttpll
mov
in
dec
add
hlt
push
lods
inc
mov
add
negl
rcrb
mov
je
push
jl
insl
inc
jno
fimull
pushf
push
dec
pop
pslld
jo
lds
pop
push
sub
enter
out
mov
les
adcl
fistpl
jbe
insl
cmc
mov
testb
fildl
mov
call
mov
mov
out
daa
dec
mov
sub
xchg
pushf
jae
adc
cmp
jnp
jbe
xor
out
xor
dec
xchg
mov
jle
stos
scas
loopne
xor
pop
mov
cmp
es
ss
push
imul
mov
shrl
or
xchg
ss
aas
out
cmpsl
adc
cld
and
rorl
outsl
add
int3
stc
ja
adc
cmc
cmp
mov
mov
ljmp
push
iret
push
xor
mov
push
dec
and
icebp
outsl
dec
push
mov
adc
negb
loope
cmpsb
add
rcrl
add
pop
imul
loopne
lret
push
sti
std
shrl
lds
jecxz
xor
sar
lock
es
mov
icebp
jl
aam
icebp
adc
add
popa
jae
leave
jl
test
aad
or
cwtl
add
daa
push
mov
lret
mov
cmp
ret
mov
sub
in
out
lret
adc
or
mov
ret
cmp
pop
push
in
stos
fmul
inc
testl
cmp
outsb
or
loop
and
mov
pop
jle
push
push
mov
cmpsl
or
ret
fcoms
icebp
incb
adc
fstps
mov
out
mov
mov
test
or
mov
xor
xor
int3
adc
cmp
into
fwait
inc
mov
test
inc
jb
xchg
mov
xlat
in
xchg
or
pop
es
xor
cmp
push
stos
dec
test
fcomps
cld
and
push
pop
xchg
fwait
jno
xchg
mov
jno
mov
and
insl
cmpsb
pop
icebp
mov
or
pop
or
sub
ss
notb
xor
jecxz
mov
or
mov
mov
mov
add
and
sub
fwait
jg
aas
xor
imul
sbb
inc
jo
out
ret
pop
push
cmpsb
dec
pop
sub
adc
jmp
push
add
ret
js
in
inc
pop
loop
mov
inc
sahf
jbe
mov
ds
insb
lods
pop
mov
ss
icebp
orb
push
testl
xchg
mov
mov
dec
push
jbe
cmp
xorl
xor
cmp
inc
mov
pop
inc
stc
ja
lock
sbb
mov
stc
inc
mov
xchg
into
jge
add
sti
mov
inc
sbb
xchg
sbb
cli
fdivrl
adc
rcll
lods
fidivrl
cmp
shll
subl
lock
dec
push
loop
nop
jne
xor
jmp
adc
hlt
jno
lret
stos
adc
or
jl
sbb
jle
popa
dec
cmp
xchg
jbe
xchg
jno
lods
cwtl
and
lcall
out
or
and
lahf
lea
pop
adc
pop
add
mov
inc
sahf
fucom
outsb
cld
je
dec
test
pop
int3
shll
push
stos
popf
sub
cmp
mov
cmpsb
leave
cmpsl
out
add
dec
or
imul
hlt
mov
or
cmpsb
addl
jns
popa
mov
jnp
cld
and
jae
out
push
out
push
xlat
and
adc
or
js
sbb
add
fdivl
ret
lahf
mov
gs
cmp
xor
enter
jp
or
ret
and
lahf
loope
mov
and
hlt
loopne
mov
sbb
addr16
mov
mov
popa
sub
dec
jb
or
cmpsb
push
inc
ds
add
jb
jbe
inc
gs
sub
lahf
jmp
cmp
xlat
jbe
es
negl
push
ss
dec
mov
sarb
rol
pop
pop
push
int3
push
cwtl
scas
test
stos
pop
pop
xlat
adc
cs
lock
fwait
inc
mov
hlt
stos
pop
loop
cmpsb
add
call
and
in
mov
fidivrl
ret
jbe
es
gs
cmp
cmp
movsl
pop
sbb
pushf
rorb
jmp
cmp
lcall
jnp
imul
scas
cmp
mov
sahf
push
lret
inc
mov
popf
sbb
cmp
cmc
add
cmp
shl
test
xchg
movsb
iret
jl
int
xchg
push
and
cmp
jne
inc
push
jmp
jo
popa
es
or
jecxz
add
push
xchg
mov
loopne
cmpsb
stc
push
or
adc
in
mov
jae
mov
out
rolb
cmp
cmpsl
aas
std
push
adc
jb
mov
xlat
test
je
out
xchg
jne
repz
imulb
int
pop
outsl
adc
cmp
adc
adc
mov
xor
inc
or
loope
lret
dec
xor
xor
lods
adc
xor
and
xchg
cmp
sbb
add
push
shlb
lcall
cld
imul
in
mov
aas
sub
frstor
js
push
aaa
add
xchg
mov
xchg
inc
shrb
jno
mov
push
lret
sbb
and
hlt
mov
dec
xorl
inc
je
sbb
mov
data16
outsl
xor
sarb
test
lods
hlt
test
out
sbb
mov
mov
vpshab
ret
lahf
repnz
xor
adc
inc
lds
mov
mov
int
bound
xchg
jmp
iret
push
pop
std
xor
xchg
aad
push
mov
xlat
scas
sbb
push
cltd
cltd
stc
ret
jecxz
cmp
or
fs
dec
sub
ds
and
sti
inc
mov
das
push
sub
push
rol
lret
popf
aaa
inc
mov
pop
out
sti
cmp
push
pop
xacquire
rcl
add
dec
bound
mov
xlat
mov
arpl
mov
inc
ror
imul
inc
xchg
les
mov
pushf
das
xchg
dec
outsl
add
mov
fdivrs
aad
movsl
into
out
fildl
lock
or
pop
cmp
and
cmp
lods
jnp
sbb
cli
push
mov
xchg
mov
jnp
int3
jmp
pop
fidivl
xchg
dec
into
sub
fcoms
ret
pop
xor
outsl
mov
sub
mov
int
stc
cmp
pop
insb
js
repnz
sub
inc
gs
into
nop
push
inc
in
adc
pop
jl
pop
movsb
xor
mov
int
and
ret
ljmp
sti
aaa
push
lock
sahf
mov
cltd
jle
inc
pushf
mov
add
in
repnz
icebp
mov
inc
adc
xor
int
and
lods
adcl
into
test
adc
cvtpi2ps
out
add
inc
lea
cld
and
jno
push
loop
test
pop
sbb
adc
lds
mov
mov
or
jmp
sub
mov
xchg
add
jno
mov
cmpsl
pop
and
lock
fs
icebp
shl
imul
mov
cwtl
inc
subb
mov
test
xor
or
inc
dec
pusha
repnz
xor
popa
ss
lods
add
daa
cmp
lods
pusha
fs
dec
addl
mov
sahf
adc
inc
icebp
lea
int3
pop
cmpb
adc
movsl
iret
aad
push
mov
cltd
mov
aas
xchg
jge
je
xchg
call
jae
pop
jno
test
imul
jp
dec
sub
add
jnp
adc
or
adc
and
shrb
pusha
sub
add
sbb
cld
test
rcrl
jecxz
jl
ljmp
sbbl
das
add
or
pop
sbbb
xor
xor
je
cwtl
add
pop
sbb
dec
add
addl
pop
repz
stc
imul
sbb
cmp
add
sub
call
ret
pop
popa
sub
and
out
add
mov
xlat
xchg
mov
cmc
cmpsl
sub
xlat
out
cwtl
mov
cmpsl
cwtl
sbb
sub
test
inc
xchg
jecxz
lods
in
push
and
push
mul
push
and
imul
push
push
jmp
mov
hlt
hlt
test
jmp
adc
test
stc
mov
aas
push
dec
dec
add
mov
out
mov
pushf
mov
sbb
xchg
xchg
rcll
pop
and
lret
cs
les
fisubs
shrl
cmpsb
push
inc
inc
mov
pop
lods
mov
pop
jle
hlt
stc
test
sub
and
stos
adc
dec
mov
fucomi
cmp
cmp
sbb
cmpsb
mov
addr16
adc
in
cmpsl
push
sahf
cmpl
or
push
mov
cmp
mov
pop
sbb
xchg
scas
movsb
lea
filds
push
rorl
jne
in
push
bnd
mov
mov
push
nop
cltd
adc
push
pop
pop
add
cmp
in
dec
dec
outsl
sbb
xor
es
call
cmp
arpl
stc
add
js
stc
pop
out
rclb
dec
jge
shrl
pop
ds
test
lods
xchg
pop
ja
rcrb
call
mov
movsb
mov
add
mov
pop
inc
push
int
adc
out
sub
clc
xchg
rcrl
xor
mov
lret
lods
mov
stos
bnd
repz
adc
push
sbb
dec
lahf
fsubl
aam
cmc
ja
jg
xchg
fstl
lea
out
cmpsb
xchg
or
frstor
cmpsb
push
push
jp
stos
ret
and
xchg
add
xor
xlat
mov
sarl
dec
and
repz
add
pushl
xor
pop
nop
xor
int
popf
dec
dec
inc
shrl
sub
adc
mov
mov
icebp
sarb
nop
mov
cmp
ss
clc
mov
hlt
dec
sub
stos
xchg
inc
stos
xor
inc
call
daa
cli
adc
sahf
cltd
orl
mov
cmp
daa
int
arpl
gs
lret
pop
push
dec
gs
pop
std
fwait
sbb
leave
rcll
in
test
nop
cmpsb
ret
mov
xchg
add
stc
cmp
int3
xor
push
push
mov
int3
cmp
stc
xor
pop
mov
stc
enter
fisubrs
push
cwtl
and
cmpsb
push
inc
data16
xchg
mov
mov
mov
push
push
push
sub
sbb
adc
sahf
sbb
fcmovnu
cmp
frstor
shll
mov
in
and
mov
std
and
ss
dec
test
addps
mov
lea
lcall
rorb
fs
sbbl
inc
imul
fbld
shll
push
das
jbe
add
repz
inc
loop
or
sti
lods
mov
ret
sbb
pop
mov
in
dec
mov
fnstcw
xchg
dec
jmp
push
sahf
leave
sbb
mov
xor
push
stc
enterw
shl
jno
dec
dec
or
mov
out
jb
int3
adc
cmp
jg
mov
adc
mov
fsubp
loopne
inc
ja
cmp
test
or
aaa
mov
movsb
in
test
aad
mov
pop
cmp
nop
pop
mov
stos
es
mov
stc
pop
rcll
stos
or
je
insl
mov
js
mov
test
cmp
insb
jp
ret
mov
gs
mov
inc
aad
data16
xor
sahf
popa
add
loope
mov
scas
xlat
in
call
push
std
pop
mov
inc
lock
push
sahf
and
mov
outsl
jg
pop
xchg
loop
or
mov
test
mov
shll
addr16
dec
cmp
cmc
pop
das
jns
clc
loopne
xor
cmpsb
push
movl
sub
push
std
cltd
jo
enter
or
xchg
or
push
movsb
sub
mov
insl
cmpsl
lcall
inc
rclb
add
cmpsb
shlb
loopne
mov
in
fwait
cmpl
push
or
mov
dec
test
push
stos
sbb
xchg
adc
mov
test
test
shlb
mov
ljmp
dec
in
fdivrs
inc
cltd
mov
add
mov
fistl
aad
mov
sub
adc
pusha
shl
mov
clc
sub
xchg
jp
mov
xor
lret
push
aam
add
cmp
mov
outsl
test
out
ja
jl
clc
pop
nop
fbld
rcrl
arpl
cld
xor
and
push
dec
out
inc
mov
negb
dec
inc
in
dec
movsl
inc
add
push
stos
in
push
push
pop
mov
dec
xchg
push
dec
sbb
pop
sub
xchg
icebp
sbb
xchg
sarl
inc
jo
sbb
jp
dec
out
lock
push
jbe
movsl
test
xchg
cs
bound
xchg
lcall
nop
jle
rorl
adc
adc
sub
inc
mov
mov
out
sub
cmpb
aaa
int3
jmp
dec
lcall
jg
shll
mov
out
jae
sub
xchg
sbb
shll
cwtl
and
hlt
sbb
fldl
inc
mov
shll
pop
mov
aad
incb
mov
xchg
jge
call
shll
js
dec
insl
test
icebp
out
pop
jmp
fsubrs
cs
adc
pop
test
cmp
ljmp
pop
sarb
cmp
addb
push
sbb
dec
dec
into
pop
das
mov
push
mov
ss
add
in
test
pop
out
jp
jmp
push
jb
mov
cmpsl
pop
mov
or
dec
or
or
nop
popa
fadds
ror
ss
dec
addr16
mov
sbb
push
dec
adc
negl
sub
mov
lock
pop
fadds
and
xchg
shl
mov
push
dec
jg
sti
cmp
add
fs
sahf
and
cs
out
cmp
mov
mov
cmpsb
and
cmpb
lea
js
xor
push
or
shll
repnz
jo
pop
ret
inc
xchg
push
out
imul
addr16
in
dec
xchg
push
jp
and
adc
adc
shlb
adc
fbstp
dec
dec
stos
jle
dec
jne
int3
imul
leave
ja
outsl
loop
mov
dec
test
out
scas
scas
mov
mov
bsf
enter
dec
popa
sub
lret
sub
mov
and
stc
sub
or
sarb
es
fwait
addr16
sbb
ret
js
mov
std
push
sub
jbe
loop
mov
cltd
jne
or
dec
sbb
addb
call
mov
jae
cmpsb
mov
xor
xchg
mov
pop
dec
sbb
or
xchg
add
jo
adc
out
and
mov
mov
xchg
rorl
orb
fidivrs
sarb
bound
inc
lahf
fcmovne
cli
fucomip
leave
fbstp
sbb
dec
push
sti
test
add
xchg
mov
push
cmp
cmpsb
enter
adc
or
jo
in
shll
xor
fistl
inc
shlb
in
xchg
add
mov
fsubrl
or
inc
enter
dec
popa
pop
ss
popa
mov
and
xorl
das
or
push
jle
lahf
int3
ja
adc
das
push
call
test
xor
iret
push
push
popf
xchg
pop
xor
inc
push
mull
mov
inc
out
add
aad
fcomps
mov
aas
stos
insl
mov
test
sbb
add
push
and
das
fs
imul
mov
mov
and
and
in
lods
or
pop
clc
push
xor
fwait
mov
mov
mov
push
leave
icebp
mov
jge
fsubrs
xchg
dec
repnz
ficompl
xor
out
cmc
and
andb
mov
stos
sbb
clc
test
dec
outsl
sbb
lcall
or
pop
add
adc
orb
mov
mov
clc
cmc
mov
xor
mov
lret
dec
mov
sbb
cld
pusha
jbe
mov
pop
jl
rcl
xor
adcb
popf
adc
fincstp
js
or
xchg
jge
movsb
stos
jmp
repz
jo
sub
or
or
mov
adc
sbb
xchg
mov
loope
xlat
lcall
mov
fisttps
xor
cmpsb
imul
lods
aad
xor
fsubrs
ljmp
scas
dec
mov
scas
outsl
or
adc
cltd
inc
pop
shl
push
jmp
adc
cmp
int
int
lahf
test
cli
loope
cmp
jle
inc
mov
lods
psubusw
sub
push
stc
adc
cltd
lret
push
xor
lods
add
pop
cmp
in
aam
fisttpll
inc
vmread
loopne
cs
cltd
sub
and
out
scas
dec
jle
xchg
cltd
mov
test
mov
out
xchg
aaa
in
cmovnp
arpl
decb
add
les
mov
lret
add
popa
jge
xor
mov
aaa
xchg
das
mov
ja
test
adc
imul
mov
out
sbb
adc
mov
pop
repnz
xchg
and
mov
mov
movsb
gs
or
sbb
mov
inc
xchg
fldt
pop
dec
nop
sbb
fs
lcall
and
dec
popa
data16
cmc
movsl
popa
mov
sub
pop
or
ja
adc
mov
cmp
inc
mov
xchg
lret
pop
push
pop
fs
push
aaa
mov
sub
test
daa
adcl
cwtl
leave
pop
push
cmpsb
dec
sahf
mov
or
dec
cmpsl
mov
adc
idivl
jl
lods
and
sbbb
lock
stos
fsubrl
mov
call
mov
outsb
sub
mov
out
jl
push
or
inc
push
pop
addr16
mov
jl
xchg
das
mov
xchg
add
mov
and
dec
cmp
aaa
out
fcom
inc
nop
inc
sub
pushf
or
and
aaa
outsb
mov
add
mov
mov
std
jno
and
cmp
or
not
mov
shrl
mov
add
mov
adc
sti
ret
xchg
sbb
xor
push
sbb
scas
jmp
nop
out
popa
xchg
push
or
and
add
push
mov
repz
mov
sarl
nop
cld
dec
int
and
jno
mov
mov
test
cmc
cmp
jecxz
cmp
loop
loop
sbb
fiadds
shlb
mov
mov
or
imul
xor
lock
imul
jmp
orb
sar
jno
fiadds
lea
dec
sahf
add
add
mov
lods
in
push
xchg
mov
lret
cmp
repnz
add
pop
cld
mov
xchg
imul
or
or
mov
xchg
fstl
adc
xchg
in
dec
lret
and
xchg
push
inc
mov
pop
ja
mov
push
stos
nop
stos
and
repz
fwait
ret
mov
or
sub
jae
mov
xchg
sub
cwtl
fldcw
xchg
jno
dec
mov
fs
xlat
xchg
and
stos
push
add
xor
mov
dec
mov
cwtl
add
loop
inc
sbb
add
dec
in
xchg
mov
pop
ret
push
cmp
mov
jecxz
hlt
aaa
stc
cmp
lds
add
inc
adc
lods
inc
jge
push
jecxz
jnp
xchg
push
ds
mov
xor
nop
stos
mov
adc
cmp
dec
dec
mov
mov
sub
adc
mov
movsb
pop
mov
call
pop
ja
add
mov
loopne
cs
mov
out
mov
mov
push
add
stos
mov
shlb
stos
adc
sbb
stos
inc
pop
cmpb
or
stos
outsl
dec
push
insb
or
xor
push
and
ret
xchg
xor
dec
mov
ljmp
out
dec
and
sbb
in
cwtl
outsl
mov
adc
mov
jmp
loop
cld
out
lret
fs
iret
mov
loope
inc
nop
dec
pop
ret
adc
ja
mov
ljmp
push
push
iret
movsb
adc
std
cld
pop
jo
dec
shlb
lahf
sbb
arpl
or
loope
lret
test
mov
sub
xchg
xchg
sub
or
mov
xchg
ljmp
pop
push
daa
and
adc
mov
sbbl
sub
in
and
sub
push
cmp
andb
jmp
in
or
pop
add
pushf
ret
dec
popf
shl
xchg
pop
add
cmpb
add
pop
out
ret
xor
dec
pop
mov
in
or
fldt
ja
sbbl
stc
dec
into
fildll
or
sti
out
fildll
pusha
cmp
mov
mov
into
out
mov
and
ljmp
lds
sarl
out
xchg
push
bound
xor
inc
mov
repnz
xchg
pop
das
pop
dec
sbbb
icebp
xchg
dec
pop
icebp
adc
je
dec
jns
cmp
pop
ljmp
or
cs
push
addr16
fdivl
mov
dec
cltd
sub
push
mov
decl
mov
mov
add
pop
adc
clc
push
popa
insl
mull
xchg
cmp
push
sub
fwait
ret
aam
repz
daa
lcall
shll
xchg
movsl
cltd
lds
addr16
lods
mov
roll
mov
cli
int
pop
cwtl
jmp
mov
and
sbb
cmc
inc
push
jns
fdivl
mov
sbb
push
dec
mov
int3
and
cltd
test
adc
iret
mov
push
adc
bound
cmp
add
pop
sbb
dec
add
sbb
icebp
cmpsb
data16
int
dec
out
sbb
push
mov
mov
out
cs
popf
push
cmpsb
inc
outsb
pop
insl
jns
in
jle
cmp
nop
loope
xchg
cli
rcrb
hlt
inc
leave
int3
loop
mov
jg
cmp
inc
jl
call
jp
movsl
and
loope
mov
stos
cmp
cmp
imul
sbb
sub
cmp
adc
adc
icebp
xor
cli
push
mov
pop
outsb
dec
clc
and
lods
and
fsubrs
pop
shlb
cmovbe
ret
mov
lret
cli
cmp
mov
inc
xchg
fldenv
aad
jo
test
or
ja
jmp
xchg
add
fsubr
fnstsw
jns
sbb
and
pop
lahf
negb
or
xor
lods
xchg
sbb
lcall
xor
dec
mov
cmp
mov
mov
mov
cli
lcall
xchg
inc
insl
int3
insl
shrl
es
aaa
jnp
lock
pop
jle
rcl
push
xor
cmp
fsin
sbb
pop
cmpsl
imul
scas
xchg
dec
and
push
inc
mov
sbb
mov
lcall
in
fisubl
mov
je
out
test
push
cmpsl
cmp
inc
xchg
sahf
mov
test
mov
into
fwait
out
bound
decb
icebp
mov
in
pop
ljmp
jnp
outsb
cs
lods
inc
lret
cltd
mov
push
out
stc
jge
fcmovu
out
inc
les
ds
inc
out
cmc
jg,pn
jecxz
cmpsl
xlat
lods
lcall
roll
cmpsb
and
cmpsl
and
xchg
sub
fsubp
out
or
cmpsb
lret
test
xor
cwtl
cmp
mov
loope,pn
xor
dec
adc
popa
sbb
stos
and
test
cmp
inc
or
cli
into
imul
cmp
out
inc
mov
push
pop
dec
cmp
or
ja
sub
outsb
aaa
xchg
fsubr
fstpl
shrb
loopne
cmpsl
xchg
stc
negl
xchg
out
xchg
jne
les
js
ja
cmp
xchg
imull
ds
inc
push
scas
insb
dec
loop
decb
or
add
dec
lahf
int
adc
seta
dec
mov
mull
dec
cmp
rorb
jae
rorl
push
test
lret
inc
daa
enter
out
cmp
mov
xchg
daa
jecxz
adc
ret
leave
lods
or
add
adc
mov
push
pop
and
js
in
mov
rclb
call
jge
cltd
dec
lods
testb
das
in
cmpsl
mov
xorw
pop
hlt
pop
inc
test
loope
cltd
push
sbb
aaa
pop
lods
dec
fucomi
jl
pop
vcvtps2pd
sub
lret
adc
stc
stos
xchg
xchg
fdivp
fstpl
repnz
not
xchg
jbe
loopne
fidivs
orb
in
testl
add
lds
out
sub
mov
pushf
sbb
or
pop
cmpsb
jecxz
pushf
sub
xchg
push
sub
mov
adc
pop
mov
adc
jg
add
sbb
inc
out
xor
jle
lods
inc
js
mov
fwait
and
mov
imul
dec
dec
icebp
cmc
popa
bound
fistpl
imul
xchg
push
dec
cmpsb
int3
jg
mov
sbb
pop
lds
dec
add
sti
sub
lods
mov
mov
test
pushf
or
shrb
pop
pushl
out
or
xchg
xchg
test
std
cmp
rolb
sarb
or
sbb
pop
in
push
cmpsb
imul
add
in
mov
cmp
push
outsl
scas
cmpsb
test
xor
ret
jne
mov
dec
sub
xchg
loopne
jle
mov
mov
jl
add
adc
inc
mov
or
pop
add
fstpl
fwait
cmp
push
jg
sub
adc
lock
fdiv
cmc
scas
dec
out
pop
xchg
xchg
rcl
pop
imul
pop
insl
sbb
sub
xor
movsb
mov
jns
std
fstp
stc
bound
fistps
inc
push
std
jecxz
adc
push
in
sbb
add
in
sub
sbb
jg
in
js
stos
push
loop
std
inc
aad
xor
in
inc
movl
add
lahf
cs
hlt
mov
jae
das
and
dec
out
pop
pop
inc
stc
arpl
push
dec
aaa
gs
popf
sbb
popa
lods
xchg
scas
les
xchg
sbb
pop
scas
fisttps
rorb
orl
xor
leave
rorb
dec
les
push
add
popa
sbb
ss
insl
loope
push
dec
jl
push
sub
cmp
into
lcall
test
fdiv
add
cmp
ljmp
push
adc
dec
cmpsl
dec
jg
movsb
addr16
dec
inc
lcall
or
jp
nop
das
xchg
push
call
stc
cmp
sbb
jle
add
adc
sbb
ret
fdivrs
filds
push
add
and
adc
scas
inc
xlat
movsb
in
dec
cmp
adc
mov
ret
jmp
arpl
add
xchg
mov
xlat
jns
rcr
cmpsl
scas
pop
push
sbb
adc
inc
pushf
nop
frstor
ror
push
movsl
or
imul
xor
fstl
gs
aad
xchg
mov
test
and
mov
xlat
outsb
xchg
cld
imul
and
xor
loope
cs
xchg
fisubl
dec
inc
ret
fsubrs
mov
ljmp
je
mov
push
in
dec
outsb
pop
fs
jge
adcl
adc
add
xor
aaa
lret
aad
or
pop
cmp
mov
or
cs
cmp
inc
sahf
and
scas
push
call
pextrw
mov
sbb
and
inc
push
lods
aad
jecxz
ja
xorb
test
jne
call
cld
jg
push
fucom
mov
adc
enter
ficompl
lcall
ret
pop
nop
pop
mov
mov
jb
iret
cmp
dec
sbb
pusha
dec
jo
xlat
out
out
setl
imul
sbb
inc
sbb
xor
outsl
pop
fsubs
outsl
xlat
imul
add
jmp
pop
xchg
js
push
test
xorb
lods
ficomps
add
insb
sahf
js
clc
imul
sbb
test
jmp
inc
jnp
xor
inc
cmp
xor
cmp
mov
stos
lods
push
int3
sbb
jo
lds
loopne
ficompl
sbb
pop
jge
dec
xchg
sub
or
lahf
xchg
jmp
jnp
or
or
lods
into
outsl
repnz
sub
mov
mov
cmp
cltd
arpl
xchg
adc
pop
jno
pushf
jns
clc
sub
outsl
xchg
sar
hlt
js
fst
js
fisubl
mov
sahf
pop
push
sub
push
or
dec
in
rcrb
mul
push
ss
inc
sbb
inc
mov
cli
loop
mov
cmpsl
or
pop
add
jecxz
dec
js
test
js
push
movsl
pop
leave
test
add
jne
pusha
ss
ficompl
push
and
dec
adc
dec
push
adcl
fimull
mov
loopne
jle
add
push
pop
cmp
cltd
push
pop
rcll
push
mov
call
or
gs
or
lods
data16
pop
sub
mov
push
adc
adc
cltd
mov
or
dec
shlb
imul
xchg
mov
cltd
sbb
jle
sahf
push
aam
sbb
negl
stc
and
cmc
test
cmp
push
cmc
ret
and
add
lcall
lock
sahf
cld
push
add
in
sub
scas
sbb
bnd
xchg
mov
jl
cli
stos
test
nop
pop
dec
loopne
and
out
pop
lds
in
lret
daa
xchg
mov
xor
add
xlat
popf
and
inc
mov
loope
fcomi
into
imulb
jb
test
adc
inc
les
cmp
daa
fistpl
mov
les
cmp
shlb
inc
fstl
scas
jl
mov
pop
inc
jbe
xchg
daa
pop
leave
mov
and
or
aaa
notb
cld
inc
ja
mov
mov
dec
rcrl
and
ror
dec
jmp
out
test
lock
adc
xchg
mov
cmp
data16
xchg
sbb
idiv
lea
incb
fiadds
popa
cmpsb
mov
repz
push
test
aaa
sbb
aad
call
xchg
cmp
ljmp
pop
in
mov
lcall
sub
popf
mov
pop
rcrl
jns
popa
cmpsb
mov
mov
imul
icebp
jle
jp
popf
cltd
add
sub
mov
push
sub
jo
dec
sub
pop
cmp
in
or
cmp
push
stos
pop
xchg
dec
sbb
sub
sub
ljmp
push
repnz
cmc
push
xor
out
xchg
shlb
cltd
fistl
mov
leave
fisubs
out
pop
mov
xchg
outsl
cltd
mov
adc
mov
xchg
inc
lcall
mov
sub
iret
out
sbb
leave
pusha
cmp
mov
repnz
mov
add
mov
push
aad
js
dec
lea
inc
jb
push
dec
pop
sbb
or
lahf
enter
in
dec
push
cmp
push
inc
and
pop
push
sub
in
inc
mov
jecxz,pt
mov
adc
inc
push
and
arpl
jne
mov
or
mov
xor
adc
or
insl
mov
mov
and
mov
or
or
mov
sub
test
and
jmp
dec
xchg
mov
mov
jle
mov
pop
loope
mov
sbb
in
lods
mov
sub
or
add
lods
mov
jge
mov
jae
shlb
mov
inc
and
stos
mov
je
idivl
jmp
sbb
jp
xor
xchg
repnz
sbb
stos
enter
mov
inc
sub
into
jae
mov
popf
stc
imul
xor
adc
jmp
dec
mov
lods
push
push
mov
and
xor
push
inc
andb
xchg
jns
lock
lds
jmp
xchg
or
clc
mov
mov
daa
jp
xor
sbb
mov
cltd
fbstp
and
leave
in
sti
or
aas
mov
out
cmp
outsl
rclb
mov
addb
mov
fs
push
lea
jae
out
push
mov
dec
out
mov
aaa
test
sub
lods
push
mov
repz
cmp
imul
adc
es
cwtl
inc
pop
dec
push
mov
and
rcrl
mov
cwtl
cmp
xchg
dec
movsb
je
mov
pop
cltd
popa
xchg
xchg
or
rorb
xor
sub
adc
mov
call
inc
cmp
mov
add
dec
mov
addl
imul
jp
loop
cmc
xchg
pop
inc
or
sbb
mov
hlt
dec
shl
adc
aam
ret
xor
leave
inc
cmc
in
pop
js
je
xchg
cmp
add
rcl
dec
filds
loop
adc
sbb
dec
dec
mov
ss
sub
mov
pop
mov
pop
aaa
mov
mov
jno
jae
iret
andl
loope
jns
hlt
cwtl
xor
xchg
dec
or
addr16
enter
sbb
jns
imul
mov
icebp
xor
addr16
push
subb
sub
stos
je
leave
enter
lret
cli
mov
std
xor
cmp
repnz
jle
into
push
mov
jle
sub
mov
sub
pushf
data16
cmp
xor
les
lahf
cwtl
xlat
and
mov
pop
scas
push
imul
lcall
shlb
mov
fistps
pop
inc
xor
iret
xor
imul
add
cmpsb
pop
sub
pop
xchg
idiv
xchg
fsts
popa
fs
or
sbb
push
jno
xchg
aam
fcmovne
loopne
adc
sub
divps
dec
insl
lods
mov
fists
pop
es
fildl
mov
and
stc
sbb
push
lods
iret
pusha
mov
mov
stos
insl
dec
and
dec
movsb
sub
adc
jnp
sbb
fsts
jmp
push
lret
out
lock
clc
es
icebp
sbb
hlt
push
subb
shll
daa
sub
dec
ret
mov
mov
sbb
jp
rorl
push
outsl
rcrb
and
int3
enter
add
stos
cmp
int
jl
mov
stos
mov
hlt
andb
insb
ja
or
pop
and
push
bound
repz
aas
mov
jbe
es
lret
and
idiv
mov
and
fwait
imul
adc
in
call
push
push
dec
lret
ja
cs
mov
loope
push
incb
xor
out
fists
mov
shll
mov
pop
mov
jle
sbb
scas
test
jb
adc
mov
mov
dec
mov
imul
sub
fiaddl
inc
into
out
dec
sub
int
dec
stos
lds
cmpsl
loopne
push
movsl
jns
mov
inc
jge
add
pop
push
aas
sahf
lods
and
cmp
mov
sahf
repz
lock
mov
rcll
jnp
clc
inc
xchg
jg
add
into
mov
xor
rcll
sbb
push
cmpsl
mov
sbb
aam
fidivrl
cmpl
mov
mov
pop
mov
pop
stc
pop
dec
imul
daa
mov
jl
add
fistl
fsts
insl
dec
sub
pop
adc
les
insl
push
mov
sub
out
xor
push
into
sub
pop
sbb
lock
je
fbld
cmpsl
and
cli
push
add
mov
mov
pop
and
fsubr
jne
ljmp
testb
and
dec
lcall
xor
xchg
cmp
pushf
add
jl
loop
repz
aaa
inc
outsl
cmpsb
ud1
shrl
adc
repnz
adc
jp
pusha
out
test
pop
not
or
cmpsl
lds
inc
xchg
movsb
shrb
test
mov
cld
pop
inc
lcall
sub
pop
push
rorb
aam
push
repnz
jno
xchg
aad
add
pop
das
sub
movb
fbld
sbb
ret
cli
cmpsl
inc
jno
inc
sahf
xlat
dec
or
stos
movsb
mov
xor
in
cld
addl
cltd
ficompl
scas
es
jne
or
mov
pushf
pop
sub
xor
enter
add
imul
in
inc
push
sbb
out
cmc
subl
sub
xlat
or
mov
xchg
xchg
pop
add
jl
or
sti
es
std
dec
andl
add
negl
insl
sarl
jmp
mov
push
cmpb
adc
or
cwtl
push
xlat
out
inc
shl
gs
lcall
adc
push
jne
or
inc
sbb
push
icebp
fnstcw
sahf
sbb
in
shrb
imul
and
pop
mov
push
subl
ja
add
cs
xchg
dec
cmp
imul
add
cmp
push
and
sub
mov
pop
daa
hlt
xor
out
jmp
inc
and
fldl
out
lods
test
mov
cmp
mov
mov
push
add
add
inc
insb
ret
inc
or
add
pop
mov
add
jmp
mov
inc
jmp
scas
mov
stos
or
ljmp
js
imul
xor
inc
cmpsb
imul
mov
jne
lods
adc
push
mov
xor
sub
lds
loopne
je
and
dec
das
cltd
std
lea
popa
pop
push
leave
ss
nop
dec
aas
mov
mov
lea
xor
push
dec
jbe
ljmp
adc
or
xlat
inc
xchg
sbb
xlat
aam
push
and
jns
fadd
inc
mov
xchg
js
sbb
andl
xchg
pop
push
pop
push
jmp
sub
pop
adc
dec
inc
cmp
add
push
or
jne
sub
cli
xchg
shrb
not
push
mov
repz
push
push
xlat
pop
popa
addr16
test
and
jo
adcl
loop
inc
and
ffree
mov
mov
or
push
sbb
jg
insb
iret
les
dec
sub
ljmp
mov
inc
adc
lcall
xlat
insl
xor
ss
add
fsubrs
je
add
push
mov
popa
loope
enter
inc
inc
jo
sub
mov
test
mov
dec
pop
jns
mov
and
jmp
push
fisubs
loopne
inc
xchg
sahf
sbb
sub
mov
push
lret
out
cmp
mov
jno
std
lcall
xchg
icebp
jle
push
cmpsl
xchg
les
or
xor
hlt
js
push
dec
ss
es
shrb
push
add
adc
inc
ljmp
jb
push
rcrl
call
mov
sahf
mov
mov
nopl
mov
scas
dec
pop
inc
repz
pop
jnp
insb
insb
popf
pusha
sbb
scas
mov
mov
pop
dec
add
arpl
and
jecxz
sub
sub
sbb
cmp
push
sbb
es
xchg
cmp
cs
push
mov
fwait
sbb
add
fisubrs
out
mov
mov
mov
loopne
mov
mov
or
scas
mov
outsb
mov
test
push
jo
sub
sbb
jmp
mov
fisubl
int3
fcmovne
xchg
stos
cltd
and
add
fs
js
sbb
and
clc
xchg
imul
cmp
les
push
dec
xchg
inc
rclb
inc
dec
or
js
lret
sbb
mov
out
clc
adc
test
jo
xor
movsl
dec
mov
test
es
stos
outsb
mov
ret
sub
fwait
sbb
add
addl
sub
jmp
push
mov
push
or
sub
stos
lods
data16
xchg
jb
das
mov
je
cmp
push
sti
mov
shlb
lods
rcrb
dec
adc
xor
cltd
push
ss
adc
cmp
cmp
imul
and
inc
aad
and
xlat
add
iret
inc
pop
add
cltd
mov
mov
mov
mov
mov
or
inc
in
js
push
imul
in
in
xor
or
aaa
out
push
xchg
cmp
stos
fcmovne
repnz
mov
jmp
pop
jg
fisttps
push
jg
out
mov
and
dec
ret
cld
scas
dec
sarb
mov
cmpsl
xor
loopne
js
ret
bound
mov
or
or
inc
test
mov
sbb
jecxz
pop
stos
cmc
xorl
dec
add
cs
inc
pop
fildll
xchg
jge
jae
cmpsb
cmc
idivl
lds
cld
mov
rcll
mov
jl
and
and
icebp
lret
xor
mov
testl
jp
les
jns
push
roll
pop
in
adc
lahf
bound
aam
jbe
mov
mov
out
rcrb
inc
insl
mov
fucomp
sbb
jb
mov
push
pop
inc
xchg
loopne
add
mov
adc
shll
dec
xchg
or
outsl
pop
pop
rolb
shrb
dec
cltd
pop
sbb
or
fwait
xor
pusha
cmc
ror
fcomp
and
inc
jns
jbe
movb
lods
adc
mov
xor
xlat
push
fs
sub
mov
inc
push
test
sbb
mov
sub
decb
into
jb
sarl
dec
push
test
mov
addl
mov
push
stos
pusha
and
in
lret
push
xchg
push
sahf
mov
mov
sub
stos
and
test
into
inc
cltd
mov
loope
stc
lods
lcall
jb
xor
xchg
sarb
adc
sub
test
push
sti
imul
ret
int3
aas
mov
jg
dec
or
sub
fidivl
jno
shll
jmp
mov
mov
push
ljmp
gs
iret
push
push
jnp
xchg
push
push
dec
xchg
andl
shlb
aad
add
popa
sbb
js
clc
ret
xchg
inc
iret
js
push
jp
jg
enter
pop
sbb
push
jg
inc
ljmp
pop
stos
add
mov
stos
movsl
mov
fsubs
add
in
negb
dec
pop
stos
retw
xor
subb
repnz
cwtl
xchg
cmp
flds
je
mov
xor
jecxz
add
outsl
cmp
push
sarl
push
dec
mov
sub
fmuls
xchg
mov
push
lahf
and
fwait
mov
icebp
out
jecxz
push
fwait
xor
lods
movsb
pop
pop
fwait
pushf
pop
loop
sbb
dec
cmp
roll
jp
mov
jmp
scas
rcll
call
aam
jae
cmp
pop
rcll
fwait
sub
cs
ss
cmpsb
into
addl
jl
push
push
xchg
cmp
scas
pop
insb
mov
icebp
imul
dec
dec
dec
mov
aaa
push
cmp
xchg
ljmp
sub
inc
jecxz
sub
cmp
jo
lock
inc
dec
jne
dec
popa
cltd
cltd
push
lea
leave
xor
stc
mov
push
and
aaa
aas
xchg
adc
pop
push
sub
jge
jns
lods
mov
push
pop
jecxz,pt
jl
jns
pop
cmp
sbb
insb
cmp
mov
imul
in
jle
cmp
fstpl
mov
pop
jmp
cs
adc
and
mov
xchg
imul
loope
shl
push
test
add
push
lods
xorb
lret
lret
sbb
arpl
call
lcall
clc
scas
and
repnz
aad
gs
xchg
cli
jmp
pop
iret
pop
stos
pop
rcr
pop
out
bound
mov
das
cmpsb
mov
mov
aam
mov
mov
clc
push
xor
push
jne
adc
insb
movsl
fldcw
cmp
pop
xchg
inc
cmc
sbb
iret
iret
sub
cmpsl
push
hlt
pop
test
ret
test
cmp
push
cwtl
lock
inc
lds
mov
xchg
dec
data16
loopne
lock
jns
mov
cmp
shr
mov
mov
cmp
or
mov
jb
mov
movsl
add
cld
addb
ret
in
leave
xchg
xor
mov
pop
mov
xor
inc
mov
lret
movb
xchg
jae
or
fdivrp
repnz
sti
mov
mov
idiv
lods
adc
push
ret
adc
std
add
push
fsts
inc
xor
push
inc
dec
imul
xor
and
jg
fstl
repz
adc
cltd
loopne
out
xchg
lcall
bound
xchg
adc
push
sahf
fcmovnbe
mov
jnp
push
xor
xchg
jb
mov
xchg
jp
lods
inc
std
int
outsb
cmp
xor
mov
sub
insl
cmp
push
leave
xchg
in
push
xchg
in
in
cld
repz
sub
jne
in
xchg
push
ljmp
subl
icebp
stos
imul
inc
into
jae
test
aaa
or
sahf
shll
push
jmp
mov
mov
mov
pop
lock
jle
insb
inc
jo
orl
jg
pop
push
jns
push
fwait
ret
ficoml
jae
dec
lea
movsb
shll
adc
dec
cli
dec
ret
rclb
enter
mov
in
sub
mov
pop
sbb
aam
add
leave
mov
cmp
rorb
loope
dec
cli
and
pop
xchg
sahf
adc
fiaddl
jb
jb
or
or
xchg
repz
jg
test
inc
lds
mov
push
cmpl
adc
fisttpl
jb
std
add
lret
and
cmc
or
and
aas
push
je
mov
lock
push
cltd
xchg
lea
jge
pop
in
cmp
sub
push
xchg
add
cmp
pop
mov
lret
cmp
pop
adc
stos
sub
add
pop
loope
outsb
xor
or
dec
inc
ret
mov
ja
jp
dec
mov
arpl
ret
jge
mov
pop
and
mov
dec
mov
lcall
xchg
aaa
sub
mov
and
jg
sub
add
mov
xchg
call
push
xor
out
aad
pop
adc
sub
or
leave
sub
jmp
repnz
imul
cmc
test
std
add
popa
push
jg
inc
hlt
repz
lods
push
cmp
sub
and
lods
and
int3
testl
or
shl
mov
or
outsb
andb
aaa
xor
inc
addr16
or
testl
notl
stos
test
mov
and
inc
mov
mov
hlt
out
pop
inc
lea
adc
ljmp
lea
outsl
adc
adcb
sub
sub
stos
mov
lock
pop
out
outsb
xchg
xor
push
pushf
xor
xor
enter
stos
mov
addr16
mov
adc
cmp
or
jecxz
xor
sarl
jge
jp
cmpsb
push
xor
and
sub
aaa
pop
pop
dec
fstpl
bound
std
add
addr16
fistpl
jle
scas
js
testb
sub
cmp
pop
divb
inc
ret
push
cmp
les
jge
and
push
mov
pop
lcall
in
enter
sarl
cltd
sbb
in
adc
lea
je
push
insb
pop
jns
bound
ror
add
jmp
fwait
outsl
stos
fwait
sub
std
outsl
jg
add
mov
sub
and
jne
aaa
outsl
aam
rcrb
lret
in
adc
mov
xchg
nop
inc
cmc
xchg
ljmp
or
jg
aam
fnstenv
or
fiadds
scas
and
mov
mov
push
push
pop
mov
push
imul
sub
mov
dec
xor
popf
imulb
out
in
push
push
fsubr
mov
in
popa
dec
pop
cmc
sub
mov
out
cmp
adc
xor
popa
movsb
inc
mov
jb
xorb
movsl
dec
outsl
imul
dec
lea
or
mov
lcall
mov
push
sbb
xlat
and
pushf
outsb
mov
mov
cmc
leave
sbb
sti
xchg
sbb
jl
adc
sub
xchg
in
jecxz
or
inc
out
jp
push
pop
test
add
push
xor
shrl
adc
cmp
sahf
dec
add
js
mov
sub
pop
leave
stc
or
jbe
inc
popa
in
sti
jecxz
mov
in
or
scas
mov
jl
pop
in
pop
aaa
bound
pushf
imull
push
lret
je
lds
xchg
xor
or
in
outsl
into
insl
iret
mov
movsb
aam
adc
and
jp
inc
insl
cli
mov
add
ss
call
jnp
pop
add
jb
es
in
adcb
push
subl
dec
ret
mov
pop
inc
arpl
ficomps
dec
packssdw
push
jp
xorl
add
scas
insb
xchg
dec
aad
lahf
cld
inc
lods
sub
xchg
out
xor
jge
xchg
int
lahf
lahf
cltd
mov
mov
pusha
int3
in
sbb
cli
add
mov
cmpsl
mov
adc
or
sub
mov
mov
daa
mov
mov
sub
icebp
test
cmp
in
xchg
and
cmpsb
ja
pop
lods
aad
movsl
sahf
add
std
jne
pop
xchg
sub
clc
cwtl
ficoms
jmp
repz
popf
cmp
xchg
loope
mov
fmuls
inc
out
adc
aaa
push
out
jns
scas
aam
test
adc
cmp
jae
repz
bound
leave
sbb
sbbb
push
mov
mov
aas
push
or
sub
imul
aad
mov
pop
nop
sbb
lcall
and
xchg
rolb
popf
adc
lods
clc
xchg
xchg
ss
sub
push
sub
inc
scas
mov
bound
cmp
dec
pop
xchg
mov
mov
xor
movsl
lret
pop
mov
inc
xchg
leave
add
xchg
push
mov
push
push
int
cmp
and
pop
and
jg
sarl
mov
adc
insb
mov
sub
enter
sub
inc
pop
aas
and
sbb
sub
and
push
out
jns
in
mov
cld
adc
lock
push
add
add
cwtl
jmp
inc
test
paddb
inc
ret
fadd
fsubp
loopne
outsl
cmp
cmpsl
xchg
adc
xchg
idiv
cmp
repnz
jns
sub
jnp
sub
lea
jp
mov
fwait
insb
or
je
xchg
in
inc
push
in
addr16
sahf
inc
add
xchg
xor
sub
sbbl
mov
jmp
test
mov
mov
pusha
push
pop
lds
push
add
js
js
ret
leave
in
xor
pusha
out
sbb
jo
and
movsl
js
and
loop
enter
adc
ja
aas
fs
adc
mov
dec
movsb
lahf
insb
dec
pop
add
enter
xchg
xor
int3
fsubs
xchg
fcmovnb
das
jbe
mov
out
mov
fdivrl
push
ret
pop
fnstenv
ljmp
mov
adc
orb
imul
sar
scas
testl
mov
pop
imul
cs
mov
or
mov
jp
sti
fmul
inc
jae
fisubrl
int
adc
mov
push
dec
ja
cmpsl
and
add
mov
adc
xchg
hlt
or
mov
jbe
pop
arpl
out
imul
add
stos
shlb
jecxz
push
imul
xor
inc
mov
push
adc
in
or
mov
mov
mov
ljmp
dec
stc
add
clc
std
xor
add
clc
mov
divl
sub
inc
scas
mov
imul
add
push
wbinvd
test
test
adc
popf
aad
adc
rcl
xchg
ret
aad
or
fwait
mov
xor
dec
fbstp
jns
dec
rcrb
jge,pt
cmpsb
or
fbstp
daa
cmc
cmp
lods
pop
int
jge
ds
repnz
dec
mov
cmc
scas
outsb
lret
test
inc
xchg
mov
dec
cwtl
test
stos
adc
fwait
pop
aaa
je
lret
dec
fisubrs
cmp
dec
out
dec
stos
pop
lods
sub
jp
dec
js
addr16
loopne
and
cmp
cmpsl
cmp
lret
movsl
mov
cmp
xchg
cmc
bound
jg
mov
inc
dec
and
adc
dec
ss
pusha
lds
ss
push
fistpll
imul
pop
pop
movsl
outsb
loopne
mov
pop
xchg
mov
int3
mov
inc
int3
and
adc
cld
adc
push
xchg
idivb
jae
jnp,pn
sub
and
in
insl
sbb
insl
and
pop
pop
cmc
cli
pop
arpl
xor
inc
movsb
aaa
fbstp
std
sbb
lcall
clc
push
fdivr
mov
dec
xor
pop
ss
mov
clc
cmp
mov
fwait
push
into
in
push
clc
shrl
int
leave
fwait
aaa
mov
dec
jnp,pn
jecxz
jmp
sub
lods
xchg
xor
pop
loop
cmp
lods
test
addr16
hlt
cmpl
mull
stos
mov
dec
ret
xlat
icebp
movsl
mov
fdivrl
testl
cmp
mov
rcll
out
daa
jo
sub
popf
dec
jnp
xor
repnz
mov
mov
shlb
loopne
inc
inc
dec
sub
inc
jae
sub
inc
adc
std
push
or
ja
cmp
xchg
push
fidivs
pop
push
jle
mov
adc
lret
lss
cmp
cwtl
es
test
push
pop
push
fstps
sub
jmp
mov
movsl
mov
jb
in
push
imul
inc
repnz
aas
push
xor
ret
ret
mov
in
clc
loop
jno
rorb
mov
mov
push
fstps
dec
xchg
daa
rcl
cmp
fisubl
push
xlat
pop
negb
mov
dec
cltd
inc
sti
mov
stos
xor
leave
lret
pusha
pop
mov
cld
dec
lods
push
insb
out
xor
mov
bound
cli
int3
push
and
adc
in
push
out
sub
mov
imul
ljmp
add
or
pop
or
push
out
dec
out
loopne
out
divl
shrb
cmp
movb
sub
jbe
dec
or
out
fsubs
pushf
ss
negl
arpl
stos
jo
lods
hlt
imul
and
cmp
ja
scas
inc
not
ss
fdivr
push
sbb
pushf
pop
in
mov
mov
in
std
or
mov
or
or
into
js
out
pop
pop
or
movsl
sbb
mov
ret
and
aaa
xor
fcoms
push
adc
jle
into
lret
fistpl
push
mov
leave
or
mov
cmpsb
lea
mov
mov
pop
or
or
ljmp
dec
mov
inc
jg
inc
push
mov
pop
in
xor
sahf
cmp
xor
fwait
enter
cmpsl
int
aad
push
adc
and
ret
cmp
ljmp
pop
mov
shlb
mov
popf
pusha
inc
push
inc
or
jae,pt
stos
jbe
fstpl
insb
jae
add
push
xor
subl
jne
pop
pop
ret
loop
inc
mov
xor
and
inc
dec
adc
xor
adc
ds
jg
fmull
dec
sub
push
and
push
ficoml
push
inc
fistpll
jb
imull
cwtl
mov
inc
out
in
mov
mov
lods
mov
lcall
nop
cwtl
xchg
loop,pt
pop
js
pop
mov
test
push
ljmp
jns
aaa
popa
and
scas
mov
cld
gs
rcr
inc
mov
fmul
pusha
xor
leave
fs
mov
mov
sbb
sub
mov
test
jp
dec
lcall
pop
into
xor
dec
sbb
sbb
hlt
test
jns
mov
sub
jle
add
xor
xchg
clc
dec
adc
cmp
lcall
stc
mov
adc
test
dec
out
or
and
shlb
ficoms
or
mov
or
loope
nop
push
rclb
mov
aaa
cmc
push
cmpsb
add
sarb
or
push
push
dec
movsb
into
inc
sbb
mov
mov
xchg
cmpl
rorb
mov
mov
jecxz
loop
dec
mov
lahf
aad
xor
or
rorl
mov
inc
daa
xchg
push
and
cld
mov
add
jecxz
fcoms
adc
dec
pop
mov
dec
mov
jl
xchg
xchg
into
insl
fwait
mov
add
push
mov
pop
inc
adc
and
mov
lret
popl
xchg
push
or
and
push
jbe
push
add
pop
out
push
mov
xchg
mov
mov
loop
push
into
shll
cmp
add
iret
push
dec
insl
mov
insl
push
mov
popf
mov
pop
jle
xor
cmp
mov
movsl
ret
sub
mov
das
mov
dec
lods
std
sub
sub
jmp
enter
outsb
pop
jae
aaa
cmp
jge
in
out
add
clc
ja
and
xor
fwait
jp
call
cli
xchg
fisubl
jno
clc
and
out
in
dec
lret
dec
pop
mov
rcrl
in
pop
loopne
and
daa
adc
mov
dec
xchg
rol
mov
fs
adc
jne
shrl
mov
cmp
dec
insb
loope,pt
bound
inc
mov
dec
xor
in
fisubrl
lds
lock
mov
jns
in
stc
pop
imul
fdivs
adc
mov
mov
rcrb
mov
icebp
popa
cmp
dec
inc
retw
nop
loop
mov
enter
out
inc
mov
dec
mov
or
jl
sahf
xor
mov
jo
arpl
cwtl
adc
sarl
mov
repnz
rcrl
frstor
clc
test
dec
inc
fisubrl
jl
xchg
xor
sbbl
push
pushf
add
outsb
rorb
pop
mov
shrb
adc
xor
xor
xor
hlt
mov
mov
cmp
cmp
sub
movsb
add
testb
sti
add
call
or
adc
mov
mov
loope
push
push
push
stos
xor
fistpl
test
sti
leave
jns
iret
dec
cli
jge
xor
xrelease
or
out
mov
cwtl
addr16
cmp
sub
popa
out
inc
xor
out
dec
jp
aam
mov
aad
push
jecxz
mov
jmp
or
mov
add
rolb
cmp
jge
add
and
icebp
cli
psrlq
mov
ss
enter
push
inc
shrl
call
nop
into
pop
and
dec
enter
icebp
sub
add
adc
push
nop
pop
push
pop
sub
lods
std
pop
icebp
jnp
dec
cmp
test
leave
in
xor
cmp
popf
mov
xor
inc
xor
jp
pop
inc
push
dec
cld
in
insl
subl
les
mov
nop
and
aad
dec
vpcmpgtb
xchg
push
movsl
out
ja
or
out
hlt
sbb
dec
push
popa
mov
jmp
fisubs
lods
stos
fs
push
divb
push
add
shlb
pushfw
pop
test
pop
sub
fidivs
push
fistl
lret
pop
jg
cltd
xchg
bound
pop
fwait
mov
lods
pop
mov
jp
sub
xchg
inc
movl
sti
ret
loop
daa
vpshaq
stos
aam
inc
cmp
out
fld
pop
test
rcll
push
in
les
lret
jecxz
inc
lahf
out
mov
mov
adc
inc
add
stos
ret
sarl
cmpsl
adc
add
sbb
jbe
or
sbb
insl
push
ss
lea
hlt
cmp
lret
xor
sub
daa
bound
pop
lds
mov
insb
lock
out
inc
xchg
xchg
fisttpl
scas
pop
cltd
mov
pop
sahf
bound
push
dec
hlt
xchg
push
jns
xchg
in
sbb
jo
sub
mov
jecxz
dec
or
stos
ljmp
sub
pop
mov
lods
nop
loop
movsb
fwait
push
les
xchg
test
orl
mov
mov
les
into
push
cmp
xor
imul
push
sarb
mov
gs
mov
or
repz
fnstenv
adc
lock
or
mov
xchg
fimuls
sbb
cltd
add
push
jns
daa
stos
cmp
jle
cmp
fs
dec
out
lret
jle
mov
dec
hlt
dec
shlb
pop
cmpsl
and
insb
mov
ss
das
repnz
push
leave
lea
add
mov
mov
dec
ljmp
sbb
push
sahf
ds
rorl
jecxz
push
pop
cmpsl
cli
push
sub
and
fcoml
jnp
add
rcrb
xchg
xor
dec
or
push
shll
cmp
rcrb
push
mov
sahf
lds
scas
lock
push
mov
mov
dec
jg
push
jnp
pop
xor
and
add
mov
adc
add
movsl
xor
jo
fists
jp
jno
add
dec
movsl
push
xor
cltd
fbstp
mov
sub
xchg
fisttpl
lret
sbb
mov
inc
scas
sub
fcoml
jo
imul
push
aas
mov
test
stos
cmc
nop
out
std
shlb
sub
es
int
or
inc
mov
test
xchg
jle
mov
mov
sbb
sahf
pop
hlt
or
mov
cltd
xchg
inc
inc
xchg
pusha
xor
lods
dec
out
sbb
orb
inc
add
bswap
ret
jcxz
movsb
out
jmp
xchg
xchg
das
pop
and
mov
loopne
addr16
mov
cmp
dec
ds
jo
scas
mov
mov
adc
jns
cmp
aad
pop
dec
xchg
dec
adc
adc
call
stos
stos
add
inc
jae
or
add
les
and
imul
push
test
pop
mov
and
or
and
daa
push
add
cmc
jmp
ss
cmp
jnp
in
xchg
mov
sbb
inc
and
xlat
xor
and
sbb
or
mov
cwtl
and
insb
add
sti
and
mov
mov
push
les
mov
outsb
stc
adc
sbb
push
and
mov
inc
stos
cltd
aam
cmpsb
imul
stos
cmp
call
lods
mov
js
out
stc
xchg
mov
aad
xor
test
mov
jle
jns
jecxz
sub
rclb
dec
push
xchg
jmp
sbb
adc
mov
push
fs
mov
xchg
scas
in
cli
jecxz
xchg
mov
xchg
xor
dec
cmc
sub
daa
das
xor
in
push
xlat
mov
mov
or
sbb
mov
cltd
mov
jns
pop
pop
xchg
fwait
addl
shr
jle
sbb
sbb
pop
fmull
jmp
testb
jbe
dec
rcrb
or
add
push
mov
ja
inc
cmp
add
out
out
push
sbb
loop
loopne
pop
pop
lea
shlb
push
out
rcll
jg
dec
loop
push
push
daa
test
std
and
jle
mov
sbb
mov
cmp
inc
loopne
mov
xchg
enter
in
and
clc
ds
cwtl
xor
add
insb
fsubrl
test
in
jo
mov
jecxz
xchg
inc
test
xchg
jl
insl
gs
inc
jne
inc
movzwl
push
pop
push
divb
lcall
jecxz
and
and
pop
into
cs
pop
cwtl
mov
dec
jl
push
xchg
imul
insb
mov
out
add
cmp
lahf
in
mov
pushf
mov
loope
bound
std
jno
outsb
roll
inc
push
push
stos
sbb
mov
mov
xlat
adc
leave
sub
xor
mov
stc
fdivrs
push
outsb
roll
sub
cli
adc
call
add
out
push
outsl
sub
es
jecxz
pop
add
adc
test
lock
push
popa
mov
adcl
sub
int
mov
out
in
outsl
aam
cmp
dec
jecxz
inc
ficompl
ja
push
mov
bound
inc
or
out
mov
pop
and
mov
mov
mov
mov
movsb
in
or
std
fcmovnbe
push
sti
loope
add
inc
sub
lock
jb
negl
iret
pushl
aaa
xchg
test
fldz
cmp
in
dec
dec
dec
subl
ja
adc
pop
cltd
sahf
and
jbe
hlt
sti
jo
pop
out
add
add
sbb
adc
ds
adc
add
dec
lret
lret
push
cmp
pop
sub
cmpsb
xchg
mov
lods
imulb
mov
add
push
and
push
repnz
push
jecxz
xchg
fisubs
dec
loope
lahf
mov
ds
fisttpl
and
fsubp
cmpsb
push
dec
and
sbb
js
or
mov
loop
xchg
xor
jb
popa
loopne
leave
inc
in
ss
mov
shlb
fwait
jle
cld
push
pushf
sbb
fwait
pop
mov
xchg
filds
cmc
inc
pop
cli
es
cmp
fadd
pop
jae
cs
insb
jo
xor
lock
mov
mov
faddl
adcl
mov
xor
mov
int
loope
std
and
sarb
adc
mov
or
pop
sbb
int
pusha
inc
mov
xchg
pusha
or
jmp
mov
dec
sbb
add
idiv
ja
in
xchg
shll
adc
lock
cmp
cmp
jecxz
mov
mov
shlb
xor
jp
push
adc
rcll
cmpsb
and
enter
xchg
test
push
pusha
test
mov
and
push
sbb
jge
sbb
jbe
push
pop
jne
orl
out
jecxz
xchg
xchg
popf
stos
out
pop
mov
cmp
mov
pop
js
dec
jnp
ljmp
lahf
cmpsb
cltd
xchg
xor
and
shrl
fdivrs
push
mov
sub
ss
push
cli
push
mov
repz
aad
xorb
jmp
fwait
xor
nop
shlb
pop
lds
adc
push
dec
or
or
ficomps
jp
dec
jno
testl
shll
out
scas
xor
popa
jmp
gs
sahf
daa
adc
js
inc
add
or
sub
xchg
movsb
mov
out
fmuls
in
inc
cmp
mov
cmc
cmp
cmp
scas
cmc
popf
dec
test
pop
sbb
insl
into
jle
cmpb
loopne
adc
cmc
pop
xchg
je
xor
cmpsl
push
sub
icebp
push
xor
push
and
ss
push
xor
jno
lcall
sub
dec
dec
rol
mov
mov
cmp
add
bound
sbb
sbbb
inc
cmp
hlt
call
std
jge
cwtl
inc
pop
pop
fwait
jne
and
leave
cltd
sbb
dec
mov
inc
xchg
sbb
aas
leave
mov
xchg
loop
std
mov
and
add
mov
ret
movsl
inc
cltd
loope
cmp
mov
cld
into
adc
cmpsl
out
xchg
xor
loope
rcrl
cli
mov
shl
cmp
stc
ficoms
jl
xlat
stos
jmp
jo
std
sbb
inc
adc
sub
mov
xor
add
push
cmp
push
stos
xor
in
jg
pop
add
xchg
pop
lods
pop
pop
and
jno
jo
inc
pop
mov
adc
pop
xchg
mov
repz
and
scas
dec
leave
or
sbb
mov
test
cld
repnz
sub
jno
div
aad
adc
mov
test
sub
fsubrs
jne
fbstp
xchg
inc
mov
lods
leave
pop
sub
sub
cltd
push
dec
ffree
pop
push
pushf
lods
aas
mov
sub
pushf
mov
mov
sub
dec
mov
test
cltd
data16
xor
lock
or
ret
mov
add
add
aaa
das
pop
adc
divl
pop
push
jbe
push
inc
xor
and
aam
jmp
mov
js
pop
sub
dec
push
mov
out
xchg
xor
out
mov
je
push
mov
imul
cld
push
shrb
shll
test
mov
sar
sub
fsubrs
imul
shrb
lea
mov
subl
mov
std
fisttps
add
icebp
lret
aaa
mov
outsb
jns
sbb
orb
in
jb
xchg
xchg
popa
js
mov
pusha
dec
sub
imul
stc
push
daa
fs
and
frstor
outsb
aad
icebp
or
xor
ljmp
xchg
js
bnd
daa
incb
rol
lock
push
outsl
fadds
hlt
sub
mov
push
pop
adc
repnz
fldcw
repz
sbb
dec
xchg
ret
jne
outsb
cmp
in
lods
rcll
pop
cmp
in
jnp
push
cmp
cli
pushf
pop
push
inc
dec
and
add
repz
xchg
xchg
rcrb
test
lcall
or
lods
or
sbb
jmp
fidivs
and
or
je
jl
inc
loop
lcall
sbb
and
adc
mov
xchg
mov
sub
mov
jo
insl
out
mov
fs
arpl
test
negb
jecxz
test
inc
mov
cmp
ja
inc
or
test
cmpsl
inc
adc
mov
lahf
popf
cld
jl
sub
jne
cmp
outsl
mov
fcompl
icebp
loopne
jno
ljmp
mov
imul
aam
jno
ljmp
and
outsl
dec
xchg
lods
jns
dec
je
in
stc
ss
insl
mov
adc
dec
fistl
sub
aas
add
roll
loop
pop
lds
xchg
adc
mov
outsb
shll
adc
xor
sti
push
ds
xor
cwtl
shll
cwtl
adc
cmp
dec
cmp
enter
inc
gs
pop
mov
loopne
mov
cmpsb
sarb
sbb
cmp
push
pop
icebp
scas
push
adc
cmp
fdiv
or
dec
outsb
xchg
mov
sti
pop
mov
dec
stos
pop
popf
xchg
lret
cmpsl
push
ret
lock
out
xchg
iret
sbb
dec
mov
add
pop
push
adc
nop
cmpsb
sbb
mov
adc
mov
sub
adc
arpl
adc
inc
push
jle
in
mov
aam
ljmp
mov
into
test
pop
mov
pop
adc
out
pop
fsts
push
dec
das
jmp
pop
mov
xor
sub
js
movsb
mov
cmp
popa
jg
push
fldl
bnd
add
xor
push
gs
and
arpl
subl
int
imul
pop
pop
jg
pop
lret
ficoml
roll
xor
mov
push
cmpsb
nop
imul
and
test
loopne
out
mov
jmp
repnz
and
rcll
jo
int3
push
enter
mov
mov
adc
ret
sbb
std
jno
pop
sbb
push
mov
ja
cmp
lahf
push
movsl
inc
sbb
movsl
fwait
hlt
push
dec
loope
xor
sbb
hlt
outsb
outsb
inc
inc
test
pop
jg
or
lahf
add
adc
sbb
add
mul
loope
add
jo
jg
jle
xor
ret
pop
sub
cmc
and
jnp
mov
js
xchg
adc
sub
notl
push
add
sub
xchg
pushf
jg
or
inc
push
into
movsl
call
sub
sahf
hlt
cmpsb
daa
inc
sub
push
fldl
mov
jb
notb
gs
push
xor
lcall
sub
inc
mulb
add
push
sub
dec
daa
outsl
in
out
sub
cmpsl
or
adc
out
pxor
fsts
adc
cmp
mov
aam
mov
out
jbe
sbb
data16
xlat
adc
pop
jle
xchg
and
add
push
mov
push
adc
mov
bound
push
cld
pop
and
aaa
push
ret
hlt
pushf
inc
mov
imul
and
hlt
adc
daa
mov
int
or
scas
test
mov
inc
ret
push
hlt
xor
cwtl
sub
icebp
jle
cmp
int3
dec
insl
imul
cmp
push
or
nop
and
out
inc
mov
cltd
mov
jb
dec
movsb
das
outsb
jnp
or
cs
xor
es
jo
lcall
xor
fisttpll
inc
fbstp
cld
cmp
or
sub
sbb
sbb
dec
and
inc
subl
push
jp
cmp
hlt
orb
inc
jo
in
dec
data16
mov
ret
jno
rorl
fistps
repz
lds
arpl
xchg
jecxz
mov
push
loopne
dec
jnp
notb
ja
cwtl
adc
and
jmp
xor
xchg
push
movsb
out
lock
loopne
mov
stc
cmpsl
aam
fwait
ret
out
aaa
lcall
mov
popf
loope
dec
pop
enter
cmp
jne
cld
mov
dec
comiss
jp
add
movsb
imul
fmull
jl
cs
mov
cs
jg
sbb
mov
rorl
pop
adc
push
dec
in
imul
jl
adc
jmp
lretw
lds
cmp
fwait
loop
bound
loope
je
inc
rolb
pop
insl
arpl
mov
clc
rcrb
or
inc
enter
xchg
mov
mov
adc
jecxz,pt
mov
inc
xchg
pop
sub
sub
xchg
in
pop
xchg
mulb
push
jnp
fs
push
stc
pop
cmp
xor
mov
push
inc
pop
cmc
jne
ret
addb
pop
mov
call
movsb
std
pop
imul
sub
sarb
ja
and
sub
pushl
dec
cli
out
arpl
mov
sub
and
movsb
test
push
loopne,pn
mov
ljmp
outsb
mov
adc
cmp
cwtl
pop
sub
dec
and
fisttpl
fbld
fnclex
mov
rcr
mov
xor
xchg
inc
rcrl
jo
xor
jnp
xchg
or
xor
inc
faddl
lret
and
mov
fstps
xchg
or
in
das
xchg
das
push
jp
sub
mov
fdivrl
std
dec
cmp
xor
aas
fidivs
pop
push
mov
stos
lds
notl
xor
pushf
dec
pop
push
mov
shll
dec
xor
mov
aaa
cmpsl
inc
xor
pop
mov
pop
outsb
xchg
xchg
test
xchg
or
dec
xchg
dec
icebp
lcall
fldl
cmp
cs
push
sbbb
and
jle
push
rclb
and
mov
sar
cltd
add
add
jge
jae
test
mov
lcall
je
xchg
push
jmp
shll
sub
fbld
leave
je
adc
pushl
sbb
or
test
dec
dec
fimull
or
pop
inc
mov
lds
outsl
fdivs
mov
jo
insb
jl
jne
rcl
adc
sbb
loop
and
repnz
fdivs
test
lods
push
xor
dec
cmp
ret
lods
nop
ds
cmc
jge
lahf
xchg
inc
loop
push
push
jno
mov
mov
dec
push
lods
ret
sbb
mov
push
add
call
int3
fadd
aam
add
push
les
scas
jp
sbbl
pop
ficomps
imulb
sbb
cld
sub
stc
push
xlat
lret
push
les
add
adc
jo
fistpll
into
mov
movl
fldenv
aad
mov
testb
lea
in
shrl
inc
mov
xor
mov
pand
jnp
sahf
jae
rolb
andl
lds
mov
test
inc
aad
pop
leave
lahf
fdivrl
lea
push
push
aad
aad
icebp
lock
adc
xchg
cmp
xlat
mov
mov
jp
ljmp
pop
insb
cmpsl
push
fwait
out
sub
mov
aam
xchg
push
movsl
push
outsl
loope
sbb
fstp
pop
cltd
in
das
add
sub
jno
into
cvttps2pi
mov
imul
fidivs
push
inc
cmpsl
xor
push
enter
negl
and
jmp
outsl
out
in
or
je
xor
xchg
sub
loopne
fidivrl
dec
mov
cmp
mov
cmp
xlat
adc
ret
jnp
pop
int3
leave
aam
sbb
in
mov
dec
push
sbb
and
xor
cltd
xor
fs
dec
fistpl
mov
dec
outsb
addr16
rcll
add
bound
mov
sahf
insb
xor
addr16
or
mov
and
and
xchg
imul
rcll
mov
mov
lret
xchg
test
mov
inc
adc
jl
sub
int
and
or
out
ret
sub
outsl
xor
mov
xchg
and
push
mov
pop
jmp
decb
lods
dec
incb
jmp
sbb
and
stos
mov
push
aas
inc
add
mov
mov
js
jne
sahf
enter
pop
or
popa
lret
push
shlb
sub
in
movsb
mov
adc
push
mov
push
clc
sbb
or
push
cmp
scas
xchg
pop
mov
xlat
or
outsb
cltd
add
and
rclb
jbe
int3
pop
test
and
lock
inc
xlat
mov
sahf
sarl
stos
adc
sar
dec
add
xor
and
fmul
icebp
jmp
mov
in
sub
loope
lods
daa
or
stc
inc
cmp
loop
dec
addl
out
pushf
in
repnz
clc
movsl
hlt
xchg
push
out
mov
push
mov
or
and
enter
sub
adc
push
cmp
sub
xchg
je
and
mov
int3
push
cmp
arpl
xchg
fbstp
sub
and
imul
sub
lahf
rcr
inc
arpl
jecxz
push
dec
pushf
cmc
or
and
insl
xor
xor
jp
dec
sub
xchg
cs
mov
pop
mov
inc
cmc
and
stos
inc
out
jne
dec
inc
lret
sub
add
lret
fistps
stc
js
loop
icebp
not
dec
lret
sbb
rdpmc
out
mov
mov
ds
fcmovnb
dec
sub
ret
out
mov
out
out
push
or
jmp
aam
jae
lcall
jns
sbb
je
dec
out
rcll
sub
addl
lcall
cltd
jp
adc
shl
and
pop
inc
jecxz
scas
sub
in
push
mov
sti
adcl
jb
and
inc
cmc
sub
xchg
jns
mov
aad
xchg
fdiv
int3
out
adc
pop
pop
push
mov
rcrb
repnz
xchg
dec
aas
mov
jge,pn
pop
mov
pop
jns
xchg
ret
aas
push
scas
xchg
push
push
inc
mov
jae
daa
inc
sbb
xor
insl
add
push
mov
xor
and
aaa
loop
xchg
rcll
add
or
dec
inc
sti
dec
push
mov
mov
ss
scas
cmp
arpl
cmp
add
xchg
cli
jge
mov
mov
jg
js
pop
pop
add
cmp
aam
mov
mov
ja
sbb
dec
jnp
jmp
mov
mov
mov
pop
sbb
insb
adc
and
shl
add
mov
addr16
js
pop
clc
xchg
pop
call
inc
loop
jne
jbe
jp
pop
out
xchg
inc
jo
push
test
dec
sub
cmp
xor
mov
add
add
fsts
add
mov
jo
lret
mov
lods
rcr
fcomi
mov
mov
dec
pop
xchg
or
push
in
mov
cmpsb
xor
push
jg
inc
push
shrb
xchg
ret
xchg
testl
fsubs
or
jne
adcb
push
inc
dec
mov
ds
mov
je
xor
xlat
xchg
inc
ret
xlat
cmpsb
or
jbe
fisubl
jge
sbb
scas
adcb
sbb
add
insl
pop
dec
ret
xchg
fstl
pop
mov
subb
arpl
and
and
jbe
aaa
jnp
scas
into
fstpl
orl
data16
pop
mov
push
data16
ljmp
das
imul
ja
or
jl
mov
sub
gs
aas
movsb
out
setns
mov
faddl
adc
mov
in
stc
pushf
pushl
adc
sti
mov
mov
orps
mov
or
pop
aas
icebp
push
push
cwtl
hlt
fisttps
add
push
in
lock
lret
dec
lret
enter
lret
cli
subl
insb
std
pop
xlat
pop
aad
xor
lret
mov
fmull
pop
xchg
mov
dec
xor
stc
jp
and
cmp
mov
or
jo
sub
cmp
bound
mov
lods
test
inc
jb
or
setle
pop
orb
adc
and
clc
mov
xor
ret
adc
adc
sbb
lret
and
mov
in
data16
sub
xorb
push
mov
and
mov
or
bound
adc
std
adc
jecxz
clc
sub
movsl
sub
sub
addr16
je
lahf
test
fdiv
rorl
inc
inc
sbb
push
fists
lds
mov
andl
xchg
mov
sahf
xchg
mov
dec
pop
mov
cs
lock
inc
adc
frstor
lds
or
lds
pusha
in
jne
push
jg
xchg
scas
leave
arpl
pop
add
repnz
sahf
out
adc
mov
in
xchg
rolb
icebp
mov
addr16
je
push
mov
sub
mov
dec
movsl
movsl
xchg
inc
jecxz
into
in
xchg
mov
out
and
mov
test
jmp
push
mov
xor
or
xor
mov
in
sarb
dec
sarb
sub
push
xchg
pop
hlt
cs
inc
push
jb
test
test
sbb
ds
pusha
adc
into
mov
add
mov
fwait
or
dec
mov
and
mov
data16
mov
leave
push
ja
add
and
aam
adc
frstor
loope
jle
push
shll
pop
outsl
jae
ret
fdivs
sub
enter
sahf
arpl
fisubs
andl
pushf
int3
mov
xchg
jp
xor
rcr
rcll
xor
jge
jmp
jne
or
aam
mov
sbb
dec
mov
mov
or
jp
sub
in
ret
jge
dec
sub
mov
jmp
gs
rcr
push
add
jp
imul
add
sbb
loope
mov
adcb
pcmpeqw
add
leave
hlt
sub
test
jnp
fsts
mov
imul
js
xchg
push
or
xchg
mov
mov
adc
sub
int
cmpsb
shrb
mov
sub
repz
push
mov
mov
sub
sub
lds
filds
jno
repnz
stos
addl
mov
das
jbe
imul
adc
inc
mov
rol
in
mov
xor
jae
add
mov
push
stos
incb
dec
and
je
sub
sbb
jecxz
push
pop
arpl
stos
jno
xchg
cmp
and
dec
cs
lret
fcompl
add
aas
aaa
insb
std
jbe
stos
jb
mov
mov
mov
faddl
sbb
shll
jno
ja
push
adc
fimull
mov
lcall
aas
or
lret
sub
xchg
lds
dec
push
push
imul
push
lea
push
notl
cmp
cltd
stc
mov
jg
dec
subb
jecxz
jecxz
rcr
pop
mov
dec
inc
pop
negb
loope
jge
lea
je
xchg
push
jle
je
clc
and
pop
jecxz
xor
dec
les
and
mov
lock
or
pop
and
movsb
xor
adc
or
pusha
dec
dec
imul
repz
arpl
xchg
pop
push
adc
cli
int3
or
pop
jmp
mov
dec
imul
add
shr
dec
sub
dec
dec
push
aas
repz
sti
cmp
jg
out
rolb
sbb
xchg
fld
or
sub
sahf
dec
outsl
dec
pushf
out
and
out
cli
aad
or
xor
cli
push
lock
mov
sbb
lcall
fs
push
or
xlat
mov
pushf
sub
sbb
sub
mov
or
jmp
sbb
mov
adc
pop
addr16
mov
mov
loop
gs
and
push
pop
push
xchg
cwtl
cmp
jmp
fiadds
fnsave
sbb
mov
push
aad
sbb
adc
jnp
push
jo
iret
and
and
cmp
sub
filds
popf
std
inc
fnstenv
lcall
ljmp
or
cli
push
adc
stos
and
icebp
jp
int3
das
out
or
ds
sub
and
jge
ljmp
jbe
mov
sub
or
inc
pop
pop
sub
push
jl
inc
mov
jbe
leave
push
or
mov
test
ret
subb
aam
mov
push
pop
aad
movsb
daa
xchg
in
fildll
lret
add
adc
inc
lret
lock
out
mov
insl
sbb
jns
xchg
add
insb
mov
and
inc
or
adc
xchg
mov
scas
adc
call
jge
daa
call
push
mov
sti
mov
mov
ljmp
popa
and
ds
xchg
inc
pop
cmp
repz
mov
push
ss
pop
pop
leave
jnp
sub
rcl
push
lea
movsb
dec
adc
aas
or
or
xchg
pop
mov
add
or
shll
movsb
mov
adc
mov
jbe
pop
ja
stos
lahf
or
sbb
or
loope
mov
fs
cmpsl
ficoms
xchg
test
bound
ret
mov
inc
cmp
xor
data16
enter
push
pop
jmp
arpl
fistl
adc
adc
add
jne
test
insb
mov
imul
lret
das
dec
cmp
rep
xor
fnsave
push
add
push
push
ljmp
pop
add
dec
jae
insb
inc
out
add
and
idivl
fldl
sbb
push
sti
pop
call
sub
cmp
add
mov
sti
call
aad
sub
pop
addr16
sbb
cmpsl
adc
or
xor
lcall
fwait
cltd
xor
pop
push
xchg
xlat
adc
lea
mov
daa
int
dec
push
mov
mov
das
xchg
mov
dec
nop
and
xchg
push
and
out
call
jne
test
sbb
addb
call
pop
nop
out
lahf
std
mov
pop
out
cmp
movsb
test
sub
pop
dec
loopne
ss
xor
mov
in
fiaddl
mov
ds
rcrb
ret
mov
fs
cwtl
rorb
xchg
pop
jbe
clc
mov
sahf
pushf
in
fwait
mov
push
arpl
dec
cmp
imul
sbb
xor
divl
cmp
pushf
clc
or
jp
cld
jbe
pusha
rolb
adc
lds
ljmp
push
imulb
push
outsl
out
lahf
faddl
push
xor
rcl
addr16
xor
sub
inc
dec
mov
adc
mov
mov
and
cmc
stos
inc
lods
rorb
push
data16
xchg
dec
pop
mov
mov
push
popa
loope
aam
mov
icebp
andb
hlt
adc
or
sbbb
rclb
imul
inc
int3
mov
xor
jmp
repnz
mov
popa
mov
dec
jl
jp
call
cmp
mov
sarl
cli
adc
ror
jne
jmp
add
mov
mov
xchg
inc
fwait
pop
xchg
jbe
ds
jbe
clc
cld
jb
repz
dec
sub
mov
sbb
sub
jl
lds
mov
call
out
stos
stos
xor
outsl
mov
xor
mov
idiv
push
xchg
sub
aad
lret
add
repnz
cld
or
das
enter
adc
jns
movsb
fstpt
insb
or
jp
mov
lret
mov
mov
sbb
push
xor
test
cmc
pop
lock
sub
leave
ret
jnp
shll
xor
xlat
mov
adc
call
sub
sti
icebp
push
pop
jmp
imul
repnz
xchg
sbb
popf
ficompl
jno
lds
adc
pop
or
inc
push
add
mov
lds
or
dec
insl
jmp
lcall
dec
add
rolb
push
sbb
in
xor
sbb
aaa
sub
sar
sbb
scas
in
out
cltd
xchg
push
neg
push
into
and
nop
out
shrl
dec
cmc
push
xchg
xchg
pop
mov
mov
push
sarl
cmp
inc
dec
adc
jle
sbb
inc
mov
xor
in
or
lock
in
pop
imul
mov
cmpsl
iret
shlb
adc
dec
jecxz
push
xor
lahf
dec
xchg
in
jne
add
inc
xchg
xor
jo
out
and
mov
sarl
add
dec
mov
mov
fldcw
test
mov
mov
xrelease
push
xlat
shl
jns
popf
push
push
cli
aas
pop
out
xchg
adc
daa
dec
xchg
in
clc
fidivl
jecxz
bound
jle,pt
add
xor
jl
mov
sbb
or
jge
pop
mov
adc
test
cmpsl
xlat
xor
nop
sahf
add
scas
pop
jbe
dec
gs
or
int3
push
aaa
leave
mov
pop
mov
mov
fistpl
fnsave
xlat
inc
fnstenv
fsubrp
cmp
add
dec
nop
pop
dec
hlt
mov
mov
mov
cmp
jecxz
push
js
inc
dec
inc
push
aam
and
cld
std
jmp
xchg
into
pushl
loope
xchg
sbb
js
loopne
pop
push
jge
popf
and
lods
int
sub
mov
mov
cmp
mov
outsl
inc
data16
or
divb
aam
es
mov
stos
and
repnz
and
rcrl
repnz
inc
in
push
int3
sbb
inc
inc
mov
mov
xchg
mov
rorb
shrb
lock
mov
dec
mov
mov
push
adc
js
or
cmpsb
insl
xor
jno
or
mov
pop
lcall
xchg
xchg
in
sbb
les
fucom
fistl
xchg
fs
loopne
push
xchg
ja
sahf
jle
jg
adc
adc
and
mov
popa
les
lds
loop
inc
lods
lret
idiv
dec
call
sbb
inc
popa
add
loop
test
rolb
push
ret
fildll
and
mov
jns
mov
in
xchg
sub
aas
xchg
loop
or
cmpsl
push
push
divl
or
dec
xchg
mov
idiv
insl
ret
lret
notl
jo
pop
mov
aaa
sbb
xor
cli
mov
mov
and
fsts
jle
out
dec
jb
or
orb
mov
dec
adc
mov
push
ljmp
sub
mov
xchg
rcr
dec
aaa
lock
dec
dec
stc
fsts
cli
push
in
mov
loope
pop
cmc
xor
inc
ret
mov
sahf
fimuls
lods
push
cltd
jmp
rolb
xor
push
adc
data16
lea
call
add
pop
cmp
es
xchg
sbb
es
mov
jle
loope
adcb
sub
adc
divb
jmp
shl
push
stos
pushf
dec
and
lock
push
cmp
sub
xor
dec
dec
fwait
cmp
in
xchg
mov
xchg
stos
inc
fwait
xlat
mov
pop
jno
or
xor
dec
cmp
push
and
mov
push
js
lahf
xchg
cmp
fwait
lods
mov
mov
adc
cmpsl
cltd
sbb
inc
repnz
xor
inc
lods
sbb
cmp
loope
adc
sbb
subb
jmp
sub
loop
testl
cmp
dec
add
and
into
dec
add
fadd
mov
sub
es
jmp
out
stos
add
xchg
xor
push
cmpsb
push
mov
mov
mov
cwtl
inc
mov
jno
or
icebp
xor
mov
and
jmp
inc
sub
fldl
test
sub
cltd
js
into
sbb
xchg
sub
inc
into
inc
int
gs
loopne
in
jo
push
xchg
pushf
stos
cmc
aam
mov
incb
enter
jle
cwtl
pop
xchg
or
repnz
out
in
icebp
and
ret
incl
jge
jl
mov
bound
jg
cld
ja
out
xor
dec
pop
js
nop
inc
aad
dec
pop
stc
push
xorl
scas
and
addb
sub
sbb
and
inc
cwtl
mov
fs
das
mov
mov
int3
out
loopw
cmp
adc
cltd
js
adc
dec
daa
sub
js
cmp
sti
pop
mov
fwait
cwtl
ja
cmp
mov
iret
pop
push
jne
mov
adcl
pop
push
lock
xchg
dec
popf
lcall
aam
sbb
pop
repz
ljmp
aam
clc
aaa
mov
out
es
mov
and
xor
or
xchg
xchg
orb
int3
mov
sbb
outsb
icebp
test
idivb
push
add
stc
test
into
cmp
mov
pop
js
sub
sarl
rcrb
jmp
add
mov
jae
add
dec
lods
mov
xchg
fisubrs
and
xchg
mov
cmc
dec
cmp
cmp
xchg
test
cli
orb
cmpb
fcoml
fwait
push
inc
mov
inc
mov
add
jmp
add
leave
cs
jle
xchg
cmpb
out
dec
push
mov
ficoms
or
xchg
adc
iret
add
mov
pusha
cld
xor
add
cs
adc
test
lahf
or
mov
or
outsb
movsb
out
insl
mov
jle
adc
pusha
in
jns
or
sbb
es
fidivrs
mov
decb
pop
cmpsb
push
ret
test
outsb
scas
pop
cmp
in
pop
mov
or
pop
ds
mov
pop
pop
sub
popa
sbb
in
adc
mov
adc
mov
dec
lret
mov
mov
mul
adcb
sub
lods
push
sub
lods
fstl
call
mov
insl
in
xchg
add
aas
jge
xor
sti
insl
or
jp
pop
dec
jo
loop
jl
and
jae
adc
pop
mov
jnp
popf
aad
xchg
jl
mov
push
mov
xor
insl
ret
out
dec
and
push
jg
leave
fcmovnu
push
fxch
stos
mov
inc
fs
call
push
int
int3
pop
cld
and
adc
mov
pop
push
jno
mov
ret
cmp
push
lods
sub
iret
stos
sbb
sbb
int3
jl
inc
inc
clc
dec
lea
inc
rorl
sbb
cmpsl
call
fmul
dec
imul
push
mov
xchg
cs
dec
adc
ds
xorl
stos
bound
pushf
lret
mov
lock
call
cltd
fstpt
popl
les
imul
adc
pop
les
pop
insb
icebp
mov
push
fidivl
test
cmp
sbb
out
lea
cltd
inc
push
pop
jno
adc
enter
imul
movsb
ss
bound
xor
adc
pop
fildll
sarl
dec
mov
or
mov
pop
lods
and
sbb
loop
test
iret
enter
enter
mov
int3
jo
adc
sub
cmp
cmpb
push
test
es
rcrb
fisubl
ret
and
cld
subb
lods
dec
sbb
ret
mov
and
in
mov
or
dec
add
sbb
sti
xchg
pop
sbb
les
ret
stos
ljmp
loopne
into
sbb
inc
rcrb
sub
push
inc
test
jbe
sub
fcomps
push
xor
sbbb
xor
and
test
rorb
push
jo
mov
ja
icebp
push
xchg
in
xor
xchg
xchg
xlat
je
inc
pop
push
push
outsl
insl
inc
aas
dec
sbb
fiaddl
push
rclb
inc
js
jp
loopne
sub
out
jmp
lods
ds
lods
cli
push
xchg
sub
mov
pop
dec
dec
cltd
xchg
test
jl
fildl
mov
add
shl
mov
fsubp
cwtl
jns
lea
sbb
rcrl
jmp
mov
jle
jecxz
cmpb
rclb
jno
lcall
das
dec
shll
xchg
or
popf
mov
testb
in
daa
cmp
mov
inc
jmp
mov
in
das
inc
cmc
pop
lds
mov
xor
es
jmp
testl
dec
sarb
iret
sub
jbe
dec
fucomi
sahf
sbb
xchg
xchg
push
sbb
xor
inc
push
jp
push
sbb
fldt
cmp
mov
xchg
pop
push
enter
je
shrb
shrb
add
dec
aas
xchg
sub
leave
clc
pushf
pop
inc
and
mov
jne
adcb
sub
mov
jae
xor
movsl
jne
xchg
shll
inc
dec
xchg
popf
incl
and
ud0
mov
sub
cmp
add
ljmp
cs
and
mov
addr16
push
push
jl
push
ret
jg
mov
dec
sub
js
lods
ljmp
cmp
fldt
fbstp
and
stos
in
mov
cmpsl
daa
push
sbb
jmp
repz
stos
or
and
outsl
aam
sub
arpl
fs
lahf
stos
cmp
dec
sub
fisubl
js
mov
adc
mov
pop
cmp
imul
mov
das
and
mov
sbb
aam
arpl
dec
cmp
sbb
test
popf
adc
dec
mov
icebp
jmp
sbb
add
in
outsl
std
in
adc
lret
mov
dec
pop
xor
dec
test
add
and
or
cmp
shlb
and
mov
xchg
add
jge
clc
pop
pop
repz
add
xchg
rol
fs
adcb
xor
out
jmp
xor
aad
xchg
xor
and
mov
enter
dec
sub
cmp
jo
xchg
std
xchg
mov
cmpl
bound
mov
int3
pop
sbb
lret
jne
fs
outsl
rclb
pop
and
lea
xchg
scas
push
adc
push
dec
popf
jge
xlat
fimull
xchg
call
mov
lods
cmc
rol
cwtl
xorl
das
popf
fsubl
cmpsl
lea
push
and
xchg
pop
repz
ljmp
int
jge
xchg
fidivrs
jne
adc
mov
aad
fcmovbe
insl
pop
mov
mov
sahf
mov
jge
pop
inc
push
jns
mov
aas
es
ret
cmpsl
cmp
pusha
xchg
out
jp
stc
dec
pusha
decb
int
gs
popf
in
xor
xchg
mov
mov
scas
mov
pop
clts
or
push
dec
pusha
inc
scas
and
push
cmc
mov
lock
mov
xlat
lahf
rcr
enter
xor
mov
scas
lret
ret
and
leave
and
aaa
dec
sbb
cmp
leave
rol
dec
shrl
push
adc
mov
pop
mov
adc
cmp
or
int3
jp
pop
lcall
xlat
xchg
and
mov
enter
adc
shrb
jno
scas
xor
add
xchg
xchg
and
sbb
pop
add
add
aaa
stc
fisubrl
mov
je
lret
dec
mov
divl
std
push
mov
aaa
mov
repz
add
pop
push
popf
outsb
test
ja
imul
mov
push
dec
scas
dec
jo
add
xor
mov
pusha
cmpsl
clc
bound
push
dec
stos
sbb
mov
push
adcb
xor
ret
xorl
cltd
sahf
jge
aaa
fbld
jno
cwtl
mov
pop
inc
addr16
repz
xor
sti
pop
xor
push
cld
jno
lret
mov
cmpsl
cmp
loop
inc
imul
pop
sub
mov
out
adc
loopne
add
pop
ds
repz
pop
icebp
fistps
mov
push
add
int3
lea
xchg
lahf
mov
inc
dec
in
push
mov
inc
in
jp
fldt
imul
and
add
sub
xor
outsb
push
mov
sub
lcall
jno
mov
mov
jo
adc
push
insl
outsl
xor
push
xor
adc
mov
sub
ret
push
lods
or
popa
js
in
call
sbb
daa
ds
int
inc
pop
and
in
int3
push
and
popf
lock
shrb
test
mov
sbb
les
xchg
shll
push
cmp
loop
mov
adc
lea
or
push
mov
lahf
dec
repz
push
push
mov
int3
or
xchg
mov
cli
jno
lods
lock
sub
cmp
add
sub
sub
push
pop
movsb
mov
shl
stos
pop
jl
dec
scas
fnstenv
adc
sbb
hlt
cmp
or
fwait
in
mov
dec
pop
lock
jbe
mov
mov
call
inc
mov
lods
xor
lret
sbb
adcl
xlat
or
lds
sbb
int3
jns
push
ret
jns
pop
mov
int
int
pop
push
push
or
xchg
mov
mov
xor
pop
mov
lret
js
cli
loop
add
push
jbe
aad
sub
dec
or
mov
pop
iret
repz
pop
cmc
or
dec
clc
dec
pop
into
inc
push
adc
and
and
mov
sbb
mov
repnz
xchg
aas
clc
xor
push
pop
xchg
mov
inc
pop
sub
es
sbb
aas
clc
test
push
in
shrb
cs
xor
pusha
inc
loop
pop
xlat
adc
or
xchg
cld
xchg
jmp
push
push
shrl
xor
shlb
or
adc
jno
pop
jmp
clc
sub
fists
push
shrb
sbbb
push
cltd
inc
mov
testb
outsb
add
shl
icebp
gs
std
push
sbb
add
arpl
mov
sub
lods
adc
xchg
push
out
scas
in
loope
js
insb
aas
mov
jno
mov
nop
repnz
dec
fmuls
push
xchg
pop
jns
into
lret
mov
xchg
adc
aad
push
out
dec
ret
shl
jb
cmp
mov
sub
xchg
and
cmp
iret
out
ret
arpl
repnz
ljmp
stc
sbb
dec
mov
push
xor
mov
add
jle
js
jo
jg
jns
mov
xchg
mov
sbb
dec
lods
rcll
jmp
mov
lret
cwtl
gs
divb
mov
pop
inc
pop
adc
jbe
xchg
or
ret
popa
mov
js
fnsave
std
cwtl
mov
in
sub
in
call
cmp
mov
ljmp
add
movsl
lcall
fwait
xor
fimuls
add
inc
frstor
sbb
popa
jge
gs
adc
xchg
test
xchg
inc
in
dec
and
sahf
jge
xchg
xor
pop
xor
test
xor
pop
pop
daa
cli
mov
pop
xchg
xor
movsl
sbb
in
ja
std
pop
sub
movsl
aaa
jns
cld
sbb
movsl
fsubrs
aad
jp
pop
jmp
or
fwait
cmpsb
mov
scas
pusha
cmp
pushf
lock
jmp
subb
sar
pop
adc
jae
ljmp
mov
push
cld
fnstsw
jo
addr16
pop
pop
mov
xchg
adc
pop
popf
iret
mov
std
rolb
repnz
rcrb
repnz
xchg
outsb
cmpsb
mov
loopne
dec
sbb
ljmp
sti
inc
push
adcl
sbb
xor
ret
nop
sbb
inc
popa
imul
mov
fmull
fdecstp
cmp
dec
jo
mov
repz
push
push
pop
push
leave
mov
sbb
movsb
xchg
icebp
add
loop
popa
subb
int
and
ds
and
adc
pop
iret
sahf
lods
mov
movsl
fsubrp
push
mov
test
jmp
insl
lods
add
or
sub
xor
push
mov
push
mov
inc
in
nop
dec
or
pop
xor
int
dec
cltd
xchg
fidivrl
cmc
push
scas
push
mov
jg
mov
sub
insb
stos
cwtl
jge
outsl
push
jl
pop
and
jae
jg
cmp
pop
push
mov
xchg
loopne
aam
push
cmp
jae
mov
sub
je
inc
lret
push
pop
xor
pop
mov
rcrl
arpl
push
fxch
gs
dec
cmpsl
cld
cli
fadd
out
mov
add
sub
idivb
test
jns
enter
scas
xchg
adc
popa
push
repz
data16
pop
jle
test
ret
sub
fdivrl
sti
dec
sbb
jmp
mov
jmp
cltd
test
fdivrl
pop
imul
fldl
sub
out
mov
inc
jne
dec
dec
scas
jae
je
cwtl
and
mov
and
fwait
jge
jge
inc
int3
sub
sbb
mov
jl
cmp
icebp
sub
shl
shll
xorl
int3
jae
xlat
adc
cmp
scas
cltd
and
fidivrs
xor
pushf
lods
adc
rolb
pop
repnz
loop
cmp
jns
xchg
ret
pop
in
adc
mov
xor
imul
push
sbb
pop
nop
inc
out
into
jle
insl
push
sar
mov
mov
sub
jge
jnp
adc
jp
mov
xchg
pop
loopne
mov
fidivs
sar
jle
inc
or
xchg
cmp
add
xchg
push
jns
pop
and
xlat
lds
out
push
repnz
popa
and
push
xchg
add
sub
mov
push
adc
xor
jbe
pop
xor
push
sbb
and
js
js
push
jmp
mov
jo
lret
leave
mov
mov
xchg
mov
sbbl
fadds
sub
in
dec
daa
push
sub
pop
mov
xor
outsb
mov
out
sbb
adc
xchg
dec
jns
test
mov
imul
cmpsl
jg
aam
xor
or
xor
jo
dec
lds
or
pop
shl
ja
sahf
push
repnz
cmp
fadd
cmc
int3
push
jecxz
ljmp
imul
pop
shll
xor
jmp
jne
call
add
xchg
or
lds
adc
pop
add
inc
mov
or
mov
mov
push
mov
rolb
imul
push
sti
dec
sub
mov
xor
push
push
or
ret
sbb
in
or
push
sbb
pop
pop
cmpsl
scas
hlt
test
jge
nop
in
add
fldl
sti
lock
inc
sub
nop
test
jle
dec
popf
out
mov
sub
pop
mov
jns
jmp
pusha
mov
inc
movsl
je
aaa
cmpsl
mov
cmpsl
or
pop
pop
outsb
aad
arpl
scas
dec
dec
xor
push
add
int
inc
sub
mov
dec
xorl
aad
push
xchg
hlt
jnp
mov
cmp
rcrl
pusha
inc
cmp
test
xor
mov
shrb
jg,pt
stc
dec
nop
in
mov
mov
xor
fs
inc
xchg
pop
push
push
imul
fidivrs
stc
cmc
dec
dec
and
clc
stos
in
and
jmp
lret
icebp
push
aad
push
imul
push
nop
stc
push
std
xchg
out
rolb
mov
push
sti
add
outsl
or
sarb
ja
fldcw
mov
and
or
adc
mov
test
xor
xchg
cmc
pop
adc
pusha
mov
add
and
rolb
or
xor
mov
dec
pop
sti
pushf
inc
xchg
stos
mov
push
les
pushl
pop
outsl
sub
cld
sbb
adcl
ss
ret
daa
mov
aas
scas
sbb
cwtl
scas
clc
test
in
cs
pop
xchg
sub
rcr
pop
pop
dec
fisubl
mov
cmp
add
jne
scas
cmp
inc
sbb
mov
sub
mov
jmp
mov
push
repnz
cmpsb
dec
out
bound
mov
inc
xchg
jo
fiaddl
stos
dec
inc
jnp
mov
scas
mov
mov
inc
leave
icebp
jmp
add
lea
add
dec
je
sub
or
data16
sbb
add
mov
pop
call
outsb
add
xor
push
popf
mov
lcall
inc
mov
sub
and
popw
jae
mov
mov
fdivrs
pop
out
mov
jb
aad
imul
aas
insb
push
fcmovne
push
test
enter
outsl
test
adc
clc
fnstsw
sub
pop
or
inc
ficoml
xlat
aas
mov
push
outsb
pop
pushf
mov
icebp
add
popa
pop
mov
je
lcall
pop
jl
rclb
aam
push
or
pop
test
jb
xchg
mov
mov
mov
add
popf
jno
movsl
ja
test
fsubrs
jmp
mov
xor
xor
in
inc
lds
aad
adcl
xlat
call
jo
adc
aam
mov
adcl
mov
lcall
mov
cmp
and
xor
lods
mov
adc
inc
dec
push
sbb
bound
fwait
mov
div
sbb
jl
lret
ljmp
outsl
ljmp
ljmp
add
stos
insl
into
jmp
jne
xor
cwtl
lock
test
cmpsb
in
repz
push
insb
stos
dec
adc
jecxz
loop
push
fs
orb
push
mov
push
mov
jns
lahf
addr16
lret
and
mov
out
xor
out
sbb
ss
jmp
sub
cmpsl
ret
ret
jg
pop
bound
inc
icebp
pushf
icebp
sub
dec
mov
xor
mov
inc
cmpsb
loopne
fldz
and
add
cmp
pop
aas
aam
pop
orb
adc
loop
push
sub
nop
jle
out
xchg
mov
outsl
jne
or
sarb
xchg
cmp
push
jl
mov
inc
jns
imul
mov
xor
jne
repz
sti
push
push
ret
repz
jle
and
fnsave
in
movsb
jbe
lcall
fs
cmp
jle
inc
pusha
imul
pusha
pop
out
clc
imul
cmp
and
into
xor
jae
ss
inc
sbb
cwtl
scas
lret
cwtl
dec
enter
xor
pop
mov
movsb
lcall
push
movsb
pusha
push
mov
sbb
and
lds
je
and
adc
dec
sti
mov
imul
rcl
rcrl
jnp
jbe
push
xchg
add
pop
sbb
popa
pop
cmpsl
cs
sbb
jmp
and
cmc
aaa
mov
js
jmp
cwtl
and
nop
adc
jp
cmpsb
jmp
jg
jae
loop
cmp
xchg
test
gs
push
mov
lret
stc
inc
mov
arpl
inc
jecxz
mov
push
outsb
adc
inc
pop
adc
movntq
out
int
int3
xchg
jbe
xor
pop
ljmp
mov
lret
fildl
fs
je
or
adc
dec
outsb
adc
dec
inc
mov
adc
mov
stc
mov
cld
rcrb
dec
js
jnp
fisttpl
mov
pop
fisubs
leave
inc
push
push
sub
stc
lods
cmp
or
je
std
pop
dec
pusha
outsl
call
hlt
jo
push
pop
push
scas
xor
or
lret
sub
adc
dec
ds
mov
lock
inc
mov
mov
aam
jns
mov
dec
ja
andb
jl
lea
inc
ja
add
movsl
test
and
fldcw
lcall
ljmp
subl
aad
ret
js
push
gs
push
push
push
mov
test
lds
push
mov
xor
mov
add
mov
cmp
xchg
add
es
fbstp
outsb
mulb
sbb
sbb
or
in
mov
adc
fnsave
pop
push
out
aas
data16
cmp
scas
push
fmuls
jp
rcrb
adcl
das
scas
xor
add
or
or
xchg
popa
push
lahf
and
jbe
inc
cmpsl
pop
inc
in
push
sbb
les
pop
outsb
insb
jmp
jne
out
or
ss
pop
cmpsl
dec
arpl
outsl
and
loop
pop
jecxz
pop
mov
std
clc
lcall
es
loopne
sub
add
outsb
dec
fmull
jno
lret
ret
fldl
gs
and
lcall
in
xor
insb
cmpsb
sbb
daa
cli
jmp
pusha
movsl
pop
pop
xchg
fdiv
mov
fldl
dec
and
mov
mulb
sub
xor
enter
dec
xchg
inc
cmpsl
int3
adc
sti
jb
xchg
sub
dec
pusha
mov
jge
into
js
roll
xlat
loope
lret
movsb
mov
dec
sub
xchg
nop
insb
mov
fists
push
mov
sub
push
pop
xlat
inc
mov
loope
cmp
and
cmp
pop
fs
adc
in
adc
cmp
enter
jle
lahf
pop
jns
adc
mov
popf
push
mov
sbb
lret
fwait
mov
inc
pop
xor
es
cmpb
push
mov
xor
adc
dec
stos
sbb
cmpsl
jne
test
push
sub
pusha
aam
pop
insl
adc
adc
xor
call
adc
xchg
arpl
addb
subb
mov
insb
cmpsl
lahf
sbb
lret
jbe
mov
outsb
dec
mov
mov
or
adc
push
cwtl
jo
add
hlt
in
inc
arpl
dec
mov
mov
xchg
mov
jmp
sahf
movsb
and
inc
fsub
and
pop
leave
mov
popf
test
xor
and
xchg
and
mov
jne
rcl
rorb
jl
pop
stos
jno
mov
jne
enter
lds
xchg
adc
pop
inc
jp
popa
rcll
mov
divb
pop
dec
xor
std
iret
inc
mov
cwtl
nop
out
out
push
or
dec
daa
adc
out
or
inc
fiadds
inc
dec
add
push
lahf
dec
out
adc
nop
movl
push
gs
push
push
outsb
inc
and
sub
push
dec
sub
mov
mov
repnz
jo
popf
push
push
movsb
mov
movsb
mov
into
pause
xlat
imul
jle
dec
xor
pop
push
cltd
pop
mov
mov
xchg
ja
or
imull
es
lret
mov
scas
or
jmp
jmp
fldl
les
jbe
enter
pop
in
fistps
ficomps
push
leave
cmp
xchg
or
xchg
into
lahf
or
in
arpl
outsb
repz
mov
dec
inc
xchg
pop
aaa
cmp
iret
sub
xchg
popf
incl
dec
aam
and
movl
xorb
inc
stos
push
pop
and
fcomps
jne
rcl
xchg
push
add
fdivs
aad
sbb
mov
add
popa
mov
sahf
sbb
mov
xchg
cmp
adc
pop
jno
jb
gs
fcompl
stc
sub
mov
ljmp
iret
call
sbb
push
adc
nop
out
and
adc
mov
push
adc
pushf
pop
xor
out
inc
lcall
inc
inc
pop
add
adcl
rorl
aam
inc
sbb
mov
pop
daa
xchg
inc
pop
sub
pusha
pop
lret
call
cs
inc
jb
mov
cmp
or
add
iret
sub
fs
jle
sbb
dec
movsb
negb
sub
lahf
orps
xor
inc
in
adc
adc
lods
sbb
iret
sbb
and
ficoml
xor
data16
jg
cmp
push
andb
push
cwtl
ja
mov
test
push
sub
and
dec
aam
decb
shrl
pop
lahf
ret
cmc
jmp
add
xchg
adc
sti
lcall
call
jmp
movsb
sbb
mov
std
xor
insb
hlt
mov
adc
shl
jno
xchg
gs
push
int
adc
mov
lods
sub
test
xor
mov
push
add
scas
test
jnp
push
out
inc
push
and
mov
jle
int3
and
leave
xor
das
xor
and
pop
sub
sbb
push
test
je
sbb
stos
insl
out
mov
aam
xor
sub
sub
adc
dec
adc
cltd
mov
pop
xchg
dec
mov
inc
aas
cmp
cld
push
cwtl
xor
rcrb
push
cmpsb
bound
mov
test
mov
fidivrl
sub
roll
cmc
inc
xchg
push
mov
add
xor
out
mov
push
scas
xchg
dec
imulb
fwait
and
cs
mov
daa
cmpsb
sahf
sysexit
ret
and
inc
aad
call
push
add
sbbb
rorl
dec
lods
inc
inc
mov
idivb
fs
pusha
mov
pop
sub
jns
popa
outsb
jmp
std
cmp
loope
pusha
mov
jle
adc
pushf
and
fidivl
movsl
xor
int3
mov
dec
addr16
add
ret
adc
jb
movsl
adc
call
cmp
lcall
test
add
ja
mov
sahf
lods
mov
push
jno
hlt
xor
popa
pop
ljmp
ja
add
adc
mov
xor
inc
pusha
and
dec
setbe
adc
aaa
lret
pop
push
inc
sbb
roll
push
jns
movsl
test
insl
sti
or
repnz
cmp
repz
xchg
jg
sub
cmp
lea
loope
add
sbb
and
sub
mov
inc
and
jl
dec
fstpl
mov
or
lods
pop
push
cld
sbb
inc
bound
and
scas
mov
adc
sahf
or
push
xor
sub
adc
filds
pop
out
mov
jae
mov
es
lea
pop
pop
out
xor
mov
mov
es
lcall
add
xchg
cmp
mov
out
sti
sbb
mov
adc
jno
popf
loopne
test
clc
push
xchg
fsubl
lods
mov
fucomp
mov
jle
enter
fidivl
cmpsb
insb
sbb
jne
fistps
lods
pusha
and
sbb
inc
scas
loop
lock
lods
lahf
popa
adc
mov
insb
sbb
and
inc
jp
push
cmp
add
pop
mov
dec
xor
iret
in
or
roll
jb
movsl
loope
outsb
cmp
jle
jmp
movb
fadds
mov
xchg
adc
lock
jae
stos
fnstenv
push
mov
jae
int3
addr16
xor
aad
addr16
mov
pusha
mov
xor
inc
das
xchg
mov
jne
inc
xchg
jno
add
sub
cmp
movsb
jnp
cmp
cs
jecxz
loopne
sbb
cmp
fisttpll
inc
jmp
cmp
jns
aam
add
pop
cmp
sahf
sub
add
insb
cltd
sub
data16
jne
pop
xor
push
add
sub
cld
mov
and
aaa
das
xchg
mov
mov
and
fstl
in
mov
sbb
shlb
out
ret
lods
mov
lods
pushf
pop
inc
inc
lret
lret
add
pop
lret
js
popf
mov
movsl
outsl
jmp
cmp
mov
push
xchg
cmp
pop
hlt
sbbb
mov
movsb
sbb
xor
test
xor
jmp
push
test
rolb
in
or
mov
jae
push
push
mov
lods
push
addr16
popf
nop
cmp
pop
insb
je
dec
push
popf
roll
sbb
cmp
mov
lock
sub
xchg
pop
cld
les
jae
xor
rol
ljmp
aas
std
mov
pusha
xor
adc
cmp
push
aam
cli
ds
or
fcoms
out
je
cmc
or
mov
loopne
mov
loop
daa
push
dec
add
insb
clc
jecxz
cmpl
fnstsw
and
movsb
out
mov
add
pop
push
pop
sahf
in
sub
pusha
mov
fbstp
push
mov
inc
jne
adc
mov
testb
or
dec
mov
sahf
mov
mov
fldl
sub
mov
dec
jnp
faddl
enter
mov
stc
int3
jp
push
rcll
sub
mov
call
mov
add
rcl
cwtl
push
iret
sahf
lds
sub
into
dec
leave
push
adc
in
aaa
pop
imul
cs
nop
call
inc
ret
out
xor
mov
mov
repnz
mov
shl
sub
bound
das
inc
sbb
inc
loope
icebp
xlat
sub
and
sub
test
jge
lock
xchg
into
dec
pop
shll
mov
test
pop
or
mov
inc
push
pop
fisubs
testl
sub
mov
in
jns
dec
mov
cmpsb
jo
pop
mov
clc
cwtl
or
aaa
call
sbb
fbstp
jl
cmpsl
idivl
or
fdivp
adcb
rcr
jge
jo
jbe
pop
adc
hlt
popa
pop
ret
mov
daa
inc
pop
or
jo
lret
xchg
dec
push
jg
cltd
fbld
and
adc
std
cmp
leave
add
jnp
mov
cmp
mov
sbb
mov
rclb
fisubl
push
enter
mov
enter
cwtl
jl
mov
hlt
jnp
xchg
into
push
pop
sub
jmp
test
lds
push
fsubrs
scas
mov
call
mov
movsb
jmp
sbb
test
shr
sbb
lcall
outsb
lods
daa
xchg
push
mov
jg
mov
mov
adc
add
inc
das
pop
cmp
outsl
int3
shll
xorl
imul
pop
call
jae
repnz
xchg
pusha
pop
sub
stos
jge
mov
addr16
ficomps
jbe
and
sbbb
jmp
sub
add
push
stc
cwtl
xor
cmp
push
fsubl
cli
xchg
dec
cmpsl
fstl
imul
rorb
adc
sbb
dec
inc
test
mov
jge
jmp
ret
pop
pop
mov
xchg
xor
bound
enter
or
xchg
xchg
jl
inc
sbbl
call
in
es
aam
and
test
popf
pushf
fdiv
xchg
fdiv
aaa
sbb
aas
sbb
cmp
test
aam
loopne
jb
pop
enter
push
jne
orb
jnp
or
push
dec
sarl
orl
jno
jb
xchg
push
cmp
mov
xchg
icebp
jbe
mov
xor
inc
xor
aas
xchg
fdivl
ja
mov
push
push
jb
add
mov
js
fnstsw
push
mov
add
filds
xchg
inc
out
push
imul
mov
sub
mov
jl
test
mov
out
cwtl
inc
jge
xchg
push
fildll
mov
pop
xchg
push
jle
pop
movsl
cld
mov
dec
jmp
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
lcall
sub
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
dec
ss
nop
daa
test
add
pop
ret
mov
fisttpll
or
sub
popf
ffree
dec
dec
jecxz
cmp
mov
insb
mov
mov
lock
and
movsl
xchg
fisubrl
incb
or
call
out
xor
pop
int
movsb
repnz
test
stc
bound
daa
fstl
fcmovu
dec
jo
xchg
pop
in
test
iret
or
xchg
mov
add
pop
data16
dec
stos
push
inc
sub
mov
jbe
test
lock
sub
mul
or
outsb
mov
hlt
mov
or
mov
mov
in
test
mov
mov
jl
sub
mov
or
mov
mov
or
mov
mov
pop
and
pop
loop
hlt
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
popf
xchg
outsl
push
icebp
insb
mov
mov
mov
push
push
xorb
insb
mov
mov
push
int3
js
testl
data16
mov
add
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
int3
cmc
or
sbb
sarb
stc
std
push
mov
sbb
cmp
out
push
sbb
popa
out
out
lea
xchg
out
int
lods
mov
sub
push
mov
cmp
xor
xor
scas
mov
movsb
pop
outsb
dec
add
rolb
push
out
mov
jbe
lahf
add
mov
mov
setns
outsl
stos
xchg
mov
mov
daa
shrb
ret
xorb
jno
shll
enter
inc
fstpl
jno
cmp
pushf
fmull
push
mov
mov
out
dec
nop
xchg
and
dec
aad
or
jg
adc
fldenv
lret
test
leave
jle
dec
or
repz
icebp
fs
in
hlt
mov
popa
rclb
mov
or
mov
inc
in
sub
mov
mov
mov
cmp
popf
shrl
fisubrs
aaa
pop
fnstenv
subl
inc
jmp
fcoml
cmp
imul
and
xor
mov
decl
mov
in
mov
push
cmp
leave
xor
add
and
pop
xor
xor
lea
jg
jo
pop
push
cs
mov
cwtl
mov
fs
pop
sbb
repnz
shrb
push
popa
into
fucom
outsl
push
push
test
pop
xchg
out
fnstenv
jo
xor
bound
or
mov
mov
lcall
add
pop
repz
divl
ds
push
push
push
pop
ss
frstor
ret
or
push
mov
in
sbb
outsb
cld
push
push
push
sub
pop
or
and
nop
fwait
aas
leave
pop
scas
and
mov
test
pop
lock
inc
push
or
or
jb,pt
jge
xor
repnz
outsb
jne
xlat
adc
pop
inc
dec
adc
jecxz
jb
lods
adc
dec
sub
mov
ja
insl
lods
mov
mov
xchg
dec
pushf
mov
divl
aad
push
out
repnz
cwtl
iret
push
mov
adc
mov
sbb
stos
cmp
push
jle
adc
and
mov
aaa
inc
or
fsubs
pop
xchg
xchg
out
mov
fidivrs
dec
fs
fiaddl
movsb
fwait
outsl
jecxz
add
add
aam
test
aam
daa
and
add
jns
ret
repnz
or
das
pusha
ret
pop
push
leave
shr
push
ret
cmpsl
cmp
sbb
shrb
push
scas
dec
cmpsl
repz
push
xor
jle
negl
jmp
inc
dec
out
mov
std
repnz
xchg
push
or
gs
mov
in
sub
scas
loope
fistpl
inc
fwait
xor
sbb
pop
and
das
pop
lds
and
into
mov
mov
pop
nop
dec
dec
cmc
xor
lods
jmp
fimuls
cmp
dec
mov
xor
mov
xorb
mov
popa
iret
loop
sub
mov
add
fbstp
in
push
and
and
mov
lcall
clc
int
mov
roll
mov
mov
mov
je
shlb
jmp
pop
mov
call
xor
mov
out
fildll
sbb
fwait
ret
pop
pop
test
sub
xchg
ljmp
enter
mov
xchg
jmp
or
jns
jle
sti
repnz
outsb
insl
and
js
jns
dec
cmp
mov
sbb
jo
arpl
push
mov
mov
mov
cmp
call
ss
dec
jl
loop
push
sbb
mov
xor
test
push
insl
pop
sahf
dec
mov
cmp
xor
push
stos
jo
xor
jmp
repnz
dec
sbb
out
and
mov
mov
sbb
test
pushf
pop
mov
incl
push
adc
into
mov
add
adc
jbe
push
mov
daa
cmp
jmp
mov
xchg
shlb
loop
jmp
inc
nop
dec
sub
xor
out
mov
das
push
mov
std
ret
xchg
dec
jnp
xchg
mov
sub
outsl
add
push
dec
inc
pushf
orl
data16
loopne
cli
mov
dec
nop
lcall
sti
adc
and
dec
cmp
or
jmp
and
dec
lahf
or
inc
and
sub
into
std
jne
mov
jns
pop
loop
clc
xor
mov
or
jne
cltd
adcb
ds
fstl
xchg
pop
sahf
std
xlat
sbb
fmuls
mov
outsb
rclb
out
add
clc
mov
iret
in
hlt
push
clc
popf
mov
adc
shr
out
add
add
ljmp
cmpsb
cmp
jb
mov
out
xchg
push
repz
push
xor
and
hlt
insb
pushf
cmp
pushf
test
jg
jecxz
daa
stc
in
notb
scas
call
xor
cwtl
mov
pusha
pop
fucomi
jne
out
and
sbb
sub
rcrb
loop
mov
lret
xchg
cmp
inc
adc
or
ffreep
movsl
xchg
cmp
push
cmp
mov
subl
mov
mov
mov
cmpsl
xor
pop
mov
pop
jno
out
test
adc
xchg
scas
inc
xchg
rcll
jne
push
ss
xchg
inc
sub
mov
push
mov
sub
ljmp
push
add
clc
fwait
sahf
in
cmp
in
pop
lods
adc
mov
andl
inc
pop
gs
fwait
iret
cs
mov
cmpsb
pop
loopne
pop
push
cs
js
mov
ss
es
popf
sub
xchg
push
xlat
adc
sbb
mov
popa
mov
cmp
add
adc
outsb
cwtl
or
js
out
mov
sti
xor
mov
mov
cwtl
cmp
xor
cwtl
test
mov
add
movsl
pop
loopne
dec
pusha
data16
or
jb
inc
in
loop
mov
xchg
xor
push
mov
xor
mov
iret
les
mov
xchg
lock
rclb
in
pushf
push
mov
dec
ljmp
lret
jmp
mov
add
jg
icebp
adc
xchg
std
je
cmp
or
fimuls
scas
pusha
push
rcrb
sub
andb
dec
stos
pop
imul
mov
pop
out
mov
negb
repnz
notb
and
adc
ljmp
inc
stc
xor
fisttps
js
cld
enter
jmp
lret
jno
jbe
jmp
cmc
shl
loopne
lods
and
icebp
mov
sbb
and
insl
push
mov
lret
in
mov
gs
pushf
cmpsl
add
idiv
or
jns
dec
mov
push
cmp
clc
cmpsb
mov
out
cmp
push
mov
add
dec
dec
jne
sbb
ret
mov
sbb
movsb
cli
cmp
movsb
mov
push
rcr
mov
js
outsl
mov
mov
into
dec
out
jecxz
jle
call
mov
sbb
jmp
pop
std
add
iret
push
in
and
pop
and
rclb
mov
mov
push
gs
nop
xor
inc
repz
stos
xchg
sbb
clc
pop
jae
rcr
out
stos
jmp
test
sub
out
and
xorl
jg
pop
rcl
cmc
das
test
shlb
mov
jne
nopl
mov
xor
xchg
push
sahf
dec
add
ret
cmp
mov
add
lods
jl
xor
fldenv
or
sbb
jae
cli
test
adcb
lock
jo
fmull
jb
faddl
sbb
push
fstpt
sbb
jmp
adc
jmp
push
stc
mov
cmpsb
mov
jle
movsl
and
std
push
dec
mov
pop
addr16
sbb
out
inc
lock
dec
nop
add
cld
je
nop
clc
and
pop
add
jb
cmp
repz
ja
xchg
outsl
or
mov
daa
pop
xchg
sar
idivb
testl
sub
xor
xchg
ret
into
mov
xchg
xchg
sahf
or
push
push
jb
shl
clc
jne
mov
mov
mov
loopne
add
push
adcl
xor
cmp
xor
out
push
xchg
leave
loope
pop
daa
inc
sbb
lds
pop
or
addr16
push
sub
cwtl
jae
dec
xchg
pop
imul
push
cld
add
test
fnstcw
push
fists
rcrl
or
in
xchg
pop
mov
mov
sub
aad
dec
mov
dec
push
push
jecxz
sbb
mov
pop
in
lret
push
xor
pop
mov
adc
js
psllq
xchg
mov
aas
popa
mov
mov
cmp
xchg
push
fcoms
xor
gs
scas
cmp
hlt
sbb
nop
jns
push
mov
dec
inc
rorb
mov
sbb
shlb
je
xor
pop
jle
push
mov
es
sbbb
mov
push
push
push
push
mov
in
sbb
adc
xchg
nop
faddl
lcall
stos
js
push
inc
or
insb
mov
mov
outsl
pushw
repz
ret
enter
inc
and
add
lea
cli
data16
xchg
outsl
test
sub
scas
mov
cmc
adc
pop
adc
sbb
int
ret
pop
xchg
or
mov
and
stc
hlt
js
sub
sub
sub
jg
push
or
cmc
lds
ret
inc
mov
adc
rorl
ret
lods
and
repz
pop
out
add
ficoms
lret
movsl
jge
push
loope
inc
nop
mov
daa
xlat
shll
pop
fisubl
jle
sub
inc
iret
inc
fcmove
mov
aad
fs
jle
movsl
inc
in
aam
jmp
xchg
call
pusha
sti
int3
push
cmpsb
mov
lcall
lock
orl
sbb
pop
push
das
imul
test
xchg
in
mov
adc
mov
ds
test
adc
daa
sbb
push
nop
in
rcl
mov
in
inc
inc
jne
jp
xchg
push
xor
out
mov
cmp
push
js
pop
outsl
adc
test
ret
test
ja
and
mov
je
and
pop
popa
jecxz
je
mov
repz
bound
lret
dec
pop
icebp
mov
mov
sub
push
ret
lock
push
out
mov
imul
lock
or
rcl
andl
push
pop
mov
scas
dec
mov
cmc
lret
push
hlt
jns
xchg
push
push
ljmp
pusha
jbe
sahf
cmp
subl
out
jns,pn
add
out
stos
inc
call
dec
out
movl
jb
add
in
leave
rcrl
add
pop
and
mov
repnz
pop
sub
mov
hlt
shrl
btc
adc
shl
sub
pop
fstl
cmp
aas
jl
clc
jns
das
mov
inc
pop
cmp
mov
push
scas
inc
inc
cmp
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
