dec
cmp
mov
dec
dec
fdivl
int
dec
mov
or
xchg
mov
mov
xchg
push
repz
fisubs
xchg
mov
pusha
sbb
cmp
push
push
lods
xlat
ja
inc
and
and
mov
lret
jge
lret
lret
pop
stos
aad
loope,pt
scas
mov
test
and
and
aaa
xor
mov
lds
sbb
xchg
lcall
popa
xchg
repz
mov
push
insl
mov
int
pop
xchg
je
mov
lahf
adc
dec
push
inc
bound
std
sub
sbb
inc
aaa
fistl
xorb
add
fcomip
clc
imul
pop
sub
pop
push
je
cmp
and
and
ja
dec
cwtl
int
pop
popf
mov
xor
mov
mov
out
stos
jl
incb
jae
mov
adc
mov
mov
mov
ror
out
ret
in
sbb
orb
push
inc
outsb
pusha
jge
popf
push
cltd
call
test
mov
push
test
es
in
adc
sbb
imul
push
imul
add
xor
sub
sbb
xchg
loop
in
adc
inc
push
cs
insl
dec
dec
bound
or
mov
imul
inc
mov
cmpsb
dec
sub
and
and
sub
test
ds
cmp
sbb
jno
jge
jge
scas
adc
pop
xchg
inc
push
xchg
call
ret
daa
scas
movl
sbb
mov
xchg
mov
loope
imul
mov
into
lahf
or
stos
int
sbb
xchg
push
sbb
inc
pop
jb
sbb
inc
leave
fistpl
mov
jbe
sub
xchg
pop
xchg
jecxz
xor
jp
mov
inc
repz
jg
jns
lret
cmp
repnz
or
mov
jno
rcll
jp
test
jb
lcall
fdivp
stos
rolb
dec
add
movsb
sub
xor
in
shrl
mov
insb
inc
popa
inc
leave
sbb
cmp
idivl
out
imul
les
into
in
dec
jmp
test
test
ret
jmp
xor
imul
mov
cmc
testl
adc
gs
inc
cmpsl
or
sahf
js
pusha
sub
imul
dec
sub
pop
push
mov
mov
mov
xchg
push
and
aas
lods
jle
outsb
ljmp
pop
dec
or
and
and
rorl
mov
push
cmc
or
add
cmc
ja
daa
mov
fisttpl
jp
jp
push
inc
popf
or
mov
or
rorb
rol
ljmp
je
mov
mov
cmpsl
sub
cli
fwait
js
jb
stos
cmp
jp
cmpb
xchg
js
mov
mov
cmp
xlat
jge
push
xchg
faddl
xchg
std
mov
jno
sbb
je
stos
xor
push
sahf
or
sbb
xor
cs
aam
mov
in
xor
fdivp
or
adcl
inc
add
aaa
repz
or
jmp
mov
pop
das
xchg
loope
jl
jecxz
insl
enter
mov
xlat
std
rclb
pop
jle
aad
jbe
dec
jno
mov
mov
ss
cli
mov
sti
jb
xchg
dec
xchg
adc
hlt
inc
pop
fisubrl
sub
fs
mov
sub
loope
pop
adc
jg
xor
pop
pop
adc
in
ror
stos
insb
xchg
push
loop
push
inc
add
shll
mov
xchg
decb
cmpsl
insl
addr16
mov
cs
or
mov
iret
loopne
ja
dec
insb
push
jnp
cmp
es
jne
adc
cmp
cmpsl
aaa
or
cmp
lahf
shll
scas
in
push
fstl
jns
rol
ret
into
js
test
inc
aas
das
int3
stos
and
xor
mov
xchg
cmc
clc
popa
lahf
dec
test
repnz
fs
jmp
dec
dec
icebp
mov
arpl
lret
fs
lods
ja
push
jg
push
enter
inc
call
imul
jmp
insb
das
mov
dec
cmp
into
and
ljmp
loop
fcom
sub
std
int
add
cmpsb
inc
lds
hlt
add
adc
push
nop
sarl
push
mov
sub
cmp
aaa
es
or
mov
lods
repnz
sbb
sahf
mov
movb
cmp
mov
adc
ja
push
mov
scas
mov
addr16
into
cltd
inc
repz
jno
ljmp
insl
inc
and
adc
push
aaa
vunpcklps
push
lea
loopne
or
decl
add
sub
mov
js
mov
pop
flds
fld
sti
or
add
jbe
aad
xchg
mov
in
divb
mov
push
mov
test
mov
les
xor
lret
push
cwtl
add
daa
mov
lods
xchg
int3
shlb
dec
out
jbe
cs
test
inc
inc
lret
cmc
or
cmp
xchg
pop
pusha
sub
push
jns
mov
xchg
fwait
xor
fdivl
jp
cmc
inc
mov
push
fcoms
gs
cmp
rol
repnz
sub
sub
dec
das
add
in
es
in
das
cmp
mov
ljmp
fadd
fcmovnb
sbb
mov
popf
mov
jbe
out
pop
repnz
jb
pusha
mov
sti
jmp
test
inc
push
push
shlb
or
or
xchg
push
mov
mov
cli
xor
pop
inc
sbb
cmpsl
mov
mov
fstpt
loope
xchg
push
fistps
popf
loope
icebp
mov
inc
cmp
and
fimuls
dec
dec
in
out
dec
xchg
arpl
cmc
jl
test
jmp
iret
insl
xchg
pop
orl
push
cmp
mov
cmpsl
add
imul
or
pop
mov
dec
push
aas
jecxz
add
in
mov
aaa
notb
insb
push
cltd
jl
push
mov
js
push
mov
les
adc
push
test
gs
mov
mov
xlat
cmp
loope
fildl
add
lods
sahf
shll
inc
dec
addr16
add
scas
push
xchg
nop
mov
cwtl
insb
xchg
or
mov
dec
push
outsb
push
andb
mov
push
jno
jne
out
hlt
inc
subl
sbb
pop
icebp
hlt
mov
insb
mov
mov
cltd
sarb
sahf
and
mov
loope
pushf
repnz
inc
and
mov
xchg
cs
fsts
inc
adc
std
cwtl
stos
xchg
negb
jmp
cltd
mov
sub
rcl
adc
ja
lea
pop
stos
hlt
fisubrs
pop
jecxz
mov
ss
insb
movsb
sbb
push
inc
pop
aam
popa
loop
movsl
mov
jb
sub
push
pop
cs
and
sbb
adc
enter
mov
out
scas
sub
hlt
in
xchg
scas
popa
out
mov
stc
cld
inc
xchg
ffree
and
adc
push
jne
cmp
loop
add
jb
ja
ja
imul
pusha
das
xor
push
inc
sbb
mov
xor
adcb
push
mov
imul
mov
stc
shr
cmp
ja
out
jns
mov
pop
add
lret
les
sbb
rorl
push
test
je
leave
call
push
or
aad
mov
and
mov
push
cmp
inc
mov
sbb
mov
popa
fiadds
jbe
add
popf
int3
push
enter
or
sbb
outsl
icebp
and
cmp
cmpsb
jnp
shl
mov
ficoms
adcb
out
pop
pusha
call
pop
stc
xor
lret
jge
cmc
xor
jg
cmp
xor
push
lret
or
and
jno
daa
pop
ds
and
int3
dec
push
lcall
sti
sti
testl
aaa
ljmp
call
imul
mov
in
xlat
jmp
mov
jo
xchg
ror
xor
or
jno
mov
xchg
addr16
lahf
jecxz
data16
das
lahf
mov
xchg
cmp
pop
fildl
rcrl
mov
jb
scas
out
cmp
push
push
nop
lods
cmpsl
mov
mov
mov
daa
and
push
imul
xchg
mov
sbb
test
outsl
andb
pop
mov
cs
mov
push
nop
push
mov
dec
mov
adc
sti
andl
sbb
adc
jo
cs
dec
aas
je
movb
fcoml
out
and
jge
inc
ret
mov
fwait
sbb
movsb
lods
imul
add
psubusw
xor
movsb
pop
xchg
add
xchg
jb
mov
pusha
sub
notl
nop
or
mov
lahf
push
jp
push
loope
fmull
lea
popa
sub
inc
shr
dec
jbe
pop
decl
gs
mov
adc
mov
lea
xchg
xchg
sbb
test
cmp
cli
popf
leave
shr
or
lret
shrl
push
push
add
mov
dec
les
cmpsb
cwtl
mov
push
fldt
mov
push
jecxz
out
mov
popf
loope
insl
lock
xor
ja
int
jp
popa
lock
inc
sub
xchg
sub
ret
fisttpll
loop
mov
inc
orl
mov
cltd
lahf
in
mov
lret
fnstcw
std
out
or
stos
and
push
mov
aaa
dec
mov
add
or
sbb
pop
mov
jnp
push
lret
add
push
mov
mov
adc
jns
jne
lds
add
push
shr
shll
test
pop
push
sub
xchg
outsl
jne,pt
xchg
inc
jns
in
fdiv
out
orl
sbb
cltd
gs
xlat
push
in
mov
cli
mov
fcoms
push
adc
outsl
je
jge
push
mov
les
adc
jmp
push
jbe
flds
jnp
push
out
div
scas
and
mov
dec
scas
popf
mov
xchg
mov
cwtl
ficoms
mov
loop
cmpsb
jbe
sbbl
jl
sbb
imul
ja
adc
jmp
frstor
and
cmp
and
roll
jnp
or
xchg
mov
mov
in
fisubrs
cmpsl
shll
pop
int3
sub
insb
loope
popa
cmp
push
mov
pop
xchg
and
test
xor
sti
decb
testl
movsl
cmpb
call
test
push
inc
push
popa
test
jg
dec
cs
lods
out
push
sub
jg
add
and
adc
cmp
sub
iret
aas
sub
dec
mov
mov
pusha
std
jle
or
fs
les
mov
push
dec
lods
shrb
jae
add
fisubrs
loope
fucomi
mov
lea
insl
lret
jp
xor
xchg
dec
inc
sbb
or
out
adc
cmpsl
push
xchg
sbb
std
ffreep
pop
mov
push
ljmp
repnz
in
add
daa
sbbl
sarl
insb
ret
divb
notl
mov
mov
shrb
aaa
push
pop
ss
in
aad
sub
inc
lret
mov
jo
mov
sub
movsl
imul
sti
outsl
or
fdivl
cmp
ljmp
cli
adc
sbb
xor
test
push
ja
test
xchg
and
jmp
cwtl
jp
dec
ret
dec
mov
mov
outsb
jmp
pop
int3
mov
pusha
dec
cmp
outsl
pop
jne
stos
sbb
repnz
imul
cmc
lahf
bound
repz
pop
jb
into
int3
xlat
leave
dec
jmp
and
xchg
inc
mov
negl
out
rcll
jmp
push
fiaddl
int3
mov
setno
imul
mov
pushf
mov
and
xchg
test
orb
and
lret
shrl
dec
dec
push
pop
jmp
lock
popf
fpatan
xor
push
shl
pop
pop
add
cmp
dec
ret
pushl
xor
add
aas
jb
std
pop
bound
sub
daa
cmp
aad
popf
jns
cmp
push
sbb
test
leave
lret
fdivs
xchg
xchg
mov
push
inc
daa
aad
in
stc
scas
into
or
xchg
enter
loope
sub
dec
test
sub
xchg
jo
adc
inc
imul
mov
jb
mov
fiadds
sbb
call
popf
pushf
adc
sbb
mov
jmp
xchg
dec
lods
out
xor
xchg
xor
mov
pusha
not
adc
clc
cltd
cmp
sbb
jmp
iret
add
xchg
into
mov
cmpsb
jge
add
fwait
dec
and
mov
notb
xchg
sbb
mov
push
cmp
xchg
sub
repz
xchg
fwait
in
sub
shlb
rclb
mov
or
mov
dec
push
popa
cmp
js
imul
mov
dec
xchg
in
arpl
loopne
sub
xchg
mov
sbb
push
and
scas
fcomps
dec
iret
mov
cmpsl
pusha
mov
ds
push
dec
cwtl
loope
jne
repnz
sarl
cli
rolb
dec
mov
sub
sbb
add
sbb
orl
divb
add
xchg
outsl
xchg
pop
sub
sub
iret
jmp
mov
add
insl
lock
add
mov
fisubrl
pop
dec
repnz
hlt
cmp
stos
inc
fstpt
mov
and
adc
mov
dec
mov
gs
or
ljmp
movl
pop
push
push
mov
nop
push
lock
cmp
ljmp
in
test
dec
mov
dec
push
in
and
les
fcmove
cwtl
sub
sbb
mov
fld
dec
fldenv
insb
mov
push
xor
or
clc
shl
push
ds
js
or
inc
pop
push
loopne
scas
je
inc
mov
out
pop
xchg
shll
inc
test
inc
mov
adc
popf
pop
in
sub
push
adc
jne
fiaddl
push
mov
and
jne
outsb
orl
pop
jne
fiadds
cmp
xor
or
jle
out
pop
lock
lret
mov
fnsave
aas
mov
out
push
sub
loope
sub
je
mov
paddsb
hlt
mov
sub
gs
xchg
and
push
cltd
adc
mov
imul
sub
das
outsb
jne
dec
push
mov
pushf
test
gs
data16
fisttpl
jbe
call
shl
adcb
and
mov
hlt
imul
arpl
xor
daa
inc
adc
pop
movsl
loopne
in
mov
push
or
aam
or
arpl
pop
push
xchg
aad
sbbb
or
shrl
loope
out
jno
inc
xor
xchg
lods
in
dec
test
jns
cld
add
lock
xchg
jmp
aas
rorl
pop
insl
cmp
adc
sbb
jge
xor
push
mov
sub
iret
mov
pop
gs
inc
dec
out
cmp
sbb
mov
xchg
jnp
pop
sbb
jge
push
in
and
lods
popl
inc
sub
xor
dec
enter
icebp
cmp
mov
and
xchg
roll
jns
and
xor
cmp
out
xchg
ds
adc
mov
popa
dec
out
ret
xor
imul
add
or
cltd
gs
sti
add
in
push
pusha
out
mov
clc
mov
mov
push
and
sar
xchg
ds
movsb
popa
jl
rclb
mov
dec
sbb
flds
divb
mov
lds
pop
or
push
fwait
popf
jnp
mov
lock
push
movsl
sub
jge
mov
inc
repz
lret
cmp
sti
mov
sbbl
out
es
aad
daa
xchg
add
jl
sbb
imulb
xor
mov
and
stc
data16
adc
or
fld
hlt
jle
inc
repnz
test
push
pop
repnz
xchg
int3
mov
sbb
mov
inc
add
test
push
decl
shl
and
push
mov
adc
push
int
notl
jae
pop
push
or
cmp
inc
pushf
sbb
test
loopne
dec
and
push
iret
jbe
dec
repnz
inc
or
jge
fnsave
jl
xchg
xchg
push
out
mov
dec
cs
cmp
adc
in
pop
pop
jge
ja
movsl
xchg
sub
mov
push
sti
nop
ljmp
sti
add
mov
cwtl
jg
dec
inc
ffreep
sub
cmc
pusha
jno
orb
sub
in
xchg
or
add
and
or
cwtl
mov
ret
xchg
xor
dec
pop
mov
xchg
lcall
xor
push
imul
pop
mov
rolb
push
dec
hlt
stc
cmpsb
fcmovnbe
jge
sbb
jno
daa
push
nop
mov
xor
imul
or
cmp
jl
pop
out
inc
ficompl
mov
mov
inc
jl
fnstcw
pop
scas
cmp
bound
imul
jp
rcrb
lret
xor
es
lcall
out
inc
idiv
icebp
jmp
aas
cmp
out
test
ret
icebp
sbb
xchg
dec
clc
inc
xorl
push
xchg
dec
cmp
cli
inc
test
or
lahf
add
scas
mov
int
mov
int
imul
jo
xor
insl
xchg
mov
cmpsb
push
push
mov
incb
hlt
and
xchg
inc
jb
gs
xlat
mov
cmp
adc
popa
and
jne
movsl
leave
mov
lds
scas
repnz
pop
cmp
repnz
lock
pushf
jecxz
lret
pop
movsl
iret
adc
add
push
insb
pop
int
push
sbb
dec
ud1
mov
or
gs
xor
xchg
sbb
mov
ljmp
popa
pop
jg
shrb
cmp
pop
pop
popf
cld
pop
lcall
xchg
imul
lods
cmp
imul
sbb
icebp
xor
dec
in
mov
cmpsl
mov
mov
loopne
push
push
fucomp
movsb
stos
negb
enter
ljmp
outsl
pusha
in
or
ljmp
and
jle
push
out
lret
adc
and
imul
mov
fsubrl
cmp
jp
int3
and
imul
sbb
cmp
iret
out
mov
mov
pop
sbb
pushf
mov
aam
les
orb
sbb
jmp
xor
gs
arpl
test
sbb
nop
vpcomud
popf
in
xchg
inc
push
lahf
iret
repz
and
pop
dec
push
es
shlb
js
addr16
jae
mov
mov
es
sbb
pushf
xor
arpl
adc
rolb
fs
fs
and
adc
inc
push
das
shll
mov
pop
or
jecxz
mov
mov
into
jmp
or
lea
stos
es
lods
mov
fwait
aaa
cmpb
mov
push
es
testb
pop
xor
cmp
inc
jmp
in
xchg
lods
int3
stc
fsubrp
idivl
or
sbb
pop
push
mov
sub
push
popa
insb
cltd
jns
out
arpl
cli
xchg
pop
xchg
test
jb
dec
sbb
push
movl
dec
add
lret
gs
and
adc
jp
inc
add
repnz
mov
js
dec
adc
sub
pop
cld
cmc
add
push
cwtl
mov
or
mov
popl
cmpsb
popa
pop
sbb
int3
cmpsb
popa
or
pushf
div
out
je
or
mull
push
js
rcrb
cmp
dec
mov
cmp
jge
mov
pop
lods
in
iret
je
lea
icebp
xchg
mov
jo
dec
popa
fldl
sbb
rolb
sbb
push
and
jnp
int
test
repnz
or
and
cmp
push
scas
cmp
dec
and
stc
push
xor
sub
jl
out
or
test
xchg
push
jns
cmp
int
sub
mov
push
lahf
xchg
sub
or
lds
int3
cltd
sahf
xchg
dec
add
lret
mov
rorb
jno,pn
daa
pop
xchg
mov
inc
push
js
jle
jo
mov
ror
mov
dec
js
fsubrl
insl
add
mov
sub
je
add
and
testb
mov
xchg
ljmp
pop
stos
jecxz
jae
lahf
pusha
jg
adc
filds
push
push
xor
iret
les
jno
adc
fidivrs
mov
repz
push
pop
adc
sbb
sbb
into
push
sbb
and
push
cmc
pop
mov
dec
lea
test
loop
push
add
jp
jo
xor
sbb
push
xlat
sti
mov
push
inc
in
xchg
enter
enter
mov
adc
mov
je
inc
hlt
xchg
imul
inc
jmp
insl
ds
xchg
stc
push
jb
cli
scas
std
xchg
jmp
adc
sub
sub
lahf
inc
sub
push
popf
xchg
pop
out
jns
fwait
add
sub
mov
out
sub
mov
into
xchg
adc
movsb
icebp
dec
dec
dec
mov
out
mov
ja
negl
popl
data16
shll
or
xchg
loopne
adc
sbb
cmpsl
loopne
movsl
add
lods
pop
lret
mov
loop
xor
mov
pop
adc
fiaddl
in
push
cwtl
testl
fdivrs
in
mov
cmp
adc
test
and
jbe
adc
mov
push
leave
jg
push
in
push
insl
stos
pop
dec
and
adc
jmp
push
jnp
aam
nop
mov
adc
aas
adc
push
mov
test
ffreep
push
iret
sbb
repnz
push
mov
pushf
push
loope
scas
div
test
cmpsl
jb
mul
fnsave
ljmp
mov
divb
insb
fildll
cmpsl
and
lds
mov
and
outsl
imul
mov
add
dec
lock
popf
clc
mov
mov
in
notl
pop
movsl
jae
jecxz
or
push
cmp
mov
and
add
cmpsl
out
das
add
jne
dec
sbb
mov
ucomiss
clc
push
and
ret
test
adc
xchg
sbb
mov
cmpsb
xchg
mov
nop
lea
push
rorb
addb
sub
mov
lahf
gs
sbb
or
fldt
mov
cmc
sub
push
xor
fcmovnu
aad
xor
aam
jns
mov
mov
and
data16
leave
pop
iret
movsl
inc
pop
xchg
lret
bound
or
pop
lret
xor
push
ja
fwait
cmc
ljmp
dec
add
js
iret
add
mov
push
mov
xchg
orl
fisubrs
push
cmp
jecxz
fucomip
mov
mov
mov
pop
add
cmp
sbb
dec
push
out
shll
jnp
je
pop
jns
arpl
add
cmp
jp
add
push
jbe
sub
iret
hlt
sbb
shlb
xor
jo
cwtl
fistpl
dec
lods
jmp
outsb
enter
aad
imul
mov
aad
incl
pop
sbb
test
pop
in
mov
push
mov
imul
lcall
test
cmp
loop
push
pop
inc
xchg
lds
push
cmp
xchg
pop
pop
xchg
xchg
adcb
inc
rol
xor
jecxz
test
inc
xor
or
mov
aad
xchg
sbb
or
or
inc
js
mov
lcall
dec
js
icebp
inc
inc
ja
adc
rorb
inc
cwtl
sti
xchg
aad
dec
mov
push
test
sbb
movl
add
addr16
loop
pop
mov
jne
push
ficomps
pop
lret
push
mov
xlat
cwtl
stc
cmp
pop
sub
cld
dec
nop
addr16
mov
adc
sti
sti
shrl
jmp
dec
sub
incb
adc
in
xchg
sub
pop
mov
subl
dec
cltd
push
cmp
and
push
jnp
lret
xchg
fisttpl
in
add
fwait
xchg
adc
cmc
xor
mov
jecxz
hlt
jle
fldl
jno
or
lea
adc
lret
icebp
and
sub
fimuls
ja
addr16
add
mov
dec
sbbl
pop
imul
push
sub
or
xchg
inc
idivb
push
popa
imull
mov
ret
outsb
add
stos
adc
jne
add
xor
repnz
dec
out
mov
inc
jne
mov
sub
shl
sbb
int3
pop
aaa
in
rcll
mov
test
test
cli
scas
rcrb
sbb
ret
push
or
iret
int
xchg
mov
enter
addr16
mov
in
frstor
pop
fstps
jmp
ret
push
test
cli
fcompl
imul
push
jbe
cmp
dec
js
insb
dec
adc
add
lret
ds
pushf
xchg
and
shll
scas
bound
cli
mov
xchg
fidivrl
push
jge
rolb
ret
dec
adc
jnp
sub
sbb
xchg
add
pop
inc
adc
sbb
xchg
arpl
sub
in
call
xchg
fnstcw
enter
roll
lds
scas
add
sbb
out
push
bnd
jp
cmp
add
pop
adc
hlt
decb
out
dec
in
adc
addr16
mov
mov
fisttps
sti
insl
pushf
cmp
jp
ja
js
inc
xor
sub
inc
add
xchg
mov
push
cmp
pop
pop
flds
jnp
outsb
push
add
mov
jae
jge
rcr
divb
ljmp
insl
les
in
sbb
pop
stos
push
add
lea
jmp
clc
notb
push
ficompl
pop
in
lds
repnz
xchg
jmp
pop
pop
pushl
and
xchg
cltd
jbe
cmp
inc
xor
in
add
jle
out
test
lock
mov
lea
icebp
pop
sub
cmp
mov
outsl
xlat
mov
test
add
int
repnz
xchg
push
or
mov
aam
fidivs
sub
fsubs
fdiv
in
mov
stc
pop
xchg
push
into
cmp
cwtl
xchg
mov
hlt
adc
sbb
xchg
mov
into
fwait
mov
movsb
sbb
lods
repnz
pop
call
inc
sub
sbb
xor
mov
pop
xchg
scas
push
pusha
into
test
lock
mov
popa
pop
popf
gs
jl
push
xchg
movsl
sahf
xor
xor
pop
stos
cmp
pop
adc
mov
subl
xor
xor
cli
mov
in
sarl
stc
mov
pop
lea
nop
cmp
xlat
or
cs
mov
jae
jle
cmp
push
cld
xchg
ret
in
repnz
roll
jmp
mov
jmp
int
fxch
in
mov
repz
cmp
test
adc
cmpb
es
scas
and
sarl
ja
cmpsb
ret
movsl
jle
cli
fiaddl
lods
push
stc
pop
jne
test
lret
dec
add
and
mov
clc
mov
mov
orb
adc
je
jns
sub
xchg
push
mov
cmpsl
or
xor
iret
sub
adc
push
xor
xor
mov
dec
or
adc
dec
jge
mov
aad
fwait
push
pop
pop
es
mov
and
xchg
mov
inc
and
sub
dec
roll
loop
hlt
or
mov
iret
shr
scas
pop
mov
inc
and
fistl
mov
and
fdivs
pop
dec
leave
push
rcl
xchg
fistps
mov
lcall
sbb
scas
imul
iret
inc
add
lret
xor
pop
sub
into
rclb
add
test
jg
mov
enter
adc
pop
push
jae
adc
cmp
xlat
xor
push
scas
dec
or
dec
test
lods
dec
sub
xor
cmp
aas
daa
sbb
loope
aaa
cltd
imul
pushf
dec
cmp
mov
inc
ret
adcb
lods
dec
out
cld
adc
sahf
cmp
insb
sbb
test
ss
mov
call
push
mov
arpl
out
or
addb
adc
xchg
push
ss
lahf
mov
adc
dec
xor
adc
rcrl
add
adc
sbbl
jl
clc
mov
ds
pop
or
or
inc
sub
pop
push
pop
cmc
dec
hlt
jp
iret
fcmovnbe
jne
pop
adc
mov
xchg
xchg
push
push
sub
and
dec
in
dec
std
ret
pushf
push
in
aam
repnz
hlt
push
repnz
pop
repnz
jg
push
jae
addb
inc
out
cmp
imul
add
fcoml
addb
loopne
xchg
in
mov
in
lret
in
stc
mov
gs
mov
ret
xchg
cmpxchg
lea
cmp
shlb
xchg
call
ja
adc
jge
dec
punpckldq
sti
mov
mov
sbb
orl
cmp
push
adc
mov
data16
mov
fs
cmc
fwait
sub
and
mov
iret
clc
cmc
pop
and
rorb
pop
sub
repnz
mov
cs
adc
enter
lcall
add
test
fcmovnb
mov
inc
mov
fwait
mov
jp
pop
inc
in
je
int
cmp
sub
movsb
stos
lret
in
sbb
dec
movsl
fiadds
sahf
jae
mov
sbb
xchg
mul
scas
or
xlat
jbe
xor
leave
sub
mov
inc
pop
es
sub
aad
mov
lret
in
mov
in
xchg
lods
adc
add
adc
pushf
mov
stos
add
in
add
jns
xchg
fmull
mov
shl
loope
xor
push
cli
sbb
lock
cmp
ret
pop
loop
das
loopne
fadds
dec
inc
xor
mov
out
pop
aas
ds
into
callw
jmp
jnp
scas
nop
adc
lods
jecxz
out
call
pusha
dec
pop
scas
push
loop
mov
adc
adc
nop
mov
mov
xor
or
mov
ljmp
xchg
xor
call
mov
mov
out
pop
lar
movups
xor
inc
loope
adc
push
popl
call
out
cmp
dec
sbb
mov
or
add
loopne
push
ficoml
push
or
popf
adc
fidivrl
jmp
mov
es
gs
outsl
fildll
xchg
out
pop
and
add
jb
sub
mov
mov
and
push
jo
lock
enter
jle
in
leave
clc
jo
xor
sar
pop
iret
insl
add
stos
adc
push
sbb
inc
xchg
push
inc
jne
lea
mov
sub
xlat
aaa
pusha
cs
mov
fimuls
imul
ficoms
in
fidivrl
push
xchg
scas
mov
out
loope
sbbl
push
ss
pop
out
sbb
cmp
mov
xchg
popf
and
int
mov
add
and
rcrl
fwait
and
sbb
fmuls
or
jbe
pop
pop
shlb
push
and
ljmp
mov
pop
xchg
mov
inc
add
imulb
call
cwtl
jne
int3
pop
int3
pop
repz
out
sbbb
ret
or
and
mov
or
das
mov
dec
xor
dec
cmp
and
icebp
test
inc
out
lahf
adc
inc
insb
and
push
push
sub
test
std
dec
inc
fimuls
pushf
cli
push
pop
out
push
push
dec
mov
and
in
lock
rclb
push
out
shrb
aad
movsl
mov
or
test
cltd
adc
mov
xchg
sub
leave
xor
mov
popf
lock
push
mov
xchg
xor
adc
in
pop
repnz
jnp
outsb
jno
fidivrl
mov
jl
mov
mov
mov
aad
mov
les
jnp
nop
jl
pop
push
pop
push
jge
inc
pop
add
adc
cmpsl
push
lret
call
aam
lret
es
outsl
sub
push
mov
sbb
pushf
popa
or
dec
insb
sbb
ret
or
pop
in
and
cmp
test
xor
pop
rol
stos
loope
dec
mov
mov
jo
sub
xchg
je
push
mov
in
and
imul
cmp
mov
add
lea
popa
test
out
jp
imul
das
das
mov
pushf
adc
repnz
in
xchg
addr16
xchg
add
xor
repz
in
sbbb
sbb
aam
cmp
sub
loopne
shlb
fstpt
sbb
xchg
and
out
jne
lods
cmpsl
popa
sub
jno
aas
xchg
push
pushf
pusha
shll
dec
bound
ret
addr16
sbb
pop
lds
jae
mov
popa
aaa
pop
push
add
mov
aam
out
dec
stos
daa
outsb
cmp
inc
mov
mov
pop
fmul
in
leave
divb
dec
mov
jo
rcll
cmpsb
bound
dec
mov
in
cmp
ljmp
es
leave
mov
and
into
pop
lods
jmp
jns
xor
add
mov
pop
mov
int
stc
jnp
xchg
fwait
mov
flds
sub
add
jp
pop
test
jb
repz
sbb
pop
pusha
imul
and
mov
push
cmp
xor
aas
xchg
daa
loop
fnstenv
cmp
mov
in
xor
cmc
mov
or
mov
sbb
movl
sbb
adc
mov
push
inc
ljmp
xor
rolb
push
add
test
into
outsl
push
lea
movsb
xchg
cmp
mov
xchg
or
pop
adc
fsts
push
sub
pop
loope
pop
mov
in
cmp
push
pop
cmpsb
xchg
jge
push
xor
cmpxchg
loope
adc
cmp
sub
test
std
dec
sahf
aam
sbb
cmp
xor
sahf
pop
pushf
mov
add
push
and
je
add
shll
ficoml
lret
pop
adc
addl
inc
int
stc
stos
push
dec
imul
dec
xlat
lcall
lock
dec
loop
insb
adc
cmp
outsl
les
sahf
push
sbb
call
test
aas
data16
gs
add
aaa
arpl
sub
incb
shl
jmp
add
push
sbb
ret
nop
jle
dec
jle
cmp
sbb
sub
push
jle
ret
push
bound
jle
outsl
outsb
add
out
and
fisubl
lods
xchg
mov
add
sub
and
fisttps
mov
in
inc
jo
mov
sahf
ljmp
insb
pop
or
mov
nop
add
or
push
out
and
int
in
cmp
mov
mov
adc
xor
sbb
rclb
inc
sahf
les
lea
dec
ja
test
adc
cli
je
in
jg
jl
mov
mov
push
sbb
sub
and
scas
ljmp
inc
lds
or
cmp
mov
enter
call
or
push
xor
cmc
and
in
xchg
out
sub
sahf
stos
in
push
xor
sarl
cmpb
aas
sbb
repnz
push
cmpsb
pushf
mov
cmp
cmp
adc
cld
push
int
add
jns
and
das
and
je
push
sbb
or
mov
pop
lods
sbb
enter
sahf
jo
and
loope
insl
mov
loopne
pop
test
cmp
sbb
pop
mov
mov
int3
push
cmp
xchg
mov
mov
lahf
stc
sbb
xchg
add
out
ret
cli
mov
enter
sahf
mov
xchg
mov
sbb
add
imul
arpl
or
sarb
leave
lods
cmp
jae
fnstcw
fwait
push
out
dec
add
dec
xchg
cmp
stos
fisubrs
nop
fsubl
cli
mov
imul
pop
scas
call
int
dec
xchg
pushf
push
aad
push
mov
sub
push
mov
or
sbb
xchg
insb
lahf
mov
call
cltd
pop
pop
addl
popf
dec
cmp
lock
mov
push
cmp
jecxz
jne
test
or
or
xchg
xchg
pop
mov
mov
jmp
mov
pop
cmp
xchg
rcll
pop
repnz
dec
lods
lods
or
aam
in
insb
jno
enter
xchg
fistpll
dec
xor
in
push
psubusw
popf
jle
rcll
shr
sbb
incb
cmpsb
push
repz
mov
lods
test
jae
test
repz
inc
mov
jo
arpl
inc
sub
rolb
imul
fdivr
mov
icebp
arpl
adc
fwait
cld
adc
cmc
cmp
xchg
xchg
in
loop
std
add
gs
push
mulb
sbb
ds
lods
pop
sbb
xor
inc
cmp
out
cmpsl
out
fsubl
xchg
ljmp
sub
adc
sub
push
sbb
inc
and
inc
or
mov
imul
pop
lea
mov
xor
es
mov
xor
loopne
ljmp
jo
int
pop
sbb
bnd
in
flds
fcomps
shl
stc
cmc
push
or
mov
pusha
mov
xchg
adc
mov
enter
mov
or
stos
mov
jno
sar
cltd
push
hlt
cmp
repnz
xchg
xchg
orl
jecxz
inc
fbstp
mov
jge
sbb
out
sbb
insb
out
fs
mov
mov
popa
das
xor
jmp
adc
jmp
jg
leave
arpl
mov
imul
dec
inc
fwait
rorl
mov
jbe
adc
bound
dec
iret
sub
pop
imul
loopne
mov
decl
arpl
inc
notl
fildl
and
lret
or
cmp
sub
sub
xor
ret
call
loop
cld
push
imul
sbb
movsb
jne
cvtdq2ps
cmp
pop
mov
clc
adc
int
dec
dec
outsl
add
aas
cmp
sahf
lret
mov
dec
mov
xchg
pop
cmp
fnsave
ljmp
call
or
cmp
jmp
insl
pop
cmp
cld
lds
repz
loopne
jle
lds
jno
ljmp
lock
int3
orl
mov
jnp
idivl
sub
lcall
push
iret
ds
fildll
dec
or
shll
dec
cmp
jle
out
adc
sub
cs
rcrl
inc
mov
pop
inc
test
imul
jae
mov
aas
shll
gs
dec
sbb
pop
pop
dec
mov
inc
into
push
imul
push
loop
inc
dec
je
pop
adc
push
inc
sbb
das
insl
pop
mov
xchg
jne
adc
or
add
enter
mov
xchg
add
sub
jno
into
jp
jecxz
sbb
sbb
mov
scas
ret
pop
fbld
das
push
inc
push
mov
xchg
repnz
mov
scas
in
sar
scas
mov
mov
pop
mov
mov
mov
fsubs
es
push
mov
je
xchg
bound
jge
or
sahf
add
daa
cmp
lea
xchg
filds
loop
roll
adc
lcall
cmp
push
sahf
mov
pop
dec
leave
push
rorl
fsubl
cmp
addb
shl
mov
sub
dec
fstl
test
aas
test
xor
add
push
lock
dec
iret
std
loop
pusha
mov
or
sbb
add
dec
insb
xchg
fldcw
push
and
call
iret
js
mov
jae
push
jo
xor
jl
sahf
cmp
notl
sub
mov
out
mov
cmp
and
rclb
mov
popf
pop
pop
hlt
cmp
loopne
jmp
outsb
sbb
lock
rcll
push
add
cmpsl
out
lods
pop
jne
xlat
cli
andb
xchg
mov
mov
imul
pop
jecxz
cmp
daa
xor
inc
insb
imul
loope
pop
push
dec
ss
aad
fsubr
add
and
cltd
xor
jg
lret
leave
push
dec
dec
mov
out
ss
push
push
xchg
mov
mov
dec
and
decb
add
inc
push
and
mov
in
push
xchg
dec
sar
enter
into
jmp
lcall
or
jmp
pop
push
orb
dec
fbstp
push
loop
push
popf
push
bound
test
std
push
lret
cmpb
jecxz
jno
icebp
aad
repz
dec
testl
adc
inc
jl
xchg
ret
adc
sub
or
push
out
inc
sbb
iret
repnz
xorl
pop
dec
out
lret
je
push
sub
jecxz
pop
in
jmp
rcrb
xor
cmp
nop
es
push
repz
fidivrl
fbld
movsb
test
rcr
int
insb
mov
add
mov
popf
pushf
dec
dec
lock
pop
shrb
xchg
adc
xor
or
xchg
lret
push
fwait
pop
inc
jmpw
ret
cmp
add
add
shlb
ds
push
pop
push
hlt
iret
cmp
pusha
cmpsb
test
aam
add
outsl
mov
scas
out
mov
movsb
outsb
pop
and
mulb
add
into
fists
adc
mov
lahf
mov
icebp
int
mov
bswap
into
dec
jg
lahf
sbb
lock
in
mov
inc
push
pop
in
cmp
notl
xchg
push
jnp
inc
addr16
xor
ss
clc
je
flds
fwait
push
xchg
add
call
dec
add
xchg
inc
cmp
dec
sbb
arpl
fsts
mov
push
sbb
arpl
aas
sub
into
cmp
inc
aad
mov
mov
enter
leave
outsb
mov
test
add
or
sti
adc
mov
mov
xchg
ljmp
fdivr
push
lods
mov
pop
push
scas
out
adc
pop
cltd
and
shrl
pop
mov
ljmp
sar
sub
sbb
loopne
iret
icebp
inc
mov
ljmp
push
add
ret
fs
mov
cld
test
mov
lret
and
jbe
adc
push
lods
into
into
inc
jno
inc
dec
and
push
mov
adc
push
xor
xchg
lahf
jb
jle
retw
pop
jae,pn
aas
xor
mov
jl
mov
adc
in
fdiv
out
popf
lret
lea
xor
xor
pop
dec
pop
add
sbb
fs
out
shrl
pop
sarb
push
test
ret
jmp
mov
rcrl
cmp
jb
cs
xor
sti
push
daa
in
aad
push
adc
jmp
sbb
mov
loopne
mov
jae
jae
push
sub
mov
push
les
fsubr
adc
aad
sbb
fcoms
mov
mov
jge
push
or
fs
pop
fs
and
psrlw
pushf
mov
std
jecxz
mov
shl
in
sbb
xor
pop
lret
xor
insl
jg,pn
andl
pusha
xchg
leave
cli
mov
addr16
mov
push
test
jmp
push
or
push
xor
loopne
xchg
push
sub
cmp
scas
jecxz
cmp
xor
test
inc
insl
fimull
add
jecxz
test
pop
xchg
add
sbb
hlt
sti
pop
aas
xor
iret
dec
cmpsb
push
push
mov
aam
jl
scas
adc
mulb
les
jg
lcall
in
and
ss
in
out
jne
stc
outsb
icebp
or
pop
mov
sub
ret
js
and
sub
xlat
dec
aad
call
sub
sahf
mov
inc
jae
lahf
lcall
and
mov
jg
sub
inc
mov
lahf
xchg
adc
mov
push
and
ror
xchg
jge
in
xchg
and
mov
jno
xchg
in
shrb
in
psllw
sub
popa
roll
out
jmp
shlb
cmp
hlt
or
fiadds
pop
mov
push
fsubrs
dec
les
dec
sub
rclb
rolb
cld
inc
incb
jmp
sbb
and
cmpsl
out
and
pop
iret
ficoms
xor
mov
ds
sbb
jnp
test
adc
and
dec
add
xor
int
add
add
push
aaa
mov
fs
scas
mov
mov
mov
fwait
sub
cmpsb
add
into
cmc
orl
aaa
test
mov
cltd
cld
stos
je
mov
imul
mov
or
pusha
pusha
hlt
lock
mov
cmp
and
cmp
cmp
mov
outsl
sub
or
outsb
fisttps
adc
adc
add
subb
cld
adc
lret
cmp
icebp
js
jb
and
jmp
movsl
xor
mov
adc
add
mov
sub
and
add
lret
mov
negl
push
xor
std
jl
cwtl
stos
push
jne
aas
inc
inc
lret
mov
notl
mov
or
std
push
stos
imul
cmp
and
jo
adc
mov
in
mov
mov
jecxz
movsb
jp
cmpl
testl
lock
xor
dec
ljmp
jge
test
cmpsl
jge
mov
mov
inc
stos
dec
test
andb
push
fprem
xchg
xchg
push
mov
push
bound
inc
rolb
ds
out
push
ds
repnz
lret
adc
jnp
rorb
adc
ficomps
dec
js
push
rolb
stos
lock
dec
pop
cmp
mov
mov
out
mov
loope
inc
repnz
daa
sub
nop
repnz
mov
push
push
push
jne
lret
jae
cli
cltd
lock
lahf
stos
pop
daa
les
xchg
iret
inc
and
sbb
insb
test
orb
aaa
ret
lahf
in
mov
sbbb
mov
inc
ficoms
and
fcmovbe
out
dec
adc
pop
out
sub
sbb
jno
inc
adc
xor
call
ljmp
pop
mov
xor
sbb
fsubrs
repz
std
movsb
ja
fstps
pop
enter
sti
mov
xchg
mov
pop
jne
repz
repz
scas
addr16
dec
fisubs
int3
cmpsl
xor
adc
arpl
ds
aas
sbb
cmp
mov
hlt
add
push
rol
stc
push
jp
cld
cmp
and
add
xchg
in
jbe
pop
xor
test
xchg
les
cmp
cmp
popf
popf
mov
mov
mov
lret
ljmp
shl
add
or
cmc
movsl
mov
cmp
xchg
add
sti
jg
aas
andb
sbb
sub
mov
cmp
cs
ds
push
ret
xlat
mov
xchg
outsb
adc
loop
adc
inc
clc
inc
arpl
fists
cmp
aam
mov
jns
dec
sbb
fs
out
movsb
mov
lock
inc
or
mov
or
mov
dec
inc
push
mov
call
push
hlt
stc
mov
or
mov
jp
mov
lcall
push
sbb
or
test
addr16
xchg
hlt
cmpsb
jmp
inc
test
cli
js
or
adc
cwtl
jmp
xchg
xchg
divl
inc
xlat
hlt
mov
lock
push
push
mov
inc
sarl
lea
inc
mov
adc
xor
mov
enter
mov
xlat
dec
les
push
and
or
xchg
cmp
movzwl
mov
imul
fidivs
mov
ret
loope
imul
sbb
or
aas
addl
shl
adc
bound
movsb
idivl
test
xchg
mov
mov
and
dec
ljmp
and
sub
xchg
daa
cmp
mov
in
push
sub
popf
aas
mov
adc
xchg
imul
data16
popa
jle
or
xor
testb
inc
pop
cmp
sub
notl
pushf
lcall
insl
jno
into
aas
adc
repnz
in
jge
cs
sub
clc
push
lret
in
sbb
and
jnp
or
sahf
add
push
out
lock
mov
push
mov
cmp
lea
pop
pcmpeqd
jne
and
jbe
push
pop
add
mov
inc
lcall
stc
loope
mov
cltd
bswap
imul
mov
popa
repz
stc
dec
fistps
fildll
xchg
jmp
adc
lock
lods
out
add
fadds
mov
rcll
sbb
cmp
xor
into
mov
inc
xor
mov
mov
or
and
xchg
test
mov
push
xchg
pop
cltd
sbb
repnz
push
dec
dec
or
and
nop
out
jns
arpl
xor
aad
mov
lret
push
or
jp
mov
mov
mov
or
in
add
out
stc
rcrb
test
dec
int
mov
add
outsb
imul
or
adc
add
sub
push
push
or
sub
push
jo
sbb
imul
xchg
mov
ret
mov
les
cmpsb
mov
addr16
lock
mov
mov
mov
or
leave
addl
adc
sarl
mov
iret
jecxz
fcoms
add
mov
loopne
scas
or
cmp
xlat
push
cli
and
add
mov
arpl
int3
jo
mov
jbe
int
nop
out
ficoml
xchg
jb
sarb
out
jnp
fstps
jne
inc
aaa
aas
loope
mov
cmpsl
lock
and
jbe
jge
addl
lock
filds
jo
dec
imul
pop
cmp
mov
orl
adc
mov
mov
insl
inc
aas
jnp
mov
lods
fcmovu
xchg
adc
cmp
jge
cmp
mov
inc
jbe
or
xor
mov
dec
cld
loope
andl
stos
out
arpl
jecxz
jno
fcompl
insl
lods
or
js
jne
out
add
scas
clc
mov
adc
ffree
inc
imulb
out
test
push
negl
cmp
adc
adc
in
ljmp
add
mov
xor
test
add
sbb
sub
daa
pushl
subb
lret
ret
push
arpl
or
dec
sti
shrb
or
int
push
adcl
in
cltd
in
lcall
push
dec
dec
sahf
adc
ret
dec
lds
xor
daa
push
xchg
push
mov
insl
clc
imul
adc
mov
or
adc
int
test
nop
xchg
and
cmp
aas
adc
sub
mov
rorb
push
repz
arpl
xor
sub
jne
jmp
mov
movsb
push
sahf
cmp
mov
sbb
repz
push
movb
mov
outsl
outsl
xchg
out
sbb
sti
push
xchg
jb
popa
sar
fsubrl
mov
or
out
cmp
lods
in
loop
iret
stos
mov
popf
scas
ficoml
cmpsl
xchg
movsb
mov
lret
lret
xchg
clc
jg
cmp
inc
outsb
mov
leave
xchg
sahf
pop
sub
sbb
dec
jo
je
setbe
loopw
sbb
scas
inc
xchg
xor
xchg
call
shrl
add
fidivl
aaa
xchg
mov
rcr
leave
mov
dec
or
stos
int3
or
add
inc
sbb
or
inc
clc
enter
xchg
xchg
and
in
adc
pop
icebp
cmp
add
push
insl
shll
fucomi
negb
cmp
xor
pop
mov
inc
or
lods
std
sbb
cmpb
inc
lods
and
push
out
fsubl
jae
push
popa
mov
test
cmc
lcall
scas
lahf
out
int
pushf
js
jnp
jl
loopne
and
adc
dec
sahf
loop
inc
jno
fbstp
jp
test
xchg
lock
ficoms
aad
iret
aad
out
repz
data16
sub
es
push
sbb
insl
mov
pop
rcr
leave
jecxz
and
pop
sbb
or
xor
aaa
xchg
jg
xor
mov
cld
inc
je
jno
fisubrs
movsb
sahf
lock
aaa
int3
out
inc
popa
ret
stc
xchg
push
cli
jb
push
shr
sub
push
add
or
push
popa
cmp
sbb
mov
je
sbb
pop
cmpl
stos
in
cmp
ret
xchg
in
cmp
push
lds
loopne
and
dec
dec
jecxz
cli
inc
mov
and
add
imul
outsl
shrb
mov
sbb
sub
jno
insb
xor
sahf
or
cmp
hlt
mov
and
imul
add
stos
shlb
pusha
push
mov
jp
xchg
movsl
test
repnz
loope
lret
inc
jmp
ret
push
cmp
popa
mov
mov
fwait
or
mov
dec
sbb
and
fimull
rclb
and
mov
popa
test
sbbb
js
test
ror
jg
push
dec
adc
int3
lret
jmp
mov
xchg
xchg
cmp
and
fisubs
dec
dec
jae
cmp
mov
or
or
stc
hlt
inc
lahf
jle
jns
sub
inc
cmp
fdivrl
mov
inc
cmc
add
fiadds
mov
imul
fistpll
add
jle
adc
jnp
aad
leave
lret
aad
lret
cmpsl
in
mov
xchg
sbb
pop
lods
mov
add
inc
and
nop
jo
cltd
pop
outsb
movsb
sbb
jmp
push
in
iret
aad
in
or
test
in
leave
and
mov
xchg
cmpsb
mov
stos
iret
out
jp
jno
test
scas
leave
loopne
adc
imul
testl
je
cmp
adc
insl
push
insl
mov
repz
xor
test
scas
cli
insl
jae
mov
cmp
xor
mov
fnstenv
lcall
inc
data16
add
ss
inc
sub
popf
mov
dec
insl
sbb
in
pop
jns
dec
or
sub
add
jbe
cmpsl
in
cld
mov
ljmp
push
pop
daa
nop
lret
add
leave
xchg
adc
int
sbb
aam
in
repz
lret
mov
jns
xor
cmp
sub
xlat
and
mov
add
mov
add
cmc
mov
mov
pop
and
jnp
pop
test
movsl
repz
inc
and
lea
adc
dec
lods
jl
movsl
jae
mov
cli
jle
outsl
rorb
or
xchg
fnstcw
into
repnz
movsl
les
pop
xchg
test
test
push
out
mov
xchg
shlb
pop
inc
pusha
xchg
or
repnz
jbe
insl
dec
push
xlat
ret
inc
clc
xchg
ds
mov
cmc
mov
icebp
mov
mov
cmp
lcall
and
xor
movsl
in
cmp
pop
dec
je
std
push
xchg
jp
xor
jae
mov
mov
scas
lds
xchg
int
outsb
pushf
clc
imulb
in
xchg
sub
mov
or
ljmp
mov
xchg
arpl
out
push
cmp
call
hlt
out
cmp
popa
aas
insl
push
icebp
lcall
push
and
inc
adc
movd
pusha
lea
cltd
test
les
sbbb
add
push
out
je
cmp
into
jno
mov
insl
lret
push
xor
ja
xor
cltd
mov
divb
mov
sarb
scas
idiv
nop
add
adc
dec
adc
xor
addb
mov
mov
sbb
int
sbb
lcall
mov
aam
int3
ljmp
mov
dec
mov
fwait
sbb
sbb
sbb
arpl
push
add
ss
addr16
adcb
ret
push
addr16
dec
push
loopne
popa
lret
cmp
mov
xchg
popa
mov
bound
inc
iret
or
jecxz
add
inc
pusha
add
sbb
enter
jmp
popa
inc
mov
mov
or
push
inc
adc
jno
xchg
daa
or
lcall
jb
sbb
inc
inc
cmp
out
imul
jns
or
mov
test
in
je
pop
loop
sbb
and
mov
inc
mov
popa
cli
push
cmp
xor
inc
jge
inc
jno
xchg
jns
daa
clc
inc
jne
mov
dec
stc
or
bound
ret
inc
mov
fldt
outsb
outsl
sbb
inc
dec
loopne
push
rcr
or
scas
imul
cmpsb
push
push
add
sbb
xchg
cmpsl
rorb
loop
fidivl
push
lret
xor
mov
ja
or
xlat
dec
add
cmpsb
pop
xchg
push
add
fistpl
popa
lods
mov
lahf
shrb
xchg
rcrl
ss
int
xchg
xchg
sub
icebp
test
ret
push
lods
cmp
popa
in
lret
gs
pop
roll
jne
and
and
nop
mov
and
cmp
movsb
std
imul
rcl
adc
testb
int
out
jb
sbb
inc
int3
push
hlt
gs
mov
pop
sbb
gs
adc
inc
xorl
jle
mov
mov
and
das
je
aaa
cmp
shlb
or
jecxz
jb
pop
sbb
jge
mov
cmp
adc
dec
xor
pushf
jno
into
jo
sub
ret
xchg
inc
mov
nop
imul
call
loope
and
jmp
cmp
repnz
pusha
push
rcll
mov
ljmp
add
mov
mov
insb
cli
cmc
daa
hlt
sub
xor
push
mov
ret
movsl
scas
rcrb
pop
rcl
inc
das
mov
add
mov
mov
cmpsb
fcoms
std
mov
cwtl
add
popf
aaa
out
int3
icebp
and
imul
or
rolb
xor
scas
push
aaa
jecxz
jne
je
jp
notl
pop
mov
sbb
adc
sbb
mov
add
fwait
adc
sahf
cmp
mov
jge
jne
sbb
mov
aad
push
fsubrs
aam
outsb
pop
cmp
mov
push
push
das
es
jecxz
repz
fisubrl
push
lret
hlt
mov
lret
rcrl
hlt
enter
mov
adc
aaa
xor
inc
stos
and
cmp
pop
dec
jbe
push
sub
loope
divps
lods
xchg
pop
mov
movb
xchg
out
or
cmp
sbb
mov
mov
pop
pop
js
dec
lahf
fcompl
je
mov
jecxz
adcb
cltd
adc
mov
pop
vpsubsw
mov
push
fidivrs
call
mov
sahf
fwait
iret
push
mov
pop
add
mov
rcl
mull
mov
scas
dec
add
pop
outsb
lret
xorl
nop
mov
iret
sbb
imul
scas
out
pop
jecxz
or
jecxz
lock
cmp
es
popf
imul
cmp
roll
movsb
repz
ds
sbb
push
mov
add
adc
imul
inc
in
push
push
push
fstpl
cmp
add
pop
xchg
or
xlat
cmp
push
mov
adcb
dec
fsubrl
jle
mov
and
jne
mov
push
mov
jmp
sbb
das
test
enter
dec
les
sub
mov
shrb
gs
out
into
xor
sub
sbb
push
stos
repz
out
out
ss
cli
inc
or
movsb
cmp
movsl
xchg
cmp
jno
mov
adc
lea
insl
shrb
daa
fwait
out
mov
out
push
jne
outsl
jp
cwtl
cmpb
push
fs
loop
stc
pop
cli
mov
dec
bound
cmp
std
sub
push
mov
ds
es
enter
in
jb
cmp
arpl
or
cmp
inc
add
out
sbb
mov
jb
ret
jp
imul
xchg
std
iret
les
sar
mov
and
jo
inc
out
lret
loope
adc
loop
das
aam
jb
xorl
testb
ret
cmp
push
mov
add
cmpl
stos
shll
into
mov
scas
shlb
dec
lret
es
lret
jp
mov
adc
movsl
orb
xchg
lods
outsb
cmc
mov
mov
stos
jecxz
in
push
mov
retw
adc
mov
push
in
imul
mov
mov
sbb
mov
push
test
daa
pop
sbb
fisttpll
mov
push
js
sub
outsb
add
stos
jo
out
cmp
aas
divl
js
cs
mov
repnz
enter
dec
inc
orl
decl
fwait
cmp
ss
outsb
fstl
ss
sbb
dec
fidivrs
cmp
sub
dec
stc
pop
std
jne
xor
sub
sbb
in
and
or
xchg
push
adc
into
push
pop
test
rolb
enter
mov
loope
dec
out
mov
jnp
clc
mov
cmpsl
push
cmp
sbb
and
jns
sbb
jae
adc
ljmp
and
adc
int3
mov
cs
pop
push
xor
sarb
cli
sub
pop
icebp
test
xchg
push
xor
dec
jge
sbb
xlat
ljmp
sub
pop
je
rcl
test
xchg
cltd
add
jg
mov
dec
sbb
imul
cmpsl
sbb
roll
add
repnz
setne
inc
and
jno
fmul
outsb
rcrl
cmpsl
mov
xchg
lds
and
repnz
jl
jns
rorl
and
xchg
jmp
ret
mov
aaa
inc
jbe
or
cltd
xlat
lds
cmpb
movsb
add
shrl
outsl
pop
repz
mov
xor
add
and
jg
push
das
add
aas
out
mov
sar
pop
enter
stos
nop
add
std
cmp
outsl
aas
call
enter
daa
cmpsb
add
pusha
popa
inc
add
das
lret
mov
loop
outsb
cld
in
sbb
lahf
adc
pop
fwait
incl
nop
out
xchg
push
pop
ret
xchg
cmp
lea
mov
dec
rcr
imull
in
inc
dec
nop
dec
popa
pop
cmp
sbb
fisubs
sti
mov
loope
iret
stos
lret
testb
bound
out
iret
cld
lcall
sub
nop
cmp
ljmp
push
sarl
rorb
xor
or
inc
jecxz
jp
adc
js
cwtl
dec
cmp
push
stc
jb
insb
jle
lret
adc
xchg
cmp
mov
cmc
adc
push
jb
sbb
jb
scas
imul
out
rorl
pop
add
adc
add
fbld
jnp
mov
jge
sbb
call
leave
dec
pop
inc
push
push
push
cmpsb
into
push
pop
jle
push
or
lds
jb
push
fcmovne
mov
sub
mov
mov
jo
xor
pushf
push
add
or
int3
xchg
daa
addr16
jmp
pushf
aas
dec
int3
mov
ret
xor
repz
dec
jp
aam
add
mov
mov
pop
imul
cld
sub
daa
jae
outsb
dec
cltd
dec
mov
jne
leave
or
imul
mov
cmp
mov
insb
sub
mov
cld
stos
cmp
inc
jg
popa
inc
inc
ds
test
inc
shlb
mov
in
fcomps
xchg
aad
popa
cmp
jp
jg
lods
cli
and
or
test
fld1
lock
pop
sti
lds
xchg
mov
and
mov
pop
out
sbb
pop
mov
pop
pop
dec
je
jae
enter
jb
jo
int
out
popa
add
mov
gs
fsts
jb
mov
mov
jns
popa
jmp
fsqrt
jae
sub
jg
jne
stos
sahf
inc
push
pop
jno
sbb
ds
cmp
rcl
xor
xorl
jge
fstps
cmp
insb
das
push
cmc
lea
jne
incb
jmp
imul
dec
cmp
bound
add
jecxz
popf
call
insb
mov
mov
or
adc
dec
xchg
gs
xorl
jbe
lds
jecxz
pop
into
mov
xchg
enter
aas
popa
loop
push
jp
lcall
mov
jbe
leave
lods
jne
inc
cmp
inc
fisttps
sbb
es
sbb
pop
cmp
int3
adcl
inc
jmp
xchg
fbstp
test
fneni(8087
pusha
jbe
in
mov
dec
lret
shll
jno
arpl
xchg
cmp
xchg
mov
movsl
mov
push
and
bound
add
push
ds
xor
add
andl
stos
scas
arpl
test
pop
cli
jnp
popf
mov
cmp
and
or
sub
dec
test
arpl
cmp
rcrl
xor
scas
xchg
cmp
loopne
xor
jl
pop
fbld
inc
in
pop
dec
pop
test
mov
into
mov
mov
inc
mov
sbb
cwtl
in
xor
loope
xlat
insb
mov
int3
cmp
ds
into
or
fistpl
in
pop
movsl
rorb
or
jle
iret
es
in
bound
movsb
inc
iret
aad
ret
inc
jl
ja
bound
inc
sub
sbb
jne
cs
les
mov
xchg
adc
lds
push
ljmp
aad
test
jmp
mov
dec
jecxz
adc
mov
pop
add
sarl
pop
pop
jae
setg
addr16
fnsave
and
sarl
and
xor
xchg
cmp
pusha
jbe
and
lret
mov
imul
jl
mov
arpl
mov
sub
push
pop
aas
int
xor
insb
je
push
popa
div
mov
in
je
cltd
jbe
iret
loop
aad
loopne
jge
jne
in
ss
aas
mov
das
das
add
dec
gs
aad
xchg
xchg
add
adc
sbb
lock
adc
pop
sbb
fisubl
test
fcoms
adc
imul
inc
xchg
push
adc
xor
add
push
stc
sub
xlat
cmp
lcall
inc
cmp
xchg
xlat
xchg
inc
pop
cmp
stos
out
test
xor
in
xchg
push
aaa
fs
sbb
rcll
xchg
fs
mov
add
lds
cmp
gs
jge
jbe
sub
adc
lods
in
pushw
sbb
xchg
push
push
out
push
sub
add
xchg
pop
lock
lods
adc
sbb
xchg
fldt
add
out
cmc
mov
imull
pop
xchg
sbb
xorl
stos
or
pop
inc
cltd
xchg
pop
loop
pop
sub
push
push
lahf
repz
lods
ret
push
lods
scas
or
mov
mov
mov
pop
push
test
mov
lret
mov
sub
fstpt
movsb
lea
push
and
lods
leave
mov
in
lods
jle
cmp
dec
insb
mov
xor
pop
daa
inc
movsb
fcomps
jno
add
add
icebp
lods
sbb
stos
insb
xchg
lods
pop
jno
leave
or
std
dec
cmpsb
cwtl
cmc
cwtl
mov
ret
xor
loopne
sub
leave
pop
stos
cmp
mov
pop
jo
adcl
lcall
imul
stc
jmp
mov
fldt
mov
or
leave
sub
pop
pusha
mov
jno
xor
shrl
add
pop
divb
out
mov
mov
fsts
mov
pop
ja
add
push
or
imul
movsb
dec
insb
pop
inc
aad
sahf
fnstsw
cwtl
js
mov
mov
into
jae
adc
and
add
or
pop
jnp
mov
adc
das
jp
mov
ja
repz
mov
stc
js
push
push
lcall
dec
loopne
cld
fdivrs
inc
cmp
enter
and
leave
ljmp
jg
mov
sub
out
cmpsb
ficomps
out
scas
push
out
push
pop
xchg
in
cld
lcall
pop
dec
clc
push
divb
daa
out
out
mov
mov
out
jle
xor
mov
bound
xor
push
xor
jp
jg
int
mov
cltd
cld
or
scas
inc
shrl
add
xchg
push
jne
addl
insl
pop
xchg
popa
stos
mov
jo
imul
dec
iret
loop
xchg
push
ja
mov
mov
lea
xchg
push
test
and
mov
mov
in
ror
inc
sarb
sbb
sbb
cld
lds
lret
ret
xor
push
lock
stos
mov
mov
xor
loopne
test
cmp
dec
sbb
pushf
adc
xchg
rcr
sti
lret
or
adc
cmp
push
dec
dec
mov
lret
mov
mov
inc
std
or
lea
popa
add
das
or
dec
add
mov
fld
inc
leave
or
cltd
insl
add
adc
inc
pop
mov
outsl
iret
fcmovne
push
cmp
or
jecxz
daa
outsl
pop
push
int
imul
ja
inc
push
xchg
fs
xchg
lods
inc
in
imul
ja
das
mov
push
mov
adc
adc
mov
xchg
sub
enter
lret
xchg
add
jmp
xchg
sub
test
daa
xchg
inc
ds
xchg
fisttpl
sub
sub
adc
cmp
out
stos
shll
cwtl
fcmovne
inc
fsubl
aas
fistl
popf
inc
jmp
cwtl
sub
jge
inc
and
cltd
xor
pop
ja
push
mov
in
mov
jmp
sub
insl
divl
xor
aaa
push
cwtl
mov
je
pop
imul
push
pop
xchg
addr16
dec
inc
jnp
mov
sub
mov
mov
daa
fsubp
aad
fs
rol
mov
mov
push
mov
pop
or
mov
in
add
ja
jge
call
push
cmc
xor
popf
movsl
mov
mov
inc
lret
lods
cmp
mov
aaa
out
cmp
cmp
mov
shl
gs
inc
push
xchg
movsl
xor
mov
sbb
add
cmc
fmull
mov
push
or
xor
fs
loope
test
xor
push
mov
push
or
sub
loop
rcrb
outsl
mov
mov
outsb
mov
cmc
jle
lahf
jae
daa
out
popa
in
std
jae
pusha
xchg
in
cmp
fdiv
and
add
insb
shrb
imul
mov
add
mov
dec
and
xchg
xor
xchg
mov
xlat
adcl
movsl
femms
jno
jl
cltd
movsl
cwtl
and
das
sbb
lcall
or
stc
push
mov
xlat
xor
sbb
ljmp
mov
fdiv
out
in
mov
adc
and
stos
mov
inc
out
mov
jns
lret
add
dec
ljmp
mov
push
jnp
bound
push
add
xchg
xor
in
in
fnstenv
lret
repnz
idiv
jns
add
je
insb
mov
les
sahf
imul
push
out
xlat
and
imul
test
lods
or
adc
fcomps
push
addb
sub
xchg
dec
add
xchg
dec
jns
insb
cmpsb
pop
jmp
pushf
inc
leave
add
jb
pop
xor
icebp
and
jge
ja
roll
adc
and
fisttpl
decl
les
jnp
cltd
pop
xorb
dec
popa
sbb
cmp
xor
sti
mov
scas
mov
sbb
adc
arpl
data16
or
jg
shlb
call
mov
mov
xor
jnp
test
push
pop
rclb
movsl
fsubrs
dec
dec
int3
movsb
scas
or
in
scas
aam
jle
hlt
das
mov
or
lret
push
inc
push
iret
inc
mov
mov
push
imul
inc
outsb
inc
xlat
jle
xchg
addb
enter
and
lods
pop
mul
popf
mov
xchg
push
loopne
arpl
lahf
lcall
jbe
imul
lea
pop
scas
fwait
xor
pop
imul
xchg
sbb
shll
into
cltd
mov
scas
arpl
mov
dec
push
sti
lea
cmpsb
xor
es
sar
xchg
test
push
dec
fidivl
stos
into
mov
xchg
or
and
mov
jne
mov
das
test
test
fwait
out
mov
fidivs
dec
decl
inc
pop
icebp
nop
cmpl
loope
mov
std
leave
sbb
xor
icebp
mov
xor
ret
mov
cmpsb
or
pop
je
dec
aaa
inc
imul
gs
enter
cmpsb
shrl
xchg
inc
sbb
scas
add
rep
or
aaa
dec
into
out
and
and
data16
movsl
enter
xchg
ljmp
int
pusha
enter
adc
pop
xor
or
lret
rep
and
adc
pop
mov
lock
bound
into
pop
pusha
pop
inc
adc
cmc
dec
insb
pop
sbb
sub
xlat
xor
jl
inc
mov
xchg
jae
sub
clc
xchg
add
xchg
and
mov
mov
adc
or
jae
lret
lods
pop
push
aas
inc
lods
gs
jns
push
xchg
mov
lods
subb
sub
adc
sub
pop
les
pop
fdivs
inc
aas
inc
mov
or
into
data16
insb
jno
inc
hlt
xsavec
sub
jo
in
out
or
xchg
xor
sti
and
das
gs
lock
arpl
ds
push
adc
adc
rcrb
test
aas
push
daa
mov
mov
sbb
popa
mov
out
sahf
xchg
push
lods
jg
sub
fisubs
add
bound
in
xchg
loope
fdivl
sub
mov
xchg
xchg
pop
lahf
mov
and
shrb
dec
icebp
and
fidivs
jmp
lea
mov
sub
out
pop
and
jnp
inc
cwtl
iret
adcl
mov
pushf
popa
fldcw
lods
cmp
xor
cwtl
add
in
in
outsl
xchg
cwtl
scas
inc
jmp
cmpsl
imul
sti
popf
aam
sbb
cltd
sbb
dec
pop
xor
xchg
jge
cmp
clc
out
push
pop
push
xor
es
mov
das
jnp
xchg
pop
loope,pt
mov
shr
and
pop
orl
out
scas
sti
enter
call
and
dec
fildl
int
push
lcall
cmp
mov
ljmp
fimull
insb
and
and
stc
nop
pop
iret
dec
out
inc
sub
stos
cmpsb
jl
mov
push
push
ficompl
int3
sbb
mov
mov
pop
pop
cmp
xlat
data16
popa
hlt
dec
pop
adc
push
rolb
filds
test
sub
subl
sbb
mov
xrelease
jp
adc
fsubrp
leave
xor
mov
push
pop
mov
scas
in
scas
mov
lahf
xor
push
arpl
dec
add
mov
les
fmull
test
mov
sbb
mov
dec
sbb
cli
mov
cmp
cld
xor
sub
xchg
push
pop
int
ljmp
push
imul
ja
push
fsubrs
imul
imul
adc
xchg
cwtl
aas
dec
push
jo
lcall
or
or
ficoms
jb
dec
pop
sahf
jo
fsubrs
jmp
mov
sub
sub
dec
jecxz
and
dec
mov
fisttpl
inc
push
hlt
push
dec
leave
mov
dec
int3
lea
mov
jno
pop
push
and
or
aam
cmp
xchg
sub
mov
mov
pushf
and
sarl
in
les
shlb
in
jp
ffree
int3
addr16
adc
stc
xor
cld
inc
movsl
xchg
xchg
sub
pop
sti
jbe
push
repnz
ljmp
lahf
repnz
pop
faddl
mov
shrb
or
xchg
aad
xchg
icebp
inc
scas
xor
xor
push
stc
rolb
popf
adc
mov
xchg
rorl
add
lods
push
adc
mov
mov
loopne
and
call
xlat
dec
push
add
or
dec
cmp
movsl
jnp
sbb
jle
cs
gs
or
jl
shll
jae
dec
inc
ljmp
pop
lcall
in
cmpsb
jb
mov
sarl
jl
cmp
push
in
jp
mov
dec
adc
shll
mov
jle
in
movsl
jle
cltd
add
mov
aas
in
mov
pop
jns
icebp
rolb
cs
xor
dec
jecxz
xlat
or
loopne
mov
xchg
jmp
pop
mov
dec
les
mov
jbe
cmp
jp
cmp
xor
mov
xchg
daa
imul
in
adc
leave
idivb
cmp
popa
xchg
sbb
xchg
cmp
xchg
jg
and
clc
mov
fs
pop
add
negb
or
push
popl
jns
fs
add
lea
lds
je
mov
ficoml
add
push
jmp
add
xchg
push
rcll
xor
mov
sbb
into
movsl
push
or
ror
fdivrl
cld
push
mov
cmp
in
int
outsl
pop
push
icebp
mov
dec
mov
sti
jge
jne
dec
lcall
movsl
sbb
push
mov
mov
std
daa
jmp
mov
or
mov
or
cmpsb
jl
pop
in
pop
xchg
xchg
mov
jecxz
icebp
aam
hlt
mov
push
mulb
hlt
insl
shl
std
adc
mov
sti
jmp
mov
subb
std
negb
loope
inc
mov
jl
ds
cltd
sbb
hlt
and
int3
leave
mov
cmc
cltd
sub
imul
inc
scas
mov
sarl
mov
subb
inc
mov
push
pop
pop
cs
fwait
cmp
cli
ret
add
pusha
mov
xor
jl
cmc
sub
push
push
sahf
sub
sti
mov
fwait
pusha
sub
lods
mov
sbb
jmp
mov
sub
push
mov
sbb
cmp
les
xchg
add
je
xor
inc
in
add
push
sti
jecxz
mov
sbb
rcrl
insb
sbb
cltd
scas
xor
sbb
sub
dec
pop
jl
sub
sbb
gs
iret
mov
sbb
js
jbe
enter
fwait
mov
scas
push
mov
mov
imul
ror
ret
push
in
addb
jmp
pop
xchg
sub
dec
sub
roll
rolb
mov
ljmp
mov
inc
xchg
cmp
and
xchg
sub
cs
call
lcall
fs
xchg
sti
imul
jne
cmp
fwait
inc
push
data16
test
lock
jecxz
or
loopne
lods
dec
jp
mov
mov
es
and
jmp
adc
loop
arpl
movsl
inc
and
jno
cltd
xchg
and
xchg
xchg
cs
push
rcl
jae
lds
adc
cli
and
cmc
lidtl
ret
shlb
mov
push
lock
pop
inc
mov
pusha
pop
xchg
sahf
loope
sti
push
inc
sub
outsb
outsb
adc
ret
or
pop
lods
loopne
popa
push
xchg
jns
fisttpl
add
in
into
lret
push
mov
setno
cmp
fmull
fcompl
pop
push
inc
push
mov
add
adc
fisttpll
add
out
jb
inc
lret
je
add
mov
test
dec
icebp
cmpsl
das
call
inc
push
and
cmp
or
dec
lret
pusha
pop
cmpb
xor
add
jl
nop
jne
jmp
mov
outsl
fucomip
repnz
inc
fstl
inc
or
pop
and
test
aaa
mov
sub
push
mov
jne
sahf
lret
inc
pop
fiaddl
lcall
dec
inc
push
push
lock
aaa
and
sbb
push
pushf
ss
mov
mov
icebp
cmp
xor
popa
lds
aaa
pop
mov
sub
lahf
clc
lods
add
jb
rolb
sti
out
insb
sub
shlb
inc
cltd
loopne
sub
mov
imul
das
bound
adc
mov
dec
add
mov
cli
adc
dec
shl
mov
xchg
and
sub
lds
jne
aaa
into
dec
dec
sub
iret
cmpsl
adc
cmp
pusha
mov
in
in
imul
xlat
mov
jp
mov
sub
sbb
jb
out
and
ljmp
or
clc
in
mov
dec
adc
decb
lret
fmul
xchg
pop
in
lods
mov
push
aam
fimuls
cmp
dec
lds
clc
push
movsl
cmpsl
cmp
mov
xor
jbe
inc
test
mov
dec
xchg
lcall
push
mov
in
push
pushf
test
in
inc
hlt
mov
mov
jns
mov
or
pop
xchg
jo
add
or
movsl
jecxz
outsl
movl
int3
xchg
in
xor
xchg
mov
ja
add
add
cmpsb
push
dec
xchg
stos
ljmp
or
enter
jmp
add
mov
data16
inc
gs
dec
adc
inc
lods
or
add
sbb
jl
jb
call
add
sar
push
push
clc
outsl
hlt
cmp
sbb
jmp
out
js
pushf
mov
dec
mov
out
adc
jnp
neg
btr
dec
test
ret
sub
sbb
mov
jge
pop
add
adc
jb
out
popa
dec
push
add
int3
mov
or
cwtl
jecxz
insl
stos
leave
sub
adc
aam
and
popa
cli
mov
cmp
aad
inc
out
or
arpl
imul
insl
mov
and
dec
pop
ret
dec
cli
int3
cmp
mov
xchg
pushf
or
mov
add
fnsave
lock
mov
aam
push
sbb
das
js
sbbl
movb
pop
repnz
mov
fisubrl
fstl
pop
out
push
pop
sub
xchg
jp
mov
push
fst
xor
jo
fsubl
inc
mov
adc
push
std
mov
movsb
imul
cmp
rcrb
and
out
pop
lods
xor
popf
mov
dec
add
mov
insb
cli
stos
rcrl
jecxz
ds
or
lock
hlt
mov
nop
sbb
pop
mov
and
xorb
fidivs
and
andb
push
mov
pop
cmp
cwtl
push
es
mov
pop
fwait
bsf
mov
outsb
jno
mov
jo
aam
lods
adc
cwtl
clc
pop
ds
push
rcr
pop
icebp
push
and
mov
add
and
mov
add
test
xor
ret
hlt
das
add
dec
adc
cld
mov
mov
sbb
pop
mov
and
inc
xchg
xchg
pushf
dec
sets
cmp
movsl
inc
pusha
jae
pop
repz
mov
stos
inc
cli
sarb
jae
cwtl
cmp
cmc
jmp
jmp
enter
test
sbb
fildll
mov
mov
mov
adc
stos
shl
pop
imul
fidivl
stc
addr16
xor
xchg
sub
sbbb
in
add
testl
dec
xchg
cmp
dec
adc
mov
flds
data16
out
enter
jae
pop
jo
add
sub
aam
mov
mov
jg
pop
jbe
cltd
fcmovne
jbe
jb
sub
sarl
cmpsb
add
in
es
ljmp
add
dec
adc
idiv
jae
movsb
add
cld
add
insl
adc
aad
add
jo
sarb
inc
adc
call
xlat
add
push
adc
out
sbb
adc
push
pop
or
testl
roll
and
loop
pop
dec
cmpsb
movsl
test
mov
aad
inc
add
dec
in
aad
loope
xlat
lret
cltd
and
enter
sub
in
aam
clc
ret
imul
push
mov
les
and
ret
push
mov
pop
push
xor
popf
xchg
enter
cld
adc
or
xor
lahf
ret
stc
pop
lret
push
xor
inc
mov
dec
jmp
jo
icebp
sbb
pop
xor
jb
mov
jb
push
pop
mov
bound
inc
sbb
pop
outsb
mov
std
adc
les
nop
xor
push
adc
fiadds
jmp
mov
imul
xor
das
mov
sbb
clc
jmp
cmpsl
test
and
mov
push
mov
out
cmp
fstps
lret
sbb
stos
imul
mov
mov
std
cmpsl
inc
mov
into
fsubr
add
mov
test
leave
clc
fcmovne
mov
loopw
pcmpgtw
mov
pop
jno
xchg
inc
mov
lcall
bound
cmp
cmp
jp
adc
cmp
mov
hlt
ficomps
sub
mov
clc
pushl
push
insl
lods
cmp
sbb
enter
push
adc
pushf
mov
lahf
cs
data16
dec
xor
sub
insl
dec
sub
push
and
cltd
mov
jnp
fcmovnbe
aam
in
and
rcrl
adc
sti
add
lock
test
mov
sub
xor
scas
jnp
jecxz
movzbl
lds
das
inc
jae
cwtl
sti
mov
xor
in
movsb
mov
in
testb
sub
mov
xchg
adc
cmp
pop
pop
adc
fmull
in
out
addl
xchg
or
mov
test
in
fstl
neg
call
or
out
sub
pop
jg
cmp
cmp
inc
adc
xchg
mov
xchg
insb
sbb
pop
push
call
and
jmp
out
je
or
mov
mov
mov
and
dec
sub
cmp
ljmp
pop
jecxz
loop
mov
pop
lock
jp
fsubrs
push
sbb
test
imul
out
xchg
mov
pop
ljmp
xor
sub
jp
add
pop
dec
fcomps
push
clc
mov
push
lcall
sub
arpl
xchg
inc
push
mov
popl
lds
xor
cmp
pop
or
mov
dec
faddl
lods
mov
xor
xor
lret
adc
dec
outsb
mov
xor
mov
and
mov
pop
clc
sbb
repz
mov
insb
in
aaa
test
aam
iret
sbb
cmpb
lret
cwtl
test
mov
and
add
and
add
jle
pminub
dec
mov
or
popa
imul
dec
jae
lea
pop
mov
mov
push
mov
pop
aam
js
rcrb
repnz
sbb
call
push
das
out
cwtl
iret
and
ret
aas
xor
into
or
push
sub
outsb
es
inc
icebp
jno
sti
jbe
xor
push
rorl
mov
xchg
mov
fdivr
and
clc
push
cltd
arpl
xchg
pop
jno
rorl
psubusw
insl
dec
outsl
iret
push
xlat
aas
in
and
inc
or
cld
lods
lcall
mov
jg
in
movsl
aad
int3
fs
jg
inc
and
and
pop
push
inc
add
jle
push
scas
add
arpl
push
inc
shrb
outsl
pop
mov
xor
mov
xor
mov
push
mov
daa
cmpsb
aas
inc
push
jge
ficomps
pop
call
aaa
xlat
test
ror
cld
js
mov
loope
cmp
lods
cmpsb
sahf
mov
fs
add
mov
je
repnz
cmp
jl
repz
xchg
mov
repnz
faddl
in
sub
dec
ret
jl
dec
mov
add
int
and
jae
cmc
cmpsb
xchg
dec
ds
int3
mov
popa
dec
push
cmpsb
adc
add
mov
lcall
fucomp
stos
in
test
outsl
or
fidivl
cmp
cmp
mov
fwait
dec
fwait
mov
sub
push
aad
and
and
dec
pop
mov
cwtl
mov
mov
leave
xchg
and
and
pop
add
jle
sarl
rclb
aaa
xor
sidtl
or
and
call
add
testl
fistpll
dec
repnz
pop
jno
int3
inc
outsl
sahf
pushf
test
or
scas
popa
je
nop
pop
jae
mov
jp
addr16
lods
lret
push
or
mov
inc
mov
fs
pop
push
push
cs
inc
pusha
add
xchg
stos
pop
fldl
fildll
jge
jnp
ds
sti
mov
dec
pop
push
mov
jge
rorl
dec
pop
mov
fnsave
adc
push
js
fsubp
and
fimull
movl
dec
pushf
stos
pop
dec
sahf
imul
sbb
outsl
lret
sub
pop
mov
gs
lret
mov
cs
adc
loop
fldln2
imulb
mov
popf
sarb
sub
inc
sahf
sub
fld1
pop
popa
fdiv
nop
ret
lret
pop
out
cmp
loop
cmc
roll
stos
out
rorb
add
repnz
adc
stc
push
clc
in
loope
pop
leave
fistpll
es
mov
aad
data16
mov
mov
in
lcall
int3
sbb
jb
lret
mov
rcrb
daa
pop
loopne
es
ret
adc
in
pop
aaa
or
xchg
adc
dec
sub
in
xor
lret
pop
cltd
sbb
mov
jb
mov
mov
xchg
sbb
dec
sbb
outsl
jnp
cmc
inc
mov
shll
ror
inc
xlat
movsl
or
cli
mov
stos
mov
and
cmp
stos
int
pop
adc
dec
repz
and
and
repnz
xor
roll
lods
adc
enter
cmc
or
fsubrs
add
clc
mov
out
das
dec
andl
cwtl
sbb
stos
mov
push
in
stos
push
push
pusha
movsl
ret
xlat
enter
adc
lahf
pop
lret
xchg
jp
mov
insl
push
mov
out
push
and
into
outsl
mov
arpl
push
cs
hlt
sub
cmc
rcr
ja
mov
adc
inc
and
int
mov
mov
imul
loopne
repz
ret
repz
sti
adc
shrl
jle
lea
pop
cli
fcompl
in
sbb
xor
sub
mov
mov
sub
jmp
popa
dec
pusha
and
mov
in
dec
or
fmuls
repnz
lea
arpl
sbb
cltd
cli
imul
push
dec
mov
adc
movsb
sbb
add
out
xlat
roll
pushf
jp
inc
push
pop
enter
cli
call
jmp
sti
es
jg
daa
shl
fldl
mov
jge
decl
sub
scas
je
test
call
cmp
pop
leave
test
and
js
push
cmp
js
outsl
push
pop
into
inc
add
sbb
mov
sub
pushf
mov
mov
adc
lods
mov
scas
sub
ljmp
int
test
out
mul
pop
sub
add
cmp
andb
bound
sbb
outsb
jae
jmp
pop
loop
jge
add
gs
xor
dec
loope
jle
fs
mov
psrad
mov
adc
xchg
or
jo
mov
fmuls
xor
jb
subb
jb
jp
adc
getsec
add
out
lcall
mov
adc
test
shrb
filds
cltd
jp
xchg
mov
ljmp
mov
imul
imul
stos
mov
mov
adc
pop
xor
fs
lods
xor
push
out
add
mov
aas
fwait
adc
rcrb
icebp
mov
jl
jae
js
sbb
decl
mov
jae
push
inc
movsl
mov
in
js
mov
mov
ficompl
push
fldcw
inc
lea
aas
or
inc
ss
push
call
or
dec
jmp
inc
sub
sub
dec
adc
pop
xchg
repz
mov
js
sub
out
xchg
test
xchg
cmp
and
call
jno
cmp
loop
add
imul
push
push
mov
fwait
ss
cld
mov
sti
or
stc
arpl
rcrl
xchg
cli
fs
jns
shl
sub
inc
sbb
or
adc
lods
enter
ret
std
add
inc
inc
jecxz
ja
cmpl
enter
jge
lahf
js
scas
or
fmuls
bound
cltd
aas
imull
jno
pop
xor
loop
outsl
adc
xchg
clc
mov
outsl
int
xor
lods
push
lahf
pop
outsl
shl
sub
lods
and
pusha
fdivs
into
push
fldt
pop
mov
push
xchg
add
aad
mov
or
mov
xchg
inc
or
out
bound
sbb
mov
dec
mov
mov
out
xor
dec
jp
mov
mov
filds
bound
enter
repz
xor
pop
adc
push
xchg
add
adc
adc
test
mov
mov
rorl
pop
cld
negl
test
sarl
movb
xor
add
inc
xchg
roll
mov
inc
xor
adc
inc
nop
ret
rcrl
lock
lock
xor
xchg
inc
mov
lret
mov
scas
mov
cmp
cld
dec
mov
inc
movsl
push
xchg
sub
sbb
scas
shl
out
and
xchg
xlat
dec
cmc
push
call
pusha
sub
loope
addr16
ja
xchg
inc
test
xor
push
cmp
pop
in
jg
ljmp
test
jo
xor
in
call
dec
pusha
hlt
cli
lock
and
dec
or
cmp
imul
add
mov
int3
insb
scas
pop
mov
lcall
filds
inc
movsb
cmp
test
xchg
mov
cmpsl
in
or
inc
xchg
dec
mov
mov
pop
xor
sbbl
repz
and
popa
sub
pusha
mov
jmp
out
shrb
sti
into
movsb
icebp
cltd
xchg
mov
ss
cmpsb
xchg
lret
pop
inc
fsubrl
jl
lcall
jmp
cmp
addr16
jnp
cmp
enter
icebp
out
cmp
jnp
cmp
leave
iret
lahf
cmc
inc
pop
xlat
xor
mov
xor
mov
js
popa
test
loopne
aad
push
adc
xor
sbb
std
mov
dec
or
and
and
xchg
je
jo
xlat
push
pop
cmpsb
fcomip
int3
adc
iret
subl
les
mov
pop
pusha
mov
stos
test
and
in
push
pop
and
repz
jmp
cmp
cwtl
ja
ljmp
ds
push
or
jne
sbb
jns
adc
mov
jb
xor
jns
inc
pop
sbb
push
dec
dec
inc
pop
mov
popf
loope
aam
popa
mov
movsl
push
loopne
mov
movsb
lock
mov
faddl
mulb
cmp
push
out
dec
orl
out
into
les
push
adc
sbb
pop
cltd
or
arpl
sub
scas
pop
xchg
mov
stos
pop
cwtl
shlb
das
mov
lcall
std
outsb
ret
mov
or
mov
add
mov
rcrl
cmc
insl
and
aad
jno
cmp
ds
in
test
aaa
into
dec
ret
mov
push
sbb
ret
or
adc
sbb
roll
and
push
mov
xchg
stc
mov
out
inc
arpl
pushf
ss
mov
xor
mov
sub
rcrb
arpl
and
mov
xor
xchg
jle
andb
cmpsb
popa
and
aas
mov
cs
adcb
in
lcall
jne
aad
and
sbb
fisttpll
and
cld
into
ljmp
aad
adc
scas
loopne
push
jb
ljmp
mov
loope
add
sahf
and
insb
sub
push
mov
cmpb
mov
jo
scas
mov
push
sahf
inc
sbb
xchg
jns
imul
push
loop
jne
sub
or
loop
int
nop
or
mov
cmp
cmpsl
push
stos
xchg
jge
mov
gs
icebp
dec
xor
xor
out
jg
daa
sub
mov
mov
mov
out
lret
repz
xchg
xchg
xor
jne
movsb
pop
cli
add
aaa
dec
loop
mulb
shr
das
cmp
sarl
mov
push
pop
xor
data16
jl
pop
pop
xchg
jne
cmp
adc
rep
ror
push
pop
lds
push
test
lods
add
bound
out
imul
stos
imul
loope
outsl
out
sub
dec
scas
fisttpll
cwtl
cli
mov
sbb
mov
je,pt
nop
cs
mov
mov
aaa
add
xchg
pop
push
and
insl
mov
vmwrite
mov
cltd
notl
icebp
stos
lea
ret
sub
mov
int
jns
or
push
lods
or
pop
hlt
pop
loope
mov
std
loopne
pop
inc
push
xor
or
int
in
mov
outsb
jmp
and
popf
mov
and
js
loope
jl
mov
push
push
out
add
aaa
fisttpl
ja
pop
cmpsl
repz
xor
and
lds
cmp
shl
lahf
pusha
mov
sub
add
add
push
adc
sbb
sbbl
and
je
jne
mov
mov
shl
rclb
push
mov
pop
or
aad
jmp
repnz
xchg
insb
or
mov
and
inc
and
push
pop
mov
and
xor
jns
lock
push
cltd
jbe
rclb
shl
mov
les
dec
add
push
fildl
aam
cmc
aaa
pop
or
test
lea
add
std
lea
ljmp
cmp
outsl
cmp
sbb
jbe,pt
sahf
xor
iret
pop
es
in
cmove
addr16
scas
inc
cld
push
xor
fistpll
jge
mov
mov
inc
and
test
sub
negb
push
xor
pop
gs
iret
xchg
popa
add
jae
inc
jmp
scas
ja
jl
pushf
fmull
jns
notb
cmp
cs
rcrl
adc
addb
push
jno
adc
stos
retw
scas
jle
scas
add
dec
ss
movsl
ss
repnz
mov
mov
out
subl
stc
adc
loope
incb
data16
jns
or
insl
fisubrs
adc
fdivrs
xlat
cmp
inc
jae
iret
jb
pushf
xor
cltd
in
push
adc
push
sbb
ret
adc
mov
rol
pusha
ja
add
scas
mov
test
dec
pop
cwtl
push
dec
fsubrl
outsl
push
scas
inc
enter
stos
gs
aam
inc
loopne
es
cltd
mov
es
xchg
fwait
xchg
hlt
jecxz
jno
fadds
push
mov
mov
ret
repz
cmp
shrb
aaa
xchg
jmp
ljmp
aad
out
cmc
sbb
adc
jno
push
int3
rcll
pop
aas
mov
clc
icebp
add
pinsrw
pop
cmp
cmp
jo
jns
add
mov
incl
bound
icebp
sub
add
jl
inc
shll
jnp
and
cld
pop
inc
cmp
mov
aas
push
mov
dec
and
movsb
jg
mov
xchg
mov
cmp
andl
mov
int
and
cmp
lret
fnstcw
stos
in
pop
arpl
out
test
pusha
xor
adc
jno
inc
fwait
into
outsl
and
cmpsl
mov
pop
jnp
adc
icebp
jge
cld
cli
inc
sub
jle
adc
mov
mov
fwait
sub
or
shrl
add
jge
ljmp
ljmp
xchg
adc
push
mov
inc
push
mov
sub
mov
and
iret
mov
pop
sbb
loop
sub
sbb
add
mov
cwtl
lea
sub
int
ret
jmp
rcrb
mov
push
mov
push
out
es
test
in
lds
cmp
stos
clc
test
mov
stc
and
insb
dec
or
push
pop
in
mov
jb
adc
cmpsl
pusha
outsl
push
push
sbb
popa
bound
inc
lcall
add
std
jo
fisttpl
in
pop
rcrb
xor
push
mov
jle
xor
ficompl
inc
mov
and
xchg
cld
inc
aaa
enter
lretw
xor
xchg
pop
xor
sarl
and
lcall
sahf
hlt
adc
daa
in
sahf
loop
imul
int3
and
sub
sub
inc
out
mov
subl
dec
push
aaa
mov
les
push
push
lea
popa
cmpsl
gs
pop
and
push
mov
push
imul
sub
ljmp
pop
pushf
pop
je
movb
gs
dec
sbb
jns
insl
xchg
dec
sub
push
insl
movsl
les
fldenv
das
sbb
mov
cmp
lret
rcrl
jecxz
push
or
or
push
rolb
call
push
aad
dec
stc
jbe
sbb
popa
fwait
cmpsl
push
jnp
cmpsl
outsl
xchg
push
cmp
push
mov
popf
repz
mov
push
lea
dec
jae
push
enter
xor
popa
outsl
ja
adc
int
add
mov
out
mov
push
repnz
movsb
push
jl
xor
sub
dec
sar
pop
in
mull
idivl
pop
jae
pop
dec
sbb
xorl
or
fdivs
scas
repz
stos
inc
mov
sub
icebp
stc
subl
mov
nop
adc
aad
dec
aad
ss
je
pop
jp
and
jge
je
push
fistps
mov
arpl
fmuls
fisubl
or
in
xor
xchg
sbb
imul
mov
lcall
cs
dec
sbb
sbb
daa
fmul
xchg
les
add
sbb
and
sarb
pop
test
jnp
clc
mov
mov
jle
jae
mov
add
mov
jmp
add
jbe
ja
cmp
cmp
add
repnz
pop
inc
jno
or
ds
ja
movsb
lock
imul
stos
push
out
dec
das
daa
pop
sarl
fs
in
adc
xchg
add
aad
push
lock
lret
cmp
jl
pop
sbb
loopne
in
push
scas
mov
jl
xchg
jg
in
inc
sbb
setne
aam
lret
jmp
arpl
ret
test
repz
fsubrl
sbb
mov
inc
inc
cltd
xor
jnp
test
mov
lock
mov
arpl
int3
jnp
dec
jmp
outsl
push
insl
ficompl
pextrw
adc
fs
dec
mov
imul
sub
cmpsl
ljmp
and
mov
mov
bound
test
sti
in
push
cmpsb
aad
arpl
xor
xchg
movsl
ds
mov
or
lret
jo
pop
dec
loope
mov
xor
movsl
shrl
sub
leave
xchg
repnz
out
jo
in
cs
mov
jmp
and
xchg
inc
jo
inc
sub
nop
loopne
shl
lahf
mov
arpl
cmp
in
push
int3
cmc
nop
cmp
out
dec
sbb
gs
cwtl
aas
lret
jl
xor
lds
inc
test
loopne
out
clc
mov
add
jne
out
leave
insl
sbb
stos
enter
test
jns
fcom
jl
lret
ret
fidivrl
iret
sub
jne
rorb
sbb
push
xchg
jns
es
or
inc
inc
pop
xchg
lods
push
jae
lock
aaa
sub
pop
aas
daa
xor
push
sub
stos
in
jg
mov
or
sub
fs
in
test
bnd
lods
add
jge
inc
add
mov
pop
push
push
or
out
xor
add
into
mov
xchg
mov
xor
xchg
dec
sub
data16
push
sub
xchg
aas
push
mov
mov
lea
jnp
cli
fistpl
shrd
pusha
mov
sbb
in
lret
adc
cmp
cmc
out
add
cli
jo
add
std
scas
sbb
or
jno
testl
bound
xor
xor
sbb
fstpl
mov
mov
xchg
mov
jg
mov
sahf
in
test
sub
shll
cmpsb
xor
fdivp
mov
fisttps
sahf
test
mov
dec
jb
enter
xlat
pop
mov
mov
loope
mov
dec
sahf
jmp
fwait
ss
mov
sub
lods
jp
aam
repz
repz
jae
push
pop
lret
xor
mov
and
out
xchg
daa
cmp
sbb
imul
mov
mov
sub
mov
push
xor
mov
pop
movsl
aam
xor
push
ja
mov
fwait
mov
subl
iret
xlat
jae
ljmp
push
jo
jp
js
xchg
fwait
ds
fcoms
ds
cmc
sti
popf
jmp
cli
cmp
icebp
add
imul
mov
or
pop
stos
xorb
hlt
mov
stc
ds
or
or
loope
neg
sbb
sbb
fs
scas
adc
sub
xchg
cmp
daa
inc
add
dec
inc
pop
lahf
mov
ljmp
hlt
cs
sbb
fwait
rorb
jmp
xor
add
cs
jecxz
scas
xchg
pop
xchg
lds
inc
cwtl
sbb
into
inc
mov
lahf
mov
sub
push
decb
sbb
sbb
sub
fisttps
add
loopne
pop
xor
dec
lahf
inc
pop
inc
imul
iret
pop
mov
cmp
popa
mov
sbb
push
lea
daa
shlb
jbe
and
enter
movsb
add
rorb
cmp
mov
cs
outsb
adc
or
fabs
inc
pop
push
sbb
repnz
jbe
bound
mov
jg
sti
mov
out
in
shll
data16
xchg
fldt
or
out
mov
ret
mov
jb
push
ljmp
pop
push
pushf
pop
push
jmp
sbb
mov
sbb
mov
sub
je
das
mov
push
gs
mov
dec
out
add
xor
inc
push
into
inc
add
fisttpll
test
mov
pop
movsb
jp
inc
push
or
mov
lret
ja
adc
push
mov
jg
inc
or
out
aam
mov
mov
mov
loopne
test
xchg
push
push
xchg
setns
sbb
push
jns
mov
jns
or
jge
mov
xlat
pop
aas
jg
and
or
lret
or
xor
push
js
jge
jbe
mov
xor
adc
jge
sahf
xchg
push
mov
insb
and
cs
fs
mov
inc
add
insl
sbb
cmp
push
jb
xlat
iret
jp
mov
popa
test
aaa
iret
movsl
jno
out
sbb
push
lea
xchg
jp
push
insb
repnz
pop
inc
std
aad
xchg
cmp
daa
cld
jno
or
je
jb
imul
push
movl
outsl
ljmp
dec
imul
stos
dec
mov
sub
pop
lret
in
push
mov
ret
sub
push
jmp
xor
iret
fiadds
add
add
or
cmp
pop
jo
push
adc
inc
sub
fiaddl
cmp
and
aam
jl
sarl
cmpsl
push
jb
push
and
mov
leave
scas
ror
cltd
jae
hlt
imul
cwtl
jno,pn
jb
jns
not
dec
gs
rclb
jmp
jnp
jbe
inc
lods
divb
jae
add
mov
nop
cltd
jne
mov
pop
mov
outsb
lock
inc
pop
sub
test
and
mov
shrb
popa
push
call
cmp
jmp
into
add
leave
xor
jl
and
stc
insb
sti
cmp
xor
inc
sbb
mov
and
sub
mov
fstl
fldenv
in
cmp
push
mov
lahf
dec
ret
stos
ret
jmp
adc
cli
cmpsl
je
mov
fistps
push
ds
sub
jne
push
pusha
lea
lock
xor
cli
mov
jle
lock
adcb
adc
push
js
loopne
xchg
scas
mov
lock
pop
cmp
jl
sbb
daa
push
or
in
ret
xor
ja
sahf
mov
fcompl
adc
adc
push
dec
mov
add
int
leave
mov
adc
into
fcompl
out
add
test
in
cmp
lret
outsb
mov
js
in
dec
mov
lcall
push
or
add
dec
movsl
sub
fdivrs
mov
pop
out
test
lcall
jnp
decl
aas
and
dec
sub
adc
xor
lea
outsb
sbb
mov
int3
lock
cmpsl
sub
test
dec
sub
pop
sub
daa
test
mov
add
inc
cli
xchg
mov
inc
cmpl
fs
mov
hlt
fs
int
stos
xchg
pop
cltd
in
sbb
sbb
shll
sub
loope
ss
xchg
cmc
dec
sub
xchg
adc
es
cmp
dec
enter
lods
mov
scas
sbb
xchg
or
pop
jle
mov
xchg
mov
cmp
loope
les
cmp
xchg
std
add
xchg
in
push
lds
je
push
jnp
shlb
loop
mov
int3
push
cmpsl
dec
inc
and
pop
scas
jp
or
xor
fdivrs
cmp
movsb
sub
int
fimull
adc
lahf
jns
or
jp
mov
mov
push
mov
aaa
sub
test
xor
stos
leave
fistpll
cmpb
mov
xlat
cmpsb
add
mov
imul
loopne
daa
movsb
dec
adcl
xor
dec
mov
das
cmp
mov
popf
pushf
push
loope
mov
cmc
out
movsb
mov
jne
dec
sbb
repnz
push
hlt
fisttpll
sbb
lods
or
cmp
cld
adc
cmpsb
mov
mov
shrl
fwait
ret
hlt
jecxz
dec
cltd
sbbb
mov
popa
push
xor
ss
mov
mov
sub
ret
mov
push
cmp
out
mov
lahf
bound
sbbl
jmp
stc
shll
fists
bound
cmpsb
or
or
sub
sbb
or
xor
adc
pop
push
sub
rcrl
and
pop
mov
lods
push
push
mull
hlt
aam
mov
stc
push
cwtl
or
cwtl
xchg
mov
xchg
jmp
xor
test
shl
daa
out
into
mov
and
neg
movsl
movsl
jecxz
jmp
cltd
dec
jb
mov
cwtl
pop
aad
dec
cmpsb
adc
cpuid
push
hlt
loope
xor
std
daa
push
lock
inc
mov
sub
pop
xchg
lret
and
and
stc
cli
xchg
mov
lock
test
dec
loopne
jo
add
mov
test
repnz
jo
adc
daa
dec
jmp
fsubl
leave
enter
mov
xor
repnz
imull
adc
mov
mov
pop
dec
scas
inc
or
inc
adc
mov
jno
ljmp
loopne
mov
cmp
sbb
jg
jl
jg
movsb
mov
jo
popl
hlt
imul
xchg
pusha
mov
xor
sub
add
je
jmp
fs
mov
cmp
popa
inc
xchg
pop
inc
xor
rcl
int
pop
fs
int3
insb
or
mov
sub
lods
adc
pop
add
imul
icebp
sub
push
mov
mov
frstor
mov
pop
sbb
loopne
cmpsl
cli
andb
cli
mov
loope
mov
out
adcb
mov
push
ja
sbb
mov
pop
push
jno
cmc
lret
dec
mov
and
mov
push
xchg
jne
aam
arpl
and
fists
nop
adc
push
dec
mulb
xchg
rcrb
adc
pop
aaa
outsb
mov
adc
jmp
sbb
mov
pusha
inc
icebp
lods
dec
nop
cli
incl
mov
stc
xor
jbe
fdivs
int
jae
cmp
push
ficoms
lcall
pushf
pop
pop
loopne
imul
std
lahf
es
orl
mov
mov
and
cs
push
or
pop
lahf
push
in
adc
xchg
iret
dec
sbb
test
or
bound
popf
out
cld
orl
push
push
xor
mov
pusha
add
pop
rcrb
movsl
sbb
cmpsl
mov
push
mov
sbb
pop
pop
pop
jp
mov
imul
gs
jmp
arpl
cmp
or
mov
nop
pushf
icebp
pop
xor
nop
scas
ds
xchg
inc
aaa
xchg
mov
or
ja
lahf
stc
out
adc
jmp
fstp
nop
pinsrw
data16
mov
or
mov
cmp
stc
cmc
xchg
push
lock
outsl
mov
push
fwait
stc
mov
inc
sbb
jmp
idivl
mov
pop
cwtl
and
dec
dec
mov
inc
jbe
fisttpl
imul
mull
jmp
or
jl
popa
mov
sbb
add
mov
je
mov
xchg
ret
lea
lds
push
push
jle
push
xor
cli
int3
pop
aad
cli
pop
inc
popa
fst
mov
mov
pop
xchg
jb
scas
xor
push
fstps
cmp
test
mov
jp
mov
mov
popa
insl
cmpsb
xchg
pop
sub
mov
dec
push
in
dec
adc
pop
jbe
mov
scas
pop
dec
shrl
push
dec
lcall
fmull
frstor
fmul
int
or
lock
xchg
or
js
push
outsb
push
sbb
mov
loopne
add
cld
and
stc
xor
xchg
in
add
add
lcall
push
lea
enter
and
xchg
xlat
movsb
fisubs
push
int3
xorl
mov
xchg
add
roll
lock
mov
or
xor
mov
into
sub
lds
subb
mov
mov
in
push
sbbb
cmp
mov
dec
mov
sub
mov
mov
sti
ljmp
fildl
outsl
mov
cwtl
roll
lcall
jo
pop
mov
pop
popf
cmpsl
ljmp
fucomip
jg
sahf
xor
sbb
adc
jb
push
mov
out
mov
xchg
mov
pop
cld
pop
imul
enter
lods
adc
mov
mov
and
rolb
cmpsb
loopne
mov
loope
shl
lea
lods
or
popf
pusha
dec
add
es
sti
mov
pop
loop
call
push
jb
leave
fldenv
mov
mov
sbb
test
out
aas
mov
pop
loopne
cmpsb
sahf
and
std
je
mov
add
inc
push
ss
jae
push
or
xchg
mov
push
pop
mov
js
fwait
pop
bound
stc
dec
outsl
aam
test
outsl
fwait
mov
cmp
inc
inc
imul
fisttps
ljmp
into
mov
mov
fs
popa
mov
adc
imul
shrb
out
mov
jge,pn
pop
and
and
in
stos
arpl
mov
adc
mov
fisubrs
xchg
imull
lock
pusha
xor
cmp
mov
and
stc
cmpsl
jae
nop
push
shl
test
or
out
scas
lahf
fsubrl
push
or
lret
movsb
sbb
imul
in
jmp
jle
shlb
mov
outsb
ljmp
inc
push
fs
xor
cmc
fsubrs
adc
sbb
mov
or
sbb
mov
ljmp
mov
fadd
sti
fmulp
outsb
daa
mov
xor
enter
sets
pusha
xor
sub
sti
push
mov
cmp
int3
mov
outsw
inc
xor
ss
jmp
mov
daa
mov
cmp
adcb
inc
mov
xchg
out
pushf
in
push
fbstp
lret
xor
push
lcall
stc
mov
hlt
into
or
out
js
xor
or
jns
mov
sbb
jmp
push
lret
loope
xchg
gs
jecxz
ds
xchg
lret
fwait
ljmp
cld
lret
enter
movsb
test
jle
xor
cmp
push
cmp
leave
sub
fsts
or
mov
popa
mov
hlt
scas
lret
enter
xchg
jnp
rol
test
mov
ror
add
mov
stos
push
in
add
pusha
mov
mov
pop
les
pop
cmp
adc
hlt
jge
mov
push
repz
push
cmpsb
andb
push
and
adcl
into
xchg
sbb
pop
push
in
mov
lret
enter
jne
pop
mov
and
mov
data16
cmp
cwtl
imul
push
shrb
adc
xor
scas
fsubl
fwait
sbb
iret
dec
pop
push
outsl
call
fwait
out
loop
popf
jnp
mov
cmpsl
jp
call
shrb
ss
ljmp
push
mov
inc
test
aad
mov
lea
push
dec
mov
addr16
int3
sbb
and
jl
scas
out
cmp
adc
pushf
ret
add
xor
pop
inc
es
lock
pop
sub
test
add
sub
xchg
icebp
subl
dec
in
xchg
int
rorl
cmp
jae
std
pop
rorb
inc
xor
xor
lret
push
add
div
inc
jl
ja
rcll
mov
xchg
aaa
xchg
mov
stos
xor
jg
adc
mov
push
repz
or
imul
cmp
sbb
aad
aam
lret
sub
pop
or
mov
inc
fstpl
daa
lahf
push
inc
lret
imul
push
out
sti
inc
cmp
andb
sahf
shr
hlt
mov
fildl
dec
or
pop
lret
lret
fisubrl
and
icebp
popf
sbb
fisttpll
lock
mov
adc
add
jae
flds
mov
mov
lea
repz
jne
clc
and
dec
sbb
sarl
in
push
lahf
dec
inc
cltd
mov
lock
fs
pop
inc
mov
adc
les
lret
jmp
test
fsubs
adc
iret
scas
inc
icebp
or
insl
jg
imul
jo
inc
arpl
adc
fcoml
pop
mov
mov
pop
sahf
arpl
jno
cmpsl
sub
fbstp
jl
add
repz
lahf
imul
dec
iret
sbb
jo
xchg
das
and
jo
insl
pop
mov
add
inc
add
push
push
into
mov
fistpll
lods
fdivl
mov
ret
nop
ficoml
adcb
xlat
add
outsl
cld
mov
roll
inc
xchg
test
xchg
or
loopne
push
dec
and
sbb
pop
pop
jl
mov
lcall
lret
inc
in
insb
xchg
daa
jnp
test
or
jno
fildll
dec
jp
inc
jns
xchg
popf
out
xchg
fmull
cli
jb
test
sub
lret
hlt
rorl
push
xor
rorl
lcall
fmuls
leave
adc
in
dec
push
pop
jns
and
adc
pop
jecxz
rclb
pop
xor
nop
les
mov
fdivrp
jo
mov
mov
pop
outsb
lock
adc
in
pop
and
out
pop
and
je
nop
pop
cmpsb
adc
adc
mov
push
fs
sahf
imul
push
popa
shrb
sbb
ds
je
push
addb
out
into
xchg
fcom
adc
jno
in
mov
mov
les
jg
push
sahf
aad
sbb
sti
xchg
cli
or
fiaddl
xchg
cmp
jne
out
cmp
stos
loopne
aas
faddl
push
xor
sub
mov
sbb
sbb
cmp
cwtl
js
fmuls
pop
lret
int3
jmp
popf
es
push
inc
lcall
xlat
mov
sbb
loop
jbe,pn
mov
xchg
mov
les
pop
popa
cmpsb
jo
lds
sub
aaa
out
dec
flds
jb
add
ret
sbb
push
and
pop
or
adc
xchg
out
jbe
in
or
insb
sbb
sar
loope
aas
ret
jmp
aam
jecxz
imul
fcmovu
mov
cs
cs
ret
lahf
or
dec
lock
aas
adc
loopne
flds
xor
mov
fisttpl
ja
ss
ficompl
shll
loopne
jmp
dec
fwait
ljmp
xor
es
fidivs
test
lret
sar
cmp
mov
xor
cmp
jns
mov
sbb
jge
les
mov
mov
icebp
mov
arpl
ficompl
mov
out
inc
inc
add
xchg
or
mov
icebp
mov
fidivrl
sahf
scas
lock
ret
cmp
xor
fwait
push
pushf
mov
cmp
movsl
mov
xchg
enter
lcall
xchg
pop
imul
xor
pop
pop
pushf
test
pusha
je
test
fildl
outsb
rorl
jne
mov
repnz
sub
push
daa
test
xchg
or
xchg
mov
sbbl
xor
dec
loop
add
inc
cltd
push
mov
add
mov
xchg
pop
adc
mov
mov
popa
insl
dec
int3
cmp
push
push
daa
jnp
xor
mov
ds
jle
pop
lods
outsb
ror
add
inc
loop
mov
stc
pop
cmp
mov
iret
sbbb
frstor
xor
mov
push
test
fsubs
xor
mov
inc
fsts
dec
mov
dec
adc
or
outsb
aam
movsb
movsb
aad
pop
mov
bswap
cmp
pushf
ret
mov
cs
cmpsb
push
inc
lahf
fcomi
and
mov
sarl
cmp
xchg
in
outsb
adc
xlat
ret
jnp
adc
cwtl
inc
and
lods
dec
imul
inc
mov
xor
jno
adc
or
dec
xchg
subb
mov
loopne
std
push
shr
xlat
outsl
stc
mov
adc
mov
jbe
mov
mov
sti
push
mov
xlat
jnp
aas
out
inc
cmp
and
jno
lcall
daa
dec
movsl
mov
jge
and
inc
lret
or
pop
xor
push
icebp
daa
std
clc
cmpsl
sub
loope
sbb
push
mov
inc
push
stos
inc
mov
nop
lock
xchg
outsl
in
push
lea
cmp
adc
sbb
dec
cltd
and
dec
jmp
sbb
push
or
gs
mov
jnp
mov
adc
movl
icebp
jno
int3
sahf
jge
and
or
jge
sbb
mov
les
repz
mov
addr16
push
cmp
ds
push
jno
jg
inc
pop
imul
cmp
mov
cs
adc
sbb
inc
jnp
in
rcrb
sahf
fnsave
loopne
jbe
cs
push
push
scas
testb
jmp
jge
mov
imul
push
jne
roll
dec
pop
cwtl
pop
lahf
mov
shll
mov
xchg
notb
and
xor
lock
push
aam
pop
int3
jne
lcall
popa
ljmp
add
mov
mov
mov
dec
shll
mov
mov
dec
cmpsb
mov
push
lret
imul
sbb
xchg
mov
out
inc
xchg
mov
mov
mov
rorb
or
cltd
sahf
adc
pop
xchg
mov
lea
fcmovnbe
sub
sbb
push
enter
test
or
and
sti
in
loop
inc
ret
arpl
stos
sbb
adc
cwtl
loop
sahf
or
incl
lods
adc
sbbl
sub
aaa
sub
lahf
lock
addr16
fstpt
addr16
jo
call
sub
lcall
push
dec
pushf
or
or
dec
inc
add
pop
in
push
ds
stc
call
je
mov
fildll
insl
jmp
cmp
pop
dec
int3
mov
xor
ja
insb
aad
shll
pop
xor
outsb
push
xorb
push
fisttpll
das
movsl
jle
push
loope
les
jbe
xchg
push
adc
imul
ret
jae
in
fcompl
dec
jb
or
stc
xor
dec
sti
in
nop
mov
sbb
movmskps
mov
sbb
jp
jle
orl
mov
mov
xchg
lret
loop
jecxz
push
cmp
xorb
stc
push
cmp
sub
adc
frstor
ucomiss
mov
push
rolb
or
xchg
xor
repz
int3
jnp
aaa
cltd
dec
xchg
pop
mov
arpl
mov
loope
js
std
test
mov
sbb
icebp
cmpsb
pop
jge
mov
sub
int
arpl
ja
notb
jns
mov
adc
imul
cmpsl
xchg
ja
cmp
jo
std
stc
js
insl
mov
inc
add
push
mov
int
es
cmp
in
dec
hlt
fwait
add
scas
cmp
xor
push
inc
push
add
push
add
imul
or
jge
jmp
add
cmpsb
or
inc
adc
in
ja
mov
push
les
out
adc
inc
cmp
das
inc
inc
xchg
xchg
mov
insl
pop
jp
sub
rorb
fsubrl
xor
sub
fwait
mov
inc
adc
fcmovne
rcrl
add
sub
fimull
pop
mov
pop
nop
and
popf
ret
push
loope
iret
in
in
xlat
aaa
imul
mov
leave
fxch
adc
mov
addr16
and
adc
mov
aam
and
shll
cs
aas
adc
pop
fisttps
sbb
pushf
std
pop
fimuls
sbbl
gs
push
xchg
jns
fwait
push
or
and
cmp
push
dec
ret
mov
add
inc
xchg
push
dec
frstor
adc
aas
sbb
push
out
divl
movsb
sub
cmp
cmp
pusha
xor
xchg
jmp
mov
fs
imul
hlt
rorb
xchg
lahf
push
loopne
sub
inc
add
int3
out
enter
and
xlat
addr16
les
dec
ds
sarl
stos
add
cltd
add
mov
popf
dec
jae
ret
and
add
sahf
cmp
or
imul
das
bswap
dec
popl
scas
add
inc
push
and
roll
or
fldenv
mov
add
add
leave
mov
mov
ljmp
pop
inc
arpl
inc
stc
lret
mov
stos
sbb
lods
outsl
xchg
jge
mov
imul
adc
xlat
inc
cmpsl
cmp
and
adc
insb
push
data16
scas
stc
cmp
adc
jl
fwait
loop
pop
out
push
es
in
rcrl
icebp
insl
cs
jle
incb
adc
xor
mov
xchg
call
xor
adc
jae
faddl
mov
dec
push
cli
pop
adc
dec
inc
or
ret
lcall
cmp
outsl
xchg
aas
adc
mov
sbb
jns
mov
mov
xor
inc
arpl
mov
xchg
sbbb
pop
loop
push
sbb
stc
and
out
gs
mov
xchg
cmp
jecxz
sbb
sbb
lret
pop
addr16
testb
and
idiv
pushl
sbb
rcrb
add
nop
jp
pop
pop
ds
fistl
ret
aam
pop
cld
mov
repz
or
mov
adc
subl
test
mov
out
pop
rcrl
adc
test
js
punpcklbw
add
pop
ja
fidivs
sbb
mov
mov
es
jp
pop
adc
xchg
or
das
dec
int3
repz
movl
jno
rclb
repnz
fistl
pop
js
js
push
jle
test
inc
mov
dec
repnz
dec
inc
pop
arpl
dec
cmpsb
int
rclb
je
xor
jg
and
push
int
xor
aaa
or
xchg
out
mov
mov
mov
cwtl
push
pop
daa
dec
ret
test
ret
shll
lds
rol
xchg
push
fisubs
sub
repnz
cwtl
stos
add
push
add
mov
mov
addr16
stos
adc
fldt
sub
mov
inc
mov
jbe
das
outsb
jmp
adc
push
ljmp
dec
in
je
aam
adc
leave
dec
cltd
or
jl
call
sbb
push
mov
fs
sbb
cmpb
xor
push
arpl
cmp
stos
insl
test
les
stos
mov
jne
lods
xchg
movsl
dec
inc
movl
add
cmp
sub
test
push
je
pminsw
xor
cld
xor
mov
or
jno
mov
rcl
mov
add
idiv
imul
aad
gs
addl
movsb
repz
jecxz
bound
mov
or
dec
mov
and
sbb
and
sub
mov
hlt
les
xchg
jg
adc
and
ret
daa
pushf
inc
lods
cltd
sbb
and
lea
xor
sbb
rcrb
mov
fiadds
dec
fidivrl
icebp
inc
out
out
aaa
adc
sub
mov
outsl
sub
add
xlat
sub
movsb
jbe
adc
pop
repnz
adc
cli
inc
jge
addr16
or
cmp
fdivl
or
dec
test
out
inc
xor
xchg
adc
stos
out
fs
clc
add
imul
int3
cmc
inc
movsb
in
jns
pop
dec
pop
adc
jp
incb
add
mov
mov
push
iret
push
adc
repnz
sub
dec
das
call
sbb
mov
shrl
mov
mov
xlat
shrb
mov
dec
xchg
out
add
div
pushf
fstl
lods
or
mov
fisttpl
int
pop
pop
ror
clc
and
jg
mov
mov
push
jl
pushw
mov
imul
lods
lcall
imul
outsb
addr16
lods
fistpl
xchg
fisttps
insl
adc
rcll
repz
and
jge
nop
scas
scas
enter
xchg
push
mov
cltd
or
adc
or
mov
insl
jno
int3
and
jno
sbb
ss
mov
out
lods
push
mov
and
pop
lahf
add
ljmp
daa
push
fiaddl
cmpsb
mov
sbb
in
push
mov
hlt
inc
sbb
jg
mov
xor
les
rcll
mov
pop
sub
sbb
addb
test
fcmovnu
jns
push
sub
xchg
pop
sbb
xchg
cmpsb
inc
xchg
push
out
or
sub
bound
pop
arpl
sbb
sub
imul
dec
jnp
xor
xlat
xor
mov
loop
popf
inc
mov
sbb
jns
popa
movsb
cmpsb
pop
hlt
andl
or
lahf
sahf
jb
pushf
in
in
xlat
pusha
mov
mov
bndstx
out
lods
aad
stc
sbb
mov
loop
cli
dec
add
loop
repnz
sub
push
adc
cmp
mov
aas
pop
in
jp
test
int3
cltd
and
pop
adc
int3
mov
lahf
xchg
mov
inc
xchg
test
xor
mov
ficompl
push
push
aad
push
cltd
dec
paddsb
popf
xchg
lret
shl
rcr
adc
cmp
adc
in
and
inc
cmpsl
int
mov
dec
sbb
adc
in
mov
pop
call
push
icebp
mov
jae
pushf
ja
loopne
pusha
mov
cmp
mov
jle
ror
test
jg
es
outsb
sub
das
bound
fnstcw
jnp
cmp
or
pop
xchg
test
dec
sahf
adc
aam
cwtl
cmpsl
fistpll
mov
popf
add
jl
repnz
scas
pushf
cmc
loopne
sub
inc
cmp
lret
cmp
lcall
adc
pop
rcr
push
iret
test
aaa
sub
test
popl
xchg
out
jno
mov
lods
inc
pop
shrb
sub
inc
push
adc
pop
cs
mov
mov
das
fwait
js
pop
mov
mov
push
add
dec
mov
into
mov
shlb
adc
push
push
and
xor
sub
iret
mov
lods
orl
xor
mov
mov
xor
insl
out
xlat
mov
push
xchg
adc
lea
pusha
inc
cmpsl
sub
divl
into
xlat
mov
fsubl
pop
xchg
pop
xchg
and
fbld
ret
insb
mov
mov
fiadds
xchg
loope
jp
adc
and
cmp
jecxz
inc
jbe
or
je
mov
dec
cmpsb
xchg
cmpl
out
lds
clc
xchg
out
xor
jb
rolb
filds
push
mulw
inc
pop
adc
inc
cmp
cmp
mov
adcb
ret
call
push
stos
cmp
popf
inc
mov
frstor
ret
dec
pop
insb
cmpsl
pop
jp
in
movsl
push
inc
scas
add
xchg
add
push
jae
dec
xchg
xchg
test
cmp
ss
out
cmc
in
dec
adc
add
loop
dec
popa
add
sbb
clc
ret
sub
push
adc
pop
lods
xor
xor
loopne
jno
fmuls
fstpl
adc
pop
adc
push
xlat
popa
addr16
pop
jnp
push
sarb
adc
ss
push
pop
sbb
out
outsl
or
cmpsl
fidivrs
fsubl
pop
cli
jbe
or
sti
mov
mov
dec
mov
mov
ret
ret
cmp
les
push
mov
cmpsb
ret
shl
fists
mov
xchg
add
add
pusha
es
jle
addr16
inc
lret
sahf
dec
mov
icebp
call
int3
into
mov
jp
jb
sarb
or
neg
xchg
mov
mov
lahf
leave
inc
cmp
movsl
gs
in
xor
aas
and
negb
inc
fs
fwait
mov
fistpll
mov
jb
mov
push
adc
mov
xchg
inc
in
iret
mov
insb
es
jb
sbb
idiv
push
outsb
test
rcr
ss
pop
fidivrs
outsb
jp
and
adc
pop
add
jnp
test
mov
js
dec
arpl
cmp
cmp
and
test
xlat
clc
sbb
out
xor
xchg
pop
dec
arpl
std
push
xor
cmpb
sbb
adc
xchg
xchg
inc
mov
lret
mov
mov
and
lds
or
jmp
out
imul
cmpsb
sbb
dec
sub
mov
enter
fldenv
sahf
in
xchg
push
mov
fdivrs
push
sub
pop
nop
pop
lret
js
lods
or
pop
xchg
and
cmp
ss
inc
mov
aas
jnp
push
pop
xchg
inc
shrb
out
jl
push
call
inc
mov
je
pop
sub
jmp
sbb
pop
imul
push
ja
pop
shlb
daa
xor
push
aad
cmp
mov
lods
jne
test
rolb
adc
sbb
sbb
mov
xchg
push
icebp
repz
loopne
dec
into
xor
flds
int
aam
test
fidivs
mov
ss
sub
fcoml
cmp
adc
std
pushf
test
fisubl
mov
fnsave
in
imull
xchg
add
dec
push
add
jnp
pop
sub
dec
pop
arpl
add
in
jp
ljmp
inc
sbb
test
mov
pop
clc
mov
jmp
dec
mov
dec
stos
negb
outsl
roll
cwtl
and
pop
or
adc
adc
cmp
loop
lods
jns
psubd
sub
mov
ret
pop
pop
lds
xlat
cmp
push
incb
cli
mov
jae
pusha
jp
lret
xchg
add
dec
test
out
jne
sbb
popa
mov
dec
aad
scas
bound
jl
adc
mov
cltd
shl
shlb
jl
pop
aas
push
xchg
outsl
and
push
data16
lods
pushf
add
xor
gs
inc
movsl
pop
xlat
and
sti
push
push
adc
pop
mov
mov
addr16
stos
cmp
and
mov
cmovge
pmullw
or
pop
aaa
push
xchg
sub
mov
rorl
push
lods
out
and
notl
shr
or
jmp
xchg
daa
arpl
dec
xor
cmp
xchg
mov
add
dec
ljmp
imulb
lods
pop
fs
cli
loop
imul
jp
sub
mov
notl
jnp
mov
xchg
outsl
imul
bound
mov
sub
xchg
lahf
pusha
inc
es
adc
sbb
test
cmp
mov
pop
movsb
mov
push
icebp
and
push
cwtl
mov
xchg
stc
push
inc
cmp
mov
sarb
out
ja
fdivrs
mov
add
stos
push
in
iret
std
insl
sub
lcall
push
jmp
xlat
divb
xchg
pop
add
cmpsl
push
fstl
mov
stc
test
lahf
xlat
or
dec
data16
push
iret
xor
pop
out
aas
mov
cld
std
xchg
jbe
daa
cmp
pop
roll
incl
fsub
or
mov
mov
test
and
cmp
in
mov
aas
loope
enter
mov
add
pop
xor
loope
addr16
push
loope
scas
scas
mov
leave
daa
rcr
adc
jp
xchg
add
mov
aas
mov
fucom
cmp
jge
add
stos
push
dec
lret
pushf
cmc
dec
mov
fnstenv
out
mov
mov
xlat
stc
call
gs
adc
aad
dec
jle
dec
incb
and
and
les
pop
inc
ss
imul
sti
fcmovb
pop
sbb
pop
jo
icebp
aam
cmp
cmp
pop
loope
lock
cmp
sub
mov
jmp
inc
inc
pop
outsl
push
jle
insb
add
sbb
jge
ror
and
mov
lods
xchg
iret
repz
loop
xchg
test
in
push
or
xor
addb
jb
imul
and
inc
mov
daa
or
int3
popa
shll
mov
sub
and
ss
adc
add
jnp
dec
pushf
jg
and
sub
jp
cmp
enter
imul
pop
decl
pop
daa
in
jne
mov
pushw
stos
inc
in
movsl
arpl
aam
xor
sub
outsb
lds
add
inc
or
mov
adc
out
mov
jns
mov
and
cltd
inc
das
push
or
sub
lahf
pop
stos
fdivl
int3
nop
or
out
lods
out
call
sub
outsb
cld
jl
cmp
push
mov
mov
cwtl
ja
imul
sbb
in
arpl
shlb
iret
mov
mov
loope
in
enter
xor
popf
jecxz
lahf
mov
xchg
adc
xchg
xor
or
xchg
aad
scas
leave
pop
in
inc
dec
iret
lods
stos
enter
out
aaa
xor
and
xchg
cmp
cmp
rclb
sbb
pop
jmp
out
cltd
dec
push
adc
pop
fdivp
mov
shlb
daa
adc
out
xchg
mov
lcallw
mov
arpl
fldcw
aam
mov
xchg
repnz
icebp
jo
jno
push
sbb
mov
ja
loopne
pop
data16
mov
pop
mov
dec
mov
sbbb
jne
adc
les
lods
jle
mov
scas
in
aas
add
mov
iret
fdivl
and
xor
pop
cli
mov
fucom
push
xor
andl
mov
test
push
fwait
mov
sbb
mov
insl
ret
and
xor
out
icebp
loopne
adc
test
jb
out
jge
mov
fadds
adc
pusha
jb
das
orl
dec
lcall
fdivs
sarl
mov
ret
xchg
and
pop
or
mov
fwait
jo
and
incl
call
push
fbld
adc
fidivrs
cmp
push
jp
push
in
popa
jle
int
outsb
in
lods
adcl
cs
mov
cld
cmp
push
mov
or
pop
lret
jl
in
mov
inc
js
xchg
call
xor
leave
inc
jle
dec
mov
push
cld
test
jnp
filds
cs
insl
mov
es
push
jmp
xchg
sub
shl
daa
enter
ds
les
imul
adcb
xchg
ret
sbb
das
mov
xlat
lret
ds
xorb
fcompp
lea
adc
leave
andl
dec
jb
add
addb
dec
or
and
sub
jecxz
push
stos
addb
insb
mov
loop
add
sbb
ds
jmp
dec
cmp
fbstp
and
cltd
add
mov
mov
lds
jmp
loope
add
rol
pop
insb
mov
ret
jns
adc
jae
inc
mov
xchg
mov
dec
fimuls
and
push
cmc
lds
fbstp
pop
inc
pop
cmp
dec
cltd
int
xchg
in
sbb
cmp
fdivs
lcall
sub
fisubl
or
lock
scas
xor
mov
sub
jo
jp
ret
scas
rolb
cwtl
das
jmp
outsl
dec
xor
popf
inc
push
add
mov
push
sbb
inc
lock
ja
add
mov
mov
lcall
sbb
mov
or
jb
xchg
andps
sahf
les
aad
call
fxch
dec
popf
call
adc
add
js
and
sub
xor
call
cwtl
add
shl
xchg
and
loopne
ret
pop
sahf
aas
fldt
add
jnp
sbb
andl
adc
sbb
pop
loope
xor
rcll
insb
sub
inc
mov
adc
sarb
and
inc
out
ret
pop
fcmovne
in
rorl
lea
add
cmpsb
cmp
ja
mov
fstpt
outsb
out
cmp
fsub
xchg
lret
or
daa
jg
cmp
and
nop
mov
gs
jecxz
mov
pushf
shll
rol
adc
sti
stos
xchg
or
test
sub
push
xor
rclb
jmp
inc
xchg
rorl
or
int3
mov
or
lock
mov
call
sub
out
inc
jne
cmpsl
sub
lahf
popf
dec
xor
sbb
cmpsl
les
sarl
push
das
mov
and
testb
mov
xor
mov
dec
xor
sbb
fld
ja
fisubs
ja
mov
lea
and
mov
pop
stc
test
adc
test
cmc
ljmp
xchg
mov
insl
fwait
cmp
popa
sbb
mov
adc
dec
fldl
cltd
jecxz
adc
mov
cmp
push
cmc
mov
rolb
hlt
lock
je
inc
outsb
xlat
cmpsb
jns
jge
push
and
xchg
lcall
in
and
std
pushf
add
test
in
pop
fimull
in
cmp
and
sub
inc
mov
pushf
shrb
sub
pop
mov
adc
add
jns
mov
lods
pop
and
shlb
and
sahf
fisubrs
jl
out
or
add
sub
adc
mov
lret
call
and
mov
xor
mov
int
movsb
ror
add
cmc
ret
jp
shrb
or
lret
bound
pop
add
sbb
xchg
mov
pop
dec
jno
repnz
cltd
shlb
add
add
aam
adc
notb
and
rclb
call
dec
mov
dec
ds
xor
loop
fdivrl
mov
sbb
out
mov
test
into
sti
ret
mov
cli
pusha
lret
jo
insl
sub
leave
mov
test
xchg
sub
add
jbe,pt
or
jae
cmp
pop
lahf
push
xor
int3
nop
pop
jge
push
int3
es
mov
mov
popa
jg
andb
fldt
mov
add
xlat
add
mov
call
xchg
xchg
call
dec
lods
add
and
jbe
and
adc
ja
mov
jb
cmpsb
sub
fcomps
inc
push
sbb
sar
or
popf
rorb
mov
andb
subl
and
mov
popa
jmp
dec
icebp
and
sti
push
xor
loop
xor
sbb
shl
xor
inc
data16
cltd
subb
xlat
mov
fldln2
loope
jno
sub
add
insl
test
test
adc
je
arpl
jns
out
add
scas
sbb
mov
mov
out
xor
insl
clc
add
mov
add
push
mov
call
push
dec
out
mov
jmp
mov
jmp
pop
fbld
aam
dec
mov
cwtl
xorl
prefetcht2
mov
hlt
adc
ds
test
btc
fcomps
pop
xchg
inc
and
into
leave
jge
cld
ror
je
pop
push
js
mov
or
loopne
push
fwait
xor
sub
mov
mov
mov
in
aam
fiaddl
jbe
jge
sub
cltd
mov
sti
mov
jp
shlb
mov
loopew
fimuls
dec
or
pop
inc
push
push
lcall
push
enter
cs
idivb
sub
xor
daa
xchg
push
mov
outsl
xchg
push
insl
clc
push
addr16
cli
aas
mov
push
lret
lcall
sub
pop
jmp
aad
mov
mov
mov
fdivrs
fisubrl
xor
adc
bound
pop
fnsave
dec
add
daa
jmp
push
in
mov
jle
dec
loope
gs
xor
and
pop
bswap
pop
lret
jp
xchg
leave
adc
inc
out
add
scas
xchg
hlt
lods
sbb
imull
adc
add
mov
lds
add
pop
out
scas
mov
lahf
movsb
push
lret
loop
sbb
outsl
dec
push
mov
ret
and
xchg
add
jge
movsb
je
out
jecxz
mov
imul
daa
ret
out
push
add
adc
sar
pop
lock
incl
inc
adc
and
cmpsl
inc
adc
nop
pop
repz
ja
aaa
xchg
into
loop
inc
in
sbb
cmp
inc
push
xlat
fsubl
negl
mov
xor
shlb
gs
inc
xchg
jge
es
xchg
mov
fdivr
test
dec
in
ret
push
push
or
lcall
dec
outsl
mov
jp
imul
test
and
cmp
das
les
pop
scas
push
sub
sti
push
push
xchg
sbb
movsb
fcomps
xlat
and
jae
push
test
imul
jb
adc
gs
cmp
loope
pop
addr16
fs
mov
jae
idiv
and
lock
rcll
mov
sub
adc
cmpsl
stos
fimuls
ljmp
hlt
orb
aam
add
or
pusha
ss
xlat
nop
les
xor
jmp
enter
dec
jecxz
cmp
call
scas
fcmovbe
int
mov
pop
cmp
lock
mov
stos
dec
aas
nop
out
sbbb
addw
push
cltd
mov
mov
dec
push
and
adc
ss
or
loop
mov
mov
xchg
popa
inc
push
dec
sub
pop
mov
and
mov
push
fcompl
pop
inc
stos
sub
xor
jo
iret
lahf
push
jnp
dec
cmp
jecxz
or
jp
rclb
fcmovnb
cmp
pop
sub
inc
arpl
ja
gs
sbb
pop
jecxz
call
pop
pop
lret
das
ss
loope
add
add
push
in
ja
addr16
dec
and
mov
sub
in
xor
jno
jne
mov
and
aaa
and
dec
adc
insl
push
lods
pusha
jge
jg
lods
mov
inc
nop
push
add
jmp
pop
mov
jl
xor
dec
jns
cs
gs
inc
mov
cmp
mov
jae
out
lods
sbb
dec
test
jmp
cmc
fsub
pop
and
sub
mov
ss
or
nop
dec
mov
sbb
mov
add
inc
pop
cmp
dec
rcl
nop
push
pop
popa
mov
sbb
shrb
fdivrs
jns
adc
push
pop
adc
mov
add
dec
mov
dec
inc
add
rorb
ret
pop
ljmp
push
xchg
enter
inc
jnp
xchg
pop
enter
sub
sbb
outsb
lahf
xor
mov
inc
pop
es
std
mov
mov
adc
add
cmp
jns
sbb
sub
ret
iret
pop
pop
lods
sub
lcall
div
faddp
insb
xchg
movsb
outsl
pusha
das
out
int3
out
int3
and
out
sub
and
repnz
cs
insl
enter
add
push
push
inc
cld
pop
lock
scas
jae
insl
jg
or
out
mov
mov
pop
out
data16
out
jl
movsl
cwtl
fmuls
lahf
data16
xchg
into
dec
fidivs
adc
out
adcb
adc
test
mov
jnp
jp
pop
dec
mov
mov
push
mov
push
adc
mov
mov
je
push
mov
adc
addb
push
pusha
fwait
pushf
xchg
cvttps2pi
pop
push
mov
jge
insl
jnp
lret
enter
test
aas
je
cs
dec
xor
mov
aad
mov
lahf
outsl
loope
pop
inc
xchg
lahf
sarb
or
xchg
push
sbb
pop
bound
popa
jl
incb
pusha
pop
std
pop
pop
or
cmp
jg
mov
arpl
mov
jecxz
mov
xor
fisttps
add
jge
jne
nop
ret
xor
xchg
xchg
test
xor
adc
mov
mov
mov
movsl
push
icebp
push
mov
scas
lock
cmp
sbb
sub
xlat
xor
ret
scas
xlat
inc
mov
addl
inc
test
cmpsb
ljmp
jl
into
xor
mov
filds
dec
movsl
add
mov
sub
repnz
in
rcl
lret
push
cld
sbb
add
iret
clc
adc
cmp
sbb
rcr
shll
cli
sbb
sbb
inc
jb
in
xor
aas
fcoms
xorl
icebp
andl
mov
jp
sub
fs
lods
fnstcw
jmp
inc
mov
pop
sti
adc
lods
jg
mov
fs
push
cli
add
loope
mov
jge
lods
mov
push
push
frstor
adc
xchg
ficoms
sub
arpl
mov
sbb
loopne
das
stos
fildl
push
mov
popf
sahf
inc
sub
repz
dec
jbe
add
xchg
push
imul
clc
xchg
cmp
push
je
call
cmp
jp
push
into
or
sbbb
iret
leave
sub
jbe
stos
pop
push
ret
mov
test
cmc
mov
nop
frstor
push
sbb
xor
fucomp
aam
insb
out
jle
popa
loope
dec
xorl
orl
mov
dec
sub
xor
outsb
pop
pop
sbb
lds
popf
mov
loop
adc
pop
xor
adc
xorb
pusha
inc
mov
jbe
pop
pusha
or
mov
fwait
sbb
repz
push
mov
and
dec
mov
inc
icebp
loop
dec
aam
test
lcall
cmp
dec
mov
jnp
add
nop
stos
fisubrs
push
in
mov
add
mov
cmp
sub
out
std
dec
xor
lahf
jg
jnp
add
insl
test
cmpsl
xor
xor
mov
aam
push
insb
rcrl
xor
jmp
lods
pop
jge
hlt
fsub
stos
xchg
sbb
fcoms
dec
data16
xchg
iret
mov
sbb
jg
sbb
enter
fidivrs
push
add
jg
push
or
inc
popf
mov
stos
negb
aam
jl
adc
inc
and
mov
mov
xchg
fs
repz
or
js
data16
push
ljmp
mov
into
icebp
push
jle,pn
mov
invlpg
sbb
cmp
mov
jecxz
adc
repnz
call
pop
shr
test
jl
fisttps
inc
cli
jne
pushf
cs
and
push
pusha
adc
push
push
sahf
in
mov
xchg
iret
aas
rorb
xor
bound
push
in
add
imul
dec
dec
inc
clc
stos
in
dec
loop
stos
mov
mov
jae
xchg
mov
jbe
ror
lds
push
jb
popf
popf
enter
outsb
outsl
mov
in
shlb
outsb
pop
adc
dec
scas
dec
pop
xchg
cwtl
daa
add
jne
mov
fidivl
in
mov
jnp
sub
mov
dec
outsl
out
mov
fisubs
in
push
jle
and
in
pop
xor
cmpsl
and
add
sbb
rorb
psllw
add
faddp
stos
daa
xchg
pushf
sub
bound
cmp
push
movsl
jnp
subb
jns
xor
xchg
rcrl
outsb
movsl
inc
clc
out
push
cli
popf
test
cmp
fld
jmp
into
mov
imul
ret
sub
iret
sbb
push
jae
imul
sub
mov
imulb
lds
je
out
je
fadd
inc
dec
insl
add
and
sbb
popf
push
adc
lret
scas
mov
xchg
pop
jne
mov
call
dec
pop
fisubrl
add
mov
mov
andb
addr16
xlat
inc
inc
movsl
je
jns
pop
push
pop
stos
mov
in
push
in
out
and
xor
insl
add
outsb
fs
cmp
and
mov
fstps
ljmp
iret
push
addr16
lret
inc
out
inc
fstps
sub
mov
inc
imul
jb
popa
inc
int
push
push
pop
mov
xchg
shl
outsl
fcoml
daa
maxps
or
leave
rcr
sbb
mov
pop
bound
cmpsb
nop
mov
or
aad
adc
sahf
dec
inc
and
pushf
add
sub
sbb
sti
mov
xchg
div
loope
imul
cmp
jb
cs
add
std
ret
mov
mov
aas
jge
jo
inc
push
in
outsl
nop
inc
cmp
xchg
test
notl
cmp
jge
mov
xchg
mov
test
sbb
rcll
ds
xor
adc
std
xor
js
hlt
mov
lahf
inc
dec
cmp
inc
and
fs
arpl
ficompl
cmp
jmp
leave
or
cmp
lret
lock
jo
xchg
nop
mov
lret
repz
xchg
ljmpw
int3
bound
pop
xchg
xchg
inc
sub
outsb
shrb
jl
cmp
test
into
cmc
adc
paddsw
ss
rcll
push
adc
sub
loope
sub
stos
jae
push
or
inc
or
push
mov
jl
ja
fbld
push
jnp
ror
nop
lea
inc
sub
xchg
jecxz
inc
in
icebp
or
aas
and
clc
jnp
pushf
stos
jle
pushf
outsl
cmpb
ja
out
shll
push
mov
lods
cmp
push
and
cwtl
fbstp
or
or
xchg
inc
inc
cmc
jl
jp
sub
dec
and
sub
pop
scas
inc
out
cmp
sarl
aam
call
lcall
gs
pushf
movsl
jbe
cmp
xchg
fstp
in
push
sub
xchg
repz
sub
pop
jmp
xor
notb
stos
cmp
bound
leave
repz
fbld
je
dec
lahf
adc
sub
mov
lea
xchg
add
mov
loope
mov
push
inc
inc
data16
fwait
out
xor
test
hlt
outsl
mov
loop
lret
js
pop
mov
mov
das
ss
adcb
lret
outsb
rcll
fwait
push
imul
mov
dec
lods
pushf
nop
fscale
fnstenv
dec
lret
shll
push
xchg
adc
mov
push
mov
sarl
out
jle
pop
push
inc
adc
bound
test
pop
in
imul
sbb
or
andb
push
jecxz
inc
clc
sbb
xor
dec
sbb
dec
mov
fisttpl
mov
sbb
enter
xor
cld
mov
push
cmp
mov
xchg
adc
ret
pop
rclb
roll
pop
pop
inc
mov
or
lods
sbb
push
out
sub
out
movsl
ss
push
scas
gs
shll
cmpsl
push
xchg
mov
js
das
sub
sub
repz
fcomi
add
movsb
neg
rcrl
xchg
xchg
stos
and
push
idivb
std
sub
aad
mov
nop
rcrl
xor
inc
ret
scas
xor
aam
push
out
aam
repz
out
data16
cmp
ljmp
or
mov
mov
and
pop
xchg
jl
add
fcoms
lods
scas
fidivl
test
cmp
mov
sbb
dec
fdivrl
popa
dec
cltd
fcoms
outsb
mov
xchg
inc
into
xchg
add
shlb
imul
aas
inc
and
mov
addb
push
add
xor
aaa
sbb
hlt
stos
push
inc
outsl
inc
shll
int3
sub
daa
repnz
xchg
lods
repz
xor
cmp
int
lea
pop
push
cld
adc
mov
ret
dec
cmp
fucomp
pop
mov
jb
xchg
loope
sbb
mov
loope
xchg
mov
daa
test
inc
insl
cld
jns
cs
mov
mov
inc
fsubl
test
test
jle
mov
pop
les
mov
ljmp
or
push
roll
xor
xchg
dec
and
jge
xor
xorl
rcll
fsubrl
dec
push
push
icebp
stos
xchg
pusha
lcall
or
jl
clc
lcall
adc
in
and
mov
loope
sbb
mov
and
jp
sbb
fcomp
mov
fnstcw
stc
pop
jge
or
dec
and
lret
ds
mov
jb
enter
jns
dec
dec
xchg
call
mov
stos
test
adc
xor
lods
ficoml
out
jo
fwait
pop
pop
adc
jb
in
mov
and
testl
aas
loopne
movsl
add
mov
in
mov
imul
enter
gs
test
xor
movsl
cli
or
rcrl
sbb
push
mov
push
push
lret
out
rolb
int3
pop
add
dec
sub
jae
or
setns
lret
cmp
stc
dec
test
dec
jmp
adc
mov
inc
ja
adc
pop
pop
fdivrs
dec
lcall
inc
lahf
sbb
xchg
adc
and
push
mov
fs
aad
mov
inc
fldlg2
dec
xchg
stc
mov
shlb
jo
ror
mov
imul
test
in
aaa
mov
push
out
inc
enter
mov
fnstcw
mov
xor
js
add
or
dec
in
push
movsb
jp
in
ret
rcrb
adc
test
xchg
imul
aaa
mov
mov
xchg
pop
loope
andl
xor
inc
fldl
ficoms
es
dec
ret
stos
adc
pop
jmp
sub
pop
loop
jbe
enter
add
cs
pushl
stos
pop
aas
scas
jmp
or
cmpsb
jo
xor
xchg
cmp
int
add
imul
cmp
stc
mov
jbe
mov
clc
js
adc
jnp
pop
arpl
pop
push
jl
aad
pop
sub
or
loopne
aad
mov
xor
lcall
rclb
shll
inc
pop
mov
xchg
int3
aas
cmpsb
addr16
push
movsb
jno
jae
and
dec
pop
xchg
cmp
jl
mov
push
ljmp
enter
mov
or
subl
mov
icebp
das
sub
stc
es
sbb
inc
icebp
insb
adc
inc
jp
xchg
inc
mov
push
mov
cmp
lods
add
jne
imul
pop
shr
ret
sbb
icebp
push
pop
cwtl
push
cmpsb
or
aaa
xchg
mov
inc
add
mov
in
or
in
ret
test
loopne
mov
inc
cmp
fs
je
dec
or
sub
ljmp
mov
mov
orl
sbb
add
arpl
fnstsw
pop
mov
xchg
insl
sar
sbb
jbe
fwait
ss
out
mov
jne
test
or
scas
repz
gs
pop
call
dec
sub
adc
xor
xor
js
adcl
sub
add
and
jp
gs
cmp
bndstx
insl
pop
lods
push
mov
rorl
addr16
or
dec
loope
loop
hlt
lods
dec
xor
ljmp
jnp
imul
jb
mov
sbb
cmp
sub
movsl
les
call
cld
sbb
mov
negl
in
pushf
mov
jmp
xchg
fisttpll
jnp
ljmp
jl
and
in
je
lret
adc
ds
daa
mov
sub
cmp
insl
divl
mov
push
fisttps
mull
fwait
das
jns
stc
fsubs
dec
mov
les
push
fwait
daa
cwtl
or
cmpsb
fistpl
push
sahf
ja
push
pop
repz
aam
jl
enter
jno
shll
xor
je
mov
cltd
clc
mov
xor
mov
lret
xor
int3
jl
mov
jg
or
mov
test
dec
jl
popf
push
out
cld
shll
jge
ret
in
xorb
ret
pop
mov
repnz
pop
sbb
cltd
pop
fwait
out
popa
ss
mov
or
sahf
jmp
mov
push
xlat
out
inc
fnstcw
adc
in
popf
dec
gs
inc
push
mov
push
mov
cs
xor
vrcpps
sahf
imul
loopne
pushf
dec
pusha
mov
fnstcw
stos
sub
jae
xor
mov
lock
out
aad
sbb
insb
cmp
mov
ret
xor
mov
pop
addr16
into
lret
cmp
stos
std
fdivs
mov
xor
mov
fdivrs
mov
mov
sub
cli
hlt
inc
pop
xor
add
inc
shll
pop
cld
ja
stc
xlat
das
sbbb
dec
adc
xchg
and
and
cmp
mov
loopne
jno
push
cmc
and
dec
mov
mov
mov
jg
cmp
jno
cmpxchg
jmp
cli
sar
repnz
lods
fs
pop
inc
cltd
in
lcall
xlat
xchg
push
xchg
or
xchg
push
xchg
in
enter
add
imul
xchg
dec
fcoml
lcall
rcrb
scas
mov
daa
ror
mov
jle
incb
shlb
pop
add
insl
cmp
xlat
xlat
xchg
pop
jp
out
xor
test
pop
mov
xchg
mov
cwtl
pop
mov
out
pop
stc
inc
arpl
xchg
lret
xor
mov
mov
jbe
jbe
adcl
orb
mov
mov
mov
adc
cmpsb
sub
adc
mov
jae
lds
mov
icebp
cmpsb
icebp
out
ljmp
leave
rcrl
lret
pop
fldz
lock
aaa
sub
jle
sbb
push
sbb
fwait
in
xor
sub
ficoms
xor
inc
in
inc
scas
or
data16
scas
mov
jp
daa
push
es
push
shrl
adc
rcll
int
mov
inc
xchg
out
mov
mov
mov
sub
xor
jne
inc
int3
jmp
lret
movsl
push
mov
pop
or
gs
add
repz
jecxz
or
pop
mov
arpl
pop
lds
dec
mov
test
sbb
popa
fwait
std
not
loop
in
push
pusha
scas
sahf
mov
push
shll
mov
sarb
jne
sub
dec
cmc
hlt
cwtl
mov
sub
inc
cwtl
iret
adcl
pop
pop
pusha
mov
sar
int3
jecxz
scas
push
adc
std
push
mov
aas
push
add
imul
cmp
aam
test
xchg
fbld
clc
fwait
mov
xor
lret
bound
add
push
xchg
xor
xor
mov
fcoml
xlat
frstor
jp
mov
fnsave
inc
das
pop
sub
push
into
mov
cld
pop
push
mov
push
fdivl
xlat
call
or
out
jae
pop
mov
and
mov
loope
cwtl
into
cmp
insl
fistps
xchg
sbb
push
lods
ret
ljmp
lods
bound
stos
test
inc
pop
push
insb
scas
cmp
lahf
sub
mov
jo
sbb
je
mov
cli
arpl
xchg
adc
stc
lret
sti
in
fstpt
testl
std
out
hlt
movsl
cmp
dec
fimuls
stc
mov
cmpsb
cltd
or
jb
mov
push
pushf
dec
shll
rol
inc
xorl
and
xchg
jbe
jecxz
fwait
mov
ja
ljmp
push
fcompl
mov
jge
adc
mov
add
gs
in
dec
mov
push
mov
gs
mov
stc
outsl
dec
lds
roll
add
sbb
fidivs
scas
or
push
dec
icebp
fidivs
rorl
xor
sbb
sub
mov
xchg
stos
cmp
push
push
mov
inc
add
clc
mov
ljmp
sub
pop
mov
adc
sbb
lret
stos
push
das
xchg
in
add
das
jae
xchg
sub
mov
pushw
and
lock
sub
lret
push
mov
rcr
lods
xchg
mov
pusha
dec
mov
xchg
and
mov
adc
xor
test
mov
cwtl
aad
xchg
dec
adc
dec
aas
addr16
add
cmpsl
sub
cmp
dec
or
in
std
fldenv
lock
cltd
fcoml
rorl
sub
stos
add
cmpsb
je
ret
aaa
push
cmpsl
rcll
scas
jecxz
scas
sarl
ret
jg
int3
and
mov
ret
dec
ret
enter
adc
dec
and
dec
mov
imul
aad
dec
dec
loop
sbb
add
push
jmp
xor
pop
push
jecxz
pop
inc
lcall
mov
pop
and
mov
jmp
out
loopne
pop
rcrb
aas
cld
jbe
sti
fs
in
mov
stos
jb
fstp
mov
and
pop
sbb
andl
rclb
jecxz
lret
repnz
call
aam
mov
or
test
cmpsl
mov
cmpsb
adc
fisubs
into
je
mov
les
jnp
xlat
pushf
xchg
jne
sbb
std
cmc
stos
push
ljmp
scas
popf
jecxz
hlt
xchg
testb
iret
fstpl
inc
push
imul
push
xor
push
movsl
ret
pop
packuswb
mov
rorl
mov
neg
xlat
mov
bound
jo
sub
fnstsw
add
cmp
stc
or
adc
mov
stos
fidivl
sarb
es
outsl
cltd
ja
ja
je
outsl
push
cmp
dec
addr16
push
cmp
int
daa
add
fucom
xor
rol
std
lea
mov
cltd
xchg
mov
jmp
stos
push
fwait
xor
cmc
or
out
subl
xlat
or
mov
push
sbb
push
mov
stos
and
dec
cmp
sbb
jns
add
and
pop
push
adc
dec
or
outsl
ror
xchg
fsubrs
xchg
outsl
stos
and
xor
arpl
or
repz
lcall
mov
gs
outsl
xor
mov
sbb
in
jae
or
nop
or
movsl
pop
add
fistpll
xchg
jo
inc
sbb
incl
leave
mov
or
mov
pusha
inc
imul
jae
lret
icebp
xorb
das
jle
ljmp
lock
jmp
fiaddl
push
push
lods
aas
repnz
mov
jl
sub
lcall
add
cmp
rcl
mov
cs
aam
hlt
xchg
xchg
mov
jmp
or
into
sub
popl
cli
test
xchg
push
or
test
cmp
xor
call
cwtl
fisttpll
ss
faddp
xchg
push
mov
jle
dec
sti
mov
add
xor
fistl
fadds
fcmovb
jne
jle
sbb
mov
push
push
sub
mov
cmpl
sbbl
jecxz
ja
add
test
out
loop
bsr
in
jmp
add
add
add
jb
inc
aad
cvtps2pd
and
jnp
pop
loopne
pop
dec
mov
pop
rcr
or
dec
aaa
rorl
or
lcall
add
nop
push
xchg
and
dec
sbb
leave
hlt
movnti
jo
popf
outsb
jecxz
insl
jbe
ret
mov
cmp
cmp
imul
sbb
push
mov
or
sti
mov
faddl
mov
or
cltd
push
cmpsl
adc
add
test
enter
inc
lods
xor
dec
push
pop
nop
sahf
les
std
js
icebp
adc
ljmp
pusha
xor
loope
pushf
mov
cld
or
in
iret
insb
frstor
fiaddl
jmp
stos
mov
ljmp
pop
or
data16
pop
xchg
push
in
sarb
gs
push
shll
test
push
ret
divb
add
mov
and
mov
and
adc
cs
jp
das
xlat
ror
push
xchg
sub
repnz
in
cmc
push
nop
cltd
jbe
sbb
adc
shrb
adc
add
xchg
sbb
adc
mov
mov
into
xchg
push
lods
test
mov
mov
push
idivb
push
mov
cli
stos
cmp
jecxz
aad
mov
push
faddl
jl
sti
adc
in
pop
jmp
jg
filds
hlt
xchg
pop
xor
jmp
push
imul
cmp
test
mov
pushf
inc
and
fmul
call
jmp
sbb
andl
insl
mov
in
inc
lahf
and
xorl
mov
jne
jno
xor
fists
lcall
outsb
sub
add
sub
or
inc
fdiv
jne
mov
clc
mov
cmp
vmovaps
scas
inc
xor
mov
out
jne
repz
dec
push
cmpsb
scas
test
stc
add
push
in
xlat
pop
mov
pop
cmpsb
push
and
jmp
mov
push
or
ficomps
lret
dec
ja
cmp
adcb
cmp
test
das
cli
in
cmp
inc
pushf
fwait
insb
dec
xchg
jno
mov
fmulp
rsqrtps
xor
int3
mov
jae
bswap
mov
mov
cli
arpl
repnz
js
or
mov
mov
pop
pop
cmp
cltd
dec
sahf
sbb
xchg
outsb
adc
mov
sbb
dec
sub
movsl
sub
or
dec
aam
lret
mov
mov
xchg
sbb
inc
and
jbe
jmp
cmpl
das
lods
or
mov
lods
cmp
push
stos
outsb
cltd
iret
imul
push
ljmp
or
ss
sar
or
jo
and
push
mov
outsb
hlt
mov
jae
sub
data16
adc
data16
dec
addl
ja
push
scas
sbb
lret
stc
mov
mov
sub
ret
jno
mov
pop
cmp
loopne
sarb
add
fld
hlt
dec
fbld
inc
inc
sahf
repz
cmp
add
push
and
mov
mov
or
seta
or
fdivs
hlt
in
aaa
in
bound
xchg
sarl
mov
dec
lret
cltd
loop
add
jae
rolb
bound
push
fwait
add
test
pop
jl
jae
dec
xchg
add
pop
sbbb
hlt
push
sub
sbb
mov
xor
or
jae
fdiv
inc
popa
mov
mov
push
rcrb
pop
jle
out
imul
or
xchg
aaa
mov
fidivs
dec
icebp
xchg
lods
pop
sti
call
sbb
sbb
mov
mov
push
hlt
scas
jle
in
push
repz
call
sbb
andb
jo
subl
out
adcb
jo
adcl
int
xchg
nop
add
fcmovnb
mov
mov
imul
loopne
fwait
cs
sbb
adc
adc
fwait
dec
nop
rcrb
inc
lds
loope
imul
ret
ss
lds
filds
adc
ficoms
sub
cmp
test
pop
sbb
hlt
stos
movsl
pop
in
popf
out
xor
sti
and
sub
data16
xchg
dec
inc
sahf
sbb
mov
fmulp
in
mov
mov
in
clc
sub
push
sbb
ja
jbe
inc
je
fwait
add
loopne
xor
cmp
mov
dec
adc
ret
mov
mov
xor
lcall
aaa
pop
jne
mov
inc
and
addb
sbb
jg
lock
pop
rcll
xor
xchg
sub
stos
cli
jb
adc
loope
add
mov
ja
push
adc
loopne
push
idiv
inc
xchg
add
sbb
loop
fldl
and
and
xor
jp
popa
cld
sub
repz
outsb
lock
mov
or
popa
push
fldl
xor
xor
mov
jns
inc
add
sub
mov
sub
jle
pop
lock
adc
jle
dec
sbb
rorb
out
jmp
xchg
xor
or
dec
mov
sub
sbb
jbe
les
lods
inc
or
test
bound
scas
les
jbe
mov
and
inc
fs
mov
std
dec
inc
dec
xchg
add
inc
mov
scas
lods
or
stos
mov
add
cmp
push
ret
cld
pop
jb
mov
cmp
dec
int3
pushf
int
sahf
sub
cld
xor
stos
pop
dec
push
outsb
dec
lret
jb
add
loope
push
mov
dec
orl
pop
pop
sahf
push
lret
jle
and
inc
jecxz
jg
stos
sub
clc
jl
and
xchg
pop
imul
rolb
lret
dec
xor
test
sti
inc
sub
xchg
negl
mov
jmp
lcall
mov
sarl
push
cmc
inc
xchg
mov
test
mov
push
jmp
mov
mov
or
inc
aam
mov
sbb
and
call
sub
mov
es
xchg
mov
dec
popa
rorb
test
movsl
and
and
push
sahf
adc
enter
scas
test
adc
push
sahf
dec
jo
sbb
ja
shll
xchg
ret
xchg
pop
cmpsl
mov
xor
mov
sbb
adc
or
sbb
or
subl
xor
sbb
mov
xchg
push
xorb
ret
mov
in
sub
out
cltd
cwtl
pop
out
jno
lods
loopne
push
adc
iret
fs
popf
ret
lds
jecxz
or
repnz
xchg
je
lock
push
cld
mov
aaa
dec
clc
sarl
lods
fninit
pop
je
sbb
push
lods
adc
mov
test
cwtl
jae
cmp
push
or
sbb
ljmp
lahf
push
loopne
in
call
pop
xor
adc
mulb
xchg
pop
jmp
mov
dec
pop
ffree
inc
imulb
or
test
lcall
lods
cmp
pop
xchg
sbb
repz
clc
jmp
dec
rol
lods
jbe
jb
mov
cld
lcall
lea
push
cmp
cmp
inc
sbb
mov
mov
push
xor
push
jae
aaa
adc
xchg
sub
iret
xchg
nop
outsb
sarl
add
xchg
aaa
movsb
fstpt
dec
insb
push
mov
enter
hlt
add
bound
cmpsb
movsl
xor
cli
cmp
sbb
int
in
add
fsubr
repnz
mov
pop
mov
rcll
in
and
shrb
mov
shrb
test
ds
clc
xor
sbb
js
mov
push
mov
cltd
push
testl
mov
ret
and
sbb
es
sbb
int
cs
shlb
fcompl
movsb
and
and
aaa
dec
ret
mov
xchg
cmp
repz
dec
fwait
adc
pop
inc
xor
stos
sbb
push
add
lods
lret
mov
bnd
in
mov
insl
daa
mov
lds
ja
push
test
enter
pusha
pop
push
xor
ret
pop
ret
test
xchg
popf
rolb
mov
dec
cld
test
jg
pop
xlat
les
push
lds
sbb
enter
lcall
jge
loope
cmp
push
adc
cmp
mov
mov
sbb
pusha
sbb
mov
dec
pop
pop
mov
xchg
and
sub
inc
sbb
dec
sub
xor
popa
lret
daa
test
int3
pop
cmp
pop
fs
cmp
xor
scas
pop
push
test
repz
les
and
mov
mov
or
dec
adcl
shlb
mov
xchg
mov
add
adc
inc
stos
addr16
cmp
push
shl
push
and
rolb
orb
std
outsb
adc
fs
shll
xchg
iret
repnz
or
cltd
ss
xor
fwait
ret
sbb
sbb
addr16
sarl
xchg
iret
xchg
jno
andb
mov
sti
int3
aad
fs
jne
jp
xchg
jl
outsb
js
add
repnz
push
jne
notb
std
cltd
incl
cmpsl
les
inc
rorb
pop
es
cmp
in
sbb
iret
dec
adc
daa
jae
adc
shl
xor
cs
scas
sbb
xchg
mov
adc
dec
cmp
notl
in
mov
das
jecxz
js
insl
jecxz
pusha
nop
dec
aaa
push
dec
pop
fildll
push
and
cmp
adc
pop
loop
fisubrl
mov
inc
stos
mov
add
mov
pop
jb
or
arpl
and
mov
daa
mov
xchg
test
cmp
ljmp
jae
mov
sbb
dec
inc
mov
mov
jmp
shr
shll
cmp
dec
xchg
fwait
icebp
mov
movsl
jno
jae
push
dec
jno
push
lods
idivb
sub
pop
cmpsl
pop
mov
push
fisubrs
aas
arpl
call
dec
xchg
jecxz
stos
mov
emms
or
adc
test
stc
mov
mov
dec
and
cmp
pusha
xchg
mov
mov
sbb
xor
add
lret
cmpsw
mov
pop
ja
pop
hlt
mov
add
daa
loop
addl
mov
mov
mov
inc
pop
mov
sahf
pop
out
out
mov
mov
cltd
ja
pushf
mov
sbb
adc
lods
jae
fisttpl
in
push
enter
add
mov
daa
xor
adc
push
sub
imul
xchg
cmp
sbb
jmp
nop
test
pop
hlt
sti
loopne
and
into
add
and
sub
dec
mov
mov
stos
adc
rcll
fstpt
idivb
sbb
xor
xchg
andl
xor
xor
lret
mov
sbb
xor
bound
pusha
ljmp
jbe
clc
lcall
push
and
or
dec
add
jae
enter
inc
andb
xchg
pushf
inc
inc
fildl
scas
push
and
sub
inc
fcom
test
mov
inc
add
jp
cmpsb
test
movsl
push
icebp
or
xchg
in
arpl
jno
and
cmpsb
push
pushf
rorb
mov
jnp
xchg
cmp
jl
dec
rcll
pop
punpckhbw
cmp
ss
adcl
jecxz
mov
imul
ret
cmp
xchg
pop
jl
pop
negl
cmpsl
lcall
mov
push
sbb
outsb
insb
push
push
cmp
add
rcr
imull
insl
lock
xor
adcb
adc
ret
adc
fisubrl
and
push
cmp
cli
sbb
and
repnz
in
lods
in
mov
lods
popa
mov
aad
out
xchg
inc
xchg
sub
mov
iret
lret
std
dec
test
gs
and
int3
movq
adc
sub
mov
movsb
jp
xor
pop
sbb
and
pop
push
add
adc
in
icebp
ljmp
scas
jle
sarl
mov
pop
rcll
sub
cmc
insb
dec
dec
mov
test
mov
mov
push
jg
inc
pop
push
jge
adc
roll
pop
and
xchg
ja
jg
push
loop
mov
das
xor
xchg
negb
stos
xor
out
aas
mov
or
jmp
iret
push
int3
sub
int3
push
inc
vminss
test
popa
jns
sub
addl
mov
mov
repz
mov
clc
add
mov
or
lret
fs
xor
rclb
or
out
scas
jne
outsb
dec
aaa
sub
popa
push
loope
jg
lods
sahf
test
push
xlat
addr16
or
and
neg
aam
add
fldl
cmp
mov
cli
push
inc
hlt
cli
push
daa
stos
push
mov
flds
loopne
jp
ss
dec
inc
lret
in
sarl
mov
pop
clc
movsl
xchg
dec
xor
mov
mov
fnstsw
dec
test
dec
into
add
dec
leave
push
aad
xchg
pop
gs
loope
xlat
lock
sahf
jl
int
mov
inc
cmp
mov
pushf
mov
orb
jnp
cmc
lret
rcrb
lds
iret
das
and
iret
dec
test
insl
clc
push
mov
pop
adc
pop
stc
or
cs
cmpsl
push
cmp
into
inc
shll
mov
es
imul
jg
or
fnstsw
popf
lds
inc
mov
pop
adc
xchg
cmpsb
mov
pop
pop
scas
and
loopne
sahf
das
jecxz
ja
mov
clc
movsb
std
out
and
mov
fildll
jbe
nop
jecxz
lahf
subb
in
dec
ljmp
fwait
lcall
out
jle
adc
inc
addb
in
nop
es
inc
cmpb
xchg
mov
adc
aad
daa
adc
iret
cmp
cwtl
sub
jp
imul
or
mov
xor
xor
das
daa
out
andl
pop
das
hlt
das
add
cmp
sbb
xlat
xor
xor
add
lock
aam
or
les
lret
fnsave
add
int3
ret
cmp
xor
dec
lock
jns
fnstcw
pop
inc
xchg
loop
lret
pop
ror
inc
mov
fs
mov
imul
sahf
scas
lcall
addr16
push
push
inc
clc
sbbb
inc
movsb
xchg
addr16
jmp
push
mov
mov
sbb
ret
frstor
jge
sbb
out
xchg
sub
pop
cmc
inc
sbbl
dec
pop
xchg
jl
add
cmpsb
ljmp
mov
scas
ljmp
outsb
ffree
imul
push
mov
sahf
adc
in
jecxz
dec
loope
stos
mov
xor
outsl
cld
push
mov
cmc
inc
push
cmp
pop
sahf
xchg
mov
pop
jo
push
and
lcall
mov
add
xchg
push
push
inc
push
into
inc
dec
mov
outsl
xor
dec
lods
sub
lret
movsb
dec
mov
or
cld
andl
andb
loop
nop
popf
clc
popf
mov
lds
pop
negb
jp
rclb
jmp
cmc
inc
mov
xchg
sbb
xchg
jb
icebp
add
fisttpll
mov
out
in
imul
push
in
sti
xor
ljmp
cs
adc
add
xlat
lret
mov
sub
dec
cmp
cmc
sub
mov
in
mov
data16
mov
inc
aam
mov
pop
lcall
addl
fisttpl
dec
dec
cmp
rdpmc
inc
jl
pop
mov
mov
mov
sbbb
loope
adc
rolb
std
pop
xorl
out
xchg
call
cli
sbb
mov
in
fistpll
push
movsl
mov
mov
in
stc
mov
sbb
mov
adc
cmp
dec
sbb
push
add
or
sbb
mov
or
insb
cmp
call
jno
cmc
mov
push
and
push
mov
pop
cmpsl
dec
push
push
int
enter
dec
push
int
jmp
xchg
dec
fldt
mov
adc
leave
hlt
sub
mov
xchg
insl
ds
or
pusha
in
mov
movsl
int3
stos
xchg
cmp
mov
fiadds
cmp
das
lahf
test
cmp
adc
ss
cmpsb
xchg
push
xor
cmc
jns
js
daa
ljmp
int
cltd
dec
mov
sbb
nop
jg
test
cmp
mov
ficompl
xor
xor
jmp
mov
push
outsl
pusha
cmpsb
clc
mov
jno
inc
test
decb
daa
jnp
cwtl
movlps
out
std
lods
inc
jle
pop
mov
int3
adc
push
lods
loopne
pop
pop
push
xchg
rorb
iret
daa
push
xchg
ret
movsb
mov
xor
scas
ret
adc
mov
inc
xor
mov
or
or
jmp
jnp
sub
out
sub
and
stos
and
sbb
cmp
scas
loop
movsl
ja,pt
out
cmp
mov
jb
les
jg
in
addr16
jae
add
add
int3
mov
insb
cld
repnz
rcr
jg
cmp
outsb
cmpsb
jo
push
xchg
adc
subl
adc
icebp
pop
test
mov
jb
pop
mov
test
sbb
pop
sbb
cmp
sub
xchg
jne
shr
or
mov
mov
stc
xor
add
mov
xor
das
fcmovnb
fsub
sbb
jp,pt
cli
jno
inc
inc
mov
outsb
cwtl
sbb
dec
test
jmp
fldl
lahf
lret
and
scas
xchg
push
adc
nop
insb
sbb
pop
cmp
push
or
mov
jge
lds
pop
xchg
pushf
or
in
or
xchg
je
add
jae
loop
mov
xor
ss
ret
add
and
jg
mov
or
push
je
ljmp
out
xor
mov
popa
lock
daa
in
push
push
cmp
xchg
push
clc
enter
test
cmp
out
cltd
jge
jmp
and
loop
add
test
aas
repnz
sbb
out
gs
sahf
es
fistpll
negb
sbb
pop
pop
mov
dec
xchg
bound
push
int
loopne
int
cmp
push
out
js
or
dec
fs
les
or
add
sub
fdivl
decb
cmc
sahf
mov
aam
jmp
adc
jne
inc
das
push
popf
mulb
fsubl
test
or
psadbw
adc
imul
lods
js
fildl
pop
adc
rorl
rcrl
add
xchg
adc
mov
fidivs
fdivrl
stos
inc
insb
dec
cmp
inc
or
into
xchg
push
push
cs
mov
or
ljmp
lock
imul
cld
jns
shrb
mov
mov
xor
adc
push
jg
lcall
daa
dec
repnz
enter
aad
dec
mov
pop
push
movsl
icebp
lock
add
and
lcall
fisttps
loop
push
std
and
add
mov
push
pop
xor
call
dec
fdivrs
adc
pop
jno
das
pop
shll
xor
filds
xor
add
push
and
xor
fstl
or
arpl
xchg
mov
jmp
cmp
leave
or
pop
call
push
xor
lods
loopne
ljmp
movsb
ficomps
cwtl
cs
add
lods
test
sbb
dec
int
outsb
test
mov
ja
inc
insl
or
rolb
jge
test
call
movsb
mov
mov
into
xchg
mov
fcoms
sbb
mov
insb
or
or
in
sub
loopne
dec
fs
mov
or
dec
xor
inc
or
add
and
mov
iret
sbb
fs
push
ret
in
jbe
jp
enter
clc
inc
loop
pushf
xor
hlt
cli
jge
out
sbb
cld
orb
mov
bound
out
enter
daa
mov
jno
call
and
jecxz
ja
add
jnp
je
cld
sub
enter
cli
imul
mov
stos
pop
dec
sub
pop
xor
push
cmpsb
test
lods
pop
lea
popf
and
les
xlat
icebp
inc
pop
scas
mov
sbb
push
fnstcw
aad
or
aas
andb
add
mov
mov
pop
in
mov
and
insb
sbb
xchg
rolb
cmp
movsb
jae
mov
or
dec
repnz
int
int3
mov
data16
stos
lcall
xor
dec
sahf
cld
enter
pop
inc
mulb
mov
movsl
push
push
xchg
leave
stc
fcmovbe
in
cmp
add
enter
cmp
and
sbb
cmpsb
test
push
rclb
sbb
ds
rcl
mov
adc
and
stos
lock
pop
jnp
mov
int
push
fisubrs
and
int3
or
add
add
sti
cmp
jnp
or
mov
sub
mov
int
adc
cwtl
in
rorb
cmpsb
fwait
test
pop
cmpsl
mov
mov
xchg
dec
jp
pop
xor
aas
ss
mov
rcr
shr
je
mov
out
cltd
icebp
jle
call
sbb
fbld
xor
cmp
push
sub
test
mov
pop
mov
push
xor
repnz
je
gs
mov
adcb
dec
cmp
push
orb
ret
sub
rolb
lret
inc
fwait
inc
mov
scas
pop
stos
mov
jnp
sbbb
push
pop
shrb
cmp
aam
pop
mov
jge
in
sbb
lods
movups
push
fnstsw
cld
and
outsb
inc
xorl
push
fs
in
scas
fdivp
jbe
mov
xlat
mov
int
dec
sbb
xlat
pop
ja
in
addr16
test
ret
push
xor
lods
mov
dec
pop
outsl
and
cld
and
mov
loopne
push
movsl
or
push
mov
mov
jmp
push
dec
sbb
pop
sub
mov
lcall
xchg
pop
inc
addr16
jp
insl
rcr
mov
add
mov
pusha
mov
lods
xor
out
adc
fcomps
mov
fstl
into
inc
jle
mov
pop
or
jae
popa
je
lahf
sub
loopne
pop
ja
jbe
int3
in
mov
test
mov
cmp
dec
addr16
fwait
test
lahf
add
or
jp
stos
lret
push
sub
and
xchg
aad
clc
cmc
xchg
stc
jmp
inc
out
cmpsl
jnp
sbb
sub
aas
out
sbb
mov
mov
mov
sub
mov
and
gs
inc
push
shll
fdivs
aad
and
lea
add
cmp
add
adc
test
lahf
stos
scas
addb
out
inc
dec
lods
push
je
outsl
sti
pop
mov
out
and
cmpsb
mov
in
mov
mov
dec
pop
jb
loopne
xchg
jo
gs
jecxz
imul
cld
fstl
jp
aas
sbb
aas
fcmovnb
jmp
push
movsl
and
arpl
lahf
pop
pop
shr
inc
lret
push
add
lret
pusha
adc
mov
imul
fs
nop
inc
lods
pop
mov
enter
inc
je
movb
jbe
and
shl
pushf
xorb
push
ret
mov
xchg
lahf
cmc
js
cmp
xchg
mov
jnp
adc
xor
adc
or
loop,pt
pop
nop
pop
pop
bound
jmp
js
adc
hlt
xorl
mov
cmp
scas
inc
push
or
shlb
xchg
xchg
mov
add
cmpb
xchg
jmp
gs
out
and
push
js
dec
and
jle
jp
mov
mov
mov
leave
adcl
jp
mov
adc
mov
insb
loopne
mov
iret
loop
and
sub
dec
iret
popf
mov
imul
stos
and
sti
adc
pop
sub
pop
movsb
push
insl
xchg
mov
cmp
add
mov
mov
ret
cltd
push
push
fidivrs
xchg
mov
push
bound
jge
push
jecxz
adc
out
es
mov
cmc
bound
mov
call
cmp
mov
repnz
push
in
data16
and
scas
mov
or
sti
int3
call
pop
outsb
movsb
push
jp
out
stos
mov
mov
cmc
sub
fmuls
sub
adc
fcmovnu
push
xor
lds
add
cmp
adc
andl
mov
push
dec
push
repz
repnz
dec
push
das
mov
lretw
imul
arpl
inc
je
insl
std
inc
pop
or
test
and
cmc
je
adc
sub
dec
adc
stos
dec
sahf
test
cmp
subb
mov
xchg
sub
iret
jmp
xor
push
mov
inc
push
idivl
mov
js
enter
nop
mov
add
stos
dec
xor
data16
push
fst
jl
mov
or
hlt
cmp
xchg
jae
scas
mov
std
jmp
je
adcl
outsb
fs
mov
mov
out
push
imul
add
mov
call
setnp
sub
cmp
pushf
jbe
xchg
cmp
daa
jbe
and
dec
stos
sbb
outsl
ret
pop
dec
xor
dec
lea
and
pop
repz
inc
imull
push
push
sbbl
pop
daa
lods
gs
jns
jecxz
pop
lahf
inc
into
jge
jl
sahf
mov
ss
in
cmp
mov
fsubrs
push
aaa
sub
jp
push
lods
cmp
push
jmp
and
push
and
aam
test
jge
dec
or
jmp
jo
sbb
addb
mov
or
cmpsl
dec
or
stc
scas
jnp
das
in
ds
jae
iret
nop
lcall
repnz
lods
test
push
mov
rcll
lds
jg
add
stos
pusha
pop
cmp
mov
mov
cmpsl
push
xor
mov
and
push
push
pop
add
jbe
jbe
push
call
mov
fsts
adc
mov
inc
xor
inc
jae
add
fisubrl
xchg
dec
cmpsl
popf
out
inc
ja
movsl
or
or
shrb
add
jecxz
ror
divb
pop
int
fwait
pop
dec
push
push
lea
pop
outsl
icebp
push
fsubl
dec
jo
jb
arpl
cmp
xchg
clc
std
test
repz
arpl
sbb
xchg
jecxz
mov
mov
je
fcomps
xchg
pusha
cmp
cmpsb
jl
xchg
push
mov
es
or
push
xchg
iret
xchg
mov
add
lods
pop
sub
jg
xchg
cmp
mov
push
xor
mov
mov
sbb
xchg
jle
aam
fstps
pop
mov
in
sbb
push
fcomip
xor
pusha
mov
adc
mov
xchg
test
lods
ss
stc
cmovns
and
pop
scas
and
add
xor
fwait
dec
xor
adc
fcompl
imul
cmp
adc
arpl
je
push
inc
pop
cwtl
out
ljmp
sti
xchg
fldenv
loope
push
dec
ds
pop
sub
adc
ljmp
mov
pusha
fdivl
addr16
idivl
rcrb
jge
lods
push
ret
pop
aad
clc
cmp
mov
pop
ljmp
add
fldz
imul
cmp
incl
testb
iret
gs
dec
cmpsb
ss
movups
call
rcr
cwtl
mov
aad
sub
cmc
push
movsb
popa
std
cltd
jno
cli
mov
push
cmp
jb
add
loop
push
inc
mov
js
push
jno
mov
mov
inc
jae
scas
fcompl
gs
icebp
pop
test
mov
pop
push
mov
pop
lea
aad
cwtl
repz
mov
out
mov
jns
fimull
jge
cld
cltd
jecxz
cmp
dec
shlb
loope
push
je
cmp
cmp
ja
adc
and
sbb
push
adc
ds
jecxz
pop
mov
cmp
ds
inc
and
dec
adc
and
clc
lcall
mov
nop
test
push
jbe
push
jl
jg
xor
jmp
arpl
jp
xchg
and
movsl
movl
loop
addr16
inc
shl
mov
jo
ficoml
ljmp
pop
mov
push
jno
imul
xchg
and
xlat
int
xor
pop
mov
or
add
push
out
jmp
popf
cmc
mov
push
or
fidivl
or
lret
jno
jnp
ret
jp
push
jmp
mov
xorl
jmp
sub
iret
les
sahf
aad
adcl
ss
jns
cmpl
pop
or
popa
push
dec
or
test
loope
pop
call
sbb
adc
xchg
test
or
pop
inc
cmp
mov
es
and
dec
jp
fdivr
test
sbb
sbbb
int
mov
mov
xor
push
mov
push
jmp
mov
aam
into
aas
cs
xlat
js
inc
hlt
lcall
fdiv
cmpsb
and
hlt
mov
dec
dec
push
rclb
sub
pusha
xor
mov
sti
xorl
inc
lret
aad
sub
push
fsubr
cmpsb
lds
jle
mov
pop
jmp
mov
inc
pop
in
adc
mov
sbb
xor
popa
pop
jb
or
les
daa
xor
push
pushf
leave
cmp
ret
inc
insl
mov
add
jecxz
pop
je
out
std
into
cmpsb
dec
int3
cmp
aad
int3
cltd
pusha
sbb
push
xor
jmp
inc
inc
xor
xor
cmp
cmp
in
scas
les
mov
lcall
xlat
aad
cld
cmp
outsl
mov
xchg
lret
pop
xchg
push
lods
ret
xchg
mov
les
out
sub
fistps
and
scas
popf
xor
push
out
js
mov
sbb
push
adc
je
ljmp
pop
and
lahf
push
mov
inc
shrb
sbb
lcall
rcrb
pop
or
enter
pushf
leave
decl
fsub
xor
lret
jne,pn
push
pop
xchg
and
sbb
push
jb
bound
or
mov
push
mov
stc
xor
pop
xor
sbb
lods
mov
imulb
push
mov
int3
or
cmp
clc
jge
out
or
and
fcomp
andb
cltd
aaa
mov
jl
cmc
sti
lret
std
mov
jne
out
or
andl
das
stc
mov
jbe
movl
xchg
fdivs
sbb
inc
and
ljmp
push
cmpsl
je
jmp
xchg
mov
stos
test
sti
mov
sbb
xor
mov
and
call
sub
int
pop
adc
jno
xor
mov
mov
aas
decb
mov
xchg
insl
sub
loope
push
mov
jno
test
add
sbb
cmpsl
xor
xchg
fwait
inc
inc
repz
lea
imul
mov
push
es
cmpb
mov
shll
cmp
push
les
or
aaa
push
ret
pop
test
call
pusha
rolb
lahf
sbb
rcr
ja
lods
cmp
adc
xchg
cmpsb
jle
shrb
push
push
and
dec
ds
jno
scas
mov
pop
push
mov
cmp
repz
cs
in
stos
add
lahf
xor
fisttpll
cmc
mov
outsl
icebp
adc
lods
sbb
xchg
lcall
in
cmp
mov
push
push
push
fmull
dec
idivb
aaa
out
nop
adc
fstp
and
dec
mov
cmpsb
int3
movsb
sbbl
jecxz
and
xor
movl
or
jmp
fdivrs
jns
add
adc
aas
adc
pop
sub
clc
pop
test
movsl
data16
dec
fstps
pop
add
loop
mov
mov
inc
test
fcmovnbe
mov
mov
and
loope
pop
lds
ds
mov
fidivl
xor
cli
push
lret
lock
adc
jnp
addr16
orl
sbb
inc
sbb
adc
and
movsl
aad
cmp
inc
scas
sub
scas
jle
jo
xorb
mov
lar
cltd
out
jecxz
ja
inc
cltd
xchg
mov
daa
addb
mov
inc
sti
xlat
or
xor
pop
hlt
test
or
xor
mov
adc
or
push
orl
hlt
addb
js
scas
pop
and
push
jbe
or
test
repz
out
xchg
fs
sub
aas
jecxz
fsubrl
mov
outsl
mov
mov
push
adc
mov
and
push
in
hlt
cmp
cmpl
xor
push
jns
xlat
add
mov
rolb
test
shrb
test
mov
xor
xor
sbb
mov
fimuls
shll
cwtl
xorl
sahf
shlb
mov
add
mov
xor
mov
fwait
mov
lahf
insl
fnsave
scas
outsl
fimuls
mov
inc
sub
dec
inc
add
add
push
xchg
bound
outsb
mov
jae
out
and
cmpsb
test
in
sti
xchg
and
outsb
cmp
mov
pcmpgtw
mov
loop
cmp
rcrb
xorl
movsl
sbb
js
add
das
mov
jne
cmpsl
push
pop
fs
cmp
lcall
inc
in
pop
pop
iret
cmp
clc
or
mov
mov
push
ss
dec
sub
add
adc
pop
and
fucomp
xchg
push
test
jmp
fwait
in
and
mov
xor
jbe
push
mov
push
add
ja
mov
popf
repnz
out
sbbb
clc
xchg
xor
mov
icebp
dec
mov
rorl
sub
fiaddl
push
mov
pushf
aam
sub
mov
push
mov
xor
adc
loopne
pop
loope
mov
mov
lcall
and
xlat
mov
cmp
sbbl
rcl
arpl
sub
aas
or
aad
clc
adc
jne
addr16
mov
std
push
mov
in
jp
repz
sbb
aaa
gs
icebp
adc
stos
addl
push
add
shrb
gs
inc
es
shll
dec
subb
mov
lcall
xor
pop
push
mov
push
gs
ja
lds
stos
aaa
jo
out
dec
sbb
nop
mov
jp
jns
incb
cmp
cs
sbb
adc
lock
lcall
xchg
leave
sti
fcompl
pusha
xchg
jae
pop
push
lret
outsb
into
out
xchg
inc
sub
sub
or
push
mov
jg
shl
lock
add
dec
add
outsl
movsl
mov
aaa
xlat
shlb
nop
lea
es
test
inc
xchg
mov
sbb
ds
mov
inc
inc
jbe
and
xchg
xchg
add
mov
adc
and
mov
jns
aaa
ret
jne
fimuls
movsb
subb
or
mov
enter
movsb
nop
sub
pop
xchg
cmpsb
jno
jns
jnp
fldenv
xor
sub
inc
into
fcompl
xor
mov
std
out
cmp
shlb
dec
mov
out
and
adc
in
arpl
cmpsb
clc
pop
xchg
cmp
pop
inc
or
movb
popa
popf
sbb
popf
nop
dec
and
pop
pop
push
outsb
add
sbb
xchg
push
sbb
xchg
lret
hlt
jns
in
jns
and
mov
je
adcb
sar
lcall
insl
ja
jp
testb
jbe
movsb
rolb
adc
inc
gs
adc
jno
adc
stos
jno
loop
insb
add
ss
bound
jmp
mov
popf
insb
mov
jge
mov
popa
mov
push
daa
jp
orl
shr
pushf
les
mov
cmc
and
xchg
jae
outsb
pop
lret
clc
daa
or
dec
xchg
out
imul
inc
mov
ja
push
lock
ficoms
lods
jae
jne
cld
xchg
insb
or
jnp
lret
sbb
inc
lret
pop
nop
add
pop
adc
sub
sbb
xor
iret
dec
mov
cmc
or
pusha
mov
pop
pushf
sub
cmp
add
mov
mov
sbb
dec
fidivs
and
cmp
aaa
xor
insl
mov
push
je
sub
xor
das
lret
ret
jns
je
or
push
fisubrl
sub
jecxz
clc
mov
sbb
call
mov
jnp
add
test
repnz
adc
cmp
cbtw
or
push
enter
es
xchg
xchg
gs
xor
xor
outsl
stos
fldl
jle
push
cwtl
push
mov
fmull
inc
test
pop
sbb
repnz
mov
xor
fcmovu
pop
popa
push
add
mov
inc
mov
js
and
or
add
repnz
mov
hlt
shl
add
and
mov
mov
xchg
xchg
add
mov
bound
sub
aad
jae
bound
jp
lret
outsl
movl
loope
push
es
adc
sbb
mov
mov
pop
scas
sub
cmp
mov
es
test
fs
outsl
lea
in
pop
aaa
xorl
mov
sahf
js
mov
inc
je
out
insl
leave
mov
into
or
pop
imul
repz
add
test
sub
test
shlb
xchg
lea
cli
jle
imul
xchg
add
popa
sub
cltd
popa
and
or
jmp
mov
enter
stos
out
jge
or
ss
sbb
decl
xchg
cmp
dec
adc
mov
and
mov
add
sbb
xchg
mov
xlat
movsl
mov
jle
shrb
jb
add
aad
jg
and
dec
aaa
pop
jp
sbb
add
jns
add
mov
inc
cmpsb
pop
mov
xor
mov
ret
mov
iret
loope
mov
nop
out
and
pusha
mov
push
pop
inc
push
mov
test
inc
ret
jns
lods
fmull
xchg
insl
call
pop
rclb
jecxz
cmpsl
fistl
inc
pop
xchg
sbb
leave
das
jl
lcall
sti
lret
push
pop
mov
bound
jl
push
fmul
nop
stos
sub
or
ss
cltd
and
xorb
lea
sti
das
nop
ss
xchg
mov
mov
jmp
ds
stos
xor
cmp
jns
je
pusha
aas
dec
or
mov
xor
sbbb
test
notl
pop
insb
movsl
test
aad
lahf
insb
fldl
ret
adc
push
push
mov
cltd
mov
jge
subb
shlb
push
arpl
or
cs
flds
and
push
lock
scas
dec
jmp
ret
dec
jo
or
test
push
fwait
int
lret
jns
push
jo
inc
jns
dec
xchg
rclb
lods
movb
aaa
xchg
mov
mov
das
lret
pop
test
mov
add
adc
jmp
push
lea
jae
loop
pop
inc
sahf
mov
jno
xor
mov
or
sahf
push
into
adc
shr
sbb
pop
cld
nop
stos
test
add
ds
lock
sahf
pop
fs
xor
sbb
and
xchg
vcvtps2dq
mov
imul
pmulhw
mov
xlat
aaa
mov
and
adc
aam
pop
fisubs
call
mov
aas
inc
mov
insb
jl
jno
jns
pushf
and
lcall
lds
pop
movsb
xchg
nop
mov
shl
iret
in
enter
and
pop
push
cmp
roll
dec
pop
loop
adc
sub
push
mov
test
scas
dec
call
mov
cmp
xchg
mov
jns
pop
mov
stos
mov
not
inc
pop
loopne
std
ljmp
lods
daa
stc
sahf
and
push
xchg
jne
adc
push
mov
andl
into
popa
inc
popf
sub
mov
popa
int
add
push
imul
sbb
jle
jl
sub
daa
aas
pop
xchg
out
adc
mov
lcall
mov
jl
inc
inc
ja
daa
push
rolb
mov
jno
pop
xor
in
pop
and
cmp
xchg
cmc
bound
cmp
shrb
pusha
out
add
mov
cmpsl
or
sub
cltd
imul
outsb
clc
pusha
lret
sahf
lret
sbb
cmp
out
mulb
pop
cmp
and
cmp
out
push
lahf
mov
push
or
mov
pop
negl
fcom
mov
add
xchg
xor
mov
push
sub
outsb
xchg
cmp
mov
aad
and
mov
dec
shlb
fsubp
jae
mov
add
cmc
dec
in
jge
ljmp
shl
movsl
cmp
sub
idivb
popf
inc
call
lret
add
rolb
repnz
push
lods
lret
xchg
fcmovbe
mov
jg
lea
popf
jmp
loopne
cmpsb
fimull
and
movsb
out
insb
xchg
jp
push
mov
cmpsl
and
xor
lcall
adc
push
pop
in
adc
pop
test
xchg
mov
subl
loopne
mov
orl
stc
dec
fadds
inc
outsb
push
jmp
enter
mov
mov
das
aad
stos
or
test
pop
pop
pop
xlat
cmpsl
cmp
ret
push
inc
mov
sahf
call
pop
or
inc
out
or
xchg
leave
dec
ficoml
loope
dec
test
inc
lods
nop
pop
jg
je
mov
sub
inc
push
adc
test
or
jne
mov
dec
lahf
out
sbb
aas
ss
arpl
or
cmp
bound
jbe
push
insl
gs
dec
mov
cmpl
nop
gs
fwait
mov
leave
in
mulb
ljmp
mov
testb
int3
cmp
cmpsb
xchg
ljmp
adc
cmp
pop
nop
mov
or
mov
jge
mov
push
ret
xor
imul
das
dec
push
or
insl
xchg
fadd
aas
stos
out
icebp
adc
or
test
pop
cmp
push
jecxz
les
movsb
insb
pusha
mov
addr16
cltd
adc
mov
dec
mov
into
and
jmp
out
adc
into
push
jecxz
cmpsl
cmp
mov
jl
mov
stos
test
mov
scas
jo
xor
dec
jecxz
push
sbb
scas
ret
scas
jl
and
repnz
jno
mov
notl
test
stos
call
loopne
xchg
out
lods
mov
jb
shlb
cmp
enter
xchg
pusha
and
and
dec
pop
pop
xor
loope
push
ja,pt
test
mov
fsubl
clc
jmp
subl
adc
test
mov
sbb
repz
sub
and
jns
pop
add
cmc
inc
inc
pop
xorb
in
subl
pop
ja
cwtl
xor
mov
imul
pop
mov
ja
repnz
repz
jno
inc
cmp
mov
mov
mov
in
add
xor
push
loope
jns
filds
scas
dec
mov
incb
mov
into
xor
jae
push
cmp
mov
pop
cmpb
jne
adc
lea
adc
aas
js
icebp
jno
pop
iret
lds
dec
mov
push
add
pop
ret
sbbb
inc
outsl
mov
mov
pushf
jne
das
push
push
testl
xchg
xor
mov
sbb
dec
inc
xchg
insb
repz
lret
mov
pop
fldenv
retw
pop
xchg
jge
sbbb
popl
jno
orb
mov
inc
ret
mov
xor
lods
xchg
scas
mov
ret
gs
cmp
mov
jge
mov
xchg
test
aam
mov
test
xor
pop
and
test
and
lea
stc
ror
pop
and
mov
out
cmp
in
mov
insl
fldcw
or
std
shlb
fwait
into
jecxz
and
aad
pop
add
adc
pop
xchg
lcall
mov
rcrb
add
jp
jb
jl
inc
or
int3
mov
pusha
jl
xchg
cmp
push
add
push
pop
int
mov
cmp
mov
jecxz
aad
jmp
shll
imul
pop
mov
jne
enter
jbe
jae
orb
adc
test
add
imul
fisubs
bswap
and
dec
fbstp
aam
aaa
lret
and
test
scas
add
leave
dec
fistps
lret
mov
ljmp
imul
xchg
add
fidivrl
inc
lea
mov
pushf
and
or
xchg
jae
cltd
ljmp
mov
sbb
push
pop
mov
inc
ljmp
leave
push
mov
fsubs
div
jne
ret
test
push
mov
lods
testb
xchg
dec
aaa
mov
adc
arpl
inc
hlt
out
pop
mov
imul
jmp
mov
sub
mov
inc
dec
or
mov
test
pop
stos
scas
xor
pusha
sub
cmp
movsb
fsubs
adc
fists
dec
sub
pushf
jg
pop
repz
shl
ret
nop
insb
ss
out
push
jne
push
push
jl
mov
push
push
stos
mov
out
xchg
sbb
add
push
bnd
cmp
add
inc
rcrb
adc
lock
push
jbe
pop
cmp
int3
js
sbb
inc
lahf
dec
push
sbb
pop
ja
xor
or
add
cli
shlb
sub
stos
and
fadds
xor
icebp
pop
ret
rorb
mov
ljmp
pushf
fbstp
sub
sub
jg
dec
jge
xchg
and
push
xor
pop
xchg
mov
sar
js
pop
es
test
xor
mov
test
outsl
mov
mov
xchg
sahf
hlt
jne
mov
mov
adc
jnp
lds
mov
fwait
push
jle
push
jb
push
mov
mov
xchg
stc
cmc
adc
push
pop
xchg
adcl
sbb
cwtl
shll
insb
pop
jle
movb
and
inc
cwtl
mov
gs
adc
imul
fisubs
gs
mov
dec
dec
addr16
sub
sub
mov
aad
cmp
rorb
lahf
enter
mov
xorl
mov
jmp
mov
adc
sub
sub
add
sarl
out
gs
jne
nop
and
or
xchg
insl
mov
rorb
aas
js
pop
jno
mov
inc
push
lahf
xchg
fisubrl
push
push
adc
xchg
and
in
pop
lret
insb
jecxz
mov
or
mov
std
int3
sub
fisubrs
mov
jnp
mov
cmp
xchg
jne
push
and
pop
in
ja
andl
xlat
cltd
sub
cltd
cmpsb
in
pop
aad
cmp
dec
adc
flds
push
cltd
clc
add
or
pop
lret
xchg
mov
pop
jno
push
sbb
int3
inc
pop
xchg
pop
mov
adc
test
orb
pop
in
jmp
mov
shrb
push
movsl
inc
xchg
or
mov
das
push
and
xchg
clc
cmp
in
mov
aas
in
shlb
jle
sbb
or
lods
dec
repnz
sbb
push
cmp
adc
fisubrs
lcall
test
stos
mov
xor
adc
fstpt
push
outsb
pop
mov
fnstenv
dec
or
repnz
sub
xor
and
mov
sahf
sarl
loope
dec
and
xor
mov
cmp
dec
mov
sub
pop
int
and
ret
mov
push
inc
pop
jo,pn
out
xchg
cld
dec
jmp
cwtl
lcall
shl
insl
pop
imul
hlt
lret
enter
int3
cmp
mov
mov
pop
fiadds
aam
popf
push
je
push
xor
jp
ljmp
and
iret
shlb
push
iret
push
ret
cmp
adc
and
mov
movsb
loop
xchg
pusha
sub
push
and
fldenv
sti
push
scas
xor
ds
addr16
pop
rol
loope
rcrb
aaa
les
cmp
stc
nop
and
dec
cmp
sub
push
push
add
dec
cltd
or
inc
aas
pop
mov
outsl
xor
fidivs
mov
dec
stos
add
mov
outsl
leave
test
xchg
cmp
pop
or
iret
data16
or
test
pop
xchg
xor
out
cwtl
dec
mov
in
and
movsb
push
pop
icebp
mov
data16
stc
mov
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
call
sahf
xor
add
sub
adc
cli
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ret
pusha
lahf
xchg
cld
add
xchg
fisttpl
out
inc
dec
jp
jo
fidivrl
ljmp
xchg
std
stos
mov
shll
jo
jne
aam
iret
call
and
arpl
fwait
mov
fisttpll
xlat
lcall
pop
fbstp
pop
cmp
jae
or
jne
sbbl
sti
call
outsl
popf
xchg
sbb
add
test
sub
test
xlat
ljmp
pop
lret
lock
mov
pop
mov
dec
xchg
cmp
adc
stos
mov
and
cli
fstl
xor
sbb
ffree
loop
sub
adc
fmul
loop
lds
adc
ffree
repz
sahf
xor
ffree
loop
sub
adc
fadd
jecxz
sub
adc
ffree
loop
jnp
xor
push
fadd
loopne
sub
xor
cli
ffree
loop
sub
adc
int
loop
sub
adc
in
loop
sub
adc
mov
ret
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
int3
adc
out
and
icebp
ffree
repnz
sub
adc
mov
and
fcmovu
ret
pop
in
inc
inc
sbb
ffree
loop
and
adc
pusha
sub
adc
std
ret
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
adc
ffree
loop
sub
jle
icebp
fucomp
loop
cmp
pusha
ss
test
ss
xchg
push
xlat
cmp
inc
aas
xor
sti
shrl
lcall
add
pop
testb
jmp
push
pop
int
mov
fiadds
and
mov
es
call
xchg
in
test
ja
fistpl
xorb
cmovs
pop
sbb
fcompl
fisubrl
fucom
cmc
mov
mov
loope
into
sahf
arpl
imul
sbb
stos
lds
iret
popa
outsb
sub
aaa
jp
dec
mov
xchg
cmp
mov
push
pop
mov
cltd
xchg
xchg
daa
imul
mov
in
cmpsl
call
insb
push
ss
sub
xchg
push
mov
sti
jns
add
push
mov
jno
inc
rolb
xchg
movsl
add
jmp
cmpsl
pop
imul
frstor
mov
cmp
nop
idivl
lcall
xchg
cmpsl
push
and
adc
mov
and
jmp
cmpsl
jae
push
ss
push
sub
js
ret
inc
sti
and
pop
push
inc
ds
out
mov
pop
sahf
jmp
lret
cmpsb
inc
jmp
mov
fcoml
mov
jo
rolb
hlt
push
bound
orl
scas
mov
lret
insl
cmc
push
mov
sbb
repnz
outsl
jmp
push
pop
sbb
mov
repnz
xorl
filds
pop
mov
and
je
pushf
mov
mov
mov
mov
pop
jb
iret
test
addr16
ljmp
das
jg
in
dec
push
xchg
lcall
bound
rcrb
push
mov
inc
push
xchg
xchg
jg
jl
outsb
cltd
lock
xchg
or
scas
xor
mov
rol
sub
xchg
or
outsb
cmpsb
aaa
sub
push
jbe
add
inc
jnp
lahf
addr16
adc
andb
and
pusha
cmp
push
in
mov
jle
popf
jne
pusha
popa
and
aaa
scas
sahf
pushf
xchg
fisubs
inc
pop
cmpsb
push
test
pop
je
pop
push
push
pop
sub
xor
or
jge
push
cwtl
testb
aad
loop
mov
inc
scas
pop
movlps
xor
xlat
mov
sub
sti
loope
daa
cmc
sbb
mov
xlat
adc
lcall
pushw
lcall
add
pop
ljmp
xchg
jbe
rol
outsl
repnz
iret
mov
fbstp
cmpsw
test
pop
xor
subl
jle
sbb
sub
call
xor
movsl
pop
int3
dec
hlt
jne
pop
mov
fimuls
mov
add
dec
sub
push
inc
and
add
daa
xchg
test
shlb
das
sbb
xchg
push
pop
sbb
xchg
push
cmpsb
push
int
xchg
int
push
out
sarl
mov
stos
andb
pop
and
ficompl
lea
mov
jno
lcall
cmp
imul
aad
or
mov
jecxz
push
pop
out
or
std
fnsave
sub
mov
cwtl
cmp
lock
or
cmp
add
gs
int3
fstp
sbb
fmull
aas
lock
fcoml
sub
ljmp
call
lret
icebp
sbb
sbb
jmp
js
pop
jbe
or
repnz
adc
add
jnp
sub
aas
push
sti
xor
dec
mov
pop
cmp
aam
jmp
cmp
mov
ja
sub
mov
lock
or
imul
sbb
fs
fcmovu
mov
jg
sarb
adc
insb
mov
scas
mov
or
icebp
xor
shlb
pop
mov
or
xor
xchg
dec
cmp
gs
xor
sbb
data16
imul
inc
mov
mov
testl
mov
es
push
jle
adc
sbb
and
fstl
stos
add
adc
push
xchg
ficomps
out
push
loope
testb
int3
push
es
inc
imul
mov
popa
lcall
popf
pop
dec
jmp
enter
cmpsb
fwait
rcll
das
aaa
pop
stc
or
sbb
xor
xchg
mov
jp
int
fcomp
xchg
fstpt
xchg
fadds
and
outsl
jae
push
xor
scas
adc
cmp
sti
fimuls
js,pt
jp
out
ss
pop
orb
dec
fs
mov
mov
rcll
js
mov
adc
sub
push
mov
xor
jne
xchg
fwait
ljmp
daa
rcrl
cmp
mov
aas
out
push
aam
mov
adc
add
mov
in
movsl
sahf
fisttpl
cmp
aad
sub
add
sub
pop
push
clc
mov
cmp
jns
aaa
push
bound
pop
xchg
xchg
sti
or
inc
xlat
fs
jno
adc
pop
cwtl
and
mov
pop
in
daa
jae
fnstcw
sub
push
mov
or
pop
pop
lahf
xchg
in
fwait
mov
mov
daa
jge
arpl
in
stos
in
jl
loop
or
xor
aad
sub
mov
ss
in
push
movsl
inc
mov
xchg
rorb
outsb
cltd
push
mov
bound
sub
jno
jb
movsl
je
cmp
shlb
adc
icebp
mov
dec
xchg
call
push
cmp
mov
xchg
sarb
arpl
cmp
jge
iret
fisttpl
pusha
pushf
mov
arpl
xor
adc
in
shrb
cmpsb
sub
stos
cmc
clc
jg
mov
lahf
popa
es
pop
adc
movsl
lret
xchg
adc
mov
adc
hlt
pop
xor
and
mov
dec
cmp
outsl
sbb
pop
dec
fisubl
sti
mov
push
nopl
int3
fmuls
mov
movsb
cmp
mov
pushf
mov
pop
push
push
leave
inc
aad
inc
jnp
push
dec
adc
loope
lock
or
cmpsl
sbb
push
adc
cwtl
or
cmp
cli
fs
inc
cs
ja
jl
jae
std
rol
fistpll
adc
test
stc
dec
ljmp
dec
rclb
cmp
mov
lds
data16
adc
test
xor
jge
pop
or
add
out
xlat
ljmp
fcmovnbe
jb
mov
lea
mov
dec
test
add
push
xor
inc
shrb
inc
push
jge
cmp
gs
pop
mov
sbb
loopne
inc
mov
rcll
jns
lds
adc
pop
push
fwait
cld
clc
das
adc
jg
div
stos
dec
adc
lods
cli
stc
mov
add
test
mov
xchg
mov
sti
cmp
mov
iret
gs
mov
mov
inc
call
test
or
pop
das
aam
imul
pusha
in
mov
adc
nop
dec
imul
push
shll
cmp
gs
fcmovu
mov
push
adc
xchg
dec
push
movsl
fmuls
insl
jne
inc
popa
in
sub
mov
daa
stos
jmp
roll
add
pushf
cwtl
adc
cmp
fldl
call
sbb
adc
rolb
outsl
es
dec
pop
jno
cltd
or
data16
cs
add
cmp
mov
pusha
adc
lret
hlt
add
sub
clc
sbb
sub
lock
add
adc
push
cmp
add
pop
sub
shrl
in
rcl
lahf
loopne
add
mov
add
push
or
push
outsl
xor
mov
xchg
adc
test
lcall
notb
jo
push
fwait
lret
jg
inc
mov
pop
int3
les
daa
add
outsl
push
fwait
cld
cs
lds
sbb
dec
jmp
mov
mov
xchg
fldcw
push
lods
repz
roll
push
adc
and
std
aas
test
xchg
push
add
xor
pop
inc
jne
cld
nop
mov
and
into
ficoms
or
dec
adc
sub
out
ljmp
stos
mov
sbb
mov
xor
les
and
xchg
mov
mull
xlat
sub
xorb
sahf
xor
pusha
test
mov
xchg
ljmp
mov
aaa
shl
pushf
push
fstpl
bswap
jbe
or
int3
in
push
sbb
inc
cmp
daa
push
mov
jmp
xchg
lahf
or
mov
fadds
cmp
xchg
mov
add
notl
out
lods
and
cwtl
repnz
and
clc
jmp
xorl
vandpd
jne
sub
xor
sahf
inc
cld
jmp
jge
add
aad
ret
pop
sub
insb
pop
mov
mov
mov
and
xchg
and
or
mov
pop
fstp
in
cmp
popa
mov
jge
rorb
jle
push
sbb
xchg
movsl
adc
enter
fdivr
shl
repnz
mov
inc
test
or
dec
out
ficoms
int
sbb
aas
test
mov
pop
pop
dec
or
mov
in
inc
jge
and
data16
dec
and
mov
out
xchg
fwait
negl
mov
cltd
cmc
andb
ljmp
in
sbb
adc
cltd
fwait
jne
dec
dec
bound
ret
mov
pushf
or
mov
inc
int3
mov
icebp
dec
gs
out
ja
push
lock
movl
mov
hlt
orb
push
cltd
jne
add
mov
lcall
leave
orb
and
jb
cmc
popf
es
mov
sahf
inc
jmp
ds
pop
stos
sahf
push
shlb
xlat
xor
ret
test
or
sbb
dec
rcll
fisubrs
inc
mov
push
stos
dec
jne
add
adc
jge
sbb
inc
imul
cmp
sub
adc
test
int3
or
mov
or
sbb
imul
ret
lahf
ja
loop
xchg
movsl
push
sbb
jbe
mov
movsl
push
jl
mov
cmp
repz
aad
pushf
test
inc
mov
addb
sub
test
jmp
lods
mov
fadds
cltd
mov
iret
xchg
dec
movsb
lods
imul
xchg
push
ljmp
push
dec
dec
sbb
cld
push
bound
jbe
stos
stos
cmp
lock
or
sarb
daa
adc
leave
xor
ljmp
outsb
xchg
xor
push
repnz
mov
ret
mov
shlb
clc
inc
je
cwtl
arpl
and
popa
sarb
xchg
push
xchg
lods
mov
sti
push
push
shlb
in
outsb
push
xor
rolb
xchg
fldenvs
pop
sbb
add
repnz
fdivrp
lods
dec
push
fsubl
jp
pop
popa
jge
adc
repnz
jnp
outsb
lcall
int
movsb
jne
jle
fstl
add
aam
xor
sub
cmpl
push
lret
ljmp
divl
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
