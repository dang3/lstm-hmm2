push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
inc
adc
imul
inc
rorl
xchg
pusha
pop
push
ret
and
dec
out
cmp
lahf
xlat
sahf
mov
cwtl
mov
dec
mov
loope,pt
movsl
and
or
ss
in
jl
aas
xchg
scas
xor
lods
pop
mov
inc
jp
mov
in
arpl
pop
outsl
ret
sub
push
int3
faddp
jno
int
in
xor
iret
add
xchg
pop
push
mov
enter
cmp
mov
xor
pop
pop
cmp
rcrl
sbbb
in
inc
cmp
out
sbb
pop
jbe
push
push
stc
inc
push
push
imul
inc
movsb
jnp
jae
dec
out
lods
dec
fs
js
adc
sbb
dec
pushf
rcrb
fimuls
leave
and
sbb
dec
mov
fs
ds
add
push
jecxz
mov
mov
mov
dec
jae
mov
iret
dec
xchg
mov
addr16
pop
pop
les
in
fdecstp
push
jbe
jno
fiadds
and
ljmp
cmp
push
push
jnp
add
inc
xchg
fldt
cmp
pop
loop
mov
xchg
mov
insl
je
out
sbb
in
sbb
out
pusha
das
sarb
mov
cs
and
nop
ja
pop
jne
push
mov
lret
aam
and
repnz
lcall
mov
ret
arpl
bswap
mov
push
inc
movsb
xorl
or
fistps
pop
out
mov
sbb
adc
and
jmp
mov
lcall
rorl
or
mov
push
sub
stos
ljmp
divb
add
xchg
push
cmpsb
xor
jmp
cmp
stos
or
add
jl
rcrb
mov
mov
hlt
repz
or
aad
dec
lods
icebp
popa
cli
mov
cmpsl
dec
popf
push
out
fidivs
in
push
js
loop
mov
inc
mov
in
pop
mov
cmp
movsb
cltd
movsl
lea
jae
stos
jl
lahf
jl
sub
push
arpl
loope
arpl
and
in
xor
inc
pop
mov
sarb
mov
dec
and
mov
sub
mov
daa
ficoml
movsl
aad
ss
or
leave
xchg
or
xchg
lock
scas
push
test
cwtl
daa
mov
mov
push
cmp
add
cld
in
mov
rolb
je
xor
pop
cmc
push
in
pop
and
xchg
sbbb
xchg
ror
into
call
mov
sub
jg
cmp
push
daa
arpl
mov
nop
cmp
out
dec
int
add
movsb
nop
mov
adc
test
xor
iret
cmp
sbb
inc
pop
and
or
mov
mov
scas
xchg
mov
scas
push
jno
xor
outsl
fs
out
jmp
int3
sub
ficoml
call
pop
sbb
arpl
mov
fwait
testl
and
rep
jmp
jns
cltd
stos
jecxz
gs
sub
pushf
ret
push
cwtl
lahf
or
test
inc
push
pop
push
mov
sahf
stc
decb
test
jae,pt
std
dec
rol
out
push
xchg
adcb
outsl
xor
enter
dec
out
add
dec
es
mov
stos
mov
pop
ja
xchg
cs
or
pop
test
and
mov
mov
fdivs
add
cmc
push
sbb
test
ret
bound
leave
ljmp
add
jmp
pushf
pop
ljmp
aas
mov
xchg
scas
shll
dec
pop
xor
push
fsubrs
xchg
xor
sbb
cmp
xchg
lock
test
leave
cmpsl
stos
xor
fcom
lods
fnsave
loop
jno
stos
fcoms
aas
lss
pop
jno
nop
lret
loope
int
loop
sbb
cmp
xchg
or
dec
sbb
std
and
insb
pop
mov
aas
out
jne
psrlw
or
loope
mov
loope
in
jae
scas
outsl
lret
xor
or
flds
sbb
jno
cs
lds
dec
je
js
aaa
std
adc
jnp
repnz
in
push
fsubl
pop
xchg
iret
jbe
clc
cli
roll
mov
stos
xchg
cmp
das
cmpsb
ja
fsubrs
inc
push
addr16
arpl
jg
push
pop
fidivrs
js
lea
add
in
rcl
stos
outsl
lods
lea
push
test
mov
in
leave
dec
idivb
jge
pop
mov
daa
dec
adc
pop
lods
and
rolb
jg,pt
sub
sbb
jmp
push
or
js
mov
push
popa
stos
cmp
in
xchg
cmpsb
out
out
js
pop
std
add
xchg
mov
fcmovne
xlat
outsl
icebp
lods
jb
test
movsl
or
in
cld
xor
movb
lret
call
sbb
and
sarl
fidivrs
rcrb
lcall
aad
mov
jp
in
jecxz
pop
pop
sbb
popf
shrl
arpl
xchg
loopne
stc
cmp
mov
sbb
mov
cmc
and
push
divb
push
in
cltd
mov
fs
js
jp,pt
jne
mov
jle
inc
cwtl
xlat
imul
ret
sub
shll
adc
lock
loopne
sub
jo
dec
xchg
imul
sbb
pop
and
xor
pop
inc
jp
rolb
cs
lret
subb
lret
fnstsw
faddl
aam
lods
mov
push
inc
scas
call
mov
lods
mov
int3
and
jns
ficomps
pop
and
movsl
adc
adc
cmp
das
int
lds
mov
jbe
mov
call
rorb
int3
ds
cmp
cmp
je
push
orb
lock
cmpsb
xchg
in
daa
xchg
lods
lods
jns
dec
in
dec
icebp
xchg
xchg
adc
push
test
jle
scas
repz
fs
sbb
out
loope
adc
add
das
aaa
mov
jp
fs
sbb
xchg
stc
pop
mov
or
and
or
push
iret
aas
movsl
cmp
xchg
pop
xor
and
mov
in
arpl
dec
test
pop
les
adc
dec
xchg
test
sub
mov
leave
mov
loope
clc
sarb
mov
and
sbb
movsl
jne
das
jne
sub
pop
sti
and
mov
push
repz
xlat
add
lods
and
ds
sbb
mov
jo
pop
pop
lods
andl
cmpsl
and
sub
cmp
loope
lods
icebp
push
and
repnz
xchg
xchg
xchg
push
pusha
mov
cmp
mov
stos
inc
je
mov
ljmp
stos
sub
mov
rcll
pop
ja
lods
cli
loopne
pop
std
push
push
mov
repnz
add
fcoml
imul
adc
cmp
divb
add
data16
pop
lahf
adc
repz
sbb
lret
pop
add
push
push
jne
mov
push
sub
jo
out
sub
sub
pop
pop
sti
jle
cmpsl
out
add
and
cmp
js
cmp
sbb
incb
pop
jnp
mov
push
jp
les
out
mov
stc
xor
jl
sbb
fucomp
sti
sti
ret
incl
mov
loopne
jo
mov
dec
jb
imull
leave
xchg
jg
and
lcall
bound
sbb
cs
cmp
mov
cmp
movsb
push
inc
ret
push
or
xchg
aam
sti
add
in
ljmp
std
imul
mov
iret
xchg
xor
ljmp
insb
pop
outsl
fidivrs
or
mov
mov
test
dec
sub
sbb
jl
cmp
push
adc
mov
inc
gs
test
sti
lds
lods
sub
sub
insb
pop
fsubrs
sub
mov
sbb
xchg
xchg
int
int3
or
insb
cmpb
adc
roll
inc
or
loop
xor
sub
adc
adc
dec
popf
clc
rcll
lret
movsb
mov
fdiv
imul
popa
dec
dec
jmp
outsl
sahf
ret
xchg
mov
xchg
push
aad
mov
jo
jnp
xor
in
mov
dec
lea
leave
and
sar
clc
je
fsubs
push
std
push
lock
mov
jns
xchg
ds
xchg
push
lds
mov
faddl
loope
ds
xchg
out
scas
add
sbb
in
mov
add
mov
adc
push
rclb
push
jge
dec
mov
cli
repz
mov
sbb
and
pushl
daa
sbb
sub
dec
push
cmp
pop
aad
dec
out
and
inc
imul
or
out
mov
in
sbb
dec
fistps
xchg
rol
jbe
push
cmp
cli
sub
stos
add
ds
dec
mov
pop
outsl
movsb
movsl
sub
mov
cmp
int
es
add
adc
shlb
mov
sbb
js
jae
add
hlt
sbb
pop
push
add
and
cld
dec
jp
data16
fs
loop
iret
xor
xchg
mov
test
stc
ficoml
pop
adc
xchg
gs
mov
fbstp
mov
test
test
jmp
dec
inc
icebp
aaa
lret
mov
aaa
mov
and
cmp
pop
hlt
pop
je
cmp
mov
sub
lret
jo
aaa
xlat
mov
lea
xlat
movsl
mov
cmpsb
adc
pop
es
into
lds
and
push
mov
cmp
imul
mov
fs
shll
mov
mov
ret
push
rorl
dec
push
ret
mov
test
outsb
je
ret
xchg
xchg
nop
repz
int3
stc
orb
jns
sbb
ret
jp
imul
inc
mov
pop
sub
push
fiaddl
add
mov
shr
outsl
mov
lret
dec
push
dec
xchg
sub
test
jecxz
mov
mov
push
in
xor
aas
lods
inc
sarl
xor
fdiv
push
inc
enter
shrb
hlt
pop
test
pop
mov
xchg
mov
stos
stos
push
push
push
xor
adc
and
sahf
sbbl
pop
push
adc
push
xchg
jp
pop
jb
addb
and
cmpsl
sbb
and
sub
xor
xchg
ds
test
cmp
adc
or
jo
xchg
jns
in
mov
sub
and
rcrb
shll
int3
mov
sbb
in
mov
sbb
or
into
bswap
mov
decl
loope
insb
loopne
cmp
jge
cmp
fmul
fbstp
pop
out
xchg
in
add
inc
enter
in
int
in
push
cmc
mov
jecxz
inc
add
sub
push
jns
xchg
repz
mov
lahf
icebp
test
push
fcomps
lsl
cli
mov
adc
ret
mov
scas
xchg
pop
push
cs
call
add
add
mov
jl
ss
cmovae
int3
jecxz
push
cwtl
push
cmc
rcrb
lret
ficompl
or
shlb
cld
bound
pop
pop
aad
sub
cwtl
xchg
add
sbb
xor
adc
mov
fcompl
jle
mov
pop
jbe
sub
push
std
lcall
cmp
xchg
xchg
je
push
cmp
jae
test
pop
nop
fsubrl
xor
or
inc
cli
jnp
leave
lret
insb
loope,pn
aas
pop
ja
xor
cmp
stos
pop
push
arpl
jmp
iret
scas
xchg
mov
rcrl
pop
sub
fsubrs
movsb
sub
jecxz
sahf
mov
movsb
jno
pop
mull
mov
pop
imul
or
inc
outsb
sar
clc
popa
divl
and
insb
adcb
mov
loop
xor
jo
and
jp
lds
jmp
dec
orl
push
dec
jne
outsb
clc
ret
mov
sbb
out
ficoms
cmp
fisubs
shlb
mov
push
clc
mov
xchg
jle
jae
cs
cli
adc
dec
sub
stos
mov
stc
test
scas
mov
adc
push
lcall
lcall
jno
inc
repz
adc
adc
add
and
loop
notb
hlt
or
dec
fwait
fs
xchg
jne
dec
insl
repnz
hlt
mov
mov
xor
repz
sbb
fwait
movsb
or
in
ret
into
leave
xorl
ret
adc
jp
hlt
mov
mov
mov
jae
stc
push
pop
xlat
sub
add
push
and
cwtl
jbe
popf
jge
popf
sbb
jae
das
mov
or
leave
cmpsb
lret
pop
adc
mov
shr
jecxz
loop
out
int3
pop
popa
jmp
mov
mov
jmp
inc
std
mov
mov
jns
pop
sbb
pop
add
jns
push
cmp
pop
pop
xchg
int3
stos
addb
adc
add
es
pop
pop
push
mov
jns
jno
stos
jp
sub
jle
inc
fs
inc
js
or
fnsave
lds
pop
push
call
mov
lahf
inc
stc
jns
adc
out
pop
fdivrp
jl
shll
push
jae
rorb
lock
jl
sbb
jno
adc
dec
xor
or
ret
cmc
repnz
jle,pt
and
lcall
pop
jmp
out
popa
inc
sub
inc
xlat
sub
and
push
jnp
test
sarl
cmpsb
cmpsb
loope
pop
add
loop
adc
push
mov
addr16
push
stos
cmp
xor
mov
popa
filds
mov
pushf
fcomip
and
push
mov
and
insb
lea
and
sub
push
sub
mov
in
out
jmp
out
movsl
or
xchg
pop
jg
or
push
jnp
bound
insl
inc
icebp
push
pop
loopne
arpl
xchg
mov
fimull
fucomi
bound
mov
aad
das
addr16
mov
jmp
stc
out
sub
push
imul
mov
ss
jmp
cli
xchg
mov
fwait
add
cmp
jg
dec
or
fmull
pop
fildl
fcomi
cmp
xchg
aam
fdivs
cli
jns
out
cli
out
add
sbb
roll
mov
mov
mov
sub
push
and
loop
insl
mov
fs
dec
int3
stos
fwait
cmpsb
adc
xchg
pop
mov
push
jne
mov
adc
cmpsb
and
adc
ret
push
jmp
dec
sbb
jb
cmp
mov
scas
and
cmc
ljmp
mov
cmp
mov
jns
pop
aam
sub
add
push
lahf
jno
frstor
jb
aaa
add
push
imul
mov
and
jge
cmp
cmp
call
push
ret
pop
in
and
mov
add
add
xchg
and
jno
aas
jmp
jle
std
xchg
stc
pop
mov
mov
push
and
jne
stos
into
and
sub
movsl
in
repz
pop
mov
add
mov
push
sarl
adc
je
sub
mov
aas
ret
imul
gs
pop
jge
jl
pop
jl
mov
aad
push
aas
push
mov
xor
test
mov
mov
in
push
adc
ja
xchg
cmp
hlt
sub
imul
xor
movsb
mov
jmp
int3
ret
mov
fwait
adc
jle
in
inc
jmp
roll
add
jno
sbb
or
add
xor
pop
mov
cmpsl
mov
ret
xor
cmc
add
bswap
or
xchg
push
notl
jle
push
js
pusha
loop
xchg
push
mov
fcomps
rcrl
orl
rclb
xlat
sub
lods
out
mov
aas
out
cwtl
jmp
js
or
shlb
scas
scas
pop
mov
sahf
addr16
mov
dec
jl
push
adc
or
cmp
ss
jb
pop
fwait
pop
in
aas
jmp
jae
jge
mov
xor
mov
pop
lods
ja
mov
stos
loop
rclb
adc
sub
xchg
xorl
mov
insb
ficoml
int3
scas
stos
lcall
lahf
in
xorl
lret
sarb
push
add
adc
int
shrl
outsl
fucomp
stos
out
push
pop
dec
out
and
lcall
popa
adc
add
sub
sub
mov
aad
sub
daa
push
ss
sub
lret
mov
mov
enter
sahf
rdpmc
cmp
push
mov
mov
xor
movsb
sub
add
shl
into
pop
sbb
sbb
jge
js
mov
cmp
aam
mov
and
fbld
xor
outsb
cmp
lods
dec
dec
roll
xchg
jg
aad
enter
xor
and
mov
jb
pop
push
lret
and
orb
iret
add
dec
cmp
test
ljmp
test
out
test
mov
lds
fimull
xor
cmp
mov
cmp
add
push
cs
je
negb
dec
mov
adc
or
inc
jg
or
xchg
jmp
inc
pop
in
lock
cs
test
outsb
loopne
xchg
xor
out
into
sbb
gs
add
push
push
in
mov
test
xor
imul
xchg
jg
xor
into
pop
sahf
and
add
xchg
mov
push
push
movsl
sub
loope
das
sahf
lea
jmp
lods
rcrl
and
addl
inc
sub
xchg
rorl
sub
outsb
sub
push
fwait
pop
cmp
add
jg
lcall
js
mov
ret
pop
jecxz
cmp
jbe
jnp
subl
aam
or
push
and
mov
leave
mov
cmp
jle
jge
sbb
aas
sub
add
jno
push
loop,pt
or
popa
jle
cltd
cmc
sbbl
mov
pop
lret
xchg
ret
cltd
and
outsb
xor
pop
scas
sub
cmp
push
iret
icebp
sub
mov
lret
inc
fwait
sti
cltd
sbb
mov
mov
and
loope
dec
mov
cli
sub
lods
lock
mov
push
mov
into
imul
inc
je
mov
and
mov
aam
add
adc
ljmp
int
cwtl
clc
sahf
dec
mov
push
xchg
scas
inc
push
xchg
jns
scas
js
lock
lods
addr16
mov
addr16
leave
in
and
mov
in
push
cmp
jmp
adc
add
sarl
bound
gs
jno
pushf
idivb
int
fcomps
les
push
sub
js
call
jmp
mov
cmp
lods
push
jle
sti
rcl
cmp
ret
xor
push
enter
ret
push
sahf
inc
ds
movsb
les
push
push
out
mov
cs
cmp
inc
pop
sarb
lcall
jno
subb
xchg
push
inc
ljmp
jbe
ss
cmp
jge
add
mov
jns
pop
xchg
in
jne
clc
cmp
icebp
lods
and
movsb
xor
daa
add
nop
push
push
jo
out
loope
je
clc
aam
dec
mov
insb
mov
mov
mov
mov
push
dec
psubd
mov
jns
push
popf
stc
test
or
iret
ret
sub
xor
jp
mov
jne
lahf
nop
mov
testb
push
or
and
add
mov
pop
iret
rorl
stos
and
insb
enter
rorb
push
push
into
mov
cmp
ret
mov
lods
inc
or
push
mov
cltd
lahf
cmp
cmp
mov
cli
lds
inc
sbb
stc
mov
outsb
dec
xchg
adc
add
push
icebp
fs
push
lods
add
mov
stc
or
or
shrl
push
les
insl
popa
pop
cmc
pop
mov
ds
jl
cwtl
fisubrs
xchg
push
pop
lock
mov
and
push
sub
adc
sbb
ds
mov
add
cmpsl
scas
pop
and
fdivrl
jns
mov
cmp
or
rcrb
inc
fld
fldlg2
push
xchg
andb
push
rcl
inc
inc
jmp
loopne
inc
fistpl
inc
push
push
inc
adc
mov
stos
jae
xchg
cmpsb
mov
dec
dec
popa
cwtl
or
push
pop
push
dec
dec
rorl
outsb
in
mov
jmp
add
ds
leave
push
shlb
push
jp
ss
repz
xor
sub
push
scas
or
cmpsl
rcrb
sbb
mov
mov
push
inc
dec
push
adc
add
mov
aaa
cmp
fidivrs
xchg
cltd
or
fsubs
sbb
stc
add
jl
mov
rol
xor
push
scas
xchg
clc
mov
or
xchg
in
sub
push
dec
xchg
into
cwtl
adc
lcall
push
mov
pusha
jb
bound
cmp
mov
jmp
adc
enter
xor
xor
add
mov
dec
sbb
push
sbb
mov
mov
adc
and
iret
outsw
into
loopne
sub
fstl
std
jecxz
insl
movsb
ds
jo
mov
nop
add
inc
dec
mov
clc
stos
jge
mov
inc
les
fs
movsl
inc
pop
loopne
xchg
add
lahf
movsl
lds
test
push
mov
dec
dec
and
imul
call
push
fdivr
dec
scas
cli
imul
cs
fcoms
dec
mov
fisttpll
push
fcoms
or
cmpsl
lcall
xor
test
cmc
movsb
jbe
mov
adc
fs
aas
mov
push
test
mov
mov
imul
lods
cli
bound
push
mov
dec
movsl
xchg
scas
out
in
and
addr16
cmpsb
adcb
pop
mov
push
push
scas
mov
fld
paddb
pusha
mov
dec
jle
lret
aas
inc
sbb
stos
xor
adc
shll
jle
mov
push
rcrb
lods
or
add
adc
pop
addr16
fistpll
aam
int
xchg
and
dec
pop
aam
shl
outsb
movsb
pop
out
add
pop
push
stos
inc
ljmp
stos
lahf
das
cmc
sbb
cs
stos
pop
movsl
insl
test
cmp
xor
js
fistl
jecxz
pusha
addr16
outsb
ret
pop
je
sbb
fcmove
dec
pop
outsb
jge
cld
je
xchg
mov
add
sbb
cmp
pushf
mov
sti
lahf
mov
jo
cmp
cmc
pusha
cmp
mov
or
imul
sbb
cmp
pop
clc
inc
mov
loope
adc
mov
jne
loop
sub
cwtl
arpl
das
pop
xchg
xchg
jns
out
push
icebp
cmp
cmp
lret
mov
mov
mov
rolb
mov
testl
insb
push
lods
mov
sub
sti
psubsw
movsb
std
data16
fildll
das
mov
adc
inc
mov
pop
jo
icebp
rol
dec
cmp
pop
add
iret
das
decb
mov
xor
jnp
jl
cmp
push
xlat
lods
sbb
and
pop
aaa
test
sbb
add
roll
test
sbbb
jns
xor
dec
pop
or
js
xor
mov
pop
stos
inc
dec
iret
mov
loop
pop
in
out
aam
jo
add
pusha
cmpsb
test
aaa
xchg
ret
push
add
sahf
pop
sbb
cmp
testb
and
div
insb
cmp
je
sbb
inc
push
vandnpd
mov
mov
add
xchg
mov
pop
ljmp
dec
sbb
testb
out
lret
dec
cmpsl
imul
sub
out
in
insl
inc
in
cmp
jnp
cwtl
lea
mov
dec
outsb
mov
push
dec
xchg
pop
insb
adc
cs
cmp
xchg
jp
movsb
cmpsb
mov
xchg
gs
pop
mov
loop
sti
andl
cmp
or
mov
in
daa
into
not
daa
add
adc
insl
pop
pop
repz
sub
int
fists
push
inc
pop
mov
out
mov
inc
cmp
xor
movb
cwtl
into
ret
lahf
dec
jnp
jmp
pop
imul
aad
cli
sbbl
fwait
xor
jl
rol
fwait
sarl
adcb
scas
mov
mov
sbb
dec
fcoms
push
popa
and
push
lcall
sub
xor
adc
dec
leave
mov
inc
fwait
rcr
mov
pop
sar
aaa
dec
pushf
test
fbstp
xor
ja
mov
inc
fsub
jns
or
sub
xchg
pop
jb
pop
jge
or
pop
sbbb
test
mov
lods
ret
pop
mov
popf
pop
ljmp
mov
ds
loopne
les
outsl
xor
stos
push
xchg
out
sbb
add
jl
mov
adc
push
pop
jo
aas
lahf
sub
and
pop
ja
rcrl
xor
lret
stos
decb
dec
or
sub
jo
hlt
jge
push
and
clc
out
mov
inc
push
adc
xchg
sub
aad
popf
add
mov
rorb
mov
scas
mov
mov
bound
sub
std
add
pushf
add
pop
adc
dec
bound
pop
push
push
inc
sti
test
xchg
sbb
xchg
or
pop
inc
adc
out
inc
dec
mov
ljmp
call
add
insl
and
push
pop
mov
xchg
cmp
push
xchg
outsb
inc
push
stos
ficompl
ss
in
flds
imulb
sub
push
inc
pusha
jge
mov
fdivl
in
add
inc
cmp
in
add
or
or
pop
adcb
cmpsb
leave
dec
in
xrstor
xchg
pop
mov
sub
out
test
xor
jno
inc
inc
sub
dec
dec
and
jmp
and
push
xchg
push
sub
cmpsb
sub
dec
sub
mov
outsb
inc
mov
and
pushf
xor
iret
jecxz
loope
arpl
fimuls
jbe
pop
mov
loop
pop
loope
push
xlat
xor
fldenv
adc
cmp
xor
or
pop
sub
out
push
or
add
movsl
loop
add
pop
mov
adc
or
subl
daa
test
lods
stos
scas
cmp
mov
fidivrl
jnp
fstl
scas
fidivrl
rcll
filds
sbb
stos
out
sbb
popf
clc
add
mov
xor
push
cmpsb
adc
mov
enter
cli
or
or
sbb
insl
sub
mov
push
pop
and
fisubl
pushl
mov
lahf
sub
lea
xchg
hlt
push
clc
xor
add
ret
out
aam
lahf
cs
loop
mov
fisttpl
mov
sub
popf
arpl
xor
add
hlt
out
scas
ljmp
test
imul
or
hlt
nopl
cmp
jo
popa
and
ja
push
push
fsubs
inc
sub
sbb
out
ljmp
cmp
add
mulps
mov
cmp
lea
jg
loope
cwtl
loop
mov
gs
andb
push
insb
jns
and
mov
push
lds
int3
jnp
jo
andl
jmp
add
xchg
xchg
cmc
out
fs
lret
xor
cmp
pushf
cmp
adc
std
xchg
je
jp
gs
add
adc
pop
sbb
dec
adc
imul
clc
stc
or
jl
arpl
ja
push
dec
mov
jge
inc
out
test
inc
and
jnp
fidivrs
leave
xchg
mov
xchg
popa
sub
rolb
push
imul
fidivrl
lret
sub
pop
dec
mov
mov
add
xor
ret
pop
mov
fs
aaa
ret
xlat
xor
in
mov
xchg
mov
out
dec
pop
or
xchg
notl
inc
push
jle
repz
mov
cmc
push
into
popf
cmp
push
fcmovbe
das
scas
push
pop
adc
jmp
xchg
jbe
pop
insb
dec
jbe
cmc
lret
mov
xor
sbb
ret
dec
mov
loopne
sarb
adc
popf
movsb
outsb
push
and
lahf
and
nop
mov
addl
inc
lods
aam
scas
in
fstpt
daa
mov
add
dec
test
sub
xchg
sub
cmp
rorb
and
inc
jno
pop
and
pop
fs
push
outsl
adc
pusha
and
stos
lahf
xor
pop
cmp
push
out
xorl
mov
shl
mov
into
movsb
fisubl
pop
pop
cmp
xor
pop
jb
sahf
cmp
xchg
sbb
mov
sbb
jmp
popf
jl
adcl
aad
orb
rorl
loop
or
decb
mov
lds
sub
or
aad
lret
in
frstor
push
inc
mov
xor
jg
push
arpl
sbb
mov
inc
add
inc
out
pop
decl
sub
rcr
pop
and
cmp
or
xchg
cwtl
cmovns
inc
mov
pop
inc
dec
iret
xor
inc
movsl
dec
mov
pop
movsl
daa
sub
sbb
pop
dec
adc
sub
mov
sbb
addl
cmpl
jg
mov
cld
icebp
call
ficompl
jge
jnp
and
mov
pop
add
sub
sub
subl
sub
push
pusha
xlat
push
mov
xor
cmc
jl
add
cmc
sbb
dec
xchg
jno
mov
add
xchg
cmpsl
inc
test
sbb
inc
xchg
int
std
gs
jmp
fdiv
jb
scas
or
push
push
clc
xor
shrl
xor
xchg
or
mov
xchg
nopl
mov
push
adc
insl
inc
cmp
sbb
adc
push
rorb
inc
mov
push
je
add
mov
call
lcall
sub
xchg
jp
cmp
popf
pop
sub
add
loope
mov
mov
mov
xchg
decl
cli
cmp
fs
out
sub
mov
mov
test
inc
inc
adc
cmp
xchg
rorl
call
adc
and
xor
pop
lcall
and
jle
adc
jp
mov
ss
add
xor
cmp
mov
sbb
popa
sub
repnz
pop
mov
outsl
pusha
into
inc
iret
fwait
sbbb
push
mov
adc
push
sahf
push
lods
xchg
inc
notl
mov
dec
xchg
lret
push
inc
cld
push
jbe
divl
sbb
sub
mov
ss
outsb
pop
push
cwtl
jno
xchg
int
pop
pop
cmpsl
addr16
daa
inc
pop
push
mov
je
testb
jle
test
mov
add
js
testl
shrl
mov
or
cvtps2pd
jl
and
pop
jl
jno
or
dec
mov
nop
loop
jecxz
mov
sub
and
or
sbb
ret
fwait
popa
inc
jns
and
push
or
mov
cmp
xchg
pop
lahf
dec
movhps
push
mov
sqrtps
and
adc
out
cmp
dec
ds
push
push
pop
push
movsb
or
xchg
lods
pop
rcrb
adc
jb
push
andb
pushf
call
inc
dec
sbb
mov
xchg
jbe
xchg
push
jge
pop
rcrl
clc
popf
jae
cmpsb
mov
test
mulb
test
jg
test
xchg
jae
pop
sarb
movsl
xchg
mov
xchg
dec
jns
xchg
jbe
pop
jb
mov
ret
adc
clc
pop
es
or
insb
call
loopne
pop
sub
vcomiss
inc
stos
mov
sub
jnp
push
shrl
dec
lock
mov
pop
dec
jne
pop
adcl
add
xor
dec
test
push
mov
les
lods
xor
mov
mov
jg
push
mov
push
jns
cli
mov
mov
cmp
stc
lret
adc
addb
inc
mov
fstpt
movsl
stc
sbb
cmp
xchg
xlat
icebp
les
stos
movsb
ljmp
movsb
mov
outsl
leave
xchg
mov
stos
or
frstor
inc
sub
insb
dec
mov
leave
sbb
jb
ljmp
in
adc
xchg
pop
sahf
lods
and
jne
push
and
es
lret
xor
filds
loope
cmpsl
int
jp
out
and
arpl
xchg
cmp
dec
test
push
icebp
icebp
pop
push
nop
test
adc
int
sub
push
pop
xor
jne
mov
mov
mov
into
hlt
rclb
inc
mov
inc
xchg
stc
mov
and
cltd
jns
lea
fld
add
rcl
and
add
sbb
popa
sub
push
jmp
je
or
jae
dec
mov
int3
and
cltd
pop
xor
cmp
jns
dec
push
xchg
pop
pop
repz
adc
inc
mov
test
les
xor
xchg
sub
dec
subb
xchg
cwtl
stos
cmp
loope
or
lods
jp
insl
in
es
sahf
mov
adc
push
cmp
sub
push
jb
mov
push
ss
jb
sub
je
add
inc
add
mov
push
lods
mov
sbb
fstl
test
jne
sbb
mov
sbb
cmpsl
inc
in
pop
or
js
sahf
push
leave
mov
pop
mov
cs
push
mov
cwtl
stos
fwait
test
push
cmp
shll
mov
adc
incb
test
xor
outsl
dec
lahf
jp
enter
stos
xchg
pop
sbb
cmpl
fucom
jecxz
and
test
push
test
add
je,pn
jnp
fsubrs
inc
pop
push
lcall
jmp
daa
adc
div
adc
cmp
scas
sti
push
xor
dec
jo
fisubrs
fldt
sar
lods
xor
mov
sahf
mov
push
adc
and
cmc
div
mov
mov
jns
dec
mov
push
jns
fists
pop
mov
or
lock
les
cli
mov
scas
outsb
int
fwait
ror
movsl
aaa
and
inc
es
sub
add
pop
loop
popa
sbb
push
jne
cmp
xchg
popf
sbb
jne
xchg
or
pushf
loop
in
lock
das
rolb
mov
or
clc
and
xor
addr16
adc
mov
cmp
dec
jnp
lret
popa
div
inc
lods
xchg
repnz
rcll
push
adc
push
fsubl
in
aam
inc
pop
outsl
sub
push
ss
fisubrs
mov
or
subl
loope
inc
and
data16
minps
lret
iret
mov
lds
cltd
sti
adc
out
or
mov
mov
es
mov
mov
jno
mov
add
sahf
push
or
pusha
out
push
repnz
mov
ljmp
insl
pop
adc
or
push
mov
cld
jne
or
sbb
ffreep
inc
mov
jo
sub
out
inc
les
pop
scas
loope
inc
mov
push
xchg
imul
mov
pop
loop
ds
dec
jmp
lret
fldenv
push
inc
sbb
xor
shrb
ret
jne
fidivs
sub
mov
repz
repz
rorb
or
mov
in
sti
push
mov
xor
ss
adc
add
add
mov
cmp
inc
pop
jecxz
jnp
sbb
pushf
add
js
mov
push
or
lahf
mov
leave
pusha
push
jmp
inc
xchg
xor
jnp
inc
push
mov
mov
mov
std
xorl
imul
sbb
shll
and
fdivrl
lea
xor
xor
hlt
mov
mov
jbe
sub
lods
fdiv
je
imul
in
sbb
inc
out
xchg
loopne
out
push
dec
sub
fnsave
out
mov
sarl
jo
lea
adc
adc
xlat
push
in
rcll
data16
mov
mov
mov
jmp
xchg
fwait
push
adc
sbb
mov
adc
inc
bound
sahf
mov
insb
fisubrl
xor
out
pop
stc
cmp
inc
pop
inc
nop
cmp
cmp
cmp
mov
call
mov
mov
mov
push
pop
call
add
mov
cmp
lret
xchg
rorl
gs
pop
jp
cmp
push
push
sbb
or
jecxz
cmp
add
loope
andb
test
mov
shlb
mov
sahf
js
sbb
movsl
xchg
mov
scas
xor
xor
cmp
lcall
inc
adc
pop
fwait
lahf
cmp
hlt
int3
jmp
cld
jo
mov
fnsetpm(287
or
sbb
and
inc
xor
outsl
lahf
adc
aad
add
je
or
fiaddl
push
jb
xchg
pop
mov
aam
and
xchg
in
jns
icebp
sbb
push
fcomi
cmpsb
inc
inc
jae
lods
cmp
dec
mov
aas
pop
and
mov
fsubl
jne,pn
add
js
pop
inc
sub
rorb
mov
ss
out
outsb
dec
mov
mov
mov
test
popf
cld
iret
and
into
iret
insb
dec
lret
mov
mov
popa
cmp
add
and
frstor
sub
sub
stos
sub
rclb
jb
mov
xor
sub
aam
sub
add
imul
mov
mov
mov
jb
sbb
inc
jb
orb
in
test
and
popa
les
lock
pop
push
pop
les
andl
push
jg
das
pop
mov
cmpsb
lcall
mov
inc
sub
mov
fwait
sbb
xor
aaa
mov
inc
aad
fcmovne
pop
lret
pushf
or
inc
lods
mov
divps
pop
xor
inc
sbb
ds
fwait
out
data16
aad
sbb
xor
cs
xor
push
popf
lahf
and
lods
mov
in
or
mov
pop
inc
fsubrl
and
lock
jg
or
mov
test
or
sub
inc
in
jns
add
push
rcll
jle
mov
sti
loop
pop
test
mov
cwtl
push
mov
nop
mov
sub
push
sarb
adc
dec
insl
and
das
mov
pop
xchg
sbb
lods
dec
fistl
lds
fbstp
vsubps
cmp
push
push
pop
js
or
xchg
dec
push
add
outsl
adc
push
adc
addl
in
pop
add
mov
lret
loop
adc
pop
jecxz
pop
inc
pop
dec
sbb
pushf
cmp
push
pop
jge
lods
push
dec
adc
jge
adc
cld
daa
xor
add
addr16
or
sbb
jb
adc
loope
mov
mov
fwait
outsb
jg
stos
jle
into
and
mov
leave
pop
jnp
jae
clc
cmc
js
mov
adc
leave
adc
pop
sarl
scas
hlt
push
in
pop
inc
test
sub
xchg
shrb
dec
repnz
jle
xor
jl
pop
imul
mov
cmpb
lret
mov
sbb
ds
adc
testb
popf
mov
and
cmp
enter
mov
sbb
pop
mov
or
mov
rorl
and
or
push
pop
rolb
enter
lock
inc
icebp
pop
xor
sbb
out
in
scas
adc
sahf
into
sbbb
mov
lcall
xchg
ds
test
jnp
hlt
dec
add
and
push
dec
lret
rorl
mov
shlb
xor
imul
push
aad
inc
aam
out
insl
sub
xchg
mov
inc
popf
sub
pop
sub
push
cmc
andb
push
adc
scas
fistpl
cmp
jae
test
cld
sbb
out
pop
test
mov
je
mov
leave
or
mov
xchg
sub
mov
enter
mov
push
xchg
cmp
ret
pop
cmpsb
nop
stos
or
jnp
jle
in
les
stos
fs
push
add
cs
xchg
mov
cld
ljmp
sbb
and
test
in
xlat
xchg
lods
scas
add
in
js
aas
test
and
insb
mov
inc
cmpb
push
cmp
cmp
punpckhbw
xor
mulb
mov
ja
cmc
push
mov
push
xchg
push
aaa
or
xor
ljmp
cs
jecxz
ja
bound
jmp
ljmp
pop
cld
outsb
and
loopne
rcrb
push
push
out
pop
arpl
mov
mov
jp
in
divl
faddl
call
in
sub
fs
xchg
arpl
fmull
and
mov
add
je
jnp
in
xor
xchg
sub
and
icebp
daa
aas
insb
and
loopne
push
lea
imul
pop
pop
xchg
test
loop
inc
aaa
int
lret
jns
movsb
fisubl
push
insb
idiv
inc
xor
xchg
insl
aad
out
cmp
cmp
xor
cmpsl
addl
xchg
xchg
movsb
adc
cmc
mov
hlt
cwtl
insb
dec
mov
cmp
stos
dec
pop
data16
push
xchg
shrb
mov
push
int3
fld
lret
mov
in
fcomp
into
test
lea
mov
mov
push
aad
xor
mov
jb
sub
push
insl
xor
and
cmp
mov
cltd
and
test
test
faddl
jecxz
or
mov
lock
sub
jmp
ficoml
push
xlat
stos
mov
stos
jecxz
lret
call
mull
mov
inc
loope
test
cmpsb
cli
cwtl
out
sbb
adc
ljmp
lcall
loope
addps
int
dec
jne
jg
in
dec
pop
mov
cli
inc
aaa
idivb
test
mov
int3
popf
jecxz
adc
mov
scas
outsb
jp
popf
je
push
adc
cmp
leave
inc
maxps
jmp
es
data16
pop
ja
xchg
jmp
dec
icebp
adc
and
adc
into
sbb
ret
pop
or
or
cmc
loope
ja
push
lods
ret
clc
aaa
imul
pop
pop
shrd
loopne
cmp
fs
divl
fists
dec
adc
stos
sub
push
xor
xor
mov
shll
aas
mov
jg
lock
cltd
push
pop
mov
fsubrs
lods
test
in
hlt
pop
jns
mov
pop
push
xchg
rcrb
and
pop
mov
add
fcmovu
movsb
mov
rolb
enter
dec
add
imul
pop
ss
out
adc
xadd
lcall
int3
leave
and
std
push
jne
ds
sbb
sar
ss
faddp
pop
sub
movsb
aas
hlt
xchg
xor
data16
mov
xor
js,pt
and
into
mov
arpl
push
xor
rol
sti
movsb
mov
movsb
jge
or
rcll
mov
push
orb
test
adc
test
call
repz
add
and
data16
filds
pop
adc
fiaddl
test
mov
xchg
push
dec
jb
icebp
test
mov
and
push
gs
push
clc
cwtl
nop
inc
std
dec
arpl
push
ret
or
ds
stos
ret
out
jo
into
les
in
call
dec
jl
icebp
addr16
inc
mov
sub
push
fdiv
out
dec
out
dec
jl
shlb
jne
inc
out
repz
out
sub
inc
pop
jge
mov
push
xlat
cmp
out
into
add
inc
ret
pop
outsl
dec
shrl
xor
insl
jne
xchg
cmp
fsubs
int
cmp
jno
jbe
push
cmp
and
lods
mov
outsb
iret
clc
lods
test
aas
pop
ja
mov
mov
sbb
or
test
mov
movsl
mov
jg
xchg
ror
insl
mov
jg
cs
cmp
sbb
icebp
cmp
or
sbb
push
inc
fnstenv
xchg
inc
aaa
sarl
or
add
jl
lock
add
lods
mov
imul
dec
out
pusha
andl
mov
cmpsl
out
std
addr16
and
and
and
sub
in
xor
dec
mov
bound
sarb
cmp
dec
mov
sub
insb
roll
mov
add
mov
test
sbbb
jae
xor
xor
movsb
adc
xchg
pop
in
mov
and
pop
mov
add
or
mov
pop
aam
ret
and
add
iret
test
pop
cmp
mov
frstor
dec
xor
inc
jecxz
push
lahf
clc
xor
mov
sub
push
xor
add
sub
cmpsb
add
cltd
lods
mov
mov
dec
lea
leave
mov
stos
movsb
inc
inc
in
push
adc
popf
push
sub
inc
lods
sub
push
mov
xchg
adc
cs
dec
and
fidivrs
sub
mov
inc
outsl
jp
jge
ss
jle
fsts
push
shll
or
sahf
in
push
aad
cmp
rolb
lock
pop
stos
xchg
lcall
pop
sbb
aaa
adc
push
mov
ss
je
xchg
mov
xor
jmp
cmpsb
pop
rcrb
loop
jns
bound
dec
ret
fcmovnu
lods
ljmp
arpl
inc
shlb
cmp
enter
ficoms
dec
jno
popa
sub
mov
sub
xchg
inc
and
sbb
xchg
addl
adc
sbb
out
insl
dec
es
jae
imul
xor
mov
movsl
fidivrl
cmp
xchg
dec
cmpsb
sub
fstpt
xor
push
in
pop
aam
loope
xchg
aam
fwait
movsb
loop
pushf
pop
aad
xlat
or
andb
ds
outsl
or
imul
fs
fstl
mov
fwait
test
dec
insl
dec
in
mov
xchg
fimuls
or
push
insb
mov
xchg
out
mov
popa
scas
cld
jnp
lahf
ja
dec
and
sbb
dec
lods
cmp
ds
ds
mov
or
xchg
sbb
popf
out
pop
call
ret
std
outsl
lea
jb
and
jno
add
adcb
lret
jne
pushf
mov
xor
pop
jb
sti
xorl
push
ja
mov
inc
sub
mov
sub
mov
xchg
add
negl
mov
mov
jns
adcb
inc
test
sub
xor
inc
test
iret
jne
ficoml
loop
and
jns
sbb
pusha
or
gs
das
pop
push
aaa
inc
test
sub
shll
sbb
jne
or
sub
fstpt
pop
push
lea
push
push
cmpsl
ret
inc
cmp
sbb
cs
inc
push
daa
leave
push
xor
add
jle
cmpsl
lock
push
sbb
lahf
xchg
decb
mov
fwait
loopne
and
adc
jb
inc
pop
sbb
push
dec
sbb
pusha
mov
rorb
push
mov
sti
dec
imul
dec
mov
mov
xchg
and
mov
mov
js
rcrl
inc
or
mov
mov
push
in
ret
xor
lret
dec
int3
push
sbb
mov
in
pop
push
push
movl
and
repz
cmp
cmpsb
js
dec
cli
mov
loopne
mov
clc
lods
scas
ret
mov
and
lret
xchg
test
test
and
dec
mov
das
scas
clc
pop
shl
test
clc
mov
sub
add
lds
in
sbb
sub
in
sbb
movsb
sbb
mov
cmp
sahf
sbb
xchg
lcall
sbb
adc
jg
cmc
cli
jp
jns
sti
faddl
xor
xchg
mov
mov
sahf
popa
adc
fists
sbb
repnz
test
cmp
mov
das
popa
mov
call
repz
jnp
loopne
adc
ss
mov
test
mov
leave
gs
dec
lret
rorb
nop
scas
dec
mov
mov
mov
ficomps
cs
sahf
adc
jo
mov
jmp
xchg
sub
push
sub
jg
lret
mov
lods
push
pusha
dec
jae
orl
pop
sub
sub
das
in
stos
xchg
push
fsub
cld
lea
leave
cltd
arpl
push
add
push
sub
test
cli
cltd
adc
fists
pop
dec
outsl
fs
mov
les
cmp
cmp
mov
dec
into
je
aad
ds
cs
popa
cmp
outsb
jns
lock
xchg
xchg
lret
push
cmp
dec
mov
sbbl
or
mov
out
gs
test
push
aaa
jne
test
stos
sub
cmpsb
inc
lock
faddl
adc
pop
gs
hlt
test
stos
out
iret
xor
fists
or
mov
add
mov
xchg
xchg
sub
adc
out
mov
jg
fisttpl
jp
jbe
adc
insb
and
sub
dec
mov
std
xchg
idivb
pop
ja
lds
scas
mov
rclb
mov
mov
inc
push
ss
push
sub
or
push
push
xor
adc
push
sbb
shll
or
fsubrs
cs
inc
arpl
mov
arpl
out
fwait
add
in
movsb
divl
test
aaa
jecxz
int
mov
mov
divl
adc
add
ret
pop
cmp
into
mov
ret
loope
lods
dec
pusha
lcall
call
lods
ss
mov
xor
fs
stc
orb
ds
int
aad
jne
adc
les
in
rcl
inc
or
lods
mov
pop
adcl
into
sub
mov
call
and
xchg
adc
out
and
in
jbe
mov
mov
cmp
in
and
inc
adc
inc
test
mov
and
mov
pop
mov
ret
mov
cmp
jecxz
push
push
sti
in
push
mov
xor
idiv
loopne
pop
mov
in
lods
aaa
bound
sub
mov
mov
sar
jne
mov
push
jp
pop
fdivs
in
xor
cmp
xchg
imul
cli
xchg
ds
ja
sbb
jmp
pop
adc
pop
jge
ret
pop
mov
gs
insl
shrb
mov
dec
inc
jno
rcrl
mov
sub
xchg
loopne
xor
inc
je
out
push
pop
mov
cmpl
into
xor
xor
enter
mov
inc
and
in
mov
or
insb
mov
mov
pop
cs
ds
rorl
fldcw
mov
movzbl
outsl
inc
sbb
xchg
test
and
push
jge
add
loopne
push
push
mov
cwtl
je
jns
icebp
xchg
mov
mov
cmp
sbb
scas
arpl
jo
repnz
push
and
pop
pusha
in
mov
decb
divb
je
mov
jmp
dec
xchg
cli
mov
fildll
imul
cmpsb
mov
ret
scas
jmp
push
shl
mov
inc
xor
and
jp
mov
nop
icebp
xor
mov
scas
cmp
mov
sub
inc
nop
and
outsl
mov
push
adc
fistl
mov
insb
lcall
gs
rorl
mov
jne
push
pop
out
jecxz
xor
gs
or
mov
xchg
jne
inc
add
mov
or
negl
iret
nop
idivb
mov
loope
shlb
adc
aam
mov
lahf
repnz
inc
sbb
pushf
jmp
jg
push
in
cmp
xchg
xchg
push
push
inc
push
fadds
scas
adc
sti
out
cmp
dec
pushf
push
rclb
xor
inc
xchg
jl
add
scas
hlt
sub
sub
mov
jl
rclb
fmuls
push
mov
mov
mov
inc
imul
fsubrs
pop
fldl
movntps
insb
pop
sbb
lahf
int3
xor
into
lea
lea
adc
inc
fbstp
fimull
xchg
enter
movsb
mov
mov
mov
push
mov
adc
les
mov
mov
lret
leave
pop
cmp
dec
push
xor
in
mov
popf
addb
xchg
mov
sub
mov
cltd
inc
add
mov
and
pusha
call
imul
push
sbb
int3
and
test
sti
addr16
mov
dec
push
sub
in
scas
imul
mov
fwait
sub
fucomip
sub
aaa
pushf
ss
mov
mov
nop
rclb
mov
ret
xlat
mov
add
sarb
push
iret
shll
xchg
fnsave
or
les
jle
sub
dec
mov
js
mov
mov
pop
xchg
imul
rcrl
pop
sub
cmp
std
mov
xchg
mov
je
push
cmpsl
punpckhbw
or
das
pop
mov
loope
std
xchg
shll
in
cmp
and
cwtl
stos
call
cwtl
push
lahf
data16
loope
aam
mov
push
mov
ss
scas
clts
xchg
push
aam
xor
inc
pop
xchg
or
imul
mov
in
push
lea
fistpl
fdivl
dec
mov
scas
inc
cmp
scas
nop
add
dec
jecxz
add
sub
cs
inc
sub
popf
pop
jge
or
fsubrs
or
mov
icebp
jmp
xor
add
cmpsb
enter
or
std
jmp
or
das
xchg
aam
push
adc
mov
mov
add
in
lods
sahf
mov
cwtl
pop
out
push
xor
pop
cmpsb
push
mov
dec
cmp
lcall
add
dec
or
leave
push
cs
pop
scas
xchg
stos
add
mov
jbe
sti
mov
jnp
or
cwtl
std
mov
pop
sub
push
in
test
sti
in
mov
imul
test
mov
ds
cmp
jle
dec
push
and
imul
nop
sbb
cmp
jnp
cmp
loopne
pop
scas
xchg
dec
pop
mov
ss
cld
fistpll
popa
cwtl
and
icebp
sbbl
fsubs
push
xchg
mov
cmpsl
push
and
ljmp
inc
pop
push
sti
popa
fucomi
je
dec
and
add
pushf
mov
sbb
inc
mov
nop
push
push
add
sub
pop
push
js
jle
jge
and
pusha
push
je
fwait
test
mov
imull
adc
out
aam
popf
ror
out
out
aam
int
adc
leave
cmp
lock
xchg
xchg
sub
xor
sbb
jle
or
dec
pop
les
in
add
cmp
aam
pop
mov
out
push
jge
ss
popa
shr
lret
fiadds
stos
pop
repz
addr16
in
fldenv
fsubp
je
mov
xchg
icebp
sti
push
movzwl
adc
xchg
cli
cmp
pop
daa
rcr
int3
lret
ss
int3
or
mov
mov
subb
js
xchg
and
mov
test
jbe
push
out
pushf
mov
lods
cmpsb
mov
xor
push
lds
pop
jge
xor
or
bnd
push
and
stos
sub
jb
jmp
ret
cmpsl
outsb
push
push
mov
int
pop
stos
xchg
mov
cs
ljmp
lahf
cmpsl
cmp
adc
add
push
cmc
or
push
xchg
inc
shrl
push
movl
inc
cli
and
push
mov
lret
lods
clc
inc
iret
xchg
out
rolb
mov
jns
jg
ret
inc
jecxz
mov
scas
shrb
in
cmp
push
test
cltd
fisttpl
in
pop
lock
sub
roll
xchg
leave
jb
dec
arpl
pop
fimull
xorl
push
sub
test
lret
shll
xchg
mov
out
push
test
test
jo
dec
jns
popl
stc
es
adc
pusha
fdiv
arpl
dec
dec
xor
arpl
adc
add
lea
sub
data16
fs
mov
sub
push
aad
aas
sub
adc
xchg
inc
dec
adc
cmp
insb
inc
pop
push
lea
cmp
xor
testb
out
xchg
mov
adc
mov
mov
mov
fcoml
push
jb
add
inc
rcll
and
call
mov
popf
enter
mov
insl
ljmp
adcl
sbb
mov
cmpsl
jecxz
push
insb
push
and
mul
repnz
add
sahf
or
lret
std
je
in
jne
jo
dec
or
iret
shrb
mov
test
cmp
loopne
xlat
dec
outsl
cmp
add
push
test
xor
pavgb
in
mov
pop
sub
xchg
repnz
mov
addr16
cmpsb
jns
mov
mov
xchg
cli
shl
mov
jge
scas
mov
shl
push
test
imul
mov
add
add
icebp
iret
adc
push
sub
mov
imul
pop
jnp
pop
hlt
loopne
or
test
int3
jecxz
pop
xor
jg
sbb
aas
das
js
ja
add
es
add
lcall
and
push
inc
out
sub
sbb
loope
xchg
stos
leave
mov
and
xor
lahf
mov
gs
ljmp
push
inc
dec
xor
loope
adc
sti
mov
mov
inc
iret
mov
adcl
fmuls
push
jns
repnz
je
stos
mov
xor
mov
sahf
outsb
pop
mov
fwait
clc
nop
movsb
cmpsl
mov
mov
inc
mov
or
dec
xchg
push
sub
pushf
mov
mov
sub
dec
stc
aaa
xchg
jbe
cld
es
idivl
mov
ss
call
pop
push
sub
cmp
cmp
pop
mov
xlat
pop
into
push
or
and
mov
popf
xchg
je
adc
pop
jp
lcall
cli
adc
addr16
ja
inc
or
ficoml
or
jl
shll
xor
mov
add
cld
inc
pusha
fisttpll
in
jmp
ud0
and
xchg
imul
add
sahf
push
ss
push
mov
in
sbb
loopne
sub
aad
aaa
and
pop
xchg
scas
sbb
gs
test
mov
mov
push
push
test
repnz
jmp
fwait
les
cmpsb
xchg
popa
addr16
mov
jb
pop
int
sub
mov
mov
mov
or
js
mov
xchg
or
mov
push
lret
add
inc
imul
cmp
les
mov
stc
dec
sbb
mov
ret
imul
jnp
pop
pop
mov
pop
jo
and
mov
movsl
mov
mov
add
outsb
leave
popf
es
fcomps
rcrb
lahf
fldl
mov
xchg
pop
fisubs
test
ret
mov
out
bound
or
in
xchg
test
jl
mov
mov
add
in
int
xchg
inc
mov
loope
xchg
ds
rorb
into
jg
push
mov
jp
stos
data16
stos
cwtl
push
push
mov
dec
jae
ret
sbb
fnstsw
int3
sub
popf
jo
xchg
sub
les
sub
test
pop
pop
ror
sti
pop
insb
leave
lret
jg
dec
into
das
scas
pop
jb
jnp
jle
add
mov
fbld
loope
stos
push
push
mov
or
std
cmp
imul
sbb
addr16
ja
inc
or
ljmp
lods
sub
jne
cmp
lcall
push
sbb
adc
push
sub
lods
or
pop
jecxz
inc
inc
cmpsb
outsb
out
addr16
test
or
sbb
int3
pop
movsb
pop
lret
jnp
popf
add
xor
fistpll
ss
ja
ss
xor
cmp
daa
sbb
xchg
aaa
fstps
mov
push
ja
icebp
jns
inc
lret
nop
pop
mov
loope
and
mov
add
sub
pop
jb
mov
adc
xor
fs
ss
mov
xlat
icebp
aam
test
lods
test
leave
jbe
pop
xchg
out
sbb
out
and
push
cmpsb
jbe
inc
push
cmp
test
xchg
and
cli
cs
pop
jb
iret
int
xor
adc
pop
int
xchg
imul
push
or
adcb
pop
or
aad
dec
cmp
xchg
adc
fbld
daa
bound
inc
mov
aaa
clc
in
push
push
dec
push
aad
fstps
aaa
adc
cmp
aaa
jb
movsb
add
pop
sub
into
inc
dec
or
pop
lods
xchg
mov
aam
lods
mov
and
ss
or
imul
inc
xchg
cwtl
push
dec
iret
dec
mov
dec
test
xchg
add
in
jp
fstpt
fcmovu
pop
cld
sub
andl
cli
inc
test
inc
fs
sahf
movsl
sbb
out
xor
sbb
mov
adc
idivl
xchg
js
scas
and
std
adc
insb
xchg
in
fstps
jbe
or
iret
pop
mov
in
popf
movsb
push
pop
stos
mov
adc
fcomip
and
sti
repnz
orl
add
jno
mov
cs
es
cmpsl
jo
insb
shl
sub
adc
xchg
ret
call
cmpsl
movsl
push
and
negl
xor
and
aas
aaa
push
add
cmpsl
pop
mov
jb
mov
ds
insl
xor
lods
test
pop
pop
icebp
mov
dec
sbb
jle
sbb
daa
or
idiv
or
gs
sti
fdivl
add
out
hlt
push
out
insl
js
cs
and
outsb
push
xlat
pushf
push
outsl
cmpsb
adc
daa
insb
jmp
pop
out
clc
out
mov
adc
push
aam
cmc
mov
repnz
push
push
nop
mov
pushf
dec
lea
jb
pop
mov
inc
adc
dec
in
xchg
mov
push
dec
jo
mov
into
mov
stos
dec
in
pusha
in
vmread
jo
add
scas
lds
loope
aaa
or
out
addr16
xchg
pop
jb
and
jns
es
mov
cld
xchg
enter
push
sub
cmpsb
repz
pop
pop
insl
fsubrl
and
and
icebp
movsl
mov
aam
test
lock
pop
jecxz
xchg
rcrb
xchg
and
and
je,pt
fwait
mov
or
repnz
fwait
or
insb
dec
jbe
and
adc
or
fxsave
aam
sbb
dec
enter
iret
mov
arpl
cmc
mov
es
adcl
lds
imul
repnz
and
jo
mov
mov
xor
xorb
cltd
xchg
notl
xchg
push
fcomps
xchg
xchg
adc
inc
push
lcall
jb
das
jl
movsb
or
imul
hlt
push
cmp
out
mov
sbb
jae
insl
ja
mov
out
nop
movsl
lahf
loop
jl
pop
xor
fs
xchg
push
lret
lods
popf
mov
or
mov
insl
push
hlt
mov
sbbl
sbb
xchg
pop
and
cwtl
gs
jae
mov
xchg
cmp
lock
sub
ds
lds
jne
in
leave
xchg
inc
aad
aad
cmp
or
in
imul
jl
pop
cli
imul
orb
adc
fcomi
int3
jmp
push
shl
lea
lahf
jo
adc
push
mov
ljmp
das
lods
xor
mov
in
in
and
cld
popf
sub
ret
addr16
loope
bound
das
fldenv
mov
inc
shlb
push
es
nop
and
mov
jo
rorl
mov
mov
stos
cmpsb
jmp
push
in
cwtl
and
out
jmp
push
lds
rcl
add
sub
xor
cs
cwtl
ret
xchg
fcmovb
loopne
popa
lods
movsb
push
xor
aaa
lea
adc
adc
dec
in
aas
jno
adc
xor
int3
adc
add
ret
dec
sti
pop
pop
and
sub
icebp
mov
js
sbb
ja
push
loopne
jl
data16
jp
dec
add
jb
or
adc
dec
dec
add
movsb
pop
in
out
push
adc
xchg
in
push
xor
rclb
push
xchg
or
and
push
cld
fisubrl
mov
mov
fcom
xchg
mov
fistpl
in
mov
nop
jbe
sub
cmp
add
out
mov
insl
sub
add
push
inc
je
int
xorb
dec
adc
and
dec
repnz
arpl
add
jnp
adcb
std
mov
out
add
js
shlb
add
fdivrp
push
fstpt
inc
sti
idivb
pop
xlat
push
pop
outsl
mov
xor
jne
pop
leave
test
enter
ja
xor
outsl
repz
jbe
aaa
cmp
or
in
push
stos
popl
adc
cmp
not
pushl
jg
xor
or
imul
xor
std
stos
aaa
xor
push
std
mov
in
pushf
sbb
lret
das
repnz
mov
data16
mov
dec
lods
ja
xor
xlat
push
cld
testb
repnz
inc
add
xchg
cltd
mov
fldl
ret
mov
addl
fstps
pminsw
push
pusha
ret
push
cli
push
lcall
clc
loop
jmp
mov
and
xor
mov
adc
loopne
xlat
inc
adc
sbb
xchg
mov
bound
fdiv
mov
mov
das
scas
sub
sub
pop
mov
pop
mov
sub
push
mov
jo
dec
push
sbb
sub
loopne
repnz
fs
into
fdivr
out
adc
out
les
jns
add
mov
mov
pop
std
loope
sub
pop
sbb
xlat
test
xchg
lock
and
mov
and
jns
in
and
push
push
mov
jno
je
cmp
dec
int
idivl
jne,pn
hlt
hlt
inc
shll
mov
loope
cmc
pop
push
add
dec
js
jge
test
lret
pushf
imul
movsl
ja
xchg
gs
inc
inc
push
out
and
sub
pop
jb
jns
xchg
insl
shll
mov
xor
xchg
dec
test
or
cli
and
sbb
shll
sub
bound
add
pop
ljmp
outsb
mov
daa
adc
jge
cmp
stos
mov
pop
pop
cmp
and
or
scas
jne
jb
dec
inc
jne
mov
inc
out
nop
pop
mov
cs
dec
aaa
mov
ljmp
call
outsb
std
aas
inc
test
inc
push
or
and
xor
push
icebp
cwtl
insl
loope
dec
push
dec
add
fdivp
les
jecxz
mov
mov
popa
xchg
popa
pushf
pop
or
xchg
cs
xchg
mov
hlt
jg
or
mov
mov
jnp
insl
mov
dec
xchg
pop
dec
shlb
and
jl
orl
das
xchg
lds
sub
daa
gs
xor
xor
lods
push
jnp
jecxz
imul
jp
pop
dec
and
xchg
paddw
out
inc
icebp
xchg
test
push
jecxz
mov
sahf
inc
adc
fstpl
jp
data16
add
push
cmc
ja
and
into
ret
cltd
clc
daa
fs
jmp
sub
mov
mov
push
jns
fdivr
mov
fsqrt
or
push
fisubrs
enter
cmpsb
xor
lret
cmp
outsb
pop
adc
aam
repz
and
xor
or
repz
xchg
mov
push
cs
sahf
gs
andl
fwait
or
mov
mov
pop
stc
or
inc
jge
sub
cli
in
arpl
and
cmp
jne
movsb
jmp
pop
adc
bound
nop
scas
sbbb
jl
xor
xchg
stc
fwait
enter
mov
inc
push
jmp
jp
ja
flds
lcall
in
orb
aad
mov
in
loope
iret
mov
push
adc
lock
mov
push
dec
push
sbb
push
stos
xchg
dec
test
xchg
in
pushf
lods
xor
push
cmpsl
inc
cld
xchg
repnz
lea
xor
leave
int3
jae
cltd
mov
dec
push
fisttpl
cli
jne
mov
jo
cmp
mov
cmp
push
js
sarl
mov
jle
leave
pusha
push
mov
lods
dec
ds
fdivrs
xor
in
lea
imul
mov
cmp
or
dec
xchg
pop
xchg
incb
mov
push
push
or
sbb
aam
adc
icebp
push
dec
mov
cmc
inc
mov
inc
rorl
insb
mov
sbb
push
dec
mov
pop
std
lods
inc
fsincos
add
and
cld
xchg
xor
push
cmpb
fsubl
mov
test
cmpsb
call
adc
call
test
cmp
sbb
das
xor
mov
push
sub
adc
jne
mov
push
mov
shrl
out
ss
push
repnz
mov
stos
or
das
shlb
clc
out
ja
xor
scas
arpl
mov
andb
add
xor
push
dec
out
out
fists
xchg
ret
or
int
push
inc
cmc
add
imul
subb
sub
roll
cli
mov
mov
lods
and
and
in
ja
mov
das
mulb
cld
lds
loop
jl
xor
aam
mov
sarb
in
inc
dec
imul
inc
mov
push
mov
xchg
pop
lcall
fdivs
lret
xor
arpl
jecxz
mov
daa
imul
and
repnz
je
mov
in
iret
pop
andl
mov
orl
icebp
je
mov
dec
ret
mov
add
loop
cltd
pop
mov
cld
es
jne
lahf
hlt
int
push
mov
lret
push
jnp
push
js
andl
pop
arpl
and
add
movsb
test
jo
divb
iret
mov
rclb
xchg
lods
dec
out
inc
call
dec
jmp
nop
sbb
nop
lods
inc
xor
dec
nop
jo
hlt
nop
sarl
fstps
ss
jmp
in
lret
jecxz
out
dec
lock
iret
mov
adc
loope
fisttpl
and
insl
pop
fimuls
push
xor
fstpt
pop
xchg
jg
std
repz
dec
cmp
pop
mov
fwait
das
cmp
mov
testb
test
les
test
jg
xchg
xor
jmp
lret
or
mov
or
and
adc
add
xchg
pop
xlat
aad
inc
mov
jbe
mov
xchg
mov
ljmp
jge
scas
mov
mov
jno
jl
xchg
sahf
add
test
mov
imul
add
mov
repnz
pop
sbb
shrb
and
push
test
or
pop
sbb
adc
sub
js
hlt
dec
dec
xchg
jmp
outsb
repz
fs
sbb
arpl
adc
sbb
out
shr
jecxz
xor
mov
xor
in
jg
lods
idivl
push
sbb
xchg
jmp
repz
inc
jnp
sbb
cmp
push
pop
sub
shll
xchg
loopne
pop
fs
fs
sub
lock
mov
lds
add
lret
mov
jp
jo
or
mov
pusha
lods
mov
xor
pop
js
aad
sbb
mov
push
add
enter
xchg
lret
sarb
iret
outsb
or
orb
and
mov
sub
nop
shlb
loope
mov
lock
jecxz
mov
pop
iret
xor
mov
push
fucom
std
or
sti
scas
mov
xchg
mov
ret
mov
ss
jmp
mov
or
jp
xor
fldl
pusha
das
lea
fwait
dec
pop
jmp
xchg
push
pop
cmp
jns
mov
adc
mov
insl
insb
mov
mov
xlat
movsb
mov
movsb
jg
mov
mov
ja
outsb
es
xchg
xor
mov
leave
jecxz
int
bound
sub
push
sti
or
adc
add
ja
lods
xchg
jmp
add
cs
insb
jmp
movsb
and
ja
ljmp
pop
push
cli
and
add
divl
sbb
lahf
adc
sub
xor
js
mov
fiaddl
dec
xlat
imul
cmpsl
or
cmp
les
and
fldt
pushf
dec
mov
push
sbb
scas
and
xchg
mov
outsb
adc
hlt
xchg
mov
push
clc
int3
cmpsl
xor
push
sbb
push
sub
sub
sub
cs
in
mov
jmp
cld
xchg
test
xor
push
add
mov
in
inc
inc
mov
shll
stc
rcrl
mov
xor
test
fnstsw
pop
sbb
add
loopne
fsub
add
mov
xchg
lret
or
xor
dec
mov
inc
inc
popf
sbbl
imul
in
addl
inc
inc
jmp
mov
push
fildll
mov
int
xchg
aam
mov
pop
outsb
ffreep
and
rcll
nop
sahf
les
sub
cwtl
lcall
sub
inc
decl
fs
int3
add
insb
js
shr
into
or
jle
adc
pusha
lds
movsl
adc
scas
xchg
cs
shlb
adc
mov
movsb
in
imul
add
mov
pop
push
lods
ret
pop
jns
jo
lret
xor
inc
fdivrp
xchg
and
sti
in
push
mov
xchg
add
push
pop
inc
bound
cwtl
in
in
in
cmpsb
out
je
mov
fwait
sub
pop
cld
cmp
in
jl
jb
xor
inc
mov
push
je
push
push
mov
imul
lcall
or
cs
mov
cmp
cli
mov
imul
mov
adc
aam
popf
adc
inc
cmp
mov
mov
cmpsb
ret
push
dec
out
test
cltd
mov
pop
iret
sub
arpl
addb
xor
mov
test
mov
cmpsl
ljmp
inc
or
in
and
mov
test
mov
orb
jae
xor
rol
mov
fldl
gs
pop
jns
mov
pop
jno
adc
sahf
popa
out
or
inc
inc
dec
test
pop
aas
pop
repz
shlb
jne
imul
pop
or
push
add
xchg
pop
mov
shlb
inc
xor
inc
das
fstpt
adc
mov
xor
inc
mov
sbb
shlb
inc
aas
scas
lret
jns
cmp
ret
int
add
push
cmpsl
mov
mov
int3
loope
std
out
push
pop
mov
mov
fdivl
ret
inc
adc
mov
add
arpl
fwait
cmp
popa
pop
cmp
mov
lahf
outsl
mov
mov
jno
sub
idivl
jns
cmpsb
fsubp
iret
pop
and
push
pop
aad
mov
xchg
lcall
out
xchg
mov
enter
pop
xor
cltd
mov
test
xchg
lds
jnp
sbbl
mov
push
in
inc
mov
shr
mov
mov
aaa
movsl
nop
mov
dec
ss
in
imul
ja
inc
stos
mov
mov
and
shlb
dec
cmp
hlt
mov
daa
push
jnp
sub
loop
dec
cmpb
lea
mov
mov
daa
sahf
imul
movsb
loop
inc
inc
push
in
or
pop
pop
cmp
push
push
xorb
cmp
leave
out
loopne
mov
adc
cmp
xor
sub
inc
lods
inc
in
out
and
repz
ljmp
hlt
add
mov
jecxz
mov
pop
stos
xchg
testl
push
dec
xor
dec
ret
sub
test
sar
mov
xchg
xor
ljmp
xor
push
xor
push
sub
pop
arpl
sarl
fwait
push
dec
lcall
push
pop
cmp
lcall
xor
clc
pop
jb
pop
mov
pop
out
lock
fs
imul
sbb
push
js
cmp
clc
ss
sbb
add
and
repnz
cwtl
enter
outsb
xchg
cmp
ljmp
xor
mov
mov
add
lods
mov
cmp
pop
lahf
xor
pop
mul
push
das
sahf
xor
sbb
pop
aaa
fmul
add
ret
pop
sahf
fadds
pop
cwtl
out
lock
cmp
dec
sbb
dec
cmp
mov
sbb
dec
filds
inc
sbbb
out
cmpsb
xorb
test
pop
push
dec
shll
xchg
rorb
add
in
movsl
in
loope
test
lret
mov
pop
or
mov
and
pop
jp
adc
iret
sahf
add
mov
popf
icebp
lea
movsb
cmp
iret
and
aaa
push
loopne
mov
sbb
mov
pop
mov
mov
lock
sbb
and
push
add
mov
stos
mov
rcrb
lds
push
pop
xor
sar
mov
pusha
jecxz
mov
cld
iret
dec
bound
pop
push
movsb
imul
mov
imul
cmc
out
jg
data16
iret
lret
rorl
pop
xor
cmpb
inc
les
xchg
sbb
dec
orl
push
fidivrl
xor
jle
aad
push
pop
add
adc
add
pop
cmp
adc
add
xchg
aad
std
jle
cltd
mov
ds
mov
inc
movsl
aad
call
or
jg
jo
fidivl
cmp
jp
and
mov
shl
dec
in
adc
or
loope
sbb
cs
xchg
push
mov
out
test
pusha
insl
mov
bound
sbb
lret
add
aas
mov
mov
xlat
push
mov
sbb
aad
xchg
ret
jmp
pushf
in
adc
cmpl
lret
jo
push
cwtl
mov
xor
jno
cld
mov
in
dec
fdivr
jo
shr
inc
jae
xor
mov
jbe
mov
xchg
mov
push
jmp
sub
divl
jbe
push
inc
add
or
push
push
flds
stos
and
fimuls
or
fwait
xchg
add
pop
cwtl
lods
mov
lods
push
push
jbe
popf
ss
xchg
jbe
mov
push
xchg
add
mov
push
push
xchg
cmp
pop
repz
lahf
jo
inc
xchg
add
rcl
jp
pop
xchg
loopne
mov
jmp
xchg
cmp
add
cmc
sub
adc
sbb
cmp
push
gs
adc
push
jg
mov
pop
add
jno
mov
mov
or
mov
shr
test
lret
push
movsb
push
and
push
sbb
xor
add
or
mov
or
mov
inc
push
nop
das
xchg
xchg
mul
arpl
arpl
xor
in
sub
push
xchg
int
stos
insb
add
in
lods
in
insl
std
push
pusha
fwait
push
les
add
js
pop
shll
inc
stos
aas
cmc
inc
addb
lahf
sti
imul
xchg
add
rorl
jnp
jns
push
mov
jle
in
sub
cmp
mov
incb
pop
movsl
stos
mov
cmp
lock
popf
sub
inc
movsl
rorl
aam
icebp
add
stos
jae
movups
popa
dec
cmp
out
pop
cli
insl
push
mov
aam
xor
sub
and
lret
inc
les
ret
rorb
and
loop
out
push
mov
jne
inc
or
andl
test
inc
sub
add
mov
xchg
lcall
test
mov
mov
leave
add
repz
xchg
xchg
mov
sub
push
dec
gs
add
fucomp
jo
pop
orl
xchg
lds
es
mov
mov
out
cs
lds
jns
lods
fisubl
cwtl
enter
xchg
push
mov
push
bound
or
aas
ljmp
pusha
inc
mov
in
std
cltd
dec
xchg
outsl
lods
leave
dec
jl
test
fcomip
out
adc
mov
inc
outsb
xor
jne
add
mov
and
inc
xchg
test
jb
iret
push
push
jne
xchg
inc
ret
sub
and
or
nop
dec
repz
scas
pop
leave
sub
fisttpl
std
xchg
scas
adc
cltd
sub
lcall
test
inc
loop
cmpb
push
cli
xchg
xchg
sbb
jo
int
push
call
data16
cltd
xchg
jne
fists
inc
mov
stc
mov
pop
mov
fistl
pop
lods
xor
mov
loopne
movsl
mov
icebp
rolb
aam
outsb
adc
add
orb
cmpsb
sbbb
or
push
and
mov
in
push
out
ljmp
or
pop
orb
cmp
dec
push
jmp
or
notb
lods
jno
cld
imul
lea
cwtl
push
pusha
xor
jmp
insb
xchg
lods
jns
das
inc
stc
mov
out
out
iret
cmpsl
pushf
iret
fs
mov
testb
mov
jecxz
aam
inc
gs
push
cmpsb
mov
cmp
and
lods
clc
lods
jmp
mov
xchg
push
shl
jns
test
push
repnz
adc
push
push
push
subb
mov
push
mov
stc
mov
movb
mov
inc
dec
test
jge
cmpsb
cmpl
sti
pusha
push
lret
dec
and
mov
inc
inc
loope
cmpsl
rclb
adc
aaa
in
aad
cwtl
aam
cmp
jp
mov
jae
leave
pop
movsb
adc
ljmp
mov
iret
ljmp
repnz
loopne
iret
jns
push
into
insb
mov
jb
or
jmp
fisubs
xor
rcr
push
or
shl
sti
ret
pop
mov
sub
sbb
dec
cmp
je
dec
push
and
or
cwtl
stc
mov
fildl
pushl
and
addr16
sbb
dec
push
aaa
jo
mov
push
insb
push
xchg
push
lods
in
push
inc
adc
inc
push
jne
ljmp
pop
test
nop
iret
inc
inc
btc
push
sub
push
notb
sub
sub
mov
xchg
lods
fcompl
hlt
test
mov
pop
lahf
and
jge
aas
jo
cltd
lret
push
pusha
mov
sbb
mov
das
js
hlt
dec
xchg
push
mov
cmc
lret
push
add
mov
fildl
pop
daa
xor
fdivrl
imul
nop
dec
cli
or
xor
mov
mov
cmc
mov
cmp
jae
jle
jns
mov
and
add
push
imul
dec
daa
cmpsl
into
aad
mov
add
test
sbb
cmp
ja
test
pop
or
sub
mov
inc
dec
loopne
aas
dec
in
mov
inc
cwtl
cmp
pusha
shrb
mov
daa
sarl
mov
mov
lret
mov
sbb
cmp
lds
and
lds
out
in
les
xor
orl
xor
outsl
clc
xchg
imul
jg
mov
sbb
xchg
lret
shlb
test
and
imul
pop
rcrl
push
mov
adc
pusha
mov
dec
push
fsubr
push
add
shlb
es
and
pop
popl
into
lock
push
in
dec
xchg
test
das
adc
enter
ljmp
and
inc
into
sti
mov
or
outsb
add
fdivl
push
xchg
imul
inc
in
mov
lret
pop
shlb
mov
pop
fs
sbb
fldenv
sbb
ss
push
sub
xchg
stos
push
sub
or
gs
loop
insb
pop
ljmp
aam
xor
inc
insb
jmp
push
out
sahf
scas
jmp
imul
sub
adc
cld
fwait
mov
mov
pop
mul
pushf
nop
sahf
jo
push
push
popf
xor
push
incl
test
mov
pop
cmp
nop
mov
repnz
nop
cmp
sbb
rcl
jmp
push
adc
fsubl
lahf
add
add
push
insw
jae
scas
jb
imul
jno
and
outsl
xchg
fdivs
jge
and
sbb
xor
cltd
fildll
dec
dec
cwtl
sahf
shrb
fisubl
mov
jae
sub
jno
sub
lcall
lcall
xchg
dec
push
addr16
popa
jbe
cltd
ret
sub
jne
mov
lods
lcall
es
clc
enter
ss
call
and
sub
dec
dec
add
sbb
fisubrs
addr16
push
or
pop
lock
push
sbb
dec
cld
cmpsb
jecxz
xor
jns
lods
pop
push
into
push
inc
fnstsw
fildll
iret
lods
dec
mov
sti
xor
je
xchg
outsl
lea
pop
clc
fcomip
jbe
cmp
push
adc
jae
xor
ret
je
xor
jns
test
jno
mov
push
mov
jb
aam
scas
jae
mov
stc
das
clc
mov
jmp
cs
sub
xchg
enter
sbb
sbb
int3
sbb
jne
dec
hlt
pop
mov
push
xchg
inc
and
adc
scas
insb
inc
insb
mov
mov
lods
fs
jle
lods
jns
ror
inc
or
adcb
ss
bound
shlb
mov
das
mov
mov
lcall
outsb
pop
inc
cli
sub
mov
mov
or
xchg
inc
and
jmp
cmpsl
sbb
fs
xchg
scas
xchg
leave
test
cmpsl
lods
mov
bswap
push
lret
sbb
aaa
dec
sub
or
dec
stos
mov
test
test
ljmp
sbb
movsb
sbb
mov
fiadds
jno
arpl
aas
push
je
and
add
xor
mov
and
jne
push
inc
in
xchg
mov
mov
mov
mov
xchg
ret
jns
movsb
dec
pushf
sbb
pop
xchg
leave
xchg
lea
stc
cs
andb
out
ds
push
lahf
sahf
add
test
dec
cwtl
test
imul
and
pop
test
movsb
jmp
mov
pop
push
andl
sub
in
xor
push
jp
sbb
xchg
cmpsb
pop
add
sbb
loop
movsb
clc
xchg
sti
lods
pop
addr16
movsl
or
in
daa
jle
mov
nop
scas
mov
ja
mov
gs
in
ja
adc
stc
std
push
icebp
int3
sub
xlat
push
jmp
add
aas
adcl
and
inc
xor
imull
inc
in
and
add
pop
imul
int3
sub
sbb
xchg
lods
lcall
sub
push
jle
xor
test
xchg
in
xor
cmp
sub
sahf
mov
xor
data16
enter
out
enter
repz
jge
icebp
xchg
in
cmp
int
test
push
add
push
or
fcoms
or
xor
ss
push
mov
lret
mov
sarl
dec
add
cmc
icebp
das
jb
add
jle
fwait
scas
cltd
enter
jecxz
rcll
mov
loopne
sbbl
mov
dec
dec
sbb
imul
imul
dec
inc
adcl
cmpsl
inc
mov
push
xor
negl
jbe
pusha
inc
sti
xchg
test
ds
call
pop
aad
mov
push
mov
jbe
fwait
pop
into
adc
jle
pushl
out
mulb
ror
cmp
xchg
push
pop
lds
div
pop
stos
fbld
push
out
test
lret
push
add
lock
xor
pop
sbb
icebp
xor
les
or
orl
sbb
inc
dec
sub
mov
mov
mov
add
adcl
repz
xor
enter
adc
adc
mov
mov
clc
shll
inc
pusha
hlt
dec
imul
jle
or
addr16
testl
les
dec
add
mov
push
ss
cmpsb
jae
dec
push
mov
nop
int3
das
ficoml
push
incb
jbe
jnp
shrb
sahf
repz
test
sub
mov
loope
popa
sahf
int3
push
inc
sub
and
xor
jg
inc
and
push
mov
data16
ficoms
xchg
push
scas
ret
dec
cmp
push
adc
test
inc
cmp
mov
pop
in
rcr
dec
cmp
out
imul
dec
dec
test
cmp
jnp
pop
inc
jo
mov
pop
cmp
sub
cmp
sti
arpl
inc
fwait
lret
in
test
frstor
adc
adc
push
orl
popaw
dec
repnz
mov
ror
int3
lea
lret
out
jge
mov
dec
out
inc
daa
jo
add
sar
and
or
mov
das
push
mov
shll
pop
mov
lds
mov
push
lock
pushf
pushf
addr16
sub
iret
das
jecxz
rol
lea
in
jns
repz
push
push
mov
shl
dec
push
pop
adc
cmp
push
mov
repnz
adc
jae
mov
out
mov
push
and
xor
mov
data16
out
adc
pop
jnp
mov
into
int
push
add
mov
outsb
xchg
call
jbe
repz
pop
sub
rorb
xor
ss
mov
in
xchg
bound
and
ja
lcall
jge
adc
aas
mov
mov
mov
jecxz
ds
clc
xchg
bnd
cmpsl
inc
cmp
mov
mov
push
dec
push
pop
jno
mov
inc
cmpsb
jg
xchg
rcrb
dec
icebp
pusha
mov
xchg
jp
sub
and
ss
mov
lods
jmp
mov
clc
lds
fidivs
push
adc
test
push
mov
push
cmp
push
pop
dec
mov
mov
enter
pop
aad
jb
stos
loop
sahf
lret
rorb
xchg
ja
pop
iret
in
pop
xchg
push
sbb
or
out
xchg
pop
cmpsl
mov
adc
shll
cmp
sbb
cmp
push
imul
stc
adc
xor
movsb
iret
arpl
aam
shlb
jmp
push
out
les
imul
mov
xchg
popa
repz
popf
mov
xchg
mov
rorb
push
adc
mov
imul
scas
mov
ret
mov
jae
mov
xchg
dec
mov
cmp
cld
sbb
and
in
inc
pop
jle
nop
stc
and
arpl
mov
mov
je
dec
pop
and
in
popf
outsl
or
push
lea
inc
add
dec
stos
rorb
dec
scas
jns,pt
stos
jnp
xchg
sbb
fadds
addb
adc
scas
mov
dec
dec
pop
xor
inc
mov
movsb
add
cld
sub
adc
in
and
repnz
mov
lods
imulb
xor
aam
pop
push
mov
out
xor
mov
js
jo
cld
mov
jno
adc
fdivl
clc
adc
stos
mov
scas
pop
out
loop
cwtl
in
or
jno
sub
jp
ret
adc
pop
rorl
cmp
fnstcw
inc
add
out
in
cli
push
adc
lock
std
nop
xchg
push
mov
dec
cmp
ss
cli
and
imul
ficompl
mov
iret
jns
cld
in
cli
rcr
out
cmpb
sub
dec
nop
cmp
or
aas
mov
loopne
xchg
push
test
add
lods
pop
jne
lret
pop
inc
sbb
pop
std
mov
pop
ret
mov
nop
xchg
ss
sbb
push
dec
mov
test
cmp
adc
push
jne
or
gs
xchg
mov
lds
push
adc
adcl
test
jo
scas
xchg
sbb
dec
push
leave
mov
xor
gs
sbbl
inc
into
arpl
or
clc
and
jo
mov
xor
bnd
loope
inc
adc
add
scas
adc
mov
roll
xchg
test
xchg
enter
dec
cmp
and
xor
repz
or
pop
pop
push
cmp
es
or
mov
filds
mov
mov
mov
clc
sub
out
sub
clc
scas
sub
xor
jo
pop
rorb
mov
push
fsubrl
push
das
stos
loope
in
xchg
or
ja
mov
notb
std
and
ljmp
or
jl
sarl
cwtl
sbb
rclb
divl
xlat
jo
mov
sahf
std
sub
pop
fwait
xchg
xor
sub
adc
clc
lds
add
popf
cmp
mov
or
inc
cmpsl
lock
out
inc
pusha
xor
sti
in
cmp
dec
int3
test
and
iret
test
xchg
pop
sbb
test
insl
stos
xorl
jg
fs
mov
test
pop
jno
insl
divl
je
push
aam
sbb
cmp
in
push
pop
push
jo
fistps
in
insl
inc
mov
cs
inc
xchg
outsl
jns
scas
xchg
mov
or
fildll
sub
repnz
cld
aad
fiadds
fmuls
xor
cmp
add
and
inc
add
sbb
sarb
cwtl
rcr
push
push
adc
dec
notb
mov
jnp
arpl
jb
mov
add
xor
andb
pushf
lods
cwtl
fimuls
mov
aad
dec
inc
inc
pop
xor
add
or
les
stos
mov
imul
adc
jb
mov
xchg
mov
roll
data16
arpl
jno
dec
mov
mov
test
dec
dec
clc
addr16
getsec
cmpsl
dec
pushf
cltd
xchg
mov
push
inc
sbb
cwtl
mov
in
cs
sti
scas
jnp
xor
das
jo
adcl
popf
scas
sub
push
fstpt
jl
pop
fildll
sbb
xor
pusha
mov
xor
hlt
xchg
cmp
add
in
imul
adc
jae
data16
inc
pop
adc
outsb
imul
sbb
flds
cmpsb
mov
addl
hlt
add
ja
pushf
cld
adc
jl
pop
and
std
mov
cmp
lods
push
inc
cmp
movsl
sub
mov
and
iret
cmpsl
or
sbb
jecxz
imul
iret
aas
scas
outsb
push
mov
sar
mov
jmp
nop
inc
je
xor
jp
cwtl
shlb
outsl
int3
and
dec
out
xchg
mov
pop
xchg
movsl
mov
xchg
mov
aad
imull
cmp
popf
aas
jae
test
out
in
jmp
dec
movsl
sub
and
mov
lret
sub
pop
in
int3
arpl
mov
pop
test
jle
cmp
sub
stc
subl
sbb
jbe
push
cmpl
ror
test
repz
mov
add
and
mov
cltd
imul
lock
mov
mov
orb
out
mov
jbe
jg
es
cmc
and
loop
mov
or
cwtl
cmp
cs
addr16
jl
pop
xchg
dec
dec
dec
sti
insb
and
mov
js
decl
mov
shrb
fstps
iret
add
xchg
and
aas
movsl
dec
sub
jl
rolb
fistps
jns
and
popf
std
and
xchg
ss
das
push
pushf
sarl
fcmovu
mov
test
and
rolb
push
pop
aam
addr16
shlb
inc
into
add
sub
and
and
xchg
aad
or
jl
cs
aas
faddl
out
jge
loopne
lods
xchg
loop
adc
dec
addr16
rcl
cld
ja
push
les
lea
mov
pop
and
cmp
xchg
rclb
xchg
push
dec
pushf
add
iret
jae
sbb
inc
adc
ds
inc
jbe
ljmp
mov
jb
xchg
into
mov
ret
mov
push
aad
jg
and
lret
insl
out
test
lock
sub
and
and
iret
dec
nop
and
mov
lret
or
outsb
std
fwait
cli
push
icebp
mov
sub
out
leave
fistps
push
push
mov
dec
pop
add
iret
cmp
push
arpl
daa
or
cltd
xorl
sub
imul
sbb
sar
fwait
xchg
lahf
adc
lds
jp
in
dec
outsb
xchg
in
subl
sbb
or
stc
insb
jns
cwtl
jle
loope
push
add
in
xchg
jl
mov
ret
outsb
stos
xchg
insl
adc
dec
ss
pop
daa
jno
mov
and
fdivrl
stos
stos
xchg
jp
or
sti
fdivr
jo
push
add
sbb
mov
xchg
xor
push
mov
das
add
pop
in
fistps
xor
ds
inc
call
adcb
sbb
pop
add
stos
sbbb
sub
jo
mov
std
ret
pop
jo
mov
cmpsb
loop
inc
pop
mov
in
aad
jnp
mov
test
js
mov
xor
outsb
fcompl
frstor
xlat
push
testb
inc
wrmsr
pusha
mov
rcll
cmp
fs
lods
fldenv
in
aam
xor
inc
push
lock
sbbl
cmp
cmp
xlat
or
cwtl
add
and
aam
push
fwait
jne
out
js
in
and
mov
add
push
adc
inc
pop
jbe
data16
pop
test
hlt
leave
or
pop
dec
int3
or
or
negb
iret
outsl
sub
add
xchg
fwait
jbe
loop
and
adc
loop
rclb
fiadds
ss
jbe
aas
inc
cmp
popf
pop
popa
dec
into
call
mov
icebp
in
sbb
pop
ljmp
out
fsubp
push
out
je
sbb
adc
xor
push
sbb
and
and
fwait
xor
push
cmp
adc
xor
sbb
cmpsb
or
mov
xchg
xchg
pop
pushf
xchg
adc
mov
call
xchg
jmp
mov
fisubs
push
pop
imul
sub
inc
stos
mov
stc
stos
xor
fcmove
pop
cmpsl
pop
inc
push
sub
mov
sahf
xchg
xchg
cmpsb
aad
arpl
xchg
lret
or
xor
imul
push
in
xor
arpl
repz
adc
jae
pop
lgdtl
scas
jb
xchg
pop
mov
dec
in
jecxz
inc
mov
jb
push
cltd
jg
mov
scas
mov
or
cmp
mov
sbb
popf
mov
testb
pop
imul
scas
add
mov
fcomps
sub
stc
sbb
ds
xchg
jae
adc
push
ljmp
jle
adc
popf
jmp
sub
xchg
mul
fs
std
mov
push
dec
xor
std
rcll
scas
adc
in
push
or
push
xchg
jp
inc
std
jns
lahf
adc
and
repnz
lret
flds
cmp
jg
fdivr
test
imul
mov
call
inc
sub
xchg
les
dec
and
int
xor
insb
jg
inc
xchg
cwtl
imul
clc
jo
outsb
push
cmpsb
push
sub
push
ds
push
pop
test
sbb
das
cwtl
mov
loope
mov
push
fmull
jnp
inc
mov
fcoml
stos
mov
mov
mov
js
scas
jo
loope
sub
cmc
push
orl
and
add
adc
call
jno
sbbb
pop
sbb
lcall
push
mull
xor
or
sbb
je
insb
fstpt
out
lods
mov
dec
jne
add
push
jno
jae
insb
xor
and
jl
add
dec
js
inc
pushf
xorb
cmp
xchg
shl
and
mov
in
xchg
rclb
push
push
adc
inc
sti
inc
lds
mov
imul
xchg
sbb
jnp
cwtl
aam
sub
ljmp
cmp
mov
inc
dec
fimuls
stos
out
jne
bound
outsl
out
add
sub
cmp
sbb
jbe
mov
push
add
test
jmp
subl
std
dec
jge
arpl
arpl
cmpsb
mov
scas
jns
call
sti
pop
jbe
dec
or
setbe
mov
loop
cmp
aas
jbe
outsb
test
mov
insb
ficompl
jae
testl
inc
leave
mov
inc
push
push
scas
jecxz
inc
pop
insl
push
sub
test
in
and
mov
out
out
lock
clc
and
mov
test
mov
mov
movsb
sahf
fldcw
cwtl
inc
dec
sub
adc
fists
dec
outsl
pop
lods
lds
roll
sti
cmc
xor
jb
rorl
xor
and
and
add
cmpsl
jle
push
mov
or
sahf
cmp
push
cwtl
xchg
mov
mov
sbb
sub
dec
cmp
xchg
insb
cmp
mov
push
adc
lret
mov
sub
aaa
mov
outsl
ss
jg,pn
rorl
xor
inc
mov
mov
add
lcall
mov
mov
mov
dec
and
sbb
push
fs
pop
push
scas
jg
sbb
mov
sub
fsubr
dec
add
aam
or
mov
jo
adc
sbb
cmp
jmp
mov
mov
ret
mov
lret
ja
add
jno
push
jns
in
dec
xchg
mov
pop
gs
jno
pop
std
aam
add
pop
or
scas
push
aaa
and
adc
adc
in
sahf
repnz
notb
stc
pop
dec
dec
mov
sbb
xchg
mov
outsl
fistpll
mov
adc
sub
data16
lea
xor
mov
mov
fdivs
mov
jmp
pop
adc
sarb
xchg
pusha
aam
fs
pop
in
xchg
cmp
aad
jne
sbb
out
inc
rcr
mov
xchg
arpl
ds
scas
pop
cmpsb
lds
arpl
rcll
jo
aas
jge
sbb
lods
and
pop
cmp
jbe
mov
mov
cltd
dec
lds
add
mov
add
divb
mov
loop
sbb
les
test
sub
iret
ss
xor
daa
sti
rcrl
push
push
icebp
dec
mov
mov
popa
pop
lock
lcall
sbb
es
push
loope
dec
into
mov
and
jmp
mov
data16
xor
sub
lea
pop
pushf
sbb
fstpt
ss
adc
sbb
pop
test
pop
loopne
pop
or
jno
add
sbb
idivl
push
shl
add
dec
cmpsb
and
mov
popf
xchg
loopne
jmp
int3
sahf
cmpsb
and
inc
dec
repz
mov
inc
test
sbb
mov
xor
mov
push
mov
xchg
mov
push
stos
jge
dec
adc
pop
push
sub
jae
popa
and
dec
outsb
add
mov
lods
or
and
shr
ja
mov
sub
hlt
add
cld
and
and
or
jo
push
imul
mov
push
cltd
fldt
jp
xchg
ret
scas
nop
inc
outsb
xchg
rorl
test
cmp
add
rcll
lds
xor
cmp
sub
stos
in
cltd
andl
mov
mov
push
aaa
pop
xor
into
in
lds
inc
mov
icebp
jecxz
xchg
rcrl
jnp
and
loopne
adc
push
pop
jb
jns
jmp
arpl
lods
sub
mov
pop
scas
inc
icebp
mov
inc
stos
fdiv
and
lahf
mov
in
sbb
sub
push
std
xor
call
out
call
stos
maxps
mov
mov
nop
adc
add
addl
icebp
mov
cmp
fcmovne
mov
pop
loop
hlt
decl
aad
pop
fwait
daa
xchg
movsl
out
jp
loop
or
popf
push
sub
mov
pop
gs
sub
loop
add
mov
jge
cld
fiaddl
fstp
pop
cmp
cmc
iret
cs
gs
ljmp
xor
xchg
sub
test
aad
out
xchg
das
out
or
ficoml
jb
mov
or
rorl
loop,pt
popf
mov
jmp
movsl
dec
adc
fiaddl
push
gs
add
mov
jno
jp
in
mov
adc
cmp
sub
jno
jecxz
dec
add
jns
outsl
cmp
ljmp
cvtps2pd
adc
fs
sahf
decb
push
push
adc
mov
lcall
cmpsl
cmovo
pop
dec
out
popf
push
bound
pop
sub
loope
ljmp
xchg
sarb
inc
add
push
sbb
dec
aad
sub
pop
push
ret
dec
inc
addr16
in
out
std
xchg
repnz
sarb
fbstp
xchg
test
xor
ds
xor
jae
pop
adc
fcmovb
jmp
stos
leave
pop
inc
sub
pop
dec
jle
pop
pop
repnz
mov
sbb
rorl
and
jge
lret
inc
dec
lods
mov
int3
xor
adc
std
sbb
cmp
gs
jp
xchg
lea
add
or
jo
lahf
repnz
scas
dec
mov
inc
xor
ss
cmpsl
xor
inc
cmpsl
adc
sub
fdivr
add
in
roll
mov
stos
sbb
inc
mov
mov
inc
loop
frstpm(287
hlt
pushf
lods
lods
push
daa
jo
cld
arpl
repz
mov
sbbl
ja
and
pushf
xor
sbb
fbld
dec
mov
dec
fisttps
lods
ljmp
pusha
mov
jmp
cs
jne
pop
movsb
adc
es
and
inc
mov
aaa
stc
test
movsb
fldcw
or
loope
mov
lcall
jo
push
inc
pop
les
add
dec
jmp
fninit
jne
popa
xor
repz
mov
daa
je
mov
cmp
add
lock
jecxz,pn
sti
sbb
mov
cmp
cs
pop
push
ja
sub
cmp
xorl
jge
jne
cmpsl
push
fistpl
jecxz
stc
hlt
popf
jecxz
aaa
popf
mov
xchg
hlt
xlat
jmp
iret
popa
mov
add
movsb
add
dec
sub
in
loope
push
iret
mov
mov
add
in
outsl
aas
jae
data16
add
stc
mov
test
out
or
int
mull
xadd
mov
fstps
mov
jmp
mov
add
lret
push
clc
inc
call
push
sub
push
or
out
loope
add
mov
shl
loope
sbb
js
imul
adc
add
add
cmp
mov
sarb
xchg
ret
lds
dec
popa
lods
jnp
out
add
int
xchg
mov
int
inc
ja
jmp
pop
pextrw
sahf
cmc
sbb
outsl
xor
cltd
dec
or
xchg
mov
xchg
sub
jne
repz
shlb
mov
cld
fldl
addb
jmp
push
mov
js
aam
mov
call
int
dec
xchg
in
and
push
mov
mov
push
ror
add
xchg
movsb
lahf
jp
cmp
push
inc
or
decl
pop
int
jmp
and
mov
je
cmp
leave
inc
cmpsb
leave
mov
xor
dec
les
push
inc
jnp
ss
cli
pop
loopne
sbb
scas
mov
push
in
lahf
fbld
call
push
outsl
jecxz
xchg
jo
or
lea
xchg
int
sbb
push
lret
das
in
ds
mov
pop
leave
int3
add
inc
mov
lods
sub
faddl
inc
jmp
xor
lcall
xlat
loopne
pusha
dec
nop
sbb
stos
imul
mov
das
inc
cmp
cmp
fisttpll
mov
add
add
sub
push
mov
icebp
push
adc
iret
data16
push
nop
mov
cmpsl
stc
push
in
adc
inc
pop
sbb
enter
int
lea
adc
dec
jnp
in
out
dec
jns
popfw
mov
lods
push
add
hlt
test
and
inc
in
push
repnz
lret
aaa
cmp
enter
sbb
loope
lcall
pop
lahf
aad
dec
inc
mov
inc
jl
sbb
test
mov
or
pushf
sbb
in
push
sbb
jl
sbb
outsl
popf
jno
out
das
repnz
xchg
inc
incb
push
movsl
fucom
mov
test
cltd
adc
and
ljmp
add
jg
call
pop
aaa
repz
pop
into
pusha
dec
rcrb
fnstsw
lds
jmp
fs
out
cmpsl
call
cmpsb
mov
mov
mov
jmp
sar
pop
push
call
and
nop
inc
mov
mov
push
fs
cwtl
lods
push
pop
out
testl
jns
push
mov
cmp
mov
into
lret
xor
xchg
sub
shlb
in
pop
push
jns
icebp
sub
push
inc
sbb
xor
std
xchg
scas
mov
in
dec
push
mov
add
cs
inc
sbb
adc
pop
dec
test
sahf
fstl
push
mov
int3
ljmp
add
dec
lods
mov
aas
daa
stc
std
pop
jns
inc
inc
pusha
out
jbe
and
mov
cltd
dec
lcall
repnz
xchg
mov
push
adc
cmp
fisubs
jae
jg
xor
mov
rcll
ret
out
fldcw
cs
jmp
inc
sbb
dec
testb
repnz
xchg
jbe
pop
or
xchg
rcrb
sti
jecxz
pop
mov
jge
fdivp
xor
fldcw
cld
adc
mov
pop
pop
sbb
xchg
in
jae
dec
or
xlat
sbb
dec
mov
pop
call
and
jns
and
pop
test
aam
in
mov
fdivs
cmp
dec
inc
pop
in
inc
cmp
mov
xchg
jb
andb
cmp
mov
fnstenv
fwait
or
jg
or
fmul
je
loopne
inc
mov
daa
sti
add
out
outsb
int3
jnp
sub
pop
fs
outsl
jg
push
push
mov
cmp
inc
test
cmpsl
mov
push
in
add
ret
push
repz
outsl
and
add
xchg
mov
mov
push
int
mov
sbb
jl
scas
outsb
mov
sub
cmp
xchg
inc
dec
mov
jmp
push
mov
dec
push
sti
push
outsl
dec
push
imul
sarb
pop
adc
aam
gs
imul
rorl
ret
out
and
sarl
jmp
test
fs
out
push
cwtl
xchg
inc
imul
xchg
mov
pop
mov
cltd
mov
fsubrs
jmp
shlb
mov
mov
ret
adc
in
and
lea
inc
stc
xchg
mov
xchg
sbb
cmc
and
jbe
push
and
mov
es
repz
pop
xchg
sbb
jmp
imul
outsb
cmp
inc
mov
sbb
xor
inc
dec
add
andb
push
jae
insb
dec
push
pop
mov
cmp
lret
cmp
jmp
arpl
shlb
test
out
fdivr
xchg
pop
outsb
adc
or
cmp
mov
in
jmp
inc
mov
dec
add
jg
mov
mov
shl
movsb
jg
sbb
jnp
lock
add
sbb
xchg
clc
test
jne
outsb
cmpsb
sbb
sbb
inc
mov
inc
lds
mov
lret
pop
imul
cld
push
ret
fs
dec
idivl
pop
repnz
gs
mov
test
pop
lcall
loope
addr16
mov
jmp
pop
gs
sahf
mov
and
mov
mov
lods
inc
aaa
idivl
into
in
xlat
cmpsl
ret
mov
cmpsl
dec
or
in
mov
pop
fsubr
call
add
xchg
call
push
inc
pop
lcall
and
cmpsl
sbb
fmull
test
pop
sub
mov
cmp
xorb
mov
or
jbe
cltd
int
push
jmp
mov
scas
gs
jb
push
add
jl
ja
push
aas
jno
mov
rorb
ret
ret
xchg
mov
mov
iret
lret
push
dec
frstor
push
lods
nop
ret
leave
xor
je
test
imul
vpcmpeqb
pop
or
addr16
dec
stos
mov
xor
les
mov
lock
and
push
mov
pop
fucomip
lea
lds
inc
orb
add
dec
dec
sub
fadds
movsl
andl
pushf
cmpl
mov
pop
pop
mov
push
lcall
pop
jne
fcomps
inc
out
sarl
and
cmp
cltd
xchg
jb
in
sub
aaa
xchg
xchg
lret
scas
or
mov
push
stos
ret
inc
and
leave
subl
fcomi
scas
cmp
int3
and
fildl
pop
test
inc
fimull
push
rcll
out
in
sti
lret
xlat
ret
ds
fucomp
jns
xchg
out
jmp
loop
or
mov
or
shll
inc
inc
jb
hlt
jne
mov
sbb
or
je
and
imul
xchg
pop
pop
sub
mov
shrb
pop
mov
push
mov
mov
xchg
or
xchg
lret
xchg
dec
jb
mov
push
xor
jmp
cmp
mul
dec
jle
mov
mov
rorl
jne
cli
dec
adc
pop
jae
aam
pushf
imul
mov
clc
dec
fistps
and
lock
test
scas
lret
xor
mov
pop
out
test
xor
insb
ja
pop
test
out
mov
outsl
pop
test
jmp
daa
decb
mov
mov
in
push
fld
and
mov
xchg
cmp
pop
push
cvttps2pi
loop
pusha
rcrb
adc
add
jmp
rcll
push
pushl
and
lret
insl
xchg
mov
sbb
sbb
and
mov
bound
xlat
push
inc
inc
jge
loope
repnz
loop
pop
push
jecxz
mov
shlb
sbb
lods
mov
cmpsl
out
pop
add
leave
xor
dec
xchg
out
ror
sbb
jp
sbb
or
ucomiss
or
cmpsb
jno
test
mov
icebp
xor
sub
into
add
inc
call
inc
push
orl
out
inc
pop
pop
xlat
test
xchg
ret
inc
aam
xchg
sub
jo
xchg
das
dec
test
mov
fwait
xchg
repz
jl
mov
xchg
movsb
test
pop
filds
cmpsb
push
das
adc
or
mov
sbb
xorl
lret
mov
and
inc
lret
imul
mov
push
enter
scas
push
leave
incl
lea
inc
sbb
or
or
es
dec
sbb
mov
into
xchg
in
jg
and
test
inc
inc
ret
dec
xchg
pop
cmp
add
and
xchg
loopne
pop
daa
push
mov
add
mov
ja
lock
mov
out
les
sarb
inc
dec
fsubl
push
aaa
mov
pop
mull
push
lea
gs
popa
les
ret
insb
test
test
sbb
adc
rorl
inc
jecxz
mov
mov
cmp
inc
shr
inc
imul
dec
add
push
jae
add
or
repz
mov
mov
mov
jae
out
dec
daa
mov
adc
daa
adc
or
jns
pusha
fsubrp
popf
pop
mov
loope
ljmp
push
cli
push
stos
mov
dec
scas
pop
test
xor
dec
mov
mov
or
rolb
movsl
add
stos
pop
lcall
jp
or
into
int
cmpsb
or
fcomps
outsl
daa
shl
inc
jp
ljmp
clc
mov
xor
xor
mov
leave
ror
scas
cmp
adc
and
mov
addr16
call
es
adc
sbb
pop
mov
dec
jp
nop
cli
orl
jl
gs
jo
bnd
push
cmp
sbb
adc
or
outsb
xor
sbb
int3
imul
bound
lcall
stc
pop
in
mov
push
arpl
scas
jmp
pop
and
out
dec
push
cmp
lcall
sub
ja
icebp
int
lret
cmp
fbstp
cld
cmp
cmp
mov
xlat
loop
cmpsb
jne
and
xor
inc
jmp
test
push
mov
shr
push
divb
xorl
nop
sbb
or
cltd
movb
rolb
idivl
ret
out
ja
add
cli
fcoms
adc
push
stos
mov
adc
mov
add
subl
loopne
sbb
sub
cmpsl
mov
pusha
fcomps
cltd
cmpsl
stos
rclb
enter
pop
push
hlt
nop
je
adc
jg
xchg
fnstcw
ja
cmp
sbbl
xchg
xchg
es
mov
daa
xor
dec
push
and
out
loope
push
xchg
int3
enter
in
adc
adcb
mov
adc
mov
add
jae
fnstsw
jg
push
out
aas
sub
and
cmpsb
sub
movb
jb
fsqrt
insb
out
bound
loope
int
scas
or
stos
sub
jmp
clc
dec
push
dec
adc
push
pusha
fsts
out
pushf
mov
push
mov
or
lock
pop
cmp
popf
push
sbb
mov
aas
or
xchg
test
cmp
pop
xor
add
movsl
ljmp
or
mov
rcrb
jecxz
cmp
js
jle
repz
roll
pop
mov
clc
pushf
lret
xor
call
mov
outsb
out
pushf
add
pushl
fdivrs
aam
ror
and
pushw
dec
push
out
lret
insb
pop
pop
or
xor
xchg
pop
sub
add
aam
sub
int
ljmp
shl
ret
iret
stc
cmp
cli
inc
adcb
mov
cltd
aam
movsl
adc
adc
sbb
mov
mov
jecxz
dec
les
dec
dec
mov
pop
mov
inc
out
mov
pop
lret
cmp
jmp
cltd
cld
dec
jae
jns
jl
xor
lahf
pop
aad
hlt
xlat
sbb
inc
mov
push
xchg
js
xchg
push
fwait
mov
pop
mov
jne
xor
jbe
xor
add
pop
adc
or
pop
adc
adc
jns
push
ja
inc
out
or
push
sbb
lock
and
jo
sub
adcl
push
sbb
jp
loop
sbb
xchg
mov
xor
xchg
into
or
sahf
mov
xchg
jne
mov
test
fwait
loope
sbb
addr16
cli
cld
ror
xchg
dec
adc
add
leave
lea
jecxz
gs
jge
loopne
adc
or
sub
rcl
xor
add
inc
sbbb
sbb
sbb
stos
xor
cld
sbb
jmp
inc
push
lods
sahf
popa
push
fildll
inc
pop
pop
add
leave
jmp
jl
mov
dec
add
ret
mov
or
out
lock
xchg
and
jmp
adcb
sbb
jg
pop
shr
addr16
fidivl
cmp
sarb
test
out
xor
fstl
jl
mov
pop
add
mov
popa
push
in
imul
mov
fstl
pusha
movsl
inc
enter
mov
dec
cltd
test
insb
sbb
xchg
mov
fwait
xor
cmpsb
aam
push
dec
jns
jne
inc
inc
add
dec
cmpb
lods
movsl
add
stc
jbe
aam
mov
jno
orb
lock
pushf
jae
jne
xor
loope
inc
mov
jecxz
out
pop
std
popf
into
ret
dec
push
sub
sbb
lods
mov
sub
aas
fisttpll
cmc
jp
nop
fistpll
adc
inc
jecxz
arpl
mov
inc
in
outsl
push
pop
loop
into
dec
mov
inc
dec
repz
les
add
sub
adc
rclb
repnz
dec
fldenv
hlt
pop
cmpb
jp
jns
in
sub
int
test
jmp
les
icebp
mov
and
imul
daa
or
inc
scas
mov
dec
or
jnp
adc
xchg
mov
xchg
cmp
insb
or
arpl
inc
shlb
cmp
into
xor
jl
outsb
rep
mov
mov
or
aad
mov
mov
sbb
cmp
pop
push
or
push
movsl
insl
int3
aad
or
nop
mov
mov
lahf
xchg
ja
mov
push
xor
mov
xchg
mov
loopne
xchg
push
cwtl
pop
ret
and
push
jae
call
out
jnp
ret
mov
rcll
outsb
jge
data16
jle
in
add
jg
sbb
divb
xor
notl
sahf
jb
ja
test
stos
mov
imul
push
stos
das
jb
out
lret
cs
sub
xor
imul
push
lea
inc
inc
dec
adc
inc
lahf
daa
sbb
push
push
clc
xor
add
cmp
cmpsl
clc
jmp
dec
sbb
pop
or
mov
cmp
lds
xchg
test
xchg
mov
add
push
fmull
and
lahf
pop
fidivl
push
jno
in
fistl
insb
stos
rorb
jae
fildll
xor
outsl
ret
dec
adc
cmp
cmp
pusha
push
push
fidivrl
cmovb
test
mov
dec
popf
lds
mov
lock
pop
inc
inc
mov
jbe
hlt
movsb
jg
into
pop
insl
clc
add
insl
out
stos
jge
scas
inc
rcl
jg
jnp
inc
inc
jo
cmp
add
mov
fcoml
xchg
mov
mov
jg
push
aad
pop
push
mov
cmp
hlt
fmulp
stos
xlat
scas
and
and
lret
jmp
adc
inc
mov
push
push
mov
and
jb
movsl
mov
mov
mov
hlt
push
cmpsb
add
adc
insb
xchg
test
mov
je
push
add
dec
loopne
insl
or
mov
mov
push
mov
push
xchg
xor
sbb
fdivrp
call
arpl
test
mov
les
xchg
inc
cld
hlt
sbb
jbe
dec
pop
fnstcw
jae
sub
sbb
or
test
xchg
adc
dec
fists
add
mov
xchg
sbb
pop
adc
test
jl
adc
sbb
out
push
stos
pop
xchg
ss
cs
gs
sub
mov
and
sbb
xchg
mov
mov
out
push
ljmp
hlt
pop
ljmp
dec
addr16
dec
mov
jns
mov
pop
je
dec
and
addr16
cmpb
mov
jp
and
sbb
lods
lret
hlt
sbb
shrl
insl
or
inc
inc
jp
xchg
or
fildl
cltd
mov
mov
loope
shl
iret
pop
idiv
les
push
adc
inc
adc
sub
add
shlb
shrb
cli
xor
cmp
cs
sbb
push
addr16
mov
fadds
test
sub
call
imul
fsub
or
push
cltd
push
loope
ret
popa
mov
jp
andb
sahf
xor
pop
push
sbb
movsl
or
ljmp
test
shr
icebp
jnp
call
adc
sbb
mov
xor
inc
out
insb
call
sahf
fidivl
pop
test
cmp
jge
xor
xlat
push
arpl
cwtl
leave
jne
stos
jbe
xchg
push
push
fisttpll
in
addr16
inc
pop
fildl
xorb
in
sub
lret
cmp
sub
push
and
aaa
xchg
dec
push
int3
mov
inc
jg
cld
movsl
adc
shrb
notl
dec
xor
lds
lods
fxch
call
lea
push
pushf
xchg
imulb
test
push
lods
test
and
stc
pop
push
outsb
inc
pop
xor
cmp
cmp
adc
xlat
push
jb
or
pop
xchg
lea
mov
fs
jo
clc
stos
out
or
xchg
sub
sub
insl
mulb
dec
xor
sbb
jns
loop
mov
aaa
sub
je
sbb
stos
data16
inc
push
adc
stc
ret
mov
dec
fsub
sbbb
dec
imul
pop
adc
and
aaa
mov
sbb
pop
mov
jmp
fnstenv
xor
pop
xor
es
mov
push
iret
fwait
or
dec
subb
xchg
hlt
or
jo
inc
into
mov
mov
addr16
xor
dec
js
pop
inc
dec
jb
arpl
pop
fwait
mov
roll
shrb
pop
mov
stc
rcll
in
add
jnp
in
rcll
lods
dec
gs
and
push
loope
mov
push
cltd
sub
jp
mov
jbe
sub
mov
call
fs
xchg
jl
addr16
rcll
mov
sub
pop
shll
push
mov
sub
test
xchg
dec
lods
mov
jge
call
in
fucomp
ja
insb
sub
rclb
inc
sub
movsl
mov
dec
adcb
gs
iret
add
ret
push
ss
cmp
nop
cli
cmp
jmp
inc
push
scas
mov
mov
add
xor
imul
cmpsl
add
in
call
sbb
fadds
xor
push
repz
insb
push
jge
add
divb
imulb
push
or
pop
pop
scas
sahf
loop
xor
pop
cld
push
lcall
outsb
shl
dec
add
jae
sbb
loop
or
lahf
cmp
push
push
ret
inc
les
dec
leave
mov
ja
in
pop
cwtl
stc
lea
or
jnp
sbbl
xchg
adc
adc
push
and
push
mov
addb
dec
push
insl
movsl
push
bound
call
outsb
pop
pushf
sbb
sub
or
loope
dec
mov
stos
shll
pop
movsl
mov
xlat
jp
jg
adcl
mov
insb
movsl
loopne
xor
pop
xchg
orb
and
cltd
mov
movsl
mov
mov
dec
dec
jge
imul
notl
lock
adc
and
push
lock
lods
xchg
mov
inc
iret
mov
pop
jecxz
sbbl
push
pop
test
add
cwtl
pop
and
pop
out
xchg
push
or
add
ljmp
mov
insl
push
jns
xchg
ret
ret
sub
mov
popa
push
push
jno
sbb
vpsubusb
stos
lahf
and
jns
adc
and
enter
out
mov
add
into
push
clc
jle
fstpt
mov
xor
imul
xchg
loopne
mov
xor
repnz
inc
mov
or
jae
in
insb
popf
arpl
xor
inc
xor
mov
pop
jge
adc
mov
scas
fbld
inc
inc
and
sbb
add
int
mov
mull
lock
adc
xchg
in
dec
iret
push
adc
out
or
sub
frstor
repz
pushf
icebp
pushw
push
clc
dec
dec
and
jmp
xchg
sub
pusha
jmp
push
mov
mov
shlb
pop
mov
inc
jne
rorb
mov
xchg
leave
in
add
mov
xchg
jb
cmp
push
cmp
mov
xor
mov
push
sub
movsl
xchg
bound
je
pusha
xor
jg
orl
push
in
and
insb
push
and
addr16
pop
aas
leave
pop
test
mov
lods
test
test
test
ja
mov
sti
outsl
mov
ffreep
cld
shll
or
ret
push
dec
dec
cmp
stos
shll
sbb
jmp
orb
and
xor
inc
xchg
or
add
or
jmp
mov
in
mov
clc
pop
pushf
add
mov
mov
das
incb
fldl
mov
adc
pop
xor
xchg
push
sbb
jecxz
sbb
int3
sbb
xchg
inc
inc
inc
fmull
xchg
jmp
idiv
cmp
dec
enter
xchg
sub
lret
cltd
ficoms
sub
ret
fsubs
inc
pop
lods
cmp
push
mov
xchg
je
popf
mov
insb
push
out
pop
cwtl
push
and
pop
sbb
dec
add
cld
loope
mov
sub
ret
dec
lods
push
inc
jo
pop
insb
xchg
sti
std
pop
mov
sti
push
jnp
pop
sub
stos
jns
shrl
add
mov
add
loope
repz
in
jbe
fcoms
call
loope
adc
xlat
xor
push
shlb
push
movsb
movsl
xchg
inc
dec
outsb
sti
fbld
add
xor
sub
ffree
pop
call
cltd
mov
sub
dec
add
push
mulb
scas
rorl
test
insl
ljmp
mov
movsl
ja
pop
rcrb
jp
pushf
push
repnz
xor
sahf
xchg
dec
shll
pop
cmp
mov
mov
xor
jb
push
imul
rcrl
nop
pop
mov
stos
sbb
pop
icebp
lds
push
mov
jle
scas
add
jl
and
jl
push
pop
out
jecxz
mov
fbstp
movsl
adc
inc
mov
and
lret
mov
cmp
iret
popf
clc
cmp
cmpl
jb
outsb
cmp
in
cmpsb
arpl
leave
stos
and
cmp
push
pop
inc
lods
ja
ret
lods
push
aaa
push
loopne
jo
xor
or
outsb
ljmp
mov
imul
jne
scas
repnz
push
fimull
pop
push
inc
lahf
mov
push
mov
push
outsl
push
jg
call
ds
movsb
inc
sub
pop
jg
dec
dec
mov
mov
out
or
jle
aaa
out
int
testl
test
mov
jno
fs
sbb
sbb
nop
insl
ja
and
add
or
subb
dec
xor
stos
jns
out
notb
push
or
jmp
cli
mov
call
mov
sub
and
mov
jno
dec
or
lcall
pop
sub
cmp
bound
insl
sbb
out
lods
cwtl
mov
sbb
sub
ljmp
mov
in
adcb
iret
sbb
xor
in
inc
mov
cld
jmp
mov
pop
xchg
xchg
mov
cmpsb
inc
sub
dec
mov
mov
add
nop
ljmp
and
jb
jns
fisubrl
ret
cmp
inc
xlat
les
push
in
das
sub
mov
adc
cmc
mov
and
aam
pop
lds
aam
ficomps
inc
rorl
and
and
ss
fnstenv
mov
or
pop
sbb
into
sub
push
into
movsb
pop
push
sarb
loopne
sub
mov
mov
fs
push
inc
xchg
enter
shlb
aam
sbb
das
cmp
roll
lea
sti
pop
lods
out
inc
aaa
das
xchg
movsb
lret
and
enter
lods
sbb
iret
inc
data16
icebp
lock
dec
pop
repz
out
aas
add
sbb
mov
mov
mov
sub
inc
lds
sahf
aas
out
pop
and
or
sti
inc
pushf
adc
jb
rcll
dec
pop
mov
addr16
int3
adc
scas
outsl
movsb
movsl
and
sbb
cltd
insl
sbbb
iret
test
jne
jecxz
pop
outsl
pop
fs
mov
xor
sub
adc
pop
aam
fwait
sbb
pop
jle
pop
aaa
add
test
popf
loop
and
pop
push
mov
sbb
add
mov
inc
and
mov
test
aas
cli
roll
lea
aam
sub
inc
mov
lret
shrl
lods
add
mov
fcomps
inc
std
shrb
jb
loopne
aas
jl
aad
loope
adc
jae
sar
mov
nop
popf
xchg
add
jl
add
outsb
dec
xor
orb
ss
scas
fcomps
pop
lcall
sbb
out
insl
inc
xchg
int
pop
sub
adc
scas
push
add
stc
push
prefetchwt1
or
flds
ss
sbb
aas
mov
cmp
insb
jp
aam
insl
inc
jbe
fisubrl
fimull
lods
push
mov
daa
in
sti
fistpl
dec
outsl
outsl
jnp
cmp
push
lock
xor
int
xchg
out
test
ficomps
lahf
and
lock
mov
lock
scas
in
ficoms
jge
cmp
mov
xchg
mov
out
data16
sahf
pop
fs
roll
or
mov
xor
or
mov
fsubl
daa
jle
enter
sbb
scas
aam
aad
fdivs
sub
outsb
int
jecxz
sbb
mov
inc
adc
xchg
in
subl
add
sarl
pusha
aas
lock
add
lcall
stos
aad
inc
sbb
adc
jo
add
sarb
push
xor
negb
jle
jno
push
inc
mov
fcmove
popf
fistl
cltd
popa
clc
add
xchg
mov
andl
popa
fldenv
sub
out
fsubl
mov
cld
pop
inc
xchg
cmp
inc
dec
sub
mov
pop
jl
push
data16
addr16
lock
aam
scas
ficomps
inc
jle
fisttpl
push
imul
aas
cmc
xchg
mov
adc
sbb
jmp
sbb
cmp
add
inc
mov
test
add
sarb
out
sub
repz
insl
cmc
in
ljmp
lret
cmp
mov
adc
mov
loop
pop
out
test
dec
jae
mov
repnz
stos
inc
dec
test
add
xor
ret
push
aaa
testb
push
mov
mov
push
out
xchg
das
mov
rorl
imul
cs
negb
int
rolb
js
mov
loope
imul
test
add
icebp
mov
lcall
incb
imul
mov
or
iret
lea
popa
ficompl
or
push
xchg
leave
and
mov
aaa
dec
pop
cmc
and
nop
or
shll
xlat
cs
repnz
fidivrs
ror
sbb
inc
std
mov
inc
inc
push
orb
inc
sub
leave
fcomp
sub
cmpb
mov
mov
pop
dec
jno
push
nop
xor
dec
daa
sbb
push
out
arpl
add
jl
arpl
dec
aas
xchg
aas
dec
fnstcw
hlt
mov
sub
in
insb
sbb
out
in
sbb
fnstsw
out
dec
mov
jg
nop
jns
mov
push
pop
mulb
push
in
out
xchg
les
jae
add
and
leave
btc
mov
repz
aas
popf
xchg
cld
std
xor
lret
pop
pop
cmc
jg
inc
sub
pop
frstor
mov
ret
inc
sbbb
in
xchg
adc
dec
in
insb
ds
repz
frstor
or
out
fldt
movsl
mov
insl
jp
lods
sbb
lcall
sub
push
pop
mov
xor
loope
pop
mov
add
scas
pop
ds
loop
pop
xor
jmp
sub
adc
xlat
push
dec
cmp
and
cld
xchg
xchg
sbb
nop
mov
popa
js
psubusb
insl
or
insl
jp
jecxz
mov
inc
jg
ss
out
mov
mov
and
adc
or
or
icebp
loop
xchg
scas
ljmp
dec
popl
dec
jb
add
jle
adc
je
adc
sbb
outsb
das
enter
lret
cmp
xchg
and
in
sarb
push
out
sbb
in
stos
cmpsb
push
gs
xchg
xchg
fs
pop
jl
sbb
xchg
push
iret
and
add
subb
sub
cmp
clc
clc
roll
xor
sub
pop
popa
cmp
dec
cli
movsb
inc
and
fbstp
dec
loope
xor
lods
cld
outsl
jb
mov
ja
fsubrl
test
dec
pushf
push
pop
inc
test
inc
out
hlt
adc
outsl
dec
cwtl
fistl
mov
aam
arpl
push
pop
daa
in
test
pop
or
call
shrl
enter
int
add
push
sub
adc
push
lret
mov
shrl
mov
test
push
push
sbb
cltd
adc
or
pusha
or
movl
in
out
cmpsb
cmpsl
mov
cltd
test
mov
jno
jnp
test
push
cmpsl
xor
push
out
xlat
sub
inc
xchg
push
xor
or
mov
push
js
inc
xchg
jb
outsb
push
lea
dec
in
or
push
dec
or
jns
lods
outsb
cmp
cmpsb
nop
fsts
cltd
push
icebp
dec
sbb
inc
popa
mov
dec
dec
mov
fsub
push
test
scas
or
mov
and
les
jge
sti
std
or
mov
aad
lea
les
popa
test
or
repz
rclb
add
jmp
dec
mov
in
pop
dec
pop
lret
push
cmc
out
scas
call
stos
clc
cmp
jge
push
xchg
lods
in
leave
lods
xchg
out
testb
dec
xor
inc
shll
enter
stos
mov
dec
adc
mov
cmp
pusha
daa
xor
not
fcomps
into
jp
jmp
arpl
mov
and
sbb
sub
gs
lea
pusha
call
icebp
sub
push
lcall
dec
adc
iret
ljmp
inc
cli
jo
jmp
aad
xchg
or
mov
cmp
das
loope
mov
out
sub
inc
cltd
pop
mov
sub
lret
and
fistpll
or
mov
ds
mov
stos
test
inc
jns
push
add
jb
mov
adc
mov
push
cmp
pop
es
mov
lret
cmpsb
fbld
pop
notl
leave
dec
push
pop
hlt
mov
jge
aam
insl
sbb
in
ljmp
aaa
cmp
or
out
pop
and
gs
fs
mov
shrl
in
je
lock
inc
arpl
push
mov
enter
clc
nop
test
mov
out
fisubrl
jns
out
pop
inc
stos
mov
push
scas
lea
out
sbb
pushf
adc
mov
xor
jl
shl
mov
sub
js
repz
mov
xchg
mov
pop
push
xor
out
loopne
sub
add
mov
xor
cmp
int
imul
bound
cmp
mov
mov
sbb
pushf
or
mov
mov
sbb
adc
mov
or
aam
popf
cltd
aad
scas
push
in
or
mov
aas
js
dec
addb
out
cmp
inc
rcr
call
aas
subl
insl
js
xchg
cmpsl
push
mov
sar
ja
hlt
mov
push
rcrl
add
test
imul
mov
lock
loopne
mov
mov
inc
les
mov
xchg
stos
cmp
shr
or
outsb
outsl
loop
test
jne
pop
lds
push
lcall
jg
mov
jecxz
fisttpl
pushf
arpl
add
lret
cs
imul
scas
ds
test
and
jp
scas
pop
clc
gs
sub
sub
jo
mov
pop
popf
pop
xchg
mov
clc
mov
inc
cmp
out
idivl
mov
push
push
into
add
push
out
inc
sub
out
enter
popf
ds
loop
std
negb
mov
jmp
ss
fistps
insl
and
fwait
pop
mov
lds
pop
imul
mov
je
inc
push
sub
pop
scas
data16
pop
mov
sub
pop
sahf
icebp
stc
inc
ja
lahf
xor
xlat
dec
stos
push
icebp
inc
push
dec
xchg
ret
sti
adc
pushf
rcrb
loop
pop
in
cmpsb
std
out
jb
and
adcl
sub
shrl
mov
mov
push
arpl
cli
sub
subb
pop
dec
xor
roll
jl
mov
jns
stos
mov
es
sbb
divl
mov
gs
mov
push
jmp
or
and
pop
or
jp
ja
ret
jmp
dec
icebp
sub
pop
pop
xchg
push
repz
mov
fwait
decl
cmp
mov
gs
add
dec
fcomps
or
mov
mov
sub
insb
and
jns
sbb
dec
inc
or
add
mov
sbb
js
sbb
aas
add
mov
shrw
insl
and
je
pop
mov
mov
sub
sub
or
cmpl
pop
lret
pop
aad
xlat
imul
dec
mov
cmpsl
sbb
and
or
data16
fildll
xchg
sbb
fldenv
push
xor
cmc
inc
push
or
lret
int3
push
xor
or
xchg
add
jmp
xchg
xlat
inc
vrsqrt28sd
cmp
jecxz
cmp
sub
inc
inc
mov
sbb
sbb
jecxz
dec
clc
loop
sbb
ja
or
ret
jne
data16
and
dec
je
cs
push
fldl
jmp
pop
fsubs
sbb
lea
xchg
insb
xchg
mov
adc
je
inc
cli
fldenv
rorb
or
out
adc
pop
jg
dec
scas
xor
filds
sahf
xchg
int
test
dec
jl
add
add
bound
add
push
subl
subb
pop
and
push
lcall
mov
repnz
and
lcall
inc
jecxz
adc
jl
jg
jge
loopne
mov
pop
mov
xor
or
mov
sub
fbld
fdivrs
inc
outsb
out
add
js
and
inc
jns
xchg
jg
cmp
repz
push
into
mov
mov
mov
cmp
mov
dec
fs
cmp
call
and
sbb
xchg
dec
sbb
in
out
push
lahf
add
in
enter
mov
fidivrs
mov
dec
daa
stc
adc
and
xchg
out
xchg
out
mov
cltd
es
cmp
push
stos
ljmp
pop
mov
in
mov
xchg
ret
jp
aam
gs
jmp
fldt
mov
mov
icebp
loop
inc
outsb
aaa
in
arpl
jnp
cmp
cmp
pop
mov
sub
data16
mov
inc
add
popa
dec
dec
jbe
loop
enter
fstps
or
push
sub
push
fs
mov
push
jbe
addl
imul
sub
cmp
mov
mov
test
add
inc
xchg
xor
into
xchg
lock
jle
mov
sub
mov
mov
push
sbbl
fdivrl
jbe
loop
inc
push
int
sbb
test
cwtl
push
mov
jne
xchg
push
outsb
push
lret
in
push
mov
enter
leave
jp
bound
cmc
mov
cmpsb
dec
push
dec
jmp
push
cmp
aam
push
mov
in
sbb
push
pop
imul
imul
push
mov
jno
shll
movsl
shl
popf
jo
aas
shlb
pop
add
or
mov
fistpll
clc
dec
test
push
mov
rcl
insl
inc
xor
bound
xor
scas
sbb
nop
notb
add
movsl
fwait
int3
movsl
sbb
mov
cmpb
inc
in
cltd
ror
std
fsubl
push
cmp
insb
xor
mov
popl
dec
and
jae
jge
fidivs
clc
in
or
dec
shlb
mov
into
and
lods
mov
lahf
jb
push
sub
aad
fstl
jno
outsl
cmp
cld
xor
in
mov
ds
mov
test
sub
sub
aad
inc
xor
push
pop
scas
xchg
inc
ljmp
jnp
xchg
jne
leave
pop
pop
ja
js
mov
dec
push
dec
lods
out
jmp
popa
stos
stc
adc
cmpsl
push
adc
xlat
jbe
test
mov
imul
push
popf
aad
subb
aas
push
add
adc
test
push
fwait
dec
lods
insl
inc
dec
jo
jmp
xchg
and
pushf
or
jb
fcmovbe
dec
scas
mov
sub
pop
pop
addb
pop
adc
mov
sti
frstpm(287
mov
dec
in
jae
mov
and
stos
lods
outsl
enter
dec
push
push
pop
ljmp
or
inc
mov
xor
push
mov
ret
and
fwait
and
stos
push
loop
shrb
es
mov
movsl
mov
ret
outsl
cwtl
cmpsl
push
scas
sahf
jl
mov
in
xor
cmp
fwait
mov
fiaddl
in
es
mov
mov
pusha
popf
popf
pop
scas
mov
mov
stos
es
fucom
inc
outsl
das
xchg
xor
gs
jno
stos
push
sbb
or
addr16
inc
jns
pop
xchg
aaa
cmp
xor
insl
lods
mov
cltd
fwait
insl
test
shll
sbbb
fwait
lods
jle
cltd
cwtl
stos
sbbb
jg
inc
adc
xchg
add
cmpsb
arpl
lds
adc
pop
hlt
jno
into
mov
cmp
lahf
test
ss
fstpl
lea
shrb
repnz
and
cmpl
incl
cmp
pop
jp
mov
and
imul
clc
testl
stc
xchg
push
test
xchg
call
in
filds
sbb
ret
cmpsl
pop
cmp
gs
cmp
je
repz
sbb
add
lea
add
lock
inc
js,pn
call
aam
rcl
call
test
xor
stos
adc
mov
add
inc
stc
je
lret
nopl
push
cmp
out
xor
inc
pcmpgtw
mov
stos
or
js
or
push
jns
jecxz
sbb
lds
xor
cwtl
and
dec
test
movsb
sbb
out
outsb
mov
in
xlat
iret
xchg
and
mov
sub
fwait
cwtl
mov
cmp
jno
movsl
icebp
and
push
out
or
or
lahf
cmp
nop
mov
add
lret
shll
dec
mov
ret
and
jmp
adcb
push
adc
jp
scas
push
sbb
sub
cmp
scas
shrb
repnz
jo
cmpsl
dec
fsubrs
pop
or
sub
movsb
and
les
jnp
shlb
notb
push
shr
daa
pop
sub
fisubrs
mov
popa
mov
jle
sub
scas
add
into
lcall
lock
and
bound
out
cmpsb
jg
adc
mov
repnz
dec
test
imul
mov
lock
push
inc
sti
mov
testl
in
and
hlt
lods
rcll
cs
ret
xor
xchg
mov
pop
sub
sub
mov
mov
cltd
iret
sub
mov
add
pop
sbb
push
in
aas
icebp
dec
insb
lods
test
pop
mov
push
mov
jp
out
stos
stos
outsb
ljmp
mov
ror
add
sub
lret
mov
aaa
add
sbb
fcmovnbe
invd
in
adc
inc
arpl
test
lds
mov
adcb
dec
jge
xchg
lods
cli
fnstsw
call
sub
jo
xlat
xchg
das
inc
addr16
xor
dec
mov
pop
jp
mov
inc
jb
clc
and
inc
sub
addr16
push
sub
xor
sbb
push
add
jae
mov
cmp
cli
ss
test
std
sbb
cmp
stos
mov
or
ds
xchg
shrb
int
inc
add
cltd
repz
jbe
adc
ja
fnstsw
pop
insb
lea
jl
or
sbb
nop
xor
and
lods
and
sub
push
les
jg
pusha
ret
scas
arpl
sub
mov
ja
lods
scas
je
imul
pop
icebp
cmp
pushf
sar
out
add
jecxz
xor
mov
ret
test
cwtl
or
imul
push
mov
mov
imul
sub
mov
push
lcall
jecxz
dec
insb
outsl
daa
in
add
dec
jno
pop
arpl
sub
sub
and
sarb
push
lock
inc
out
jle
xchg
mov
mov
pusha
cltd
pop
inc
aaa
mul
mov
add
test
repz
pop
cwtl
pop
mov
sbb
or
jl
in
jno
rol
adc
insb
ss
mov
inc
testl
daa
push
mov
and
sub
mov
scas
hlt
or
sub
sbbb
pop
lret
push
or
dec
shr
jae
fdivl
adc
cmp
adc
shlb
stc
rcrl
rclb
xchg
bound
add
cmp
jno
sbb
or
lret
sarl
ret
inc
mov
inc
add
mov
iret
mov
lcall
adc
mov
fsubl
fsubrl
test
test
outsl
adc
sub
jecxz
cmp
shr
xlat
jmp
rcrb
adc
cmc
fldcw
sub
out
push
aam
movsl
out
scas
ja
mov
movsl
and
stos
push
and
lret
push
pop
add
fsub
sub
mov
ror
pop
pop
imul
mov
jne
pop
pop
or
and
pop
adc
addr16
aaa
xchg
int
sbb
mov
mov
ss
fcomps
cwtl
movsb
mov
push
dec
outsb
jl
mov
das
test
mov
pop
jbe
cld
test
cld
pop
xchg
lcall
jle
call
mov
nop
pop
pop
inc
push
adc
xchg
nop
cmp
xchg
aam
rcr
das
jmp
pop
ja
mov
call
xor
fiadds
dec
cli
xlat
pusha
and
xor
sarl
int
mov
in
aaa
stos
and
loope
mov
sub
aad
mov
mov
fsubrl
dec
out
mov
or
cld
sbb
adc
jb
add
xor
inc
jbe
aad
or
ja
fdivrl
xor
mov
jmp
in
sub
sbb
and
in
push
xchg
fnstsw
andl
xchg
mov
push
std
and
cmp
lods
pop
orl
jb
and
inc
je
push
lret
push
xor
clc
popa
lds
je
hlt
sti
lret
pop
mov
shrl
cld
push
cmpsb
add
fcmovnbe
adc
popf
and
sbb
and
and
gs
xchg
mov
add
push
ljmp
push
cs
and
jmp
adc
xchg
mov
mov
sarb
inc
fdivrp
sub
loope
push
test
loop
fimuls
pop
inc
mov
xlat
mov
je
lods
mov
decb
lcall
push
xor
sub
ss
mov
loope
addl
scas
in
arpl
mov
imul
push
aaa
cmp
pop
loop
loop
testb
cmp
sub
jae
mov
shl
repnz
leave
and
mov
scas
movsb
sbbb
in
sbb
lret
in
and
in
insl
les
mov
stos
xchg
popa
shlb
xor
jp
call
cmpb
pushf
dec
push
loope
sub
enter
bound
aaa
das
adc
aam
add
add
xor
cmc
gs
mov
and
mov
jle
cs
sarl
adc
pop
sbb
and
sahf
xchg
push
loop
pushf
cwtl
call
fstpt
cmp
mov
xor
pop
outsb
jae
scas
push
mov
into
pop
xor
aad
rcll
mov
add
push
mov
scas
inc
sbb
mov
dec
mov
push
xor
sbb
cmp
pop
pop
fcomps
and
movl
jle
negl
in
xchg
lret
xchg
sti
mov
repz
es
dec
rclb
ret
hlt
arpl
stos
addb
jno
js
xor
ret
lods
xor
adc
cmpsl
cld
fcmovbe
xor
add
imul
push
pop
add
pop
jo
jo
pop
das
adc
lods
push
inc
ret
mov
stos
pop
inc
arpl
lret
add
jl
or
cmp
xchg
jecxz
sbb
lret
inc
lcall
jle
xchg
sbbl
cli
pop
cmp
in
xchg
dec
into
shlb
mov
iret
jns
xor
adc
mov
adc
aas
sbb
in
add
insb
and
dec
and
sbb
and
popa
mov
push
ds
test
jmp
dec
insb
adc
mov
movsl
loopne
xchg
xor
lods
sar
xor
mov
pop
push
inc
xchg
mov
out
adc
cmp
movsl
xchg
ja
add
mov
xchg
adc
jb
xor
addl
insl
xchg
xor
arpl
xor
xchg
mov
loop
imul
loope
movsl
adc
jo
or
push
dec
adc
add
cmp
aaa
rep
mov
insl
imul
add
jnp
in
mov
outsl
add
mov
loope
jne
xchg
incl
mov
leave
and
neg
mov
sbb
sbb
xchg
das
jmp
jl
push
jae
bound
mov
and
in
sub
and
rolb
xchg
cli
xor
imulb
lret
jmp
cmp
mov
loopne
xchg
cmp
and
aas
loopne
and
sbb
sbb
lahf
xlat
xchg
es
push
in
nop
or
and
xchg
enter
sbb
dec
adc
fisubl
cmp
mov
sub
sub
mov
int3
pop
cmp
test
push
dec
ja
cmp
lcall
pop
test
dec
cld
pop
dec
cmp
sub
lock
xor
or
and
in
mov
dec
fiadds
mov
xchg
mov
shl
mov
jbe
inc
push
xchg
fidivs
mov
lret
mov
cltd
or
lcall
sub
sahf
lahf
or
adc
out
aad
and
loopne
out
jbe
dec
cld
cltd
out
xchg
push
pop
shlb
push
scas
mov
std
mov
jae
jmp
push
cmpsb
lret
movsb
loope
add
shl
adc
dec
out
cmp
sbb
bound
jle
sub
repz
inc
ds
push
pop
gs
out
outsl
aad
fcoml
rclb
hlt
fwait
jne
insb
xor
jns
je
pushf
not
sbb
adc
int
stc
shlb
insl
mov
mov
pop
icebp
ret
mov
inc
andl
adc
into
xchg
nop
dec
fsub
or
es
out
popa
dec
push
cmovno
jne
xchg
adc
push
pop
lcall
cltd
subl
jle
mov
mov
test
mov
adc
adc
mov
push
mov
push
sub
lahf
loopne
in
aaa
jnp
pushf
lret
scas
xor
shll
repz
sbb
outsb
mov
arpl
pop
testl
push
jle
mov
out
nop
rcl
adc
and
xor
push
cmpb
push
notl
mov
xor
push
movsl
push
add
mov
jno
mov
push
xor
pop
xor
iret
pop
and
out
mov
sub
jmp
xor
out
mov
cmc
jo
jecxz
xor
mov
sbb
imul
mov
and
mov
js
cld
push
icebp
imul
or
fcmovbe
xchg
cmp
fs
lret
pop
add
push
xor
inc
mov
or
dec
in
addr16
mov
xlat
push
mov
sub
dec
out
push
stos
xchg
loopne
fadds
jmp
andl
or
in
int
pop
adc
aas
push
fldt
dec
mov
lds
or
jmp
push
add
dec
jp
cmp
mov
out
xchg
aam
push
fcmovnb
je
jl
add
cmp
push
mov
aad
inc
adc
dec
xchg
repnz
addr16
mov
inc
dec
fstp
ret
popa
xor
and
fdivl
xchg
mov
jmp
ljmp
mov
push
sub
fisttpll
pop
mov
notb
fs
mov
ss
xchg
lea
mov
add
bound
imul
push
out
xlat
xchg
mov
sbb
cld
and
sti
lret
inc
les
mov
fwait
outsb
xchg
cmp
push
and
subb
notb
fimuls
loopne
jle
fstps
fdivs
pop
xor
daa
mov
sarl
push
push
sub
or
dec
imul
cs
stos
adc
js
loopne
iret
cmpsl
and
stos
cld
mov
inc
cmp
int
pop
sti
push
mov
lahf
push
inc
clc
sub
mov
nop
cld
aaa
pushf
cwtl
fstps
dec
jl
and
add
mov
pushf
jnp
or
sub
in
in
stos
push
pop
fistpl
and
call
orl
push
imul
popf
jae
xor
inc
adc
test
aaa
xor
dec
jg
xchg
std
daa
subb
lahf
shr
mov
pop
xchg
jg
push
mov
mov
cld
shll
dec
sbb
pop
add
icebp
xchg
xchg
or
jl
repz
out
lock
repnz
xor
sub
pop
shrl
add
aas
dec
mov
or
push
stos
adc
mov
adc
popf
mov
cmpsl
push
lahf
dec
xchg
je
cmpb
loop
mov
cmp
dec
sbb
add
xor
insb
cld
push
mov
or
lea
mov
push
xchg
sub
mov
into
add
jns,pt
repz
ret
insb
mov
lods
pop
std
mov
cmp
push
hlt
test
leave
mov
shr
and
or
movsb
sbb
fisttpl
xchg
dec
jl
mov
cltd
int3
cmp
xchg
bndldx
add
adc
sbb
orb
mov
int
mov
push
inc
and
iret
ss
out
andb
sub
stc
or
mov
dec
lret
pop
jae
mov
mov
or
mov
mov
cmpsb
add
sub
loop
jp
lret
je
pop
nop
xlat
out
jecxz
adc
in
pop
daa
cmp
xor
sti
cmp
xchg
pop
hlt
sub
dec
clc
movsb
out
out
xlat
rcrb
fiaddl
lods
mov
lahf
fwait
pop
andl
rclb
insl
jb
sub
xor
std
in
outsb
icebp
jp
mov
dec
idivb
push
jb
pop
inc
in
xlat
jne
xor
cli
lahf
int3
cmpsl
jmp
repz
xchg
xor
dec
jmp
lahf
pop
push
mov
pop
cld
fstpt
xchg
dec
sub
int3
pop
rcll
loope
dec
rorb
jo
sti
sbb
xchg
or
mov
mov
jge
sbb
jl
xchg
xor
and
mov
test
sub
in
mov
loope
and
ljmp
cmp
addb
test
leave
rcl
jnp,pn
sub
add
dec
jle
jns
aaa
cmpb
imul
int
mov
or
mov
rorl
iret
mov
mov
mov
sbb
and
adc
or
push
xchg
add
ds
mov
xchg
add
jnp
sbb
imul
shll
xchg
fistpl
ret
imul
sub
icebp
fsubp
insl
lahf
outsb
inc
test
dec
lret
stos
xchg
mov
ret
outsl
mov
adc
jp
enter
loopne
int3
imul
lahf
and
mov
cmc
add
inc
int
jge
repz
inc
repz
jp
pop
stos
nop
mov
shl
lds
jmp
push
jns
xchg
iret
push
cld
push
sub
inc
mov
mov
shlb
adc
hlt
xor
sub
bound
add
clc
jns
stos
or
or
jno
pop
push
pop
mov
jge
pushf
pop
mov
das
in
xor
fisubrs
jg
sbb
cmpl
mov
or
and
cmpsb
push
aaa
or
cltd
imul
in
lods
pop
mov
mov
mov
in
sbb
push
mov
jl
nop
shl
cmc
mov
or
mov
mov
or
add
sub
xor
xchg
or
orb
sbb
scas
pop
push
rclb
xor
pusha
lods
pop
sbb
aam
int
adc
xchg
mov
or
cmpb
dec
push
push
dec
xor
ss
xor
aas
xor
push
loop
ret
lods
ja
jp
pop
dec
xchg
scas
aaa
add
aam
inc
fucomip
in
xchg
push
out
sub
xor
mov
dec
rcrl
adc
dec
rorb
daa
jae
aas
subl
and
movl
xor
mov
jecxz
mov
adc
mov
cmpsb
addl
stos
scas
cmpsl
mov
mov
pop
xchg
sub
subb
mov
xchg
push
jge
pop
cmp
xor
inc
loopne
xchg
and
pop
or
int3
out
std
jg
inc
fwait
cli
adc
ret
jne
cmp
ds
fwait
adc
popf
bound
pop
pop
test
les
pop
pushf
jg
sub
adc
out
or
fs
cmp
cmp
lods
int
or
mov
add
imul
lret
mov
sub
add
xchg
sub
mov
stc
add
scas
fcomp
mov
fildll
jb
sti
fcomi
xor
jne
mov
loope
xchg
mov
dec
mov
pop
inc
imul
push
les
pop
pop
movsl
insl
xor
sub
mov
mov
aas
xor
cmp
xchg
pop
and
mov
ss
jge
jg
mov
imul
fxch
fdivp
mov
pop
jbe
jle
bound
mov
and
loopne
repnz
jmp
cs
mov
add
sbb
cmp
out
or
sbb
pop
and
inc
jmp
push
fcoml
add
push
ljmp
stos
mov
fsubl
add
in
int
scas
mov
shlb
cld
sub
jl
lods
aas
xchg
int
movsl
or
push
dec
enter
sbb
xchg
or
push
das
ficoml
sub
insl
cmpsl
push
arpl
dec
iret
xor
das
cltd
add
out
daa
aas
sub
fs
icebp
dec
test
cmpsl
push
iret
cmp
sub
xchg
cmp
cld
les
or
push
rcr
push
popf
shrb
sarl
cltd
xchg
xchg
dec
insb
std
cli
and
dec
adc
repnz
sub
or
popf
inc
mov
mov
sbb
loopne
inc
sbb
outsb
sarb
pop
push
cmp
fwait
loopne
mov
sbb
fadd
es
popf
jns
mov
fcom
jo
add
pop
sub
jl
leave
iret
xchg
dec
es
cmp
jle
mov
mov
add
xlat
fwait
loop
lahf
aas
dec
sbb
lahf
cltd
call
lret
jmp
xlat
aad
movsb
push
xchg
cltd
jp
cltd
inc
rcrl
ret
testb
aad
adc
stos
xor
mov
xlat
popf
dec
lret
lret
mov
inc
dec
mov
js
and
ror
xor
jnp
fiaddl
icebp
push
sub
adc
bound
movsl
lock
pop
pusha
sbb
sub
xchg
outsl
scas
insl
dec
flds
into
xchg
dec
mov
push
and
lods
or
pop
rcrl
stc
cmp
pop
jae
mov
jnp
aas
loope
dec
leave
sub
ret
mov
jae
push
lea
popa
sub
shl
sti
fisubs
outsl
lcall
dec
lods
pop
shlb
and
ror
sbb
and
pop
lods
je
adc
mov
shlb
mov
mov
jle
jl
jge
add
pop
daa
jmp
mov
fdivrs
sub
js
insl
ja
decb
in
push
xchg
adc
and
sbb
push
mov
inc
push
mov
push
mov
xor
mov
scas
outsb
dec
mov
cwtl
sbb
sub
push
cmovne
insl
gs
inc
add
and
inc
xor
sbb
jle
lcall
call
sub
popa
mov
aam
hlt
and
push
int3
in
mov
lods
jae
sub
or
lcall
push
cmp
sar
jle
or
cmp
popf
dec
frstor
adc
and
dec
scas
and
dec
inc
and
fdivrl
cmpb
data16
loopne
xchg
xor
sub
aas
enter
dec
pusha
pushf
adc
divl
fbld
sub
inc
ja
xrelease
bound
imul
arpl
or
inc
xchg
enter
cmc
cltd
mov
sti
scas
aam
push
ret
add
popf
jnp
fwait
aad
rorb
xchg
fnstsw
iret
push
fidivrs
movb
adcl
xor
and
mov
push
int
sahf
xor
popa
mov
cmp
and
and
ret
cs
push
fimull
mov
sbb
xlat
mov
filds
sbb
cmpb
enter
cld
xchg
out
pop
add
xchg
je
into
add
lods
mov
xchg
gs
imul
or
mov
cwtl
rolb
in
inc
out
cmp
mull
ss
add
and
or
cmpsb
js
mov
out
loope
imul
fnstcw
enter
sub
out
insb
jnp
loope
xchg
cmp
mov
mov
dec
popa
sti
dec
loope
shl
imul
push
test
pusha
mov
repz
sub
xchg
add
mov
mov
push
mov
lahf
mov
add
fdivr
cmp
adc
and
mov
jbe
stos
loop
loopne
add
loopne
cli
pop
ljmp
andb
bound
mov
sbb
jnp
imul
fwait
pop
scas
pop
popa
jl
mov
and
add
in
movsl
cmpsl
loope
inc
push
popf
sub
mov
jle
rcr
stos
jbe
push
and
shrl
cmp
popa
rcrl
cld
loope
js
loopne
pop
add
cmp
lds
cmp
jae
stc
or
das
pop
pop
jo
aaa
jl
lea
pop
pop
scas
mov
fstps
or
shlb
add
sahf
cmpsl
push
fstpl
sub
mov
push
mov
xchg
aad
jns
push
dec
frstor
clc
fdiv
jmp
and
mov
mov
inc
and
mov
sbb
add
repz
enter
xor
xchg
mov
fadds
imul
mov
xor
sub
das
popa
incl
jecxz
in
dec
test
inc
gs
pop
aaa
iret
sub
stos
out
push
mov
jbe
sbb
and
mov
lcall
enter
jmp
or
hlt
jb
popa
push
popf
aam
push
lock
popa
mov
add
pop
mov
inc
pop
mov
jne
inc
aaa
mov
arpl
mov
outsb
andb
adc
inc
fwait
push
fwait
insb
popa
sub
add
sbb
pop
mov
test
xchg
negl
cmc
test
loopne
outsb
lea
out
and
pop
mov
rol
rclb
or
mov
shr
cmc
mov
negb
scas
daa
push
test
pop
xchg
dec
fldenv
nop
or
int
mov
or
push
into
cltd
movsl
or
loop
adc
xlat
inc
lea
sbb
jecxz
arpl
mov
and
repz
mov
sbbb
jne
pop
or
sbb
inc
hlt
inc
jp
xor
lock
je
pusha
adc
arpl
dec
xorl
in
xchg
push
ljmp
notl
jmp
pusha
into
xchg
jnp
insb
data16
push
push
mov
ret
jbe
repnz
es
sahf
xorb
std
and
mov
ds
sahf
shrb
and
xchg
push
dec
imul
mov
popa
test
push
or
out
mov
gs
fsubl
lea
lahf
nop
sbb
sbb
addr16
imul
add
pop
and
jnp
in
lods
sbb
popa
fs
in
sub
mov
out
cltd
fcoms
mov
mov
cwtl
cmp
jae
int
xchg
ret
fidivrl
xchg
imul
popa
mov
add
jb
bound
lods
inc
int
ds
pop
sub
popa
nop
or
fmull
or
dec
or
imul
lods
xchg
sbb
bound
adc
or
repnz
testl
std
dec
ja
cli
xchg
in
and
neg
push
xchg
js
cmpsl
pusha
jmp
mov
xor
cmpsb
and
test
sub
stos
std
mov
shlb
out
push
push
mov
out
sbb
dec
sbb
push
sbb
add
pop
lret
gs
dec
mov
outsb
and
sub
xlat
aaa
xor
movsb
push
dec
aad
jl
test
data16
push
xor
and
jmp
dec
pop
pop
std
js
cmp
xchg
sbb
sbb
add
inc
or
loope
sub
bound
mov
jge
or
inc
mov
jnp
sahf
add
adc
dec
out
and
xor
hlt
sub
jg
shl
aad
push
xor
fiadds
das
or
cwtl
inc
cmc
xchg
cmp
xchg
fidivs
les
cmp
call
lahf
lock
xchg
xchg
dec
mov
push
scas
popa
mov
sbb
and
hlt
dec
enter
push
pop
inc
pushf
cmc
xchg
mov
pop
js
xchg
jne
jle
or
dec
dec
es
inc
shrd
shrb
mov
adc
cmp
icebp
push
mov
data16
jmp
push
dec
dec
sbb
testb
insb
or
imul
adc
mov
or
jp
loopne
push
fcoml
and
jae
or
je
and
push
addr16
dec
insb
icebp
outsl
js
scas
test
iret
das
mov
jbe
aam
mov
and
loop
fcmovb
insl
imul
je
rorl
iret
clc
repz
leave
fsubs
sbbl
rorl
push
movsb
mov
xchg
cmc
jp
mov
out
mov
inc
out
mov
lods
test
mov
xchg
cmp
sbb
add
shlb
add
lret
push
cmp
sbb
adc
dec
push
mov
and
test
push
imul
xor
nop
jg
sub
cwtl
jmp
mov
jns
sub
arpl
jg
test
jecxz
jmp
or
mov
mov
push
ret
or
adc
adc
push
stos
push
imul
push
dec
pushf
cltd
inc
leave
lcall
and
xchg
cmp
fwait
mov
xlat
lds
xlat
nopl
dec
rcll
addb
lock
jge
push
mov
das
mov
stc
out
repz
call
dec
lods
add
shl
mov
sbb
divb
insl
add
jecxz
popf
jl
shlb
orb
sub
cltd
mov
inc
lds
xor
jae
add
add
sub
negl
cmp
out
push
push
sbb
mov
arpl
jl
lahf
int3
cmp
fmulp
mov
cld
out
addr16
sub
test
fucom
in
push
orl
das
mov
subl
xlat
mov
inc
xor
pop
ret
sub
ret
pushf
jle
pushaw
pop
xchg
mov
jne
std
mov
mov
das
incl
stos
push
and
push
lods
and
fldenv
test
sbb
adcl
pop
jmp
sarl
imul
push
dec
sub
xor
insl
pop
xchg
imul
and
inc
stos
bound
lea
aam
cmpsb
jmp
or
sub
sbb
add
mov
in
imul
mov
mov
cmp
xor
dec
adc
cmpsl
test
and
add
push
cltd
mov
mov
fs
push
pop
jg
sub
push
insb
scas
in
mov
xchg
icebp
int3
aam
lcall
mov
je
xchg
mov
jno
add
mov
orb
add
fcom
ret
dec
mov
adc
adc
add
mov
repnz
ret
aas
sbb
and
js
push
and
jp
pushf
out
add
jl
push
cmp
fisttpll
and
cmpsb
dec
jno
ficoms
scas
or
ss
push
xor
fnstcw
cld
mov
jl
in
fsubr
mov
push
lahf
pop
out
pop
or
outsl
testb
mov
or
adc
test
xchg
in
cmpsl
mov
fisubs
mov
loopne
inc
aas
fbld
xor
int3
fwait
insb
ret
sub
adc
aad
push
fs
int
cltd
push
int
mov
sbb
test
iret
adc
sub
xchg
std
bound
and
test
xor
cltd
dec
cs
cmp
int3
in
popf
out
and
iret
lds
pop
andb
dec
mov
testl
loope
or
fwait
mov
pop
xor
lea
jmp
or
imul
leave
pop
lfs
lods
cwtl
dec
enter
or
pusha
daa
jne
fstpl
lret
int3
loope
imul
push
in
daa
fistpl
std
sbb
dec
or
mov
push
xor
sbb
jmp
sbb
mov
std
jae
mov
mov
or
or
aam
dec
lahf
lret
mov
sub
cmpsb
int
cmpb
adc
gs
xchg
lock
fwait
cli
push
cmpsb
out
lea
addl
icebp
dec
push
push
xchg
push
mov
mov
iret
sub
mov
push
jle
pop
sbb
fimuls
pop
xchg
cmp
inc
insb
fisttps
call
add
insl
jno
fst
fs
call
fucomp
dec
push
lea
adc
xchg
mov
pop
addr16
jmp
and
idivl
mov
pushf
lret
gs
movsl
mov
lahf
into
in
leave
dec
push
mov
js
mov
enter
mov
sub
add
lret
imul
pop
dec
popa
pop
sub
daa
in
adc
call
pushf
out
outsb
pop
aam
ret
xor
mov
jae
lds
je
inc
pop
lds
pushf
pop
jmp
pop
sbb
push
and
arpl
loopne
ret
sbb
and
fsubl
out
cmp
cmp
fsqrt
add
mov
popa
sub
lret
dec
cmpsl
call
pop
push
adc
ret
xchg
push
test
xchg
adc
mov
dec
sti
fistl
das
cltd
cwtl
mov
dec
xchg
add
or
jecxz
push
mov
lods
out
jbe
add
or
imul
sbbl
add
out
sbb
outsb
jmp
ds
dec
test
icebp
imul
dec
psubusb
dec
adc
mov
mov
lods
shl
mov
idivb
orl
cmp
popl
push
push
sub
jl
hlt
mov
jnp
xchg
pop
in
xor
in
mov
pop
mov
add
push
daa
repnz
rcr
xlat
lds
pushf
xchg
negl
pop
mov
sbb
adc
and
mov
je
add
sti
xor
pop
xchg
lods
sbb
icebp
in
cmp
mov
and
jb
into
adc
jl
jno
lods
jecxz
je
pop
jp
scas
jle
cmc
icebp
icebp
shll
dec
aaa
fcompl
mov
jns
adc
je
mov
mov
lahf
sub
jecxz
out
mov
loop
addb
pop
dec
jae
mov
pop
sub
in
test
popa
xchg
and
mov
mov
sub
dec
fimull
into
add
out
popf
mov
pop
enter
into
clc
jge
mov
xchg
sti
pop
fwait
pop
sbb
stos
pop
clc
popa
ss
xchg
jmp
scas
cli
push
movsb
adc
sub
lock
andb
lcall
add
aam
fisubs
jbe
adc
xchg
imul
and
rcrb
cmp
jne
imul
cmp
aam
addr16
push
xchg
push
inc
or
and
sub
pusha
adc
xchg
loop
sub
push
mov
jb
xchg
mov
mov
sbb
ret
lock
test
mov
push
nop
les
pop
or
inc
fldcw
lcall
dec
or
xchg
add
stos
aaa
jno
lock
lock
repnz
push
cmp
mov
pop
mov
push
insl
in
and
stos
leave
in
push
flds
ret
in
sbb
enter
inc
xor
rcll
je
and
in
cmp
aad
xor
test
test
test
out
or
imul
addb
lea
int3
or
shr
test
push
mov
adc
ret
loopne
insl
adcl
sub
outsl
addr16
adc
clc
and
xor
cmp
or
push
dec
loope
aaa
loop
push
pop
mov
and
lret
mov
push
repnz
loop
sub
ret
adc
cli
xchg
js
and
out
jne
push
aaa
jbe
xchg
xchg
leave
repz
ljmp
loop
loope
and
je
fisubrs
dec
les
popa
sbb
mov
mov
or
out
or
cli
xor
inc
cmp
and
cmpsb
sbb
std
lods
xchg
sbb
mov
jns
mov
mov
sbbl
lret
mov
adc
stos
sub
fs
cltd
out
pop
aad
lret
fistpll
das
dec
xor
inc
pop
mov
xchg
inc
stos
ds
mov
xor
adc
rolb
dec
loopne
sub
jae
fcmovb
shlb
and
add
mulb
fdiv
ret
loop
bnd
mov
mov
add
cld
in
cmp
pop
ljmp
mov
xlat
pop
sbb
adc
jge
fsub
imul
scas
mov
adc
xor
sub
xchg
mov
aas
xor
mov
lret
pushf
cmp
imul
daa
cmp
clc
cmpsb
insl
and
or
rcll
dec
in
imul
or
cwtl
pop
jle
mov
or
sbb
rolb
and
pushl
jb
loop
repz
xor
jns
popa
mov
push
in
jne
dec
insb
popa
data16
fcmovu
push
inc
and
shlb
ficoml
sub
out
cli
sbb
shr
in
cmp
movsb
insl
adc
add
dec
add
lcall
lock
dec
push
les
push
xchg
mov
stos
jbe
stos
test
add
cmp
cmp
arpl
std
mov
ljmp
mov
mov
sbb
mov
enter
push
jne
push
sub
fwait
sbb
pusha
xor
ds
mov
sti
outsl
cmp
stc
insb
cmp
iret
inc
sbb
decl
ficomps
push
cmp
cmc
adc
push
mov
sub
add
divl
sub
pop
ja
mov
xor
cmp
add
dec
cld
xchg
inc
call
sub
xor
xor
xor
and
push
jo
lcall
pusha
sarl
insb
sub
sbb
xor
xchg
jae
out
sub
movsb
fcompl
mov
lock
aaa
sub
jle
das
inc
mov
ljmp
mov
subb
movsb
xor
rcrl
mov
jo
sbb
pop
inc
adc
lret
adc
xchg
js
or
lods
mov
jp
ljmp
xor
jge
push
push
aaa
push
movsb
aam
std
push
or
fsubl
pop
xchg
and
sbb
jne
jg
fidivrs
cmpl
sub
cmp
rcl
iret
add
sbb
data16
mov
leave
jmp
mov
call
notb
xor
jl
pop
sub
notb
mov
shrd
iret
lret
call
jmp
lods
pop
hlt
aad
jmp
pop
push
out
fs
shlb
xchg
imul
sub
pop
adc
or
inc
add
push
push
fcmovbe
inc
add
mov
popf
inc
push
es
jno
or
lods
inc
pop
cli
and
and
aaa
les
aas
xchg
jecxz
mov
outsl
movsl
sbbb
adc
xchg
in
js
or
jle
adc
inc
adc
scas
mov
inc
push
jns
pop
aam
xor
mov
sub
pop
sbb
out
call
jno
out
inc
cmpsl
or
xor
jae
cmpsb
mov
cmp
sbb
cli
jge
gs
xchg
lods
or
mov
jb
xor
insl
dec
adc
xchg
outsb
sbb
xchg
sbb
shrb
mov
imul
and
gs
mov
cwtl
mov
orl
out
mov
push
jbe
icebp
mov
movaps
cmp
or
es
pop
flds
pop
dec
arpl
lret
jne
mov
inc
aad
ds
mov
mov
or
or
fdivrl
inc
xchg
mov
and
sbb
sbb
sbb
pop
je
into
sub
pop
mov
iret
incl
aas
adc
push
and
mov
cmp
sub
sti
jp
xchg
sub
or
jmp
iret
ss
jg
adc
test
out
xor
lret
xor
lret
push
pusha
cmp
mov
sbb
call
out
and
or
pushf
jo
loop
sub
arpl
inc
enter
loop
mov
push
xchg
fimuls
mov
cmp
imulb
xchg
xor
jb
subb
push
push
and
dec
xchg
loopne
jne
mov
leave
icebp
aad
cli
xchg
sbb
pop
in
xor
sub
or
xchg
add
push
xchg
lret
ret
jmp
sub
aad
ja
and
shrl
or
sub
movsb
ja
in
jle
rep
jno
jecxz
les
mov
cmp
fcompl
push
addr16
add
xchg
bound
pop
pushf
and
sub
add
jmp
and
cmp
enter
negl
imul
xchg
mov
ja
mov
movsl
movsb
mov
pop
leave
popa
dec
sti
jae
sbb
scas
cmp
xchg
cs
push
into
test
sub
rcrl
jne
mov
lea
xchg
cmp
xchg
inc
add
mov
add
lods
es
sbb
jecxz
es
orb
xchg
pop
in
stc
cmp
inc
adc
mov
fcoms
cwtl
in
jl
and
jnp
outsl
cwtl
mov
fcompl
dec
lods
je
idivb
bndstx
popf
inc
mov
adc
orl
xchg
rcrl
adc
stos
mov
pop
or
sbb
sbb
push
push
dec
push
xor
sub
xchg
mov
movsb
mov
xor
jg
rcr
push
nop
pop
icebp
xchg
adc
add
mov
ljmp
cltd
mov
js
div
test
sbb
jp
push
addr16
pop
mov
mov
sbb
pop
lods
aas
lret
cmc
out
add
inc
fidivs
out
mov
movsb
adc
push
sbb
ror
cmp
xchg
push
sbb
jl
stc
and
add
mov
sbb
imul
imul
lds
in
adc
das
addb
pop
call
sarb
pop
popf
push
xchg
push
aas
lcall
insl
xchg
jp
xorb
enter
dec
out
daa
sbb
cltd
lea
fwait
dec
lcall
mov
aas
fdivs
pop
push
mov
or
sbb
popa
pop
mov
sub
add
dec
enter
push
inc
addr16
sbb
jns
and
or
mov
popa
dec
adc
scas
loope
stc
call
and
push
pushf
in
js
rcl
cwtl
loop
fcmovnu
pop
stos
push
jae
adc
pop
repz
mov
je
pop
shrb
jo
pop
outsb
cwtl
shrl
rclb
mov
xchg
sahf
hlt
stc
jne
les
jge
outsb
xor
mov
cmc
inc
jl
xor
inc
sub
sbb
mov
inc
push
mov
and
xchg
mov
adc
mov
pop
jb
and
xor
push
adc
inc
loopne
dec
dec
xor
dec
jns
into
mov
cld
ret
fcmovnu
cmpsl
sbb
cld
adc
lahf
sahf
add
stos
sbb
fwait
xor
dec
mov
cmp
jb
pop
repz
jecxz
cmpsl
popf
inc
mov
add
scas
mov
jp
push
aam
scas
out
fwait
out
cmp
out
mov
into
js
lahf
sbb
inc
inc
pop
sub
pop
enter
and
nop
or
aam
xor
sbb
mov
push
sahf
pop
and
and
daa
cltd
int
lock
push
mov
jmp
mov
mov
xor
xchg
pop
insl
mov
in
pop
test
int3
cmp
inc
cli
and
xchg
or
mov
push
push
push
pop
cmp
testb
and
aad
fmul
add
lahf
les
ss
push
xor
lock
sbb
or
jne
test
and
cmpsl
cltd
das
push
jno
bound
aas
cmpsb
sub
push
fsubs
jne
out
aas
mov
popa
icebp
in
into
negb
sti
inc
adc
push
jmp
lsl
call
pop
lret
inc
sti
inc
mov
inc
imul
jl
xor
dec
lcall
hlt
cld
insl
sub
mov
nop
mov
jmp
xor
xor
sbb
imul
push
and
mov
mov
mov
pusha
leave
mov
xchg
jmp
adc
dec
pop
cmp
lahf
mul
imul
jnp
jae
or
std
push
mov
xchg
fmul
fsubrl
icebp
lret
jg
fwait
adc
jg
mov
adc
mov
nop
mov
mov
jo
dec
movsb
push
aam
mov
jp
aam
sub
lea
insb
divb
mov
leave
sub
jmp
ror
sti
in
inc
mov
rorb
lods
xchg
dec
arpl
dec
into
mov
test
lahf
pop
sbb
clc
cld
xor
push
in
aam
sbb
cmp
push
mov
repz
popa
mov
lahf
cmp
add
fsubl
jnp
divl
jne
imul
mov
push
jge,pt
jecxz
adc
out
push
cmc
repz
adc
aas
insb
movb
pop
pop
rcl
xor
add
fwait
jg
pop
jmp
int3
pop
shll
add
lock
pusha
inc
mov
outsl
imul
or
mov
pop
adc
push
icebp
dec
stos
daa
mov
dec
lea
cld
dec
addl
adc
xor
lahf
pop
mov
je
cmc
pop
sub
cmp
and
fs
dec
xor
movsl
sbb
ljmp
jns
leave
inc
fsts
fcmovnb
mov
cmp
push
push
je
add
inc
shrw
dec
andl
cmc
adc
jbe
xchg
mov
das
mov
mov
popf
fbstp
jo
and
imul
dec
or
pop
in
lock
and
stos
push
ret
inc
xor
or
in
test
into
sti
mov
test
jp
mov
icebp
imul
lods
adc
xlat
fcoms
xchg
sub
cmp
adcl
in
not
push
and
stos
cmp
pop
jmp
xchg
pop
dec
cltd
adc
jecxz
notb
add
ljmp
das
lods
cwtl
dec
inc
pop
int3
sahf
mov
flds
cli
test
sti
and
adc
mov
inc
jno
scas
test
add
mov
adcl
jmp
push
ds
jne
inc
addl
mov
in
mov
into
xchg
out
inc
movsl
sub
adc
push
mov
push
sti
mov
sub
imul
ret
cmpl
fwait
divl
sbb
lahf
cmpsl
lret
iret
jo
pushf
cs
add
imul
sti
out
xor
in
orb
movsb
mov
cli
lar
jne
mov
inc
mov
andl
jg
mov
lcall
mov
jno
or
es
out
or
cmp
idivl
add
data16
fnstsw
rorl
fcoms
push
mov
outsl
loop
shrb
push
flds
and
add
shl
jne
jbe
sbb
push
cli
test
add
sub
dec
and
jg
sti
mov
xchg
adc
and
ret
cmp
adc
nop
pop
jae
mov
push
mov
jbe
push
sub
dec
arpl
in
add
jbe
mov
bswap
imul
push
test
sahf
hlt
insb
fadd
out
dec
jnp
andl
stos
sub
sub
inc
shrl
pop
out
pop
push
xchg
xor
out
xor
dec
out
jae
push
xchg
adc
sbb
pop
and
inc
lcall
jecxz
cmp
xchg
and
fwait
xchg
mov
test
in
xor
add
adcb
pop
sub
cmp
mov
test
aam
pop
outsl
sub
lahf
decb
in
aas
sarl
movsb
shll
inc
push
cld
jl
addr16
mov
sbb
xchg
fs
fxch
fwait
mov
and
jae
xchg
sub
sub
enter
inc
shll
and
das
nop
imul
shlb
push
dec
push
mov
ljmp
mov
pop
js
mov
dec
cmp
ljmp
mov
and
dec
ret
fsts
mov
xchg
inc
sahf
mov
ror
and
iret
pop
test
xor
dec
sahf
dec
cmp
mov
pop
mov
icebp
xchg
xor
or
pop
pop
cmc
in
sub
in
add
stos
fs
imul
iret
fsubrl
cs
daa
popf
xchg
dec
jne
in
repz
repz
mov
cmp
pop
cltd
mov
pop
roll
pop
cmpsl
pushw
dec
pusha
call
lock
jge
fdivp
bound
mov
inc
inc
mov
add
mov
and
shl
test
fists
xor
lcall
hlt
pushf
cmp
push
je
sbb
shrb
mov
dec
lret
mov
fwait
push
fisubrs
icebp
xchg
and
mov
mov
icebp
sbb
xor
dec
inc
mov
fldenv
ret
cltd
inc
pop
pop
dec
xor
push
mov
add
jge
rol
and
dec
mov
sbb
cwtl
xlat
rcrb
sub
and
adc
mov
out
add
js
dec
popa
shl
ja
push
sub
adc
repnz
adc
stc
iret
mov
xor
sbb
and
mov
rcrl
fidivl
imul
mov
jge
divl
xor
inc
outsb
push
pop
xorb
fs
sub
and
sub
insb
arpl
ja
lods
and
mov
stc
jg
or
sahf
add
outsb
shrl
sub
push
insb
stos
xor
fsubrl
dec
subl
mov
in
mov
jo
ss
jo
outsl
in
sub
cmpsl
movsb
pop
pop
dec
cmpsl
sub
and
bnd
sti
fldcw
push
iret
adc
inc
cmp
jnp
mov
push
lret
repz
repnz
cmpl
dec
and
push
outsb
ja
push
adc
push
pop
jo
sub
or
inc
sub
scas
and
popa
mov
mov
pop
mov
xor
aam
les
stos
ds
sub
pop
in
ss
dec
shll
push
inc
adc
icebp
inc
inc
inc
mov
imul
ret
push
arpl
xchg
popa
push
int
orb
sbb
subb
lods
loope
andl
cmp
sbb
fdivp
jno
arpl
jl
push
nop
sub
into
movsb
mov
cmp
in
xlat
adc
adc
mov
xor
test
pop
push
mov
lds
mov
bound
sahf
clc
imul
lods
push
fsts
repz
dec
inc
dec
in
push
fcoms
incb
mov
jge
testl
sbbb
mov
dec
mov
test
or
in
sub
mov
push
sarl
sbb
xor
jbe
jl
pop
in
movsb
out
jl
stos
lret
jb
inc
cmp
mov
mov
dec
mov
sbb
pop
jp
push
xor
int
xchg
mov
lods
fidivrs
push
cltd
jecxz
adc
fwait
call
and
xor
aaa
sbb
pusha
leave
cmp
push
int
ss
cmp
std
enter
cld
push
inc
fbld
push
addr16
insb
adc
std
in
jb
lods
add
xor
push
cmp
dec
or
inc
js
out
inc
adc
les
xchg
clc
bound
sbb
out
adc
pop
push
pop
push
arpl
mov
pop
pop
std
mov
cmp
idivl
sbb
push
sub
xor
js
in
add
add
adc
loopne
adc
mov
add
lahf
cli
loop
std
sub
mov
push
sub
pop
out
mov
jp
jae
in
stc
inc
mov
sub
add
ljmp
inc
call
lods
scas
mov
sar
push
or
mov
rcrl
inc
in
pop
call
lods
stc
pusha
test
or
mov
outsb
insb
dec
jns
xor
and
lods
xchg
xor
ret
out
push
mov
and
add
cmpsb
arpl
sub
cmp
les
call
mov
or
loop
lds
cmp
fcmovne
sub
ret
push
jo
cmp
in
negl
bsf
imulb
loop
sub
es
testl
iret
pop
sbb
sbb
clc
adc
or
fdivr
mov
pop
popf
std
rclb
sbb
ret
jae
adc
scas
inc
call
and
jp
inc
dec
into
lods
xchg
lret
sbb
jmp
subl
inc
fcomps
jbe
fcom
lods
popf
ret
popa
pop
faddl
addl
xlat
pop
adc
ds
nop
push
aam
cli
test
sub
std
pop
js
mov
popf
pop
scas
aam
in
cmp
sbb
addr16
push
sbb
mov
or
adcl
loopne
int3
jecxz
test
mov
pop
jnp
sub
or
add
push
fisubrs
or
iret
cmp
xor
ret
in
lcall
imul
hlt
aaa
in
add
fildl
inc
jnp
mov
test
notb
pop
iret
lods
or
emms
push
call
pop
push
pop
mov
int
addr16
mov
insl
push
cmp
mov
ljmp
and
in
neg
ret
sarl
inc
push
sbb
adc
jbe
add
aam
or
and
xor
cmp
rcl
push
add
mov
sub
aad
fldenv
or
pop
jg
mov
enter
mov
mov
lock
stos
push
adc
shll
push
lods
std
std
pop
xchg
cmpsl
outsb
pusha
mov
fstps
jmp
fildl
out
xchg
scas
lcall
je
mov
pslld
sub
lock
sub
mov
mov
gs
inc
xchg
sbb
xchg
inc
scas
jmp
sbb
test
repnz
inc
jo
push
adc
das
adc
lock
or
ret
dec
sbb
in
insl
ja
dec
imul
xchg
lret
loop
xchg
push
add
mov
mov
push
imul
insl
fwait
leave
mov
out
push
and
outsl
sarl
arpl
dec
or
sub
outsb
movl
dec
stc
xchg
outsl
xchg
data16
loopne
aaa
cmp
rorb
decl
ljmp
cmp
jno
imul
int3
leave
mov
imul
xchg
add
adc
stc
pop
rcrb
sbb
mov
sub
push
bound
fdivs
sub
jp
mov
out
jmp
mov
fwait
sbbl
xchg
jle
mov
outsl
sub
lahf
add
inc
inc
push
cmp
popa
add
pusha
pusha
movsl
movsb
data16
push
fildll
push
jno
cmp
popf
jbe
sbbb
in
mov
xor
pop
mov
jmp
pop
in
daa
sahf
pop
or
out
lods
insb
aaa
jp
adc
jge
cmpsl
repz
xor
sub
idivb
fstl
fs
sbb
xchg
into
push
scas
hlt
pop
mov
jl
stc
push
rcrl
aad
add
sub
mov
ds
sbb
xlat
xor
test
icebp
xchg
mov
sub
shll
dec
clc
pop
stc
daa
pop
mov
std
cmp
push
mov
in
es
push
testb
imul
outsl
cld
mov
stos
cmp
lds
mov
inc
xchg
enter
stos
cwtl
ds
out
inc
fstps
dec
lods
pop
pop
iret
clc
popa
mov
in
xchg
sub
test
push
faddp
pop
fnstenv
movsl
movsb
roll
sbb
jp
jnp
pop
xor
sub
loope
xchg
in
loope
and
and
add
jae
xor
cmp
dec
mov
dec
push
test
mov
sbbb
stos
push
mov
loopne
imul
jne
call
outsb
jne
sub
imul
movsb
hlt
in
loope
xchg
push
add
fbld
mov
push
shll
les
jno
or
sub
rcr
or
cwtl
aam
push
pop
popa
ret
pop
xchg
stc
add
cld
adc
add
lods
test
inc
add
adc
pusha
push
mov
int3
es
cmp
mov
cs
xor
sbb
ljmp
scas
fwait
jmp
xchg
mov
dec
mov
xlat
push
mov
gs
outsb
cmp
data16
xchg
hlt
addr16
insl
inc
fs
insb
mov
ret
inc
nop
popf
sahf
es
xor
jae
sub
std
iret
stc
add
repz
mov
enter
es
aaa
mov
push
pop
call
adc
dec
dec
shr
js
enter
cmp
fdivrl
pop
inc
imul
insl
jl
lea
cmp
dec
jl
aas
std
std
lods
pop
insl
test
push
js
mov
push
test
cmp
out
and
push
xchg
insb
pop
sarl
ljmp
int
out
mov
mov
fs
xchg
lret
lds
sahf
or
mov
test
shlb
push
jno
xchg
sar
fwait
cwtl
sbb
insb
add
in
sarl
cmp
dec
push
inc
je,pt
add
add
dec
int
fldt
lods
jmp
and
aas
loope
xchg
dec
push
or
push
negb
mov
jmp
loope
cltd
jmp
mov
sub
jno
push
in
push
or
addl
jno
sbb
sbb
jecxz
mov
insb
add
mov
and
jo
repz
cwtl
pop
xor
dec
insl
call
push
mov
xor
pop
and
loop
into
inc
lods
xchg
jno,pt
sti
ss
stc
dec
mov
sbb
js
flds
sbb
mov
push
popf
int
cli
and
inc
loopne
shlb
mov
mov
std
repz
sub
jbe
push
das
sbb
loopne
push
mov
lea
push
nop
sub
aas
mov
xchg
mov
std
imul
and
pop
popa
mov
flds
mov
repz
mov
pop
push
adc
loopne
imul
pusha
pop
jle
vdivpd
cwtl
fs
fs
jp
xchg
pop
dec
inc
ljmp
adc
test
movsl
es
sub
or
jle
test
mov
or
mov
adc
scas
int3
fcomip
xchg
push
out
bound
push
rol
push
test
shr
sub
out
decb
cmp
inc
loop
lods
cmp
sbb
and
stc
xchg
sub
inc
jne
mov
mov
mov
adc
push
loopne
sbb
jbe
pop
dec
leave
rcr
shlb
add
js
dec
loopne
and
adc
ret
xabort
daa
push
cmp
add
add
repnz
push
push
jo
outsb
popa
sub
pop
pop
jnp
fsubl
sub
mov
xor
jnp
data16
out
push
sar
imul
jns
inc
sbb
orl
fisttpl
dec
hlt
mov
mov
leave
ret
insb
popa
sti
fs
popa
mov
push
push
ds
insl
xchg
jb
scas
sub
shrl
fstps
xor
cmp
or
inc
mov
jns
mull
push
xchg
repnz
loope
pop
daa
loop
or
stc
push
ja
out
loopne
or
mov
movsl
sbb
sub
mov
jl
in
push
js
mov
jecxz
loope
fsub
bound
mov
lock
iret
cmp
inc
xchg
sub
insb
test
cwtl
push
jnp
fldenv
dec
in
cmp
pop
rol
adc
jb
xchg
mov
push
jnp
jecxz
cli
xchg
cmpsl
jnp
fsubl
and
lds
add
jecxz
or
jle,pt
inc
sbb
in
xchg
pop
pushf
rorb
pop
sbb
out
mov
dec
mov
adcb
out
cmp
adc
mov
inc
shl
movsl
rolb
dec
mov
scas
and
rclb
lods
loop
cmp
repnz
iret
ss
xchg
xchg
stc
mov
or
repz
fs
insb
loopne
sbb
pop
mov
popf
negl
loope
jb
cmp
push
jge
adc
xor
mov
sbb
imul
neg
adc
les
sub
test
ss
insl
imulb
adc
out
push
fcmovu
cmp
adc
jbe
test
divl
push
jae
fwait
test
push
testb
in
jns
sbb
loop
lock
pop
xchg
cmp
popf
test
popa
dec
mov
add
movsb
mov
pop
mov
icebp
pop
push
cwtl
lods
and
insb
psubusb
push
dec
dec
xlat
adc
mov
mov
and
jecxz
inc
in
or
sarb
mov
bound
push
dec
stc
mov
add
push
lea
out
dec
cmp
sub
mov
or
dec
jp
out
push
into
les
ss
jbe
lock
push
sbb
ret
mov
aas
hlt
push
cltd
push
jns
or
push
hlt
and
inc
inc
sbb
sahf
and
mov
cmp
cmp
and
adcl
mov
pop
sbb
inc
inc
ret
xor
cmpsl
sbb
fsts
xchg
xchg
in
mov
pop
into
addr16
lds
fsubs
xchg
roll
inc
sbb
test
pushf
xchg
fidivrs
pushf
cwtl
cmc
fs
pop
ja
cld
scas
test
scas
dec
or
sbb
frstor
cmp
lret
inc
loope
rcrl
aad
jecxz
adc
inc
mov
or
test
jb
xchg
dec
add
push
and
pop
add
push
leave
lods
pusha
sbb
xchg
dec
rorb
shlb
mov
out
sar
pop
movl
je
ret
xchg
mov
pop
xchg
mov
nop
mov
sub
sub
insb
jecxz
xchg
push
mov
cld
jae
fnstcw
outsb
fs
fdivrs
dec
lds
sbb
or
fsts
mov
gs
sbb
push
aad
jmp
nop
mov
je
jp
mov
stc
sub
cmp
add
addr16
icebp
es
in
push
dec
loopne
aaa
add
mov
add
std
in
mov
lahf
push
mov
jae
push
jecxz
cmp
xlat
sbb
ffreep
add
xor
rcr
inc
xchg
std
cmc
popa
cwtl
test
das
add
mov
clc
jp
pop
sub
jo
jl
in
sub
div
jl
pop
fs
mov
cmp
in
dec
in
inc
adc
cmp
fimuls
pop
sbbl
jecxz
icebp
lods
and
filds
int3
pop
mov
es
call
aad
fcmovu
movsl
addr16
cld
push
aam
mov
adcb
testl
js
mov
pop
loop
fcoms
ja
mov
dec
fcmovnu
mov
mov
jmp
ret
or
sub
mov
je
sbb
pop
bound
cmpsb
cmp
sbb
pop
popw
pop
jno
icebp
rcrb
icebp
out
push
mov
cmp
sub
sbb
push
sub
je
mov
test
sub
jg
es
jmp
or
cli
jp
mov
imul
mov
pusha
cltd
push
cmpsb
test
pop
mov
jge
icebp
mov
fcmovbe
aaa
xor
xchg
aaa
popf
pop
dec
das
mov
call
push
sbb
sub
fdiv
cmp
test
outsl
jmp
xchg
fisubl
dec
lock
add
cltd
out
outsb
adc
pop
mov
out
js,pn
dec
sub
jne
dec
outsl
adc
push
in
or
adc
mov
pusha
sbbl
xchg
out
mov
aas
pop
xor
or
mov
sbb
in
add
pop
inc
push
jbe
lock
mov
sbb
stos
mov
push
fdivrl
cld
xchg
sbb
mov
enter
sub
pop
mov
out
xor
xlat
xor
cli
in
cmp
ficomps
roll
roll
addr16
pusha
dec
rolb
iret
push
add
inc
mov
vpaddd
mov
cmp
leave
divl
movsl
mov
mov
and
sub
scas
push
dec
cmp
ficoms
or
nop
das
cwtl
in
ficomps
fwait
jecxz
cli
ss
push
mov
mov
shll
icebp
inc
cmpsl
jl
xor
pop
cwtl
and
mov
popf
pop
push
rolb
and
dec
loope
jno
pop
ret
dec
js,pt
xchg
jle
les
mov
cmp
mov
aad
shrl
lock
out
add
add
dec
aam
mov
jg
fstpt
mov
adc
adc
pop
lea
inc
push
cmp
lret
sahf
sbb
mov
push
fwait
jp
xor
iret
imull
jle
jp
or
test
push
and
push
insl
fmull
mov
das
adc
repz
jp
nop
hlt
rorb
mov
jmp
lret
or
clc
cmc
cmpsl
out
iret
jno
mov
push
pop
repz
mov
mov
cmpsl
sub
insl
mov
sbbb
les
mov
in
pop
cmpsl
jmp
outsl
xchg
rol
push
mov
adc
gs
mov
cs
cmp
sub
pop
sbb
mov
cli
lret
cmpb
push
jns
leave
lcall
xor
lock
sub
ds
shll
jmp
sahf
sub
gs
sti
repz
or
movsl
aad
pop
ljmp
sbb
cmp
and
xor
daa
sbb
fs
pop
test
push
cmc
add
add
push
insb
push
mov
mov
push
sub
lods
addl
inc
mov
mov
lock
xor
addb
mov
lock
jnp
fstpt
repnz
sbb
push
or
sbb
in
inc
fnstcw
cmp
fisttpll
scas
sbb
fsubs
jl
add
mov
js
lcall
pop
insl
sbb
lods
add
or
sbbl
les
xchg
cmp
sbb
push
add
xchg
and
push
cmp
mov
add
test
jno
idivb
and
sbb
fmull
pop
lea
pop
xor
in
stos
rcrl
xlat
mov
mulb
je
adc
push
in
jmp
pop
add
repnz
movsb
inc
popf
ljmp
dec
in
mov
aas
outsl
cmp
lcall
xlat
mov
rclb
rclb
sarl
lahf
sbb
or
mov
sbb
cmpl
and
mov
cwtl
sub
push
xor
xchg
or
in
scas
test
pop
call
mov
xlat
lods
jge
mov
xor
test
jo
jmp
dec
cltd
cli
dec
arpl
sub
sbb
sti
or
lods
mov
mov
mov
jns
jne
adc
xchg
ds
or
lock
std
push
dec
ret
out
mov
adc
in
call
xchg
cmp
in
mov
in
sbb
arpl
ja
pushw
jg
push
inc
pusha
mov
adc
pop
push
xchg
test
aad
cwtl
mov
sti
inc
nop
jl
dec
pop
stc
jnp
push
inc
cmp
pop
fadds
inc
lret
rol
jns
jb
repz
xchg
fcompl
mov
loope
shrl
movsl
ret
rcrb
push
jbe
sbb
inc
mov
dec
sbb
xor
arpl
in
jge
cmpsb
and
or
dec
xchg
jno
lret
sbb
imul
mov
jmp
sbb
adc
mov
imul
push
out
rcrb
fldt
jp
aad
pop
testb
jmp
add
es
push
gs
into
les
lods
pop
mov
mov
add
sub
xchg
sbb
cmpsb
in
and
loop
ficoms
fists
sbb
rorl
pushf
out
fldenv
cmpsb
ds
ret
xchg
pop
push
popa
int3
int
mov
dec
fdivrl
mov
mov
inc
out
imul
cs
outsb
mov
movsl
lcall
mov
dec
aaa
cld
pop
out
andl
fcmovnbe
in
lret
cli
fimuls
test
setge
or
in
call
jns
cmp
insb
fldl
mov
push
mov
ds
mov
aas
jmp
aas
jb
jbe
sbb
leave
lahf
icebp
push
adc
je
test
mov
or
je
pop
mov
sbb
aas
mov
xor
inc
movsl
mul
mov
mov
push
mov
inc
popa
inc
jns
clc
std
dec
push
inc
sbb
fldt
lret
js
ss
call
shlb
insb
push
push
xchg
mov
shl
cld
shl
pop
and
mov
inc
aas
lds
shl
subb
jmp
stos
sbb
aaa
push
inc
pop
cmp
mov
cs
aam
add
xchg
sub
mov
test
push
sbb
jo
lret
jl
daa
push
add
fldl
xlat
rcl
imulb
mov
fcompl
mov
cltd
and
jb
pop
inc
push
sub
jl
dec
lahf
and
or
mov
mov
outsb
stc
push
cwtl
loop
adc
mov
bound
adc
dec
outsl
fdivs
addr16
xchg
or
xor
mov
add
lret
add
ss
add
sbb
mov
je
adc
push
mov
sub
aam
pop
sub
cwtl
lods
jbe
sub
xchg
rorb
and
repz
int3
mov
loope
rcl
lods
out
flds
insl
lods
fdivrl
imul
sarb
rclb
xor
add
push
pushf
inc
les
orb
add
andb
bound
es
jne
inc
outsl
mov
lea
mov
ljmp
jo
outsl
pop
xor
call
faddp
mov
ja
into
jle
sub
cli
cmc
scas
pop
repnz
cs
jne
mov
ja
aas
inc
jge
add
sbb
sub
cmp
pop
xlat
lcall
inc
dec
dec
and
mov
jecxz
jne
sbb
jbe
fsubrl
fdivrl
fistl
inc
dec
xor
stc
adc
decl
ljmp
sahf
call
scas
sbb
in
xchg
adc
out
push
push
aam
inc
mov
movsl
mov
stc
mov
fistpll
xchg
xor
sar
sti
mov
mov
shlb
outsb
jae
ret
icebp
mov
xchg
aas
fidivrl
or
arpl
popf
mov
mov
adc
int3
push
mov
or
pop
lea
in
lahf
fwait
dec
hlt
test
mov
addr16
fdiv
pop
xor
sbb
cmpsb
ret
leave
push
fwait
cld
xlat
loope
ss
and
aaa
pop
repz
in
xchg
and
outsb
mov
pop
jecxz
jnp
mov
mov
enter
stos
test
and
jno
fimuls
xchg
in
fadds
mov
cmp
jle
loop
pushf
inc
outsb
shlb
enter
pop
dec
cmp
das
out
nop
ret
pop
lea
repz
pop
fcoms
outsb
psubq
push
es
dec
mov
cmpsl
dec
aad
lods
out
cmpxchg
movsb
jnp
and
sub
cmpsb
mov
add
lret
repz
outsb
inc
push
mov
push
jecxz
aaa
sbb
or
jns
xchg
dec
mov
sub
or
push
test
int
dec
add
mov
or
pop
inc
sub
mov
loop
cmp
lret
sarb
gs
xor
ret
cmp
add
xor
scas
inc
and
je
inc
out
push
pop
inc
sar
xlat
push
addr16
adc
cmp
mov
fwait
das
mov
sbb
neg
adc
aaa
movsbl
or
gs
std
xlat
mov
mov
cmp
add
lea
fiadds
xchg
addb
fdivrp
push
mov
cmpl
and
js
ja
inc
inc
mov
mov
push
aaa
icebp
lods
pop
mov
inc
jmp
mov
add
dec
inc
inc
cwtl
cmpsl
mov
pop
xchg
mov
cmp
push
sbb
test
jle
add
sub
sub
jnp
dec
inc
adc
push
aad
jecxz
jbe
fmull
stos
lods
jp
ja
int
fisttps
and
xlat
mov
mov
shll
xchg
pop
add
inc
pop
mov
nop
fcomip
loop
loopne
adc
jp
fcompl
inc
add
and
lcall
sbb
xor
push
inc
stos
xchg
dec
inc
aaa
out
aas
cmp
js
bound
mov
mov
stos
fistpl
xor
adcb
ss
xchg
pop
popf
jmp
and
and
jne
test
scas
cmp
mov
fadds
and
xchg
ljmp
adc
aam
lds
mov
out
add
xlat
mov
fiadds
xchg
and
jno
mov
push
mov
nop
enter
pusha
sbb
xor
mov
addb
jp
sbb
call
pop
mov
jge
sbb
xlat
aad
inc
popa
in
jno
or
pop
mov
hlt
in
inc
pushf
mov
lods
dec
ffree
push
inc
sbb
adc
es
enter
popa
stos
add
ss
adc
push
pusha
lods
in
jbe
push
pop
dec
jne
daa
ss
mov
inc
inc
or
dec
sub
push
sarl
xor
add
cmp
push
movsb
loop
test
inc
in
in
inc
dec
mov
xchg
orb
jnp
cs
cwtl
test
rol
dec
out
mov
pop
lret
mov
int3
ret
popf
stos
xchg
in
sbb
data16
mov
enter
scas
jl
js
sub
rcr
pop
inc
adc
fbld
dec
pop
xchg
xchg
out
cmp
and
pop
add
pop
mov
push
jno
stos
push
stos
pusha
jmp
mov
xor
sahf
jg
scas
cwtl
jmp
jb
fdivr
ljmp
fwait
bound
mov
add
repnz
mov
inc
and
leave
jmp
cli
das
int
movsb
ljmp
mov
lea
popf
inc
adc
mov
popa
pop
sbb
imul
xor
ss
int
add
fistpl
pusha
dec
in
push
and
add
leave
adc
popf
leave
sarb
lea
jl
sbb
notb
add
aam
movsb
cmp
mov
leave
pop
add
xchg
lods
adc
bound
out
xor
jp,pn
jge
sahf
stos
icebp
cmp
mov
lea
call
ret
je
add
faddl
mov
in
lock
ret
mov
mov
imul
inc
xor
jbe,pn
cwtl
scas
mov
xchg
aas
xor
lcall
loop
mov
shl
add
sbb
orb
pop
jl
push
lods
xchg
and
sarb
decl
xchg
out
mov
cli
and
sbb
pop
cmc
push
into
xor
std
loop
jns
sub
mov
dec
cmp
mov
push
test
dec
out
dec
movsl
cmp
icebp
adc
icebp
xchg
in
mov
iret
jne
or
out
leave
jp
fimull
mov
pop
pop
mov
sub
xchg
imul
jb
out
mov
lret
sub
in
sbb
mov
mov
xor
or
lods
lret
add
mov
repz
imul
aaa
ljmp
and
adc
sub
aad
out
mov
dec
mov
xor
dec
mov
inc
inc
cmp
xchg
mov
jg
out
leave
mov
in
movsl
xchg
push
and
cmpsb
icebp
push
dec
out
xchg
mov
fucomp
mov
push
mov
into
cmp
repnz
jo
daa
icebp
adc
xor
push
repnz
xchg
cltd
loop
sub
ret
insb
mov
jbe
mov
sub
out
icebp
ret
fdivrs
pop
adc
push
mov
je
xchg
cmp
xor
xchg
les
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
mov
push
call
movl
jmp
movb
movb
movb
pushl
pop
mov
mov
push
call
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
mov
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
push
push
push
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
mov
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
push
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
push
call
lea
push
call
call
cmpw
je
push
call
push
call
add
jmp
pushl
add
pop
cltd
sub
jp
mov
add
pop
cltd
push
stc
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
add
into
fs
pop
aad
mov
xchg
mov
test
clc
inc
mov
pop
in
adc
repnz
mov
std
dec
lods
hlt
mov
test
pop
cltd
sub
pop
and
inc
mov
adc
loopne
lods
mov
add
adc
out
popf
cmp
mov
xorl
arpl
pusha
jnp
mov
and
push
fcmovbe
adc
nop
xorl
inc
fcmovnb
jmp
mov
add
and
add
jo
shl
or
sbb
xchg
js
lcall
inc
jecxz
cltd
sub
mov
add
mov
jne
stc
mov
add
pop
lcall
pop
cld
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
adc
pop
fwait
sub
mov
add
pop
cwtl
sub
repz
pop
cltd
xchg
mov
mov
add
pop
cltd
cmp
mov
adc
pop
cltd
sub
mov
add
pop
cltd
sub
xchg
mov
leave
mov
add
push
cltd
in
stc
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
roll
cltd
or
mov
cmp
pop
popf
sub
loop
add
pop
cltd
sub
les
cltd
sub
stc
mov
add
xchg
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
cltd
sub
mov
add
pop
faddp
mov
xchg
jp
cmpsb
clc
add
sub
jl
es
lock
into
jmp
push
int
pop
pop
mov
xchg
out
bound
orl
call
jg
xchg
adc
imul
and
insb
nop
sbb
inc
or
enter
pop
dec
pusha
mov
jp
ljmp
and
dec
loop
daa
lret
pop
pop
lea
and
pop
dec
push
mov
sahf
inc
pop
sub
cmp
cs
popa
mov
inc
into
mov
out
lock
icebp
xor
pop
jno
dec
cmp
push
xchg
dec
cmp
pop
fwait
es
shll
dec
mov
paddsb
dec
mov
add
mov
lock
xor
mov
es
aaa
mov
sahf
sub
repnz
aad
jl
iret
sbb
cmp
notl
lock
aas
cli
jecxz
repz
sar
cli
aaa
push
or
fnstenv
push
lea
popa
sub
jb
mov
mov
xchg
mov
push
adc
and
fcompl
popf
imul
sbb
mov
mov
enter
add
das
mov
repz
out
mov
push
jl
jbe
or
cmp
daa
pop
pop
bnd
mov
or
dec
mov
dec
push
mov
xchg
pop
mov
aad
shr
rol
jo
push
lret
pop
xchg
fisubl
fs
imul
outsl
dec
cmp
sbb
cmp
punpckhwd
outsl
scas
xchg
sub
incb
orl
lret
cmc
stos
adc
dec
leave
pop
js
daa
mov
roll
clc
popf
test
dec
loopne
inc
and
popf
xchg
adc
stos
dec
negl
andb
outsl
insb
dec
cmpsl
push
aas
out
jno
pop
test
movsl
xor
out
andl
adc
inc
cmpsb
push
pop
jns
sub
push
add
and
repnz
dec
cmc
push
lret
jg
or
inc
mov
sbb
test
lret
mov
mov
and
push
inc
lods
xorb
bnd
and
fidivrs
retw
push
clc
ljmp
test
jne
testb
adc
push
enter
call
loop
mov
adc
loop
sub
jne
mov
js
mov
jge
mov
les
cmp
shll
loopne,pt
inc
les
imul
push
sub
or
stc
sbb
sahf
mov
test
les
outsl
push
stos
aas
shl
lods
pop
hlt
dec
insb
xor
aad
push
inc
movsb
aam
inc
shlb
dec
lds
mov
stos
pop
push
mov
orb
ficompl
push
jne
insb
add
inc
mov
cmpsb
out
iret
lds
xor
mov
jnp
push
negl
mov
je
loope
jns
lods
jp
xor
add
or
popa
repz
scas
push
loope
ret
std
add
cmp
adc
push
out
fsubp
push
shlb
enter
mov
pop
cmp
in
aaa
mov
lods
aam
add
pop
imul
out
pop
es
cmp
lahf
mov
adc
jmp
cmp
rcll
js
jle
xlat
add
jnp
out
mov
into
dec
scas
or
jns
mov
fidivl
push
cmpsl
mov
push
incl
pop
out
jnp
cmp
mov
mov
or
out
jge
and
sub
push
jl
mov
fsubr
sbb
jo
scas
movsl
in
pop
or
add
test
inc
add
shrl
call
movsb
dec
add
pop
scas
add
lods
out
movlps
dec
outsl
xchg
and
xchg
mov
into
repnz
jne
ja
jbe
mov
ficompl
test
jmp
stos
mov
push
fstpt
out
pushf
ficoml
insl
jo
sarb
mov
shll
std
pop
add
rclb
pushf
jnp
mov
outsb
inc
adc
add
cltd
addl
into
jae
sbb
pop
lea
push
jno
mov
or
pop
mov
cmp
inc
sub
addr16
and
ljmp
mov
mov
in
pop
test
mov
lahf
nop
mov
dec
xor
mov
sub
cli
out
das
sbb
stos
mov
sbb
adcb
int3
push
repnz
mov
imul
je
int3
jecxz
rorb
or
aas
fisubs
sub
popf
and
and
dec
jb
adc
adc
fbld
dec
adc
pop
jp
fdivp
mov
insb
ja
cmpsb
push
arpl
jg
cmpl
aad
gs
dec
movsl
jno
int3
mov
lret
inc
mov
cmp
loop
fstpl
test
fwait
inc
aad
jbe
leave
notb
pop
xor
popa
and
lahf
mov
mov
dec
jge
ss
mov
mov
jnp
rorb
addr16
mov
mov
push
dec
incb
loopne
push
sbb
lods
data16
push
pop
inc
mov
in
outsl
dec
sub
jae
inc
pop
aaa
mov
adc
inc
xchg
sbb
aas
pop
xor
lea
sub
cmp
jae
repz
mov
cmp
and
push
call
fists
pop
cs
pop
scas
or
arpl
mov
xor
or
stos
xor
fidivs
daa
pop
shlb
iret
repnz
mov
pushf
inc
inc
xchg
mov
inc
mov
cmp
mov
lds
jmp
fmulp
mov
push
cld
mov
pop
or
in
gs
fcomp
jmp
cwtl
inc
inc
jnp
or
pusha
repnz
out
push
imul
fisubrl
in
adc
scas
fadd
adc
jg
push
shr
inc
and
aam
lock
and
pop
movsb
lods
mov
xor
mov
xor
or
icebp
jmp
mov
pop
mov
xlat
rclb
push
out
inc
out
rclb
xlat
int3
sarl
mov
mov
mov
mov
in
js
in
xrstor
out
fists
mov
iret
imul
divl
pop
test
clc
int3
lods
jmp
test
dec
pop
arpl
outsl
push
adc
das
pop
loop
ja
pushf
jmp
dec
pop
xor
and
movsl
sub
cld
pop
leave
ja
out
pop
sbb
cmp
test
cmp
popa
pop
mov
dec
pop
cs
cmp
sub
dec
sbb
jle
jecxz
pop
adc
add
scas
out
cmp
ljmp
out
lret
imul
fwait
pop
cmp
cmp
inc
jg
fstpl
rcll
sahf
xchg
xor
xchg
sub
xchg
xchg
daa
push
mov
lret
jnp
lods
inc
in
call
popa
pop
xchg
pop
pop
aaa
and
mov
imulb
imul
lock
adc
rclb
ds
pop
cmp
mov
pusha
jb
sbb
testb
jnp
cld
and
sub
jnp
mov
andb
ds
iret
icebp
jp
fisubl
pop
push
xor
mov
leave
cld
push
dec
mov
cmp
fcmovu
xor
in
mov
jae
jg
mov
mov
arpl
fidivrs
ret
das
shlb
xchg
push
mov
sar
jae
sbb
fists
pop
pop
jecxz
inc
int
fnstcw
pop
ds
inc
mov
jmp
movsb
mov
rorb
pop
in
mov
jg
aaa
pop
pop
out
sbb
leave
adc
add
shrb
xchg
rorb
cmpsl
mov
mov
jo
out
js
sahf
dec
inc
sbb
ficompl
xchg
aaa
xor
pop
scas
aas
push
iret
aad
or
and
paddusb
adc
rorl
and
fwait
icebp
loope,pn
pop
test
add
cmp
push
sbb
cld
int
push
jl
or
or
mov
pop
test
push
sub
bound
adc
test
sbb
push
popf
subb
pop
mov
mov
dec
mov
ds
insl
cmp
jae
cmp
mov
sar
push
mov
inc
or
imul
out
aad
rcr
insb
in
test
pop
pop
xor
pop
arpl
xchg
lds
or
add
add
and
enter
int3
cltd
ds
js
shlb
cmp
fs
int
jnp
pop
cmp
mov
sub
fldcw
dec
out
ret
cmpsb
xchg
nop
sbb
and
inc
cltd
add
and
jle
xchg
adc
mov
mov
movsb
loope
ljmp
or
lea
cli
cld
gs
or
jbe
and
xchg
rcrl
add
adc
cmp
or
movsb
sti
cli
xor
inc
push
jne
ja
iret
jns
push
sbb
jge
cli
jmp
adc
dec
out
mov
rorb
mov
xchg
mov
or
lret
xchg
mov
cld
xchg
into
aad
mov
insl
pop
xor
push
sbb
cmp
int3
xor
aam
fs
adc
ret
mov
and
mov
and
pop
rcr
out
cmpsl
mov
sti
sbbl
in
sub
inc
adc
jbe
adc
push
gs
pop
aam
push
jb
in
pop
mov
jno
loopne
and
rorb
scas
adc
pushf
or
sub
mov
fwait
test
adc
pop
sbb
mov
inc
into
cmc
mov
shll
sbb
data16
lds
or
dec
adc
push
add
inc
push
xor
sbb
pop
inc
pop
popa
or
stos
sbbb
clc
cmpsl
jl
push
bound
mov
add
jno
in
push
cltd
mov
and
mov
jne
icebp
xchg
pop
mov
sbb
outsl
gs
shll
fdivp
or
xchg
andl
pusha
jno
aaa
out
push
jae
out
das
xchg
nop
add
in
es
mov
mov
movsl
fisttpll
gs
pop
sub
jle
fldenv
pop
mov
fldt
aam
dec
push
jb
mov
push
inc
decb
mov
sub
xor
ljmp
pushf
movsb
fdivr
daa
in
fidivl
mov
movl
mov
adc
sub
call
push
scas
add
rcr
xor
pop
cwtl
push
jne
xlat
ljmp
rolb
and
xchg
inc
mov
and
aaa
mov
sub
jmp
inc
test
test
addr16
and
dec
xor
mov
xchg
or
add
out
daa
and
push
cld
insl
lock
fisubl
jecxz
in
add
mov
adc
popa
push
call
jg
sub
js
cwtl
cwtl
pop
xchg
sbb
push
pop
dec
and
sub
adc
mov
lds
test
push
pop
inc
mov
mov
inc
das
xchg
xchg
push
and
xchg
xor
es
shr
lods
test
out
and
aas
or
imul
pop
sub
inc
les
movsb
pop
lds
pop
int
jbe
adc
cld
ds
jno
inc
in
sbb
and
cld
adc
leave
lock
bound
jecxz
pushf
fstl
fistps
jae
shll
rolb
call
push
mov
es
cmp
mov
adc
cmp
inc
add
push
call
xor
add
ret
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
