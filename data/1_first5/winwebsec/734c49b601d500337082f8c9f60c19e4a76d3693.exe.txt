push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
xor
sbb
or
lret
add
mov
inc
push
push
enter
xchg
orl
hlt
push
mov
dec
xchg
cs
push
push
fnstsw
jbe
and
test
fnstenv
add
call
les
insl
push
xchg
out
pop
inc
repz
repz
push
mov
cmp
dec
fcoms
and
aas
adc
xchg
push
dec
fdivp
inc
dec
dec
fsts
adc
fisubl
in
and
and
lret
and
add
inc
pop
jbe
jg
ss
repz
xchg
mov
push
aad
aad
add
cwtl
stc
cwtl
es
cmpsb
mov
dec
xor
mov
in
jnp
xor
add
inc
fidivs
and
nop
mov
inc
mov
xor
mov
mov
shl
mov
cwtl
aad
dec
pop
loopne
or
xchg
mov
mov
inc
mov
dec
mov
add
subb
loop
ficoms
ljmp
aaa
mov
aam
push
test
jmp
dec
or
inc
adc
adc
push
fisubrs
loopne
stos
cmovns
xor
adc
ds
adc
sub
aaa
in
jp
sub
test
jmp
wrmsr
dec
inc
pushf
sbb
popf
push
pop
xlat
mov
xchg
repnz
xchg
imul
jle
xorl
adc
imull
loop
mov
and
push
mov
arpl
hlt
int
scas
jecxz
mov
mov
adc
xor
add
push
lods
mov
xor
mov
repz
xchg
mov
ljmp
movsb
push
jmp
xchg
notb
test
mov
dec
jp
pmulhw
or
xlat
into
mov
movsb
ret
add
fisttpll
cmp
sub
adc
shrb
int3
pop
out
sti
lock
push
mov
mov
or
cltd
adc
cld
popw
cmp
jl
pop
pop
lcall
loop
inc
js
mov
sbb
sbb
mov
mov
mov
cmp
add
movsl
notl
pop
scas
nop
mov
sub
add
sbb
push
mov
mov
gs
repz
lea
sub
loopne
jg
sub
or
inc
popl
outsb
jge
in
rorl
xchg
dec
scas
inc
and
lock
lahf
mov
mov
das
add
mov
movsl
nop
test
adc
arpl
push
fists
lds
add
mov
popa
loop
je
or
or
std
xor
jge
inc
insb
mov
sub
lods
pop
xchg
lret
rcrl
mov
jbe
fmul
pop
aam
imul
ljmp
cmp
xor
cltd
in
pop
or
push
pusha
iret
lds
scas
int3
jns
xorl
fldenv
inc
pop
pop
divl
xchg
and
jns
sbbl
das
mov
int
loop
pop
inc
xchg
adc
ror
sbb
pop
jl
dec
pop
mov
nop
cwtl
mov
popa
add
jg
jns
pop
aam
jecxz
dec
cmp
or
cs
ljmp
scas
ret
lret
pop
out
in
addr16
js
test
jns
add
and
lcall
jns
mov
pop
adc
pop
xchg
lret
arpl
loop
adc
dec
and
rcl
ds
cmp
mov
mov
mov
mov
call
jmp
and
mov
pop
dec
mov
rcrl
cmp
jb
add
adc
imul
mov
daa
out
cmp
std
ret
jne
xor
pop
sbbb
mov
into
idivl
adc
jge
test
imul
sarb
inc
repnz
scas
shrb
lcall
push
push
push
inc
cmp
mov
aad
jle
and
fwait
pop
clc
cld
scas
adc
add
add
cld
imul
test
roll
dec
sahf
sbb
push
in
mov
dec
scas
mov
sub
ret
xchg
in
pop
adc
imul
fnstcw
push
orb
pop
sub
jg
and
loop
inc
or
cwtl
sub
insl
inc
into
les
push
ljmp
xchg
or
push
add
sahf
fsts
ret
push
out
push
in
mov
jae
xchg
xchg
insl
xor
and
movsl
andl
push
pop
int
xchg
add
call
hlt
sahf
or
outsb
sub
push
aaa
popf
cmp
mov
xchg
test
lds
dec
mov
jecxz
pop
mov
cmp
inc
pop
stos
outsl
data16
and
pusha
push
mov
test
mov
mov
pushw
popa
mov
je
stos
mov
or
mov
insb
sahf
mov
push
hlt
fistps
js
nop
push
inc
es
lahf
imul
ja
shlb
stos
push
rep
add
adc
cmp
push
inc
and
imul
xchg
jle
add
inc
imul
add
xchg
xor
dec
fcomip
scas
mov
mov
out
pop
out
sti
insb
aas
jnp
jne
mov
in
scas
int3
sub
stos
xor
mov
jecxz
push
loope
sbb
int
adc
mov
clc
mov
cld
mov
pop
jne
dec
out
xor
dec
loop
xchg
mov
daa
xor
out
xlat
fisttps
aad
inc
adcb
addr16
inc
xchg
push
lods
fimull
mov
xchg
mov
pop
push
dec
mov
cld
adc
sbb
cli
xchg
testb
je
pop
lcall
mov
add
dec
stos
sub
mov
bound
inc
pop
dec
pop
in
lea
fnstsw
repnz
icebp
xchg
xchg
add
and
inc
dec
sbb
rorb
fildll
jno
xchg
lret
imul
dec
ret
pop
cmp
mull
mov
orl
andb
cmp
std
sbb
rcrl
arpl
mov
adc
and
mov
aaa
leave
xor
cmp
mov
cmp
push
test
push
repnz
adc
in
shr
and
lahf
cmp
jp
sarb
lods
inc
xchg
and
into
pop
fistl
mov
aas
or
div
fdivrl
dec
orb
cmp
mov
or
push
bnd
push
mov
repz
jae
fcmovne
aad
inc
mov
movsb
es
arpl
aas
jbe
imul
mov
and
fcmovne
fcoml
insb
xor
mov
lods
push
jne
imul
sub
push
imul
mov
dec
and
dec
data16
js
add
bound
lock
jae
cmp
mov
stos
sbb
shrl
lcall
jno
stc
xor
cmp
mov
xchg
push
cmp
std
xor
or
mov
lock
inc
mov
insb
scas
lds
pop
adc
dec
pop
into
scas
cmp
loopne
aad
es
xchg
jnp
hlt
into
gs
ss
sti
imul
pop
push
icebp
cli
les
sbb
mov
mov
aam
pushf
ret
imul
pop
mov
mov
iret
bound
xchg
scas
cmp
adc
in
mov
hlt
adc
mov
jbe
xor
icebp
in
jp
push
add
inc
lods
ja
fsubp
sub
mov
pop
and
mov
jne
xchg
lds
pushf
xor
mov
xchg
mov
scas
bound
xor
xchg
push
or
cld
mov
xchg
mov
call
push
pop
push
ret
lret
daa
fs
out
xchg
ret
add
jge
push
mov
enter
lret
scas
sti
xor
sub
stc
ss
test
sub
push
pop
cld
js
cmp
sub
mov
sub
pop
sub
and
icebp
dec
movsb
jmp
xchg
and
movsb
sbb
and
sub
pop
or
push
shrb
xchg
enter
fcomps
repz
shld
fwait
outsb
or
or
aam
lea
pop
add
xchg
hlt
dec
adc
jmp
add
cmp
mov
int3
xchg
cli
cmpsb
mov
out
jl
rcll
push
fnstenv
icebp
add
mov
mull
pop
xor
ds
pop
enter
mov
xchg
pop
push
jmp
call
mov
dec
pop
mulb
adc
call
ljmp
mov
push
inc
adc
orb
dec
ds
sbb
mov
stos
arpl
vpshaq
push
jmp
repnz
jno
rcrl
dec
aaa
fs
jl
ss
inc
or
fwait
push
cmp
jns
lret
insl
cmpsb
sub
adc
aaa
mov
ds
pop
jo
insb
in
notl
push
js
data16
pop
addr16
outsl
icebp
mov
scas
jmp
mov
inc
sub
xchg
rcpps
and
ljmp
sti
mov
dec
mov
and
adc
mov
xchg
sbb
jge
fdivl
fnsave
in
xchg
arpl
xchg
out
push
add
sahf
je
lret
outsl
stc
loop
rorl
pop
out
mov
dec
and
xchg
sub
insb
testb
in
mov
xor
or
cmp
cmc
fdivrl
sahf
cld
mov
push
movsl
call
sub
cmc
cli
outsl
push
rorb
test
aam
andb
fstl
adc
jmp
pop
sub
lods
xor
xorb
or
shl
xchg
mov
inc
clc
fs
jg
dec
mov
push
aas
lcall
push
sub
shrl
sub
dec
ja
inc
loope
jns
mov
adc
mov
and
mov
mov
xor
fwait
jg
pop
int3
or
mov
int
pop
inc
mov
cmpsb
sub
jne
sbb
and
insl
mov
data16
dec
in
cmc
and
pushf
sbbl
popa
or
imul
fdivs
sub
sub
jmp
mov
dec
sti
popf
lods
lea
cmpb
fistl
gs
aaa
lods
ror
lret
insl
call
mov
pusha
jae
inc
data16
adc
sbb
std
aaa
addr16
movsb
rorb
mov
stos
jl
add
jns
je
lret
sbb
jg
es
fistps
push
inc
sub
call
jg
push
das
int
pop
fildl
aas
in
mov
xor
mov
mov
dec
and
push
jmp
out
xchg
std
ja
add
pop
add
pop
pop
das
pop
sbbl
pop
test
loope
cmp
add
mov
cli
sub
stos
push
push
inc
fidivs
jnp
sbb
sahf
jmp
add
hlt
leave
lock
sbb
ficoms
or
pop
cld
add
sub
xchg
xlat
inc
aad
pop
sbb
jecxz
push
add
mov
adc
jl
inc
lret
enter
cltd
or
push
subps
mov
pop
mov
lods
lea
push
repz
iret
xchg
imul
adc
movsl
pop
add
sbb
mov
adc
xchg
test
fnstenv
xor
pop
ds
pop
mov
hlt
pop
cli
enter
and
stos
sti
mov
mov
sti
fdivr
insl
shlb
adc
je
or
hlt
xchg
insl
iret
mov
fisubs
and
add
push
movsl
sbb
fnstsw
jle
push
pop
mov
jmp
push
push
ds
bndldx
sub
in
push
clc
add
inc
pushf
icebp
lcall
xor
push
xchg
ret
mov
jb
adc
xchg
push
outsl
and
movsl
inc
lods
sub
inc
aad
xchg
popf
jge
or
cmp
int3
lret
xchg
outsl
mov
cld
push
push
mov
inc
mov
adc
push
jle
test
mov
mov
lret
pop
sti
arpl
xor
sbb
pop
mov
push
leave
stc
xor
cld
stc
sub
mov
cmpsl
fstps
insb
xchg
mov
lret
mov
in
pop
sti
shll
int
insl
notl
push
inc
test
jmp
mov
and
mov
int
in
or
bound
pop
insl
out
data16
cmp
or
shrl
out
pop
mov
mov
fucomip
adc
clc
or
xchg
outsl
jp
pop
inc
and
cmc
jp
out
mov
aad
pop
ljmp
sub
inc
dec
mov
or
xor
stos
mov
loope
or
pop
addr16
icebp
push
sub
imul
enter
shll
mov
sbb
sub
fidivl
scas
cmp
popa
clc
sub
ror
bound
add
mov
dec
pop
mov
mov
push
mov
push
inc
xor
and
sbb
jg
xchg
mov
jnp
push
dec
dec
sub
pop
hlt
enter
inc
mov
in
mov
pop
fildll
add
outsb
in
outsb
cmp
push
mov
ss
in
test
adc
pop
and
pop
inc
dec
pop
lea
dec
lea
pop
inc
adc
xor
fs
jb
int3
ret
test
mov
fildl
sti
sbb
push
add
or
movsb
test
loope
and
mov
popf
add
scas
adc
push
jno
mov
dec
sbb
dec
mov
xchg
loopne
testb
cmp
popl
xchg
sub
mov
ret
add
fldenv
call
insl
xchg
lea
sbb
xor
fs
xchg
sbb
sbb
mov
aas
je
notrack
jmp
loop
mov
out
mov
or
call
push
imul
es
jmp
imul
dec
sub
jecxz
cmp
shll
imul
cmpsl
xchg
cmp
or
into
into
mov
add
popl
mov
mov
es
and
ja
xchg
or
push
pop
pop
loop
cmp
mov
mov
in
jno
dec
pop
outsl
aam
sub
jp
cmpsl
push
push
cmpsl
outsl
or
sub
and
mov
das
lcall
xchg
xor
mov
insb
push
mov
pusha
mov
test
pop
dec
sub
pop
addr16
mov
aam
add
xchg
mov
pop
ljmp
adc
xchg
ds
cmp
push
ret
or
push
es
lods
out
push
ss
xchg
sbb
mov
pop
cs
add
xlat
popf
jmp
adc
pop
mov
shr
push
and
inc
inc
or
or
or
dec
es
jb
cmp
lea
ljmp
int3
jg
stos
mov
fwait
add
dec
cmp
sbb
and
cmp
pop
stc
mov
cmp
xchg
les
test
pushf
daa
jne
fcmovbe
std
daa
mov
or
stos
add
fstps
ret
cli
xor
xor
or
and
es
in
scas
push
add
xor
adc
out
xlat
xor
test
push
jle
add
pop
cld
loope
cltd
mov
xchg
ret
mov
add
inc
lret
and
xor
lret
cwtl
mov
mov
cmp
ds
fsts
lods
add
sbb
in
xchg
add
sub
sbb
push
aad
sub
pop
sbb
pop
fisttpl
cmp
aas
xchg
je
ss
aas
jg
sbb
xlat
enter
scas
inc
jle
xor
popa
nop
adc
dec
movsb
dec
jge
pop
pop
adc
adc
lahf
in
xlat
add
mov
mov
insl
arpl
stc
inc
out
push
loop
test
aas
xchg
mov
lcall
stos
dec
xchg
jle
mov
dec
int3
push
add
add
and
mov
or
clc
sub
inc
and
repnz
cwtl
pop
mov
test
scas
jg
add
pop
outsb
xchg
xchg
sarl
inc
cwtl
sbb
jecxz
dec
or
cld
roll
mov
stos
cmp
pop
es
cmpsb
stos
test
roll
stos
ja
sub
bound
inc
xor
xchg
push
jmp
jecxz
xchg
sahf
cmpsl
mov
shr
hlt
sbb
sbb
popa
fsubs
cltd
mov
sbb
imul
jo
jmp
andl
sbb
gs
lea
inc
sub
sbb
mov
out
add
add
and
repnz
push
aam
fcom
mov
and
lret
dec
inc
bound
addr16
into
and
int
orb
repz
mov
lcall
add
test
les
test
rolb
fucomip
mov
aaa
or
jp
pop
jne
mov
aaa
movl
idivl
cs
add
cmovae
push
xchg
or
mov
add
imul
mov
clc
jmp
sti
iret
lcall
mov
sub
ljmp
sbbl
pop
shlb
fcoms
ret
je
ljmp
add
notl
mov
adc
sub
cmp
jno
gs
movsb
pop
sub
sub
std
icebp
stos
test
out
xor
aaa
roll
shrb
ficomps
dec
cmpsl
inc
cmp
add
cmp
or
jne
faddl
out
cmp
jnp
sbb
into
push
jecxz
std
loope
adc
movsl
cmp
or
mov
lds
es
cmp
das
jmp
sub
clc
andb
aad
push
sarb
cmp
cld
out
push
jl
mov
fnstenv
mov
or
mov
fs
pusha
fwait
xchg
hlt
mov
sub
aad
repnz
je
adc
push
mov
pop
cmpsb
jp
scas
xor
push
mov
jmp
or
sbb
jo
call
pop
jl
mov
and
mov
mov
jbe
div
adc
movsb
cmc
loop
rolb
std
xlat
fwait
xchg
loop
add
mov
cmpsl
sbb
and
rorb
dec
daa
fidivrl
aaa
cs
aaa
sbb
jae
mov
outsl
test
icebp
scas
or
fwait
dec
jnp
outsl
lock
es
xchg
cmp
dec
adc
mov
mov
inc
add
rcl
push
leave
js
repnz
out
rcrb
cmc
adc
sub
adc
xlat
loope
imulb
ror
movq
cld
cmp
popf
add
call
xchg
out
sti
arpl
mov
cmp
jecxz
pop
inc
lahf
add
xchg
adc
les
mov
fwait
push
test
add
mov
mov
in
leave
scas
xchg
inc
mov
out
nop
jb
pusha
dec
xchg
pop
adc
cmp
pop
mulb
aas
pop
push
cmp
dec
xchg
lea
mov
aam
inc
sahf
pop
daa
fdivl
imul
jne
rolb
cmp
mov
mov
adc
out
adcb
mov
xchg
bound
icebp
fidivrs
and
or
loop
faddl
cltd
mov
loop
and
bnd
daa
pop
pop
xchg
mov
and
mov
icebp
mov
dec
dec
pop
mov
mov
cmp
cltd
xchg
push
xor
pop
mov
mov
cmp
xchg
insl
cmp
sub
push
pop
sub
popa
jp
push
data16
std
sub
jo
addr16
push
ret
xchg
cmp
push
jo
adc
rolb
jnp
xor
sub
mov
pminsw
mov
or
rorb
mov
xchg
push
adc
fwait
sbb
ret
sub
push
fnstenv
push
push
pop
mov
pop
aaa
cld
fstpt
stos
adc
popa
or
out
jb
cmp
xor
shl
sbb
fadd
negl
ret
aam
test
test
int
add
cltd
pop
iret
lahf
jb
test
inc
inc
fildl
xchg
mov
mov
repz
in
dec
into
pop
xchg
ret
idivb
stc
push
inc
mov
loopne
std
repnz
push
orl
pop
dec
clc
fdivp
xchg
cmp
sub
xchg
test
jle
shlb
and
adc
stos
pop
imul
fxch
jmp
test
push
dec
mov
sub
pop
out
sarb
jbe
sbb
int
or
test
rorl
mov
ret
repnz
cmp
stos
pushl
xchg
xor
lods
push
stc
add
outsb
push
push
sahf
jg
push
mov
sub
sbb
pop
mov
sub
sbb
cmp
cmp
adc
dec
mov
inc
jbe
pop
sbb
mov
aam
cmpsl
ds
dec
dec
lcall
or
in
fisttpll
rorb
out
jmp
jne
cmpsl
in
push
nop
ljmp
dec
ljmp
pop
ss
sub
or
adc
in
jp
sub
mov
pop
lcall
imull
fdivrl
and
popa
inc
inc
insb
cld
out
dec
testb
sub
lret
sbb
inc
aad
ss
fdivrl
mov
mov
stc
sub
push
xor
sbb
in
xchg
mov
enter
pop
push
dec
cmpsl
jbe
pop
in
jo
ljmp
fisttps
mov
mov
test
jp
add
loope
iret
push
fld
out
negl
or
sti
xchg
mov
jl
or
xchg
test
push
adcb
or
mov
call
popf
xchg
mov
fst
lcall
jle
xchg
int
sbb
sbb
movsb
adc
shl
mov
mov
add
icebp
xchg
xor
out
xchg
adc
mov
sbb
lock
dec
xor
mov
push
sub
cmp
ret
shl
or
loop
inc
popl
cltd
mov
je
adc
inc
sbb
jnp
je
push
jne
push
lret
pop
cmp
jp
outsb
hlt
insb
jnp
stos
push
lcall
int
mov
inc
adc
nop
xor
in
pop
lock
sub
test
je
sub
xchg
fs
int
outsl
xchg
jecxz
lock
add
dec
cs
sub
pop
push
mov
adc
lds
scas
loope
inc
mov
sub
pop
xchg
and
loope
ficoms
pop
jae
jno
dec
sub
and
ror
pusha
imul
loopne
dec
push
mov
neg
enter
push
adc
test
int3
and
jae
scas
mov
inc
icebp
clc
xor
mov
lea
mov
cwtl
sub
movntq
sarl
mov
stc
filds
pop
mov
ret
or
lret
adc
es
rcrl
xchg
shl
movsl
mov
insb
sahf
jno
pop
test
lock
rcpps
in
xchg
mov
mov
fisubrl
insb
js
fistpll
lahf
js
push
pushl
dec
and
pop
add
scas
mov
aas
sub
sbb
sbb
mov
push
idivb
jmp
fwait
mov
sub
mov
fdivl
mov
leave
je
loopne
dec
out
in
enter
std
popa
imul
mov
push
push
push
ljmp
pushw
fdivrp
mov
xlat
test
inc
push
sub
daa
cmp
repz
dec
lcall
ja
test
fldl
das
mov
lret
pop
pop
outsb
xchg
mov
sbb
sub
xor
push
in
mov
out
movsb
fdivl
xlat
dec
jns
mov
sbb
push
xor
mov
or
roll
sbb
dec
stos
test
imul
ffree
add
pop
or
enter
xchg
jecxz
mov
add
mov
imul
enter
adc
call
push
in
shr
imul
in
das
lods
mov
or
jp
cli
pusha
punpcklbw
clc
movsl
das
cmp
xchg
in
ret
xlat
mov
int
xor
gs
lcall
lock
mov
sub
adc
pop
mov
mov
dec
add
int
mov
mov
mov
in
jle
add
xor
and
lret
dec
xchg
sub
add
and
das
pop
mov
addr16
scas
mov
push
test
mov
andb
mov
icebp
push
xchg
clc
add
xchg
orb
xor
mov
mov
sbb
std
mov
lcall
mov
sub
test
push
xor
aam
or
sti
fsincos
ret
push
insb
push
lods
fildl
mov
sbb
mov
inc
ret
jl
mov
inc
adc
iret
pop
outsb
xchg
add
and
aas
fisttpl
cld
lret
xor
sub
adc
add
rcll
rcll
and
test
xor
xchg
xchg
pop
shl
mov
cmp
out
cmpsb
jne
movsb
xchg
mov
xchg
jo
imul
pusha
jns
pushf
or
inc
scas
dec
push
hlt
jl
scas
rep
push
inc
xchg
fcmovb
sti
cmp
jge
out
movsb
iret
xor
dec
or
xchg
xor
push
gs
pop
jne
dec
mov
xor
arpl
outsl
clc
xchg
xchg
cld
mov
jmp
fwait
or
cwtl
xorl
cmpsb
out
daa
mov
fistps
sarl
out
pusha
cmp
aaa
push
pop
jg
popf
test
gs
loopne
ljmp
jle
jecxz
jecxz
movsl
jmp
std
cmpsl
dec
jnp
enter
shlb
test
pop
mov
push
mov
jnp
pop
or
and
jo
mov
adc
jnp
push
loop
jno
movsl
push
imul
pushf
or
xchg
add
or
mov
mov
jle
xor
xor
in
mov
sbb
sahf
push
inc
cmpsb
iret
clc
dec
imul
sti
xchg
fldenv
xchg
and
push
mov
mov
out
jg
ja
push
imul
inc
int3
in
pop
add
cmp
adc
push
das
arpl
inc
xor
pop
pusha
pop
shrl
pushf
or
stc
out
pop
cwtl
in
or
in
push
push
les
lea
out
or
add
in
pop
out
mov
addl
movsb
imulb
aaa
scas
ljmp
aaa
jnp
cs
in
pop
jnp
inc
std
push
cmc
mov
pop
jb
or
divl
and
inc
mov
roll
mov
scas
adc
pop
or
or
aaa
jge
popa
mov
shl
cli
adc
sti
push
cmp
in
jae
testb
add
ds
sub
inc
hlt
and
loop
mov
cmp
mov
fildl
std
andb
push
mov
push
xor
enter
insl
inc
dec
aad
push
or
out
jne
sbb
inc
sub
in
insl
push
xor
mov
shll
sub
or
mov
push
push
test
mov
lods
repz
ret
mov
stos
cmp
xor
lahf
bnd
mov
test
or
add
jg
push
push
sti
pop
subl
inc
daa
mov
test
pop
nop
insl
jno
je
daa
pop
hlt
aad
repnz
pop
clflush
dec
cmc
cwtl
nop
dec
jo
xor
push
je
xorb
add
dec
leave
inc
in
lret
inc
or
mov
movsl
push
mov
or
jnp
popa
xor
cmp
jb
jp
lea
mov
pushf
inc
mov
hlt
paddsb
add
push
sahf
cmpsl
imul
sbb
imul
cmpsb
rol
inc
mov
xchg
inc
push
popf
or
dec
cmp
pop
or
adc
jmp
aas
das
ds
xor
mov
ss
shll
dec
scas
ss
add
jg
stos
cld
mov
adc
cmpsb
mov
jno
cs
idivl
icebp
lret
sbb
inc
sbb
lods
fcmovu
cwtl
sbb
jmp
sahf
inc
jb
xchg
out
push
add
push
call
mov
cmp
lahf
shl
lret
inc
jnp
and
fs
and
fnstcw
js
or
mov
aas
shll
adc
jmp
cmpsb
push
fcomps
jae
sub
or
jo
lcall
iret
addr16
adc
sbb
fcoml
les
and
cmp
adc
mov
out
faddl
xchg
pusha
adc
cltd
xlat
shrb
fs
adc
rol
xor
lret
cli
sub
ds
fs
sti
jne
shlb
inc
fucomip
xchg
sub
scas
xor
jle
imul
inc
stc
sahf
xchg
fmull
ss
ret
pop
jmp
push
and
xor
cmp
inc
sub
test
movsb
or
pop
jecxz
repnz
inc
mov
aaa
add
cltd
adc
jbe
jge
or
lods
insb
xchg
xlat
fdivrl
nop
leave
mov
movsb
mov
clc
push
popf
cwtl
out
mov
call
mov
sub
mov
jo
lods
cmp
xor
lcall
mov
jb
xchg
daa
jmp
icebp
xor
inc
jle
or
inc
nop
adcl
jl
push
imulb
in
inc
fistpl
sub
push
cld
aad
cld
cmp
jo
push
test
jmpw
push
inc
or
mov
jp
shll
das
jbe
fwait
add
mov
push
int3
mov
push
dec
or
xchg
lahf
adc
sub
arpl
and
mov
std
mov
xor
push
lods
xchg
cmp
cmp
and
ja
rolb
sub
repnz
sahf
scas
into
xor
or
fs
jg
int3
ret
jmp
dec
lcall
push
xchg
movsl
jo
in
jo
sbb
mov
push
mov
sbb
push
jo
sahf
dec
add
push
int3
adc
sub
das
mov
push
push
into
mov
cli
mov
cmp
in
in
jp
shll
add
xchg
fwait
add
popf
jns
lahf
jmp
sub
in
fcmovb
pushf
xchg
dec
mov
popf
sti
inc
adc
sbb
not
dec
jo
xchg
jecxz
lods
divb
subb
pop
dec
shlb
mov
cltd
test
shrb
push
jecxz
inc
dec
mov
gs
lods
and
cmp
push
dec
shlb
xchg
pop
jge
push
and
jg
dec
loopne
push
scas
add
xor
adc
arpl
mov
adc
mov
lea
xor
xchg
into
inc
lds
fnstenv
ljmp
mov
mov
or
sbb
lret
mov
shl
jge
cmp
mov
lock
cmc
jo
jle
pusha
pop
cmpsb
sti
mov
mov
subb
or
shrl
in
mov
test
movsl
popa
dec
inc
shl
and
shrl
sbb
xchg
jno
int
pop
aam
or
add
pop
out
je
ret
xor
inc
and
push
and
inc
imul
mov
dec
dec
sti
push
add
xor
sahf
into
pushf
sub
test
sbb
push
or
pusha
xchg
mov
jp
push
mov
movsl
mov
and
es
adc
or
xlat
sbbl
inc
das
sub
hlt
cmp
lret
inc
mov
test
lods
and
nop
mov
mov
rorb
clc
fists
sub
loop
sbb
pop
jbe
inc
xor
popf
test
lds
xchg
test
stc
xchg
pop
xor
mov
push
and
scas
add
mov
repnz
iret
cmp
test
push
cs
js
insl
pop
pop
dec
sbb
std
inc
dec
iret
adc
push
mov
pusha
dec
dec
jb
sub
cmp
xchg
lret
pop
mov
adc
scas
es
jo
test
divb
out
inc
adc
or
mov
mov
cli
dec
aad
iret
mov
fidivs
lds
xchg
cmp
push
mov
add
bswap
repz
js
insb
and
mov
push
pop
fadds
mov
add
das
inc
outsl
xchg
jno
cmp
push
imul
fsubrl
arpl
mov
jae
adc
daa
mov
leave
dec
stc
addr16
push
cmpb
push
in
mov
fs
mov
push
sub
es
ret
mov
addr16
and
das
dec
dec
fcoms
fs
enter
push
pop
pushf
out
lock
loop
pop
sub
mov
scas
mov
loope
xlat
push
out
outsl
dec
bound
dec
cltd
mov
adc
nop
xchg
lret
xchg
push
sbb
push
ss
fidivl
pop
mov
in
add
mov
fwait
mov
out
cmp
mov
rorl
out
aaa
fimull
orl
cmp
outsb
cmpsl
daa
clc
adc
jne
cmp
out
adc
jo
mov
jp
dec
mov
push
jnp
mov
push
pop
inc
lods
cmp
mov
pushf
iret
cltd
bnd
inc
or
sub
cmp
pop
add
mov
push
out
sub
cwtl
pop
cmc
pusha
stos
xor
push
fists
or
sbb
mov
insl
xor
inc
mov
mov
pop
pop
aad
cmp
shll
push
std
xchg
xor
pusha
call
fisubrl
mov
xchg
fbstp
jp
inc
fnstcw
ret
and
cmpsl
jge
shrb
cmc
dec
or
inc
imul
outsl
push
push
sub
mov
cmc
lret
in
sub
rolb
lcall
mov
mov
aad
mov
fs
cmp
ds
mov
xchg
xchg
addr16
movsb
or
enter
pop
fsts
xchg
sbb
clc
push
out
stos
mov
cwtl
xchg
clc
in
fisttpl
inc
cmp
int
jle
fcom
outsl
repnz
fsubs
rcl
fidivl
xchg
jmp
mov
xchg
sub
jg
dec
sub
jge
ja
dec
jnp
mov
and
and
cltd
loopne
negb
loop
loope
jecxz
movl
fs
js
sbb
adc
dec
shll
mov
movsl
xchg
adc
cmp
aas
mov
negl
mov
adc
jle
xor
cmpsb
out
movsl
inc
gs
inc
sbb
leave
xor
fcomps
leave
push
cvttps2pi
mov
test
xor
outsb
iret
add
and
push
stos
mov
add
inc
mov
cmp
inc
sarl
mov
arpl
pushf
dec
jae
scas
hlt
aam
mov
xchg
cmpb
or
inc
adc
test
icebp
mov
arpl
pop
daa
loope
test
jp
imul
sub
mov
dec
xchg
adc
arpl
sti
into
sbb
mov
aad
or
in
mov
or
stos
sbb
movsl
testb
les
stos
xchg
push
mov
aad
imul
mov
push
inc
sahf
rcrl
out
inc
jno
xor
pop
lea
inc
test
mov
out
clc
test
or
clc
and
pusha
pop
fstp
or
push
lock
rorb
mov
xor
pop
lods
jmp
icebp
es
or
inc
imul
stos
into
xchg
jp
mov
lret
pop
inc
aaa
pop
pop
push
push
fnstenv
insb
or
mov
adc
cmp
fldcw
or
push
int
and
les
fwait
out
add
rol
das
add
rcl
js
jnp
popa
fildl
mov
shrb
sub
sahf
punpcklbw
fidivrs
mov
iret
and
nop
scas
sub
mov
mov
test
aam
push
mov
mov
mov
jp
push
mov
call
addb
test
jnp
pop
movsl
loop
adcl
jl
add
cmpsb
jno
mov
sti
sub
and
mov
mov
testl
pop
mov
adc
xchg
iret
sbb
ret
mov
and
mov
lret
dec
sbb
pop
jecxz
mov
fwait
or
add
pop
dec
fists
shl
add
mov
jp
jmp
ror
ret
xor
cmp
cmp
adc
mov
cltd
movsb
or
cwtl
lods
adc
dec
jg
es
push
mov
mov
mov
loop
xchg
xchg
out
jne
mov
and
popf
rcr
xchg
cmpsl
jmp
in
xor
sub
mov
dec
iret
lahf
mov
dec
and
xchg
cmp
cmpl
scas
adc
aam
push
adc
in
sbb
xchg
xlat
and
out
cmp
fildll
repz
xchg
clc
mov
sub
iret
push
push
imul
out
nop
sub
std
sbb
mov
mov
jecxz
test
popf
jle
jb
sub
mov
shrb
loopne
incb
fisttpll
punpckhbw
mov
mov
daa
pop
iret
scas
out
shrl
mov
mov
or
dec
call
jb
movsl
lods
arpl
flds
jne
adc
mov
pop
or
mov
das
test
mov
in
jnp
inc
gs
and
add
dec
stos
out
inc
adc
jns
loope
sub
test
adc
cmp
cmp
mov
out
mov
mov
cmpsl
scas
cmova
int3
cmova
push
dec
lock
imulb
sub
sub
enter
in
adc
adc
adc
test
xchg
sbb
xor
stos
or
aam
lret
clc
jl
out
mull
outsb
dec
adc
je
lods
cs
mov
inc
mov
xor
push
sub
mov
test
pop
fs
mov
adc
pop
adc
std
dec
cmp
aam
inc
and
loopne
fcoms
fdivrs
push
push
popf
neg
lods
adc
add
sub
sahf
xchg
jle
in
test
movsl
scas
pop
pop
push
aam
sub
inc
jne
in
sbb
or
pop
popa
and
jo
std
add
pop
repnz
scas
test
xor
xchg
in
xor
and
loope
jns
mov
int
sub
cwtl
mov
mov
lahf
pop
pushf
mov
xor
shlb
aam
scas
add
repnz
add
xor
mov
sub
pop
pop
mov
add
loope
scas
ss
int3
or
clc
jo
idivb
cltd
mov
cwtl
xchg
mov
xor
mov
or
xchg
and
mov
push
adc
xchg
out
arpl
add
push
mov
push
cmpl
jbe
mov
mov
imul
ror
mov
movsl
mov
mov
out
jp
jg
or
push
das
mov
out
fsubl
std
lret
test
dec
pushf
mov
rcll
loope
pop
inc
stc
jl
push
scas
sbb
sub
push
push
or
stos
js
mov
out
or
jns
add
pusha
mov
out
aad
sub
sbb
sbb
jbe
idivl
push
jl
pop
push
scas
test
popa
mov
aaa
outsl
adc
dec
cmp
pop
jns
mov
int
push
cs
inc
or
pushf
test
daa
sub
in
xchg
stos
cmp
arpl
mov
out
push
adc
roll
punpcklbw
jno
xchg
add
jg
mov
xlat
fs
xor
imul
mov
cli
cwtl
or
push
rdpmc
xorb
sub
add
inc
mov
push
sub
stos
mov
popa
jecxz
push
fmull
adc
cmpsl
insb
sbb
les
divl
sbb
pop
in
jle
mov
mov
lds
roll
ds
or
ds
pop
ljmp
fisubrl
add
lods
jmp
lock
inc
pop
mov
int3
sub
and
cmp
mov
cwtl
outsl
or
push
pop
loopne
rcrl
dec
imul
add
repnz
push
and
in
fcomi
xchg
or
rorb
inc
cmp
loop
out
subl
jl
popf
mov
inc
sbb
add
jg
mov
out
dec
adc
pop
jne
int3
imul
cmpsl
cmp
inc
push
icebp
mov
iret
xchg
stos
popf
and
movsb
pushf
rcrb
subl
insl
add
insb
scas
mov
jge
push
lods
lret
and
mov
hlt
decb
mov
jg
sub
pop
or
push
test
rcrb
mov
sbb
ja
cmp
or
sub
popa
sbb
jle
outsb
push
and
clc
fdivrp
sbb
mov
fadds
aas
gs
test
pop
pop
mov
cmp
push
aad
or
jae
pop
test
mov
mov
enter
push
scas
enter
pusha
xchg
leave
cltd
popa
mov
xchg
cmp
pop
cmpsb
fdivrl
xchg
inc
and
jle
nop
lods
in
add
shll
xchg
stc
fmull
mov
filds
data16
or
inc
scas
inc
notb
jg
je
jno
xor
or
call
aam
mov
sub
addr16
adc
std
jo
fimull
mov
scas
xor
push
mov
sub
insl
mov
mov
imulb
int
xchg
icebp
lds
cwtl
dec
push
mov
lock
cld
add
addr16
fistl
xchg
push
es
shrb
hlt
in
test
movsl
mov
fnstenv
dec
aas
aad
push
pusha
sub
inc
push
stos
add
mov
add
inc
push
fsubs
ljmp
pusha
xlat
fwait
jnp
popa
sbb
fildll
add
mov
jge
xlat
push
out
shrb
scas
mov
adc
push
loope
ja
push
or
js
inc
push
jmp
jo
push
dec
jg
or
dec
mov
sub
mov
sub
int3
divb
mov
pop
aaa
inc
imull
push
sub
push
adc
ja
popa
cmp
ret
adc
xchg
push
insb
rcr
pop
loope
insl
out
jb
and
and
icebp
scas
gs
sbb
call
adc
jb
shr
sub
sbb
push
into
movsb
mov
gs
add
in
test
test
xchg
scas
scas
inc
ffreep
jne
xor
cmp
sub
rorl
xchg
iret
push
adc
fldl
push
fistps
and
fs
pcmpeqb
pop
sbbb
mov
out
ds
ss
xor
leave
xchg
dec
lods
mov
test
cmp
loop
xchg
outsb
mov
dec
or
add
pop
mov
pop
dec
sub
mov
and
and
or
inc
stos
sbb
push
pop
xchg
loope
inc
or
mov
xor
pusha
repz
lods
pop
sub
jnp
outsb
movsb
lret
movsl
out
and
shrb
and
adcl
and
cmpsb
fnsave
loop
jle
mov
mov
cwtl
fadd
repz
popa
jl
lock
xchg
loopne
and
insl
push
xchg
bound
sbb
fs
in
jns
ret
sub
cmpsb
push
aas
repnz
sub
fldenv
push
popf
add
aam
add
mov
int3
adc
push
nop
mov
mov
jns
xchg
sub
or
mov
xor
add
xor
pop
xor
testb
les
insl
mov
sbb
in
ja
sub
fistps
mov
xchg
neg
test
inc
pop
test
mov
fistl
sub
hlt
xor
sahf
fmulp
ud0
xchg
lahf
mov
les
pushf
and
das
in
dec
js
mov
js
scas
repz
and
cs
cmp
push
lahf
inc
subb
shl
pop
shl
jp
lret
cmpl
pop
push
lds
push
pop
das
rcrl
fdivrs
push
cs
pop
je
mov
inc
or
or
jns
xchg
ret
sub
mov
cmp
add
stc
jnp
sti
pop
inc
incl
mov
je
lds
jns
mov
inc
cmp
aad
adcl
dec
or
xlat
int3
idiv
fcomps
mov
shl
xchg
push
gs
inc
xor
or
xorl
push
sbb
lcall
xchg
sti
fucomip
daa
dec
ss
enter
adc
xor
daa
mov
ret
and
je
inc
mov
in
dec
pop
add
adc
xchg
add
jl
stos
adc
mov
add
repz
movsb
cmp
rsqrtps
popf
jp
xchg
xor
jmp
sahf
data16
add
cmp
xchg
lret
dec
xchg
movsl
inc
cmp
in
aad
movl
aam
lahf
pop
mov
mov
lea
ret
and
stos
push
loop
fistpl
xchg
lret
mov
mov
in
mov
xor
inc
cmc
lahf
and
jmp
inc
repz
gs
inc
scas
add
jb
inc
std
pop
mov
cmp
aas
les
xchg
jge
jmp
dec
popf
inc
into
shl
movsb
sub
loope
in
rcrl
in
pop
fmuls
sbbb
gs
dec
pop
icebp
sbb
inc
nop
lcall
in
lcall
int
push
xor
mov
test
sarb
mov
popa
mov
out
jg
lahf
mov
or
lea
push
jg
aaa
imul
cmp
cmp
jnp
ljmp
xor
inc
xchg
adc
sbb
adc
and
js
in
mov
push
fcompl
test
test
mov
cld
push
popf
mov
cmp
jno
loope
inc
sbb
lahf
cmpsb
jns
into
inc
dec
ret
adc
mov
mov
and
mov
fucom
ficoml
or
test
scas
test
mov
pop
outsl
sahf
repz
mov
ljmp
popa
or
into
outsb
pop
push
sub
aaa
jmp
mov
lret
dec
or
in
mov
inc
xchg
cmp
imul
mov
sub
shrb
mov
outsb
in
loop
insb
add
xchg
or
adc
pusha
push
sub
and
mov
enter
jl
popf
lods
loopne
loop
imul
into
inc
out
test
ret
jnp
jae
add
inc
inc
js
and
out
dec
std
popa
sub
outsb
imul
sbb
inc
call
mov
imulb
fadd
push
jge
insl
mov
inc
xor
loop
movsl
call
out
lds
lret
movsb
insl
mov
imul
sub
cld
addr16
es
push
mov
cs
imull
push
mov
and
stos
mov
roll
jp
cmp
mov
js
test
loope
imul
and
in
jb
cld
insl
sbb
lock
jo
das
lcall
inc
pop
sbb
fistpll
fcomps
ljmp
clc
push
sub
mov
fiaddl
stos
es
cmp
dec
jb
pushf
pop
xlat
test
jp
shrb
xchg
jg
in
lret
cwtl
call
mov
mov
out
jle
and
pusha
mov
fwait
push
sbb
cmp
pop
enter
arpl
sbb
or
cmpsb
jnp
jl
loope
sub
mov
daa
sub
stc
inc
loopne
pop
xor
dec
in
mov
aaa
inc
aad
loop
fildl
push
ss
xor
fsubs
aaa
or
std
cmp
pop
sbb
cmpsl
ficomps
inc
bound
mov
dec
mov
xchg
jg
dec
cld
lods
hlt
inc
rcrb
jae
cmpsb
movb
mov
out
add
add
call
sbb
jp
mov
adc
shl
enter
pushf
mov
inc
jno
jp
sahf
sub
add
dec
std
dec
add
pop
cmpsl
mov
xchg
stc
jo
int
mov
and
cmp
push
mov
cmp
fst
push
out
loop
loop
jg
into
xor
stos
flds
pop
aaa
mov
bound
in
mov
dec
mov
test
cs
and
pop
mov
push
dec
push
ja
jge
sbb
inc
es
das
repnz
ss
xchg
push
popf
add
popa
lods
cmc
subl
jae
jl
mov
and
add
mov
bound
mov
loopne
xor
or
dec
jae
sbb
inc
pushf
jno
lret
fstps
adc
repz
jge
jge
mov
std
cmc
imul
aam
mov
sbbl
movsl
or
adc
cwtl
lds
mov
sub
add
xchg
or
insl
popf
loopne
out
add
cwtl
cmpl
jae
addr16
das
cmp
jle
cmp
xchg
mov
dec
push
out
inc
outsl
and
pop
test
cmc
daa
test
nop
dec
aas
cmp
mov
mov
es
je
dec
lret
dec
xor
sub
pop
jg
cmp
fwait
mov
or
std
fstpt
mov
dec
sub
pop
and
mov
shlb
jl
das
lock
push
daa
insb
xchg
dec
add
add
mov
mov
mov
int
xchg
movsb
sbb
sbb
and
mov
loope
sbb
cwtl
insl
mov
in
std
dec
test
into
idivl
pushf
and
inc
lcall
lods
rcll
xor
mov
gs
daa
les
pop
fs
enter
push
xor
xchg
andl
pop
popa
cmc
fimull
repnz
out
add
xchg
xor
xchg
push
xchg
add
imull
inc
adc
jnp
lahf
sbb
add
push
fwait
bound
lret
sub
loop
mov
ret
cli
pop
jb
mov
lea
pop
int
imul
lods
jecxz
mov
and
mov
mov
pop
jecxz
add
ljmp
jmp
daa
or
loop
incb
cli
or
adc
leave
dec
dec
or
fs
subb
jo
aad
pop
xchg
mov
pop
jo
mov
pop
cmc
test
lock
imul
sub
mov
xchg
mov
test
xchg
ret
xchg
imul
ror
rclb
push
push
push
fs
lcall
test
xchg
sub
add
and
mov
xchg
out
test
push
jnp
mov
mov
sub
mov
cmp
in
faddl
add
ds
inc
mov
cmp
clc
lds
cld
inc
js
shr
sub
or
mov
test
leave
xor
popa
scas
scas
rorb
sbb
xchg
push
adc
pop
lock
mov
mov
jb
cs
xchg
cmpsl
movsb
mov
inc
ljmp
popf
cwtl
push
stc
push
jle
jle
add
ljmp
shr
mov
popf
into
xchg
xchg
sbb
sub
ja
mov
mov
jno
imul
push
aas
mov
scas
inc
jne
xor
sbb
in
call
cmc
xchg
adc
out
bnd
jae
fwait
sbb
lcall
adc
dec
push
scas
pop
or
pop
mov
stc
jae
aam
lods
and
push
push
imul
jb
xchg
cs
cmp
jg
mov
pop
out
insl
rorl
cmp
cmc
lcall
cmp
inc
shl
dec
jecxz
out
mov
xchg
pop
dec
and
inc
pop
rcrl
xchg
and
cmpsl
push
fsubrp
xchg
jne
or
rol
cmpsb
js
rcrb
and
sub
aad
das
xchg
outsl
push
pop
add
cltd
mov
mov
pop
ret
mov
jno
push
in
mov
fdivs
fs
insl
es
or
xchg
sbb
xor
sbb
cmp
and
repnz
sub
mov
pushf
jno
dec
or
sbb
data16
add
cmpsb
jno
sbbl
rclb
sarl
mov
cltd
fistpl
stc
mov
xlat
add
outsb
fiadds
cmp
mov
add
shll
cltd
imul
call
insb
loopne
aam
fcoml
lock
and
cld
aad
cwtl
mov
je
in
test
adcl
adc
sbb
aad
repnz
xchg
dec
jmp
ja
pop
sub
loop
loop
subl
inc
dec
mov
push
add
repz
xchg
add
mov
jnp
adc
xor
jo
sbb
ret
pop
jl
ss
insl
mov
lds
push
es
std
incl
into
sub
es
sub
cmp
stos
mov
ja
mov
cmc
mov
cmp
mov
push
inc
jmp
clc
cmp
jae
js
cmp
jns
aad
ret
adc
mov
or
movsb
sti
xor
fwait
aas
and
xchg
cmp
popa
lret
mov
movsl
push
nop
daa
pop
adc
sub
and
mov
sahf
push
stos
es
and
adc
jne
sbb
test
and
jl
jo
mov
mov
jmp
out
test
xchg
shll
inc
rorl
sbb
mov
mov
or
and
int3
fcompl
push
xor
js
jg
xor
in
inc
nop
push
leave
fistpl
arpl
lock
mov
jp
xor
cmp
dec
dec
sub
and
int
sti
jo
sub
scas
mov
mov
dec
dec
mov
lods
ret
cmp
xor
dec
jne
sbb
xor
dec
out
inc
jge
sub
xor
pop
lds
mov
mov
shrb
pop
xor
je
scas
sub
xchg
mov
push
fdivs
xor
or
pop
rcll
incl
mov
pop
mov
sahf
enter
jmp
ja
adcb
jno
adc
lcall
aas
jae
fnstenv
test
xor
jnp
in
mov
sbb
test
add
js
leave
pop
inc
push
cwtl
js
inc
add
outsb
add
xor
push
xchg
lcall
sub
fwait
mov
shlb
inc
int3
cmpsb
loope
adc
push
xor
dec
icebp
adc
sub
mov
and
and
aam
icebp
jl
sub
push
xchg
pop
mov
js
cld
pop
xlat
rcrb
insb
mov
jno
sub
inc
js
or
in
mov
push
dec
ds
dec
inc
pop
or
gs
mov
mov
dec
divb
push
xchg
mov
pop
add
movsb
in
cli
nop
pop
shrb
dec
and
or
cmpb
cs
lods
adc
sub
flds
popf
mov
or
dec
outsl
inc
fs
into
dec
gs
pop
xchg
pop
xchg
pop
jmp
xchg
push
jg
mov
into
or
cmp
lcall
imul
mov
mov
insl
leave
das
iret
and
test
cmp
addr16
push
push
sbb
mov
test
dec
ficoms
jnp
or
neg
inc
inc
addr16
and
pop
pop
loopne
cmp
nop
sbb
and
dec
rorb
add
mov
sbb
popa
mov
test
mov
adc
push
fisubrl
scas
mov
mov
sti
loope
aad
gs
les
test
jmp
dec
inc
into
rcrb
and
or
jge
movsb
repnz
and
mov
stos
cltd
fdivs
cmp
mov
xchg
lahf
jb
pushf
ret
lods
xor
sbbb
iret
jecxz
out
jne
add
add
jl
mov
pop
loope
xor
mov
jbe
fcom
popa
mov
adcl
es
pop
mov
dec
adc
xor
scas
sbb
fs
xchg
fucomp
das
mov
cmpsl
push
in
pop
rcll
aam
adc
mov
pop
shrl
sahf
imul
adc
or
xor
test
jae
jae
or
sar
mov
mov
inc
sub
cmp
jbe
ret
mov
insb
add
int3
ss
jbe
mov
and
cli
scas
mov
or
jmp
push
cmp
lahf
and
xchg
lods
cmc
push
popa
lds
out
add
mov
mov
shr
jo
lcall
or
mov
insb
fcmovb
notl
addr16
jo
dec
fidivrs
jmp
enter
add
xor
popf
aad
cli
rcll
or
adc
sbb
adc
xor
mov
dec
int
sbb
sahf
lock
jne
pop
push
jo
push
mov
outsl
add
out
shll
add
pop
test
inc
and
rorb
movsb
data16
out
push
sahf
or
pushf
cmpsb
push
xchg
cs
in
mov
lcall
stos
adc
nop
jne
mov
cld
out
mov
popa
inc
mov
sti
nop
push
push
popa
enter
cmp
push
or
sbbl
xchg
shll
xchg
je
das
jne
sahf
rcll
adc
nop/reserved
mov
outsl
xchg
jmp
jns
sbb
xorl
mov
sbb
mov
aas
popf
mov
push
mov
lock
pop
mov
pushf
push
cmpsb
ret
mov
ja
sbb
inc
push
movsl
std
aas
mov
and
push
rolb
jg
xchg
pop
sub
shrl
das
je
test
mov
jecxz
sar
pop
cmp
pop
cld
fisubs
pop
enter
inc
or
adc
xor
sbb
ss
or
imul
fiadds
adc
ss
int
loopne
cli
push
iret
push
movsb
adcb
adc
push
daa
pop
cmpsl
jecxz
nop
popa
jmp
lret
xor
loop
lea
leave
pusha
and
sub
sub
lea
dec
mov
subb
iret
sbb
sbb
bswap
icebp
fwait
addr16
pop
icebp
push
out
cwtl
movsb
test
push
mov
mov
mov
push
add
pop
adc
iret
adc
xchg
mov
sub
pop
lods
and
sbb
mov
inc
mov
push
and
mov
cmp
dec
lcall
incb
inc
lods
dec
nop
js
sub
cltd
sbb
jae
pop
jmp
sahf
or
inc
and
dec
xchg
nop
push
bound
xor
mov
xlat
scas
test
inc
xlat
cltd
and
mov
nop
imul
arpl
cmp
les
jnp
in
movsb
sbb
cli
inc
popa
sub
and
pop
or
popa
aam
inc
add
mov
sti
and
xchg
xchg
add
lahf
nop
in
or
push
pop
xchg
ficoml
push
jns
add
sub
stos
fsubp
push
dec
mov
dec
das
pop
adc
mov
call
jb
sub
or
iret
ss
fcoms
inc
stos
jb
imul
shrl
or
push
stos
test
nop
scas
jbe
stos
mov
mov
xchg
adc
cltd
and
negb
and
imul
or
aaa
xchg
dec
fcmovne
aam
pop
mov
std
dec
inc
ficoms
inc
and
and
xchg
lods
popf
insl
lds
pop
int3
ret
lcall
cmpsl
fdivrp
lea
jo
mov
dec
test
mov
shll
enter
pop
lea
sahf
and
mov
inc
in
lret
jg
mov
add
dec
or
fistps
js
das
cmp
jl
shl
jmp
cmp
dec
js
dec
mov
xchg
in
js
adc
movl
dec
popa
cld
das
icebp
jp
mov
xor
into
in
adc
fstl
cmp
fnstenv
test
mov
fwait
mov
daa
push
movsb
fiadds
int
gs
jo
add
inc
xor
call
pushf
push
or
mov
mov
mov
add
mov
xor
ja
nop
mov
push
std
scas
sbb
inc
inc
loope
cmp
or
dec
pop
shll
cmp
adc
mov
push
fisttpll
cmp
mov
cli
inc
cmpl
ds
test
sahf
stos
movsb
inc
sbbb
mov
lcall
push
pop
rorl
xor
inc
and
inc
cmc
fldcw
dec
pop
lret
fwait
mov
cmp
leave
lahf
mov
sub
mov
xchg
or
push
iret
or
cwtl
mov
iret
push
sub
mov
mov
testl
popf
inc
push
popf
mov
inc
adcl
xchg
lret
pushl
mov
ss
xchg
inc
adc
pop
dec
mov
imul
mov
mov
mov
mov
faddp
fmul
lds
or
test
frstor
pushf
and
inc
out
mov
outsb
loop
add
movsb
cmp
fisubs
add
pop
cmp
mov
mov
pop
into
sti
lret
push
pop
imul
dec
sbb
stos
stc
rcrb
or
mov
pushf
mov
add
add
enter
mov
adc
pop
pop
jp
sub
mov
mov
aaa
clc
imul
fcoms
jg
inc
inc
push
lock
or
sahf
ret
aaa
sbb
pop
xchg
js
adc
add
dec
aam
cmp
jmp
aaa
mov
xor
and
sub
mov
icebp
outsb
add
arpl
add
mov
ret
mov
aas
daa
add
popf
sbb
fdiv
or
shrl
movsb
cmpsl
shl
movsb
ret
ja
nop
les
movsl
mov
inc
test
shll
movb
xchg
mov
lea
sub
out
sbb
cmc
inc
xor
outsb
int
mov
jno
mov
add
je
xchg
mov
adc
popa
xor
push
push
in
test
and
and
push
mov
add
in
mov
in
out
mov
mov
adc
jb
push
pop
js
popa
popa
xchg
cmpsl
out
aas
and
inc
out
cltd
iret
jb
inc
xchg
nop
aam
cmp
pop
loope
mov
xchg
jo
outsb
jecxz
sub
std
and
popa
cmp
xchg
pop
loop
add
pop
jbe
cltd
dec
adc
aas
add
fiadds
inc
ret
jbe
cwtl
rol
repz
sub
insb
push
mov
idivl
inc
stc
int
shll
adc
lret
in
mov
push
pop
push
push
or
test
addr16
push
mov
mov
pop
push
cwtl
lea
xchg
and
ficoms
or
cltd
inc
and
push
xchg
sub
adc
dec
add
fistpl
cmpsb
pop
outsl
inc
leave
inc
movsl
sub
lds
icebp
xchg
sub
add
push
cli
xor
and
xchg
xor
cld
mov
sub
jle
fwait
addr16
nop
xchg
jl
or
aam
xchg
jnp
leave
nop
out
call
xchg
mov
ficompl
cwtl
xor
jnp
jnp
test
push
std
add
dec
movsl
ss
fsubl
inc
cs
shll
bound
dec
sbb
sub
in
aam
xor
fistl
int
mov
mov
xor
dec
aad
adc
loop
add
inc
pop
adc
push
adc
in
xchg
push
ja
aas
or
movsb
sub
mov
mov
lock
out
inc
sub
pop
or
test
xor
loop
jmp
pop
pop
ss
jmp
movsl
xor
cmp
cmp
shlb
jmp
lods
push
mov
out
clc
ret
and
mov
mov
fs
jo
lret
sbb
pop
in
sub
loopne
xchg
imul
les
enter
jmp
pop
and
mov
adc
push
int3
add
les
loop
jnp
movsl
call
mov
mov
push
mov
jge
adc
sub
dec
push
mov
cmc
rcr
pushf
pop
bound
icebp
inc
sbb
gs
dec
xor
mov
xlat
sbb
dec
jb
sti
inc
cmp
mov
lret
xlat
loop
pop
aam
lret
jno
imul
sbb
mov
flds
fcmovbe
dec
shrl
mov
imul
imul
arpl
add
pop
call
xchg
sarl
inc
es
mov
pop
sub
out
cmpsl
jle
mov
cmp
sarl
pop
mov
xchg
dec
test
loop
fucomi
inc
data16
jae
stos
cs
movsl
xor
and
mov
push
leave
pop
ror
out
call
mov
inc
orb
pop
mov
cli
adc
mov
jbe
insl
inc
packsswb
xor
mov
push
aad
mov
lcall
data16
pop
jle
pop
sub
ss
jo
ljmp
inc
pop
outsl
movsl
xchg
aad
xor
lea
cltd
mov
xchg
cwtl
mov
jecxz
in
push
arpl
or
jp
mov
test
jmp
cwtl
mov
jnp
push
xchg
push
inc
aad
sbb
popf
add
jl
sahf
sub
xchg
cmp
mov
xor
xchg
xor
inc
outsb
sti
xchg
shlb
cmpl
scas
mov
inc
mov
rolb
jb
jnp
aas
pusha
lcall
cmp
xchg
push
adc
sarb
lcall
mov
insl
or
repnz
pop
push
bnd
ret
fidivrl
mov
sbb
pop
cli
or
pop
and
mov
jb
imull
and
add
lock
mov
xor
flds
in
cli
sbb
je
popa
jnp
add
jmp
jge
mov
sti
sarb
cmpsl
bound
sbb
pop
sbb
pushf
je
int
jnp
or
sbb
mov
mov
es
je
jns
stc
pop
mov
sbb
stc
or
mov
outsb
push
sub
cmp
jo
jae
test
data16
mov
test
lea
ret
into
and
pop
xor
sub
filds
ss
lcall
cmp
and
jbe
add
sbb
icebp
or
in
ret
dec
std
cli
fdivrs
dec
or
or
faddp
insb
pop
sbb
popf
imul
cli
pop
nop
mov
and
movsl
pop
dec
mov
mov
popl
jns
andl
dec
inc
push
adc
fisttps
jb
js
repnz
cmp
notl
out
xchg
orb
int3
mov
in
js
jne
mov
sub
into
push
sub
mov
adc
jmp
push
cmp
or
fidivl
movsb
xchg
mov
add
inc
mov
jno
push
push
or
cmc
inc
jp
and
pop
xchg
mov
pusha
adc
dec
shr
pop
jmp
adcl
xor
sub
mov
fucomp
fsub
xchg
out
shll
push
aam
sub
sbb
aas
popa
sub
adc
xor
mov
icebp
aam
push
mov
sub
gs
pop
mov
cmp
mov
cltd
and
pop
mov
jno
mov
clc
in
in
xlat
cli
loop
mov
mov
bound
test
and
jecxz
push
jns
jne
in
mov
lahf
notb
or
cmpsl
ds
mov
lds
mov
inc
enter
sbb
cmc
xchg
dec
in
push
outsb
cs
cwtl
imul
add
scas
jne
mov
mov
mov
or
les
mov
pop
popa
mov
fistpl
cmp
imul
sbb
mov
dec
push
mov
mov
out
and
bound
inc
mov
xor
mov
popf
aaa
sbbb
push
rcrl
xor
or
cli
jmp
test
nop
pop
pusha
fisttpll
clc
fidivrs
jp
xchg
xchg
and
scas
in
mov
das
pop
mov
roll
sbb
pop
sub
fcomp
icebp
xchg
adc
stc
push
addb
dec
ljmp
imul
xorl
add
test
sbb
vpbroadcastd
mov
push
mov
test
loopne
jb
jmp
roll
shll
pop
mov
mov
add
or
push
repz
bound
adc
mov
movsb
sub
add
lret
xchg
pop
lahf
adc
xchg
jb
adc
movsb
add
jbe
inc
mov
add
or
xor
pop
adc
or
mov
mov
int3
dec
fisubrs
sub
outsb
movsl
mov
je
jmp
add
sbb
pop
add
aas
add
movsl
into
ret
cwtl
and
insl
ror
stc
xor
or
and
sbb
dec
mov
mov
dec
je
pushf
fld
cmpb
hlt
push
push
lds
cmp
ficoms
cld
leave
ret
int3
adc
add
in
lret
fs
cmp
mov
add
xor
jp
test
sbb
xor
mov
repz
fisubrs
sbb
and
lcall
or
cmp
shll
ret
das
loop
dec
aad
and
cmp
ljmp
mov
inc
pusha
call
add
stos
imul
addr16
xchg
popa
cli
aaa
xor
daa
push
subb
or
sbb
dec
mov
pop
fcmovnb
push
lahf
mov
inc
in
test
push
jle
sub
push
lock
sbb
in
sub
xor
pop
scas
inc
test
pop
mov
sub
repz
cs
pop
sar
pop
es
aad
into
shll
mov
inc
jo
call
xor
or
sbb
lcall
and
lock
ljmp
xchg
push
add
js
popa
inc
inc
test
inc
ljmp
cmp
sbb
push
repnz
jl
gs
sub
xchg
dec
adc
and
inc
xor
and
pop
test
dec
sub
and
gs
loop
cmp
lock
mov
dec
adc
movsl
or
xchg
and
int3
xchg
fs
push
mov
jne
or
cs
mov
mov
rcrb
inc
stos
inc
jp
mov
popa
pop
ja
nop
lds
sub
sbb
push
std
cmp
dec
scas
push
imul
testl
bound
std
andb
fdivs
sti
mov
insb
stos
jne
fcomps
in
imul
cmp
cmp
xlat
out
sub
add
sub
pop
xchg
jecxz
mov
addr16
xor
mov
test
sbb
inc
ret
mov
mov
or
mov
fwait
xor
dec
pusha
dec
xor
ja
imul
and
scas
cmc
fisttpll
cmpsl
push
xchg
push
mov
adc
int3
or
mov
aas
cs
xor
lcall
sti
or
les
mov
je
sbb
test
aas
and
inc
xchg
cmp
leave
push
lods
js
mov
gs
es
push
push
dec
pop
jecxz
out
nop
outsl
xchg
dec
aad
inc
push
pusha
jge
mov
mov
xchg
test
xor
pop
mov
repz
sbb
xchg
inc
scas
sarl
repnz
push
jno
cmp
orb
mov
cwtl
xor
lret
loope
mov
dec
push
das
mov
popw
into
cs
gs
mov
push
xor
cli
cwtl
int
gs
ljmp
pop
jl
popf
add
jg
les
inc
outsl
adc
repnz
int
test
cmpsb
fldcw
pusha
outsb
test
xchg
mov
inc
sbb
sahf
sti
dec
push
jb
repz
adc
loopne
pop
cmp
push
iret
push
addl
dec
shl
clc
rorb
fistpll
jl
ss
repz
cli
cs
aas
popf
add
or
sbb
mov
inc
xor
rcrb
sbb
lret
mov
psubq
repz
lret
xorb
mov
mov
addr16
dec
pop
mov
push
xor
sbbb
push
sbb
cltd
cmp
dec
divb
stos
sarl
out
sub
cs
jbe
cltd
icebp
inc
inc
inc
add
mov
imul
aaa
cli
pop
jl
pop
aad
xchg
mov
adc
dec
pop
xchg
ret
push
cmp
pop
sarl
repz
js
pop
pop
sbb
insl
sub
add
int
iret
lcall
push
add
aad
push
add
sub
rorb
sub
mov
std
mov
lods
mov
xchg
jno
or
jg
test
daa
int3
data16
mov
xor
pop
mov
in
shll
repz
faddl
call
sbb
mov
das
cmp
cmc
out
adc
pop
and
lods
and
dec
fists
popl
jle
das
pop
out
shl
cmp
or
sub
xor
lea
jp
lret
cmpsb
fmuls
stos
mov
out
psllq
ret
in
decb
add
push
les
dec
sbb
test
mov
jnp,pn
jae
sbb
imul
mov
sub
lods
jp
enter
or
push
jg
in
std
mov
mov
add
jbe
jecxz
pop
cmpsl
idivb
les
jae
jl
addb
add
pop
mov
fcmovnb
aas
dec
arpl
sbb
push
pushf
cmpsb
pop
lods
mov
jno
pop
cmp
or
pop
push
mov
outsb
inc
add
movb
xor
dec
mov
lds
dec
int3
pop
ljmp
cmp
xor
xchg
push
mov
cli
sbb
rol
pop
je
out
pop
and
jae
mov
push
pop
sbbb
gs
add
in
xchg
cs
adc
loopne
pop
cld
push
adc
and
das
mov
xor
shr
xlat
roll
fidivrl
stos
into
xchg
dec
popa
adc
aaa
test
inc
xor
adc
negl
hlt
enter
cld
repnz
jbe
push
sbb
lret
xlat
nop
adc
ret
insb
mov
inc
fistl
mov
cmpsb
or
fnstenv
mov
insl
push
push
std
xchg
shrb
fstps
cmp
sub
push
insb
jb
xchg
push
push
add
js
xor
mov
mov
fimuls
call
mov
out
jmp
jae
xchg
aas
jae
mov
mov
mov
dec
mov
out
clc
mov
xor
ret
das
std
cmp
cmp
jg
arpl
jnp
xchg
insl
pop
push
mov
fldcw
sub
mov
int3
jge
fadd
jb
pop
inc
cmc
or
adcb
sub
push
cmp
inc
sub
imul
sbb
shrb
fstpt
cltd
dec
and
js
xlat
test
xchg
xor
in
aam
pop
xchg
aaa
outsb
xor
xchg
int3
and
lahf
lock
jbe
or
lods
stc
sbbl
mov
aas
enter
xchg
dec
fistpll
outsb
data16
mov
pop
repnz
mov
je,pn
les
jae
sub
scas
dec
mov
aas
push
lcall
add
xchg
and
jl
xchg
and
ret
xor
cmp
xchg
adc
jbe
and
add
pop
jl
jb
lds
loope
fldl
dec
adc
fwait
adc
stos
popa
mov
call
out
xor
add
dec
mov
je
sub
arpl
xchg
jnp
sbb
pop
pop
push
lods
mov
dec
out
roll
insb
fistl
jo
cmpsl
pop
in
mov
pop
mov
call
pop
inc
jnp
cmp
scas
mov
adc
pusha
subl
jge
stc
dec
les
mov
mov
add
dec
repz
les
cmc
shll
xor
mov
fisubl
rep
mov
arpl
sub
test
cs
js
inc
mov
aam
push
popf
hlt
into
subb
or
dec
pop
jmp
hlt
adc
sub
lock
nop
dec
pushf
xchg
mov
jbe
xor
mov
mov
fimuls
sub
imul
add
xor
in
push
les
insb
in
stos
mov
jp
cmpsb
cwtl
jnp
outsl
sbb
mov
hlt
mov
je
aaa
cwtl
aam
pop
rolb
cmpb
lcall
cltd
int
mov
ror
iret
fwait
icebp
in
xor
ret
push
ret
xchg
dec
ja
adc
and
ret
xchg
fldl
push
cwtl
push
add
adc
cmp
mov
mull
adc
inc
aaa
pop
int3
mov
xchg
dec
cs
dec
neg
xchg
push
and
iret
fiaddl
push
mov
and
dec
in
int3
xchg
fs
cmc
out
call
cmp
push
mov
icebp
jb
mov
movsl
mov
and
and
mov
pop
and
xchg
lock
jge
cmc
mov
jae
push
lock
js
and
jmp
add
std
cltd
int3
ljmp
hlt
cwtl
popf
adc
mov
subb
pop
inc
iret
imul
inc
xlat
and
test
sub
fildll
out
or
pop
in
mov
cltd
push
sub
inc
xorb
jno
pop
sahf
and
sbb
lods
and
ret
hlt
stos
data16
push
mov
ds
sub
mov
mov
mov
push
sbb
adc
sti
and
lods
seto
pop
mov
lret
jg
inc
stos
loop
or
xor
aas
mov
ljmp
sbbb
lret
aad
inc
out
ds
lcall
jmp
enter
sub
push
sti
hlt
add
mov
push
jmp
shlb
mov
cltd
lahf
lods
jmp
sub
cmpsl
aam
pop
xchg
aad
inc
mov
stos
jno
lret
or
cltd
xor
daa
dec
adc
xor
lcall
mov
ffree
popa
fdiv
int3
and
jge
into
mov
mov
test
cmp
jbe
pusha
imul
mov
pop
xchg
pop
stos
cmp
cmpsb
enter
pop
push
pop
push
int
and
ret
faddl
jg
pop
in
lret
shrb
push
rcll
push
adc
adc
or
sub
inc
fwait
mov
in
icebp
lret
xchg
and
mov
jo
fldt
mov
into
jmp
cld
push
push
jecxz
es
xchg
xchg
xor
or
dec
out
std
sbb
mov
popf
ljmp
mov
in
mov
jb
xchg
xor
dec
adc
lahf
test
xchg
pop
pop
pusha
mov
cld
dec
cmp
movl
cmp
sbb
jp
cmp
and
mov
mov
mov
fisubl
xor
cmpsb
int3
or
or
mov
push
popa
sahf
cwtl
mov
jge
test
fisubl
pop
inc
push
sbb
insl
jl
xor
inc
sbb
ret
add
mov
push
jae
mov
int
mov
xchg
inc
xchg
sub
add
jmp
out
fwait
inc
jle
mov
jno
cmp
push
int
lret
dec
mov
scas
and
mov
xor
or
fwait
dec
mov
inc
lahf
or
cli
jbe
sbb
scas
imul
cmpsb
lret
ss
daa
mov
sti
push
jle
cmp
ret
fisttps
popf
dec
imul
inc
pop
lcall
dec
mov
mov
int3
inc
pop
fstpt
popf
inc
dec
sarb
inc
arpl
jp
pushf
arpl
fisubrs
loop
jns
adc
shrb
push
popa
sbbl
jo
dec
int3
mov
adc
or
lret
test
roll
nop
xchg
insl
inc
and
notb
stos
push
inc
shr
mov
add
cltd
xchg
les
xor
mov
jo
push
xlat
and
cmp
stos
jl
xchg
inc
test
mov
pop
movb
xor
sub
mov
mov
jno
mov
push
cmp
je
addr16
bound
fistpll
lock
sbb
mov
popw
mov
rol
popa
andb
pop
enter
push
mov
cmc
mov
push
add
push
xor
pop
jnp
pop
jp
inc
int3
jb
inc
inc
iret
mov
enter
repnz
sub
cmpb
pop
xor
lahf
mov
lods
mov
hlt
jge
lret
stc
pop
sti
mov
rorl
push
or
jnp
xchg
fdivs
and
pop
sbb
pop
add
mov
adc
mov
gs
cmpsl
sar
and
outsl
cld
inc
imul
int
test
dec
pop
dec
dec
jno
or
and
cltd
cmpsl
mov
xor
jp
lods
xorb
mov
out
mov
fsubrp
mov
leave
add
sbb
push
stos
mov
rorb
roll
sahf
adc
inc
or
push
cwtl
leave
jne
mov
jo
jo
fnsave
push
mov
pop
jnp
dec
inc
sbb
mov
mov
add
bound
cmp
rorb
dec
mov
pop
or
pop
lock
inc
cmp
aam
std
sbb
enter
shrb
call
mov
mov
sti
mov
stos
inc
int3
push
pop
fsubrs
dec
jmp
fsubrs
inc
adc
mov
pop
jg
fstps
int
cmp
sbb
movsb
cli
stos
cltd
shlb
iret
jg
je
addr16
pop
fbld
jmp
iret
shlb
push
sub
aas
lret
iret
mov
pop
add
addr16
cmp
push
mov
nop
lock
jno
sub
sbb
mov
xor
andb
and
mov
cwtl
jno
mov
rolb
outsl
les
iret
and
iret
mov
mov
push
dec
push
test
push
sbb
or
cmp
mov
aas
ret
push
mov
inc
xchg
add
jge
popf
pop
rolb
movsb
and
outsl
mov
in
lods
cmpl
int
into
cltd
mov
das
daa
ret
imul
sbb
pop
jg
sbb
mov
test
or
int3
mov
fbstp
clc
pop
mov
inc
cmpb
stos
mov
fsubl
xor
pop
mov
jb
inc
adc
rcr
sub
repz
sub
inc
mov
inc
mov
into
mov
hlt
lret
movsb
fs
add
inc
add
leave
lcall
xlat
pop
gs
mov
lds
loop
pop
push
mov
pop
js
xor
stos
test
mov
lods
cmp
mov
aam
push
sbb
xchg
jle
mov
sbb
mov
cmpsb
adcl
pop
jp
and
push
inc
lds
xor
loop
hlt
fs
fldpi
mov
andb
fisubrs
lods
sti
test
pop
lods
adc
and
inc
stos
push
add
jbe
shll
enter
xchg
and
dec
jge
movsb
sbb
adc
out
and
add
cmp
xchg
daa
mov
cwtl
mov
or
insb
sahf
inc
je
push
scas
and
dec
mov
mov
lods
inc
imul
dec
cmp
imul
xor
mov
jne
push
mov
int3
add
xchg
cli
cmp
mov
and
ja
pop
cmp
cmp
fidivl
jmp
mov
gs
and
nop
dec
push
ret
jbe
or
stos
pop
mov
mov
xchg
push
icebp
jge
mov
cmp
sbb
sub
fxch
mov
push
cld
test
je
and
ds
pop
pop
inc
int3
ret
out
stos
ss
pop
jg
into
leave
mov
hlt
cmp
movups
les
sarb
cmpsl
scas
xor
ret
aam
inc
dec
xchg
sbb
mov
popa
sarb
mov
loopne
jbe
aam
rorb
mov
xchg
scas
jne
cld
mov
repnz
or
jmp
stos
cwtl
stos
orb
cs
enter
loope
cmp
jb
push
and
repz
inc
mov
lahf
push
xor
adc
movsb
xor
outsb
jmp
jne
pop
push
jmp
xor
pop
aaa
loop
mov
mov
mov
add
add
lods
test
jbe
jg
test
inc
push
and
mov
or
xchg
push
cwtl
push
int
pop
lret
lock
ret
dec
inc
jno
pop
sub
dec
xchg
dec
mov
pusha
mov
shrb
mov
pop
enter
add
insb
cmp
daa
xchg
fs
insl
dec
push
insl
adc
inc
aas
xor
mov
aas
sarl
adc
mov
cltd
fmulp
fildl
test
outsl
notl
pop
adcl
mov
push
sub
xor
pushf
push
lods
pop
addr16
adc
mov
int
fisubrs
and
nop
cmp
inc
sbb
xchg
lcall
pop
and
xchg
and
mov
lahf
xchg
insb
orl
pusha
cmp
mov
mov
mov
aas
mov
adc
mov
fcmovnb
out
sbb
aaa
push
mov
add
and
testb
fbld
jo
fdivp
push
repnz
test
cmpsl
cmpsb
loopne
and
and
jge
in
int3
test
testb
subb
push
pushf
cmp
fidivl
int
not
mov
into
mov
sub
rolb
pop
or
out
int3
mov
sub
mov
insb
dec
scas
cmp
cld
push
hlt
push
pop
mov
insb
xor
xchg
mov
sub
sub
cmp
add
push
mov
fdivrs
sub
and
cmp
mov
pop
pop
pushf
add
int3
incb
roll
cmp
mov
sti
push
mov
test
or
mov
insl
inc
xor
scas
jg
out
xchg
push
mov
jmp
xchg
pop
xor
or
out
mov
out
insl
push
test
hlt
cmp
in
or
add
sbb
xchg
cltd
int3
leave
mov
push
inc
cmc
mov
mov
inc
dec
xchg
adc
mov
movb
bound
imul
xor
aas
sbb
das
ficoms
dec
cmpsb
adc
pusha
cmp
mov
mov
lcall
aam
adc
out
cmpsl
sbb
jle
or
das
shlb
rcrl
pop
mov
js
xor
lods
inc
je
movsl
stc
frndint
mov
adc
movsl
push
std
xor
scas
shrb
inc
stos
mov
jae
and
mov
in
dec
ror
or
aaa
cmpsl
add
cwtl
xor
push
lcall
popf
sbb
xchg
mov
and
dec
adc
and
call
stos
jae
xchg
repnz
adcl
dec
movsb
add
jbe
pop
or
lret
and
es
stos
movsb
clc
enter
ss
and
push
jg
mov
mov
pop
cmpsl
xchg
fwait
mov
in
lods
jge
mov
out
lock
or
js
inc
mov
dec
sub
and
adc
aad
shlb
jp
ljmp
sub
mov
fs
shl
mov
xor
dec
pop
pop
loope
xor
jbe
sbb
rorb
stos
mov
leave
subb
dec
jnp
pop
jnp
xor
sub
xor
imull
fs
enter
push
jne
cmp
mov
stos
stc
rcr
cmp
rcrl
mull
test
lds
add
cltd
inc
cli
in
fcoml
or
div
adcb
in
negb
adc
movb
cs
or
inc
fs
adc
jle
stos
adc
sub
out
movb
aam
dec
movsl
cmpsl
and
pop
add
sti
add
pusha
mov
ds
subl
int
sbb
add
sbb
leave
imul
test
sbb
sbb
pop
mov
mov
sar
lcall
lds
cmpl
sahf
jmp
mov
das
das
icebp
jge
aad
rol
inc
insb
mov
sub
inc
out
mov
ja
jnp
mov
and
dec
pop
sbb
cmpl
push
xor
cmp
lods
pop
lods
pop
rcll
insb
and
pop
pop
test
mov
sbb
mov
ljmp
xor
inc
in
call
add
push
sbb
stos
mov
cmc
shll
adc
xchg
addr16
push
mov
dec
inc
fstps
stos
lock
sbb
out
cmp
sub
fstpt
orl
sub
int3
mov
push
xor
mov
inc
push
push
push
mov
jge
sbb
subb
sub
aaa
out
jmp
cld
xor
popf
jmp
mov
in
xchg
mov
ss
out
push
stos
ja
int
adc
and
lods
or
mov
add
lcall
mov
push
jle
adc
aad
loop
ja
mov
push
sub
add
cmp
cmpsb
jnp
cwtl
and
cmp
or
dec
xchg
xorb
push
fbstp
pmullw
es
adc
jno
dec
xchg
or
ljmp
in
mov
daa
xchg
mov
push
push
xor
xor
filds
xor
add
popf
pop
push
repnz
xor
inc
xchg
adcl
jno
pop
out
inc
ror
fdivrs
pushf
inc
jbe
sbb
stos
aas
dec
stc
out
push
pop
test
and
int
mov
cld
add
or
js
lret
inc
jg
out
push
xchg
ss
les
stos
cmc
mov
sbb
xor
pop
push
stc
popf
idiv
cmpsl
pop
fists
sbb
pop
ror
jb
and
inc
mov
cmp
fmull
in
mov
mov
movsl
push
nop
ja
mov
inc
sbb
addr16
roll
in
push
bound
imul
lods
xor
clc
jmp
or
bound
bound
cwtl
rorb
push
movsl
test
jg
adc
cmp
pop
mov
jmp
loop
das
mov
sarl
add
leave
int3
push
jnp
shlb
imul
pop
add
mov
dec
test
sub
rorb
outsl
mov
scas
out
jl
cwtl
xor
dec
faddl
push
pop
bound
test
jp
mov
inc
ss
push
clc
aad
rorb
xor
jmp
xor
pop
inc
mov
aam
jge
and
leave
faddl
imul
xchg
pop
cmc
cltd
mov
push
fsubrs
or
xchg
fists
inc
pop
mov
orb
out
adc
les
jne
clc
int3
xchg
sbb
scas
rolb
mov
lods
jne
adc
imul
jo
lret
shr
sbb
jl
ret
xchg
push
testb
push
fdivrl
and
mov
insb
push
jo
push
pop
jb
mov
add
out
jmp
dec
xchg
cmp
push
movsb
es
sahf
insl
jbe
add
and
dec
xchg
pop
jmp
out
stc
mov
sbb
mov
pusha
call
push
or
fmul
int3
jnp
out
fisubrs
mov
sub
inc
cmp
cltd
stc
sbb
xor
mov
mov
in
rcl
add
aas
cwtl
stos
and
stos
es
das
popf
stc
les
inc
or
jb
cltd
mov
adc
fnsave
ret
rclb
sbb
iret
lret
fnstenv
fildl
dec
fsubl
lods
or
xor
lahf
sub
pop
outsl
popa
insl
aad
cmp
popa
and
shl
and
scas
cli
jns
sbb
arpl
or
stos
in
test
fistps
cmc
cmp
enter
cli
pushl
test
jl
pextrw
bound
int
push
jae
out
int3
ds
mov
iret
icebp
mov
mov
inc
xor
sbb
sahf
xchg
insb
xchg
imul
inc
pop
mov
popf
dec
xchg
push
in
jp
and
xlat
insl
add
dec
and
add
jg
inc
orl
stos
ljmp
or
movsb
xchg
mov
andb
push
cmp
into
jns
mov
fisubrs
scas
in
xor
mov
or
cwtl
popf
call
test
fwait
lods
js
ljmp
dec
push
inc
popf
cmc
mov
daa
ret
xchg
xchg
sbb
stc
aaa
cmp
mov
shll
icebp
push
aaa
adc
and
inc
mov
mov
add
xor
fidivl
xor
inc
fwait
stos
and
fstpl
and
or
xchg
das
jb
or
and
xchg
add
sbb
icebp
aad
mov
xor
xorb
lret
xor
sbb
push
mov
xor
mov
mov
fmul
push
jmp
jl
hlt
push
xchg
ja
jne
mov
mov
rcll
das
adc
dec
or
jmp
xor
cmp
rol
mov
outsl
cmc
fwait
pop
ret
out
dec
jbe
mov
pop
jne
into
push
mov
mov
icebp
fstpt
cmpsb
xchg
iret
rorl
mov
xchg
jnp
lds
enter
cmp
cmpsl
mov
enter
sti
mov
mov
xor
jae
repz
jae
ds
dec
stc
test
es
pop
or
mov
inc
xchg
cmc
jo
das
ret
pusha
insb
push
inc
cmpsb
cmovne
jnp
jbe
xchg
dec
jbe
dec
xchg
mov
test
inc
xor
jbe
xchg
or
sub
mov
cmpsl
sub
jne
xor
cmp
fadds
repnz
inc
inc
adc
xchg
cmpl
jmp
mov
inc
xchg
jns
cmp
roll
pusha
and
push
cmp
cmc
mov
xor
dec
and
dec
sub
add
cmpsl
jecxz
movl
ljmp
incb
in
adc
stos
lret
mov
add
mov
xchg
pop
rclb
repnz
pop
cmp
or
outsb
mov
xlat
mov
arpl
and
insb
pop
mov
das
add
stos
sbb
mov
mov
fnstenv
daa
jbe
inc
insl
iret
mov
in
jecxz
pop
lods
mov
repz
shll
or
nop
ret
mov
cltd
mov
jb
outsb
sub
lods
mov
add
dec
shrl
sti
xor
and
sarl
sbb
push
iret
push
mov
jne
sti
jne
loope
out
jg
test
in
iret
dec
dec
pop
mov
fsubl
ffreep
pushf
add
popa
fistpl
gs
int3
aam
fbstp
xchg
inc
push
sub
pop
ljmp
jno
test
push
sbb
and
push
mov
mov
repz
test
dec
jno
mov
sbb
mov
test
push
icebp
addr16
mov
pop
inc
out
addr16
out
test
jno
in
push
cmpsl
fidivrl
outsl
gs
sub
ror
mov
mov
mov
das
push
lret
shll
jns
xor
mov
dec
mov
cmpsb
insl
popa
enter
lods
lods
loope
xchg
outsb
pop
in
dec
scas
fldl
adc
or
popa
jns
mov
or
jnp
out
rcll
dec
ficompl
in
dec
dec
add
adc
mov
xor
mov
pop
xchg
inc
push
inc
push
xchg
mov
addr16
mov
xchg
clc
lds
sbb
pop
test
divb
fcoml
int
inc
xor
mov
and
imul
mov
in
mov
cmpsl
pop
dec
pop
pop
fwait
testl
mov
nop
pop
adc
cs
xchg
sbb
cmp
jge
add
mov
or
xor
movsl
je
mov
ljmp
xor
push
and
xor
pusha
rcrl
sub
jecxz
sbb
scas
test
call
shl
stc
in
roll
dec
notb
ficompl
inc
ja
xor
mov
mov
ror
pop
pushf
repz
cwtl
sub
out
je
sbb
sbb
das
arpl
pop
js
jl
stos
inc
cmc
divl
lcall
mov
cmpsl
xor
mov
pop
inc
xchg
jnp
and
adc
aam
in
mov
loop
inc
and
rclb
add
stos
hlt
mov
xorl
scas
shll
stos
xchg
sbb
push
dec
xchg
dec
stos
loop
pop
orl
and
and
adc
mov
outsl
sub
pop
repz
fstp
xor
rolb
xchg
dec
cmpsl
jl
cmp
cld
mov
sub
mov
lock
mov
cmpsl
loop
jno
push
inc
adc
mov
add
fcomps
xor
xrelease
jmp
xor
and
xor
mov
adc
sub
jg
fs
test
sbb
les
pop
call
mov
outsl
and
daa
jecxz
shl
cmpsl
shll
int3
fists
lods
and
shrl
mov
inc
sub
hlt
xchg
and
popa
leave
popa
sbb
dec
addr16
or
xchg
sbb
xchg
xchg
or
sub
xchg
push
xchg
or
and
inc
lea
cwtl
lret
xchg
pop
aaa
push
shl
inc
pop
insl
rcrb
mov
and
fistl
jb
or
insb
aaa
cmp
mov
push
mov
add
add
es
or
dec
rclb
jmp
sub
or
stc
sub
bound
insb
pop
ss
aam
or
and
imul
imul
dec
ret
sahf
outsl
push
jp
sub
js
and
jp
inc
rcl
pop
int
push
das
aam
xchg
pop
mov
in
js
push
movhps
xlat
xor
push
pop
xchg
xor
xchg
mov
and
aas
stos
sbb
add
ljmp
jmp
push
push
or
in
js
xor
ds
fwait
cmp
add
js
jae
xor
das
or
cmp
mov
jge
movsb
imul
add
addr16
flds
in
mov
or
xor
xchg
out
and
imul
cmp
pop
mov
jnp
fcoms
dec
lods
je
cltd
xor
out
lods
dec
mov
sbb
das
js,pn
fcomps
adc
imul
mov
xor
and
sub
out
cmp
sahf
cmc
or
jae
dec
std
inc
cmp
pop
sbb
shll
sbb
mov
mov
sub
jno
push
arpl
mov
jno
adc
enter
ljmp
in
icebp
cwtl
push
push
jp
mov
stc
lret
mov
scas
jbe
sahf
dec
pop
sbb
adc
test
out
mov
pop
ja
or
sbb
or
out
fmulp
mov
xlat
mov
dec
test
sbbl
scas
pop
push
and
dec
mov
sbb
fists
inc
cmpb
or
mov
xchg
ret
nop
outsl
mov
adc
sbb
and
push
notl
loopne
push
repnz
and
fadds
dec
xchg
bound
cmpsb
testl
fsub
or
repnz
xor
andl
xor
int3
test
mov
jb
push
popa
push
call
filds
ja
mov
sar
mov
stos
int3
clc
sub
jns
int
adc
ret
dec
fdivrs
mov
mov
repnz
pop
adc
xlat
sub
shll
out
lods
in
xlat
push
adc
lock
or
push
movsl
dec
cli
push
fdivrl
xchg
adc
setge
push
cmc
xchg
lcall
adc
xchg
xchg
int
outsl
jl
lds
or
gs
fimuls
aad
push
test
push
inc
data16
cmp
push
lea
inc
sbb
daa
fistl
js
xchg
lds
jno
add
jmp
xor
call
shrl
leave
nop
mov
mov
cmp
bound
pop
fisttpll
xchg
jmp
lock
xor
aaa
add
jecxz
push
and
fsub
push
fsts
adc
shll
jmp
shrb
mov
xchg
cli
and
or
mov
mov
sbb
lock
shlb
inc
cmp
sub
leave
bound
insl
inc
mov
iret
cmp
pop
and
ret
cld
inc
movsb
cli
cmpsb
jae
fcomps
mov
jns
hlt
das
mov
mov
out
pop
cmp
aaa
loope
and
pop
dec
leave
dec
or
lock
mov
repnz
ds
repz
add
les
mov
cld
push
sub
cltd
push
popf
xor
cmpsl
nop
bound
daa
and
xchg
lcall
sahf
pop
jge
cmpsl
andb
and
or
insl
cmp
adc
xor
dec
or
cmc
and
pop
add
xor
fisubl
push
fdivrs
cmp
out
and
inc
pop
dec
add
mov
jae
out
movsb
xor
dec
ficompl
or
lds
fadds
xchg
in
sbb
mov
push
icebp
jmp
ds
out
test
fisubrl
sbb
inc
iret
xor
out
jne
cmc
xchg
sub
push
dec
loopne
mov
mov
nop
aam
push
int3
int
add
outsl
frstor
push
mov
outsb
adc
sub
jo
insb
xchg
pusha
mov
mov
pop
fadds
cmp
jl
shll
mov
dec
jecxz
pop
ljmp
sub
pop
rcll
fcoms
fists
and
cltd
mov
fadds
sahf
pushf
fwait
popa
mov
movsl
ja
cmp
loop
xor
data16
mov
pop
rep
jns
mov
mov
aas
xchg
add
jne
orl
mov
mov
imul
cld
mov
sub
faddl
mov
daa
in
mov
mov
sbb
mov
mov
sar
cmp
xchg
wrmsr
mov
aas
out
cld
pop
shrl
inc
jg
jge
iret
les
push
mov
cmp
loopne
sahf
loopne
fwait
dec
ljmp
inc
mov
loopne
paddb
test
and
push
or
cs
nopl
sahf
cli
bound
int
adc
push
xor
adc
jg
mov
test
shll
push
xchg
jmp
stc
es
fsubl
in
xchg
jl
cmp
sub
push
fsts
adc
mov
cmp
mov
aam
mov
jae
adc
mov
cmp
fsubs
mov
sbb
aad
xchg
add
fnstsw
xchg
loopne
xchg
loopne
jmp
in
pushf
adc
pop
fbstp
xchg
mov
or
dec
mov
jge
std
movsb
aaa
push
adc
xchg
loop
and
ds
pop
sbb
gs
clc
sub
aaa
mov
jo
adc
sbb
fiaddl
mov
jmp
subl
and
pop
test
aaa
sti
push
comiss
mov
scas
mov
enter
das
mov
pushf
sbb
mov
or
inc
lods
mov
fdivrl
imul
loope
pop
or
scas
adc
das
cmpb
jmp
mov
loop
sub
negb
sbb
insb
ss
adc
stos
call
and
arpl
sub
aas
je
lcall
jg
repnz
inc
lods
sbb
jg
adc
jle
push
outsl
mov
dec
jg
adc
push
fs
pop
cld
xor
dec
or
cmp
mov
movsb
loopne
lahf
sub
rcrl
xlat
jmpw
cltd
mov
cli
sbb
add
add
lret
jg
xor
pop
out
or
leave
cwtl
stos
adc
loope
mov
mov
sub
push
pop
out
enter
loop
out
adc
xor
mov
cmp
ss
adc
and
dec
jbe
xor
mov
mov
push
pop
int
cmp
jns
movsb
in
mov
arpl
xchg
in
pusha
shr
sub
mov
fs
sbb
sbb
dec
aas
cmp
faddl
test
push
hlt
fadds
out
lods
loop
jne
out
test
sbb
cmp
sub
pop
js
cwtl
dec
popf
ret
fadd
dec
mov
jnp
cmpsb
test
mov
or
shll
negb
or
movsl
imul
vmwrite
arpl
rcll
call
cmc
inc
jbe
sbb
mov
hlt
lds
cmp
out
insb
inc
gs
pusha
or
rcr
mov
fdivrs
adc
xchg
imul
ss
inc
mov
in
imul
push
das
jp
add
mov
sbb
add
bound
aad
inc
mov
dec
mov
sarb
push
pop
dec
mov
lods
cs
jl
pop
jb
lods
adc
jns
cmp
je
add
repnz
cmp
loopne
sub
ror
stos
jmp
iret
cmp
cmp
push
xchg
mov
push
push
lods
imul
dec
addr16
rcr
mov
lock
daa
inc
lret
ret
sti
dec
les
js
mov
movsb
ja
fs
dec
repnz
mov
jno
icebp
xchg
out
lret
jns
lcall
add
mov
xlat
or
pop
das
lcall
arpl
pusha
roll
adc
adc
stos
das
ret
mov
icebp
cmc
rorb
js
clc
and
jns
jne,pt
jb
dec
push
mov
mov
sbb
scas
leave
mov
inc
pop
cwtl
daa
or
and
into
lcall
in
fstl
inc
jg
jae
fdivrl
and
sbb
mov
dec
sarb
aas
pusha
mov
es
push
mov
xor
movb
outsb
repnz
sub
sbb
mov
cmc
inc
insb
push
xor
ss
out
pop
inc
call
jg
mov
das
mov
cs
adc
sub
mov
inc
lahf
dec
mov
add
movsb
mov
pop
fidivl
push
fisttps
sbb
add
sahf
push
clc
cmpsb
add
lock
inc
sarl
cwtl
jne
inc
and
test
inc
sbb
cld
inc
lret
dec
pop
mov
lods
lods
adc
xchg
fwait
xorb
pop
mov
push
push
jae
and
pop
popa
xor
fs
adc
arpl
jb
xor
scas
jge
fistl
test
hlt
inc
ds
imul
cmp
jno
movsl
mov
ja
scas
xchg
xor
pop
packuswb
fs
sub
mov
dec
pusha
orl
int
je,pn
sarb
jge
sbb
xor
shr
out
lahf
testl
jl
ljmp
fildll
xor
mov
test
sub
data16
pop
push
mov
dec
cld
push
insl
icebp
inc
lahf
push
sbb
out
jle
inc
jo
pop
cs
pop
arpl
insl
xchg
lods
xor
sub
jne
jno
movsl
jge
std
int
js
mov
inc
cmp
add
mov
call
pusha
cmc
cmpsb
jle
test
popa
fistpl
mov
adc
iret
xor
rorb
addr16
shrb
movsl
pop
loop
sbb
testb
fldenv
ja
shrl
dec
cs
inc
shl
jne
out
pusha
addr16
push
pop
aad
jne
fstpl
mov
lcall
es
cmp
lea
mov
fstpl
testb
mov
into
mov
dec
inc
lahf
mov
call
fistl
cwtl
mov
mov
dec
xor
call
pop
out
adc
inc
aaa
xor
inc
mov
xchg
int
mov
pop
js
test
pop
loope
and
popf
mov
xor
jp
jae
enter
add
sub
into
jmp
shlb
in
inc
sar
in
xorb
gs
inc
mov
icebp
sub
movsb
inc
scas
inc
sub
dec
lret
mov
xchg
cli
test
jg
mov
mov
sti
add
ljmp
add
cli
repnz
out
sbb
push
inc
and
fs
dec
and
iret
xlat
add
arpl
testb
enter
mov
dec
dec
ds
stc
bound
stos
mov
outsb
sti
lods
cmpb
push
and
incb
push
les
push
ss
push
sub
dec
adc
std
mov
hlt
xchg
cli
in
jns
pop
rolb
in
mov
add
pushf
pop
and
add
scas
loope
lahf
pop
or
lds
insl
jmp
fstp
dec
or
or
mov
inc
jno
xor
xlat
and
or
push
notb
cmc
mov
nop
fistps
jl
and
data16
dec
sub
lods
dec
xchg
shll
pop
xchg
and
lock
int3
sahf
pop
outsb
adc
test
pop
mov
adc
dec
mov
dec
lahf
mov
arpl
xchg
icebp
mov
mov
mov
pushl
je
aad
xor
sbb
adc
fsubl
movsb
outsb
xor
pop
mov
cmp
divl
and
test
sbb
xor
push
icebp
pop
int3
scas
std
mov
adc
push
add
aam
cmpsl
sub
jae
xor
ficomps
and
in
sbb
scas
je
jae
inc
cmpsb
bound
jb
cmp
in
dec
test
hlt
add
cs
test
lds
dec
cmpsb
nop
clc
fiadds
call
lods
pop
daa
loope
inc
pop
push
pop
addr16
mov
js
sub
or
cmpsb
mov
outsb
xor
push
dec
rolb
fwait
bound
loopne
movsb
mov
jmp
xchg
popa
push
call
repnz
jl
adc
jno
jns
jae
pop
imul
stos
push
out
push
ret
sub
jne
insl
out
call
testb
pop
das
mov
pop
stc
xor
ja
xor
jge
pop
jns
pop
mov
push
jmp
lods
movsb
fcomps
popa
sahf
pop
sbb
push
pusha
inc
imul
push
in
std
push
shlb
inc
mov
hlt
xor
mov
outsl
lret
xorb
nop
add
loope
outsb
mov
into
push
mov
mov
rcrl
cmc
aas
imull
out
mov
dec
stos
push
aam
mov
mov
inc
pushf
dec
or
pop
cmp
sbb
dec
xchg
and
dec
loopne
mov
cmc
mov
mov
iret
lods
sti
mov
pop
and
packuswb
repnz
jp
stos
jo
movsl
mov
lret
add
aam
popf
aas
mov
inc
outsb
pop
dec
stc
sbb
pop
mov
adc
fsubrp
pop
leave
or
fdivs
je
mov
ss
push
mov
cltd
or
call
inc
out
fisubs
mov
xor
xchg
mov
mov
dec
mov
call
insl
insl
add
sbb
popf
or
cltd
lock
mov
in
jbe
or
roll
sahf
rcrb
sarl
scas
mov
add
xor
lds
pop
xchg
mov
dec
outsb
rorb
push
in
fwait
mov
int
out
insb
ret
adc
imul
xchg
pop
mov
fcompl
push
cltd
ficomps
mov
sbb
int
push
pop
lret
cmp
mov
xor
fmul
xlat
iret
pop
sub
movsb
ret
or
and
xorb
inc
scas
lret
pop
fldcw
dec
cmp
push
test
outsb
mull
and
add
pop
xor
movsb
adc
ja
mov
lods
add
pavgw
fwait
cmp
mov
xor
xor
and
add
hlt
out
test
adc
rorb
inc
imul
mov
rsm
pop
repz
stc
inc
mov
xor
mov
xor
dec
and
rcr
push
xchg
push
adc
adc
subb
jnp
sub
fldcw
mov
xchg
mov
cmp
addr16
pop
jle
sbbl
nop
repz
lods
dec
loop
lahf
clc
sub
jg
xchg
or
mov
add
imul
add
adc
and
stc
imul
pop
stos
std
lea
das
push
hlt
in
mov
in
xchg
dec
xchg
rcll
maxps
fs
inc
xor
jns
mov
or
mov
mov
xchg
gs
pushf
adc
dec
sub
mov
adc
xchg
mov
scas
lret
idivl
sti
call
adc
aas
push
and
or
push
bound
stos
roll
cmc
push
loope
cmpsl
insb
ja
div
dec
ljmp
movsl
or
mov
push
add
cld
mov
mov
adc
mov
jne
adc
loop
xlat
push
mov
jno
aad
je
imul
stos
ja
inc
pop
hlt
or
jno
mov
jne
jo
mov
jno
pop
push
enter
xlat
add
mov
cmp
daa
jnp
sbb
movntps
jmp
es
jp
or
addb
out
jmp
icebp
outsl
inc
aad
addb
repz
jo
xchg
inc
daa
lcall
inc
mov
fwait
or
enter
lds
popa
xor
shrl
fisubs
int3
jmp
sbb
test
cmp
xchg
pop
imul
das
push
push
arpl
pop
add
jge
pop
addl
sbb
out
fwait
mov
repz
dec
out
stc
nop
pop
inc
cld
imul
xchg
ljmp
pop
imul
sbb
pop
jne
xchg
xchg
popf
cmpsb
inc
mov
cld
xchg
pop
pop
mov
into
in
cmpsb
jp
jecxz
aad
xor
movsl
imul
or
or
inc
movhps
fsubs
or
imul
mov
in
lret
pop
daa
insb
adc
sbb
mov
mov
lock
adc
pop
dec
mov
aaa
addr16
sbb
mov
sub
sub
insb
cmp
popa
mov
and
mov
xchg
repnz
and
cmc
repz
cmp
push
rcrb
mov
repnz
out
cmpsl
pusha
sarl
inc
add
adc
and
scas
mov
inc
cmp
cld
pop
or
fadd
sbb
xlat
in
xchg
std
fstp
adc
add
loop
push
xor
cmpsb
insl
sti
std
adc
insl
pop
add
jmp
sbb
dec
pop
dec
dec
add
push
lahf
mov
icebp
dec
sarl
cmp
ror
push
loope
fs
cmp
dec
in
push
outsl
jmp
jnp
idivl
jp
fidivrl
xor
and
test
pop
fcompl
mov
xchg
or
enter
addr16
jecxz
ficomps
xlat
add
adc
loopne
sub
xor
pop
mov
xor
loope
add
test
mov
pop
xor
pop
fistpll
sahf
ffree
pop
ds
push
mov
lods
mov
mov
imul
loope
fiaddl
lods
add
iret
arpl
jg
jae
jne
or
ja
mov
pop
fidivs
mov
or
in
add
pop
adc
cld
popa
xorb
mov
sbb
outsb
sub
cmp
repz
fdivl
loopne
hlt
push
test
imul
lret
or
xchg
iret
mov
lods
adc
mov
and
lods
addr16
dec
push
aad
mov
les
pusha
pop
sub
into
cmp
out
imul
mov
ds
rol
sbb
std
insl
int3
xchg
cmp
aas
fisubrl
or
mov
inc
inc
inc
test
xor
fstpl
mov
hlt
fwait
outsl
xchg
or
aaa
test
and
lea
inc
or
push
push
adc
mov
lret
shr
cmpsb
pop
mov
inc
loop
outsl
std
ds
int
sbbb
jl
ja
addb
mov
pop
add
int3
inc
pusha
and
sub
dec
ss
sar
adcl
hlt
jle
je
cmpsb
sub
es
xor
jl
mov
dec
idivl
or
test
pop
adc
mov
rcr
or
mov
cld
pop
addl
xor
int3
push
sub
xchg
out
push
das
add
xor
test
adc
aaa
movsl
mov
pop
adc
mov
out
adc
push
sbb
pop
pop
mov
inc
mov
or
cmp
lahf
mulb
lahf
shrl
lahf
jno
pop
ror
mov
inc
mov
xor
test
idivb
ret
mov
iret
mov
pop
xor
jmp
and
xor
cmp
adcl
dec
dec
inc
and
xor
sub
jmp
test
scas
fdivrl
cmc
jb
xchg
outsl
push
jae
sahf
call
loop
sub
cmp
inc
push
cmpb
mov
cmp
adc
aam
ret
add
jno
adc
repnz
and
mov
pop
mov
dec
sub
inc
cmpsl
xor
std
rorl
mov
xor
movsb
das
push
xor
ds
aaa
or
jmp
adc
sti
repnz
in
and
adc
popf
xor
hlt
mov
dec
pop
js
hlt
add
or
mov
int3
push
fdiv
push
push
test
sub
jg
xor
les
call
pop
out
cmp
sbb
insb
inc
lds
ljmp
xchg
lock
rorb
push
int3
xchg
jne
popa
shrb
mov
xchg
sbb
ret
lret
push
sub
sahf
cld
std
sub
data16
jl
insb
inc
or
add
ret
loopne
ja
fstpt
pop
nop
inc
idiv
enter
in
insb
and
pop
sbb
cmpsb
repnz
aam
rorb
jb
ds
notb
std
mov
sub
add
ffree
dec
push
cmp
jae
sub
or
pop
inc
adc
jge
push
cmp
dec
je
mov
or
cmpsl
sub
fnstcw
pop
cmc
cmp
mov
xchg
repnz
mov
imul
jae
mov
jle
xor
or
cmc
lret
xchg
cwtl
push
test
outsb
xchg
ret
jg
pop
aad
or
out
mov
mov
inc
mov
idiv
repz
sub
out
push
sbb
into
sub
jp
lcall
repz
or
cmpsb
test
lds
mov
dec
leave
dec
xor
imul
ja
lds
cwtl
outsl
and
mov
push
leave
sbbl
sahf
jne
xor
lcall
outsb
mov
bound
pop
out
sahf
pop
dec
xor
mov
pop
ljmp
jge
test
ss
aaa
icebp
or
pop
popf
pusha
push
sahf
dec
xlat
fptan
dec
daa
xor
mov
sub
roll
icebp
mov
out
call
in
cmp
adc
cmp
push
mov
add
adc
aas
test
in
lcall
cmp
xchg
int3
or
loope
jge
add
dec
sub
fildll
mov
sar
sbb
mov
push
pusha
dec
int
aam
dec
fstpl
push
imul
jns
movsl
xor
push
sub
lahf
xor
mov
or
jmp
push
adc
cld
into
aad
mov
loope
inc
aas
cltd
mov
inc
mov
add
frstor
clc
ret
adc
dec
fwait
inc
std
push
daa
mov
push
pop
cs
loopne
push
aas
push
adc
movsl
test
fisubrl
test
jecxz
pop
call
imul
pop
add
pop
adc
int
clc
popa
mov
push
cmp
lea
js
adc
push
imul
clc
push
and
scas
out
pop
sub
cmpsb
fisttpl
test
sub
aad
mov
lret
or
aad
mov
divl
test
xlat
dec
pop
cli
push
stos
and
mov
pop
jbe
js
ds
push
mulb
jecxz
ja
pop
ret
les
jbe
roll
push
jo
xchg
aad
loope
ja
mov
sub
sub
test
pop
adc
add
jne
dec
mull
inc
jnp
mov
xorl
cwtl
inc
stos
out
cld
dec
test
xorl
and
cmp
inc
lret
xor
pop
xchg
xchg
imul
xchg
popa
sbb
test
pusha
jl
mov
popf
arpl
into
pop
loop
mov
cltd
add
sbb
icebp
nop
ror
cld
add
pop
cmp
adc
data16
movsb
mov
movsl
test
in
out
fmull
clc
ss
push
lods
out
ds
push
sub
push
sub
addr16
pusha
hlt
inc
inc
jo
cmp
adc
mov
insl
sarl
mov
pusha
int
lahf
arpl
add
nop
jg
or
jo
fidivrl
insb
dec
pop
add
movsb
out
jo
les
xorps
fsubr
rcll
xchg
push
std
aam
push
adc
fwait
sahf
jmp
test
shll
out
mov
xchg
sub
scas
ds
xor
inc
mov
jo
inc
push
fbstp
xchg
jno
xchg
hlt
pop
pop
pop
pop
adc
iret
aaa
sub
int
sbb
inc
call
lea
shr
push
cld
jb
scas
xchg
adc
fmuls
mov
cmpsb
mov
fs
jle
adc
iret
rcrl
lock
loop
inc
xor
fidivrs
in
daa
cmp
or
lret
sti
ljmp
das
fbstp
pop
rcl
cmpsl
rclb
pop
push
sub
cmp
dec
lock
std
scas
xchg
mov
nop
jecxz
lods
js
mov
insb
lcall
and
repnz
adc
add
scas
jns
jecxz
push
or
mov
and
adc
sub
nop
leave
rcrb
jmp
sbb
inc
je
dec
or
xchg
inc
outsb
jne,pt
pushf
or
mov
or
repz
and
fisttps
xor
movsl
shl
mov
fs
imul
test
or
sbb
fbstp
or
push
popa
movsb
aaa
cmp
mov
sahf
sahf
xchg
mov
and
mov
repnz
iret
mov
and
sub
xorl
idivl
and
and
jecxz
imull
push
cmp
clc
stos
cmp
lock
sub
push
mov
pop
or
adc
mov
mov
jge
pusha
or
lcall
xchg
pop
insl
push
mov
ss
cmp
inc
inc
subb
adc
aas
aaa
xor
jmp
into
cmpb
inc
movl
xchg
mov
cltd
jbe
push
icebp
xchg
loop
adc
shll
jno
mov
cmc
push
out
jns
adc
cmc
jno
orb
repnz
pop
bound
scas
stc
sub
aas
in
sbb
leave
inc
jo
hlt
jnp
outsl
neg
icebp
dec
jbe
inc
push
jnp
sub
fists
push
imul
js
int
push
sub
lock
dec
inc
cmpsl
jecxz
add
pop
repz
rcrl
es
mov
sub
cld
dec
insb
pop
adcb
xchg
jg
lret
repnz
xor
dec
mov
jp
inc
mov
dec
es
repz
mov
mov
pop
push
ficoms
push
aad
sub
das
push
dec
mov
fs
loopne
xchg
dec
jecxz
dec
mov
insl
xchg
in
pushf
bound
adc
adc
loop
aaa
fisttpl
in
aaa
insb
sbb
repnz
push
in
cmpb
add
aas
in
sub
stos
shrl
cli
repz
xlat
bnd
mov
or
pushf
xchg
mov
pop
push
hlt
adc
pop
jle
lock
lods
jnp
sbb
or
jb
push
mov
sub
mov
inc
jg
jno
jae
cmpb
dec
movsb
sub
sbb
jns
addr16
imul
jbe
scas
lret
mov
aam
mov
int3
sbbb
test
out
out
scas
or
mov
or
xchg
xchg
jl
mov
mov
xchg
js
cmc
pop
ja
repnz
sahf
ret
jl
xor
mov
or
dec
xor
dec
xor
jae
push
pop
jecxz
aad
inc
leave
pop
fwait
xlat
mov
inc
mov
addr16
pop
dec
es
jl
loope
std
cmpb
adc
outsb
mov
aad
or
sahf
push
xor
cli
inc
dec
sar
les
xchg
loopne
pushf
lea
div
aaa
jne
pop
and
add
cmp
pusha
data16
repnz
lds
xchg
jle
ja
cmp
loop
mov
cmp
daa
scas
lea
es
inc
mov
shll
jnp
adc
xchg
in
arpl
add
cmp
loope
pop
ret
iret
mov
vmread
fbld
testl
test
push
add
jecxz
test
mov
arpl
test
sbb
dec
jp
js
push
add
cld
fbld
popf
dec
pop
xchg
add
mov
lahf
xchg
or
sub
aam
jns
mov
fdivrp
divl
push
add
std
movsl
sbb
jle
outsb
inc
push
dec
bound
int
adc
and
jle
lods
inc
insb
dec
push
mov
adc
nop
out
ja
stos
xor
push
es
int
mov
adc
pop
cld
repnz
mov
mov
dec
jp
jo
mov
mov
insl
imul
sbb
jp
cld
pop
mov
jbe
and
sahf
das
out
inc
fisubl
add
ffreep
and
sub
repnz
pop
xchg
xor
or
in
test
aad
stos
and
xchg
add
lds
aaa
xor
dec
push
push
xchg
test
sbb
ret
test
pushf
mov
cmpl
leave
jge
daa
clc
jle
pushf
sub
fnsave
out
jnp
sbb
or
lds
testb
sub
jecxz
sti
xchg
arpl
mov
nop
test
push
das
dec
leave
jge
lret
pop
mov
mov
mov
mov
mov
xor
or
insb
ljmpw
imul
xchg
jmp
adc
push
or
fistpl
cmp
pop
imul
stos
cmc
push
pusha
imul
sub
repz
fimuls
inc
jecxz
dec
jmp
mov
aas
stc
lret
mov
mov
iret
dec
dec
push
or
lahf
andl
pusha
push
js
inc
call
mov
pop
leave
clc
inc
sahf
daa
adc
push
jno
jecxz
imul
je
out
pop
pop
lods
cmpl
decb
or
js
scas
xor
adc
fs
imul
mov
fs
or
sub
jle
outsl
mov
sub
jecxz
stos
cmp
aam
dec
in
sbb
les
push
int3
nop
in
movsb
addr16
or
and
jae
dec
rcll
mov
add
in
sbb
and
lret
mov
test
add
dec
push
stos
scas
sub
cmp
dec
imul
and
fwait
jae
push
or
sbb
push
or
mov
xchg
lea
sub
mov
or
mov
mov
sti
inc
pop
rcrl
push
call
cmp
jmp
inc
lret
xchg
icebp
mov
lods
cwtl
mov
mov
push
lret
and
lret
push
aam
dec
cwtl
xor
fstpt
xchg
das
js
les
arpl
jne
cmpb
aam
nop
repnz
lcall
cpuid
stc
fidivs
imul
xchg
iret
xchg
test
mov
and
push
xchg
insb
push
xor
mov
mov
mov
out
mov
push
movq
fxch
push
cmpb
test
lret
out
mov
bound
jmp
dec
je
sbb
jge
mov
nop
sub
loop
mov
cmpsl
lods
popa
cmp
xchg
aaa
popa
or
adc
add
mov
dec
insb
fs
xchg
pop
int
pop
mov
or
cld
gs
cmpl
addr16
xlat
cmp
cmpsb
popf
movsl
sub
xor
pusha
jecxz
flds
mov
cmc
xor
shr
cltd
add
pop
mov
dec
inc
outsb
jbe
sbb
sbb
lds
ja
mov
mov
out
dec
sbb
std
in
and
push
push
insl
clc
outsb
mov
fs
loop
or
mov
vmwrite
out
add
in
int
mov
sbb
inc
into
in
or
shrl
sub
repnz
add
mov
mov
mov
push
xchg
pop
fwait
push
dec
xchg
xor
testb
fisubs
and
enter
xchg
rcrb
out
arpl
adc
push
xor
enter
xchg
xchg
test
stos
ret
adc
les
mov
sti
pmaxsw
dec
movsb
lret
push
and
or
test
in
fimuls
push
sub
lods
rcll
inc
insb
cwtl
rcl
or
mov
fildl
nop
cmp
lds
and
inc
rorl
repnz
xor
orb
je
cmp
xor
push
sbb
add
lret
pop
sub
xchg
jge
aad
xlat
xchg
out
out
or
cmc
pop
iret
inc
test
lods
xlat
or
push
cmc
pop
dec
sarl
pop
pop
cmp
mov
or
cmp
out
arpl
pop
mov
bound
xor
das
lret
cmp
insb
jae
in
fwait
xor
out
movsl
sbb
addr16
pop
or
sub
mov
dec
addr16
js
shl
jl
loopne
jae
inc
ss
cmp
sbb
lret
mov
xor
xor
xor
jns
xor
arpl
pop
push
sub
pushf
inc
loope
push
in
cwtl
adc
jg
sbb
or
div
flds
xor
fnstsw
fstl
mov
or
dec
cmc
dec
js
fistpll
ret
mov
mov
xchg
movsl
hlt
xor
sti
mov
dec
adc
cmpsb
int
and
cli
arpl
fdivl
mov
rcl
sub
cs
or
xchg
adc
loopne
sub
scas
ds
mov
adc
out
or
mov
xor
aad
xchg
mov
adc
idivl
dec
jbe
ss
jnp
incl
jns
test
cmpsl
ja
outsb
fistpll
adc
push
clc
mov
or
pop
xchg
or
push
mov
sbb
cli
dec
adc
loopne
or
adc
mov
stc
mov
fs
push
mov
push
js
mov
jnp
jg
push
pop
jnp
pop
xor
jmp
pop
ret
mov
hlt
scas
push
imul
jle
addr16
ret
cmp
sbb
jp
sub
cmp
inc
push
nop
das
or
pushf
xor
fcompl
aaa
outsb
xchg
mov
pop
lods
sbb
lods
jge
pop
cli
stos
mov
mov
jle
stos
daa
ljmp
mov
jno
fimuls
lods
inc
jmp
aas
sbb
cmp
loope
xor
adc
out
aas
xchg
les
pushf
mov
lods
mov
dec
movsb
fists
cmc
dec
pop
pop
hlt
jne
enter
jne
fldenv
cmc
rcrb
lock
dec
dec
pusha
push
or
mov
add
cmpsb
xchg
jecxz
ret
mov
inc
icebp
push
mov
daa
aad
cli
sbb
xor
push
fcoms
das
divl
js
ss
popf
ja
inc
xor
fwait
cld
popa
xor
aaa
push
mov
in
testl
mov
iret
pop
jb
scas
dec
mov
fnstcw
mov
dec
cwtl
rorl
scas
or
cwtl
push
in
sbb
insl
cli
ret
and
mov
add
cld
cld
pop
je
int
cmp
das
cwtl
mov
addb
int3
int
mov
repz
dec
mov
repnz
subb
dec
mov
mov
xor
push
or
fpatan
mov
sbb
sub
mov
and
push
fucom
add
cmp
lods
xor
sbbl
xchg
les
loope
fucomi
ds
insl
jg
int3
pop
dec
fisttpll
mov
push
xchg
sahf
mov
mov
push
cli
sbb
imul
xchg
xor
cmpsb
imul
aam
jge
nop
lock
into
cmpsl
dec
pop
negl
sbb
xor
cld
icebp
mov
popa
fdivr
adc
or
gs
mov
pusha
adc
bound
xor
push
sti
dec
mov
sub
cli
vmwrite
es
lds
cmp
pop
pop
add
jb
pop
pushf
or
in
push
flds
xorl
cmp
jbe
pushf
inc
and
pop
fdivr
popa
mov
sti
test
fs
cs
jo
dec
sahf
leave
pop
cltd
mov
fcomps
xor
cmp
jo
push
cmp
mov
add
xchg
mov
cmc
xchg
lahf
shl
sbb
xor
xlat
jns
je
mov
adcb
out
sbb
or
and
lret
xlat
cmp
iret
sbb
push
push
iret
clc
paddd
iret
sbb
cs
imul
out
sub
jmp
adc
push
mov
mov
add
mov
jnp
push
fmulp
push
xchg
fstp
loopne
xor
sbb
out
shr
mov
push
leave
sbb
fs
pop
jns
fstps
call
ret
addl
mov
in
iret
std
mov
pop
fidivrl
test
sarb
cmc
jae
xlat
pop
pop
loopne
mov
stc
ja
pop
xchg
xor
adc
xchg
cmc
add
pop
pushf
mov
sbbl
pop
aam
test
andl
jae,pn
stos
pop
outsl
sbb
push
add
cwtl
push
lock
push
ds
cld
sub
push
push
push
push
test
jp
js
push
stc
imul
pop
lcall
pop
ret
jb
xchg
sarl
loop
subl
mov
sahf
imul
mov
xlat
jg
sahf
xor
sub
mov
mov
or
push
ror
aaa
inc
scas
jne
and
insb
les
cmp
repz
fistpl
push
or
push
vcvttsd2si
lods
dec
fwait
mul
jo
imul
jecxz
imul
xchg
call
xchg
push
or
jecxz
mov
out
ret
xor
xchg
outsl
jmp
mov
dec
subb
es
sahf
out
jl
bound
cmp
push
out
fildll
jge
jp
mov
fisubrs
mov
and
push
mov
push
push
dec
hlt
push
jp
cmp
stos
and
jo
jp
ret
inc
out
fstpt
sbb
sbb
push
test
mov
mov
push
ds
iret
cmpsb
push
fs
pop
dec
fs
adc
dec
mov
sbb
pop
cld
inc
mov
sub
sub
sbbl
inc
mov
cwtl
mov
mov
pop
orb
jae
movsb
lret
rorl
mov
jle
sqrtps
cmc
push
add
push
ds
call
inc
mov
ret
and
mov
bound
shlb
adc
mov
imul
je
cmp
cltd
mov
mov
imul
push
pop
mov
subb
xchg
push
inc
out
fs
add
cmp
call
aaa
xchg
mov
scas
lcall
adc
ret
jg
notl
loope
pop
or
or
fisubrs
mov
dec
mov
les
xor
les
sarb
fmuls
xlat
std
ss
push
or
daa
scas
jbe
shrb
aas
mov
or
lahf
movsl
jmp
cmp
test
adc
aaa
or
scas
cmp
xchg
cmp
icebp
mov
push
pop
sub
retw
pop
push
or
pop
and
pop
inc
lock
cwtl
and
dec
scas
movb
pop
adc
xchg
hlt
test
pop
cld
adc
repz
mov
push
lahf
iret
dec
in
pusha
pop
mov
adc
mov
mov
repnz
stos
jge
push
cwtl
ret
push
sbb
mov
iret
ja
cs
adc
jns
push
aam
ret
dec
sbb
sbb
inc
push
mov
or
mov
xchg
or
mov
sbb
scas
adc
icebp
or
test
jno
fists
out
mov
dec
or
or
arpl
fcmovu
xchg
js
dec
cwtl
lods
repnz
jmp
lods
mov
repz
ja
jmp
sbb
imul
fsubrs
shll
lods
cmp
and
lock
xor
loope
clc
push
inc
rclb
jg
pop
jbe
call
xchg
and
jp
push
inc
inc
aas
aas
add
push
add
push
stos
xchg
daa
push
jnp
js
sub
paddq
and
popf
xchg
xor
jnp
mov
inc
cmp
int
dec
scas
cmc
andb
ds
jmp
dec
cmpsb
adc
stos
cld
test
lock
pop
fildl
xor
fistpl
and
popa
mov
pop
stos
or
popa
mov
jle
add
dec
pushf
mov
je
pop
push
fmull
sub
add
cmp
lea
bound
sbb
jo
cli
xchg
leave
rcr
mov
adc
fwait
mov
xchg
in
call
stos
sbb
push
xchg
xor
movb
lods
out
sahf
xor
shrb
cli
mov
loope
mov
es
mov
insb
fstp
xchg
add
sbb
xchg
and
out
fbld
out
push
lea
xorl
cmp
dec
mov
xchg
mov
insl
and
in
test
pop
dec
sub
test
push
or
ja
mov
dec
test
mov
dec
lea
push
lods
repz
or
mov
mov
inc
xchg
test
or
push
mov
jno
adc
icebp
pusha
pop
or
mov
push
fldcw
popa
scas
stos
int
sub
sbb
add
shll
fs
fists
pop
addr16
add
out
jl
adc
fldl
ret
fwait
xor
xchg
or
sbb
push
outsb
scas
insl
addr16
ljmp
or
push
dec
loop
ljmp
nop
jb
adc
lcall
cld
xchg
psubusb
cmp
pop
mov
mov
mov
jge
into
jae
sbb
jns
and
push
inc
cld
inc
in
sbb
mov
mov
movsb
fcompl
xchg
xchg
and
aas
aaa
mov
xchg
scas
rclb
cmp
or
sbb
popa
jmp
pusha
and
lea
adc
push
imul
in
fsubrl
out
inc
rcrb
in
xor
or
xlat
sub
inc
push
insb
daa
dec
dec
xchg
sbb
cmpl
mov
inc
sarb
lahf
sbb
xchg
movl
dec
les
add
test
xchg
lods
or
mov
in
mov
cwtl
mov
pop
jg
add
les
scas
pop
pushf
test
jbe
xchg
jp
stos
xchg
xchg
inc
lea
orl
add
xchg
push
mov
sbb
sub
xor
fadd
in
mov
xchg
lcall
and
out
pop
xchg
pop
xor
jmp
adc
xor
inc
test
imul
push
clc
into
std
xchg
into
push
into
inc
aaa
push
cmp
adc
shll
fimuls
xor
bound
lea
push
int3
push
cld
and
outsb
divb
sbb
add
mov
cmp
out
loop
shrb
lds
mov
xchg
pop
in
jmp
popa
push
rcrl
xchg
arpl
loopne
adc
stos
mov
movsb
in
and
sti
sbb
icebp
nop
add
xchg
add
dec
mov
adc
push
dec
mov
das
mov
xor
rolb
jne
bound
mov
ret
sbbl
insb
mov
aam
popf
push
scas
sti
aas
xchg
pop
in
cli
xor
fnstcw
mov
xorl
adc
pushf
movsb
cmp
dec
call
mov
pop
data16
pop
addr16
adc
xchg
jp
sbb
adc
or
xchg
sub
xchg
cmp
and
fwait
pop
cmp
dec
and
add
push
sti
pop
fldcw
daa
sbb
jecxz
mov
xor
xchg
bound
shl
pop
and
inc
sbb
jns
in
cmp
mov
outsb
adc
ret
add
into
inc
pop
xchg
add
mov
and
dec
adc
mov
adc
dec
rcll
add
mov
out
mov
jns
out
andl
rol
jbe
out
movsl
sub
je
insb
stc
bound
jl
enter
xchg
jno
push
lret
pop
cmpsl
fstps
mov
cmp
mov
int
out
xor
mov
or
lods
cmp
mov
lds
lahf
push
je
pop
pop
das
mov
lock
jbe
inc
lds
test
fsub
jne
cld
mov
lds
sbb
cmp
lods
sbb
jb
push
outsb
adc
mov
sub
pushf
out
pop
loop
jns
dec
out
aad
rcrb
sub
lahf
xchg
adc
mov
add
fs
add
push
in
mov
shrl
sub
xchg
cmc
pop
xor
mov
mov
jmp
inc
cmpsb
xlat
pop
mov
lds
out
push
mov
pop
jmp
sbb
xchg
mov
cmp
push
pop
cmp
andl
stc
pmaxub
sub
and
ror
gs
or
dec
jns
adc
sbb
cmp
pop
bts
xor
pop
jg
bound
test
movsl
mov
out
je
and
icebp
pop
dec
sbb
dec
fadd
daa
icebp
sbb
dec
pusha
lcall
data16
jae
pusha
pop
repnz
aas
add
mov
aas
insl
mov
xor
out
dec
fwait
mov
out
jecxz
das
jg
lods
shr
pushf
decl
jg
cmp
sub
or
sbb
sti
call
pop
push
cmp
adc
push
out
pop
aad
movsb
xorl
jp
jmp
xchg
xor
movsl
pop
push
ds
inc
dec
cmpsb
mov
negb
jmp
leave
sub
sbb
test
sub
enter
je
mov
sub
mov
rolb
cwtl
mov
adc
xchg
sti
dec
mov
sahf
test
push
inc
xor
mov
and
orb
xchg
fsubr
adc
push
adc
int3
xor
iret
xor
out
fisubs
into
cmc
lret
cmp
sbb
fiaddl
fs
test
jo
inc
xlat
push
imul
inc
mov
xor
jns
xor
ja
das
dec
mov
xor
mov
push
jno
xchg
add
cmp
in
push
mov
and
ffreep
icebp
mov
push
aam
jmp
adc
fildl
adc
popf
jb
fdivr
addb
lods
fldenv
test
mov
out
sbb
sbb
mov
clc
sbb
jb
fstpt
rcrb
xor
dec
fldl
sbb
insl
fldl
pop
jae
add
outsb
mov
sarb
mov
cld
jp
mov
stos
jno
nop
xchg
mov
aam
cs
les
sbb
sub
sbb
bound
add
and
aam
adc
aad
mov
scas
cmp
pushf
test
mov
orl
pop
pop
dec
mov
addr16
cli
in
add
dec
add
or
push
cmc
inc
leave
push
jg
push
movsb
pop
in
mov
pop
inc
loopne
pop
test
mov
enter
in
pop
mov
callw
rolb
fs
push
stos
out
loope
mov
movsb
mov
pop
add
lods
dec
sarl
or
pop
out
dec
xchg
mov
inc
das
adc
fcoml
mov
scas
insb
add
adc
pop
jle
xor
in
std
fdivrl
out
rclb
mov
les
push
jge
int3
or
mov
jp
cmp
pop
mov
xchg
into
clc
not
jmp
xchg
out
pop
xor
ja
mov
cmp
fmuls
sbb
stos
pop
adc
fcompl
hlt
push
imul
testl
test
push
leave
cmovp
jne
mov
jp
stc
lock
mov
mov
cmpsb
in
push
push
jns
mov
dec
xchg
js
loope
std
push
adc
testb
gs
cmc
movsl
clc
jl
rorb
mov
arpl
push
roll
push
push
jbe
rcll
add
sub
lds
push
cs
mov
dec
add
jecxz
out
or
ficompl
ds
mov
dec
iret
je
clc
and
add
sbb
outsl
loop
and
sub
mov
lea
loop
or
add
aaa
push
adc
sbb
cwtl
jb
mov
repnz
nop
pop
mov
int3
sub
push
scas
inc
dec
das
jae
and
pushf
sub
push
sbb
mov
scas
sub
mov
push
lds
mov
ds
and
ds
test
shlb
mov
fsts
xor
jno
pop
jge
inc
push
adc
pop
scas
aas
mov
mov
scas
outsb
inc
mov
cwtl
dec
stos
mov
loope
mov
pop
inc
outsl
jmp
aam
inc
pop
xlat
lahf
mov
xchg
in
xchg
mov
dec
pop
arpl
pusha
and
inc
mov
imul
call
leave
out
roll
aaa
or
cwtl
push
push
cmc
in
push
lret
jp
fs
mov
in
dec
mov
xlat
mov
jle
mov
aaa
mov
andl
int3
loopne
rorb
test
xor
pop
lret
or
xchg
orb
pop
scas
aad
jbe
jge
xchg
cmpb
js
cmp
sbb
push
adc
sub
out
movsl
adc
aad
out
jbe
add
ss
xor
push
sbb
lret
pop
addl
jp
fiadds
scas
push
nop
popa
movsl
addr16
jg
xorl
lods
movsb
xchg
mov
and
and
icebp
std
ss
push
add
cli
push
xor
mov
fiaddl
icebp
ds
sbb
das
fisubrl
in
dec
dec
out
into
pop
xchg
and
loop
cltd
ljmp
and
jge
and
cmp
mov
or
cmp
jns
loop
mov
pushf
jecxz
sbb
and
mov
cbtw
add
aad
cmp
aas
mov
sar
adc
sub
jne
mov
sbb
shll
les
inc
scas
inc
into
dec
aaa
mov
test
sbb
mov
jl
xchg
shl
pop
mov
orb
or
in
insl
pop
dec
sbb
push
lahf
js
jp
packuswb
or
in
and
insb
adc
cld
bound
lret
xchg
push
adc
mov
test
mov
scas
push
or
insl
xchg
mov
xchg
movsb
sti
movsb
mov
jns
ds
fdivp
scas
inc
mov
add
mov
pop
inc
xchg
mov
push
les
and
bound
ja
lods
dec
dec
pop
xor
daa
lcall
push
pusha
adc
cmp
rolb
in
mov
and
add
out
daa
sub
pop
test
rorl
or
xchg
call
push
pusha
jnp
lock
push
cmp
faddp
cmpsb
outsl
sti
fsubp
pop
call
mov
push
add
loopne
push
js
fstpl
or
outsb
push
hlt
jmp
xlat
inc
lea
pop
in
mov
ljmp
jbe
jno
icebp
test
in
call
ret
mov
cmp
sti
pop
inc
test
push
loopne
scas
mov
jmp
lds
push
cltd
call
dec
jle
sub
lret
cli
adc
out
push
ret
xchg
push
int
lods
mov
pop
mov
jecxz
pop
jbe
cmp
daa
std
sub
mov
jbe
pop
lret
repnz
lret
cmpsb
outsb
out
fidivrl
jnp
stos
test
lret
adc
mov
fwait
push
clc
daa
pop
fst
shlb
dec
iret
mov
xchg
or
cmc
in
into
movsb
mov
push
fs
or
loop
fdivrs
mov
sub
mov
mov
push
xchg
inc
push
pop
pop
divl
sti
push
outsb
pop
inc
andb
jecxz
sub
scas
pushfw
mov
cli
sbb
add
mov
mov
cmc
fbstp
fdivl
mov
push
pop
mov
sbb
jg
mov
mov
and
inc
mov
stc
lret
adc
rclb
sbb
mov
mov
cmc
inc
fidivrs
jecxz
test
adc
pusha
nop
xchg
cmc
and
loope
and
pop
dec
mov
aaa
mov
mov
icebp
fwait
dec
scas
stos
mov
outsl
scas
sub
gs
sub
add
push
xor
push
int
cmp
sbb
push
loope
sarl
sti
ret
adc
test
sbbb
xor
sahf
cmp
stos
push
ret
in
nop
in
mov
cmp
insl
ds
je
nop
mov
clc
dec
cmp
dec
mov
inc
pop
push
das
mov
out
insl
jbe
std
jb
scas
incl
pop
adc
jle
dec
sahf
jb
xor
xchg
insl
loope
xor
add
ret
int
scas
and
xchg
das
arpl
push
insb
fwait
pop
inc
in
dec
sbb
popf
jb
inc
mov
pop
fldenv
or
push
gs
dec
pop
pop
cmpsb
rol
mov
mov
xor
cld
fadds
and
js
cmp
faddl
xlat
pusha
aad
jbe
cmp
pop
repnz
gs
dec
sar
testl
cmp
jb
mov
int
jp
inc
jno
rorl
or
mov
lcall
adc
add
shlb
mov
rcll
loopne
dec
loopne
sub
ljmp
lds
subb
push
jns
js
stos
aam
int
popa
jno
ss
pop
adc
add
in
bound
ja
ret
imul
push
push
test
int3
adc
lret
je
xchg
xlat
jnp
addr16
lock
ret
xor
adc
push
hlt
mov
inc
cwtl
outsb
inc
stc
nop
sub
repz
clc
push
sub
icebp
inc
sub
mov
sub
dec
hlt
mov
fldl
sub
test
stos
lock
mov
dec
mov
push
push
call
rcr
rorl
mov
cli
xchg
dec
test
prefetch
inc
aas
data16
in
jmp
call
xchg
mov
insb
icebp
out
mov
lahf
cld
clc
fnsave
nop
psubsb
pop
xchg
add
lahf
sbb
je
nop
sbb
sub
push
pop
adc
out
arpl
lds
les
das
xor
rcl
repz
jno
loope
push
jle
mov
ret
xor
adc
jo
in
rcll
sub
dec
jo
dec
cmp
cmp
jne
out
flds
inc
jbe
cs
mov
mov
lret
les
outsb
mov
pop
cmc
orb
push
mov
mov
and
imul
xor
jge
std
ror
xchg
bound
jno
dec
aaa
mov
dec
faddl
sbb
mov
call
loopne
sbb
lcall
test
jnp
arpl
jae
jp
lahf
inc
in
dec
ret
nop
cmp
lcall
mov
test
loope
sub
lret
pop
pop
mov
int3
popf
inc
cmp
hlt
out
rcrl
std
scas
int
mov
sbb
xor
movsl
out
decl
fnstsw
push
aam
jp
idivl
test
enter
inc
or
sbb
and
sti
leave
leave
or
add
fmull
cltd
inc
and
mov
daa
sbb
roll
das
push
sub
lret
xor
arpl
in
jp
push
ss
cltd
movsb
xchg
dec
and
mov
jbe
sbb
pop
ds
mov
and
mov
shlb
add
incb
movsl
add
mov
scas
cmc
inc
popa
lret
dec
les
call
mov
repnz
sub
xor
jbe
in
lods
adc
in
out
rclb
popf
or
cmp
or
cmp
scas
and
fs
lds
dec
stc
dec
setns
or
mov
xor
insb
or
int3
fcoms
jno
sahf
popa
push
and
test
icebp
sbb
and
imull
int
pop
sbb
fwait
xor
cmp
pop
lea
aad
add
stc
cld
mov
jecxz
xor
pop
or
cltd
or
movsl
pushf
pop
or
loopne
test
sbb
push
cmp
inc
stos
ja
push
inc
adc
adc
adc
test
cli
je
test
int3
inc
rcrb
ljmp
mov
mov
ljmp
mov
cmp
or
arpl
call
mov
and
inc
cli
cli
je
add
mov
aaa
mov
sbb
sub
int3
scas
icebp
fdivrl
fiaddl
pop
sub
adc
lds
into
call
adc
sub
out
pop
movsl
inc
scas
call
inc
xchg
dec
xchg
push
int
xor
pop
ds
into
dec
xchg
mov
insb
xor
push
pop
les
sti
cmpsl
shll
and
xor
cmp
or
or
sti
xor
push
loopne
xchg
lret
push
inc
push
hlt
sub
push
fcoms
push
aad
mov
ss
arpl
aaa
xchg
out
add
stos
mov
mov
cltd
inc
sub
pop
adc
or
add
clc
or
adc
mov
fs
test
in
out
dec
stc
jae
jo
and
push
xchg
push
adc
call
fwait
out
xor
jle
lods
jnp
sarl
mov
or
testl
fxch
sarb
mov
out
mov
test
fwait
sub
push
jb
or
dec
push
fimull
or
test
loopne
call
adc
mov
hlt
pop
sub
mov
or
loop
in
insb
out
test
mov
mov
lret
test
fdivrs
fisttps
gs
xchg
and
cmp
out
in
mov
fnstenv
xchg
mov
ljmp
jb
mov
in
mov
mov
cmp
mov
pop
repz
inc
aaa
mov
clc
xchg
mov
test
adc
cltd
ljmp
jle
cli
arpl
sbbl
insl
dec
sub
mov
pop
lret
pop
repz
mov
or
or
xor
sahf
jo
cmp
js
int3
cmp
mov
sub
cmp
cs
or
psubusb
pusha
int3
js
xor
inc
and
insl
je
ret
mov
sbbb
outsb
xchg
xchg
ret
out
dec
mov
mov
jb
hlt
push
daa
xor
push
sbb
inc
fmuls
add
outsl
push
js
daa
mov
movsl
andb
sub
lea
mov
pop
push
push
and
ljmp
push
andb
lock
mov
jnp
or
jle
imul
or
movsb
outsl
xchg
jo
push
movsb
cs
movsb
into
mov
imulb
xlat
cmpsl
fsubrl
inc
pop
push
stos
ret
mov
sub
inc
stos
scas
dec
inc
xor
pop
in
fs
xchg
dec
and
test
aam
push
out
popf
adc
popf
sub
mov
pop
test
jmp
mov
and
cmp
push
xor
jbe
shrb
lds
mov
repnz
xlat
adc
dec
insl
cltd
mov
hlt
psubd
mov
mov
push
xor
fnstcw
sub
mov
sahf
mov
fstl
xchg
or
push
cmp
andl
out
fdivl
cwtl
fstl
or
nop
test
decl
rcrl
mov
jbe
test
cmc
ffreep
cmp
mov
scas
ficompl
cs
sahf
push
rorb
sbb
xchg
add
lds
test
icebp
sbb
fs
bound
enter
push
mov
subl
jo
ja
adc
mov
ret
repz
jo
inc
jmp
xor
jge
jmp
and
inc
or
push
mov
int
mov
mov
ret
scas
fldenv
dec
dec
ret
andb
bound
xorb
dec
lds
aaa
cmp
aaa
jb
adc
sbb
int3
in
xchg
int
scas
cmpsl
pop
and
into
lods
xchg
inc
pop
out
push
jo
test
jle
pop
jne
movsl
ljmp
fstpl
xchg
je
xchg
rsm
inc
push
iret
out
adc
fsubrl
or
fistps
jmp
cli
or
into
xor
mov
bswap
add
mov
sub
jnp
cmpsb
xlat
outsl
inc
sub
fcoms
lea
std
mov
add
test
addr16
lea
pop
pushf
outsb
mov
sub
sub
imul
mov
dec
je
repnz
enter
jb
sub
cmp
xor
mov
inc
cmpb
and
icebp
pop
xchg
jle
arpl
jl
out
hlt
mov
xchg
push
or
fsubl
pop
jp
lock
das
jge
out
mov
jecxz
adc
adc
fildl
repz
test
add
mov
mov
add
xor
cs
cmpsl
popa
xor
int3
sahf
dec
into
insb
adcl
add
pop
test
scas
xchg
int
movsl
pop
mov
popa
js
iret
jge
inc
mov
pop
fbld
mov
icebp
icebp
sub
and
jge
mov
push
fists
jnp
mov
les
mov
rclb
lock
in
mov
hlt
mov
jle
cmp
mov
push
mov
dec
dec
inc
sbb
std
add
pop
jns
int
and
loope
add
lret
mov
out
cld
cmc
xor
imul
push
jg
mov
pop
adc
imul
jmp
ja
mov
push
push
cld
push
repz
or
and
js
cs
insb
dec
es
stc
icebp
push
jg
dec
lret
lods
shll
push
xchg
into
jl
aad
pop
aaa
xchg
mov
je
adc
pop
mov
test
push
iret
sub
mov
push
in
xchg
mov
pop
push
jbe
shr
out
adc
clc
inc
into
mov
lods
mov
ret
sar
shr
scas
arpl
inc
fcoml
pmulhuw
ret
jno
mov
xor
test
sbb
pop
or
aam
test
je
fs
inc
pop
push
aaa
add
pop
sarb
and
jecxz
push
in
movsb
fistpll
bt
movsl
xchg
roll
test
jns
loopne
ja
mov
je
or
orb
cmpsl
jge
lds
ljmp
cmp
cwtl
dec
cmp
push
icebp
inc
mov
add
mov
sahf
mov
or
mov
in
sbb
in
dec
push
pop
xor
dec
fists
arpl
es
andb
sub
out
cmp
popl
lret
and
ja
movsb
cmp
in
jmp
xchg
adc
inc
push
xchg
int3
jbe
cmp
in
mov
adc
arpl
mov
in
mov
bound
mov
xchg
repnz
lret
test
xor
jge
mov
mov
jmp
mov
lods
test
xor
jle
scas
adc
out
mov
roll
fmull
add
aad
mov
scas
jno
xchg
cwtl
pop
xchg
push
xorl
adc
cmp
cmpsl
iret
arpl
adc
stc
test
pop
jb
and
inc
cli
lods
pop
dec
jg
jmp
push
jge
adc
outsl
cmp
pop
pop
out
sbb
sarl
jecxz
insb
or
enter
mov
call
in
icebp
jbe
pop
xchg
out
mov
cmpsb
add
cld
cwtl
stc
int3
mov
cmp
jp
inc
sub
mov
mov
rcrb
adc
cmp
inc
cmp
repnz
xor
in
dec
mov
insl
pop
addl
fwait
sarb
std
sbb
push
pop
test
adc
inc
ljmp
push
and
mov
imul
dec
xchg
fiaddl
push
cmp
popf
cmp
pop
fmul
das
das
insb
ret
push
pushf
es
std
mov
xor
mov
cmp
lock
call
pop
sbb
int3
sbb
lds
iret
enter
or
sbb
sub
sbb
push
dec
int
aaa
push
test
and
out
lods
and
pop
aaa
jg
mov
lcall
jnp
imul
arpl
cmpb
push
in
add
movsl
jnp
add
pop
out
push
adc
andb
clc
jecxz
jne
mov
addr16
data16
mov
test
mov
add
cmpsl
popf
stos
lahf
pusha
and
jae
jecxz
xchg
dec
sahf
aam
push
repnz
add
jl
pusha
and
adc
mov
jnp
mov
insb
lock
dec
xchg
in
ret
jb,pn
lods
subl
cmc
rorb
mov
gs
mov
lcall
sahf
mov
or
or
mov
push
xchg
sbb
addb
add
lds
jno
test
les
cmp
dec
fucomip
fcos
add
pop
ret
in
fnstenv
scas
cmp
cmp
imul
mov
ljmp
pop
leave
lret
insb
dec
mov
xchg
sbb
lret
mov
push
mov
les
rolb
cmp
jg
sbb
iret
rol
and
dec
shr
inc
adc
mov
mov
repz
lret
out
iret
cmp
out
in
aas
pop
xchg
mov
inc
orb
push
ljmp
sub
loopne
andl
mov
lods
lret
scas
ficoms
xor
pushl
or
cli
les
popa
xor
pop
daa
in
push
jnp
subl
fwait
lret
push
mov
insb
and
lcall
push
out
push
or
stc
sbb
or
jne
jns
insl
mov
jo
sbb
xchg
insb
mov
sbb
inc
sub
xor
adc
mov
adc
shll
sub
and
mov
jg
sbb
pop
inc
fiadds
fidivl
cld
sbb
leave
push
add
fstpl
xchg
imul
mov
mov
push
rcrb
mov
and
insl
mov
fmull
loopne
jno
pop
fistpl
or
push
xor
sarl
cmp
cmp
int3
aas
adc
pop
sub
push
cmp
dec
cwtl
or
push
jo
enter
mov
mov
pop
dec
xchg
repz
jl
clc
xchg
shl
cmp
and
xchg
mov
inc
hlt
push
addl
mov
push
sti
pop
scas
lds
jmp
dec
rolb
pop
mov
inc
push
sbb
mov
cmp
sub
jl
les
nop
scas
push
movsb
inc
lods
arpl
jge
and
test
scas
xor
bound
push
sub
cmpsl
cld
cli
pop
push
shrl
aad
mov
popa
inc
pop
popf
stc
add
sbb
int3
fcompl
in
lock
dec
pop
movb
mov
mov
stos
repnz
mov
popf
mov
pusha
and
aad
popf
or
sub
or
mov
cmp
cmp
and
das
lds
pop
mov
and
xchg
pop
cs
inc
or
and
add
test
xchg
jo
fcoml
test
orb
pop
icebp
enter
inc
jbe
xchg
arpl
shll
movsl
dec
fwait
mov
mov
adc
and
or
mov
hlt
adc
mov
insb
mov
jle
lahf
fistps
mov
or
pop
xor
dec
ret
roll
stos
pop
or
imul
xchg
sbb
into
mov
jmp
stos
dec
mov
add
jp
leave
ret
jbe
mov
jg
push
push
cmpsb
adcb
jp
pushf
call
test
jb
testb
jno
sbb
push
jno
fs
negl
and
cli
insl
adc
mov
lds
push
mov
inc
fdivrs
iret
stos
hlt
push
jnp
pusha
sarl
bound
fdivrs
jle
iret
out
mov
sub
add
jne
jns
pushf
cwtl
bound
mov
das
mov
inc
pop
or
jecxz
mov
sti
test
outsb
test
inc
mov
shrb
dec
mov
add
mov
loope
jecxz
cmpsl
ret
xchg
sbb
adc
mov
mov
imul
mov
mov
pop
cmpxchg
aaa
xchg
scas
sbb
scas
or
repnz
mov
adc
jns
mov
lods
xchg
aam
sub
shlb
dec
pop
pop
cltd
iret
xor
and
pop
mov
pushf
inc
ljmp
mov
jo
inc
dec
js
xor
aad
push
lods
jae
outsb
cmpsb
xchg
ds
int3
xlat
punpckhbw
lods
mov
in
jge
ret
lcall
and
int
cmpb
and
fstps
push
mov
stc
sbb
lret
mov
dec
jne
test
jo
aam
jne
rol
mov
jb
nop
xchg
and
in
imul
add
testl
outsl
popa
outsl
loopne
lahf
in
in
les
mov
xor
insb
je
jne
cmp
jle
mov
fcomps
iret
push
xor
sbb
in
inc
sarb
in
shll
test
sbb
into
mov
xchg
inc
push
stos
add
ja
mov
push
dec
or
in
jle
pop
cmp
lods
mov
pushf
outsb
jmp
push
or
lods
repnz
jae
lahf
out
gs
repz
sti
xor
loope
hlt
lret
lret
and
jl
add
or
or
and
add
mov
push
cmp
js
fidivs
mov
mov
jg
dec
inc
insb
in
or
stc
std
test
out
in
data16
xchg
test
or
push
dec
repnz
test
adc
mov
xchg
mov
mov
push
scas
adc
push
mov
xor
or
fisttpll
cli
pop
in
stc
gs
lds
sub
and
nop
adcb
sbb
cmp
mov
xor
and
xchg
and
cmp
xor
jl
in
jbe
adc
fidivrl
je,pt
push
out
or
fdivrl
sub
add
inc
adc
imul
push
inc
pop
inc
les
arpl
or
push
mov
stos
mov
mov
iret
or
mov
push
or
popa
jle
inc
in
pushf
xor
gs
mov
fdivrp
in
int
inc
and
enter
lret
ret
mov
je
idivb
dec
or
sbb
sub
loope
sub
movsl
pop
push
adcl
pop
mov
stos
pop
mov
add
lds
jo
mov
and
push
bound
inc
cmp
std
mov
cltd
lods
lahf
cwtl
mov
faddl
and
xchg
push
shl
test
and
mov
sarb
subb
dec
cwtl
notl
imull
cltd
push
scas
out
and
shrb
sbb
test
adc
push
push
mov
pop
ss
pop
dec
jae
pop
inc
add
fadds
loope
mov
jl
rclb
sub
sub
pop
das
ds
sar
loope
xchg
push
lock
jp
xor
daa
xchg
push
aam
xlat
insl
stc
mov
lock
push
cmp
lods
pop
push
jo
sbb
push
pop
pop
and
sbb
dec
daa
sahf
in
lods
xchg
inc
push
popa
lds
mov
stc
pop
push
dec
fstl
test
lret
mov
ret
addb
fidivrs
mov
fs
mov
add
ds
mov
pop
hlt
push
lcall
add
mov
ret
ret
dec
add
cmp
and
ss
call
pop
inc
sbb
sbb
lock
out
xor
arpl
or
or
sub
sbbl
mov
mov
adc
xor
mov
subl
test
lcall
repz
clc
popa
popf
in
jnp
sti
loop
push
fsubrs
daa
lds
push
sti
test
xchg
fs
adc
fldenv
fadds
or
lahf
jge
mov
adcl
out
cwtl
add
lret
in
sub
and
mov
adc
sti
out
jbe
sbb
inc
test
cwtl
insb
cmpl
ror
outsb
test
pop
lahf
inc
je
popa
xor
pop
jo
sbb
int3
mov
xchg
into
inc
movsl
xchg
dec
push
push
sbb
punpckldq
mov
push
shll
pop
leave
inc
jecxz
pop
sbb
sahf
xchg
and
out
xchg
aaa
or
mov
dec
cld
pushf
or
mov
pop
adc
and
lods
and
xor
push
pop
sti
jge
test
fidivrl
sub
mov
mov
add
aad
xor
fnstcw
testl
bound
testb
icebp
mov
jmp
adc
jg
out
mov
loop
sbb
xor
out
pop
sub
pop
sub
pusha
sub
xchg
mov
aaa
inc
xlat
inc
push
adc
dec
int
push
adcb
data16
je
add
lods
xchg
lods
ret
mov
pop
fists
test
shl
xchg
push
pop
xchg
mov
jmp
ss
pop
mov
shll
dec
cmp
inc
mov
sub
cmpsb
inc
cmp
adc
outsl
pop
shl
dec
lret
test
out
es
lea
and
pop
jae
and
scas
jecxz
dec
mov
xlat
das
daa
add
mov
sub
jg
mov
push
adc
xchg
cld
iret
and
pop
mov
iret
mov
arpl
jmp
shll
pop
jge
hlt
push
repz
lods
les
push
mov
and
fisubs
cmp
xor
xor
js
repz
int
mov
leave
pop
jg
mov
mov
jp
jmp
xchg
dec
scas
aam
cmp
push
sub
jno
lds
enter
mov
nop
mov
push
std
stos
out
jp
inc
sub
sub
jecxz
adc
pushf
mov
pushf
add
fldl
push
int
lahf
xchg
js
dec
lret
imul
inc
ljmp
in
das
sti
ret
es
bound
stos
sahf
add
ret
loopne
pop
cmp
stos
jge
popa
fnstenv
enter
jnp
inc
push
repz
pushf
loop
mov
ja
loop
in
inc
add
das
test
push
xchg
fists
mov
xorb
roll
dec
pop
xchg
mov
ss
sub
mov
jecxz
cmp
inc
loopne
jns
mov
cmp
add
repnz
jl
pop
or
add
fwait
adc
mov
mov
sbb
xchg
add
rorl
xchg
jp
push
mov
repnz
dec
add
dec
push
test
fdivrl
and
dec
xchg
movsb
push
rcrl
mov
sbb
mov
orb
mov
ja
fldt
jne
xor
dec
xor
insl
dec
mov
or
mov
or
sub
out
imul
pop
or
fnsave
xor
xchg
into
fsubrl
mov
and
xchg
dec
xchg
mov
xlat
mov
int3
inc
dec
jo
mov
mov
add
mov
in
inc
mov
jge
push
andb
push
shll
lods
in
push
jp
cli
pushf
mov
repnz
jmp
xchg
cmp
in
push
addr16
mov
sbb
push
in
fiadds
cmp
orl
mov
popa
pop
incb
xchg
je
stc
roll
arpl
add
xorb
sub
pusha
push
data16
sbb
jae
jbe
sub
xchg
adc
dec
mov
sbb
daa
xchg
in
inc
adc
aad
iret
out
das
push
ss
sti
jo
cmc
push
mov
imul
xor
jne
shr
sub
outsb
sbb
xchg
and
test
scas
repnz
sub
add
inc
dec
test
ret
ljmp
mov
fiadds
in
xchg
jae
and
scas
push
imul
addr16
pushf
mov
mov
sbb
loop
outsb
pop
pop
arpl
ljmp
and
push
clc
xor
or
mov
outsb
aaa
ds
dec
push
data16
ds
add
mov
insl
aaa
mov
aaa
stc
sbb
or
push
aad
jno
cmovg
testb
dec
fdivrs
push
fcoms
test
pop
xor
hlt
stc
mov
xor
into
hlt
fs
movsb
dec
testl
out
push
jno
push
sub
jo
fdiv
insl
pusha
sub
pop
sahf
stos
fwait
add
sbb
and
add
jmp
add
sub
mov
shr
push
mov
in
inc
and
mov
cltd
xchg
adc
inc
dec
cmp
jbe
cwtl
xchg
rol
imul
cwtl
stc
cltd
aaa
idivl
fs
push
call
cmp
mov
sub
negb
jle
ljmp
sbb
cmovo
addb
pop
aad
xor
mov
cmp
imul
push
mov
rclb
mov
loopne
pop
inc
inc
dec
rcrb
loop
or
outsb
push
icebp
xchg
test
sbb
subl
fiaddl
lret
cmp
scas
loopne
push
adc
or
das
int3
in
test
arpl
pusha
pushf
xchg
push
repz
in
adc
int3
sbb
push
iret
cmpsb
and
aaa
xor
push
sbb
push
lods
mov
mov
dec
inc
push
cmc
inc
adc
aaa
jae,pt
dec
cmp
call
mov
add
jp
mov
sbb
mov
ret
sarb
cld
mov
sbb
sti
test
test
daa
mov
into
lods
mov
push
test
imul
rcll
scas
push
sub
or
scas
add
insb
sub
in
pusha
cmp
fisubrl
push
rol
inc
dec
ja
fidivrl
push
mov
clc
jecxz
daa
in
in
inc
lret
and
ds
or
je
inc
test
sbb
mov
add
imulb
adc
cs
pop
xchg
popa
std
push
sahf
test
dec
shlb
xchg
and
jge
jb
jbe
shrb
xor
add
fsubrl
gs
pop
inc
xor
lods
fld1
cld
fwait
repz
sbb
xchg
mov
insl
pushf
xchg
imul
movb
movsl
aad
jl
aas
shufps
clc
scas
hlt
push
fildl
loope
jle
push
xchg
push
jno
mov
ret
pop
idivl
mov
mov
pmulhuw
mov
jbe
xor
outsl
cmc
mov
mov
sbb
mov
sarb
shll
adc
jb
pop
sbb
xor
sbb
push
jp
mov
xor
cmpsb
in
mov
outsb
ficoml
push
mov
out
loopne
loopne
outsb
test
sbb
and
inc
and
not
insl
jecxz,pn
mull
dec
mov
xchg
lret
notb
mov
pop
or
sbb
pusha
pop
shll
mov
jmp
je
xor
test
out
cmp
movsl
insb
pop
lock
mov
cld
inc
cmp
call
push
pop
mov
pop
sub
adc
jns
mov
stos
lods
xor
jmp
jp
iret
test
xlat
adcl
sub
ficomps
jnp
mov
xchg
jecxz
add
sbb
add
mov
xor
in
jp
in
outsb
xchg
hlt
pop
aad
mov
pushf
sbb
mov
scas
pushf
arpl
mov
imulb
sub
push
cmp
mov
sbb
push
push
mov
inc
jo
fldz
pop
jnp
daa
loope
mov
xchg
lods
sbb
std
fmuls
gs
xchg
les
inc
data16
pop
push
clc
mov
xor
aad
fwait
outsl
pop
addr16
and
pop
sbb
jp
mov
arpl
out
scas
test
scas
pop
or
int3
adc
jb
adcl
mov
cltd
imul
sbb
clc
xlat
xor
and
imul
inc
xor
sbbl
mov
mov
inc
jg
jl
popf
jae
scas
ret
or
std
sbbb
test
pop
pop
scas
jl
andb
mov
js
insb
xchg
inc
push
or
adc
xor
jns
adc
leave
or
test
push
cmc
jns
ret
hlt
lahf
inc
sbb
dec
imul
adc
out
dec
mov
ss
xor
mov
sub
in
sbbb
inc
aaa
inc
sti
cltd
inc
aas
ret
add
enter
inc
xlat
push
push
ret
inc
and
enter
mov
outsl
mov
mov
fimuls
lods
loope
mov
std
test
xchg
out
les
outsl
sub
xchg
test
nop
xchg
mov
jne
test
movsb
loopne
sbb
movsl
mov
mov
sbb
or
lahf
aad
fldl
pop
jns
cld
mov
jmp
pop
pop
icebp
movl
xchg
adc
mov
and
and
in
daa
lfs
outsl
pop
in
sub
or
loope
jmp
aas
out
add
jae
pop
or
xor
push
lret
push
push
sub
dec
xor
mov
cmc
ljmp
xchg
push
incb
movl
mov
mov
popf
in
dec
jg
mov
jmp
xchg
jle
in
movsb
sub
icebp
cmpsb
xchg
jmp
or
fdivl
push
dec
push
ret
testl
out
hlt
shl
test
xchg
xchg
jno
xlat
test
pushf
inc
call
stos
leave
in
cltd
mov
and
push
jb
xchg
sbb
mov
shr
dec
sub
insb
pop
push
jns
aas
cs
pop
dec
add
iret
js
rclb
stc
pop
mov
xor
cmp
sub
movsl
testl
leave
sub
shlb
lahf
cmp
in
repnz
ja
ficoms
xchg
stc
mov
into
jle
dec
cmp
ret
ret
mov
cwtl
jns
stc
test
jae
outsl
mov
testl
pop
test
insb
insl
cs
loopne
mov
sub
lret
inc
ret
jae
xlat
test
jecxz
cmp
fadds
ljmp
and
movsl
cmpsl
vorps
mov
les
sbb
xchg
pop
pop
xlat
sbb
in
xor
bnd
imul
add
xchg
clc
subl
push
mov
xor
jnp
pop
lds
and
pusha
jnp
bound
into
and
inc
inc
mov
jl
sbb
leave
sbb
lahf
inc
lods
dec
outsb
lods
mov
mov
adc
stos
shrl
mov
mov
and
sahf
xor
push
cmp
mov
add
sbb
add
jl
sub
sbb
lret
push
in
pop
hlt
test
ret
pop
push
int
pusha
popa
fst
xchg
lea
push
add
dec
xchg
hlt
ret
popa
push
stc
mov
hlt
daa
outsl
and
xor
jmp
mov
sahf
lcall
fstl
cmp
bound
fiaddl
iret
inc
jecxz
or
in
fdivrl
test
mov
add
testl
jl
push
insb
xchg
and
mov
leave
xchg
adc
jmp
sub
mov
dec
mov
cmp
rolb
mov
outsl
jp
lcall
in
daa
pop
push
das
aas
sarl
xchg
int3
or
rolb
jnp
iret
push
es
roll
xor
out
fnsave
xchg
or
jo
nop
add
fstpl
adc
or
xor
jp
lret
xchg
or
jne
add
jo
icebp
cmp
fldenv
xchg
or
sti
cli
add
adc
mov
enter
sub
jb
lret
pop
imul
nopl
pop
mov
sbb
push
sbb
jg
dec
pop
scas
lods
pop
add
ret
ror
jae
cmp
shll
insl
xchg
sub
les
jg
adc
test
push
pop
call
jno
dec
jecxz
in
sahf
pop
sub
rcrl
jp
adc
cmp
outsb
mov
stos
inc
sahf
and
lcall
xchg
and
cmp
and
sbb
dec
movsb
xchg
and
loop
pop
xor
icebp
mov
jp
push
aad
adc
mov
stc
or
pop
mov
ret
adc
pop
sbb
cmpsb
push
faddl
stos
daa
bound
iret
mov
adc
and
movsb
dec
jns
fldcw
mov
loop
loop
fwait
sub
outsb
lcall
sbb
adc
insb
mov
div
js
imul
dec
dec
pop
bnd
mov
test
aad
jb
je
clc
cld
dec
movsl
mov
sbb
lret
pop
mov
jecxz
jno
xchg
inc
repz
sub
jne
inc
and
xor
sub
sub
aaa
clc
das
xchg
jmp
movsl
push
mov
add
mov
mov
and
sahf
addr16
int
ja
js
push
sub
push
xlat
add
in
and
jp
leave
jno
mov
lods
sbb
les
test
and
fs
jmp
loop
jne
in
and
inc
and
sarb
mov
movsl
testb
pop
cmc
mov
sub
push
ds
hlt
pop
jecxz
sbb
jo
or
daa
xchg
mov
sub
movsb
xor
mov
jmp
iret
mov
lock
and
mov
xchg
iret
sub
lods
inc
xchg
and
push
popf
xorl
mov
fiaddl
cmpsl
sti
lods
shlb
ficompl
dec
sbb
daa
cmp
pusha
subl
lcall
jecxz
cmp
cmp
pop
int
mov
imul
jmp
pop
sbb
dec
cli
mov
sub
xchg
fs
inc
frstor
and
clc
cmpsl
adc
mov
out
stc
inc
and
or
dec
addr16
aaa
test
test
pop
and
push
out
movsl
dec
pop
push
outsl
xorl
mov
pop
add
jnp
fsubp
mov
jns
outsl
sbb
stc
cmp
insb
jnp
loopne
es
inc
push
pusha
outsl
dec
insb
cmp
imul
and
pop
outsb
push
ja
push
cs
jae
rcl
lods
arpl
fwait
mov
add
lcall
in
or
cmpsl
imul
xor
push
loope
adc
xchg
sti
sbb
mov
push
push
pop
stos
dec
loop
jno
xchg
mov
insb
ja
rolb
sbb
in
cli
popf
sbb
mov
adc
pop
testb
stc
out
push
in
mov
jecxz
adc
cmp
adc
testb
ljmp
jge
leave
ljmp
pushl
or
in
sbb
lahf
push
pop
jo
jno
inc
fidivrs
mov
out
enter
sbb
push
int3
mov
cmp
pop
in
cmp
jle
out
jo
out
jbe
sbb
lock
scas
rcr
jmp
add
inc
outsl
xchg
into
cmp
or
jle
jno
push
mov
and
xchg
push
daa
fs
roll
clc
lock
repz
jno
sbb
fstps
sbb
aaa
rcr
push
jmp
and
enter
imul
je
and
notb
dec
xchg
and
test
les
loope
xchg
dec
loopne
adc
out
jae
sbb
push
stos
daa
cmp
xchg
pop
mov
and
fldl
mov
or
jnp
out
mov
pop
lret
outsb
scas
fadd
push
and
push
xchg
in
sahf
push
pushf
xlat
bound
fcmovnbe
cli
imul
sbb
dec
inc
xor
mov
mov
push
pusha
inc
dec
popf
mov
cmpsb
call
ficoms
test
sbb
mov
rcr
add
pushf
pop
fwait
gs
add
rcrl
fsts
repz
out
cmp
daa
movsl
inc
or
es
jecxz
test
das
inc
mov
mov
pop
sbb
aas
or
mov
call
dec
call
loopne
xchg
xchg
imul
loop
pop
pop
adc
popa
iret
dec
add
mov
test
stos
xchg
int
jecxz
or
scas
shlb
call
lret
test
data16
mov
cs
fs
data16
sti
or
cmpsl
cmc
inc
enter
jp
jae
outsl
xlat
loopne
push
cmpsb
fsub
jmp
jge
dec
or
and
and
enter
test
fidivrl
cmpsl
jl
inc
inc
in
xchg
mov
movsb
pop
addr16
jno
cmpsl
call
xchg
lds
add
mov
stos
into
add
jne
push
cmp
or
xor
xor
mov
lods
sti
xor
mov
imul
stos
xchg
mov
pushf
idivb
pop
and
movsb
es
inc
cli
dec
sbb
shll
movsb
mov
ficompl
add
mov
loop
mov
mov
lcall
stc
out
mov
or
stos
xor
and
scas
pop
pop
xchg
test
xor
mov
lods
sbb
xor
inc
insb
js
xchg
jecxz
pop
xchg
mov
mov
pop
fdivl
loope
mov
aam
and
stc
adc
dec
mov
push
push
shl
push
mov
outsb
xchg
xchg
fst
adc
fsubrs
fmuls
les
mov
adc
ds
fistpll
and
mov
cmp
jbe
test
test
repz
into
push
shrb
es
stos
pop
lods
scas
jb
je
mov
cmp
add
push
shrb
mov
sbb
pushf
fmull
outsl
jns,pt
outsb
negl
cmp
stos
leave
data16
lds
mov
je
xchg
adc
into
jge
out
out
cmpb
mov
ljmp
mov
movsl
cld
jl
icebp
jns
in
sbb
lods
adc
movsl
sarl
sbb
sbb
out
out
stos
test
loop
cmp
and
out
repnz
inc
lret
cmp
cmc
mov
popa
adc
jns
pop
rclb
mov
mov
dec
into
push
pop
outsb
add
or
sbb
xchg
lahf
jno
jno
sbb
aam
mov
mov
and
repnz
mov
mov
cmp
sub
das
movl
push
dec
fmul
iretw
and
fs
adc
int3
xchg
rcr
or
sub
lock
and
adc
cmp
jnp
pop
or
movsl
cmp
push
repz
sarl
mov
movsb
in
test
fcompl
or
pop
out
icebp
notl
inc
lcall
icebp
mov
aam
jecxz
test
xor
cmpsb
and
inc
xor
testb
mov
cmp
xchg
jbe
cmp
scas
mov
inc
adc
mov
mov
sub
jno
ja
jns
xchg
and
push
scas
outsl
pusha
lahf
in
xor
cmp
mov
xor
jmp
fsubr
and
out
ss
outsl
adc
lds
js
dec
mov
push
sub
adc
jg
xor
mov
lahf
stos
leave
add
fldenv
clc
insl
lcall
pop
cld
int3
jl
dec
outsl
add
sbb
jo
push
mov
hlt
mov
mov
std
fldcw
rcrb
icebp
xlat
in
mov
push
mov
loop
lcall
repz
dec
cltd
fs
inc
push
rcr
pop
fnstenv
and
cltd
mov
dec
inc
pop
add
outsb
adc
pop
aad
fstl
in
js
loopne
adc
sub
adc
jbe
clc
mov
mov
mov
push
scas
push
orb
and
fwait
call
mov
cmovb
mov
push
mov
push
jg
and
or
adc
lods
dec
cld
in
loop
rolb
cwtl
dec
addl
and
mov
pop
xchg
aas
xchg
lret
xor
aad
and
push
add
cmp
scas
push
cmp
cwtl
cmp
ret
sbb
mov
sub
aad
mov
ds
fadd
sbb
add
call
inc
shl
pop
cmpsb
jle
xchg
jae
sbbb
push
sbbb
in
cmp
pop
mov
lods
lcall
adc
push
jb
nop
pop
push
ja
add
je
and
xchg
xchg
mov
repnz
cmpsl
lds
mov
push
pop
data16
aas
int
push
mov
mov
dec
jle
fstps
pop
ficoms
int3
and
out
pop
js
mov
mov
aaa
insb
dec
mov
mov
or
cmc
inc
fnstsw
xchg
xor
shlb
push
mov
ret
shr
jg
rcll
xlat
cmpsl
mov
loope
inc
fcmove
nop
mov
xlat
jns
jb
mov
and
sbb
and
cmp
push
push
loopne
stos
jle
mov
aaa
and
pushf
inc
jmp
mov
in
vmread
xchg
ss
fwait
or
add
sub
inc
imul
rcr
jmp
frstor
cmp
sub
lods
scas
jecxz
lea
xor
pop
cli
add
xor
movsl
jne
adc
add
inc
pop
pushf
out
xchg
hlt
xchg
jmp
jno
cmp
fsubrl
ret
push
and
xchg
imul
shll
ljmp
push
mov
jnp
out
push
sti
push
sahf
and
fdivr
fldenv
xor
dec
mov
leave
mov
xorl
das
ljmp
imul
jbe
inc
leave
add
mov
add
and
push
add
aad
sub
leave
daa
fstl
push
mov
mov
jmp
jge
sub
xor
inc
and
mov
lcall
std
add
push
inc
sbb
and
sti
rcrl
inc
mov
clc
push
inc
jbe
dec
stc
mov
popf
nop
fldcw
and
cmpsl
idivb
mov
mov
xchg
out
movsb
inc
scas
jns
test
pop
cli
inc
pop
leave
sub
fsts
ja
aaa
scas
mov
cld
test
pop
mov
or
or
xor
pop
inc
jno
movsl
xor
cmp
clc
mov
adc
frstor
loopne
cs
movsl
stos
addb
pop
fdivs
out
ljmp
les
xor
sub
lret
jns
out
sbb
xor
addr16
mov
arpl
pop
or
inc
xchg
pop
inc
lret
out
or
sbb
or
mov
int3
out
test
push
cwtl
lcall
inc
fadds
sbb
pop
push
std
fcmovnu
pushf
test
fidivs
in
jmp
dec
jecxz
les
push
repz
call
mov
mov
add
sub
cltd
inc
testl
inc
adcl
cld
addl
inc
out
mov
adcb
fs
jae
mov
add
mov
or
ss
data16
mov
push
stc
cmp
or
sbb
dec
inc
xor
mov
sbb
aad
jmp
je
mov
push
and
pushf
inc
pushw
or
mov
cmpb
idivl
test
pop
jnp
or
pop
cmp
gs
sub
mov
je
mov
inc
jge
scas
cltd
in
ficoml
cwtl
fdivrs
fnstsw
mov
subb
enter
sbb
out
cld
shrb
sbb
test
push
push
imul
inc
cld
xchg
add
dec
call
test
addb
icebp
dec
and
scas
jmp
mov
add
or
daa
out
jnp
inc
test
lods
leave
sbb
stos
int3
int3
pop
imul
clc
adc
insl
xor
lea
pop
or
or
cmc
rcll
or
push
mov
int
or
ja
fcom
add
sub
es
fisubrl
sahf
jbe
xor
es
sti
test
arpl
mov
cmp
into
leave
movsb
iret
popf
repnz
sub
push
cmpsb
cmp
adc
mov
cmc
or
lods
and
mov
or
cwtl
adc
pop
push
mov
imul
xor
imul
xchg
mov
imull
jg
mov
fisubrs
pop
sbb
rcll
scas
inc
js
js
dec
mov
es
sbb
lret
and
xor
sbb
pop
xor
pop
lahf
pop
and
leave
mov
and
mov
adc
xchg
sti
inc
hlt
int
out
rclb
mov
xor
das
or
mov
cmpsb
insb
loop
fwait
mov
pop
out
push
push
loop
ljmp
addb
mov
push
stos
adc
adc
repz
xor
out
xor
xchg
daa
shlb
jae
or
cmp
ret
dec
imul
pop
mov
out
incb
push
shll
pusha
sub
loope
add
jo
dec
push
lahf
inc
jb
fsubrp
ja
dec
les
jbe
daa
fstl
cwtl
cs
repnz
mov
and
inc
cmp
inc
sbb
es
sbb
mov
insl
lock
dec
out
xchg
mov
jmp
fisttpll
imul
adc
jl
jg
mov
int
pop
scas
inc
fistpl
mov
iret
mov
pop
bound
aaa
cmp
dec
or
sub
rcrb
or
push
cwtl
xor
xor
inc
cld
dec
mov
test
cld
dec
jnp
dec
jmp
adc
mov
xchg
lods
push
lret
and
fwait
push
adc
sub
roll
shl
push
outsb
xor
in
lods
in
repnz
arpl
test
sub
sbb
xor
jo
fwait
sahf
inc
sti
gs
inc
subb
mov
lret
or
adc
sbb
and
xchg
mov
mov
push
js
jb
inc
cmp
fdivrl
adc
repnz
xor
pop
xchg
mov
dec
fisttps
daa
scas
pop
add
rcll
pop
pop
sub
shll
cli
jo
cmp
scas
fwait
dec
jp
arpl
mov
and
adc
push
insl
daa
sbb
rcrb
mov
xlat
pop
fbstp
cmp
cmp
cmp
inc
sub
lds
and
dec
adc
shll
push
out
iret
int
pop
push
mov
mov
movsb
push
insb
fcoml
testl
push
dec
mov
sbb
cs
jl
fcoms
gs
xchg
stc
je
ss
xor
inc
lahf
push
adc
pusha
out
dec
jge
in
mov
stos
test
test
sub
fistpll
mov
in
jp
inc
out
test
inc
mov
dec
mov
out
mov
push
cli
fsubs
imul
sbb
pop
cmp
mov
ss
icebp
pushf
negb
or
out
jge
inc
outsl
or
adc
xchg
lods
adc
jne
stos
inc
add
cmp
mov
jl
mov
js,pn
and
sbb
jmp
loope
push
and
jae
dec
push
xor
cmp
add
xor
xor
add
and
fstpl
mov
dec
adc
rcl
pushf
in
shl
popf
sub
cli
dec
xor
cmc
cmp
push
out
std
mov
insl
push
lcall
lret
pop
or
outsb
push
icebp
mov
cli
and
lods
jmp
hlt
clc
jbe
fildl
push
push
push
sahf
leavew
fxch
mov
icebp
lcall
pop
mov
cli
cmpsb
jge
lcall
xchg
fsts
arpl
pop
imul
je
and
loope
jo
clc
dec
test
aaa
shll
push
xor
xchg
in
mov
stos
insl
pop
dec
lret
adc
add
mov
shll
and
mov
add
scas
pop
xor
xor
cmp
std
mov
in
dec
decl
es
movsb
adc
in
loopne
push
decb
jg
pushf
hlt
rorl
or
call
lret
loop
ljmp
pop
int3
push
mov
inc
inc
and
nop
out
lahf
jg
imul
mov
inc
mov
ds
jbe
cmp
dec
xchg
sub
aas
popf
sbb
mov
cwtl
sub
lods
and
jmp
icebp
fildll
xchg
or
mov
and
adc
js
jg
sub
movsb
mov
push
clc
jne
add
add
or
jmp
mov
insl
inc
out
push
pop
push
fwait
add
push
scas
jnp
add
fs
outsl
shlb
jo
out
push
das
lods
push
pop
push
fisttps
clc
jle
imul
mov
outsb
push
int3
and
js
dec
sbb
ljmp
sbb
pop
dec
xchg
dec
cmp
dec
push
jmp
fucomi
cltd
test
cmp
sub
push
imul
sbb
loopne
scas
xor
push
inc
popa
mov
roll
js
ja
jmp
dec
dec
js
mov
add
lea
loop
mov
cmc
sbb
mov
cmp
loope
scas
mov
or
mov
jo
pop
js
xchg
jg
ffreep
fneni(8087
pop
fdivrp
pop
iret
cmp
xor
mov
xchg
leave
inc
and
mov
stos
addr16
jo
insb
xorl
mov
insl
sahf
and
fs
andl
ss
test
movsb
aas
shll
cwtl
mov
xchg
ja
dec
fdivrl
movsb
in
mov
orb
mov
cmp
mov
cmp
data16
mov
addr16
jmp
int3
mov
loopne
and
mov
fsubs
movsb
push
aam
pop
sbb
ret
xlat
aaa
mov
cli
enter
adc
dec
repnz
jl
inc
into
jecxz
inc
fsubrs
push
dec
or
insb
scas
mov
mov
scas
cmpsl
dec
sub
sti
dec
aas
icebp
or
iret
xor
pusha
test
mov
or
or
sub
cwtl
add
jmp
lret
test
mov
xorb
test
mov
mov
sbb
add
js
inc
sub
push
shrl
jmp
jle
ja
sbb
rol
and
popa
jo
or
push
mov
adc
lahf
mov
xlat
dec
xchg
adc
clc
popf
test
in
mov
pop
enter
lock
fxch
in
je
jg
fsubrp
hlt
outsl
cmp
ret
stos
loop
inc
adc
add
rorl
xchg
and
pop
dec
lock
popa
jge
ret
insb
jg
sbb
lret
lods
and
push
cli
mov
inc
insb
mov
insl
nop
cmova
rcl
dec
and
lods
adc
sarb
jb
sarb
cltd
hlt
out
iret
xor
and
sub
loope
dec
je
fstp
jbe
push
sbb
pusha
xor
mov
inc
sbb
add
lods
xchg
dec
mov
ja
xor
mov
sub
divb
mov
mov
pop
imull
aam
add
xchg
fistpll
sbb
ficoml
shlb
idiv
test
add
mov
inc
int3
fwait
inc
fiadds
lea
faddl
loopne
dec
insl
das
mov
fidivrl
dec
and
adc
cmp
repnz
cmp
shrb
nop
aaa
xor
cltd
repnz
mov
add
xchg
sub
push
lods
pop
push
enter
jno
xchg
inc
xchg
xor
std
mov
lret
mov
xchg
loopne
dec
rclb
sub
jecxz
cmp
outsl
sub
sbb
mov
sahf
popa
and
in
loope
fcoml
xchg
jbe
adc
mov
push
test
push
sti
jle
shlb
ret
push
xor
cltd
lock
cli
cli
inc
movsl
orb
idivl
sbb
roll
push
subl
sub
xchg
xchg
sbb
mov
inc
shrb
jb
jp
mov
xchg
ja
dec
cmp
jo
dec
sub
sub
js
icebp
mov
rcrb
clc
add
xor
and
shr
aad
dec
cltd
repz
fcoml
cmp
stos
pop
stos
cwtl
roll
pop
pop
roll
mov
push
es
ja
dec
sub
fstps
push
jbe
push
inc
add
push
sahf
mov
lcall
or
adc
pop
add
gs
cmp
and
and
jne
jno
or
cmp
movsb
xchg
xchg
cmp
push
in
sub
hlt
mov
imul
imul
fisttpl
mov
adc
xorb
sub
push
pop
repnz
push
xchg
loopne
push
jle
test
add
pop
and
pop
or
jne
out
scas
and
xor
xor
rcr
push
dec
inc
andb
std
lock
rcrl
jb
vmovddup
fimull
sahf
jo
js
dec
cwtl
fmulp
cmpsl
push
mov
lods
jp
mov
pop
sub
xchg
es
jno
call
jg
sub
ljmp
mov
bound
lret
daa
dec
cmp
mov
mov
push
ret
imul
xor
fsubs
push
adc
jns
pop
daa
dec
lods
cltd
ret
rcl
shlb
das
in
insl
call
xchg
jo
push
push
pusha
pop
add
fs
sbb
push
iret
add
dec
pop
pop
mov
movsb
idivb
sub
cmp
xchg
mov
repz
sub
dec
in
xorb
mov
iret
dec
xor
pop
mov
shrl
out
inc
sub
in
sti
std
or
push
addr16
lcall
subb
cli
adc
inc
sar
and
sub
or
test
sbbb
shr
mov
mov
push
adc
dec
leave
sbb
mov
inc
jl
dec
scas
and
push
fistpll
xchg
dec
in
and
imul
shll
arpl
dec
dec
testb
jp
movsl
cmpsb
mov
cmp
xchg
push
fisttps
adc
xor
mov
add
push
mov
loopne
sbb
xchg
pusha
lods
insb
insb
push
popf
mov
sbb
sub
js
adc
push
xchg
push
jmp
adc
int
loopne
lock
lods
outsb
lret
int
inc
sbb
pop
int3
cmp
xlat
or
sahf
fnstsw
pop
jecxz
mov
stc
mov
dec
stos
dec
stos
fsubl
fcoms
insl
push
jge
icebp
sub
andl
cmp
ja
mov
mov
adc
dec
pushf
cmp
es
pop
ret
jmp
and
int
hlt
mov
jecxz
add
sahf
lret
xor
mov
inc
dec
cmc
and
pop
push
xchg
shrb
or
lods
or
lahf
iret
fiadds
into
idivb
adc
fadd
movsl
or
mov
xchg
and
aad
and
cli
scas
jle
js
cwtl
into
daa
jecxz
jne
lods
mov
add
aas
dec
sub
inc
icebp
test
popa
xor
cmc
inc
movsb
mov
adc
add
loop
and
cmp
out
cmp
std
scas
pop
test
cmp
out
movsl
mov
fdivrs
xchg
jae
fistl
dec
movsl
cmp
outsb
lret
sub
or
rol
fadd
push
cltd
sbb
aad
ds
jb,pn
jg
testb
sub
jmp
sbb
mov
outsb
jg
nop
pop
push
ljmp
outsb
push
fnstsw
or
and
cmp
push
push
or
dec
mov
aas
pop
cmp
es
dec
push
repnz
jno
push
pop
imul
ljmp
push
mov
jbe
push
mov
adc
push
sbb
jg
addr16
loopne
je
mov
std
ret
enter
gs
dec
jle
mov
sti
pop
push
mov
ret
cli
or
lret
mov
ret
in
adc
push
dec
xlat
cmp
lods
jo
push
in
shl
lcall
rcr
lsl
in
std
inc
push
add
add
xchg
xchg
jne
dec
test
and
inc
push
test
lea
cmpsl
cmp
or
pop
lea
dec
push
test
bswap
jle
adc
cmp
mov
scas
test
leave
xchg
jge
dec
xor
insl
mov
add
test
sub
push
test
shl
aam
xor
rcll
mov
lret
out
sub
out
cs
mov
gs
neg
ret
arpl
hlt
lds
mov
dec
imul
jmp
dec
adc
dec
lods
pushf
sar
lods
xchg
into
loopne
stos
cltd
and
in
jg
jp
mov
xor
xchg
pop
je
fldcw
cmp
pop
sti
sbb
jb
frstor
js
cmp
lret
add
leave
mov
add
and
push
ja
pusha
lret
cmpsl
mov
xor
sbb
faddp
jne
subl
inc
mov
fnstcw
adcb
sub
loop
daa
mov
imul
loope
add
jae
sti
sub
or
rcll
and
add
cmpsb
mov
rcrb
fdivs
add
insb
inc
lcall
mov
test
cmp
inc
jbe
mov
inc
jl
mov
dec
adcb
imul
pop
pop
mov
mov
cmpsl
pop
and
fadds
cltd
mov
cmpsl
sbb
add
loopne
orl
adc
xor
mov
insb
hlt
push
push
pop
loope
or
xchg
pop
dec
lock
mov
and
cld
int3
in
xchg
imul
popa
push
inc
repnz
sub
test
aaa
into
nop
ja
and
inc
jns
arpl
or
xor
jmp
jno
jg
outsb
imulb
adc
sub
fwait
xor
jge
xor
out
sub
jo
ficoms
fsub
jle
mov
ret
dec
inc
ficoms
push
jbe
xor
sub
sub
dec
dec
pop
hlt
xchg
lcall
xchg
xor
fwait
xorl
xchg
and
aad
pop
fiadds
loope
pop
sahf
fldt
rcll
cmp
insb
data16
and
mov
aaa
mov
dec
divl
in
lea
dec
rclb
xor
aad
xchg
push
xor
adc
fbstp
cmp
das
lcall
lock
or
cmc
cmp
scas
movsl
mov
lods
mov
int
mov
push
pushf
pop
insl
xor
je
mov
and
jnp
int3
adc
xchg
lock
cmp
flds
daa
cli
sahf
and
mov
scas
jo
pop
decb
jmp
das
pop
ret
mov
les
ja
int3
icebp
imull
shl
sti
dec
cwtl
lcall
add
aaa
int
fmulp
jno
in
sub
sub
sbb
and
lcall
cmp
fidivs
cmp
daa
das
xor
test
fcom
sbb
mov
mov
cltd
pop
push
pop
xchg
add
data16
fs
sbb
mov
call
xchg
mov
in
push
mov
lds
push
sti
out
cmp
xor
mov
fcompl
jecxz
mov
hlt
xchg
add
out
mov
fwait
in
push
dec
lods
pop
xor
shlb
lods
push
test
add
popf
pushf
inc
sbb
jo
pop
les
mov
cmc
les
push
outsl
movsb
shlb
leave
imul
clc
mov
sub
shrb
adc
adc
sub
repz
dec
pusha
sti
push
cli
mov
js
hlt
cld
subb
in
fwait
mov
xchg
mov
shlb
push
int3
out
mov
in
or
icebp
jge
test
xorl
push
into
and
add
mov
gs
jge
inc
xor
iret
mov
scas
sub
in
push
jg
mov
push
inc
stos
out
xchg
jbe
or
icebp
jmp
or
pushf
ljmp
mov
or
push
test
insl
add
arpl
xchg
mov
out
xchg
mov
mov
jae
pop
ret
mov
imul
add
scas
sbb
out
mov
mov
dec
arpl
push
stos
sahf
mov
imul
or
xor
jnp
xchg
cltd
dec
ret
inc
jns
add
sub
testl
notl
dec
enter
sahf
inc
cmpsl
fistl
xchg
push
xor
lcall
fistps
push
hlt
test
loop
mov
mov
xor
in
insl
movl
in
mov
add
outsb
add
sarl
lret
inc
cmpsl
fistps
ret
jbe
roll
ljmp
fcomp
sub
das
movsb
jne
and
or
cmp
sub
mov
push
add
and
imul
xchg
sti
mov
mov
adc
les
xor
loop
iret
mov
insb
test
lods
out
add
mov
or
imul
cwtl
cli
jns
pushf
scas
xorb
sbb
dec
mov
movl
push
pop
lahf
ljmp
out
and
leave
mov
push
add
lret
ljmp
xor
test
cmc
lods
xor
xor
pop
push
pop
sarl
jo
rcl
bound
pushf
mov
mov
cs
out
push
out
lock
mov
arpl
xor
or
jge
insb
scas
stc
in
fcmovnu
xchg
mov
outsb
push
inc
add
mov
jl
mov
icebp
cs
and
outsb
in
test
aaa
loop
testl
xor
lret
scas
add
fwait
pop
sub
out
push
adc
pop
fildl
and
push
je
push
lcall
pop
imul
pop
mov
nop
push
idiv
sbbb
les
int
sbb
mov
adc
dec
stos
pop
jge
shlb
arpl
push
push
std
iret
imul
loope
shll
adc
dec
xchg
pop
or
dec
imul
out
sbb
adc
xchg
in
jle
mov
das
lcall
xor
sub
mov
push
jecxz
cmp
and
cmc
fcompl
sub
cmp
andl
push
mov
xchg
outsb
adc
mov
dec
jne
push
inc
pop
jns
xlat
lahf
pop
add
push
jb
xor
fists
xor
dec
movsl
std
xchg
dec
cmp
orb
cmc
push
cmp
into
lds
jp
pop
mov
sar
pop
or
in
push
pop
cltd
lret
sahf
dec
xchg
lcall
adc
sub
les
cli
arpl
xchg
es
dec
mov
js
and
je
cmp
or
push
orl
mov
popa
push
fdivs
lock
call
aad
shr
inc
test
pop
and
aad
adc
cmp
pop
pusha
sub
add
and
mov
out
adc
pusha
jmp
insb
xor
in
mov
sarb
adc
sub
fcmove
xchg
jo
push
cmp
out
mul
xchg
ret
add
test
scas
push
xor
daa
jo
xlat
lret
ss
mov
call
adc
leave
les
repnz
jmp
aas
insb
push
push
incb
insb
jge
jl
mov
cmp
pop
stc
cltd
xchg
and
test
xchg
mov
cmpsb
lahf
inc
sahf
add
pushf
push
xchg
insb
cmpsl
mov
out
and
add
sub
into
aaa
cmp
xchg
and
shlb
cs
xor
dec
mov
call
jp
lcall
jp
sbb
rorl
fsubl
pop
sbb
mov
dec
xor
or
add
push
dec
stos
hlt
out
mov
aad
mov
test
and
sbb
dec
adc
push
out
inc
aam
mov
mov
aaa
dec
in
es
or
fsts
mov
fiaddl
push
add
stos
xor
mov
cmp
ret
jge
sbb
addb
out
dec
xor
pop
push
inc
fwait
pop
push
fiadds
xchg
mov
push
cmp
addr16
in
icebp
xchg
or
out
mov
lret
iret
lahf
mov
mov
clc
and
and
jb
cmp
cmp
daa
imul
enter
pop
outsl
std
sbb
lret
inc
dec
jecxz
fcmove
and
push
icebp
mov
scas
sub
sbbl
lahf
or
gs
rorl
fs
inc
push
mov
gs
jmp
pop
jmp
sub
mov
or
or
dec
outsl
movsb
jl
imul
stc
aam
cmc
ret
imul
xchg
ja
sti
mov
pushf
or
pop
je
jmp
mov
xorl
std
out
idivb
add
call
push
jae
dec
cmp
adc
ret
pop
jg
or
cs
cmp
test
jp
jl
jg
xor
cmpl
aas
add
addr16
xchg
mov
xor
dec
ds
scas
ja
inc
and
mov
loope
mov
mov
stos
ss
or
pusha
xlat
or
dec
xchg
bound
lcall
fnop
dec
nop
aas
bound
out
push
movsl
in
addr16
int3
push
inc
adc
lret
mov
or
inc
popf
pushf
fs
lcall
fmuls
pop
loop
loopne
pop
pop
mov
out
or
cmp
js
xchg
jne
ficoml
pusha
scas
jno
add
test
or
mov
xor
pop
cmpsl
xor
xlat
cmpsb
test
xchg
mov
jno
test
xchg
dec
push
xor
jmp
xor
xor
fisttps
jecxz
call
xchg
ficoms
mov
loopne
fnsave
inc
or
js
loop
vpsubw
pop
nop
loope
pop
ror
cmpsb
jne
dec
add
mov
mov
test
push
dec
xor
and
insb
mov
adc
cmpsl
out
xchg
pop
inc
xchg
mov
sbb
pusha
xchg
cmp
or
popa
inc
andb
xor
outsl
cld
outsb
xlat
mov
je
popa
pop
aam
call
lock
dec
addl
in
jmp
mov
xlat
scas
xlat
sub
and
adcb
adc
lahf
dec
cmp
xor
lahf
mov
repz
jns
mov
mov
sub
or
bnd
test
xor
mov
int3
jmp
mov
div
mov
fsubrs
fsubs
sub
mov
or
ret
pop
aas
xor
adc
das
movsl
jnp
test
inc
cwtl
imul
cmp
mov
or
fidivl
xor
adc
cwtl
call
iret
out
mov
cmp
mov
lods
dec
adc
cmp
fidivrs
lock
sti
mov
pop
dec
sti
shl
mov
sti
jno
mov
outsb
rcrb
ds
sub
outsb
dec
into
and
sub
in
dec
js
jb
push
mov
dec
and
cmpsb
adc
pop
xor
mov
pop
or
bts
andb
mov
xor
stos
fisubrs
and
jmp
imul
hlt
std
enter
insl
movsl
pop
mov
jp
adc
and
mov
mov
sahf
mov
idivb
aam
jmp
sbb
mov
cmpsl
cmpb
fistps
inc
push
pop
mov
push
jbe
ss
jne
test
les
test
in
jne
in
mov
mov
adc
fadd
jl
add
jp
push
aam
and
and
mov
jmp
pusha
jmp
movb
ret
xor
or
jl
sbb
pusha
mov
out
dec
cmpsb
fsubrl
xchg
pop
hlt
lret
mov
dec
test
enterw
sbb
adc
xor
cmp
push
lods
jnp
pop
outsb
xor
sub
fildll
jbe
sbbb
in
push
push
push
scas
dec
pusha
xchg
pusha
pop
xchg
jnp
push
inc
xor
xor
jne
add
and
test
pop
xor
out
in
stos
push
aam
aaa
shrl
pop
or
pop
adc
call
shrl
test
mov
leave
pop
fsub
loop
orl
cmp
dec
aam
gs
ljmp
insb
scas
jmp
sbbl
aaa
jmp
cmp
xchg
sarl
sub
push
cmp
rclb
test
cltd
gs
lock
xlat
cmpsb
sti
filds
addr16
jge
mov
adc
mov
enter
jns
push
adc
or
mov
inc
fwait
icebp
je
or
sub
mov
lcall
pop
push
sub
loop
add
adc
add
xchg
daa
orl
lcall
js
jl
xchg
ljmp
inc
add
cmpsl
inc
addr16
and
push
es
cmp
mov
xor
xor
rcrb
add
sti
sub
and
mov
jle
mov
xchg
out
pop
add
xchg
sbb
sbb
repnz
cli
loop
enter
sub
sbb
mov
sub
push
fdivrp
pop
mov
pop
movsb
push
xchg
jnp
inc
in
fwait
mov
or
data16
rcrb
mov
dec
mov
jo
push
les
imul
cli
test
aaa
sbb
adc
cltd
pop
pushf
inc
push
mov
jnp
cmp
test
cmp
sub
mov
fstpl
dec
cmc
add
shl
mull
mov
shl
daa
xor
aaa
cmp
leave
aas
sbb
nop
pop
mov
jmp
sarb
push
jecxz
mov
dec
js
ljmp
xor
out
scas
incb
stc
cmp
mov
fldenv
jg
mov
mov
mov
pop
in
jg
popa
icebp
out
movsb
lods
pusha
mov
jbe
pop
mov
jg
icebp
mov
mov
and
mov
inc
movsb
mov
jg
aaa
sti
clc
aaa
ret
xchg
pop
adcl
daa
aad
pop
mov
mov
pushl
lods
sti
aas
in
addr16
cli
lods
bound
or
rclb
push
adc
out
lcall
shll
cmp
hlt
pop
push
and
leave
cmpsb
sahf
jns
add
xlat
mov
push
fnstenv
inc
aad
sub
dec
lret
jl
xor
cmp
xor
sbb
mov
push
in
pusha
inc
daa
mov
movsb
jbe
xchg
xrelease
cld
dec
aas
jg
sbb
jl
sub
cmpsl
xor
sarl
cld
daa
scas
cltd
outsb
ds
lods
in
vmovshdup
adc
call
sbbb
mov
test
mov
or
les
int3
xchg
into
xchg
push
mov
in
adc
jg
in
or
or
lea
hlt
ret
stos
andb
sahf
dec
sub
sbb
jne
or
xchg
mov
cli
out
pop
js
cmpsb
insl
pushf
inc
ss
inc
and
repz
sti
sub
in
sti
dec
aaa
and
aad
out
add
mov
cmc
nop
mov
jp
popf
cld
add
xchg
pop
jo
ss
cmp
mov
mov
nop
push
and
pop
push
int3
sbb
aad
adc
ljmp
aam
sbb
pop
lret
jp
popf
or
test
push
fchs
pop
lahf
movsb
jbe
insl
int3
lcall
mov
ja,pn
ljmp
pop
cmc
pop
cmpsl
arpl
std
inc
data16
dec
lods
lea
cwtl
push
cmc
hlt
add
fs
inc
inc
out
loope
sahf
sub
or
in
movsl
ja
jb
imul
mov
jno
push
ja
sbb
into
pop
lret
push
xchg
repz
jmp
mov
and
lret
cld
sti
push
inc
cltd
sub
out
scas
cmp
scas
jnp
inc
mov
xor
pop
hlt
jne
xor
pop
add
mov
jnp
push
arpl
add
pop
aad
test
sub
push
fs
stc
push
push
jno
sbb
or
mov
adc
mov
fldt
and
lods
out
lcall
in
push
push
inc
in
frstor
in
scas
leave
out
stos
push
cltd
cmp
mov
fisubrl
adc
cmp
or
jo
or
or
shl
ss
mov
lods
sub
lret
cmpsb
lods
movsb
shlb
cmpsb
out
jg
pop
sbb
icebp
inc
mov
jnp
enter
mov
jge
pushf
mov
xchg
sbb
lahf
adcl
hlt
push
and
add
fstl
inc
shrl
xor
scas
repz
fistpll
jmp
add
in
icebp
mov
and
mov
mov
mov
mov
stos
jnp
xchg
mov
arpl
mov
dec
xor
fcmovu
fs
add
xchg
arpl
sub
push
inc
mov
mov
aas
dec
sti
fs
push
xor
shl
dec
push
dec
lods
aam
adc
push
push
dec
int
mov
call
sub
pop
jmp
cld
out
mov
mov
out
dec
xor
mov
cmp
outsl
jns
imul
imul
push
cmp
bswap
movsl
mov
out
pop
sbbb
inc
push
inc
adc
inc
sub
aam
js
out
xlat
xchg
xchg
dec
negl
sub
add
loop
pop
in
inc
push
mov
sbb
pop
test
and
movsl
int3
sub
add
mov
loop
mov
repz
mov
popa
xchg
sbb
push
jb
vpacksswb
out
lcall
lret
sar
lds
sbb
push
and
sbb
mov
xor
pop
xlat
mov
jge
push
lds
cs
mov
lret
mov
cmp
ret
push
mov
lgs
jbe
out
inc
ja
cwtl
and
movsl
int
mov
ss
xor
xchg
dec
and
mov
in
rcrl
jg
mov
mov
clc
lds
or
in
fnsave
sub
mov
mov
lret
inc
lods
or
inc
popf
mov
pop
dec
push
test
das
flds
push
adc
and
fidivl
pop
popa
dec
pusha
test
jae
pop
add
push
adc
or
scas
mov
cmp
jno
pop
out
inc
loop
mov
scas
mov
flds
test
inc
loop
jne
xchg
stos
call
repz
mov
lret
lret
lea
icebp
and
sub
dec
push
rorb
iret
fstpl
out
loop
scas
je
nop
fwait
add
jb
test
mov
pushf
frstor
dec
add
dec
adc
inc
test
cmp
fdivrs
push
aas
mov
push
inc
cli
popf
mov
rcr
sub
mov
push
mov
xchg
out
cmpsb
xor
mov
jecxz
insl
xchg
add
or
xchg
mov
aaa
cmp
mov
fistpl
es
dec
push
sub
xlat
mov
cmp
dec
push
cmc
jne
mov
jmp
dec
cmpsl
adc
cmp
dec
xor
jo
sti
mov
mov
pop
mov
adc
ficomps
sbb
and
pop
icebp
inc
out
test
test
push
cmc
dec
inc
pop
and
in
movsl
xchg
fwait
repz
fmuls
repz
push
dec
gs
push
cltd
push
insb
test
fisttpll
imul
lret
pop
aam
inc
jne
ljmp
outsb
xchg
cmpsb
jecxz
and
inc
push
jp
xchg
repnz
addl
ds
pop
or
dec
pop
test
aam
test
notb
adc
jne
data16
loop
ds
jne
lds
jb
pop
shll
jge
mov
addr16
mov
and
push
movsl
in
xor
xor
dec
xchg
ret
testl
mov
pop
add
shlb
in
fwait
pop
xchg
pop
gs
nop
mov
inc
test
jo
mov
xor
push
dec
sbb
lahf
cmp
stos
orb
shr
rcrl
push
insl
cld
imul
test
testl
mov
inc
mov
cmpsl
xchg
pusha
and
xor
push
inc
adc
xor
dec
and
push
add
lret
sbb
jb
xor
stos
jbe
push
dec
rcrl
rorl
in
mov
jp
lock
xchg
add
lea
andb
dec
fldenv
pop
ficoms
icebp
int
mov
jg
cmp
or
xchg
lock
hlt
and
cmp
xchg
pop
lahf
pop
cwtl
xchg
mov
cmp
into
jno
xor
stos
cs
ret
or
push
xchg
aam
xchg
enter
jno
sbb
insb
mov
stc
inc
push
inc
fcompl
ss
loopne
cltd
push
inc
test
pushf
cwtl
mov
dec
or
xor
in
out
insb
mov
repz
rclb
sbb
cmp
mov
xchg
push
in
out
or
adcb
and
xor
scas
mov
pop
testb
jle
dec
push
lret
add
outsb
leave
xchg
ljmp
icebp
jb
cs
jns
fdivp
out
pusha
scas
test
test
jne
in
sbb
push
adc
inc
enter
addl
push
dec
rcrl
inc
and
jnp
cmp
leave
xchg
imulb
jle
imul
pop
dec
push
and
imul
inc
mov
sub
scas
decb
sahf
sub
movsl
mov
imul
iret
mov
ja
push
ret
mov
enter
cmc
mov
xchg
or
dec
adc
fdiv
or
insl
mov
add
xchg
cmc
pop
xor
ss
xchg
scas
aaa
jns
mov
cmp
lret
rcrb
rcll
outsb
cwtl
jg
mov
lods
pop
adc
jle
cmp
cmp
and
xor
imul
fistl
outsl
fstps
push
jmp
jnp
xor
jg
pushl
or
add
aaa
fsts
sti
push
cld
jns
mov
nop
aaa
xchg
lods
insb
xor
je
mov
or
pop
mov
flds
in
nop
out
jns
push
icebp
test
pop
or
adc
decl
mov
fstpt
dec
or
je
pop
insb
mov
roll
jnp
mov
ja
popf
mov
lahf
ret
jne
aam
jecxz
push
test
xchg
xchg
sti
sub
push
push
outsb
xor
inc
movsl
insb
fistl
ret
dec
mul
in
data16
cmp
ljmp
xor
cli
outsl
aad
cmpsl
jmp
cmp
shlb
cmp
fcomps
mov
push
inc
loopne
ja
mov
enter
sbb
insb
icebp
and
roll
shrb
hlt
jo
dec
fiaddl
fistl
nop
xchg
jno
insl
ljmp
cs
ffreep
sarb
mov
and
xchg
jb
and
inc
mov
dec
pop
pop
outsl
es
cmpsb
pop
xchg
movsl
roll
xchg
mov
outsb
arpl
hlt
test
jp
push
psubusb
fnsave
xchg
xor
leave
das
adc
into
adc
outsl
mov
mov
lahf
adc
sarb
hlt
mov
f2xm1
cmpsl
les
dec
fcmovnb
pop
or
xchg
push
ret
and
aam
imull
jo
cmp
sahf
test
push
aas
das
nop
inc
mov
sarl
dec
sbb
stos
jo
dec
cld
sub
leave
mov
out
adc
imul
mov
mov
loope
insl
pop
add
xor
pop
pop
call
inc
push
pop
and
repnz
inc
pop
inc
inc
xor
out
mov
and
aam
sub
fisubl
lock
xchg
push
movzbl
xchg
xchg
sub
sbb
pop
into
ss
lea
popa
sahf
out
incl
push
pusha
outsb
jbe
out
xchg
fucomi
xchg
out
mov
jns
xchg
jb
add
loope
dec
xor
test
xchg
pop
mov
cmpsl
cmpsb
add
xor
mov
popf
lcall
inc
xor
sbb
aas
test
outsb
sahf
cmp
and
ficoms
inc
mov
arpl
pop
subb
scas
jl
out
mov
int3
test
cltd
push
and
xchg
imul
push
shl
enter
pop
call
fs
xchg
xchg
sbb
pushf
movl
sub
cmp
mov
jae
cmp
xchg
popa
dec
cmp
inc
shrl
lcall
repz
pop
outsb
testb
push
mov
mov
mov
sti
or
fcmovu
aaa
cmpb
mov
fst
mov
add
jnp
cwtl
cmp
nop
or
mov
inc
and
xlat
imul
xchg
cli
jne
push
jmp
push
repz
hlt
mov
int3
lock
into
mov
mov
sbbl
push
leave
lcall
sbb
sub
mov
rcrl
cmp
xchg
jae
test
stos
into
push
shrb
sub
test
cmpsb
pop
out
push
xchg
cmp
xor
ja
bound
incl
jl
adc
push
pop
call
int3
jg
mov
sahf
bound
push
pop
adc
loopne
test
gs
aam
bound
es
adc
fdivrl
test
fistpll
mov
jae
adc
andl
aas
dec
and
xlat
out
jle
xor
lahf
ja
cmp
jecxz
or
lds
mov
xchg
jmp
dec
jae
fildl
movsb
cs
icebp
jno
pop
inc
incb
cld
adc
daa
jb
popf
sbb
loope
jg
sbb
jmp
call
aas
nop
out
sub
fiadds
lea
push
roll
adc
inc
cmp
sub
sub
or
mov
fcomp
out
cmp
lds
lods
push
cwtl
clc
fsubrs
and
dec
cmp
in
inc
ficomps
outsb
out
pop
inc
sbb
insl
xchg
shll
pop
lods
popf
mov
scas
in
jle
aam
pop
and
bound
sub
or
xchg
call
inc
out
sub
repz
int3
call
scas
cltd
in
pop
xchg
icebp
arpl
js
insb
sub
xchg
jmp
and
and
inc
clc
push
pop
jmp
je
mov
aaa
xchg
popa
pop
adcb
cmpsl
lcall
scas
push
jb
xlat
xor
dec
push
lcall
dec
jle
dec
push
jb
mov
movsl
ret
rol
cld
mov
cmp
pop
push
mov
adc
jg
or
lcall
mov
adcl
mov
mov
fdiv
or
insl
and
fidivs
mov
scas
jg
es
sbb
test
jne
xchg
test
add
shr
aas
out
pop
mov
push
inc
mov
sbb
stos
pushl
popf
or
jmp
and
mov
sbb
outsb
mov
push
jne
cli
xor
mov
enter
lahf
and
cmc
js
push
jne
lods
or
dec
sar
aam
or
xchg
stc
pusha
push
in
inc
push
jg
xor
in
in
push
push
rorb
pop
js
sahf
jnp
mov
xchg
sbb
into
cmc
fwait
push
into
adc
dec
push
pop
scas
ss
add
xlat
push
mov
inc
lahf
outsl
mov
mov
fwait
add
jmp
in
int3
dec
mov
and
lods
xchg
test
jmp
js
int3
cmc
or
popf
mov
sbb
in
pushf
jae
fwait
mov
pop
push
mov
mov
sub
jae
xor
leave
mov
pop
add
dec
clc
inc
sub
stos
popa
add
xchg
icebp
inc
rcr
das
xchg
js
mov
mov
mov
jg
imul
and
and
xor
sbb
das
sbb
aad
xor
inc
aad
ds
sub
lods
js
leave
sub
push
dec
loop
jp
sahf
std
out
pop
adc
jg
sub
cmp
shlb
div
repz
mov
ret
dec
repnz
dec
push
sbbl
out
ficoms
jmp
adc
sub
pop
dec
jae
add
sbb
sbb
jmp
pop
mov
int3
pop
repz
orl
push
mov
test
mov
ds
pop
test
and
xchg
int
cmp
outsb
pop
xlat
pop
rclb
test
lret
es
outsb
cmp
pop
lcall
ljmp
pop
nop
or
cmc
cmp
mov
shlb
movsb
mov
push
cmpsl
clc
jmp
cmp
inc
xchg
fidivrl
sbb
sbb
jo
adc
jecxz
xor
pop
in
loope
fisttpll
out
mov
lods
jb
inc
xor
ret
popa
nop
dec
xor
xor
mull
cmp
cmp
mov
jg
sarb
pop
jo
pop
and
sub
stos
or
mov
data16
pop
into
adcl
iret
xchg
cld
aaa
cld
int
lahf
jg
mov
movsl
aad
pop
scas
cmp
sarb
sub
cwtl
xor
and
shlb
jp
cs
je
aad
mov
mov
adc
add
ret
pop
es
pushf
xchg
xchg
test
inc
push
mov
bound
jecxz
pop
jae
inc
push
push
outsb
popa
sti
cmp
pop
sub
inc
lret
and
iret
jae
bound
mov
adc
jno
mov
mov
xchg
pop
push
lods
pop
and
jo
add
test
hlt
mov
imul
xor
mov
mov
out
add
dec
cwtl
inc
add
cld
lds
fsub
and
jno
repz
jno
pop
rcll
add
cmp
lds
ss
stos
push
jno
xor
inc
arpl
ljmp
xor
jge
jnp
pop
xor
mov
mov
adc
xor
jns
jnp
inc
pop
mov
xor
clc
and
mov
add
add
jnp
xchg
sub
out
hlt
cmpsl
rol
mov
jecxz
mov
dec
jmp
dec
subl
mov
mov
or
mulb
jle
stc
sti
movsl
add
nop
xchg
jl
dec
test
mov
cmpsb
cmp
fldenv
and
mov
pop
or
mov
sti
xchg
fcmovnb
mov
in
inc
cltd
jnp
sbb
jae
jge,pt
push
sahf
add
xchg
pop
stos
leave
arpl
fiadds
pusha
or
out
jle
jns
mov
lahf
jnp
ja
hlt
lret
addl
test
loopne
cld
xor
movsl
test
and
fisubrs
loop
push
fcomps
pop
push
cmp
shl
inc
int3
and
sbb
negb
inc
xchg
cmp
enter
lock
pop
or
pop
ss
and
xchg
repz
push
push
popa
pop
mulb
jmp
mov
imul
add
mov
sub
xchg
fidivs
or
jnp
pop
xchg
sbb
clc
mov
rcrb
jo
clc
jp
or
sti
or
jno
scas
lahf
in
lret
jle
inc
in
movsl
jp
mov
xor
mov
and
add
sbb
into
sub
jl
std
rcrb
mov
cli
jo
mov
cmp
pop
mov
les
imul
adc
pop
push
and
xchg
cli
hlt
push
cmpsl
and
sbb
inc
insl
imul
imul
jb
sub
cld
sbb
cmpsb
data16
or
mov
ret
out
addr16
mov
sbb
and
xor
cld
xchg
and
jl
pop
pop
mull
pushf
cltd
or
pop
std
clc
sbb
fs
jp
mov
jne
cli
sub
pop
cli
test
lret
test
in
stos
imulb
jmp
pop
std
mov
push
sbb
jbe
repz
ficompl
pop
mov
mov
dec
pop
mov
stc
mov
add
call
push
or
outsb
shll
cmp
and
inc
das
fcmovu
xchg
call
fs
out
and
xchg
aad
lret
add
aaa
jne
call
out
mov
add
loopne
bsf
jge
dec
add
mov
lods
inc
fisubl
mov
mov
cmp
push
cli
loopne
push
pop
push
mov
xchg
pop
cmpsb
out
push
sub
add
push
or
adc
data16
mov
scas
int
pop
cmp
pushf
pop
mov
dec
mov
nop
arpl
data16
insb
cmp
dec
push
push
fistpll
xorb
push
inc
jl
pushf
enter
cld
and
xchg
lret
popa
rcll
scas
dec
inc
mov
pop
add
addb
sti
pop
aas
mov
pop
mov
inc
icebp
and
sub
add
inc
and
inc
sbb
push
aad
punpckldq
in
test
push
mov
jmp
pop
movsb
inc
adc
icebp
imul
push
rolb
test
loopne
mov
push
pop
sbb
test
sub
push
and
and
xlat
adc
or
sbb
insl
xor
int
cmc
daa
or
mov
or
test
dec
adc
sub
pushl
adc
popl
insl
and
cli
sbb
jl
or
jb
cwtl
cmp
lahf
jmp
add
ror
xchg
inc
mov
dec
jne
repnz
ret
jecxz
out
shl
inc
jno
xlat
mov
inc
mov
or
xor
stos
mov
xchg
dec
mov
inc
jno
pop
cmp
dec
mov
js
mov
lods
addr16
cmp
mov
push
or
call
clc
test
jbe
jnp
imul
leave
or
jmp
into
dec
inc
jno
xor
out
pop
lods
mov
es
js
lods
mov
mov
cmpsl
push
adc
fdiv
fwait
idivb
jns
add
jg
push
movsb
pop
and
pusha
fcomps
pop
xor
arpl
and
sar
lds
xor
daa
comiss
andb
sub
xor
aas
jb
pusha
mov
xor
mov
dec
xchg
gs
cmp
loopne
xlat
rclb
in
lcall
call
dec
movsl
in
jnp
push
pop
sub
test
add
pop
cmp
adc
es
int3
and
test
pop
loop
cmpsb
rolb
cmp
ljmp
cmpb
mov
push
outsb
xchg
iret
lds
shrb
or
push
pop
pop
das
pop
ljmp
xchg
push
mov
mov
loopne
int3
lods
xor
scas
loopne
pop
in
xorl
movsl
int
int
xchg
inc
cmp
repz
leave
movsb
push
sbb
or
xchg
ret
jns
mov
fldt
dec
sbb
xor
dec
mov
in
pushf
lods
fcomp
outsl
loopne
scas
pop
pushf
mov
mov
mov
lahf
cs
xchg
or
and
and
push
int
pop
test
dec
out
mov
lret
test
cli
adc
imul
adc
mov
aam
scas
imul
test
es
pusha
jb
add
orl
insb
xchg
dec
mulb
inc
mov
outsl
insb
xchg
push
sahf
xchg
mov
push
jl
xor
mov
mulb
adc
mov
inc
pop
loopne
jge
sub
jb
dec
in
and
sti
jecxz
add
mov
sbb
jg
or
inc
adc
filds
xor
lret
sti
das
inc
pop
call
dec
and
push
xchg
or
sub
pop
push
pop
and
cmc
mov
ljmp
adc
xchg
dec
std
add
mov
pop
pop
pop
std
repnz
insb
ljmp
jg
mov
push
jno
sbb
xchg
push
ret
pop
inc
lds
lret
fcoml
cld
pushf
out
mov
push
push
push
lcall
sub
pop
cmp
mov
fsts
or
shll
mov
sbb
xorb
xchg
mov
stos
cmp
xor
inc
ljmp
xchg
ret
arpl
stc
cltd
dec
jmp
sub
lea
les
dec
mov
dec
sub
add
add
fimull
stos
shl
jmp
cmp
iret
dec
mov
shlb
xchg
into
sbb
fs
jns
stos
js
push
int3
lods
sub
or
divb
dec
cmp
fs
in
dec
and
test
arpl
lcall
test
cmp
pop
fmuls
or
neg
mov
out
in
lfs
divl
dec
clc
jne
xchg
mov
adc
outsb
outsb
adc
popl
cmpsl
lcall
in
popf
and
and
xchg
xchg
jns
mov
mov
mov
mov
stos
sub
and
add
leave
adc
jne
pop
mov
lret
jge
xchg
cli
sbb
fimuls
dec
cs
and
in
test
sub
or
fsts
dec
cld
or
pop
mov
adc
test
insl
test
inc
add
pop
cwtl
jno
xchg
cmpsb
adc
rol
pop
test
sbb
enter
lea
jbe
mov
fisttpll
xchg
jns
aad
rorb
test
pop
jo
pop
sarl
mov
insl
lods
jbe
or
inc
push
shl
pushf
jns
jae
xchg
ret
das
sub
inc
out
mov
imul
inc
cmp
add
sti
jae
xchg
add
jmp
adc
jg
cmc
push
lret
inc
and
push
cs
loopne
imul
inc
shlb
add
push
sub
jnp
cs
jno
sbb
insb
inc
test
lret
lret
scas
sbb
push
pop
outsb
loope
sbb
cmp
jne
dec
mov
arpl
lods
rorl
outsb
lods
imul
xchg
push
les
xor
divl
mov
shrl
js
jno
pushf
fwait
and
mov
out
imul
cs
xchg
mov
mov
pop
sbb
dec
mov
mov
int3
jo
cmp
shlb
push
fwait
pop
pushl
nop
jb
xchg
in
syscall
std
cmp
lds
sbbb
jae
push
dec
mov
cmpsb
xor
sbb
shrl
lods
xchg
mov
data16
je
mov
push
orb
loop
dec
fmull
add
ret
andb
pop
pop
mov
pop
dec
push
add
outsb
add
and
cmpsl
mov
mov
btsl
jb
cmpsb
out
push
sbb
test
nop
cmc
jge
and
dec
dec
jge
xrelease
jns
cmc
sbb
repz
dec
push
int3
inc
loope
or
mov
fnstsw
xor
icebp
push
cs
jl
cbtw
das
and
mov
cmp
stos
iret
lods
jbe
leave
or
daa
pop
xor
pusha
addl
or
sub
in
add
jle
and
jle
test
sbbb
mov
lahf
in
out
int
test
dec
mov
cmp
mov
adc
out
cmpsl
scas
sbb
out
movsl
pop
addr16
test
fwait
rcll
jae
dec
jle
inc
jge
test
dec
cmp
xchg
jp
mov
cli
mov
imul
fisttpll
lret
or
cmp
mov
loopne
jge
push
adc
inc
sti
sbb
scas
fucomip
inc
rolb
sub
rolb
lea
mov
sub
sbb
xlat
shrb
std
fldt
inc
lcall
sti
aas
inc
mov
cmpsb
mov
pop
inc
fiadds
test
mov
inc
mov
iret
cwtl
mov
xor
mov
jb
testl
xchg
enter
lock
inc
cmc
sub
mov
sbb
cmp
popf
decb
sbb
in
push
dec
or
test
dec
xlat
adc
add
push
hlt
mov
mov
or
sbb
sub
or
cmp
jle
stc
fistps
jecxz
xor
push
loop
scas
jge
fnsave
inc
jne
xor
mov
push
xorb
std
mov
sahf
push
sub
hlt
pop
and
iret
cmc
add
call
outsb
or
or
fwait
push
push
xor
pop
aam
or
sarb
mov
aas
mov
dec
cmp
data16
enter
adc
pop
mov
repnz
sbb
sysret
shrl
and
mov
cs
xor
scas
pop
mov
xor
das
jno
pop
rol
cld
push
popa
pop
addr16
xorl
adc
repz
int3
inc
push
repnz
cwtl
sub
sub
loopne
add
xchg
ja
movsl
inc
add
test
mov
ljmp
cwtl
jno
outsl
mov
jo
xor
int
lds
aas
adc
mov
mov
xchg
mov
sbb
les
sbb
test
inc
mov
stos
mov
div
sub
mov
dec
push
pop
cwtl
inc
movsb
xchg
push
or
outsb
adc
test
pusha
inc
cmpsb
mov
in
das
lods
ficompl
jle
ss
mov
les
imul
pop
sbb
jno
insl
out
push
jmp
xor
push
fcmovne
inc
iret
or
insb
cmp
cmp
xchg
jnp
inc
in
push
push
iret
push
test
ret
xchg
enter
push
jno
mov
xor
mov
roll
clc
insb
fs
scas
ja
xor
adc
jo
lds
sbb
daa
mul
mov
jns
das
sub
and
testl
cmp
xchg
cmp
or
mov
or
mov
cmc
cmp
lret
dec
ja
push
mov
pusha
std
ds
inc
add
sbb
insl
mov
push
push
fwait
and
das
xor
fisubrs
mov
push
sbb
sti
inc
pop
jnp
lds
aaa
jbe
push
insl
outsl
pop
dec
xor
enter
push
adc
xlat
and
shll
xor
fistps
ret
jo
aaa
ret
inc
mov
fbstp
jae
inc
mov
adc
pop
pusha
cmp
or
lret
dec
outsl
cwtl
loopne
in
inc
fisttpl
loope
es
sub
cmp
inc
outsb
ret
sbb
cmp
jecxz
icebp
fists
dec
testl
mov
out
std
mov
aam
div
int
dec
mov
and
jne
xorl
adc
fimuls
adc
in
lock
push
fstl
sgdtl
pop
mov
and
xchg
mov
pop
stc
sti
mov
addl
pop
in
adc
pop
xor
mov
inc
popf
jnp
int
sub
bound
and
cmpsb
lds
add
mov
shl
pop
lcall
dec
sub
pop
insb
ja
stc
mov
fstl
andl
and
loope
dec
and
lahf
loop
aam
loop
stc
outsl
in
mov
negl
inc
xchg
xchg
dec
and
xchg
insb
adc
xor
cli
push
je
xor
push
lret
xchg
sub
mov
adc
adc
clc
das
scas
pop
insl
lcall
mov
mov
into
xchg
adc
mov
mov
roll
lcall
shrb
mov
aad
cmp
mov
cmp
enter
inc
dec
or
mov
mov
fisttps
sub
je
hlt
in
pop
popa
jns
sbb
stc
and
mov
adc
sub
stc
inc
adc
push
cmp
aad
jmp
and
xchg
aam
popf
fstl
sub
icebp
xchg
sbb
mov
xchg
fildll
jae
add
dec
sub
in
mov
pusha
les
push
jno
lods
insl
dec
sahf
dec
and
add
xor
dec
fcomi
pop
das
mov
cmp
pop
rclb
pop
or
pop
push
mov
jmp
insl
addl
mov
or
enter
into
js
call
adc
xor
mov
adc
mov
fstpt
not
cltd
call
xchg
mov
xor
pop
je
out
push
add
neg
das
and
jns
push
xchg
ret
bound
pop
gs
stos
sar
nop
int
sub
push
push
aad
or
or
jl
testl
jl
rdmsr
mov
xchg
arpl
test
lds
test
popa
pushf
adc
js
push
lea
stos
lret
push
pop
in
sbb
pop
sbb
je
inc
daa
lret
jecxz
out
mov
xchg
pop
mov
fldl
xlat
and
and
andl
out
and
dec
in
or
jbe
xchg
push
test
jb
cli
shll
sbb
push
outsb
pusha
movsl
jo
pop
jge
or
inc
jecxz
lcall
sbb
cli
pushf
inc
xchg
sub
out
sub
pop
cli
add
lret
add
fimull
sub
push
mov
jnp
fs
pop
arpl
outsl
inc
jbe
mov
cmp
mov
cmp
adc
fwait
cwtl
shlb
push
push
mov
and
ja
mov
insb
mov
xor
xchg
jno
xorb
mov
es
pop
push
aaa
push
mov
mov
loopne
imulb
cwtl
mov
popa
movsl
inc
sahf
jns
fsubl
popa
stos
aam
push
mov
add
test
imul
cmpsl
imull
call
or
sub
rcrb
mov
pop
lods
sub
sarb
sbb
repnz
in
add
cmpsb
test
pop
add
fistpll
push
push
sub
outsl
sbbl
fmull
jno
mov
ret
icebp
fcomps
daa
jmp
mov
cmp
daa
and
aam
and
lcall
into
add
cmp
fcoms
cmp
inc
push
js
movsb
mov
aam
xchg
cmpsl
shlb
mov
ds
aam
dec
jmp
adc
and
sub
outsl
es
inc
xor
jnp
mov
sub
xchg
dec
or
stos
loopne
cmp
jbe
xor
inc
push
xchg
jge
dec
clc
enter
es
jle
dec
dec
out
shrb
movsl
sbb
push
xchg
repz
shll
mov
jle
shll
pop
fwait
jnp
fsub
in
insl
aaa
xor
add
pop
hlt
lret
cmpsb
insb
dec
jo
arpl
insb
sbb
jmp
outsb
imul
orb
aas
push
bound
loopne
jl
dec
jp
push
ret
mov
lods
cmp
stos
and
and
adc
addr16
pop
xlat
cld
testl
inc
inc
outsl
add
sbb
mov
xor
sbbb
jne
pop
rclb
iret
mov
ret
jae
pop
or
aaa
movl
icebp
sbb
cmc
sub
lea
std
je
popf
sti
jmp
sbb
call
jle
mov
lods
ret
sahf
xchg
adc
das
mov
and
ret
fstps
dec
stos
adc
rorl
imul
jg
adc
fwait
sub
aas
in
dec
fisubrs
xor
pop
jne
jmp
or
movsb
sub
rol
jmp
jae
xor
mov
inc
pop
fs
ljmp
push
xchg
sbb
out
movsl
ret
pop
push
icebp
cs
pop
fcomi
mov
sti
adcl
cmpsb
clc
and
xchg
shlb
push
jle
lds
mov
mov
xor
or
lock
cmp
loop
xchg
lahf
in
and
aas
mov
clc
rcll
gs
mov
sub
movsb
imul
xor
iret
call
and
pop
sub
fs
cmp
stos
popf
pop
inc
sub
sahf
test
mov
inc
std
arpl
loope
jmp
stos
fwait
xchg
and
pop
push
andb
fwait
mov
popf
jbe
or
pop
or
lret
outsl
jns
imul
sbb
xor
fsubrs
mov
daa
fcompp
out
pop
dec
sbb
js
mov
add
pop
inc
jp
add
fldt
scas
aaa
dec
cli
repz
inc
pop
loope
lock
movsb
jp
movsl
cmp
andb
ror
into
mov
ds
sbb
arpl
fwait
sub
idivl
xchg
int
push
dec
xchg
jle
xchg
or
adc
xor
in
sub
add
mov
rorl
adc
and
loopne
push
mov
or
aam
adc
add
push
popf
inc
sub
fstpl
out
jmp
lcall
cs
mov
xor
jmp
int
sarl
adc
jo
push
push
orl
xor
xchg
cld
mov
jns
xlat
aad
daa
pushf
out
xchg
cld
insb
mov
jo
lods
and
lahf
mov
and
push
enter
mov
pop
int3
push
das
inc
jecxz
mov
inc
sbb
aad
repnz
push
ficoml
push
jge
idiv
int
lret
adc
cmp
or
orl
cmp
mov
cmp
cmp
push
out
sarb
mov
xor
loope
cmp
pop
mov
cli
mov
imul
lods
or
loope
sub
into
pop
movsl
jnp
push
xor
in
lcall
xchg
roll
ret
push
jae
lret
mov
hlt
pop
xor
push
roll
je
and
lcall
mov
in
push
mov
pop
insl
push
movsl
push
add
mov
xchg
pop
fistl
pop
push
lret
dec
push
sti
jmp
js
sub
sub
pop
out
sub
movsl
sbb
test
popa
add
jecxz
xchg
iret
popa
jnp
add
mov
test
or
into
repnz
dec
mov
adcl
std
and
fcoml
imul
mov
daa
pop
in
repz
pop
dec
cmp
je
add
pop
in
xchg
ficoms
inc
outsl
imul
jle
aad
cs
lds
jb
adc
cmp
dec
popf
iret
loop
je
xchg
xchg
mov
jbe
pop
movsb
in
popa
add
push
pop
divb
push
out
jle,pn
fnsave
or
andl
lods
xlat
jecxz
andl
mov
sbb
adc
cltd
scas
imul
hlt
jno
mov
mov
mov
xor
scas
outsl
add
cwtl
fisubrl
xchg
push
nop
xor
mov
add
repnz
pop
dec
jp
shl
mov
inc
icebp
jne
mov
and
movsb
push
data16
roll
scas
mov
add
leave
gs
adc
mov
cltd
cs
xor
push
rclb
imul
clc
mov
mov
cmpsl
hlt
into
mov
stos
out
cmpsb
pop
test
mov
jmp
jg
dec
xchg
sub
mov
mov
cltd
data16
test
imul
in
movsl
cmp
xchg
scas
sbbb
xor
inc
xlat
cmc
in
es
add
and
ret
pop
or
push
ja
pop
scas
adc
mov
outsl
rep
test
push
or
dec
mov
das
add
sub
js
stos
sub
test
or
jmp
push
sti
or
pop
outsb
inc
push
out
sbb
jle
xlat
mov
imul
stos
sahf
jne
jne
and
pop
loopne
loop
into
sub
adc
or
scas
mov
jnp
sbb
push
pop
scas
or
mov
orl
test
in
cwtl
adc
xchg
ja
test
addr16
inc
repnz
xor
mov
cwtl
jbe
cli
aas
pop
mov
outsb
pop
outsb
outsl
mov
dec
loopne
test
ret
repnz
repnz
in
add
bound
mov
xchg
pusha
cmp
aam
inc
mov
shrb
push
mov
mov
sub
in
sbb
test
or
mov
ss
push
dec
inc
call
repz
mov
jne
or
ret
dec
fisubl
in
outsb
jae
sub
mov
mov
mulb
jp
push
je
mov
in
mov
cmpsl
sahf
fmull
mov
dec
xchg
popa
cmp
lret
dec
rcr
or
fs
jae
sbb
xor
pop
out
out
dec
movsb
add
popf
dec
jecxz
mov
pop
out
add
dec
push
insl
adc
mov
loop
nop
mov
cmc
scas
and
mov
xorb
in
jo
jle
into
insl
and
and
mov
add
mov
mov
outsl
rolb
fwait
loop
dec
push
cmpsb
inc
in
xchg
add
mov
sbb
cltd
adc
push
sub
arpl
scas
mov
js
stc
xor
inc
je
push
icebp
mov
jg
jecxz
xchg
mov
sbb
jne
aas
js
jae
mov
cwtl
in
lds
jle
popf
add
inc
pop
sbb
cmp
add
xchg
lret
or
stos
movb
xlat
insl
out
mov
arpl
lcall
fcmovne
addr16
mov
jns
or
sub
inc
and
cmpsb
inc
fisubl
loopne
xor
lds
mov
mov
lea
pop
xor
inc
mov
sbb
sahf
pop
insl
bound
fsts
cmp
jo
in
movsl
aam
and
mov
fimuls
dec
cmpsl
xor
aaa
mov
daa
out
orl
pushf
iret
ds
lea
movsl
sub
add
pop
xor
jmp
lods
xlat
negl
jmp
cmpsl
cmpb
movsb
icebp
out
jno,pt
inc
cli
pop
adc
or
mov
push
ret
lahf
mov
imul
dec
cmp
jb
arpl
pop
das
xor
insb
and
add
and
leave
nop
into
push
mov
imul
inc
dec
push
xorb
lea
pop
fisubrl
mov
xlat
out
cmp
int
or
test
mov
jl
sbb
adc
int3
cld
jno
xchg
arpl
and
sbb
stc
or
out
push
or
stos
push
xchg
call
mov
fwait
bound
and
rcl
cmpl
dec
sub
je
lock
cmc
cmp
lret
shrl
mov
outsb
test
or
mov
and
in
bound
mov
and
jl
pop
cmp
rorb
cmpsl
ss
imul
aas
aaa
loopne
inc
in
pop
xor
push
or
shll
xchg
sub
cltd
adc
xor
gs
pop
mov
and
cmp
cmp
mov
leave
stc
lret
mov
fcoml
pop
call
shlb
xchg
push
or
xor
pop
jmp
ljmp
movsl
mov
pop
mov
cld
les
xchg
outsl
jno
xor
cld
movsb
mov
iret
inc
fs
push
and
sub
fadds
outsl
xchg
add
mov
xor
jb
test
popl
shll
in
and
shlb
mov
sbb
scas
gs
ficoml
push
xor
pop
jb
adc
adcl
push
lods
push
mov
aas
jb
pop
inc
mov
xchg
jge
fldcw
lods
repz
test
mov
lret
or
pop
out
jbe
aas
ljmp
mov
add
mov
add
js
cmc
into
or
adc
fs
inc
ret
cmpsb
lcall
mov
fmul
cltd
or
jl
frstor
repz
push
mov
sub
and
cwtl
fs
in
into
out
rcll
pop
mov
mov
xorl
lds
xchg
inc
fwait
push
or
xchg
adc
popa
out
ret
ljmp
inc
arpl
mov
movntq
jge
scas
andb
mov
popf
sti
or
jle
nop
inc
addr16
cli
jmp
and
push
adcb
mov
dec
cld
lret
push
cmpsl
mov
jae
push
into
pop
stos
sahf
sbb
mov
dec
shlb
out
gs
or
dec
mov
gs
add
clc
jnp
lods
mov
inc
mulb
repz
out
iret
sbb
sahf
outsb
mov
ljmp
xor
push
sub
cmpsb
or
test
shl
or
mov
fists
outsl
outsb
in
lds
and
pop
int
shrl
in
xor
lea
movsl
lods
sbb
lods
mov
mov
loope
out
sub
aad
loope
mov
leave
cmp
je
jae
orl
out
test
fistps
or
das
js
pop
mov
or
xor
cmc
cmp
or
leave
sbb
xor
out
pop
bnd
int3
out
in
adc
notb
imul
popf
clc
cmpsb
push
mov
mov
rcrb
push
mov
jmp
xor
data16
push
decl
or
jo
push
mov
into
sub
ja
lds
out
mov
sbb
adc
xchg
push
mov
and
xchg
adc
ret
mov
mov
pop
repz
in
pop
imul
pop
mov
mov
jne
fstps
out
gs
pop
adc
in
or
fsubrl
test
int3
mov
fwait
mov
or
inc
and
out
pop
dec
les
sub
push
jl
cbtw
daa
add
aas
fs
xchg
stos
and
clc
cmc
repz
flds
ja
mov
inc
xchg
add
outsl
in
lock
or
test
sbb
mov
push
fcomip
inc
jmp
xor
mov
inc
fstpl
loop
sbb
outsl
sub
mov
adc
add
dec
fdivs
sbb
cmp
mov
mov
repz
in
es
jbe
mov
dec
adc
push
lods
inc
in
pop
pop
int
cmpsl
lock
jl
lock
bound
sbb
pop
jae
mov
icebp
ss
fiadds
cmc
cwtl
ja
scas
dec
push
sub
sti
mov
stos
je
mov
adc
ficompl
frstor
sbb
push
inc
movsb
mov
cld
xchg
xchg
adc
out
ja
sbb
add
dec
jmp
xor
scas
jge
fxtract
mov
test
xor
lock
xchg
sub
sub
insb
xchg
xor
mov
pop
adc
scas
jp
rorb
leave
sub
inc
push
rcll
js
jno
mov
dec
aam
int
outsl
pop
mov
dec
sbb
or
and
sahf
imul
daa
out
sbb
adc
ret
sbb
in
stc
push
neg
xor
cwtl
out
loop
sbb
int3
pop
pop
push
push
jae
or
xor
xchg
push
mov
aas
dec
stos
int
popf
scas
bound
add
lret
push
movl
push
add
jmp
lock
or
sbb
pop
inc
mov
cmp
adc
xchg
rorl
mov
sbb
or
in
cmc
cld
inc
lahf
sbb
inc
or
push
pusha
cltd
sahf
cmpsl
inc
ja
mov
pusha
xor
and
sahf
loop
jo
xchg
pop
sub
inc
mov
or
pop
mov
iret
lock
jo
sub
cs
mov
inc
push
jecxz
jge
xchg
sbb
call
dec
roll
test
dec
cmp
push
cmp
xchg
dec
scas
sub
dec
sub
adcl
cli
add
mov
inc
ljmp
ljmp
rcl
scas
dec
int3
sahf
ss
ror
mov
xchg
rcll
incl
push
xor
mov
or
shll
es
and
push
xchg
rcrb
arpl
dec
test
fdivr
mov
pop
scas
jns
inc
fdivl
je
cmp
jg
mov
cs
sub
cltd
cmp
sbb
xchg
jecxz
repnz
mov
dec
shlb
dec
push
add
sub
or
scas
iret
rolb
data16
hlt
scas
icebp
dec
or
cmpsl
pop
call
mov
push
sbb
dec
dec
ret
mov
and
xchg
mov
aad
das
ficoml
lret
inc
jl
fwait
mov
arpl
pusha
inc
mov
adc
cmp
lea
jle
sub
in
fsubrl
lea
jb
pusha
push
lds
repz
xor
jno
mov
push
push
lret
lds
inc
shll
cmc
jp
jne
jns
or
xor
push
mov
sub
outsl
les
sub
inc
inc
outsl
enter
cmc
jl
scas
push
inc
out
sbb
push
das
mov
mov
dec
les
aam
shlb
mov
outsl
out
xchg
dec
pushf
es
fdivl
mov
test
add
seta
push
xor
sahf
mov
jae
pusha
fdivp
push
lahf
push
das
mov
mov
rolb
xchg
pop
mov
dec
scas
outsb
mov
jae
sub
sahf
jo
sbb
popa
ds
arpl
push
clc
cmp
outsb
lods
cmp
push
negl
test
ljmp
stc
jne
and
cld
dec
push
addr16
or
das
fs
stos
pop
jae
stc
add
leave
scas
inc
gs
sub
push
lock
lahf
jb
mov
nop
enter
nop
das
cli
sub
mov
lods
or
push
pop
mov
adc
sahf
pop
and
cwtl
popf
fiadds
ret
in
mov
xor
flds
sub
lea
movsb
inc
xor
fldt
pop
sahf
inc
mull
shl
imul
in
ret
adc
pushf
add
ficoml
xor
xchg
push
out
clc
mov
mov
push
ret
sub
test
call
jmp
cld
pop
lea
xchg
lcall
push
or
xchg
or
movl
mov
mov
push
stc
lea
xchg
dec
lds
ja
cmp
add
test
sbb
xchg
out
out
mov
adc
cmp
ret
xor
and
mov
ret
popf
push
out
aaa
jmp
imul
inc
dec
ret
enter
in
imul
sub
daa
or
cmp
imulb
mov
addr16
dec
sahf
lcall
dec
shll
mov
xchg
add
nop
inc
jl
ljmp
jae
jecxz
cmp
fidivrl
sbb
pusha
movhlps
sbb
ret
push
cmp
mov
sbb
cld
cmp
push
sbb
jnp
daa
jnp
mov
or
call
xlat
pushaw
mov
outsl
je
fisubl
sub
cmp
sti
inc
rcll
push
mov
sbb
inc
inc
adc
rcll
rorl
pop
sahf
mov
sbb
ljmp
sub
inc
xchg
je
and
fidivl
mov
pop
add
jg
fistl
adc
mov
sub
xchg
add
push
push
pop
dec
or
or
test
clc
cmpsl
fldl
cmp
mov
inc
dec
push
inc
shll
mov
jge
jns
aaa
les
xlat
push
and
xor
mov
mov
xor
stos
pop
mov
xchg
out
xchg
notb
mov
adc
jno
xchg
cmp
jg
mov
and
mov
rcr
fstp
cmp
loopne
adc
xor
sti
arpl
mov
jae
iret
mov
iret
add
inc
enter
or
ja
ror
pop
imul
rorb
popa
insl
les
lods
pop
out
stos
mov
pop
push
inc
ret
test
rcl
mov
mov
jno
imul
jne
adcb
push
inc
scas
testl
jle
bound
enter
mov
inc
je
cmp
out
add
lcall
xor
or
pop
mov
lock
stos
adc
xchg
addr16
mov
fstpt
pop
mov
inc
xchg
and
mov
arpl
movsb
popf
andl
inc
mov
pushf
ja
das
insb
js
int3
movl
sbb
ret
int3
movsl
cmp
fidivrs
outsl
in
push
mov
fst
push
adc
and
in
mov
stos
mov
ja
aam
stc
inc
mov
call
dec
pop
mov
push
xor
aas
imul
push
push
mov
imul
ret
add
fs
divl
lcall
jb
lods
cmp
jns
mov
testb
push
fisubrs
inc
xchg
jge
pop
and
jl
xchg
fsubs
icebp
or
inc
jb
incb
dec
inc
jns
call
and
cltd
dec
mov
push
iret
lcall
popf
insl
in
lds
divl
mov
fisubrs
mov
hlt
mov
jne
repz
push
mov
push
inc
push
loopew
shll
test
xor
cmc
pop
xchg
test
jge
xor
sbb
pop
xchg
push
pushf
pop
dec
sbb
jae
in
and
mov
fildl
dec
mov
mov
fidivrs
packsswb
fs
mov
stc
fbld
pushf
rcrl
dec
inc
jns
xor
test
push
ficompl
call
popa
imul
idivl
roll
dec
in
cwtl
arpl
das
rorl
add
stc
inc
out
adc
jne
test
outsb
sbbl
idivl
pop
mov
push
in
fisubs
int3
in
mov
fs
aas
popa
idivl
shll
push
mov
xchg
inc
mov
pop
in
jno
adc
sbb
sbb
dec
or
jecxz
sub
mov
add
loop
fwait
orl
shll
jns
int3
pusha
push
cmpsl
dec
pop
push
ss
jg
jp
xor
cmp
push
jmp
xor
inc
test
sub
fsubrs
fadds
or
add
lock
nop
mov
adc
sti
dec
xchg
pop
pop
bsf
dec
les
fidivrs
lock
xor
fst
in
add
lock
xchg
addl
ja
inc
movsb
cmpsl
xchg
das
fmuls
sti
les
mov
test
aaa
xor
sbb
decb
xor
cs
mov
mov
fs
repnz
mov
imul
sbb
bound
int
cmp
xor
jo
mov
loopne
out
mov
cli
sub
stc
aad
imul
out
pop
mov
pop
out
movsb
mov
jb
and
inc
addl
adc
or
cwtl
cmp
lret
mov
stos
push
mov
adc
add
adcl
out
xor
mov
push
jno
je
out
cmp
cs
enter
mov
mov
flds
or
hlt
mov
loop
sbb
inc
and
pusha
in
xchg
pop
stos
dec
xor
push
imul
push
sahf
insb
mov
iret
out
ja
xor
int
xchg
out
mov
aas
in
shll
sbb
bound
pop
dec
push
test
int
movsb
cmp
icebp
loop
scas
outsl
in
rolb
pop
mov
sub
je
shl
fwait
dec
mov
std
insl
jne
pop
push
pop
cmpsb
push
cmp
ret
xor
test
xor
xchg
insl
and
aas
in
mov
movsb
hlt
jp
dec
xor
test
mov
repnz
inc
sbb
xchg
lock
mov
pop
sbb
mov
jae
repz
in
fs
fsubrs
xchg
ss
adc
and
mov
sbb
xchg
mov
jl
dec
std
mov
mov
stos
out
iret
test
adc
adc
out
xchg
daa
outsb
lahf
mov
dec
pusha
mov
push
push
out
pop
and
stos
outsb
test
fiadds
test
and
sub
sbbb
sub
push
fldl
mov
sbb
repnz
nop
sbb
cmp
mov
push
pop
sub
into
add
inc
rcll
pop
xchg
pop
dec
sbb
scas
pusha
mov
jne
sub
int
push
cmpsb
test
repnz
push
data16
or
sbb
ljmp
sbb
movsb
jnp
insl
out
sbb
mov
adc
pop
lock
outsl
push
mov
jl
pop
bound
subb
imul
mov
mov
imul
mov
cmpxchg
aaa
rorl
test
dec
out
arpl
sub
pop
gs
push
sbb
out
xor
shrb
stc
arpl
cmpsl
movsb
icebp
sub
mov
insb
out
movsl
into
arpl
jns
mov
xchg
or
sub
ret
cltd
push
jmp
testl
pop
sub
ret
or
inc
mov
mov
cmp
or
dec
cli
push
xchg
sub
cmp
adc
mov
dec
push
dec
insb
adc
ljmp
push
out
fmuls
test
sbb
add
mov
stos
outsb
outsb
and
dec
fbstp
xchg
cmp
xlat
jno
insb
mov
jp
xchg
or
pusha
fstpl
jne
adc
jl
pop
mov
or
xor
in
inc
push
aam
fcoms
dec
sbb
push
xor
xchg
hlt
lods
out
mov
js
push
int
push
loopne
mov
sbb
aam
repnz
mov
and
rcr
imulb
imul
push
fildl
test
mov
movsl
out
inc
jg
fwait
push
cmp
dec
pusha
dec
ljmp
mov
adc
push
push
sbb
add
in
cwtl
enter
pop
mov
int
inc
push
iret
sahf
inc
fcmovbe
imul
ljmp
test
in
add
movsb
jl
dec
or
mov
hlt
cmpsl
clc
std
pop
xor
data16
lret
pop
and
inc
xor
pop
pop
out
ret
cmp
xor
mov
xchg
or
mov
dec
jns
testb
add
adc
xor
jo
jl
stc
push
decb
sub
mov
and
imul
xchg
fs
or
sbb
ljmp
adc
repz
sub
cmpsb
ret
leave
push
jge
enter
loope
arpl
xchg
and
inc
test
adc
jbe
inc
cwtl
add
mov
mov
shlb
mov
gs
repz
push
mov
sbb
xor
ret
mov
imul
mov
sub
aam
xchg
lods
arpl
mov
or
aam
jae
imul
xchg
mov
in
into
push
std
jo
shlb
sbb
or
pop
adc
leave
pop
lods
pushf
js
cwtl
xor
xor
addr16
sar
outsl
test
adc
scas
out
push
addr16
push
xchg
sbb
mov
jp
test
xchg
inc
xchg
arpl
lea
imul
pop
gs
inc
jnp
lods
ljmp
mov
xor
fs
dec
out
cmp
mov
xor
sbb
mov
xor
and
rcrb
pop
out
lea
leave
scas
push
or
in
stos
test
lock
mov
push
ds
stos
xor
lds
mov
sub
push
inc
mov
int3
push
pop
adc
repnz
sbb
mov
xchg
push
xor
jle
cli
add
outsb
shr
dec
pop
mov
icebp
mov
fs
xchg
fistps
test
or
scas
daa
imul
ljmp
push
lods
mov
cmp
jl
ja
mov
sbb
jecxz
pop
nop
xchg
jne
ja
mov
jns
int3
push
iret
lods
push
pop
jmp
gs
add
mov
sub
sahf
subl
mov
adc
addb
jl
sbb
xchg
pop
sbb
jp
fcmovnbe
pusha
test
sbb
fisttpl
mov
mov
bound
bnd
std
xchg
and
or
imul
jnp
sub
dec
rol
adc
xchg
sub
int
inc
icebp
pop
lods
and
xchg
push
orb
fwait
stc
inc
std
jg
mov
mov
jmp
repz
mov
or
mov
dec
jp
inc
sar
test
aaa
mov
scas
nop
imul
sbb
scas
sbb
sub
cmpsl
xlat
dec
jae
xor
xchg
sbb
iret
jns
adc
lahf
leave
push
fstpt
sbb
mov
dec
rolb
cmp
sbb
fadds
in
cmpsb
mov
stc
arpl
pop
pop
lods
in
ds
pop
pop
repnz
pop
or
adc
icebp
sbb
cmp
testl
loope
pop
xor
stos
scas
jle
or
dec
sub
jp
inc
call
cmpsb
push
stos
outsb
lods
xor
dec
pop
jno
sub
loopne
ja
sbb
xchg
inc
jmp
jle
and
lock
fbstp
cltd
fists
ds
dec
or
lret
pusha
dec
adc
add
lods
insb
mov
adc
cmpsb
or
iret
push
cmp
int
int
insl
push
iret
aaa
jbe
push
je
daa
cmp
mov
mov
int
test
loopne
out
mov
or
dec
jecxz
int
int3
mov
cmc
sbb
xchg
sub
lcall
popf
pop
rorb
rcrl
loope
jnp
push
rorl
push
jecxz
adc
cmpsb
daa
pop
xorb
sbb
xchg
lret
div
rorl
add
cmp
clc
sbb
push
inc
and
add
repz
aas
cmp
aam
test
push
adc
sub
imul
inc
mov
notl
ja
rcrb
pop
sti
mov
xor
adc
and
sbb
and
cmpsl
rcl
cmp
add
mov
lock
mov
movzbl
adc
and
das
hlt
add
or
cs
enter
inc
xor
mov
lahf
push
jae
mov
insl
or
test
dec
dec
ja
pop
mov
into
bound
lret
mov
mov
jno
rcl
push
es
cmc
and
imull
or
bound
adc
adc
cmp
push
jno
pop
imull
imul
orl
out
scas
cltd
xor
or
adc
mov
add
je
fnstsw
dec
and
sarb
mov
daa
ds
ljmp
mov
pop
in
jnp
add
dec
jmp
xchg
into
mov
push
add
pushf
pop
cwtl
push
mov
sbb
cmpsb
or
push
xor
imul
popa
cmpsb
call
cmpsl
nop
cmp
repnz
out
xchg
frstor
or
icebp
fnstenv
stos
mov
mov
push
or
test
mov
fdivl
or
mov
xchg
shll
pop
loopne
lds
outsl
cwtl
sahf
adc
gs
nop
loopne
nop
daa
fsubl
sub
fwait
daa
dec
push
cld
add
cmp
pop
inc
and
cmpsb
add
xchg
sbb
dec
push
jno
cmp
jne
inc
xchg
and
sub
orb
jb
fs
fadds
test
js
pop
adc
pusha
fisttpl
xor
fists
mov
je
pusha
push
scas
and
stc
and
cld
in
outsl
mov
in
mov
out
test
pop
lret
mov
scas
aas
xor
lea
or
cmp
into
fistps
xlat
xchg
add
xlat
xchg
mov
xchg
mov
rorl
into
jb,pt
outsb
mov
aad
fisttpl
repz
in
sbb
nop
mov
xchg
fnstsw
fsubrl
sub
lahf
aad
mov
std
adc
fistpll
fbld
inc
xlat
pop
or
push
addb
fldt
lret
movsb
push
es
dec
push
mov
test
into
push
jecxz
lahf
add
xor
mov
cmc
push
aaa
jmp
xor
sarl
cmpsb
add
jmp
xor
addr16
popf
jmp
sbb
pop
filds
sub
repz
clc
xchg
fidivl
iret
mov
xor
stos
mov
mov
adc
bound
pop
in
pop
call
add
fstpl
out
or
popf
xchg
cli
divb
sbb
stc
jno
rcrl
int
cwtl
mov
mov
inc
cmp
test
cwtl
push
out
mov
xor
xchg
xor
bound
cmp
notl
sbb
sub
ja
subb
scas
mov
pop
adc
out
jg
jge
xchg
sbb
push
adc
rol
arpl
je
sub
mov
and
mov
rcll
adc
xchg
out
inc
loope
outsl
div
mov
shrb
push
or
out
fnstenv
hlt
fdivp
aad
push
or
das
outsl
mov
or
js,pt
enter
and
add
jmp
lcall
dec
out
push
mov
test
fsubs
imul
mov
and
popl
arpl
out
test
mov
js
and
popa
pop
mov
sbb
mov
jmp
or
xor
push
mov
jp
cmc
js
hlt
lcall
add
imul
std
adc
test
inc
inc
xlat
push
movsl
xor
js
in
xor
loop
push
lods
int3
cmp
or
jnp
hlt
std
push
push
das
fnstsw
pop
cmc
ficoml
xchg
leave
fmuls
mov
cmp
sarl
jo
cmp
push
popf
pop
adc
ss
fs
and
lcall
dec
cmp
shufps
mov
dec
xchg
sbb
in
adc
jno
sarb
sbb
mov
xchg
sub
and
aam
sarb
pop
xor
out
pop
repnz
test
mov
fsts
out
pushf
pop
lock
fidivl
nop
and
stos
or
sub
test
pushw
sbb
outsb
sbb
cmp
push
xor
sahf
pop
mov
movsb
fcmove
cmp
std
dec
out
and
mov
cmp
xor
outsl
inc
cltd
fcoms
clc
sbb
outsb
mov
pop
mov
dec
lret
data16
pop
rcrl
jae
vcvttsd2si
shl
jne
mov
adc
push
inc
loope
adc
and
ljmp
sub
mov
jbe
fcmove
ljmp
imul
add
mov
int
lods
pop
adcb
sbb
pop
insb
ret
sbb
add
into
adc
cld
arpl
inc
cmc
cld
popf
jb
jno
jle
cs
outsb
cmp
or
sti
out
in
loopne
sar
xchg
xor
std
rcll
jnp
pop
imul
ficompl
pop
inc
inc
xorl
sti
xchg
sarl
jns
add
and
mov
cmpb
xor
mov
sbb
incl
imul
aas
add
cmpsl
or
out
scas
jb
jnp
in
lods
test
mov
push
dec
imul
fcoml
xchg
push
inc
jmp
sarb
xor
pop
imul
int
jns
rolb
pop
push
sub
fs
cmp
xchg
jle
in
add
mov
pop
hlt
ljmp
scas
cltd
jmp
push
addr16
and
lock
jbe
xchg
dec
mov
mov
cmpsb
fstps
and
fs
fwait
stc
jle
fistps
es
scas
and
jno
dec
xor
sub
or
add
bound
aas
aad
sbb
push
mov
test
pop
xchg
out
adc
adc
cmp
inc
imul
inc
or
or
xor
dec
or
sbb
mov
test
mov
pop
pop
cmp
push
mov
lea
add
lret
push
loop
int
push
xchg
adc
ss
push
dec
mov
cmp
insl
pusha
push
xor
movsb
or
mov
or
int
insl
xchg
mov
lret
adc
mov
or
fisubl
sbb
fists
sar
push
or
sbb
sub
mov
popa
out
outsl
test
dec
loop
xlat
fcompl
lret
cmpsb
ret
bound
mov
cmp
push
fxch
verw
ret
lret
jo
mov
xchg
push
jecxz
and
xchg
fdivl
imul
sbb
je
cs
sub
gs
xorb
fstps
filds
out
sub
mov
addr16
int3
jae
aam
xor
mov
dec
mov
arpl
js
mov
popa
out
sub
xlat
mov
dec
fs
jno
add
das
pusha
mov
sarl
test
in
enter
and
inc
sub
repnz
push
mov
addl
push
outsl
push
mov
icebp
and
mov
cmp
ret
and
mov
xchg
sbb
mov
mov
notl
pusha
jne
aam
dec
mov
insl
cmp
mov
push
sub
leave
outsl
xorl
inc
call
scas
inc
loop
mov
jmp
lea
inc
pop
sub
fstps
outsl
outsb
cltd
mov
hlt
stos
xchg
outsb
sub
les
mov
inc
sub
out
cli
push
cltd
mov
mov
lcall
test
dec
pop
ret
pop
add
inc
pop
cmp
xchg
ret
aad
pop
icebp
cmp
cmp
fdivrs
gs
push
push
mov
sub
sub
push
inc
push
pop
xchg
jmp
dec
mov
movsb
push
call
xchg
mov
aaa
mov
gs
xlat
and
pushf
dec
and
add
movl
xor
dec
mov
pusha
mov
dec
jmp
sub
ja
adc
fcomi
and
jns
lods
cmpsl
cmc
mov
jle
pop
les
sbb
das
ficompl
je
push
pop
out
in
and
jb
flds
and
push
dec
fmuls
dec
repnz
mov
xor
mov
andb
jae
xor
mov
mov
pop
mov
or
add
int
lock
jbe
lcall
lahf
or
insb
fwait
mov
pusha
sub
mov
xor
push
jmp
sbb
and
fwait
mov
dec
xor
js
sbb
pop
mov
jo
jae
into
xor
and
lahf
std
lahf
jmp
clc
jo
or
insb
mov
shrl
mov
xor
adc
or
stos
test
mov
push
sub
or
and
push
insb
leave
jmp
xor
xchg
cmp
es
loop
mov
pop
push
mov
stc
mov
mov
in
lock
sbb
adc
mov
icebp
jne
jl
or
mov
ret
sub
imul
ja
lcallw
mov
mov
xchg
push
push
mov
outsl
or
and
and
bound
xor
xchg
add
pushf
fldl
lea
cmp
inc
push
cmpsb
jns
filds
js
inc
lods
sbb
cmp
psrlw
lods
and
mov
out
jae
jns
movsl
mov
mov
cmp
pop
addl
lret
jbe
stc
out
adc
sbb
imul
outsl
inc
xchg
aam
add
and
pop
sbb
sbb
sbb
int3
mov
mov
adc
in
adc
mov
mov
ss
sbbb
jp
dec
cmp
adc
es
mov
xor
enter
subl
sbb
mov
in
jmp
xchg
xor
xchg
jns
inc
dec
mov
mov
outsb
inc
xor
push
jg
dec
ret
adc
pushf
jp
sti
aam
and
xor
jecxz
jge
and
adc
cltd
loop
xlat
mov
sbb
stos
in
push
add
insb
adc
ss
and
push
mov
outsb
call
cli
push
push
jl
push
hlt
lods
inc
in
jl
adc
outsl
jle
scas
mov
jns
xchg
cmc
leave
dec
aas
and
pop
inc
rol
and
insl
sarl
in
xchg
inc
das
in
lds
add
outsb
jle
nop
add
daa
jae
pusha
and
jg
sbb
dec
adc
movsb
xchg
fstp
jg
test
clc
cld
in
js
pop
inc
push
and
jb
and
push
ret
xor
push
icebp
add
mov
mov
popl
and
insb
stos
mov
shrb
dec
xchg
jp
ret
nop
mov
pop
mov
xor
lret
pop
ret
repnz
and
jno
jecxz
stc
jle
dec
cmp
arpl
or
scas
jl
add
and
xor
add
fimuls
push
pop
in
xchg
rcrb
addb
daa
adc
out
or
push
mov
xchg
out
cld
mov
cmp
push
push
sub
fstps
mov
push
and
push
push
rol
popf
add
adc
dec
mov
sub
stc
sub
orb
push
and
stc
jbe
mov
mov
pusha
xor
and
cmp
adc
std
xlat
adc
roll
scas
adc
inc
outsb
inc
cmc
stc
adc
mov
int3
insl
push
aad
sub
bswap
xorl
shlb
loopew
cmpw
mov
andl
ds
sbbb
mov
in
aaa
push
sti
in
fnstcw
out
xchg
push
in
scas
aas
sahf
loope
das
pop
xlat
or
test
movsb
push
fdivr
fisttpll
mov
sar
clc
faddl
mov
sub
jb
out
fcomps
pop
sbb
mov
xchg
stos
adc
mov
xchg
call
push
cli
and
and
insb
adc
aas
in
movb
ja
lods
inc
rorl
mov
cmp
test
pop
rclb
mov
stc
mov
dec
dec
mov
push
mov
insl
cmp
js
mov
jb
or
je
andl
mov
cmp
and
pop
push
aam
and
mov
aam
fnsave
sub
lcall
call
dec
enter
jp
adc
jecxz
addr16
jge
test
xchg
jp
xchg
adc
lds
jg
rclb
incl
addl
jmp
jnp
adc
test
and
adc
sub
and
mov
fstl
add
push
incb
adc
pop
repz
mov
mov
test
pusha
out
xlat
ss
sbb
mov
xchg
lcall
jp
fnsave
sub
adc
dec
mov
pop
inc
cmp
movsb
sahf
adc
shr
aam
into
fwait
push
inc
xchg
add
pop
scas
pop
dec
adc
fcomps
lahf
inc
cmpsb
inc
punpckhwd
mov
aaa
lods
push
movb
lret
lahf
mov
pop
cli
sub
pop
in
movsl
mov
movsl
neg
sub
ds
shlb
push
mov
jae
mov
movsb
push
adc
mov
rcll
pop
movsl
jl
pop
or
add
shl
cmp
sbb
xchg
jo
test
mov
pop
test
lahf
addr16
flds
mov
in
fldt
int
ret
int3
test
fisubl
mov
fildl
dec
cmpsb
cmovg
xor
or
pop
sysenter
push
fistps
push
push
mov
pop
xchg
mov
stos
out
icebp
mov
pop
scas
stos
inc
xchg
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
and
test
sbb
outsb
and
xchg
jmp
lahf
sbb
outsb
popa
sub
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jbe
ss
lods
mov
mov
in
or
cmp
repz
xchg
stc
cmovl
mov
ja
mov
push
inc
dec
adcb
enter
in
inc
add
add
xchg
pop
jecxz
gs
mov
mov
push
mov
or
lds
pop
repz
inc
inc
cli
cmp
and
cmp
sbb
lcall
jo
push
adcb
psllw
pop
movsb
out
push
push
push
mov
xchg
pop
lds
and
rcrb
fsubr
cli
popa
sub
xchg
aam
mov
adc
xchg
in
sub
ja
repz
inc
or
orl
imul
orl
imul
orl
daa
cmpsb
ja
sbb
outsb
shrl
xor
adc
outsb
movsl
sub
cmp
sbb
cmp
icebp
mov
sub
jmp
daa
sbb
outsb
and
jmp
and
xchg
and
push
xchg
and
and
test
xor
sti
cmp
sbb
outsb
and
jmp
aaa
sbb
outsb
and
jmp
daa
adc
fmuls
mov
daa
imul
outsb
and
jmp
daa
sbb
bound
xor
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
pop
xor
sbb
push
sub
jmp
ja
les
and
jmp
daa
sbb
cmp
imul
inc
inc
icebp
mov
sub
cmpl
icebp
mov
sub
jmp
pop
sbb
add
imul
subl
imul
orl
imul
orl
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
outsb
and
jmp
daa
sbb
lds
imul
andl
pop
stc
adc
ret
lock
jg
icebp
pop
or
orb
mov
jnp
and
cld
lds
and
mov
sti
es
shr
sahf
xchg
push
add
add
lea
sub
or
aaa
fnstcw
jle
inc
xchg
xchg
std
sbb
xchg
jnp
mov
iret
sbb
call
stc
inc
lret
loope
push
outsl
psubq
nop
filds
pop
xor
pop
add
ss
leave
ret
jg
dec
dec
mov
sbb
inc
stos
loope
aas
xchg
sub
sub
push
insb
std
int3
pushf
ss
mov
lds
pop
aas
cmp
aam
sub
adc
in
mov
data16
punpckhwd
pop
mov
xchg
add
out
int3
mov
nop
into
sbb
clc
cmp
sbb
divb
outsb
into
and
inc
daa
sub
outsl
into
pop
jecxz
mov
xor
js
xor
dec
mov
xlat
mov
mov
hlt
shl
test
mov
jmp
clc
mov
add
sbb
fstpt
pop
fldenv
add
jae
jae
popa
insl
cmp
add
cmp
jne
sarl
push
push
imul
cld
cmp
push
lret
jp
test
fistpl
enter
mov
dec
mov
push
mov
adc
xor
or
stc
add
mov
pusha
push
cmp
jne
pop
fnsave
hlt
mov
ret
push
xor
jns
push
bsf
mov
xchg
sbb
sbb
mov
mull
bound
fst
int
or
jl
mull
clc
inc
mov
or
cmc
data16
daa
push
imul
and
mov
push
cmp
insl
mov
clc
sub
addr16
push
inc
cmp
ret
pop
ret
push
mov
aas
jb
addr16
mov
cmp
rcrb
add
dec
jno
xchg
test
stos
ds
clc
pop
frstor
leave
stc
inc
push
or
push
sub
in
lods
cmpsl
cs
dec
push
insb
sbb
mov
out
iret
push
stos
les
out
fstpt
aas
mov
sub
push
cmpsl
lret
cwtl
pop
pop
cmpsl
std
cmp
xchg
leave
inc
hlt
mov
fs
jmp
out
lods
pop
fdivrl
jae
into
rcll
enter
aad
cltd
je
rolb
push
cld
mov
mov
movsl
adc
cmp
xchg
sti
inc
push
sub
jns
rcll
das
and
jmp
fldl
inc
dec
jecxz
rclb
jle
xchg
imul
aaa
pop
jle
mov
adc
sahf
call
lahf
mov
daa
and
mov
fs
imul
mov
shlb
outsl
into
jo
repz
shll
fucomi
stc
dec
mov
mov
and
cmp
mov
xchg
das
fwait
into
mov
outsl
cmp
jmp
mov
mov
dec
ss
iret
xchg
std
sbb
cld
push
in
mov
test
mov
gs
cmpsl
cmp
gs
jle
ss
push
jne
movsb
enter
cmp
cmc
mov
push
out
cmp
add
push
stos
xchg
cwtl
mov
scas
out
scas
test
pushf
out
inc
lods
bound
push
cmpsl
in
pop
lret
push
ja
lods
mov
xorl
or
mov
and
pop
cmp
pusha
lcall
lods
sti
andnps
and
in
jae
imul
sub
js
aas
jno
pop
out
adc
andnps
outsl
dec
inc
pop
push
cmpsl
xor
into
xchg
pusha
sahf
lods
pushw
jo
jg
xor
movsb
push
mov
xchg
xchg
pop
in
jns
push
mov
fcoml
jns
loope
push
xchg
mov
and
cltd
and
loop
bound
mov
fcos
pop
cmp
hlt
es
jle
adc
clc
pop
dec
sar
push
fadd
int3
sbb
jae
sbb
lea
mov
into
scas
sbb
jle
pop
mov
pop
test
push
cmp
lock
imul
mov
ss
add
inc
rolb
lods
sbb
in
pop
adc
dec
mov
dec
mov
loope
test
mov
xchg
lock
jns
and
sbb
xchg
lock
repz
mov
test
movsb
sbb
cmp
pop
psubw
inc
and
xor
cmc
and
push
inc
pusha
xor
fistl
mov
mov
sub
cmp
or
insb
jbe
inc
or
insb
gs
addb
in
add
xor
pushf
dec
mov
and
inc
dec
mov
movsb
pop
inc
repnz
dec
sbb
scas
stos
fwait
mov
mov
arpl
add
popf
sbb
or
scas
pusha
std
pop
out
jg
notb
and
int
cmp
cmp
cmp
loopne
mov
jo
cmp
inc
cmpsb
or
out
rclb
cltd
jle
add
js
rorb
or
bound
repnz
sub
movsb
push
pop
test
pop
outsl
or
fmuls
cli
mov
dec
ret
popa
push
add
cmp
imul
mov
mov
sbb
sbb
add
xor
mov
push
xor
inc
xchg
mov
xchg
data16
stos
stos
pop
or
mov
insb
mov
cmp
xor
pop
xchg
lock
mov
add
gs
test
daa
pop
xchg
sbb
scas
add
insl
jns
sub
sbb
cmp
adc
cmp
in
push
icebp
jne
mov
push
iret
sbb
mov
sub
scas
ret
rcll
fisubs
aad
mov
add
mov
sub
dec
call
and
or
inc
clc
jecxz
mov
xchg
repz
sbb
adc
cli
test
inc
jle
add
mov
add
push
pmaxsw
sti
inc
roll
lcall
cmp
mov
in
cmp
ficoms
jns
add
mov
jb
lea
and
mov
es
mov
inc
dec
or
push
repz
bnd
aad
invd
loop
pop
xchg
js
js
pop
adc
and
mov
pop
test
adc
imul
rcr
push
lcall
icebp
dec
add
cli
xchg
aaa
adc
pop
pop
xor
cmp
pop
leave
or
sub
je
adc
xchg
lock
insl
add
and
stc
ss
imul
sub
loope
dec
mov
mov
sub
cmc
xchg
call
cmp
xor
push
sub
and
inc
out
fwait
pushf
cmp
xchg
sahf
dec
push
fcmovnu
movsb
push
call
mov
roll
orb
loopne
adc
sbb
jne
inc
repz
out
jl
movsl
inc
cmp
jnp
push
jmp
daa
pop
stos
iret
arpl
cs
cmpsl
jno
adc
inc
call
jno
test
mov
sahf
movsb
adc
xchg
jmp
mov
outsb
pop
jns
in
xchg
loopne,pt
mov
aam
adc
daa
mov
pop
cmpsl
push
xor
fwait
inc
pop
push
inc
mov
and
lods
push
sar
lcall
push
jo,pn
jmp
xchg
mov
xchg
push
and
in
lock
pop
sub
ret
xor
test
xor
fs
sahf
push
jb
in
inc
mov
cld
dec
push
dec
stos
out
xor
push
shrl
push
cld
std
jle
or
fadds
pop
mov
inc
dec
fs
clc
and
sahf
fcoms
addb
out
sahf
mov
push
clc
mov
lods
and
mov
daa
jecxz
leave
add
cmp
jo
leave
add
into
xor
or
inc
icebp
flds
sub
fucomp
push
push
nop
insb
ljmp
jns
jle
inc
mov
test
shll
hlt
lods
cmp
push
loop
es
jecxz
xchg
scas
lahf
xorl
pop
mov
hlt
cmp
xor
fdivs
lcall
dec
cld
mov
mov
inc
out
xchg
fsub
js
inc
daa
aad
push
jno
out
lret
xchg
and
movsb
loop
in
jecxz
rcll
in
clc
fsts
enter
mov
cmp
cmp
cmp
xchg
xchg
cmp
lods
jb
mov
jg
out
push
cmp
or
or
adc
ret
pop
mov
mov
notb
jl
movsb
or
mov
sarb
adc
int
pop
adc
or
gs
repz
push
orl
and
add
test
mov
adc
lret
push
lret
jmp
xor
cwtl
sub
mov
sti
clc
mov
add
xor
in
iret
fisubrs
mov
xsavec
mov
mov
cmp
jmp
jae
insl
sbb
xor
or
push
xchg
ja
pushf
cmc
pushf
or
mov
hlt
mov
jge
push
jnp
push
insl
addr16
jp
pop
cmp
loop
lock
pusha
sub
cmp
out
jl
jle
gs
push
je
xchg
or
data16
push
lods
push
jno
cltd
mov
int3
hlt
adc
outsb
cmpsb
popf
jp
mov
dec
pop
stos
mov
aaa
mov
and
insb
sbb
inc
cmp
add
fwait
and
inc
sub
lcall
mov
cld
sub
data16
rclb
and
mov
jmp
fidivl
hlt
test
loope
pop
mov
mov
call
mov
test
into
xchg
mov
mov
mov
movb
test
push
xor
nop
ljmp
adc
mov
insl
and
or
les
push
sbb
jle
fcoms
and
fadd
jle
lahf
or
and
dec
lock
lret
mov
gs
dec
sbb
inc
loope
pop
aas
mov
fs
lcall
dec
js
cld
fcomps
add
int3
jo
lcall
imul
aas
nop
stos
int3
loop
dec
test
sub
cli
dec
pop
ljmp
daa
and
and
push
cmp
pop
aad
jmp
notb
inc
sbb
mov
push
jmp
push
loopne
std
in
xor
call
add
loop
pop
add
xlat
cmpsl
sbb
aaa
stos
lcall
shlb
test
xchg
in
insl
divb
jb
popa
sbb
pushf
lods
mov
lcall
in
dec
xchg
mov
dec
sub
hlt
and
ja
cwtl
lcall
pop
insl
jnp
mov
ljmp
fnstenv
xor
xor
jg,pt
sub
cs
ljmp
xchg
stos
lcall
mov
ljmp
or
mov
inc
dec
jle
dec
fnsave
and
push
in
pop
jmp
xor
lods
scas
jle
fstl
mov
shll
mov
cmc
pop
sub
cmpsb
mov
cld
lock
push
fcmovnbe
cmc
adc
inc
pop
or
movsl
mov
lahf
and
outsl
popa
into
mov
pop
inc
loop
mov
pusha
xchg
jno
or
fwait
imul
sti
int
frstor
jne
mov
cld
bound
adc
pop
lahf
xlat
dec
es
pop
or
sarl
cmp
jns
add
in
mov
loope
and
inc
push
push
int
popf
fdivrl
cs
push
mov
je
mov
insl
lods
mov
dec
pusha
out
or
cld
cmp
dec
into
pop
dec
outsl
add
lcall
push
fcmove
das
notl
sbb
mov
fsubrs
add
sbb
xchg
adc
or
shrb
push
lret
adc
enter
add
stc
sbb
adcl
les
addb
into
pop
sub
add
cmpsl
push
gs
cmc
push
clc
mov
jne
lret
cmp
dec
test
aaa
cmp
mov
rorl
mov
jle
push
mov
shll
and
es
inc
gs
xchg
cmp
adc
inc
cmpsb
jge
sub
pop
aas
inc
sbb
mov
mov
fdiv
mov
arpl
cmp
cmpsl
jo
push
ror
mov
sahf
mov
shll
mov
push
adc
lret
lahf
xlat
rcll
pop
mov
and
cmp
cmp
sub
lret
leave
rcrl
fwait
xchg
les
jl
nop
lea
enter
mov
loopne
test
pop
mov
test
cld
into
insb
imul
in
push
sti
xchg
in
movb
ds
pop
rcrb
icebp
jmp
les
leave
adcl
push
add
sbb
and
sub
inc
out
push
jp
lcall
sbbb
sub
and
popf
fidivrs
dec
dec
adc
push
data16
adcb
cld
pusha
fiaddl
mov
fistl
addr16
loope
lret
add
and
push
stc
call
clc
sub
fnstcw
sbb
stos
inc
pop
dec
out
sbb
stos
fldcw
xor
jecxz
mov
add
leave
cld
scas
cli
fisubl
cmp
test
push
adc
inc
xchg
insb
imul
pop
pop
lret
insb
aad
jno
dec
adc
inc
dec
or
cwtl
adc
cmp
test
arpl
lock
in
or
mov
dec
add
pop
mov
fdivl
test
add
xor
lock
xor
push
sub
insb
push
mov
imul
es
sub
and
add
fmulp
jecxz
clc
xchg
scas
push
js
cwtl
push
fcmove
into
xchg
cwtl
into
clc
fsubrl
enter
inc
bound
jl
imul
adc
cmp
les
cltd
mov
mov
adc
mov
insb
mov
adc
out
call
inc
cli
jecxz
push
xor
xor
or
imul
xchg
fidivs
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
