sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
add
add
xlat
pop
test
adc
cwtl
lds
push
mov
mov
jmp
add
pusha
mov
loop
xchg
mov
pop
test
mov
icebp
movsb
and
cmp
lods
shll
test
mov
ds
push
iret
jo
aad
adc
adcl
sbb
and
test
mov
pop
fsubr
repz
mov
test
repz
aas
outsb
hlt
outsb
pop
repnz
mov
cli
lret
push
ja
cwtl
aam
js
xchg
and
sub
mov
loop
mov
shl
push
and
mov
inc
faddl
adc
adc
pop
xor
fld1
inc
iret
sbb
jmp
in
push
inc
inc
mov
adc
and
mov
out
fdivrl
es
lcall
fs
iret
and
mov
cmpsl
pop
xlat
add
out
push
arpl
jmp
bound
mov
adc
call
mov
pop
jnp
push
inc
sub
xchg
gs
rol
adc
loop
fwait
test
test
loope
xchg
jo
ss
es
ficomps
xor
xchg
mov
and
dec
jg
fcompl
testb
xor
adc
pusha
mov
jo
push
andl
fucomip
jecxz
pop
popf
mov
pushl
dec
or
inc
repnz
mov
jno
dec
inc
cmp
jp
out
cmp
jle
push
outsl
movsb
inc
scas
pop
fwait
js
iret
js
mov
mov
pushf
add
leave
negb
mov
cmp
add
mov
adc
es
mov
add
cmpsb
xlat
adc
cmp
rolb
adc
xchg
ficoms
push
mov
pop
add
ja
gs
xchg
jnp
out
mov
mov
push
or
andl
mov
fistpl
push
aaa
sub
jb
mov
in
xchg
cmp
add
orl
cmpsl
xlat
xchg
jo
call
jns
test
add
mov
inc
add
incb
test
enter
mov
test
rcr
movsl
ljmp
push
pusha
pop
xchg
xlat
mov
jle
imul
and
xor
jecxz
push
jnp
or
jmp
sub
shll
mov
icebp
test
xor
cwtl
outsb
aad
fsubrl
inc
pushl
sbb
add
xchg
in
sahf
sub
in
mov
pop
out
jle
sub
sbb
mov
pushf
xor
ret
jns
push
mov
out
mov
not
sub
jbe
push
sub
mov
mulb
ja
xor
jnp
sub
mov
ficoms
pop
push
addl
shrl
fldl
stos
mov
out
movsb
push
fucomi
int3
mov
movl
sar
test
mov
sbb
xor
inc
mov
sbb
sti
cmp
add
das
or
fldl
xor
insb
rcl
xchg
add
or
sarl
mov
pop
jmp
xchg
push
jbe
pop
pop
push
xchg
mov
retw
xchg
xor
subl
aas
mov
adc
adc
decb
dec
loope
int3
push
out
outsb
loope
jb
jecxz
sbb
cmc
xchg
rorb
scas
cmp
mov
inc
sbb
push
outsb
push
es
xlat
jbe
incl
mov
in
inc
loope
daa
mov
bound
in
jne
punpcklwd
pop
mov
jnp
rcrl
pushf
push
add
cwtl
dec
mov
inc
adc
out
pop
pop
scas
xchg
mov
mov
js
dec
xchg
sub
in
sbb
push
mov
push
aad
mov
cmp
and
dec
mov
les
mov
pusha
or
shll
in
loope
mov
xchg
pop
arpl
shll
cmp
test
sbb
cli
pop
roll
and
lock
sub
lock
sahf
mov
jmp
mov
sub
cltd
sahf
mov
jo
loop
out
xor
adcl
xchg
mov
outsb
or
shlb
clc
orb
push
inc
inc
js
xchg
lods
xorps
mov
and
push
pop
es
mov
int3
cmc
sbb
jns
inc
dec
jb
insb
jl
das
in
clc
cmpsl
test
lret
into
shll
push
fadd
sbb
sbb
cli
imul
jp
mov
div
in
pop
mov
in
mov
mov
fwait
arpl
mov
add
adc
mov
mov
lcall
jo
xor
stos
adc
push
fdivrl
scas
xchg
pop
push
out
adc
repnz
sbbl
fisttps
hlt
dec
sub
test
movsl
cmp
jg
bound
mov
adc
or
cmpsl
cmpsl
movsl
fs
roll
jecxz
jno
jp
je
mov
test
movl
addl
jbe
mov
lds
xlat
dec
push
cmp
push
push
dec
sub
int
aaa
insl
pop
aas
leave
xchg
push
jmp
stos
fsubl
aaa
xorb
adc
cld
jmp
insb
xchg
cld
adcb
clc
ds
jg
add
cmpsb
mov
dec
loop
inc
shlb
rcrl
ret
mov
testl
pop
adc
xor
outsb
mov
shrb
pop
xchg
lcall
push
ret
mov
push
sbb
ret
pop
ja
outsb
dec
lods
inc
daa
test
cmp
xor
into
imul
mov
cld
jne
adc
int3
in
push
fildll
roll
adc
std
addr16
mov
pushf
and
adc
xchg
and
negl
jns
out
sbb
movsb
dec
sbb
and
out
mov
notb
or
sub
xchg
mov
es
outsb
pcmpeqb
daa
lds
inc
ret
ss
jnp
mov
loop
ds
cmp
addr16
out
jo
jp
aad
inc
cli
cli
mull
cmp
hlt
cmpsl
adc
pop
sbb
pusha
xor
cld
shlb
das
cmp
test
call
movsb
xchg
popf
iret
xchg
push
es
decl
xor
xchg
testb
pop
mov
pop
xchg
sub
rclb
mov
stos
enter
insl
mov
scas
xor
or
jnp
fdivrp
mov
lods
add
add
jg
lahf
sub
insl
rorl
jmp
push
in
push
test
xchg
fldl
fcoms
mov
insb
lcall
call
mov
mov
aad
gs
dec
sbb
std
push
and
andb
lods
mov
subb
cmp
ss
repnz
xchg
mov
push
ja
insl
pop
adc
inc
add
mov
inc
mov
sbb
cmp
cmc
adc
push
mov
lcall
sub
movsl
xchg
lahf
dec
jmp
int
pop
sub
lods
insb
int3
addb
aad
pushf
mov
sub
into
push
or
mov
lret
pusha
cmc
pop
or
aam
adc
stos
insl
and
mov
or
cmp
mov
scas
arpl
dec
sub
mov
pop
faddp
inc
cmc
mov
inc
in
lods
fdivl
fcmovne
dec
testl
cmpsb
popa
test
sbbl
jg
fisubl
testl
jbe
mov
push
lods
pop
nop
in
jge
mov
mov
lret
push
test
dec
mov
mov
add
xchg
inc
btr
xor
repnz
jnp
or
mov
jbe
stos
jno
loop
pop
push
push
adc
test
mov
fs
or
mov
mov
inc
jge
push
cmc
dec
push
mov
sahf
daa
fdivrp
fimull
mov
roll
or
xor
aaa
sub
into
les
pusha
or
call
sub
sbbl
lock
mov
test
test
test
adc
daa
sbb
and
xor
out
pop
fwait
xchg
xor
mov
dec
ds
inc
and
repz
sbb
icebp
in
adc
pushf
mov
sbb
cld
in
pop
sbbb
lcall
call
dec
movsb
les
and
outsb
jns
mov
push
imul
adc
push
jecxz
sbb
insb
jecxz
mov
faddl
xchg
add
and
mov
in
mov
mov
fsubrl
in
in
repz
ret
or
repz
scas
test
popf
sbb
push
pop
fs
loop
and
movsb
cmp
mov
ret
xor
jno
shl
into
sbb
nop
mov
stos
or
pop
ret
idiv
lahf
insb
test
lock
cmp
cmc
lret
push
daa
or
pushf
into
lds
daa
lods
int3
cmp
mov
push
in
pop
shll
cmpl
in
ret
sbb
daa
mov
adc
les
mov
push
rorb
icebp
pop
mov
sbb
add
cwtl
leave
pop
mov
and
into
arpl
push
addr16
test
fsubrl
push
int
nop
add
push
pop
fdivl
push
pop
insl
jbe
in
jae
int
pop
gs
aaa
xor
enter
cld
stc
fwait
ret
adc
push
out
nop
divl
push
jmp
mov
rcr
mov
sbb
sar
ds
cmp
hlt
testl
xor
pop
js
test
out
jno
aad
jbe
xchg
mov
sbb
clc
inc
mov
scas
lea
push
pop
push
stc
cmpsl
shlb
insb
loop
mov
cmp
push
sbb
sbb
adc
incb
in
and
jle
mov
daa
loope
std
jae
cmp
pop
sbb
hlt
mov
sbb
dec
fbld
push
in
inc
sti
sbb
daa
jae
jo
enter
sbb
lods
jno
sti
dec
into
aaa
jne
sbb
xchg
je
icebp
mov
ret
push
pop
test
call
pop
xchg
cmc
push
cwtl
popf
out
or
or
hlt
test
jns
and
enter
jb
push
sbb
inc
jecxz,pn
addr16
fbstp
pop
dec
dec
mov
js
mov
xor
in
xchg
ljmp
mov
fcomps
in
in
icebp
add
divl
pop
daa
jecxz
xchg
inc
push
lahf
in
movsb
in
push
cmp
sarl
pushf
in
jb
push
js
mov
xchg
mov
inc
lods
add
dec
stos
mov
fisttpl
xor
mov
cld
cld
clc
movsb
cltd
sbb
adc
ja
cmp
push
cmp
lods
xchg
int
rep
adc
ret
push
idivb
mov
iret
test
pop
adc
add
loop
dec
dec
mov
add
sub
xor
lret
mov
cmp
jb
xor
ret
pop
xchg
in
mov
orb
and
xchg
mov
mov
xchg
xlat
inc
jl
out
pop
imul
sbb
add
mov
dec
fsubrs
push
lret
xor
jb
cmp
mov
cmp
sbb
mov
sbb
test
sbb
mov
adc
lods
add
cmp
xchg
xor
cvtps2pi
and
and
mov
mov
loop
push
ret
xchg
pop
pop
dec
dec
add
pop
sbb
sti
push
xor
lods
dec
jecxz
mov
and
mov
hlt
add
or
push
in
xor
push
js
and
jb
cmp
add
push
mov
adc
xchg
mov
xchg
loop
movsb
cmpsl
push
mov
das
sbb
xor
add
dec
outsb
xor
sbb
push
call
adc
sbb
shlb
loopne
add
stc
inc
cmpsb
xchg
add
sarb
add
jecxz
popf
push
jmp
scas
sahf
lcall
stc
les
inc
jmp
pop
inc
lcall
mov
mov
mov
dec
push
sub
int3
mov
sbb
in
adc
or
xchg
xor
and
notrack
xorl
jle,pt
xor
sbb
call
hlt
repnz
movsl
mov
mov
aas
out
repz
pop
scas
add
xchg
test
jnp
imul
add
movsb
add
ja
in
or
adc
out
mov
add
lret
mov
rclb
fld
insl
xor
mov
mov
push
or
pop
push
rclb
mov
sahf
mov
lcall
or
adcl
cmc
cmpsb
sub
adcl
rcll
mov
inc
fildl
adc
cmp
push
mov
xchg
or
leave
cli
rol
sbb
sti
mov
push
pop
outsl
popa
cmp
pop
rol
lret
xor
sub
sarl
cltd
jecxz
xchg
jp
not
lret
cmp
sub
jnp
ds
lods
or
out
xchg
sbb
xchg
in
push
repz
jle
js
mov
pusha
rorb
mov
xor
inc
cmpsl
scas
jne
aad
stos
sub
in
aam
in
test
jne
frstor
add
stos
xchg
js
xchg
mov
pop
xchg
push
ja
popa
mov
movl
mov
sbb
jmp
add
scas
shlb
out
imul
pop
test
dec
popl
xchg
jl
add
popf
fs
sub
clc
and
mov
test
jb
imul
mov
pushf
jmp
mov
in
es
push
mov
test
xor
mov
or
scas
ja
inc
xchg
jno
cmp
push
mov
mov
scas
imul
xor
or
xchg
cld
push
pop
jecxz
sub
jno
mov
hlt
cs
xchg
rorb
adc
cmpsb
std
repnz
lret
imul
xor
scas
cli
es
lret
loope
inc
jge
sbb
ret
mov
inc
fstl
jle
and
jl
cmc
mov
add
fs
mov
dec
xchg
out
mov
hlt
push
enter
data16
pop
xor
xchg
es
out
fidivl
cmp
or
push
fists
cli
ror
shr
stos
cmp
frstor
mov
or
pop
pop
call
shr
mov
push
xchg
lods
jae
inc
sbb
cld
mov
inc
cmpsl
dec
gs
xor
dec
push
scas
dec
shl
mov
or
mov
cmpsb
adc
imul
in
sub
mov
lret
fisttpl
sbb
and
mov
in
push
lock
mov
stc
loop
sbb
adc
testl
pop
cmpsb
add
pop
xchg
push
cli
imul
sarl
sub
movsl
cmc
mov
test
cltd
dec
scas
ret
ljmp
lcall
fidivrs
pop
and
mov
pop
testl
ds
add
dec
ljmp
outsb
js
mov
or
icebp
jecxz
mov
cmp
xor
cmp
mov
xchg
repnz
ljmp
pop
adc
pushf
jmp
call
das
jge
stc
xor
bound
adc
sbb
mov
lret
mov
lret
sub
add
jmp
data16
sbb
loop
rclb
out
out
xchg
sub
cmp
lahf
xor
xchg
or
sbb
sahf
push
shl
sbb
outsb
add
aas
mov
adc
cmp
test
pushf
outsb
popa
clc
push
loopne
sub
push
decb
sbb
jb
push
std
loop
add
repnz
jb
mov
aad
loop
lcall
adc
in
or
inc
sub
shrl
xchg
pusha
mov
loopne
mov
lds
fcomps
cmp
mov
bound
jne
mov
adc
in
pop
movsl
in
sbb
sbb
and
cmp
mov
cmp
jns
test
pop
in
imul
adc
or
mov
imul
lahf
subb
jnp
add
popf
or
inc
int3
lea
inc
pop
dec
mov
mov
shl
adc
movsl
jmp
mov
sub
je
pop
adc
sbb
jno
lea
out
sarl
insl
jle
xor
clc
adc
test
adc
movsb
enter
xor
in
adc
fsubl
int3
imul
loope
scas
cmp
add
sub
cmpsl
hlt
ss
push
cmc
je
cmp
mov
daa
cmp
lods
lds
inc
out
or
pop
cltd
xor
loopne
jb
jmp
jns
loope
jmp
popf
push
mov
ss
mov
pop
stos
pop
xchg
and
add
xor
sti
les
mov
add
cmp
pop
in
loop
loope
cmc
adc
jmp
jne
imul
pop
icebp
dec
sbb
sub
das
pop
dec
sub
loope
imul
pop
jno
fmul
jmp
lahf
push
jmp
int
jns
and
add
ret
scas
movsb
sbb
xrstor
icebp
outsl
icebp
gs
dec
lods
cmp
les
pop
cld
sub
aam
pop
je
lock
lds
jno
fwait
jmp
shll
xchg
outsb
add
push
imul
jnp
arpl
cli
mov
xor
adc
push
xor
ljmp
sub
loope
loop
adc
das
insl
mov
lret
xor
loop
inc
pop
mov
cld
jae
jmp
push
stos
outsb
test
daa
rol
mov
mov
mov
mov
pushf
mov
lahf
adc
in
test
mov
nop
sti
push
inc
xor
mov
jg
mov
cmp
pusha
pop
mov
jnp
xlat
test
pushl
inc
pop
outsl
xor
mov
mov
dec
andb
fwait
inc
push
push
or
push
cmp
xchg
in
outsb
sub
push
sub
gs
into
jle
lods
dec
ds
dec
out
xchg
mov
popa
mov
hlt
aas
movsb
fsts
push
int3
mov
dec
jb
jb
cli
add
add
jp
fdivl
sub
testb
cmp
mov
adc
fucomp
push
mov
cltd
jmp
fwait
and
aam
rorl
ror
fpatan
push
cmp
cmpb
and
test
push
stos
inc
out
xchg
into
jb
fcmove
cmpsb
sbb
push
mov
pop
stos
shll
or
ljmp
call
push
jle
xor
mov
aam
sub
sarb
mov
enter
xor
and
push
imul
shrb
subb
sub
mov
mov
jno
mov
add
add
incb
inc
and
nop
pop
aad
sbb
ret
pop
pop
xor
sub
xchg
pop
bound
push
mov
stos
lret
sahf
push
into
pop
xor
out
test
inc
jnp
insb
rorb
mov
out
dec
movsb
test
sub
pop
add
shlb
movsb
loopne
xchg
push
inc
es
xor
js
adc
std
out
in
and
dec
cmp
mov
sbb
loop
stc
mov
ljmp
mov
push
ss
push
cmp
lea
add
xor
pop
das
sub
out
in
rolb
data16
call
mov
xor
lret
cmpsl
iret
mov
adc
mov
cmpxchg
dec
inc
adc
cli
push
jns
sbb
jg
mov
pop
sub
iret
lahf
jl
popf
xor
sbb
sub
push
pop
mov
xchg
cmp
mov
sahf
mov
and
dec
or
push
lea
ja
push
dec
pop
lret
cmp
sti
push
popf
xchg
mov
inc
mov
es
test
addr16
popa
adc
add
lods
cmp
int3
and
jmp
or
hlt
dec
movsb
int3
repnz
inc
aad
in
inc
andb
sbb
mov
pushf
jnp
mov
xchg
call
push
xchg
sub
or
cmc
push
daa
rorb
lcall
sahf
mov
push
mov
enter
es
ss
lret
pop
adc
sbb
movsb
aad
inc
sbb
pop
fadds
cmp
mov
scas
dec
in
sub
push
jbe
into
dec
and
jge
mov
aaa
lret
ja
push
das
and
decb
lods
fnstenv
mov
mull
pusha
insl
xorb
popa
test
push
lahf
dec
jo
and
loope
hlt
dec
std
dec
sti
sbb
push
popa
sbb
and
xor
call
sar
jl
aam
xchg
pushf
lahf
mov
mov
mov
push
dec
or
fisubl
mov
xor
and
xor
repz
or
push
clc
jg
pop
jecxz
xor
test
push
inc
stc
mov
xchg
addr16
addb
xchg
xlat
cmp
jmp
pop
cmp
dec
or
je
pop
cmpsb
push
push
fistpll
jg
inc
jnp
cmp
bound
ds
dec
adc
sbb
sbb
jnp
repz
mov
call
jp
pop
sbb
xor
xlat
aad
ljmp
jge
push
xchg
or
push
push
pop
in
mov
xchg
pop
add
testl
pop
pop
pop
in
fcompl
sti
arpl
pushf
and
cmp
fstl
lret
add
fildll
push
pop
leave
push
loopne
cmpsl
sbbl
aad
dec
mov
sar
push
stos
add
pop
lret
frstor
mov
jne
mov
adc
dec
stos
shlb
jmp
lahf
outsl
in
repz
xor
outsl
ret
test
test
and
or
fwait
gs
mov
and
outsl
int3
das
movsl
xchg
out
pop
adc
test
or
pop
push
into
jne
aad
lahf
bound
in
jae
stc
fcoml
mov
mov
xor
mov
js
or
or
bound
imul
jp
pop
cwtl
xor
sbb
bound
cmp
movl
dec
aaa
jno
cmp
inc
sbb
jne
jge
cwtl
bound
bound
pop
ljmp
jl
push
cmp
into
jg
ret
or
rclb
jmp
in
jmp
imul
xchg
inc
add
ja
jg
sub
xchg
jmp
jmp
lods
mov
xchg
mov
jmp
mov
push
or
out
jl
mov
pop
inc
sbb
push
xor
jbe
in
and
lret
xlat
push
out
jno
mov
and
js
sub
test
movsb
icebp
jmp
ret
rclb
outsb
dec
jae
scas
out
pushf
lea
rorb
xchg
cmpsl
lds
jmp
mov
jne
mov
lds
sti
mov
test
pop
add
pop
mov
addl
xchg
fidivs
jmp
xchg
out
insl
mov
dec
stos
fwait
stos
in
ret
mov
addr16
cmpsb
loopne
ss
mov
cmp
pop
popa
dec
lcall
lods
sub
incl
and
lock
adc
push
insl
pop
aaa
out
addb
das
imul
leave
add
stos
mov
lock
inc
jp
stc
mov
xor
cmp
pop
adc
ljmp
sbb
lods
pop
in
xchg
lds
sub
js
jae
xor
mov
dec
test
daa
stc
xor
pushl
fstl
out
ljmp
mov
mov
cmp
pop
xchg
dec
icebp
ret
xchg
pop
call
sar
cmpsb
adc
mov
add
sub
scas
jg
mov
movsb
dec
xchg
dec
jae
xorl
pusha
push
adc
lea
pop
fmuls
sub
inc
sub
xor
iret
cli
sbbl
xchg
in
pxor
je
icebp
xchg
mov
mov
pop
int
add
add
adc
push
or
and
stc
mov
inc
arpl
jno
xor
or
lea
xor
xchg
popa
sbb
popl
test
xor
adc
sub
dec
push
gs
in
pop
xor
into
jnp
mov
mov
sub
adc
sub
loope
or
or
jmp
jmp
inc
add
sbb
cmp
jae
xchg
int
inc
or
cltd
cli
sbb
sbb
mov
mov
or
in
out
xchg
jge
pop
inc
add
outsl
mov
ds
inc
ss
loopne
xchg
mov
mov
jg
xchg
rcl
dec
lret
shl
sbb
mov
mov
xchg
push
lods
fiadds
movsl
sub
dec
aad
xchg
push
xor
xchg
adc
add
or
testl
lds
pop
inc
cs
leave
sbb
icebp
mov
bound
pop
fs
xchg
xor
jns
out
int
icebp
imul
test
inc
stos
jnp
outsl
clc
push
sti
xchg
sbb
out
arpl
inc
xchg
jmp
jl
mov
sub
sahf
cmpsb
pop
mov
inc
stos
pop
popa
cld
cli
imul
leave
test
lcall
cmp
out
cmpsb
sub
in
fcomp
or
mov
xchg
sub
popf
pop
leave
dec
xor
jns
dec
mov
cmp
addr16
pop
fildll
clc
push
outsb
mov
call
sbb
mov
pusha
and
sti
mov
test
add
pop
shlb
sbb
test
xor
xor
adc
cmp
xor
jge
cmc
jecxz
mov
xchg
enter
inc
jl
enter
das
lea
cmc
cmp
aam
mov
insb
hlt
pop
inc
inc
xchg
lods
dec
xlat
xchg
test
movsl
push
into
push
xchg
sub
or
pop
aad
cmp
sar
sbb
ftst
cmp
stos
and
and
jne
ret
das
inc
xlat
push
pushf
mov
clc
xchg
xor
int
mov
jecxz
mov
cld
pusha
shl
or
aam
or
jle
mov
fdivr
sub
pusha
mov
push
dec
int
cmp
xchg
mov
icebp
lds
aad
scas
mov
mov
out
adc
xchg
aaa
or
jge
jne
fcompl
mov
jnp
loopne
xchg
xor
jmp
add
jge
jbe
add
test
imul
lods
repnz
insb
push
fistpl
jp
pop
mov
cmpsb
andb
clc
cs
jg
cmp
repnz
lcall
negb
push
inc
out
cmp
lret
sti
fistpl
xchg
push
repz
push
movsb
sub
ret
pop
lods
lret
or
sbb
fwait
mov
cmp
jp
jnp
into
stos
add
adc
and
outsl
jnp
fs
cltd
jbe
je
scas
dec
adc
push
lods
imul
aad
xchg
add
movsb
fidivrl
pop
push
mov
mov
push
sub
sbb
shll
shlb
in
inc
popf
push
adc
mov
mov
xchg
ret
fnsave
mov
push
xchg
es
jns
inc
jb
rorb
mov
scas
and
rcrl
or
das
div
fimuls
icebp
mov
jmp
xchg
push
xchg
scas
incb
pop
push
into
stos
insb
sarb
int3
inc
jmp
pop
sbb
mov
jbe
je
mov
sbb
out
loop
sti
push
dec
dec
push
jge
jbe
push
shlb
test
inc
je
add
call
jge
movl
lock
clc
or
add
mov
and
ja
fnstsw
pop
inc
adc
cmp
xor
jne
mov
lds
xchg
sub
sub
jae
mov
adcl
push
mov
sahf
xchg
test
fcoml
jnp
mov
and
imul
pop
jae
ret
loopne
and
jbe
repnz
cmpsl
outsl
push
jl
in
cmp
xchg
xchg
mov
sub
cltd
push
cmp
xchg
pop
shrl
dec
daa
and
cmp
out
dec
dec
adc
mov
dec
lret
push
push
sbb
clc
jp
cmp
cmp
das
inc
cli
xor
lock
movsb
inc
xchg
outsb
pop
data16
sti
pop
add
lods
mov
jmp
mov
sbb
xlat
adc
lds
out
in
icebp
or
mov
cmpsb
mov
insl
mov
mov
pop
shl
test
pop
ljmp
loop
and
int
outsb
add
push
mov
nop
repz
rcrb
ret
div
push
mov
jp
in
dec
cmp
jl
rcll
inc
loopne
push
ja
xchg
filds
out
xchg
gs
mov
mov
jle
inc
leave
int3
repz
pop
or
jecxz
or
movsb
loop
movl
in
je
loopne
jecxz
inc
leave
push
pop
cmp
adc
bound
cwtl
jecxz
jnp
and
mov
dec
add
xchg
mov
dec
mov
enter
ret
cli
cmp
or
xchg
adc
push
lock
push
cmp
mov
xchg
cmp
rcll
cmc
popa
cmc
xlat
repnz
mov
xor
xorb
jne
sbb
cmp
movsb
sbb
das
sbb
xchg
pop
and
jg
call
mov
jmp
shlb
das
and
xor
outsb
icebp
je
popa
push
dec
pop
sub
push
mov
cld
xchg
cmc
add
sahf
out
test
sbb
sbb
or
fwait
xor
loope
test
jmp
mov
loopne
mov
push
test
mov
je
push
insl
push
inc
lret
lods
pop
inc
testb
and
dec
add
shll
ds
inc
shrb
adc
out
mov
cmc
insb
lds
in
ret
movsl
add
jne
jbe
inc
sub
imul
xlat
lcall
mov
inc
jecxz
inc
rcl
movsb
pop
movsl
jo
cmc
fisubrl
sbb
jb
mov
jecxz
std
pop
and
xchg
sbb
out
xor
pop
push
xchg
movsb
cmp
pop
in
out
and
pop
or
gs
mov
jecxz
in
cli
adc
in
inc
das
and
pop
popf
cmpsb
and
add
cld
lret
sub
push
loopne
dec
xor
pop
mov
lahf
andl
sbb
xchg
and
out
and
addr16
lret
cmp
cmp
sub
sbb
or
div
pop
jecxz
jmp
das
sarl
or
das
les
pop
jl
cmpsl
push
mov
and
jbe
pop
lahf
ja
xchg
mov
fwait
aas
mov
xor
test
in
adc
in
dec
and
add
and
pop
or
mov
xor
and
sarb
popf
xor
xchg
loope
mov
lret
xchg
cld
int
or
mov
inc
sbb
cwtl
add
pop
or
cmp
jmp
shlb
test
pushf
mov
lods
push
dec
xchg
clc
aad
mov
xchg
cs
jmp
in
cmpsb
aad
ret
cltd
mov
std
pop
popf
ret
sub
cmp
cmp
cmpsl
mov
dec
jp
repz
pusha
aam
sarb
push
mov
out
fnsave
mov
iret
ret
daa
xor
lcall
addr16
mov
or
stos
aaa
push
inc
mov
faddl
lods
cmp
xchg
imul
push
fidivrs
lret
ret
adc
inc
fildl
js
shll
and
xchg
dec
jl
out
xor
aas
fdivr
and
xor
cwtl
jmp
pop
cmp
cmp
les
jb
or
mov
push
ss
sbb
push
adc
push
push
roll
sarb
xchg
dec
dec
inc
fidivl
lods
mov
adc
shrl
lcall
and
dec
mov
test
popa
dec
or
jb
outsl
mov
sub
pop
shrb
add
sbb
nop
mov
lahf
nop
negb
icebp
mov
mov
sbb
imul
shlb
and
mov
stos
stos
cmpsb
push
xchg
dec
movsl
cmp
adc
es
cmc
test
enter
mov
cwtl
mov
aad
int
bound
andl
xor
mov
xorb
dec
insb
fwait
mov
and
inc
dec
inc
and
iret
movsb
loopne
insl
sub
test
pushf
xchg
fdivrl
mov
and
jge
adc
jo
pop
sbb
inc
stos
dec
mov
rcll
lret
aaa
jecxz
sub
sub
test
fldl
mov
dec
popa
dec
sbb
sbb
push
mov
xor
mov
icebp
xchg
xor
repz
int
push
in
jmp
mov
scas
out
and
and
mull
jno
ja
adc
sti
jnp
ds
aaa
add
nop
add
jo
pop
dec
test
insl
dec
jle
mov
shlb
sahf
outsl
pop
negb
repz
fwait
xor
push
dec
sbbl
lods
shlb
mov
jg
fcompl
cmp
and
mov
stos
cld
xor
ds
in
mov
xchg
outsl
inc
pushl
lret
lods
mov
jl
in
orl
adc
xorl
stc
in
xor
stc
mov
lods
and
cmc
cmc
mov
jecxz
sub
push
xor
mov
fnstcw
cli
jb
mov
bound
xlat
in
jmp
cmc
mov
pop
int3
lock
test
aaa
jg
mov
addr16
mov
loopne
push
lods
xchg
sbb
test
enter
or
mov
push
ja
ds
dec
imul
mov
add
fucom
in
mov
jg
and
pop
jbe
fnstenv
in
pop
xor
sbb
call
xchg
aaa
sub
cmpsb
call
pop
dec
adc
pop
out
xor
inc
jne
hlt
into
ds
or
cld
add
xlat
jmp
insb
dec
repz
out
xchg
and
add
std
mov
cmp
cs
out
mov
adc
insb
es
add
pusha
sub
dec
pop
sub
lahf
hlt
jb
mov
dec
in
aas
andb
sub
fldcw
ja
sbb
fisubl
mov
jmp
push
scas
mov
inc
push
cwtl
sbb
ja
push
sub
xchg
addr16
out
push
pop
insb
outsl
jecxz
leave
mov
mov
cmp
push
lret
fistps
addr16
inc
rclb
or
in
sbb
cs
cmpsl
xor
push
inc
push
stc
add
cmp
call
out
aam
xchg
enter
gs
mov
leave
inc
test
lret
in
xchg
pop
fdivrs
adc
jge
in
jne
inc
sbb
sbb
sub
or
imul
sbb
aas
sbb
xchg
bound
iret
jne
insl
adc
mov
fbstp
sub
add
add
or
aad
je
dec
mov
xlat
pop
in
in
pop
or
rcrb
scas
push
jae,pn
jp
push
lods
stos
mov
push
adc
test
push
inc
rcrl
add
xchg
jge
xor
pop
in
test
dec
jg
cmp
cmp
fwait
push
aam
in
add
push
and
push
inc
jecxz
stos
cmp
add
orb
add
cmp
rcll
scas
fidivrl
adcl
adc
xor
mul
repz
inc
out
imul
jge
data16
int
fstl
repnz
mov
inc
mov
mov
xor
stos
mov
test
stos
js
lock
sbb
test
cmp
scas
push
and
test
and
jmp
mulb
dec
mov
cli
jbe
insl
daa
push
int3
fdivrp
lahf
out
pop
pop
push
sub
sub
insb
mov
mov
cmpsb
out
inc
adc
cmc
or
rcrl
notl
ud0
push
stos
dec
ljmp
mov
jb
mov
nop
ret
out
push
jns
mov
je
pop
cmp
out
mov
cmpsl
pop
inc
and
aas
scas
das
mov
cmp
into
add
xor
aad
mov
dec
pop
cltd
or
test
push
xrelease
sub
cwtl
cli
and
jbe
push
jbe
clc
mov
mov
mov
jle
dec
mov
and
fdivr
sbb
imul
mov
test
daa
mov
fcomip
pusha
xchg
push
or
xorl
repz
xor
sbb
movsb
test
lret
pushl
cs
add
jecxz
repz
mov
sbb
mov
loope
jecxz
cs
aad
gs
or
mov
push
lds
scas
scas
mov
mov
pop
mov
jb
inc
loopne
mov
sbb
cmpsl
les
jb
leave
mulb
rclb
xchg
lcall
out
push
in
push
cmp
nop
add
and
push
repz
dec
or
daa
or
sahf
in
insl
dec
sub
lock
mov
jne
js
ljmp
lods
sbb
mov
nop
shlb
or
roll
mov
movsb
sti
icebp
push
mov
stc
xor
mov
rcrl
aad
push
pop
sbb
xchg
mov
js
jo
rorl
mov
cmpsl
push
lahf
pusha
or
mov
sub
inc
fstl
adc
sbb
inc
in
jne
dec
pop
hlt
jae
fidivs
or
dec
sbb
pop
aas
shll
pusha
insb
sbb
loope
jns
push
fwait
fs
sahf
stc
stos
sub
cs
sub
mov
push
jns
add
cmpsb
pusha
xchg
pop
pop
mov
psraw
mov
rcr
xor
push
insl
jae
dec
orb
lock
lods
int3
repz
scas
mov
fbstp
jne
pop
xor
and
sub
mov
pop
aad
cmp
adc
mov
jns
jo
jo
ret
gs
in
lock
mov
lods
adc
and
leave
mov
call
mov
push
pop
add
sqrtps
jmp
jecxz
imul
jmp
xor
into
shlb
imul
add
scas
out
cmp
xchg
or
out
push
dec
lret
scas
cmpsb
and
stos
xchg
outsl
xorb
scas
xchg
mov
push
add
fwait
cwtl
xchg
and
jne
rol
cmp
dec
jl
lods
les
lret
push
loope
aad
adc
inc
insl
aad
xor
xchg
cmpsb
push
in
sbb
das
xchg
shl
sub
lret
gs
mov
mov
call
enter
push
fdivrl
sarb
add
pop
cmc
fiaddl
fcomip
dec
insb
test
movsb
pop
jecxz
repnz
adc
xor
ja
sbb
cltd
jl
or
push
dec
add
stos
jbe
xchg
sbb
popf
cltd
jge
xchg
push
or
sbbl
push
in
mov
outsb
aad
mov
inc
mov
int
inc
dec
pop
lret
pop
dec
sbb
fistpll
icebp
sbbb
outsl
dec
xlat
push
push
loope
adc
and
xor
pop
xchg
jbe
ss
mov
aas
shr
imul
gs
jno
pushf
push
outsb
aad
dec
jg
fistpll
or
xchg
mov
pop
adc
cmp
dec
xor
jg
pop
dec
es
ljmp
fwait
xor
out
bound
addb
movsl
icebp
xchg
push
push
xchg
out
xlat
add
stc
aam
sbb
jmp
fcomps
pop
imul
gs
push
int
dec
movsb
and
frstor
push
sbb
inc
data16
adc
xchg
ljmp
sub
dec
xor
cli
aad
shlb
mov
mov
ljmp
sti
jb
adc
adc
icebp
fistps
cli
and
cmpsl
insl
xchg
push
insb
cli
int3
sub
cmpb
push
pop
lods
aad
mov
cs
insl
iret
dec
or
nop
jmp
pusha
mov
mov
and
in
or
pop
inc
inc
stc
test
test
data16
outsl
push
outsl
xor
mov
dec
sub
xchg
and
out
add
sbb
add
insl
add
inc
mov
popl
cmpsl
aaa
scas
mov
outsl
push
push
int
cmp
push
sbb
jg
jle
inc
add
mov
add
cmpl
jnp
clc
out
mov
mov
adc
xor
sub
push
cmp
xchg
js
imul
iret
add
xchg
xchg
insb
mov
and
jno
ret
adc
jo
cmpsl
push
adc
fsubl
jmp
mov
sbb
pusha
and
jmp
adcl
mov
dec
push
push
xchg
cmpsl
test
insb
mov
jecxz
and
mov
ss
mov
ss
xchg
xorb
test
dec
mov
mov
sbb
push
fwait
outsl
test
cmp
popf
jecxz
data16
adc
sbb
js
mov
cwtl
push
inc
mov
sbb
jae
pop
insl
pop
das
repnz
aas
and
sub
cmc
xor
jge
and
and
out
lahf
addr16
jg
cmpsb
imul
jge
cmp
in
push
aaa
sbb
lcall
fcoms
cmp
or
mov
inc
xchg
sub
add
es
inc
pop
addl
cmp
sahf
mov
inc
add
xchg
pop
mov
push
jmp
lods
repz
call
int3
cmp
pop
movl
lods
cmpsl
aas
and
lahf
lret
sbb
fwait
std
jb
push
faddp
push
mov
les
pushf
jmp
push
inc
mov
cmpsl
aas
out
fstl
mov
push
imul
push
add
and
push
daa
jo
mov
jl
push
andl
pop
negl
lds
mov
enter
pop
fisubrs
jo
outsb
adc
insb
sbb
shl
pop
mov
gs
inc
aam
leave
xchg
inc
xor
sbb
add
add
mov
test
pmulhw
xchg
lods
push
or
fstps
scas
flds
add
inc
adc
jbe
xlat
mov
add
jle
scas
loopne
jne
sub
mov
jge
sub
js
shl
or
out
fistpl
dec
andl
mov
pop
pop
int3
cmp
nop
loopne
lcall
mov
fidivs
xchg
sahf
inc
lcall
cmpsl
fldcw
sub
shlb
rcr
jo
or
fdivl
push
push
xor
popf
notb
imulb
dec
fidivs
sbb
adc
jns
pop
lods
xchg
mov
je
in
adc
test
icebp
xchg
xor
mov
xchg
inc
sahf
dec
les
pop
enter
sbb
rcrb
adc
xor
loop
xchg
cld
xchg
jl
loope
adc
mov
inc
lods
mov
sbb
sbb
arpl
mov
sub
add
data16
ret
mov
pop
fwait
stos
jae
or
rorb
and
divb
fadds
cmp
and
mov
cmpsl
push
cmp
xchg
loope
jns
sub
xchg
push
aad
pop
inc
dec
adc
push
jno
out
inc
push
pop
sub
orb
add
pop
or
insl
xchg
jns
insb
mov
lea
cwtl
xor
and
mov
inc
push
push
outsb
fs
inc
frstor
addb
jl
inc
les
push
rcrb
outsb
jg
sub
and
dec
aaa
xor
mov
cmc
jp
pop
addr16
pop
rcrb
popf
push
cld
mov
sbb
jmp
stos
je
push
add
sbb
jp
stc
aam
cmp
out
and
xor
jecxz
mov
cmp
lcall
and
lods
shll
xor
fucompp
lock
rclb
jge
dec
je
jnp
popf
icebp
or
mov
add
fdivs
sub
sub
or
inc
and
adc
sub
cltd
or
in
sub
cli
imul
dec
scas
mov
in
cmp
in
add
mov
sti
adc
adc
xor
ja
fmuls
fisttpl
in
and
push
lea
sbb
outsl
xor
cltd
sub
or
mov
adc
adc
cmpb
mov
mov
bound
adc
stc
xor
fisubrs
pushf
or
pshuflw
mov
lret
pop
push
in
jp
and
push
faddl
nop
push
xchg
fnclex
push
clc
push
mul
push
adc
mov
test
push
test
addb
jmp
das
xchg
or
inc
jne
pop
or
push
cmpsb
push
sub
ljmp
push
sbb
cwtl
sub
mov
in
mov
cmp
je
jge
testb
cmpsb
jmp
sub
out
jne
pop
movsb
mov
fidivs
mov
test
and
lret
arpl
stos
popf
mov
and
out
adc
dec
test
movsb
rcrb
pop
pop
or
pop
jo
dec
gs
sbb
fisttps
int
daa
in
scas
clc
dec
mul
cmpsb
insl
add
sub
ja
sub
ds
outsl
adc
loope
pop
in
cmp
dec
ret
push
jl
xor
enter
mov
mov
cmp
es
fsubrs
jg
push
push
popa
push
cmpsl
ds
mov
stos
aad
bound
mov
mov
push
add
xchg
mov
je
xchg
sbb
ja
inc
in
push
jbe
jmp
orb
mov
fwait
xchg
xchg
ja
or
test
fsubrp
sbb
push
ret
sarl
hlt
pop
dec
push
fcmovnu
xchg
inc
mov
push
cmp
sti
arpl
mov
mov
cmp
dec
pop
shll
fs
mov
icebp
aam
sarl
xchg
insl
rclb
outsb
adc
cmp
and
arpl
mov
mov
je
or
shl
jl
or
pop
aam
pop
insb
iret
dec
pop
adc
inc
jnp
arpl
jae
jle
bound
mov
lahf
movsl
inc
mov
jno
sub
stos
loop
stos
adc
dec
mov
repz
test
inc
ret
mov
imul
popf
cmpb
imul
test
lcall
inc
xchg
sub
inc
repz
popf
and
pop
sub
iret
mov
ja
mov
enter
cmpsb
inc
fisttps
cld
movsb
mov
popa
andl
jns
movsb
and
mov
shlb
xchg
lret
cmp
in
push
jno
lret
rorl
dec
in
aaa
je
icebp
xor
out
dec
push
xor
pop
jecxz
cmp
shll
incb
pushf
mov
mov
sbb
test
loopne
negb
pop
negl
pop
sub
dec
aaa
and
stc
and
xchg
bound
sbb
jl
fidivl
fmulp
repnz
sbb
fs
push
shrb
ret
adc
xlat
dec
dec
sub
push
pop
jl
pusha
daa
sti
xchg
mov
sbb
mov
mov
and
int
stos
in
mov
adc
push
xor
mov
negl
jno
jge
sbb
movsb
jae
mov
ficompl
mov
cs
push
roll
bound
push
pop
push
pushf
ja
pop
xchg
cmp
out
js
inc
xchg
loop
mov
push
clc
ret
mov
lcall
jae
adc
bound
jo
mov
test
sub
out
dec
inc
mov
gs
pop
in
dec
pop
or
ljmp
xchg
pop
pop
mov
ja
insb
lret
shlb
scas
not
xchg
mov
mov
cmp
cmp
loopne
in
lods
jle
outsb
jge
adc
les
das
pop
aaa
mov
mov
fnstsw
repnz
mov
hlt
xor
ror
fisubrl
or
pop
or
inc
outsl
add
cmpsl
and
adc
mov
fstpl
jl
mov
lcall
mov
test
clc
dec
or
mov
cmp
inc
sbb
cmpsb
jns
pop
stos
and
mov
cmp
clc
loop
out
pop
mov
fcmovu
imul
push
mov
or
adcl
ljmp
xor
lds
bnd
nop
iret
clc
sbb
arpl
mov
inc
jle
test
push
popf
into
call
aas
lahf
xlat
cmp
sbbl
fldl
jo
mov
jb
xor
or
test
and
xor
fcompl
js
push
sbb
adc
dec
xchg
test
andl
xchg
mov
outsb
mov
icebp
sub
in
aam
fs
xor
inc
ffree
xchg
mov
adc
and
push
jnp
icebp
fildll
add
jnp
xor
iret
inc
ljmp
or
pop
aam
push
ds
js
push
jae
push
adc
std
xchg
adc
std
sahf
pop
mov
mov
loop
dec
push
cmp
pusha
mov
xchg
push
icebp
cmp
xorl
psrld
ret
into
iret
imull
jg
inc
popf
dec
out
and
rcrb
test
xor
cwtl
popa
jnp,pn
mov
pop
not
xor
bound
push
xor
stc
xor
repnz
cli
ret
incb
sbb
mov
mov
add
mov
jle
scas
mov
subl
cmp
fisubs
sahf
push
test
sbb
mov
cmp
sub
mov
scas
sub
loopne
add
mov
xchg
mov
inc
jnp
adc
das
loop
sarb
or
sub
stos
cmp
cli
mov
leave
je
insl
in
mov
out
pop
cmp
lret
cmp
or
sbb
mov
hlt
aaa
in
lcall
aam
push
and
dec
push
xchg
in
lcall
je
or
sbb
divb
repz
mov
push
pushf
adc
aad
push
and
sub
dec
adc
or
or
mov
pop
or
fldl
std
or
xor
mov
sub
mov
jbe
loop
or
inc
les
mov
xor
gs
incb
add
cltd
outsb
mov
mov
js
andb
xor
adc
cltd
mov
jo
jb
popa
sahf
ljmp
jo
lret
and
mov
movsb
mov
addr16
xchg
add
imul
and
not
mov
in
adc
repnz
lds
xchg
sbb
inc
in
gs
inc
jmp
outsb
mov
and
mov
and
jmp
pushf
jae
insb
leave
sub
arpl
xchg
out
imul
cmpsl
mov
sub
add
outsb
and
test
gs
inc
and
adc
imul
sub
jns
cmp
test
or
adc
test
adc
jge
xor
popf
mov
fs
loope
jle
dec
nop
mov
rorl
lea
out
mov
mov
mov
cwtl
fisttpl
out
popf
xchg
and
pop
xchg
cwtl
sbbl
test
dec
dec
adc
scas
fisubrl
or
cli
mov
and
or
xlat
enter
std
or
adc
pop
dec
xlat
sub
push
xchg
ficomps
jbe
in
xchg
cltd
push
add
sub
mov
fadds
jge
add
cmp
out
push
cmpsb
mov
inc
lahf
clc
lcall
inc
mov
pop
cmpsb
add
pop
add
mov
jl
xchg
inc
xor
push
xchg
clc
cwtl
add
push
js
add
push
dec
out
in
imul
out
jb
fwait
and
lods
inc
mov
mov
push
inc
add
adcl
in
js
fmull
mov
jl
lods
je
jns
adc
jle
into
pop
mov
popf
mov
cs
mov
push
int3
mov
cmp
mov
int3
add
shll
push
loope
or
pop
scas
jnp
rclb
movsl
mov
data16
iret
aam
mov
cwtl
sbb
inc
data16
addr16
ficompl
les
icebp
push
jae
mov
ret
test
push
mov
adc
loope
inc
mov
fs
jle
popa
mov
ficoml
nop
push
mov
cmpsb
mov
jg
jmp
sub
sbb
mov
aad
cmp
movl
lea
hlt
add
xchg
test
jne
add
fsubl
repnz
add
jle
mov
jne
jecxz
pop
dec
shr
notb
cmc
es
repz
testb
sub
add
pushf
fsubs
push
mov
popa
and
les
push
and
mov
jno
mov
mov
xor
push
aaa
inc
arpl
fsubr
popa
sub
fwait
mov
jae
icebp
ret
mov
push
das
call
insl
dec
pop
int
fdivrs
shll
ljmp
aad
lock
jmp
mov
fwait
bound
sbb
nop
mov
testl
cmp
pusha
orl
mov
xor
mov
xchg
dec
jl
fnsave
pop
ja
sub
jmp
inc
or
ret
pop
fistpl
ret
xor
lahf
lods
pop
jo
int3
dec
xchg
adc
fsincos
rcrb
data16
dec
out
add
pop
rclb
xor
inc
pop
lods
or
sub
lcall
dec
push
mov
inc
divps
test
adc
mulb
das
mov
out
xchg
loop
dec
sti
cmp
pop
jl
cmpsl
into
xor
lods
mov
push
or
mov
cmc
in
jmp
dec
imul
loopne
daa
mov
inc
cmp
jge
or
test
sti
bound
ds
jbe
sub
int
clc
test
inc
xlat
dec
push
out
jbe
mov
mov
add
repz
mov
xchg
mov
add
mov
call
out
sbbl
or
push
push
out
in
push
mov
dec
fists
add
aas
or
xchg
fsub
aas
test
cmp
cs
and
sbb
sbb
lds
popa
mov
test
push
cmc
sbb
push
idivl
or
dec
ja
adc
cmp
shl
xor
clc
xlat
clc
clc
fs
lods
pop
sub
or
outsb
popa
push
inc
mov
pop
loop
adc
mov
xlat
push
lret
mov
divl
nop
pop
cmp
loopne
jmp
mov
inc
fwait
pusha
cltd
jbe
xchg
sub
incl
imul
push
rcll
xchg
iret
test
in
xor
mov
std
or
adcl
sub
or
cs
pop
or
inc
subl
mov
mov
pop
pop
cwtl
jbe
xchg
lods
jne
lods
dec
or
cmp
push
clc
fwait
mov
into
aaa
dec
ljmp
or
jmp
dec
insl
ret
daa
push
sub
jmp
pusha
lea
xchg
das
adc
daa
insl
mov
mov
into
cltd
dec
sub
xchg
lock
sti
mov
mov
das
test
in
push
mov
inc
in
push
and
sbb
out
sub
push
orl
push
push
push
in
rclb
and
stc
call
rcl
pop
xchg
rcl
sub
jl
int3
xchg
mov
je
enter
aam
mov
mov
shrl
inc
xor
int3
xchg
add
aam
das
push
hlt
jae
xchg
dec
mov
mov
sub
test
mov
or
xlat
lods
and
std
lds
std
in
and
push
rolb
xchg
xchg
aam
clc
jne
mov
cmc
xchg
fcomp
jbe
sub
stc
mov
inc
pop
lahf
adc
dec
outsl
enter
xchg
fs
cmovs
js
mov
mov
icebp
xchg
xchg
or
mov
lcall
or
pop
les
ljmp
xchg
mov
xlat
jbe
test
push
xor
mov
or
test
xlat
add
sub
sub
or
orl
lea
cs
pop
mov
arpl
adc
xchg
add
sbb
sub
or
jb
sub
xor
mov
push
jecxz
cmc
fcomip
jae
cmp
inc
xchg
fwait
xchg
add
jecxz
mov
mov
push
dec
inc
mov
lock
stc
mov
xchg
ret
sbb
jbe
hlt
loope
pop
and
push
and
pop
push
xchg
push
xchg
jno
fsubrp
xlat
mov
adc
or
inc
jo
dec
pop
push
dec
ja
ret
bt
mov
lods
dec
js
rcl
pop
js
cmp
ljmp
loop
jbe
xor
mov
mov
aaa
cli
in
scas
dec
lea
lds
fsts
mov
jmp
fadds
or
cmpsb
pop
imul
xor
fmuls
lret
fdivs
sahf
inc
pop
cmp
push
out
jg
add
jae
popa
mov
xchg
test
pop
jne
cmp
lea
xor
mov
pushf
dec
aaa
adc
jmp
dec
popf
inc
test
repnz
inc
stc
dec
movsl
cwtl
jb
cmp
push
or
mov
ljmp
fmuls
pop
mov
scas
cs
mov
mov
test
sbb
pop
decl
cmp
pop
fadd
jl
jp
in
and
cmp
outsb
lcall
into
jg
adc
xchg
inc
xor
mov
mov
ja
pop
sbb
sbbb
add
lods
stos
fyl2x
out
pushf
mov
add
push
cmp
aad
test
daa
sub
mov
pop
or
nop
arpl
cltd
ss
fdivr
jp
sub
stos
ss
lods
aaa
xchg
jbe,pt
xchg
mov
adc
jmp
imul
push
push
sbb
add
jb
add
pop
sub
adc
lret
inc
mov
mov
pop
in
cwtl
out
dec
lea
xor
xchg
pop
cmp
mov
pop
fcoml
repz
sbb
insl
lcall
pusha
jmp
leave
daa
test
mov
add
dec
sub
jl
inc
jg
mov
mov
xor
lods
push
repz
jp
pop
fcomps
xchg
xchg
adc
stos
sub
jge
jge
jmp
scas
aam
jns
lods
call
imul
ss
adc
cwtl
cmpsl
rorb
enter
add
loop
xchg
adc
cltd
adc
stos
jbe
cmpsb
scas
mov
xor
inc
and
test
fs
mov
fists
daa
push
jecxz
movsb
adc
repnz
inc
mov
xchg
jge
dec
jmp
and
xchg
adc
inc
mov
cmp
cmp
pop
test
lock
data16
loop
adc
pop
lret
and
jmp
cmp
lods
push
add
sub
hlt
push
cs
cs
idivl
ds
jl
data16
pop
dec
xor
cld
add
cmp
mov
fisubl
push
cmp
cmp
bound
dec
adc
xchg
out
fwait
enter
xor
pop
pop
mov
mov
mov
shrl
adc
movsl
outsb
ror
push
fisttps
mov
mov
aas
jbe
cmc
push
rolb
add
ja
popa
hlt
rcl
and
dec
fucomip
xchg
lock
mov
sahf
sbb
cwtl
mov
mov
sub
xlat
mov
add
js
cld
je
add
cltd
clc
fdivrl
xor
or
push
mov
xor
in
ss
es
mov
leave
jne
nop
or
push
out
mov
ret
jmp
js
insb
lret
call
shrl
hlt
stc
in
outsb
fcoms
push
mov
cmp
sbb
and
inc
mov
rol
into
mov
inc
leave
xchg
movsl
lods
mull
mov
sub
pop
push
sahf
dec
dec
enter
lret
fs
cmp
sub
xor
push
mov
mov
pop
in
aas
adc
int
sub
lock
cltd
xchg
out
push
add
test
dec
jno
test
push
inc
adc
sbb
push
clc
sbb
dec
add
jmp
out
jno
inc
ret
outsl
ss
dec
xchg
pop
call
popa
hlt
dec
mov
iret
enter
xchg
push
dec
mov
mov
js
dec
in
fwait
int
cmc
xchg
cmp
mov
cmpsb
repnz
ret
adc
xor
shrb
rcrb
pusha
orl
lret
inc
in
enter
and
in
ja
pop
xchg
lret
fnsave
inc
and
sub
and
add
stos
mov
clc
dec
mov
adc
jg
xor
and
pop
repnz
loop
mov
dec
test
inc
push
push
nop
jle
cmp
ficompl
mov
bndstx
rolb
gs
pop
xor
jae
adc
mov
xchg
scas
movsl
divl
jbe
push
popf
aaa
xchg
cmp
inc
hlt
jnp
call
lcallw
mov
adc
lret
pop
sbb
aam
adc
cmp
mov
rcr
inc
sub
push
jg
and
and
pop
fadd
mov
mov
mov
int3
nop
lods
cmp
lahf
mov
lods
inc
mov
imul
fidivrl
test
ljmp
jle
jbe
out
rcrl
pushf
aas
bound
rorl
les
inc
dec
fs
cmp
or
repz
movsb
rcrl
sti
sub
pop
inc
adc
cmc
inc
add
pop
pop
shrl
and
lcall
lods
mov
cmp
cmp
mov
int3
push
cli
add
fsubl
mov
movsl
pop
negl
pushf
sahf
mov
mov
mov
ret
inc
add
cmc
inc
pop
xor
add
addr16
cwtl
dec
bound
or
jmp
mov
jno
adc
pusha
pop
and
and
dec
sbb
addr16
pop
jo
cmpsl
popa
pop
rorb
arpl
jbe
adc
mov
ret
outsb
add
popf
cmp
mov
mov
inc
dec
nop
xchg
stc
xor
shl
nop
add
push
stc
push
mov
adc
mov
insb
mov
in
pusha
push
jae
adc
pop
push
push
mov
dec
or
insl
xor
icebp
out
cltd
xchg
mov
fnsave
add
mov
jge
loop
mov
fildl
add
int3
mov
mov
mov
inc
arpl
jg
or
stc
pop
in
dec
adc
pop
push
insb
bound
dec
jne
xor
mov
mov
adc
loopne
mov
jecxz
push
pop
int
out
dec
cld
ficompl
psubb
popf
pop
xor
in
inc
mov
inc
cmp
mov
stc
mov
xchg
xchg
and
pop
push
cltd
cmp
adc
out
dec
dec
roll
pop
lods
mov
pusha
push
mov
adc
adc
fcmovbe
fisttpll
adc
xor
pusha
inc
ja
fs
mov
or
adc
pop
mov
pushf
and
lahf
dec
popf
popf
cmp
pop
aas
iret
xor
cmp
jnp
xor
lahf
outsb
insb
arpl
sbb
cmp
daa
sbb
scas
outsl
cs
aaa
das
xchg
xchg
adc
push
cmpsb
or
stos
sbb
mov
addb
cwtl
test
xor
testb
push
jecxz
or
inc
mov
xor
cmp
lods
push
hlt
pop
pop
clc
pop
cld
or
dec
inc
sbb
mov
pop
cmp
lods
mov
out
insb
push
lea
in
ja
inc
imul
outsb
inc
mov
clc
jle
sbb
jl
lcall
adc
cmp
push
hlt
or
fisubl
push
add
jl
scas
cmp
shrl
les
jmp
ja
cmpsl
or
adcl
in
push
mov
outsb
shlb
test
roll
cwtl
daa
ret
adc
je
add
mov
cmp
mov
xlat
pop
mov
or
pushf
push
in
leave
xchg
mov
mov
adc
mov
std
pusha
popf
addr16
pop
push
push
xor
movl
es
in
and
pop
pop
or
sbb
out
push
mov
pop
dec
lods
xchg
insb
mov
aad
fistpl
inc
stos
js
cltd
cwtl
mov
pop
arpl
jno
cli
sbb
iret
or
sub
addl
dec
clc
or
xor
sbb
int
adc
mov
or
dec
imul
xchg
out
xchg
shr
xchg
test
shr
mov
addb
pop
mov
jecxz
ret
cmpsl
mov
movl
ljmp
pop
test
add
in
dec
push
sarl
push
or
mov
pop
dec
iret
in
pop
xchg
sbb
jl
inc
jae
test
inc
icebp
popf
jns
sbb
leave
cmp
jl
jns
out
movsb
cmc
adc
jge
mov
cli
rclb
inc
rorb
mov
adc
loopne
mov
xor
push
jns
inc
jmp
lock
dec
mov
add
and
inc
mov
sbb
cmc
add
ss
and
mov
addr16
push
dec
dec
cmp
push
push
movsl
adc
pop
pop
and
mov
je
pop
into
cwtl
inc
outsl
mov
icebp
or
mov
mov
or
jnp
lret
xchg
or
xchg
je
lahf
loope
push
pop
push
or
xlat
inc
push
sub
push
xchg
pop
jo
mov
stos
filds
pop
cmp
xorb
jns
adc
sbb
aaa
mov
ja
sub
leave
cmpsb
pop
add
test
add
xor
aaa
mov
fcompl
pop
mov
je
xor
add
test
pop
mov
int
jge
les
int
repnz
rcrl
ja
and
nop
or
mov
xor
sub
mov
lea
and
mov
outsl
adc
out
cmp
mov
sub
stc
dec
and
pop
jle
jb
lds
adc
sbb
and
iret
cmp
fbstp
inc
lock
out
mov
arpl
push
mov
insb
and
sub
push
nop
pop
cmp
inc
jge
imul
sub
push
mov
popa
cli
lahf
sbb
mov
std
icebp
test
jmp
or
or
add
test
arpl
inc
xchg
xor
fwait
push
sbb
xchg
cmp
dec
inc
xchg
out
add
fimull
jne
inc
cs
in
xor
ror
and
dec
add
sahf
ljmp
addr16
in
out
fwait
xor
arpl
cmp
scas
test
or
aam
pop
jmp
sbb
icebp
xor
lock
sahf
inc
sub
rolb
jns
mov
and
pop
xor
sbb
cmp
in
push
lods
shl
sbb
aaa
cmp
rcrl
daa
add
test
and
jb
ds
dec
arpl
add
mov
cld
popa
mov
pop
cli
pop
loopne
jbe
subb
mov
dec
aaa
addb
stc
out
sub
add
inc
push
fnsave
jnp
ss
fmull
add
mov
jne
pop
not
push
jmp
ss
clc
push
sbb
adc
movsl
lock
push
dec
andl
in
jp
push
inc
adc
lds
pop
leave
pop
or
loopne
xchg
push
cmp
push
movsb
stos
xlat
stos
movsb
mov
cmp
ret
xchg
fs
mov
dec
cmp
test
jp
mov
xor
cmp
gs
or
fldl2e
push
fs
jg
call
sbb
imulb
xchg
sbb
rorl
or
add
adc
or
clc
int3
je
add
pop
xor
cmp
je
fs
push
aad
mov
scas
aaa
add
fisttps
mov
fs
pusha
scas
jbe
out
add
sub
dec
xor
adc
jb
dec
pushf
or
sbb
pop
mov
push
jno
jg
insl
mov
xchg
jno
pop
push
ljmp
pop
mov
xchg
bound
pop
sub
icebp
mov
dec
into
aad
aad
mov
lret
mov
adc
fisttpl
xchg
pop
cli
jnp
stos
stos
adc
push
ja
jo
lods
ficoml
lock
inc
les
lcall
cmp
ret
mov
pusha
std
test
clc
stos
xor
push
dec
pop
out
test
hlt
mov
pop
jle
je
subl
cli
js
fwait
push
and
push
and
hlt
lret
fmuls
cwtl
pusha
inc
sar
inc
or
jno
enter
xor
mov
je
xchg
imul
int3
xor
daa
push
adc
jmp
out
test
loop
fcomps
jae
adc
push
sub
jmp
dec
imul
bnd
add
nop
fstpl
sbb
js
adc
jmp
dec
mov
insl
and
jnp
jp
sti
mov
mov
cld
dec
mov
dec
div
pop
mov
rol
lea
in
dec
lds
push
int
inc
jno
jne
cli
cmp
imul
in
and
mov
mov
jp
adc
push
xchg
mov
and
outsl
incl
xchg
dec
inc
sub
lods
imul
leave
outsl
rorb
pusha
inc
movsl
xchg
xchg
or
sbb
pushf
jmp
mov
sbb
dec
scas
test
inc
push
xorb
jle
iret
js
cld
lahf
outsb
ficomps
dec
int
test
pusha
mov
push
in
insl
xchg
jle
repz
cmp
aad
movsl
mov
xor
test
or
fbstp
mov
inc
in
ja
ja
add
out
imul
jnp
pop
and
aad
outsl
sbb
dec
xlat
dec
out
inc
add
mov
clc
popa
scas
pop
jmp
mov
pop
stos
ljmp
mov
adc
orb
pop
jmp
data16
mov
jb
mov
scas
adc
inc
iret
rcrl
mov
mov
sub
xorb
xor
jnp
xor
dec
and
popf
add
push
fdivrs
xor
jp
inc
arpl
pop
and
fimuls
aas
inc
dec
popf
xor
addr16
jp
lcall
cwtl
pop
dec
mov
filds
mov
push
es
xchg
mov
fs
fmuls
lret
or
or
xor
fmulp
jg
xchg
xchg
xchg
cmp
push
mov
std
jo
ret
mov
cltd
sbbb
ss
aad
cmp
mov
add
ja
fisttps
pop
movsb
movsl
ret
clc
mov
fadds
xchg
movb
pop
test
sbb
ret
popf
fmulp
fistl
leave
pop
push
sbb
sbb
inc
pop
movsb
divb
or
xchg
push
sbb
xchg
mov
xor
repz
sub
inc
lea
dec
repz
xchg
pop
test
jg
lret
arpl
gs
mov
xor
leave
in
and
push
mov
add
repnz
lea
aas
ret
out
mov
imull
pushf
jge
cmpsb
sbb
sub
scas
adc
adc
in
dec
outsb
out
and
lods
neg
loop
loope
loop,pt
mov
dec
mov
lock
aaa
cmp
or
cmp
bswap
cmp
les
ret
mov
rcl
mov
jecxz
sbb
pop
scas
lods
pop
and
adc
in
fcmovbe
xchg
js
xor
ss
icebp
add
dec
pop
movsb
lock
cmpsb
bound
jg
cld
jns
pop
vmwrite
shlb
add
fsts
jns
je
aas
lret
add
pop
sarb
adc
rorb
ds
jmp
les
jmp
movsl
fidivl
adc
and
js
lret
jns
jne
add
add
orb
rolb
imul
es
or
add
fwait
bound
pop
add
scas
jp
push
repnz
div
adc
leave
adc
cmp
or
jno
aas
dec
mov
test
scas
aam
ljmp
push
inc
js
arpl
dec
sbbl
add
push
mov
pop
or
cwtl
outsl
outsl
sub
in
jle
in
je
or
lds
jb
sbb
sbb
pop
push
jae
outsb
nop
cmc
or
cmp
fcmovnbe
roll
popf
inc
into
mov
sti
dec
fwait
outsb
sbb
or
lods
roll
mov
xchg
lods
mov
notl
cmpsb
call
lret
jnp
jae
test
mov
xchg
insb
lret
leave
insb
ror
out
inc
push
scas
scas
adc
push
hlt
mov
dec
mov
pop
roll
pop
fs
pushf
and
in
cmpsl
aam
jnp
das
cmp
rorl
xlat
mov
fwait
leave
push
inc
ret
pop
add
inc
cmp
ljmp
sub
pop
mov
icebp
sub
pop
jb
pop
push
outsl
loop
add
inc
adc
sarb
mov
rcll
out
add
cmc
fnstsw
mov
rcr
into
les
xchg
rol
and
cmp
mov
les
push
dec
aad
adc
in
and
stc
mov
push
and
imul
mov
xor
xlat
mov
insb
popf
pushf
add
push
xchg
push
cmp
xchg
and
fcomps
shr
lret
adc
outsb
dec
call
test
push
cld
shl
or
mov
insl
in
cs
enter
or
pushf
dec
rcrl
int
add
shr
iret
sub
js
roll
pushw
inc
fsubrs
pop
lds
arpl
lcall
lea
sarl
mov
divb
mov
dec
xchg
fildl
jae
js
dec
adc
sub
int
xchg
cltd
add
pop
xchg
adc
or
dec
mov
push
pop
andl
push
ss
xor
cwtl
cmp
cltd
sub
ljmp
int
mov
xchg
ds
rcll
pop
sbb
xchg
outsb
dec
iret
mov
or
xor
and
out
arpl
lea
aas
data16
lods
filds
cmp
or
cmp
stos
push
adc
pop
fildll
insb
mov
jne
pop
iret
inc
mov
iret
jg
sahf
mov
daa
dec
ss
repz
mov
addb
pop
fsts
pusha
add
hlt
bnd
int
pusha
or
cld
and
dec
push
pop
jge
mov
scas
cli
sbb
in
cltd
xor
or
aad
fisubl
subl
sbb
cmp
ret
adcb
cld
jno
push
sub
push
movsb
adc
int3
cmp
cmpsb
popa
pop
cmp
inc
outsb
popa
mov
std
xor
push
arpl
cld
jge
ds
inc
in
ret
xor
test
stos
add
or
shl
cmp
daa
pop
mov
cmp
or
mov
lret
pop
or
or
fistl
filds
insl
jbe
mov
xor
pop
dec
stos
aas
pop
push
cmp
xchg
lcall
cltd
mov
pop
jne
push
stc
pop
cmp
xlat
or
sarb
mov
and
popf
mov
push
pop
pop
push
push
mov
add
js
sbb
sub
call
dec
inc
adc
test
jp
ljmp
arpl
lods
sub
and
pop
cli
insl
mov
in
mov
movsb
pop
icebp
les
mov
or
xor
or
fs
dec
cs
add
inc
mov
mov
clc
mov
stc
lea
jmp
jge
in
adc
push
jne
dec
cmp
inc
rclb
orl
gs
outsb
jnp
pop
into
mov
imul
adcb
movsb
mov
fldcw
jo
sbb
fs
mov
and
inc
out
adc
jns
push
es
pop
pop
jge
mov
out
out
stos
or
pop
sbb
ljmp
insl
popa
fstps
repnz
das
inc
jl
mov
in
or
jmp
flds
into
xchg
dec
mov
mov
jp
xchg
jno
cmp
das
scas
jg
inc
jg
aas
in
push
sti
mov
adc
in
ret
mov
jns
and
pop
lahf
les
adc
jne
push
sub
or
add
and
mov
in
add
shll
cmp
int3
loop
xor
add
outsl
mov
mov
add
mov
jmp
xor
push
mov
add
das
push
mov
std
mov
and
xor
sbb
jmp
fidivrl
jbe
pop
adc
and
sub
mov
int3
push
push
inc
imul
mov
insl
add
cld
push
pop
sahf
stc
ljmp
lock
out
fldcw
test
sub
xchg
pop
mov
adcb
call
inc
es
pop
in
movsb
mov
pushf
mov
push
lock
icebp
xor
test
inc
lret
clc
test
mov
sub
push
push
movaps
loopne
outsb
hlt
loope
cmp
sub
xchg
sub
les
xor
hlt
lods
mov
fs
cwtl
in
sub
xlat
stos
mov
push
push
adc
jle
pop
jns
xchg
xchg
pop
and
cltd
xchg
das
sub
push
cmp
fwait
loop
add
aam
adc
les
jae
icebp
lcall
jmp
pop
inc
test
jns
sub
sahf
sbbl
jnp
dec
int3
sbbl
dec
popf
call
fisttpll
or
xlat
add
mov
clc
cmp
and
out
pop
gs
pop
inc
pop
repnz
and
shll
add
push
mov
pusha
in
mov
jg
shrb
outsl
repz
shll
loop
push
lret
mov
movsl
inc
leave
xchg
xchg
arpl
xor
mov
push
cmpsl
sbb
bound
inc
hlt
pop
insl
stos
sbb
jo
adc
sahf
jno
mov
inc
cmp
xor
cmp
mov
shll
mov
push
mov
xchg
jl
fildll
scas
stc
popf
add
cmp
popf
sbb
sub
subb
xchg
and
inc
insl
xor
aaa
and
rcrl
shll
push
xchg
pop
scas
div
xor
int3
addr16
pop
jne
cmp
loopne
pop
cmp
jnp
daa
rol
fcompl
mov
movsb
mov
jge
ss
pop
pop
sub
or
cmc
lret
test
jp
pop
dec
push
dec
xor
out
mov
push
std
dec
pushf
add
xchg
repz
into
frndint
xorb
mov
cmc
push
ja
xchg
lods
movsl
xor
sbb
shrl
lods
sahf
push
outsb
aaa
jmp
dec
in
mov
cld
xchg
push
inc
cmpsb
insl
in
push
lret
push
pop
push
jle
adc
inc
adc
call
cltd
push
mov
and
mov
mov
outsb
pop
cmpsb
popf
and
jo
in
movsb
les
adc
xor
mov
cltd
pmaxsw
les
add
aad
cwtl
andl
insb
pop
addr16
dec
adc
sarl
pushf
inc
iret
xor
jge
popa
mov
lret
dec
jnp
iret
sbb
xchg
cltd
out
mov
call
lods
push
ret
jne
pusha
pop
cmpsl
shll
cmpsl
pop
sbb
imul
ss
push
adc
shlb
inc
sub
jmp
andl
mov
mov
insb
dec
adc
mov
mov
xor
fwait
mov
imul
ret
clc
call
rcr
in
iret
dec
sub
inc
mov
in
jnp
movsl
outsb
test
scas
rolb
mov
lock
mov
lahf
test
add
leave
jmp
pop
mov
into
and
cmp
mov
leave
dec
roll
stos
add
and
adc
jae
dec
or
sub
sub
mov
popa
icebp
jne
sub
inc
cmp
or
mov
mov
aam
mov
arpl
mov
xor
decb
fists
movsl
pop
imul
adc
push
lock
mov
mov
pop
sub
and
and
cmpsb
xchg
sub
xor
fidivrl
push
fsubrl
int
sti
ficomps
push
inc
add
outsl
repz
movsb
fcompl
mov
mov
jge
aas
sahf
scas
or
xor
push
scas
fiaddl
jle
jecxz
sarb
data16
rcrl
or
and
jge
pop
cmp
cmp
push
das
sbb
cmp
jle
arpl
out
or
or
and
sbb
stos
add
push
pop
cmp
add
sbb
xchg
jnp
lds
adc
add
fsts
notb
shll
hlt
xor
hlt
out
stc
dec
cmpsl
popa
imul
insb
mov
ficompl
nop
dec
pop
mov
jle
outsb
inc
sub
scas
adc
aam
icebp
loope
aad
lds
push
mov
out
insb
xchg
jge
lods
or
mov
add
icebp
inc
jle
sub
repz
dec
and
or
bound
sub
jb
xlat
sahf
sbb
cmp
test
loop
repz
popa
jo
clc
into
sub
in
push
inc
ss
mov
mov
hlt
or
pop
cmc
sbb
add
leave
xor
loop
insb
xchg
out
subl
xchg
pop
mov
lret
add
push
mov
mov
int
xor
fdivrs
cltd
mov
iret
dec
or
cld
nop
mov
xchg
int3
xor
push
and
inc
jecxz
stos
push
dec
xchg
or
pop
les
push
add
mov
sub
mov
sub
out
or
sti
ja
mov
loope
mov
inc
sub
push
sbb
pavgb
iret
rcll
icebp
daa
stc
cli
pop
lret
or
inc
lods
jmp
icebp
popa
mulb
imul
lods
pusha
out
cmp
sbb
xor
int
jns
push
pop
imul
aam
and
leave
sbb
inc
in
add
jl
push
popa
mov
test
or
insb
call
or
jp
ljmp
fs
jnp
and
es
mov
repnz
xor
loop
movsl
xchg
in
mov
js
imul
lods
jae
xchg
fisubs
loope
pop
imul
aaa
sbb
xor
pop
je
jne
xchg
xor
mov
je
loop
scas
xor
sbb
stos
mov
popa
mov
aaa
push
cmpsl
add
xor
testl
rorb
lock
mov
out
rcr
rol
mov
jge
xchg
mov
shlb
sbb
push
jmp
pop
xchg
in
add
insb
mov
xor
sub
sbb
shlb
lods
adc
cmp
mov
mov
aaa
pop
mov
pushf
inc
xor
cmp
adc
inc
dec
call
fisubrl
xor
clc
jle
fsubp
xorb
aam
popf
js
pusha
dec
int3
jb
out
in
cmpsb
mov
add
pop
lock
outsl
jmp
outsl
notl
dec
lock
push
test
test
testl
fistpll
mov
iret
xchg
mov
js
daa
test
fstp
cmp
mov
mov
les
pop
adc
aad
xchg
clc
cmp
mov
lahf
cltd
cmp
mov
sarl
adc
pop
jg
xor
mov
pop
test
dec
cmp
cwtl
sub
or
pop
xlat
add
test
mov
xchg
cld
aam
dec
and
rorb
pop
cmp
sub
jo
fldenv
inc
call
insb
add
mov
cmpl
repnz
mov
xlat
sbb
jg
ja
pop
jle
lods
pop
sbb
xor
movsb
lock
mov
sahf
orl
xlat
sbb
movsb
sub
and
xor
data16
mov
mov
shlb
add
mov
cmp
movsl
mov
xlat
push
xchg
cmc
pop
out
mov
add
push
jmp
lods
scas
fcomps
push
mov
sti
out
push
or
cli
cmp
mov
mov
test
xlat
ret
ss
sbb
fnstenv
push
push
repz
push
int3
xchg
inc
jg
or
mov
mov
in
ds
leave
movsl
mov
movsb
adc
dec
cmp
sub
or
in
dec
ret
pop
rcrb
push
mov
xchg
inc
push
loope
hlt
ret
xor
lret
aaa
sbb
daa
cmpl
mov
icebp
jns
push
add
cmp
ret
dec
dec
push
mov
sub
push
js
cmp
and
push
das
add
mov
repz
andl
stos
lods
hlt
push
jne
adc
pop
jl
add
jge
xlat
lea
ljmp
sub
ljmp
ret
fisubl
shl
xor
aaa
aaa
mov
push
push
fcoms
mov
jo
pop
addb
xor
fists
mov
lea
dec
sub
mov
xor
inc
loopne
inc
mov
push
xor
addl
mov
sub
test
mov
in
mov
add
shl
mov
orl
mov
data16
jecxz
repz
xor
sbb
pop
and
push
push
out
and
xchg
xchg
ss
and
ret
js
popa
pop
outsb
enter
inc
sahf
repnz
sahf
mov
fisubl
jns
sub
cwtl
dec
add
ret
mov
aaa
mov
roll
sub
cli
mov
xor
lods
aas
andl
pop
ja
out
mov
jecxz
data16
push
inc
xchg
push
mov
xchg
and
push
xor
adc
in
cmpsl
out
lods
pop
dec
adcl
pop
and
or
das
imul
push
pop
push
xchg
int
pop
push
ret
shll
or
stos
adc
add
pop
sbb
mov
iret
xor
push
pop
shl
fdivrs
fucomi
hlt
push
sbb
and
dec
add
push
sub
pusha
cmc
lds
les
mov
mov
in
adc
ja
xchg
arpl
mov
mov
addb
cmp
out
inc
push
jns
jecxz
fmuls
mov
test
jp
cmp
in
stc
stos
insl
aad
adc
aad
pop
test
fisttpl
pop
scas
cmp
mov
cmpsl
cmp
lods
and
loope
fs
fs
cli
jl
cmpsb
js
and
popa
xor
in
cmp
xchg
fldenv
frstor
repnz
jmp
movb
push
dec
cmpsb
shrl
cmc
jmp
insb
push
inc
lcall
xor
jg
int
pop
mov
js
cmpl
xchg
mov
out
ds
rclb
lahf
inc
sub
stos
mov
fsubs
add
inc
inc
cs
mov
int3
dec
cld
cli
flds
or
mov
iret
std
lds
enter
sub
cld
dec
cmp
mov
inc
and
xchg
mov
bndldx
ret
and
mov
icebp
icebp
popa
loope
xchg
or
push
std
out
push
mov
lret
jnp
add
adc
lock
hlt
aas
cld
js
enter
repnz
outsl
mull
or
jle,pt
test
jp
enter
imul
dec
test
xchg
insl
jmp
loop
xchg
lcall
test
xchg
pushf
push
xlat
loope
xchg
mov
xchg
push
dec
loope
popf
dec
ds
jmp
pop
add
outsb
add
jp
jnp
jecxz
inc
xor
xchg
sahf
and
sbb
dec
sarb
mov
inc
xchg
scas
and
test
lea
icebp
jae
es
lods
xor
dec
int3
jl
pop
fnstenv
mov
aas
xchg
sub
sub
mov
inc
mov
jno
js
sub
js
sbb
push
push
xchg
into
sub
inc
sub
jp
inc
mov
iret
sahf
jnp
mov
adc
fildll
mov
mov
rcll
xchg
inc
in
dec
adc
xchg
hlt
ret
adc
lea
and
fwait
push
push
dec
je
movsl
cli
sahf
cmc
and
cwtl
xor
cmp
test
xchg
or
cmpsb
negb
popa
push
push
movsb
outsb
xor
lds
pushf
jl
dec
popf
dec
cli
mov
add
cmp
add
inc
push
popl
icebp
int3
outsl
fildll
ds
jno
mov
sub
stos
and
sub
push
mov
int
leave
in
mov
jns
sbb
popf
mov
out
into
sub
scas
test
jge,pt
test
mov
and
push
ret
or
mov
jb
mov
clc
mov
daa
lret
add
cld
bound
cmp
inc
push
leave
outsl
pop
popf
mov
out
mov
cwtl
test
roll
mov
test
sti
ret
push
push
pop
pop
mov
push
pusha
ljmp
insb
push
sub
arpl
jl
jmp
xchg
adc
pop
cltd
xor
icebp
into
cmp
lret
xchg
movsl
test
pop
mov
movsb
xchg
lahf
or
ss
stos
mov
lock
rcrb
addr16
cmp
icebp
leave
sahf
mov
sahf
out
adc
std
xchg
xchg
jl
sub
cmp
int
cmp
dec
aad
mov
sti
ficoms
sbb
sahf
fadds
adc
out
mov
mov
xor
pop
push
jb
push
cmp
pop
outsl
mov
push
mov
cmc
jb
lcall
xor
mov
sbbl
and
sub
leave
xchg
sbb
cwtl
repz
jecxz
es
dec
lds
pop
cld
rol
sti
add
jl
jle
jns
in
cmp
ficoms
xchg
adc
std
jno
aaa
and
nop
inc
inc
gs
lock
pop
pop
aam
pusha
stc
and
jae,pn
stos
call
cmpsl
out
cmpb
sub
rorl
in
fldenv
test
sbb
ss
aaa
sbb
cmpsl
mov
lcall
mov
and
loope
loope
dec
repz
add
pop
xchg
add
cmp
push
arpl
fistps
je
cmp
mov
push
fldl
pop
sub
out
add
rcl
dec
das
das
xchg
sbb
fiaddl
xor
push
arpl
and
adc
jo
adcl
ja
in
inc
jl
pop
in
daa
pusha
int
test
andl
test
jl
xor
push
imul
dec
ljmp
push
push
ret
or
loopne
sti
jge
jo
and
mov
jge
je
scas
cmpsl
fists
out
ror
adc
pop
testl
enter
fsubr
and
pop
fildl
xor
inc
icebp
and
out
dec
mulb
mov
xchg
int
pop
jp
adc
jb
and
mov
enter
and
mov
inc
adc
and
sbb
xchg
push
in
cmpsl
insb
and
scas
sbb
sti
push
filds
sub
scas
or
fildl
inc
aaa
cmpsb
outsb
or
and
test
xchg
xor
inc
mov
fistpl
push
das
and
mov
mov
xlat
lret
fwait
mov
push
adc
adc
movsb
mov
rol
nop
int
push
mov
cwtl
push
popf
cmpsb
xlat
jl
js
addr16
mov
sbb
sbb
fsubrl
pop
je
jne
ja
clc
imul
push
rorb
insl
stos
mov
inc
rcrl
jae
xlat
add
pop
daa
inc
psubb
xchg
dec
add
dec
dec
xchg
test
xor
mov
push
push
lret
inc
jle
xor
add
data16
jp
and
jmp
fmuls
movsl
jo
dec
jle
std
stos
stos
xor
ss
jge
out
xor
cmpsb
jae
jecxz
pop
push
lret
inc
mov
jbe
outsb
push
sahf
cmp
and
lahf
adc
mov
cmp
jp
mov
and
mov
mov
fisubs
xchg
leave
xorb
pop
sti
and
daa
subb
cmp
leave
and
loope
lods
cli
insb
mov
dec
jle
pop
push
mov
rolb
jae
jb
stc
push
stos
push
pop
or
stos
in
pusha
mov
sbb
in
cwtl
rolb
stc
adc
mov
aam
xor
fdivrp
push
jae
inc
lock
or
rorb
fisubrs
mov
and
and
push
testb
jle
mul
xor
in
popf
xchg
rcl
rorb
cmp
pusha
pop
nop
out
pop
cmc
adc
loope
std
xchg
ja
sbb
out
cli
mov
mov
adc
mov
mov
mov
mov
lods
adc
inc
test
xchg
rcr
cwtl
cmp
and
out
dec
hlt
mov
xchg
pop
mov
out
loopne
cmc
test
inc
lret
dec
lahf
mov
jg
sub
and
mov
sbb
aam
xor
ror
pop
negl
in
jbe
cmc
aad
xlat
jmp
and
mov
and
add
sbb
cmc
insb
add
mov
aam
jge
out
shrb
xor
jle
jne
mov
cmpsb
imul
rcrb
dec
mov
and
pop
sarl
mov
ss
hlt
out
cmc
and
cld
in
or
aas
mov
faddl
daa
shlb
pop
jle
xor
aas
push
or
cmp
cmp
cld
push
add
into
es
inc
orb
popa
loope
dec
sub
sti
push
int3
jo
mov
pop
mov
movb
mov
mov
outsl
lea
add
jb
out
les
pushf
arpl
fidivrs
jno
repnz
xor
jle
xchg
sub
cmp
lcall
xor
mov
xchg
arpl
jecxz
addr16
sbb
mov
jae
rcrl
ss
in
out
repnz
pop
push
pop
gs
pop
adc
mov
and
adc
aas
insb
shll
mov
push
rcll
outsl
cltd
jno
nop
sbbb
lds
stos
repnz
or
es
push
movsb
sub
dec
andb
or
rol
cmp
mov
sub
pop
dec
cltd
sub
cmpl
div
sub
xor
jmp
jne
add
push
xchg
movb
jl
inc
outsb
or
sbb
inc
sub
out
mov
mov
cmp
xchg
pop
xchg
test
lods
lods
xor
pop
mov
sbb
popa
sbb
repnz
mov
inc
mov
add
fstpt
fldl
idivl
sbb
fistpll
jbe
lret
or
pop
jae
pop
push
or
leave
jp
sub
jns
mov
mov
lock
jno
xor
es
iret
and
inc
lret
mov
jo
adc
cmpsb
mov
pusha
rorb
or
push
cmpsb
inc
ja
outsb
mov
aam
sub
out
dec
sub
xchg
mov
xchg
xchg
int
or
in
mov
xchg
dec
iret
jne
out
jbe
in
push
xchg
popa
call
xchg
arpl
sbb
or
int3
and
mulb
gs
test
add
aaa
into
int3
mov
pushl
xor
ds
sbb
lds
cld
sbb
divb
cmp
and
ds
jb
add
rorl
xor
fwait
jo
add
iret
or
loop
add
mov
bound
mov
mov
push
sti
add
lods
ret
daa
sub
mov
dec
sar
into
scas
cmp
subl
pop
dec
jl
mov
lcall
inc
sbb
pop
sbb
aad
sahf
movsb
jno
aam
lock
add
add
and
lahf
xor
imul
mov
jns
mov
ljmp
and
in
xchg
rcll
push
movsl
popa
mov
adc
jg
inc
push
std
xchg
inc
mov
sarl
movsb
mov
add
mov
adc
enter
xor
cltd
ljmp
inc
jo
popf
lret
and
jge
cltd
lods
in
pop
aas
xor
dec
lret
add
mov
xor
aas
and
stos
fistl
push
lahf
xlat
std
bound
ljmp
lret
xchg
push
push
scas
aaa
pop
sub
adc
inc
hlt
decb
push
pop
and
fisubrl
push
push
xor
pop
xchg
lahf
jg
jo
sbb
dec
dec
imul
sbb
popa
insb
mov
pop
xchg
test
lea
fisubs
mov
mov
popa
je
dec
sbb
and
in
call
dec
addr16
clc
in
jecxz
mov
xchg
cmp
rorl
add
jmp
sub
clc
ljmp
mov
xor
add
loop
cs
inc
mov
iret
jo
cli
inc
jl
dec
rep
ret
and
outsb
pusha
aam
mov
xchg
sub
or
add
mov
add
or
test
ss
outsl
adc
int3
out
jne
mov
fsqrt
stos
sub
jge
pop
ret
je
jmp
inc
rcrl
pop
lret
std
clc
fcomip
repnz
repz
setnp
das
mov
xchg
mov
call
test
and
lods
in
inc
scas
pop
dec
pop
cld
incb
xor
add
xor
jb
push
sbb
sub
ja
js
dec
leave
sub
outsl
push
fwait
ret
lret
or
ret
lock
adc
fsubl
jp
jne
add
int3
mov
add
negl
push
cmp
in
cmpsb
jae
nop
xchg
cmp
ret
cmp
pop
ret
push
jb
jmp
fldcw
mov
mov
cld
sbb
ret
movsl
and
pop
aam
roll
out
pop
inc
jbe
ret
or
jge
out
ja
popa
cmp
jmp
out
sub
mov
adc
and
mov
jl
repnz
cmp
mov
movsb
mov
sbb
inc
add
push
or
pop
pop
stos
sbb
mov
imul
inc
mov
add
in
push
dec
sub
fcoms
adc
jl
mov
jle
std
clc
push
in
aam
adc
shrb
xor
push
dec
cmp
sub
das
xlat
adc
mov
push
fimull
adc
inc
cs
cmp
push
mov
xchg
in
add
adc
xchg
jo
jmp
mov
push
test
sbb
push
sarl
mov
ret
or
outsb
in
cmpsb
mov
mov
or
jl
leave
push
cmp
mov
inc
cs
jae
out
xchg
jmp
pop
or
cmpl
mov
push
gs
push
in
sbbl
shll
sbb
cmp
inc
sahf
jmp
lret
add
inc
cli
loope
jecxz
out
outsb
ret
inc
xor
test
mov
lods
push
push
scas
ret
push
hlt
mov
stos
adcb
mov
leave
push
outsb
neg
icebp
lret
xchg
test
rcl
fdivl
push
ljmp
outsb
pop
insl
sbbb
in
cld
fs
mov
lahf
pop
shll
inc
pop
xchg
outsl
sub
and
dec
out
or
loop
xor
add
outsl
ds
jo
xchg
xor
and
jno
fdivrl
jle
pop
cmp
out
mul
pop
aam
add
xchg
loope
cmp
data16
into
xchg
mov
sbb
cltd
or
mov
jne
or
ret
mov
iret
pop
sub
sub
cs
push
jmp
lcall
int
sbb
sbb
xor
mov
push
lcall
adc
mov
lods
fwait
inc
mov
test
pop
enter
push
mov
inc
inc
fadd
mov
std
test
sbb
stos
mov
fmuls
pop
test
sub
dec
icebp
testl
roll
sbb
pushw
push
repnz
mov
xchg
sbb
stc
dec
fsubl
sbb
clc
inc
push
or
xchg
test
dec
andl
pop
sub
cmp
mov
iret
in
subb
mov
lods
popa
or
insb
sti
test
fidivrs
stc
pcmpgtd
orb
sbb
push
in
inc
insb
mov
cmp
inc
jp
add
fs
xor
dec
lods
mov
mov
add
inc
movsl
ds
mov
cmp
sub
shlb
fdivl
add
jae
fstpl
xchg
iret
jbe
mov
ja
pushf
ss
and
test
movsb
addl
jns
cmp
inc
loopne
mov
scas
fcoml
mov
push
sbb
nop
in
mov
arpl
stos
loop
sahf
insl
lock
cli
lods
pop
das
je
lret
pop
pushf
mov
test
jp
push
dec
inc
mov
fildll
mov
repz
imul
inc
in
inc
pop
pop
xchg
mov
iret
mov
jae
pop
dec
inc
lock
cli
js
dec
mov
push
push
movsl
xchg
fsub
iret
jecxz
mov
cld
outsl
mov
dec
push
fs
cmp
pop
push
divps
push
inc
std
push
jbe
in
adc
sbb
inc
ds
ficoms
andl
insb
pop
pop
aam
cmpsl
andb
sub
out
call
pop
pop
das
int3
push
mov
add
pop
adc
ret
test
lcall
mov
push
cmp
movsb
mov
inc
inc
pop
insl
cmp
repz
sbb
call
xor
dec
pop
or
sbb
or
and
stc
mov
pusha
cmp
sub
aam
popf
aad
iret
stos
add
jl
shrl
push
jmp
xchg
clc
dec
out
or
in
js
mov
jae,pt
or
mov
mov
enter
shl
dec
mov
in
mov
mov
mov
sbb
andl
repnz
or
lret
inc
mov
jno
loop
mov
lahf
sub
ret
inc
fmull
dec
fiadds
in
outsl
xor
xor
xchg
jnp
pusha
faddl
mov
scas
xchg
dec
mov
sbb
push
sub
movsl
outsb
jnp
scas
fdivs
xchg
dec
push
mov
inc
xchg
repz
ret
aam
cmp
outsl
cmpsb
fstl
dec
inc
mov
sbbl
aas
test
push
lods
mov
cmp
pushf
pop
pop
push
test
jmp
add
sbb
call
ds
std
xchg
push
inc
mov
jo
and
or
mov
ljmp
mov
repnz
jmp
lods
xor
in
mov
adc
mov
aad
pop
andl
pop
xchg
dec
sub
push
xchg
push
xor
aas
mov
xchg
aas
mov
fdivrl
pop
divl
stos
fdivr
mov
ds
test
xor
mov
aas
in
in
sub
cld
fs
js
aas
xchg
xor
add
fs
inc
ds
and
and
aad
icebp
jge
push
xor
rolb
sbb
inc
or
iret
inc
adc
push
ds
test
lods
inc
jge
inc
inc
ret
cwtl
filds
bound
daa
je
incb
dec
test
push
lods
dec
int3
ds
outsl
lcall
int3
jge
xchg
cld
movsl
insb
mov
fists
mov
js
pop
inc
add
shrb
mov
inc
pop
and
cmpsl
mov
pop
mov
jecxz
imul
sbb
xor
je
ljmp
dec
rcr
les
or
push
stos
ss
daa
jae
sub
lds
add
movsl
sbb
int
xchg
cmp
push
pop
cli
mov
not
test
dec
push
dec
dec
pop
or
mov
jns
insb
pop
adc
add
push
dec
jp
popf
mov
pushl
leave
mov
aas
push
sahf
push
mov
mov
xor
pop
mov
dec
mov
jns
add
loop
xchg
and
jg
mov
or
arpl
cmpl
aas
pushf
idivl
sbb
data16
stos
push
xchg
xchg
nop
lods
popf
and
mov
jg
decl
ror
cli
xor
fisubrl
push
mov
jmp
enter
cmp
mov
enter
lock
out
mov
jmp
fadd
sub
ret
mov
scas
fs
dec
xchg
aad
push
lret
bound
das
ret
ljmp
adc
sbb
sbb
dec
xlat
mov
insb
inc
and
sar
call
push
arpl
and
xor
and
subb
orb
mov
mov
jmp
call
jmp
pop
movsb
nop
sbb
xchg
hlt
rolb
je
and
fisubl
mov
mov
mov
cmp
dec
aad
add
aaa
xorb
pop
jp
mov
outsb
mov
in
iret
fcomps
pop
push
jo
dec
stos
add
fistps
cltd
popa
mov
push
mov
and
lea
ficomps
int
addl
stos
cmp
shl
sbb
mov
jo
cmp
dec
add
cmp
push
cltd
mov
add
sbb
in
cmpsb
mov
cld
aaa
cmpsl
out
or
inc
adc
mov
pop
push
shlb
sti
loop
xchg
stc
push
dec
adc
jecxz
or
jle
movsb
dec
call
ja
mov
jp
pop
arpl
push
dec
jg
stos
jbe
divl
sub
mov
cld
add
xor
or
cld
aam
fs
mov
pop
adc
loop
mov
fs
insb
push
push
dec
shl
and
mov
sub
ret
ud0
imul
xchg
pop
aad
mov
cmp
push
das
int3
loopne
out
lods
lret
fdivrl
inc
cmp
cwtl
add
mov
rcll
mov
and
lcall
sub
inc
xchg
inc
ret
icebp
push
dec
sbb
jge
xchg
cmpsl
pop
mov
rcrl
jle
hlt
mov
out
cmpsb
idivb
imul
sbb
popf
in
test
jge
sbb
inc
in
or
aam
mov
pop
cltd
aaa
pushf
rcrb
test
push
pop
xor
xchg
fbld
stos
and
push
ja
cmc
and
popa
test
call
add
and
xor
rcll
mov
sub
inc
cwtl
and
lahf
jmp
insb
push
xchg
pop
shlb
sbb
adc
mov
enter
jg
jp
out
fisubrs
jge
stos
mov
pop
sti
stc
or
pop
cmp
sub
inc
in
add
daa
testl
sbb
inc
sub
insl
push
lods
outsl
add
pop
pop
int
xchg
loop
cld
int3
insb
sbb
xchg
fs
mov
dec
ljmp
stos
dec
ds
imul
mov
inc
and
mov
enter
mov
cmp
lods
iret
ret
sbb
rorb
ret
jns
dec
or
mov
mov
clc
sub
inc
je
fdivrp
mov
push
out
xor
and
out
ja
jg
or
pop
inc
mov
lea
das
aaa
mov
dec
mov
mov
and
mov
mov
xor
xor
adc
xlat
rol
push
adc
or
mov
mov
push
xchg
mov
mov
ret
jecxz
add
inc
pop
jmp
in
js
push
cli
pushf
fmuls
jle
lods
pop
cmc
xchg
not
mov
xorb
addl
and
mov
xchg
add
inc
lds
ljmp
test
sbb
mov
cli
shlb
in
inc
lock
inc
or
das
out
dec
adc
enter
test
mov
shll
leave
clc
mov
mov
push
cmpsl
xor
test
sub
enter
jnp
add
rol
lea
xor
jmp
jmp
xlat
mov
jne
lods
mov
lods
addr16
pop
pop
and
pushf
push
out
roll
stos
push
js
ds
into
xchg
rcr
in
push
bound
es
lock
scas
dec
notb
repnz
and
stc
or
je
lods
jl
daa
push
mov
call
lahf
xchg
lods
aam
in
push
fldz
mov
add
mov
push
repnz
add
call
push
loopne,pt
push
and
iret
ss
sub
adc
mov
mov
jle
int3
flds
dec
mov
jmp
and
cld
cs
sbb
repz
fmuls
out
inc
and
int
outsl
les
in
mov
into
push
pusha
jecxz
cmp
js
xchg
mov
popf
cmc
jecxz
notl
hlt
adc
xor
fnstsw
bound
adc
and
jp
jmp
outsb
repz
add
adc
movsl
xor
sbb
sbb
mov
or
sbb
jnp
std
mov
jp
jle
incb
je
outsb
rcl
and
stos
lods
mov
sbb
push
jl
push
repz
pushf
scas
dec
adc
cmp
imul
push
hlt
add
cli
xor
mov
cmc
movsl
mov
pop
fisttps
ja
das
insl
imul
scas
lahf
loop
lds
pop
rorb
adc
push
cmp
lret
es
mov
jae
or
je
test
sub
sub
xor
outsb
sbb
xchg
dec
sbb
into
outsb
and
fstpt
rorl
fs
cltd
mov
jb
stc
movsl
pop
mov
sbb
push
pop
jg
ljmp
mov
inc
into
das
sti
test
repz
je
cmpsl
pushf
pop
scas
pop
xchg
lcall
sbb
les
sbb
lcall
mov
jecxz
subb
pusha
mov
lret
loope
fadd
jae
sbb
sti
and
xchg
sarl
and
loopne
mov
push
jne
insb
leave
mov
mov
cmpl
sub
out
push
fsubl
sti
mov
mov
movsl
in
std
sbb
lret
sbb
pop
add
inc
jns
aaa
push
push
shlb
lea
sub
jnp
out
xchg
int
xchg
jne
scas
out
mov
sub
mov
lock
js
add
adc
lods
out
lods
inc
mov
push
fildll
into
mov
int
nop
enter
adc
movsb
push
fmull
push
movsb
daa
mov
mov
test
pusha
out
int3
mov
jp
mov
inc
adc
stos
ja
mov
pop
or
lret
outsb
mov
dec
jecxz
test
data16
inc
hlt
push
or
mov
pop
or
mov
hlt
dec
dec
jle
hlt
ljmp
push
sub
mov
dec
out
xor
dec
mov
ss
mov
dec
pop
fstpt
inc
lods
lcall
xor
xor
xchg
push
out
sub
test
test
push
jmp
cwtl
aad
in
and
add
adc
imul
repnz
push
scas
push
aaa
xor
jae
mov
jmp
xchg
jecxz
xor
push
xor
stos
jbe
ljmp
jns
push
or
mov
sub
or
repnz
push
pop
sbb
fwait
das
adc
and
inc
mov
and
xchg
loope
lret
pop
or
out
sub
inc
adc
pop
mov
frstor
sbb
or
shlb
inc
mov
js
call
clc
mov
mov
xchg
neg
out
addb
or
repnz
outsb
pop
clc
dec
mov
adc
jae
push
cwtl
mov
push
insb
pop
push
pop
jmp
in
xchg
call
cmp
nop
jo
sarl
out
jb
xor
mov
inc
or
call
xchg
call
or
clc
lods
repz
mov
inc
add
repz
outsb
mov
sub
xlat
jp
and
push
outsl
adc
lret
push
cmc
mov
xchg
xchg
lret
rorb
arpl
mov
lret
xchg
int
and
xlat
addr16
in
and
add
jno
add
push
or
jae
aam
stos
mov
xor
scas
pop
dec
pop
xchg
pop
ja
mov
sbb
pop
jno
jno
data16
fsubs
sarl
in
mov
xor
loop
xor
jg
mov
push
lret
mov
xchg
push
or
pop
cmpsb
lea
add
jge
dec
mull
xchg
in
jecxz
std
inc
and
mov
mov
sbb
in
mov
dec
insl
fmuls
cmp
pop
or
fwait
leave
js
shll
popf
inc
inc
jno
push
jge
enter
int3
sbbb
inc
je
movl
jnp
in
cs
sub
repz
cmp
daa
inc
int
nop
push
xor
push
mov
ret
jle
or
ret
aaa
mov
pop
out
out
dec
test
or
inc
cs
int3
es
add
xchg
jne
or
mov
mov
sahf
out
hlt
sbb
mov
push
arpl
ja
push
pushf
out
jecxz
push
lods
clc
mov
aas
jg
cwtl
mov
jmp
adc
ds
mov
int
daa
push
js
andb
out
outsl
loope
test
fmuls
dec
add
iret
arpl
fsubrs
pushf
dec
lds
lea
jl
stos
fisttpl
je
aad
int3
jne
mov
and
shr
mov
enter
adc
and
inc
shlb
inc
xchg
inc
lods
xchg
jbe
xchg
clc
into
push
sbb
notb
stos
dec
std
pop
xchg
ret
mov
push
icebp
dec
mov
cs
sub
mov
mov
inc
mov
mov
mov
ja
rdpmc
fdivl
ss
mov
test
jbe
hlt
int
outsl
jns
jnp
pop
or
xchg
stos
xchg
movsb
outsb
jbe
lods
fldt
adc
mov
dec
push
sub
mov
rcrb
jg
fildl
cli
pusha
test
ret
push
stc
ret
inc
jnp
and
jno
cltd
push
loop
push
mov
add
mov
in
mov
fstpl
ficomps
and
call
call
nop
arpl
ss
inc
dec
dec
pop
mov
outsl
or
xchg
stos
cltd
clc
gs
dec
aas
and
int
cmpsb
sub
imul
daa
mov
mov
xchg
xchg
and
lods
mov
adc
dec
add
inc
out
sub
sbb
mov
mov
or
sbb
mov
inc
imul
pop
sub
inc
lock
inc
outsb
and
fnstenv
arpl
insl
int3
aad
push
orl
shr
in
add
test
cmc
pop
xchg
mov
mov
ja
lahf
adc
lods
ljmp
and
push
jp
sbbb
push
xlat
call
fmuls
pop
xlat
xchg
fbld
scas
pusha
push
daa
inc
ja
jle
sub
das
or
xor
pop
sahf
and
xor
push
fisttpl
lcall
movsb
shl
mov
popa
push
mov
call
scas
lock
dec
test
xchg
aas
dec
push
push
push
or
mov
dec
popa
add
jns
jnp
mov
ret
xchg
mov
pop
rcr
lock
mov
rcr
cmpsl
pop
dec
cmp
cld
add
xor
mov
clc
iret
dec
dec
or
cli
or
add
daa
sbbb
rcrl
mov
inc
jg,pt
out
xor
loopne
mov
inc
mov
xchg
push
adc
fcmovnbe
fstpt
mov
xchg
inc
outsl
out
cwtl
mov
insl
aam
inc
int
mov
imul
xchg
push
nop
fst
jns
ljmp
xchg
mov
xchg
es
sub
dec
dec
sub
idivl
and
inc
or
jle
adc
popa
mov
inc
pop
mov
and
jo
cmp
std
dec
icebp
mov
mov
jl
dec
pop
mov
jnp
call
mov
xchg
movsl
shlb
lock
negl
mov
cmp
js
repnz
ret
jne
fldt
push
cmpb
mov
mov
pop
xchg
push
pop
roll
jbe
fcomps
and
lock
and
and
and
mov
xor
leave
and
sbb
lock
and
pusha
popf
bound
in
je
xor
in
jno
fwait
pop
test
int3
pop
jle
out
out
and
cmp
cld
xor
fdivs
sahf
movsl
pop
ljmp
push
pop
mov
insl
add
les
test
and
lea
jmp
std
dec
xor
add
sub
daa
std
mov
shll
lds
in
inc
into
dec
pop
push
stc
pusha
and
xor
fstps
push
pop
btc
ss
jns
xchg
jno
push
into
fldl
jle
jns
xchg
xchg
aas
out
add
push
and
loop
add
xchg
pop
stc
jnp
adc
fwait
mov
xchg
xchg
sbbb
roll
push
test
pop
mov
lea
xchg
idiv
mov
adc
mov
fbld
lods
fildl
data16
push
mov
dec
pop
call
jns
xchg
je
scas
data16
jae
cmp
push
push
mov
lcall
push
or
and
and
sub
xor
pop
cmp
shrb
lahf
xchg
dec
dec
popf
or
push
lods
fcoms
fildll
int
fwait
out
mov
adc
adc
cld
and
pop
xor
sbb
pop
pusha
ss
dec
lret
mul
inc
jecxz
push
add
jnp
push
int3
out
mov
jno
inc
xlat
sti
cmp
pop
xchg
jp
pop
xacquire
or
shlb
pop
sub
cs
stc
dec
add
push
das
xchg
mov
inc
test
leave
nop
idivb
movlps
pop
lods
pop
in
ret
push
xlat
popf
mov
into
rol
ja
testb
mov
lret
cmp
push
pop
sub
sbb
mov
mov
jbe
sbb
popa
das
hlt
insl
adc
in
ss
mov
inc
popf
mov
jmp
rorl
jae
out
int
imul
add
fldl
sbbb
sbb
lods
iret
dec
add
mov
push
pop
sub
ss
jae
xchg
xchg
mov
xchg
sbbl
mov
mov
lcall
js
push
sub
mov
push
adc
sahf
pop
repz
test
dec
repz
mov
jecxz
mov
dec
jbe
sbb
daa
je
pusha
sub
push
ret
ret
aam
sbb
cmp
cmc
fistps
push
inc
add
mov
mov
daa
and
mov
push
xchg
push
add
lret
and
lret
add
xchg
insl
push
jmp
test
stos
cmp
shlb
cmp
popf
inc
repnz
dec
xor
xor
xor
xchg
popa
xorb
add
xchg
xchg
in
das
bound
pop
pop
lods
jns
scas
jno
mov
mov
cli
jmp
or
cmp
sub
leave
outsl
roll
cltd
push
push
inc
sub
pop
cmc
rcr
stos
xor
push
rcrb
outsb
push
cmpsb
movsl
mov
mov
popa
push
and
out
cltd
xchg
call
pop
or
arpl
inc
and
xlat
fucomi
lahf
arpl
ret
xchg
push
js
or
pop
js
psraw
les
pop
add
sbb
push
or
sbb
jb
or
and
arpl
ficoml
sub
push
ja
sub
mov
outsl
xor
cmp
adc
enterw
pop
xor
stos
lods
out
mov
cwtl
sahf
sbb
in
test
dec
pop
loope
addr16
into
inc
mov
std
clc
mov
je
xchg
aad
sbb
out
lahf
add
mov
adc
clc
test
mov
xchg
xor
lcall
mov
lahf
outsl
aad
loope
jo
pop
mov
push
adc
sbb
dec
fcomip
mov
cmpl
push
dec
push
into
xlat
lods
movsl
xor
jne
lods
jnp
dec
filds
ljmp
xor
push
push
mov
sarb
pop
les
cmp
aam
push
pop
push
or
ficomps
pop
mov
and
mov
and
add
add
jmp
xor
repz
xor
repz
stos
outsl
enter
push
cmp
mov
sbb
mov
jno
clc
cmp
push
pop
std
cmp
pushf
pop
pop
call
popf
idivl
jg
ret
gs
in
xor
lods
xlat
and
and
push
xlat
movsl
xchg
dec
or
neg
pop
or
cmp
push
and
lea
imul
loope
push
out
shl
cmpsl
repnz
xchg
pop
add
aas
jl
orl
add
fucomp
dec
xchg
lcall
aam
push
pop
sbb
sahf
dec
testl
push
inc
seta
inc
lcall
mov
test
loope
out
adc
addr16
ret
dec
sbb
arpl
in
push
mulb
lods
sub
ljmp
ret
mov
jnp
add
out
test
add
stc
popa
pusha
repz
mov
mov
rol
adc
push
jle
pop
cmpsl
add
jmp
call
fs
push
cltd
jmp
lret
in
jnp
out
jg
jnp
ja
lods
mov
nop
xor
xchg
jg
sub
lock
xlat
adc
jge
aad
dec
enter
sub
stc
jae
dec
popa
pop
or
rorb
fcom
incl
fwait
outsb
in
inc
push
pop
sbb
int3
jmp
push
repz
aam
movsl
call
xchg
rcll
or
or
push
mov
inc
add
daa
or
lret
int
mov
test
addr16
test
test
popf
push
daa
mov
cmpsb
xchg
xlat
insl
and
mov
outsb
xchg
pop
mov
or
push
add
shlb
dec
rcrl
dec
jle
leave
in
test
testb
mov
scas
jge
dec
in
cmc
cltd
test
and
jb
adc
cmp
cmp
sub
xchg
pop
outsl
inc
xor
cmpsb
dec
sub
test
push
repnz
adc
rcrl
xchg
push
add
dec
popf
ljmp
or
jae
inc
cs
iret
push
adc
out
push
ret
popl
daa
hlt
lods
dec
mov
adcb
scas
cmpsb
test
inc
add
lods
and
out
cs
sti
mov
dec
mov
lret
add
into
gs
jno
pop
int
repz
inc
jmp
aad
sub
pop
cmp
arpl
lds
xor
insb
sub
loopne
jb
movsb
add
mov
je
push
adc
fadd
out
lea
nop
sub
pop
pop
pop
adc
xlat
movsl
dec
dec
cli
stos
mov
mov
mov
lret
jp
xchg
movsb
push
lods
mov
imul
sbb
mov
mov
xchg
out
mov
mov
push
xor
lock
push
jb
iret
push
xor
insb
jle
fiaddl
and
aam
mov
jnp
test
or
add
fistl
xor
js
push
mov
pop
push
or
push
pusha
sar
mov
lret
loop
sub
sub
pop
daa
dec
in
inc
jb
mov
mov
insl
cwtl
pop
sub
inc
testl
or
pop
and
add
xor
jno
add
mov
shrl
mov
data16
lret
cmp
pusha
rcll
sahf
mov
scas
movsb
jne
xchg
hlt
outsl
mov
inc
cmp
mov
inc
adc
pop
nop
jnp
les
or
sbb
lret
icebp
jae
xchg
xchg
hlt
mov
add
pop
stos
mov
clc
mov
sarl
push
out
add
cs
cmc
outsb
jns
mov
cmc
xchg
and
ret
fs
scas
mov
inc
inc
push
test
xchg
xchg
addb
add
inc
les
ret
and
enter
cmpsb
sbb
or
data16
xchg
xorl
jo
mov
sub
push
insb
bound
add
add
add
and
jo
lret
or
pushf
mov
imul
add
mov
sub
xor
insb
fimuls
jmp
fidivs
sbb
mov
adc
pop
aaa
inc
pop
add
or
insb
mov
lods
mov
ljmp
repz
inc
test
adc
xor
es
cs
mov
mov
and
push
jbe
and
les
insl
nop
fsts
pusha
shrl
mov
les
sbb
sub
leave
or
push
mov
ret
mov
cmp
mov
push
int
or
aad
inc
out
in
notl
inc
jl
or
iret
pop
ficompl
lea
sub
pmulhw
jae
lods
dec
leave
loopne
dec
adc
stc
lods
lds
xor
loope
scas
and
bound
add
cld
fsubl
and
cmp
pop
jge
xor
roll
test
leave
sbb
pop
out
clc
out
in
lret
pop
push
xor
call
mov
lock
jbe
add
lret
mov
insb
and
out
and
mov
and
stos
xchg
ud2
pop
je
mov
call
add
fstpt
dec
in
jno
push
push
dec
pop
pop
xor
and
je
push
fwait
jno
xlat
loopne
jle
add
sub
mov
mov
leave
stos
je
shrb
jmp
jo
leave
xchg
icebp
cli
cs
lahf
mov
into
cmpsb
add
test
test
push
pop
jno
ja
pop
scas
sub
daa
mov
lods
add
divl
sub
lods
mov
pop
cmp
clc
xor
outsl
dec
call
add
pop
xchg
popa
insl
push
inc
bnd
mov
and
push
sbb
pop
pop
fsubrp
jb
out
push
cs
rcrb
stc
or
mov
pusha
xchg
xchg
sbb
ja
loopne
in
mov
ja
mov
mov
imul
fwait
xor
mov
inc
adc
adc
lods
pusha
mov
clc
and
addr16
call
lcall
push
stos
mov
daa
cmpsb
xchg
cli
jo
lcall
out
daa
lret
inc
xor
xor
scas
push
std
js
jbe
pop
adcl
and
cli
bnd
cmp
cmpsl
inc
jmp
xchg
fldz
mov
mov
ffree
in
lahf
pop
popa
aam
lret
mov
jno
in
or
leave
test
jp
mov
popf
pop
sbb
jmp
inc
icebp
incb
pop
xchg
repnz
fyl2xp1
test
fwait
roll
je
aaa
icebp
shlb
sbb
enter
inc
ljmp
les
xor
cli
push
outsl
pop
aam
cmp
jnp
into
or
sub
mov
push
insl
dec
pop
inc
cmp
pop
adc
dec
jmp
xchg
mov
add
test
fdivrs
push
xor
mov
enter
out
fistps
ret
addl
lret
push
dec
mov
cmp
out
stos
das
inc
in
jnp
in
enter
sub
lahf
xchg
mov
add
sub
shl
ficoms
paddb
pop
mov
xor
xor
shll
sub
sbb
cmpsb
popf
mov
push
out
bound
clc
jg
addr16
xor
jo
imul
and
fisubrl
xor
mov
ror
and
out
push
jo
ja
push
xchg
mov
push
add
cmpl
popa
xchg
fucom
sahf
mov
mov
sbb
mov
pop
sbb
add
loope
subb
dec
and
inc
pop
lret
ljmp
add
jnp
das
push
sbb
xchg
sahf
jecxz
lahf
cmp
cs
inc
data16
xchg
pop
inc
dec
sub
mov
fdivr
push
lcall
rcll
insb
stos
jecxz
inc
cmp
sub
daa
xchg
insl
cmp
gs
hlt
mov
mov
xchg
push
add
sahf
and
cmc
aad
add
dec
cmpsl
inc
rcr
repnz
lock
dec
aad
sub
loop
outsl
pop
jecxz
sbbb
negb
dec
outsl
testb
sub
fcompl
pop
adc
push
inc
sub
stc
cmpl
aaa
or
adc
and
inc
inc
mov
cmp
movsl
test
std
and
or
xchg
xchg
push
sar
pop
mov
int3
mov
test
sub
fwait
mull
xchg
mov
dec
enter
sahf
xchg
xor
and
jg
push
pop
ja
adc
and
mov
leave
test
lret
or
ffreep
push
or
stc
loope
or
pop
jo
test
out
in
xchg
call
jo
xor
xabort
mov
or
jmp
cmpsb
fstps
movsl
fisttpll
and
push
adc
mov
push
sbb
cltd
out
jbe
mov
fs
sbb
popa
xchg
iret
push
inc
sub
add
sub
or
mov
dec
in
int3
mov
int3
cmp
push
dec
inc
jb
push
enter
lcall
jmp
mov
icebp
xchg
out
das
xlat
xlat
test
push
out
or
push
mov
daa
shll
rcrl
in
add
sbb
jb
scas
jg
jg
lret
fsubrl
out
mov
inc
dec
pushf
or
bound
jl
sbb
outsl
xor
sbb
jns
pop
cmp
jmp
test
dec
mov
mov
xchg
out
cmpsb
shlb
pop
scas
mov
fcomip
sarb
cmp
cwtl
jo
cli
int
mov
jecxz
pop
in
sub
mov
ja
inc
xor
mov
xchg
and
pop
push
into
jo
pusha
pop
xor
mov
dec
dec
mov
push
lods
loope
push
xor
popf
xor
arpl
cmpsl
cmp
stos
adc
shl
xchg
subl
fstl
pop
pop
mull
sti
adc
xchg
test
sub
adc
mov
mov
roll
inc
shlb
imul
adcl
add
adc
mov
repz
jae
jg
cmp
xchg
and
push
incl
aas
jge
sub
hlt
aas
jbe
dec
or
rclb
mov
test
fisttpll
mov
loope
leave
cltd
or
ljmp
dec
or
or
cmpsb
sti
into
and
sub
imul
fcoml
add
clc
jmp
sub
mov
or
mov
dec
repz
std
adcl
mov
sbb
scas
out
push
sbb
andb
jns
or
ja
mov
call
insb
cld
sbb
aam
stos
xchg
inc
pop
int
lds
das
mov
xor
stos
jl
push
cmp
pop
mov
ljmp
xor
lds
sub
pushf
mov
xchg
scas
push
ret
jg
mov
dec
inc
fbld
out
pop
push
rol
test
push
ds
cmp
add
sahf
cmp
mov
push
mov
jo,pn
xchg
test
dec
insl
jb
stos
test
into
in
pop
cs
call
rcr
push
push
fisttpll
shlb
test
lods
into
repz
add
or
mov
xlat
push
lea
add
inc
mov
andl
jne
push
or
mov
leave
or
aas
cmp
cwtl
or
mov
scas
iret
shrb
xchg
and
cwtl
inc
scas
inc
lret
movsb
adc
subb
sub
ljmp
cmp
sti
mov
mov
mov
cmp
pop
cmp
xchg
je
push
aad
out
xor
cmp
or
into
adc
push
xor
mov
adc
decl
orb
dec
pop
sub
fisubrs
xchg
cmc
xorb
insb
inc
cmp
mov
lods
mov
stos
leave
cmp
and
mov
loopne
mov
jecxz
dec
cwtl
loope
mov
sub
addr16
out
test
je
inc
or
sbb
cmp
pushf
enter
push
and
pop
aam
pop
xor
into
je
shr
xchg
push
mov
mov
or
or
mov
in
or
sbbb
lcall
mov
xorl
jge
js
adc
cmp
jmp
aam
das
inc
jp
lret
xlat
jb
rorb
add
hlt
xchg
mov
pop
cwtl
imul
adc
out
sbb
pop
cmp
mov
sahf
sub
stos
fsub
frstpm(287
daa
sarl
in
xchg
mov
jmp
imul
daa
cltd
push
add
lcall
push
push
jnp
xchg
sti
ljmp
inc
rcl
je
lods
repnz
inc
int
neg
mov
add
xchg
lea
ljmp
inc
jae
ret
adc
outsb
xor
pop
jnp
inc
dec
cmp
inc
shl
es
arpl
mov
bound
jne
or
repz
rcll
jns
mov
or
add
loopne
sti
dec
daa
ror
test
lcall
adc
push
sub
scas
pop
mov
cmp
mov
push
insb
jb
inc
add
aam
pop
lock
sub
movsl
sahf
cli
es
fcom
call
mov
push
rcr
inc
sbb
test
mov
add
out
dec
fsubrs
mov
xchg
ljmp
pop
loop
fstpl
pop
lds
sbb
push
fimuls
or
sbb
btl
lock
cli
mov
pop
dec
mov
das
xorl
adc
leave
inc
popf
dec
mov
call
clc
dec
inc
mov
mov
cmp
test
stc
jle
jns
negb
mov
test
xchg
ds
add
push
bound
and
fldt
in
movsb
cltd
mov
insb
push
or
push
ret
xchg
inc
adc
sbb
pop
aaa
and
mov
adcb
sub
sub
xor
idivl
call
dec
ds
jae
xchg
sbb
or
loope
xlat
popa
add
xchg
jbe
sahf
cmpsb
sbb
lahf
cmp
lock
jl
hlt
inc
loopne
inc
lds
jns
or
lret
bound
fdivrl
sbb
stos
ret
rorb
add
int
insb
mov
add
insl
sbb
cltd
cmp
scas
aaa
shr
test
mov
fdivrl
mov
jg
jmp
lods
cmpsb
xor
les
add
cli
dec
jmp
hlt
adc
pop
idivl
cmpsl
xchg
xchg
sub
mov
test
adc
adc
jl
ljmp
mov
or
mov
mov
sahf
cmp
dec
pop
repnz
sar
in
pop
mov
daa
aaa
cmp
jmp
pop
add
repz
jno
insb
push
es
test
mov
pop
mov
push
adc
sbb
and
cmp
dec
jb
fists
stos
pusha
or
push
aaa
jle
cmp
or
xchg
into
xchg
enter
jecxz
in
push
lods
adc
jle
add
imul
or
loope
xor
pop
jle
add
push
fmuls
mov
inc
mov
cmovne
mov
xchg
push
idivl
dec
popa
hlt
push
adc
sbbl
pop
scas
roll
ds
and
daa
addb
aam
lods
mov
pop
push
add
xchg
xchg
popa
or
push
cli
mov
test
cmp
mov
mov
lds
sub
or
imul
sub
or
dec
jbe
jmp
mov
mov
adc
outsb
sub
lods
aaa
mov
dec
cmc
lcall
outsl
incb
test
lea
mov
xor
dec
inc
pop
sub
stc
or
inc
push
inc
adcl
or
add
or
and
add
in
stos
imul
add
loope
pusha
leave
je
dec
aas
push
and
inc
adc
pop
mov
pop
pop
jns
xchg
dec
mov
or
xlat
and
test
adc
and
subl
sbb
cli
adc
cmc
lahf
cs
fsubrl
cwtl
cmp
std
aam
bsf
stc
sarb
nop
shl
fsubr
cwtl
inc
je
out
mov
push
inc
stos
jae
mov
les
mov
in
or
sub
xlat
lea
lds
and
gs
jl
sbb
push
dec
es
mov
adc
push
pop
xchg
stos
pop
or
xor
lods
xchg
or
mov
add
xchg
pop
outsl
into
xor
lods
mov
mov
xor
inc
sbb
inc
call
push
out
repz
push
pop
outsb
pop
mov
in
add
inc
xorl
adc
sbb
mov
out
push
das
hlt
and
mov
gs
mov
sub
cld
push
scas
jne
cmc
xchg
jo
sub
outsl
dec
int
pop
jg
std
clc
jb
sub
mov
inc
push
mov
jecxz
inc
incb
jp
bound
cmp
addl
mov
aaa
jmp
xor
sbb
pop
adc
ret
push
dec
bound
xor
stc
cmpsl
test
daa
mov
shrl
push
call
adc
pop
aas
and
gs
out
outsb
stos
inc
mov
xlat
insl
andl
rol
test
add
push
sbb
mov
cmp
clc
fwait
inc
outsl
pop
cmpsb
popl
dec
and
sub
int3
sbb
shll
stos
or
pop
movsl
jae
mov
add
mov
mov
mov
aaa
cwtl
push
cmp
test
cmp
incl
adc
popl
lods
inc
scas
das
pushf
data16
out
pop
mov
push
adc
pop
adc
jnp
xlat
and
mov
push
scas
mov
jnp
mov
adc
fcompl
mov
add
cld
inc
xchg
lahf
scas
mov
pop
pusha
or
xchg
in
push
in
fwait
andl
ds
mov
xchg
ljmp
movsl
jecxz
xchg
mov
dec
das
aam
fistpll
scas
jp
mov
dec
inc
dec
cli
ss
aam
xor
and
and
mov
cwtl
xchg
js
xchg
les
or
or
mov
sub
fidivrs
fsubrl
sbb
cwtl
jmp
mov
push
fcomps
dec
dec
inc
pop
adc
out
in
rcll
stos
test
pop
dec
lods
or
lret
pop
adc
lret
mov
mov
movsb
mov
loop
mov
dec
jle
popa
push
or
mov
std
cwtl
jle
push
loope
add
mov
mov
sub
out
mov
xor
jnp
inc
es
sub
pop
stos
add
mov
mov
rcll
rorl
pop
or
pusha
push
out
shlb
and
ror
int3
jno
jae
in
fimull
adc
dec
inc
jno
push
sti
cmpsl
enter
dec
xchg
inc
add
sahf
cmp
out
je
mov
push
pop
xchg
xor
xchg
out
in
mov
sbb
test
mov
cmp
scas
les
insb
in
xchg
movsb
test
loope
repnz
cs
sahf
mov
ljmp
sub
cmp
sahf
lea
test
lret
pushf
das
dec
dec
xchg
mov
rcrb
mov
daa
dec
addr16
dec
push
je
push
xor
xor
push
jp
pop
rolb
stos
ljmp
imul
dec
push
clc
xchg
mov
movsb
ror
push
jbe
ret
ret
adc
repz
dec
sahf
in
pop
pushf
repnz
sbb
aaa
xchg
cmp
shlb
and
lahf
pop
xchg
call
xchg
movsb
fiaddl
test
sti
mov
cmp
and
rolb
mov
mov
sbb
xor
adc
xor
cmp
repnz
or
sub
popa
out
out
cld
push
sbbb
leave
pusha
mov
lods
ja
xor
pop
repz
xchg
loopne
dec
mov
addr16
xchg
xchg
mov
icebp
inc
ficompl
lds
sahf
mov
nop
pop
lods
sub
call
stc
xor
mov
push
ss
lock
shlb
sub
push
cli
or
xchg
add
std
stc
cmpsl
cmp
xchg
jns
insb
jecxz
lods
push
pop
addr16
jecxz
or
dec
sbb
jbe
and
fsts
dec
xor
xchg
repz
mov
adc
scas
mov
sbb
outsb
lods
or
std
lahf
mov
imul
out
lods
add
daa
mov
fisttpll
adc
imulb
mov
sbb
orb
jb
in
lds
xchg
hlt
arpl
push
gs
cmp
leave
sub
mov
xchg
jmp
inc
aaa
inc
and
pop
mov
push
test
xchg
stc
cltd
sbb
shr
jb
and
rep
mov
dec
movsl
or
adc
inc
daa
clc
scas
fs
aas
cli
ret
cmp
push
repnz
movsl
sbb
scas
jo
scas
mov
inc
in
push
mov
sbb
outsb
add
sub
scas
aad
dec
pushf
cltd
pop
lret
test
push
mov
push
call
dec
icebp
call
test
das
sbb
sbb
dec
pop
outsl
dec
aad
cmc
adc
fs
or
stos
push
jg
stos
sbb
es
jmp
xor
ss
push
push
and
inc
jecxz
adcl
inc
arpl
push
outsb
xor
fimull
movsl
sbb
mov
dec
xor
xchg
idivl
lds
inc
add
xchg
and
aaa
sahf
mov
scas
xchg
and
pop
enter
je
ljmp
int
mov
aaa
leave
sbb
les
call
xchg
hlt
mov
xchg
mov
cmpsb
inc
roll
mov
push
fdiv
lret
test
movsl
inc
std
add
dec
xchg
dec
leave
mov
mov
xlat
cmc
cwtl
in
dec
mov
es
popa
push
adc
add
and
sbb
jb
rorb
leave
gs
sub
lret
stc
push
jp
in
cmp
stos
das
cmp
cmp
cmp
jb
jge
adcl
aaa
xor
inc
rorb
mov
stc
out
fimull
imul
mov
rcl
push
repz
cmp
mov
shl
cmp
lcall
mov
xchg
loopne
in
cli
sbb
or
push
loopne
xchg
jecxz,pn
out
push
sbb
imul
pusha
lods
stos
cmp
enter
and
pop
in
stos
mov
popl
das
add
inc
es
jge
seto
lret
hlt
mov
adc
cli
xchg
stc
dec
les
xchg
jle
cmp
outsb
push
jo
cmp
dec
loope
push
hlt
mov
test
and
dec
cmp
pop
jl
cmp
lret
mov
pop
clc
ret
mov
or
aaa
push
add
ret
outsb
sbb
xor
fs
dec
cli
aaa
lret
xor
ficomps
lret
orl
cmp
dec
das
mov
stc
or
mov
int3
in
loope
pop
pop
fcmovu
in
pop
addr16
dec
rcrb
fstpt
mov
sti
mov
aas
out
sahf
insl
cltd
fcom
insl
mov
jmp
hlt
sub
jle
cmc
loopne
fisubs
aaa
dec
test
std
daa
sti
cmpsl
js
sahf
je
mov
sti
mov
aas
out
cmpsb
loopne
shrl
aad
imul
lret
lods
stos
data16
jo
mov
loop
push
icebp
inc
mov
das
lcall
data16
xchg
pop
shl
rcrb
adc
jne
das
decl
sarb
sub
lcall
mov
in
add
call
push
clc
push
mov
lret
cmpsb
ja
out
push
std
mov
xchg
les
or
mov
or
addr16
lods
loopne
pop
pop
loop
leave
jno
mov
es
mov
push
cmp
mov
mov
stos
dec
or
mov
sbb
enter
stos
push
ret
adc
sbb
sub
popa
test
not
jb
mov
or
hlt
or
into
or
push
cmp
and
pop
push
fs
hlt
sbb
add
mov
cs
jae
dec
dec
or
push
jbe
xorb
negl
out
xor
sub
fcomps
fdivrs
inc
cmp
mov
pop
hlt
xchg
out
addr16
ds
pop
lds
push
pop
push
jbe
push
sbb
add
jl
aad
sbb
sarb
in
out
nop
lea
mov
clc
sbb
push
mov
jo
sti
insl
xrstor
std
push
adc
push
cli
stc
roll
mull
inc
ljmp
jmp
push
jb
fcoml
mov
movsb
inc
xchg
sub
lahf
push
push
push
dec
inc
imul
push
mov
pop
xor
aam
mov
fistpl
xorl
xlat
add
sbb
fmuls
pop
mov
sub
mov
mov
ficoml
iret
mov
xor
xchg
in
xor
adc
out
push
lret
mov
pop
mov
in
enter
inc
imul
bound
into
adc
push
pushf
cltd
popf
pop
test
mov
fcompl
jae
mov
dec
xlat
dec
ds
scas
dec
cld
jmp
arpl
scas
idivb
daa
test
enter
add
cmp
jae
in
scas
inc
jmp
movsb
mov
testl
hlt
notl
lcall
inc
mov
fstpl
icebp
xor
pop
pop
cs
scas
push
push
lds
xor
fsts
mov
push
jge
insb
mov
mov
cli
dec
mov
adc
xchg
inc
xchg
scas
xchg
or
mov
and
ret
nop
jne
push
or
xchg
cmpsb
fists
test
daa
insl
mov
xchg
repz
movsb
das
cmp
hlt
aas
jo
xchg
sbb
add
sub
inc
lods
pushl
stos
sbb
mov
test
jp
push
add
sahf
sbb
xchg
jns
nop
mov
outsl
cmp
movsl
in
fistps
jmp
loop
push
adc
add
jns
mov
in
xchg
bnd
pop
iret
mov
mov
icebp
inc
popf
imul
or
add
mov
lds
decb
and
add
mov
xchg
enter
jg
add
repnz
repz
loop
xchg
addr16
icebp
lods
mov
push
pusha
jnp
mov
pushf
pop
test
pushf
mov
clc
xchg
loopne
in
mov
fildl
in
pop
cmpsl
dec
loope
jo
xchg
push
test
xor
mov
inc
xchg
es
sub
mov
xchg
xsha1
repz
or
movswl
pop
dec
sarb
or
jecxz
ret
push
xor
fiadds
add
pop
and
out
mov
inc
subb
mov
jns
ja
cmp
or
or
into
int
outsl
pop
out
xchg
lret
xor
insb
adc
popf
ret
inc
sbb
in
xchg
push
loop
sbb
pop
fnstsw
cmpsb
mov
fildl
nop
dec
xchg
or
out
fs
xchg
push
cltd
movb
cmp
mov
insb
push
dec
ret
out
cmc
pop
xchg
lcall
mov
mov
fwait
dec
mov
xor
pop
and
dec
push
repnz
popf
lock
xchg
shrb
add
sub
imul
scas
ljmp
outsl
in
insl
shll
test
mov
addr16
xchg
dec
cmc
das
sub
outsb
or
pop
xor
dec
sbb
xlat
repnz
cwtl
leave
jmp
outsl
jb
ds
ret
ret
stos
cltd
cs
xchg
popf
outsb
push
mov
mov
call
and
or
daa
xchg
bound
insl
fsubrl
outsl
add
arpl
sbb
cld
inc
fcmovnbe
mov
lea
sbb
pop
sbb
lahf
jb
cli
dec
pop
mov
jecxz
jmp
dec
dec
les
push
aam
cmp
sbb
sbb
pop
adc
ja
mov
cltd
inc
aaa
into
lock
mov
mov
sbb
add
mov
mov
aam
mov
std
xchg
in
dec
push
sub
xor
lret
xchg
or
inc
ret
out
cltd
iret
in
inc
lret
cmp
out
imulb
pop
orb
mov
xchg
pop
sbb
idiv
add
enter
jb
mov
jmp
jnp
movd
orl
pop
imul
pop
sbb
int
outsl
imul
cli
ss
xchg
adc
push
loop
cmp
cltd
push
pop
lods
popa
lcall
dec
aam
enter
popa
aad
jb
js
mov
push
mov
sbb
pop
mov
pop
aas
je
repnz
jmp
pop
jg
scas
pop
xchg
dec
mov
mov
stos
xchg
cltd
out
or
and
arpl
adc
ret
or
ret
inc
inc
mov
aas
sub
subb
sahf
loopne
aam
stc
fdivl
jns
push
fcoml
mov
mov
sti
stos
xchg
mov
lret
and
lods
mov
and
mov
mov
xchg
pusha
pusha
sub
cwtl
jae
cmpl
sbbb
mov
mov
andb
adc
mov
bound
push
mov
pop
adc
jmp
push
mov
pop
cli
rclb
inc
pop
sub
add
jno
inc
jno
add
cmp
xchg
add
jae
xor
mov
xlat
or
imul
loopne
jno
insb
xchg
out
dec
push
jb
push
cmp
mov
dec
clc
mov
xchg
push
mov
mov
mov
push
push
fldcw
sarb
xor
lcall
sub
into
stos
addr16
fnsave
mov
sahf
in
or
ror
dec
lock
push
mov
dec
cli
ljmp
test
add
out
jl
es
mov
loop
mov
pop
imul
mov
loopne
and
call
mov
pop
push
inc
andl
mov
nopl
lds
inc
cwtl
and
test
mov
lds
xor
inc
mov
xor
or
mov
adc
inc
push
sbb
mov
rcrl
sti
xchg
pop
movsb
sbb
and
jmp
mov
lock
sub
push
sub
add
out
sub
mov
or
inc
push
adc
mov
sarb
cmp
insb
rol
loop
test
and
dec
icebp
loope
cmp
pusha
xchg
out
cmp
mov
aas
push
dec
mov
or
lods
xlat
mov
cmp
in
inc
mov
lcall
in
pusha
and
cs
pushl
push
stos
and
rclb
and
mov
int
in
sub
movsb
mov
les
mov
dec
and
outsl
rolb
mov
leave
xchg
repnz
test
inc
mov
js
dec
sub
add
scas
fs
sti
pop
mov
add
dec
sbb
xchg
pop
dec
gs
sbb
push
mov
insb
sub
xchg
and
shlb
xchg
and
pushf
sub
push
jp
and
mov
inc
dec
lock
add
mov
mov
neg
decb
mov
jbe
ljmp
mov
out
into
aam
fisubrl
jp
adc
mov
add
lods
sar
xor
cmp
cmp
adc
ror
subb
cmpsb
or
inc
stc
je
adc
push
mov
lock
push
out
in
enter
aas
aad
in
dec
les
stc
adc
add
jl
icebp
enter
imul
sahf
stc
es
add
push
loopne
std
fldcw
paddb
mov
adc
add
xchg
sarl
mov
sub
or
mov
pop
pop
jle
jmp
jg
rclb
cmp
adc
jae
ficoms
inc
inc
dec
add
cmc
out
das
inc
rcll
loop
shl
sub
sub
mov
ret
fisubl
add
mov
cmp
xchg
lods
lret
arpl
pop
out
cmp
adc
and
scas
iret
imul
mov
call
aad
cmp
ss
cld
es
loope
jl
data16
push
push
scas
fsts
rorl
inc
lea
stc
rcrb
push
jle
test
ret
shrb
rorl
fst
lahf
adc
cmp
mov
jo
push
in
fs
mov
enter
mov
adc
jno
inc
call
test
sub
pop
pop
int3
mov
mov
pop
xor
or
ret
xlat
push
push
decl
jl
int3
fwait
subl
cmpsb
lea
daa
pushf
inc
sbb
imull
fadds
adc
mov
sti
dec
mov
ljmp
cmc
adc
pop
subl
ss
je
or
jg
sub
int3
imul
dec
pop
ficoms
fwait
mov
and
int
inc
icebp
sub
icebp
push
fistpl
mov
jl
mov
adc
pop
jmp
add
lret
cwtl
data16
push
or
and
mov
sbb
jnp
push
mov
and
out
jns
or
pushf
adc
movb
mov
xor
into
inc
sub
outsl
clc
clc
jecxz
dec
lods
mov
and
in
push
outsb
xor
mov
fcmove
out
in
rcl
cltd
add
and
ss
into
sbb
mov
pop
adc
stc
lds
sbb
adc
mov
addl
subb
shll
add
jb
out
imul
jg
pop
jle
clc
sbb
insb
mov
call
push
das
in
test
sub
dec
jg
push
ss
adc
mov
pop
sti
in
xchg
sub
imul
enter
into
adc
lods
iret
sub
rcrb
and
mov
and
sbb
shll
push
sbb
xorb
adc
adc
cmpsl
mov
enter
stc
inc
mov
xchg
push
aad
mov
mov
mov
int3
xchg
cmp
xor
ret
ret
mov
add
jbe
imul
or
or
inc
in
dec
push
push
imul
aas
loope
jno
dec
jmp
fld
xor
and
mov
pop
push
xchg
outsb
adc
sbb
mov
and
inc
jnp
gs
push
mov
sbb
cmp
mov
pop
iret
mov
lods
push
push
pop
adcb
sub
aam
mov
test
loop
adcb
jnp
iret
mov
cld
inc
mov
ds
out
cmp
or
jmp
ja
idiv
iret
mov
sbb
shlb
mov
mov
or
ret
cmc
repz
lock
lock
cmpsb
cmp
aam
stc
xchg
rclb
fdivrs
adcb
lds
idivl
push
aaa
xchg
das
imull
inc
jbe
outsb
pop
push
sbb
jbe
mov
push
pop
out
or
ss
int3
jae,pt
xor
insl
dec
pop
xchg
pop
dec
jecxz
jae
clc
mov
fnstenv
mov
jb
mov
mov
sbb
loope
test
js
xor
jp
cmpsl
cmp
cmp
and
les
pop
jne
das
push
sub
lods
int3
sub
ret
jnp
fisubl
push
xorb
dec
xor
repnz
cs
outsl
pop
loop
pop
push
sahf
pop
imul
cmp
push
xor
jecxz
sub
insl
push
enter
call
inc
out
xchg
outsb
mov
xor
and
je
iret
jp
fldt
pusha
push
jl
scas
sbb
mov
outsl
imul
mov
push
mov
movsb
pop
jg
popa
push
dec
push
push
arpl
enter
xor
xor
xchg
add
mov
push
nop
mov
mov
push
xchg
lods
ret
ja
add
dec
xchg
subb
xor
jnp
lods
cs
mov
ljmp
test
repnz
dec
ret
xchg
jl
and
adc
cmp
in
lods
repz
jecxz
dec
in
ret
sub
sub
adcb
cwtl
stos
sbb
pushf
out
icebp
xor
into
push
xor
push
cmp
ss
dec
lret
subl
sub
mov
mov
andl
cmp
lret
cmp
sbb
xor
mov
test
hlt
jge
mov
lret
lods
cltd
sub
push
call
bound
pop
cmp
aaa
pop
cmc
sbb
fwait
dec
pop
je
ljmp
pop
jb
sub
sbb
std
std
les
lods
xchg
lahf
int
lret
repnz
pop
ljmp
and
gs
mov
cmpsl
cmp
cmp
sbb
xchg
hlt
cmp
xchg
aas
fdivl
fistps
mov
xchg
nop
bound
push
or
inc
jmp
fnstsw
int3
jb
mov
mov
xlat
inc
lods
lea
sub
jmp
in
test
lcall
leave
cmpsl
in
inc
pmulhw
mov
jmp
cmp
pop
jne
xlat
movsb
dec
int3
or
inc
pusha
jo
arpl
mov
cmpsb
jne
pop
cld
std
test
xor
jle
cmp
in
arpl
pop
fistpl
movsb
sub
popa
mov
lods
mov
in
mov
adc
idivl
div
imul
icebp
cmp
repz
add
divl
inc
jne
adc
adc
sub
cmc
in
fisttps
pusha
out
push
pop
daa
inc
fstpl
cmp
stc
inc
insl
xor
pop
xchg
add
pop
jns
shrb
cmp
jmp
daa
movsl
xchg
adc
ss
lods
loop
lcall
sbbb
add
xchg
jno
push
fnstcw
stc
push
dec
jp
cmp
jge
out
xchg
pop
lret
call
cltd
ret
xchg
cmp
rorl
pop
mov
nop
push
ret
dec
push
mov
lds
bound
leave
mov
repnz
sub
ficoml
out
daa
stc
and
push
scas
jge
and
or
scas
cmp
addw
pop
mov
xor
pop
push
leave
dec
loopne
or
roll
push
sbb
dec
xchg
or
sub
bound
and
ret
fistps
pusha
push
and
adc
inc
push
xorb
dec
jg
jb
cld
mov
xchg
or
adc
insb
adc
mov
out
mov
dec
sub
test
mov
lret
pop
fwait
cld
dec
hlt
xchg
sti
out
xchg
mov
insb
out
cld
jp
loopne
icebp
adcl
pop
add
arpl
insl
and
inc
sbb
clc
sub
and
loopne
pop
rorl
je
imulb
pop
mov
adc
dec
mov
pop
cld
xchg
popa
mov
cltd
jns
scas
scas
mov
mov
cwtl
mov
inc
ss
sbbb
lret
mov
loop
jo
lods
push
fsubrs
cli
xor
push
adc
sahf
xchg
or
xor
mov
rcrl
mov
lret
push
arpl
in
out
orb
inc
cld
daa
dec
fidivs
into
pop
inc
cmc
aas
mov
mov
push
push
mov
push
mov
push
rcrb
jb
xchg
fisubs
xchg
xlat
lret
pop
cmpsb
jl
fsubs
mov
push
sub
inc
jns
gs
xor
hlt
mov
cmp
stos
sbb
mov
les
cwtl
enter
sarl
xchg
dec
pop
insb
sbb
iret
movsl
xchg
and
decl
mov
adc
push
inc
dec
mov
pusha
fs
loopne
cwtl
data16
mov
cmc
loop
jnp
pop
push
cld
jg
sbb
inc
xchg
shlb
gs
add
add
shlb
xchg
or
outsb
or
inc
sbb
adc
push
arpl
test
xchg
push
jb
xor
push
jecxz
nop
xor
test
push
adc
jmp
mov
out
pop
dec
scas
aas
inc
mov
mov
xchg
inc
icebp
adc
push
inc
jns
and
cli
adc
mov
cltd
sub
pop
call
iret
fnsave
ja
jae
lret
and
mov
sti
jp
sub
out
jmp
sarl
dec
adc
fdivrl
das
adc
mov
rorl
mov
test
pop
in
in
push
mov
xchg
movsl
push
ljmp
and
dec
dec
mov
ljmp
pop
subb
loope
or
dec
mov
or
pushf
push
or
adc
call
fdivrs
fwait
aas
xchg
cmp
call
sub
mov
xor
ljmp
add
nop
inc
sub
out
xor
fnstcw
push
insb
sbb
mov
push
sti
scas
pop
out
jb
push
push
lods
std
rcr
push
fisttps
adc
add
adc
push
ret
mov
aas
sbb
ss
mov
shll
in
daa
cmp
adc
in
inc
mov
in
cli
sub
jmp
shl
neg
repz
sbb
mov
jle
adc
popf
cmp
mov
jmp
lea
mov
cli
xchg
mov
jmp
divb
je
js
cmp
mov
test
add
into
stos
push
push
clc
pushl
rorl
stc
ljmp
inc
jmp
push
mov
mov
in
pop
imul
pop
and
cmp
daa
ret
jbe
push
and
push
mov
mov
bound
ljmp
jb
fwait
les
imul
fsubs
dec
aaa
and
pop
out
mov
in
pop
cwtl
mov
hlt
mov
mov
mov
std
insb
xchg
sbbl
mov
or
shl
fisubl
or
adc
pop
cmpsb
jnp
movsl
int3
mov
jns
icebp
sbb
into
jb
mov
adc
fdivl
push
lods
sbb
dec
roll
ror
icebp
iret
xor
sub
aam
test
out
mov
test
outsl
roll
mov
sub
adc
dec
enter
outsl
les
xchg
jns
mov
in
ss
out
popa
push
adc
in
adc
sub
and
inc
decb
orl
xchg
fbstp
and
iret
andl
mov
rorb
in
push
aam
sub
jmp
pop
jge
rorb
add
pop
lret
add
mov
add
pop
sub
jae
xchg
inc
loop
daa
jno
mov
adc
test
dec
mov
adc
push
jbe
fs
cmp
xchg
popa
jo
js
xor
fidivrs
push
push
xchg
cmpsb
xor
and
aas
sahf
pop
movsb
push
adc
or
and
test
pusha
sub
ljmp
shl
cmp
nop
movsb
cmc
pop
jne
add
into
sub
fsubrl
scas
add
jae
rcrl
inc
stos
test
ds
push
addr16
aad
out
sub
lea
jge
mov
and
lods
cmpsb
dec
and
in
sbbl
leave
pop
xor
mov
dec
inc
xor
lcall
jl
jns
sub
cmpsl
daa
sti
outsl
lods
jbe
imul
mov
pushl
jmp
push
in
repz
xchg
punpcklwd
jmp
arpl
je
mov
push
fs
adc
mul
int
push
pop
test
insb
jle
push
sbb
dec
fcoml
xor
scas
subl
push
fwait
mov
xchg
or
in
call
dec
adc
popa
out
and
jbe
cwtl
sbb
cmpsb
loopne
out
sbbl
inc
jl
dec
pusha
nop
jecxz
in
adc
or
xchg
repnz
addb
mov
mov
clc
nop
inc
scas
xlat
sbb
mov
stos
fs
sbb
mov
aaa
mov
add
sbb
test
sub
xorb
popf
and
inc
stos
mov
ss
scas
jmp
mov
lods
lret
out
xor
fidivrs
mov
and
pop
ret
lret
sahf
or
sti
xchg
sub
push
inc
out
mov
mov
ret
test
push
cli
mov
mov
in
inc
out
imulb
into
dec
mov
dec
out
mov
mov
dec
xchg
or
dec
xchg
test
sbb
clc
pop
sbb
stos
aas
push
imul
call
es
mov
outsl
mov
xor
fcomps
sub
dec
call
popa
rclb
in
out
push
roll
xor
jmp
mov
idivb
insl
addr16
les
movsb
jmp
mov
and
lret
data16
fwait
bound
es
xlat
and
cs
into
lock
jmp
push
sbb
pop
inc
fs
sub
inc
rorb
rclb
into
out
mov
xor
add
mov
hlt
push
rorl
cmp
cmp
fnstcw
mov
inc
ficomps
es
pop
sahf
pop
mov
dec
xor
fisubs
scas
inc
shll
out
imul
and
loope
push
dec
inc
push
pop
jb
insl
add
loop
pop
inc
dec
push
sbb
cld
sbb
int
stos
loop
rcrl
lea
inc
push
fxch
nop
sbb
test
fldenv
ret
sub
xor
je
or
cmp
nop
int
sbb
mov
dec
pusha
jl
lret
insb
push
mov
in
mov
push
mov
xor
jae
cmp
fmul
mov
sub
mov
sub
movsl
pop
xor
xchg
dec
pop
testb
and
xchg
xchg
aas
out
and
mov
in
lods
dec
mov
dec
lcall
add
cltd
mov
les
shll
sub
je
pop
sbb
int
add
jg
out
push
scas
mov
imul
bound
inc
mov
loopne
mov
mov
xor
test
sar
lcall
ret
mov
adc
cmpsl
add
mov
mov
jecxz
add
sub
jmp
popa
mov
test
mov
lret
mov
insl
adc
or
fnsave
sub
mov
and
cmp
mov
ss
fisubl
pop
fsubr
jne
dec
rol
and
push
pop
mov
dec
int3
mov
inc
scas
lods
iret
pop
sbb
mov
repz
push
sbb
int3
push
push
push
rcr
sti
rolb
cli
xchg
aas
push
aad
push
adc
pop
shl
lods
adc
test
mov
cmc
or
stos
inc
push
pop
es
mov
outsl
fwait
mov
or
fdivr
adc
push
popa
andl
mov
mov
push
jg
fldenv
dec
loope
dec
mov
cli
push
jge
mov
push
sbb
bound
sub
push
ljmp
sarl
mov
add
gs
sbb
lods
and
inc
notb
mov
cmc
sbbl
mov
sbb
inc
inc
test
xor
mov
mov
je
in
cmp
ss
sbb
jno
ficoml
leave
mov
scas
inc
leave
test
aaa
jp
fldcw
int3
add
stos
pop
loop
movsb
inc
or
sbb
pop
daa
rorb
cltd
mov
lods
arpl
mov
mov
pop
insb
ljmp
lea
and
inc
sub
pusha
push
mov
ja
movsb
inc
lahf
inc
pop
add
jb
mov
test
call
andl
push
out
jmp
push
pop
cmpsl
dec
pop
adc
sbb
into
dec
xchg
cmpsb
outsl
pop
sub
lods
push
std
sbb
mov
sub
mov
popa
movsl
imul
icebp
es
dec
pop
incb
aam
imul
and
sub
mov
push
jge
cmp
popf
mov
push
dec
shrl
stos
sub
or
arpl
std
sub
xchg
sub
outsl
pop
xor
loop
ljmp
jle
add
mov
andb
cmpsb
add
push
sub
sbb
lds
fadds
xlat
test
mov
and
mov
mov
dec
subb
sbb
lea
dec
stos
repnz
bound
icebp
mov
xchg
stos
repnz
sub
lahf
stos
inc
xchg
arpl
ret
inc
inc
stc
mov
sbb
mov
cld
pop
mov
shlb
xor
xor
out
xchg
mov
or
loopne
scas
sbbl
imul
inc
sti
fadds
sub
sub
or
pop
repz
popa
sbb
mov
cwtl
js
add
xchg
ja
popf
xchg
into
sub
push
daa
jbe
adcl
repz
lea
fiadds
pop
sub
je
add
pop
inc
mov
cmc
jl
pop
adc
add
loop
cmpsl
pcmpgtd
out
repz
clc
shll
mov
adc
shll
and
vmovdqu
call
das
imul
bound
dec
lcall
mov
lret
cmp
sub
imul
imul
pop
inc
and
daa
adc
call
mov
and
lock
fistps
sub
pop
sbb
jnp
sti
or
jo
mov
push
stc
out
leave
inc
mov
hlt
je
push
pop
add
scas
xchg
jno
loopne
push
fiadds
mov
and
out
mov
cmp
mov
outsl
xor
mov
jnp
shlb
cmpsb
mov
pusha
mov
nop
mov
inc
repnz
xchg
mov
or
xchg
ds
mov
mov
jg
xor
xchg
dec
out
pop
pop
fmull
mov
sub
mov
xchg
xchg
int
fists
cmp
cmc
sbb
dec
push
mov
xchg
mov
sti
add
adc
push
rcl
jo
in
outsb
outsl
dec
fsubr
add
into
lods
movsl
and
frstor
jb
lret
mov
stc
in
mov
or
scas
pop
mov
hlt
mov
inc
or
push
sahf
fnstcw
sti
pusha
pop
mov
jb
gs
mov
pop
or
bnd
xor
mov
stc
out
or
fildll
gs
xor
jmp
push
es
jo
jo
roll
pop
rcll
enter
in
cmpsb
bound
outsl
ljmp
ljmp
mov
sub
addr16
fnstcw
in
lea
cmp
scas
daa
pop
sti
cmp
mov
mov
cmp
xchg
sahf
gs
jg
xchg
pusha
pop
cmpsb
xchg
insb
sub
fildll
rcrl
std
add
mov
mov
outsb
movsl
push
sub
dec
mov
dec
fidivrs
fnstenv
push
inc
dec
mov
subb
cmp
sahf
jns
mov
cwtl
fs
in
fcmove
xchg
cmp
loope
les
in
fdivs
fwait
je
dec
hlt
in
jl
xchg
add
mov
mov
push
xchg
pop
in
pushf
pushf
aaa
out
sbb
adc
inc
xlat
mov
jmp
lahf
popa
lock
loope
ljmp
push
mov
mov
sub
imul
jge
out
lret
ljmp
xchg
pop
mov
mov
pop
test
adc
lods
sub
movsb
out
gs
dec
mov
call
outsb
mov
mov
pop
xor
lock
mov
mov
jns
in
mov
jo
mov
sbb
mov
in
lock
cwtl
cmp
cmpsb
addb
adc
test
sbbl
adc
enter
inc
mov
sub
fnsave
xor
cmpsl
ret
dec
scas
dec
in
sbb
ljmp
sbb
sbb
mov
push
sbb
int
aad
gs
or
cmp
adc
in
push
mov
mov
adc
fs
add
mov
in
inc
es
movsb
mov
ret
fs
je
adc
pop
aad
and
xchg
dec
aad
ss
inc
bound
and
outsb
cmp
jns
jae
mov
ja
mov
jae
sbb
cld
pop
es
and
cmp
and
pusha
mov
jb
fldenv
push
mov
call
and
dec
mov
or
mov
fiadds
mov
xor
add
mov
push
test
lds
loop
add
sub
mov
call
out
xlat
lods
push
mov
mov
add
xchg
mov
aaa
leave
or
add
inc
cmc
xlat
xor
xchg
iret
sub
int
lock
or
adc
prefetch
jp
cmpsb
lock
mov
push
cli
add
xchg
inc
daa
adc
cmp
es
in
push
inc
shl
add
loop
push
mov
xor
jne
xchg
inc
dec
sub
daa
sub
mov
inc
mov
inc
cmp
sahf
into
inc
fsubrs
sbb
sar
andb
mov
jmp
push
sti
xchg
fnsave
push
test
cmp
lcall
outsb
cmp
out
jne
push
outsl
xchg
popf
mov
mov
adc
fs
inc
or
xor
mov
test
outsl
sub
dec
xchg
cmpsb
call
pop
mov
addr16
sub
rcll
lods
mov
mov
push
cmpsl
cltd
mov
inc
lods
in
pop
mov
cmp
into
sub
mov
dec
mov
xchg
dec
mov
mov
dec
out
enter
loope
mov
fwait
scas
add
out
sbb
and
xor
xchg
push
add
stos
dec
push
fdiv
cmpsb
cmpsl
pop
mov
jg
cmp
pop
add
sub
hlt
cmp
addl
aas
mov
cld
mov
sbb
sbb
in
lret
test
popa
icebp
inc
push
pop
jle
mov
pop
push
jle
dec
fisubs
out
test
jno
inc
mov
cmpsb
add
lods
pop
ja
bound
push
aam
negl
and
enter
mov
and
andl
jae
leave
pop
aaa
mov
pop
aad
mov
push
adcb
fstpl
pushf
inc
jne
mov
stos
cltd
mov
cmp
xchg
push
pop
xchg
xchg
push
jmp
xor
mov
fisubrl
ret
lods
iret
add
pop
push
mov
int
lahf
outsb
daa
repz
call
imul
inc
add
adc
and
push
and
call
sbb
in
test
outsl
nop
sub
mov
ja
push
aam
add
imul
xor
lods
out
push
repz
jnp
pop
inc
sub
adc
aas
push
leave
jge
xorb
loope
mov
in
gs
mov
dec
dec
stos
incl
pop
mov
movsb
push
inc
fadds
mov
pop
fstps
sub
inc
cmp
xor
add
adc
popa
cmpl
cmpsb
out
sbb
scas
or
add
sub
push
add
sub
pop
sub
bound
cmp
icebp
and
das
repnz
and
add
cmp
imul
inc
xchg
lcall
and
push
or
lret
mov
cmp
test
out
jbe
arpl
orl
lret
mov
sbb
sahf
inc
xchg
xor
push
rclb
imul
adc
js
or
inc
cmp
cmc
lods
int
xchg
pop
ljmp
js
mov
jae
into
pop
push
xorb
insl
fwait
lock
sub
pop
out
or
ss
outsl
or
stos
jmp
sub
int
dec
push
cltd
daa
out
jg
and
push
adc
adc
push
addr16
mov
in
inc
adc
add
es
negb
push
aaa
xor
lret
enter
add
fwait
add
mov
loop
and
idivl
xor
and
pop
stos
pop
mov
movsb
xor
push
lods
xchg
push
and
aam
push
pop
aad
xor
add
loop
xor
ret
adc
pusha
outsl
mov
imull
jg
stos
sbbb
inc
aaa
push
clc
push
repz
popa
in
es
mov
cmpsl
sbb
insl
inc
stos
sub
into
mov
test
lret
ljmp
sarb
jle
sbb
inc
inc
out
je
imulb
cwtl
sbb
pop
in
sarl
dec
xchg
xchg
mov
and
pop
mov
fdiv
sarb
shrb
stos
add
mov
or
adc
pop
lahf
fistps
repnz
and
stos
xor
fdivrl
pop
jno
inc
arpl
push
stos
or
test
fcomps
gs
iret
cmp
cld
mov
ss
ret
jnp
push
mov
push
add
popa
add
jl
js
stc
cmp
flds
mov
cmpsb
xchg
in
and
or
pushf
fdivrl
add
mov
and
ret
lret
scas
or
int3
daa
popa
mov
fdivs
data16
xchg
in
cmp
stos
pushf
jge
lret
mov
popf
xor
in
repnz
pop
sub
pop
rcl
test
pop
in
imul
aad
ret
cmpsb
sub
lret
adc
dec
xchg
adc
dec
clc
xchg
ldmxcsr
mov
jnp
adcb
fcomps
mov
pop
cli
addr16
adc
inc
sub
pop
mov
mov
movsb
bound
xchg
gs
xor
or
mov
out
pusha
xor
jl
out
iret
ret
test
das
aam
shrl
dec
int
std
adc
stc
out
sub
test
xor
adc
pusha
andl
sbb
cmp
test
mov
xchg
or
cmp
rcrl
leave
repnz
lret
mov
xchg
and
push
sbb
pushf
adc
and
lea
or
jnp
inc
aad
in
insl
in
pop
ffree
shll
push
lds
pop
bound
jae
cmpsb
adc
fnstsw
or
movsb
out
lods
pushw
or
stos
mov
dec
fnsave
out
xchg
mov
pop
ds
ljmp
mov
icebp
leave
mov
fwait
mov
add
test
xor
test
pop
enter
mov
push
add
dec
loope
repnz
dec
inc
ret
fbstp
cmp
fs
or
cmp
dec
cs
mov
hlt
or
addl
and
les
imull
cmc
cmp
cmpsb
xor
lds
push
cmpsl
mov
mov
push
dec
aam
repnz
js
hlt
jp
mov
mov
push
in
push
adc
inc
aam
jmp
adc
xchg
adc
loope
sbb
adc
aas
lods
das
mov
test
mov
lds
sub
clc
insl
sub
ss
jg
dec
mov
or
dec
xchg
cmpsl
ds
add
pusha
sbbb
jmp
push
dec
test
sub
in
pop
mov
cmc
je
and
mov
fisubrs
inc
rol
test
add
cli
fcmove
add
aam
or
push
mov
push
mov
xchg
lahf
cmc
mov
and
push
xchg
int3
xchg
mov
ljmp
xchg
xor
daa
xor
add
jmp
lahf
jnp
jns
mov
arpl
stc
dec
mov
rcrb
mov
or
aam
adc
sbb
fcompl
insb
out
ljmp
cmp
aas
mov
add
loopne
xor
bound
movsl
not
push
mov
dec
das
xor
test
and
dec
popf
xchg
mov
int
push
outsb
or
hlt
adc
mov
push
shrd
adc
inc
jp
push
and
sbb
jp
orl
daa
mov
daa
and
cs
cld
xor
xor
mov
dec
cmp
xchg
mov
sub
push
les
cltd
jp
sbb
and
pusha
mov
lea
push
cmp
popa
adc
add
push
scas
shrl
jae
das
cld
xor
loop
xor
push
xor
cmc
fs
rcll
fisttps
ficoms
sbb
flds
mov
insb
cli
lods
aad
sub
int
lods
push
push
adc
loope
or
jbe
loop
shrl
mov
cmp
dec
pushf
fcompl
mov
adc
imul
cmpsb
js
fldcw
push
adc
xor
mov
ret
and
xlat
andl
jmp
movsl
dec
add
in
xchg
inc
lret
or
adc
ret
stos
push
dec
js
fstpl
sar
lea
or
jecxz
je
cmp
mov
test
insb
popa
addr16
and
ficomps
repnz
leave
xchg
std
inc
shrl
fwait
push
ret
adc
pop
lods
cmp
sahf
mov
push
enter
mov
outsb
or
push
in
cmpxchg
jnp
ret
stos
mov
fidivrl
add
push
adc
cmp
cmp
into
sbbl
aad
shr
push
lea
mov
cwtl
mov
addr16
adc
pop
in
repnz
loopne
mov
push
mov
in
jo
std
push
cvtdq2ps
shlb
xchg
mov
sbb
imul
push
mov
jo
in
mov
insl
xor
mov
or
movsl
or
xchg
sar
orl
push
std
push
fcompl
movsl
lds
cltd
inc
flds
sub
dec
lcall
test
cwtl
stc
mov
sub
dec
lret
and
jle
or
mov
or
cmp
adc
mov
movsl
lret
or
dec
out
sbbb
les
stos
dec
mov
repz
jnp
lcall
scas
gs
adc
jne
aad
inc
adc
clc
out
sub
cld
push
pop
pop
ljmp
or
sub
xor
xor
xchg
mov
enter
pop
popf
sarb
sbb
je
mov
or
mov
adc
inc
cmp
cmp
sbb
sbb
sahf
xor
jmp
mov
xchg
push
add
or
ljmp
subb
insl
lcall
jle
sahf
cmpsl
mov
leave
xlat
out
xchg
cmc
adc
push
ljmp
outsl
inc
daa
rcll
pushf
mov
icebp
fwait
mov
int
cwtl
ds
js
out
movsl
or
cmp
xor
and
cmpsl
jecxz
cmp
into
mov
fidivl
faddl
fnstsw
mov
mov
test
sbb
stos
pmaxub
sbb
sbb
mov
aas
popa
std
xchg
popf
xor
int
xorl
push
xchg
adc
repz
loope
sbb
repz
cmpsb
xchg
nop
repz
lods
jae
mov
and
add
stos
mov
inc
adc
stos
rcll
jle
mov
cmc
mov
bound
daa
rclb
xchg
or
lret
cmc
shll
mov
add
mov
mov
cmp
pop
xlat
in
cli
pop
call
out
adc
repnz
cmp
dec
shl
xchg
lods
sub
sar
push
repnz
xchg
movsb
cmp
fnstenv
test
xchg
xchg
push
xor
and
pop
lret
sub
leave
adc
cmc
and
test
cwtl
shlb
popa
mov
fcoms
jo
mov
xchg
sub
cmp
sar
addr16
mov
dec
sbb
out
adc
xchg
std
mov
inc
cmp
mov
mov
and
sub
das
rcrl
xchg
call
sub
push
cmp
mov
hlt
mov
popf
lods
lea
dec
inc
lcall
add
adc
mov
loopne
aaa
shll
aad
lcall
je
jbe
jb
add
jno
sub
or
jnp
sub
or
shr
sbb
cld
cs
pusha
mov
mov
add
xor
fidivs
in
jb
mov
xorl
sub
pop
jae
push
out
leave
int
xor
daa
loop
mov
inc
stos
xchg
push
xchg
cmp
mov
mov
stos
fildll
add
mov
hlt
out
addr16
ds
cld
nop
and
arpl
mov
sarl
lcall
sub
movsb
adc
out
cli
and
push
shld
dec
stc
xchg
adc
adc
jge
js
mov
ds
mov
xchg
inc
hlt
xlat
clc
push
push
popf
dec
lcall
fwait
sub
cmp
inc
jge
insb
pop
das
push
rcll
push
sbb
in
push
push
push
scas
mov
or
pushf
dec
leave
add
fs
cmc
arpl
sbb
outsb
lods
sbb
mov
enter
jno
and
pop
subb
add
ret
shl
cmpl
insl
xor
dec
adc
push
lcall
jo
adc
sbb
loopne
into
xor
cmpl
mov
adc
or
jl
test
or
jo
sbb
lahf
and
stc
mov
mov
repz
add
sub
das
sub
mov
jns
fdivrs
cmpsb
fdivs
lahf
ja
test
lret
pop
push
pop
jb
and
out
adc
lcall
cmp
mov
test
popa
sbb
pop
xorb
jecxz
add
xor
jb
dec
cli
in
or
xor
pop
shlb
cmp
aad
jbe
add
sub
ja
inc
sbbb
xchg
sahf
into
stos
fcmovu
xor
xor
dec
inc
ret
lea
rcl
pop
pop
and
les
loop
mov
cmc
push
divb
xchg
push
mov
pop
inc
jnp
inc
xor
xor
stos
push
push
push
dec
fcoml
inc
push
xor
inc
fstps
aas
add
rcrb
mov
dec
xor
xchg
xchg
cltd
push
inc
dec
and
iret
mov
jo
outsb
push
push
scas
lahf
push
cmp
push
sahf
or
jle
mov
and
test
arpl
pusha
adc
push
addr16
jne
dec
pop
mov
iret
andl
outsl
icebp
bound
js
leave
or
mov
je
in
in
mov
xchg
lods
loope
cmp
bound
or
popf
xor
inc
push
imul
sub
dec
jge
mov
lahf
xor
jns
pop
xorl
adc
out
sbb
xchg
sahf
pop
mov
sbb
push
mov
orb
stc
std
int3
je
cmp
push
scas
sub
xchg
ret
movsl
jg
pop
cmp
ja
ja
shll
add
leave
aas
nop
enter
mov
cmp
js
xor
xchg
jmp
sbb
sub
movsl
xchg
pop
pop
mov
ss
mov
shll
push
inc
into
cmovns
ds
pop
aaa
mov
inc
jae
in
push
loopne
mov
and
out
dec
insb
push
mov
add
jbe
and
mov
loope
add
mov
xchg
inc
sbb
scas
sub
inc
int
lret
lret
test
jnp
xor
mov
pop
pop
cmp
test
add
cmp
or
rcrl
xchg
xor
lahf
dec
inc
adc
cwtl
dec
int3
sub
jbe
insb
fcmovb
jbe
pop
pop
mov
mov
add
adc
jne
push
adc
ficomps
in
xlat
lret
in
push
adc
movsb
inc
fmul
push
xchg
imul
or
pop
inc
insb
cmp
call
xor
or
jno
pop
jbe
inc
mov
fwait
sub
or
pushf
pop
push
fidivrs
jbe
inc
repz
pop
adc
inc
inc
cmpsb
test
add
and
inc
lods
sete
inc
scas
and
jbe
sbbl
mov
push
adc
int3
fcompl
cmp
into
sub
mov
adcb
xchg
mov
pop
mov
mov
cmp
mov
inc
lahf
clc
ret
inc
jno
pop
sti
cltd
fcoml
mov
jne
pushf
xchg
std
or
fnstenv
or
ret
cmpsb
cmp
and
stc
dec
add
cmp
dec
adc
inc
cmc
mov
push
stc
lods
lea
dec
std
fisttps
jmp
sbb
xchg
or
sbb
stos
test
mov
or
mov
and
cmp
push
int
mov
mov
lea
sbb
cli
xchg
rol
cmpsl
gs
cmp
cmp
dec
movsl
scas
jno
mov
xor
iret
push
mov
dec
pop
rcr
dec
push
imul
int
pop
aam
lock
and
popf
mov
mov
bound
adc
sahf
test
or
pop
cwtl
push
hlt
je
lret
pop
call
inc
and
cs
jne
mov
mov
mov
int3
movsl
cwtl
cmp
xchg
shl
add
imul
data16
in
es
xchg
loopne
dec
cwtl
cs
dec
add
mov
push
push
cmc
add
mov
int3
jae
cltd
cmp
xor
rorl
adc
xchg
sti
repz
or
mov
mov
imul
add
into
and
lcall
jle
mov
push
push
aam
inc
movsl
nop
dec
mov
adc
outsl
subb
lock
push
and
push
movl
mulb
popf
sub
inc
repz
mov
push
dec
aad
jbe
lds
add
push
stos
and
loop
pop
add
jecxz
cmc
xor
cmpsb
movsl
cmpsb
jecxz
pop
loop
mov
jecxz
int3
ljmp
dec
lds
or
mov
jns
clc
daa
push
inc
mov
push
inc
lahf
mov
mov
iret
mov
xor
mov
push
sahf
inc
arpl
jg
xchg
aas
inc
sbb
cli
add
or
and
aas
sarb
mov
lds
push
xorb
repnz
ds
shrb
cltd
stc
inc
lret
xchg
cs
dec
or
inc
mov
sub
mov
andl
shrl
cmp
insl
mov
cld
sbb
mov
testb
sbb
pop
loop
aaa
arpl
dec
pusha
adc
in
outsl
pop
enter
inc
bndldx
add
insl
movl
xchg
sbb
sub
mov
inc
movsb
enter
jl
mov
lcall
mov
cs
push
loope
sub
insb
or
scas
sbb
popa
enter
jge
mov
xchg
ficompl
mov
add
inc
in
out
mov
popl
xchg
mov
ds
pop
fwait
inc
inc
cmp
cmc
fwait
insl
sub
cmp
add
inc
das
js
int
into
push
fsubrp
js
mov
or
cmp
fldl
sbb
scas
dec
loopne
xor
jb
popa
cmc
add
les
shrb
movsl
sub
add
add
adc
and
mov
sub
icebp
dec
push
push
lods
fdivs
mov
int3
cmp
frstor
lret
mov
cmc
cmpsb
aam
clc
adc
inc
xor
xor
jbe
in
adc
jp
loop
jl
mov
out
or
sub
mov
movsl
andl
insl
sub
js
add
cli
or
sub
add
mov
push
adc
int3
and
shll
cmpsb
mov
inc
add
sbb
or
lods
xlat
out
leave
je
repz
mov
sbb
and
test
jecxz
xor
jmp
and
lods
lret
mov
aas
add
stos
dec
and
jecxz
orb
js
popa
adc
xlat
rcr
mov
inc
call
push
roll
test
inc
cld
je
add
pop
xchg
in
or
popf
xchg
in
mov
adc
mov
sbb
xor
and
mull
lahf
loop
popf
inc
mov
orl
cli
mov
inc
stc
aad
xor
call
push
jle
mov
sub
adc
test
push
insb
cmpsb
or
sahf
pop
in
dec
faddl
sbb
gs
popf
enter
cmc
iret
shll
cmp
push
or
out
jns
mov
loopne
mov
add
sub
add
xor
clc
insb
movsb
jecxz
sbb
adc
ja
push
sahf
test
cltd
pushf
jne
fsubrl
lds
lock
add
or
lcall
cwtl
inc
repz
lahf
mov
or
or
dec
into
adc
or
xor
call
jmp
pop
inc
shl
jecxz
fldt
jecxz
mov
jns
inc
jbe
jne
addr16
pop
movsb
lods
mov
inc
push
push
jne
aad
dec
int3
and
insl
cmc
mov
lods
int3
insb
stos
xchg
xchg
xchg
mov
incb
daa
inc
outsb
ret
sarl
sub
scas
inc
mov
ret
inc
pushf
mul
pop
mov
mov
cmp
nop
cmc
mov
inc
cwtl
leave
out
es
cli
add
orb
int3
dec
lods
popa
enter
dec
pop
inc
stc
std
push
fcom
sbb
fsub
dec
stos
mov
mov
adc
lock
mull
mov
mov
orl
in
aad
aas
dec
int
sti
push
mov
ret
dec
push
dec
xchg
mov
iret
fstpt
out
or
pop
cmc
popf
sbb
lret
call
dec
push
jg
lcall
push
cmp
cmp
adc
sub
jmp
or
mov
jle
inc
test
test
int3
pop
scas
ja
cmp
inc
mov
pop
stos
mov
adc
lods
mov
int3
das
pushf
fmull
or
push
int
movl
mov
push
test
imul
mov
xor
call
mov
call
je
out
stos
inc
or
push
fdiv
sub
cmp
mov
xlat
jle
add
repz
adc
xchg
pop
adc
lret
xchg
pusha
mov
gs
lds
lcall
jns
sub
ret
in
jle
jnp
and
xor
push
bound
inc
cmp
cmp
imul
sahf
inc
sbb
mov
addr16
and
push
inc
out
dec
in
pop
or
xchg
pop
sahf
aam
jle
scas
sbb
fistpl
ja
enter
pop
cmp
daa
rorl
je
mov
and
in
jecxz
shll
xor
outsb
adcb
sub
rcrb
mov
sbb
push
add
adc
outsb
aaa
cltd
fisttpll
lea
cmp
xlat
bound
mov
xchg
ret
imul
dec
shl
je
fs
cmpsl
or
xchg
sbb
in
scas
lds
push
mov
out
push
stos
mov
movsl
and
inc
sbb
pop
adcl
mov
insl
popf
std
dec
jne
xor
aam
jo
jge
push
mov
or
mulb
push
orl
add
or
insb
test
pop
decb
enter
clc
rolb
add
mov
int
adc
dec
addr16
aaa
mov
mov
add
adc
bound
add
sub
fcompl
cltd
jge
or
sar
xchg
fdivl
xor
sub
and
nop
lea
inc
pushf
outsl
xchg
adc
fists
jbe
pushf
negl
xchg
mov
fdivr
add
jecxz
mov
divb
jne,pt
xchg
test
out
fisttps
xchg
mov
push
inc
negl
add
decb
stos
sub
add
pop
in
clc
pop
outsl
addr16
add
add
adc
ficompl
jmp
cmp
mov
fs
imul
push
fstpt
pop
xchg
xor
outsb
cmc
mov
repnz
lcall
adc
xchg
xchg
mov
outsb
dec
test
xor
push
pop
dec
out
cltd
int
popl
dec
bound
and
cltd
aas
mov
and
notl
push
imul
mov
mov
movsb
xchg
cmp
cltd
or
xchg
mov
mov
or
rep
xor
push
das
jecxz
or
adc
sbb
push
jmp
xchg
jae
pop
mov
les
mov
mov
lods
stos
xchg
fwait
stos
dec
in
sub
imul
push
movb
stos
pushf
xor
shl
ds
mov
xor
push
jb
add
or
xchg
in
xchg
ja
cmp
and
ret
fsubrl
dec
jmp
ret
xchg
lds
jne
cli
sub
or
imul
shl
ss
into
or
sbb
cmpsb
adc
loopne
jb
dec
roll
push
vucomiss
sbb
scas
inc
mov
stos
arpl
lret
clc
filds
and
or
or
or
mov
sub
xchg
out
cs
adc
sarl
lods
pop
add
cmp
cmp
jne
addr16
sub
inc
out
adc
inc
jbe
out
mov
fbld
ljmp
pop
shll
mov
dec
jp
inc
adc
ret
cwtl
mov
fmuls
or
mov
int3
out
mov
out
xor
jl
mov
les
add
xchg
out
dec
dec
out
push
sub
push
mov
andl
adc
std
ss
stc
dec
popf
lea
test
jae
adc
popa
bound
and
movsb
in
mov
mov
popf
add
push
pop
or
pop
xchg
sub
mov
or
cs
in
hlt
add
mov
jg
ret
lcall
adc
mov
jbe
js
mov
in
out
jle
pop
data16
cmpsb
push
lods
dec
mov
cwtl
pop
je
inc
test
and
in
pusha
and
bound
imul
inc
pop
lcall
dec
push
mov
outsl
jecxz
xor
out
mov
lahf
mov
mov
sbb
roll
loopne
in
pop
mov
jge
shrb
dec
les
mov
aas
mov
add
mov
scas
fwait
and
loope
pop
movb
mov
in
cmpsb
fadd
call
jbe
test
or
dec
daa
pop
ret
add
nop
movl
sbb
fnsave
pop
jmp
cli
jbe
lahf
out
je
xchg
jo
enter
popf
cmpsl
adc
fs
outsb
inc
xchg
xor
cld
fwait
push
mov
rolb
push
jae
les
push
fwait
mov
add
rorl
xlat
inc
sbb
sbb
cltd
fdivl
add
arpl
push
add
cmp
es
jge
mov
imul
push
mov
stos
fs
in
sbb
out
inc
mov
aam
inc
cmp
jmp
xchg
or
ljmp
inc
js
inc
scas
loopne
jmp
sbb
mov
mov
insb
leave
imul
sub
adc
jmp
out
pop
mov
in
cmc
mov
pop
jns
repnz
ja
fistpl
push
pop
jnp
ljmp
sbb
testl
ficoml
inc
jbe
addb
mov
out
clc
roll
sub
cmp
mov
out
cmp
lahf
cs
sbb
pop
pop
and
jle
inc
push
sahf
ret
jp
std
dec
and
cs
dec
pop
decb
loope
push
aaa
subl
dec
sub
and
ljmp
fisttps
jo
push
xchg
cwtl
lret
sub
and
sahf
clc
xchg
scas
sbb
jo
jp
ss
arpl
lods
cwtl
and
xor
je
pop
and
pop
mov
shll
enter
adc
jne
bound
icebp
sub
xchg
cmp
push
cmpsl
cmp
fs
add
sub
and
mov
mov
mov
add
daa
add
imul
inc
push
add
mov
pop
enter
cmp
das
jae
jmp
flds
push
cs
xchg
je
rolb
test
inc
imul
or
clc
add
xchg
or
test
lcall
mov
nop
clc
or
sub
popf
jnp
cmp
out
movsb
add
in
dec
rdmsr
xor
mov
cs
or
imul
les
dec
mov
jnp
adc
std
ja
xchg
mov
fbld
xchg
test
in
cs
dec
xchg
adc
adc
ret
pop
push
sarl
dec
pushf
loope
jg
xchg
aas
pop
and
incl
pop
cmpsl
dec
call
pop
and
outsl
lret
in
xlat
cmp
pop
or
pop
lret
pop
test
inc
pop
inc
call
xor
lods
pop
sbb
add
fsub
fidivs
mov
out
inc
xchg
mov
mov
and
mov
mov
cwtl
jge
adc
cld
aad
and
and
pop
pop
std
js
jp
inc
fwait
xor
in
rorl
sti
inc
fmulp
add
mov
cmc
ret
jg
stos
jecxz
mov
mov
add
and
push
shlb
loope
mov
test
outsl
push
jle
jbe
xor
jg
dec
jbe
add
js
shll
lds
xchg
cld
xor
pushf
pusha
xor
jae
push
popf
mov
cmc
push
jp
inc
xor
fcmovu
mov
insl
and
ja
pop
jbe
in
inc
cmpsb
mov
repz
pushf
lds
scas
je
dec
loopne
enter
mov
xor
out
es
xchg
movsl
and
and
popf
pcmpgtw
enter
imul
jl
mov
sahf
jg
dec
pop
movsb
dec
test
jo
and
jno
or
lcall
jbe
xchg
sbb
movsl
mov
jecxz
inc
sub
les
mov
jb
pop
and
icebp
pusha
cmp
insb
rolb
xlat
call
andw
sbb
ss
leave
ret
vmread
sbb
push
mov
lcall
push
xchg
and
aas
loopne
aam
rorb
xor
cli
pop
or
sahf
and
cmp
or
ficoml
sbb
mov
roll
test
xchg
inc
mov
jne
or
push
mov
mov
dec
dec
pushf
inc
sub
mov
scas
scas
push
sub
xor
jno,pt
xchg
inc
or
add
fiaddl
sbb
mov
dec
push
outsb
xor
sub
mov
pushf
pop
add
fdiv
ret
stos
jnp
movsb
mov
enter
push
mov
push
out
mov
std
push
loop
mov
lea
push
push
mov
inc
cmp
out
xchg
jmp
fsubrs
mov
xchg
inc
jecxz
test
pop
adc
cli
lods
xor
pop
loope
repz
adc
adc
dec
dec
xchg
nop
cli
popf
outsb
aad
pushf
ret
jg
jns
sub
movl
push
scas
inc
dec
push
xchg
jb
xchg
movsl
mov
mov
test
cmp
leave
sbb
push
sub
es
lahf
sbb
adc
outsl
push
stos
pcmpgtw
or
xchg
cmovne
int
std
push
repnz
icebp
sysexit
dec
and
jno
add
mov
pop
dec
repz
mov
push
mov
mov
adc
push
icebp
cmp
stc
jne
hlt
imul
push
movsl
hlt
lcall
ret
repz
outsl
imul
lahf
cmp
jp
sub
enter
jg
jb
dec
pop
push
filds
xchg
add
xchg
repz
or
xchg
sub
xchg
xorl
adc
shll
xchg
aaa
or
inc
xchg
test
lock
add
stos
dec
ss
sub
aam
push
data16
and
mov
in
mov
enter
jge
out
in
movsl
lock
out
push
pop
pop
xchg
or
hlt
mov
pop
or
sub
cwtl
and
cmp
repnz
sub
dec
test
xchg
push
popa
imull
xchg
xor
popf
in
mov
or
test
mov
in
cmpsb
into
jecxz
and
xor
out
jo
ljmp
std
das
jmp
add
sub
cmp
xor
out
jo
add
inc
push
into
pop
mov
int3
not
cli
mov
aaa
inc
sub
jle
push
std
sub
ljmp
add
push
cmp
cli
mov
add
mov
sbb
je
insl
push
mov
mov
in
stc
push
hlt
ss
cli
xor
jns
fildll
ret
mov
push
sub
push
out
rcrl
sbb
lcall
lods
dec
stc
mov
xor
push
shl
add
mov
pop
jmp
push
pop
out
lcall
daa
scas
pushf
fs
sbb
movb
jbe
mov
sahf
cmpsl
in
movsb
inc
mov
ja
iret
cmp
cmp
inc
inc
cs
imul
imul
mov
push
loope
inc
loope
aad
call
and
das
jbe
sub
loop
test
add
hlt
jnp
repz
inc
shrb
pop
std
pop
jnp
xchg
mov
fbstp
fdivrp
sbb
adc
rol
add
push
mov
clc
inc
std
test
or
push
test
push
test
call
ljmp
int3
mov
adc
pop
dec
pop
aad
adc
in
arpl
ret
sahf
stc
inc
das
mov
cmpsb
and
inc
sahf
xor
dec
pop
ja
xlat
vmovaps
stos
xchg
push
aas
jne
push
inc
shll
xor
in
div
fisubrl
adc
and
push
cwtl
push
test
idivl
ret
rorl
pop
jecxz
inc
xchg
or
cwtl
icebp
icebp
xlat
cmp
cltd
jge
dec
mov
push
aad
pop
mov
cmp
aas
lcall
pop
dec
mov
lds
and
xor
sub
mov
inc
and
loop
lcall
jmp
shll
dec
adc
sbb
xor
sub
ss
sbb
xor
sbb
xchg
lret
mov
imul
in
mov
xchg
nop
loopne
lcall
or
and
ret
dec
mov
xor
ftst
and
clts
add
mov
pusha
xchg
loop
jne
inc
rorl
pop
cmpsl
int
pop
or
mov
aam
ljmp
jns
add
inc
mov
jp
dec
jne
push
in
adc
adc
lock
xchg
aas
lods
xchg
inc
or
sub
cmp
loop
cmpsb
xchg
add
jns
leave
or
outsl
add
jbe
jecxz
int3
push
push
push
test
or
pusha
cmpsl
push
adc
lret
ss
in
decb
jns
sbb
jbe
mov
push
and
push
jmp
add
sbb
add
fs
ja
adc
call
xchg
add
mov
out
xor
cmpsb
xchg
rol
jl
pop
repnz
jbe
aas
or
xlat
cltd
shrb
mov
es
push
stos
fcoms
xchg
into
stc
cmc
jnp
push
adc
pop
push
push
add
xchg
mov
cmp
sbb
mov
adc
mov
rcl
push
mov
ficomps
shrl
addr16
pop
push
movsb
jg
lahf
out
add
scas
sbb
cmp
ret
cmpb
push
call
test
scas
cli
mov
adc
loopne
outsl
sub
xchg
fbstp
lock
pop
loope
dec
lods
push
sahf
call
mov
pop
add
repz
and
add
cmp
rcrb
aaa
or
bound
aam
xchg
stos
adc
xor
mov
fsts
not
cmp
pop
call
addr16
push
incb
mov
je
pushf
mulb
pop
and
sub
popa
rolb
xchg
pushl
jge
push
loopne
lret
sbb
mov
out
dec
movsl
dec
orl
shrl
adc
orl
or
push
lock
outsl
pop
inc
or
movsb
cmp
jne
shlb
dec
push
bound
ja
pushf
and
inc
add
and
cmp
xchg
push
pop
and
mov
push
mov
sbb
pop
push
insb
jae
mov
and
mov
incl
int
je
jae
les
jns
pusha
mov
push
pop
cltd
pusha
cmc
lods
popf
outsb
ret
xor
push
mov
xchg
and
pop
mov
call
jns
jnp
mov
cli
lock
adc
in
or
rep
mov
mov
rorl
push
imul
mov
mov
jnp
jns
push
jne
lret
mov
scas
cltd
mov
cmp
imul
add
sbb
hlt
pop
arpl
pop
xchg
bound
repnz
mov
pop
jne
mov
stos
loop
cmc
es
dec
mov
lock
mov
movsb
cmc
mov
xor
es
jecxz
dec
hlt
cmc
js
cwtl
out
out
xchg
jge
lcall
push
lock
fwait
in
xchg
cs
xlat
lret
fistps
das
mov
add
das
cmp
fistpl
rol
and
cmc
jns
lock
pushf
imul
movsb
pop
xchg
cmpsl
pop
test
lret
add
stos
add
lret
jg
mov
pop
out
pop
jnp
test
std
push
or
adc
adc
or
enter
test
imul
lods
jne
xor
add
jb
out
sbb
inc
or
sub
pop
pop
sbb
in
ret
in
jp
lcall
sbb
jp
or
pop
or
mov
sub
outsb
mov
ss
call
scas
getsec
dec
cmp
sbb
mov
insb
jg
gs
xor
stc
mov
mov
mov
push
mov
and
pushf
xlat
orb
nop
gs
add
mov
fwait
xor
popf
sbb
in
fdivs
or
mov
pop
out
sbb
push
mov
outsl
divl
jne
andl
sbb
mov
fisubrl
xor
pop
pop
std
dec
fisttps
xchg
mov
push
sahf
int3
fisttpl
outsl
insb
aad
xor
test
lret
lcall
jo
fisubrl
xchg
ss
mov
dec
sbb
inc
into
dec
out
push
loop
loop
monitor
sub
mov
push
loopne
popl
dec
gs
mov
mov
fsubl
outsb
push
enter
nop
pop
lahf
popf
jae
sbb
decb
aad
int3
loope
push
mov
xor
out
mulb
adc
lea
push
adcb
imulb
out
bound
cltd
xor
push
test
push
xchg
xchg
mov
mov
je
sub
out
or
mov
notl
and
push
push
jmp
out
addr16
jmp
sub
sti
xchg
xor
or
pusha
sub
push
cmc
xor
out
xchg
push
jle
mov
xor
sbb
sbb
out
int3
adc
jmp
mov
adc
cmp
jo
insl
rcll
or
mov
fnsave
sbb
cmpb
cmpb
adc
jo
push
sub
push
mov
push
mov
sub
fdivr
sub
into
loope
adc
pop
in
lcall
int
rcrl
fwait
push
jbe
or
xchg
mov
int3
inc
and
inc
loopne
pop
or
test
cli
inc
call
arpl
daa
xchg
sarl
sub
xchg
adc
popa
jg
repnz
hlt
sub
out
cli
push
jne
das
sti
xchg
xor
cmp
icebp
pop
dec
add
outsb
sti
cmpl
mov
lea
xor
push
mov
stos
xor
add
add
jno
ret
pop
inc
sub
jecxz
imul
popf
cmp
lds
mov
shll
dec
mov
pop
shr
je
mov
cmp
dec
and
push
mov
xor
xchg
or
clc
xor
mov
fucom
cld
jns
adc
ljmp
lret
test
pushf
xlat
or
bts
or
into
adc
hlt
out
int
lret
mov
popf
jl
jbe
or
mov
sahf
fwait
or
xchg
mov
in
pop
adc
shll
orb
les
jno
ret
pop
jnp
inc
sbb
dec
adc
in
cmpsl
mov
out
out
xchg
push
jecxz
nop
sub
pop
mov
xor
push
or
mov
cmpsl
dec
pop
inc
ds
sub
fidivrs
jne
lods
cmp
cmp
jmp
dec
test
ficoms
xor
and
nop
sub
add
dec
mov
imul
out
ret
daa
xor
mov
jmp
or
inc
cli
and
and
push
fsubr
lcall
inc
mov
imul
cmp
cltd
rorl
or
pop
xorb
aad
xchg
push
adc
xor
mov
leave
mov
leave
in
int
rep
mov
push
clc
and
mov
subb
jecxz
xchg
enter
hlt
in
mov
xchg
push
cmp
ss
pop
and
or
int
fs
aaa
mov
das
add
mov
pushf
mov
enter
inc
bound
hlt
int3
push
adc
and
xlat
jge
les
or
sarl
adc
xlat
jnp
lret
dec
lcall
stos
and
xchg
in
jle
mov
inc
mov
mov
mov
mov
xchg
push
mov
mov
push
pop
fcom
arpl
mov
int
test
dec
in
icebp
in
xchg
stc
frstor
pop
and
daa
clc
pop
add
call
lock
jbe
lret
bound
insb
popa
nop
dec
mov
scas
sub
call
dec
mov
fbstp
out
pop
mov
pop
hlt
and
mov
nop
jge
jnp
pop
fidivrs
cwtl
inc
add
pop
inc
lock
lods
cmp
jg
stc
cwtl
xor
mov
lods
jno
pop
movsl
sarb
add
icebp
ror
or
mov
lds
pop
je
std
mov
ret
xor
or
fwait
xorl
mov
cmp
xor
sub
push
push
jns
adc
push
outsb
inc
xchg
ss
xchg
loopne
rorl
mov
mov
outsb
arpl
mov
insb
push
push
addr16
arpl
jae
jecxz
mov
faddl
loopne
fidivrs
je
mov
sbb
pop
jg
das
jnp
jmp
rorb
aas
movsl
arpl
ja
dec
jns
ss
inc
in
fists
push
call
push
dec
inc
ficompl
or
js
push
inc
test
outsb
lock
cltd
ss
pop
cmp
cmpsb
lcall
or
or
sarl
mov
sbb
aam
or
mov
xor
mov
dec
lods
arpl
sbb
enter
or
dec
pop
hlt
inc
call
jge
outsl
sbb
out
mov
xchg
sub
movsl
enter
jmp
dec
add
les
mov
data16
ret
inc
mov
adc
jle
sbb
repz
push
test
ljmp
gs
je,pn
push
pop
or
jb
stos
sbb
data16
add
push
stos
add
sub
add
add
dec
ret
jb
popf
adc
xchg
jmp
fdivrs
fsubrl
add
mulb
and
loope
sbb
test
and
ja
jno
jno
and
imul
ljmp
mov
inc
or
repz
or
mov
repnz
popf
sbb
rcr
push
jne
mov
sbb
repnz
cltd
dec
xchg
dec
aas
push
xchg
jnp
test
jge
dec
cmp
enter
jo
stos
arpl
rcrl
lret
bound
addr16
mov
or
loopne
cmp
jp
push
shlb
dec
in
inc
adc
cmp
cmpsb
cmp
sbb
mov
xchg
aaa
into
lret
scas
mov
dec
dec
cmp
jecxz
lock
inc
mov
jnp
out
ja
fidivl
shll
xchg
jmp
and
les
std
aam
mov
imul
repnz
int3
les
sub
insl
and
inc
iret
add
xorb
mov
push
orl
xor
sub
inc
popf
repnz
clc
cld
in
ds
je
mov
cltd
repnz
inc
adc
adc
insb
das
sbb
out
xchg
rcll
stos
out
lock
push
push
or
bound
add
sti
sub
enter
in
mov
int3
ljmp
cld
push
and
pushl
fists
sahf
movsl
sub
pop
adc
cmp
inc
push
sbb
out
push
dec
bswap
hlt
mov
mov
test
xchg
adc
mov
cwtl
adc
add
xchg
push
sbb
pop
push
fnstenv
stc
out
hlt
add
sbb
int
aad
fs
sub
sbb
mov
lock
sbb
and
mov
in
mov
in
subl
ret
mov
fbstp
dec
jns
out
jae
sub
arpl
and
cli
cmp
shlb
add
nop
mov
adc
or
sarl
mov
ds
stos
and
adc
mov
mov
ja
loop
pop
mov
jno
das
out
push
cs
setg
mov
xchg
fdivrp
lahf
pop
mov
cmp
inc
mov
cmc
jb
xchg
scas
push
outsl
pop
xchg
mov
cwtl
rorb
push
jno
nop
mov
into
jge
cmp
jl
lret
adc
pop
jecxz
movsl
lock
js
sub
lods
out
in
mov
adc
lahf
xor
jmp
stos
test
pop
jle
cmp
mov
call
sbbl
loop
lods
ds
fdivrp
mov
or
jg
ret
fdivrl
pop
in
xor
push
and
addr16
xchg
jg
add
mov
test
scas
xchg
rcll
push
stc
or
aad
shlb
mov
pop
iret
jmp
xchg
dec
sub
lret
xchg
fcomp
inc
cltd
lcall
scas
in
adc
fs
insb
mov
shrl
mov
insl
mov
insb
sub
je
or
push
imul
and
push
mov
bound
pop
mov
inc
dec
adc
mov
testl
in
mov
xchg
test
imul
divb
inc
push
pop
xchg
dec
roll
xchg
mov
rclb
add
into
addr16
push
push
loop
jg
jmp
jecxz
test
jae
xor
jnp
mov
mov
stos
ljmp
xchg
into
dec
cld
mov
push
adc
add
addr16
xchg
mov
mov
into
push
mov
cmp
scas
into
add
cvtps2pd
xchg
cltd
rorl
orb
xchg
decb
std
test
call
cmovno
or
out
and
loop
das
out
pusha
popa
dec
loopne
cmp
ljmp
inc
aad
pop
fidivs
add
and
push
arpl
loopne
and
test
xor
push
stos
cmp
iret
xor
cld
jne
lret
sbbl
mov
sub
xorb
push
push
in
mov
pop
dec
out
aad
stos
int3
rcll
xchg
mov
xor
adc
xchg
rcll
xchg
and
or
push
xchg
incb
lea
xchg
mov
push
xchg
popf
add
dec
icebp
mov
lock
std
push
cmp
xor
sub
mov
sarl
in
push
jb
add
int
jb
and
xchg
inc
xchg
sbb
pushf
popf
xor
cmp
movsb
sub
sbb
enter
inc
push
push
xor
sahf
mov
movsl
xor
xchg
xor
test
cmp
inc
jmp
ret
pop
shlb
or
xor
lods
push
sub
adc
addl
push
xchg
and
lret
loopne
pop
out
movsb
mov
jne
test
mov
xchg
dec
fildl
push
mov
je
sbb
hlt
lods
push
dec
push
xorb
push
bnd
out
inc
movsl
add
pop
out
pop
inc
aas
js
cwtl
xlat
fdivrl
push
push
cmp
dec
xchg
inc
sbb
or
add
jnp
in
ss
mov
pusha
inc
add
sbb
mov
icebp
imull
mov
arpl
and
lds
mov
sti
adc
arpl
inc
aas
mov
dec
rcl
or
addr16
or
push
movb
sbb
leave
jmp
pop
pop
scas
sbb
add
xchg
jmp
insb
adc
imul
mov
jb
fists
push
push
mov
imull
mov
mov
fs
icebp
mov
aaa
lods
stc
xor
and
fcmovnu
push
inc
lcall
push
push
and
pop
bound
into
into
pop
xor
and
jns
fs
xlat
and
rcrl
mov
cmpsl
push
sub
mov
pop
inc
cwtl
sub
divb
sti
cltd
jmp
fsub
xchg
lahf
sbb
test
jl
push
dec
mov
push
mov
jecxz
inc
popa
and
adc
mov
mov
out
cli
fcoms
inc
and
loop
dec
cmp
call
sub
bound
pushf
add
sbb
out
jle
sahf
or
in
popf
stos
push
fildll
adc
and
xor
lods
add
cli
add
xor
mov
hlt
add
and
ret
dec
cmc
ret
or
inc
call
dec
pop
test
xor
es
push
or
aas
pop
and
push
lock
mov
pusha
lcall
push
mov
mov
push
sbb
stos
daa
jne
in
sub
int
gs
jae
mov
subl
popa
xor
repnz
push
adc
stos
aaa
pop
pop
dec
inc
sti
test
cs
inc
cltd
add
mov
and
ds
cld
cmp
ret
sbb
pop
mov
loop
sub
hlt
add
cmpsb
in
sbb
mov
xchg
cmp
sbbb
mulb
shlb
loopne
in
daa
mov
inc
repnz
insb
mov
sti
ficomps
cmc
dec
jns
or
add
vmovntdq
in
cltd
pop
subb
and
sbb
push
rorb
movq
mov
jae
xchg
dec
pushf
mov
inc
pop
jne
mov
fs
cmp
adc
mov
cli
rcrb
insb
cmpsl
pop
jmp
inc
mov
mov
pop
cmpsl
or
js
in
sub
les
jecxz
inc
jmp
shrl
sbb
ss
sti
popa
push
outsl
jmp
xor
sti
dec
dec
or
subb
pop
or
cmp
mov
popl
clc
imul
dec
jnp
imul
push
dec
xor
jg
xchg
out
mov
stc
xchg
cmpsb
pop
lea
enter
loop
dec
fidivs
xor
notl
xchg
mov
xchg
jne
fldenv
faddl
mov
repnz
insb
aaa
push
in
dec
subb
lcall
or
fcoml
clc
xchg
mov
sbb
push
or
sub
adc
adc
xchg
cmpl
xchg
xchg
dec
fbstp
addb
lret
jo
xor
fcomps
bound
aaa
cltd
jns
xchg
mov
push
repnz
in
jae
cld
test
jmp
jle
xchg
mov
adc
pop
xchg
xchg
cmpsl
fisubs
inc
nop
inc
cmpb
and
movsb
adc
les
in
in
xor
or
sahf
push
aas
and
std
jecxz
mov
repz
add
mov
mov
ret
jmp
fucomip
and
mov
inc
stos
into
call
movsl
mov
decb
icebp
jno
rcr
cmp
stc
dec
addr16
outsb
fsub
xor
xor
sub
test
pusha
testl
js
xchg
into
movsl
outsl
mov
and
inc
and
sub
fiadds
sbb
je
mov
lea
aam
xchg
mov
orb
sti
test
into
sti
push
jo
push
scas
and
and
aas
jecxz
nop
jno
jno
stos
dec
mov
mov
and
xor
push
adc
test
pop
or
mov
pop
mov
bnd
xchg
adc
rolb
adc
push
mov
filds
push
push
jge
jge
imul
and
repnz
filds
xlat
fbld
push
xlat
fmuls
xor
aas
popa
push
jae
dec
mov
enter
stos
xchg
jne
cmc
fs
jle
and
cmp
pop
add
call
fisubrl
pop
pop
push
cmpb
aam
test
lret
cs
xchg
xchg
xor
dec
mov
jmp
sahf
xor
xchg
push
in
into
fs
movsl
push
mov
xor
mov
icebp
mov
fscale
or
mov
rol
in
cvttps2pi
lods
mov
lahf
movsb
mov
imul
jle
mov
dec
lcall
adc
ss
add
fs
mov
pop
sbb
jp
les
jle
movaps
fistps
xchg
add
insl
cmp
sub
jo
push
inc
push
rcll
cmp
dec
dec
sbb
mov
mov
mov
inc
sbb
repnz
jbe
xchg
jle
ja
mov
or
je
or
adc
pop
movsl
cmpsl
sbb
psubsw
mull
xchg
mov
mov
test
cmpsl
loopne
pop
jo
mov
pop
test
jg
dec
ud2
xor
adc
mov
flds
xchg
jle
xor
mov
adc
mov
xchg
add
or
jns
cltd
mov
push
adc
lret
sub
pushf
out
and
jle
shr
popa
adc
insl
icebp
sbb
aas
or
lods
dec
cltd
clc
mov
ret
adc
push
jmp
ret
pusha
sub
jp
scas
mov
lahf
cld
inc
push
sub
and
inc
dec
les
dec
or
dec
jb
lret
loopne
loopne
test
movsl
outsl
lret
adc
push
mov
imul
pop
stos
aam
stos
mov
test
push
mov
or
pop
lret
sub
mov
out
std
jecxz
push
adcb
jp
inc
outsl
jnp
je
sbb
cmpsb
lods
mov
push
stos
cwtl
mov
outsl
into
lcall
dec
mov
mulb
push
repnz
cmc
push
sbb
out
sbb
movsl
adc
pop
hlt
push
clc
adc
in
mov
clc
xchg
sbb
lods
mov
xchg
push
call
andl
into
cmpsb
adc
lahf
inc
mov
adc
addr16
mov
andb
sbb
mov
aad
insb
scas
and
lods
push
stos
sub
lds
or
mov
fsubs
out
fs
jle
push
out
or
sbb
xor
jge
push
cld
fs
jae
inc
dec
xchg
aad
scas
sbb
mov
scas
stos
add
stos
sbb
nop
mov
and
mov
jbe
insb
pop
mov
pop
inc
inc
and
js
inc
lods
inc
and
cmp
fisubl
movl
in
add
mov
cld
cmpb
call
sub
push
sub
stc
test
adc
xor
lods
cmp
addl
sub
pusha
mov
arpl
icebp
mov
dec
lea
mov
mov
je
add
stc
stos
adc
mov
jo
mov
mov
lahf
dec
inc
pop
and
imul
sub
sub
sbbl
addr16
mov
ret
xchg
jecxz
pushl
fiadds
inc
aad
movsl
jb
es
push
test
inc
sbb
adc
add
and
into
add
lahf
ja
das
scas
mov
fs
lahf
cmpsb
out
loopne
data16
das
pop
adc
pop
xlat
incl
je
cmp
fdivl
jmp
push
pop
pop
pop
pop
xor
xor
or
pop
sbb
repz
add
xor
sub
xchg
repz
fwait
mov
repz
fmull
lods
cli
push
jge
out
add
adcl
in
cs
outsb
adc
pop
lock
sarb
mov
ljmp
in
imul
pop
shll
outsl
lcall
adc
push
adc
popf
inc
or
jno
sub
movsb
mov
sbb
aad
xchg
shl
fdivs
sbbb
add
imul
push
mov
jg
push
mov
xor
pushf
and
test
or
outsb
and
lret
jp
push
les
lahf
cmc
push
aad
push
loope
sub
popa
pushf
das
idivl
test
out
imul
shr
daa
jne
sbb
sub
test
icebp
jns
add
fsubrp
in
movl
or
lahf
cmc
scas
std
int3
xchg
sub
mov
and
inc
xchg
addr16
scas
jl
jmp
push
mov
data16
int3
cmc
jle
cmp
jp
out
jl
fistps
jnp
shll
out
mov
jnp
shrb
xchg
jbe
stos
sbb
test
cmp
dec
adc
aaa
insl
rclb
cld
aam
xor
pop
lods
movsl
xor
ss
mov
cmc
je
fbstp
dec
ljmp
jb
js
hlt
push
repnz
push
cmp
adc
gs
divl
dec
pop
jnp
outsl
push
insb
sbb
es
dec
push
push
hlt
adc
fidivl
and
movl
sbb
test
lds
jg
je
fsubl
popf
out
out
push
inc
imul
sarl
into
stos
ds
popa
cmp
add
pop
xchg
cmp
mov
shlb
push
in
pop
mov
dec
sbb
arpl
arpl
mov
aas
add
aaa
xchg
push
lret
jbe
das
xor
and
loop
cs
or
jmp
dec
dec
mov
call
xor
inc
mov
mov
jecxz
inc
mov
mov
sahf
test
jns
mov
icebp
mov
jns
mov
pop
dec
lods
adc
jb
stc
cmpsb
mov
inc
jecxz
push
jno
mov
cld
loop
and
shrl
inc
jns
jne
jg
mov
sti
and
mov
jg
mov
mov
stos
add
xchg
inc
cmp
jnp
cmp
cmpsl
daa
scas
mov
aad
outsb
jns
push
dec
les
lods
pop
pop
or
pushf
out
or
shlb
jno
cmp
sahf
aas
out
leave
cmpsl
filds
call
cmpsb
fs
into
mov
sub
mov
insb
jb
ret
je
jge
mov
icebp
jecxz
in
pusha
mov
push
rol
jp
mov
pop
mov
fmulp
in
pop
sbb
cmp
dec
sahf
dec
jns
gs
mov
leave
xchg
pop
cs
lock
and
ret
mov
jns
lds
gs
mov
imul
mov
fs
cmc
inc
adc
jae
xchg
adc
in
adc
jo
repz
aad
inc
sub
add
mov
pop
mov
scas
xor
mov
rcl
notl
cmp
bound
ret
or
nop
jno
lcall
and
xor
sbb
dec
fst
inc
sbb
cmp
dec
jns
jbe
imul
aam
in
or
jmp
jbe
out
test
repnz
mov
das
and
adc
mov
setb
lea
inc
ja
int
cs
xlat
push
mov
aad
dec
lds
fldt
fwait
imul
je
lea
push
enter
pushf
push
addr16
cmc
or
test
repnz
icebp
inc
mov
adc
gs
lcall
enter
out
adc
js
ss
and
in
or
push
daa
imul
add
dec
fwait
cmp
cmp
fmull
cli
les
xlat
adc
push
popa
arpl
jl
mov
loop
xlat
xchg
mov
lret
cld
xchg
je
mov
sub
out
mov
mov
mov
ljmp
mov
ret
pusha
mov
fnstsw
movsb
pop
lcall
mov
add
cld
xor
mov
movsl
inc
sarl
or
movsb
inc
pop
outsl
jl
andb
rcr
adc
jmp
mov
outsl
test
sub
mov
pop
test
clc
in
je
flds
int3
notl
xchg
lahf
pop
mov
addr16
add
jne
xchg
xchg
inc
pop
jmp
fmuls
push
stc
add
in
or
add
enter
out
xchg
filds
ret
icebp
push
loop
adc
sbb
xor
inc
aas
and
dec
fwait
jno
fcmovnu
out
push
lods
outsl
into
enter
jns
pop
je
pop
or
bound
sbb
int3
xlat
xor
xlat
jmp
or
pushf
int
adc
js
movsb
call
push
cmpb
stos
jne
push
xorb
call
fcoms
or
mov
push
inc
push
pop
fstps
int
push
das
inc
std
ja
add
sub
nop
sarb
xchg
mov
cmp
int
xchg
call
pusha
sbb
addr16
inc
jae
push
lods
and
pop
mov
orl
lcall
lock
inc
out
and
sbb
ss
sbbl
add
scas
push
fucomi
loop
in
xchg
lea
cmp
fisubl
fsub
inc
xchg
aas
cmp
add
stos
pop
cmpsl
jp
in
in
pushf
cli
outsb
adc
inc
push
mov
adc
dec
ljmp
test
pop
push
cmp
inc
cmpsl
iret
movsl
and
sbb
fdivrl
cmp
mov
dec
jle
hlt
sbb
mov
mov
sub
je
outsl
pop
je
mov
push
enter
cmp
stos
loop
fsubl
mov
mov
outsl
lods
aam
shlb
and
insl
cmp
fistpl
adc
insl
mov
push
inc
int
add
cmpps
or
push
arpl
rol
jg
mov
orl
mov
mov
push
jae
jge
push
movsl
in
mov
cmpsl
daa
add
jl
push
cmp
push
aad
jg
in
ds
inc
jle
xchg
sbb
inc
addb
pusha
inc
out
into
cmp
sub
int
jo
xchg
dec
stc
mov
mov
mov
cmp
add
sbb
mov
movsb
ljmp
les
ja
sub
mov
jae
adc
out
push
xchg
scas
adc
mov
mov
das
movsb
xchg
xchg
sbb
cltd
jge
ret
sti
ret
fnstcw
sbb
sti
test
mov
adc
or
fisubrl
lret
push
fcmovnbe
cmc
or
adc
jb
adc
dec
jo
pop
negb
pop
pop
test
pop
adc
add
mov
aaa
cmp
pop
gs
dec
push
je
jbe
push
pop
daa
addb
inc
pop
xchg
xchg
push
out
inc
adc
jle
sti
jns
cwtl
clc
sub
adc
rcll
dec
shl
xchg
xchg
pop
sbb
shlb
sbb
mov
std
scas
push
mov
scas
add
loop
and
push
int
xor
and
sahf
dec
cmp
mov
cld
loope
or
lock
fcmovbe
lods
fwait
mov
rol
pusha
addr16
mov
adc
fists
lahf
sub
aad
out
xor
sbb
lods
mov
das
aad
fisttpl
sub
xchg
dec
pop
push
mov
jb
xchg
iret
dec
jmp
scas
push
sbb
xchg
push
std
xchg
mov
dec
mul
je
dec
enter
sahf
mov
movsl
dec
ljmp
adc
mov
mov
jno
lds
ja
cmpb
idivl
sub
xor
sub
xor
int3
xchg
fwait
int
pop
add
addr16
adc
pop
cmp
cmpsb
std
aad
sub
sub
lods
jnp
xchg
stc
cli
xchg
mov
jp
xor
mov
mov
les
nop
gs
push
mulb
pop
lods
inc
mov
xor
mov
sub
test
mov
insl
push
and
pop
mov
lods
cmc
outsb
xor
xor
push
mov
xor
lds
ja
jmp
sbb
js
push
mov
sbb
mov
lods
stos
in
ds
mov
jmp
xor
bound
pushf
inc
xchg
dec
test
push
std
push
aaa
icebp
int3
jl
jo
fsub
or
push
xor
sub
fidivl
jle
dec
in
cld
and
int
insl
or
sub
sub
push
cmp
xor
inc
out
dec
rclb
pop
adc
test
mov
sarl
pop
and
cmp
addr16
sarl
bound
clc
xchg
int3
mov
jmp
and
adc
fiaddl
jo
cmp
sub
stos
cmp
pop
mov
jns
push
jne
mov
add
xor
pushf
adc
movb
cwtl
ss
ja
clc
and
js
les
lret
mov
pop
data16
mov
add
xor
lcall
popa
sbb
jmp
push
lock
jg
aas
and
cmp
lds
cmc
push
push
addr16
push
mov
or
in
cmc
inc
fwait
xchg
xchg
xchg
xchg
dec
xchg
dec
cli
je
shlb
add
cltd
rcrb
dec
ret
fwait
push
inc
mov
mov
jo
jmp
cli
andl
into
jmp
jnp
xchg
jl
lds
cld
jg
cmp
mov
jbe
inc
or
cwtl
add
mov
fmull
mov
xchg
xchg
out
outsl
outsl
xor
insl
mov
lea
shrb
jns
sub
cli
jp
test
add
xor
jae
sbb
sub
cmp
jl
sbb
sub
clc
xchg
iret
sub
add
sahf
les
xchg
repnz
xor
xchg
gs
imul
iret
pop
in
pop
int3
xor
test
movsb
dec
sti
jae
mov
and
xlat
sbb
push
sti
mov
adc
xor
arpl
and
xchg
outsb
dec
dec
mov
hlt
or
cmpsb
jne
or
fidivrl
shll
cltd
ds
fs
sub
out
jecxz
int
push
andl
es
jmp
mov
mov
lcall
jp
add
xchg
leave
ret
jg
lahf
mov
nop
adc
mov
xor
mov
insb
adc
add
loopne
in
fnsave
push
cld
movsb
lret
loope
data16
or
inc
fcomp
ret
nop
xchg
je
dec
dec
dec
sub
ds
add
lock
imul
jb
jb
ficompl
mov
xor
fimull
push
adc
test
adc
sub
pop
push
scas
push
dec
push
sbb
icebp
ja
std
outsl
rcrl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
lcall
dec
adc
stc
xchg
lcall
push
add
fisubrl
jp
adc
stc
xchg
lcall
push
add
lcall
push
add
lcall
pop
enter
ficoml
inc
adc
push
pop
mov
testl
bound
out
add
fstpl
push
push
xchg
repnz
ja
ss
push
add
popf
bnd
cltd
ljmp
aad
stc
sbb
dec
std
lods
xor
orb
jae
xor
add
inc
cltd
inc
rclb
pcmpeqb
test
xchg
cwtl
sbb
stos
repz
clc
sbb
test
outsb
or
pop
out
xchg
out
xchg
xor
pushf
sahf
nop
sub
call
shrl
add
ljmp
xchg
lcall
pop
add
cmp
jp
adc
stc
xchg
fwait
pusha
push
jo
adc
add
lcall
push
add
lcall
push
adc
lcall
push
add
lcall
sbb
xchg
daa
pop
adc
adc
stc
xchg
mov
jp
add
stc
xchg
lcall
push
add
lcall
push
add
push
push
pop
jp
adc
stc
xchg
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
outsb
jno
cmp
xchg
mov
adc
stc
xchg
lcall
pop
add
lcall
gs
cmp
xchg
lcall
push
add
movsb
outsl
pop
jp
adc
stc
xchg
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
lcall
push
add
je
pop
push
ficoml
mov
add
cld
xchg
cmp
pop
inc
je
in
sub
out
dec
imul
mov
sub
pop
sub
daa
ds
pop
push
iret
cmp
call
pop
sub
mov
pop
mov
jp
popf
cmpl
shl
push
rcrl
dec
xor
sbb
and
pushf
sub
mov
addr16
cli
mov
jo
dec
mov
sbbb
cmp
inc
mov
inc
sbb
inc
ljmp
sub
xor
mov
sub
cmp
loope
ret
rcrb
adc
dec
adc
js
in
mov
popa
lods
add
push
cld
jae
dec
fsubs
aas
dec
int
add
lods
and
pop
mov
cs
inc
or
xchg
pop
imul
mov
ret
mov
push
and
xlat
adc
mov
jo
pusha
cmc
test
adc
icebp
mov
pop
mov
jl
xchg
dec
mov
scas
test
mov
xor
cmp
push
divb
cmp
std
bsf
sarb
ds
es
fsubs
jge
inc
xor
xor
clc
mov
clc
inc
lahf
or
insl
inc
movsl
mov
hlt
or
sbb
enter
inc
xchg
movsb
pop
xor
lods
pushf
sub
mov
arpl
jo
std
sub
les
xlat
mov
push
push
inc
or
xor
fsubr
addr16
and
dec
inc
xchg
iret
adc
add
leave
jl
inc
adcb
loop
je
mov
repz
and
mov
mov
mov
lahf
cmpsl
pop
das
stos
loope
fwait
xor
jnp,pn
imul
jbe
xchg
adc
sbb
subl
pop
lahf
clc
sbb
ss
scas
xchg
sub
xor
subb
mov
push
cmc
sub
cwtl
push
cld
and
jge
hlt
sahf
and
cli
out
inc
xor
movsl
and
jg
cltd
push
icebp
adc
jle
jp
mov
fists
imul
repz
hlt
dec
sbb
fwait
xchg
add
daa
jns
ljmp
xorl
stos
pop
ret
and
pop
inc
lock
add
lock
jp
cmp
adc
in
jb
or
jl,pn
les
mov
mov
rclb
mov
repnz
mov
or
xchg
jns
cli
jno
lcall
imulb
cmp
scas
mov
sti
sub
out
std
jno
xorb
enter
out
dec
shl
sahf
jno
frstor
or
sub
gs
insb
enter
mov
sbb
push
sbb
pop
adc
nop
iret
cmp
xchg
add
inc
jbe
mov
scas
mov
outsb
fidivrl
sbb
xchg
xchg
xor
and
cmp
pop
push
push
adc
push
in
xor
sub
push
aaa
mov
sbb
loop
outsb
mov
fsubrl
xchg
or
or
mov
mov
fwait
lret
add
ds
addl
into
lret
and
xchg
into
lea
xor
xchg
jbe
clc
pop
inc
rcrb
loopne
jno
dec
mov
add
jns
jmp
je
jl
inc
push
cmp
aam
daa
jnp
pop
pop
icebp
fmull
push
lods
cwtl
xor
repz
push
fiaddl
mov
adcb
xchg
inc
popf
scas
lock
outsb
cmp
inc
inc
add
and
int3
jge
jb
pop
xor
add
ret
mov
dec
mov
shrb
hlt
test
jnp
dec
cmpb
callw
mov
jnp
mov
aad
arpl
popf
or
cs
jl
out
mov
adc
sahf
es
imul
xchg
push
jmp
and
lahf
popf
pop
pop
or
cmc
push
in
and
movsl
jge,pt
push
lcall
popa
pushf
jno
mov
test
call
je
inc
adc
pop
cld
cmp
into
sbb
add
jae
mov
inc
add
and
scas
or
data16
es
add
xchg
or
cs
int
sahf
in
mov
gs
test
pop
fstl
pop
mov
sbb
gs
dec
dec
movsl
cmpl
or
add
addr16
xchg
dec
cmpsl
or
adc
loop
pop
inc
icebp
jl
iret
lock
push
xchg
int3
cmc
ja
lods
pop
xor
idivb
sub
and
pop
push
xorl
std
ljmp
xchg
mov
loopne
stos
lcall
mov
xlat
in
fdivr
int3
add
and
loopne
rcrl
fisubrs
pop
ljmp
loope
adcb
pop
xchg
cmp
dec
ficomps
cli
popf
push
xchg
sti
cmp
aas
or
shll
pop
lds
fstl
mov
inc
imul
js
and
jns
mov
lea
lea
inc
mov
loopne
js
aas
ss
inc
fwait
inc
xchg
xchg
xor
sbbl
icebp
mov
jge
out
pop
ss
clc
xchg
and
ret
adc
or
push
test
aas
repz
cmpsl
dec
mov
pop
cmpsl
out
mov
push
jo
dec
out
inc
in
ret
icebp
mov
sarl
ror
cmp
or
movsl
test
lcall
pusha
fbld
xor
jb
cmp
insl
cmpsb
sarb
leave
push
pop
inc
lret
and
xchg
dec
jg
mov
ljmp
pop
push
xor
sbb
and
repnz
es
push
lods
popf
push
xor
sbb
xor
lods
and
sbb
sub
fstps
adc
fiadds
popa
das
mov
xorl
enter
sahf
xor
stos
inc
pop
inc
pusha
pop
jl
adc
inc
or
fbstp
fucomi
inc
mov
mov
sbb
enter
cmp
xchg
sub
add
movsl
sub
repz
sub
call
ss
mov
lods
push
jo
xor
imul
adc
mov
jg
sub
les
lods
pop
hlt
mov
out
ljmp
mov
push
insl
in
xor
mov
pop
out
sub
decl
adcl
js
je
lods
adc
repz
sub
cltd
and
pop
mov
dec
loope
hlt
dec
cli
jg
stos
jae
hlt
inc
cltd
stos
push
mov
and
sahf
int3
sub
pop
repz
cmpsl
clc
rep
lahf
lcall
mov
push
jmp
insl
dec
mov
add
sub
push
and
cld
dec
loopne
cwtl
jne
push
aad
adc
push
sub
xor
xchg
adc
lods
lcall
mov
or
push
mov
push
pop
leave
sbb
lahf
jl
rcrb
mov
adc
xchg
add
sbb
pop
aaa
call
decl
push
xchg
outsl
mov
shlb
mov
push
cmp
rol
mov
mov
stc
inc
sub
std
sub
pusha
ror
inc
and
fs
push
pop
neg
push
scas
dec
push
sub
bound
pop
and
stos
imul
ficoms
push
fiaddl
add
dec
adc
mov
gs
rorl
es
adc
sbb
add
jge
icebp
add
pop
mov
push
sti
mov
inc
nop
imul
or
cwtl
jmp
dec
pop
inc
pushf
and
sbb
decl
dec
js
mov
xlat
sbb
pop
jl
cwtl
adc
and
outsb
cwtl
mov
repnz
jno
adc
jmp
jmp
add
imul
fucomip
imul
adc
mov
lds
or
int
cmpb
lock
scas
jne
xor
pop
sub
call
shl
add
rcll
push
sub
xchg
sub
stos
push
push
lods
add
out
fcomps
adc
mov
mov
movsb
xchg
movsl
repnz
cmp
xchg
mov
xor
test
test
insl
popf
std
inc
mov
lcall
into
int
mov
sete
into
insb
lahf
andb
sbb
fwait
cld
mov
out
lea
aad
mov
out
pop
lds
test
into
push
jg
mov
jnp
mov
jno
cld
std
lret
mov
inc
pop
jecxz
mov
and
aas
mov
sar
add
out
call
xor
inc
mov
inc
xor
pop
sti
xlat
or
jnp
push
into
out
stc
push
shlb
sub
mov
fsubrl
cli
push
je
xor
mov
mov
mov
mov
fpatan
fdivrs
outsb
jg
jmp
xor
pop
dec
sbb
js
aaa
jecxz
lds
cltd
ljmp
xor
jb,pn
adc
incb
sbb
ljmp
xor
xchg
jb
roll
mov
dec
idivb
mov
pop
addl
loopne
xor
fstl
faddp
mov
and
ljmp
cmpsb
jne
cmp
vmaxpd
mov
inc
or
cmp
pusha
xor
sbb
mov
push
lcall
inc
outsl
adc
push
movsb
cmp
xor
jne
cmp
pop
aaa
sbb
jne
addr16
sub
jae
inc
adc
mov
in
leave
lcall
into
insl
pop
xlat
cs
cmpsb
sbb
adc
hlt
es
add
cld
mov
xchg
gs
and
jnp
subl
clc
enter
aas
push
shll
mov
lcall
push
movsl
xor
mov
mov
and
ret
shl
test
addr16
or
cmp
lock
std
adc
lds
push
mov
push
cmc
hlt
adc
mov
enter
add
sti
shrl
add
add
xorb
popf
lahf
pop
sarl
add
jne
cmp
in
sbb
lret
out
adc
jno
push
ss
inc
loopne
xchg
fisubl
jecxz
mov
sbbb
icebp
clc
jecxz
jb
cmp
pop
ret
arpl
hlt
addr16
fistpl
mov
adc
stos
insb
pop
leave
arpl
pop
mov
adc
sub
aas
and
test
or
xor
cmp
bound
scas
pushf
sbb
test
push
mov
cmp
mov
insl
pushf
and
push
ss
arpl
or
pop
mov
cmp
lahf
rorl
mov
mov
push
ss
sub
jnp
adcl
dec
xchg
jo
inc
popa
inc
out
in
jp
mov
test
rcrl
pop
je
push
pop
sbb
jnp
push
std
add
pop
push
mov
sbb
mov
cmp
jg
es
out
call
mov
sahf
xor
xor
add
xor
mov
push
adc
sbb
cltd
or
scas
pop
push
jbe
or
pusha
pushf
mov
xor
in
sbb
adc
adc
pop
push
sahf
add
adcl
xorl
sub
add
ljmp
cmpsl
and
mov
mov
sarl
mov
pop
in
pop
sbb
xchg
push
dec
mov
test
jo
jne
sbb
sbb
jo
ja
adc
sbb
fidivrs
in
mov
cmp
pop
mov
pop
rcrl
in
and
outsl
mov
ficompl
jl
enter
mov
adc
in
or
neg
and
add
pop
sti
add
in
test
inc
cmp
and
insb
dec
into
xor
sbbl
inc
jmp
jl
add
in
ret
inc
jb
lds
cmc
cmpb
test
add
lret
clc
sbb
out
test
es
mov
adc
in
dec
pop
movsb
mov
dec
push
stc
push
mov
nop
repz
pop
cmp
loopne
push
ja
ds
xor
inc
sahf
insl
js
cmp
scas
dec
mov
loope
push
mov
iret
xor
jg
and
pop
ret
inc
in
pushl
push
sti
out
outsb
mov
mov
pusha
add
sbb
adc
mov
dec
lahf
rolb
clc
xchg
inc
aas
xchg
xchg
push
jno
das
jno
bound
lret
ficoms
mov
xchg
lds
mov
adc
mov
in
ljmp
clc
inc
mov
sbb
adc
dec
ss
xchg
push
push
mov
mov
xor
in
jp
insb
mov
cltd
popf
and
inc
and
aad
mov
cmp
xorl
mov
adc
aam
cltd
pop
jp
pop
daa
in
xchg
cs
mov
lods
sti
fwait
lahf
and
jecxz
jne
push
mov
adc
pop
fadds
in
cmp
lret
add
fs
mov
mov
insl
adc
dec
dec
adc
fidivs
xor
jle
popf
outsl
adcb
mov
dec
sbb
pop
stc
fdivl
mov
mov
mov
insl
je
inc
or
test
push
mov
out
dec
inc
sub
sbb
push
jl
sub
int
push
fucomp
and
inc
fstpt
sub
mov
inc
push
fldenv
xor
mulb
push
and
adc
mov
in
or
scas
dec
ja
je
clc
inc
pop
mov
shlb
in
xchg
mov
xor
out
inc
jecxz
sbb
fbstp
lock
mov
int
add
inc
cli
decl
loop
sub
ret
lahf
inc
mov
sub
inc
lea
mov
clc
out
mov
data16
push
cmp
sbb
xchg
lods
fistl
cltd
ds
sbb
dec
sbb
mov
loop
dec
pop
lret
out
mov
adc
bound
out
sub
mov
shll
jbe
lret
in
mov
dec
in
xchg
pop
mov
out
jae
es
push
movsl
push
adc
cwtl
push
addr16
xchg
sti
inc
sub
pop
and
int
mov
ljmp
rcrl
aad
add
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubl
add
popa
inc
add
popa
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
arpl
movsb
arpl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
addl
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
inc
add
addl
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
test
movsb
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
