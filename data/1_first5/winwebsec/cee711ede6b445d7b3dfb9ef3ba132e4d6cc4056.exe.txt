push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
xor
inc
fisubl
and
dec
sbb
sbb
jns
or
mov
push
xor
sbb
pop
mov
push
jns
adc
xor
test
icebp
repz
push
sub
mov
sbb
push
and
pop
inc
stos
adc
push
out
sbb
mov
jns
sbb
push
scas
push
adc
pop
inc
xchg
push
adc
stc
lods
cltd
rcrl
jne
roll
jbe
test
in
xchg
orb
dec
int
push
stos
sbb
popf
jg
repz
test
bound
fcmovnbe
icebp
add
dec
arpl
sub
outsb
addr16
and
ljmp
outsb
lds
xchg
cmp
cli
add
outsb
pusha
push
out
mov
sub
add
dec
inc
lret
push
add
sti
nop
xor
rcl
stos
sbb
lds
dec
dec
fcmove
cli
jb
daa
mov
loopne
paddd
mov
mov
and
inc
es
jns
dec
fldenv
add
add
push
pop
mov
ja
jns
insb
mov
icebp
mov
or
icebp
test
sbb
add
add
jnp
mov
jns
jno
popa
imul
fmuls
inc
or
cwtl
fstl
jne
arpl
lea
fs
insb
cmp
imul
mov
dec
out
xadd
fwait
xchg
je
sahf
ds
lds
mov
iret
xchg
xchg
adc
xchg
sbb
int3
shlb
mov
loop
pop
or
je
pop
cmp
and
cmp
repz
ret
stos
out
jno
and
leave
std
inc
add
jnp
fldcw
mov
scas
cltd
jno
fxtract
fst
push
dec
insl
mov
and
iret
push
jo
lcall
jno
or
inc
mov
pop
push
inc
jmp
or
outsl
hlt
pop
fnstcw
sbb
lea
and
into
int3
mov
mov
repz
or
int3
sbb
mov
test
cmc
jo
mov
dec
test
out
and
jp
shrb
and
adc
xchg
push
push
ret
lods
sbb
dec
sti
inc
fpatan
lcall
mov
jg
dec
push
mov
and
fs
out
dec
push
notl
frstpm(287
mov
add
sbb
add
sub
pop
mov
add
data16
pop
mov
pusha
push
xchg
test
and
cmp
mov
xor
inc
jnp
or
lcall
jae
jnp
inc
dec
lret
inc
adc
lea
aas
scas
clc
inc
es
and
lods
or
jp
rcll
pop
loop
pop
addr16
adc
cli
test
je
fdivrp
push
cmp
add
xor
jbe
xchg
dec
test
jg
dec
into
out
imul
cs
mov
adc
sub
jns
mov
call
mov
fidivrs
pop
outsl
mov
xchg
vunpckhps
mov
cmpsb
jbe
mov
in
pop
jp
push
xchg
jns
mov
aam
hlt
xor
bound
outsl
dec
xor
xor
repnz
push
outsl
and
inc
insl
mov
cmpsl
xor
mov
test
arpl
ljmp
adc
or
adc
pop
mull
mov
lahf
sti
hlt
xchg
cmp
idiv
ret
dec
adc
mov
ret
mov
or
push
push
cmp
mov
stos
daa
scas
movsl
sahf
xchg
fnsave
frstor
mov
in
cmp
adc
xor
imul
loopne
pop
mov
enter
orb
in
mov
sub
mov
jae
xor
push
rorb
cmp
sbb
icebp
sub
jb
xlat
movsl
pop
add
add
std
ss
pop
dec
movl
xor
cmp
cmc
sbb
adc
dec
push
addb
mov
mov
lods
add
jmp
mov
xchg
cmc
outsb
mov
xchg
fs
es
insb
hlt
fisttps
pop
cmp
or
inc
jg
lret
inc
mov
adc
add
pop
mov
sbb
and
mov
push
scas
dec
xor
xor
mov
loopne
pop
fistl
push
add
int3
lea
ljmp
lahf
push
cmc
xchg
dec
adc
call
loopne
cmc
sub
gs
cmpsl
fidivrl
push
or
or
stos
push
xchg
cmpsl
or
divl
daa
popf
divl
repz
mov
mov
jp
sub
mov
cmp
dec
pushf
pop
sahf
pop
pop
iret
lods
xchg
mov
das
sbb
lcall
mov
xchg
pop
jnp
int
add
aas
dec
into
pop
pop
sahf
xchg
sub
mov
pop
xchg
sbb
pusha
jl
fdiv
scas
ja
js
arpl
test
dec
xor
jb
and
cmpsb
push
outsl
mov
xor
mov
pushf
aam
lock
pop
and
sub
and
adc
cmc
loop
jmp
xchg
ret
pop
adc
adc
mov
cld
dec
sub
jp
stos
nop
dec
arpl
jecxz
pop
jecxz
push
mov
das
add
dec
push
push
cmpsl
sar
daa
ja
add
pop
mov
fcoml
cmc
add
movsb
or
in
or
mov
mov
cld
jne,pn
adc
mov
aam
bound
or
lret
jnp
mov
nop
mov
xor
insl
rcr
jo
mov
aaa
mov
mov
shlb
fnstcw
aaa
xor
mov
std
enter
dec
mov
sti
adc
insl
xchg
pushf
test
shrb
add
jmp
cmp
into
js
lock
dec
fwait
out
mov
mov
push
or
mov
les
fisubl
add
jne
mov
cli
scas
out
dec
stc
xor
out
push
movsl
xor
imul
in
pop
pop
xchg
mov
mov
jge
out
mov
jo
das
rcrl
add
xorl
addl
icebp
pop
test
xor
clc
inc
push
cli
jl
or
xorb
cmp
pop
fistl
adc
aam
inc
pusha
vpacksswb
pop
and
add
push
inc
cld
enter
clc
js
cmp
xchg
cmp
fcoml
in
je
sti
rorb
cmp
ret
push
fs
fwait
pop
stos
jecxz
adc
inc
lahf
jp
mov
fcoms
push
loopne
pop
fmul
adc
fbld
cmp
jl
cld
xchg
pushf
cld
cld
or
jl
in
sbb
fisubrs
mov
testb
add
push
rcll
lock
pop
dec
inc
inc
pop
jbe
jge
mov
jnp
xchg
adc
fisttpl
pop
arpl
shrb
outsb
xor
or
xchg
mov
xor
add
add
aas
cmp
inc
scas
mov
xor
movsb
leave
jo
je
dec
xchg
in
and
mov
pop
sbb
mov
imul
mov
rol
and
jb
xor
jl
pop
mov
dec
pop
loopne
sub
xchg
rcr
mov
xor
push
fsubrs
adc
clc
jge
sbb
test
fstp
daa
fstpl
pop
ljmp
cmp
lea
in
mov
stos
xchg
jge
push
fists
iret
mov
or
and
shlb
movsl
insl
and
aaa
cld
sbb
inc
ljmp
and
divb
fnstcw
call
fists
jmp
shrb
jbe
adc
sub
ds
fisubs
nop
mov
pop
dec
je
bound
push
dec
add
xchg
imul
pop
scas
sbb
mov
push
mov
arpl
pop
movsl
sbb
lret
mov
sbb
fidivs
mov
add
les
push
shlb
aam
inc
cmp
std
leave
pop
ds
sub
xchg
bound
movsl
jno
lds
mov
add
mov
pop
pop
jo
ja
cmp
fmull
mov
outsl
test
sbb
call
xor
jmp
icebp
scas
dec
leave
fisubl
dec
popaw
add
test
imul
cmpl
or
jmp
jno
out
adc
popa
sub
fists
and
testl
leave
adc
dec
neg
insl
inc
out
inc
lret
lods
movsl
fwait
push
hlt
int3
shrl
mov
loop
adc
sub
fwait
jle
enter
mov
mov
ljmp
jle
sar
inc
std
fwait
mov
call
fmul
mov
mov
and
fstps
mov
inc
pop
sub
xchg
out
mov
inc
ljmp
rcl
adc
xorl
hlt
add
push
or
pop
mov
out
cmp
fldl
mov
mov
aaa
mov
xchg
out
data16
into
mov
pop
pushf
sbbb
dec
movsb
mov
std
sbb
sub
pop
mov
push
lret
ljmp
ljmp
cmp
sahf
call
jmp
push
jmp
push
mov
xor
dec
shl
jge
insb
ljmp
rorl
mov
sbb
dec
pushf
dec
mov
ss
fimull
add
stc
bound
and
jg
test
cmp
dec
cld
add
scas
or
fnsave
cs
xor
add
pop
dec
jp
stos
sti
popf
mov
leave
mov
call
sub
fdivrl
aad
rcll
imul
cmc
lahf
lods
cmp
mov
flds
aas
sbb
movsb
mov
sub
loope
aam
push
and
lret
es
movsl
sub
mov
lcall
lods
jno
and
push
lock
loopne
xor
imul
sbb
jae
push
jg
lcall
pop
cwtl
dec
outsb
shrl
test
cmpsl
xchg
cmp
fwait
das
xchg
cli
xor
sub
ja
push
cmp
out
out
adc
test
add
neg
int
cmp
imul
mov
jae
mov
sbb
add
xlat
mov
clc
cmpsl
leave
out
out
add
xchg
add
dec
les
out
adc
loopne
push
inc
subb
sub
jbe
or
push
mov
xlat
xor
pop
mov
int
dec
lcall
sub
inc
int
movsl
xor
movsb
pop
popf
mov
mov
es
or
xchg
mov
jmp
popf
in
nop
out
pop
out
pop
mov
stos
loopne
out
inc
mov
movsl
out
aaa
mov
and
xor
pop
scas
and
dec
push
ljmp
pop
int3
cs
stc
xchg
pushf
scas
aaa
inc
scas
jg
subl
add
lds
cmp
lret
int3
dec
mov
jle
fs
adc
mov
push
and
adc
out
push
frstor
lret
jecxz
out
fs
enter
daa
jae
stos
jae
ret
je
cltd
popf
pop
arpl
cld
ficompl
loopne
mov
ss
sub
adc
xor
jle
out
fsubs
repz
adc
mov
and
ja
shlb
into
int
in
cltd
shll
sbb
sub
je
aad
divl
sbbb
cmpsb
testl
jmp
test
xchg
push
cmpsb
and
xorl
push
mov
jb
lods
enter
outsl
cli
jle
mov
pop
gs
push
ds
movsl
push
rcll
dec
push
inc
cmp
cmpsb
pop
jnp
int3
inc
roll
pop
addb
pushf
push
pop
xchg
jmp
stos
push
lcall
mov
das
or
loope
shlb
addr16
cmpsb
rcrl
push
xor
mov
cs
jl
popf
jnp
fwait
xor
lea
xlat
push
imull
dec
sahf
insb
les
mov
repz
jle
scas
xchg
or
push
mov
cmpsl
cmp
mulps
push
lret
inc
inc
jne
fstpl
jae
cmc
add
xchg
mov
and
jbe
push
jno
xchg
add
adc
movsb
psllq
push
pop
mov
stc
mov
pushf
cmpsl
xchg
fisubrs
push
push
popa
std
andl
xorl
fs
fsubl
insb
test
jmp
mov
stc
ja
pop
les
sub
test
mov
add
and
add
mov
test
setb
lret
mov
push
pop
clc
je
int3
fiadds
enter
pushf
jae
ds
data16
arpl
xchg
and
enter
sub
mov
or
sbb
into
sti
mov
mov
jp
inc
adc
repz
push
arpl
mov
inc
and
stos
fidivl
add
int
out
shll
xchg
mov
adc
aaa
int3
mov
rcr
mov
mov
xchg
in
loope
dec
leave
pushf
negb
pop
sub
sbbl
std
fistpl
cmp
cmp
test
push
iret
cs
jo
mov
or
xor
je
lret
rcll
sbb
popf
lret
ja
add
adc
into
jo
push
push
sti
push
cmp
sar
adcb
outsl
jp
cmpb
pop
mov
popa
xchg
mov
add
inc
ss
sub
inc
jmp
inc
inc
aaa
add
pop
in
mov
ret
xor
or
pop
into
stos
inc
insb
adc
push
gs
inc
dec
int3
popf
jno
cmp
test
insl
std
ljmp
arpl
mov
mov
int
pop
sub
jae
mov
jae
dec
negb
data16
mov
mov
push
xor
shlb
inc
inc
cmp
or
int3
call
adc
call
and
or
add
or
daa
loop
fmul
add
imul
vsubpd
push
jle
into
inc
js
mov
imul
adc
das
xchg
pop
mov
ljmp
fistpll
repz
stos
roll
ret
xchg
pop
mov
int
lret
sub
adc
out
lretw
cld
sbb
lea
sbb
xchg
loopne
xchg
arpl
out
mov
repz
fdivl
pop
xchg
xor
cmc
mov
sarl
stos
orb
mov
jp
and
sbb
xor
ret
push
xchg
sub
sbb
pop
mov
sarb
in
xor
push
xor
aas
daa
popf
nop
dec
popf
xchg
cmp
push
or
cwtl
adc
in
push
push
jno
xchg
jo
push
mov
scas
fs
xchg
sbb
inc
jbe
imul
pusha
jmp
and
cmpsb
mov
adc
sub
lea
adc
and
lds
xor
cmp
ljmp
jg
iret
les
pop
pusha
add
int3
sub
dec
lods
pop
out
cmp
jne
stc
pop
insb
or
in
jns
jb
push
imull
rcrl
mov
jle
jmp
cmc
movsb
or
repz
ljmp
mov
xorb
fbld
ret
pop
inc
jecxz
fbstp
int
pop
mov
jo
xchg
into
sbb
cwtl
fsubp
popf
or
jae
pop
mov
xchg
push
adc
pop
lea
jne
addr16
jp
jmp
jbe
icebp
je
jp
stc
cwtl
js
mov
in
and
cltd
icebp
push
es
cmp
pop
pop
lret
nop
jo
add
xchg
jns
cltd
imul
dec
ds
test
cltd
loop
xchg
jle
outsb
test
lret
and
and
or
movsl
and
fidivrl
push
cmpsl
add
push
cmp
scas
push
jne
jns
mov
xchg
out
dec
sub
add
sar
outsl
xchg
test
arpl
add
jae
hlt
sub
pushf
cmp
and
cmp
imul
xchg
add
fcomps
rclb
into
pop
fnstenv
pop
notb
ljmp
dec
ds
fidivrs
movsb
clc
jbe
mov
dec
cli
inc
inc
jne
fmuls
enter
or
ljmp
enter
jmp
mov
xor
rcrl
push
sbb
test
dec
lcall
ljmp
aam
jl
mov
jg
loope
xor
pop
push
nop
or
fcomi
fsubr
ja
mov
int3
or
ficoml
pop
adc
lret
repz
decb
mov
inc
jno
cmp
ds
sbb
pop
push
push
push
mov
inc
or
pusha
hlt
pop
popa
dec
inc
lcall
jmp
fidivl
cltd
jo
jbe
stc
shlb
push
xor
popa
fstpl
pop
xchg
shlb
jecxz
notb
add
pusha
pop
xor
clc
rcrl
adc
push
mov
lcall
testl
test
ljmp
out
andb
or
out
cld
fcoms
add
insb
iret
hlt
pop
and
ret
shrb
popa
mov
jle
icebp
sub
movsl
fsubrs
int3
jecxz
push
jge
jge
mov
test
das
mov
pop
sub
dec
jl
stos
mov
cmc
ljmp
sahf
mov
fcomps
lea
jle
rorl
aam
mov
sahf
lret
jmp
push
jmp
mov
pop
xchg
mov
js
test
jae
fldl
loope
sbbl
lret
push
fs
sbb
or
out
dec
lret
and
mov
popf
pop
pop
mov
xchg
add
mov
dec
cli
cld
es
adc
mov
iret
addr16
dec
xor
lahf
mov
jecxz
hlt
or
rorb
xchg
jl
pop
add
dec
or
movsl
out
adc
stos
fidivrs
push
test
fs
jns
xor
dec
ljmp
mov
cmp
mov
cwtl
test
cwtl
dec
mov
xchg
mov
icebp
xorl
fidivl
or
adc
sbb
cmp
cmp
mov
dec
inc
testl
dec
cmpsl
push
testb
dec
aaa
cmp
clc
sti
xchg
xchg
sub
pop
xchg
lahf
mov
sub
dec
jecxz
cmpsl
pop
in
cmp
push
fdivs
stos
sub
fisubs
push
sbb
lahf
lods
jecxz
mov
jp
inc
xchg
fistl
xchg
leave
pop
add
cmp
inc
mov
jle
mov
rcl
clc
inc
sbb
pop
xchg
xchg
int
mov
in
or
xlat
sub
inc
sti
dec
and
mov
mov
insb
xchg
pushf
mov
nop
das
add
in
xchg
mov
and
inc
rcl
lds
mov
lock
push
repnz
jg
and
xor
rclb
icebp
loopne
xchg
push
push
and
adc
inc
sub
test
sbb
mov
outsl
enter
jb
cmp
push
push
mov
mov
jge
mov
push
incl
xchg
popf
pop
push
es
shrb
mov
mov
mov
jbe
fpatan
popa
cmpsb
mov
outsl
outsl
movsl
adc
sbb
or
jbe
push
jns
or
rcr
aad
out
dec
pop
fadds
dec
push
insb
or
je
push
cmp
rolb
ret
jge
in
or
pop
xor
cmpsb
or
xorb
nop
xchg
sti
insl
das
rclb
lret
mov
leave
xchg
mov
sbb
sub
ds
daa
push
rol
test
xchg
call
data16
es
aam
stc
inc
push
scas
adc
test
lea
rolb
xchg
repz
fwait
in
mov
aam
jge
lcall
ljmp
cmp
inc
int3
fs
cmp
sub
fidivs
lods
dec
mov
xor
xor
cld
mov
dec
in
ds
fucomi
xor
pushf
fidivs
sub
lods
cmp
push
add
push
mul
xor
pop
ficoml
and
xor
sbb
in
push
mov
mov
rcll
mov
popa
dec
jo
outsl
rcrb
jge
or
mov
popf
mov
jo
cld
idivb
addr16
cwtl
jle
addr16
mov
dec
inc
cld
and
mov
push
xchg
sahf
packssdw
js
aam
or
jae
mov
push
call
sarb
leave
test
sub
leave
in
comiss
aaa
push
mov
int
sub
push
jge
jmp
lock
adc
push
dec
inc
xor
lcall
test
bound
xor
mov
out
pop
cmp
loope
mov
fnclex
mov
xchg
popa
lock
mov
mov
cli
push
mov
pushl
cwtl
jle
fistpl
jecxz
leave
sub
xchg
pop
jno
cmp
sbb
into
mov
fdivl
push
pop
mov
rclb
xor
ret
mov
mov
sub
outsb
push
das
cmp
ljmp
je
or
pop
inc
and
pop
mov
pop
pop
dec
lods
inc
cmpsb
out
pop
in
movsl
cld
ss
loop
inc
imul
mov
scas
fwait
mov
sbb
inc
sbb
out
jbe
shrb
pop
aam
cmpsb
in
aas
stos
jno
ret
mov
inc
sar
cmp
cmc
fdivrl
movsl
cmpsl
outsb
outsl
decb
out
lods
fwait
mov
pop
push
mov
in
in
inc
inc
addl
negl
mov
insl
mov
jmp
jl
mov
jns
jp
pop
mov
and
push
int
sbb
xchg
aad
xchg
lcall
mov
or
pop
push
and
or
and
cs
mov
jnp
push
cmp
inc
jp
mov
dec
push
lds
testl
ds
push
outsb
pop
ss
movsl
ud2
sub
test
jbe
ljmp
fdivs
sub
mov
sub
inc
jle
inc
mov
inc
lods
ja
mov
in
push
and
cwtl
lods
pop
scas
jae
mov
pop
mov
push
ror
hlt
out
mov
sahf
xor
iret
arpl
pop
out
sub
cld
je
stc
pop
or
je
or
iret
xchg
lea
sub
xor
rcll
adc
xor
fstps
xchg
and
xchg
push
sbb
xor
outsb
mov
ds
test
or
xchg
push
ljmp
lock
es
mov
or
sbb
mov
xor
mov
jns
lahf
xchg
mov
inc
and
outsb
xor
push
aas
pop
mov
test
inc
repz
jge
das
mov
mov
mov
mov
cmp
cmc
cwtl
dec
dec
repnz
dec
lret
push
movsl
inc
adc
hlt
mov
jmp
into
stos
jp
imul
push
dec
ror
lret
jge
testb
stos
pop
pop
xchg
sub
sub
fwait
int
xchg
adc
hlt
dec
mov
or
xchg
jmp
cwtl
xchg
xchg
xchg
and
jno
dec
scas
cmp
leave
pop
out
gs
ds
or
mov
data16
cli
pop
ret
adc
sti
jmp
icebp
pop
nop
pop
bound
je
or
cld
adc
in
cmp
lock
cmp
test
and
je
ret
push
xchg
mov
cmp
mov
mov
in
dec
repnz
jno
pushl
es
fidivrl
cmp
imul
inc
movsl
jl
sbb
loop
mov
mov
xchg
mov
and
push
rcll
jmp
sub
daa
das
xchg
fidivrs
xchg
mov
fsubrs
cmp
bound
or
clc
insb
xor
shrl
inc
test
cli
adc
outsb
lds
sti
test
jbe
rcrb
mov
cmpsb
loopne
push
xlat
clc
fsubrp
je
xor
add
push
lret
jae
push
ja
push
in
jne
orb
add
leave
int
movups
push
mov
in
insl
fwait
loopne
add
cs
mov
outsb
xchg
dec
add
mov
or
jle
es
push
stos
lods
sti
mov
mov
repz
dec
mov
lahf
fsubrp
cmpb
and
add
lock
je
mov
out
cs
int
cmp
mov
testl
je
out
xchg
incl
roll
inc
loopne
jns
mov
mov
pop
pop
ss
push
mov
test
dec
mov
leave
mov
mov
pushf
dec
cmp
adc
in
xlat
sahf
shlb
cli
fsqrt
push
jns
test
xchg
sti
mov
sbb
sub
in
pop
jecxz
int3
xor
mov
lock
mov
aam
int3
popa
out
xlat
je
mov
push
xlat
mov
cmp
cld
dec
out
fcoml
cmp
jne
sahf
lret
pop
inc
inc
xchg
out
mov
mov
sub
subl
mov
cmp
jge
outsl
out
xchg
add
and
stc
jmp
and
out
push
test
push
lods
stos
in
jl
or
mov
mull
inc
add
ds
frstor
mov
push
ss
imul
outsb
xchg
hlt
aam
cmp
pop
mov
js
xchg
rorb
scas
and
jne
out
jno
xabort
loopne
inc
push
cmp
xchg
xor
lret
out
movsl
dec
jmp
cmp
sub
or
sbb
fisttpl
lds
fistl
rclb
loop
or
ja
hlt
dec
test
ss
cmpsl
test
jae
adc
push
xlat
cmpsb
in
dec
sub
lret
fcmove
adc
mov
cld
inc
mov
cmpsb
lods
mov
and
ficomps
fildll
mov
xchg
loopne
adc
cmp
jne
sti
test
loop
mov
adc
cmp
mov
mov
sbb
sbb
es
adc
jns
jge
push
jnp
mov
js
sbb
cltd
cmp
jns
test
xor
std
mov
iret
in
loope
sub
xchg
sub
movsb
rorl
xchg
xchg
std
icebp
cmp
mov
push
dec
je
adc
adc
jno
add
mov
inc
leave
cmp
xlat
faddl
mov
mov
push
jo
mov
loopne
adcl
stos
cmp
loope
sub
popa
push
sub
adc
in
fstl
mov
pusha
jg
pop
jae
sub
fisubrl
or
outsl
daa
lock
stc
jle
xlat
push
js
imul
add
dec
mov
stos
jno
jo
into
std
stos
inc
fdivs
dec
mov
scas
mov
enter
adc
mov
cwtl
cmp
loopne
loopne
mov
push
xchg
out
insl
rclb
mov
dec
jl
std
adc
repz
sub
icebp
loope
aaa
in
fists
dec
stos
xlat
lcall
repz
mov
inc
f2xm1
xchg
lds
inc
mov
stc
push
or
inc
mov
and
inc
push
arpl
xchg
or
in
push
mov
xor
mov
fiaddl
push
stc
leave
add
popf
test
sub
insl
add
gs
xlat
decb
pop
pop
or
pop
pop
adc
mov
jle
cmp
push
out
sbb
add
rcrl
icebp
cmp
js
orl
xor
lcall
mov
mov
inc
inc
add
inc
in
sahf
xchg
cli
ljmp
mov
and
das
out
les
ds
ficompl
mov
jg
adc
shr
lods
filds
cmc
fildl
cmp
pop
push
fcmove
aas
in
mov
jns
jne
clc
or
mov
lcall
add
das
mull
cld
or
dec
mov
mov
stos
sarl
and
push
pushl
fidivl
mov
in
adc
pop
inc
cmp
xchg
mov
pop
adc
xlat
sub
mov
dec
or
dec
in
orl
lods
inc
inc
lea
inc
push
jb
jae
adc
imul
mov
jle
mov
push
and
jmp
mov
jge
sub
or
scas
jne
inc
mov
in
jo
fwait
mov
fsts
repnz
pop
fisubs
push
fsubs
idivl
or
cmpsb
or
sbb
mov
icebp
and
not
ds
fsubs
cld
into
jp
adc
sbbl
xor
icebp
or
je
mov
jg
mov
enter
js
fisubs
sub
dec
pop
call
cli
test
fbld
icebp
push
add
inc
addr16
jmp
adc
dec
xor
aam
add
out
fcom
pop
aaa
scas
imul
test
stc
jno
lea
pop
pop
fsubr
adc
pop
adc
roll
xlat
popf
xor
daa
shl
push
sbb
jp
push
cltd
mov
int3
mov
cmp
scas
ja
cmp
xor
movsb
ror
stc
fldl
xchg
rcll
cli
lahf
ret
sbb
jno
inc
mov
gs
mov
pusha
dec
test
sahf
pop
scas
icebp
pop
addr16
pop
xlat
jecxz
and
rolb
cltd
push
xor
lea
mov
pop
fdivr
fdivs
inc
imul
fisttpll
rcrl
push
cs
std
sbb
push
sub
inc
adc
push
push
pop
adc
adc
lret
sub
jge
mov
sti
das
mov
pop
mov
popa
lret
or
jp
test
inc
or
or
test
mov
in
xchg
sahf
push
ja
inc
pop
fsub
call
mov
sub
cmp
cmp
adc
cmp
xor
xor
rclb
mov
pop
dec
xchg
xchg
push
fildl
shrl
fadd
call
shr
arpl
fcomp
xchg
add
mov
mov
cmp
daa
push
mov
enter
lea
insb
pop
pushf
test
shl
mov
loope
std
bound
or
sahf
subb
in
or
adc
cs
imul
out
jo
xor
cmp
push
add
in
pop
sub
mov
push
xchg
jnp
nop
ljmp
dec
imul
out
dec
inc
cmc
or
cmc
or
pop
fimull
ljmp
int3
dec
push
pop
and
rcl
pop
fwait
ss
lods
xor
mov
filds
imul
dec
pushf
rcrl
dec
xor
push
test
xchg
cltd
xor
mov
push
mov
add
cmp
inc
mov
and
imul
or
mov
orb
fwait
jg
test
or
mov
cmc
sbb
jmp
insb
xlat
icebp
and
insb
es
and
call
push
lea
xchg
je
mov
movsb
dec
in
test
stc
push
cmp
xchg
in
mov
cli
nop
push
imul
mov
rolb
mov
fistps
ret
xor
cmp
popa
lahf
mov
inc
xchg
sbb
mov
pop
xchg
mov
sub
cwtl
icebp
lock
lods
clc
aad
aas
adc
adc
loope
iret
outsb
push
fistpl
les
mov
into
hlt
jmp
jnp
lock
ret
testb
sbbl
inc
cmpsb
dec
xor
shl
xor
or
es
and
mov
and
mov
clc
sub
inc
pushf
imul
out
push
gs
jo
push
dec
int
lock
fwait
in
imull
pop
ja
mov
push
iret
mov
xchg
push
and
mov
sbb
icebp
arpl
cmp
ljmp
jno
mov
push
test
cld
jbe
cltd
mov
lea
aam
out
xchg
ds
xor
loopne
inc
outsb
dec
mov
nop
xchg
rorl
fcmovb
fsubr
fcom
fdivl
cmpsl
int
ret
xor
sub
sub
jbe
mov
cltd
hlt
clc
cmpsl
mov
jb
stc
fistpll
imul
pop
arpl
adc
mov
out
repnz
sbb
jecxz
cwtl
mov
inc
movsl
daa
cmp
sub
add
jae
pop
iret
push
call
mov
js
stc
or
ss
movb
xor
iret
in
into
mov
pop
adc
test
nop
and
xor
loope
mov
xor
push
dec
and
xchg
add
dec
cli
or
outsl
test
shll
lds
inc
xlat
jo
std
jecxz
push
in
sub
inc
leave
dec
xchg
adc
add
loope
cmp
jb
aas
adc
ffree
loop
inc
dec
dec
cmpsb
cmp
cmp
or
inc
sar
mov
ret
push
and
inc
sbb
lods
popa
mov
out
lock
dec
and
rol
imul
pop
outsl
push
push
incb
jmp
stc
in
push
cmp
adc
filds
andb
sbb
jbe
dec
sub
rep
and
jl
inc
inc
outsb
jmp
pop
fs
in
xchg
mov
sti
out
mov
popl
mov
and
xor
adc
dec
imul
mov
push
push
xor
push
mov
aas
xorl
push
insl
or
pushf
pop
mov
mov
lret
mov
lret
pop
test
loope
cmp
lock
xor
sub
movsl
outsb
push
xchg
aam
loopne
adc
orl
cltd
fiadds
or
cmp
loope
or
lods
xchg
repnz
add
shlb
outsb
dec
sbb
imul
fimull
rcl
cmc
and
inc
and
dec
mov
addb
mov
mov
dec
loop
insl
jb
add
fcmovnu
mov
xchg
jbe
rcl
shr
cltd
mov
cmp
mov
imul
call
testb
cmc
sti
mov
jo
imul
nop
adc
das
jbe
inc
test
dec
fwait
and
adc
das
jle
push
pop
lock
sbb
cmc
mov
fmuls
xchg
dec
add
mov
mov
bound
imul
pop
mov
mov
mov
mov
movsb
dec
bound
insb
or
cmc
or
rorb
adc
pop
sar
mov
ficompl
movsb
adcb
addr16
push
push
clc
movsb
push
mov
popa
or
or
icebp
inc
mov
dec
ret
jle
pusha
dec
push
xchg
movb
xor
cmp
data16
or
sub
out
jbe
stc
and
pop
dec
and
sbb
stc
cmp
stos
jnp
sbb
mov
or
in
push
popf
mov
push
push
lahf
pop
dec
hlt
and
nop
lret
xor
loopne
dec
lds
xchg
push
ret
fcoml
mov
and
fwait
push
adc
shrb
loopne
xchg
or
out
pop
lret
xchg
jp
adc
push
pop
nopl
inc
push
xlat
jg
mov
adc
in
push
add
xchg
fs
push
cmp
inc
mov
imul
dec
jne
mov
lret
dec
adc
mov
lock
mov
pop
popf
or
out
cmp
ljmp
dec
movsl
xlat
push
dec
adc
test
mov
lock
fxtract
push
adc
dec
mov
cmp
xchg
xlat
mov
or
sbb
mov
mov
rcrb
sti
lret
in
call
cmc
mov
push
adc
cmpsb
loop
ret
cmp
adc
psrad
xor
loop
imulb
test
in
loop
mov
in
dec
mov
insb
xchg
xor
outsl
sub
subb
jg
call
movl
test
jmp
sahf
or
ljmp
mov
loop
lret
insl
mov
xchg
mov
fadds
mov
xchg
negl
jmp
inc
ja
xor
andl
sbb
add
mov
fisubl
iret
lock
cmp
test
sub
adc
push
mov
popa
dec
cwtl
xchg
mov
xchg
adc
mov
cwtl
popa
cwtl
xchg
push
fwait
std
aam
xor
popa
mov
pusha
ret
pusha
mov
out
inc
out
out
scas
enter
out
or
inc
jmp
xchg
pop
mov
dec
ds
je
mov
or
out
xchg
shrb
pop
jp
xor
pop
pushf
jge
sub
inc
adc
rol
loop
xchg
jg
pop
xor
loop,pn
push
push
aas
xor
and
xor
clc
xorl
sti
xor
pop
jmp
or
mov
mov
pop
jl
xor
int3
movsl
and
adc
call
loop
gs
iret
mov
lcall
lret
push
iret
bound
fwait
icebp
scas
xchg
cld
je
sbb
pop
out
pop
cli
cmp
test
adc
sub
xor
dec
or
pop
mov
xchg
inc
sub
or
mov
pop
out
mov
or
fisttpll
mov
std
out
fnsave
xchg
rcrl
ds
push
ret
fiadds
lcall
ljmp
lcall
pop
inc
lahf
std
popa
jl
xchg
mov
lds
push
cld
rcrl
dec
jg
in
inc
and
sbb
lock
lods
ficompl
das
jns
fimull
outsl
scas
mov
or
push
sub
iret
push
test
and
fldenv
inc
mov
or
and
lods
xchg
in
ret
xchg
jne
cmp
push
ljmp
xchg
mov
sub
xchg
enter
in
out
loop
cmpsl
push
dec
inc
scas
movsb
mov
out
imul
mov
ss
add
adc
pop
fwait
push
movsl
push
icebp
cwtl
scas
aam
adc
ret
test
popf
test
daa
xlat
or
mov
je
inc
pop
test
xchg
data16
fcom
mov
pop
sbb
cmp
cs
imul
adc
repnz
mov
loope
and
jns
ss
hlt
lcall
inc
xchg
les
addr16
push
repz
or
leave
movsb
rorb
int
adc
jmp
shr
sbb
in
ds
neg
inc
rorl
mov
dec
and
sub
cli
or
mov
adc
xor
inc
push
je
sbb
xor
mov
pushf
jns
add
daa
mov
push
lea
lock
pop
mov
add
std
or
es
fmull
rep
jns
add
xor
pop
mov
mov
sub
inc
dec
and
pop
cmpb
cmpsb
cmpsb
dec
dec
frstpm(287
jb
out
fisttpl
adc
sub
mov
jmp
xchg
and
dec
sahf
lds
mov
mov
in
in
mov
sbb
inc
mov
popa
pop
xchg
fdivl
insl
pop
ljmp
xchg
xchg
or
cmc
and
pop
jl
jp
jns
xchg
scas
in
and
pop
or
and
lock
hlt
push
loopne
push
xchg
lahf
ret
dec
lea
push
fs
test
xchg
pusha
mov
stos
mov
rorl
lret
and
jmp
pop
loop
and
xor
out
or
sbb
sbb
inc
test
addr16
loope
xchg
xchg
jg
xor
cltd
repz
push
pop
rcr
or
mov
inc
outsl
push
dec
sbb
dec
push
add
sub
in
jmp
pusha
xor
cmc
repz
sahf
push
xchg
or
mov
out
out
jo
mov
pop
insb
push
cmp
jae
inc
je
fisttps
xor
xchg
std
lock
int3
sbbl
sub
mov
mov
loope
aad
and
cs
jl
sub
cmpsl
shrl
icebp
je
inc
dec
stos
cmp
loopne
std
dec
ret
and
push
cmpsl
mov
test
or
pop
pop
xor
pop
jne
fsubrs
jns
je
les
je
out
nop
and
out
dec
popf
pop
cmp
lock
inc
sbb
repz
dec
mov
test
in
inc
out
ja
cwtl
sbb
cli
aam
push
das
out
mov
int
inc
mov
popa
test
and
or
shrl
leave
fstpt
enter
push
nop
pop
xor
sub
es
mov
add
push
lock
mov
and
imul
stos
arpl
pushf
mov
loopne
lds
inc
lcall
pop
dec
daa
loop
aas
in
lahf
enter
out
cmovg
in
add
into
mov
mov
mov
dec
jmp
mov
subl
loopne
mov
cmp
out
pop
pushf
shlb
hlt
mov
mov
add
lea
sti
inc
sub
adc
lods
and
cmpsb
in
sbb
pushl
pop
mov
arpl
int
push
lea
inc
insb
pop
cmpsb
pop
add
pusha
fstl
sub
adc
scas
pushf
aas
mov
cmpsb
xchg
dec
bound
fistpll
shr
insb
xchg
sarb
mov
lods
sti
icebp
inc
pop
jns
or
out
ss
xor
pop
out
xor
pop
mov
aas
jmp
or
xor
xor
sbb
inc
sarl
das
add
xchg
repnz
dec
mov
pop
jecxz
dec
pop
dec
xor
insb
in
push
pop
push
dec
mov
dec
cs
sbb
fstpl
cmp
test
rol
add
pop
dec
jae
hlt
xchg
mov
les
rorl
sub
pop
mov
mov
add
mov
std
pop
ds
fs
call
ds
jl
cmpsl
arpl
and
push
orl
jge
push
and
adc
jae
rol
push
mov
or
xchg
lods
mov
and
xchg
loope
sub
hlt
mov
sbb
mov
xchg
arpl
sub
jp
lods
scas
or
idiv
cmp
pop
in
pop
push
sub
cmpsb
aaa
rcr
add
popa
dec
inc
lock
mov
push
dec
xchg
cmp
adc
inc
pop
call
mov
fisubl
ja
imul
bnd
pushf
cmp
or
sub
lds
cli
gs
jbe
bound
shlb
ja
loop
movsb
cs
add
mov
out
iret
insl
ret
iret
or
fsubs
lods
pop
xchg
or
sti
outsb
fistl
das
in
cmp
jg
jmp
loopne
push
mov
jmp
adc
jne
sub
mov
fisubrl
sbb
cld
pop
add
repz
pop
pop
or
pop
icebp
xchg
shl
addl
into
or
shlb
outsl
fildll
fadds
out
and
push
bound
ds
lahf
push
loop
clc
and
out
lahf
andb
adc
xchg
inc
sub
jo
repnz
cmp
push
or
lret
pushf
jmp
in
and
and
movsb
cmpsl
mul
or
sbb
push
pop
je
mov
inc
dec
jo
scas
les
popa
daa
out
call
int3
xor
fucom
in
push
lahf
pop
mov
push
mov
jae
fbld
cltd
inc
push
movsl
add
cmc
xchg
mov
mov
cmp
push
xor
mov
les
mov
push
fdivp
scas
shl
repz
js
out
sbb
call
pusha
jmp
rcrl
inc
pop
addr16
inc
xchg
adc
outsb
outsl
dec
lods
fldl
incl
inc
lahf
call
dec
out
jmp
call
lods
std
imul
sbb
ja
xchg
lret
push
adc
rorl
test
movsl
sub
idivl
xchg
icebp
sub
stc
and
push
test
sbb
pop
dec
lret
sbb
dec
sub
hlt
aaa
jo
std
out
outsl
shll
cmp
daa
data16
ljmp
lock
in
sti
ret
fisttpll
bound
les
adc
xchg
push
imul
loop
test
sub
push
les
mov
mov
movsl
push
jg
fdivrl
xchg
and
push
push
in
push
jo
test
jne
inc
test
bound
and
and
std
je
dec
xor
lahf
cmp
movsb
add
ret
shlb
loope
sbb
xchg
cltd
push
inc
icebp
loopne
dec
shlb
imul
fnstsw
mov
sbb
jnp
mov
push
pop
aas
js
test
cmpsb
mov
add
mov
out
rcrb
negb
jg
mov
mov
shrd
xchg
inc
bsf
shl
vmovaps
dec
xchg
mov
ficoms
jge
data16
scas
mov
mov
cs
jne
das
xor
leave
movsl
cmpsb
xchg
aaa
sbb
mov
xchg
fidivrs
xchg
xor
jb
jne
xchg
mov
xchg
dec
inc
repnz
mov
andl
adc
xor
aaa
dec
fbstp
call
mov
push
cmpsl
jbe
mov
sbb
clc
xchg
jns
mov
jmp
iret
mov
fisubrs
clc
test
sti
jne
fs
mov
hlt
movsb
jo
pop
out
inc
inc
js
xchg
arpl
cld
cltd
addb
cmpsl
mov
out
fs
jae
xchg
cmp
mov
lcall
mov
sbb
mov
dec
jb
imul
call
mov
xor
idivl
push
add
add
sub
mov
loope
nop
hlt
cmp
mov
jo
lods
xor
out
xchg
inc
mov
xchg
ficoms
xchg
or
mov
pop
lret
and
mov
xchg
pop
xchg
in
ficoml
loope
loope
das
test
xchg
fcomp
inc
movsl
jbe
ja
fwait
je
mov
int
mov
jg
mov
js
es
pop
push
pusha
scas
mov
lret
gs
data16
push
or
ss
pushf
mov
fs
pushf
push
xor
movsl
inc
cmp
lcall
mov
sbbb
jmp
loop
fucomip
inc
minps
loopne
push
jg
jp
mov
lahf
add
cmc
movsl
adc
cmpl
mov
scas
add
repz
cmp
arpl
xchg
inc
push
fstps
ja
jo
scas
mulb
fnstcw
mov
loopne
repz
push
std
and
xchg
out
add
loopne
dec
sub
jb
fwait
insb
popa
imul
popa
das
dec
ljmp
mov
dec
daa
xor
inc
push
femms
ljmp
aam
popf
stos
push
ja
mov
out
mov
in
dec
inc
and
jmp
mov
inc
aaa
leave
mov
xchg
mov
js
xchg
scas
jmp
stc
dec
jl
xor
xchg
jbe
cmpsb
mov
mov
mov
dec
mov
xor
jmp
or
fdivs
insb
add
xchg
cmpsl
add
cmp
sti
decb
pop
shll
inc
fld
repz
sbb
outsb
out
gs
mov
xor
cs
mov
add
addr16
cmp
and
sub
pop
psubb
xor
pcmpgtw
sahf
and
mov
sbb
fs
mov
xchg
add
sub
call
loop
stos
lods
xchg
pop
mov
les
xor
xor
insl
aam
out
fdivrs
cs
mov
sti
cmp
movsb
cs
lret
pop
xchg
inc
les
sahf
pop
sbb
mov
xorb
pop
push
inc
and
cltd
xor
xchg
mov
add
cmp
les
cmp
clc
pusha
cmp
mov
test
jp
in
dec
mov
dec
cld
and
or
les
fwait
dec
pushf
popl
bound
loopne
fnsave
clc
fbld
dec
xor
test
adc
push
fiaddl
xchg
and
or
xorl
je
mov
icebp
add
sub
or
sbb
popf
mov
shll
test
imul
sbb
inc
cmc
les
cs
mov
jge
out
fsts
push
test
pop
jno
sbb
xchg
push
mov
push
cltd
repnz
xor
add
jp
pop
jo
gs
stc
add
adcl
sub
loop
testb
scas
mov
cld
sti
xchg
push
jne
ja
pop
and
mov
or
ret
pop
daa
xchg
aaa
fbld
push
push
cmpsl
popf
dec
and
push
insl
mov
mov
lret
push
and
movsb
inc
and
fistpl
xorl
cltd
jmp
pop
fsubs
xchg
outsl
mov
rorb
or
xchg
lods
mov
add
pop
mov
mov
decl
jne
dec
push
jb
jnp
push
repnz
loop
push
or
sahf
inc
inc
adc
int
data16
insb
xchg
mov
jb
aam
test
divl
pop
xchg
fldl
mov
bound
fidivs
stos
test
jl
sub
adc
jb
xchg
sub
inc
and
cli
into
xchg
aad
sub
jbe
jno
xor
icebp
jmp
mov
add
mov
ret
leave
cmp
push
sub
cmp
jl
mov
adc
inc
adc
das
lock
arpl
dec
xor
mov
mov
movsb
ss
jle
jne
xchg
sub
adc
push
int3
jnp
mov
loopne
jl
sarl
andl
addr16
pop
bound
negl
stos
inc
jae
mov
cmp
push
fistpl
out
add
add
jle
xor
sub
jge
inc
pop
or
fs
call
push
add
out
jbe
jne
xor
or
scas
pushf
std
dec
cmc
push
push
mov
push
mov
aam
je
or
pop
cmc
jle
hlt
dec
imulb
das
mov
stos
push
fadd
add
pop
shl
je
pushf
mov
inc
mov
cmpsl
cmpsb
imul
xchg
test
inc
jp
mov
mov
les
pop
xchg
shr
test
sub
jecxz
xor
xlat
sub
je
push
shll
lcall
mov
ja
cmp
cltd
pop
test
sub
daa
xchg
sbb
xor
ret
pushf
rcll
in
jo
leave
xor
mov
js
outsl
or
call
xchg
jo
adc
pop
add
add
lea
jmp
dec
pusha
and
inc
push
ret
jecxz
or
xchg
fwait
push
push
fdivs
call
jl
push
xor
push
inc
loop
aas
jno
xor
pop
cmpb
mov
divl
sti
or
leave
loopne
xorl
mov
test
outsb
mov
int3
jbe
push
dec
mov
cmp
sbb
repnz
xor
add
dec
or
pop
xor
enter
xchg
pop
pusha
mov
add
push
out
lcall
mov
mov
or
aaa
insl
dec
jle
popa
rolb
repnz
cld
mov
sub
cmp
mov
mov
pop
mov
push
lahf
je
inc
and
push
xchg
mov
out
sub
add
xlat
pop
or
lahf
imul
scas
scas
adc
mov
idivb
inc
in
dec
mov
bound
jae
clc
xchg
mov
iret
mulb
or
xor
inc
lahf
out
or
inc
repnz
pop
inc
and
pop
mov
inc
push
call
pop
sahf
jb
stc
stc
andl
mov
sub
clc
into
shll
mov
pop
pop
stc
fimuls
mov
test
sbb
fstpt
push
or
mov
test
jl
push
loop
test
cmp
dec
mov
jno
mov
push
scas
sarb
push
scas
push
mov
repnz
insl
xchg
pusha
outsb
mov
or
in
jns
hlt
xchg
inc
adc
mov
inc
or
sbb
add
dec
fildl
popf
pop
in
repz
push
xchg
mov
jmp
cmp
ds
rcrl
pop
cmp
lret
inc
ss
cmp
lahf
xchg
xor
in
inc
in
sbb
jge
dec
rcl
push
add
push
or
shrl
pop
insb
ror
mov
sti
bound
xor
loopne
xor
stos
jne
mov
popf
pop
inc
hlt
fadd
dec
jo
sbb
ret
std
pop
mov
gs
jnp
dec
xchg
imul
into
popa
xor
sbb
addl
sub
stos
sub
lock
loopne
ret
sub
jo
adc
pop
xchg
push
inc
add
pop
xor
or
xchg
cmp
sbb
cmp
xchg
stc
cmpsl
scas
xchg
push
and
mov
fdivs
int
aam
daa
xchg
pop
add
rclb
pop
xchg
cwtl
jmp
mov
add
jo
push
movsl
mov
mov
psrlq
mov
xor
sahf
mov
lods
scas
clc
adc
mov
xor
add
dec
js
pop
push
testb
fs
mov
and
test
xor
mov
imul
jne
mov
cmp
or
mov
or
push
mov
inc
push
sti
xchg
fs
dec
bound
inc
outsl
sub
aam
imul
call
add
pop
ret
std
ret
pop
fists
shlb
lods
xchg
shl
push
loopne
std
lods
pop
imul
dec
sub
lcall
xor
lahf
mov
cmpsb
adc
das
in
jae
pop
pusha
jae
jle
jp
push
mov
repnz
xchg
cltd
xchg
jmp
mov
sub
enter
inc
sub
and
sti
xlat
fsubrl
sub
dec
into
nop
lcall
cmp
aad
iret
mov
or
push
sahf
adc
mov
pop
pop
jne
into
popa
push
imull
mov
xor
cwtl
adc
xor
ss
dec
shlb
add
movsb
pop
jno
sbb
inc
insl
js
inc
clc
in
push
popa
ficoml
mov
push
jo
adc
sub
jl
fmul
cltd
test
aam
xchg
dec
add
xor
dec
push
and
push
in
icebp
xchg
inc
dec
outsl
js
addr16
xor
movsb
add
sti
or
out
adc
icebp
push
repz
dec
ss
insl
jns
mov
mov
pop
loop
inc
adc
shld
into
dec
push
out
jge
cli
sarl
mov
mov
rol
maskmovq
imull
rorb
repnz
pop
js
push
cmp
mov
fsubs
cli
push
pop
xchg
sub
lret
adc
push
add
out
movsb
popf
and
add
ja
mov
xchg
jbe
pusha
adc
ffree
lahf
pop
dec
mov
dec
ret
sbb
pusha
scas
push
icebp
loop
jbe
xlat
lcall
stos
add
push
cmp
test
inc
les
fisubrl
mov
je
iret
xchg
insl
pop
nop
je
jae
adc
push
fldt
add
out
dec
loopne
jno
nop
and
mov
shll
push
scas
cmp
xchg
stos
loop
jecxz
sbb
stos
dec
call
sbb
mov
jo
or
popa
bnd
subb
add
inc
pop
int
loop
pop
das
mov
xchg
pop
sbb
jle
sbb
inc
inc
int3
scas
cmp
push
lret
cmp
mov
add
push
gs
testb
or
rorb
pop
add
push
repnz
dec
shlb
fimuls
mov
stos
jmp
mov
or
nop
lea
sub
or
push
lea
xchg
push
mov
mov
ret
fistpll
scas
mov
aad
cmp
or
mov
jnp
out
sbb
fidivs
repz
xor
add
add
xchg
jae
inc
or
xchg
mov
loope
bound
jg
jne
sbb
ret
stos
int
lock
mov
icebp
cmp
mov
adc
loopne
jmp
fildl
dec
aam
jecxz
sbb
shll
inc
mov
cmp
mov
mov
lock
xchg
xchg
xchg
lea
or
mov
xadd
sbb
or
test
jb
mov
dec
xchg
outsb
jno
pop
cltd
jns
je
js
lds
in
jns
clc
imul
cwtl
mov
dec
popf
clc
sub
mov
inc
sarb
push
cmp
pop
call
xchg
pusha
jp
add
int3
sbb
and
mov
orb
xor
mov
lock
out
test
xor
ja
inc
movsl
jbe
pop
clc
loopne
add
push
adc
cld
push
ja
jo
add
lcall
cmp
mov
filds
xchg
sbb
nop
xchg
lahf
insb
ljmp
sub
dec
sub
hlt
outsb
add
add
out
xchg
mov
in
mov
inc
loop
dec
dec
pop
clc
cmpb
jne
mov
push
mov
cli
mov
clc
dec
das
jae
arpl
fiadds
mov
mov
sarl
ljmp
ficompl
popf
cmp
ret
fbld
jle
and
repnz
xorb
mov
xor
jecxz
sti
inc
add
xor
cmp
sbb
xor
xchg
pushf
or
adc
xor
xchg
bound
cmp
loop
xor
data16
sub
mov
xor
popf
xchg
insl
mov
add
or
divl
add
adc
popf
add
scas
jb
mov
or
pop
sub
cmp
sbb
js
daa
nopl
les
add
xor
insl
xchg
das
push
jo
cmp
aad
leave
imulb
imulb
add
dec
lahf
loopne
fs
lds
mov
iret
stc
dec
cld
movsb
inc
cld
loopne
in
imull
xchg
inc
cmp
jl
aad
push
lcall
les
les
push
in
popa
mov
out
push
mov
sahf
push
shll
insb
test
sbb
sbb
sub
repnz
lods
dec
iret
xor
and
pusha
mov
pop
jne
xchg
iret
push
enter
test
pop
cwtl
sbbb
pop
lods
mov
ja
and
in
mov
sbb
inc
lods
fdivp
pop
xchg
lds
stos
push
push
hlt
subl
xlat
push
pop
repnz
xchg
push
adc
xor
cwtl
mov
lret
pushf
test
mov
scas
sbb
mov
int
stos
pop
mov
and
sbb
daa
push
and
mov
push
pushf
push
jae
push
clc
add
cli
out
dec
lahf
lea
lea
je
sbb
adc
pop
or
push
in
ljmp
aad
mov
ffree
jne
jl
xor
xchg
cmpsl
jo
lret
mov
mov
xchg
out
sub
xor
mov
jl
jns
lret
sub
pop
dec
clc
adc
adc
das
clc
mov
jo
xchg
cmpsl
fwait
pop
into
test
arpl
and
fnstenv
adc
xchg
out
lret
xchg
es
fdivrl
xor
gs
ds
xor
add
push
cld
or
mov
jo
js
and
mov
aas
pushf
pop
pop
push
pop
sub
jne
pushf
movl
add
or
mov
fildl
adc
dec
add
add
nop
sub
jmp
mov
xchg
mov
cmpsb
sub
dec
and
lahf
loope
bnd
lods
nop
sub
lea
cs
lcall
test
movsb
pop
jg
or
lahf
aam
pop
dec
mov
push
arpl
xchg
fistl
or
not
sbb
dec
jp
cwtl
jo
jl
cmpsl
jp
push
xchg
jbe
xchg
push
cmpb
bound
popf
xor
pop
loop
rolb
adc
push
and
mov
dec
out
xchg
int
inc
clc
and
add
pop
xor
repz
push
sub
mov
imul
mov
cld
mov
add
mov
mov
and
cmp
outsl
sub
scas
dec
imul
jl
xchg
pop
cwtl
sbb
xchg
in
xchg
inc
out
pop
lret
xchg
clc
rcll
add
xchg
out
dec
sub
in
push
dec
xchg
mov
cmp
test
push
push
daa
cmpsl
jmp
outsl
mov
sub
cmp
mov
rorb
in
hlt
push
daa
and
pop
xor
andb
mov
inc
mov
dec
out
cmp
jp
aas
notl
push
adc
data16
pop
in
jl
xchg
jge
lcall
popf
cmp
xor
xor
adc
int3
xchg
jne
imul
dec
lahf
add
in
test
mov
jo
sti
mov
cmpsb
call
ja
mov
push
push
inc
das
fiadds
mov
dec
int3
xor
negb
mov
push
mov
jno
fdivl
sbb
mov
dec
cmp
inc
cmp
popa
push
push
les
adc
dec
loope
ljmp
gs
rcrb
mov
insl
xlat
push
mov
mov
lahf
cli
out
cmpsb
cwtl
in
mov
and
popf
inc
icebp
inc
cmpsb
mov
inc
and
jne
jg
xchg
mov
loopne
mov
inc
inc
icebp
imul
add
fldcw
add
in
leave
sbb
int
add
pushf
pusha
adc
stos
ljmp
xchg
fs
fistpll
mov
aam
shrb
movl
fiaddl
aam
jae
mov
sbb
xchg
adc
push
sarl
sub
ret
inc
mov
mov
dec
cli
push
or
fisubl
sahf
out
jmp
cwtl
data16
mov
lret
rcll
sbb
lods
xchg
notl
add
jmp
fistpl
clc
jnp
xchg
sub
xlat
jg
sub
adcb
addr16
sub
jge
int3
test
loopne
mov
pop
fwait
insb
pop
icebp
in
sbb
call
mov
rorb
data16
je
cmp
testb
push
sbb
or
pop
dec
fsubl
out
mov
inc
xlat
jns
xchg
sub
mov
push
sbb
push
outsl
inc
ja
mov
dec
clc
mov
or
cmp
pop
mov
push
inc
jge
cs
arpl
mov
fcomip
jg
xlat
xlat
dec
inc
loopnew
arpl
jmp
jl
mov
add
inc
in
inc
pop
lret
imul
scas
jb
adc
outsw
adc
push
inc
inc
sti
or
icebp
js
mov
shlb
jmp
push
fucom
fnclex
aaa
test
sbb
sahf
shl
push
xor
dec
fsubrl
jae
into
test
ret
in
dec
sbb
xor
int3
aas
and
test
xchg
in
mov
mov
sbb
shll
scas
out
ljmp
ret
pop
popa
sub
cmpsb
rol
out
subb
pushf
push
arpl
aaa
dec
rol
sarl
popf
and
shlb
loope
add
int
and
hlt
loope
repz
insb
adc
mov
pop
jl
mov
cltd
addl
jmp
adc
mov
mov
lods
imul
packsswb
and
iret
xor
das
and
mov
ss
outsb
sbb
or
repz
mov
jnp
add
dec
into
adc
xchg
jb
sahf
int
jns
test
inc
push
mov
dec
arpl
addr16
mov
mov
or
data16
leave
sbb
or
ror
sub
adc
fisttps
mov
xchg
dec
imul
xchg
fbld
repz
add
and
js
mov
js
add
or
mov
jp
or
inc
out
mov
push
arpl
into
fxch
outsl
incb
push
in
cmp
cmpsl
cmp
jno
mov
jmp
pop
jle
dec
and
outsb
push
add
mov
daa
cmpsb
mov
mov
cli
out
mov
pop
adc
adc
cmp
lods
punpckhbw
daa
stos
push
cmp
xchg
imul
fisttpll
adcb
dec
pop
mov
arpl
hlt
inc
jp
icebp
cwtl
rorl
and
xchg
mov
pop
adc
roll
push
pushl
jmp
cltd
addb
fs
push
inc
add
add
mov
mov
stos
pushf
pusha
dec
lcall
mov
dec
pop
cmc
mov
cmp
xchg
imul
leave
jae
lahf
and
out
mov
push
int
outsl
aas
repz
cmp
jb
sbb
out
das
xchg
fidivrl
cmp
icebp
sti
and
in
loopne
int3
xchg
pop
cmpsb
inc
push
out
jmp
rolb
pushf
push
xor
arpl
fcmovnbe
and
jecxz
ret
and
push
pop
push
mov
fsts
stos
inc
jbe
sub
cmp
sbb
ret
pop
xchg
sahf
add
insl
add
mov
addl
push
inc
in
add
sahf
mov
cmp
iret
push
adc
mov
loop
stos
sbb
test
jmp
mov
cwtl
and
pop
mov
cmp
sbb
and
adc
jae
ljmp
mov
sub
or
xor
fldenv
sub
imul
lahf
pop
jl
repz
addr16
test
mov
fsubrp
cmc
es
jge
dec
pop
ss
popa
mov
popf
sahf
jl
fwait
addr16
jbe
jp
push
fdivp
std
or
in
orb
add
inc
push
cltd
je
sahf
dec
sub
cs
adc
lods
mov
push
data16
shlb
and
jne
in
adc
repz
out
fisttps
sbb
ds
out
outsl
inc
push
sbb
lret
lcall
pop
clc
fisubl
add
push
sbb
loop
aad
jle
sarl
push
mov
cwtl
adc
sub
xor
mov
hlt
mov
outsb
nop
shll
repz
imul
pop
xor
sub
pop
iret
sbb
scas
popa
test
shrb
jge
xlat
jmp
mov
fldl
mov
adc
sub
jmp
or
xor
mov
mov
imul
movsb
adc
pop
push
shrl
cmpsb
pop
mov
roll
lods
icebp
test
adc
les
stos
out
jne
mov
xchg
arpl
shlb
xor
lahf
and
dec
fwait
es
pop
push
push
mov
xchg
mov
dec
or
pop
aaa
push
stos
push
clc
lods
aam
imul
dec
xchg
or
mov
flds
jl
cmpsb
cmpsb
loop
mov
inc
adc
cmp
inc
jb
jnp
loop
dec
mov
or
sub
repnz
outsl
jmp
cmc
movsb
mov
mov
sub
je
sbb
xor
out
and
jo
sbbl
dec
xlat
outsl
shlb
bound
in
arpl
incb
xchg
cmp
lea
sub
cmp
xor
and
icebp
and
add
lret
lock
neg
inc
mov
insl
sbb
mov
jge
popa
insl
xor
mov
test
jge
sbb
and
lret
xor
fwait
pop
pop
inc
lods
mov
sub
xchg
adc
push
or
andb
loope
cmp
aaa
nop
sub
inc
imul
add
in
dec
loope
jl
push
inc
enter
leave
test
ds
out
sub
out
mov
and
push
jne
js
xor
cltd
mov
test
mov
and
xchg
inc
or
xorl
hlt
pop
test
cli
sbb
lock
movsb
pop
or
pop
sbb
dec
pusha
sbbl
fsubr
mov
shrb
xchg
cli
repz
cld
mov
inc
popa
jb
repz
cmp
scas
cmp
ret
aas
into
jle
std
mov
test
iret
in
fwait
js
insl
loop
aam
add
lcall
or
dec
dec
mov
mov
pusha
cs
jbe
pop
push
bound
jle
fildl
and
xor
ficoml
sbb
cmc
out
fsubrl
push
jne
mov
mov
jno
fs
shl
lret
stos
fimuls
dec
push
insl
sub
inc
pusha
test
mov
jl
ja
icebp
jecxz
ss
shrl
cmp
jne
jne
lret
jmp
add
std
dec
jmp
cmc
rcrl
inc
adc
test
mov
lods
es
xchg
inc
mov
xlat
mov
repz
frstor
rorl
mov
mov
pop
repnz
icebp
in
or
rolb
cld
mov
mov
inc
ss
fsubp
lds
inc
fs
jp
xlat
mov
insl
lahf
add
and
lea
idiv
or
cmpsb
xchg
xlat
cmc
xchg
out
xor
inc
xor
stos
or
sub
mov
es
pop
add
in
mov
dec
push
pusha
cmpsb
loopne
addr16
pop
aaa
dec
jp
xchg
pop
scas
push
fstps
stc
std
ret
lcall
push
leave
xchg
arpl
in
loope
sub
out
fldl
bound
sbb
neg
xchg
push
mov
lods
inc
dec
and
jl
scas
mov
xchg
push
inc
adc
popf
into
and
adc
in
dec
lret
push
inc
sub
stc
or
aaa
loope
inc
pop
sbb
popa
xchg
mov
fsub
jo
divb
and
sub
push
adc
repnz
inc
sbb
mov
mov
repnz
cs
pushf
stos
mov
adc
addr16
fstps
pop
mov
arpl
fildll
adc
mov
sbb
mov
ljmp
inc
fwait
jg
dec
out
leave
mov
pop
sub
aaa
jmp
push
roll
int
dec
int3
push
xchg
mov
mov
bnd
dec
and
js
dec
cmp
ds
pusha
mov
xchg
pop
pop
and
dec
push
hlt
fs
push
pushf
std
iret
repz
cmp
loope
xchg
cmpsl
jl
mov
sbb
sahf
or
add
shrl
lret
adc
push
or
dec
inc
fsts
test
and
jns
notl
mov
aam
cmpsb
int3
pop
push
fs
sbb
imul
and
shlb
sbb
and
out
pop
idivb
jmp
das
sahf
and
inc
mov
push
mov
repz
adc
inc
shrl
outsl
jno
pop
push
sub
adc
cmc
nop
insl
xchg
mov
outsl
mov
push
icebp
mov
insb
xor
aam
cmp
pushf
fstpt
dec
fwait
out
pop
int3
stos
je
pop
or
lock
das
mov
mov
imul
faddl
cmpb
jns
jmp
js
sbb
nop
pusha
xchg
daa
mov
pop
lea
clc
mov
push
ret
jns
dec
loopne
add
jg
add
jl
push
imul
and
cmpsl
pushl
div
jge
xor
addr16
nop
adc
sbb
test
jns
out
repz
inc
stc
mov
inc
iret
pusha
mulb
ljmp
fwait
xlat
mov
es
fsubrs
nop
xchg
fldl
inc
jne
sub
or
mov
or
mov
imul
popl
push
push
jae
sub
in
inc
jnp
mov
pop
scas
mov
push
push
js
or
mov
lea
jl
into
push
pop
fdivs
inc
lret
jne
scas
jo
fstps
data16
jge
idivb
or
insb
scas
daa
jo
dec
and
adc
leave
imul
adc
std
test
movsl
push
aaa
call
mov
cmpsb
push
or
xor
push
mov
jb
mov
adc
adc
sub
popa
pop
push
pop
lea
lret
xchg
mov
or
je
push
out
shlb
aad
rcll
mov
xor
jb
push
push
fcoml
cs
dec
je
xor
mov
jne
pop
mov
add
lods
pop
loop
mov
sbb
fisttpl
inc
in
push
cmp
or
push
pusha
jne
or
cmp
out
xor
mov
cmp
cwtl
mov
aad
and
add
mov
xor
sub
test
in
pop
or
test
mov
rorl
dec
cmp
push
xor
cli
dec
dec
and
aad
and
cmp
pop
stos
ret
dec
xchg
nop
loope
and
cld
mov
in
xor
nop
sub
hlt
hlt
push
mov
movsl
push
sub
sbb
inc
or
stos
cld
or
pop
dec
daa
or
push
push
xchg
mov
je
data16
push
sub
xchg
out
int
rorl
outsb
shrl
xchg
cvtps2pd
dec
mov
mov
cmp
std
fdivrs
sti
mov
addl
loopne
inc
or
aam
xor
mov
fadds
push
mov
leave
sarl
dec
sub
out
adc
cmc
sbb
cmp
xchg
mov
xchg
and
add
sbb
aas
seto
call
mov
add
jae
outsb
pushf
xchg
lock
inc
test
ret
push
xchg
movsb
ret
aas
loop
fcomip
or
jo
out
and
mov
add
jle
iret
fldcw
icebp
jb
dec
xor
icebp
sahf
or
pop
mov
das
sahf
sub
and
pop
ret
mov
out
pop
push
rorb
or
sbb
xchg
adc
cmp
in
into
jnp
or
roll
pop
insb
scas
cvtpi2ps
rcrl
js
lahf
aad
ror
pop
lret
div
push
orb
jo
push
test
dec
test
divl
iret
icebp
inc
mov
pop
inc
xor
jp
mov
mov
fcmove
adc
icebp
adc
push
shrl
aam
and
cmpxchg
jb
movsl
adc
jecxz
jp
mov
test
cmp
mov
jno
xor
or
add
push
inc
mov
scas
out
lods
dec
cmpl
add
cmp
mov
pop
mov
pushl
mov
hlt
lret
incb
jae
mov
test
inc
movsb
dec
adc
add
pop
xchg
shll
inc
jg
repnz
pushf
in
jmp
movsb
push
mov
push
xchg
push
cvtps2pd
in
sub
out
push
out
stos
mov
ja
or
sub
add
bndstx
mov
pop
jo
fisubs
insb
cmp
sbb
pop
xor
shlb
cli
int
incl
xchg
mov
sbbb
or
mov
fucomi
icebp
mov
aaa
or
xor
add
idiv
jns
pop
jecxz
pop
rol
daa
mov
adc
shlb
fcmovnbe
sub
and
push
outsb
pop
cmpsb
ficomps
mov
jecxz
leave
inc
xorb
mov
mov
mov
hlt
cmp
sahf
jns
setb
popa
cld
push
ret
int3
add
sahf
in
das
cwtl
bound
or
rcrl
pop
loope
adc
jns
scas
jae
roll
daa
and
das
push
pop
nop
loop
test
int
mov
xor
or
push
sub
mov
sbb
cmpsb
pop
lret
jne
dec
repz
inc
es
mov
test
leave
movsb
pop
cmpsb
adc
jbe
pop
pop
sbb
hlt
lahf
and
sti
bound
icebp
pop
mov
dec
andb
xchg
sub
xchg
lret
mov
push
les
lret
cmc
dec
loop
sbb
popf
or
lods
mov
mov
and
and
movsb
push
inc
adc
rorb
xor
xor
sub
fs
and
xchg
jno
mov
push
pop
jle
xor
inc
mov
jmp
aas
cmpsl
or
mov
gs
cmp
cmp
add
lock
sub
aad
dec
into
or
adc
cmp
test
lock
push
mov
stos
cwtl
icebp
push
movsl
je
adc
mov
imul
inc
repnz
or
movsb
push
sbb
cmp
sbb
inc
push
pop
sub
dec
les
xlat
adc
sbb
jae
ja
sbb
shlb
jp
ret
ret
mov
shrb
jb
mov
outsb
xchg
mov
dec
jb
xlat
dec
mulb
mov
or
call
push
pusha
cmc
jne
cs
clc
outsb
dec
lods
push
add
lahf
xchg
mov
push
xor
shl
lret
push
out
out
adc
mov
inc
cmp
jecxz
push
sbb
push
adc
iret
pop
sub
jmp
jp
cmp
or
pusha
xor
mov
ds
pop
jle
shll
stos
pop
or
les
cmpl
scas
outsl
sub
lods
adc
pushf
lret
sbb
out
arpl
xchg
push
aam
lret
mov
adc
sbb
aad
adc
inc
mov
ss
xchg
and
and
scas
scas
iret
fisttpll
pop
xorl
repz
mov
incl
jno
fnsave
fwait
xchg
jae
push
lock
inc
pop
cmp
inc
push
clc
pop
mov
imul
addl
faddl
call
cmpsl
xchg
lahf
xchg
int
xor
push
xor
pusha
nop
das
aaa
repz
rorl
call
sbb
mov
les
arpl
dec
inc
mov
lret
xchg
outsl
nop
sbb
leave
test
jns
sub
cmpb
pop
leave
mov
scas
ljmp
std
imul
gs
and
imull
icebp
xor
in
aaa
andl
adc
imul
and
dec
out
mov
das
xchg
ds
dec
pop
test
sahf
sbb
pop
xor
movsb
jbe
cmp
fldcw
jecxz
inc
aas
sarb
dec
jo
adc
iret
sub
push
dec
sub
fadds
es
sub
or
adc
xchg
cmp
out
fcompl
je
push
or
cmpsb
int
ret
aaa
lock
xchg
add
divl
test
xadd
xchg
sub
iret
dec
call
cli
xchg
xlat
fdivr
cmpsb
jbe
sbb
sti
fcompl
pop
pop
jns
lods
sub
adc
lods
dec
inc
or
pop
dec
xor
stos
lea
dec
inc
jmp
into
xor
push
std
jbe
lock
mov
adcl
mov
adc
push
mov
mov
sbb
mov
or
cmpsl
std
dec
scas
or
lock
xor
rol
push
xorl
cmpsl
xchg
push
push
fisttpll
xchg
mov
adc
lods
dec
push
mov
push
movb
and
and
popl
lock
lcall
test
jbe
out
jmp
mov
enter
or
fisttpll
push
pop
mov
lret
movsl
shll
mov
adc
gs
cmp
xchg
sbb
dec
dec
jne
out
mov
jae
fmuls
aaa
sub
jge
inc
sbb
push
cmp
jmp
mov
fwait
insb
fcmovbe
dec
jge
sub
out
adc
rcl
push
xor
imul
mov
push
mov
imul
and
mov
into
int3
push
mov
sub
cmpl
mov
pop
cmpsb
pop
mov
adcl
jnp
popl
xlat
ret
xchg
inc
sbb
mov
cmpsb
je
out
gs
cmp
mov
sti
jae
int3
lds
into
xchg
jne
or
shlb
leave
test
mov
mov
fiadds
dec
jge
inc
adcl
adc
fisttpll
pop
and
jb
jo
mov
inc
pop
pop
jae
add
iret
mov
lcall
mov
sub
fiaddl
xchg
imul
and
jns
jmp
mov
das
jmp
pop
lcall
ret
push
repz
imulb
clc
push
cltd
fsubl
xor
adc
push
push
adc
js
xor
mov
in
jae
movsl
mov
cmp
lret
mov
out
out
test
or
xchg
xor
out
push
push
popf
clc
jecxz
nop
jnp
jl
ds
int3
add
jmp
mov
add
mov
sar
pop
imul
pushf
push
stos
ret
lods
aad
test
enter
mov
test
push
testl
dec
mov
loop,pn
cmpsb
xchg
into
sbb
mov
icebp
pop
sbb
sub
jle
pushf
pop
hlt
fwait
and
inc
nop
ds
sub
repz
in
cmovno
and
test
inc
outsb
sti
loop
loope
imul
or
jl
push
and
mov
inc
fimull
sub
shll
ljmp
sbb
xchg
jns
in
sub
push
cmp
lods
pusha
jo
push
insb
fs
mov
movl
pop
sbb
gs
sti
sbb
std
enter
or
cltd
mov
bound
xor
movsl
mov
sbb
shrl
dec
mov
mov
dec
and
bound
out
lret
mov
sbb
mov
mov
lret
mov
cmp
loope
aaa
icebp
jle
ret
insl
mov
cmovg
and
stc
inc
scas
repnz
shrl
xchg
mov
popa
sbb
mov
mov
push
fcmove
push
aas
lahf
adc
push
leave
shl
into
popa
int
sub
pop
icebp
pop
out
push
jo
les
enter
jnp
and
int3
ror
mov
int3
pusha
add
mov
mov
and
cltd
push
fisttpll
pop
lahf
jns
jns
xor
xor
rorb
lods
gs
sbb
inc
mov
lret
cmp
cltd
dec
cmovb
jae
ror
cmpl
pop
ss
adc
fdiv
out
sbbb
fsubrl
mov
stc
insb
stos
dec
xor
aad
icebp
mov
sarl
cmp
pop
icebp
jmp
test
das
push
mov
push
mov
leave
je
dec
cwtl
lahf
aaa
jo
call
int
cltd
inc
dec
lcall
call
popf
movsl
jo
inc
lret
pop
or
cmp
add
shl
cmp
test
xchg
insl
push
pop
push
cs
popf
jg
adc
test
xor
mov
dec
xchg
push
and
fcmovbe
adc
cmc
push
and
mov
aaa
repz
in
inc
imul
rcrb
out
sub
es
pop
inc
inc
push
adc
int
push
pop
mov
imul
scas
cmp
jl
adc
shrl
pop
data16
mov
add
cmp
pushw
in
scas
dec
xchg
movsb
and
mov
enter
roll
loop
rol
sbb
rolb
or
clc
bound
cmp
iret
pop
cmp
pop
aas
inc
das
fisubrl
inc
inc
xor
in
sub
jg
leave
adc
add
pop
mov
mov
gs
sarb
ret
and
jb
xchg
push
out
ffree
mov
in
pusha
imul
sbb
jmp
jns
sbb
xchg
push
lds
ljmp
clc
mov
xlat
push
mov
call
ds
in
xchg
imul
fnstsw
push
out
and
test
push
cwtl
mov
pop
xchg
jne
push
push
pop
jae
sub
mov
sub
fcomp
adc
and
sub
push
and
shll
xchg
dec
lret
loop
jb
sub
push
jmp
mov
mov
cmc
scas
push
bswap
popf
jns
sbb
cld
hlt
movsl
mov
enter
mov
loop
push
inc
das
push
scas
mov
pop
into
inc
out
enterw
fistpll
mov
or
or
iret
fwait
pop
add
inc
mov
and
lods
mov
push
lds
fldt
mov
xor
leave
je
sub
cmp
icebp
in
dec
stc
das
clc
and
pop
mov
pop
scas
orb
adc
imul
sahf
dec
adc
push
iret
cli
jl
inc
xchg
cmpsb
or
xchg
fidivl
hlt
adc
add
lcall
jo
sti
push
dec
dec
jmp
mov
cwtl
pop
add
mov
sub
adc
inc
ds
push
or
jge
jmp
mov
negb
les
test
dec
decb
cmp
mov
mov
mov
xlat
call
add
sarb
int3
mov
push
fisubrs
rcll
ja
pop
sbb
sarb
cltd
adc
jg
sbb
aam
sub
insl
out
pop
mov
dec
cmpsl
in
jecxz
mov
in
push
data16
cmp
mov
dec
push
outsb
loopne
xchg
leave
ret
out
mov
inc
rcrl
sbb
ljmp
cmp
cld
clc
dec
xor
or
sub
cmp
loope
push
ljmp
cmp
icebp
stos
jg
dec
jge
imul
arpl
pop
mov
jnp
gs
or
lods
pushf
push
stos
push
enter
rorl
pop
es
imull
mov
cmp
enter
pop
sub
pop
inc
mov
sub
jge
fisttps
and
xorb
mov
fadds
sbb
cld
jb
lret
mov
scas
mov
add
jecxz
psubd
int3
mov
adc
popa
pop
sub
ficoml
or
and
inc
push
xor
pop
sub
sbb
movsl
dec
pop
add
lock
je
addb
cwtl
in
add
clc
sub
sar
cmp
cmp
jg
xchg
mov
xchg
stos
insb
pop
ret
mov
pop
mov
cltd
jae
jecxz
cs
daa
fs
pop
jecxz
dec
loope
popf
leave
mov
daa
cmp
neg
mov
dec
xchg
pop
pop
call
cmp
sbb
outsl
test
mov
mov
aam
jp
and
pusha
js
sti
movsl
inc
cmpsl
movsb
mov
pop
sub
adc
sbb
xchg
les
loop
aam
dec
scas
mov
and
mov
mov
ljmp
pop
sar
int
daa
in
movsl
out
dec
dec
add
test
and
pop
inc
aad
push
cltd
in
inc
stos
cs
add
je
into
int
outsl
jmp
out
or
jo
pushf
or
test
test
in
in
out
xchg
mov
jbe
jae
mov
sub
outsb
fiaddl
or
jg
aad
fs
xchg
imul
sbbl
mov
jne
sti
sub
psubusw
push
imul
test
loope
rclb
jp
mov
cli
adc
mov
sbb
sbb
jb
outsl
inc
cwtl
dec
xchg
bound
push
and
xchg
xor
adc
push
fs
fmull
addr16
sub
xchg
mov
add
mov
popf
test
and
sub
inc
inc
add
ljmp
mov
call
push
rclb
xor
test
mov
or
dec
call
xchg
dec
add
mov
and
addl
jp
xchg
mov
push
mov
pop
aas
cmp
sub
leave
mov
cmpsl
sbb
jno
scas
stos
cmpsl
pop
idivb
mov
add
push
mov
and
mov
stc
lcall
scas
push
ds
jb
and
mov
sub
arpl
leave
mov
sub
je
inc
out
jnp
pusha
mov
mov
xor
push
add
imul
das
mov
js
mov
aas
inc
jg
jle
jl
mov
inc
mulb
sbb
pop
das
add
idivl
fsubl
jne
test
mov
loopne
jae
and
jo
test
fcmovne
mov
lea
xchg
lock
mov
mov
orl
dec
xor
cld
rcrl
xchg
sbb
push
or
inc
add
fwait
outsl
subl
test
mov
mov
jmp
push
mov
cmp
mov
inc
leave
addr16
dec
xchg
lods
std
inc
pop
push
test
push
jl
lea
notl
lret
icebp
or
pop
lock
inc
lods
jg
jl
mov
out
jg
imul
xor
mov
popa
pop
mov
movsl
cmp
ja
xchg
dec
es
xbegin
lds
outsl
and
mov
lahf
inc
test
xor
inc
mov
int3
dec
repnz
cs
lods
inc
sub
sarl
rorb
mov
and
dec
rcll
mov
adc
aaa
lods
or
lds
pop
ss
mov
and
jne
js
add
cld
dec
out
sbb
push
dec
inc
xchg
jp
dec
je
frstor
sarl
loopne
cmp
adc
mov
jmp
mov
cli
xor
adc
cmp
adc
inc
in
inc
push
data16
xor
repnz
lahf
mov
add
negb
std
inc
lret
lock
not
pushw
cmpsl
jb
mov
out
mov
loope
ljmp
jmp
aad
add
loope
add
cwtl
into
cltd
hlt
fwait
xchg
je
pop
inc
loopne
sub
jecxz
xlat
test
jnp
jle
mov
sub
incb
mov
pop
nop
scas
pop
and
in
divl
cli
icebp
xchg
dec
sar
jp
xchg
pushf
adc
mov
shrl
divl
mov
ret
mov
cwtl
test
cld
add
jecxz
in
insb
cmpsb
lods
pop
js
xorb
adc
jb
sub
daa
subb
js
jbe
rclb
imul
fisubrl
pop
imul
mov
xchg
or
bound
sub
cmc
sbbl
push
xor
bound
pop
sub
sahf
rcll
mov
test
ja
jle
jl
adc
ds
stc
or
mov
lea
mov
movsb
cltd
adcl
sbb
xchg
aas
mov
push
cs
sub
mov
pop
add
dec
cli
mov
std
xor
fidivs
arpl
jae
aas
pop
adc
jb
les
sbb
das
fimuls
mov
or
inc
fstps
iret
jns
iret
rorb
mov
aas
bound
test
inc
pushf
test
push
ja
loopne
mov
add
xchg
pop
push
aad
dec
fstpt
lret
xor
insl
notb
inc
jae
cwtl
mov
clc
inc
sbb
hlt
stc
jmp
into
loopne
mov
mov
cmpsb
mov
cmp
and
sbb
mov
ss
call
mov
fst
outsb
sbb
lahf
pop
gs
stc
xor
ja
jne
xchg
loopne
int3
mov
mov
fstps
sub
and
fmull
sub
add
inc
in
in
and
icebp
mov
lcall
inc
pop
mov
push
les
pusha
adc
out
sahf
std
loopne
add
jno
bound
sub
inc
sbb
sub
mov
mov
mov
int3
sub
test
cmpb
inc
js
loop
inc
mov
ljmp
test
inc
mov
scas
lea
and
adc
sarl
add
jae
and
mov
adc
pushf
jge
hlt
sbb
loope
sbb
cs
inc
cmpsl
loop
or
test
enter
mov
orb
inc
cmp
iret
pop
cmc
push
dec
std
sbb
pop
test
jmp
lds
lret
and
lcall
push
cmp
hlt
ljmp
movsb
in
dec
cwtl
push
stos
cli
push
sub
clc
popl
repnz
stc
pop
out
mov
icebp
xor
and
mov
push
repz
inc
and
xor
mov
xor
and
push
jnp
cmp
arpl
jp
pop
xor
push
push
lods
mov
or
leave
je
jno
pusha
adc
andb
cli
add
fnstsw
aas
mov
in
inc
sbb
negb
pop
daa
cld
fsts
lea
adcl
fcomi
xchg
xchg
aaa
adc
into
out
loope
iret
cli
xor
xor
fwait
xchg
pushl
push
cmc
inc
adc
cmp
mov
inc
and
cli
std
sbb
aam
mul
or
xorl
xor
or
xchg
hlt
jecxz
ficoml
pop
sar
movsb
push
or
movsl
stc
test
mov
mov
jae
in
sub
dec
sbb
and
nop
or
adc
popa
add
test
lret
in
adc
imul
aam
aaa
inc
lcall
xor
ljmp
ret
pushl
movsl
in
dec
pop
mov
mov
and
sbb
std
ja
mov
xchg
or
cmp
xor
rcrl
stc
gs
arpl
push
mov
int3
sbb
in
dec
not
movb
xchg
xchg
adc
daa
xlat
cs
and
sbb
xor
js
inc
xchg
xor
mov
das
icebp
jge
mov
and
push
loope
aad
pushf
mov
xor
xchg
adcb
adc
and
jecxz
repz
or
inc
sub
rcll
call
fnstcw
in
popa
mov
cmp
mov
mov
sti
fwait
cmp
mov
cmp
outsb
lahf
loopne
mov
jle
out
or
out
sub
mov
pop
jp
fcomps
jns
fidivl
lock
fwait
insl
sbb
sbb
test
repnz
mov
insb
movsl
addb
mov
add
sarl
fidivrs
pushf
mov
push
mov
scas
lea
incl
cmp
out
js
and
loop
rolb
out
or
mov
cmp
scas
js
inc
mov
jno
aad
jnp
xor
or
ficompl
adc
xchg
pop
cmp
xchg
cmp
mov
inc
repnz
mov
sbb
stc
test
sar
testb
faddp
xchg
divl
mov
test
and
xor
pop
xchg
xor
cmpsl
hlt
and
mov
popf
mov
movsb
adc
test
mov
movsl
jle
sub
xor
outsb
icebp
mov
push
push
dec
pusha
das
mov
das
mov
mov
lea
inc
mov
sti
jle
outsb
pop
in
in
enter
mov
jl
adc
dec
push
je
loope
mov
imul
cwtl
imul
push
subb
in
test
dec
xor
fmuls
cmp
bound
in
xchg
jg,pn
lds
push
test
negl
inc
or
inc
cli
xchg
sarb
inc
or
loope
jne
imul
add
jno
int3
adc
mov
mov
inc
mov
dec
movsb
and
or
sti
xchg
roll
dec
or
cli
dec
sub
mov
dec
inc
sub
sub
fsubrs
addb
nop
xor
fiadds
out
dec
xchg
stos
pop
mov
lds
and
stc
andb
lock
movsl
mov
pop
out
popa
nop
mov
jnp
cwtl
lods
or
xchg
or
repz
sub
cli
lods
inc
repz
sbb
sub
sub
ficomps
pop
les
jp
lret
inc
mov
jg
jecxz
jp
aad
lea
jmp
pop
mov
pushf
inc
mov
xchg
cwtl
push
std
popf
das
fcomip
or
adcb
dec
jl
cli
mov
popf
rolb
and
jecxz
fcomps
fsubl
push
sub
lock
leave
cli
mov
mov
repz
add
or
inc
adc
sbb
test
add
push
das
jo
shll
cmp
cld
das
call
testb
je
cli
push
es
xchg
outsb
sub
lods
lds
mov
in
dec
gs
add
mov
leave
cmp
xor
jbe
sub
icebp
jb
jb
jecxz
cmp
popf
in
mov
mov
mov
or
je
call
push
lcall
jmp
out
ja
push
add
fcomi
inc
sbb
faddl
xchg
dec
in
ficoms
mov
aaa
adc
hlt
jp
in
push
fstpl
lods
das
pop
mov
out
push
pop
sahf
int
add
and
mov
cltd
sbb
adc
sub
fadds
int
insl
in
add
imul
mov
dec
lods
pop
mov
imul
xor
add
pop
out
xchg
jnp
add
add
fwait
and
ret
loopne
xchg
es
or
add
insb
ljmp
orb
mov
rolb
xchg
mov
inc
push
in
push
xorb
mov
xchg
dec
adc
push
cld
xchg
leave
fnstenv
jmp
pop
enter
mov
or
cmpsb
call
rorb
push
xlat
cmp
out
push
sbb
pop
cmp
cmp
idivb
scas
pop
sbb
dec
movsb
call
xchg
rolb
xor
loop
jnp
lds
dec
jmp
cmpsb
jp
js
xlat
mov
test
pop
lock
lret
nop
notl
and
and
adc
jmp
jae
fadd
stos
mov
leave
cmp
popa
cmpsb
cmc
pop
mov
cltd
mov
lds
inc
or
sar
add
xlat
push
sti
xchg
add
xchg
sub
outsb
cmpl
lret
inc
mov
sarb
outsb
in
mov
jae
or
and
cli
shll
test
lea
scas
jb
push
and
js
mov
enter
adc
cmp
mov
jo
in
pop
arpl
fs
icebp
inc
ss
dec
adc
push
mov
sti
sub
sti
icebp
or
inc
fists
aas
call
pop
ss
and
imul
mov
testb
adc
inc
dec
xchg
jo
clc
pop
mov
sub
psrlw
repnz
fcmovbe
aaa
inc
push
cmpsb
or
xchg
stos
xchg
cmpsl
lret
mov
outsl
sub
decb
mov
fldl
sbb
xchg
fbstp
mov
pop
cld
mov
dec
fwait
xchg
sbb
adc
xor
mov
or
outsl
adc
cltd
int3
adc
nop
mov
xchg
cmp
or
scas
aaa
sub
cli
pop
xor
add
mov
or
xorl
iret
cmp
add
push
arpl
dec
rcl
cmc
mov
ds
lods
xlat
jno
push
adc
lret
sbb
mov
call
outsl
sahf
ds
jmp
pop
jnp
inc
add
ret
mov
push
dec
push
mov
ds
int3
mov
jbe
stc
push
movsl
and
xor
and
inc
and
loopne
and
jo
mov
push
jbe
outsl
js
sub
imul
icebp
and
fsubrl
mov
nop
pop
cmpsl
xlat
aad
sti
out
sub
jb
int3
into
xchg
test
mov
jne
pushf
xlat
or
in
xor
dec
pop
rcrl
push
xor
fcom
rolb
jb
mov
add
dec
testl
clc
imul
and
pop
fstps
mov
jae
jne
push
insb
cmpl
jb
sahf
mov
add
mov
jbe
enter
inc
or
push
pop
test
aas
jmp
sub
push
inc
movsl
inc
pop
adc
jbe
pop
imul
loopne
cmc
mov
pop
andl
jle
enter
neg
jmp
jp
and
fcompl
xchg
and
jecxz
sbb
lods
or
scas
inc
insl
sbb
shr
mov
adc
cmc
rcll
or
add
add
lcall
pushf
pop
jne
fists
testl
aas
inc
js
aas
test
stos
iret
cmp
push
mov
call
push
mull
cmpsl
das
cmp
sub
push
push
pop
push
into
out
imul
in
ficompl
sub
repz
push
lcall
mov
mov
mov
add
xor
mov
ret
cmp
andl
fs
dec
lock
and
std
mov
dec
lret
sbb
inc
push
fisubl
aas
xchg
mov
add
cwtl
nop
sub
les
jmp
gs
jns
sbb
pop
jmp
xchg
test
xorl
adc
cmp
sub
loopne
ftst
outsb
adcl
popa
sub
jb
mov
daa
adc
popf
outsl
xchg
out
inc
sarl
lock
jle
fldl2e
adc
and
mov
mov
add
sahf
mov
out
dec
and
or
shrl
sbb
lods
and
cmp
lods
fcmovnbe
xchg
fldt
ret
cmpl
in
cmp
lods
out
out
cmp
into
sbb
fcmovnbe
aam
cmp
fcoms
fldcw
cli
mov
mov
mov
dec
fstpl
and
ret
or
push
push
test
lcall
pushf
rcrb
or
test
xorl
mov
jp
lods
daa
push
loopne,pn
mov
dec
lahf
mov
jbe
int3
lea
pop
and
daa
sub
sar
jno
pop
pusha
jb
push
cmc
xor
sub
dec
xlat
call
lods
lret
lahf
jns
and
add
test
mov
fcomps
xchg
mov
hlt
shll
push
aas
mov
mov
dec
shrl
adc
out
iret
pop
mov
rorl
icebp
or
inc
daa
repnz
mov
pop
adc
lcall
hlt
push
pop
shr
or
jae
xor
pop
inc
sbb
pop
sahf
leave
push
cmpsb
lods
stos
and
arpl
mov
out
xchg
jge
mov
jmp
jle
push
sub
sbb
pop
pop
dec
inc
sub
jge
shlb
mov
push
adc
outsb
xchg
into
ljmp
cmp
lret
sbb
lods
jg
xchg
jo
stos
mov
or
fimull
push
xchg
sub
jge
out
ss
fdivl
jnp
jp
add
into
enter
cmc
push
sarl
push
sbb
lea
xchg
jmp
out
das
lea
popa
xor
push
call
outsl
test
lds
push
sbb
xchg
xchg
inc
call
cli
ss
imul
jbe
std
imul
cmp
fdivr
sti
and
ljmp
ret
add
mov
in
mov
cmp
in
pusha
cmc
sar
fists
sti
div
pop
cmpsb
dec
scas
jne
push
enter
mov
push
int
or
insb
xchg
andb
dec
test
popa
sub
dec
add
aam
imul
popa
inc
sarl
lcall
mov
xchg
jecxz
mov
aad
pop
mov
add
mov
dec
jp
mov
aas
push
hlt
cld
jne,pt
dec
cmc
out
sbb
aaa
stos
rclb
adc
and
mov
xchg
add
mul
test
add
dec
outsl
add
sub
sub
xor
ret
imul
in
cmp
sub
daa
xor
into
mov
or
mov
cmp
stc
ljmp
addr16
mov
xor
idivl
in
pop
mov
sub
jmp
adc
in
pop
jecxz
xchg
push
mov
rorl
inc
or
das
cmpsb
mov
sti
or
aaa
andb
es
cmp
push
bound
jnp
movsl
jle
outsb
cmp
pop
pop
pop
xor
fisubrs
test
mov
cld
jae
xchg
push
insb
pop
cmpsl
push
pop
mov
and
pop
sbb
les
pushf
aad
mov
push
cmp
imul
ret
and
adc
dec
and
push
loop
or
sahf
cmc
mov
loop
lea
nop
mov
xchg
pop
out
lret
sub
aam
sbb
sub
push
lods
lods
hlt
mov
xor
xchg
xchg
jns
xchg
dec
push
push
fcmovnb
in
adc
leave
testl
fcomps
mov
call
std
lods
mov
inc
push
and
insb
jne
sbbl
lcall
pop
ret
mov
pop
sub
sub
repz
cmp
popf
ljmp
sub
mov
cmp
push
and
test
dec
mov
ret
mov
insb
mov
leave
or
jecxz
jbe
push
je
test
das
loopne
dec
insb
loopne
inc
and
push
add
and
ror
addr16
xchg
dec
loope
sti
inc
les
jnp
adc
scas
push
adc
sti
lock
jmp
dec
pop
mov
sbb
aaa
sbbl
in
rcl
ss
divb
mov
xor
push
mov
xchg
push
and
ja
ljmp
inc
cld
jp
cmp
clc
push
lret
mov
jnp
hlt
aam
and
movsl
or
int
daa
rcrl
xchg
in
notl
iret
or
jle
add
int3
push
cld
mov
jno
mov
test
enter
add
in
cmp
or
or
lret
and
xor
xchg
lcall
lock
in
fidivrl
sub
push
in
scas
sbb
stc
jnp
inc
call
and
scas
sbb
bnd
mov
pop
scas
jno
fdivl
mov
mov
sub
jo
lahf
mov
adc
mov
gs
xor
addr16
test
xlat
sbb
stos
cmp
cs
sbb
mov
mov
inc
jne
xor
shll
inc
mov
or
add
or
fidivl
inc
jg
pop
sar
pop
das
scas
jmp
insb
adc
mov
lock
jae
cs
lods
push
data16
sub
sbb
aaa
sbb
or
repnz
mov
sub
mov
jl
or
int
gs
ljmp
push
subl
pop
mov
mov
cmpl
int3
push
mov
ds
or
mov
fwait
nop
imul
lahf
mov
mov
mov
xlat
push
lock
mov
and
out
xlat
push
mov
pop
inc
xchg
mov
mov
fwait
mov
jae
mov
and
orb
xchg
lahf
repnz
dec
lahf
mov
cmp
gs
leave
pause
add
scas
add
xchg
sub
ljmp
mov
mov
add
push
push
fmuls
stos
jne
int
testl
xor
and
push
aam
push
xchg
clc
xchg
shl
inc
call
movsl
fwait
es
movb
dec
stc
inc
sub
shr
sarl
lcall
push
add
lods
mov
fdivrl
stc
mov
rorb
adc
jecxz
lock
stc
cmp
and
fidivl
lcall
scas
sbb
inc
pop
mov
lock
ja
mov
lods
in
les
loopne
push
sub
xchg
dec
ljmp
jmp
mov
push
cwtl
mov
shll
push
rcll
cld
sbb
jae
repnz
daa
mov
outsb
adc
dec
and
cwtl
out
out
insb
lds
mov
jg
push
stc
and
int3
dec
hlt
add
inc
and
test
cmp
fisubrl
aaa
add
push
ja
in
mov
mov
cmp
lcall
sbb
mov
mov
xchg
jbe
nop
in
mov
jns
dec
xchg
jge
cmp
pop
rcll
push
jnp
mov
xor
pop
mov
cwtl
pop
pop
fs
jae
lea
xor
jle
fcmovbe
arpl
mov
aam
xchg
std
mov
xor
xor
sub
int3
test
or
and
mov
lock
fstps
push
out
cmc
pop
xor
ret
out
mov
dec
fnsave
ret
out
or
add
test
je
cli
mov
mov
or
lcall
dec
xor
into
shll
or
rcl
xchg
mov
aad
jmp
call
xor
xor
push
cltd
mov
push
mov
mov
pop
fs
mov
sar
mov
and
mov
std
inc
stos
ja
cmp
loop
call
add
inc
lret
outsb
add
adc
cwtl
in
or
cmp
ficoml
or
out
imul
cwtl
into
push
es
xor
mov
lcall
fsubs
sbb
xchg
xor
xchg
mov
hlt
ljmp
es
add
data16
adc
or
out
pop
scas
jl
adc
ficoml
cmpsl
xor
add
repz
daa
mov
xchg
popf
push
inc
call
test
pushf
dec
test
inc
inc
fdivrs
sbb
shrl
psadbw
jno
test
shl
push
lret
test
mov
iret
std
or
ret
lret
enter
lds
add
inc
push
test
loop
test
hlt
hlt
inc
in
out
push
cmp
pushf
cmc
cmp
out
or
decl
push
jnp
sarb
push
pop
sbb
cltd
mov
lret
lods
sub
sub
pop
or
mov
not
jne
insl
lods
adc
sti
inc
jo
stos
sbb
fdiv
push
out
movsb
or
hlt
xchg
cmp
mov
daa
arpl
arpl
mov
jns
fsts
pushf
sbb
ss
dec
jns
shll
jno
imul
xor
pop
aam
add
xchg
jl
pop
and
or
jb
add
ss
lret
outsb
mov
imul
es
fisubl
mov
xchg
xchg
mov
out
sbb
xchg
adc
xor
mov
pop
xlat
cmp
les
lahf
dec
roll
in
in
cmp
mov
scas
lahf
test
divl
cmp
andl
sbb
mov
ficomps
rclb
scas
mov
dec
jg
and
xor
add
sahf
lods
jl
add
cwtl
inc
lock
mov
xor
and
sub
pusha
xchg
sub
int3
loopne
mov
push
xchg
inc
mov
lret
cwtl
icebp
mov
into
loope
pop
dec
pop
and
cmp
enter
leave
xchg
leave
cmp
scas
push
xor
shll
push
push
mov
cld
roll
mov
mov
sub
in
frstor
shr
xchg
sub
aad
mov
sub
ja
ja
and
mov
rcr
mov
negl
addr16
and
pop
orb
in
test
sbb
lods
cmp
or
sub
pop
movsb
icebp
inc
push
mov
rcrl
sbb
or
ljmp
je
sub
xchg
shl
push
or
xlat
pushf
sbb
adc
sbb
ss
mov
mov
dec
insb
jnp
jb
push
push
cmpsb
hlt
mov
rcll
dec
mov
fmulp
inc
lahf
and
test
outsb
mov
jns
bound
push
outsb
mov
out
adc
shl
aam
iret
call
xchg
rcr
sub
adcb
xor
sbb
in
dec
or
pusha
mov
push
jno
pop
and
and
ljmp
jl
push
hlt
sahf
std
xor
in
or
cmp
lret
pop
arpl
inc
test
cmp
xor
xlat
dec
mov
inc
add
sub
arpl
fldt
or
pop
pop
sub
xor
aas
push
adcb
dec
xchg
mov
jge
ds
scas
jg
jmp
cltd
dec
sbb
dec
mov
addr16
mov
std
je
cld
xlat
jbe
rorl
cmp
js
aas
xchg
sub
icebp
xchg
xchg
or
shl
xchg
rcrb
popa
mov
divl
or
pop
inc
sbb
adc
mov
mov
xchg
mov
jnp
ret
loopne
dec
xchg
lret
cmp
mov
sub
jae
adc
xchg
rorb
imul
out
add
movsb
in
push
lea
push
mov
hlt
inc
push
mov
xor
test
jp
or
xchg
sar
in
dec
or
cmc
fldcw
xchg
js
add
xchg
movsb
mov
sbb
dec
push
ljmp
insb
sbb
clc
aad
adc
into
sbb
pop
xor
sti
cld
jecxz
pop
mov
mov
fs
out
mov
push
mov
push
test
out
dec
mov
fcoml
in
pop
ret
cmp
pop
or
shr
aas
or
jecxz
repz
adc
mov
add
insb
add
andb
xchg
jecxz
fstl
and
call
lret
insl
cmp
outsb
add
and
in
mov
aas
mov
bound
jno
pushf
ds
pop
imul
push
jl
mov
iret
pop
or
dec
mov
rclb
dec
sbb
fs
mov
mov
loopne
enter
xor
clc
adc
jle
and
inc
pop
or
gs
push
xchg
andb
fdivp
cmpsb
outsl
sti
xor
cmp
loop
sti
add
rcl
jle
sbb
enter
inc
jno
cmp
cmp
cmp
mov
adc
sub
inc
fsubrs
out
ffreep
cmpsl
add
xchg
sub
inc
lock
repz
and
stos
sub
ljmp
mov
jle
xchg
or
mov
jo
fsubl
pop
stos
jae
push
js
mov
cltd
xor
sub
mov
rcl
push
fdivrl
sub
xchg
and
jmp
pushf
pop
jae
and
out
jb
jno
add
adc
inc
sbb
dec
inc
sub
push
into
divl
xor
daa
fmul
sbb
jge
cmp
push
rclb
mov
icebp
dec
mov
mov
or
mov
push
dec
xchg
icebp
loope
xchg
std
push
jp
bound
xor
outsl
sub
push
mov
decb
stos
out
es
sbb
or
cmp
rolb
pop
cwtl
jo,pt
adc
and
push
inc
adc
mov
jae
fnstenv
jge
mov
and
jns
lret
jnp
js
mov
nop
clc
dec
push
aas
jp
leave
out
inc
adc
lods
movsb
jmp
ja
pop
mov
push
cmp
addr16
aas
shlb
mov
mov
fldenv
or
and
es
and
cld
adc
js
inc
pop
xchg
fidivs
movl
sbb
andb
in
or
dec
jb
jecxz
lods
fwait
xchg
cmp
sbb
push
fiaddl
mov
sub
ss
pushf
push
popa
or
lods
and
pop
fisubrl
mov
add
cltd
sub
cmp
int
lcall
mov
ja
sahf
pop
push
or
ror
xor
negb
inc
push
daa
gs
mov
fisubl
push
pop
jmp
leave
push
pushf
push
xchg
sbb
stc
mov
in
pop
jb
js
jb
sub
sub
call
lods
jo
lcall
fwait
test
sub
sbb
mov
leave
cmp
xchg
xor
mov
rcrl
ss
das
cmpsl
dec
ss
pop
mov
or
insb
cmpsb
cs
pop
gs
xor
cmp
jl
sti
jge
and
mov
inc
outsl
xor
cmp
inc
sbb
sub
lods
test
dec
mov
nop
shlb
mov
push
daa
dec
jl
adc
into
adc
mov
pop
mov
sub
sub
mov
mov
std
adc
push
orb
and
xor
and
insl
mov
imul
xchg
sbb
js
sahf
mov
cmp
jle
adc
push
jbe
pop
add
pop
out
rcrb
rcll
call
leave
jns
mov
rcrl
mov
addl
mov
adc
dec
out
hlt
icebp
jne
mov
insb
movsb
push
xchg
jecxz
outsb
jne,pn
inc
push
sarl
clc
daa
ss
popa
sub
fidivrs
dec
notb
hlt
cmovs
sub
sub
fidivrl
sub
sub
xchg
test
or
mov
add
daa
fprem1
pop
sub
mov
mov
test
pop
sub
or
mov
mov
hlt
in
loope
das
in
fsubs
aad
insb
clc
ret
scas
dec
jmp
sbb
mov
xor
and
fcmovnbe
daa
inc
cmp
push
push
pop
push
inc
mov
ss
stos
mov
loope
or
lea
test
and
lods
test
xor
adc
sahf
dec
jno
pop
jnp
jg
sub
jnp
mov
ret
xchg
dec
mov
pop
into
jae
pop
outsl
sub
push
push
sar
or
icebp
fsubr
shll
sbb
js
fisttpll
lock
pop
test
jge
pop
test
inc
xor
lds
and
xor
lods
xchg
sar
dec
jne
mov
fwait
mov
shl
mov
cmp
mov
pop
mov
jns
stc
push
mov
or
and
cmp
pop
or
pavgb
push
test
mov
xchg
push
mov
mov
xchg
xor
xchg
loope
sbb
in
cmp
int3
fwait
mov
repnz
imul
pop
xchg
and
adc
insl
out
mov
daa
push
int3
xlat
sbb
dec
lahf
data16
mov
dec
sti
mov
daa
mov
nop
jns
scas
filds
jle
ss
inc
mov
sbb
mov
cmp
cli
div
pop
mov
and
adc
scas
mov
scas
add
cmp
js
movl
push
bswap
mov
jmp
popa
out
push
mov
mov
xchg
hlt
pop
mov
loop
xor
cmc
inc
outsl
xor
lods
shlb
out
cmp
push
mov
cmp
ret
lahf
repnz
out
ret
pop
inc
cmpsl
cwtl
jecxz
mov
stos
std
adc
or
pusha
cmp
lock
or
loope
pop
and
insl
mov
sub
pusha
dec
xchg
bound
mov
mov
inc
mov
pop
nop
popf
jb
push
lcall
mov
sarl
xchg
rolb
jecxz
roll
out
les
push
push
inc
xor
aad
jge
mov
hlt
cmp
dec
jo
movsl
ljmp
sti
pushl
popl
aas
stos
addr16
lahf
inc
xchg
fucom
xchg
ret
daa
loope
mov
cld
mov
cmp
mov
and
xchg
sub
jge
les
aam
cs
idivb
pushf
loop
pop
push
xchg
in
scas
inc
or
int3
rorb
in
bound
stc
scas
sub
xchg
popf
mov
xor
test
fimuls
push
xor
sub
add
mov
negl
js
ss
push
push
int
add
nop
repnz
sbb
jg
sbbl
xlat
loope
mov
std
jne
shlb
ja
cli
popa
jae
ja
outsb
cmp
in
inc
cmp
xchg
jl
xchg
ds
add
xchg
subb
aad
adc
lds
and
nop
or
mov
dec
fldenv
insl
fs
ss
dec
rorl
mov
adc
inc
out
pop
jle
cld
gs
and
mul
into
jg
ja
psllw
cmp
jns
jae
jp
pop
je
dec
xor
mov
sbb
or
std
sub
dec
sub
jp
and
mov
in
push
jle
movsl
push
cld
jnp
lcall
add
push
sub
pop
test
dec
aad
mov
inc
jle
call
leave
addr16
mov
jg
aaa
mov
sbb
sub
imull
scas
pop
pop
fnstenv
inc
and
add
outsl
mov
enter
adc
out
int
sarl
je
test
and
lock
je
jns
pop
cmp
rorl
mov
mov
fs
in
lret
in
cmp
sti
mov
lea
mov
sbb
or
and
mov
pop
sub
addl
pop
inc
jnp
nop
fwait
cwtl
adc
add
fistpll
stos
xor
pop
pop
scas
mov
outsl
jp
cmp
jecxz
adc
cs
or
push
pusha
adc
push
out
lods
xchg
out
mov
int
ja
sbb
or
popa
das
xchg
aas
popf
jg
stc
jp
enter
int3
pop
or
push
filds
adc
stos
clc
loopne
outsl
sbb
test
movsb
xchg
out
fisubrl
sti
imul
jo
jnp
roll
mov
ret
test
lea
pop
scas
test
movl
ror
sub
movsb
in
mov
pop
rcl
scas
lods
mov
cli
and
ds
rcpps
decb
mov
roll
fbld
call
es
jp
arpl
dec
ja
mov
adc
lret
and
push
xor
mov
and
mov
repz
jp
push
mov
cmp
inc
loope
mov
fnsave
jns
cli
xor
sarb
call
inc
rorl
rclb
add
jg
sbb
cmp
ljmp
xchg
inc
mov
data16
cltd
xchg
lods
sub
lock
inc
enter
les
xor
mov
push
sbb
dec
scas
push
popa
pop
clc
sarb
fstpt
rcr
mov
jmp
inc
test
jns
xor
ret
and
cmpsb
cmpsb
jp
movsb
and
and
jae
call
mov
scas
mov
adc
pop
jnp
ret
bound
jl
dec
adc
dec
or
addr16
les
sti
repnz
aad
enter
jp
xorb
pop
mov
lahf
and
mov
push
mov
ret
xchg
pop
and
lods
sti
pop
add
add
sbb
loope
push
lea
aaa
add
mov
loope
push
test
lahf
cmp
lret
fstl
lods
imul
cmp
cmpsl
repz
fs
inc
insb
mov
lds
jo
sub
popf
push
hlt
fstpt
sbb
sbb
inc
movsl
cmp
dec
xchg
into
or
loop
jmp
out
stos
xchg
cmp
lds
lea
gs
cltd
and
xchg
cmpsb
lret
sbb
mov
cmc
mov
lds
jmp
or
mov
shrl
push
outsl
lds
adc
mov
xor
iret
es
push
mov
rorb
push
mov
add
int3
out
mov
xor
stos
insl
xor
movsb
orb
push
repnz
push
dec
xor
shr
fimull
pop
sbb
hlt
jo
pop
sub
xchg
jnp
into
dec
ja
fs
or
mov
lahf
jmp
inc
je
sbb
push
or
cltd
int
out
popa
push
inc
in
or
ret
sti
inc
pushf
cmp
es
out
mov
and
aas
jbe
in
dec
testl
push
dec
dec
in
and
jb
jmp
sub
dec
pop
mov
cmp
leave
aad
or
shl
cs
gs
mov
mov
mov
aad
fimuls
cmc
rcrl
loopne
out
stc
lcall
ret
xchg
mov
adc
and
mov
mov
jmp
rcrl
mov
mov
sub
lret
loop
pop
and
or
pop
jo
mov
or
cmp
js
jns
int
push
jecxz
fdiv
test
fcoml
mov
dec
adc
pop
jle
fiaddl
jno
outsl
mov
jo
xchg
sti
dec
insb
push
bound
ja
fisubrs
push
inc
and
mov
sti
jg
xchg
dec
cltd
lahf
pop
iret
dec
ficompl
mov
jns
daa
sbbb
inc
sub
int3
dec
clc
mov
inc
rcr
arpl
push
push
stc
clc
or
lock
sub
and
fdivrl
cld
out
mov
ja
dec
loopne
mov
xchg
jl
rcrl
add
sub
cld
out
loopne
nopl
es
xlat
sti
inc
mov
dec
das
mov
pop
add
ret
int
xor
xchg
sub
adc
filds
test
mov
movsb
push
pcmpgtb
ret
sbb
inc
push
push
push
stos
aam
pop
mov
lods
loop
and
mov
jl
and
and
add
sahf
inc
mov
push
pop
jmp
xchg
in
ret
in
imul
lret
jecxz
sub
adc
mov
shrb
xlat
enter
lds
pop
cmp
addb
cmp
cmp
dec
push
cmc
stc
fldl
je
inc
das
mov
mov
push
or
or
outsl
jns
adc
and
xor
int
lds
sti
add
push
pop
sbb
lret
push
mov
mov
inc
pop
mov
mov
loope
popa
cld
aad
popf
imul
xchg
sbb
cmp
or
mov
adc
imulb
lock
add
cmp
lods
jge
in
in
int3
leave
pop
dec
xchg
ret
sub
rclb
rorb
popa
ja
adc
repnz
lock
xor
outsl
cmc
inc
pushf
cmc
or
icebp
mov
push
into
sbb
daa
ds
dec
nop
sub
scas
adc
or
mov
push
add
or
sub
sbb
pop
cmp
scas
push
scas
test
icebp
inc
cs
cmp
sarl
mov
mov
mov
push
out
sub
sbb
mov
mov
xchg
jns
aas
test
jae
or
stc
jl
in
sub
mov
jo
mov
mov
and
dec
out
add
xchg
dec
mov
inc
push
sti
push
arpl
rcrl
xchg
daa
cmp
lahf
aas
outsl
and
add
mov
testl
out
mov
ljmp
inc
jp
inc
mov
xor
and
inc
out
dec
jae
xchg
push
fisttpl
xchg
sub
push
cmp
mov
mov
pop
test
leave
insb
or
push
sbb
xor
out
jg
in
repnz
inc
ret
das
lea
xchg
sub
mov
add
mov
dec
cwtl
adc
adc
add
cmp
add
add
fninit
es
in
jnp
adc
dec
pusha
mov
cli
adc
filds
lods
dec
daa
hlt
ret
aad
xchg
jb
pop
inc
sahf
sub
cmp
int3
xchg
add
push
fisubl
stos
ficoms
int3
pop
cmp
mov
ret
push
xchg
icebp
loop
out
mov
push
pop
pop
mov
out
arpl
out
cmp
shrb
sub
imul
scas
jnp
int3
fisubl
dec
roll
or
or
lods
sarb
sti
mov
fucom
lahf
movsl
and
lcall
push
dec
inc
mov
repnz
js
or
adc
ds
push
imul
gs
and
or
jp
popa
out
jnp
in
push
ljmp
jb
xor
and
loopne
scas
or
pop
jo
bound
mov
inc
out
stos
loopne
stos
pop
popf
clc
repz
mov
adc
or
dec
push
mov
bound
mov
hlt
inc
add
xchg
dec
mov
push
pushf
das
shrl
mov
in
adc
popa
rorb
adc
cmpl
sbb
xchg
lods
dec
cmp
jne
ss
movsl
xor
out
push
sub
xchg
push
xchg
fdivrs
repnz
pop
pushf
mov
pushf
xchg
jns
imul
xor
ret
in
lods
maxps
inc
mov
lret
scas
inc
ja
mov
aad
clc
cmp
mov
xor
repnz
aaa
cltd
sbb
dec
outsb
loopne
mov
ljmp
data16
mov
fldt
jbe
neg
bound
int3
in
xor
lret
stos
in
jmp
inc
push
pop
cmp
shrb
cmpsl
ds
in
addr16
jmp
push
mov
into
pushf
neg
jbe
pushf
rorl
lret
pushf
addr16
inc
dec
xchg
xchg
push
sbb
test
cmpsl
mov
jbe
out
push
aaa
lods
cmp
lret
mov
iret
xchg
std
or
fs
mov
ljmp
idivb
iret
hlt
adc
jl
lods
ret
ljmp
fnstsw
and
cmovns
dec
mov
dec
mov
aaa
adc
pop
ret
test
pop
mov
mov
jno
mov
mov
lret
push
pop
inc
adc
rcrl
cwtl
testl
jle
jl
out
and
push
insb
push
add
popa
dec
sarb
xor
xor
icebp
mov
xchg
mov
and
fwait
adc
mov
cmp
ljmp
and
aam
mov
sub
sbb
xchg
xchg
lock
int3
or
mov
repnz
hlt
hlt
dec
outsb
inc
dec
push
push
sbb
sbb
cld
xchg
test
test
and
xchg
mov
sub
jmp
js
mov
xchg
leave
addr16
ja
and
subl
aad
mov
mov
mov
cli
inc
popa
pop
lahf
std
rcrl
pop
sbb
dec
mov
adc
push
mov
jo
aas
int3
movsb
test
pop
test
mov
je
push
and
xchg
xor
std
aad
fisubl
push
dec
scas
mov
loop
daa
es
pop
and
cmp
xlat
jecxz
shlb
cmc
push
mov
out
cmc
mov
das
scas
imul
cmp
pop
hlt
std
iret
test
fcom
fwait
pop
cwtl
ret
sbb
bound
scas
adc
sub
pushf
rcrb
imul
xchg
das
js
enter
int3
aam
and
push
mov
cmovns
xchg
aas
adc
mov
aad
in
insb
xchg
sbb
push
or
fwait
subb
add
data16
sbb
inc
shlb
ret
fcmove
scas
inc
stos
mov
xor
mov
inc
dec
xchg
push
cmc
in
sbb
mov
inc
rorl
or
hlt
push
inc
stc
aam
adc
arpl
imul
ss
cs
cmpsb
cmp
inc
rol
push
inc
inc
jmp
call
pop
aad
add
mov
mov
sahf
jle
dec
movsb
mov
pop
scas
jmp
inc
push
cmp
dec
ds
insl
push
js
mov
rorl
jp
out
out
dec
sub
xchg
and
mov
in
mov
iret
mov
popf
pop
adc
js
loopne
push
idivl
xchg
nop
and
jbe
je
add
xchg
xor
inc
and
cli
adc
sub
jge
xchg
xchg
addr16
aad
lods
lcall
inc
or
insl
jge
pushf
pop
pushf
or
pop
insl
lods
in
jae
adc
ljmp
les
or
stos
lahf
inc
jae
jg
hlt
loope
test
add
jl
push
or
push
mov
jbe
jno
push
mov
push
mov
loope
inc
mov
cltd
cwtl
pop
sub
stc
inc
or
inc
pusha
scas
adc
aaa
jne
lahf
push
push
popf
adcb
jns
pop
adc
pop
fisttpll
add
mov
insl
fidivl
cmc
push
inc
xchg
adc
and
mov
adc
push
lock
out
jo
adc
test
mov
sbb
iret
dec
dec
clc
icebp
mov
sub
mov
in
add
fmuls
push
std
xchg
jecxz
enter
pop
loopne
fst
in
pop
jb
cmpsb
xor
test
mov
dec
out
jg
push
sub
or
or
cmp
dec
ds
enter
pop
cltd
pusha
outsb
sbb
out
pop
mov
cltd
mov
andb
cli
dec
cmp
fs
lret
sbb
into
push
sar
dec
cmc
sarl
mov
sbb
ja
push
lea
adc
pop
pop
add
mov
mov
lock
bound
mov
jno
or
cltd
mov
mov
sarb
mov
out
vmwrite
shlb
out
call
mov
pop
pop
mov
jp
call
imul
mov
push
test
mov
ds
into
jne
pop
mov
pop
mov
ds
mov
es
cwtl
xor
add
jecxz
enter
mov
xor
jnp
popf
cmc
cmp
ja
adc
scas
andb
mov
cmc
pop
push
mov
lahf
dec
mov
movhps
inc
in
mov
mov
dec
xor
mov
jae
sbb
push
or
repz
insl
mov
dec
loopne
shr
in
cld
mov
add
dec
push
shll
jle
and
lret
sbb
jo
mov
and
test
ret
mov
lods
rcrl
and
insb
dec
insb
adc
mov
ret
ds
jbe
call
or
int
push
imul
jmp
out
dec
or
pop
jb
lret
inc
push
in
sub
push
lea
orl
push
and
add
push
pop
push
push
lock
fucomi
insb
or
das
test
ljmp
dec
add
xor
jecxz
aam
sub
jns
sub
or
add
ss
imul
pop
mov
mov
dec
push
jbe
adc
mov
mov
mov
add
inc
stos
xlat
adc
clc
cmpsb
fwait
jg
push
mov
dec
imul
or
repz
push
inc
stos
mov
dec
scas
sbb
fstp
in
in
aad
mov
out
mov
push
cli
mov
xorb
scas
mov
cmc
ss
js
mov
aaa
adc
aad
and
xlat
cs
mov
inc
mov
and
fnsave
lea
js
inc
pop
fidivl
adc
in
mov
mov
jns
cmp
cmpsl
pop
sbb
leave
adc
dec
or
and
jnp
push
jae
jl
jle
fcoml
cmpsl
imul
cmp
cli
pushw
leave
dec
enter
cmp
loopne
repnz
scas
pop
jle
fcomps
nop
fcmovnu
cmc
mov
jg
call
clc
dec
sub
inc
sub
cmp
pop
sub
mov
fnsave
gs
jnp
popf
inc
aad
faddp
and
orl
xchg
int3
shr
data16
mov
iret
scas
loopne
fcmovnb
ja
mov
inc
das
mov
xor
pop
call
fwait
lods
int
dec
cmpsb
int3
mov
adc
icebp
cmpsl
mov
out
push
jg
push
rorb
scas
mov
sbb
or
mov
fwait
mov
jmp
mov
repz
pop
and
shl
gs
add
push
dec
sub
sub
in
bound
pop
mov
leave
imul
pop
loope
cwtl
imul
jo
jne
jne
dec
aad
stc
sub
dec
mov
jne
mov
inc
mov
hlt
orl
imul
ds
cmpb
mov
mov
mov
jecxz
arpl
mov
in
and
sub
fsubrp
push
jne
cmc
in
jo
popf
arpl
sbb
pop
jg
cmp
rorb
sbb
jp
and
shlb
gs
mov
stos
mov
mov
add
in
in
or
test
mov
mov
pop
sbb
sahf
jb
mov
ret
jo
enter
pop
fildll
xchg
shll
sub
hlt
out
test
xor
scas
push
jnp
push
dec
jbe
xchg
loop
ds
test
sub
rorl
mov
mov
incb
faddl
loope
adc
xor
sbb
test
mov
lods
ljmp
pop
inc
aas
cmp
mov
outsb
insb
xchg
cmpsl
adc
xor
out
add
daa
ret
and
adc
jne
and
lahf
popf
push
std
xor
dec
mov
outsb
outsb
add
inc
cmpsl
mov
stos
adc
shrl
mov
jecxz
in
inc
lock
testb
mov
or
in
xchg
clc
xor
dec
loope
daa
in
jecxz
cmc
fcomp
test
add
push
int
pop
and
adc
mov
fnstcw
push
aas
xor
cli
mov
shlb
ret
gs
cld
testl
test
dec
xchg
push
lcall
add
mov
or
aad
jg
andb
ficomps
or
loop
mov
sbb
out
mov
loope
sbb
into
or
nop
rclb
xlat
dec
int
jle
mov
jns
mov
insl
js
dec
and
push
ret
cmp
mov
out
or
pusha
jl
adc
dec
mov
sbb
es
gs
pop
push
jne
mov
cmp
loope
aam
aaa
pop
std
jne
push
inc
and
dec
mov
pop
jl
insb
dec
sbb
fisubl
lahf
out
cli
shlb
ret
lods
int3
es
stos
mov
fimuls
in
out
inc
fldl
mov
cmp
sahf
mov
push
ss
inc
loop
jmp
imul
or
push
xor
dec
nop
mov
pusha
dec
xor
or
fsubl
arpl
sbb
xor
jecxz
cs
sub
xor
filds
cmpsl
dec
jge
pusha
packsswb
scas
mov
xchg
inc
cmc
xor
cmp
adc
insl
sub
xorb
mov
ss
in
push
cmp
or
fisubl
push
daa
lea
mov
icebp
dec
mov
jne
jg
add
pushf
inc
repnz
mov
insb
add
pop
adc
or
nop
sbb
out
push
adc
inc
dec
mov
call
inc
jb
pop
aam
sti
ds
out
dec
xor
and
sub
repnz
mov
sub
mov
sbb
xchg
jae
mov
push
jecxz
add
ret
xor
and
cmpsl
jne
sub
ja
mov
sbb
and
ja
ficoms
push
outsl
gs
adc
dec
add
std
shl
or
test
in
and
in
push
mov
pushf
punpcklbw
jb
jecxz
dec
orb
mov
jnp
sbb
and
shr
out
pusha
sub
imul
jecxz
frstor
insl
filds
and
add
mov
mov
popa
and
into
push
nop
add
out
mov
adc
mov
mov
pusha
sub
in
push
jo
fsub
mov
mov
out
push
fldl
fisttps
not
adc
jg
in
jae
pushf
scas
dec
sahf
ja
xchg
daa
aam
mov
fimull
scas
sti
pop
fnstsw
scas
ret
mov
dec
mov
push
xchg
out
push
test
mov
into
inc
sub
lds
out
mov
jmp
sbb
aad
leave
pop
xor
cltd
xchg
xchg
and
outsb
push
xor
stos
jl
add
mov
push
fistpl
fstps
add
test
jmp
lea
dec
out
rcll
rcl
sub
cmpsb
test
mov
jl
or
xchg
es
xor
lods
xlat
pop
sub
cmpsb
pop
pop
ret
lret
ffreep
sub
inc
fdivl
jno
mov
aaa
push
out
int
cld
adc
inc
cmp
jae
jg
shll
jl
pop
lahf
pop
shlb
pop
in
cltd
inc
and
lahf
jbe
dec
dec
inc
jbe
jbe
loopne
popa
jne
sub
and
mov
xchg
fwait
mov
add
or
sbb
loop
pop
nop
xor
push
lods
mov
ja
xchg
lods
ja
dec
punpcklbw
enter
test
xchg
fisubrl
sbb
insl
ljmp
scas
adcl
mov
sti
loop
in
pop
in
xchg
add
or
fists
push
cld
test
popf
mov
lret
jp
movsb
mov
hlt
fcmovbe
in
call
hlt
dec
sti
pop
cltd
and
jg
ret
adc
ds
inc
pop
jne
add
sti
movsb
push
outsb
mov
add
inc
push
sbb
dec
cltd
inc
mov
popf
adc
je
sub
dec
push
push
les
xor
jae
or
mov
ret
out
cwtl
out
mov
xchg
cmp
dec
push
ja
lret
into
repnz
dec
std
cmp
mov
les
out
leave
repnz
in
mov
out
nop
mov
jp
jge
fcompl
jbe
rorb
inc
sbb
add
arpl
cmp
mov
cmc
sahf
push
push
adc
pop
add
hlt
movsl
add
sahf
int
daa
repz
scas
gs
aam
je
in
dec
sbb
mov
xor
sbb
xorb
js
cmpb
ja
or
mov
jle
push
dec
add
dec
sub
enter
fwait
sbb
mov
cmp
movsl
dec
fs
pushf
out
test
aas
mov
inc
adc
jno
adc
fwait
and
mov
fsubs
push
and
cli
inc
dec
repnz
pop
lcall
mov
mov
jbe
cmp
into
ljmp
or
das
jl
fcmovnb
cmc
or
xchg
je
nop
bound
addr16
mov
or
xchg
aam
push
and
jmp
sub
test
jmp
pop
mov
lret
mov
sbb
add
jle
imul
fstl
add
jg
pinsrw
pop
jns
jge
inc
and
fists
inc
aad
divl
and
cmp
adc
xchg
cli
out
les
mov
xor
test
leave
xor
sahf
pop
ss
daa
call
mov
push
filds
mov
std
hlt
xor
xor
inc
mov
ret
test
or
hlt
daa
cltd
sahf
jbe
jno
lahf
stc
adc
jae
push
add
ljmp
dec
push
icebp
sti
xchg
jne
fistpl
sbb
cwtl
addr16
inc
rcll
add
mov
shll
add
adc
mov
rep
enter
movsl
push
xchg
xchg
insl
mov
aas
cmpsb
lea
lea
in
and
and
jl
add
int
ds
mov
pushf
lds
cmpsl
cld
into
add
cli
mov
fisttps
shl
dec
sbbl
or
repnz
push
mov
mov
pusha
fstps
pusha
hlt
cmp
daa
push
and
mov
cmp
out
xor
or
mov
bound
lahf
adc
adc
xor
mov
aaa
shll
sahf
dec
sub
and
mov
cmpsl
fcomip
and
sub
adc
mov
push
iret
cmpsl
mov
sahf
add
adc
scas
xchg
cmpb
add
adc
iret
jge
adc
adc
mov
inc
cltd
adc
movsl
adc
or
bound
pop
or
add
push
bound
jo
adc
inc
icebp
ljmp
inc
dec
mov
js
cli
sub
xor
cmp
out
jns
loop
sub
fdivp
jp
loop
jo
push
iret
std
mov
push
out
aaa
cltd
pusha
cmp
add
jg
push
int
or
or
cmp
frndint
jnp
icebp
sti
je
stc
stos
repnz
movsb
xchg
pop
or
cmp
jl
cmc
movsb
push
xchg
fs
clc
cmp
icebp
sub
sarb
pop
incl
mov
gs
enter
jae
sarl
jmp
pop
iret
push
jecxz
int3
pop
pop
xor
fimull
sbb
divb
shll
pop
push
cli
or
cmpsb
repz
xor
ficompl
ljmp
int
outsb
and
mov
inc
xor
cmp
inc
addl
inc
dec
dec
out
inc
clc
xor
xchg
mov
cmp
jg
xchg
sbb
mov
nop
lahf
orl
pop
arpl
xchg
movsb
scas
bound
outsl
loope
and
mov
je
push
nop
nop
into
jge
xchg
roll
fwait
sub
sbb
push
into
fmul
jb
into
rcll
int
jo
xchg
xchg
dec
aaa
call
lods
and
movsb
jb
pop
lret
mov
push
add
test
dec
jne
push
in
mov
cwtl
pop
es
ja
sub
je
test
into
jmp
jp
pop
rcll
jp
mov
mov
pop
pushf
data16
sbb
movsl
ret
or
cs
xor
jo
lods
je
unpcklps
repnz
mov
mov
lcall
mov
push
inc
jns
pop
rcr
add
enter
and
das
and
or
mov
fmull
pop
push
push
or
cwtl
cltd
lds
push
imul
and
cmpsl
daa
pop
out
out
rcrb
lea
nop
pusha
scas
sub
fiaddl
jae
fisubs
js
dec
jns
movsl
mov
push
dec
popa
cmpsb
cld
insl
inc
fwait
or
clc
popa
and
mov
xor
iret
add
sti
xchg
xchg
jb
pop
aad
sbb
lea
jecxz
jns
test
iret
mov
jge
popa
int3
cs
outsl
stos
lods
inc
fwait
pop
ret
jbe
cmpsl
push
loope
hlt
mov
daa
xor
dec
xchg
out
dec
roll
and
out
clc
push
xchg
subb
cmp
js
dec
fstps
bound
and
inc
test
dec
xchg
les
xor
mov
mov
shlb
enter
loopne
sbbl
sbb
adc
xlat
testl
mov
sbb
int
add
fiadds
cmp
cli
mov
jb
dec
xchg
adc
pop
jmp
sarl
mov
pop
and
and
mov
insb
cmp
dec
adcb
repz
in
outsl
orl
jne
popa
lret
xor
cmc
cltd
icebp
imull
sub
ss
jecxz
xor
mov
pop
insl
adc
shll
jnp
fisubs
dec
daa
and
cmc
out
cmp
pushf
mov
dec
andl
outsl
mov
jl
cmp
mov
popf
in
push
push
inc
jp
cmpsl
js
jo
and
cmp
jo
jnp
add
sbb
push
cmp
sub
xchg
movsl
testl
aad
cmpsl
adc
bound
push
lock
sbb
sbb
mov
push
push
popf
and
and
xchg
push
idiv
jb
dec
jle
dec
sar
push
nop
push
test
inc
repz
sub
mov
cli
popf
ret
pop
clc
js
outsl
repnz
xchg
jmp
orb
scas
movsb
lcall
fimull
insl
add
mov
hlt
xor
sub
jne
cltd
and
inc
and
enter
inc
cmc
into
fldl
divb
ffree
sub
int
pop
xchg
xor
bound
dec
mov
fstp
cmp
je
fimull
imul
pop
mov
cmp
cmc
add
andb
mov
pop
pop
push
cmp
ficoml
andl
add
adc
cmp
and
imull
testl
cltd
adc
add
sbb
adc
in
mov
push
dec
repz
stos
dec
mov
cmp
and
pop
adc
sahf
adc
xchg
addr16
fsubrs
out
xor
divps
dec
adc
fwait
mov
out
cmpsb
jmp
test
cltd
fistl
sub
push
lahf
push
sbb
mov
xor
jp
insb
cmp
jb
and
call
repz
sub
push
cmp
movsb
sub
push
mov
pop
aaa
insb
fiaddl
xchg
mov
or
push
and
sbb
test
push
or
and
rorl
pop
sahf
insl
iret
cmp
loopne
inc
ljmp
cmp
mov
add
das
xchg
pop
jecxz
iret
add
movsl
rorl
xchg
pop
in
cwtl
inc
movsl
imul
mov
pop
mov
jp
nop
pop
or
loop
jmp
cmc
repz
leave
test
xchg
sub
incl
movsb
push
js
rcrb
inc
mov
test
inc
pop
leave
xchg
sub
xchg
xor
adc
lock
inc
inc
cmp
xchg
pop
push
cmpsl
add
pop
or
nop
mov
pop
sar
mov
pop
jns
call
das
cli
dec
in
lock
out
dec
mov
xchg
into
or
imul
pop
jns
jmp
xchg
int3
xchg
push
mov
fisttpl
int
push
xchg
mov
outsb
dec
incb
or
inc
out
pushf
or
insl
jno
sub
mov
je
jo
test
inc
fwait
jns
sbb
mov
or
sub
jae
or
mov
add
pop
insl
fiaddl
inc
jl
xchg
push
sbb
jle
pop
inc
mov
je
shll
adc
and
xchg
outsl
pop
stos
cs
push
inc
dec
mov
int3
mov
es
loope
mov
scas
decl
insl
lods
xchg
stc
sub
push
adc
repz
je
jbe
cmpsb
add
cmc
mov
das
mov
mov
xchg
mov
sbb
dec
sti
pop
xchg
in
cwtl
ss
mov
mov
push
test
and
inc
lds
lret
fidivrl
lock
mov
sbb
mov
mov
flds
jecxz
insb
dec
inc
xchg
lret
shll
xor
pop
sub
push
mov
sbb
daa
mov
scas
loop
xchg
pop
aas
movsl
pop
mov
push
les
jnp
shl
dec
lds
mov
icebp
mov
test
popf
pop
mov
pop
xor
sbbl
mov
or
and
add
lahf
xchg
mov
inc
dec
inc
in
pusha
out
in
insb
rcr
cmc
das
dec
add
lret
mov
fstp
adc
xlat
inc
ret
jae
jmp
lods
gs
scas
and
loope
cmc
cmp
jne
inc
pusha
imul
aad
jg
xor
out
xchg
and
popa
push
xor
pop
jae
push
hlt
inc
popf
dec
adc
xor
mov
stos
movl
lods
cmp
jmp
fnsave
sub
xor
jg
js
pop
jb
pop
aad
xchg
hlt
mov
push
sbb
sbb
rcll
cmpsl
cmp
and
mov
into
sbb
rcl
push
repz
pop
or
daa
mov
jge
mov
fidivrl
or
dec
push
xor
adc
sbb
in
pop
es
sbb
leave
aad
js
sub
loope
push
cmp
cmpsl
cmp
movsb
mov
sbb
pop
iret
cs
sbb
call
imul
imul
mov
cli
mov
sbb
call
jo
adc
scas
pushl
push
hlt
je
mov
pop
aas
push
std
xor
jmp
pop
movsb
jnp
pop
mov
sahf
xor
jo
inc
cmp
mov
mov
outsl
jg
mov
sbb
in
xor
and
sbb
fwait
sbb
outsb
cmpl
div
mov
and
sub
push
mov
push
add
xchg
sarb
leave
loope
pop
push
fsubr
lret
mov
cmp
sub
cld
cmp
lahf
push
add
mov
aas
mov
addr16
mov
insl
icebp
mov
testl
push
pushf
push
jae
sbb
mov
ljmp
jle
loopne
lock
mov
clc
inc
mov
nop
push
mov
sbb
hlt
pushw
out
push
mov
cmp
stos
sbb
jle
sub
movsl
inc
adc
hlt
and
fstps
mov
out
pushf
int
loope
sbb
ss
ja
lcall
sub
and
or
mov
hlt
popa
cltd
sbb
and
sub
std
shll
push
push
dec
xchg
mov
sbb
cmp
mov
ljmp
xor
jmp
stos
mov
out
add
push
movsl
imul
push
mov
mov
inc
mov
aad
lahf
sub
push
pop
icebp
add
enter
shl
sub
mov
cli
push
jl
mov
and
xchg
shld
lcall
fs
push
pop
adc
push
ror
xchg
cmpsb
push
push
cltd
mov
dec
dec
mov
rcrb
insb
cmc
das
cmp
into
aas
and
adc
out
dec
inc
add
das
xchg
fwait
call
mov
movsb
es
lahf
sti
cmpb
cmp
in
clc
or
scas
push
loopne
aaa
call
push
idivl
adc
pop
push
xor
sub
inc
jmp
xor
cs
cmc
push
shrl
in
mov
out
push
fmul
jmp
push
adc
aam
xor
ss
inc
pop
gs
aas
fwait
and
mov
icebp
jbe
cmp
mov
pushf
outsb
loope
test
insb
inc
cmp
push
sti
inc
int
cmp
push
insl
imul
sbb
inc
xchg
and
xor
pop
int3
loop
push
dec
das
push
xchg
dec
lahf
lock
cld
xchg
in
dec
xor
adc
mov
ror
neg
inc
mov
addr16
sub
es
jmp
or
div
and
pop
mov
hlt
adc
ret
sbb
lods
or
test
stos
cwtl
sarl
cmp
loope
add
add
stos
sahf
xorb
lods
rolb
push
pop
sub
popa
mov
hlt
leave
mov
adcl
iret
imul
push
dec
and
fimull
cltd
popl
mov
stos
fs
add
cmp
testl
jg
clc
push
addr16
stos
sub
fcmovnu
loopne
cmpsl
lods
cmp
ja
in
sbb
add
push
roll
rcrl
pop
xlat
xorb
cmpsb
mov
mov
pop
testl
jb
out
and
mov
lret
jmp
sbb
jp
add
mov
xchg
cmpsl
mov
and
add
in
icebp
cmpsb
mov
testl
or
sbb
enter
in
mov
adc
xchg
add
add
enter
sub
add
into
test
sbb
nop
out
sub
adc
push
fwait
and
mov
sub
int
and
xchg
movsl
jbe
mov
jg
sbb
ds
mov
mov
mov
outsb
inc
ds
jnp
rclb
and
or
xor
push
mov
push
push
or
mov
ja
mov
or
xor
out
add
xor
pop
into
pop
mov
sbb
push
sub
rclb
push
mov
loopne
and
mov
dec
cmpsl
adc
pop
ret
mov
int
gs
lock
out
rorb
popa
lret
mov
filds
lock
imul
xor
fcomps
add
dec
les
fs
push
test
fistps
mov
adc
iret
dec
flds
aam
leave
lods
cmpsl
movsb
adc
adc
icebp
fdivl
and
adcl
stos
and
push
notb
add
fisttpll
cli
les
pop
call
insl
mov
out
insb
dec
jo
cmpsb
std
hlt
xor
push
test
insb
fidivrl
fs
jne
mov
mov
jl
fbld
push
aaa
mov
imul
test
ret
loop
mov
sub
lahf
xor
dec
fbstp
inc
push
and
int
test
shll
lds
imul
adc
cmpsb
adc
mov
ja
test
shl
xor
jp
aam
jno
je
lock
mov
push
jecxz
inc
roll
mov
loopne
pop
out
rorl
adc
into
dec
stos
std
aad
imul
je
mov
dec
pop
xchg
orb
jno
test
ret
call
mov
fidivrs
stc
clc
xor
sbb
in
das
cmp
push
out
cmp
add
stc
pcmpgtd
xor
adc
xchg
push
mov
int
popa
push
movsb
push
stos
scas
cmpsb
pop
imul
fcoml
or
call
push
push
xor
xchg
sbb
jo
cmc
sub
mov
ret
mov
jge
in
jnp
mov
aas
out
dec
adc
in
dec
leave
repz
shlb
xchg
lret
sarb
repnz
xor
fwait
es
sbb
fisttps
pushf
sbb
dec
outsb
fisubl
and
data16
adc
push
pop
loope
mov
iret
gs
outsl
jmp
stos
sbb
insl
lret
scas
xchg
bound
xchg
dec
setnp
es
pop
inc
jnp
inc
pop
pop
aas
mov
adc
xchg
lock
ret
out
pop
ficomps
ret
stos
add
sbb
mov
mov
pusha
decl
sbb
ja
xchg
dec
shll
sub
xchg
jg
mov
lds
xorl
sub
push
out
jnp
fxch
sbb
pop
popa
std
cwtl
pop
ds
lock
mov
inc
ss
pop
inc
sti
jl
test
add
xchg
cmp
outsl
aam
int
jp
inc
into
enter
mov
push
sti
daa
lds
pop
adc
nop
inc
in
popf
enter
inc
call
bound
sarl
dec
daa
out
fsts
ljmp
movsl
shr
jecxz
sbb
mov
mov
mov
test
xchg
lea
fisttps
adc
std
xchg
pop
sahf
lahf
mov
mov
gs
cmp
pop
adc
and
or
hlt
pop
mov
pop
mov
std
std
pusha
scas
sbb
out
xchg
js
test
cwtl
mov
rcll
adc
adc
imul
add
je
nop
out
orl
or
pushf
adc
out
in
xchg
push
fiadds
stos
mov
mov
jne
enter
scas
mov
lcall
outsb
add
imulb
sti
stc
int
aad
xchg
arpl
push
mov
xor
xor
rolb
push
and
jb
mov
mov
sbbl
xchg
scas
enter
or
xor
dec
and
sbbl
push
and
or
pop
inc
push
inc
inc
push
cmpsl
inc
sub
mov
adc
pop
mov
fnstsw
push
add
mov
inc
out
ret
les
js
push
jl
movsb
mov
rcll
add
pop
push
mov
fs
xlat
pusha
stos
mov
adc
imul
rcr
sub
in
mov
xchg
cmp
or
push
xchg
adc
jmp
int3
inc
cmp
mulb
leave
outsl
and
mov
fcomps
xchg
pop
mov
push
xor
xchg
lds
sarb
lret
jecxz
xor
pop
push
push
into
sub
outsb
pop
or
ror
sar
and
mov
jae
xchg
xchg
dec
xchg
iret
mov
cs
dec
xlat
js
add
jb
push
pop
std
popa
stc
push
mov
xor
or
xor
add
and
or
pushf
dec
mov
popa
adcl
inc
sub
mov
ds
and
test
orl
adc
ljmp
cmp
or
and
mov
sarl
adc
clc
ret
push
ja
dec
lods
xor
jb
adc
xor
sbb
add
pop
and
pop
rorl
xchg
adc
add
scas
rolb
ss
out
negb
xlat
les
sub
lds
and
cli
outsl
cltd
cmp
idiv
ss
sub
aas
pop
adcb
test
arpl
vcvtpd2dqx
add
cmp
addr16
repz
dec
or
dec
adc
test
dec
setle
jmp
ljmp
dec
xor
cmpsb
ss
subb
sbb
or
ja
addr16
cmp
repz
insb
fs
outsl
arpl
popa
adc
inc
dec
fbstp
ja
pop
std
xchg
insb
or
das
jo
or
and
add
sub
sub
std
rcrl
pop
je
cli
and
ljmp
mov
imul
incl
aaa
js
pop
sbb
stos
or
call
or
pop
in
lods
ret
sub
mov
add
or
jb
popf
xcrypt-ofb
cmpsl
in
xchg
jo
adc
packssdw
int3
ljmp
jns
pop
dec
ljmp
imul
rcr
insb
shll
shlb
fistps
imul
xchg
xor
and
js
decl
mov
loopne
push
out
leave
sub
cmpsl
jge
aam
jecxz
movsl
movsl
lds
fstp
adc
mov
bound
add
fildll
cltd
shll
inc
sbb
xorl
cltd
or
arpl
out
into
add
insl
insb
mov
xor
push
sub
imul
pop
aam
inc
pusha
mov
pop
inc
pop
inc
lods
sahf
shll
js
int3
enter
inc
cmp
fisttpl
push
test
sub
pop
fiaddl
stos
std
mov
add
cmp
add
aaa
sbb
sbb
shr
dec
push
inc
aas
and
inc
mov
add
je
adc
rorl
pop
jg
dec
inc
sub
sbb
and
push
lods
aam
dec
and
insb
ret
mov
mov
repz
xchg
stos
cld
cmp
mov
pop
aad
les
dec
lds
and
dec
daa
jo
sub
sti
iret
jb
outsb
jns
mov
add
lret
cli
out
mov
popf
and
cld
dec
push
or
xor
mov
xchg
inc
dec
fisubs
and
mov
cmp
lret
add
loope
cmpsl
icebp
xor
mov
jmp
clc
int3
push
jecxz
jge
repnz
mov
les
inc
xor
inc
cs
dec
jl
cmp
pushf
mov
sub
arpl
jp
fcoms
dec
sub
or
lahf
ja
clc
add
inc
mov
mov
mov
movsl
mov
dec
sahf
xchg
adc
pop
push
cwtl
or
mov
fsubl
out
push
bound
jb
lahf
dec
inc
jo
sbb
sbb
lea
test
gs
cwtl
mov
push
pop
sub
vmread
mov
out
int3
or
rolb
arpl
xorb
inc
hlt
adc
dec
push
lret
ret
and
sbb
ss
jne
in
push
xchg
loopne
adc
jbe
je
test
mov
fucomip
insl
shll
outsb
insb
out
mov
and
push
adc
push
xchg
lock
xchg
dec
gs
aaa
les
repnz
fcom
push
nop
lret
fsubs
add
aaa
fistps
movsb
ja
add
pop
mov
jmp
movsb
int
xlat
pop
mov
in
jo
test
dec
fldl
jecxz
scas
push
imul
mov
lds
lods
icebp
pop
xchg
lcall
xor
or
cmc
xchg
fwait
pusha
ljmp
jg
fsubs
stc
stos
imul
nop
loop,pt
stos
fmull
mov
jg
enter
inc
jp
xor
mov
outsb
lret
inc
dec
pop
sub
push
push
int3
xor
pop
insl
sbb
movsl
je
mov
out
sub
lcall
rcrb
sbb
lods
ret
dec
enter
jnp
mov
xor
dec
jle
es
iret
push
rclb
xor
or
ret
sbb
push
std
add
cmp
ss
icebp
or
push
inc
or
iret
loopne
push
inc
or
sbb
cmp
pop
pop
or
dec
iret
lods
or
mov
push
sbb
mov
jl
aam
scas
mov
mov
jbe
ja
mov
mov
sbb
jmp
shll
jl
scas
mov
mov
outsb
jno
add
and
sub
mov
test
push
sub
mov
les
or
xor
popa
out
mov
jbe
jmp
outsb
fildll
adc
xchg
mov
or
sub
adc
clc
pop
lods
ret
dec
std
pop
aaa
jne
jnp
mov
and
adc
pop
pop
pusha
cltd
dec
loopew
shrb
jl
aad
or
or
out
push
arpl
or
fidivl
pop
fs
lods
imul
fstp
jg
push
inc
insb
add
inc
stc
cmpl
cmp
xchg
lcall
cmc
cmpsb
mov
lds
cmp
add
ljmp
inc
and
aas
adc
jo
cld
dec
cmpsl
lret
mov
shlb
test
xchg
push
lcall
dec
repz
lret
xor
xor
rorb
pop
insb
cltd
xor
mov
sub
mov
pop
pcmpgtb
mov
adc
rorb
loope
lods
and
test
cmp
incb
and
inc
mov
sub
out
sbb
out
mov
je
cltd
iret
fstpl
mov
add
fsubrs
shr
jge
jle
shll
popa
add
aas
sub
int3
lahf
mov
mov
adc
rorb
adc
loope
xchg
cmp
lds
pop
loope
pop
jns
movl
into
mov
fwait
dec
mov
movsb
lret
jne
lock
xlat
adc
xor
sbb
sbb
imul
cmpsl
sti
mov
xchg
inc
pop
add
addr16
xchg
add
adcb
mov
sbb
icebp
lods
sub
push
push
add
inc
outsb
sbb
orb
fsts
ljmp
and
daa
xchg
nop
pushf
notl
xchg
gs
jae
or
mov
fadds
sub
push
mov
and
pop
adc
lahf
shr
je
aam
add
bound
xor
stc
mov
int3
repz
pushf
or
fisttpl
adc
out
sbbl
cmc
pop
in
jmp
clc
lock
xlat
mov
icebp
rorl
lret
stc
and
jecxz
dec
stos
adc
mov
xor
cmp
ljmp
sub
cltd
clc
outsb
je
cmp
bound
mov
xor
pop
pop
test
dec
mov
or
cmp
loopne
stos
adc
inc
lock
dec
in
cmp
int3
inc
aam
push
jmp
sbb
mov
pop
ret
loopne
gs
jp
dec
inc
pop
cwtl
and
int3
out
push
fsub
cmp
mov
mov
movsl
sbbl
int
negb
push
push
and
and
rorb
popa
or
mov
cld
cld
shl
add
xchg
lahf
jge
adc
and
adc
jns
and
sub
lods
cmc
jnp
xchg
or
int
push
cmpsl
push
fisubs
ja
push
addr16
mov
ret
std
adc
out
mov
xor
cmpb
xor
mov
rcrl
jno
jns
ljmp
adc
and
sub
and
pop
stos
imul
add
mov
sbb
dec
mov
fisubl
jge
adc
inc
mov
iret
imul
sub
adc
mov
inc
push
jb
outsb
jbe
pusha
jb
aaa
xor
mov
test
rcrl
mov
mov
aaa
sar
inc
cmp
imul
rcr
scas
xchg
scas
sbb
clc
popa
outsl
mov
xchg
adc
mov
test
xor
addl
dec
mov
push
jl
icebp
jo
jle
imul
xchg
stc
sub
cmp
sub
sahf
inc
out
ljmp
push
data16
je
cmpl
pop
int
mov
movsb
and
mov
pop
xorl
icebp
inc
jo
rol
mov
rcr
mov
arpl
pushf
mov
fisubl
pop
lret
loope
and
jae
xor
cmpsl
movsl
aas
push
cs
insb
ss
repnz
pop
out
bound
or
repz
jne
imul
dec
xor
xor
mov
arpl
cmp
std
ljmp
jecxz
push
mov
test
fldl
mov
and
dec
std
cmp
int
insb
push
in
lods
mov
cli
push
push
notb
and
cltd
leave
cld
sbb
and
cmp
mov
call
mov
pop
decb
push
js
cli
aaa
ds
dec
js,pt
mov
es
pop
insb
outsb
fistpl
xchg
aam
in
mov
jge
or
xor
stos
xchg
cmpsl
sub
js
cli
dec
imul
push
lcall
sub
mov
scas
sbb
fcoml
sbb
outsl
dec
pop
inc
mov
sub
or
incb
std
and
pop
xchg
in
mov
inc
jle
out
inc
add
test
idivb
cld
stos
stos
pop
lods
push
mov
les
test
inc
bound
cmpsb
or
mov
dec
mov
call
mov
sbb
sbb
push
pop
shr
test
sub
ret
inc
pop
ss
mov
ss
push
xlat
int
in
cmp
mov
jns
ret
sub
adcb
and
nop
xor
jbe
dec
call
shll
mov
lret
mov
push
out
pop
add
mov
and
call
adc
ja
in
loop
add
mov
ficomps
scas
lods
cmp
rep
pop
fiaddl
pop
or
pop
stos
push
js
ss
add
jmp
dec
and
xchg
paddsw
pop
loope
imul
pop
fmull
pop
insb
jmp
inc
sahf
rorl
jg
fsubr
outsl
jl
aam
clc
xchg
mov
lods
push
push
jg
jmp
push
pop
stc
sbb
pop
addr16
movsl
sahf
lret
scas
movsl
es
add
sahf
mov
xorl
cmp
sbb
imulb
pop
test
das
mov
daa
test
jmp
mov
stos
and
ja
mov
push
cs
xchg
and
lea
int
sbb
inc
std
and
notl
sarb
jle
pop
ret
mov
sarb
inc
mov
es
xchg
and
psadbw
ret
out
mov
push
fstps
adc
dec
sti
loop
sub
dec
daa
mov
out
aad
bound
sarl
mov
or
loop
mov
add
arpl
mov
push
inc
sub
mov
popa
and
je
and
repnz
sub
xchg
insb
cwtl
jae
and
pushf
and
lret
shll
lcall
sub
aam
push
jo
xchg
mov
add
xchg
jb
xchg
shlb
pop
or
mov
xchg
roll
stos
mov
shll
xor
add
notb
int3
std
push
pop
pop
hlt
push
popf
out
ja
cs
or
jb
xchg
das
push
sarb
cmp
pop
icebp
adc
inc
mov
gs
mov
cs
out
shl
dec
pop
incb
das
repz
jge
pop
or
loop
xor
xchg
addr16
jmp
outsb
jecxz
or
mov
mov
je
sbb
lods
mov
rorl
out
xchg
mov
pop
xchg
jle
push
pop
stos
sti
dec
sahf
push
sbb
lods
stos
fst
jg
jp
fdivrl
hlt
hlt
add
in
cmc
test
movsl
push
shl
push
mov
aam
inc
scas
test
scas
inc
ja
mov
loopne
mov
pop
push
dec
mov
push
lret
dec
and
mov
pusha
icebp
imul
xor
ret
adc
rcr
push
inc
std
pop
jne
adc
mov
mov
stc
inc
clc
aas
adc
call
xchg
and
cmp
mov
insl
jb
ljmp
xchg
pop
cmp
fucomi
insb
or
cwtl
out
or
fmuls
push
dec
mov
lcall
test
call
int3
sti
arpl
lea
pop
jno
into
aad
bound
adc
ret
pushf
lods
xchg
movsl
pop
cmp
xchg
and
or
fwait
fs
lcall
ror
dec
je
nop
shrl
inc
mov
push
sbb
dec
xor
pusha
cmp
mov
push
add
xchg
dec
aad
add
nop
enter
notb
aad
sbb
cmpsb
jle
sub
std
int
dec
inc
in
shlb
xchg
int
dec
ret
xorl
jp
jmp
out
pop
mov
mov
aam
movsb
sti
subl
lret
xor
and
mov
fwait
xor
popa
lcall
imul
test
push
dec
cmpsl
in
subb
lds
and
lock
cmp
subl
rorl
lds
outsl
jb
dec
push
sti
add
out
xor
int
and
xor
jb
mov
rorb
cmpsl
xchg
adc
xchg
rorb
in
sbb
lret
fcomp
pop
dec
dec
inc
aam
add
dec
xchg
adc
xor
mov
sahf
dec
inc
sbb
repz
mov
xchg
mov
mov
shr
movaps
and
pop
cs
icebp
pop
mov
inc
out
ja
or
xor
fdivrl
add
push
lret
cmp
enter
and
inc
jle
jecxz
or
lods
mov
pusha
out
push
add
xor
push
sbb
and
roll
iret
dec
mov
cwtl
inc
mov
testb
movsl
cmpsb
fistl
clc
sub
inc
insl
fdivp
stc
push
jge
mov
ljmp
push
add
out
mov
cmp
mov
movsb
or
dec
cmpsb
jno
push
cmp
test
mov
fwait
aam
clc
jo
adc
shll
jae
xadd
xchg
push
pop
test
sub
mov
btr
cmp
in
sub
pop
lea
sub
fdivs
mov
push
outsl
jae
mov
setge
sbb
rcr
jle
int3
sub
jae
and
insb
fimull
xchg
fwait
out
pop
cwtl
dec
add
mov
jb
sti
push
mov
lea
sbb
fbld
mov
pop
mov
hlt
outsb
add
subw
jmp
cmpl
in
dec
in
and
adc
and
or
addr16
adc
push
xchg
sbb
mov
or
mov
test
scas
adc
cli
xchg
outsb
mov
popf
aad
lock
nop
fildll
inc
xchg
or
repz
stos
nop
mov
xlat
repz
imul
sbb
adc
inc
jns
jecxz
std
pusha
loopne
imul
inc
sub
imul
xor
push
mov
lcall
imul
push
and
mov
imul
cld
sub
sbb
and
sahf
or
inc
dec
fwait
scas
or
test
js
std
in
lcall
add
cmp
mov
rcll
jns
add
shrl
and
cmpsb
in
jae
ficompl
int3
test
outsl
or
adc
sub
mov
addr16
inc
pop
mov
addr16
int
out
arpl
pop
sub
xor
int3
xchg
mov
xchg
movsl
imul
repz
xor
or
cmp
outsb
stos
lret
and
inc
loope
outsb
cltd
les
repz
mov
lods
outsl
jne
cltd
pop
enter
cmp
pop
popa
mov
or
mov
xchg
xor
int
add
sbb
push
mov
in
sub
and
mov
xor
xor
inc
test
sub
insl
and
mov
fiaddl
inc
int3
pushf
xchg
push
mov
pop
lret
sbb
loopne
mov
ljmp
arpl
lret
sbb
inc
stos
in
aaa
aam
dec
mov
test
fdiv
or
cwtl
xchg
adc
aad
filds
data16
ljmp
scas
mov
test
dec
loop
pop
mov
shlb
mov
cmpxchg
sbb
cmp
incl
addr16
lret
jbe
outsl
je
loope
mov
jne
test
cmc
mov
int
sbb
hlt
inc
dec
test
lea
popf
sti
cmc
inc
add
dec
mov
lcall
sbb
inc
inc
push
outsb
lret
fsubr
icebp
dec
xor
adc
pop
stc
push
pop
dec
sub
push
cmp
test
mov
xor
lret
popa
mov
iret
mov
push
pushl
jle
hlt
adc
rcll
insl
mov
fwait
inc
int3
pop
adc
push
adc
pop
pop
mov
dec
jne
adc
push
cmp
inc
dec
call
dec
or
jo
in
es
gs
sbb
imul
dec
mov
inc
sub
xchg
cs
shlb
icebp
add
mov
xor
leave
imul
rcrl
mov
fbstp
outsb
jne
push
test
clc
insb
sub
jg
pop
mov
das
cmp
push
clc
jb
mov
shr
xor
jmp
mov
jecxz
lea
dec
push
out
outsb
cwtl
add
add
gs
sbb
mov
leave
adc
sbb
imul
or
mov
shlb
outsb
movb
imull
add
xchg
es
in
clc
add
pop
sub
lods
mov
fists
mov
outsl
sbb
xor
outsb
pop
movl
pop
adc
and
mov
out
push
iret
or
mull
mov
cld
adc
enter
jbe
enter
fistl
pop
aad
fstpl
les
cmpsl
sti
jge
sahf
test
out
mov
in
es
aam
loope
fisttps
popf
dec
cltd
in
nop
sub
stos
xchg
dec
fildll
inc
push
sbb
je
sbb
into
cmp
in
scas
cmp
into
sub
mov
inc
push
xchg
or
movsl
sbb
lods
sub
dec
dec
pop
ss
rolb
xchg
aas
jne
mov
lods
in
loopne
or
dec
jo
push
stos
adc
sbb
xor
mov
push
cmpsb
out
clc
xchg
xlat
sub
jp
adc
lahf
sbb
jno
or
test
jp
in
and
popa
testb
call
icebp
xchg
lret
xlat
es
mov
sahf
push
xchg
in
loop
xchg
pop
mov
cmp
hlt
pop
pop
pusha
push
sahf
sbb
and
mov
fists
pop
out
sub
popf
daa
xchg
rorb
jp
and
xchg
cmp
mov
jl
sahf
mov
dec
pop
popf
dec
and
mov
push
push
inc
mov
imul
mov
jae
orl
xchg
push
arpl
pop
ret
repnz
cmp
pop
mov
add
and
sub
ljmp
adc
cmp
add
or
shlb
push
addb
dec
add
repz
pop
repz
add
sbb
fdivs
mov
and
lahf
das
jge
sbb
pop
repz
and
out
lret
aad
stc
sub
jo
sbb
lret
inc
stos
mov
mov
dec
cli
add
mov
sub
leave
mov
shl
xchg
in
out
outsb
repnz
lock
jmp
add
out
int
jp
add
test
cmpsl
fwait
enter
lcall
mov
movsb
xchg
jnp
mov
insb
push
dec
enter
js
pop
scas
sti
dec
inc
rolb
sbb
jl
inc
mov
ret
fmul
js
push
pop
jo
and
int
into
jle
inc
jmp
sti
pop
fidivs
mov
int3
jmp
jbe
push
mov
jo
fwait
jns
fnstcw
cmp
into
xchg
mov
or
sub
mov
loope
clc
roll
mov
cs
mov
xchg
mov
dec
dec
adc
mov
mov
sbb
test
popf
or
cmpsl
sbb
add
out
mov
ds
mov
fdiv
aas
in
dec
add
dec
movsl
insl
fiadds
in
inc
cmpb
mov
jbe
stos
sbb
xor
push
lock
push
mov
cmp
decl
cmp
jge
and
aad
push
push
gs
adc
dec
adc
jle
xor
push
jae
std
push
cmp
into
popf
inc
sub
rcl
testb
test
jmp
cwtl
xchg
adc
and
inc
lret
in
dec
and
sub
movsb
dec
fcmovu
test
xor
subl
xchg
jnp
pusha
jp
sub
fnsave
cmp
xchg
jg
test
and
fcmovbe
xchg
iret
xor
xchg
dec
add
cmpsl
xchg
and
jb
lret
push
push
mov
pushf
inc
xchg
test
popa
aad
mov
xchg
out
add
inc
movsl
dec
cs
lret
fs
fmull
pop
aas
hlt
cmp
and
sub
in
adc
or
hlt
and
add
mov
rorb
push
and
mov
pop
mov
les
lock
cmp
loop
fwait
mov
adc
lea
cmpsl
in
popf
jp
jno
mov
mov
push
and
aas
subl
mov
or
cmp
mov
je
xor
xchg
int3
inc
jbe
dec
jae
in
sahf
mov
loopne
lret
pop
outsb
cs
push
aaa
mov
xor
add
adc
test
into
and
gs
clc
mov
inc
push
into
mov
jbe
sub
inc
test
fcoml
fs
dec
inc
pusha
mov
jle
dec
test
in
mov
fadd
das
push
sbb
jbe
cmp
into
lods
gs
iret
mov
mov
mov
xchg
xor
loope
ds
sub
pop
shll
jmp
movsl
lods
pop
push
clc
jp
arpl
subb
xlat
lods
lods
fldl
rcrl
xor
or
movsb
dec
nop
inc
ret
shr
mov
lcall
sbb
inc
ljmp
xor
rorl
mov
std
enter
inc
lret
dec
adc
push
mov
dec
jb
sbb
and
jg
xlat
xchg
subps
test
mov
repz
scas
cmpsl
sbb
cld
push
out
pop
inc
das
xchg
cmp
js
insl
sar
insl
jne
lock
std
mov
push
jmp
jge
shll
rcll
sbb
insl
rorb
dec
cwtl
add
adc
push
sub
mov
push
pop
andb
mov
das
xchg
bound
pop
rcl
hlt
jmp
sbb
push
push
iret
mov
dec
jne
das
jle
out
push
call
add
cld
mov
fsubrs
jl
sub
enter
inc
ss
adc
jle
into
inc
pop
mov
adcb
sub
xchg
xor
adc
mov
imul
pop
pop
scas
dec
or
loopne
dec
loope
aad
movsl
xor
dec
add
nop
es
icebp
out
mov
je
jmp
xor
xor
adc
adc
xchg
rep
mov
add
leave
dec
fsts
call
sbb
repz
inc
faddl
xlat
in
aam
sbb
filds
lret
mov
adc
xor
fdivrs
dec
cmp
dec
cld
loop
loopne
adc
or
mov
and
fsubrs
inc
push
jecxz
sub
mov
iret
aaa
shl
push
rorl
sbb
test
jnp
push
inc
add
ljmp
sub
loope
dec
in
pop
stos
add
mov
jle
fcmovb
cmpsl
test
rdpmc
sbb
imul
jae
stos
sub
aad
push
jo
xchg
jbe
iret
int3
cmp
sub
addr16
sub
push
push
testl
push
add
inc
mov
sbb
insb
and
add
adc
xchg
or
gs
mov
inc
out
push
and
movswl
data16
sub
and
mov
in
push
mov
and
push
xchg
and
insl
push
aam
test
fmul
xor
push
fldenv
xchg
xor
pusha
mov
fnstsw
pop
fldenv
adcl
cmp
scas
out
inc
adc
dec
sub
cmp
xor
std
repnz
dec
mov
pop
xor
and
push
fcmove
mov
cmpsl
adc
test
in
jae
fdivrp
fsts
fwait
icebp
test
dec
call
jnp
test
out
loopne
stc
out
psrlq
xorb
push
adc
inc
mov
iret
pop
xchg
fs
pop
fsts
push
rorl
inc
dec
inc
inc
push
js
loope
xchg
or
xor
loope
mov
test
es
mov
inc
sarl
lods
int3
and
sbb
outsb
fistps
test
in
call
stos
fadds
xor
pop
sbb
push
movsb
lods
xchg
push
fstl
fcomp
addl
decb
mov
les
mov
push
imul
dec
outsb
lods
jo
test
test
sub
mov
fildll
pusha
cs
fsubrl
xchg
fmuls
movsb
xchg
xor
stos
push
aam
loope
sub
sbb
repz
nop
mov
sub
call
nop
and
xchg
pop
fdivrp
das
mov
gs
mov
dec
push
mov
mov
push
outsb
mov
adc
jp
inc
rorb
out
xor
shrb
xchg
nop
inc
je
mov
mov
and
xchg
fldl
adc
mov
mov
movsl
xor
lock
jbe
daa
cli
daa
and
jnp
imul
xchg
sub
mov
cmpsb
ja
cltd
jno
mov
lods
mov
popa
add
pop
add
sti
fidivrl
push
jmp
or
or
hlt
or
rcrw
adc
ret
dec
cmc
cli
fisttps
jae
mov
add
adc
or
dec
iret
or
pop
cmp
cltd
dec
adc
in
int
gs
jae
fistpll
scas
out
lret
into
cmpsl
je
sbb
ret
xchg
arpl
sbb
pop
mov
flds
xchg
sub
push
sbb
in
loope
adc
dec
call
sub
push
xchg
sub
or
sub
stos
fisttpl
add
jmp
cmp
stc
movb
push
inc
sub
push
xor
movsl
push
daa
dec
and
add
fisttpll
xchg
lea
mov
adc
push
outsb
es
loopne
leave
jecxz
mov
repnz
dec
dec
data16
jmp
adc
addr16
fmuls
pop
setae
jmp
and
dec
lds
shlb
dec
pushf
mov
out
pop
mov
in
push
jmp
enter
test
sub
inc
sbb
stos
xlat
cli
inc
inc
cmpb
pop
sbbb
xlat
out
arpl
cwtl
jns
aam
xor
jg
dec
mov
adc
frstor
sti
test
ljmp
sub
mov
jp
imul
sahf
mov
lcall
fxch
subl
aas
cmp
pop
jae
leave
ret
jae
loope
iret
push
kmovb
nop
shlb
push
addr16
inc
mov
negb
stos
out
rcrb
test
loopne
mov
ret
add
inc
lret
and
test
movsb
lods
cwtl
xchg
shl
stc
cli
adc
push
mov
and
movsl
jmp
adc
adcl
mov
jl
sub
inc
cwtl
pushf
dec
scas
mov
clc
jle
dec
or
sbb
fwait
mov
jae
addr16
add
pusha
mov
push
imul
shlb
ss
lods
adc
jge
out
mov
push
cmp
jle
inc
sti
adc
ss
and
jo
xor
loope
mov
sub
cmp
xor
lcall
push
and
cwtl
je
je
outsb
xor
inc
imul
jge
cmp
xchg
and
faddp
pushf
stc
jge
fcmove
test
xor
test
mov
mov
inc
mov
adc
mov
fcoml
sbb
insb
es
push
mov
cmp
mov
out
or
push
xor
xchg
inc
shll
mov
cli
push
test
add
push
testl
iret
sbb
aam
insb
rolb
mov
xchg
mov
stos
mov
test
add
dec
dec
fsubr
push
mov
jae
dec
sub
clc
orb
test
pop
aas
add
and
lods
pop
imul
xor
int3
les
pop
in
mov
into
xor
adc
test
push
lods
cmp
pop
add
mov
into
push
sub
jb
push
sub
cltd
mov
mov
clc
pop
pusha
cmpsl
adc
dec
mov
xor
sub
enter
mov
add
subb
adc
adc
add
pusha
lds
sbb
sbb
aas
sarl
cmpsb
jns
jno
jmp
sahf
nop
std
lea
rorl
js
dec
push
sbb
or
mov
xlat
adc
dec
das
lcall
stos
outsb
in
sahf
es
pop
push
in
mov
insb
xor
sarl
pop
fstp
sub
cmp
rclb
inc
xchg
adc
cmp
mov
fcomps
sub
out
jne
pop
cmpsb
jae
js
mov
inc
fsts
sbb
add
and
xchg
out
sbb
dec
pop
xor
mov
mov
jge
repnz
pop
imul
mov
mov
jge
adc
pop
popa
arpl
icebp
pop
ffreep
mov
add
rolb
testl
xchg
jmp
aaa
fstl
ds
cmpsb
and
mov
xor
sti
or
dec
lea
andb
std
sahf
sbb
fs
data16
or
es
insb
mov
push
push
imul
dec
xlat
stc
jp
xchg
lcall
inc
orl
pop
icebp
mov
ljmp
cmp
les
imul
shll
mov
push
outsl
adc
scas
adc
add
xor
xor
xor
and
mov
jp
jge
fildl
cmp
mov
mov
and
cmp
cltd
outsl
pop
in
lock
or
or
push
mov
jnp
imul
xchg
out
jae
or
or
xor
scas
sbb
jno
dec
inc
shl
or
stc
addr16
sub
or
push
fidivl
adc
mov
test
add
loope
dec
movsl
imul
jnp
gs
mov
mov
xchg
loop
push
pop
arpl
ljmp
mov
rclb
push
sti
mov
ja
xchg
fwait
pop
repnz
sti
sub
sbb
mov
repnz
cmp
push
test
dec
pop
shlb
fimull
popf
nop
ret
testl
dec
pop
fldt
insl
incl
xchg
xchg
xchg
add
sub
icebp
mov
jae
dec
pop
adc
pushf
push
cmp
xchg
mov
movq
dec
scas
xchg
popf
into
int
in
fisubrl
shrl
pop
nop
daa
pop
mov
daa
and
cmp
xor
scas
out
call
addb
fs
je
sarb
ds
pop
cmpsb
jne,pn
ret
sbb
or
xchg
add
icebp
sbb
xchg
loop
cmp
shrb
sbb
mov
xorl
popw
popf
je
mov
ficompl
cmp
mov
push
ficomps
jo
adc
fldt
mov
icebp
xor
popf
test
xor
dec
jb
and
aam
lret
addr16
icebp
addl
leave
inc
cmp
mov
pop
inc
push
movsb
imul
xchg
daa
mov
inc
fisttps
mov
ja
mov
cmp
mov
add
add
popa
inc
mov
sub
inc
add
or
xchg
das
popa
jns
pop
fwait
fwait
mov
out
pop
pop
test
test
mov
inc
xor
push
negl
movsl
addr16
mov
xchg
call
xlat
sub
dec
inc
push
out
iret
sub
sub
jmp
xchg
pop
push
mov
cwtl
mov
xchg
repz
mov
lcall
ror
insl
xor
pop
out
insb
jp
add
or
fnsave
leave
or
std
rolb
mov
pop
rorb
aaa
fiaddl
mov
mov
ret
dec
dec
leave
out
bound
sti
repnz
xor
push
push
nop
rcr
push
add
addr16
or
fdivs
xchg
sbb
sub
dec
orl
dec
jmp
inc
sbb
aad
or
jns
jb
and
test
pop
popf
xor
cmpps
and
popl
xchg
mulb
fidivs
cmp
lock
shl
dec
adc
dec
add
js
mull
mov
inc
mov
sbb
push
or
repz
add
cli
mov
ljmp
fwait
imul
mov
sub
mov
aaa
jne
jge
push
or
fwait
xchg
mov
jne
jle,pn
jmp
pushf
push
test
pop
out
lock
int3
loope
xor
iret
sub
cltd
sti
outsb
fsubs
mov
add
sub
cli
dec
cmp
imul
aaa
out
sbb
loope
pop
cmp
nop
xchg
jge
jbe
pop
imul
adcl
test
dec
mov
imul
pop
pop
pop
sub
lahf
adc
imul
mov
fcmovne
int
loopne
pop
ss
mov
fidivrl
sub
jno
or
test
push
mov
mov
mov
add
out
shll
push
or
sub
pop
scas
cld
lods
lret
mov
fprem1
and
inc
jno
lods
lods
or
hlt
imul
inc
int3
inc
mov
lahf
bound
jmp
data16
pushf
les
add
or
out
jg
push
or
sti
ljmp
aas
das
mov
jp
jae
cli
pop
mov
jbe
in
int
pop
sub
dec
jp
dec
mov
push
dec
xchg
xor
iret
fisubs
fcmovu
adc
out
mov
incb
mov
or
jle
mov
shll
mov
adc
sub
add
sub
addr16
mov
sbb
stos
push
test
dec
shlb
add
adc
push
cmp
lcall
sbb
es
xchg
movhps
xchg
flds
pushf
adc
push
mov
sub
ret
cld
dec
jge
clc
hlt
lret
hlt
fbld
nop
out
push
pop
cli
xchg
mov
sbb
iret
xor
mul
xor
icebp
mov
xchg
inc
add
inc
call
jecxz
mov
data16
out
adc
mov
lret
js
test
fldenv
xchg
stos
inc
stos
push
xchg
sbb
cld
out
add
bound
or
out
push
cmp
lahf
mov
xchg
sbb
sub
aas
mov
popf
mov
cltd
push
dec
push
fcoml
sbb
or
jnp
cmp
pop
mov
mov
dec
inc
jo
out
push
cmpsb
add
add
inc
loope
sbb
mov
jp
ja
rcll
adc
ret
fdivrp
jmp
cli
jmp
inc
xchg
mov
sahf
jle
daa
leave
aaa
into
test
mov
scas
add
nop
and
mov
sbbl
push
sub
lret
in
push
jo
dec
dec
push
ss
popa
cmpsb
stos
mov
dec
jo
fidivrs
pop
leave
adc
or
jmp
mov
mov
ja
cmp
sub
es
mov
mov
push
xchg
cmc
loopne
repz
mov
xchg
pusha
into
aam
sbb
xor
mov
xchg
scas
and
iret
es
clc
push
js
cmpsl
cmp
loop
lds
nop
int3
popa
inc
add
loope
aad
add
pop
addr16
xor
enter
jnp
mov
sahf
fisttps
in
sbb
jecxz
inc
xchg
das
cld
lods
nop
pusha
jmp
xchg
int
jne
pop
or
xchg
dec
jne
add
jl
shll
push
dec
push
test
stos
fwait
lcall
cmp
jae
scas
fsubrs
mov
cmpsl
cwtl
stos
mov
shrb
fwait
or
dec
adc
icebp
adc
iret
cmp
std
push
cmpsb
jno
pop
jle
lods
jbe
or
xchg
xor
cmpsb
stos
sub
or
cwtl
ljmp
movsl
ret
push
xor
packssdw
push
xchg
push
sbb
or
imul
add
fstpl
inc
gs
push
stos
imul
mov
mov
and
sbb
add
aam
sub
ret
outsl
in
jne
lock
xor
cmp
xchg
cmpsl
push
adc
flds
arpl
push
push
add
dec
sub
mov
jb
stos
in
ss
loopne
mov
push
xlat
cmp
jmp
lods
mov
mov
pusha
sub
cwtl
and
jp
fcmovbe
mov
popa
xor
das
jmp
js
je
sbb
xor
rorl
loope
andb
xor
push
and
xor
sbb
cmp
shll
inc
dec
jle
mov
popf
ljmp
fwait
lea
outsb
scas
loope
push
sub
cmpsb
mov
lock
pop
xchg
push
xor
mov
cmp
jne
sbb
rep
insb
ljmp
clc
daa
fyl2x
stc
and
xchg
sub
dec
mov
enter
stos
sahf
mov
aad
inc
mov
lods
dec
xor
sbb
scas
das
inc
jle
pop
dec
or
mov
dec
popa
mov
xlat
jns
or
lcall
mov
scas
leave
call
mov
inc
in
jae
ljmp
mov
push
jno
lret
aaa
stc
loop
push
loop
pop
or
in
jmp
lds
adc
xor
push
sub
into
cli
mov
sar
andl
testl
dec
ja
clc
mov
aaa
xchg
aas
outsl
pushf
movsb
push
loope
stos
lahf
scas
xchg
addb
jnp
jg
dec
mov
push
repz
scas
stc
xchg
dec
mov
adc
ss
and
mov
adc
or
sbb
mov
jo
pop
adc
out
ds
ret
aad
add
adc
inc
enter
mov
pop
test
out
xchg
stos
dec
test
shrb
cmp
popf
mov
in
dec
push
dec
mov
add
and
adc
das
mov
test
or
cmp
push
pop
dec
into
fs
fwait
inc
mov
adc
jno
out
fidivrs
adc
pop
dec
or
and
add
sbb
ja
push
cmc
add
hlt
andl
mov
mov
lcall
jnp
or
aam
test
dec
cmp
incb
les
test
sbb
mov
jmp
inc
shll
pop
sub
dec
lahf
push
leave
loop
adc
mov
cmp
bound
xor
scas
aam
dec
and
add
int
repnz
sub
dec
scas
stc
shrl
push
xorb
push
xor
mov
push
loopne
or
cmp
ret
push
sbb
inc
test
loop
das
xor
lret
idiv
and
mov
aas
mov
fcompl
jg
stos
pop
loop
cwtl
iret
cmp
je
stos
push
jnp
ss
pop
out
mov
mov
xor
cld
xor
test
sub
mov
setg
sub
inc
push
leave
call
inc
dec
push
bound
xor
xchg
scas
insl
arpl
scas
addr16
nop
popf
das
dec
dec
into
pop
hlt
ficoms
pop
sbb
fsts
cwtl
fs
jmp
push
sub
stos
int3
inc
fwait
mov
popa
lock
sahf
hlt
dec
ljmp
xchg
pop
jo
jl
dec
push
xchg
lret
mov
shrl
int
push
jmp
add
sub
or
ja
insb
xchg
and
test
mov
popa
pop
pop
sub
cmp
mov
fsts
xchg
sahf
push
roll
loop
pusha
js
dec
or
pop
dec
sub
cli
lods
enter
jno
inc
mov
outsl
mov
and
mov
dec
movsl
cmp
les
rcll
loop
lods
jo
mov
rclb
pusha
stc
cld
lods
push
je
adc
cmp
sbb
adc
test
and
nop
pop
insl
push
pusha
test
bound
ja
pop
add
and
mov
add
cli
mov
stos
es
hlt
sub
testl
mov
push
jb
pop
jg
lds
lea
cmpsb
inc
repz
arpl
cmpsb
sbbl
shl
ret
je
or
jecxz
mov
sub
pop
sbb
jae
xchg
xchg
aas
sub
sbb
cmc
adc
pop
dec
pusha
orb
out
leave
fcomi
adc
aad
dec
and
ficoms
iret
xchg
jne
sub
inc
shl
popf
stos
push
out
xchg
sub
xchg
or
pusha
sub
xchg
mov
adcb
rcl
insl
insb
pop
fadds
and
loope
cli
out
daa
cmc
scas
push
sub
mov
inc
jb
loop
push
sub
test
cmp
lock
cmp
xchg
pop
outsb
dec
sbb
and
sbb
xchg
insl
sub
les
loopne
ljmp
xchg
add
or
stos
ret
cmp
xor
xor
jbe
push
fnstcw
dec
or
mov
out
cltd
scas
add
push
fs
inc
mov
dec
push
xor
fisttpl
pop
and
push
sahf
xchg
rcrb
jno
push
jb
ret
stc
test
psllq
mull
jg
mov
xor
insl
lret
daa
loop
ficoms
shlb
cmp
jp
jbe
adc
xor
cmp
xor
and
icebp
int
cmp
inc
add
fucomi
test
and
mov
sbb
jg
loopne
fisubl
mov
or
fisttpll
loope
scas
rorb
inc
std
dec
pop
push
cmp
mov
adc
dec
je
fstl
lock
mov
orb
jmp
andps
stos
add
sbbl
cmp
jno
fimuls
scas
popaw
jl
cmp
or
les
scas
call
imulb
outsb
jo
rclb
js
mov
push
lret
push
lea
shlb
cld
cmpsb
mov
or
nop
jo
testb
inc
mov
mov
xor
dec
addr16
adc
in
push
ss
xorl
push
dec
adc
jno
cmp
and
or
movsb
dec
popa
outsl
push
movsb
sbb
stc
mov
mov
xlat
sti
into
cmp
or
xorb
ja
lods
gs
daa
sbb
add
icebp
sarb
pop
adc
sbb
outsl
cmp
pop
sub
dec
daa
icebp
ljmp
mov
lods
loope
ljmp
mov
xor
xor
xor
inc
loope
jbe
jp
lds
cmp
push
cmp
push
push
repz
sbb
push
xor
xchg
sbb
fdivr
mov
shll
daa
in
ss
sbb
mov
mov
push
xchg
aad
jge
pop
std
fsts
sbb
int3
rol
imulb
adc
test
inc
adc
decb
or
push
mov
outsl
test
ss
and
rolb
int
mov
stos
cmpsl
push
pushf
and
xchg
or
outsl
mov
gs
test
data16
repz
xor
ret
mov
imul
cmp
push
mov
pop
push
dec
mov
gs
jo
push
imull
insl
adc
pushf
outsb
mov
push
hlt
std
inc
les
xchg
outsl
sub
dec
mov
lahf
xor
pop
int3
mov
dec
int
cmp
ret
mov
les
test
mov
mov
loope
inc
jne
jge
test
mov
iret
fwait
or
push
mov
lods
lea
mov
mov
sbb
rcll
scas
jmp
ret
xchg
stos
and
fucomi
or
jno
jmp
mov
pop
gs
aam
adc
cmp
lods
in
in
subb
mov
sbb
ret
gs
repnz
or
adc
out
add
xchg
fldenv
test
sub
mov
in
pop
movsl
sub
out
lods
pop
pop
leave
jge
dec
jle
jp
xor
leave
xchg
sbb
rorl
aam
push
xchg
push
cmp
xor
dec
lcall
das
sbb
dec
or
sbb
test
mov
xlat
jns
ss
add
ret
xor
mov
and
in
sbb
jae
in
cs
push
jo
dec
test
and
sub
popa
ja
test
mov
push
pop
jge
testb
js
movsb
or
add
or
mov
dec
jno
pop
jge
dec
jne
test
cld
aaa
aaa
lods
sub
jb
int
mov
stc
jo
outsb
ja
sbb
mov
mov
vmwrite
fidivl
xor
mov
pushf
loopne
jle
mov
xchg
repnz
pop
mov
addb
jne
aad
xor
sub
scas
int
pop
leave
fbstp
xchg
cmpsb
in
stc
inc
sbb
mov
lret
dec
adc
cmpsb
add
lcall
lea
jg
incl
test
xlat
aaa
add
scas
fdivrs
incb
insl
push
fptan
push
cmc
jge
and
testb
inc
std
add
push
stc
xchg
jle
call
cmc
mov
lcall
lods
out
in
pushf
pop
mov
mov
push
call
adc
ficoml
dec
and
mov
xlat
xor
pushf
pop
lea
jno
lods
xor
sub
loop
cmp
int3
mov
mov
and
sarb
ljmp
or
pop
push
pop
push
sub
and
inc
push
push
mov
adc
int
and
ljmp
fistpll
mov
loope
ljmp
jno
and
xorl
cltd
xor
or
xor
xchg
mov
xorb
or
sahf
fiadds
mov
sbb
push
pop
int
dec
sarb
loope
xchg
cmp
lds
ja
cli
sub
negb
imul
fwait
hlt
scas
pop
pop
mov
and
test
rorb
or
or
xchg
add
addr16
imul
or
test
pop
jp
push
pop
cmpsb
cmpsl
adc
adc
mov
inc
aad
and
push
jg
xchg
sti
idivl
je
xor
push
aam
lahf
mov
xchg
das
xlat
das
mov
scas
add
out
mov
xor
popf
push
xor
fstl
mov
test
iret
sahf
int
ficoml
fmul
cmpsl
push
dec
call
mov
and
sub
add
loop
nop
xchg
sub
dec
cmp
insb
out
daa
insl
jno
inc
mov
cwtl
xchg
es
xchg
stc
rolb
sub
lcall
aam
sub
jecxz
arpl
add
adc
pop
mov
stos
add
or
movsl
cmpsl
inc
cmc
mov
pop
enter
cs
pop
mov
dec
popa
sbb
mov
test
and
jne
dec
dec
fsubl
pop
ficompl
mov
inc
cmpsb
outsb
xor
sub
es
jae
rep
jg
xchg
ret
int
push
pop
imul
jbe
or
shlb
or
mov
pop
pop
sub
sub
jle
dec
mov
sahf
outsb
jle
mov
out
jmp
mov
mov
xchg
add
mov
xor
rol
dec
xchg
xor
gs
mov
mov
dec
xor
xor
pop
mov
and
dec
and
mov
push
aam
rcll
lret
iret
pop
xchg
mov
and
shrl
ja
int3
jne
ss
loop
lock
mov
popa
push
imul
fwait
mov
mov
in
into
push
stc
sbb
imul
mov
rorl
xchg
adc
xor
je
pop
mov
lret
pusha
ss
nop
adc
es
add
inc
les
or
push
iret
test
popf
testl
dec
das
data16
insl
mov
jle
in
lret
neg
cmpsb
xor
dec
push
mov
push
push
inc
insb
cmpsb
gs
bound
xchg
lds
aas
add
push
stc
std
std
mov
enter
xor
mov
shll
clc
je
or
push
test
fimuls
sarb
dec
ret
mov
in
jle
rcrl
rcll
jnp
inc
insb
jae
sub
inc
aad
xchg
push
leave
push
iret
sub
aas
mov
rolb
ss
xor
jg
pop
repnz
cmp
test
jmp
enter
push
aam
push
push
push
mov
mov
sub
repnz
into
sbb
pushf
jnp
mov
or
addr16
jne
jg
inc
xor
add
fildll
shlb
sarb
loope
out
sub
in
mov
arpl
adc
rolb
in
cmpl
pop
xor
cmp
ret
push
add
add
int3
mov
dec
sti
jns
mov
fbld
lret
cli
into
lea
cltd
shrb
fdivrp
jecxz
cmp
fiaddl
std
dec
negl
pop
shlb
lea
arpl
ljmp
mov
pop
cmp
insb
cmp
pusha
push
push
mov
lret
or
pop
rcrb
cmp
mov
popl
icebp
test
cld
jns
cmp
clc
add
sub
fistpll
xor
fdivs
test
sbb
ja
out
into
mov
fwait
cmpl
imul
inc
mov
mov
cmpl
icebp
dec
inc
mov
xlat
xchg
and
cmp
pop
jg
cmp
scas
adc
lock
cmp
insb
fwait
jnp
push
cmp
sub
lcall
jl
pop
and
repz
aam
mov
pop
mov
fwait
xchg
cmp
bound
dec
pushf
xchg
cmpsl
sti
or
mov
insl
fstl
movsb
decb
pop
mov
iret
dec
pop
sarb
push
and
inc
mov
add
or
push
pop
enter
lods
lcall
pop
dec
and
daa
mov
push
cmp
pop
xor
xchg
ret
xor
popf
mov
mov
popf
xchg
fists
and
fisttps
loope
mov
repz
adc
pop
adc
and
sub
int
sarb
lret
lret
ss
mov
ret
imul
imulb
loope
movsb
pop
xchg
es
sbb
jl
decl
loopne
ret
cmp
rclb
out
inc
dec
clc
iret
pushf
adc
sbb
dec
scas
sub
pop
fildll
movsl
xlat
cltd
xchg
xchg
pop
mov
je
scas
inc
and
xorb
sub
arpl
in
mov
pop
js
jle
inc
std
jp
mov
mov
in
mov
iret
pop
mov
pop
mov
daa
lea
inc
jnp
jne
and
insb
or
cmp
jmp
mov
mov
test
xchg
push
xchg
xor
idivl
jo
pusha
mov
fldl
dec
rcrl
sbb
sub
jl
jle
xor
nop
stos
jmp
push
cli
out
fwait
sub
mov
add
loopne
adc
mov
scas
add
adc
jmp
mov
cmp
call
iret
mov
xchg
pusha
data16
jle
cld
rclb
add
add
outsl
fwait
adc
jno
cmpsb
scas
sub
lods
pop
popa
sbb
mov
jp
ljmp
adc
mov
push
or
movsb
fstpl
dec
add
loop
dec
std
subl
adcb
mov
inc
aam
fistps
pop
jae
out
inc
imul
sbb
inc
stc
nop
push
insl
les
mov
int
jle
cltd
insb
flds
and
push
cltd
in
mov
xchg
aam
jnp
mov
inc
adc
push
mov
inc
sar
out
add
dec
sbb
xchg
add
xchg
inc
stos
cltd
test
decl
xor
mov
mov
cmp
mov
cli
xlat
rcll
or
jecxz
cmpsb
dec
inc
mov
fstpl
jecxz
xchg
xor
mov
je
jb
mov
and
scas
and
sbb
sub
nop
cmp
adc
pop
ljmp
mov
pop
leave
xchg
push
inc
sub
push
add
xor
movsl
dec
pop
or
mov
ja
mov
xchg
pusha
icebp
repnz
pop
icebp
jecxz
sarl
xor
aam
dec
test
scas
sbb
dec
repnz
pop
and
mov
jle
jge
dec
adc
pop
fsubs
iret
inc
cmpsl
xor
and
clc
lods
xchg
jb
mov
dec
bound
add
mov
fists
ud2
loope
sbb
jle
je
movsb
push
into
add
call
xchg
dec
adc
xor
add
fs
stc
hlt
jbe
shrb
or
inc
aaa
jns
test
fs
xor
repz
cmp
inc
adc
add
call
inc
popa
cltd
pop
cmp
iret
xchg
lcall
test
inc
inc
mov
sbb
stos
mov
lock
mov
test
js
mov
cmp
or
je
pop
fisttps
pop
xchg
hlt
mov
imul
cltd
test
test
rol
ss
dec
es
xchg
pop
pop
pop
ret
adcl
jecxz
mov
imul
out
dec
adc
adc
cmp
lods
aad
pop
lods
mov
push
xlat
push
sbb
xor
jne
movsb
xchg
repnz
das
test
lds
mov
clc
aam
je
vpcmpgtb
arpl
mov
divb
or
and
orl
loope
stos
cmp
sub
nop
push
test
and
jp
js
outsb
repz
iret
mov
xchg
adc
jae,pn
in
push
sarl
add
lea
and
sbb
or
xor
mov
call
ret
stos
mov
fcmovne
les
fnstenv
fcomi
ret
dec
jns
inc
mov
jno
popa
cli
rolb
out
fbld
clc
fcoml
je
das
addb
inc
cwtl
jns
dec
cmpsl
bnd
mov
aam
gs
jp
icebp
inc
and
or
sub
sbb
xchg
push
mov
inc
jbe
ss
jmp
pop
inc
sarl
jmp
or
in
adc
sub
mov
xlat
clc
dec
inc
mov
mov
dec
cmp
data16
mov
pop
bound
sahf
adc
jmp
nop
pop
dec
shr
daa
lock
or
icebp
sbb
movsl
cmpsb
cltd
and
and
add
adc
imul
mov
push
pushf
daa
test
dec
xor
inc
nop
imul
sbb
insb
adc
jge
xchg
or
push
or
jns
fcomps
jge
jle
pushf
adc
mov
leave
xchg
enter
add
xchg
in
cmc
sub
jmp
xor
inc
xor
cmc
and
js
movsl
add
add
fs
int
xchg
xchg
cmpsb
mov
mov
aaa
xchg
movsb
xchg
popf
mov
aaa
rclb
ja
mov
xor
aam
jo
add
pop
shll
adc
pushf
xor
add
repnz
ljmp
mov
cmp
pop
ret
out
mov
cmp
mov
or
mov
int
sub
jp
xchg
and
test
fcompl
add
aaa
jecxz
pop
mov
adcb
nop
xor
les
xchg
pop
test
mov
incb
jmp
jo
dec
pop
mov
loope
xor
or
icebp
add
fnstenv
in
cld
arpl
xor
inc
jge
sti
adc
dec
add
ret
cmp
and
adc
ljmp
jae
xlat
or
fwait
jbe
sbb
lods
inc
push
andl
mov
xor
ret
ljmp
data16
xorb
jge
adc
adc
les
push
pushf
icebp
push
xchg
mov
addr16
lock
cmpsl
inc
jb
lods
or
and
jmp
mov
hlt
icebp
mov
and
scas
subl
outsb
xchg
mov
mov
aaa
daa
into
arpl
insl
in
inc
pop
adc
in
rol
sbb
and
or
in
idivb
add
lcall
pop
inc
add
add
gs
xchg
and
cmp
popf
jl
lock
mov
test
test
xchg
adc
or
movsl
dec
out
push
call
pop
negb
add
push
dec
ds
inc
popf
jmp
pop
jg
pop
pop
movq
fs
je
jge
icebp
dec
cli
stc
mov
orl
mov
mov
out
mov
loope
hlt
xor
pop
or
inc
mov
jecxz
aas
push
jnp
insb
mov
shrb
dec
lret
adc
cmc
pop
sub
xor
sbb
insb
or
movsl
adc
dec
dec
cmp
hlt
subl
mov
cvtps2pd
jecxz
cs
mov
stos
subb
mov
cmp
in
adcb
jg
loopne
js
shlb
dec
mov
fld
pop
arpl
aaa
jae
inc
or
out
lods
sbb
and
xchg
pop
pusha
aas
sbb
lret
inc
dec
mov
scas
fs
jecxz
repnz
in
fwait
std
outsl
jle
xor
fadd
jmp
cmp
add
in
push
insl
fidivs
jle
jg
adc
movsb
je
pop
mov
pushf
push
jmp
out
xchg
in
shr
ljmp
es
pushf
mov
cltd
test
sub
jae
bound
add
cs
dec
insl
outsb
cmp
mov
and
ljmp
sub
out
fdivl
jl
fcomps
fcomi
cmp
out
ficoml
iret
mov
cwtl
add
jge
jecxz
cmp
repz
inc
movl
ljmp
scas
push
push
or
or
testl
xor
push
sub
icebp
shrl
int
stos
pop
movsb
mov
cmp
test
xor
inc
push
aam
fcomip
push
and
lret
or
bound
in
cmpsb
adc
or
lds
adcb
aas
or
mov
outsb
lds
cmp
icebp
rcrb
mov
cmp
dec
repnz
pusha
cld
add
cld
inc
fucomi
mov
test
add
adc
push
add
pop
pop
scas
add
push
pop
test
pop
enter
add
mov
jno
add
pop
inc
jne
out
xlat
xor
xchg
ret
sbb
mov
sub
inc
scas
scas
pop
and
call
mov
mov
push
push
icebp
mov
clc
mov
xchg
pusha
aaa
icebp
pop
sti
loop
ds
ret
subl
stos
jl
pusha
leave
jmp
or
clc
fwait
or
les
shlb
and
mov
mov
jo
mov
fidivrs
sbb
xorb
call
sub
mov
cmpsb
test
mov
pop
pop
or
stos
out
fstpl
pop
out
in
sub
cmp
negb
mov
push
mov
orl
push
test
sub
fisubl
jge
ss
popa
mov
cltd
mov
push
or
jbe
mov
rcrb
ret
lods
pop
dec
popa
jg
or
adc
mov
notl
repz
xchg
pop
push
adc
in
dec
ficoml
mov
out
aam
pop
lock
adc
inc
out
sub
cmpsl
cmp
inc
rclb
ficompl
sub
mov
mov
cmp
lock
xchg
ret
add
dec
xlat
jmp
inc
inc
mov
les
mov
dec
push
lcall
fsubrl
or
push
in
mov
sbb
aaa
mov
mov
rolb
push
aaa
pop
outsl
cli
and
scas
aad
push
in
std
ret
push
mov
sub
cmpsl
push
sub
sahf
shl
divb
pushf
sbb
and
insb
jg
aas
fwait
sahf
outsl
mov
jns
pop
xor
or
lret
inc
add
or
popa
stos
cld
repz
fiaddl
mov
sti
mov
cmpsb
jmp
and
cmp
pop
sahf
imul
add
xchg
pop
mov
test
push
sbbl
leave
test
jne
fsubrl
cmc
iret
insb
xor
cs
add
bsf
inc
ret
sub
mov
and
add
pushf
xchg
inc
inc
pop
sub
pop
fsubl
aad
cmc
in
adc
pop
mov
and
iret
jo
xor
jae
jo
push
pop
loopne
jl
aad
push
cld
mov
cli
add
pop
test
push
inc
or
cs
mov
adc
bound
sbb
mov
rcrb
push
xchg
mov
andl
ljmp
loop
inc
mov
and
in
aas
push
xor
push
mov
popf
icebp
sub
lods
cmpsl
test
pop
rorb
mov
inc
hlt
mov
das
stos
mov
popf
jbe
nop
or
mov
inc
loopw
les
data16
cmpsl
pop
cmp
sti
cld
fdivs
mov
mov
int
loope
push
dec
push
jmp
mov
es
in
sbb
jb
mov
gs
repz
ljmp
je
sub
outsb
sub
and
cmpsl
dec
cmp
inc
jbe
aam
int3
xor
out
mov
adc
add
out
inc
push
and
dec
dec
push
mov
xor
rep
rcr
fwait
sahf
and
xchg
dec
rcr
pop
push
outsb
ljmp
or
ljmp
scas
push
stos
push
dec
jns
aam
mov
cmp
sbb
cmc
out
fbld
sbb
incb
dec
inc
fildl
adc
push
inc
xor
es
mov
stc
sbb
jno
daa
and
xor
sbb
lcall
cmp
ds
fld
dec
insb
ja
sub
dec
adc
adc
fadd
cltd
repz
add
subl
dec
sub
loop
loop
data16
cld
mov
jmp
aas
insl
mov
outsl
aas
or
outsb
mov
push
dec
mov
mov
lods
mov
in
inc
xlat
lods
jne
in
jae
jl
xchg
iret
jo
insb
push
mov
jge
jns
and
sbb
pushl
cwtl
xor
data16
mov
push
addb
jecxz
xchg
daa
or
adc
test
fwait
orb
dec
dec
add
xor
mov
xor
or
movsl
hlt
dec
movsb
sbb
loope
repnz
int
add
incb
push
data16
out
sbb
ret
sbb
cmp
clc
add
pop
lahf
testb
negl
ss
cmp
mov
cmp
jp
daa
dec
lahf
aas
repnz
ret
or
mov
loop
inc
lret
lret
mov
stos
mov
popa
into
dec
inc
cs
lret
inc
insl
xchg
fnstcw
lret
imul
lock
mov
les
adc
adc
adc
mov
sbb
adc
fcoms
adc
scas
jmp
xchg
subb
call
pop
int
ret
inc
rorl
push
lret
cmp
cmp
arpl
add
mov
or
leave
dec
aaa
mov
add
add
mov
outsl
mov
in
adc
fbld
lcall
repz
insl
xor
dec
mov
jnp
popf
testl
mov
push
nop
lea
in
addr16
and
stc
jle
push
mov
sbb
daa
add
outsl
movsl
cmp
shll
insb
sbb
fisubl
or
js
stos
xchg
std
pusha
xor
loope
popf
icebp
xor
sub
scas
hlt
in
pushf
dec
fsts
cmp
xchg
jmp
mov
mov
xor
ret
dec
daa
xchg
out
adc
push
or
pop
mov
or
sbb
push
sbb
sub
jb
push
outsb
ljmp
imul
stos
cwtl
push
sbb
or
pop
and
das
fdivrl
lock
cmp
int3
pop
jae
je
push
loopne
aad
and
hlt
inc
pop
jo
mov
fisubrs
roll
inc
pop
aad
stos
and
mov
push
jle
sahf
cmp
sub
je
jb
mov
mov
arpl
pop
in
dec
adc
hlt
or
push
repz
adc
outsl
dec
jmp
adc
pop
ljmp
cmp
add
pop
stos
je
xlat
mov
push
cmp
push
dec
jle
sub
aad
fsub
sub
push
add
aam
stos
je
jnp
out
push
and
or
dec
repz
xchg
adc
inc
cld
xchg
out
mov
push
bound
mov
or
lds
imul
pop
loop
in
fs
fsubrs
or
subl
lretw
daa
ljmp
sub
das
andl
test
push
pushf
pushf
add
inc
lcall
and
rol
or
or
or
xchg
pop
inc
lods
mov
xor
data16
mov
xchg
pop
test
mov
bnd
push
in
bnd
imul
insl
jb
clc
mov
mov
scas
inc
pusha
xor
mov
xchg
in
ljmp
pop
ret
fdivrl
fs
sub
leave
test
cmp
xlat
adc
loopne
out
sub
test
cmp
mov
push
das
mov
dec
sub
and
fstl
jge
push
into
adc
xlat
jo
mov
js
add
push
mov
inc
mov
jge
add
mov
xor
out
inc
rorl
sbb
arpl
xor
inc
jmp
xlat
int3
lods
ret
imul
add
lcall
xchg
jge
adc
xchg
test
sub
mov
sbb
push
adc
cwtl
jbe
into
ret
inc
add
mov
mov
popf
aam
mov
adc
sub
and
cmp
mov
data16
and
jg
loopne
dec
adc
cmc
and
fwait
add
sarl
dec
dec
movsb
push
inc
std
push
rcll
iret
cmp
mov
nop
mov
ja
mov
push
jae
mov
inc
pop
cmpsl
mov
adc
or
dec
or
mov
mov
mov
sti
dec
mov
fnsave
fidivrl
dec
stc
mov
bound
loopne
mov
sub
adc
push
pop
add
mov
stc
test
add
das
das
inc
lods
xor
test
inc
je
xchg
loop
xlat
or
and
sarl
mov
add
pop
dec
or
or
cli
mov
nop
aaa
and
mov
in
movsb
sbb
sub
andl
jne,pn
and
mov
dec
dec
jmp
inc
push
es
pop
push
mov
cmp
lret
push
pop
jbe
jmp
jnp
ljmp
mov
add
and
xorl
mov
and
push
xor
aaa
pop
test
mov
repnz
int3
sub
nop
in
lods
adc
cmpsl
test
lock
inc
push
add
imul
shll
jo
mov
imul
pop
jge
je
data16
icebp
jne
xor
sub
pop
cmpsb
int3
sbb
mov
sbb
push
mov
lahf
dec
xor
scas
push
dec
mov
test
pop
push
ret
aaa
push
je
mov
outsb
pop
nop
mov
cmc
int3
push
outsl
popf
jmp
fmulp
dec
inc
cmc
pop
xchg
insb
mov
rolb
push
dec
and
cs
cwtl
lds
in
int3
push
inc
test
mov
adc
push
push
mov
mov
cs
test
movsl
adc
jp
xchg
cs
jmp
xchg
mov
addb
popa
mov
mov
and
jge
lods
loope
lahf
xor
int3
cwtl
imul
sahf
add
ret
cltd
nop
cmp
push
mov
and
sbb
aad
shl
icebp
icebp
fsubl
mov
lock
jmp
stc
xchg
bound
sbb
gs
arpl
dec
sbb
push
mov
mov
int
inc
divl
dec
add
lods
cmpsb
sbb
xor
push
ja
inc
jno
xchg
aam
in
and
mov
cmp
fwait
jnp
pop
cmp
rclb
sahf
sahf
mov
repz
xor
sub
add
cmp
int
loop
fsts
inc
stc
xchg
iret
mov
cmp
insl
push
push
shlb
imul
out
push
stc
sub
ja
mov
in
outsb
aad
pop
ret
aam
out
movsl
pop
adc
mov
enter
dec
add
sbb
or
mov
ljmp
popf
dec
sub
lahf
imul
push
xchg
aad
sbb
inc
sbb
out
shrb
mov
jo
lcall
push
and
mov
mov
scas
jno
pushf
scas
inc
fisubrs
xchg
rcrl
lret
cmp
stos
push
out
mov
out
jmp
mov
fidivrl
lcall
outsb
fucomp
sbb
lret
or
jns
aas
or
lea
adc
cmp
mov
xchg
xorb
dec
adc
and
jmp
mov
xchg
mov
js
adc
clc
mov
fcmove
out
xor
mov
dec
inc
and
jno
rcll
push
sahf
mov
jns
shll
cmp
enter
lock
mov
fistl
xor
inc
xor
and
sar
xor
hlt
sub
cltd
lret
out
push
mov
loope
xchg
pop
push
dec
testl
inc
jnp
adc
fstpl
add
arpl
xchg
rclb
or
fsts
fidivrs
mov
mov
test
xchg
lret
js
mov
cs
shl
pop
xchg
aas
imul
ss
fstl
xor
in
sub
pusha
shll
sub
and
mov
pop
lods
fld
mov
scas
xchg
rolb
in
bound
cmp
sbb
popa
adc
mov
sub
icebp
xchg
inc
xlat
jmp
pop
sbbb
mov
sub
aam
mov
xchg
mov
jp
inc
sub
mov
xchg
pusha
jg
adc
cmp
negb
jmp
and
push
jge
shrl
push
sahf
fs
in
aam
lea
xchg
xchg
push
push
add
enter
dec
ret
add
adc
ljmp
movsb
or
pushf
jg
mov
push
jnp
stos
xchg
cmp
test
jg
int
ret
mov
xchg
sbb
mov
or
push
inc
jbe
sbb
and
mov
mov
pop
inc
inc
jp
push
and
push
dec
out
pop
mov
dec
lock
fidivs
adc
jge
mov
mov
mov
cwtl
mov
test
sub
or
adc
xchg
mov
arpl
adc
aas
xor
and
pop
iret
mov
ljmp
dec
pop
arpl
daa
fldt
out
std
call
int3
add
movsb
cmpsl
and
cltd
cmpsb
out
sbb
inc
fsubrs
cmp
mov
adc
dec
xlat
gs
and
popf
shrb
pop
mov
adc
mov
push
jge,pt
out
jb
or
mov
es
aaa
jbe
xor
ja
imul
cmp
ja
lock
pop
jg
fiadds
push
inc
call
cmp
pop
sbb
push
es
or
js
mov
add
xor
in
hlt
jne
push
jb
gs
imul
jbe
loop
clc
jmp
das
inc
push
xchg
cmpsl
arpl
sbb
nop
dec
flds
cli
fucom
add
mov
jp
or
addb
jb
push
pop
or
shlb
std
pusha
cmp
jns,pt
pop
in
mov
sub
icebp
xchg
jmp
cltd
pop
xchg
and
mov
cli
xchg
jbe
dec
int
or
jo
push
loop
xor
push
xchg
icebp
add
rolb
daa
and
movsl
push
aas
les
push
icebp
pop
out
and
lock
lcall
and
add
jmp
xchg
out
andl
dec
andl
icebp
or
fcmove
push
in
sahf
decb
mov
sti
or
mov
adc
out
fisubrs
lods
xor
into
in
outsb
or
movsb
jbe
xchg
jecxz
push
insl
pop
add
pushw
pushf
push
nop
lret
mov
pop
pop
sub
xor
jp
into
sub
sbb
mov
scas
gs
add
push
aam
ja
mov
add
pusha
icebp
mov
pop
ja
call
loopne
bound
or
imul
inc
jp
scas
ja
xchg
fcoml
ret
addr16
mov
sbb
or
aam
push
cltd
cmpsl
xor
xor
pop
in
movsb
cmp
push
xor
out
xchg
out
mov
jle
ret
push
push
push
inc
cs
inc
xchg
sub
sbb
lret
imul
push
adc
xchg
jae
je
mov
lret
test
insl
imul
int
decb
loop
arpl
lcall
sbb
jle
aaa
divl
add
and
jno
int
inc
sahf
popa
std
cmpb
jg
ds
mov
out
push
adc
mov
mull
lods
scas
cmp
or
jb
gs
sub
test
or
push
lahf
mov
or
inc
rorb
pop
adc
sub
mov
mov
fst
xchg
outsl
out
in
repz
ds
pop
adc
cmp
inc
jae
decl
xlat
cmpsl
test
and
shr
cmpl
emms
repnz
outsl
mov
jns
cli
lret
popf
setne
loope
sbb
push
adc
dec
push
mov
clc
mov
ja
dec
adc
pop
mov
iret
xor
push
pop
sbb
pop
push
sarb
cwtl
arpl
in
add
ret
fidivl
add
repnz
ret
shrl
frstor
lret
pusha
xor
mov
pop
add
mov
xor
icebp
mov
dec
mov
aaa
pop
pop
gs
xor
in
jnp
adc
mov
mov
sbb
mov
mov
mov
lea
or
aam
or
push
sbb
jne
jmp
jnp
movb
cmpsb
rol
mov
arpl
pushf
and
jnp
and
and
dec
and
mov
outsl
and
sbb
nop
mov
mov
xchg
arpl
inc
ja
fucom
xor
pusha
and
mov
xchg
push
mov
push
repz
in
std
jg
adcb
rcrl
jp
inc
and
mov
adc
fucomip
jo
cmp
jnp
aas
aaa
xchg
xor
pop
cwtl
into
daa
fldenv
fidivrs
xchg
push
stc
loope
dec
sub
jp
popa
dec
mov
jnp
jbe
pusha
push
out
and
lcall
dec
jmp
sahf
sahf
sub
subb
adcb
xchg
aad
cmpsb
pop
xor
push
fdivrl
stos
pop
sub
stc
mov
push
add
sub
pop
jecxz
je
lret
aad
mov
test
or
je
xchg
cmp
leave
mov
sbb
adc
lret
mov
sbb
dec
loopne
sahf
inc
xor
rorb
mov
leave
and
adcl
add
test
mov
aaa
hlt
mov
xchg
cli
pop
mov
sub
js
ljmp
xchg
int
ja
in
daa
push
mov
pop
adc
jge
scas
mov
or
sbb
mov
rcl
push
stos
cmp
sbb
xor
xor
adc
lock
stc
cmp
inc
xor
pusha
push
push
insw
adcb
jne
add
mov
imulb
rcll
sbb
jno
imul
std
loopne
ficompl
pop
es
loope
adc
mov
inc
add
rcl
xor
repz
dec
out
inc
jle
xchg
mov
mov
sub
std
movsb
icebp
jnp
testl
sbb
xchg
imul
je
negl
cmpsl
push
lds
mov
mov
repnz
mov
dec
in
sete
int
jns
mov
pop
gs
int
mov
pop
clc
add
xor
adc
or
and
pop
or
or
push
or
ficomps
in
cmp
es
cmp
testb
adc
jns
shlb
les
fsubl
in
aaa
ljmp
adc
add
xchg
adc
jp
mov
inc
in
lret
loope
lret
in
sbb
fisubrl
std
enter
inc
sbb
shrl
shrb
or
cmp
lds
mov
add
inc
push
ss
xchg
or
jnp
jp
push
mov
inc
inc
adcb
cmp
adc
and
jo
fs
mov
addr16
lret
inc
test
push
cmp
call
mov
pop
xsetbv
loop
mov
adc
lcall
xor
cli
into
jecxz
sbb
jns
mov
mov
mov
lods
enter
push
xor
or
addr16
xchg
inc
enter
aas
jmp
fs
jl
jo
inc
dec
lcall
out
out
cmp
sahf
adc
addl
rcr
leave
cmp
pop
pop
or
mov
inc
es
xor
loop
cmpb
cld
outsl
mov
jmp
or
jns
jge
xchg
dec
xor
inc
outsl
push
and
xor
xchg
pop
pusha
dec
aas
mov
data16
and
adcl
pop
xor
jnp
fidivrs
cwtl
sbbl
xchg
fdivr
hlt
int
sahf
nop
mov
pushf
sbb
cmc
lods
les
sub
cmc
fisubrs
mov
lahf
inc
mov
cmp
repnz
push
mov
mov
mov
or
or
xchg
pop
push
mov
xchg
iret
add
jnp
or
dec
mov
pop
shll
mov
inc
add
cmp
dec
lods
scas
dec
imul
inc
xchg
add
adc
jp
ret
stc
pop
ret
mov
sbb
jle
out
push
sbb
xlat
fwait
nop
sbb
push
cmpsb
cmp
xor
push
xchg
add
sub
outsb
xor
adc
inc
nop
rorb
xchg
sbb
sbb
jb
out
or
jo
pop
call
pop
inc
jns
mov
adc
movb
jne
mov
or
jb
dec
pop
mov
jae
lcall
je
stc
pop
sti
xor
add
and
fs
jl
mov
fcomps
sbb
fiaddl
clc
mov
xchg
idivl
fsubl
scas
xor
xchg
jbe
pop
mov
dec
xor
imul
add
shrl
sub
pop
mov
out
rclb
clc
mov
xchg
loopne
add
stc
pop
adc
arpl
iret
enter
cmp
dec
loop
push
push
pop
jo
outsl
xor
clc
ficoml
nop
pushf
dec
test
test
cmpsl
jb
aad
dec
outsl
push
xchg
scas
rolb
sub
ret
sub
stc
push
xchg
inc
in
insl
pusha
mov
add
insb
pop
aas
imul
add
mov
ljmp
nop
push
pop
xchg
and
and
inc
mov
add
cmp
jo
or
movb
xchg
dec
xor
stos
ljmp
iret
insl
stos
fiaddl
lods
cmp
and
push
lds
mov
mov
lods
jl
faddl
pop
jbe
or
jle
push
sahf
jne
xor
pop
fsubrs
movsl
sahf
test
push
and
out
in
fs
outsl
cltd
and
lahf
dec
push
add
push
cmp
push
lret
jp
inc
decl
std
mov
push
leave
mov
sub
bound
pop
inc
mov
xchg
fldt
fidivl
xor
aad
cmp
add
pop
mov
ret
insb
sti
mov
jne
movsb
cltd
mov
sbb
lret
push
aaa
mov
sbbl
push
lret
mov
out
lcall
mov
clc
add
sbb
test
push
mov
push
loop
fistps
mov
fiaddl
dec
lock
sarl
insl
sbb
ret
test
in
loop
xchg
jo
sbb
mov
sti
cmp
jns
mov
inc
popa
inc
adc
mov
lret
lahf
test
mov
dec
jg
push
test
xchg
pushf
in
adc
and
out
rep
fs
test
mov
ss
mov
shll
push
inc
jnp
xor
shlb
mov
lahf
popa
fisttpl
jl
mov
mov
sub
faddl
mov
mov
or
aam
movsb
mov
enter
pop
inc
out
nop
mov
cmp
sti
jo
gs
xchg
pop
call
scas
push
adc
dec
loopne
loopne
pop
cmp
scas
jb
movsl
cltd
xchg
lret
fisubrl
cmp
add
jae
imul
int
out
std
pop
out
jge
inc
mov
mov
lock
jle
cmpsl
dec
add
push
fldt
lods
pop
into
cmp
cmc
jp
push
imul
mov
popf
rclb
daa
fdiv
jbe
int
roll
mov
andb
pop
imull
lds
xchg
or
xor
jns
pop
movsl
jp
call
frstor
int
add
cld
jo
iret
jbe
shlb
fnstcw
xor
push
add
decb
js
jb
movsb
mov
jg
rcrl
shll
mov
jns
sbb
cmp
pop
std
call
sub
pop
ja
ret
lret
repnz
lcall
jg
adc
and
popa
das
enter
insb
int3
icebp
xor
xchg
push
orl
scas
inc
push
push
adc
fdivs
sbb
lock
pop
mov
adc
sbb
icebp
into
and
insb
mov
jge
pusha
js
lock
outsl
lods
or
shlb
ret
push
bound
and
add
iret
mov
nop
in
sbb
test
xchg
outsl
pop
mov
xor
hlt
sub
sub
je
mov
aaa
stos
and
jbe
inc
je
call
lret
mov
adc
push
push
stos
pushl
lret
scas
daa
sbb
lods
out
mov
ljmp
lcall
xchg
outsb
mov
ja
xor
sbb
dec
cli
aas
cmp
cwtl
sbb
loopne
sti
outsb
out
mov
dec
andb
adcl
sub
push
repnz
daa
cmp
adc
push
mov
adc
xlat
flds
cli
mov
cmp
cmp
scas
and
mov
icebp
stos
fnstenv
fdivrl
add
std
push
fmuls
pop
je
inc
jbe
shlb
rolb
pop
mov
xor
pop
add
xchg
test
sbb
fldcw
cmp
mov
pop
adc
and
and
xchg
shll
pop
mov
add
adc
dec
adc
addr16
add
jo
sbb
cs
push
or
jmp
jns
mov
push
imul
sbb
pop
mov
sbb
inc
ds
or
dec
js
stos
jo
subb
fbld
xchg
sub
frstor
clc
scas
mov
std
sub
cmp
cmp
lea
sub
outsb
aad
mov
xchg
pop
divl
or
ret
pop
mov
test
sbb
in
repnz
lahf
test
ljmp
lods
and
adc
mov
push
jbe
cld
mov
out
adc
dec
repz
mov
and
out
pop
pushf
xchg
mov
rcrb
xor
aas
mov
push
sbb
mov
push
shrb
mov
push
mov
sarl
push
mov
stos
xlat
and
leave
or
inc
js
cmpsb
sbb
sub
mov
pop
inc
or
lret
cmp
adc
sub
add
icebp
int3
xchg
and
repnz
loop
ss
rcrb
jo
add
in
loop
inc
xchg
ljmp
jl
or
add
std
xchg
arpl
icebp
pop
adc
mov
lea
movb
inc
push
notb
push
cmc
jnp
rcll
icebp
adc
sub
mov
add
mov
dec
rcr
dec
pop
jg
call
jge
push
fidivrl
mov
dec
imul
mov
addb
jmp
adc
cli
jno
enter
enter
fs
dec
push
dec
fwait
sbb
xchg
in
stos
xchg
push
pop
sbb
sbb
rol
cld
cmp
out
int3
stc
add
push
jo
sti
jl
outsl
jmp
mov
xchg
add
mov
adcb
imul
jbe
jle
aam
fnsave
jo
sbbl
jo
popf
mov
push
stc
movsb
add
ret
ret
ss
xor
repnz
pop
mov
daa
loop
stos
push
fstps
pop
jb
pop
ret
mov
fbstp
sbb
mov
shlb
sub
js
dec
cmp
pop
repz
mov
or
or
xchg
or
fs
mov
pop
ret
add
neg
mov
ss
xor
dec
cmp
mov
sahf
xorb
repz
fisttpll
add
jl
iret
adcl
out
add
std
in
push
jge
test
pop
sarb
add
les
mov
lahf
push
adc
mov
pop
subl
push
cmp
call
gs
scas
sub
aad
divb
or
xchg
sbb
add
movsl
fnstsw
pop
inc
inc
xor
lods
insl
movsb
push
mov
adc
cli
push
or
push
xchg
icebp
inc
arpl
xchg
push
mov
dec
clc
sbb
lods
adc
test
movsb
adcl
out
rcrb
hlt
repz
pop
xchg
mov
push
and
orb
dec
and
mov
xor
mov
cmpsl
and
mov
adc
cli
pop
test
dec
mov
push
mov
nop
aaa
cmc
jnp
sbb
cmp
ficompl
aaa
cwtl
cld
jmp
lret
sbb
iret
add
daa
and
out
dec
pop
lret
adc
insl
movsb
push
fwait
out
fstpl
push
lods
and
mov
lret
scas
mov
aaa
xor
cld
daa
cmp
pop
subl
fcmovnb
pop
cmp
adc
xor
cld
inc
xor
mov
stos
je
ret
inc
mov
mov
outsl
sbb
jo
ljmp
jno
scas
jno
add
xor
adc
pop
or
push
fsubl
add
sbb
insb
xchg
nop
sub
or
jge
xchg
mov
adc
dec
es
mov
loope
hlt
add
pushl
inc
out
mov
xchg
and
push
ss
cmp
pop
jg
cwtl
and
andb
dec
fwait
sub
mov
inc
and
xchg
mov
int3
imul
add
lret
mov
xor
add
fimull
in
cltd
rcpps
xor
ret
cs
xor
nop
pop
adc
rcrb
fisubrs
lcall
ss
in
cltd
xchg
xor
and
ret
shll
lcall
pop
das
mov
enter
pop
or
xchg
testb
xor
add
das
dec
in
cli
enter
iret
jmp
mov
jno
fistpl
dec
daa
hlt
je
mov
fstpt
repz
nop
xchg
xor
sti
mov
mov
add
jmp
xor
pop
das
jl
jno
jbe
lods
sub
movsb
cltd
xor
mul
filds
test
jecxz
std
lods
xchg
mov
adc
cmc
in
add
ret
leave
cmc
fwait
jae
dec
enter
enter
sbb
out
jbe
add
ljmp
cmc
sbb
mov
nop
mov
jg
sbb
push
cmpsb
sbb
adc
or
mov
adc
xchg
andl
fldcw
decl
adc
mov
pop
cmp
je
push
insl
mov
inc
dec
xor
mov
push
xchg
out
xchg
sub
outsl
in
xchg
aaa
scas
xchg
xorb
xchg
and
jno
fwait
inc
icebp
outsl
pop
es
push
pop
mov
mov
fisubl
std
mov
jecxz
ds
dec
gs
push
xlat
insb
xorb
mov
repz
daa
mov
outsl
xchg
out
dec
xor
push
lods
fcoml
ja
call
mov
mov
cmp
in
arpl
out
dec
pop
aad
inc
xrstors
out
sbb
iret
and
mov
push
dec
jb
push
jb
cmp
ret
daa
arpl
sahf
pop
out
inc
xor
sarl
xchg
das
pushf
sub
pop
in
addr16
xor
imul
mov
xor
mov
jecxz
dec
lea
ret
pop
js
pusha
fwait
inc
aad
out
dec
subb
or
aad
pop
push
xchg
mov
fwait
orl
enter
nop
rcll
in
dec
inc
fs
divb
xchg
fcmovnbe
mov
fistl
out
pop
xchg
andb
cmp
add
or
mov
stos
push
imul
cwtl
fstl
fmuls
mov
sub
in
pop
adc
loop
push
mov
xchg
lret
aad
xchg
imul
les
inc
mov
cld
adc
jp
mov
or
push
mov
lock
xor
or
mov
xchg
ljmp
loop
mov
adc
sbb
popa
push
mov
test
and
push
jp
jge
jle
mov
in
dec
lret
jecxz
insl
mov
fs
rorl
jo
repnz
and
aad
dec
mov
xchg
iret
pop
aas
popa
call
subl
adc
mov
lahf
sub
inc
mov
fdiv
mov
jbe
pop
out
aam
shrl
push
iret
pop
adc
xchg
lea
negl
dec
cmp
jecxz
pop
movsl
imul
or
jecxz
mov
xchg
jmp
xorb
mov
cltd
js
bound
out
das
std
sbbb
outsb
scas
pusha
stc
push
push
xchg
sbb
mov
inc
mov
pop
mov
in
or
loope
jo
fbstp
mov
pop
jo
push
or
lret
nopl
or
xchg
jns
dec
adc
mov
and
sbb
dec
adc
xor
mov
jne
aas
xor
mov
mov
xchg
xor
stos
xor
adc
sbb
dec
cld
xor
dec
mov
fnstsw
jge
shrb
repnz
int
mov
repz
sbb
sahf
test
xchg
sub
pop
jmp
loopne
in
xchg
xchg
jne
xor
add
push
test
int3
arpl
fld1
movsl
sbb
pop
xor
js
or
test
cwtl
hlt
sub
sbb
and
jb
hlt
pop
int3
pop
icebp
lret
iret
pop
lock
add
scas
test
loope
dec
sbb
mov
xlat
mov
lahf
pop
mov
ficompl
push
rolb
lret
xchg
bound
jle
fwait
dec
movsl
mov
or
mov
out
out
inc
xchg
or
test
xchg
cwtl
cmc
imul
cli
cld
out
fldl
push
sti
test
pop
sti
pop
ja
call
jge
jno
jmp
mov
adc
stc
and
dec
int3
stc
scas
lds
dec
sbb
adc
fisubrs
inc
add
jb
sahf
mov
adc
je
push
jmp
jge
mov
dec
mov
and
cmp
mov
shrl
stos
in
inc
aaa
mov
xchg
fidivl
push
inc
divb
fs
and
test
xlat
xchg
mov
push
mov
jbe
inc
and
fimuls
cli
add
shr
out
xchg
xorl
cmp
dec
xor
int
shlb
imul
xchg
jb
jbe
aas
or
and
lahf
int3
cmp
arpl
mov
push
push
mov
xchg
cld
jb
in
sbb
jne
xchg
adc
popf
cmpsb
add
sbb
sub
mov
mov
je
out
inc
jmp
or
repnz
aam
or
mov
ss
pop
popf
mov
push
fld
push
pusha
fcompl
push
aam
dec
pop
lcall
loopne
dec
into
adc
mov
loope
mov
mov
jnp
mov
jle
push
addr16
pop
cmp
pop
xchg
addr16
arpl
mov
cwtl
stc
ljmp
je
push
mov
iret
out
es
iret
mov
xchg
mov
adc
test
aas
loope
and
cmp
or
imul
add
in
adc
xchg
mov
add
jne
jecxz
push
push
xchg
pop
imul
xchg
sbbl
mov
adc
mov
sahf
push
movsl
mov
lock
hlt
push
cld
xor
dec
lret
loopne
mov
lods
pop
scas
xchg
sub
inc
inc
and
int
mov
and
mov
cmp
pop
int
int
mov
rcrl
add
lea
lods
cmpsl
sbb
cmp
idiv
xchg
and
dec
push
add
std
jl
pop
push
mov
shrl
mov
pop
out
shlb
test
adc
add
sbb
sub
xchg
js
mov
into
mov
lret
dec
and
addl
mov
loopne
mov
and
jns
out
rorb
mov
cmp
sub
pop
ja
lods
dec
mov
dec
xlat
popf
sarl
add
xor
lods
adc
mov
ret
sub
sub
jle
sbb
es
sti
ljmp
leave
jg
sub
dec
sub
dec
fimull
jns
pop
stos
orl
sub
aam
pop
es
pop
cmp
out
cld
adc
xor
inc
mov
popf
pop
mov
adc
or
arpl
ret
sbb
mulb
pop
in
es
sub
sub
inc
jnp
fwait
in
repnz
push
xor
add
imul
dec
out
lea
push
mov
fisttps
jnp
cld
push
repz
sbb
int3
insl
fcoml
dec
in
shrb
scas
push
movsl
mov
or
es
rcrl
cmp
sub
aaa
jmp
mov
pushf
mov
xor
cmpsl
xchg
nop
push
imul
hlt
xor
imul
jge
inc
loop
mov
loope
jbe
xor
lret
scas
mov
pop
xchg
mov
aaa
ret
push
sbb
in
cmp
mov
stos
mov
not
sbb
add
movsb
subb
and
inc
dec
sti
push
test
in
mov
cmp
ffreep
imul
rol
in
gs
xor
push
imul
test
mov
add
hlt
and
and
mov
add
out
and
pushf
mov
jbe
inc
cmp
lahf
mov
stc
jg
stc
mov
fnsave
sub
ds
xchg
mov
dec
mov
mov
jl
loopne
insb
int
es
mov
push
and
cltd
or
sar
gs
push
adc
repz
cmpsl
push
stos
and
cmp
jp
xchg
ret
sub
mov
mov
mov
lods
add
jg
jno
stos
out
xchg
pop
adc
pop
sub
xor
cltd
or
out
jnp
dec
dec
xchg
or
or
inc
test
add
imul
jmp
sarl
fidivs
cmp
fisubrs
movsb
jno
out
and
test
push
hlt
jp
inc
shll
mull
xchg
inc
mov
ss
outsb
lods
mov
push
cmp
movsb
lret
adcl
jmp
in
jl
adc
xchg
xor
fdivr
bnd
and
gs
mov
sub
mov
les
call
sub
xor
jmp
lahf
movsl
rcr
xchg
int3
rclb
sbb
pop
in
and
mov
popf
inc
into
jo
fs
addr16
lahf
cld
mov
pop
cmp
mov
sub
mov
sarb
push
cmp
flds
sti
and
icebp
into
cld
cmp
mov
add
flds
pop
xchg
ljmp
sub
aam
mov
in
ds
cmpsl
fisttpll
dec
aad
rcrb
js
sarb
out
inc
jge
jge
ss
daa
lret
add
jns
movsl
out
add
and
mov
js
pushf
cmpsb
in
aad
mov
lods
mov
or
jmp
rcl
ret
gs
cmp
shrb
jo
sbb
jle
pusha
aas
int3
fmull
fimuls
lcall
xchg
xchg
dec
jmp
imul
stos
mov
push
inc
pop
dec
cmpsl
repz
int3
dec
les
mov
cld
sub
inc
out
xchg
xor
mov
shrd
test
sub
je
mov
out
xchg
sbb
fwait
cwtl
mov
iret
xor
arpl
jle
ljmp
shll
dec
add
pop
loopne
adc
je
mov
cmp
rorb
jmp
bound
movb
mov
cmp
dec
scas
popa
rcll
cs
mov
sbb
or
or
xchg
clc
movsl
lods
pop
adcl
and
adcb
pop
xchg
add
fcompl
aad
aaa
and
jb
dec
lods
cmp
xchg
lds
bound
mov
xchg
and
mov
jnp
in
pop
andb
or
mov
insl
xchg
jns
fnstsw
int
pop
rcrl
jne
mov
xor
xor
inc
lods
das
in
mov
pop
add
cmp
fmuls
fbld
jp
pushf
stos
cmpsb
jge
aas
xchg
leave
lock
fwait
lds
stos
lret
adc
xchg
push
ss
cmp
sub
sub
rcrb
inc
lret
push
movsb
xor
cli
popa
sub
clc
flds
loope
in
jmp
sbb
xorb
cmp
mov
xchg
xor
mov
xlat
outsb
cmpsl
rorl
es
jg
pop
and
out
test
sub
fisubl
xchg
lods
test
div
std
out
repz
es
cltd
dec
sub
push
loop
lea
inc
dec
int3
xchg
add
movsl
test
sti
push
hlt
shrl
stc
clc
cmc
aam
mov
dec
mov
subb
cwtl
popf
mov
dec
insl
les
adc
mov
sbb
in
test
cmp
or
push
out
inc
push
stos
arpl
add
fbld
js
sahf
xor
lock
push
stc
pusha
es
gs
enter
xorb
div
addl
xorl
mov
xor
adc
pop
ret
xchg
imul
pushf
and
xchg
sbb
mov
cmc
dec
jge
sbb
movsb
ds
xor
dec
cli
xchg
inc
icebp
fxam
loop
sbb
mov
push
cs
cs
repz
pushf
movsl
stos
scas
push
insl
xor
dec
les
mov
lret
sub
les
jmp
fdivl
lret
mov
sbb
pop
pop
cltd
cmpsb
mov
insb
fistl
aam
cmp
leave
repnz
mov
jge
push
sub
icebp
or
mov
inc
cmc
fimull
jns,pt
aas
fwait
aas
test
inc
cli
scas
ret
pop
pusha
jmp
lahf
xor
or
in
jle
dec
add
push
jg
dec
imul
cmpsb
int3
mov
ja
push
clc
std
rolb
xchg
jnp
aam
test
test
jo
dec
fdivrl
int3
sbb
mov
cmp
mov
test
mov
sub
add
push
fistps
sub
into
and
inc
and
lea
stc
and
daa
inc
mov
sub
aaa
leave
nop
push
mov
leave
cmpsb
add
sub
lret
fdivl
insl
push
pop
test
out
cmp
xor
push
test
add
ffree
std
int
cmp
scas
mov
fsubl
sbb
pop
mov
jae
sub
repz
frstor
pop
add
jmp
mov
or
scas
cmpsl
test
cmp
xlat
in
lea
and
push
pusha
mov
in
push
arpl
in
cmp
pop
aaa
xor
jecxz
xor
and
xchg
popl
sbb
mov
pusha
adc
jnp
mov
jo
mov
sub
nop
lods
mov
fcomi
inc
cmp
test
test
sub
xchg
xchg
negl
add
in
sahf
outsb
adc
mov
lret
iret
xor
jo
push
lods
jmp
movsl
dec
push
mov
les
and
xlat
pop
or
push
sub
or
mov
cmp
pusha
idivb
sar
ret
and
jne
add
decl
pop
imul
stos
rolb
or
lea
or
mov
movsl
aam
adcb
and
xchg
adc
pop
sti
sbb
or
adc
lds
mov
sub
jnp
xchg
ret
cli
insl
mov
sub
mov
mov
pop
dec
sbb
sub
mov
pop
rorl
ljmp
ljmp
or
dec
xor
gs
and
fcomp
lods
int3
cld
and
and
pop
jae
aas
ret
jnp
mov
mov
xchg
imul
neg
xchg
rol
cmc
mov
mov
jecxz
sbb
sub
movsb
add
or
xchg
xor
outsl
inc
mov
cmp
push
dec
movsb
push
push
repnz
pop
xorb
orps
mov
pop
arpl
daa
dec
adc
insb
iret
xchg
std
jns
std
jo
inc
rol
test
xor
jae
jmp
sub
mov
out
mov
jnp
ja
movq
sbb
mov
sti
or
dec
pop
int
jno
cmp
mov
and
jne
ficoms
iret
lahf
add
sub
cmpsl
jb
icebp
sbb
jecxz
je
pop
xor
dec
add
xchg
sbb
sbbb
nop
cld
xlat
inc
push
and
xchg
dec
xor
and
adc
ljmp
rcll
repz
or
mov
dec
int3
pop
jge
xorb
mov
pop
xor
jbe
mov
adc
pop
call
mov
push
push
dec
jae
fdivrs
push
sub
cmc
popf
cmp
lret
mov
enter
adc
lahf
inc
imul
cmpsl
inc
sbb
mov
sbb
pop
stos
mov
divb
xchg
mov
shll
std
push
rclb
movsb
movl
pop
neg
mov
arpl
aam
bound
filds
les
sbb
clc
sub
jg
push
or
jmp
daa
or
pop
out
push
bound
ljmp
mov
add
mov
inc
popf
sbb
inc
fcoml
adc
icebp
dec
sub
dec
loop
mov
and
clc
mov
sbb
jg
mov
pop
outsl
inc
shl
mov
xor
lcall
andb
ljmp
idivb
subl
inc
cmp
dec
nop
xchg
cld
loop
filds
imull
in
test
inc
or
jno
lahf
out
jge
cmpsb
adcl
mov
cmpsb
clc
push
inc
xchg
fxch
ljmp
addb
xchg
add
add
stc
sarb
mov
inc
push
cmp
dec
int
scas
rcrb
fs
test
mov
or
sub
jle
xchg
mov
leave
stos
sub
sub
daa
pop
fwait
push
dec
je
jne
fistpll
fcmovnbe
jne
movsl
scas
popf
addr16
scas
dec
jg
inc
mov
sbb
cmpsl
stos
jecxz
fdivrl
and
add
shlb
in
or
fwait
pushf
imul
xchg
add
leave
repnz
or
sub
hlt
in
pop
mov
push
inc
adc
call
jecxz
inc
loopne
arpl
dec
unpcklps
or
das
insb
imul
lcall
rclb
ret
push
insb
ret
xor
pop
lea
mov
mov
and
xchg
out
into
hlt
aaa
pop
cmp
scas
add
mov
stc
bound
add
dec
pop
add
cltd
mov
icebp
hlt
ss
cmp
push
mov
cmp
xor
sti
out
mov
lea
popa
in
inc
ja
ret
in
add
leave
mov
pop
jb
mov
jecxz
aam
call
mov
adc
and
cmp
sar
rcll
lods
push
lahf
out
call
enter
cmp
int
sbb
xchg
xchg
lods
cmp
popf
and
aam
aam
mov
lods
mov
push
mov
mov
je
sbb
in
or
xor
add
sarb
xchg
sub
enter
in
mov
mov
and
push
xchg
sub
in
mov
addr16
sbb
cmp
rcr
xchg
jp
adc
dec
push
mov
inc
scas
aam
and
push
mov
clc
mov
xchg
mov
fcomip
jge
adcl
inc
jo
mov
adc
xor
xor
ret
outsb
ret
stos
dec
push
push
ds
jb
dec
inc
jp
div
fs
push
notl
std
nop
int3
xchg
outsl
inc
enter
mov
test
mov
aad
or
inc
js
push
push
shlb
jo
pusha
cwtl
and
jns
sbb
pop
lcall
popl
add
loopne
int
imul
iret
mov
pop
enter
mov
push
jo
aad
xor
fldcw
icebp
je
cltd
sbb
adc
inc
popf
inc
xor
rcll
je
mov
in
into
insb
imulb
xchg
dec
cltd
in
js
or
loop
in
jae
jae
mov
leave
cmp
inc
stos
movsl
call
or
jecxz
outsl
int3
dec
push
int
push
dec
push
cmp
pop
adcl
in
push
dec
xchg
pop
testb
cs
js
and
mov
mov
mov
mov
or
insl
in
inc
mov
dec
into
sbb
pop
xchg
pop
pop
movsb
jnp
lret
ret
xchg
jmp
jge
or
fmul
mov
sti
inc
ds
outsb
sbb
bound
mov
sbb
jg
xchg
aaa
lds
popf
jnp
lock
aas
popf
leave
dec
cmp
push
sbb
clc
mov
xchg
imul
sbb
mov
mov
mov
sub
hlt
sbb
mov
scas
out
rcll
ljmp
addr16
insb
sub
ret
xchg
pop
push
xor
insl
pusha
fcmovnb
fsubr
test
bound
sbb
sets
push
addr16
js
cwtl
test
fidivl
fcoms
push
sbb
mov
and
ljmp
icebp
std
jae
mov
xchg
or
xchg
cmpsl
dec
inc
loopne
dec
mov
cmp
sbb
sbb
xor
repz
mul
aad
lcall
aad
fwait
mov
mov
push
dec
xor
xchg
nop
mov
fs
lock
fidivl
sahf
cmp
out
xorb
sbb
add
ja
insb
loopne
test
dec
mov
test
jmp
jno
mov
cmp
das
cmpsb
loopne
test
lret
pop
sbb
shr
jmp
push
insl
sbb
test
call
pop
mov
shll
jae
mov
nop
jmp
xlat
inc
jg
mov
fwait
daa
jno
xor
add
push
add
jmp
mov
jnp,pt
rcl
repz
or
daa
inc
out
dec
pop
add
into
mov
mov
cld
mov
adc
mov
cmp
jne
pop
icebp
xor
fnstcw
adc
arpl
fmul
jge
pop
jge
jo
sub
out
push
xlat
sub
inc
arpl
test
sbb
test
pop
sub
sbb
jo
cmpsl
mov
mov
leave
out
cwtl
or
and
movsl
sub
adc
loopne
aad
or
jns
iret
mov
aas
mov
or
adc
push
lods
or
adc
mov
loopne
adc
inc
ret
imul
out
jb
movsl
jb
sub
mov
xor
jmp
mov
pop
clc
popa
test
enter
jl
or
testb
popa
gs
in
jno
jmp
mov
jge
iret
or
mov
add
rol
mov
pop
xor
lods
push
pop
xchg
movswl
mov
xor
ss
xor
movsl
adcb
lret
cli
mov
pop
scas
fs
pop
imul
xor
pop
cmp
mov
pop
cltd
in
xlat
mov
mov
xor
fcompl
pop
fmull
addr16
jns
push
dec
jae
cmp
aad
mov
fmul
mulps
shlb
add
test
jmp
inc
aas
inc
jns
in
xchg
pop
pop
movsl
and
xchg
in
xlat
rol
mov
or
lds
loop
or
cmc
lahf
xchg
mov
arpl
xchg
subl
jl
jp
pop
push
stc
and
shrl
add
push
bound
or
sub
cmp
mov
pop
enter
mov
adc
aas
fnsave
push
sbbb
scas
cli
test
stc
sbb
mov
push
mov
pusha
xor
sbb
lret
out
imul
add
lret
iret
push
aaa
cmpsl
lret
lock
sbb
sub
or
push
loop
mov
scas
lods
test
outsl
push
mov
sub
addr16
les
jnp
fsubr
arpl
and
imul
loope
sub
paddsb
mov
enter
loopne
decb
mov
jnp
fstpt
or
hlt
imul
pop
pop
cwtl
insl
ret
mov
hlt
in
pop
bound
imul
mov
shll
and
lahf
mov
cmp
xchg
adc
sub
fwait
xchg
cmp
and
xchg
push
add
jb
mov
jb
pushf
mov
xor
and
inc
mov
dec
cmp
imul
call
adc
jnp
sub
or
leave
sbb
in
icebp
mov
and
test
std
ficompl
adc
cmp
cwtl
int3
jecxz
push
mov
bound
mov
xchg
xor
pop
jp
call
adc
fcmovnu
shll
out
xchg
xlat
loop
mov
dec
cmp
mov
jnp
or
in
idiv
leave
push
xor
xor
mov
xor
sub
xorl
test
shlb
inc
mov
test
sti
fwait
mulb
cmc
push
cmpsb
mov
movsl
pop
pop
jmp
sbb
cmp
jmp
jo
aad
pop
stos
inc
xor
xchg
sbb
les
scas
aaa
jbe
shll
cmp
out
scas
jo
sub
into
pop
mov
ret
or
mov
mov
cmpsb
in
pop
ljmp
imul
inc
push
mov
sub
ds
cmp
xchg
add
aam
fbld
mov
addr16
mov
fdiv
jp
cmp
andb
pop
inc
loope
mov
lcall
pusha
sub
adc
sbb
jbe
sahf
and
sbb
cld
jge
out
outsb
notb
inc
push
xchg
dec
add
add
aaa
leave
fs
push
sbb
mov
push
loope
xchg
pop
jecxz
cmc
mov
les
jns
pop
sub
sub
scas
adc
xchg
dec
shrb
mov
aaa
sub
xchg
dec
xchg
mov
push
mov
add
std
xor
push
xchg
lds
in
data16
sarb
js
int3
mov
sbb
xchg
cli
stos
outsl
loopne
mov
fisttpll
cmp
lods
jp
sbb
int
mov
int3
cmpsb
imul
mov
sub
pop
shll
adc
add
adc
lods
push
cmpsb
jp
cmp
push
rol
fimull
testb
mov
xchg
xchg
pop
and
sub
lds
lods
imul
loop
gs
adc
mov
cmp
and
push
sahf
push
pop
cmp
movsb
pcmpeqw
mov
insb
stc
and
and
clc
or
and
and
cmp
push
xchg
xor
stos
out
push
dec
repnz
sbb
push
push
inc
jns
test
adc
xchg
add
ja
pop
ja
jge
sub
dec
mov
mov
lea
jp
dec
sub
sbb
add
dec
sti
imul
pop
and
out
cmp
adcl
popa
cmpsl
fs
or
xchg
sbb
call
adc
testb
cwtl
mov
mov
sti
add
ret
xor
pusha
sahf
int3
xor
mov
xchg
mov
fimuls
hlt
cmp
adc
inc
jmp
jb
xlat
mov
jmp
ja
das
test
push
mov
in
sub
push
mov
sbb
or
loope
jge
ret
mov
cmp
arpl
int3
sbb
mov
pop
test
cmpsl
shl
test
jb
and
sti
add
popa
pop
sti
push
mov
lock
push
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
scas
mov
lock
int3
fnsave
lcall
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
imul
jne
jmp
test
fldl
adc
cld
imulb
jge
orl
cmp
or
adcb
imul
sub
out
out
aam
int3
fnsave
stos
hlt
gs
pop
and
pop
jo
sbb
sub
lret
inc
mov
inc
add
mov
ss
cmp
cmpsb
lret
repz
test
xchg
daa
lret
lcall
sbb
sbb
mov
push
flds
loopne
mov
and
movsl
outsb
mov
dec
xchg
cmpsb
aad
sub
mov
addl
dec
adc
jmp
lock
int3
fnsave
gs
jnp
or
test
add
fnsave
gs
jo
push
int3
fstl
test
arpl
jmp
lock
pusha
mov
test
gs
jle
pop
int3
popf
mov
xchg
dec
adc
jmp
cmc
pop
int
mov
test
gs
jnp
pop
int3
fldl
gs
test
pop
into
sbb
jnp
pop
int3
int
fwait
xchg
dec
adc
jmp
loopne
int3
fnsave
gs
jg
push
int3
test
outsb
loop
inc
lock
int3
fnsave
gs
jnp
pop
int3
fnsave
jge
jmp
lock
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
loop
jecxz
dec
adc
pop
jo
pop
mov
loop
adc
jmp
mov
aam
dec
adc
jmp
lock
sub
shr
sub
sbb
pop
int3
sbb
adc
cmpl
fwait
test
gs
jnp
pop
int3
cmp
jg
loop
jnp
pop
int3
fstl
gs
hlt
pop
int3
fnsave
gs
jnp
sbb
test
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
gs
jnp
pop
int3
fnsave
outsb
loop
jnp
dec
int3
fstpl
sub
stc
push
lret
pusha
and
popf
int
loope
push
clc
cmp
mov
push
icebp
ljmp
scas
mov
mov
or
xchg
fs
sahf
mov
ret
xchg
mov
test
and
addr16
pop
clc
addr16
jne
lcall
jno
je
or
cmp
jne
push
push
mov
xor
jb
mov
stos
sti
in
add
push
in
sbb
inc
rol
mov
jnp
jg
leave
subb
dec
mov
mov
sbb
xor
pop
pushf
insl
imul
arpl
std
aad
clc
lock
aam
andl
das
mov
jmp
mov
mov
xor
sahf
std
add
std
sub
mov
scas
add
movsb
rorb
mov
push
dec
clc
jp
pop
or
or
scas
enter
sub
and
and
pop
inc
jns
scas
mov
inc
stc
cmpb
add
xor
data16
mov
inc
movsl
mov
test
adc
gs
movsb
sbb
xor
adc
imul
movsl
jp
mov
add
mov
jns
aad
jno
push
mov
xor
leave
subl
sub
ficompl
xor
adc
popf
adc
sbb
inc
sahf
mov
dec
jno
adc
ret
loopne
and
int3
jecxz
push
adc
add
dec
test
mov
xor
in
mov
sbb
js
pop
jo
rclb
gs
xchg
fwait
dec
iret
aad
mov
daa
fnsave
fldln2
push
inc
mov
pop
and
sbb
aaa
fcmovnbe
inc
mov
mov
dec
dec
pop
dec
lods
ss
xchg
lock
addr16
aam
push
xor
push
jmp
rclb
cmp
test
mov
sbb
sbb
mov
ror
adc
les
mov
dec
enter
cli
and
jmp
jecxz
pop
add
push
mov
cmp
or
das
inc
ror
adc
adc
das
adcb
dec
and
cmp
test
fldcw
in
jae
cmp
lcall
stos
les
jbe
inc
jo
cmp
arpl
out
inc
mov
dec
sbb
push
sbb
clc
or
pop
mov
push
mov
mov
mov
xor
cli
sub
mov
stos
lahf
cmp
rorl
pop
repz
icebp
int3
lret
cmp
sbb
sub
adc
mov
push
jge
movsl
mov
push
jp
xchg
cmp
movups
leave
in
outsb
mov
gs
jb
push
or
push
pop
pop
lea
mov
imul
bound
push
andb
push
fwait
dec
jne
jge
loopne
mov
aaa
sar
or
outsl
lea
dec
cmp
fidivl
lret
enter
leave
scas
mov
and
in
push
xchg
inc
aad
sbb
mov
test
stc
out
add
mov
clc
inc
sbb
daa
mov
inc
iret
ja
cmpsl
adc
shl
rorb
scas
in
mov
push
inc
aaa
xchg
ss
xlat
sub
test
pop
test
xchg
xchg
pop
xchg
call
xchg
jge
rolb
addr16
lret
aad
cli
and
mov
ret
add
ds
fidivrl
jmp
sbb
cmp
push
lret
test
xor
mov
inc
shlb
jle
and
inc
into
push
mov
add
roll
mov
and
sbb
mov
cmp
jp
jmp
mov
xor
inc
fidivs
mov
add
in
test
xchg
and
sub
and
xor
adc
dec
frstor
subb
fsts
xor
repz
and
mov
sbb
lcall
ljmp
fimull
lcall
sub
nop
lcall
ja
mov
pushw
sub
jl
in
pop
fistl
sbb
sub
xor
cmp
lods
add
mov
cmp
sbb
movhps
or
out
stos
xchg
insl
test
dec
decb
fldcw
and
xchg
sub
add
lcall
cmp
rcl
je
shlb
je
int
pop
in
xchg
push
jnp
movhps
imul
pop
pop
js
pop
pop
mov
and
movsl
or
paddq
nop
dec
cwtl
xchg
mov
add
outsl
ret
stos
add
jecxz
stos
stos
sub
int3
popa
pop
pop
mov
popa
rorl
mov
in
fadd
mov
xchg
andb
xlat
mov
mov
mul
inc
fwait
das
pop
add
and
adc
stos
mov
adc
lret
or
dec
pop
mov
fmulp
mov
fimuls
cmp
mov
jg
jnp
or
movsl
inc
ljmp
sub
cltd
or
jno
xor
enter
cmp
add
jl
mov
fstpl
jge
or
das
push
in
sub
xchg
pusha
inc
aad
shrb
push
mov
outsb
jae
push
mov
sub
sub
ja
adc
mov
sbbb
cltd
gs
cmp
mov
loope
jg
inc
xchg
xor
xor
xor
jg
clc
mov
mov
sbb
loope
negl
mov
cmp
in
push
sbbb
cmpsl
push
jb
icebp
jecxz
in
cmp
insl
out
jecxz
jle
push
or
jnp
call
imul
scas
inc
repnz
adc
pop
adc
insb
loop
cmp
pop
mov
inc
popa
mov
push
scas
push
stos
fwait
jp
mov
mov
mov
sub
sub
repz
out
lcall
push
dec
add
in
mov
jle
mov
mov
or
xchg
mov
mov
mov
or
xor
mov
or
test
in
int3
dec
mov
add
or
lret
orb
dec
andl
mov
cmp
fadds
test
push
scas
scas
mov
sub
cmpb
into
test
imul
icebp
cltd
cwtl
dec
or
cmp
mov
mov
std
ret
mov
dec
test
lea
xchg
adc
xchg
push
and
mov
mov
xor
jbe
hlt
xchg
call
pop
lahf
inc
aas
ret
fwait
subl
cwtl
inc
add
add
cmp
xor
aam
mov
add
add
arpl
sbb
jmp
push
mov
pop
dec
mov
out
xchg
repz
mov
setge
or
ss
push
jmp
push
andb
sub
xor
sub
lds
mov
divb
push
mov
mov
clc
xchg
and
push
loope
mov
std
call
fwait
or
xor
push
or
call
inc
jnp
and
adc
loopne
mov
pushf
stos
mov
inc
push
mov
mov
sub
and
cmp
push
xor
shl
pushf
scas
in
cwtl
jmp
cmp
inc
es
popa
aas
dec
fbld
jge
mov
sub
mov
cmp
jo
jle
in
movsl
jg
jne
fildl
popf
data16
fiadds
push
push
in
sarb
pop
pop
xchg
aas
addr16
xchg
test
xlat
icebp
inc
cmp
aaa
mov
push
pop
arpl
lahf
loope
xor
aad
mov
pop
jae
sub
loope
adc
dec
lock
jo
jp
and
inc
cmp
xchg
lahf
mov
fcoms
push
adc
mov
adc
outsb
ja
add
in
inc
mov
mov
push
bound
das
or
lock
cld
xor
rcll
inc
ss
enter
lods
and
aas
xor
adc
mov
std
xor
add
sbb
jg
mov
fdivl
nop
repz
jo
scas
imul
mov
jg
sbb
outsb
aam
xchg
mov
mov
repz
cmpsl
stc
lret
int
cli
mov
xor
add
sub
cmpsl
or
test
xchg
lock
int3
scas
das
pushf
sbb
xor
mov
jg
jns
ficompl
pushl
pushf
cmp
jb
stc
movsl
inc
mov
cwtl
jne
adc
rclb
in
jge
aas
xchg
loope
lods
pop
mov
mov
loopne
jbe
loope
jg
lods
mov
lcall
jb
add
sub
subb
imul
pushf
adc
hlt
insl
dec
fisttps
dec
in
mov
mov
inc
arpl
mov
clc
sub
stos
mov
add
js
xchg
mov
out
out
sbb
mov
pop
add
push
sbb
cs
cmp
out
ja
push
jae
mov
out
data16
jne
js
sub
adc
mov
mov
dec
mov
push
xchg
pop
lcall
stos
jp
adc
scas
insl
and
fnstenv
shll
stos
inc
lock
sub
movl
pop
and
sbb
cmp
add
cmp
cmp
ficompl
ret
or
aam
or
outsb
in
aas
sub
mov
xchg
fs
clc
loope
mov
sub
cmp
shl
test
es
add
mov
jns
sub
add
ja
or
fcomip
sbb
xor
fwait
jmp
leave
out
add
cltd
movsl
add
sahf
cmp
stc
aam
inc
pop
js
mov
int3
or
pop
lods
mov
jg
test
dec
sarl
adc
les
pop
movsl
fbld
cmp
int
jecxz
dec
imul
fwait
push
daa
add
inc
jo
stc
insb
and
out
test
or
jl
sub
cmp
inc
rorl
adc
fiaddl
mov
sub
pop
addl
mov
jbe
sbb
mov
aas
push
popa
fsubrl
sbb
subl
lods
pop
loopne
or
inc
out
or
stc
adc
lahf
jle
jg
nop
jg
jbe
test
mov
aad
lahf
cmpsl
adc
cmp
adc
das
xchg
out
cmp
popa
jle
aad
sbb
push
add
mov
jp
cmp
sub
rclb
xchg
int3
lods
adc
mov
inc
adc
es
pop
je
inc
add
or
mov
inc
loope
ret
sub
test
inc
test
jge
push
push
es
dec
inc
xchg
mov
subb
lret
dec
mov
idivl
sub
mov
dec
lods
cmp
jecxz
cmc
add
push
idivl
xor
add
jo
sbb
mov
adc
aam
ffreep
outsl
repnz
xchg
mov
shll
xor
lret
imul
or
lods
in
pop
test
jo
or
mov
lea
sbb
sar
dec
push
fcoml
out
sbb
les
xchg
sub
cli
xor
or
loopne
lcall
in
lea
stos
mov
aaa
dec
in
lods
imul
fwait
stc
jle
mov
fwait
sub
adc
pushf
dec
notb
mov
sahf
icebp
xor
into
push
mov
bound
add
mov
sub
imul
push
fildl
icebp
dec
xchg
loope
mov
jg
and
xchg
lock
fcoml
sub
dec
stc
shl
jbe
fcmovne
mov
xor
mov
xchg
ja
mov
movb
mov
clc
js
out
out
les
mov
mov
lret
test
mov
inc
outsb
leave
xor
push
bnd
jle
popf
pusha
pop
sbbl
cmpsb
pop
inc
cmp
inc
int3
mov
and
push
mov
mov
in
andb
in
mov
xchg
pushf
stos
pop
mov
inc
cmc
and
push
fidivl
dec
sti
sarl
mov
sti
test
sti
aad
sbb
push
mov
push
lods
lds
jb
fiaddl
cmc
add
cmpsb
xchg
cmp
clc
lahf
rorl
add
clc
sub
jno
pusha
icebp
mov
cmp
sbb
push
fisttpll
out
inc
out
mov
mov
icebp
mov
inc
mov
xor
test
rcrb
imul
mov
push
push
fnsave
pop
xchg
stos
jp
iret
icebp
add
movb
ja
rcll
mov
or
cmp
xor
jl
xor
leave
xchg
dec
adc
das
xor
lea
sbb
jmp
cwtl
ljmp
jecxz
fidivl
and
lods
icebp
pop
jo
cmpsl
test
or
icebp
push
inc
je
cmp
int3
mov
enter
xchg
push
inc
jg
jmp
dec
xor
les
adc
pop
inc
jns
jg
sbbl
movl
xchg
sbbl
push
push
dec
roll
xchg
add
fimuls
jl
adc
sub
scas
and
in
loope
pop
pop
pop
or
and
stc
outsl
fcmovnbe
cwtd
fstps
pushf
xor
sti
mov
add
notl
incb
lcall
xchg
mov
shr
or
xchg
xor
pop
jns
mov
cmpsl
mov
mov
sub
jno
push
mov
xor
inc
sub
scas
loopne
and
es
nop
sti
sub
cmp
push
add
data16
int3
fisttpl
and
hlt
loope
lcall
movsl
shl
rcll
cli
pop
push
nop
mov
rcll
mov
add
mov
push
loope
pop
xor
sub
push
ror
mov
sbbb
add
sub
out
shrb
ljmp
incb
cltd
and
xchg
xchg
mov
sub
or
push
jmp
call
rcll
push
push
xchg
sub
mov
fldenv
inc
jns
mov
sub
cmpsb
mov
cmpsb
in
fists
and
cld
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
