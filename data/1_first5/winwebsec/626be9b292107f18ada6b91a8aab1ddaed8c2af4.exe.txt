lea
sub
test
or
sbb
fwait
insl
out
test
dec
stos
xchg
rorb
mov
xor
div
lea
js
mov
inc
jge
imul
decl
and
push
push
mov
sub
sub
jle
sbb
fdiv
gs
lahf
pslld
adc
lods
pop
xchg
daa
inc
push
push
xchg
lahf
inc
loope
and
mov
subb
lret
mov
fxch
pushf
push
fcomi
inc
mov
ret
mov
mov
scas
adc
push
pop
outsl
push
xchg
cmpsl
js
pop
add
and
and
mov
aas
mov
out
arpl
dec
xchg
cmp
cmp
loop
pop
and
mov
mov
pop
loop
inc
add
fbld
jge
fs
push
cmc
mov
pop
je
or
dec
sbb
sbb
fs
gs
cmp
xor
adc
fdivrl
xchg
dec
mov
xchg
enter
inc
cwtl
cmp
push
loop
or
das
inc
cmc
clc
add
jne
mov
gs
pop
xchg
mov
push
mov
cmp
push
call
outsb
xchg
dec
pop
mov
pop
pop
mov
mov
enter
scas
int
xor
inc
pop
jns
repnz
idivb
pop
jle
scas
push
pop
mov
sarl
imul
jle
xchg
shll
push
jp
dec
stos
jmp
mov
mov
add
std
outsl
xchg
leave
rcrl
sbb
ret
loope
addl
or
cmp
xor
and
jge
inc
leave
shl
jp
add
jge
xchg
add
out
add
pop
in
lods
in
jne
xor
fidivrs
add
shll
loop
add
cltd
stos
data16
pop
bnd
add
and
je
inc
jo
mov
xchg
mov
aaa
adc
jbe
sbb
int3
cmpsb
push
dec
xor
out
insl
jb
ss
push
roll
jge
and
loope
inc
push
and
cmpsb
cmp
pop
rcl
lret
xor
test
lock
dec
int
ds
cmp
je
repnz
ret
push
push
pop
or
shll
jne
sbb
push
mov
popf
and
ret
mov
iret
jp
fwait
dec
das
jne
ret
test
xchg
ja
push
jbe
scas
adc
loope
pop
or
outsb
movsl
lods
or
mov
daa
push
jae
or
push
and
jne
arpl
insl
and
pusha
popf
cwtl
out
cmc
mov
rclb
test
xchg
pop
push
or
mov
cmpsl
bound
mov
rcrb
fiaddl
in
push
jo
lcall
push
push
jecxz
daa
lods
cmpsb
ret
imul
mov
jbe
lcall
cmp
rorb
add
incb
xchg
icebp
cmp
adc
fs
aaa
add
rcrb
mov
mov
loopne
pop
cmp
dec
mov
push
pop
int
xor
mov
call
cmp
inc
and
mov
jne
sub
jns
sysret
sub
ja
jnp
add
fsubrs
sbb
push
xchg
ret
adc
add
insl
mov
setb
das
popl
sbb
les
push
insb
sub
sub
mov
mov
xchg
in
aas
stc
jge
jle
cmpsl
lahf
or
jae
push
or
inc
bsf
adc
js
test
fstpt
sbb
adc
insb
jle
mov
xchg
mov
lcall
pop
inc
push
xor
cmp
xor
nop
jns
and
movsb
test
sub
dec
dec
clc
inc
and
push
and
fsubs
inc
adc
sub
lea
xor
sbbl
jmp
xchg
xor
lock
filds
or
jp
and
pop
and
add
jno
add
int
sub
jecxz
cld
or
add
dec
push
shlb
xchg
adc
sub
negl
dec
in
push
movsb
jmp
out
xor
cmp
add
mov
addb
sub
test
or
in
push
dec
test
cs
ja
jae
fs
out
cmpl
nop
pop
jo
shrl
and
insl
push
jmp
jo
mov
out
decb
mov
jmp
and
dec
xchg
insb
insb
pushf
or
cs
aad
sub
outsb
jae
out
jo
aaa
mov
inc
sti
mov
cmp
enter
or
xor
rcrl
push
inc
xlat
pop
mov
call
fisubl
fs
daa
es
aam
out
mov
cld
aas
test
je
int
cmpsb
or
movsl
jl,pn
es
repnz
mov
pop
push
ficompl
lods
mulb
jmp
sahf
cmp
fldenv
je
fdivrs
into
sbb
testl
popa
cmp
and
mov
jecxz
cmp
scas
push
arpl
out
adcb
cwtl
lcall
push
pop
mov
dec
sub
push
or
in
aaa
xchg
push
mov
xor
popf
hlt
xchg
sbb
pop
popa
cwtl
mov
data16
pop
jg
jnp
in
push
mov
add
ljmp
jmp
dec
icebp
rolb
test
xchg
inc
fsubl
mov
sub
xchg
inc
enter
jne
xor
pop
mov
scas
mov
pop
imul
sbb
add
clc
xor
or
cmp
dec
push
pop
cmpsb
lcall
adc
out
sub
shlb
xchg
rcr
lock
mov
and
and
das
xor
lock
push
aam
mov
stc
push
in
xor
int3
mull
dec
sbb
xchg
js
mull
pusha
xchg
jo
jbe,pn
mov
adc
or
push
xchg
xchg
movsb
aad
inc
jb
push
mov
xorl
aas
xchg
mov
aad
lret
push
mov
and
inc
push
fistps
pop
rcll
ret
ss
sub
jae
hlt
outsb
ja,pt
sbb
pop
or
push
enter
sbb
out
in
daa
jmp
stc
mov
cmp
sbb
incl
clc
rolb
and
sti
lea
adc
sbb
jg
jg
enter
xchg
aas
cmpsb
jge
fisttpll
stos
mov
xchg
pusha
mov
std
sti
jb
roll
popa
ljmp
in
frstor
es
and
xchg
xchg
cmp
pop
push
movsl
jmp
lcall
iret
mov
sub
fs
cmp
out
fdivs
fistpl
ds
out
xor
adc
mov
fmull
or
push
pop
aas
std
pop
ljmp
icebp
std
mov
sbb
sbb
das
push
xlat
or
jmp
mov
or
jb
cltd
or
pop
bound
test
dec
mov
fisubs
aas
adc
cwtl
or
push
aam
call
sub
dec
fs
test
in
cmp
cli
fistpl
push
pusha
lcall
popf
sub
lods
xlat
movsb
cltd
xlat
cmp
test
jno
loopne
inc
jnp
loope
pop
mov
sub
adc
inc
xchg
aad
mov
jp
js
adc
or
pop
test
cmc
repnz
and
dec
push
xor
out
or
les
mov
ret
or
add
mov
outsb
xorb
jg
mov
xor
jae
popa
push
pop
or
movsl
push
loop
stc
adc
xor
xor
and
lods
dec
adc
pop
not
cmc
mov
cwtl
dec
or
sbb
push
adc
rsqrtps
add
inc
inc
add
pop
sbb
icebp
mov
aad
inc
lea
sbb
int
das
add
mov
roll
sbb
loop
mov
iret
add
xor
push
mov
and
sbb
cmpsb
xor
out
iret
dec
cltd
jo
aaa
mov
adc
movsl
mov
mov
in
jl
mov
mov
adc
lcall
inc
mov
sarb
stos
inc
aas
fsts
mov
inc
jecxz
xchg
out
and
sub
cmp
adc
pop
mov
jge
inc
test
jnp
dec
inc
adc
cmpsl
scas
mov
clc
push
fcmovnbe
mov
rcrl
adc
popf
into
pop
sub
or
add
jg
int
ljmp
mov
std
adcl
js
orl
lock
ds
inc
push
sbbl
lods
cwtl
jnp
add
dec
int
es
adcl
cmp
subl
push
xchg
out
inc
sub
movsb
pushf
lret
push
jno
dec
mov
lret
aaa
xchg
roll
pop
pusha
ja
xor
in
add
jl
pop
pop
decb
aad
jg
push
aam
lahf
roll
loop
fwait
aam
mov
cmp
pop
xor
insb
sub
aad
fisubrl
in
inc
jno
shlb
jb
pop
inc
movsb
imul
stos
ja
in
pushf
mov
inc
shrl
xchg
es
mov
ja
inc
aad
roll
xor
cld
xchg
fiaddl
adc
xchg
rorb
xchg
dec
outsb
inc
mov
aaa
mov
nopl
dec
lock
inc
adc
lret
je
call
xor
cmp
sub
add
mov
push
sbb
addb
fldt
shr
push
rolb
mov
push
jb
xchg
notb
repz
fdecstp
sub
mov
cli
push
insl
in
xchg
les
pop
jno
daa
add
sub
and
call
aas
mov
cmpsb
pop
pop
fcoms
mov
adc
push
sbb
push
add
jge
jbe
adc
adc
add
scas
dec
cli
and
cs
leave
dec
mov
dec
fistpll
cwtl
jge
out
lds
shlb
add
mov
test
ret
popa
cs
mov
jp
mov
pop
add
daa
pop
cmp
pushf
jae
dec
xchg
neg
pop
fsubrp
xlat
lret
inc
cmp
dec
push
daa
lock
xor
mov
push
div
or
xor
mov
sub
loop
and
add
push
fldl2t
in
inc
sbb
push
cwtl
inc
dec
in
xor
mov
pop
test
cmpl
push
fdiv
jmp
xor
pop
jnp
enter
jbe
mov
jnp
push
ja
iret
cmp
and
and
cmp
popa
lods
stos
arpl
xchg
mov
notb
ljmp
sub
lret
mov
sub
adc
add
jo
aad
jmp
aaa
or
int
pushf
push
pop
xchg
ret
mov
fbstp
into
and
cmp
fisubs
mov
push
jno
add
ror
push
mov
xchg
mov
test
xor
sbb
sbbl
mov
push
inc
hlt
sub
mov
out
cmp
cmpsb
xor
inc
imul
into
mov
inc
push
cmp
mov
ljmp
js
aad
inc
inc
test
stos
pop
cmc
test
fwait
movsb
lea
mov
and
enter
pop
add
push
pop
push
arpl
jg
mov
xchg
test
jns
out
outsb
ss
jae
out
pop
xchg
xor
push
lods
scas
sub
push
enter
mov
and
mov
shr
neg
jo
in
insl
dec
jne
xchg
jle
inc
xor
mov
add
das
dec
arpl
sbbl
xor
mov
jl
outsb
cld
ss
xchg
dec
cmpsl
or
stc
mov
mov
in
into
fs
mov
das
iret
push
xor
nopl
leave
xor
adc
psraw
or
mov
jmp
cmp
sub
stos
mov
sub
pop
cltd
loop
adc
and
ljmp
in
or
mov
cmp
mov
cld
lds
notl
sub
fcmovu
loope
or
xor
jp
or
sbb
or
jb
leave
dec
mov
mov
jp
insb
in
pusha
sbb
into
jne
sahf
push
xchg
add
sbb
in
push
bound
ret
sbb
rcrl
xor
incl
data16
je
cmp
outsl
jecxz
pop
mov
push
inc
hlt
sti
push
adc
push
inc
das
add
and
xchg
and
add
sbb
sbb
cmp
js
dec
scas
mov
adc
sbb
push
and
sub
sbb
mov
pop
flds
fwait
xchg
fldl
cmp
and
cltd
xor
cmp
mov
scas
dec
clc
insl
lds
xchg
push
mov
mov
subb
cmp
mov
outsb
inc
xchg
push
aaa
popl
xchg
lods
lahf
inc
sbb
ss
sub
push
mov
lods
pop
push
sbb
xchg
xor
cmp
shlb
mov
cli
movl
outsb
imul
je
mov
or
and
cli
xchg
cmpb
adc
cmp
clc
xorl
xor
pushf
jbe
or
cmpb
push
mov
cmp
lock
xor
mov
and
stc
mov
and
pop
xor
xchg
mov
add
push
inc
icebp
cmc
and
test
mov
inc
inc
shlb
pop
sbb
mov
sbb
jg
jns
enter
loop
or
mull
mov
mov
mov
rorb
jo
addr16
mov
ds
outsl
sbbl
lock
pop
dec
pop
repnz
jns
bound
lret
dec
or
push
inc
shl
ss
cmp
jp
and
ljmp
test
jb
dec
mov
xor
cmpsb
scas
sbb
cli
mov
sub
or
out
and
xchg
call
ds
stc
insb
mov
push
cwtl
je
mov
fidivl
jnp,pt
gs
adc
ja
sub
nop
addl
arpl
adc
jecxz
fdivp
mov
jle
xlat
cwtl
sarb
push
mulb
xlat
sti
jno
push
test
cltd
into
sbb
mov
ror
xor
test
cmp
lret
adc
and
fists
mov
andb
sarl
cwtl
xlat
pop
jae
inc
insl
outsl
aaa
and
out
pop
push
mov
out
pop
insl
add
mov
in
divb
sbb
mov
pop
fisttpll
and
cmp
jecxz
ret
inc
daa
adcl
or
bound
xor
xchg
push
mov
notl
xchg
push
rorl
xor
push
ds
pop
cmp
ficoml
cmp
mov
xchg
inc
sbb
gs
sarb
xacquire
sahf
xor
dec
adc
push
jbe
cmpsb
outsl
addl
rorl
scas
push
xor
std
enter
mov
iret
jmp
jne
pop
or
sahf
jl
ret
int
pop
cmp
sub
xchg
dec
sahf
dec
not
into
pusha
inc
jbe,pn
out
adc
adc
xor
fs
mov
int3
scas
cld
push
aas
sub
jl
dec
dec
adc
inc
movsb
dec
mov
jo
or
xchg
inc
sbb
arpl
adc
and
jmp
scas
add
pop
mov
xchg
push
jae
xlat
shll
mov
clc
sahf
xor
mov
jg
push
addl
mov
mov
jnp
lods
push
stc
or
mov
mov
cmp
ljmp
inc
mov
push
loope
movd
pop
lock
or
pop
out
push
sbb
rcr
push
pop
push
adc
lret
aam
movsb
stc
imul
adc
sub
ret
popa
sti
or
ss
stos
ss
sub
push
ja
lods
mov
mov
xor
mov
in
xchg
dec
or
pop
int3
inc
rcrl
faddl
push
inc
push
jb
jae
sti
movsl
test
add
adc
shrl
std
adc
jge
test
int3
ds
orl
in
fcompl
xchg
stos
outsb
ss
cmp
flds
mov
test
es
xor
and
mov
push
shll
imul
insl
in
repz
iret
mov
por
push
xchg
ljmp
lret
adc
out
or
in
les
test
ds
aas
mov
add
out
out
fnstcw
negb
addl
push
sbb
mov
push
mov
aas
dec
inc
dec
cmpsl
aaa
mov
mov
push
addr16
inc
cmp
add
mov
xchg
fdiv
fdivs
pop
pop
std
sbb
inc
ret
adc
call
cmp
xchg
stos
cmpsl
mov
xchg
dec
int3
and
rcl
push
cmp
inc
cli
pushf
sbb
lahf
xor
cltd
or
stc
das
push
loop
pop
je
ret
dec
push
sbb
xor
xor
xor
pop
out
jnp
test
push
sub
outsb
pop
add
mov
divl
or
hlt
fcoms
xchg
and
das
jge
mov
pop
stos
add
xor
shll
aam
push
mov
test
adc
push
pop
or
imul
int3
outsl
jbe
mov
in
push
add
dec
or
pop
xorl
test
xlat
xchg
sub
xor
dec
mov
jmp
mov
sbb
loop
dec
jle
mov
adc
cmp
or
out
push
mov
or
inc
jb
push
loope
out
jle
adcb
sub
jp
sbb
insl
inc
mov
sti
mov
push
movsb
movsb
shll
add
addr16
int
and
xor
imul
test
mov
out
mov
and
xchg
jbe
ret
icebp
mov
sti
fisttps
mov
and
cmpsb
sti
test
sub
push
mov
inc
cmc
lods
add
jb
lock
scas
add
sahf
mov
mov
xor
dec
cmpsl
cmp
ret
nopl
add
aas
fadd
push
sub
fdivs
mov
out
adc
pop
dec
lods
mov
sbbb
hlt
add
in
and
mov
adc
xorb
or
xchg
fiaddl
sbb
and
mov
and
movsb
in
mov
mov
add
push
adc
and
faddl
les
sbb
scas
je
test
int
mov
shlb
adc
pop
cmp
stos
shrl
ret
pusha
push
xchg
repnz
mov
mov
cld
inc
dec
sbb
clc
mov
adc
dec
aas
ret
jp
mov
test
mov
push
push
mov
dec
pop
repz
sbb
pop
push
popa
pop
lahf
insb
sbb
inc
in
lcall
cs
jl
bound
cmc
jp
insb
jmp
test
jg
pop
mov
lods
mov
push
inc
mov
aas
cli
iret
mov
aad
pop
push
and
pop
mov
fwait
xor
pop
std
jae
inc
imul
std
loope
xchg
inc
es
inc
sub
jmp
pop
lds
fisubl
mov
dec
mov
push
cmpsb
lret
rorl
mov
into
pop
stos
fdivp
cmpsl
cmp
mov
push
pusha
mov
xchg
jo
enter
cli
cmp
push
xchg
ds
clc
jbe
movsb
daa
bound
arpl
jp
and
shll
mov
jne
add
mov
or
clc
lea
or
add
dec
stc
inc
lods
dec
pop
cmp
xchg
jmp
stc
cmpsb
sbb
out
hlt
nop
movsl
or
push
es
jg
out
iret
xor
mov
xchg
pushf
mov
sub
aaa
cmp
mov
repnz
pop
lret
sbb
into
fidivl
mov
in
popl
mulb
sbb
sbb
cmpsl
mov
iret
adcl
lcall
mov
outsl
lahf
in
mov
jne
stc
dec
aas
repz
sti
out
push
lock
loope
xor
pop
testl
jae
ds
cltd
rorl
std
fisubs
aam
sbb
push
mov
dec
push
xchg
or
into
mov
mov
fs
fsubs
pop
aaa
sarb
cmpsl
dec
outsb
sub
sub
ficomps
inc
adc
inc
xchg
lcall
sub
xchg
inc
xor
shl
and
lods
test
jns
push
lds
lea
into
sahf
inc
cmp
mov
mov
cli
fcmovb
dec
lods
lock
dec
sbb
dec
mov
mov
pop
push
adc
mov
arpl
pop
popl
pop
xchg
mov
jb
mov
jbe
or
dec
xor
subl
sub
call
add
dec
adcb
rcrb
repz
or
pushl
sub
cld
xor
mov
fimull
dec
je
pop
jbe
mov
or
sub
adc
pop
adc
xchg
lds
cmp
ja
inc
jnp
cmp
js
push
test
inc
sahf
adc
into
pop
repnz
insl
push
and
sub
out
xor
mov
fldl2t
push
sahf
arpl
or
in
arpl
mov
notb
dec
stc
popl
pop
icebp
pop
adc
cmp
pop
mov
cs
or
mov
test
repz
dec
jno
adc
mov
testl
pop
ljmp
out
rolb
push
fildl
cmp
pushf
insb
frstor
cli
mov
push
adc
push
shll
bound
push
pop
xchg
mov
mov
stc
inc
jne
cmp
push
cld
cwtl
pop
and
test
mov
sahf
cld
adc
out
fstps
push
out
mov
stc
dec
insl
sbb
sub
mov
pop
movsl
dec
push
insl
les
rcrb
into
and
in
cmp
push
mov
or
sub
mov
rcrb
cmp
lods
cmp
ss
mov
push
ror
jb
mov
rcrb
or
mov
mov
int
out
or
ss
cli
mov
sbb
ds
sbb
mov
lahf
cmp
ficoms
sbb
dec
mov
pop
shll
orl
mov
and
pop
fdivl
mov
adc
popa
adc
cli
mul
dec
outsl
cli
int3
pop
mov
cmpsb
cmp
arpl
add
scas
fsubrl
push
daa
push
aam
mov
filds
out
adc
jge
icebp
lret
pop
pusha
cmp
testl
push
xor
cld
push
and
inc
js
inc
lock
roll
jge
std
jne
sub
cs
xchg
inc
xchg
push
loope
mov
push
push
ss
aam
lods
sbb
mov
jmp
sub
call
rol
aam
mov
push
shll
sti
and
xor
sbb
pop
xchg
aam
insb
mov
or
adc
and
xlat
push
stos
orl
outsl
testl
pop
idivb
outsb
dec
jge
pop
lds
pop
lock
icebp
adc
adc
mov
fidivrs
pop
nop
push
out
sub
or
rorb
push
iret
lahf
movsl
into
les
call
cmpsl
nop
cmp
mov
stos
sbb
out
dec
pop
movsb
int
mov
repnz
jb
adc
mov
adc
jno
std
shlb
adc
xor
les
das
sub
bound
xchg
lds
pop
cmpsl
mov
pop
mov
idiv
mov
or
pop
repz
sub
lret
pop
pushf
push
repnz
movsb
into
xor
ss
rcr
lret
rcrl
adc
push
ss
add
xor
xchg
pop
fs
dec
mov
xchg
or
sti
lods
int
pop
and
roll
inc
push
stc
sbb
and
stc
xlat
idivw
push
add
or
xchg
cmp
fwait
jmp
fidivl
movsb
dec
ret
lods
xorl
and
xor
xchg
jp
loope
mov
jmp
movsb
and
xor
insb
test
adc
push
test
frstor
xchg
xchg
fistpl
pop
fnop
or
push
clc
push
xor
ret
sbb
ljmp
sbbl
out
xchg
jne
pop
jmp
dec
push
cmp
cmpsb
mov
dec
mov
lods
pop
xor
or
rcrb
jae
mov
and
mov
pop
pop
dec
jge
lret
dec
mov
rol
loopne
mov
loopne
dec
pop
mov
out
push
call
nop
jmp
mov
adc
lahf
pop
fs
aas
sbb
nop
clc
sbb
pop
cltd
inc
xor
in
andl
mov
or
outsl
jmp
xor
shrb
bound
dec
xlat
adc
push
subb
data16
push
push
in
adc
das
std
aam
icebp
movsl
adc
daa
pop
adc
mov
mov
inc
mov
outsb
jg
mov
data16
jge
push
pop
loop
jl
into
daa
jmp
jb
push
loope
mov
ja
add
lret
pop
dec
and
aaa
mov
lods
test
push
fwait
dec
les
add
push
add
push
lret
sahf
xchg
jno
imul
adc
out
xchg
xchg
inc
orb
lahf
sbb
movsb
sub
xor
imul
int3
insb
pop
sarl
das
jns
sahf
adc
out
xor
cli
mov
xchg
fnsave
aam
jo
lods
test
movsb
adc
rcrl
inc
mov
push
pop
pop
hlt
xchg
lods
icebp
add
jns
ds
cld
inc
push
mov
fdivrs
pop
push
js
or
cmp
outsl
and
fs
das
lret
or
call
iret
add
aad
loop
dec
push
clc
in
or
pop
mov
ret
and
jns
jb
inc
push
mov
pop
shrb
lahf
lds
outsb
js
dec
push
fiadds
sub
mov
insb
ss
ljmp
shrl
push
push
inc
push
mov
mov
jnp
arpl
sahf
xchg
mov
sbb
adcb
fcoml
add
xor
xchg
pop
xor
xor
mov
stc
cltd
repz
jle
xor
in
inc
pop
lret
sbb
fstp
push
push
sub
push
mov
sbb
outsb
shrb
lret
and
xor
cmp
fsubrs
ss
add
fimull
pop
push
outsl
push
sub
divb
into
aam
cmpsb
jmp
pop
loopne
notb
xchg
and
rorl
je
mov
sbb
xchg
or
cmp
or
and
add
insb
insb
idivl
jne
mov
pop
sub
xor
lods
inc
aad
test
xlat
scas
xchg
push
ret
cmp
jae
jno
adc
repz
pushf
dec
scas
in
cmp
push
sbb
jg
push
push
xchg
repz
fwait
sarl
out
test
je
pslld
sbb
iret
cmp
xor
pusha
adc
xchg
jns
shrb
mov
pop
sbb
shll
fidivs
push
add
dec
xor
cmp
inc
fstl
inc
or
and
cmpsl
inc
in
mov
int3
mov
fsubs
xorb
pop
jno
scas
dec
or
xor
mov
loop
xchg
mov
xchg
or
push
push
add
andb
inc
cmpsb
jae
repz
jp
inc
add
fistl
pusha
in
je
adc
testl
sbb
int3
push
sub
mov
adc
jg
sub
sub
and
ja
iret
aad
xchg
scas
in
cmp
jge
mov
shlb
mov
mov
jg
andb
dec
mov
sti
sbb
test
xchg
je
xor
fimull
es
push
iret
ljmp
ret
cmp
popa
cmp
push
lods
pop
mov
test
scas
aas
in
es
fnstcw
pop
or
shll
es
lea
out
cmp
cmpsl
dec
fcomps
mov
mov
mov
andl
mov
cld
mov
xor
shll
adc
lock
std
mov
dec
cld
sar
cli
pusha
in
dec
push
outsb
sbb
out
dec
cmp
addr16
inc
hlt
shl
pusha
cmp
outsl
sbb
or
push
fs
call
jne
mov
inc
aad
add
into
pop
cmp
aad
pop
dec
pop
push
cmpsl
fstl
sub
jecxz
rol
adc
push
inc
mov
lods
add
cmp
add
sbb
pop
mov
inc
adc
mov
clc
ljmp
xor
mov
jl
lcall
xchg
jmp
sub
inc
ficompl
adc
sbb
xchg
add
jno
xchg
push
sub
fisttps
dec
mov
test
lcall
mov
or
push
imul
int3
pop
int
ret
jo
and
mov
sar
fs
test
pop
sub
dec
cmp
fsubrl
and
push
cmp
scas
mov
int
dec
rorb
adc
cs
push
orb
lds
in
sbb
and
and
push
cli
jns
dec
push
dec
xor
sub
sbb
fisubrs
aad
callw
or
inc
mov
pop
or
out
xchg
outsb
or
pop
fiaddl
fnstcw
mov
jbe
xchg
je,pt
int3
in
pop
xchg
xlat
dec
cmp
adc
std
dec
cli
cmp
jp
sbb
jge
inc
sbb
std
push
add
push
ljmp
sbb
jae
imul
cs
mov
sbb
push
std
push
into
pop
arpl
push
add
adc
mov
jbe
and
pop
jno
gs
sbb
and
mov
lret
add
cmp
and
js
sbbb
setl
cs
je
mov
orl
lea
icebp
xchg
mov
imul
mov
aas
mov
pop
popf
popf
rcrl
pop
pushf
pop
jo
jne
cmpsl
and
push
jne
push
push
inc
dec
stos
aas
cmp
mov
inc
sub
or
push
in
in
mov
push
pop
pop
mov
fbstp
inc
pop
sti
or
test
mov
push
cltd
js
and
lcall
or
loop
inc
lock
bound
jb
mov
shlb
pop
jnp
jge
push
jmp
jl
xor
jbe
dec
jmp
add
ljmp
add
nop
pop
sahf
jb
mov
lcall
ss
cmp
pop
shrl
push
mov
jnp
mov
rcrl
aad
aad
mov
fimuls
cli
in
jnp
dec
imul
adc
xor
movsb
mov
pop
or
adc
jno
je
shl
mov
push
adc
sub
xchg
mov
je
push
mov
les
add
pushf
push
dec
inc
js
bound
andb
js
cmp
mov
mov
sbb
sbb
mov
add
dec
roll
aas
test
cmp
mov
pop
mov
mov
in
mov
mov
test
push
mov
lods
inc
cltd
in
and
mov
leave
lods
outsb
pop
imul
xchg
inc
or
add
pop
pop
xor
jl
xor
adc
adc
gs
adc
loope
loope
call
out
push
icebp
in
sbb
pop
jae
bound
rorb
jbe
test
push
mov
sub
and
ss
and
sub
int
xchg
ror
fsts
xlat
jbe
cmp
ss
test
jecxz
lock
inc
add
mov
inc
sarb
bound
pop
jmp
mov
ret
enter
leave
cmp
mov
pushf
adc
fisttpl
std
inc
mov
xchg
mov
xor
mov
dec
sahf
pop
mov
faddl
inc
test
lahf
jo
mov
jmp
or
mov
xchg
inc
xchg
or
or
ss
js
fsubrp
out
ds
ret
push
push
loopne
in
test
add
mov
adcl
ss
sbb
icebp
fisubrl
pop
sbb
aaa
push
je
int
nopl
subl
fistpl
sub
cmp
xchg
ficomps
mov
pop
fs
pop
cmp
inc
fdivrl
in
cmpsb
movsl
outsb
lods
test
push
add
cmpsl
lods
movzbl
mov
fsubr
mov
and
arpl
pop
fisubl
push
ret
cmp
dec
out
xchg
scas
out
leave
into
cmp
test
pop
in
mov
mov
scas
mov
inc
xor
in
xlat
inc
mov
dec
sbb
gs
and
shrb
mov
and
loop
lds
fucomp
or
loope
pop
lcall
pop
cmp
or
cmp
nop
enter
orb
cmp
push
add
int
push
jmp
iret
mov
scas
aaa
xchg
test
testl
dec
hlt
lret
aaa
loopne
aaa
xchg
adc
dec
outsb
test
out
jb
dec
pop
cmc
scas
cmp
test
add
icebp
fwait
sbb
das
outsl
xchg
dec
repz
negb
outsl
mov
mov
dec
sub
shr
out
xor
add
pop
andb
shll
push
cmp
sbb
pusha
dec
pop
insl
call
fisttpll
or
int3
lret
inc
jbe
sbb
mov
mov
lea
sahf
sbb
inc
jecxz
divl
jg
mov
xor
mov
jl
ja
out
fsubrl
jl
and
push
test
fnstcw
add
scas
arpl
adc
ljmp
stos
push
jb
or
sub
xor
call
jge
cwtl
fisubrl
jle
and
adc
xor
faddp
int
push
xor
rcrb
je
xor
movd
mov
rcrl
push
or
cmp
mov
jle
lea
daa
ret
xchg
jns
dec
push
cmp
cmp
dec
push
xchg
add
lods
mov
popf
sahf
pushf
movsl
adc
movsb
add
pop
xchg
xor
arpl
imul
lods
add
dec
push
notl
rcll
sub
xchg
sub
aad
jl
lret
sarb
popf
dec
jne
xor
jmp
pop
dec
stc
aas
mov
stos
sbbb
test
and
fwait
push
gs
ljmp
push
add
aaa
pop
fldt
or
sbb
aad
or
sbb
pop
jns
jg
dec
xor
js
int3
ret
or
insl
cmp
addr16
cmc
and
jmp
cwtl
fistl
test
shrb
pop
sub
inc
push
sub
std
ljmp
test
pop
push
fsubrl
mov
subb
in
xor
std
xorb
sbbl
lcall
shrb
negl
fidivrl
arpl
mov
nop
pop
lret
jp
push
nop
cmc
push
mov
adc
or
cmpsl
data16
rcrl
cltd
mov
cmp
shlb
push
cmc
sub
jg
dec
andb
jnp
adc
loope
adc
adc
call
into
nop
loopne
das
into
push
push
add
icebp
or
xorb
jae
shlb
jae
xchg
call
sarb
shr
ret
adc
sti
stos
ja
sahf
mov
xchg
sub
pop
or
cmp
lds
dec
cwtl
stos
jp
out
cmpsl
rcl
fisubs
xorl
cmpsl
inc
aaa
dec
push
xlat
test
cwtl
mov
lock
adc
sub
scas
test
pop
insl
dec
push
scas
cmp
bound
cld
jl
cmp
pop
sbb
push
pop
cmp
cmp
cmp
xchg
push
cltd
pop
fldcw
in
push
jl
jle
sbb
addr16
push
iret
pop
arpl
add
ds
push
aaa
push
or
and
cmp
es
add
xchg
dec
sbb
nop
xchg
int
or
sbb
xchg
and
test
shrl
mov
sbb
sbb
xlat
xor
addr16
mov
inc
cwtl
repz
stos
shll
mov
mov
sahf
xchg
sub
add
and
add
ljmp
aad
xor
enter
outsl
jmp
lcall
loopne
cmp
je
cmp
xor
fcmove
imul
iret
test
mov
sbb
add
dec
sti
push
sbb
mov
in
bound
fstsw
adc
mov
int3
lods
sbbb
out
xchg
cmpsb
jnp
sub
call
mov
js
arpl
xchg
cmp
sbb
dec
loope
or
mov
push
push
jecxz
dec
movsb
pop
outsl
cmp
mov
and
xor
movsb
popf
arpl
mov
jp
pushf
in
xor
xchg
fs
cmp
adc
cmp
test
jecxz
mov
pop
iret
leave
cs
mov
mov
mov
lea
pop
xchg
imul
ficoms
rcrb
pop
xlat
add
add
xchg
jmp
mov
push
jge
jle
fdivrs
add
andb
clc
ja
in
ljmp
sub
jbe
pop
cmp
cwtl
adc
in
push
mov
adc
aad
mov
xchg
arpl
ficoms
add
inc
je
mov
loop
and
mov
lods
mov
mov
negl
or
mov
pushf
xor
daa
sbb
gs
insb
mov
mov
xchg
mov
and
lock
in
dec
call
into
push
mov
cmc
cwtl
lcall
fldenv
dec
cli
fsubr
dec
sbb
lods
js
cmp
fsqrt
or
out
pop
adc
pop
loopne
xor
mov
cli
cmpsb
pop
loopne
ss
and
ds
lret
cmp
mov
repz
popf
xchg
mov
add
flds
mov
lret
jl
mov
pushf
insb
mov
add
and
push
cmpsb
xchg
mov
pop
lods
sarl
add
in
pop
or
in
bound
or
mov
pop
scas
adc
rclb
inc
loop
arpl
shr
ret
mov
cs
insb
jae
adc
test
enter
in
daa
lock
jg
lods
ffree
sbb
sbb
mov
icebp
insl
xchg
and
les
xchg
js
mov
xchg
push
idivl
icebp
and
mov
xor
enter
loop
sbb
dec
dec
cmp
clc
loope
stos
sar
inc
ror
rcrl
pop
cmpsl
imul
pusha
data16
rcrl
inc
mov
inc
cmp
inc
mov
inc
inc
mov
mov
and
jle
scas
cmp
sub
nop
negb
push
push
inc
mov
int
scas
xchg
cs
mov
outsb
imul
pop
mov
ljmp
xor
mov
xchg
sub
xor
add
out
dec
xchg
mov
pop
sbb
popa
cmp
test
sti
daa
pusha
cltd
leave
ja
mov
inc
xchg
leave
mov
adc
sti
sub
lock
data16
repnz
cmp
fcoml
push
xor
adc
jns
pop
pop
fwait
jg
bound
in
mov
pop
cmpsb
dec
outsb
je
out
xchg
addb
test
or
in
outsb
push
daa
jg
jmp
jns
sub
or
mov
push
pusha
mov
push
daa
pusha
fnsetpm(287
lret
mov
mov
jns
fmull
sub
movsb
std
lds
nop
dec
or
lods
enter
shll
dec
pop
mov
xor
xchg
fsubl
aam
adc
mov
jg
pop
arpl
add
fs
or
inc
xor
out
xor
push
wbinvd
pushf
inc
adc
and
outsb
fldl
call
aad
jg
add
popa
cmpsb
or
jl
fcompl
mov
mov
mov
add
sbb
mov
dec
adc
out
sbb
xor
jno
imul
push
rclb
inc
popf
fmuls
mov
inc
das
loope
lcall
int3
mov
sbb
cmp
mov
mov
ljmp
movsl
nop
mov
sqrtps
adc
cld
pop
sub
adc
test
cmpsb
adc
mov
test
mov
mov
hlt
cmpsb
outsb
clc
test
iret
or
adc
mov
or
pop
or
add
inc
push
mov
popa
arpl
mov
dec
insb
pop
adc
and
xchg
mov
int
mov
outsl
mov
fs
in
push
cmpsb
repz
push
lods
cli
jmp
push
push
and
adc
je
std
pushf
sub
mov
mov
xor
lds
clc
jnp
mov
loopne
sub
ret
fiaddl
mov
dec
xchg
sub
jno
ja
inc
mov
out
inc
mov
mov
sub
popf
push
dec
mov
push
inc
fcmovnbe
addr16
pop
adc
gs
cmp
imul
testl
cmpsb
shl
filds
add
pop
push
xchg
sbb
jp
mov
scas
push
and
sbb
mov
ss
cmp
lret
xchg
rcl
fsubrs
sbb
sub
and
add
mov
pushf
adc
xchg
sub
addb
cmpb
mov
add
cltd
scas
and
rcrb
repz
jo
mov
out
imul
inc
pop
xchg
push
pop
dec
cmp
leave
sbb
out
xchg
xchg
mov
testl
shl
movsl
jae
sahf
in
sbb
sub
or
adc
jnp
aas
or
and
cltd
mov
sub
int
popf
insl
enter
mov
mov
and
rclb
into
imul
mov
push
insw
adc
movsl
ror
mov
and
xlat
pop
and
hlt
mov
imul
scas
inc
pop
sbb
outsl
pop
sbb
pop
jbe
out
mov
sub
dec
jge
ror
hlt
jp
lock
xchg
inc
push
dec
sub
and
inc
cltd
adc
je
lods
mov
sub
inc
rcll
jl
mov
ret
cli
inc
mov
jmp
cmc
sbb
scas
pop
clc
fs
mov
and
pop
adc
mov
sbb
cmp
mov
cmp
jecxz
add
mov
test
loop
popf
int
mov
xor
aaa
roll
mov
add
xor
dec
mov
rcr
sbb
lods
add
movsl
mov
in
mov
sbb
addr16
roll
ss
pop
adc
jmp
call
inc
mov
adc
jl
pop
mov
mov
leave
shll
cld
add
mov
xchg
repnz
negl
mov
rol
add
jne
imulb
jle
movsb
xchg
jb
jecxz
mov
call
sbb
ret
ja
or
mov
push
mov
int3
addb
out
sub
xor
in
cli
pop
outsl
mov
jbe
sti
pop
movsl
fwait
int3
cwtl
incl
jle
popf
xor
jp
mov
mov
negb
jb
pop
adc
adc
pusha
fisubs
add
mov
stc
cwtl
sti
mov
fdivs
mov
mov
aam
js
push
lds
loope
lret
rcrl
cmp
rcrl
mov
sub
mov
mov
inc
les
sub
into
iret
sbb
cli
repz
popa
inc
lds
push
das
adc
cwtl
mov
sbbl
push
stc
mov
movsb
adc
sti
and
push
pop
xor
stos
test
mov
dec
cmpsl
push
pop
enter
or
sub
test
jg
pop
into
fcomps
in
rol
cmpsl
mov
mov
sub
fistl
dec
notl
aad
cwtl
sbb
andb
clc
and
iret
fbstp
pop
outsb
cltd
jo
or
ret
adc
loope
nop
aaa
inc
sbb
in
adc
push
or
int
lock
cmpsl
pcmpgtw
mov
and
lods
sub
inc
insb
inc
pushf
gs
sbb
inc
rcll
testb
sub
testb
in
ds
imul
neg
sub
popf
into
xor
andl
pop
ja
loope
ja
cmpsb
and
ret
add
mov
int3
xor
aas
pushw
mov
or
or
mov
popf
adcb
mov
jnp
cmp
sbb
cmpsb
inc
clc
jg
shll
imul
jl
cmp
mov
inc
add
mov
xor
add
pop
icebp
fistpll
adc
out
aam
xor
push
pop
rcrl
lcall
lds
mov
push
fldcw
jnp
and
sub
dec
mov
ds
jmp
loope
fwait
pop
adc
xchg
sub
jbe
ficoml
mov
xchg
fidivl
popa
inc
scas
in
mov
aad
addr16
fs
cmc
push
push
jbe
mov
pop
out
pop
cmp
cmp
lahf
aam
mov
jbe
mov
mov
add
dec
cltd
cwtl
out
aam
sbb
or
movsb
in
addr16
aaa
in
enter
push
pop
addr16
cwtl
adc
cmp
sbb
jecxz
lahf
push
iret
push
mov
inc
or
fmuls
adc
movnti
adc
pop
sub
inc
inc
mov
cwtl
sub
xchg
rorb
mov
pop
and
fwait
lock
jl
cli
dec
or
xchg
out
and
fdiv
filds
ljmp
jb
inc
cs
scas
jb
lret
outsb
imul
cmp
pushf
in
int
cmp
scas
insl
add
mov
xchg
mov
shlb
push
or
icebp
mov
mov
cltd
fwait
inc
cli
sub
rclb
xchg
pop
into
aad
mov
xor
test
mov
fadd
cs
or
movsb
aad
xchg
dec
sub
stos
pop
add
data16
jmp
dec
scas
add
xlat
jp
int3
ret
sbb
movsl
pop
cmp
sbb
jecxz
into
or
cmpl
jno
testb
test
leave
outsl
loope
mov
cmpsl
hlt
dec
addl
or
jg
xchg
push
xor
shrl
push
add
test
aam
cmc
xchg
xor
outsl
imul
push
inc
mov
sub
mov
lods
stos
sub
int3
daa
int
movsl
mov
bound
adc
jmp
push
sti
cmp
add
ror
jecxz
jbe
mov
notb
outsl
cltd
shlb
jge
inc
aas
or
cmc
or
and
in
adc
push
mov
mov
lods
lret
and
pop
dec
into
push
cwtl
fsubrs
int3
ret
mov
push
mov
xor
or
movsb
sub
aas
js
mov
push
lret
xchg
xchg
fnstenv
jns
xchg
or
cwtl
call
mov
jbe
stc
pop
fsts
leave
mov
andl
or
inc
or
xor
bound
mov
addb
dec
or
adc
in
test
pop
hlt
in
pop
pop
out
cld
mov
int3
testl
dec
and
sbb
dec
cwtl
cmp
pop
dec
mov
bnd
push
lods
hlt
jne
mov
mov
out
out
sti
mov
movsl
aam
rcl
push
test
repz
cmpsb
fistpll
mov
mov
adc
fadd
inc
ret
arpl
xor
dec
push
shll
or
mov
mov
cmp
ss
xor
arpl
lea
jecxz
insb
in
cmpsb
pop
lods
das
xchg
out
jno
push
adc
iret
popa
sub
adc
or
test
adc
mov
lods
push
ret
dec
push
jmp
dec
in
mov
jne
jmp
push
loopne
xor
and
ja
xchg
cmp
arpl
aad
pop
fisubrs
jmp
pop
jecxz
sub
pop
jle
push
mov
jge,pn
push
js
xor
mov
add
movsl
shl
push
inc
mov
xor
push
outsl
loope
mov
adc
sahf
mov
xchg
xor
ret
xor
sahf
adc
imul
cmp
dec
sbb
dec
mov
aaa
inc
mov
cs
mov
sub
add
fiaddl
daa
mov
insl
jae
sti
mov
mov
sbbb
ss
ficomps
and
xor
or
adc
outsl
xor
mov
lods
lea
ficompl
inc
sti
stc
movsl
loopne
mov
mov
loope
lock
in
mov
les
je
inc
cmp
pop
leave
mov
inc
aam
xor
sbb
mov
xor
lret
ljmp
scas
inc
push
push
xchg
ljmp
mov
jbe
xor
jae
outsb
jno
pop
imul
leave
fwait
add
pusha
into
arpl
cltd
daa
sbb
adc
adc
roll
xor
adc
push
lods
repnz
popf
jp
repnz
arpl
cmc
outsb
jae
ficompl
adc
mov
inc
pushw
and
pop
cmp
jae
xchg
pushf
push
sbb
or
mov
sub
in
popa
dec
mov
dec
iret
test
mov
lcall
aad
or
dec
loopne
mov
push
bound
sub
inc
ljmp
mov
or
dec
aam
or
mov
out
in
pop
xor
adc
sub
jp
outsb
loopne
cmp
sti
mov
mov
or
dec
cmp
test
inc
lahf
or
insb
shrl
sti
mov
insb
sbb
jno
pushf
cmp
cmpsl
push
sbb
inc
daa
pop
leave
xchg
in
movb
jnp
aas
mov
pop
push
int3
lock
jmp
push
inc
xchg
mov
dec
je
in
imul
daa
loopne
repz
hlt
dec
sbb
pop
cmpsb
xchg
ffreep
out
fwait
add
sub
jle
jnp
cmp
imul
or
std
xlat
cmc
cmp
cmp
jle
inc
shlb
arpl
into
sbb
cmp
gs
mov
pop
les
or
lcall
leave
or
xchg
cmp
cwtl
fistl
push
out
jo
mov
sbb
mov
mov
flds
cmp
or
scas
daa
push
je
fcmove
jge
scas
fdivrl
and
adc
call
mov
enter
jne
scas
in
cmp
pusha
pop
inc
imul
mov
inc
xlat
jnp
aaa
xchg
aaa
or
js
movsb
xor
subl
lcall
jg
mov
lds
test
pusha
mov
mov
adc
pop
cmpsb
lcall
or
sbb
xchg
fwait
dec
pop
add
in
xchg
xor
lods
cld
lret
jg
test
cmp
fwait
inc
fcompl
test
fs
mov
fmuls
out
shll
dec
test
xlat
scas
add
cmp
adc
pop
sbb
inc
mov
mov
sub
push
lods
loopne
sub
cli
dec
in
or
xchg
mov
mov
adc
rclb
inc
jp
rclb
iret
and
dec
and
adc
out
pop
inc
aad
mov
iret
push
mov
lods
pop
xlat
xchg
ss
inc
cli
add
sti
jae
add
sti
mov
roll
insl
push
mov
shll
push
mov
repz
insb
jb
pop
fs
jno
in
and
adc
jmp
push
pop
es
pushl
dec
sti
and
dec
popa
jno
jge
shll
ss
push
scas
add
pop
movsl
xor
adc
cli
inc
cmp
pop
movsb
push
mov
sbb
jecxz
xor
cmp
out
addr16
pop
mulb
jb
xor
into
and
xchg
xchg
cs
int
rclb
lret
and
add
mov
test
pop
stos
in
mov
addr16
cmp
adcb
sbb
mov
repz
std
bnd
pop
orl
pop
daa
cwtl
mov
or
or
repz
xchg
xor
arpl
fbld
lds
loop,pn
jo
adc
test
jne
cmpsl
mov
inc
pop
mov
push
push
dec
mov
xchg
pop
add
out
sbb
loop
jge
sub
xlat
out
jbe
inc
xor
and
or
in
test
dec
or
or
dec
jns
xchg
or
pop
repnz
pop
daa
fildll
scas
xchg
xchg
pop
adc
xor
cltd
outsb
mov
fldt
aaa
jp
shr
imul
out
xor
or
inc
or
sbb
jo
jne
rolb
testb
icebp
popa
in
mov
xor
or
stos
pop
sbb
sbb
mov
es
mov
push
and
movsl
lret
pop
mov
mov
mov
mov
loope
xor
sahf
popa
inc
std
fldcw
outsl
xchg
push
push
sbb
inc
ret
and
stos
fisubl
into
daa
add
dec
mov
push
insb
mov
mov
in
jecxz
mov
iret
mov
xor
and
mov
mov
xchg
dec
icebp
xchg
in
movsb
or
imul
outsl
clc
ljmp
pop
fdiv
dec
dec
insl
repnz
hlt
or
jge
jae
setbe
jo
jb
jmp
jg
into
inc
rcll
push
xor
ret
mov
pushf
clc
lds
push
cmp
xchg
mov
xchg
adc
dec
cmp
mov
fnsave
cmc
loope
ret
cmp
insl
push
icebp
leave
in
mov
lea
cmp
cmc
jo
dec
mov
push
jb
loop
xor
mov
ljmp
push
popa
fsubrs
adc
call
icebp
pop
xor
andl
inc
push
enter
cmp
bnd
mov
aas
test
call
mov
push
cmpb
mov
jle
mov
xlat
es
jmp
out
push
movsb
clc
sti
cli
je
mov
mov
mov
mov
mov
addr16
or
roll
or
std
mov
jne
mov
stos
dec
adc
ret
pop
mov
jb
adc
inc
out
pop
mov
lock
jae
out
insb
and
movsb
scas
lock
mov
or
int3
xchg
xlat
out
dec
push
test
lods
and
jle
lret
cmp
sub
or
sbb
popf
sti
xlat
punpcklbw
idivl
dec
push
repz
jb
mov
push
test
adc
cwtl
push
mov
xchg
mov
pop
outsl
inc
jg
xchg
je
aas
mov
ss
or
imul
mov
xor
divb
clc
stc
sub
loopne
dec
out
in
xchg
fs
scas
adc
lcall
mov
in
xchg
mov
repnz
fmuls
movsl
in
aam
sbbl
shrl
cmp
imul
and
mov
push
mov
test
inc
or
dec
sub
movsl
out
mov
and
push
sub
sub
add
inc
xor
insb
lods
xchg
shlb
movsl
enter
cmp
ret
mov
mov
xchg
ja
movsb
stos
or
shr
xor
in
push
mov
out
xchg
mov
sbb
rcrl
mov
mov
lret
xchg
arpl
mov
scas
orb
loope
dec
push
cmpsl
and
pusha
arpl
add
ffreep
test
pop
daa
add
ds
je
inc
or
or
movsb
icebp
cmp
in
push
data16
sahf
add
test
mov
mov
mov
mov
sbb
mov
in
mov
push
mov
push
adc
jbe
and
pop
mov
adc
shr
cmpsl
ret
aaa
mov
es
jne
lea
jns
and
stos
pop
sub
jbe
fiaddl
jno
cmpl
push
push
leave
pop
xchg
jle
hlt
insl
lods
push
xchg
sub
xchg
push
and
mulb
add
jo
lret
int
cmc
in
sbb
mov
dec
xchg
popf
pop
call
shlb
es
dec
pop
test
cmp
shlb
pop
lds
dec
dec
lds
dec
loopne
sbb
push
xchg
lock
test
xor
sti
push
xor
sti
int3
jmp
and
jns
cli
std
in
mov
addl
bound
pop
popf
and
mov
adc
add
cltd
and
pop
int
fcom
rol
sbb
daa
stos
test
jnp
mov
btsl
push
cwtl
jne
jge
sbb
scas
ds
inc
jo
test
loop
sbb
mov
xor
ss
and
xor
movsl
inc
rorl
stos
mov
xchg
sub
enter
xor
movsl
ret
cmc
rep
not
clc
incb
lods
push
pop
sar
dec
inc
xchg
xlat
sub
or
repnz
xchg
or
sub
movsb
mov
incl
popf
cmpsb
push
adc
lock
jno
cld
scas
mov
out
jne
push
pop
xchg
mov
push
mov
insl
addl
inc
cmpl
mov
xor
inc
xor
shr
orl
dec
mov
cmc
lock
stos
xlat
jg
cmp
mov
mov
les
outsb
xchg
loopne
cmpsl
popf
pop
daa
arpl
int
and
sahf
jecxz
push
loope
lcall
iret
mov
xchg
sahf
ljmp
xor
out
cmpsl
push
mov
stc
scas
push
push
inc
mov
mov
add
aam
sti
or
cmp
loope
fdivrl
mov
les
mov
test
movsl
mov
shrl
mov
mov
add
jmp
cmc
aaa
pusha
xlat
jecxz
xchg
jmp
fimull
mov
imul
or
int3
push
imul
shl
dec
mov
ss
dec
xchg
leave
andl
mov
inc
std
imul
cmpsl
repnz
test
test
int
out
cmovs
fists
mov
sbb
xor
in
xchg
mov
imul
ret
push
push
out
mov
imul
push
ja
push
lods
repz
or
pushf
sub
loope
xchg
mov
sub
xchg
and
scas
xchg
xchg
mov
lods
and
mov
jno
les
ss
mov
out
imulb
sub
and
ret
xchg
mov
ja
insl
les
arpl
decb
shl
ljmp
popf
rcl
fs
scas
mov
or
mov
sub
shrb
sahf
popl
sub
sbb
sbb
fldl
pop
movsb
dec
loope
xchg
jno
xchg
adc
imul
test
ljmp
or
cmpb
rcll
inc
dec
and
jae
jno
jg,pt
pop
sbb
jb
push
ret
push
sub
inc
inc
mov
dec
imul
in
xchg
and
pushf
or
fsubrs
repz
ficoml
nop
or
lock
jl
into
inc
adc
mov
jg
and
repz
insb
sti
int
adc
movb
mov
out
dec
out
push
sbb
insl
mov
sbbl
arpl
sbb
js
push
js
loopne
push
fdivrl
repz
adc
aam
mov
mov
and
pop
popa
je
dec
sub
fs
push
aam
adc
ds
and
jge
dec
mov
mov
icebp
xor
mov
inc
xor
and
test
jle
and
pushf
cmp
addr16
ret
rclb
mov
xchg
mov
pop
in
repz
imul
fcomps
mov
fldl
adc
adc
mov
cmp
cli
add
dec
loopne
mov
or
inc
sbb
sub
loopne
sub
fwait
xor
aaa
int
adc
cmp
inc
lock
add
enter
aas
outsl
shll
or
sahf
or
sbb
jo
sbb
dec
pop
pop
pop
int3
lock
fisttpl
sbb
outsb
into
adc
outsb
shll
pop
jl
jns
out
lock
hlt
sub
jge
aas
sub
and
js
xchg
shlb
pop
fisubs
loope
xchg
outsl
or
in
lods
push
sbbl
or
andb
inc
cmp
push
dec
add
arpl
push
adc
push
out
outsl
cmc
call
leave
jmp
les
dec
andl
inc
test
ret
adc
jbe
xor
dec
cmpsb
or
loope
xchg
add
push
xchg
xchg
jl
cmpsl
pop
add
cli
mov
or
fistpl
sbb
sahf
outsb
fcmovne
mov
cmp
cmp
fstpt
fisubrs
gs
std
and
arpl
cli
mov
lahf
cld
pop
push
mov
add
in
pusha
or
sub
adc
dec
xor
mov
add
dec
pop
ss
cmp
mov
leave
scas
mov
inc
sbb
dec
and
mov
sub
loop
or
jb
xor
inc
aam
inc
notl
push
enterw
popf
mov
push
lahf
lret
cli
in
pop
push
sub
and
dec
in
fcoms
in
fnstcw
xor
or
cmp
insl
mov
test
inc
ljmp
or
pop
neg
pop
mov
cmpsb
or
jge
add
adc
jne
lods
cltd
inc
mov
notb
lods
sub
scas
dec
fnsave
jge
jb
repz
outsb
ret
mov
ljmp
xchg
in
sahf
pop
jns
mov
sub
testl
bt
xor
adc
or
push
jmp
inc
jge
lcall
sahf
lds
int
andb
decl
add
addr16
out
in
sub
arpl
out
pop
fdivl
push
flds
xchg
push
aaa
push
dec
dec
cmp
jbe
fs
test
xor
push
cmp
repnz
lahf
aad
pop
in
les
push
push
aas
pop
in
shlb
mov
xorl
je
and
xchg
inc
lret
insl
cltd
les
adc
sarb
xchg
daa
mov
fucom
dec
into
jb
and
or
adc
cld
cmp
data16
aas
aaa
outsl
pop
imul
ss
fwait
into
cmpsb
lahf
ret
arpl
and
cmpl
popa
push
call
xchg
popf
jecxz
lret
shlb
xorb
ljmp
shl
ja
insb
test
push
mov
out
in
xor
outsl
xorb
lcall
pop
mov
pop
sbb
add
add
mov
jno
repnz
call
subb
loope
int
pop
push
loopne
mov
jno
lcall
std
cmpsb
ljmp
dec
fsub
jno
inc
jmp
jns
test
jge
ljmp
pop
repnz
add
and
outsb
add
pop
fistpl
adc
out
rorb
sbb
fucomp
adc
daa
dec
ss
inc
pop
notb
mov
jp
sti
lret
cmpsl
jae
or
addb
mov
jecxz
xor
mov
or
aas
shlb
xchg
adc
test
out
fs
mov
fsubrl
xor
aaa
xor
mov
loopne
cmp
adc
mov
int3
cmpsl
mov
das
mov
mov
dec
test
je
test
subb
and
cmp
jno
addr16
cld
cmc
bound
mov
push
jle
or
xor
push
jmp
cli
adc
sbb
inc
sub
jle
and
mov
sahf
add
divps
jp
shl
clc
jecxz
push
xor
xor
inc
sbb
and
mov
mov
pop
loop
add
inc
dec
xchg
xchg
aam
leave
and
insb
scas
scas
cltd
imul
lcall
in
mov
shlb
jae
comiss
rcll
inc
mov
fistps
sub
loope
cmp
adcb
out
push
mov
push
fcmovnbe
fcompl
clc
push
sub
jmp
iret
adc
mov
mov
int
movsl
clc
sub
stos
movsb
mov
iret
and
mov
xchg
mov
ja
jp
imul
cmp
icebp
dec
pop
adc
xchg
mov
ret
xchg
or
ds
xchg
jg
aaa
jo
push
inc
or
dec
insl
cmp
sbb
imul
mov
rolb
les
bound
int
cs
xchg
jo
pop
stc
mov
cmp
or
jmp
std
mov
or
adc
sub
test
mov
dec
popa
add
fwait
cmp
ljmp
repnz
add
mov
cmp
inc
in
lret
sub
push
xchg
dec
cmpsb
jl
sbb
sti
int3
scas
jg
fstpt
repnz
cmpb
pop
ss
xchg
jmp
das
bound
pop
stos
sub
in
cld
cmpl
insb
lcall
movsl
aam
test
mov
jo,pn
in
jge
adc
xchg
test
mov
daa
icebp
mov
addr16
ljmp
daa
sahf
sub
pop
or
test
add
sbb
ja
stos
out
mov
shll
mov
add
adc
dec
cmc
daa
gs
push
pushf
stos
sub
lock
add
cmpsb
jmp
fnstcw
pop
mov
sbb
shl
js
mov
sub
sub
sbb
lret
shrb
mov
movsb
cs
fsubs
xchg
ficompl
cmp
mov
cmc
push
cmpl
inc
lahf
dec
clc
xor
out
adc
bound
mov
dec
xor
adc
ss
rcrb
inc
popf
pop
cmp
repz
mov
mov
mov
pop
call
xchg
inc
in
lahf
push
lret
mov
xlat
jmp
jg
cwtl
call
out
pop
sti
dec
inc
jle
jle
and
out
loopne
rcrl
pop
xor
adcl
div
fdivs
gs
outsl
stos
jno
in
adc
pop
push
outsl
mov
dec
hlt
jecxz
cs
popf
fistpl
adc
mov
pop
xchg
fistpl
push
mov
add
cld
decl
push
dec
jo
pop
jns
gs
jl
xchg
rcrb
mov
lock
sbb
dec
pop
fidivrs
adc
mov
push
xchg
cmp
dec
fdivrl
shlb
pop
leave
shr
cmp
aaa
rorl
lock
or
in
xchg
aaa
push
leave
push
cmp
idivl
rcr
push
xchg
jg
bound
pop
or
dec
push
add
mov
jb
std
lods
lea
shrb
movsb
aas
inc
sub
mov
push
pop
mov
fsubrs
gs
mov
pop
cmc
iret
jo
inc
jns
pushl
inc
sbb
sbb
add
mov
in
int3
mov
int
lret
jp
lret
cmp
scas
add
ret
xchg
or
test
std
lahf
adc
adc
push
mov
imul
mov
ss
push
in
outsl
call
popf
sarb
out
shll
add
push
lods
pop
mulb
sahf
dec
lock
imul
pop
mov
mov
arpl
lods
in
out
shr
xchg
add
xchg
mov
fstpt
hlt
inc
push
mov
xchg
dec
aam
xlat
mov
roll
lds
dec
pushf
outsb
test
cli
cmp
pop
ret
pop
movsb
mov
jge
shll
mov
sub
xor
sbb
add
mov
push
mov
jmp
sbb
xlat
sbb
mov
mov
mov
insb
orb
sub
cmp
test
fimuls
call
not
mov
flds
mov
mov
jecxz
xchg
mov
sub
ret
mov
and
das
jbe
jo
lahf
xchg
push
imul
xor
inc
shlb
gs
and
xor
or
push
out
xchg
rcr
cwtl
cmc
loope
je
xchg
outsb
mov
add
aam
mov
in
sub
out
fldt
lds
mov
mov
cmc
arpl
sub
loopne
xor
adc
out
test
dec
xor
fidivs
adc
mov
in
shrb
jb
daa
loopne
add
insl
daa
mov
aas
je
jo
add
into
or
repz
jns
sahf
mov
popa
mov
inc
dec
fwait
stos
cmp
sbb
fiadds
jg
or
or
push
dec
push
dec
pop
mov
ds
lret
fs
outsl
hlt
fcompl
sahf
fdivrs
in
movsl
add
fadds
pop
ds
pusha
sbb
xor
fwait
clc
pop
pop
jo
loopne
scas
sbb
ja
lds
jb
dec
jnp
loope
lahf
inc
and
lds
jmp
je
dec
mov
and
std
or
xchg
test
std
xor
and
out
xchg
andl
and
cli
idivl
xchg
loop
sbb
test
pop
push
inc
bound
lret
jge
mov
inc
incl
pop
imul
pop
cmc
enter
test
mov
cmp
inc
outsl
faddp
arpl
es
insl
add
sbbb
push
fs
xchg
ret
in
push
insb
repz
mov
stos
call
ret
scas
adc
repnz
cmp
andb
sar
pop
cs
cmpb
push
xchg
ja
fdivr
lahf
jp
dec
decb
dec
fiaddl
push
pushf
int3
icebp
sub
pushw
pushf
xchg
lret
xchg
and
xchg
jns,pt
movsl
mov
mov
dec
out
sub
movsb
pop
lcall
inc
add
dec
pop
lcall
outsl
daa
xor
mov
mov
mov
out
sti
cmpsb
sbb
jge
lcall
xlat
sub
data16
out
popa
rcrl
adc
or
xor
add
fistpll
xchg
and
mov
aaa
fildl
dec
pusha
lock
xor
std
jecxz
dec
xchg
or
mov
sti
into
in
adc
popa
xchg
arpl
imul
ljmp
xchg
or
into
ss
pop
xor
out
jp
jnp
push
int
mov
loope
mov
mov
push
add
mov
test
and
sbb
out
jmp
lret
cmc
and
mov
pusha
jno
cmpsb
lods
mov
jge
cwtl
fidivs
cmpsb
fldcw
test
loope
push
lea
aaa
mov
nop
jns
xchg
mov
push
imul
adc
adc
int
adc
pop
sub
sbb
dec
cmp
xor
pop
add
dec
lds
push
ja
ret
fcoml
cmc
push
sub
cmpsb
pop
dec
dec
pop
dec
add
sbbb
cli
testb
insb
jnp
sbb
adc
mov
xchg
dec
push
test
sti
cs
adc
insl
push
add
mov
outsl
and
xor
mov
xor
xchg
bound
das
pop
dec
adc
mov
das
insb
rol
and
push
jae
dec
sbb
and
movsb
rolb
jae
xor
lock
gs
mov
sub
mov
inc
push
pusha
inc
inc
fdivr
lds
push
sub
inc
inc
and
stc
jecxz
lods
ljmp
xor
lods
jmp
cmc
inc
jno
into
test
add
stos
rolb
sbb
dec
stc
jbe
mov
ds
xchg
repnz
fwait
out
sahf
imul
jne
mov
stc
fildl
jae
out
jns
fadd
adc
inc
sub
sbb
xor
jns
popf
ss
fistl
jmp
xor
jae
mov
mov
or
jg
xchg
inc
jmp
jle
ficompl
inc
push
nop
jbe
sbb
dec
shll
cmp
mov
sbb
inc
sahf
mov
xchg
cmp
addb
arpl
loopne
mov
xchg
ss
jl
dec
mov
inc
jmp
mov
and
lods
shlb
imul
push
out
lds
or
adc
aaa
mov
in
out
jg
push
idivl
out
inc
xchg
in
mov
push
push
in
ds
jmp
push
movsl
cli
mov
add
scas
addr16
repnz
test
add
in
mov
mov
xchg
or
cwtl
mov
aas
jecxz
clc
cmp
int
notb
mov
pop
pop
mov
int
test
insb
call
xchg
out
jbe
jo
leave
movsl
pop
push
mov
cli
and
jmp
mov
or
or
es
pusha
fwait
push
outsl
dec
dec
icebp
mov
mov
lret
jb
mov
int
scas
push
fidivl
mov
add
fs
and
jge
frstor
push
push
bnd
jmp
inc
stos
data16
mov
and
dec
lret
repz
or
jge
in
aas
push
call
xchg
dec
and
adc
sbb
add
mov
jge
repz
xchg
mov
xchg
or
xchg
adc
fcom
scas
jno
shl
lea
aad
mov
xor
in
push
mov
idiv
fdivrs
xor
out
ret
cmc
popa
test
es
popa
or
adc
fiaddl
dec
out
das
popa
cmpsl
pop
and
dec
inc
and
pop
sbb
push
call
bnd
and
int
adc
xchg
xor
fldt
addr16
idivl
es
loope
pop
xor
sub
push
stc
jb
movsb
fldl
lea
lods
xor
jp
test
in
outsb
sar
pop
or
and
mov
cs
sti
aaa
sbb
out
mov
in
inc
mov
pop
dec
inc
add
push
push
shll
and
leave
pop
push
jl
xchg
mov
dec
mov
repnz
rorb
icebp
pop
ss
scas
dec
sbb
sbb
xor
mov
movsb
mov
jnp
imul
add
ja
cmp
lods
hlt
fdiv
fwait
lret
xor
js
jecxz
movsl
addr16
mov
mov
mov
mov
xchg
xchg
idivl
push
lock
sub
sahf
hlt
ret
mov
sbb
xor
dec
and
mov
inc
rcl
repnz
pop
insb
clc
ds
rcrb
add
inc
add
cmpsb
adc
ds
pop
mov
jnp
in
dec
mov
cli
inc
cmp
mov
ja
shll
dec
cbtw
mov
pop
inc
int3
je
and
mov
fidivrl
mov
in
mov
jecxz
adc
dec
xlat
adc
insb
adc
adc
or
jo
vmovshdup
repnz
in
es
xor
sbb
aas
lods
add
push
roll
pushf
faddl
imul
adc
inc
aam
jb
rclb
push
stos
lret
dec
mov
push
leave
push
push
cmc
sub
fstpt
in
enter
mov
pop
insl
jle
rep
movsl
jle
int3
dec
jb,pt
scas
xor
jl
xchg
mov
cmp
aad
ret
sbb
sti
mov
shl
push
loop,pt
adc
data16
xchg
push
ds
inc
repz
ss
into
sti
lods
cli
int3
or
jno
sbb
aam
in
xchg
das
add
dec
and
jl
fnstsw
fnstenv
adc
aam
fwait
xor
arpl
call
and
adc
fsubl
xchg
ja
mov
xchg
mov
enter
inc
push
inc
testb
mov
jbe
pop
add
or
adc
inc
int
mov
cs
int3
fdiv
xor
sbb
insb
into
sub
ret
cwtl
cltd
out
push
roll
scas
pop
aaa
inc
mov
pop
popa
and
pop
clc
les
pushf
daa
fcoms
mov
stc
adc
pop
pop
icebp
int3
ret
pusha
inc
adc
push
into
sbb
mov
lahf
outsl
iret
lahf
push
mov
lret
pop
and
fstpl
mov
lahf
xchg
int3
js
int
mov
inc
lahf
push
adc
xchg
ljmp
jbe
mov
pop
loopne
sbb
mov
cmp
cmp
int3
sahf
jns
arpl
cmp
push
or
push
adc
xchg
and
sbb
add
mov
cmpsb
cmp
xchg
lods
lea
aam
mov
push
movsb
cmp
push
popf
xor
jnp
or
stos
xchg
cli
cmp
out
pushf
or
or
int3
test
lret
or
sub
xchg
filds
cmc
andl
adc
xchg
popa
jnp
xchg
push
cmpsl
ds
jo
in
std
pop
arpl
cmp
mov
mov
ja
cmp
je
in
decl
negl
jo
notb
push
push
loop
jne
sbb
ret
iret
cs
push
aad
aad
call
sub
push
cs
out
mov
or
rcrb
cmp
clc
pop
in
arpl
imul
sub
inc
jnp
mov
mov
pop
pop
stos
mov
in
cltd
test
jne
sahf
fcomip
pop
add
and
leave
xchg
cmp
or
mov
xchg
imul
inc
jbe
sarl
xchg
shl
add
int3
cmp
pop
xor
ficoms
mov
jo
sbb
jge
scas
push
mov
jle
adc
mov
cmp
and
addr16
mov
mov
inc
sub
jbe
jno
fstl
mov
out
or
push
sahf
hlt
cmp
sub
fs
jne,pn
ljmp
je
mov
mov
mov
push
mov
movsl
mov
inc
xor
andl
movsl
jb
push
xlat
lret
mov
pusha
dec
jnp
jnp
inc
sahf
stc
in
mov
ss
iret
dec
lods
fwait
pop
cmp
movsb
lods
dec
xchg
cmp
adc
movsl
inc
cmpb
sub
xor
or
aad
sti
jl
lret
bound
mov
es
or
nop
and
xchg
nop
jl
rol
sub
scas
pop
jge
adc
and
jmp
aaa
gs
ret
inc
dec
sahf
es
data16
daa
fidivs
mov
rorl
loopne
ret
pop
inc
decl
sahf
mov
dec
andl
push
movsb
mov
rorl
sub
mov
inc
inc
sbb
in
jae
out
jno
rolb
outsl
call
stos
pop
mov
enter
dec
xor
sbb
mov
ds
jl
repnz
lea
mov
mov
cltd
scas
mov
int3
push
cltd
inc
pop
pmullw
xor
faddl
shrb
arpl
out
mov
adcb
test
mov
inc
push
stos
xchg
push
outsb
ss
jno
mov
push
xlat
push
fisubrs
lock
inc
fcmovnu
fistpll
iret
sbb
stos
insb
sub
dec
inc
pop
mov
out
adc
in
xchg
sub
push
jecxz
fisttps
mov
cmp
dec
stos
sub
push
sti
ja
adc
movsb
mov
mov
xor
xchg
loop
inc
lret
push
xor
cmp
jecxz
in
pop
xchg
push
rcll
sbb
jne
inc
arpl
ds
inc
shlb
es
outsb
and
xchg
add
repz
insb
stc
mov
or
std
aas
scas
pop
cmpsl
adc
repz
fmull
int3
mov
or
mov
out
xchg
nop
push
je
sbb
or
fucom
add
add
jp
aam
fidivrs
int3
test
pusha
xor
or
push
das
imul
es
cmc
jmp
mov
imul
cmp
and
xor
test
into
in
stc
mov
sahf
lods
or
loope
imul
addr16
jg
sahf
cmp
jne
imul
popf
lds
jnp
nop
pop
test
cs
mov
pusha
idiv
cmc
iret
int3
mov
fldl
push
mov
int3
push
add
pusha
mov
movsl
push
test
dec
mov
cmp
das
imull
pop
imul
outsb
insb
rolb
sbb
mov
add
and
adc
push
aad
repnz
test
jl
test
cmp
push
xchg
sub
xor
cmp
shrb
enter
call
aas
dec
hlt
js
outsb
cmc
jnp
mov
inc
push
testl
iret
cmc
mov
and
pop
add
cmp
xchg
mov
dec
faddl
cmp
add
cmp
sti
mov
push
mov
jg
call
pop
jge
shll
mov
push
icebp
push
push
lds
inc
clc
mov
enter
movsb
lret
mov
jae
fldcw
jecxz
jg
inc
into
xor
jo
enter
adc
mov
push
or
imul
loope
xor
outsb
mov
test
ret
outsl
icebp
mov
testl
cli
popf
gs
add
sbb
das
inc
decl
hlt
sub
movb
cmp
add
ret
or
xchg
call
lock
scas
xchg
out
pushf
xchg
dec
xor
xor
sti
mov
sub
fcompl
nop
in
sub
mov
push
lret
rcrb
pop
and
leave
inc
lea
inc
pop
cmp
pop
test
jno
add
jmp
jo
sbb
inc
pop
int3
fisubl
cld
mov
nop
mov
cltd
cmp
xchg
adc
sbb
packssdw
dec
mov
mov
add
sbbl
sub
mov
cld
call
and
xchg
cld
outsb
cli
xor
icebp
jp
repnz
xchg
mov
pusha
mov
fidivl
push
cmp
daa
lods
xchg
xor
inc
lock
popf
jne
popa
subl
fldenv
pushf
cmpsl
les
stc
xor
adc
inc
shll
scas
sti
aas
cmpsl
xchg
jb
mov
repz
sahf
cmp
jns,pn
out
jl
aas
lret
inc
add
mov
ss
jne
lret
lret
les
out
mov
and
push
loopne
jg
test
xchg
jle
pop
push
pop
fisubl
dec
imul
adc
out
fistpl
push
adc
jge
push
cmp
sti
insb
adc
addr16
and
push
xchg
and
sbb
scas
pop
pop
lret
xchg
mov
cmp
xor
cmp
lock
insl
fidivs
js
inc
or
gs
rcrb
pop
cltd
push
jb
or
out
mov
in
cmp
add
add
sub
inc
sub
xor
repz
data16
jno
push
cmp
cmc
cmpsl
or
pop
cmp
pop
push
aam
rcll
jae
push
xor
dec
sarb
jecxz
ss
jp
xchg
loope
push
push
int
add
shll
mov
jno
ljmp
xor
fmuls
out
xchg
mov
adc
cli
subl
sub
hlt
ret
sbb
push
bound
iret
lock
push
xchg
lcall
bound
cmpsb
pop
mov
mov
push
repnz
outsb
mov
push
popf
mov
loop
in
mov
cmpsb
dec
adc
fdivp
mov
outsb
insl
stc
and
push
stos
aad
bound
jmp
stc
leave
and
enter
fcmovnu
jp
mov
inc
int3
sub
mov
mov
mov
cmp
rcll
inc
cmp
lock
cli
or
jle
cmp
push
mull
imul
lds
and
push
xorb
and
lods
lods
or
inc
dec
jnp
test
cmc
arpl
push
mov
dec
sub
push
out
in
aam
adc
ret
push
adc
dec
jae
adc
movsb
pop
out
pop
push
add
mov
inc
push
push
fwait
cmp
adc
dec
lahf
xchg
sahf
or
inc
xchg
insb
inc
fimuls
xor
imul
fwait
xchg
insb
push
pusha
mov
xchg
lret
lock
and
push
inc
xchg
sub
xchg
je
adc
rcl
insl
icebp
adc
sbb
mov
adc
or
rorl
push
and
sub
aaa
int
rol
or
mov
adc
sbb
xchg
rcll
adc
jno
dec
mov
and
filds
int
inc
mov
call
push
popf
shl
push
push
cmp
mov
bswap
mov
mov
js
adc
imul
xor
or
aad
add
icebp
jmp
add
jae
add
imul
and
in
call
mov
arpl
cmp
cltd
inc
mov
push
cmp
jge
lods
ret
or
dec
ret
stos
lret
scas
sub
shrb
ret
cmp
cli
cmp
push
pop
ret
jbe
int3
pushf
cmpsb
mov
xchg
or
rcrl
cltd
sub
xchg
ret
add
sub
jl
repnz
or
shrb
ss
leave
hlt
in
popa
xor
xchg
jp
xor
xchg
pop
xor
sub
or
push
push
mov
xchg
loopne
dec
add
push
ss
dec
mov
mov
mov
xchg
push
xor
rol
jecxz
cld
xchg
addr16
ret
jg
bound
std
sbb
fidivl
xor
decb
pop
popa
ljmp
stos
push
rol
adc
pushf
push
lods
movsb
out
xchg
andb
jno
jmp
inc
out
nop
inc
dec
lret
inc
push
sahf
push
jnp
out
mov
fcmovnb
nop
sbb
das
mov
cmpsl
adc
sub
cmp
xor
or
int3
push
insl
cs
dec
cmpsb
mov
lods
and
pop
sub
divb
cmp
push
sar
or
ror
stc
add
rcll
push
mov
das
addr16
inc
fnop
imul
xchg
ss
enter
sbbl
push
fwait
sbb
imulb
outsb
inc
pop
cmp
jb
mov
rclb
mov
or
mov
cmp
add
cmp
xchg
push
sub
rcl
jno
ret
sarb
sti
ja
sbb
outsl
adc
xchg
mov
int
cmp
mov
xchg
xchg
loop
ds
jno
ret
inc
stos
into
mov
jp
adc
xor
mov
xor
pop
mov
mov
pop
arpl
mov
mov
xor
xchg
minps
adc
mov
push
mov
push
leave
pop
adc
ss
dec
scas
and
cmp
xlat
pop
mov
jbe
les
sub
fimuls
rcrb
leave
out
cmpsl
xchg
pop
dec
jge
lahf
inc
or
ret
jecxz
xchg
sub
outsl
aas
jge
lahf
sbb
loopne
sub
sbb
sbb
lcall
clc
pop
mov
lahf
jmp
repz
mov
addb
enter
in
ss
repz
adc
mov
and
xor
pushf
push
push
shlb
push
bound
fdivrs
jns
mov
sbb
imul
sbb
jbe
mov
hlt
pop
jb
xchg
pop
or
xor
and
arpl
sbb
call
mov
shlb
cmp
in
push
mov
push
hlt
push
sbb
sbb
mov
aad
aaa
cwtl
and
cmp
roll
cmp
jl
fs
push
pop
pop
lahf
nop
adcb
xlat
fiaddl
mov
in
shl
pop
mov
inc
js
std
jl
xchg
mov
mov
int3
pop
shrb
add
push
push
fldt
cs
ljmp
das
adc
call
or
ds
jmp
inc
or
push
sub
cld
xchg
adc
push
add
cmc
mov
jg
mov
popf
test
lock
das
gs
push
lods
cmp
xchg
jo
cmp
jle
sub
mov
and
dec
aaa
ret
sub
inc
imul
ljmp
lcall
dec
lds
ljmp
sub
adc
movsl
arpl
in
insl
lret
imul
loop
mov
sub
jecxz
stc
pusha
icebp
iret
hlt
push
lret
sahf
xor
push
xor
cmpsl
mov
imul
pop
and
and
repnz
arpl
inc
xor
das
pop
aaa
int
test
es
loop
test
adc
leave
push
popf
test
add
cmpsb
das
scas
xor
and
mov
dec
ja
sar
add
xchg
pop
adc
push
loope
ljmp
fstpl
mov
out
faddl
mov
xchg
mov
mov
fistl
mov
and
mov
xchg
push
dec
sub
xchg
cmp
outsl
adc
mov
push
decb
fbstp
push
loope
je
dec
es
adc
call
mov
fcmovnbe
mov
inc
std
das
cmc
push
pop
fdivl
pusha
mov
pop
fstp
std
lahf
shl
inc
fwait
leave
mov
pop
aaa
inc
dec
pop
mov
jno
or
stos
jb
pop
mov
mov
arpl
dec
hlt
cmp
insb
push
dec
outsb
or
adc
lahf
mov
and
adc
es
fsubs
call
cs
push
out
inc
mov
and
push
cmp
mov
lock
lret
mov
and
out
aaa
mov
ds
dec
mov
jle
notl
fcom
xlat
stos
loope
cmp
dec
mov
popa
adc
sbb
push
daa
sub
adc
shlb
aad
out
ja
das
lret
lcall
adc
or
in
fs
dec
jo
sub
inc
fimuls
ja
or
scas
aas
movsb
jl
mov
ss
push
adc
and
jbe
push
rorl
insb
fdivr
mov
xchg
mov
jnp
imul
add
inc
fistpll
push
add
in
adc
sbb
popf
mov
or
mov
mov
addr16
gs
inc
pushf
inc
ds
shll
std
jnp
fs
mov
pushf
imulb
cli
xor
adc
xchg
cli
jbe
enter
dec
adc
fsubrs
cmc
sbb
mov
loop
dec
mov
aaa
leave
sbb
xchg
ret
mov
adc
inc
pop
jns
xor
sbb
cmp
test
scas
fcmovne
pop
lret
jo
dec
sub
mov
out
lods
fwait
dec
mov
xchg
sbb
cltd
mov
cli
rorl
loop
xchg
in
shlb
push
and
xchg
cmp
sub
cmp
call
es
push
in
pop
iret
gs
gs
scas
cmpsb
dec
mov
addr16
mov
std
or
sbb
lds
cmp
cltd
or
lcall
leave
mov
sbb
test
mov
in
cs
cmp
xor
sub
push
jb
inc
clc
clc
dec
xchg
icebp
xchg
lahf
sti
lret
imul
adc
mov
nop
pop
jmp
adc
loopne
int3
cli
lcall
sub
in
addr16
lea
mov
movsl
test
cmp
jg
pushf
push
ret
ret
pop
leave
add
cli
cwtl
mov
sbb
mov
cmp
adc
int3
add
inc
popa
mov
mov
mov
pop
jmp
cmpsl
fstps
mov
push
pop
adc
xchg
mov
add
cmpsl
inc
push
fadds
adc
mov
outsl
xor
mov
xchg
or
insb
or
jmp
jmp
jo
push
xor
rcrl
pop
cld
ja
inc
cmp
insl
cmpsb
in
lahf
mov
fmuls
pop
arpl
int
bnd
xor
scas
xor
dec
xor
mov
mov
and
lods
xor
gs
mov
mov
imul
cwtl
mov
dec
ja
pop
jl
adc
sub
push
cmp
insb
sub
push
jno
loopne
stos
test
or
inc
jno
mov
jne
in
add
into
mov
pop
enter
add
pop
xor
jno
pop
enter
pop
sbb
dec
and
das
lret
sub
shrb
sahf
test
push
stc
nop
sbb
mov
int
xchg
pop
push
mov
sbb
lcall
adc
loope
jno
mov
dec
pop
addr16
ret
cmc
imul
jl
out
push
sbb
push
les
jno
pop
xchg
sbb
jg
sahf
out
jg
loope
add
fisubl
cmc
clc
jne
xchg
roll
loop
or
out
mov
jo
push
addr16
aas
lods
jle
aam
in
push
les
inc
in
mov
mov
mov
cmp
mov
lcall
scas
fisttpll
push
cmp
push
or
jecxz
jnp
cwtl
ret
sbb
xor
movsl
mov
sub
scas
sub
les
xor
cmp
mov
insl
testl
ret
dec
add
bound
jp
call
jmp
test
rcrb
out
push
xchg
daa
xor
jnp
cmp
jo
ficompl
in
push
popa
ffree
repnz
int
inc
mov
pusha
dec
cmp
pusha
xor
loop
addr16
xor
and
sub
sub
loopne
push
leave
inc
lods
out
and
sub
cmp
sbb
popf
ja
in
mov
test
enter
stc
jecxz
mov
in
lods
daa
mov
mov
mov
push
push
cltd
adc
adc
leave
dec
inc
inc
mov
enter
fmull
push
xchg
jp
mov
sarb
repz
ret
insb
push
inc
xchg
mov
repnz
pop
pusha
xchg
test
fs
out
je
jle
and
inc
out
out
mov
sbb
scas
mov
sti
dec
lods
ds
and
mov
int
int
imul
jmp
fisubs
sub
lahf
aam
das
xchg
push
js
out
call
cmc
test
gs
inc
in
dec
test
nop
sub
ljmp
jae
shll
filds
lds
sub
dec
push
mov
mov
or
and
fidivrl
std
loope
add
ds
push
stc
clc
inc
add
mov
cmp
pop
mov
aaa
or
inc
or
cwtl
cmpsb
jg
in
pop
sub
and
test
and
out
out
aad
adc
mov
mov
or
nop
sub
cmp
aam
push
xchg
mov
outsl
mov
xor
hlt
movsb
fadd
mov
imul
test
jb
in
jl
stos
sbb
fildll
popa
fcompl
sti
inc
lods
dec
aas
xchg
sub
outsl
xor
pop
inc
pop
iret
mov
fidivrs
cmp
insb
push
inc
lds
ret
and
xchg
inc
adc
jno
lret
dec
sbb
imul
jo
mov
ljmp
dec
popf
in
cmp
mov
mov
sldt
pop
cwtl
cmp
mov
je
lods
jmp
mov
icebp
push
into
jns
cmpsb
shrb
jbe
sarl
test
jno
ret
push
dec
cmp
sub
and
jle
into
add
mov
cli
mov
and
xchg
inc
outsb
jne
sbb
out
addr16
mov
or
push
andb
push
ss
test
mov
leave
mov
mov
pop
sub
nop
pop
push
jle
int3
mov
shlb
aaa
cmc
addr16
push
and
and
aaa
push
sbbb
scas
dec
notb
inc
arpl
into
je
stos
fsubrl
jns
popa
in
sti
leave
mov
inc
pop
cmp
fsub
inc
add
push
aad
lock
pop
jae
mov
mov
adc
and
dec
push
and
loop
and
stos
xchg
aam
cmp
and
out
sbb
out
inc
imul
aas
pop
dec
std
daa
pop
xchg
mov
dec
icebp
insb
sti
loopne
xchg
iret
stos
ret
leave
aaa
icebp
fldt
shll
push
push
fisttps
rclb
and
imul
cmpsb
lds
ja
in
and
rolb
pop
icebp
lea
push
push
or
xor
add
pushl
jnp
cmc
or
dec
and
lods
xchg
mov
xor
mov
roll
add
adc
test
enter
orb
pop
dec
stc
dec
adc
enter
cmc
xor
mov
adc
add
lea
filds
mul
sbb
dec
aad
xor
int
sub
arpl
shrb
adc
jp
pop
pop
mov
stc
movsb
cmpsb
and
mov
sbb
xor
inc
sub
pop
push
jns
lock
sub
nop
out
and
sbbl
and
xor
or
fldt
in
psubusw
cmp
dec
jl
imul
out
sbb
xchg
outsl
addb
cmc
sub
pushf
sub
adc
xor
mov
or
leave
cmp
movsb
sbb
cmp
sub
jb
dec
mov
in
fdivs
loope
fisubs
jmp
push
call
xchg
xor
dec
jns
ss
xchg
sbb
popf
xchg
aam
cmc
jnp
arpl
jb
mov
lods
inc
pop
fimuls
cmpsl
fdivrs
xchg
movsb
xchg
sahf
push
addr16
push
mov
mov
je
pop
notl
out
add
xlat
out
icebp
enter
sbbb
pminsw
lock
fcmovbe
cmp
jae
sub
dec
aaa
or
mov
idivl
call
pop
insb
insl
fisubs
sub
lea
and
ret
shll
insb
pop
test
lock
daa
lret
push
test
or
test
dec
sub
ss
and
les
adc
stos
adc
mov
fbld
xorb
and
mov
add
cmp
lods
lahf
xchg
shr
and
int3
roll
jo
mov
shll
lret
inc
fmul
dec
adc
xor
enter
xor
mov
loopne
or
jge
movb
mov
cmp
std
outsl
xchg
pop
int
aas
or
mov
xchg
lods
enter
or
cmp
sub
movsl
loop
sarb
mov
cwtl
push
idiv
adc
mov
sub
push
out
or
jmp
es
xor
xor
ljmp
xchg
inc
sbb
lret
out
jo
and
dec
mov
mov
cmc
push
mov
cmpsl
dec
pop
xchg
jb
rcrl
mov
mov
mov
mov
movsb
jae
sbb
mov
cmpsl
js
lds
jle
push
mov
aam
hlt
mov
mov
mov
and
jbe
jle
decl
or
adc
jns
adc
out
jp
adc
pushf
mov
mov
adc
mov
or
aas
fadd
push
aam
jg
adc
cli
push
adc
inc
rorb
std
inc
stos
xlat
pop
jne
sub
mov
push
pop
in
js
addr16
cld
mov
xchg
xor
mov
and
mov
cmp
ret
imul
mov
cmp
das
hlt
adc
lret
or
loopne
sbb
xor
cmpsb
xchg
mov
imul
outsl
in
sahf
call
std
xchg
fisubrs
lret
insb
mov
out
int
outsb
mov
cmp
push
adc
mov
or
lret
mov
fidivs
imul
imul
xchg
gs
cmc
mov
jecxz
inc
sub
xor
fisubl
add
cmc
or
negl
xchg
lods
out
mov
test
mov
jmp
loope
insl
push
and
andl
and
shlb
loop
int3
push
pop
notb
push
popf
mov
loopne
ljmp
test
inc
in
xchg
sub
xlat
movsl
pop
nop
push
dec
test
lcall
push
lds
sbb
fwait
cltd
lock
sbb
adc
ret
or
imul
rcrb
or
pop
dec
pop
jno
out
das
xchg
popa
pop
imul
rolb
vdivpd
push
sbb
ret
adc
das
jo
jb
adc
div
or
or
pop
push
mov
and
jb
adc
pop
mov
cmp
push
insb
insl
dec
test
dec
in
call
push
jbe
clc
push
add
or
and
mov
sub
mov
xor
cmp
xchg
lret
loope
pop
in
stos
std
cmp
addr16
cmpw
push
xor
add
outsl
rcll
xchg
sbb
scas
cli
jbe
in
ret
cmpsb
xorb
mov
xchg
add
das
jnp
test
ss
inc
shl
nop
ljmp
xchg
and
out
jmp
js
rclb
xor
xor
xor
nop
aad
rdtsc
pusha
add
or
shll
icebp
cwtl
pop
push
cli
or
shll
sbbl
es
loop
pop
or
push
aas
popf
fcmovne
xlat
lcall
outsb
cli
int
ja
mov
iret
dec
cld
jl
sahf
stos
pop
leave
in
mov
xchg
cmp
out
mov
adc
jns
mov
enter
ds
mov
std
mov
push
sub
movsb
pusha
jecxz
or
sti
test
push
int3
out
cli
add
mov
dec
mov
out
jecxz
gs
aam
mov
inc
lods
adc
pop
stos
inc
jae
sub
daa
mov
mov
pop
or
xchg
mov
adc
call
call
push
xlat
mov
dec
push
popa
mov
xchg
in
cmp
cltd
fs
jge
jge
mov
pusha
lods
push
ret
insl
or
sub
stos
test
daa
shrl
mov
adc
outsb
mov
inc
jns
jl
jg
xor
imulb
scas
cmp
mov
ret
add
push
sub
xchg
lods
scas
iret
mov
out
in
popa
mov
pop
xor
push
add
or
fisttpll
mov
movsl
sbb
add
enter
rcl
stos
pushf
fwait
loopne
mov
dec
lea
xor
rep
out
arpl
pop
sbb
cmp
adc
jecxz
insb
or
insb
scas
push
loope
xchg
inc
lds
adc
cmp
popf
mov
mov
pushl
dec
dec
or
sti
mov
sub
cmpsl
sbb
shrb
sbb
mov
popl
insl
cmp
rorb
mov
mov
jb
aaa
xchg
cli
subb
sub
pushf
dec
jns
in
icebp
scas
push
mov
push
inc
dec
je
mov
mov
iret
negl
jp
xchg
adc
das
add
adc
cs
push
adc
ss
inc
push
pop
ss
insl
adc
xchg
add
lret
mov
cli
add
cmp
dec
xchg
jno
jg
xor
std
adc
mov
nop
shrb
addl
aam
shr
cmp
dec
fldenv
adc
sbb
pop
push
sub
aas
sub
add
push
data16
sub
ds
lcall
stos
xchg
loop
std
das
bnd
mov
pop
ss
in
ficompl
cmp
add
adc
loopne
xor
push
sbb
jae
mov
xchg
sub
ret
mov
pop
mov
cwtl
xor
fimull
jle
in
xlat
pop
add
xlat
mov
mov
dec
repz
outsb
loop
pop
leave
into
xor
xlat
add
imul
add
popa
pop
inc
out
outsl
jmp
stc
clc
dec
loopne
push
outsl
ds
sbb
and
aad
dec
lcall
pop
cmc
cmp
xor
push
imul
in
or
push
lods
sbb
jmp
pop
mov
dec
addr16
shlb
pop
mov
mov
daa
jl
xchg
or
mov
decl
xor
frstor
pushf
or
scas
fidivrl
jne
add
pop
mov
das
stc
sub
xchg
lcall
std
and
mov
jnp
ret
adc
cmp
call
mov
les
mov
mov
loop
mov
adc
mov
pop
push
cmp
cmp
lret
xor
xchg
leave
paddsb
sub
shrb
cmp
lcall
fwait
cs
mov
stos
mov
in
inc
stos
arpl
jmp
sbb
pop
xchg
or
jp
clc
mov
xlat
lods
test
out
inc
jae
aas
jne
je
push
sbb
outsb
jno
rcrl
cmp
and
jg
in
or
in
mov
in
movsl
rcll
out
daa
out
shrl
mov
dec
sbb
leave
push
popf
mov
mov
add
mov
mov
std
subl
dec
hlt
pop
js
das
pop
xchg
stos
push
pop
and
pop
add
jno
cmpsl
xchg
add
mov
out
rcrb
xchg
cmp
ret
loope
dec
fxch
push
lds
dec
imul
sbbb
jp
lahf
lahf
pusha
add
jb
or
push
outsl
cltd
xchg
jo
pmuludq
sbb
idivl
test
in
movsl
data16
xchg
aas
inc
adc
les
ds
pop
popf
dec
xlat
pop
rorb
xchg
int
lods
clc
dec
hlt
jae
xlat
arpl
sbb
lahf
iret
or
enter
cld
popa
enter
aad
sub
push
add
testl
dec
repnz
jmp
lea
inc
cld
jg
out
jecxz
jge
and
and
lret
repnz
inc
push
clc
icebp
mov
sbb
inc
push
xchg
lahf
movsl
push
pop
ss
and
nop
cmc
mov
mov
push
outsl
stc
repz
mov
sub
xor
lcall
add
inc
out
out
ss
push
movsb
pop
jecxz
jns
mov
insb
pop
dec
aas
imul
pop
inc
or
cmp
fisubrs
xor
xor
sbb
mov
pop
pop
enter
fisubl
js
in
fsubl
loop
dec
stos
in
out
xor
xchg
je
test
dec
xor
jecxz
in
push
fs
pop
mov
and
cmpsb
mov
push
pop
xor
inc
mov
repz
and
bound
scas
mov
dec
add
or
sub
cli
bound
xchg
repnz
add
push
test
std
add
cld
mov
add
sti
adc
add
and
jecxz
ret
mov
xlat
and
cmp
xor
insb
dec
in
or
out
mov
jge
fwait
inc
cli
xchg
and
pop
xor
mov
inc
lea
pop
xor
inc
int3
lds
loopne
sbb
das
or
cmpsb
xlat
cld
mov
jle
rcl
imul
movsl
icebp
imul
jae
mov
mov
lret
sub
movd
shlb
push
mov
roll
lcall
cld
aaa
adc
adc
cmp
scas
and
cmp
das
rcrb
lock
push
mov
fbstp
inc
test
mov
jg
push
into
cs
mov
adc
clc
mov
mov
gs
xchg
xchg
aam
inc
test
mov
jl
adc
pushf
int3
jb
daa
ret
sub
mov
int
loopne
mov
aad
xchg
gs
js
jne
adc
dec
pop
mov
scas
pop
cmc
outsl
sbb
outsl
in
cmp
fs
arpl
adc
incb
lret
sahf
sub
sub
fwait
repz
xor
ret
cmp
shll
jp
ret
sbbl
inc
pop
pop
pop
push
mov
gs
mov
repnz
add
lret
xor
adc
fstp
test
mov
mov
in
popa
push
xchg
rcrl
call
orb
mov
xrelease
mov
scas
fwait
repz
lcall
mov
sbb
push
orb
lds
mov
into
sbb
imul
ret
fimull
data16
xchg
pop
sbb
mov
sub
test
pop
add
fsubrs
xor
adc
enter
ja
out
cmpsb
pop
in
jge
lods
or
push
pop
fiadds
pop
ds
jbe
jmp
sbb
dec
inc
lret
push
lret
xchg
sub
cmp
imul
aad
push
cmp
arpl
pusha
lahf
repnz
jo
in
ja
xor
jae
clc
mov
mov
popf
or
enter
mov
daa
loop
and
lahf
movl
fdivs
and
and
jo
icebp
ljmp
sbbl
outsl
mov
push
popl
shl
js
in
xchg
pop
or
mov
sub
mov
test
ret
hlt
aas
bound
fnsetpm(287
pop
hlt
loope
aaa
xchg
lea
add
dec
out
jb
jbe
sbb
mov
dec
aas
adc
mov
jge
cmp
bnd
das
fisttps
jbe
enter
lds
or
pop
sbb
cwtl
inc
xorl
push
test
lods
stc
outsb
jecxz
out
inc
push
add
mov
popf
mov
inc
adc
sbb
add
test
add
loop
fs
mov
clc
jmp
rcl
sbb
gs
int3
or
mov
roll
cld
call
mov
daa
inc
je
rorl
fcmovnbe
loop
add
xchg
adc
test
mov
mov
sbb
test
inc
mov
cmp
push
pop
popf
arpl
adc
orl
push
push
push
add
pop
fldt
data16
xchg
sub
dec
push
mov
inc
cld
push
orl
mov
icebp
xchg
cmp
lods
sbb
mov
cmc
into
mov
data16
imul
xchg
fstps
movsb
outsb
dec
loopne
dec
cmp
jecxz
sbb
add
stos
dec
pop
pop
push
add
jnp
test
clc
out
and
iret
jp
xor
ret
fwait
push
outsl
fstl
mov
out
shlb
xlat
xchg
mov
movsb
adc
push
stc
lds
movsb
xor
fistpll
push
or
push
xor
jno
pop
loop
mov
movsl
inc
xchg
and
sub
es
scas
push
cmpl
aam
push
jp
inc
fisttpll
dec
outsl
push
les
enter
jb
sbb
xor
mov
outsl
cmp
and
inc
sub
adc
xor
stc
repz
out
hlt
mov
jne
test
sysenter
mov
gs
mov
into
call
jge
jge
jle
push
jmp
int3
ja
sbb
sub
cmp
inc
or
jecxz
scas
cmp
punpckhwd
test
inc
mov
sbb
movsl
mov
ds
into
pushf
aas
xchg
sbb
roll
cmp
inc
or
add
loope
push
jne
cwtl
push
mov
ja
push
jmp
out
into
pushf
mov
mov
xchg
push
jmp
adc
fnstcw
xor
fstl
fisubl
insb
or
sbb
jmp
mov
andb
fldcw
subl
dec
test
mov
jbe
mov
jecxz
mov
les
push
mov
ret
adc
in
shll
mov
sub
add
inc
xor
pop
in
push
cs
movl
mov
pop
mov
or
push
out
mov
in
sbb
xchg
push
sub
idiv
jmp
mov
pop
adcb
xlat
lahf
sbb
popf
mov
and
push
ret
pop
dec
dec
mov
imul
bound
pop
stos
adc
xor
push
jne
dec
imul
clc
and
fwait
lea
mov
pop
xor
lcall
and
inc
aaa
jns
mov
into
je
mov
leave
push
int3
adc
addr16
popf
jmp
cmpsl
fistl
adc
xor
cmp
add
dec
jnp
pop
add
ljmp
mov
mov
inc
pop
or
clc
fnstsw
and
mov
or
pop
test
sahf
aam
mov
inc
ljmp
jge
repz
mov
ja
jmp
cmp
inc
enter
sbb
xchg
insl
nop
mov
pop
cmp
out
jg
loopne
and
fnstsw
dec
inc
jle
xor
inc
popf
cmp
jo
int
mov
std
lahf
dec
add
int3
xchg
mov
or
push
pop
xor
je
scas
aas
pop
mov
outsb
lea
fmuls
push
lret
push
fcoml
mov
lret
mov
data16
xchg
sarb
and
iret
inc
push
cmp
rcr
xchg
mov
jge
nop
xor
loope
fmuls
jmp
in
sub
repz
lret
pop
cld
insl
mov
andb
dec
sbbl
jecxz
xchg
clc
mov
add
or
sbb
les
add
test
xchg
test
xor
movsb
adc
inc
data16
notb
das
test
insb
pop
lea
out
mov
cmp
xchg
ljmp
stos
aaa
jp
dec
jne
es
sbb
adc
fsts
mov
cld
push
mov
dec
scas
mov
pop
or
xchg
inc
sti
out
aam
in
mov
aam
test
in
cmc
data16
in
push
insl
insl
sub
rcrl
nop
mov
aaa
sub
fnstcw
xchg
and
jle
arpl
bts
mov
clc
sahf
aaa
scas
and
mov
mov
jmp
mov
int3
clc
lcall
add
pop
in
jns
bound
and
xchg
icebp
test
add
sub
loope
fimuls
aam
into
fwait
mov
fsubrl
add
ljmp
jp
test
mov
jne
push
or
loope
cld
mov
push
aas
xchg
sub
iret
or
push
shr
xchg
frstor
popf
jb
mov
pop
sub
sar
dec
sbb
mov
cwtl
incl
xchg
cmc
dec
inc
imul
mov
and
mov
stc
arpl
cmpsb
or
mov
cmc
xlat
imul
icebp
cmp
aaa
push
mov
icebp
imul
gs
les
xor
cmpsl
das
and
push
mov
lret
addr16
push
repnz
ret
or
xchg
push
mov
jg
mov
jb
decl
fmuls
sbb
imul
pushf
add
incl
jnp
andl
xchg
and
rorl
incb
repnz
xchg
dec
xor
popf
outsl
jmp
add
jecxz
ret
cmp
jo
dec
dec
mov
mov
push
insl
cli
popf
ret
outsb
inc
xchg
fnstcw
xorb
aas
stos
push
lods
adc
mov
push
push
xchg
pop
xor
cmp
add
aaa
jge
adc
cs
mov
sbb
xor
or
fldenv
sub
out
test
scas
pop
adc
pop
out
jg
push
adc
adc
popa
push
out
xchg
inc
sub
outsl
mov
les
lods
and
sub
js
and
dec
shll
mov
fdivrs
fidivl
or
inc
sbb
ss
jle
xor
pop
sbb
sbb
jp
push
xchg
push
mov
dec
cmp
adc
jo
scas
pop
rcl
pop
in
ljmp
or
xchg
xor
int
adc
mov
cmpsl
pushl
daa
pop
mov
mov
mov
out
mov
pop
jmp
add
push
out
popa
xchg
jge
jnp
sub
mov
test
mov
sub
ljmp
cmp
inc
rclb
loop
or
xchg
test
loopne
call
rcll
inc
add
shl
imul
push
js
cmpsb
adc
repz
test
push
and
inc
and
fmul
scas
push
mov
enter
dec
imul
cld
pop
enter
adc
fmull
out
aaa
or
inc
fldl
jecxz
rcr
lahf
jecxz
stc
mov
add
inc
pop
push
jbe
lds
jb
jnp
cmc
imul
jl
jnp
xchg
ljmp
adc
cltd
clc
jle
xchg
movsl
movsl
sbb
inc
shr
cmp
jnp
test
mov
mov
loop
add
aad
dec
inc
pop
mov
fldenv
in
xor
xor
loop
js
aaa
hlt
add
lods
jo
add
ret
mov
xor
nop
push
pop
div
push
and
mov
sub
cmpsl
jg
or
or
imul
sbb
lods
ret
loop
jge
sub
sbb
sub
dec
ja
pop
jl
insb
xchg
or
sbb
pop
in
inc
xor
flds
out
popa
adc
cmp
aam
test
vmread
test
xor
inc
lock
iret
add
mov
repz
or
pusha
adc
xchg
mov
jp
aad
iret
inc
rorl
xchg
pop
insb
pushf
pop
outsb
fdivrl
and
imul
mov
fucompp
lea
xchg
pushf
and
insl
xlat
add
es
out
addb
jae
dec
lcall
add
mov
or
and
fnstcw
fadd
clc
push
in
mov
in
mov
push
add
shlb
insl
fstps
add
icebp
pop
lret
adc
data16
js
popa
sti
adc
movb
mov
inc
mov
jl
subb
out
xor
mov
push
mov
dec
jns
clc
mov
jp
mov
popa
je
push
loop
jno
lods
sbb
mov
or
dec
testb
daa
ret
push
jmp
lcall
in
cmp
mov
jl
sbb
int
lea
mov
fisubrs
jecxz
jae
dec
loop
test
mov
or
shlb
pusha
push
adc
ret
stos
cmp
bound
faddl
lock
loope
add
fnclex
movsl
inc
lcall
pop
gs
fisttpl
jne
mov
jmp
inc
sub
stc
fwait
xchg
into
daa
pop
test
and
xchg
sub
push
bound
lods
call
dec
cmp
mov
sub
or
inc
sub
test
add
sub
xchg
pusha
or
cmp
imul
daa
inc
mov
sbb
in
mov
push
lret
add
mov
aaa
icebp
not
and
pop
cmpsb
bound
add
or
mov
push
mov
mov
int
dec
in
sub
sub
push
push
jbe
sarb
mov
lcall
lods
testl
enter
lret
push
pop
or
fs
ret
dec
gs
test
das
xchg
clc
enter
mov
mov
or
mov
repz
test
sub
dec
sbb
pop
xor
mov
push
pop
in
fstpt
mov
iret
pop
mov
dec
mov
pop
mov
dec
jb
int3
adc
add
dec
xchg
adc
jno
jmp
loop
pop
fsubr
pop
std
int
call
arpl
mov
pop
mov
pop
sbb
dec
mov
in
clc
dec
push
or
decb
xor
dec
out
pushf
mov
fidivs
adc
xchg
popw
xor
lds
push
scas
mov
jns
int
add
push
lods
lret
outsb
lock
test
push
mov
xor
rcll
fstp
insl
or
addr16
add
call
push
pop
jae
inc
inc
and
jo
gs
iret
xor
sub
sbb
jmp
or
gs
push
xor
cmp
push
test
lea
xchg
jno
add
and
adc
add
dec
jnp
mov
into
leave
or
mov
mov
aaa
outsl
out
hlt
mov
enter
xchg
inc
pop
inc
push
cmp
popf
add
mov
cmc
lahf
in
pop
clc
pop
ljmp
mov
int3
jle
es
adc
fistpl
lds
inc
lds
and
cmp
dec
dec
push
movsb
out
sub
push
sbb
mov
das
inc
frstor
loope
pusha
xor
dec
xlat
pop
mov
je
and
dec
pop
jno
nop
mov
xchg
mov
lcall
andl
adc
dec
push
or
ja
test
loopne
jnp
leave
mov
sbb
dec
adc
mov
loopne
test
fadd
in
insl
out
shl
out
inc
dec
scas
out
nop
jbe
bound
mov
pop
and
and
insl
test
je
adc
xor
add
adc
lds
in
in
in
cmp
sbb
xchg
mov
adc
jl
fcom
jnp
add
mov
lods
mov
dec
dec
cs
iret
sbb
xchg
imul
les
pop
jl
andl
ret
xorb
push
pop
mov
cmp
push
jnp
and
sbb
pop
popf
xchg
aaa
pop
imul
push
mov
enter
cmpsl
lds
lods
cmp
cmc
or
or
imul
xor
movsl
rcr
fdivs
popf
shl
lret
addr16
iret
cltd
cmpsl
inc
jo
adc
fisubrl
and
insl
xor
mov
stos
cmp
pop
sarb
loop
imul
in
inc
pop
int
jp
jae
movsb
in
repnz
inc
xchg
lret
add
mov
mov
jbe
fwait
sbb
dec
pop
sub
cmp
lret
add
inc
lahf
pmaxsw
add
push
xorl
popl
pop
push
xor
clc
push
in
jecxz
movsb
enter
dec
sbb
mov
aam
jmp
mov
fldt
pop
outsl
loope
inc
data16
xchg
fbstp
test
jecxz
dec
add
pop
push
mov
mov
sarb
push
shrl
xchg
jae
push
add
push
aad
mov
and
xor
mov
mov
mov
out
xchg
cmpb
stc
sub
inc
cli
test
mov
roll
inc
sbb
arpl
mov
mov
push
rcrb
aad
out
sbb
popf
or
dec
lret
clc
test
out
in
or
shlb
pop
add
pop
xor
hlt
mov
pop
jge
jge
dec
int3
xchg
xchg
jg
fwait
push
sub
cmp
xchg
lret
cmp
xlat
aad
clc
jns
dec
fdivp
sbbl
mov
sub
add
mov
stos
mov
out
xor
ja
add
or
push
daa
push
es
cmpsl
jmp
mov
dec
das
lret
xchg
fs
in
jle
cltd
mov
jne
mov
cmp
mov
les
inc
add
mov
inc
mov
movsb
mov
xchg
andl
xchg
scas
fisubrs
mov
clc
push
repnz
enter
pop
das
mov
pop
mov
std
cmp
popa
je
fnstenv
pushf
mov
cmp
pop
adc
and
xchg
xchg
in
jno
and
push
negb
xchg
adc
loop
stos
ja
repz
push
mov
ss
dec
in
mov
scas
sbb
lret
mov
outsb
mov
iret
sbb
test
cld
xchg
cmp
cmp
test
stos
hlt
sub
hlt
int3
jmp
lock
outsl
cmp
fcom
je
clc
push
push
mov
aas
ljmp
mov
nop
into
inc
pop
outsb
shlb
movsl
fnstcw
sti
movsl
movsb
fld1
js
jp
add
ljmp
int
sbbb
cli
xor
pop
xor
test
inc
fildl
sub
jge
loopne
xchg
scas
push
cmpsl
xorb
aaa
mov
dec
outsw
cmp
mov
push
jmp
cld
fistps
mov
and
call
rcrb
cli
fcmovbe
pop
dec
adc
fxch
pop
sbb
movsl
push
xchg
outsb
cmp
inc
pop
add
inc
adc
in
pop
sub
push
push
jae
dec
ret
mov
mov
dec
and
pop
lahf
mov
cmpsb
in
jecxz
js
mov
mov
pop
push
test
lret
adc
lret
lds
xor
xchg
fs
daa
or
mov
add
cmc
lds
fwait
adc
mov
outsl
sub
jb
fs
dec
fldl
ljmp
and
add
ss
or
daa
loopne
rcll
into
jno
jne
xchg
xor
mov
mov
push
jno
aas
cmp
aaa
in
or
or
mov
mov
sub
jge
cltd
and
or
sbb
cmpsl
push
addr16
xchg
cmc
in
push
scas
rol
xchg
aas
fsin
fbstp
pop
sub
sbb
push
cs
xchg
push
ljmp
faddl
xor
ret
out
mov
ja
mov
aaa
or
mov
pop
mov
sbb
push
jno
pop
and
adc
fdivr
dec
jb
push
and
stos
clc
clc
in
or
lds
push
cltd
lahf
adc
les
mov
out
cltd
push
pop
jnp
insl
hlt
jg
pop
mov
lcall
leave
and
lods
pop
cmpsl
xor
pop
adcl
push
add
popl
xchg
aaa
fildl
mov
inc
pop
stos
push
pop
mov
addr16
pop
jg
cs
xor
test
test
cltd
adc
test
push
push
out
add
cli
ret
ror
and
iret
adcb
test
into
loope
cld
mov
dec
lret
xor
sub
dec
add
shrl
das
mov
xchg
movsb
mov
dec
test
and
adc
insl
pop
pop
inc
sub
ret
outsl
mov
cmp
push
cmp
push
int
test
in
xchg
push
rcrb
cmp
inc
pop
clc
les
jp
adc
push
pop
into
adc
mov
mov
iret
hlt
fsubrl
add
out
fmuls
or
cmp
xchg
push
std
adc
sub
sub
test
mov
fmuls
pop
pop
pop
pop
out
or
mov
lret
mov
pop
push
xlat
mov
sbb
sub
aaa
sbb
sti
jo
mov
xchg
pop
mov
test
pusha
rol
inc
scas
xor
mov
rcrl
test
in
push
lods
sarl
loopne
sti
fwait
pushf
insl
pop
pop
les
fcomp
shll
push
jb
and
xor
add
nop
mov
into
js
imul
push
shl
push
int
ficomps
sub
push
push
es
push
out
and
mov
cs
std
sahf
jno
lock
xchg
and
test
pop
and
cmpb
insb
add
scas
test
push
out
lea
std
mov
push
mov
mov
cmpl
pop
ljmp
leave
popf
scas
pop
rorl
push
mov
jmp
loopne
push
ficoms
and
bound
ja
pop
mov
mov
or
jns
fildll
data16
stos
fisubrs
call
lahf
push
jmp
leave
rcrb
fisttpll
in
ss
dec
stc
xchg
sti
jp
xor
cmp
fcomps
aaa
sub
xchg
test
mov
mov
mov
into
loope
loope
push
rorb
loop
push
popa
sbb
add
out
mov
imul
mov
setnp
pop
mov
ret
hlt
out
mov
ds
lods
mov
jno
popf
lcall
mov
mov
scas
decl
adc
dec
jbe
push
dec
xor
sbb
add
xor
pop
cwtl
enter
or
inc
push
loop
push
outsb
mov
cli
jae
in
cmp
pop
cmp
dec
add
fdivl
into
ja
cmp
pop
test
or
cmp
dec
mov
dec
mov
cmp
mov
jp
shll
mov
dec
inc
pop
push
mov
wrmsr
aad
xor
enter
mov
mov
mov
mov
ss
jmp
add
cmp
outsb
push
cmp
mov
pusha
out
sbb
outsb
xlat
jg
cmp
and
icebp
lret
in
mov
ret
mov
add
mov
mov
call
hlt
fnstsw
stc
cwtl
cwtl
xchg
or
jle
mov
fisttpll
enter
lcall
loope
push
push
cli
out
sbb
mov
xchg
push
add
les
mov
and
mov
into
test
mov
pushf
testb
pop
sub
test
xor
fstpt
mov
sbb
push
mov
sbbb
adc
in
inc
mov
fmull
lds
movsl
repz
xor
fwait
mov
mov
andl
arpl
jmp
and
loope
push
xchg
adc
jmp
test
lret
xchg
push
pop
outsb
gs
and
subb
inc
add
or
cmp
ret
push
movsb
aad
jbe
add
aam
das
and
popa
fdivr
adc
rcrl
mov
shl
xchg
in
inc
fwait
std
sub
loopne
in
jno
aas
jbe
cmp
mov
popa
mov
pushw
movsl
mov
stos
add
jmp
add
jno
lret
leave
push
xor
push
ja
nop
ljmp
fildl
xor
repz
adc
vmwrite
dec
jbe
fs
sub
lcall
adc
cmpsb
push
cmp
push
pushf
xchg
mov
inc
sub
mov
jns
add
outsb
pop
cmp
and
dec
in
xchg
cmp
mov
adc
lods
add
mov
inc
lea
add
adc
addb
pushf
and
mov
fnsave
push
jnp
jp
test
ret
pop
xchg
lret
stos
jmp
sub
ret
mov
iret
xlat
jb
ficoml
loop
add
ja
fcompl
cltd
sbb
jecxz
sti
inc
adc
adc
andl
arpl
jo
and
ss
cmp
push
negb
in
mov
stos
stos
push
mov
sub
cmpsl
push
push
int
mov
or
mov
das
sbb
jo
scas
shll
arpl
out
jbe
and
or
and
jg
repz
mov
sbb
push
les
call
push
fabs
stc
fdivrl
jns
movsl
push
jp
sbb
push
test
sub
pop
push
sub
push
setle
mov
out
data16
push
popf
cltd
fidivrs
or
lcall
mov
mov
ljmp
gs
or
mov
cltd
or
or
fisubl
or
not
mov
js
ljmp
mov
jo
adc
xor
or
rcrl
scas
inc
ljmp
and
push
cmp
aad
push
pop
pushf
mov
imul
pop
imulb
jo
mov
sbb
pop
jge
mov
dec
mov
stc
sub
loopne
push
stos
inc
inc
cwtl
cli
mov
outsb
mov
adc
mov
xchg
mov
mov
xchg
ja
jno
and
jmp
fldenv
js
int3
fbstp
clc
xor
mov
dec
fldt
lcall
sbb
mov
xor
lahf
loopne
adc
cmc
loopne
jae
xor
repz
insb
jae
cmovg
insl
inc
lret
xchg
stos
test
sub
mov
fists
inc
sarb
inc
mov
or
stc
data16
imul
outsb
mov
ss
mov
xchg
popf
mov
sub
std
add
cmpsb
pop
out
fcomps
sbb
addb
xchg
arpl
shlb
insl
dec
pop
js
ja
mov
pop
push
add
or
inc
aam
bound
popf
jo
icebp
cmpsl
sbb
push
mov
lret
movsb
jecxz
inc
xchg
mov
es
mov
pop
aas
out
pop
push
push
mov
pop
push
or
outsb
nop
insl
fsubr
das
stos
je
pop
add
mov
jnp
ss
es
jae
mov
sub
jmp
mov
sub
idivl
adc
add
ja
out
out
sub
fcmovb
unpcklps
or
sbb
add
repnz
out
icebp
dec
int
lods
out
xor
aam
mov
std
pop
and
pop
popa
inc
insb
xchg
mov
mov
adc
pop
call
loopne
xchg
xor
call
dec
cwtl
out
push
mov
mov
add
scas
in
mov
popf
lahf
pop
cs
lds
mov
xchg
fldcw
movsb
push
test
repnz
out
jbe
dec
fcoml
inc
stos
clc
mov
in
out
xchg
dec
mov
scas
jge
xchg
mov
leave
xor
inc
mov
cmpl
movl
mov
adc
lahf
loop
pop
pop
stos
mov
lods
xor
inc
jbe
push
xchg
push
push
repz
mov
sub
mov
insl
xchg
mov
in
int3
mov
fs
addl
into
insb
or
xchg
popa
iret
pop
shl
mov
in
das
add
nop
pushf
adc
test
fldcw
cmp
lea
es
or
adc
jns
bound
push
mov
inc
or
imul
outsl
es
ljmp
gs
int3
mov
mov
cmp
or
movsb
inc
xchg
fs
test
aam
ja
adc
cli
lods
adc
cltd
inc
pop
mov
adc
bnd
insb
movsl
hlt
test
jae
add
mov
cmp
dec
mov
push
arpl
js
ret
gs
sbbb
xchg
cli
scas
or
hlt
in
jle
sbb
mov
xor
mov
or
push
movsb
sub
ds
jno
call
push
inc
test
in
hlt
daa
out
push
sbb
jae
adc
inc
jmp
push
fbstp
or
popa
loop
mov
or
mov
shlb
xchg
aaa
idivb
test
enter
fcompl
mov
jns
xchg
push
and
jae
push
vandnps
cmp
xchg
lock
in
push
mov
in
push
aas
addl
mov
loope
pusha
test
jl
call
xor
addl
popf
xchg
and
xor
dec
dec
fisubrl
rorb
fisubrl
ljmp
rorl
xorl
xchg
jg
push
mov
xor
add
loop
mov
jg
pop
xor
ffreep
rcr
testl
pusha
repnz
std
push
loope
stos
test
out
ret
push
mov
fnstcw
or
xor
das
enter
subb
leave
inc
popf
xchg
mov
or
cmp
add
sahf
lds
push
push
cwtl
shl
jnp
xchg
ja
inc
sub
lahf
addl
or
adc
inc
add
xchg
insb
push
cld
or
add
add
fisubs
outsb
adc
mov
sub
jne
hlt
jbe
packuswb
xchg
clc
add
stos
xor
lcall
loopne
xchg
sbb
divl
add
scas
dec
sbb
pop
jp
fisubs
lahf
ret
mov
orb
addr16
adc
push
cli
dec
loope
idivb
lret
test
sub
sub
cwtl
cmp
addr16
mov
test
dec
test
cs
push
pop
mov
data16
ja
mov
outsl
jae
lds
push
inc
pop
pop
pushf
loop
pop
mov
jp
mov
push
aaa
jmp
jg
mov
and
daa
or
push
add
mov
inc
cli
sysenter
xchg
inc
mov
mov
inc
mov
in
add
mov
test
movsb
lret
dec
int3
or
enter
fst
js
adc
adc
jnp
adc
add
mov
mov
inc
mov
inc
imul
movsl
cmp
dec
test
test
fadds
test
in
outsb
xor
pop
test
std
and
incl
lea
mov
and
xor
cmp
rolb
xor
mov
xlat
sbb
jns
dec
xchg
dec
icebp
jl
pusha
cwtl
inc
xchg
in
fdivl
cmpsl
dec
les
pop
adc
mov
push
in
and
pmuludq
fldl
cmc
dec
gs
cli
fdivl
mov
jne
shll
test
cltd
out
xchg
aad
mov
and
pop
mov
and
inc
xlat
repnz
dec
sahf
sub
mov
mov
or
mov
out
test
stos
test
cmp
fdivr
cmpsl
addr16
mov
or
push
mov
adc
shlb
cmp
out
pop
xor
lods
jg
mov
xchg
arpl
xchg
addb
mov
call
xchg
push
mov
mov
ljmp
mov
in
xchg
mov
scas
mov
mov
lods
sbb
push
sbb
bnd
mov
xor
xor
into
sbb
cmp
ss
dec
cmp
stc
mov
popf
popf
addr16
das
cmp
fs
pusha
enter
test
mov
and
and
mov
jnp
add
aam
repnz
jmp
int
sub
jo
pop
loope
loopne
jne
std
insb
popa
mov
cmpsl
sub
lock
imull
jge
cmp
cmp
push
dec
pop
sbb
sarb
jp
push
jp
add
ud1
mov
jmp
lret
cwtl
cmp
xchg
scas
rorl
in
xchg
aad
and
sub
push
sahf
or
xorb
cmp
jne
xchg
mov
test
into
push
leave
jl
inc
adc
cmp
mov
or
jp
rclb
cmpsb
scas
fdivs
cmp
andl
dec
sti
addr16
stos
push
sbb
or
negb
andl
push
hlt
out
adc
jno
ljmp
or
cmp
xchg
testb
in
fcomps
mov
in
push
lahf
adc
enter
jne
jbe
inc
test
les
mov
sahf
add
loope
push
fbstp
and
adc
pop
jae
sbb
clc
test
rcr
inc
nopl
orb
sbb
mov
push
jbe
mov
ret
inc
imul
nop
dec
and
adc
xor
mov
mov
jp
outsl
sarl
jns
push
les
out
ja
xor
stos
stos
jp
pop
jle
push
mov
xor
xor
mov
outsl
lret
and
add
add
or
xor
ds
nop
lahf
add
stc
or
mov
lds
call
mov
fcompl
cs
out
cmpsl
popf
in
mov
sbb
popa
hlt
ja
hlt
mov
lret
test
mov
mov
clc
cwtl
lcall
jae
push
out
scas
and
dec
mov
or
je
inc
jne
xchg
cmpsl
dec
mov
cmp
add
outsb
xchg
pop
mov
sbb
in
jge
idiv
mov
rcrb
dec
fdivl
adc
int
test
aad
or
inc
loopne
movsb
ret
sbb
add
inc
lcall
ret
in
sahf
push
mov
and
aaa
xor
fnstsw
repnz
aaa
sti
or
arpl
mov
cmp
mov
push
pushf
cmpsb
loop
lock
jne
je
sbb
mov
das
outsl
addl
push
mov
add
pop
imul
insl
mov
dec
mov
fs
lret
xor
or
sti
aas
arpl
mov
jns
mov
cmp
cmpl
mov
xchg
xchg
dec
pop
sbb
xchg
fnstsw
adc
imul
dec
ss
dec
sbb
inc
cli
pop
rcl
popf
cmp
sbbl
movsb
lds
data16
jbe
in
inc
push
popf
ret
subl
shll
mulb
in
jne,pt
jb
jo
fwait
xor
packuswb
stos
pop
popa
sub
lods
inc
clc
aad
imull
inc
fstps
rcl
pop
push
cs
aas
aas
adc
mov
and
push
in
mov
das
in
clc
addr16
dec
and
sbb
sbb
fst
mov
lods
notl
lret
fnsave
sbb
rorb
cmp
or
das
xchg
mov
ljmp
cli
jns
js
stc
push
sub
jecxz
pop
sahf
dec
inc
repnz
addl
xor
xchg
mov
les
addr16
adc
push
push
sbb
stos
pop
out
dec
push
aad
addb
sbb
pushfw
push
dec
sub
inc
rclb
leave
push
push
add
pop
mov
test
mov
and
sub
xor
cmp
mov
cli
pop
xchg
xchg
dec
xchg
loope
scas
adc
fildl
dec
push
clc
lea
inc
inc
fists
mull
js
sub
test
leave
and
ss
ret
sbb
cwtl
sbb
stc
in
insb
xor
jnp
cltd
or
inc
or
fimuls
mov
ljmp
mul
stc
clc
mov
aam
cmp
cmp
or
fdivrs
les
jno
fs
fstps
mov
cwtl
cmp
stos
mov
mov
cmp
jmp
push
and
adc
sbb
push
add
in
add
insb
ret
cmp
bound
in
and
jns
lcall
push
inc
lcall
sbb
adc
dec
add
inc
xchg
cltd
mov
outsl
push
xor
std
out
ja
jmp
ja
in
movsl
pop
jge
sub
pushf
add
ss
in
sbb
sbb
in
cmpsl
rcr
xchg
cmpsb
cmpsl
int
and
push
fidivrs
loop
movsb
jle
movlps
int3
jecxz
dec
xchg
cltd
imul
addr16
test
jae
sub
shrl
arpl
dec
push
into
stos
sub
pusha
xor
or
test
in
dec
das
mov
xor
mov
jge
or
jle
iret
aad
add
xchg
push
in
jbe
xchg
add
int
xchg
fnsave
add
or
iret
jno
push
add
mov
pop
pop
ds
or
mov
and
sbb
or
mov
mov
jle
loopne
stos
or
js
jl
dec
incl
pop
lds
out
in
adc
icebp
in
add
lret
mov
mov
xchg
xor
iret
repz
in
jae
inc
inc
adc
xchg
lea
cmpsb
mov
and
adc
cld
jg
lods
mov
add
push
xchg
adc
es
mov
or
pop
jmp
nop
pop
push
mov
mov
popf
fs
mov
mov
push
ljmp
ss
mov
rclb
jle
stc
lock
xchg
cwtl
dec
hlt
adc
loopne
popf
int3
dec
js
pop
mov
imul
adc
insl
dec
je
adc
icebp
or
pop
daa
insl
inc
xchg
inc
aaa
push
insb
ret
xchg
in
sahf
jle
pop
add
mov
cmc
test
jns
mov
je
mov
fiadds
push
stos
push
push
inc
mov
xchg
fcoms
leave
xorl
mov
inc
or
sahf
fsubrl
std
xchg
shl
mov
sub
cmp
inc
push
or
adc
js
push
lods
fisubrl
sbb
out
sahf
sbb
xchg
add
ror
xchg
xor
add
xchg
xor
pop
pop
divl
mov
fldenv
add
mov
xor
xlat
pusha
test
ljmp
ds
scas
ss
or
lcall
add
xor
jo
xchg
add
and
fildl
mov
test
cmp
cmp
das
popa
jns
and
mov
movsl
cld
mov
in
cmc
iret
rcrb
adc
lahf
rclb
inc
inc
gs
mov
pop
dec
sbb
lea
push
xchg
or
fistl
and
cmpb
insb
mov
xchg
xchg
pop
mov
ljmp
sahf
and
adc
or
xchg
int
inc
popa
pop
jecxz
lock
lea
inc
loopne
mov
loope
mov
int
lea
es
or
ljmp
ds
sub
mov
or
loopne
inc
sbb
insb
rorb
adc
or
shlb
cmpsl
mov
and
enter
cld
pop
test
outsl
push
xor
pop
mov
xor
add
push
sti
cmp
dec
hlt
push
jl
cltd
adc
fidivs
pusha
sar
std
data16
cmc
ret
jae
pop
fnstcw
xor
jbe
nop
cmp
nop
lret
inc
sub
push
mov
adc
daa
push
or
add
sbb
pop
push
xchg
aam
xchg
xchg
pop
movsb
nop
xor
mov
ljmp
orl
sub
mov
xor
orb
pop
xchg
add
pop
inc
enter
lock
inc
mov
js
xor
hlt
outsl
xor
repz
mov
popa
insb
in
inc
pop
repnz
push
pop
insl
lods
into
or
mov
push
insl
xchg
fcmovbe
mov
into
ljmp
mov
pop
scas
jnp
jmp
push
rcr
movsl
sbb
shlb
loop
aad
jno
movsl
inc
xchg
xor
add
pop
test
int
jnp
mov
aaa
mov
ss
jge
xor
xor
jp
sub
cltd
xchg
cmp
and
xorb
lahf
scas
xchg
insb
insl
int3
addr16
mov
loopne
adc
push
in
xlat
xchg
cmpb
or
imul
pop
jg
mov
add
nop
fs
cmpsb
je
add
std
xor
pop
lret
xchg
adc
dec
push
scas
sub
adc
lods
lret
lods
mov
andb
std
jle
xor
mov
push
dec
mov
xchg
xchg
decl
ret
lods
popa
xchg
sub
test
jmp
sbb
pusha
jbe
pop
into
loopne
pop
in
xchg
cmp
das
sbb
pop
lahf
pop
pop
sbb
or
cmp
das
cmp
jge
mov
stc
std
jl
mov
cmpsb
leave
div
lds
and
jnp
test
xchg
or
in
ja
fwait
mov
jl
mov
clc
pop
mov
add
mov
mov
int3
repnz
mov
jg
cs
call
jne
xchg
push
loopne
xorl
mov
dec
stc
push
pop
pop
mov
lret
movsb
mov
cmp
inc
loopnew
imulb
and
ret
in
mov
adc
and
mov
cmp
xchg
jb
add
and
push
xor
loope
inc
ds
dec
push
mov
mov
std
ret
mov
mov
bound
in
inc
and
in
test
sbbb
jecxz
pop
pop
rorb
and
cmpsb
call
xor
mov
std
and
sbb
enter
lret
add
lret
add
cmp
in
insl
js
loope
pop
pop
pushf
push
nopl
jb
pop
lcall
gs
mulb
test
xorb
inc
sahf
and
insl
movl
xor
xchg
lds
or
mov
jbe
fnstcw
ja
insl
inc
test
pop
pop
jl
or
mov
cltd
add
adc
push
cmpsb
mov
dec
inc
sbb
rcrl
shll
aad
fcmovnb
pop
adc
inc
push
test
or
mov
cld
dec
mov
jb
xchg
out
and
xorb
push
leave
cmp
pop
pop
std
and
adc
xor
push
aas
add
imull
lock
mov
jb
lcall
add
sub
xchg
dec
dec
jp
data16
std
xchg
push
in
leave
jge
mov
lret
xor
xor
ljmp
cli
mov
jb
incl
pop
nop
lahf
repnz
jmp
pop
cmp
jne
add
stos
scas
lock
aad
jb
movsb
dec
adc
xchg
sub
adc
repz
in
and
test
xchg
xchg
std
adc
or
dec
into
mov
stc
sbb
movsl
or
daa
jl
movsl
cltd
popf
adc
add
push
subb
jg
jb
pop
fdivl
or
xchg
xchg
wbinvd
push
test
sub
push
shr
pop
cmpsl
sbb
push
rcll
pop
cwtl
ljmp
aas
xchg
in
add
sub
clc
xchg
push
pusha
mov
popa
inc
xor
lret
lahf
add
mov
daa
mov
imul
mov
popa
cmp
aas
inc
ret
jb
xchg
and
dec
xchg
ret
mov
fwait
movsl
mov
out
sbb
jp
lahf
and
iret
push
mov
aad
add
or
pop
cli
and
orl
cmpsl
int3
cmc
sbb
aad
popf
push
loop
rclb
fsubr
mov
pop
subl
push
push
repnz
add
jbe
out
mov
fisttpll
or
pushf
outsb
jge
jl
pop
dec
xchg
mov
and
jnp
add
pop
sub
enter
pop
outsl
or
xor
shll
int
inc
mov
aas
mov
mov
sub
add
jmp
inc
test
psadbw
rclb
cwtl
push
fs
pop
movsl
xchg
mov
loope
jp
push
rolb
push
out
mov
aas
cli
add
mov
and
xchg
test
sbb
or
mov
adc
cli
aad
adc
dec
mov
sbbb
xchg
lcall
or
inc
add
mov
dec
mov
xorl
andb
sub
sub
call
rolb
pushf
push
out
xchg
loopne
cwtl
push
mov
in
pop
sahf
jae
add
inc
ret
push
sbb
add
jns
js
jb
cltd
in
inc
les
dec
and
dec
xor
daa
push
repz
inc
dec
inc
ret
sti
sub
xor
aam
dec
subb
mov
lock
or
pusha
shrb
xor
sub
out
sahf
and
jb
ret
and
sbb
adc
stos
mov
je
pop
push
or
aaa
or
or
rcr
addr16
cs
lods
adc
nop
jecxz
subb
or
adc
out
cmpsb
ret
inc
hlt
push
sub
sbb
movsb
aas
imul
and
adc
lods
inc
or
mov
inc
xor
add
es
xor
test
fbstp
sbb
lret
aas
hlt
cmp
pop
mov
test
dec
pop
test
decl
cmp
out
sbb
adc
dec
sbb
pop
ss
cmp
ret
xchg
cmp
jp
lret
std
push
sahf
jle
jne
imul
gs
das
mov
mov
dec
jo
out
lea
stos
cltd
push
cmp
pop
out
cmp
and
imul
pop
stos
nop
jo
cmp
jge
cwtl
cwtl
out
sbb
ret
fwait
sub
xor
outsl
popf
push
dec
jmp
in
stc
sub
filds
out
in
mov
xchg
pushf
cmp
fwait
ljmp
pop
in
pushf
xchg
sbb
jp
fldenv
push
jae
fs
hlt
sbb
rcll
bound
inc
and
sbb
mov
ss
xchg
mov
std
add
les
push
divl
movsb
or
shl
lcall
pop
inc
sbb
xor
pop
jno
sub
sub
mov
in
or
dec
pop
push
nop
ficoms
cwtl
fcomps
and
pop
jbe
aas
push
push
fcompl
and
subb
lahf
arpl
mov
mov
and
sbb
sti
ret
xor
scas
and
jno
std
pop
das
xor
std
stos
xchg
push
push
push
dec
dec
fnstenv
push
stos
mov
pop
or
or
insb
and
add
shlb
lods
pop
jle
movsl
push
ds
daa
xchg
adc
mov
cmp
adc
pushf
shr
lock
or
ds
loopne
pusha
mov
xor
rcll
sbb
ret
push
push
sub
add
jecxz
shl
pop
xor
ret
int
mov
dec
mov
lock
or
insw
fiaddl
sbb
inc
inc
xor
jae
xchg
mov
sub
clc
sub
sbb
mov
outsl
addb
xor
cmp
or
stc
subb
cmpsl
inc
cld
sub
gs
dec
mov
loopne
and
dec
fscale
xchg
pop
lods
cmpsb
sub
xchg
cwtl
outsl
lods
dec
xor
add
adc
dec
jnp
jb
xchg
lods
pop
inc
cmpsl
popa
and
jo
push
adc
and
xchg
pop
jg
xlat
sbb
aad
imul
daa
loope
lods
dec
nop
inc
cmp
subl
push
test
jns
aas
call
ret
out
and
cld
arpl
jg
mov
cmpsl
icebp
lcall
mov
jae
mov
adc
mov
mov
out
jge
push
movsb
lret
imul
shl
sbb
insl
push
xchg
aam
mov
icebp
dec
mov
sbb
sub
jb
push
jmp
xchg
xlat
xchg
xchg
cmp
sahf
stos
rcrb
lahf
xorb
rcll
jno
or
xorb
mov
rolb
rclb
fimull
adc
cmp
pop
cmpsl
sub
inc
out
imul
out
mov
adc
addr16
movsb
lock
mov
in
mov
mov
aas
sarl
xlat
out
imul
mov
jne
xchg
mov
out
daa
jb
mov
imul
scas
adc
decl
jno
inc
mov
scas
mov
rcrb
dec
test
jge
adc
fcmovb
jge
xorl
adc
dec
inc
dec
test
jb
data16
sub
pop
int3
dec
mov
insl
imul
andb
shlb
sbb
insb
push
scas
mov
dec
inc
and
inc
pop
add
cld
sbb
mov
in
in
dec
or
and
or
and
hlt
lea
dec
lods
cmp
mov
repnz
movsb
enter
call
iret
ja
dec
pop
fbld
mov
movsl
js
and
push
dec
out
push
push
xchg
xlat
mov
push
or
mov
lret
mov
mov
lock
pusha
hlt
add
mov
adc
in
into
mov
loop
in
push
decl
les
and
jmp
cmp
idiv
jmp
push
stos
mov
xchg
adc
out
popf
iret
sub
rcll
mov
mov
mov
arpl
daa
clc
xchg
arpl
test
mov
mov
xor
jl
rcr
das
pop
jo
dec
dec
shl
in
lret
jns
jp
lea
sub
mov
int3
cmpsl
and
adc
aad
pop
ds
rcrl
aas
mov
fcomi
pop
mov
das
test
pusha
and
adc
add
mov
mov
call
cmp
lds
pop
addl
and
add
mull
not
push
ljmp
frstor
dec
add
cmc
xchg
cmc
adc
adc
cmc
mov
add
cld
push
scas
pop
lret
outsl
adc
push
cs
pop
pop
xor
jle
jo
outsl
jmp
and
lea
add
pop
pop
push
mov
dec
dec
movsb
aad
mov
sahf
mov
testl
xchg
xlat
add
cmp
adc
test
ds
mov
enter
in
in
stos
repz
push
iret
ss
mov
scas
out
mov
add
push
imul
mov
add
xchg
xor
outsl
or
xchg
loope
pusha
push
pop
out
adc
and
addr16
inc
pop
sbb
mov
incb
stos
or
aas
mov
pop
and
push
mov
sbb
aaa
add
xchg
mov
lock
insl
cmc
adc
out
sub
xor
mov
fwait
and
stos
jge
mov
nop
sub
jge
xor
or
inc
ja
scas
out
mov
scas
sbb
jne
frstor
aaa
jne
inc
fisubrs
xchg
outsb
sti
ljmp
sbb
scas
repnz
lret
xor
nopl
mov
dec
push
fmulp
add
pop
std
cmove
filds
push
je
aad
cltd
add
int3
mov
or
push
push
imul
in
jbe
mov
or
stos
loop
popf
repnz
add
sub
and
lahf
insl
cmc
sbb
pop
pop
fwait
cmp
fs
or
test
lock
cmp
out
popa
sub
repz
dec
test
std
cmp
dec
xchg
jnp
aas
push
xor
fildl
push
dec
or
xchg
mov
adc
dec
lret
out
pop
mov
jp
out
popa
imul
cmc
sti
mov
sbb
js
dec
xchg
imul
adc
sub
stc
xor
lea
incl
call
fildll
jnp
adc
sahf
or
xchg
aam
leave
call
add
js
jae
out
push
fcomps
sub
pop
cmp
mov
out
pop
mov
stos
jg
adc
aaa
mov
xor
or
in
xor
jmp
sub
xchg
imul
mov
in
fcmovnu
mov
lahf
lret
stos
jl
dec
daa
nop
mov
je
in
pop
std
or
cli
fldt
cmpl
loopne
inc
mov
mov
aaa
stc
pop
or
stos
fadds
ss
int
mov
sbb
fbstp
arpl
int3
hlt
xor
test
xchg
mov
mov
xchg
cld
scas
jp
pop
scas
pop
xchg
insb
adc
arpl
and
lods
ret
pop
sbb
cmp
cmp
mov
mov
dec
fsubrs
inc
loope
inc
adc
je
dec
push
popa
adc
scas
inc
xlat
adc
imul
out
push
and
and
mov
js
jge
pop
clc
bound
cmpsl
fnstsw
sbb
mov
xchg
stos
mov
mov
mov
inc
dec
mov
outsb
aam
call
add
jmp
jp
cld
loop
xchg
jmp
jb
subl
in
pop
daa
in
insl
nop
lock
jge
popf
or
subl
lock
push
xchg
rorl
fstpt
into
jb
or
push
gs
push
or
pop
dec
or
lods
insl
std
iret
movsl
pop
int
popf
mov
clc
arpl
xor
ret
cmp
rcr
mov
lods
jns
scas
push
out
gs
aas
mov
lods
sub
testl
xchg
mov
xlat
pushf
stos
das
dec
sahf
pop
movsl
outsl
ja
repz
pusha
push
shll
jno
ret
and
pop
popa
test
ds
mov
xchg
sub
cltd
in
jb
cmpsb
push
pop
inc
inc
push
push
pop
xchg
cmp
pop
jae
push
xchg
dec
pop
dec
movsb
insb
jmp
cmc
and
cmpsl
fistpll
pop
clc
jecxz
repnz
jne
sbb
subb
push
idivb
jp
mov
mov
out
push
lcall
daa
bound
ja
ds
xlat
adc
inc
test
hlt
mov
add
cwtl
jmp
lret
mov
sbb
dec
xchg
sub
out
int3
sbb
fstpl
pop
lods
out
and
icebp
or
cmp
sbb
faddl
xor
scas
ja
mov
cmp
push
push
sbb
dec
mov
fcompl
movsb
push
loopne
ficoml
in
imul
xchg
scas
jg
mov
sbb
dec
inc
sahf
sbb
adc
test
sbb
sbb
cs
cltd
jno
pop
jns
in
jl
jp
xchg
add
cmp
jecxz
sub
std
jge
aas
adc
test
jbe
aaa
pop
mov
push
repnz
aaa
jl
push
jle
cwtl
sub
and
and
xor
cs
out
popl
cmp
arpl
inc
mov
leave
inc
ja
cmp
and
jbe
push
dec
fidivrs
mov
jnp
mov
xchg
mov
out
mov
push
loopne
xchg
xor
lds
sub
lods
je
xor
repz
shrb
or
or
sbb
ss
daa
call
push
xchg
inc
std
push
mov
aas
stos
xchg
xchg
mov
rol
pop
icebp
mov
xchg
sbb
pop
adc
rcr
incl
clc
loope
sbb
xor
inc
inc
jb
inc
mov
mov
out
aam
lods
ljmp
inc
xchg
jne
pushf
mov
sbb
addl
xchg
mov
lcall
or
outsb
jnp
inc
test
test
ljmp
fmuls
cmpsl
cmp
pextrw
add
or
or
cld
rolb
bound
stos
mov
dec
cmp
cwtl
inc
es
cmp
cwtl
insl
int
add
xchg
xor
dec
es
sti
lcall
mov
hlt
mov
rcrl
sbb
mov
push
hlt
pop
pop
sub
mov
dec
xchg
and
mov
es
clc
inc
popf
and
mov
add
stos
fdivl
loop
test
xor
xorb
ja
fimull
outsb
popl
fmuls
sti
sub
push
outsb
mov
mov
pop
aad
daa
rcl
das
incl
pop
mov
jecxz
cwtl
push
or
in
loop
aam
sub
or
xchg
or
xchg
fadds
xchg
pop
mov
sub
or
add
xchg
jp
mov
sti
pusha
cli
xor
jb
mov
adc
loop
adc
arpl
push
dec
insl
jg
inc
loopne
sti
std
pusha
outsb
popa
cwtl
ljmp
jecxz
loopne
ss
and
mov
fists
mov
dec
adc
sbb
in
push
or
shlb
stc
fmuls
adc
ret
mov
mov
cmp
sar
push
je
jge
cmp
push
loop
cltd
sahf
sub
nop
dec
lea
inc
test
lods
pop
push
mov
dec
inc
lds
leave
xor
xor
scas
xchg
sbb
pop
mov
mov
cmp
jns
pop
cmp
adc
cwtl
sub
in
cmpsb
in
call
push
add
xor
int
loopne
cmp
repnz
shl
int3
mov
les
xchg
gs
inc
rcll
or
vpmacsdql
mov
cmp
testl
or
push
push
jb
inc
adc
push
cs
mov
inc
loop
xor
inc
dec
sti
loopne
adc
int
sub
pusha
adc
sbb
sti
ret
pop
mov
les
sbb
sahf
mov
aas
cmc
mov
int
dec
jp
mov
daa
sub
les
pop
mov
push
sbb
mov
movsl
xchg
sub
lret
rclb
jnp
fsubl
jmp
cmp
mov
and
jbe
push
lcall
test
xchg
and
and
cwtl
pushf
ret
pop
xchg
push
jge
fsts
jle
adc
shl
cwtl
dec
stc
mov
adc
cmp
jecxz
ds
mov
adc
jbe
xchg
es
fwait
push
and
ret
jne
fcmovb
dec
mov
mov
or
pop
imul
mov
in
xchg
cmpb
iret
icebp
dec
inc
mov
lea
cmp
xchg
popa
dec
cwtl
mulb
mov
sbb
fistl
shll
gs
leave
fstpt
push
inc
jge
pusha
pop
push
sub
pop
xor
loopne
idiv
aas
push
xchg
sahf
out
and
jle
arpl
mov
and
loopne,pn
cmp
loopne
adcl
mov
ret
xchg
cld
imul
dec
cmp
push
add
movsb
adc
testb
and
mov
and
int3
lea
lret
push
inc
ret
xchg
xchg
fldcw
mov
pop
pop
fistpl
or
dec
inc
push
xor
jmp
xchg
insb
cmp
pusha
ret
in
jbe
and
xchg
test
pushf
or
cmpsb
dec
lahf
or
lods
add
inc
std
sbb
paddsb
out
jmp
movsl
ret
adc
pop
jl
adc
les
mov
stc
add
addb
xor
mov
addb
lods
pop
and
push
push
sub
mov
scas
mov
lods
add
or
cmpsl
fiaddl
xor
pop
sbb
adc
jecxz
stos
out
mov
pop
mov
hlt
dec
insb
mov
mov
sub
nop
rorb
add
inc
or
push
push
minps
inc
sub
stos
lcall
jbe
jno
fdivrl
add
sbb
lret
incl
or
mov
aaa
pop
push
cmp
sbb
xlat
pop
mov
mov
dec
fwait
jbe
lcall
popa
push
test
pop
adc
outsb
inc
and
in
xchg
cmpl
mov
out
pop
out
mov
leave
jmp
inc
mov
or
test
xchg
cltd
stos
out
cmp
add
mov
xchg
sbb
mov
ror
mov
push
dec
mov
mov
orb
rcll
pop
fbld
sbb
sbb
add
das
cmp
shr
and
cltd
lcall
add
push
scas
pop
pop
rolb
xchg
pop
add
jge
adc
mov
insb
add
pop
rcrl
inc
and
mov
cltd
and
pop
out
enter
les
and
lds
pop
xor
dec
fiadds
dec
cwtl
hlt
jg
push
pop
jmp
dec
pop
add
es
push
add
ljmp
dec
insb
jge
rolb
cmpsb
cmp
or
inc
xchg
int
fsubr
sub
testb
mov
dec
loop
out
mov
pushf
jnp
out
fisubs
mov
pusha
ja
push
dec
test
clc
sub
jo
fnsave
aas
xchg
int
mov
test
mov
shlb
ret
hlt
cmpsb
inc
cmpsb
sub
dec
add
aam
sub
xchg
in
les
push
frstor
incb
stos
push
lods
jmp
movb
xor
cld
add
cmp
inc
popf
jecxz
int3
dec
movsl
outsl
dec
ficomps
dec
cmp
mov
fstl
lcall
cmpl
jo
popa
rorl
xor
data16
icebp
mov
int3
lret
repnz
xor
xor
xorl
fidivl
sub
adc
cmp
ret
iret
mov
jg
loopne
push
sbbl
fldt
or
ficompl
lret
mov
push
and
add
sub
lahf
sub
cmp
lret
js
stos
cmp
adc
mov
xchg
in
nop
rolb
mov
popw
xchg
mov
push
ret
sarl
jle
adc
cmp
out
xchg
sarl
lods
cmp
nop
or
lret
and
movsl
ja
mov
ret
into
mov
push
inc
arpl
jmp
filds
subb
lods
loop
jno
sub
out
cmp
add
mov
ss
aas
frstor
mov
pop
std
xchg
xchg
stos
das
repnz
mov
movsl
or
fs
movsb
cmpb
std
ljmp
pop
int
stc
adc
loope
lods
mov
ror
ret
or
and
clc
and
cmp
sti
stos
ja
jae
cmp
loope
in
lock
mov
cli
fnsaves
out
mov
adc
xchg
xchg
or
mov
cmpb
arpl
fs
ljmp
mov
ds
and
cmpsl
xchg
jns
add
test
lcall
sub
and
cmp
test
repz
or
andb
mov
pop
inc
call
adc
jno
or
leave
or
cmp
mov
jo
lods
xchg
add
or
imul
jne
pop
dec
les
push
rcr
insl
lret
xor
mov
xchg
xchg
popa
in
dec
push
xor
mov
loope
fcmovb
mov
imul
test
pushf
insl
in
mov
mov
push
int
mov
push
imul
lods
xor
and
dec
std
dec
in
mov
and
add
fcmovu
push
addr16
jae
xchg
fdivs
mov
movsb
mov
add
add
scas
push
mov
into
lahf
fcmovu
sub
shl
jae
cmp
xor
out
ljmp
pop
adc
pushf
cmc
pop
shrb
jbe
pop
inc
xor
aas
push
test
call
lcall
add
sbb
jae
cld
fwait
jns
or
inc
shll
pop
sbb
mov
jo
cmp
xchg
imulb
and
xlat
rorb
iret
push
mov
adc
out
js
cmp
outsl
punpckhdq
and
jp
repnz
subb
adc
dec
xchg
mov
add
shll
mov
int
aad
xchg
xor
jnp
xorl
popa
shr
adc
fsubr
dec
das
fs
rol
inc
push
test
aad
lods
scas
xor
xor
and
dec
mov
outsl
xchg
adc
push
test
sbb
dec
das
frstor
mov
cmpsl
mov
pop
adc
push
movsl
gs
in
mov
iret
adc
js
gs
push
rorl
fdivrl
lods
shll
outsl
pop
mov
pop
fld1
mov
inc
addr16
inc
xchg
out
pop
inc
jns
xchg
dec
push
leave
gs
mov
inc
sbb
dec
scas
mov
adc
sbb
sub
loope
icebp
mov
push
add
and
sarl
ret
xchg
pavgw
push
call
and
xchg
andb
mov
pop
ja
mov
loope
pop
stc
cmp
leave
sbb
jle
mov
loope
out
fldt
pop
pop
loope
mov
in
mov
addr16
mov
addb
pop
mov
icebp
push
cmpsl
jb
or
xor
jmp
fcompl
nop
or
push
ss
test
push
fwait
dec
and
inc
in
jl
add
cmp
rcll
shl
inc
cmp
cltd
loop
fisubrl
lcall
push
hlt
mov
xor
xchg
imul
mov
inc
in
mov
in
or
xor
inc
testl
lret
out
push
mov
xchg
push
js
arpl
fidivrs
inc
inc
lds
xchg
cmpsb
insl
dec
xchg
lret
js
stc
aad
jmp
mov
stos
inc
jl
dec
cmp
push
out
aam
cld
mov
push
movsl
das
sub
mov
xchg
sbb
adc
lcall
add
push
jns
movsb
mov
cwtl
pop
out
jmp
push
jmp
rcrb
sub
jg
inc
add
sub
pop
lea
or
lahf
fisubrl
mov
jg
xchg
andb
pop
sar
xor
pop
adc
fsts
xor
pop
das
xchg
sub
mull
repz
jg
xchg
sbbl
xlat
lcall
stos
aam
add
jl
sarb
iret
mov
push
movsb
and
fwait
gs
out
push
jno
inc
aas
mov
mov
sbb
loop
jns
add
pusha
rol
in
test
mov
xor
sahf
lock
fwait
cli
mov
jne
leave
xchg
or
xchg
push
rcrb
stos
cld
sti
mov
push
pop
dec
sub
ja
sub
mov
test
inc
fistl
xchg
mov
or
sarl
jl
mov
daa
jae
fs
insl
sub
or
and
lea
cs
les
rorl
inc
mov
push
or
shll
out
add
inc
sbb
or
or
daa
std
pop
in
mov
jae
sti
popf
xorb
mov
adc
ret
je
mov
lret
out
adc
and
mov
js
test
insb
scas
negb
cmp
ds
ret
rcll
fildl
test
aas
mov
xchg
sub
sub
pop
adc
push
or
mov
and
scas
sub
push
add
or
cmp
mov
adc
fnstsw
mov
or
xchg
inc
sbb
and
or
aam
stc
loop
test
insb
fstpt
dec
jno
gs
mov
fdivl
mov
shll
shlb
std
sbb
popa
pop
jmp
and
out
pop
inc
test
mov
movsb
lahf
inc
mov
shll
sbb
sarb
xchg
inc
orl
push
stos
cmc
adc
iret
je
push
cmp
jbe
in
sbb
xlat
fiadds
sahf
comiss
aas
orb
cltd
and
xchg
dec
lea
xchg
jbe
mov
cld
mov
dec
mov
xchg
jb
stos
je
lret
loope
scas
sbb
js
js
inc
imul
loop
loopne
push
fwait
xor
push
scas
fdiv
lcall
fidivrl
jno
or
mov
cmp
mov
add
push
scas
aas
scas
sbb
orl
fidivl
pop
mov
add
enter
fstps
pop
sub
cld
adc
out
popf
outsb
sub
cli
out
dec
xchg
aaa
in
je
pop
or
cld
ljmp
lods
pop
jl
add
push
inc
data16
push
xor
jl
mov
xor
ljmp
and
outsl
loop
call
dec
cli
lea
cmp
inc
ret
ret
es
das
repz
push
push
js
sub
dec
push
sbb
out
cmpsl
pop
sub
jle
out
adc
mov
das
nop
sub
inc
mov
sar
push
test
cmp
or
les
adc
push
dec
and
cmc
leave
sbb
pop
dec
rcr
gs
test
cmpb
or
mov
push
xor
es
es
test
mov
ficoms
test
mov
mov
lret
andb
mov
ret
add
mov
mov
pop
out
and
xlat
call
sub
add
push
pop
cmp
or
jo
inc
xlat
dec
pusha
add
lcall
add
xchg
push
add
lcall
or
sub
imul
add
inc
jb
and
push
inc
pop
dec
stos
out
test
mov
mov
sbb
jp
pop
mov
ss
lret
dec
movsl
cmp
sbb
sub
inc
mov
xor
lret
ss
cmp
pmulhuw
jnp
dec
fwait
pop
fxch
imul
mov
movsb
or
mov
or
stc
lods
dec
loop,pt
jle
jne
dec
mov
push
jg
shrb
xchg
fiadds
cli
insl
enter
scas
outsb
cmp
lods
or
and
push
mov
xchg
pop
add
dec
add
inc
fsubrp
shl
rolb
xlat
decl
sbb
add
in
mov
daa
push
imul
push
pop
ss
int3
test
push
cmp
and
outsb
mov
and
sahf
mov
int
xor
xor
push
stos
jbe
loop
pop
out
add
iret
xchg
les
adc
jmp
sahf
cmp
inc
pop
in
jbe
test
inc
mov
aas
or
pop
xchg
out
rolb
sub
cmpsb
push
lods
mov
aam
cs
xor
pop
sub
mov
add
jb
std
aas
pop
fwait
adc
clc
push
int3
fistl
cmp
jmp
adcb
push
fiadds
rolb
loopne
pop
popa
sarl
outsb
mov
andl
xor
test
push
lods
ss
sub
jl
rcr
push
insl
xor
jbe
and
inc
scas
or
test
push
loop
adc
add
movsl
inc
movb
out
cmp
add
mov
inc
jns
rcr
mov
daa
pop
std
mov
fdivrs
cmp
xchg
out
fdiv
movsl
xchg
or
cmp
pop
cltd
rcl
adc
enter
sub
xchg
push
fldt
push
sbb
ret
inc
sbb
adc
mov
lds
pop
lods
jmp
xchg
pop
das
ficomps
and
adc
fwait
stos
mov
fwait
add
or
divl
jo
adc
ljmp
leave
xor
divl
push
test
push
mov
add
ljmp
dec
cs
andl
mov
ljmp
call
pop
dec
ljmp
test
adc
movb
jne
fildl
mov
sar
pop
out
subl
cmp
inc
mov
sbbb
in
sub
rcll
jo
jbe
and
test
call
push
scas
fwait
xchg
sub
adc
aam
movsl
inc
and
popf
dec
mov
dec
or
jmp
out
leave
int
movsl
stos
mov
or
fdivrs
mov
push
mov
pusha
inc
xchg
mov
scas
je
jo
sub
loop
pop
stc
insl
js
add
repz
lods
adc
ja
sub
ret
mov
xor
cmp
lcall
xchg
imul
es
jnp
stc
fldcw
ljmp
or
adc
push
sti
out
xchg
xor
in
mov
sub
fimull
mov
hlt
aam
ljmp
cmpsb
fxch
stos
add
jb
adc
mov
fldcw
pop
sub
mov
fdivrs
lret
in
out
fadd
or
stc
outsb
dec
shll
or
aad
and
mov
jmp
pop
push
xchg
cmp
sbb
and
fdivrs
push
insb
orl
adc
addl
cmp
cmc
mov
in
mov
sub
push
ja
push
jge
jecxz
or
inc
mov
push
push
fldenv
jns
xchg
in
pop
mov
and
adc
daa
jle
lahf
dec
pop
pop
je
lcall
xchg
ret
mov
test
xor
out
pusha
out
pop
es
push
cmpsl
push
push
mov
sbb
mov
ljmp
mov
rorl
mov
cmc
fs
dec
jmp
mov
mov
mov
popf
in
dec
jae
outsl
cwtl
lods
xchg
test
cmc
push
lods
cmp
and
or
pop
sbb
mov
hlt
icebp
mov
cmpsl
cli
loopne
int
lods
jmp
repnz
and
pop
cmc
or
xor
add
bound
cld
nop
fdivl
cmp
rclb
or
cmp
cmp
mov
or
frstor
fiadds
pop
cld
sub
sub
cmpsb
dec
outsb
lock
jo
setp
sub
orl
leave
adc
shr
dec
sub
out
add
repz
out
cmp
xchg
adc
push
data16
imul
lea
test
inc
inc
notb
in
scas
cmp
dec
out
xor
or
mov
divb
add
push
sub
mov
fadd
jbe
int3
arpl
mov
add
jmp
pop
push
leave
ret
clc
add
enter
in
mov
dec
sub
les
cmp
push
xor
mov
mov
mov
aad
lock
push
inc
incb
popf
sub
data16
pop
push
mov
jo
lret
pop
mov
jge
in
lods
push
jmp
mov
xor
ds
jae
push
xchg
popa
std
mov
hlt
inc
mov
leave
hlt
pushl
adc
das
lcall
ficoml
in
push
sub
push
pop
or
mov
lcall
adc
push
and
cmp
pop
movzbl
pop
cld
push
sbb
outsl
mov
in
cmp
adc
pop
dec
xchg
dec
mov
out
dec
aad
jmp
jne
cmp
pop
inc
sub
push
adc
sbb
cmpb
sub
jno
pusha
out
lea
fstl
addb
mov
pop
ljmp
add
dec
addb
stc
adc
out
adc
lret
cmp
arpl
mov
jns
pop
add
mov
jecxz
pusha
rcrb
out
fnsave
xchg
lahf
cmp
adc
bound
xor
inc
in
nop
push
shll
push
pop
push
mov
jae
enter
dec
mov
nop
add
push
add
icebp
ljmp
mov
repnz
push
testb
stos
popa
mov
out
lret
movb
pop
outsb
xor
icebp
lgs
and
pop
int3
dec
jbe
inc
popf
mov
repz
clc
shl
pusha
xchg
in
or
ljmp
adc
inc
rorl
mov
int3
das
js
js
mov
hlt
repnz
jmp
mov
fbld
jne
pop
call
or
jl
jl
rol
andb
sarl
cmpb
mov
ret
aaa
cmpsl
into
xlat
outsl
or
shll
or
hlt
dec
or
dec
pop
jbe
in
push
push
andl
loope
or
inc
sbb
mov
popl
pop
lods
sub
mov
mov
imul
mov
cmp
daa
lret
nop
or
fisubrl
pop
out
and
inc
sbb
lcall
call
xchg
sbb
push
aas
daa
pushf
cmp
xchg
xor
jecxz
ja
fistpll
sbb
aaa
push
movsl
mov
or
jl
nop
sub
and
mov
jno
mov
stc
push
push
cli
mov
jge
push
iret
daa
pop
pop
ja
int3
xchg
addr16
sbb
sbb
jecxz
cmpsl
cmp
dec
mov
rcll
sti
add
lods
jl
in
xchg
inc
insl
inc
les
ss
pop
in
xlat
or
loope
jno
stc
rorl
stc
dec
aaa
adc
std
dec
and
push
lcall
jae
mov
sbb
add
ret
shrb
jnp
xor
push
dec
mov
outsb
push
xchg
add
inc
xor
push
sub
mov
nop
jge
mov
movl
out
mov
shrl
in
jo
icebp
and
imul
fcmovne
add
mov
test
jae
xchg
pop
scas
cld
call
mov
cmp
add
cwtl
shlb
es
sbb
pop
and
fbstp
addr16
inc
testl
or
test
sbb
decl
pop
ror
popa
fwait
pushf
testb
adc
in
sub
loop
adc
xlat
pop
xchg
lret
mov
dec
mov
in
ljmp
push
cmp
ret
outsb
in
pop
shll
arpl
stos
cltd
jae
mov
insl
lret
in
pop
fwait
iret
add
xchg
xchg
mov
out
stos
int3
frstor
fdivs
fbld
ljmp
push
pop
mov
ret
jno
sub
out
add
push
adc
mov
add
nop
movsb
adc
xchg
lods
es
rcl
lret
ds
out
fiadds
jne
notb
add
pushf
cmpsb
popa
pop
cmpsl
mov
pushf
out
and
testb
jne
fistps
enter
fnsave
pop
inc
cwtl
inc
xchg
push
ljmp
xchg
das
mov
dec
in
icebp
push
sahf
pop
test
aaa
dec
bound
lds
pop
pop
fidivs
leave
and
pop
push
sub
mov
mov
push
dec
mov
jge
cmp
testb
scas
das
rorl
xor
bound
fdivs
sub
addr16
ret
cmp
xor
pusha
mov
pop
xor
sub
test
dec
dec
mov
mov
rcr
aad
xlat
insb
scas
push
dec
loopne
dec
jecxz
shl
vfmadd132ss
mov
mov
xor
test
push
loopne
mov
add
sbb
cmp
mov
test
xor
int
adc
mov
add
fcmovnb
stos
jle
jb
stc
xor
addb
popf
gs
mov
push
adc
push
adc
adc
lcall
jno
lret
outsb
add
mov
ret
sbb
popf
shlb
xor
xchg
iret
push
mov
int
inc
xor
test
call
and
out
dec
in
minps
mov
rcll
insl
pop
push
aaa
daa
push
and
test
pop
xor
xor
out
ficompl
and
repnz
mov
jecxz
iret
jns
pop
push
cli
aam
push
fimull
add
jns
mov
in
pop
mov
cmp
test
es
bound
iret
aas
jb
repz
and
testb
mov
and
xchg
dec
jecxz
out
xchg
push
mov
fs
in
loop
and
xchg
adc
and
cmpsl
fdivl
movsb
inc
pop
loopne
ja
jns
jecxz
and
scas
gs
repz
push
xor
loop
mov
ds
aam
sub
les
lcall
hlt
lock
dec
popf
sbb
xchg
and
sub
lret
cmp
aas
mov
mov
adc
es
lahf
aam
jo
push
clc
aaa
pop
adc
imul
pop
mov
adc
int3
sub
add
jecxz
je
loop
stos
and
sub
clc
fldl2e
jecxz
adc
lds
mov
sti
push
add
aaa
in
xchg
sbbb
js
fisubl
scas
arpl
pop
pop
sub
repz
push
cmpl
data16
lretw
inc
out
mov
imulb
shll
shll
xchg
out
arpl
cwtl
in
lcall
push
mov
aam
pop
ss
inc
xchg
mov
mov
loopne
stos
int3
mov
lock
jle
pop
mov
jo
mov
sub
jge
or
push
dec
dec
mov
and
loopne
or
sub
sbb
rcl
shlb
iret
dec
in
sbb
sbb
cmp
ja
pop
iret
jno
push
pop
rcr
sarb
cmp
xor
jno
pop
loope
mov
sbb
fdivl
mov
push
add
lods
mov
sbb
add
out
sarl
fs
movsl
fcmovnbe
cmp
in
subb
movsb
mov
pop
mov
nop
pop
mov
add
insl
ss
inc
xor
fadds
popa
hlt
mov
sub
sub
popa
mov
xor
mov
mov
mov
sub
add
pop
fwait
mov
or
outsl
je
push
in
leave
std
push
and
cmp
jecxz
pop
bound
mov
lea
mov
stc
mov
pop
int
imul
cli
and
inc
cli
mov
dec
ret
and
ret
push
sahf
and
jg
mov
sbb
subl
shlb
pop
push
dec
in
rorb
ljmp
pop
into
popa
adcl
or
push
ja
xchg
lcall
xchg
cmp
xchg
lea
cmc
jge
loop
cmpsb
or
lods
out
pop
push
cs
fwait
push
lahf
int3
fbld
pop
and
push
push
pop
lcall
add
mov
pop
sbb
in
mov
fisttpl
sti
sbb
sbb
push
jecxz
xchg
add
pop
fcmovbe
outsl
scas
dec
push
xor
inc
fwait
and
sub
mov
sbb
sub
xchg
or
add
mov
es
xchg
lcall
out
mov
xchg
jp
or
jb
push
fistl
aam
or
pop
iret
jns
or
test
or
mov
adc
jg
xchg
mov
test
cmpsl
imul
push
arpl
aad
add
stc
fsubrl
sub
push
cmc
push
jne
ret
pop
lahf
leave
testl
xchg
adc
fidivrs
and
sbb
xchg
xor
xor
adc
and
sub
or
lret
shlb
roll
test
popf
fstpt
xor
cwtl
das
jno
ljmp
sbb
cli
jmp
sub
arpl
xchg
mov
push
pop
mov
sub
adc
lcall
outsl
xchg
inc
dec
ds
push
xchg
mov
add
movsb
scas
rolb
pusha
add
add
mov
inc
dec
ficoml
fildl
in
xchg
data16
mov
fs
dec
jae
es
movsl
loop
notb
nop
iret
pop
fisttpll
cmp
fldcw
jb
jns
lods
lods
adcb
loopne
cs
lret
dec
movsl
xlat
incl
insb
mov
iret
push
dec
mov
fsubr
cltd
jle
or
sbb
mov
xchg
lret
nop
stc
gs
xlat
sbb
xor
in
mov
mov
mov
hlt
outsl
jb
and
add
into
sbb
ds
inc
fisubs
pop
ret
mov
xor
cmp
inc
aas
jno
and
cmp
inc
mov
fistpll
dec
push
lods
mov
int3
add
xor
dec
xchg
lods
mov
pop
fildl
fcomps
in
adc
adc
add
jl
or
sarb
test
data16
loop
jge
cmp
xor
sarb
cmc
sub
and
test
cmp
mov
test
lods
xchg
cmp
pop
insl
adc
test
xor
mov
test
xchg
std
lcall
iret
icebp
push
mov
or
lock
call
and
imul
loope
pop
imul
fcmovnb
lret
mov
xchg
loope
pop
mov
pop
jmp
stos
inc
lret
out
jle
cs
stos
out
movsl
nop
xchg
data16
cmpsl
iret
pop
fmuls
jbe
dec
xchg
clc
data16
add
push
sbb
in
xchg
aam
loopne
pushf
insl
movmskps
xor
scas
cltd
and
or
xchg
cmp
sub
cltd
xchg
aaa
cmp
call
mov
inc
imul
xchg
into
lock
xor
inc
sub
idivb
mov
or
push
pop
sub
mov
jns
mov
fwait
mov
jae
movsb
adc
jae
scas
mov
mov
push
ret
mov
mov
outsl
and
dec
cmpb
cmp
mov
xor
mov
clc
push
pop
pop
cld
cmpsl
pop
cmp
out
sub
movsl
jg,pt
sub
movsb
andb
fwait
sub
scas
cmc
out
add
lahf
incl
sub
cmp
mov
rcrl
insb
mov
frstpm(287
neg
rorb
push
jg
xor
jbe
in
mov
mov
in
fldenv
dec
cltd
mov
popa
jns
fmulp
sbb
repnz
fsts
push
xchg
enter
imul
sbb
mov
addr16
jmp
mov
scas
jge
pop
fnstsw
nop
sub
or
or
inc
mov
mov
adc
aaa
aas
movsb
and
sbb
ror
sub
pop
outsl
rcl
inc
mov
lret
stos
cli
and
test
xchg
bound
adc
push
fdivl
jbe
hlt
mov
aas
xor
inc
cmpsb
push
pushf
sar
daa
gs
sub
adc
ret
inc
pop
inc
dec
icebp
xchg
sbb
pmulhuw
fdivrp
ficoml
movl
push
lods
lcall
mov
fwait
lods
pusha
aas
sbb
inc
das
popa
pusha
pushf
push
inc
and
mov
icebp
xlat
bound
mov
jae
dec
push
arpl
inc
sub
dec
imul
out
cmp
cmc
jmp
mov
movsb
dec
js
into
ficompl
repnz
addr16
cmp
mov
std
aad
lods
pop
jo
mov
mov
cmpsl
out
pop
lret
mov
lret
in
cs
cmp
mov
mulb
mov
cwtl
repz
leave
push
dec
add
aas
mov
scas
cld
push
data16
addr16
lret
cmp
pop
pushf
cmc
pop
sahf
lods
ret
int3
movsb
pop
pop
push
daa
push
xor
push
lret
je
cmp
jno
inc
ds
push
daa
aaa
daa
js
iret
mov
xchg
cmpsb
loope
in
dec
ja
inc
cli
hlt
inc
cs
out
stos
push
rcrl
inc
scas
invd
decl
sub
dec
fmull
ret
sbbl
jo
jecxz
dec
cmp
aas
adc
out
cld
dec
imul
fdivr
sub
adc
pop
sbb
sub
adc
test
dec
jmp
dec
ja
aas
xchg
out
cmp
add
add
sbb
sbb
movsl
xor
cld
jae
cmp
iret
loopne
mov
mov
pop
repz
pop
arpl
pop
xor
sti
pop
je
pop
insb
into
das
xor
fwait
jle
fwait
jmp
mov
sti
jmp
test
xchg
rcll
jae
pushl
in
mov
xor
xchg
pop
dec
lret
aaa
orb
outsl
adc
jae
fisubl
sub
xchg
dec
hlt
push
fcomps
pop
test
repz
sahf
cmp
pop
push
data16
push
mov
xchg
ljmp
xor
mov
ja
sub
cld
ret
rcll
jle
or
mov
jp
mov
fidivrl
adc
lock
push
mov
fs
xor
in
mov
gs
movsl
aam
jmp
adc
xchg
clc
jno
pushw
dec
lods
ds
pop
mov
mov
mov
add
inc
mov
jae
js
cmp
out
ret
mov
sub
xchg
jae
mov
mov
imul
jne
add
loop
lahf
xlat
and
jne
mov
fs
test
lods
add
pop
push
pop
mov
sahf
or
cmc
stos
mov
out
and
add
inc
int
cmc
push
mov
mov
xor
mov
aaa
insl
sahf
sbbb
mov
shll
push
mulb
mov
lea
push
cs
lds
sub
das
jmp
cs
or
fsubp
rdmsr
adc
into
cmp
push
int3
add
push
cmpsb
mov
das
ja
lret
adc
sti
mov
xor
push
pop
rcll
push
add
cwtl
sbb
fidivl
scas
jae
mov
dec
mov
adc
push
adc
or
sbb
adc
mov
sbb
jge
sbb
cmpsb
push
pop
notb
xchg
mov
dec
mov
outsl
xor
dec
jns
mov
inc
cmc
test
fisubrl
ret
popf
int3
int3
mulb
movsl
mov
pop
repnz
sbb
inc
ljmp
out
inc
pop
popf
jb
sub
mov
cld
outsb
mov
mov
mov
add
xchg
mov
mulb
jg
dec
xchg
xor
sahf
int
push
aad
adcb
pop
mov
arpl
gs
imul
cmpsb
call
fcompl
icebp
cmp
pop
mov
push
and
mov
jge,pn
xchg
stc
mov
or
push
dec
mov
ljmp
outsl
xchg
out
push
aaa
jae
lcall
in
mov
imul
xor
cmp
in
or
daa
xor
pop
mov
xor
int3
lods
in
xchg
sarb
pop
inc
xchg
mulb
push
mov
lret
in
paddd
popf
mov
aaa
nop
and
movd
push
fistpll
call
fldcw
flds
push
les
shl
mov
daa
add
jnp
adc
lock
cltd
adc
mov
inc
cmpsb
es
repnz
cmpsl
mov
out
imul
inc
xlat
rdmsr
mov
cmp
scas
adc
adc
arpl
pop
mov
pop
or
icebp
jns
mov
into
pop
loopne
cmpsl
sbb
pop
sub
sbb
mov
push
or
and
pop
mov
movsb
xchg
rcr
push
add
adc
fstp
cmp
mov
fdivp
inc
rcrb
popa
jp
dec
push
or
sbbb
addr16
movsl
rcrl
cli
mov
sbb
inc
sub
or
push
inc
dec
rorl
addb
lahf
pop
imul
or
push
cli
lahf
lahf
out
je
inc
pop
in
or
je
push
sbb
test
sti
not
jle
push
jl
push
sbb
cld
shlb
mov
or
icebp
mov
sbb
pushf
sbb
and
imul
mov
dec
or
and
mov
mov
push
in
sbb
adc
arpl
nop
sbb
sub
mov
pop
mov
pop
inc
ds
daa
lods
jle
mov
cmp
add
mov
push
cmp
fldcw
mov
mov
cmp
pop
cmc
jmp
shll
or
stc
cli
or
repz
shl
jnp
int
das
xlat
gs
lcall
lahf
mov
cwtl
repz
adcb
pop
cs
test
jns
pop
dec
or
pop
das
sbb
scas
out
in
std
cmp
jmp
add
call
and
pop
sbb
and
movsl
adc
dec
cwtl
inc
pop
push
js
lods
dec
or
repnz
in
into
data16
cwtl
shl
push
in
aam
popa
divb
and
inc
das
loopne
int3
push
je
imul
mov
iret
adcb
pushf
or
lea
aad
out
std
imul
push
or
mov
dec
add
ljmp
mov
sbb
mov
imul
imull
sub
sbb
jecxz
xchg
lods
es
repnz
push
fimull
repz
lock
xor
inc
into
or
cmp
aam
ja
test
mov
lods
mov
cmp
mov
pop
adc
movsl
clc
inc
push
rol
sti
int
je
fnstsw
jp
xor
jg
mov
fsub
clc
repnz
jmp
jl
or
out
fcomp
outsb
mov
sbb
cmpsb
js
mull
sbb
push
inc
xchg
push
pop
push
repnz
inc
adc
pop
xor
into
xchg
pop
in
sbb
cltd
fnstsw
xchg
inc
inc
cmp
pop
aas
pushf
mov
jmp
inc
mov
loop
xor
push
and
sub
cmp
sub
data16
daa
adc
test
int3
jmp
lea
ss
pop
movsb
and
push
lock
fbstp
in
jp
dec
mov
adc
insb
xor
mov
scas
adc
mov
mov
bound
jns
jne
into
mov
lea
inc
lods
test
inc
jge
jbe
and
icebp
sub
je
add
scas
shl
lds
mov
in
cmp
pop
sahf
dec
shlb
pop
jns
sub
jne
mov
aaa
inc
mov
and
shll
dec
sti
push
data16
scas
mov
out
inc
out
cmp
adc
dec
into
gs
jge
ret
or
repz
out
jns
cmp
push
xor
mov
jle
and
xchg
fwait
pop
mov
ja
sti
jle
sbb
int
lods
add
js
shr
insl
adc
pop
mov
clc
push
sub
jb
gs
lea
stc
scas
cmp
cwtl
push
mov
insb
call
jo
leave
nop
popf
bound
imull
stos
decb
xchg
and
xchg
mov
fisttps
cli
mov
xor
mov
sub
out
fisubs
test
mov
push
xchg
sarl
movb
scas
xchg
pop
in
xor
sub
push
lahf
and
sub
add
nop
and
jecxz
mov
cli
jg
add
mov
into
lods
stc
push
aam
cli
in
lds
add
lret
or
bound
push
push
or
negb
popa
aad
repz
xchg
mov
imul
push
mov
mov
dec
out
sub
pop
jbe
mov
push
xchg
fdiv
lcall
push
inc
pop
jp
jecxz
testl
fldt
xchg
popf
mov
add
cmp
lcall
jbe
mov
pop
jb
inc
and
dec
jnp
stos
xor
xchg
dec
outsl
jb
jp
movsl
in
sub
ret
mov
pop
mov
push
mov
sti
je
cmp
sbb
cli
mov
mov
dec
xlat
dec
inc
mov
and
fcmove
lods
scas
sbb
mov
js
xor
sbb
movsl
andl
mov
nop
add
iret
cmp
lods
ret
xor
xor
enter
sbb
dec
scas
cli
dec
imul
cmp
nop
hlt
inc
and
mov
cmp
test
cli
lcall
loop
pop
cli
lret
xor
shlb
mov
shll
jo
jo
mov
loope
sti
adcl
xchg
test
dec
int
fidivrl
cmp
pop
mov
inc
jp
sub
sub
inc
loope
ja
mov
jecxz
orl
mov
cmp
cmp
clc
jg
mov
int3
inc
xchg
sub
imul
fwait
rorb
lock
stos
dec
fwait
enter
fst
add
cmpsl
repz
clc
shrl
jne
test
ss
mov
sbb
dec
leave
ret
inc
lods
out
xchg
xchg
iret
inc
jge
test
inc
push
pop
pop
popf
js
rorb
fisubs
or
xchg
add
dec
mov
cs
push
faddp
lcall
cltd
stc
into
dec
shll
pop
lahf
mov
jo
jl
or
in
pop
push
pop
push
cld
sub
push
scas
test
sar
pop
into
inc
push
dec
jno
xor
xchg
mov
rcr
xchg
push
inc
inc
sahf
or
add
jmp
jecxz
rclb
or
outsl
pushf
adc
int
sub
adc
lcall
addr16
add
das
sahf
cmp
jbe
loope
fwait
ret
stos
pop
mov
cmp
pop
jbe
shlb
pop
icebp
push
outsb
jl
lea
popa
xor
sbb
pop
mov
sbb
jno
mulb
jge
dec
in
cli
adc
push
imul
pop
shl
mov
mov
pop
pop
leave
loop
icebp
jno
fidivrs
lock
cmp
iret
and
inc
mov
or
add
insb
xor
scas
lret
sbb
lea
pop
mov
mov
out
jne
mov
fisttpll
test
add
shll
scas
movsb
andl
mov
imul
xor
jle
rorl
shll
pop
test
ficompl
testl
testb
fcmovnbe
paddd
out
or
pop
cmc
add
fmuls
adc
mov
stc
dec
xchg
repz
sbb
into
xor
and
scas
outsl
pusha
sub
lcall
mov
add
pop
adc
mov
sub
dec
and
add
repnz
stos
sbb
out
and
fwait
add
adc
in
xor
out
and
stos
and
out
pop
sbb
inc
pop
and
out
mov
push
mov
sub
dec
mov
popa
fcomi
fidivrs
sbb
shrl
adc
xchg
fidivs
lods
push
jbe
jbe
mov
cmpsl
in
out
pop
xchg
jo
fsubs
sub
ret
addr16
nop
daa
xor
bound
dec
repnz
adc
gs
xchg
mov
adc
into
lds
inc
sbb
and
daa
je
pop
call
cmp
ret
and
insl
sub
lcall
mov
mov
addb
sub
jne
testb
sti
fists
shrl
call
out
cmpsb
or
into
test
push
mov
enter
and
mov
pop
dec
mov
jmp
cmp
cmp
sub
ret
pop
ds
sub
dec
std
test
stos
cs
divl
into
cmc
jns
mov
xchg
jl
insl
adc
mov
xor
inc
sahf
aad
enter
or
jg
jnp
fnstcw
js
xchg
icebp
jmp
pop
jbe
push
test
test
testb
xor
or
cmp
jbe
push
ret
lret
int
adc
mov
test
movsb
addb
inc
push
scas
mov
cwtl
lret
sub
test
shll
fsubs
cmp
mov
out
mov
pop
icebp
add
push
xchg
inc
pop
dec
xchg
andb
repnz
cmp
pop
push
push
push
cwtl
or
pop
cmpsb
jg
pop
jb
bound
add
xchg
jmp
jne
cmovl
inc
inc
mov
pushf
xor
cmp
push
fs
in
dec
stos
shll
sub
mov
cmp
inc
js
scas
mov
add
jecxz
add
jne
imul
rorl
mov
or
mov
sub
aas
popf
and
add
push
inc
movl
stos
mov
pop
movsl
lret
es
scas
in
jnp
mov
sbb
dec
push
out
ljmp
inc
dec
jle
in
js
add
or
inc
insb
enter
js
test
in
cmpb
outsl
mov
imulb
mov
jno
ja
es
adc
and
int
fwait
lds
push
loope
cmpsl
lret
mov
movsb
test
mov
sbb
scas
sub
in
jb
inc
movsb
mov
inc
mov
fwait
bound
orl
js
mov
sub
enter
mov
xor
xchg
je
cltd
push
pop
test
cli
inc
pop
jo
jmp
xlat
sbb
adc
adc
pop
jb
jno
sbb
ds
mov
mov
clc
jg
repz
and
gs
adc
xchg
aam
push
dec
xchg
or
push
and
sbb
shlb
push
jb
jno
mov
test
adcl
mov
inc
imulb
adc
or
dec
fsubr
les
pop
mov
or
imul
into
lahf
mov
sub
sub
sub
xor
mov
dec
icebp
mov
dec
enter
sub
clc
push
aaa
sub
mov
lcall
push
or
pop
fwait
stc
add
jg
sbbb
jmp
or
inc
sbb
pop
inc
xchg
inc
ja
mov
mov
mov
xchg
mov
jl
inc
into
inc
sbb
lea
mov
inc
add
push
push
incl
cltd
sbbb
mov
xor
incl
iret
jb
pushf
icebp
jp
pushl
push
push
std
andb
repz
hlt
or
in
push
jno
mov
adc
fidivrs
add
insb
sti
outsl
cltd
mov
in
lea
iret
and
in
mov
fisubrs
sbb
inc
push
test
ficoml
push
pop
pop
lcall
jae,pt
inc
shr
faddl
inc
cmpsb
iret
inc
pop
jbe
jg
repz
nop
out
lds
push
xchg
cwtl
jmp
inc
cmp
or
aaa
push
jno
xchg
jbe
clc
push
jbe
jb
sub
and
push
dec
jbe
xchg
add
andl
data16
pop
mov
xor
sub
inc
ss
cltd
in
push
xlat
outsb
mov
or
push
in
outsl
jno
inc
incb
fstpt
icebp
shlb
and
xor
les
inc
repnz
xor
ljmp
daa
mov
lods
cmp
adc
cmp
cmpsl
jle
inc
sbbl
push
inc
ja
in
sub
xchg
shl
cmpsb
pushf
mov
movsl
push
sbb
aaa
sbb
mov
pop
test
js
out
in
pop
outsl
jle
adc
sbb
in
aam
push
icebp
sub
add
gs
out
jno
xchg
sbb
maskmovq
mull
sbb
mov
sub
jnp
lcall
fs
pop
mov
sbb
push
addr16
mov
cmp
ds
sti
in
xor
out
push
out
pop
lret
add
movsb
mov
and
inc
xor
cwtl
paddb
stos
loopne
mov
lods
int
mov
lea
cli
loopne
addr16
add
imul
out
test
stc
sbb
mov
and
push
mov
cld
lods
add
push
mov
fs
stos
mov
cld
sub
pushf
jp
arpl
push
mov
data16
add
es
xor
xor
sahf
jns
ljmp
jbe
call
fistl
xor
jbe
andb
jp
pop
repnz
push
movsb
mov
fwait
lret
gs
fimull
push
inc
mov
lahf
loope
dec
or
mov
mov
rcr
repnz
pop
imul
mov
or
xor
push
sub
push
xchg
sarb
pop
cmpsl
loop
sti
xchg
mov
jp
xchg
push
rcl
jg
sub
andb
mov
xor
fimuls
pop
push
test
mov
xlat
insl
lods
filds
adc
icebp
sahf
adc
fistpl
shr
daa
fcmovnb
jge
clc
repz
cmc
int
xor
jmp
mov
aas
sbb
inc
ss
popa
sub
pop
mov
or
push
cmp
dec
enter
dec
stos
cmpsl
aas
mov
jp
pop
arpl
in
ss
xorb
mov
adc
xlat
pop
sahf
dec
mov
loopne
sbb
arpl
xor
jg
inc
adc
stc
xlat
inc
push
xor
jo
jbe
decl
or
pop
stos
notb
dec
jmp
jp
cmp
cmpb
rol
pop
mov
jp
cmpsl
mov
xchg
in
pop
mov
mov
aam
out
sbb
das
dec
mov
lods
xlat
and
arpl
clc
repz
call
cltd
lahf
leave
sub
popf
into
jmp
testb
mov
pminub
push
cmp
mov
int3
push
insl
arpl
into
rcr
clc
jp
popf
sbbb
xlat
adc
dec
adc
shll
jle
push
dec
mov
xchg
aam
out
popa
cmpsb
adc
sub
mov
in
cmp
inc
push
cmpsl
ja
push
jl
lret
sub
test
sub
iret
dec
jnp
add
mov
xchg
cmp
nop
inc
bound
push
sub
addb
mov
sub
repnz
sarb
and
ja
and
fildll
adc
stc
fstpl
mov
jmp
sub
push
aas
shr
fmull
into
add
insl
packsswb
xchg
test
daa
ds
xor
push
xchg
mov
jmp
xchg
jbe
test
lea
inc
and
xchg
and
fwait
cltd
and
push
enter
cmpsl
cmpsl
ja
lock
and
pop
stos
or
push
int
dec
jecxz
ficoms
push
popa
enter
fnstcw
loope
out
jno
ljmp
fldl
and
lea
arpl
rcl
xor
fcoms
insl
or
shll
jg
mov
scas
hlt
dec
inc
inc
xchg
sub
cli
pop
xor
loope
jl
fmul
adc
xchg
or
xchg
int3
jns
inc
cmp
pop
adc
sub
and
add
dec
jnp
std
fisubl
mov
xor
out
mov
ja,pn
mov
add
loop
or
dec
cmp
pop
repnz
jns
nop
sahf
fidivs
add
nop
inc
cs
cmpsl
xlat
lods
mov
xchg
mov
dec
xor
and
mov
fs
inc
adc
icebp
pusha
jecxz
fistl
repnz
mov
leave
mov
divl
xchg
mov
sub
xchg
leave
push
pop
xor
dec
xchg
inc
sub
xrelease
mov
inc
lret
lahf
dec
mov
xor
lcall
pop
test
imul
xorb
mov
pop
inc
push
lock
xor
lods
and
push
int
lods
and
comiss
xor
int3
pop
int3
sbb
sahf
test
and
divb
lods
add
mov
inc
shl
in
js
hlt
ja
xchg
mov
xchg
cmp
into
adc
out
dec
in
pusha
mov
and
insb
xchg
cli
mov
inc
xlat
inc
or
aaa
pop
inc
jmp
and
cmp
mov
test
xor
cli
fsub
mov
pop
push
dec
pop
insl
enter
mov
adc
into
mov
enter
cmpsl
test
testb
fwait
xor
or
jne
stos
fistpll
fdivl
test
lret
mov
das
std
jns
in
jge
pop
stos
lock
loopne
inc
daa
ret
add
rclb
out
fdivr
push
shrl
xchg
out
out
add
push
popa
jb
fildl
clc
pop
jnp,pn
lahf
insb
push
mov
inc
inc
leave
inc
mov
ljmp
jle
sub
lcall
test
cli
fisttpl
ret
xchg
jmp
aaa
xchg
cltd
shlb
add
mov
fdivs
roll
das
mov
adc
dec
add
lds
psllw
gs
push
jmp
imul
shlb
insb
mov
aas
lds
pop
mov
or
in
lret
cmp
gs
adc
push
pop
dec
lea
pop
fs
aad
or
mov
stc
mov
jp
adc
js
movsl
pop
mov
push
repnz
lock
fprem1
repnz
rorl
jnp
jae
xchg
in
mov
shll
ss
mov
js
dec
das
xor
in
shlb
leave
test
cmp
inc
cs
mov
fldenv
out
loope
or
mov
in
lea
test
in
gs
and
xchg
fsubrl
cs
xchg
jnp
xor
call
iret
xchg
mov
jne
int
rcrb
push
dec
pushf
lea
jb
ljmp
jno
sti
sub
jnp
out
and
push
cmc
xor
inc
dec
fistpll
lret
jmp
sub
push
fbld
or
lret
ja
mov
les
test
sbb
push
inc
fildll
loope
jmp
popa
shlb
out
cmp
jb
leave
inc
mov
and
fidivs
into
cmpsb
mov
rclb
jecxz
inc
cmp
sub
in
sahf
je
or
lds
cmp
fnstcw
push
lock
cld
fistpl
shlb
inc
push
mov
repz
mov
mov
lret
jecxz
sbb
and
push
adc
lods
fsub
jmp
cwtl
ret
push
mov
add
pop
pop
or
adc
cmp
sbb
aam
pushf
pop
int
scas
outsb
add
adc
push
scas
sub
or
pop
and
punpckhwd
lcall
daa
mov
xchg
push
cltd
mov
pop
sbb
inc
jno
jno
xor
cmc
movsl
xchg
jp
cmc
stos
rorb
shlb
xchg
cs
scas
push
mov
mov
lret
or
inc
inc
ss
fsubl
lods
jb
mov
sub
push
loopne
ss
inc
dec
push
movb
xor
gs
aas
dec
cmp
pop
icebp
add
jecxz
lcall
cli
stos
imul
test
fwait
push
mov
pop
push
inc
loopne
dec
xor
push
adc
and
and
or
and
fucomi
rolb
xor
mov
daa
push
lea
jmp
int3
adc
outsl
cmp
daa
rorl
or
xor
jp
cmp
mov
sub
push
movsl
filds
je
and
testl
xchg
addr16
xchg
push
inc
movsl
adc
jbe
sub
inc
inc
test
mov
into
lahf
out
mov
and
and
aam
pop
xchg
loope
addr16
mov
das
imul
mov
mov
sbb
xchg
lds
aam
jecxz
pushf
test
into
xchg
in
imul
sub
push
out
jne
insb
divb
fists
mov
aad
pushf
sbb
icebp
stos
mov
or
sbb
ja
repnz
sub
cmp
lods
shll
push
mov
scas
sbb
cli
pop
out
dec
pop
int
cmp
insl
enter
ss
jb
xchg
hlt
mov
in
pop
icebp
xchg
cld
cmp
inc
add
ds
xchg
push
pop
jb
enter
frstor
aam
mov
arpl
es
jno
jmp
popw
sbb
dec
out
fiadds
ficomps
stos
out
xorl
fidivrs
test
push
mov
pop
rep
mov
mov
and
shr
mov
mov
xchg
xchg
or
insl
popl
repnz
pop
inc
cmp
mov
xchg
pop
jne
push
mov
outsb
iret
lahf
sbb
rorl
and
fists
inc
aam
xor
xchg
icebp
out
xchg
fsubrs
jne
cmp
fs
test
daa
mov
bound
xor
scas
roll
pop
jge
mov
repz
mov
scas
lret
sub
xchg
hlt
fwait
jb
lods
in
xchg
fdivrl
cmp
xor
lods
inc
cs
add
mov
pop
das
inc
mov
sbb
jns
test
or
addl
out
outsb
fs
or
xor
loop
push
popf
and
btsl
and
add
rol
jb
xchg
lret
mov
jo
cmpsb
call
inc
popf
push
scas
jae
leave
mov
xchg
jno
mov
shrb
call
cld
pop
jo
or
adc
rclb
xor
imul
dec
daa
in
shlb
inc
or
or
mov
sbb
addl
int3
cmpsl
ficoms
sbb
test
jb
sbb
out
sbb
or
sbb
lods
fimuls
jp
jp
sub
pop
test
mov
push
fwait
icebp
imul
adc
sub
add
hlt
jne
xchg
std
and
shll
and
lods
popf
xor
sub
mov
pop
and
lret
inc
stos
and
xchg
dec
xchg
sub
mov
test
sbbb
in
addr16
push
sbbb
mov
enter
sub
ljmp
out
mov
aaa
xor
xchg
neg
stc
dec
sbb
adc
push
aaa
add
int
cwtl
aad
int
inc
or
pop
ja
jbe
xor
sub
xchg
jns
and
sbb
into
or
scas
out
inc
fdivrs
mov
clc
xchg
notl
js
mov
mov
mov
fwait
xor
mov
in
stos
cmp
outsb
inc
inc
ljmp
cmpsb
xbegin
jbe
add
repz
push
int
mov
pop
adc
nop
or
ret
push
cmovae
leave
stc
xor
xor
scas
push
sbb
sub
int
xchg
in
mov
mov
addr16
jecxz
loop
xchg
inc
push
jbe
fs
mov
cmp
jecxz
pop
pushf
test
insb
mov
and
test
lret
cli
mov
test
cli
hlt
push
orl
iret
shrb
push
add
inc
cmp
cs
sti
fbstp
jae
ljmp
fsub
inc
jg
xchg
mov
add
mov
inc
xchg
arpl
aaa
jmp
or
mov
scas
movsl
pop
in
sub
popf
std
sahf
adc
lods
fmul
outsb
and
stc
out
pop
sub
mov
or
out
repnz
insl
pop
int3
fwait
int3
cmpsl
xor
dec
xchg
dec
test
popa
sbb
ror
push
xchg
inc
cmc
shlb
jbe
mov
mov
aam
inc
add
pop
cmpsb
jle
or
sub
cmp
pop
mov
in
shll
jo
fmuls
lock
sarb
cli
data16
dec
insb
xchg
lds
mov
adc
mov
push
loop
jle
fwait
pop
mov
ljmp
cmpsl
idiv
mov
dec
mov
lods
mov
mov
lret
xorl
pop
mov
stos
dec
pop
sbb
xor
push
mov
mov
pop
pop
test
popl
ret
mov
dec
or
mov
std
cmpsl
cmp
and
add
out
xlat
push
sbb
xor
pop
jmp
pop
ds
push
pop
in
push
mov
cs
push
cmp
xchg
mov
pop
cmpb
les
mov
inc
loopne
sbb
adc
and
aaa
adc
adc
loopne
push
sbb
sbb
dec
or
jns
lahf
push
leave
loopne
test
orb
ss
mov
jp
inc
fcoml
pushf
cltd
pop
adcb
mov
shr
aam
sub
shll
mov
mov
movsb
insb
imul
inc
mov
vshufpd
mov
in
inc
xor
sub
mov
push
lock
and
mov
lods
pop
xor
xor
enter
out
sub
mov
adc
adc
test
data16
call
pop
sub
mov
flds
sbb
and
nop
ja
loope
mov
scas
mov
mov
lret
arpl
add
movsl
mov
cltd
sbb
jecxz
mov
adc
std
and
in
adc
inc
cwtl
xor
sahf
cmp
test
cwtl
data16
mov
daa
in
add
adc
mov
cbtw
in
mov
in
jl
dec
and
pop
les
mov
cmpsl
subb
dec
fidivrs
stos
loopne
mov
je
push
popf
mov
popf
push
or
pop
lahf
xchg
out
daa
testl
sahf
popf
mov
inc
xor
fsubl
stos
cmpb
add
sbb
lds
inc
fsubl
push
cli
int
icebp
mov
gs
push
and
out
push
mov
or
sbb
or
mov
enter
dec
fstpt
cmpl
mov
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
pushl
ljmp
mov
mov
fwait
testb
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
jne
or
sub
inc
or
mov
das
fmuls
jo
pop
ljmp
dec
dec
cltd
je
push
call
pop
dec
and
loopne
imul
pop
testb
lea
jmp
xor
pop
xchg
mov
cld
pop
movsb
xchg
push
mov
scas
gs
cmp
jne
jno
cmc
mov
gs
xchg
jge
or
jmp
or
into
pop
xchg
mov
cld
mov
cmc
jmp
sub
clc
in
aad
add
sub
je
pop
pop
sub
fsubs
or
lea
loopne
and
dec
jbe
lea
mov
and
add
insl
lea
jp
jp
and
sbb
xor
mov
sahf
testb
lea
mov
testb
lea
mov
and
add
mov
mov
and
lea
and
testb
imul
mov
xor
add
lea
mov
and
add
lea
mov
ja
jge
or
and
testb
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
push
xchg
js
lea
mov
and
add
jnp
sub
popa
adc
lea
ret
jae
push
lea
mov
sar
add
lea
mov
and
add
lea
mov
ret
testb
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
mov
and
add
lea
lahf
and
out
ja
das
push
jl
xlat
push
movsl
jae
ss
and
lods
and
xchg
mov
mov
inc
pop
push
ss
sub
adc
sub
push
adcb
fs
or
push
lods
add
cmpsl
inc
mov
out
and
xchg
je
sbb
lods
jge
lock
frstor
shll
shl
pop
filds
leave
mov
adc
or
repnz
orb
les
mov
arpl
and
mov
ret
sahf
xchg
or
pusha
icebp
clc
pop
mov
adc
sbb
test
xchg
int
sub
clc
push
fildl
out
aas
add
xlat
and
mov
mov
cmp
jae
sub
repz
add
xchg
push
out
push
adc
push
xor
mov
or
fimull
mov
stos
ret
fcompl
data16
js
mov
loop
test
insl
pop
jl
je
add
or
cld
ljmp
push
adc
xor
repz
cmp
push
int
mov
out
adc
aaa
xchg
xbegin
lret
cs
in
ja
push
xor
cmpsl
std
in
ss
sbb
push
les
arpl
repnz
xor
xor
xchg
mov
push
sarb
dec
cmp
add
imul
stc
mov
in
in
ja
pop
sti
pop
mov
pop
xor
jno
movsl
in
jns
mov
notb
mov
pop
sub
repz
daa
lods
xor
jg
adc
dec
lret
lods
jl
insb
enter
jnp
dec
xchg
mov
dec
je
lret
mov
inc
add
inc
jns
cmc
push
jp
xchg
ds
loopne
lret
xchg
cmc
mov
add
xchg
in
cmp
push
ds
aam
dec
sub
int3
mov
pop
cmp
cmc
popa
fildll
and
stc
mov
cmp
mulb
dec
pop
pop
mov
add
ljmp
lods
pop
pusha
push
jl
xchg
out
xor
daa
xor
xchg
fcompl
dec
inc
out
mov
mov
mov
jl
xchg
sub
dec
pop
inc
add
jmp
xchg
ljmp
outsl
stos
add
xchg
lcall
fldenv
cmp
xor
pop
fwait
rol
ret
test
xor
mov
or
insb
nop
mov
dec
jp
insl
aam
call
call
jae
dec
imul
and
xchg
pop
cmp
jbe
push
pop
mov
mov
mov
xor
in
repnz
dec
inc
xchg
xchg
dec
push
mov
inc
push
jg
jmp
es
loop
popf
incb
adc
dec
cmpsl
cmc
aaa
divb
retw
xor
outsl
mov
inc
int
and
fimuls
sub
add
fidivl
sub
inc
mov
fistpll
mov
enter
or
sub
iret
cld
dec
dec
xchg
xchg
loope
xchg
movsl
insl
inc
repnz
mov
insb
es
and
mov
pop
jge
jnp
push
xchg
mov
leave
xor
sti
push
ret
aam
in
std
jecxz
pop
push
jae
sbb
jbe
dec
mov
jns
push
jnp
ficoml
adc
and
fsubrl
dec
pop
pop
loopne
enter
lea
pop
sti
pop
or
movsl
cltd
mov
sub
xchg
sub
add
mov
popa
xchg
dec
addr16
xchg
dec
xchg
mov
fisubrl
sub
loop
push
lods
and
outsb
pop
repnz
jecxz
sbbb
cmpsl
and
xchg
cmc
js
sbb
jns
jmp
fisubl
push
jb
lods
iret
cmp
clc
or
fsts
and
push
inc
mov
popf
push
push
lcall
pop
sbb
sahf
push
pop
push
ret
jge
jo
xchg
stos
mov
jmp
pop
popf
dec
mov
mov
jnp
sub
add
pop
mov
popa
testl
inc
or
xor
inc
das
aam
mov
cwtl
mov
inc
and
sub
cmp
pop
dec
cmpsb
subl
sub
mov
mov
orl
mov
or
lods
xchg
inc
stos
popf
rorb
add
ss
lods
imul
rclb
dec
test
mov
popf
imul
sbb
pop
cmp
or
mov
jle
pop
cmp
pop
cmp
mov
imul
in
jne
dec
pusha
shll
mov
enter
lret
fstl
aad
gs
in
call
sbb
push
sti
mov
lea
mov
imul
nopl
pop
imul
push
adc
hlt
mov
cmp
sbb
jb
icebp
mov
cmpsb
loope
jo
lret
jns
inc
enter
xor
jp
mov
rcll
std
pop
les
and
andb
into
mov
add
add
nop
cmpsb
xchg
push
cmp
lahf
jg
arpl
ror
dec
sahf
out
xor
jp
xchg
lcall
test
mov
sbb
mov
test
mov
cmp
mov
pop
and
lods
pop
lahf
data16
ja
cmp
and
mov
adc
xor
jecxz
or
jge
lock
jne
ror
in
xchg
xchg
outsl
mov
sub
pop
adc
pop
stos
inc
xor
aaa
ret
shll
jge
adc
dec
mov
mov
mov
js
mov
decl
push
mov
aas
enter
scas
mov
xchg
jns
in
push
ss
lahf
sbb
cli
xchg
push
pushf
enter
jo
mov
loope
aam
inc
jbe
mov
mov
sbbb
push
test
jecxz
pop
or
shrb
mov
xchg
lea
and
addr16
in
enter
jae
hlt
cli
cmp
daa
ret
mov
out
jno
sbb
fs
imul
jnp
popa
sub
xchg
lret
movsb
xchg
mov
sbb
dec
xchg
xor
aaa
adc
js
adc
push
dec
test
xchg
gs
push
or
and
add
jg
jnp
and
aam
outsl
ret
adc
xor
je
ficompl
repz
rcll
and
rolb
test
jne
popa
or
mov
test
std
fisubl
pusha
xchg
or
sbb
mov
stos
es
mov
pop
mov
jbe
shl
cmp
sub
xchg
ljmp
mov
lods
rcl
arpl
lock
int3
inc
pop
out
xor
ds
mov
pop
jle
push
sbb
inc
mov
out
out
sbb
fwait
adc
and
and
jne
frstor
or
aad
pop
ret
push
xchg
repz
or
mov
mov
add
lds
mov
in
dec
sti
or
ljmp
adc
fstpt
jae
int3
jno
jb
test
jns
out
xchg
lahf
jae
popf
push
movzbl
sarl
pop
add
pushf
int3
push
cltd
push
loop
push
and
lcall
dec
mov
scas
pop
mov
fwait
jmp
sbb
adc
jmp
xchg
xchg
push
fstl
pop
fcmovne
aad
sub
jo
test
inc
inc
mov
int
mov
sarb
sub
bound
cmp
and
testb
sbb
das
les
adc
dec
pop
scas
add
push
mov
and
mov
js
in
push
leave
inc
pop
sub
or
cmp
mov
rcrb
jl
inc
aam
sahf
adc
jae
jb
roll
lret
icebp
jne
and
mov
pusha
ret
ljmp
pop
nop
push
cmp
mov
les
jl
insb
lods
idivl
fcomi
mov
movsb
lods
cmp
dec
dec
push
jae
dec
pop
pop
push
xchg
mov
mov
out
in
xchg
leave
add
lret
je
sub
dec
pop
inc
popa
mov
jns
pop
pusha
lods
mov
mov
loope
hlt
and
sbb
inc
xchg
gs
dec
fcoms
dec
mov
or
fisttpl
int
loope
call
mov
pop
cli
mov
int
jecxz
cmp
pop
sbb
and
loopne
mov
push
cmpsb
push
adc
addr16
dec
adc
adc
xchg
sub
mov
dec
push
leave
out
ss
lahf
pop
fwait
imulb
int3
inc
lahf
call
sub
sbb
sahf
inc
sub
adc
movsb
mov
adc
xor
leave
push
fdiv
fsub
mov
dec
in
adc
test
jge
dec
pop
jp
bound
mov
sbb
mov
sub
add
push
out
jne
cmp
mov
and
mov
lahf
pop
xor
mov
xchg
and
nop
clc
ss
sub
jae
add
idivl
dec
xor
das
inc
out
jg
xchg
out
sbb
in
jmp
shrl
stos
ret
lea
and
cmpsb
out
ja
sti
pop
jecxz
enter
push
or
xor
aam
adc
icebp
into
fbld
movsl
adc
enter
jmp
dec
mov
pop
stos
xor
roll
in
mov
mov
xchg
mov
pushf
mov
lret
pop
xchg
add
cmpsl
repnz
cwtl
mov
insw
jp
add
xlat
jg
xchg
dec
sbb
add
mov
cmp
push
pushf
ljmp
pop
repnz
xor
inc
jmp
pop
fldt
in
rcrb
enter
push
fcoml
scas
mov
add
cwtl
subb
movsl
stos
fsubl
mov
jbe
imul
mov
mov
add
inc
dec
ror
fbld
or
jle
pop
xchg
xor
in
mov
bound
loop
jmp
decb
das
aad
rolb
dec
incb
xorb
inc
push
cld
out
mov
sub
xchg
xchg
or
add
pop
mov
mov
pop
int
xor
push
test
inc
fistpl
lahf
inc
popa
lods
xchg
sti
mov
imul
into
loop
mov
or
sbb
push
adc
cwtl
aaa
mov
orb
jmp
cmp
fisubl
sub
ret
popf
sub
ret
mov
mov
push
fisttps
jbe
pop
sahf
mov
and
sbb
rorb
into
mov
jge
xor
loope
lahf
fistps
jbe
sbb
and
dec
stc
push
insl
hlt
or
mov
mov
shll
repnz
xchg
xchg
jbe
sbb
iret
enter
mov
dec
cli
inc
sub
dec
das
or
je
das
repz
cmpsl
mov
das
scas
nop
scas
jmp
repnz
adc
dec
and
adc
inc
xor
into
push
add
pop
stos
and
dec
jns
rolb
xchg
scas
mov
jne
inc
dec
lods
iret
or
mov
adc
sub
push
test
adc
xchg
int
cmpsl
push
jg
pop
sub
icebp
ja
cmp
cmpsb
sbb
insb
mov
xchg
adc
addr16
addr16
or
loope
push
out
imul
push
int
call
lock
out
jle
insb
cmc
sub
enter
lods
out
push
lahf
std
cs
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
