pusha
ss
lcall
pusha
and
loopne
push
movsl
cs
loop
test
push
push
insb
sti
add
stos
inc
fmulp
dec
loope
addr16
lahf
aam
mov
or
es
mov
lods
and
xor
cmp
push
mov
xor
shll
pop
insb
xor
movsb
out
stos
pop
add
xor
lods
imul
lret
and
jmp
cmp
imul
xchg
loopne
xor
sbb
cltd
jmp
push
sub
shrb
cmp
div
xor
rclb
mov
cli
and
gs
sbb
xor
aas
inc
mov
mov
cmp
jne
bnd
inc
pop
sahf
cmc
dec
add
pop
xlat
pop
pop
or
cwtl
aam
jo
pusha
xchg
insl
and
mov
outsl
or
mov
sbb
mov
lcall
nop
loope
and
or
adc
mov
jbe
outsl
mov
cmpsl
fs
push
lods
imul
xor
outsl
lods
mov
inc
test
push
faddl
ljmp
push
dec
rcrl
lods
push
imulb
gs
mov
and
std
test
inc
into
les
mov
xchg
dec
fwait
add
adc
fwait
xchg
hlt
push
sub
cmp
or
add
sub
jnp
inc
jp
inc
adc
cmovg
push
rolb
mov
dec
xchg
femms
idivb
leave
fstpt
jmp
dec
cmp
or
rorb
sbb
jbe
sub
jb
pop
aaa
cmpb
pop
outsl
loop
xchg
or
inc
jl
pushf
cmp
nop
add
or
sbb
nop
cmp
fwait
mov
xlat
cmp
xchg
cmpl
sub
cmp
loop
in
sbb
int
in
arpl
repz
int3
cmp
jae
sti
lcall
in
fsubs
mov
mov
arpl
cli
fwait
and
and
cmp
adc
mov
sub
loop
test
pop
das
adc
lret
popa
or
lock
mov
sbb
xchg
dec
and
cmp
lods
pop
lods
xchg
xor
push
int
mov
sbb
iret
and
mov
in
sti
out
or
mov
cs
insl
mov
xor
mov
and
push
aam
popa
fwait
and
adc
xor
pop
push
inc
xchg
adc
or
mov
sbb
mov
push
les
xchg
fs
ja
or
rcll
or
sbb
push
addr16
std
aam
stos
mov
cmpsb
std
jnp
add
lcall
js
mov
inc
lods
faddl
xlat
dec
cmp
bound
clc
and
jecxz
pop
xor
mov
and
push
loopne
mov
adc
sbb
inc
das
outsb
rclb
mov
xchg
cmp
es
in
mov
mov
adc
add
mov
shrw
push
xor
decb
xchg
cmp
nop
adc
sbb
shlb
insl
lret
fsubl
xor
cmp
mov
mov
outsl
mov
jbe
cld
cltd
mov
sbb
jmp
cmp
add
push
or
sbb
jnp
push
jo
lret
pusha
leave
into
movsb
notl
sub
aam
in
aaa
rcr
call
fnstcw
mov
shl
or
mov
push
pop
adc
xor
pop
lods
aas
mov
ret
adc
push
mov
out
push
jmp
sub
dec
push
jo
mov
daa
rcrl
add
out
lcall
cs
inc
sub
push
outsl
mov
pop
sti
sbb
in
ret
popf
sub
mov
and
or
inc
xchg
adc
ficoml
movsl
dec
xchg
pop
mov
push
push
or
xor
loop
test
test
push
xor
test
jo
aam
xor
jg
jbe
or
shrl
adc
stc
jge
jmp
add
aas
rcll
icebp
and
cmp
insb
mov
cmp
lret
or
mov
imul
sbb
out
inc
les
call
loopne
jbe
push
fbstp
nop
adc
je
shrb
rcrb
ret
and
inc
push
push
mov
and
stos
fs
scas
ret
sbb
cmp
hlt
and
cli
dec
inc
js
clc
sbb
in
lock
mov
pushf
fsts
out
out
xor
jns
mov
add
jo
inc
jno
push
jg
lret
xlat
aad
sbb
sbb
enter
push
daa
jae
sbb
pop
es
andl
cmp
xchg
pop
fcmovbe
mov
mov
pop
jae
jne
aam
dec
or
sbb
iret
cmp
notl
fsts
mov
mov
xorl
mov
jne
sbb
ss
mov
lret
xchg
call
daa
xchg
xor
ret
or
dec
add
xchg
insb
jns
pop
shl
icebp
rclb
rep
push
into
hlt
jnp
xchg
sbb
xor
mov
in
push
pop
jge
inc
adc
sarl
aam
dec
rcrb
dec
jle
lret
jns
sbb
inc
dec
sub
movb
fidivrl
loop
lahf
mov
ret
or
fsubrs
jo
test
xchg
mov
sub
fcomp
xchg
sub
cmp
xchg
lahf
jl
cli
jae
xchg
lods
pop
cmp
push
xor
cli
and
and
jmp
popa
hlt
lods
mov
and
and
xlat
xor
popf
dec
ds
and
add
push
xlat
lahf
sub
in
les
push
and
mov
lock
in
inc
fdivs
adc
push
cmp
mov
shl
dec
lcall
pop
jb
int
cltd
fcompl
mov
lds
bound
jl
scas
jecxz
push
jecxz
xor
scas
sbb
rolb
in
sti
pop
jne
sbb
sbb
and
mov
jp
clc
adc
lods
xor
cmp
inc
adc
inc
sub
push
fdiv
jmp
inc
pop
adcl
cmp
scas
xchg
loop
ja
or
or
mov
ds
cmp
iret
jge
xor
enter
into
dec
push
jmp
lret
sbb
fidivrl
push
jg
sub
pushf
mov
inc
cltd
adc
out
test
imul
cmp
leave
mov
jne
arpl
cmp
hlt
imul
orb
sbb
jo
cmc
mov
in
ja
pop
outsl
cltd
jecxz
repnz
in
mov
and
cmpsb
aaa
cltd
in
inc
push
js
xlat
pop
sahf
xchg
mov
xor
sti
sub
xchg
leave
xchg
out
mov
xor
test
fsubrl
pop
shlb
out
sbb
adc
mov
pop
mov
into
sahf
mov
sahf
icebp
pusha
mov
inc
out
inc
stos
ret
cli
mov
xchg
sub
iret
jae
xor
jb
adcl
pop
andb
cmp
mov
lcall
mov
dec
pop
or
mov
or
sahf
cmp
mov
xor
in
out
adc
push
push
bound
mov
and
mov
and
dec
outsl
jo
mov
lahf
and
mov
sub
jae
int
xchg
inc
sub
je
inc
cmp
jno
aam
sub
stos
xor
jmp
dec
cs
mov
popa
xchg
gs
pushf
flds
mov
lods
inc
and
imul
pop
pushf
and
xchg
dec
std
cmpsl
xchg
flds
fisubl
push
in
fidivrl
mov
roll
lods
push
pushf
iret
mov
cld
adc
inc
add
jg
faddl
cmp
cmpsl
push
add
ljmp
inc
push
xor
fstl
in
sbb
stc
pop
test
cmp
cmp
xor
inc
sbbb
jnp
cmpsl
and
push
add
addr16
and
sub
push
movsl
mov
add
dec
hlt
pusha
jp
jge
xchg
ret
cmc
test
adc
jg
jmp
mov
cwtl
iret
jl
scas
adc
sub
mov
pop
dec
mov
mull
scas
fwait
pop
je
fdivrs
ljmp
push
bound
iret
mov
ret
das
dec
xchg
pop
jns
into
adc
sbb
ds
adc
in
clc
imul
sbb
push
or
pop
sub
out
rcrb
cmpsb
or
mov
dec
push
lret
addb
scas
push
mov
push
test
movsb
sub
cli
pop
xchg
call
lods
mov
cmp
lar
stc
dec
ja
jns
stos
cmp
cmp
sub
sarl
jge
fistps
jns
push
out
mov
popa
mov
or
or
mov
mov
fwait
sbb
repnz
mov
out
adc
fildl
or
lahf
aas
xchg
push
push
jmp
testb
out
pushf
add
mov
inc
movsb
int
pop
dec
xor
cmp
andl
dec
or
pop
scas
mov
adc
xchg
inc
out
out
lret
dec
and
mov
push
xor
call
pop
xchg
cwtl
fiaddl
push
push
and
add
clc
xor
dec
xor
push
xchg
stc
int3
pushf
lahf
pop
out
ljmp
cmp
xchg
iret
fsub
lods
les
or
mov
mov
xor
sbb
outsb
pop
adc
xchg
mov
sbb
push
sbb
adc
xor
repz
push
out
xchg
mov
dec
aaa
mov
sbb
popl
arpl
mov
jg
mov
cmpsl
sbb
mov
enter
pop
sub
jl
leave
das
inc
les
jle
lods
sbb
ret
ljmp
push
mov
test
mov
mov
xchg
jg
fistps
dec
les
push
shlb
adc
jnp
sbb
nop
in
xchg
in
repnz
mov
out
movsl
sbb
lds
push
jno
mov
xchg
pop
neg
push
pop
mov
out
adc
dec
rolb
mov
xchg
push
movb
jne
repnz
jl
pop
mov
mov
and
mov
test
vphaddubw
and
inc
lea
and
insb
adc
ja
and
sti
test
mov
in
lea
adc
jp
inc
sub
dec
and
in
cwtl
leave
or
pop
push
je
pop
fcoms
ljmp
sub
inc
pop
imul
and
scas
sbb
mov
fiaddl
ja
cmpsl
cmc
rol
mov
mov
out
mov
insl
mov
mov
sub
ficompl
test
cmp
push
shll
pop
sub
bnd
imul
push
inc
in
mov
andl
adc
idivb
push
dec
out
popa
push
mov
pop
cmpsl
clc
dec
popa
pop
imul
jle
in
xor
add
mov
loopne
push
cmpsb
mov
pushf
or
mov
add
xchg
ret
orl
sbb
adc
in
push
jg
cltd
xor
mov
loopne
pop
popf
test
jmp
sahf
sub
hlt
imul
imul
adc
rep
cwtl
fdivl
iret
mov
cmpsl
xor
and
push
jge
outsl
jle
jle
jno
rcrl
inc
lds
xchg
mov
jnp
push
or
mov
mov
mov
int
sbb
jbe
mov
cmp
push
mov
jbe
subl
jle
push
sub
adc
or
and
fimuls
sub
jae
fwait
dec
add
inc
std
movmskps
xchg
xchg
pop
fldenv
inc
push
insl
rcrb
xlat
mov
outsl
loop
pop
stc
xchg
mov
cld
and
jnp
dec
pop
inc
in
jo
mov
xchg
xchg
leave
fs
dec
xor
mov
push
inc
bound
lea
bound
dec
dec
add
ss
and
cmpsb
xlat
fsubrs
cwtl
in
es
jecxz
jmp
mov
icebp
push
add
fistl
sbb
cmp
jmp
xchg
fs
out
and
shlb
jmp
outsb
cmpl
inc
dec
inc
enter
xor
and
jg
fnstcw
loope
jb
cmp
je
into
lds
mov
ds
iret
sbb
xor
push
cld
xor
pop
insw
jp
int3
adc
rcl
cmc
enter
fmuls
imul
add
out
jo
lahf
cmc
scas
daa
outsl
gs
mov
inc
push
xor
cmpb
cltd
call
jg
push
repz
pop
fdivs
adc
and
push
ret
in
mov
test
mov
divb
push
sub
and
mov
mov
adc
mov
xor
ja
lods
pop
cmp
lods
mov
ds
xchg
jae
jp
mov
push
imul
or
sbb
jg
cmp
mov
in
cwtl
nop
inc
adc
lret
rdtsc
aas
mov
xchg
dec
jmp
fidivrs
push
dec
push
cmp
xchg
out
loopne
or
into
push
imul
fwait
jl
test
mov
cmp
movsl
xchg
pop
movsb
dec
and
and
arpl
add
jg
incl
inc
fsub
xchg
enter
sbb
enter
sub
pop
enter
mov
nop
push
jae
mov
gs
add
xor
jns
es
pop
adc
addr16
adcb
lret
sbb
ret
sub
pop
leave
xor
ds
iret
adc
into
pop
push
arpl
jne
test
dec
loope
mov
arpl
mov
mov
cmpsl
mov
sub
push
lds
jne
or
fdivrs
add
pop
cmpsl
fcompl
dec
stos
loopne
add
push
xor
leave
ret
push
mov
inc
je
push
mov
stos
jg
dec
pop
sbb
adc
scas
addr16
and
pusha
dec
fistpl
lock
sbb
cld
outsl
add
inc
mov
sub
leave
rcrl
ret
out
xorl
jbe
test
pop
or
sbb
pop
sub
or
fidivl
jb
pop
lcall
push
jbe
xor
sbbl
push
cmpsl
sbb
inc
lea
adc
lea
cmp
testb
orb
push
cltd
xor
into
mov
enter
dec
fstpl
pop
cwtl
popf
in
sbbb
nop
pop
loop
dec
inc
pop
jg
mov
mov
imul
clc
stos
fdivl
pop
pop
mov
sub
fwait
xor
ss
xor
and
mov
imul
inc
jb
js
xor
jle
mov
enter
cmpsb
adc
pop
sbb
rcr
in
inc
cmp
and
mov
iret
stos
lea
jmp
in
dec
ret
jle
mov
mov
sub
jle
shll
mov
cmp
xor
pop
imul
fidivl
fs
shl
mov
leave
ja
dec
sbb
rcrl
xchg
stc
fwait
test
imul
cmp
mov
adc
js
push
scas
lahf
add
test
inc
fnstcw
ds
fiaddl
icebp
gs
testl
in
or
and
gs
pop
lret
jl
mov
jg
adc
pop
and
mov
sub
inc
xor
jns
cmp
ret
add
push
rcrl
cs
outsl
push
jge
xor
push
dec
out
je
aam
mov
or
bnd
div
mov
lcall
and
rclb
mov
mov
imul
movsb
cld
inc
push
clc
jb
add
mov
cmp
inc
xor
push
fcom
jge
cli
inc
cwtl
das
dec
mov
in
imul
mov
fstpt
mov
push
insb
add
mov
and
push
fadd
div
cmp
jnp
xor
cmp
lock
ficoml
lret
in
and
xchg
jmp
jo
shl
mov
cmp
das
push
gs
sbb
jo
pop
mov
jne
mov
jge
into
push
adc
imul
mov
sbb
mov
cmp
out
data16
jmp
push
out
rolb
test
adc
push
jns
cmp
pop
repnz
gs
and
andb
sbb
ret
push
mov
cmp
lret
add
hlt
pop
movsl
arpl
inc
mov
push
lds
lea
icebp
adc
repz
lds
push
fcomip
nop
sub
cld
pop
pop
sahf
jno
gs
mov
icebp
push
pushf
sbb
shlb
pop
cmp
cs
lods
or
inc
fstl
int
push
mov
enter
mov
loopne
sbb
outsb
fldcw
and
outsb
sbb
jmp
add
mov
add
sub
push
mov
popa
stos
add
push
lea
aam
daa
rcrb
dec
sbb
ss
xchg
stos
mov
loope
sub
ds
pop
popf
adc
scas
jge
push
out
sub
pop
add
cld
or
outsl
fildll
xlat
xchg
cmp
push
ficoms
out
and
repz
pop
mov
xchg
bound
or
andb
mov
jb
gs
int
mov
push
lods
cmp
ja
pavgb
jb
push
ret
dec
out
rolb
push
cmc
pop
jns
loop
mov
xor
icebp
or
gs
pop
stos
les
int
push
sub
and
inc
or
push
and
aas
or
mov
jle
dec
mov
loopne
mov
test
data16
cmp
adc
adc
pop
push
add
cli
cli
cmp
das
mov
repz
fldt
outsl
stos
sti
push
fdivl
ss
test
or
call
out
shll
divb
adc
arpl
loopne
push
cmp
adc
push
imul
lret
cld
clc
mov
adc
xchg
jp
jle
pop
sarb
shl
stc
xchg
adc
fsubrs
add
jo
ret
js
push
aam
jbe
jb
in
imul
push
dec
int3
adc
ret
mov
jge
add
xchg
jno
fiadds
enter
push
add
add
mov
negb
or
sbb
int3
xor
arpl
sub
lahf
cld
shlb
push
lcall
mov
ja
stos
sub
in
cmp
popf
aad
bound
add
pop
jle
mov
add
ljmp
inc
int
push
xchg
pusha
movsl
loopne
xor
xlat
add
xor
repnz
xor
pop
xchg
xchg
jae
into
and
mov
jmp
mov
in
push
dec
push
sbb
popa
nop
pushl
mov
das
jg
xchg
ss
push
sub
insb
pop
add
pop
mov
and
pop
jo
dec
ret
cmc
jbe
in
mov
xchg
fstpt
dec
jbe
pop
jp
adc
adc
mov
xor
cmp
sub
cltd
jb
scas
sub
cmp
cs
adc
cmpsl
ss
mov
popa
add
xor
popa
das
out
push
mov
adc
pop
xor
fwait
ret
lret
sub
icebp
push
shr
or
cmpsb
mov
lods
add
inc
mov
lea
mov
fmuls
and
rcr
mov
test
dec
cmp
push
testl
bnd
fidivl
and
and
xchg
mov
mov
mov
push
addr16
inc
fwait
jns
push
dec
xlat
in
push
data16
scas
sub
sahf
movsb
out
iret
ret
popa
pop
loop
ss
dec
mov
cltd
cmp
sbb
cwtl
xchg
test
mov
dec
in
popf
mov
mov
dec
jns
cmc
loop
out
cmp
ljmp
mov
and
mov
xor
fidivl
cmp
dec
cwtl
dec
jecxz
inc
insb
je
movsl
mov
add
lret
jb
mov
dec
add
sub
les
fnstcw
in
mov
xlat
pop
imul
or
pop
or
mov
popf
imul
inc
negl
pop
cmp
push
inc
or
loop
jmp
insl
cmpsb
cs
mov
cmp
inc
or
shll
cmp
cmc
pop
xchg
jnp
sub
pushf
jge
inc
adc
cli
and
add
xchg
int
gs
xorl
fstpl
movsl
add
sahf
fistps
imul
cmpsl
int
and
sbb
pop
push
add
lds
arpl
inc
repnz
and
adc
ss
pop
in
pop
pusha
cs
scas
testb
mov
pop
cmc
lds
mov
shll
or
leave
sub
lret
stos
xor
push
out
mov
pop
loop
mov
inc
jecxz
adc
imul
cmpsb
jnp
jne
inc
mov
and
jns
shll
in
jno
or
cmpsl
in
mov
inc
xor
add
je
push
or
jl
or
push
mov
stos
into
movsl
or
pop
iret
rolb
mov
mov
sbb
sarb
aad
pop
push
and
mov
cltd
out
int
and
outsl
out
inc
iret
add
pop
fst
cmp
addr16
push
pop
roll
cltd
add
lods
push
lret
add
push
or
loopne
sub
adc
sub
adc
push
push
setp
mov
or
dec
lods
xchg
dec
xor
dec
lock
push
xchg
fisubrl
cmpl
add
pop
push
sbb
aam
cld
out
xor
mov
ja
mov
dec
add
das
adcb
push
pop
and
ljmp
test
jecxz
fwait
mov
xorb
cs
repnz
mov
lods
push
xor
loop
push
loope
cmp
cs
or
pop
aaa
mov
cmpsb
pop
rol
lahf
pop
dec
loopne
jp
subl
sar
dec
jne
add
out
insl
nop
fdiv
mov
pop
cli
sahf
add
mov
sbb
rcl
filds
push
jecxz
mov
push
push
in
cmc
stos
xor
sbb
or
mov
push
lret
sub
or
adc
enter
jno
push
in
rolb
and
push
outsb
movsl
sub
inc
jl
pop
push
out
push
subl
inc
push
dec
inc
or
insl
xchg
mov
jae
jo
fists
mov
pusha
movsb
cmc
scas
leave
in
push
pop
mov
inc
cli
cwtl
pop
xor
jns
arpl
pop
and
ret
scas
ljmp
cld
inc
outsb
sub
push
push
add
movsl
mov
lods
push
push
fisubl
or
inc
scas
sbb
or
ficoms
test
add
cs
jne
pusha
loope
popa
jge
adc
or
movb
out
shr
sbb
and
push
pop
xor
push
cmpsb
mov
xchg
push
ss
fildll
xchg
icebp
fucomi
in
xlat
dec
push
cli
div
popa
sbb
add
cmp
data16
pop
outsl
scas
push
inc
and
pusha
sbb
arpl
ja
inc
jbe
pop
int
fdivp
push
sbbl
repz
movb
aam
sahf
cmc
sahf
shl
movsl
jae
push
sbb
stc
xor
in
jecxz
stos
jge
mov
test
incl
insl
push
js
jno
lock
mov
out
sbb
sub
adc
adc
jg
in
and
shlb
int
xchg
adc
and
std
das
sub
or
out
sub
mov
data16
imul
dec
pop
cmc
ds
movsb
push
add
jne
jl
mov
mov
fs
push
dec
mov
ret
xchg
loop
cmp
push
push
into
pop
or
js
mov
stos
sub
out
sub
jmp
xchg
pop
jnp
and
cmc
arpl
pop
and
js,pt
out
mov
xor
mov
add
push
or
adc
orb
cs
push
outsl
jnp
cmp
arpl
pop
stc
mov
lcall
pop
xor
add
mov
jmp
sub
sub
pop
or
js
hlt
popf
out
dec
sarb
xor
jbe
dec
xchg
mov
pushf
iret
xchg
ja
inc
sub
sub
mov
mov
inc
scas
pop
or
stos
mov
inc
in
cld
mov
inc
mov
push
push
mov
pushf
mov
mov
mov
mov
jns
xchg
jo
test
jnp
lock
rorb
or
shrl
mov
mov
leave
inc
sbb
inc
xchg
scas
out
fdivrs
pop
lcall
fnstcw
movsb
mov
mov
dec
xor
pop
in
cwtl
jno
out
mov
jno
push
rcrb
stc
mov
and
cld
in
adc
loop
jne
aam
lret
pop
sbb
gs
cmp
fstpt
cmpsl
sub
xchg
sbbb
cmp
testl
jnp
dec
push
mov
dec
adc
pop
les
enter
xor
and
repnz
int
ja
xor
comiss
cmp
add
xchg
adc
mov
sub
push
scas
ljmp
adc
sbb
in
add
dec
out
inc
lret
addl
movsb
daa
imul
mov
les
push
dec
stos
repnz
iret
loope
icebp
fs
outsb
push
rcll
pop
movsb
cmp
addr16
jg
sub
mov
pop
cmp
arpl
push
cs
loopne
add
mov
flds
into
movsl
dec
jecxz
nop
addr16
cmp
mov
shlb
add
stc
loop
out
push
movsb
or
jecxz
fildl
movsl
and
cmp
or
loope
scas
mov
and
dec
shrb
mov
or
aad
negb
pusha
data16
or
cltd
loop
push
sub
lahf
adc
pop
popf
sbb
mov
jb
pusha
sub
xor
bound
sub
cmp
in
fidivs
gs
rcr
les
dec
repnz
push
adc
aam
or
jmp
push
jo
mov
in
adc
adcl
jno
mov
dec
jl
outsb
ret
jecxz
mov
test
stos
loopne
cmp
push
loop
rorb
pop
lds
jb
sub
cwtl
fcmovnu
pop
test
xchg
pop
adc
fsubl
xlat
pop
mov
sub
push
jg
pushf
dec
xchg
sub
fsts
mov
fldt
push
mov
jns
mov
mulb
shlb
enter
dec
aad
and
es
fmuls
test
or
aas
mov
adc
in
pop
ja
dec
sbb
popa
fwait
adcl
je
jnp
adc
mov
push
add
cmp
cmp
lods
jno
dec
xchg
xchg
andb
jns
or
xchg
adc
ret
xchg
inc
lahf
sub
jmp
jns
insb
mov
push
push
sub
mov
sub
jmp
pop
lods
sub
push
lock
outsb
js
cmpsl
adc
mov
les
sub
jl,pn
sbb
bound
push
mov
lahf
lock
xchg
xchg
jns
lret
cmp
adc
ljmp
lahf
mov
xor
adc
add
dec
and
fld
scas
stos
flds
pop
daa
jl
lods
mov
cmp
sahf
jno
pop
gs
imul
xchg
ja
int3
outsb
out
jl
movsl
inc
lock
mov
cwtl
or
cmc
cltd
add
rcll
mov
lcall
or
rorb
xor
adc
dec
jns
push
inc
push
lret
mov
dec
or
cmp
lds
daa
or
imul
les
or
mov
out
and
int
insb
sub
fisttpll
addr16
push
or
mov
jg
ds
hlt
adc
adc
dec
jnp
xchg
cmp
lds
adcl
jl
cmp
popa
fildll
icebp
inc
push
cmp
dec
je
mov
into
mov
jae
mov
mov
mov
mov
jmp
add
pop
js
outsb
repnz
hlt
add
aas
mov
ja
jb
in
push
into
xchg
shlb
xchg
ja
repnz
rol
xor
jmp
dec
pop
sbb
rorl
pop
out
sbb
sub
pop
adc
pusha
movsl
push
jo
ds
xchg
jo
cmp
jl
push
push
mov
insl
notb
inc
mov
sub
ds
or
pusha
jmp
aad
jecxz
cli
jns
push
and
sarb
add
xchg
inc
into
shl
push
add
cmp
outsl
push
sti
mov
out
inc
notl
in
mov
rcrl
or
out
jecxz
add
je
jbe
add
insb
or
push
sbb
mov
or
sub
add
div
mov
test
sbb
push
jns
and
sbb
push
xor
jae
xor
mov
mov
dec
into
sub
repz
insl
jmp
outsb
dec
loop
decb
xlat
dec
mov
and
pop
in
cmp
es
adc
pop
sti
adc
aas
mov
data16
mov
cmp
or
push
pop
mov
mov
cld
fdivrs
fcoms
xchg
or
adc
lods
lds
je
mov
nop
cmp
dec
mov
sub
xchg
jns
mov
mov
xchg
repnz
andb
sub
jge
repnz
test
inc
int
fiaddl
sbb
fcoms
clc
inc
jmp
or
loopne
ss
sahf
xchg
out
xchg
popa
add
jb
inc
ds
out
inc
out
jo
cwtl
les
sahf
and
cmpsl
pop
dec
inc
popf
sub
jns
test
lea
stc
dec
add
add
or
sbb
xchg
inc
shr
xchg
xor
xor
sbb
loop
xchg
xor
mov
xchg
ljmp
or
and
mov
dec
std
xchg
je
xchg
adc
testb
das
xchg
imul
pop
xchg
movsb
sub
mov
sub
jecxz
xorl
push
stos
adcl
mov
incb
jb
mov
mov
data16
cmp
mov
pushl
and
mov
jne
out
or
push
dec
aad
xor
push
in
dec
cmpsb
mov
add
add
jo
mov
out
jo
sub
imul
shrl
push
ret
mov
adc
ret
pop
jmp
shrl
sub
xchg
dec
jecxz
or
mov
fistpll
mov
stos
test
xlat
outsb
pop
pop
xchg
xchg
sbb
lret
pushf
sub
xchg
sar
jle
or
add
test
cmc
push
movsl
outsl
in
icebp
cmp
pop
or
jp
dec
add
adc
hlt
mov
jmp
mov
int
sub
repnz
in
lods
jg
and
xor
mov
and
ror
adcl
cmpsb
nop
sub
and
int
shrl
in
dec
lcall
jmp
xchg
jo
sub
cmpsl
mov
and
cmpsl
rcrb
leave
lods
cmp
mov
lahf
aad
add
movsl
mov
sub
cmpsl
mov
lods
nop
in
push
pop
rcll
outsl
icebp
rorl
pushf
inc
addr16
aam
mov
xchg
xor
jecxz
xchg
lods
mov
lret
cld
das
stc
lret
out
stc
sub
jnp
and
xor
cmp
cs
add
mov
jge
xchg
adc
pop
ret
mov
cmp
fstl
test
push
lds
jns
imul
add
sub
test
sbb
pusha
jg
inc
stc
inc
xor
daa
cmp
ret
int3
mov
cmpsb
and
sub
inc
mov
ficompl
cmpsb
push
ret
and
sub
and
in
dec
mov
lock
pop
cmpb
add
or
rorl
pop
add
fdiv
dec
pop
pop
sbb
scas
mov
mov
xor
std
pushf
pushl
shl
jge
insb
pusha
cmp
xor
cld
cmp
icebp
push
imul
jae
inc
add
push
fbld
lret
add
pop
into
mov
ret
sub
lret
mov
loopne
xchg
sbb
sub
je
rcll
bound
mov
ljmp
dec
cmpsl
xlat
add
icebp
ja
imul
or
or
ss
lock
repnz
jg
js
and
push
sub
jmp
cmp
js
test
push
pop
out
das
jecxz
out
push
in
ret
hlt
cmp
outsb
add
add
dec
stc
dec
sub
pop
mov
and
push
in
and
leave
jns
jns
jae
daa
jg
mov
adc
scas
pop
imul
sbb
add
push
bswap
gs
and
mov
jno
fstp
pop
pop
iret
sub
or
sub
popf
fmuls
sub
xor
inc
xchg
inc
jae
xor
or
push
push
jns
mov
pop
add
mov
cmp
popf
sub
pushf
icebp
jg
xchg
cli
iret
out
ficomps
pushl
mov
pop
push
sub
adc
pop
inc
mov
add
sub
bound
insl
and
mov
mov
sub
sub
push
xchg
dec
inc
or
adc
inc
mov
push
push
ss
clc
and
xor
fs
xchg
imul
rorl
movsl
xor
fnsave
push
and
icebp
xlat
das
out
stos
ljmp
mov
lahf
orl
push
nop
adc
insl
push
mov
gs
repz
orb
cs
mov
in
lret
fists
inc
stos
xchg
adc
nop
pop
adc
test
push
push
gs
ficompl
bnd
sbb
inc
sbb
jmp
sti
push
pop
dec
add
imul
rorb
jle
mov
sub
mov
push
or
popf
and
jb
adc
inc
test
cmp
adc
mov
sbb
mov
aas
lret
dec
pusha
push
mov
sub
outsl
hlt
sbb
mov
push
mov
xchg
mov
mov
dec
xchg
out
les
cmp
push
stc
lret
pop
jp
jmp
dec
pop
ja
mov
pushf
outsl
inc
ja
xchg
xchg
mov
out
dec
repnz
adc
adc
sub
lret
mov
or
push
and
xor
push
xchg
out
in
mov
mov
cld
ss
inc
les
jno
or
popf
adc
mov
jbe
inc
or
mov
jno
cltd
punpckhdq
and
mov
xchg
pop
je
pop
scas
mov
xor
add
xlat
sbb
ret
imul
mov
pop
in
out
xor
scas
leave
popa
out
xchg
fildll
mov
dec
in
or
scas
int
fdivrs
mov
lret
mov
ss
pop
leave
in
push
cmp
xchg
adc
mov
sbb
outsl
add
int3
in
sub
cli
mov
cmc
push
jge
sub
mov
push
and
shr
push
xchg
adc
sub
fsubrs
mov
fs
or
gs
icebp
sub
jl
sbb
jmp
sub
dec
push
adc
out
mov
jb
loop
les
push
cmp
cld
sub
and
test
push
aaa
cmp
aad
adc
xor
push
into
add
or
jne
jns
add
test
in
add
jns
adc
xchg
mov
lods
and
pop
mov
in
cmp
rolb
ret
jbe
and
insb
adc
sbb
cmp
pop
push
cmpl
mov
xchg
mov
mov
xchg
leave
mov
mov
push
imul
sti
adc
es
or
sbbb
iret
fs
test
xchg
aad
pop
mov
outsl
adc
xchg
out
inc
pop
xchg
mov
ljmp
xchg
inc
mov
push
fistps
mov
adc
mov
mov
push
xchg
jnp
bnd
cmp
daa
daa
fdivs
cltd
ljmp
rcrb
arpl
aaa
test
ljmp
rorb
stos
stos
jbe
imul
or
or
ss
dec
les
xor
mov
sbb
ret
subb
in
and
aam
enter
addr16
inc
and
xor
push
push
addr16
xor
jae
adc
jg
lock
pminsw
adc
into
hlt
stos
repnz
push
movsl
or
push
jno
lock
or
inc
clc
lret
pop
xchg
xchg
jne
mov
lods
in
sub
sti
and
dec
push
or
xor
mov
pop
addb
mov
and
cmp
in
rorl
xchg
xchg
push
adc
mov
add
repnz
movl
lcall
and
mov
rcl
js
or
inc
nop
outsb
push
dec
sarl
lret
pop
int3
lcall
inc
pop
andb
mov
jp
cli
sar
mov
aas
mov
pop
add
push
imul
data16
xor
ret
shl
jo
inc
jmp
jecxz
mull
sbb
fldl
add
cmp
fiadds
pop
nop
lods
xchg
pop
xorb
and
or
aas
shll
outsb
insb
sbb
in
inc
jae
mov
pop
mov
or
add
int
ret
or
icebp
sbb
xchg
loop
mov
mov
movsb
mov
aad
sbb
lock
ret
aam
add
push
mov
cmp
nop
je
push
jo,pt
test
jns
sarl
lret
ja
outsl
push
mov
and
jge
adc
lods
rcrl
pop
and
sbb
fwait
addb
jo
rcr
enter
and
sub
sbb
and
mov
call
pop
aam
int
loopne
pop
xor
inc
pop
push
cmc
add
mov
jno
dec
ret
cmp
mov
gs
mov
sarb
add
push
clc
mov
cmpsl
cmpsb
test
cltd
faddl
clc
and
mov
nop
cmp
jo
shll
out
push
repnz
sbb
cmp
xor
mov
clc
and
adcb
xchg
leave
dec
jo
mov
fdivrs
stos
cmp
push
sub
cmpb
cltd
cmp
movsb
daa
gs
lods
call
je
hlt
cmp
iret
mov
add
xlat
addl
sbb
insl
ror
push
add
sub
fbstp
ljmp
inc
dec
test
bound
mov
jge
mov
rcr
mov
push
out
ljmp
scas
inc
in
das
sbb
add
add
lahf
fldl
fidivs
test
adc
hlt
rorb
into
cmpb
or
mov
loope
pop
cmp
mov
out
mov
or
lds
and
and
lea
mov
xor
aad
xchg
scas
jb
mull
out
adc
push
sbb
sub
adc
fs
mov
xor
stos
enter
cmpsb
rcll
jae
mov
addr16
out
cmp
dec
inc
lea
sub
sbb
movsb
push
lds
push
ljmp
xchg
xchg
ficoms
jnp
add
nop
les
fs
push
sub
pop
mov
pop
xchg
dec
jecxz
mov
imul
jmp
jno
stos
push
ja
xchg
jbe
mov
xor
mov
out
dec
outsl
add
xor
imul
xchg
sbb
mov
mov
pop
jae
cmp
shlb
fstps
cld
sub
cmpl
fnstcw
mov
inc
jnp
call
and
xorb
inc
test
add
mov
mov
pop
lret
icebp
mov
pop
push
aam
pusha
pop
xor
mov
inc
dec
notl
lock
jb
jbe
lret
movsl
add
push
aas
xchg
jo
test
gs
sti
cs
push
mov
mov
push
int3
xor
bound
or
xchg
ljmp
or
push
inc
inc
ja
mov
jl
lods
jmp
fistpl
popa
lds
cli
mov
xlat
aas
adc
lret
int3
dec
in
cmc
sbb
lds
push
hlt
loopne
pop
or
push
inc
lahf
sub
mov
insb
xchg
xchg
or
outsb
cltd
dec
jns
and
lahf
lock
shlb
insl
pusha
sbb
or
dec
stos
insl
stos
cmp
jmp
imul
sbb
mov
nop
adc
push
push
test
cld
push
sub
ficoms
inc
fstl
pop
jnp
mov
stc
sbb
lock
mov
mov
add
pop
sbb
push
push
add
xor
xchg
mov
lahf
mov
mov
repnz
cmc
shll
push
mov
mov
adc
jl
movsb
repnz
jmp
push
jge
jge
popf
add
aad
or
jbe
ret
lds
mov
pop
ljmp
push
or
out
push
fs
cltd
fcom
add
daa
mov
mov
push
arpl
inc
je
out
addr16
lea
jmp
sub
push
in
xor
sub
cwtl
and
or
fidivrl
je
ss
adc
ja
decb
f2xm1
mov
lret
imul
inc
out
sub
push
mov
push
push
insb
jo
mov
int
cmc
inc
adc
jo
fwait
cmpsb
cmc
add
push
int3
pop
loop
cmp
jb
sub
leave
jb
and
mov
jmp
xchg
std
cmp
mov
add
ficomps
or
mov
xlat
mov
and
test
fldt
ficoml
fdiv
and
popa
inc
call
and
jnp
aad
sbb
lcall
scas
bound
iret
and
hlt
xor
outsl
xor
loop
jbe
je
nop
mov
stos
pushf
stos
js
je
jl
inc
xchg
imul
pop
pop
and
cmp
inc
adc
xchg
arpl
hlt
jae
repnz
lea
and
fstps
inc
pushf
add
and
into
jae
push
incl
insb
mov
shufps
sbb
sahf
mov
push
ficompl
or
sbb
insl
movsb
repnz
mov
mov
out
pop
loop
sub
xlat
jmp
push
aas
mov
lock
add
add
out
rcrb
shll
xor
aas
orl
cwtl
out
les
push
jo
shll
inc
mov
icebp
pop
insl
mov
inc
cmc
xchg
adc
pop
in
fisubs
push
movsb
sub
inc
jo
mov
test
mov
lock
and
dec
pop
jl
cltd
insl
hlt
in
pop
xor
std
mov
xorl
mov
xchg
push
popa
dec
xlat
cld
adc
je
sahf
ret
dec
pop
xor
js
xchg
cwtl
rorl
shlb
mov
jb
add
test
xchg
adc
add
mov
sub
dec
adc
lcall
cmpsl
lahf
aas
ss
stos
shll
iret
push
fstps
ficoml
lea
pop
fisubrl
jmp
imul
mov
sbb
dec
pop
mov
imul
scas
mov
rorl
sarl
lds
mov
js
ja
mov
cs
mov
dec
cmp
push
rcrb
and
and
mov
in
xor
xor
int
xchg
inc
push
lret
inc
mov
push
adc
popf
add
jne
push
adc
cmpsb
adc
fidivl
and
mov
dec
lods
sbb
xlat
fisttps
fnstenv
push
sbb
out
cmp
icebp
xchg
sbb
sbb
je
sbb
cmp
pop
les
mov
sbb
divb
mov
popa
sahf
out
pop
inc
mov
mov
xor
out
les
jbe
fucomi
movsb
or
lcall
mov
xchg
mov
inc
adc
bound
cmp
std
lock
movsl
mov
add
leave
popf
xchg
ljmp
mov
movl
mov
pop
js
lret
mov
xchg
popa
adc
call
mov
enter
lcall
mov
aam
jmp
xchg
sbb
xchg
sbb
je
or
lret
sbb
pop
iret
shll
rol
inc
inc
push
mov
add
lret
mov
cmp
out
mov
mov
add
xor
mov
dec
stc
loope
ss
data16
cmp
aad
test
call
cltd
push
jp
fldpi
ret
and
les
xor
dec
sbb
xchg
and
fstpl
sbb
jge
mov
mov
lea
xor
mov
das
stc
fcoml
arpl
sbb
sbb
in
dec
cs
inc
in
lcall
push
popa
pop
rclb
mov
pop
jb
repz
mov
add
loop
mov
cmp
movsb
idivl
sub
outsl
mov
mov
push
inc
sbb
mov
leave
adc
int
lock
mov
xchg
lods
mov
ss
cmpsb
inc
mov
cmpb
addr16
xchg
xor
ret
sub
jecxz
lea
jb
movsb
fldt
push
pop
cmp
pusha
shlb
mov
outsl
cmp
fs
cmpsb
mov
ljmp
cltd
aaa
xor
dec
push
shl
ret
xor
shll
mov
dec
adc
adc
lret
or
repnz
sub
push
out
lds
bound
lods
and
jl
sbb
mov
pop
add
js
and
push
mov
cmp
cs
lods
and
mov
shrb
shrb
jno
imul
insl
aam
vpaddb
mov
dec
shrb
xor
es
push
imul
fdivl
push
pop
jg
xor
xchg
xchg
push
pusha
push
mov
or
add
sbb
pop
mov
sbb
loope
sbb
lahf
ljmp
mov
and
addr16
stos
sbb
arpl
pushf
dec
aad
rolb
loopne
cmc
orl
mov
imul
pusha
push
lock
mov
daa
and
ret
addl
lods
dec
and
scas
inc
lods
dec
fnsave
sti
jle
ss
jmp
xchg
jl
cmp
sbb
inc
inc
adc
xchg
divb
dec
outsb
into
movb
xchg
pop
sbb
sub
jno
sub
out
cmp
xchg
push
outsl
xor
add
arpl
movb
daa
push
std
mov
fwait
push
dec
or
mov
and
test
mov
int3
inc
outsl
or
test
iret
xchg
inc
lds
insl
popf
cmp
pop
clc
jbe
pusha
pop
mov
or
jb
stos
mov
loop
ret
mov
sbb
jne
push
cmp
push
mov
cld
adc
lret
mov
lret
test
sahf
cmpsl
ret
incl
mov
popf
adcl
lea
mov
cwtl
test
loope
mov
out
ret
sub
fiaddl
arpl
pop
rep
pop
fistpl
fs
jbe
xor
add
adc
dec
pusha
cmp
sub
int
xor
xchg
jge
lods
pop
push
mov
push
cmp
dec
inc
ret
lock
pop
dec
test
jp
jno
int3
sbb
ret
js
rclb
mov
lods
outsb
pop
add
mov
test
xor
mov
fsubp
or
stos
adc
xchg
push
neg
aaa
sbb
insb
js
push
clc
out
or
daa
pop
lds
and
or
mov
inc
out
shll
outsb
or
cmp
pop
pop
cmpsb
adc
mov
jnp
out
ja
jl
test
movsb
mull
mov
insl
pusha
lret
or
test
add
xor
sbb
xor
nop
or
leave
inc
dec
test
dec
dec
xchg
xor
sbb
out
sub
loope
orl
hlt
dec
loop
cs
int
and
int3
sti
sarb
dec
shlb
mov
sub
ss
test
dec
push
shll
pop
lods
mov
in
and
adc
imul
sub
pushf
fwait
clc
xchg
lods
std
jg
stc
mov
adc
fldl
sarb
rcl
pop
cmp
gs
inc
or
pop
repnz
flds
pop
roll
jne
cmp
lods
jl
lock
dec
nop
pop
aad
add
sub
sar
xlat
push
idivl
or
pushl
sbbb
xchg
je
xor
pop
xchg
xor
or
mov
push
jns
loopne
sub
add
outsb
bound
adc
arpl
aaa
push
scas
sbb
and
je
fs
pop
aaa
jle
cmp
xchg
inc
call
add
mov
lret
je
sub
or
xchg
shl
push
inc
sbb
dec
jg
adc
fistpll
mov
test
and
mov
inc
jo
popa
icebp
aaa
fisttpl
das
imul
xchg
dec
dec
dec
repz
subl
je
adc
pop
push
ja
pop
push
ret
inc
dec
jo
fs
pop
fmuls
add
mov
pop
xchg
mov
jg
shlb
sbb
mov
mov
jb
dec
and
add
cmpsl
xchg
clc
adc
das
jle
pop
pushf
cmp
stos
dec
jno
pop
int3
and
jmp
or
inc
cmc
popf
movsb
xor
andl
sub
sbb
mov
xor
movl
mov
add
orb
xchg
clc
mov
aam
mov
jecxz
cmp
xchg
jmp
hlt
scas
and
adcb
or
cmpsl
and
jg
jne
lods
hlt
iret
clc
lahf
dec
dec
fisttpll
loope
jge
int
cld
loope
rolb
jle
repnz
cld
pusha
mov
mov
fcmovu
adc
lea
mov
ljmp
int
or
pusha
sub
push
loopne
or
inc
js
movsl
out
and
dec
mov
rol
inc
xorl
lds
jo
repnz
xchg
clc
push
xor
adc
fstpl
fcmovnbe
andb
cmp
lock
cmp
shr
mov
es
js
inc
pop
sbb
xchg
add
out
dec
push
mov
scas
xor
mov
dec
lods
bound
repz
jb
jb
adc
mov
mov
sub
sub
movsl
fsubr
jp
cli
inc
xchg
xchg
xchg
mov
sub
icebp
jbe
or
and
jne
mov
xchg
push
int3
ds
push
and
xlat
push
jmp
push
hlt
adc
xchg
xchg
les
xchg
push
inc
pop
cltd
pop
shlb
xchg
adc
add
imul
ficoml
xchg
loop
add
sub
push
xor
sub
and
lea
js
lds
xchg
or
dec
mov
fwait
data16
aam
push
scas
and
iret
repnz
lahf
and
dec
outsb
cmp
adc
lahf
gs
js
sbb
mov
mov
xchg
stos
dec
mov
fsubs
inc
pop
mov
sbb
lcall
movsl
repnz
mov
dec
cmp
shr
xchg
jnp
cltd
jp
insb
mov
gs
ja
loopne
aad
lock
pop
imul
mov
mov
repz
add
ja
add
mov
andb
nop
lcall
mov
sub
outsl
cmp
test
rorl
adc
inc
mov
ds
sbb
mov
dec
mov
iret
push
in
lock
inc
push
push
dec
jg
mov
pushf
cs
lea
stos
dec
test
dec
jecxz
lods
pop
loopne
mov
mov
and
or
fsts
jg
fisttpll
jge
sub
push
mov
xchg
push
dec
ret
mov
jns
ret
xchg
pop
jno
in
sub
ficoml
stos
cs
xor
out
ja
gs
lods
jns
jno
sahf
in
inc
test
ficoml
and
sti
popa
cmp
rcrl
xchg
loopne
adc
mov
add
adc
mov
push
ds
scas
pop
repz
add
inc
fstpt
pushf
cmp
cmpb
add
int
mov
aaa
or
mov
subb
data16
es
iret
xchg
stos
inc
dec
sbb
cli
lock
pop
fcoms
adc
into
pusha
xchg
xor
and
mov
push
cmp
lcall
loop
push
fisubl
mov
decb
cmp
fucom
in
or
mov
xor
in
mov
mov
dec
fdivl
lds
xor
in
mov
idivb
jge
jge
ret
data16
lea
and
xor
push
adcl
sahf
mov
gs
push
jle
mov
int
pop
xchg
or
mov
lea
dec
and
jo
mov
mov
test
int
test
inc
adc
pusha
outsl
pop
jbe
xor
fisttpl
mov
fwait
mov
fsts
movl
fcompl
movsl
movsb
or
imul
sarl
xchg
iret
test
insb
or
xor
repnz
cmp
jo
lds
xlat
mov
push
pop
fsts
mov
dec
cmpsl
mov
pop
decl
pop
xchg
xor
out
adc
push
jne
out
xchg
mov
cmc
lock
in
mov
mov
sarb
shll
ljmp
shrl
and
in
sub
mov
push
inc
sbb
adc
daa
roll
stos
or
jge
dec
xchg
xor
pop
and
jp
cmpsb
mov
jecxz
adc
pop
sahf
push
dec
sub
sub
mov
enter
mov
add
mov
sbb
dec
repz
insl
hlt
jp
insb
std
adc
mov
or
je
mov
incb
mov
fs
repz
in
pop
cltd
lock
shlb
test
sbb
std
push
jge
mov
js
test
decl
imul
xchg
imul
rcrl
lret
jg
sarb
pusha
mov
and
add
cmovne
add
push
push
call
or
imul
adc
xchg
in
or
stos
test
scas
sbb
clc
outsb
shl
mov
mov
cld
cmp
add
mov
jno
cmpsb
inc
add
popa
push
cmp
aaa
push
or
and
push
pop
sub
xlat
cld
push
push
movsb
dec
in
add
mov
inc
pop
sub
fldenv
push
mov
pop
enter
popf
pop
push
nop
loop
ret
pop
jmp
xor
xchg
mov
cmp
pop
push
push
jne
pushf
add
sub
hlt
mov
adc
lret
mov
cmp
in
mov
xchg
aaa
ss
hlt
jl
mov
out
or
shrb
jp,pn
xchg
popf
cmpsb
imul
and
mov
js
repz
subl
stos
std
loopne
or
call
ret
clc
scas
sahf
cmp
movsb
push
lds
mov
inc
ret
jmp
cmp
aaa
mov
mov
xchg
stos
push
cmp
rcrl
jbe
or
icebp
push
pushl
jge
cltd
xorb
popf
mov
loopne
loopne
push
or
cmp
loope
sub
push
lret
notl
add
sub
add
notb
clc
push
insb
jl
mov
cmp
test
jo
orb
les
xchg
aas
dec
imul
iret
pushf
outsb
in
pushf
repnz
push
aad
aad
hlt
mov
out
mov
mov
fmuls
fdivrs
cmp
jns
jbe
xor
and
scas
movsl
sbb
adc
push
repnz
adcb
push
sbbb
adc
push
dec
add
nop
mov
fldcw
loopne
sub
test
jle
iret
sub
filds
mov
adc
mov
cmpl
xchg
xchg
sub
push
sbb
xor
xor
aas
add
mov
ret
jne
lcall
ret
sbb
js
xchg
test
std
shl
mov
test
inc
dec
pop
jbe
lret
xor
addr16
hlt
adc
les
das
ret
adc
ja
push
inc
cmp
push
inc
repnz
xchg
push
jp
add
xchg
push
cmp
lahf
je
or
sbb
pop
xor
repz
jae
jl
lods
icebp
push
mov
aaa
popa
adc
adc
push
mov
mov
ss
push
dec
ljmp
push
inc
jle
data16
pushf
loopne
ljmp
fsubs
jge
bound
outsb
test
mov
cli
rcr
ja
ret
adc
pop
test
testl
sbb
mov
jmp
add
lahf
cwtl
jmp
in
and
push
nop
or
jbe
insb
lret
fiadds
xchg
lcall
and
pop
pop
and
fs
mov
mov
inc
inc
mov
jge
sbb
jb
gs
incb
mov
jae
outsb
mov
addr16
mov
pop
mov
mov
sbb
jns
sub
or
or
fstl
cmp
sti
fwait
inc
loope
orb
std
sub
jno
aad
mov
jecxz
inc
jae
incb
jb
cwtl
mov
dec
mov
cs
cltd
dec
pusha
mov
mov
dec
add
pusha
push
push
push
insb
iret
ljmp
je
mov
outsl
fwait
clc
or
in
rcl
push
sbb
pusha
push
pop
mov
data16
fistl
adc
adcb
and
inc
movsb
lods
mov
jae
xchg
mov
adc
cmpsl
adc
dec
loopne
dec
mov
jl
lea
and
cmp
popa
push
dec
xor
ret
or
xor
inc
cmpsl
dec
stc
loopne
repnz
std
out
mov
or
fcmovne
jmp
pop
stos
mov
add
fidivrl
jge
jnp
sti
aas
pop
sub
or
aam
sub
xchg
mov
or
vminss
cmp
and
mov
cmc
into
pop
push
stos
movsl
jle
sub
iret
enter
cmp
notl
fstpt
out
pop
cmpb
sub
mov
fmuls
gs
shrb
push
dec
ficomps
mov
cwtl
in
enter
imul
sub
pop
pusha
testb
cld
movsl
mov
nop
insl
in
xor
dec
inc
shl
cmp
jg
adc
mov
mov
imul
and
subb
or
into
mov
movl
mov
xor
cltd
flds
mov
push
jne
add
leave
xorl
fwait
int3
push
ficompl
pop
xchg
out
pop
inc
pop
xchg
shlb
push
inc
test
mov
fisubrl
lret
rorb
xchg
sahf
enter
mov
mov
mov
mov
enter
pop
xchg
jp,pt
mov
mov
pop
std
dec
or
ficomps
jbe
jne
in
loope
test
call
outsl
lods
das
sbb
cmp
scas
popf
push
cmc
and
cmp
in
gs
std
in
fsubr
js
add
int3
ds
out
jo
dec
adc
mov
xchg
arpl
outsb
negb
nop
xchg
mov
add
inc
cmpsb
lods
shrl
fidivl
popf
cmp
js
dec
es
and
fdivrl
insb
push
lock
jns
pop
in
dec
pop
pop
sub
jmp
fiaddl
subps
mov
loopnew
adcb
shrl
and
add
dec
fsubp
ret
out
mov
fs
push
or
push
test
aam
je
scas
test
sbb
pop
sub
xor
add
fcoms
xchg
jbe
int3
sbb
loope
iret
jmp
aad
or
dec
in
and
cs
test
int
movsb
call
mull
jnp
sbb
outsl
dec
bound
stos
jns
ljmp
sbb
ss
popa
daa
mov
pop
mov
add
xchg
rclb
cmpl
xor
mov
fldcw
ss
xchg
push
pop
sbb
mov
inc
mul
and
les
pushf
adc
insb
and
mov
xor
mov
int
sub
lret
push
aaa
add
adc
cs
xchg
cmc
push
mov
mov
mov
rcll
jbe
daa
jne
pop
inc
stos
jmp
rcll
ret
mov
shrb
lcall
or
mov
push
insb
xchg
out
jmp
iret
ss
mov
in
daa
cmp
jb
cltd
mov
lahf
cmp
lds
mov
clc
sub
mov
jmp
mov
add
push
aas
imul
cmp
xchg
mov
lahf
aas
hlt
dec
into
lret
orl
add
mov
mov
fildll
mov
cmpsb
mov
mov
aad
dec
pop
jl
dec
shlb
or
in
imul
pop
loopne
iret
and
mov
adcb
scas
mov
push
jbe
cmpsl
stc
lods
xchg
add
outsl
mov
push
adc
cmpsl
dec
shlb
mov
out
pop
out
out
jb
xchg
dec
iret
or
dec
xlat
cli
imul
aam
mov
xor
jns
rolb
sbb
lcall
cmc
inc
mov
mov
test
call
push
jl
pusha
movsb
inc
je
lock
pop
in
into
dec
cltd
sbb
shl
jl
and
jno
pop
shll
and
inc
jecxz
movsb
ret
outsb
cmp
xlat
jne
sbb
roll
xlat
mov
add
adc
push
shrb
mov
adc
mov
inc
inc
sbb
subps
jmp
add
xchg
stos
mov
mov
test
loop
mov
inc
sub
xor
adc
mov
movb
xor
mov
or
stos
jbe
and
cmp
xchg
stc
xchg
mov
sarl
and
mov
mov
add
adc
loop
push
ja
and
mov
les
mov
push
or
sbb
push
cmp
sbb
outsb
mov
jns
cmpsl
lods
cmp
dec
jmp
pop
xorps
cmpsl
inc
in
fstpl
cmc
pusha
pop
xchg
mov
xchg
fwait
push
or
repnz
and
dec
or
adc
aam
xor
fldt
mov
jl
push
push
mov
test
test
add
push
push
nop
push
mov
ret
jbe
push
pop
mov
jl
lods
mov
outsb
jg
arpl
ficoml
cmc
or
shlb
pop
rcrb
popf
mov
fnstsw
loop
fisubrs
jno
mov
sub
xchg
mulb
insb
data16
in
ljmp
sbb
insb
jns
hlt
jbe
getsec
ror
lcall
push
mov
fwait
test
rcll
jae
inc
sub
stc
stos
dec
cmpsl
inc
mov
js
and
out
je
jl
dec
pop
push
push
fbstp
adc
mov
insb
lods
dec
sub
cmp
data16
jne
std
ret
mov
pop
in
ljmp
jno
iret
sbb
xchg
lock
sub
icebp
and
out
test
mov
sub
adc
test
notb
push
daa
sub
cli
sbb
jg
xor
cmp
xor
in
and
rolb
or
cmp
xchg
sahf
pop
cmp
pop
pop
push
ljmp
outsl
iret
lods
inc
stos
stos
fmuls
xchg
out
mov
sub
push
mov
leave
or
rorb
lds
roll
pop
test
ljmp
inc
stc
outsl
sarb
mov
sbb
outsb
lods
pop
lret
test
inc
sbb
xchg
and
xor
negb
inc
cmc
lcall
adc
adc
mov
fisubs
fidivl
cli
test
mov
dec
test
pop
std
sbb
in
lret
fisubrs
mul
adc
xchg
or
xchg
aad
push
cs
ss
push
fs
or
lcall
mov
sahf
mov
xchg
lret
sbb
mov
out
dec
popf
xchg
scas
fldl
xchg
leave
and
outsl
fidivrs
dec
dec
sbb
out
mov
rorl
das
nop
nop
adc
push
fists
mov
movl
jne
hlt
in
popf
xchg
jecxz
push
adcb
mov
aam
pop
pop
xchg
pop
clc
in
popf
adc
sbb
loope
or
insb
mov
lea
jbe
data16
iret
nop
mov
fwait
xor
dec
movsl
pusha
test
aaa
mov
push
dec
sbb
xor
pop
in
addr16
rolb
cli
push
mov
xchg
xchg
mov
dec
xor
stos
inc
sub
fs
ss
pop
jmp
xchg
dec
iret
clc
jg
push
scas
lmsw
insl
sbb
je
dec
pop
mov
divb
mov
call
push
rol
in
xchg
fsubs
ljmp
cmp
orb
pop
adc
xlat
xor
jae
lret
callw
push
icebp
ficoms
ret
rclb
pop
lcall
fisubl
jnp
jle
cld
lret
jae
mov
and
leave
fs
add
xlat
xchg
mov
lods
pop
je
pop
aad
and
jecxz
daa
idivl
mov
in
pusha
pushf
jmp
arpl
ljmp
pop
xchg
push
call
loopne
mov
jne
rcrl
adc
xchg
adcl
out
and
jmp
ljmp
or
call
mov
decb
call
iret
and
fidivl
lret
fabs
push
repz
adc
jge
xchg
xchg
shlb
sub
sbb
pop
push
jo
ja
sbb
jns
xlat
inc
pop
mov
jno
clc
dec
add
lret
pop
rorb
push
sbbb
pop
sbb
xor
xchg
es
out
pop
and
sti
cmp
shlb
mov
sahf
icebp
loopne
dec
mov
push
cwtl
push
xor
ret
adc
sub
mov
jb
push
loop
shr
lds
clc
cmp
xlat
pop
insb
call
pusha
jno
cmp
xor
repz
subb
bound
bound
mov
int
pop
cwtl
jmp
lods
je
loop
mov
sbb
sbb
xchg
push
xlat
fcmovbe
jge
inc
pop
mov
or
cmp
push
ljmp
cmp
mov
in
int
and
mov
stos
push
cwtl
sub
cltd
outsb
xchg
pop
jno
shll
mov
ds
sbb
test
fcmovbe
push
xchg
push
pusha
insb
jg
fcomps
cmc
dec
jmp
pop
out
xchg
jge
movsl
jo
dec
arpl
sbb
add
push
pushf
inc
js
mov
and
sub
stos
push
add
push
sbb
cmpsl
or
cld
movsb
push
lock
hlt
daa
push
add
mov
inc
test
jno
lods
push
dec
inc
adc
cli
push
cmpsl
jge
rorl
test
jns
rclb
push
mov
xor
xorl
lahf
pop
ja
sbb
mov
lock
movsb
xchg
sbb
pop
pop
lock
jb
mov
mov
adcb
insb
pop
dec
pushf
jl
movl
push
lock
sub
mov
cmp
rcrb
cli
xor
in
add
into
mov
cmpsb
mov
flds
push
add
and
fldcw
notl
fwait
lcall
ret
push
cmp
jmp
das
out
pop
das
xchg
lock
in
xchg
pop
sti
mov
xchg
mov
adc
or
and
shr
rolb
or
pop
dec
jnp
pop
jp
sub
and
aas
push
xchg
ret
adc
loop
push
mov
add
xchg
pop
enter
pushf
test
sub
mov
test
jo
sti
or
sbb
jne
adc
test
xchg
call
mov
jo
fwait
mov
mov
stos
add
push
adc
add
add
shll
adcl
pop
rorb
cltd
cmp
mov
test
lret
inc
aam
sbb
lahf
or
and
fistl
xor
clc
cwtl
popa
dec
xchg
sub
js
sbb
jecxz
sti
dec
jmp
adc
mov
ja
outsl
les
mov
adc
sbb
ss
adc
adc
jecxz
clc
pop
xchg
sub
add
inc
lods
pushf
lds
into
dec
mov
xchg
fwait
jae
jecxz
push
clc
shl
mov
rcrb
jg
mov
xor
scas
rcrl
pop
push
mov
push
les
cmp
sub
pop
test
add
push
inc
xor
daa
fldcw
testl
push
adc
rol
aaa
outsl
mov
pop
cmpsl
xor
push
xor
add
comiss
push
std
mov
xchg
push
ljmp
push
cmp
loopne
hlt
aas
iret
lcall
xor
lret
xor
aas
arpl
sti
pop
mov
jae
outsb
fwait
imul
push
pushf
mov
push
push
inc
mov
in
mov
sub
movsb
cmp
stos
cli
lds
or
repnz
aas
xor
pop
inc
push
lahf
inc
jg
into
iret
icebp
outsb
je
jg
cmc
jge
cmpsl
cmpsl
andl
inc
sub
pop
xor
mov
addr16
add
imul
inc
nop
cmp
xor
cmc
in
out
cmpsl
xchg
xor
cltd
mov
pop
lods
push
sub
inc
add
insl
lods
outsl
repnz
xor
pop
pop
and
jge
push
repnz
xchg
bound
dec
jae
push
cli
sub
push
leave
mov
adc
cltd
dec
pusha
mov
push
sti
jmp
cs
lea
pop
loopne
lds
pop
inc
jbe
mov
cmp
xor
sub
xlat
jg
xchg
lcall
adc
sub
cmp
jbe
outsl
pop
mov
cs
dec
hlt
inc
mov
out
into
in
mov
movsl
out
dec
movsl
xorb
cmpsb
rclb
notl
bound
dec
movsb
daa
mov
lcall
push
and
add
aas
pop
and
xchg
sbb
filds
xor
std
push
mov
aad
cmpsb
adc
xorb
out
cld
sahf
and
jne
xor
jp
and
mov
sti
dec
cmp
std
jne
jle
inc
daa
push
outsl
sub
sub
test
xchg
cmpsl
push
sub
sub
jo
push
xor
das
imul
jo
dec
inc
push
fistpll
aam
lcall
mov
inc
int3
lret
jns
xchg
mov
jbe
int
out
in
add
add
mov
inc
or
mov
das
sub
jmp
fs
or
sbb
out
rorl
adc
adc
outsb
dec
pop
mov
xor
pop
mov
loop
sub
lret
stos
cmp
dec
in
dec
sub
lret
fcoms
mov
daa
xor
cmpsb
in
jae
pop
adc
lds
flds
adc
loop
lock
push
mov
xor
adc
jg
pop
in
shrl
loope
inc
inc
in
pop
sbb
jo
xor
lret
les
jnp
ret
pop
mov
aam
jg
lahf
in
scas
imul
push
jmp
mov
in
pushf
mov
jnp
test
or
and
das
pop
outsl
xchg
outsb
push
pop
repnz
push
mov
sbb
imul
mov
pop
mov
jb
dec
jno
lea
cmp
cmpsl
sbb
sbb
xchg
aaa
and
inc
sarl
shlb
cmpsb
test
adc
mov
mov
sub
and
inc
mov
and
rcll
inc
adc
jns
orl
mov
sbb
fistpll
push
mov
insb
std
adc
sbb
jne
sub
int
or
scas
mov
jmp
pop
ss
in
jp
loop
pushf
adc
insl
int
dec
xor
dec
mov
test
enter
mov
pop
push
sbb
mov
and
imul
pop
sub
cmc
stos
push
push
push
aad
cmp
fildll
mov
and
jno
pop
fldcw
sbb
mov
ror
lret
ret
jb
push
cmpsl
push
pop
and
in
ret
aas
jp
jns
xchg
xor
or
add
add
fisubl
cmpsb
push
or
imul
fiaddl
cmpsl
cld
sahf
or
push
movsl
les
dec
xchg
ret
in
fisubl
push
enter
jo
dec
movsb
dec
jno
addb
inc
add
adcb
cmpsl
in
push
inc
addr16
push
cmpsb
pop
fnstsw
dec
out
sbb
lcall
jnp
cwtl
mov
out
mov
pop
orl
movsb
shl
sbb
mov
mov
outsb
lret
cld
push
xchg
cmp
shrb
enter
jno
xchg
sub
scas
rcl
imul
sbb
lds
ret
lret
adc
dec
js
push
sarb
ret
and
lods
or
sbb
xchg
xchg
scas
insl
bound
movsl
cs
xchg
insl
jae
lahf
insl
iret
dec
rolb
test
rcrb
imul
inc
push
xchg
cmp
or
ljmp
es
es
repz
sub
mov
xor
dec
mov
lret
sub
xchg
cmpsl
xchg
dec
sarb
jbe
xchg
leave
fnstcw
cmc
push
sarl
pop
shrl
in
and
sbb
lahf
mov
sarl
in
sub
addr16
mov
push
pop
or
xchg
mov
cs
sbb
scas
mov
and
daa
pop
mov
or
movhps
ljmp
mov
lods
pop
mov
js
push
add
iret
sbb
mov
je
pop
jecxz
sbb
jnp
or
lods
aad
xor
and
test
xor
add
sbb
dec
sub
push
cmp
aas
xlat
incl
push
rcl
icebp
or
fcompl
movl
sbbl
xchg
icebp
test
outsl
and
aam
sahf
adc
shll
mov
imul
out
xchg
test
xlat
push
xor
pop
popw
jmp
mov
loop
lods
cs
ljmp
repnz
addr16
pop
not
jge
je,pn
sub
pop
cmp
jo
sub
inc
loop
into
out
cmp
pand
leave
fbstp
add
clc
mov
dec
out
pop
sub
fcmovu
adc
mov
mov
mov
jmp
outsb
jl
or
xchg
or
jp
mov
test
sub
js
cmc
mov
lret
icebp
out
xchg
test
add
daa
xlat
pop
cmpsl
xchg
xor
adc
inc
jle
mov
out
dec
lcall
or
xorb
inc
inc
push
popf
adc
jnp
hlt
int
cmp
ljmp
ss
jno
arpl
or
sahf
xor
mov
mov
ljmp
daa
inc
jns
jns
pop
ret
xor
xchg
fwait
aaa
push
fidivrl
pop
imul
jge
push
push
add
xchg
fdivl
lahf
lea
stos
jns
aam
shl
mov
dec
stos
jl
cmp
cmpsb
decb
shl
stos
ss
push
les
ds
les
jg
daa
jb
or
cmc
mov
cmc
dec
je
out
rorb
cmpsl
sti
mov
xchg
add
data16
imul
mov
xchg
mov
add
jae
push
das
cs
push
fmul
repnz
cmc
push
popa
and
pop
ret
mov
js
adc
in
dec
outsb
and
jle
xorl
out
aam
mov
leave
mov
daa
std
mov
adc
and
adc
addb
inc
clc
jne
fstpt
sbb
sub
mov
pop
rclb
iret
cmp
and
lods
shrb
jg
push
cmp
add
sarl
mov
xor
push
push
xchg
mov
es
and
jnp
rcrl
push
inc
inc
leave
and
jp
lret
mov
xchg
lods
enter
mov
repz
rcll
lcall
in
call
push
sub
sbb
scas
pop
out
sbbl
repnz
sub
pop
into
test
sub
sbb
hlt
test
sbb
jl
jo
inc
int3
sbb
fisubl
enter
int
jp
fstp
nop
adc
andb
adc
pusha
push
clc
shlb
fdivrl
add
test
inc
mov
and
sti
xor
jno
sub
rol
and
lcall
xor
scas
inc
fiadds
repz
xor
add
in
les
dec
aaa
sti
or
int
arpl
lret
xor
xor
imul
in
xchg
pop
and
cs
jns
sub
dec
les
xor
inc
and
into
das
mov
aam
cmovg
testl
xor
es
add
xlat
and
cmp
mov
mov
xor
cltd
sbb
xchg
imul
xlat
sbb
and
or
test
jl
sub
pop
xchg
rcrl
movsl
xchg
sub
decw
bound
xchg
popf
jp
lods
or
clc
outsb
jbe
xchg
push
lock
or
stos
lods
push
adc
into
fsubr
popa
pop
les
fwait
into
cmc
scas
mov
and
pusha
adc
jg
mov
insl
or
stos
cmpsb
movsl
cli
int3
bound
sbb
cmpsl
jns
js
push
mov
mov
js
mov
sub
nop
aaa
mov
mov
ret
adc
loope
push
ffree
out
xchg
lock
inc
mov
dec
lahf
add
aad
cmp
jae
or
inc
adc
mov
xchg
out
pop
jl
jecxz
lds
mov
loope
mov
xchg
add
push
sub
dec
mov
inc
jo
lods
jmp
sub
lret
pop
push
inc
or
cmp
jns
jne
movsl
lods
mov
shrb
cmp
or
pop
mov
xor
ja
mov
inc
test
sarb
movsl
sbb
jae
minps
hlt
popa
imul
sbb
pop
cmpsb
into
rorb
adc
push
out
push
insb
xchg
scas
mov
out
pop
and
outsl
and
mov
scas
dec
mov
add
repnz
ljmp
in
icebp
or
repz
push
mov
setp
test
movsb
sub
or
dec
es
mov
push
jno
cmpsb
in
mov
das
aam
adc
orb
add
xchg
and
int3
push
push
inc
call
jmp
and
push
icebp
aas
stc
inc
adc
xchg
mov
call
rorb
stos
addl
sub
add
les
scas
fimuls
inc
or
inc
xchg
mov
lods
daa
mov
leave
or
xchg
xchg
xor
shl
call
xchg
sahf
sbb
fildl
pop
test
and
std
dec
addb
xchg
lods
jl
sti
push
test
insl
pop
negl
adc
imul
ss
imul
fistpl
ret
xor
and
push
fmulp
xchg
sbb
hlt
cli
or
loop
inc
mov
xchg
bound
loope
lods
test
out
rcll
es
jle
shlb
les
movsb
repnz
fistps
xchg
insl
xchg
ss
mov
js
and
test
and
jnp
cmp
dec
or
mov
rcll
stc
in
dec
mov
push
mov
jl
add
dec
pop
sahf
clc
sti
mov
push
lods
gs
sub
inc
add
add
or
sti
inc
es
in
inc
and
std
pop
xchg
pushf
jp
cmpsl
mov
int
sub
pusha
mov
mov
xchg
xor
shrl
test
sahf
pusha
mov
mov
fadds
sbb
xor
in
arpl
in
push
add
mov
jbe
lcall
push
ret
icebp
cmp
jbe
in
imul
test
mov
bound
push
add
lds
xchg
jmp
gs
fcomi
jns
sub
sub
push
out
push
jge
gs
push
push
lock
dec
add
dec
inc
ja
in
js
sub
add
bnd
gs
mov
jmp
adc
stos
xor
aaa
lret
iret
stos
outsb
jbe
iret
fisttpll
mov
loop
negl
lcall
or
rorb
push
cmc
xor
mov
pop
enter
test
jp
pop
and
lahf
testb
loop
lahf
push
pushf
xor
push
cmp
cld
push
jns
mov
cli
repz
jecxz
insb
add
mulb
cs
stc
add
fistl
insl
xchg
cwtl
cmp
jg
or
jnp
je
cmpsl
lods
scas
divl
push
mov
out
adc
push
pop
push
sbb
xchg
aas
cmp
pushf
call
sub
lahf
int3
insl
sub
mov
add
mov
std
movsl
stos
sub
out
fnsave
inc
rcrb
xchg
je
sti
dec
insl
subb
leave
jl
push
sub
xor
dec
outsb
hlt
mov
push
jbe
inc
push
inc
call
ss
stos
or
das
sub
hlt
out
cmp
jle
js
lahf
shr
push
lds
xchg
and
jmp
into
xchg
adc
push
jmp
or
mov
arpl
in
movsl
repnz
sub
add
jb
and
sahf
or
das
xchg
movsl
aas
lock
jnp
or
mov
push
lods
aas
mov
sub
xor
inc
cmp
sbb
das
movsb
filds
push
ljmp
jno
sub
sbb
push
sub
out
mov
sub
add
mov
int
mov
add
sbb
mov
pop
mov
adc
pop
in
enter
mov
dec
or
in
movsb
cwtl
and
cmpsb
imulb
mov
pop
pushf
sbb
lods
outsb
adc
push
loop
jle
mov
cmp
jae
inc
or
dec
jmp
dec
repnz
dec
loope
ret
vmovshdup
push
sbb
movsl
mov
inc
clc
and
in
mov
jl
mov
sti
je
xchg
mov
lret
and
mov
cwtl
lret
push
xor
sbb
cmp
mov
aas
lods
lret
jo
or
sub
loope
sti
fcmove
xor
dec
add
int3
imul
jne
xorb
aas
repz
in
xchg
repnz
lahf
pop
add
nop
in
push
sbb
or
mov
mov
inc
inc
scas
cmpl
mov
pop
xlat
shlb
xor
xchg
and
ljmp
xchg
push
inc
mov
int3
movsl
movsb
iret
iret
outsb
and
xchg
add
push
sub
loopne
popf
int
xchg
inc
push
xchg
addr16
xchg
jne
test
ret
sub
mov
push
dec
push
adc
jmp
cmp
cmp
xor
mov
bound
dec
call
icebp
xchg
mov
jns
jg
test
xchg
das
cmpsb
rclb
mov
xchg
xchg
aaa
loope
inc
test
jo
cmc
aaa
jb
loopne
movsl
lahf
push
sub
push
xor
add
int
popf
jl
and
in
dec
and
sub
mov
fidivs
cmp
jae
jmp
push
fwait
test
sbb
in
mov
fucomip
mov
and
mov
sub
ja
add
les
sub
shrb
xlat
fsts
adc
aas
mov
and
jnp
or
pause
inc
fsubs
subl
es
or
cli
aaa
test
sub
cmpsb
add
xchg
adc
or
aad
orl
stos
dec
mov
lea
fnsave
push
inc
mov
sbb
loope
ret
xchg
lods
inc
rorb
push
ret
xchg
pop
aam
xchg
es
out
test
adc
pop
xor
cmpsl
adc
sti
lds
inc
pusha
insl
stc
loope
add
cmp
cmp
jnp
or
push
into
int
fidivrl
nop
iret
pop
pushf
rcl
jecxz
lds
xchg
xor
inc
fs
sbb
push
enter
popa
orb
and
add
stos
push
jno
and
jecxz
ficoms
cmp
sbb
stos
call
push
ret
jnp
mov
addr16
sub
sahf
and
push
fs
es
clc
stc
push
pusha
cmpsl
or
aad
cmc
test
mov
scas
pusha
insb
xor
icebp
sub
bound
pop
cltd
cwtl
daa
ja
mov
xor
icebp
mov
je
push
rol
adc
dec
movsl
pusha
btr
movsb
outsl
in
outsb
stos
jg
cli
dec
jno
inc
jmp
xor
add
repnz
push
pop
cmp
xchg
int3
cmc
pop
xor
inc
mov
pop
dec
push
or
insb
push
cs
int3
movsl
es
push
ret
in
xor
cmp
call
or
fiaddl
push
ret
fildl
outsl
inc
jge
mov
std
stos
into
hlt
in
inc
pushf
push
mov
push
out
sbb
dec
xchg
jbe
push
iret
enter
and
in
mov
ret
imulb
push
cmp
addr16
jbe
jg
out
fcomps
int3
xchg
sub
mov
inc
aaa
test
dec
fadds
shrl
arpl
int3
cmp
aaa
in
js
lock
test
sbb
cmp
out
inc
mov
jmp
pop
cmp
cmp
mov
ss
call
pop
mov
xor
push
xchg
jl
push
je
out
mov
mov
pop
stos
jo,pt
pushf
push
jl
xchg
jnp
mov
cmpsb
sub
inc
test
aaa
push
nop
sbbl
xchg
add
sbb
xchg
in
leave
lret
dec
inc
or
jecxz
imulb
jo
dec
int
mov
or
mov
pop
inc
jno
and
dec
subl
mov
mov
jge
in
mov
fisttps
and
ret
clc
je
or
add
nop
fwait
jne
clc
pop
imul
push
and
dec
add
inc
mov
dec
jg
mov
mov
scas
sub
and
in
lds
dec
jmp
add
inc
imul
xor
and
fwait
orb
cltd
in
mov
jle
and
loopne
aaa
repnz
inc
bound
sub
mov
xor
pusha
or
ret
or
add
pop
ret
outsb
loopne
jns
xchg
push
std
xchg
outsl
xchg
out
pop
enter
scas
test
sbb
stos
mov
mov
or
aas
arpl
cmp
movsb
cmp
ds
ds
sbb
fnstcw
gs
sbb
loopne
add
mov
mov
mov
pop
and
rcr
xlat
out
mov
jmp
xchg
pop
leave
push
addr16
adc
mov
pusha
jo
fcmovb
and
addl
inc
mov
xor
jecxz
sbb
mov
int
cmp
pop
mov
and
push
sahf
add
push
sbb
inc
icebp
ds
test
mov
out
sti
push
adc
sub
out
jbe
icebp
sahf
push
scas
jle
addb
inc
pop
mov
idiv
adc
inc
out
lret
ret
lret
xchg
mov
aad
sbb
clc
dec
gs
data16
push
ljmp
dec
mov
sarb
jge
std
inc
cmpsb
movsl
fsubrs
dec
daa
in
cltd
add
mov
xchg
add
ret
pop
leave
mov
cld
cmpsl
fdivr
icebp
addb
jno
xor
out
sbb
lahf
sbb
sub
mov
xor
inc
std
repnz
pop
pop
loop
jp
clc
lods
adc
cmp
cwtl
xchg
mov
stos
and
jl
cwtl
in
popf
cmc
fdivl
addl
sub
int3
xchg
or
jmp
sub
jb
cmpsl
cli
mov
cmp
ja
cmp
orl
nop
cmpsl
sbb
imul
jmp
sub
movsl
cmp
cs
and
push
hlt
jne
jg
xchg
icebp
cltd
xchg
xlat
or
jp
pop
out
lock
out
inc
and
shll
adc
push
push
xor
add
xchg
cmpsb
pop
sub
repz
shl
or
clc
jno
pop
insb
push
push
push
mov
cs
xlat
mov
and
dec
rcr
and
daa
int3
mov
jnp
dec
dec
gs
ficoms
lahf
mov
jb
pop
jns
xchg
sbb
jge
mov
dec
cmp
rol
cmp
push
cmp
outsl
movsb
stos
push
std
movsl
jecxz
outsl
mov
aas
ljmp
xchg
cmp
jbe
test
sub
inc
fimuls
std
pop
mov
out
cmp
jle
mov
adc
aad
xor
jb
and
shrl
cwtl
xor
jecxz
or
nop
ljmp
adc
cld
sbbb
dec
ror
loopne
cmp
inc
cmpsb
out
jp
or
add
sbb
mov
mov
testl
cmp
lods
daa
sbb
lret
mov
mov
mov
std
xchg
jb
jb
jg
dec
orb
aaa
out
repz
mov
add
push
jb
mov
sbb
sub
pop
das
push
pop
xchg
and
jecxz
shll
inc
adcb
push
xor
stos
adc
into
inc
mov
mov
data16
add
test
cmp
mov
int3
mov
push
int3
adc
rorb
and
mov
fadd
sbb
fildl
lret
pminub
dec
scas
adc
sahf
scas
jno
inc
xchg
test
inc
gs
sbb
mov
push
push
mov
adc
xchg
std
dec
and
out
jg
pop
dec
je
int
data16
xor
jbe
sub
test
xor
loop
es
mov
cs
jl
icebp
xchg
popa
std
aad
xchg
mov
mov
mov
or
xlat
adc
jae
add
dec
adc
roll
movsb
into
popa
sbb
insb
cltd
outsl
movsl
icebp
lds
inc
xchg
enter
mull
fcompl
scas
xor
lods
xor
mov
sub
out
out
lcall
sub
sar
sahf
out
push
jecxz
push
xor
sub
add
aam
pop
mov
insl
mov
or
jecxz
xor
clc
mov
add
adc
stc
imul
dec
mov
js
cmc
enter
lods
lcall
pop
add
xor
mov
cmp
rolb
sbb
push
inc
fcmovbe
xor
lret
xchg
xor
or
cld
or
ret
add
call
fdivrs
cmp
cmp
mov
daa
test
mov
or
dec
sbb
pop
xor
int3
lret
sub
shrl
lds
jns
ret
pop
cmp
test
pop
xor
cmp
mov
xor
pop
xchg
xchg
adc
ss
ret
push
pop
ja
in
insl
or
and
sbb
cmp
inc
lods
sbb
mov
add
push
add
orb
xchg
add
adc
xchg
fcmovnbe
push
jne
mov
adc
fildl
mov
clc
inc
lret
mov
andb
pop
mov
xchg
jecxz
shrb
jg
mov
pop
cmpsl
push
inc
push
lods
jmp
push
push
cmpsb
repz
in
mov
mov
scas
sub
mov
leave
fdivr
test
and
push
call
enter
xlat
push
gs
repnz
into
test
mov
dec
pop
cltd
mov
cmpsl
sbb
sbb
sub
cmc
mov
jae
push
inc
sub
mov
inc
icebp
cmc
pop
ljmp
movsl
aaa
movsb
lretw
inc
dec
fucomip
mov
pushf
push
hlt
movsl
test
mov
arpl
add
dec
mov
inc
mov
imul
test
clc
cld
lea
idiv
sbb
push
mov
xor
cli
lds
xchg
imul
loop
dec
lret
xor
jbe
push
int3
mov
int
push
or
cmp
sbbb
mov
xor
stc
stos
xor
pop
push
les
les
ret
jb
cmpsb
into
sbb
shlb
inc
sub
push
movsb
repnz
xchg
jns
repnz
int3
lods
xchg
mov
xchg
aad
imul
cwtl
dec
lds
push
loopne
addr16
xlat
fildl
and
sbb
xchg
lret
inc
movsb
in
push
push
int
pop
shl
out
insl
jb
xchg
imul
shrb
adc
gs
jo
loope
or
add
push
inc
sbb
shll
cmp
add
lret
sti
sbb
mov
sti
sbb
sub
cmp
xchg
xor
inc
xchg
cmpsb
add
scas
cmp
push
xlat
mov
pushf
mov
daa
inc
push
sar
add
xchg
xlat
xor
jge
dec
pop
jp
cmp
fadds
lcall
xchg
jl
cld
fdecstp
test
sub
inc
clc
mov
daa
mov
cmp
and
cli
in
ret
jp
fildl
cmp
xchg
xchg
data16
jl
int
and
into
dec
js
mov
ss
mov
int3
jae
push
lock
loop
mov
test
es
decb
and
aad
jbe
data16
pop
jne
stos
dec
cltd
lret
hlt
rol
or
std
add
inc
sub
mov
push
in
out
fimuls
rorl
jle
loop
stos
dec
sbb
out
rorb
lret
imul
dec
mov
out
lcall
xchg
cmc
pop
fistps
jecxz
inc
jne
int
sub
push
rclb
fucomip
add
dec
xchg
inc
test
cmp
test
inc
push
mov
sub
popa
xchg
mov
dec
pop
xor
test
mov
sbb
sub
jp
push
sahf
jns
daa
inc
add
es
lods
push
pop
sbbl
je
push
loopne
xor
xchg
imul
jbe
ds
jge
xlat
jbe
clc
aam
loop
and
dec
fsubp
cs
pop
orb
xchg
jle
les
mov
stos
pop
loop
mov
pop
add
adc
or
jp
insb
push
mov
push
jae
outsl
mov
leave
lods
out
xchg
rcr
push
lea
xchg
cmpl
je
in
aaa
shr
cmp
sub
dec
or
push
jbe
loope
test
out
and
mov
xor
inc
pop
cli
call
jmp
mov
push
subl
mov
adc
push
and
jno
inc
dec
xor
fwait
loope
repz
adc
push
push
sbb
cmp
leave
popf
jno
fistl
iret
fnstenv
add
cwtl
or
sub
pop
mov
ret
test
stos
push
dec
jle
sbb
inc
pop
mov
ljmp
gs
cmp
jae
shl
call
adc
in
jno
test
add
cmp
sahf
mov
add
sbb
jmp
pushf
and
lock
xor
and
push
jle
pop
jecxz
mov
hlt
dec
xor
xchg
sahf
xor
test
ret
sbb
mov
subl
sahf
loop
xor
das
icebp
or
repnz
push
xchg
cs
pusha
lea
loop
lock
f2xm1
dec
insb
jbe
pcmpeqb
testl
mov
mov
push
inc
in
iret
dec
test
dec
push
push
push
mov
push
jbe
xchg
ret
or
pusha
ret
push
fldenv
cli
jge
cltd
mov
mov
test
xor
jmp
push
pop
mov
jno
sub
int
pusha
xor
insl
adc
arpl
pop
iret
int
mov
dec
paddd
jmp
andl
add
xor
or
in
cmp
sarl
jle
xor
jmp
push
mov
movntps
mov
lret
pop
rorl
mov
xchg
push
fdivs
cs
dec
mov
out
in
mov
bound
xlat
xchg
jno
push
and
and
arpl
cmpsl
in
daa
mov
data16
arpl
mov
mov
and
jo
sarl
push
sbb
xor
popa
je
pop
inc
iret
push
sbb
aam
shlb
mov
movsl
mov
mov
sbb
hlt
out
inc
arpl
and
dec
fcomps
inc
int
xor
test
lea
or
xor
mov
das
and
inc
or
cmc
xchg
and
repnz
push
xchg
cmp
test
mov
sub
cmpsb
xchg
push
xor
add
out
push
or
pusha
je
jecxz
mov
lods
pop
in
ficoml
sahf
xchg
mov
xlat
icebp
shlb
mov
jmp
cmp
mov
sbbl
les
sbb
xchg
push
sub
leave
adc
sub
imul
pop
addr16
sbb
stos
test
cmp
mov
fldl
fiaddl
test
mov
push
or
pop
filds
or
out
xor
test
cwtl
mov
mov
gs
pop
adc
xchg
sub
xchg
jns
or
fstps
pop
out
int
roll
xor
std
aaa
or
pop
enter
cmc
or
push
dec
rclb
popf
push
repnz
add
in
adc
xchg
cmp
or
imul
scas
push
xor
add
test
pop
push
sbb
inc
cmpsb
aaa
mov
adc
jb
jnp
push
cmp
out
clc
push
dec
inc
mov
mov
and
adc
inc
nop
rcr
aaa
jge
add
pushf
sbb
ja
and
jae
pop
leave
and
sbb
nop
arpl
into
xor
faddp
mov
xor
push
xchg
push
mov
lock
xor
jo
mov
data16
in
xchg
shll
fldt
jo
ja
jle
adc
mov
in
add
jnp
adc
shl
inc
cwtl
pushf
ret
test
daa
lods
insb
pop
cs
cmp
out
pop
shlb
pop
addl
push
xchg
insb
cld
mov
push
adc
xchg
xchg
rorl
xchg
adc
add
jmp
push
mov
sub
imul
mov
fst
lods
mov
fcomps
rorb
and
xchg
cltd
jle
out
jge
lods
push
fcoml
stc
les
hlt
mov
pop
dec
jo
in
jo
mov
xor
push
xor
dec
fdivrp
or
adc
shlb
loop
es
aad
jecxz
popf
nop
lcall
cmpsl
sbb
push
int
or
in
sbb
push
mov
ja
mov
addr16
cs
push
mov
js
push
jl
in
xchg
js
xchg
adc
add
push
jle
divps
in
pop
sub
les
or
scas
sbb
int3
and
fisubs
fucomp
jmp
or
jno
ja
das
push
cmp
incb
sub
aad
mov
insb
shlb
pop
ds
push
jp
fnstsw
hlt
adc
mov
fwait
sti
mov
push
mov
cmpxchg
ds
mov
jecxz
push
adc
je
and
xor
or
iret
arpl
add
mov
test
jmp
xchg
ss
add
stos
int3
cld
mov
std
push
add
inc
inc
inc
inc
sbb
clc
push
data16
cmp
movsl
dec
adc
scas
dec
mov
xor
cmp
add
out
xor
jecxz
popa
sub
mov
cli
jnp
xchg
pushf
pop
cli
std
mov
outsl
dec
lea
xor
leave
out
xchg
outsb
jne
push
xchg
and
xlat
in
ds
push
stos
testl
dec
mov
inc
pop
lods
inc
or
inc
sbb
test
add
popa
lock
xor
daa
inc
mov
inc
test
inc
sar
dec
leave
imul
mov
inc
into
add
jle
mov
mov
sbbb
mov
das
in
movsb
out
xchg
push
sub
imul
lret
data16
fnstenv
sbb
mov
sub
pusha
sub
inc
inc
jne
and
mov
ds
mull
movsl
mov
xchg
invd
adc
sbb
dec
pop
cmp
cli
and
cmp
push
cmpsb
jl
imull
push
jb
out
fwait
cld
cmp
movsl
push
aad
jge
mov
outsl
sbb
pop
dec
scas
fs
mov
out
cli
or
pop
dec
sub
loop
push
call
jge
pop
mov
mov
fwait
pop
std
add
in
test
fsts
fisubrl
cltd
dec
lret
pop
js
xchg
inc
or
pop
cld
sub
jp,pn
add
cmp
mov
xor
mov
and
dec
jnp
cmpsb
negb
sub
frstor
jmp
cltd
push
jnp
stos
aad
dec
add
adc
in
sbb
mov
cltd
ds
inc
fldenv
dec
and
fwait
scas
ret
testl
mov
insb
xchg
cmp
inc
push
add
data16
loop
sbb
sbb
flds
and
mov
ret
popf
pop
jo
mov
inc
push
lret
lret
mov
shr
or
aaa
mov
popf
scas
xchg
xchg
or
or
mov
mov
xchg
push
fdivr
mov
adc
lahf
dec
data16
sub
add
xor
fabs
jo
push
sub
and
adc
fnstsw
inc
push
ljmp
sarl
mov
mov
add
nop
sub
inc
movsl
mov
popw
pop
loope
loop
inc
sti
ljmp
sub
mov
or
mov
test
or
rolb
aam
int
sub
loopne
or
xchg
push
mov
popa
cltd
mov
push
cmc
loope
mov
jb
sub
test
cmp
push
jnp
cli
and
fists
sbb
inc
nop
loope
mov
arpl
sarl
fsubl
repz
fistpl
adc
rcll
out
pushf
jno
mov
lahf
arpl
and
mov
pop
pushf
and
push
and
cld
fsubr
jb
jmp
outsl
and
mov
mov
mov
sti
mov
pusha
ja
sub
push
xchg
add
xlat
divb
loop
adc
add
inc
cwtl
jne
or
mov
mov
popa
ss
or
shlb
push
inc
pushf
push
rcrb
cmp
sbb
mov
mov
mov
insl
lahf
jmp
into
mov
mov
jp
xor
imul
insl
inc
stos
ja
daa
ljmp
jle
stos
loop
js
xor
stos
inc
mov
andl
dec
pop
nop
push
hlt
xor
inc
sahf
dec
mov
sbb
push
loopne
ror
adc
dec
mov
and
mov
repz
mov
xchg
jl
ja
dec
arpl
insl
int3
aad
sub
jmp
daa
xadd
push
pop
das
out
scas
mov
cmp
jo
mov
mov
ss
stc
or
je
lcall
jl
and
shrb
js
aaa
cs
mov
mov
sub
and
pop
jno
sbb
ret
cmc
mov
retw
fcompl
mov
fsubrp
jle
push
idivl
cmp
pop
xchg
cmpsb
adc
and
stc
lock
or
add
jmp
push
or
in
mov
loop
insb
jecxz
pushf
dec
xchg
ficoml
jne
out
mov
in
enter
push
fs
mov
mov
fstpt
js
rcr
jle
cmp
int3
cwtl
sbb
add
jae
add
imul
popa
loope
leave
cmpsb
jg
mov
cmpsb
cmpl
mov
testl
stc
inc
repnz
push
cltd
xchg
fs
push
dec
fld
daa
add
xlat
scas
add
sbb
dec
mulb
orb
pop
mov
mov
jnp
cmp
outsl
adc
icebp
cmp
xor
aad
scas
xchg
imul
push
cmpsb
out
sbb
enter
and
xor
add
push
pusha
popf
or
inc
and
stc
ja
lods
mov
adc
in
mov
cmpsl
enter
je
xchg
loope
or
push
jae
sub
popa
out
lods
cwtl
cmpsl
mov
cmpsl
test
setno
data16
bound
scas
dec
lods
mov
std
arpl
lret
lcall
cmp
pop
jge
es
xor
xchg
jnp
ljmp
punpckldq
pop
or
scas
mov
mov
pop
push
push
dec
inc
es
dec
bnd
nop
out
sbbl
and
or
sub
adc
stos
das
call
sti
adc
adc
push
dec
inc
iret
bound
jnp
adc
sti
jmp
popa
jmp
ja
ja
mov
jl
and
mov
je
mov
xor
adc
cmpb
loope
in
inc
faddl
lock
xor
xor
and
sub
lret
lahf
inc
imul
push
mov
xchg
mov
cmp
daa
inc
push
mov
pushl
dec
outsl
mov
xlat
dec
out
xchg
cmp
es
jbe
testl
cld
fwait
jne
pop
push
iret
inc
add
icebp
call
mov
mov
cltd
call
push
lcall
xorl
ret
and
sbb
jle
mov
mov
aas
pop
push
pop
jb
or
sbb
pop
ficompl
adc
sbb
pop
hlt
scas
add
cld
cmc
cmp
icebp
pop
test
in
sub
movsb
inc
fmuls
inc
xor
adc
jmp
gs
add
outsb
sbb
xor
movsl
clc
lock
mov
aad
jnp
call
cmpsb
popa
adc
adc
enter
or
test
call
pop
xor
bound
outsl
adc
xor
inc
push
cmp
repnz
clc
mov
mov
sbb
or
les
subb
or
fisttpll
pop
test
jmp
or
sbb
ss
jecxz
add
adc
adc
mov
fwait
inc
icebp
push
sub
pop
sub
sbb
nop
sub
test
in
fsubs
jp
dec
rcr
add
add
sbb
loopne
imul
mov
addr16
sub
cmpl
push
cmp
out
push
sub
adc
sarb
mov
sbb
and
push
clc
xchg
xorl
inc
adcl
xchg
rolb
jecxz
inc
lret
xchg
int3
xchg
jmp
addr16
pushf
fldl
push
pop
pop
push
psubusb
sbb
jne
repnz
mov
jne
xchg
inc
ss
mov
inc
cmp
sahf
and
cli
lods
or
ja
mov
mov
sub
ss
in
push
andl
mov
push
maxps
rcrb
imul
stos
push
inc
mov
add
movsb
fsubrs
ret
mov
mov
push
adc
dec
or
stos
or
je
mov
iret
jl
fstps
mov
adc
mov
mov
pop
outsl
cwtl
fwait
ret
jle
or
jb
lcall
fisubl
push
sbb
jl
je
add
and
add
dec
xchg
and
fisubs
sti
out
movsb
or
inc
xor
fisttps
in
or
pop
mov
iret
xlat
sub
cmp
repz
dec
sbbl
adc
sbb
aaa
xor
or
daa
ret
xchg
int3
mov
sahf
test
shll
sbb
test
cmpsb
lahf
xchg
pop
jo
cmp
add
and
mov
add
push
sub
clc
ret
js
js
push
push
stc
dec
mov
xor
jecxz
inc
xor
xchg
ret
adc
jne
in
aas
test
into
lds
fsubr
jae
xchg
dec
inc
sarb
cli
cmpsl
xchg
fsubr
cmpsb
sbb
push
xchg
in
iret
mov
in
mov
mov
xchg
add
cltd
pop
mov
push
add
mov
lods
lcall
rolb
push
add
sbb
jnp
xor
movsl
insb
xchg
cli
inc
arpl
xor
add
les
jno
lock
ds
fimuls
and
xchg
xlat
insb
cltd
aaa
je
inc
mov
sbb
pop
mov
inc
xchg
sbbb
jecxz
outsl
push
sub
jne
cmp
xor
fs
xlat
push
xor
push
sub
inc
gs
sbb
mov
jle
inc
fldt
jg
test
icebp
pop
add
aas
push
push
shl
mov
fisubrl
ss
pop
adc
shlb
mov
mov
ss
xlat
repnz
loope
inc
daa
insb
test
dec
out
xlat
insl
shlb
inc
into
or
xchg
xchg
js
imul
adc
or
xor
ljmp
enter
hlt
icebp
aaa
dec
or
jo
adc
out
mov
clc
cmp
ss
mov
cld
cltd
pop
xrelease
test
jmp
cmp
cmp
int
mov
inc
and
je
cld
lds
mov
cmc
pop
in
popa
mov
or
dec
jg
push
add
cmp
adcb
inc
xchg
sahf
lret
sbb
push
cmp
sti
mov
ret
cwtl
pop
cmpsl
fwait
mov
test
mov
xor
push
add
fmuls
cmp
rcrl
add
adc
push
pop
mov
dec
cld
icebp
pushf
fldcw
in
or
sub
push
adc
xchg
mov
sti
or
mov
rcrb
cmp
imul
inc
ret
mov
mov
jne
xchg
loop
inc
push
and
xchg
fisubl
fstl
fwait
sub
call
enter
xor
push
cmpsl
call
mov
sarl
inc
mov
movsl
sub
adc
rolb
fsts
pop
adc
filds
in
inc
stos
jno
cld
xor
lea
inc
lret
cs
ret
jb
xchg
jnp
in
jo
add
lret
xchg
lahf
push
pop
push
test
fnstsw
jae
add
popa
adc
or
pop
fidivrl
lock
xchg
mov
popf
xlat
mov
inc
jne
xor
sub
jge
push
xchg
out
and
test
repz
add
jmp
jo
lahf
push
dec
bound
js
pop
lahf
pop
push
mov
hlt
stos
mov
push
popf
xor
xchg
lcall
inc
sbb
inc
out
popf
add
shll
and
xchg
push
outsl
cmpsl
dec
fists
lret
push
incl
cmp
rorl
cmp
pop
push
outsl
mov
push
movsb
and
enter
adc
sbb
vinserti64x2
xor
dec
jne
pushf
pop
jl
xchg
add
and
repz
sub
xchg
in
cmp
mov
pusha
fists
stos
xchg
jnp
lret
adc
xchg
adc
xor
aad
sub
cs
cmp
fs
jle
pop
mov
aas
jbe
hlt
cmp
movntps
int3
sbb
mov
rorl
mov
jbe
aaa
arpl
iret
mov
adc
jmp
xchg
and
nop
mov
subb
push
addr16
lods
hlt
lock
cltd
int
dec
push
loopne
test
jge
and
push
mov
insl
dec
fcoms
pop
xchg
negb
and
popa
jp
mov
stos
adc
test
out
scas
or
cmp
rorb
lea
or
lcallw
decb
fs
push
test
and
xchg
adc
or
scas
or
gs
sbb
aad
out
mov
mov
std
mov
pop
sub
dec
imul
mov
inc
adc
call
out
dec
movl
push
inc
jo
mov
push
xchg
fnstsw
mov
xor
addr16
push
mov
insb
push
ret
adc
into
and
mov
push
xchg
sar
cmp
cmp
jmp
insb
mov
dec
jl
sti
enter
aam
andb
movsb
mov
xchg
repnz
ret
xor
pusha
das
mov
and
mov
mov
dec
je
loopne
jns
mov
jge
outsl
cld
sbb
sub
dec
lock
jle
sub
fldln2
and
mov
pop
sbb
mov
mov
int3
cmp
sub
or
inc
push
lock
add
mov
test
leave
ljmp
xor
jg
inc
adc
cmp
inc
repz
lods
lcall
pop
and
dec
sub
stc
sub
leave
mov
mov
dec
xor
repz
add
inc
add
push
jge
or
clc
jge
jbe
pop
pop
int3
mov
ds
movl
movsl
pop
mov
pop
xchg
fcmovb
test
rcr
lret
aam
sahf
cld
aas
in
and
jo
inc
adc
sub
enter
ljmp
mov
fadd
ljmp
movsl
shll
push
scas
xor
ja
or
sub
jne
test
fcomi
test
pop
lds
xlat
lahf
popa
push
xor
add
leave
add
fmul
sub
sahf
jmp
loope
int3
jbe
inc
pop
out
cmc
pusha
push
mov
add
repz
adc
fstl
rorl
inc
jecxz
dec
mov
dec
and
mov
into
mov
outsl
hlt
mov
mov
cmp
outsl
cmp
jne
sub
je
incb
inc
pusha
sub
fs
ds
mov
and
add
fistl
jl
push
popf
sub
test
icebp
cmp
sub
aas
dec
movl
add
adc
jp
jne
js
jns
sbb
mov
mov
pop
pop
inc
sbb
or
mov
inc
push
xchg
and
cltd
xchg
jge
push
into
es
or
jle
or
mov
testb
loop
jl
add
add
rorb
int3
and
pusha
xchg
cmc
outsb
and
push
or
jle
sub
inc
movsl
enter
test
adc
ss
mov
dec
xchg
pop
push
sbb
pop
lea
or
js
pop
push
mov
iret
jnp
leave
or
mov
push
xchg
sbb
xchg
sbb
sbb
mov
dec
push
cs
pop
fcoms
pop
imul
out
ret
movsb
adc
jb
repnz
pop
in
pop
inc
test
and
mov
jecxz
mov
out
fcomps
faddl
mov
cmpsb
xchg
xchg
pop
aad
mov
push
rorb
jnp
iret
shl
mov
scas
mov
sti
fidivs
movsl
inc
data16
xor
sbb
lock
test
arpl
push
pop
adc
aaa
sbb
push
adc
xchg
leave
xor
sub
sahf
mov
xchg
scas
fstpl
in
mov
and
not
ja
insb
stc
sahf
sbb
sti
mov
ds
fisubl
adc
push
pop
stc
mov
daa
int3
cli
notl
or
add
cmp
push
in
xchg
popa
add
adcl
cmc
sub
inc
lahf
int3
shrl
lea
and
lds
sub
orb
lods
repz
sbb
mov
sarb
lods
in
into
inc
xor
dec
mov
mov
mov
ljmp
gs
lods
xlat
int
cmp
mov
jnp
sbb
mov
adc
sbb
jge
ror
push
add
cld
dec
jl
lods
ror
popf
int3
outsb
loope
aaa
jb
inc
aas
imul
and
sarl
cwtl
inc
inc
clc
sbb
in
ljmp
pop
or
cmp
xchg
sub
xor
ficomps
push
daa
and
hlt
rcrb
push
sub
lods
fiadds
mov
insb
adc
xor
and
mov
dec
mov
repnz
xchg
mov
ret
ds
iret
push
mov
int
xor
and
iret
test
mov
sbb
pop
adc
xchg
fiaddl
xlat
mov
inc
pop
cmpsb
cwtl
cmpsl
jno
int
jg
mov
jne
ficomps
mov
jbe
fcomp
ret
xor
or
cmp
jmp
dec
jl
into
leave
mov
jecxz
push
mov
push
dec
mov
mov
pushf
dec
jmp
loopne
and
test
cld
int
imul
jp
add
test
xchg
insl
scas
push
orb
stc
leave
pop
movsb
and
mov
sahf
adc
mov
cmp
pop
pop
mov
jle
pop
jp
cld
je
mov
fcmovne
loopne
mov
jno
repnz
out
jbe
xor
push
outsb
gs
int
xor
clc
out
push
dec
push
or
mov
dec
jecxz
cmc
fiaddl
and
ljmp
ljmp
and
test
ffreep
hlt
cmp
or
push
adc
dec
shlb
sbb
and
mov
orl
fucom
pop
mov
inc
pop
push
mov
leave
int3
je
add
stc
or
inc
push
shrl
pushf
and
lods
pusha
icebp
sub
movsl
sahf
or
jne
dec
int3
in
mov
cmp
popf
stos
mov
in
jbe
push
jns
scas
cmp
push
mov
popf
inc
pop
mov
pop
cmpsl
sub
pop
xchg
jns
sub
push
lahf
push
add
xor
pop
push
mov
sub
adc
leave
mov
in
test
mov
xor
mov
and
jo
icebp
pop
flds
and
inc
stos
mov
and
mov
in
adc
insb
and
rclb
mov
sahf
or
rol
std
push
scas
fimull
push
cmp
pop
sub
jecxz
mov
dec
adc
popf
incl
jle
mov
flds
push
or
sub
in
xor
cli
push
and
aam
add
aas
mov
mov
or
mov
inc
iret
cmp
jecxz
stc
mov
dec
cmpsl
arpl
xchg
int3
xchg
lcall
es
xchg
push
gs
fs
mov
jns
lret
aad
cmpb
imul
nop
in
mov
jnp
jge
pop
mov
rclb
adc
sar
mov
sub
xchg
int3
mov
cmpsl
jmp
mov
and
cmpsl
std
xchg
pop
dec
out
bound
cmp
aad
in
xlat
xor
lods
mov
xor
push
mov
test
sub
lretw
aaa
ss
jp
scas
sbb
xchg
lds
out
stc
pop
sbb
and
cwtl
rcr
insb
jns
pushf
mov
mov
jp
push
xchg
adc
xchg
pop
gs
jae
iret
in
lea
push
xlat
out
scas
decb
lods
nop
in
sbb
ret
push
dec
jle
jmp
mov
movsl
mov
fcomip
inc
jns
pop
test
mov
jbe
inc
jge
lret
addl
fwait
jp
arpl
fidivl
idivl
push
add
lcall
flds
ljmp
ds
pop
cmpsl
jecxz
lret
jg
cmp
movsl
int
inc
fwait
lods
or
inc
mov
mov
xor
gs
sub
or
rorl
sub
add
lret
cli
std
pushf
xorl
dec
sub
ljmp
lea
clc
pusha
mov
movsl
outsl
dec
int
mov
aas
test
mov
push
or
xor
cmp
adc
jmp
lret
into
adc
cwtl
mov
cmp
dec
xor
insb
xor
or
dec
sahf
stos
sti
jne
bound
sti
fldl
shlb
sti
mov
or
es
das
or
sub
add
bound
loopne
jbe
cmpb
cmpsb
popf
cwtl
adcb
clc
xor
or
test
scas
mov
push
into
pop
hlt
dec
mov
cmp
cmp
out
mov
jmp
js
mov
adc
inc
fisubl
cld
sub
fucom
add
push
pop
and
mov
mov
mov
call
lret
adcl
or
stos
jmp
cmc
mov
inc
jae
inc
mov
lods
popa
fiadds
ds
jns
jecxz
aad
incl
pop
jbe
fisubl
xrelease
and
jge
xchg
xlat
call
movsl
fiaddl
dec
xor
pop
enter
pop
xlat
rorb
je
out
jg
xchg
jmp
call
mov
in
scas
stos
xchg
dec
outsb
push
in
shll
subps
mov
outsl
mov
in
popa
and
je
xchg
orb
repnz
cld
or
mov
or
addr16
or
jecxz
add
loope
fcoms
cmc
inc
arpl
or
mov
fmuls
sub
or
adc
je,pn
mov
xchg
jp
int
scas
jecxz
lock
pop
stos
push
push
sbb
fbstp
sbb
mov
mov
push
inc
push
inc
cwtl
out
push
jbe
mov
pop
and
inc
xchg
scas
cmp
xchg
sbb
popa
jge
imul
testb
stos
sub
testl
jo
dec
mov
lcall
push
xorl
pop
rorl
sbb
mov
test
rolb
pusha
jae
inc
mov
sbb
sub
adcl
aad
cmc
xor
cmp
stc
aas
sub
sub
mov
out
ret
addr16
jmp
rcll
cli
nop
fwait
sbb
mov
lahf
outsl
jbe
lret
and
test
je
les
pop
mov
mov
jl
or
incl
cmp
je
aam
jge
mov
cli
mov
rolb
add
sub
fcmove
push
pop
negb
and
xlat
ja
xor
ss
pop
fsub
adcb
leave
shll
fs
aas
mov
or
add
lods
sub
ja
cwtl
push
mov
lret
mov
dec
lea
cvtpi2ps
pop
push
das
jp
in
cmpsl
xchg
pop
xor
and
das
jp
shr
xor
dec
daa
cs
xor
into
lcall
arpl
mov
fcoms
pop
and
call
outsl
fs
sub
pop
adc
or
leave
lcall
out
and
roll
and
lea
cmp
sbb
outsl
in
adc
adc
fimull
push
mov
test
sbb
mov
jg
inc
cs
cld
pusha
psllq
xor
nop
addr16
loop,pn
push
dec
dec
sbb
sub
lods
sahf
fdivl
jb
fildl
pop
mov
lret
ret
cwtl
pop
lea
sbb
cmp
faddp
scas
push
mov
int3
push
push
xchg
jnp
loope
das
sbb
daa
test
fisubs
test
call
enter
inc
fistpl
bswap
lcall
cli
lods
add
dec
scas
adc
pop
sar
sub
fistpl
cltd
mov
pusha
xor
mov
jne
clc
adc
and
jne
jns
jg
enter
arpl
dec
or
jg
adcl
je
dec
jmp
or
xchg
xlat
dec
push
mov
mov
leave
fwait
stos
aaa
enter
loop
xchg
das
movups
jecxz
sahf
and
fwait
pushf
cld
dec
or
bound
pop
iret
ss
test
cld
push
pop
test
mov
adc
lgs
in
fistl
loopne
cmp
cmp
nop
push
mov
es
stos
pushf
sbb
pop
scas
jnp
lea
hlt
out
sub
pop
pop
sti
in
and
test
add
rcrb
lret
sbb
mov
scas
mov
test
push
xor
outsb
popf
notb
adc
lods
rclb
adc
test
hlt
es
stos
test
fildll
imul
jp
bound
mov
cs
iret
mov
out
loop
cmpsb
push
push
and
mov
frstor
pop
in
push
das
insb
sbb
xor
aad
adc
outsl
inc
jp
xchg
dec
test
cmp
and
hlt
std
jmp
mov
push
jae
xor
sbb
xchg
ds
push
cmp
add
rolb
stc
and
adc
in
adc
sub
jnp
es
js
iret
push
test
xor
sbb
lods
pop
pop
ljmp
dec
ja
adc
fidivrs
xchg
pop
jmp
inc
inc
movb
fstps
imul
in
sti
and
adc
push
pushf
scas
mov
std
jns
loop
nop
add
xchg
push
ret
repz
icebp
or
push
repnz
jne
jecxz
xchg
popf
push
lock
test
out
insl
stos
cmp
stos
pop
cmp
or
jne
insb
sub
adc
scas
fcomps
imul
jg
shll
outsl
movsl
xor
int3
or
dec
mov
adc
movsb
rolb
std
inc
imul
and
mov
sahf
test
cmpsl
test
mov
sub
dec
pop
xchg
add
lods
shll
loope
hlt
dec
ficompl
pop
sub
out
add
jae
adc
adc
lea
and
push
pop
fidivrl
test
xchg
mov
mov
jp
sbb
xlat
and
add
lahf
adc
xor
and
sbb
or
lcall
pop
jne
pop
jns
dec
push
mov
jmp
adc
dec
xchg
mov
or
fstl
push
cmp
and
bswap
xchg
or
jae
cmp
cmp
mov
inc
lock
sarl
push
pop
or
mov
fisubs
add
jno
in
cltd
aas
xchg
into
scas
rcl
mov
fisubrl
stos
addr16
jle
aaa
xchg
jns
into
cmpb
jmp
sbb
adc
add
insb
test
jnp
cmp
xchg
cmp
dec
mov
shlb
push
push
test
push
into
or
sub
push
dec
and
or
push
dec
pushf
in
push
pop
cmp
jg
mov
ds
push
push
sbb
sub
loope
push
push
push
andl
shlb
jb
pop
ja
popa
dec
push
aas
cmp
mov
xor
cmp
lret
xchg
xor
call
cmovl
mov
pop
add
mov
and
ret
rcrb
subb
inc
rclb
push
dec
in
push
dec
sbb
sbb
shlb
and
in
lahf
sti
pop
hlt
pop
into
stos
mov
hlt
jb
sbb
and
pop
jg
cmpsl
mov
cmpsb
test
daa
and
les
loope
aam
adc
add
pop
push
popa
dec
mov
cs
mov
cmp
lods
xchg
in
daa
sarb
ljmp
roll
popa
jle
aas
out
js
jnp
or
push
cmp
icebp
jle
fs
xchg
jne
mov
add
mov
and
cmpsb
fiadds
loope
inc
fs
jg
sbbl
dec
ds
pop
mov
xchg
jb
adc
jno
push
out
call
or
ds
fcmove
shrl
cltd
in
arpl
or
aas
mov
mov
inc
dec
das
xor
test
inc
jge
mov
xchg
dec
sbb
stc
xchg
out
js
sub
cmp
dec
push
jp
scas
in
mov
cmpb
mov
repnz
in
mov
jns
dec
fwait
shrb
xchg
jno
pop
add
inc
jo
or
icebp
insb
adc
jge
pop
jne
xor
sub
pop
sarl
xchg
inc
and
jg
sub
pop
cwtl
lods
lods
in
cwtl
ret
push
orl
leave
nop
mov
pop
adc
mov
inc
add
rorl
fmulp
stc
or
inc
sbb
adc
dec
xchg
aam
push
xor
lods
or
adc
cmpsb
dec
dec
or
push
inc
cmpsl
call
dec
mov
add
mov
mov
insl
or
lcall
notb
mov
add
cmpsb
popf
jg
jae
shrl
pushl
mov
mov
roll
lret
xchg
xorb
xchg
mov
idivl
loop
mov
jbe
jne
fsubl
les
mov
fimuls
adc
adc
gs
stc
in
rolb
and
cmp
xchg
xlat
jecxz
mov
lcall
jne
xchg
arpl
fnsave
push
dec
push
insb
cmpsl
scas
pop
cmp
xchg
sarb
jbe
lret
mov
mov
push
xlat
inc
ss
jecxz
call
ret
mov
pop
dec
jns
inc
cltd
rorl
xchg
jae
cmp
ja
and
lods
fnstsw
and
cmp
lds
dec
mov
jne
mov
hlt
xchg
xchg
sub
mov
jle
push
es
mov
stc
daa
inc
aad
push
pop
jb
fisttps
in
cmpl
cmovge
sub
out
les
ljmp
adc
subb
js
hlt
fidivrs
inc
mov
mov
add
xchg
jp
add
scas
cmp
imulb
sbb
repz
inc
sub
xchg
xor
jl
pop
xchg
push
ss
xchg
push
lds
jb
lods
out
adc
xchg
cmp
repnz
inc
pop
je
fimull
jge
xor
cld
sub
int
push
push
add
jb
les
cmp
cwtl
test
mov
pop
lcall
data16
push
xchg
mov
push
mov
add
xor
enter
iret
leave
dec
inc
jl
mov
jle
arpl
pop
jnp
fcmovnbe
xor
sub
mov
push
dec
cwtl
adc
mov
cltd
cmp
imul
addr16
xorl
dec
in
xlat
or
es
jo
les
scas
test
aas
fucom
mov
cmp
jmp
push
mov
in
imull
push
mov
adc
pop
push
stos
int3
and
cli
out
ss
or
and
iret
sub
fmuls
outsb
or
push
scas
or
data16
and
mov
inc
or
inc
clc
xchg
push
fcmovnb
mov
mov
rolb
aad
dec
add
imul
int3
or
jp
push
in
inc
mov
aad
repz
cmp
cs
mov
xchg
lods
popf
jle
aas
sahf
pop
sub
dec
idivl
cli
into
cltd
into
dec
dec
int3
dec
insb
xor
mov
lret
stos
ds
pushf
shl
push
dec
lods
inc
les
mov
xor
mov
scas
cmp
popf
jbe
into
dec
mov
and
ds
or
dec
mov
cmpl
push
jl
inc
cmpsb
addr16
pop
push
pop
lahf
ja
ret
scas
dec
lods
or
and
dec
icebp
jmp
push
shrb
andl
pop
add
loopne
adc
mov
test
test
stc
mov
pop
adc
push
cld
xchg
mov
jmp
lods
test
outsl
les
cmpsl
jno
ljmp
dec
andl
sbbl
xlat
inc
shrl
icebp
cld
mov
jne
jbe
mov
jne
insb
jns
sbb
sub
and
pop
fistps
gs
ds
mov
xor
xor
call
adc
repz
mov
in
fcomp
cld
gs
dec
cld
movsl
mov
push
loop
mov
fcmovne
inc
clc
xor
inc
or
adc
lods
mov
dec
imul
inc
rolb
inc
sub
fwait
xor
adc
inc
ja
jae
inc
std
xchg
jle
xchg
push
fildll
sbb
or
inc
mov
hlt
push
jae
leave
fistps
imul
iret
clc
jmp
cmpsb
clc
cmpsl
hlt
pop
aam
push
mov
adc
clc
and
out
shlb
mov
int3
mov
push
xchg
out
aas
aaa
bnd
mov
cmp
sti
xchg
test
xchg
inc
sbbb
inc
pop
cmpsl
jne
or
cmp
mov
mov
and
or
test
gs
in
pushl
sub
aad
hlt
xor
cld
mov
fdivp
std
pmulhw
cmpsl
adc
lods
jns
in
push
jo
repnz
addl
dec
movsl
mov
mov
cmp
sub
jl
xchg
push
stos
lret
arpl
dec
popa
dec
xor
mov
dec
popf
xor
jecxz
cmpb
jo
into
lcall
ja
sbb
stos
les
stos
xor
cmpsl
push
push
fistpll
push
in
in
nop
mov
sbb
rorb
popf
add
repnz
loopne
dec
inc
dec
and
ret
cmpsb
jne
jmp
test
push
jg
data16
mov
adc
jo
aaa
add
lods
jp
les
cmp
cmp
nop
push
out
push
jp
loope
insb
scas
movsb
je
push
es
lods
loopne
mov
pop
add
out
inc
sub
aad
sub
jg
mov
sbb
dec
dec
sbb
mov
loopne
push
loop
pop
cmp
cmc
sbb
lods
vprotd
cwtl
daa
in
jne
push
je
push
mov
mov
into
fnstcw
push
and
xor
sub
pop
push
mov
imul
mov
inc
pushf
adc
faddp
push
in
test
enter
xlat
insb
arpl
push
hlt
add
lock
add
mov
mov
and
fdivrs
mov
xchg
and
dec
mov
cltd
xchg
cmp
arpl
out
sbb
in
cmp
test
push
das
pusha
xchg
fs
out
roll
sub
xchg
pop
test
das
ja
inc
adc
and
mov
jb
cld
and
ficompl
loopne
sub
pop
rcl
stos
fsubrs
outsb
cltd
rcrb
mov
sub
inc
mov
stos
iret
cmp
leave
iret
ficomps
pop
sub
xor
ss
negl
iret
ljmp
loopne
stos
shrl
test
cli
out
or
cmpsb
scas
cmc
inc
mov
push
std
std
xor
insb
pop
mov
mov
lahf
jno
je
cli
mov
mov
lret
push
dec
mov
jb
test
bound
iret
je
fcomp
imul
out
sub
xor
gs
dec
xor
xor
ja
sbb
push
sbb
cmp
popa
dec
jns
push
jns
insb
and
cmp
mov
jle
push
jns
sbbb
scas
sub
adc
jl
hlt
gs
dec
sahf
adc
and
jp
cmp
xchg
mov
pop
xor
aad
or
ret
xchg
mov
pop
leave
stc
testl
mov
mov
lock
and
and
fcompl
pop
ret
iret
cmp
dec
cmc
pushf
mov
push
aam
insb
xor
cld
xchg
or
test
js
or
leave
int3
jns
xchg
cld
adc
or
jl
ds
sub
or
dec
add
jae
dec
rclb
outsl
sub
pop
mov
jns
dec
xor
mov
inc
sub
shlb
adc
mov
test
xchg
mov
into
lcall
push
mov
cmp
lret
sbb
adc
lcall
aad
sti
mov
hlt
jge
mov
fstpl
lahf
mov
int3
insl
cmp
cli
or
arpl
jp
test
gs
lock
jae
push
inc
mov
xchg
sahf
push
frstor
ljmp
testl
lods
psubsb
sahf
xchg
adcb
jl
stos
and
mov
gs
aaa
lret
test
inc
int
mov
cmp
mov
in
andb
ret
lods
xchg
popf
lahf
gs
aaa
out
pop
loopne
pop
jbe
cmpsb
imul
cmp
shlb
or
jns
imul
std
int3
dec
dec
ljmp
xchg
out
pop
fidivrs
dec
lret
adc
jle
pushf
pop
das
loop
and
mov
ss
mov
mov
pop
pop
fidivrs
arpl
xchg
pop
xor
pop
ljmp
arpl
lret
insl
push
dec
scas
nop
push
ds
popf
adc
push
or
inc
jl
int3
lock
mov
aaa
pusha
push
lods
sar
and
inc
sahf
dec
mov
xchg
mov
loope
dec
add
xchg
lock
sub
rcrl
adc
and
inc
fcom
xor
xor
mov
inc
sub
push
inc
cmpsl
inc
push
pusha
in
lods
cld
mov
jmp
scas
dec
and
xchg
pop
xor
jae
cmc
out
add
outsl
loopne
js
pop
enter
jl
inc
adc
seto
xor
sub
cmp
mov
pop
xchg
mov
and
mov
mov
popa
ret
sub
orl
testl
cmp
les
int
mov
les
imull
mov
fsubp
jecxz
push
lahf
sbb
mov
push
xchg
fwait
insl
adcb
in
pushf
lock
sub
cmc
fidivrs
push
add
adc
sub
insb
jle
push
lahf
roll
js
lea
xor
xchg
jae
lock
xchg
ficoms
jb
pushf
xchg
lds
scas
mov
sbb
push
fs
xor
push
mov
jae
repz
lds
mov
lods
cmpsb
insl
pop
lret
test
rorl
push
rol
pushf
das
mov
mov
rcrb
js
imul
push
cmpsb
inc
movd
ret
jo
jp
clc
lds
je
shl
shlb
jp
cmpb
sarl
scas
xchg
test
test
dec
dec
das
xor
jp
lret
test
sub
xchg
mov
and
mov
lahf
pop
out
push
aaa
in
dec
or
mov
mov
mov
scas
add
into
mov
add
dec
cmp
adc
test
clc
rep
and
xor
call
ficompl
js
dec
pusha
adc
sarb
and
icebp
es
xor
pop
sub
cmp
mov
cmpsb
inc
repnz
and
jo
aaa
rcll
popf
ret
rclb
push
dec
push
xchg
repz
sbb
scas
addr16
arpl
pop
cmp
sub
mov
icebp
and
inc
inc
or
add
mov
push
test
movsb
cmp
cwtl
or
mov
dec
mov
cld
xchg
cmpsw
or
jo
mov
adc
jl
dec
and
add
push
cltd
inc
js
fsubl
mov
pop
fadd
add
sarb
lret
inc
jnp
flds
repz
mov
data16
push
std
jns
ficoms
dec
hlt
out
cli
jbe
inc
sti
and
and
data16
or
and
and
into
xor
lods
push
mov
lret
outsb
in
sub
sbb
inc
xchg
test
outsb
sub
jg
adc
sbb
ret
fdivr
mov
mov
and
cmp
ret
mov
int3
lock
jo
and
ret
call
adc
iret
cmp
in
adc
push
lcall
jbe
scas
in
test
adc
into
cmovo
mov
jno
sub
call
push
neg
mov
push
mov
push
ss
lock
mov
push
mov
jae
or
sbb
cld
sbb
or
push
cltd
and
cmp
pop
shll
insl
and
insl
rcrb
pop
loopne
arpl
pop
mov
jecxz
mov
int3
push
int3
repnz
rcl
repz
int3
adc
sub
adcb
lahf
clc
test
mov
jae
popa
std
int
inc
cli
dec
inc
pop
pushw
mov
mov
cmp
fisttpll
mov
xchg
inc
mov
lods
iret
and
push
xchg
imul
cmp
je
pop
mov
push
enter
dec
int
les
jb
int
sub
or
in
sar
sbb
stos
sbb
pop
sub
push
ret
xor
mov
pusha
sub
add
lret
sbb
mov
jbe
sbb
into
jb
lods
jmp
inc
inc
leave
insl
sbb
mov
orl
or
out
dec
rcr
hlt
mov
push
sbb
push
cmpsl
mov
in
icebp
cmp
mov
stos
pop
xchg
mov
push
and
inc
or
gs
jae
jp
sub
incl
sbb
sub
sbb
gs
mov
loopne
jne
aad
fwait
sub
mov
mov
adc
addr16
dec
lea
sti
push
outsb
push
inc
notl
xchg
mov
and
jnp
scas
dec
jb
xchg
and
rcrb
push
jno
and
pop
push
lea
sbbl
lret
dec
shrb
divb
mov
stc
stos
enter
stc
inc
lock
and
rolb
filds
shlb
pushf
inc
daa
push
jmp
or
xchg
jge
jg
testb
fcmove
cs
popa
pop
in
enter
sbb
cltd
push
inc
into
lcall
adc
mov
sahf
add
push
and
stos
pop
sub
or
mov
nop
and
or
mov
and
mov
in
sub
sub
mov
aam
stos
add
ret
jge
push
pop
inc
dec
mov
jmp
out
mov
inc
iret
cmp
rolb
mov
ljmp
jne
mov
out
fwait
pop
sub
daa
cmp
mov
jle
push
jo
pop
imul
pop
inc
add
pop
test
aaa
ja
push
xor
adc
es
jne
xor
les
pushf
arpl
repz
loopne
push
push
daa
ret
mov
push
xorl
aad
ljmp
jl
lret
fnsave
orl
mov
lock
pop
shll
test
push
sbb
jno
lds
in
mov
gs
ret
xor
inc
les
push
int
ja
pop
insl
fwait
rcrl
filds
call
vaddps
ret
lcall
pop
xor
jbe
pop
iret
jge
ret
subl
pop
lods
xchg
cmp
mov
out
adc
or
push
adc
cwtl
fwait
mov
loope
sbb
fnsave
xchg
dec
loopne
lahf
out
sub
std
add
outsl
pop
cwtl
sub
push
push
pop
addr16
lret
enter
xor
mov
sub
stc
into
dec
push
xorb
xor
addr16
sbb
lock
out
or
pusha
movsb
into
mov
xchg
mov
push
insl
int
outsl
add
pop
jno
push
shll
js
dec
sbb
cltd
lcall
dec
jo
sub
xchg
and
fistpl
jp
fmul
mov
aaa
sarb
sti
dec
adc
pop
cmp
test
mov
insl
pop
repz
jmp
cwtl
sahf
ljmp
pop
push
sub
fstps
lret
ror
push
pop
jnp
pop
jmp
add
cmpsb
mov
fstpl
scas
jbe
movsl
xor
mov
fs
cltd
mov
repnz
adc
add
or
mov
sbb
mov
imul
lcall
dec
nop
stos
mov
nop
xchg
cmp
mov
lock
das
adc
in
push
mov
pop
push
xchg
movsl
insl
in
jae
clc
push
or
cld
mov
leave
seta
mov
ret
add
lock
xor
scas
mov
xor
add
mov
pop
fs
jp
xchg
ds
out
in
in
adc
adc
or
dec
lcall
loop
dec
imul
mulb
mov
adcl
mov
inc
xlat
bound
mov
cmp
adc
fstpl
shll
fisubl
mulb
jge
ud0
sbb
add
cs
mov
add
insb
dec
imul
ja
cmpsl
popf
ja
out
push
jge
shrb
dec
jge
addl
fs
bound
test
mov
call
pop
repz
inc
outsb
imul
mov
fidivl
mov
push
out
xor
jg
test
js
test
rorb
popa
pop
jle
mov
movsl
jb
ffree
mov
fs
clc
inc
sub
ljmp
rcrl
dec
daa
into
repnz
bound
cmp
stc
cltd
sbb
mov
push
loop
jbe
ret
dec
test
pusha
es
jl
sub
dec
aam
pop
daa
loope
movsl
movsb
lock
mov
iret
adc
adc
mov
inc
pop
out
cmc
int3
pop
pop
rorl
int
sbb
js
stos
popa
and
leave
xchg
test
movsb
xor
pop
and
popf
or
inc
bound
adc
hlt
adc
iret
stos
sbb
repz
or
xor
inc
adc
cmp
sub
loop
cmpsl
push
mov
sbb
sbb
mov
or
ss
add
stc
aad
inc
inc
jo
push
sub
fists
stc
or
lcall
and
xchg
testb
popf
mov
je
rclb
into
das
insl
mov
and
fwait
outsb
addr16
jle
lods
lods
push
cmp
fs
arpl
out
pop
mov
inc
insl
fdivrl
jne
adc
test
mov
cli
arpl
sub
fidivrs
movsb
pop
pop
xlat
ljmp
push
sub
insb
cmpb
insb
sbb
sub
xor
adc
js
inc
stos
push
xor
arpl
inc
push
imul
xchg
sub
xor
dec
ds
int
lods
mov
jge
in
cmp
pop
out
stos
sbb
iret
iret
fldcw
pushf
mov
jl
xchg
mov
addr16
sub
inc
iret
adc
mov
mov
add
cmpsb
cmc
inc
outsl
test
xor
mov
popf
popa
sbb
shll
sti
insb
pop
orb
or
test
je
fwait
pop
int3
add
jbe
mov
sbb
xor
imul
imul
and
lods
xlat
jno
std
cltd
in
cmp
sub
das
iret
lahf
lret
jmp
out
in
jecxz
lret
rolb
or
fnstenv
in
push
sbb
jecxz
and
iret
and
and
inc
clc
jb
es
pop
pushf
add
mov
xchg
and
xchg
adc
lods
flds
xchg
js
dec
and
sub
rclb
inc
or
outsb
xlat
pop
mov
mov
add
shll
push
inc
ret
add
pop
lret
movsb
mov
lea
push
mov
xor
add
inc
inc
lock
sub
lret
in
and
pop
push
or
pop
xchg
dec
mov
and
outsb
xor
dec
mov
inc
popf
xchg
inc
add
cmp
jo
cmc
mov
xor
jnp
inc
insl
cld
pop
dec
push
outsb
int
dec
mov
xlat
into
dec
or
push
mov
mov
inc
and
add
cwtl
or
enter
sub
mov
mov
mov
push
nop
fnstenv
mov
bound
iret
scas
es
inc
xor
out
mulb
out
mov
inc
es
cld
lods
mov
test
hlt
fistpll
fildll
lea
jge
icebp
pop
cmp
inc
dec
icebp
loop
dec
mov
out
xor
iret
daa
xor
nop
push
push
push
cltd
inc
push
aaa
cmpsl
std
sub
lods
sahf
add
pusha
aas
sub
shrl
xor
sub
cmpsl
add
stos
inc
sbb
push
das
xchg
jp
push
push
mov
adc
ja
adc
movlps
loope
jb
iret
aam
adc
sbb
call
pop
pop
or
mov
hlt
roll
mov
add
clc
xorl
lret
fldt
into
xchg
iret
rol
out
cmp
pop
insb
and
push
jg
pop
push
ss
jno
orb
xlat
mov
adc
sahf
jo
mov
stc
fadds
enter
jmp
or
repnz
add
mov
shlb
inc
fldcw
cli
pop
fwait
add
lods
enter
insl
loop
cmp
mov
jae
and
push
mov
jns
inc
mov
icebp
sub
fsubrp
or
sahf
cmp
pop
xchg
movsl
xchg
xchg
es
cmp
movb
xor
cmp
test
push
rcrb
mov
lods
sub
aam
into
jb
divl
cltd
sarb
adc
mov
inc
mov
lock
xchg
add
lea
jmp
xor
or
cli
repnz
lret
in
test
xor
lcall
jg
mov
fisubl
push
mov
fsubrs
fnstenv
loop
inc
jno
mov
xor
orb
mov
daa
push
out
fisttps
fwait
xchg
pop
jmp
stos
stos
mov
and
in
mov
loopne
imul
and
jmp
daa
sub
lods
mov
inc
push
lret
ret
pop
or
or
jmp
std
push
jb
mov
mov
dec
adc
scas
daa
dec
cmpsb
out
repz
lcall
pop
mov
stc
sbb
lea
jo
stc
popf
xor
xchg
adc
fldt
scas
js
jp
sbb
xchg
lret
popf
dec
mov
imul
and
push
add
std
dec
xchg
call
lret
xor
jbe
xor
adc
push
xchg
lahf
fs
pop
xchg
dec
push
notl
fxtract
les
stc
pusha
mov
les
insb
xchg
cmp
or
into
test
xor
dec
push
lods
push
ja
je
rorb
rorb
add
xchg
sub
mov
arpl
punpcklbw
dec
ret
in
pop
pop
push
mov
int3
sbb
rcl
push
mov
mov
fbstp
adc
pop
dec
std
xchg
xlat
push
sub
push
or
lods
fwait
mov
sar
pop
ret
jno
dec
les
mov
adc
vunpckhpd
cwtl
fcmovne
data16
sbb
pop
test
pushf
push
mov
out
xor
stos
mov
ljmp
pushf
push
mov
cmp
lock
in
lods
test
sub
xchg
stos
into
dec
xchg
pop
xchg
adc
mov
adc
push
push
push
jecxz
sub
icebp
es
fmul
lea
arpl
cmpsl
lahf
jp
test
pop
mov
shlb
adc
or
fs
pusha
leave
sbb
jbe
shlb
and
cmpsl
lret
pop
mov
ja
in
push
mov
push
jne
xor
xor
xchg
out
jne
iret
xlat
ja
adc
ljmp
jmp
add
pop
xchg
fwait
sub
insb
aaa
cmp
xlat
sub
or
and
divl
lods
and
pusha
gs
enter
and
ja
inc
pop
pop
cmp
ljmp
lock
pop
push
jo
xor
cmc
lea
dec
fisttpl
aas
divl
jcxz
and
pop
shl
test
ljmp
inc
lods
mov
adc
rcll
gs
hlt
or
xlat
shr
cli
pop
or
je
aad
lds
out
mov
je
sbb
xor
or
xlat
mov
loopne
xchg
dec
mov
xchg
sub
les
pop
xor
sub
pop
sbb
push
push
aaa
or
mov
lods
mov
adc
mov
or
int3
and
add
aaa
sub
sbb
sahf
pusha
imul
xor
int3
clc
fcom
call
ret
mov
mul
movsb
push
mov
jne
xchg
fsubrl
add
insb
cmp
js
jecxz
push
leave
movsb
filds
imul
into
mov
data16
sub
cli
ja
or
push
adc
xor
ljmp
sub
cmp
sub
xor
outsl
lret
cmpsb
push
shrb
lods
lcall
mov
clc
adc
lcall
insl
xchg
lds
outsb
xchg
cmp
push
mov
xor
adc
inc
add
mov
out
in
push
mov
pop
jb
cmp
jo
inc
xchg
xlat
or
jmp
xorb
or
lods
push
lcall
adc
dec
movsb
jb
icebp
lret
test
lds
lea
xchg
mov
mov
xchg
cmp
std
movsl
xchg
jecxz
mov
add
nop
push
add
jg
mov
movsb
add
inc
pop
gs
adc
xchg
pop
jmp
mov
testb
addr16
pop
pop
scas
jmp
xchg
test
shrb
or
push
je
jno
xchg
sbb
inc
push
pop
lods
mov
lcall
ja
nop
inc
inc
fwait
sbb
cmpsb
and
fcmovb
cmpsl
push
andb
jmp
mov
sbb
or
mov
adc
adc
push
fcompl
add
push
movsl
jecxz
test
xor
dec
rcrl
sbb
xchg
and
push
mov
add
ret
std
mov
xlat
lods
insb
pop
repnz
shlb
dec
jne
sub
mov
mov
xchg
stos
popf
push
push
loope
in
test
add
mov
test
rcrl
xor
sub
xchg
mov
mov
cltd
lea
mov
imulb
mov
dec
orl
pop
adc
adc
mov
adc
push
popa
aas
xor
push
shl
inc
outsl
addr16
negl
pop
sbb
ja
fcoms
fnstsw
adc
add
sar
adc
push
add
mov
xchg
add
sub
cltd
push
push
cmp
mov
pop
adc
int3
in
icebp
adc
sbb
pop
cmp
icebp
mov
cmpsb
and
popa
jno
xor
xor
sub
loope
aas
out
sti
je
dec
push
outsl
insb
shrd
mov
push
and
imul
testb
out
or
aaa
mov
mov
lods
repz
xchg
pop
pop
ss
adc
nop
jnp
ja
add
sarl
inc
mov
xchg
jge
xlat
or
or
aas
dec
cmp
movsl
lods
add
dec
jmp
pushf
jl
lds
mov
arpl
nop
xorb
cmp
daa
aas
mov
pop
inc
cmp
mov
mov
and
dec
push
sbb
sbb
mov
pop
xchg
dec
and
xor
mov
add
mov
dec
and
xchg
jle
sbb
xor
mov
mov
insb
and
mov
jnp
shlb
sbb
mov
pop
std
inc
sub
inc
inc
mov
xor
ret
push
sbb
ds
xchg
mov
push
loop
stos
jcxz
mov
mov
aam
cmpsl
punpcklwd
daa
mov
fstp
push
mov
repz
mov
es
enter
pop
xor
xorl
adcb
ret
sbb
inc
fucomip
push
lret
pop
push
dec
xchg
insb
or
pop
rcll
stos
sahf
fsubrs
test
faddp
add
pop
sub
xchg
lds
and
pop
fdivrl
int3
imul
mov
dec
call
xchg
mov
andl
in
mov
lds
iret
or
mov
pop
jb
test
xchg
ds
xor
pop
sub
mov
scas
ja
clc
ficoms
inc
lods
sbb
inc
xor
add
stc
mov
cltd
cmpsl
add
dec
pop
mov
xchg
adc
sub
mov
pop
and
jb
cld
push
push
stc
push
sub
pushf
mov
out
jle
push
out
adc
and
xchg
ret
cmpsb
inc
cld
rorb
mov
cmp
daa
xchg
or
iret
mov
jp
rcll
jo
inc
mov
rcll
mov
test
pop
setne
adc
aam
out
jmp
adc
sbb
jb
xchg
cli
sub
data16
and
shll
sahf
push
sub
outsl
repz
pop
ret
xor
in
sbb
lds
rol
test
stc
stc
test
jl
jmp
pop
inc
jae
inc
push
mov
fistl
fdivrs
sarb
cmp
jle
insb
jecxz
movsl
fwait
mov
push
mov
xchg
push
shrl
into
mov
sarb
in
mov
sbb
or
iret
rorl
xchg
mov
xor
mov
cmp
jnp
outsb
cli
out
cmp
sbb
push
or
fcmove
inc
lahf
je
mov
sbb
mov
and
sbbl
mov
and
lods
data16
popa
push
cli
cli
gs
iret
dec
xchg
rolb
mov
nop
loop
mov
data16
aam
cltd
mov
gs
jo
rclb
add
xchg
mov
imul
fsub
fwait
cmpsl
mov
shl
jg
sbb
mov
mov
mov
mov
ja
fsubr
cmp
jle
in
lock
xchg
inc
mov
sub
cmpsl
mov
bound
ja
cli
aas
sub
iret
push
add
scas
cmp
arpl
daa
or
inc
jp
mov
and
jnp
sbb
or
std
test
shll
fstpt
clc
movsb
mov
daa
test
cmp
pop
sbb
xchg
ficoml
sbb
push
test
shr
mov
ja
cmp
and
mov
ret
js
mov
aas
pop
rcrl
inc
pusha
leave
rcrl
pusha
dec
adc
mov
pusha
xchg
mov
in
sub
popf
add
jl
dec
add
xor
xchg
fisttpl
movd
cs
hlt
mov
cli
test
xchg
cs
out
jae
mov
lahf
repz
push
les
mov
cwtl
les
sti
scas
and
mov
ret
cs
mov
test
jl
dec
push
ror
icebp
insb
mov
mov
cmpsb
sub
scas
rdmsr
push
add
pop
jae
sbb
stc
testb
mov
xchg
std
scas
jle
iret
insb
mov
imul
cmpsb
aas
scas
inc
push
dec
xchg
mov
out
mov
adc
fwait
lret
test
test
lea
xchg
add
and
sub
xchg
in
cwtl
mov
fidivs
push
aad
pop
sbb
icebp
mov
jl
sub
pushf
xchg
ret
mov
clc
push
aad
iret
fadd
pushf
cmp
mov
pop
and
idivl
aas
arpl
loope
lock
scas
dec
inc
sbb
dec
inc
je
and
xor
push
mov
in
shr
andl
lcall
adc
cld
mov
shlb
lds
pop
mov
fimuls
jecxz
out
sub
fldt
dec
repz
xor
icebp
push
aas
ficomps
aam
sarb
or
mov
cs
je
and
push
arpl
push
insb
int3
fcoml
jmp
dec
add
push
ljmp
push
dec
push
insl
mov
xor
sbb
mov
or
fsubr
jns
mov
sub
jle
mov
or
sbb
dec
movsb
adcl
mov
into
jl
jbe
ja
xlat
jns
jle
jae
sub
jg
jns
out
shr
dec
cmp
lcall
push
mov
repnz
fiaddl
dec
jecxz
xor
add
jno
rolb
and
lcall
outsl
popf
and
jbe
andl
xchg
adc
xor
lock
cmc
nop
sbb
pop
jle
mov
test
jmp
mov
addr16
add
mov
mov
xchg
pop
cwtl
or
cmc
xchg
arpl
mov
cmpsb
aad
in
outsb
lcall
inc
repnz
aam
mov
popa
lea
out
sub
outsl
test
in
inc
sbb
push
cltd
lahf
pusha
es
outsl
adc
enter
les
test
loopne
mov
mov
add
fldl
push
inc
xor
push
iret
ss
rolb
and
imul
ret
inc
xchg
xchg
mov
mov
mov
adc
pusha
cmp
push
cmc
mov
daa
loope
xor
mov
xor
inc
fcmovu
lea
inc
push
mov
jne
push
pop
jb
cmpsl
pushf
or
rclb
int3
cmp
ss
test
loopne
pop
jle
lds
sbb
sbb
fdivl
push
leave
cmpsb
sbb
adc
mov
add
cmc
mov
jne
jge
fwait
adc
test
xchg
pop
inc
sbb
test
les
pop
cld
add
movsl
xor
lea
icebp
into
incl
xchg
andl
lock
mov
cmpb
fcomp
cli
fwait
and
or
in
add
mov
shlb
call
testb
lods
inc
sub
js
shlb
xchg
mov
aas
jo
iret
cmp
scas
mov
fnstsw
and
hlt
loopne
scas
push
icebp
xchg
push
cmpsl
movsb
dec
mov
fmuls
fs
je
cltd
cld
shrl
rclb
cmp
dec
cld
les
pop
mov
cmp
push
nop
jl
dec
ss
mov
cmpl
pop
shrb
sti
stos
mov
insb
mov
dec
jle
repz
imul
cmp
or
inc
jl
aad
addr16
xor
cmpsb
dec
rolb
mov
lods
or
lods
jmp
mov
aas
ss
je
rcrl
addr16
push
add
icebp
scas
adc
lods
dec
pusha
sub
nop
pop
imul
inc
roll
cmp
sub
loopne
int
push
push
mov
fs
fmuls
dec
sub
pop
mov
jo
dec
bound
adc
inc
adc
je
out
xchg
inc
inc
rclb
jg
adc
outsl
dec
or
shl
sbb
cmp
adc
rcrl
repnz
ret
lret
test
rclb
mov
jp
cmp
mov
xorb
insb
fcmovnbe
rorb
xchg
aaa
xchg
xor
std
push
lock
jge
sbb
xchg
jecxz
lea
add
sub
jne
ret
push
and
add
sub
in
jecxz
sbb
jg
xor
negb
in
pop
leave
out
sub
movups
add
mov
cld
inc
dec
or
sahf
jbe
push
jmp
xor
out
inc
cmpsb
cmp
fxch
push
sbb
nop
xchg
inc
test
adc
out
adc
cmpsl
or
xchg
adc
std
sti
xchg
mov
mov
cmpsl
insl
push
or
les
mov
mov
js
xor
jb
lea
inc
mulb
in
clc
hlt
xor
jge
int
pop
pop
inc
lea
add
ffree
sub
addl
push
lret
dec
jge
inc
mov
sahf
test
mov
push
pop
fdivrl
dec
jg
loopne
mov
cmp
addb
loop
scas
scas
sub
arpl
cwtl
fcmovnb
jno
rol
iret
loope
xor
out
or
pop
mov
mov
cmpsl
in
sub
repz
adc
cwtl
repz
rclb
sub
lret
sbb
sbb
jno
jecxz
sti
cld
bound
shr
jge
dec
lods
addr16
cmp
inc
call
lea
add
movsl
hlt
mov
gs
or
leave
push
fcompl
insb
scas
inc
inc
pop
mov
xchg
flds
test
cmpb
movsb
daa
cmp
sub
incl
repnz
fidivrs
rol
xchg
in
jo
xor
push
pop
fnsave
bound
xchg
mov
or
push
inc
dec
dec
insl
or
mov
adc
lods
in
enter
pop
xor
mov
push
sarb
pushf
les
mov
jo
int
call
xor
dec
add
xor
loop
pop
xor
xchg
inc
mov
fcomps
std
das
aam
mov
and
inc
dec
fcmovnu
iret
in
in
mov
fwait
cmp
aam
stc
or
pop
xchg
or
dec
les
movsl
mov
jne
les
in
pop
shl
pop
mov
xchg
cmpsl
mov
mov
fisttpl
xor
mov
cmpb
sbb
idiv
out
mov
inc
push
ret
jle
les
push
sub
loop
pop
shll
mov
stc
clc
fidivs
sub
call
popl
jno
inc
aaa
cmpsb
in
inc
outsl
cltd
xor
pop
ljmp
cltd
aaa
mov
mov
ficoms
es
aas
call
mov
xchg
push
icebp
push
lods
dec
leave
dec
out
adc
push
rcll
mov
inc
leave
das
push
cmp
and
jp
in
jno
shr
jecxz
xchg
push
mov
mov
and
xlat
mov
hlt
jne
sbb
mov
jmp
cmp
dec
rol
gs
dec
ja
leave
lfs
repnz
enter
sbb
sbb
lahf
jb
bound
lods
push
jmp
mov
es
sub
mov
mov
arpl
xchg
test
ss
sahf
jnp
bnd
call
lock
lds
cmp
sub
sub
subb
test
ljmp
add
jnp
gs
mov
push
addr16
ja
mov
out
popa
pop
cld
fs
popf
adc
aaa
hlt
movsb
lds
inc
stos
xor
in
hlt
movsb
inc
dec
and
push
mov
aad
push
mov
xlat
aam
xchg
push
lods
xchg
jae
cmp
push
pop
cld
jb
loope
or
mov
addb
hlt
mov
out
pop
outsb
pop
repz
sti
sti
insb
mov
add
xchg
push
andb
jbe
push
cmpsl
lahf
pushw
mov
imul
js
fmuls
sub
ljmp
in
leave
cmpsl
ret
dec
mov
imul
negb
nop
jnp
leave
int3
mov
divb
xor
stos
popa
or
pop
dec
cmpsb
in
pop
outsl
out
mov
mov
call
inc
add
jmp
fsqrt
push
pop
scas
add
jno
or
jle
outsl
cwtl
inc
scas
push
stos
mov
mov
inc
jmp
jp
imul
loop
mov
and
popf
mov
jns
in
jecxz
call
ret
out
pushf
into
xor
sub
pop
ret
lds
jbe
or
sbb
test
fmull
cmp
jle
sarl
shrl
dec
xchg
dec
mov
popf
adc
movsl
mov
sbb
sub
sub
mov
xchg
popf
cs
mov
pop
sbbl
push
arpl
fcoms
testb
add
popf
cvtdq2ps
popf
pop
pop
xchg
cmp
in
in
cmp
shlb
dec
sbb
xor
pop
test
popa
negl
std
and
adc
and
jmp
mov
shlb
sbb
adc
mov
mov
cld
or
rolb
xor
iret
push
mov
das
sti
jl
xor
scas
test
xchg
add
fiadds
scas
mov
fs
xor
sub
push
mov
repz
div
add
orl
not
cltd
outsl
cwtl
lahf
aaa
push
mov
lods
xchg
testb
or
xchg
ficoms
dec
dec
cwtl
jnp
ret
ds
mov
pusha
insb
movsl
push
sti
dec
les
repnz
adc
cmpsl
mov
out
inc
divl
jmp
mov
push
mov
jge
insl
or
cmp
shll
call
xchg
aad
loope
mov
adc
ret
repz
js
sub
lret
nop
outsb
pop
loope
xchg
stos
fstps
pop
sub
mov
and
or
jne
mov
std
scas
insl
shll
push
lds
push
sbb
andb
jmp
aaa
add
mov
and
and
out
and
sub
inc
jae
lds
xor
fs
arpl
icebp
pusha
add
jp
xchg
bound
push
in
jmp
lret
ret
in
xlat
es
cmp
cmpsb
mov
lret
fstl
into
inc
inc
loopne
aam
cltd
pop
out
jnp
fsubr
sbb
push
add
mov
pop
mov
jle
push
negl
jns
inc
rcrb
call
cltd
cltd
mov
test
xchg
adc
jbe
mov
add
data16
rol
mov
je
push
xchg
mov
xchg
repnz
jl
cmp
inc
mov
lea
popa
divb
sahf
mov
into
pop
sti
stos
dec
addl
shl
dec
dec
xchg
es
mov
jno
in
movsb
je
movsl
fistpl
cltd
mov
jb
stc
cld
add
sbb
inc
jbe
lret
icebp
mov
faddl
mov
xchg
xchg
or
sahf
dec
mov
scas
cmpsb
or
xor
bswap
insl
mov
xchg
add
pop
das
push
sarb
aas
int
fistl
mov
mov
mov
jp
imul
mov
dec
sub
ret
push
cmp
dec
push
adc
sbb
sub
sbb
push
test
mov
sbb
mov
sbbb
push
mov
paddd
and
ficoml
mov
out
mull
add
hlt
push
pop
scas
xor
mov
mov
mov
jle
mov
lahf
mov
jp
scas
leave
insb
mov
cmp
ja
xchg
pop
xor
fildl
and
iret
int
mov
aam
jnp
je
inc
inc
xor
pop
and
lret
bound
js
jmp
repz
mov
std
rclb
adc
jnp
xchg
popa
out
xor
xor
stc
adc
mov
dec
mov
jl
leave
outsb
dec
or
sbb
movsb
sbb
jae
scas
sahf
shlb
das
in
inc
rcrl
dec
adc
sub
push
pop
cmc
sbb
xrstors
pusha
jecxz
stos
fcoml
mov
es
or
mov
xchg
insl
push
xchg
shl
out
or
fwait
stc
dec
dec
sbb
rcrb
pop
sub
xchg
call
xchg
sub
dec
mov
mov
stos
push
adc
lea
push
add
lret
mov
mov
test
push
pop
mov
mov
sbb
ffree
fsubs
sub
std
mov
lret
mov
mov
in
stc
pop
sbb
pushf
mov
xor
adc
pop
cld
rol
sub
bound
cmp
ja
jo
vmxoff
xchg
loop
js
cmp
cmc
jno
test
out
xor
sbb
enter
iret
in
es
mov
and
sahf
mov
arpl
daa
ret
int
add
popf
fiadds
push
inc
lods
mov
scas
outsb
fnstenv
les
jmp
push
addl
dec
push
mov
cmp
jge
sub
or
and
cmp
loop
repz
sti
sbb
repnz
jg
popa
test
jg
xchg
sbb
add
inc
aaa
pop
pop
jb
xchg
cwtl
repz
stos
shr
sti
or
pop
test
mov
out
dec
xchg
dec
push
incl
les
push
lods
test
addr16
mov
outsl
imul
daa
lea
push
clc
dec
lods
hlt
and
xor
push
lret
xlat
adc
jg
push
xchg
out
cs
rolb
fsubrp
pop
clc
sbb
add
xchg
cmp
mov
es
insl
xor
dec
and
cltd
pop
jle
insb
dec
jg
lret
mov
jbe
popa
jbe
add
out
mov
adc
icebp
cltd
icebp
or
sahf
in
icebp
adcl
addl
sti
fdivrl
add
icebp
jmp
jbe
jns
jle
lahf
cld
and
sub
mov
out
pop
or
mov
mov
outsl
mov
pop
and
or
cli
loop
lds
jnp
inc
push
jmp
aas
pop
mov
and
in
sbb
push
push
test
loope
adc
sub
popa
pop
movd
cmp
mov
fisubl
sbb
mov
repz
jmp
xorl
xchg
xlat
in
jo
mov
push
loop
lds
lret
shl
mov
cmc
leave
lods
push
in
movsb
or
ja
in
inc
fadds
int3
jl
cmp
fwait
int
add
das
jno
outsb
and
in
dec
pop
cmp
xor
scas
in
pop
out
sbb
inc
dec
lret
nop
popf
mov
inc
icebp
dec
stos
push
inc
mov
loope
int
cmpsl
divb
ljmp
push
xor
out
shlb
jge
lods
push
rep
sti
mov
and
mov
leave
ljmp
xor
rorl
stos
mov
pop
mov
rcrb
sbb
into
xor
jb
lret
cmp
loope
xchg
and
sub
and
imul
pop
and
out
and
push
jmp
xchg
mov
movsl
add
out
jecxz
cmpb
testb
outsb
repz
jl
mov
repz
sti
outsb
or
cmp
mov
ffreep
js
pop
aam
lods
cwtl
sub
inc
jns
lods
dec
cmp
loope
jb
std
xor
sub
add
arpl
clc
xor
mov
sahf
mov
jo
loopne
enter
push
pop
call
mov
sbb
in
arpl
out
loop
sbb
lcall
add
ja
aas
and
xchg
cmp
dec
outsl
lret
rcl
xor
mov
inc
call
scas
mov
rcrb
jle
sub
outsb
shll
lods
cmp
jbe
sbb
ficoms
add
cmpsb
fwait
lds
mov
adc
insl
les
movsb
push
xchg
nop
xchg
cli
xor
sbb
psubw
test
push
imul
ds
imul
xchg
into
ret
repnz
leave
push
test
rcrl
and
mov
mov
int3
fwait
mov
test
fistpl
pop
push
mov
repz
repz
mov
dec
pop
repnz
jo
mov
jae
jmp
testl
pop
leave
or
adc
imul
or
daa
nop
ljmp
fildll
inc
pop
xchg
jmp
and
pop
out
cli
out
repz
ror
jno
or
test
in
test
lret
xlat
out
pop
out
adc
xchg
xchg
loopne
adc
xchg
outsb
jg
xor
ret
sti
fbstp
fwait
dec
push
lea
orb
jecxz
cmp
aam
fwait
shrl
repnz
cld
dec
inc
dec
sbb
insb
push
mov
pop
mov
test
sbb
dec
mull
add
jp
xchg
pop
mov
setge
fstpl
or
and
pop
cli
negb
mov
xorb
jb
lds
aaa
jae
mov
mov
cmp
sti
outsb
mov
fimull
mov
inc
mov
jg
jl
shll
add
mov
es
mov
push
mov
loope
iret
cs
xor
add
sub
mov
and
cmpsb
test
movsl
sub
add
or
stc
lds
mov
push
sub
ret
mov
testb
jle
sbb
xor
ror
pop
sbb
adc
shl
shlb
jae
pusha
or
insb
pop
push
adc
sub
cmp
jo
je
mov
mov
stos
inc
lret
fistpll
rol
mov
das
test
sbb
add
sub
add
sbb
ds
cmp
push
xorb
dec
int3
aas
fdivrp
xor
inc
je
ss
pop
jns
fs
dec
js
push
mov
movsl
jl
push
xor
ss
xchg
cmp
xor
fidivl
cld
xor
adc
nop
in
jne
jne
aas
arpl
ret
cmp
sbb
addr16
repz
xchg
jmp
mov
rorb
shrb
lds
hlt
xor
lods
adc
dec
movl
enter
rclb
lods
xlat
add
push
add
loope
test
sub
jecxz
int3
stc
shll
push
movsl
pop
add
pop
lret
add
mov
mov
push
ficomps
lds
sbbl
aad
mov
sarb
daa
mov
mov
mov
movl
lcall
hlt
fcmovbe
nop
aad
outsl
xchg
repnz
sub
mov
mov
lods
scas
mov
mov
and
retw
roll
ret
push
cmp
sub
idivb
fbstp
dec
outsl
pop
pop
sbb
cmpsl
inc
sub
outsl
xlat
notl
dec
xor
bound
fimuls
in
sbb
rol
stc
inc
fnstcw
push
adcb
cmp
scas
mov
repz
das
int3
out
dec
cld
movb
repz
inc
rcrb
adc
pushf
inc
cmp
adc
jne
adc
push
push
sbb
xor
add
push
sahf
xchg
mov
nop
jno
xor
fsubs
aad
into
loopne
pop
cwtl
mov
mov
outsl
stos
mov
mov
adc
in
int
mov
addr16
imul
jo
xchg
stc
push
div
push
jle
xchg
test
scas
cmp
xchg
push
mov
jecxz
leave
dec
in
mov
int
sbbl
adc
push
mov
xchg
sbb
fucomi
inc
cmpsl
inc
dec
sub
jecxz
mov
stc
pop
enter
push
or
insb
jp
sub
ljmp
test
push
xchg
cmp
and
jo
or
xor
inc
mov
lahf
aaa
idivl
ja
jg
add
jno
mov
pop
das
mov
fistps
andl
xchg
and
into
mov
sub
xor
loopne
jbe
cld
pop
cwtl
cmp
jne
in
aam
mov
aaa
outsl
xchg
cmp
ret
xor
insb
pop
fmulp
lsl
out
les
pop
pop
cmc
push
jecxz
out
jb
or
icebp
cmp
les
inc
xchg
and
inc
loope
loopne
mov
mov
enter
mov
ret
mov
in
sbb
das
lea
and
das
push
mov
loope
inc
pause
inc
adc
sbb
inc
xchg
mov
pop
loopne
cmc
sub
cli
cmp
mov
insb
inc
lcall
xchg
insb
xchg
push
mov
jmp
mov
les
scas
imul
xor
incl
cmpl
adc
or
test
mov
loopne
jmp
movsb
pop
insl
sahf
inc
sub
lret
iret
cmp
in
movsl
mov
pop
hlt
leave
inc
cmp
sbb
or
gs
loope
out
fldt
or
orl
fisttpll
pop
mov
add
lea
pop
inc
outsb
ret
js
test
mov
jecxz
dec
and
xor
jmp
hlt
xchg
jecxz
adc
enter
pusha
outsl
and
inc
xchg
mov
test
adc
pop
fptan
push
dec
fisubrl
inc
jmp
add
imul
mov
mov
shlb
in
mov
mov
inc
daa
dec
jnp
mov
sub
inc
jl
ss
inc
test
or
jns
movsb
jmp
fs
fimull
add
int
sub
decl
inc
leave
loop
push
cmpsb
dec
repnz
pop
rep
dec
mov
or
fs
pop
fnstenv
xlat
xor
lock
in
int3
cmp
mov
fstps
arpl
int
sarb
fdivrl
les
xlat
jmp
dec
imul
cmp
stos
outsb
push
popf
stos
pop
lock
mov
fidivl
movlhps
pop
cmpsl
mov
sbb
icebp
jbe
cmpsl
cmpsb
int3
pushf
test
cmp
adc
push
dec
mov
fcmovu
cmpsb
mov
jae
mov
sbb
fisubrl
jge
or
or
mov
lahf
mov
mov
fcomps
bound
lds
or
add
int3
xor
inc
adc
stos
fsubrl
std
push
nop
inc
ja
or
pop
sbb
jmp
push
cmp
jbe
scas
shr
in
rcrb
mov
je
nop
jge
sar
push
xor
xchg
push
ljmp
imul
xlat
adc
enter
push
testl
and
lods
insb
out
push
cli
nop
sub
xchg
clc
mov
stos
or
jo
repz
jle
and
in
push
lcall
xchg
xchg
lods
mov
xchg
jnp
mov
push
outsb
push
cmp
mov
fnsave
add
mov
xor
call
push
lds
xor
mov
dec
lahf
in
test
scas
sub
adc
sub
mov
mov
andb
adc
sub
out
pop
lret
daa
xor
hlt
je
push
xlat
and
divl
cmc
jge
sbb
push
sar
lcall
mov
mov
sti
outsl
and
jae
inc
hlt
or
bound
mov
scas
dec
or
xchg
push
mov
pop
sbb
push
cwtl
das
jl
xchg
xchg
jnp
adc
cs
lret
cli
add
daa
testl
lds
xor
std
in
adc
xlat
adc
mov
mov
jmp
sub
or
in
js
and
dec
stos
out
sbb
jg
mov
jle
das
xchg
pop
push
push
sbb
jno
xor
popa
adc
aas
mov
lcall
femms
sub
mov
or
iret
push
mov
add
and
dec
add
andl
in
jbe
and
fldl
sbbl
les
lcall
ja
and
jmp
xor
ret
jge
xchg
mov
or
cmp
inc
mov
aaa
mov
push
mov
mov
pop
paddsb
gs
sub
bound
rcr
cltd
test
test
dec
rclb
push
je
repz
inc
inc
int
mov
dec
imul
jmp
pop
imul
shrb
inc
and
adc
mov
nop
fsubs
pop
adc
sarb
idivl
sbb
icebp
adc
fs
popa
enter
cmp
rcl
xor
xchg
in
lahf
jns
inc
mov
out
out
je
cmpsl
jl
xchg
mov
mov
lret
dec
cmpsb
add
sahf
xorl
inc
sub
cmpsb
scas
mov
aas
int3
out
lret
mov
mov
std
lret
testb
adc
pop
shrl
add
xchg
sub
jmp
jle
arpl
inc
pop
jo
push
jmp
mov
stos
mov
mov
loope
dec
pop
fcomps
xchg
nop
and
push
xchg
xor
lds
roll
pop
or
or
sub
sahf
out
loope
loopew
dec
mov
add
aaa
or
sbb
mov
pop
jp
mov
imul
or
pop
or
addb
cmp
pop
pop
mov
xlat
jnp
add
or
movsb
push
jmp
pop
popf
push
dec
ljmp
les
jno
cmp
push
cmp
addr16
adc
push
mov
mov
sub
xor
sub
push
xchg
xor
sti
push
mov
adc
add
jns
test
test
mov
nop
shlb
push
mov
cld
sbb
mov
mov
inc
mov
mov
jns
sbb
arpl
push
push
sub
sub
fstl
xor
dec
mov
push
push
lret
imul
sbb
push
sub
and
sbb
das
insl
into
popa
mov
sub
lret
cs
sub
mov
sub
xchg
jp
inc
or
xchg
bound
xchg
pushf
sub
and
insb
sub
push
rcl
xor
xchg
dec
sub
sbb
or
stc
pop
xor
shl
jno
arpl
loopne
inc
pop
mov
aad
inc
roll
insb
jae
inc
mov
in
leave
fucomi
es
and
in
addr16
dec
in
sbb
test
dec
popf
pusha
jg
jae
sub
clc
lcall
xchg
aam
fmull
lret
xor
addr16
mov
mov
pushf
inc
shlb
jb
lret
mov
dec
sbb
xorb
xor
out
push
push
pop
mov
jbe
movq
out
mov
nop
cmp
dec
mov
lds
fsubrs
jo
pop
insb
mov
add
cltd
mov
jnp
inc
and
lret
mov
inc
icebp
add
das
push
fldenv
lret
mov
out
lds
inc
repnz
repnz
repz
or
aad
or
pop
test
or
mov
test
sub
xor
jmp
xor
cmpsb
mov
add
stos
cmpsb
jb
mov
sbb
dec
jge
ss
adc
add
icebp
mov
in
lret
push
mov
lret
mov
jb
xchg
mov
dec
cmp
xchg
ja
push
xchg
push
arpl
push
push
mov
out
or
mov
jnp
movnti
shlb
scas
out
test
ficompl
adc
sahf
popf
mov
clc
cmp
out
sbb
lods
cmp
jl
push
fnsave
shrb
adc
scas
lock
or
fnsetpm(287
xchg
cmp
pop
fimull
fs
pushf
vpackuswb
mov
imul
jb
fdivs
in
adc
push
arpl
cltd
aam
pop
jle
ds
jg
icebp
clc
xchg
mov
mov
mov
xchg
pop
mov
cmp
fwait
addl
push
mov
inc
jae
mov
filds
in
in
mov
into
adc
outsl
adc
test
out
lock
fmuls
pop
sarl
jns
out
icebp
repz
cmp
imul
xor
sub
sahf
dec
jbe
stos
push
repz
push
call
bound
fwait
and
xor
add
mov
sbb
jo
dec
dec
or
test
mov
jnp
xchg
test
xchg
mov
scas
adc
cmp
mov
rclb
pop
es
fistpl
shrb
mov
mov
xor
push
add
mull
xor
ss
xchg
mov
mov
add
aas
in
repz
stos
mov
jbe
and
jnp
int
pop
dec
or
dec
mov
cmp
int
pop
sbb
clc
and
add
ret
and
sbb
sbb
sbb
add
fwait
stos
into
xor
and
fcomip
int3
bound
outsl
add
pop
or
stc
or
out
xor
je
lret
loop
je
inc
adc
ds
sar
push
shll
sub
push
inc
cld
dec
insl
lcall
dec
mov
xor
pop
push
in
mov
lods
mov
in
in
mov
xor
movsb
sbb
inc
sub
jb
xor
mov
popf
pop
movsb
inc
insb
mov
mov
lods
jmp
lods
sahf
fsts
xor
or
ljmp
inc
js
fndisi(8087
in
or
jno
inc
ret
inc
sub
ret
cwtl
je
add
clc
scas
out
cmpb
pop
call
iret
pushf
rorl
das
push
sbb
pop
cs
sbb
push
or
mov
sarl
cmp
push
pop
imul
je
std
or
and
sbb
jns
mov
int3
je
sub
lds
push
arpl
push
inc
push
repnz
mov
fwait
imul
jg
mov
pop
mov
rclb
std
push
cmp
cmovbe
add
fsubs
add
and
push
js
or
in
scas
sub
sbb
mov
xchg
ja
stos
in
int
cmp
in
out
dec
test
mov
das
in
pop
push
and
sbb
and
ds
xchg
aad
add
nop
mov
adc
shrb
or
lock
jno
inc
out
push
push
jp
mov
and
insb
jmp
xor
dec
ljmp
imul
add
or
lock
call
jns
push
out
mov
inc
subl
loopne
mov
add
push
mov
jne
pop
inc
xchg
sbb
push
in
jb
test
cmc
xor
inc
test
and
shr
mov
xorb
mov
in
enter
popf
subb
sahf
sub
pop
andps
es
pop
inc
fscale
add
xchg
add
sub
scas
inc
fsqrt
cmpsl
mov
cmp
pop
sub
jne
outsl
xchg
rorl
mov
test
mov
mov
push
and
les
in
mov
mov
sti
sub
xlat
sub
or
dec
mov
pop
mov
or
cs
icebp
cmpsl
inc
stos
fistpl
mov
sbb
clc
ret
outsl
sbb
cmp
sbb
repz
or
mov
inc
aad
or
jle
and
arpl
inc
fisubrs
mov
jo
insl
mov
sarb
mov
inc
pop
fwait
jmp
imul
xchg
fisttps
cmp
pop
adc
cmp
inc
add
lcall
stos
lds
cmpsl
pop
stos
push
jp
fnstsw
leave
daa
das
add
adc
fwait
shlb
repnz
out
mov
mov
inc
cmpsl
xchg
fistpl
imul
cmpsl
stos
add
jecxz
popa
enter
jb
insb
dec
into
mov
into
orb
jl
sar
ficoml
pusha
cmp
xchg
clc
xor
lds
nop
jae
jbe
cmp
dec
icebp
and
mov
sub
pop
adc
pop
mov
pop
lahf
push
adc
or
aad
xor
inc
mov
sti
mov
xchg
in
daa
lret
cmpsb
cld
mov
pusha
hlt
cli
jg
sub
daa
add
inc
mov
fwait
sbb
inc
mov
int
loopw
fld
sbb
xor
pop
rcrb
mov
jge
push
pop
pop
in
mov
call
inc
aam
fnstcw
or
jb
lret
xor
aad
mov
cmpsl
subl
loope
lds
sbb
jo
addr16
jp
add
push
imul
movsb
dec
or
pop
scas
jmp
add
xor
or
adc
and
cmc
fwait
pusha
je
jmp
cmp
add
sub
shll
adc
inc
cmpsb
xchg
push
int3
jmp
dec
sbb
sbb
cmp
sbb
mov
push
add
inc
jl
mov
jge
popf
mov
xchg
sub
dec
pop
loopne
jbe
and
hlt
loopne
pop
pop
adc
std
arpl
pop
inc
inc
shl
jo
negb
push
imul
dec
mov
scas
addl
lock
push
fsubr
test
pop
cwtl
loop
stc
or
leave
dec
dec
mov
ret
sbb
es
push
sub
repnz
iret
mov
jo
ljmp
int3
sub
add
repnz
data16
leave
and
mov
std
jbe
add
adc
fstl
iret
inc
push
daa
add
sub
dec
cli
mov
mov
add
sub
addr16
fistpll
jmp
loope
insl
out
inc
xchg
gs
jo
mov
repz
imul
mov
nop
std
in
mov
mov
loop
cs
add
cmp
notl
movsl
mov
es
and
js
cmp
mov
cltd
mov
es
xchg
jg
add
pusha
divb
pop
and
ret
orb
mov
test
and
shl
push
and
in
jo
add
das
pop
cmp
lcall
dec
mov
mov
jno
movsb
stc
aas
dec
addl
addr16
daa
jle
rcr
mov
dec
mov
pop
fmul
push
pop
mov
and
in
andl
repnz
loope
and
ljmp
rolb
dec
fidivl
cmpsb
sti
mov
loopne
mov
jbe
pop
jl
jns
test
mov
cltd
addr16
mov
lea
pop
sub
push
movsb
paddsb
mov
shrb
mov
sbb
pop
mov
aas
mov
insb
push
and
pop
nop
lods
jae
or
fisttps
rcr
aas
loop
cwtl
push
fwait
push
sbb
mov
pop
fildll
in
dec
daa
pop
sub
mov
cli
pop
popa
mov
mov
push
jp
mov
mov
jmp
pop
fistpl
cld
stos
xor
sbb
jecxz
data16
and
pop
xor
in
jle
mov
xchg
jle
rsqrtps
cltd
xlat
outsb
test
js
dec
out
sbb
in
rclb
test
and
jecxz
mov
fnstenv
cmp
dec
jbe
inc
xor
imul
pop
push
mov
call
cmp
fmuls
insb
pop
sbb
push
clc
dec
test
test
or
jmp
arpl
ljmp
iret
jno
pop
cmp
aad
mov
cwtl
jno
jno
fdivs
cmpsl
pop
fcompl
xchg
adc
das
cwtl
or
es
and
stos
mov
imul
or
fisttpll
aaa
in
dec
inc
mov
sbb
xchg
enter
cmp
mov
jbe
scas
insb
cmp
xchg
ljmp
pop
add
fisubrl
lds
cli
fstpl
add
xlat
cli
icebp
pop
sbb
xchg
enter
push
in
movsb
rorl
out
jg
in
iret
cld
pop
mov
pop
adc
scas
test
arpl
jne
mov
mov
mov
dec
cmp
repnz
xchg
cmp
or
add
ljmp
jmp
sub
push
out
and
ss
sbb
or
popf
dec
pop
ret
outsl
mov
and
add
push
lret
into
push
lret
jae
push
sbb
mov
xor
sub
lock
fincstp
jle
push
inc
and
fmull
cli
popa
faddl
sub
adcl
jp
mov
stos
dec
loop
add
mov
xchg
les
add
mov
or
rcrl
or
fidivs
pop
dec
cmova
push
adc
iret
or
jae
out
mov
sbb
stos
dec
add
mov
xchg
jge
rcr
js
or
sbb
sbb
jno
lds
bound
lret
xchg
jns
mov
jge
jmp
out
aaa
add
add
jno
aad
and
shll
cmpsl
loop
inc
pusha
fsubs
jmp
bound
test
pop
and
cmc
jp
mov
fwait
dec
outsb
inc
xor
and
adcb
movsl
mov
sub
jbe
fmuls
pop
dec
fs
lret
jge
cmp
sbb
int3
jbe
imull
mov
loope
pop
clc
ret
and
es
adc
mov
inc
insl
jg
call
inc
jp
inc
and
je
shlb
ljmp
insb
mov
cmc
cmp
pop
int
inc
push
sub
pop
aam
lret
pop
mov
xor
adc
aad
fxch
jge
mov
and
cmpsb
inc
daa
mov
inc
cmp
mov
sub
daa
ja
sbb
cltd
mov
pop
pop
mov
movsb
sub
les
xorb
fucomip
cmpl
xor
sub
xchg
sub
cmp
outsl
jns
jle
mov
mov
stos
adc
lret
push
or
jge
push
xor
mov
inc
arpl
daa
test
push
in
pop
std
inc
xchg
popf
addr16
xor
mov
sbb
cmp
mov
inc
test
push
xchg
ljmp
shlb
xchg
fbld
sbb
frstor
jnp
jae
repz
js
std
xor
or
out
faddl
mov
push
xchg
test
pop
lock
push
and
inc
mov
jmp
sti
adc
push
mov
jno
jl
pop
sub
fs
push
or
push
sbb
mov
sub
jb
scas
and
fwait
out
imul
addl
jle
fimull
faddp
mov
fimuls
xor
sub
popa
xor
imul
call
xchg
cs
pushf
pop
xor
shrl
je
inc
insb
mov
aaa
push
mov
cld
push
shr
adc
mov
jl
push
arpl
jnp
mov
inc
mov
add
mov
push
cmc
inc
sub
jge
fs
sahf
xchg
adc
jae
movl
int3
adc
mov
stos
icebp
pushf
scas
adcb
out
insb
jo
push
aaa
shr
ljmp
jae
loope
sbb
and
sti
add
jns
push
xchg
mov
push
imul
in
fsubrl
jbe
aas
cmp
daa
imul
adc
push
icebp
inc
fcomps
in
sub
nop
cmpsl
jl,pn
in
sarb
and
mov
sbb
cltd
or
enter
jnp
enter
or
mov
in
cld
mov
adc
and
pop
out
lret
aad
addr16
mov
sbb
or
add
jle
loopne
cmp
scas
fstl
adc
daa
sbb
hlt
inc
mov
mov
xchg
push
or
push
ljmp
add
mov
in
mov
push
in
xor
add
fistl
incb
mov
shl
ret
decb
sub
jb
clc
popa
int3
test
push
mov
sti
cmp
and
es
pusha
pop
push
movsb
xchg
in
or
inc
push
mov
lock
pushf
addr16
push
pop
xchg
in
cmc
pop
test
xchg
shlb
mov
xor
sbb
mov
jne
inc
lcall
mov
adcb
enter
cs
push
lds
pop
pop
jg
mov
popf
inc
je
sbb
add
testb
mov
add
repz
inc
pushf
sbb
mov
adc
testl
jne
dec
and
imul
es
jae
out
sbb
add
mov
sub
cltd
mov
mov
aaa
les
rclb
xchg
in
sbb
mov
sub
mov
push
inc
jp
xor
aas
enter
pop
inc
jmp
xchg
je
xor
jns
push
outsb
mov
mov
jl
dec
or
out
rorb
jo
test
popa
fdivrl
adc
push
ror
or
xor
cmpsb
xor
mov
pop
pusha
rcrb
loop
pop
andl
adc
cli
push
mov
psrlw
sub
scas
lret
das
xchg
lock
test
and
orl
push
sbb
xchg
imul
int3
jbe
adc
aaa
bound
test
int3
sub
rorb
and
mov
popa
or
jmp
push
add
or
or
aas
enter
jb
fyl2xp1
mov
jo
test
mov
popa
mov
lock
pop
fstl
aam
xchg
jae
movsb
cmc
push
jae
pop
in
mov
jb
mov
sahf
js
shlb
fcompl
loop
cmp
or
in
lock
xchg
adc
fbstp
repnz
pop
mov
popa
mov
and
jne
mov
xchg
mov
jbe
das
les
adc
and
jns
and
jns
mov
add
inc
aaa
pop
loop
xchg
pop
jmp
xchg
lahf
or
adcl
xor
jb
lods
orl
fwait
in
jmp
pop
cs
arpl
xchg
inc
cmp
cltd
push
sbb
roll
cmp
addr16
sbb
and
scas
sarl
mov
mov
mov
andl
push
stc
lds
cwtl
stos
inc
mov
outsl
push
mov
rol
fdivl
outsl
insb
jle
adc
or
push
es
out
adc
cmp
jae
push
dec
out
repnz
push
cmp
fcoms
shll
cli
pop
dec
add
inc
mov
mov
stos
ret
sti
cmpb
add
dec
jns
jmp
pop
pop
imul
mov
scas
faddl
add
scas
stos
in
stc
out
xchg
jae
leave
jae
mov
out
sbb
dec
add
add
and
xchg
std
mov
dec
add
fsts
mov
cltd
pop
mov
inc
bound
cmp
mov
mov
enter
filds
sbb
pop
cmpsb
cmp
leave
or
setl
push
jl
hlt
fwait
inc
adc
fwait
xchg
sub
cld
add
sbb
mov
fs
mov
xchg
test
xchg
sarb
sahf
popf
ja
lahf
adc
shlb
mov
sub
mov
lret
mov
shlb
cltd
fs
and
pop
mov
sbb
fistpl
stc
push
sbb
sub
lret
mov
stos
jns
iret
pop
test
push
ljmp
sarl
and
push
pop
fisubrl
push
xchg
sbb
fdivrl
call
sahf
cmp
cmp
push
in
mov
adc
popf
xchg
lret
xor
imul
dec
fimull
loope
adc
mov
mov
inc
jge
aaa
pop
test
cmp
pop
arpl
sbb
inc
or
jecxz
mov
lret
sub
mov
repz
push
mov
xor
in
add
cmpsb
cmpsl
scas
cmp
mov
dec
sti
sub
mov
stos
fdivs
adc
cmpl
jnp
sbb
add
pop
aam
jns
pop
mov
test
jmp
add
ja
or
and
into
hlt
mov
push
push
adc
rorl
inc
sbb
mov
das
jge
test
push
bound
mov
jnp
cmc
xchg
out
xchg
outsl
out
cli
pop
int
cli
cmpsl
scas
mov
or
add
lods
lods
jmp
dec
jnp
mov
inc
rclb
ret
js
ret
xor
sti
pushf
sbbb
lahf
cmpb
push
sbb
push
rol
cmpsb
fldt
out
lea
mov
lret
cmp
in
sbbb
or
cmpsb
xor
sub
scas
sub
insl
fs
jbe
out
adcl
sub
fcmovnbe
sub
insl
dec
jmp
pop
xor
je
shll
ret
sbb
add
stc
inc
fldcw
push
movsl
outsb
adc
dec
stos
lods
pop
and
jle
mov
add
ret
jo
push
fxch
mov
cltd
fwait
mov
pop
aas
adc
pop
fs
sbb
orb
sti
xor
std
imull
adc
lea
lret
stos
or
addb
rcll
addr16
and
int
adc
and
sub
adc
jg
xchg
push
daa
test
jge
lods
xchg
rorb
sbb
mov
inc
pop
dec
xor
aas
fdivs
push
push
sbb
jo
xor
popf
push
push
inc
cmpsb
and
sub
ret
mov
lfs
mov
jp
out
mov
lret
fwait
adc
sub
faddl
shr
das
popa
adc
or
or
jp
push
mov
pop
or
add
fwait
daa
sbb
pop
push
lock
loope
out
jl
xchg
hlt
mov
add
add
or
xchg
std
and
inc
push
or
stos
test
mov
adc
cld
or
lahf
pop
out
pop
lahf
cmp
shl
jae
stc
mov
jge
push
dec
data16
xchg
push
mov
andb
fildll
ljmp
test
mov
xchg
push
rcll
mov
fs
cmp
xchg
int
or
and
into
outsl
sub
inc
lret
scas
mov
insb
fisttpll
repz
inc
shll
or
pop
shll
mov
push
add
pop
pop
pop
mov
cmc
jl
pop
sub
mov
jecxz
lods
cmp
push
dec
or
incb
or
mov
inc
outsb
cmp
fidivs
xchg
ret
pusha
mov
add
cmp
testl
mov
and
jg
loopne
adc
cmp
loopne
dec
lock
aaa
mov
jg
test
insb
sarb
and
gs
jg
cli
push
aad
in
bound
mov
mov
dec
mov
test
scas
rorl
pop
jno
int3
jge
mov
addr16
push
orl
dec
xchg
enter
movsb
scas
jbe
xor
or
push
aam
mov
jb
pop
int3
pop
adc
jns
fcmovnbe
cmp
dec
cmpsl
jp
cmp
lcall
mov
mov
xor
or
and
xchg
mov
sbb
fildll
test
and
pmuludq
or
mov
mov
pop
push
jne
push
xchg
dec
dec
scas
outsl
sbb
or
mov
jae
jg
dec
clc
cmovb
lret
out
and
aad
fnstenv
pop
pushf
subb
lods
mov
push
cmp
mov
xchg
cld
sbb
inc
adc
jecxz
cmp
stos
sub
fcom
xlat
aad
add
lret
scas
push
gs
fwait
jecxz
or
cwtl
dec
or
gs
cmp
sbb
jno
cs
mov
ja
cmp
test
popa
cmp
jns
hlt
jp
or
dec
rcrl
movsb
inc
mov
mov
inc
cmpsb
fimull
mov
out
mov
rorb
push
stc
jns
jmp
arpl
imul
sbb
mov
fyl2xp1
stos
lods
in
lret
push
sub
addb
adc
mov
mov
movsl
out
and
repz
fcompl
test
stos
adc
or
xor
adc
inc
outsb
push
dec
repnz
test
sbb
sahf
int3
sahf
scas
push
mov
iret
sarb
fsubs
dec
nop
into
push
mov
inc
loop
xor
sub
adc
mov
inc
call
in
adcb
repnz
adc
pop
scas
xor
xor
shll
cltd
cmc
cmp
jg
jae
jb
stos
stos
imul
jne
jle
dec
rorl
pop
lods
dec
mov
imul
aaa
cmc
stos
sbb
mov
or
enter
faddl
popf
popf
and
rclb
xorb
pop
inc
pop
iret
mov
mov
lahf
mov
fsubr
cs
in
and
add
sahf
mov
pop
sub
xor
rolb
push
loope
add
outsl
les
fisubl
lret
rcrl
pop
mov
fisttpl
mov
dec
cmpsl
lea
cmp
pop
add
orb
icebp
mov
cmp
scas
mov
loopne
pop
push
pop
xlat
lret
icebp
or
outsl
ss
aad
jecxz
hlt
adc
dec
cld
loope
push
sub
jbe
mov
mov
mov
popf
cltd
dec
lods
and
sub
pop
jecxz
inc
push
xor
jg
push
mov
jecxz
outsl
pop
sbb
aaa
divb
fadd
lds
xchg
cmp
cwtl
rol
fstp
dec
jecxz
xchg
mov
mov
dec
enter
dec
xchg
dec
ret
jge
cmp
xchg
sub
mov
jne
hlt
movsl
pusha
sbb
icebp
lret
pusha
gs
jmp
mov
rolb
xor
dec
es
dec
test
inc
adc
jle
xchg
popa
loope
mov
stos
jae
or
fidivl
jl
pop
mov
sub
bound
jecxz
es
inc
dec
jl
popf
out
inc
mov
ja
dec
movsl
add
xor
lahf
jle
ret
sub
cmp
adc
in
cmp
movsl
pop
adc
mov
mov
jmp
pop
jg
jbe
inc
nop
inc
cmp
nop
push
jge
enter
sbb
xlat
bound
and
mov
cmc
clc
insl
push
cmp
cvtpi2ps
dec
jp,pn
es
jbe
mov
ret
sub
add
into
jnp
fistps
jp
push
push
lods
pop
pop
cmp
push
cmp
ret
les
adc
sub
mull
xor
adc
push
xlat
cmp
stos
pop
cmpsb
jbe
jge
mov
xchg
out
mov
stc
stos
pop
fcompl
push
int3
dec
sarb
pop
mov
jo
add
cld
dec
push
mov
sub
pop
rclb
call
mov
imul
sub
ret
lods
xchg
cwtl
imul
test
adc
lock
ss
ret
pop
push
sub
fcompl
sahf
ucomiss
arpl
inc
and
enter
sub
movsl
push
or
jge
mov
jge
cmp
inc
cmp
fs
jns
dec
fimuls
and
inc
add
inc
xor
mov
or
push
or
nop
and
movsl
out
inc
lea
or
pop
xor
insb
inc
pop
or
movb
jle
mov
movsl
jo
negl
mov
mov
mov
lods
fwait
and
or
mov
dec
sbb
jbe
adcb
adc
xchg
xchg
gs
in
add
stos
sub
inc
cmp
jbe
aas
popf
int
push
daa
sbb
leave
sbb
outsl
jne
aaa
jo
sbb
inc
cmp
fidivl
mov
insl
adc
lods
pushf
popf
push
push
or
aaa
or
mov
or
dec
nop
xchg
clc
mov
hlt
popf
fdivl
push
adc
fwait
cmpsb
data16
xchg
imul
int3
or
and
jne
je
mov
push
lahf
leave
cs
xchg
aas
xchg
shl
xchg
inc
stc
sbb
sub
sbb
cli
lods
mov
movb
lock
or
and
loop
in
rolb
xchg
mov
dec
pop
aaa
loope
fisubs
cmpsb
adc
imul
pop
sbb
shrb
fisttps
icebp
or
cli
inc
xchg
loope
jnp
adc
test
inc
jle
addr16
fistpll
hlt
pop
icebp
sub
pushf
loop
inc
jmp
cmpsb
andb
hlt
or
and
es
mov
in
cmp
or
mov
lcall
push
es
push
cmp
nop
sahf
xchg
stos
jbe
inc
xchg
pop
push
mov
sbb
and
xchg
pop
adc
lcall
dec
push
icebp
andl
inc
xor
sub
jne
pop
rcr
xchg
sub
or
test
xor
dec
loope
icebp
dec
dec
movsb
add
or
inc
pop
in
adc
popf
fs
cmpsl
push
fistl
inc
mov
lret
out
sti
gs
daa
pop
jnp
cld
adc
repnz
mov
sbb
pop
in
jecxz
xchg
add
imul
out
call
inc
outsl
arpl
sub
xor
mov
cmpsb
mov
and
data16
scas
jae
fs
mov
loopne
lcall
pusha
leave
cli
xchg
leave
xchg
in
pop
inc
jmp
hlt
daa
aad
mov
jecxz
cli
out
ret
pop
mov
cld
push
addr16
fnsave
inc
xor
and
sbb
xchg
pop
mov
repnz
xchg
movsl
mov
mov
jl
in
adc
sbb
mov
bound
adc
pop
jno
mov
or
sahf
xchg
sbb
mov
cmpsb
and
scas
aam
sub
fwait
dec
mov
sbb
jl
or
mov
jbe
push
xchg
pop
ljmp
sahf
jge
mov
test
push
in
mov
dec
mov
jno
mov
shlb
mov
inc
jl
pop
push
xchg
scas
sub
ret
push
mov
or
lock
js
jge
inc
dec
xchg
dec
rorl
loope
mov
push
stos
or
inc
mov
ja
mov
aad
popa
mov
stc
push
lcall
mov
outsl
cmpsb
sbb
xchg
popa
inc
add
das
fistl
jns
sub
fdivrl
sub
xchg
lea
sbb
lods
push
movsb
mov
cmp
jl
sub
bound
ja
outsb
das
test
lret
mov
repnz
mov
int
pop
ljmp
outsb
push
mov
adc
addl
pop
cmp
fists
aaa
stc
cwtl
sahf
enter
mov
mov
mov
test
mov
xchg
jae
mov
and
jp
movl
push
and
shlb
jmp
jbe
jg
lods
fstpl
out
inc
test
testb
xchg
push
imul
push
cmpxchg
jp
call
sub
movsl
rorl
aaa
out
add
js
sbb
cltd
insb
ret
inc
loop
pop
pop
mov
es
or
in
movsl
rcrb
xchg
jmp
cmpsb
jmp
xchg
push
mov
fwait
mov
add
iret
jecxz
mov
test
insl
mov
lock
mov
out
jns
jp
inc
add
jp
ficoml
xchg
repz
sbb
mov
addr16
jp
lea
cmp
push
ss
ss
cmp
ret
jne
add
add
ds
aam
mov
jbe
sbb
pop
xor
mov
pushf
pop
xchg
iret
insb
or
push
pusha
jl
mov
jo
inc
push
clc
sub
mov
or
arpl
mov
sbb
lods
mov
jmp
mov
into
fsubrl
out
or
or
shll
arpl
notl
mov
jb
ja
or
dec
jecxz
sub
js
pop
or
cmp
jno
lcall
jae
jae
int3
ficoms
sti
pop
xchg
or
jp
jge
gs
rorb
sbb
sub
lock
push
popa
fdiv
push
int
pop
and
push
and
xchg
divb
and
fs
sub
push
or
add
imul
cwtl
movsb
mov
pushf
mov
push
dec
lahf
daa
push
dec
and
push
clc
xor
inc
das
cmpsl
mov
mov
insl
mov
jnp
aam
push
pop
push
pop
jne
lods
or
and
jp
cmp
fwait
mov
insb
scas
cmp
pop
or
imul
je
xchg
lret
cmp
ja
xchg
dec
jns,pt
cld
adc
or
jle
fists
mov
adc
addr16
loope
movsb
xor
inc
js
ss
cmp
xchg
minps
dec
outsb
cwtl
imul
fildll
jae
lcall
adc
pop
loopne
mov
adc
xchg
pop
xor
dec
lock
lea
lea
or
jbe
lahf
pop
and
xchg
add
adc
stos
push
jb
jle
int3
pop
jg
xchg
pop
adc
xor
sbb
ss
mov
fistpl
lahf
jnp
icebp
jae
inc
sahf
add
in
aas
push
xchg
inc
out
data16
sub
push
inc
pop
aam
ret
pop
mov
inc
in
jo
adc
adc
sbb
sbb
xor
das
ljmp
xchg
icebp
mov
leave
jmp
push
mov
outsb
pop
sub
ljmp
jg
cs
scas
test
jmp
ret
sub
iret
gs
fs
lret
mov
nop
xchg
icebp
bound
stos
pushf
xor
pop
movsb
int3
aas
jbe
or
mov
cwtl
jo
sarb
pop
cmc
pop
out
mov
push
lret
loope
iret
lcall
pop
sub
arpl
and
xor
ficompl
add
mov
dec
sbb
int
ret
bound
inc
add
bound
iret
mov
aam
jmp
imul
xchg
idivb
cmpsb
jbe
cltd
gs
sahf
mov
add
arpl
or
push
daa
std
aam
xchg
lods
mov
ljmp
inc
adc
jle
and
out
jmp
insl
fcmovnbe
pop
imul
and
push
cwtl
lret
xchg
data16
and
loope
cmp
and
push
xor
pop
sbb
pop
mov
mov
sub
aam
jecxz
sub
cmp
inc
jmp
lods
sub
aad
mov
icebp
fcmovnu
xor
in
xchg
ret
dec
dec
popa
and
jle
push
test
lret
insb
jno
pop
insb
fs
and
push
loope
ficoms
inc
in
sbb
repnz
mov
movsb
lea
nop
dec
in
mov
addr16
cs
pop
in
mov
ret
mov
or
xchg
lret
cmc
pop
jmp
push
pop
jl
cwtl
cmp
js
pop
xorl
insl
push
mov
pop
mov
mov
in
or
mov
fmul
sahf
mov
pop
mov
sub
leave
xor
daa
xchg
jns
inc
pusha
and
cld
sub
inc
dec
add
es
ret
fdivrl
in
adc
pop
xchg
out
adc
jns
jle
mov
sub
in
or
jae
adc
jl
add
and
jno
push
loop
bound
shlb
gs
loopne
jns
ljmp
push
push
pop
push
and
add
dec
sti
pushl
cmp
sub
push
fldpi
push
jno
jae
es
test
scas
mov
fs
cmpsl
inc
mov
stc
and
push
inc
in
adc
rcrl
push
lret
push
fdivrl
lcall
lcall
sbb
cmpsb
pushf
aam
dec
and
lods
and
mov
and
dec
pop
xcrypt-cfb
cmpsl
cmpsb
sbb
sbb
add
sub
or
or
xchg
xor
dec
lret
test
dec
test
out
das
jnp
fcoms
mov
xor
cli
aaa
sub
push
cmp
sbb
mov
inc
inc
sbb
add
popf
stos
mov
adc
push
dec
scas
jmp
pop
mov
inc
jne
aas
jnp
and
sbb
dec
mov
sub
push
push
mov
fst
loope
mov
xor
push
xchg
adc
jle
or
add
repnz
lods
mov
sbb
push
cmp
cmpsb
lcall
adc
jmp
sub
sbb
xchg
lods
js
fisubl
xor
cmp
stos
push
out
inc
adc
enter
fsub
pop
loopne
aaa
loopne
loop
lods
pop
mov
mov
lret
idivl
mov
sub
mov
push
push
sub
stos
and
push
ret
mov
jns
jo
xchg
fcmovnbe
nop
pop
dec
mov
lret
mulb
jg
faddl
in
jecxz
jmp
int
rolb
and
fs
out
jmp
mov
push
dec
js
mov
mov
das
fstpt
std
loopne
push
add
xchg
push
cmpsb
pop
xorb
or
cs
or
stos
adc
pop
cmp
pop
inc
pop
loop
test
mov
add
int
or
dec
jns
loopne
jbe
and
cwtl
mov
mov
jle
mov
imul
xchg
mov
adc
out
mov
add
ds
push
addr16
and
pusha
int3
imul
pop
cmp
dec
aad
daa
push
xor
popf
xchg
ss
cld
cmp
insb
mov
sub
es
push
sub
mov
out
sub
adc
push
and
add
mov
jb
mov
enter
push
xchg
mov
push
xchg
adc
xchg
xchg
jle
mov
pop
int
icebp
stos
or
dec
inc
popa
into
stos
xchg
xchg
fidivrl
xor
adc
adc
cwtl
adc
sarb
bound
add
cld
push
push
pop
and
dec
dec
xor
cmovle
in
cpuid
pushf
and
mov
xor
mov
and
mov
out
xchg
mov
out
lea
incl
push
movsb
inc
fisubs
dec
mov
fisttps
mov
dec
push
shll
orl
cmp
or
adc
mov
mov
nop
outsb
mov
addb
ss
xchg
iret
out
out
jae
lahf
mov
mov
dec
test
fnsave
rcrb
loopne
clc
add
repz
jo
sbb
add
daa
or
cmpsl
mov
mov
in
stc
xor
push
sub
jle
cld
mov
mov
movsb
mov
orb
jo
mov
mov
cmpsl
mov
outsb
jo
cmp
or
or
sbb
out
cmp
jno
sbb
in
adc
movb
inc
sbb
or
leave
stos
push
hlt
ds
xchg
add
dec
aas
hlt
lcall
push
insl
xor
mov
arpl
inc
ljmp
jb
or
cmp
sbb
js
mov
or
add
push
into
in
inc
mov
sub
or
mov
mov
xor
or
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
mov
pushf
mov
push
mov
aam
mov
pushf
mov
push
pusha
aam
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xchg
sbb
xor
cmpsb
pop
adc
mov
rclb
mov
add
rol
es
mov
xchg
mov
shrb
lds
mov
pushf
mov
push
mov
xchg
mov
jmp
mov
push
mov
mov
sar
xchg
fstpl
mov
out
in
lds
lret
and
pop
cmc
push
repnz
fs
jmp
cld
ss
cmp
sbb
scas
lods
sub
cmp
xchg
in
xchg
cwtl
inc
lds
mov
pop
in
xchg
add
pushf
mov
push
mov
insb
xor
rcrl
pusha
aam
insb
xor
push
mov
insb
fnsave
push
mov
shll
mov
mov
pusha
aam
sub
mov
push
mov
insb
xor
push
mov
insb
arpl
push
mov
insb
xor
rcrb
aam
jl
mov
pushf
mov
push
mov
insb
xor
push
mov
add
inc
call
aam
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
sbb
mov
mov
push
pop
cmc
pusha
aam
insb
xor
push
mov
pop
addr16
rcrb
aam
inc
inc
les
mov
pushf
cmp
push
addr16
pusha
aam
insb
xor
push
mov
mov
mov
pushf
mov
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
push
mov
insb
xor
cmp
cmc
pusha
sti
iret
insb
and
and
dec
cmp
subl
into
jp
jle
and
and
in
cld
and
inc
fsubr
scas
or
mov
jo
mov
adc
xchg
lods
mov
pop
dec
push
dec
xchg
mov
hlt
push
sub
jg
ss
stos
js
adc
jecxz
cwtl
lahf
mov
inc
dec
loopne
ficoml
out
arpl
jbe
rcrl
mov
fisttpl
jno
inc
and
js
leave
ret
jns
ficoml
dec
mov
movsl
inc
dec
testb
es
mov
std
jge
aam
and
in
dec
mov
sub
jmp
pusha
ds
jmp
daa
fwait
dec
movsl
mov
push
call
imul
xlat
aas
dec
fwait
subl
repz
jmp
repz
xor
push
gs
jle
fnsave
lcall
mov
loopne
subb
test
mov
sbb
push
pop
enter
hlt
xchg
mov
and
and
push
cltd
movhps
icebp
xor
mov
test
dec
dec
test
lock
ds
stos
cmp
sub
repnz
lods
ljmp
shlb
jg
cmp
sub
jae
leave
xchg
mov
xchg
lock
leavew
lcall
stos
jns
jge
ja
lds
lods
fs
push
scas
ljmp
loop
mov
inc
xor
faddl
push
sub
mov
push
test
xchg
dec
out
cld
and
pop
adc
loop
sbb
jne
and
test
leave
mov
test
sbb
lock
aad
lods
push
sub
adc
xchg
sbb
cmp
std
mov
fdivl
pop
sbb
xor
js
addr16
jns
shrl
mov
cs
push
inc
addr16
test
std
mov
repnz
ficoml
nop
clc
cmpb
ljmp
movsb
push
andb
jbe
xchg
into
dec
adc
mov
mov
inc
mov
add
dec
lret
stos
scas
subb
ret
and
fwait
sub
mov
push
dec
pop
sbb
test
jecxz
xor
movl
xor
push
push
sbb
push
mov
mov
pop
cwtl
jo
jnp
loope
fs
adc
fcoms
mov
mov
fdivrl
push
mov
and
fistps
add
hlt
push
test
inc
hlt
xor
std
repz
js
in
sbb
shrl
xchg
push
sub
mov
add
stos
fucomip
or
xchg
or
dec
xor
mov
enter
jns
jno
mov
sub
shlb
or
enter
dec
xor
dec
cmp
fs
arpl
sub
cwtl
mov
in
in
sti
out
or
cld
lcall
shr
mov
ror
push
je
jmp
or
scas
mov
jge,pt
add
in
mov
stos
and
mov
mov
mov
and
flds
sub
and
lcall
aas
jne
sbb
jnp
ret
jo
rcrb
mov
sub
ret
push
mov
jno
cmp
imul
xchg
mov
and
enter
push
les
jp
adc
lret
or
mov
daa
flds
in
pop
cmp
arpl
std
push
je
jo
xchg
push
in
xor
lods
and
int
sub
fnclex
lds
sbb
dec
adc
nop
xchg
shll
cmp
xor
in
int
hlt
repz
sarb
into
xchg
push
add
imul
dec
cmpsb
bound
daa
dec
stos
lret
aaa
es
ret
mov
mov
xor
lods
ret
enter
rcl
fcomps
test
daa
xor
outsb
jne
movsb
hlt
test
push
mov
es
push
scas
push
aam
adc
fwait
movsb
outsl
adc
loopne
mov
scas
xor
ljmp
dec
cmp
mov
add
je
daa
jne
inc
pusha
xor
arpl
aad
adc
movsl
rcrb
mov
mov
push
fnstsw
gs
fisubrs
xchg
mov
sub
mov
clc
push
leave
xchg
mov
aad
sub
icebp
mov
fldt
mov
popf
jmp
and
in
xchg
je
std
inc
sbb
fadds
push
fs
fimull
jmp
mov
dec
add
roll
add
dec
adc
and
cmpsb
sti
jge
mov
jnp
rclb
arpl
add
cmp
add
daa
and
das
lods
mov
sub
xor
xchg
es
inc
aad
inc
or
fsubrs
scas
pusha
ficoms
leave
iret
jp
and
ret
mov
jge
dec
pop
inc
test
pop
mov
jge
int
sbb
mov
aam
adc
clc
mov
stos
xchg
ja
test
fucomip
mov
adc
shrb
inc
lea
cmpsb
je
addr16
mov
push
fcompl
xchg
jmp
xchg
or
jnp
icebp
dec
outsl
push
sub
push
std
aas
lret
stc
fstpt
adc
mov
xor
out
xor
pop
and
cmp
push
jge
inc
and
ljmp
inc
iret
test
es
lds
aaa
jb
pop
cs
sbb
fists
cmpsb
mov
xlat
xor
mov
fucomip
sub
add
adc
or
js
fidivrs
cmp
vmwrite
mov
jo
jg
lods
xchg
fiadds
push
scas
adc
les
pop
push
in
pop
xchg
pop
leave
gs
bound
fimuls
aas
adc
and
btr
or
push
inc
jo
fwait
jp
sbb
arpl
sti
loop
sarl
in
lds
clc
cmp
and
sub
and
pop
imull
sub
or
xor
cmp
cmc
inc
mov
repnz
dec
cmp
dec
xchg
aas
movsb
lcall
pop
call
cld
mov
sarl
neg
cld
adc
std
gs
lahf
mov
pop
or
sti
cmp
cmp
xchg
ljmp
daa
imul
out
xor
add
je
mov
insl
cmc
sbb
or
lods
stos
xor
jl
mov
fldl
sbb
push
dec
cwtl
out
arpl
cwtl
cli
push
stos
sub
xlat
aad
mov
inc
push
imul
movsl
add
insl
fs
xchg
icebp
add
mov
in
adc
movsl
shlb
xchg
orl
adc
dec
fldt
lock
ret
jmp
and
cs
cmpsb
stos
cmp
jbe
pop
ret
mov
loopne
loop
inc
sbb
sbb
pop
pop
cmp
cltd
jne
adc
popf
lret
aaa
add
xchg
andb
ret
mov
nop
mov
test
adc
popa
push
lahf
out
das
xor
out
mov
push
push
int3
ds
ljmp
xchg
inc
testb
lret
pop
movsl
scas
stc
mov
adc
inc
popa
pop
sub
push
testw
inc
cmp
les
adc
mov
pop
clc
pop
dec
adc
fdivrs
push
or
stos
sti
push
cmpsb
or
ljmp
sbb
or
aas
lret
stos
or
insl
push
cmc
jmp
add
mov
pop
int3
pop
mov
stc
pop
xchg
jge
in
fldcw
add
lock
cld
jmp
cmp
rcrb
mov
test
movsl
loop
out
xor
dec
fwait
cmpsb
inc
pop
sti
arpl
out
subl
sbb
out
repz
daa
adc
filds
out
sub
pop
sbb
cld
dec
inc
ret
inc
sar
mov
mov
adc
decb
stc
inc
arpl
std
cli
mov
push
ficoms
mov
jae
insb
inc
or
mov
outsl
sub
cltd
mov
mov
leave
cmp
in
pop
in
pop
push
cmp
mov
xchg
out
gs
ret
jmp
jp
decl
mov
stc
rorl
cli
stos
cmpl
out
lods
or
mov
mov
jno
insl
cli
or
iret
mov
inc
sub
addr16
dec
sub
test
sti
ret
call
jno
jne
jne
jmp
dec
jns
mov
into
ss
push
rclb
into
cmp
sarb
mov
movb
lcall
push
xor
dec
xor
or
es
mov
push
test
mov
jl
roll
dec
and
shl
jle
in
andl
sub
push
adc
pop
scas
inc
xchg
and
inc
pop
pushf
int
enter
leave
push
adc
cmc
dec
jne
fwait
mov
loope
add
cli
mov
adc
add
ja
addb
inc
inc
fld
lcall
test
arpl
lret
popl
xchg
pop
aad
push
push
sbb
out
push
xor
popf
out
scas
jbe
xor
sbb
leave
mov
push
add
shlb
scas
orb
mov
inc
repnz
pop
pusha
int
pop
and
nop
or
sbb
and
mov
jp
mov
popf
sarb
inc
je
xchg
sbb
mov
cltd
fwait
inc
dec
es
dec
leave
mov
and
inc
push
xlat
pusha
out
fwait
js
into
imul
shll
cmp
dec
or
and
test
dec
push
xlat
arpl
adc
aaa
imul
inc
cmp
jns
inc
repz
sahf
add
bound
pop
out
addl
pushf
test
pop
loope
popf
xchg
sbbl
push
int3
and
jg
xchg
clc
dec
lods
add
outsb
cmp
test
dec
pop
dec
in
xchg
add
xor
dec
adc
dec
jnp
into
cmpsl
or
pop
loop
add
js
int3
clc
data16
or
xchg
mov
cmpsl
sub
xor
out
movsb
fidivrl
jb
push
lahf
adc
call
shrl
dec
inc
subl
add
cmp
pop
aad
arpl
and
pop
repz
les
mov
cmp
jno
sub
cli
arpl
inc
rcll
pop
and
push
insl
sbb
test
or
push
out
iret
xchg
pop
sbb
arpl
mov
pushf
aad
cli
sbb
fildll
fildl
test
shlb
test
adc
icebp
sbb
lahf
dec
shr
stc
mov
push
sbb
dec
stos
xlat
cmpsb
mov
mov
call
add
gs
add
or
inc
sti
je
cmpsl
mov
lods
cld
pop
mov
adc
aas
hlt
popf
push
push
ja
dec
out
dec
in
fcmovnb
sub
push
daa
jmp
ljmp
push
push
push
xchg
add
sub
fs
or
xchg
xchg
xlat
sbb
jae
adc
loopne
jl
pop
js
lahf
push
dec
jle
shll
imul
dec
int3
mov
mov
leave
btc
sbb
jno
push
push
idivl
mov
adc
or
lahf
testl
cmp
pop
sbb
leave
fldz
std
cs
mov
and
test
fadds
pop
sub
mov
out
outsl
ficoms
dec
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
