mov
xlat
in
pushf
xor
or
jne
pop
in
xor
or
and
xchg
cmp
lods
cmp
ret
test
jb
dec
add
addr16
mov
pop
mov
xlat
sub
xchg
add
sub
dec
rcl
jno
mov
inc
cld
loope
add
mov
xchg
dec
jno
dec
pop
fadds
and
aam
pusha
push
mov
js
mov
in
into
ret
outsl
gs
sarl
jnp
out
inc
ds
mov
stos
push
sti
fists
cmc
test
imull
push
arpl
lahf
xor
loop
sbb
pop
jne
dec
inc
xor
mov
or
add
stc
mov
out
jmp
fdivrs
cmp
jns
test
xchg
add
inc
dec
pop
das
aam
mov
popf
cmp
in
cwtl
lcall
cmpsl
mov
fisttpl
outsb
int3
adc
sahf
ror
push
fadds
mov
out
and
xor
fiadds
xchg
outsb
scas
or
iret
mov
pop
hlt
mov
mov
and
popf
add
bound
test
mov
test
pop
in
xor
ud1
test
cmpsl
jl
mov
adc
push
mov
xrelease
jle
mov
pop
icebp
ss
lcall
stos
and
dec
sub
xchg
pop
rcl
add
sbbl
lods
addr16
aam
movsl
mov
add
negb
imul
sti
mov
aad
pop
mov
sbb
sub
inc
jno
or
jns
mov
test
push
inc
iret
ja
test
inc
std
jb
mov
out
ds
hlt
lret
stc
mulb
push
sub
pop
mov
push
jecxz
popf
nop
xchg
imul
in
mov
add
mov
lods
inc
mov
sbb
cmp
mov
adc
testb
lds
inc
sub
mov
push
mull
lcall
fisttpl
mov
fcmovnb
sub
and
mov
sbb
and
hlt
jmp
aaa
stos
in
std
mov
xor
or
xchg
pop
fwait
loop
call
xchg
pop
out
mov
mov
jge
xchg
and
gs
dec
adc
xor
cli
shrl
test
push
push
inc
inc
inc
cmp
pop
dec
add
xor
ret
jge
mov
imul
mov
imul
push
sub
aam
inc
arpl
enter
lahf
ljmp
dec
enter
out
icebp
sub
loopne
in
push
mov
nop
xchg
pop
and
icebp
lret
and
and
xor
pop
dec
pop
lods
mov
cld
cmp
mov
loopne
pop
add
fwait
pusha
jnp
pop
in
mov
pop
pop
inc
pop
nop
addr16
mov
jnp
pop
movsb
jmp
cmp
scas
push
lea
dec
repz
xchg
bound
in
adc
lods
sub
mov
insb
fdivrl
subl
testl
adc
lea
inc
jno
fcoml
idiv
sbb
hlt
push
ret
xor
jp
sub
cmc
push
xor
insb
lcall
push
jne
fndisi(8087
mov
stos
fisubs
insl
and
loopne
fdiv
sbb
dec
push
cltd
jmp
mov
inc
mov
mov
jns
imul
pop
lods
jbe
dec
movsb
adc
cmp
pop
repz
mov
rolb
fldt
scas
bnd
inc
push
cmpsl
mov
sahf
ret
shl
imul
mov
fidivrs
cltd
mov
les
mov
int3
pop
repnz
lret
sub
imul
repnz
gs
es
out
into
ljmp
sub
sub
arpl
bound
cmpsb
sbb
add
lds
push
in
lcall
mov
inc
enter
cltd
mov
jmp
pop
sub
pop
f2xm1
xor
xchg
clc
stc
mov
repz
loopne
or
or
js
sub
stos
bswap
out
xor
push
and
xchg
adc
mov
test
lock
add
fwait
mov
lock
mov
lret
fiaddl
jnp
aam
subl
jns
loope
lahf
test
jle
loope
out
stos
nop
adc
lods
sbb
popa
sbb
sub
mov
rcr
push
mov
fisttpll
and
sub
shrl
mov
test
sub
xlat
push
out
push
aas
lea
cmpsb
xchg
and
sti
sbb
ret
cmp
jmp
xchg
mov
inc
in
scas
jmp
mov
mov
sbb
xchg
adc
lods
pop
icebp
test
cmp
inc
and
sbb
or
dec
pop
ret
repnz
jbe
push
or
jle
mov
jl
imul
xor
repz
adc
mov
and
xor
sarl
notl
lret
ds
sub
add
push
xchg
xchg
and
or
add
inc
sbb
push
ss
jl
call
incb
pop
sbb
lea
xor
adc
mov
mov
aad
mov
lahf
jp
enter
cmp
mov
loopne
ljmp
test
cmpb
adc
mov
cmc
call
stc
dec
test
scas
pushf
ja
fucom
imul
pop
dec
int3
mov
mov
jb
adc
mov
xchg
push
adc
popf
in
xor
inc
subl
out
mov
inc
fistpll
int
xlat
repz
add
pop
pop
pushf
jp
mov
dec
xor
fidivs
mov
stos
xor
dec
jo
mov
pop
inc
aam
or
hlt
sub
dec
push
push
pop
or
mov
xor
jnp
mov
jb
mov
das
jns
and
nop
sub
jecxz
push
sub
xor
rcr
or
adcb
out
or
out
outsb
mov
cs
lock
mov
jle
pushl
iret
ljmp
jbe
bound
xor
cmp
test
filds
and
sub
sti
jmp
jns
into
mov
mov
pop
in
jne
mov
xor
fisubrl
sarb
lcall
and
jl
test
movsb
sbb
jmp
inc
aad
jg
sbb
inc
push
test
xchg
imul
pushf
sti
rcrb
adc
test
cmp
inc
cmp
cld
sub
out
push
ja
les
rol
xor
ja
adc
loopne
in
xor
cmc
ds
inc
sub
push
insb
jl
gs
std
addr16
sub
fs
jbe
xor
imul
inc
jo
sub
cmpsl
ljmp
cltd
mov
in
push
or
inc
xchg
int
out
inc
xor
out
dec
inc
ds
gs
loopne
in
lret
jnp
insl
mov
xchg
call
ja
jecxz
fildl
movsb
leave
aas
cmpsb
xchg
jbe
adc
test
xchg
mov
repz
mov
mov
cltd
jg
mov
push
cmp
out
and
in
aad
sbb
test
sub
fs
cmp
pop
mov
rclb
in
int3
cmp
in
insb
or
roll
xchg
add
enter
mov
dec
jmp
repz
jge
jnp
das
hlt
inc
movsl
popf
inc
and
mov
int3
lods
pop
bound
jns
mov
adc
scas
imul
outsb
or
jo
lcall
adc
cmp
sbb
add
mov
cmp
jbe
mov
mov
xchg
outsb
or
sub
add
cs
dec
mov
pop
fisubs
outsb
add
jmp
por
inc
push
mov
ljmp
iret
sub
sarl
stc
dec
lea
daa
add
and
adc
ret
xchg
shrl
push
mov
dec
cmp
sub
jg
outsl
add
xchg
inc
xchg
int
mov
testl
jbe
dec
in
je
sbb
or
dec
mov
cmc
repnz
xor
scas
mov
jge
jmp
cmpl
ja
lret
cmp
fwait
push
inc
dec
cmpsb
cmp
fwait
pop
and
hlt
sbbb
push
pop
nop
orb
lcall
int
bound
fstpl
xlat
es
mov
popf
sub
xor
cltd
dec
sbb
imul
insb
cmp
dec
xchg
int
mov
inc
mov
xor
nop
imul
push
push
ljmp
test
mov
cmp
fwait
sarl
pop
sub
dec
stos
rorl
xor
lret
das
jecxz
fnstcw
mov
jl
fcomps
pushf
and
aas
mov
fisubrs
shll
push
xor
mov
xor
arpl
popa
repnz
add
cmpsb
sub
cmpsl
xor
out
cmp
sbb
gs
mov
jge
or
ljmp
cwtl
ds
int3
pushf
lcall
aad
inc
bound
sbb
aas
fnsave
jbe
and
lahf
out
cmp
leave
xor
inc
mov
div
add
fsubl
and
out
push
mov
jecxz
or
xchg
add
pop
pop
outsb
test
cltd
sbb
inc
push
ret
pop
cmpsb
dec
aad
cmpsb
outsl
out
jb
jbe
mov
jge
js
lock
hlt
loop
repnz
push
push
add
cmp
cmp
mov
mov
call
divb
xor
add
cmp
dec
adc
std
mov
mov
inc
enter
sub
sahf
shlb
icebp
negl
je
nop
and
sahf
or
dec
mov
and
mov
scas
mov
mov
repz
sbb
outsl
dec
dec
pop
xor
mov
mov
or
cmc
jg
in
mov
gs
jno
ss
test
add
stos
and
or
test
inc
cmpsb
xlat
sub
push
inc
loope
sub
ljmp
fcomps
add
jns
scas
and
inc
pop
ret
xchg
adc
mov
addl
push
scas
and
lahf
nop
movsb
fidivl
loopne
ja
jmp
bound
dec
imul
insb
mov
mov
pop
push
test
outsl
fstpl
add
int3
aas
mov
push
rol
pusha
mov
adc
lock
imul
xor
add
rcll
xchg
loopne
test
mov
xchg
stc
cmp
xchg
cld
pop
mov
add
mov
mov
hlt
repnz
ss
out
adc
sbb
sbb
pop
stc
pop
mov
mull
jl
add
outsl
and
andl
fistpll
rcl
pop
outsl
in
cld
in
cmpsb
scas
pop
lcall
xchg
dec
out
out
jnp
test
out
lret
cltd
jge
les
inc
cwtl
fdivl
into
sub
adc
imul
pop
addr16
xor
add
lret
dec
mov
lahf
or
add
cmp
lret
add
aam
ret
fsubp
aas
into
push
xor
add
mov
lahf
adc
mov
jne
test
ljmp
mov
pop
repz
sbb
sbbl
aas
cld
repz
mov
pushf
cli
sbb
dec
lea
sub
push
hlt
adc
cwtl
movsl
mov
mov
test
outsl
out
movsl
cmp
jno
fnstenv
pusha
les
cltd
pop
and
cmp
xchg
mov
pop
xor
adc
je
cmpsb
push
rclb
cmc
ljmp
jo
imul
std
adc
mov
pop
cmp
sub
dec
dec
add
or
push
loopne
jmp
aad
xchg
stos
data16
xor
lret
dec
jge
fisttpl
inc
popa
popf
call
inc
push
aaa
push
adc
cs
enter
pop
xchg
xchg
mov
xor
or
test
cmc
sub
xor
sbb
push
jp
push
and
jle
ret
cmp
testb
jg
xchg
out
icebp
fnclex
shll
push
push
cmp
pop
sub
sub
sbbb
jp
ss
mov
jne
subb
mov
repz
cs
push
rcll
mov
sub
adc
pop
in
or
test
jo
cmp
out
ss
and
icebp
call
pop
xchg
lahf
add
insl
pop
adc
or
std
jecxz
ficoml
mov
push
aam
aas
mov
sbbl
fwait
mov
rorl
outsb
jne
adc
push
aam
out
pop
dec
arpl
xor
xchg
aas
shll
sub
mov
jp
div
inc
sub
aaa
add
mov
iret
push
fwait
sub
inc
imul
fnstcw
dec
sbb
or
flds
test
int
push
jg
lea
mov
aam
mov
xchg
mov
call
fldl
pusha
mov
mov
dec
mov
popa
ljmp
mov
data16
inc
or
push
xchg
negb
leave
popa
jmp
inc
mov
cmp
and
ret
or
loope
std
mov
xor
adc
rcr
xchg
sbb
dec
mov
lock
mov
sbb
sbb
das
cmp
out
adc
hlt
pop
addr16
jle
pop
sub
xchg
out
inc
inc
popa
repnz
adc
pop
jl
aaa
lret
sbb
mov
jecxz
cltd
xchg
test
mov
dec
adc
mov
or
lods
cmp
je
dec
or
cmp
notb
adc
lock
fdivrs
cltd
std
or
lret
jbe
and
repnz
inc
mov
movsl
out
outsb
inc
and
outsl
sub
push
mov
pop
andl
sbb
lods
rcpps
inc
adc
mov
pusha
sub
insb
ds
add
xor
ret
lahf
lds
out
mov
mov
pusha
inc
fcmovne
js
je
xchg
repnz
inc
xchg
jbe
dec
xor
mov
cmpsl
mov
rclb
dec
shll
dec
inc
pop
pushf
dec
sub
jae
push
dec
sti
add
xor
jno
adc
andb
xor
sti
out
cmp
inc
xchg
mov
sbb
popf
cs
sub
loope
fidivrl
inc
xor
push
or
test
cmpl
cmp
or
cli
cs
inc
movb
xor
mov
cmp
shr
jmp
addr16
cmp
fcmovnu
xor
inc
lret
or
push
stc
nop
sahf
dec
mov
xchg
ret
stc
mov
call
jns
incl
mov
out
stc
pusha
or
jmp
test
shll
andw
fidivs
mov
mov
pop
outsl
mov
lret
aaa
mov
xor
test
cmp
jmp
mov
fisubl
ror
insl
imul
lret
adc
les
pop
sbb
jle
xchg
mov
mov
xchg
inc
mov
clc
inc
mov
adc
jmp
or
nopl
pmaxsw
in
js
cmp
fwait
pusha
cltd
push
adcl
enter
test
les
mov
adc
sbb
fistps
jbe
and
cmpsb
lock
lods
mov
out
inc
inc
jnp
decb
jae
lahf
sbb
ja
push
lods
cmpsb
out
xchg
or
inc
hlt
and
cmpsl
loope
mov
ret
scas
push
movsl
dec
nop
mov
arpl
xchg
push
lea
out
mov
cmc
cld
in
mov
mov
inc
shrl
test
mov
cmp
test
mov
scas
inc
orl
jo
xor
rolb
pop
insb
out
pop
jg
sub
xchg
iret
lcall
pop
pop
aam
out
daa
pushf
mov
pop
std
insb
js
sub
dec
push
mov
cmpsb
xor
pop
sbb
push
addr16
push
int3
push
insb
stos
mov
out
pop
rclb
xchg
cs
cmp
cmc
dec
ljmp
dec
mov
mov
pop
dec
lds
jne
lods
adc
incb
roll
inc
outsl
sbb
mul
ljmp
rcl
pop
push
inc
mov
xchg
cmovno
jmp
push
daa
xor
scas
or
fs
pop
dec
and
push
push
fcoml
ss
or
jl
and
mov
test
cmc
push
jge
sti
test
les
lods
or
in
sbb
scas
push
rclb
cs
cld
jno
inc
pusha
pusha
into
jbe
dec
cmpsl
or
mov
gs
int
and
mov
jb
mov
push
je
inc
and
fcoml
pop
out
sahf
movsl
shlb
sub
addr16
into
jmp
out
cwtl
out
push
or
dec
outsb
and
repnz
and
insl
lods
ficomps
mov
pop
bound
movsb
loop
orl
sub
adc
stos
and
test
lods
mov
jb
js
xchg
out
stos
lcall
mov
lock
and
icebp
jmp
pop
xchg
jne
and
lret
clc
add
out
jl
fs
repnz
cmp
mov
mov
or
popf
nop
mov
repz
add
repnz
cmp
push
aad
enter
xchg
jne
fs
jp
aam
mov
sub
pop
bound
loop
mov
mov
sahf
jecxz
and
inc
and
push
mov
fisubrs
cli
in
mov
outsb
vpmovzxwd
test
cwtl
ja
push
orb
out
jge
jmp
add
and
sbb
mov
negb
jp
add
ja
add
jle
pop
xchg
adc
cmpsb
push
sbb
adc
and
in
fsubl
add
inc
xchg
into
dec
je
addr16
push
ja
rorb
imul
shll
push
push
inc
push
lret
out
mov
jge
mov
arpl
mov
call
jnp
sub
int
jecxz
gs
test
fistps
pushf
jecxz
mov
and
das
dec
dec
or
jae
or
insb
mov
push
cwtl
stos
xchg
stos
out
insl
push
xor
mov
int
jp
add
adc
sbb
das
inc
ret
and
dec
ja
mov
popl
pop
xchg
xchg
xlat
mov
and
gs
add
gs
mov
xchg
inc
cld
arpl
and
loop
scas
xchg
push
adc
divl
sbb
push
fdivrp
aas
xchg
imul
cmp
popf
add
and
je
fidivrs
push
pop
mov
push
mov
jmp
mov
inc
adc
insb
jb
add
xlat
xor
fs
and
mov
cltd
mov
imul
repnz
push
movsl
pop
adc
dec
jo
mov
sub
or
jmp
pop
push
cwtl
es
or
jae
shrl
sbb
adc
jp
lods
fdivrl
dec
je
push
jbe
pop
loop
mov
out
xor
dec
add
pop
jno
mov
or
xchg
jle
push
lods
pop
dec
pop
push
jmp
pusha
faddl
jbe
fsubl
xor
insl
xor
lahf
int
pop
and
cmpsb
push
hlt
xchg
adc
ja
in
lahf
mov
jg
arpl
test
out
fcompp
lods
into
pop
sarb
enter
out
imul
or
dec
mov
sub
decl
dec
negl
arpl
cli
jl
sbb
and
imul
dec
inc
xchg
sbb
mov
xor
push
ljmp
aam
enter
mov
dec
ret
mov
lret
jp
movsb
test
repz
pop
xchg
cmp
sub
es
sbb
xor
nop
movsb
dec
push
shrl
and
jnp
mov
add
das
fmuls
clc
dec
and
mov
xorb
scas
out
pop
or
sahf
insl
add
ret
mov
jne
pop
aad
fstps
mov
xor
push
pop
sub
or
aam
xchg
mov
jl
cli
inc
dec
xchg
jbe
mov
cmp
push
lret
fcoml
imul
fstps
daa
in
jg
repnz
cld
xor
cmp
pop
dec
fisubs
inc
mov
jbe
fisttpll
mov
inc
sub
mov
sub
add
pop
xchg
cmp
mov
test
repnz
push
imul
xchg
add
xor
subb
xchg
jmp
mov
lea
notl
xchg
cmp
cmpsl
adc
movsb
subb
push
cli
dec
mov
dec
xchg
or
or
inc
or
dec
jmp
arpl
fs
test
into
adc
call
movsb
or
out
or
movsb
cli
adc
rclb
sub
in
out
jae
jns
sbb
lret
push
int3
movsb
and
test
hlt
outsl
mov
lcall
or
test
pop
cmp
inc
pop
and
xchg
xorl
mov
test
stos
mov
sub
cmc
sti
out
test
loop
shll
fstl
or
add
push
mov
fdiv
and
mov
into
lret
js
sub
loope
and
push
jb
xchg
cmp
nop
add
test
or
xchg
icebp
and
ljmp
aad
loop
cmc
addr16
jne
jne
fcoml
popf
cs
add
stos
shl
fiadds
xchg
rorb
pop
setbe
cmpb
cmpsb
sbb
test
cmp
fistps
dec
scas
push
not
sub
jg
lods
sbb
mov
mov
sub
shl
cmp
jae
repz
xor
pop
cwtl
jnp
cmp
lock
inc
lock
add
inc
aas
adc
and
inc
push
jns
dec
add
frstor
pop
add
imul
pop
fstpl
dec
sub
ds
jmp
aaa
xor
or
jno
dec
lds
mov
xor
push
inc
xor
icebp
iret
inc
cmp
inc
test
stc
and
or
and
mov
inc
movsb
mov
and
hlt
cmp
std
sub
in
inc
sub
fistpl
cmp
cltd
loopne
push
mov
jle
mov
into
test
lock
xor
push
sbb
lods
and
gs
div
dec
mov
cmp
push
arpl
mov
pop
xor
pop
rclb
push
nop
movsl
fstpt
lock
in
out
inc
aas
or
lods
and
xchg
lods
inc
adc
pop
orl
cs
jle
pop
test
in
es
fildl
popf
cmp
je
xor
and
lret
ret
into
pop
add
cs
pop
pop
fs
ret
cmp
pop
xchg
pop
mov
push
outsl
inc
fbstp
jl
mov
ret
lcall
mov
push
push
jae
xor
add
std
out
jb
cmp
fistl
and
dec
stos
adc
loope
repz
or
mov
jp
xor
fsubrs
leave
jmp
cmc
cs
inc
xchg
xchg
or
fcomps
stos
mov
rorl
push
in
orl
lea
decl
cmp
push
rcr
test
jae
mov
sbb
decb
mov
mov
sbb
sub
sarb
sub
jp
cmp
orl
xor
int
dec
pop
or
add
sub
scas
in
cmpsb
les
sarl
mov
sahf
sub
repnz
test
fbld
or
mov
add
inc
inc
inc
data16
addr16
add
inc
scas
lret
dec
in
je
sti
test
pop
adc
notb
cli
mov
pop
push
arpl
cld
mov
adc
popa
cmp
mov
movsb
out
cmp
add
push
mov
inc
cltd
jmp
pushf
aaa
mov
negb
mov
fneni(8087
outsl
idivb
mov
adc
inc
loopne
push
fs
inc
cld
mov
loope
mov
jl
xchg
pop
jo
fistl
outsl
and
sahf
fcompp
jo
mov
add
jbe
enter
push
push
out
icebp
cmpl
test
cmpsb
stos
lea
jecxz
lock
lret
or
fstpt
xchg
icebp
jo
aaa
pop
dec
adc
outsb
loopne
out
call
jns
lods
jns
dec
jmp
xchg
push
sahf
pop
adc
mov
inc
pop
testl
cmp
cmpsl
pushf
or
xchg
xchg
mov
mov
jle
fcmovb
push
out
jecxz
sahf
roll
pop
sub
fidivrs
orl
mov
movl
adc
inc
cmp
icebp
mov
and
adc
push
pusha
cs
vandnpd
insb
pop
adc
pop
mov
push
xchg
fildll
xlat
adcl
popa
popf
pop
mov
mov
scas
and
cmp
mov
idivb
xorb
xor
dec
add
sbb
int3
sub
push
jb
jmp
cmp
fistpl
sub
aad
or
pop
xor
xlat
out
push
testl
mov
dec
loop
cmp
mov
jo
push
out
pushf
aaa
push
shrl
insl
out
mov
xchg
jne
xchg
cmpsl
sub
adc
sbb
js
sbb
dec
or
pop
cmp
cmp
imul
nop
dec
in
xchg
fwait
insl
dec
repz
mov
pop
fimuls
adc
jbe
arpl
cli
and
inc
mov
repnz
mov
mov
insl
sbb
popf
int3
or
sbb
mov
inc
cmp
shlb
cli
pop
loopne
int
jge
mov
movsl
mov
sarb
mov
js
xchg
ret
imul
sahf
and
dec
test
or
sub
shll
test
pushf
sbb
test
cmp
or
icebp
sub
push
clc
sub
imul
mov
push
jb
push
les
js
pmullw
jb
jo
and
and
xor
imul
cmp
aas
out
xchg
popa
jo
adc
int3
add
xchg
jecxz,pn
ret
push
mov
scas
push
pop
out
sub
cwtl
mov
inc
sub
shll
mov
shlb
adc
and
mov
aas
cltd
ds
jp
nop
push
push
pop
adc
and
pop
insl
incb
inc
or
lcall
aas
cs
test
mov
xor
cmc
test
add
sub
jp
sub
xor
popw
and
enter
adc
mov
imul
xchg
jae
out
mov
cmp
fwait
mov
icebp
cmpsl
call
ds
jmp
jg
cltd
int
mov
shll
dec
jmp
out
movsl
std
inc
inc
sahf
int
sub
std
mov
sub
lds
push
mov
enter
div
jnp
jg
inc
sub
sub
jge
dec
movsl
cmc
xor
or
aaa
push
mov
stc
sahf
cli
ljmp
jle
es
xor
xchg
push
cmpsb
fisubrl
xchg
imulb
out
dec
push
or
jae
cmp
addb
in
in
stc
sti
mov
cmp
dec
int
mov
push
mov
jns
pop
mov
stos
clc
sbb
or
sbbb
sub
cmp
popf
fstpt
pusha
push
add
sbb
mov
push
mov
ljmp
xchg
dec
dec
push
jnp
inc
xchg
add
scas
jb
dec
pop
out
push
cmp
mov
mov
test
das
jbe
in
or
mov
or
inc
adc
punpckldq
mov
rcrb
mov
outsl
dec
mov
data16
jae
xor
xchg
fwait
jo
rcrl
jmp
stos
ja
imul
lds
push
sub
dec
aas
out
shrl
mov
sbb
mov
or
sti
mov
data16
js
jle
je
push
sti
push
pusha
fwait
popf
lods
dec
loop
jb
mov
fdivrs
mov
xchg
inc
push
cmp
jmp
jno
in
idivb
adc
xor
mov
and
adc
lret
in
mov
xor
mov
jecxz
pop
test
lock
jge
popf
add
cmpsl
shl
jmp
sub
push
lret
sti
lcall
repnz
push
dec
push
dec
popa
outsl
lods
sub
sti
push
jae
pop
std
cmp
add
add
aad
push
insb
notl
aad
mov
sbb
push
adc
adc
mov
xor
shlb
mov
mov
push
popf
dec
pushf
pop
pop
fdiv
cmc
int3
nop
inc
sbb
mov
cmp
aad
nop
cmp
mov
inc
lret
fistl
aad
sahf
lret
cwtl
xchg
mov
jge
lods
testb
das
outsb
testl
jnp
jmp
and
std
inc
push
leave
sbb
mov
loop
mov
shlb
push
inc
mov
fcoms
jp
add
adc
sub
xchg
cmp
mov
testb
sub
push
je
nop
xor
push
sbbl
or
jbe
jecxz
mov
es
shrb
and
ss
push
inc
sub
cmp
push
cld
insb
in
enter
mov
aas
push
cmp
push
shlb
cmpl
xchg
mov
mov
xchg
push
mov
mov
gs
scas
adc
jb
ret
mov
push
sbb
sbb
or
xor
loop
dec
or
push
lea
jbe
mov
scas
lret
outsb
mul
push
lcall
repnz
mov
nop
icebp
cmc
sbb
pop
and
mov
xor
or
scas
popa
clc
mov
ficoml
dec
pop
dec
ficompl
xor
cmpsl
stos
cmp
test
pop
xchg
ss
pusha
pop
push
mov
loop
adc
push
mov
mov
mov
xchg
inc
mov
push
add
in
mov
xor
push
lahf
out
jno
inc
popf
jmp
bound
jns
xor
and
cltd
cld
jecxz
movsl
inc
cmpsl
aaa
mov
fdivrl
push
jns
push
dec
cmp
movsl
pushf
fsubl
mov
inc
or
ds
mov
inc
sbb
fistps
dec
pop
shr
inc
aam
and
xchg
pusha
fistl
addr16
xchg
cmp
add
push
andl
mov
pop
cli
mov
dec
ret
rorl
push
adc
jno
sbb
mov
xchg
popa
mov
sub
push
xchg
sub
pushl
xor
mov
outsb
pop
aas
aad
int
cmp
add
jl
inc
mov
mov
xchg
xor
enter
push
mov
add
cmp
jg
scas
xchg
or
aam
or
in
sub
jbe
inc
pushf
flds
pusha
lcall
mov
xchg
add
sbb
fbstp
push
mov
xchg
cwtl
test
dec
std
out
loope
mov
js
mov
out
xchg
rorb
addb
xor
xchg
jl
fdivs
jne
cmc
add
jle
xchg
fisubs
call
lret
xchg
jge
jbe
stc
in
lahf
movsb
jbe
pop
inc
stos
leave
mov
jne
mov
je
cmp
ja
lret
jnp
xchg
jo
stc
xchg
dec
lds
outsb
stos
outsl
into
xchg
call
jg
add
inc
inc
cmpsl
push
mov
out
xor
outsl
push
lahf
inc
inc
add
mov
sub
jne
add
jl
out
aad
adc
inc
mov
shl
push
mov
mov
rorb
pop
dec
mov
sub
mov
adc
imul
test
mov
mov
jmp
pusha
cs
outsl
sbb
shll
pop
call
rcll
aaa
mov
data16
je
jg
cwtl
or
mov
fsubl
add
push
outsl
and
or
jbe
xorb
sahf
or
pop
out
bound
xlat
test
dec
in
mov
lods
int3
inc
jl,pt
pop
and
mov
add
loopne
and
in
and
pop
lods
loopne
test
push
push
xchg
jle
mov
imul
xchg
ja
stos
push
in
inc
jb
mov
shlb
testb
stos
adc
pushf
xor
cmp
divb
mov
test
adc
or
pop
jne
inc
add
mov
and
je
sbb
std
push
test
ret
nop
xor
loopne
sub
in
pushf
sarb
lret
fisttps
dec
mov
test
cltd
mov
xor
jae
pop
outsl
xchg
cpuid
in
shrb
and
sahf
pop
jo
xor
inc
xchg
cmpsl
pop
mov
clc
inc
sarl
xchg
out
dec
push
out
ja
xchg
stc
xchg
outsb
jne
loop
inc
add
sahf
or
mov
lods
jb
test
or
leave
ja,pt
mov
fcmovb
js
fs
movsb
jecxz
sub
or
dec
push
mov
out
pop
inc
xchg
insl
dec
jge
cmp
inc
or
cmpsb
xchg
sti
sti
jmp
daa
fbld
dec
das
dec
inc
ret
daa
cmp
pop
mull
and
cmp
int3
dec
pusha
mov
arpl
aad
cmp
insb
and
in
push
scas
push
sbb
and
xor
push
adc
jno
push
pop
in
add
mov
cmc
hlt
sbb
sub
xchg
dec
filds
into
sub
pop
leave
xlat
push
inc
push
dec
mov
pop
push
mov
ljmp
push
fcoml
pop
or
mov
xor
fwait
sti
fidivl
fwait
cld
xchg
add
add
roll
push
mov
es
popa
and
xchg
sub
push
jbe
xchg
fstp
jno
addr16
xchg
cmp
pop
insb
sti
jne
iret
lcall
loope
or
movsb
fnsave
sub
je
jno
mov
add
fcoms
adc
dec
sbb
pop
stos
data16
stc
pop
pop
mov
mov
sbb
mov
icebp
aad
shrb
xor
aas
rcrb
js
sbb
loopne
jae
repnz
xchg
xchg
cmc
aad
gs
test
lcall
push
mov
cmp
xor
ljmp
outsb
fsubr
inc
jae
fsts
jne
je
mov
leave
outsl
sbb
ljmp
mov
pushf
outsb
sbb
pop
xorb
test
enter
cmpsl
jle
gs
rorb
mov
dec
leave
in
aam
arpl
jle
or
bound
xor
fistl
fbld
xor
out
sbb
cli
sbb
inc
jno
rcll
aam
fadd
lret
jg
jne
lds
call
imul
mov
xor
sub
lahf
imul
out
in
and
push
cmp
repz
movl
std
arpl
sar
pushf
out
filds
dec
pusha
cltd
cmc
mov
cmp
hlt
in
enter
xchg
xor
inc
add
xor
leave
sub
fildll
gs
das
mov
fimull
mov
cmpsl
cmp
cwtl
lods
jge
xchg
jnp
pop
cmp
out
lds
popa
adcl
sbb
pop
sub
pusha
push
jne
jecxz
repz
cwtl
pop
ds
sub
dec
xchg
fs
mov
subl
cltd
cmp
inc
mov
in
and
sub
leave
addr16
dec
dec
mov
fcmovbe
pop
lret
scas
xor
adc
sub
sbb
mov
adc
insl
xlat
adc
push
test
int3
mov
xor
mov
fisttpl
push
cmpl
jge
pop
adc
xorl
aaa
nop
or
pop
or
aad
cmp
push
dec
in
ja
cmp
jge
movsb
pop
inc
insl
cmp
stos
inc
sub
dec
jmp
lods
dec
fwait
adc
sti
xor
daa
jne
aas
ljmp
sub
shr
ds
mov
lods
sbb
les
mov
ljmp
in
or
ret
icebp
insb
or
lea
aaa
out
or
inc
mov
repz
xor
sti
scas
xor
fldt
mov
sahf
push
movsl
mov
sub
fwait
pop
and
xchg
push
cmc
pop
std
lcall
mov
push
clc
or
fldl2t
pop
dec
lret
ss
mov
mov
or
mov
jb
inc
xor
popa
add
adc
adc
adc
jecxz
in
xchg
nop
fstpl
sbb
leave
mov
sbb
ret
clc
xor
jmp
add
sahf
out
int
pop
xor
cmpl
adc
adc
and
out
repnz
repnz
insb
pusha
push
push
or
jns
cmp
adc
fmull
mov
fdivp
mov
shll
push
incl
push
icebp
push
and
inc
push
push
ret
jb
push
mov
popa
sbb
cmc
rcl
lds
mov
dec
inc
mov
ret
xchg
mov
sub
rolb
or
lock
sbb
aas
and
jb
jb
pop
sbb
xchg
push
in
fadds
mov
jle
sbb
pop
fwait
jns
lcall
pop
into
jl
filds
cwtl
aad
stos
and
mov
adc
out
cld
xor
ja
or
lock
loope
push
mov
mov
jae
fbstp
pop
mov
pop
xchg
mov
in
loop
ret
push
mov
repnz
mov
gs
fstpl
or
pop
int
sub
fnstcw
sbbl
jecxz
aaa
imul
cmc
sub
es
adc
cmc
mov
push
inc
xor
pop
imul
lea
loop
enter
jo
inc
mov
jns
push
mov
icebp
sbb
hlt
shl
and
jg
xor
push
js
fcmove
daa
or
je
xchg
inc
inc
popa
test
inc
jbe
movsl
rol
sub
sub
jno
test
stos
jae
mov
mov
hlt
jmp
fsubp
mov
dec
push
mov
in
mov
cmovns
lods
xor
sub
lock
pusha
into
push
enter
shr
cs
sahf
dec
xchg
fcmovnb
push
fs
loop
push
and
fwait
dec
jg
push
test
inc
adc
sbb
xor
cmp
mov
add
jb
outsb
ds
stos
add
iret
frstor
sub
pop
push
or
and
mov
jg
mov
and
jo
scas
jne
jecxz
add
fsubr
clc
cmc
ja
xchg
insb
leave
mov
in
and
dec
rorl
lods
sbb
pop
mov
subl
test
pop
in
mov
lret
lret
lea
pusha
jb
into
or
add
test
aas
jge
sbb
divl
aaa
int3
mov
add
mov
mov
addr16
inc
add
inc
ds
sbb
in
mov
call
into
adc
loope
push
sub
push
fs
jle
pop
xchg
sar
sbb
dec
mulb
cmp
jb
mov
and
mov
push
push
stos
push
cmpsl
in
sub
stc
push
fucomp
inc
mull
push
mov
mov
jae
pop
dec
sbb
mov
adc
psubq
test
xchg
aad
xchg
imul
popw
jne
sbb
mov
dec
imul
jg
sub
inc
jge
xor
jae
xchg
dec
pushf
push
mov
int3
lods
mov
cmp
testl
test
mov
fnstcw
enter
aad
je
inc
and
lahf
inc
lret
cwtl
inc
fstps
add
push
shlb
mov
or
cli
xchg
inc
dec
les
dec
ffreep
xor
stos
jne
shl
fimull
lret
cmp
add
popf
pop
add
sub
jmp
fildll
dec
fnstenv
addr16
out
rcll
and
push
lds
test
stos
xchg
pusha
pushf
cwtl
add
aaa
loopne
es
add
jno
add
jns
mov
pop
inc
mov
lcall
imulb
in
sbb
leave
iret
std
fisubs
es
xor
daa
shrb
prefetcht2
arpl
dec
inc
and
pop
mov
out
cmp
xlat
inc
xor
sahf
sar
subb
cmp
movsb
scas
adc
jge
mov
shlb
adc
insb
or
push
call
cs
xchg
fdivl
pop
mov
imul
push
loop
notl
ret
inc
xchg
aaa
cmpsb
divl
push
pop
fisubs
and
lahf
sub
pop
adc
dec
movsb
add
cmp
push
repnz
pop
jne
dec
or
ljmp
in
inc
das
cmp
or
nop
fdivr
lods
je
cmpsb
das
lock
in
in
shrl
inc
and
lahf
and
pop
ss
clc
mov
sub
ja
shrb
cmpl
pop
xchg
or
mov
int3
aaa
subb
test
lcall
adc
cmp
jo
sbb
andl
adc
pop
and
je
add
mov
push
mov
dec
jno,pt
jo
inc
aaa
stos
jne
xor
sub
xchg
jge
insl
jbe
adc
mov
icebp
outsl
adcl
ds
and
jle
inc
loop
sar
popa
hlt
or
mov
inc
push
jge
mov
in
stc
out
lods
adc
xlat
mov
push
inc
mov
je
xchg
jge
into
push
push
xchg
arpl
jae
insb
dec
jle
repnz
or
pop
pusha
in
fwait
adc
inc
inc
jle
inc
add
jecxz
or
mov
sub
inc
pop
jnp
cmp
push
jecxz
push
andb
pop
push
mov
ja
push
mov
mov
lret
jbe
sub
adc
mov
mov
sahf
cmpsl
popa
es
cmp
ficomps
scas
or
js
xchg
scas
pop
insl
add
ret
loopne
pop
sti
add
jns
movsb
fdivrp
mov
lret
or
rolb
test
or
mov
enter
in
clc
or
or
push
mov
sahf
ficompl
lret
gs
or
adc
cli
pop
adc
enter
aaa
sub
in
out
outsb
pop
jb
ret
inc
fsubrl
xchg
sbb
aaa
push
and
scas
jne
scas
test
mov
in
xor
repnz
add
lock
xor
adc
ret
es
add
subl
jbe
mov
pop
cli
xchg
imul
sti
dec
mov
pop
ret
push
pop
xor
mov
lock
pop
push
dec
ret
or
sbb
adc
in
sbb
test
push
pop
push
and
mov
shll
sbb
in
mov
pop
addr16
out
scas
and
out
jge
mov
aam
add
mov
test
mov
xchg
add
xchg
testl
in
gs
or
arpl
sub
dec
pop
addr16
sbb
fwait
pop
mov
pop
sub
rolb
mov
loope
mov
sub
inc
fldenv
xchg
outsb
aaa
stos
in
push
scas
mov
mov
test
das
cmp
mov
mov
jmp
xor
stos
xor
and
lods
adc
dec
xor
mov
movsl
jb
mov
xor
push
cs
ror
ljmp
gs
sbbb
xchg
sti
cmp
popf
xor
dec
cmpsb
incb
pop
pop
das
out
adc
jbe
imul
adc
push
pop
lds
icebp
fisubs
jle
cli
xor
cmp
dec
adcb
test
aas
sbb
mov
and
jl
aas
test
mov
pop
push
loopne
test
loopne
fstl
mov
mov
sbb
pop
orl
in
loopne
mov
xchg
or
and
leave
pop
pusha
adc
adc
rclb
xlat
lea
mov
jle
jnp
xlat
pop
icebp
shr
sub
pop
loopne
arpl
aam
test
push
ss
push
push
outsl
ss
lods
push
sub
dec
push
push
imul
mov
imul
ss
and
loop
mov
dec
outsb
push
inc
mov
int3
cmp
xorl
push
frstor
add
test
inc
mov
cmp
push
js
test
mov
cmp
push
hlt
imul
sbb
fs
stos
sbbb
sbb
mov
mov
sbb
xchg
mov
xor
dec
mov
cmpsb
sub
mov
andb
lret
sub
cli
fldenvs
fildl
jp
hlt
mov
lds
push
cli
cld
pop
and
cmp
inc
sub
mov
addb
sub
stc
in
jb
mov
add
scas
in
bound
dec
psrlq
test
pop
addr16
in
push
scas
and
mov
sub
inc
fdivrl
lcall
cmp
lahf
dec
sbb
ret
clc
add
add
inc
stos
xchg
add
push
mov
leave
sbb
adc
lret
es
scas
dec
stos
lahf
in
daa
out
sbb
inc
and
addr16
cwtl
dec
push
addr16
daa
cmp
out
jge
cmpl
push
cmpsl
fwait
lret
inc
and
scas
dec
mov
jbe
cmpsl
fincstp
std
push
rorl
sbb
add
push
in
int
push
aaa
xchg
cmp
test
mov
pop
dec
int
bound
dec
inc
xor
in
scas
xchg
fdivrl
arpl
sbb
ficompl
leave
add
add
jg
scas
inc
jns
loope
ret
cmp
add
stos
arpl
xchg
adc
cwtl
into
mov
arpl
or
pop
xchg
dec
in
sbb
push
mov
pusha
scas
xchg
mov
add
lea
inc
movsl
ja
push
sti
xor
leave
mov
loope
cld
pop
ja
mov
mov
add
inc
sbb
cmpsb
loop
fsts
lods
push
mov
sahf
inc
aas
fcmovbe
or
rcrb
push
std
loop
and
mov
cmp
repnz
xor
add
mov
shrb
xchg
pop
sbb
mov
cmp
mov
pop
das
out
outsb
jno
mov
cmp
cltd
nop
sarl
jle
inc
jo
adc
inc
stos
jle
push
cmp
outsb
xlat
cmp
jge
mov
push
test
popf
in
cmp
jb
pop
adc
subb
repnz
xchg
xor
out
adc
dec
outsb
in
lcall
sbb
mov
push
cltd
int
mov
push
xor
das
into
loop
sub
jp
mov
mov
js
test
mull
pop
outsb
dec
mov
flds
push
push
aas
sub
mov
adc
adc
adc
lods
in
mov
sub
push
pop
sub
sbb
pop
xor
jbe
push
mov
std
push
outsb
ret
repz
ja
pop
cmp
sub
rclb
int3
inc
int3
ja
jmp
scas
mov
jns
cmpsb
vmovmskps
scas
sahf
cmp
push
adc
sarl
sub
sbb
aas
test
in
pop
test
xor
adc
sub
and
adc
push
cmp
xor
in
mov
stc
dec
inc
add
hlt
arpl
gs
xchg
xor
in
jg
std
cld
mov
mov
xor
jbe
xchg
dec
ret
cmpsb
pop
adc
inc
ja
push
pop
jl
dec
jg
mov
test
arpl
cmc
jns
je
mov
out
bsf
mov
pop
into
or
pushf
sbb
test
repz
or
push
jmp
imul
cmpsb
or
adc
pushf
cmp
gs
inc
add
or
fidivrl
add
and
xchg
adc
lahf
push
mulb
cmp
jo
sbb
lea
mov
popf
fbld
cmpsb
mov
in
sbb
lahf
rol
aam
mov
sub
rdseed
sbbb
xchg
loop
mov
xchg
repz
icebp
movsl
fbstp
ss
jl
sub
iret
and
lock
setne
cmp
das
gs
ffree
call
hlt
xchg
xor
test
nop
ss
adc
or
inc
loope
outsb
or
xor
fucomip
sub
fdivrs
xchg
popa
imul
std
repz
je
sub
pop
in
std
or
sub
loope
pop
inc
sti
scas
jl
adc
mov
jl
rclb
or
add
push
js
push
jge
pop
shlb
push
add
jg
rol
pop
dec
mov
push
xchg
inc
xor
ljmp
jle
fs
shlb
test
cmp
nop
rorl
push
dec
addb
jne
xchg
repz
addr16
mov
jbe
mov
imul
mov
fnstsw
mov
cmp
mov
icebp
mov
imul
jmp
rcr
test
js
xchg
hlt
push
dec
jge
jl
mov
inc
mov
xlat
mov
pushf
insl
stc
divb
and
mov
adc
je
mov
movsl
ja
loopne
xor
xchg
pop
jnp
mov
ret
inc
push
push
stc
mov
jne
fstp
fisubl
adcw
in
nop
insl
test
jbe
test
mov
push
push
and
into
fs
mov
push
jo
or
shll
xor
push
shl
rclb
mov
popf
or
ret
xor
cmc
inc
mov
fsubl
inc
push
roll
fisubs
pop
outsb
xchg
fcoms
inc
rol
into
insb
add
inc
xor
adc
adc
cld
nop
cmpsb
mov
insl
push
pop
pop
add
cs
pop
insl
dec
xchg
into
cltd
pop
sub
mov
mov
xchg
inc
xor
sub
sub
adc
xchg
int
ficoml
and
outsl
movsl
pop
pop
imul
je
pop
xor
es
out
nop
push
jl
xor
push
mov
adc
daa
pop
push
fcomps
loope
sub
adc
mov
dec
loope
xchg
lods
adc
pop
mov
leave
dec
test
les
pop
movsl
pop
test
cmp
mov
mov
xchg
aas
addr16
fsubrp
movsb
cmpsb
or
push
mov
insb
cmp
add
cmp
xlat
sbb
stos
add
jle
movsb
imul
stos
pop
subl
icebp
cmp
out
das
adc
scas
mov
int3
sahf
push
lds
lcall
stc
jbe
jg
sti
jno
bnd
fnsave
or
sbb
les
fldl
jp
mov
out
cmp
adc
add
rcrl
loop
sub
hlt
mov
mov
es
lods
fidivs
adc
adc
push
lahf
mov
lods
test
mov
cmp
adc
js
pusha
fwait
daa
sbb
add
pop
gs
ja
xchg
cmp
push
js
mov
pop
xor
std
aas
out
mov
scas
lods
notb
ficompl
sbb
mov
sbb
lcall
stos
ret
les
in
dec
jecxz
shll
fs
mov
push
icebp
push
fmull
iret
cmpsl
push
lds
enter
fcompl
dec
in
outsb
je
pop
cmp
sar
lret
cli
xor
cli
mov
push
call
lret
xor
sbb
sbb
and
pop
dec
popa
xchg
pop
dec
jge
aaa
cmp
fdivl
movsb
out
aas
add
sti
push
pop
ret
pop
addr16
push
cmp
enter
inc
cs
stos
jbe
add
jbe
insb
int
pop
adc
inc
cmp
sbb
fdivs
push
push
jbe
out
test
xchg
xchg
je
adc
jle
es
cmpsl
push
roll
lds
stc
out
aad
lods
or
jno
je
aad
mov
adc
sub
mov
pop
sbb
mov
cmp
mov
sbb
inc
rcrb
pop
inc
xchg
sub
xchg
xor
lret
cmp
cmc
xor
inc
jp
aaa
popf
imul
cmpsl
lds
xlat
xor
cmc
jmp
and
add
or
leave
add
xor
cmc
cmp
push
xchg
loop
insb
scas
out
sbb
shlb
jmp
jp
jg
int3
clc
sub
insl
aaa
in
or
cmpsl
add
imulb
sarl
imul
roll
inc
sbb
sti
dec
das
lret
stc
in
test
std
imul
lcall
mov
and
sub
xor
mov
or
out
fistl
aas
jge
cmp
adc
mov
xor
faddl
jge
or
sbb
jbe
sub
sbb
test
fnstcw
pop
inc
xor
iret
or
and
dec
out
sub
inc
xchg
loop
orl
or
add
lock
add
subl
lcall
xorl
aam
jle
xchg
sub
adc
ror
inc
inc
dec
adc
es
xor
sub
shll
pop
aad
ja
fdivrs
jp
mov
loop
or
sbb
test
frstor
add
pop
adc
mov
loop
mov
or
and
hlt
or
mov
xchg
mov
push
sarb
int3
or
data16
shlb
js
push
xor
jle
shll
cmp
xchg
or
repnz
pushf
cmpsl
imul
sub
xchg
insl
daa
xor
mov
add
nop
lret
lcall
test
and
hlt
push
inc
cmp
roll
cmp
dec
addr16
push
pop
stc
inc
mov
out
outsb
mov
flds
xchg
sbb
rol
sbbl
push
adc
stos
xchg
lcall
push
fwait
mov
aas
lcall
or
inc
test
sbb
aaa
cld
adc
jbe
jp
ljmp
aaa
mov
mov
test
or
fxtract
movsl
sub
cli
jno
jmp
jl
out
mov
sbb
mov
jecxz
pusha
jge
jle
stc
imul
lods
push
adc
movsb
ret
jb
shll
add
mov
push
dec
icebp
subl
jnp
xorb
dec
mov
xor
push
imul
in
orl
adc
shr
dec
vpsrld
inc
repz
adc
push
push
ja
aam
loope
mov
sbb
addb
testl
shlb
push
sbb
mov
xchg
jle
adc
cmp
sub
rcrl
push
in
lock
pmulhuw
sbb
rcll
into
imul
les
inc
outsl
mov
inc
pop
adcb
cmp
cmp
repz
call
pop
inc
filds
or
mov
inc
pop
lock
pushf
scas
lret
ljmp
cs
pop
adc
pop
dec
nop
ja
cwtl
xchg
mov
xor
mov
push
push
lret
jbe
mov
cmp
fdivrs
sbb
xchg
cltd
fstps
fdivrs
mov
frstor
pop
aam
mov
jno
inc
xor
adc
aaa
mov
jbe
push
dec
jns
jmp
jns
das
pushf
test
mov
out
pop
mov
jp
and
mov
stc
gs
cmp
sbb
scas
adc
pop
mov
mov
fcompp
jne
dec
jp
shl
repz
adc
call
cmp
push
lods
adc
jle
adcl
xchg
repnz
or
lds
inc
mov
sub
je
pop
test
ret
lahf
sbbb
xchg
xchg
imul
xchg
in
mov
xchg
sub
xchg
sub
push
jmp
dec
mov
dec
dec
adc
fisttps
inc
into
sbb
cwtl
repz
cld
mov
and
incb
jb
inc
notb
scas
fwait
or
ret
int
das
sbb
sbbb
mov
jp
out
imul
sbb
adc
fsubrs
cltd
mov
sub
mov
rolb
fld
xor
mov
aas
aad
stc
out
xlat
lods
push
xchg
into
jp
imul
inc
push
popf
vorpd
roll
or
imul
mov
in
xor
repz
mov
fcoml
loope
out
pushf
insb
push
mov
arpl
xchg
sbbl
outsl
movsl
pop
push
jne
insb
jl
or
notl
pop
mov
rcll
cmc
loop
subl
aam
orb
std
add
and
movsl
sub
dec
mov
aad
sar
test
into
lcall
lods
sahf
cli
xor
out
mov
out
loope
ficoml
push
push
fidivrs
ret
xchg
cld
shrb
mov
mov
mov
inc
pop
lcall
xlat
clc
pop
add
rorb
add
cmp
aam
ss
aas
mov
or
or
das
pop
nop
lret
in
xor
mov
jg
imul
rcll
jmp
add
vmovaps
jb
pushf
xchg
clc
mov
stc
sahf
ja
mov
loopne
sub
mov
aad
cmpsl
inc
pusha
sub
daa
xor
and
sbb
and
loope
mov
adc
bound
inc
fidivs
les
add
call
jb
ret
adc
cmp
pop
not
add
jno
lea
add
cmc
mov
jg
jge
jno
imul
lret
push
mov
add
test
or
mov
ljmp
pop
mov
xchg
add
xor
adc
sarb
xchg
xor
fiadds
ja
cmc
xchg
adc
mov
jae
xchg
out
dec
imul
push
dec
shlb
imul
sahf
mov
push
inc
insb
sbb
sbb
outsb
test
and
jo
std
shlb
das
sbb
xor
cmpb
stos
jae
mov
mov
xor
lock
xchg
mov
jne
pop
je
cmp
clc
test
hlt
or
enter
lods
sbb
ljmp
sub
jg
dec
aas
hlt
mov
sbb
jle
or
mov
sub
jb
les
mov
pop
mov
mov
test
or
std
in
push
aad
stos
xor
xor
rol
out
adc
adc
and
aas
and
pop
inc
adc
sub
movb
lahf
pop
mov
add
shll
insb
rcrl
js
or
lds
jno
icebp
loope
loopne
push
out
imul
scas
rorl
mov
xchg
xchg
out
push
jmp
mov
dec
je
fsubrl
inc
mov
mov
sbb
jg
xchg
push
pop
xor
jle
mov
aad
inc
mov
xchg
mov
mov
sbb
mov
sahf
int
dec
ljmp
lea
or
xorl
jo
mov
mov
or
leave
sub
mov
jo
add
push
push
inc
sbb
es
es
daa
sub
add
pop
lret
dec
pop
cmpsb
daa
inc
or
in
fldl
lea
xor
dec
stos
testb
cmc
mov
cli
in
test
mov
in
lock
dec
cltd
mov
lea
xchg
push
cmp
mov
inc
fwait
add
adcb
mov
mov
adc
es
xchg
dec
into
jmp
sbb
and
movsb
jne
and
cmp
jmp
jl
mov
ds
dec
fninit
outsb
mov
shl
mov
mov
fisubrl
dec
repnz
dec
loopne
sarl
mov
loopne
mov
jg
push
add
pop
int
and
xchg
ss
jl
cmpsl
add
outsl
and
xchg
ljmp
add
idivl
sbb
repnz
lret
shl
sub
jg
mov
fisubrs
push
in
mov
or
leave
inc
dec
adc
push
jae
and
sub
movsl
jg
es
sbb
gs
adc
pop
lahf
xor
sub
adc
loop
push
loope
pushf
xlat
leave
lods
inc
test
push
cltd
ljmp
push
and
inc
in
inc
xor
add
jl
js
push
push
cwtl
inc
imul
xchg
push
cwtl
out
xchg
outsb
and
xchg
ss
fs
jmp
pusha
je
shll
push
adc
lock
popa
jns
scas
jae
inc
shll
push
fsubrs
mov
jmp
lahf
push
mov
call
paddq
scas
mov
test
insl
xor
xor
jecxz
outsb
je
cltd
mov
mov
pop
lcall
xchg
mov
enter
and
stos
rcrl
shrl
insl
inc
or
push
out
hlt
mov
fisubl
mov
jp
pop
testl
jno
and
addr16
jnp
inc
sub
inc
insl
xchg
hlt
inc
mov
addl
fimull
pop
sub
push
lret
adc
sarb
js
aad
xor
xor
cmp
inc
jp
or
pushf
mov
mov
mov
insb
xor
cmp
lcall
and
popf
imul
dec
jae
sub
hlt
test
int
jmp
lods
repnz
enter
or
jae
add
int
and
mov
jecxz
dec
aas
mov
shll
push
stos
sub
lahf
pop
push
xlat
sbb
fwait
mov
pop
sahf
fistps
ret
out
inc
and
xchg
or
loop
sahf
pop
sahf
mov
scas
cmp
fsubrl
mov
sbb
push
mov
sbb
mov
scas
js
inc
in
les
mov
inc
add
loope
pop
fmuls
dec
shll
sbb
pushf
cwtl
aas
mov
mull
inc
sbb
mov
fwait
mov
and
or
jmp
in
jp
push
imulb
push
nop
push
es
loop
mov
xor
inc
aad
xchg
adc
dec
cmc
js
pop
aad
mov
adc
mov
test
movsl
mov
lock
xchg
add
sets
jbe
push
xor
sbb
int
jno
ljmp
mov
cmp
test
jge
icebp
test
mov
add
push
mov
out
xchg
mov
dec
cwtl
es
loopne
mov
repz
push
or
mov
fstpt
add
std
mov
mov
inc
sbb
xchg
stos
insb
insl
add
push
stos
mov
lret
push
and
data16
mov
pop
jg
push
and
push
mov
jae
loope
jle
mov
pop
in
adc
add
inc
das
adc
test
insb
mov
dec
mov
add
cmp
adc
aas
dec
sbb
movsb
and
gs
sahf
cmp
or
jae
fistps
cmpsl
add
push
jmp
cmp
rcrl
jmp
mov
test
hlt
jb
test
pop
loopne
push
cmp
pop
int3
or
rcrl
push
ss
repnz
shl
pop
add
cmp
mov
push
cli
and
cmp
vmwrite
leave
sbbl
leave
xchg
sbb
ds
push
sar
jecxz
xchg
mov
and
movsb
stos
out
loopne
lcall
adc
mov
int
scas
sub
shlb
out
movsb
popa
push
push
frstor
and
insl
das
pushf
xchg
and
sub
jge
cmpb
pop
clc
jle
or
in
lahf
outsb
and
sti
and
lcall
mov
phaddw
leave
xchg
sbb
pop
jmp
out
scas
fisttps
mov
inc
les
push
rcll
std
mov
or
dec
rorb
xchg
and
jae
and
pusha
mov
enter
sub
test
sub
lret
jecxz
shrb
jg
lods
jns
pop
sti
xchg
lahf
mov
mov
mov
sbb
sub
xchg
hlt
fbld
add
mov
pop
sub
ds
jge
mov
or
mov
sub
add
push
xor
and
lret
mov
mov
mov
jo
call
xor
mov
xchg
scas
pusha
mov
cmpsl
cmp
subb
in
jmp
inc
stos
push
pop
ds
and
sbb
test
in
dec
push
mov
inc
ss
loope
movsl
adc
dec
fidivrs
lret
dec
jp
mov
std
dec
insb
popf
hlt
mov
fidivrl
push
push
inc
outsb
icebp
loop
gs
fs
mulb
sub
popf
in
mov
clc
mov
faddl
push
cs
xlat
lds
ret
call
cmpsl
loopne
inc
cmp
mov
add
or
ss
sub
test
cs
mov
sbb
jge
bound
and
movsl
sahf
outsb
jbe
sbb
and
int
pop
out
mov
ret
test
fwait
jae
dec
xor
in
pop
dec
jnp
jo
push
mov
ss
pop
das
mov
xor
inc
out
fldpi
mov
jns
imul
gs
data16
test
lcall
mov
add
push
lret
jg
loope
cmc
repnz
fists
ret
xor
mov
inc
jmp
scas
iret
aam
je
jno
test
fisubs
stc
es
je
push
andb
stos
pop
dec
adc
mov
push
lods
cmp
xchg
pop
push
test
sti
mov
adc
outsl
sbb
mov
jno
fiaddl
xchg
mov
in
jb
je
mov
dec
insl
addr16
lods
addr16
xor
cmc
daa
sbb
cmpsl
arpl
mov
out
lret
mov
in
pop
or
inc
adc
mov
lahf
add
add
ret
pop
or
cwtl
inc
cmp
mov
ja
dec
pop
repz
mov
xlat
int3
mov
inc
and
xor
or
xchg
insb
repz
test
add
aam
movsb
mov
aam
jo
js
xor
add
sub
mov
add
leave
xchg
lret
add
mov
dec
dec
add
mov
sub
fdivs
mov
sub
xchg
and
push
or
in
loopne
popa
or
inc
data16
mov
pop
out
loopne
dec
ret
jge
shlb
aaa
pinsrw
sbb
fstpl
pop
adc
imul
fmul
adc
repz
sub
cmpsb
mov
push
cmpsb
dec
jnp
cld
dec
aas
adc
pushf
or
dec
lods
sbb
push
add
xchg
inc
sar
add
lahf
cltd
out
sub
or
cwtl
push
jmp
or
adc
jecxz
in
inc
push
adc
sub
sbb
inc
lcall
mov
jl
xchg
jo
add
add
jl
mov
xchg
or
data16
jae
or
mov
pop
and
push
adc
dec
or
adcb
cmp
inc
sub
pop
push
fisttpll
mov
inc
test
iret
out
xor
int3
pop
push
test
mov
adc
movsb
jnp
js
aas
movsb
or
mov
inc
push
mov
insb
push
xlat
movsl
add
dec
out
test
and
je
pop
out
dec
test
or
xchg
imul
mov
or
lcall
mov
push
loopne
outsl
push
pop
mov
add
cmp
cmp
adc
pop
cld
ficompl
call
pusha
sbb
pop
jbe
add
ljmp
dec
cmp
fisubrs
leave
ret
xchg
and
pop
std
call
pop
testl
or
arpl
hlt
dec
xchg
dec
xlat
repz
push
addr16
pop
and
adc
or
out
cmp
inc
jb
xchg
pop
leave
xlat
clc
in
and
rol
mov
xchg
pop
cmpsl
pop
stos
fs
pop
iret
aam
insb
fimuls
pop
fsubrs
dec
mov
int
je
cmp
xor
daa
jecxz
cmc
shl
test
xor
sbbl
mov
and
xorb
aaa
adc
mov
in
xchg
das
dec
and
imulb
or
hlt
int3
dec
pop
outsb
jmp
imul
and
add
imul
sub
std
out
adc
jge
mov
fwait
mov
mov
pushf
add
arpl
lock
xchg
scas
leave
cmp
mov
imul
adc
add
cld
cmp
adc
clc
push
jbe
adc
xchg
jle
or
lea
jecxz
lahf
inc
pop
dec
cwtl
pop
stos
data16
jno
sbb
insl
jb
mov
aaa
mov
div
push
lds
movsb
jae
outsl
sbb
dec
mov
adc
hlt
js
cld
or
loope
and
sub
fs
loop
jl
mov
pop
push
mov
inc
add
jle
jbe
rorl
dec
in
and
rorb
push
adc
cli
dec
sub
jecxz
pop
jge
pop
inc
xchg
lods
inc
sub
aam
dec
sub
jle
xchg
divb
nop
sbb
pop
rcrl
sbb
xor
jl
js
cmp
fiaddl
adcb
ficoml
leave
cmp
mov
icebp
adc
call
dec
fidivl
mov
movsb
shr
test
bt
sbb
inc
call
aam
sarl
push
bound
stos
mov
pop
sbb
imulb
jno
into
mov
or
xchg
outsb
jge
insb
and
fnstsw
dec
mov
xchg
jmp
pop
in
push
std
aad
shlb
jb
inc
push
fs
outsl
sub
adc
mov
pop
xor
mov
jnp
jmp
int
push
cli
cwtl
jle
jo
cmpsb
stos
lret
call
jb
push
adc
pop
lock
xor
aad
adc
mov
inc
lcall
dec
mov
xchg
stos
divb
add
test
insb
xchg
ds
cmc
lea
repz
fwait
mov
xor
inc
sbb
add
hlt
loopne
cltd
sub
dec
xchg
gs
pop
mov
mov
mov
mov
or
or
shlb
jl
popa
sbb
popf
jbe
sbb
fucomp
and
and
xor
stos
jb
push
movsl
movsb
cwtl
mov
sub
stos
out
jl
or
sub
mov
inc
xor
and
xor
cmp
sti
ss
xlat
movsl
ja
leave
pop
pusha
movsb
jae
and
enter
in
xchg
out
test
aaa
in
testl
cmp
mov
mov
shlb
cmp
lds
es
repz
loope
bound
push
or
inc
gs
pop
inc
inc
cmp
inc
cmpsl
dec
fdiv
rcrb
xchg
adc
pushf
push
cmpsl
movsl
jge
dec
mov
cwtl
push
negl
fwait
gs
call
xor
inc
cmpsl
dec
inc
mov
sub
or
fcoms
pop
rcll
jecxz
pop
sbbl
inc
dec
dec
loope
adc
into
mov
or
mov
dec
fwait
insb
call
xlat
dec
add
push
ret
inc
cmp
aad
stos
rcrl
cld
xchg
ja
call
popa
and
jae
addr16
dec
adc
je
adc
data16
inc
aam
jne
mov
inc
out
adc
nop
push
leave
jmp
cmp
jbe
ret
add
imul
and
xlat
outsl
repnz
add
adc
xchg
and
push
inc
push
ret
mov
lods
jnp
lock
popa
cmp
jmp
mov
outsb
fmuls
xor
movsb
xchg
pop
mov
push
gs
pop
xchg
loop
pop
popf
cmp
pop
movsl
iret
inc
rcll
movsb
cmpsl
nop
pop
nop
adc
icebp
outsl
enter
push
stos
bound
mov
and
add
push
addr16
jecxz
in
pop
cmpsb
inc
negl
inc
push
mov
inc
cmpl
scas
fisttpl
rorb
lods
fs
sbb
dec
jecxz
sbb
cmp
mov
inc
or
mull
cs
scas
or
jg
lcall
fs
pop
icebp
xchg
mov
xor
bound
jnp
add
clc
jmp
xchg
mov
jae
cld
dec
inc
pop
push
movsb
lods
lcall
int3
or
mov
jg,pn
outsb
jae
icebp
jns
imul
lock
pushf
mov
cwtl
imul
mov
pop
add
js
jge
add
jno
push
out
das
add
xor
loop
jmp
dec
pop
andb
xor
je
pop
xor
mov
aas
mov
mov
ror
dec
jl
sub
fwait
into
aam
adc
fistl
add
pop
test
ljmp
fcomps
incl
add
adcl
outsb
add
mov
mov
push
fwait
sub
inc
cmpsl
adc
inc
mov
roll
in
insb
add
xchg
movsb
daa
xchg
imul
out
loop
xor
fbstp
mov
and
sub
dec
loopne
sub
mov
add
adc
cmp
iret
add
mov
xchg
mov
jl
out
and
add
sbbb
jle
insl
sbbl
jns
aam
push
or
dec
repnz
repnz
loopne
add
leave
imul
test
xlat
int3
sbb
jl
lea
sbb
pusha
dec
mov
add
pushf
test
movsb
mov
and
xor
cmp
fsubrl
test
jbe
icebp
or
popa
mov
cmp
dec
xorb
stos
ret
adc
mov
xchg
sub
mov
clc
shl
mov
cltd
sub
leave
in
fsubrs
jne
sbb
push
adc
mov
lahf
mov
imul
pop
pop
stos
out
movsb
sarb
int
xlat
es
aaa
cmp
add
aaa
and
jle
lcall
outsb
mov
and
cmpsl
mov
outsb
addr16
ds
pop
xchg
lret
loop
leave
cmp
orb
mov
ja
lret
stos
xor
push
iret
fwait
scas
addr16
mov
mov
adc
xchg
ret
enter
into
int
inc
dec
pop
sbb
add
das
out
jecxz,pn
jmp
repz
fdivrl
imul
fcmovb
jp
lahf
adc
push
dec
mov
repz
push
pop
push
fisttpll
or
mov
mov
sbb
aas
jae
rcrb
in
and
sarl
imul
pop
es
aam
pusha
dec
mov
mov
mov
mov
iret
fisubrs
sbb
push
das
push
cmp
dec
mov
or
lret
lahf
sbb
xor
ljmp
idivb
dec
jle
inc
mov
fld
sti
jl
hlt
pop
nop
fsubs
and
fmul
jnp
cmc
pop
sbb
and
outsl
aad
pop
ds
mov
xchg
cmpl
pusha
stos
push
imul
adc
test
push
dec
xor
mov
repnz
adc
cmp
inc
jmp
or
lea
shlb
push
lea
mov
and
out
pushf
cmc
mov
in
mov
mov
cmpb
les
jb
lock
push
jg
orb
mov
jno
sbb
gs
mov
and
cli
sub
popa
xor
add
mov
lahf
xchg
pop
in
insb
mov
cmp
call
in
test
mov
les
cltd
push
movsl
dec
xor
cmp
addr16
or
pop
pop
in
xor
roll
xor
lcall
cmpsb
mov
pop
sub
or
pushf
fldt
and
cmp
and
in
jo
push
imul
loope
mov
xorb
cli
xchg
scas
clc
adc
test
pop
jmp
cld
push
dec
cmc
sarl
sbb
mov
ja
jg
lods
or
xor
pop
mov
adc
sub
adc
lods
popa
insl
loop
sarb
pop
sbb
push
sbb
out
test
jge
cld
or
fistps
stos
jnp
cmp
test
jmp
ja
xchg
pop
jns
dec
dec
dec
fst
xor
jmp
or
pop
test
stos
xor
jo
repnz
outsl
xchg
fnsave
sti
in
sub
aam
cmp
jp
dec
and
out
add
fidivs
lcall
push
movsb
sbb
xlat
mov
sub
test
mov
jb
ret
icebp
push
repz
ljmp
out
xor
imul
dec
test
sbb
jle
mov
xchg
dec
adc
outsb
movsb
mov
xor
movsl
jae
mov
call
movsl
mov
xor
lret
lret
sub
imul
call
jb
jo
shr
fisubl
lock
jns
les
bswap
push
lods
ss
out
icebp
addr16
je
scas
xor
push
or
jecxz
pusha
leavew
xlat
inc
cmp
push
and
mov
jne
clc
jg
cltd
out
sbb
dec
pusha
data16
ljmp
iret
cmp
ss
fstpl
dec
xchg
test
arpl
subl
lret
mov
dec
push
mov
inc
xchg
or
xor
mov
dec
mov
sbb
mov
out
pusha
sbbl
sub
adc
jb
mov
mov
jns
fcoms
pop
mov
add
mov
add
jmp
in
push
das
fcomps
or
out
rorb
or
test
mov
mov
mov
movsb
sub
gs
cmpsl
sbb
call
inc
add
and
dec
jg
push
jns
xor
popf
cmpb
lea
add
test
ds
inc
dec
fdivr
rcll
sahf
mov
mov
pop
test
adc
pop
lods
adc
outsl
adc
inc
push
lret
arpl
popa
add
mov
movlps
sub
fs
in
jl
fdivrl
dec
mov
xchg
sub
xchg
jge
cmc
lahf
mov
cmpsb
xchg
bound
jp
mov
xor
jmp
mov
jl
cmpsl
or
into
fcmovnu
ljmp
stc
sbb
repz
xchg
mov
adc
les
decl
dec
xor
icebp
ret
ret
add
insb
push
xchg
sahf
mov
mov
les
popa
mov
pop
fnstcw
inc
xchg
add
mov
out
aam
pop
adc
nop
hlt
lds
mov
faddl
inc
push
sbb
movsl
ljmp
cmpsl
dec
aam
push
mov
pop
push
dec
rcrb
mov
cmc
aas
jge
push
jle
int
jmp
mov
adc
mov
sub
gs
add
adc
cmp
jns
jbe
mov
sti
add
mov
in
scas
and
repz
stos
and
mov
sub
enter
mov
adcb
pop
ds
push
dec
cmpsl
mov
outsb
inc
or
jle
xchg
add
sbb
shlb
test
addl
mov
ret
mov
and
addps
cmp
mov
insl
dec
insl
lcall
and
in
mov
gs
and
addl
outsb
xchg
mov
test
data16
out
insl
not
xorb
rcr
jp
dec
repz
aad
push
movsb
bound
dec
sbb
dec
nop
enter
mov
test
or
mov
mov
mov
xor
mov
dec
pop
loop
pop
and
inc
jo
mov
xchg
cmpsl
in
and
jno
popa
faddl
out
mov
jae
pop
mov
out
dec
fcoml
pusha
daa
scas
adc
xchg
xor
sub
xor
lret
add
mov
mov
inc
cmp
dec
idivb
fdivs
mov
push
xchg
pop
mov
push
insl
push
mov
lret
add
xchg
sbb
and
imul
xor
push
mov
sub
inc
jmp
dec
push
out
hlt
pop
jno
sub
jg
cmpsl
mov
push
mov
bound
sbb
xchg
std
and
lock
cmp
push
xchg
das
jne
lods
xlat
inc
mov
out
jmp
mov
xchg
mov
cwtl
jl
cli
push
jg
push
mov
clc
mov
mov
mov
jno
stos
mov
pop
in
andb
or
cmp
sbb
fdivs
or
inc
rorb
sbb
pop
lods
stos
dec
cmpsb
leave
data16
mov
jnp
pop
push
xor
loop
pop
mov
rcll
movsl
sub
cmpsl
out
daa
adc
cmp
pop
cmpsb
loopne
sbb
sbb
fwait
lods
jo
xlat
push
fstpl
popf
loop
add
lock
dec
aam
sub
dec
mov
mov
xor
movsb
lcall
pop
mov
stos
lock
int3
sub
mov
fwait
notb
pop
adc
ficompl
jg
cmpsl
lahf
sub
adc
das
leave
sbb
imul
out
mov
fs
sahf
icebp
lahf
aad
push
or
mov
movsl
das
lods
sbb
je
or
js
int
mov
out
bound
sti
xor
mov
pop
lods
or
subl
adc
iret
fs
mov
aaa
movsb
jbe
xchg
xor
loopne
add
pop
adc
jecxz
mov
mov
hlt
mov
cmp
pop
inc
out
add
shl
pop
cmp
dec
and
mov
in
xchg
and
jns
popf
cli
incb
dec
cwtl
loopne
add
ret
mov
addl
mov
mov
or
negl
loope
fcomps
xor
mov
cli
dec
movsb
mov
mov
mov
and
cmpl
ficompl
xor
fdivs
hlt
mov
adc
rcll
xor
inc
adcb
lods
hlt
cltd
sub
stos
aam
pop
fisubrl
or
mov
dec
adc
or
mov
nop
pop
iret
sahf
jge
imul
out
jmp
je
xor
mov
xlat
xor
push
add
and
bnd
mov
stos
stos
cmpsl
xchg
pshufw
push
pop
and
pop
stc
lcall
idiv
sbb
jg
add
jno
sbb
and
cmp
stos
and
ucomiss
icebp
cmp
lock
lods
wrmsr
std
into
lcall
fwait
lock
or
cmp
and
incb
scas
subl
xchg
lds
ss
pop
sub
popf
mov
push
jb
mov
jl
sbb
call
or
cwtl
ret
mov
mov
pop
or
mov
mov
and
sub
mov
push
push
sti
das
ja
roll
inc
mov
hlt
popf
lea
push
push
push
sahf
and
add
pop
mov
fisubrl
sbbb
aad
bound
jg
int3
aam
mov
add
sub
ret
ljmp
outsb
jae
mov
add
push
sub
jg
out
shrl
rcl
jns
push
out
lcall
and
mov
movsl
push
insl
sbb
rcll
inc
ds
pop
mov
test
fstpl
jnp
not
jnp
sub
inc
inc
jl
stos
lea
lcall
jo
jne
jo
ljmp
frstor
into
arpl
das
fwait
cmp
shld
jns
inc
in
mov
fs
repnz
inc
out
arpl
adc
fwait
or
mov
add
sbbb
ret
vrsqrtss
jo
cmpb
shrb
fnstsw
les
test
xchg
cltd
cmp
jp
sub
fdiv
mov
ds
loope
imul
je
lret
arpl
loope
and
stos
mov
ret
mov
pop
mov
loope
aas
ljmp
ja
je
mov
xor
out
out
out
sbb
lods
fiadds
and
inc
pushl
xchg
cmp
add
mov
mov
push
or
cmp
stc
xchg
sbb
cli
enter
nop
sbb
add
movsl
jne
int3
xor
jb
sbb
arpl
mov
sub
scas
ja
dec
ljmp
sbbb
rorb
add
sarl
sbb
dec
xchg
pop
leave
out
arpl
mov
sub
push
push
add
xchg
xor
xor
out
inc
or
lods
lret
push
push
aas
ffreep
bound
call
fstl
repnz
out
mov
pop
int
dec
xchg
jbe
jg
mov
rcrb
xchg
rol
hlt
sub
rclb
js
cwtl
dec
jnp
adc
insb
jp
mov
jo
in
jnp
xor
rcrl
popa
cmp
mov
shll
and
mov
lds
cmp
loop
stos
sub
rol
mov
jbe
sub
mov
ficompl
stos
pop
lahf
aaa
jmp
test
mov
pop
mov
test
dec
xchg
inc
mov
lods
stc
dec
cmp
adc
xor
dec
jecxz
call
dec
mov
aaa
jns
shlb
lcall
push
enter
call
jns
mov
aad
jmp
dec
xchg
clc
fldz
lods
shrb
xchg
hlt
sub
fdivl
xchg
aaa
pusha
imul
addr16
faddl
jmp
mov
shlb
cmc
inc
aad
aas
jno
cmp
call
pushf
inc
mov
aas
rcr
push
inc
in
fcoml
rorl
push
lret
mov
cmpsl
je
xchg
jne
mov
xchg
aad
sbb
aad
add
cmp
and
pop
fadd
inc
push
cwtl
xchg
mov
push
jnp
or
xchg
aaa
add
sub
dec
test
xor
mulb
pop
out
test
push
jge
pop
rol
sub
movsb
xor
mov
loop
loopne
pop
lcall
sarb
enter
pop
lods
dec
daa
xchg
inc
aam
pop
lods
pop
cwtl
adc
je
cmp
sub
lods
fiaddl
dec
mov
cmp
dec
or
popf
cmpsl
xchg
inc
mov
mov
jo
lock
adc
sub
pop
cmpsb
pop
jmp
outsb
loope
cs
xchg
jp
sbb
pop
cmpsb
mov
jmp
and
and
push
pushf
push
test
or
aam
iret
inc
sbb
push
mov
dec
jge
or
outsl
imul
cmp
lods
jns
aam
xchg
push
mov
dec
cwtl
sub
jnp
das
mov
cltd
jno
sbb
or
cmp
stc
ret
jne,pn
sbb
dec
push
cmp
or
dec
out
adc
xchg
add
jmp
jl
or
push
es
out
repz
xchg
lcall
fwait
jmp
fisubrs
dec
mov
xlat
mov
dec
ret
or
rcrl
es
xor
divb
insl
push
addr16
loop
or
jp
jl
sbb
sub
dec
clc
adc
std
pop
xchg
sub
pushf
add
adc
mov
sbb
jmp
outsl
aaa
adcb
cltd
pop
sub
xchg
test
lock
xor
dec
sub
jecxz
ret
test
add
pop
gs
fstl
or
lret
cmp
pop
push
mov
xor
cmp
cmc
mov
mov
push
jge
pop
ljmp
and
jo
mov
xchg
dec
lods
in
and
sub
out
mov
sbb
xchg
sahf
mov
insl
pop
in
mov
lret
popf
mov
mov
jo
inc
ljmp
rcrl
fildl
inc
cld
dec
nop
sub
jae
mull
xor
dec
pop
in
test
push
into
mov
mov
pop
xor
xor
xchg
fs
incb
aaa
and
inc
pop
mov
add
jne
pop
cs
push
mov
dec
dec
out
test
imul
xor
pop
mov
dec
divl
iret
xchg
lahf
pop
mov
ret
or
stos
das
cmp
ja
and
pop
fisubrl
push
push
push
cmp
in
fistl
rorb
adc
and
sbb
pop
outsb
movsb
and
outsb
add
mov
dec
push
xchg
mov
arpl
pshufw
jle
mov
mov
pop
aas
fiadds
mov
rcll
fs
adc
es
xchg
mov
daa
dec
or
add
push
dec
sarb
insl
mov
adc
out
dec
lods
aas
push
int
rcr
movsl
scas
push
and
sub
out
stos
jl
sub
imul
jmp
dec
test
insl
cmp
call
adc
sbb
rcrb
xor
sub
idivl
adc
lea
inc
pop
movsl
mov
popa
fdiv
mov
fsubr
loopne
or
aad
ret
in
lods
sub
adc
mulb
adc
push
sub
divps
lcall
dec
mov
mov
cmp
sub
jbe
aas
pop
adc
dec
sbb
cmp
dec
leave
cwtl
pop
das
mov
insb
mov
out
push
pop
add
cmp
repnz
mov
jle
add
inc
scas
and
dec
js
or
push
push
into
je
cmp
jo
pop
cli
jae
and
inc
or
sbb
jne
add
mov
int
movl
mov
js
xlat
movsb
pop
out
add
sub
cmp
fnsave
sbb
inc
mov
scas
add
aas
shlb
mov
test
cmpsl
jp
mov
sbb
imul
clc
adc
cmp
xchg
cmpsl
cwtl
test
jg
xchg
gs
test
lods
icebp
mov
cmp
mov
xlat
mov
inc
mov
fisttpl
out
insl
inc
sbb
lea
xor
jns
jns
popl
pop
mov
loopne
adc
scas
xchg
aam
popf
scas
aas
stc
lea
les
push
pop
addr16
lods
mov
mov
gs
mov
xor
jge
sahf
sbb
fstl
imul
xlat
iret
xor
mov
lahf
push
add
subl
adc
jge
cmc
mov
dec
jno
or
popf
movsb
cmp
je
jp
in
not
sbb
and
pop
xchg
push
push
adc
fnstenv
or
in
xchg
outsl
popf
push
loope
mov
sbb
pop
push
xchg
push
mov
sub
xchg
inc
andl
ds
cmpl
icebp
pop
push
call
outsl
movb
scas
cmp
mov
inc
repnz
push
adc
mov
inc
ret
inc
pop
insl
or
cltd
cmp
sub
dec
or
mov
pop
aas
add
mov
cmp
mov
outsb
arpl
xchg
movsl
out
popa
sub
adc
popf
imul
out
loope
in
mov
pop
jne
and
mov
mov
mov
cs
fldcw
and
mov
push
push
pusha
inc
inc
xor
inc
std
iret
in
mov
and
mov
data16
dec
les
pop
pusha
inc
gs
mov
imul
jl
aad
je
mov
out
xor
js
cmp
mov
popf
xor
cmpsl
mov
lock
aad
insb
jne
jo
inc
dec
orb
fcmovbe
pop
leave
adc
pop
jge
mov
sub
adc
inc
and
imul
mov
adc
mov
ret
pop
push
xchg
cmp
lea
inc
enter
jns
out
pop
add
mov
imul
adc
and
dec
or
and
js
ljmp
xor
mov
sahf
ja,pt
push
jl
jl
xchg
std
es
ret
xor
cltd
das
inc
mov
dec
jb
and
insb
popf
cmp
out
mov
mov
dec
dec
icebp
icebp
add
xchg
cmc
sub
mov
je
and
into
jne
loop
out
xor
push
jmp
daa
shll
xor
into
sbb
sbb
cmpsb
mov
dec
testb
pop
push
cmp
or
je
test
push
in
xor
pop
xor
out
stc
xor
xlat
push
adc
js
jbe
das
stc
outsl
out
sbb
aas
shrl
fwait
int3
cmpsb
aaa
xchg
jmp
mov
pop
mov
xchg
icebp
outsl
repz
bound
jns
adc
sbb
add
int
jbe
xchg
add
lods
fdivl
insb
xchg
scas
mov
or
cli
push
mov
mov
shr
cmp
pop
or
dec
mov
sub
add
aas
inc
sahf
out
pop
mov
pop
das
sbbb
lds
hlt
aas
pop
xchg
call
les
adc
mov
leave
insl
jb
test
lods
aam
loope
cld
mov
jl
mov
fldcw
jmp
dec
xchg
jbe
aad
icebp
push
jne
insl
or
mov
pop
sbb
mov
jno
movsl
cmp
cwtl
lahf
sbb
iret
test
cmp
xor
and
xchg
cmp
add
inc
push
mov
iret
int
fidivrl
xor
pop
lcall
cmp
idivl
loopne
aas
out
mov
mov
sbb
or
lahf
or
push
adc
outsb
adc
loopne
cmp
xor
push
xchg
cmp
xchg
int3
xor
xchg
mov
add
in
and
cmp
adc
jno
fsubl
les
adc
ds
cmpsl
sarb
divl
dec
dec
outsl
pop
addr16
leave
xchg
jle
push
fidivrs
nop
mov
xor
nopl
lret
sbb
dec
mov
fisubs
scas
xchg
cld
jb
imul
adc
sahf
mov
enter
cmp
jecxz
push
fnsave
cmp
adc
sub
sbb
mov
das
pop
mov
push
cmc
mov
and
es
sbb
adc
dec
les
jnp
jp
outsl
fimuls
sbb
adc
mov
jle
sub
insb
out
repz
xchg
lret
lahf
icebp
fstl
push
push
jmp
stos
test
scas
mov
jb
push
test
sbb
nop
popa
cmp
cmpsb
sub
fidivrl
add
jno
orl
iret
ds
add
jae
pop
jnp
jnp
push
or
inc
aad
pop
pop
jmp
scas
add
fwait
add
xchg
addr16
jae
sub
mov
xchg
loope
in
fwait
or
mov
push
lds
pop
and
or
jns
lcall
aas
lods
ss
mov
sub
shrl
sbb
mov
inc
and
sub
mov
cmp
push
adc
pusha
xchg
xor
cmp
add
loopne
jne
inc
aas
cmp
rep
adc
popf
pop
nop
jl
out
es
jmp
and
fidivs
in
mov
movsl
adc
repnz
movsl
ror
jge
rcrl
cmp
cmpsl
inc
mov
lds
lret
xor
imul
add
mov
sub
ret
mov
fadd
movsl
xor
inc
lds
dec
cli
sti
cmp
mov
pop
inc
pop
fsubs
ja
test
repnz
rol
mov
sub
xchg
add
popf
jb
sub
aas
jmp
fdivl
int3
sbb
repz
or
mov
jne
lret
and
xor
push
xchg
mov
push
xor
leave
add
mov
cmpsl
mov
mov
pop
testb
add
sub
inc
pop
scas
push
insl
or
add
push
add
adc
pop
cmpsl
inc
xchg
neg
mov
sbb
repz
mov
and
xchg
mov
sub
inc
jp
cs
pop
lods
cmc
cmc
and
stos
jbe
insb
mov
push
in
mov
sbb
adc
jae
xchg
inc
inc
rolb
mov
je
repnz
lods
shll
jecxz
stos
mov
pop
and
stos
mov
push
xchg
mov
cmp
jecxz
bound
out
mov
cmp
clc
pop
or
dec
imul
jmp
cmc
mov
fidivs
or
push
push
aaa
adc
dec
das
popf
and
jl
hlt
cmp
cmp
xchg
cs
mov
or
pop
and
dec
insl
adc
jnp
dec
leave
mov
sub
push
push
fisttpl
lods
movsb
fidivs
sbb
or
inc
mov
xchg
and
testl
xor
jmp
rorb
sbb
lods
shll
sbb
clc
sbb
lret
insl
rcll
outsl
sbb
dec
sbb
dec
and
fidivl
pop
and
test
test
push
xchg
xchg
in
hlt
xor
jne
dec
imul
out
fcompl
fld
repnz
mov
outsb
enter
xchg
ja
cmp
sbb
repnz
lcall
cltd
xchg
pop
jbe
mov
adc
mov
xor
lret
push
and
cli
aaa
sub
pop
clc
pop
inc
es
push
loopne
add
sahf
inc
fidivrs
push
fsub
out
cmp
mov
mov
mov
dec
xchg
cmc
lods
hlt
pop
jmp
je
dec
mov
es
cmpsl
mov
sar
jg
jmp
negb
sbb
push
movsl
test
in
out
xchg
inc
jb
mov
mov
jns
bound
sbb
out
push
repz
push
pop
inc
mov
xor
mov
mov
jae
or
push
nop
dec
pop
ret
jmp
inc
push
frstor
cld
mov
push
jg
sahf
sbb
pop
push
pop
jo
inc
sbb
lock
xor
sub
in
subb
mov
mov
xchg
ja
aam
test
mov
add
jbe
ss
jbe
push
xor
xor
ret
mov
sti
int3
outsb
shrb
daa
mov
lock
shl
xor
in
rcrb
outsl
daa
movsl
mov
clc
std
push
ja
mov
and
cwtl
das
xor
jmp
in
add
scas
sbb
movsb
and
jl
repz
outsl
dec
in
pop
add
ljmp
xchg
xchg
int3
sub
adc
js
shll
add
aam
jnp
mov
fildl
push
fistpl
negl
ret
push
adc
bound
ss
inc
enter
mov
cld
sbb
dec
icebp
mov
pop
sbb
or
test
jo
xchg
daa
and
ljmp
test
xor
outsb
sahf
cmp
fsubs
mov
sar
xchg
sub
out
push
out
adc
lcall
jmp
adc
fdivrs
sub
loopne
ret
repz
xor
add
rcrb
dec
nop
mov
stos
jp
out
iret
out
fistpll
sbbl
lods
shrb
loop
outsl
lret
insl
dec
enter
data16
push
adc
dec
pusha
frstor
push
xor
add
shufps
in
ret
pushf
ret
or
into
stc
rolb
sarl
lret
fiaddl
pop
jmp
pop
inc
push
sbb
push
pop
mov
and
push
jecxz
mov
push
adc
mov
shrl
mov
cmc
loopne
pushf
xchg
inc
and
jae
arpl
sbb
rol
or
push
pop
or
rol
jmp
or
mov
ja
add
add
inc
cwtl
cmp
pushf
push
lock
das
mov
gs
jno
scas
in
mov
ficoms
jns
inc
scas
dec
mulb
aad
jle
in
out
lcall
into
rcl
lods
cli
mov
leave
mov
mov
jno
mov
mov
js
or
push
aam
mov
pop
mov
xor
imul
rcll
cltd
push
xor
sub
idivb
in
xor
repnz
gs
stos
mov
jg
data16
dec
ficomps
sahf
cwtl
push
mov
dec
mov
cmp
dec
outsl
xchg
mov
pop
and
shll
xchg
mov
inc
mov
out
fcoms
test
rorl
out
mov
dec
les
icebp
xchg
aad
jmp
out
mov
or
jmp
add
pop
fucom
dec
orl
test
add
mov
xor
movsl
xchg
pop
pop
jnp
inc
dec
dec
jmp
push
sbb
pop
inc
mov
lea
and
inc
les
xchg
hlt
mov
mov
aaa
mov
sub
out
stos
and
adc
push
imul
xchg
movsbl
pop
int
shlb
mov
xchg
jbe
lds
mov
inc
inc
into
mov
jmp
jp
daa
cmp
jp
loope
lcall
test
jbe
icebp
pop
lock
fidivs
decb
fists
sub
ss
push
fidivrl
mov
rol
add
in
mov
js
mov
movsl
xchg
je,pn
mov
sbb
in
cli
movsb
add
add
xchg
pop
dec
pop
cli
jne
xor
xchg
lret
inc
out
test
mov
sub
pop
mov
mov
dec
int
inc
push
dec
inc
mov
subl
popf
negb
push
push
shrb
cltd
and
stos
jb
push
jl
push
aam
sarl
fs
pop
outsb
or
cmp
in
dec
or
jg
xchg
sub
adc
cli
xchg
sbb
lret
cli
add
nop
mov
mov
xor
fcomps
push
inc
cmp
sub
data16
lock
insl
xchg
add
lea
mov
jg
imul
fdivl
push
dec
aas
push
jae
adc
data16
sub
or
arpl
cmp
test
mov
or
aad
sbbb
incl
cmpsb
shl
in
cmp
cmp
push
bound
dec
adc
mov
push
mov
mov
jnp
out
jb
mov
repz
add
int
pop
adc
adc
jae
push
or
mov
push
fimull
fs
cmp
adc
pushf
in
leave
js
dec
imul
pop
jbe
inc
jb
popa
and
mov
aad
or
ljmp
lods
std
and
sbb
add
fimull
fldt
mov
mov
push
jnp
mov
outsb
fimull
cld
xchg
mov
bound
or
xchg
xlat
cmp
and
sbb
jmp
ja
mov
mulb
mov
int3
lahf
cld
dec
ret
jg
sub
or
cs
flds
add
jae
cmp
mov
jb
lea
int
jecxz
iret
ja
jp
in
sahf
add
lds
loop
int
iret
xchg
jle
pop
fs
push
cmp
cmp
pop
int3
imul
inc
adc
scas
mov
cmp
sbb
aaa
iret
xor
sub
pop
outsb
aam
mov
mov
xchg
adc
mov
fucompp
andl
or
cmp
jb
lods
cmpb
dec
mov
das
or
sub
or
sbb
fildl
pushf
dec
adc
cltd
notb
cmc
fsubs
loop
clc
xor
jecxz
iret
loopne
push
push
pop
inc
push
imul
mov
sbb
xchg
and
in
insl
dec
or
xor
sub
test
retw
pop
cs
xor
xor
dec
jecxz
out
sub
add
in
ja
outsb
inc
pop
mov
pop
bound
rclb
pop
jge
jge
mov
mov
or
push
xchg
jne
push
xor
cld
sbb
cld
in
add
bnd
xor
enter
sbb
dec
hlt
fld
xor
mov
test
sbb
push
cld
rcrb
adc
add
cs
xchg
push
stos
in
push
add
loopne
push
xor
sub
push
mov
inc
fldl
cmp
jecxz
pop
or
push
inc
aad
adc
mov
push
fimuls
in
jmp
out
ja
scas
sarl
incb
xor
aaa
adc
scas
inc
movsl
add
jmp
mov
lods
ffreep
nopl
mov
popf
cmp
sub
and
fiadds
mov
cmpsb
cmc
or
inc
xor
cmpb
pop
movsb
adc
insl
stc
dec
add
orb
pop
mov
mov
sbb
mov
mov
imul
sbb
jp
adc
and
push
lcall
test
ffreep
icebp
mov
push
inc
std
gs
fidivs
adc
or
bnd
xchg
inc
push
push
inc
add
pop
mov
jb
xlat
cmp
pop
outsb
pop
add
lret
mov
pop
or
out
mov
or
mov
fwait
pop
or
dec
jecxz
push
jno
shll
mov
ret
sbb
push
xchg
xor
sahf
or
xor
mov
daa
push
add
das
idiv
add
daa
mov
xchg
add
lcall
mov
cli
fildll
mov
fistpll
jno
cmp
sub
into
sub
nop
out
xor
jl
mov
insb
je
or
jne
jl
ret
push
les
int
movsl
call
adc
dec
fmull
lret
ds
mov
push
int
pushf
scas
imul
sarb
mov
sahf
lods
daa
jb
sub
add
outsb
pop
jl
adc
test
test
enter
sbb
outsb
lods
xchg
xchg
mov
pop
and
sub
fxch
adc
add
iret
xor
mov
and
orl
adc
and
pushf
pop
fwait
and
in
mov
mov
or
sub
adc
adc
xchg
xchg
adc
mov
and
jne
leave
lock
xchg
cli
mov
ret
fildll
adc
leave
mov
add
adc
mov
pushf
add
cld
xchg
lods
mov
pop
sbb
and
sbb
and
fs
mov
adc
das
js
jno
fisubs
ret
and
fcomps
inc
ds
lahf
lret
enter
inc
mov
xor
cltd
or
sbb
aam
mov
pop
and
faddl
add
mov
sub
pop
mov
mov
loopne,pn
dec
add
int3
stos
mov
popf
lret
add
in
cmpsl
out
cmp
test
test
gs
popf
fcmovne
adc
in
mov
scas
sbb
inc
pushf
lret
push
test
mov
js
xor
fisubrs
loopne
out
push
clc
cmp
dec
mov
sbb
pop
mov
out
jnp
push
xchg
xchg
mov
xchg
test
shll
test
mov
add
and
lahf
add
push
sti
or
push
gs
in
xor
mov
mov
jge
sub
fnstenv
mull
mov
iret
inc
shlb
addr16
dec
xlat
jmp
jge
stos
dec
dec
ja
mov
data16
push
mov
mov
fs
in
mov
or
xorl
test
pushf
aaa
push
jl
pop
sbb
ret
insl
sbb
je
out
inc
sti
inc
xor
jo
mov
inc
xchg
aas
outsl
dec
stos
xchg
mov
in
dec
jle
mull
jmp
ja
xchg
xor
cmp
cmc
divb
sub
sbb
bnd
movsb
xor
dec
fisttpl
mov
mov
lahf
addr16
cmp
clc
push
jle
pop
cmpsb
push
jg
cmpsl
xor
mov
into
mov
adc
addl
xchg
pavgw
lcall
out
mov
cmc
aam
in
or
adc
cs
or
inc
jmp
int
push
jg
fdivl
add
adc
cwtl
push
mov
push
loopne
push
dec
sahf
movsl
pop
iret
out
mov
cmp
sti
adc
inc
daa
sbb
nop
xchg
adc
jecxz
jg
xor
ds
testl
add
jge
dec
sub
mov
fcmovnu
jae
jnp
mov
mov
repz
bound
xor
shrl
iret
or
imul
testl
insl
sbb
lcall
add
cmp
loop
ds
out
js
sarb
iret
fwait
jp
xchg
lea
jb
dec
stc
in
xchg
ljmp
xchg
mov
mov
inc
imul
and
xor
push
in
incb
popa
inc
jge
cmp
cld
and
mov
mov
or
xor
cmp
out
lds
in
jae
pop
pop
data16
push
push
lret
outsl
test
push
arpl
jp
pop
push
sub
ss
lret
imul
mov
dec
js
rolb
push
movsb
clc
cmp
push
xchg
andl
sbb
lcall
mov
out
mov
pop
lret
ljmp
mov
mov
imul
xchg
xchg
lret
js
sbb
mov
cmp
or
sti
out
add
insb
fs
xor
push
jnp
mov
sti
jl
or
pop
mov
push
cs
aaa
dec
int
je
enter
lds
scas
and
cmp
arpl
pmulhuw
dec
fucomp
mov
xchg
cli
nop
or
xchg
jne
ljmp
leave
jle
repnz
iret
and
loopne
cmpsb
pop
iret
outsb
ret
fwait
out
xor
mov
inc
mov
std
cli
inc
js
lods
daa
push
ficoml
cmpsl
mov
add
jbe
data16
lock
outsb
nop
pop
add
dec
fimull
sbb
aad
mov
dec
bound
add
cmp
xlat
in
sti
inc
push
jp
dec
out
xchg
jo
push
inc
xor
mull
pop
mov
or
fsubl
push
ljmp
push
jge
fisttpl
test
mov
dec
or
scas
repnz
inc
inc
mov
mov
mov
adc
cmpsb
cli
inc
xchg
hlt
mov
jnp
nop
inc
inc
mov
cltd
push
test
int3
dec
ret
or
rcll
arpl
push
xor
cld
mov
je
inc
pushf
cs
stos
lods
pusha
mov
scas
sbb
mov
repnz
ret
jo
sti
xchg
push
dec
push
shll
dec
xlat
loopne
adc
leave
add
cmp
cmpsb
les
mov
and
sbb
push
add
rcrl
mov
outsl
push
push
inc
pop
mov
popf
fwait
pop
add
mov
push
scas
lret
lods
inc
and
lcall
ror
xlat
adc
adc
pop
fwait
mov
inc
out
jno
lcall
mov
mov
fwait
jo
mov
sbb
int3
mov
pop
or
and
in
push
out
jb,pt
int
dec
movsl
int
mov
aad
xor
scas
in
mov
adc
ret
mov
or
iret
mov
ds
or
int
ljmp
pop
pop
jo
cwtl
mov
aam
dec
mov
aaa
jne
add
mov
mov
xlat
xchg
sub
sbb
popf
out
mov
mov
jbe
push
cld
sub
sub
pop
mov
cmc
lret
sub
ret
pop
call
into
jne
scas
and
outsb
outsb
iret
mov
dec
cmc
ret
xor
jbe
cmpsb
scas
mov
lret
mov
push
xchg
mov
adc
test
ret
jmp
sbb
add
pusha
xchg
mov
data16
les
shl
lcall
imul
aam
fwait
pop
mov
movsl
in
jnp
cmp
mov
fcomip
jecxz
loope
pop
pusha
or
mov
rcr
xchg
add
mov
add
dec
mov
gs
lret
sub
sub
sbb
sub
int
cld
in
dec
test
mov
in
dec
repz
mov
ljmp
fdiv
jecxz
sbb
fs
jmp
mul
fnstcw
cld
jnp
push
fisubrs
cwtl
mov
mov
es
mov
or
or
or
aaa
jo
xchg
or
pop
imul
sti
mov
addb
dec
mov
mov
dec
jne
nop
loop
jae
dec
fiaddl
out
sahf
jnp
jo
inc
int
sbb
sbb
cmp
stos
cwtl
mov
cmp
dec
aad
addr16
loop
jne
pop
enter
test
jae
cltd
sbb
inc
mov
js
repz
aad
outsl
cmp
cmp
and
cld
addr16
push
mov
test
enter
add
arpl
aam
or
or
adc
sbb
inc
lcall
jne
jae
or
data16
cmpsb
aad
addr16
push
stos
push
test
push
push
test
andb
out
pop
ss
mov
xorb
jbe
clc
and
cmpsl
sti
dec
out
adc
loopne
cmp
inc
cld
inc
mov
cmpsl
pop
xchg
lods
pop
cltd
shrb
push
lcall
and
arpl
cmc
loope
fdivl
add
aaa
add
icebp
sub
pop
enter
adc
sub
dec
int3
dec
jno
nop
lcall
xorb
add
popa
mov
lcall
fsubrs
pop
pop
and
cmp
fisubrl
insl
adc
popa
movntq
xchg
mov
xor
leave
lcall
sub
adc
mov
in
outsl
cli
jb
outsl
rorl
jg
into
lahf
std
mov
out
jae
lods
adc
cmp
mov
clc
shr
test
dec
sti
hlt
sub
and
jae
pop
lahf
incb
and
or
jle
pusha
jmp
imul
inc
add
cmpsb
cwtl
mov
mov
sti
loop
insl
xchg
cmpsb
adc
orb
jg
imul
loopne
daa
cmp
dec
sub
jbe
sahf
push
cld
jnp
push
push
cmc
add
jl
cld
dec
insb
sbb
dec
adc
dec
xchg
xchg
insb
rcl
xor
or
adc
arpl
xlat
imul
insb
xor
das
lret
or
fistpl
fs
cmc
pop
jb
mov
inc
inc
push
sub
popf
loope
mov
adc
popf
jbe
flds
int
mov
insb
scas
inc
test
repnz
pushf
shlb
xchg
mov
sub
pop
sbb
cmpsl
pop
xlat
cltd
push
mov
push
add
sbb
pop
sub
jg
out
popf
jmp
xor
xchg
jmp
rorl
cmp
dec
ds
adc
fwait
inc
jmp
rolb
xchg
das
or
push
dec
push
sahf
mov
inc
add
sub
popa
lahf
inc
push
lret
xor
adc
je
inc
je
imul
xchg
xor
mov
insl
push
mov
jge
lret
sub
js
ret
test
test
mov
cmp
push
xor
pop
jp
lods
imul
and
das
xor
cld
decl
pop
add
add
cmc
xlat
in
jae
mov
test
dec
xor
add
jo
jne
jbe
and
mov
movsb
in
insl
dec
insb
adc
ljmp
mov
cltd
repz
push
inc
pusha
aam
push
cmp
add
sbb
push
inc
or
ficompl
inc
rorl
sbb
mov
lret
inc
adc
int
and
stos
enter
or
cmc
int
mov
xchg
sub
add
mov
mov
push
fdivl
cltd
mov
loop
xchg
jecxz
ret
outsb
add
aas
test
push
lret
outsl
dec
jmp
mov
mov
mov
lahf
in
hlt
xchg
iret
jp
cld
or
daa
sbb
mov
out
mov
add
and
int
sub
jl
idiv
sbb
push
stc
imul
fcompl
test
sti
mov
cmp
shll
fcompl
jge
mov
pop
inc
test
imul
pop
arpl
adc
das
aam
mov
rcr
mov
stos
ss
sbb
cmp
mov
and
inc
or
iret
cmp
push
adc
test
into
dec
adc
subl
dec
jmp
push
xor
jmp
test
and
add
je
lock
jno
xorl
push
mov
out
pop
addb
sub
clc
das
sub
lret
push
cmc
repnz
push
aam
xor
les
push
icebp
fnstsw
lret
push
in
and
popf
sahf
adcb
icebp
dec
std
jo
cmp
gs
inc
inc
imul
pop
js
pop
repz
js
cld
mov
jle
clc
adc
mov
xor
setnp
push
xor
in
adcl
xor
lods
adc
sbb
cmpsl
mov
test
sbb
stos
imul
push
pusha
cmp
sub
push
jge
xlat
xchg
int3
lock
sub
or
pop
in
jle
in
xor
cmc
fisttps
and
sbb
iret
add
mov
sbb
inc
pop
sub
ds
cwtl
fidivrl
push
loopne
jmp
xchg
je
jg
popa
enter
mov
jae
pop
in
sub
jg
push
jle
and
or
lahf
inc
loopne
mov
unpcklps
mov
cmc
mov
repz
lret
mov
mov
mov
fs
mov
fsubr
ficoml
test
in
push
ret
mov
nop
and
fildll
aaa
icebp
jne
mov
imul
pop
dec
sub
mov
xlat
and
sub
lock
push
scas
kmovw
add
lahf
insb
ss
lret
icebp
sti
das
fdivr
lret
jmp
dec
xchg
push
inc
popf
or
cmpsl
xchg
and
xlat
mov
add
dec
mov
es
not
fcomps
lods
push
out
sbb
cmc
inc
lea
idivb
scas
fs
mov
sub
lea
stc
xor
leave
lcall
add
testb
adcb
stos
mov
cmp
and
push
sbbb
sbb
roll
test
jge
mov
cmpsb
sub
nop
and
mov
rcll
cmp
sbb
jo
mov
sbb
cli
adc
or
add
cli
pop
jno
sub
mov
or
in
pop
jns
push
cmp
mov
lcall
sub
cmp
and
icebp
adc
test
insl
inc
add
mov
pop
dec
and
adc
inc
dec
mov
js
jmp
jno
cmp
mov
rorb
fwait
repz
mov
add
negl
mov
push
and
test
mov
pop
fildl
inc
bound
js
es
lock
das
shl
cmp
push
es
aam
add
rclb
decb
cmp
jbe
mov
push
sub
addl
addr16
loope
popa
lea
in
mov
fadds
pop
mov
fwait
outsl
pushf
loope
adcl
pop
ror
cmp
or
pop
or
lret
jle
lret
sbb
fmull
and
push
gs
jmp
test
jne
jl
arpl
sub
popa
dec
dec
push
insb
jae
and
add
shrb
cmp
sbb
pop
dec
ret
mov
lea
shl
leave
mov
push
or
out
test
sub
or
xor
push
shlb
cmp
repz
adcb
repnz
push
pushf
mov
xchg
int
xchg
gs
iret
jo
xchg
fidivrs
fimull
outsb
hlt
pop
test
inc
adc
repz
sub
mov
call
cmp
icebp
es
dec
jmp
add
dec
shl
je
pop
mov
stos
enter
je
sub
stc
sbb
jecxz
xchg
stc
and
inc
adc
mov
js
inc
cmpsl
rep
cs
pushf
jno
fsubrl
xchg
and
add
and
repz
xor
call
jae
ljmp
mov
cmc
fisubrs
xchg
gs
outsb
rcrl
or
aas
mov
fsts
pushf
dec
int3
or
xchg
sbb
mov
cmp
dec
push
test
jbe
adc
mov
fimull
push
dec
inc
mov
sub
enter
stc
xchg
fbld
aaa
lock
mov
testb
cli
sub
dec
fists
mov
ljmp
mov
inc
iret
movsl
outsb
mov
and
je
test
sub
jbe
add
and
stos
enter
fmull
lock
ffreep
sbb
dec
xchg
stos
xchg
or
jae
cmp
inc
loopne
pop
arpl
lea
xor
les
pop
hlt
and
lret
adc
jbe
mov
sbbb
negl
or
data16
lods
mov
ficomps
cltd
cmp
jno
add
push
push
push
push
ret
outsb
xor
fbld
pop
fcoml
push
push
vcmpsd
sub
pusha
iret
dec
out
movsb
in
dec
out
insb
cmp
out
add
int
inc
enter
xor
nop
enter
insl
add
push
jge
pop
jecxz
loop
cmpsl
mov
and
mov
rcrb
and
mov
outsb
pop
mov
in
mov
mov
inc
lods
jge
sub
jg
xor
push
mov
add
rcr
movsl
psllq
out
inc
insb
mov
dec
push
add
aaa
sub
mov
ja
xchg
mov
ja
ja
sbb
jle,pt
loope
imul
ljmp
mov
adc
out
lret
xor
les
mov
insl
fwait
adc
sbb
sbb
lods
inc
dec
xchg
mov
sahf
lods
dec
jbe
fisttpll
out
mov
or
clc
test
mov
leave
test
popf
mov
shll
fwait
into
loopne
sbb
ret
int
cmpsl
jno
lahf
lahf
pop
mov
in
stc
xchg
mov
lcall
rorl
int3
dec
popf
sbb
je
push
les
xchg
mov
mov
test
stc
mov
push
dec
xor
loop
std
push
addr16
push
adcb
shll
xor
xor
cmpsb
pop
sahf
or
pop
push
cmp
jne
push
or
sarl
mov
cmpsb
add
cmp
sahf
icebp
mov
xchg
push
mov
cmpsl
push
jl
mov
bound
das
mov
mov
cltd
imul
jl
icebp
inc
das
mov
cld
pushf
bnd
jmp
dec
je
jmp
out
dec
push
orb
rorb
adc
test
and
jb
xchg
in
scas
adc
push
push
jl
mov
push
in
add
pop
dec
cli
xchg
push
daa
xchg
dec
in
xor
imul
mov
cwtl
sub
fsubrl
out
xchg
out
stc
std
gs
dec
mov
sbb
es
daa
ficoms
jbe
sbb
mov
jecxz
push
push
and
cwtl
push
pop
clc
mov
or
adc
ficompl
out
cmp
jp
pop
addr16
and
das
add
pop
mov
popf
notb
pop
jne
jne
out
into
pop
dec
mov
mov
addb
jne
rorl
inc
stos
jl
in
mov
jae
xor
fildll
ret
mov
mov
mov
shl
add
ja
jo
imul
add
lock
sbbb
jmp
ds
lret
movsl
js
rcll
aaa
mov
lret
mov
mov
cmc
das
bnd
mov
cwtl
mov
push
mov
mov
xor
sub
add
adc
addl
mov
jnp
inc
mov
push
cmpsl
cmp
dec
dec
shlb
jns
adc
lds
push
cmpsb
out
dec
iret
in
mov
inc
mov
pop
cli
loopne
xchg
mov
cmpsb
mov
push
jnp
xor
mov
ds
sbb
cmpsb
or
loop
mov
pop
jo
lock
test
enter
rorl
pop
jb
jbe,pn
in
and
stos
mov
test
xor
jecxz
in
xlat
sub
adc
ss
xchg
xor
dec
aaa
inc
jecxz
cmpsl
bswap
xor
fdivr
adcb
jg
dec
mov
cli
sub
add
lcall
cmp
jecxz
out
aaa
jo
sbb
sbb
inc
out
addr16
ljmp
mov
je
ret
fdivrl
lock
decl
aam
fsubp
int3
roll
adc
dec
scas
ja
nop
jecxz
xchg
out
pop
inc
inc
push
mov
decb
in
jbe
imul
sbb
inc
jno
cs
rclb
mov
pop
mov
sub
lret
and
xchg
fmull
shlb
xlat
mov
inc
gs
mov
mov
dec
adc
push
sub
in
iret
jmp
mov
aam
cmp
rcrl
push
fwait
dec
sub
lock
cmp
xchg
pop
inc
push
mov
jno
mov
in
adc
mov
xor
jmp
shlb
jmp
cmp
cmpsl
and
xorl
aaa
stos
mov
dec
es
jge
or
sarl
hlt
nop
adc
bound
cmpsb
mov
outsb
cmp
inc
inc
jbe
xchg
pusha
fnsave
or
mov
sbb
clc
inc
mov
cmc
insl
push
or
jecxz
and
xchg
jb
xorl
les
xchg
jmp
fcoms
aam
in
sbb
roll
adc
cmp
lret
mov
pop
jae
adc
mov
insl
pusha
out
cmp
fiaddl
or
xchg
xor
push
mov
mov
or
cmp
push
and
xor
xchg
mov
mov
sub
pop
mov
dec
xor
test
sbb
fmull
inc
pop
stos
jo
cmp
cltd
mov
xlat
andb
call
das
jp
cltd
inc
test
es
mov
loope
mov
jmp
or
adc
leave
jle
cmp
cmpb
std
lods
add
push
pushf
enter
outsb
cmp
lahf
sub
jae
in
mov
repz
loop
mov
loopne
stc
xor
dec
test
dec
bound
jnp
into
daa
shufps
faddl
arpl
xchg
xchg
cltd
xor
add
cmp
push
int3
ret
push
mov
bnd
sarb
out
push
push
in
and
out
jle
cmp
push
push
xorb
jo
xchg
jb
jb
rorl
jmp
push
jbe
out
jne
jns
dec
add
andb
mov
pop
inc
loopne
mov
scas
cmpsb
iret
out
cmp
insb
fcmovb
gs
xor
cwtl
xor
mov
add
mov
inc
bound
ds
cmp
add
xlat
mov
push
out
pop
fiadds
stos
in
dec
into
ltr
loope
add
push
xchg
cmpsl
call
dec
inc
fiaddl
aad
xchg
cmpsb
pop
jp
int3
mov
aaa
lcall
pop
and
movsb
mov
lahf
xlat
sub
aaa
inc
das
or
xor
sbb
out
fcmovne
sbb
hlt
xchg
lcall
xor
ds
pop
fwait
and
mov
xchg
clc
cmpsb
push
repz
lods
cwtl
dec
dec
push
inc
or
lret
int3
jb
push
outsl
dec
je
mov
fimuls
in
dec
push
jge
adc
pop
mov
sub
les
push
push
cs
mov
repz
pop
or
fdivs
xchg
stos
pushf
or
push
adc
movsb
fs
mov
inc
cmovb
call
dec
negl
gs
xor
aad
sbb
stos
inc
push
jbe
dec
dec
movb
add
dec
jle
cmpsb
movsb
movsl
ja
and
push
inc
xchg
push
jecxz
test
pop
shrb
popa
rcrl
mov
push
les
imul
das
ja
mov
adc
test
movsl
cwtl
inc
pop
and
mov
dec
add
sub
and
mov
mov
pop
out
mov
sub
push
mov
add
mov
mov
cmp
xchg
xchg
push
ja
jg
pop
sti
jbe
xor
daa
sbb
and
add
pop
stos
inc
mov
pop
mov
push
cmpsl
cwtl
mov
addr16
stos
sub
hlt
and
js
push
je
dec
inc
test
or
fcoml
dec
insb
mov
inc
out
out
cmpb
movsb
cmp
rcll
insl
add
movsl
dec
mov
mov
dec
inc
jnp
stos
fistpl
pop
jae
mov
inc
mov
xchg
inc
jb
daa
test
test
fstpt
incl
fildll
and
xor
sbb
add
lcall
jns
fbstp
lahf
mov
adc
shld
dec
arpl
xchg
pop
popa
cmp
inc
pop
icebp
fcmove
xchg
scas
mov
ret
cmp
stc
or
jge
notb
aad
ret
dec
ud1
mov
cmp
inc
sarl
jmp
das
int3
mov
out
dec
or
int
push
stos
sbb
sti
or
adc
push
faddl
dec
add
add
inc
jp
fnstsw
ficompl
or
and
into
js
pop
jg
test
and
scas
jmp
dec
xchg
lahf
mov
mov
mov
sahf
xchg
mov
scas
push
xor
test
pop
insb
out
mov
xchg
sub
and
and
cmp
int3
lods
pop
ljmp
cmp
incb
es
es
jne
push
xchg
xor
lds
cs
cmc
lret
xor
adc
dec
sbb
mov
cld
inc
dec
inc
cmpsb
push
frstor
lea
fisubs
fs
in
aam
sbb
cmp
icebp
push
filds
es
mov
jbe
cmp
stc
stos
or
popa
dec
add
and
lods
mov
xchg
ljmp
cli
xor
fmulp
adc
adc
add
xorb
pop
and
push
sbb
lods
enter
inc
add
frstor
push
test
outsb
inc
lods
ss
bound
jnp
xor
cmp
pop
in
rcll
sub
inc
in
sbb
jmp
test
pop
in
xor
mov
jnp
add
jg
pop
jecxz
xor
xchg
pop
push
andb
push
inc
lds
movsl
pop
sub
sub
fmull
rorb
and
aaa
mov
call
adc
mov
in
out
daa
and
dec
stos
stos
mov
push
cltd
add
add
bound
out
sub
pusha
inc
jg
jmp
push
jp
cmp
xor
ds
push
cmc
mov
andl
add
fcoms
cmpsl
cmp
cmpsl
and
fstps
mov
rolb
cmp
sbb
loop
jecxz
into
gs
or
test
push
cmpsb
rcrl
xor
cmpsb
fmull
lods
dec
outsl
or
dec
mov
clc
sbb
lcall
pushf
pop
movsb
aam
jl
dec
cpuid
lret
mov
pop
js
loopne
and
daa
out
adcl
pop
jb
loopne
push
rcl
jnp
push
arpl
cmp
je
rolb
fs
mov
pop
fmuls
dec
jge
ljmp
push
sub
sarb
pop
mov
xor
je
dec
sub
jno
dec
cmp
ret
inc
jae
aad
and
jecxz
jne
leave
movsb
inc
test
mov
dec
push
jmp
mov
sub
stc
int
mov
mov
sti
imul
pop
mov
cwtl
mov
in
mov
jle
js
repnz
out
fstl
addr16
xchg
pushf
fsubs
pushf
pop
dec
pop
fwait
pop
loope
dec
cli
loop
add
xor
push
mov
fucomip
cmpsb
into
xchg
cwtl
mov
insl
dec
sti
push
mov
ss
ds
inc
hlt
pop
out
push
in
cmpsl
rorl
mov
gs
mov
cli
pop
cmpsb
push
pop
xor
and
sub
pop
cmp
sub
test
in
stc
adc
add
stos
pop
repz
cld
dec
mov
clc
stos
lret
cltd
nop
movsl
jle
xchg
jno
pop
in
inc
push
add
ljmp
xchg
mov
ret
testl
mov
sub
add
mov
xor
dec
jecxz
mov
push
inc
mov
fisttpl
enter
stos
repz
pop
lods
cmp
mov
shrl
xor
fldl
test
adc
cwtl
add
jnp
sbb
pop
data16
out
mov
cltd
add
cmp
fmull
push
cmp
inc
call
and
xchg
daa
in
jmp
cmp
fldenv
mov
loopne
mov
cmp
sub
push
sbb
mov
nop
inc
icebp
inc
xchg
leave
cmp
sbb
insl
stc
mov
imul
addr16
cmp
into
jo
mov
cmp
xor
cmp
push
cwtl
mov
popa
add
dec
arpl
mov
inc
mov
std
push
cmp
dec
mov
mov
xchg
pop
or
aaa
sahf
ret
lcall
jle
data16
mov
repnz
lcall
shll
mov
icebp
cs
cmp
cmp
stos
fmuls
add
or
cli
mov
add
cmp
loopne
data16
pusha
dec
add
pop
pop
das
push
ret
mov
adc
mov
cmp
stos
mov
test
sti
xchg
movsl
cltd
cmp
aad
aas
popa
cmpl
mov
adc
mov
popf
iret
divl
loop
scas
in
push
insb
movsb
iret
jp
testl
clc
pop
repz
cmp
das
add
cmp
push
leave
aaa
lahf
mov
cmp
sub
mov
imul
mov
adc
xchg
sub
pop
fwait
dec
scas
ret
and
movsb
inc
scas
roll
pop
outsl
mov
mov
mov
ret
enter
into
mov
mov
push
cmc
and
mov
push
rcll
dec
add
nop
imul
int3
bound
dec
lea
inc
out
ret
xchg
mov
jbe
mov
scas
andl
clc
push
push
out
arpl
fstl
rcrb
js
inc
in
popa
or
xchg
ljmp
mov
push
call
cmp
stos
js
rcrb
xor
xchg
lldt
lods
ret
mov
mov
push
call
and
xor
and
mov
gs
ljmp
jmp
sub
in
dec
insl
and
scas
lock
mov
repz
pop
shlb
es
adc
mov
test
stos
add
mov
xchg
ljmp
inc
push
xor
lds
sub
add
sbb
sarb
xor
ret
push
ljmp
sbb
repnz
mov
dec
adc
daa
mov
decl
sub
cwtl
add
push
test
ret
dec
mov
int3
push
sti
adc
and
cmp
rdmsr
test
imul
xchg
and
lea
je
jle
jmp
adc
sub
in
bound
pop
pop
adc
cmc
add
or
cmovns
sub
dec
daa
es
fs
mov
xchg
inc
cltd
dec
cltd
scas
ret
add
scas
data16
sub
nop
mov
xchg
mov
inc
cmpb
mov
les
add
mov
add
dec
fcomp
int
mov
dec
roll
imulb
jmp
fsub
in
mov
inc
cmp
cld
test
xor
mov
ja
inc
loope
mov
cmpsl
addr16
inc
and
iret
arpl
movsb
pop
ret
pushf
fsubs
push
xor
imul
push
jnp
dec
or
pop
imul
xchg
adcl
pop
les
mov
pop
out
pop
mov
cltd
les
lret
pop
das
push
js
mov
cmp
mov
aaa
imul
es
sahf
push
in
pop
dec
loopne
mov
sub
daa
stos
jae
xchg
stos
out
repz
adc
lea
xchg
lock
fcmovnbe
or
aas
jmp
cmpsl
arpl
cmpsl
adc
js
stos
and
jecxz
adc
jne
inc
fisttps
dec
mov
push
outsb
mov
or
sbb
push
add
in
push
sbb
mov
dec
sti
add
pop
jmp
mov
inc
loop
push
and
xchg
jne
xchg
and
or
subl
pop
or
jecxz
out
sti
dec
jg
sbb
hlt
arpl
outsl
in
mov
cmpsl
jg
xchg
and
or
xor
inc
addl
in
sub
int3
stc
outsb
push
sbb
mov
inc
jnp
js
xchg
arpl
lods
je
mov
sbbl
int
ret
push
pop
inc
pop
mov
sub
xchg
sbbl
rcll
xor
dec
jb
add
push
inc
mov
ja
cmp
test
enter
cmpsl
jnp
fcompl
sbb
mov
jne
stos
mov
addr16
sti
inc
jmp
sbb
adc
fildl
rorl
iret
lods
or
js
fnstcw
cmp
cmpb
lcall
lods
mov
fnstenv
fs
lock
iret
call
hlt
mov
aam
pop
das
sti
das
call
push
andl
ljmp
jb
jge
test
test
jg
aad
nop
push
das
lea
add
jmp
jae
int
hlt
ficoml
aad
xlat
and
and
sti
into
push
sahf
mov
in
sbb
out
idivb
lods
push
popa
shlb
mov
cmp
jecxz
stos
jb
xchg
std
sbb
or
idiv
ret
test
pop
fnstsw
jmp
ja
movsl
mov
decb
jmp
cld
out
xor
xchg
hlt
cmp
mov
fucomi
rcrl
inc
js
nop
mov
cs
int3
shll
cmp
xchg
out
into
mov
dec
out
cld
push
mov
xchg
sar
jl
and
das
sub
mov
mov
sbb
and
inc
dec
sub
xor
test
jg
mov
jb
jmp
imul
add
arpl
mov
xlat
xchg
xor
xor
push
aad
mov
xor
mov
push
int
mov
adc
je
mov
mov
push
xchg
add
int
dec
das
or
jge
mov
aam
mov
sub
ss
dec
xor
push
shrb
pop
int
inc
mov
in
cmp
in
sbb
cmp
fcoms
pushf
dec
and
iret
aad
push
sub
comiss
loop
jge
mov
jns
sub
roll
mov
xchg
lods
arpl
push
ljmp
push
ds
jno
or
add
sbbb
stos
pop
out
call
jg
dec
sahf
mov
push
cli
sub
out
movsb
loope
mov
in
xchg
push
jge
sbb
shl
inc
xchg
jmp
out
ljmp
enter
add
pop
inc
xchg
add
jns
sub
push
enter
mov
ja
push
les
andl
sahf
or
sbb
lea
add
scas
lods
pop
xor
dec
mov
inc
scas
js
sub
and
dec
push
xor
inc
icebp
out
repz
aam
clc
repz
aad
add
mov
pop
pop
dec
jmp
stos
pop
xlat
mov
cmp
jo
ret
pop
sub
add
dec
add
mov
pusha
add
cli
aad
popf
mov
and
lahf
xchg
xchg
jnp
lods
cltd
pop
or
dec
lock
fisubl
xchg
and
add
repz
xchg
inc
pop
int3
jns
push
and
subl
repz
push
mov
push
push
jecxz
add
xor
subb
xchg
jne
subl
xchg
xlat
sub
lods
sbb
shlb
lahf
add
movsb
mov
xor
push
mov
out
js
insb
cmc
repz
xchg
cmpsb
or
out
popa
repnz
jno
pop
aas
incb
xchg
pop
add
addr16
pop
dec
adc
pop
sahf
inc
push
int3
jp
movsl
jl
xor
iret
add
lods
stos
out
xchg
aam
sbb
mov
add
addr16
fldl
and
cmc
jp
xchg
or
cmpsb
inc
sbb
out
rclb
lcall
test
call
movsb
hlt
jbe
ss
xor
in
sub
data16
push
push
adc
daa
pusha
sub
sub
xchg
cmp
cmp
jge
push
cltd
std
popa
imul
mov
add
insl
les
push
out
test
push
add
leave
push
imul
int3
movsl
out
inc
pusha
pushf
adc
pushf
es
jp
and
setno
cmpsl
mov
push
xchg
dec
inc
subb
nop
imul
fldcw
mov
mov
arpl
dec
popa
mov
cmp
mov
xchg
dec
imul
cmpsb
and
fcomip
mov
test
mov
mov
aam
add
jae
insl
or
cmp
test
lods
pop
pop
pop
out
xor
push
pop
xchg
pop
mov
gs
stc
test
jne
sti
lods
mov
fdivr
shrb
add
jecxz
fcmovnbe
push
aaa
mov
test
ret
add
dec
movsl
movsl
fsub
add
mov
inc
popa
mov
mov
ds
jo
and
pusha
test
mov
xor
add
sbb
imul
push
dec
loopne
stc
push
cmpsb
push
js
xor
jge
adc
or
jmp
sbb
and
fsubrl
out
mov
jle
scas
test
push
sbb
push
insl
and
in
cmp
adc
sbb
dec
jae
push
decl
enter
into
or
add
inc
insb
ret
es
scas
int3
rorl
loope
inc
pop
inc
cli
cmp
loopne
in
or
negl
xor
adc
mov
and
sbb
cwtl
mov
clc
or
std
loopne
sbb
and
jmp
outsl
fistpll
shlb
lea
out
pop
cld
xlat
jmp
mov
psubq
pusha
ljmp
add
push
loopne
sti
lahf
xor
sbb
or
xor
lds
in
push
scas
roll
lret
ret
mov
lea
cltd
ljmp
fadd
push
mov
dec
icebp
hlt
icebp
cmp
fistpl
push
sbb
aad
sti
in
xchg
jge
lods
mov
aad
sti
adc
sti
movb
sbb
mov
ret
cld
cli
mov
mov
ss
cld
xor
ficomps
sbb
jle
dec
xchg
xchg
enter
inc
dec
sbb
fdivs
pop
in
outsl
mov
inc
cmpsl
add
fiaddl
lret
jns
adc
cmp
and
pop
sar
int3
mov
test
xor
pop
mov
fwait
lahf
lcall
out
cmp
cmpsb
stos
mov
gs
cmc
push
in
fnsave
push
cmp
inc
jmp
pop
out
xchg
fisttpl
popa
or
test
push
stos
push
cmp
cmpxchg
bound
xor
int3
pop
idivl
addr16
add
mov
jmp
test
jns
in
add
mov
lret
add
pop
push
xchg
dec
rcr
pushf
cwtl
or
stos
test
inc
stc
data16
mov
lret
dec
shrl
mov
insl
movsb
popf
movsb
test
pop
int3
aas
sub
fistpl
add
mov
xchg
ret
mov
mov
and
dec
fsubs
es
dec
jbe
sbb
xor
sarl
mov
and
cltd
push
mov
jb
ljmp
mov
xor
xchg
outsb
or
scas
mov
into
mov
adc
cmpsb
std
xchg
cltd
or
fs
cli
jge
dec
fsubs
push
and
push
sbb
cltd
sbb
cwtl
dec
dec
test
dec
lret
xor
les
jae
mov
in
pop
cmc
xchg
arpl
push
push
or
test
fists
push
push
pop
mov
popa
mov
mov
inc
or
dec
lret
add
jle
test
mov
loopne
xor
mov
ret
or
icebp
pop
mov
xor
jle
loopne
inc
add
xchg
push
mov
jl
xorl
inc
xor
mov
test
ret
enter
insl
imul
mov
testb
rcll
sbb
inc
xor
cmp
cmp
iret
add
sbb
std
es
cmp
roll
call
repnz
mov
xor
lret
pop
shll
imul
cmpsb
jns
mov
xchg
xchg
lods
mov
mov
cmp
in
das
xor
xor
insb
and
lods
jbe
dec
dec
inc
or
imul
adc
shrb
dec
popf
leave
sbb
pop
fwait
inc
add
xor
adc
push
add
and
aam
mov
in
jmp
shlb
push
les
cmp
sti
dec
test
dec
in
cwtl
pop
bound
pusha
dec
cmpl
ret
stc
push
pushf
pop
das
mov
cmpsl
mov
inc
gs
aad
inc
loop
orl
shll
cmp
jne
out
sub
in
cmp
add
cwtl
mov
andb
sub
daa
mov
loope
fincstp
mov
xchg
sub
pop
inc
out
inc
in
xchg
subl
loopne
adc
sub
es
pop
or
cmc
faddl
ja
outsb
cli
sarb
out
out
rcll
addb
fstpt
les
rorl
cmp
add
jl
jp
ja
orb
roll
mov
inc
call
test
push
xor
cwtl
cmpsl
shrb
xor
adc
cmp
sbb
je
xchg
daa
outsl
lea
es
out
add
subl
pop
jbe
or
loope,pt
push
push
cmp
stc
out
push
jo
ljmp
push
xor
lea
les
arpl
leave
pop
fwait
stos
js
outsl
popa
mov
jge
jno
mov
mov
jge
fidivrl
mov
lcall
in
pop
sbb
insl
arpl
ret
inc
inc
pop
mov
loope
adc
cmpsl
adc
sub
xor
push
call
dec
inc
repz
popf
pop
jge
pop
pop
sahf
repz
push
nop
mov
cld
mov
mov
inc
sbb
pop
mov
or
sbb
mov
add
stos
xchg
insb
ds
addl
cmp
jg
xor
test
jnp
cmp
je
push
add
shlb
rcll
sbbb
pop
mov
and
push
adc
inc
outsl
sti
xchg
or
pop
faddl
jmp
movsl
mov
add
mov
mov
lret
inc
popa
sbb
dec
lock
mov
pop
or
mov
push
sbb
out
inc
jmp
push
test
jmp
mov
subl
add
or
cltd
or
mov
dec
xor
mov
mov
roll
icebp
ja
subl
popa
lods
sbb
pop
xchg
and
repz
arpl
inc
jne
clc
dec
loop
fldt
mov
mov
add
nop
jb
inc
mov
and
cs
add
cltd
ljmp
iret
fcoms
in
mov
jp
lods
repnz
cmp
jbe
inc
push
addb
aad
dec
inc
test
adcb
jmp
adc
push
stos
je
addr16
push
movsl
movsb
cld
fincstp
in
fwait
es
int
enter
cmc
std
inc
adc
adc
rcrl
loope
les
mov
movsl
ret
jl
cs
xor
pop
mov
cmp
mov
add
mov
jge
sub
or
je
xchg
imul
iret
stc
sahf
mov
out
pop
mov
rorb
push
xor
cltd
inc
push
fwait
test
mov
mov
sub
out
sti
xor
dec
adc
repz
pop
aas
xor
pop
push
and
arpl
mov
sub
xchg
notl
test
cmp
mov
pop
jo
mov
xchg
pusha
jge
and
mov
cltd
jp
xchg
test
dec
xchg
stc
sbb
inc
lods
push
mov
cmp
dec
mov
les
mov
test
push
mov
cmpsl
aad
pushf
lock
int3
inc
mov
push
insb
js
pop
pop
push
sahf
push
add
xchg
mov
outsl
and
sbb
stos
lock
hlt
add
or
mov
push
js
sbb
cmp
lret
ss
lahf
cmpsl
sti
or
add
faddl
enter
push
xor
mov
xchg
sub
jne
lcall
xor
shll
fiaddl
ljmp
cmp
out
or
lods
jno
jno
cs
jl
mov
sub
or
ds
ret
pop
cltd
add
push
sarb
and
pop
adc
or
jns
mov
pop
mov
jns
les
jmp
sub
cmp
push
add
pusha
inc
loopne
test
dec
cltd
lods
inc
jecxz
cwtl
test
or
loop
add
xchg
and
ret
xchg
xchg
call
push
in
dec
ss
test
or
mov
shrb
test
pop
cmp
or
inc
ja
mov
cld
inc
push
loope
into
test
outsl
cwtl
mov
js
lods
ret
ljmp
movsb
ror
mov
test
mov
gs
loope
cmp
testl
mov
imul
sub
mov
rorl
xor
mov
xchg
cmp
xchg
sbb
imulb
sub
popf
xor
arpl
sub
xlat
ljmp
inc
popf
xchg
fistl
lea
mov
in
cwtl
fs
sub
pop
push
je
or
push
fs
out
mov
xor
push
leave
mov
dec
cmpsl
mov
call
jb
jo
call
mov
pop
movsb
adc
push
cmp
xchg
es
mov
data16
push
mov
add
or
adc
scas
sbb
xchg
cwtl
push
filds
fwait
lock
dec
jecxz
cld
lods
mov
or
test
add
jnp
lahf
das
jle
mov
mov
sub
xor
and
sub
shll
push
loop
rorl
out
push
sbb
pop
jmp
test
and
daa
add
dec
jge
cmpb
fidivrs
or
les
sahf
pop
and
cmpsl
ds
mulb
dec
inc
xor
xor
xor
push
orl
ror
cmc
pop
mov
rorb
leave
cli
sbbb
fdivrp
mov
mov
cs
ror
adc
mov
sti
rol
pop
xor
jnp
xchg
push
inc
jmp
call
pusha
jns
mov
cs
mov
jno
test
push
xor
dec
or
stc
andb
push
pop
fsubl
fimull
add
pusha
ljmp
in
clc
cmp
addl
stc
pop
mov
or
pop
xor
adc
outsb
or
mov
push
outsb
enter
popf
xor
xor
dec
cmp
testl
sbb
or
inc
fwait
sbb
sbb
and
in
jno
mov
mov
sbb
sub
out
or
stos
rcll
cmp
cwtl
inc
lcall
loopne
std
idiv
xor
fcompl
and
les
nop
adc
neg
jmp
aaa
dec
inc
jo
jmp
cmp
into
ds
dec
aas
adc
mov
sti
lcall
std
lock
mov
cld
adc
sti
mov
pop
push
sbb
jb
fldl
divb
add
pop
push
or
pop
orl
add
loopne
dec
add
lods
xchg
sbb
mov
or
aam
aad
out
shrl
test
mov
inc
and
je
jmp
lret
rolb
xor
and
fnclex
sub
mov
fcmovnu
nop
xor
sub
pop
cli
rcll
push
ficompl
stos
inc
and
lret
aad
pop
shrl
cmp
rol
add
hlt
mov
std
jg
jb
shr
loope
mov
test
das
mov
mov
fsubl
bound
test
adcb
jae
and
add
jns
imul
push
filds
repnz
cltd
aam
loop
sahf
dec
push
push
and
mov
mov
push
enter
es
push
push
int3
inc
cmp
adc
sbb
adcb
push
mov
in
xor
loopne
lret
cmp
jge
dec
sbb
je
lahf
test
rcl
hlt
add
inc
fstpt
lods
test
lret
dec
test
and
in
loop
jno
mov
bswap
sbb
loopne
push
imul
scas
mov
stos
jo
rorl
jnp
adc
sub
push
movsb
stos
shlb
xchg
sbb
pop
ret
jg
lcall
cmp
xor
cmp
decl
jl
inc
cmpxchg
rolb
aas
mov
icebp
xor
imul
lods
inc
int
movsl
aad
adc
dec
insl
ljmp
mov
mov
push
rcrb
mov
xor
orl
sbb
cmpl
push
jecxz
stos
lock
push
aaa
adc
add
fmull
icebp
adc
dec
stos
movsb
ret
jnp
pop
loopne
fldt
jmp
inc
sarb
pop
mov
mov
and
jecxz
es
test
xchg
xchg
je
push
push
mov
loop
mov
push
xchg
inc
jecxz
mov
scas
loope
jb
aam
aaa
xchg
sbb
cs
sahf
or
scas
fistps
daa
in
dec
fdivs
testb
shrl
fmull
rolb
call
add
sar
test
jg
js
out
lret
xor
cmp
leave
iret
out
ret
sub
mov
rorl
xchg
jge
fisttpl
loopne
jbe
dec
aaa
lret
outsl
jmp
fadds
sbb
shlb
stc
push
jle
and
xchg
mov
outsb
movsb
adc
lret
outsl
outsb
jbe
inc
jg
test
sbb
mov
aad
mov
and
dec
sbb
int3
or
mov
sbb
jb
ficompl
mov
mov
mov
sbb
std
test
aaa
xor
sub
jp
aam
ljmp
add
push
inc
pop
lods
popf
fldl
cli
pop
cmpb
std
pop
pop
pop
jnp
and
daa
andb
hlt
arpl
lea
lods
mov
sub
pop
push
mov
mov
mov
sbb
sub
data16
ljmp
mov
out
mov
push
dec
adc
ret
mov
testl
or
inc
and
arpl
pop
rorl
xchg
hlt
out
and
jb
insl
push
and
xchg
loop
add
sbb
movsb
cmp
fwait
pop
sub
shll
lret
daa
ja
mull
jmp
lds
popa
les
push
xor
jg
dec
adcl
and
push
shrl
and
sub
sub
or
push
icebp
jb
sahf
test
xchg
mov
mov
or
sbb
lods
mov
divb
push
or
add
xchg
mov
cltd
enter
dec
call
inc
loope
add
popf
mov
and
xor
pop
mov
leave
or
jno
jne
xchg
mov
dec
inc
cmc
sub
sub
das
loopne
jl
sti
rcll
cmp
mov
mov
fwait
xchg
lea
cmp
sbb
inc
ret
mov
sbb
cltd
cli
sbb
jg
push
sti
sahf
iret
ja
mov
push
push
loop,pn
popf
iret
test
sti
loopne
and
add
daa
sub
mov
outsl
lods
iret
addr16
mov
jmp
cltd
arpl
mov
inc
add
and
xchg
mov
xor
rorb
ret
xchg
adc
movsb
insl
add
jns
push
mov
rcll
add
std
xchg
jae
xchg
movsl
and
enter
call
jbe
les
jns
cmp
repz
les
loopne
out
adc
or
adc
push
cmpsl
jns
aam
pop
dec
sbb
sub
jg
fistl
xor
push
mov
icebp
push
rcl
inc
cmp
out
rorb
data16
xchg
jbe
in
xor
cwtl
sbb
div
fisubl
stc
lods
xchg
loop
cmp
nop
lods
inc
lock
ss
ret
ss
push
xor
stos
mov
inc
scas
roll
xor
fisttpll
sbb
pusha
lds
loope
fcomps
ja
mov
mov
enter
jb
and
cmp
stos
fdivrl
popa
hlt
test
test
mov
arpl
pop
hlt
test
xchg
push
sbb
stos
and
fidivs
add
dec
or
xlat
mov
cltd
xchg
neg
js,pt
out
out
adc
sub
add
mul
mov
insb
push
sbb
pop
jo
xor
movsl
sub
ljmp
inc
mov
aaa
cltd
mov
mov
jl
jle
lret
test
scas
fdivrs
xor
mov
cmpsb
xchg
dec
adc
in
fisttpll
push
adc
stos
leave
outsl
sbb
test
push
bound
xchg
out
setnp
in
loop
adc
add
pushf
gs
dec
sbb
clc
cmp
xlat
sub
or
pop
pop
dec
cmp
loop
imul
test
cmpsb
lret
into
mov
sbb
out
mov
out
lret
fcomps
mov
call
cmc
loop
xchg
mov
std
repnz
sbb
jae
ficoms
xor
mov
hlt
insl
ja
shrd
nop
iret
inc
data16
mov
mov
adc
push
pop
sar
jmp
mov
enter
add
loop
push
dec
pusha
pop
or
ss
filds
jb
inc
cs
aam
jp
xor
inc
stos
bswap
jns
int
out
xchg
test
dec
cmp
dec
call
inc
gs
ss
stos
sub
mov
mov
xlat
rclb
dec
mov
or
faddp
rorb
popf
rorb
vmread
in
pop
insb
jl
mov
out
ljmp
std
outsl
scas
lds
mov
sub
push
loope
or
pop
xorb
fcmovu
sti
cmp
add
pop
clc
mov
in
scas
and
pop
roll
call
icebp
pop
loop
sbbb
jb
xchg
xchg
orb
repnz
jae
hlt
test
sbb
lods
icebp
enter
std
addr16
push
lahf
cmpsl
bound
adc
dec
out
and
stos
ret
sbb
fnsave
xchg
rclb
or
add
push
push
pop
lods
pop
cmp
and
push
adc
cld
movb
push
pop
test
in
sti
add
nop
bound
cmc
add
lret
mov
fucomi
dec
aam
cmpsb
dec
or
push
sbb
test
daa
xchg
movsl
or
add
lods
or
adc
cmc
lds
stos
cltd
dec
mov
aam
pop
pop
push
call
insl
fsubp
popa
pop
gs
jge
sub
sub
push
ret
int
push
fstpl
lods
out
pop
loop
fsubrl
inc
insl
sub
test
and
adc
pop
dec
mov
in
nop
pop
push
mov
int3
fistpl
popf
xchg
add
stos
xlat
inc
add
mov
aaa
inc
stos
rcrb
jle
aam
ja
loopnew
sub
xor
test
es
add
lahf
mov
xor
arpl
jmp
gs
jbe
daa
jle
jg
push
sub
mov
push
mov
xchg
sti
fidivrl
push
sbb
lret
and
pop
lret
outsb
push
js
push
pop
pop
ret
and
inc
nop
fidivs
push
cmpsb
cld
jmp
sti
mov
sub
test
bound
cmp
repnz
push
mov
enter
cmp
xor
out
fchs
pop
stos
mov
sub
fsubs
out
enter
sub
stos
into
or
and
dec
inc
add
add
xor
jne
cmp
fsubl
jge
and
mov
xchg
or
leave
lahf
add
ficompl
rol
or
xor
mov
jne
mov
jmp
test
stc
pop
es
fnstenv
lret
gs
aad
imull
out
popa
movsb
adc
xor
and
test
roll
push
scas
mulb
test
lods
fwait
xor
cmp
jns
mov
sahf
push
add
adc
mov
inc
jge
shll
sub
ss
sbb
xor
adc
leave
jle
pop
aad
mov
lss
jne
cmp
adc
mov
add
lods
lock
push
in
les
lock
push
test
cmp
sbb
jmp
lock
test
push
negb
xchg
or
adc
je
push
stc
fcomps
into
pop
sub
mov
xchg
xchg
aam
out
mov
or
outsl
in
lods
add
inc
mov
ret
cmp
icebp
addr16
lret
sbb
or
cwtl
jmp
out
mov
cmp
lcall
add
jno
js
out
jp
mov
push
push
or
addr16
in
loop
ret
sub
sarl
out
dec
call
test
adc
dec
push
adc
and
and
pop
stos
xchg
je
or
test
mov
mov
pop
inc
pop
sahf
push
hlt
fstpl
mov
sbb
pop
dec
jo
fisubl
mov
cwtl
lods
mov
fdivl
mov
ss
adc
push
jp
adc
testb
or
cmp
mov
inc
add
je
outsb
dec
xchg
jnp
into
sbb
inc
jecxz
mov
add
movl
popf
xlat
ljmp
mov
sti
pusha
leave
xchg
dec
sbb
add
lds
lea
shll
rcrb
in
dec
out
lret
pop
and
cmp
xorl
sub
pusha
mov
pop
testb
add
outsl
fldt
and
fprem
outsb
adc
push
ret
out
pop
cmp
inc
dec
mov
out
add
jae
cli
rorb
inc
arpl
popa
arpl
pushf
ja
xlat
insl
leave
mov
rcrl
xchg
push
sub
dec
jns
jp
add
loope
cmpsb
mov
sbb
scas
cld
fistpll
pop
std
ror
xlat
mov
notl
mov
scas
scas
push
call
mov
mulb
sbb
into
push
stc
cmp
negb
mov
stos
and
int3
cmpsb
cmp
int
ss
aad
out
popf
xor
sub
dec
popa
sbb
test
or
scas
jns
push
mov
cmp
xor
dec
lret
fildl
sub
fidivl
and
test
lret
popa
cmp
subl
xlat
adc
fwait
mov
sbb
xchg
xor
lcall
adc
leave
and
rolb
xchg
jge
decb
stc
xor
ja
mov
push
imul
xchg
cmpsb
pop
sbb
cmp
aaa
pop
stos
frstor
in
jg
sbb
xchg
lea
jae
and
pusha
cmp
pop
lods
out
mov
mov
jle
daa
ret
shl
fstl
shl
mov
xor
and
dec
xchg
mov
in
adc
sbbb
into
bound
out
cmc
xchg
cmpb
pop
mov
popf
sub
push
insb
mov
jb
gs
test
dec
setbe
adc
push
fs
mov
inc
xchg
jne
popa
ret
stos
sub
int
xor
sbb
push
ret
mov
in
jae
cmpsb
mov
das
nop
mov
das
dec
add
cld
test
inc
mov
pop
or
in
movsb
jo
adcl
daa
adcb
bound
out
adc
or
aad
data16
leave
push
xor
mov
jns
mov
lods
sub
xlat
icebp
jmp
sub
jecxz
ss
jecxz
cmpsl
and
enter
or
mov
outsb
cltd
push
sbb
push
repz
push
inc
inc
push
dec
mov
sti
or
int3
scas
mov
fistpl
push
mov
add
arpl
loope
lret
mov
inc
vpor
test
out
fsubs
mov
or
xchg
inc
aam
fidivs
sub
out
test
pop
je
and
mov
dec
cmp
roll
pop
inc
cmp
mov
js
pop
jae
test
out
jb
in
in
inc
movsb
fistpll
mov
jp
hlt
shll
push
mov
das
repnz
sbb
int3
dec
cli
ljmp
addr16
fimuls
sbb
xchg
add
mov
mov
lret
jl
xchg
mov
inc
xor
into
pop
sbb
or
ja
stc
sbb
jbe
push
mov
nop
dec
push
pop
ret
xor
pop
or
mov
das
adc
or
add
push
clc
or
push
or
test
xchg
or
repnz
std
jle
push
fidivs
rcrl
bound
test
and
mov
sub
cmp
ja
stos
loop
daa
lahf
mov
jne
and
mov
inc
mov
add
repz
je
dec
mov
bound
loopne
ljmp
in
mov
cmp
out
xchg
mov
xor
jb
aam
pop
inc
pop
mov
jo
adc
xor
out
jbe
xchg
shrl
mov
add
sub
cli
out
iret
fldl
pop
adc
dec
in
sbb
xor
fidivrl
add
imul
retw
adcl
or
jl
mov
test
das
cmp
popf
push
or
sahf
adc
sarb
mov
or
mov
test
inc
pushf
into
lahf
ja
stos
stos
push
and
rclb
leave
and
ss
adc
inc
cmp
add
mov
add
jns
mov
and
mov
sahf
or
loopne
jb
adc
shrb
or
xor
icebp
ja
add
into
mov
adc
inc
jle
push
mov
leave
jecxz
push
mov
out
mov
fstl
popa
aaa
sub
adc
sbb
xor
mov
fidivrs
push
lods
popf
inc
jnp
push
lds
icebp
push
jnp
rolb
sbbl
stos
xchg
mov
gs
push
das
imul
lahf
mov
push
push
les
sub
cmp
sahf
setns
xchg
jmp
jmp
subl
inc
push
push
insb
lods
fists
jb
rorb
jns
push
or
dec
inc
subb
xchg
cs
cltd
cwtl
enter
in
repz
in
idivb
or
jne
pop
rcll
xchg
push
inc
lahf
xlat
dec
or
inc
or
mov
adcl
insb
xchg
test
mov
inc
loop
xchg
hlt
int
add
xchg
mov
xchg
jb
push
es
push
cld
cmp
sbb
ss
xor
in
mov
mov
jp
into
inc
push
pop
mov
mov
mov
mov
and
cld
xchg
sub
and
les
xchg
and
xlat
jnp
mov
xchg
fs
aam
mov
lret
outsl
and
jae
sub
sbb
sub
jo
test
lods
fbld
bound
lea
xchg
test
aad
icebp
adc
in
dec
cmp
pop
int3
adc
jne
fdivr
in
out
and
push
sub
in
dec
jne
dec
out
add
insb
jp
adc
xchg
add
xchg
inc
cltd
push
mov
and
pop
mov
popf
aaa
loope
add
test
movsl
jg
adc
sbb
and
aaa
cltd
rcl
je
mull
push
ja
test
pop
test
mov
popf
es
in
mov
sbb
dec
cltd
lret
and
inc
cld
mov
lret
loopne
imul
adc
loope
sub
cmpsb
stc
jae
ror
xor
int
insl
dec
rcr
bound
inc
dec
insl
outsb
pop
das
sbb
negb
dec
push
xchg
sub
negl
jns
int3
test
nop
cmpsl
insb
bound
mov
popf
xchg
repnz
sbbl
cmpb
mov
adc
jo
inc
xchg
loop
mov
jmp
loopne
jb
pop
sub
iret
popf
lret
lea
das
add
aam
cmp
sbb
add
movsl
sub
imul
ss
hlt
xlat
cmp
lea
jo
mov
cmp
cwtl
jmp
sub
lock
xor
into
pop
fldenv
jno
cmp
jns
cmp
cmp
std
rcrl
addl
ja
pop
das
pop
cmp
fnstsw
sbb
and
outsl
lods
mov
adc
push
into
adc
aas
aam
push
shll
adc
dec
adc
push
popa
ss
lods
and
mov
or
ret
fnstcw
mov
stc
xchg
sbb
inc
jmp
js
jmp
jb
jp
add
and
sbb
aam
movb
adc
aaa
and
or
stos
jp
test
enter
stos
cs
jmp
cmc
stos
push
adc
xor
mov
push
scas
jb
mov
popa
ljmp
inc
jbe
inc
mov
movl
iret
sbb
imull
femms
fsts
jne
pop
loopne
mov
sub
sub
scas
pop
ds
enter
ret
stos
sub
sarb
sbb
sub
and
call
jae
dec
ds
rorb
mov
push
addb
xor
mov
movsl
jecxz,pt
insl
call
mov
xchg
addr16
mov
add
ret
lahf
aas
xor
sub
out
dec
sti
sub
jecxz
mov
lods
fwait
bt
adc
jno
lahf
mov
cmp
adc
push
sub
jmp
mov
andb
fsubp
cmp
cmp
mov
push
sub
xor
mov
pop
sub
mov
rcrl
mov
dec
or
mov
sbb
adc
into
jbe
or
mov
daa
xlat
xchg
fcmovu
push
sub
out
inc
mov
jnp
test
mov
and
ljmp
dec
xchg
inc
push
loope
test
mov
ds
cmp
pusha
push
test
iret
aam
fs
outsl
sarl
sbb
in
and
arpl
mov
pusha
test
jbe
ds
rorl
or
jle
vmaskmovdqu
fincstp
jp
scas
push
insl
mov
cmc
dec
pop
mov
lret
scas
jae
cmp
sub
mov
push
pop
sarb
add
int
leave
cmp
aad
mov
fists
and
mov
movsl
xchg
inc
es
mov
push
scas
mov
jg
shr
cs
mov
clc
lret
int3
lret
mov
andl
scas
rcrl
fsubrl
xorl
mov
sub
xor
cli
rorl
inc
mov
mov
cmp
mov
fbld
jg
rcl
inc
sbb
add
scas
mov
bound
jecxz
out
sti
pop
or
cwtl
hlt
push
lret
or
sbb
adc
sbb
xor
xchg
ret
cmc
jmp
mov
dec
cs
mov
negb
cmc
mov
mov
insl
pop
or
mov
add
out
fisubrl
and
clc
out
cmp
cld
sbb
mov
sub
ja
mov
cmp
sahf
ret
testb
shll
mov
mov
jno
adc
inc
fdivr
jmp
nop
es
adc
mov
test
stos
repnz
pop
cmp
cs
sahf
cs
inc
js
mov
sub
in
aaa
sbb
or
fldcw
mov
jle
push
add
jp
mov
xchg
lea
jb
xorl
incl
into
cmc
in
cs
mov
cmpsb
mov
inc
adc
sub
cld
inc
cmp
push
or
mov
dec
sbb
mov
push
push
fnstsw
or
add
out
stos
out
sbb
pop
add
jno
xchg
mov
xchg
pusha
mov
dec
insb
dec
call
xor
iret
popa
xchg
nop
imul
in
adc
cmp
sarl
nop
sub
pop
mov
xor
cmp
ljmp
shl
adc
inc
push
adc
ljmp
adc
sbb
pop
daa
fldl
fisubrl
inc
pop
outsl
push
mov
lahf
js
mov
test
inc
adc
gs
cld
xchg
mov
mov
inc
dec
xchg
sbb
dec
jmp
es
fldenv
setg
and
push
repz
mov
in
sub
sub
mov
in
stc
data16
or
popf
loopne
xchg
gs
sub
inc
scas
xchg
inc
pop
push
insb
pusha
adc
ljmp
mov
mov
cs
mov
xor
pop
out
add
xchg
and
adc
aam
or
scas
xchg
mov
sub
jp
cmp
mov
jg
jmp
xchg
std
pop
sub
xor
popa
xchg
mov
mov
sub
dec
add
xchg
pop
sub
and
cld
adc
ds
mov
stc
lea
pop
cmp
movsl
cmp
fwait
repnz
push
rol
fwait
aaa
jae
dec
out
fisttps
mov
lods
mov
add
jno
jae
mov
xor
push
sub
icebp
mov
loop
mov
push
pop
dec
repz
jbe
mov
into
mov
add
sbb
sbb
roll
and
cmpb
aaa
in
and
nop
mov
int
pop
mov
mov
call
cs
ret
sbb
fsubr
jl
lcall
push
sahf
cli
movsl
lds
addl
and
inc
inc
push
and
sbb
push
mov
jg
push
dec
pop
adc
test
movb
ret
rclb
into
mov
ret
bound
and
call
xchg
ficoms
insl
mov
or
lahf
lcall
js
dec
hlt
and
dec
test
or
dec
inc
test
test
int3
or
fists
xchg
add
jbe
cmp
daa
add
data16
cltd
push
aas
icebp
fdivl
fadds
pop
push
out
or
pop
or
sub
lds
mov
xchg
push
jp
hlt
lock
mov
cmc
mov
push
loop
jo
cmpsb
mov
dec
mov
cmpsl
push
push
or
scas
cmp
adc
int
push
mov
popf
aam
gs
pop
push
inc
add
fwait
xor
and
fimull
stos
xorb
subl
mov
xchg
rorl
and
je
dec
sub
push
mov
ja
inc
test
push
mov
mov
mov
and
out
pop
mov
jno
lds
pop
dec
fcmovbe
and
dec
and
adc
push
pop
pop
cmc
dec
iret
sahf
out
idiv
push
jmp
mov
mov
fstp
testb
sbb
fmuls
sbb
push
les
mov
cmp
fs
not
mov
push
mov
imul
adc
mov
jb
add
popf
adc
in
xchg
push
dec
inc
test
xor
dec
push
cli
adc
pavgb
mov
shl
pop
pop
push
jle
div
cli
test
jae
inc
bound
es
xchg
movsl
cmpsb
jo
jns
inc
pusha
inc
nop
ror
out
imul
xor
and
push
imul
insl
sbb
add
stos
movsl
add
xchg
incb
jb
or
test
dec
sbb
lods
and
adc
sbb
push
aad
lahf
outsb
adc
pop
popl
cmp
rcl
jb
xchg
jbe
call
jb
pop
adc
add
sub
mov
mov
xchg
and
or
dec
out
add
test
imul
addr16
scas
stos
hlt
xchg
xlat
add
aad
cmp
lods
cwtl
ljmp
cld
mov
push
stos
arpl
pop
xor
sub
or
sub
or
inc
fsts
pop
bound
xchg
push
cmpsl
les
mov
or
cmp
push
sbb
pop
xchg
or
jge
fisubs
inc
in
push
push
push
pop
pop
xlat
test
push
push
mov
jp
sbbb
jnp
or
data16
lods
mov
leave
je
hlt
subb
or
inc
cmp
adcl
sarl
rorb
in
dec
push
sbb
inc
pop
sbb
ja
aam
scas
roll
push
std
or
xor
push
sub
or
je
cltd
je
cmc
lahf
clc
ret
popf
imul
xchg
roll
imul
cli
mov
mov
test
gs
mov
sub
pop
out
cmp
dec
bound
lods
push
jp
stos
out
popa
push
fisubrl
add
cmp
xchg
in
pop
loope
xchg
dec
cwtl
ss
out
paddsw
sub
xchg
sub
or
pop
inc
adc
jl
push
cmp
cmp
cmp
fs
jbe
int
xchg
mov
loope
push
fdivs
mov
sub
jo
lea
in
and
inc
repnz
mov
jo
fcmovne
inc
fwait
xchg
cmp
popa
decb
mov
test
push
and
out
sarb
push
push
mov
and
push
nop
shld
imul
stos
sbbl
adc
xchg
xor
sub
mov
sub
dec
mov
and
and
scas
test
in
and
out
arpl
int
mov
mov
sub
ret
xor
enter
inc
adc
cmp
lret
fs
dec
mov
mov
push
out
push
insb
addl
movb
mov
adc
dec
jge
in
xchg
loopne
dec
xor
jmp
popf
icebp
ret
aas
cmp
dec
push
jle
jae
dec
xchg
mov
lea
out
iret
xchg
dec
mov
mov
mov
cmpl
shr
push
sub
das
add
mov
aas
lds
jp
ljmp
xor
pop
je
outsb
sarl
pop
and
push
and
xchg
push
ficompl
sbb
das
sbb
dec
pavgb
stc
dec
jp
cmc
int3
and
sarl
dec
mov
jb
or
or
inc
icebp
mov
popf
xchg
mov
fidivs
test
imul
insb
mov
xchg
out
jnp
jne
or
fwait
in
push
inc
pop
sbb
mov
pop
cmp
sub
cmc
push
mov
pop
or
mov
pop
and
mov
xchg
inc
inc
aam
pop
jg,pt
sbb
pop
mov
ss
lcall
sbb
imulb
dec
jbe
push
fnstcw
xlat
sub
lds
nop
ja
outsb
arpl
lret
mov
jbe
shlb
push
sub
add
add
sti
xlat
pop
push
add
arpl
sbb
imul
sub
imul
stos
add
mov
movb
jmp
jp
mov
xor
mov
sub
cmp
sbb
and
xchg
push
push
subb
adc
ljmp
push
test
sbb
pusha
sbb
sub
and
xor
pop
aaa
jg
ja
push
outsb
pop
popa
rol
mov
lcall
mov
jb
cmc
jge
rcrb
sbbl
std
lods
mov
mov
aaa
mov
ja
fistps
sub
leave
jl
jns
sub
cmp
mov
sub
addl
outsl
clc
xor
jmp
out
repz
lods
mov
dec
ja
outsb
add
mov
and
push
orl
xchg
add
out
jge
jle
jl
dec
sub
xor
mov
enter
cld
mov
hlt
inc
das
push
rcll
insl
std
inc
mov
lret
mov
loopne
push
int3
sti
pop
insl
cwtl
add
test
pop
stos
inc
mov
shrb
and
sbb
sub
adc
jp
imul
rcr
xchg
jle
int3
pop
push
mov
dec
outsl
out
mov
xchg
mov
cmp
aad
mov
jnp
rorl
mov
xor
sbb
dec
push
dec
std
mov
ret
leave
scas
aaa
mov
addr16
je
push
nop
inc
nop
push
adc
xchg
lds
inc
test
imul
or
inc
cltd
dec
bound
xchg
xchg
lea
mov
int3
mov
dec
cmp
or
lods
adc
dec
mov
shlb
mov
lods
dec
dec
pop
ds
rclb
mov
popf
push
sub
int3
add
cmp
push
jbe
shlb
mov
sub
arpl
cmp
cmp
daa
cmp
adc
xor
xor
in
mov
push
je
clc
mov
cmc
inc
sub
xchg
pop
sar
push
add
mov
push
in
loop
xchg
sar
sbbl
and
mov
fwait
clc
in
popf
mov
clc
movsb
cltd
dec
mov
or
dec
orl
mov
xor
push
lea
mov
jl
fdivrp
daa
xor
pop
mov
sub
cmpsb
dec
xlat
push
cld
xor
out
lret
xlat
cmp
mov
daa
mov
rcr
or
stos
ja
stos
pop
adc
ficoms
sbb
xchg
leave
add
gs
mov
jge
inc
pusha
and
shlb
fnstsw
int3
xor
cmp
pop
and
fstpl
jb
xor
pop
aas
vandpd
mov
or
push
popf
lret
mov
in
repnz
loop
mov
clc
dec
sbb
lock
or
mov
mov
pop
dec
pop
fisttpl
mov
ret
inc
fldt
add
xchg
jne
mov
icebp
add
sbb
mov
aam
les
push
repz
lods
int
cmp
adcb
jae
adc
into
inc
sub
add
pop
push
ret
icebp
pusha
pop
dec
sbbb
fisubrs
hlt
pop
fsubs
jle
push
out
clc
dec
or
pop
push
adcl
push
mov
dec
out
fcoms
jae
jecxz
jmp
fldcw
or
mov
push
cmp
popa
jnp
push
and
imul
fisubrs
js
xchg
cmp
je
fwait
and
in
loopne
mov
push
dec
icebp
cs
xchg
int3
mov
dec
add
mov
icebp
in
pop
sub
xchg
xor
dec
inc
int
ret
cmp
xchg
xchg
and
xchg
adc
lds
jno
ja
or
push
mov
shlb
repz
inc
ret
pop
sar
inc
daa
aaa
jne
xchg
js
cmpsb
inc
and
jmp
pop
out
out
xchg
mov
push
or
add
sub
mov
dec
imul
loopne
addb
rcrb
fldcw
pop
sbb
or
jmp
lods
shlb
aas
pushf
sbb
hlt
adc
pop
xorb
in
adcl
decb
leave
jmp
mov
inc
cmp
aas
popf
push
push
out
xchg
xor
xor
lret
xor
xchg
or
mov
cwtl
pushf
outsl
adc
mov
loopne
sar
adc
sub
mov
ss
pushf
loop
dec
stc
in
sub
mov
inc
cmp
jg
lret
nop
data16
adc
mov
adc
mov
jle
fdivs
cltd
xchg
insl
mov
pop
scas
fbld
or
pop
outsb
lret
xchg
xor
jne
mov
pop
dec
mov
aaa
ja
das
ficoms
mov
xor
mov
mov
out
mov
cs
jl
insl
jp
and
mov
push
pop
popa
imul
push
in
out
fcmovu
cmp
add
jl
dec
andl
xor
lret
int3
clc
adcl
mov
sub
test
xchg
adc
add
les
lcall
lret
or
lods
xchg
adc
push
xor
xchg
pop
addl
cld
aam
sub
mov
fdivs
loope
arpl
xor
dec
adc
inc
pop
add
repz
imul
lret
clc
jbe
xchg
outsb
cmpsb
jbe
xchg
imul
iret
adc
roll
test
stos
jo
mov
sub
inc
lcall
stos
and
xchg
sbb
repz
push
test
sub
fst
or
mov
out
addr16
dec
andb
and
aam
and
out
fcmovb
in
push
sarb
dec
rcl
lret
cmp
sbbb
mov
in
push
inc
mov
pusha
testb
rcll
sub
mov
fcompl
pop
dec
cmpsl
fstpl
add
sub
pop
stc
leave
jle
pushf
push
inc
std
mov
mov
fcomps
xor
xchg
pop
xor
movsl
movl
xlat
into
and
or
xchg
xor
mov
lahf
and
inc
es
out
jb
std
sti
inc
jge
add
mov
and
fldcw
jno
mov
add
cs
pop
mov
xor
or
adc
jb
and
clc
sub
pushf
pop
add
shl
jl
adc
jle
movsl
scas
cmp
sbb
in
test
pop
add
mov
inc
or
fbstp
inc
out
ret
push
xor
jmp
mov
cltd
mov
in
sbb
imul
inc
sbb
ds
nop
fbld
dec
inc
sbb
and
stos
loopne
add
mov
mov
cmp
jne
mov
movsl
sbb
dec
mov
and
add
mov
lahf
ljmp
mov
pop
fistl
sti
push
dec
xchg
repz
insb
cmp
pushf
mov
mov
ficoms
nop
sub
shlb
fsub
aaa
mov
cmpsb
dec
imul
push
mov
mov
in
dec
in
xor
lret
mov
inc
push
je
pop
xchg
rorb
jne
clc
adc
xor
outsl
mov
das
mov
cld
pop
cmpsb
arpl
push
push
jmp
fisttpl
out
ficoms
jecxz
cmp
push
std
dec
pop
fcmovne
inc
aad
sub
aas
or
dec
inc
mov
push
push
ds
aad
mov
iret
call
in
mov
je
sahf
and
out
sti
data16
mov
push
mov
loop
ret
mov
stos
mull
cmp
adcl
and
dec
es
adc
fwait
jns
xchg
adc
fcoml
pop
mov
ret
mov
cmpsl
pop
inc
fs
mov
inc
lds
data16
sti
pop
pop
xchg
pushf
dec
cwtl
ljmp
pop
cmp
or
imul
add
dec
cmp
sbb
test
stos
movsb
cli
mov
add
xchg
daa
fs
sbb
and
xchg
fildll
stos
test
scas
adc
in
jmp
mov
dec
pop
push
lret
ljmp
inc
mov
add
dec
rcr
andb
cmp
mov
dec
insl
mov
sbb
stc
push
aad
lcall
jmp
xchg
mov
fs
mov
mov
sub
int
stos
lds
inc
mov
cld
cmp
shll
jb
push
fldcw
lahf
jae
adc
movsl
dec
push
sub
popf
jp
sbb
lcall
pushf
ljmp
adc
dec
sub
loope
lret
cs
iret
pop
and
rcrb
mov
push
stc
lret
xchg
js
push
enter
bound
mov
outsl
or
mov
sub
lret
mov
add
stos
dec
xor
loope
sub
push
push
outsl
lods
lods
fs
mov
xchg
push
aas
xor
test
fistpl
btc
inc
jns
xor
scas
xor
dec
pop
inc
std
mov
dec
adc
leave
sarb
jle
rcr
cld
xlat
aam
es
cmpsb
mov
aad
xor
decb
loop
or
push
pop
inc
xor
cmp
add
sub
fcmove
pop
sbb
pop
orl
shlb
shlb
mov
das
mov
das
xchg
mov
lods
fwait
push
into
movsb
addr16
ss
pop
mov
jecxz
in
jge
cmpsb
aam
mov
add
setno
dec
clc
fildl
jecxz
dec
sbb
xchg
lret
push
sub
lock
daa
aad
in
insb
push
push
stos
testl
sub
and
mov
jl
jmp
cmp
cmp
xchg
cmpsl
push
mov
mov
cmp
testb
xchg
push
pop
lcall
pop
cmc
cmp
lcall
push
loopne
push
jo
jl
or
insb
and
mov
outsl
xchg
in
std
imul
jp
ret
and
gs
sarl
xchg
cmpsb
loopne
ret
xchg
fmuls
test
les
sbb
and
add
jg
xchg
sbb
add
dec
jne
mov
in
aaa
push
lea
jg
pop
push
xchg
aas
addr16
outsl
xor
in
or
aas
jo
es
pop
mov
jecxz
call
mov
sbb
or
sbb
in
movsl
pop
fildll
mov
push
sub
jne
fists
or
ds
mov
loopne
fisttps
mov
fisubrl
lea
fs
ljmp
pop
xlat
mov
dec
mov
sahf
ds
dec
int
cmc
adc
jg
pop
out
pushf
push
xlat
jl
je
or
in
ret
leave
int3
popa
mov
sbb
lahf
fs
stos
loope
xor
push
ret
int3
insl
leave
pop
mov
mov
xor
addl
fcmovnu
jmp
mov
addr16
jo
cmpsb
lcall
out
pop
jne
mov
ret
sbb
and
pop
scas
sbbl
sub
cs
jl
addr16
stc
out
imul
xchg
xchg
or
fdivrs
fnsave
adc
sbb
mov
mov
inc
cli
jecxz
shll
sbb
adc
loopne
shlb
and
adc
pop
add
lea
inc
adc
jns
sahf
lock
in
push
cmp
cs
mov
pop
lea
cmp
or
sbb
imul
outsb
mov
pop
add
std
fdivl
repnz
add
addr16
mov
fxch
aaa
js
sub
sbb
sbb
sub
hlt
js
xchg
in
je
push
adcl
aas
call
mov
adc
push
push
lods
cmp
insl
repz
dec
and
ss
sub
cwtl
ficomps
stos
out
call
jo
insl
mov
or
xor
pop
outsb
daa
push
mov
daa
jl
xchg
cmpl
xor
icebp
mov
sbb
into
mov
lock
loope
adc
xor
ljmp
leave
mov
push
mov
sbb
scas
sbb
mov
or
push
shlb
jg
adc
popa
mov
icebp
out
leave
movsl
jmp
dec
adc
jl
mov
leave
push
daa
test
fcmovb
cmp
divb
repnz
jnp
inc
out
aas
test
outsl
pop
push
daa
dec
sbb
cmp
dec
and
mov
outsb
stos
adc
pusha
push
push
xor
mov
fidivrl
cwtl
call
in
mov
daa
cmpb
mov
test
mov
insb
fs
fnstcw
arpl
fldl
insb
mov
push
mov
cmp
lret
mov
int3
sti
aad
xor
lret
lock
in
fnsave
or
push
int
inc
cmp
lea
jns
mov
js
mov
push
push
lahf
inc
add
adc
sarl
es
add
test
bound
push
mov
into
lahf
mov
pop
xchg
and
std
lret
sbb
lea
lret
gs
test
jno
sub
out
lret
scas
cmp
loop
pop
dec
out
xlat
push
xor
xlat
mov
iret
mov
xchg
imul
mov
cmp
mov
push
dec
inc
cmp
fucomip
sbb
rcrl
or
lds
cld
cmp
inc
sbb
je
rorb
sbb
xor
push
sub
daa
pop
shufps
jge
add
cmpsb
add
pop
test
sar
lods
sti
jne
pop
pop
mov
xchg
js
lahf
ror
fisubrl
and
xor
cltd
sub
pop
add
jb
mov
sarl
pushf
pop
mov
enter
xchg
mov
in
mov
pop
dec
cmp
fstpl
mov
ja
pop
dec
ljmp
lods
cmp
stos
mov
shrb
mov
xor
repnz
mov
and
pop
lods
pop
aaa
pop
inc
outsl
cmp
mov
outsb
sub
test
movsb
outsb
cltd
mov
mov
push
mov
mov
je
mov
neg
push
dec
pop
dec
mov
imul
fiadds
repnz
or
add
lds
push
xor
sahf
test
sbb
fscale
mov
sub
rcll
and
sbb
hlt
aad
mov
mov
pop
push
movsl
out
dec
xchg
fdivp
sub
loope
into
mov
sub
and
jg
pop
sub
cmp
std
data16
mov
add
sub
xor
cmc
mov
popf
jp
add
lret
add
add
and
cmc
lods
mov
xchg
mov
test
insl
arpl
lods
subb
pop
pushf
xchg
mov
inc
into
mov
adc
inc
movsl
push
clc
rorl
sub
in
jge
push
adc
or
inc
and
aaa
pop
stos
mov
inc
hlt
ss
imul
pop
push
adc
mov
xchg
inc
fs
mov
and
sti
jo
mov
dec
or
lahf
push
xchg
lods
mov
xor
or
decl
pop
mov
pop
add
js
xor
lods
jge
fwait
xchg
xchg
mov
sub
inc
push
mov
std
add
xor
fs
pop
mov
inc
stos
sub
xor
fsubl
push
adc
or
xchg
jp
or
xor
jg
outsl
mov
ss
ficoms
andb
and
int3
ja
das
mov
arpl
pop
mov
jp
addr16
imul
push
ret
dec
je
loope
xchg
add
insb
push
fidivrl
int3
lock
pop
movsb
sub
gs
mov
pop
adc
js
test
cmpsb
lret
push
inc
adc
or
fisubrs
fdiv
cltd
inc
xor
and
dec
jne
jge
jp
stos
je
iret
fsts
push
jg
test
sahf
mov
scas
pop
inc
xchg
ret
xor
mov
lods
jbe
shrd
jne
add
pop
fstpl
and
lcall
jae
add
sti
sahf
into
jge
mov
movsl
sbb
mov
test
xor
imul
inc
aaa
hlt
xor
fnsave
or
mov
jmp
xor
jnp
or
mov
cmp
pop
nop
dec
jns
push
pusha
aam
or
imul
in
orb
fadd
pop
cwtl
sub
push
adc
in
daa
push
push
sti
cwtl
das
out
insb
int3
mov
pushf
cld
jne
hlt
fimull
out
xchg
loop
aas
sub
pop
xor
sbb
daa
cmp
jne
inc
sub
mov
int3
mov
inc
pop
inc
pop
or
add
or
lds
push
sar
push
pop
aam
ds
out
lock
xchg
mov
ds
andb
push
loop
filds
scas
inc
jns
pop
jbe
iret
dec
push
add
lret
pop
data16
jl
cmp
pop
inc
sbb
and
clc
inc
mov
adc
ret
sub
or
mov
stos
push
repz
pop
clc
dec
inc
gs
or
js
xor
push
xchg
faddl
ss
enter
fistl
add
cmpsl
jg
es
outsl
jb
das
lret
outsb
rcr
inc
mov
fsubrs
adc
popf
mov
inc
ret
movsb
cmp
xor
in
and
in
movsl
mov
mov
iret
sub
sbb
mov
movl
cmp
pop
movsb
mov
push
jmp
in
sahf
aaa
dec
and
sub
std
xor
mov
stos
cld
jns
dec
icebp
ljmp
xor
add
sub
dec
in
gs
icebp
insb
cmp
cli
ret
sbb
gs
pop
call
out
and
popl
cmpsl
mov
sub
inc
mov
cmpsl
ret
mov
ret
sbb
pop
jae
gs
dec
sbb
add
and
icebp
or
out
sub
in
std
into
mov
icebp
sub
data16
push
or
nop
sbb
pop
js
insb
add
inc
vmwrite
or
or
cmp
add
dec
pop
xor
daa
es
int3
xchg
fxam
xor
insb
jg
and
dec
push
popf
push
enter
repz
sub
nop
popf
adc
mov
iret
lret
jns
xor
mov
in
inc
push
out
nop
clc
adc
adc
shr
out
aas
sub
outsl
and
jle
aam
lock
sbb
outsb
push
inc
or
lret
inc
push
insb
mov
out
out
jae
out
mov
sub
push
insl
xor
les
ds
jl
repnz
mov
cli
and
addl
dec
xor
inc
xchg
push
lods
jno
adc
repnz
push
scas
sub
jbe
mov
xchg
sub
call
push
ljmp
cmc
fwait
out
push
pop
arpl
fcoms
mov
cli
inc
cmpl
and
lahf
cwtl
mov
repnz
inc
push
gs
jb
mov
out
aad
mov
fistpl
add
adc
sub
arpl
and
popf
pop
mov
daa
cld
sub
sub
mov
test
ret
fst
jo
sub
rcl
outsb
insb
bswap
popf
push
and
cmp
outsb
and
lcall
sub
test
rclb
pop
cwtl
xchg
or
movsb
jmp
test
jle
push
adc
clc
adc
clc
xor
lcall
cld
hlt
imul
dec
jns
xchg
sbb
push
jb
pop
dec
inc
jge
dec
dec
cli
lock
addb
mov
int
leave
jae
mov
mov
sahf
shll
dec
jg
xchg
dec
add
ljmp
and
movlps
sub
dec
adc
mov
mov
cmp
out
mov
adc
dec
repz
xor
cmc
sahf
cmp
mov
mov
insl
lock
fsubl
ret
je
sbb
imul
pusha
mov
test
out
mov
in
jl
xor
lods
out
mov
daa
and
popa
daa
rorb
xlat
movsl
insl
rep
add
sahf
pop
dec
jg
test
data16
insl
and
dec
sbb
jnp
pushf
xlat
arpl
imul
frstor
loop
sub
jl
and
push
pop
in
xchg
dec
cmp
inc
add
shll
test
push
into
es
push
orb
fcomps
ret
jae
mov
adc
xchg
fistl
adc
pop
and
cmp
imul
mov
popf
shll
jne
add
enter
insb
or
es
iret
outsl
sbb
rorl
clc
aaa
test
cltd
mov
sbb
mov
cmp
mov
xor
lret
mov
insb
lea
mov
sbb
fstp
push
iret
adc
in
push
sub
sbb
lret
push
mov
add
push
imul
mov
cmp
dec
xor
mov
jl
fwait
pop
xor
xchg
sbb
pop
inc
jg
dec
enter
test
addr16
arpl
dec
adc
je
lahf
aaa
inc
in
inc
cmp
push
insb
mov
insb
cmp
sbb
lods
fdivr
jne
pop
or
in
xchg
push
arpl
ja
lea
icebp
fsub
sub
fsub
mov
mov
punpckhqdq
jmp
add
sub
xchg
and
mov
shl
xchg
push
jae
sbb
pop
mov
xor
adc
loopne
icebp
outsl
adc
xchg
or
cmp
push
add
cmpsl
push
call
lock
xchg
jno
arpl
inc
sub
test
xchg
add
xor
adcb
orb
mov
pop
pop
test
add
lock
mov
or
mov
repz
lcall
pop
jmp
dec
pop
jecxz
insb
int
mov
cmp
test
dec
or
int3
fwait
das
push
mov
daa
mov
push
lret
imul
push
filds
testb
or
dec
loopne
push
sbb
jno
fs
fdivrs
mov
sarl
mov
jnp
xor
fs
add
cmpsb
jecxz
je
movzbl
bound
lods
fistps
aam
xor
pop
fidivl
aad
inc
cs
mov
aam
ljmp
das
call
mov
jle
lcall
add
shr
gs
fwait
cmpsl
xchg
sbb
daa
fsub
lret
push
leave
cmp
mov
cmp
sub
ret
je
imul
pop
xlat
pusha
into
xor
test
int3
gs
into
mov
jns
movsb
ret
repnz
enter
mov
lret
cmc
push
jl
dec
xor
movsl
popa
jne
in
and
out
ljmp
cltd
ret
sarb
cli
ja
lock
imul
pop
adc
pop
dec
xor
loop
mov
inc
es
mov
cmp
pop
mov
out
adc
test
lds
pop
xchg
dec
in
in
mov
push
je
push
lds
out
in
fwait
jo
or
cmc
dec
or
cld
call
out
lds
sub
int3
and
aaa
lds
push
sub
xlat
stos
mov
add
repz
mov
jae
in
ja
stc
jno
or
mov
adc
in
inc
test
add
addb
enter
pop
dec
arpl
sub
lods
cltd
repz
dec
mov
mov
dec
mov
push
fisubs
or
sub
mov
fnstcw
push
cmp
ss
fstpl
push
sub
shl
inc
int3
pop
imul
cmp
mov
adc
inc
sahf
jnp
xor
movsb
lea
push
repnz
lods
in
lock
push
loope
rol
pop
pop
sub
and
ja
and
sbb
or
jecxz
sbb
shrb
sub
xor
sbb
inc
out
jmp
das
or
in
or
std
sbb
lahf
lods
adc
lock
pop
xchg
popl
pop
cmpsl
xchg
gs
imul
ds
fcomi
xchg
enter
daa
xchg
scas
cmpsl
jne
mov
test
mov
pusha
xchg
int
frstpm(287
or
rcrl
cmp
mov
outsl
push
enter
stos
push
shll
dec
push
mov
adc
rcrb
xlat
ret
outsl
hlt
ror
stc
or
mov
rcrb
cltd
test
and
popf
aaa
popa
incl
xchg
xchg
stc
sahf
into
sub
test
mov
pop
pop
xor
aas
scas
jae
or
repz
lret
xchg
subl
imul
rolb
scas
lods
sub
push
andl
aas
xor
mov
lret
add
cli
adc
hlt
adc
bound
push
mov
cwtl
cmpl
push
out
xchg
mov
mov
add
gs
ljmp
rclb
add
xlat
and
movsb
xor
sbb
mov
jecxz
out
fcomps
test
dec
pop
or
les
sub
test
xor
push
popa
inc
inc
stc
push
lods
leave
or
mov
jne
dec
clc
adc
stc
sub
gs
hlt
pop
in
jns
cmpl
int
stos
sub
aas
push
andl
pushf
das
fstpl
aas
or
xor
adc
enter
push
daa
sub
mov
or
pop
enter
leave
jae
jb
popf
lcall
jl
mov
js
pop
addb
das
aam
inc
adc
imul
jbe
negb
les
push
inc
mov
or
insb
cmp
adc
pop
popf
fstpt
stos
sub
out
loope
mov
sub
jl
push
xchg
adc
dec
sub
inc
dec
cmp
out
fidivrl
or
jae
mov
daa
mov
data16
jle
dec
sub
fists
inc
std
out
sbb
push
shrl
sub
sbb
sub
scas
adc
jno
adc
add
fiadds
std
add
test
rcrb
mov
xor
repz
xlat
add
xlat
bound
loope
cmp
xor
mov
rcl
repnz
movsb
in
leave
cmc
or
xor
sub
inc
out
ret
aam
dec
adc
xchg
leave
pop
push
fs
or
dec
mov
mov
cwtl
mov
sub
mov
adc
frstor
mov
fcomi
das
repz
and
cmpsl
shlb
sub
insb
lds
lret
out
test
xchg
fwait
js
dec
pop
jecxz
lret
ret
cmp
cld
inc
mov
sub
xor
loop
pusha
sub
subb
push
stc
xor
test
in
mov
or
add
push
into
sarl
decl
inc
lret
mov
aad
lods
in
lahf
cwtl
lret
sbb
fxch
stos
lea
inc
push
pop
in
sarl
popa
sbb
enter
jo
xor
mov
mov
and
add
cmpsl
cmp
and
jmp
pop
test
cmpsb
jne
cmp
fidivrs
fisubl
call
out
sarb
std
pop
or
orb
loop
push
mov
sbb
sbb
pushf
mov
movsb
pop
push
jne
mov
mov
xlat
imul
les
inc
jle
loope
and
cmpsl
jle
sub
mov
cmp
or
jbe
add
arpl
pop
test
arpl
jmp
adc
jle
test
stos
xchg
cmc
inc
sub
mov
push
mov
fisubl
mov
add
mov
loopne
cmp
lcall
daa
pop
pusha
int3
popa
dec
int3
or
ret
inc
mov
cmp
or
stos
dec
or
or
fxch
pop
popa
jp
mov
mov
lds
dec
sarl
outsb
sbb
sti
mov
adc
adc
push
shll
test
popa
lret
pop
int3
pop
gs
insb
rorb
pusha
out
push
mov
cmp
mov
mov
shll
pop
outsb
add
nop
sub
gs
sbb
jle
ja
cltd
dec
sub
test
mov
insb
insb
and
xchg
call
lock
jg,pt
lods
std
pop
inc
les
push
call
jle
sbb
subb
inc
jns
out
fsubrl
test
inc
mov
add
mov
stc
dec
adc
je
jg
in
stos
rclb
sub
sahf
push
push
daa
movsb
inc
mov
pushf
dec
jmp
lahf
mov
ljmp
pop
pop
cmpsb
bound
mov
add
mov
inc
fwait
xor
repz
rclb
filds
or
nop
sahf
push
popl
sub
xchg
fdivs
mov
pusha
push
mov
push
jnp
cmpsb
jae
mov
add
int3
inc
fnstcw
adc
pop
sbb
push
xchg
and
repz
mov
mov
jae
jmp
and
mov
bound
mov
add
jmp
loop
shr
sub
xor
in
call
inc
mov
sub
cli
cmc
not
test
fs
fldt
dec
popf
push
lret
dec
stc
icebp
cmpsb
dec
mov
out
test
fiadds
sbbl
cmp
xor
or
mov
data16
in
dec
ret
xorb
and
pop
push
rcll
lret
fisubl
lcall
mov
ds
jo
xchg
into
enter
dec
adcl
out
mov
push
stc
mov
cmp
arpl
inc
pop
sub
lret
push
adc
scas
lds
lret
and
mov
lods
addl
xor
jne
and
xchg
mov
sbbb
mov
mov
shl
mov
shlb
dec
push
aam
fs
dec
xchg
outsb
loope
loope
test
into
sub
stos
push
sbb
add
movsb
repnz
pop
das
pop
xor
ja
ret
pusha
add
test
out
pop
mov
and
arpl
int
movsl
jno
pop
decl
mov
fcomps
stos
mov
repz
enter
mov
in
dec
dec
imul
push
aas
mov
aaa
in
mov
xchg
insb
mov
push
push
cltd
gs
sub
push
pause
inc
sub
cmp
or
sub
xchg
mov
sbb
push
pop
inc
push
inc
idivl
cmp
in
sub
pop
mov
aaa
dec
mov
push
andb
jle
movsl
inc
test
jns
jmp
mov
push
pop
jmp
lods
pushf
inc
dec
xor
out
xlat
je,pn
pop
and
adc
cmpsb
rcrl
outsl
popa
mov
test
adc
in
arpl
adc
addr16
sbb
xor
mov
call
pop
aas
lds
or
das
test
lret
add
adc
add
pop
sub
xor
jp
popa
test
in
mov
lods
jmp
cmp
cltd
not
fmull
lds
or
insb
push
daa
sbb
jnp
mov
push
cmp
fisubrs
and
adc
arpl
mov
inc
pop
push
jmp
add
arpl
push
je
mov
lret
dec
test
pop
ja
sbb
inc
arpl
and
in
push
cmc
inc
js
out
fisttpl
loope
ret
adc
jmp
push
hlt
pusha
cmp
cli
fistl
gs
lret
mov
adcl
adc
clc
jecxz
adc
xchg
mov
inc
xlat
xchg
jns
and
sbb
jle
jmp
jecxz
push
and
das
pop
pop
in
pop
daa
xor
fisubs
addr16
out
add
cmp
fcoml
outsl
inc
test
les
jp
mov
shll
push
sub
dec
adc
add
jnp
fcmovne
cmpsb
ljmp
hlt
stos
xor
daa
jo
lock
scas
orb
repnz
inc
test
adc
cli
add
scas
ja
andl
insl
sub
rorb
mov
add
popa
mov
repnz
imul
push
cmp
jle
enter
ds
test
dec
lret
jbe
iret
mov
jle
push
ficomps
addl
sbb
call
es
dec
push
push
xchg
iret
pop
sbbl
add
or
xor
xor
adc
imul
adc
rolb
adcl
ljmp
jg
dec
test
mov
pop
gs
dec
into
sub
mov
jnp
pop
cmpsb
mov
test
mov
pop
ret
leave
sbb
cmpsl
iret
xchg
inc
loope
fdiv
loope
loop
cmpsb
test
dec
imul
fcmovnb
sahf
fsubrl
jnp
jecxz
out
or
pop
sub
lcall
ret
mov
dec
sti
and
jmp
jmp
xor
andl
into
mov
xchg
jae
xchg
mov
mov
push
mov
cmp
push
push
jp
movsl
out
mov
xchg
push
push
leave
in
imul
xlat
mov
lret
popf
xor
pop
ficomps
outsb
or
in
sbb
and
mov
add
push
pop
aad
jmp
cmp
sub
into
xor
arpl
xor
aad
xor
ljmp
xchg
aas
orb
jae
call
sub
pop
mov
add
in
push
cmpsl
fldl
divl
jb
push
jmp
sbb
out
gs
sbb
cmpl
adc
push
shll
inc
out
mov
lds
inc
ja
mov
mov
pop
cltd
xor
jmp
mov
dec
add
es
roll
sub
stos
jns
data16
das
pop
mov
mov
sbb
mov
adc
stos
incb
fcoml
mov
mov
mov
cmp
push
pop
test
in
in
sub
shll
and
out
in
cld
mov
mov
popa
lock
shr
pop
mov
adc
pop
pop
add
add
popf
lock
cwtl
jle
cmc
xchg
lcall
push
cli
add
stos
inc
xorl
stos
xchg
pushf
cwtl
sub
cmp
jecxz
dec
cmp
out
shlb
int3
and
std
test
or
push
push
pushf
out
arpl
stos
mov
mov
sub
xlat
mov
add
movsl
jge
les
xchg
out
nop
out
in
cltd
jne
jns
aam
bound
leave
xor
push
jp
lcall
mov
dec
inc
mov
sub
aam
xor
lret
sub
add
dec
dec
mov
lock
cmp
push
or
call
push
sub
mov
pop
dec
add
mov
xchg
xchg
mov
rcrl
mov
cli
inc
add
aaa
xchg
lock
pusha
outsl
xchg
push
cmp
or
xor
inc
je
mov
out
movsb
shlb
jnp
ja
mov
fs
dec
lea
aad
pop
jae
or
mov
pusha
shll
lods
inc
mov
mov
lods
lret
pop
mov
pop
in
pop
mov
mov
push
jmp
push
fnstenv
cltd
cmc
arpl
or
mov
mov
ljmp
push
fndisi(8087
xchg
push
js
out
sub
stc
daa
adc
fiadds
fs
hlt
sub
cmp
jmp
mov
pop
jno
int3
in
sahf
push
sub
pop
pop
test
aas
xchg
push
inc
arpl
cli
hlt
and
mov
rolb
jle
dec
jmp
add
cmp
das
pop
sub
and
js
or
sbb
orb
dec
xor
pop
pop
testl
jno
xchg
adc
rcrl
add
and
and
rep
aad
adc
test
pop
lret
push
fstpt
xor
sbb
cmp
push
lock
push
jl
into
stc
fnstenv
rep
bound
sub
and
jne
sbb
int
add
pop
inc
repz
cmpsb
aad
fsubrl
sub
or
sbb
sbbl
dec
les
add
and
ja
sub
adc
xorb
mov
adc
testb
addr16
or
cmpl
fildll
pop
stos
dec
iret
fidivrs
pop
add
lock
cwtl
arpl
addr16
insb
sbb
cltd
hlt
inc
mov
outsl
cmp
sbb
enter
mov
dec
test
loop
arpl
cld
cmpsb
cwtl
sbb
movsb
pop
mov
repnz
xor
and
mov
lods
jp
fbstp
loope
sub
out
popa
jge,pn
adc
cs
out
pop
pop
loop
xchg
lods
add
icebp
out
in
push
lahf
lcall
mov
inc
ffreep
sti
scas
lcall
xor
lcall
xor
outsl
pop
jge
insb
push
mov
rolb
and
inc
add
in
negl
cmc
bound
mov
imul
mov
jge
clc
add
mov
mov
jge
int3
inc
push
sub
dec
pop
lret
pop
or
xchg
ljmp
jne
es
xchg
inc
lcall
dec
aad
cld
push
jmp
imul
inc
loope
pop
and
pushf
mov
mov
mov
notl
xor
insb
pusha
push
sub
push
test
ret
ljmp
mov
mov
stos
or
sbb
popa
mov
outsl
pushf
adcl
stos
fs
movsl
sti
jmp
jp
in
push
add
and
enter
xchg
loop
out
mov
jg
fwait
sarl
mov
shll
out
xchg
or
lret
cmpsb
cmc
xor
dec
dec
add
mov
out
or
xor
cmc
mov
pop
mov
cs
pop
js
xchg
add
inc
add
xchg
dec
mov
lret
mov
out
mov
jecxz
lcall
aaa
jne
cmp
mov
cmp
addb
mov
out
insb
adc
call
add
or
sbb
cmpsl
ffreep
out
push
jns
leave
mov
inc
popa
pop
fcompl
dec
js
lods
sub
cmp
es
clc
mov
sbb
mov
adc
stos
jmp
negb
out
inc
xchg
lea
fwait
mov
mov
mov
xchg
pop
xor
add
pop
jmp
push
js
rol
lret
sub
shlb
adc
fimuls
mov
in
aas
inc
fimull
shlb
cld
outsl
cs
jge
pop
xor
popa
cmpsl
fidivl
cmp
push
outsl
jmp
imul
inc
jmp
xlat
mov
bound
sub
cwtl
js
pop
scas
sbb
idivl
and
lods
mov
insb
imul
sbb
sbbl
rorb
test
test
or
cmpsl
add
andb
xchg
xor
jo
mov
fmull
mov
jb
cmp
aaa
sub
test
in
scas
loop
in
push
ror
leave
push
js
mov
pop
mov
jnp
xchg
lret
mov
jb
add
jno
movsl
ljmp
fldpi
loope
lret
xor
xor
sti
xor
cmp
add
and
dec
enter
js
fcoml
mov
ret
sub
mov
mov
shl
push
test
inc
cvtps2pi
jl
cmp
cmp
pop
rcr
stos
fwait
cs
nop
xchg
push
repnz
sub
dec
movsb
dec
movsb
pop
outsb
or
rorl
adc
lret
or
or
gs
xor
add
sbb
sbb
lret
dec
cmp
stos
mov
cmpsb
dec
mov
cmp
mov
jno
repz
shll
mov
xchg
and
les
push
insb
movsl
cltd
ret
aas
dec
xchg
cmpsb
jp
pop
lret
enter
repz
add
loope
dec
iret
pop
add
push
lods
xorl
out
xor
cmpsl
mov
cmp
jns
popl
fimuls
cwtl
sbb
mov
pop
pushf
cmpsb
inc
push
les
inc
jle
jne
inc
sub
test
add
or
cltd
push
sub
mov
mov
xlat
out
push
sbb
out
daa
mov
mov
jns
jecxz
aad
mov
addr16
aaa
pop
ss
pop
xchg
push
pop
cld
xchg
lods
jp
call
aas
mov
pop
mov
push
adc
outsb
add
sub
push
lret
cmp
jg
aam
xor
lock
xchg
iret
adc
stos
jnp
mov
roll
cli
cmp
fs
in
or
push
sub
pop
add
mov
sub
xchg
pop
ljmp
push
mov
rcll
ss
jmp
imul
in
push
mov
mov
test
mov
test
aaa
into
popf
loopne
iret
test
cmp
jns
orl
pop
xchg
adc
adc
iret
push
mov
mov
flds
mov
pop
pop
jne
xor
xlat
push
mov
mov
or
jb
xor
pop
inc
mov
shlb
shrb
test
mul
test
jl
and
in
and
jge
jg
or
arpl
fimull
mov
mov
aam
mulb
or
mov
jnp
push
cmp
js
or
sub
mov
push
xchg
cld
sub
or
cmpsl
and
mov
pop
fcomps
jp
pop
xchg
mov
add
repnz
inc
jge
add
sbb
or
mov
leave
cld
es
imul
and
clc
xor
pop
pop
and
jnp
lret
mov
outsl
dec
and
and
push
fnstenv
dec
roll
sub
xchg
repz
loop
test
fdivr
nop
mov
cmp
adcb
lahf
int3
sub
jo
imul
inc
jb
xchg
push
mov
mov
fs
pop
insb
pusha
pop
jb
lock
inc
in
xlat
or
push
sub
imul
pop
imul
int3
push
aas
or
mov
das
repnz
inc
fdiv
sbb
push
loopne
pushf
fmull
cmp
dec
push
rcrb
add
push
ret
adc
subb
inc
adc
les
popa
pop
cltd
outsb
in
mov
mov
shlb
mov
sub
mov
movsl
imul
adc
es
inc
sub
fdivp
cmp
inc
fcomip
iret
fwait
std
lods
movsb
xor
enter
jmp
jns
mull
cmp
xchg
hlt
lcall
mov
pop
test
testl
nop
and
hlt
xchg
sahf
jg
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
mov
cli
mov
lret
push
and
mov
mov
iret
push
popa
jmp
mov
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
aaa
push
and
call
repz
ja
imul
push
mov
lods
test
inc
dec
lret
xchg
fisttpl
jns
xchg
mov
test
rorl
push
mov
loop
add
mov
cmp
iret
push
es
jecxz
loope
lock
cmp
data16
loop
adc
lds
inc
sbb
xor
lahf
mov
cmpsl
xchg
mov
jns
sub
out
push
das
imul
mov
cltd
pop
lock
cmp
data16
xchg
fisttps
lds
fnsave
adc
add
sub
jae
mov
jae
xchg
shlb
test
mov
iret
push
and
imul
arpl
push
mov
ror
cmc
dec
movsb
idivl
mov
das
push
and
divb
mov
jae
and
aaa
movsb
push
cli
mov
iret
push
and
idivl
cmpsl
ret
daa
and
repnz
mov
lret
and
idivl
mov
lret
push
and
repnz
mov
fildll
xor
idivl
cmpsl
ret
and
sbb
cli
mov
iret
push
and
into
mov
jo
cli
mov
aas
popa
and
sbb
cli
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
ret
ret
and
sbb
cli
arpl
iret
push
and
cmpsl
jmp
inc
mov
ret
and
aaa
fs
mov
mov
mov
mov
iret
push
stc
out
idivl
mov
iret
push
and
xlat
mov
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
and
idivl
mov
iret
push
mov
notl
mov
insl
mov
inc
adc
and
dec
sti
int3
pop
sarl
inc
push
outsl
lods
test
push
dec
dec
lods
or
enter
cmpsl
in
xchg
ret
lods
je
lcall
mov
cmpsl
and
or
mov
pop
cmpsb
out
leave
sub
inc
pop
pop
inc
mov
pop
mov
lods
xchg
leave
fsubl
out
lcall
mov
lret
pop
dec
cld
lcall
pop
jmp
js
cmp
repnz
pop
and
mov
jg
cwtl
das
lods
mov
pop
or
or
xor
jg
es
pushf
dec
xchg
daa
test
jl
je
jecxz
inc
cltd
leave
mov
sub
ljmp
xchg
pop
push
push
pop
roll
mov
hlt
out
out
outsb
call
lret
jg
int
loop
push
loop
mov
add
lcall
repnz
dec
inc
cmp
pop
pop
xor
orl
jmp
pop
push
les
fidivrs
mov
sbb
sti
ficomps
outsb
lea
sub
jo
inc
mov
ret
mov
xchg
loopne
jmp
jne
push
outsl
daa
ret
outsl
jno
push
out
rcl
fadd
addl
das
mov
cmc
call
je
jnp
pandn
push
mov
das
mov
ds
xchg
jmp
jno
in
sbb
fistps
pop
scas
add
mov
aad
lea
jne
popf
jmp
mov
xorb
jg
jl
cmp
cmp
ja
repnz
xor
mov
popa
push
scas
fiadds
mov
mov
out
jo
mov
dec
icebp
dec
xchg
mov
inc
xchg
mov
jbe
or
or
push
mov
mov
adc
cmpsb
cld
adc
jne
out
out
adc
ficoml
inc
aaa
xor
mov
idivb
pop
cmp
inc
sub
adc
andl
jmp
mov
mov
gs
lahf
loop,pn
add
push
ret
xor
cmpsl
sbb
add
hlt
aam
sbb
adc
or
add
lds
insl
mov
sbb
mov
lahf
xor
lods
bound
daa
mov
push
jae
lret
jge
inc
xorb
inc
ljmp
movsb
push
rorb
daa
sub
push
mov
xchg
fwait
adc
xor
xor
scas
fldenv
jmp
add
xor
jp
jmp
test
loopne
mov
mov
call
adc
dec
es
in
push
cmpsb
dec
push
loopne
push
cmp
dec
pop
push
cmp
out
mov
subb
xchg
push
hlt
loopne
mov
das
fucomp
xor
or
cmp
ljmp
mov
aas
pop
pushf
roll
cltd
xchg
cli
aas
sbb
imul
mov
cmp
jb
popf
gs
xlat
adc
jns
fidivl
bound
xchg
sbb
shrb
mov
insl
xchg
jne
scas
sbb
mov
cmp
lods
mov
popa
mov
loope
negb
leave
cmp
test
mov
incl
scas
dec
dec
int3
aam
bswap
cltd
pop
push
mov
out
shl
add
loopne
sub
inc
jb
lods
inc
inc
out
jecxz
mov
mull
insl
adc
sub
addl
push
pop
ss
xor
mov
sbb
push
or
xchg
mov
fcomp
jae
jle
mov
out
xchg
stos
dec
push
cmp
movups
dec
inc
xchg
icebp
and
fsubr
scas
insl
xlat
ljmp
test
int3
inc
stos
and
jp
pop
adc
mov
cld
mov
jge
or
cwtl
jg
dec
xor
cmc
fcmove
cmp
sbb
aas
jnp
fisttpl
fucomip
push
cltd
imul
fdivs
loope
xchg
pop
jns
dec
lds
insl
dec
add
xorl
sbb
imul
test
mov
cmc
testb
addr16
arpl
pop
or
cmpsl
icebp
pop
mov
inc
xor
enter
push
pop
jp
movsb
mov
and
sub
lret
adc
inc
xchg
mov
cmp
cvtpi2ps
ja
jno
sub
mov
insb
push
lods
inc
cmp
dec
scas
mov
es
les
sub
loopne
in
cmpsl
outsl
dec
xchg
sahf
mov
adc
mov
or
ja
int3
pop
mov
push
stc
lcall
data16
imul
inc
push
fildll
pop
push
imul
sahf
daa
fistpll
jae
sub
jp
das
mov
out
stos
lahf
or
stos
lahf
adc
add
dec
iret
jns
push
pop
xor
or
mov
mov
xor
fmul
cmc
push
adc
mov
or
iret
nop
jno
sahf
xor
fcmovnb
or
addb
dec
ss
stc
addr16
into
xor
mov
fsub
cmp
cmp
sub
mov
push
sahf
push
fidivl
adc
cmpl
cmp
jns
mov
push
jo
test
mov
pop
push
pop
movsl
inc
push
mov
push
adc
lds
and
jb
xchg
and
inc
das
xchg
push
adc
cwtl
imul
and
hlt
and
ss
test
sub
inc
fmuls
mov
incl
sbb
sub
mov
lea
mov
fwait
movsl
mov
adcl
or
push
out
inc
iret
stos
pop
jo
push
arpl
fistl
add
in
push
jo
mov
mov
mov
int
and
nop
std
mov
fimull
and
dec
aaa
jno
dec
mov
sarl
jp
xchg
jle
adc
jo
adc
push
sbb
mov
xchg
leave
arpl
xlat
in
scas
adc
add
dec
pop
push
jbe
push
sbb
jae
cmp
std
mov
xor
push
aad
xchg
es
adc
mov
xchg
mov
mov
movsl
test
lds
mov
jne
out
and
cltd
inc
and
cld
pop
lahf
jb
mov
aas
cli
add
sahf
loop
inc
scas
sbb
data16
or
cltd
inc
and
mov
cmpsb
sbb
xchg
and
inc
repz
or
mov
clc
or
andl
pushf
mov
dec
pop
cmp
xor
in
add
fsubr
mov
jle
mov
rcrb
jo
lret
fcomp
ret
in
insb
ret
enter
iret
pop
add
dec
decb
shl
js
mov
pushf
bound
fiaddl
pop
jl
mov
mov
call
mov
xor
shl
xchg
sbb
and
xlat
cmp
dec
xchg
scas
ds
jo
loope
aaa
shll
sub
test
adc
jo
inc
cmc
sub
lret
adcb
js
sbb
icebp
push
ret
das
arpl
sarl
mov
cmpsb
in
ds
cli
lods
subl
mov
push
xor
les
xchg
lods
rorb
pop
pop
daa
pop
cmp
mov
mov
sub
adc
bound
lcall
sub
lahf
js
rcl
adcb
jb
cmp
fsubp
add
sub
xchg
pop
xchg
inc
test
inc
jle
push
sbb
pusha
mov
sbbl
int
dec
pop
xor
fcoml
jecxz
mov
add
xchg
push
sbb
test
fildl
pop
sbb
jno
push
lds
rcll
sbb
jmp
daa
jns
pop
loope
ss
jecxz
outsl
sub
and
inc
jo
sbb
popa
dec
sbb
pop
fwait
cmc
sbb
mov
test
in
addr16
icebp
adc
jbe
mov
mov
leavew
mov
out
gs
or
test
push
hlt
insl
adc
lods
outsl
dec
movsb
popf
xchg
es
cmpsl
repz
mov
and
fisubl
xor
mov
mov
push
or
push
jbe
sub
ficoms
ds
adc
mov
ja
and
aam
test
testb
rorb
leave
dec
aaa
scas
negl
push
sub
cmpb
push
mov
jp
jae
push
push
stos
or
or
pusha
dec
cmp
aas
fsts
mov
dec
cmp
inc
clc
shr
sti
inc
sbb
pushf
frstor
sub
xor
xor
daa
inc
fistps
mov
outsb
inc
dec
push
aad
pop
push
ljmp
xchg
inc
rcll
push
adc
push
out
and
pop
int
pop
int3
cmp
jbe
inc
dec
fwait
rcrb
test
xlat
addr16
inc
jle
mov
mov
push
or
sahf
pop
lock
pop
outsb
fsubl
filds
mov
outsl
mov
sbbl
loopne
pop
gs
fucomp
sub
ffreep
push
jmp
dec
lret
inc
push
add
sub
repz
ljmp
out
cwtl
push
or
nop
pushl
lcall
ljmp
mov
mov
pop
dec
push
add
rcrl
sbbl
add
in
cltd
outsl
jg
xchg
inc
test
mov
shr
cmc
xor
jecxz
sbb
repnz
in
pop
xor
popf
aad
daa
ds
arpl
mov
out
pop
cwtl
add
add
fwait
and
xor
incl
int
hlt
pop
cli
popf
adc
insb
notl
or
cmp
xchg
les
xchg
mov
adc
mov
xchg
and
push
adc
insb
je
cmpsb
adc
test
pop
dec
adc
repnz
clc
movsl
mov
ret
xchg
movsl
mov
in
dec
inc
insl
jg
ss
mov
and
inc
aam
fidivrl
cmp
mov
fs
inc
jno
xor
movsl
jp
mov
jp
mov
cs
imul
mov
repnz
ret
icebp
cli
jo
aad
jns
pusha
frstor
cmp
add
mov
push
lcall
clc
dec
dec
fs
push
das
cmpl
xor
dec
jno
das
dec
gs
jge
mov
mov
popa
push
sbb
inc
jmp
inc
cld
lahf
nop
inc
outsl
icebp
insl
push
push
mov
mov
dec
inc
mov
mov
jl
aam
ss
mov
out
adc
ss
push
xchg
jne
adc
adc
mov
lret
imul
adcl
ljmp
cltd
clc
mov
in
pop
imul
test
mov
push
push
add
xor
lea
mov
mov
das
rclb
sub
mov
jne
mov
mov
repnz
and
pop
mov
push
push
pop
test
mov
sub
mov
sbb
mov
mov
or
mov
std
push
or
pusha
and
pop
or
add
stos
out
mulb
pop
mov
hlt
jb
fsubs
push
cmp
jle
int
and
loopne
nop
in
pusha
mov
lods
sbb
pushf
mov
scas
add
pushf
shlb
lock
xchg
and
jns
fninit
in
das
lahf
push
mov
inc
xchg
inc
mov
ret
das
add
and
loopne
sub
out
add
inc
pop
jno
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
