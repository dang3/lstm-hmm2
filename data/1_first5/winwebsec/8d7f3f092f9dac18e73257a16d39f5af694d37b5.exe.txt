push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
push
loopne
test
mov
cmp
lret
enter
arpl
pop
ds
int3
in
xor
push
mov
mov
fidivs
xor
les
lret
adc
call
bound
in
adc
rol
cld
repnz
mov
lahf
leavew
stos
ja
test
es
push
jne
add
xor
enter
data16
sub
fs
push
xchg
push
add
mov
sbb
cld
out
dec
inc
jns
imull
std
push
fcoms
push
sbb
fistps
mov
and
test
das
outsb
sbb
enter
cmp
test
adc
popl
jno
aaa
mov
aaa
int3
out
ret
pop
insb
or
sbb
jnp
adc
mov
xor
dec
insb
sub
jle
movsl
push
shl
imul
jge
jae
scas
pop
int
push
fdivrs
in
xchg
sub
cmpsl
mov
adcb
stc
xor
xchg
imul
push
mov
les
xor
fidivl
ja
dec
outsl
jne
jp
in
test
lea
sbb
sbb
and
ret
sbb
clc
lret
xchg
shlb
push
repnz
mov
fistl
leave
or
insb
icebp
stc
pop
scas
mov
popf
xor
mov
hlt
adc
movsl
cmpsl
jo
nop
mov
ret
sbb
inc
mov
std
sbb
pop
xchg
lahf
dec
fsts
mov
cmc
hlt
lret
pushw
repz
push
movsl
sbb
and
mov
dec
pop
js
dec
mov
fidivs
cmpsl
in
clc
dec
sbb
not
ja
cwtl
loop
mov
test
and
xor
dec
xor
pop
pop
daa
pusha
das
or
push
imul
out
icebp
cmp
push
cmp
lods
int3
lock
sbb
sbb
inc
and
push
mov
lahf
out
jb
mov
add
out
jne
hlt
daa
xchg
xor
out
dec
mov
and
cmp
nop
sbb
or
pop
push
pushf
repnz
movb
cmp
cmp
inc
outsl
movsb
bswap
xchg
jns
dec
movsb
aam
aam
divl
add
std
rolb
outsb
stc
dec
je
adc
lds
sub
pop
dec
pushf
xchg
xor
inc
rclb
push
clc
pushf
ja
xchg
jle
inc
scas
sbb
mov
out
jns
inc
call
cwtl
cli
mov
stos
ds
lahf
cmpsb
xchg
fadd
adc
lret
nop
sbb
jns
xor
xchg
fisubl
lea
inc
fimull
fiadds
and
movsb
xchg
test
add
push
push
in
es
out
mov
push
inc
fstps
xor
mov
icebp
pop
stos
leave
cmp
popa
jmp
sub
adc
test
and
sbb
adc
and
test
test
mov
test
push
stos
lea
xchg
dec
pusha
cs
adc
ret
scas
movd
dec
pusha
call
xchg
gs
cmp
pop
and
mov
aad
clc
fldl2e
in
mov
rorb
dec
mov
aas
dec
lcall
mov
adc
hlt
insb
mov
nop
adcb
jno
pop
fsubr
push
xlat
xchg
ds
xor
inc
repz
sbb
out
cmpsl
jle
inc
jnp
das
outsb
adc
int
xchg
or
in
push
rcrl
pop
sahf
iret
outsb
mov
pop
mov
cmpsl
lcall
fdivrp
jg
sub
repz
popa
cmp
dec
add
les
xchg
leave
push
cli
int3
repnz
cwtl
fildll
mov
pop
pop
popa
sub
inc
imul
shrb
mov
in
in
andl
xor
mov
pop
dec
ret
pop
sub
fwait
xor
dec
dec
inc
fists
dec
cmp
icebp
bound
add
mov
cld
dec
cmpsb
mov
ljmp
in
mov
fbstp
cmc
mov
addr16
sub
js
xchg
scas
inc
js
push
inc
jno
mov
outsb
insl
loopne
andb
push
jmp
aad
shrb
gs
xchg
hlt
pop
cmp
mov
jbe
pop
pop
rorl
xor
fsubs
pop
bound
mov
dec
mov
and
cld
nop
sub
in
inc
cmp
fdivrl
scas
sbb
insb
mov
pop
fdiv
push
jp
cmp
cmpsb
imul
adc
popl
xlat
fstps
cmp
sub
push
jno
xor
mov
or
cli
pop
hlt
or
cmp
xchg
push
pop
add
cld
inc
sub
mov
ja
add
mov
mov
mov
or
push
popf
frstor
mov
dec
or
movsb
inc
dec
fcmovne
push
loop
popa
inc
xchg
test
add
shlb
data16
lea
fbstp
mov
dec
pop
mov
inc
je
lahf
add
cmc
xorb
inc
pop
fmull
pushf
outsl
ret
and
mov
fwait
xor
sbb
push
andb
scas
mov
test
je
aam
ss
add
lea
mov
sub
pop
out
cmp
sub
sub
pop
cmpsb
sbb
dec
push
inc
add
stc
jp
loopne
clc
stos
aaa
jnp
ret
and
cltd
sbb
push
popf
add
or
ss
cmp
xchg
dec
xor
cltd
mov
pop
jge
xchg
xchg
cmp
out
loopne
jae
add
icebp
and
cwtl
add
das
and
in
push
inc
mov
stos
incb
xchg
cld
pushf
scas
mov
stos
imul
add
out
in
mov
jbe
mov
adc
cmpb
mov
in
jno
mov
pop
add
mov
lret
int3
cs
cwtl
clc
adc
jmp
pop
jo
jl
mov
ljmp
xor
adcl
pop
insb
insb
lahf
or
imul
cmp
cltd
dec
cmpsl
out
loopne
pusha
lret
and
add
fisubs
aas
mov
and
movsb
popf
adc
sub
sub
mov
xor
shll
add
je
cmp
lret
jmp
mov
push
jp
sub
xor
adc
mov
cli
cwtl
dec
or
gs
lock
fstpt
mov
fcmovu
mov
test
inc
pop
shld
aam
lahf
cld
cmp
js
in
xchg
xchg
es
jecxz
mov
dec
stos
je
andb
add
sbb
push
cmpsb
fadd
dec
shlb
adc
adc
les
mov
aam
nop
push
pop
fdiv
xor
cmc
repnz
or
mov
test
and
stos
pop
sbb
or
icebp
lahf
mov
xor
and
and
aas
xor
ret
inc
pop
sub
loopne
or
or
pop
mov
mov
adc
icebp
inc
test
pop
sub
insb
inc
and
out
lods
push
movsl
bound
jae
cmpsl
lods
adc
popa
or
xor
lea
mov
lods
dec
push
cmpsl
test
push
pop
and
mov
aad
int
clc
mov
mov
sbb
lock
dec
das
cmpsb
test
icebp
mov
sbbb
push
in
mov
mov
inc
stos
lods
inc
into
fnstenv
dec
dec
lods
jne
jle
push
fxtract
dec
cmpsl
cmp
pop
pop
or
mov
xor
ja
adc
and
or
mov
js
push
les
int3
loope
xlat
out
cmp
test
cmp
inc
and
cs
loopne
aas
xchg
push
in
sub
push
xchg
stos
or
ja
xchg
in
into
dec
sti
xor
dec
cmp
cmpsb
aad
dec
mov
adc
rcll
arpl
inc
cld
xchg
sti
add
ss
cmp
sbb
movsb
data16
pop
aaa
inc
mov
sbb
int3
mov
jne
enter
dec
mov
sbbb
std
data16
cmp
adc
xor
call
push
cmc
out
jns
lods
inc
ljmp
or
shl
in
push
jl
adc
cmpsb
ljmp
addl
mov
inc
mov
push
mov
das
addr16
aas
adc
nop
dec
lock
add
xchg
stc
cli
imulb
popa
lea
lock
push
icebp
add
push
imul
cmp
mov
bound
xchg
mov
js
and
and
xchg
mov
fwait
inc
int3
enter
fistl
or
add
inc
xchg
inc
jmp
inc
retw
rorl
inc
repz
iret
or
movsl
cmpsl
xchg
mov
pop
clc
mov
xlat
jle
and
nop
inc
xchg
xor
sarl
pop
add
dec
fildll
pop
sub
dec
xchg
hlt
sbbl
cmc
pusha
sub
mov
aaa
sbb
into
aam
mov
and
filds
cwtl
dec
xor
and
subb
mov
mov
and
mov
imul
stos
movsb
sti
fsubrs
shrl
gs
inc
sub
mov
lahf
lods
popa
or
fsubrl
adc
push
cmp
dec
lret
pop
fldl
out
mov
push
mov
jne
mov
stos
dec
xor
test
inc
ss
or
add
das
and
or
sti
data16
dec
ds
xchg
or
jnp
fmull
in
jle
jns
test
shrb
xchg
clc
and
daa
jge
stc
das
cmp
mov
hlt
sahf
andb
and
jae
addr16
inc
cmpsl
xor
loop
and
jp
pusha
pushf
mov
jo
mov
mov
sbb
nop
inc
stos
das
pop
cwtl
test
sahf
lods
xchg
daa
inc
mov
movsl
inc
rol
sub
sub
sub
or
xor
sbb
lods
mov
cmp
pushf
push
and
ds
mov
addr16
lret
sub
xor
outsb
movsl
add
adc
pop
les
das
jbe
iret
jne
xor
movsl
adc
and
adc
cwtl
fmull
mov
negl
loopne
fidivrl
cmpl
mov
iret
adc
push
loopne
fnstcw
mov
mov
sub
clc
mov
add
jle
lods
incb
add
mov
push
or
into
mov
and
xor
ja
setl
jae
dec
cmp
jmp
mov
bound
lds
ret
rol
inc
sahf
data16
xlat
push
xchg
jg
test
fcomp
adc
fcomps
fsubs
in
and
cmpsl
sub
stos
ret
fisubrs
xlat
les
adc
aad
xor
leave
pop
ret
jnp
fildll
loop
xchg
jmp
pop
mov
xchg
into
scas
fxam
je
addr16
mov
int3
inc
decb
push
mov
daa
pop
mov
clc
push
stos
pop
pop
dec
pushl
insb
test
pop
pop
push
adc
fwait
in
into
jno
jbe
push
lea
inc
int3
jl
arpl
pop
sbb
or
add
test
adc
in
clc
xor
shrl
in
pop
xchg
fidivs
sbb
loopne
insl
adc
mov
aam
enter
push
xchg
je
pop
mov
in
idivl
push
sbb
adc
cli
je
xor
jno
pusha
fdivs
fidivrs
fisubl
neg
dec
cs
jb
lea
xor
lods
push
aas
jbe
insl
mov
push
sti
sahf
jl
jl
negl
fcmove
loope
clc
mov
dec
fcoml
jge
popf
inc
add
or
and
add
xlat
jns
addr16
pop
lahf
insl
sti
push
sub
icebp
test
cmp
mov
dec
aam
sbb
and
and
data16
sub
mov
and
lds
les
sarl
insl
fwait
cmp
insl
adc
jle
pushl
cmp
pop
fwait
xchg
int3
in
jnp
adc
inc
and
lds
pop
dec
and
popa
aam
fs
lret
mov
loopne
cmp
mov
mov
cltd
das
mov
adcl
icebp
xchg
add
inc
loope
mov
push
ret
mov
popa
pop
and
mov
mov
mov
xchg
stc
push
push
add
repnz
out
rorb
lock
mov
xor
xchg
ss
imul
out
xchg
mov
add
or
sarl
cmp
mov
push
ja
arpl
cmp
inc
sarb
jecxz
mov
cmp
xchg
mov
xor
fmuls
pop
add
pusha
andb
repnz
sub
insb
adc
test
hlt
fdivr
or
xchg
xchg
clc
lods
leave
fistps
pop
push
or
or
pop
out
jg
movsl
adc
jnp
sbb
gs
cmp
ljmp
adc
sti
lea
xor
add
outsl
mov
pop
cmpsl
popa
inc
mov
xchg
mov
scas
cwtl
cmp
jo
lcall
xor
and
or
cmpb
xchg
mov
ficoms
cmpb
sti
cmp
push
lods
lea
addr16
fidivrs
out
jns
hlt
stos
dec
idiv
sub
mov
inc
icebp
fildl
dec
add
in
mov
addb
nop
test
mov
sub
push
int3
add
popf
add
sbb
inc
cmp
sahf
mulb
dec
mov
lret
cmpsb
cmp
adc
ss
pop
ss
lea
cmpsb
pop
sbb
bound
adc
les
sub
lods
out
xor
xchg
call
sub
jnp
xchg
and
sub
loope
clc
aas
cld
or
mov
cmpl
rcrl
pusha
adc
lds
movsb
jge
sbb
mov
xor
test
and
cwtl
and
push
mov
push
cmp
ss
repz
ret
sbb
push
mov
jp
push
out
in
mov
scas
shll
lcall
mov
sbb
clc
sbb
test
push
lods
fistpl
xchg
cmp
leave
xor
xchg
push
jno
sti
push
es
mov
aaa
test
jl
dec
jg
cmpsl
mov
jle
ljmp
in
imul
popa
sub
jmp
dec
cmpsl
cwtl
push
cmp
xor
lret
imul
and
lods
js
push
and
leave
testb
outsb
dec
mov
shrl
jmp
mov
dec
data16
cmpsl
or
dec
mov
pop
or
inc
mov
sub
scas
dec
icebp
cmpsl
mov
rcll
scas
mov
test
mov
shrl
cmp
fildll
jb
push
orl
adc
mov
lods
mov
ds
lods
jns
loope
int3
xchg
pop
enter
adc
rclb
hlt
mov
and
inc
pushf
out
shlb
daa
inc
hlt
mov
mov
pop
cld
xor
cld
mov
mov
cli
cwtl
mul
stos
jp
pop
jnp
add
pop
sub
adc
push
and
adcb
pop
push
movsb
filds
jns
nop
jecxz
inc
mov
mov
add
dec
mov
adc
orl
sub
mov
outsb
in
cmp
stos
frstor
out
in
sahf
jae
lahf
pop
jg
and
sub
and
sbb
daa
test
jmp
mov
cmc
aad
pop
mov
fwait
sti
int
dec
scas
pushf
cwtl
rolb
cs
cli
aad
pop
rcrl
movsl
movsl
data16
pop
lock
nop
out
hlt
jle
xchg
cmp
mov
mov
stos
fidivs
adc
test
mov
popf
loopne
and
push
adc
sub
adc
std
pop
mov
inc
mov
cmc
and
pop
stos
loope
loop
les
mov
int3
cwtl
lahf
and
add
fwait
mov
rorl
lea
sarl
or
sbb
decb
xchg
add
insl
or
jbe
jl
mov
mov
shl
das
lds
add
and
aas
mov
imul
adc
lods
mov
sub
xor
push
mov
inc
fucom
mov
mov
fldcw
or
xor
mov
movsb
mov
call
js
pop
and
sbb
pop
inc
test
xor
push
xchg
repz
mov
mov
cmp
or
sarl
test
mov
loop
xchg
cmp
add
lock
pop
mov
push
and
push
xlat
pop
shlb
mov
lret
ficompl
lea
scas
rcl
push
or
sub
jae
lret
lahf
push
sub
jae
mov
mov
pop
sbb
lret
or
rcll
or
or
aam
jae
sbb
psubb
add
mov
shll
fwait
pop
jnp
jb
arpl
push
gs
fstpl
insb
insb
mov
push
sub
stos
or
test
xor
adc
ficoms
sub
out
sub
jae
xlat
inc
inc
dec
les
pusha
fstpt
ds
std
xchg
push
mov
dec
jp
mov
mov
jo
jp
or
or
scas
in
pop
test
inc
idiv
pop
mov
loopne
sbb
scas
push
test
loopne
pop
ss
incl
or
in
arpl
cli
jnp
mov
cmpsb
repz
mov
pop
add
fmull
cwtl
sub
or
decl
das
iret
or
rorb
lret
test
leave
mov
fbstp
sbb
out
loop
lods
insb
xchg
xchg
in
jecxz
jg
jns
loopne
push
ret
cmpsb
fnstenv
jecxz
fsts
mov
movsl
dec
sbb
rorl
not
cmp
les
cmpsb
dec
and
lods
stc
nop
testb
lods
adc
gs
cmp
mov
ficoml
adc
push
rdtsc
pop
sub
aaa
stos
out
loopne
mov
mov
cmp
push
and
pop
mov
cmp
xlat
xchg
shl
loop
dec
jl
mov
lea
ja
cmp
sub
aam
hlt
push
dec
mov
xlat
mov
jnp
add
pop
int
sub
mov
push
sub
movsb
aaa
nop
stc
mov
imul
adc
mov
xchg
std
testb
daa
cmp
push
push
scas
in
bndstx
sub
mov
inc
jmp
jno
xor
jl
adc
mov
xchg
mov
dec
mov
jmp
stos
fnsave
scas
adc
imull
jne
es
jl
cmp
ret
inc
pop
enter
arpl
fldln2
or
inc
add
sarb
pushf
cmp
mov
pusha
leave
add
loopne
add
and
or
subb
mov
sub
dec
stos
sbb
pop
push
sbb
or
inc
out
imul
test
lds
xor
jbe
dec
add
out
pop
stos
mov
into
out
nop
gs
mov
shll
std
test
or
ds
and
push
dec
pop
mov
inc
mov
repz
xchg
mov
mov
adc
in
rolb
mov
xor
mov
lods
jne
pop
rcrb
lcall
data16
outsb
or
addr16
outsl
std
push
sbb
test
cmp
mov
loope
std
inc
cld
mov
out
movsl
jb
cmp
mov
mov
and
faddl
daa
and
shrl
mov
add
ja
mov
mov
pop
mov
push
fdivs
dec
add
out
xor
jb
add
shl
mov
gs
lret
cmp
inc
mov
hlt
outsl
inc
ljmp
sbb
or
jnp
ja
pushw
andl
js
sbb
repz
mov
lock
fisubrl
loope
roll
xchg
xchg
xor
mov
xor
div
mov
xchg
xchg
mov
mov
cli
jae
lcall
dec
pop
mov
popf
shl
test
inc
repnz
jae
or
sub
inc
loopne
and
push
les
mov
stos
fisubl
pop
imul
js
mov
lcall
mov
adc
or
push
push
fcmove
xlat
insb
inc
push
je
lods
lahf
xchg
xchg
icebp
mov
sub
sub
jl
pop
or
lock
iret
lock
das
mov
negb
add
test
iret
and
inc
test
and
dec
arpl
je
in
and
cmp
lahf
sbb
push
fistl
and
dec
mov
stc
inc
cmp
dec
stc
add
inc
mov
dec
inc
stos
adc
or
testl
and
pop
lcall
outsb
pop
mov
shll
aaa
mov
incl
mov
push
jns
add
adc
push
push
or
imul
in
ljmp
and
cmc
ds
inc
cwtl
aad
jae
cmp
inc
cli
imul
xor
jnp
cmpsb
outsl
shrb
out
ret
cmp
or
jge
cmp
cmc
int3
sbb
setl
or
arpl
or
incl
mov
clc
fnstenv
ret
mov
add
pop
sub
sti
add
adc
arpl
shlb
sub
jmp
xor
xor
arpl
cwtl
or
adc
les
inc
mov
mov
mov
insb
mov
cmpsb
mov
stos
bound
inc
in
movsb
and
rcrb
dec
fwait
cmp
or
cmc
push
and
adc
mov
and
fildl
popf
cmp
pop
inc
imul
cs
sub
rorl
jg
ljmpw
jnp
adc
cmp
inc
fidivrl
jnp
aam
cmpsl
add
dec
dec
xor
jmp
icebp
xor
ss
jbe
jg
jne
cmc
insl
aad
inc
pushf
mov
inc
jb
mov
cmpsb
xchg
testb
mov
dec
push
sub
adc
andl
iret
mov
push
mov
mov
push
mov
loop
xchg
adc
cmp
ds
sub
inc
sti
sbb
les
mov
test
cmp
pusha
mov
lret
push
and
arpl
je
jecxz
jns
push
fidivrl
sub
sub
popf
ss
mov
dec
andb
mov
lret
aaa
scas
pop
mov
push
popf
addr16
pop
es
ss
lret
fs
jmp
rclb
xchg
nop
sarb
int3
or
roll
sub
jbe
lret
pop
out
cs
clc
jns
dec
sub
and
push
popa
js
je
jl
xor
push
add
int3
scas
inc
or
sahf
and
out
jnp
scas
imul
shrl
push
idivl
jo
dec
orb
mov
pop
repnz
adc
mov
faddl
or
xchg
inc
add
pop
pop
hlt
sbb
adc
pop
ret
push
sbb
jle
dec
popf
fdivp
sub
stos
fcom
aad
bound
or
pop
dec
add
adc
loop
and
push
adc
inc
pop
in
push
mov
inc
scas
jge
fldenv
rcrb
xchg
lret
int3
mov
cmp
lock
mov
push
xor
mov
lods
push
pop
adc
inc
xor
jb
shr
iret
mov
adc
and
stos
pop
jo
jmp
fwait
xlat
stos
dec
lcall
inc
adc
or
xchg
das
sub
push
lahf
adc
jo
scas
lret
jne
pop
sahf
push
mov
or
dec
fistpl
add
xchg
mov
mov
inc
loopnew
gs
inc
lcall
push
stos
push
leave
std
fwait
xchg
fisubl
sbb
in
xor
inc
sub
arpl
push
cmp
ret
cmc
add
inc
mov
xor
xchg
popa
xor
gs
push
mov
adc
inc
ret
jbe
xor
stos
cmp
popf
lds
xor
sub
mov
dec
lahf
adcb
push
out
loope
xor
and
and
enter
andl
out
leave
inc
in
jge
xlat
or
sti
loopne
or
mov
les
int3
pushf
jl
icebp
xchg
mov
or
sbb
sti
sbb
xchg
cmc
mov
pop
or
in
sub
mov
xor
leave
mov
push
lock
jg
xchg
or
sbb
int
add
adc
dec
push
xchg
push
and
mov
out
jnp
les
sbb
mov
jp
outsl
test
sub
imul
xor
in
aad
sub
adc
or
lret
sbb
imul
js
test
fiaddl
jl
movsl
xchg
push
sti
lcall
push
dec
pop
or
arpl
sbb
repnz
mov
imul
xchg
cmp
ret
bound
xchg
aad
adc
div
in
adc
in
xor
jae
inc
in
insb
sbb
invd
xchg
xchg
lods
and
rcll
es
sub
mov
mov
das
in
jns
pop
in
roll
int
pop
inc
adc
shrl
frstor
xchg
adc
dec
out
xchg
movsb
lock
push
push
in
inc
aad
out
jo
mov
jae
sbb
aas
add
adc
mov
pop
scas
fstpl
cmpsl
cli
dec
fwait
sub
jns
pop
adc
cmp
jns
cs
mov
push
dec
mov
jo
adcl
sti
aas
pop
pop
insl
into
sub
dec
pushf
and
lods
dec
lahf
ret
mov
pop
pop
pushf
xlat
inc
and
push
js
sti
lds
mov
dec
jo
mov
fists
jo
insl
sub
dec
clc
inc
lcall
mov
aad
out
jle
push
mov
mov
sarb
pop
pop
push
hlt
test
push
les
in
jo
push
pusha
out
ficomps
aaa
xor
push
ret
shlb
insb
mov
and
jno
mov
cli
or
sub
std
jle
out
scas
inc
push
in
jae
mov
orl
lret
ds
xor
pop
mov
rcl
gs
out
in
push
mov
sub
dec
lret
adc
sbb
xchg
ljmp
cmp
sbb
pop
add
mov
lret
add
xor
les
xchg
test
push
xchg
lods
test
dec
lret
xchg
dec
xchg
fcom
loopne
fisubrs
sbb
out
jecxz
out
sti
sbb
gs
add
xlat
mov
jg
inc
mov
jle
mov
ret
cld
cmp
orl
fnstcw
mov
pop
mov
mov
and
pushf
pop
loopne
aad
or
incb
ret
cwtl
pop
and
dec
popf
push
dec
xchg
inc
inc
mov
sbb
adc
and
sub
jbe,pt
std
add
stos
cmp
lea
xchg
cli
inc
fs
xor
xchg
jae
push
fmull
lea
fs
xor
test
inc
gs
dec
xchg
or
adc
xchg
scas
mov
inc
inc
jmp
pop
push
jg
data16
inc
xchg
push
mov
or
insb
das
dec
mov
out
jae,pt
sub
add
clc
or
lret
addr16
sub
adc
dec
inc
jl
mov
mov
shrb
data16
xchg
lahf
add
leave
test
inc
sub
scas
cli
clc
inc
out
fimuls
inc
loop
add
int
insl
fcompp
fcmovnb
xor
lea
xlat
stos
lahf
inc
in
pop
imul
xor
jmp
cmp
js
repz
sub
pop
jmp
sbb
aaa
test
pop
sub
adc
dec
push
cltd
shll
inc
xor
mov
loopne
sbb
or
inc
jbe
add
aas
pop
mov
xchg
lret
mov
xchg
sbb
data16
andl
cmpsb
pop
adcb
jno
jp
jo
mov
mov
insl
stos
push
pop
test
bound
in
cli
add
sbb
push
pop
out
jae
mov
xor
in
inc
sbb
push
stos
xchg
adc
in
mov
adc
add
push
lea
ss
jle
lock
rcrl
loop
pop
pusha
pusha
inc
out
out
mov
mov
xorl
lea
jecxz
std
dec
mov
sub
jb
ss
pop
cmp
dec
popf
cmp
outsl
movsl
push
cmc
shl
fs
push
std
dec
pusha
push
shlb
pop
dec
xchg
ffree
repnz
cmpsb
je
ffreep
xchg
popa
std
adc
or
mov
jno
sbbb
jb
xchg
mov
mov
insl
adc
jb
push
dec
shll
pop
mov
sahf
mov
aam
inc
jg
outsb
loopne
addb
das
dec
xchg
shlb
stos
cltd
scas
cmp
fcoms
xchg
shll
add
sub
jmp
inc
add
inc
leave
mov
pusha
outsb
cmp
push
inc
inc
fcoml
ror
stos
adc
xchg
enter
sbb
movb
push
lret
inc
adc
pop
and
push
push
int3
push
mov
mov
lock
lock
and
cs
in
out
ret
or
add
xorb
arpl
js
mov
sahf
call
xchg
xlat
cmc
pop
inc
fdivrs
cmp
and
cmc
sbb
push
mov
dec
pop
adc
ss
mov
sub
aad
lcall
js
or
xchg
xchg
pop
mov
mov
ffree
cli
cmp
in
lret
dec
xchg
adcb
mov
sub
addr16
es
popa
mov
addl
pop
and
mov
addr16
int3
int3
rcrl
shl
add
pop
dec
fdivrs
bound
enter
pop
sahf
jecxz
push
or
mov
daa
sbb
clc
icebp
xor
mov
add
stc
inc
test
arpl
aad
sub
jno
dec
dec
dec
mov
cwtl
insl
lret
mov
scas
int
insb
xlat
xor
inc
enter
mov
jb
or
das
sub
sub
push
mov
pop
rorb
inc
cmp
pop
add
pop
push
cmp
insb
lods
testl
clc
ja
adc
jnp
data16
faddl
jae
xchg
inc
pop
loope
pop
frstor
jns
movl
je
jb
fyl2xp1
sub
xchg
scas
lret
pop
push
adc
push
shll
jbe
fmuls
cmp
jp
ret
push
fdivr
pop
dec
jp
inc
aad
dec
jle
jno
cmc
fs
push
shll
jp
mov
inc
es
jl
shrl
push
testb
jmp
mov
push
pop
xchg
lods
mov
sbb
call
call
push
das
cmp
cmp
jnp
mov
and
pop
sub
add
cwtl
sbb
cmp
mov
loop
xor
adc
xchg
popf
lock
dec
inc
inc
mov
call
js
gs
scas
test
push
lahf
push
xchg
adc
push
clc
movsb
aas
rclb
dec
aaa
cwtl
clc
jge
mov
push
movsl
in
push
nop
testb
lea
xchg
mov
inc
sub
arpl
lcall
jmp
cmp
fmull
adc
sub
lods
dec
xchg
add
push
add
fdivs
push
sub
dec
mov
jo
out
sbb
aas
push
fdivrs
incb
inc
test
add
ffree
aad
outsb
mov
mov
imul
add
jo
test
mov
sub
sub
push
xor
ja
negl
ss
sahf
mov
stos
and
add
mov
xchg
or
inc
xor
xchg
fmull
scas
or
mov
mov
mov
mov
es
scas
scas
inc
inc
add
add
or
add
inc
orl
in
mov
test
rcrb
mov
xchg
cli
lods
or
jnp
fdivr
mov
iret
outsb
jb
jnp
sub
cmp
loop
leave
mov
ss
fisubrs
out
fadds
jnp
nop
jle
lcall
pushf
jp
xchg
cmc
mov
nop
mov
or
dec
fidivs
imulb
mov
jbe
imul
cmp
and
aam
dec
lock
inc
pop
loope
add
push
imull
pop
inc
or
lods
in
test
mov
mov
mov
adcl
push
pop
lret
fisubrl
jge
push
in
gs
addr16
mulb
jp
call
cmpsl
xchg
bswap
and
loop
or
pop
sbb
dec
jbe
xor
fyl2xp1
test
dec
lds
insb
cmc
fiadds
gs
or
mov
adc
in
stos
dec
inc
pop
mov
lea
and
pop
mov
std
les
mov
addr16
test
jle
fwait
in
adc
scas
fwait
xchg
xchg
outsb
xchg
ficoms
xor
sub
pop
ss
daa
or
es
jecxz
pushf
mov
and
adc
subl
nop
xchg
repnz
out
and
push
ds
ret
jae
mov
in
sub
fiadds
cwtl
repnz
stos
sarb
cwtl
push
fldl
cwtl
jp
push
sub
popf
repz
js
les
repnz
filds
clc
cmp
push
stos
xchg
mov
mov
movsl
inc
xlat
les
jns
xchg
and
lahf
xchg
mov
and
sbb
push
mov
inc
and
addr16
mov
lret
inc
imulb
arpl
push
popf
push
les
xchg
aam
pop
cmpb
cmc
mov
stc
ficoms
sub
int
xor
mov
decb
xor
pop
sub
mov
dec
cmp
pop
dec
popa
pop
jnp
lcall
mov
daa
sub
pusha
and
cmpsb
jle
pop
jno
mov
dec
out
jns
add
incl
sub
xchg
pushf
push
aaa
jne
loopne
or
mov
ss
jo,pn
imul
paddw
lds
jae
fsubrl
bound
jp
xor
jb
roll
sahf
popf
sub
add
mov
je
sub
inc
or
sub
inc
std
fidivrl
iret
xor
rorb
imul
mov
dec
pop
push
std
mov
xor
sbbb
xor
out
jl
popa
scas
cmp
scas
pop
mov
shrl
scas
push
pop
pop
inc
or
sub
loop
stc
add
sub
fmull
loop
xor
lahf
fldcw
lods
shll
aaa
loop
add
inc
scas
xchg
sahf
aam
divl
or
push
outsb
pop
scas
mov
mov
test
cmp
push
cmpsb
nop
push
loopne
add
aam
mov
push
stos
cmp
dec
lahf
hlt
sti
dec
and
cmpsl
cwtl
js
push
sbb
jbe
sub
ljmp
lods
mov
js
jl
sarb
inc
loopne
loop
cwtl
mov
lea
xchg
sbb
cmp
call
aam
pop
pop
ja
nop
jg
xor
fld
dec
out
sbb
adc
pushl
xor
decb
outsl
mov
lret
sbb
bnd
jo
push
inc
and
xchg
inc
xlat
insb
jge
jp
pusha
inc
sub
scas
push
push
outsl
push
mov
xchg
mov
cli
jmp
lret
test
pop
dec
pop
jmp
and
imul
std
jo
out
sbb
clc
shrl
cmp
pop
fwait
push
xchg
fsubrl
and
and
aam
std
xor
push
jne
arpl
stos
cli
sub
inc
push
adc
dec
js
and
insl
mov
xor
inc
loope
mov
pusha
mov
scas
mov
jo
int
je
nop
mov
jge
and
outsl
call
dec
xchg
je
jge
cmp
movsl
dec
xchg
shlb
mov
jp
jne
mov
push
ljmp
cltd
and
mov
cmpsb
jnp
dec
dec
push
fwait
in
add
pop
adc
inc
cmpsl
movsb
jmp
jmp
ror
test
add
mov
jle
or
jb
movsb
pop
scas
scas
leave
xor
stc
sarb
adc
mov
mov
mulb
cmp
or
inc
into
inc
adc
fadd
jnp
subl
xor
pop
repz
cmc
movsl
hlt
mov
hlt
and
xchg
and
lods
std
inc
mov
jno
loope
jmp
shl
aam
dec
push
fs
inc
push
dec
in
int3
outsb
imul
es
scas
and
popa
xchg
cmp
jg
push
pop
ret
pop
sbb
cwtl
and
repnz
sbb
fsubrs
inc
dec
xchg
movl
jne
in
sti
mov
loope
pop
sub
hlt
mov
aaa
sub
andb
sub
clc
push
mov
inc
or
mov
mov
pusha
test
sbb
in
nop
xchg
mov
rcll
adc
lods
dec
outsb
sti
sub
fcomps
enter
out
xlat
fdiv
push
ds
cmp
push
dec
mov
scas
or
or
cwtl
lds
clc
jnp
push
hlt
push
dec
shll
xor
shll
pavgw
gs
in
xchg
iret
mov
mov
notb
test
sbb
and
mov
repz
xchg
pop
lret
cli
aam
cmp
mov
xor
xlat
mov
cld
sbb
out
pusha
jl
repz
std
xchg
data16
or
mov
aam
xlat
fldenv
xorl
aas
xlat
dec
mov
fdivrp
push
outsl
pop
jb
test
mov
std
repz
es
imul
rcll
test
mov
leave
push
ja
sahf
xorb
imul
mov
and
lock
repz
je
mov
mov
test
or
loopne
and
inc
imul
lea
sbb
shrb
movsl
je
mov
cld
lods
mov
test
or
cmp
mov
imul
popa
js
jmp
test
xchg
sbb
adc
push
pushf
adc
loop
les
pop
xlat
loope
jno
mov
cltd
fmul
jmp
and
push
fiaddl
inc
in
add
cmp
xor
sbb
imul
jae
mov
xchg
pop
dec
or
xchg
add
test
lock
mov
repz
cmp
dec
adc
shlb
xchg
dec
xchg
sahf
jecxz
gs
pop
outsb
inc
add
add
mov
mov
iret
push
push
mov
test
aaa
divb
loopne
jl
mov
loope
add
or
or
rol
daa
movsl
pop
test
pop
dec
pop
xchg
pop
sbb
lds
and
push
cmp
daa
inc
pop
inc
and
ljmp
out
cmp
cwtl
adc
xorl
sti
jl
in
inc
out
and
jnp
sub
mov
mov
pop
mov
fwait
orb
pop
cltd
pop
push
icebp
notb
jne
stos
or
movsl
jo
xlat
iret
in
add
pop
movsb
or
pushw
addb
jmp
cmp
pushf
mov
ror
or
aaa
jle
inc
xor
in
adc
lret
das
xchg
push
cmp
or
push
mov
xchg
insb
sub
pop
sub
jb
loop
mov
lahf
cmp
adc
std
stos
sub
cmp
popl
shrl
mov
sub
lcall
pop
lods
jmp
lods
fwait
iret
scas
and
and
rol
inc
icebp
push
in
dec
push
in
movsb
fisttps
or
inc
test
in
mov
cmp
jp
dec
mov
inc
sbb
fstpt
js
popa
and
out
and
mov
dec
adc
dec
cli
xor
aam
or
sbb
and
test
mov
inc
mov
lds
adcb
mov
pop
int
adc
pop
mov
call
xchg
sub
dec
aam
mov
push
and
pop
mov
imul
stc
repz
add
aam
xor
dec
adc
mov
inc
add
repz
lods
dec
sbb
cmpsl
adc
or
inc
add
mov
lea
ss
xchg
inc
sbb
mov
push
sbb
inc
fdivrl
xchg
fisubrl
mov
test
inc
xor
sbb
mov
xchg
enter
sbb
insl
scas
test
mov
hlt
in
pusha
insb
jle
sbb
inc
jmp
leave
sub
mov
mov
sub
mov
push
mov
mov
fidivrl
pop
shlb
mov
or
ret
mov
dec
movsb
pusha
rolb
or
icebp
leave
mov
pop
sub
xlat
into
pop
inc
stos
adc
push
out
add
scas
and
pop
mov
loope
jnp
out
adc
daa
movsl
ljmp
hlt
fsts
loop
cltd
movsb
loop
push
sahf
lcall
scas
jle
jmp
cmp
lcall
inc
lock
add
cltd
push
pop
or
test
sahf
ret
or
jno
outsb
les
push
sbbl
push
push
add
mov
repz
and
xor
sub
std
adc
pop
cmp
inc
and
jg
out
push
adc
push
sti
xchg
bound
mov
shr
inc
scas
bound
adc
repz
nop
and
add
cmp
movsb
dec
push
dec
jmp
jae
mov
adc
adc
jmp
xchg
loope
add
push
adc
or
loope
notb
dec
lcall
mov
mov
xor
in
pop
out
mov
icebp
dec
loop
inc
push
int
mov
mov
fwait
xchg
sahf
lret
xchg
push
inc
out
and
sbbb
hlt
dec
bound
outsb
iret
mov
fbstp
stc
imul
daa
test
xchg
out
adc
in
and
inc
inc
push
push
fidivs
lods
lret
int
jae
je
cmc
fs
xchg
adc
addr16
add
dec
or
cltd
movsb
cltd
sub
push
and
xchg
xchg
xor
jno
lods
sub
sub
dec
adc
push
cmc
nop
xlat
divb
mov
add
fmuls
and
fwait
mov
pushf
add
enter
push
inc
popf
insb
dec
lret
pop
popf
das
mov
scas
sub
cld
dec
xor
or
negb
xor
or
aas
outsl
test
nop
insl
push
out
sbb
xor
test
popa
repz
or
mov
push
add
jmp
inc
test
mov
das
lea
sbb
and
jmp
adc
lcall
aaa
xor
lret
arpl
xor
aam
dec
inc
rorl
nop
sbb
xchg
and
jno
push
push
nop
stc
add
mov
imul
rcll
dec
rolb
aaa
sbb
popa
into
mov
sub
jbe
mov
pusha
and
sahf
fld
aas
es
iret
fdiv
aas
mov
jg
mov
jns
loopne
mov
scas
cmpsl
dec
dec
mov
or
pop
push
fstps
sbb
fisttpll
xchg
mov
add
xor
test
sub
clc
and
andl
mov
fyl2x
sbb
mov
adc
xorl
fucomip
test
and
loope
out
push
xor
cmc
jl
out
push
lock
xlat
movsl
lea
outsl
sbb
rorl
lret
cmc
fdivr
fs
xlat
push
out
mov
repz
shl
mov
test
dec
js
je
and
xchg
ds
movsb
inc
or
ror
pop
icebp
inc
mov
xchg
mov
add
js
es
push
inc
mov
xor
xchg
rcll
mov
push
aad
mov
mov
daa
cmp
xchg
sti
inc
imul
mov
jnp
std
out
add
or
jns
outsb
mov
adc
or
xor
mov
lcall
repz
in
mov
jne
push
mov
in
inc
sub
mov
adc
shll
dec
enter
ret
arpl
sub
inc
inc
pmulhuw
test
sbb
adc
pop
push
arpl
aas
jns
xchg
pop
into
in
cmp
ret
dec
sti
xor
sub
pop
stc
clc
cmp
fcomps
sbb
mov
push
xchg
jle
sahf
cli
sub
mov
and
ret
push
sti
cmp
mov
cmp
xchg
daa
stos
sub
pop
and
dec
mov
popf
fwait
andb
hlt
push
mov
popa
inc
xchg
inc
mov
cli
cmp
sahf
mov
mov
mov
sbb
cmpsl
cld
aaa
in
pop
mov
push
sahf
stos
stc
rcll
jb
imul
cwtl
xchg
movsb
stos
mov
adc
or
push
jp
repz
or
xor
cld
cmp
or
outsb
bound
icebp
xor
pop
incb
hlt
cmp
mov
sub
mov
cld
bound
ja
out
or
sahf
add
sbb
mov
inc
xchg
inc
fcmove
jmp
xor
jge
jo
xchg
jp
inc
adc
cld
push
lahf
dec
cmp
fidivl
mov
repnz
push
sub
mov
stos
jmp
fsubrl
push
mov
div
das
xchg
mov
add
rorb
xor
mov
cmp
or
lcall
rclb
add
mov
xchg
fcoms
xchg
xchg
cmc
psrad
or
jns
shr
imul
sub
dec
fsubl
nop
mov
or
shll
popa
add
inc
mov
xchg
add
pop
movsl
cmp
push
sbb
mov
repnz
adc
inc
test
sbb
enter
xor
xchg
loope
fbld
push
and
cli
rcr
mov
dec
xor
add
or
mov
cltd
xor
jo
jecxz
mov
pushf
jnp
jne
les
imul
and
mov
adc
inc
test
cwtl
lcall
aaa
insb
test
scas
xchg
loop
dec
fists
mov
cwtl
ja
xchg
mov
add
cmpsl
int3
shrb
mov
or
inc
xchg
xor
jno
test
jbe
xchg
sub
add
add
mov
push
xor
shlb
loop
sahf
call
sbb
inc
aas
int3
sbb
popf
outsb
jbe
test
int3
xchg
xchg
in
pop
inc
sbb
push
adc
xor
rolb
push
mov
incl
or
push
mov
shrl
push
popa
inc
push
cmp
push
cmp
popf
push
subl
mov
adc
jge
mov
and
jg
mov
fs
pushf
rolb
pop
push
fs
cs
xor
int
mov
ret
and
shrl
std
hlt
cmpsb
mov
sbb
push
rorb
cmp
sbb
int3
xchg
dec
adc
cld
popf
adc
aaa
lods
pop
jmp
sub
rcr
mov
out
dec
adc
push
sbb
adc
mov
fcmovnb
xchg
push
mov
pop
sarl
xchg
popa
frstor
cmp
lds
pop
insl
mov
cmp
nop
jae
cmp
popa
hlt
push
iret
mov
jnp
into
xchg
and
test
adc
fbstp
inc
sub
sbb
xchg
addb
inc
repnz
cmpsl
cmp
cmpsl
enter
iret
inc
mov
outsl
xchg
mov
shll
insl
push
lods
mov
inc
sbb
jo
dec
xchg
outsl
add
sbb
or
jmp
xor
mov
xchg
adcl
mov
fsub
insb
call
cmp
and
xlat
pop
loop
insl
sub
pop
shl
insl
bound
shrl
aad
push
xchg
xlat
pushf
mov
aam
imul
icebp
icebp
add
hlt
jns
dec
out
stos
cli
leave
cmp
ds
sbb
push
xchg
push
jbe
loope
sub
gs
add
mov
push
cmp
cmp
add
lret
call
jb
add
test
xchg
int3
iret
cmp
adc
out
fcmove
in
pop
cmp
or
cld
jecxz
inc
mov
scas
pop
or
out
inc
mov
inc
push
xlat
and
loop
stos
push
inc
gs
loop
add
xor
dec
xor
sub
jg
jno
stos
xchg
jl
add
aaa
adc
in
cmc
inc
outsb
enter
out
xchg
pushf
mov
cmp
rcrb
les
cmp
mov
imul
jmp
jnp
test
aad
jne
cmp
std
mov
dec
mov
add
or
sub
fiadds
or
ja
mov
cmpsb
xor
cmpb
sbb
mov
mov
imull
pop
mov
xor
cwtl
push
arpl
inc
adc
sbb
sub
lea
in
lods
rorb
sbb
std
fdivl
or
into
inc
pop
mov
lods
stos
dec
aam
outsb
and
push
add
or
dec
outsl
xchg
sub
fists
xchg
xor
sbb
push
std
add
add
mov
scas
bound
scas
outsl
push
lods
xchg
shlb
movsb
mov
scas
mov
adc
out
cltd
and
out
out
xchg
cmc
subl
and
push
aas
cmp
icebp
push
arpl
mov
cmp
pusha
lret
push
jo
gs
inc
jecxz
stos
cmpsl
bound
sahf
lock
push
aaa
comiss
loopne
push
scas
dec
sub
mov
push
push
jb
mov
fisttpl
dec
push
dec
scas
fs
cmp
mov
dec
jae
add
pop
test
inc
nop
int3
jp
jne
xchg
pop
loop
popf
fwait
sti
loop
inc
cmpsl
aam
scas
sbb
not
adc
cli
aad
out
rorl
div
insl
mov
orb
sti
faddp
xor
cmp
xor
icebp
mov
ret
xor
cmc
call
leave
sub
shr
and
loopne
pop
dec
test
or
aaa
imul
push
mov
lock
or
jne
lea
cld
scas
pop
ss
cmp
add
negb
cmpb
out
loop
aas
inc
jns
iret
add
xchg
xor
stos
and
dec
sbb
inc
popa
mov
pop
push
ret
subl
sbb
sub
rol
xchg
mov
outsl
mov
sahf
cmp
dec
xchg
ljmp
imul
pop
hlt
test
push
mov
dec
mov
ljmp
jg
icebp
neg
adc
and
test
repz
sbb
in
scas
mov
clc
mov
xor
and
inc
xlat
test
pop
les
adc
in
filds
rol
jle
lods
push
mov
jns
ror
sbbl
sub
add
popf
pusha
xchg
add
and
xchg
lret
mov
shll
scas
pop
xor
push
jp
lcall
add
lock
push
xchg
or
clc
mov
inc
ret
mov
stc
pslld
xchg
and
out
jb
xor
adc
aas
dec
fsubl
or
xor
std
aas
aas
pop
hlt
addl
cltd
sti
aas
je
sahf
add
jbe
in
cmp
jge
sarb
aaa
data16
aas
ljmp
mov
pushf
pop
gs
jno
std
test
popf
scas
xor
or
pop
fisubrl
stos
in
fs
movsb
test
mov
adc
loope
add
add
pop
adc
jne
cmp
mov
fstl
out
sub
fs
sbb
shlb
sar
or
add
and
xchg
pushf
push
xchg
jp
aas
pop
popf
lds
std
dec
mov
or
fisttpll
jnp
jle
out
lret
fstpt
mov
push
pop
jmp
fcompl
loopne
enter
rol
push
jne
out
scas
iret
adc
xor
mov
inc
mov
lods
xor
xchg
push
jns
out
js
jp
add
xor
and
ret
jns
popa
popf
xchg
mov
repnz
cwtl
nop
and
fimull
mov
movsb
jns
je
pop
enter
mov
cmp
rcl
cmc
scas
rcrl
rcrb
sahf
mov
sbb
lret
mov
scas
jbe
call
imul
pop
aad
cwtl
sub
pushf
sub
add
sbb
je
xchg
or
sub
adc
jle
bnd
das
inc
dec
or
inc
adc
adc
add
push
xchg
adc
hlt
add
clc
lret
mov
loop
push
sti
adc
mov
add
dec
outsb
jo
or
test
mov
mov
push
lcall
out
idivb
imul
lock
jo
push
jp
clc
xor
das
push
popf
rolb
fistl
mov
cltd
add
in
mov
adc
std
xor
lods
pop
stos
es
clc
adc
insl
dec
scas
insb
imul
mov
mov
and
mov
imul
das
call
aad
mov
xchg
in
pop
leave
aam
lret
mov
inc
rcl
adc
xchg
and
add
cmc
bound
fnstcw
mov
jnp
movsb
add
and
arpl
pop
cmpsl
pop
ja
lock
push
xlat
dec
dec
sub
popf
lret
fadds
mov
sub
inc
cmc
in
out
sahf
je
xchg
cmpsb
popf
fs
xor
jns
movsl
fldenv
ja
test
or
inc
mov
jmp
dec
or
loope
cwtl
sahf
mov
push
mov
mov
popf
and
mov
jp
aad
cmpsl
loop
pop
lret
aam
shlb
pushf
in
ds
clc
adc
rorl
and
push
mov
cmp
nop
fsubs
jno
rcll
and
xchg
icebp
inc
fstpt
std
repz
cs
lret
das
cs
idivb
and
and
cmpsb
cmp
pop
adc
inc
sar
jne
inc
push
fadds
stos
sub
mov
sbb
xchg
sub
call
jmp
jp
or
mov
mov
shlb
js
mov
dec
dec
jmp
mov
cmp
dec
pop
cmp
aam
jmp
adc
mov
ss
xchg
cmpsb
xor
adc
int3
fdivrl
setg
insb
ret
push
adc
sbb
mov
mov
aas
dec
mov
push
jne
cltd
pop
adc
loop
movsl
nop
ds
fidivrl
mov
adc
jae
sbb
jno
mov
outsl
xchg
xchg
lock
mov
mov
lds
dec
iret
repz
pop
aad
dec
imul
out
and
push
std
dec
out
aad
xchg
cmp
mov
jge
out
rorl
jl
aaa
dec
aad
arpl
inc
add
loope
aam
dec
mov
push
jns
repz
dec
xchg
xchg
roll
or
insb
das
inc
das
aas
arpl
push
push
add
cmp
stc
sbb
mov
mov
mov
jp
bound
mov
lds
rorl
mov
cli
and
imul
and
neg
dec
cmc
cmp
sub
and
inc
mov
out
sbb
andb
xchg
or
pop
mov
out
and
push
and
inc
fstl
call
mov
cmc
mov
or
clc
sub
or
or
adc
gs
jns
rcrl
xor
sub
pop
fistpl
sbb
in
dec
xlat
or
mov
pop
pusha
add
testb
subl
push
cmpsl
sarb
lahf
sahf
out
dec
mov
out
inc
fstpl
xchg
fisttpll
hlt
jg
pop
jle
pop
dec
mov
xchg
andl
jecxz
sbb
cmp
dec
das
add
lods
mov
inc
mov
push
sbb
mov
lcall
stos
jae
outsb
ljmp
int3
lea
dec
inc
sti
and
fs
or
mov
lahf
sub
mov
icebp
and
cmp
and
shll
imul
pop
sarl
test
and
imul
aas
dec
inc
and
and
lds
loope,pn
loopne
outsb
test
xor
nop
loopne
aaa
sub
mov
repnz
outsb
fisubs
xor
cmp
sbb
push
fidivrs
mov
repz
out
mov
les
fnsave
sub
imul
and
into
dec
cmp
pop
push
mov
pop
leave
inc
ds
add
inc
push
mov
mov
xchg
jae
test
push
pop
xor
add
fidivrl
jmp
jmp
sbb
in
ficomps
mov
shlb
cli
jl
es
mov
hlt
test
and
cmpsb
pop
lret
rclb
sbb
push
out
jnp
push
jle
jp
add
or
pusha
push
jne
daa
inc
fnstsw
mov
pop
mov
dec
mov
mov
adc
int
dec
enter
stos
aas
or
jmp
add
aam
jne
sahf
aas
jg
mov
repnz
add
mov
mov
ret
call
stos
sbb
rclb
cmp
pop
aas
aam
sahf
adc
cmpsb
push
subl
das
int3
inc
inc
xor
rorb
xor
pop
test
ljmp
inc
inc
xchg
adc
mov
push
mulb
test
push
test
das
jge
mov
dec
mov
mov
xor
adc
and
gs
mov
jne
int
out
pop
aaa
and
jnp
jo
aad
imul
dec
jns
dec
cltd
inc
iret
sub
ficompl
adc
fdivs
sbb
movsl
dec
stos
in
mov
pop
test
push
mov
mov
lret
int
fdivrs
mov
pop
decl
insl
sub
rcrb
aad
lock
repnz
ret
scas
scas
push
cmpsb
push
vmaskmovdqu
fincstp
adc
mov
mov
adc
stos
dec
ret
inc
lahf
into
push
sbb
adc
push
pusha
mov
add
cmc
ret
stos
sahf
pop
stc
mov
aaa
lods
cmc
dec
fcmovnbe
fsubr
dec
repnz
mov
push
xor
popa
jmp
jge
push
jb
mov
gs
push
xor
inc
out
jae
mov
mov
js,pn
push
mov
insb
inc
pop
or
xor
lock
repnz
aaa
dec
aas
inc
aas
js
push
daa
jle
mov
pop
and
jb
cmp
mov
fildll
jne
add
mov
jg
inc
or
and
into
mov
incl
std
outsb
dec
mov
sub
or
stos
mov
mov
fldenv
dec
loope
and
addb
mov
lds
inc
jmp
lret
mov
imul
xor
and
loopne
jo
lcall
push
jmp
shll
mov
in
out
pop
pop
xchg
push
pop
popa
xor
or
dec
dec
push
shlb
mov
mov
xchg
push
jo
mov
fcoms
jne
mov
jp
sub
stos
insl
les
divb
dec
mov
push
sbb
mov
pop
dec
insb
leave
sub
or
pop
lds
jbe
jnp
movl
jmp
mov
push
adc
adc
cmp
das
scas
ja
cmpsl
sbb
pushf
iret
enter
pop
mov
pop
js
sti
das
js
jecxz
enter
int3
aaa
and
or
mov
les
test
loop
loop
sbb
jle
rol
mov
mov
mov
scas
mov
jns
mov
es
cmp
dec
fucomp
mov
and
push
pop
adc
int3
jb
push
push
xor
xor
int3
rorb
addr16
sbb
jmp
push
push
xchg
inc
dec
call
enter
fcoms
jecxz,pt
mov
adc
mov
cmp
mov
adc
jb
mov
push
sub
cmpsl
addr16
mov
test
and
jo
xchg
gs
and
je
xor
call
out
mov
sub
cli
ds
xor
je
pop
pushf
fldl
jne
push
popa
mov
adcl
mov
sahf
cs
addr16
in
jecxz
sub
jle
lds
mov
dec
setp
sbb
and
lret
adc
ss
dec
mov
mov
mov
cmpsl
pop
dec
mov
and
or
mov
lea
jg
push
xlat
mov
dec
or
into
lea
les
aaa
rol
lock
cmp
cmp
sbb
shrb
dec
std
sub
add
push
mov
shrl
lds
jmp
and
es
sbb
cmpb
mov
adc
fistpl
test
stos
adc
sbb
jne
adc
lods
int3
push
imul
mulb
adc
add
push
out
lods
xor
xchg
mov
mov
aaa
clc
int
fs
push
icebp
lret
push
aam
sbb
mov
lock
addr16
cmpl
inc
aad
pop
mov
and
stos
dec
adc
addr16
add
imul
sub
lahf
cmp
jmp
or
cmp
popa
outsb
sub
aam
clc
adc
mov
test
push
or
pop
jo
lret
cmp
mov
or
sub
es
cmpsl
jle
mov
cmpsb
mov
mov
insb
bound
adc
cmpsl
fnstenv
ds
pop
jno
jge
out
jg
loope
and
xchg
cmp
out
ficomps
ds
imull
out
cmp
sbbb
and
pop
rcll
rclb
push
test
ds
mov
sbb
in
andb
push
andb
repnz
orb
loop
test
adc
outsb
fidivrs
dec
pop
es
and
pop
inc
aas
shrl
mov
cld
jno
hlt
add
jb
sub
into
adc
push
arpl
out
or
test
pop
scas
aam
sbb
pop
in
mov
xor
lds
ljmp
cmp
and
mov
in
xor
sub
inc
lock
mov
add
cli
or
call
je
aad
mov
popf
ret
push
in
mov
and
ficompl
in
xchg
iret
shrl
pop
adc
xor
pop
lret
adc
mov
mov
cmp
sbb
jnp
sub
xchg
xor
or
insl
jb
pusha
stc
jbe
insb
and
or
push
mov
push
aas
xor
movsl
add
mov
mov
pusha
inc
fnstcw
add
xchg
lds
adc
xor
in
mov
xchg
mov
dec
data16
or
dec
xchg
insl
addb
int
cmp
bound
div
cmp
outsl
imul
push
pop
push
int3
mov
sti
jle
jmp
out
add
gs
sub
cmpsl
ljmp
aaa
add
sbb
sub
pop
jb
pushf
jmp
cmp
sahf
push
call
test
pop
or
add
mov
cwtl
addr16
repz
inc
sub
rcr
pop
dec
cmp
cs
sbb
add
or
mov
add
push
cmc
mov
cmp
push
dec
and
or
imul
mov
mov
push
cs
sub
lcall
cltd
mov
xchg
push
adc
int
fistpl
mov
mov
pop
cwtl
inc
movsb
das
clc
cltd
xchg
jge
or
aam
adc
push
out
mov
adc
pop
mov
push
inc
pop
mov
popf
sub
data16
pop
and
stos
cs
push
fdivrs
mov
add
mov
inc
or
das
popl
lahf
mov
push
cmc
push
sbb
pop
push
add
xchg
inc
int3
sub
adc
insb
mov
mov
inc
or
inc
sub
lods
inc
jb
fldenv
jmp
and
loope
insb
sub
dec
sahf
xchg
inc
imul
mov
mov
xlat
aam
pushf
lock
cmp
sbb
and
push
shrb
dec
idivl
jge
sbb
or
adc
outsb
jmp
out
mov
lds
pop
mov
and
or
mov
or
movsb
rep
out
and
loop
aad
daa
inc
mov
or
popf
loopne
xchg
mov
add
or
popa
inc
gs
pop
roll
mov
aam
xor
outsl
sub
icebp
jmp
xlat
jp
adc
fsub
adc
xor
shrb
sahf
add
das
ret
push
sbb
pushf
and
mov
pop
push
jae
mov
add
jp
test
out
dec
add
dec
inc
mov
push
imul
xlat
xchg
mov
leave
popf
fistpll
push
call
pop
sub
sbb
jp
pushl
jmp
mov
pop
out
mov
cmp
loop
xor
fidivrl
adc
xor
or
dec
jo
push
xlat
jno
scas
push
pop
add
in
sbb
inc
adc
mov
scas
mov
adc
push
pop
mov
mov
lods
pop
out
push
cmpsl
xchg
mov
jo
gs
ret
sub
mov
test
lock
dec
addl
cmp
lret
nop
inc
call
and
imul
mov
ss
jns
js
addb
ficoms
mov
lock
mov
fucomi
inc
sbb
pop
out
xchg
fbstp
cltd
dec
pop
cmp
mov
shlb
push
push
shlb
int
adc
pop
lret
fdivr
sub
inc
and
and
xor
incl
call
mov
arpl
ja
imul
ja
jg
sub
mov
and
cld
cli
push
jl
lods
fldt
or
dec
jmp
jecxz
fcoms
jl
sub
lods
ret
jg
and
negb
jl
addr16
in
or
add
mov
pop
shlb
sbb
insb
in
mov
dec
push
cmp
lds
outsl
mov
xchg
adc
lds
sahf
shlb
cmp
sbb
xorb
cmc
jge
call
push
fsts
aas
in
push
subb
add
pop
xchg
inc
mov
mov
scas
cmp
aas
cld
clc
in
mov
cmp
in
dec
jl
sbb
lods
out
or
pushl
orb
test
movsb
mov
addr16
jmp
adcl
aaa
lahf
test
in
mov
add
popa
subb
test
or
mov
jp
int
mov
xchg
jmp
lea
push
inc
stos
push
pop
sub
sbb
sbb
cltd
mov
int
xchg
pop
pop
test
mov
popf
or
popf
dec
pop
cwtl
mov
xchg
pop
frstor
xchg
imul
pop
pop
cmpsl
call
xor
test
mov
sbb
inc
lret
lods
fists
lock
push
adc
movsl
mov
and
mov
or
push
dec
shll
into
cwtl
js
xchg
or
or
mov
je
jle
stc
or
sbb
loop
sarb
fs
es
call
sahf
and
es
cli
ds
dec
mov
pop
push
adc
sahf
adc
inc
cltd
xor
outsb
daa
cmc
add
lret
sub
fxam
jecxz
sub
pop
fwait
add
inc
pop
pop
pop
inc
pop
push
dec
mov
pop
cwtl
xor
adc
push
inc
and
inc
fbld
sbb
sub
insb
pop
and
mov
lods
mov
push
or
dec
arpl
xchg
out
inc
xor
inc
adc
mov
jns
dec
sub
add
sbb
rcl
jp
jbe
pop
int3
mov
and
mov
jge
stos
xchg
sbbl
mov
cld
mov
fidivl
cmc
adc
lea
and
xor
mov
idiv
push
xchg
and
sbb
mov
les
add
and
mov
mov
mov
push
lahf
out
cli
lcall
out
or
inc
jle
bound
mov
sub
loope
jb
mov
inc
xor
shrl
add
xchg
adc
pop
aad
or
sub
and
les
adc
lret
js
sahf
xlat
mov
test
repnz
jne
or
add
push
mov
hlt
scas
push
pop
or
cmp
or
shl
mov
or
ja
frstor
jno
and
stos
int3
cmp
mov
out
sbb
dec
imul
loope
jg
jmp
lahf
adc
ds
mov
not
sbb
shll
lahf
lock
mov
mov
cwtl
mov
xor
sub
and
add
repz
jp
scas
sbbl
add
xor
fs
data16
mov
sub
pop
fs
push
and
pop
jae
imul
push
scas
dec
mov
add
fwait
loopne
lret
mov
das
test
test
mov
movsb
sti
je
push
mov
jp
pop
lods
jo
pop
add
xor
popa
push
fisubs
je
jne
or
cmp
lods
aad
sub
es
jmp
stos
adc
cltd
dec
mov
ss
mov
dec
int
adc
shlb
jae
out
jno
mov
pop
arpl
cmp
enter
or
lahf
int
lret
leave
add
push
sti
es
js
lcall
jbe
mov
cld
fwait
repnz
push
rolb
push
icebp
add
xor
sbb
pop
aad
test
adc
jge
xor
inc
or
push
mov
xchg
adc
sbb
dec
cld
adc
jns
sbb
mov
push
in
xchg
lret
pop
or
xchg
iret
mov
ds
xchg
shll
sbb
dec
and
pop
pop
pop
test
call
ljmp
cmpsl
imulb
aaa
out
test
pushf
jge
add
test
dec
xor
dec
mov
subl
cltd
fcomip
cmp
test
mov
push
pop
jae
jbe
in
sub
mov
in
jg
jae
lods
lret
cmpb
imul
mov
xor
testb
pop
or
adc
imul
push
adc
sbb
imul
and
jbe
xor
sub
xchg
jle
icebp
iret
add
inc
and
and
insb
fs
xor
cmp
add
xchg
das
jg
movsb
stos
imul
cmpb
pop
clc
cltd
popa
push
into
nop
mov
inc
in
adc
fidivrs
xchg
lcall
push
pop
pop
imul
aad
xor
dec
jg
mov
pop
js
mov
push
imul
ss
gs
sub
pop
mov
iret
push
add
je
rclb
push
pop
icebp
test
mov
loopne
or
ret
push
movsl
je
pop
addr16
or
sbb
in
xchg
es
push
movsl
mov
xor
mov
cmp
adc
adc
ja
xor
lods
das
lea
stos
push
jle
mov
iret
insb
insb
pop
test
pushf
pop
lods
dec
xchg
js
out
addl
adc
daa
cmp
pop
in
jmp
out
sbb
xorl
and
push
push
insl
cwtl
cs
arpl
or
cmc
sbb
scas
cli
pop
roll
mov
repz
sbbl
mov
mov
push
cwtl
mov
inc
ret
cmc
out
addr16
mov
out
add
int
push
inc
cli
adc
lret
push
divb
pop
aam
bound
or
add
sub
sbb
mov
and
sub
in
jo
dec
cmc
dec
lret
fdivs
rcl
sbb
xlat
xor
xchg
cwtl
sti
in
pop
dec
and
mov
xchg
pop
popf
sub
bound
fxch
stos
fs
nop
in
ljmp
popf
fs
push
popl
and
mov
cli
leave
gs
inc
test
sahf
mov
cmp
mov
xchg
repz
xor
mov
jo
outsb
add
and
push
js
mov
add
mov
sahf
ds
cli
and
xchg
inc
jne
dec
adc
jmp
or
enter
imul
push
mov
cmp
scas
mov
cmc
lea
adc
mov
ror
add
xor
out
sbb
lock
adc
mov
or
outsb
cmp
aam
rcrb
jmp
mov
test
dec
add
cmp
add
leave
out
in
xchg
push
sub
mov
fisubl
or
icebp
rcrl
jle
jo
popf
movsl
and
jl
cmpsb
data16
ja
and
and
nop
jmp
push
shll
xlat
fs
jg,pt
sarl
mov
mov
xor
cmpsl
fnstsw
sbb
mov
mov
ret
mov
sub
repz
jl
in
push
sbb
mov
push
dec
pop
dec
and
mov
cmpsb
out
adc
push
mov
jne
pushf
cmp
ljmp
add
dec
sbb
mov
filds
push
push
dec
and
jecxz
pop
add
and
shll
cmp
xlat
fnstcw
push
cmp
daa
cltd
dec
xlat
jno
push
jns
sub
pop
stc
jne
in
xchg
loope
inc
jge
loopne
lds
repz
ret
mov
leave
push
lds
fcmovbe
push
mov
pop
fimuls
test
and
push
push
lods
and
int3
pop
sub
add
pop
mov
addr16
je
xor
repnz
cmp
jnp
data16
and
pop
fmuls
xchg
sub
or
xchg
in
hlt
stos
fldt
adc
fistl
inc
cmc
sub
movsb
inc
mov
jne
int3
out
out
popl
and
push
xchg
in
dec
mov
pushf
xchg
lds
or
xchg
jbe
mov
xchg
fs
mov
add
push
cmp
leave
sbb
sub
pop
jo
adc
arpl
push
ficoms
fwait
stc
stc
inc
or
sub
mov
dec
faddl
addr16
in
in
push
aam
pop
pop
jnp
sbb
clc
jnp
addr16
jmp
outsl
in
mov
gs
add
jnp
in
mov
pop
jb
ja
and
dec
fistpll
push
cmp
out
popf
add
and
or
jns
int3
imul
mov
jmp
test
je
mov
adc
outsl
daa
mov
pop
insb
push
inc
jnp
add
jo
popf
or
roll
sub
adc
jbe
adc
jb
and
test
call
jmp
pop
dec
daa
push
cmp
or
test
xchg
xor
sub
test
cld
and
call
cmp
mov
mov
inc
inc
jnp
adc
subl
mov
stos
div
mov
push
push
sbb
and
mov
fcoml
push
pushf
push
jns
scas
adc
push
jmp
jbe
mov
or
mov
lcall
or
hlt
jnp
js
cmpl
fistps
fcoml
cmp
shrl
adcb
ds
mov
aad
aad
std
jae
mov
shl
xor
stos
xorb
dec
push
in
repnz
mov
inc
mov
fwait
jp
and
daa
push
mov
les
xor
pop
xor
xchg
stc
xchg
sbb
jl
mov
repz
cmpsl
push
imul
sbb
adc
lahf
pop
ds
adc
mov
into
jle
mov
push
jg
xchg
clc
jg
and
or
push
flds
imul
lcall
sti
leave
imul
and
sbb
sub
filds
in
xchg
pop
loop
pop
cmc
cli
xor
mov
clc
push
fdivl
push
sub
add
lahf
in
ljmp
dec
xchg
mov
add
arpl
das
or
mov
cmp
les
and
imul
mov
fldl
xchg
stc
aaa
incb
je
ds
xlat
dec
data16
stos
rcl
mov
test
out
shll
leave
pop
rcl
cmp
sub
stc
dec
cs
test
mov
adc
pop
inc
push
pop
loop
push
inc
xor
cmp
stc
xor
dec
add
jns
imul
xchg
sbbl
cmp
adc
push
sub
xor
clc
fcomip
out
xchg
std
push
sub
mov
cmp
cmp
es
stc
jnp
ret
aad
mov
push
leave
jne
add
pop
popf
shrb
arpl
dec
xchg
push
popf
xor
dec
addr16
loop
rorb
sub
movsb
stos
sbb
pop
fs
out
xor
push
cmp
das
mov
mov
lods
test
ds
inc
scas
in
fcmovnu
jae
add
cmp
push
outsb
cmp
leave
popa
mov
test
mov
xor
push
mov
xorb
jp
loope
dec
mov
mov
test
push
cmpsl
or
gs
ds
xor
cmc
imul
mov
lret
dec
lods
lock
and
call
adc
mov
movsl
ret
test
enter
mov
cmpsb
fdivr
call
mov
push
test
mov
jmp
jno
sarb
jns
lahf
ljmp
xor
xchg
mov
and
or
fistl
sub
fdivrp
add
sub
in
mov
and
sbb
shlb
sti
and
sbb
inc
rcll
cmova
xor
jecxz
sbb
dec
outsb
dec
int
pusha
stos
mov
cmp
jae
fbstp
push
mov
repnz
xor
inc
movsb
neg
cmc
cld
jp
jecxz
lret
mov
jne
fcmovu
mov
or
adc
in
dec
cmpsb
cmpl
inc
dec
test
int3
cli
xchg
pop
ds
outsl
ss
jecxz
test
add
test
push
cmpsl
aaa
and
in
enter
leave
add
pop
scas
cmc
ret
stc
inc
sub
aas
nop
les
push
inc
ds
jo
das
mov
call
sbb
aad
lods
insl
adc
sub
jne
and
inc
hlt
add
jge
mov
push
cmp
inc
imul
pop
xor
fsub
pushf
imul
rcrl
dec
mov
lret
xchg
xchg
or
imul
sahf
imul
test
pop
adcl
lods
pop
push
test
dec
adc
pop
popf
js
jecxz
lahf
push
mov
ret
and
jmp
sub
lahf
int
add
push
enter
mov
inc
rclb
popa
fcompl
jecxz
andb
push
gs
jmp
pop
jle
jns
mov
lods
or
xor
test
lea
mull
hlt
add
call
inc
inc
pop
imul
mov
filds
leave
adc
paddusw
mov
xor
mov
stc
mov
scas
fldt
add
shrb
xchg
mov
js
mov
xor
int3
incl
cmpsb
call
adc
dec
shl
sub
and
lds
rcl
out
push
jge
decl
out
lret
stos
lods
fsubr
or
mov
fistpll
dec
push
pop
popl
jbe
ljmp
add
gs
mov
lods
addb
mov
mov
jne
inc
out
dec
pushf
shll
insl
in
jb
mov
push
fsubrl
lods
or
lea
add
cmpsb
mov
sub
push
js
mov
xchg
sub
in
std
pushf
cmp
jae
push
in
jne
mov
mov
movsl
imul
mov
add
mov
jbe
shrb
sub
lea
int
lock
cwtl
dec
das
push
out
jno
test
outsl
push
push
sbb
enter
in
xor
ja
jae
xchg
int3
push
inc
testb
shl
and
and
das
sub
mov
movsb
and
gs
push
or
pushf
inc
xchg
test
mov
jb
ds
gs
dec
ret
sub
push
push
sub
pop
pop
adc
mov
orb
fisttpll
adc
jecxz
fdivl
push
mov
xchg
inc
mov
stos
xorb
cmp
inc
mov
pop
adc
stos
stos
pop
fcmovnb
mov
int3
lods
mov
sbb
fidivrs
out
out
sbb
dec
ss
jl
int3
lcall
or
pop
mov
inc
pusha
shll
mov
adc
xchg
and
push
mov
add
pop
mov
inc
ja
sub
add
or
push
insl
adc
xchg
ret
mov
jl
fcomps
or
jl
xchg
pop
mov
out
fadds
out
dec
add
popf
into
cld
mov
stc
cmp
xlat
dec
insl
mov
cmc
mov
shlb
push
jnp
sbb
xor
shrb
cs
jge
fs
mov
sbb
jge
aas
test
addb
ret
adc
cs
nopl
js
jns
xchg
andb
jle
in
push
lds
imul
clc
cmp
mov
fmuls
or
lods
enter
sub
pop
sarb
xor
mov
mov
call
rcl
push
fidivl
sbb
fidivrl
int
pop
and
or
ret
loop
add
push
fisubs
stc
mov
mov
sub
cmp
imul
lods
add
ljmp
inc
sarl
lret
iret
add
mov
movl
adc
add
es
push
aas
mov
je
xor
fxch
mov
into
mov
fistps
cmp
mov
std
insb
ljmp
fstl
push
lds
or
dec
rorl
xor
push
push
insl
jnp
dec
pusha
jecxz
shr
lea
cmpsl
subl
sahf
adc
sti
inc
fimuls
shll
dec
leave
lret
lods
scas
jecxz
je
insb
push
adc
test
sbb
xor
add
inc
out
inc
mov
mov
lock
push
xchg
mov
insl
inc
dec
and
shlb
out
lret
xchg
ljmp
mov
cmpsb
or
xchg
out
add
jnp
mov
fsubs
movsb
sbb
cmp
push
mov
int3
add
lods
xchg
out
adcb
push
ja
xor
xor
xchg
fists
fiaddl
inc
icebp
cs
imul
sub
inc
inc
ficomps
cmpsb
fdivrl
fnstenv
aas
or
negl
cmp
sub
push
ss
add
ss
imul
jne
dec
movsl
gs
xor
fsubs
std
cmpsb
leave
aas
mov
xchg
idivl
subl
fwait
adc
sub
test
jae
es
and
cli
mov
dec
xchg
push
lds
shrb
sbb
aad
in
jmp
aaa
lds
test
cmpsb
sbb
inc
or
test
mov
test
imul
out
dec
fsubr
xchg
ljmp
nop
add
popa
push
xor
mov
cli
stos
cli
test
sahf
in
ret
dec
std
cs
inc
push
mov
dec
mov
test
loop
addr16
mov
fiaddl
dec
std
adc
repnz
ret
inc
mov
lea
testb
gs
les
test
mov
adc
mov
es
inc
xchg
dec
adc
lret
insb
outsl
aad
jmp
and
xor
xor
fs
adc
xchg
lea
xor
clc
iret
xor
fmulp
dec
xchg
das
xor
shrl
or
mov
mov
outsl
and
xchg
test
nop
xchg
je
stc
out
shl
insl
imul
mov
inc
loop
int3
sahf
nop
mov
in
aam
ret
arpl
repz
loop
dec
ret
clc
xchg
addr16
sbb
push
dec
pusha
ds
mov
mov
out
mov
sbb
adc
daa
add
call
pop
sub
pop
lods
mov
lcall
sub
insl
and
sub
add
cltd
mov
loop
cmp
jns
and
sub
dec
int3
and
test
not
inc
mov
pushf
out
insb
cmpsb
dec
mov
xlat
popf
lds
lods
mov
in
jbe
test
xor
jne
outsl
cmp
rcll
cmp
sahf
push
sbb
push
divb
enter
xchg
pop
xlat
jecxz
adc
jbe
bound
shlb
in
xchg
kmovb
sub
dec
xchg
out
loope
movb
jne
into
out
lret
and
cmp
sahf
push
gs
out
xor
orb
mov
push
popf
jne
xchg
hlt
inc
rorl
lret
mov
lret
xchg
xchg
ret
fwait
mov
aas
ret
mov
lcall
sbbl
push
lret
loop
or
jnp
in
jne
clc
adc
push
int
mov
xchg
pop
xor
leave
fisubs
dec
imul
mov
jge
fsubrs
sbb
cmpsb
ja
pop
push
sbb
leave
js
push
cmpsb
push
movsb
int3
xor
scas
insb
or
pop
out
jne
adc
jmp
push
mov
jno
mov
push
xor
dec
or
or
lea
push
aam
jg
je
pop
lea
imul
stos
loope
repz
sub
adc
mov
adc
mov
in
inc
ss
push
hlt
jge
mov
sbb
movsb
arpl
invd
mov
mov
inc
xchg
rol
rcll
mov
push
mov
pop
js
add
push
dec
sti
lret
scas
mov
cmpsl
xor
cs
xchg
xchg
pop
dec
add
imul
cmp
xor
loopne
xchg
jmp
pushf
ja
jnp
add
fwait
scas
and
js
cmpsb
mov
popl
ret
mov
mov
sub
cmpsb
imul
add
sbbl
sbb
aas
push
je
pop
push
push
or
push
xchg
lock
in
push
fldt
add
in
fbld
sbb
sbb
adc
inc
insl
cmp
mov
pop
rol
aad
sbbb
mov
xchg
ret
daa
pusha
dec
mov
ret
mov
push
jbe
jmp
dec
adc
aam
cmc
jl
add
into
adc
pop
out
bound
pushf
out
dec
call
leave
cld
clc
pop
cmc
clc
jl
mov
and
sub
lret
xchg
popa
inc
stos
pop
scas
fwait
dec
dec
adc
pop
ret
fnsave
es
xchg
ljmp
les
push
push
aad
mov
movsb
jne
test
pop
cmpsl
stos
sbbl
pusha
ds
xchg
inc
cmp
push
xor
adcl
fidivs
hlt
stos
outsl
fs
push
sub
mov
jle
push
mov
add
pusha
arpl
std
xchg
bound
icebp
inc
push
jmp
arpl
inc
mov
xor
outsl
ljmp
ss
xchg
and
loope
test
xchg
lods
xor
cmp
mov
lds
bound
icebp
xor
jae
adc
rcl
mov
jnp
fst
mov
sarl
adc
jp
xchg
dec
pusha
jb
adc
fcmovnb
int
rclb
and
aaa
push
movsb
arpl
hlt
movsb
mov
and
int
pop
sbb
enter
sub
adc
mov
cmp
ljmp
cmp
shr
adc
adc
data16
arpl
cmp
push
rcll
in
stos
mov
repnz
add
push
jne
jl
aam
cmpsl
pushf
mov
mov
push
mov
jmp
sub
fisubrs
mov
psllq
cmpsl
fistps
iret
movsb
cld
movl
cmp
or
in
xlat
dec
cmp
jnp
pushf
xchg
sbb
arpl
sbb
shlb
inc
out
jo
sub
fisubrs
push
mov
jb
mov
sbbl
paddq
pop
aam
push
stos
scas
inc
fidivs
outsb
push
sbb
sarb
jbe
out
fwait
push
pop
or
out
jne
les
cmpsb
push
data16
ficoms
or
les
pop
xchg
ja
inc
dec
les
mov
int
pop
enter
mov
enter
bound
fnstenv
stos
lret
outsl
push
push
xchg
jp
cmp
imul
xchg
daa
pushf
shl
xchg
cltd
insl
dec
jns
loop
jle
mov
jle
push
cmp
out
sub
cltd
add
roll
lcall
cli
mov
dec
xchg
mov
shrb
push
ja
fldcw
pop
push
movsl
lea
or
dec
ds
out
fwait
jmp
sub
or
jno
pop
hlt
pop
adc
pop
rcll
sub
rcll
test
iret
mov
lcall
shl
pop
ja
jae
push
pushf
testb
mov
stos
bound
shl
mov
pop
lods
leave
xor
sbbl
push
xchg
aas
xchg
and
mov
xchg
sub
fstl
mov
roll
movsb
mov
jl
jge
out
jns
push
mov
sub
adc
shll
scas
movsb
add
sub
mov
ret
outsl
pop
add
dec
imul
out
cmpsl
rorb
test
int3
inc
and
pushf
or
cmp
cmpl
mov
push
test
jae
das
cmp
fstl
test
dec
in
nop
test
mov
shrl
dec
fstps
fsubp
adcb
push
clc
pop
pop
dec
jle
mov
mov
insb
pop
mov
adc
adc
and
stos
pusha
or
cwtl
inc
xchg
dec
testl
ja
adc
dec
andl
ficoml
adc
stos
dec
rcrl
mov
pop
int
cmpsl
push
dec
fdivrl
pop
xor
pop
jp
mov
xor
shrb
rorb
sub
aam
jne
in
mov
cld
andl
ror
iret
or
pop
sub
jne
sub
sbb
mov
mov
jp
pushf
jmp
popf
insl
mov
mov
mov
pop
leave
or
std
fwait
call
repnz
leave
daa
mov
lcall
mov
sub
in
repz
adc
shll
xor
pop
and
add
lcall
or
mov
pusha
je
aad
mov
inc
mov
outsb
mov
push
jle
mov
sarb
arpl
movl
xchg
and
adc
sub
stos
test
push
lds
dec
adc
add
lods
leave
add
fisttpll
add
cltd
insb
pop
fimuls
sahf
dec
dec
aas
fcomps
aad
ds
sbb
int3
push
adc
aaa
mov
push
lods
addr16
mov
cltd
shll
pop
inc
and
in
xor
and
pop
jp
aam
or
lcall
cmp
mov
mov
repnz
push
fs
pop
mov
xor
sbb
push
test
icebp
stos
mov
stos
inc
adc
add
arpl
clc
add
cmc
outsl
pop
xor
sarl
aad
flds
mov
in
data16
inc
scas
out
ja
popa
xlat
call
shrl
or
rorb
fcoml
pop
pop
add
dec
cmp
mov
mov
lods
push
sbb
jo
jno
cmp
clc
jecxz
dec
ss
cmp
mov
add
add
lcall
insl
sbb
pop
movsl
xchg
mov
or
xor
sub
pop
rorl
mov
rorl
jo
sbb
or
lds
out
pop
push
rep
and
cmp
shr
xchg
jnp
xor
jno
stos
mov
ret
mov
mov
sub
sti
movsb
fdivp
xchg
aam
mov
cmp
add
fnstcw
mov
mov
xchg
mov
fbld
xchg
mov
mov
sub
stos
jmp
outsb
scas
ret
inc
push
dec
mov
dec
insl
shll
sbb
ljmp
ret
xor
inc
stc
pushf
cs
shll
pop
mov
popa
lods
lahf
arpl
inc
or
xlat
hlt
and
xor
xchg
xor
xlat
push
into
mov
pop
xor
dec
adc
out
mov
cli
sub
xchg
add
add
shll
cmp
lods
mov
aad
icebp
hlt
xor
scas
jmp
jbe
mov
pop
push
cld
or
jae
mov
into
and
loopne
lcall
mov
dec
cmpsl
jle
in
and
out
cmpsl
into
movsl
test
and
mov
push
and
mov
movb
push
adc
sbb
adc
sub
xchg
mov
aas
stos
out
and
dec
shrb
les
loopne
cmp
mov
cmp
adc
js
lea
and
ljmp
mov
add
ds
clc
xor
mov
lock
repnz
sub
jb
outsl
fstpl
lcall
jb
and
popa
push
and
sub
ss
imul
dec
or
push
mov
testb
or
adc
pop
hlt
emms
xor
mov
rcrl
xor
xor
sub
lret
dec
jle
lahf
jl
cmpl
push
push
adc
xchg
in
pop
push
jbe
shl
fisubrl
and
jae
popf
aad
fimuls
push
xor
sbb
mov
jmp
rcrb
lahf
clc
test
push
icebp
sub
jbe
cmc
jnp
popa
aad
fst
into
inc
shrl
push
mov
inc
xchg
popf
cmp
cmpsb
mov
adc
cmp
or
jecxz
push
adc
adc
push
sbb
call
aad
pop
add
popf
or
sub
aam
in
and
xor
and
xorb
cld
push
int
push
dec
xor
pushf
sub
sub
jle
sarb
loop
jb
mov
jg
inc
jno
mov
call
sbb
push
lahf
mov
aas
in
or
fildll
add
cmp
std
test
lea
repz
lds
sbb
test
pop
and
mov
dec
nop
lea
lret
dec
clc
sub
inc
sbb
cli
mov
ret
int
fistps
dec
push
pop
inc
mov
sti
jae
pusha
ja
xchg
repz
jnp
inc
cmc
jecxz
mov
and
push
stc
pop
movsb
sbb
dec
adc
es
jbe
in
mov
sub
jno
out
mov
mov
insb
aam
cmp
add
add
add
mov
inc
stc
inc
mov
pop
aam
and
arpl
push
push
inc
or
xchg
loope
clc
jmp
pop
push
mov
imul
sub
pop
dec
pusha
repz
loope
lods
sbb
or
rcll
out
pop
ljmp
add
mov
icebp
adc
repz
test
aam
dec
jge
mov
xor
add
repz
jnp
call
pop
sbb
mul
xchg
cmp
insb
xchg
dec
cmp
popf
sbb
push
notl
cmp
add
xlat
xchg
inc
xor
mov
adc
push
push
cwtl
lret
mov
sub
cmp
stos
push
cmp
jae
aas
popf
in
or
adc
movsb
mov
add
das
fldenv
outsb
nop
lods
xor
pop
inc
jae
mov
mov
mov
or
pusha
clc
mov
or
fcoml
mov
sub
int
jb
xchg
ja
mov
xor
and
or
jl
sar
inc
in
and
mov
sbb
lea
inc
jp
aad
addl
cld
xchg
lahf
mov
clc
testb
add
iret
inc
xor
mov
push
shl
xchg
or
add
sti
rorl
lcall
jne
mov
or
jae
pop
loope
lahf
mov
ret
jnp
stc
fcmovne
xor
mov
in
xlat
mov
nop
inc
mov
cmc
hlt
addr16
and
call
pop
jns
pop
pop
es
jb
leave
out
jno
jbe
push
icebp
adc
out
ss
test
and
lods
push
or
fsts
rcrl
push
jb
inc
jns
fs
jae
pop
or
mov
imul
unpcklps
divl
push
and
xor
mov
inc
jecxz
ljmp
adc
add
dec
mov
ds
cmc
mov
rorl
outsl
xorl
clc
icebp
inc
mov
rorb
push
out
sub
cmc
std
mov
pop
pop
push
sbb
push
fimuls
test
ljmp
js
lods
fisttpl
mov
sbb
jmp
xchg
adc
pop
dec
dec
cmpsl
fists
hlt
dec
and
fadd
mov
and
jns
mov
jg
test
cld
adc
cmp
pop
mov
pop
lock
pop
adc
cmc
lods
mov
aas
lcall
lsl
into
sub
mov
mov
bound
lds
in
cwtl
push
lcall
xlat
pop
add
repz
adc
pop
dec
arpl
mov
add
sbb
mov
std
movsb
movsb
add
cmpsl
cli
lea
mov
adc
mov
ja
test
dec
je
pusha
dec
dec
scas
je
mov
pop
dec
pusha
dec
inc
rcll
jb
lahf
push
dec
mov
mov
cmpsl
aad
mov
data16
add
xlat
mov
sarb
push
add
xchg
cmp
pop
enter
cmpsl
outsl
jl
cmp
jbe
sbb
dec
push
adc
sahf
in
addb
jne
iret
cmpsb
dec
and
nop
cmp
cltd
lds
sub
cltd
jp
xchg
test
jecxz
mov
imul
sub
adc
fucomp
or
decb
in
popf
test
sti
cs
and
sbb
xor
pushf
js
mov
popa
sbb
outsl
push
push
xchg
pop
mov
push
mov
les
idivl
mov
mov
repz
rcrb
push
pop
xchg
inc
imul
sbb
loope
hlt
pop
sbb
ret
pushf
cltd
push
pop
shrl
imul
xchg
jnp
movsb
cld
add
into
addb
pop
mov
jmp
pushf
repz
test
cmp
fst
mov
mov
out
sub
sahf
addr16
push
mov
jp
mov
jbe
or
jns
in
inc
test
adc
mov
aad
mov
dec
jl
mov
pop
add
repnz
sahf
dec
stos
fs
pop
out
loope
rclb
cs
lret
imul
es
pop
subb
int3
mov
in
leave
cli
int3
mull
add
and
dec
sbb
sub
mov
arpl
fldl
xchg
fisttpll
and
fwait
xor
push
int3
sub
mov
cmpsl
push
or
out
cmc
call
mov
int
pop
dec
mov
mov
arpl
sub
shrd
pushf
and
xor
test
inc
and
or
in
mov
cpuid
adc
mov
add
xchg
shl
cmpsb
sbb
leave
es
testl
jp
add
inc
cs
out
dec
stos
push
cmpsb
fstl
aam
xor
cltd
ret
sbb
xchg
xstore-rng
cmpsl
inc
push
inc
pop
stos
jmp
dec
stc
mov
sub
icebp
xchg
xchg
jecxz
daa
pop
xor
clc
out
lods
adc
xchg
dec
sbb
pop
les
mov
lods
push
cld
enter
sbb
bnd
pushf
mov
add
mov
inc
decl
shrl
sti
inc
or
dec
lea
imul
pushf
fistl
lea
cmpl
push
sub
scas
or
shll
xor
test
mov
inc
out
jno
and
jb
xlat
pop
push
insb
or
cmp
push
shl
xor
sbb
and
inc
jno
adc
jg
call
and
aas
mov
or
xchg
pop
push
mov
push
xor
hlt
pusha
push
insb
pop
jns
mov
xor
es
js
cmp
js
mov
lea
fdivl
shrl
mov
roll
and
leave
mov
sbb
mov
dec
push
xor
loope
adc
sahf
or
repz
pushl
mov
xor
inc
sbb
lds
lcall
lret
add
xchg
lods
cmp
mov
ds
sbbb
jle
lods
xchg
sbb
sub
and
pushf
pop
pushf
int3
add
ss
rcll
push
out
push
ds
pop
sti
in
add
dec
inc
fisubl
inc
pop
in
mov
cmp
sub
xchg
jge
pushf
sbbb
inc
xchg
xor
mov
mov
int
shll
mov
push
xchg
or
enter
jo
add
jno
jmp
lds
mov
cmp
les
and
xor
repz
pop
ret
lods
fnstsw
pop
xchg
mov
jle
push
mov
outsl
cmc
mov
push
jo
rcl
dec
cli
push
sub
add
sub
sub
sub
cld
pop
jo
xchg
test
ftst
adc
clc
mov
insl
imul
inc
aam
js
push
push
mov
jne
dec
dec
int3
sub
jmp
adc
xor
mov
mov
addr16
mov
add
out
add
dec
inc
cld
lods
add
mov
mov
insl
daa
fnsave
cmpsb
dec
push
xchg
fisubs
roll
popa
or
jo
sub
push
test
ds
jno
push
jg
mov
mov
dec
mov
mov
jo
dec
jnp
fldt
inc
and
xor
inc
xchg
or
inc
mov
in
jnp
fsubrl
jecxz
mov
shlb
insb
pop
mov
fsubrp
cmpsl
xlat
xchg
sub
jns
out
cwtl
aam
insl
pop
dec
sbb
jle
jns
inc
jge
mov
cmp
push
cli
cmp
and
sbb
mov
rcrb
int3
and
cli
jns
adc
aaa
adcl
pushf
or
test
push
pop
mov
lods
loopne
sub
ret
popa
scas
dec
aas
hlt
sti
push
push
xchg
mov
or
mov
add
adc
int
and
sarl
stos
popa
xor
lret
inc
out
dec
int
addl
xchg
lahf
or
jne
jnp
aas
push
imul
dec
mov
add
in
and
loop
ret
pop
sbb
fsub
int3
jmp
pop
jns
je
loope
sbb
das
aaa
adc
jp
test
out
inc
xor
ficompl
stc
jle
filds
sbb
add
out
scas
jnp
imul
cmp
mov
sub
sbb
dec
hlt
idiv
lahf
out
into
fisubrs
loopne
or
aad
movsb
mov
jg
out
dec
test
cmp
cmp
inc
push
push
dec
ficoms
sbb
pop
rclb
jge
fisubl
xchg
or
pop
out
cwtl
jno
arpl
cltd
int3
inc
leave
insb
lret
sub
dec
stos
lret
push
inc
fbstp
xor
mov
xchg
jbe
xchg
nop
cld
jecxz
push
xchg
pop
push
mov
cmc
mov
rcrl
jp
int3
xchg
mov
adc
cmpsb
dec
into
dec
and
lock
push
jg
sbb
sti
out
pop
pop
jae
pop
jle
xchg
push
mov
xor
xor
xor
push
cs
test
shl
adc
bound
ret
dec
lods
adc
imul
or
push
lods
setb
mov
ljmp
out
in
pop
jmp
xor
mov
shlb
push
ficompl
mov
dec
xor
jne
sub
hlt
jae
or
cmp
repnz
lcall
test
jecxz
xchg
cli
pop
cmp
es
mov
bound
lock
fiaddl
cmp
sub
inc
push
push
leave
inc
inc
loop
rcrb
fcmovbe
js
cltd
int3
and
pop
xor
es
insl
push
mov
push
sub
pusha
sbb
in
aaa
mov
out
sti
leave
insb
add
push
mov
cwtl
int3
std
mov
jbe
pop
lcall
popa
enter
xor
repnz
loopne
jle
jge,pt
scas
mov
or
ss
cs
xchg
sub
push
stos
mov
aaa
xlat
xor
outsb
mov
cmp
ds
sbb
ljmp
mov
pushf
add
or
mov
add
jo
mov
stc
pushf
scas
xor
fnsetpm(287
sub
fistpll
push
cmpsb
xor
inc
push
mov
push
out
jns
fnstsw
pop
bound
loopne
icebp
adc
dec
lods
lcall
inc
into
int
ljmp
in
imul
push
xchg
rcll
and
fmuls
dec
or
call
lds
inc
fidivl
mov
addr16
jmp
xchg
popa
loopne
add
mov
inc
or
xor
adc
mov
fscale
xor
mov
cmp
arpl
or
lock
inc
into
fidivl
int3
jne
pushf
dec
fidivrl
fildl
jb
lock
mov
jae
test
mov
jnp
mov
call
dec
add
sbb
xlat
pop
jno
mov
sbb
int3
jmp
js
jbe
lret
add
or
and
test
xor
mov
dec
jl
add
inc
cmp
out
sbb
pop
dec
sub
and
filds
dec
dec
mov
push
icebp
daa
lds
jo
dec
or
add
mov
dec
cmp
jnp
xlat
stc
test
jge
push
push
fdiv
sar
jb
pop
mov
fsts
cmc
popf
push
push
dec
cmpsl
imul
ja
dec
adc
imul
jns
pop
imul
outsb
or
arpl
in
insl
fwait
and
adc
sbb
popa
stc
sub
stos
sbb
lret
xor
nop
movsb
push
outsb
sbb
xchg
push
pop
mov
sub
movsb
shlb
inc
in
arpl
mov
pop
push
sub
inc
cmp
inc
xor
inc
data16
mov
mov
cld
fimuls
out
imul
ror
fcompl
mov
movsb
dec
push
bound
and
pop
mov
addr16
xchg
cmp
shlb
std
dec
dec
jb
xchg
dec
sbb
mov
cmc
lret
add
shlb
sub
cmc
andl
scas
xchg
inc
or
cwtl
inc
add
push
sub
jb
rcll
push
scas
clc
add
mov
push
subl
push
mov
test
data16
lcall
lds
inc
pop
jns
inc
stos
push
sbb
ds
add
cld
sbb
xor
aas
mov
and
push
outsb
pop
jmp
and
imul
scas
adc
iret
and
addl
mov
dec
mov
or
pop
pop
push
sti
mov
aaa
ss
sbb
sub
add
scas
or
xor
out
lea
ret
cmp
pop
mov
shrl
mov
mov
xchg
es
imul
dec
jp
ret
ljmp
je
mov
out
mov
ds
push
mov
mov
or
pop
pop
flds
lret
xchg
sbb
pop
mov
cmc
imul
inc
push
xor
mov
ss
loope
push
sub
int
push
iret
int
int
aas
mov
insl
into
jmp
cwtl
mov
clc
mov
jle
cmp
push
shr
push
lcall
jb
and
fistpl
mov
xchg
xchg
roll
dec
scas
shrl
xlat
lods
pop
push
loopne
push
daa
sbb
into
call
push
add
clc
push
repnz
lret
lret
add
push
sub
jnp
mov
dec
or
fsubrl
popa
idivb
loopne,pt
cmp
jl
js
loopne
cmp
out
stos
std
rorb
push
lret
rcr
and
xchg
pusha
call
and
fcmovb
movsb
sub
loop
add
cmc
aad
xchg
sub
aad
fdivrl
adc
inc
pop
out
dec
adc
addl
add
pushf
fildl
xor
call
lahf
test
ret
xor
and
mov
inc
jp
xchg
inc
outsb
jg
rcrb
in
loopne
sub
popa
cmp
adc
mov
and
jne
jne
mov
nop
dec
aad
aaa
cwtl
pop
and
jp
adc
xor
aad
pop
cmp
push
aam
hlt
inc
fsubl
call
xchg
sbb
mov
rclb
mov
pop
sub
xor
lcall
ljmp
aam
inc
lret
adc
or
and
in
dec
jne
mov
mov
addr16
mov
les
bswap
mov
adc
out
lods
out
daa
leave
loopne
and
pop
pop
mov
jmp
adc
add
movsb
xor
jl
and
add
jl
lahf
enter
lea
jmp
cmp
sub
adc
inc
push
cmp
inc
scas
or
xor
cmp
mov
inc
lock
push
repz
mov
cmpsl
shrl
jp
or
int
push
lods
or
leave
lds
mov
sbbb
icebp
ret
push
xchg
dec
stc
jmp
fidivrl
movsl
jmp
mov
sbb
inc
repz
cli
or
in
push
inc
jbe
iret
iret
xchg
rorl
sbb
mov
pop
inc
push
sbb
aad
pop
lods
xor
lahf
imul
int3
mov
fimull
xlat
scas
xor
add
adc
dec
shrl
faddl
adc
jmp
call
adc
cmpsl
add
xchg
add
sbb
inc
pusha
insb
jg
or
and
or
js
adc
scas
popa
add
in
sahf
inc
jae
push
mov
xor
mov
pop
jge
xchg
dec
jb
je
fwait
mov
out
fwait
and
sbb
lahf
cmp
stos
inc
popf
fld
xchg
in
imul
imul
data16
mov
adcl
dec
cs
or
movsb
xor
cmp
dec
mov
out
jb
xchg
jmp
cmpsb
rorl
push
add
movsb
or
outsl
and
xor
and
out
mov
in
outsb
test
mov
test
cltd
jae
xchg
jbe
sahf
sbb
sbb
fnstcw
mov
pop
push
mov
jecxz
xchg
insl
xchg
loop
sub
pop
cwtl
mov
adcl
andl
test
mov
cltd
test
mov
repnz
push
fstps
cwtl
repnz
aad
dec
mov
outsl
dec
jl
sbb
mov
jo
mov
fcomps
mov
adc
arpl
pop
leave
or
dec
push
jl
mov
cmp
cltd
mov
xor
mov
pusha
fidivl
lcall
add
das
pop
or
xchg
xchg
or
xor
testl
andb
dec
cmp
es
xchg
xchg
push
repnz
push
xor
fiadds
jg
or
loop
sub
in
aaa
xor
mov
push
cmpsl
mov
mov
imul
aas
aad
sub
in
gs
sbb
adc
dec
imul
sub
jmp
in
cmp
push
mov
fs
sarb
loop
add
pop
push
aas
subl
mov
push
sarb
xchg
jle
push
stos
addr16
xchg
stos
cltd
fwait
out
cmc
aam
pop
pushf
dec
out
adc
jbe
dec
and
sarl
mov
lahf
ret
jp
or
or
pop
stc
xchg
or
and
sbb
sbb
push
rcl
scas
insl
xor
pop
pop
in
popa
cwtl
or
mov
adc
push
out
subl
cmp
movsl
jbe
mov
mov
ret
adc
add
sbb
test
mov
cwtl
pop
sub
mov
js
out
or
shrb
inc
insb
push
mov
fisubs
cmpsb
iret
jo
stos
adc
lcall
out
inc
xor
fistps
push
stc
in
mov
add
push
sub
jl
fcos
imul
dec
adcb
xor
xor
call
sbb
test
outsl
pushf
test
sub
mov
dec
roll
bnd
inc
adc
leave
test
or
dec
adcb
cmpsb
mov
mov
xchg
pop
lahf
mov
mov
or
lcall
and
aas
mov
push
movb
push
push
pop
xchg
dec
sbbb
dec
daa
xchg
xchg
xor
imul
test
jg
pop
adc
aam
xchg
fdivs
scas
push
xor
data16
scas
dec
mov
jne
test
sub
and
mov
dec
dec
mov
movsb
addr16
and
inc
scas
push
and
ret
repz
movsl
aam
negb
shll
repnz
sub
mov
nop
xchg
sti
popa
sub
inc
cli
out
push
sahf
fildl
xchg
ja
xor
xchg
sarl
push
xchg
icebp
scas
es
std
ret
subl
shr
pop
and
int3
pop
cmp
or
mov
sti
sbb
mov
mov
int3
dec
cltd
daa
fildl
mov
frstor
pop
in
mov
add
pop
xchg
pop
jo
and
out
push
cmc
idivl
pushf
hlt
and
outsb
pusha
mov
scas
sbb
dec
pop
mov
mov
jge
sbb
lea
push
jnp
call
sub
jo
and
movsl
dec
pop
jno
aam
xor
dec
ret
jno,pt
nop
in
mov
loope
fbld
pop
add
or
xor
mov
xchg
ficomps
aas
mov
sub
pop
idivl
push
popa
movsl
jno
push
push
push
mov
inc
std
and
mov
cld
mov
inc
lock
gs
xchg
dec
in
icebp
lar
ret
push
push
mov
mov
iret
mov
and
pop
into
adc
or
out
adc
pusha
cwtl
pop
jmp
adc
sub
std
test
inc
lcall
jb
xchg
dec
xor
lock
daa
int
xchg
jnp
fstps
mov
ds
cmpsb
fwait
sbb
inc
mov
lret
sbb
pop
jecxz
xlat
out
mov
cmp
add
and
push
ret
inc
cmpsl
push
mov
sbb
lcall
push
jno
loop
cwtl
out
xchg
and
int3
fstps
sbbl
sub
fld
outsb
pextrw
cmp
xchg
les
sbb
push
xor
ss
jecxz
or
lods
lcall
arpl
inc
mov
addr16
jl
rorb
cmp
inc
ds
aaa
xor
dec
and
xchg
push
sub
loopne
sbb
insb
and
dec
loop
mov
dec
inc
bound
test
and
cld
dec
addr16
hlt
fisubl
mov
push
mov
jbe
cs
push
pop
mov
loopne
dec
mov
cmp
stos
mov
inc
dec
test
iret
or
iret
fsubl
and
in
sub
cli
cmp
pusha
cs
inc
stos
pop
adc
jle
fimull
subl
out
cmp
dec
jle
sub
jno
stos
push
and
fisubl
std
xchg
cs
in
aas
and
xlat
push
adc
jnp
lcall
shl
notl
and
repnz
popa
ds
xchg
mov
xor
sbb
pop
dec
dec
mov
movsb
sbb
mov
or
das
ss
js
ss
jo
sub
push
enter
inc
lock
mov
inc
cmc
cmpb
or
mov
sbb
mov
sub
pop
dec
loopne
fstpt
mov
outsl
lea
or
aad
fiadds
sub
inc
rorb
xchg
inc
mov
fistl
roll
les
cwtl
mov
movsl
rcl
jle
push
mov
shrl
inc
repnz
push
mov
je
mov
mov
dec
cmp
push
lods
fistps
repz
pop
dec
outsb
mov
pop
ljmp
mov
les
adcl
jno
sub
xchg
fsubl
inc
dec
movsl
fdivrs
and
push
pusha
push
imul
cmpl
lea
or
cmp
test
push
rcr
popa
push
sbb
insb
into
adc
cs
fs
xor
mov
sbb
call
mov
add
insl
mov
mov
dec
cmc
stos
addl
and
fisttpll
mov
or
or
pusha
jo
nop
mov
lds
cli
xlat
repnz
call
pop
clc
pop
iret
sahf
in
js
add
and
xlat
mov
xchg
pushf
push
sahf
push
shrb
insb
les
and
shrb
or
dec
sbb
bound
rol
pop
pop
adc
and
push
add
push
push
loope
rcrl
pop
insb
xlat
pushf
pop
jne
repnz
add
adc
into
xor
xchg
in
int
sarl
mov
inc
int
addr16
xchg
test
scas
jns
cmp
or
shlb
xor
and
xor
jecxz
pusha
inc
iret
outsb
js
sbb
enter
pop
arpl
mov
pop
lea
xchg
shr
cmp
adc
cld
es
stc
idivl
add
je
test
inc
or
or
fcmovnbe
mov
outsl
jnp
call
mov
sub
mov
dec
jne
fcmovnb
or
sub
jg
push
outsl
or
push
imul
stc
cli
xchg
jmp
popa
lds
fcompl
or
sbb
stos
dec
insb
adc
jae
jecxz
inc
cmp
insb
dec
inc
dec
xor
in
adc
dec
push
mov
mov
ret
loop
pop
pop
pusha
and
adc
test
and
adc
lahf
add
and
ret
mov
int3
or
das
inc
adc
jp
or
out
movsl
cld
push
xorb
les
test
jmp
in
jne
mov
lods
pop
adc
jmp
out
outsb
dec
pop
mov
adc
inc
outsb
adc
lret
in
or
imul
cmpsl
mov
mov
clc
cltd
movsb
inc
test
test
in
and
movsb
xchg
lret
jo
rorb
mov
xor
in
test
jl
lretw
cwtl
fimuls
mov
stos
jo
aam
push
mov
in
cld
call
ljmp
in
lods
fiadds
out
inc
std
xor
inc
outsb
std
mov
lcall
test
push
push
mov
lods
mov
sub
or
push
pusha
leave
ss
fistl
arpl
lds
lods
inc
sbb
or
xchg
dec
xor
mov
dec
jp
jecxz
stc
jl
out
in
movsb
mov
out
and
int
pusha
in
inc
pop
inc
mov
test
push
mov
call
push
imul
mov
sahf
mov
or
lret
xchg
aam
aas
xchg
rcr
cmp
cmp
stos
xlat
add
dec
outsl
jnp
adc
stos
in
inc
loope
dec
loopne
lea
stc
mov
xchg
jle
push
push
and
pop
out
int3
dec
add
mov
push
stc
jmp
jecxz
pop
pop
icebp
mov
lods
scas
es
or
xchg
mov
cltd
imul
mov
mov
adc
sbb
test
scas
lds
dec
dec
into
jge
jns
andb
sub
ret
sbb
push
das
fistps
jl
scas
repz
mov
adc
movsl
loope
cmp
dec
dec
jb
enter
mov
jnp
mov
out
adc
mov
cmp
push
dec
xor
mov
xor
roll
shlb
xorl
lods
mov
sbb
pop
inc
sbb
adc
jecxz
cwtl
and
mov
xorl
hlt
mov
pop
mov
lret
cltd
das
inc
mov
lret
mov
aaa
xor
fcomi
pop
cmp
push
jb
and
scas
iret
shr
imul
aaa
adc
lcall
lea
sub
imulb
xchg
aam
mov
mov
xor
dec
cmp
fwait
test
fistpl
in
lea
aad
add
sub
dec
and
orb
call
sub
adc
js
push
ret
sbb
sub
and
ret
jmp
xor
lds
dec
sbb
enter
shll
xor
mov
nop
cltd
xchg
mov
push
adcl
into
inc
in
inc
faddl
fwait
int
enter
into
ret
xorb
pop
and
gs
push
cld
inc
mov
adc
fcmovnu
push
mov
shlb
lea
movsl
adc
sub
enter
adc
inc
out
mov
dec
pop
outsl
repnz
and
sub
call
add
jbe
or
push
shll
push
enter
loopne
jle
jne
test
inc
mov
cld
mov
sub
pop
xchg
xor
enter
jp
xchg
test
mov
jnp
fs
sub
out
xor
cwtl
ret
lods
mov
add
shll
jno
mov
loope
loopne
test
cmp
testl
sti
xchg
test
rorl
sbb
pop
dec
loop
test
in
lahf
cmp
fninit
iret
mov
dec
xchg
or
mov
dec
mov
xor
imul
and
pop
ret
push
fnstenv
mov
pop
in
mov
in
mov
rcrb
imul
mov
xchg
sarb
sbb
loop
push
inc
mov
push
xchg
cmp
dec
mov
aaa
push
sbb
test
scas
test
jecxz
sbb
into
xchg
std
aaa
mov
mov
loop
adc
jmp
add
fildl
movsl
cmp
mov
fisttps
xchg
push
or
nop
jbe
in
inc
subb
aam
sbb
cmpsb
gs
xor
adc
lock
mov
push
or
ffreep
mov
ds
sub
or
jecxz
cmp
cltd
cmpl
ror
imul
mov
test
negl
pop
add
pop
add
push
scas
mov
sbb
mov
shlb
dec
sub
imul
mov
or
xor
into
loope
leave
pusha
outsl
cs
out
les
jbe
scas
mov
icebp
mov
mov
dec
les
jmp
cld
adc
dec
sti
and
sub
jae
js
sbb
jmp
jg
sbb
std
sbb
mov
dec
out
sbb
movsb
test
jb
jl
pop
clc
pop
shll
popa
add
push
es
adc
jle
inc
ret
in
leave
mov
fs
shlb
je
stos
jge
cli
bound
mov
scas
dec
sub
imul
out
push
aam
adc
movsl
or
inc
cmp
arpl
fidivrl
fwait
adc
push
pop
mov
out
or
lret
movsl
inc
arpl
das
fists
push
in
or
js
nop
cmp
or
mov
fbstp
push
pop
addb
sbb
cmp
sub
mov
out
mov
dec
jns
and
dec
js
xorl
lret
cld
mov
andnps
adc
mov
and
repnz
loop
sbb
sub
sar
cltd
rsqrtps
dec
mov
push
sbb
daa
cmp
repnz
pop
cli
xchg
je
mov
xchg
arpl
jbe
sahf
mov
and
sub
data16
out
enter
cmp
mov
pop
in
pop
dec
rcl
mov
data16
push
loope
pop
addb
fs
ljmp
in
lcall
in
or
out
out
icebp
lock
jne
xor
mov
jae,pt
dec
pop
fld1
push
xchg
mov
mov
xor
addr16
xchg
xor
int
fcmovbe
lods
cli
loop
loope
xorb
cmpsl
dec
sub
lods
aad
sbb
gs
test
inc
pop
popf
iret
lea
clc
cs
inc
dec
push
xchg
xchg
mov
sahf
test
leave
or
lods
in
neg
sub
inc
push
icebp
jne
or
adc
push
xchg
adc
stc
insb
mov
xchg
xchg
add
test
push
xor
pop
adc
stc
lods
or
or
bound
testb
push
jcxz
int
mov
lds
or
jecxz
out
test
test
adcb
insb
inc
pop
cmpsl
ficompl
cmp
loop
shlb
mov
testl
mov
mov
imul
cwtl
addb
sub
in
dec
or
test
je
push
add
loopne
xor
pop
inc
mov
xchg
inc
test
add
mov
xor
mov
test
lock
insb
rcr
fdivrl
sahf
xlat
fistl
push
mov
cmp
fbstp
cli
adc
add
aam
cld
add
into
loopne
daa
stos
and
fists
mov
and
push
push
loop
lods
and
decl
aas
sub
or
mov
pusha
repnz
fdivrs
xchg
cmpsl
inc
mov
je
add
sar
stos
add
test
shl
movsl
xchg
lcall
into
mov
aad
xchg
or
pop
out
cmc
mov
scas
outsb
jmp
mov
pop
fcmovne
or
xor
mull
addr16
mov
lahf
xor
leave
xchg
in
lahf
fwait
push
push
mov
inc
jne
add
nop
xor
insb
cld
shl
sbb
divl
flds
dec
adc
mov
cmpsb
jge
mov
das
mov
sub
or
adc
push
test
iret
ja
or
jecxz
adc
push
pop
mov
loope
fidivrs
add
ds
dec
call
mov
push
or
mov
mov
push
adc
dec
lods
dec
push
adc
or
push
pop
mov
stos
add
mov
shrb
xor
xchg
jo
lds
dec
and
xchg
inc
xor
mov
jb
stc
je
loop
xlat
jae
imul
je
xor
sbb
sbb
sub
pusha
repz
inc
sbb
lock
fwait
jecxz
fnstcw
cmp
cmp
inc
push
fwait
out
jl
imul
imul
test
pop
fs
xor
ja
adc
nop
iret
mov
popf
imul
and
xor
out
push
mov
and
xchg
stos
jne
dec
loop
dec
push
sti
jns
or
or
scas
cld
shrb
into
sti
jg
add
mov
add
push
xchg
pop
jb
ret
sub
ret
and
push
stos
je
pop
es
xchg
xor
aad
aam
mov
aam
fdivr
jle
jge
pop
jmp
test
mov
rorb
add
cmp
lcall
jp
cmp
mov
cmp
imul
in
cwtl
insl
call
insb
mov
jp
mov
push
dec
repz
add
sti
call
push
push
orb
popa
ucomiss
mov
or
pop
and
loop
flds
adc
out
adc
das
in
pop
dec
loope
stos
or
les
dec
movsl
movsl
lods
or
sub
pop
lret
dec
xor
loope
test
or
inc
dec
into
jp
inc
push
fistl
inc
jecxz
xchg
jo
mov
jne
movsl
dec
xchg
xor
lods
cmp
mov
sbb
adc
fcoms
dec
cs
jmp
xor
fsubl
cvtdq2ps
jmp
mov
sahf
lea
or
movsl
mov
sub
mov
dec
loop,pt
sub
movsb
jge
push
mov
cmpsb
lock
cmpsl
jp
cmp
loope
in
cwtl
mov
adc
sarb
xchg
outsl
push
mov
popa
pop
mov
test
sbb
mov
and
dec
lds
bound
xchg
loopne
subb
mov
jle
mov
mov
mov
xor
in
data16
loopne
push
xor
xor
xchg
mov
ret
mov
flds
cli
iret
dec
pop
insb
aaa
add
mov
mov
and
pop
loop
xchg
imul
ljmp
cli
loop
roll
pop
mov
sti
jg
ja
pop
mov
dec
push
jns
mov
mov
and
mov
add
mov
sarl
mov
sar
and
dec
push
or
mov
call
push
lods
dec
mov
je
cmp
cmp
adc
dec
fs
lahf
pop
cmp
loop
dec
pop
jne
mov
mov
xsha256
cmpsb
xchg
sti
mov
out
mov
dec
pop
test
sti
push
lahf
inc
cltd
xchg
mull
inc
pop
ds
sbb
xchg
leave
mov
loopne
cltd
test
jne
loope
int
insl
fstpl
dec
add
add
stos
sub
push
les
roll
test
inc
fbld
iret
pop
cwtl
dec
mov
mov
ds
mov
adc
sbb
jb
cmp
mov
xor
sub
test
or
add
stos
pop
jb
push
cld
fwait
xor
pop
cwtl
dec
cmp
xor
addr16
cwtl
iret
xor
in
sub
cmp
outsb
pop
mov
pop
stos
cmp
movsb
xlat
or
jecxz
into
dec
test
imul
sub
je
jae
and
adc
adc
mov
and
pop
cs
xchg
jnp
cwtl
adc
push
stos
loop
xchg
in
adcb
cmp
std
mov
shl
sub
jae
sbbb
sub
add
inc
pop
jo
popa
mov
shrb
mov
les
imul
mov
sub
jo
xor
xlat
lods
sub
mull
mov
nop
add
or
int3
and
out
call
shll
ja
cmpl
mov
movsb
fistl
mov
sbb
mov
fld
and
stc
nop
je
cmp
fidivrl
fld
xor
and
ja
adc
xchg
fsubr
adc
mov
int
add
and
fxtract
pop
dec
or
test
inc
shll
inc
xchg
pop
dec
popf
mov
sar
pop
inc
dec
jecxz
outsb
or
push
repnz
jg
mov
leave
add
and
cwtl
mov
dec
lahf
andb
scas
push
out
xor
mov
add
in
mov
mov
dec
dec
lahf
cmp
jecxz
jge
or
and
test
jle
cmpsl
and
sti
jge
ja
push
fsubl
mov
pop
xchg
xchg
mov
int
sub
test
lret
aad
cmc
out
lahf
mov
jb
fsubl
and
jbe
pop
in
cmp
and
jle
xorb
lods
xor
daa
out
jb
xor
hlt
mov
lods
xchg
stos
test
push
jo
imul
xor
aad
and
jnp
out
loop
xor
mov
jge
adc
lahf
fwait
cmp
sbb
cs
sub
test
arpl
dec
jge
mov
repnz
cmp
arpl
mov
les
into
shll
cmp
dec
inc
push
sbb
fcmovnbe
inc
stc
movsb
andb
lret
jo
icebp
test
ret
cs
add
insl
and
cwtl
dec
ret
mov
or
dec
mov
cmpsb
lret
sbb
fucomip
gs
pop
aad
cmp
cwtl
test
add
push
and
rorb
enter
mov
xchg
popf
inc
fs
int
or
data16
dec
jns
nop
mov
sarl
add
push
das
xchg
jo
dec
imul
arpl
inc
push
pop
push
dec
pop
jmp
into
mov
shrl
pop
mov
int
mov
mov
into
xchg
mov
dec
and
jecxz
lret
and
inc
cmpb
sarl
push
jge
dec
stos
jo
fdivrs
scas
jecxz
mov
dec
test
in
mov
nop
sub
xlat
scas
inc
cwtl
std
adcb
ja
sub
lret
fistpl
lock
sbb
outsl
xchg
add
dec
push
or
sub
push
pop
cmp
loop
or
cmp
inc
xor
mov
push
push
fstpt
lea
je
xchg
jb
aaa
sub
mov
aam
jnp
fnstenv
fwait
inc
add
aaa
pop
or
or
pop
lods
dec
xor
push
cmp
mov
and
dec
std
push
pop
sub
and
sbb
out
sbb
fs
cs
inc
xchg
xchg
mov
loop
xchg
xchg
ror
fiadds
push
pop
or
scas
xchg
aam
loope
add
into
mov
sahf
subl
mov
adc
test
andb
sub
cmc
mov
dec
jne
ds
mov
insb
inc
jl,pt
pop
sbb
cs
push
mov
or
mov
xchg
js
test
mov
cmp
negl
scas
lea
mov
push
or
sbb
arpl
mov
xchg
add
movsl
pushf
incl
sub
lods
test
ret
imul
and
movsl
jo
int
pop
and
iret
vmread
ljmp
xchg
rolb
pop
and
rorb
lcall
lcall
or
pop
inc
xchg
mov
jl
lahf
jl
lds
push
pop
push
adc
sbb
inc
aaa
mov
lahf
add
aad
or
bound
incb
mov
mov
cmp
lea
jecxz
dec
cmp
in
mov
mov
int
lds
cwtl
cmp
push
cwtl
add
fiaddl
jns
xchg
leave
fidivl
jmp
outsl
mov
je
or
insl
jge
xor
lret
jecxz
mov
and
pop
fiaddl
inc
shrb
sbb
push
xchg
xor
fiaddl
test
movsl
sahf
loop,pn
and
jg
in
in
dec
push
stos
pop
mov
rep
and
add
enter
cmp
jns
dec
dec
fnstsw
pop
test
xchg
pop
in
mov
fsubl
iret
dec
add
push
mov
xor
cli
add
lret
cmpsb
bswap
in
data16
mov
jg
mov
or
jge
ss
dec
pop
popf
inc
ret
hlt
jmp
ret
out
lret
scas
mov
out
mov
adc
mov
fsubrs
adc
sub
inc
push
cwtl
pop
mov
cmp
fwait
or
xor
jge
js
ret
cmp
xchg
iret
xchg
leave
lahf
jg
sub
enter
in
cld
fnsave
xor
icebp
cmp
in
aaa
idivl
mov
or
xchg
push
and
xchg
mov
repnz
lds
std
push
xchg
outsb
pop
out
sbb
sahf
in
cmp
pop
nop
out
mov
ds
xchg
pushf
pop
mov
mov
dec
hlt
loope
mov
xchg
hlt
lcall
and
xor
add
mov
cmp
movsb
or
add
fcmove
mov
into
xlat
jno
vmovaps
mov
inc
mov
outsl
out
mov
dec
dec
das
dec
leave
loop
jnp
pop
inc
loopne
pop
fmuls
sub
test
and
repnz
inc
xchg
dec
mov
test
stos
aas
inc
movsb
fwait
inc
cltd
arpl
pop
lret
dec
xchg
inc
cmp
lahf
shll
xchg
pushf
daa
xor
pop
jl
inc
pop
daa
pusha
cmpsl
sub
push
jp
nop
dec
add
cwtl
mov
or
push
mov
add
cmc
push
push
aad
repz
jno
dec
dec
jo
xchg
lea
adc
sbb
insb
xchg
push
pop
sbbl
mov
mov
jae
fwait
roll
outsb
jecxz
xchg
jno
repz
mov
aad
rcll
les
loope
xchg
iret
lods
leave
sub
sbb
leave
mov
data16
add
lahf
jl
xchg
mov
fnstsw
cmpsb
mov
call
and
mov
ljmp
out
pushl
shlb
in
mov
lods
push
push
pop
sbb
jae
mov
popa
notl
and
add
pop
ja
push
aad
call
testb
xor
inc
and
rclb
movsl
test
addb
pop
sub
cmp
fldt
loop
std
or
push
push
cli
loope
sub
adc
dec
xor
popa
xchg
test
repz
addl
mov
outsl
pop
jmp
dec
mov
into
dec
bound
fwait
stos
add
xchg
aad
sub
inc
push
cwtl
stos
dec
ja
ss
xorb
or
pop
xor
jl
out
or
dec
sbbb
lcall
add
or
shll
mov
in
or
andb
imul
fwait
and
and
sub
pop
sbb
ljmp
std
adc
and
jns
stc
cmpsb
dec
data16
popf
mov
fidivrs
call
jg
repnz
push
inc
dec
jl
xor
iret
cli
lret
lods
popf
push
out
pop
in
mov
push
mov
in
decb
fcmovnu
fwait
adc
pop
leave
push
adc
or
repz
mov
mov
lahf
aad
sub
imul
int3
aad
cmpsl
pop
rcll
lret
adc
sub
sub
test
movsb
cmpsl
gs
daa
ljmp
add
out
pop
pop
pop
jmp
dec
push
mov
popa
in
pusha
adc
push
or
push
inc
xorl
mov
das
jns
cmp
fwait
mov
mov
mov
inc
jnp,pn
mov
ret
jo
push
out
add
jne
fnstsw
in
icebp
jnp
mov
bound
xlat
or
or
mov
and
mov
xchg
je
mov
jge
ja
lahf
inc
xor
xlat
mov
mov
out
sarb
dec
shl
ja
and
cwtl
dec
stos
sbb
xor
lods
jmp
icebp
xchg
imul
das
nop
xchg
xchg
add
insb
push
subl
nop
fdivs
cwtl
das
aas
pop
cli
jne
lea
pushf
push
or
jge
sti
out
addr16
enter
dec
sbb
ss
scas
sahf
mov
ret
lret
inc
push
daa
inc
adc
hlt
mov
mov
add
aad
fldl
mov
daa
lock
push
push
sahf
arpl
testb
dec
pusha
in
dec
xchg
les
mov
add
rclb
xchg
lret
das
mov
int3
push
jmp
jo
in
jmp
mov
jb
mov
push
bound
add
cmpsl
fs
inc
sbb
xor
add
pop
or
ds
lods
pushf
inc
push
add
adc
fstps
xchg
push
jge
adc
mov
sti
inc
lds
or
fnstsw
sub
loopne
enter
mov
into
aam
or
sub
sub
or
cmpsl
sbb
mov
dec
and
mov
sbb
sbb
and
push
in
shlb
sub
gs
sbb
inc
inc
inc
add
call
mov
jno
fimuls
mulb
cmp
add
jecxz
mov
leave
fdivrp
jmp
add
nop
xor
sub
pusha
mov
stos
fucomip
inc
mov
imul
je
movsl
data16
mov
cmpsb
xor
sub
ja
jae
lret
loop
sub
ret
enter
sbb
jo
loopne
lods
mov
aas
ret
mov
mov
js,pt
inc
pop
or
pop
jae
rcr
addr16
sub
jp
insb
and
jle
dec
mov
adc
orb
cmp
call
cmp
jecxz
add
call
mov
testb
add
push
test
sahf
mov
add
ret
mov
and
push
stos
hlt
nop
out
icebp
mov
mov
ljmp
std
mov
cmpsb
fyl2xp1
sti
movsl
daa
movsl
mov
jl
xor
out
push
mov
push
test
mov
or
int3
push
mov
repz
pop
push
jge
ds
add
fcomi
fcmovu
addb
sbb
clc
mov
mov
mov
loop
stos
mov
pusha
rcrb
jecxz
sub
das
cmp
ficoms
subb
cmpsl
or
gs
adc
movsb
inc
insl
pop
sbb
jmp
outsl
ss
sbb
jg
mov
pop
push
jae
cmc
sbb
push
fnstcw
push
sub
sbb
xchg
idivl
inc
mov
lret
enter
push
inc
pop
mov
mov
jge
popf
rorl
xchg
xor
push
xor
ljmp
inc
out
lds
lahf
and
add
xchg
mov
sbb
daa
in
mov
and
pushf
jg
ret
lahf
mov
loope
stos
gs
int3
xlat
shl
loop
and
mov
jg
lods
into
xor
inc
jp
cli
rolb
and
lock
jb
imul
adc
adc
cmp
scas
lret
neg
ss
scas
insl
jmp
xchg
stos
add
sbb
push
push
or
adc
push
jnp
js
movntq
sub
sub
jo
sbb
stos
cmp
cmp
mov
xchg
arpl
jmp
fldt
mov
push
out
cmp
daa
out
fiaddl
push
in
out
xor
mov
pop
repz
jg
scas
dec
test
imul
enter
cmp
push
push
insb
mov
daa
add
fisttpl
stos
mov
inc
mov
dec
gs
insl
lds
movsb
ret
out
daa
dec
inc
test
push
int3
movsb
xor
scas
data16
push
leave
test
ljmp
stos
mov
and
aad
mov
frstor
pop
out
sub
ficomps
cmp
pusha
test
dec
out
mov
dec
cwtl
add
dec
mov
fdivrl
dec
jo
jno
imul
push
jmp
push
rcr
aad
mov
mov
call
jl
test
push
aam
loop
test
push
sbb
mov
notb
mov
and
fwait
sar
jns
jne
sub
shrl
mov
xor
call
sub
adc
loopne
ja
or
nop
aam
das
xchg
xchg
sub
clc
iret
sub
jns
cmc
xchg
lea
sub
imul
out
repz
les
mov
jb
jp
mov
add
xor
dec
dec
inc
mov
lcall
adc
mov
sub
lcall
es
fisttps
jno
inc
cli
cmp
push
mov
test
xchg
mov
xchg
insb
pop
add
std
movsl
roll
or
cmp
fwait
jnp
out
sbb
scas
jnp
adc
inc
or
cmp
loopne
movsb
test
shll
movsb
imul
jmp
les
popa
fidivrs
insb
push
sti
push
jp
movsl
pop
pop
repnz
imul
xchg
cmpsb
cmpsl
mov
jmp
sub
imul
test
mov
push
sbb
cmp
adc
and
mov
cs
mov
cmp
xchg
add
or
and
mov
cmp
mov
lods
adc
push
mov
out
sbb
jo
insb
outsb
int3
cmpsl
mov
jmp
ret
fmul
ss
into
mov
mov
mov
xchg
ljmp
push
mov
add
jne
jle
cmp
xor
add
inc
mov
or
sbb
lods
or
mov
lahf
enter
pop
adc
bound
fsts
loop
cmp
inc
mov
cmp
xchg
dec
test
mov
and
push
dec
roll
hlt
cmp
data16
pop
and
add
arpl
jmp
mov
cmpsb
shll
inc
aad
loop
fldt
sub
stos
xor
cwtl
ljmp
out
aaa
mov
jns
cwtl
daa
fildl
addr16
cmp
imul
sub
mov
aad
test
push
push
cmpsl
cmp
incl
lds
mov
sti
xlat
inc
cltd
xchg
jl
icebp
fwait
in
mov
adc
xchg
addr16
lea
mov
popa
in
imul
loop
push
dec
movsl
mov
out
test
cmp
dec
pop
bound
pop
loop
and
or
inc
fnsave
mov
in
sbb
cmp
test
mov
cmp
clc
fsubr
leave
mov
add
cs
push
or
mov
aad
sub
xchg
pushf
jl
arpl
inc
sahf
mov
xor
jp
xor
jge,pt
mov
mov
or
mov
adc
inc
sub
cwtl
inc
inc
mov
mov
sbbb
sbb
aad
dec
jne
cs
xor
jbe
adc
mov
and
mov
mov
add
icebp
mov
push
fstpt
ret
mov
mov
pop
lods
rcrb
push
jl
dec
jno
xor
inc
out
sti
jmp
out
jmp
dec
lahf
jecxz
cmp
mov
sbb
aas
daa
cmpsl
shrb
outsl
sbb
mov
jp
pushf
in
mov
jnp
and
fs
sbb
cmpsl
das
mov
daa
pop
cmp
aam
ds
jb
or
or
in
add
mov
cmp
int3
test
mov
jnp
sbb
ja
scas
shl
aaa
jle
dec
xchg
lea
into
push
ljmp
push
shll
or
push
xchg
push
pop
pop
popf
mov
call
xor
loope
cmp
sbb
fisubl
js
mov
fldl
inc
add
das
add
and
xor
mov
inc
repz
mov
std
adc
fstpl
mov
scas
or
enter
cmpsb
aam
pop
roll
xor
gs
loope
push
cwtl
les
jo
xor
sub
add
in
push
sub
xor
fcomps
add
dec
sbb
adc
jmp
and
jno
enter
js
pushf
rolb
ret
dec
fwait
add
pop
das
nop
jle
sbb
pop
adc
xchg
fld1
jns
pusha
mov
xchg
adc
push
push
xchg
loopne
shrl
pushf
inc
adc
notb
push
aas
jl
push
in
pop
lcall
jmp
test
sbb
pop
fisttpl
dec
push
mov
cltd
subl
ss
xchg
push
sbb
movsl
mov
in
jmp
sbb
xchg
add
ds
es
scas
fs
lcall
icebp
in
cld
pop
cld
inc
cli
lret
icebp
jle
loopne
mov
in
cmpsl
add
mov
jle
fistpl
jbe
inc
jo
pop
stos
sub
mov
jecxz
dec
sar
xchg
mov
mov
nop
cltd
decb
lret
pop
mov
mov
adc
fldl
dec
ret
test
pop
mov
mov
jl
cmp
aas
cmpb
notl
xchg
pop
push
in
pop
sahf
adc
dec
hlt
add
mov
add
sbb
mov
pop
jecxz
pusha
lret
or
xchg
mov
enter
pushf
js
and
and
mov
add
mov
shl
jge
adc
adc
scas
xor
sub
pop
push
add
hlt
pop
sbb
and
adc
jmp
ret
call
scas
mov
ret
aas
out
adc
insb
xchg
ljmp
in
mov
or
movsl
int
stos
mov
les
out
movsl
push
mov
cli
lds
mull
or
dec
loop
sbb
out
xor
adc
in
rcrb
popw
push
subb
mov
and
outsl
in
jne
push
and
inc
or
int
add
push
rcrb
test
sub
mov
les
sbb
mov
add
out
or
stos
testl
mov
outsb
sti
stc
dec
out
and
jmp
imul
xor
xchg
cmp
in
repz
dec
mov
jno
into
mov
mov
lock
pop
fwait
insb
add
push
push
jle
pop
or
jne
scas
fcoms
andl
dec
or
jg
pop
sub
xchg
xor
dec
sarl
les
cmp
sub
inc
loopne
aas
add
or
or
sbb
mov
push
sub
fisubrl
lret
pop
pop
mov
xchg
movsb
ljmp
lret
ss
sbb
arpl
adc
outsl
fnstcw
mov
push
and
fistps
mov
in
dec
sub
lods
pop
out
or
addr16
mov
sti
addl
xchg
jb
dec
cld
mov
pushf
jne
mov
aas
lret
popf
push
mov
or
in
int3
gs
lods
mov
inc
cmp
adc
cs
dec
and
dec
inc
adcl
lret
clc
and
dec
sbb
imull
aaa
adcl
sbb
sub
je
scas
mov
sbb
pop
cmp
aam
mov
rolb
fldl
or
nop
pop
jnp
sti
lahf
outsb
mov
movsb
cmp
mov
into
pop
push
lcall
cmp
jmp
and
movsb
pop
rcl
sbb
sub
sub
jle
imul
sahf
pop
dec
or
or
sub
insl
mov
pushf
sub
stos
pop
pop
les
mov
out
stos
jne
mov
add
ljmp
iret
in
push
arpl
jnp
scas
cmpsb
inc
or
adc
ja
rorb
stos
and
mov
mov
bound
sti
fcomi
stos
pop
cmp
out
mov
jle
jge
outsl
fs
into
fstl
dec
add
call
add
repz
jp
xchg
out
pop
ss
sub
movsb
pop
cmp
rcll
int
daa
mov
sub
cmp
into
iret
jg
aaa
dec
idivl
lods
or
stc
xchg
lcall
sbb
fwait
mov
cmp
sbb
ja
mov
mov
mov
push
jp
mov
inc
cmp
or
fdivrs
jge
in
ret
es
add
mov
and
mov
cmp
sarb
iret
cwtl
scas
sub
aad
in
push
call
push
mov
enter
mov
jno
pop
push
sbb
jmp
shll
or
cltd
inc
pop
aaa
int
rorb
push
lahf
inc
enter
sbb
push
cmp
xchg
inc
xor
jle
sbb
inc
push
inc
bnd
fidivrs
mov
jo
rcrb
popa
mov
lock
inc
pop
mulb
inc
xchg
jecxz
ffree
or
mov
outsl
xchg
adc
dec
addr16
lret
sbb
or
adc
cmp
sbb
pop
and
std
dec
sahf
addb
ret
push
adc
jge
movsb
dec
outsl
icebp
mov
lahf
movsl
aas
xchg
xor
imul
aas
lock
jnp
in
xor
in
inc
sarl
jmp
lret
test
sbb
xor
stc
sahf
dec
in
or
rclb
pop
sub
xor
ljmp
into
int
and
dec
imul
push
das
test
jno
movsl
push
out
rolb
inc
cwtl
xchg
mov
adc
push
sbb
lds
adc
rcl
mov
shr
int3
dec
dec
jae
rcrb
into
push
dec
lock
mov
leave
cmp
push
out
dec
lahf
out
out
dec
jg
pop
push
sub
xchg
aam
adc
fstp
xor
and
pop
hlt
jmp
or
mov
adc
push
std
stos
add
imul
arpl
hlt
in
xor
int3
jns
cwtl
lods
lods
rolb
jae
int3
out
out
mov
ljmp
call
xor
rolb
aas
mov
and
push
test
mov
pop
scas
mov
jmp
icebp
out
add
mov
test
daa
decl
sbb
ja
cmp
push
fldl
mov
mov
xor
in
cmp
mov
xchg
mov
test
and
outsl
sbb
sti
test
mov
aas
mov
test
mov
or
mov
push
push
cmp
or
mov
cmp
sub
or
cmp
jecxz
adc
sbb
fldcw
sub
icebp
sub
std
arpl
imul
push
fimuls
imul
insb
jns
and
adc
push
cs
add
roll
gs
mov
mov
jmp
adc
outsl
test
inc
sub
out
jmp
aad
pusha
adc
jp
aaa
dec
fdivrs
and
idiv
cmpsl
jae
icebp
dec
popf
inc
inc
rorb
int
das
nop
dec
daa
scas
sbb
jg
out
cmp
jmp
mov
sbb
shlb
loopne
inc
push
clc
imul
shll
ud2
cmp
cld
jp
int
mov
add
rorb
or
sbb
dec
or
add
xor
sub
jg,pn
push
lock
jne
xchg
inc
movsb
imul
push
or
jne
fcmovnu
mov
les
and
or
iret
aas
cmp
fimuls
pop
int3
aam
stos
mov
into
lret
and
aad
push
pop
testb
ds
adc
push
in
lock
push
xchg
or
std
push
cltd
sub
jbe
outsb
push
sbb
ja
ret
pusha
cld
std
add
mov
mov
fmull
mov
and
xchg
enter
or
and
sahf
dec
push
cld
dec
and
jno
mov
les
xor
push
ljmp
sub
movsl
mov
and
aad
add
lods
sub
jnp
add
test
test
xchg
jne
sub
stos
repz
pushf
jo
push
dec
insl
aas
fsubrs
or
push
add
mov
mov
sub
loop
paddq
out
icebp
and
outsb
add
mov
in
jge
ds
mov
push
sbb
cmp
push
inc
add
fbstp
out
xorb
xor
fs
in
mov
repnz
lock
xchg
testb
popf
imul
les
in
daa
add
mov
xchg
or
add
outsb
fists
sub
insb
dec
lods
pop
jmp
inc
jge
sub
scas
das
mov
lock
mov
ljmp
test
sbb
test
jmp
faddl
ljmp
push
loop
or
data16
dec
mov
mov
nop
out
outsb
dec
test
cmpsl
mov
mov
aaa
imul
pop
repnz
insb
mov
mov
das
stos
addr16
push
pop
and
scas
das
dec
into
repnz
shrl
test
insl
mov
push
and
push
ljmp
or
pop
push
pusha
outsl
sar
pop
jns
and
jbe
sub
leave
insl
add
adc
mov
call
cwtl
clc
ficoml
jp
sbb
aam
shl
dec
push
fistpl
movl
xor
addr16
pop
sahf
and
sbb
sahf
push
push
lods
cs
loop
mov
rol
gs
cmc
pop
pop
push
mov
cmpxchg
scas
push
sub
aad
addr16
lahf
andb
xor
movsb
out
sub
lahf
ja
fmuls
std
outsl
sub
inc
jb
jecxz
icebp
xchg
or
sbb
lods
sbb
mov
xchg
lock
lahf
mov
ds
push
jo
ja
push
mov
inc
rol
adc
sar
mov
test
fwait
dec
ljmp
imul
outsl
or
adc
movsb
cmp
push
call
insl
enter
sahf
sub
cmp
pop
dec
push
cmp
inc
push
int3
push
movb
loop
hlt
cmp
ror
xor
cs
jmp
dec
ss
cmp
cmp
xchg
pop
push
movl
cmpsb
outsb
aas
rorb
push
popl
push
mov
mov
testb
dec
out
daa
hlt
adc
iret
cmpsl
mov
cmp
jo
cmp
mov
js
dec
fbld
sub
mov
pop
lret
cs
rcrb
mov
subl
pop
dec
pop
dec
add
add
or
sbb
dec
pop
hlt
push
jae
push
and
das
ja
pop
jae
xchg
dec
ret
scas
pusha
into
inc
test
int3
pop
jle
lods
sbb
push
sub
mov
outsl
outsl
mov
ret
mov
xchg
lock
sub
xchg
jl
sbb
scas
dec
lret
push
xor
in
out
mov
mov
scas
and
lods
xor
cli
pushf
iret
mov
push
lds
jecxz
push
dec
xchg
insb
sbb
push
inc
sbb
lods
lds
pop
jnp
inc
cmp
dec
divl
mov
cmp
adc
mov
divl
fldl
jle
pushf
mov
rclb
jp
xchg
jbe
scas
call
add
in
dec
jae
adc
cmc
outsl
pop
and
sub
scas
ja
xchg
dec
mov
enter
jne
mov
lcall
hlt
test
ret
int
scas
sub
jno
into
addr16
xor
push
dec
and
xor
xor
mov
test
inc
roll
iret
les
xchg
xchg
pop
xor
mull
adc
fdivrs
lds
jnp
pop
or
pop
enter
stc
daa
mov
sbb
stos
insl
mov
test
insb
push
dec
leave
iret
ja
in
or
cmpsb
shrb
adc
inc
pushl
xchg
add
cltd
or
sbb
jecxz
push
aam
push
mov
sbb
mov
jne
scas
jl
movsb
xor
scas
push
les
arpl
push
dec
ja
cwtl
pop
stos
mov
iret
lods
xchg
push
adcb
pop
imul
neg
xor
test
pop
push
mov
adc
xchg
and
pop
into
leave
test
jmp
mov
in
xchg
pop
mov
cmpsl
fcoms
imulb
jg
cmp
repz
xchg
stos
pusha
dec
mov
sbb
push
xlat
adc
add
dec
mov
fwait
addr16
loopne
lock
and
jbe
jg
ljmp
sbb
fnstenv
insl
orb
adc
and
jle
ret
lods
aad
push
jecxz
sub
fdivl
outsb
push
stos
ds
mov
jle
xchg
dec
lods
rorl
popa
mov
sub
push
inc
loopne
xchg
iret
or
cmp
fidivs
cmpb
test
loopne
add
push
jp
fildll
insb
sub
push
xorl
sbb
inc
pop
aaa
shrl
into
xchg
jp
loopne
stos
cmp
subl
dec
sbb
or
ret
loope
mov
adc
repz
add
in
mov
add
lret
mov
dec
pop
or
dec
pop
ret
adc
cli
btr
lock
pop
pop
clc
cmp
stc
push
push
cmpsb
lods
pop
iret
pop
lods
outsb
rcrl
loop
ljmp
lret
in
pop
mov
add
lods
pop
mov
ficoms
xchg
out
jmp
or
jno
mov
push
inc
mov
js
dec
scas
addb
dec
push
xor
lcall
inc
mov
inc
xor
jecxz
fimull
pop
add
out
mov
mov
jp
xor
repnz
mov
and
pop
out
roll
scas
inc
xchg
notl
ja
incl
pushf
sub
push
adc
push
mov
hlt
cmc
arpl
lods
sub
iret
scas
out
and
cmp
add
movsb
mov
xchg
test
and
jp
mov
pop
jmp
cmpsl
xor
sti
sbb
mov
pop
cmp
in
or
faddl
mov
mov
cmpsb
dec
loopne
sbb
pop
jno
leave
or
in
jecxz
inc
mov
pop
or
inc
sbb
adc
psubw
ljmp
adc
lret
out
js
mov
in
cli
cmpsb
sbb
aam
js
fdivrl
jb
mov
cmp
cmpsb
iret
mov
adc
fistps
and
gs
insb
out
ljmp
imul
int3
cmp
movl
xor
leave
bound
xor
or
or
push
ds
add
dec
loope
push
jg
test
pop
lret
pop
mov
mov
daa
sbbl
popf
stos
xlat
adcl
jmp
jp
mov
xlat
sbb
ficoml
movb
push
pop
pushl
xor
imul
dec
ret
push
xor
lret
out
jbe
mov
or
fstps
in
rorl
mov
fsubrs
jno
das
mov
xchg
pop
jns
dec
push
popa
pop
sub
mov
shrl
addr16
int3
dec
mov
add
cmp
push
roll
shr
negl
out
mov
sbb
sub
outsl
repz
stc
rcrb
adc
lods
jg
call
dec
pop
dec
cmp
cwtl
pop
or
lock
loopne
and
lock
fwait
mov
add
fdivrs
jns
sub
xor
ss
cmp
xchg
inc
pusha
lock
mov
pop
shrl
adc
ljmp
add
movsl
loopne
jle
stc
cwtl
jp
mov
or
mov
push
pop
cld
fsubr
sbb
push
aaa
cmp
out
push
shl
sub
div
mov
cmpb
scas
mov
dec
ret
in
cld
dec
das
bound
outsb
pop
jecxz
fistl
jl
xchg
adc
scas
mov
fsubr
sbb
cmp
pop
pop
cld
pushw
repnz
fnstcw
shlb
jbe
rcrl
inc
jb
adc
rcl
add
xor
outsb
or
sub
mov
xor
add
mov
enter
pop
mov
inc
ret
subb
or
mov
jne
aam
stc
fnsave
fdivr
jo
mov
sub
out
and
adc
sub
and
add
popa
out
or
jns
int
jge
icebp
sub
add
push
daa
inc
and
push
sbb
push
popf
xchg
mov
sbb
and
test
hlt
xchg
adc
cltd
cmp
xchg
popf
jo
push
daa
sahf
js
mov
cmp
sub
push
das
imul
xchg
loope
imul
sub
pop
inc
daa
push
lahf
adc
xchg
cs
leave
mov
mov
stos
leave
mov
cmp
les
xor
popf
popf
mov
mov
aaa
lds
rcl
fistpl
jle
jns
inc
fiadds
xor
mov
sahf
or
pop
out
mov
std
and
push
movsl
das
ret
jge
test
jg
xor
push
sbb
xor
push
div
out
imul
mov
add
or
xchg
xor
xchg
in
rcrb
nop
nop
popf
xor
mov
sub
xchg
and
pop
push
gs
shll
xchg
in
sbb
repz
or
stos
pop
mov
mov
inc
fdivs
mov
push
bound
sub
aaa
pop
lcall
cld
test
mov
jp
fnsave
fists
xchg
lret
jbe
or
push
sbb
fisttpl
and
mov
mov
inc
clc
adc
adc
xor
cwtl
rcrb
mov
inc
jmp
pop
orl
jae
or
and
and
roll
or
int3
iret
dec
sar
test
pop
cmp
loop
jmp
mov
mov
lea
aam
mov
ret
imul
jne
pop
inc
outsl
clc
mov
ret
sub
inc
push
outsb
ret
test
mov
or
dec
jg
gs
cs
fdiv
dec
mov
jo
dec
add
inc
scas
out
cwtl
stos
loope
xchg
mov
aas
push
push
push
mov
mov
xor
sbb
cmp
xlat
call
mov
sub
jmp
stc
inc
jg
pop
lret
inc
lcall
xor
incb
pushl
and
ds
decb
orb
inc
cmc
lea
push
adc
in
lret
xor
add
mov
jecxz
and
add
aam
test
sbb
pop
xchg
push
jle
push
clc
pop
mov
cmp
inc
sub
fisubrs
sbb
inc
cmp
dec
or
or
stos
in
mov
pop
call
in
test
inc
repnz
aad
out
mov
nop
imul
inc
jb
mov
mov
cmpsl
pop
daa
xor
in
cmc
test
mov
pop
js
aas
push
cli
loopne,pn
loopne
subl
dec
push
les
test
inc
stc
mov
lcall
stos
push
jno
xchg
fs
pop
sti
fsubs
mov
lea
adc
orb
pop
aaa
in
sub
cmpsb
addl
ret
cmp
xor
jl
mov
roll
dec
add
sbb
scas
push
lods
jmp
jb
out
test
test
aam
shrb
mov
shrl
pop
or
cmp
mov
int
inc
aam
mov
push
mov
je
mov
mov
mov
fcomp
mov
lcall
scas
das
xchg
jge
ret
movsl
arpl
shl
xchg
out
sub
xchg
pop
xor
icebp
dec
andl
jb
jne
cltd
dec
aas
outsb
pop
shlb
jge
and
aad
fistl
in
mov
iret
cmp
mov
pusha
loopne
mov
mov
cmc
sbb
sbb
lret
mov
jo
mov
scas
mov
orl
fldenv
and
imul
pop
mov
je
enter
sub
ljmp
push
into
push
pop
scas
mov
mov
nop
jb
movb
pop
test
fcompl
mov
adc
push
push
sub
test
mov
push
pop
es
jbe
xchg
int3
xchg
mov
sub
rorl
dec
shl
pavgw
sub
and
in
pop
xchg
mov
inc
push
lods
mov
test
sbb
cmp
les
aas
stos
mov
rorl
mov
jl
mov
adc
daa
fdivr
push
mov
pop
in
mov
jnp
fstpt
push
daa
js
fs
inc
lds
jecxz
addr16
sub
cmpsl
loop
or
xor
mov
add
adc
push
cld
sar
out
dec
pop
mov
xchg
push
dec
cli
sbb
lcall
enter
lods
daa
or
inc
or
or
jns
clc
pop
aad
or
insb
fsubrl
in
into
insl
test
xchg
sbb
das
xchg
daa
pop
push
das
mov
aaa
mov
stos
aad
pop
mov
cmp
inc
sbb
pusha
stos
es
mov
cmp
lock
xchg
das
and
imul
cmpsb
sub
inc
or
lret
mov
aad
xchg
cmpsl
add
je
cwtl
inc
cmp
fcoml
or
lcall
add
pop
cwtl
adc
test
jge
cmp
bound
jge
push
fldcw
icebp
cmp
mov
es
aas
inc
xchg
sub
shr
popa
outsb
stc
dec
xchg
sbb
jae
andb
xchg
sti
int
mov
xor
jge
mov
dec
mov
cmp
jle
push
mov
out
bound
mov
push
mov
sarb
mov
enter
clc
pop
cmpsl
mov
loope
fstl
dec
pop
xchg
mov
lcall
or
dec
xorb
adc
mov
mov
ja
out
arpl
pop
popa
je
cvtps2pd
negl
fimull
jg
in
inc
mov
int
shll
mov
mov
cld
sahf
or
les
ja
std
fs
xor
push
jmp
sbb
jne
jne
inc
mov
jp
in
dec
fiadds
jg
imul
cwtl
les
loopne
xor
xchg
cmp
fstpt
cmp
repnz
and
sbb
imul
lea
pop
adc
sub
adc
outsb
sahf
inc
cmp
adc
inc
lret
and
or
mov
shrb
dec
mov
movsl
out
mov
lock
jp
test
cmp
adc
lcall
pop
jo
pop
aaa
add
out
ficoml
mov
mov
sbb
scas
into
hlt
lods
insb
sarb
loop
lods
hlt
and
fimuls
inc
inc
insb
sub
push
das
xchg
jbe
inc
movsb
cwtl
cmp
mov
loopne
dec
ror
pop
mov
ficoms
test
arpl
in
mov
and
or
pop
popf
jno
push
mov
cmp
faddl
rcrb
mov
inc
iret
mov
lcall
push
jnp
std
mov
mov
xchg
fcmovnb
mov
push
cli
sbb
mov
rorl
mov
fisttpl
loop
and
mov
cmp
loopne
xchg
rclb
jbe
mov
icebp
sub
pusha
scas
leave
lock
push
lock
push
jle
insb
addr16
cmp
test
stos
xchg
mov
lock
sbb
add
mov
lds
int3
mov
rcl
in
bound
jg
stos
shlb
push
sbb
dec
inc
xor
lods
xchg
mov
fwait
mov
dec
outsl
pmullw
pushf
mov
inc
xchg
je
ss
sub
test
popa
pushf
push
int
dec
mov
xor
jnp
loopne
jmp
aaa
push
xor
fistpl
cld
shlb
test
xor
scas
sbb
out
cmc
xchg
and
mov
pop
inc
ret
xchg
mov
insl
aad
subb
std
pop
loop
sub
in
dec
test
adc
sub
call
in
mov
neg
mov
inc
mov
sahf
adcl
mov
sahf
push
imul
adc
iret
jb
adc
and
add
jbe
test
push
fwait
pop
std
add
jbe
stc
filds
std
dec
test
inc
or
add
das
popa
mov
push
mov
test
jl
cmp
test
inc
popf
loopne
mov
pop
push
mov
iret
shl
test
sbb
aaa
xor
es
inc
pop
insb
dec
inc
test
or
and
sti
mov
push
jne
sub
mov
bound
mov
adc
dec
sub
loope
scas
lcall
push
xlat
push
fstpl
popa
scas
inc
insl
cmp
xchg
pusha
xchg
aas
pop
push
pop
mov
in
sarl
dec
aam
hlt
and
mov
dec
lcall
pop
fdivrp
lret
insl
int
sbb
push
xchg
movsl
inc
inc
xchg
aas
popf
cmp
mov
lahf
data16
inc
into
jg
scas
xor
pop
ljmp
daa
std
and
sbb
cmp
xchg
jecxz
loopne
cltd
sar
aas
fsts
notb
pop
and
xorl
sbb
xchg
jecxz
outsl
sahf
pop
in
cltd
or
fidivrs
aad
fdivr
ficoml
push
loopne
cmp
push
and
shlb
movsl
jl
xor
imul
and
xchg
aas
mov
pop
inc
xchg
and
lea
insl
mov
outsl
stos
fists
rorb
cmc
test
push
fidivrs
add
cmp
sub
sbb
push
and
sbb
push
pop
add
gs
or
mov
jae
or
cmp
mov
cli
call
lret
iret
aaa
or
dec
sbb
ds
pop
pushf
leave
loopne
adc
sub
out
mov
shll
ljmp
shlb
icebp
jmp
or
jno
cmp
icebp
clc
ss
mov
idiv
xor
fcomps
inc
frstor
and
jno
int3
jne
andb
bound
xchg
test
cmpsl
push
das
dec
xor
mov
les
mov
or
xchg
dec
in
frstor
xchg
in
mov
mov
faddp
adc
mov
dec
int
push
mov
cwtl
clc
xor
xchg
xor
es
push
cmp
xor
mov
push
lret
mov
jb
ljmp
inc
test
pop
andl
and
mov
xorb
adc
mov
ror
xchg
add
out
arpl
cld
fsubrl
sub
jnp
push
int
decl
xor
sub
and
mov
sbb
xchg
add
popf
dec
popa
pop
fadd
push
sti
insl
xchg
ds
out
hlt
stos
xorl
add
or
lods
add
leave
pop
aas
inc
jmp
mov
orb
jp
or
test
fimuls
cmpsl
in
dec
push
flds
cmp
fmull
sub
push
add
ja
jl
push
insb
and
and
mov
sub
xlat
mov
jno
add
pop
movsl
sub
cwtl
addr16
loope
mov
mov
and
mov
cmp
mov
ljmp
jle
add
pusha
pop
or
cs
ja
ss
stos
jle
xchg
testl
lods
mov
cli
neg
mov
push
sbb
in
xchg
push
testl
jecxz
inc
mov
push
jae
cmp
cltd
dec
add
rcrl
xor
xchg
inc
stos
xchg
pushf
sbb
mov
sbb
dec
jo
cwtl
ficoml
lahf
pushf
popa
mov
movsl
fstl
cld
sub
pop
icebp
mov
test
stos
fs
bndldx
jl
test
imul
ja
stc
loop
mov
movsl
adc
mov
stos
lret
aas
push
outsb
andl
clc
pop
sub
push
popa
and
push
push
mov
inc
cmp
adc
lea
mov
mov
popf
popf
cmp
adc
pop
fbld
xchg
push
jg
lock
pop
jo
out
repnz
pop
mov
arpl
pusha
add
pusha
mov
or
dec
cltd
mov
jb
fbstp
sub
push
cmpsl
xor
stc
inc
and
daa
jne
shrl
sub
push
push
dec
cs
shrb
inc
ret
loope
pop
call
mov
imul
stc
mov
pop
xchg
cwtl
jne
or
or
or
lcall
icebp
xchg
incb
out
sbb
pop
mov
lret
push
push
in
pop
rorb
in
es
xor
mov
js
stc
icebp
or
loop
aas
add
jg
xor
add
repz
lds
mov
pop
cmpsb
int3
lret
mov
scas
dec
push
mov
nop
data16
mov
cmp
popfw
jecxz
sub
js
mov
cmovs
aaa
sbb
mov
dec
sub
mov
outsb
inc
pop
cwtl
xor
test
rolb
inc
into
popf
push
aaa
ffreep
jle
inc
decb
es
and
cwtl
sub
push
sbb
mov
outsl
pop
cmp
les
dec
adc
pop
es
mov
inc
js
repz
shr
inc
sbb
and
add
jmp
push
mov
jae
adc
stos
push
lds
test
inc
repnz
cmp
dec
jle
insb
sub
mov
inc
mov
push
and
jns
je
gs
sub
std
jbe
in
cmp
lahf
adc
lea
add
mov
js
jo
clc
mov
hlt
mov
inc
divb
aam
pop
jge
xchg
scas
cmpsl
pop
adc
lods
mov
and
xchg
insl
adc
lret
cmc
adc
mov
scas
cwtl
push
call
ljmp
xchg
rolb
or
lcall
dec
dec
icebp
dec
jge
ret
movsb
xor
mov
mov
and
lds
in
rorb
inc
cli
cmp
lret
adc
pop
xchg
jle
jge
sub
and
out
jp
movb
fnstcw
popa
sti
and
push
fdivrs
int
xor
gs
lahf
dec
jo
cmp
leave
lret
sub
movlps
and
mov
xchg
or
test
aam
pop
xlat
push
xor
pushf
add
or
mov
daa
jo
and
mov
movsl
adc
push
scas
inc
jns
leave
out
repz
mov
test
or
mov
and
sub
and
mov
sub
xor
adc
push
adc
mov
ret
stos
fsubl
add
icebp
cmc
adc
jecxz
call
and
aaa
jp
fwait
or
pop
cmpsb
jae
lock
sub
sbb
test
xlat
es
bound
popa
insb
ds
and
shrb
imul
in
mov
xor
push
mov
pop
mov
adc
cwtl
adc
inc
sbb
cmp
es
cwtl
loop
inc
sbb
gs
or
cmpsl
cmp
xchg
pop
pop
pop
out
push
insl
in
insb
imul
movsb
adc
es
sub
add
push
xchg
out
lock
xor
bound
xor
lock
out
sub
xchg
sbb
movsb
cmp
push
mov
push
fnstenv
lret
cmp
push
sbb
lods
addr16
and
or
sti
call
or
lock
mov
sti
add
dec
test
inc
jp
subb
mov
test
test
in
jns
js
pop
shll
jne
jmp
pusha
mov
adc
push
mov
imul
cld
jbe
out
dec
and
les
jnp
push
fldenv
insb
ret
sbb
adc
ror
inc
xor
daa
addb
mov
in
cmc
cmp
jp
push
add
lret
ficoml
test
cmp
add
xor
stos
loopne
imul
je
fmull
shrb
add
scas
push
outsl
stc
mov
mov
sbbb
cmp
ljmp
push
push
inc
out
cmp
cli
sbb
sub
lahf
or
xor
mov
pop
sti
mov
jne
sbb
push
pusha
push
jae
mov
xor
out
and
stos
push
outsb
cmpsb
stos
outsb
out
fidivl
sbb
push
and
cmp
xchg
pop
xchg
dec
int
leave
mov
cmp
in
mov
inc
mov
shlb
out
mov
jecxz
dec
popa
into
cmp
imul
xor
mov
xor
loop
xor
jno
or
fistpl
sbb
out
and
aas
int3
cli
sub
test
mov
inc
mov
xchg
out
xchg
jmp
addr16
jb
iret
imul
ds
loopne
fidivrs
cwtl
rcrl
inc
pushf
push
out
add
jb
movb
adc
push
xlat
out
jnp
cmp
sbb
mov
arpl
or
jnp
mov
into
adc
mov
mov
cltd
dec
shll
scas
mov
jnp
mov
dec
cmpsb
cmpsl
js
push
push
mov
loopne
lock
orl
stos
xor
mov
push
xor
pop
add
negl
loopne
lret
or
mov
and
sbb
shll
mov
filds
push
test
ret
inc
sbb
cmc
repnz
sahf
mov
movsl
mov
or
pop
icebp
out
andl
xchg
mov
push
cwtl
lea
fcmovb
or
push
sub
in
call
test
mov
mov
fwait
cltd
inc
push
pop
cmc
sti
add
cwtl
dec
hlt
test
inc
fstps
std
xor
icebp
stos
cwtl
loop
rcrb
sbb
les
xor
notb
repnz
inc
mov
push
shlb
mov
add
jmp
jb
dec
mov
xchg
and
aas
xchg
insl
pop
sbb
xchg
test
mov
fiadds
sarl
aad
push
cwtl
cmp
pop
insb
repz
fs
popf
ss
cmp
xor
jae
out
push
and
pop
cmp
rol
test
mov
sub
in
mov
lods
sub
pop
test
fistpl
dec
or
push
and
mov
fsubrp
stos
jns
cmpsb
es
adc
or
outsl
lds
push
push
mov
push
stos
and
ja
clc
in
cwtl
cmp
mov
test
aaa
fcoms
pop
jns
cltd
push
cmpsb
lret
enter
pop
mov
add
inc
in
mov
loopne
sbb
jg
pop
sbb
test
adc
aas
cltd
pop
mov
rolb
rclb
mov
mov
sbb
dec
iret
ret
xor
and
sub
adcb
mov
sti
and
shlb
mov
popa
or
repz
pop
pop
in
mov
imul
xchg
dec
lret
sub
xor
repz
mov
ss
test
jge
loopne
sbbl
cli
roll
loop
out
lret
or
xlat
rorl
xchg
add
and
and
enter
mov
call
test
mov
jl
xchg
in
test
daa
and
int
xor
and
lcall
enter
xchg
xchg
mov
mov
and
pop
ds
notl
or
or
mov
jge
push
loopne
daa
dec
mov
pop
sbb
stc
or
ret
xor
and
icebp
mov
dec
jmp
adc
mov
jg
pusha
dec
add
je
inc
cs
push
mov
addl
imul
pop
lock
cmp
cs
cmc
fsubrl
gs
hlt
sub
mov
adc
jmp
xchg
jge
int3
repz
aad
in
xor
sbb
push
adc
test
mov
xor
aas
jle
insl
int
sub
push
fcoms
sbb
scas
test
jg
xor
xchg
push
mov
xor
cli
mov
cmc
mov
fmuls
mov
out
lods
loopne
mov
nop
adc
adc
and
add
pop
mov
sarb
fldt
addr16
sbb
xchg
jo
repz
scas
mov
xchg
push
inc
imul
popa
xchg
ficoms
mov
xor
je
stc
mov
mov
icebp
jg
fwait
inc
test
cmp
movsl
mov
cmp
jno
stos
cltd
mov
jnp
jo
inc
mov
jae
sub
jo
cld
leave
fwait
jno
fiaddl
xlat
lret
sub
inc
sbb
test
bound
xchg
shr
leave
sub
push
pop
jae
or
mov
nop
enter
pop
lds
cltd
addr16
mov
dec
mov
les
mov
mov
movsb
bound
mov
push
sbb
cwtl
lret
shll
inc
rcrl
add
notl
cmpl
lods
data16
jecxz
mov
stos
addb
into
cmp
xchg
sbbb
pop
scas
mov
mov
add
rcrb
mov
pop
and
int3
or
scas
ret
xchg
ficomps
lods
loope
mov
dec
push
out
mov
adc
cwtl
stos
orl
dec
or
cmp
fs
xor
cli
jo
sbb
fsubr
addr16
fmull
movsl
pop
or
mov
lock
cmpsl
sbb
daa
push
enter
pop
jecxz
add
dec
aad
mov
inc
xor
push
and
das
loope
ds
testb
sbb
inc
sti
loope
hlt
mov
lahf
mov
int
xchg
sub
dec
jo
add
mov
cmc
dec
insb
dec
xor
xchg
mov
insl
lods
cmp
fisubs
push
shll
cmp
xchg
sub
adc
test
add
insb
out
dec
xor
in
jle
push
sti
stc
orb
cmp
cmpsb
sbb
or
lods
arpl
push
push
ds
adc
xchg
xor
push
filds
add
inc
push
pop
inc
jp
mov
psllw
ds
fsub
out
mov
and
mull
mov
test
pop
or
mov
adc
xchg
push
loopne
ret
aaa
insl
mov
cmpsl
rcrl
xorps
xchg
int
jbe
push
cmc
mov
shlb
mov
cmp
mov
xchg
cmp
jnp
das
mov
divl
xchg
inc
sahf
jp
out
sub
cs
mov
dec
dec
mov
jnp
icebp
incl
pushf
push
aad
aam
out
push
sub
divb
sub
neg
test
shl
inc
lret
dec
stos
add
imul
push
push
dec
cmpsb
cltd
mov
mov
icebp
mov
cmp
jecxz
out
push
add
xchg
push
push
scas
adc
pop
out
mov
xor
xchg
mov
stos
cmpb
sub
out
mov
movsb
daa
sub
int3
inc
jl
mov
xor
into
cltd
or
sbb
mov
xorl
jnp
movsl
xchg
adc
hlt
pop
stos
adc
test
xor
jmp
cmc
xor
mul
xor
xorl
or
out
stos
mov
mov
mov
push
jmp
and
outsl
out
and
icebp
test
lcall
cld
fwait
lods
push
inc
call
add
shlb
add
and
das
sub
xchg
push
xchg
icebp
mov
dec
enter
dec
or
jno
jmp
cmp
mov
adc
jae
mov
aaa
jmp
insl
mov
rorl
mov
gs
sbb
push
fnstsw
mov
dec
jno
push
adc
into
jmp
add
mov
ss
lret
push
out
shlb
rclb
in
jae
movsl
popf
xchg
mov
cmp
mov
stos
inc
gs
hlt
sar
clc
jge
ljmp
test
xlat
and
push
lret
pop
xor
int3
xor
push
push
lds
repnz
aad
inc
ljmp
hlt
int3
dec
xor
jecxz
sti
iret
cmc
xchg
xlat
sbb
jg
cmp
imull
mov
and
scas
xor
xor
loope
lret
dec
jp
les
mov
shl
popf
dec
fsubr
sti
stos
int3
ss
fsubl
mov
ffreep
mov
gs
jns
cld
sahf
and
outsl
push
fstl
idiv
addb
xchg
scas
jno
or
mov
popa
mov
cmpsl
push
jmp
aas
fs
loopne
scas
pop
push
movsb
mov
scas
xor
rorb
pushf
sbbl
lock
cmp
add
and
iret
sub
or
cld
xchg
in
js
xchg
xchg
notl
popf
out
movsl
mov
cld
push
insl
cmp
push
movsb
add
add
test
pop
nop
and
in
sbb
adc
push
inc
cmp
bound
mov
fisttpll
hlt
bound
fcomps
stc
imul
lahf
arpl
stos
mov
dec
loope
lret
leave
cltd
pop
pop
vpshlq
gs
enter
dec
loopne
gs
js
cmpsl
push
adc
in
scas
dec
ljmp
cmpsl
dec
and
movsb
cmp
add
inc
cmp
and
addr16
push
dec
adc
insb
jle
fiadds
mov
data16
mov
call
stos
and
xor
jge
mov
pop
aas
in
lahf
sub
ds
push
loope
pop
dec
push
arpl
scas
insl
cltd
in
push
pushf
ss
aad
cmpb
cld
mov
xor
and
mov
adc
fnstenv
add
adc
jo
out
xchg
mov
leave
test
int3
jno
add
scas
clc
std
ret
and
add
rorl
rorb
cld
inc
ja
mov
aas
loope
cmp
inc
movsb
sbbb
int3
pop
out
rcrl
lods
xchg
popa
push
inc
cmp
pop
cmp
sbb
xlat
xchg
sub
and
aam
dec
mov
or
mov
mov
inc
mov
jmp
gs
mov
dec
lahf
fisubrs
sub
sub
sbb
scas
pushf
stos
enter
arpl
clc
ds
insl
and
cmp
mov
sbb
and
xchg
and
insl
mov
mov
pop
xchg
aas
xor
pop
cmc
ss
mov
or
mov
pop
push
clc
and
or
mov
imul
nop
cmp
sti
pop
ret
mov
divl
push
xor
sti
in
cmp
dec
and
xchg
test
lret
std
and
inc
outsb
jg
cmpsb
pop
mov
fwait
stos
push
faddl
mov
xor
mov
sbb
out
adc
add
xor
les
sbb
cs
stos
popa
scas
pop
xchg
mov
jo
xchg
in
cmp
and
mov
hlt
shrb
or
push
addr16
and
outsb
fildll
daa
inc
cltd
in
sub
lds
hlt
xchg
inc
aam
push
into
fwait
push
lea
pminub
and
out
cmp
ss
sbb
lock
repz
popa
pop
jle
push
push
mov
jge
hlt
cltd
outsl
in
in
paddw
iret
mov
adc
push
pushf
push
push
pop
movsb
movsb
adc
cli
sbb
add
movsl
pop
loope
dec
mov
insl
add
insl
aam
js
pop
jne
int
inc
jg
mov
jg
stos
or
and
andb
xchg
and
shll
leave
mov
jnp
in
jns
cmp
and
push
clc
cwtl
or
ds
outsl
imul
sbb
and
adcl
mov
xor
add
movsb
andl
xchg
jmp
lret
inc
lcall
es
cld
mov
lahf
inc
mov
addr16
cwtl
movsl
add
or
fldenv
pop
cmp
sub
jno
dec
mov
jp
ss
sbb
js
insl
xor
cmp
stos
push
int
dec
in
pop
push
pop
pop
push
das
cmp
cli
es
dec
int
sbb
add
push
sbb
mov
xor
xchg
leave
fwait
cmpsl
ret
jnp
push
pop
insb
stos
negb
lds
iret
push
jl
push
pmullw
cmp
inc
inc
cwtl
dec
jge
call
adc
addl
dec
jb
imul
xor
xor
and
ffreep
pop
mov
push
cltd
push
sub
sub
cmpsl
xchg
cltd
push
xor
fsubs
add
mov
fidivrl
addr16
rorb
push
ret
add
or
sahf
testb
in
cmc
dec
dec
inc
js
and
shll
jno
push
inc
push
adc
pop
push
add
sub
mov
outsl
or
sahf
iret
cmpsb
adc
inc
pop
mov
dec
push
add
stc
sbb
aad
fstp
mov
ficoms
add
mov
mov
pusha
mov
and
loopne
sti
adcl
adc
jle
pop
pusha
rclb
jl
xor
inc
push
in
mov
sub
fcmovnbe
mov
inc
sub
mov
jae
dec
or
sub
popa
cmp
dec
out
push
negb
cmpxchg
pop
ret
out
lods
inc
push
repnz
jp
insl
xor
xor
insb
stos
ja
adcl
push
jl
lock
sbb
mov
inc
test
adc
and
xor
xchg
nop
fisttpl
pop
pop
hlt
jge
pop
test
xor
mov
xor
ss
leave
stc
pop
inc
loope
mov
mov
mov
xlat
hlt
insl
out
test
push
or
nop
inc
fdivl
xchg
and
stos
jbe
pop
jbe
dec
sahf
gs
lds
adc
out
dec
decb
nop
mov
jg
inc
dec
mov
lods
ljmp
testb
add
ljmp
std
fnstenv
dec
xchg
arpl
mov
sub
test
cmc
addl
xchg
push
fwait
stos
xchg
push
shlb
imul
push
out
jmp
mov
xor
mov
lret
loopne
cmpsb
mov
lahf
icebp
sbb
mov
and
stos
sub
in
xchg
insl
les
xchg
or
push
imul
out
push
xchg
scas
pop
push
les
or
or
clc
dec
fdiv
add
pmaxub
and
dec
inc
xor
stos
mov
pcmpeqw
dec
pop
cmpsl
jns
cli
mov
mov
pop
jp
cmp
jnp
js
js
mov
sbb
sbb
xor
mov
ret
mov
xlat
jl
add
xchg
in
cld
sub
sbb
adc
enter
inc
cltd
sahf
in
push
sbb
adc
xchg
mov
sbb
int
movsb
int3
and
aam
push
xchg
mov
pop
dec
mov
fdecstp
xorb
mov
mov
stc
add
push
push
mov
jbe
xor
pop
mov
mov
sbb
jnp
add
es
mov
mov
clc
push
cwtl
or
xchg
jb
push
mov
push
cmpsb
insl
and
jg
loop
pop
and
adc
push
ljmp
jns
mov
push
xor
xchg
ds
movsb
data16
aad
stos
lahf
rolb
mov
pop
pop
aas
in
aas
test
insb
dec
outsl
pop
cmp
dec
or
jg
mov
xor
pop
mov
js
ss
and
mov
xchg
lea
jbe
pop
ffreep
insl
inc
mov
pcmpeqb
add
loopne
jp
sub
imul
arpl
lods
mov
sbb
pop
das
xlat
dec
ss
dec
sbb
das
rcrl
xchg
cwtl
mov
loope
insb
idivb
idivb
cmc
mov
iret
cmpsb
push
add
dec
push
ljmp
sahf
mov
addr16
jle
lock
pop
cmpsl
mov
bsf
sbb
mov
add
insb
test
arpl
cmpsl
xor
loopne
cld
cmp
jp
icebp
dec
leave
or
dec
mov
xor
lcall
cmp
das
push
mov
mov
inc
pop
mov
cmpsb
cmpb
add
mov
add
stos
sub
push
xor
cmp
xchg
push
bswap
out
fistpll
cli
bound
subl
sub
sbb
sub
stos
dec
add
xchg
arpl
leave
call
lods
xor
and
int3
or
jne
push
ds
cmpb
pusha
dec
outsb
stos
bound
popf
cmpsb
clc
inc
inc
lods
jns
inc
jge
xor
popa
and
subl
js
gs
outsl
pop
or
pop
push
in
push
mov
cmpsl
or
pop
or
insl
mov
enter
lcall
mov
pushf
loope
les
clc
sti
int3
inc
mov
insb
jge
pop
ficompl
inc
aam
sbb
push
loope
test
adc
inc
jp
lea
xor
icebp
popa
xchg
sbbb
cwtl
nop
ret
repz
test
in
pop
cmp
jmp
jnp
ds
dec
loop
sbb
add
mov
pop
jo
cltd
push
add
inc
xor
xchg
mov
test
cmpxchg
lea
and
clc
sbb
jno
incl
sti
sub
movsl
fwait
and
mov
and
sbb
lock
lcall
or
gs
call
bound
decl
imul
bound
ss
add
cmp
xor
pop
es
sub
adc
inc
inc
movsl
push
loop
and
pop
scas
popa
mov
push
or
dec
sbb
outsl
fldcw
xor
shr
cmp
daa
test
mov
adc
and
add
inc
mov
cs
xchg
or
movsb
das
push
rcrl
pushf
fisubs
cmc
sbb
testb
dec
pop
xchg
bound
add
fidivrl
scas
hlt
and
jp
xchg
push
gs
mov
jp
xor
push
dec
pop
das
cltd
inc
mov
sub
decl
std
jle
inc
inc
cmp
mov
jl
pop
popf
jo
idivl
push
pop
jp
adc
push
call
int
or
or
and
mov
mov
push
int
dec
dec
lock
lods
and
mov
leave
insb
xlat
aad
jmp
jp
jne
outsl
xchg
inc
cmp
mov
xor
xchg
and
xor
or
mov
xchg
in
mov
les
test
es
mov
mov
andl
fcomps
dec
into
imul
lcall
mov
test
sbb
pushf
inc
mov
stc
push
in
imul
mov
xchg
fwait
push
mov
clc
push
jbe
outsl
xchg
pop
jecxz
mov
hlt
outsb
pop
imul
movsb
mov
mov
jp
fisubrs
gs
pop
testl
ds
lcall
ret
push
rcrl
cwtl
xchg
or
inc
popa
cmp
int
fldl
outsb
add
push
mov
dec
cmp
lcall
cli
addr16
aad
outsl
sahf
les
test
mov
push
ljmp
aaa
imul
sub
sti
lods
pop
xor
lret
js
stos
push
mov
test
jmp
mov
sbb
aad
mov
xchg
es
push
and
pushf
cmp
and
sub
cwtl
mov
jne
out
sbb
dec
fs
es
push
inc
fiadds
or
pop
jge
hlt
stc
lcall
sbb
int3
repnz
and
test
xor
sbb
test
jns
add
cwtl
aaa
jns
mov
adc
or
adc
jmp
js
xchg
lock
add
mov
fcmovnu
dec
sub
cmpsl
stc
orl
jbe
loope
sbb
pop
stos
aad
mov
repnz
or
rorb
and
sub
ret
cmp
imul
outsb
hlt
scas
rol
fimull
mov
pop
mov
fdivp
inc
fwait
data16
int
mov
sub
mov
out
sbb
add
push
dec
or
xlat
xchg
add
mov
mov
push
mov
shr
sub
mov
inc
das
arpl
cmp
push
mov
push
jo
xor
mov
imul
and
push
adc
divl
sub
sub
sbb
and
je
insb
cmpsl
add
movsb
mov
adc
std
jnp
mov
and
dec
xor
mov
js
jae
cmpsb
lods
xchg
sub
ret
ret
xchg
fists
and
js
subl
adc
das
cmp
sbb
icebp
cmpsl
jmp
clc
arpl
dec
mov
adc
mov
xchg
int
mov
lea
cltd
sub
pop
out
jns
mov
xchg
mov
dec
ljmp
and
add
adc
lret
fstpt
mov
mov
pop
ljmp
inc
dec
mov
insb
addr16
dec
punpckhdq
je
int3
push
pop
or
in
fidivrs
adcb
pusha
mov
add
leave
int3
mov
cmp
movsb
enter
fsubrs
in
data16
mov
iret
std
loope
mov
sub
shlb
adcb
and
and
xlat
daa
adc
leave
jp
daa
insb
xor
lods
iret
xchg
xor
mov
sub
out
insl
leave
stc
push
cmp
fidivrl
sti
ret
or
fisubs
cs
test
dec
add
mov
sub
push
xchg
xchg
fistpl
cltd
xchg
pop
xor
shr
lcall
or
aad
in
dec
sbb
seta
cld
call
xchg
cltd
mov
inc
xor
fldenv
cltd
stos
ret
jge
test
sbb
shl
stos
xor
aad
dec
lods
stos
jmp
call
push
mov
jne
nop
push
mov
vcvtdq2ps
push
inc
in
and
lahf
mov
xchg
push
mov
xor
ljmp
lcall
lock
cmp
mov
addr16
push
inc
mov
and
jge
push
jmp
fldl
or
ret
adc
pop
loopne
jl
inc
sbb
dec
fiadds
outsb
pushl
xchg
xchg
mov
out
cmp
int3
mov
aaa
stc
aas
xor
out
in
insb
and
mov
popf
cmp
mov
fwait
in
jo
lods
fxch
div
movsl
daa
jns
xor
mov
popf
inc
lea
ret
icebp
jmp
js
sub
xchg
cld
movsb
ljmp
ret
mov
jb
imul
scas
cs
int
mov
shl
loopne
and
loop
pop
xchg
in
pop
xchg
xor
imul
sti
shrb
je,pn
in
cmpl
fldl
pop
popf
sub
mov
in
cmp
in
insb
push
mov
cmp
and
nop
popf
mov
loop
insb
jne
leave
push
stc
sub
cmp
movsb
push
test
fimuls
xchg
lock
jb
xchg
test
imul
push
xchg
daa
ljmp
add
adc
or
sbb
repnz
adc
cmp
out
sbb
jbe
adc
add
leave
mov
or
cmp
addr16
ret
pop
jns
lcall
sbb
xor
and
test
mov
hlt
mov
pop
push
sub
inc
pusha
inc
arpl
out
dec
lds
add
mov
and
ds
mov
daa
and
and
mov
iret
lcall
sbb
cmp
cmp
loope
inc
stos
and
cltd
lods
imul
aaa
test
ror
fs
dec
xchg
dec
pop
repz
jecxz
mov
inc
ljmp
adc
lcall
adc
aam
cltd
add
or
ret
mov
cs
lret
daa
out
scas
jbe
adc
or
pop
call
pop
gs
mov
jg
addr16
xor
dec
addl
fldt
xor
lret
jae
mov
sbb
arpl
and
xchg
movsl
in
push
and
mov
popf
push
iret
dec
ret
xchg
sbb
pop
retw
inc
add
outsl
shrl
orl
mov
sub
int3
mov
sbb
lcall
fdivrs
mov
xchg
mov
test
or
or
pop
cmp
in
inc
xchg
das
ds
sbb
jbe
loope
out
outsl
insl
mov
mov
sbb
call
lea
dec
fiadds
stos
dec
xchg
push
aas
pop
popf
rorb
push
cmp
mov
insl
sub
es
hlt
cmc
movsl
jle
dec
mov
mov
arpl
daa
fidivrl
push
sbb
ret
cld
mov
cmpl
dec
dec
mulb
mov
shrb
pop
imul
or
mov
push
enter
int3
jno
imul
push
jne
add
cmpsb
test
in
std
cmp
test
push
jmp
and
sbb
je
xchg
and
and
lcall
mov
pop
fdivp
and
jbe
fwait
orb
add
mov
xchg
insl
data16
pop
mov
sub
push
and
mov
mov
scas
mov
sti
loop
or
sbb
sbb
pop
popl
popa
fs
cmp
jecxz
cmpb
push
loopne
sarl
out
into
scas
sahf
movsl
and
adc
ja
daa
in
outsb
imul
cs
xlat
sbb
mov
mov
test
es
in
mov
scas
outsl
and
lds
and
cwtl
rcl
andb
adc
mov
das
scas
cmp
mov
xchg
jns
clc
inc
aaa
jbe
sbb
nop
jns
stos
push
or
cmpsl
cltd
cmc
and
loopne
mov
std
arpl
arpl
mov
push
ret
fnop
push
pop
push
xor
fld
addl
aaa
sub
cmp
mov
arpl
dec
pushf
cmp
iret
pop
cmpsb
jle
add
jle
sbb
jl
cmp
loope
out
fidivl
in
lret
inc
mov
clc
inc
mov
jo
adc
in
push
test
lahf
int
fsubrs
ds
adc
fsubp
mov
test
xor
test
mov
mov
lds
inc
sahf
or
leave
push
movsb
loop
lock
sbb
dec
mov
push
mov
fidivrl
pushf
mov
xor
inc
ljmp
xor
and
pusha
add
mov
shl
jne
shll
daa
cs
je
and
insb
imul
clc
mov
dec
pop
push
jp
arpl
shll
mov
dec
test
divb
jg
push
adc
bound
aam
cwtl
mov
test
cmc
movsb
fbld
sarb
xor
sbb
pop
adc
or
jbe
and
pop
or
loop
lret
mov
fdivrp
xor
mov
xcrypt-ecb
cmpsl
mov
cmp
or
and
int3
orl
jbe
xor
ret
dec
adc
iret
fildl
cmp
push
sti
pop
ss
aaa
adc
int3
sub
adc
arpl
sub
sub
divb
cmc
adc
push
aam
inc
and
scas
mov
or
aaa
movb
cmpsl
fucomi
sub
outsb
xchg
sub
repz
testl
idivb
shrl
sub
cmc
xchg
int3
cmp
or
mov
xchg
int
repz
out
pop
adc
movsb
cmp
dec
inc
aas
adc
cmpsl
xchg
dec
pop
xor
scas
mov
or
dec
out
out
cmp
adc
test
sub
jg
out
or
stos
addb
sbb
xchg
cmp
stc
inc
push
jmp
inc
xor
lea
mov
loopne
test
je
in
mov
add
out
out
rorb
pusha
and
cmp
adc
mov
loop
in
mov
jmp
xor
xor
xchg
dec
push
rclb
mov
mov
mov
push
sbb
inc
dec
out
in
lret
leave
jl
adc
pusha
or
movsl
sub
inc
dec
leave
mov
sub
mov
mov
cld
aad
aad
inc
sbb
pop
rolb
or
ret
out
jns
andb
ret
cmp
dec
shll
stos
pop
cmp
cmp
sub
adc
mov
jmp
mov
sub
or
xor
push
orl
cmp
xchg
fstl
lods
xor
test
adc
push
mov
or
inc
sub
loope
fxch
pop
push
in
rcll
lods
in
lock
and
lcall
lret
jne
addb
push
out
mov
adc
inc
mov
gs
rolb
sti
mov
add
jb
imul
or
imul
or
movsl
fidivl
fwait
pop
xchg
out
loop
into
loop
xor
push
jmp
shrb
icebp
add
sbb
cmp
clc
add
adc
in
cmp
std
dec
roll
ljmp
ja
add
push
sub
sbb
xchg
inc
mov
stc
mov
mov
push
loop
jmp
jp
out
add
leave
iret
dec
adc
jle
push
pop
xchg
sbb
pop
or
ja
lahf
test
mov
int
xchg
fnstcw
and
inc
sahf
js
inc
pusha
pop
ss
mov
gs
add
ss
arpl
xchg
add
sub
movsl
jno
leave
sti
bound
mov
stc
adc
or
movsb
pop
or
add
pop
sub
inc
fcoml
lock
add
lea
addr16
cltd
adc
push
lea
das
mov
jg
adc
lods
orl
sbb
ljmp
xchg
mov
mov
cli
cmp
jmp
aaa
mov
mov
in
rorl
jl
jge
mov
push
movsb
gs
mov
inc
mov
xor
mov
data16
lods
or
pop
or
insl
aaa
jle
mov
data16
xor
aaa
push
test
xchg
out
mov
insb
jae
sbb
dec
int3
xchg
adc
or
add
sbb
les
nop
test
aad
hlt
in
mov
insb
jne
ja
sahf
push
repnz
mov
adc
outsb
nop
jl
mov
in
fidivl
jnp
shll
or
fbstp
sbbb
dec
jl
into
not
mov
mov
mov
jae
sub
lods
mov
stos
cmc
jg
aaa
cmp
or
jge
sbb
sahf
call
test
insl
icebp
scas
mov
push
xlat
imul
out
sahf
imul
and
enter
daa
push
pop
cld
pop
test
add
aad
mov
cmp
or
test
cmp
out
fstl
and
sbb
cmc
pop
push
pop
mov
push
jg
jnp
movsb
jnp
out
jbe
push
sbb
dec
and
lahf
inc
mov
xor
and
mov
pop
and
shlw
or
cmp
dec
enter
mov
icebp
inc
stc
lcall
jnp
add
insl
test
xorb
outsb
outsb
fstpl
jge
cs
push
pusha
dec
out
aad
xor
adc
mov
scas
pop
pop
push
test
out
pop
mov
mov
cwtl
jge
mov
jo
fs
repnz
inc
sub
cmp
cmpsb
pop
jnp
insl
nop
jno
bound
std
sbb
lret
or
shrb
les
mov
mov
fcoms
sub
shrb
pop
bnd
cmp
sarb
add
inc
hlt
lds
jo
mov
sbb
add
rolb
mov
inc
xorl
sbb
jne
push
or
or
das
sbb
xchg
mov
add
mov
sbb
int3
fcoml
cltd
sbb
call
nop
scas
ret
pop
cmp
mov
dec
mov
pushl
mov
test
icebp
cmp
in
cmpsb
cmp
mov
xchg
or
sub
outsb
out
nop
movsb
adcl
ret
in
fs
cmp
je
repnz
dec
das
xlat
lret
mov
aas
test
sub
lods
stos
mov
popf
test
adc
sbb
jge
pop
xchg
sub
testb
les
jl
imul
jns
cld
fiadds
decb
test
pop
push
lock
rcrb
ss
cmpsl
add
aam
xor
sahf
fistps
push
jecxz
shlb
inc
mov
pop
mov
mov
xor
add
mov
inc
xchg
pop
mov
dec
xor
xor
out
outsb
mov
mov
arpl
arpl
sbb
mov
das
test
fsubrl
push
and
xchg
pop
jle
fstpt
cmp
stc
mov
or
dec
arpl
push
xlat
push
jnp
xchg
xor
add
fstpt
xchg
pop
out
push
fwait
cmp
mov
mov
stos
mov
inc
xor
icebp
sbb
xor
shl
out
xchg
pop
addb
pop
push
das
repnz
pop
and
sub
adc
sub
shll
and
ljmp
rcrb
push
dec
iret
adc
or
pop
and
std
dec
out
push
dec
lea
into
stc
ja
cli
das
or
push
inc
xchg
in
or
push
sub
fbstp
out
stc
mov
cltd
push
sbb
enter
dec
rcrl
fsubrs
mov
dec
push
dec
filds
aaa
pop
jecxz
pop
push
fldenv
cmc
xchg
inc
add
jns
jbe
sbb
fs
andb
mov
sub
inc
sbb
mov
aam
std
jecxz
mov
fnstsw
jne
pushf
pop
and
popf
int3
fisubl
inc
test
jae
loope
int3
lods
and
insb
jg
sbb
in
ss
out
inc
fbld
stc
outsb
add
jmp
fnstenv
test
dec
pop
dec
xor
jg
jecxz
push
add
and
mov
call
pop
mov
jg
clc
outsb
cmp
dec
sbb
mov
out
sti
mov
jle
aam
stos
call
add
mov
pop
out
test
adc
jns
inc
ljmp
cmp
test
shlb
ror
adc
sahf
push
out
ja
or
aas
ret
adc
repnz
in
mov
dec
in
sbb
push
dec
and
fisubrl
sub
mov
xor
in
fmuls
push
and
cmp
cs
cltd
add
shl
stos
xchg
mov
or
dec
rolb
loop
pop
pop
jns
daa
fdivrs
or
pop
cmp
xchg
ss
movsb
adc
test
push
fisubs
enter
test
push
push
dec
mov
inc
push
jmp
test
mov
pop
mov
sbb
sbb
dec
out
xor
jne
nop
xchg
arpl
add
ret
scas
pop
ds
pop
sahf
test
lahf
int
jns
popf
stc
fstps
jl
push
sub
loope
cmp
mov
sub
dec
ds
jle
cld
rol
mov
out
pop
fmul
outsl
lret
sti
out
jmp
pop
cmp
add
adc
pushf
lcall
or
cwtl
cmpb
mov
pop
scas
fstpt
mov
sbb
iret
pop
dec
iret
aas
bound
mov
cmc
hlt
and
push
xchg
shll
mov
or
lea
je
dec
adc
inc
and
pop
and
cld
lods
out
xchg
cmpsl
xlat
add
fidivrl
add
mov
sti
rorl
mov
out
repnz
push
push
push
into
sarb
arpl
aaa
or
jae
aas
in
je
dec
xor
xor
cmp
jle
pop
orb
add
lods
mov
dec
icebp
idivb
push
dec
scas
enter
push
xor
mov
cmp
xchg
or
fnstenv
into
push
lahf
rcll
movsl
inc
pop
pop
cmp
jge
mov
rcrb
lods
sahf
mov
cmpsb
dec
inc
xchg
call
rcrl
pop
stos
xor
and
cltd
xor
cmp
inc
and
addr16
pop
sahf
or
cli
mov
outsb
cmp
fsubrs
lahf
in
cmc
loopne
push
jbe
psubusw
or
andl
test
add
cmpsl
sbb
or
sub
sbb
mov
iret
mov
inc
mov
out
cmpb
mov
xchg
mov
mov
push
mov
pusha
repz
leave
das
call
sub
leave
pop
adc
push
jge
pop
scas
loop
xchg
cli
jge
jae
push
sub
enter
or
cmp
test
push
inc
out
pop
mov
add
mov
ljmp
jae
movsl
add
and
in
jns
pop
gs
sbb
in
xchg
test
ret
add
iret
lret
and
jge
sub
adc
push
jo
out
adc
mov
dec
int
int
and
call
orl
pusha
pop
fcoms
xchg
loopne
xchg
mov
call
call
inc
inc
movsb
or
mov
jecxz
out
repnz
dec
mov
push
mov
pop
add
sti
xlat
jp
leave
push
sbb
jp
push
gs
dec
mov
icebp
dec
sbb
mov
jae
inc
rclb
push
in
pop
aam
lock
jne
sbb
xchg
mov
int
push
xor
ret
adc
xor
inc
shll
or
fwait
inc
movsl
or
movsl
push
lea
adc
sbb
jo
stos
sub
hlt
or
jp
inc
test
add
test
int3
lret
sbb
jecxz
add
insb
std
pop
adc
lret
fwait
jb
adc
mov
rclb
pop
push
pushf
jg
push
sahf
sbb
add
ret
or
lcall
popf
mov
mov
lods
xchg
sbb
mov
jle
ficoml
dec
out
pop
ja
add
xchg
cmp
call
in
iret
cmpsb
ds
sbb
sahf
push
push
fsubrl
mov
mov
sub
cmpb
aam
rol
mov
cmp
adc
mov
imul
pop
or
fwait
inc
test
ss
mov
mov
pushf
pop
mov
mov
and
inc
adc
or
mov
mov
push
pop
mov
movsb
test
sub
adc
mov
push
test
or
or
pop
frstor
mov
sar
jno
xor
dec
dec
fdiv
test
mov
repnz
scas
push
movsb
jo
cltd
and
sub
xchg
dec
andl
aas
xchg
ds
xchg
loope
repnz
lahf
mov
or
adc
push
push
dec
outsb
and
subb
sbb
popl
push
push
or
pop
out
pop
addr16
and
sti
push
fimull
loope
in
insl
mov
mov
sbb
mov
mov
and
and
into
dec
lcall
push
dec
clc
in
fidivrl
sbb
test
sub
lds
mov
cmp
pop
outsb
sub
sti
lcall
cmp
push
in
or
pop
ds
dec
out
test
cltd
or
xor
push
int
inc
and
inc
xchg
sbbl
push
sub
mov
lock
and
push
and
adc
cmc
sub
aad
xchg
push
loope
xor
mov
jg
cmp
xor
lea
jp
lods
outsl
gs
mov
in
loop
xchg
divl
mov
dec
frstor
xchg
push
push
lcall
repnz
mov
ljmp
shrb
push
pop
loope
dec
mov
fs
je
out
es
sub
mov
inc
pop
mov
leave
sbb
cmpsl
mov
lahf
adc
hlt
mov
daa
jno
call
adc
mov
mov
xchg
shlb
cli
xchg
sub
daa
mov
movsl
xchg
cwtl
pop
je
cmp
cmc
rcrb
sub
mov
xchg
fbstp
imull
cmp
inc
arpl
push
ljmp
jne
mov
movsl
jae
imul
mov
xor
cwtl
push
jne
dec
aaa
inc
hlt
enter
sub
inc
ficomps
mov
std
fldt
sar
stos
adc
push
scas
pop
mov
adc
cmp
test
xor
shrl
loop
mov
add
add
dec
clc
pop
dec
dec
shrl
xor
lock
cltd
mov
test
loope
cmp
xor
adc
das
into
adc
jge
psrlw
repnz
ret
and
and
pop
xchg
dec
xor
sub
push
call
adc
int3
pop
inc
dec
mov
and
sysenter
dec
mov
jo
sbb
jno
mov
hlt
pusha
push
scas
lock
jmp
adc
and
xor
dec
sub
or
mov
mov
cmp
clc
adc
adc
mov
test
pop
aam
stc
cltd
nop
movl
dec
int
icebp
addr16
sarb
cli
cmp
add
xor
mov
or
fcompl
sub
scas
jno
scas
adc
lods
in
aam
out
gs
mov
or
frstor
outsl
xor
cmp
xor
bts
and
and
pop
add
mov
mov
sahf
push
nop
jmp
sbb
inc
and
lock
sub
mov
sub
insb
pop
inc
mov
pushf
xor
imul
dec
pop
and
cwtl
mov
lret
dec
ret
shr
sbb
mov
pop
lret
loop
sbb
mov
aam
sbbb
test
add
adc
test
jmp
mov
add
shrl
or
dec
sti
fadd
rolb
insl
sub
xchg
outsl
sbb
push
mov
lahf
repnz
or
jnp
testl
xor
stc
dec
aas
mov
jb
and
fcomip
ljmp
test
and
sbb
push
cmpsb
mov
stos
fwait
inc
lock
mov
sub
fisttpll
out
mov
push
xchg
lds
enter
push
inc
fwait
je
sbb
je
push
sbb
in
bound
add
rcll
orl
sbb
out
cwtl
arpl
jno
mull
inc
setne
repnz
and
adcb
ss
push
mov
bound
fiadds
cmp
fs
xchg
aad
push
sub
scas
sahf
pop
mov
nop
leavew
sbb
mov
icebp
gs
jns
stos
or
xchg
sarb
fdivl
outsb
xlat
sub
pop
fnstsw
xor
fwait
mov
fmuls
mov
fistpl
and
shl
and
fcoms
std
jb
jnp
mov
xchg
lods
pop
jae
add
popf
imul
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
pushl
push
insl
pop
out
jns
mov
outsb
call
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
test
in
and
push
sub
fsubrl
pop
and
xchg
push
sbb
fimull
add
pop
sbb
xchg
xchg
sbb
mov
adc
filds
je
pop
out
jge
mov
sub
out
jae
sbb
xor
push
scas
ja
idiv
push
cld
pop
ss
ss
mov
fs
xchg
int3
in
jbe
push
hlt
and
outsl
push
mov
sbb
xor
xchg
ret
ds
mull
push
pop
data16
je
and
ret
or
push
in
jle
jmp
mov
pop
xchg
sub
cmp
jns
in
cmp
out
jge
pop
mov
push
outsb
pop
out
popf
jns
in
cmp
outsb
push
sbbb
jns
mov
outsl
in
outsb
pop
out
jge
mov
outsb
adc
idivb
aas
outsl
push
outsb
pop
out
js
mov
outsb
push
out
push
out
jns
mov
insb
push
outsb
fsubp
cmp
jns
hlt
std
cmp
outsb
inc
outsb
pop
idivb
sub
outsb
push
outsb
pop
out
jge
mov
outsb
cmp
out
dec
jb
sub
cmp
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
inc
and
es
cmp
jns
idivb
jle
outsb
pop
fdivrl
jge
mov
sub
cmp
jns
in
cmp
mov
sub
mov
outsb
pusha
gs
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
mov
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
mov
outsb
push
outsb
pop
out
jge
cld
or
cmp
outsb
push
jle
out
fbld
pusha
jmp
das
leave
in
fstl
out
xor
mov
mov
pop
pop
fisttps
cmp
fidivs
mov
push
push
pop
insl
mov
push
pop
insl
and
add
sub
cld
into
cltd
push
lahf
add
cmpsb
push
push
in
gs
and
scas
xor
ret
xor
mov
sbb
mov
jno
mov
movsl
push
sbb
push
mov
sub
push
stos
imul
pusha
mov
add
xchg
movsl
call
aaa
clc
scas
inc
jbe
call
add
lods
movsb
popf
pop
jnp
test
dec
push
pusha
xchg
inc
cmp
push
jp
xor
pop
mov
lods
movsl
inc
fnstsw
es
pop
insb
or
push
stos
push
loopne
stos
mov
add
cs
and
and
inc
cmp
addr16
loopne
cli
cmpb
inc
sti
mov
aas
hlt
inc
lods
clc
cwtl
sarl
push
xchg
mov
add
inc
std
mov
cmpl
or
roll
hlt
xchg
jl
outsb
xchg
pushf
and
ds
stc
cs
ss
xor
scas
mov
xchg
mov
or
cmp
or
push
dec
cmc
mov
loope
dec
jno
sbbl
shlb
and
xchg
sahf
push
pop
les
or
and
inc
xlat
stos
add
loope
pop
cli
mov
orb
lea
aad
add
dec
jge
mov
arpl
iret
and
cmp
rorl
or
mull
repnz
add
mov
in
insl
pop
test
add
loop
dec
xor
pop
mov
cmp
jae
push
leave
mov
cmp
xchg
mov
dec
pop
mov
aad
jmp
pop
clc
cmp
mov
test
cmpsb
loopne
scas
mov
xchg
rcrl
ret
rorl
insl
xlat
cltd
mov
mov
out
xor
sub
cmp
xor
mov
dec
jle
fistps
test
mov
add
cmpsl
jno
inc
inc
sbb
pop
mov
and
shl
cmp
push
nop
cmp
loopne
fcoml
lea
stc
push
xchg
rorb
mov
leave
cmp
jle
inc
xchg
push
push
scas
iret
cmp
fadds
or
xchg
cmp
mov
sahf
sahf
add
pop
out
cwtl
cpuid
pop
insb
xlat
cmc
inc
fcomp
stos
adc
pop
xchg
fcmovnbe
sub
push
dec
mov
jnp
mov
adc
adc
repnz
sbb
movsl
sahf
add
lock
push
mov
jle
or
dec
inc
jbe
dec
imul
repnz
les
jg
push
jle
sub
mov
ja
jb
cmp
pop
pop
jge
outsb
cmp
push
adc
ret
mov
in
ja
add
pop
fsubl
adc
cmp
loope
ss
das
dec
push
je
mov
cmp
jmp
addb
icebp
stos
and
inc
sub
es
jg
fnstenv
loop
xor
jbe
sub
test
mov
mov
movq
fmuls
jno
push
mov
sub
or
aam
pushf
push
stos
pop
or
mov
dec
lret
out
push
push
mov
hlt
add
sbb
mov
inc
adc
movsl
mov
jae
jmp
test
ret
jbe
test
mov
dec
mov
mov
imul
add
jns
leave
scas
add
int3
loop
hlt
icebp
std
dec
jns
jle
sub
int3
push
popa
xchg
leave
arpl
in
push
pop
sub
push
fimull
or
shrb
push
and
mov
adc
xlat
jle
pop
mov
inc
pop
adc
ret
mov
xor
stc
out
insl
out
pop
fdivs
ljmp
ljmp
ret
cmpsb
es
hlt
jg
jecxz
jnp
pop
or
mov
mov
or
pop
dec
push
adc
scas
hlt
jo
call
out
ret
pop
and
push
fcompl
shr
inc
add
sub
pop
lock
dec
mov
pusha
insl
call
xchg
xchg
push
movsbl
dec
and
repnz
in
jmp
and
cmpsb
in
jno
addr16
jnp
mov
sub
add
xor
jne
sub
dec
xor
pop
inc
jbe
icebp
push
pop
pcmpgtb
xchg
aam
push
shrb
push
dec
ljmp
sahf
mov
push
outsb
jg
push
pop
adc
or
pusha
mov
or
das
push
fldenv
sbb
and
jmp
outsb
fdivp
shl
push
movsl
dec
lods
sub
push
fsubl
jp
in
sub
popa
sbb
inc
fldl
dec
mov
sbb
jnp
loopne
loop
mov
fwait
push
push
adc
imul
icebp
loopne
adc
xor
cltd
lcall
mov
inc
outsb
cs
vpmacsww
push
or
ret
cmp
sarb
push
cmp
es
dec
mov
add
mov
les
dec
push
out
movsl
fsub
enter
outsl
loop
xchg
int3
insl
mov
js
inc
mov
push
in
push
daa
lret
cmp
popa
mov
punpcklbw
mov
push
nop
mov
push
out
mov
rorb
mov
ss
xor
insl
cld
adc
adc
jge
dec
or
fadds
cmp
adc
mov
mov
out
jmp
test
rcll
sbbb
adc
lahf
sub
mov
sbb
roll
sbb
ss
pushl
in
add
sub
test
fwait
outsl
jmp
clc
mov
or
jp
push
pop
xchg
sbb
pop
add
jne
stos
cmp
cli
fnsave
xor
rorl
les
scas
repz
dec
mov
nop
outsl
lret
in
cltd
and
sub
das
lds
mov
push
lock
dec
push
jnp
add
adc
inc
lods
out
stos
mov
cli
jno
outsb
cli
das
lret
mov
sarb
mov
stos
pop
xchg
mov
pop
or
std
int3
nop
sub
lods
adc
sub
jl
push
mov
sub
mov
dec
pop
clc
pop
fsubr
out
mov
rcrl
mov
iret
int3
xchg
bound
lret
jne
cmp
testb
xchg
mov
xchg
jne
imul
loope
sub
lods
inc
loope
mov
mov
xchg
fdivs
sub
jmp
jle
mov
push
sti
sub
mov
loop
sbb
cmp
movsl
pusha
popf
fxch
movsb
xchg
je
movsb
pop
xlat
and
es
push
xchg
adc
push
dec
orl
in
mov
or
cmp
dec
ja
repnz
mov
xor
mov
shlb
mov
fildl
lock
and
push
and
push
mov
or
in
cltd
sbb
rclb
adc
mov
dec
sarl
imul
add
inc
inc
add
jl
push
in
je
je
fisttpll
in
imul
test
in
push
or
inc
or
mov
in
xchg
and
push
fldl
xchg
insb
stos
ljmp
insl
lcall
mov
push
les
mov
data16
rorb
inc
mov
jp
ds
jbe
mov
mov
jns
cmp
mov
ljmp
mov
lods
sbb
fs
adc
dec
mov
xchg
push
fcomps
idivb
inc
pop
dec
repnz
stos
ja
mov
dec
inc
cs
pop
adc
lahf
xor
xor
sbb
inc
push
lret
cwtl
icebp
jp
xchg
jle
jp
cmpsl
es
cmp
inc
mov
and
cs
pop
cwtl
outsb
fwait
mov
loop
push
call
cmp
sub
popa
pop
cmp
les
inc
incb
andl
add
cmc
pop
sbb
adc
add
xor
lret
lcall
into
outsb
int3
mov
xchg
dec
cmp
cmp
in
xchg
dec
inc
jecxz
or
rcrl
mov
jns
loop
xchg
repz
pop
scas
call
stos
ljmp
xor
xchg
xor
mov
out
js
mov
push
addb
popf
inc
xchg
negb
fisubrs
add
sbb
pop
push
dec
inc
push
mov
mov
stos
test
pop
and
ljmp
ret
pop
sbbl
sar
and
push
xchg
mov
push
mov
lret
dec
sahf
lcall
mov
aam
jne
repz
xor
iret
sti
hlt
ja
cmp
scas
scas
sbb
jb
loop
or
mov
mov
mov
repz
adc
scas
pop
jmp
sub
pop
cs
xor
stos
pop
jae
ljmp
cli
xchg
lods
out
popa
jb
loop
scas
fdivl
jl
rcr
and
cltd
adc
repnz
je
cmp
call
stos
sbb
sarl
add
cmpsb
push
cli
cmp
xchg
mov
sub
scas
add
jmp
sbbb
lret
aad
xor
insl
push
push
cmp
lods
xchg
and
stos
push
jge
outsb
enter
scas
dec
test
or
cmc
xchg
lds
test
loop
push
fcomps
sub
gs
add
int
data16
cmpsl
xchg
loop
mov
pusha
mov
ror
int
mov
mov
stos
cwtl
test
lods
outsl
fiaddl
inc
jl
ficoms
push
dec
and
sub
cwtl
xchg
rorl
ljmp
adc
push
js
cltd
add
icebp
pop
int3
mov
pop
mov
xor
add
mov
xchg
mov
and
cltd
mov
adc
mov
jno
jle,pn
sbb
pop
dec
sub
xchg
test
or
lahf
lret
adc
xchg
mov
sub
pop
add
xor
inc
neg
and
stos
push
add
cmpl
rcl
inc
lods
jle
jno
mov
mov
nop
repnz
xchg
xchg
out
in
sbb
adc
xchg
and
push
sub
sub
xchg
mov
ret
into
xor
iret
xchg
stos
aaa
inc
mov
sub
out
and
pop
inc
adc
pop
dec
sahf
pop
stc
mov
xchg
inc
pop
mov
dec
lret
adc
sub
sub
lcall
dec
xlat
dec
nop
insb
dec
lahf
adc
pop
iret
insb
adc
jae
and
jl
ja
sahf
in
xchg
and
sub
stos
fwait
jge
outsb
add
push
ret
dec
cmp
sar
lret
add
clc
push
call
sbb
cs
out
inc
jnp
lcall
imulb
xchg
sub
jge
mov
pop
fsub
pop
sbb
ss
mov
pop
loopne
dec
test
xchg
lahf
inc
push
insl
mov
push
mov
sbb
push
std
add
fmuls
mov
loopne,pn
add
mov
and
clc
pop
pop
pop
or
push
sub
pop
jp
in
add
gs
mov
jle
sbb
pop
jns
negl
gs
mov
xor
in
lods
inc
pop
bound
into
mov
in
mov
xor
fnsave
ret
cmc
fldl
dec
test
sub
das
xchg
xor
cld
xor
clc
mov
lret
fcompl
jae
into
jl
push
call
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
