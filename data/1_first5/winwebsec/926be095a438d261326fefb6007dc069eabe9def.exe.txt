push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
xor
pushf
insl
insb
sbb
cmp
pushf
push
jae
dec
cmp
out
lods
cltd
imul
cmp
int
mov
dec
jnp
out
or
lock
adc
leave
movsb
jl
fstl
rcl
push
lods
xchg
mov
lcall
enter
xchg
push
or
fdivrs
sbb
mov
jecxz
loopne
sbb
lcall
cwtl
pop
or
sahf
inc
dec
loop
mov
sti
int
mov
idivb
xor
xchg
mov
mov
mov
pusha
sarl
mov
jb
jp
mov
sub
add
jl
cltd
sbb
and
xchg
cmp
dec
ret
xchg
lods
cld
xor
or
cmp
stos
push
or
mov
sub
out
add
inc
jp
stos
lret
inc
es
mov
xchg
mov
fcmovb
mov
test
jmp
jge
cmp
xchg
xchg
loope
xchg
dec
test
divl
pop
dec
jbe
scas
roll
xchg
push
mov
push
decl
mov
dec
jae
or
jp
mov
sbb
shrb
mov
fs
jmp
pop
movsl
orl
sub
out
sbb
sbb
jno
int
lret
push
xchg
dec
je
pop
incl
push
lret
lds
add
mov
sub
out
xlat
paddd
out
mov
xchg
lahf
dec
pop
mov
mov
cs
lea
push
inc
mov
jge
push
ja
sub
out
mov
mov
xchg
jnp
jecxz
jb
les
and
add
jg
inc
pusha
sbb
inc
sahf
lods
xor
ljmp
aam
inc
lods
sub
inc
test
adc
sbb
add
mov
add
in
pop
cmc
push
or
imul
add
push
data16
pop
lahf
and
jecxz
rcl
lret
andl
push
imul
in
adc
xor
lea
repnz
sub
mov
xor
imul
ljmp
xchg
add
stos
ficomps
jns
push
cmp
sub
fmuls
sub
cwtl
insb
loop
clc
push
aad
adc
dec
xchg
dec
push
inc
or
and
jno
mov
dec
fstpt
mov
getsec
aam
cli
pop
loop
inc
adc
inc
mov
iret
and
sbb
imul
inc
jp
jae
clc
fimull
shlb
push
rclb
adc
jmp
pusha
xorl
rcl
xor
mov
xor
jge
inc
dec
mov
add
sub
loope
mov
testl
loop
mov
aad
dec
loopne
mov
lahf
rorb
sub
mov
or
mov
leave
outsb
lahf
xchg
jno
adc
andb
and
jne
ja
call
rcrb
inc
std
js
xchg
scas
jno
mov
dec
subb
mov
mov
cmpsb
js
mov
dec
test
and
aaa
or
roll
pop
xchg
lock
mov
pop
pop
dec
lret
jg
jmp
cwtl
mov
pop
inc
clc
dec
ja
add
cwtl
jge
fwait
dec
mov
pop
mov
sbbl
pop
push
pop
inc
and
sbb
out
add
inc
sub
insl
int3
stc
nop
repz
jnp
cmp
in
jge
test
push
xor
lods
movsb
xchg
pushf
sub
mov
sbb
lahf
enter
repnz
enter
adc
jae,pt
mov
fsubr
cmp
insb
add
cmp
mov
inc
jo
push
cwtl
mov
cwtl
push
cmp
mov
sub
mov
mov
lea
stos
jno
pop
scas
push
and
cmc
sub
mov
lret
push
or
inc
or
mov
in
mov
xchg
adc
jle
xchg
decl
cmp
call
repz
outsl
pop
xchg
mov
add
ss
jecxz
ss
xchg
test
or
mov
stc
sbb
adc
add
mov
rcll
and
push
sbb
push
sbb
jle
push
xchg
push
mov
dec
sbb
je
out
sub
popf
stos
push
jns
call
and
stos
imul
inc
shld
push
xchg
sub
cmp
sub
inc
xorl
loopne
popa
pop
push
mov
mov
lea
or
cmp
hlt
cs
loopne
adc
inc
sahf
mov
jnp
pop
ljmp
cmp
inc
lahf
pop
jnp
jg
outsl
fwait
cli
mov
dec
cmp
fcompl
aam
xor
push
sbb
negl
jae
dec
xor
mov
testb
das
adc
out
daa
imull
mov
shl
xor
cmp
nop
push
daa
add
mov
cs
xor
adcb
rorb
mov
sbbl
fadds
mov
or
and
and
mov
popf
rclb
data16
sti
sbb
sub
ss
cld
mov
inc
les
outsl
ret
out
mov
inc
fildl
xor
fdivrs
jmp
or
pushf
in
sub
push
popf
aad
fdivrs
jmp
scas
rcll
push
fwait
hlt
mov
test
and
push
fists
xchg
hlt
inc
mov
std
or
cmp
lret
fsincos
lock
in
jp
jle
test
inc
aaa
xchg
pop
sbb
or
pop
mov
mov
into
rolb
pop
inc
lret
inc
scas
sbb
imul
cmp
add
clc
push
mov
negb
cld
in
mov
xchg
lds
cmp
add
addr16
sub
mov
push
sbb
mov
test
mov
rcrb
in
fcmovnu
outsl
andb
sub
pusha
imul
xor
mov
into
add
mov
push
andl
ret
xchg
out
fs
xchg
dec
mov
xchg
out
fsubs
in
sub
mov
stc
mov
xchg
xlat
adc
adc
lea
push
fisubl
mov
or
xchg
cmp
jns
or
mov
stos
xchg
loopew
dec
outsl
pop
pop
stos
nop
add
or
xchg
lds
mov
xor
insl
imul
or
or
iret
fstpl
test
sbb
daa
push
sbb
lahf
dec
fiadds
clc
push
jmp
push
lret
scas
xchg
dec
jge
shrl
loope
jb
and
fnstenv
daa
dec
jns
test
mov
sub
dec
xchg
mov
push
fdiv
adc
lcall
mov
stos
bound
out
pusha
inc
data16
aaa
icebp
xor
sub
sub
roll
bound
sbb
jnp
add
fs
xlat
mov
ss
subl
jns
jp
in
and
mov
cwtl
mov
stos
push
cmp
ds
loopne
fstp
stos
add
xor
insl
aam
xchg
mov
sub
and
push
jle
jbe
dec
pop
cmpsl
out
jecxz
pop
fcoms
pop
jmp
push
fcoml
lock
jb
mov
ret
jo
stc
icebp
dec
imul
xchg
jae
or
dec
out
inc
in
in
mov
xchg
push
xchg
ret
aaa
std
ljmp
mov
mov
or
in
ret
lret
in
or
pop
mov
in
stos
shlb
fnstsw
negb
xchg
lods
stos
jge
js
sub
scas
popf
mov
fwait
xchg
inc
arpl
mov
lock
mov
jns
push
aaa
leave
lods
jns
sbb
or
push
jno
mov
xchg
mov
sub
gs
pop
leave
in
mov
mov
fcmovbe
pop
loop
cwtl
jl
rcrl
in
pop
add
mov
or
mov
push
xor
nop
outsl
in
inc
rcrl
dec
dec
mov
rcr
dec
pop
lods
push
hlt
fmul
ja
inc
fmuls
inc
dec
cld
xor
mov
cli
shr
into
jecxz
cs
xor
mov
enter
push
test
mov
pop
mov
repz
sub
and
push
sbb
and
int
movsl
inc
mov
sbb
pop
int
addr16
lret
subb
mov
lret
outsb
add
mov
jecxz
sarb
sub
dec
jl
std
mov
push
imul
aaa
orl
mov
xchg
das
jecxz
bound
popf
inc
mov
add
mov
mov
xchg
test
sbb
sub
jbe
sbb
cmp
inc
das
pop
rcrl
sbb
xor
out
mov
sub
ljmp
and
inc
adc
out
xchg
addr16
add
je
aad
jae
mov
out
cmp
mov
sbb
jecxz
stos
cmp
push
pop
negb
mov
mov
repnz
in
mov
fldl
sub
fisttpl
add
andl
inc
lcall
adcb
push
fiaddl
mov
mulb
setae
cmc
in
or
stos
xor
shrl
roll
xchg
add
xchg
jle
loop
gs
scas
and
xorb
sbb
jo
aam
dec
dec
loope
xchg
divb
lret
xor
jmp
sub
hlt
aas
clc
cmp
dec
aam
pop
pop
or
ret
fwait
stos
mov
fimuls
dec
outsl
mov
sbb
pushf
or
inc
sub
orl
mov
stos
loopne
sub
xor
nop
xor
dec
fistpll
mov
pop
and
xchg
adc
push
sbb
sub
add
mov
xor
mov
xchg
mov
clc
aaa
cltd
add
orl
pop
stos
outsb
mov
clc
xchg
add
jl
pop
and
sub
incb
dec
mov
xor
push
pop
and
notb
mov
jne
xchg
mov
jp
call
lahf
mov
jl
pop
orl
mov
adc
dec
popf
pop
adc
pop
mov
mov
clc
iret
fiaddl
push
call
cmp
pushf
xor
jne
and
jnp
aam
inc
stos
inc
gs
pop
mov
dec
add
in
jmp
fdivr
dec
inc
pop
fisubs
cmp
pusha
je
outsl
in
outsl
or
pushf
shlb
dec
xor
test
shrb
mov
in
add
loopne
mov
and
adc
popa
daa
sbb
jae
cpuid
ficoms
add
pop
aad
mov
jmp
jle
fwait
mov
lret
push
sahf
push
in
dec
cmp
arpl
xlat
inc
loope
pop
adc
jae
push
mov
insl
dec
xchg
cli
mov
movb
call
jnp
dec
inc
push
std
sti
fucomi
negb
ror
or
and
sbb
loop
cld
call
push
pcmpeqb
ljmp
push
cmp
imul
ret
jl
stos
orl
in
fs
jno
pop
ja
pusha
mov
dec
add
add
mov
movsl
movsb
fistpl
jnp
stos
jg
aam
sub
faddl
xchg
and
pop
mull
orl
test
pop
jl
js
inc
stos
lret
rclb
push
fdivr
cltd
divl
outsl
cs
mov
cmp
arpl
mov
nop
cltd
shl
ja
sbb
ljmp
stos
mov
adc
mov
sub
jns
jecxz
pop
or
dec
lcall
jo
sub
mov
xor
sti
aas
lahf
scas
in
mov
loopne
inc
xor
bound
xlat
stos
push
or
add
push
cli
fidivs
cmpsb
lret
sbb
sbb
sahf
inc
adc
movsb
les
dec
inc
fnstcw
push
stos
mov
dec
test
adc
adc
das
lds
in
test
bound
and
lods
mov
insl
adc
cs
adc
and
nop
jbe
pop
sbb
fs
mov
cmc
sub
mov
aad
nop
loope
in
sbb
dec
xor
jmp
adc
pop
pop
mov
cmpsb
loope
fiaddl
pop
jge
fsts
push
xchg
or
jl
xchg
nop
push
jge
mov
mov
in
dec
cmp
les
push
push
arpl
imul
addr16
push
sbb
loop
daa
adc
jno
inc
test
mov
addb
pop
cmp
fmuls
mov
test
arpl
ret
hlt
push
lret
movsb
xchg
and
cmp
sarb
lret
dec
dec
and
icebp
adc
aam
iret
xlat
dec
sub
js
pop
or
cs
cmp
fildl
jo
dec
jecxz
outsb
aas
push
into
bnd
call
add
jns
pusha
dec
cld
arpl
jb
adcl
lret
mov
xchg
dec
das
jae
inc
jle
jns
scas
notl
loope
addr16
xor
mov
xchg
fdivrs
xor
mov
in
ret
jne
mov
jg
ret
pop
mov
xchg
popf
arpl
mov
movsl
lods
add
andl
cltd
mov
fcoml
daa
or
or
sub
les
inc
xchg
mov
or
mov
mov
xchg
sub
cmc
cmp
jmp
mov
sbb
adc
cmp
test
cwtl
jne
mov
not
sub
mov
adc
loope
lret
fdivr
inc
and
pop
dec
adc
daa
jecxz
lods
dec
sbb
loopne
pop
fwait
cmp
mov
andb
and
mov
flds
movsl
adc
sub
cld
inc
in
shlb
or
mov
mov
sbb
rorb
movsb
jno
movsb
cmp
jno
fbld
xchg
xchg
adc
mov
dec
out
sub
sbb
lcall
sahf
sub
cmp
shll
and
stos
xchg
movsl
inc
es
mov
ljmp
sbb
xor
lods
push
pop
adc
shlb
or
mov
mov
pop
in
inc
outsb
mov
lret
aas
subb
mov
push
cltd
jle
pushf
notl
jno
jp
mov
dec
push
mov
daa
loopne
hlt
repnz
lock
pop
hlt
fdivrs
les
nop
push
or
pop
aaa
lret
mov
lea
popf
push
sub
into
push
or
fld1
xor
repnz
loop
ja
icebp
pop
push
and
lods
lock
enter
xchg
in
push
sbb
cmp
add
mov
sub
xlat
stos
and
inc
loope
and
gs
sbb
dec
cmpsl
pushf
je
sbb
dec
ljmp
ds
test
repz
out
adc
mov
push
imul
jmp
jb
leave
sbb
popf
adc
lods
out
push
jnp
xor
xchg
cld
in
stos
imul
sub
bnd
jmp
or
inc
es
pop
loop
pop
mov
lds
lret
and
jne
fiaddl
sarb
or
sti
icebp
pop
js
adc
in
cmp
cs
mov
bound
xchg
push
inc
out
into
and
inc
jb
loop
mov
cld
inc
daa
adc
sti
sub
xor
xchg
mov
in
aaa
mov
sti
inc
and
jns
imul
in
pop
xchg
loop
jnp
cmp
lods
movsb
cmp
test
adc
mov
lret
push
jne
repnz
and
popf
repnz
imul
cmp
hlt
jno
and
push
cmp
adc
cli
std
or
lods
adc
jne
mov
andl
jno
fwait
jne
sub
cmp
mov
and
sub
and
add
or
sbbl
pop
push
jbe
xor
lret
jbe
test
mov
test
mov
repnz
sahf
mov
mov
scas
push
cmpsl
fldt
out
jle
and
stos
sbb
pop
out
imul
jg
ret
adc
nop
mov
pop
sti
out
fwait
pop
aam
and
test
cmp
int
sti
pop
test
or
dec
lds
clc
sbb
jne
sbb
jle
mov
ret
bound
stc
loope
test
test
xchg
sub
jns
in
rcll
adc
outsb
test
nop
in
pop
insl
pusha
inc
xchg
mov
mov
jle
sbb
mov
lcall
loopne
dec
into
test
cwtl
mov
js
and
jl
adc
sub
push
loope
lret
xchg
rclb
jp
jne
xor
dec
aam
jg
sbbb
test
subb
push
adcl
sbb
cwtl
jns
in
rcll
loop
sti
movsl
repnz
repnz
mov
daa
roll
cmc
outsb
call
rcrl
mov
fiaddl
adc
lock
bnd
andl
shll
lret
lret
es
imull
insl
pop
dec
test
inc
adc
sbb
nop
or
sub
jge
xchg
xor
outsl
scas
dec
out
dec
sub
call
xchg
xchg
popa
call
mov
pop
scas
adc
xchg
das
sbb
in
bound
jne
bound
pop
lds
mov
inc
cmpsb
adc
outsb
mov
cmp
call
dec
popa
push
cmc
data16
popf
jb
loop
stos
push
mov
xor
push
and
add
cmpsb
sbb
push
dec
sbb
dec
int
push
sub
push
nop
lock
inc
and
int
pop
sbb
adc
inc
dec
cli
xchg
sbb
xor
fidivl
dec
push
mov
mov
imul
sub
ljmp
lcall
mov
out
das
sahf
mov
or
push
stc
scas
pop
jno
mov
cmp
outsb
and
jle
fsts
push
xchg
mov
ror
les
xlat
mov
hlt
xor
fsubl
adc
jo
mov
cmp
lahf
sbb
aaa
fwait
in
mov
js
mov
cs
jo
pop
pop
test
sub
inc
ret
int3
mov
jle
fwait
mov
stos
cmp
jp
lret
push
imul
jae
dec
mov
test
inc
lcall
clc
loopne
or
out
jbe
cmpsb
dec
je
rcr
push
fnstcw
mov
rcrb
movsl
pushf
ds
push
cmp
cmpsl
mov
sbb
push
xchg
or
and
fmuls
mov
int
stos
push
adc
int
inc
inc
test
jno
lds
ljmp
loope
lret
xor
pop
push
xchg
stc
in
sub
lahf
jle
xor
or
insb
js
pop
dec
cli
out
scas
in
dec
stos
and
pop
cmpsb
push
das
movsb
pop
mov
push
aam
mov
sub
imul
dec
andnps
dec
mov
dec
mov
imul
cwtl
stos
rcrl
lcall
sbb
cli
mov
mov
je
fidivl
xor
out
cmpb
inc
into
push
popf
repz
lea
cmp
ret
cmova
notl
xor
pop
fidivrl
icebp
mov
scas
push
aaa
sbb
in
lret
mov
ret
stos
jmp
rorl
sarb
jle
lock
dec
mov
jne
adc
sbb
xchg
mov
mov
push
movsb
stc
jecxz
xor
call
or
mov
pop
lret
add
iret
sbb
js
push
cwtl
hlt
pop
outsb
xchg
pop
andl
out
gs
test
fwait
xchg
neg
cltd
pop
mov
test
shlb
data16
cli
mov
hlt
fsubs
scas
push
push
lahf
mov
cmp
test
sub
inc
lret
push
imul
xchg
fcomps
mov
add
sub
pop
and
adc
mulb
cmpl
nop
sub
iret
xor
imul
mov
sub
in
hlt
or
fcompp
adc
xchg
jne
push
fistl
jno
loope
pop
push
sbb
push
mov
sub
jae
add
lea
sahf
iret
clc
push
addl
in
fimull
shl
dec
testl
add
fcmovbe
mov
insl
ss
sbb
or
and
sahf
imul
pop
xor
push
je
jg
fstpt
movsb
aad
mov
cmp
xchg
lret
sub
push
arpl
xor
gs
sbb
pop
push
push
dec
xor
mov
les
pop
pushf
movsb
mov
sti
adc
outsl
in
mov
adc
repz
mov
nop
adc
mov
outsb
and
xchg
mov
add
xlat
mov
jmp
xor
movsb
push
sbb
sub
shr
idivb
lret
sub
push
cmp
cld
xor
lahf
test
mov
mov
repz
fwait
push
jae
inc
jne
jns
inc
cmpsb
lcall
fdiv
fdiv
push
in
xor
out
mov
fsubrs
call
stos
ds
movsb
add
xor
inc
cmc
imul
mov
and
negl
xor
vmread
and
in
ja
cltd
push
push
scas
xor
mov
jno
jmp
insb
mov
and
mov
les
adc
adc
insb
mov
daa
push
fimull
xchg
and
testb
gs
mov
cmpsb
mov
jbe
out
push
mov
scas
repz
ds
dec
jl
outsb
loop
mov
mov
sub
mov
push
imul
ret
sub
or
push
repz
inc
test
ds
and
sbb
cltd
add
aas
xchg
mov
pop
scas
testl
decl
pushf
push
cs
xchg
repnz
in
add
stos
pop
sbb
nop
les
mov
dec
inc
and
lods
pop
mov
ss
cmp
and
test
inc
lret
int3
and
pop
aas
stos
dec
add
jae
mov
fsubs
enter
es
enter
dec
push
and
subb
inc
add
push
ja
mov
das
jno
push
push
push
or
cmpsl
outsb
jnp
imul
inc
inc
cs
push
subl
sbb
mov
sub
std
jno
mov
and
dec
inc
fdivp
inc
xchg
jle
jno
push
pop
jns
cmova
scas
or
outsb
jg
inc
insb
mov
data16
jp
xchg
std
jne
mov
out
dec
xchg
xor
jmp
test
mov
cmp
iret
dec
jno
sbb
outsl
push
loopne
lret
jmp
xor
iret
and
fldcw
ja
and
pop
loopne
or
test
enter
fldl
les
repnz
pusha
repnz
and
int3
fwait
sub
ret
bound
das
rcl
js
sub
pop
add
out
jb
cmc
jg
insb
fstpt
push
pop
stos
inc
and
loopne
lock
mov
mov
jnp
or
loope
mov
lods
lret
inc
inc
or
in
sti
ror
lock
in
pusha
loop
test
stc
xchg
pop
push
lea
pop
and
pop
mov
fnstenv
and
cmc
not
cltd
sahf
enter
fs
lea
popa
cs
mov
mov
std
fucomi
dec
mov
dec
xlat
jno
xchg
xorb
cmp
test
addr16
jmp
jne
shll
xor
sub
sub
daa
bound
enter
jbe
jnp
notb
dec
xchg
mov
scas
mov
push
push
enter
mov
shlb
push
dec
out
out
jno
nop
cwtl
cmp
aad
jns
fistpl
mov
andb
mov
in
dec
sbb
xor
popa
jmpw
or
jmp
icebp
adc
pop
sub
inc
addr16
icebp
dec
xor
jmp
push
fsubr
sub
push
orl
sbb
cmpsl
and
test
loope
lahf
out
jp
clc
shlb
xchg
jecxz
aad
dec
jmp
xchg
out
and
jne
mov
cmc
and
mov
mov
jmp
mov
aaa
jnp
cmp
xchg
mov
out
inc
lods
hlt
jns
into
iret
fisubrs
and
mov
jo,pn
sbb
daa
aaa
or
cmpsl
in
inc
es
out
xchg
movsb
and
and
imulb
fsubl
lret
ret
repnz
sti
shrb
dec
repz
jg
and
push
mov
stos
fnstenv
mov
sub
cmc
hlt
sub
mov
fisttpl
mov
jp
pop
add
mulb
ficoms
lods
insl
mov
iret
mov
repz
scas
mov
push
insb
cmp
out
mov
mov
pop
mov
or
or
dec
cmpsb
shlb
inc
jecxz
jnp
outsl
stos
mov
and
mov
mov
push
adc
push
jmp
push
movsb
cmp
push
sbb
mov
sbb
inc
and
daa
push
cmpsb
dec
imul
and
jg
fnsave
and
mov
jmp
pop
pop
add
mov
movsb
stos
mov
push
cld
pop
sub
pop
lods
in
addr16
and
daa
fwait
mov
ret
xchg
mov
mov
push
inc
mov
and
pop
fisubrl
int
xchg
dec
mov
ja
add
mov
hlt
jns
test
insb
pop
rclb
outsl
cltd
jns
rcr
mov
xor
sbb
sbb
clc
inc
jo
dec
mov
loop
hlt
hlt
je
cvttps2pi
scas
popf
jg
pop
pop
pusha
jle
cli
jp
rolb
push
data16
shlb
xchg
adc
mov
jecxz
inc
jge
mov
and
add
xor
arpl
repnz
ss
cltd
cmp
out
cmpsl
sbb
mov
inc
push
data16
loop
pop
das
push
mov
jno
outsb
push
inc
sub
loope
shll
pop
xor
lret
xor
das
mov
imul
xchg
cli
inc
xchg
loope
clc
bts
jo
mov
cmp
stos
cmp
jno
mov
xchg
pop
inc
out
test
outsb
and
push
mov
sbb
push
jbe
mov
mov
push
xchg
sub
scas
outsb
adc
stc
xor
inc
arpl
outsb
imul
frstor
mov
fiadds
xlat
outsl
fld
add
sub
and
in
xchg
push
inc
mov
ficompl
lds
cmp
mov
cli
jns
sbb
push
or
pusha
jno
xchg
stos
mov
mov
cmp
sub
mov
push
adc
push
xchg
out
xchg
mov
test
adc
adc
pop
or
dec
sbbb
hlt
xchg
cmpl
inc
sub
xchg
mov
xchg
xor
lret
les
cmp
and
add
ja
xchg
xchg
loope
cltd
push
test
call
jno
repnz
enter
in
xchg
sbb
cs
pop
pusha
nop
push
or
dec
ret
lret
fsts
push
mov
mov
inc
int
inc
incl
push
mov
pop
pop
dec
xor
mov
test
lret
fbstp
jg
add
fcompl
ret
push
xchg
ds
cmp
pop
lea
jne
push
inc
inc
jmp
in
lret
fdivl
dec
popf
cs
inc
ss
push
or
inc
fxch
je
pushf
jl
sbb
andb
sbb
out
stos
sub
fldcw
lods
mov
inc
or
adc
dec
or
jge
aaa
sub
add
xchg
movsl
mov
cld
adc
sbb
push
popf
sbb
es
cmp
pop
xlat
loope
cld
push
fisubrs
mov
xlat
sbb
loopne
and
dec
cltd
sarl
cmp
sub
lret
mov
std
lahf
and
hlt
stos
cmpl
mov
xor
sti
cs
xor
fsubp
in
repnz
sbb
fsubrs
mov
movsb
rcrb
ss
mov
jg
insb
ds
pop
mov
lods
neg
add
dec
ret
std
xor
dec
dec
test
cmp
add
fstps
cmp
mov
mov
paddb
cmc
adc
dec
inc
or
call
mov
cmpsl
popf
mov
xchg
cli
mov
out
xor
mov
sarb
cmp
out
cmp
push
daa
jae
sub
add
push
push
dec
sub
mov
push
and
xchg
mov
push
pusha
das
mov
scas
cmpsl
leave
mov
jb
lret
pusha
jmp
jo
inc
ljmp
or
pop
sub
xor
bound
cmc
leave
stos
jae
xchg
pusha
mov
cmc
into
sbb
in
loope
cs
iret
cmp
cs
sti
enter
push
aas
pushf
mov
and
imul
scas
cmp
dec
mov
mull
sbb
jle
daa
cmpsb
dec
and
mov
int3
xchg
sti
mov
mov
iret
and
jmp
lret
mov
xchg
cmp
repz
std
insl
xchg
mov
sub
cmp
out
xor
xchg
or
pop
pop
pop
pop
das
sbb
pop
rclb
data16
mov
add
pop
fs
sub
and
inc
pop
push
pop
add
es
es
cld
cwtl
movsl
std
sub
jle
loop
adc
add
jge
les
loopne
xor
enter
adc
dec
cmpsb
xchg
dec
push
roll
aam
rcrb
fs
mov
insb
mov
adc
or
stos
sbb
out
or
dec
mov
or
out
fsubrl
leave
ds
mov
jne
in
lret
aad
outsl
or
cmp
jecxz
sbb
sub
push
inc
out
jnp
ret
out
xchg
icebp
outsl
lahf
data16
jno
jle
shlb
in
add
pop
out
in
xorl
cmp
xorb
push
pop
mov
mov
mov
roll
and
inc
sbb
std
mov
int
nop
lods
arpl
push
loop
out
dec
cmp
and
mov
jo
xor
leave
cltd
jbe
popf
int
dec
int3
push
jne
mov
or
jb
xchg
xchg
cs
xchg
sbb
jbe
mov
loope
fisttps
push
xor
clc
or
add
daa
xor
outsl
in
call
push
pusha
fisubrl
pop
xor
mov
dec
movsb
push
into
mov
sub
dec
xor
jl
mov
cmp
or
dec
xor
ret
sbb
mov
daa
stos
fidivrs
negb
xchg
or
mov
sbb
andb
popa
xchg
mov
pop
push
sbb
cs
clc
mov
roll
gs
lahf
out
das
jmp
jle
inc
lahf
cmpb
jl
xchg
adcl
sbb
ret
inc
xchg
imul
cmp
push
incb
addr16
mov
hlt
pop
xor
fsubr
mov
adcl
les
shrl
xchg
jnp
xor
loope
jle
imul
loop
imul
scas
mov
imul
and
mov
mov
dec
xor
xor
pop
pop
inc
xchg
subb
jnp
dec
xchg
cmp
pop
sub
ja
out
cs
pusha
insl
imul
adc
add
mov
add
loopne
test
inc
dec
xchg
lea
in
pop
xor
stc
dec
cmpsb
sbb
into
sbb
cmpsb
movsl
sti
je
cmpsl
mov
or
jge
cltd
enter
mov
add
sarl
pop
std
inc
cmpsl
std
cmp
fidivrl
shl
cmp
cmc
jbe
push
xchg
mov
daa
and
mov
and
add
cmpsb
push
pop
jmp
std
into
cmpl
pusha
test
mull
pop
pop
push
rorb
xchg
lods
mov
ficoms
movsl
stos
dec
sub
cltd
push
adc
inc
popa
test
ret
sbb
cmp
add
push
mov
dec
and
jns
fisttps
insb
sub
adc
mov
sub
mov
push
and
mov
movsl
mov
fs
pushf
cmp
mov
clc
push
mov
pcmpgtw
ja
push
xor
or
rcrb
repz
data16
pop
repz
xor
out
and
adc
mov
pop
repnz
fimuls
dec
jo
in
xchg
dec
pop
loopne
jle
fisubrl
cld
sbb
ret
loop
nop
cmpsb
push
test
jmp
mov
xchg
xchg
xchg
out
or
inc
ja
or
mov
mov
dec
inc
aaa
xor
cs
fwait
aaa
dec
pop
fstps
rol
inc
jno
das
lahf
daa
sbb
xchg
mov
je
in
loopne
test
inc
xchg
aaa
dec
int
mov
sub
pop
fmull
jl
lea
insb
jecxz
or
jl
cmp
repz
fistps
ja
jp
cmp
notl
rcrl
sbbb
and
lods
mov
mov
popa
jns
add
cmpsl
stc
cmc
or
sahf
cld
push
xor
fdivrl
mov
xchg
and
push
mov
mov
mov
aas
loope
add
jbe
ret
pop
daa
nop
incl
xchg
fldt
pop
jecxz
aad
mov
or
xchg
push
fwait
mov
aaa
sarl
inc
mov
cmp
cmp
aam
cwtl
ja
add
popa
fdivr
push
jo
jno
pushl
xchg
ret
mov
jle
repnz
jno
sbb
mov
data16
popa
movsl
inc
cmp
push
mov
pop
lret
ss
pop
jg
repnz
outsb
inc
fs
push
mov
cmpsl
sbbb
nop
repz
xor
scas
push
int
fmull
lret
shrb
mov
sbb
mov
fwait
dec
sbb
roll
mov
hlt
inc
insb
inc
sbb
lcall
jne
into
and
push
ret
repz
notb
daa
pop
lock
popa
xchg
xchg
push
sbb
aad
mov
inc
inc
outsb
stos
xchg
push
fstpl
mov
mov
aaa
cmc
mov
testb
int3
add
add
lea
or
xor
cmp
repz
push
cmp
push
or
add
inc
mov
xchg
in
xchg
fldt
je
sbb
xor
scas
mov
sbb
inc
add
xchg
in
insb
lea
mov
insb
in
cmp
xlat
repz
sarl
mov
call
int3
call
movsb
cltd
inc
into
mov
dec
dec
outsb
push
and
cltd
insb
pop
xor
xor
pusha
cmp
inc
ffree
and
addr16
mov
jno
push
std
sub
mov
adc
inc
push
pop
xor
sbb
aaa
repz
mov
scas
xchg
pop
sub
adc
push
mov
and
or
repz
out
sti
outsl
pushf
mov
adc
jecxz
push
xchg
push
int3
inc
mov
rorl
imul
stos
or
mov
pop
fs
push
xorb
sub
fnstcw
div
xor
out
mov
mov
xor
push
mov
cmp
pop
mov
fsubrs
xorb
jle
jo
call
lods
icebp
sbb
out
hlt
and
and
push
mov
test
ds
or
pop
jecxz
xor
jno
in
addr16
jmp
and
outsl
adc
pop
arpl
cmpsl
jbe
cmp
push
cmp
test
pop
repz
xchg
loop
cli
mov
dec
mov
xor
or
test
xchg
xor
fcmovnbe
pop
cmp
insl
push
shl
orl
les
add
mov
js
cmp
jmp
xchg
mov
in
sbb
ret
stc
inc
sub
iret
adc
push
fisubs
clc
mov
iret
xchg
and
les
xlat
sarl
lea
mov
pushl
arpl
testb
adc
jmp
shlb
xor
push
push
pop
data16
popf
mov
cld
mov
popa
push
mov
sbb
jo
adc
mov
arpl
mov
jge
and
rol
push
cld
std
iret
fildll
pop
and
sbb
je
test
xor
xchg
lret
mov
icebp
int3
pop
int3
ret
dec
mov
les
stos
out
mov
aad
scas
loop
leave
jno
scas
fdecstp
bnd
dec
xor
aas
lea
xchg
scas
sahf
xchg
stc
push
imul
shll
ljmp
jns
mov
out
push
xchg
push
pop
fists
lock
push
cmp
bound
sub
or
pushf
cmp
mov
cmpsb
jno
bound
mov
iret
sbb
call
xor
cmp
outsb
insb
out
pop
pop
int
lahf
mov
or
adc
adc
scas
mov
loope
pushf
mov
dec
mov
pop
subl
cld
xor
fsubrs
mov
push
mov
test
cmpsb
das
jae
inc
pop
lret
push
cli
fcmovu
test
pop
sub
xor
decb
mov
pop
mov
out
jnp
adc
dec
sbb
sub
mov
add
mov
mov
mov
shll
xchg
sub
sbb
mov
aam
push
dec
aad
xchg
lds
jmp
or
sahf
out
js
xor
test
mov
or
scas
leave
lret
js
jnp
repnz
cwtl
or
pop
sub
test
fcmovbe
mov
lods
in
sahf
mov
jle
sti
add
sbb
aam
movsl
lcall
xchg
cmp
psubusw
std
xchg
sub
jmp
int
mov
decb
cmp
and
cmpsl
jle
jmp
jb
pop
test
adc
push
aas
fs
adc
and
dec
inc
je
ss
icebp
mov
cltd
mov
repnz
jg
or
xchg
push
jge
outsl
sahf
push
dec
xor
xchg
stos
fdivrs
mov
jo
dec
or
jp
or
test
mov
enter
pop
fcomps
out
mov
jnp
rorl
mov
int
jbe
popf
lahf
lret
in
xchg
js
repz
rcr
test
lea
lods
adc
mov
add
mov
and
clc
cmpsl
xchg
or
push
add
out
inc
fcompl
xchg
xchg
lds
mov
lock
lret
jl
pop
and
pop
add
pop
mov
xchg
sbb
daa
lods
sbb
xor
aad
cwtl
je
fwait
out
lahf
mov
bound
sbb
pop
in
sti
inc
inc
mov
pop
xorl
or
mov
mov
ds
sbb
icebp
aam
mov
and
stc
sub
mov
hlt
cmpsb
xor
int3
sub
sti
movsl
xchg
add
enter
into
outsl
inc
cld
dec
cmc
cltd
inc
scas
rcrb
outsl
jecxz
ljmp
cmp
or
pusha
jmp
shlb
fs
repz
pop
enter
aad
dec
xlat
je
fcomi
ss
test
mov
xchg
inc
dec
aam
cmp
lcall
cmp
cs
dec
xor
inc
push
aaa
mov
push
imul
dec
pop
and
pop
xchg
pop
dec
shrl
jge
mov
cmp
push
dec
xor
pusha
lods
jns
popa
sbb
stc
in
loope
and
int3
loopne
js
les
jg
ret
sbb
sub
shr
push
fsubl
cli
int
adc
scas
stos
inc
sub
cmpsl
mov
mov
or
jno
jg
xorl
pop
pop
out
sbb
aam
inc
movsl
adc
in
mov
pop
xchg
jecxz
add
xor
mov
shl
mov
jmp
inc
out
inc
inc
gs
add
and
jae
pushf
mov
in
cmp
add
xor
enter
mov
add
fisubs
dec
jmp
jno
out
stc
enter
push
jns
dec
jnp
movb
loop
stc
cli
cld
lods
lahf
out
stos
popa
add
push
push
push
dec
or
mov
add
lds
fbstp
fldcw
mov
js
adc
in
xor
daa
movsl
push
add
cmp
scas
mov
es
jbe
mov
neg
xchg
jp
adc
mov
sbb
repnz
or
cwtl
pop
and
xor
fimull
data16
and
jno
stc
pop
roll
insb
mov
fcomps
add
data16
scas
test
and
mov
adc
popf
call
lods
push
sub
scas
add
xor
xor
pop
xor
fldl
mov
cltd
jb
insl
loop
mov
outsl
clc
dec
xchg
mov
lret
aaa
ficoml
rcrl
lret
out
xchg
cmpsl
dec
add
mov
mov
mov
cli
lcall
mov
loop
jo
ss
pusha
xor
add
jne
sbb
sub
and
stc
mov
lret
xlat
xchg
cmp
in
adc
decl
mov
fisubrs
outsb
add
sbb
mov
xchg
test
shll
ss
inc
dec
out
xchg
lock
ja
mov
push
fists
pushf
out
daa
mov
cmp
sub
enter
movb
or
pop
insl
xor
das
jp
scas
adc
jl
mov
icebp
jae
in
int
and
xor
cmpsb
fdiv
push
sbb
mov
enter
sbb
xor
outsl
popa
or
add
int3
or
test
jecxz
lcall
imul
and
pop
in
enter
pop
push
dec
sbb
mov
daa
lcall
xchg
lret
in
push
outsb
adc
mov
sub
xchg
adc
lahf
mov
dec
lahf
pop
push
adc
jmp
pop
pop
dec
je
add
in
adc
enter
ret
xchg
mov
mov
dec
push
scas
aam
pop
dec
int
fdivr
mov
inc
fists
icebp
nop
fadds
sbb
jnp
jl
cmpsb
mov
sub
jo
push
movsl
sarb
std
imul
int3
xor
or
pop
das
xor
xchg
cmp
sbb
push
and
mov
xor
jge
mov
sbb
inc
and
mov
cmp
fistl
mov
hlt
pop
std
jb
add
aad
in
push
mov
popf
js
inc
test
lods
cwtl
adc
arpl
cmpsl
mov
out
movsb
mov
and
movsb
add
push
pusha
stos
push
dec
cwtl
xor
adc
loope
push
xor
mov
and
loop
into
push
shlb
cltd
out
mov
orb
sbb
mov
fidivrs
hlt
scas
test
add
arpl
in
and
aad
test
enter
jp
bound
stc
sub
push
sub
push
push
cli
cmp
push
or
pop
push
pop
je
enter
dec
jb
shlb
jge
push
mov
out
in
cmp
add
mov
ss
outsb
mov
inc
popa
mov
xchg
xor
aad
cwtl
push
and
in
push
lock
mov
sub
jl
mov
xorl
jle
leave
test
dec
fldcw
test
lock
sub
xchg
hlt
xchg
aaa
je
out
lock
test
push
imul
icebp
ja
repnz
ljmp
inc
xchg
in
jmp
mov
or
cmp
call
out
lahf
in
xchg
mov
push
inc
ds
dec
fistpll
pusha
and
push
shl
pushf
and
xlat
and
sbb
push
xorb
mov
popf
les
jl
cmp
cmp
add
pusha
adc
push
in
lcall
into
mov
inc
sub
sub
sub
test
dec
mov
scas
push
sbb
mov
bound
pop
ffree
mov
adc
iret
int
xlat
fstl
mov
cmp
mov
aaa
or
push
pop
ret
sbbl
adc
ret
dec
shlb
shl
jp
cmpl
jg
das
js
aad
xor
iret
sub
inc
fiaddl
loop
repz
mov
ss
inc
in
dec
icebp
outsb
pop
mov
shl
in
jle
popa
xor
mov
setb
outsl
dec
aaa
bound
pop
mov
pushf
mov
xchg
stc
rcrb
jg
sbb
push
mov
adc
repz
add
or
outsb
cmp
mov
cld
scas
push
fbstp
clc
push
outsl
out
int
daa
ret
lods
mov
jmp
mov
int3
daa
rorb
adc
push
sub
cmp
iret
xchg
repnz
gs
and
add
stos
addr16
icebp
jns
mov
adc
mov
int3
inc
imul
in
and
arpl
or
jb
mov
jno
push
imul
mov
mov
cs
pop
and
aaa
mov
push
dec
inc
mov
ja
lret
cmpsl
cmp
in
int
and
and
sbb
fstp
out
mov
cmp
cmp
adc
sub
enter
clc
adc
push
push
and
popf
mov
or
jne
jl
add
enter
repnz
or
add
push
sbb
pop
push
mov
inc
in
int3
in
xchg
pop
inc
jge
sub
adc
pop
sub
cwtl
xchg
aad
xchg
pop
popf
cmpsb
adc
inc
jle
mov
pusha
xor
sbb
rcr
ret
cmp
xor
in
add
shr
inc
cmpsb
pusha
cmp
loopne
push
jmp
and
pop
test
cmp
std
mov
lock
iret
fwait
sub
dec
int3
ss
cmp
pop
stc
xlat
jecxz
and
es
and
sbb
jmp
lea
rolb
pop
aas
jmp
fmull
lcall
das
fisttps
adc
cwtl
sbb
mov
dec
lods
lret
push
into
or
xchg
jg
pop
mulb
mov
fwait
inc
dec
lcall
xor
adc
out
mov
cmpsl
cld
pop
insb
in
sub
xor
push
cmp
add
pushf
pop
cmpl
mov
mov
pop
getsec
icebp
and
cwtl
shrl
test
outsb
mov
sbb
leave
push
cmp
in
mov
gs
cmc
jnp
gs
mov
jne
negb
jb
sbbl
inc
in
pop
in
cmpsb
inc
sub
adc
cli
cmp
test
inc
or
cltd
adc
je
sub
lret
dec
in
scas
pop
mov
cmpsl
popl
mov
xchg
es
icebp
push
sti
shlb
xchg
test
stos
sbb
xchg
adc
shrl
mov
daa
sub
push
ja
mov
popa
mov
adcb
lods
mov
leave
stos
push
fistl
xchg
sub
and
mov
and
nop
daa
xchg
add
push
cs
sub
add
ret
ret
add
jge
sbb
addr16
pop
mov
xchg
outsl
mov
jl
dec
jmp
insl
nop
pushf
jecxz
lcall
push
inc
das
dec
cmp
add
js
jge
enter
das
lods
repnz
and
jp
fs
xor
push
cmpsb
mov
out
sbb
inc
cs
push
lret
daa
sbb
or
push
sti
ds
es
push
in
mov
sub
cld
jmp
mov
lods
lcall
out
jecxz
xchg
mov
mov
mov
fsubrs
xchg
dec
cld
fisubrs
addl
stc
pop
push
mov
pop
add
sbb
subl
int
aam
sbb
ja
scas
test
dec
in
gs
push
cli
pushf
and
dec
je
aaa
out
add
jae
push
pop
shl
or
out
ret
jecxz
dec
jmp
lds
inc
inc
jecxz
loop
mov
sub
mov
out
mov
movsb
insb
iret
xor
fsubl
jmp
int
xchg
and
push
lea
cltd
test
jns
lret
or
add
in
das
adc
jo
cmpsb
pop
pop
jle
pop
lods
or
je
loopne
test
sbb
dec
sti
push
xchg
shlb
xor
stos
pop
xchg
push
add
jnp
jno
lods
repz
fistpll
pop
or
popa
lock
mov
aas
loopne
popa
in
repnz
fisttpl
adc
mov
adcl
cmpsb
enter
jp
inc
jne
sbbl
push
loopne
inc
adc
adcb
mov
cmp
xchg
jae
iret
xchg
xor
dec
stc
push
out
xchg
leave
popf
movsb
xchg
pop
cli
mov
leave
add
loope
rolb
repnz
lock
pop
fcomip
mov
jb
jl
loope
in
in
lret
and
mov
lods
and
xchg
pop
sub
and
push
subb
xlat
and
mov
or
inc
cmovg
xor
icebp
xor
dec
cmp
pop
or
movsb
fistl
adc
je
inc
add
scas
loope
dec
jns
data16
cmp
xor
xchg
or
inc
cmpb
or
lahf
pop
push
push
insl
push
jno
call
sub
fldt
scas
je
cmp
adc
insl
subb
jne
mov
push
lds
jbe
mov
stos
jnp
loopne
push
in
mov
mov
mov
cmp
mov
sar
fistpll
mov
icebp
add
aas
dec
mov
loopne
dec
inc
xchg
dec
faddl
lahf
inc
push
nop
rcll
jmp
icebp
and
notl
lcall
loopne
jne
dec
movsb
daa
cmp
or
cld
xchg
pop
pop
out
xchg
insb
addl
pushf
enter
insb
jl
jge
das
xchg
mov
out
aam
lahf
add
leave
xor
push
in
mov
adc
jnp
leave
lods
lds
ljmp
jb
cs
inc
lret
or
pop
jp
lcall
mov
bound
testb
js
int3
stos
lock
or
sbb
pop
mov
stos
jge
pusha
and
lods
mov
out
inc
dec
out
xchg
xchg
dec
pusha
adc
xchg
cmpsl
cmpb
jle
clc
mov
into
cli
sahf
imul
scas
jp
sub
sbb
sahf
adc
shl
xchg
pop
mov
and
sub
pusha
push
lds
sub
ljmp
mov
jbe
lock
rorl
jno
orl
mov
aas
mov
subb
cmpb
or
cmpsb
fnstsw
adc
in
or
int
cmp
test
adcb
inc
mov
dec
push
xchg
sbb
adc
hlt
add
mov
adc
mov
scas
mov
cmp
in
ljmp
cmp
jno
adc
in
inc
cmpsl
mov
sbb
push
sub
insl
dec
in
xor
adc
int
lock
lret
jp
jg
int3
hlt
xor
cmpsl
jp
xchg
xchg
jle
lods
je
adcb
popf
call
ret
mov
mov
pop
push
rclb
xchg
jno
inc
inc
push
lcall
xchg
push
into
pop
sbb
mov
test
push
pop
nop
into
sbb
cmp
or
pop
fimuls
in
push
dec
inc
pusha
test
nop
dec
inc
jae
jge
nop
xor
push
xor
imul
aad
push
stos
sbb
in
and
rcrl
lea
je
ljmp
enter
call
and
mov
mov
mov
push
sub
repz
addr16
nop
hlt
pusha
out
jp
sub
ljmp
les
aad
mov
push
jl
or
jp
mov
xor
nop
shrl
jns
jae
adc
dec
adc
add
lods
jp
mov
push
hlt
mov
sbb
push
cltd
enter
push
out
cmp
inc
es
iret
push
in
sub
xor
jge,pt
pushf
cld
loopne
push
cmc
push
nop
lret
push
pop
stos
inc
dec
mov
pop
sbb
addl
mov
fstpl
test
pushf
repz
push
sbb
stos
cli
fs
insb
adc
shr
sbb
cmpsb
cmp
stc
testl
ret
push
pop
xchg
mull
add
into
ret
pusha
xlat
fninit
adc
mov
dec
push
loope
adc
sti
xor
mov
xlat
ret
xchg
je
outsb
lea
pushf
jmp
mov
enter
popa
sub
int3
mov
inc
es
jnp
xor
sbb
mov
xor
cmc
push
and
and
fstp
xor
mov
test
out
jo
xor
xchg
dec
lcall
jmp
and
mov
test
adc
mov
sbb
cmp
js
sub
lret
push
roll
mov
sarl
test
negl
paddusw
je
sbb
in
cmpsl
clc
inc
push
incl
shrl
cmp
pop
mov
pop
aad
inc
jmp
out
insl
mov
xchg
sub
loope
cmp
sbb
and
sti
pop
int3
jo
sbb
xchg
xchg
mov
arpl
fmuls
pop
dec
sub
cmc
leave
sbb
cmp
jmp
xchg
dec
pop
jle
scas
pop
push
in
rclb
fisubrs
stos
mov
push
ja
push
xchg
testl
inc
push
and
lock
loop
sub
insb
insl
xor
test
imul
mov
popf
jecxz
jnp
sub
push
mov
pop
push
mov
insl
add
movsl
ret
push
mov
std
xchg
jb
enter
out
xchg
inc
movsb
cmp
out
clc
xchg
adc
aad
mov
sub
pop
push
mov
adc
inc
adc
mov
cli
mov
in
mov
rorb
mov
cmp
fdivs
sub
addr16
out
add
mov
stos
adc
push
cwtl
lcall
test
int3
loope
out
cld
mov
repz
cmpsl
jecxz
add
jecxz
push
les
adc
lds
notl
pop
inc
adc
adc
aas
ret
jg
out
pop
jp
add
dec
jb
xchg
loop
sbbl
mov
add
mov
jne
popf
outsb
or
mov
mov
fwait
jnp
add
dec
push
leave
push
inc
lds
or
jns
mov
cmc
mov
add
add
ret
cmp
je
lds
lahf
xor
add
pop
mov
fmuls
pushf
xor
dec
mov
mov
mov
mov
xchg
xchg
imul
mov
test
mov
ljmp
negb
cmpsb
rorl
roll
inc
adc
clc
cltd
popa
loope
dec
jb
sbb
xchg
cld
mull
push
xchg
mov
rolb
cmp
cmp
mov
cmp
cli
xchg
mov
jb
leave
repnz
mov
inc
cmp
cmpsb
cmp
sub
scas
orb
push
cmc
lcall
dec
jl
fidivrl
jno
jmp
ds
clc
inc
mov
xchg
push
adc
fs
jae
mov
clc
xchg
cmpl
testl
sbb
adc
push
andl
mov
leave
push
mov
scas
in
jg
adc
andb
xchg
pop
add
add
imul
jno
xor
aas
mov
fildll
add
mov
xchg
sub
ds
mov
or
mov
mov
ret
insb
jo
jnp
mov
pushf
les
pop
mov
in
aam
xchg
addb
mov
cmpsl
mov
jmp
jl
sahf
sub
cmc
or
add
subb
push
sub
add
push
or
outsb
ljmp
cwtl
stos
pop
es
pusha
push
pop
ficoml
xlat
mov
test
rorb
cmpsl
insl
fcmovnbe
fxch
add
test
repz
adc
mov
in
pop
sbb
sbb
mov
xchg
pop
xor
lock
test
sahf
jno
cmp
mov
sti
jns
xchg
inc
and
and
iret
sbb
daa
orl
out
loop
mov
inc
das
mov
pop
adc
adc
test
stc
std
or
push
rcl
or
xor
xchg
sbb
lea
sbb
push
movsb
xor
mov
adc
jne
and
in
adcl
and
data16
lret
popa
or
insl
mov
clc
fidivrl
gs
jnp
sbb
pop
lret
xchg
xlat
xor
cli
lahf
aaa
clc
or
popf
mov
popl
mov
push
xchg
les
sbb
sbb
push
mov
mov
inc
lahf
out
dec
jle
push
shll
pusha
inc
out
xchg
out
xchg
insl
inc
jb
out
popf
push
and
iret
dec
sub
outsb
loope
sub
in
loop
dec
fdivs
mov
xchg
pop
pusha
subb
mov
and
push
cmp
repz
push
mov
pop
cli
fldl
xchg
pop
or
cmp
shlb
cmp
test
jmp
movsl
or
ljmp
push
mov
fmul
negb
mov
pop
jle
jecxz
xchg
addr16
jmp
sub
mov
scas
or
jle
imull
xchg
push
jnp
jne
adc
sti
enter
out
mov
mov
es
or
or
fwait
jns
dec
push
movsl
int
sub
xor
stos
cmp
aad
pusha
ljmp
add
ljmp
lods
shrl
sub
icebp
sub
pop
push
mov
scas
sbb
jl
push
adc
iret
push
mov
fiaddl
andb
pop
inc
mov
xchg
stc
adc
add
incl
jge
dec
sbb
or
idivl
in
sub
loop
ds
rclb
dec
shr
loop
ficompl
push
les
pushf
pushf
ret
sti
ja
pop
test
data16
sbb
mov
adcl
sbb
cmp
cmp
repz
sub
jb
repnz
in
shr
mov
cmp
fldenv
xchg
mov
lds
push
test
stc
xor
stc
or
lods
and
shrl
out
mov
lahf
inc
sahf
bound
jne
test
cli
test
inc
jb
fwait
aaa
cmp
cwtl
fsubrl
cmpsb
repnz
imul
fs
imul
jl
enter
test
push
add
pushf
mov
jmp
cmp
dec
imul
and
data16
decl
stc
cli
lods
lret
add
add
lock
in
xor
inc
in
dec
loop
adc
leave
mov
fcomi
mov
je
imul
stc
or
jb
stc
pop
xchg
mov
or
cmp
adc
jnp
sub
jno
push
ret
pop
aad
jb
pop
in
ljmp
cli
in
mov
mov
add
sub
data16
cmp
dec
add
or
xor
mov
add
jle
xchg
imulb
sbb
jg
fsubl
orl
mov
enter
out
mov
insl
dec
push
sbb
xor
je
adc
insl
jge
push
jbe
push
test
gs
jmp
mov
jg
mov
jnp
mov
push
sbb
stc
popf
cmpsl
jae
mov
in
repnz
mov
setnp
outsl
xchg
xchg
divb
filds
lahf
call
and
fcmovu
push
sub
adc
arpl
fxch
dec
ffreep
xlat
push
xchg
into
inc
sbb
loope,pn
scas
dec
pop
cmpl
popa
int3
xor
and
in
jns
hlt
out
cs
imul
roll
and
sbb
jmp
adc
jle
fwait
sti
inc
in
hlt
xchg
mov
jge
inc
inc
pop
or
hlt
insl
outsb
mov
gs
xor
popf
pop
mov
inc
jle
and
cmp
lds
les
cltd
test
scas
daa
pop
test
les
xchg
nop
add
gs
lcall
jle
inc
and
adc
add
lds
mov
xor
pop
cs
cmp
jmp
aad
dec
mov
jmp
nop
out
sub
xor
push
push
bound
pop
insb
push
xor
js
ror
cmp
adc
test
or
mov
jl
pavgw
dec
fnstsw
outsl
dec
jne
mov
dec
push
mov
movsl
inc
testl
push
loopne
add
enter
jp
pop
arpl
inc
dec
inc
mov
rol
leave
or
sub
mov
mov
int3
mov
rclb
xlat
outsl
dec
pop
ds
andl
dec
and
jno
adc
clc
or
jl
aam
imul
movsb
insb
fisubs
xor
push
movsl
imul
add
xchg
sbb
subl
call
filds
lret
dec
mov
cmpsb
test
mov
cli
fwait
cmpsl
andl
sti
or
sub
shrl
jns
je
scas
add
mov
push
cmpsb
ds
and
out
pop
xor
std
out
lock
sahf
mov
mov
add
sbb
in
shl
xchg
cwtl
pop
sub
lret
mov
and
rcrl
lret
mov
dec
imul
xchg
ficoml
dec
aad
xor
mov
cwtl
mov
aad
es
pusha
movsl
ret
hlt
rorl
js
das
and
pop
xchg
jecxz
arpl
loope
lds
mov
xor
xor
xchg
insb
sbb
jbe
xor
repz
mov
movsl
stc
mov
fldenv
pop
inc
pop
mov
adc
pop
flds
imul
sbb
fldt
pop
aad
lds
stos
cli
lds
sbb
shl
addb
pop
out
mov
sub
mov
mov
add
xlat
ljmp
dec
ljmp
imul
scas
jp
jle
rolb
cmpsl
jge
push
jo
mov
decb
pop
es
sbb
cltd
adc
dec
dec
daa
shll
rcrl
addl
orl
mov
jp
sbb
out
mov
movsl
or
out
pop
jno
int
mov
dec
and
push
ja
sub
push
ret
xchg
shrb
fidivs
es
fsubrl
ficompl
push
sub
subb
mov
xchg
insb
icebp
mov
sbb
repnz
add
and
loopne
movsl
sbb
push
xchg
pop
negb
mov
les
ret
sub
jnp
xor
pop
mov
rorb
push
jns
das
movb
mov
call
pop
pop
and
dec
xchg
das
jecxz
jbe,pn
xchg
mov
push
mov
hlt
dec
jge
dec
test
jl
or
and
lds
rcll
push
push
lock
mov
push
and
lods
mov
pop
pop
pop
cmpsb
and
test
push
jge
xor
fdiv
fs
imul
lcall
jl
addb
and
arpl
hlt
or
dec
push
js
dec
fdivl
lods
mov
jb
lea
iret
sahf
push
pusha
negb
push
xor
cmp
and
add
hlt
arpl
mov
icebp
adc
push
or
outsl
stos
adc
imul
pop
iret
sbb
sbb
movsl
mov
or
xor
les
mov
std
push
dec
jb
stc
xor
sbb
push
mov
addb
sub
das
test
cmp
rorb
out
lcall
popa
mov
inc
clc
cmp
es
push
push
std
cmp
std
arpl
jl
cltd
jg
fiaddl
xchg
divb
jno
mov
cwtl
stos
into
xchg
leave
cmc
jae
mov
in
add
sbb
dec
aas
xchg
lahf
popf
or
iret
mov
hlt
xchg
lods
xor
sub
in
andb
sbb
push
jno
imul
fwait
stc
cmp
and
and
dec
jno
add
jmp
xchg
mov
cmpsb
out
dec
push
add
ret
rcl
scas
negb
fisubrl
mov
mov
mov
addr16
int3
pop
adc
adc
imul
outsb
scas
pop
or
arpl
rcl
pusha
pop
test
aaa
les
fidivrs
cmp
mov
stos
xor
mov
sbb
xchg
aaa
rclb
sbb
aas
or
rol
pop
dec
dec
xor
xor
ja
inc
mov
adc
mov
imull
je
fidivs
sbb
mov
das
push
sbb
mov
int3
or
cmp
sub
xor
dec
lock
jecxz
int3
lods
test
orb
push
add
ffreep
xchg
jmp
imul
pusha
push
pop
mov
push
dec
push
pushf
add
mov
or
in
add
out
dec
ds
arpl
pop
sub
sbb
pop
arpl
in
xchg
cmpsl
and
push
xchg
andb
push
loopne
pop
aad
push
aaa
mov
aad
xchg
add
add
clc
push
jle
mov
in
fcomps
test
push
icebp
ljmp
pop
fisubrs
add
inc
aam
xchg
sub
xor
push
lds
fprem1
sub
loop
mov
fst
in
jle
xchg
mov
xchg
fldt
adc
mov
mov
xchg
jle
or
mov
icebp
fbld
mov
roll
test
std
frstor
mov
adc
xchg
addr16
inc
xor
push
lcall
pop
call
jecxz
fs
xchg
xchg
imul
and
pusha
les
xlat
imul
fisubs
inc
mov
fs
cmpsb
jle
mov
sub
jnp
mov
cmp
es
mov
test
fiadds
mov
dec
int3
lock
rolw
xor
pop
outsb
in
arpl
sbb
and
sahf
addr16
sub
mov
addr16
mov
pushf
sbb
pushf
nop
dec
adc
push
idivl
pop
mov
int
iret
mov
jge
int
and
mov
cs
xlat
leave
cmp
stos
adc
movsl
hlt
cmp
or
mov
mov
movl
lock
imul
sub
out
out
mov
scas
jne
cmp
dec
movsl
daa
push
cmp
mov
fs
add
pop
testl
mov
cltd
push
xchg
sub
enter
cmp
decl
mov
fmull
fsubrp
adc
sti
cwtl
pop
lea
mov
jl
movsl
adc
aam
test
and
dec
clc
iret
lods
xlat
filds
cmp
arpl
addr16
loope
popf
dec
inc
je
out
pop
xor
add
jge
mov
xor
xchg
xchg
ret
cld
push
mov
mov
dec
and
xchg
or
test
fldcw
ret
adc
cmp
sub
and
testb
in
aaa
sbb
adc
pushf
shr
and
or
sbb
jecxz
fldcw
sbb
mov
add
data16
xor
in
rclb
leave
je
ficompl
popf
push
pop
adc
jns
push
out
mov
push
lret
and
pop
scas
jge
dec
lods
xlat
push
lock
or
inc
je
ljmp
lock
push
xchg
mov
push
stos
sbbl
jns
sub
outsl
testb
out
and
mov
add
jne
cmp
pop
dec
pushf
xchg
call
and
aad
adc
pop
insb
add
shll
and
sbb
jmp
mov
out
pop
movsb
dec
jno
cld
and
stos
ret
add
daa
cmp
jae
dec
stc
ficoml
or
test
cmp
icebp
test
hlt
sub
hlt
loopne
out
scas
push
insl
or
sub
les
sahf
lret
add
daa
clc
ret
stos
push
inc
incl
test
std
into
inc
xor
and
jmp
lods
insl
mov
jp
xchg
scas
mov
movsb
and
mov
add
mov
bound
das
cs
out
cli
mov
lret
push
hlt
cmpb
cmp
addb
and
push
popf
sbb
mov
lret
aam
push
xchg
mov
aam
mov
cmp
pusha
ffree
xchg
jmp
pop
xchg
push
mov
xchg
push
sub
leave
mov
mov
movsl
imul
sti
cmp
ja
mov
cmpsl
sbb
out
and
sub
jo
inc
fwait
xchg
push
or
or
mov
iret
cwtl
jecxz
gs
loope
stos
in
mov
call
shrl
adc
lods
mov
cmp
add
push
mov
mov
ja
lods
xlat
pop
xorl
lock
xchg
out
cmp
mov
mov
idiv
jns
sbb
cltd
push
jns
in
dec
lret
outsl
push
xchg
je
loopne
aas
cmp
insb
call
cmpsb
xchg
pop
mov
hlt
stos
xlat
and
enter
push
cmc
inc
mov
lea
enter
call
dec
mov
mov
nop
in
pusha
inc
cltd
sbb
jns
xchg
je
pushl
jns
enter
and
sti
cmpsl
xchg
adc
jmp
ja
insb
mov
dec
stos
mov
sub
fucomip
lock
imul
in
cmpl
adc
testl
inc
add
pop
popa
mov
nop
sbb
push
andl
pushf
push
adc
dec
and
imul
sbb
adc
jno
daa
push
std
popa
add
xorl
mov
push
sub
mov
js
fdiv
push
push
outsb
jecxz
xchg
enter
sub
insb
sti
push
aaa
sbb
outsl
mov
mov
mov
inc
jne
add
mov
stos
pop
cmp
add
rclb
sub
icebp
lret
dec
insl
stc
or
mov
mov
into
dec
xlat
test
push
and
mov
imul
dec
and
mov
fmull
repnz
mov
cmp
push
fildll
pop
cmp
ja
lock
pop
jmp
cmpsb
xchg
mov
test
out
xor
push
repnz
ret
pop
push
inc
jo
test
pop
pop
in
outsb
push
add
lcall
adc
jge
mov
jo
mov
sub
sub
insb
loopne
adc
and
movsb
aas
push
in
pusha
movsb
add
mov
std
lahf
cmp
das
inc
or
adc
xchg
shll
lea
jecxz
mulb
mov
lret
nop
in
aas
insl
push
test
mov
mov
sub
cmp
jge
cmp
stc
or
test
dec
jae
jb
insb
ljmp
sbb
xor
pop
movsl
pop
push
xor
add
and
shl
mov
les
cmp
lcall
test
fbld
rcll
lods
cmp
andb
jl
out
and
das
sbb
pop
fcom
jecxz
jg
ljmp
jae
int3
xor
mov
stos
inc
nopl
loope
cmp
or
fidivl
scas
dec
rclb
les
dec
sarb
divb
push
jmp
push
movups
enter
xchg
inc
loopne
pushf
xor
push
cmpsl
mov
mov
add
je
andl
adc
data16
ficoml
test
xlat
dec
push
lahf
jb
loopne
cmp
iret
in
cmp
sti
cmp
scas
mov
lods
cs
and
fwait
aas
mov
add
sub
imul
pop
ror
icebp
sbb
dec
mov
rol
jae
push
cld
ficomps
int
sub
enter
sbb
imul
ja,pn
mov
int
sbb
mov
rorl
mov
mov
adc
inc
nop
andl
xorb
into
push
push
mov
js
cmpsl
sub
clc
sbb
and
xlat
xchg
loope
xchg
iret
filds
or
scas
outsb
lea
fsub
add
leave
paddd
out
out
ljmp
and
push
mov
sub
adc
into
es
ja
xlat
sbb
fimull
lret
and
lds
adc
dec
fisubl
jecxz
cmp
xor
das
push
es
mov
push
aad
lock
addr16
push
xorb
in
fmull
and
mov
pop
push
ret
mov
mov
cwtl
movsb
insl
cmp
cli
add
mov
sub
mov
mov
dec
int
xchg
outsl
fwait
mov
xor
push
imulb
bound
jge
sahf
aad
cwtl
dec
std
daa
xor
ret
pop
data16
cmovbe
ds
mov
rcll
test
cmp
pop
mov
les
mov
es
mov
sub
push
dec
xchg
add
rclb
xchg
in
es
pop
push
gs
or
or
inc
inc
sti
loope
iret
sahf
loop
and
pop
sbb
inc
mov
fwait
data16
sub
xchg
imul
push
lahf
ljmp
and
xchg
imul
test
dec
and
fists
jle
lods
inc
outsl
punpckhbw
push
repz
push
rcrl
jg
fwait
push
xchg
and
jae
test
ds
stos
ja
push
or
xchg
std
inc
mov
lret
pop
in
decb
cmp
cs
jnp
add
les
in
ds
pop
ficoml
mov
mov
dec
lock
ret
cmp
ss
pop
pop
cmp
dec
or
add
filds
mov
mov
sub
les
dec
pop
hlt
inc
pushf
loopne
jbe
jo
or
xorl
add
pop
in
fsts
mov
xchg
push
out
out
jp
stc
sahf
das
stos
push
push
cmp
jmp
aad
cwtl
out
or
mov
test
adc
jbe
loope
jnp
in
adc
dec
cmp
lods
pop
pop
jo
cmp
cmpsl
push
addb
mov
ja
mov
mov
dec
jno
mov
or
out
gs
dec
subl
lods
aas
lds
pop
push
aas
jmp
jns
aaa
lcall
add
sbb
pop
dec
and
xor
inc
jecxz
enter
xor
iret
sub
xchg
jno
xchg
call
jns
and
rclb
sbb
test
xchg
sahf
and
sbb
cmp
daa
sub
xchg
clc
scas
stos
xchg
cmp
mov
jg
lock
lret
mov
push
popa
in
mov
in
ret
fists
xor
mov
sbb
or
loopne
inc
push
cwtl
stc
std
pop
lcall
lock
inc
movsb
loope
mov
rclb
aaa
mov
or
in
inc
pop
ja
mov
or
pop
fcomps
fs
inc
arpl
pop
int3
imul
adc
sub
jge
pushf
xor
and
mov
and
out
f2xm1
xchg
push
scas
mov
imul
and
lret
testb
jecxz
push
fstpt
cmp
adc
mov
sbb
push
out
gs
push
fbld
dec
mov
xchg
cmp
int3
aaa
push
ficoms
sub
sbb
in
out
cmp
xchg
cmc
jns
push
int3
dec
pushf
cmc
mov
push
jle
sbb
stos
jg
inc
fnstsw
cmp
mov
sahf
push
xchg
dec
push
push
sbb
ds
jbe
in
out
aam
sub
gs
scas
outsl
push
imul
ja
out
bound
lods
fyl2xp1
and
xchg
insl
sbbb
xchg
in
mov
sbb
xchg
cwtl
mov
mov
add
sbb
inc
mov
scas
push
add
mov
inc
stc
sub
bound
repnz
xchg
sbb
xor
test
pop
bnd
add
dec
sbb
lahf
outsl
mov
mov
ja
daa
push
cmp
cmp
dec
das
in
lods
outsl
lcall
xchg
lods
fisttps
mov
xchg
imul
je
cmp
sbb
rorl
jbe
lds
dec
xor
pop
push
jbe
pop
js
push
jle
repz
push
cmp
add
add
aaa
xchg
push
sbb
xchg
adc
rcrb
popf
jecxz
and
mov
test
lcall
sti
jae
xchg
es
xchg
add
adc
xlat
ljmp
mov
icebp
dec
in
xor
and
mov
xchg
fld
dec
orb
loopne
sbb
in
push
or
mov
hlt
push
shlb
mov
stc
orb
fmull
xchg
lret
ljmp
dec
mov
add
xchg
cmp
xchg
and
xchg
enter
pop
jns
mov
inc
out
fdivrs
add
fnstsw
in
cmpsl
and
rcl
xor
bound
cli
push
scas
mov
mov
inc
es
mov
stos
sbb
inc
xor
scas
mov
and
enter
mov
fisubrl
arpl
outsl
test
mov
sub
ljmp
mov
in
dec
cmp
push
push
or
rcrl
jmp
movsl
inc
or
jnp
cmp
jle
or
ret
push
repz
push
mov
inc
push
dec
sub
mov
insb
xchg
iret
sub
jb
shr
and
repnz
gs
jl
cmp
xchg
push
mov
loopne
mov
ficomps
gs
lds
int
cmpsl
ficoml
sub
cmpsb
les
rolb
mov
and
testb
fsub
vmwrite
dec
mov
call
pop
ja
and
jae
clc
jb
mov
lret
stos
fs
add
mov
test
jmp
fidivrl
cmc
ja
imulb
pop
hlt
in
push
jns
repz
dec
xchg
push
pop
cmp
les
cmp
xchg
add
xchg
sub
dec
push
add
pop
adc
mov
inc
in
push
sahf
pop
testl
into
push
mov
hlt
rolb
into
popf
cltd
jnp
xchg
outsl
cmp
lretw
incb
je
mov
jp
loope
push
cli
mov
push
jmp
int
jmp
aaa
push
fadd
fidivs
mov
pushf
ja
es
clc
cltd
inc
lods
cltd
jbe
lcall
aaa
lock
icebp
sub
fidivrl
cmpsl
aad
cmp
aaa
xor
push
xchg
cs
jne
pop
add
or
cmp
pusha
pop
dec
sub
test
or
push
or
popa
push
fiadds
add
cmpsb
mov
sarb
sub
fwait
and
sarb
loopne
jmp
cmp
fiadds
or
stos
mov
in
out
inc
mov
outsb
ljmp
andb
mov
push
xchg
adc
ja
clc
or
mov
pop
lods
pop
dec
xlat
adc
setns
push
jb
lea
pushf
testl
daa
incl
mov
stos
mov
ja
movups
xor
mov
in
jae
enter
or
aam
xchg
mov
lsl
into
filds
push
mov
sbb
adc
std
mov
mov
test
cmp
add
add
mov
adc
or
mov
adc
out
xchg
cmp
mov
hlt
stos
add
aad
aaa
clc
add
vpunpckhqdq
mov
out
xchg
ret
dec
fstpl
add
jae
cmp
pop
inc
pop
mov
ret
loope
pop
orb
mov
gs
stc
bound
fcomi
jns,pt
ror
and
out
mov
mov
pop
sbb
scas
pusha
pop
fmul
adc
sbb
ret
in
fists
shlb
pop
pushf
mov
sub
mov
test
mov
cmp
mov
adc
or
xlat
fsubrs
sub
push
mov
xor
add
outsl
dec
mov
ja
inc
jnp
lods
nop
or
mov
movsl
lods
xor
lock
insb
outsw
stc
mov
adc
cmp
in
insb
movsl
mov
sbb
pop
dec
hlt
je
andl
mov
das
dec
and
cmp
push
and
inc
fwait
insl
cmp
insl
mov
aaa
shlb
dec
in
bnd
cld
fldenv
mov
and
push
sub
jb
sub
loopne
aad
dec
sbb
jnp
add
sub
dec
pop
repnz
movl
rorb
insl
mov
sbb
das
lcall
dec
popf
int
inc
mov
dec
lret
pop
xor
ret
iret
aad
xchg
and
sarb
icebp
lret
sti
call
daa
ret
sub
and
or
jl
inc
fs
jbe
adc
shlb
xchg
gs
mov
es
or
inc
pop
imul
add
push
mov
pop
dec
sbbb
cltd
and
cmpxchg
xor
cmp
xchg
adc
mov
dec
movsw
adc
mov
add
repz
cmp
cmp
rcll
push
xchg
pop
pop
enter
and
sub
leave
or
ljmp
addb
ret
adc
bound
xchg
mov
sbb
iret
js
out
arpl
stc
fdivl
pop
cwtl
pop
push
mov
cmp
add
icebp
mov
pop
enter
jl
dec
in
push
gs
out
popa
xor
loopne
mov
xchg
icebp
pop
subl
aam
pop
pop
adc
rolb
sub
dec
loopne
pop
mov
pop
clc
sbb
xor
push
inc
les
jge
test
adc
out
mov
xlat
std
aad
pop
ret
mov
rolb
notb
ds
inc
fcompl
dec
mov
out
push
sbb
adc
mov
sbb
dec
icebp
adc
data16
push
mov
shrl
and
mov
enter
push
mov
mov
mov
leave
xchg
cmp
divb
or
dec
jge
int
jns
dec
out
je
mov
pusha
scas
shrb
cmp
mov
jno
xchg
inc
ret
xor
int3
shll
xor
jno
gs
testb
jne
fmuls
mov
sahf
xor
outsb
xchg
popa
push
aad
or
outsb
std
or
dec
xchg
push
sbb
mov
sbbl
push
or
mov
jmp
jne
push
outsb
sub
popa
jb
cmpl
mov
or
cmp
mov
mull
ret
sbbl
mov
insl
dec
sbb
push
or
rcl
inc
and
or
imul
notb
add
jnp
ljmp
test
jnp
or
xchg
ficomps
dec
xlat
je
xchg
repz
leave
xchg
fs
stos
sub
push
repnz
sbbl
das
aad
or
dec
add
movsb
mov
and
fsts
sbb
fwait
bswap
adc
sti
movsl
pop
pop
mov
xor
pop
pop
and
movsb
inc
sbb
sahf
inc
fsubrs
push
cli
hlt
xor
outsl
and
bound
imulb
shl
dec
mov
ret
aad
xchg
fs
stos
sub
ret
lret
subl
and
cwtl
cmp
loopne
pop
mov
loope
pop
pushf
and
mov
sub
xchg
mov
or
iret
mov
mov
stos
into
cmp
jle
insl
outsl
or
add
sbbl
insl
jbe
mov
add
cmp
or
cmp
fiaddl
notl
or
aaa
or
push
cwtl
xchg
jg
jg
test
add
insb
inc
sarl
jge
and
shl
int
sub
imul
xor
repnz
and
xchg
mov
fstpl
xor
icebp
data16
sub
mov
lods
and
cmp
and
or
aad
cli
mov
cmpsl
or
push
cmp
and
mov
xchg
outsb
stos
bound
add
push
rorb
leave
insl
mov
and
sahf
mov
mov
ret
jbe
lods
inc
call
mov
sbb
ret
in
mov
add
enter
inc
popf
rcl
lods
jmp
mov
testb
cmp
stc
icebp
cmp
fdivs
push
cmpb
call
daa
je
jecxz
gs
sub
xor
jae
cmp
loope
out
shlb
pop
cs
int3
mov
out
aas
fwait
movsl
xchg
cmp
je
cmpsl
xchg
fdivs
sub
mov
adc
inc
xchg
repnz
mov
push
xor
cs
sbb
pushf
aas
add
testl
popf
adc
lret
adc
xchg
dec
shll
sub
push
ljmp
repnz
bound
stos
ss
inc
rol
jbe
scas
pop
cmpsb
xchg
push
clc
inc
mull
shlb
mov
mov
call
std
cld
into
mov
cmp
aam
or
sti
xchg
dec
mov
popa
dec
ret
dec
adc
clc
inc
xchg
ss
dec
jge
loope
sbb
cmp
xlat
mov
mov
outsl
sti
mov
in
add
jo
push
test
cmpsl
ds
addr16
pushf
ret
mov
out
outsl
dec
sbb
pusha
cmovnp
mov
daa
pop
cs
mov
push
or
lods
jno
repz
popf
jo
mov
dec
adc
xchg
andl
dec
jl
push
aaa
dec
or
stc
push
rorl
push
mov
cmp
push
pop
int3
sub
pop
not
adc
pop
pop
mov
fsubrl
and
les
aad
dec
call
fsubl
aam
loopne
xor
push
sub
cwtl
imul
sub
adc
lods
xchg
xlat
or
dec
push
mov
mov
shlb
or
xor
mov
scas
dec
adc
mov
cmc
cmp
cmpsb
add
or
inc
jle
push
xchg
cmp
icebp
or
xchg
dec
xchg
loop
cmp
rorb
xchg
add
div
subb
xor
lret
jge
outsl
ja
sub
pop
adc
add
adc
add
adc
or
dec
or
lods
enter
jb
xchg
aam
aas
push
dec
dec
cmp
lds
dec
and
sbb
aaa
rolb
xchg
test
rolb
push
pop
xchg
mov
js
mov
out
mov
cmp
adc
out
and
icebp
xchg
jbe
int
jg
mov
mov
in
inc
cwtl
ds
leave
mulb
xchg
out
rorb
xchg
aam
lods
fiaddl
hlt
sub
or
ror
sbb
fs
rorl
loop
push
inc
icebp
fisubl
and
cli
out
or
insl
lea
and
stos
mov
pusha
pop
xor
rcrb
sarb
mov
xor
loope
jge
xchg
xor
mov
ret
xorl
mov
sbb
adc
dec
xlat
or
lret
xchg
mov
jmp
mov
xor
call
push
inc
inc
call
xchg
or
xchg
inc
pop
mov
jne
sub
cltd
xchg
mov
enter
loopne
push
xchg
mov
add
dec
xchg
mov
push
xlat
inc
cs
lods
jnp
lds
pop
insl
dec
inc
push
loop
notb
into
insl
or
pop
insb
mov
pop
lea
dec
xchg
jno
in
test
shll
scas
cs
outsb
in
lahf
pop
stc
fwait
call
mov
inc
test
out
jge
aam
jns
sbb
clc
in
out
jge
int3
ja
nop
or
fs
mov
pop
fcom
clc
mov
mov
push
enter
pavgb
call
rol
mov
bound
fnstcw
es
pop
out
inc
in
and
pop
mov
inc
rcr
mov
adc
imul
push
mov
push
daa
testb
je
and
pusha
test
mov
rorb
les
fistl
push
cli
xor
push
dec
in
jecxz
shl
push
push
pop
repz
icebp
stc
cmp
stc
rolb
lahf
sub
push
mov
dec
adc
jbe
adc
fs
inc
mov
in
imul
out
add
fidivrl
mov
push
cwtl
dec
in
mov
cs
out
and
pop
aad
popf
or
pop
shlb
jne
loopne
frndint
scas
nop
add
jno
push
mov
mov
repz
cltd
leave
dec
pop
divb
imul
cmc
pusha
fsub
mov
mov
add
shl
xchg
pop
shl
xor
jo
cmc
xlat
pop
in
aad
pop
push
inc
aad
adc
add
dec
pop
enter
inc
add
loopne
repnz
neg
stos
xchg
fisubl
sub
mov
cltd
push
repz
bound
enter
mov
jg
xor
cltd
adc
inc
sbb
push
pop
dec
cmp
mov
add
gs
sti
loope
pusha
cld
lahf
testl
bound
inc
ret
ds
fs
cmc
sbb
sub
inc
jmp
lea
jmp
mov
xchg
add
stos
xchg
repz
pop
jo
adc
int3
mov
xchg
lock
into
push
xchg
fwait
sub
cmpsl
andb
mov
mov
les
cmp
or
arpl
in
jb
or
scas
ret
jb
aam
cmp
into
pop
cmp
call
lret
lods
outsl
jns
sbb
jmp
testb
mov
leave
sub
lock
inc
and
jbe
and
into
cmp
pop
lret
fstpl
lret
dec
dec
lret
aad
mul
adc
add
sbb
lret
add
mov
js
cltd
outsl
orb
mov
adc
enter
mov
mov
cmpsb
or
sahf
stos
insb
in
push
and
in
mov
mov
xchg
test
mov
mov
xchg
pop
aam
cmp
sub
mov
adc
or
cmpsb
gs
stc
loop
bound
or
and
aaa
pop
and
ffree
scas
pop
cmpb
push
loopne
stos
jg
jmp
inc
and
pushf
mov
pop
pop
fildl
fiaddl
cmp
arpl
mov
out
xor
popl
and
jb
or
lds
outsl
pop
xor
sub
je
sbb
mov
inc
out
fdiv
sbb
mov
mov
push
sbb
ds
xchg
jg
dec
and
stc
pushf
cmp
cmpsl
iret
repz
loopne
sbb
sbb
xchg
mov
sbb
sbb
mov
sbb
mov
lahf
mov
mov
dec
sbb
adc
out
mov
cmp
pop
popa
fs
xor
iret
out
mov
lods
rcrb
push
fbld
mov
ljmp
scas
sub
leave
fistpl
mov
and
fs
mov
and
call
cmp
xchg
push
xchg
or
push
movsb
dec
jns
stos
jnp
cmpsl
xor
mov
dec
pop
add
clc
pop
leave
xchg
cmp
int3
sbb
sbb
mov
dec
xor
int3
test
sbb
cs
xor
pop
das
cli
aam
cmpsb
mulb
jp
out
dec
adc
cmpsb
mov
loope
pop
je
stos
xor
es
scas
dec
stc
sub
push
lea
out
add
push
and
ja
in
adc
mov
adc
dec
push
dec
xlat
enter
push
pop
sbb
pop
fiaddl
mov
jg
sub
fsts
stos
in
ss
mov
add
ljmp
jne
outsb
xchg
or
inc
jg
sbb
les
test
mov
orl
xchg
adc
cmpsb
cwtl
call
jmp
cmp
push
mov
imul
aam
jecxz
call
das
add
xchg
mov
sbb
fsubrl
in
push
pop
push
popa
das
jo
ja
dec
mov
push
cli
sub
sbb
pop
out
fistpl
cmp
xor
mov
adc
shrl
outsb
push
ret
fwait
cmpsb
mov
dec
arpl
pop
hlt
mov
push
sub
add
test
sub
cli
ja
pmullw
or
push
inc
cltd
in
jl
or
mov
mov
xchg
mov
xchg
mov
sbb
and
cli
in
dec
adc
ret
test
fsubrs
and
cmp
nop
sub
sahf
lds
mov
pop
add
and
xlat
cmp
pusha
movsb
fucomip
cmc
jg
shll
popa
movsl
out
repz
in
inc
add
es
cmp
mov
outsb
dec
and
sarl
mov
mov
loopne
push
push
call
adc
scas
jno
test
fnstsw
adc
inc
je
roll
jp
mov
and
push
stos
jg
repnz
arpl
sbb
dec
in
adc
dec
out
jle
cmpsb
sub
xchg
sti
enter
loope
dec
push
je
cld
imul
rolb
adc
or
xor
pusha
jns
leave
pop
dec
pushf
pop
lret
daa
xchg
jg
cmp
adc
insl
cmp
pop
sbb
jne
xchg
imul
xor
rclb
test
push
add
jl
dec
mov
loop
std
pop
jmp
push
jg
mov
fwait
mov
fisttpll
mov
aaa
add
jecxz
loopnew
xchg
adcl
imul
xchg
cli
cmp
loope
mov
jg
das
jae
mov
insl
out
xchg
mov
mov
pop
and
mov
jmp
xor
fidivl
pop
mov
add
mov
dec
mov
and
pop
jbe
loope
sub
xlat
add
and
pop
xorb
push
mov
or
lods
lods
and
in
jno
pop
sbb
pop
cmp
xchg
mov
fs
inc
cmp
pop
mov
leave
fisubrl
mov
pop
pop
mov
mov
push
pop
mov
lea
fisubs
clc
sbb
jnp
pushf
xchg
cmc
bound
dec
mov
fbld
jecxz
xchg
mov
mov
add
popf
jl
fwait
xchg
sbb
rorb
je
out
dec
pushf
out
imull
and
flds
pusha
mov
aaa
sbb
lret
mov
clc
popf
imul
in
cmp
shll
and
and
popf
shrb
imul
dec
rclb
adc
cltd
xor
jp
cmp
jle
fsqrt
repz
cld
fildl
push
pop
sub
dec
outsb
xor
out
xchg
lods
out
pusha
cmp
arpl
xchg
shl
push
sub
leave
andb
dec
xchg
mov
aaa
icebp
call
call
mov
test
and
fistpll
sahf
imul
test
xchg
mov
or
lret
xor
cld
or
xchg
lahf
inc
add
xchg
leave
inc
scas
aam
repz
mov
icebp
fidivs
divl
sub
int
xchg
addr16
rol
and
insb
pusha
inc
xchg
subl
iret
dec
in
lahf
mov
out
dec
je
pop
fs
cmp
insb
push
mov
push
pop
sbb
mov
xor
sbb
loopne
test
scas
icebp
paddsw
mov
mov
out
fnstsw
inc
lcall
mov
or
cmp
dec
out
xorl
pop
pop
ja
or
push
dec
mov
je
test
mov
popf
call
pop
and
pop
fidivrs
mov
xorb
sbb
sub
lret
vunpcklpd
xor
and
xor
loope
inc
sahf
clc
jle
mov
sbb
ljmp
daa
movsl
mov
xchg
cmpsb
xor
scas
sub
mov
shll
test
push
sub
cmp
push
mov
out
std
aad
mov
sub
xchg
outsl
sbb
jge
ss
mov
cmp
mov
popf
cmp
and
imul
mov
pop
loope
jp
dec
gs
gs
mov
out
mov
jle
mov
cs
mov
mov
mov
out
xor
lods
insb
or
mov
inc
cmp
clc
xchg
jne
xorb
push
xchg
mov
or
mov
test
cmp
jecxz
mov
cmpsl
je
push
out
mov
test
jg
and
cmpsb
sub
out
mov
outsb
push
pop
sbb
push
int3
sar
xchg
sbb
sub
aas
test
sbb
fcmovne
fisubs
add
jle
sbb
arpl
xor
ljmp
icebp
push
xor
pop
ficompl
roll
sahf
icebp
mov
xor
pop
hlt
shrb
xchg
insl
sub
imul
or
cwtl
mov
add
sahf
jo
jno
cld
cmp
mov
and
daa
and
lds
pop
push
jmp
adc
dec
sub
or
push
cmp
stc
mov
jmp
rcl
mov
mov
mov
inc
clc
popa
mov
fidivs
fwait
pop
mov
jmp
xchg
cli
inc
pop
xchg
out
fs
push
arpl
ret
adc
pop
fistpl
enter
add
ljmp
test
leave
mov
jl
nop
scas
aam
rorl
jne
push
loope
mov
mov
test
fdivr
dec
dec
xchg
push
test
cmpsl
xchg
aam
aam
xor
lret
or
std
jnp
mov
cmpl
rorl
lods
into
loop
loopne
push
cli
fisttpll
push
movsb
dec
adc
adc
adc
xchg
imul
adc
jb
cs
mov
loop
dec
daa
dec
dec
dec
mov
test
out
jne
cmp
daa
sub
enter
adc
dec
les
sbb
jmp
js
mov
jb
mov
jmp
sbbl
test
jle
inc
ljmp
mov
or
ret
rcrb
sbb
push
add
sbb
and
and
das
clc
push
and
pop
fdivr
push
push
or
push
mov
pushf
pushf
xchg
lea
repz
ret
xchg
aas
loop
add
movsb
test
jo
jno
mov
pushf
push
inc
adc
movsl
hlt
mov
in
sbb
daa
into
fadds
clc
loop
jecxz
jg
fs
fs
call
adc
mov
cltd
sub
inc
adc
sub
stc
inc
aas
xor
sbb
fmuls
aas
cld
push
mov
in
mov
dec
icebp
scas
mov
in
and
out
push
push
shl
and
mov
cli
bnd
add
cmp
popf
xchg
test
pop
sbb
or
lret
fldcw
pop
cmp
and
into
jge
jl
cmpsl
ret
loope
sub
gs
inc
rcrb
nop
movsl
cmp
push
cli
fnsave
mov
in
inc
enter
jae
sub
jl
mov
xor
or
mov
jmp
xchg
popf
jl
sti
int3
mov
push
cld
movsl
xchg
jg
int3
cmp
dec
mov
fcompl
jp
xor
inc
cli
mov
ljmp
lret
pop
push
jl
ja
fimull
arpl
add
mov
xchg
call
sti
dec
pop
mov
mov
sbb
insl
aaa
lret
iret
jmp
loope
sub
ljmp
sub
sbb
jo
mov
push
mov
cwtl
or
mov
cmpl
out
ret
in
repnz
data16
mov
scas
loop
pop
mov
scas
dec
out
jmp
cmp
insb
push
or
push
mov
loop
sub
dec
orb
fdivp
mov
xchg
sub
sub
pop
sbb
push
inc
imul
adc
mov
push
cmp
insb
jp
and
out
std
int
ljmp
push
subb
out
mov
mov
lock
fmull
into
in
leave
push
cmovo
jnp
mov
add
jecxz
and
xchg
dec
or
test
xor
mov
cmp
int3
jne
int3
add
cmp
lods
cmc
lea
cmpsl
pusha
and
negl
adc
cmc
sahf
sub
cmp
aad
and
int3
nop
out
and
xchg
fldl
sti
add
js
jae
pop
outsb
aam
test
sub
stos
out
sub
cmp
pop
add
inc
shrl
xchg
xor
pop
add
popf
pop
cs
test
push
sbb
ss
adc
mov
and
imul
incl
mov
and
xchg
sbb
fisubl
push
jp
inc
arpl
fmuls
jg
arpl
data16
mov
mov
adc
push
addr16
fcmovnb
mov
fimull
arpl
rcrb
sub
cmpsb
or
pushf
sub
stos
dec
leave
lods
xchg
adc
mov
push
and
lcall
fistpll
xchg
cmp
imul
pop
lahf
push
adc
xorb
rclb
jnp
lods
dec
sbb
pop
js
xlat
cmpb
test
stos
push
jnp
outsb
test
shlb
adc
je
in
aam
and
xor
sbb
popf
lea
mov
push
int
aaa
fstps
push
dec
sahf
rol
xchg
jo
int
nop
xchg
ljmp
in
mov
mov
cmpsb
iret
mov
jo
cmp
push
xor
imul
nop
xchg
inc
mov
mov
or
mov
xchg
dec
aam
pop
and
nop
mov
and
sbb
xor
adc
or
sbb
daa
add
popf
shlb
jmp
mov
jle
ret
cmp
mull
scas
cmpsb
rclb
pushf
ljmp
dec
test
gs
aas
mov
stc
lcall
ret
imul
sbb
mov
adc
mov
test
sbb
pop
mov
push
adc
sbb
sti
enter
push
sarb
jno
cmc
inc
out
inc
pop
pop
iret
enter
xchg
mov
aas
cmp
test
addr16
push
sbb
aas
cltd
call
je
icebp
lret
push
js
stos
les
pop
xor
sub
icebp
ficoms
and
push
inc
sbb
adc
push
lods
mov
pop
push
lret
adc
cmp
ljmp
xor
push
sahf
sbb
sub
pop
pop
sahf
cltd
cmpsb
das
lods
repnz
out
push
jmp
pop
mov
xchg
lock
pop
stc
adc
or
loope
mov
jo
testb
into
dec
int
mov
psadbw
jns
mov
cmp
lret
sub
stos
mov
aaa
cmc
sbb
add
push
dec
adc
pop
ljmp
in
dec
js
cmc
dec
pop
or
into
jl
pop
push
imul
test
xchg
movsl
add
ficomps
mov
scas
leave
xor
jno
mov
sub
dec
imul
sub
jbe
xlat
out
mov
repz
mov
sub
push
cli
pop
pop
and
or
jp
pop
xchg
test
stos
mov
pusha
sub
es
mov
and
aas
cld
jae
push
adc
add
mov
icebp
test
pop
push
pop
pusha
inc
dec
or
pusha
dec
xor
shll
fcoms
or
xchg
push
xor
or
les
sbb
subb
scas
pop
test
mov
pusha
mov
xor
mov
arpl
frstor
in
out
subl
outsl
test
int
cmp
sub
loopne
inc
daa
into
xchg
stc
push
push
ret
pushf
dec
jecxz
dec
add
mov
out
mov
cmc
inc
adc
push
in
fisubs
pop
jle
inc
out
dec
mov
pop
add
fcompl
push
cwtl
cmp
into
jo
fadds
pop
push
test
xchg
xchg
mov
nop
jmp
xor
into
inc
xlat
and
pop
into
mov
jo
add
inc
fnstcw
inc
add
icebp
dec
daa
xor
sbb
pop
shl
mov
testb
fs
fisubrl
adc
jno
repnz
ret
xchg
lahf
push
popf
cmp
das
rcrb
sbb
jmp
repz
outsl
xchg
adc
inc
mov
subl
lcall
adc
xorl
fnstsw
or
test
incl
in
ljmp
jae
mov
mov
sub
mov
insl
xor
or
jp
enter
adc
daa
mov
inc
inc
or
cmp
adc
lods
dec
xor
test
and
scas
decl
add
and
mov
and
adc
or
push
sbb
in
and
xchg
mov
mov
jge
xor
inc
aas
jl
fstl
pop
sahf
daa
es
cmpb
push
inc
scas
fs
and
cs
or
jle
adcl
jmp
sbb
std
add
orl
ds
cmp
xchg
xchg
push
cmpsb
int3
pop
movsb
push
pop
ds
icebp
dec
es
dec
in
cmpsl
enter
aad
xchg
dec
and
fcmovnu
dec
inc
insl
sbb
add
clc
pop
xor
jl
stos
add
pop
adc
dec
cmp
add
lock
daa
fidivl
mov
mov
insb
gs
ljmp
std
push
jo
outsl
jle
dec
mov
add
inc
notb
out
pop
xor
lods
sub
incb
ds
ja
shlb
outsl
dec
sub
shrb
mov
sbb
inc
mov
mov
pop
pop
adc
push
mov
out
leave
jle
stos
test
outsb
int
call
js
orl
xchg
sbb
push
inc
adc
lret
mov
stc
mov
rorb
das
aaa
cmc
or
lods
and
test
insb
push
lcall
addl
jg
pop
jle
sbb
pop
repz
les
or
lcall
or
leave
cltd
adc
sti
mov
jge
pop
sub
mov
repnz
scas
rolb
pop
add
cltd
in
aad
sahf
cld
addr16
movsl
pop
scas
lret
mov
jg
or
add
jno
inc
and
add
xchg
nop
mov
ficompl
mov
out
aaa
sbb
add
xor
ds
mov
fwait
out
push
mov
xchg
jle
insl
and
mov
mov
sar
test
dec
scas
mov
cmp
shlb
data16
adc
cmp
sbbl
icebp
jp
sbb
je
mov
inc
push
adc
mov
fwait
stos
out
test
push
jo
cmp
adc
lock
das
cmp
ljmp
cmp
shll
outsl
xor
int
adc
mov
jb
sub
dec
inc
hlt
adc
push
cmpl
arpl
cmp
jge
js
mov
mov
mov
mov
dec
xor
add
cmpsl
pop
fnstenv
rol
ss
sbb
dec
outsb
sub
sbb
xchg
dec
jecxz
or
or
dec
pop
mov
inc
pop
add
std
and
xor
mov
mov
repnz
into
rcll
and
jle
pop
shll
push
int3
inc
pop
jnp
pop
xor
cmp
inc
imul
adc
cwtl
lahf
dec
in
in
sub
sarl
or
mov
sub
in
push
dec
jnp
in
sub
loope
cmp
leave
roll
aas
sub
dec
stos
in
imul
bound
push
mov
dec
jb
xor
mov
cmc
insl
cmp
hlt
jmp
push
dec
xchg
rcrl
xor
jp
sar
inc
sahf
jb
daa
addr16
pop
gs
call
shlb
cli
das
pusha
rcll
loop
cmp
sbb
cltd
jae
lret
mov
mov
stos
push
push
test
das
rorb
mov
cmpsl
cmp
cmc
stos
jmp
sbb
jnp
lcall
fadds
icebp
loop
jnp
or
imulb
or
lods
add
popa
xchg
mov
jg
add
pop
das
pop
out
add
adc
mov
jmp
imul
insb
test
dec
lret
xlat
movsb
test
xchg
xchg
fdivs
lods
cmc
sbb
dec
or
push
inc
mov
repz
cmp
outsb
mov
and
sbb
iret
fidivrl
loope
cmovle
and
push
mov
pop
mov
push
aad
push
lods
cmp
nop
das
push
xor
orb
mov
cwtl
jp
and
jecxz
push
adc
outsb
mov
pop
mov
mov
inc
mov
xlat
js
dec
pop
push
or
mov
and
call
mov
jo
xor
adc
es
mov
mov
out
fcmovbe
jp
jecxz
dec
push
icebp
insl
sub
xor
pop
in
pusha
fidivrs
inc
and
lcall
push
fcompl
pop
inc
and
cwtl
mov
xchg
imul
pushf
int3
and
xchg
adc
sbb
sub
or
test
dec
aaa
jno
cmp
xchg
jb
sti
cmp
popa
lods
xchg
inc
gs
cmp
cwtl
jle
push
test
add
in
cmp
aas
sub
jp
jo
mov
sbb
aas
jge
inc
inc
mov
lods
das
adc
loop
adc
test
cmpsb
adc
dec
das
mov
mov
adc
sub
inc
rcl
out
mov
xchg
mov
inc
out
cmpsw
inc
ret
xchg
mov
popa
jns
add
ja
in
push
add
jno
hlt
test
call
nop
xor
mov
push
ret
outsb
loope
lcall
add
jg
xchg
mov
xchg
jbe
jae
sub
jmp
mov
gs
or
lock
loop
cmp
mov
xchg
adc
fisubs
push
xchg
das
inc
push
mov
xor
sbb
or
fcmovu
aas
mov
pop
mulb
push
xor
mov
cwtl
mov
mov
jo
sarb
add
fists
adc
cmp
jmp
cmp
movsl
cwtl
or
andl
and
xor
cmp
jecxz
loopne
fdivrl
ss
ret
not
cmp
xor
mov
addr16
inc
jge
sbb
xor
repnz
test
lcall
jp
cltd
push
pop
adc
push
stc
mov
sub
mov
sub
push
and
fmuls
pop
loop
mov
sbb
mov
jge
fsubrl
std
xchg
jp
mov
push
loopne
jns
cmpsb
outsb
push
push
mov
pop
adc
mov
fldl
xchg
jb
add
xor
out
push
sbb
fsubl
insl
dec
pop
testb
andl
iret
adc
jle
push
imul
push
mov
pop
mov
xchg
orl
out
ret
into
imul
xchg
int
aas
push
in
dec
mov
lock
aas
test
adc
aam
dec
cmc
xor
cmpsl
xchg
fcompl
adc
lcall
xchg
stc
fistpll
xor
sahf
out
dec
sub
shll
ds
adc
imul
in
out
or
xor
int3
test
aas
loopne
mov
shrl
cmpsb
sub
jnp
inc
imul
ret
stc
pop
pop
jne
stos
push
mov
daa
mov
xchg
mov
movsl
lret
push
icebp
mov
inc
rcl
mov
mov
or
hlt
rcr
mov
movsb
cli
push
dec
ficoms
mov
mov
inc
push
pushf
jae
pop
mov
sub
sub
mov
mov
pop
xchg
push
or
negl
fisttpl
fisttpl
dec
sub
jns
sbb
add
test
stos
pop
or
loop
mov
or
and
sub
pusha
push
add
mov
adc
movb
fs
stos
lods
ss
rorl
sbb
lret
mov
repnz
lret
ret
jo
xchg
pop
cmp
mov
mov
loop
lret
xchg
or
lods
ss
mov
push
out
mov
cmp
jne
ret
and
call
or
movsb
loop
outsl
jbe
aad
jp
jae
icebp
mov
mov
sub
frstpm(287
das
fcompl
cmp
xor
jns
test
push
scas
test
jns
mov
ss
repz
sub
lahf
dec
inc
mov
loop
cs
mul
movsl
adc
ret
or
loope
and
movsb
pop
int
xor
in
jmp
in
pop
adc
mov
add
push
imul
dec
call
or
pop
in
xor
mov
sub
cs
xor
cld
ret
pop
cltd
mov
cmp
cltd
frstor
lret
sbb
jmp
fbstp
ljmp
lods
dec
push
add
jns
test
lret
dec
les
sub
mov
arpl
mov
mov
cmp
jge
inc
outsl
test
cmp
mov
or
jno
mov
ds
add
shlw
pop
and
lea
add
push
adc
push
mov
hlt
dec
enter
push
add
dec
fildl
enter
iret
and
stos
adc
jb
mov
jmp
mov
repz
jge
and
fwait
pop
or
ret
jmp
dec
test
iret
lods
xchg
inc
xor
pushf
and
mov
xchg
rcrl
mov
dec
adc
dec
icebp
pop
mov
push
push
and
in
add
jl
xchg
insb
adc
xchg
mov
pop
mov
fsubl
add
mov
movsl
popf
lret
fdivs
in
lods
in
push
sti
sahf
jns
dec
jg
imul
jecxz
mov
roll
mov
out
iret
and
dec
and
push
and
xor
mulb
sahf
sbb
cmp
pop
in
out
dec
xchg
dec
test
je
rolb
fsubs
bound
loope
ljmp
cltd
adc
ja
inc
fdecstp
jae
idiv
jo
sbb
xchg
lret
stos
in
stos
es
dec
dec
xor
mov
lret
mov
lock
ljmp
dec
and
xchg
out
iret
into
adc
unpckhps
orb
fs
xchg
repnz
out
jle
fadd
push
mov
mov
push
fs
or
fisttps
cmp
xorb
cmpl
jmp
ret
pop
jle
pop
xchg
mov
push
mov
and
imul
push
mov
inc
pop
stos
push
jp
adc
call
jb
mov
or
push
sbb
dec
xor
fidivrl
pusha
leave
ret
shrb
movb
bts
out
dec
mov
mov
jbe
mov
add
data16
lret
popa
into
xor
imul
aaa
sub
adc
or
xor
out
sbb
pop
sbb
lcall
xorb
inc
outsb
jo
adc
jmp
iret
mov
pop
adc
inc
lock
add
adc
pop
add
mov
lock
imul
in
test
enter
repz
push
fwait
mov
aad
or
imul
cmp
or
inc
dec
adc
cmp
aad
and
lret
cmpxchg
add
incb
loopne
pop
shll
and
mov
scas
filds
xlat
pushl
ljmp
xchg
subl
xchg
push
lods
pop
pop
rol
out
cmp
xor
fstl
clc
idivl
dec
cmp
nop
sahf
out
pushf
test
jne
mov
insb
mov
int
lods
xor
popf
popa
cwtl
inc
divb
lds
mov
xlat
leave
in
dec
addr16
negl
jge
rcr
mov
mov
xchg
xor
hlt
call
pop
insl
andl
in
mov
les
pop
adc
xchg
xchg
xchg
loope
xchg
mov
mov
stc
mov
add
bound
add
shlb
idivl
cs
pushf
add
rcrl
aam
rclb
std
movsb
push
mov
imul
pop
int3
test
cli
adc
test
in
or
das
outsb
and
aad
movsl
test
mov
mov
ret
clc
ficoms
inc
or
mov
loope
pop
push
or
fsubrs
add
xchg
push
out
test
pushf
in
addb
subl
push
mov
mov
sbb
jno
pop
xchg
bound
inc
pop
movsl
pop
insl
mov
inc
sub
jne
add
sub
xchg
pushf
dec
cli
or
push
jl
std
fadds
or
sbb
lcall
std
dec
or
aaa
pop
mov
in
mov
cltd
out
in
out
lret
in
jb
sub
les
sbb
mov
enter
pop
push
cmpsb
mov
inc
pop
mov
and
push
lock
ret
sbb
push
jne
adc
pusha
push
jbe
mov
pop
jg
xor
cld
adc
dec
clc
lods
jb
mov
daa
sahf
mov
out
cmc
inc
xor
adc
mov
inc
mov
loopne
fldcw
imulb
cltd
imul
and
push
sub
push
movsb
movb
das
push
push
push
fdivr
jnp
sti
push
mov
jne
pop
arpl
rorb
idivl
add
loope
addr16
sarl
subb
cmp
je
adc
dec
sti
arpl
lds
int3
stc
repz
in
push
mov
int
aam
es
lock
dec
add
xor
mov
ret
and
jle
jno
jle
push
jecxz
mov
jno
in
inc
out
mov
inc
repnz
jle
inc
adc
in
dec
rorl
lahf
adc
mov
ror
jne
jmp
dec
aas
or
scas
nop
mov
or
fists
popa
arpl
xor
mov
push
xor
in
pop
addr16
mov
or
push
or
pop
sub
mov
sbb
lock
mov
push
popa
imulb
jo
inc
xchg
jecxz
dec
rcll
add
add
ja
xchg
inc
add
pop
mov
sub
fdivrl
sbb
adc
ret
sbb
test
mov
cmpsl
or
cmpsl
inc
leave
mov
sbb
inc
and
push
inc
aaa
sbb
gs
sub
inc
cmp
out
jns
sahf
jns
sub
cs
mov
pop
mov
mov
pop
scas
movsb
test
push
mov
cmc
test
adc
sub
xlat
mov
jl
repnz
lods
test
cli
test
shlb
loop
ljmp
mov
ficomps
sub
adc
rcrb
and
gs
mov
or
xor
cmc
pop
inc
mov
push
sbb
and
subb
mov
out
ss
dec
jle
mov
arpl
mov
les
dec
mov
pop
sbb
in
std
mov
dec
frstor
add
clc
je
shrl
sub
outsb
ret
jecxz
cmpsl
std
movl
and
fnstcw
in
leave
inc
cs
fidivs
lds
imul
bound
sub
sbb
arpl
inc
xor
daa
push
pop
push
stos
push
push
xor
xchg
scas
push
dec
pushf
andb
sub
sub
xor
dec
mov
add
sarb
movsl
fsts
mov
xchg
loope
jp
pop
adc
push
xor
xchg
xchg
les
jle
xchg
dec
ljmp
dec
mov
or
xor
sub
lret
xor
pushf
sbb
push
adc
cmc
jecxz
test
scas
sbb
in
xchg
std
jo
mov
in
iret
cmpsb
aas
enter
sbb
sbb
adc
shr
pand
repnz
mov
icebp
ret
cmpsl
es
adc
pop
lds
sub
mov
divl
shr
out
adc
cmp
xor
pop
es
movsl
add
xor
push
scas
inc
ret
mov
ss
test
mov
inc
div
mov
stc
aam
xchg
pop
xor
enter
ds
jmp
lock
imul
sbbl
fisttpl
jle
loop
and
jo
fcoml
shrb
push
ret
fidivl
sub
and
fcompl
add
cmp
sbb
inc
inc
ja
icebp
inc
xchg
decl
addl
pop
stos
sti
inc
push
stos
adc
dec
cld
das
fisttps
aad
mov
aaa
das
hlt
movsl
cli
int3
addl
sahf
dec
push
mov
mov
jb
pop
jnp
mov
in
in
mov
int
mov
mov
mov
pop
xchg
popf
cli
shl
or
jbe
aad
ds
dec
lret
icebp
pop
cwtl
add
insl
sbb
popf
adc
ss
xor
fwait
test
mov
dec
bound
sub
sub
repz
repz
xor
push
mov
xchg
lds
outsl
mov
js
or
jns
sub
jae
scas
repz
sub
outsl
cmp
dec
out
arpl
push
stc
outsl
push
dec
enter
push
loopne
outsl
xor
stos
test
in
xchg
sbb
aad
dec
pushf
add
or
sub
lea
into
scas
cmp
jp
outsb
push
iret
imul
add
push
adc
aaa
inc
fsubrl
sbb
pop
sbbl
xor
mov
out
xor
stos
xor
pusha
shlb
cmp
jne
or
inc
inc
xlat
jbe
inc
cld
inc
fmul
lcall
loope
daa
inc
bound
gs
xchg
dec
cs
sbb
dec
stc
mov
mov
cmp
gs
insb
cltd
pop
add
aam
adc
hlt
push
jnp
aad
popa
test
inc
imul
mov
inc
jns
test
and
test
fs
and
adc
dec
inc
jge
ret
xor
adc
in
mov
shrl
or
gs
test
es
cmp
mull
add
mov
addr16
test
xor
imull
push
push
repz
adc
outsb
movsl
cmc
dec
insb
shll
mov
mov
roll
in
loop
add
pop
mov
push
xchg
repz
int3
sub
inc
clc
cmpsb
or
mov
cmp
rcll
pop
mov
jle
lds
sub
adc
lahf
adc
popa
sti
psrlq
add
repz
jae
je
add
jg
jp
jecxz
stos
pushf
popa
push
stos
daa
xchg
mov
mov
rorb
stos
jbe
xchg
movsb
mov
les
sub
movsl
addb
xor
mov
xorl
dec
inc
sub
into
stos
pusha
cmp
stos
lcall
push
aaa
fimuls
shrl
cmp
test
xchg
inc
jl
inc
in
dec
in
imul
push
movsb
push
inc
pop
lock
lods
jmp
test
out
or
fistl
pop
arpl
and
movsb
lock
xchg
fisttpl
jmpw
je
repnz
cmp
adc
outsl
fdivp
fisttpl
add
and
inc
mov
sub
jae
dec
fadds
ja
or
ljmp
xchg
imul
adc
loop
out
in
lea
sbb
imul
push
cltd
xor
mov
adc
mov
mov
out
push
xchg
outsb
or
xchg
xchg
leave
mov
push
sti
testb
push
dec
pop
ljmp
mov
decb
fucomip
mov
xchg
popf
mov
insl
pop
adc
sub
mov
addr16
data16
notb
add
ljmp
lahf
push
mov
push
mov
jge
xchg
dec
arpl
pusha
test
scas
clc
test
ds
daa
push
cmp
push
subl
mov
lahf
gs
fimull
icebp
test
inc
push
jbe
inc
ret
mov
xor
loopne
test
shll
jge
or
add
jae
or
popa
xchg
sbb
ss
fisubrl
xchg
jb
stc
hlt
sub
or
cmpl
mov
add
jp
jle
cmpsl
or
and
push
jge
cmc
add
jl
cs
inc
sub
lods
mov
xchg
pop
jl
pop
lea
cmpl
addb
sbb
scas
stc
mov
in
mov
cmpsl
das
xchg
push
imul
scas
mov
or
aad
inc
cmp
mov
jl
xor
or
or
test
xor
dec
insb
pop
out
aam
repnz
mov
sub
data16
cs
bound
cmp
mov
shrd
movsb
pop
bound
sbb
lcall
nop
lret
in
xor
inc
sub
mov
and
xor
std
push
lods
push
xor
dec
outsb
adc
adc
adc
mov
ret
jmp
mov
insb
cld
jg
push
mov
cs
cmp
pop
and
ret
cli
das
cli
lea
scas
aas
rclb
and
xchg
inc
dec
adc
sahf
and
jae
in
cli
or
test
subb
test
jecxz
mov
mov
xchg
sete
rclb
iret
mov
int
add
cmp
sbb
loopne
or
cmp
leave
sahf
inc
insb
and
lock
andl
mov
sub
outsb
pusha
dec
push
sbb
outsl
push
adc
fdivs
jbe
xchg
sbb
adc
outsb
pop
jg
out
gs
inc
mov
ds
mov
mov
scas
cs
dec
out
lcall
movsl
sbb
push
fists
psraw
mov
xchg
pop
orl
sahf
ljmp
push
mov
push
pop
notl
jnp
fucom
xlat
mov
cltd
pop
cli
mov
daa
ficompl
push
fcomp
pop
das
stos
inc
adc
call
gs
or
sbb
rcrb
orl
and
hlt
into
push
mov
sbb
add
pusha
sbbb
inc
or
pop
xor
int3
xor
aas
pcmpeqw
stos
subl
divb
push
fcompl
fidivrs
mov
js
sarl
outsb
mov
jno
pop
mov
popa
out
daa
out
test
jg
cmp
lcall
xor
dec
dec
jb
push
scas
shll
stos
insl
mov
addb
dec
pop
aas
mov
cwtl
or
out
movsl
xor
sub
out
push
pop
fisttps
push
mov
cltd
ds
aas
xchg
pop
mov
cmp
and
mov
stos
test
testl
lock
cmp
mov
mov
movsl
mov
pop
inc
idivl
xchg
xchg
gs
icebp
daa
fpatan
xor
cmc
xor
aas
out
pop
xor
cltd
dec
js
mov
pop
pop
xlat
jns
roll
pushf
push
or
mov
imul
test
mov
mov
repz
sub
sbbl
mov
jecxz
stos
push
sbb
ljmp
into
add
fwait
mulb
xchg
outsb
mov
pop
jno
pushf
xor
xchg
push
addl
pop
pop
dec
or
mov
xor
data16
scas
pop
arpl
fstp
mov
fcmovbe
jmp
jno
add
mov
in
xor
jns
xchg
mov
cltd
aad
xchg
fs
push
fistps
add
xor
int
pop
fwait
loope
jg
fnstcw
mov
jbe
push
mov
inc
push
xchg
inc
lcall
out
jp
or
and
jmp
cwtl
cmp
and
push
mov
xor
pop
js
mov
mov
push
orl
mov
and
enter
repnz
inc
mov
fisttpll
push
or
shlb
aam
test
clc
cmpsl
clc
mov
mov
adc
ds
lods
aad
fisubrs
loope
xchg
push
aas
push
dec
sbb
out
jl
xor
nop
dec
lds
enter
jnp
outsb
sbb
pop
add
daa
or
lods
iret
sti
popf
jg
push
es
hlt
or
js
mov
mov
or
adc
shll
dec
jge
out
mov
into
xchg
aam
dec
and
add
mov
push
out
cmpsb
shll
aaa
std
and
andl
scas
pop
cli
bound
xor
test
push
std
inc
jle
cltd
push
inc
bound
jnp
movsb
nop
cmc
stos
subl
cmpsb
jo
sub
pop
jl
iret
das
add
ret
sbb
pop
sbb
lock
jae
mov
sub
addr16
sbb
lea
repnz
enter
outsl
xor
fmull
out
push
push
sbb
pop
mov
add
enter
add
jp
out
mov
sarl
addr16
cmp
dec
dec
mov
xorl
mov
jns
call
pop
in
popf
mov
test
arpl
pop
jmp
or
xor
pop
fidivs
and
jmp
enter
or
shll
in
add
pop
mov
pop
jo
xchg
je
mov
scas
mov
lods
adc
mov
and
aad
inc
mov
mov
sub
sbb
rolb
jg
rcrl
cld
cmp
jg
daa
pop
stos
ret
sbb
shll
iret
mov
and
pop
push
popl
fs
sub
ja
adc
inc
fucomip
xchg
lods
push
add
jne
dec
xor
mov
fisttpll
in
mov
mov
pop
cmp
mov
ljmp
std
mov
or
imul
mov
pusha
shll
bound
mov
pop
movsb
scas
pop
lahf
jecxz
dec
or
mov
push
or
or
jge
ficomps
das
mov
stos
xor
aam
fmul
pop
push
mov
int
je
jmp
mov
inc
neg
fxch
fstpl
xlat
or
test
cmp
mov
into
lods
pop
rclb
inc
mov
sbb
pop
scas
jmp
sbb
mov
ret
xchg
cmp
mov
sbb
adc
jp
jmp
mov
aas
in
push
fnstenv
movsb
cmc
das
jb
mov
std
lahf
mov
adc
cwtl
mov
lret
hlt
mov
pushf
mov
aas
mov
movsb
out
add
sub
jbe
mov
ret
insb
pop
out
aas
ret
insl
dec
push
ret
cmp
mov
out
push
adc
adc
mov
imul
outsl
mov
mov
test
pop
push
push
pop
sbb
orb
jecxz
rol
cmp
mov
mov
xor
sbb
jbe
int3
cmp
sub
sahf
enter
push
and
cmp
andl
adc
sti
rcll
jns
pop
sbb
mov
cmpsl
dec
pop
mov
aad
je
les
push
fnstcw
into
es
pushf
pop
jae
mov
rolb
fisubs
or
pop
dec
mov
bound
mov
sub
xchg
sub
sbb
scas
cwtd
jmp
fxch
add
adc
xchg
pop
repz
jns
jmp
jp
xor
lds
bound
jns
testb
je
lcall
dec
cmp
lcall
loop
mov
leave
lock
dec
lret
ss
xchg
xchg
enter
mov
repnz
call
and
sti
and
in
mov
ds
adc
sbb
pushf
dec
stos
cmp
cmp
scas
cmp
mov
mov
repnz
push
and
mov
inc
mov
rolb
jp
sub
fxch
jo
cmpsl
insb
sub
iret
mov
xchg
add
pop
adc
aam
mov
jns
mov
fsubrl
sbb
shll
xlat
das
mov
sti
mov
out
sbb
cwtl
sub
cmpsl
push
xlat
into
jnp
adc
nop
adc
inc
lds
fs
out
or
or
call
xchg
cmp
das
or
sbb
inc
repnz
scas
jo
sbb
int3
inc
sbb
add
lret
or
dec
sbb
pop
js
repz
or
mov
pop
sub
cld
aam
mov
outsl
jmp
rorl
lret
xor
mov
add
xchg
jns
push
xchg
sub
in
shl
xor
loopne
fwait
mov
cmp
cmc
adc
arpl
out
mov
sahf
pop
push
shlb
lahf
xchg
push
mov
dec
sub
push
cmp
xor
push
xchg
jae
mov
fdivp
ds
js
xlat
adc
into
and
imul
pop
out
jo
lcall
in
lods
xchg
fisubl
outsl
aad
movsb
ret
aad
stos
daa
dec
stc
pushf
call
push
insb
pop
sbb
pop
dec
fisttpll
call
test
loope
add
imul
or
test
lret
push
mov
icebp
sub
sbb
orl
stc
orl
xorb
xor
loop
sbb
mov
push
sub
add
xchg
insl
outsb
test
gs
pop
daa
dec
sub
jb
leave
xlat
adc
les
inc
imul
jb
push
add
addr16
cwtl
filds
ret
mov
subb
sub
scas
pop
test
jecxz
pop
addl
out
clc
ja
xchg
xor
mov
jecxz
jg
dec
out
idivb
dec
cmpsb
ss
mov
insb
push
insb
lcall
jp
shrl
call
sub
and
movsb
adc
xchg
xor
popa
mov
cmp
or
pop
inc
mov
ret
sub
push
fcompl
out
inc
orb
shlb
dec
adc
push
xor
lret
repnz
push
mov
insl
jge
dec
in
dec
pop
dec
pop
shll
inc
and
adc
push
fsubl
lret
int
jbe
mov
scas
lret
pop
fistpl
fucomi
adc
pop
jnp
scas
cmp
cld
or
xchg
lahf
and
test
lods
adc
add
mov
lahf
xor
das
jb
mov
adc
push
sahf
outsl
mov
sub
loop
les
mov
mov
mov
xchg
cmp
jo
mov
mov
sub
mov
fnstcw
add
jnp
cmovnp
pushf
mov
xchg
test
aaa
xchg
jp
lret
inc
sub
lods
cmp
pop
ljmp
cmp
and
test
cmp
insl
aad
xor
imul
sbb
insl
scas
add
pushf
sub
and
rcl
aam
mov
jl
inc
lcall
cmp
outsl
push
ja
pop
arpl
sub
xchg
repz
jp
fldcw
sub
aad
andb
lret
fs
jg
inc
aaa
stos
jge
mov
pop
in
mov
out
xlat
leave
sbb
fnstcw
mov
sbb
push
sbb
out
in
add
fisubs
sbb
sti
xchg
into
jecxz
outsl
push
iret
mov
push
lret
mov
push
aad
mov
fcomp
cmp
stos
in
adc
adc
or
aam
in
mov
cld
test
loope
popf
outsl
ljmp
add
jp
rorb
ds
je
and
lock
or
outsl
pop
jbe
mov
and
mov
xor
movsb
repz
outsl
adc
lret
jge
pusha
push
mov
inc
or
cld
xorb
mov
push
addr16
mov
xchg
and
lods
xor
xor
rcll
pop
jne
push
out
mov
xchg
jg
in
add
sbb
cmp
xchg
rolb
dec
lahf
icebp
adcl
imul
outsl
jno
jl
dec
fwait
clc
sub
xchg
add
inc
inc
jg
fld
jne
flds
lahf
cs
mov
leave
jge
mov
push
xor
je
stc
call
mov
xchg
inc
sub
bnd
mul
lods
mov
fadds
pop
ds
inc
cmp
test
sbb
aas
imul
popa
xor
pushl
dec
addb
test
jp,pn
lea
push
pusha
push
mov
mov
xchg
adc
sbb
scas
sub
dec
jle
adc
add
adc
fsubrs
add
stos
loopne
rclb
add
xchg
sub
mov
fnstcw
cmp
movsb
cmp
inc
adc
xchg
call
dec
lods
loop
fiaddl
fdivs
push
jne
mov
std
mov
jge
out
cli
out
daa
ds
or
lcall
in
in
or
xchg
das
fiadds
fistps
pop
outsb
fnstenv
fstpl
pop
fisubrs
xchg
mov
xlat
mov
arpl
push
out
and
lahf
xor
jbe
dec
jecxz
mov
sub
shll
cmp
xchg
or
ret
movsb
mov
xor
xlat
cmc
cmp
cli
jl
push
jl
sub
and
and
gs
adcl
cwtl
or
add
addr16
dec
fcomi
adc
push
out
or
xor
adc
hlt
ficompl
enter
fistps
jge
jns
mov
test
in
mov
xor
aam
jbe
and
mov
jbe
insb
inc
inc
test
pop
push
jne
jns
imul
push
outsb
cmpsl
pop
mov
arpl
xchg
or
and
jno
mov
iret
divb
mov
mov
dec
fsubs
and
aaa
notb
jecxz
pop
mov
mov
test
sub
jp
test
and
repnz
sahf
fisubl
popf
fbstp
mov
gs
hlt
pop
out
xor
or
mov
add
fdivrl
mov
rcll
push
mov
test
mov
enter
push
dec
popa
jmp
lea
cmp
pop
lods
jle
cltd
push
cmp
jg
pop
lahf
xor
xor
je
dec
les
dec
outsl
out
in
dec
imul
xor
lahf
mov
xchg
sarl
pop
sbb
sub
push
in
int
xchg
xchg
jg
pushf
pusha
push
dec
in
dec
outsl
cli
loopne
jl
cmp
cmp
hlt
pop
mov
xor
int
mov
mulb
xchg
cmp
or
xor
lods
sbb
loop
stc
fs
jnp
ds
push
in
lcall
mov
dec
inc
xchg
pop
aaa
cmp
push
pop
mov
jg
xor
cmp
in
ret
loope
out
jae
push
aad
add
cli
jp
bnd
into
mov
movaps
adc
push
imul
fnsave
ret
jno
mov
test
and
add
ret
aaa
xor
mov
testb
pop
adc
mov
add
inc
mov
jmp
mov
inc
lcall
xor
aas
hlt
int
ja
and
dec
roll
mov
std
test
pusha
enter
cmpsb
cmp
loope
shl
mov
and
xchg
fsubs
or
pop
stc
and
movl
jb
push
push
pop
pop
lods
sbb
mov
pusha
xchg
leave
cmp
daa
pop
xchg
testl
test
test
pushl
push
sbb
cmpsb
stc
or
fucompp
enter
test
data16
sbb
addl
jmp
shll
icebp
sub
inc
pop
cwtl
popf
mov
mov
mov
inc
aaa
mov
inc
dec
insl
clc
clc
gs
pop
pop
inc
emms
cmpb
testb
jp
cmc
leave
push
jp
mov
movsb
addr16
fildll
jge
dec
xchg
add
cli
lds
mov
lds
push
cld
and
rorb
mov
out
insl
lea
insl
repnz
dec
sbb
cs
orl
cld
aaa
int3
decb
aad
int3
mov
lahf
and
add
cmpsl
das
cmpsl
or
in
cmp
mov
inc
adc
cmp
in
adc
mov
dec
ss
in
jle
mov
cld
pop
loope
cltd
pop
or
into
aaa
sbb
adc
setg
sub
jp
mov
imul
or
and
sbb
imul
aas
out
dec
jbe
lret
sub
and
dec
jne
xchg
inc
inc
ss
mov
ret
test
roll
mov
mov
shll
call
sub
or
lahf
flds
lods
or
shlb
mov
pop
xor
mov
imul
hlt
pusha
mov
scas
mov
loope
fildll
dec
enter
insl
push
dec
sbb
test
lahf
dec
mov
je
add
mov
je
imulb
gs
scas
es
pop
arpl
in
arpl
insb
mov
jle
rolb
xchg
xchg
cmp
push
cwtl
xchg
fcmovnb
call
or
mov
jns
lods
cmp
mov
dec
add
jo
dec
mov
add
jb
mov
rolb
mov
jbe
or
and
sub
sbb
fcompl
and
adcb
ja
mov
dec
icebp
push
pop
mov
add
mov
rcrl
hlt
dec
and
bound
aaa
lods
adc
add
dec
inc
cmpsl
int
mov
mov
cmp
inc
jae
enter
or
out
jne
js
les
mov
or
xor
sbb
lds
cmp
les
push
and
mov
or
test
pop
jno
fldcw
sbb
inc
adc
gs
inc
les
jns
stos
xchg
mov
jb
aaa
push
daa
pop
jb
pop
das
jge
ss
repz
push
out
sub
int3
pop
dec
adc
pusha
ljmp
stos
inc
test
mov
outsl
pop
push
jl
add
dec
push
mov
arpl
push
lahf
push
push
js
scas
push
test
and
popf
stos
iret
aad
out
sti
jmp
lea
mov
xor
faddp
inc
mov
movsb
in
cmpsb
int
icebp
xor
ds
jbe
fildll
or
jle,pt
imul
lret
add
pop
cmpb
and
cmp
cli
xor
pushf
test
cmp
fsubrp
pop
add
aaa
inc
andb
cmp
loopne
xchg
add
mov
insl
jns
push
repz
les
rcr
inc
sahf
jnp
push
das
dec
dec
push
pop
inc
jno
pop
cs
dec
mov
dec
rolb
neg
xchg
push
mov
lea
nop
push
jle
jmp
into
cmp
sub
lret
icebp
les
push
inc
fisubrs
jle
sbb
cmp
mov
orb
jge
or
pop
fiaddl
xchg
std
in
int3
inc
jo
inc
fucomp
out
out
lret
subb
fldcw
test
out
ja
mov
cmpsb
adc
fbstp
mov
xchg
mov
test
inc
or
bound
les
push
call
sti
mov
mov
pop
int3
push
sbb
in
out
jbe
loopne
leave
ja
test
xchg
repnz
add
push
mov
sbb
js
out
nop
cmp
add
and
ret
stc
xchg
push
test
cmp
xchg
xchg
add
xor
cmpsl
dec
out
dec
xlat
push
fs
adc
sbb
mov
add
sbb
lahf
adc
cmp
out
aas
outsl
mov
lds
addr16
rcll
lods
lcall
adc
cmp
stos
push
or
jle
sub
femms
push
aaa
pop
clc
shrb
ss
imul
les
bound
imul
push
xor
sbb
cltd
mov
pop
cmp
movsl
aam
pop
sbb
xor
shr
and
dec
and
mov
ret
clc
sbb
lds
sti
stc
aad
xchg
hlt
inc
addr16
xor
fcmovu
dec
cmc
cmp
pusha
fdivrl
insb
sbbl
mov
sbb
add
dec
or
push
stc
push
mov
sbb
cmp
adc
or
sarb
pop
mov
jnp
xchg
ret
xchg
inc
iret
cmp
and
in
fidivs
jl
add
add
dec
in
mov
pop
mov
or
aad
pop
test
cli
add
popl
jns
mov
sbb
call
mov
mov
jo
dec
inc
imul
push
in
jb
or
jns
mov
adc
cmp
inc
pop
push
pop
pop
lret
jb
mov
out
dec
cmp
add
mov
jge
stos
mov
mov
lock
repz
lds
ffree
adc
dec
sbb
notb
mov
add
or
or
cmpsb
lret
jnp
insb
push
adc
mov
jmp
testb
xchg
daa
rorl
sbb
push
loopne
fidivrl
mov
and
lods
adc
test
jp
mov
xor
or
cmp
sbb
fcmovbe
movsl
push
push
out
mov
cwtl
push
xorb
loop
jb
sub
or
xlat
subl
add
lcall
inc
add
jo
ljmp
out
fcomps
loop
mov
add
mov
pusha
popa
push
sbb
cli
adc
movsl
cli
push
sbb
pop
sbb
lds
out
jno
or
mov
in
aam
sub
out
ds
mov
jno
pop
add
push
in
add
push
dec
xchg
nop
xchg
xchg
pop
mov
lods
leave
sub
sahf
adc
lea
loopne
imul
mov
adc
sbb
frstor
inc
jg
jmp
ficompl
iret
xchg
cmp
or
aad
and
xchg
arpl
jo
daa
sub
jb
add
mov
cltd
fucomp
pop
imul
add
ss
sbb
leave
dec
mov
scas
cmp
insl
dec
pop
dec
pop
movsl
or
imulb
or
mov
adc
dec
push
mov
scas
mov
xchg
xor
cmc
cmp
push
jo
mov
loope
inc
enter
or
insb
in
lock
jno
in
or
sbb
jae
leave
or
sub
sbb
mov
je
mov
fsubrs
rcrl
test
sbb
cmpsl
cmpsl
xchg
insl
sub
ljmp
aas
sbb
pop
lcall
pusha
inc
xchg
mov
pop
insl
es
mov
lods
int
ss
xor
mov
test
sbb
test
imul
sbb
or
cli
xchg
scas
xchg
cwtl
out
pop
or
push
dec
or
xor
xor
repnz
adc
cs
or
test
push
ss
fucomip
cmp
dec
mov
ror
mov
mov
jl
lret
in
dec
xor
les
test
ret
adc
mov
mov
in
int
mov
mov
lock
sbb
xor
lods
jmp
cmp
xor
pop
mov
fmul
push
outsl
xor
xchg
test
adc
shlb
scas
jo
sbb
sbbb
scas
push
sub
xchg
iret
dec
cwtl
mov
dec
int
loope
es
in
dec
inc
adc
sbb
push
xchg
push
pushf
push
pop
stc
xchg
loope
pop
mov
sti
cmpsl
jmp
into
aam
cmp
push
lea
inc
popf
in
push
jb
int3
mov
pop
xor
sub
fmull
lcall
and
popf
jmp
sub
pusha
mov
xchg
test
inc
jbe
xor
cmp
xor
popf
imul
inc
jp
and
in
cmp
and
cs
mov
inc
push
xorb
lcall
sbb
rcll
ss
sarb
pop
std
jbe
dec
dec
xchg
jbe
repz
or
sbb
xor
das
cmpsl
rcrl
cmp
movsl
les
adc
cmpsb
sbb
das
stc
repz
addb
and
mov
in
clc
push
loop
shrl
mov
clc
or
and
push
clc
jo
dec
dec
or
sbb
sub
cmp
cmpb
roll
and
lahf
outsb
andps
xchg
js
stc
jae
jbe
pop
jae
stos
mov
out
idivl
movsl
cli
xor
fs
mov
and
pushl
std
xor
movsb
arpl
dec
push
inc
int
cs
or
dec
sbb
mov
aad
aaa
mov
push
fdivs
pop
pop
pushf
in
sub
inc
adc
scas
out
sbb
fsts
sbb
ret
popa
pop
std
sbb
movsb
lea
jle
jle
popa
cwtl
xor
int
pop
mov
xchg
out
das
dec
sbb
and
dec
movsl
pop
das
or
aad
movsl
xchg
mov
movsb
shlb
push
adc
fwait
lock
call
cmc
jl
mov
inc
sbb
jne
shl
orl
xor
or
stos
mov
rcl
shll
hlt
xlat
lcall
out
sub
ret
xchg
cmpsb
and
jb
outsl
dec
mull
adcb
cs
arpl
test
outsb
add
and
cs
mov
jnp
call
inc
sahf
rorl
jno
jbe
in
addr16
add
gs
bound
mov
sub
mov
cmc
xor
add
push
mov
out
addr16
scas
jp
insl
fld
fcomps
lods
lods
dec
sbb
xor
inc
add
aam
int
jmp
arpl
dec
out
into
icebp
loop
push
stos
orb
xchg
xchg
lock
pop
mov
jb
push
sti
gs
mov
mov
sbb
fxch
addr16
movsl
pusha
outsb
mov
dec
aad
push
int3
sub
out
mov
xor
test
outsl
sbb
insb
and
sub
pop
push
ss
daa
pushf
and
inc
add
repz
xor
rorl
mov
movsl
jae
xchg
insb
pushf
in
mov
adc
dec
adc
push
insl
gs
call
std
ljmp
popf
test
icebp
fmul
jnp
repnz
mov
sub
test
add
loope
jae
in
adc
xor
adc
cmp
dec
lods
sub
jb
mov
hlt
adc
pusha
push
stos
sbbl
adc
mov
sub
push
push
ds
scas
icebp
add
xor
shll
push
icebp
pop
xor
lahf
dec
out
insl
add
pop
outsb
jne
xor
ja
icebp
in
in
lahf
push
leave
sahf
jns
xlat
xor
fsubs
testb
iret
mov
int
lea
out
cmc
xchg
xor
mov
into
sub
adc
dec
lds
push
cmp
mov
arpl
sbbl
lods
loop
mov
adc
cltd
ret
arpl
clc
cmp
add
stos
dec
mov
cli
dec
mov
out
movsb
and
adc
cli
shll
jno
sbb
clc
aam
pop
rolb
add
aas
dec
push
sub
scas
call
and
cmp
xor
loopne
xor
push
dec
adc
jae
pop
inc
ficoms
dec
fldenv
fisubs
in
in
aaa
mov
push
imul
fildl
mov
je
xchg
mov
mov
jb
pushf
fsubs
inc
inc
inc
inc
pop
dec
repz
and
xchg
jb
insb
push
test
cmc
sbb
push
dec
xchg
cwtl
fdivrl
repz
iret
xchg
sub
push
inc
jle
mov
xlat
inc
ljmp
ret
das
and
push
mov
pop
pop
pop
rorb
ss
jbe
aam
adc
inc
mov
cmp
mov
imull
stos
popa
in
std
rorl
cmp
fs
xchg
es
xor
aas
and
in
aad
mov
cwtl
mov
scas
testl
shlb
ljmp
vmovsldup
mov
jbe
sarl
add
push
push
mov
or
into
mov
sub
test
fndisi(8087
mov
movl
sbb
negl
cli
dec
push
nop
std
aaa
sbb
hlt
adc
pop
push
popf
or
outsb
loope
dec
xor
mov
pusha
lret
das
sub
mov
lods
cld
and
cmp
scas
fcompl
cmp
leave
push
test
mov
dec
sti
scas
mov
loop
jl
fcompl
mov
test
lret
or
inc
adc
push
scas
cmp
loope
dec
xor
add
out
add
push
loopne
movsb
cmp
dec
and
add
je
js
mov
cltd
lock
push
es
lods
pop
mov
bound
xor
jp
sbb
push
jbe
jnp
jne
test
pusha
out
add
leave
sub
repz
mov
lret
jle
aad
sbb
movsb
jl
lea
int
je
or
stc
imul
int
and
enter
xor
cmc
lds
stos
std
divl
shr
xor
cmp
out
cmp
xchg
popa
jno
inc
jecxz
scas
adc
inc
mov
push
aas
lods
lods
test
dec
cmpsl
jg
rcll
cltd
pop
int3
mov
dec
stos
mov
jg
dec
push
aaa
outsl
pop
or
jmp
cld
cmp
pop
adc
sbb
lods
lahf
sbb
lret
clc
sub
or
push
fisubs
jne
cwtl
push
fcompl
rclb
ret
xchg
cmp
mov
mov
mov
dec
pop
loopne
fstps
inc
int
gs
add
and
rcrl
xchg
into
fs
cmc
out
push
jae
addr16
inc
lea
mov
push
push
ljmp
movsl
sbb
sub
stc
cmp
cmp
jno
pop
xchg
mov
arpl
xor
cmp
test
cmpsl
lds
daa
loopne
mov
push
ja
aaa
mov
mov
xor
imul
movsb
pop
loope
add
dec
insl
cs
sahf
push
add
fldt
jb
lret
fimull
xor
mov
xchg
push
push
push
xor
jne
mov
add
lods
loope
inc
add
rcll
and
gs
icebp
sub
movsl
jns
outsb
pop
xchg
inc
es
out
cs
sub
lret
xor
clc
dec
mov
lahf
pop
inc
icebp
add
xor
in
test
inc
je
mov
gs
cltd
push
pop
xor
popa
leave
add
mov
mov
dec
add
adc
jbe
imul
mov
sub
mov
scas
jge
or
pop
dec
sub
fsubrs
jbe
dec
repz
lahf
cmc
lret
push
inc
int3
push
or
push
xor
outsl
push
inc
loopne
loope
push
jns
mov
mov
jle
xchg
mov
icebp
jmp
xor
popf
inc
jns
or
pusha
fsub
mov
xchg
imul
xchg
mov
pop
adc
sbb
sub
adc
sahf
dec
es
jecxz
in
fisttpl
jle
in
pop
sbb
push
mov
loop
xor
sub
jno
cmp
jb
jnp
loop
jnp
add
cmpsl
mulb
repz
xor
add
mov
xor
mov
ss
inc
or
in
adc
stos
mov
push
add
out
les
xorl
inc
xor
nop
mov
je
cmp
bound
jnp
push
sbb
jne
pop
adc
add
mov
mov
cmp
inc
mov
pusha
outsl
pop
and
jnp
and
enter
js
fistps
push
insb
fisubs
imull
inc
pop
push
mov
aaa
fisubrl
mov
sub
cmc
in
push
icebp
daa
mov
mov
xchg
adc
repz
hlt
mov
in
mov
mov
sarl
popf
notl
inc
js
test
jb,pt
fstps
xor
lret
shll
js
jle
and
jo
sub
sbb
ljmp
loop
sub
sbb
and
mov
ret
inc
and
testb
xchg
ljmp
gs
jns
popa
call
into
mov
es
xorl
add
dec
aad
xor
cld
add
aam
les
cltd
rcrl
push
aad
xchg
mov
mov
out
popa
hlt
orl
in
inc
push
jno
mov
imul
adc
and
iret
xchg
ljmp
xor
jge
mov
mov
ficoml
cpuid
lods
mov
movsl
push
jg
dec
aas
adc
fbld
rcr
inc
pusha
movsl
adc
test
inc
mov
mov
jl
movsb
adc
cmp
rorb
or
ds
aad
pop
mov
das
ds
ljmp
and
cmp
addr16
push
ja
inc
loope
loopne
and
stos
int
sar
fs
or
mov
jmp
xchg
jno
mov
mov
sbb
test
dec
add
xchg
scas
out
mov
add
fwait
xchg
scas
pop
dec
shrl
or
cmp
push
push
add
notb
and
dec
push
push
and
pop
xlat
sub
jbe
mov
inc
cwtl
repz
push
mov
lret
clc
cmp
mov
push
mov
mov
or
pushf
les
stos
push
aad
movsl
inc
int
inc
lcall
push
jmp
inc
pop
loope
or
andb
fsubr
incb
add
addr16
xor
lcall
and
and
mov
movsb
movsl
outsl
xor
out
aaa
jecxz
or
repz
sbb
xor
jmp
lret
cld
inc
push
xor
ja
add
sub
pop
hlt
pop
sbb
mov
popf
sti
cltd
and
cmpsl
adc
push
shll
aam
and
cwtl
sbb
lret
loopne
clc
sub
mov
pop
das
jno
mov
adc
mov
sub
das
mov
iret
cmp
and
je
mov
mov
test
ja
mov
push
add
jns
enter
outsb
mov
sar
sub
xchg
sahf
popf
inc
mov
lcall
int
imul
mov
loope
inc
les
mov
adc
or
adcl
and
adc
inc
repz
movsl
push
sub
or
jge
xchg
sub
cli
mov
mov
mov
mov
enter
pop
sahf
test
inc
mov
nop
movsb
arpl
repnz
sarl
cmpsb
in
xor
or
out
mov
mov
fildl
jae
rorb
pop
imul
mov
lods
mov
dec
pusha
mov
cmp
jbe
ret
rcr
xchg
xchg
pop
adc
nop
jo
rorb
es
push
or
fldl
lock
nop
cmp
pop
jo
xchg
mov
xchg
xor
and
push
mov
add
xor
out
pop
push
in
or
mov
popf
adc
call
fs
mov
adc
sub
out
xchg
xor
fs
stos
ror
test
out
jecxz
sbb
adc
xor
ret
adc
lods
xchg
psubsw
and
adc
and
inc
add
ja
sti
cmp
das
test
ds
xor
xchg
add
imul
shrb
mov
push
inc
outsl
xor
subl
dec
jb
sub
jp
sbb
test
repnz
clc
shl
inc
sub
mull
imul
mov
out
xor
leave
test
dec
jge
mov
ror
in
jo
int
out
repnz
faddp
sahf
adc
jle
stos
in
jae
adc
popa
adc
mov
dec
vfmsub231ps
in
repnz
clc
dec
push
loopne
fs
int3
pop
faddl
lea
into
insl
lea
pop
cmp
cmpsb
xchg
aas
sbb
sbb
repnz
cmp
call
mov
pop
jp
stc
xchg
mov
mov
sub
jne
out
or
daa
shrl
gs
divl
xor
jecxz
ljmp
jne
and
test
sbb
pop
pop
jnp
cmpsl
cmp
imul
pop
xchg
pop
scas
or
call
push
lock
cmp
cltd
test
iret
data16
mov
pop
pop
jmp
adc
lds
cli
or
sbbb
sahf
pusha
push
mov
dec
cmp
xchg
xchg
out
les
push
movsb
cwtl
pop
test
xchg
int
add
lret
imul
in
rclb
lea
faddl
jo
push
pop
and
sbb
outsl
jmp
pusha
repz
and
sub
mov
xchg
xchg
int
lds
rclb
or
cli
out
xor
ror
pop
and
inc
fiadds
adc
bound
and
push
fwait
jae
sbb
repz
lods
test
mov
in
dec
int3
mov
mov
sub
pop
or
adc
sbb
inc
pop
sub
arpl
sbb
outsb
shrb
cli
pop
icebp
sub
xor
shll
pop
cmp
pop
dec
gs
fwait
insb
imul
icebp
popf
cmp
xor
imul
or
mov
dec
pop
aad
shll
xor
lods
mov
jbe
pop
ret
xor
insb
stos
sbb
imul
stos
adc
sbb
lods
xchg
decb
jg
add
push
inc
movsl
pop
arpl
or
mov
xor
xchg
dec
outsl
push
adc
imull
outsl
and
mov
stos
scas
repz
push
imull
scas
and
sti
movsb
shll
mov
and
inc
pop
idivb
mov
or
movsb
mov
xor
inc
push
fs
push
lcall
xchg
mov
std
adc
ret
push
jnp
mov
cmp
xor
subb
cmp
in
mov
or
gs
repnz
stc
aaa
loope
or
xor
fimuls
and
or
int3
and
adcb
mov
pop
fistpll
mov
or
hlt
lcall
pushf
fisttpl
jno
mov
int3
popf
sbb
dec
xchg
lods
je
sbb
dec
jp
add
push
adc
cmp
sti
scas
adc
fdivrl
lahf
orb
mov
cmp
mov
cltd
sbbb
and
mov
sub
jnp
cmp
cltd
lods
pop
aad
mov
fadd
cmp
mov
sub
rep
xor
test
mov
push
pop
stc
mov
negl
fiaddl
fisubrl
sub
sub
test
pop
mov
push
lds
pop
das
mov
push
mov
movsl
scas
out
ds
mov
fnstcw
and
fwait
adc
int3
jb
sub
dec
sarl
adc
sub
xchg
xor
adc
mov
mov
xchg
pushf
cmp
scas
and
sbb
mov
insl
nop
es
xchg
mov
cmp
shlb
cmovns
push
add
stos
mov
xchg
pop
dec
dec
xchg
movsl
lcall
imull
int
out
shlb
int3
push
scas
adc
push
mov
shll
js
pop
lahf
cmp
mov
ficoml
jmp
movsl
cmpsl
and
test
push
cmp
sub
scas
pop
dec
xor
test
cmp
inc
aad
clc
and
mov
cltd
xlat
rorb
cmp
mov
mov
xchg
xor
adc
cmpsl
int3
int
push
inc
cmp
cmpsl
cmp
dec
jp
sub
adc
and
js
inc
rcl
mov
popf
mov
bound
idivb
ret
sbb
addr16
and
out
jl
data16
fadd
enter
test
sub
popl
dec
inc
iret
push
pop
push
mov
inc
loopne
sub
popa
xchg
test
stc
dec
int3
ret
jbe
and
sbb
adc
adc
fwait
adc
dec
lret
add
fsubrl
jp
xchg
xor
je
adc
int
lods
into
xchg
pop
inc
jecxz
icebp
inc
mov
push
dec
clc
std
sbb
jbe
call
dec
xchg
lock
and
daa
bound
mov
shrl
dec
mov
dec
test
fisttpll
cmp
jg
sbb
cmp
lods
lcall
jp
dec
xor
xchg
cmp
mov
insl
cld
xchg
loop
mov
stos
int
adc
hlt
loope
sbb
jge
jl
cmp
xor
stos
pop
mov
jnp
cmp
enter
out
jge
add
or
faddl
mov
std
popa
fdivrs
scas
in
xchg
jne
jg
sahf
xor
cmp
in
push
std
sbb
shll
andb
movsb
dec
xchg
lock
jbe
pmullw
sub
fidivs
mov
lcall
iret
addb
lock
std
add
outsl
cmp
int3
xchg
mov
inc
and
call
es
add
xor
test
jne
lcall
dec
adc
pusha
std
cld
inc
push
daa
popa
or
mov
or
pushf
lods
pop
cmp
push
xor
jecxz
shl
les
jns
sbb
xorb
xor
hlt
aas
sub
cmc
cmp
scas
orl
xor
mov
insb
out
ja
jo
inc
push
cmovno
dec
pop
xchg
mov
std
popf
sub
xor
out
push
pop
andl
iret
stos
xchg
xor
add
lret
or
fdivrs
call
push
stc
inc
movsl
jg
mov
add
arpl
movsl
push
lock
cwtl
and
into
jg
sbb
pop
inc
adc
addr16
fimuls
cmc
jecxz
sub
data16
popa
fwait
stos
inc
sbb
jnp
pop
xor
aas
outsl
push
in
add
cmp
in
push
lea
xchg
add
in
cmp
push
jno
push
adc
inc
insl
es
xor
jl
cmpsb
out
jecxz
movsl
lahf
jp,pn
movsb
pop
popa
lock
mov
scas
cmpl
inc
lds
lret
push
pushf
sub
icebp
jg
and
out
cli
scas
mov
dec
dec
add
out
cmp
sbbl
lock
lcall
cmp
or
mov
or
and
ret
aas
addr16
sti
push
lods
and
push
mov
jne
lods
cld
adc
addb
jmp
iret
adc
mov
mov
out
xchg
or
hlt
loopne
sub
ficompl
shrl
js
clc
into
ja
adc
jg
pop
sbb
push
call
cmp
jle
cmp
dec
dec
jl
xor
add
sbb
ja
xlat
and
lcall
adc
and
and
fcompl
push
push
lods
pop
xor
movsb
add
sub
ret
add
inc
add
les
fimull
in
lcall
es
test
pop
clc
pop
loope
shrl
lahf
out
fs
push
aaa
insl
mov
mov
push
adc
sar
jne
aas
bound
inc
test
jmp
xchg
int
mov
popl
sub
and
in
push
xchg
adc
jl
pop
sbb
dec
js
cli
mov
and
jmp
cwtl
dec
aam
jns
rcr
mov
clc
adc
or
push
out
pop
pop
js
mov
inc
add
addb
in
hlt
enter
adc
test
add
in
movsl
out
jnp
test
fwait
roll
xchg
das
xchg
or
add
bound
lret
in
fnstsw
inc
fcoml
in
scas
fists
mov
inc
arpl
push
jmp
jle
inc
insb
sbb
das
movsb
mov
lahf
je
sbbl
xchg
int
out
dec
imul
sahf
push
scas
inc
adc
sub
sbb
lret
imul
jnp
mov
stos
movsb
mov
aaa
push
hlt
pop
fldenv
imul
aam
push
cltd
test
push
mov
mov
pop
adc
sub
int
push
push
loop
mov
ss
xchg
pop
jnp
push
dec
mov
outsl
mov
or
mov
pushf
xchg
sti
or
leave
dec
popa
xchg
sbb
cmp
cmc
call
cwtl
cmpsb
sbb
icebp
xor
push
test
jbe
and
lret
fldcw
cmpsb
add
pop
mov
jp
xor
lea
imul
out
xchg
ss
xchg
sub
ss
ds
negb
ds
xchg
adc
ss
aas
jnp
adc
and
dec
adc
aas
add
sbb
mov
mov
cmpsb
push
icebp
add
mov
xchg
fwait
jecxz
cmp
push
mov
pop
ret
adc
jp
repnz
cmp
or
daa
add
fldl
loop
adc
fcompl
lock
push
lods
xor
jg
fisttpl
iret
mov
sti
and
push
mov
push
cmpsb
xor
scas
dec
mov
push
add
add
jbe
pop
cmp
int3
fidivrs
pop
xchg
out
pop
fs
jae
jge
aam
int
shlb
out
arpl
js
pop
sbb
stc
outsl
inc
xor
or
outsb
out
insb
push
push
add
loop
pop
int3
and
ret
push
push
aad
mov
sub
push
lret
in
dec
pop
mov
aad
pop
pushf
les
adcb
xchg
ret
add
inc
ficoml
cmpsl
push
jl
dec
inc
testl
adc
fsub
pop
push
inc
das
push
fsubs
outsl
add
add
out
inc
test
pusha
pop
scas
js
xor
icebp
ret
dec
movb
stc
mov
ret
mov
fcompl
inc
or
mov
ja
hlt
jnp
icebp
mov
cmp
shrb
push
adc
loope
mov
in
andl
roll
inc
ds
xor
pop
loop
mov
scas
lods
adc
mov
loop
pop
imulb
mov
imul
mov
pushf
aaa
jnp
and
xchg
pop
stos
out
shll
sbb
mov
ss
aam
jle
jl
jbe
int
lcall
mov
dec
sti
jns
mov
mov
cmp
test
test
cmpsl
sarl
adc
xchg
cld
dec
js
fs
loope
mov
out
mov
out
ret
mov
divl
loope
xor
sahf
cmpsl
test
shll
adc
loop
dec
cmpsl
xor
aas
outsb
sbb
fiadds
outsb
movl
mov
xchg
out
xchg
xchg
fcomip
mov
mov
adc
cltd
in
push
adc
jo
mulb
jge
mov
push
cwtl
cli
add
adc
jae
cli
inc
push
je
and
jb
xchg
mov
cltd
or
inc
ss
push
mov
ficompl
jmp
mov
push
jbe
xor
xorb
add
push
mov
xchg
movsl
jmp
aas
dec
fwait
test
mov
lcall
shll
into
sub
sahf
cli
inc
test
xor
add
cmpb
pop
rcrb
jmp
jns
lcall
es
notb
das
mov
lds
outsb
fdivl
add
lods
mov
mov
incb
jecxz
cld
into
push
or
repnz
lods
inc
inc
out
mov
clc
lcall
lods
or
test
jbe
jle
aas
mov
mov
xchg
addb
and
lea
repnz
in
popa
scas
int3
inc
lods
ja
jmp
fldcw
jne
add
lock
and
ljmp
cli
loope
mov
jecxz
sub
jecxz
pmaddwd
and
test
cs
or
es
sbb
mov
gs
xchg
cltd
repz
jb
jp
gs
mov
xlat
rol
cmc
cwtl
std
cmp
push
cmpsl
stos
pushf
inc
xchg
or
push
xchg
xorb
adc
dec
add
aad
push
jns
lret
dec
dec
cs
rorl
add
pop
cmp
in
repz
push
fisubs
iret
sarb
dec
inc
inc
jmp
js,pn
rcrl
and
test
out
cli
ja
push
leave
mov
mov
ret
cmp
mov
daa
aaa
xor
lret
pusha
cmp
fcmovnu
adc
sub
xchg
clc
jmp
repnz
cmp
dec
mov
adc
es
add
gs
add
push
cwtl
stc
ljmp
jb
lcall
jecxz
test
cmp
out
push
mov
xchg
push
enter
pushf
arpl
sbb
in
dec
push
sbb
mov
out
inc
stc
out
sbb
sbb
push
call
mov
rcrb
nop
bound
mov
dec
mov
nop
scas
cs
ret
cwtl
sub
in
insb
sbbl
cmp
pop
je
shl
mov
xor
adc
cmp
mov
mov
sub
rcll
dec
and
cli
add
pop
push
pop
pop
adc
in
add
test
inc
popa
dec
js
es
lds
imul
insl
in
push
sub
dec
jbe
cwtl
sar
sti
xchg
lcall
add
gs
sub
gs
stos
dec
mov
mov
add
popf
mov
outsb
dec
inc
insl
add
rcll
inc
loopne
movb
lea
adc
xor
stos
dec
mov
imul
sub
loopne
test
or
or
adc
or
cmp
mov
jb
cmpsb
nop
dec
rcl
or
sub
repz
jne
pop
insl
xchg
mov
fwait
insl
xchg
xchg
dec
sub
ret
je
mov
xor
popa
lea
fcoml
pop
scas
sahf
pusha
xor
xor
inc
adc
push
leave
and
gs
and
stos
lcall
out
in
ret
rcr
dec
sbb
xor
movsb
jge
popf
mov
sbb
pop
test
and
repz
cwtl
push
fisttpl
mov
fsin
xor
add
cmp
push
es
xorb
arpl
mov
mov
icebp
mov
push
insb
ret
jl
lret
dec
jb
js
mov
std
mov
lea
lods
sub
xchg
aaa
xchg
lods
out
jae
sbb
in
cld
push
pop
xchg
jnp
push
inc
ret
push
mov
inc
fisttpll
or
cmp
cmc
add
cwtl
lret
xor
mov
inc
incl
std
and
insb
and
popa
pop
mov
in
fsubl
ljmp
cld
jne
xchg
cmp
mov
cwtl
in
jp
sub
adc
bound
push
add
adc
pop
imul
and
push
repnz
xorl
push
cmp
pop
sub
inc
fisttpl
out
loop
push
lock
pop
xchg
and
jge
push
stos
hlt
cmpsl
mov
fistpll
pop
add
movsl
mov
jecxz
shl
sbb
push
scas
ljmp
mov
push
mov
aam
sub
scas
sub
sarl
inc
mov
push
lea
add
repnz
in
popf
dec
sbb
jmp
rcl
rcrb
lea
negb
adc
dec
mov
scas
mov
loope
addl
paddb
mov
gs
aad
aas
dec
inc
imul
dec
dec
test
xor
lahf
andl
sbb
adc
adc
popf
xor
adc
cltd
xchg
repnz
or
add
subb
xor
insl
imul
adc
lret
mov
pop
popf
inc
fists
test
aad
fdiv
lods
xchg
or
in
push
sbb
sbb
dec
rol
mov
xchg
push
adc
xchg
mov
into
popf
or
inc
je
int
jle
jmp
add
push
leave
data16
push
pushf
mov
sbb
stc
mov
pop
call
xchg
repnz
push
aam
nop
sbb
and
movsb
xchg
mov
ja
bound
arpl
xlat
sbb
mov
into
add
jne
fs
shl
in
aad
out
cmpsb
mov
pop
rolb
lahf
mov
fisubrs
sbb
sbb
mov
cs
scas
jbe
cmp
jg
add
gs
push
inc
shrb
scas
mov
sbb
dec
cwtl
or
out
xchg
shrb
pop
leave
int
insb
cs
cmp
mov
inc
fistl
and
idivb
les
cmp
cmpsb
pop
ret
xor
cld
aam
mov
push
sti
test
lods
xchg
sbb
mov
xor
jb
dec
out
sbb
and
aad
out
outsb
pushf
mov
mov
jge
mov
mov
in
xchg
in
pop
adc
lcall
cmp
cltd
pushf
repz
sub
rorb
arpl
dec
push
idivb
add
enter
lret
sti
xchg
push
out
icebp
addl
push
roll
lahf
pop
jle
add
dec
push
nop
mov
popf
popa
push
push
mov
or
out
push
je
jb
xchg
jo
jno
out
cltd
inc
mov
js
in
cs
into
lret
dec
ja
dec
or
jbe
mov
dec
sbb
sub
cmp
ljmp
call
or
fiadds
imull
adc
jo
and
sub
repnz
std
call
repz
in
cld
push
mov
mov
jg
push
sub
sub
repz
adc
sub
pop
fldl
in
cmpsb
push
imul
or
loope
mov
mov
cmp
sti
and
fwait
pop
lods
ret
xor
cld
enter
dec
mov
mov
or
sti
xor
clc
cli
mov
or
mov
enter
sub
push
mov
ss
jecxz
mov
sbb
push
sub
jnp
shlb
pop
and
push
popa
cmpsl
lods
cmc
push
inc
add
jns
rolb
add
ss
mov
xchg
push
jb
and
arpl
dec
xchg
stos
mov
rclb
push
adcl
add
cmp
or
std
adc
call
ret
stos
bound
in
imul
stos
cmpsb
sbb
mov
lret
dec
cwtl
cmpsb
mov
mov
mov
cmp
pop
push
jae
out
rcrb
addr16
xchg
ficomps
add
jne
in
fmull
push
insl
dec
inc
jo
sub
aad
lods
leave
iret
adc
fidivrs
fwait
push
jge
in
and
and
inc
out
push
stos
jl
ficoms
test
test
mov
out
add
xor
aaa
jl
popf
xchg
movl
je
cmp
movsb
lds
mov
dec
sahf
cmp
gs
inc
iret
es
or
xchg
and
xlat
sub
lahf
cmp
mov
popf
mull
sbb
lds
ficoms
sti
inc
add
in
pop
shrl
popf
in
cli
inc
mov
push
lock
sbb
scas
cmp
adc
scas
mov
mov
inc
hlt
rcll
sarb
in
sbb
out
xor
fidivrl
xchg
subb
mov
insl
adc
sbb
jge
testb
jno
test
aas
dec
ret
push
sti
mov
jbe
pop
jp
cmc
std
and
xchg
xchg
jns
test
inc
jb
sub
pop
jge
loopne
sbb
cmp
dec
push
sub
test
dec
in
test
pusha
hlt
movl
pushf
in
pop
jecxz
cld
mov
jle
mov
push
bound
je
mov
cmpsl
mul
or
insb
aaa
mov
dec
adc
aaa
jp
bound
int3
push
adc
pop
cmpsb
psrad
cmp
mov
lret
loopne
stos
sti
push
and
cmp
test
mov
insl
sbb
pop
imull
mov
mov
negl
inc
into
lret
jmp
mov
adcl
xchg
or
addr16
mov
jae
mov
inc
out
daa
inc
inc
movsl
sbb
xchg
pop
addr16
mov
and
jle
cmp
cli
ss
pop
flds
jnp
mov
ret
ffree
inc
lret
lods
inc
das
pop
scas
xor
jge
lahf
testl
iret
scas
mov
rorb
fcmovbe
sub
shlb
jg
stos
adc
fsub
insl
push
xchg
lret
jecxz
sti
imul
cmpsl
inc
fndisi(8087
jge
push
xchg
adc
sub
mov
stos
out
mov
and
lahf
mov
add
lahf
mov
arpl
mov
cld
sahf
xchg
jae
xchg
mov
xchg
push
popa
cmp
arpl
xchg
in
adc
icebp
imul
lock
add
dec
fstps
push
and
jge
fsubs
pop
sbb
mov
adc
outsb
ljmp
js
xchg
ret
push
in
or
outsb
jle
lret
push
dec
xor
cmp
dec
addr16
rcrl
bound
je
addr16
mov
dec
add
inc
pop
mov
stc
lret
loope
add
or
fimuls
xor
sbb
dec
or
and
sub
cmpb
push
or
pop
mov
inc
mov
data16
cltd
ds
into
mov
arpl
in
es
mov
scas
or
sbb
ret
lods
enter
mov
mov
inc
sub
push
push
cmpsb
jecxz
jnp
cmp
mov
pop
pop
add
hlt
push
ret
push
loope
push
mov
lods
lret
insl
sbb
push
scas
pop
adc
ja
insl
cs
add
lcall
inc
bound
adc
cs
or
insl
hlt
cmp
data16
stos
sbb
ret
int3
shll
rol
add
testl
jle
pop
lods
repz
or
int3
and
arpl
jge
bound
cmp
add
mov
in
dec
xchg
or
lret
test
jl
xchg
mov
iret
xchg
test
arpl
xchg
or
cs
fistpl
addb
pushf
mov
or
and
hlt
pusha
push
inc
je
repz
mov
xor
int
add
xchg
das
push
popl
mov
imul
js
dec
rcl
frstor
aad
pop
sub
cmp
mov
aas
xor
cmp
adc
inc
jbe
movsl
pandn
xchg
jbe
and
push
je
push
cmp
add
out
xor
jle
test
in
dec
push
rorl
ret
loope
lods
adc
pop
xor
shlb
aad
push
loopne
in
jne
jle
rorl
fbstp
ljmp
jecxz
push
fstl
fnstcw
dec
cld
push
bound
ror
mov
fldl
pop
enter
pop
repz
pop
lock
inc
and
add
ror
scas
fs
mov
in
pop
les
or
jecxz
xor
iret
pop
jecxz
xor
loope
add
nop
fistpll
cmp
mov
repnz
test
jle
sahf
push
mov
jp
popf
dec
js
cmovo
xchg
int3
lret
mov
and
push
mov
adc
cmp
xor
enter
xor
sub
test
sub
lret
pop
fbld
jne
dec
das
mov
and
movsb
lods
fisttpll
mov
add
int3
je
in
push
cmp
adc
push
imul
mov
rcrl
push
xor
clc
add
inc
in
xchg
outsb
dec
jb
je
jb
test
ret
fidivrl
jae
fucomi
jns
scas
test
dec
sub
jp
dec
aaa
arpl
sub
rep
dec
jns
movsl
fistps
dec
aam
and
dec
sbb
mov
shl
test
push
push
sahf
fcomip
jae
movsl
inc
push
aad
pop
addr16
jmp
ljmp
mov
mov
rorb
int3
push
xor
rcrl
bound
cmp
adc
loopne
fildll
mov
or
push
mov
sti
cmp
ja
loop
aam
ds
fs
cmp
pop
popf
arpl
incl
outsl
arpl
pop
loop
pop
jmp
fs
fcompl
mov
lcall
jbe
push
aad
iret
lea
sti
or
xor
sbb
jns
push
loope
outsl
sub
bnd
xor
dec
ljmp
and
aaa
nop
pop
push
bnd
lods
add
shrb
push
jae
sbb
cmp
icebp
imul
xchg
hlt
add
ret
sbb
lret
test
cltd
lods
mov
xchg
cwtl
and
fisubrl
jmp
fwait
mov
jns
xlat
mov
adc
pushf
cmpsl
pop
dec
or
fs
mov
lods
add
leave
bnd
sub
xor
and
xchg
mov
hlt
push
adcl
mov
cmp
cs
fdivrl
in
cmpsl
je
xor
push
cmp
jge
pop
in
pop
mov
cmp
or
in
stos
dec
sbb
xchg
lcall
sar
xchg
repz
insb
mov
xor
xor
mov
mov
xor
sti
ffreep
jl
test
adc
aas
mov
lds
aaa
pop
inc
mov
ret
aad
pop
ljmp
mov
scas
pop
leave
sbb
push
cmc
jno
push
roll
arpl
mov
sub
cmp
dec
sub
cltd
popa
jl
add
inc
xor
lea
cmc
cmp
add
imul
mov
jmp
pop
jbe
jb
js
push
adc
in
push
sbb
repz
mov
mov
xchg
pop
inc
cmp
stos
push
jge
out
enter
xor
cmpsb
pushf
icebp
push
aam
ja
adc
cs
add
stos
in
test
ss
mov
repz
sbb
push
xchg
ret
bound
xchg
pop
cltd
push
push
xor
lahf
mov
push
or
test
cs
std
nop
xchg
mov
in
and
insb
cwtl
lahf
push
call
les
jbe
lods
ds
ds
int3
xor
mov
mov
test
or
test
ja
dec
or
pushf
push
in
mov
xlat
sub
and
sub
xchg
push
mov
inc
sti
or
int3
js
sub
lahf
inc
cs
add
push
hlt
inc
xor
push
push
rorb
jmp
inc
into
lret
dec
pop
clc
or
sub
test
loope
jnp
fwait
mov
inc
rcrl
cwtl
dec
xchg
push
insl
sbb
or
call
xchg
jmp
pop
cs
adc
lcall
out
dec
sub
or
shlb
xor
jp
pushf
jo
fsub
adc
jno
fnsave
rcr
movsb
aad
ret
inc
adc
inc
push
pop
loope
stos
cmp
arpl
and
sbb
incb
mov
stos
push
mov
or
sbb
testb
cmp
das
cmp
push
or
jle
mov
push
scas
jmp
lahf
mov
ret
sbb
scas
push
adc
mov
test
sub
jl
das
and
aad
hlt
mov
xchg
je
dec
mov
push
pop
or
mov
orb
in
lcall
sbb
lahf
out
out
add
aad
push
or
cmpsl
div
cmp
lcall
cld
xchg
inc
movsl
cmp
mov
and
mov
inc
ret
add
jg
imul
in
pop
loope
inc
jecxz
sub
inc
add
push
jmp
data16
pop
js
dec
push
sub
insb
repnz
xor
popa
mov
fxch
sub
mov
pop
xchg
jae
mov
jno
dec
lea
repz
xchg
mov
repz
inc
mov
push
push
xchg
insl
push
sbb
push
mov
push
arpl
repz
scas
xor
xorl
std
add
daa
addr16
jp
fnstcw
pushf
pop
inc
int
xchg
in
stc
mov
push
or
cmp
sub
cld
ret
dec
push
dec
push
push
pop
test
ja
faddp
pop
cmpsb
add
imul
gs
mov
xchg
es
cmp
fstpt
lock
inc
mov
push
dec
cmpb
dec
stos
mov
shl
popa
add
xchg
push
xlat
sub
rclb
mov
mov
call
lea
xchg
in
je
xor
fwait
imulb
mov
add
push
or
dec
iret
shll
movsb
pop
ljmp
push
bound
lret
mov
pop
jle
inc
push
or
jne
jbe
leave
mov
pop
data16
popf
and
pop
add
fisttpl
int
cmp
cmpsl
mov
jbe
xchg
cmpsl
cltd
mov
rolb
pushf
xor
cmpsb
jp
mov
sbb
pop
push
cld
push
xor
lds
pushfw
in
pop
sahf
adcb
ds
pop
movsb
mov
pop
sub
add
jnp
and
and
or
xchg
cltd
lock
lods
mov
test
add
stos
and
sar
dec
loope
js
in
fnstcw
mov
jne
mov
shlb
into
dec
inc
add
out
shrl
add
stc
daa
enter
icebp
into
mov
outsl
cwtl
adc
pop
inc
int3
cmp
cmpsb
xor
and
adc
nop
or
imul
mov
and
and
add
mov
sti
mov
sub
cld
das
call
mov
in
stos
jmp
mov
jb
jae
and
jl
dec
in
mov
gs
movsl
das
inc
repnz
xchg
sbb
mov
loop
dec
out
test
scas
jb
jb
orb
xor
push
push
adc
cmp
cmp
flds
adc
incl
jbe
mov
xor
or
pop
cmpsb
sbb
mov
mov
mov
popf
mov
and
xor
mov
mov
mov
scas
in
das
je
add
rdpmc
imul
aaa
adc
and
inc
or
roll
in
mov
cld
mov
loope
dec
push
cmp
cmp
sbb
mov
std
and
push
jns
xchg
or
loopne
cli
enter
aad
mov
adc
jo
in
sbb
fwait
scas
movl
popa
pop
cmp
je
dec
daa
cmpsb
push
flds
push
aad
fcompl
xchg
cld
sbb
xchg
add
in
pop
push
adc
les
push
mov
push
test
gs
add
mov
pushf
adc
push
test
rorl
clc
mov
icebp
fwait
aas
test
cs
das
jo
cli
or
or
stos
gs
btr
loopne
adc
cld
nop
xor
xor
pop
xchg
pushf
mov
adc
out
loopne
xchg
movl
movsl
out
xchg
arpl
aas
gs
xchg
sub
rorb
cmp
mov
inc
popa
in
mov
out
push
mov
int3
addl
mov
stos
or
inc
in
repz
fistpl
jmp
dec
mov
jp
enter
pop
aas
cmc
push
pop
data16
mov
pop
dec
clc
jmp
jne
mov
or
add
mov
xchg
cmp
xor
and
data16
mov
jl
xorb
xor
mov
pop
push
cmp
cmp
inc
jmp
push
xor
inc
xchg
mov
arpl
sub
push
std
xor
push
insb
add
adc
shl
mov
mov
fdivl
test
add
mov
fwait
dec
jge
dec
mov
add
aad
jno
xor
mov
sbb
cli
sub
adc
inc
loop
pop
xchg
icebp
mov
std
dec
addr16
mov
jmp
loopne
in
mov
inc
fcomps
sbb
cmp
outsb
cmpsb
sarb
data16
jae
mov
in
loop
arpl
adc
pop
sub
pop
mov
pop
cwtl
andb
cmpsb
xchg
push
loopne
and
jns
cli
sbb
fwait
pop
mov
sbb
pop
mov
imul
les
insb
jecxz
mov
test
xchg
pop
or
in
push
negl
std
aas
push
fbstp
inc
in
scas
ds
inc
pop
outsl
bound
negl
call
inc
pop
inc
mov
mov
add
sbb
jno
mov
jb
jl
aam
rolb
and
inc
adc
enter
xchg
pop
pusha
out
ljmp
ss
and
rol
dec
and
lret
xorl
sbb
inc
sub
fsts
gs
jmp
inc
out
shl
xchg
aad
ljmp
das
je
jge
xchg
ret
subl
xor
xchg
mov
jno
dec
into
or
int3
pop
lods
out
rcrl
xchg
sarb
or
adc
fcoms
ficoml
mov
adc
lcall
fldenv
idivl
testl
xchg
fldt
sbb
and
andb
xor
in
icebp
cmc
mov
xlat
aad
fcomp
int3
in
jo
mov
jns
fists
idivl
ds
dec
sahf
test
dec
shrb
fstpt
cwtl
mov
shrl
cmp
daa
push
mov
lock
clc
push
dec
xchg
inc
inc
xorl
test
daa
stos
pop
push
xchg
xor
push
lret
mov
dec
fists
outsb
or
out
in
pop
sub
insl
cmp
xor
ret
div
push
dec
adc
mov
xchg
fwait
xchg
xor
inc
in
cmp
pusha
fisttps
sbb
and
inc
inc
push
sub
mov
inc
pop
shlb
rcrb
test
adc
mov
jnp
addr16
sub
adc
dec
pop
pop
cmp
scas
cmpsb
pop
xchg
pop
into
jge
outsl
sbb
jl
sub
pop
adc
leave
aad
jecxz
clc
mov
mov
adc
int
adc
ficompl
stos
jle
out
and
hlt
sbbl
in
xor
or
mov
loopne
cmp
xor
insb
outsl
xchg
enter
sbb
repz
in
cmpsl
pop
cmp
hlt
nop
or
xor
xlat
jge
xchg
mov
pusha
mov
cmp
push
inc
fwait
cmp
lcall
xor
pop
or
cmp
out
js
js
mov
jmp
ja
xchg
jmp
loope
or
jne
hlt
je
aaa
loopne
adc
popa
mov
xor
pop
pop
jge
arpl
sub
xchg
jnp
lcall
fildl
orb
mov
leave
mov
push
dec
es
adc
xchg
xchg
sub
pop
icebp
jns
mov
xchg
cmpb
jnp
pop
negb
lret
and
int
in
mov
push
outsb
add
neg
mov
cmp
clc
mov
pop
iret
mov
ror
add
sbb
add
push
movb
add
cld
cmp
subl
sarl
test
sbb
xor
cmp
xchg
sub
add
jp
shl
push
out
cs
lds
cwtl
cmpsl
adc
add
dec
sbbl
adcb
inc
mov
sub
mov
push
aam
test
jecxz
mov
inc
add
loopne
mov
test
fs
pop
icebp
les
or
mov
out
xchg
icebp
add
movsb
cli
pop
mov
jo
pop
stos
aad
imul
add
and
pop
cmp
aas
rol
aas
repnz
in
rdtsc
cs
sub
mov
dec
sbb
and
mov
mov
inc
jmp
aam
fwait
mov
clc
push
lret
or
hlt
or
popa
stc
test
bnd
xor
sub
and
push
xor
fadds
sub
or
hlt
xchg
push
pop
movsl
fisttpl
pop
jge
fnstcw
in
in
cld
cmp
in
sub
jg
dec
and
push
push
ret
les
sarb
xor
pop
shr
rolb
dec
js
or
xchg
jae
div
hlt
dec
stos
das
push
adc
sbb
in
ss
sarb
pop
loop
mov
push
mov
repz
out
cmp
aam
pop
xchg
add
les
rclb
fmull
dec
cltd
and
pop
nop
into
lea
fisubrl
mov
and
push
nop
cmc
and
arpl
sarb
dec
jecxz
sbb
adc
mov
dec
and
xchg
sarb
mov
lcall
adc
jae
loop
mov
pop
movsb
lods
sbb
sbb
add
ljmp
cmc
pop
aam
insl
sbb
leave
je
stos
lret
mov
jle
pop
inc
cmc
sub
lds
xlat
orb
fldcw
cld
sbb
adc
sti
jns
ret
aas
mov
inc
push
and
mov
ljmp
rcr
fsubs
in
fistpll
test
and
sub
mov
pcmpeqb
fsubrs
sti
mov
out
sbb
jno
sahf
enter
pop
das
and
sbb
mov
jge
daa
popf
outsb
rcll
aaa
xchg
loop
stc
push
fldenv
cld
gs
call
mov
lods
push
sbb
xchg
sbb
and
add
or
or
scas
or
sbb
and
insl
loope
xchg
sbb
mov
add
pop
push
mov
sbb
pop
aas
loope
push
fwait
inc
bound
xchg
shlb
insb
arpl
pop
sbb
icebp
xchg
push
sub
inc
mov
cmp
adcb
pop
mov
sbb
dec
jmp
jne
and
sub
lret
rcrl
pop
insl
inc
into
out
popa
icebp
adc
cmpsl
mov
fistpll
mov
xchg
sub
add
mov
sub
das
fiaddl
add
pop
popw
test
daa
mov
enter
xor
shlb
xor
mov
in
add
jbe
xchg
and
xor
shrl
or
subb
idivb
xor
and
cmp
adc
rep
popa
fistps
pop
add
push
aas
out
mov
mov
cmp
movsl
mul
sbb
pop
cmp
dec
push
ret
std
pusha
jp
inc
cli
js
xor
popf
jmp
mov
pushf
push
stos
and
xor
push
outsb
mov
mov
aad
popf
xor
adc
insl
cli
popa
and
mov
fwait
cwtl
dec
jno
xchg
inc
dec
cmp
ficomps
xor
and
cmp
loop
popf
test
fcomi
mov
cmpsb
add
inc
fdivrp
psrad
or
jb
cmpsb
divb
loop
mov
pop
or
lock
sub
or
fdivl
cmp
and
dec
adc
cmp
add
fidivrs
scas
clc
mov
insl
push
jg
data16
dec
das
mov
fcompl
or
sub
jne
clc
sahf
push
mov
dec
in
xchg
leave
jmp
xor
popa
inc
jl
xchg
inc
push
cmc
and
xchg
loope
mov
je
js
sub
pushf
subb
dec
push
fstps
jno
aam
push
dec
in
mov
repz
cmp
mov
std
fldt
inc
pop
pop
xchg
mov
test
pop
mov
outsl
mov
rorl
cmc
inc
xchg
je
add
push
sbb
iret
test
mov
lock
fwait
and
and
adc
aas
pusha
out
mov
ljmp
dec
xor
and
dec
push
mov
mov
cwtl
aad
sub
inc
rcll
fcmove
sar
cwtl
xor
lods
adc
sbb
js
call
int3
xor
push
out
xor
sbb
push
jbe
and
sub
cmpsb
xor
int3
mov
push
push
push
mov
mov
loope
xchg
inc
and
test
lcall
js
rclb
xor
loop
test
add
js
das
mov
lods
inc
xchg
fcompl
fwait
inc
jno
ja
mov
pop
cmp
in
cmp
inc
pop
mov
mov
or
cmp
or
movsb
jb
or
dec
int3
add
rcrl
jnp
imul
std
mov
pop
imul
out
movsl
add
dec
dec
sbb
fcomps
cltd
rclb
adc
mov
mov
xchg
lock
out
and
cmpl
inc
into
daa
ret
cld
mov
gs
push
leave
and
fisttps
pop
mov
xchg
mov
sti
xchg
mov
add
in
jp
push
jge
addl
aaa
sbb
dec
ds
xor
scas
je
mov
xchg
inc
pop
push
aam
mov
ds
pop
xor
stos
inc
cmp
jmp
mov
stc
mulb
pop
out
sahf
addr16
cmp
out
push
sub
bound
imul
pusha
adc
cld
dec
orb
and
cltd
add
adc
arpl
int
cli
insb
aaa
stc
or
iret
xor
ss
mov
insb
sbb
xor
sbb
sub
ss
cld
clc
mov
mov
push
test
sbb
mov
xchg
data16
sub
adc
arpl
fimuls
shr
push
adc
mov
inc
movl
inc
negb
jle
mov
mov
fwait
xor
jb
test
inc
push
inc
repz
cld
out
cmpsb
jns
xor
cmp
adc
and
mov
sub
jecxz
inc
add
cmpsl
adc
push
push
into
xchg
dec
mov
inc
cmp
push
push
xchg
mov
addr16
push
sbb
mov
test
jg
push
icebp
sub
jnp
push
adc
push
cmc
ss
or
push
js
rcrl
lock
leave
xor
loope
decb
push
fcom
lock
cmpsb
mov
push
outsb
mov
insb
sbb
cmp
and
sub
lret
jno
pop
dec
and
movsb
jmp
cwtl
js
and
dec
inc
pop
into
ss
jae
fiadds
es
xchg
add
cmp
cli
aaa
xor
cmpsl
movsb
inc
mov
mov
pusha
wbinvd
js
jg
push
cmpsb
daa
fs
cmpsl
add
orl
xchg
bound
imul
jmp
or
inc
inc
cmpsb
sub
loop
aad
mov
mov
das
or
or
std
or
xchg
sub
in
jmp
movzwl
lcall
std
and
add
mov
stc
sahf
lcall
cwtl
xor
data16
aad
insb
hlt
aad
lea
mov
call
stc
fs
or
or
ljmp
and
out
pop
daa
pop
mov
jne
stos
subb
out
dec
sti
sbb
call
mov
pop
es
adc
ja
cmp
push
out
sub
xchg
jae
notl
mov
mov
add
push
xchg
push
in
roll
push
sbb
jmp
xchg
inc
icebp
lods
incl
mov
es
cmc
fdivs
sub
out
mov
adc
cmp
xchg
sbb
div
or
xchg
mov
cmp
mov
jnp
aam
stc
sti
dec
out
xchg
test
cmp
sub
ss
xchg
sarl
mov
fadds
lods
dec
jl
mov
mov
mov
mov
lcall
imul
popf
and
loope
jbe
in
jp
fldcw
aaa
mov
mov
dec
dec
sub
repnz
or
out
int3
add
dec
sbb
fnstcw
push
lcall
movaps
notl
inc
je
mov
in
jnp
mov
sub
outsl
dec
dec
dec
adc
in
lret
lea
cli
andl
or
dec
push
icebp
lahf
mov
jge
lods
fmuls
push
sub
push
dec
cltd
mov
xchg
and
out
ja
jno
data16
test
or
sbb
lcall
test
roll
or
add
mov
pusha
sti
jmp
add
std
xor
sbb
jg
lock
enter
loop
push
inc
sbb
mov
adc
out
cs
push
frstor
sub
dec
sbb
sbb
cmp
fimuls
imul
and
xchg
mov
push
mov
hlt
jle
jle
test
ja
ret
scas
or
out
insl
movsl
mov
inc
push
xlat
repz
jnp
ss
pop
loope
loopne
or
cld
push
pushl
cwtl
jle
jp
xchg
sbb
jmp
jo
adc
stos
xor
adc
xor
inc
stos
jmp
mov
mov
sbb
mov
sub
sahf
cmpsl
jp
and
lahf
bound
int3
mov
or
pop
mov
cmpsb
inc
cld
pop
fistl
pop
inc
mov
test
mov
fldl
jo,pn
shl
lods
lahf
popf
cmp
adc
out
pop
out
and
or
fwait
es
arpl
lods
out
lcall
jnp
jmp
sub
add
mov
adc
rorb
push
ss
mov
scas
outsb
cmc
inc
lock
sub
out
push
jmp
sbb
cmp
sbb
mov
push
pushf
jae
repz
out
daa
adc
inc
jns
xchg
adc
in
pusha
jl
add
sub
add
xchg
aas
jge
mov
sbb
dec
push
inc
xor
push
insb
aaa
test
lret
inc
adcl
rolb
dec
dec
jg,pn
mov
repnz
inc
sbb
cmc
mov
push
mov
movsb
mov
cmpsb
gs
xor
orb
jb
xor
mov
les
je
icebp
inc
ljmp
add
pop
sub
xor
inc
popf
cmp
xlat
bnd
add
movl
bound
aam
ret
dec
mov
lret
fcompl
mov
push
es
pop
sub
cmp
inc
mov
jg
mov
ret
loopne
mov
insb
and
mov
sbb
fstpt
dec
ja
scas
aam
iret
scas
add
or
aaa
int
cwtl
aas
ja
adc
mov
stos
fsubs
dec
mov
imul
xchg
fisttpll
push
xchg
in
movsb
jae
repnz
jge
push
je
negl
dec
js
or
movsb
jmp
mov
ljmp
sub
out
lods
arpl
push
cli
push
aam
mov
rcrb
and
jle
mov
lock
sub
adc
jg
dec
mov
xor
dec
lret
cltd
xchg
mov
mov
in
cmp
js
pop
xor
faddl
jl
mov
je
loope
mov
ss
or
pop
mov
mov
mov
mov
clc
pop
in
adc
dec
imull
out
push
cmp
mov
xor
mov
sahf
mov
or
push
out
leave
loopne,pn
loop
push
in
pop
subb
xorl
fs
push
repz
in
pusha
and
xor
or
stos
jns
enter
pop
push
xor
dec
jl
das
arpl
cmp
pushf
mov
lods
arpl
xchg
cmp
orl
lret
xlat
cld
in
mov
pop
push
add
jb
inc
jmp
mov
shr
jno
adc
out
cmpsl
lods
and
pop
adc
nop
clc
rcrb
out
cmc
jo
in
pop
dec
sbb
push
test
imul
cmp
sbb
stc
cmp
mov
stos
or
sub
mov
sbb
dec
aad
imul
mov
call
test
daa
je
lcall
loopne
jns
sub
test
ljmp
lea
movsl
jmp
add
inc
rorl
idiv
imul
sahf
sub
cmpsl
mov
adc
jns
cmpl
sub
xor
out
and
popf
push
xor
mov
movsb
or
inc
je
sub
sbb
mov
test
push
divl
repnz
jne
jo
mov
sahf
jecxz
mov
fmul
aas
outsl
cmp
test
pcmpeqd
sbb
xchg
push
ds
pop
in
arpl
pop
imul
and
push
inc
xchg
cwtl
loopne
jne
jne
inc
dec
mov
repz
cmp
in
imul
js
ret
sub
pop
daa
and
jmp
imul
mov
xchg
push
iret
cld
mov
mov
rclb
sbb
std
data16
ret
add
out
testb
lahf
jb
popf
lods
and
mov
andb
arpl
add
mov
sub
cmp
lock
cmp
jno
outsl
jg
dec
jmp
in
mov
push
ljmp
mov
in
jno
jnp
ret
loopne
mov
rorb
and
jmp
and
out
add
dec
cld
stc
fwait
int
hlt
aaa
cmp
adc
xchg
sbb
inc
xor
lret
fiaddl
adc
pop
cs
cmp
mov
add
dec
fists
out
mov
jmp
cmpsb
jo
sbbl
gs
xlat
jg
cmp
jbe
pop
jmp
hlt
and
fdivr
stos
rcrl
movsb
inc
and
cmp
or
mov
ja
mov
inc
push
lods
xchg
test
hlt
push
lret
mov
pop
pop
xor
cmpsl
sub
ja
test
adc
es
add
and
mov
aad
iret
sbb
lods
neg
daa
xchg
dec
pop
pop
jecxz
mov
xor
push
scas
dec
push
jge
pushf
imul
popf
in
daa
mov
popf
or
sub
jge
xlat
and
push
mov
pushf
mov
mov
mov
enter
daa
out
xorl
cmp
movsl
adc
push
into
lahf
mov
push
xlat
inc
jge
lret
xchg
pop
and
fsubrs
cs
outsl
fmul
cmp
loope
mov
cmp
jbe
movsl
lds
pop
push
lret
mov
push
ret
rclb
sbb
inc
push
outsl
sbb
es
mov
adc
test
adc
mov
test
mov
es
xchg
ss
pop
test
pusha
daa
rolb
in
arpl
dec
sti
ret
mov
aam
jp
jb
pop
xchg
pop
push
das
lods
cmpsl
inc
add
stos
mov
fyl2x
fsubl
lret
jle
pop
xchg
shlb
push
lahf
mov
je
out
pop
shrl
xchg
dec
lods
mov
fstpt
sbb
sti
xor
repz
cld
adc
cmpb
mov
fadd
imul
mov
push
mov
iret
imulb
dec
push
or
inc
add
cmp
ficoml
pop
cmpsl
pop
mov
fiadds
mov
pop
ffreep
mov
fwait
aad
jnp
mov
ja
sub
push
pop
lock
sbb
inc
inc
sbb
push
aad
dec
pop
or
pusha
adc
and
push
movsb
popf
push
push
es
rorl
or
into
push
lods
gs
out
fs
dec
push
dec
ds
xchg
cmp
mov
fcmovne
scas
cmc
lock
cmp
cmovnp
fistl
loop
jecxz
mov
sbb
mulb
stos
lock
pushf
xchg
in
and
ljmp
xor
std
jge
mov
lods
sub
mov
xchg
int
out
dec
adc
fidivrl
mov
adc
in
sahf
cmc
rolb
stos
adc
fisubs
es
imul
cltd
negl
sbb
add
test
aas
mov
out
test
inc
xchg
cld
lock
xchg
mov
mov
pop
in
push
dec
jae
call
cmc
push
test
mov
xor
xor
stc
pop
inc
scas
jne
fdiv
jmp
or
adc
into
stos
sti
inc
jle
or
push
pusha
inc
and
pusha
or
xchg
adc
jmp
stc
pop
outsb
sub
inc
cs
sarb
int
inc
push
jl
jnp
mov
jne
lahf
lahf
lcall
or
shll
jle
sbb
inc
mov
and
outsl
stc
aad
sti
pop
mov
and
or
inc
sbb
xlat
cmp
cmc
xchg
lock
adc
jae,pt
mov
cmp
arpl
into
push
xor
pop
or
inc
pop
lods
or
and
pop
dec
pop
mov
pop
and
add
add
and
dec
add
jbe
lret
or
push
iret
push
scas
mov
sbb
jmp
mov
addr16
mov
and
sahf
jmp
std
lret
adc
mov
arpl
dec
cmp
jge
scas
scas
out
lods
aaa
stos
cmc
mov
popf
xchg
mov
dec
pop
adc
fistps
daa
inc
mov
out
mov
stc
int3
hlt
push
ljmp
call
shl
jcxz
jl
mov
mov
out
roll
insb
pop
insl
cmpb
pop
ds
clc
sbb
sbb
aas
test
stc
mov
and
pushl
aas
cmp
std
mov
jl
insb
pop
jb
push
je
das
cld
lcall
inc
add
mov
mov
cmpsl
test
inc
in
clc
and
scas
cltd
mov
inc
mov
xchg
out
std
mov
sbb
ficomps
sti
clc
adc
call
ret
scas
dec
push
sahf
leave
rolb
outsb
sbb
xor
movsl
mov
sub
pop
sbb
xor
dec
sbb
je
cmp
sub
bound
mov
jmp
fs
cmpb
mov
pushf
nop
lahf
std
jge
rorl
inc
out
mov
movsb
pushf
in
in
sbbl
sub
fstpl
dec
scas
jl
push
lcall
stc
fiaddl
cmp
dec
bound
mov
ljmp
ret
xchg
cmpb
mov
pop
popf
or
xor
jg
jns
jge
ljmp
enter
insb
mov
mov
ret
cmp
in
cmp
scas
lods
iret
mov
test
push
push
cmp
sub
adc
out
test
mov
inc
subb
push
mov
cmp
dec
jnp
pop
sbb
pop
sahf
in
mov
jbe
push
sbb
fs
xchg
ss
jbe
mov
adc
mov
test
lcall
mov
leave
fstpl
aaa
mov
dec
xorl
js
pop
popf
lods
cld
out
mov
xor
mov
inc
mov
ljmp
sbb
dec
fs
sti
push
call
and
dec
pusha
loopne
aas
cmp
lret
jne
and
adc
adc
mov
ljmp
pushf
mov
adc
imul
orl
jge
pusha
shl
and
xorb
bound
cmp
ds
sub
sarb
push
mov
or
mov
std
mov
add
stos
rsm
jne
call
cmp
mov
fs
mov
and
into
jl
sub
rorb
loope
sahf
test
add
ss
jecxz
mov
das
std
aas
stc
fdivl
sub
out
cmp
in
aam
lret
add
ret
mov
dec
jno
pop
outsb
imul
sbb
outsb
lret
inc
aas
cmp
daa
cmp
js
and
lret
xor
lods
out
xor
insb
jle
push
pop
aam
dec
enter
loopne
jae
mov
flds
add
scas
sbb
insb
bound
sahf
in
dec
stos
sub
scas
test
push
mov
cld
xchg
cmpsb
mov
lret
pop
dec
push
lock
add
pusha
lea
jo
testl
cmpsl
dec
into
push
dec
push
jg
aas
inc
je
inc
and
dec
mov
mov
bound
cmpsb
js
lds
aad
cmpsl
aas
scas
aad
test
lea
add
cmpsl
jp
push
push
jno
shl
mov
push
rol
and
push
xchg
pop
loopne
push
cltd
mov
jbe
pusha
outsb
test
repz
add
cmp
movsl
dec
sbb
mov
mov
adc
jns
in
mov
flds
push
fs
cmp
ljmp
insb
adc
pop
jle
fmuls
sub
and
scas
jg
cmp
in
add
ret
push
lods
push
mov
sbb
cmpsl
cmc
pop
sti
ret
loopne
sbb
lods
lcall
mov
repz
cld
icebp
loopne
lock
pop
ffree
nop
insb
sti
test
add
outsl
ja
inc
xchg
stc
ja
loopne
sbb
sarb
enter
arpl
lock
notb
push
cmp
je
mov
inc
add
sahf
cs
or
iret
pop
inc
mov
mov
adc
mov
cmp
fcompp
pusha
out
mov
xor
add
pop
or
push
scas
dec
inc
cmp
pop
cmp
jae
clc
push
stos
mov
ja
adc
rorb
and
jg
cmp
scas
jns
outsl
fcomps
push
pop
leave
inc
add
aam
clc
fimull
mov
mov
jmp
aam
adc
mov
aaa
faddl
test
shrl
jmp
mov
jg
scas
sbb
push
cmpsb
in
fsubrs
out
das
ds
xor
jno
sbb
pushf
lahf
inc
pop
lret
ficoms
mov
outsl
xchg
sub
mov
inc
mov
dec
loop
xchg
xchg
aas
xlat
loope
shll
sub
pushl
sub
xchg
sbb
std
push
out
fs
data16
daa
mov
jne
mov
aad
cmp
insb
sub
pop
mov
sarl
cmpsb
dec
jmp
clc
mov
push
bnd
xchg
out
pop
or
nop
xchg
lcall
call
adc
xrelease
outsb
sub
movsl
lret
sub
and
jmp
or
gs
xchg
fwait
aas
and
mov
mov
dec
inc
jno
lods
cmp
xchg
push
cs
sahf
rorb
sbb
testl
pop
cli
mov
sar
mov
les
mov
in
mov
xor
jecxz
test
and
adc
sbb
imul
neg
cli
add
mov
jns
test
push
pop
xlat
and
sbb
xchg
hlt
lods
outsb
cmp
and
nop
mov
jbe
cmp
xchg
mov
sub
pop
aas
sbb
inc
int
mov
jae
cmc
lods
and
out
imul
jmp
daa
xor
sahf
movsl
les
lahf
adc
push
pop
dec
mov
dec
dec
push
mov
and
ja
sahf
cs
or
push
push
jo
test
scas
cmp
enter
jp
mov
enter
into
and
iret
arpl
loope
mov
or
lret
ret
rorl
push
xchg
jl
gs
cmp
cmp
cmp
pop
dec
dec
dec
add
les
and
add
in
loopne
push
aam
leave
mov
jmp
mov
gs
pop
jo
fisubrs
outsl
lods
js
inc
cltd
xor
mov
jg
mov
inc
fwait
sub
push
add
dec
int3
insb
scas
addr16
xchg
or
lea
pop
sub
mov
hlt
test
fcmovne
aas
sbb
test
das
inc
bound
sbb
cmp
cmp
jne
xchg
outsl
aaa
out
jecxz
mov
mov
adc
outsl
sub
cld
inc
or
jbe
std
dec
mov
popf
call
xchg
push
xor
mov
pop
mov
add
ds
and
std
jmp
or
inc
xchg
icebp
mov
out
pop
mov
inc
sbb
movsl
imul
jno
mov
loope
in
les
out
xchg
add
ds
jnp
gs
cltd
in
inc
or
test
or
pop
mov
mov
pop
pushf
scas
clc
jecxz
mov
mov
xchg
sub
rclb
push
mov
sub
das
xlat
push
jo
sahf
xchg
mov
inc
aas
inc
and
mov
js
jmp
daa
test
push
and
xor
pop
dec
lock
cs
push
out
or
insb
in
push
cmpsl
sbb
ja
push
adc
xchg
sahf
test
jg
dec
mov
sahf
aad
ja
push
cltd
pusha
push
daa
outsb
out
push
test
sbb
dec
shrl
leave
sub
adc
xor
mov
cld
arpl
std
mov
push
sbb
dec
add
loope
out
fsubrs
adc
xchg
mov
dec
cltd
aas
push
fdivl
push
xchg
enter
movsb
add
mov
add
xchg
or
pop
jo
or
sbbb
outsl
jo
adc
add
cltd
add
fdivs
adcb
jb
outsl
movsl
lods
mov
pop
hlt
xchg
jb
inc
nop
stc
push
data16
jmp
sub
rolb
aad
scas
aad
mov
cmp
mov
mov
sub
sarb
add
mov
mov
mov
cmp
inc
adc
jl
leave
jo
lcall
adc
stc
lcall
jecxz
addr16
sub
push
test
cmpb
jg
cmp
sahf
cmp
adc
outsb
pop
mov
mov
lret
iret
es
movsb
mov
push
mov
loope
pop
or
inc
je
mov
sbb
inc
jno
scas
lods
add
ret
sbb
push
fcmovb
inc
xchg
rorb
out
xchg
add
aam
xchg
xchg
mov
popf
xor
lcall
xor
inc
push
jb
push
je
cltd
mov
add
into
push
lret
xchg
or
mov
aad
pop
rol
stos
mov
inc
mov
insl
sarl
push
in
int
outsl
rcrl
or
into
inc
mov
movsb
jno
out
pop
insb
inc
add
xor
or
push
mov
out
addr16
xchg
mov
mov
adc
lcall
rcll
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
mov
push
mov
push
call
movl
jmp
movb
movb
movb
pushl
pop
mov
mov
push
call
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
mov
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
push
push
push
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
mov
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
push
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
push
call
lea
push
call
call
cmpw
je
push
call
push
call
add
jmp
pushl
xor
out
aas
neg
mov
int
mul
leave
aas
negb
test
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
dec
loopew
idivl
cmp
jno
mov
fs
inc
test
sbb
arpl
lods
pop
test
xlat
mov
movsb
push
xchg
mov
ror
xor
out
aas
neg
faddl
mov
pop
xor
add
outsl
push
jne
addr16
loopne
mov
push
iret
in
mov
mulb
mov
mov
cld
xchg
mov
int3
cmp
and
jb
hlt
gs
cs
jb
dec
dec
and
xor
in
xchg
pop
rolb
or
scas
test
cld
movsl
xor
xor
pop
cmp
out
aas
neg
inc
js
dec
test
rcll
or
out
aas
cmc
push
or
out
cmp
fadds
pop
or
int
div
leave
aas
neg
inc
js
or
out
aas
hlt
fadds
pop
or
int
mul
int3
aas
neg
inc
js
or
out
aas
mulb
jge
maskmovq
mov
out
aas
test
js
or
out
aas
neg
inc
push
xor
out
aas
neg
rcll
or
out
xor
pop
js
pop
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
and
leave
aas
idiv
dec
js
sbb
jecxz
aas
repnz
push
dec
lds
aas
neg
gs
in
fnstcw
aas
neg
adc
xor
mov
aas
mul
inc
js
or
out
aas
neg
inc
pop
pop
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
neg
inc
js
or
out
aas
mov
dec
js
or
int
in
mov
cmpsl
and
push
hlt
jge
nop
test
inc
fistpl
insl
dec
stc
fdivrs
mov
out
cwtl
jle
adc
repnz
lret
inc
xchg
fs
stos
adc
popa
adc
xor
rol
mov
pop
lods
ds
cmpsl
fcom
dec
jmp
jmp
rcl
xchg
ljmp
mov
mov
mov
adc
adc
fsubrl
sbb
loopne
in
es
and
adc
cmpsb
dec
cld
mov
and
or
roll
cld
dec
pop
adc
jl
sbb
xor
add
and
dec
cmpsl
int3
inc
mov
frstor
sbb
call
lret
stc
add
test
out
pop
add
fldenv
fwait
test
adc
xchg
mov
inc
add
jnp
outsb
movsb
jbe
ja
push
cmpsb
xchg
cmp
es
add
aad
jns
jg
out
pop
sti
jbe
scas
fdivl
adc
mov
inc
pop
fsubp
pop
or
mov
push
test
jp
and
repnz
add
xchg
pop
push
jmp
call
xchg
or
insb
lret
popa
and
dec
mov
pop
call
test
dec
fcmovb
mov
ret
movsl
lret
push
mov
test
xor
sub
lahf
push
jb
movsl
pop
das
orb
mov
ss
mov
aas
ljmp
push
cltd
adc
jae
push
inc
xchg
hlt
inc
lea
or
out
xor
mov
sub
mov
cmp
lock
inc
shlb
cmp
scas
push
inc
cmp
push
mov
mov
cltd
call
sub
lods
das
call
insl
lds
pop
push
dec
les
xchg
inc
and
add
fistpll
push
orb
inc
shrb
lcall
ja
mov
pusha
stc
adc
jle
jb
imul
icebp
cmp
mov
sub
xor
pop
inc
hlt
cmpsb
arpl
hlt
pop
inc
cmp
test
sub
add
sbb
cltd
xchg
pushf
push
gs
cmc
cmpsb
fsub
sub
and
and
aad
xor
sub
outsb
cltd
cmp
movsl
pop
add
and
call
push
xor
pop
xlat
popf
shrl
aam
arpl
and
int3
fsubl
dec
xor
dec
out
cmp
xchg
push
es
lds
stos
aad
ljmp
js
insb
out
cmp
fsubl
call
out
ss
add
mov
lahf
mov
fstps
repnz
adc
jmp
andb
jns
jl
fcmovbe
cmc
frstor
cmp
push
scas
jnp
cli
and
mov
pop
jg
popa
mov
dec
cmp
dec
ja
fdivr
mov
aam
adc
jmp
jle
addb
push
adc
clc
adc
cmp
pop
cwtl
int3
movsb
insb
pop
out
call
les
lret
aad
push
inc
jmp
xchg
mov
jecxz
jae
jge
loopne
adc
cmp
mov
mov
adc
mov
xlat
and
pop
lock
lds
mov
outsl
push
lea
leave
ficoml
mov
or
das
xchg
jle
int
pop
sub
and
cmp
scas
inc
dec
sbb
enter
sarb
rorb
nop
in
iret
push
add
stos
mov
test
mov
jmp
frstor
movsb
jbe
orl
mov
push
mov
push
push
xchg
pop
mov
fwait
mov
add
aaa
cmpsl
jae
push
mov
dec
push
sub
cmp
pop
sbb
mov
push
mov
icebp
dec
xchg
add
mov
jg
mov
mov
ffree
rcrb
and
jnp
add
mov
orb
fiadds
and
jg
daa
xor
cli
lds
lret
aas
scas
pop
ret
outsl
cli
movsb
lods
loop
mov
arpl
mov
dec
nop
and
aad
mov
dec
ljmp
push
ss
scas
cli
mov
repz
dec
sub
mov
call
xchg
push
inc
fsubrs
jmp
inc
int3
out
enter
push
dec
loope
adc
ficomps
adc
inc
xchg
out
mov
cwtl
shll
jno
neg
mov
ret
outsl
out
rorl
xor
adc
test
in
xchg
mov
mov
fsubs
jge
sahf
mov
scas
stos
aas
push
mov
test
pop
mov
decb
aaa
lret
mov
aad
pavgb
or
fisttpll
jno
fdivr
sub
lock
mov
fs
daa
call
lds
test
je
fwait
jns
inc
cmpsb
daa
sub
cwtl
scas
xchg
ja
mov
jbe
mov
test
xor
mov
shl
or
fldcw
mov
sahf
aad
push
loope
push
aam
push
shlb
sub
jne
pop
jp
das
arpl
inc
pop
lds
xchg
jecxz
enter
pop
fxch
xchg
push
and
repz
xchg
mov
test
add
xor
lods
imul
adc
sub
data16
cmp
mov
mov
xchg
add
movsl
inc
xor
icebp
dec
adc
jecxz
enter
mov
jnp
adc
mov
inc
arpl
mov
xchg
cmp
int3
cmp
mov
fldenv
xor
jg
jb
and
ret
jo
bound
cmp
mov
lcall
and
xchg
sub
push
gs
aad
aaa
mov
sbb
in
xchg
mov
adc
xchg
sbbl
mov
pop
call
sbb
mov
fldt
fwait
push
icebp
dec
fisttpl
adc
imul
add
mov
jno
cwtl
int3
neg
push
adc
cmpsb
jmp
int3
push
or
jns
push
xchg
mov
leave
das
lret
cltd
mov
or
xchg
das
lret
data16
or
xchg
lods
repnz
xor
iret
shl
out
mov
mov
enter
pop
push
test
in
movsl
sarb
test
lods
fisubl
push
jecxz
mov
lret
and
pop
jl
jno
xor
clc
mov
sub
mov
and
movsl
inc
pop
jo
adc
insb
nop
and
push
call
mov
cmp
mov
mov
jg
cmpsb
cmp
pop
jb
test
xor
aam
jecxz
call
int3
push
adc
dec
fs
mov
subb
nop
loop
or
icebp
inc
stc
ja
repz
sahf
hlt
popl
dec
je
data16
or
jns
mov
fmulp
lods
jle
pop
mov
and
cmpsb
repz
fsubl
addl
jns
xlat
or
inc
imul
xchg
push
cmp
ror
mov
pop
adc
jb
sbb
mov
loop
or
out
xor
orb
fdivs
inc
ret
adc
ffreep
imul
and
lods
dec
test
sub
jne
add
insb
xor
or
imul
out
or
dec
dec
enter
dec
ss
int
je
sete
pop
jge
push
jo
repz
iret
es
jb
enter
pop
mov
adc
lcall
mov
and
incl
arpl
out
in
stos
addr16
add
aaa
jecxz
shll
cmp
inc
inc
cmp
scas
test
cmp
test
repnz
cld
stos
jno
std
std
sbb
jno
in
cmc
in
aad
and
adc
rorl
pop
leave
jle
dec
lret
push
jno
in
cltd
nop
sbb
sbb
dec
aaa
arpl
arpl
lds
mov
mov
mov
xlat
data16
pop
mov
mov
fidivl
lea
cld
dec
incl
scas
cs
push
mov
addr16
pop
rol
loop
or
push
lods
pop
aaa
out
call
jmp
dec
jecxz
mov
xlat
ds
scas
fistps
data16
ds
push
das
scas
or
popf
in
mov
xor
out
fldlg2
cmp
pushf
pop
repz
out
loopne
jnp
sub
out
or
and
mov
mov
inc
jmp
inc
and
mov
fists
enter
testb
in
sub
cmp
or
test
test
jmp
jb
repz
mov
setp
mov
sbb
push
in
daa
inc
mov
and
fidivrs
lret
adc
cmp
decb
sbb
addr16
push
dec
sub
dec
shl
ljmp
ror
lods
inc
in
les
mov
iret
sub
xchg
call
insb
fwait
add
xor
xchg
adc
inc
incl
nop
lds
push
cli
xor
sbb
int3
mov
test
stos
outsb
mov
xchg
aas
mov
loopne
jbe
adc
xchg
mov
adc
and
rorb
xchg
aaa
mov
and
adc
push
pop
mov
push
jg
inc
mov
ja
idiv
push
or
mov
or
jg
movsl
fnsave
jle
xchg
stc
mov
adc
lds
out
xchg
out
adc
int3
mov
fwait
ret
mov
das
inc
es
lds
in
scas
mov
dec
push
shlb
fists
testl
add
jo
jb
loope
roll
int
jb
mov
scas
negl
insb
lods
fists
out
pop
inc
outsb
inc
lods
pop
push
sub
outsl
mov
inc
je
xchg
dec
inc
fs
cmpb
mov
dec
sarl
mov
xor
mov
sub
bound
mov
or
mov
fucomip
mov
mov
fsubs
push
push
jbe
sub
xor
pushf
mov
and
mov
test
or
in
lret
cmp
js
sbb
add
je
pop
jo
jp
or
in
inc
clc
ret
js
xlat
dec
jbe
xor
ljmp
call
ret
std
lea
xchg
rorl
cmc
scas
xchg
push
je
or
paddsw
and
dec
jl
xlat
adc
scas
insb
sub
push
rcr
sahf
les
shll
lret
icebp
or
ds
adc
insl
addr16
rolb
adc
inc
addb
push
cmp
ret
dec
adc
insb
loope
jecxz
fsubr
ret
inc
sub
mov
or
pop
in
sbb
lods
in
or
xchg
ja
test
xchg
mov
out
das
sbb
push
scas
pop
imul
mov
xchg
mov
ds
cmp
fcomi
and
xor
xchg
cmp
push
or
sti
cmp
inc
push
mov
and
in
in
xchg
jl
out
push
adc
addl
adc
and
aaa
cmp
cmpsl
lds
mov
adc
and
xchg
push
rcr
xchg
das
push
ror
fidivl
adc
push
int3
xchg
xorl
push
call
push
push
call
xor
add
ret
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
