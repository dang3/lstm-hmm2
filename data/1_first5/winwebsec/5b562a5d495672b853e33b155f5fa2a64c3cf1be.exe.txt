pop
adc
aas
xchg
fisubrs
adc
adc
fcoml
test
cmpsb
jo
inc
nop
fucom
mul
out
jb
mov
pop
mov
mov
pop
mov
sub
andb
dec
lods
mov
mov
dec
fiaddl
lret
in
fs
jp
push
mov
pop
in
xchg
stc
test
pop
and
push
mov
cld
lahf
sarb
push
mov
iret
dec
mov
jb
jb
xlat
cmp
adc
push
dec
ret
int3
popa
in
loope
loope
lahf
mov
sbb
sub
rorb
mov
dec
inc
or
sbb
jl
xor
inc
sub
or
cmp
jmp
lret
ljmp
test
outsb
fbstp
scas
mov
push
pop
loop
loopne
mov
inc
lods
aad
stos
mov
push
clc
pop
icebp
imul
test
add
cmp
cli
in
imul
lea
xor
cltd
adc
movlps
cld
cs
sahf
outsb
mov
neg
imul
xchg
inc
mov
std
push
bound
or
lods
push
jbe
dec
xchg
dec
sub
hlt
ja
push
xchg
push
ljmp
out
into
lds
imul
ret
popa
inc
inc
add
xor
jp
mov
movsb
lret
inc
or
adc
into
jl
out
mov
xor
jmp
mov
and
scas
repnz
cltd
jns
sbb
mov
mov
lea
dec
adcl
jg
sub
pop
inc
pop
sub
test
sarb
cld
ret
scas
and
xor
sbb
std
sub
mov
cli
xor
sbb
xor
push
jb
mov
inc
add
or
sbb
jl
lahf
aad
push
adc
push
xchg
jbe
dec
mov
mov
mov
idiv
pop
dec
jbe
mov
add
xor
cmp
mov
xchg
cmpl
cmp
inc
sbb
pop
test
rorb
cmp
xor
adc
mov
hlt
jns
xor
out
in
or
dec
jg
xchg
int
inc
xor
fcoml
outsl
shll
and
fisubl
fcomp
sahf
repnz
or
cmpsb
xchg
push
jl
push
repnz
imul
pop
mov
jmp
pop
cmpsb
push
sub
pop
cmp
sti
mov
push
jmp
sbb
xchg
leave
outsb
mov
pop
pop
xor
pop
stos
loop
ret
pop
fmull
ja
add
sbb
xor
call
push
in
clc
mov
inc
or
pop
add
incl
sub
xchg
push
jnp
out
inc
adc
pop
movsl
pop
stc
jne
and
jbe
push
cmp
stc
xchg
mov
push
push
movsb
push
hlt
pop
in
fwait
adc
push
or
repnz
adc
fnsave
pop
mov
in
add
dec
xchg
fimull
mov
cld
pop
cwtl
data16
jmp
ret
out
cmp
jb
jg
leave
cmp
ja
insl
shrb
popa
icebp
ret
fcmovbe
inc
sbb
jbe
push
fwait
dec
cmp
loope
rclb
push
popf
push
dec
cmp
lret
dec
mov
in
aam
movsl
push
fcmovne
into
fisttps
loop
pop
aad
pop
test
leave
js
nop
das
loope
mov
imul
push
add
mov
mov
iret
dec
out
in
mov
xchg
jnp
cli
sub
mov
mov
sahf
sub
sbb
sub
adc
in
push
cwtl
push
adc
ss
mov
dec
cmc
je
jae
sub
les
inc
inc
sbb
cmc
adc
fsub
xchg
sub
inc
adc
shl
divb
pop
insb
pop
lock
cmp
shll
aam
xor
mov
in
shll
fwait
insl
scas
mov
adc
cmpl
iret
mov
pop
outsb
push
popa
sbb
int3
imul
inc
inc
jg
and
stc
xchg
xor
popa
sahf
sbb
daa
xchg
lcall
data16
fbstp
push
call
push
dec
and
sarb
or
aaa
or
out
repz
jp
and
xor
gs
xchg
push
jge
andl
cmp
mov
stc
dec
push
scas
inc
mov
ret
jno
movl
push
mov
or
add
inc
and
xchg
xor
jge
and
lds
cmp
and
mov
es
shr
rorb
xchg
xor
pop
sbb
sub
adc
jecxz
dec
ss
mov
mov
repnz
xor
mov
xor
hlt
dec
mov
add
jmp
mov
outsb
sub
jmp
testb
sub
mov
inc
mov
je
cmc
cmp
insb
sub
ljmp
sub
inc
dec
mull
repz
mov
cmpsl
add
insb
repz
sub
cmpsb
ljmp
or
out
add
inc
fimull
and
test
aaa
lret
mov
ja
lods
popa
add
loopne
enter
addr16
add
xor
popa
repnz
inc
ds
int
ret
nop
mov
or
xchg
pop
push
jmp
xor
adcl
jb
gs
gs
insl
out
jmp
jmp
push
lcall
js
aam
pop
clc
ror
hlt
push
test
push
rol
sbb
xor
shrl
imul
dec
addb
xlat
fwait
push
std
in
cwtl
xor
push
shrb
adc
lds
popa
shrb
sbb
mov
sub
stc
jno
jp
pop
stc
mov
jne
push
jne
xlat
mov
adc
jmp
cli
loope
add
je
pop
rcrl
lods
in
cmp
cmp
jne
mov
mov
lcall
mov
in
sub
daa
sbb
out
mov
adc
stos
arpl
ja
ja
xchg
rclb
adcb
movsl
jbe
push
js
negb
outsl
aam
xchg
and
cmp
push
outsl
dec
rcll
xchg
mov
popf
xor
jb
rcrb
or
and
push
cmpsb
es
xchg
aas
ja,pt
pop
push
pop
jmp
sub
push
xchg
in
ja
add
repnz
jl
hlt
cli
sbb
add
cmpsb
out
jg
mov
mov
scas
push
nopl
lods
es
pop
inc
xchg
sarb
les
sbb
jge
hlt
lock
mov
test
mov
stos
jge
or
cmp
mov
cwtl
mov
mov
aas
jg
sub
rolb
aam
or
xchg
sub
rolb
popf
sbb
cmp
lods
push
out
jb
arpl
in
xor
rcll
xchg
cmp
mov
loope
adc
jp
in
sti
lcall
and
outsb
jne
aas
mov
xchg
adc
ljmp
out
aam
and
inc
and
dec
mov
mov
pusha
or
inc
xchg
ret
ljmp
mov
je
out
or
xchg
jmp
lds
pop
ja
and
mov
xor
add
add
sbb
or
lcall
mov
add
mov
loope
nop
mov
data16
pop
adc
js,pn
inc
mov
jge
push
sub
xor
or
sbb
inc
push
mov
mov
imul
in
add
cmp
lcall
jne
push
push
inc
mov
loop
in
and
in
xchg
cmpl
and
je
out
pop
inc
pop
insl
in
hlt
fnstenv
jnp
mov
loope
sbb
dec
pop
mov
jg
and
fwait
xor
xchg
lods
pop
das
dec
sbb
in
mov
pushf
add
lock
mov
xchg
push
or
sub
cmp
dec
fsubl
sbb
movsb
loop
shl
or
ror
sahf
ror
mov
push
insb
outsb
sub
lods
xchg
and
add
sbb
les
idivb
push
outsb
rcrb
lcall
inc
sub
jg
jo
and
rcll
test
or
outsb
adc
xchg
jno
enter
lcall
inc
xchg
push
ljmp
mov
icebp
pop
aam
jmp
mov
cld
mov
test
push
mov
adc
jne
xorb
push
cmp
aam
push
push
inc
mov
iret
pop
imul
orb
dec
and
mov
xchg
dec
mov
std
dec
push
push
pop
jne
roll
push
pushf
xchg
or
adc
sahf
fcoms
jns
add
bound
aad
mov
adc
cli
mov
stos
lret
jp
call
adc
es
lock
in
sub
mov
pushf
xor
push
lahf
mov
arpl
arpl
loope
lcall
negl
and
jge
stc
add
and
stos
shlb
mov
xchg
ljmp
in
dec
nop
lahf
leave
repz
aad
mov
inc
cmp
pusha
push
jbe
loope
repz
adc
add
jmp
mov
cwtl
insl
inc
ret
sarb
mov
mov
mov
jg
fldcw
dec
daa
dec
outsl
pop
ds
arpl
mov
inc
mov
push
xchg
xor
xchg
psadbw
mov
jp
cmp
cld
cmp
mov
adcl
fisubl
lahf
xor
imul
mov
inc
lret
xchg
add
sub
int3
clc
outsb
push
jg
insb
lret
lods
mov
mov
and
xchg
push
cmp
xor
in
test
shrb
clc
leave
pop
or
pop
mov
pop
pop
pop
aad
out
ljmp
adc
and
sub
xchg
test
fistpl
dec
ret
sbb
inc
sbb
jg
lahf
cltd
pop
mov
jbe
pushf
and
fstpt
out
stc
push
imul
mov
clc
jne
mov
mov
cmp
adc
rorl
xchg
in
fwait
dec
push
dec
or
jns
test
in
pop
jg
fsubrl
mov
fidivs
pop
dec
mov
mov
fmuls
ja
cmp
mov
xchg
mov
cmpsl
test
bound
rcll
or
xchg
mov
sub
movsl
aas
loopne
pop
jb
sahf
and
lods
cld
and
add
mov
mov
jns
jae
cmpsb
cltd
popf
add
cmp
dec
jge
sbb
push
pop
arpl
cmpsl
jns
icebp
inc
data16
adc
xchg
jg
ret
test
mov
roll
call
test
push
mov
stc
movsl
in
dec
mov
jo
aas
je
out
je
ftst
mov
sbb
push
pop
pushf
andb
or
dec
pop
cmp
xor
push
add
jl
mov
outsl
jecxz
insb
push
idivl
fwait
inc
and
out
sahf
mov
cltd
mov
jle
cs
push
into
mov
addb
in
adc
inc
xor
mov
and
mov
xrelease
lods
rcr
sub
cmp
xchg
jecxz
inc
lds
call
cmpsb
mov
cmp
push
movsb
mov
dec
pop
stc
lods
lret
sub
jb
lcall
idivb
aaa
rep
popa
aas
jmp
xor
outsb
out
cs
outsb
or
adc
js
shlb
cmc
addr16
sahf
mov
icebp
jo
hlt
es
jecxz
les
xorl
jns
sahf
fbld
fdivl
enter
lret
mov
push
je
xchg
loopne
mov
push
fisubrl
and
xor
dec
xor
and
and
aaa
bound
jbe
pop
and
out
xor
std
mov
push
ret
and
ljmp
pop
xchg
test
jmp
inc
pop
jbe
popf
movsb
stc
cmc
fwait
pop
iret
cmp
je
aam
adc
sahf
jl
push
dec
inc
sar
cmp
in
ljmp
jl
cmc
xchg
xchg
jno
aad
roll
mov
mov
inc
jae
mov
push
out
add
pop
int3
xchg
dec
jle
lret
dec
pop
in
fucomi
fldt
sub
add
mov
jbe
pop
arpl
or
dec
out
or
dec
arpl
xchg
mov
loope
and
nop
mov
lret
cltd
jae
adc
out
lahf
mov
mov
ja
xor
mov
pop
sub
xor
out
inc
scas
mov
in
inc
ja
orl
jecxz
push
inc
stos
cmp
dec
or
popa
stos
scas
ss
dec
inc
lret
std
pop
adc
xor
lds
out
pop
mov
repz
xlat
inc
into
mov
adc
imul
xchg
pop
xchg
fwait
shrl
cmp
stos
dec
rcrb
xor
dec
cmp
dec
push
loopne
sbb
push
sub
in
and
pop
cmp
mov
dec
xor
lret
cwtl
sbb
dec
sbb
shlb
cs
iret
cwtl
push
jo
add
cmpsb
cltd
loopne
pop
or
sub
test
push
push
sarb
sahf
aaa
cld
or
inc
std
addl
fisttpl
popl
test
adc
xchg
and
testb
mov
addb
mov
subb
mov
test
xchg
call
das
jns
out
cltd
jbe
xor
mov
aad
adc
jg
push
stos
inc
sti
mov
das
cmpsb
mov
xor
add
dec
cmpsl
jnp
sbb
cmp
cmp
xchg
xchg
xor
or
inc
dec
nop
adc
jnp
jo
cmpsl
dec
adc
shr
leave
les
mov
ss
push
das
test
sti
lock
sbb
mov
mov
out
lock
inc
jmp
daa
pushf
call
sbb
mov
imul
lock
js
adc
sti
ljmp
ror
fwait
xchg
aaa
add
cmp
xchg
push
mov
dec
mov
mov
or
loop
jecxz
mov
xchg
pushf
loop,pn
pop
and
fisubl
sbb
ja
jns
push
and
adc
scas
mov
push
data16
imul
cwtl
out
adc
aas
lcall
mov
pop
faddl
ret
mov
ss
sub
pop
pusha
or
stc
push
aam
popf
or
mov
push
pop
clc
jecxz
out
aas
je
gs
bound
fistpl
into
fmull
sbb
pushf
or
cmp
movsb
push
push
fistl
pusha
or
cltd
popa
xchg
dec
call
jmp
pop
inc
mov
xchg
dec
pop
cmp
sahf
rcrb
in
repz
xor
fmuls
cmpl
inc
pop
mov
std
rorl
pushf
es
sbb
ljmp
loope
or
cmp
sub
jl
scas
xorb
bound
and
ja
jo
xchg
jge
pop
mov
sahf
lods
mov
push
outsb
scas
xchg
sbb
mov
out
imul
je
jb
mov
lcall
push
imul
gs
scas
or
repnz
jbe
adc
adc
rcrb
cmp
dec
jno
push
cmp
scas
mov
jo
cmp
lret
push
test
inc
arpl
stc
mov
subb
push
push
popf
daa
mov
sbb
aad
test
lahf
jl
adc
pop
jl
and
sti
cmp
dec
ljmp
outsl
xor
jb
loop
mov
aas
cmp
sbb
fcoml
xchg
adc
sub
mov
outsb
and
lds
out
jae
jle
stos
lods
aad
mov
jmp
stc
adc
and
lods
fwait
or
jg
inc
lds
aad
jb
sbb
inc
xor
pop
mov
test
push
rclb
cli
inc
sbb
movsb
out
arpl
or
rolb
inc
cmp
shll
lods
xchg
adc
movsl
mov
ficompl
mov
or
in
ror
addl
xchg
inc
inc
jo
xchg
add
sub
pop
and
outsb
inc
outsb
aaa
std
adc
ljmp
and
std
mov
xchg
lods
sub
inc
inc
adc
pop
jae
stos
call
mov
pop
cmpsb
in
dec
inc
cmp
add
cltd
ret
int3
dec
fidivs
xchg
and
mov
in
xor
sbb
lods
adc
pop
enter
jg
jmp
xor
add
in
inc
popf
lods
dec
je
ljmp
imul
das
dec
je
push
js
aam
cmp
cmp
into
pop
jmp
shll
pop
adc
lcall
cmc
int3
jge
add
out
pmulhuw
adc
sub
dec
push
pop
cmp
fsubs
or
mov
jae
data16
sub
jg
shlb
sahf
xor
int
fistps
int3
xlat
push
cmpsl
shll
or
loopne
jnp
call
or
sti
and
std
dec
lds
mov
pop
fcmovnu
cmp
lret
or
nop
pop
imul
sbbb
jp
decb
stos
dec
push
mov
jbe
jecxz
inc
lahf
push
iret
in
inc
jne
lahf
in
repz
mov
push
cmp
fistps
mov
ja
in
aam
pop
inc
sbb
pop
inc
and
test
cmp
push
aaa
jmp
pop
cmc
sub
mov
outsb
shll
cmc
sub
sub
fisttpl
movsb
lock
out
imul
xor
fs
sti
shlb
sub
cmp
repnz
push
pop
adc
mov
div
aam
lods
std
fimuls
test
mov
xchg
push
adc
xlat
clc
push
push
icebp
bound
daa
push
mov
std
mov
movsb
mov
out
lahf
dec
out
xor
int
or
xchg
fcmove
clc
xchg
ljmp
push
xchg
cmp
fcmovu
jp
aam
stos
push
addr16
push
or
in
out
das
sti
push
enter
in
xchg
mov
jbe
outsb
dec
inc
pushf
in
sbb
es
push
insl
cmp
insl
in
enter
subb
inc
xchg
lret
mov
into
xor
mov
dec
sub
inc
jo
mov
cmp
dec
mov
xchg
lea
popa
int3
xchg
scas
cmp
sub
xor
xchg
shrl
out
divb
scas
jae
cmpsl
xor
inc
and
jo
loope
fisubrl
pop
lds
push
lock
mov
scas
mov
hlt
inc
mov
test
pusha
scas
psubd
jnp
sub
aas
mov
dec
iret
xchg
andb
and
mov
sti
hlt
xor
lea
push
sub
mov
jmp
rcll
fisubrs
xchg
popl
lock
sub
xlat
std
or
int
adc
xchg
push
dec
dec
fwait
test
test
jne
das
dec
jnp
dec
repnz
test
xchg
jmp
data16
xchg
pop
inc
in
add
or
rolb
dec
and
in
test
call
xor
mov
xchg
sub
lcall
jo
mov
ret
push
cmpl
mov
outsb
sub
mov
divl
out
sar
jecxz
push
xchg
stos
sub
inc
jne
push
cmpl
pop
sahf
xchg
mov
jl
xlat
out
pop
cmp
scas
push
outsb
mov
clc
pushf
out
sub
mov
pop
stc
jbe
cwtd
loope
aam
or
cli
jne
mov
in
movsl
xchg
mov
roll
daa
pushf
jae
aas
push
adc
mov
mov
cltd
jns
inc
repz
addr16
mov
fimuls
fimuls
push
mov
mov
jb
xor
into
enter
dec
fcoml
repnz
bound
das
lds
aas
xchg
mov
pop
mov
ljmp
xchg
lock
in
mov
stos
out
pop
imul
push
loop
pop
pop
and
dec
stos
sub
mov
aas
cmc
pusha
cmc
pop
xchg
add
aas
push
ret
mov
movb
hlt
push
ret
out
xchg
xor
mov
dec
adc
loop
push
jecxz
add
jns
in
clc
mov
xchg
sub
inc
xchg
arpl
outsb
rcrb
inc
shlb
std
cmp
or
add
mov
add
cwtl
jp
xchg
mov
sbb
xchg
ret
jg
xor
jmp
mov
jbe
mov
push
jb
pop
sahf
shrb
and
and
jecxz
fcmovb
js
in
fcoms
les
daa
adc
stos
pop
std
test
xchg
xor
add
and
in
movsl
div
adc
add
sbb
or
mov
dec
imul
adc
xor
mov
iret
inc
int
or
cli
scas
cmp
xchg
incb
arpl
popf
clc
mov
push
push
xchg
sbb
inc
sti
pop
in
add
or
popf
push
out
sbb
dec
daa
push
test
je
fsubr
mov
mov
imul
jmp
jg
add
sbb
shlb
inc
inc
inc
out
cmp
scas
scas
rcrl
testl
xchg
xor
fisubrl
aas
in
outsb
push
push
aas
nop
call
fs
fmulp
cmp
sub
hlt
adc
adc
sbb
jmp
fptan
xor
fs
fcom
and
das
in
cmpsl
xchg
pop
fnstenv
std
pushf
repnz
sub
push
xchg
lea
mov
mov
and
call
ljmp
xor
inc
movsb
cmc
insb
xchg
xor
xchg
fldt
sub
js
push
dec
je
mov
daa
movsl
test
cmc
inc
dec
mov
or
or
out
shlb
sahf
mov
cld
std
push
push
js
fwait
jp
lds
lahf
stos
cwtl
xor
push
ljmp
push
int
fbstp
lods
and
xor
js
xor
jbe
jle
push
jo
jg
stc
sub
pop
cli
pop
mov
les
sti
iret
btr
rorb
adc
pop
xchg
es
mov
in
lock
push
mov
or
test
sub
fmuls
repz
imul
mov
stos
bound
mov
cli
pop
sub
cmp
jno
pop
inc
dec
hlt
xchg
or
insb
sbb
sti
pusha
xor
adc
lock
cmpsb
or
sbb
loopne
fs
je
icebp
sbb
sub
shrl
test
mov
mov
jg
jmp
push
test
push
adc
aad
test
rcll
jle
sub
ds
mov
jl
pop
cmp
sbb
dec
scas
insb
lahf
xchg
aad
adc
inc
inc
mov
mov
pop
push
arpl
rolb
lahf
fidivl
cmp
add
stos
jno
mov
add
push
mov
js
adc
and
jnp
int3
cld
xchg
xchg
pop
scas
xchg
pop
fidivl
cli
stos
pop
cs
fcomip
inc
xchg
xlat
cmp
and
mov
cmp
bound
push
sbb
inc
outsb
ja
sub
mov
hlt
cmpb
cli
mov
int
xor
push
in
sbb
xor
adc
lret
orl
sbb
inc
jne
sub
shll
jo
jnp
es
fsubrl
inc
jbe
adc
popf
xchg
xor
out
cmpsb
pop
mov
jp
jno
pop
icebp
mov
mov
push
fimull
or
push
jg
jmp
fs
pop
or
fcompl
vandnps
mov
sub
push
scas
lods
psrad
add
xor
mov
cs
push
ss
or
jbe
aaa
lcall
sbb
in
inc
and
push
std
or
bound
dec
pop
arpl
ffree
scas
inc
lea
fadds
mov
enter
fcoml
and
adc
xchg
test
mov
push
or
cmp
mov
imul
in
clc
clc
xor
mov
call
movsb
into
xor
cmp
mov
arpl
mov
aad
mov
loop
mov
test
inc
imul
lret
and
imull
sub
dec
scas
inc
icebp
ret
or
push
inc
pop
imul
js
popa
mov
jmp
ret
jmp
shlb
ja
pop
icebp
pop
arpl
mov
lods
imul
enter
insb
push
xchg
mov
add
mov
data16
pop
fsubrp
cmp
outsb
lahf
in
rcll
sbb
sub
std
pop
scas
imul
not
fldenv
adc
arpl
aaa
cmpsl
add
lock
test
mov
sub
repnz
test
jno
inc
cmp
dec
pop
jmp
stos
ljmp
and
sub
pop
mov
clc
test
xchg
or
xor
mov
push
sbb
add
std
mov
adc
adc
insb
push
cltd
mov
enter
fstps
push
xchg
jmp
xor
out
mov
stos
xchg
sti
imul
cwtl
lcall
cli
stos
ss
dec
js
fidivl
out
xchg
xchg
jns
aam
xchg
xchg
cli
lret
lods
int3
dec
fdiv
sbb
or
inc
mov
push
std
and
shll
xlat
ja
sbb
mov
push
xor
iret
xor
mov
gs
fmul
lcall
push
adc
sbb
lahf
or
jle
out
push
sbb
gs
test
fidivs
aas
or
adc
fldenv
sbb
mov
mov
xchg
fisttpll
cmp
mov
ret
mov
push
iret
int3
add
cmp
int3
fdivrl
add
jb
jg
or
adc
js
inc
ljmp
fistpl
aaa
sbb
outsl
mov
push
dec
clc
jae
rclb
mov
mov
mov
push
pop
rorb
shll
or
aam
pop
in
cmpsl
mov
xchg
and
nop
push
les
hlt
int
fwait
push
mov
sub
sub
aam
mov
xlat
lcall
xor
jno
mov
sarl
jb
xlat
into
and
adc
dec
and
icebp
mov
je
out
dec
jmp
inc
dec
inc
inc
inc
xchg
mov
fbld
dec
add
mov
pop
adcb
cmp
add
popa
xchg
sub
fwait
inc
push
pop
pop
add
push
mov
xor
jp
lret
cwtl
loop
inc
mov
ljmp
add
mov
and
or
gs
sbb
daa
mov
std
sub
jbe
xchg
inc
and
out
inc
mov
shll
mov
fadds
call
lahf
cmp
sub
loope
les
clc
addb
xlat
test
cmpsb
add
pop
pop
push
xor
popa
fcoms
cltd
pop
adc
pop
jge
pop
lock
mov
adc
cwtl
aad
inc
xchg
jnp
mov
or
lea
fisubl
mov
loopne
test
loope
push
lahf
pop
sub
filds
fwait
mov
or
ja
inc
or
pop
cwtl
and
popa
dec
testl
rdpmc
jo
push
lea
mov
iret
bound
and
inc
dec
mov
jp
in
inc
mov
movsb
inc
pop
adc
xor
insb
mov
mov
sub
mov
sbb
repz
movsb
ss
pushf
dec
mov
imul
out
call
mov
sub
jge
int3
inc
xor
sub
loopne
lods
xorb
aas
shrb
inc
cmpsl
and
scas
xlat
push
lret
jo
scas
aas
ss
addr16
jb
jecxz
outsb
addl
in
mov
repnz
jbe
mov
push
add
int3
lds
pop
ja
shrl
arpl
out
rolb
popf
mov
mov
inc
push
mov
dec
push
or
sbb
mov
pop
inc
pop
stos
pop
cmpsb
inc
fldt
dec
mov
sbb
cmpl
lock
inc
mov
insl
adc
int
repnz
test
or
cmp
push
arpl
arpl
fmuls
mov
xchg
mov
shlb
andl
push
sbb
mov
sub
fldl
mov
sub
in
mov
xor
inc
loop
adc
add
pop
xchg
add
aaa
ffreep
dec
sbb
inc
in
fwait
push
ds
push
dec
lock
movups
out
sahf
out
pop
xor
shlb
inc
imul
mov
cmpsb
xchg
push
das
dec
aaa
dec
pop
lods
pusha
bnd
sbb
cmp
mov
mov
dec
cmp
das
icebp
fcomps
add
in
and
inc
fstpt
pop
fsts
and
sub
mov
dec
xor
pop
int
and
sar
lock
inc
xor
push
lea
jmp
jecxz
out
xchg
sub
lods
lods
xor
xchg
xor
lds
sti
out
shl
lret
mov
pop
es
sahf
iret
or
pop
jb
inc
mov
dec
pushf
mov
mov
push
push
inc
fnsave
sub
pusha
jg
sbb
insb
mov
sbb
test
add
scas
ja
dec
dec
sbb
icebp
xchg
iret
jg
pop
dec
das
mov
pop
jmp
push
in
mov
jb
repz
lods
dec
in
popa
jbe
in
addr16
push
inc
int
mov
sbb
or
arpl
cwtl
subb
gs
push
adc
xchg
and
daa
jo
scas
lods
fists
pop
je
addr16
xchg
or
push
loop
stc
lods
loope
out
jg
inc
insb
mov
mov
int3
sub
mov
call
mov
aaa
loopne
push
inc
push
mov
sarb
fisttpll
mov
aam
cmp
pushaw
test
imull
ljmp
fdivrp
xchg
push
int
es
repz
and
popa
nop
xchg
out
test
mov
jbe
sahf
mov
or
scas
fcompl
push
insb
insl
cmp
stos
pop
adc
xchg
mov
pop
xchg
cmp
push
popf
and
pop
das
jl
lret
jno
fisubrl
xchg
stos
or
jp
popa
fbstp
push
jecxz
sahf
mov
data16
mov
in
or
hlt
into
out
call
add
mov
aas
rol
xor
jbe
loopne
cltd
or
and
push
xchg
cmp
xchg
cld
mov
fwait
xchg
jecxz
push
je
cmc
push
out
fidivrl
inc
add
lahf
mov
fimull
adc
cmp
dec
inc
dec
cmp
pop
and
jb
fsubrs
stc
ja
sub
sar
outsl
je
gs
test
pop
xor
test
mov
mov
mov
xchg
mov
mov
and
jmp
js
mov
dec
push
push
push
int
sbb
jmp
cmp
cmpsb
dec
stos
icebp
ror
scas
push
mov
jne
dec
add
pop
in
add
dec
imul
into
int
addr16
aad
pushf
mov
inc
jae
lret
movsl
enter
scas
repnz
stos
repz
or
pop
mov
sbb
sbb
adc
aas
xchg
xchg
jo
or
js
xor
sbb
aam
fwait
shrl
pop
jge
popf
popf
cmp
faddp
stos
or
adc
jns
mov
xorb
in
scas
aaa
or
add
xlat
mov
mov
fwait
jmp
add
lret
loopne
push
mov
shll
ret
cltd
aas
fs
mov
mov
lds
or
int
ja
xor
mov
xor
mov
mov
lds
jo
outsb
xor
add
aam
xchg
inc
inc
int3
shld
movsl
outsl
inc
out
int
pop
push
sahf
mov
inc
ret
loopne
push
in
xlat
or
sarl
push
cmp
fidivrl
push
xchg
cwtl
mov
inc
sub
xchg
xchg
sbb
cmp
imul
das
call
push
adc
or
mov
test
jne
xor
addr16
push
sbb
outsb
mov
mov
and
mov
mov
mov
mov
out
fimull
xchg
rcrl
aas
addr16
and
fisubs
dec
addb
mov
loop
cmp
push
mov
push
rcll
or
pop
dec
cmp
sub
std
lret
mov
mov
mov
pop
aam
mov
fnstenv
mov
ret
loop
movsl
cmpxchg
push
add
jmp
and
daa
outsl
xor
xor
enter
mov
bound
in
mov
es
xchg
pop
mov
lods
pushl
adc
fwait
jno
pop
cmp
test
imul
shll
push
sub
pop
mov
push
imul
or
std
inc
mov
or
cs
mov
cli
enter
xchg
and
push
test
jg
pop
jbe
pushl
sbb
mov
jae
mov
loope
movsb
call
push
mov
add
pop
sarb
mov
ret
cwtl
mov
xchg
dec
mov
and
test
stos
jg
rorb
enter
lcall
jnp
and
mov
pop
xor
or
adc
fdivs
mov
rol
in
fidivl
jns
iret
pop
push
dec
adc
repz
or
pushf
xor
pop
adc
lcall
add
mov
iret
nop
addr16
xor
sahf
das
test
std
xchg
hlt
pop
xor
jne
fnstcw
cmovae
aad
inc
push
call
add
mov
jmp
iret
hlt
adc
dec
jne
cmpsb
cli
sahf
and
std
mov
loope
jecxz
out
xor
xchg
mov
inc
sub
shr
imul
fwait
lahf
aad
orl
mov
xchg
out
arpl
inc
nop
push
xchg
mov
xlat
outsb
xor
int3
loope
xor
ds
ret
daa
lods
cmp
fstps
test
xchg
data16
in
movsl
jmp
lock
mov
sbb
or
mov
cli
call
enter
push
mov
jg
add
cltd
xchg
add
mov
std
sub
add
mov
lret
popf
cmpsb
dec
enter
lock
int3
in
mov
clc
in
dec
rclb
call
xchg
jb
loop
out
xor
xchg
out
rol
adc
into
pop
xchg
push
pop
out
dec
andl
jae
mov
sahf
orb
lods
scas
xchg
cmp
out
xor
scas
repnz
int3
test
imul
sahf
lds
arpl
fwait
arpl
add
out
test
ja
inc
jp
mov
push
mov
daa
in
aam
push
ret
sbb
lods
mov
dec
push
mov
fwait
loope
push
adc
data16
decb
xchg
into
cmp
fbstp
lds
mov
popf
aaa
or
cmp
imul
fidivl
aam
inc
cld
inc
add
xchg
xlat
pushf
rcrb
pop
mov
add
mov
pop
or
test
xor
xchg
pop
pop
movsb
mov
ret
dec
or
push
out
inc
insl
mov
das
inc
sqrtps
dec
ret
bswap
jp
pop
pusha
cmpsb
pop
sti
adc
cmp
xorb
andl
push
fs
mov
in
cmp
scas
mov
jo
insb
push
adc
in
out
sbb
and
cli
jae
addr16
adc
mov
rcrb
scas
adc
jmp
pop
mov
pop
xor
pop
and
inc
xor
xchg
cmp
xor
das
adc
xchg
mov
in
mov
ret
lahf
mov
nop
xchg
aad
jp
push
xchg
xchg
lods
aad
sub
das
inc
dec
mov
or
popa
mov
or
lahf
dec
add
inc
sub
inc
cmp
push
mov
data16
dec
sub
dec
dec
inc
lds
push
aaa
mov
pop
movsb
mov
push
xlat
inc
icebp
inc
push
pop
lcall
dec
add
dec
xor
push
xchg
es
mov
add
dec
dec
fstps
loop
lahf
iret
addr16
jp
push
jg
jmp
adc
insb
sub
pop
pop
stc
in
movsb
mov
inc
mov
scas
clc
flds
mov
les
iret
dec
mov
lea
in
lds
jecxz
cmpsb
cmpsb
or
dec
data16
and
test
mov
in
popa
ljmp
xchg
mov
or
sbb
mov
fisubs
push
ror
jae
divb
xchg
std
jp
std
sbbl
mov
lds
imulb
inc
xor
pop
popf
xor
test
pop
jg
dec
xchg
fs
dec
fiaddl
xor
xor
rcr
inc
sub
dec
or
and
rcll
test
ja
movsb
ss
dec
adc
add
adc
add
sahf
inc
js
fs
inc
or
sti
jmp
pop
sbb
xchg
and
lea
movsl
sahf
inc
arpl
imul
and
mov
addr16
adc
in
sub
inc
aad
test
es
cmc
xchg
in
in
and
and
call
and
loopne
test
call
rcrl
push
lahf
ja
insl
sbb
dec
jne
out
insl
in
lds
jecxz
mov
ret
pop
fists
into
mov
mov
sarb
js
xor
or
jae
imul
and
and
push
xor
add
pop
dec
mov
inc
sti
xor
aas
mov
sbb
scas
mov
aaa
push
cli
and
xchg
cwtl
mov
and
jecxz
nop
jmp
lods
xor
push
push
out
das
push
mov
testb
push
inc
loopne
mov
cmpsb
lret
cmp
aaa
lods
jg
stos
or
les
jo
outsl
xor
lret
adc
jg
jo
xchg
fs
mov
xor
into
inc
adc
movb
in
xchg
rorl
imul
push
sbb
lock
sbb
les
int3
fmuls
or
orb
loopne
sub
or
imul
sbb
cmpsl
in
mov
fwait
sbb
pop
cmp
iret
jle
cmpsb
cli
lds
sbb
cmpsl
mov
adc
sub
out
into
jbe
lods
and
mov
dec
adc
mov
xchg
xchg
pop
ret
lds
inc
jg
pop
mov
jns
add
jno
ss
ret
pop
mov
adc
cmp
pop
in
out
or
mov
dec
inc
sbb
insb
xlat
adc
leave
scas
sub
sub
push
stos
mov
push
loope
mov
rcl
push
cmp
mov
pop
lea
cmp
dec
out
jg
mov
movsl
jl
sar
pop
insb
adc
pop
xor
xchg
lds
aaa
mov
out
lcall
movsb
les
fucom
out
pop
negb
ret
lock
jns
dec
cld
push
jl
bound
sarb
jg
cld
daa
mov
nop
mov
cmp
test
rcrb
xchg
xor
lahf
mov
xor
mov
inc
rcrl
push
sub
loopne
das
aaa
test
shll
lds
insb
std
lea
sbb
mov
mov
sub
inc
lret
shlb
and
nop
and
fstps
inc
and
mov
lds
dec
cli
jmp
in
xchg
jno
inc
test
and
sbb
fcomps
and
add
fiaddl
lret
adc
mov
sub
pop
inc
sbb
fnstcw
xor
adc
xor
xchg
rcr
es
insl
mov
fnsave
jae
sbb
sarl
jecxz
jnp
popa
inc
pop
movsb
gs
fdivrs
xchg
xor
jge
sbb
xchg
fmull
sbb
add
xchg
push
push
xor
pop
mov
pop
sub
dec
lock
int3
jae
mov
ret
dec
subb
in
sbbl
mov
fsubrl
adc
pop
fildl
adc
fs
dec
push
nop
mov
es
int3
cmp
push
rcll
cmp
xchg
mov
loope
int3
xchg
mov
mov
cmc
add
adcb
into
jb
sub
jno
add
outsl
add
inc
xor
add
enter
adc
mov
std
mul
scas
and
lock
sbb
lcall
stos
test
sub
sbb
pushf
mov
add
out
in
xor
or
pop
out
dec
inc
sahf
lods
cmp
inc
cltd
jb
inc
aam
jp
dec
sub
stos
push
fcom
cmp
push
mov
xor
cmp
pop
jae
mov
stos
loopne
xchg
or
and
dec
mov
sbb
mov
movsb
cmpsl
xor
ds
int3
stc
cltd
or
stc
scas
scas
aad
push
test
mov
dec
mov
pop
push
lods
aaa
mov
push
cltd
loopne
insb
jo
jp
adc
negb
dec
jge
lret
sbbl
pop
inc
dec
mov
mov
jg
fs
fstpl
jmp
mov
out
pop
dec
shl
and
push
mov
adc
ljmp
cmp
andl
dec
lahf
sbb
hlt
addr16
movsb
call
addl
xlat
int
pop
push
push
loopne
lret
xchg
jecxz
xlat
fsub
jno
inc
mov
mov
insb
inc
inc
dec
sbb
lods
and
dec
icebp
adc
and
dec
dec
push
add
cmp
fcmove
cltd
push
mov
xchg
enter
hlt
cmp
pusha
jae
sbb
dec
sub
adc
stc
inc
xchg
mov
cmpsl
inc
mov
lods
sbb
in
jle
into
in
xchg
es
jmp
rcrl
add
push
hlt
or
or
jo
mov
cmc
dec
das
add
xchg
cmp
sub
mov
hlt
add
ret
sbb
dec
jbe
mov
ret
push
jecxz
cwtl
ret
imul
jl
cmc
loopne
and
mov
cmp
loope
into
lods
xchg
cmpsb
push
aad
push
stc
insb
lcall
insl
cmp
aam
push
int3
sbb
cwtl
test
push
sub
lcall
sbb
movsl
in
sbb
or
and
shll
shrl
mov
mull
js
jne
and
mov
enter
jge
add
scas
xchg
lods
xor
ds
mov
lds
xor
sarl
ds
insb
fdivrl
push
lock
jbe
in
int3
add
in
aam
in
mov
xor
mov
data16
sub
mov
std
fwait
in
test
mov
mov
xlat
iret
push
inc
push
mov
pusha
dec
pop
out
or
inc
mov
add
and
sbb
sub
sub
out
dec
test
shr
cmc
inc
and
xchg
mov
orl
mull
lahf
in
ret
ss
shll
and
testb
cli
or
pop
mov
cmp
jb
inc
dec
addr16
or
xor
xor
adc
lcall
inc
adcb
mov
lcall
cmp
sub
fldl
jl
rorb
aam
cmp
xchg
cwtl
stc
mov
lcall
das
mov
cmpsl
daa
and
fstpt
sub
cltd
mov
and
jecxz
mov
xchg
and
dec
out
and
gs
dec
lret
aaa
mov
jle
test
not
js
cmpl
fsubs
stc
adc
add
sub
mov
dec
fmull
pop
addl
pop
je
aas
xchg
call
in
out
in
cli
inc
lock
repnz
sub
aam
sub
mov
xor
inc
out
fs
jb
jnp
test
dec
in
mov
bound
jne
xchg
scas
repnz
mov
bndstx
jno
sbb
add
int
dec
cmp
xor
pop
mov
in
mov
jl
outsb
lcall
dec
push
jg
add
hlt
jecxz
daa
adc
push
out
int3
add
mov
and
fmull
lcall
inc
popf
adc
xchg
popf
scas
or
mov
add
je
pushf
or
jns
sbb
inc
and
dec
mov
wrpkru
and
lea
dec
mov
sub
popf
in
into
push
push
fldenv
jl
cmp
lock
mov
lret
lock
jns
std
jno
in
gs
mov
jno
xchg
adc
mov
flds
lret
sbb
in
sub
leave
mov
icebp
cs
popa
ljmp
stos
dec
enter
rclb
mov
dec
push
add
ja
fwait
jle
push
lret
lea
push
lds
lock
add
xchg
mov
xchg
inc
and
loopne
mov
pop
cmp
jnp
xchg
imul
adc
cld
mov
push
pushf
test
aad
push
pushf
insl
inc
cli
dec
hlt
or
cltd
fcoml
out
movsb
in
mov
adc
sub
push
mov
scas
loopne
insl
jg
sbb
xlat
inc
data16
mov
mov
sub
imul
adc
xor
mov
cltd
add
sahf
jo
xchg
repz
imul
push
lret
nop
sbb
test
mov
mov
pop
aad
push
push
and
jp
sahf
dec
es
jnp
data16
inc
push
mov
or
pop
fcmovnu
jno
imul
mov
das
cwtl
popa
xchg
sub
push
sub
sub
cld
xchg
mov
scas
sub
dec
iret
out
cli
xchg
pop
sti
lods
xchg
push
loop
cs
fwait
shr
add
dec
cmp
mov
cmp
add
pusha
xor
pop
xor
or
xchg
adc
jge
xchg
pop
ret
pop
test
add
aaa
mov
aad
cmpsb
jecxz
fldenv
movsl
pushf
pushf
jne
and
or
mov
xchg
mov
iret
sub
adc
repz
or
outsb
pop
cmp
lea
fldenv
cmp
loop
dec
mov
bound
sub
mov
fst
xchg
in
add
rorb
and
sbbb
and
or
into
pop
inc
or
js
dec
cmp
shl
cltd
arpl
fbld
mov
xchg
push
stos
enter
mov
inc
jno
mov
add
clc
fildll
roll
ljmp
pusha
jmp
aas
nop
xchg
std
lea
mov
sbb
xchg
dec
or
pop
mov
adcl
in
pop
fwait
push
lret
pop
cmp
cmp
fistpll
sbb
clc
jecxz
hlt
dec
addb
hlt
and
cs
fistps
add
data16
xchg
dec
enter
jnp
jb
bnd
jnp
test
sbb
or
fbstp
stos
ja
test
and
jae
sub
lret
in
add
in
lds
xor
loopne
xchg
aas
xchg
cwtl
adc
repnz
push
pop
sbb
mov
cmp
mov
jb
movsl
pop
scas
enter
loop
xchg
mov
mov
stos
mov
xor
cmp
je
lods
push
adc
jecxz
es
out
imulb
lods
test
loop
push
stos
ds
xor
cmp
mov
push
dec
xor
cmp
test
fisubl
xchg
aad
sub
or
mov
pushf
fs
adc
dec
insb
jp
addb
cmp
gs
movsb
stos
mov
adc
cld
xchg
sbb
fs
push
lret
inc
mov
dec
sbb
pushf
mov
popf
ss
icebp
cmp
or
daa
cmp
xor
cmp
in
les
mov
push
xor
add
out
push
ljmp
loop
cmc
and
test
xchg
mov
dec
mov
subb
stos
hlt
popa
gs
sbb
movsb
mov
mulb
jno
jns
jmp
lock
dec
push
leave
shrb
test
addr16
jge
addr16
add
jge
jecxz
loop
imul
sub
fisubl
lcall
adc
std
mov
dec
cmp
aad
pop
adc
repnz
jle
cmp
inc
cs
outsl
jb
lret
adc
data16
xchg
mov
aas
jge
in
lret
out
and
mov
mov
movsl
fmull
add
insb
stos
lock
push
inc
rcrb
mov
and
inc
leave
mov
jge
leave
outsb
out
xor
mov
dec
test
fs
mov
pop
cmpsb
scas
test
jecxz
cld
lret
sbb
sub
jl
test
int3
push
lds
mov
ds
jmp
shll
sub
pop
cmp
push
mov
ror
dec
mov
maxps
jo
leave
cs
push
inc
rcll
stos
and
outsb
push
jns
movsl
fs
pushl
out
out
push
or
xchg
push
and
sbb
mov
aad
pop
lret
int
xor
and
sbb
scas
sti
jmp
jmp
les
jns
push
arpl
addr16
or
clc
pop
inc
sahf
or
and
mov
mov
sub
inc
idivb
sti
sbb
in
jb
inc
xchg
lock
mov
fisttpll
and
sbb
lods
fs
mov
test
ljmp
sar
gs
push
sbb
shll
xor
arpl
je
xchg
jae
pop
inc
in
mov
add
and
sahf
inc
mov
mov
aaa
in
jp
rorl
mov
xor
call
adc
adc
cmovno
lea
jne
or
dec
mov
loop
cmp
icebp
pop
in
mov
xor
lcall
jge
fs
sbb
insl
sarl
in
mov
push
ficoml
iretw
adcb
bound
push
fdivrl
test
les
cmp
cmp
inc
test
cmpsl
fstl
xor
cmp
lods
mov
push
jle
jg
into
call
push
adc
lds
call
mov
loope
aas
enter
ret
dec
into
push
or
out
jge
jmp
int
cli
mov
cmpw
ljmp
pop
jge
push
pushf
test
ret
and
shl
cmp
mov
push
mov
inc
or
lcall
out
cmpsl
insl
jle
push
cmp
push
and
cmp
rorl
or
cmp
cmp
fwait
xor
cmp
shll
shl
mov
fcomp
testb
add
jo
fsubrl
movsb
sub
sbb
or
mov
sbb
adc
shrl
push
leave
dec
adc
arpl
inc
sub
add
pop
adc
iret
inc
xor
dec
lods
ret
rcll
jmp
sar
clc
pop
xor
jecxz
ret
mov
xor
pop
jge
mov
pusha
jmp
out
xor
xor
xor
push
dec
adc
aad
cmp
xor
jp
or
lea
xchg
push
loope
and
mov
arpl
mov
mov
pop
scas
lcall
repnz
dec
rcrb
fchs
sbb
sub
cmp
ja
incb
or
xor
pusha
cltd
fldt
pop
movq
imul
xor
cmc
enter
mov
rol
into
mov
jmp
sbb
or
mov
jno
in
inc
mov
adc
in
pop
movsb
sbb
pusha
inc
enter
mov
push
mov
stos
sub
lahf
sbb
arpl
cmpl
movb
inc
cmp
xchg
mov
cmp
xor
test
pop
lcall
mov
imul
pop
cmpsl
nop
xlat
and
pop
xchg
fsubl
jns
pop
sbbl
mov
or
mov
lret
das
push
loop
insl
sub
mov
in
push
push
xchg
std
into
repz
pop
jo
leave
mov
int3
rcl
pop
pop
sub
sbb
and
loopne
fiadds
je
daa
lret
jnp
lahf
or
aaa
xchg
hlt
roll
dec
push
xor
jne
dec
outsb
sbb
jmp
sbb
je
stos
pop
incb
data16
adc
pop
insb
imul
sarl
jo
test
stc
je
or
dec
rcrl
cmp
sub
mov
stc
cmpsl
arpl
jne
pop
inc
popf
int
push
movsb
movsb
fs
pop
sbb
pop
jge
cltd
adc
inc
mov
icebp
adc
imul
mov
push
addr16
fisubs
jbe
push
inc
xchg
cmp
jne
hlt
inc
insb
sti
sar
test
adcl
popa
mov
jbe
push
pop
sub
xchg
xchg
lods
mov
or
pop
ret
mov
add
or
call
cmpl
sbb
leave
in
ja
pop
imul
pop
popf
and
rol
test
ljmp
jb
sbb
fst
andb
pop
lahf
push
loop
into
lahf
sub
mov
sbb
enter
xchg
push
movsb
xchg
sub
std
sbb
xchg
loop
sbb
add
cmpl
dec
shlb
cmp
push
stc
cmp
jae
ret
out
scas
repz
push
mov
mov
fucomip
cld
hlt
mov
sahf
in
bound
mov
inc
jnp
es
xchg
cld
scas
sbb
ret
stos
or
lock
sub
and
jno
jg
mov
stos
push
mov
rolb
repz
dec
xor
add
ffree
mov
imul
dec
jns
bound
lods
rorl
popa
test
repz
clc
add
push
sbbb
js
pop
adc
pop
popa
fdivl
xor
add
cmp
mov
nop
sbb
mov
pusha
scas
jmp
jmp
add
mov
or
cltd
repnz
ds
fnstcw
aas
mov
aaa
pop
push
xchg
outsb
repz
push
repz
dec
hlt
ljmp
ja
sti
sahf
xor
stos
xor
cmpsl
jo
mov
in
lret
test
cmp
pop
in
cmc
sbb
or
cwtl
jb
cmc
cmp
jmp
mov
cmpsb
mov
cmp
repz
ror
sub
pop
mov
inc
mov
sub
sar
shlb
pop
xor
cmpb
das
loop
in
xor
fmulp
and
cmpsb
popa
lds
lods
js
push
push
jae
inc
cvtps2pi
fidivs
push
and
jnp
lods
xchg
imulb
iret
shlb
pop
subl
icebp
add
inc
insl
cld
arpl
out
mov
mov
loope
popf
outsl
fldenv
pop
dec
add
fs
ja
fisubl
adc
dec
adc
pop
xor
and
outsb
cmp
jecxz
dec
in
push
fwait
push
movsb
or
cmp
xor
mov
cld
mov
lcall
test
push
mov
lods
xchg
mov
mov
jmp
call
xchg
mov
scas
mulb
mov
leave
fwait
in
outsl
xor
and
es
sbb
scas
jle
jl
inc
jl
imul
mov
cltd
bound
test
jae
push
mov
cmc
out
pop
sub
push
enter
and
aas
and
lret
add
gs
sbb
int3
dec
xor
cwtl
cmp
inc
movl
add
pop
stos
inc
pop
xor
shll
mov
mov
cld
jg
dec
push
cmp
xchg
adc
push
jbe
fsubr
inc
or
add
out
lahf
test
fdivrl
fbstp
jb
push
aam
movsb
dec
es
mov
push
dec
mov
aas
insb
ficoml
adc
xchg
je
or
mov
mov
mull
xchg
jecxz
mov
ja
mov
stos
insl
and
cmpsl
andb
shll
xchg
cmc
mov
fsubrs
test
inc
dec
stos
sub
je
xchg
xor
pop
xlat
and
jae
jns
outsl
cwtl
xchg
push
test
jbe
push
icebp
mov
sbb
hlt
mov
mov
sbb
xchg
sbb
sti
xchg
mov
in
icebp
cmp
or
sub
mov
sub
sub
popa
pushf
cmpsl
mov
mov
inc
ret
cmp
mov
xchg
das
adc
or
or
xor
pop
jbe
adc
and
les
stos
mov
dec
addb
or
movsl
jge
or
int3
test
xchg
dec
scas
repnz
popa
dec
data16
fdivr
xor
lods
in
arpl
shll
dec
rorb
je
inc
test
filds
jg
in
js
ss
xchg
fnstenv
nop
adc
pop
cmp
hlt
push
xchg
sarb
outsl
cli
inc
out
cltd
cmp
outsb
sub
adc
push
aas
mov
aam
or
adc
mov
push
pusha
mov
jecxz
dec
out
sub
adc
mov
loop
sub
and
jbe
xor
inc
mov
mov
xlat
mov
arpl
jmp
inc
cli
mov
add
xchg
sarl
inc
sbb
mov
cltd
cmpsl
rolb
push
jg
jl
cmc
cmp
sub
or
outsb
nop
inc
cmp
push
loopne
fdivrp
pop
pop
imul
movsb
jbe
ds
sub
cmpsb
enter
mov
push
cmp
and
int
scas
mov
test
bound
pop
mov
cmp
push
inc
in
pushw
lret
hlt
mov
andb
stos
pop
push
insl
shll
mov
xchg
imul
cmp
outsb
adc
loopne
jecxz
loop
pop
add
in
xor
ss
fwait
iret
bound
xchg
jl
adc
jnp
das
push
fs
xchg
push
push
and
stos
xor
adc
call
cs
push
xchg
test
stos
cmp
mov
in
mov
cmp
imul
aad
and
inc
inc
jle
addr16
and
in
inc
push
out
sub
loopne
lea
stos
mov
pusha
sub
in
mov
outsb
mov
loope
and
addr16
xchg
or
inc
in
add
popf
fdivrs
dec
mov
cltd
inc
xlat
arpl
cli
inc
inc
mov
rolb
mov
jp
jb
sub
int3
rorl
neg
cmpsl
fwait
push
xor
testb
ds
push
lret
enter
add
pop
mov
inc
fildl
test
and
movswl
dec
mov
sub
insb
jecxz
call
jg
xor
xor
ljmp
into
sbb
stos
fnstsw
out
cld
inc
lock
xchg
daa
js
add
lock
dec
push
and
xchg
jp
pop
push
push
jg
pop
add
xor
xchg
pcmpgtb
add
inc
pop
paddq
pusha
and
add
pop
cmp
iret
and
inc
stc
aad
pushf
cwtl
fadds
mov
repz
jmp
scas
cmp
jnp
iret
mov
fmul
sub
dec
adc
in
stos
inc
mov
dec
cmp
jno
cli
xchg
cmp
jo
popf
xchg
out
mov
pop
and
aas
adc
in
insl
cli
mov
aam
js
xchg
and
mull
fildll
xchg
xchg
mov
sbb
test
adc
in
popf
pop
out
xchg
xor
insb
xchg
and
in
pop
pop
rolb
inc
adc
vfrczss
mov
fadd
enter
movsl
pop
icebp
add
int3
in
push
andb
or
out
add
sarb
ret
dec
inc
cmp
adc
out
loope
pop
mov
adc
data16
rcr
stos
sbb
sbb
or
movsl
mov
into
pop
nop
push
pop
xor
dec
mov
sbb
xchg
sub
js
xor
and
mov
mov
stos
mov
out
mov
loopne
adc
repnz
aaa
push
push
push
jg
sub
jecxz
mov
fwait
cmp
int
push
loopne
aas
xor
data16
movsl
movsb
icebp
in
mov
fimull
enter
and
mov
push
pop
mov
popf
stos
mov
scas
stos
inc
insb
aad
mov
lds
push
ficoms
lret
insl
movsl
dec
inc
out
mov
lahf
add
aaa
mov
bound
int
insb
repnz
pushf
mov
ret
std
or
fistps
add
mov
jle
or
pop
out
and
cmp
iret
add
test
out
int
mov
xor
iret
pop
dec
mov
enter
test
scas
arpl
pop
ja
adc
test
ret
jb
stos
rep
sarl
or
xor
cli
xchg
or
xor
movsl
add
dec
lods
insb
push
daa
je
add
test
xchg
call
push
mov
or
inc
test
and
mov
sbb
adc
mov
inc
shrb
mov
sbb
xchg
dec
in
mov
or
push
dec
mov
sahf
add
dec
mov
pop
rcll
scas
add
dec
lock
pusha
sbb
mov
in
hlt
jg
rcrb
xchg
xor
cmp
icebp
adc
sbb
fwait
mov
jno
dec
nop
movsl
pop
cld
cmp
xchg
in
sbbb
sbb
int
sbb
dec
fisttpll
scas
or
push
mov
or
pop
ljmp
outsl
xor
fisttpll
shll
in
mulb
es
adc
fmul
aas
lea
pushf
cmp
fwait
lods
mov
cmp
lret
sub
lret
or
jns
jae
loope
mov
stc
cmp
lahf
mov
mov
mov
xchg
jmp
sbb
mov
pop
or
mov
and
push
lahf
mov
scas
movsl
lret
arpl
jl
sti
aas
movzwl
sub
and
xor
mov
and
insb
mov
les
xchg
mov
dec
sti
and
jbe
jge
pusha
sbb
jp
mov
jo
and
sub
fildll
add
mov
out
pop
hlt
shrl
test
pop
xor
inc
and
push
scas
jnp
mov
mov
xchg
xor
jae
fmul
dec
xchg
aaa
loope
mov
mov
add
call
dec
xor
ret
xchg
and
cmp
inc
rorb
xchg
ja
aad
pop
push
push
jecxz
mov
ss
mov
and
jnp
adcb
inc
cmp
fprem1
aas
jecxz
sub
movsb
inc
mov
adc
push
fsubs
mov
or
movsl
cmp
inc
or
ja
push
cmp
stos
pop
xchg
xor
cmpsb
pop
mov
mov
scas
fld
int
iret
add
adc
cmc
addr16
orl
fidivs
and
adc
inc
arpl
data16
sub
ss
mov
pmulhw
jle
push
jne
push
aam
aam
push
std
ljmp
movl
xchg
leave
mov
and
mov
test
outsb
test
pop
shrb
bound
mov
cmp
jo
xlat
dec
dec
dec
insb
jno
test
push
aas
daa
bound
lods
pop
sbb
inc
mov
into
push
inc
cmp
sub
push
inc
push
test
lea
jne
pop
sub
fwait
cmp
mov
adc
test
xor
movl
push
movsl
and
roll
xor
xchg
dec
sub
jb
jge
jo
mov
add
jge
xchg
loope
add
jbe
pusha
dec
xchg
imul
mov
fcoms
dec
cli
subb
jl
pop
out
cli
or
xor
mov
out
jb
push
mov
push
mov
ss
mov
inc
xchg
movsbl
out
jno
jns
rorl
popa
in
pop
pop
push
lahf
and
pop
insb
mov
popa
pop
jge
mov
mov
push
adc
add
xchg
pop
ljmp
test
arpl
jno
push
data16
sbb
in
adcb
or
movb
outsl
sbb
std
sub
loope
adc
dec
mov
xchg
inc
js
push
jg
les
hlt
lea
xchg
dec
lahf
dec
js
pop
push
call
pop
shrl
mov
out
xor
xlat
ds
push
adc
jo
jno
and
scas
aad
test
xor
stos
xchg
fwait
inc
andb
dec
push
adc
jl
cmpsb
enter
movsb
notb
daa
ss
out
xchg
movsb
leave
mov
xchg
dec
jge
cmp
mov
adc
movsb
add
sbb
fwait
dec
cmc
pop
cmp
jmp
sbb
mov
dec
fldcw
jge
leave
xor
ds
mov
jl
loop
js
cmpsb
jbe
sub
dec
hlt
sbbl
sbb
jecxz
cmp
mov
fists
push
push
inc
inc
pop
call
inc
mov
ljmp
jmp
cli
and
ss
and
into
pop
pop
xor
add
add
mov
aam
outsl
inc
mov
rolb
cmp
xchg
or
int3
cmpsb
test
mov
mov
clc
dec
insb
mov
push
pop
jl
mov
inc
xlat
push
loop
jo
pop
ljmp
jbe
pop
pop
mull
jmp
and
out
pusha
or
cmp
pop
jp
fcmovb
push
sub
subl
and
lds
mov
popf
daa
sub
push
stc
repz
test
pop
psubb
and
leave
outsl
cmc
ja
push
xor
sub
std
mov
jle
adc
sar
lods
addr16
xchg
xchg
aam
lods
jns
popa
jnp
add
mov
test
arpl
lahf
dec
sti
mov
sbb
mov
mov
outsl
leave
cmp
mov
mov
mov
xchg
fiaddl
sti
test
and
xor
or
mov
dec
outsl
mov
jbe
push
xchg
push
andb
mov
adc
push
mov
xchg
dec
xchg
xchg
loopne
mov
dec
sub
fiadds
sub
ja
inc
fisubs
es
hlt
daa
sbb
push
nop
mov
xchg
xchg
xchg
push
icebp
mov
lcall
xor
test
adc
fildll
sub
mov
xor
xchg
mov
push
popa
lcall
iret
scas
cltd
xchg
leave
sti
sub
out
xchg
pop
rclb
repz
xor
out
imul
sarb
push
adc
aaa
scas
es
test
pop
mov
data16
mov
stos
daa
adc
and
jb
rorb
mov
mov
add
sbb
into
fs
insl
cs
pop
in
xor
fmull
scas
outsb
loop
out
nop
inc
sub
out
cli
cld
pop
dec
bound
push
jl
mov
hlt
ficoml
and
push
mov
das
mov
jmp
adc
cmc
fsub
mov
ljmp
call
es
cmpsb
jno
xlat
cmp
or
lea
aaa
dec
mov
imul
push
sbb
mov
in
je
out
sub
xlat
add
or
xor
rcrb
into
or
das
adc
mov
mov
cmp
out
push
push
aas
cwtl
aad
lds
ljmp
pop
add
inc
dec
mov
and
pop
jg
lods
movsl
fdivl
fs
in
xor
shlb
test
insb
stos
fisttps
xchg
adc
ja
out
xchg
je
sbb
jae
pop
mov
in
cwtl
in
roll
mov
inc
sbb
jnp
mov
lock
ret
cld
push
push
in
xchg
add
sbb
jp
adc
lock
in
inc
adc
divl
pop
sub
jne
jg
mov
in
pusha
daa
xor
mov
icebp
mov
nop
jmp
inc
roll
into
inc
mov
cmpsb
adc
sbb
mov
test
mov
mov
and
mov
pop
mov
pop
movsl
jo
mov
test
sbb
pop
jmp
pop
cli
mov
push
inc
xchg
or
xchg
dec
push
mov
daa
mov
stos
imull
pop
mov
mov
inc
adcb
sbb
pop
cli
test
add
into
scas
cmpsl
out
xchg
or
add
push
imul
mov
mov
jl
leave
sub
testb
aaa
cld
adc
mov
add
jmp
mov
or
repz
fstl
mov
testb
jns
pop
lds
sub
dec
subl
pushf
ret
and
lret
addb
movsl
call
mov
mov
inc
dec
pop
adc
aam
les
mov
test
inc
adc
loopne
mul
xchg
xchg
div
sub
mov
int
pop
add
inc
imul
jge
lods
jno
aas
mov
inc
adc
adc
and
sbb
mov
xlat
fsts
mov
mov
jne
or
lea
jle
movsl
lods
push
adc
int3
sahf
mov
ss
loopne
jns
dec
shlb
ret
lods
ss
inc
nop
repz
mov
fnstsw
imul
inc
inc
xor
rorl
or
iret
push
out
in
rorl
cmp
push
push
xor
pop
cmpsb
data16
daa
xor
mov
pop
stc
dec
push
xchg
lods
jmp
sub
in
jbe
enter
nop
std
and
cltd
pop
jl
lret
xchg
cmpsb
jae
xchg
cld
cs
sub
xor
inc
and
xchg
fstps
mov
xlat
add
push
jg
data16
add
lock
hlt
mov
cmp
mov
lods
ret
cmpsl
fnsave
cs
in
popa
jp
fmuls
loopne
sub
cmp
je
sub
or
out
pusha
and
repnz
jle
mov
icebp
mov
pusha
ret
bound
xchg
divl
fucomp
repz
xchg
add
jl
adc
lods
sbb
cmp
ret
cmp
push
dec
into
dec
inc
and
ljmp
daa
xor
mov
xchg
into
repnz
popf
sub
or
cmp
sbbl
mov
mov
stos
mov
mov
sub
mov
cmpsl
sbb
xlat
int3
js
sub
mov
dec
loope
adc
ror
sub
call
arpl
jecxz
cmc
xchg
sbb
mov
pop
sub
pusha
mov
hlt
jmp
xor
jnp
and
inc
les
push
mov
aaa
push
dec
adc
mov
sbb
movsb
jno
test
mov
fnstsw
imul
int
adc
pusha
int3
testb
mov
xchg
lret
mov
hlt
mov
sbb
fldenv
aad
ret
sbb
jge
jno
cwtl
sbbb
cmp
jecxz
cwtl
xchg
push
ret
add
addr16
jecxz
xor
xor
sub
pop
sub
test
dec
popf
xorl
call
lds
cmc
cmp
ret
and
sbb
lahf
pop
xchg
push
mov
mov
cmpsl
or
pop
mov
cs
and
adc
popf
sbb
sub
and
test
jg
mov
lcall
nop
lahf
and
push
test
scas
int3
xchg
mov
inc
cmc
rclb
pop
dec
cmp
pop
loopne
push
push
push
out
adc
pop
cs
add
es
pop
aas
stos
negb
or
push
push
push
aaa
cld
fdivs
cmp
jl
mov
sbb
mov
xchg
mov
jo
add
pop
fdivp
outsb
push
rcrl
inc
in
inc
dec
lahf
pop
sbb
leave
xor
sub
push
es
aaa
mov
stos
dec
pop
sub
sbb
mov
dec
bound
ret
mov
in
jle
hlt
roll
repnz
mov
adc
das
test
cmpsb
cmpsb
iret
js
es
xchg
dec
dec
pop
and
sbb
adc
sub
cltd
pop
pop
and
mov
ret
adc
je
nop
add
es
jecxz
push
orl
jecxz
stos
cmpsb
dec
sbb
cmpsb
mov
lods
outsl
ljmp
pop
ljmp
iret
jae
je
int
dec
aas
lea
dec
icebp
shrb
xor
mov
xchg
rcrb
pop
nop
test
fadds
sub
dec
or
dec
mov
jle
jae
or
jno
orb
add
dec
shll
test
fimuls
push
mov
ss
lock
test
out
xor
mov
fistps
call
mov
subb
adc
jne
push
idiv
jns
add
std
mov
test
mov
push
add
push
cmpsl
ds
imul
jb
add
sub
mov
xchg
jmp
in
ret
sbb
mov
add
daa
iret
hlt
and
hlt
jb
adc
das
xchg
scas
cs
adc
ret
xlat
jne
in
xchg
fisubl
inc
popa
inc
cmpb
out
outsb
imul
mov
lgdtl
mov
and
sub
cmp
push
lcall
jge
cltd
lods
or
mov
insl
or
mov
sbb
mov
adc
mov
xlat
push
mov
mov
mov
mov
adc
ja
dec
mov
in
dec
idivl
push
lea
fldl
daa
adc
push
mov
cmp
leave
adc
add
in
jb
jmp
cwtl
sbb
test
mov
jne
push
stos
in
inc
xorb
sub
adc
dec
movb
stc
inc
popa
and
addr16
and
ret
sbb
adc
andb
loope
fistpl
sti
arpl
mov
cmp
and
loop
dec
movsb
jmp
outsb
pusha
inc
out
sbb
sahf
xor
push
les
mov
sbb
cmp
ud1
jmp
adc
adcb
inc
adc
out
call
dec
cltd
ret
xor
aaa
cltd
add
pusha
or
or
mov
andl
pop
loope
lods
das
cmp
jae
and
add
dec
adc
cltd
hlt
outsb
or
lret
push
dec
in
cli
xor
jb
scas
arpl
es
daa
fidivrs
movsb
xchg
out
jg
xchg
bound
push
pop
sub
divb
and
jne
sbb
in
pushf
fisubrl
sbb
call
mov
dec
repz
add
or
arpl
es
jne
sbbb
mov
aad
stc
daa
stc
imul
mov
mov
jbe
daa
out
dec
out
scas
ficompl
out
shlb
enter
imul
mov
adc
sub
lret
pop
ror
jl
pop
and
inc
jnp
mov
sub
cli
out
xchg
mov
mov
xorl
add
inc
adc
cmp
in
jo
mov
repnz
and
int3
in
cmp
xchg
push
mov
jle
dec
data16
xlat
mov
je
jns
xor
in
addr16
pop
jb
loope
sbb
inc
dec
lea
icebp
jb
mov
pop
or
adc
in
mov
inc
leave
repz
lret
fdivrp
or
enter
mov
push
int3
aad
adc
out
loop
xchg
fistpl
mov
xchg
int3
test
sbb
cld
xor
testl
movsb
les
cmp
cmp
mov
test
shrl
ret
enter
jecxz
mov
js
or
adc
fidivrs
ja
call
ret
inc
adcb
xor
jl
movsl
xchg
jp
add
mov
sbb
cld
mov
into
push
call
repnz
test
stc
pop
push
out
sbb
adc
lock
dec
xrelease
sub
or
out
aaa
xorl
ret
rcrb
mov
outsb
lcall
bound
jle
cmpl
rclb
push
push
mov
mov
testb
orb
call
das
mov
cmp
mov
movsb
outsl
adc
add
dec
cmp
cltd
shl
mov
fcoms
adcb
call
push
jmp
ds
mov
stc
int3
cs
jle
fsts
adc
ret
cwtl
test
jo
push
pop
dec
mov
sub
jnp
loopne
xchg
iret
sbb
mov
push
adc
push
xor
lods
jb
xchg
repz
sub
shlb
and
icebp
arpl
fstpl
icebp
jnp
or
lock
imul
pop
mov
xlat
je
xor
insb
fldt
xchg
push
sbb
ret
xchg
mov
fwait
out
xor
sub
sti
pop
int
out
mov
pop
cmc
mov
orl
out
mov
sar
xchg
mov
das
test
repz
outsb
xor
inc
mov
lock
mov
cmpl
jl
mov
hlt
lret
add
pop
sbb
scas
jecxz
lods
cmpsb
ja
pop
iret
cmp
ss
inc
cmp
insl
add
pushf
stc
ds
sar
sahf
lds
cmp
clc
and
adc
sbb
xchg
clc
lret
mov
cmpl
movsb
sbb
std
gs
push
add
out
pop
movsb
outsb
aam
outsb
push
aas
js
mov
xor
clc
xchg
test
dec
xor
jo
add
cld
pop
lods
cmp
jbe
mov
mov
aam
enter
jg
loopne
pop
insl
lock
dec
inc
inc
xlat
ljmp
or
or
cmpsb
adc
pop
imul
scas
jmp
cwtl
out
loop
jmp
bound
xchg
lds
xlat
add
fidivs
cwtl
jmp
je
es
data16
sub
cmp
cmpsb
sahf
mov
test
inc
mov
mov
arpl
aas
cmp
call
mov
outsl
ja
jge
dec
cwtl
ret
fldl
and
cmp
aam
xchg
jecxz
out
outsb
xchg
xor
pop
loop
hlt
add
js
or
and
imul
cmp
in
jg
push
ficomps
test
adc
arpl
mov
sub
fwait
inc
push
andb
into
jp
loopne
repnz
cmp
sub
fwait
mov
shlb
push
add
sbb
test
inc
mov
lahf
ja
outsb
push
mov
scas
ds
xchg
or
outsl
dec
xchg
jbe
mov
mov
mov
add
out
imul
inc
shrb
leave
sbb
aad
mov
mov
clc
das
lea
mov
clc
cmp
jp
or
popa
fnstenv
pop
ret
gs
paddq
ja
popf
xchg
sti
adc
ficomps
pushf
pop
enter
push
pop
enter
jno
movsl
mov
push
mov
cs
ljmp
jae
and
lods
out
pop
xor
push
xchg
pop
arpl
es
and
xchg
cmpsl
orb
and
ja
sub
mov
mov
xor
shlb
sbb
xchg
push
popa
mov
popf
sub
mov
jecxz
inc
hlt
mov
push
lret
xchg
pop
imul
push
and
daa
jg
pop
pop
cs
pop
mov
lods
sbb
xchg
adc
push
add
xchg
lea
pop
sbbb
fadds
adc
std
dec
int
popa
aaa
mov
cli
xor
adc
cmp
pop
fbld
fisubs
nop
mov
jae
dec
out
xor
mov
mov
scas
pop
stos
loop
mov
scas
inc
mov
sbb
pusha
mov
int3
repnz
xchg
fstps
mov
sbb
aam
fsubrl
inc
xor
test
jb
pushf
mov
push
cltd
xor
iret
call
stos
pop
test
adc
das
mov
test
xor
out
push
leave
imul
andl
clc
stos
lahf
fs
pop
jp
pop
ja
xchg
dec
pop
je
mov
sbb
push
das
pop
iret
mov
mov
jno
std
pop
xchg
xchg
cli
mov
test
leave
jnp
and
test
add
lret
test
addr16
test
mov
xor
ret
std
andb
add
cli
ds
mov
push
sub
add
in
stos
pop
test
test
lods
fidivrl
inc
xor
cmp
jp
jp
or
pop
cmpl
cltd
cwtl
sbb
jge
fcoml
pop
fwait
mov
and
movsb
sub
bound
cmpxchg
out
and
lcall
jns
out
lcall
movl
sbb
push
push
aad
inc
add
icebp
sbb
mov
int3
insl
notl
sub
mov
outsl
push
cmc
inc
cmc
cmpsl
sti
fwait
push
aad
lock
rcll
inc
xchg
stos
notb
test
stc
fidivl
outsb
and
repnz
loopne
aas
xchg
cmp
push
cmp
sbb
mov
lret
fldcw
mov
lret
push
aad
test
idiv
aam
jb
es
xchg
nop
cli
xchg
xchg
jae
add
fisubl
add
pop
loope
outsb
xchg
stos
jge
out
add
ss
push
test
mov
mov
inc
andl
cmp
jle
sarb
sbb
and
mov
shll
push
mov
les
adcb
dec
cmp
or
pop
add
in
push
and
aas
loope
loop
clc
in
into
cli
das
out
xchg
sub
in
loope
ljmp
daa
js
call
mul
jb
test
insl
dec
movl
dec
rcrl
adc
adc
and
fsubrs
cmp
ss
cmc
aas
jb
push
adc
dec
sub
ja
mov
lds
or
pop
xchg
imul
imul
mov
push
jp
mov
cmp
xor
icebp
insb
push
xchg
pop
xor
in
push
test
movsb
xchg
cs
lret
insb
jae
lods
push
jecxz
add
daa
adc
xlat
das
xor
cvttps2pi
outsb
inc
adc
imul
mov
add
test
xor
mov
sti
mov
push
rcl
divl
jl
pusha
dec
mov
jae
push
pop
or
sahf
mov
push
test
sub
jg
cmp
mov
cld
stos
in
shll
incl
arpl
je
fwait
out
negb
imul
aam
lock
lret
xchg
test
sbb
stos
rcll
js
mov
lret
sbb
orl
cmc
fcoml
fistpll
xor
dec
push
int
dec
js
bound
xchg
lahf
cli
cmp
jge
fisubrs
push
testl
std
jne
inc
xchg
xor
push
sbb
cmp
jae
push
mov
test
sti
dec
out
xor
pop
addr16
ja
sub
or
cld
xchg
iret
js
out
and
xor
out
dec
pop
jl
sbb
jle
shlb
stos
cmp
stc
and
add
pop
jp
pushf
dec
mov
jnp
mov
mov
imul
adc
jg
rorl
ret
sub
jb
jo
fwait
out
cmp
jne
in
jp
std
pop
aaa
mov
mov
les
mov
lods
shrl
sub
jo
push
stos
dec
xor
jge
lea
xor
hlt
jle
mov
cmp
jmp
xchg
and
fwait
pop
leave
insb
stos
aam
inc
popf
ljmp
data16
dec
adc
cmp
push
icebp
ds
mov
arpl
xor
sarl
lods
push
mov
mov
sub
push
push
clc
orb
push
sbbl
shll
cmp
jge
dec
cmp
outsb
sub
test
cmc
lds
mov
filds
dec
ljmp
inc
mov
scas
fistpl
inc
enter
adc
xchg
sarb
xlat
mov
addr16
lods
push
mov
mov
mov
mov
std
stc
fs
jno
add
ljmp
and
lret
lea
xor
xchg
or
sbb
fldenv
push
es
lea
popa
sbb
cmp
or
jb
popf
scas
jecxz
sbb
jo
imul
sbb
lea
xchg
mov
outsb
pop
cmp
xor
pop
add
nop
icebp
movsb
cmp
pop
int3
pop
mov
mov
aaa
imul
mov
mov
jmp
mov
push
sub
mov
aam
push
mov
cmp
lea
jo
cmp
add
mov
lods
ds
imul
ja
loopne
in
sub
mov
dec
xchg
out
push
jo
sahf
inc
or
adc
movsb
mov
and
ret
je
jns
push
dec
pop
into
fimull
mov
sbb
outsl
sahf
pop
mov
pusha
sub
jne
push
add
daa
push
mov
popf
pop
sti
lea
jns
call
xlat
insb
mov
out
jle
push
mov
mov
push
sub
jp
out
aas
pop
lock
scas
gs
sub
add
push
push
push
sub
aad
add
xlat
pop
negl
mov
pop
cmp
cmpb
lcall
add
adc
cvtps2pi
push
ret
movsb
stc
pop
test
mov
mov
mov
push
mov
jb
inc
outsl
adc
sbb
pop
xchg
cmpsb
arpl
and
jnp
sub
mov
adc
cmpsb
mov
gs
push
xchg
inc
enter
push
mov
repnz
mov
sbb
dec
lds
int
xor
xchg
xor
stos
imul
out
ret
cld
sub
xchg
in
enter
pop
push
pop
pop
stos
fsubs
in
jno
mov
mov
or
jns
mov
lea
jno
ret
stos
cld
or
add
sub
inc
pop
dec
flds
or
lods
lcall
insb
adc
xor
add
jno
lock
nop
xor
stos
gs
sbb
and
or
aad
cmp
aad
mov
sbb
dec
add
enter
fsubrs
out
scas
mov
mov
jmp
loopne
cmpsl
mov
popf
push
jmp
sbb
movsl
cli
out
pop
repnz
aam
inc
adc
test
mull
jo
xor
dec
jbe
dec
push
dec
sbb
adc
fucomi
fstpl
lret
xlat
out
jno
pop
aad
les
filds
test
inc
or
icebp
add
cli
jg
into
mov
mov
fidivrl
xchg
mov
add
jge
addr16
inc
aam
test
dec
jmp
lret
loopne
mov
push
push
add
outsl
je
pop
dec
mov
arpl
xchg
inc
dec
pop
xchg
out
aad
jp
sbb
cmp
outsl
mov
out
stc
adc
pop
mov
repnz
xor
sbb
mov
cmpsl
mov
mov
mov
lret
mov
mov
xchg
push
fsts
push
mov
jne
xor
lods
jbe
and
xor
sub
mov
or
dec
icebp
xchg
decb
cwtl
out
jae
pushf
out
inc
test
fsub
cwtl
xchg
and
fwait
pusha
push
clc
lods
jae
push
push
add
lock
out
lods
jae
ret
mov
sbb
inc
in
mov
cwtl
stos
sbb
sti
sti
xchg
in
fisttpl
jne
xor
sbb
mov
call
xor
or
leave
inc
push
cmp
xlat
loopne
xchg
mov
xchg
xor
jb
push
dec
cltd
xor
ja
fisttps
out
popf
aam
jl
pop
sub
movsb
clc
mov
jecxz
and
insl
dec
jg
mov
push
hlt
and
mov
inc
addr16
fdivs
out
out
adc
pop
lods
push
mov
icebp
ja
outsl
adc
xor
sahf
leave
test
cltd
insl
dec
lds
xor
adc
es
fiaddl
add
test
jne
jo
add
sub
scas
dec
fnsave
insb
rcr
lahf
pop
cmp
cmpsb
cmp
leave
mov
cwtl
xchg
ficoml
cmp
mov
addr16
scas
in
sbb
adc
test
xor
xchg
movsl
cmp
sbb
ja
cmp
shll
cmp
push
sbb
sub
or
into
mov
iret
mov
nop
cmpsl
arpl
inc
repnz
aas
mov
cltd
cs
sti
mov
xor
adc
sub
mov
cmp
xor
repnz
rolb
add
xchg
ds
scas
jle
data16
sbb
aad
shrl
sbb
shll
add
inc
mov
adc
inc
mov
dec
scas
movsl
mov
shll
push
inc
out
mov
mov
or
sub
filds
mov
mov
sub
mov
cmc
fdivl
xlat
aas
sbb
sub
outsl
jae
arpl
imul
daa
pop
cli
hlt
pop
add
mov
mov
rolb
cmpl
ss
imul
cmpb
pop
adc
jp
cmp
pop
outsl
sub
mov
pop
sti
cli
aas
ret
pop
and
mov
jl
fmuls
add
popa
add
pop
pop
fldcw
jge
jno
cli
cli
out
ret
xchg
dec
xchg
cs
add
xchg
and
popf
mov
es
divb
lret
mov
cmp
mov
in
pop
aas
roll
add
rep
sub
and
lea
xchg
fs
mov
jmp
paddsb
aad
sbb
mov
movsb
test
cli
xchg
jbe
inc
addr16
adc
and
aaa
imul
pop
jno
pop
mov
lcall
push
clc
data16
cmp
daa
push
ds
ljmp
in
enter
jmp
leave
pop
inc
scas
cmp
add
xchg
test
pop
pop
fildl
pusha
fwait
scas
insl
xchg
hlt
push
lahf
popf
jecxz
sub
sbb
push
insl
xchg
sar
lods
xor
and
push
icebp
dec
add
test
mov
mov
push
jb
push
dec
adc
dec
test
dec
int
push
push
mov
lods
xor
mov
pop
push
outsb
pop
jmp
out
xchg
pop
jns
gs
inc
push
mov
pop
cmp
mov
jb
negb
sbb
or
pop
decl
ds
sub
mov
fdiv
data16
loopne
out
and
inc
filds
js
std
call
icebp
cmp
jl
mov
insb
es
test
test
sub
add
lods
fidivs
cmpsl
mov
sbb
cld
dec
in
sti
cwtl
inc
outsl
or
push
sbb
adc
je
push
sub
icebp
adc
add
dec
or
hlt
jo
std
inc
xchg
int
lahf
pop
or
xor
mov
ds
lods
jmp
mov
add
pop
data16
pop
jno
fisubl
jl
xchg
aaa
pushf
insb
or
shrl
adc
daa
mov
cs
xchg
lea
or
ret
das
shlb
mov
jge
mov
or
sbb
jo
pushf
push
mov
nop
imulb
cmp
mov
ljmp
jb
push
icebp
adc
dec
dec
daa
fidivl
movsl
test
push
movsb
loopne
push
or
inc
xlat
leave
jle
xchg
mov
lret
push
repz
popa
mov
adc
adc
rorb
inc
push
loopne
stc
call
xchg
movsl
into
mov
orb
mov
push
mov
lret
and
xchg
js
ret
mov
or
iret
popf
mov
mov
ret
or
popa
push
xchg
xor
jmp
add
jge
jno
nop
loopne
jmp
je
xor
push
lods
cld
xchg
jmp
xchg
insl
shlb
popa
and
les
pshufw
pusha
daa
push
mov
mov
push
jne
jnp
es
cmp
sub
cmc
in
in
dec
cmp
cmpsl
mov
test
mov
add
or
pushl
mov
cli
arpl
jge
pop
mov
and
sub
mov
jns
push
or
and
adc
sbb
dec
adc
loope
inc
in
push
shl
pop
andl
enter
idivb
into
cs
sahf
dec
rclb
lcall
lahf
int
mov
cltd
dec
mov
imul
packsswb
push
jbe
fwait
cmc
ret
clc
addr16
xorl
lahf
mov
inc
or
movhps
pop
insb
shl
cmc
adc
xchg
xchg
lods
popf
adc
and
or
lret
and
jle
xchg
pop
cmp
imul
hlt
mov
aaa
mov
ud1
cmp
inc
stos
add
cmp
sahf
cld
jbe
lahf
aam
jno
mov
add
adc
sti
aad
stos
push
cmc
push
mov
add
stc
fwait
mov
jg
xlat
aas
daa
mov
dec
and
sbb
xchg
cmc
popa
cwtl
repnz
push
sbb
lods
and
pop
mov
les
add
vdivpd
mov
and
xchg
fisubs
in
cli
dec
push
sub
pop
lock
out
jae
ja
dec
insl
xchg
test
mov
pop
inc
hlt
pop
sarb
xor
pop
ret
inc
std
es
or
movsb
sti
cmp
or
cmpsl
mov
test
add
nop
outsb
frstor
push
xor
add
lods
push
xorl
stos
and
or
popa
pop
cwtl
into
sti
cmp
jecxz
out
addr16
xor
fucomp
repnz
fxch
dec
aad
sahf
aad
push
add
jne
bnd
sarb
mov
aam
add
ds
adc
lcall
jne
movsl
mov
or
mov
fstps
cwtl
fwait
imul
lods
sbb
clc
jne
cmp
adc
inc
xor
jmp
xchg
mov
aas
push
cmpb
mov
pop
mov
adc
in
test
pop
sahf
sbb
movsb
outsl
lcall
jae
add
insl
fiaddl
ds
xor
jo
pop
cmp
push
sub
jno
mov
inc
movsb
inc
cmp
inc
cli
fnsave
sbb
mov
mov
shl
xchg
sbb
xchg
mov
jno
pop
pop
cli
ja
mov
push
movl
mov
xor
outsb
xchg
gs
pop
mov
jmp
scas
sub
popa
insb
push
fdivs
stos
xchg
fnstsw
dec
adc
cwtl
adc
stos
cmpsb
mov
fs
pop
cmp
je
lret
cmp
call
push
addr16
jbe
or
out
out
mov
testl
jo
push
in
mov
in
mov
xchg
adc
pop
and
xchg
addr16
into
fxch
pop
out
and
hlt
sti
jle
and
xchg
and
lods
xchg
jle
nop
pusha
or
or
push
or
rcr
push
packssdw
mov
into
xchg
xlat
js
lret
sbb
scas
dec
test
push
scas
mov
das
lret
xchg
loopne
mov
mov
cmpsl
sbb
roll
sub
into
in
scas
rcrb
es
into
mov
in
cld
mov
jo
test
out
and
jl
outsb
xor
push
mov
inc
fimull
cmpl
popf
lods
push
add
push
push
inc
add
loope
pop
mov
sbb
add
add
xchg
mov
aad
lahf
jge
pop
xlat
sub
clc
xchg
data16
enter
sbb
in
or
or
cmpsl
push
aaa
push
sub
sbb
or
pop
push
shl
in
xchg
loop
in
in
jno
scas
cmpsb
pop
mov
mov
rcl
iret
cmp
cmp
das
insb
mov
outsb
cli
xorb
or
lahf
jns
test
aam
imul
and
lea
and
mov
cmp
jb
mov
testl
rol
andl
push
adc
mov
dec
mov
mov
inc
sbb
cmp
jle
cmp
loope
stos
add
adc
ljmp
push
and
jbe
loopne
scas
fsts
cmc
test
popf
je
sbb
jmp
jg
push
add
and
xlat
and
inc
mov
or
sahf
scas
std
sub
shll
mov
adc
into
nop
enter
sub
out
inc
or
ja
sub
xlat
and
jno
aam
ret
clc
rorl
shr
loope
outsb
xchg
cli
or
mov
xor
cmp
jle
sbb
adc
pop
jl
sbbb
das
or
xor
mov
pop
fsubrl
enter
mov
daa
or
aas
cmp
push
dec
cmp
add
and
repnz
callw
std
sbb
dec
insb
je
dec
jl
nop
xor
adc
pop
push
data16
sbb
push
pushf
clc
scas
into
sarb
leave
mov
outsb
lret
mov
mov
push
sbb
addr16
fldl2t
movsl
ret
outsl
test
jnp
jmp
pop
inc
push
sbb
mov
mov
clc
lcall
loop
ficoml
es
fwait
aam
push
imul
sbb
adc
dec
test
addr16
subb
stos
movsb
shll
popf
call
lods
or
sbb
notb
inc
ja
addr16
mov
imul
inc
cmp
scas
xchg
in
push
cmpsb
push
call
cmp
sbb
adc
cmp
push
lret
push
fmuls
push
mov
mov
cmp
addr16
mov
add
push
cmpsb
cmc
pop
cmp
adc
xor
xor
jl
pop
push
fcoml
adc
xchg
push
jo
xchg
mov
loope
adc
test
icebp
pop
jle
dec
loopne
outsl
mov
leave
aaa
movsl
sub
cld
push
xor
subl
jo
gs
ss
and
int
insb
cmp
pop
shlb
movsl
push
in
cltd
out
in
sti
cmp
mov
pop
scas
mov
fwait
cmpsl
mov
mov
stos
inc
xchg
insl
ss
dec
test
mov
push
xor
xor
daa
adc
out
sub
xchg
xchg
pop
rcrb
mov
shlb
jmp
jmp
into
push
or
icebp
mov
enter
aaa
ret
lods
roll
leave
xchg
mov
rcrb
or
fisubrs
mov
mov
xor
es
ss
aaa
cwtl
jl
xchg
sbb
ret
enter
cmpsl
pop
out
cmp
push
jmp
xchg
hlt
dec
mov
dec
imul
das
sbb
push
cmc
xchg
jns
lret
lret
sbb
and
into
lea
adc
adc
push
inc
and
dec
mov
xor
inc
dec
fmul
divl
dec
push
stos
lcall
in
repnz
out
push
imul
test
test
cld
cmc
lods
jo
fwait
sbb
cmp
sub
fsubl
cmp
push
pop
inc
inc
icebp
and
push
and
push
ftst
das
sbb
cmpb
cld
jno
nop
inc
jge
stos
xchg
jns
mov
imul
sbb
pop
movsb
jne
aaa
hlt
lods
xor
insb
xor
push
mov
out
fcomps
ret
xor
mov
push
dec
pusha
mov
dec
enter
mov
cmpsl
sbbl
pop
mov
pop
ss
dec
pop
out
jns
jbe
jo
xchg
rol
out
mov
xor
xchg
or
mov
fldt
inc
mov
lret
mov
loop
mov
mov
push
cld
xchg
push
inc
int3
add
dec
into
dec
cmp
addr16
or
stos
xchg
xchg
jle
sbb
pop
movsl
mov
js
fs
mov
and
fwait
rorb
dec
lock
xchg
sahf
add
pop
and
push
js
jbe
out
imul
pop
mov
pop
test
mov
inc
or
inc
shll
and
ds
pop
xor
adc
repnz
mov
call
xchg
ds
aad
sahf
test
rcrb
push
dec
inc
push
mov
add
mov
xor
int
and
jge
shll
subb
jne
fisubrl
adc
pop
jae
xor
stos
loopne
cld
jecxz
insb
stos
pop
mov
pop
cmpsl
dec
pop
jl
mov
mov
push
adc
push
imul
inc
mov
test
aaa
push
fsts
mov
push
pop
pop
nop
insb
loopne
lods
cmp
adc
pop
mov
pop
mov
pop
out
push
fsts
rolb
aam
or
es
repz
lods
rorl
push
sub
mov
outsl
push
jne
cmp
rolb
mov
aas
fs
jae
mov
mov
mov
in
xchg
push
push
shrl
mov
mov
sbb
fs
in
mov
mov
dec
sbb
xchg
fcom
jp
movsl
fs
sub
nop
lods
or
arpl
int
sub
not
data16
loop
lds
pop
aaa
popl
jle
inc
jne
cmpsb
pusha
arpl
xorl
adc
dec
dec
hlt
lcall
stos
add
out
jecxz
outsl
imul
ljmp
push
hlt
dec
jbe
ljmp
test
cmp
push
cmp
push
cmc
sub
movsl
sbb
cltd
ljmp
jae
les
sub
mov
test
test
outsb
fisubs
into
push
mov
dec
add
cltd
loop
push
movsb
adc
clc
scas
ljmp
or
iret
add
imul
jne
sbb
mov
dec
inc
gs
cmpsb
mov
outsb
lods
aad
push
push
sarl
in
inc
cmpsb
mov
jmp
pop
xchg
mov
test
loopne
in
imul
scas
add
imul
mov
lock
imulb
cmpsb
cmpsl
dec
sub
jmp
mov
add
xor
mov
push
cmp
inc
add
sbb
pusha
cmp
std
cmpsl
sahf
add
movsb
xor
mov
push
cmp
pop
dec
sbb
ret
mov
fsubs
leave
in
dec
xchg
pushf
dec
js
lea
mov
jp
and
cmc
call
shll
icebp
mov
mov
fistpl
cmpsb
inc
fbstp
xchg
xchg
or
lds
cmp
in
cmc
pop
mov
and
add
pushf
jmp
ret
bound
in
daa
inc
test
fcmovb
cli
add
cmpsb
push
into
insb
andb
and
push
inc
ja
dec
xchg
cmp
pusha
inc
fdivrp
jae
cmp
repz
repnz
cwtl
fwait
in
pop
jns
lret
pop
and
push
or
jnp
inc
mov
xchg
popa
sbb
not
mov
inc
ret
jno
gs
mov
xchg
jg
stos
push
pop
or
outsl
add
les
pop
scas
loopne
stos
js
not
in
xor
cmp
add
cmpsb
mov
sub
and
into
lods
xchg
mov
push
aad
int
test
stos
jo
fwait
mov
adc
push
stos
or
pushl
sbb
push
ret
mov
add
lret
jno
das
ja
push
mov
mov
xor
insl
lods
dec
mov
aad
dec
jmp
pop
enter
mov
push
ds
dec
stos
and
inc
adc
and
jle
gs
hlt
lret
inc
cmpsl
bsf
sarl
dec
cli
cmc
push
imul
jnp
fiadds
inc
mov
daa
out
sbb
rcrb
nop
inc
scas
in
push
mov
inc
aaa
mov
mov
shlb
sbb
mov
in
mov
out
pop
xor
das
mov
test
into
mov
mov
or
jnp
dec
or
dec
dec
loope
cmp
sti
iret
jp
faddp
xchg
in
test
negb
es
rclb
add
jb
outsb
jno
les
popa
cmp
aaa
and
lods
mov
dec
push
jnp
hlt
mov
shrl
and
or
mov
add
movsl
nop
lods
sub
sub
pop
xor
sub
lock
pusha
mov
sbb
jmp
mov
dec
rcl
data16
xor
les
xchg
call
dec
inc
jg
adc
jnp
jbe
addr16
sbb
adc
dec
cmp
out
cmp
xlat
xchg
std
mov
in
push
dec
std
adcl
outsl
loopne
inc
imulb
mov
scas
lods
test
mov
inc
addr16
sbb
or
testb
and
and
fnsave
sti
imul
and
mov
fdivrs
ss
add
icebp
insb
lahf
mov
mov
pop
cwtl
push
or
inc
mov
into
jns
push
and
xchg
jge
in
xchg
std
xchg
stos
dec
push
or
std
sbb
xchg
mov
mov
xchg
jmp
rcrb
jg
ljmp
sbb
inc
jno
cmpsl
or
js
movsl
and
daa
stc
je
std
xchg
jmp
nop
push
cmp
fucomi
cmp
mov
das
push
rcrb
sbbb
cmp
and
mov
iret
imul
jmp
aas
nop
ret
fisubl
fdiv
xor
clc
movd
jmp
push
movl
push
cmp
sub
mov
test
popf
mov
adc
lahf
xlat
sub
xlat
in
stos
movsb
jp
pop
xor
inc
push
aas
jle
add
fcoml
pop
cmpsb
xor
adc
add
inc
or
pushf
fneni(8087
jle
repz
dec
popf
inc
adc
pop
es
jnp
fmuls
push
outsb
outsb
ss
lcall
jno
cs
arpl
aam
call
cli
ljmp
mov
xchg
or
adc
dec
leave
lods
pop
jg
popf
je
sarl
add
aam
xor
jno
addr16
dec
ljmp
push
jle
stos
inc
fisttps
mov
pusha
fwait
xlat
pop
out
adc
test
popf
push
xchg
lods
loop
outsl
sbb
sub
push
fcoml
cs
or
outsb
jle
int3
xor
pushf
cmp
rolb
cld
dec
jae
mov
mov
loopne
xchg
add
aad
push
pushf
jns
mov
xor
in
and
push
je
xor
add
add
lea
jg
sub
xorb
in
add
icebp
repz
jo
mov
xchg
insb
shrb
pop
mov
ja
shrb
xlat
pop
movsb
inc
xor
xchg
dec
sbb
fiaddl
out
nop
sub
jle
xchg
ret
icebp
inc
shlb
out
push
mov
rcll
imul
push
lock
inc
xorl
sahf
arpl
inc
lret
sub
mov
insb
mov
add
pushl
popa
lock
les
mov
pop
sbb
into
adc
pop
in
xor
mov
lret
cmc
outsl
mov
test
mov
jae
mov
dec
into
xor
sbb
pop
out
fwait
pop
insb
and
int3
cld
mov
jge
mov
fists
sarb
pop
mov
sub
xchg
hlt
mov
in
popa
test
mov
inc
jecxz
cmp
push
and
hlt
sbb
jns
dec
cmp
pop
in
mov
imulb
testl
ss
dec
scas
insl
cmp
push
sbb
mov
sub
inc
inc
mov
push
arpl
sub
adc
jg
ja
jns
out
shrl
or
push
test
pushl
inc
repnz
inc
or
cltd
xchg
sbb
dec
mov
into
xchg
jno
sbb
and
popa
cmp
sub
lret
pop
mov
and
les
cmc
and
mov
mov
push
rclb
inc
adc
clc
in
mov
imul
push
xchg
xor
pop
insb
jle
jmp
ljmp
in
jnp
mov
mov
je
fimull
mov
add
cwtl
mov
nop
xor
mov
mov
pop
mov
mov
dec
and
insb
ds
jne
cmp
mov
jnp
push
loop
jmp
add
test
inc
mov
xchg
add
xchg
xor
cli
and
int
mov
out
mov
data16
inc
or
cmp
mov
je
and
sbb
movsl
lods
lahf
push
outsl
jge
adc
jns
push
ret
cltd
mov
pop
outsl
cwtl
xor
subps
lcall
mov
push
and
push
push
popa
pushl
add
data16
add
sbb
arpl
test
jns
push
or
sbb
std
sbb
jne
imul
adc
std
bound
jo
sub
clc
shlb
push
push
mov
iret
rcll
or
jae
pop
andb
nop
inc
xchg
xor
nop
out
test
mov
leave
stc
pop
inc
mov
pop
xchg
stc
in
jl
into
pop
or
cmp
inc
loope
pushf
ljmp
mov
cltd
mov
jae
jnp
dec
mov
pop
punpcklwd
adc
mov
movsb
pop
and
clc
xchg
mov
jno
adcb
xchg
repnz
adc
xchg
mov
add
mov
and
sub
pop
out
or
fcoml
xchg
popf
sti
nop
push
lea
and
push
and
mov
cmpxchg
pop
jb
mov
mov
in
mov
mov
insb
in
lcall
sub
rclb
nop
adc
imul
and
adc
dec
xchg
and
xchg
aad
clc
jmp
int3
mov
cmp
loopne
out
push
stc
dec
inc
xchg
test
lahf
inc
mov
fcmove
outsl
fwait
setl
jae
fidivrl
or
inc
mov
pop
in
cmp
loopne
inc
popa
push
sub
pop
sub
mov
lcall
jno
sbb
je
push
pop
inc
jmp
cs
lcall
inc
push
push
lods
push
aad
fs
ficoml
xchg
or
in
or
hlt
dec
lcall
adc
pop
inc
seto
int
shll
movsl
daa
inc
add
mov
adc
inc
addr16
inc
adc
xchg
cmp
jbe
aad
test
mov
and
lret
or
out
in
gs
inc
popa
iret
pop
adc
pop
test
xor
ja
loope
je
mov
push
cmp
push
adc
jl
jne
pushf
and
pop
cmp
stc
inc
cmc
dec
lds
aam
rcrl
sahf
aad
cltd
mov
mov
sbb
xor
xchg
lock
out
outsb
jae
push
jb
push
mov
pusha
sbbl
jnp
cmpsl
orb
mov
xor
mov
lahf
pusha
lret
sub
pop
mov
stos
xor
add
cmpl
adc
scas
inc
jns
sbb
pusha
dec
or
aam
aas
mov
mulb
test
and
xor
xchg
outsb
sbb
push
popa
mov
lcall
pop
jl
movsb
mov
dec
adc
stos
pop
and
into
pop
sbb
jno
or
dec
rolb
in
or
dec
cmp
xchg
jns
aas
in
pop
and
pop
xlat
ret
cmp
adcl
or
or
and
pusha
jnp,pt
dec
hlt
or
push
in
daa
and
lods
into
sub
xlat
stos
xor
dec
int
loop
imul
mov
mov
rcr
and
adc
xlat
sti
mov
inc
outsb
sbb
xor
leave
or
mov
pop
cmp
fbstp
jo
xchg
push
aas
pop
mov
add
out
push
jnp
dec
rclb
data16
xchg
stc
fwait
xchg
lock
mov
imul
cltd
xchg
mov
ja
imul
imul
stos
pushl
nop
cmp
and
lcall
das
orb
mov
adc
insb
adc
andb
hlt
push
mov
scas
iret
add
and
repz
cmpsl
xchg
movsl
dec
pop
insb
int3
mov
dec
je
pop
out
mov
mov
pop
fs
adc
loopne
inc
sub
das
jmp
loopne
and
sub
and
or
adc
or
sub
ror
add
add
leave
les
mov
push
das
cmpsb
add
sub
scas
orl
pushl
xchg
push
mov
and
or
sub
fisttpll
adcb
push
shlb
fisubrl
xor
sbb
pushf
aam
xor
imul
cmp
adc
sbb
xlat
test
jne
fwait
rorl
sbb
enter
jns
ss
mov
into
sti
ret
cmp
fwait
idiv
lret
sbb
rcr
sahf
bnd
xchg
mov
fwait
xor
mov
fs
mov
xchg
sahf
push
lods
sub
out
jnp
jge
in
mov
or
inc
mov
sti
loope
fs
sbb
leave
in
mov
pop
push
inc
in
aam
pop
and
mov
dec
xchg
mov
ss
test
cmp
dec
orl
mov
adc
sbb
push
ss
loopne
mov
fnstenv
add
popa
pop
add
cmp
das
ljmp
xchg
ljmp
fwait
jmp
std
loop
shll
lahf
adc
inc
rcll
stos
fcomp
out
push
mov
int3
aaa
shlb
popf
cmp
pushl
mov
arpl
scas
jae
add
xorb
fnstcw
jge
adc
sbb
pop
pusha
mov
mov
add
lods
and
push
jns,pt
data16
xor
mov
fwait
xchg
stos
les
adc
cwtl
outsb
xor
sub
mov
data16
je
jle
out
cmp
lret
jge
dec
add
stc
sarl
mov
push
js
addl
fbstp
movsl
mov
call
arpl
dec
lret
or
insb
jle
rol
mov
loopne
push
repnz
push
and
xor
nop
dec
mov
add
jge
cltd
frstor
cwtl
cmp
jne
jnp
int3
dec
push
jl
and
and
sti
add
into
loop
push
int
incl
adc
dec
cmp
ja
loop
shrl
xchg
jns
sub
mov
push
testb
pop
cmc
jmp
stos
out
sahf
cli
push
mov
cltd
or
ret
adc
movsb
sbb
ljmp
cmp
mov
pop
repnz
xchg
icebp
jmp
fwait
out
ss
cmp
imul
pusha
rcl
sbb
adc
mov
push
fldcw
shll
pop
in
mov
lret
add
jecxz
aas
scas
push
les
sub
ret
cmc
pop
mov
outsb
add
or
cmp
inc
in
mov
xchg
xchg
dec
outsb
mov
aas
dec
jp
ljmp
jmp
popa
pop
push
push
pop
out
dec
pusha
sbb
lret
out
das
cmp
out
mov
adc
js
push
adc
adcl
dec
cmp
dec
inc
mov
nop
imul
xchg
inc
add
sbb
mov
jg
aad
add
inc
inc
insl
xchg
dec
dec
cli
out
mov
inc
push
mov
shlb
sub
add
loop
adc
call
pop
jle
add
pop
sbb
orb
in
data16
cmpsb
adc
jb
stc
mov
in
lods
std
dec
push
ss
jmp
adc
sub
push
sbb
jno
inc
arpl
scas
or
jecxz
in
fstpt
mov
stos
dec
dec
inc
pusha
or
repz
push
test
mov
aas
ret
or
ds
pop
mov
mov
ds
aas
jp
mov
pop
pop
jne
cmp
fstpl
inc
clc
popf
ljmp
jno
sub
in
cmp
xor
inc
mov
mulb
lods
push
inc
lea
mov
add
into
xor
sub
test
shrb
mov
addl
les
xchg
dec
sbbb
idivb
jle
cmp
outsb
sbb
mov
enter
mov
xchg
mov
movsb
test
dec
daa
or
shlb
shrl
mov
jae
popf
add
mov
popf
pop
xchg
scas
dec
or
mov
test
xchg
repnz
fwait
mov
cmp
or
scas
lods
cmp
int3
stos
mov
cmpsb
push
xlat
pop
repz
xchg
test
mov
adc
aam
addl
jecxz
sub
sbb
mov
pop
adc
test
insb
and
xor
mov
xor
nop
or
cmp
add
lods
leave
icebp
das
pop
shll
xchg
dec
xor
jl
push
in
jb
outsl
push
sub
out
lea
in
xor
dec
mov
add
push
pop
jge
xor
icebp
aas
cmp
mov
std
jns
cmp
aas
add
push
add
mov
push
bound
movsb
idivl
push
mov
xchg
jle
add
stos
sahf
pusha
add
arpl
das
and
xchg
mov
dec
xchg
sbb
fs
or
loope
sub
mov
xor
mov
and
faddl
bound
sub
in
dec
cld
mov
jnp
and
sbb
addb
xchg
addb
movsb
push
imull
cmp
lahf
or
pusha
shlb
incl
dec
jmp
cltd
push
in
jnp
fcom
lahf
dec
nop
rol
mov
mov
repnz
sbb
pop
mov
popf
mov
movsl
xor
stos
aam
pop
scas
sub
mov
scas
adc
insb
in
int3
fnsave
sbb
xchg
addr16
call
fisttpll
icebp
pop
stos
inc
decb
mov
lcall
sub
mov
jg
push
mov
jecxz
sub
aaa
cs
add
jl
fsubrp
aaa
xor
jne
aas
jno
shlb
inc
outsb
test
push
inc
or
test
mov
stc
clc
stos
fwait
jecxz
fucompp
and
fisttpll
std
mov
ja
incb
mov
and
arpl
int3
orb
mov
pop
fstps
sub
pop
fnstsw
aas
pop
or
mov
loopne
push
push
sub
xchg
out
pusha
cltd
jle
cmp
mov
jl
jp
cmpsb
fnstcw
insb
push
lock
mov
je
push
int3
mov
push
add
mov
ja
out
cwtl
xor
inc
mov
mov
jp
loope
and
sbb
mov
shl
sbb
das
push
sar
cmp
sahf
in
decl
movsb
mov
and
xchg
sbb
mov
pop
icebp
pusha
stc
std
lds
dec
js
jnp
aam
push
popa
cmp
mov
xor
fisttpl
mov
and
scas
adc
add
notl
jecxz
mov
cmc
xlat
lods
pop
sub
mov
push
jo
cmp
loop
lcall
add
pop
dec
insl
mov
mov
mov
ss
aam
sbb
rcr
mov
adcb
into
js
in
xlat
fimull
pop
subb
jecxz
cmpsl
aas
imul
call
xchg
sysexit
and
lahf
test
fidivl
mov
repnz
push
jl
and
fsubl
xchg
imul
pop
pop
jp
lea
add
push
or
shrb
fildll
mov
xchg
push
addl
pop
fisubl
movsb
repz
jmp
push
mov
mov
and
mov
mov
pop
mov
cmp
mov
dec
adc
stc
lahf
dec
cltd
fisubrs
pop
lret
scas
add
pop
push
mov
lea
ljmp
or
or
icebp
cld
fs
or
xor
repz
jg
or
ret
std
inc
cmp
sbb
fistl
cs
push
sub
cmp
jno
push
mov
pushf
and
mov
jbe
push
inc
or
xor
test
xchg
gs
ljmp
std
mov
dec
mov
dec
stos
bswap
mov
xchg
pop
dec
mov
sub
call
mov
bound
imul
pop
out
bound
movsb
mov
add
mov
imul
pop
clc
jle
in
and
xchg
mov
aam
flds
pop
adc
fwait
out
lock
leave
push
adc
ljmp
mov
xorl
pop
inc
mov
pushf
pop
in
popf
mov
mov
fs
sahf
sbb
sub
mov
cmp
push
inc
insb
or
incl
stos
test
cs
popw
jecxz
pop
pop
arpl
push
sbb
out
lret
jmp
sub
sub
lods
inc
xor
push
mov
jp
jno
pushf
shll
mov
cmp
test
out
inc
jg
ljmp
incb
jno
jne
cmp
sbb
arpl
pop
stos
mov
push
aaa
push
stc
adc
in
shrl
iret
imulb
push
push
into
sub
xchg
push
subl
push
jecxz
mov
out
jb
and
xchg
sbb
pusha
das
mov
cmp
or
push
fists
xchg
jp
add
in
sbb
pop
cmp
xor
or
sbb
mov
push
or
xor
shll
inc
pop
fiadds
mov
jle
fdiv
inc
xor
aas
xchg
mov
stc
clc
iret
dec
inc
shr
dec
push
push
add
and
xchg
jge
int
mov
sub
shrb
mov
mov
jl
out
xor
imul
fdivl
sub
out
add
xchg
sarb
lods
dec
cmpsb
or
jle
mov
test
adc
es
ja
ret
fidivl
push
push
lock
mov
leave
out
pop
lahf
test
int
jmp
ss
or
push
shlb
push
cmpsl
add
push
pop
sarb
jbe
adc
xchg
add
fstpt
insl
movsl
adcl
iret
fcomps
push
or
stos
push
clc
movsl
lock
es
or
mov
stos
mov
pop
idivb
push
nop
mov
scas
and
xchg
cmp
cmp
cmpsb
or
cld
adc
push
pop
dec
fsubrl
adc
out
aas
aas
in
jecxz
divl
fisttps
movsb
stos
xchg
sub
ror
mov
xchg
or
inc
imulb
in
in
add
push
jo
int
adc
sbb
pushl
test
dec
pop
jno
arpl
in
push
fs
inc
mov
mov
or
pop
lcall
dec
lret
popa
repz
clc
mov
dec
rorl
addl
add
adc
xchg
mov
call
push
outsb
loopne
je
rorb
js
sarl
fisttps
cmc
adc
sub
jnp
mov
xchg
dec
das
push
lock
sub
popa
adc
sub
in
imul
sub
insl
sub
addl
push
insb
jecxz
loop
leave
adc
and
dec
or
or
leave
js
stc
jmp
subb
mov
add
mov
sub
sbbb
mov
pop
lcall
out
jae
jp
jge
push
addr16
gs
rcrb
testb
ljmp
loopne
adc
mov
mov
pop
fistpl
xchg
sbb
push
jg
rorl
mov
add
cltd
push
cwtl
xchg
jecxz
and
aad
dec
dec
dec
add
std
xchg
mov
dec
leave
sub
xor
cmc
sub
mov
mov
jmp
jle
dec
movsb
and
pushf
icebp
push
ss
mov
pop
sub
xchg
test
loopne
outsl
cltd
pop
test
arpl
dec
or
xchg
jbe
inc
adc
lods
cmc
push
mov
add
outsb
dec
pop
mov
jne
es
call
sbb
out
movb
arpl
roll
mov
mov
cmp
ret
lret
mov
lahf
popa
outsl
std
lea
add
out
iret
lods
int3
adc
adc
dec
cmp
xor
xor
jnp
push
test
xor
push
rcrb
mov
je
xor
shll
jmp
pop
adc
testl
popa
push
addr16
ljmp
sbb
pop
jmp
xchg
sahf
dec
dec
pusha
ret
rorb
xchg
ljmp
in
out
shrb
xchg
ljmp
xor
mov
ficomps
ja
xlat
adc
inc
dec
jmp
adc
movsb
add
cmp
or
inc
movsl
sbb
mov
jbe
rcll
out
or
adc
ds
xchg
mov
xchg
data16
and
mov
test
mov
push
int
jns
add
mov
cli
es
mov
sbb
and
ror
xlat
ficoml
leave
mov
or
push
xor
xchg
call
arpl
xor
ret
push
add
into
jo
inc
mov
mov
dec
push
mov
push
mov
sbb
mov
fidivrs
lret
adc
js
call
gs
cmp
sbb
lret
xchg
or
dec
aaa
sbbb
jb
push
cmc
jle
cmp
loop
in
mov
inc
mov
pop
mov
loope
pop
lret
push
jno
inc
sahf
push
cmp
mov
ljmp
or
popf
inc
cwtl
pop
adc
push
add
cmp
sub
xor
sahf
push
push
out
int3
inc
pop
jnp
pop
out
lds
loop
add
ret
mov
mov
push
test
xchg
xor
adc
push
lret
xlat
faddl
addr16
xchg
cwtl
pop
outsl
gs
jmp
dec
stos
outsl
je
stos
dec
cmc
outsl
add
ffree
rcrl
mov
notl
test
repz
mov
xor
stc
lahf
xor
jb
dec
sbb
outsb
mov
hlt
shrl
and
push
icebp
std
mov
mov
mov
ljmp
push
pop
push
das
ss
push
sbb
mov
sub
adc
jb
fsubrl
xchg
xor
lds
fwait
ss
sub
pop
xchg
lret
dec
les
xor
fwait
imul
call
and
js
mov
add
inc
fidivrl
aas
aad
mov
mov
outsb
mov
jae
push
cmpsl
add
sahf
sub
jge
dec
xorl
jo
pop
pop
out
outsl
lret
sbb
cmpl
xchg
lock
mov
cmp
add
dec
push
test
add
pop
sbb
xchg
add
jge
icebp
xor
in
and
stos
or
xchg
jge
push
or
or
push
movsl
in
cli
push
cmc
pop
mov
mov
dec
xor
hlt
ljmp
mov
rcll
mov
imul
sub
sbb
pop
movl
jbe
push
mov
sarb
sub
add
xchg
aad
psadbw
movsb
mov
fimuls
or
mov
pusha
pop
pop
cltd
test
mov
xchg
dec
mov
xlat
sbbl
repz
xchg
push
add
sbb
ror
nop
dec
inc
fcomps
cmc
test
jecxz
ljmp
fstpt
arpl
movsb
and
rclb
icebp
fldl
cld
inc
mov
std
mov
cmpsb
stos
xchg
daa
or
mov
cmp
xor
sarb
push
fimuls
mov
xor
inc
test
lods
scas
test
inc
add
cltd
xchg
push
std
fists
xchg
push
loop
mov
sti
inc
mov
xchg
aas
out
mov
imul
lahf
out
xlat
add
jecxz
aam
mov
lods
in
movsl
pop
push
xchg
push
lret
imul
or
mov
or
adc
and
jb
sbb
negb
dec
lcall
and
int3
nop
out
data16
aad
and
aam
call
or
outsl
pop
notb
loopne
loop
inc
sbb
cltd
adc
push
pop
push
cmpsl
push
push
sbb
cwtl
xchg
jle
sahf
jle
mov
mov
inc
or
xor
cmpsl
fcoml
jbe
mov
iret
add
mov
inc
mov
pop
in
pop
lret
lds
cmc
adc
divb
jb
push
pusha
mov
dec
inc
loope
xor
xlat
xor
mov
cli
xorl
movsl
mov
jae
mov
sbb
inc
in
idivb
or
xchg
pusha
xchg
lock
xchg
test
pop
adc
dec
mov
movsl
push
call
clc
rcll
sbb
fstpt
imul
pop
dec
shrb
cmpsl
jbe
dec
add
xchg
mov
jmp
stc
lea
pop
jno
in
sub
jmp
cld
lret
sbb
test
es
mov
pusha
xchg
mov
mov
es
and
adc
push
bound
xor
repz
xor
std
jno
aad
imul
outsb
mov
and
fwait
rcrl
ds
jmp
adc
pop
or
xor
xchg
daa
movq
mov
mov
pop
cmc
pop
pop
mov
and
xor
ljmp
sbb
pop
repnz
pop
iret
outsb
movsb
jp
mov
enter
xor
cld
fs
xor
inc
push
popl
jp
daa
jmp
inc
or
inc
loop
cli
lea
mov
jle
add
mulb
ljmp
cmp
int3
sub
mov
loop
or
sbb
pop
push
sub
ret
mov
imul
int3
mov
rcrl
ret
negb
mov
gs
repz
out
and
rorb
or
cli
scas
mov
mov
popf
inc
add
sahf
push
jmp
jo
push
adc
in
xchg
loop
fsubl
push
and
dec
insb
adc
ret
dec
push
insl
rorb
xor
mov
xchg
mov
lds
repnz
push
sbb
sub
loop
movsl
inc
test
cmp
ljmp
scas
lahf
stos
mov
lret
dec
jno
or
mov
push
repnz
add
arpl
shlb
mov
popf
fsubl
adcl
adc
shlb
mov
je
inc
mov
out
or
int
mov
inc
pop
or
jg
es
push
sar
pop
shlb
xor
inc
cmp
fs
add
xchg
lahf
mov
test
mov
stos
test
add
and
adc
stos
dec
dec
add
scas
sbb
pop
lret
in
lods
cmpsl
mov
ret
push
push
mov
mov
rcrb
adc
mov
add
and
mov
jo
push
int
inc
push
xchg
jmp
xor
mov
cmc
clc
mov
jmp
xchg
pop
std
insl
cs
icebp
xchg
mov
jle
mov
aas
pop
jmp
sub
jne
inc
mov
daa
jb
dec
cmp
pop
jo
xor
pop
or
cli
add
sbb
es
gs
push
inc
push
pushf
cs
xor
push
test
fildl
imull
inc
iret
mov
ljmp
and
mov
dec
cltd
xchg
icebp
js
stos
xchg
cmp
jmp
or
lock
sbb
add
cwtl
mov
dec
ja
mov
jnp
dec
aam
sbb
cmpsb
fsub
in
lahf
lret
jle
mov
mov
arpl
jbe
cmpl
add
cld
push
jmp
iret
daa
ret
lcall
inc
cltd
sarl
adc
lock
xchg
push
lret
pop
call
sbb
push
adc
add
jae
mov
jns
xorb
and
mov
je
sub
pusha
sarb
ds
shrl
outsl
cltd
sbb
movsl
test
xor
sub
dec
fisubs
cld
inc
dec
xlat
push
push
mov
inc
fistpll
aas
daa
in
mov
sbb
mov
mov
jno
aad
cmpsl
cld
mov
add
push
adc
int
lret
push
cltd
and
mov
ret
lret
mov
stc
sbbb
and
jmp
sub
mov
mov
call
rolb
shll
sub
shll
popf
aam
cld
cwtl
je
ds
outsb
and
cltd
rorb
out
ret
jle
push
xor
add
pmuludq
aaa
cwtl
inc
and
sbb
xchg
push
mov
jl
mov
add
hlt
cmc
push
xchg
pop
js
jmp
fcom
add
or
sbb
out
gs
icebp
aam
mov
jge
sub
mov
add
stc
daa
insb
cld
xchg
pusha
xchg
outsl
es
js
dec
inc
lods
aam
testl
out
push
mov
cwtl
fistpl
sub
test
add
pop
test
pushf
and
inc
aaa
mov
dec
out
mov
push
rol
rcll
mov
adc
dec
xchg
test
jnp
xor
push
mov
mov
inc
mov
popf
cmp
mov
mov
lahf
in
cli
mov
mov
cmp
mov
add
outsl
add
xchg
inc
mov
cmp
movsb
xchg
iret
test
mov
fistl
adc
sub
repnz
sarb
pop
cmp
out
cmpsl
ja
xchg
popf
inc
fimull
imul
xor
popf
dec
xchg
pop
sbb
xchg
jl
arpl
xor
fs
inc
adc
imul
daa
les
sbb
iret
ljmp
inc
test
xor
scas
out
cmp
or
sub
repz
mov
dec
push
jmp
adc
shlb
fidivl
mov
repz
adc
jmp
daa
xorl
daa
xchg
pop
jb
pop
or
jne
aaa
sbb
dec
sub
mov
dec
push
xchg
cmp
leave
push
fistps
into
cmp
sbb
and
call
enter
push
sub
jb
jb
inc
je
ret
pop
jne
and
push
iret
clc
loopne
int
bnd
and
cwtl
or
in
mov
xchg
cli
iret
dec
fsubrl
sub
stos
jl
xor
adc
sahf
push
inc
xchg
dec
stc
fisttpl
lret
sbb
in
add
xchg
imul
jg
mov
pop
outsl
mov
divl
insl
ds
push
cmpsl
cmp
xor
inc
cmp
cmovbe
gs
xchg
pop
or
bound
mov
sti
add
test
dec
stc
jae
jecxz
cmp
mov
mov
mov
out
pop
mov
and
push
push
inc
or
sahf
pop
movsl
mov
pop
out
push
bnd
xlat
cmp
mov
mov
call
pushl
or
stos
adc
stc
iret
push
jp
mov
sbb
xchg
pop
mov
sti
push
leave
push
rorl
enter
jnp
sbb
scas
arpl
loope
lahf
test
cmp
and
xchg
push
push
mov
rcll
aam
xlat
insb
jno
repz
mov
aas
or
leave
push
pop
sbb
addl
aaa
repnz
lea
cwtl
leave
divl
dec
insb
xchg
jge
sti
dec
popa
cmp
das
xchg
iret
in
cmp
xchg
insb
bswap
lods
stc
lcall
mov
mov
les
mov
lahf
mov
mov
sub
pop
aad
nop
push
outsl
lock
add
mov
sbb
mov
stos
xchg
sarl
fidivrl
les
ficomps
inc
ret
mov
in
in
mov
add
jge
mov
fstpt
sub
lods
faddp
mov
cltd
push
adc
movsl
addb
or
rcrb
scas
ja
xchg
fstpl
lcall
xorl
or
sub
or
lcall
pop
cmp
outsb
and
adc
int3
or
mov
aas
add
push
push
rclb
xchg
pushf
fs
pop
imul
cmp
dec
sub
gs
dec
rdmsr
mov
lea
iret
inc
adc
filds
pop
lcall
adc
xchg
lods
ret
hlt
es
sub
addb
pop
jl
push
daa
je
iret
lds
insb
mov
push
fbstp
sub
mov
imul
xor
popa
mov
inc
mov
inc
les
cmpsb
std
jnp
mov
mov
sbb
sub
psrlw
lock
hlt
in
sbb
or
adc
iret
mov
sti
or
push
iret
repz
jecxz
mov
xor
decb
fcmovnb
test
les
subb
sbb
adc
fstl
mov
push
hlt
out
adc
lods
into
std
testl
aam
or
aam
cmp
or
cld
lcall
clc
pusha
and
jecxz
lods
jae
imul
lret
and
jmp
pop
sti
pop
pop
mov
in
mov
das
fsubrl
in
loopne
and
mov
dec
push
call
int3
test
loope
dec
icebp
sahf
pop
data16
pop
xor
in
jle
mov
jmp
and
sbb
mov
lock
shrl
pusha
mov
jmp
add
cmpsl
fldenv
fwait
xchg
test
addb
call
xchg
xchg
xchg
pusha
jmp
mulb
mov
mov
adc
mov
push
push
and
into
jl
xor
jns
ja
push
jae
pop
push
mov
xor
sbb
cmp
adc
out
ljmp
outsb
inc
jge
ja
xchg
jle
mov
pop
xchg
lock
jo
bound
enter
sub
push
lea
or
mov
xchg
sbb
xchg
call
aad
cwtl
test
adc
pop
inc
in
vpcmpeqd
adc
enter
add
mov
ror
fnstcw
jbe
jb
movsl
aad
and
pusha
xchg
inc
sbb
xchg
out
mov
push
push
sub
mov
movsl
clc
test
mull
fbld
mov
add
pop
fimuls
ficoml
out
in
aad
addr16
loope
push
push
mov
inc
mov
mov
icebp
arpl
xor
xor
fisttps
aas
pop
push
out
enter
push
cmp
fucomp
ror
fdivrl
sti
inc
into
pop
daa
cmp
pop
adc
cs
and
popf
and
sbb
notb
fcoms
repz
ljmp
bnd
xchg
mov
movsb
out
jmp
pop
test
lods
or
jne
les
cmp
test
ret
or
xor
repz
sub
bound
jb
push
add
adc
in
stc
push
push
add
mov
dec
cmpsb
mov
xchg
or
fisttpll
mov
mov
jmp
inc
pop
cmp
cwtl
adc
xor
repnz
fisttps
inc
mov
mov
mov
stos
ljmp
push
and
jp
outsl
leave
pop
mov
xchg
rolb
insb
cmpsb
jge
pop
scas
push
mov
shr
xor
dec
and
ret
jb
shrl
pusha
or
push
cmp
call
cmp
sbb
xlat
sub
sub
int
mov
cmc
data16
mov
orl
inc
mov
in
js
pop
mov
dec
adc
jge
adc
mov
mov
in
xlat
jcxz
in
jno
jg
cwtl
data16
xor
xor
sbb
or
or
cmp
pop
addb
ficompl
dec
stc
lods
xor
xor
lock
jecxz
std
in
jl
cld
sbb
and
int
pop
jl
aas
mov
sbb
or
outsl
pop
push
roll
mov
lea
and
clc
mov
xor
mov
xor
aas
stos
cmp
bound
stos
push
shl
or
jmp
sbb
popf
rol
leave
cmp
popf
fdivl
cmp
mov
lret
orb
sub
test
inc
xchg
xchg
or
sti
adc
sub
mov
inc
outsl
dec
leave
mull
sbb
movsl
outsl
jo
push
rcl
push
pop
ss
mov
push
jno
xchg
rclb
pop
test
push
pop
sub
cld
dec
test
push
mov
inc
test
pop
push
test
inc
ds
fistpl
icebp
mov
add
mov
cwtl
repnz
push
mov
push
sbbb
adc
out
mov
mov
or
int
movsb
push
shll
lcall
sbb
jo
push
mov
xor
sti
xor
out
jg
xor
lahf
add
pusha
fst
or
adc
imul
add
push
leave
mov
ret
in
loop
prefetcht2
pop
aam
aaa
sbb
in
das
xchg
mov
and
ljmp
mov
or
dec
scas
xlat
mov
lock
push
mov
test
lahf
cmp
insl
neg
imul
mov
mov
jl
pop
fsubl
mov
sbb
lea
les
int3
adc
and
imulb
xor
or
sbb
add
push
inc
dec
adc
sbb
sbb
dec
arpl
lcall
pop
imul
jb
add
xor
aaa
xchg
add
subl
and
sub
repnz
mov
loopne
cltd
jne
dec
lock
lret
outsl
ds
hlt
jb
ret
pop
ljmp
push
lods
xchg
pop
dec
mov
subl
lret
in
aam
outsl
mov
push
jb
cmpl
notl
mov
add
inc
xor
and
jnp
aas
stos
lds
clts
or
rorl
icebp
repz
or
jbe
out
daa
lea
inc
pop
cmp
and
or
aaa
mul
sub
jmp
cmpsl
out
rclb
xchg
and
lahf
leave
push
inc
int3
rorl
mov
iret
mov
inc
stc
cmp
aas
or
stc
gs
and
jg
cmpsb
push
and
mov
inc
std
in
or
push
inc
dec
fs
in
cmpsl
out
jecxz
inc
dec
mov
pop
dec
sub
mov
or
adc
in
xchg
dec
jge
popf
int3
jns
in
adc
out
and
add
mov
jne
pop
push
mov
shlb
hlt
subb
sahf
adc
xchg
sub
sahf
imul
jg
cmp
inc
adc
imul
das
and
mov
shlb
sbb
dec
pop
cli
mov
lcall
pop
sar
outsl
mov
mov
jb
dec
cmpsb
inc
sub
add
inc
mov
call
jle
add
mov
sbb
daa
mov
add
repz
daa
dec
sbb
xlat
popf
incb
pop
jae
push
mov
nop
test
inc
cmp
mov
data16
sub
stos
mov
test
les
and
adc
test
xchg
xchg
popf
ret
mov
popa
push
out
mov
xchg
test
jno
push
sbb
and
inc
mov
fstpl
pusha
movsl
xchg
lcall
jbe
fsub
jg
cmp
inc
nop
pushf
rcrl
stc
adc
cli
lods
adc
pop
push
loop
push
and
in
mov
add
adc
xor
pop
movsl
js
fwait
dec
repz
movsl
lock
out
sbb
jnp
jne
inc
xor
imul
in
xor
mov
sarl
notb
sbb
loopne
fistpl
ss
and
dec
push
dec
jg
insb
sub
loope
jne
movsb
cmpl
cmp
mov
ss
jl
jnp
lcall
push
push
mov
fsubrs
outsl
xor
repnz
push
and
add
push
add
mov
in
sub
js
cs
mov
js
fists
jbe
dec
sbb
xchg
adc
push
jne
xchg
fbstp
mov
dec
push
insl
xor
sahf
fsubrl
lock
je
lods
xchg
inc
sarb
aaa
dec
inc
aaa
lock
mov
leave
ja
test
add
push
ret
mov
xor
xlat
sub
xchg
inc
push
dec
mov
mov
sti
xchg
mov
mov
in
pop
out
pushf
sbb
xlat
cmc
repz
fsubrl
arpl
clc
mov
adc
add
dec
dec
mov
adc
xchg
rcrb
push
in
cmp
cmpsb
jmp
ret
cli
mov
adc
mov
pop
fs
insb
stos
xchg
xor
jge
jecxz
inc
mov
xor
stos
int3
aad
aaa
jb
fnsave
sbb
mov
push
insb
pushf
inc
mov
or
clc
mov
sahf
xchg
jmp
cmpsb
and
cltd
cmp
cld
rorb
adc
cltd
lcall
mov
sbb
and
fmuls
sysret
rcrb
ss
push
push
call
push
icebp
mov
lret
cmp
xor
inc
mov
add
xchg
xor
mov
sahf
je
pop
test
push
or
lret
lds
mov
mov
lock
hlt
pop
sub
out
mov
add
mov
popa
add
dec
inc
jp
add
and
das
pop
cmp
aas
inc
dec
lock
mov
test
scas
push
push
repz
push
push
xadd
jnp
xor
out
mov
lods
push
push
data16
xchg
sub
dec
sar
aam
ret
fcomps
inc
adcb
int3
xchg
ss
scas
in
iret
ja
sbbb
data16
xorl
out
shr
xor
stc
push
xor
fwait
leave
jp
add
or
movsb
mov
adc
or
loop
gs
push
jl
aad
bound
cli
fldcw
in
cmpsl
idiv
mov
adc
loope
inc
test
or
ret
lea
lcall
mov
in
pushl
movsb
jmp
out
fisttps
mov
ljmp
lcall
ret
negb
js
mov
das
sub
and
dec
loopne
sbb
pop
lret
out
addr16
andl
leave
les
and
push
xchg
rep
pop
push
add
mov
mov
adc
mov
jmp
fmul
cmpsl
cmp
xchg
dec
pop
lods
fnstcw
adc
mov
sbb
lcall
lret
push
test
adc
sub
pop
mov
pop
xchg
and
cmp
inc
movsb
mov
dec
ret
adc
jb
jle
in
sbb
into
js
pop
mov
xlat
popa
mov
add
sub
sbb
rcrl
ret
test
in
adc
jne
mov
cmp
dec
pop
inc
addb
xchg
add
gs
adc
movsl
cmp
insl
cmp
call
fnstsw
push
mov
sub
push
jnp
add
lcall
mov
lcall
call
xor
lret
in
push
scas
and
pop
jg
sub
push
sti
ret
imul
stos
pop
jmp
cmp
push
cmp
aad
push
jg
sbb
outsb
fwait
xchg
jg
mov
gs
cmpsl
dec
loop
ret
pop
jmp
xor
push
outsl
or
lret
jae
lret
mov
sub
mov
sarl
xchg
fcomps
scas
xchg
pop
cmp
mov
fmul
jno
fs
rcrb
pop
cmp
ja
aam
movb
das
push
out
das
push
mov
in
dec
imul
dec
add
cmp
or
shrb
jae
iret
inc
jl
mov
movl
adc
sub
cwtl
xlat
pop
stos
outsl
mov
cmpl
cwtl
mov
pop
xchg
cli
dec
pop
adc
ret
inc
sbb
sbb
push
clc
jae
fwait
imul
int3
xchg
mov
aad
iret
jae
filds
xchg
mov
pop
push
cld
fsubl
mov
cwtl
cmc
in
popa
scas
cmpsb
jbe
jge
rolb
sti
mov
aas
and
repnz
sbb
cmpsl
pop
int3
cmpsl
inc
xchg
std
xchg
xchg
mov
std
push
rcll
jmp
jb
xchg
mov
xlat
or
pop
push
aas
scas
mov
and
repnz
jmp
repnz
mov
xchg
imul
mov
seto
sbb
and
rcl
lret
jmp
or
pop
or
enter
repz
add
jo
ja
ja
cli
push
popl
xchg
test
and
testb
aad
addr16
sub
fcmovu
add
push
mov
dec
out
and
pop
sbb
jl
sub
cmp
inc
jnp
cli
aam
push
jns
dec
cmp
jg
repnz
and
fdivrp
in
jle
sbb
pop
fs
xorl
addl
je
fisubs
bound
subl
aaa
daa
outsl
dec
xchg
or
add
out
sbb
insb
negl
mov
push
push
rep
js
aam
xor
insl
mov
push
mov
xchg
popa
es
sub
imulb
adc
pop
shr
rcll
test
xchg
xor
push
or
or
test
shlb
mov
and
add
repz
adc
out
mov
mov
sbb
xor
adc
mov
nop
lret
push
icebp
jecxz
pop
adc
jnp
les
mov
pop
das
xchg
xor
enter
aad
pushf
sbb
mov
pop
add
pop
mov
cmp
leave
xor
or
or
xchg
dec
data16
add
outsl
rcrl
movsl
push
hlt
push
loope
xor
sbb
add
nop
test
sti
dec
repnz
sub
or
push
les
in
mov
add
addb
mov
in
push
mov
sti
dec
fucom
sub
push
adc
mov
in
dec
add
adc
test
sub
aam
add
enter
rorb
inc
fwait
mov
repnz
pop
push
lret
jmp
pop
test
insb
insb
hlt
dec
and
push
pop
xchg
cmpsl
push
fimull
test
jl
repnz
dec
cmpl
xchg
fwait
out
ficoms
nop
test
enter
xchg
aad
jl
add
test
push
jge
ss
mov
xchg
mov
inc
inc
mov
test
stc
pop
fldcw
inc
ljmp
or
or
daa
jne
mov
cmp
cld
and
call
shlb
pushf
jmp
je
mov
fmuls
shr
fldz
jg
mov
mov
adc
dec
es
aam
jne
and
or
mov
insb
ret
jle
test
adc
push
sbb
cmp
loope
dec
cmp
and
js
mov
fsubrs
mov
leave
xchg
out
cs
mov
push
and
ret
jge
xlat
and
add
arpl
xor
fisubs
or
aas
jl
mov
in
push
dec
test
fistl
inc
cli
push
jle
sahf
pop
and
out
add
insb
popa
in
pop
pop
nop
in
push
mov
push
jg
xchg
imul
dec
jne
aas
push
xor
sbbb
lods
lahf
aaa
sbb
jmp
mov
inc
fstpt
sbb
out
les
cli
nop
inc
mov
test
push
cmp
dec
es
mov
jb
push
sub
aaa
iret
hlt
cmp
cld
push
idivb
mov
cmp
mov
cmp
pop
int
xchg
push
sbb
cs
xlat
inc
dec
ljmp
inc
cmp
mov
mov
aam
dec
imul
adc
or
imul
mov
sub
fistl
inc
popf
pop
test
pusha
icebp
add
inc
and
xchg
lods
or
test
or
add
or
fwait
pop
push
pushl
pop
rcll
into
pop
outsl
and
push
aad
lahf
daa
mov
gs
inc
xorb
ss
lcall
sbb
repz
add
add
jl
pop
cltd
jmp
cmp
cli
sahf
xor
xorb
xor
aam
mov
rorl
pop
aam
xchg
lahf
jb
enter
xchg
ss
jo
lock
cld
inc
test
pop
inc
mov
dec
ret
js
or
fidivl
pop
adc
cmp
sbb
loop
sub
and
out
aas
add
jbe
mov
bound
ret
sbb
decl
jne
popa
or
push
scas
outsl
aaa
jbe
imul
mov
int
jns
dec
dec
mov
cld
ljmp
mov
inc
sahf
mov
ret
lods
out
mov
jge
insb
xchg
dec
jecxz
mov
xchg
sub
popa
pop
jle
movb
stc
sub
and
add
mov
or
ja
popa
popa
je
in
es
mov
lock
aam
sub
out
xor
xor
add
sbb
push
cld
jp,pn
inc
hlt
xchg
lods
add
mov
out
lds
jg
jmp
aad
jb
dec
jg
or
and
inc
lcall
and
jbe
jbe
pop
dec
fldl
mov
inc
xor
imul
cmp
sbb
loope
pop
repnz
sub
data16
pop
and
sbb
out
loope
nop
cmpsb
mov
sub
and
mov
mov
pop
jl
addr16
ret
sbb
mov
arpl
faddp
add
flds
movsb
imul
mov
lret
incb
stc
push
cli
fcmovne
dec
dec
aaa
push
in
andl
cmp
enter
add
pop
add
push
aaa
xlat
push
mov
push
mov
fs
pop
outsl
jg
push
inc
fs
push
repz
push
mov
divl
mov
hlt
stc
mov
nop
je
dec
shrb
lods
sub
pop
add
push
jbe
cwtl
mov
adc
cmp
lea
fsubl
out
dec
mov
cmc
sbb
cli
dec
std
jl
pop
fmul
mov
scas
inc
jl
xlat
mov
xchg
mov
repz
cmp
cmp
add
adc
push
icebp
sub
pop
jle
mov
mov
sbb
outsl
jmp
inc
adc
mov
addr16
dec
jl
push
inc
sbb
add
and
jle
shlb
and
lret
scas
mov
xchg
jnp
cmp
ljmp
call
inc
imul
or
ret
pusha
and
lods
mov
mov
pop
fsqrt
dec
lahf
rcrl
xchg
mov
adc
xor
mov
frstor
out
mov
insb
mov
decl
adc
jle
dec
or
or
pop
test
mov
sbb
rolb
outsl
test
pop
call
std
push
jno
xchg
sub
cmpsb
sub
aas
fs
inc
xchg
mov
aaa
dec
out
xchg
mov
lret
cs
cmp
or
hlt
popa
inc
or
xlat
mov
cli
cmp
inc
push
mov
es
int3
inc
jge
adc
scas
sbb
sub
dec
push
pop
cmp
lret
sub
lds
and
sbb
mov
imulb
lret
jns
sbb
loop
cwtl
jae
add
rolb
mov
inc
or
jle
aam
adc
iret
fcmove
fucomi
xchg
insb
push
aas
lahf
adc
test
loop
cmc
cld
jmp
cmp
outsl
jb
mov
add
xchg
test
icebp
jecxz
push
insl
pop
push
mov
bound
gs
inc
adc
push
insl
in
and
pop
add
orb
xchg
mov
int
rolb
or
jp
jle
add
dec
inc
cld
inc
push
inc
mov
shr
mov
cmp
cld
rol
lret
repz
sbb
shl
mov
ss
jae
and
arpl
pop
adcb
mov
sub
outsb
dec
jb
and
loop
imul
mov
outsl
dec
out
mov
or
mov
subb
jmp
push
xor
push
repnz
mov
aas
lods
xor
or
or
xchg
cmpl
add
aas
xchg
pop
loop
push
xor
push
popa
jg
xchg
cmp
pusha
xor
jmp
call
repnz
cltd
cmp
inc
push
push
mov
mov
mov
xor
jmp
dec
ret
imul
dec
pop
data16
xor
fs
push
adc
movsb
cwtl
pop
adcb
in
jae
sbb
pop
popf
mov
add
and
jns
shl
xor
shll
and
call
call
loop
call
shlb
iret
mov
inc
add
jmp
fdivrl
jmp
mov
push
repz
mov
scas
xor
daa
call
cmp
rorl
push
sbb
dec
pop
push
push
xchg
or
or
inc
in
frndint
shll
shl
add
sarb
ret
and
ja
test
pop
insl
sbbb
mov
pushf
mov
and
std
pop
insl
jle,pt
cld
aaa
xchg
popa
mov
imul
imul
pop
dec
adc
es
adc
or
pusha
bound
mov
pushf
push
push
add
or
outsb
xchg
mov
push
pop
add
mov
vpmaxub
ret
pushf
and
xchg
das
xor
cmp
mov
sbb
cmp
and
mov
push
inc
jmp
push
push
dec
lea
fldcw
add
jmp
add
inc
in
pop
es
cs
jno
push
xchg
push
xor
insl
aad
movsl
popa
loopne
out
adc
fwait
daa
xor
fcmovb
xor
insb
mov
jmp
pop
lods
mov
out
jnp
ret
jecxz
jg
shl
and
cmpsl
mov
lea
arpl
lret
loope
shll
adc
das
out
add
lea
mov
loopne
jmp
es
xor
outsl
ds
pop
and
xchg
mov
aas
ljmp
inc
adcb
inc
mov
xchg
cmc
jge
jge
loope
shrl
push
sbb
out
data16
or
mov
xchg
les
xlat
loop
jmp
les
out
and
in
fnstenv
mov
cmpsl
mov
adc
popf
mov
pop
or
popa
ret
dec
xorl
mov
and
or
out
pop
int3
xchg
fwait
push
out
rcrb
mov
pusha
into
int3
fwait
add
cmpsl
push
cld
je
sahf
cmp
test
adc
mov
in
push
out
jecxz
xchg
cmp
outsb
or
mov
scas
push
nop
sbb
shlb
cmp
mov
imul
mov
xor
jl
xor
movsb
xchg
or
add
ficompl
push
sbb
pop
test
test
test
ret
pop
lods
and
cs
push
pushf
add
popa
rclb
mov
add
ret
cld
jo
es
mov
and
or
push
dec
sahf
in
leave
xor
add
dec
xlat
push
inc
aas
jle
jnp
mov
pop
je
push
mov
inc
iret
int3
or
lock
les
fisttpll
shr
and
mul
push
or
pop
mov
push
dec
loope
inc
call
pop
ja
push
sbb
cmp
sbb
adc
icebp
pop
out
stc
stos
adc
stc
sarb
sbb
pop
cmpsl
xor
mov
jle
jnp
mov
adc
cmp
xor
xor
add
pop
cwtl
jbe
add
leave
fst
popf
ja
icebp
mov
mov
sub
cmpsl
pop
imul
dec
sbb
jl
cmp
loop
fs
inc
movsb
mov
xor
cmp
sub
cmp
sub
ja
out
mov
sbb
sbb
dec
psadbw
jns
pusha
inc
add
fistl
or
and
aaa
stos
ret
iret
jecxz
into
sbb
clc
int3
inc
mov
or
ret
sti
mulb
ss
adcl
xor
inc
sarl
arpl
ljmp
or
cmp
mov
mov
sub
hlt
rcrb
sub
push
cmp
fsubl
pop
mov
icebp
in
cmp
movsb
jecxz
cwtl
lret
ljmp
sbb
imul
or
les
subl
and
cmpsl
aad
and
movsl
mov
jnp
jg
out
cltd
bound
pop
xchg
andb
sub
insl
cs
cmp
add
inc
sbb
dec
adc
clc
jmp
xor
cli
in
sbb
jb
mov
insb
add
pop
adc
test
xchg
sub
xor
aad
jne
adc
push
adc
into
cld
hlt
ret
aaa
cld
fwait
je
jmp
push
mov
enter
jecxz
int3
xchg
fdivp
test
fadd
and
mov
pop
out
loope
dec
and
cmpsl
mov
adc
pop
and
out
imul
xlat
into
lock
pop
popf
lods
pop
xlat
movaps
arpl
pop
mov
mulb
in
cmpsb
das
popa
inc
outsl
flds
cwtl
idivb
nop
cmp
stos
sbb
int3
xchg
arpl
push
jmp
mov
xor
mov
sub
les
clc
imull
sbb
jne
out
push
mov
cmpsl
cmp
bound
push
jmp
jmp
cmp
mov
mov
pop
adc
or
test
sbb
jnp
add
in
ror
icebp
pushf
mov
push
xor
sbbl
push
inc
push
inc
call
mov
into
test
xchg
and
fstpl
sahf
fimuls
mov
int3
and
push
test
push
and
mov
data16
orb
sub
loope
lods
mov
pop
add
jle
lea
les
mov
jmp
add
dec
add
repnz
call
inc
fwait
gs
mov
jecxz
aad
daa
mov
in
mov
pop
xchg
sub
xor
jp
sbb
and
outsb
fldenv
scas
or
jl
jns
sbb
or
pop
idivb
repnz
xor
pop
mov
xchg
xchg
data16
jns
sub
mov
xlat
daa
aas
rolb
adc
insl
mov
dec
mov
bound
or
in
imul
scas
push
pop
push
cli
xchg
in
inc
je
or
sub
sbb
nop
ret
mov
lret
mov
sbb
jl
movsl
dec
sbb
mov
or
xchg
lods
out
fiaddl
arpl
and
out
push
mov
inc
mov
push
jo
push
or
into
aaa
pop
insl
push
andl
in
add
add
mov
xor
scas
fwait
lds
pusha
add
arpl
cltd
pop
mov
jno
sbb
ja
jno
mov
int
jmp
adc
pop
jecxz
dec
rclb
xor
and
movsl
mov
xchg
jl
push
je
jnp
mov
fsubl
mov
mov
cmp
push
js
fsubl
lcall
and
add
and
in
dec
ja
sbb
mov
call
ret
xchg
int
les
sti
jl
aam
mov
ret
shrb
xchg
iret
add
cmp
add
aaa
inc
adc
ss
adc
fidivl
ret
scas
or
cmp
xor
and
mov
mov
inc
sbb
or
jmp
fdivs
add
adc
mov
push
dec
aam
imul
in
mov
mov
ficoms
dec
or
mov
js
or
xor
jle
jne
in
ds
adc
adc
push
nop
test
xor
ljmp
aam
dec
pushf
cwtl
imul
pop
in
test
add
enter
xchg
mov
jp
mov
push
jecxz
lock
or
je
mov
push
sahf
sbb
lret
out
ret
fsubrl
xchg
filds
inc
mov
fisttps
inc
cmp
pusha
lret
push
add
mov
pop
loope
insb
xorl
add
pop
rorb
out
mov
or
mov
cmp
in
mov
cmp
xor
or
mov
inc
jae
testb
xor
jle
inc
jp
push
jnp
hlt
dec
mov
adc
sar
arpl
jo
jl
push
data16
dec
jne
popf
adcb
cmp
out
inc
jno
js
xchg
repz
mov
out
bound
mov
mov
or
or
mov
pop
pusha
mov
cmp
jp
cmp
in
data16
mov
fadd
aam
adc
dec
in
inc
mov
xorb
stos
scas
sahf
pop
imul
jle
xchg
or
test
stos
xor
sarl
cltd
addl
ljmp
xchg
arpl
daa
addr16
ret
lcall
push
js
push
outsb
sar
inc
ret
repnz
sti
sub
daa
mov
or
dec
sarl
cs
imull
push
and
aas
mov
xchg
mov
xchg
mov
jp
js
push
cmp
imul
data16
jnp
dec
mov
xchg
movd
fs
movsl
adc
std
mov
add
jge
loope
inc
dec
popf
enter
ljmp
sbb
lock
divb
jecxz
sbb
xor
test
add
pop
pop
cmp
scas
mov
jp
lcall
rcl
inc
cli
and
mov
iret
jl
add
jle
jg
mov
lahf
insb
rclb
jno
aam
sbb
scas
push
push
and
loop
sbb
jb
xor
repz
bnd
ja
push
pusha
mov
mov
dec
dec
adc
lds
fists
test
inc
mov
bnd
adc
leave
mov
cwtl
xchg
aas
js
mov
aad
ficoms
fnstcw
loope
outsb
cmc
stc
sub
sub
daa
cli
pop
cmp
in
adc
scas
leave
shll
hlt
sbb
test
mov
push
aaa
mov
adc
jmp
addr16
pop
sbb
enter
popa
sub
test
push
cltd
jbe
adc
add
inc
mov
mov
push
negl
sbb
inc
test
adc
aam
in
inc
bound
pushf
cli
jmp
dec
push
lock
jne
jp
xchg
mov
inc
push
shl
in
inc
mov
iret
sbbb
or
cmp
mov
push
hlt
sbb
push
lods
lea
imul
imul
xchg
dec
xchg
xchg
data16
sub
push
sti
ljmp
lea
dec
pop
sbbb
repz
into
mov
cwtl
rol
lods
iret
out
popa
cli
mov
sbb
sub
mov
mov
jns
jmp
mov
add
pop
jmp
adc
mov
mov
xchg
out
adc
add
xor
push
cs
je
mov
sub
push
dec
data16
mov
push
andb
adc
xchg
fisubrs
lds
jecxz
fnsave
xchg
ret
push
xchg
pop
sbb
iret
xor
inc
ficoml
cmc
adc
fnstenv
dec
push
test
jecxz
inc
in
mov
mov
outsl
or
inc
daa
sbb
outsl
xchg
sbb
in
or
jne
jo
push
xchg
push
les
pop
mov
cld
jmp
stc
mov
and
fnstcw
pop
in
fsubr
mov
jmp
sub
push
cs
out
out
data16
or
inc
jmp
ret
mov
sub
ja
fistl
incb
sbb
in
mov
pop
iret
icebp
int
clc
sbb
popf
mov
lcall
sti
inc
call
test
add
pop
iret
xor
xchg
test
sub
insb
jno
bound
jne
add
push
lods
inc
rorl
jbe
jp
fistpll
out
mov
mov
das
jae
testb
imul
lret
pop
mov
sub
mov
push
add
fxch
repnz
insl
cli
cltd
insl
and
rclb
inc
mov
test
push
js
test
add
or
or
xor
add
cmp
lds
inc
and
mov
or
mov
test
push
out
inc
cmpb
xor
mov
mov
mov
or
fcom
xchg
mov
int
sbb
xchg
dec
aaa
mov
das
lods
jge
lds
cmpsl
dec
movsb
sub
int
mov
cmp
addl
xor
popa
xchg
stos
mov
adc
stc
cmpsb
pop
and
mov
xor
in
push
push
dec
mov
daa
cmp
outsl
or
cmpsb
mov
jle
sarb
mov
shrl
out
gs
inc
jmp
lods
insl
mov
mov
or
mov
pop
lods
mov
jge
ficoms
sub
data16
lcall
loopne
push
jle
lods
xchg
sub
xchg
mov
iret
sbb
insb
push
fdivrl
clc
lahf
sub
dec
or
push
xchg
addb
fucomi
xor
xor
mov
xchg
xchg
push
and
lds
incb
mov
rcrl
inc
sub
repz
std
stc
xor
cmpl
sbb
mov
jp
out
adc
pop
and
jmp
mov
sbb
push
sbb
xor
sub
dec
sbb
xor
idivb
leave
ds
stos
shlb
arpl
cwtl
rcrb
add
out
or
jns
lock
fcmove
or
cmc
push
je
pop
in
push
cmp
andl
sub
fnstenv
sbb
fisubl
mov
lea
orl
cmp
pop
pop
cs
mov
mov
dec
xlat
or
xchg
pop
dec
cmp
stc
pop
lock
sbb
call
and
shlb
cld
xorb
cld
iret
cwtl
ret
add
or
or
cmp
shlb
sub
iret
popf
or
lods
repz
fbld
xor
je
and
mov
adc
mov
call
mov
stos
pop
cld
add
insl
icebp
inc
add
out
rcl
int
mov
xor
gs
lea
shll
fdivs
or
xchg
jne
popf
in
mov
jecxz
jmp
ret
push
inc
adc
daa
push
jne
or
pop
push
and
push
fcoml
das
xchg
mov
roll
cmpsb
imul
in
lea
jp
lahf
mov
packssdw
cmpsl
loopne
jb
loop
mov
xor
clc
lret
pop
hlt
dec
push
js
push
and
xor
jle
fists
repz
sub
xor
lods
rcrl
adc
xchg
xchg
push
call
and
call
sbb
clc
pushf
and
sub
inc
mov
or
das
fisubrl
in
and
dec
repnz
fistpl
ret
fcoms
add
pop
xor
sub
mov
shll
adc
cltd
adc
or
clc
sub
adc
jge
addl
iret
sub
ljmp
sbbb
pusha
mov
divb
sbb
jae
sbb
xor
mov
sbb
fs
push
cmpsl
ret
cmp
ds
shlb
pop
and
fldenv
dec
lods
loope
xchg
ror
fstl
mov
scas
jno
shl
insl
add
ljmp
fistpl
fmul
in
clc
cmp
mov
cmp
bound
xchg
in
out
into
push
stc
fisubl
and
mov
mov
fucomip
je
les
inc
add
dec
js
mov
mov
lock
push
test
clc
es
lea
jmp
imul
mov
test
cwtl
lds
aas
std
repnz
and
pop
out
scas
addr16
sbb
lea
and
pusha
int
pop
sbb
xchg
faddl
xchg
ds
outsl
mov
push
xchg
cli
pop
cltd
dec
sti
stc
cmp
stc
cmpsl
fnstcw
lock
jno
lret
pop
inc
cli
aam
rorb
xorb
sarl
imul
outsb
addr16
xor
pop
cmpsl
pop
leave
pop
ss
jmp
adc
test
xchg
data16
sbb
iret
mov
lret
testb
jmp
xchg
lods
sbb
mov
rcrb
pop
gs
pop
loope
testl
dec
push
jns
fmull
push
sti
repz
xchg
jecxz
cmp
jae
arpl
arpl
and
dec
dec
pop
xlat
aaa
inc
mov
xor
jmp
push
insl
xchg
jo
sbb
or
xor
push
push
fnsave
shrb
scas
rorb
cmp
sbb
sub
xor
jo
mov
testl
xchg
in
mov
push
xor
es
mov
out
sahf
pop
xchg
mov
jne
enter
cli
cmp
xor
push
jle
cmp
add
inc
stc
ds
pop
ja
sub
clc
and
sub
repz
inc
dec
and
fwait
xor
xor
ret
mov
sub
adc
jbe
add
push
sbb
xor
cmpsb
mov
lds
or
add
xlat
pop
movsb
outsl
dec
jne
data16
iret
fmul
push
jb
jp
ret
pop
mov
sub
pusha
xchg
loope
roll
cmp
js
xchg
xor
sbb
add
int3
out
sub
xchg
aas
sti
scas
mov
and
mov
mov
mov
scas
sti
sbb
dec
xchg
ds
mov
fidivs
rorb
xchg
test
xchg
jecxz
in
mov
repz
fwait
inc
mov
xor
cli
and
iret
push
sbb
jp
push
repz
inc
xchg
pop
push
dec
leave
mov
icebp
mov
add
jg
loop
aas
std
out
jns
ljmp
push
adc
sub
scas
mov
pop
aam
cmp
je
add
fs
imul
xor
cmpsl
push
inc
je
fcoml
push
adc
sbb
sub
jne
test
rolb
xor
xlat
aad
add
in
cmp
cmp
adc
push
aas
inc
mov
fidivs
adc
je
loop
sub
sub
cld
testb
add
push
pop
addb
sti
push
push
push
ljmp
roll
adc
jmp
jnp
push
repnz
ficomps
sarl
sbbl
inc
insl
outsl
cmp
imul
hlt
push
push
cmp
in
andl
push
fcompl
loope
test
dec
cli
mov
cs
push
inc
dec
mov
imul
in
sbb
mov
dec
xchg
push
cmpsl
mov
aas
pop
inc
sbb
out
mov
inc
adc
ljmp
jns
out
dec
jmp
pusha
arpl
add
jno
dec
jae
into
and
clc
je
out
movsl
in
add
xor
mov
mov
insb
pop
hlt
dec
scas
les
jmp
sbb
xor
adc
xchg
pop
notl
jge
push
stos
in
push
mov
xor
lods
xchg
test
push
adc
sbb
in
frstor
pop
adc
sub
addps
enter
bound
push
jecxz
mov
int
iret
sahf
test
popf
add
int3
dec
dec
fisttpll
stos
ds
in
adc
push
arpl
test
sub
andb
sbb
adc
xchg
push
and
jns
pop
cwtl
int
std
jae
das
enter
pop
or
clc
mov
or
add
outsl
add
pop
test
jecxz
insl
xor
xchg
mov
imul
fdivp
test
lahf
loop
pushf
and
pusha
push
mov
fdivr
imul
adc
inc
std
mov
add
cltd
mov
xor
pop
xchg
jg
into
adc
dec
push
addb
addb
jb
clc
test
outsl
cmp
test
dec
data16
jns
dec
test
mov
sbb
movb
push
ds
fstp
adc
mov
mov
jae
mov
aas
mov
jne
loop
stos
sti
jmp
push
stc
mov
push
je
adc
mov
sbb
inc
cmp
pop
jns
cli
push
std
jp
ror
ss
sbb
sti
in
adc
iret
and
js
cmp
sbb
mov
mov
sbb
icebp
scas
mov
mov
adc
hlt
cmp
xlat
and
mov
or
cmc
mov
pop
enter
addb
add
cmpsb
cld
add
jnp
mov
rcrl
jbe
add
jmp
insb
push
test
mov
pop
and
das
jg
bound
add
stos
adc
scas
sahf
testl
stc
mov
cmp
shr
loopne
lret
lods
je
pop
jb
mov
pop
or
shlb
lds
adc
gs
fs
dec
rcrb
xchg
inc
jg
lods
or
xchg
push
cltd
fldl
movsl
mov
xchg
lcall
and
out
stc
or
lods
adc
mov
into
das
push
outsb
dec
lods
pop
and
std
sbb
stos
add
cmc
mov
subb
retw
sbb
lods
sahf
loop
mov
push
and
and
cs
mov
cltd
adc
jns
es
and
xchg
dec
push
sub
arpl
inc
mov
jae
mov
xor
mov
cmp
adc
add
test
push
sbb
pop
movsb
pushf
pusha
jp
je
dec
mov
sbb
pop
fs
cwtl
sub
inc
mov
or
or
jnp
cltd
or
popa
stc
popf
fsubs
push
xor
mov
fcoml
mov
addr16
inc
aam
test
inc
inc
js
sbb
cmp
add
sahf
in
jne
jecxz
mov
mov
mov
push
outsb
dec
inc
jne
xchg
mov
daa
lds
fidivrs
push
cltd
popw
adc
shlb
mov
call
jmp
cmp
inc
in
jbe
pop
pushf
out
in
dec
nop
push
pop
mov
imul
lcall
iret
clc
mov
into
ret
cmpsl
out
arpl
xchg
lret
lds
test
out
filds
outsl
inc
mov
je
daa
inc
xor
das
add
xchg
jb
lock
add
aas
sbb
or
xchg
fcomp
rcrb
jmp
push
dec
sbb
les
mov
mov
int3
xor
dec
mov
enter
cli
and
push
adc
stc
adc
repz
cmp
and
cmp
mov
popf
cmp
movsl
daa
and
pop
mov
add
cli
dec
loope
in
cmc
rcll
dec
sarb
fnsave
jmp
jnp
subl
sub
sbb
fsubl
fldl
mov
inc
xchg
sarb
push
enter
inc
and
push
pop
add
divb
loope
lahf
xor
jo
lret
negl
in
test
dec
cmpsl
cltd
mov
jl
das
dec
cmpsb
aas
jecxz
xor
xor
gs
stos
inc
xor
enter
daa
pushf
out
or
and
lcall
ljmp
sub
aad
movsb
dec
push
repz
xlat
cmp
cli
outsb
cmp
cmp
je
lods
out
test
in
call
jmp
test
mov
add
std
int3
test
and
adc
aam
ds
aam
push
and
cmp
sub
test
mov
sahf
or
aaa
arpl
sti
cwtl
test
outsl
and
clc
cwtl
cld
lret
lahf
movsb
dec
repz
ss
movsl
or
lret
jmp
jne
mov
xchg
mov
into
jno
mov
aaa
or
fisttpl
imul
lret
ret
cmpsb
push
lcall
push
sub
fadds
pop
adc
push
lock
popa
xchg
or
pop
ret
mov
mov
sahf
aaa
insb
pop
aaa
jb
into
das
and
cwtl
xchg
fwait
mov
and
mov
fdivrs
fildl
adc
mov
call
mov
push
outsb
stos
enter
lret
pop
call
push
xchg
addr16
cmp
sub
int3
push
mov
jle
xor
dec
jae
or
movsl
fcoms
inc
ret
ret
cs
lret
inc
loop
cwtl
push
add
sub
ds
push
mov
ss
std
loop
daa
data16
sbb
in
push
sub
ds
sub
movsb
xchg
ds
scas
sar
add
nop
mov
jmp
and
sahf
push
call
int
jnp
push
mov
into
lock
dec
xchg
xchg
insb
xor
scas
pop
mov
cmpsl
push
xchg
sub
fldcw
mov
xlat
fdivl
out
pop
cmp
out
int
jnp
adc
in
arpl
adc
les
imul
sub
cmp
xchg
sub
dec
jmp
jle
jo
mov
dec
pop
add
fs
xchg
sub
and
cmp
sub
sub
out
pop
cltd
add
call
in
test
test
fldcw
pop
pop
iret
sahf
call
xor
and
add
in
lods
add
mov
fdivrl
std
dec
or
mov
pop
jmp
jmp
mov
dec
jge
jecxz
jecxz
ror
in
stos
sub
cmc
in
popa
xchg
push
leave
orl
rolb
lret
add
les
clc
dec
mov
adc
imul
push
or
lcall
loopne
fst
je
es
lret
ds
mov
movsb
or
ds
lods
aaa
dec
scas
xchg
repz
inc
jge
sub
shll
and
cli
ret
out
repnz
sahf
xchg
sbb
out
push
repz
sub
test
push
dec
lea
sub
scas
push
sbb
ret
cltd
popa
and
sub
mov
jl
ja
adc
in
mov
mov
and
scas
push
ficoml
sbb
sub
inc
pop
dec
lds
xchg
cmpsl
mov
sbb
xor
jmp
test
daa
cmp
rorb
leave
loope
movsl
and
or
cmp
adc
xor
push
ljmp
push
mov
cld
ret
or
movsl
dec
fiaddl
aam
mov
scas
rorb
mov
sub
mov
jae
scas
jmp
pop
aam
hlt
sub
sub
mov
mov
jne
adc
shll
mov
xlat
xchg
xchg
fwait
mov
mov
aaa
and
push
and
sbb
dec
popa
push
addl
dec
test
inc
lahf
mov
add
mov
sub
cli
ja
or
std
call
icebp
adc
sub
mov
hlt
sbb
add
and
add
lahf
clc
mov
jle
cwtl
cmp
cmp
dec
inc
sbb
ffreep
push
insl
ret
inc
jno
inc
jne
loop
popf
push
jbe
mov
out
movsl
xchg
or
mov
add
pop
jns
mov
out
pop
add
xor
mov
mov
hlt
sbb
shl
dec
add
lods
outsl
cmc
xor
jmp
popf
push
fisttps
push
xchg
xor
add
jmp
scas
fidivl
stos
xchg
mov
pop
add
add
dec
cwtl
stos
stos
les
jecxz
push
mov
mov
xlat
ss
into
jecxz
pop
insb
pusha
and
repnz
test
and
xor
js
pop
adc
rcrb
fisttpl
insb
xchg
cwtl
push
ffree
int3
sbbl
sbb
inc
sub
cmp
pop
push
or
testl
inc
aaa
add
ds
dec
jp
mov
xor
lahf
and
cmpsb
fwait
pushf
aad
sbb
mov
add
jg
scas
shlb
or
mov
sti
cmp
xor
popa
repnz
hlt
pusha
jo
adc
push
sbb
jns
adc
dec
fcoms
cmp
inc
popf
dec
addr16
pop
loop
arpl
push
sbb
in
cmp
scas
mov
inc
cli
mov
rclb
sub
mov
lods
inc
cmp
sbb
sbb
jns
test
jl
sbb
enter
mov
arpl
dec
mov
les
adc
pushf
cltd
imul
rcrb
roll
popf
mov
mov
adc
loopne
ret
mov
sbb
fdivl
call
xchg
inc
cmp
ds
adc
push
outsb
addr16
or
pushf
xchg
lret
pop
lds
icebp
subb
out
mov
cltd
lods
js
out
sti
popf
sub
mov
push
push
pushf
nop
mov
aam
add
jnp
insl
fimull
jo
ffree
mov
cmc
dec
inc
arpl
mov
jnp
pop
icebp
mull
ror
pop
pop
out
je
jp
adc
and
inc
add
sub
add
sbb
add
repz
fnstsw
xor
push
mov
and
imul
xchg
dec
es
jle
out
rcrb
xchg
push
arpl
push
cmpsb
aad
and
xchg
push
lret
out
andl
stos
int
pop
pop
test
idiv
aam
mov
lea
jo
push
mov
pop
leave
add
cmp
enterw
adc
sub
add
test
pop
mov
je
pop
stos
sub
out
mov
mov
inc
push
dec
cmp
notb
je
fisttpll
add
iret
mov
or
mov
push
mov
insl
add
std
stc
and
cs
push
lahf
jl
pop
mov
cltd
stos
fdivl
sub
mov
inc
dec
aam
cli
inc
jge
or
addr16
inc
cmp
jle
cmp
movsl
je
add
int3
stc
add
addr16
inc
pop
rorb
add
lods
adc
lcall
xor
jmp
loop
adc
pop
ret
leave
mov
clc
imull
mov
mov
lret
pushf
jge
aas
clc
aas
lahf
xchg
mov
push
mov
push
mov
leave
fs
push
sub
dec
lods
add
xchg
les
jp
dec
and
mov
mov
shll
dec
insb
xor
daa
xchg
mov
and
xor
add
addps
cmp
push
sahf
cli
insb
into
cltd
icebp
inc
push
dec
jo
ret
mov
xchg
test
test
inc
mov
insl
addr16
mov
push
jmp
cld
out
fdivl
push
mov
in
mov
push
push
inc
inc
adc
mov
mov
add
es
loop
jp
shlb
pop
pop
sarb
daa
inc
mov
xor
jb
insl
scas
mov
mov
lea
mov
pop
test
add
and
push
xor
push
sbb
fwait
adc
push
sbb
repnz
das
inc
and
in
in
add
jle
mov
xchg
and
shll
es
xor
loop
sahf
ds
out
iret
mov
sbb
add
vmwrite
imul
mov
inc
loope
aam
jb
movsl
je
push
mov
mov
daa
ficoms
inc
dec
pop
mov
push
insb
adc
inc
scas
push
ficoml
test
inc
loope
in
out
mov
jae
shll
into
cmp
pushf
imul
loop
inc
test
in
push
mov
jp
cmp
rorl
les
xchg
xor
mov
jae
lea
xchg
mov
or
cltd
or
lea
sub
xor
jbe
les
clc
incb
mov
orb
push
rcr
rcr
test
mov
in
sbb
xchg
mov
mov
fsin
adc
imul
jl
mov
mov
jmp
lods
mov
pop
jae
jg
ret
negb
mov
call
push
mov
inc
pop
lahf
and
je
mov
in
mov
or
add
mov
fmul
pusha
pop
call
xchg
adc
dec
mov
mov
add
cmc
push
lahf
and
js
pop
xchg
lcall
fldt
push
inc
aam
sub
xor
inc
loop
push
adc
sbb
andb
roll
cmp
push
cmp
sub
fadds
dec
shlb
push
into
lret
test
es
cmp
fists
lahf
or
mov
dec
test
aaa
shrl
jne
jecxz
or
scas
jge
cmpsb
pop
dec
xor
ret
pop
shlb
pshufw
jge
cltd
pop
dec
cmp
cwtl
in
std
or
inc
inc
inc
popa
test
sbb
subl
xchg
sbb
mov
sub
divb
inc
or
mov
inc
mov
popa
loope
jge
and
fst
shlb
add
xchg
mov
xchg
mov
add
sub
repz
movsb
clc
mov
sbb
cmp
fistl
sub
fstpt
out
into
in
mov
mov
mov
mov
fs
movsb
outsl
pushf
rolb
and
cmp
pop
sbb
xchg
dec
testb
je
cmp
pop
sbb
pop
cmp
xchg
popa
fbld
shll
jmp
into
push
hlt
pop
shlb
push
sub
jp
mov
jne
push
ja
xor
sbb
push
les
jl
in
pop
cmp
dec
xor
cmp
adc
sbb
inc
fdivp
jnp
mov
adc
sub
pushf
cmpsb
pop
mov
sbb
adcb
push
sbb
movsl
in
ret
push
cmp
mov
lret
cmc
je
xlat
xchg
pop
mov
cli
lret
orb
xchg
cwtl
cwtl
or
xor
arpl
push
mov
test
jae
mov
test
std
mov
lret
in
fcmovu
xchg
mov
int
pop
test
pop
xor
shrb
sub
push
stos
jmp
int3
jo
lret
in
inc
cli
dec
inc
pop
les
mov
mov
iret
mov
in
sbb
enter
cmp
or
popa
mov
or
inc
xor
dec
mov
jbe
add
xor
movsl
enter
mov
loope
out
add
xor
je
aas
sub
push
jb
push
bound
dec
gs
and
mov
push
cmp
xor
jno
dec
es
lret
adc
push
jae
repz
mov
scas
mov
inc
and
cli
popa
ljmp
out
test
xchg
call
fiadds
stos
jbe
ja
call
mov
push
xchg
push
cwtl
push
enter
outsb
aam
dec
ljmp
mov
leave
dec
xor
popa
xor
jecxz
subl
jnp
xor
fdiv
mov
ss
inc
sbb
pop
fs
daa
and
pop
sbb
into
sbb
ss
stos
mov
mov
sub
arpl
aas
leave
xchg
adc
stos
xor
fcmovbe
push
pop
push
xchg
jle
es
movsl
cmp
ljmp
movsb
negb
pop
test
mov
aam
js
dec
jle
loopne
xchg
lret
arpl
movsb
inc
add
jbe
call
or
lret
and
lods
movsb
sti
pop
ljmp
lret
mov
jno
jecxz
inc
mov
inc
xchg
rep
mov
dec
out
out
pop
xor
mov
cs
xchg
jmp
sub
add
inc
gs
lods
cmp
add
lods
mov
cld
mov
in
xchg
in
inc
cltd
cwtl
mov
cli
in
pop
in
lods
pop
push
jns
sbb
mov
xchg
pop
jmp
andl
ret
pop
out
fidivrs
fwait
cmpsb
lods
popa
mov
popa
repnz
mov
or
sbb
dec
inc
out
mov
jno
out
lcall
clc
mov
mov
push
outsb
pop
shl
cltd
fstl
lock
sbb
das
jne
jmp
add
adc
push
cs
shrb
pop
ds
mov
or
adc
mov
js
sub
or
out
pop
negb
dec
push
inc
mov
shrl
lcall
loope
push
pop
nop
cltd
jmp
adc
sub
je
mov
enter
push
repnz
xchg
lret
imul
lock
sar
ds
aas
sub
divb
push
mov
push
into
mov
push
stos
jp
jb
cmp
cmpsl
add
enter
jb
and
pop
sbb
and
test
xlat
movsl
sub
push
stos
push
and
inc
lret
and
or
mov
dec
std
adc
jle
xchg
jmp
les
mov
sbbl
arpl
push
ja
xor
cmpsb
dec
andl
addr16
ljmp
pop
cwtl
xchg
mov
movsl
outsb
inc
jmp
in
lea
add
mov
ret
adc
and
outsb
pop
xchg
adc
jp
mov
out
inc
fcomi
dec
data16
mov
icebp
shl
jbe,pn
and
push
xchg
xchg
insl
xlat
ficoms
sub
jmp
or
sti
stc
push
mov
mov
gs
gs
mov
add
or
in
test
xchg
loopne
xchg
cs
fcoms
inc
cs
test
pop
out
cmp
cltd
rol
mov
andl
fisubrl
push
into
loope
mov
lahf
and
mov
ljmp
xchg
fwait
xchg
add
push
flds
and
shrl
test
aam
and
inc
popf
mov
mov
lret
pop
sbb
loopne
iret
test
ret
stos
stc
mov
mov
pop
hlt
push
mov
sti
stos
pop
mov
ds
jo
dec
pop
cli
adc
fsubs
xor
xchg
fldl
fidivrl
push
ljmp
es
push
roll
aam
pop
adc
mull
inc
jae
sub
sub
inc
inc
mov
add
mov
enter
xchg
inc
popa
sbb
les
out
cmpsl
ret
dec
ret
ljmp
jmp
rcll
mov
sbb
shl
mov
ret
out
je
daa
out
pop
mulb
xchg
sbb
ja
repz
fs
aad
adcl
or
cs
mov
int3
inc
lcall
test
shlb
icebp
and
dec
or
js
orl
sub
pushf
cmp
movsb
nop
sub
mov
shlb
mov
or
or
dec
fmuls
rcrb
pusha
xor
push
sbbl
add
pop
jmp
aad
inc
invlpg
mov
aas
lret
sbb
test
cmp
test
jae
testb
mov
xchg
fs
cli
out
jmp
cli
sbb
mov
push
xchg
and
push
and
pop
sub
js
fiadds
enter
pop
rcrl
push
push
cmpsl
push
aad
xor
loop
jo
cmp
add
rcrb
std
and
shrb
push
xor
arpl
mov
or
scas
and
pop
xchg
sbb
lock
sbb
leave
out
jbe
pop
and
sub
aad
int
inc
negb
push
inc
out
sub
mov
xor
pop
dec
add
das
mov
xchg
aas
addr16
dec
inc
sti
inc
xorl
dec
add
das
les
mov
sahf
push
mov
icebp
int3
arpl
aad
outsl
or
shll
popf
cltd
enter
cli
cmc
jp
mov
pusha
dec
xchg
fwait
push
push
mov
test
aad
pop
adc
cmp
cmpsb
aam
pop
insb
daa
popa
andb
or
clc
xor
lds
pop
rorb
dec
repz
xor
sti
cmc
out
lahf
dec
jnp
push
push
cld
pop
pop
sbb
add
add
sbb
notl
dec
out
or
loope
adc
mov
mov
and
test
pop
adc
and
test
fstpl
add
mov
add
xchg
stos
shlb
popf
ja
push
mov
xchg
jno
imul
out
sub
popa
enter
fwait
gs
out
sbb
xchg
sub
mov
icebp
fldl
inc
rcrb
pop
mov
dec
sub
fsts
mov
mov
lcall
mov
fsubs
and
cwtl
push
jne
cmp
shl
dec
aad
loope
mov
pop
push
movsb
popa
adc
sub
add
daa
loop
sub
push
gs
cli
test
test
xor
data16
dec
incl
inc
fldenv
jle
xchg
jnp
push
inc
js
imulb
mov
xchg
in
mov
push
cmpsl
dec
sti
jge
jbe
js
fcmovbe
lock
out
shlb
mov
hlt
and
loope
mov
jg
sub
inc
dec
int
inc
addl
mov
sti
lcall
and
fistps
add
mov
int
nop
pop
mov
xor
lcall
outsl
pop
cmpsl
mov
pop
jb
mov
movsl
jg
mov
je
das
leave
sahf
popf
cmp
cmp
inc
sbb
sub
add
sub
or
mov
xor
imul
imulb
and
sub
and
sarb
adc
outsl
cmp
xor
pop
mov
fldln2
lahf
dec
xchg
mov
mov
loope
sub
or
in
mov
inc
lods
xor
popa
jp
clc
pop
out
add
push
xchg
shlb
pop
push
sbb
pop
repz
mov
sub
jge
push
imul
cmp
mov
sub
xor
or
push
sub
pop
dec
mov
pop
push
push
inc
int
div
int
mov
jecxz
or
push
pop
adc
jb
adc
inc
lret
and
ret
pop
scas
in
test
lds
daa
dec
fisttpl
xchg
fimuls
insb
cmp
mov
outsl
popf
or
inc
mov
adc
mov
lret
jl
cld
push
mov
sub
ror
hlt
sub
leave
cli
loop
adc
mov
in
pop
test
xchg
in
insb
sub
movl
test
adc
or
adc
mov
mov
leave
mov
test
cmp
ret
and
divl
pop
fisubs
iret
loope
shll
imul
mov
mov
ret
aad
mov
jecxz
test
or
add
and
adc
sbb
xchg
loopne
fnstsw
sub
jns
xchg
mov
mov
adc
shl
mov
and
divb
lock
pop
dec
ret
call
mov
and
outsl
inc
das
xor
int
popa
push
or
adc
inc
jmp
mov
cmp
mov
and
push
adc
subb
rcrb
aaa
fidivl
movsb
mov
sbb
xor
push
adc
and
clc
repnz
addr16
fsubr
mov
jge
je
pop
cmpsl
ljmp
sub
cmp
les
imul
mov
sub
repz
test
popf
xchg
fcomps
mov
xor
push
and
or
pop
out
jecxz
sub
push
jae
or
mov
add
dec
ja
les
mov
shlb
sbb
push
std
adc
hlt
lcall
xor
jle
or
adc
fld
pop
adc
iret
in
mov
mov
dec
clc
sub
jnp
pop
fisttpll
mov
loop
test
movsl
fs
cli
and
scas
test
popa
mov
popf
stos
mov
je
pop
orb
hlt
xchg
lret
dec
cmpsb
and
out
lret
rcr
imul
rcll
pop
inc
cld
mov
ds
mov
pop
jno
jne
mov
ficoml
andps
out
mov
leave
cmc
xchg
mov
sub
sub
mov
dec
nop
mov
sbbl
and
sub
jbe
aad
mov
in
sahf
xor
pop
sbb
jae
ret
call
xlat
std
mov
mov
aam
inc
xchg
adc
call
lcall
into
or
sub
inc
add
or
sarl
jnp
xchg
fs
cltd
pop
test
inc
dec
stos
inc
cmp
jmp
imul
pop
mov
je
and
xchg
xor
lret
and
push
add
adc
jo
jge
and
in
jg
pop
inc
lea
aas
fwait
shrl
push
je
pop
sti
movsl
std
pop
les
push
sub
insb
push
push
push
lock
jmp
and
repnz
ljmp
dec
add
or
jp
ret
imul
outsl
sub
and
scas
pop
je
inc
push
inc
clc
add
nop
subl
lea
pushf
adc
inc
jp
fimuls
push
pop
repnz
cmc
and
rcll
shlb
jge
and
stc
or
loopne
adcb
dec
adc
sbb
xchg
sub
mov
adc
sub
pop
or
fs
mov
jns
or
pop
lahf
icebp
pushf
in
das
movsl
adc
xchg
xchg
outsb
fidivs
aas
daa
pusha
clc
xchg
popa
push
into
xor
mov
inc
andl
xchg
sbb
and
ds
lahf
and
sbb
sub
je
lods
and
out
mov
mov
leave
mov
rcrl
lcall
add
sahf
sbb
mov
outsb
add
orl
adc
lret
adc
pushf
aas
jg
mov
fildl
rorl
sub
inc
mov
imul
ret
push
out
xor
insl
cmpsb
or
sbb
shrl
adc
addr16
shlb
dec
sbb
dec
movsl
jno
out
sbb
jmp
jle
jae
push
inc
jl
inc
add
add
sbb
ds
xchg
popa
xchg
jno
addr16
sub
dec
inc
mov
and
dec
mov
sbb
jl
mov
add
jl
pusha
inc
imul
pusha
mov
cmpsl
loopne
les
push
mov
mov
repnz
repz
ja
dec
sub
cwtl
cmp
mov
outsl
jns
push
xchg
jae
mov
out
mov
xor
dec
pop
cmp
add
inc
shrb
out
or
inc
push
xor
les
push
cs
add
fstpl
xchg
cmp
shrb
inc
call
push
nop
mov
pop
ret
adc
in
bound
and
mov
sbb
xchg
mov
call
lods
out
stc
daa
idivb
loope
mov
push
enter
hlt
push
test
sbb
push
sub
fsub
fdivrp
scas
push
pop
lea
jg
lods
pop
out
sub
lret
or
aam
in
jecxz
pop
pusha
in
std
lock
push
scas
lock
ja
cmp
lods
pop
jns
mov
xchg
outsl
add
sbb
test
je
or
xor
out
push
std
dec
jns
insb
fistpll
stos
movsl
shll
movsl
ss
ss
and
out
fcom
shl
mov
daa
outsl
xchg
push
and
pop
in
sahf
push
fldcw
shll
mov
loop
ret
pop
addr16
push
shll
pop
xchg
push
gs
inc
pusha
adc
sahf
mov
ja
mov
inc
cmp
fs
pop
dec
jg
negb
mov
mov
push
imul
loope
adc
push
jle
jae
xchg
es
cli
lds
jl
clc
pusha
sbb
pop
cmpsl
inc
and
cmc
loope
push
cmp
and
jae
add
jle
mov
or
in
adc
repz
shll
mov
dec
gs
and
or
mov
outsl
adc
lcall
jl
mov
xlat
mov
push
add
mov
xchg
test
sub
sub
imul
scas
test
mov
shrl
mov
stos
xchg
jmp
call
cmpsl
adc
insl
addr16
push
jno
loope
xor
in
rclb
out
ja
add
call
mov
stc
jne
loop
or
leave
mov
adc
ss
jne
sub
out
mov
sub
popa
jmp
lock
inc
adc
shrb
fldcw
lea
rolb
rcl
inc
fildl
test
or
fwait
jp
aas
jb
inc
and
pop
cltd
ret
mov
iret
int
data16
mov
aam
in
and
jae
cmc
jp
sbb
iret
xchg
stos
cld
push
mov
or
push
in
xor
mov
shlb
enter
rol
mov
inc
and
cmc
mov
mov
dec
lock
popf
dec
xchg
cli
or
xchg
mov
xchg
jp
xchg
mov
sbb
scas
movsl
jbe
out
lock
scas
out
mov
jmp
stos
sbb
xor
in
add
push
js
aas
cs
leave
mov
sub
clc
pop
or
mov
push
cmp
and
fsubrl
jbe
inc
mov
in
lock
loop
xor
lret
xor
loop
jp
into
sbb
popf
dec
mov
xchg
ja
jle
jbe
cmpsb
lret
addr16
jecxz
sbb
lock
mov
cmpl
rcl
and
cmp
inc
push
clc
test
je
xchg
mov
xor
int3
mov
pop
jb
dec
filds
adc
inc
sbb
loope
jecxz
sub
mov
xor
adc
aad
sbb
pop
hlt
mov
jl
add
push
loopne
sub
mov
sbb
adc
cmpsl
cmpsb
inc
inc
sbb
frstor
inc
push
cs
mov
pushf
shll
push
jnp
sbb
push
mov
cmc
xor
mov
jnp
out
clc
ja
test
pusha
dec
addr16
add
enter
outsl
xchg
inc
sub
mov
jge
push
mov
jl
repnz
mov
shlb
push
jne
pop
pop
add
xor
imul
dec
mov
out
pop
int
nop
ret
push
sub
adc
or
hlt
jmp
faddl
sub
je
je
lea
add
push
inc
sub
aad
orl
pop
add
test
leave
adc
dec
mov
inc
push
test
sahf
cli
jo
and
xor
pop
hlt
shr
sbb
and
add
adc
enter
mov
inc
mov
pop
fisubs
rcrb
inc
in
mov
cmpsl
out
fisubrl
imull
roll
mov
adc
xchg
adc
in
sti
mov
push
loop
adc
lock
mov
mov
adcl
iret
ret
adc
inc
je
rcl
pop
shl
xchg
sbb
dec
dec
ja
outsb
imul
insl
test
and
inc
adc
imul
stc
or
mov
out
adcl
pusha
cmp
test
aad
xchg
sti
cld
or
ret
and
pop
ja
sbb
cli
in
aad
xchg
sti
jo
mov
jae
div
stos
push
sub
leave
push
jae
pop
adc
sub
notb
xor
cmp
push
add
int
jno
jl
xor
push
mov
or
sub
mov
xor
jp
sarl
jno
jns
xchg
jle
xchg
lods
div
sub
std
outsl
mov
pop
push
fdivrp
sbb
adc
imul
push
push
mov
jno
pushf
in
ss
test
cmp
int
lods
xor
sub
mov
imul
jecxz
jne
pop
loope
hlt
idiv
xlat
push
rcrb
cli
push
xor
jmp
adc
xor
dec
adc
pushf
push
mov
mov
loope
xor
jge
or
std
mov
mov
enter
xchg
and
xchg
nop
shlb
sub
add
push
mov
lea
enter
mov
add
mov
jnp
mov
push
ret
mov
xor
es
sub
jnp
push
adc
pop
cmc
cmp
sbb
in
ss
inc
add
outsb
xchg
add
pop
and
es
ret
mov
xor
mov
movsl
sub
loopne
pop
fs
inc
xor
orl
mov
mov
fwait
push
imulb
cs
jnp
mov
add
test
cmp
out
fcomps
ret
gs
call
xor
test
dec
ljmp
mov
aaa
mov
pop
push
sbb
bnd
rcl
stc
and
push
nop
test
xchg
or
jmp
andl
xor
stc
adc
fnstenv
cld
sbb
push
aaa
push
mov
cltd
sbb
xchg
movb
inc
outsl
mov
mov
mov
inc
aas
ret
or
cmpsb
addr16
mov
xchg
iret
cwtl
cmp
cs
xlat
inc
pop
or
fnsave
in
mov
jbe
dec
xchg
jl
shlb
mov
xchg
jno
jnp
scas
add
popf
mov
xchg
out
lahf
cmpsl
pop
ret
rolb
mov
xchg
jl
push
insl
cmp
and
jp
rolb
into
inc
loop
jnp
sahf
loopne
in
adc
mov
xor
sti
xchg
sbb
sub
dec
jbe
xor
mov
mov
loop
int3
push
xchg
or
fs
dec
sbb
pushf
xchg
xchg
loopne
mov
sbb
into
xchg
dec
stos
or
test
mov
mov
in
mov
stc
xor
pop
inc
fcompl
lret
lahf
sub
sub
cmp
jle
pusha
f2xm1
mov
xor
inc
inc
and
push
cmp
imul
ds
stos
xchg
loope
sub
stc
xadd
iret
lahf
inc
sub
push
mov
fwait
lcall
inc
xchg
push
dec
adc
popf
add
mov
mov
push
test
leave
xlat
shlb
jb
sar
js
es
int3
sbb
test
cmp
lea
sbb
mov
enter
flds
pusha
out
xor
and
jl
outsb
xor
lea
push
lds
ret
push
div
test
into
lods
clc
pop
loopne
xor
popa
mov
xchg
insl
loope
leave
sub
movsl
cmp
aad
inc
idivl
js
lea
add
adc
inc
add
aad
and
mov
and
ja
xchg
arpl
insb
sub
scas
in
jmp
insl
pop
sarl
inc
or
or
clc
fimuls
sub
dec
mov
push
and
lcall
inc
in
xchg
add
jle
mov
lret
aaa
inc
jecxz
mov
aam
mov
scas
ret
pop
mov
push
clc
sbb
ficomps
clc
aam
cwtl
sub
fldt
pop
lret
lret
adc
outsb
jl
testl
outsb
fsubrs
xor
aad
mov
mov
in
bound
int
lret
mov
inc
lods
cli
jecxz
or
addr16
mov
xchg
aas
and
push
lret
std
mov
cmpsb
sahf
mov
clc
rol
jb
int
fxch
scas
fs
push
popf
icebp
push
ja
sub
sbb
inc
frstor
or
pop
xchg
sbb
push
push
pop
shlb
pop
cmpsl
sub
mov
pop
mov
add
jb
pop
dec
or
sub
arpl
fdivrs
cmp
xchg
sbb
sahf
add
in
addr16
mulb
sub
push
aam
sbb
push
mov
push
lock
mov
mov
mov
lret
adc
addr16
pop
std
test
xor
inc
sub
pushf
adc
insl
popw
dec
call
jne
fbld
sahf
push
add
outsl
int3
test
aaa
movb
push
loopne
popf
inc
sbb
push
les
bound
dec
lods
rolb
cmp
imull
dec
xchg
pop
push
pop
stos
into
pop
or
dec
fwait
jmp
stos
inc
in
lea
and
daa
gs
lods
or
aam
cmpsb
pushf
fstpt
sahf
int
jns
movsb
pop
out
dec
sbbl
xor
stos
aas
xor
inc
leave
inc
aam
xor
mov
test
pop
lret
fneni(8087
mov
adc
aad
lcall
cld
xor
sub
cmp
pop
mov
sbbb
push
test
xchg
mov
cmp
mov
add
or
or
sub
leave
sub
iret
jb
dec
cwtl
int3
loop
cmp
and
mov
aam
xchg
jnp
mov
bound
fadd
lods
push
lahf
push
dec
ret
scas
mov
shr
mul
std
pusha
shr
mov
ja
addl
xchg
cmp
push
orl
pop
mov
lret
enter
mov
pop
and
or
cmp
xchg
in
add
aad
shrb
out
xor
push
xor
lahf
stos
fisttps
mov
cmpsb
xchg
loope
adc
add
pop
fcmovne
mov
sbb
mov
test
test
mov
xchg
xor
jne
jb
mov
inc
pop
sub
jp
leave
shrb
xchg
loop
adc
dec
cmp
mov
xchg
call
cmp
mov
or
in
dec
outsl
aam
mov
mov
pop
mov
cmp
jle
jecxz
hlt
cmpsl
mov
jne
pop
sub
xor
imul
imul
ret
mov
push
xchg
or
push
mov
arpl
test
xor
and
lea
lock
leave
inc
xchg
jnp
bound
sub
cmp
sbb
cmp
adc
jnp
and
push
mov
adcl
or
sar
mov
repz
nop
inc
mov
pop
push
clc
mov
jecxz
iret
ret
push
fsubp
lret
cmp
lods
pop
push
into
ss
out
and
lock
les
jge
and
xlat
sbbb
pop
mov
int3
outsl
jl
jnp
or
jmp
mov
inc
mov
rep
add
imul
inc
mov
les
push
out
subl
dec
call
pop
pop
mull
pop
ljmp
jp
sbbl
sti
or
pop
pop
pop
dec
daa
lea
jbe
out
push
sbb
out
cmp
loopne
popf
inc
jge
push
pushf
sar
mov
and
gs
insb
mov
mov
mov
xchg
aaa
dec
push
xor
xlat
mov
jbe
loopne
cmp
mov
push
dec
das
and
cmc
fs
and
xchg
and
push
jnp
clc
dec
xor
sbb
inc
inc
inc
and
lock
jno
mov
push
loopne
jnp
shll
dec
and
in
dec
test
clc
cmp
push
data16
lret
sbb
mov
jmp
repz
lods
insb
sbb
sbb
sti
loop
xchg
jg
cltd
les
js
gs
add
test
out
mov
mov
push
cmp
and
sub
sbb
imulb
dec
xchg
dec
sub
push
or
lods
sarl
sbb
hlt
push
or
frstor
sbb
ss
outsb
jae
shrb
addb
xor
inc
imul
filds
test
mov
aam
mov
and
sbb
and
mov
jle
and
xchg
dec
pop
sub
mov
and
mov
push
enter
nop
shll
into
outsl
nop
jbe
rcrl
xchg
lods
rol
xor
or
inc
es
adc
inc
flds
movsl
iret
mov
push
int
insl
and
aaa
aaa
xchg
out
xchg
and
out
pop
mov
sub
sub
pop
xor
xchg
dec
xchg
sbb
jns
pop
js
jmp
cltd
xchg
std
jnp
ss
test
mov
out
adc
or
sahf
aam
std
cmp
mov
sub
cmc
call
mov
push
or
fcomp
adc
stos
movsb
aad
inc
std
js
popf
adc
inc
push
jge
outsb
dec
test
testl
aas
ljmp
mov
andl
xchg
adc
adc
and
push
lret
out
add
pop
xchg
in
cmpsb
and
push
call
shlb
add
clc
xchg
ret
in
leave
pop
pop
adc
adc
mov
mov
popf
pop
pushf
call
repz
dec
mov
scas
jle
fsubrp
xchg
adc
pop
test
mov
mov
loopne
sub
cmp
jnp
or
ret
jns
gs
mov
adc
mov
sbb
mov
fdivrs
dec
fstpt
add
paddd
xchg
aam
movsb
jl
mov
pop
sub
outsb
pusha
fstpl
mov
jl
cmpsl
in
sbb
jmp
pop
sbbl
sti
xor
adc
daa
xchg
pop
mov
push
jle
loopne
lret
push
xchg
adc
jl
shll
xchg
pop
jb
in
enter
repnz
pop
jl
into
pop
xor
addr16
pop
lcall
pop
xchg
cmpsl
jns
xor
mov
pusha
cld
rcrl
mov
mov
movsb
add
cmc
sub
jle
add
or
imul
pop
inc
leave
xchg
movsb
adc
mov
sub
jno
inc
or
aaa
mov
movsb
pop
loop
xor
adc
adc
test
jnp
fwait
shrl
inc
mov
dec
xchg
rorl
cmpsl
push
ficomps
cmp
sbb
xchg
fwait
pop
jae
mov
jb
xchg
and
xchg
or
arpl
sbb
shll
and
pop
sub
addr16
or
fisubl
sahf
add
ret
fcmove
or
sbb
push
roll
je
xlat
daa
call
push
in
jnp
mov
or
insb
add
aas
xchg
fsubl
adc
ret
inc
jg
add
out
push
mov
adc
inc
dec
clc
ficoms
push
xor
stc
or
push
pop
popa
aam
sar
add
mov
mov
aas
mov
cmp
jp
incl
outsb
lret
adc
out
push
xchg
mov
sub
fdivr
mov
jno
ss
xchg
pop
shll
add
in
mov
adc
mov
xchg
sub
sub
es
add
leave
mov
mov
int3
cltd
add
jl
aaa
push
sbb
inc
sub
repz
fists
test
pop
out
adc
inc
scas
in
pop
or
sbb
sub
mov
std
adc
xorl
call
cmp
jbe
xlat
adc
and
mov
shll
mov
lock
jno
mov
jae
das
insb
iret
outsl
loop
mov
inc
dec
mov
test
andl
scas
add
daa
addr16
inc
sbb
sbb
and
shll
movsb
lahf
jb
xchg
ljmp
adc
dec
push
or
repnz
dec
mov
or
mov
adc
enter
push
inc
jns
add
push
mov
repnz
xor
leave
daa
mov
pop
test
pop
repz
pusha
mov
icebp
in
push
popf
call
lds
sbb
lahf
adc
arpl
jnp
xchg
stos
pop
mov
int
cmpsb
xor
dec
jae
test
dec
ds
sahf
xchg
outsb
sbb
out
in
lcall
testb
mov
push
out
dec
and
les
je
jo
loop
clc
pop
mov
das
add
lcall
out
xchg
lcall
cmpsl
test
movsb
cwtl
imul
mov
push
idivb
xchg
push
lret
cmpsl
in
cmpsb
jge
xor
iret
loop
mov
sub
adc
jo
loope
push
and
insl
sub
push
test
rolb
fcoms
outsb
jb
pop
mov
pop
pushf
sahf
imul
mov
sub
bound
mov
mov
lret
push
pusha
daa
mov
shll
nop
lock
imul
jbe
gs
mov
dec
out
nop
fld
jle
daa
inc
pop
mov
jne
push
push
fisubrl
pop
pop
stos
movsl
popw
sub
aam
roll
adc
clc
rclb
dec
inc
fistps
sub
xchg
mov
insb
adcb
pop
movsb
sub
and
xchg
cltd
movsb
mov
mov
arpl
shrl
cmp
add
adc
jb
sbb
pushf
int3
mov
cli
jns
shr
add
test
mov
pop
mov
push
pop
mov
jae
repnz
adc
lahf
xor
imulb
jno
inc
outsl
into
push
add
movb
lds
sbb
into
and
adc
xchg
out
or
lods
jns
enter
or
push
cmc
adc
jbe
in
jno
loopne
popf
lods
jb
dec
dec
cld
jae
xor
sarb
jns
sti
aam
dec
shll
push
cld
adc
les
and
cltd
jnp
jg
jnp
and
dec
mov
pop
les
lcall
int3
and
fs
aaa
addb
divl
into
nop
lea
dec
dec
inc
stos
popa
jg
push
push
imul
mov
fs
pop
out
mov
mov
or
lret
push
lret
imul
jb
or
ret
cld
jecxz
adc
cmp
or
adc
pop
mov
jecxz
adc
sub
ret
cld
in
mov
push
imul
shll
or
fwait
cld
xor
mov
xor
cmp
add
sub
inc
idivb
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
jmp
popa
dec
or
cmp
add
pop
shlb
testl
fldl
mov
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
dec
mov
fmull
cmpl
dec
push
or
add
and
push
pop
or
jbe
into
or
dec
insl
sbb
mov
dec
mov
push
cmp
sub
mov
or
xlat
inc
shlb
daa
cmp
test
stos
out
popf
arpl
fs
xor
pop
sti
or
xchg
xor
in
int3
push
pusha
pop
mov
or
xlat
inc
shlb
daa
dec
or
add
nop
cld
mov
inc
pop
stc
lods
xor
or
loop
idiv
pop
push
xor
xchg
dec
push
js
dec
or
cmp
sub
cmovge
cmp
inc
out
sub
add
cmp
outsl
icebp
dec
loope
ds
fildl
mov
invlpg
sub
sub
cmp
sub
invlpg
cmp
add
icebp
dec
pop
or
add
inc
sub
dec
jno
add
mov
cmp
sub
invlpg
cmp
sub
icebp
es
cmp
gs
dec
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
push
dec
cmp
lret
gs
ljmp
jge
mov
pop
dec
cmp
sub
jge
dec
pop
insb
fldl
shrb
ds
insb
fldl
movsb
sub
add
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
sub
invlpg
cmp
subb
add
adc
pop
jne
pop
add
jbe
loop
sub
dec
bound
ja
inc
clc
sbb
in
sbb
dec
xor
pop
ret
push
sbb
dec
jp
jg
inc
int3
ret
jb
adc
and
mov
or
pop
dec
jle
fisttpl
add
mov
pop
inc
lock
hlt
jns
and
idiv
lea
push
fisttps
mov
test
sub
push
jge
jne
xchg
and
es
adc
pop
in
enter
scas
repnz
jnp
stc
xchg
mov
les
adc
dec
pop
mov
cmpsb
icebp
xor
icebp
and
sub
sbb
push
fisttpll
push
pop
enter
inc
xchg
inc
jno
ret
gs
xchg
jge
inc
push
loopne
shlb
mov
inc
dec
cmc
sahf
sub
jo
mov
mov
mov
jmp
push
movsl
adc
pop
sti
fstp
sbb
add
int
xlat
cmp
fldl
jecxz
push
inc
enter
sti
lret
mov
push
adc
cmp
dec
fildl
push
pusha
mov
push
mov
clc
mov
jp
xchg
inc
mov
adc
ds
sub
insb
sbb
jb
pop
push
insl
fcomps
add
push
xchg
pop
add
ds
inc
adc
addr16
popa
test
cmpsb
mov
jbe
pop
roll
lods
fs
cs
cmp
mov
scas
movsb
lds
shlb
cmp
shlb
inc
fiadds
mov
sbb
ret
insb
movsb
nopl
insb
sbb
cmpl
xchg
leave
scas
outsb
mov
jle
lods
les
ucomiss
nop
shrb
aaa
andps
test
and
addr16
mov
or
fwait
cmpsl
push
jge
popa
sub
test
in
jmp
pop
pop
jge
inc
and
inc
dec
in
mov
pop
adc
jno
or
lret
ret
cltd
xor
in
mov
icebp
push
cmp
arpl
imul
ret
in
lods
jbe
in
stc
sub
pushf
mov
lds
jle
shlb
jno
xor
out
dec
cmp
xor
jbe
or
hlt
cmp
push
sbb
dec
js
or
pushl
int
mov
outsb
cmp
adc
or
out
push
mov
xchg
sti
jnp
scas
inc
daa
or
xchg
sbb
mov
or
xchg
stos
dec
mov
push
push
and
lds
mov
cmp
cmpl
jp
lret
cmp
das
adcl
mov
inc
imul
lret
mov
or
rcr
fidivrl
aas
adc
mov
add
out
daa
sbb
dec
sysexit
or
xor
mov
jge
inc
push
mov
xchg
aaa
out
out
sbb
adc
sub
jle
out
jbe
adc
dec
sub
jl
pop
inc
idivb
and
int3
rcl
mov
insl
hlt
shrb
sub
sub
mov
sbb
ror
aad
pushf
push
and
stc
xchg
mov
fidivl
cmp
popl
cld
jge
sbb
mov
ficompl
sub
sbb
fs
gs
jb
addr16
test
dec
mov
push
or
pop
aam
shrb
jae
push
pop
mov
shlb
sbb
movsl
mov
mov
jo
xchg
sub
adc
in
cmpsl
pushf
sub
add
es
mov
xchg
negl
sahf
out
les
stos
push
pop
inc
repz
outsb
push
nop
jns
jnp
and
push
push
lret
push
add
outsb
pop
jbe
cwtl
inc
aam
jmp
jl
sti
pusha
mov
das
mov
push
in
dec
mov
mov
xchg
sbb
lret
push
cmpl
xchg
mov
push
sbb
jg
dec
adc
outsb
fisubl
jg
ret
xor
jo
add
adc
lret
cli
pfcmpgt
sbb
inc
mov
xchg
js
xor
lret
fimuls
scas
call
ja
lea
xor
mov
pop
cwtl
push
test
xor
push
inc
jecxz
test
or
dec
xor
gs
cli
pop
jae,pn
roll
mov
rclb
xor
inc
pop
insb
sub
lret
xor
pop
mov
mov
adc
insb
cmpl
insb
cld
mov
jecxz
mov
sbb
sbb
gs
cmc
enter
jb
push
idiv
or
fs
leave
int
jp
enter
add
lods
push
roll
imul
mov
jo
xor
and
xchg
insb
add
shrb
clc
cwtl
stos
lcall
fs
or
xor
dec
dec
cwtl
push
aas
add
jg
jecxz
push
sub
adc
push
push
mov
popa
stc
jmp
jge
arpl
loop
cmp
jle
jae
cltd
mov
push
adc
add
pop
adc
mov
jmp
gs
jno
ds
jb
mov
rorl
sahf
dec
sub
push
outsb
rclb
repnz
adc
loop
lods
fcomps
into
out
mov
jmp
imul
push
stc
leave
mov
mov
mov
add
insl
addl
lods
adc
push
outsl
xor
ret
lds
jge
pop
jo
sbb
stc
push
std
adc
fisubl
xor
jp
mov
jecxz
aam
lods
dec
or
sub
pusha
sub
call
outsb
rorb
adc
pop
fildll
xor
mov
out
shrb
in
cmp
add
push
xor
aaa
or
push
icebp
pop
xor
xchg
lods
aaa
cmp
outsb
cmp
jno
dec
and
ljmp
mov
inc
xchg
fstpl
mov
mov
lods
lock
fildl
cmp
push
popa
mov
adc
dec
ds
sti
stos
aam
pop
subb
bound
rcrb
fsubl
sbb
cmpl
jl
jmp
hlt
lods
rorb
imul
popf
adc
aas
fisubs
stc
test
cwtl
sub
stos
mov
movsl
jno
out
dec
dec
pop
or
inc
jecxz
sub
inc
iret
sub
lcall
cmp
insb
mov
ds
imul
sbb
and
sub
test
flds
aas
lret
mov
lea
push
lds
pusha
push
xchg
ror
or
out
sub
out
push
pop
sahf
loope
mov
shll
fld
stos
inc
pop
xchg
mov
inc
les
aas
ja
fucompp
imulb
push
adc
repz
xor
repz
movsl
push
xchg
push
loopne
and
adc
inc
xlat
dec
enter
pop
cltd
inc
aad
mov
pop
xor
addl
xlat
mov
cmpsb
dec
test
pusha
into
xor
jg
pop
stc
sbb
mov
mov
out
fisttpl
dec
add
pushf
out
mov
fdivl
push
mov
movsl
ret
je
mov
and
push
popf
or
lret
dec
and
fs
and
push
fsts
mov
rcrl
outsl
jae
mov
dec
xchg
adc
and
and
add
fwait
into
sti
loop
andl
mov
or
sub
inc
sar
pop
mov
add
push
idiv
sub
cwtl
mov
inc
filds
jmp
pop
lods
or
inc
cmpsl
xor
iret
jns
pop
jb
pop
xor
cmp
mov
aam
and
and
cltd
or
jp
sub
xchg
imulb
stos
mov
mov
aad
sbb
sbb
jl
xor
sub
push
pop
fisubl
dec
je
mov
mov
cli
mov
add
out
scas
dec
ljmp
push
lds
subb
movsl
cs
cmp
inc
adc
stos
movsl
int
js
xchg
sub
adc
ret
jg
sbb
sarb
pop
adc
cmp
lds
imul
aas
cmp
testl
insb
sbb
mov
fnstenv
mov
sarl
and
cmpsl
fidivrl
shrl
out
push
or
inc
inc
test
or
fucomp
add
push
lds
add
stc
pop
fwait
sbb
jge
movsl
enter
mov
or
xchg
dec
push
mov
mov
call
into
inc
xor
pushf
dec
je
pop
pop
push
les
push
dec
repz
lds
loopne
push
ficomps
and
push
mov
dec
repz
fwait
les
lret
movsl
scas
xchg
inc
adc
adc
sbb
adc
int
push
sahf
lock
mov
mov
int3
mov
sbb
xchg
fs
add
mul
outsl
sbb
sbb
mov
lcall
mov
insl
aam
out
insb
int
repnz
leave
sbb
jecxz
cmc
addb
mov
popf
or
ja
lods
mov
fs
aam
outsl
test
and
jnp
outsl
scas
fsubrs
lret
push
cmpsb
gs
jmp
js
pop
xor
sbb
cmp
mov
aas
mov
dec
push
sarb
xchg
rcpps
ljmp
pop
push
jl
ret
mov
arpl
cmc
xlat
daa
fidivrs
and
js
inc
rcll
stos
cmc
ljmp
aaa
push
out
xor
test
jns
xchg
add
sbb
stos
push
daa
lds
ret
pop
push
pop
pop
push
test
pop
mov
lods
mov
les
movsb
or
gs
sbb
mov
ds
in
les
xchg
and
mov
fistl
dec
jbe
xchg
mov
mov
xchg
xchg
push
daa
outsl
cmp
xchg
arpl
push
ficompl
dec
sbb
ret
pushf
xchg
aas
jecxz
cmp
clc
bound
mov
cmp
movsb
addl
pop
cmp
cld
fadd
mov
mov
out
jbe
and
add
or
mov
xor
aam
stos
outsl
mov
push
xchg
daa
sub
xchg
imul
test
imul
js
aam
jns
insb
ret
data16
inc
loopne
jl
cs
xorb
cld
lods
add
jnp
xchg
dec
mov
dec
fs
inc
popa
xchg
faddl
clc
push
flds
mov
push
rcrb
icebp
mov
js
or
leave
xchg
mov
push
xchg
pop
sbb
lcall
jecxz
mov
mov
dec
xchg
cmp
xchg
fldcw
add
push
popf
in
mov
lret
xor
or
data16
sub
mov
movsb
enter
dec
insl
cld
and
leave
jecxz
xor
dec
and
pop
leave
sub
inc
and
out
cld
sahf
xchg
nop
xchg
xchg
xchg
pop
int3
and
pop
add
mov
std
pop
push
pop
cmp
or
jg
xlat
movsl
cmp
clc
test
lahf
shll
inc
arpl
mov
out
aam
adc
xchg
aad
scas
fldenv
cltd
push
fscale
lret
orb
sub
les
rolb
add
test
jecxz
stos
mov
inc
ret
dec
lret
mov
cltd
fildll
xchg
mov
aad
cmpsl
add
jl
adc
pop
xchg
dec
adc
or
adc
int3
imul
jae
add
insl
shlb
jmp
and
pop
xchg
pop
cmpsb
movsw
add
imul
std
repnz
out
pushf
cmp
inc
xor
gs
mov
dec
pop
stos
sti
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
